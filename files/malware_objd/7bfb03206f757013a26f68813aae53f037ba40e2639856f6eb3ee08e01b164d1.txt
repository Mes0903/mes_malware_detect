
7bfb03206f757013a26f68813aae53f037ba40e2639856f6eb3ee08e01b164d1.exe:     file format pei-i386


Disassembly of section .text:

64001000 <.text>:
64001000:	mov    DWORD PTR [ecx],0x6402425c
64001006:	jmp    0x64011e3b
6400100b:	int3   
6400100c:	int3   
6400100d:	int3   
6400100e:	int3   
6400100f:	int3   
64001010:	push   esi
64001011:	mov    esi,ecx
64001013:	mov    DWORD PTR [esi],0x6402425c
64001019:	call   0x64011e3b
6400101e:	test   BYTE PTR [esp+0x8],0x1
64001023:	je     0x6400102e
64001025:	push   esi
64001026:	call   0x64011d22
6400102b:	add    esp,0x4
6400102e:	mov    eax,esi
64001030:	pop    esi
64001031:	ret    0x4
64001034:	int3   
64001035:	int3   
64001036:	int3   
64001037:	int3   
64001038:	int3   
64001039:	int3   
6400103a:	int3   
6400103b:	int3   
6400103c:	int3   
6400103d:	int3   
6400103e:	int3   
6400103f:	int3   
64001040:	mov    eax,DWORD PTR [esp+0x4]
64001044:	push   0x64029c64
64001049:	lea    ecx,[esp+0x8]
6400104d:	push   ecx
6400104e:	mov    DWORD PTR [esp+0xc],eax
64001052:	call   0x6401216b
64001057:	int3   
64001058:	int3   
64001059:	int3   
6400105a:	int3   
6400105b:	int3   
6400105c:	int3   
6400105d:	int3   
6400105e:	int3   
6400105f:	int3   
64001060:	push   ecx
64001061:	push   ebx
64001062:	push   esi
64001063:	push   edi
64001064:	push   0x2710
64001069:	call   DWORD PTR ds:0x6402404c
6400106f:	mov    esi,DWORD PTR [esp+0x14]
64001073:	mov    ebx,DWORD PTR ds:0x64024084
64001079:	mov    DWORD PTR [esp+0xc],0x0
64001081:	xor    edi,edi
64001083:	push   0x0
64001085:	lea    eax,[esp+0x18]
64001089:	push   eax
6400108a:	push   0x4
6400108c:	lea    ecx,[esp+0x18]
64001090:	push   ecx
64001091:	push   esi
64001092:	call   ebx
64001094:	test   eax,eax
64001096:	je     0x640010a0
64001098:	add    edi,0x1
6400109b:	cmp    edi,0xa
6400109e:	jne    0x64001083
640010a0:	test   esi,esi
640010a2:	je     0x640010ba
640010a4:	call   DWORD PTR ds:0x64024044
640010aa:	push   esi
640010ab:	mov    edi,eax
640010ad:	call   DWORD PTR ds:0x64024040
640010b3:	push   edi
640010b4:	call   DWORD PTR ds:0x6402405c
640010ba:	pop    edi
640010bb:	pop    esi
640010bc:	xor    eax,eax
640010be:	pop    ebx
640010bf:	pop    ecx
640010c0:	ret    0x4
640010c3:	int3   
640010c4:	int3   
640010c5:	int3   
640010c6:	int3   
640010c7:	int3   
640010c8:	int3   
640010c9:	int3   
640010ca:	int3   
640010cb:	int3   
640010cc:	int3   
640010cd:	int3   
640010ce:	int3   
640010cf:	int3   
640010d0:	sub    esp,0x14
640010d3:	push   ebx
640010d4:	mov    ebx,DWORD PTR ds:0x64024048
640010da:	push   esi
640010db:	mov    esi,DWORD PTR [esp+0x20]
640010df:	push   edi
640010e0:	mov    edi,DWORD PTR [esi+0xc]
640010e3:	push   0x2
640010e5:	push   0x0
640010e7:	push   0x0
640010e9:	lea    eax,[esp+0x18]
640010ed:	push   eax
640010ee:	mov    DWORD PTR [esp+0x1c],0x0
640010f6:	call   ebx
640010f8:	push   eax
640010f9:	push   edi
640010fa:	call   ebx
640010fc:	push   eax
640010fd:	call   DWORD PTR ds:0x64024078
64001103:	test   eax,eax
64001105:	je     0x64001199
6400110b:	mov    ecx,DWORD PTR [esp+0xc]
6400110f:	push   0x0
64001111:	push   0x0
64001113:	push   ecx
64001114:	push   0x64001060
64001119:	push   0x0
6400111b:	push   0x0
6400111d:	call   DWORD PTR ds:0x6402406c
64001123:	push   0x0
64001125:	lea    edx,[esp+0x18]
64001129:	push   edx
6400112a:	push   0x4
6400112c:	mov    edi,eax
6400112e:	mov    eax,DWORD PTR [esi+0x8]
64001131:	lea    ecx,[esp+0x30]
64001135:	push   ecx
64001136:	push   eax
64001137:	mov    DWORD PTR [esp+0x24],edi
6400113b:	mov    DWORD PTR [esp+0x38],0x0
64001143:	call   DWORD PTR ds:0x64024088
64001149:	test   eax,eax
6400114b:	je     0x6400117f
6400114d:	cmp    DWORD PTR [esp+0x14],0x4
64001152:	jne    0x6400117f
64001154:	mov    edx,DWORD PTR [esp+0x24]
64001158:	mov    eax,DWORD PTR [esi+0x4]
6400115b:	push   0x0
6400115d:	lea    ecx,[esp+0x20]
64001161:	push   ecx
64001162:	mov    DWORD PTR [esp+0x20],edx
64001166:	push   0x4
64001168:	lea    edx,[esp+0x24]
6400116c:	push   edx
6400116d:	push   eax
6400116e:	call   DWORD PTR ds:0x64024084
64001174:	lea    ecx,[esp+0x10]
64001178:	call   0x64001680
6400117d:	jmp    0x64001199
6400117f:	test   edi,edi
64001181:	je     0x64001199
64001183:	call   DWORD PTR ds:0x64024044
64001189:	push   edi
6400118a:	mov    ebx,eax
6400118c:	call   DWORD PTR ds:0x64024040
64001192:	push   ebx
64001193:	call   DWORD PTR ds:0x6402405c
64001199:	call   0x640016d0
6400119e:	push   esi
6400119f:	call   0x64011d22
640011a4:	add    esp,0x4
640011a7:	pop    edi
640011a8:	pop    esi
640011a9:	xor    eax,eax
640011ab:	pop    ebx
640011ac:	add    esp,0x14
640011af:	ret    0x4
640011b2:	int3   
640011b3:	int3   
640011b4:	int3   
640011b5:	int3   
640011b6:	int3   
640011b7:	int3   
640011b8:	int3   
640011b9:	int3   
640011ba:	int3   
640011bb:	int3   
640011bc:	int3   
640011bd:	int3   
640011be:	int3   
640011bf:	int3   
640011c0:	push   0xffffffff
640011c2:	push   0x64022359
640011c7:	mov    eax,fs:0x0
640011cd:	push   eax
640011ce:	sub    esp,0x30
640011d1:	mov    eax,ds:0x6402c09c
640011d6:	xor    eax,esp
640011d8:	mov    DWORD PTR [esp+0x2c],eax
640011dc:	push   ebx
640011dd:	push   ebp
640011de:	push   esi
640011df:	push   edi
640011e0:	mov    eax,ds:0x6402c09c
640011e5:	xor    eax,esp
640011e7:	push   eax
640011e8:	lea    eax,[esp+0x44]
640011ec:	mov    fs:0x0,eax
640011f2:	mov    esi,ecx
640011f4:	xor    ebx,ebx
640011f6:	mov    DWORD PTR [esp+0x1c],ebx
640011fa:	mov    edi,edx
640011fc:	mov    DWORD PTR [esi+0x18],0xf
64001203:	mov    DWORD PTR [esi+0x14],ebx
64001206:	mov    DWORD PTR [esp+0x20],esi
6400120a:	mov    DWORD PTR [esp+0x18],edi
6400120e:	mov    BYTE PTR [esi+0x4],bl
64001211:	mov    DWORD PTR [esp+0x4c],ebx
64001215:	mov    ebp,0x1
6400121a:	mov    DWORD PTR [esp+0x1c],ebp
6400121e:	call   DWORD PTR ds:0x64024080
64001224:	xor    ecx,ecx
64001226:	cmp    ecx,ebx
64001228:	jle    0x64001237
6400122a:	cmp    WORD PTR [eax+ecx*2-0x2],bx
6400122f:	jne    0x64001237
64001231:	cmp    WORD PTR [eax+ecx*2],bx
64001235:	je     0x6400123b
64001237:	add    ecx,ebp
64001239:	jmp    0x64001226
6400123b:	add    ecx,ecx
6400123d:	push   ecx
6400123e:	push   eax
6400123f:	lea    ecx,[esp+0x2c]
64001243:	mov    DWORD PTR [esp+0x44],0xf
6400124b:	mov    DWORD PTR [esp+0x40],ebx
6400124f:	mov    BYTE PTR [esp+0x30],bl
64001253:	call   0x64001860
64001258:	push   ebx
64001259:	lea    edx,[esp+0x28]
6400125d:	push   edx
6400125e:	or     eax,0xffffffff
64001261:	mov    DWORD PTR [esp+0x54],ebp
64001265:	call   0x640019d0
6400126a:	mov    BYTE PTR [esp+0x4c],bl
6400126e:	cmp    DWORD PTR [esp+0x3c],0x10
64001273:	jb     0x64001282
64001275:	mov    eax,DWORD PTR [esp+0x28]
64001279:	push   eax
6400127a:	call   0x64011d22
6400127f:	add    esp,0x4
64001282:	mov    edx,DWORD PTR ds:0x6402d560
64001288:	mov    eax,DWORD PTR [edx+0xc]
6400128b:	mov    ecx,0x6402d560
64001290:	call   eax
64001292:	add    eax,0x10
64001295:	mov    DWORD PTR [esp+0x14],eax
64001299:	mov    DWORD PTR [esp+0x4c],0x2
640012a1:	mov    eax,DWORD PTR [edi]
640012a3:	push   eax
640012a4:	lea    ecx,[esp+0x18]
640012a8:	push   0x640265a8
640012ad:	push   ecx
640012ae:	call   0x64001d40
640012b3:	mov    edi,DWORD PTR [esp+0x20]
640012b7:	mov    ebp,DWORD PTR [edi-0xc]
640012ba:	add    esp,0xc
640012bd:	cmp    DWORD PTR [edi-0x4],0x1
640012c1:	jle    0x640012d3
640012c3:	mov    edx,ebp
640012c5:	push   edx
640012c6:	lea    ecx,[esp+0x18]
640012ca:	call   0x64001950
640012cf:	mov    edi,DWORD PTR [esp+0x14]
640012d3:	lea    eax,[ebp+ebp*1+0x2]
640012d7:	push   eax
640012d8:	push   edi
640012d9:	lea    ecx,[esp+0x2c]
640012dd:	mov    DWORD PTR [esp+0x44],0xf
640012e5:	mov    DWORD PTR [esp+0x40],ebx
640012e9:	mov    BYTE PTR [esp+0x30],bl
640012ed:	call   0x64001860
640012f2:	push   ebx
640012f3:	lea    ecx,[esp+0x28]
640012f7:	push   ecx
640012f8:	or     eax,0xffffffff
640012fb:	mov    BYTE PTR [esp+0x54],0x3
64001300:	call   0x640019d0
64001305:	cmp    DWORD PTR [esp+0x3c],0x10
6400130a:	jb     0x64001319
6400130c:	mov    edx,DWORD PTR [esp+0x28]
64001310:	push   edx
64001311:	call   0x64011d22
64001316:	add    esp,0x4
64001319:	add    edi,0xfffffff0
6400131c:	mov    DWORD PTR [esp+0x3c],0xf
64001324:	mov    DWORD PTR [esp+0x38],ebx
64001328:	mov    BYTE PTR [esp+0x28],bl
6400132c:	mov    BYTE PTR [esp+0x4c],bl
64001330:	lea    eax,[edi+0xc]
64001333:	or     ecx,0xffffffff
64001336:	lock xadd DWORD PTR [eax],ecx
6400133a:	dec    ecx
6400133b:	test   ecx,ecx
6400133d:	jg     0x64001349
6400133f:	mov    ecx,DWORD PTR [edi]
64001341:	mov    edx,DWORD PTR [ecx]
64001343:	mov    eax,DWORD PTR [edx+0x4]
64001346:	push   edi
64001347:	call   eax
64001349:	mov    edx,DWORD PTR ds:0x6402d560
6400134f:	mov    eax,DWORD PTR [edx+0xc]
64001352:	mov    ecx,0x6402d560
64001357:	call   eax
64001359:	add    eax,0x10
6400135c:	mov    DWORD PTR [esp+0x14],eax
64001360:	mov    ecx,DWORD PTR [esp+0x18]
64001364:	mov    DWORD PTR [esp+0x4c],0x4
6400136c:	mov    eax,DWORD PTR [ecx+0xc]
6400136f:	push   eax
64001370:	lea    edx,[esp+0x18]
64001374:	push   0x640265b4
64001379:	push   edx
6400137a:	call   0x64001d40
6400137f:	mov    edi,DWORD PTR [esp+0x20]
64001383:	mov    ebp,DWORD PTR [edi-0xc]
64001386:	add    esp,0xc
64001389:	cmp    DWORD PTR [edi-0x4],0x1
6400138d:	jle    0x6400139f
6400138f:	mov    eax,ebp
64001391:	push   eax
64001392:	lea    ecx,[esp+0x18]
64001396:	call   0x64001950
6400139b:	mov    edi,DWORD PTR [esp+0x14]
6400139f:	lea    ecx,[ebp+ebp*1+0x2]
640013a3:	push   ecx
640013a4:	push   edi
640013a5:	lea    ecx,[esp+0x2c]
640013a9:	mov    DWORD PTR [esp+0x44],0xf
640013b1:	mov    DWORD PTR [esp+0x40],ebx
640013b5:	mov    BYTE PTR [esp+0x30],bl
640013b9:	call   0x64001860
640013be:	push   ebx
640013bf:	lea    edx,[esp+0x28]
640013c3:	push   edx
640013c4:	or     eax,0xffffffff
640013c7:	mov    BYTE PTR [esp+0x54],0x5
640013cc:	call   0x640019d0
640013d1:	cmp    DWORD PTR [esp+0x3c],0x10
640013d6:	jb     0x640013e5
640013d8:	mov    eax,DWORD PTR [esp+0x28]
640013dc:	push   eax
640013dd:	call   0x64011d22
640013e2:	add    esp,0x4
640013e5:	mov    ebp,0xf
640013ea:	add    edi,0xfffffff0
640013ed:	mov    DWORD PTR [esp+0x3c],ebp
640013f1:	mov    DWORD PTR [esp+0x38],ebx
640013f5:	mov    BYTE PTR [esp+0x28],bl
640013f9:	mov    BYTE PTR [esp+0x4c],bl
640013fd:	lea    ecx,[edi+0xc]
64001400:	or     edx,0xffffffff
64001403:	lock xadd DWORD PTR [ecx],edx
64001407:	dec    edx
64001408:	test   edx,edx
6400140a:	jg     0x64001416
6400140c:	mov    ecx,DWORD PTR [edi]
6400140e:	mov    eax,DWORD PTR [ecx]
64001410:	mov    edx,DWORD PTR [eax+0x4]
64001413:	push   edi
64001414:	call   edx
64001416:	push   0x2
64001418:	push   0x640265c0
6400141d:	lea    eax,[esp+0x30]
64001421:	push   ebp
64001422:	push   eax
64001423:	mov    DWORD PTR [esp+0x4c],ebp
64001427:	mov    DWORD PTR [esp+0x48],ebx
6400142b:	mov    BYTE PTR [esp+0x38],bl
6400142f:	call   0x64011ed8
64001434:	mov    eax,DWORD PTR [esp+0x38]
64001438:	mov    edi,0x10
6400143d:	add    esp,0x10
64001440:	cmp    DWORD PTR [esp+0x3c],edi
64001444:	mov    DWORD PTR [esp+0x38],0x2
6400144c:	jae    0x64001452
6400144e:	lea    eax,[esp+0x28]
64001452:	mov    BYTE PTR [eax+0x2],bl
64001455:	push   ebx
64001456:	lea    ecx,[esp+0x28]
6400145a:	push   ecx
6400145b:	or     eax,0xffffffff
6400145e:	mov    DWORD PTR [esp+0x54],0x6
64001466:	call   0x640019d0
6400146b:	cmp    DWORD PTR [esp+0x3c],edi
6400146f:	jb     0x6400147e
64001471:	mov    edx,DWORD PTR [esp+0x28]
64001475:	push   edx
64001476:	call   0x64011d22
6400147b:	add    esp,0x4
6400147e:	mov    eax,esi
64001480:	mov    ecx,DWORD PTR [esp+0x44]
64001484:	mov    DWORD PTR fs:0x0,ecx
6400148b:	pop    ecx
6400148c:	pop    edi
6400148d:	pop    esi
6400148e:	pop    ebp
6400148f:	pop    ebx
64001490:	mov    ecx,DWORD PTR [esp+0x2c]
64001494:	xor    ecx,esp
64001496:	call   0x6401257c
6400149b:	add    esp,0x3c
6400149e:	ret    
6400149f:	int3   
640014a0:	push   0xffffffff
640014a2:	push   0x640224c8
640014a7:	mov    eax,fs:0x0
640014ad:	push   eax
640014ae:	sub    esp,0x24
640014b1:	push   ebx
640014b2:	push   ebp
640014b3:	push   esi
640014b4:	push   edi
640014b5:	mov    eax,ds:0x6402c09c
640014ba:	xor    eax,esp
640014bc:	push   eax
640014bd:	lea    eax,[esp+0x38]
640014c1:	mov    fs:0x0,eax
640014c7:	mov    eax,DWORD PTR [esp+0x48]
640014cb:	xor    edi,edi
640014cd:	push   0x10
640014cf:	mov    DWORD PTR [esp+0x28],eax
640014d3:	mov    DWORD PTR [esp+0x18],edi
640014d7:	call   0x64012101
640014dc:	add    esp,0x4
640014df:	cmp    eax,edi
640014e1:	je     0x640014f2
640014e3:	mov    DWORD PTR [eax],edi
640014e5:	mov    DWORD PTR [eax+0x4],edi
640014e8:	mov    DWORD PTR [eax+0x8],edi
640014eb:	mov    DWORD PTR [eax+0xc],edi
640014ee:	mov    esi,eax
640014f0:	jmp    0x640014f4
640014f2:	xor    esi,esi
640014f4:	mov    DWORD PTR [esp+0x34],esi
640014f8:	push   edi
640014f9:	lea    ecx,[esp+0x2c]
640014fd:	push   ecx
640014fe:	mov    DWORD PTR [esp+0x48],edi
64001502:	lea    edx,[esp+0x24]
64001506:	push   edx
64001507:	lea    eax,[esp+0x2c]
6400150b:	push   eax
6400150c:	mov    DWORD PTR [esp+0x38],0xc
64001514:	mov    DWORD PTR [esp+0x40],0x1
6400151c:	mov    DWORD PTR [esp+0x3c],edi
64001520:	mov    DWORD PTR [esp+0x30],edi
64001524:	mov    DWORD PTR [esp+0x2c],edi
64001528:	call   DWORD PTR ds:0x6402407c
6400152e:	test   eax,eax
64001530:	mov    ebx,DWORD PTR ds:0x64024044
64001536:	mov    ebp,DWORD PTR ds:0x64024040
6400153c:	je     0x64001594
6400153e:	mov    edi,DWORD PTR [esi+0x8]
64001541:	test   edi,edi
64001543:	mov    ecx,DWORD PTR [esp+0x20]
64001547:	mov    DWORD PTR [esp+0x14],ecx
6400154b:	je     0x64001561
6400154d:	call   ebx
6400154f:	push   edi
64001550:	mov    DWORD PTR [esp+0x1c],eax
64001554:	call   ebp
64001556:	mov    edx,DWORD PTR [esp+0x18]
6400155a:	push   edx
6400155b:	call   DWORD PTR ds:0x6402405c
64001561:	mov    eax,DWORD PTR [esp+0x14]
64001565:	mov    DWORD PTR [esi+0x8],eax
64001568:	mov    edi,DWORD PTR [esi+0xc]
6400156b:	test   edi,edi
6400156d:	mov    ecx,DWORD PTR [esp+0x1c]
64001571:	mov    DWORD PTR [esp+0x18],ecx
64001575:	je     0x6400158b
64001577:	call   ebx
64001579:	push   edi
6400157a:	mov    DWORD PTR [esp+0x18],eax
6400157e:	call   ebp
64001580:	mov    edx,DWORD PTR [esp+0x14]
64001584:	push   edx
64001585:	call   DWORD PTR ds:0x6402405c
6400158b:	mov    eax,DWORD PTR [esp+0x18]
6400158f:	mov    DWORD PTR [esi+0xc],eax
64001592:	xor    edi,edi
64001594:	push   edi
64001595:	lea    ecx,[esp+0x2c]
64001599:	push   ecx
6400159a:	lea    edx,[esp+0x24]
6400159e:	push   edx
6400159f:	lea    eax,[esp+0x2c]
640015a3:	push   eax
640015a4:	call   DWORD PTR ds:0x6402407c
640015aa:	test   eax,eax
640015ac:	je     0x64001602
640015ae:	mov    edi,DWORD PTR [esi]
640015b0:	test   edi,edi
640015b2:	mov    ecx,DWORD PTR [esp+0x20]
640015b6:	mov    DWORD PTR [esp+0x18],ecx
640015ba:	je     0x640015d0
640015bc:	call   ebx
640015be:	push   edi
640015bf:	mov    DWORD PTR [esp+0x18],eax
640015c3:	call   ebp
640015c5:	mov    edx,DWORD PTR [esp+0x14]
640015c9:	push   edx
640015ca:	call   DWORD PTR ds:0x6402405c
640015d0:	mov    eax,DWORD PTR [esp+0x18]
640015d4:	mov    DWORD PTR [esi],eax
640015d6:	mov    edi,DWORD PTR [esi+0x4]
640015d9:	test   edi,edi
640015db:	mov    ecx,DWORD PTR [esp+0x1c]
640015df:	mov    DWORD PTR [esp+0x18],ecx
640015e3:	je     0x640015f9
640015e5:	call   ebx
640015e7:	push   edi
640015e8:	mov    DWORD PTR [esp+0x18],eax
640015ec:	call   ebp
640015ee:	mov    edx,DWORD PTR [esp+0x14]
640015f2:	push   edx
640015f3:	call   DWORD PTR ds:0x6402405c
640015f9:	mov    eax,DWORD PTR [esp+0x18]
640015fd:	mov    DWORD PTR [esi+0x4],eax
64001600:	xor    edi,edi
64001602:	mov    ecx,DWORD PTR [esp+0x24]
64001606:	mov    edx,esi
64001608:	call   0x640011c0
6400160d:	push   edi
6400160e:	push   edi
6400160f:	push   esi
64001610:	push   0x640010d0
64001615:	push   edi
64001616:	push   edi
64001617:	call   DWORD PTR ds:0x6402406c
6400161d:	mov    esi,eax
6400161f:	cmp    esi,edi
64001621:	je     0x64001631
64001623:	call   ebx
64001625:	push   esi
64001626:	mov    edi,eax
64001628:	call   ebp
6400162a:	push   edi
6400162b:	call   DWORD PTR ds:0x6402405c
64001631:	mov    eax,DWORD PTR [esp+0x24]
64001635:	mov    ecx,DWORD PTR [esp+0x38]
64001639:	mov    DWORD PTR fs:0x0,ecx
64001640:	pop    ecx
64001641:	pop    edi
64001642:	pop    esi
64001643:	pop    ebp
64001644:	pop    ebx
64001645:	add    esp,0x30
64001648:	ret    
64001649:	int3   
6400164a:	int3   
6400164b:	int3   
6400164c:	int3   
6400164d:	int3   
6400164e:	int3   
6400164f:	int3   
64001650:	push   esi
64001651:	mov    esi,ecx
64001653:	cmp    DWORD PTR [esi+0x18],0x10
64001657:	jb     0x64001665
64001659:	mov    eax,DWORD PTR [esi+0x4]
6400165c:	push   eax
6400165d:	call   0x64011d22
64001662:	add    esp,0x4
64001665:	xor    eax,eax
64001667:	mov    DWORD PTR [esi+0x18],0xf
6400166e:	mov    DWORD PTR [esi+0x14],eax
64001671:	mov    BYTE PTR [esi+0x4],al
64001674:	pop    esi
64001675:	ret    
64001676:	int3   
64001677:	int3   
64001678:	int3   
64001679:	int3   
6400167a:	int3   
6400167b:	int3   
6400167c:	int3   
6400167d:	int3   
6400167e:	int3   
6400167f:	int3   
64001680:	push   esi
64001681:	mov    esi,ecx
64001683:	push   edi
64001684:	mov    edi,DWORD PTR [esi]
64001686:	test   edi,edi
64001688:	je     0x640016a2
6400168a:	push   ebx
6400168b:	call   DWORD PTR ds:0x64024044
64001691:	push   edi
64001692:	mov    ebx,eax
64001694:	call   DWORD PTR ds:0x64024040
6400169a:	push   ebx
6400169b:	call   DWORD PTR ds:0x6402405c
640016a1:	pop    ebx
640016a2:	pop    edi
640016a3:	mov    DWORD PTR [esi],0x0
640016a9:	pop    esi
640016aa:	ret    
640016ab:	int3   
640016ac:	int3   
640016ad:	int3   
640016ae:	int3   
640016af:	int3   
640016b0:	push   esi
640016b1:	mov    esi,DWORD PTR [eax]
640016b3:	test   esi,esi
640016b5:	je     0x640016c5
640016b7:	call   0x640016d0
640016bc:	push   esi
640016bd:	call   0x64011d22
640016c2:	add    esp,0x4
640016c5:	pop    esi
640016c6:	ret    
640016c7:	int3   
640016c8:	int3   
640016c9:	int3   
640016ca:	int3   
640016cb:	int3   
640016cc:	int3   
640016cd:	int3   
640016ce:	int3   
640016cf:	int3   
640016d0:	sub    esp,0x8
640016d3:	mov    eax,DWORD PTR [esi+0xc]
640016d6:	test   eax,eax
640016d8:	push   ebx
640016d9:	mov    ebx,DWORD PTR ds:0x64024040
640016df:	push   ebp
640016e0:	mov    ebp,DWORD PTR ds:0x6402405c
640016e6:	push   edi
640016e7:	mov    edi,DWORD PTR ds:0x64024044
640016ed:	mov    DWORD PTR [esp+0xc],eax
640016f1:	je     0x64001707
640016f3:	call   edi
640016f5:	mov    DWORD PTR [esp+0x10],eax
640016f9:	mov    eax,DWORD PTR [esp+0xc]
640016fd:	push   eax
640016fe:	call   ebx
64001700:	mov    ecx,DWORD PTR [esp+0x10]
64001704:	push   ecx
64001705:	call   ebp
64001707:	mov    DWORD PTR [esi+0xc],0x0
6400170e:	mov    eax,DWORD PTR [esi+0x8]
64001711:	test   eax,eax
64001713:	mov    DWORD PTR [esp+0x10],eax
64001717:	je     0x6400172d
64001719:	call   edi
6400171b:	mov    edx,DWORD PTR [esp+0x10]
6400171f:	push   edx
64001720:	mov    DWORD PTR [esp+0x10],eax
64001724:	call   ebx
64001726:	mov    eax,DWORD PTR [esp+0xc]
6400172a:	push   eax
6400172b:	call   ebp
6400172d:	mov    DWORD PTR [esi+0x8],0x0
64001734:	mov    eax,DWORD PTR [esi+0x4]
64001737:	test   eax,eax
64001739:	mov    DWORD PTR [esp+0x10],eax
6400173d:	je     0x64001753
6400173f:	call   edi
64001741:	mov    ecx,DWORD PTR [esp+0x10]
64001745:	push   ecx
64001746:	mov    DWORD PTR [esp+0x10],eax
6400174a:	call   ebx
6400174c:	mov    edx,DWORD PTR [esp+0xc]
64001750:	push   edx
64001751:	call   ebp
64001753:	mov    DWORD PTR [esi+0x4],0x0
6400175a:	mov    eax,DWORD PTR [esi]
6400175c:	test   eax,eax
6400175e:	mov    DWORD PTR [esp+0x10],eax
64001762:	je     0x64001772
64001764:	call   edi
64001766:	mov    edi,eax
64001768:	mov    eax,DWORD PTR [esp+0x10]
6400176c:	push   eax
6400176d:	call   ebx
6400176f:	push   edi
64001770:	call   ebp
64001772:	pop    edi
64001773:	pop    ebp
64001774:	mov    DWORD PTR [esi],0x0
6400177a:	pop    ebx
6400177b:	add    esp,0x8
6400177e:	ret    
6400177f:	int3   
64001780:	push   ebx
64001781:	mov    ebx,DWORD PTR [esp+0x8]
64001785:	push   ebp
64001786:	mov    ebp,DWORD PTR [esp+0x10]
6400178a:	cmp    DWORD PTR [ebx+0x14],ebp
6400178d:	push   esi
6400178e:	push   edi
6400178f:	mov    esi,ecx
64001791:	jae    0x64001798
64001793:	call   0x64011cde
64001798:	mov    edi,DWORD PTR [ebx+0x14]
6400179b:	mov    eax,DWORD PTR [esp+0x1c]
6400179f:	sub    edi,ebp
640017a1:	cmp    eax,edi
640017a3:	jae    0x640017a7
640017a5:	mov    edi,eax
640017a7:	cmp    esi,ebx
640017a9:	jne    0x640017ca
640017ab:	push   0xffffffff
640017ad:	add    edi,ebp
640017af:	push   edi
640017b0:	mov    ecx,esi
640017b2:	call   0x64001ac0
640017b7:	push   ebp
640017b8:	push   0x0
640017ba:	mov    ecx,esi
640017bc:	call   0x64001ac0
640017c1:	pop    edi
640017c2:	mov    eax,esi
640017c4:	pop    esi
640017c5:	pop    ebp
640017c6:	pop    ebx
640017c7:	ret    0xc
640017ca:	cmp    edi,0xfffffffe
640017cd:	jbe    0x640017d4
640017cf:	call   0x64011c9f
640017d4:	mov    eax,DWORD PTR [esi+0x18]
640017d7:	cmp    eax,edi
640017d9:	jae    0x640017f6
640017db:	mov    eax,DWORD PTR [esi+0x14]
640017de:	push   eax
640017df:	push   edi
640017e0:	mov    ecx,esi
640017e2:	call   0x64001b60
640017e7:	test   edi,edi
640017e9:	jbe    0x64001851
640017eb:	cmp    DWORD PTR [ebx+0x18],0x10
640017ef:	jb     0x64001820
640017f1:	mov    edx,DWORD PTR [ebx+0x4]
640017f4:	jmp    0x64001823
640017f6:	test   edi,edi
640017f8:	jne    0x640017e9
640017fa:	cmp    eax,0x10
640017fd:	mov    DWORD PTR [esi+0x14],edi
64001800:	jb     0x64001811
64001802:	mov    eax,DWORD PTR [esi+0x4]
64001805:	pop    edi
64001806:	mov    BYTE PTR [eax],0x0
64001809:	mov    eax,esi
6400180b:	pop    esi
6400180c:	pop    ebp
6400180d:	pop    ebx
6400180e:	ret    0xc
64001811:	lea    eax,[esi+0x4]
64001814:	pop    edi
64001815:	mov    BYTE PTR [eax],0x0
64001818:	mov    eax,esi
6400181a:	pop    esi
6400181b:	pop    ebp
6400181c:	pop    ebx
6400181d:	ret    0xc
64001820:	lea    edx,[ebx+0x4]
64001823:	mov    ecx,DWORD PTR [esi+0x18]
64001826:	cmp    ecx,0x10
64001829:	lea    ebx,[esi+0x4]
6400182c:	jb     0x64001832
6400182e:	mov    eax,DWORD PTR [ebx]
64001830:	jmp    0x64001834
64001832:	mov    eax,ebx
64001834:	push   edi
64001835:	add    edx,ebp
64001837:	push   edx
64001838:	push   ecx
64001839:	push   eax
6400183a:	call   0x64011ed8
6400183f:	add    esp,0x10
64001842:	cmp    DWORD PTR [esi+0x18],0x10
64001846:	mov    DWORD PTR [esi+0x14],edi
64001849:	jb     0x6400184d
6400184b:	mov    ebx,DWORD PTR [ebx]
6400184d:	mov    BYTE PTR [ebx+edi*1],0x0
64001851:	pop    edi
64001852:	mov    eax,esi
64001854:	pop    esi
64001855:	pop    ebp
64001856:	pop    ebx
64001857:	ret    0xc
6400185a:	int3   
6400185b:	int3   
6400185c:	int3   
6400185d:	int3   
6400185e:	int3   
6400185f:	int3   
64001860:	push   ebx
64001861:	push   ebp
64001862:	push   esi
64001863:	mov    esi,ecx
64001865:	mov    ecx,DWORD PTR [esi+0x18]
64001868:	cmp    ecx,0x10
6400186b:	lea    ebx,[esi+0x4]
6400186e:	jb     0x64001874
64001870:	mov    eax,DWORD PTR [ebx]
64001872:	jmp    0x64001876
64001874:	mov    eax,ebx
64001876:	mov    ebp,DWORD PTR [esp+0x10]
6400187a:	cmp    ebp,eax
6400187c:	jb     0x640018af
6400187e:	cmp    ecx,0x10
64001881:	jb     0x64001887
64001883:	mov    eax,DWORD PTR [ebx]
64001885:	jmp    0x64001889
64001887:	mov    eax,ebx
64001889:	mov    edx,DWORD PTR [esi+0x14]
6400188c:	add    edx,eax
6400188e:	cmp    edx,ebp
64001890:	jbe    0x640018af
64001892:	cmp    ecx,0x10
64001895:	jb     0x64001899
64001897:	mov    ebx,DWORD PTR [ebx]
64001899:	mov    eax,DWORD PTR [esp+0x14]
6400189d:	push   eax
6400189e:	sub    ebp,ebx
640018a0:	push   ebp
640018a1:	push   esi
640018a2:	mov    ecx,esi
640018a4:	call   0x64001780
640018a9:	pop    esi
640018aa:	pop    ebp
640018ab:	pop    ebx
640018ac:	ret    0x8
640018af:	push   edi
640018b0:	mov    edi,DWORD PTR [esp+0x18]
640018b4:	cmp    edi,0xfffffffe
640018b7:	jbe    0x640018be
640018b9:	call   0x64011c9f
640018be:	mov    eax,DWORD PTR [esi+0x18]
640018c1:	cmp    eax,edi
640018c3:	jae    0x640018e1
640018c5:	mov    ecx,DWORD PTR [esi+0x14]
640018c8:	push   ecx
640018c9:	push   edi
640018ca:	mov    ecx,esi
640018cc:	call   0x64001b60
640018d1:	test   edi,edi
640018d3:	jbe    0x64001918
640018d5:	mov    ecx,DWORD PTR [esi+0x18]
640018d8:	cmp    ecx,0x10
640018db:	jb     0x640018fb
640018dd:	mov    eax,DWORD PTR [ebx]
640018df:	jmp    0x640018fd
640018e1:	test   edi,edi
640018e3:	jne    0x640018d3
640018e5:	cmp    eax,0x10
640018e8:	mov    DWORD PTR [esi+0x14],edi
640018eb:	jb     0x640018ef
640018ed:	mov    ebx,DWORD PTR [ebx]
640018ef:	pop    edi
640018f0:	mov    eax,esi
640018f2:	pop    esi
640018f3:	pop    ebp
640018f4:	mov    BYTE PTR [ebx],0x0
640018f7:	pop    ebx
640018f8:	ret    0x8
640018fb:	mov    eax,ebx
640018fd:	push   edi
640018fe:	push   ebp
640018ff:	push   ecx
64001900:	push   eax
64001901:	call   0x64011ed8
64001906:	add    esp,0x10
64001909:	cmp    DWORD PTR [esi+0x18],0x10
6400190d:	mov    DWORD PTR [esi+0x14],edi
64001910:	jb     0x64001914
64001912:	mov    ebx,DWORD PTR [ebx]
64001914:	mov    BYTE PTR [ebx+edi*1],0x0
64001918:	pop    edi
64001919:	mov    eax,esi
6400191b:	pop    esi
6400191c:	pop    ebp
6400191d:	pop    ebx
6400191e:	ret    0x8
64001921:	int3   
64001922:	int3   
64001923:	int3   
64001924:	int3   
64001925:	int3   
64001926:	int3   
64001927:	int3   
64001928:	int3   
64001929:	int3   
6400192a:	int3   
6400192b:	int3   
6400192c:	int3   
6400192d:	int3   
6400192e:	int3   
6400192f:	int3   
64001930:	mov    eax,DWORD PTR [ecx]
64001932:	sub    eax,0x10
64001935:	lea    ecx,[eax+0xc]
64001938:	or     edx,0xffffffff
6400193b:	lock xadd DWORD PTR [ecx],edx
6400193f:	dec    edx
64001940:	test   edx,edx
64001942:	jg     0x6400194e
64001944:	mov    ecx,DWORD PTR [eax]
64001946:	mov    edx,DWORD PTR [ecx]
64001948:	push   eax
64001949:	mov    eax,DWORD PTR [edx+0x4]
6400194c:	call   eax
6400194e:	ret    
6400194f:	int3   
64001950:	push   ecx
64001951:	push   ebx
64001952:	push   ebp
64001953:	push   esi
64001954:	mov    esi,DWORD PTR [ecx]
64001956:	mov    ebx,DWORD PTR [esi-0xc]
64001959:	sub    esi,0x10
6400195c:	mov    DWORD PTR [esp+0xc],ecx
64001960:	mov    ecx,DWORD PTR [esi]
64001962:	mov    eax,DWORD PTR [ecx]
64001964:	mov    edx,DWORD PTR [eax+0x10]
64001967:	push   edi
64001968:	call   edx
6400196a:	mov    edx,DWORD PTR [eax]
6400196c:	mov    ebp,DWORD PTR [esp+0x18]
64001970:	push   0x2
64001972:	mov    ecx,eax
64001974:	mov    eax,DWORD PTR [edx]
64001976:	push   ebp
64001977:	call   eax
64001979:	mov    edi,eax
6400197b:	test   edi,edi
6400197d:	jne    0x64001984
6400197f:	call   0x64001b50
64001984:	cmp    ebx,ebp
64001986:	jge    0x6400198a
64001988:	mov    ebp,ebx
6400198a:	lea    eax,[ebp+ebp*1+0x2]
6400198e:	push   eax
6400198f:	lea    ecx,[esi+0x10]
64001992:	push   ecx
64001993:	push   eax
64001994:	lea    ebp,[edi+0x10]
64001997:	push   ebp
64001998:	call   0x64011ed8
6400199d:	add    esp,0x10
640019a0:	mov    DWORD PTR [edi+0x4],ebx
640019a3:	lea    edx,[esi+0xc]
640019a6:	or     eax,0xffffffff
640019a9:	lock xadd DWORD PTR [edx],eax
640019ad:	dec    eax
640019ae:	test   eax,eax
640019b0:	jg     0x640019bc
640019b2:	mov    ecx,DWORD PTR [esi]
640019b4:	mov    edx,DWORD PTR [ecx]
640019b6:	mov    eax,DWORD PTR [edx+0x4]
640019b9:	push   esi
640019ba:	call   eax
640019bc:	mov    ecx,DWORD PTR [esp+0x10]
640019c0:	pop    edi
640019c1:	pop    esi
640019c2:	mov    DWORD PTR [ecx],ebp
640019c4:	pop    ebp
640019c5:	pop    ebx
640019c6:	pop    ecx
640019c7:	ret    0x4
640019ca:	int3   
640019cb:	int3   
640019cc:	int3   
640019cd:	int3   
640019ce:	int3   
640019cf:	int3   
640019d0:	push   ebx
640019d1:	push   ebp
640019d2:	mov    ebp,DWORD PTR [esp+0xc]
640019d6:	push   edi
640019d7:	mov    edi,DWORD PTR [esp+0x14]
640019db:	cmp    DWORD PTR [ebp+0x14],edi
640019de:	mov    ebx,eax
640019e0:	jae    0x640019e7
640019e2:	call   0x64011cde
640019e7:	mov    eax,DWORD PTR [ebp+0x14]
640019ea:	sub    eax,edi
640019ec:	cmp    eax,ebx
640019ee:	jae    0x640019f2
640019f0:	mov    ebx,eax
640019f2:	mov    eax,DWORD PTR [esi+0x14]
640019f5:	or     ecx,0xffffffff
640019f8:	sub    ecx,eax
640019fa:	cmp    ecx,ebx
640019fc:	jbe    0x64001a05
640019fe:	lea    edx,[eax+ebx*1]
64001a01:	cmp    edx,eax
64001a03:	jae    0x64001a0a
64001a05:	call   0x64011c9f
64001a0a:	test   ebx,ebx
64001a0c:	jbe    0x64001ab6
64001a12:	mov    edi,DWORD PTR [esi+0x14]
64001a15:	add    edi,ebx
64001a17:	cmp    edi,0xfffffffe
64001a1a:	jbe    0x64001a21
64001a1c:	call   0x64011c9f
64001a21:	mov    eax,DWORD PTR [esi+0x18]
64001a24:	cmp    eax,edi
64001a26:	jae    0x64001a43
64001a28:	mov    eax,DWORD PTR [esi+0x14]
64001a2b:	push   eax
64001a2c:	push   edi
64001a2d:	mov    ecx,esi
64001a2f:	call   0x64001b60
64001a34:	test   edi,edi
64001a36:	jbe    0x64001ab6
64001a38:	cmp    DWORD PTR [ebp+0x18],0x10
64001a3c:	jb     0x64001a6b
64001a3e:	mov    ebp,DWORD PTR [ebp+0x4]
64001a41:	jmp    0x64001a6e
64001a43:	test   edi,edi
64001a45:	jne    0x64001a36
64001a47:	cmp    eax,0x10
64001a4a:	mov    DWORD PTR [esi+0x14],edi
64001a4d:	jb     0x64001a5d
64001a4f:	mov    eax,DWORD PTR [esi+0x4]
64001a52:	pop    edi
64001a53:	pop    ebp
64001a54:	mov    BYTE PTR [eax],0x0
64001a57:	mov    eax,esi
64001a59:	pop    ebx
64001a5a:	ret    0x8
64001a5d:	pop    edi
64001a5e:	lea    eax,[esi+0x4]
64001a61:	pop    ebp
64001a62:	mov    BYTE PTR [eax],0x0
64001a65:	mov    eax,esi
64001a67:	pop    ebx
64001a68:	ret    0x8
64001a6b:	add    ebp,0x4
64001a6e:	mov    eax,DWORD PTR [esi+0x18]
64001a71:	cmp    eax,0x10
64001a74:	jb     0x64001a7b
64001a76:	mov    edx,DWORD PTR [esi+0x4]
64001a79:	jmp    0x64001a7e
64001a7b:	lea    edx,[esi+0x4]
64001a7e:	mov    ecx,DWORD PTR [esi+0x14]
64001a81:	push   ebx
64001a82:	mov    ebx,DWORD PTR [esp+0x18]
64001a86:	add    ebp,ebx
64001a88:	sub    eax,ecx
64001a8a:	push   ebp
64001a8b:	push   eax
64001a8c:	add    ecx,edx
64001a8e:	push   ecx
64001a8f:	call   0x64011ed8
64001a94:	add    esp,0x10
64001a97:	cmp    DWORD PTR [esi+0x18],0x10
64001a9b:	mov    DWORD PTR [esi+0x14],edi
64001a9e:	jb     0x64001aaf
64001aa0:	mov    eax,DWORD PTR [esi+0x4]
64001aa3:	mov    BYTE PTR [eax+edi*1],0x0
64001aa7:	pop    edi
64001aa8:	pop    ebp
64001aa9:	mov    eax,esi
64001aab:	pop    ebx
64001aac:	ret    0x8
64001aaf:	lea    eax,[esi+0x4]
64001ab2:	mov    BYTE PTR [eax+edi*1],0x0
64001ab6:	pop    edi
64001ab7:	pop    ebp
64001ab8:	mov    eax,esi
64001aba:	pop    ebx
64001abb:	ret    0x8
64001abe:	int3   
64001abf:	int3   
64001ac0:	push   ebx
64001ac1:	mov    ebx,DWORD PTR [esp+0x8]
64001ac5:	push   esi
64001ac6:	mov    esi,ecx
64001ac8:	cmp    DWORD PTR [esi+0x14],ebx
64001acb:	push   edi
64001acc:	jae    0x64001ad3
64001ace:	call   0x64011cde
64001ad3:	mov    eax,DWORD PTR [esi+0x14]
64001ad6:	mov    edi,DWORD PTR [esp+0x14]
64001ada:	sub    eax,ebx
64001adc:	cmp    eax,edi
64001ade:	jae    0x64001ae2
64001ae0:	mov    edi,eax
64001ae2:	test   edi,edi
64001ae4:	jbe    0x64001b3b
64001ae6:	mov    ecx,DWORD PTR [esi+0x18]
64001ae9:	cmp    ecx,0x10
64001aec:	push   ebp
64001aed:	lea    ebp,[esi+0x4]
64001af0:	jb     0x64001afb
64001af2:	mov    edx,DWORD PTR [ebp+0x0]
64001af5:	mov    DWORD PTR [esp+0x14],edx
64001af9:	jmp    0x64001aff
64001afb:	mov    DWORD PTR [esp+0x14],ebp
64001aff:	cmp    ecx,0x10
64001b02:	jb     0x64001b09
64001b04:	mov    edx,DWORD PTR [ebp+0x0]
64001b07:	jmp    0x64001b0b
64001b09:	mov    edx,ebp
64001b0b:	sub    eax,edi
64001b0d:	push   eax
64001b0e:	mov    eax,DWORD PTR [esp+0x18]
64001b12:	add    eax,ebx
64001b14:	add    eax,edi
64001b16:	push   eax
64001b17:	sub    ecx,ebx
64001b19:	push   ecx
64001b1a:	add    edx,ebx
64001b1c:	push   edx
64001b1d:	call   0x64011f53
64001b22:	mov    eax,DWORD PTR [esi+0x14]
64001b25:	sub    eax,edi
64001b27:	add    esp,0x10
64001b2a:	cmp    DWORD PTR [esi+0x18],0x10
64001b2e:	mov    DWORD PTR [esi+0x14],eax
64001b31:	jb     0x64001b36
64001b33:	mov    ebp,DWORD PTR [ebp+0x0]
64001b36:	mov    BYTE PTR [eax+ebp*1],0x0
64001b3a:	pop    ebp
64001b3b:	pop    edi
64001b3c:	mov    eax,esi
64001b3e:	pop    esi
64001b3f:	pop    ebx
64001b40:	ret    0x8
64001b43:	int3   
64001b44:	int3   
64001b45:	int3   
64001b46:	int3   
64001b47:	int3   
64001b48:	int3   
64001b49:	int3   
64001b4a:	int3   
64001b4b:	int3   
64001b4c:	int3   
64001b4d:	int3   
64001b4e:	int3   
64001b4f:	int3   
64001b50:	push   0x8007000e
64001b55:	call   0x64001040
64001b5a:	int3   
64001b5b:	int3   
64001b5c:	int3   
64001b5d:	int3   
64001b5e:	int3   
64001b5f:	int3   
64001b60:	push   ebp
64001b61:	mov    ebp,esp
64001b63:	push   0xffffffff
64001b65:	push   0x64022010
64001b6a:	mov    eax,fs:0x0
64001b70:	push   eax
64001b71:	sub    esp,0x1c
64001b74:	push   ebx
64001b75:	push   esi
64001b76:	push   edi
64001b77:	mov    eax,ds:0x6402c09c
64001b7c:	xor    eax,ebp
64001b7e:	push   eax
64001b7f:	lea    eax,[ebp-0xc]
64001b82:	mov    fs:0x0,eax
64001b88:	mov    DWORD PTR [ebp-0x10],esp
64001b8b:	mov    edi,ecx
64001b8d:	mov    DWORD PTR [ebp-0x14],edi
64001b90:	mov    eax,DWORD PTR [ebp+0x8]
64001b93:	mov    esi,eax
64001b95:	or     esi,0xf
64001b98:	cmp    esi,0xfffffffe
64001b9b:	jbe    0x64001ba1
64001b9d:	mov    esi,eax
64001b9f:	jmp    0x64001bc3
64001ba1:	mov    ebx,DWORD PTR [edi+0x18]
64001ba4:	mov    eax,0xaaaaaaab
64001ba9:	mul    esi
64001bab:	mov    ecx,ebx
64001bad:	shr    ecx,1
64001baf:	shr    edx,1
64001bb1:	cmp    edx,ecx
64001bb3:	jae    0x64001bc3
64001bb5:	mov    eax,0xfffffffe
64001bba:	sub    eax,ecx
64001bbc:	cmp    ebx,eax
64001bbe:	ja     0x64001bc3
64001bc0:	lea    esi,[ecx+ebx*1]
64001bc3:	xor    ebx,ebx
64001bc5:	lea    ecx,[esi+0x1]
64001bc8:	cmp    ecx,ebx
64001bca:	mov    DWORD PTR [ebp-0x4],ebx
64001bcd:	ja     0x64001bdf
64001bcf:	xor    ecx,ecx
64001bd1:	push   ecx
64001bd2:	call   0x64012101
64001bd7:	add    esp,0x4
64001bda:	mov    DWORD PTR [ebp+0x8],eax
64001bdd:	jmp    0x64001c37
64001bdf:	or     eax,0xffffffff
64001be2:	xor    edx,edx
64001be4:	div    ecx
64001be6:	cmp    eax,0x1
64001be9:	jae    0x64001bd1
64001beb:	lea    ecx,[ebp-0x18]
64001bee:	push   ecx
64001bef:	lea    ecx,[ebp-0x28]
64001bf2:	mov    DWORD PTR [ebp-0x18],ebx
64001bf5:	call   0x64011d7d
64001bfa:	push   0x64029c9c
64001bff:	lea    edx,[ebp-0x28]
64001c02:	push   edx
64001c03:	mov    DWORD PTR [ebp-0x28],0x6402425c
64001c0a:	call   0x6401216b
64001c0f:	mov    eax,DWORD PTR [ebp+0x8]
64001c12:	mov    ecx,DWORD PTR [ebp-0x14]
64001c15:	mov    DWORD PTR [ebp-0x1c],eax
64001c18:	add    eax,0x1
64001c1b:	mov    DWORD PTR [ebp-0x10],esp
64001c1e:	push   eax
64001c1f:	mov    BYTE PTR [ebp-0x4],0x2
64001c23:	call   0x64001ce0
64001c28:	mov    DWORD PTR [ebp+0x8],eax
64001c2b:	mov    eax,0x64001c31
64001c30:	ret    
64001c31:	mov    edi,DWORD PTR [ebp-0x14]
64001c34:	mov    esi,DWORD PTR [ebp-0x1c]
64001c37:	mov    ebx,DWORD PTR [ebp+0xc]
64001c3a:	test   ebx,ebx
64001c3c:	jbe    0x64001c5e
64001c3e:	cmp    DWORD PTR [edi+0x18],0x10
64001c42:	jb     0x64001c49
64001c44:	mov    eax,DWORD PTR [edi+0x4]
64001c47:	jmp    0x64001c4c
64001c49:	lea    eax,[edi+0x4]
64001c4c:	mov    ecx,DWORD PTR [ebp+0x8]
64001c4f:	push   ebx
64001c50:	push   eax
64001c51:	lea    eax,[esi+0x1]
64001c54:	push   eax
64001c55:	push   ecx
64001c56:	call   0x64011ed8
64001c5b:	add    esp,0x10
64001c5e:	cmp    DWORD PTR [edi+0x18],0x10
64001c62:	jb     0x64001c70
64001c64:	mov    edx,DWORD PTR [edi+0x4]
64001c67:	push   edx
64001c68:	call   0x64011d22
64001c6d:	add    esp,0x4
64001c70:	cmp    esi,0x10
64001c73:	mov    ecx,DWORD PTR [ebp+0x8]
64001c76:	lea    eax,[edi+0x4]
64001c79:	mov    BYTE PTR [eax],0x0
64001c7c:	mov    DWORD PTR [eax],ecx
64001c7e:	mov    DWORD PTR [edi+0x18],esi
64001c81:	mov    DWORD PTR [edi+0x14],ebx
64001c84:	jb     0x64001c88
64001c86:	mov    eax,ecx
64001c88:	mov    BYTE PTR [eax+ebx*1],0x0
64001c8c:	mov    ecx,DWORD PTR [ebp-0xc]
64001c8f:	mov    DWORD PTR fs:0x0,ecx
64001c96:	pop    ecx
64001c97:	pop    edi
64001c98:	pop    esi
64001c99:	pop    ebx
64001c9a:	mov    esp,ebp
64001c9c:	pop    ebp
64001c9d:	ret    0x8
64001ca0:	mov    esi,DWORD PTR [ebp-0x14]
64001ca3:	cmp    DWORD PTR [esi+0x18],0x10
64001ca7:	jb     0x64001cb5
64001ca9:	mov    eax,DWORD PTR [esi+0x4]
64001cac:	push   eax
64001cad:	call   0x64011d22
64001cb2:	add    esp,0x4
64001cb5:	push   0x0
64001cb7:	mov    DWORD PTR [esi+0x18],0xf
64001cbe:	mov    DWORD PTR [esi+0x14],0x0
64001cc5:	push   0x0
64001cc7:	mov    BYTE PTR [esi+0x4],0x0
64001ccb:	call   0x6401216b
64001cd0:	int3   
64001cd1:	int3   
64001cd2:	int3   
64001cd3:	int3   
64001cd4:	int3   
64001cd5:	int3   
64001cd6:	int3   
64001cd7:	int3   
64001cd8:	int3   
64001cd9:	int3   
64001cda:	int3   
64001cdb:	int3   
64001cdc:	int3   
64001cdd:	int3   
64001cde:	int3   
64001cdf:	int3   
64001ce0:	mov    ecx,DWORD PTR [esp+0x4]
64001ce4:	sub    esp,0xc
64001ce7:	test   ecx,ecx
64001ce9:	ja     0x64001cfc
64001ceb:	xor    ecx,ecx
64001ced:	push   ecx
64001cee:	call   0x64012101
64001cf3:	add    esp,0x4
64001cf6:	add    esp,0xc
64001cf9:	ret    0x4
64001cfc:	or     eax,0xffffffff
64001cff:	xor    edx,edx
64001d01:	div    ecx
64001d03:	cmp    eax,0x1
64001d06:	jae    0x64001ced
64001d08:	lea    eax,[esp+0x10]
64001d0c:	push   eax
64001d0d:	lea    ecx,[esp+0x4]
64001d11:	mov    DWORD PTR [esp+0x14],0x0
64001d19:	call   0x64011d7d
64001d1e:	push   0x64029c9c
64001d23:	lea    ecx,[esp+0x4]
64001d27:	push   ecx
64001d28:	mov    DWORD PTR [esp+0x8],0x6402425c
64001d30:	call   0x6401216b
64001d35:	int3   
64001d36:	int3   
64001d37:	int3   
64001d38:	int3   
64001d39:	int3   
64001d3a:	int3   
64001d3b:	int3   
64001d3c:	int3   
64001d3d:	int3   
64001d3e:	int3   
64001d3f:	int3   
64001d40:	mov    ecx,DWORD PTR [esp+0x8]
64001d44:	lea    eax,[esp+0xc]
64001d48:	push   eax
64001d49:	push   ecx
64001d4a:	mov    ecx,DWORD PTR [esp+0xc]
64001d4e:	call   0x64001d80
64001d53:	ret    
64001d54:	int3   
64001d55:	int3   
64001d56:	int3   
64001d57:	int3   
64001d58:	int3   
64001d59:	int3   
64001d5a:	int3   
64001d5b:	int3   
64001d5c:	int3   
64001d5d:	int3   
64001d5e:	int3   
64001d5f:	int3   
64001d60:	mov    eax,DWORD PTR [esp+0x4]
64001d64:	push   esi
64001d65:	push   eax
64001d66:	mov    esi,ecx
64001d68:	call   0x64011de3
64001d6d:	mov    DWORD PTR [esi],0x6402425c
64001d73:	mov    eax,esi
64001d75:	pop    esi
64001d76:	ret    0x4
64001d79:	int3   
64001d7a:	int3   
64001d7b:	int3   
64001d7c:	int3   
64001d7d:	int3   
64001d7e:	int3   
64001d7f:	int3   
64001d80:	push   ebx
64001d81:	mov    ebx,DWORD PTR [esp+0x8]
64001d85:	test   ebx,ebx
64001d87:	push   edi
64001d88:	mov    edi,ecx
64001d8a:	jne    0x64001d96
64001d8c:	push   0x80070057
64001d91:	call   0x64001040
64001d96:	push   ebp
64001d97:	mov    ebp,DWORD PTR [esp+0x14]
64001d9b:	push   esi
64001d9c:	push   ebp
64001d9d:	push   ebx
64001d9e:	call   0x640127f6
64001da3:	mov    esi,eax
64001da5:	mov    eax,DWORD PTR [edi]
64001da7:	mov    edx,DWORD PTR [eax-0x8]
64001daa:	sub    eax,0x10
64001dad:	mov    ecx,0x1
64001db2:	sub    ecx,DWORD PTR [eax+0xc]
64001db5:	sub    edx,esi
64001db7:	add    esp,0x8
64001dba:	or     ecx,edx
64001dbc:	jge    0x64001dc6
64001dbe:	push   esi
64001dbf:	mov    ecx,edi
64001dc1:	call   0x64001e00
64001dc6:	mov    ecx,DWORD PTR [edi]
64001dc8:	push   ebp
64001dc9:	push   ebx
64001dca:	lea    eax,[esi+0x1]
64001dcd:	push   eax
64001dce:	push   ecx
64001dcf:	call   0x6401298b
64001dd4:	add    esp,0x10
64001dd7:	test   esi,esi
64001dd9:	jl     0x64001df4
64001ddb:	mov    eax,DWORD PTR [edi]
64001ddd:	cmp    esi,DWORD PTR [eax-0x8]
64001de0:	jg     0x64001df4
64001de2:	mov    DWORD PTR [eax-0xc],esi
64001de5:	mov    edx,DWORD PTR [edi]
64001de7:	mov    WORD PTR [edx+esi*2],0x0
64001ded:	pop    esi
64001dee:	pop    ebp
64001def:	pop    edi
64001df0:	pop    ebx
64001df1:	ret    0x8
64001df4:	push   0x80070057
64001df9:	call   0x64001040
64001dfe:	int3   
64001dff:	int3   
64001e00:	mov    eax,DWORD PTR [ecx]
64001e02:	mov    edx,DWORD PTR [esp+0x4]
64001e06:	sub    eax,0x10
64001e09:	push   esi
64001e0a:	mov    esi,DWORD PTR [eax+0x4]
64001e0d:	cmp    esi,edx
64001e0f:	jle    0x64001e13
64001e11:	mov    edx,esi
64001e13:	cmp    DWORD PTR [eax+0xc],0x1
64001e17:	pop    esi
64001e18:	jle    0x64001e23
64001e1a:	mov    DWORD PTR [esp+0x4],edx
64001e1e:	jmp    0x64001950
64001e23:	mov    eax,DWORD PTR [eax+0x8]
64001e26:	cmp    eax,edx
64001e28:	jge    0x64001e49
64001e2a:	cmp    eax,0x400
64001e2f:	jle    0x64001e38
64001e31:	add    eax,0x400
64001e36:	jmp    0x64001e3a
64001e38:	add    eax,eax
64001e3a:	cmp    eax,edx
64001e3c:	jge    0x64001e40
64001e3e:	mov    eax,edx
64001e40:	mov    DWORD PTR [esp+0x4],eax
64001e44:	jmp    0x64001e50
64001e49:	ret    0x4
64001e4c:	int3   
64001e4d:	int3   
64001e4e:	int3   
64001e4f:	int3   
64001e50:	mov    edx,DWORD PTR [esp+0x4]
64001e54:	push   esi
64001e55:	mov    esi,ecx
64001e57:	mov    eax,DWORD PTR [esi]
64001e59:	mov    ecx,DWORD PTR [eax-0x10]
64001e5c:	sub    eax,0x10
64001e5f:	cmp    DWORD PTR [eax+0x8],edx
64001e62:	jge    0x64001e79
64001e64:	test   edx,edx
64001e66:	jle    0x64001e79
64001e68:	push   edi
64001e69:	mov    edi,DWORD PTR [ecx]
64001e6b:	push   0x2
64001e6d:	push   edx
64001e6e:	push   eax
64001e6f:	mov    eax,DWORD PTR [edi+0x8]
64001e72:	call   eax
64001e74:	test   eax,eax
64001e76:	pop    edi
64001e77:	jne    0x64001e7e
64001e79:	call   0x64001b50
64001e7e:	add    eax,0x10
64001e81:	mov    DWORD PTR [esi],eax
64001e83:	pop    esi
64001e84:	ret    0x4
64001e87:	int3   
64001e88:	int3   
64001e89:	int3   
64001e8a:	int3   
64001e8b:	int3   
64001e8c:	int3   
64001e8d:	int3   
64001e8e:	int3   
64001e8f:	int3   
64001e90:	mov    eax,DWORD PTR [esp+0x4]
64001e94:	cmp    eax,0x50
64001e97:	ja     0x64001ebb
64001e99:	movzx  ecx,BYTE PTR [eax+0x64001ed8]
64001ea0:	jmp    DWORD PTR [ecx*4+0x64001ec8]
64001ea7:	push   0x8007000e
64001eac:	call   0x64001040
64001eb1:	push   0x80070057
64001eb6:	call   0x64001040
64001ebb:	push   0x80004005
64001ec0:	call   0x64001040
64001ec5:	ret    
64001ec6:	mov    edi,edi
64001ec8:	lds    ebx,FWORD PTR [esi]
64001eca:	add    BYTE PTR [edi+eiz*4+0x1e],ah
64001ece:	add    BYTE PTR [ecx+esi*4+0x1e],ah
64001ed2:	add    BYTE PTR [ebx+edi*4+0x1e],ah
64001ed6:	add    BYTE PTR [eax+eax*1+0x3],ah
64001eda:	add    eax,DWORD PTR [ebx]
64001edc:	add    eax,DWORD PTR [ebx]
64001ede:	add    eax,DWORD PTR [ebx]
64001ee0:	add    eax,DWORD PTR [ebx]
64001ee2:	add    eax,DWORD PTR [ebx]
64001ee4:	add    DWORD PTR [ebx],eax
64001ee6:	add    eax,DWORD PTR [ebx]
64001ee8:	add    eax,DWORD PTR [ebx]
64001eea:	add    eax,DWORD PTR [ebx]
64001eec:	add    eax,DWORD PTR [ebx]
64001eee:	add    al,BYTE PTR [ebx]
64001ef0:	add    eax,DWORD PTR [ebx]
64001ef2:	add    eax,DWORD PTR [ebx]
64001ef4:	add    eax,DWORD PTR [ebx]
64001ef6:	add    eax,DWORD PTR [ebx]
64001ef8:	add    eax,DWORD PTR [ebx]
64001efa:	add    al,BYTE PTR [ebx]
64001efc:	add    eax,DWORD PTR [ebx]
64001efe:	add    eax,DWORD PTR [ebx]
64001f00:	add    eax,DWORD PTR [ebx]
64001f02:	add    eax,DWORD PTR [ebx]
64001f04:	add    eax,DWORD PTR [ebx]
64001f06:	add    eax,DWORD PTR [ebx]
64001f08:	add    eax,DWORD PTR [ebx]
64001f0a:	add    eax,DWORD PTR [ebx]
64001f0c:	add    eax,DWORD PTR [ebx]
64001f0e:	add    eax,DWORD PTR [ebx]
64001f10:	add    eax,DWORD PTR [ebx]
64001f12:	add    eax,DWORD PTR [ebx]
64001f14:	add    eax,DWORD PTR [ebx]
64001f16:	add    eax,DWORD PTR [ebx]
64001f18:	add    eax,DWORD PTR [ebx]
64001f1a:	add    eax,DWORD PTR [ebx]
64001f1c:	add    eax,DWORD PTR [ebx]
64001f1e:	add    eax,DWORD PTR [ebx]
64001f20:	add    eax,DWORD PTR [ebx]
64001f22:	add    eax,DWORD PTR [ebx]
64001f24:	add    eax,DWORD PTR [ebx]
64001f26:	add    eax,DWORD PTR [ebx]
64001f28:	add    ah,cl
64001f2a:	int3   
64001f2b:	int3   
64001f2c:	int3   
64001f2d:	int3   
64001f2e:	int3   
64001f2f:	int3   
64001f30:	push   ebx
64001f31:	mov    ebx,DWORD PTR [esp+0x8]
64001f35:	push   edi
64001f36:	mov    edi,DWORD PTR [esp+0x10]
64001f3a:	push   edi
64001f3b:	push   ebx
64001f3c:	call   DWORD PTR ds:0x64024034
64001f42:	test   eax,eax
64001f44:	jne    0x64001f49
64001f46:	pop    edi
64001f47:	pop    ebx
64001f48:	ret    
64001f49:	push   esi
64001f4a:	push   eax
64001f4b:	call   DWORD PTR ds:0x64024030
64001f51:	mov    esi,eax
64001f53:	test   esi,esi
64001f55:	je     0x64001f84
64001f57:	push   edi
64001f58:	push   ebx
64001f59:	call   DWORD PTR ds:0x6402402c
64001f5f:	mov    ecx,DWORD PTR [esp+0x18]
64001f63:	add    eax,esi
64001f65:	and    ecx,0xf
64001f68:	jbe    0x64001f80
64001f6a:	lea    ebx,[ebx+0x0]
64001f70:	cmp    esi,eax
64001f72:	jae    0x64001f84
64001f74:	sub    ecx,0x1
64001f77:	movzx  edx,WORD PTR [esi]
64001f7a:	lea    esi,[esi+edx*2+0x2]
64001f7e:	jne    0x64001f70
64001f80:	cmp    esi,eax
64001f82:	jb     0x64001f8a
64001f84:	pop    esi
64001f85:	pop    edi
64001f86:	xor    eax,eax
64001f88:	pop    ebx
64001f89:	ret    
64001f8a:	mov    ax,WORD PTR [esi]
64001f8d:	neg    ax
64001f90:	sbb    eax,eax
64001f92:	and    eax,esi
64001f94:	pop    esi
64001f95:	pop    edi
64001f96:	pop    ebx
64001f97:	ret    
64001f98:	int3   
64001f99:	int3   
64001f9a:	int3   
64001f9b:	int3   
64001f9c:	int3   
64001f9d:	int3   
64001f9e:	int3   
64001f9f:	int3   
64001fa0:	push   ebx
64001fa1:	push   ebp
64001fa2:	push   esi
64001fa3:	push   edi
64001fa4:	xor    edi,edi
64001fa6:	push   edi
64001fa7:	mov    ecx,0x6402d4ec
64001fac:	call   0x64011951
64001fb1:	mov    esi,eax
64001fb3:	test   esi,esi
64001fb5:	lea    ebp,[edi+0x1]
64001fb8:	je     0x64002007
64001fba:	mov    ebx,DWORD PTR [esp+0x14]
64001fbe:	mov    edi,edi
64001fc0:	test   edi,edi
64001fc2:	jne    0x64002007
64001fc4:	mov    eax,DWORD PTR [esp+0x18]
64001fc8:	mov    ecx,ebx
64001fca:	shr    ecx,0x4
64001fcd:	add    ecx,0x1
64001fd0:	push   eax
64001fd1:	movzx  edx,cx
64001fd4:	push   edx
64001fd5:	push   0x6
64001fd7:	push   esi
64001fd8:	call   DWORD PTR ds:0x6402403c
64001fde:	test   eax,eax
64001fe0:	je     0x64001ff3
64001fe2:	push   ebx
64001fe3:	push   eax
64001fe4:	push   esi
64001fe5:	call   0x64001f30
64001fea:	mov    edi,eax
64001fec:	add    esp,0xc
64001fef:	test   edi,edi
64001ff1:	jne    0x6400200e
64001ff3:	push   ebp
64001ff4:	mov    ecx,0x6402d4ec
64001ff9:	call   0x64011951
64001ffe:	mov    esi,eax
64002000:	add    ebp,0x1
64002003:	test   esi,esi
64002005:	jne    0x64001fc0
64002007:	pop    edi
64002008:	pop    esi
64002009:	pop    ebp
6400200a:	xor    eax,eax
6400200c:	pop    ebx
6400200d:	ret    
6400200e:	pop    edi
6400200f:	mov    eax,esi
64002011:	pop    esi
64002012:	pop    ebp
64002013:	pop    ebx
64002014:	ret    
64002015:	int3   
64002016:	int3   
64002017:	int3   
64002018:	int3   
64002019:	int3   
6400201a:	int3   
6400201b:	int3   
6400201c:	int3   
6400201d:	int3   
6400201e:	int3   
6400201f:	int3   
64002020:	push   0xffffffff
64002022:	push   0x640222e8
64002027:	mov    eax,fs:0x0
6400202d:	push   eax
6400202e:	push   ecx
6400202f:	push   esi
64002030:	mov    eax,ds:0x6402c09c
64002035:	xor    eax,esp
64002037:	push   eax
64002038:	lea    eax,[esp+0xc]
6400203c:	mov    fs:0x0,eax
64002042:	mov    esi,ecx
64002044:	mov    DWORD PTR [esp+0x8],esi
64002048:	call   0x64011d6c
6400204d:	xor    eax,eax
6400204f:	mov    DWORD PTR [esp+0x14],eax
64002053:	lea    ecx,[esi+0xc]
64002056:	mov    DWORD PTR [esi],0x64024350
6400205c:	push   0xffffffff
6400205e:	mov    DWORD PTR [ecx+0x14],eax
64002061:	mov    DWORD PTR [ecx+0x18],0xf
64002068:	push   eax
64002069:	mov    BYTE PTR [ecx+0x4],al
6400206c:	mov    eax,DWORD PTR [esp+0x24]
64002070:	push   eax
64002071:	call   0x64001780
64002076:	mov    eax,esi
64002078:	mov    ecx,DWORD PTR [esp+0xc]
6400207c:	mov    DWORD PTR fs:0x0,ecx
64002083:	pop    ecx
64002084:	pop    esi
64002085:	add    esp,0x10
64002088:	ret    0x4
6400208b:	int3   
6400208c:	int3   
6400208d:	int3   
6400208e:	int3   
6400208f:	int3   
64002090:	push   esi
64002091:	mov    esi,ecx
64002093:	mov    DWORD PTR [esi],0x64024350
64002099:	cmp    DWORD PTR [esi+0x24],0x10
6400209d:	jb     0x640020ab
6400209f:	mov    eax,DWORD PTR [esi+0x10]
640020a2:	push   eax
640020a3:	call   0x64011d22
640020a8:	add    esp,0x4
640020ab:	xor    eax,eax
640020ad:	mov    DWORD PTR [esi+0x24],0xf
640020b4:	mov    DWORD PTR [esi+0x20],eax
640020b7:	mov    BYTE PTR [esi+0x10],al
640020ba:	mov    ecx,esi
640020bc:	pop    esi
640020bd:	jmp    0x64011e3b
640020c2:	int3   
640020c3:	int3   
640020c4:	int3   
640020c5:	int3   
640020c6:	int3   
640020c7:	int3   
640020c8:	int3   
640020c9:	int3   
640020ca:	int3   
640020cb:	int3   
640020cc:	int3   
640020cd:	int3   
640020ce:	int3   
640020cf:	int3   
640020d0:	cmp    DWORD PTR [ecx+0x24],0x10
640020d4:	jb     0x640020da
640020d6:	mov    eax,DWORD PTR [ecx+0x10]
640020d9:	ret    
640020da:	lea    eax,[ecx+0x10]
640020dd:	ret    
640020de:	int3   
640020df:	int3   
640020e0:	push   esi
640020e1:	mov    esi,ecx
640020e3:	mov    DWORD PTR [esi],0x64024350
640020e9:	cmp    DWORD PTR [esi+0x24],0x10
640020ed:	jb     0x640020fb
640020ef:	mov    eax,DWORD PTR [esi+0x10]
640020f2:	push   eax
640020f3:	call   0x64011d22
640020f8:	add    esp,0x4
640020fb:	xor    eax,eax
640020fd:	mov    DWORD PTR [esi+0x24],0xf
64002104:	mov    DWORD PTR [esi+0x20],eax
64002107:	mov    ecx,esi
64002109:	mov    BYTE PTR [esi+0x10],al
6400210c:	call   0x64011e3b
64002111:	test   BYTE PTR [esp+0x8],0x1
64002116:	je     0x64002121
64002118:	push   esi
64002119:	call   0x64011d22
6400211e:	add    esp,0x4
64002121:	mov    eax,esi
64002123:	pop    esi
64002124:	ret    0x4
64002127:	int3   
64002128:	int3   
64002129:	int3   
6400212a:	int3   
6400212b:	int3   
6400212c:	int3   
6400212d:	int3   
6400212e:	int3   
6400212f:	int3   
64002130:	push   0xffffffff
64002132:	push   0x640222b8
64002137:	mov    eax,fs:0x0
6400213d:	push   eax
6400213e:	push   ecx
6400213f:	push   esi
64002140:	push   edi
64002141:	mov    eax,ds:0x6402c09c
64002146:	xor    eax,esp
64002148:	push   eax
64002149:	lea    eax,[esp+0x10]
6400214d:	mov    fs:0x0,eax
64002153:	mov    esi,ecx
64002155:	mov    DWORD PTR [esp+0xc],esi
64002159:	mov    edi,DWORD PTR [esp+0x20]
6400215d:	push   edi
6400215e:	call   0x64011de3
64002163:	xor    edx,edx
64002165:	mov    DWORD PTR [esp+0x18],edx
64002169:	push   0xffffffff
6400216b:	lea    ecx,[esi+0xc]
6400216e:	mov    DWORD PTR [esi],0x64024350
64002174:	lea    eax,[edi+0xc]
64002177:	push   edx
64002178:	mov    DWORD PTR [ecx+0x18],0xf
6400217f:	mov    DWORD PTR [ecx+0x14],edx
64002182:	push   eax
64002183:	mov    BYTE PTR [ecx+0x4],dl
64002186:	call   0x64001780
6400218b:	mov    eax,esi
6400218d:	mov    ecx,DWORD PTR [esp+0x10]
64002191:	mov    DWORD PTR fs:0x0,ecx
64002198:	pop    ecx
64002199:	pop    edi
6400219a:	pop    esi
6400219b:	add    esp,0x10
6400219e:	ret    0x4
640021a1:	int3   
640021a2:	int3   
640021a3:	int3   
640021a4:	int3   
640021a5:	int3   
640021a6:	int3   
640021a7:	int3   
640021a8:	int3   
640021a9:	int3   
640021aa:	int3   
640021ab:	int3   
640021ac:	int3   
640021ad:	int3   
640021ae:	int3   
640021af:	int3   
640021b0:	push   ebp
640021b1:	mov    ebp,esp
640021b3:	and    esp,0xfffffff8
640021b6:	push   0xffffffff
640021b8:	push   0x64022b8b
640021bd:	mov    eax,fs:0x0
640021c3:	push   eax
640021c4:	sub    esp,0x428
640021ca:	mov    eax,ds:0x6402c09c
640021cf:	xor    eax,esp
640021d1:	mov    DWORD PTR [esp+0x420],eax
640021d8:	push   ebx
640021d9:	push   esi
640021da:	push   edi
640021db:	mov    eax,ds:0x6402c09c
640021e0:	xor    eax,esp
640021e2:	push   eax
640021e3:	lea    eax,[esp+0x438]
640021ea:	mov    fs:0x0,eax
640021f0:	mov    eax,DWORD PTR [ebp+0x10]
640021f3:	mov    esi,DWORD PTR [ebp+0x8]
640021f6:	mov    ebx,DWORD PTR [ebp+0xc]
640021f9:	lea    ecx,[esp+0x224]
64002200:	push   ecx
64002201:	push   0x100
64002206:	mov    DWORD PTR [esp+0x1c],esi
6400220a:	mov    DWORD PTR [esp+0x20],eax
6400220e:	mov    DWORD PTR [esp+0x18],0x0
64002216:	call   0x6400e010
6400221b:	call   eax
6400221d:	cmp    eax,0x100
64002222:	jbe    0x64002235
64002224:	push   0x640265c4
64002229:	mov    ecx,esi
6400222b:	call   0x640025a0
64002230:	jmp    0x640023c7
64002235:	lea    edx,[esp+0x1c]
64002239:	push   edx
6400223a:	push   0x0
6400223c:	lea    eax,[esp+0x22c]
64002243:	push   0x640265c8
64002248:	push   eax
64002249:	call   0x6400e090
6400224e:	call   eax
64002250:	test   eax,eax
64002252:	je     0x64002224
64002254:	mov    edi,DWORD PTR ds:0x6402404c
6400225a:	xor    esi,esi
6400225c:	lea    esp,[esp+0x0]
64002260:	cmp    esi,0x708
64002266:	je     0x64002345
6400226c:	lea    ecx,[esp+0x1c]
64002270:	push   ecx
64002271:	call   0x6400def0
64002276:	call   eax
64002278:	test   eax,eax
6400227a:	jne    0x6400228d
6400227c:	push   esi
6400227d:	call   edi
6400227f:	add    esi,0xc8
64002285:	cmp    esi,0x7d0
6400228b:	jne    0x64002260
6400228d:	xor    esi,esi
6400228f:	cmp    esi,0x708
64002295:	je     0x64002345
6400229b:	lea    edx,[esp+0x1c]
6400229f:	push   0x0
640022a1:	push   edx
640022a2:	call   0x6400e110
640022a7:	call   eax
640022a9:	test   eax,eax
640022ab:	jne    0x640022be
640022ad:	push   esi
640022ae:	call   edi
640022b0:	add    esi,0xc8
640022b6:	cmp    esi,0x7d0
640022bc:	jne    0x6400228f
640022be:	lea    eax,[esp+0x1c]
640022c2:	lea    edx,[eax+0x2]
640022c5:	mov    cx,WORD PTR [eax]
640022c8:	add    eax,0x2
640022cb:	test   cx,cx
640022ce:	jne    0x640022c5
640022d0:	mov    ecx,DWORD PTR [esp+0x18]
640022d4:	sub    eax,edx
640022d6:	sar    eax,1
640022d8:	push   eax
640022d9:	lea    eax,[esp+0x20]
640022dd:	push   eax
640022de:	call   0x64002af0
640022e3:	lea    ecx,[esp+0x1c]
640022e7:	push   ecx
640022e8:	lea    ecx,[esp+0x14]
640022ec:	call   0x640025a0
640022f1:	push   0x640265d0
640022f6:	lea    ecx,[esp+0x14]
640022fa:	mov    DWORD PTR [esp+0x444],0x0
64002305:	call   0x64002670
6400230a:	mov    eax,DWORD PTR [ebx]
6400230c:	mov    ecx,DWORD PTR [eax-0xc]
6400230f:	push   ecx
64002310:	push   eax
64002311:	lea    ecx,[esp+0x18]
64002315:	call   0x640029f0
6400231a:	mov    esi,DWORD PTR [esp+0x10]
6400231e:	mov    ecx,DWORD PTR [esi-0x10]
64002321:	mov    edx,DWORD PTR [ecx]
64002323:	mov    eax,DWORD PTR [edx+0x10]
64002326:	add    esi,0xfffffff0
64002329:	call   eax
6400232b:	cmp    DWORD PTR [esi+0xc],0x0
6400232f:	lea    edx,[esi+0xc]
64002332:	jl     0x64002357
64002334:	cmp    eax,DWORD PTR [esi]
64002336:	jne    0x64002357
64002338:	mov    edi,esi
6400233a:	mov    ecx,0x1
6400233f:	lock xadd DWORD PTR [edx],ecx
64002343:	jmp    0x64002393
64002345:	mov    esi,DWORD PTR [esp+0x14]
64002349:	push   0x640265c4
6400234e:	mov    ecx,esi
64002350:	call   0x640025a0
64002355:	jmp    0x640023c7
64002357:	mov    ecx,DWORD PTR [esi+0x4]
6400235a:	mov    edx,DWORD PTR [eax]
6400235c:	mov    edx,DWORD PTR [edx]
6400235e:	push   0x2
64002360:	push   ecx
64002361:	mov    ecx,eax
64002363:	call   edx
64002365:	mov    edi,eax
64002367:	test   edi,edi
64002369:	jne    0x64002370
6400236b:	jmp    0x64001b50
64002370:	mov    eax,DWORD PTR [esi+0x4]
64002373:	mov    DWORD PTR [edi+0x4],eax
64002376:	mov    eax,DWORD PTR [esi+0x4]
64002379:	lea    ecx,[eax+eax*1+0x2]
6400237d:	push   ecx
6400237e:	add    esi,0x10
64002381:	lea    edx,[eax+eax*1+0x2]
64002385:	push   esi
64002386:	push   edx
64002387:	lea    eax,[edi+0x10]
6400238a:	push   eax
6400238b:	call   0x64011ed8
64002390:	add    esp,0x10
64002393:	mov    esi,DWORD PTR [esp+0x14]
64002397:	mov    DWORD PTR [esp+0x440],0xffffffff
640023a2:	mov    eax,DWORD PTR [esp+0x10]
640023a6:	add    edi,0x10
640023a9:	add    eax,0xfffffff0
640023ac:	mov    DWORD PTR [esi],edi
640023ae:	lea    ecx,[eax+0xc]
640023b1:	or     edx,0xffffffff
640023b4:	lock xadd DWORD PTR [ecx],edx
640023b8:	dec    edx
640023b9:	test   edx,edx
640023bb:	jg     0x640023c7
640023bd:	mov    ecx,DWORD PTR [eax]
640023bf:	mov    edx,DWORD PTR [ecx]
640023c1:	push   eax
640023c2:	mov    eax,DWORD PTR [edx+0x4]
640023c5:	call   eax
640023c7:	mov    eax,esi
640023c9:	mov    ecx,DWORD PTR [esp+0x438]
640023d0:	mov    DWORD PTR fs:0x0,ecx
640023d7:	pop    ecx
640023d8:	pop    edi
640023d9:	pop    esi
640023da:	pop    ebx
640023db:	mov    ecx,DWORD PTR [esp+0x420]
640023e2:	xor    ecx,esp
640023e4:	call   0x6401257c
640023e9:	mov    esp,ebp
640023eb:	pop    ebp
640023ec:	ret    
640023ed:	int3   
640023ee:	int3   
640023ef:	int3   
640023f0:	push   0xffffffff
640023f2:	push   0x64022b60
640023f7:	mov    eax,fs:0x0
640023fd:	push   eax
640023fe:	sub    esp,0x4c
64002401:	push   ebx
64002402:	push   esi
64002403:	push   edi
64002404:	mov    eax,ds:0x6402c09c
64002409:	xor    eax,esp
6400240b:	push   eax
6400240c:	lea    eax,[esp+0x5c]
64002410:	mov    fs:0x0,eax
64002416:	xor    ebx,ebx
64002418:	push   ebx
64002419:	push   0x80
6400241e:	push   0x2
64002420:	push   ebx
64002421:	push   ebx
64002422:	mov    DWORD PTR [esp+0x78],ebx
64002426:	mov    edi,DWORD PTR [esp+0x80]
6400242d:	push   0x40000000
64002432:	push   edi
64002433:	call   0x6400df80
64002438:	call   eax
6400243a:	mov    esi,eax
6400243c:	mov    DWORD PTR [esp+0x10],esi
64002440:	cmp    esi,0xffffffff
64002443:	mov    BYTE PTR [esp+0x64],0x1
64002448:	push   ebx
64002449:	jne    0x6400248b
6400244b:	push   0x640265c6
64002450:	lea    ecx,[esp+0x20]
64002454:	mov    DWORD PTR [esp+0x38],0xf
6400245c:	mov    DWORD PTR [esp+0x34],ebx
64002460:	mov    BYTE PTR [esp+0x24],bl
64002464:	call   0x64001860
64002469:	lea    eax,[esp+0x18]
6400246d:	push   eax
6400246e:	lea    ecx,[esp+0x38]
64002472:	mov    BYTE PTR [esp+0x68],0x2
64002477:	call   0x64002020
6400247c:	push   0x64029cd4
64002481:	lea    ecx,[esp+0x38]
64002485:	push   ecx
64002486:	call   0x6401216b
6400248b:	mov    eax,DWORD PTR [esp+0x78]
6400248f:	mov    ecx,DWORD PTR [esp+0x74]
64002493:	lea    edx,[esp+0x18]
64002497:	push   edx
64002498:	push   eax
64002499:	push   ecx
6400249a:	push   esi
6400249b:	call   DWORD PTR ds:0x64024084
640024a1:	test   eax,eax
640024a3:	jne    0x640024e6
640024a5:	push   ebx
640024a6:	push   0x640265c6
640024ab:	lea    ecx,[esp+0x20]
640024af:	mov    DWORD PTR [esp+0x38],0xf
640024b7:	mov    DWORD PTR [esp+0x34],ebx
640024bb:	mov    BYTE PTR [esp+0x24],bl
640024bf:	call   0x64001860
640024c4:	lea    edx,[esp+0x18]
640024c8:	push   edx
640024c9:	lea    ecx,[esp+0x38]
640024cd:	mov    BYTE PTR [esp+0x68],0x3
640024d2:	call   0x64002020
640024d7:	push   0x64029cd4
640024dc:	lea    eax,[esp+0x38]
640024e0:	push   eax
640024e1:	call   0x6401216b
640024e6:	cmp    esi,ebx
640024e8:	je     0x64002500
640024ea:	call   DWORD PTR ds:0x64024044
640024f0:	push   esi
640024f1:	mov    ebx,eax
640024f3:	call   DWORD PTR ds:0x64024040
640024f9:	push   ebx
640024fa:	call   DWORD PTR ds:0x6402405c
64002500:	lea    eax,[edi-0x10]
64002503:	mov    DWORD PTR [esp+0x64],0xffffffff
6400250b:	lea    ecx,[eax+0xc]
6400250e:	or     edx,0xffffffff
64002511:	lock xadd DWORD PTR [ecx],edx
64002515:	dec    edx
64002516:	test   edx,edx
64002518:	jg     0x64002524
6400251a:	mov    ecx,DWORD PTR [eax]
6400251c:	mov    edx,DWORD PTR [ecx]
6400251e:	push   eax
6400251f:	mov    eax,DWORD PTR [edx+0x4]
64002522:	call   eax
64002524:	mov    ecx,DWORD PTR [esp+0x5c]
64002528:	mov    DWORD PTR fs:0x0,ecx
6400252f:	pop    ecx
64002530:	pop    edi
64002531:	pop    esi
64002532:	pop    ebx
64002533:	add    esp,0x58
64002536:	ret    
64002537:	int3   
64002538:	int3   
64002539:	int3   
6400253a:	int3   
6400253b:	int3   
6400253c:	int3   
6400253d:	int3   
6400253e:	int3   
6400253f:	int3   
64002540:	sub    esp,0x8
64002543:	mov    DWORD PTR [esp],0x0
6400254a:	mov    DWORD PTR [esp+0x4],0x0
64002552:	call   DWORD PTR ds:0x6402c06c
64002558:	mov    eax,DWORD PTR [esp+0x10]
6400255c:	mov    eax,DWORD PTR [eax]
6400255e:	lea    ecx,[esp+0x4]
64002562:	push   ecx
64002563:	push   0x0
64002565:	lea    edx,[esp+0x8]
64002569:	push   edx
6400256a:	push   0x0
6400256c:	push   0x0
6400256e:	push   0x5
64002570:	push   0x1
64002572:	push   eax
64002573:	call   0x6400e3c0
64002578:	call   eax
6400257a:	test   eax,eax
6400257c:	jne    0x6400259a
6400257e:	mov    ecx,DWORD PTR [esp]
64002581:	mov    eax,DWORD PTR [esp+0xc]
64002585:	mov    eax,DWORD PTR [eax]
64002587:	push   0x0
64002589:	push   ecx
6400258a:	push   0x0
6400258c:	push   0x0
6400258e:	push   0x4
64002590:	push   0x1
64002592:	push   eax
64002593:	call   0x6400e450
64002598:	call   eax
6400259a:	add    esp,0x8
6400259d:	ret    
6400259e:	int3   
6400259f:	int3   
640025a0:	push   0xffffffff
640025a2:	push   0x64022828
640025a7:	mov    eax,fs:0x0
640025ad:	push   eax
640025ae:	push   ecx
640025af:	push   esi
640025b0:	push   edi
640025b1:	mov    eax,ds:0x6402c09c
640025b6:	xor    eax,esp
640025b8:	push   eax
640025b9:	lea    eax,[esp+0x10]
640025bd:	mov    fs:0x0,eax
640025c3:	mov    edi,ecx
640025c5:	mov    DWORD PTR [esp+0xc],edi
640025c9:	mov    eax,ds:0x6402d560
640025ce:	mov    edx,DWORD PTR [eax+0xc]
640025d1:	mov    ecx,0x6402d560
640025d6:	call   edx
640025d8:	add    eax,0x10
640025db:	mov    DWORD PTR [edi],eax
640025dd:	mov    edx,DWORD PTR [esp+0x20]
640025e1:	test   edx,edx
640025e3:	mov    DWORD PTR [esp+0x18],0x0
640025eb:	je     0x64002612
640025ed:	test   edx,0xffff0000
640025f3:	jne    0x64002616
640025f5:	movzx  esi,dx
640025f8:	push   0x0
640025fa:	push   esi
640025fb:	call   0x64001fa0
64002600:	add    esp,0x8
64002603:	test   eax,eax
64002605:	je     0x64002638
64002607:	push   esi
64002608:	push   eax
64002609:	mov    ecx,edi
6400260b:	call   0x64002920
64002610:	jmp    0x64002638
64002612:	xor    eax,eax
64002614:	jmp    0x6400262f
64002616:	mov    eax,edx
64002618:	lea    esi,[eax+0x2]
6400261b:	jmp    0x64002620
6400261d:	lea    ecx,[ecx+0x0]
64002620:	mov    cx,WORD PTR [eax]
64002623:	add    eax,0x2
64002626:	test   cx,cx
64002629:	jne    0x64002620
6400262b:	sub    eax,esi
6400262d:	sar    eax,1
6400262f:	push   eax
64002630:	push   edx
64002631:	mov    ecx,edi
64002633:	call   0x64002af0
64002638:	mov    eax,edi
6400263a:	mov    ecx,DWORD PTR [esp+0x10]
6400263e:	mov    DWORD PTR fs:0x0,ecx
64002645:	pop    ecx
64002646:	pop    edi
64002647:	pop    esi
64002648:	add    esp,0x10
6400264b:	ret    0x4
6400264e:	int3   
6400264f:	int3   
64002650:	mov    eax,DWORD PTR [esp+0x4]
64002654:	mov    eax,DWORD PTR [eax]
64002656:	push   esi
64002657:	mov    esi,ecx
64002659:	mov    ecx,DWORD PTR [eax-0xc]
6400265c:	push   ecx
6400265d:	push   eax
6400265e:	mov    ecx,esi
64002660:	call   0x640029f0
64002665:	mov    eax,esi
64002667:	pop    esi
64002668:	ret    0x4
6400266b:	int3   
6400266c:	int3   
6400266d:	int3   
6400266e:	int3   
6400266f:	int3   
64002670:	push   0xffffffff
64002672:	push   0x640227f8
64002677:	mov    eax,fs:0x0
6400267d:	push   eax
6400267e:	push   ecx
6400267f:	push   esi
64002680:	mov    eax,ds:0x6402c09c
64002685:	xor    eax,esp
64002687:	push   eax
64002688:	lea    eax,[esp+0xc]
6400268c:	mov    fs:0x0,eax
64002692:	mov    esi,ecx
64002694:	mov    eax,DWORD PTR [esi]
64002696:	mov    ecx,DWORD PTR [eax-0x10]
64002699:	test   ecx,ecx
6400269b:	je     0x640026a8
6400269d:	mov    edx,DWORD PTR [ecx]
6400269f:	mov    eax,DWORD PTR [edx+0x10]
640026a2:	call   eax
640026a4:	test   eax,eax
640026a6:	jne    0x640026b8
640026a8:	mov    edx,DWORD PTR ds:0x6402d560
640026ae:	mov    eax,DWORD PTR [edx+0x10]
640026b1:	mov    ecx,0x6402d560
640026b6:	call   eax
640026b8:	mov    ecx,DWORD PTR [esp+0x1c]
640026bc:	push   eax
640026bd:	push   ecx
640026be:	lea    ecx,[esp+0x10]
640026c2:	call   0x64002770
640026c7:	mov    DWORD PTR [esp+0x14],0x0
640026cf:	mov    eax,DWORD PTR [esp+0x8]
640026d3:	mov    ecx,DWORD PTR [eax-0xc]
640026d6:	push   ecx
640026d7:	push   eax
640026d8:	mov    ecx,esi
640026da:	call   0x640029f0
640026df:	mov    DWORD PTR [esp+0x14],0xffffffff
640026e7:	mov    eax,DWORD PTR [esp+0x8]
640026eb:	add    eax,0xfffffff0
640026ee:	lea    edx,[eax+0xc]
640026f1:	or     ecx,0xffffffff
640026f4:	lock xadd DWORD PTR [edx],ecx
640026f8:	dec    ecx
640026f9:	test   ecx,ecx
640026fb:	jg     0x64002707
640026fd:	mov    ecx,DWORD PTR [eax]
640026ff:	mov    edx,DWORD PTR [ecx]
64002701:	push   eax
64002702:	mov    eax,DWORD PTR [edx+0x4]
64002705:	call   eax
64002707:	mov    eax,esi
64002709:	mov    ecx,DWORD PTR [esp+0xc]
6400270d:	mov    DWORD PTR fs:0x0,ecx
64002714:	pop    ecx
64002715:	pop    esi
64002716:	add    esp,0x10
64002719:	ret    0x4
6400271c:	int3   
6400271d:	int3   
6400271e:	int3   
6400271f:	int3   
64002720:	mov    edx,DWORD PTR [esp+0x4]
64002724:	push   esi
64002725:	mov    esi,ecx
64002727:	mov    eax,edx
64002729:	push   edi
6400272a:	mov    DWORD PTR [esi+0x18],0xf
64002731:	mov    DWORD PTR [esi+0x14],0x0
64002738:	mov    BYTE PTR [esi+0x4],0x0
6400273c:	lea    edi,[eax+0x1]
6400273f:	nop
64002740:	mov    cl,BYTE PTR [eax]
64002742:	add    eax,0x1
64002745:	test   cl,cl
64002747:	jne    0x64002740
64002749:	sub    eax,edi
6400274b:	push   eax
6400274c:	push   edx
6400274d:	mov    ecx,esi
6400274f:	call   0x64001860
64002754:	pop    edi
64002755:	mov    eax,esi
64002757:	pop    esi
64002758:	ret    0x4
6400275b:	int3   
6400275c:	int3   
6400275d:	int3   
6400275e:	int3   
6400275f:	int3   
64002760:	mov    eax,DWORD PTR [ecx]
64002762:	push   eax
64002763:	call   0x64011d22
64002768:	pop    ecx
64002769:	ret    
6400276a:	int3   
6400276b:	int3   
6400276c:	int3   
6400276d:	int3   
6400276e:	int3   
6400276f:	int3   
64002770:	push   0xffffffff
64002772:	push   0x640227c8
64002777:	mov    eax,fs:0x0
6400277d:	push   eax
6400277e:	push   ecx
6400277f:	push   esi
64002780:	push   edi
64002781:	mov    eax,ds:0x6402c09c
64002786:	xor    eax,esp
64002788:	push   eax
64002789:	lea    eax,[esp+0x10]
6400278d:	mov    fs:0x0,eax
64002793:	mov    esi,ecx
64002795:	mov    DWORD PTR [esp+0xc],esi
64002799:	mov    ecx,DWORD PTR [esp+0x24]
6400279d:	xor    eax,eax
6400279f:	test   ecx,ecx
640027a1:	setne  al
640027a4:	test   eax,eax
640027a6:	jne    0x640027b2
640027a8:	push   0x80004005
640027ad:	call   0x64001040
640027b2:	mov    eax,DWORD PTR [ecx]
640027b4:	mov    edx,DWORD PTR [eax+0xc]
640027b7:	call   edx
640027b9:	add    eax,0x10
640027bc:	mov    DWORD PTR [esi],eax
640027be:	mov    eax,DWORD PTR [esp+0x20]
640027c2:	test   eax,eax
640027c4:	mov    DWORD PTR [esp+0x18],0x0
640027cc:	je     0x640027f2
640027ce:	test   eax,0xffff0000
640027d3:	jne    0x640027f2
640027d5:	movzx  edi,ax
640027d8:	push   0x0
640027da:	push   edi
640027db:	call   0x64001fa0
640027e0:	add    esp,0x8
640027e3:	test   eax,eax
640027e5:	je     0x640027fa
640027e7:	push   edi
640027e8:	push   eax
640027e9:	mov    ecx,esi
640027eb:	call   0x64002920
640027f0:	jmp    0x640027fa
640027f2:	push   eax
640027f3:	mov    ecx,esi
640027f5:	call   0x64002810
640027fa:	mov    eax,esi
640027fc:	mov    ecx,DWORD PTR [esp+0x10]
64002800:	mov    DWORD PTR fs:0x0,ecx
64002807:	pop    ecx
64002808:	pop    edi
64002809:	pop    esi
6400280a:	add    esp,0x10
6400280d:	ret    0x8
64002810:	push   ebx
64002811:	mov    ebx,DWORD PTR [esp+0x8]
64002815:	test   ebx,ebx
64002817:	push   ebp
64002818:	push   esi
64002819:	push   edi
6400281a:	mov    edi,ecx
6400281c:	je     0x64002894
6400281e:	call   DWORD PTR ds:0x6402c06c
64002824:	mov    ebp,DWORD PTR ds:0x64024024
6400282a:	push   0x0
6400282c:	push   0x0
6400282e:	push   0xffffffff
64002830:	push   ebx
64002831:	push   0x0
64002833:	push   eax
64002834:	call   ebp
64002836:	mov    esi,eax
64002838:	sub    esi,0x1
6400283b:	test   esi,esi
6400283d:	jle    0x64002894
6400283f:	mov    eax,DWORD PTR [edi]
64002841:	mov    edx,DWORD PTR [eax-0x8]
64002844:	sub    eax,0x10
64002847:	mov    ecx,0x1
6400284c:	sub    ecx,DWORD PTR [eax+0xc]
6400284f:	sub    edx,esi
64002851:	or     ecx,edx
64002853:	jge    0x6400285d
64002855:	push   esi
64002856:	mov    ecx,edi
64002858:	call   0x64001e00
6400285d:	mov    eax,DWORD PTR [edi]
6400285f:	push   esi
64002860:	push   eax
64002861:	push   0xffffffff
64002863:	push   ebx
64002864:	push   0x0
64002866:	call   DWORD PTR ds:0x6402c06c
6400286c:	push   eax
6400286d:	call   ebp
6400286f:	mov    eax,DWORD PTR [edi]
64002871:	cmp    esi,DWORD PTR [eax-0x8]
64002874:	jg     0x6400288a
64002876:	mov    DWORD PTR [eax-0xc],esi
64002879:	mov    eax,DWORD PTR [edi]
6400287b:	mov    WORD PTR [eax+esi*2],0x0
64002881:	mov    eax,edi
64002883:	pop    edi
64002884:	pop    esi
64002885:	pop    ebp
64002886:	pop    ebx
64002887:	ret    0x4
6400288a:	push   0x80070057
6400288f:	call   0x64001040
64002894:	mov    ecx,edi
64002896:	call   0x64002a80
6400289b:	mov    eax,edi
6400289d:	pop    edi
6400289e:	pop    esi
6400289f:	pop    ebp
640028a0:	pop    ebx
640028a1:	ret    0x4
640028a4:	int3   
640028a5:	int3   
640028a6:	int3   
640028a7:	int3   
640028a8:	int3   
640028a9:	int3   
640028aa:	int3   
640028ab:	int3   
640028ac:	int3   
640028ad:	int3   
640028ae:	int3   
640028af:	int3   
640028b0:	push   esi
640028b1:	mov    esi,DWORD PTR [esp+0x8]
640028b5:	mov    ecx,DWORD PTR [esi]
640028b7:	mov    eax,DWORD PTR [ecx]
640028b9:	mov    edx,DWORD PTR [eax+0x10]
640028bc:	push   edi
640028bd:	call   edx
640028bf:	cmp    DWORD PTR [esi+0xc],0x0
640028c3:	lea    ecx,[esi+0xc]
640028c6:	jl     0x640028dc
640028c8:	cmp    eax,DWORD PTR [esi]
640028ca:	jne    0x640028dc
640028cc:	mov    edi,esi
640028ce:	mov    eax,0x1
640028d3:	lock xadd DWORD PTR [ecx],eax
640028d7:	mov    eax,edi
640028d9:	pop    edi
640028da:	pop    esi
640028db:	ret    
640028dc:	mov    ecx,DWORD PTR [esi+0x4]
640028df:	mov    edx,DWORD PTR [eax]
640028e1:	mov    edx,DWORD PTR [edx]
640028e3:	push   0x2
640028e5:	push   ecx
640028e6:	mov    ecx,eax
640028e8:	call   edx
640028ea:	mov    edi,eax
640028ec:	test   edi,edi
640028ee:	jne    0x640028f5
640028f0:	jmp    0x64001b50
640028f5:	mov    eax,DWORD PTR [esi+0x4]
640028f8:	mov    DWORD PTR [edi+0x4],eax
640028fb:	mov    eax,DWORD PTR [esi+0x4]
640028fe:	lea    eax,[eax+eax*1+0x2]
64002902:	push   eax
64002903:	add    esi,0x10
64002906:	push   esi
64002907:	push   eax
64002908:	lea    ecx,[edi+0x10]
6400290b:	push   ecx
6400290c:	call   0x64011ed8
64002911:	add    esp,0x10
64002914:	mov    eax,edi
64002916:	pop    edi
64002917:	pop    esi
64002918:	ret    
64002919:	int3   
6400291a:	int3   
6400291b:	int3   
6400291c:	int3   
6400291d:	int3   
6400291e:	int3   
6400291f:	int3   
64002920:	push   ebx
64002921:	push   esi
64002922:	mov    esi,DWORD PTR [esp+0x10]
64002926:	mov    eax,esi
64002928:	shr    eax,0x4
6400292b:	push   edi
6400292c:	mov    edi,DWORD PTR [esp+0x10]
64002930:	add    eax,0x1
64002933:	mov    ebx,ecx
64002935:	movzx  ecx,ax
64002938:	push   0x6
6400293a:	push   ecx
6400293b:	push   edi
6400293c:	call   DWORD PTR ds:0x64024038
64002942:	test   eax,eax
64002944:	je     0x64002957
64002946:	push   esi
64002947:	push   eax
64002948:	push   edi
64002949:	call   0x64001f30
6400294e:	mov    esi,eax
64002950:	add    esp,0xc
64002953:	test   esi,esi
64002955:	jne    0x6400295f
64002957:	pop    edi
64002958:	pop    esi
64002959:	xor    eax,eax
6400295b:	pop    ebx
6400295c:	ret    0x8
6400295f:	mov    eax,DWORD PTR [ebx]
64002961:	movzx  edi,WORD PTR [esi]
64002964:	sub    eax,0x10
64002967:	mov    edx,0x1
6400296c:	sub    edx,DWORD PTR [eax+0xc]
6400296f:	mov    eax,DWORD PTR [eax+0x8]
64002972:	sub    eax,edi
64002974:	or     edx,eax
64002976:	jge    0x64002980
64002978:	push   edi
64002979:	mov    ecx,ebx
6400297b:	call   0x64001e00
64002980:	movzx  eax,WORD PTR [esi]
64002983:	cmp    eax,0xffffffff
64002986:	push   ebp
64002987:	mov    ebp,DWORD PTR [ebx]
64002989:	lea    edx,[esi+0x2]
6400298c:	jne    0x640029a5
6400298e:	mov    eax,edx
64002990:	lea    esi,[eax+0x2]
64002993:	mov    cx,WORD PTR [eax]
64002996:	add    eax,0x2
64002999:	test   cx,cx
6400299c:	jne    0x64002993
6400299e:	sub    eax,esi
640029a0:	sar    eax,1
640029a2:	add    eax,0x1
640029a5:	lea    ecx,[eax+eax*1]
640029a8:	push   ecx
640029a9:	push   edx
640029aa:	lea    esi,[edi+edi*1]
640029ad:	push   esi
640029ae:	push   ebp
640029af:	call   0x64011ed8
640029b4:	push   eax
640029b5:	call   0x64001e90
640029ba:	add    esp,0x14
640029bd:	test   edi,edi
640029bf:	pop    ebp
640029c0:	jl     0x640029df
640029c2:	mov    eax,DWORD PTR [ebx]
640029c4:	cmp    edi,DWORD PTR [eax-0x8]
640029c7:	jg     0x640029df
640029c9:	mov    DWORD PTR [eax-0xc],edi
640029cc:	mov    edx,DWORD PTR [ebx]
640029ce:	pop    edi
640029cf:	mov    WORD PTR [esi+edx*1],0x0
640029d5:	pop    esi
640029d6:	mov    eax,0x1
640029db:	pop    ebx
640029dc:	ret    0x8
640029df:	push   0x80070057
640029e4:	call   0x64001040
640029e9:	int3   
640029ea:	int3   
640029eb:	int3   
640029ec:	int3   
640029ed:	int3   
640029ee:	int3   
640029ef:	int3   
640029f0:	push   ebx
640029f1:	push   ebp
640029f2:	push   esi
640029f3:	mov    esi,DWORD PTR [esp+0x10]
640029f7:	mov    ebp,ecx
640029f9:	mov    eax,DWORD PTR [ebp+0x0]
640029fc:	mov    ebx,DWORD PTR [eax-0xc]
640029ff:	mov    ecx,DWORD PTR [esp+0x14]
64002a03:	sub    esi,eax
64002a05:	mov    edx,0x1
64002a0a:	sub    edx,DWORD PTR [eax-0x4]
64002a0d:	mov    eax,DWORD PTR [eax-0x8]
64002a10:	push   edi
64002a11:	lea    edi,[ebx+ecx*1]
64002a14:	sub    eax,edi
64002a16:	sar    esi,1
64002a18:	or     edx,eax
64002a1a:	jge    0x64002a24
64002a1c:	push   edi
64002a1d:	mov    ecx,ebp
64002a1f:	call   0x64001e00
64002a24:	cmp    esi,ebx
64002a26:	mov    ecx,DWORD PTR [ebp+0x0]
64002a29:	ja     0x64002a32
64002a2b:	lea    edx,[ecx+esi*2]
64002a2e:	mov    DWORD PTR [esp+0x14],edx
64002a32:	mov    eax,DWORD PTR [esp+0x18]
64002a36:	mov    edx,DWORD PTR [esp+0x14]
64002a3a:	add    eax,eax
64002a3c:	push   eax
64002a3d:	push   edx
64002a3e:	push   eax
64002a3f:	lea    eax,[ecx+ebx*2]
64002a42:	push   eax
64002a43:	call   0x64011ed8
64002a48:	add    esp,0x10
64002a4b:	test   edi,edi
64002a4d:	jl     0x64002a6a
64002a4f:	mov    eax,DWORD PTR [ebp+0x0]
64002a52:	cmp    edi,DWORD PTR [eax-0x8]
64002a55:	jg     0x64002a6a
64002a57:	mov    DWORD PTR [eax-0xc],edi
64002a5a:	mov    ecx,DWORD PTR [ebp+0x0]
64002a5d:	mov    WORD PTR [ecx+edi*2],0x0
64002a63:	pop    edi
64002a64:	pop    esi
64002a65:	pop    ebp
64002a66:	pop    ebx
64002a67:	ret    0x8
64002a6a:	push   0x80070057
64002a6f:	call   0x64001040
64002a74:	int3   
64002a75:	int3   
64002a76:	int3   
64002a77:	int3   
64002a78:	int3   
64002a79:	int3   
64002a7a:	int3   
64002a7b:	int3   
64002a7c:	int3   
64002a7d:	int3   
64002a7e:	int3   
64002a7f:	int3   
64002a80:	push   esi
64002a81:	mov    esi,ecx
64002a83:	mov    ecx,DWORD PTR [esi]
64002a85:	cmp    DWORD PTR [ecx-0xc],0x0
64002a89:	lea    eax,[ecx-0x10]
64002a8c:	push   edi
64002a8d:	mov    edi,DWORD PTR [eax]
64002a8f:	je     0x64002adf
64002a91:	cmp    DWORD PTR [eax+0xc],0x0
64002a95:	lea    edx,[eax+0xc]
64002a98:	jge    0x64002abb
64002a9a:	cmp    DWORD PTR [ecx-0x8],0x0
64002a9e:	jge    0x64002aaa
64002aa0:	push   0x80070057
64002aa5:	call   0x64001040
64002aaa:	mov    DWORD PTR [ecx-0xc],0x0
64002ab1:	mov    eax,DWORD PTR [esi]
64002ab3:	pop    edi
64002ab4:	mov    WORD PTR [eax],0x0
64002ab9:	pop    esi
64002aba:	ret    
64002abb:	or     ecx,0xffffffff
64002abe:	lock xadd DWORD PTR [edx],ecx
64002ac2:	dec    ecx
64002ac3:	test   ecx,ecx
64002ac5:	jg     0x64002ad1
64002ac7:	mov    ecx,DWORD PTR [eax]
64002ac9:	mov    edx,DWORD PTR [ecx]
64002acb:	push   eax
64002acc:	mov    eax,DWORD PTR [edx+0x4]
64002acf:	call   eax
64002ad1:	mov    edx,DWORD PTR [edi]
64002ad3:	mov    eax,DWORD PTR [edx+0xc]
64002ad6:	mov    ecx,edi
64002ad8:	call   eax
64002ada:	add    eax,0x10
64002add:	mov    DWORD PTR [esi],eax
64002adf:	pop    edi
64002ae0:	pop    esi
64002ae1:	ret    
64002ae2:	int3   
64002ae3:	int3   
64002ae4:	int3   
64002ae5:	int3   
64002ae6:	int3   
64002ae7:	int3   
64002ae8:	int3   
64002ae9:	int3   
64002aea:	int3   
64002aeb:	int3   
64002aec:	int3   
64002aed:	int3   
64002aee:	int3   
64002aef:	int3   
64002af0:	push   ebx
64002af1:	mov    ebx,DWORD PTR [esp+0xc]
64002af5:	test   ebx,ebx
64002af7:	push   ebp
64002af8:	mov    ebp,ecx
64002afa:	jne    0x64002b06
64002afc:	call   0x64002a80
64002b01:	pop    ebp
64002b02:	pop    ebx
64002b03:	ret    0x8
64002b06:	push   esi
64002b07:	mov    esi,DWORD PTR [esp+0x10]
64002b0b:	test   esi,esi
64002b0d:	jne    0x64002b19
64002b0f:	push   0x80070057
64002b14:	call   0x64001040
64002b19:	mov    eax,DWORD PTR [ebp+0x0]
64002b1c:	mov    edx,DWORD PTR [eax-0x8]
64002b1f:	mov    ecx,0x1
64002b24:	sub    ecx,DWORD PTR [eax-0x4]
64002b27:	sub    esi,eax
64002b29:	sub    edx,ebx
64002b2b:	sar    esi,1
64002b2d:	or     ecx,edx
64002b2f:	push   edi
64002b30:	mov    edi,DWORD PTR [eax-0xc]
64002b33:	jge    0x64002b3d
64002b35:	push   ebx
64002b36:	mov    ecx,ebp
64002b38:	call   0x64001e00
64002b3d:	mov    eax,DWORD PTR [ebp+0x0]
64002b40:	cmp    esi,edi
64002b42:	lea    edi,[ebx+ebx*1]
64002b45:	push   edi
64002b46:	ja     0x64002b55
64002b48:	lea    ecx,[eax+esi*2]
64002b4b:	push   ecx
64002b4c:	push   edi
64002b4d:	push   eax
64002b4e:	call   0x64011f53
64002b53:	jmp    0x64002b61
64002b55:	mov    edx,DWORD PTR [esp+0x18]
64002b59:	push   edx
64002b5a:	push   edi
64002b5b:	push   eax
64002b5c:	call   0x64011ed8
64002b61:	add    esp,0x10
64002b64:	test   ebx,ebx
64002b66:	jl     0x64002b83
64002b68:	mov    eax,DWORD PTR [ebp+0x0]
64002b6b:	cmp    ebx,DWORD PTR [eax-0x8]
64002b6e:	jg     0x64002b83
64002b70:	mov    DWORD PTR [eax-0xc],ebx
64002b73:	mov    eax,DWORD PTR [ebp+0x0]
64002b76:	mov    WORD PTR [edi+eax*1],0x0
64002b7c:	pop    edi
64002b7d:	pop    esi
64002b7e:	pop    ebp
64002b7f:	pop    ebx
64002b80:	ret    0x8
64002b83:	push   0x80070057
64002b88:	call   0x64001040
64002b8d:	int3   
64002b8e:	int3   
64002b8f:	int3   
64002b90:	push   esi
64002b91:	mov    esi,DWORD PTR [esp+0x8]
64002b95:	test   esi,esi
64002b97:	je     0x64002bc8
64002b99:	mov    eax,DWORD PTR [esp+0xc]
64002b9d:	test   eax,eax
64002b9f:	je     0x64002bc8
64002ba1:	mov    ecx,DWORD PTR [esp+0x10]
64002ba5:	mov    edx,DWORD PTR [esp+0x14]
64002ba9:	push   0x0
64002bab:	push   0x0
64002bad:	push   ecx
64002bae:	push   esi
64002baf:	push   0xffffffff
64002bb1:	push   eax
64002bb2:	push   0x0
64002bb4:	push   edx
64002bb5:	mov    BYTE PTR [esi],0x0
64002bb8:	call   DWORD PTR ds:0x64024028
64002bbe:	neg    eax
64002bc0:	sbb    eax,eax
64002bc2:	and    eax,esi
64002bc4:	pop    esi
64002bc5:	ret    0x10
64002bc8:	xor    eax,eax
64002bca:	pop    esi
64002bcb:	ret    0x10
64002bce:	int3   
64002bcf:	int3   
64002bd0:	mov    eax,DWORD PTR [esi]
64002bd2:	test   eax,eax
64002bd4:	je     0x64002be3
64002bd6:	push   eax
64002bd7:	call   DWORD PTR ds:0x64024000
64002bdd:	mov    DWORD PTR [esi],0x0
64002be3:	ret    
64002be4:	int3   
64002be5:	int3   
64002be6:	int3   
64002be7:	int3   
64002be8:	int3   
64002be9:	int3   
64002bea:	int3   
64002beb:	int3   
64002bec:	int3   
64002bed:	int3   
64002bee:	int3   
64002bef:	int3   
64002bf0:	push   ecx
64002bf1:	mov    eax,DWORD PTR [edi]
64002bf3:	lea    ecx,[esp]
64002bf6:	push   ecx
64002bf7:	mov    ecx,DWORD PTR [esp+0xc]
64002bfb:	push   esi
64002bfc:	add    eax,eax
64002bfe:	lea    edx,[esp+0x14]
64002c02:	push   edx
64002c03:	mov    DWORD PTR [esp+0xc],eax
64002c07:	mov    eax,DWORD PTR [esp+0x18]
64002c0b:	push   0x0
64002c0d:	mov    DWORD PTR [edi],0x0
64002c13:	mov    edx,DWORD PTR [ecx]
64002c15:	push   eax
64002c16:	push   edx
64002c17:	call   DWORD PTR ds:0x6402400c
64002c1d:	test   eax,eax
64002c1f:	jne    0x64002c5e
64002c21:	mov    eax,DWORD PTR [esp+0xc]
64002c25:	cmp    eax,0x1
64002c28:	je     0x64002c2f
64002c2a:	cmp    eax,0x2
64002c2d:	jne    0x64002c4a
64002c2f:	test   esi,esi
64002c31:	mov    eax,DWORD PTR [esp]
64002c34:	je     0x64002c58
64002c36:	test   eax,eax
64002c38:	je     0x64002c53
64002c3a:	test   al,0x1
64002c3c:	jne    0x64002c4a
64002c3e:	mov    ecx,eax
64002c40:	shr    ecx,1
64002c42:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
64002c48:	je     0x64002c58
64002c4a:	mov    eax,0xd
64002c4f:	pop    ecx
64002c50:	ret    0x8
64002c53:	mov    WORD PTR [esi],0x0
64002c58:	shr    eax,1
64002c5a:	mov    DWORD PTR [edi],eax
64002c5c:	xor    eax,eax
64002c5e:	pop    ecx
64002c5f:	ret    0x8
64002c62:	int3   
64002c63:	int3   
64002c64:	int3   
64002c65:	int3   
64002c66:	int3   
64002c67:	int3   
64002c68:	int3   
64002c69:	int3   
64002c6a:	int3   
64002c6b:	int3   
64002c6c:	int3   
64002c6d:	int3   
64002c6e:	int3   
64002c6f:	int3   
64002c70:	ret    
64002c71:	int3   
64002c72:	int3   
64002c73:	int3   
64002c74:	int3   
64002c75:	int3   
64002c76:	int3   
64002c77:	int3   
64002c78:	int3   
64002c79:	int3   
64002c7a:	int3   
64002c7b:	int3   
64002c7c:	int3   
64002c7d:	int3   
64002c7e:	int3   
64002c7f:	int3   
64002c80:	mov    eax,DWORD PTR [esp+0xc]
64002c84:	cmp    eax,0x4
64002c87:	mov    ecx,DWORD PTR [esp+0x8]
64002c8b:	mov    edx,DWORD PTR [esp+0x4]
64002c8f:	push   esi
64002c90:	push   edi
64002c91:	jb     0x64002ca7
64002c93:	mov    esi,DWORD PTR [edx]
64002c95:	cmp    esi,DWORD PTR [ecx]
64002c97:	jne    0x64002cab
64002c99:	sub    eax,0x4
64002c9c:	add    ecx,0x4
64002c9f:	add    edx,0x4
64002ca2:	cmp    eax,0x4
64002ca5:	jae    0x64002c93
64002ca7:	test   eax,eax
64002ca9:	je     0x64002d09
64002cab:	movzx  esi,BYTE PTR [edx]
64002cae:	movzx  edi,BYTE PTR [ecx]
64002cb1:	sub    esi,edi
64002cb3:	jne    0x64002cfa
64002cb5:	sub    eax,0x1
64002cb8:	add    ecx,0x1
64002cbb:	add    edx,0x1
64002cbe:	test   eax,eax
64002cc0:	je     0x64002d09
64002cc2:	movzx  esi,BYTE PTR [edx]
64002cc5:	movzx  edi,BYTE PTR [ecx]
64002cc8:	sub    esi,edi
64002cca:	jne    0x64002cfa
64002ccc:	sub    eax,0x1
64002ccf:	add    ecx,0x1
64002cd2:	add    edx,0x1
64002cd5:	test   eax,eax
64002cd7:	je     0x64002d09
64002cd9:	movzx  esi,BYTE PTR [edx]
64002cdc:	movzx  edi,BYTE PTR [ecx]
64002cdf:	sub    esi,edi
64002ce1:	jne    0x64002cfa
64002ce3:	sub    eax,0x1
64002ce6:	add    ecx,0x1
64002ce9:	add    edx,0x1
64002cec:	test   eax,eax
64002cee:	je     0x64002d09
64002cf0:	movzx  esi,BYTE PTR [edx]
64002cf3:	movzx  eax,BYTE PTR [ecx]
64002cf6:	sub    esi,eax
64002cf8:	je     0x64002d09
64002cfa:	test   esi,esi
64002cfc:	mov    eax,0x1
64002d01:	jg     0x64002d0b
64002d03:	pop    edi
64002d04:	or     eax,0xffffffff
64002d07:	pop    esi
64002d08:	ret    
64002d09:	xor    eax,eax
64002d0b:	pop    edi
64002d0c:	pop    esi
64002d0d:	ret    
64002d0e:	int3   
64002d0f:	int3   
64002d10:	push   0xffffffff
64002d12:	push   0x64022288
64002d17:	mov    eax,fs:0x0
64002d1d:	push   eax
64002d1e:	push   ecx
64002d1f:	push   esi
64002d20:	mov    eax,ds:0x6402c09c
64002d25:	xor    eax,esp
64002d27:	push   eax
64002d28:	lea    eax,[esp+0xc]
64002d2c:	mov    fs:0x0,eax
64002d32:	mov    esi,ecx
64002d34:	mov    DWORD PTR [esp+0x8],esi
64002d38:	call   0x64011d6c
64002d3d:	xor    eax,eax
64002d3f:	mov    DWORD PTR [esp+0x14],eax
64002d43:	lea    ecx,[esi+0xc]
64002d46:	mov    DWORD PTR [esi],0x64024268
64002d4c:	push   0xffffffff
64002d4e:	mov    DWORD PTR [ecx+0x14],eax
64002d51:	mov    DWORD PTR [ecx+0x18],0xf
64002d58:	push   eax
64002d59:	mov    BYTE PTR [ecx+0x4],al
64002d5c:	mov    eax,DWORD PTR [esp+0x24]
64002d60:	push   eax
64002d61:	call   0x64001780
64002d66:	mov    eax,esi
64002d68:	mov    ecx,DWORD PTR [esp+0xc]
64002d6c:	mov    DWORD PTR fs:0x0,ecx
64002d73:	pop    ecx
64002d74:	pop    esi
64002d75:	add    esp,0x10
64002d78:	ret    0x4
64002d7b:	int3   
64002d7c:	int3   
64002d7d:	int3   
64002d7e:	int3   
64002d7f:	int3   
64002d80:	push   esi
64002d81:	mov    esi,ecx
64002d83:	mov    DWORD PTR [esi],0x64024268
64002d89:	cmp    DWORD PTR [esi+0x24],0x10
64002d8d:	jb     0x64002d9b
64002d8f:	mov    eax,DWORD PTR [esi+0x10]
64002d92:	push   eax
64002d93:	call   0x64011d22
64002d98:	add    esp,0x4
64002d9b:	xor    eax,eax
64002d9d:	mov    DWORD PTR [esi+0x24],0xf
64002da4:	mov    DWORD PTR [esi+0x20],eax
64002da7:	mov    BYTE PTR [esi+0x10],al
64002daa:	mov    ecx,esi
64002dac:	pop    esi
64002dad:	jmp    0x64011e3b
64002db2:	int3   
64002db3:	int3   
64002db4:	int3   
64002db5:	int3   
64002db6:	int3   
64002db7:	int3   
64002db8:	int3   
64002db9:	int3   
64002dba:	int3   
64002dbb:	int3   
64002dbc:	int3   
64002dbd:	int3   
64002dbe:	int3   
64002dbf:	int3   
64002dc0:	push   esi
64002dc1:	mov    esi,ecx
64002dc3:	mov    DWORD PTR [esi],0x64024268
64002dc9:	cmp    DWORD PTR [esi+0x24],0x10
64002dcd:	jb     0x64002ddb
64002dcf:	mov    eax,DWORD PTR [esi+0x10]
64002dd2:	push   eax
64002dd3:	call   0x64011d22
64002dd8:	add    esp,0x4
64002ddb:	xor    eax,eax
64002ddd:	mov    DWORD PTR [esi+0x24],0xf
64002de4:	mov    DWORD PTR [esi+0x20],eax
64002de7:	mov    ecx,esi
64002de9:	mov    BYTE PTR [esi+0x10],al
64002dec:	call   0x64011e3b
64002df1:	test   BYTE PTR [esp+0x8],0x1
64002df6:	je     0x64002e01
64002df8:	push   esi
64002df9:	call   0x64011d22
64002dfe:	add    esp,0x4
64002e01:	mov    eax,esi
64002e03:	pop    esi
64002e04:	ret    0x4
64002e07:	int3   
64002e08:	int3   
64002e09:	int3   
64002e0a:	int3   
64002e0b:	int3   
64002e0c:	int3   
64002e0d:	int3   
64002e0e:	int3   
64002e0f:	int3   
64002e10:	mov    eax,DWORD PTR [esp+0x4]
64002e14:	push   esi
64002e15:	push   eax
64002e16:	mov    esi,ecx
64002e18:	call   0x64002e30
64002e1d:	mov    DWORD PTR [esi],0x64024280
64002e23:	mov    eax,esi
64002e25:	pop    esi
64002e26:	ret    0x4
64002e29:	int3   
64002e2a:	int3   
64002e2b:	int3   
64002e2c:	int3   
64002e2d:	int3   
64002e2e:	int3   
64002e2f:	int3   
64002e30:	push   0xffffffff
64002e32:	push   0x64022258
64002e37:	mov    eax,fs:0x0
64002e3d:	push   eax
64002e3e:	push   ecx
64002e3f:	push   esi
64002e40:	push   edi
64002e41:	mov    eax,ds:0x6402c09c
64002e46:	xor    eax,esp
64002e48:	push   eax
64002e49:	lea    eax,[esp+0x10]
64002e4d:	mov    fs:0x0,eax
64002e53:	mov    esi,ecx
64002e55:	mov    DWORD PTR [esp+0xc],esi
64002e59:	mov    edi,DWORD PTR [esp+0x20]
64002e5d:	push   edi
64002e5e:	call   0x64011de3
64002e63:	xor    edx,edx
64002e65:	mov    DWORD PTR [esp+0x18],edx
64002e69:	push   0xffffffff
64002e6b:	lea    ecx,[esi+0xc]
64002e6e:	mov    DWORD PTR [esi],0x64024268
64002e74:	lea    eax,[edi+0xc]
64002e77:	push   edx
64002e78:	mov    DWORD PTR [ecx+0x18],0xf
64002e7f:	mov    DWORD PTR [ecx+0x14],edx
64002e82:	push   eax
64002e83:	mov    BYTE PTR [ecx+0x4],dl
64002e86:	call   0x64001780
64002e8b:	mov    eax,esi
64002e8d:	mov    ecx,DWORD PTR [esp+0x10]
64002e91:	mov    DWORD PTR fs:0x0,ecx
64002e98:	pop    ecx
64002e99:	pop    edi
64002e9a:	pop    esi
64002e9b:	add    esp,0x10
64002e9e:	ret    0x4
64002ea1:	int3   
64002ea2:	int3   
64002ea3:	int3   
64002ea4:	int3   
64002ea5:	int3   
64002ea6:	int3   
64002ea7:	int3   
64002ea8:	int3   
64002ea9:	int3   
64002eaa:	int3   
64002eab:	int3   
64002eac:	int3   
64002ead:	int3   
64002eae:	int3   
64002eaf:	int3   
64002eb0:	sub    esp,0x6c
64002eb3:	mov    eax,ds:0x6402c09c
64002eb8:	xor    eax,esp
64002eba:	mov    DWORD PTR [esp+0x68],eax
64002ebe:	mov    eax,DWORD PTR [esp+0x74]
64002ec2:	movzx  ecx,BYTE PTR [eax+0xf]
64002ec6:	movzx  edx,BYTE PTR [eax+0xe]
64002eca:	push   esi
64002ecb:	push   ecx
64002ecc:	movzx  ecx,BYTE PTR [eax+0xd]
64002ed0:	push   edx
64002ed1:	movzx  edx,BYTE PTR [eax+0xc]
64002ed5:	push   ecx
64002ed6:	movzx  ecx,BYTE PTR [eax+0xb]
64002eda:	push   edx
64002edb:	movzx  edx,BYTE PTR [eax+0xa]
64002edf:	mov    esi,DWORD PTR [esp+0x84]
64002ee6:	push   ecx
64002ee7:	movzx  ecx,BYTE PTR [eax+0x9]
64002eeb:	push   edx
64002eec:	movzx  edx,BYTE PTR [eax+0x8]
64002ef0:	push   ecx
64002ef1:	movzx  ecx,WORD PTR [eax+0x6]
64002ef5:	push   edx
64002ef6:	movzx  edx,WORD PTR [eax+0x4]
64002efa:	mov    eax,DWORD PTR [eax]
64002efc:	push   ecx
64002efd:	push   edx
64002efe:	push   eax
64002eff:	push   0x640265d4
64002f04:	push   0x32
64002f06:	push   0x640265fc
64002f0b:	mov    DWORD PTR [esp+0x3c],0x0
64002f13:	call   0x64006890
64002f18:	add    esp,0xc
64002f1b:	push   eax
64002f1c:	lea    ecx,[esp+0x38]
64002f20:	push   0x64
64002f22:	push   ecx
64002f23:	call   0x640130ab
64002f28:	add    esp,0x38
64002f2b:	lea    edx,[esp+0x8]
64002f2f:	push   edx
64002f30:	mov    ecx,esi
64002f32:	call   0x640065f0
64002f37:	mov    ecx,DWORD PTR [esp+0x6c]
64002f3b:	mov    eax,esi
64002f3d:	pop    esi
64002f3e:	xor    ecx,esp
64002f40:	call   0x6401257c
64002f45:	add    esp,0x6c
64002f48:	ret    
64002f49:	int3   
64002f4a:	int3   
64002f4b:	int3   
64002f4c:	int3   
64002f4d:	int3   
64002f4e:	int3   
64002f4f:	int3   
64002f50:	push   0xffffffff
64002f52:	push   0x64022798
64002f57:	mov    eax,fs:0x0
64002f5d:	push   eax
64002f5e:	sub    esp,0x24
64002f61:	mov    eax,ds:0x6402c09c
64002f66:	xor    eax,esp
64002f68:	mov    DWORD PTR [esp+0x20],eax
64002f6c:	push   ebx
64002f6d:	push   ebp
64002f6e:	push   edi
64002f6f:	mov    eax,ds:0x6402c09c
64002f74:	xor    eax,esp
64002f76:	push   eax
64002f77:	lea    eax,[esp+0x34]
64002f7b:	mov    fs:0x0,eax
64002f81:	mov    DWORD PTR [esp+0x3c],0x0
64002f89:	call   DWORD PTR ds:0x6402c06c
64002f8f:	mov    eax,ds:0x64024ac0
64002f94:	mov    ecx,DWORD PTR ds:0x64024ac4
64002f9a:	mov    edx,DWORD PTR ds:0x64024ac8
64002fa0:	mov    DWORD PTR [esp+0x20],eax
64002fa4:	mov    eax,ds:0x64024acc
64002fa9:	mov    DWORD PTR [esp+0x2c],eax
64002fad:	mov    eax,DWORD PTR [esp+0x44]
64002fb1:	mov    DWORD PTR [esp+0x24],ecx
64002fb5:	mov    DWORD PTR [esp+0x28],edx
64002fb9:	cmp    DWORD PTR [eax-0xc],0x0
64002fbd:	jle    0x64002fdd
64002fbf:	lea    ebx,[esp+0x44]
64002fc3:	call   0x640067c0
64002fc8:	mov    edi,ebx
64002fca:	call   0x64007180
64002fcf:	call   0x64006740
64002fd4:	call   0x64007180
64002fd9:	mov    eax,DWORD PTR [esp+0x44]
64002fdd:	cmp    DWORD PTR [eax-0x4],0x1
64002fe1:	jle    0x64002ff4
64002fe3:	mov    ecx,DWORD PTR [eax-0xc]
64002fe6:	push   ecx
64002fe7:	lea    ecx,[esp+0x48]
64002feb:	call   0x64001950
64002ff0:	mov    eax,DWORD PTR [esp+0x44]
64002ff4:	lea    edx,[esp+0x20]
64002ff8:	push   edx
64002ff9:	push   eax
64002ffa:	call   DWORD PTR ds:0x640241ac
64003000:	test   eax,eax
64003002:	je     0x64003021
64003004:	mov    eax,ds:0x64024acc
64003009:	mov    edi,DWORD PTR ds:0x64024ac0
6400300f:	mov    ebx,DWORD PTR ds:0x64024ac4
64003015:	mov    ebp,DWORD PTR ds:0x64024ac8
6400301b:	mov    DWORD PTR [esp+0x1c],eax
6400301f:	jmp    0x64003035
64003021:	mov    edx,DWORD PTR [esp+0x2c]
64003025:	mov    edi,DWORD PTR [esp+0x20]
64003029:	mov    ebx,DWORD PTR [esp+0x24]
6400302d:	mov    ebp,DWORD PTR [esp+0x28]
64003031:	mov    DWORD PTR [esp+0x1c],edx
64003035:	mov    DWORD PTR [esp+0x3c],0xffffffff
6400303d:	mov    eax,DWORD PTR [esp+0x44]
64003041:	add    eax,0xfffffff0
64003044:	or     edx,0xffffffff
64003047:	lea    ecx,[eax+0xc]
6400304a:	lock xadd DWORD PTR [ecx],edx
6400304e:	dec    edx
6400304f:	test   edx,edx
64003051:	jg     0x6400305d
64003053:	mov    ecx,DWORD PTR [eax]
64003055:	mov    edx,DWORD PTR [ecx]
64003057:	push   eax
64003058:	mov    eax,DWORD PTR [edx+0x4]
6400305b:	call   eax
6400305d:	mov    ecx,DWORD PTR [esp+0x1c]
64003061:	mov    DWORD PTR [esi],edi
64003063:	mov    DWORD PTR [esi+0x4],ebx
64003066:	mov    DWORD PTR [esi+0x8],ebp
64003069:	mov    eax,esi
6400306b:	mov    DWORD PTR [esi+0xc],ecx
6400306e:	mov    ecx,DWORD PTR [esp+0x34]
64003072:	mov    DWORD PTR fs:0x0,ecx
64003079:	pop    ecx
6400307a:	pop    edi
6400307b:	pop    ebp
6400307c:	pop    ebx
6400307d:	mov    ecx,DWORD PTR [esp+0x20]
64003081:	xor    ecx,esp
64003083:	call   0x6401257c
64003088:	add    esp,0x30
6400308b:	ret    
6400308c:	int3   
6400308d:	int3   
6400308e:	int3   
6400308f:	int3   
64003090:	push   ebp
64003091:	mov    ebp,esp
64003093:	sub    esp,0x18
64003096:	mov    eax,ds:0x6402c09c
6400309b:	xor    eax,ebp
6400309d:	mov    DWORD PTR [ebp-0x4],eax
640030a0:	mov    eax,DWORD PTR [ebp+0x8]
640030a3:	push   ebx
640030a4:	push   esi
640030a5:	push   edi
640030a6:	mov    DWORD PTR [ebp-0x14],eax
640030a9:	mov    DWORD PTR [ebp-0x18],0x0
640030b0:	call   DWORD PTR ds:0x6402c06c
640030b6:	movzx  ecx,BYTE PTR [ebp+0xc]
640030ba:	push   ecx
640030bb:	push   0x64026630
640030c0:	push   0x6
640030c2:	push   0x64026664
640030c7:	mov    ebx,eax
640030c9:	call   0x64006890
640030ce:	add    esp,0xc
640030d1:	push   eax
640030d2:	lea    edx,[ebp-0x10]
640030d5:	push   edx
640030d6:	call   0x64013030
640030db:	add    esp,0xc
640030de:	lea    eax,[ebp-0x10]
640030e1:	push   eax
640030e2:	call   DWORD PTR ds:0x64024054
640030e8:	mov    esi,eax
640030ea:	add    esi,0x1
640030ed:	cmp    esi,0x3fffffff
640030f3:	jg     0x64003121
640030f5:	lea    eax,[esi+esi*1]
640030f8:	call   0x64012c80
640030fd:	mov    edi,esp
640030ff:	test   edi,edi
64003101:	je     0x64003121
64003103:	push   esi
64003104:	push   edi
64003105:	push   0xffffffff
64003107:	lea    ecx,[ebp-0x10]
6400310a:	push   ecx
6400310b:	push   0x0
6400310d:	push   ebx
6400310e:	mov    WORD PTR [edi],0x0
64003113:	call   DWORD PTR ds:0x64024024
64003119:	neg    eax
6400311b:	sbb    eax,eax
6400311d:	and    eax,edi
6400311f:	jmp    0x64003123
64003121:	xor    eax,eax
64003123:	mov    esi,DWORD PTR [ebp-0x14]
64003126:	push   eax
64003127:	mov    ecx,esi
64003129:	call   0x640025a0
6400312e:	mov    eax,esi
64003130:	lea    esp,[ebp-0x24]
64003133:	pop    edi
64003134:	pop    esi
64003135:	pop    ebx
64003136:	mov    ecx,DWORD PTR [ebp-0x4]
64003139:	xor    ecx,ebp
6400313b:	call   0x6401257c
64003140:	mov    esp,ebp
64003142:	pop    ebp
64003143:	ret    
64003144:	int3   
64003145:	int3   
64003146:	int3   
64003147:	int3   
64003148:	int3   
64003149:	int3   
6400314a:	int3   
6400314b:	int3   
6400314c:	int3   
6400314d:	int3   
6400314e:	int3   
6400314f:	int3   
64003150:	push   0xffffffff
64003152:	push   0x64023019
64003157:	mov    eax,fs:0x0
6400315d:	push   eax
6400315e:	sub    esp,0x20
64003161:	push   ebx
64003162:	push   ebp
64003163:	push   esi
64003164:	push   edi
64003165:	mov    eax,ds:0x6402c09c
6400316a:	xor    eax,esp
6400316c:	push   eax
6400316d:	lea    eax,[esp+0x34]
64003171:	mov    fs:0x0,eax
64003177:	xor    ebx,ebx
64003179:	mov    DWORD PTR [esp+0x3c],ebx
6400317d:	mov    DWORD PTR [esp+0x18],ebx
64003181:	mov    eax,ds:0x6402d560
64003186:	mov    edx,DWORD PTR [eax+0xc]
64003189:	mov    ecx,0x6402d560
6400318e:	call   edx
64003190:	mov    edi,DWORD PTR [esp+0x44]
64003194:	add    eax,0x10
64003197:	mov    DWORD PTR [edi],eax
64003199:	mov    esi,DWORD PTR [esp+0x48]
6400319d:	mov    DWORD PTR [esp+0x3c],ebx
640031a1:	mov    eax,DWORD PTR [esi]
640031a3:	mov    ecx,0x1
640031a8:	sub    eax,0x10
640031ab:	cmp    DWORD PTR [eax+0xc],ecx
640031ae:	mov    DWORD PTR [esp+0x18],ecx
640031b2:	jle    0x640031bf
640031b4:	mov    eax,DWORD PTR [eax+0x4]
640031b7:	push   eax
640031b8:	mov    ecx,esi
640031ba:	call   0x64001950
640031bf:	mov    ebp,DWORD PTR [esi]
640031c1:	movzx  eax,WORD PTR [ebp+0x0]
640031c5:	cmp    ax,bx
640031c8:	je     0x64003469
640031ce:	cmp    ax,0x41
640031d2:	jb     0x640031de
640031d4:	cmp    ax,0x5a
640031d8:	jbe    0x6400340f
640031de:	cmp    ax,0x61
640031e2:	jb     0x640031ee
640031e4:	cmp    ax,0x7a
640031e8:	jbe    0x6400340f
640031ee:	cmp    ax,0x30
640031f2:	jb     0x64003209
640031f4:	cmp    ax,0x39
640031f8:	ja     0x64003209
640031fa:	movzx  ecx,BYTE PTR [ebp+0x0]
640031fe:	push   ecx
640031ff:	call   0x64006680
64003204:	jmp    0x64003459
64003209:	cmp    ax,0x20
6400320d:	jne    0x6400325b
6400320f:	mov    eax,DWORD PTR [edi]
64003211:	mov    ebx,DWORD PTR [eax-0xc]
64003214:	mov    ecx,0x1
64003219:	sub    ecx,DWORD PTR [eax-0x4]
6400321c:	mov    eax,DWORD PTR [eax-0x8]
6400321f:	lea    esi,[ebx+0x1]
64003222:	sub    eax,esi
64003224:	or     eax,ecx
64003226:	jge    0x64003230
64003228:	push   esi
64003229:	mov    ecx,edi
6400322b:	call   0x64001e00
64003230:	test   esi,esi
64003232:	mov    eax,DWORD PTR [edi]
64003234:	mov    WORD PTR [eax+ebx*2],0x2b
6400323a:	jl     0x6400347f
64003240:	mov    eax,DWORD PTR [edi]
64003242:	cmp    esi,DWORD PTR [eax-0x8]
64003245:	jg     0x6400347f
6400324b:	mov    DWORD PTR [eax-0xc],esi
6400324e:	mov    edx,DWORD PTR [edi]
64003250:	mov    WORD PTR [edx+esi*2],0x0
64003256:	jmp    0x64003459
6400325b:	cmp    ax,0x2d
6400325f:	je     0x6400340f
64003265:	cmp    ax,0x5f
64003269:	je     0x6400340f
6400326f:	cmp    ax,0x2e
64003273:	je     0x6400340f
64003279:	cmp    ax,0x21
6400327d:	je     0x6400340f
64003283:	cmp    ax,0x7e
64003287:	je     0x6400340f
6400328d:	cmp    ax,0x2a
64003291:	je     0x6400340f
64003297:	cmp    ax,0x27
6400329b:	je     0x6400340f
640032a1:	cmp    ax,0x28
640032a5:	je     0x6400340f
640032ab:	cmp    ax,0x29
640032af:	je     0x6400340f
640032b5:	cmp    ax,0x7f
640032b9:	ja     0x640032f0
640032bb:	movzx  eax,BYTE PTR [ebp+0x0]
640032bf:	push   eax
640032c0:	lea    ecx,[esp+0x20]
640032c4:	push   ecx
640032c5:	call   0x64003090
640032ca:	add    esp,0x8
640032cd:	push   eax
640032ce:	mov    ecx,edi
640032d0:	mov    DWORD PTR [esp+0x40],0x1
640032d8:	call   0x64002650
640032dd:	lea    ecx,[esp+0x1c]
640032e1:	mov    BYTE PTR [esp+0x3c],0x0
640032e6:	call   0x64001930
640032eb:	jmp    0x64003459
640032f0:	cmp    ax,0x7ff
640032f4:	ja     0x64003365
640032f6:	shr    eax,0x6
640032f9:	or     eax,0xffffffc0
640032fc:	push   eax
640032fd:	lea    edx,[esp+0x24]
64003301:	push   edx
64003302:	call   0x64003090
64003307:	add    esp,0x8
6400330a:	push   eax
6400330b:	mov    ecx,edi
6400330d:	mov    DWORD PTR [esp+0x40],0x2
64003315:	call   0x64002650
6400331a:	lea    ecx,[esp+0x20]
6400331e:	mov    BYTE PTR [esp+0x3c],0x0
64003323:	call   0x64001930
64003328:	movzx  eax,BYTE PTR [ebp+0x0]
6400332c:	and    eax,0xffffff3f
64003331:	or     eax,0xffffff80
64003334:	push   eax
64003335:	lea    ecx,[esp+0x28]
64003339:	push   ecx
6400333a:	call   0x64003090
6400333f:	add    esp,0x8
64003342:	push   eax
64003343:	mov    ecx,edi
64003345:	mov    DWORD PTR [esp+0x40],0x3
6400334d:	call   0x64002650
64003352:	lea    ecx,[esp+0x24]
64003356:	mov    BYTE PTR [esp+0x3c],0x0
6400335b:	call   0x64001930
64003360:	jmp    0x64003459
64003365:	shr    ax,0xc
64003369:	lea    edx,[esp+0x28]
6400336d:	or     eax,0xffffffe0
64003370:	push   eax
64003371:	push   edx
64003372:	call   0x64003090
64003377:	add    esp,0x8
6400337a:	push   eax
6400337b:	mov    ecx,edi
6400337d:	mov    DWORD PTR [esp+0x40],0x4
64003385:	call   0x64002650
6400338a:	lea    ecx,[esp+0x28]
6400338e:	mov    BYTE PTR [esp+0x3c],0x0
64003393:	call   0x64001930
64003398:	movzx  eax,WORD PTR [ebp+0x0]
6400339c:	shr    ax,0x6
640033a0:	lea    ecx,[esp+0x2c]
640033a4:	and    eax,0xffffff3f
640033a9:	or     eax,0xffffff80
640033ac:	push   eax
640033ad:	push   ecx
640033ae:	call   0x64003090
640033b3:	add    esp,0x8
640033b6:	push   eax
640033b7:	mov    ecx,edi
640033b9:	mov    DWORD PTR [esp+0x40],0x5
640033c1:	call   0x64002650
640033c6:	lea    ecx,[esp+0x2c]
640033ca:	mov    BYTE PTR [esp+0x3c],0x0
640033cf:	call   0x64001930
640033d4:	movzx  edx,BYTE PTR [ebp+0x0]
640033d8:	and    edx,0xffffff3f
640033de:	or     edx,0xffffff80
640033e1:	push   edx
640033e2:	lea    eax,[esp+0x34]
640033e6:	push   eax
640033e7:	call   0x64003090
640033ec:	add    esp,0x8
640033ef:	push   eax
640033f0:	mov    ecx,edi
640033f2:	mov    DWORD PTR [esp+0x40],0x6
640033fa:	call   0x64002650
640033ff:	lea    ecx,[esp+0x30]
64003403:	mov    BYTE PTR [esp+0x3c],0x0
64003408:	call   0x64001930
6400340d:	jmp    0x64003459
6400340f:	mov    cl,BYTE PTR [ebp+0x0]
64003412:	mov    eax,DWORD PTR [edi]
64003414:	mov    ebx,DWORD PTR [eax-0xc]
64003417:	mov    BYTE PTR [esp+0x14],cl
6400341b:	mov    ecx,0x1
64003420:	sub    ecx,DWORD PTR [eax-0x4]
64003423:	mov    eax,DWORD PTR [eax-0x8]
64003426:	lea    esi,[ebx+0x1]
64003429:	sub    eax,esi
6400342b:	or     eax,ecx
6400342d:	jge    0x64003437
6400342f:	push   esi
64003430:	mov    ecx,edi
64003432:	call   0x64001e00
64003437:	test   esi,esi
64003439:	movsx  dx,BYTE PTR [esp+0x14]
6400343f:	mov    eax,DWORD PTR [edi]
64003441:	mov    WORD PTR [eax+ebx*2],dx
64003445:	jl     0x6400347f
64003447:	mov    eax,DWORD PTR [edi]
64003449:	cmp    esi,DWORD PTR [eax-0x8]
6400344c:	jg     0x6400347f
6400344e:	mov    DWORD PTR [eax-0xc],esi
64003451:	mov    eax,DWORD PTR [edi]
64003453:	mov    WORD PTR [eax+esi*2],0x0
64003459:	movzx  eax,WORD PTR [ebp+0x2]
6400345d:	add    ebp,0x2
64003460:	test   ax,ax
64003463:	jne    0x640031ce
64003469:	mov    eax,edi
6400346b:	mov    ecx,DWORD PTR [esp+0x34]
6400346f:	mov    DWORD PTR fs:0x0,ecx
64003476:	pop    ecx
64003477:	pop    edi
64003478:	pop    esi
64003479:	pop    ebp
6400347a:	pop    ebx
6400347b:	add    esp,0x2c
6400347e:	ret    
6400347f:	push   0x80070057
64003484:	call   0x64001040
64003489:	int3   
6400348a:	int3   
6400348b:	int3   
6400348c:	int3   
6400348d:	int3   
6400348e:	int3   
6400348f:	int3   
64003490:	push   0xffffffff
64003492:	push   0x64022b19
64003497:	mov    eax,fs:0x0
6400349d:	push   eax
6400349e:	sub    esp,0x48
640034a1:	push   ebx
640034a2:	push   esi
640034a3:	push   edi
640034a4:	mov    eax,ds:0x6402c09c
640034a9:	xor    eax,esp
640034ab:	push   eax
640034ac:	lea    eax,[esp+0x58]
640034b0:	mov    fs:0x0,eax
640034b6:	xor    ebx,ebx
640034b8:	mov    DWORD PTR [esp+0x60],ebx
640034bc:	mov    DWORD PTR [esp+0x10],ebx
640034c0:	mov    eax,ds:0x6402d560
640034c5:	mov    edx,DWORD PTR [eax+0xc]
640034c8:	mov    ecx,0x6402d560
640034cd:	call   edx
640034cf:	mov    edi,DWORD PTR [esp+0x68]
640034d3:	add    eax,0x10
640034d6:	mov    DWORD PTR [edi],eax
640034d8:	mov    DWORD PTR [esp+0x60],ebx
640034dc:	mov    ecx,0x1
640034e1:	sub    ecx,DWORD PTR [eax-0x4]
640034e4:	mov    eax,DWORD PTR [eax-0x8]
640034e7:	sub    eax,0x800
640034ec:	cmp    BYTE PTR [esp+0x6c],bl
640034f0:	mov    DWORD PTR [esp+0x10],0x1
640034f8:	je     0x6400358b
640034fe:	or     eax,ecx
64003500:	jge    0x6400350e
64003502:	push   0x800
64003507:	mov    ecx,edi
64003509:	call   0x64001e00
6400350e:	mov    eax,DWORD PTR [edi]
64003510:	push   0x800
64003515:	push   eax
64003516:	call   0x6400e220
6400351b:	call   eax
6400351d:	test   eax,eax
6400351f:	jne    0x64003612
64003525:	push   0x6402666c
6400352a:	push   0x22
6400352c:	push   0x64026690
64003531:	call   0x64006890
64003536:	mov    ecx,eax
64003538:	add    esp,0xc
6400353b:	mov    DWORD PTR [esp+0x2c],0xf
64003543:	mov    DWORD PTR [esp+0x28],ebx
64003547:	mov    BYTE PTR [esp+0x18],bl
6400354b:	lea    esi,[ecx+0x1]
6400354e:	mov    edi,edi
64003550:	mov    dl,BYTE PTR [ecx]
64003552:	add    ecx,0x1
64003555:	cmp    dl,bl
64003557:	jne    0x64003550
64003559:	sub    ecx,esi
6400355b:	push   ecx
6400355c:	push   eax
6400355d:	lea    ecx,[esp+0x1c]
64003561:	call   0x64001860
64003566:	lea    eax,[esp+0x14]
6400356a:	push   eax
6400356b:	lea    ecx,[esp+0x34]
6400356f:	mov    DWORD PTR [esp+0x64],0x1
64003577:	call   0x64002020
6400357c:	push   0x64029cd4
64003581:	lea    ecx,[esp+0x34]
64003585:	push   ecx
64003586:	call   0x6401216b
6400358b:	or     eax,ecx
6400358d:	jge    0x6400359b
6400358f:	push   0x800
64003594:	mov    ecx,edi
64003596:	call   0x64001e00
6400359b:	mov    eax,DWORD PTR [edi]
6400359d:	push   0x800
640035a2:	push   eax
640035a3:	call   0x6400dd40
640035a8:	call   eax
640035aa:	test   eax,eax
640035ac:	jne    0x64003612
640035ae:	push   0x640266b4
640035b3:	push   0x1c
640035b5:	push   0x640266e8
640035ba:	call   0x64006890
640035bf:	mov    ecx,eax
640035c1:	add    esp,0xc
640035c4:	mov    DWORD PTR [esp+0x2c],0xf
640035cc:	mov    DWORD PTR [esp+0x28],ebx
640035d0:	mov    BYTE PTR [esp+0x18],bl
640035d4:	lea    esi,[ecx+0x1]
640035d7:	mov    dl,BYTE PTR [ecx]
640035d9:	add    ecx,0x1
640035dc:	cmp    dl,bl
640035de:	jne    0x640035d7
640035e0:	sub    ecx,esi
640035e2:	push   ecx
640035e3:	push   eax
640035e4:	lea    ecx,[esp+0x1c]
640035e8:	call   0x64001860
640035ed:	lea    edx,[esp+0x14]
640035f1:	push   edx
640035f2:	lea    ecx,[esp+0x34]
640035f6:	mov    DWORD PTR [esp+0x64],0x2
640035fe:	call   0x64002020
64003603:	push   0x64029cd4
64003608:	lea    eax,[esp+0x34]
6400360c:	push   eax
6400360d:	call   0x6401216b
64003612:	mov    edx,DWORD PTR [edi]
64003614:	cmp    edx,ebx
64003616:	jne    0x6400361c
64003618:	xor    eax,eax
6400361a:	jmp    0x64003632
6400361c:	mov    eax,edx
6400361e:	lea    esi,[eax+0x2]
64003621:	mov    cx,WORD PTR [eax]
64003624:	add    eax,0x2
64003627:	cmp    cx,bx
6400362a:	jne    0x64003621
6400362c:	sub    eax,esi
6400362e:	sar    eax,1
64003630:	js     0x64003674
64003632:	cmp    eax,DWORD PTR [edx-0x8]
64003635:	jg     0x64003674
64003637:	mov    DWORD PTR [edx-0xc],eax
6400363a:	mov    ecx,DWORD PTR [edi]
6400363c:	mov    WORD PTR [ecx+eax*2],bx
64003640:	mov    ecx,DWORD PTR [edi]
64003642:	mov    edx,DWORD PTR [ecx-0xc]
64003645:	lea    eax,[edx-0x1]
64003648:	cmp    eax,ebx
6400364a:	jl     0x64003674
6400364c:	cmp    eax,edx
6400364e:	jg     0x64003674
64003650:	movzx  eax,WORD PTR [ecx+eax*2]
64003654:	cmp    ax,0x5c
64003658:	je     0x6400365f
6400365a:	call   0x640066e0
6400365f:	mov    eax,edi
64003661:	mov    ecx,DWORD PTR [esp+0x58]
64003665:	mov    DWORD PTR fs:0x0,ecx
6400366c:	pop    ecx
6400366d:	pop    edi
6400366e:	pop    esi
6400366f:	pop    ebx
64003670:	add    esp,0x54
64003673:	ret    
64003674:	push   0x80070057
64003679:	call   0x64001040
6400367e:	int3   
6400367f:	int3   
64003680:	push   0xffffffff
64003682:	push   0x64022fb1
64003687:	mov    eax,fs:0x0
6400368d:	push   eax
6400368e:	sub    esp,0x48
64003691:	push   ebx
64003692:	push   ebp
64003693:	push   esi
64003694:	push   edi
64003695:	mov    eax,ds:0x6402c09c
6400369a:	xor    eax,esp
6400369c:	push   eax
6400369d:	lea    eax,[esp+0x5c]
640036a1:	mov    fs:0x0,eax
640036a7:	mov    esi,DWORD PTR [esp+0x6c]
640036ab:	xor    ebx,ebx
640036ad:	push   ebx
640036ae:	mov    DWORD PTR [esp+0x68],ebx
640036b2:	push   esi
640036b3:	mov    DWORD PTR [esp+0x1c],ebx
640036b7:	call   0x64003490
640036bc:	add    esp,0x8
640036bf:	mov    DWORD PTR [esp+0x64],ebx
640036c3:	mov    eax,DWORD PTR [esi]
640036c5:	mov    ebp,0x1
640036ca:	sub    eax,0x10
640036cd:	cmp    DWORD PTR [eax+0xc],ebp
640036d0:	mov    DWORD PTR [esp+0x14],ebp
640036d4:	jle    0x640036e1
640036d6:	mov    eax,DWORD PTR [eax+0x4]
640036d9:	push   eax
640036da:	mov    ecx,esi
640036dc:	call   0x64001950
640036e1:	mov    eax,DWORD PTR [esi]
640036e3:	push   0x5c
640036e5:	push   eax
640036e6:	call   0x640130c7
640036eb:	mov    edi,eax
640036ed:	add    esp,0x8
640036f0:	cmp    edi,ebx
640036f2:	jne    0x64003756
640036f4:	push   0x64026708
640036f9:	push   0x18
640036fb:	push   0x64026738
64003700:	call   0x64006890
64003705:	mov    ecx,eax
64003707:	add    esp,0xc
6400370a:	mov    DWORD PTR [esp+0x30],0xf
64003712:	mov    DWORD PTR [esp+0x2c],ebx
64003716:	mov    BYTE PTR [esp+0x1c],bl
6400371a:	lea    esi,[ecx+0x1]
6400371d:	lea    ecx,[ecx+0x0]
64003720:	mov    dl,BYTE PTR [ecx]
64003722:	add    ecx,ebp
64003724:	cmp    dl,bl
64003726:	jne    0x64003720
64003728:	sub    ecx,esi
6400372a:	push   ecx
6400372b:	push   eax
6400372c:	lea    ecx,[esp+0x20]
64003730:	call   0x64001860
64003735:	lea    ecx,[esp+0x18]
64003739:	push   ecx
6400373a:	lea    ecx,[esp+0x38]
6400373e:	mov    DWORD PTR [esp+0x68],ebp
64003742:	call   0x64002020
64003747:	push   0x64029cd4
6400374c:	lea    edx,[esp+0x38]
64003750:	push   edx
64003751:	call   0x6401216b
64003756:	mov    eax,DWORD PTR [esi]
64003758:	sub    eax,0x10
6400375b:	cmp    DWORD PTR [eax+0xc],ebp
6400375e:	jle    0x6400376b
64003760:	mov    eax,DWORD PTR [eax+0x4]
64003763:	push   eax
64003764:	mov    ecx,esi
64003766:	call   0x64001950
6400376b:	mov    ecx,DWORD PTR [esi]
6400376d:	sub    edi,ecx
6400376f:	sar    edi,1
64003771:	add    edi,ebp
64003773:	cmp    ecx,ebx
64003775:	jne    0x6400377b
64003777:	xor    eax,eax
64003779:	jmp    0x64003796
6400377b:	mov    eax,ecx
6400377d:	lea    ebp,[eax+0x2]
64003780:	mov    dx,WORD PTR [eax]
64003783:	add    eax,0x2
64003786:	cmp    dx,bx
64003789:	jne    0x64003780
6400378b:	sub    eax,ebp
6400378d:	sar    eax,1
6400378f:	js     0x640037e9
64003791:	mov    ebp,0x1
64003796:	cmp    eax,DWORD PTR [ecx-0x8]
64003799:	jg     0x640037e9
6400379b:	mov    DWORD PTR [ecx-0xc],eax
6400379e:	mov    ecx,DWORD PTR [esi]
640037a0:	mov    WORD PTR [ecx+eax*2],bx
640037a4:	mov    eax,DWORD PTR [esi]
640037a6:	sub    eax,0x10
640037a9:	mov    ecx,ebp
640037ab:	sub    ecx,DWORD PTR [eax+0xc]
640037ae:	mov    eax,DWORD PTR [eax+0x8]
640037b1:	sub    eax,edi
640037b3:	or     eax,ecx
640037b5:	jge    0x640037bf
640037b7:	push   edi
640037b8:	mov    ecx,esi
640037ba:	call   0x64001e00
640037bf:	cmp    edi,ebx
640037c1:	jl     0x640037e9
640037c3:	mov    eax,DWORD PTR [esi]
640037c5:	cmp    edi,DWORD PTR [eax-0x8]
640037c8:	jg     0x640037e9
640037ca:	mov    DWORD PTR [eax-0xc],edi
640037cd:	mov    edx,DWORD PTR [esi]
640037cf:	mov    WORD PTR [edx+edi*2],bx
640037d3:	mov    eax,esi
640037d5:	mov    ecx,DWORD PTR [esp+0x5c]
640037d9:	mov    DWORD PTR fs:0x0,ecx
640037e0:	pop    ecx
640037e1:	pop    edi
640037e2:	pop    esi
640037e3:	pop    ebp
640037e4:	pop    ebx
640037e5:	add    esp,0x54
640037e8:	ret    
640037e9:	push   0x80070057
640037ee:	call   0x64001040
640037f3:	int3   
640037f4:	int3   
640037f5:	int3   
640037f6:	int3   
640037f7:	int3   
640037f8:	int3   
640037f9:	int3   
640037fa:	int3   
640037fb:	int3   
640037fc:	int3   
640037fd:	int3   
640037fe:	int3   
640037ff:	int3   
64003800:	push   ebp
64003801:	lea    ebp,[esp-0x78]
64003805:	sub    esp,0x78
64003808:	push   0xffffffff
6400380a:	push   0x640230c9
6400380f:	mov    eax,fs:0x0
64003815:	push   eax
64003816:	sub    esp,0xb4
6400381c:	mov    eax,ds:0x6402c09c
64003821:	xor    eax,ebp
64003823:	mov    DWORD PTR [ebp+0x74],eax
64003826:	push   ebx
64003827:	push   esi
64003828:	push   edi
64003829:	push   eax
6400382a:	lea    eax,[ebp-0xc]
6400382d:	mov    fs:0x0,eax
64003833:	call   DWORD PTR ds:0x6402c06c
64003839:	mov    ebx,eax
6400383b:	lea    eax,[ebp+0xc]
6400383e:	push   eax
6400383f:	call   0x64003680
64003844:	add    esp,0x4
64003847:	push   0x0
64003849:	push   0x0
6400384b:	lea    ecx,[ebp+0x0]
6400384e:	push   ecx
6400384f:	lea    edx,[ebp+0x4]
64003852:	push   edx
64003853:	lea    eax,[ebp+0x8]
64003856:	push   eax
64003857:	push   0x0
64003859:	mov    DWORD PTR [ebp-0x4],0x0
64003860:	mov    ecx,DWORD PTR [ebp+0xc]
64003863:	push   0x0
64003865:	push   ecx
64003866:	call   0x6400e190
6400386b:	call   eax
6400386d:	test   eax,eax
6400386f:	jne    0x64003980
64003875:	call   DWORD PTR ds:0x64024044
6400387b:	push   0xa
6400387d:	lea    edx,[ebp+0x10]
64003880:	push   edx
64003881:	push   eax
64003882:	call   0x6401300b
64003887:	mov    eax,DWORD PTR [ebp+0xc]
6400388a:	add    esp,0xc
6400388d:	test   eax,eax
6400388f:	mov    edi,eax
64003891:	je     0x640038bf
64003893:	push   eax
64003894:	call   DWORD PTR ds:0x64024050
6400389a:	add    eax,0x1
6400389d:	cmp    eax,0x3fffffff
640038a2:	jle    0x640038a8
640038a4:	xor    edi,edi
640038a6:	jmp    0x640038bf
640038a8:	lea    esi,[eax+eax*1]
640038ab:	mov    eax,esi
640038ad:	call   0x64012c80
640038b2:	mov    eax,esp
640038b4:	push   ebx
640038b5:	push   esi
640038b6:	push   edi
640038b7:	push   eax
640038b8:	call   0x64002b90
640038bd:	mov    edi,eax
640038bf:	push   0x64026790
640038c4:	push   0x21
640038c6:	push   0x640267c4
640038cb:	call   0x64006890
640038d0:	mov    ecx,eax
640038d2:	add    esp,0xc
640038d5:	mov    DWORD PTR [ebp-0x10],0xf
640038dc:	mov    DWORD PTR [ebp-0x14],0x0
640038e3:	mov    BYTE PTR [ebp-0x24],0x0
640038e7:	lea    esi,[ecx+0x1]
640038ea:	lea    ebx,[ebx+0x0]
640038f0:	mov    dl,BYTE PTR [ecx]
640038f2:	add    ecx,0x1
640038f5:	test   dl,dl
640038f7:	jne    0x640038f0
640038f9:	sub    ecx,esi
640038fb:	push   ecx
640038fc:	push   eax
640038fd:	lea    ecx,[ebp-0x28]
64003900:	call   0x64001860
64003905:	lea    eax,[ebp-0x28]
64003908:	push   eax
64003909:	lea    esi,[ebp-0x6c]
6400390c:	mov    BYTE PTR [ebp-0x4],0x1
64003910:	call   0x64009cd0
64003915:	mov    esi,eax
64003917:	push   0x64026758
6400391c:	push   0x7
6400391e:	push   0x64026788
64003923:	mov    BYTE PTR [ebp-0x4],0x2
64003927:	call   0x64006890
6400392c:	push   esi
6400392d:	mov    edi,eax
6400392f:	lea    esi,[ebp-0x88]
64003935:	call   0x64009cd0
6400393a:	push   eax
6400393b:	lea    edi,[ebp+0x10]
6400393e:	lea    esi,[ebp-0xc0]
64003944:	mov    BYTE PTR [ebp-0x4],0x3
64003948:	call   0x64009cd0
6400394d:	push   eax
6400394e:	mov    edi,0x64026754
64003953:	lea    esi,[ebp-0xa4]
64003959:	mov    BYTE PTR [ebp-0x4],0x4
6400395d:	call   0x64009cd0
64003962:	add    esp,0x1c
64003965:	push   eax
64003966:	lea    ecx,[ebp-0x50]
64003969:	mov    BYTE PTR [ebp-0x4],0x5
6400396d:	call   0x64002020
64003972:	push   0x64029cd4
64003977:	lea    ecx,[ebp-0x50]
6400397a:	push   ecx
6400397b:	call   0x6401216b
64003980:	mov    esi,DWORD PTR [ebp+0x8]
64003983:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400398a:	mov    eax,DWORD PTR [ebp+0xc]
6400398d:	add    eax,0xfffffff0
64003990:	lea    edx,[eax+0xc]
64003993:	or     ecx,0xffffffff
64003996:	lock xadd DWORD PTR [edx],ecx
6400399a:	dec    ecx
6400399b:	test   ecx,ecx
6400399d:	jg     0x640039a9
6400399f:	mov    ecx,DWORD PTR [eax]
640039a1:	mov    edx,DWORD PTR [ecx]
640039a3:	push   eax
640039a4:	mov    eax,DWORD PTR [edx+0x4]
640039a7:	call   eax
640039a9:	mov    eax,esi
640039ab:	lea    esp,[ebp-0xd0]
640039b1:	mov    ecx,DWORD PTR [ebp-0xc]
640039b4:	mov    DWORD PTR fs:0x0,ecx
640039bb:	pop    ecx
640039bc:	pop    edi
640039bd:	pop    esi
640039be:	pop    ebx
640039bf:	mov    ecx,DWORD PTR [ebp+0x74]
640039c2:	xor    ecx,ebp
640039c4:	call   0x6401257c
640039c9:	add    ebp,0x78
640039cc:	mov    esp,ebp
640039ce:	pop    ebp
640039cf:	ret    
640039d0:	push   ebp
640039d1:	mov    ebp,esp
640039d3:	and    esp,0xfffffff8
640039d6:	push   0xffffffff
640039d8:	push   0x64022ab6
640039dd:	mov    eax,fs:0x0
640039e3:	push   eax
640039e4:	sub    esp,0x840
640039ea:	mov    eax,ds:0x6402c09c
640039ef:	xor    eax,esp
640039f1:	mov    DWORD PTR [esp+0x838],eax
640039f8:	push   ebx
640039f9:	push   esi
640039fa:	push   edi
640039fb:	mov    eax,ds:0x6402c09c
64003a00:	xor    eax,esp
64003a02:	push   eax
64003a03:	lea    eax,[esp+0x850]
64003a0a:	mov    fs:0x0,eax
64003a10:	xor    eax,eax
64003a12:	xor    ebx,ebx
64003a14:	mov    DWORD PTR [esp+0x34],ebx
64003a18:	mov    DWORD PTR [esp+0x38],eax
64003a1c:	mov    DWORD PTR [esp+0x3c],eax
64003a20:	mov    DWORD PTR [esp+0x40],eax
64003a24:	mov    DWORD PTR [esp+0x1c],ebx
64003a28:	push   0x640267e8
64003a2d:	push   0x1f
64003a2f:	push   0x64026810
64003a34:	mov    DWORD PTR [esp+0x864],ebx
64003a3b:	call   0x64006b80
64003a40:	add    esp,0xc
64003a43:	lea    ecx,[esp+0x18]
64003a47:	push   ecx
64003a48:	push   0x20019
64003a4d:	push   ebx
64003a4e:	push   eax
64003a4f:	push   0x80000002
64003a54:	mov    DWORD PTR [esp+0x2c],ebx
64003a58:	call   DWORD PTR ds:0x64024004
64003a5e:	cmp    eax,ebx
64003a60:	jne    0x64003ad7
64003a62:	mov    edx,DWORD PTR [esp+0x18]
64003a66:	push   0x64026850
64003a6b:	push   0xb
64003a6d:	push   0x64026878
64003a72:	mov    DWORD PTR [esp+0x28],edx
64003a76:	mov    DWORD PTR [esp+0x2c],0x400
64003a7e:	call   0x64006b80
64003a83:	add    esp,0xc
64003a86:	push   eax
64003a87:	lea    eax,[esp+0x20]
64003a8b:	push   eax
64003a8c:	lea    edi,[esp+0x28]
64003a90:	lea    esi,[esp+0x4c]
64003a94:	call   0x64002bf0
64003a99:	test   eax,eax
64003a9b:	je     0x64003afa
64003a9d:	mov    eax,DWORD PTR [esp+0x18]
64003aa1:	test   eax,eax
64003aa3:	mov    ecx,DWORD PTR [esp+0x40]
64003aa7:	mov    esi,DWORD PTR [esp+0x34]
64003aab:	mov    edi,DWORD PTR [esp+0x38]
64003aaf:	mov    ebx,DWORD PTR [esp+0x3c]
64003ab3:	mov    DWORD PTR [esp+0x30],ecx
64003ab7:	je     0x64003ac0
64003ab9:	push   eax
64003aba:	call   DWORD PTR ds:0x64024000
64003ac0:	mov    eax,DWORD PTR [ebp+0x8]
64003ac3:	mov    edx,DWORD PTR [esp+0x30]
64003ac7:	mov    DWORD PTR [eax],esi
64003ac9:	mov    DWORD PTR [eax+0x4],edi
64003acc:	mov    DWORD PTR [eax+0x8],ebx
64003acf:	mov    DWORD PTR [eax+0xc],edx
64003ad2:	jmp    0x64003bc9
64003ad7:	mov    eax,DWORD PTR [ebp+0x8]
64003ada:	mov    ecx,DWORD PTR [esp+0x34]
64003ade:	mov    edx,DWORD PTR [esp+0x38]
64003ae2:	mov    DWORD PTR [eax],ecx
64003ae4:	mov    ecx,DWORD PTR [esp+0x3c]
64003ae8:	mov    DWORD PTR [eax+0x4],edx
64003aeb:	mov    edx,DWORD PTR [esp+0x40]
64003aef:	mov    DWORD PTR [eax+0x8],ecx
64003af2:	mov    DWORD PTR [eax+0xc],edx
64003af5:	jmp    0x64003bc9
64003afa:	push   0x64026890
64003aff:	lea    ecx,[esp+0x18]
64003b03:	call   0x640025a0
64003b08:	lea    eax,[esp+0x44]
64003b0c:	mov    BYTE PTR [esp+0x858],0x1
64003b14:	lea    edx,[eax+0x2]
64003b17:	mov    cx,WORD PTR [eax]
64003b1a:	add    eax,0x2
64003b1d:	cmp    cx,bx
64003b20:	jne    0x64003b17
64003b22:	sub    eax,edx
64003b24:	sar    eax,1
64003b26:	push   eax
64003b27:	lea    eax,[esp+0x48]
64003b2b:	push   eax
64003b2c:	lea    ecx,[esp+0x1c]
64003b30:	call   0x640029f0
64003b35:	push   0x1
64003b37:	push   0x64026894
64003b3c:	lea    ecx,[esp+0x1c]
64003b40:	call   0x640029f0
64003b45:	mov    eax,DWORD PTR [esp+0x14]
64003b49:	cmp    DWORD PTR [eax-0x4],0x1
64003b4d:	jle    0x64003b60
64003b4f:	mov    ecx,DWORD PTR [eax-0xc]
64003b52:	push   ecx
64003b53:	lea    ecx,[esp+0x18]
64003b57:	call   0x64001950
64003b5c:	mov    eax,DWORD PTR [esp+0x14]
64003b60:	lea    edx,[esp+0x34]
64003b64:	push   edx
64003b65:	push   eax
64003b66:	call   DWORD PTR ds:0x640241d8
64003b6c:	mov    eax,DWORD PTR [esp+0x40]
64003b70:	mov    esi,DWORD PTR [esp+0x34]
64003b74:	mov    edi,DWORD PTR [esp+0x38]
64003b78:	mov    ebx,DWORD PTR [esp+0x3c]
64003b7c:	mov    DWORD PTR [esp+0x30],eax
64003b80:	mov    BYTE PTR [esp+0x858],0x0
64003b88:	mov    eax,DWORD PTR [esp+0x14]
64003b8c:	add    eax,0xfffffff0
64003b8f:	lea    ecx,[eax+0xc]
64003b92:	or     edx,0xffffffff
64003b95:	lock xadd DWORD PTR [ecx],edx
64003b99:	dec    edx
64003b9a:	test   edx,edx
64003b9c:	jg     0x64003ba8
64003b9e:	mov    ecx,DWORD PTR [eax]
64003ba0:	mov    edx,DWORD PTR [ecx]
64003ba2:	push   eax
64003ba3:	mov    eax,DWORD PTR [edx+0x4]
64003ba6:	call   eax
64003ba8:	mov    eax,DWORD PTR [esp+0x18]
64003bac:	test   eax,eax
64003bae:	je     0x64003bb7
64003bb0:	push   eax
64003bb1:	call   DWORD PTR ds:0x64024000
64003bb7:	mov    eax,DWORD PTR [ebp+0x8]
64003bba:	mov    ecx,DWORD PTR [esp+0x30]
64003bbe:	mov    DWORD PTR [eax],esi
64003bc0:	mov    DWORD PTR [eax+0x4],edi
64003bc3:	mov    DWORD PTR [eax+0x8],ebx
64003bc6:	mov    DWORD PTR [eax+0xc],ecx
64003bc9:	mov    ecx,DWORD PTR [esp+0x850]
64003bd0:	mov    DWORD PTR fs:0x0,ecx
64003bd7:	pop    ecx
64003bd8:	pop    edi
64003bd9:	pop    esi
64003bda:	pop    ebx
64003bdb:	mov    ecx,DWORD PTR [esp+0x838]
64003be2:	xor    ecx,esp
64003be4:	call   0x6401257c
64003be9:	mov    esp,ebp
64003beb:	pop    ebp
64003bec:	ret    
64003bed:	int3   
64003bee:	int3   
64003bef:	int3   
64003bf0:	push   ebp
64003bf1:	mov    ebp,esp
64003bf3:	and    esp,0xfffffff8
64003bf6:	push   0xffffffff
64003bf8:	push   0x64022a64
64003bfd:	mov    eax,fs:0x0
64003c03:	push   eax
64003c04:	sub    esp,0x460
64003c0a:	mov    eax,ds:0x6402c09c
64003c0f:	xor    eax,esp
64003c11:	mov    DWORD PTR [esp+0x458],eax
64003c18:	push   ebx
64003c19:	push   esi
64003c1a:	push   edi
64003c1b:	mov    eax,ds:0x6402c09c
64003c20:	xor    eax,esp
64003c22:	push   eax
64003c23:	lea    eax,[esp+0x470]
64003c2a:	mov    fs:0x0,eax
64003c30:	mov    eax,DWORD PTR [ebp+0x8]
64003c33:	xor    ebx,ebx
64003c35:	test   BYTE PTR ds:0x640303dc,0x1
64003c3c:	mov    esi,ecx
64003c3e:	mov    DWORD PTR [esp+0x18],eax
64003c42:	mov    DWORD PTR [esp+0x14],esi
64003c46:	mov    DWORD PTR [esp+0x38],ebx
64003c4a:	jne    0x64003c9d
64003c4c:	or     DWORD PTR ds:0x640303dc,0x1
64003c53:	mov    DWORD PTR [esp+0x478],ebx
64003c5a:	call   0x64008250
64003c5f:	mov    ds:0x640303d4,eax
64003c64:	mov    BYTE PTR [eax+0x29],0x1
64003c68:	mov    eax,ds:0x640303d4
64003c6d:	mov    DWORD PTR [eax+0x4],eax
64003c70:	mov    eax,ds:0x640303d4
64003c75:	mov    DWORD PTR [eax],eax
64003c77:	mov    eax,ds:0x640303d4
64003c7c:	mov    DWORD PTR [eax+0x8],eax
64003c7f:	push   0x64023180
64003c84:	mov    DWORD PTR ds:0x640303d8,ebx
64003c8a:	call   0x640126af
64003c8f:	add    esp,0x4
64003c92:	mov    DWORD PTR [esp+0x478],0xffffffff
64003c9d:	mov    eax,DWORD PTR [esi+0x4]
64003ca0:	mov    esi,DWORD PTR [eax]
64003ca2:	mov    eax,DWORD PTR [esp+0x14]
64003ca6:	cmp    esi,DWORD PTR [eax+0x4]
64003ca9:	je     0x64003e0e
64003caf:	cmp    DWORD PTR [esi+0x24],0x10
64003cb3:	lea    edi,[esi+0xc]
64003cb6:	jb     0x64003cbd
64003cb8:	mov    ecx,DWORD PTR [edi+0x4]
64003cbb:	jmp    0x64003cc0
64003cbd:	lea    ecx,[edi+0x4]
64003cc0:	lea    edx,[esp+0x64]
64003cc4:	mov    al,BYTE PTR [ecx]
64003cc6:	mov    BYTE PTR [edx],al
64003cc8:	add    ecx,0x1
64003ccb:	add    edx,0x1
64003cce:	cmp    al,bl
64003cd0:	jne    0x64003cc4
64003cd2:	mov    ecx,DWORD PTR [esp+0x14]
64003cd6:	cmp    esi,DWORD PTR [ecx+0x4]
64003cd9:	jne    0x64003ce0
64003cdb:	call   0x640120d8
64003ce0:	push   0xffffffff
64003ce2:	push   ebx
64003ce3:	push   edi
64003ce4:	lea    ecx,[esp+0x54]
64003ce8:	mov    DWORD PTR [esp+0x6c],0xf
64003cf0:	mov    DWORD PTR [esp+0x68],ebx
64003cf4:	mov    BYTE PTR [esp+0x58],bl
64003cf8:	call   0x64001780
64003cfd:	lea    edx,[esp+0x64]
64003d01:	push   edx
64003d02:	mov    DWORD PTR [esp+0x47c],0x1
64003d0d:	call   0x6401e915
64003d12:	lea    eax,[esp+0x68]
64003d16:	add    esp,0x4
64003d19:	mov    DWORD PTR [esp+0x34],0xf
64003d21:	mov    DWORD PTR [esp+0x30],ebx
64003d25:	mov    BYTE PTR [esp+0x20],bl
64003d29:	lea    edx,[eax+0x1]
64003d2c:	lea    esp,[esp+0x0]
64003d30:	mov    cl,BYTE PTR [eax]
64003d32:	add    eax,0x1
64003d35:	cmp    cl,bl
64003d37:	jne    0x64003d30
64003d39:	sub    eax,edx
64003d3b:	push   eax
64003d3c:	lea    eax,[esp+0x68]
64003d40:	push   eax
64003d41:	lea    ecx,[esp+0x24]
64003d45:	call   0x64001860
64003d4a:	lea    ecx,[esp+0x1c]
64003d4e:	push   ecx
64003d4f:	lea    edx,[esp+0x40]
64003d53:	push   edx
64003d54:	push   0x640303d0
64003d59:	mov    BYTE PTR [esp+0x484],0x2
64003d61:	call   0x64006f40
64003d66:	mov    edi,0x10
64003d6b:	cmp    DWORD PTR [esp+0x34],edi
64003d6f:	jb     0x64003d7e
64003d71:	mov    eax,DWORD PTR [esp+0x20]
64003d75:	push   eax
64003d76:	call   0x64011d22
64003d7b:	add    esp,0x4
64003d7e:	mov    DWORD PTR [esp+0x478],0xffffffff
64003d89:	cmp    DWORD PTR [esp+0x60],edi
64003d8d:	mov    DWORD PTR [esp+0x34],0xf
64003d95:	mov    DWORD PTR [esp+0x30],ebx
64003d99:	mov    BYTE PTR [esp+0x20],bl
64003d9d:	jb     0x64003dac
64003d9f:	mov    ecx,DWORD PTR [esp+0x4c]
64003da3:	push   ecx
64003da4:	call   0x64011d22
64003da9:	add    esp,0x4
64003dac:	cmp    BYTE PTR [esi+0x29],bl
64003daf:	mov    DWORD PTR [esp+0x60],0xf
64003db7:	mov    DWORD PTR [esp+0x5c],ebx
64003dbb:	mov    BYTE PTR [esp+0x4c],bl
64003dbf:	je     0x64003dcb
64003dc1:	call   0x640120d8
64003dc6:	jmp    0x64003ca2
64003dcb:	mov    ecx,DWORD PTR [esi+0x8]
64003dce:	cmp    BYTE PTR [ecx+0x29],bl
64003dd1:	jne    0x64003df0
64003dd3:	mov    eax,DWORD PTR [ecx]
64003dd5:	cmp    BYTE PTR [eax+0x29],bl
64003dd8:	jne    0x64003de9
64003dda:	lea    ebx,[ebx+0x0]
64003de0:	mov    ecx,eax
64003de2:	mov    eax,DWORD PTR [ecx]
64003de4:	cmp    BYTE PTR [eax+0x29],bl
64003de7:	je     0x64003de0
64003de9:	mov    esi,ecx
64003deb:	jmp    0x64003ca2
64003df0:	mov    eax,DWORD PTR [esi+0x4]
64003df3:	cmp    BYTE PTR [eax+0x29],bl
64003df6:	jne    0x64003e07
64003df8:	cmp    esi,DWORD PTR [eax+0x8]
64003dfb:	jne    0x64003e07
64003dfd:	mov    esi,eax
64003dff:	mov    eax,DWORD PTR [eax+0x4]
64003e02:	cmp    BYTE PTR [eax+0x29],bl
64003e05:	je     0x64003df8
64003e07:	mov    esi,eax
64003e09:	jmp    0x64003ca2
64003e0e:	mov    esi,DWORD PTR [esp+0x18]
64003e12:	push   esi
64003e13:	call   0x64006e70
64003e18:	mov    eax,esi
64003e1a:	mov    ecx,DWORD PTR [esp+0x470]
64003e21:	mov    DWORD PTR fs:0x0,ecx
64003e28:	pop    ecx
64003e29:	pop    edi
64003e2a:	pop    esi
64003e2b:	pop    ebx
64003e2c:	mov    ecx,DWORD PTR [esp+0x458]
64003e33:	xor    ecx,esp
64003e35:	call   0x6401257c
64003e3a:	mov    esp,ebp
64003e3c:	pop    ebp
64003e3d:	ret    
64003e3e:	int3   
64003e3f:	int3   
64003e40:	push   ecx
64003e41:	call   0x64007920
64003e46:	pop    ecx
64003e47:	ret    
64003e48:	int3   
64003e49:	int3   
64003e4a:	int3   
64003e4b:	int3   
64003e4c:	int3   
64003e4d:	int3   
64003e4e:	int3   
64003e4f:	int3   
64003e50:	push   ebp
64003e51:	lea    ebp,[esp-0x404]
64003e58:	sub    esp,0x404
64003e5e:	push   0xffffffff
64003e60:	push   0x64022f61
64003e65:	mov    eax,fs:0x0
64003e6b:	push   eax
64003e6c:	sub    esp,0x3c
64003e6f:	mov    eax,ds:0x6402c09c
64003e74:	xor    eax,ebp
64003e76:	mov    DWORD PTR [ebp+0x400],eax
64003e7c:	push   ebx
64003e7d:	push   esi
64003e7e:	push   edi
64003e7f:	push   eax
64003e80:	lea    eax,[ebp-0xc]
64003e83:	mov    fs:0x0,eax
64003e89:	xor    ebx,ebx
64003e8b:	mov    DWORD PTR [ebp-0x4],ebx
64003e8e:	test   BYTE PTR ds:0x640303fc,0x1
64003e95:	jne    0x64003edd
64003e97:	or     DWORD PTR ds:0x640303fc,0x1
64003e9e:	mov    BYTE PTR [ebp-0x4],0x1
64003ea2:	call   0x64008250
64003ea7:	mov    ds:0x640303f4,eax
64003eac:	mov    BYTE PTR [eax+0x29],0x1
64003eb0:	mov    eax,ds:0x640303f4
64003eb5:	mov    DWORD PTR [eax+0x4],eax
64003eb8:	mov    eax,ds:0x640303f4
64003ebd:	mov    DWORD PTR [eax],eax
64003ebf:	mov    eax,ds:0x640303f4
64003ec4:	mov    DWORD PTR [eax+0x8],eax
64003ec7:	push   0x64023190
64003ecc:	mov    DWORD PTR ds:0x640303f8,ebx
64003ed2:	call   0x640126af
64003ed7:	add    esp,0x4
64003eda:	mov    BYTE PTR [ebp-0x4],bl
64003edd:	cmp    DWORD PTR ds:0x640303f8,ebx
64003ee3:	jne    0x64004ca9
64003ee9:	call   0x64008250
64003eee:	mov    DWORD PTR [ebp-0x30],eax
64003ef1:	mov    BYTE PTR [eax+0x29],0x1
64003ef5:	mov    eax,DWORD PTR [ebp-0x30]
64003ef8:	mov    DWORD PTR [eax+0x4],eax
64003efb:	mov    eax,DWORD PTR [ebp-0x30]
64003efe:	mov    DWORD PTR [eax],eax
64003f00:	mov    eax,DWORD PTR [ebp-0x30]
64003f03:	mov    DWORD PTR [eax+0x8],eax
64003f06:	mov    DWORD PTR [ebp-0x2c],ebx
64003f09:	push   0x64026898
64003f0e:	push   0x3
64003f10:	push   0x640268c0
64003f15:	mov    BYTE PTR [ebp-0x4],0x2
64003f19:	call   0x64006890
64003f1e:	mov    esi,eax
64003f20:	mov    ecx,esi
64003f22:	add    esp,0xc
64003f25:	mov    DWORD PTR [ebp-0x10],0xf
64003f2c:	mov    DWORD PTR [ebp-0x14],ebx
64003f2f:	mov    BYTE PTR [ebp-0x24],bl
64003f32:	lea    edi,[ecx+0x1]
64003f35:	mov    al,BYTE PTR [ecx]
64003f37:	add    ecx,0x1
64003f3a:	cmp    al,bl
64003f3c:	jne    0x64003f35
64003f3e:	sub    ecx,edi
64003f40:	push   ecx
64003f41:	push   esi
64003f42:	lea    ecx,[ebp-0x28]
64003f45:	call   0x64001860
64003f4a:	lea    eax,[ebp-0x28]
64003f4d:	push   eax
64003f4e:	lea    ecx,[ebp-0x40]
64003f51:	push   ecx
64003f52:	lea    edx,[ebp-0x34]
64003f55:	push   edx
64003f56:	mov    BYTE PTR [ebp-0x4],0x3
64003f5a:	call   0x64006f40
64003f5f:	mov    BYTE PTR [ebp-0x4],0x2
64003f63:	cmp    DWORD PTR [ebp-0x10],0x10
64003f67:	jb     0x64003f75
64003f69:	mov    eax,DWORD PTR [ebp-0x24]
64003f6c:	push   eax
64003f6d:	call   0x64011d22
64003f72:	add    esp,0x4
64003f75:	push   0x640268c4
64003f7a:	push   0x8
64003f7c:	push   0x64026904
64003f81:	call   0x64006890
64003f86:	mov    esi,eax
64003f88:	mov    ecx,esi
64003f8a:	add    esp,0xc
64003f8d:	mov    DWORD PTR [ebp-0x10],0xf
64003f94:	mov    DWORD PTR [ebp-0x14],ebx
64003f97:	mov    BYTE PTR [ebp-0x24],bl
64003f9a:	lea    edx,[ecx+0x1]
64003f9d:	lea    ecx,[ecx+0x0]
64003fa0:	mov    al,BYTE PTR [ecx]
64003fa2:	add    ecx,0x1
64003fa5:	cmp    al,bl
64003fa7:	jne    0x64003fa0
64003fa9:	sub    ecx,edx
64003fab:	push   ecx
64003fac:	push   esi
64003fad:	lea    ecx,[ebp-0x28]
64003fb0:	call   0x64001860
64003fb5:	lea    ecx,[ebp-0x28]
64003fb8:	push   ecx
64003fb9:	lea    edx,[ebp-0x40]
64003fbc:	push   edx
64003fbd:	lea    eax,[ebp-0x34]
64003fc0:	push   eax
64003fc1:	mov    BYTE PTR [ebp-0x4],0x4
64003fc5:	call   0x64006f40
64003fca:	mov    edi,0x10
64003fcf:	mov    BYTE PTR [ebp-0x4],0x2
64003fd3:	cmp    DWORD PTR [ebp-0x10],edi
64003fd6:	jb     0x64003fe4
64003fd8:	mov    ecx,DWORD PTR [ebp-0x24]
64003fdb:	push   ecx
64003fdc:	call   0x64011d22
64003fe1:	add    esp,0x4
64003fe4:	push   0x64026910
64003fe9:	push   0x8
64003feb:	push   0x6402694c
64003ff0:	call   0x64006890
64003ff5:	mov    esi,eax
64003ff7:	mov    ecx,esi
64003ff9:	add    esp,0xc
64003ffc:	mov    DWORD PTR [ebp-0x10],0xf
64004003:	mov    DWORD PTR [ebp-0x14],ebx
64004006:	mov    BYTE PTR [ebp-0x24],bl
64004009:	lea    edx,[ecx+0x1]
6400400c:	lea    esp,[esp+0x0]
64004010:	mov    al,BYTE PTR [ecx]
64004012:	add    ecx,0x1
64004015:	cmp    al,bl
64004017:	jne    0x64004010
64004019:	sub    ecx,edx
6400401b:	push   ecx
6400401c:	push   esi
6400401d:	lea    ecx,[ebp-0x28]
64004020:	call   0x64001860
64004025:	lea    edx,[ebp-0x28]
64004028:	push   edx
64004029:	lea    eax,[ebp-0x40]
6400402c:	push   eax
6400402d:	lea    ecx,[ebp-0x34]
64004030:	push   ecx
64004031:	mov    BYTE PTR [ebp-0x4],0x5
64004035:	call   0x64006f40
6400403a:	mov    BYTE PTR [ebp-0x4],0x2
6400403e:	cmp    DWORD PTR [ebp-0x10],edi
64004041:	jb     0x6400404f
64004043:	mov    edx,DWORD PTR [ebp-0x24]
64004046:	push   edx
64004047:	call   0x64011d22
6400404c:	add    esp,0x4
6400404f:	push   0x64026958
64004054:	push   0xa
64004056:	push   0x64026998
6400405b:	call   0x64006890
64004060:	mov    esi,eax
64004062:	mov    ecx,esi
64004064:	add    esp,0xc
64004067:	mov    DWORD PTR [ebp-0x10],0xf
6400406e:	mov    DWORD PTR [ebp-0x14],ebx
64004071:	mov    BYTE PTR [ebp-0x24],bl
64004074:	lea    edx,[ecx+0x1]
64004077:	mov    al,BYTE PTR [ecx]
64004079:	add    ecx,0x1
6400407c:	cmp    al,bl
6400407e:	jne    0x64004077
64004080:	sub    ecx,edx
64004082:	push   ecx
64004083:	push   esi
64004084:	lea    ecx,[ebp-0x28]
64004087:	call   0x64001860
6400408c:	lea    eax,[ebp-0x28]
6400408f:	push   eax
64004090:	lea    ecx,[ebp-0x40]
64004093:	push   ecx
64004094:	lea    edx,[ebp-0x34]
64004097:	push   edx
64004098:	mov    BYTE PTR [ebp-0x4],0x6
6400409c:	call   0x64006f40
640040a1:	mov    BYTE PTR [ebp-0x4],0x2
640040a5:	cmp    DWORD PTR [ebp-0x10],edi
640040a8:	jb     0x640040b6
640040aa:	mov    eax,DWORD PTR [ebp-0x24]
640040ad:	push   eax
640040ae:	call   0x64011d22
640040b3:	add    esp,0x4
640040b6:	push   0x640269a4
640040bb:	push   0x4
640040bd:	push   0x640269d0
640040c2:	call   0x64006890
640040c7:	mov    esi,eax
640040c9:	mov    ecx,esi
640040cb:	add    esp,0xc
640040ce:	mov    DWORD PTR [ebp-0x10],0xf
640040d5:	mov    DWORD PTR [ebp-0x14],ebx
640040d8:	mov    BYTE PTR [ebp-0x24],bl
640040db:	lea    edx,[ecx+0x1]
640040de:	mov    edi,edi
640040e0:	mov    al,BYTE PTR [ecx]
640040e2:	add    ecx,0x1
640040e5:	cmp    al,bl
640040e7:	jne    0x640040e0
640040e9:	sub    ecx,edx
640040eb:	push   ecx
640040ec:	push   esi
640040ed:	lea    ecx,[ebp-0x28]
640040f0:	call   0x64001860
640040f5:	lea    ecx,[ebp-0x28]
640040f8:	push   ecx
640040f9:	lea    edx,[ebp-0x40]
640040fc:	push   edx
640040fd:	lea    eax,[ebp-0x34]
64004100:	push   eax
64004101:	mov    BYTE PTR [ebp-0x4],0x7
64004105:	call   0x64006f40
6400410a:	mov    BYTE PTR [ebp-0x4],0x2
6400410e:	cmp    DWORD PTR [ebp-0x10],edi
64004111:	jb     0x6400411f
64004113:	mov    ecx,DWORD PTR [ebp-0x24]
64004116:	push   ecx
64004117:	call   0x64011d22
6400411c:	add    esp,0x4
6400411f:	push   0x640269d8
64004124:	push   0x8
64004126:	push   0x64026a0c
6400412b:	call   0x64006890
64004130:	mov    esi,eax
64004132:	mov    ecx,esi
64004134:	add    esp,0xc
64004137:	mov    DWORD PTR [ebp-0x10],0xf
6400413e:	mov    DWORD PTR [ebp-0x14],ebx
64004141:	mov    BYTE PTR [ebp-0x24],bl
64004144:	lea    edx,[ecx+0x1]
64004147:	mov    al,BYTE PTR [ecx]
64004149:	add    ecx,0x1
6400414c:	cmp    al,bl
6400414e:	jne    0x64004147
64004150:	sub    ecx,edx
64004152:	push   ecx
64004153:	push   esi
64004154:	lea    ecx,[ebp-0x28]
64004157:	call   0x64001860
6400415c:	lea    edx,[ebp-0x28]
6400415f:	push   edx
64004160:	lea    eax,[ebp-0x40]
64004163:	push   eax
64004164:	lea    ecx,[ebp-0x34]
64004167:	push   ecx
64004168:	mov    BYTE PTR [ebp-0x4],0x8
6400416c:	call   0x64006f40
64004171:	mov    BYTE PTR [ebp-0x4],0x2
64004175:	cmp    DWORD PTR [ebp-0x10],edi
64004178:	jb     0x64004186
6400417a:	mov    edx,DWORD PTR [ebp-0x24]
6400417d:	push   edx
6400417e:	call   0x64011d22
64004183:	add    esp,0x4
64004186:	push   0x64026a18
6400418b:	push   0x5
6400418d:	push   0x64026a40
64004192:	call   0x64006890
64004197:	mov    esi,eax
64004199:	mov    ecx,esi
6400419b:	add    esp,0xc
6400419e:	mov    DWORD PTR [ebp-0x10],0xf
640041a5:	mov    DWORD PTR [ebp-0x14],ebx
640041a8:	mov    BYTE PTR [ebp-0x24],bl
640041ab:	lea    edx,[ecx+0x1]
640041ae:	mov    edi,edi
640041b0:	mov    al,BYTE PTR [ecx]
640041b2:	add    ecx,0x1
640041b5:	cmp    al,bl
640041b7:	jne    0x640041b0
640041b9:	sub    ecx,edx
640041bb:	push   ecx
640041bc:	push   esi
640041bd:	lea    ecx,[ebp-0x28]
640041c0:	call   0x64001860
640041c5:	lea    eax,[ebp-0x28]
640041c8:	push   eax
640041c9:	lea    ecx,[ebp-0x40]
640041cc:	push   ecx
640041cd:	lea    edx,[ebp-0x34]
640041d0:	push   edx
640041d1:	mov    BYTE PTR [ebp-0x4],0x9
640041d5:	call   0x64006f40
640041da:	mov    BYTE PTR [ebp-0x4],0x2
640041de:	cmp    DWORD PTR [ebp-0x10],edi
640041e1:	jb     0x640041ef
640041e3:	mov    eax,DWORD PTR [ebp-0x24]
640041e6:	push   eax
640041e7:	call   0x64011d22
640041ec:	add    esp,0x4
640041ef:	push   0x64026a48
640041f4:	push   0x8
640041f6:	push   0x64026a80
640041fb:	call   0x64006890
64004200:	mov    esi,eax
64004202:	mov    ecx,esi
64004204:	add    esp,0xc
64004207:	mov    DWORD PTR [ebp-0x10],0xf
6400420e:	mov    DWORD PTR [ebp-0x14],ebx
64004211:	mov    BYTE PTR [ebp-0x24],bl
64004214:	lea    edx,[ecx+0x1]
64004217:	mov    al,BYTE PTR [ecx]
64004219:	add    ecx,0x1
6400421c:	cmp    al,bl
6400421e:	jne    0x64004217
64004220:	sub    ecx,edx
64004222:	push   ecx
64004223:	push   esi
64004224:	lea    ecx,[ebp-0x28]
64004227:	call   0x64001860
6400422c:	lea    ecx,[ebp-0x28]
6400422f:	push   ecx
64004230:	lea    edx,[ebp-0x40]
64004233:	push   edx
64004234:	lea    eax,[ebp-0x34]
64004237:	push   eax
64004238:	mov    BYTE PTR [ebp-0x4],0xa
6400423c:	call   0x64006f40
64004241:	mov    BYTE PTR [ebp-0x4],0x2
64004245:	cmp    DWORD PTR [ebp-0x10],edi
64004248:	jb     0x64004256
6400424a:	mov    ecx,DWORD PTR [ebp-0x24]
6400424d:	push   ecx
6400424e:	call   0x64011d22
64004253:	add    esp,0x4
64004256:	push   0x64026a8c
6400425b:	push   0xb
6400425d:	push   0x64026ac0
64004262:	call   0x64006890
64004267:	mov    esi,eax
64004269:	mov    ecx,esi
6400426b:	add    esp,0xc
6400426e:	mov    DWORD PTR [ebp-0x10],0xf
64004275:	mov    DWORD PTR [ebp-0x14],ebx
64004278:	mov    BYTE PTR [ebp-0x24],bl
6400427b:	lea    edx,[ecx+0x1]
6400427e:	mov    edi,edi
64004280:	mov    al,BYTE PTR [ecx]
64004282:	add    ecx,0x1
64004285:	cmp    al,bl
64004287:	jne    0x64004280
64004289:	sub    ecx,edx
6400428b:	push   ecx
6400428c:	push   esi
6400428d:	lea    ecx,[ebp-0x28]
64004290:	call   0x64001860
64004295:	lea    edx,[ebp-0x28]
64004298:	push   edx
64004299:	lea    eax,[ebp-0x40]
6400429c:	push   eax
6400429d:	lea    ecx,[ebp-0x34]
640042a0:	push   ecx
640042a1:	mov    BYTE PTR [ebp-0x4],0xb
640042a5:	call   0x64006f40
640042aa:	mov    BYTE PTR [ebp-0x4],0x2
640042ae:	cmp    DWORD PTR [ebp-0x10],edi
640042b1:	jb     0x640042bf
640042b3:	mov    edx,DWORD PTR [ebp-0x24]
640042b6:	push   edx
640042b7:	call   0x64011d22
640042bc:	add    esp,0x4
640042bf:	push   0x64026acc
640042c4:	push   0x1e
640042c6:	push   0x64026af4
640042cb:	call   0x64006890
640042d0:	mov    esi,eax
640042d2:	mov    ecx,esi
640042d4:	add    esp,0xc
640042d7:	mov    DWORD PTR [ebp-0x10],0xf
640042de:	mov    DWORD PTR [ebp-0x14],ebx
640042e1:	mov    BYTE PTR [ebp-0x24],bl
640042e4:	lea    edx,[ecx+0x1]
640042e7:	mov    al,BYTE PTR [ecx]
640042e9:	add    ecx,0x1
640042ec:	cmp    al,bl
640042ee:	jne    0x640042e7
640042f0:	sub    ecx,edx
640042f2:	push   ecx
640042f3:	push   esi
640042f4:	lea    ecx,[ebp-0x28]
640042f7:	call   0x64001860
640042fc:	lea    eax,[ebp-0x28]
640042ff:	push   eax
64004300:	lea    ecx,[ebp-0x40]
64004303:	push   ecx
64004304:	lea    edx,[ebp-0x34]
64004307:	push   edx
64004308:	mov    BYTE PTR [ebp-0x4],0xc
6400430c:	call   0x64006f40
64004311:	mov    BYTE PTR [ebp-0x4],0x2
64004315:	cmp    DWORD PTR [ebp-0x10],edi
64004318:	jb     0x64004326
6400431a:	mov    eax,DWORD PTR [ebp-0x24]
6400431d:	push   eax
6400431e:	call   0x64011d22
64004323:	add    esp,0x4
64004326:	push   0x64026b14
6400432b:	push   0x7
6400432d:	push   0x64026b40
64004332:	call   0x64006890
64004337:	mov    esi,eax
64004339:	mov    ecx,esi
6400433b:	add    esp,0xc
6400433e:	mov    DWORD PTR [ebp-0x10],0xf
64004345:	mov    DWORD PTR [ebp-0x14],ebx
64004348:	mov    BYTE PTR [ebp-0x24],bl
6400434b:	lea    edx,[ecx+0x1]
6400434e:	mov    edi,edi
64004350:	mov    al,BYTE PTR [ecx]
64004352:	add    ecx,0x1
64004355:	cmp    al,bl
64004357:	jne    0x64004350
64004359:	sub    ecx,edx
6400435b:	push   ecx
6400435c:	push   esi
6400435d:	lea    ecx,[ebp-0x28]
64004360:	call   0x64001860
64004365:	lea    ecx,[ebp-0x28]
64004368:	push   ecx
64004369:	lea    edx,[ebp-0x40]
6400436c:	push   edx
6400436d:	lea    eax,[ebp-0x34]
64004370:	push   eax
64004371:	mov    BYTE PTR [ebp-0x4],0xd
64004375:	call   0x64006f40
6400437a:	mov    BYTE PTR [ebp-0x4],0x2
6400437e:	cmp    DWORD PTR [ebp-0x10],edi
64004381:	jb     0x6400438f
64004383:	mov    ecx,DWORD PTR [ebp-0x24]
64004386:	push   ecx
64004387:	call   0x64011d22
6400438c:	add    esp,0x4
6400438f:	push   0x64026b48
64004394:	push   0xc
64004396:	push   0x64026b80
6400439b:	call   0x64006890
640043a0:	mov    esi,eax
640043a2:	mov    ecx,esi
640043a4:	add    esp,0xc
640043a7:	mov    DWORD PTR [ebp-0x10],0xf
640043ae:	mov    DWORD PTR [ebp-0x14],ebx
640043b1:	mov    BYTE PTR [ebp-0x24],bl
640043b4:	lea    edx,[ecx+0x1]
640043b7:	mov    al,BYTE PTR [ecx]
640043b9:	add    ecx,0x1
640043bc:	cmp    al,bl
640043be:	jne    0x640043b7
640043c0:	sub    ecx,edx
640043c2:	push   ecx
640043c3:	push   esi
640043c4:	lea    ecx,[ebp-0x28]
640043c7:	call   0x64001860
640043cc:	lea    edx,[ebp-0x28]
640043cf:	push   edx
640043d0:	lea    eax,[ebp-0x40]
640043d3:	push   eax
640043d4:	lea    ecx,[ebp-0x34]
640043d7:	push   ecx
640043d8:	mov    BYTE PTR [ebp-0x4],0xe
640043dc:	call   0x64006f40
640043e1:	mov    BYTE PTR [ebp-0x4],0x2
640043e5:	cmp    DWORD PTR [ebp-0x10],edi
640043e8:	jb     0x640043f6
640043ea:	mov    edx,DWORD PTR [ebp-0x24]
640043ed:	push   edx
640043ee:	call   0x64011d22
640043f3:	add    esp,0x4
640043f6:	push   0x64026b90
640043fb:	push   0x11
640043fd:	push   0x64026bb8
64004402:	call   0x64006890
64004407:	mov    esi,eax
64004409:	mov    ecx,esi
6400440b:	add    esp,0xc
6400440e:	mov    DWORD PTR [ebp-0x10],0xf
64004415:	mov    DWORD PTR [ebp-0x14],ebx
64004418:	mov    BYTE PTR [ebp-0x24],bl
6400441b:	lea    edx,[ecx+0x1]
6400441e:	mov    edi,edi
64004420:	mov    al,BYTE PTR [ecx]
64004422:	add    ecx,0x1
64004425:	cmp    al,bl
64004427:	jne    0x64004420
64004429:	sub    ecx,edx
6400442b:	push   ecx
6400442c:	push   esi
6400442d:	lea    ecx,[ebp-0x28]
64004430:	call   0x64001860
64004435:	lea    eax,[ebp-0x28]
64004438:	push   eax
64004439:	lea    ecx,[ebp-0x40]
6400443c:	push   ecx
6400443d:	lea    edx,[ebp-0x34]
64004440:	push   edx
64004441:	mov    BYTE PTR [ebp-0x4],0xf
64004445:	call   0x64006f40
6400444a:	mov    BYTE PTR [ebp-0x4],0x2
6400444e:	cmp    DWORD PTR [ebp-0x10],edi
64004451:	jb     0x6400445f
64004453:	mov    eax,DWORD PTR [ebp-0x24]
64004456:	push   eax
64004457:	call   0x64011d22
6400445c:	add    esp,0x4
6400445f:	push   0x64026bcc
64004464:	push   0x7
64004466:	push   0x64026c00
6400446b:	call   0x64006890
64004470:	mov    esi,eax
64004472:	mov    ecx,esi
64004474:	add    esp,0xc
64004477:	mov    DWORD PTR [ebp-0x10],0xf
6400447e:	mov    DWORD PTR [ebp-0x14],ebx
64004481:	mov    BYTE PTR [ebp-0x24],bl
64004484:	lea    edx,[ecx+0x1]
64004487:	mov    al,BYTE PTR [ecx]
64004489:	add    ecx,0x1
6400448c:	cmp    al,bl
6400448e:	jne    0x64004487
64004490:	sub    ecx,edx
64004492:	push   ecx
64004493:	push   esi
64004494:	lea    ecx,[ebp-0x28]
64004497:	call   0x64001860
6400449c:	lea    ecx,[ebp-0x28]
6400449f:	push   ecx
640044a0:	lea    edx,[ebp-0x40]
640044a3:	push   edx
640044a4:	lea    eax,[ebp-0x34]
640044a7:	push   eax
640044a8:	mov    BYTE PTR [ebp-0x4],0x10
640044ac:	call   0x64006f40
640044b1:	mov    BYTE PTR [ebp-0x4],0x2
640044b5:	cmp    DWORD PTR [ebp-0x10],edi
640044b8:	jb     0x640044c6
640044ba:	mov    ecx,DWORD PTR [ebp-0x24]
640044bd:	push   ecx
640044be:	call   0x64011d22
640044c3:	add    esp,0x4
640044c6:	push   0x64026c08
640044cb:	push   0x6
640044cd:	push   0x64026c34
640044d2:	call   0x64006890
640044d7:	mov    esi,eax
640044d9:	mov    ecx,esi
640044db:	add    esp,0xc
640044de:	mov    DWORD PTR [ebp-0x10],0xf
640044e5:	mov    DWORD PTR [ebp-0x14],ebx
640044e8:	mov    BYTE PTR [ebp-0x24],bl
640044eb:	lea    edx,[ecx+0x1]
640044ee:	mov    edi,edi
640044f0:	mov    al,BYTE PTR [ecx]
640044f2:	add    ecx,0x1
640044f5:	cmp    al,bl
640044f7:	jne    0x640044f0
640044f9:	sub    ecx,edx
640044fb:	push   ecx
640044fc:	push   esi
640044fd:	lea    ecx,[ebp-0x28]
64004500:	call   0x64001860
64004505:	lea    edx,[ebp-0x28]
64004508:	push   edx
64004509:	lea    eax,[ebp-0x40]
6400450c:	push   eax
6400450d:	lea    ecx,[ebp-0x34]
64004510:	push   ecx
64004511:	mov    BYTE PTR [ebp-0x4],0x11
64004515:	call   0x64006f40
6400451a:	mov    BYTE PTR [ebp-0x4],0x2
6400451e:	cmp    DWORD PTR [ebp-0x10],edi
64004521:	jb     0x6400452f
64004523:	mov    edx,DWORD PTR [ebp-0x24]
64004526:	push   edx
64004527:	call   0x64011d22
6400452c:	add    esp,0x4
6400452f:	push   0x64026c3c
64004534:	push   0x3
64004536:	push   0x64026c78
6400453b:	call   0x64006890
64004540:	mov    esi,eax
64004542:	mov    ecx,esi
64004544:	add    esp,0xc
64004547:	mov    DWORD PTR [ebp-0x10],0xf
6400454e:	mov    DWORD PTR [ebp-0x14],ebx
64004551:	mov    BYTE PTR [ebp-0x24],bl
64004554:	lea    edx,[ecx+0x1]
64004557:	mov    al,BYTE PTR [ecx]
64004559:	add    ecx,0x1
6400455c:	cmp    al,bl
6400455e:	jne    0x64004557
64004560:	sub    ecx,edx
64004562:	push   ecx
64004563:	push   esi
64004564:	lea    ecx,[ebp-0x28]
64004567:	call   0x64001860
6400456c:	lea    eax,[ebp-0x28]
6400456f:	push   eax
64004570:	lea    ecx,[ebp-0x40]
64004573:	push   ecx
64004574:	lea    edx,[ebp-0x34]
64004577:	push   edx
64004578:	mov    BYTE PTR [ebp-0x4],0x12
6400457c:	call   0x64006f40
64004581:	mov    BYTE PTR [ebp-0x4],0x2
64004585:	cmp    DWORD PTR [ebp-0x10],edi
64004588:	jb     0x64004596
6400458a:	mov    eax,DWORD PTR [ebp-0x24]
6400458d:	push   eax
6400458e:	call   0x64011d22
64004593:	add    esp,0x4
64004596:	push   0x64026c7c
6400459b:	push   0x8
6400459d:	push   0x64026cb4
640045a2:	call   0x64006890
640045a7:	mov    esi,eax
640045a9:	mov    ecx,esi
640045ab:	add    esp,0xc
640045ae:	mov    DWORD PTR [ebp-0x10],0xf
640045b5:	mov    DWORD PTR [ebp-0x14],ebx
640045b8:	mov    BYTE PTR [ebp-0x24],bl
640045bb:	lea    edx,[ecx+0x1]
640045be:	mov    edi,edi
640045c0:	mov    al,BYTE PTR [ecx]
640045c2:	add    ecx,0x1
640045c5:	cmp    al,bl
640045c7:	jne    0x640045c0
640045c9:	sub    ecx,edx
640045cb:	push   ecx
640045cc:	push   esi
640045cd:	lea    ecx,[ebp-0x28]
640045d0:	call   0x64001860
640045d5:	lea    ecx,[ebp-0x28]
640045d8:	push   ecx
640045d9:	lea    edx,[ebp-0x40]
640045dc:	push   edx
640045dd:	lea    eax,[ebp-0x34]
640045e0:	push   eax
640045e1:	mov    BYTE PTR [ebp-0x4],0x13
640045e5:	call   0x64006f40
640045ea:	mov    BYTE PTR [ebp-0x4],0x2
640045ee:	cmp    DWORD PTR [ebp-0x10],edi
640045f1:	jb     0x640045ff
640045f3:	mov    ecx,DWORD PTR [ebp-0x24]
640045f6:	push   ecx
640045f7:	call   0x64011d22
640045fc:	add    esp,0x4
640045ff:	push   0x64026cc0
64004604:	push   0xb
64004606:	push   0x64026ce8
6400460b:	call   0x64006890
64004610:	mov    esi,eax
64004612:	mov    ecx,esi
64004614:	add    esp,0xc
64004617:	mov    DWORD PTR [ebp-0x10],0xf
6400461e:	mov    DWORD PTR [ebp-0x14],ebx
64004621:	mov    BYTE PTR [ebp-0x24],bl
64004624:	lea    edx,[ecx+0x1]
64004627:	mov    al,BYTE PTR [ecx]
64004629:	add    ecx,0x1
6400462c:	cmp    al,bl
6400462e:	jne    0x64004627
64004630:	sub    ecx,edx
64004632:	push   ecx
64004633:	push   esi
64004634:	lea    ecx,[ebp-0x28]
64004637:	call   0x64001860
6400463c:	lea    edx,[ebp-0x28]
6400463f:	push   edx
64004640:	lea    eax,[ebp-0x40]
64004643:	push   eax
64004644:	lea    ecx,[ebp-0x34]
64004647:	push   ecx
64004648:	mov    BYTE PTR [ebp-0x4],0x14
6400464c:	call   0x64006f40
64004651:	mov    BYTE PTR [ebp-0x4],0x2
64004655:	cmp    DWORD PTR [ebp-0x10],edi
64004658:	jb     0x64004666
6400465a:	mov    edx,DWORD PTR [ebp-0x24]
6400465d:	push   edx
6400465e:	call   0x64011d22
64004663:	add    esp,0x4
64004666:	push   0x64026cf4
6400466b:	push   edi
6400466c:	push   0x64026d30
64004671:	call   0x64006890
64004676:	mov    esi,eax
64004678:	mov    ecx,esi
6400467a:	add    esp,0xc
6400467d:	mov    DWORD PTR [ebp-0x10],0xf
64004684:	mov    DWORD PTR [ebp-0x14],ebx
64004687:	mov    BYTE PTR [ebp-0x24],bl
6400468a:	lea    edx,[ecx+0x1]
6400468d:	lea    ecx,[ecx+0x0]
64004690:	mov    al,BYTE PTR [ecx]
64004692:	add    ecx,0x1
64004695:	cmp    al,bl
64004697:	jne    0x64004690
64004699:	sub    ecx,edx
6400469b:	push   ecx
6400469c:	push   esi
6400469d:	lea    ecx,[ebp-0x28]
640046a0:	call   0x64001860
640046a5:	lea    eax,[ebp-0x28]
640046a8:	push   eax
640046a9:	lea    ecx,[ebp-0x40]
640046ac:	push   ecx
640046ad:	lea    edx,[ebp-0x34]
640046b0:	push   edx
640046b1:	mov    BYTE PTR [ebp-0x4],0x15
640046b5:	call   0x64006f40
640046ba:	mov    BYTE PTR [ebp-0x4],0x2
640046be:	cmp    DWORD PTR [ebp-0x10],edi
640046c1:	jb     0x640046cf
640046c3:	mov    eax,DWORD PTR [ebp-0x24]
640046c6:	push   eax
640046c7:	call   0x64011d22
640046cc:	add    esp,0x4
640046cf:	push   0x64026d44
640046d4:	push   0x5
640046d6:	push   0x64026d6c
640046db:	call   0x64006890
640046e0:	mov    esi,eax
640046e2:	mov    ecx,esi
640046e4:	add    esp,0xc
640046e7:	mov    DWORD PTR [ebp-0x10],0xf
640046ee:	mov    DWORD PTR [ebp-0x14],ebx
640046f1:	mov    BYTE PTR [ebp-0x24],bl
640046f4:	lea    edx,[ecx+0x1]
640046f7:	mov    al,BYTE PTR [ecx]
640046f9:	add    ecx,0x1
640046fc:	cmp    al,bl
640046fe:	jne    0x640046f7
64004700:	sub    ecx,edx
64004702:	push   ecx
64004703:	push   esi
64004704:	lea    ecx,[ebp-0x28]
64004707:	call   0x64001860
6400470c:	lea    ecx,[ebp-0x28]
6400470f:	push   ecx
64004710:	lea    edx,[ebp-0x40]
64004713:	push   edx
64004714:	lea    eax,[ebp-0x34]
64004717:	push   eax
64004718:	mov    BYTE PTR [ebp-0x4],0x16
6400471c:	call   0x64006f40
64004721:	mov    BYTE PTR [ebp-0x4],0x2
64004725:	cmp    DWORD PTR [ebp-0x10],edi
64004728:	jb     0x64004736
6400472a:	mov    ecx,DWORD PTR [ebp-0x24]
6400472d:	push   ecx
6400472e:	call   0x64011d22
64004733:	add    esp,0x4
64004736:	push   0x64026d74
6400473b:	push   0x5
6400473d:	push   0x64026d98
64004742:	call   0x64006890
64004747:	mov    esi,eax
64004749:	mov    ecx,esi
6400474b:	add    esp,0xc
6400474e:	mov    DWORD PTR [ebp-0x10],0xf
64004755:	mov    DWORD PTR [ebp-0x14],ebx
64004758:	mov    BYTE PTR [ebp-0x24],bl
6400475b:	lea    edx,[ecx+0x1]
6400475e:	mov    edi,edi
64004760:	mov    al,BYTE PTR [ecx]
64004762:	add    ecx,0x1
64004765:	cmp    al,bl
64004767:	jne    0x64004760
64004769:	sub    ecx,edx
6400476b:	push   ecx
6400476c:	push   esi
6400476d:	lea    ecx,[ebp-0x28]
64004770:	call   0x64001860
64004775:	lea    edx,[ebp-0x28]
64004778:	push   edx
64004779:	lea    eax,[ebp-0x40]
6400477c:	push   eax
6400477d:	lea    ecx,[ebp-0x34]
64004780:	push   ecx
64004781:	mov    BYTE PTR [ebp-0x4],0x17
64004785:	call   0x64006f40
6400478a:	mov    BYTE PTR [ebp-0x4],0x2
6400478e:	cmp    DWORD PTR [ebp-0x10],edi
64004791:	jb     0x6400479f
64004793:	mov    edx,DWORD PTR [ebp-0x24]
64004796:	push   edx
64004797:	call   0x64011d22
6400479c:	add    esp,0x4
6400479f:	push   0x64026da0
640047a4:	push   0x8
640047a6:	push   0x64026dd8
640047ab:	call   0x64006890
640047b0:	mov    esi,eax
640047b2:	mov    ecx,esi
640047b4:	add    esp,0xc
640047b7:	mov    DWORD PTR [ebp-0x10],0xf
640047be:	mov    DWORD PTR [ebp-0x14],ebx
640047c1:	mov    BYTE PTR [ebp-0x24],bl
640047c4:	lea    edx,[ecx+0x1]
640047c7:	mov    al,BYTE PTR [ecx]
640047c9:	add    ecx,0x1
640047cc:	cmp    al,bl
640047ce:	jne    0x640047c7
640047d0:	sub    ecx,edx
640047d2:	push   ecx
640047d3:	push   esi
640047d4:	lea    ecx,[ebp-0x28]
640047d7:	call   0x64001860
640047dc:	lea    eax,[ebp-0x28]
640047df:	push   eax
640047e0:	lea    ecx,[ebp-0x40]
640047e3:	push   ecx
640047e4:	lea    edx,[ebp-0x34]
640047e7:	push   edx
640047e8:	mov    BYTE PTR [ebp-0x4],0x18
640047ec:	call   0x64006f40
640047f1:	mov    BYTE PTR [ebp-0x4],0x2
640047f5:	cmp    DWORD PTR [ebp-0x10],edi
640047f8:	jb     0x64004806
640047fa:	mov    eax,DWORD PTR [ebp-0x24]
640047fd:	push   eax
640047fe:	call   0x64011d22
64004803:	add    esp,0x4
64004806:	push   0x64026de4
6400480b:	push   0x8
6400480d:	push   0x64026e0c
64004812:	call   0x64006890
64004817:	add    esp,0xc
6400481a:	push   eax
6400481b:	lea    ecx,[ebp-0x28]
6400481e:	call   0x64002720
64004823:	lea    ecx,[ebp-0x28]
64004826:	push   ecx
64004827:	lea    edx,[ebp-0x40]
6400482a:	push   edx
6400482b:	lea    eax,[ebp-0x34]
6400482e:	push   eax
6400482f:	mov    BYTE PTR [ebp-0x4],0x19
64004833:	call   0x64006f40
64004838:	mov    BYTE PTR [ebp-0x4],0x2
6400483c:	cmp    DWORD PTR [ebp-0x10],edi
6400483f:	jb     0x6400484d
64004841:	mov    ecx,DWORD PTR [ebp-0x24]
64004844:	push   ecx
64004845:	call   0x64011d22
6400484a:	add    esp,0x4
6400484d:	push   0x64026e18
64004852:	push   0x4
64004854:	push   0x64026e40
64004859:	call   0x64006890
6400485e:	add    esp,0xc
64004861:	push   eax
64004862:	lea    ecx,[ebp-0x28]
64004865:	call   0x64002720
6400486a:	lea    edx,[ebp-0x28]
6400486d:	push   edx
6400486e:	lea    eax,[ebp-0x40]
64004871:	push   eax
64004872:	lea    ecx,[ebp-0x34]
64004875:	push   ecx
64004876:	mov    BYTE PTR [ebp-0x4],0x1a
6400487a:	call   0x64006f40
6400487f:	mov    BYTE PTR [ebp-0x4],0x2
64004883:	cmp    DWORD PTR [ebp-0x10],edi
64004886:	jb     0x64004894
64004888:	mov    edx,DWORD PTR [ebp-0x24]
6400488b:	push   edx
6400488c:	call   0x64011d22
64004891:	add    esp,0x4
64004894:	push   0x64026e48
64004899:	push   0xc
6400489b:	push   0x64026e6c
640048a0:	call   0x64006890
640048a5:	add    esp,0xc
640048a8:	push   eax
640048a9:	lea    ecx,[ebp-0x28]
640048ac:	call   0x64002720
640048b1:	lea    eax,[ebp-0x28]
640048b4:	push   eax
640048b5:	lea    ecx,[ebp-0x40]
640048b8:	push   ecx
640048b9:	lea    edx,[ebp-0x34]
640048bc:	push   edx
640048bd:	mov    BYTE PTR [ebp-0x4],0x1b
640048c1:	call   0x64006f40
640048c6:	mov    BYTE PTR [ebp-0x4],0x2
640048ca:	cmp    DWORD PTR [ebp-0x10],edi
640048cd:	jb     0x640048db
640048cf:	mov    eax,DWORD PTR [ebp-0x24]
640048d2:	push   eax
640048d3:	call   0x64011d22
640048d8:	add    esp,0x4
640048db:	push   0x64026e7c
640048e0:	push   edi
640048e1:	push   0x64026eb4
640048e6:	call   0x64006890
640048eb:	add    esp,0xc
640048ee:	push   eax
640048ef:	lea    ecx,[ebp-0x28]
640048f2:	call   0x64002720
640048f7:	lea    ecx,[ebp-0x28]
640048fa:	push   ecx
640048fb:	lea    edx,[ebp-0x40]
640048fe:	push   edx
640048ff:	lea    eax,[ebp-0x34]
64004902:	push   eax
64004903:	mov    BYTE PTR [ebp-0x4],0x1c
64004907:	call   0x64006f40
6400490c:	mov    BYTE PTR [ebp-0x4],0x2
64004910:	cmp    DWORD PTR [ebp-0x10],edi
64004913:	jb     0x64004921
64004915:	mov    ecx,DWORD PTR [ebp-0x24]
64004918:	push   ecx
64004919:	call   0x64011d22
6400491e:	add    esp,0x4
64004921:	push   0x64026ec8
64004926:	push   0x7
64004928:	push   0x64026f04
6400492d:	call   0x64006890
64004932:	add    esp,0xc
64004935:	push   eax
64004936:	lea    ecx,[ebp-0x28]
64004939:	call   0x64002720
6400493e:	lea    edx,[ebp-0x28]
64004941:	push   edx
64004942:	lea    eax,[ebp-0x40]
64004945:	push   eax
64004946:	lea    ecx,[ebp-0x34]
64004949:	push   ecx
6400494a:	mov    BYTE PTR [ebp-0x4],0x1d
6400494e:	call   0x64006f40
64004953:	mov    BYTE PTR [ebp-0x4],0x2
64004957:	cmp    DWORD PTR [ebp-0x10],edi
6400495a:	jb     0x64004968
6400495c:	mov    edx,DWORD PTR [ebp-0x24]
6400495f:	push   edx
64004960:	call   0x64011d22
64004965:	add    esp,0x4
64004968:	push   0x64026f0c
6400496d:	push   0x9
6400496f:	push   0x64026f44
64004974:	call   0x64006890
64004979:	add    esp,0xc
6400497c:	push   eax
6400497d:	lea    ecx,[ebp-0x28]
64004980:	call   0x64002720
64004985:	lea    eax,[ebp-0x28]
64004988:	push   eax
64004989:	lea    ecx,[ebp-0x40]
6400498c:	push   ecx
6400498d:	lea    edx,[ebp-0x34]
64004990:	push   edx
64004991:	mov    BYTE PTR [ebp-0x4],0x1e
64004995:	call   0x64006f40
6400499a:	mov    BYTE PTR [ebp-0x4],0x2
6400499e:	cmp    DWORD PTR [ebp-0x10],edi
640049a1:	jb     0x640049af
640049a3:	mov    eax,DWORD PTR [ebp-0x24]
640049a6:	push   eax
640049a7:	call   0x64011d22
640049ac:	add    esp,0x4
640049af:	push   0x64026f50
640049b4:	push   0x7
640049b6:	push   0x64026f80
640049bb:	call   0x64006890
640049c0:	add    esp,0xc
640049c3:	push   eax
640049c4:	lea    ecx,[ebp-0x28]
640049c7:	call   0x64002720
640049cc:	lea    ecx,[ebp-0x28]
640049cf:	push   ecx
640049d0:	lea    edx,[ebp-0x40]
640049d3:	push   edx
640049d4:	lea    eax,[ebp-0x34]
640049d7:	push   eax
640049d8:	mov    BYTE PTR [ebp-0x4],0x1f
640049dc:	call   0x64006f40
640049e1:	mov    BYTE PTR [ebp-0x4],0x2
640049e5:	cmp    DWORD PTR [ebp-0x10],edi
640049e8:	jb     0x640049f6
640049ea:	mov    ecx,DWORD PTR [ebp-0x24]
640049ed:	push   ecx
640049ee:	call   0x64011d22
640049f3:	add    esp,0x4
640049f6:	push   0x64026f88
640049fb:	push   0xb
640049fd:	push   0x64026fc4
64004a02:	call   0x64006890
64004a07:	add    esp,0xc
64004a0a:	push   eax
64004a0b:	lea    ecx,[ebp-0x28]
64004a0e:	call   0x64002720
64004a13:	lea    edx,[ebp-0x28]
64004a16:	push   edx
64004a17:	lea    eax,[ebp-0x40]
64004a1a:	push   eax
64004a1b:	lea    ecx,[ebp-0x34]
64004a1e:	push   ecx
64004a1f:	mov    BYTE PTR [ebp-0x4],0x20
64004a23:	call   0x64006f40
64004a28:	mov    BYTE PTR [ebp-0x4],0x2
64004a2c:	cmp    DWORD PTR [ebp-0x10],edi
64004a2f:	jb     0x64004a3d
64004a31:	mov    edx,DWORD PTR [ebp-0x24]
64004a34:	push   edx
64004a35:	call   0x64011d22
64004a3a:	add    esp,0x4
64004a3d:	push   0x64026fd0
64004a42:	push   0x6
64004a44:	push   0x64026ff4
64004a49:	call   0x64006890
64004a4e:	add    esp,0xc
64004a51:	push   eax
64004a52:	lea    ecx,[ebp-0x28]
64004a55:	call   0x64002720
64004a5a:	lea    eax,[ebp-0x28]
64004a5d:	push   eax
64004a5e:	lea    ecx,[ebp-0x40]
64004a61:	push   ecx
64004a62:	lea    edx,[ebp-0x34]
64004a65:	push   edx
64004a66:	mov    BYTE PTR [ebp-0x4],0x21
64004a6a:	call   0x64006f40
64004a6f:	mov    BYTE PTR [ebp-0x4],0x2
64004a73:	cmp    DWORD PTR [ebp-0x10],edi
64004a76:	jb     0x64004a84
64004a78:	mov    eax,DWORD PTR [ebp-0x24]
64004a7b:	push   eax
64004a7c:	call   0x64011d22
64004a81:	add    esp,0x4
64004a84:	push   0x64026ffc
64004a89:	push   0x6
64004a8b:	push   0x64027028
64004a90:	call   0x64006890
64004a95:	add    esp,0xc
64004a98:	push   eax
64004a99:	lea    ecx,[ebp-0x28]
64004a9c:	call   0x64002720
64004aa1:	lea    ecx,[ebp-0x28]
64004aa4:	push   ecx
64004aa5:	lea    edx,[ebp-0x40]
64004aa8:	push   edx
64004aa9:	lea    eax,[ebp-0x34]
64004aac:	push   eax
64004aad:	mov    BYTE PTR [ebp-0x4],0x22
64004ab1:	call   0x64006f40
64004ab6:	mov    BYTE PTR [ebp-0x4],0x2
64004aba:	cmp    DWORD PTR [ebp-0x10],edi
64004abd:	jb     0x64004acb
64004abf:	mov    ecx,DWORD PTR [ebp-0x24]
64004ac2:	push   ecx
64004ac3:	call   0x64011d22
64004ac8:	add    esp,0x4
64004acb:	push   0x64027030
64004ad0:	push   0x7
64004ad2:	push   0x6402705c
64004ad7:	call   0x64006890
64004adc:	add    esp,0xc
64004adf:	push   eax
64004ae0:	lea    ecx,[ebp-0x28]
64004ae3:	call   0x64002720
64004ae8:	lea    edx,[ebp-0x28]
64004aeb:	push   edx
64004aec:	lea    eax,[ebp-0x40]
64004aef:	push   eax
64004af0:	lea    ecx,[ebp-0x34]
64004af3:	push   ecx
64004af4:	mov    BYTE PTR [ebp-0x4],0x23
64004af8:	call   0x64006f40
64004afd:	mov    BYTE PTR [ebp-0x4],0x2
64004b01:	cmp    DWORD PTR [ebp-0x10],edi
64004b04:	jb     0x64004b12
64004b06:	mov    edx,DWORD PTR [ebp-0x24]
64004b09:	push   edx
64004b0a:	call   0x64011d22
64004b0f:	add    esp,0x4
64004b12:	push   0x64027064
64004b17:	push   0x9
64004b19:	push   0x64027094
64004b1e:	call   0x64006890
64004b23:	add    esp,0xc
64004b26:	push   eax
64004b27:	lea    ecx,[ebp-0x28]
64004b2a:	call   0x64002720
64004b2f:	lea    eax,[ebp-0x28]
64004b32:	push   eax
64004b33:	lea    ecx,[ebp-0x40]
64004b36:	push   ecx
64004b37:	lea    edx,[ebp-0x34]
64004b3a:	push   edx
64004b3b:	mov    BYTE PTR [ebp-0x4],0x24
64004b3f:	call   0x64006f40
64004b44:	mov    BYTE PTR [ebp-0x4],0x2
64004b48:	cmp    DWORD PTR [ebp-0x10],edi
64004b4b:	jb     0x64004b59
64004b4d:	mov    eax,DWORD PTR [ebp-0x24]
64004b50:	push   eax
64004b51:	call   0x64011d22
64004b56:	add    esp,0x4
64004b59:	push   0x640270a0
64004b5e:	push   0x7
64004b60:	push   0x640270d0
64004b65:	call   0x64006890
64004b6a:	add    esp,0xc
64004b6d:	push   eax
64004b6e:	lea    ecx,[ebp-0x28]
64004b71:	call   0x64002720
64004b76:	lea    ecx,[ebp-0x28]
64004b79:	push   ecx
64004b7a:	lea    edx,[ebp-0x40]
64004b7d:	push   edx
64004b7e:	lea    eax,[ebp-0x34]
64004b81:	push   eax
64004b82:	mov    BYTE PTR [ebp-0x4],0x25
64004b86:	call   0x64006f40
64004b8b:	mov    BYTE PTR [ebp-0x4],0x2
64004b8f:	cmp    DWORD PTR [ebp-0x10],edi
64004b92:	jb     0x64004ba0
64004b94:	mov    ecx,DWORD PTR [ebp-0x24]
64004b97:	push   ecx
64004b98:	call   0x64011d22
64004b9d:	add    esp,0x4
64004ba0:	push   0x640270d8
64004ba5:	push   0x6
64004ba7:	push   0x64027118
64004bac:	call   0x64006890
64004bb1:	add    esp,0xc
64004bb4:	push   eax
64004bb5:	lea    ecx,[ebp-0x28]
64004bb8:	call   0x64002720
64004bbd:	lea    edx,[ebp-0x28]
64004bc0:	push   edx
64004bc1:	lea    eax,[ebp-0x40]
64004bc4:	push   eax
64004bc5:	lea    ecx,[ebp-0x34]
64004bc8:	push   ecx
64004bc9:	mov    BYTE PTR [ebp-0x4],0x26
64004bcd:	call   0x64006f40
64004bd2:	mov    BYTE PTR [ebp-0x4],0x2
64004bd6:	cmp    DWORD PTR [ebp-0x10],edi
64004bd9:	jb     0x64004be7
64004bdb:	mov    edx,DWORD PTR [ebp-0x24]
64004bde:	push   edx
64004bdf:	call   0x64011d22
64004be4:	add    esp,0x4
64004be7:	push   0x64027120
64004bec:	push   0x8
64004bee:	push   0x64027150
64004bf3:	call   0x64006890
64004bf8:	add    esp,0xc
64004bfb:	push   eax
64004bfc:	lea    ecx,[ebp-0x28]
64004bff:	call   0x64002720
64004c04:	lea    eax,[ebp-0x28]
64004c07:	push   eax
64004c08:	lea    ecx,[ebp-0x40]
64004c0b:	push   ecx
64004c0c:	lea    edx,[ebp-0x34]
64004c0f:	push   edx
64004c10:	mov    BYTE PTR [ebp-0x4],0x27
64004c14:	call   0x64006f40
64004c19:	mov    BYTE PTR [ebp-0x4],0x2
64004c1d:	cmp    DWORD PTR [ebp-0x10],edi
64004c20:	jb     0x64004c2e
64004c22:	mov    eax,DWORD PTR [ebp-0x24]
64004c25:	push   eax
64004c26:	call   0x64011d22
64004c2b:	add    esp,0x4
64004c2e:	push   0x6402715c
64004c33:	push   0x6
64004c35:	push   0x6402719c
64004c3a:	call   0x64006890
64004c3f:	add    esp,0xc
64004c42:	push   eax
64004c43:	lea    ecx,[ebp-0x28]
64004c46:	call   0x64002720
64004c4b:	lea    ecx,[ebp-0x28]
64004c4e:	push   ecx
64004c4f:	lea    edx,[ebp-0x40]
64004c52:	push   edx
64004c53:	lea    eax,[ebp-0x34]
64004c56:	push   eax
64004c57:	mov    BYTE PTR [ebp-0x4],0x28
64004c5b:	call   0x64006f40
64004c60:	mov    BYTE PTR [ebp-0x4],0x2
64004c64:	cmp    DWORD PTR [ebp-0x10],edi
64004c67:	jb     0x64004c75
64004c69:	mov    ecx,DWORD PTR [ebp-0x24]
64004c6c:	push   ecx
64004c6d:	call   0x64011d22
64004c72:	add    esp,0x4
64004c75:	lea    edx,[ebp-0x40]
64004c78:	push   edx
64004c79:	lea    ecx,[ebp-0x34]
64004c7c:	call   0x64003bf0
64004c81:	add    esp,0x4
64004c84:	mov    ecx,0x640303f0
64004c89:	mov    BYTE PTR [ebp-0x4],0x29
64004c8d:	call   0x64006f00
64004c92:	lea    eax,[ebp-0x40]
64004c95:	mov    BYTE PTR [ebp-0x4],0x2
64004c99:	call   0x64007920
64004c9e:	lea    eax,[ebp-0x34]
64004ca1:	mov    BYTE PTR [ebp-0x4],bl
64004ca4:	call   0x64007920
64004ca9:	call   DWORD PTR ds:0x6402c06c
64004caf:	mov    edi,DWORD PTR [ebp+0x40c]
64004cb5:	cmp    DWORD PTR [edi-0x4],0x1
64004cb9:	mov    DWORD PTR [ebp-0x48],eax
64004cbc:	jle    0x64004cd3
64004cbe:	mov    eax,DWORD PTR [edi-0xc]
64004cc1:	push   eax
64004cc2:	lea    ecx,[ebp+0x40c]
64004cc8:	call   0x64001950
64004ccd:	mov    edi,DWORD PTR [ebp+0x40c]
64004cd3:	cmp    edi,ebx
64004cd5:	jne    0x64004cdb
64004cd7:	xor    eax,eax
64004cd9:	jmp    0x64004d08
64004cdb:	push   edi
64004cdc:	call   DWORD PTR ds:0x64024050
64004ce2:	add    eax,0x1
64004ce5:	cmp    eax,0x3fffffff
64004cea:	jle    0x64004cf0
64004cec:	xor    eax,eax
64004cee:	jmp    0x64004d08
64004cf0:	lea    esi,[eax+eax*1]
64004cf3:	mov    eax,esi
64004cf5:	call   0x64012c80
64004cfa:	mov    ecx,DWORD PTR [ebp-0x48]
64004cfd:	mov    eax,esp
64004cff:	push   ecx
64004d00:	push   esi
64004d01:	push   edi
64004d02:	push   eax
64004d03:	call   0x64002b90
64004d08:	lea    edx,[ebp+0x0]
64004d0b:	jmp    0x64004d10
64004d0d:	lea    ecx,[ecx+0x0]
64004d10:	mov    cl,BYTE PTR [eax]
64004d12:	mov    BYTE PTR [edx],cl
64004d14:	add    eax,0x1
64004d17:	add    edx,0x1
64004d1a:	cmp    cl,bl
64004d1c:	jne    0x64004d10
64004d1e:	lea    edx,[ebp+0x0]
64004d21:	push   edx
64004d22:	call   0x6401e915
64004d27:	add    esp,0x4
64004d2a:	lea    eax,[ebp+0x0]
64004d2d:	push   eax
64004d2e:	lea    ecx,[ebp-0x28]
64004d31:	call   0x64002720
64004d36:	lea    eax,[ebp-0x28]
64004d39:	mov    esi,0x640303f0
64004d3e:	mov    BYTE PTR [ebp-0x4],0x2a
64004d42:	call   0x640070d0
64004d47:	test   eax,eax
64004d49:	setne  BYTE PTR [ebp-0x41]
64004d4d:	cmp    DWORD PTR [ebp-0x10],0x10
64004d51:	jb     0x64004d5f
64004d53:	mov    ecx,DWORD PTR [ebp-0x24]
64004d56:	push   ecx
64004d57:	call   0x64011d22
64004d5c:	add    esp,0x4
64004d5f:	lea    eax,[edi-0x10]
64004d62:	mov    DWORD PTR [ebp-0x10],0xf
64004d69:	mov    DWORD PTR [ebp-0x14],ebx
64004d6c:	mov    BYTE PTR [ebp-0x24],bl
64004d6f:	mov    DWORD PTR [ebp-0x4],0xffffffff
64004d76:	lea    edx,[eax+0xc]
64004d79:	or     ecx,0xffffffff
64004d7c:	lock xadd DWORD PTR [edx],ecx
64004d80:	dec    ecx
64004d81:	test   ecx,ecx
64004d83:	jg     0x64004d8f
64004d85:	mov    ecx,DWORD PTR [eax]
64004d87:	mov    edx,DWORD PTR [ecx]
64004d89:	push   eax
64004d8a:	mov    eax,DWORD PTR [edx+0x4]
64004d8d:	call   eax
64004d8f:	mov    al,BYTE PTR [ebp-0x41]
64004d92:	lea    esp,[ebp-0x58]
64004d95:	mov    ecx,DWORD PTR [ebp-0xc]
64004d98:	mov    DWORD PTR fs:0x0,ecx
64004d9f:	pop    ecx
64004da0:	pop    edi
64004da1:	pop    esi
64004da2:	pop    ebx
64004da3:	mov    ecx,DWORD PTR [ebp+0x400]
64004da9:	xor    ecx,ebp
64004dab:	call   0x6401257c
64004db0:	add    ebp,0x404
64004db6:	mov    esp,ebp
64004db8:	pop    ebp
64004db9:	ret    
64004dba:	int3   
64004dbb:	int3   
64004dbc:	int3   
64004dbd:	int3   
64004dbe:	int3   
64004dbf:	int3   
64004dc0:	int3   
64004dc1:	int3   
64004dc2:	int3   
64004dc3:	int3   
64004dc4:	int3   
64004dc5:	int3   
64004dc6:	int3   
64004dc7:	int3   
64004dc8:	int3   
64004dc9:	int3   
64004dca:	int3   
64004dcb:	int3   
64004dcc:	int3   
64004dcd:	int3   
64004dce:	int3   
64004dcf:	int3   
64004dd0:	push   ebp
64004dd1:	lea    ebp,[esp-0x404]
64004dd8:	sub    esp,0x404
64004dde:	push   0xffffffff
64004de0:	push   0x64022dd1
64004de5:	mov    eax,fs:0x0
64004deb:	push   eax
64004dec:	sub    esp,0x3c
64004def:	mov    eax,ds:0x6402c09c
64004df4:	xor    eax,ebp
64004df6:	mov    DWORD PTR [ebp+0x400],eax
64004dfc:	push   ebx
64004dfd:	push   esi
64004dfe:	push   edi
64004dff:	push   eax
64004e00:	lea    eax,[ebp-0xc]
64004e03:	mov    fs:0x0,eax
64004e09:	xor    ebx,ebx
64004e0b:	mov    DWORD PTR [ebp-0x4],ebx
64004e0e:	test   BYTE PTR ds:0x640303ec,0x1
64004e15:	jne    0x64004e5d
64004e17:	or     DWORD PTR ds:0x640303ec,0x1
64004e1e:	mov    BYTE PTR [ebp-0x4],0x1
64004e22:	call   0x64008250
64004e27:	mov    ds:0x640303e4,eax
64004e2c:	mov    BYTE PTR [eax+0x29],0x1
64004e30:	mov    eax,ds:0x640303e4
64004e35:	mov    DWORD PTR [eax+0x4],eax
64004e38:	mov    eax,ds:0x640303e4
64004e3d:	mov    DWORD PTR [eax],eax
64004e3f:	mov    eax,ds:0x640303e4
64004e44:	mov    DWORD PTR [eax+0x8],eax
64004e47:	push   0x640231a0
64004e4c:	mov    DWORD PTR ds:0x640303e8,ebx
64004e52:	call   0x640126af
64004e57:	add    esp,0x4
64004e5a:	mov    BYTE PTR [ebp-0x4],bl
64004e5d:	cmp    DWORD PTR ds:0x640303e8,ebx
64004e63:	jne    0x6400600c
64004e69:	call   0x64008250
64004e6e:	mov    DWORD PTR [ebp-0x30],eax
64004e71:	mov    BYTE PTR [eax+0x29],0x1
64004e75:	mov    eax,DWORD PTR [ebp-0x30]
64004e78:	mov    DWORD PTR [eax+0x4],eax
64004e7b:	mov    eax,DWORD PTR [ebp-0x30]
64004e7e:	mov    DWORD PTR [eax],eax
64004e80:	mov    eax,DWORD PTR [ebp-0x30]
64004e83:	mov    DWORD PTR [eax+0x8],eax
64004e86:	mov    DWORD PTR [ebp-0x2c],ebx
64004e89:	push   0x640271a4
64004e8e:	push   0xd
64004e90:	push   0x640271d0
64004e95:	mov    BYTE PTR [ebp-0x4],0x2
64004e99:	call   0x64006890
64004e9e:	mov    esi,eax
64004ea0:	mov    ecx,esi
64004ea2:	add    esp,0xc
64004ea5:	mov    DWORD PTR [ebp-0x10],0xf
64004eac:	mov    DWORD PTR [ebp-0x14],ebx
64004eaf:	mov    BYTE PTR [ebp-0x24],bl
64004eb2:	lea    edi,[ecx+0x1]
64004eb5:	mov    al,BYTE PTR [ecx]
64004eb7:	add    ecx,0x1
64004eba:	cmp    al,bl
64004ebc:	jne    0x64004eb5
64004ebe:	sub    ecx,edi
64004ec0:	push   ecx
64004ec1:	push   esi
64004ec2:	lea    ecx,[ebp-0x28]
64004ec5:	call   0x64001860
64004eca:	lea    eax,[ebp-0x28]
64004ecd:	push   eax
64004ece:	lea    ecx,[ebp-0x40]
64004ed1:	push   ecx
64004ed2:	lea    edx,[ebp-0x34]
64004ed5:	push   edx
64004ed6:	mov    BYTE PTR [ebp-0x4],0x3
64004eda:	call   0x64006f40
64004edf:	mov    BYTE PTR [ebp-0x4],0x2
64004ee3:	cmp    DWORD PTR [ebp-0x10],0x10
64004ee7:	jb     0x64004ef5
64004ee9:	mov    eax,DWORD PTR [ebp-0x24]
64004eec:	push   eax
64004eed:	call   0x64011d22
64004ef2:	add    esp,0x4
64004ef5:	push   0x640271e0
64004efa:	push   0x5
64004efc:	push   0x64027214
64004f01:	call   0x64006890
64004f06:	mov    esi,eax
64004f08:	mov    ecx,esi
64004f0a:	add    esp,0xc
64004f0d:	mov    DWORD PTR [ebp-0x10],0xf
64004f14:	mov    DWORD PTR [ebp-0x14],ebx
64004f17:	mov    BYTE PTR [ebp-0x24],bl
64004f1a:	lea    edx,[ecx+0x1]
64004f1d:	lea    ecx,[ecx+0x0]
64004f20:	mov    al,BYTE PTR [ecx]
64004f22:	add    ecx,0x1
64004f25:	cmp    al,bl
64004f27:	jne    0x64004f20
64004f29:	sub    ecx,edx
64004f2b:	push   ecx
64004f2c:	push   esi
64004f2d:	lea    ecx,[ebp-0x28]
64004f30:	call   0x64001860
64004f35:	lea    ecx,[ebp-0x28]
64004f38:	push   ecx
64004f39:	lea    edx,[ebp-0x40]
64004f3c:	push   edx
64004f3d:	lea    eax,[ebp-0x34]
64004f40:	push   eax
64004f41:	mov    BYTE PTR [ebp-0x4],0x4
64004f45:	call   0x64006f40
64004f4a:	mov    edi,0x10
64004f4f:	mov    BYTE PTR [ebp-0x4],0x2
64004f53:	cmp    DWORD PTR [ebp-0x10],edi
64004f56:	jb     0x64004f64
64004f58:	mov    ecx,DWORD PTR [ebp-0x24]
64004f5b:	push   ecx
64004f5c:	call   0x64011d22
64004f61:	add    esp,0x4
64004f64:	push   0x6402721c
64004f69:	push   0x5
64004f6b:	push   0x64027254
64004f70:	call   0x64006890
64004f75:	mov    esi,eax
64004f77:	mov    ecx,esi
64004f79:	add    esp,0xc
64004f7c:	mov    DWORD PTR [ebp-0x10],0xf
64004f83:	mov    DWORD PTR [ebp-0x14],ebx
64004f86:	mov    BYTE PTR [ebp-0x24],bl
64004f89:	lea    edx,[ecx+0x1]
64004f8c:	lea    esp,[esp+0x0]
64004f90:	mov    al,BYTE PTR [ecx]
64004f92:	add    ecx,0x1
64004f95:	cmp    al,bl
64004f97:	jne    0x64004f90
64004f99:	sub    ecx,edx
64004f9b:	push   ecx
64004f9c:	push   esi
64004f9d:	lea    ecx,[ebp-0x28]
64004fa0:	call   0x64001860
64004fa5:	lea    edx,[ebp-0x28]
64004fa8:	push   edx
64004fa9:	lea    eax,[ebp-0x40]
64004fac:	push   eax
64004fad:	lea    ecx,[ebp-0x34]
64004fb0:	push   ecx
64004fb1:	mov    BYTE PTR [ebp-0x4],0x5
64004fb5:	call   0x64006f40
64004fba:	mov    BYTE PTR [ebp-0x4],0x2
64004fbe:	cmp    DWORD PTR [ebp-0x10],edi
64004fc1:	jb     0x64004fcf
64004fc3:	mov    edx,DWORD PTR [ebp-0x24]
64004fc6:	push   edx
64004fc7:	call   0x64011d22
64004fcc:	add    esp,0x4
64004fcf:	push   0x6402725c
64004fd4:	push   0x11
64004fd6:	push   0x64027288
64004fdb:	call   0x64006890
64004fe0:	mov    esi,eax
64004fe2:	mov    ecx,esi
64004fe4:	add    esp,0xc
64004fe7:	mov    DWORD PTR [ebp-0x10],0xf
64004fee:	mov    DWORD PTR [ebp-0x14],ebx
64004ff1:	mov    BYTE PTR [ebp-0x24],bl
64004ff4:	lea    edx,[ecx+0x1]
64004ff7:	mov    al,BYTE PTR [ecx]
64004ff9:	add    ecx,0x1
64004ffc:	cmp    al,bl
64004ffe:	jne    0x64004ff7
64005000:	sub    ecx,edx
64005002:	push   ecx
64005003:	push   esi
64005004:	lea    ecx,[ebp-0x28]
64005007:	call   0x64001860
6400500c:	lea    eax,[ebp-0x28]
6400500f:	push   eax
64005010:	lea    ecx,[ebp-0x40]
64005013:	push   ecx
64005014:	lea    edx,[ebp-0x34]
64005017:	push   edx
64005018:	mov    BYTE PTR [ebp-0x4],0x6
6400501c:	call   0x64006f40
64005021:	mov    BYTE PTR [ebp-0x4],0x2
64005025:	cmp    DWORD PTR [ebp-0x10],edi
64005028:	jb     0x64005036
6400502a:	mov    eax,DWORD PTR [ebp-0x24]
6400502d:	push   eax
6400502e:	call   0x64011d22
64005033:	add    esp,0x4
64005036:	push   0x6402729c
6400503b:	push   0x6
6400503d:	push   0x640272c0
64005042:	call   0x64006890
64005047:	mov    esi,eax
64005049:	mov    ecx,esi
6400504b:	add    esp,0xc
6400504e:	mov    DWORD PTR [ebp-0x10],0xf
64005055:	mov    DWORD PTR [ebp-0x14],ebx
64005058:	mov    BYTE PTR [ebp-0x24],bl
6400505b:	lea    edx,[ecx+0x1]
6400505e:	mov    edi,edi
64005060:	mov    al,BYTE PTR [ecx]
64005062:	add    ecx,0x1
64005065:	cmp    al,bl
64005067:	jne    0x64005060
64005069:	sub    ecx,edx
6400506b:	push   ecx
6400506c:	push   esi
6400506d:	lea    ecx,[ebp-0x28]
64005070:	call   0x64001860
64005075:	lea    ecx,[ebp-0x28]
64005078:	push   ecx
64005079:	lea    edx,[ebp-0x40]
6400507c:	push   edx
6400507d:	lea    eax,[ebp-0x34]
64005080:	push   eax
64005081:	mov    BYTE PTR [ebp-0x4],0x7
64005085:	call   0x64006f40
6400508a:	mov    BYTE PTR [ebp-0x4],0x2
6400508e:	cmp    DWORD PTR [ebp-0x10],edi
64005091:	jb     0x6400509f
64005093:	mov    ecx,DWORD PTR [ebp-0x24]
64005096:	push   ecx
64005097:	call   0x64011d22
6400509c:	add    esp,0x4
6400509f:	push   0x640272c8
640050a4:	push   0x3
640050a6:	push   0x64027304
640050ab:	call   0x64006890
640050b0:	mov    esi,eax
640050b2:	mov    ecx,esi
640050b4:	add    esp,0xc
640050b7:	mov    DWORD PTR [ebp-0x10],0xf
640050be:	mov    DWORD PTR [ebp-0x14],ebx
640050c1:	mov    BYTE PTR [ebp-0x24],bl
640050c4:	lea    edx,[ecx+0x1]
640050c7:	mov    al,BYTE PTR [ecx]
640050c9:	add    ecx,0x1
640050cc:	cmp    al,bl
640050ce:	jne    0x640050c7
640050d0:	sub    ecx,edx
640050d2:	push   ecx
640050d3:	push   esi
640050d4:	lea    ecx,[ebp-0x28]
640050d7:	call   0x64001860
640050dc:	lea    edx,[ebp-0x28]
640050df:	push   edx
640050e0:	lea    eax,[ebp-0x40]
640050e3:	push   eax
640050e4:	lea    ecx,[ebp-0x34]
640050e7:	push   ecx
640050e8:	mov    BYTE PTR [ebp-0x4],0x8
640050ec:	call   0x64006f40
640050f1:	mov    BYTE PTR [ebp-0x4],0x2
640050f5:	cmp    DWORD PTR [ebp-0x10],edi
640050f8:	jb     0x64005106
640050fa:	mov    edx,DWORD PTR [ebp-0x24]
640050fd:	push   edx
640050fe:	call   0x64011d22
64005103:	add    esp,0x4
64005106:	push   0x64027308
6400510b:	push   0x3
6400510d:	push   0x64027340
64005112:	call   0x64006890
64005117:	mov    esi,eax
64005119:	mov    ecx,esi
6400511b:	add    esp,0xc
6400511e:	mov    DWORD PTR [ebp-0x10],0xf
64005125:	mov    DWORD PTR [ebp-0x14],ebx
64005128:	mov    BYTE PTR [ebp-0x24],bl
6400512b:	lea    edx,[ecx+0x1]
6400512e:	mov    edi,edi
64005130:	mov    al,BYTE PTR [ecx]
64005132:	add    ecx,0x1
64005135:	cmp    al,bl
64005137:	jne    0x64005130
64005139:	sub    ecx,edx
6400513b:	push   ecx
6400513c:	push   esi
6400513d:	lea    ecx,[ebp-0x28]
64005140:	call   0x64001860
64005145:	lea    eax,[ebp-0x28]
64005148:	push   eax
64005149:	lea    ecx,[ebp-0x40]
6400514c:	push   ecx
6400514d:	lea    edx,[ebp-0x34]
64005150:	push   edx
64005151:	mov    BYTE PTR [ebp-0x4],0x9
64005155:	call   0x64006f40
6400515a:	mov    BYTE PTR [ebp-0x4],0x2
6400515e:	cmp    DWORD PTR [ebp-0x10],edi
64005161:	jb     0x6400516f
64005163:	mov    eax,DWORD PTR [ebp-0x24]
64005166:	push   eax
64005167:	call   0x64011d22
6400516c:	add    esp,0x4
6400516f:	push   0x64027344
64005174:	push   0x3
64005176:	push   0x64027378
6400517b:	call   0x64006890
64005180:	mov    esi,eax
64005182:	mov    ecx,esi
64005184:	add    esp,0xc
64005187:	mov    DWORD PTR [ebp-0x10],0xf
6400518e:	mov    DWORD PTR [ebp-0x14],ebx
64005191:	mov    BYTE PTR [ebp-0x24],bl
64005194:	lea    edx,[ecx+0x1]
64005197:	mov    al,BYTE PTR [ecx]
64005199:	add    ecx,0x1
6400519c:	cmp    al,bl
6400519e:	jne    0x64005197
640051a0:	sub    ecx,edx
640051a2:	push   ecx
640051a3:	push   esi
640051a4:	lea    ecx,[ebp-0x28]
640051a7:	call   0x64001860
640051ac:	lea    ecx,[ebp-0x28]
640051af:	push   ecx
640051b0:	lea    edx,[ebp-0x40]
640051b3:	push   edx
640051b4:	lea    eax,[ebp-0x34]
640051b7:	push   eax
640051b8:	mov    BYTE PTR [ebp-0x4],0xa
640051bc:	call   0x64006f40
640051c1:	mov    BYTE PTR [ebp-0x4],0x2
640051c5:	cmp    DWORD PTR [ebp-0x10],edi
640051c8:	jb     0x640051d6
640051ca:	mov    ecx,DWORD PTR [ebp-0x24]
640051cd:	push   ecx
640051ce:	call   0x64011d22
640051d3:	add    esp,0x4
640051d6:	push   0x6402737c
640051db:	push   0x4
640051dd:	push   0x640273ac
640051e2:	call   0x64006890
640051e7:	mov    esi,eax
640051e9:	mov    ecx,esi
640051eb:	add    esp,0xc
640051ee:	mov    DWORD PTR [ebp-0x10],0xf
640051f5:	mov    DWORD PTR [ebp-0x14],ebx
640051f8:	mov    BYTE PTR [ebp-0x24],bl
640051fb:	lea    edx,[ecx+0x1]
640051fe:	mov    edi,edi
64005200:	mov    al,BYTE PTR [ecx]
64005202:	add    ecx,0x1
64005205:	cmp    al,bl
64005207:	jne    0x64005200
64005209:	sub    ecx,edx
6400520b:	push   ecx
6400520c:	push   esi
6400520d:	lea    ecx,[ebp-0x28]
64005210:	call   0x64001860
64005215:	lea    edx,[ebp-0x28]
64005218:	push   edx
64005219:	lea    eax,[ebp-0x40]
6400521c:	push   eax
6400521d:	lea    ecx,[ebp-0x34]
64005220:	push   ecx
64005221:	mov    BYTE PTR [ebp-0x4],0xb
64005225:	call   0x64006f40
6400522a:	mov    BYTE PTR [ebp-0x4],0x2
6400522e:	cmp    DWORD PTR [ebp-0x10],edi
64005231:	jb     0x6400523f
64005233:	mov    edx,DWORD PTR [ebp-0x24]
64005236:	push   edx
64005237:	call   0x64011d22
6400523c:	add    esp,0x4
6400523f:	push   0x640273b4
64005244:	push   0x5
64005246:	push   0x640273d8
6400524b:	call   0x64006890
64005250:	mov    esi,eax
64005252:	mov    ecx,esi
64005254:	add    esp,0xc
64005257:	mov    DWORD PTR [ebp-0x10],0xf
6400525e:	mov    DWORD PTR [ebp-0x14],ebx
64005261:	mov    BYTE PTR [ebp-0x24],bl
64005264:	lea    edx,[ecx+0x1]
64005267:	mov    al,BYTE PTR [ecx]
64005269:	add    ecx,0x1
6400526c:	cmp    al,bl
6400526e:	jne    0x64005267
64005270:	sub    ecx,edx
64005272:	push   ecx
64005273:	push   esi
64005274:	lea    ecx,[ebp-0x28]
64005277:	call   0x64001860
6400527c:	lea    eax,[ebp-0x28]
6400527f:	push   eax
64005280:	lea    ecx,[ebp-0x40]
64005283:	push   ecx
64005284:	lea    edx,[ebp-0x34]
64005287:	push   edx
64005288:	mov    BYTE PTR [ebp-0x4],0xc
6400528c:	call   0x64006f40
64005291:	mov    BYTE PTR [ebp-0x4],0x2
64005295:	cmp    DWORD PTR [ebp-0x10],edi
64005298:	jb     0x640052a6
6400529a:	mov    eax,DWORD PTR [ebp-0x24]
6400529d:	push   eax
6400529e:	call   0x64011d22
640052a3:	add    esp,0x4
640052a6:	push   0x640273e0
640052ab:	push   0x8
640052ad:	push   0x64027410
640052b2:	call   0x64006890
640052b7:	mov    esi,eax
640052b9:	mov    ecx,esi
640052bb:	add    esp,0xc
640052be:	mov    DWORD PTR [ebp-0x10],0xf
640052c5:	mov    DWORD PTR [ebp-0x14],ebx
640052c8:	mov    BYTE PTR [ebp-0x24],bl
640052cb:	lea    edx,[ecx+0x1]
640052ce:	mov    edi,edi
640052d0:	mov    al,BYTE PTR [ecx]
640052d2:	add    ecx,0x1
640052d5:	cmp    al,bl
640052d7:	jne    0x640052d0
640052d9:	sub    ecx,edx
640052db:	push   ecx
640052dc:	push   esi
640052dd:	lea    ecx,[ebp-0x28]
640052e0:	call   0x64001860
640052e5:	lea    ecx,[ebp-0x28]
640052e8:	push   ecx
640052e9:	lea    edx,[ebp-0x40]
640052ec:	push   edx
640052ed:	lea    eax,[ebp-0x34]
640052f0:	push   eax
640052f1:	mov    BYTE PTR [ebp-0x4],0xd
640052f5:	call   0x64006f40
640052fa:	mov    BYTE PTR [ebp-0x4],0x2
640052fe:	cmp    DWORD PTR [ebp-0x10],edi
64005301:	jb     0x6400530f
64005303:	mov    ecx,DWORD PTR [ebp-0x24]
64005306:	push   ecx
64005307:	call   0x64011d22
6400530c:	add    esp,0x4
6400530f:	push   0x6402741c
64005314:	push   0x4
64005316:	push   0x64027450
6400531b:	call   0x64006890
64005320:	mov    esi,eax
64005322:	mov    ecx,esi
64005324:	add    esp,0xc
64005327:	mov    DWORD PTR [ebp-0x10],0xf
6400532e:	mov    DWORD PTR [ebp-0x14],ebx
64005331:	mov    BYTE PTR [ebp-0x24],bl
64005334:	lea    edx,[ecx+0x1]
64005337:	mov    al,BYTE PTR [ecx]
64005339:	add    ecx,0x1
6400533c:	cmp    al,bl
6400533e:	jne    0x64005337
64005340:	sub    ecx,edx
64005342:	push   ecx
64005343:	push   esi
64005344:	lea    ecx,[ebp-0x28]
64005347:	call   0x64001860
6400534c:	lea    edx,[ebp-0x28]
6400534f:	push   edx
64005350:	lea    eax,[ebp-0x40]
64005353:	push   eax
64005354:	lea    ecx,[ebp-0x34]
64005357:	push   ecx
64005358:	mov    BYTE PTR [ebp-0x4],0xe
6400535c:	call   0x64006f40
64005361:	mov    BYTE PTR [ebp-0x4],0x2
64005365:	cmp    DWORD PTR [ebp-0x10],edi
64005368:	jb     0x64005376
6400536a:	mov    edx,DWORD PTR [ebp-0x24]
6400536d:	push   edx
6400536e:	call   0x64011d22
64005373:	add    esp,0x4
64005376:	push   0x64027458
6400537b:	push   0x5
6400537d:	push   0x64027498
64005382:	call   0x64006890
64005387:	mov    esi,eax
64005389:	mov    ecx,esi
6400538b:	add    esp,0xc
6400538e:	mov    DWORD PTR [ebp-0x10],0xf
64005395:	mov    DWORD PTR [ebp-0x14],ebx
64005398:	mov    BYTE PTR [ebp-0x24],bl
6400539b:	lea    edx,[ecx+0x1]
6400539e:	mov    edi,edi
640053a0:	mov    al,BYTE PTR [ecx]
640053a2:	add    ecx,0x1
640053a5:	cmp    al,bl
640053a7:	jne    0x640053a0
640053a9:	sub    ecx,edx
640053ab:	push   ecx
640053ac:	push   esi
640053ad:	lea    ecx,[ebp-0x28]
640053b0:	call   0x64001860
640053b5:	lea    eax,[ebp-0x28]
640053b8:	push   eax
640053b9:	lea    ecx,[ebp-0x40]
640053bc:	push   ecx
640053bd:	lea    edx,[ebp-0x34]
640053c0:	push   edx
640053c1:	mov    BYTE PTR [ebp-0x4],0xf
640053c5:	call   0x64006f40
640053ca:	mov    BYTE PTR [ebp-0x4],0x2
640053ce:	cmp    DWORD PTR [ebp-0x10],edi
640053d1:	jb     0x640053df
640053d3:	mov    eax,DWORD PTR [ebp-0x24]
640053d6:	push   eax
640053d7:	call   0x64011d22
640053dc:	add    esp,0x4
640053df:	push   0x640274a0
640053e4:	push   0x5
640053e6:	push   0x640274c4
640053eb:	call   0x64006890
640053f0:	mov    esi,eax
640053f2:	mov    ecx,esi
640053f4:	add    esp,0xc
640053f7:	mov    DWORD PTR [ebp-0x10],0xf
640053fe:	mov    DWORD PTR [ebp-0x14],ebx
64005401:	mov    BYTE PTR [ebp-0x24],bl
64005404:	lea    edx,[ecx+0x1]
64005407:	mov    al,BYTE PTR [ecx]
64005409:	add    ecx,0x1
6400540c:	cmp    al,bl
6400540e:	jne    0x64005407
64005410:	sub    ecx,edx
64005412:	push   ecx
64005413:	push   esi
64005414:	lea    ecx,[ebp-0x28]
64005417:	call   0x64001860
6400541c:	lea    ecx,[ebp-0x28]
6400541f:	push   ecx
64005420:	lea    edx,[ebp-0x40]
64005423:	push   edx
64005424:	lea    eax,[ebp-0x34]
64005427:	push   eax
64005428:	mov    BYTE PTR [ebp-0x4],0x10
6400542c:	call   0x64006f40
64005431:	mov    BYTE PTR [ebp-0x4],0x2
64005435:	cmp    DWORD PTR [ebp-0x10],edi
64005438:	jb     0x64005446
6400543a:	mov    ecx,DWORD PTR [ebp-0x24]
6400543d:	push   ecx
6400543e:	call   0x64011d22
64005443:	add    esp,0x4
64005446:	push   0x640274cc
6400544b:	push   0x4
6400544d:	push   0x640274fc
64005452:	call   0x64006890
64005457:	mov    esi,eax
64005459:	mov    ecx,esi
6400545b:	add    esp,0xc
6400545e:	mov    DWORD PTR [ebp-0x10],0xf
64005465:	mov    DWORD PTR [ebp-0x14],ebx
64005468:	mov    BYTE PTR [ebp-0x24],bl
6400546b:	lea    edx,[ecx+0x1]
6400546e:	mov    edi,edi
64005470:	mov    al,BYTE PTR [ecx]
64005472:	add    ecx,0x1
64005475:	cmp    al,bl
64005477:	jne    0x64005470
64005479:	sub    ecx,edx
6400547b:	push   ecx
6400547c:	push   esi
6400547d:	lea    ecx,[ebp-0x28]
64005480:	call   0x64001860
64005485:	lea    edx,[ebp-0x28]
64005488:	push   edx
64005489:	lea    eax,[ebp-0x40]
6400548c:	push   eax
6400548d:	lea    ecx,[ebp-0x34]
64005490:	push   ecx
64005491:	mov    BYTE PTR [ebp-0x4],0x11
64005495:	call   0x64006f40
6400549a:	mov    BYTE PTR [ebp-0x4],0x2
6400549e:	cmp    DWORD PTR [ebp-0x10],edi
640054a1:	jb     0x640054af
640054a3:	mov    edx,DWORD PTR [ebp-0x24]
640054a6:	push   edx
640054a7:	call   0x64011d22
640054ac:	add    esp,0x4
640054af:	push   0x64027504
640054b4:	push   0x8
640054b6:	push   0x64027538
640054bb:	call   0x64006890
640054c0:	mov    esi,eax
640054c2:	mov    ecx,esi
640054c4:	add    esp,0xc
640054c7:	mov    DWORD PTR [ebp-0x10],0xf
640054ce:	mov    DWORD PTR [ebp-0x14],ebx
640054d1:	mov    BYTE PTR [ebp-0x24],bl
640054d4:	lea    edx,[ecx+0x1]
640054d7:	mov    al,BYTE PTR [ecx]
640054d9:	add    ecx,0x1
640054dc:	cmp    al,bl
640054de:	jne    0x640054d7
640054e0:	sub    ecx,edx
640054e2:	push   ecx
640054e3:	push   esi
640054e4:	lea    ecx,[ebp-0x28]
640054e7:	call   0x64001860
640054ec:	lea    eax,[ebp-0x28]
640054ef:	push   eax
640054f0:	lea    ecx,[ebp-0x40]
640054f3:	push   ecx
640054f4:	lea    edx,[ebp-0x34]
640054f7:	push   edx
640054f8:	mov    BYTE PTR [ebp-0x4],0x12
640054fc:	call   0x64006f40
64005501:	mov    BYTE PTR [ebp-0x4],0x2
64005505:	cmp    DWORD PTR [ebp-0x10],edi
64005508:	jb     0x64005516
6400550a:	mov    eax,DWORD PTR [ebp-0x24]
6400550d:	push   eax
6400550e:	call   0x64011d22
64005513:	add    esp,0x4
64005516:	push   0x64027544
6400551b:	push   0x6
6400551d:	push   0x64027580
64005522:	call   0x64006890
64005527:	mov    esi,eax
64005529:	mov    ecx,esi
6400552b:	add    esp,0xc
6400552e:	mov    DWORD PTR [ebp-0x10],0xf
64005535:	mov    DWORD PTR [ebp-0x14],ebx
64005538:	mov    BYTE PTR [ebp-0x24],bl
6400553b:	lea    edx,[ecx+0x1]
6400553e:	mov    edi,edi
64005540:	mov    al,BYTE PTR [ecx]
64005542:	add    ecx,0x1
64005545:	cmp    al,bl
64005547:	jne    0x64005540
64005549:	sub    ecx,edx
6400554b:	push   ecx
6400554c:	push   esi
6400554d:	lea    ecx,[ebp-0x28]
64005550:	call   0x64001860
64005555:	lea    ecx,[ebp-0x28]
64005558:	push   ecx
64005559:	lea    edx,[ebp-0x40]
6400555c:	push   edx
6400555d:	lea    eax,[ebp-0x34]
64005560:	push   eax
64005561:	mov    BYTE PTR [ebp-0x4],0x13
64005565:	call   0x64006f40
6400556a:	mov    BYTE PTR [ebp-0x4],0x2
6400556e:	cmp    DWORD PTR [ebp-0x10],edi
64005571:	jb     0x6400557f
64005573:	mov    ecx,DWORD PTR [ebp-0x24]
64005576:	push   ecx
64005577:	call   0x64011d22
6400557c:	add    esp,0x4
6400557f:	push   0x64027588
64005584:	push   0x8
64005586:	push   0x640275c8
6400558b:	call   0x64006890
64005590:	mov    esi,eax
64005592:	mov    ecx,esi
64005594:	add    esp,0xc
64005597:	mov    DWORD PTR [ebp-0x10],0xf
6400559e:	mov    DWORD PTR [ebp-0x14],ebx
640055a1:	mov    BYTE PTR [ebp-0x24],bl
640055a4:	lea    edx,[ecx+0x1]
640055a7:	mov    al,BYTE PTR [ecx]
640055a9:	add    ecx,0x1
640055ac:	cmp    al,bl
640055ae:	jne    0x640055a7
640055b0:	sub    ecx,edx
640055b2:	push   ecx
640055b3:	push   esi
640055b4:	lea    ecx,[ebp-0x28]
640055b7:	call   0x64001860
640055bc:	lea    edx,[ebp-0x28]
640055bf:	push   edx
640055c0:	lea    eax,[ebp-0x40]
640055c3:	push   eax
640055c4:	lea    ecx,[ebp-0x34]
640055c7:	push   ecx
640055c8:	mov    BYTE PTR [ebp-0x4],0x14
640055cc:	call   0x64006f40
640055d1:	mov    BYTE PTR [ebp-0x4],0x2
640055d5:	cmp    DWORD PTR [ebp-0x10],edi
640055d8:	jb     0x640055e6
640055da:	mov    edx,DWORD PTR [ebp-0x24]
640055dd:	push   edx
640055de:	call   0x64011d22
640055e3:	add    esp,0x4
640055e6:	push   0x640275d4
640055eb:	push   0x6
640055ed:	push   0x64027600
640055f2:	call   0x64006890
640055f7:	mov    esi,eax
640055f9:	mov    ecx,esi
640055fb:	add    esp,0xc
640055fe:	mov    DWORD PTR [ebp-0x10],0xf
64005605:	mov    DWORD PTR [ebp-0x14],ebx
64005608:	mov    BYTE PTR [ebp-0x24],bl
6400560b:	lea    edx,[ecx+0x1]
6400560e:	mov    edi,edi
64005610:	mov    al,BYTE PTR [ecx]
64005612:	add    ecx,0x1
64005615:	cmp    al,bl
64005617:	jne    0x64005610
64005619:	sub    ecx,edx
6400561b:	push   ecx
6400561c:	push   esi
6400561d:	lea    ecx,[ebp-0x28]
64005620:	call   0x64001860
64005625:	lea    eax,[ebp-0x28]
64005628:	push   eax
64005629:	lea    ecx,[ebp-0x40]
6400562c:	push   ecx
6400562d:	lea    edx,[ebp-0x34]
64005630:	push   edx
64005631:	mov    BYTE PTR [ebp-0x4],0x15
64005635:	call   0x64006f40
6400563a:	mov    BYTE PTR [ebp-0x4],0x2
6400563e:	cmp    DWORD PTR [ebp-0x10],edi
64005641:	jb     0x6400564f
64005643:	mov    eax,DWORD PTR [ebp-0x24]
64005646:	push   eax
64005647:	call   0x64011d22
6400564c:	add    esp,0x4
6400564f:	push   0x64027608
64005654:	push   0x7
64005656:	push   0x64027630
6400565b:	call   0x64006890
64005660:	mov    esi,eax
64005662:	mov    ecx,esi
64005664:	add    esp,0xc
64005667:	mov    DWORD PTR [ebp-0x10],0xf
6400566e:	mov    DWORD PTR [ebp-0x14],ebx
64005671:	mov    BYTE PTR [ebp-0x24],bl
64005674:	lea    edx,[ecx+0x1]
64005677:	mov    al,BYTE PTR [ecx]
64005679:	add    ecx,0x1
6400567c:	cmp    al,bl
6400567e:	jne    0x64005677
64005680:	sub    ecx,edx
64005682:	push   ecx
64005683:	push   esi
64005684:	lea    ecx,[ebp-0x28]
64005687:	call   0x64001860
6400568c:	lea    ecx,[ebp-0x28]
6400568f:	push   ecx
64005690:	lea    edx,[ebp-0x40]
64005693:	push   edx
64005694:	lea    eax,[ebp-0x34]
64005697:	push   eax
64005698:	mov    BYTE PTR [ebp-0x4],0x16
6400569c:	call   0x64006f40
640056a1:	mov    BYTE PTR [ebp-0x4],0x2
640056a5:	cmp    DWORD PTR [ebp-0x10],edi
640056a8:	jb     0x640056b6
640056aa:	mov    ecx,DWORD PTR [ebp-0x24]
640056ad:	push   ecx
640056ae:	call   0x64011d22
640056b3:	add    esp,0x4
640056b6:	push   0x64027638
640056bb:	push   0x5
640056bd:	push   0x64027678
640056c2:	call   0x64006890
640056c7:	mov    esi,eax
640056c9:	mov    ecx,esi
640056cb:	add    esp,0xc
640056ce:	mov    DWORD PTR [ebp-0x10],0xf
640056d5:	mov    DWORD PTR [ebp-0x14],ebx
640056d8:	mov    BYTE PTR [ebp-0x24],bl
640056db:	lea    edx,[ecx+0x1]
640056de:	mov    edi,edi
640056e0:	mov    al,BYTE PTR [ecx]
640056e2:	add    ecx,0x1
640056e5:	cmp    al,bl
640056e7:	jne    0x640056e0
640056e9:	sub    ecx,edx
640056eb:	push   ecx
640056ec:	push   esi
640056ed:	lea    ecx,[ebp-0x28]
640056f0:	call   0x64001860
640056f5:	lea    edx,[ebp-0x28]
640056f8:	push   edx
640056f9:	lea    eax,[ebp-0x40]
640056fc:	push   eax
640056fd:	lea    ecx,[ebp-0x34]
64005700:	push   ecx
64005701:	mov    BYTE PTR [ebp-0x4],0x17
64005705:	call   0x64006f40
6400570a:	mov    BYTE PTR [ebp-0x4],0x2
6400570e:	cmp    DWORD PTR [ebp-0x10],edi
64005711:	jb     0x6400571f
64005713:	mov    edx,DWORD PTR [ebp-0x24]
64005716:	push   edx
64005717:	call   0x64011d22
6400571c:	add    esp,0x4
6400571f:	push   0x64027680
64005724:	push   0x5
64005726:	push   0x640276b8
6400572b:	call   0x64006890
64005730:	mov    esi,eax
64005732:	mov    ecx,esi
64005734:	add    esp,0xc
64005737:	mov    DWORD PTR [ebp-0x10],0xf
6400573e:	mov    DWORD PTR [ebp-0x14],ebx
64005741:	mov    BYTE PTR [ebp-0x24],bl
64005744:	lea    edx,[ecx+0x1]
64005747:	mov    al,BYTE PTR [ecx]
64005749:	add    ecx,0x1
6400574c:	cmp    al,bl
6400574e:	jne    0x64005747
64005750:	sub    ecx,edx
64005752:	push   ecx
64005753:	push   esi
64005754:	lea    ecx,[ebp-0x28]
64005757:	call   0x64001860
6400575c:	lea    eax,[ebp-0x28]
6400575f:	push   eax
64005760:	lea    ecx,[ebp-0x40]
64005763:	push   ecx
64005764:	lea    edx,[ebp-0x34]
64005767:	push   edx
64005768:	mov    BYTE PTR [ebp-0x4],0x18
6400576c:	call   0x64006f40
64005771:	mov    BYTE PTR [ebp-0x4],0x2
64005775:	cmp    DWORD PTR [ebp-0x10],edi
64005778:	jb     0x64005786
6400577a:	mov    eax,DWORD PTR [ebp-0x24]
6400577d:	push   eax
6400577e:	call   0x64011d22
64005783:	add    esp,0x4
64005786:	push   0x640276c0
6400578b:	push   0x7
6400578d:	push   0x640276f8
64005792:	call   0x64006890
64005797:	add    esp,0xc
6400579a:	push   eax
6400579b:	lea    ecx,[ebp-0x28]
6400579e:	call   0x64002720
640057a3:	lea    ecx,[ebp-0x28]
640057a6:	push   ecx
640057a7:	lea    edx,[ebp-0x40]
640057aa:	push   edx
640057ab:	lea    eax,[ebp-0x34]
640057ae:	push   eax
640057af:	mov    BYTE PTR [ebp-0x4],0x19
640057b3:	call   0x64006f40
640057b8:	mov    BYTE PTR [ebp-0x4],0x2
640057bc:	cmp    DWORD PTR [ebp-0x10],edi
640057bf:	jb     0x640057cd
640057c1:	mov    ecx,DWORD PTR [ebp-0x24]
640057c4:	push   ecx
640057c5:	call   0x64011d22
640057ca:	add    esp,0x4
640057cd:	push   0x64027700
640057d2:	push   0x6
640057d4:	push   0x6402773c
640057d9:	call   0x64006890
640057de:	add    esp,0xc
640057e1:	push   eax
640057e2:	lea    ecx,[ebp-0x28]
640057e5:	call   0x64002720
640057ea:	lea    edx,[ebp-0x28]
640057ed:	push   edx
640057ee:	lea    eax,[ebp-0x40]
640057f1:	push   eax
640057f2:	lea    ecx,[ebp-0x34]
640057f5:	push   ecx
640057f6:	mov    BYTE PTR [ebp-0x4],0x1a
640057fa:	call   0x64006f40
640057ff:	mov    BYTE PTR [ebp-0x4],0x2
64005803:	cmp    DWORD PTR [ebp-0x10],edi
64005806:	jb     0x64005814
64005808:	mov    edx,DWORD PTR [ebp-0x24]
6400580b:	push   edx
6400580c:	call   0x64011d22
64005811:	add    esp,0x4
64005814:	push   0x64027744
64005819:	push   0xe
6400581b:	push   0x6402777c
64005820:	call   0x64006890
64005825:	add    esp,0xc
64005828:	push   eax
64005829:	lea    ecx,[ebp-0x28]
6400582c:	call   0x64002720
64005831:	lea    eax,[ebp-0x28]
64005834:	push   eax
64005835:	lea    ecx,[ebp-0x40]
64005838:	push   ecx
64005839:	lea    edx,[ebp-0x34]
6400583c:	push   edx
6400583d:	mov    BYTE PTR [ebp-0x4],0x1b
64005841:	call   0x64006f40
64005846:	mov    BYTE PTR [ebp-0x4],0x2
6400584a:	cmp    DWORD PTR [ebp-0x10],edi
6400584d:	jb     0x6400585b
6400584f:	mov    eax,DWORD PTR [ebp-0x24]
64005852:	push   eax
64005853:	call   0x64011d22
64005858:	add    esp,0x4
6400585b:	push   0x6402778c
64005860:	push   0x12
64005862:	push   0x640277b4
64005867:	call   0x64006890
6400586c:	add    esp,0xc
6400586f:	push   eax
64005870:	lea    ecx,[ebp-0x28]
64005873:	call   0x64002720
64005878:	lea    ecx,[ebp-0x28]
6400587b:	push   ecx
6400587c:	lea    edx,[ebp-0x40]
6400587f:	push   edx
64005880:	lea    eax,[ebp-0x34]
64005883:	push   eax
64005884:	mov    BYTE PTR [ebp-0x4],0x1c
64005888:	call   0x64006f40
6400588d:	mov    BYTE PTR [ebp-0x4],0x2
64005891:	cmp    DWORD PTR [ebp-0x10],edi
64005894:	jb     0x640058a2
64005896:	mov    ecx,DWORD PTR [ebp-0x24]
64005899:	push   ecx
6400589a:	call   0x64011d22
6400589f:	add    esp,0x4
640058a2:	push   0x640277c8
640058a7:	push   0x17
640058a9:	push   0x640277ec
640058ae:	call   0x64006890
640058b3:	add    esp,0xc
640058b6:	push   eax
640058b7:	lea    ecx,[ebp-0x28]
640058ba:	call   0x64002720
640058bf:	lea    edx,[ebp-0x28]
640058c2:	push   edx
640058c3:	lea    eax,[ebp-0x40]
640058c6:	push   eax
640058c7:	lea    ecx,[ebp-0x34]
640058ca:	push   ecx
640058cb:	mov    BYTE PTR [ebp-0x4],0x1d
640058cf:	call   0x64006f40
640058d4:	mov    BYTE PTR [ebp-0x4],0x2
640058d8:	cmp    DWORD PTR [ebp-0x10],edi
640058db:	jb     0x640058e9
640058dd:	mov    edx,DWORD PTR [ebp-0x24]
640058e0:	push   edx
640058e1:	call   0x64011d22
640058e6:	add    esp,0x4
640058e9:	push   0x64027804
640058ee:	push   0x11
640058f0:	push   0x64027838
640058f5:	call   0x64006890
640058fa:	add    esp,0xc
640058fd:	push   eax
640058fe:	lea    ecx,[ebp-0x28]
64005901:	call   0x64002720
64005906:	lea    eax,[ebp-0x28]
64005909:	push   eax
6400590a:	lea    ecx,[ebp-0x40]
6400590d:	push   ecx
6400590e:	lea    edx,[ebp-0x34]
64005911:	push   edx
64005912:	mov    BYTE PTR [ebp-0x4],0x1e
64005916:	call   0x64006f40
6400591b:	mov    BYTE PTR [ebp-0x4],0x2
6400591f:	cmp    DWORD PTR [ebp-0x10],edi
64005922:	jb     0x64005930
64005924:	mov    eax,DWORD PTR [ebp-0x24]
64005927:	push   eax
64005928:	call   0x64011d22
6400592d:	add    esp,0x4
64005930:	push   0x6402784c
64005935:	push   0x8
64005937:	push   0x64027874
6400593c:	call   0x64006890
64005941:	add    esp,0xc
64005944:	push   eax
64005945:	lea    ecx,[ebp-0x28]
64005948:	call   0x64002720
6400594d:	lea    ecx,[ebp-0x28]
64005950:	push   ecx
64005951:	lea    edx,[ebp-0x40]
64005954:	push   edx
64005955:	lea    eax,[ebp-0x34]
64005958:	push   eax
64005959:	mov    BYTE PTR [ebp-0x4],0x1f
6400595d:	call   0x64006f40
64005962:	mov    BYTE PTR [ebp-0x4],0x2
64005966:	cmp    DWORD PTR [ebp-0x10],edi
64005969:	jb     0x64005977
6400596b:	mov    ecx,DWORD PTR [ebp-0x24]
6400596e:	push   ecx
6400596f:	call   0x64011d22
64005974:	add    esp,0x4
64005977:	push   0x64027880
6400597c:	push   0x6
6400597e:	push   0x640278b0
64005983:	call   0x64006890
64005988:	add    esp,0xc
6400598b:	push   eax
6400598c:	lea    ecx,[ebp-0x28]
6400598f:	call   0x64002720
64005994:	lea    edx,[ebp-0x28]
64005997:	push   edx
64005998:	lea    eax,[ebp-0x40]
6400599b:	push   eax
6400599c:	lea    ecx,[ebp-0x34]
6400599f:	push   ecx
640059a0:	mov    BYTE PTR [ebp-0x4],0x20
640059a4:	call   0x64006f40
640059a9:	mov    BYTE PTR [ebp-0x4],0x2
640059ad:	cmp    DWORD PTR [ebp-0x10],edi
640059b0:	jb     0x640059be
640059b2:	mov    edx,DWORD PTR [ebp-0x24]
640059b5:	push   edx
640059b6:	call   0x64011d22
640059bb:	add    esp,0x4
640059be:	push   0x640278b8
640059c3:	push   0x6
640059c5:	push   0x640278ec
640059ca:	call   0x64006890
640059cf:	add    esp,0xc
640059d2:	push   eax
640059d3:	lea    ecx,[ebp-0x28]
640059d6:	call   0x64002720
640059db:	lea    eax,[ebp-0x28]
640059de:	push   eax
640059df:	lea    ecx,[ebp-0x40]
640059e2:	push   ecx
640059e3:	lea    edx,[ebp-0x34]
640059e6:	push   edx
640059e7:	mov    BYTE PTR [ebp-0x4],0x21
640059eb:	call   0x64006f40
640059f0:	mov    BYTE PTR [ebp-0x4],0x2
640059f4:	cmp    DWORD PTR [ebp-0x10],edi
640059f7:	jb     0x64005a05
640059f9:	mov    eax,DWORD PTR [ebp-0x24]
640059fc:	push   eax
640059fd:	call   0x64011d22
64005a02:	add    esp,0x4
64005a05:	push   0x640278f4
64005a0a:	push   0x8
64005a0c:	push   0x64027930
64005a11:	call   0x64006890
64005a16:	add    esp,0xc
64005a19:	push   eax
64005a1a:	lea    ecx,[ebp-0x28]
64005a1d:	call   0x64002720
64005a22:	lea    ecx,[ebp-0x28]
64005a25:	push   ecx
64005a26:	lea    edx,[ebp-0x40]
64005a29:	push   edx
64005a2a:	lea    eax,[ebp-0x34]
64005a2d:	push   eax
64005a2e:	mov    BYTE PTR [ebp-0x4],0x22
64005a32:	call   0x64006f40
64005a37:	mov    BYTE PTR [ebp-0x4],0x2
64005a3b:	cmp    DWORD PTR [ebp-0x10],edi
64005a3e:	jb     0x64005a4c
64005a40:	mov    ecx,DWORD PTR [ebp-0x24]
64005a43:	push   ecx
64005a44:	call   0x64011d22
64005a49:	add    esp,0x4
64005a4c:	push   0x6402793c
64005a51:	push   0x6
64005a53:	push   0x64027974
64005a58:	call   0x64006890
64005a5d:	add    esp,0xc
64005a60:	push   eax
64005a61:	lea    ecx,[ebp-0x28]
64005a64:	call   0x64002720
64005a69:	lea    edx,[ebp-0x28]
64005a6c:	push   edx
64005a6d:	lea    eax,[ebp-0x40]
64005a70:	push   eax
64005a71:	lea    ecx,[ebp-0x34]
64005a74:	push   ecx
64005a75:	mov    BYTE PTR [ebp-0x4],0x23
64005a79:	call   0x64006f40
64005a7e:	mov    BYTE PTR [ebp-0x4],0x2
64005a82:	cmp    DWORD PTR [ebp-0x10],edi
64005a85:	jb     0x64005a93
64005a87:	mov    edx,DWORD PTR [ebp-0x24]
64005a8a:	push   edx
64005a8b:	call   0x64011d22
64005a90:	add    esp,0x4
64005a93:	push   0x6402797c
64005a98:	push   0x7
64005a9a:	push   0x640279a8
64005a9f:	call   0x64006890
64005aa4:	add    esp,0xc
64005aa7:	push   eax
64005aa8:	lea    ecx,[ebp-0x28]
64005aab:	call   0x64002720
64005ab0:	lea    eax,[ebp-0x28]
64005ab3:	push   eax
64005ab4:	lea    ecx,[ebp-0x40]
64005ab7:	push   ecx
64005ab8:	lea    edx,[ebp-0x34]
64005abb:	push   edx
64005abc:	mov    BYTE PTR [ebp-0x4],0x24
64005ac0:	call   0x64006f40
64005ac5:	mov    BYTE PTR [ebp-0x4],0x2
64005ac9:	cmp    DWORD PTR [ebp-0x10],edi
64005acc:	jb     0x64005ada
64005ace:	mov    eax,DWORD PTR [ebp-0x24]
64005ad1:	push   eax
64005ad2:	call   0x64011d22
64005ad7:	add    esp,0x4
64005ada:	push   0x640279b0
64005adf:	push   0x6
64005ae1:	push   0x640279e4
64005ae6:	call   0x64006890
64005aeb:	add    esp,0xc
64005aee:	push   eax
64005aef:	lea    ecx,[ebp-0x28]
64005af2:	call   0x64002720
64005af7:	lea    ecx,[ebp-0x28]
64005afa:	push   ecx
64005afb:	lea    edx,[ebp-0x40]
64005afe:	push   edx
64005aff:	lea    eax,[ebp-0x34]
64005b02:	push   eax
64005b03:	mov    BYTE PTR [ebp-0x4],0x25
64005b07:	call   0x64006f40
64005b0c:	mov    BYTE PTR [ebp-0x4],0x2
64005b10:	cmp    DWORD PTR [ebp-0x10],edi
64005b13:	jb     0x64005b21
64005b15:	mov    ecx,DWORD PTR [ebp-0x24]
64005b18:	push   ecx
64005b19:	call   0x64011d22
64005b1e:	add    esp,0x4
64005b21:	push   0x640279ec
64005b26:	push   0x6
64005b28:	push   0x64027a24
64005b2d:	call   0x64006890
64005b32:	add    esp,0xc
64005b35:	push   eax
64005b36:	lea    ecx,[ebp-0x28]
64005b39:	call   0x64002720
64005b3e:	lea    edx,[ebp-0x28]
64005b41:	push   edx
64005b42:	lea    eax,[ebp-0x40]
64005b45:	push   eax
64005b46:	lea    ecx,[ebp-0x34]
64005b49:	push   ecx
64005b4a:	mov    BYTE PTR [ebp-0x4],0x26
64005b4e:	call   0x64006f40
64005b53:	mov    BYTE PTR [ebp-0x4],0x2
64005b57:	cmp    DWORD PTR [ebp-0x10],edi
64005b5a:	jb     0x64005b68
64005b5c:	mov    edx,DWORD PTR [ebp-0x24]
64005b5f:	push   edx
64005b60:	call   0x64011d22
64005b65:	add    esp,0x4
64005b68:	push   0x64027a2c
64005b6d:	push   0x5
64005b6f:	push   0x64027a54
64005b74:	call   0x64006890
64005b79:	add    esp,0xc
64005b7c:	push   eax
64005b7d:	lea    ecx,[ebp-0x28]
64005b80:	call   0x64002720
64005b85:	lea    eax,[ebp-0x28]
64005b88:	push   eax
64005b89:	lea    ecx,[ebp-0x40]
64005b8c:	push   ecx
64005b8d:	lea    edx,[ebp-0x34]
64005b90:	push   edx
64005b91:	mov    BYTE PTR [ebp-0x4],0x27
64005b95:	call   0x64006f40
64005b9a:	mov    BYTE PTR [ebp-0x4],0x2
64005b9e:	cmp    DWORD PTR [ebp-0x10],edi
64005ba1:	jb     0x64005baf
64005ba3:	mov    eax,DWORD PTR [ebp-0x24]
64005ba6:	push   eax
64005ba7:	call   0x64011d22
64005bac:	add    esp,0x4
64005baf:	push   0x64027a5c
64005bb4:	push   0x6
64005bb6:	push   0x64027a90
64005bbb:	call   0x64006890
64005bc0:	add    esp,0xc
64005bc3:	push   eax
64005bc4:	lea    ecx,[ebp-0x28]
64005bc7:	call   0x64002720
64005bcc:	lea    ecx,[ebp-0x28]
64005bcf:	push   ecx
64005bd0:	lea    edx,[ebp-0x40]
64005bd3:	push   edx
64005bd4:	lea    eax,[ebp-0x34]
64005bd7:	push   eax
64005bd8:	mov    BYTE PTR [ebp-0x4],0x28
64005bdc:	call   0x64006f40
64005be1:	mov    BYTE PTR [ebp-0x4],0x2
64005be5:	cmp    DWORD PTR [ebp-0x10],edi
64005be8:	jb     0x64005bf6
64005bea:	mov    ecx,DWORD PTR [ebp-0x24]
64005bed:	push   ecx
64005bee:	call   0x64011d22
64005bf3:	add    esp,0x4
64005bf6:	push   0x64027a98
64005bfb:	push   0xa
64005bfd:	push   0x64027ac4
64005c02:	call   0x64006890
64005c07:	add    esp,0xc
64005c0a:	push   eax
64005c0b:	lea    ecx,[ebp-0x28]
64005c0e:	call   0x64002720
64005c13:	lea    edx,[ebp-0x28]
64005c16:	push   edx
64005c17:	lea    eax,[ebp-0x40]
64005c1a:	push   eax
64005c1b:	lea    ecx,[ebp-0x34]
64005c1e:	push   ecx
64005c1f:	mov    BYTE PTR [ebp-0x4],0x29
64005c23:	call   0x64006f40
64005c28:	mov    BYTE PTR [ebp-0x4],0x2
64005c2c:	cmp    DWORD PTR [ebp-0x10],edi
64005c2f:	jb     0x64005c3d
64005c31:	mov    edx,DWORD PTR [ebp-0x24]
64005c34:	push   edx
64005c35:	call   0x64011d22
64005c3a:	add    esp,0x4
64005c3d:	push   0x64027ad0
64005c42:	push   0xf
64005c44:	push   0x64027b08
64005c49:	call   0x64006890
64005c4e:	add    esp,0xc
64005c51:	push   eax
64005c52:	lea    ecx,[ebp-0x28]
64005c55:	call   0x64002720
64005c5a:	lea    eax,[ebp-0x28]
64005c5d:	push   eax
64005c5e:	lea    ecx,[ebp-0x40]
64005c61:	push   ecx
64005c62:	lea    edx,[ebp-0x34]
64005c65:	push   edx
64005c66:	mov    BYTE PTR [ebp-0x4],0x2a
64005c6a:	call   0x64006f40
64005c6f:	mov    BYTE PTR [ebp-0x4],0x2
64005c73:	cmp    DWORD PTR [ebp-0x10],edi
64005c76:	jb     0x64005c84
64005c78:	mov    eax,DWORD PTR [ebp-0x24]
64005c7b:	push   eax
64005c7c:	call   0x64011d22
64005c81:	add    esp,0x4
64005c84:	push   0x64027b18
64005c89:	push   0xa
64005c8b:	push   0x64027b58
64005c90:	call   0x64006890
64005c95:	add    esp,0xc
64005c98:	push   eax
64005c99:	lea    ecx,[ebp-0x28]
64005c9c:	call   0x64002720
64005ca1:	lea    ecx,[ebp-0x28]
64005ca4:	push   ecx
64005ca5:	lea    edx,[ebp-0x40]
64005ca8:	push   edx
64005ca9:	lea    eax,[ebp-0x34]
64005cac:	push   eax
64005cad:	mov    BYTE PTR [ebp-0x4],0x2b
64005cb1:	call   0x64006f40
64005cb6:	mov    BYTE PTR [ebp-0x4],0x2
64005cba:	cmp    DWORD PTR [ebp-0x10],edi
64005cbd:	jb     0x64005ccb
64005cbf:	mov    ecx,DWORD PTR [ebp-0x24]
64005cc2:	push   ecx
64005cc3:	call   0x64011d22
64005cc8:	add    esp,0x4
64005ccb:	push   0x64027b64
64005cd0:	push   0xb
64005cd2:	push   0x64027b9c
64005cd7:	call   0x64006890
64005cdc:	add    esp,0xc
64005cdf:	push   eax
64005ce0:	lea    ecx,[ebp-0x28]
64005ce3:	call   0x64002720
64005ce8:	lea    edx,[ebp-0x28]
64005ceb:	push   edx
64005cec:	lea    eax,[ebp-0x40]
64005cef:	push   eax
64005cf0:	lea    ecx,[ebp-0x34]
64005cf3:	push   ecx
64005cf4:	mov    BYTE PTR [ebp-0x4],0x2c
64005cf8:	call   0x64006f40
64005cfd:	mov    BYTE PTR [ebp-0x4],0x2
64005d01:	cmp    DWORD PTR [ebp-0x10],edi
64005d04:	jb     0x64005d12
64005d06:	mov    edx,DWORD PTR [ebp-0x24]
64005d09:	push   edx
64005d0a:	call   0x64011d22
64005d0f:	add    esp,0x4
64005d12:	push   0x64027ba8
64005d17:	push   0x1e
64005d19:	push   0x64027be8
64005d1e:	call   0x64006890
64005d23:	add    esp,0xc
64005d26:	push   eax
64005d27:	lea    ecx,[ebp-0x28]
64005d2a:	call   0x64002720
64005d2f:	lea    eax,[ebp-0x28]
64005d32:	push   eax
64005d33:	lea    ecx,[ebp-0x40]
64005d36:	push   ecx
64005d37:	lea    edx,[ebp-0x34]
64005d3a:	push   edx
64005d3b:	mov    BYTE PTR [ebp-0x4],0x2d
64005d3f:	call   0x64006f40
64005d44:	mov    BYTE PTR [ebp-0x4],0x2
64005d48:	cmp    DWORD PTR [ebp-0x10],edi
64005d4b:	jb     0x64005d59
64005d4d:	mov    eax,DWORD PTR [ebp-0x24]
64005d50:	push   eax
64005d51:	call   0x64011d22
64005d56:	add    esp,0x4
64005d59:	push   0x64027c08
64005d5e:	push   0x16
64005d60:	push   0x64027c48
64005d65:	call   0x64006890
64005d6a:	add    esp,0xc
64005d6d:	push   eax
64005d6e:	lea    ecx,[ebp-0x28]
64005d71:	call   0x64002720
64005d76:	lea    ecx,[ebp-0x28]
64005d79:	push   ecx
64005d7a:	lea    edx,[ebp-0x40]
64005d7d:	push   edx
64005d7e:	lea    eax,[ebp-0x34]
64005d81:	push   eax
64005d82:	mov    BYTE PTR [ebp-0x4],0x2e
64005d86:	call   0x64006f40
64005d8b:	mov    BYTE PTR [ebp-0x4],0x2
64005d8f:	cmp    DWORD PTR [ebp-0x10],edi
64005d92:	jb     0x64005da0
64005d94:	mov    ecx,DWORD PTR [ebp-0x24]
64005d97:	push   ecx
64005d98:	call   0x64011d22
64005d9d:	add    esp,0x4
64005da0:	push   0x64027c60
64005da5:	push   0x19
64005da7:	push   0x64027c88
64005dac:	call   0x64006890
64005db1:	add    esp,0xc
64005db4:	push   eax
64005db5:	lea    ecx,[ebp-0x28]
64005db8:	call   0x64002720
64005dbd:	lea    edx,[ebp-0x28]
64005dc0:	push   edx
64005dc1:	lea    eax,[ebp-0x40]
64005dc4:	push   eax
64005dc5:	lea    ecx,[ebp-0x34]
64005dc8:	push   ecx
64005dc9:	mov    BYTE PTR [ebp-0x4],0x2f
64005dcd:	call   0x64006f40
64005dd2:	mov    BYTE PTR [ebp-0x4],0x2
64005dd6:	cmp    DWORD PTR [ebp-0x10],edi
64005dd9:	jb     0x64005de7
64005ddb:	mov    edx,DWORD PTR [ebp-0x24]
64005dde:	push   edx
64005ddf:	call   0x64011d22
64005de4:	add    esp,0x4
64005de7:	push   0x64027ca4
64005dec:	push   0x7
64005dee:	push   0x64027ccc
64005df3:	call   0x64006890
64005df8:	add    esp,0xc
64005dfb:	push   eax
64005dfc:	lea    ecx,[ebp-0x28]
64005dff:	call   0x64002720
64005e04:	lea    eax,[ebp-0x28]
64005e07:	push   eax
64005e08:	lea    ecx,[ebp-0x40]
64005e0b:	push   ecx
64005e0c:	lea    edx,[ebp-0x34]
64005e0f:	push   edx
64005e10:	mov    BYTE PTR [ebp-0x4],0x30
64005e14:	call   0x64006f40
64005e19:	mov    BYTE PTR [ebp-0x4],0x2
64005e1d:	cmp    DWORD PTR [ebp-0x10],edi
64005e20:	jb     0x64005e2e
64005e22:	mov    eax,DWORD PTR [ebp-0x24]
64005e25:	push   eax
64005e26:	call   0x64011d22
64005e2b:	add    esp,0x4
64005e2e:	push   0x64027cd4
64005e33:	push   0x5
64005e35:	push   0x64027d04
64005e3a:	call   0x64006890
64005e3f:	add    esp,0xc
64005e42:	push   eax
64005e43:	lea    ecx,[ebp-0x28]
64005e46:	call   0x64002720
64005e4b:	lea    ecx,[ebp-0x28]
64005e4e:	push   ecx
64005e4f:	lea    edx,[ebp-0x40]
64005e52:	push   edx
64005e53:	lea    eax,[ebp-0x34]
64005e56:	push   eax
64005e57:	mov    BYTE PTR [ebp-0x4],0x31
64005e5b:	call   0x64006f40
64005e60:	mov    BYTE PTR [ebp-0x4],0x2
64005e64:	cmp    DWORD PTR [ebp-0x10],edi
64005e67:	jb     0x64005e75
64005e69:	mov    ecx,DWORD PTR [ebp-0x24]
64005e6c:	push   ecx
64005e6d:	call   0x64011d22
64005e72:	add    esp,0x4
64005e75:	push   0x64027d0c
64005e7a:	push   0xb
64005e7c:	push   0x64027d34
64005e81:	call   0x64006890
64005e86:	add    esp,0xc
64005e89:	push   eax
64005e8a:	lea    ecx,[ebp-0x28]
64005e8d:	call   0x64002720
64005e92:	lea    edx,[ebp-0x28]
64005e95:	push   edx
64005e96:	lea    eax,[ebp-0x40]
64005e99:	push   eax
64005e9a:	lea    ecx,[ebp-0x34]
64005e9d:	push   ecx
64005e9e:	mov    BYTE PTR [ebp-0x4],0x32
64005ea2:	call   0x64006f40
64005ea7:	mov    BYTE PTR [ebp-0x4],0x2
64005eab:	cmp    DWORD PTR [ebp-0x10],edi
64005eae:	jb     0x64005ebc
64005eb0:	mov    edx,DWORD PTR [ebp-0x24]
64005eb3:	push   edx
64005eb4:	call   0x64011d22
64005eb9:	add    esp,0x4
64005ebc:	push   0x64027d40
64005ec1:	push   0xc
64005ec3:	push   0x64027d80
64005ec8:	call   0x64006890
64005ecd:	add    esp,0xc
64005ed0:	push   eax
64005ed1:	lea    ecx,[ebp-0x28]
64005ed4:	call   0x64002720
64005ed9:	lea    eax,[ebp-0x28]
64005edc:	push   eax
64005edd:	lea    ecx,[ebp-0x40]
64005ee0:	push   ecx
64005ee1:	lea    edx,[ebp-0x34]
64005ee4:	push   edx
64005ee5:	mov    BYTE PTR [ebp-0x4],0x33
64005ee9:	call   0x64006f40
64005eee:	mov    BYTE PTR [ebp-0x4],0x2
64005ef2:	cmp    DWORD PTR [ebp-0x10],edi
64005ef5:	jb     0x64005f03
64005ef7:	mov    eax,DWORD PTR [ebp-0x24]
64005efa:	push   eax
64005efb:	call   0x64011d22
64005f00:	add    esp,0x4
64005f03:	push   0x64027d90
64005f08:	push   0x8
64005f0a:	push   0x64027dc0
64005f0f:	call   0x64006890
64005f14:	add    esp,0xc
64005f17:	push   eax
64005f18:	lea    ecx,[ebp-0x28]
64005f1b:	call   0x64002720
64005f20:	lea    ecx,[ebp-0x28]
64005f23:	push   ecx
64005f24:	lea    edx,[ebp-0x40]
64005f27:	push   edx
64005f28:	lea    eax,[ebp-0x34]
64005f2b:	push   eax
64005f2c:	mov    BYTE PTR [ebp-0x4],0x34
64005f30:	call   0x64006f40
64005f35:	mov    BYTE PTR [ebp-0x4],0x2
64005f39:	cmp    DWORD PTR [ebp-0x10],edi
64005f3c:	jb     0x64005f4a
64005f3e:	mov    ecx,DWORD PTR [ebp-0x24]
64005f41:	push   ecx
64005f42:	call   0x64011d22
64005f47:	add    esp,0x4
64005f4a:	push   0x64027dcc
64005f4f:	push   0xc
64005f51:	push   0x64027df8
64005f56:	call   0x64006890
64005f5b:	add    esp,0xc
64005f5e:	push   eax
64005f5f:	lea    ecx,[ebp-0x28]
64005f62:	call   0x64002720
64005f67:	lea    edx,[ebp-0x28]
64005f6a:	push   edx
64005f6b:	lea    eax,[ebp-0x40]
64005f6e:	push   eax
64005f6f:	lea    ecx,[ebp-0x34]
64005f72:	push   ecx
64005f73:	mov    BYTE PTR [ebp-0x4],0x35
64005f77:	call   0x64006f40
64005f7c:	mov    BYTE PTR [ebp-0x4],0x2
64005f80:	cmp    DWORD PTR [ebp-0x10],edi
64005f83:	jb     0x64005f91
64005f85:	mov    edx,DWORD PTR [ebp-0x24]
64005f88:	push   edx
64005f89:	call   0x64011d22
64005f8e:	add    esp,0x4
64005f91:	push   0x64027e08
64005f96:	push   0xa
64005f98:	push   0x64027e38
64005f9d:	call   0x64006890
64005fa2:	add    esp,0xc
64005fa5:	push   eax
64005fa6:	lea    ecx,[ebp-0x28]
64005fa9:	call   0x64002720
64005fae:	lea    eax,[ebp-0x28]
64005fb1:	push   eax
64005fb2:	lea    ecx,[ebp-0x40]
64005fb5:	push   ecx
64005fb6:	lea    edx,[ebp-0x34]
64005fb9:	push   edx
64005fba:	mov    BYTE PTR [ebp-0x4],0x36
64005fbe:	call   0x64006f40
64005fc3:	mov    BYTE PTR [ebp-0x4],0x2
64005fc7:	cmp    DWORD PTR [ebp-0x10],edi
64005fca:	jb     0x64005fd8
64005fcc:	mov    eax,DWORD PTR [ebp-0x24]
64005fcf:	push   eax
64005fd0:	call   0x64011d22
64005fd5:	add    esp,0x4
64005fd8:	lea    ecx,[ebp-0x40]
64005fdb:	push   ecx
64005fdc:	lea    ecx,[ebp-0x34]
64005fdf:	call   0x64003bf0
64005fe4:	add    esp,0x4
64005fe7:	mov    ecx,0x640303e0
64005fec:	mov    BYTE PTR [ebp-0x4],0x37
64005ff0:	call   0x64006f00
64005ff5:	lea    eax,[ebp-0x40]
64005ff8:	mov    BYTE PTR [ebp-0x4],0x2
64005ffc:	call   0x64007920
64006001:	lea    eax,[ebp-0x34]
64006004:	mov    BYTE PTR [ebp-0x4],bl
64006007:	call   0x64007920
6400600c:	call   DWORD PTR ds:0x6402c06c
64006012:	mov    edi,DWORD PTR [ebp+0x40c]
64006018:	cmp    DWORD PTR [edi-0x4],0x1
6400601c:	mov    DWORD PTR [ebp-0x48],eax
6400601f:	jle    0x64006036
64006021:	mov    edx,DWORD PTR [edi-0xc]
64006024:	push   edx
64006025:	lea    ecx,[ebp+0x40c]
6400602b:	call   0x64001950
64006030:	mov    edi,DWORD PTR [ebp+0x40c]
64006036:	cmp    edi,ebx
64006038:	jne    0x6400603e
6400603a:	xor    eax,eax
6400603c:	jmp    0x6400606b
6400603e:	push   edi
6400603f:	call   DWORD PTR ds:0x64024050
64006045:	add    eax,0x1
64006048:	cmp    eax,0x3fffffff
6400604d:	jle    0x64006053
6400604f:	xor    eax,eax
64006051:	jmp    0x6400606b
64006053:	lea    esi,[eax+eax*1]
64006056:	mov    eax,esi
64006058:	call   0x64012c80
6400605d:	mov    ecx,DWORD PTR [ebp-0x48]
64006060:	mov    eax,esp
64006062:	push   ecx
64006063:	push   esi
64006064:	push   edi
64006065:	push   eax
64006066:	call   0x64002b90
6400606b:	lea    edx,[ebp+0x0]
6400606e:	mov    edi,edi
64006070:	mov    cl,BYTE PTR [eax]
64006072:	mov    BYTE PTR [edx],cl
64006074:	add    eax,0x1
64006077:	add    edx,0x1
6400607a:	cmp    cl,bl
6400607c:	jne    0x64006070
6400607e:	lea    edx,[ebp+0x0]
64006081:	push   edx
64006082:	call   0x6401e915
64006087:	add    esp,0x4
6400608a:	lea    eax,[ebp+0x0]
6400608d:	push   eax
6400608e:	lea    ecx,[ebp-0x28]
64006091:	call   0x64002720
64006096:	lea    eax,[ebp-0x28]
64006099:	mov    esi,0x640303e0
6400609e:	mov    BYTE PTR [ebp-0x4],0x38
640060a2:	call   0x640070d0
640060a7:	test   eax,eax
640060a9:	setne  BYTE PTR [ebp-0x41]
640060ad:	cmp    DWORD PTR [ebp-0x10],0x10
640060b1:	jb     0x640060bf
640060b3:	mov    ecx,DWORD PTR [ebp-0x24]
640060b6:	push   ecx
640060b7:	call   0x64011d22
640060bc:	add    esp,0x4
640060bf:	lea    eax,[edi-0x10]
640060c2:	mov    DWORD PTR [ebp-0x10],0xf
640060c9:	mov    DWORD PTR [ebp-0x14],ebx
640060cc:	mov    BYTE PTR [ebp-0x24],bl
640060cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
640060d6:	lea    edx,[eax+0xc]
640060d9:	or     ecx,0xffffffff
640060dc:	lock xadd DWORD PTR [edx],ecx
640060e0:	dec    ecx
640060e1:	test   ecx,ecx
640060e3:	jg     0x640060ef
640060e5:	mov    ecx,DWORD PTR [eax]
640060e7:	mov    edx,DWORD PTR [ecx]
640060e9:	push   eax
640060ea:	mov    eax,DWORD PTR [edx+0x4]
640060ed:	call   eax
640060ef:	mov    al,BYTE PTR [ebp-0x41]
640060f2:	lea    esp,[ebp-0x58]
640060f5:	mov    ecx,DWORD PTR [ebp-0xc]
640060f8:	mov    DWORD PTR fs:0x0,ecx
640060ff:	pop    ecx
64006100:	pop    edi
64006101:	pop    esi
64006102:	pop    ebx
64006103:	mov    ecx,DWORD PTR [ebp+0x400]
64006109:	xor    ecx,ebp
6400610b:	call   0x6401257c
64006110:	add    ebp,0x404
64006116:	mov    esp,ebp
64006118:	pop    ebp
64006119:	ret    
6400611a:	int3   
6400611b:	int3   
6400611c:	int3   
6400611d:	int3   
6400611e:	int3   
6400611f:	int3   
64006120:	push   0xffffffff
64006122:	push   0x64023069
64006127:	mov    eax,fs:0x0
6400612d:	push   eax
6400612e:	sub    esp,0x44
64006131:	push   ebx
64006132:	push   ebp
64006133:	push   esi
64006134:	push   edi
64006135:	mov    eax,ds:0x6402c09c
6400613a:	xor    eax,esp
6400613c:	push   eax
6400613d:	lea    eax,[esp+0x58]
64006141:	mov    fs:0x0,eax
64006147:	xor    edi,edi
64006149:	mov    DWORD PTR [esp+0x60],edi
6400614d:	mov    DWORD PTR [esp+0x28],edi
64006151:	call   DWORD PTR ds:0x6402c06c
64006157:	mov    eax,ds:0x6402d560
6400615c:	mov    edx,DWORD PTR [eax+0xc]
6400615f:	mov    ecx,0x6402d560
64006164:	call   edx
64006166:	mov    ebx,DWORD PTR [esp+0x68]
6400616a:	add    eax,0x10
6400616d:	mov    DWORD PTR [ebx],eax
6400616f:	push   0x4
64006171:	push   edi
64006172:	mov    DWORD PTR [esp+0x68],edi
64006176:	push   edi
64006177:	mov    DWORD PTR [esp+0x34],0x1
6400617f:	call   0x6400e560
64006184:	call   eax
64006186:	cmp    eax,edi
64006188:	mov    DWORD PTR [esp+0x1c],eax
6400618c:	je     0x64006314
64006192:	mov    ebp,DWORD PTR ds:0x64024008
64006198:	lea    ecx,[esp+0x20]
6400619c:	push   ecx
6400619d:	lea    edx,[esp+0x1c]
640061a1:	push   edx
640061a2:	lea    ecx,[esp+0x2c]
640061a6:	push   ecx
640061a7:	push   0x24
640061a9:	lea    edx,[esp+0x44]
640061ad:	push   edx
640061ae:	push   0x3
640061b0:	push   0x13f
640061b5:	push   eax
640061b6:	mov    DWORD PTR [esp+0x40],edi
640061ba:	call   ebp
640061bc:	mov    esi,eax
640061be:	call   DWORD PTR ds:0x64024044
640061c4:	cmp    esi,edi
640061c6:	je     0x640061cf
640061c8:	cmp    eax,0xea
640061cd:	jne    0x64006214
640061cf:	mov    esi,DWORD PTR [esp+0x24]
640061d3:	add    esi,0x24
640061d6:	xor    ecx,ecx
640061d8:	mov    eax,esi
640061da:	mov    edx,0x24
640061df:	mul    edx
640061e1:	seto   cl
640061e4:	neg    ecx
640061e6:	or     ecx,eax
640061e8:	push   ecx
640061e9:	call   0x64011d1d
640061ee:	add    esp,0x4
640061f1:	mov    edi,eax
640061f3:	lea    eax,[esp+0x20]
640061f7:	push   eax
640061f8:	mov    eax,DWORD PTR [esp+0x20]
640061fc:	lea    ecx,[esp+0x1c]
64006200:	push   ecx
64006201:	lea    edx,[esp+0x2c]
64006205:	push   edx
64006206:	push   esi
64006207:	push   edi
64006208:	push   0x3
6400620a:	push   0x13f
6400620f:	push   eax
64006210:	call   ebp
64006212:	jmp    0x64006218
64006214:	mov    edi,DWORD PTR [esp+0x2c]
64006218:	xor    ebp,ebp
6400621a:	cmp    DWORD PTR [esp+0x18],ebp
6400621e:	jbe    0x64006310
64006224:	mov    ecx,DWORD PTR [edi]
64006226:	push   ecx
64006227:	lea    ecx,[esp+0x18]
6400622b:	call   0x640025a0
64006230:	mov    DWORD PTR [esp+0x60],0x1
64006238:	mov    eax,DWORD PTR [esp+0x14]
6400623c:	push   ecx
6400623d:	add    eax,0xfffffff0
64006240:	mov    DWORD PTR [esp+0x34],esp
64006244:	mov    esi,esp
64006246:	push   eax
64006247:	call   0x640028b0
6400624c:	add    eax,0x10
6400624f:	add    esp,0x4
64006252:	cmp    BYTE PTR [esp+0x70],0x0
64006257:	mov    DWORD PTR [esi],eax
64006259:	je     0x64006269
6400625b:	call   0x64004dd0
64006260:	add    esp,0x4
64006263:	test   al,al
64006265:	jne    0x64006275
64006267:	jmp    0x640062db
64006269:	call   0x64003e50
6400626e:	add    esp,0x4
64006271:	test   al,al
64006273:	jne    0x640062db
64006275:	push   0x64027e44
6400627a:	push   0x4
6400627c:	push   0x64027e74
64006281:	call   0x64006890
64006286:	add    esp,0xc
64006289:	push   eax
6400628a:	mov    ecx,ebx
6400628c:	call   0x64002670
64006291:	lea    edx,[esp+0x14]
64006295:	push   edx
64006296:	lea    eax,[esp+0x30]
6400629a:	push   eax
6400629b:	call   0x64003150
640062a0:	add    esp,0x8
640062a3:	mov    BYTE PTR [esp+0x60],0x2
640062a8:	mov    eax,DWORD PTR [eax]
640062aa:	mov    ecx,DWORD PTR [eax-0xc]
640062ad:	push   ecx
640062ae:	push   eax
640062af:	mov    ecx,ebx
640062b1:	call   0x640029f0
640062b6:	mov    BYTE PTR [esp+0x60],0x1
640062bb:	mov    eax,DWORD PTR [esp+0x2c]
640062bf:	add    eax,0xfffffff0
640062c2:	lea    ecx,[eax+0xc]
640062c5:	or     edx,0xffffffff
640062c8:	lock xadd DWORD PTR [ecx],edx
640062cc:	dec    edx
640062cd:	test   edx,edx
640062cf:	jg     0x640062db
640062d1:	mov    ecx,DWORD PTR [eax]
640062d3:	mov    edx,DWORD PTR [ecx]
640062d5:	push   eax
640062d6:	mov    eax,DWORD PTR [edx+0x4]
640062d9:	call   eax
640062db:	mov    BYTE PTR [esp+0x60],0x0
640062e0:	mov    eax,DWORD PTR [esp+0x14]
640062e4:	add    eax,0xfffffff0
640062e7:	lea    ecx,[eax+0xc]
640062ea:	or     edx,0xffffffff
640062ed:	lock xadd DWORD PTR [ecx],edx
640062f1:	dec    edx
640062f2:	test   edx,edx
640062f4:	jg     0x64006300
640062f6:	mov    ecx,DWORD PTR [eax]
640062f8:	mov    edx,DWORD PTR [ecx]
640062fa:	push   eax
640062fb:	mov    eax,DWORD PTR [edx+0x4]
640062fe:	call   eax
64006300:	add    ebp,0x1
64006303:	add    edi,0x24
64006306:	cmp    ebp,DWORD PTR [esp+0x18]
6400630a:	jb     0x64006224
64006310:	mov    eax,DWORD PTR [esp+0x1c]
64006314:	push   eax
64006315:	call   0x6400e5f0
6400631a:	call   eax
6400631c:	mov    eax,ebx
6400631e:	mov    ecx,DWORD PTR [esp+0x58]
64006322:	mov    DWORD PTR fs:0x0,ecx
64006329:	pop    ecx
6400632a:	pop    edi
6400632b:	pop    esi
6400632c:	pop    ebp
6400632d:	pop    ebx
6400632e:	add    esp,0x50
64006331:	ret    
64006332:	int3   
64006333:	int3   
64006334:	int3   
64006335:	int3   
64006336:	int3   
64006337:	int3   
64006338:	int3   
64006339:	int3   
6400633a:	int3   
6400633b:	int3   
6400633c:	int3   
6400633d:	int3   
6400633e:	int3   
6400633f:	int3   
64006340:	push   ebp
64006341:	mov    ebp,esp
64006343:	push   0xffffffff
64006345:	push   0x64022a10
6400634a:	mov    eax,fs:0x0
64006350:	push   eax
64006351:	sub    esp,0x15c
64006357:	mov    eax,ds:0x6402c09c
6400635c:	xor    eax,ebp
6400635e:	mov    DWORD PTR [ebp-0x14],eax
64006361:	push   ebx
64006362:	push   esi
64006363:	push   edi
64006364:	push   eax
64006365:	lea    eax,[ebp-0xc]
64006368:	mov    fs:0x0,eax
6400636e:	mov    DWORD PTR [ebp-0x10],esp
64006371:	mov    edi,DWORD PTR [ebp+0x8]
64006374:	push   0xa0
64006379:	lea    eax,[ebp-0x154]
6400637f:	push   eax
64006380:	push   0x7d0
64006385:	push   0x64000000
6400638a:	mov    DWORD PTR [ebp-0x4],0x0
64006391:	call   DWORD PTR ds:0x640241b4
64006397:	test   eax,eax
64006399:	je     0x640063e0
6400639b:	push   ecx
6400639c:	lea    edx,[ebp-0x154]
640063a2:	mov    ecx,esp
640063a4:	mov    DWORD PTR [ebp-0x158],esp
640063aa:	push   edx
640063ab:	call   0x640025a0
640063b0:	lea    esi,[ebp-0x168]
640063b6:	call   0x64002f50
640063bb:	mov    ecx,DWORD PTR [eax]
640063bd:	mov    DWORD PTR [edi],ecx
640063bf:	mov    edx,DWORD PTR [eax+0x4]
640063c2:	mov    DWORD PTR [edi+0x4],edx
640063c5:	mov    ecx,DWORD PTR [eax+0x8]
640063c8:	mov    DWORD PTR [edi+0x8],ecx
640063cb:	mov    edx,DWORD PTR [eax+0xc]
640063ce:	add    esp,0x4
640063d1:	mov    DWORD PTR [edi+0xc],edx
640063d4:	mov    al,0x1
640063d6:	jmp    0x64006403
640063d8:	mov    eax,0x640063de
640063dd:	ret    
640063de:	jmp    0x64006401
640063e0:	mov    eax,ds:0x64024ac0
640063e5:	mov    DWORD PTR [edi],eax
640063e7:	mov    ecx,DWORD PTR ds:0x64024ac4
640063ed:	mov    DWORD PTR [edi+0x4],ecx
640063f0:	mov    edx,DWORD PTR ds:0x64024ac8
640063f6:	mov    DWORD PTR [edi+0x8],edx
640063f9:	mov    eax,ds:0x64024acc
640063fe:	mov    DWORD PTR [edi+0xc],eax
64006401:	xor    al,al
64006403:	mov    ecx,DWORD PTR [ebp-0xc]
64006406:	mov    DWORD PTR fs:0x0,ecx
6400640d:	pop    ecx
6400640e:	pop    edi
6400640f:	pop    esi
64006410:	pop    ebx
64006411:	mov    ecx,DWORD PTR [ebp-0x14]
64006414:	xor    ecx,ebp
64006416:	call   0x6401257c
6400641b:	mov    esp,ebp
6400641d:	pop    ebp
6400641e:	ret    
6400641f:	int3   
64006420:	sub    esp,0x118
64006426:	mov    eax,ds:0x6402c09c
6400642b:	xor    eax,esp
6400642d:	mov    DWORD PTR [esp+0x114],eax
64006434:	push   esi
64006435:	push   0x110
6400643a:	lea    eax,[esp+0xc]
6400643e:	push   0x0
64006440:	push   eax
64006441:	call   0x64012c00
64006446:	mov    edx,DWORD PTR ds:0x6402d560
6400644c:	mov    eax,DWORD PTR [edx+0xc]
6400644f:	add    esp,0xc
64006452:	mov    ecx,0x6402d560
64006457:	mov    DWORD PTR [esp+0x4],0x114
6400645f:	call   eax
64006461:	lea    ecx,[esp+0x4]
64006465:	mov    esi,eax
64006467:	push   ecx
64006468:	add    esi,0x10
6400646b:	call   DWORD PTR ds:0x64024068
64006471:	test   eax,eax
64006473:	je     0x640064b5
64006475:	mov    edx,DWORD PTR [esp+0x8]
64006479:	mov    eax,DWORD PTR [esp+0xc]
6400647d:	mov    DWORD PTR [edi],edx
6400647f:	mov    DWORD PTR [ebx],eax
64006481:	lea    eax,[esi-0x10]
64006484:	lea    ecx,[eax+0xc]
64006487:	or     edx,0xffffffff
6400648a:	lock xadd DWORD PTR [ecx],edx
6400648e:	dec    edx
6400648f:	test   edx,edx
64006491:	jg     0x6400649d
64006493:	mov    ecx,DWORD PTR [eax]
64006495:	mov    edx,DWORD PTR [ecx]
64006497:	push   eax
64006498:	mov    eax,DWORD PTR [edx+0x4]
6400649b:	call   eax
6400649d:	mov    al,0x1
6400649f:	pop    esi
640064a0:	mov    ecx,DWORD PTR [esp+0x114]
640064a7:	xor    ecx,esp
640064a9:	call   0x6401257c
640064ae:	add    esp,0x118
640064b4:	ret    
640064b5:	lea    eax,[esi-0x10]
640064b8:	lea    ecx,[eax+0xc]
640064bb:	or     edx,0xffffffff
640064be:	lock xadd DWORD PTR [ecx],edx
640064c2:	dec    edx
640064c3:	test   edx,edx
640064c5:	jg     0x640064d1
640064c7:	mov    ecx,DWORD PTR [eax]
640064c9:	mov    edx,DWORD PTR [ecx]
640064cb:	push   eax
640064cc:	mov    eax,DWORD PTR [edx+0x4]
640064cf:	call   eax
640064d1:	mov    ecx,DWORD PTR [esp+0x118]
640064d8:	pop    esi
640064d9:	xor    ecx,esp
640064db:	xor    al,al
640064dd:	call   0x6401257c
640064e2:	add    esp,0x118
640064e8:	ret    
640064e9:	int3   
640064ea:	int3   
640064eb:	int3   
640064ec:	int3   
640064ed:	int3   
640064ee:	int3   
640064ef:	int3   
640064f0:	push   ebp
640064f1:	mov    ebp,esp
640064f3:	and    esp,0xfffffff8
640064f6:	push   0xffffffff
640064f8:	push   0x640229e8
640064fd:	mov    eax,fs:0x0
64006503:	push   eax
64006504:	sub    esp,0x14
64006507:	push   ebx
64006508:	push   edi
64006509:	mov    eax,ds:0x6402c09c
6400650e:	xor    eax,esp
64006510:	push   eax
64006511:	lea    eax,[esp+0x20]
64006515:	mov    fs:0x0,eax
6400651b:	cmp    DWORD PTR ds:0x64030368,0x0
64006522:	jne    0x640065d5
64006528:	push   0x64027e7c
6400652d:	push   0x12
6400652f:	push   0x64027ebc
64006534:	mov    DWORD PTR ds:0x64030368,0xc
6400653e:	mov    DWORD PTR ds:0x64030370,0x0
64006548:	call   0x64006b80
6400654d:	add    esp,0xc
64006550:	push   eax
64006551:	lea    ecx,[esp+0x14]
64006555:	call   0x640025a0
6400655a:	lea    ebx,[esp+0x18]
6400655e:	lea    edi,[esp+0x14]
64006562:	mov    DWORD PTR [esp+0x28],0x0
6400656a:	call   0x64006420
6400656f:	test   al,al
64006571:	je     0x64006598
64006573:	cmp    DWORD PTR [esp+0x14],0x6
64006578:	jb     0x64006598
6400657a:	push   0x64027ee4
6400657f:	push   0xf
64006581:	push   0x64027f0c
64006586:	call   0x64006b80
6400658b:	add    esp,0xc
6400658e:	push   eax
6400658f:	lea    ecx,[esp+0x14]
64006593:	call   0x64006850
64006598:	mov    eax,DWORD PTR [esp+0x10]
6400659c:	push   0x0
6400659e:	push   0x6403036c
640065a3:	push   0x1
640065a5:	push   eax
640065a6:	call   0x6400e4e0
640065ab:	call   eax
640065ad:	mov    DWORD PTR [esp+0x28],0xffffffff
640065b5:	mov    eax,DWORD PTR [esp+0x10]
640065b9:	add    eax,0xfffffff0
640065bc:	lea    ecx,[eax+0xc]
640065bf:	or     edx,0xffffffff
640065c2:	lock xadd DWORD PTR [ecx],edx
640065c6:	dec    edx
640065c7:	test   edx,edx
640065c9:	jg     0x640065d5
640065cb:	mov    ecx,DWORD PTR [eax]
640065cd:	mov    edx,DWORD PTR [ecx]
640065cf:	push   eax
640065d0:	mov    eax,DWORD PTR [edx+0x4]
640065d3:	call   eax
640065d5:	mov    eax,0x64030368
640065da:	mov    ecx,DWORD PTR [esp+0x20]
640065de:	mov    DWORD PTR fs:0x0,ecx
640065e5:	pop    ecx
640065e6:	pop    edi
640065e7:	pop    ebx
640065e8:	mov    esp,ebp
640065ea:	pop    ebp
640065eb:	ret    
640065ec:	int3   
640065ed:	int3   
640065ee:	int3   
640065ef:	int3   
640065f0:	push   0xffffffff
640065f2:	push   0x640229b8
640065f7:	mov    eax,fs:0x0
640065fd:	push   eax
640065fe:	push   ecx
640065ff:	push   esi
64006600:	push   edi
64006601:	mov    eax,ds:0x6402c09c
64006606:	xor    eax,esp
64006608:	push   eax
64006609:	lea    eax,[esp+0x10]
6400660d:	mov    fs:0x0,eax
64006613:	mov    esi,ecx
64006615:	mov    DWORD PTR [esp+0xc],esi
64006619:	mov    eax,ds:0x6402d560
6400661e:	mov    edx,DWORD PTR [eax+0xc]
64006621:	mov    ecx,0x6402d560
64006626:	call   edx
64006628:	add    eax,0x10
6400662b:	mov    DWORD PTR [esi],eax
6400662d:	mov    eax,DWORD PTR [esp+0x20]
64006631:	test   eax,eax
64006633:	mov    DWORD PTR [esp+0x18],0x0
6400663b:	je     0x64006661
6400663d:	test   eax,0xffff0000
64006642:	jne    0x64006661
64006644:	movzx  edi,ax
64006647:	push   0x0
64006649:	push   edi
6400664a:	call   0x64001fa0
6400664f:	add    esp,0x8
64006652:	test   eax,eax
64006654:	je     0x64006669
64006656:	push   edi
64006657:	push   eax
64006658:	mov    ecx,esi
6400665a:	call   0x64002920
6400665f:	jmp    0x64006669
64006661:	push   eax
64006662:	mov    ecx,esi
64006664:	call   0x64002810
64006669:	mov    eax,esi
6400666b:	mov    ecx,DWORD PTR [esp+0x10]
6400666f:	mov    DWORD PTR fs:0x0,ecx
64006676:	pop    ecx
64006677:	pop    edi
64006678:	pop    esi
64006679:	add    esp,0x10
6400667c:	ret    0x4
6400667f:	int3   
64006680:	mov    eax,DWORD PTR [edi]
64006682:	mov    edx,DWORD PTR [eax-0x8]
64006685:	push   ebx
64006686:	mov    ebx,DWORD PTR [eax-0xc]
64006689:	push   esi
6400668a:	mov    ecx,0x1
6400668f:	sub    ecx,DWORD PTR [eax-0x4]
64006692:	lea    esi,[ebx+0x1]
64006695:	sub    edx,esi
64006697:	or     ecx,edx
64006699:	jge    0x640066a3
6400669b:	push   esi
6400669c:	mov    ecx,edi
6400669e:	call   0x64001e00
640066a3:	test   esi,esi
640066a5:	movsx  ax,BYTE PTR [esp+0xc]
640066ab:	mov    ecx,DWORD PTR [edi]
640066ad:	mov    WORD PTR [ecx+ebx*2],ax
640066b1:	jl     0x640066cc
640066b3:	mov    eax,DWORD PTR [edi]
640066b5:	cmp    esi,DWORD PTR [eax-0x8]
640066b8:	jg     0x640066cc
640066ba:	mov    DWORD PTR [eax-0xc],esi
640066bd:	mov    edx,DWORD PTR [edi]
640066bf:	mov    WORD PTR [edx+esi*2],0x0
640066c5:	pop    esi
640066c6:	mov    eax,edi
640066c8:	pop    ebx
640066c9:	ret    0x4
640066cc:	push   0x80070057
640066d1:	call   0x64001040
640066d6:	int3   
640066d7:	int3   
640066d8:	int3   
640066d9:	int3   
640066da:	int3   
640066db:	int3   
640066dc:	int3   
640066dd:	int3   
640066de:	int3   
640066df:	int3   
640066e0:	mov    eax,DWORD PTR [edi]
640066e2:	mov    edx,DWORD PTR [eax-0x8]
640066e5:	push   ebx
640066e6:	mov    ebx,DWORD PTR [eax-0xc]
640066e9:	push   esi
640066ea:	mov    ecx,0x1
640066ef:	sub    ecx,DWORD PTR [eax-0x4]
640066f2:	lea    esi,[ebx+0x1]
640066f5:	sub    edx,esi
640066f7:	or     ecx,edx
640066f9:	jge    0x64006703
640066fb:	push   esi
640066fc:	mov    ecx,edi
640066fe:	call   0x64001e00
64006703:	test   esi,esi
64006705:	mov    eax,DWORD PTR [edi]
64006707:	mov    WORD PTR [eax+ebx*2],0x5c
6400670d:	jl     0x64006726
6400670f:	mov    eax,DWORD PTR [edi]
64006711:	cmp    esi,DWORD PTR [eax-0x8]
64006714:	jg     0x64006726
64006716:	mov    DWORD PTR [eax-0xc],esi
64006719:	mov    ecx,DWORD PTR [edi]
6400671b:	mov    WORD PTR [ecx+esi*2],0x0
64006721:	pop    esi
64006722:	mov    eax,edi
64006724:	pop    ebx
64006725:	ret    
64006726:	push   0x80070057
6400672b:	call   0x64001040
64006730:	int3   
64006731:	int3   
64006732:	int3   
64006733:	int3   
64006734:	int3   
64006735:	int3   
64006736:	int3   
64006737:	int3   
64006738:	int3   
64006739:	int3   
6400673a:	int3   
6400673b:	int3   
6400673c:	int3   
6400673d:	int3   
6400673e:	int3   
6400673f:	int3   
64006740:	push   esi
64006741:	push   edi
64006742:	mov    edi,DWORD PTR [ebx]
64006744:	mov    ecx,edi
64006746:	movzx  eax,WORD PTR [ecx]
64006749:	xor    edx,edx
6400674b:	test   ax,ax
6400674e:	je     0x640067a5
64006750:	cmp    ax,0x7d
64006754:	jne    0x6400675e
64006756:	test   edx,edx
64006758:	jne    0x64006760
6400675a:	mov    edx,ecx
6400675c:	jmp    0x64006760
6400675e:	xor    edx,edx
64006760:	movzx  eax,WORD PTR [ecx+0x2]
64006764:	add    ecx,0x2
64006767:	test   ax,ax
6400676a:	jne    0x64006750
6400676c:	test   edx,edx
6400676e:	je     0x640067a5
64006770:	mov    ecx,DWORD PTR [edi-0x8]
64006773:	sub    edx,edi
64006775:	sar    edx,1
64006777:	mov    eax,0x1
6400677c:	sub    eax,DWORD PTR [edi-0x4]
6400677f:	mov    esi,edx
64006781:	sub    ecx,esi
64006783:	or     eax,ecx
64006785:	jge    0x6400678f
64006787:	push   esi
64006788:	mov    ecx,ebx
6400678a:	call   0x64001e00
6400678f:	test   esi,esi
64006791:	jl     0x640067aa
64006793:	mov    eax,DWORD PTR [ebx]
64006795:	cmp    esi,DWORD PTR [eax-0x8]
64006798:	jg     0x640067aa
6400679a:	mov    DWORD PTR [eax-0xc],esi
6400679d:	mov    edx,DWORD PTR [ebx]
6400679f:	mov    WORD PTR [edx+esi*2],0x0
640067a5:	pop    edi
640067a6:	mov    eax,ebx
640067a8:	pop    esi
640067a9:	ret    
640067aa:	push   0x80070057
640067af:	call   0x64001040
640067b4:	int3   
640067b5:	int3   
640067b6:	int3   
640067b7:	int3   
640067b8:	int3   
640067b9:	int3   
640067ba:	int3   
640067bb:	int3   
640067bc:	int3   
640067bd:	int3   
640067be:	int3   
640067bf:	int3   
640067c0:	mov    ecx,DWORD PTR [ebx]
640067c2:	mov    eax,ecx
640067c4:	cmp    WORD PTR [eax],0x7b
640067c8:	jne    0x640067d9
640067ca:	lea    ebx,[ebx+0x0]
640067d0:	add    eax,0x2
640067d3:	cmp    WORD PTR [eax],0x7b
640067d7:	je     0x640067d0
640067d9:	cmp    eax,ecx
640067db:	push   esi
640067dc:	je     0x64006838
640067de:	sub    eax,ecx
640067e0:	sar    eax,1
640067e2:	push   edi
640067e3:	mov    edx,0x1
640067e8:	sub    edx,DWORD PTR [ecx-0x4]
640067eb:	mov    edi,eax
640067ed:	mov    eax,DWORD PTR [ecx-0xc]
640067f0:	mov    ecx,DWORD PTR [ecx-0x8]
640067f3:	sub    ecx,eax
640067f5:	or     edx,ecx
640067f7:	jge    0x64006801
640067f9:	push   eax
640067fa:	mov    ecx,ebx
640067fc:	call   0x64001e00
64006801:	mov    eax,DWORD PTR [ebx]
64006803:	mov    esi,DWORD PTR [eax-0xc]
64006806:	sub    esi,edi
64006808:	lea    ecx,[esi+esi*1+0x2]
6400680c:	push   ecx
6400680d:	lea    edx,[eax+edi*2]
64006810:	push   edx
64006811:	push   ecx
64006812:	push   eax
64006813:	call   0x64011f53
64006818:	push   eax
64006819:	call   0x64001e90
6400681e:	add    esp,0x14
64006821:	test   esi,esi
64006823:	pop    edi
64006824:	jl     0x6400683c
64006826:	mov    eax,DWORD PTR [ebx]
64006828:	cmp    esi,DWORD PTR [eax-0x8]
6400682b:	jg     0x6400683c
6400682d:	mov    DWORD PTR [eax-0xc],esi
64006830:	mov    eax,DWORD PTR [ebx]
64006832:	mov    WORD PTR [eax+esi*2],0x0
64006838:	mov    eax,ebx
6400683a:	pop    esi
6400683b:	ret    
6400683c:	push   0x80070057
64006841:	call   0x64001040
64006846:	int3   
64006847:	int3   
64006848:	int3   
64006849:	int3   
6400684a:	int3   
6400684b:	int3   
6400684c:	int3   
6400684d:	int3   
6400684e:	int3   
6400684f:	int3   
64006850:	push   esi
64006851:	mov    esi,DWORD PTR [esp+0x8]
64006855:	test   esi,esi
64006857:	jne    0x64006866
64006859:	xor    eax,eax
6400685b:	push   eax
6400685c:	push   esi
6400685d:	call   0x640029f0
64006862:	pop    esi
64006863:	ret    0x4
64006866:	mov    eax,esi
64006868:	push   edi
64006869:	lea    edi,[eax+0x2]
6400686c:	lea    esp,[esp+0x0]
64006870:	mov    dx,WORD PTR [eax]
64006873:	add    eax,0x2
64006876:	test   dx,dx
64006879:	jne    0x64006870
6400687b:	sub    eax,edi
6400687d:	pop    edi
6400687e:	sar    eax,1
64006880:	push   eax
64006881:	push   esi
64006882:	call   0x640029f0
64006887:	pop    esi
64006888:	ret    0x4
6400688b:	int3   
6400688c:	int3   
6400688d:	int3   
6400688e:	int3   
6400688f:	int3   
64006890:	push   ebp
64006891:	mov    ebp,esp
64006893:	and    esp,0xfffffff8
64006896:	push   0xffffffff
64006898:	push   0x64022761
6400689d:	mov    eax,fs:0x0
640068a3:	push   eax
640068a4:	sub    esp,0xd0
640068aa:	mov    eax,ds:0x6402c09c
640068af:	xor    eax,esp
640068b1:	mov    DWORD PTR [esp+0xc8],eax
640068b8:	push   ebx
640068b9:	push   esi
640068ba:	push   edi
640068bb:	mov    eax,ds:0x6402c09c
640068c0:	xor    eax,esp
640068c2:	push   eax
640068c3:	lea    eax,[esp+0xe0]
640068ca:	mov    fs:0x0,eax
640068d0:	mov    eax,ds:0x64030290
640068d5:	mov    esi,DWORD PTR [ebp+0x8]
640068d8:	xor    ebx,ebx
640068da:	cmp    eax,ebx
640068dc:	mov    DWORD PTR [esp+0x28],esi
640068e0:	jne    0x640068f0
640068e2:	push   ebx
640068e3:	push   ebx
640068e4:	push   ebx
640068e5:	call   DWORD PTR ds:0x64024060
640068eb:	mov    ds:0x64030290,eax
640068f0:	push   0xffffffff
640068f2:	push   eax
640068f3:	call   DWORD PTR ds:0x640240b4
640068f9:	test   eax,eax
640068fb:	je     0x64006904
640068fd:	mov    eax,esi
640068ff:	jmp    0x64006b4f
64006904:	mov    eax,DWORD PTR [ebp+0xc]
64006907:	push   eax
64006908:	mov    edi,0xf
6400690d:	push   esi
6400690e:	lea    ecx,[esp+0xa8]
64006915:	mov    DWORD PTR [esp+0xc0],edi
6400691c:	mov    DWORD PTR [esp+0xbc],ebx
64006923:	mov    BYTE PTR [esp+0xac],bl
6400692a:	call   0x64001860
6400692f:	lea    ecx,[esp+0xa0]
64006936:	push   ecx
64006937:	lea    edx,[esp+0x18]
6400693b:	push   edx
6400693c:	mov    DWORD PTR [esp+0xf0],ebx
64006943:	call   0x64007260
64006948:	mov    ecx,eax
6400694a:	call   0x64007b60
6400694f:	call   0x64007260
64006954:	mov    esi,DWORD PTR [esp+0x14]
64006958:	cmp    esi,ebx
6400695a:	mov    ecx,DWORD PTR [eax+0x4]
6400695d:	mov    DWORD PTR [esp+0x20],ecx
64006961:	je     0x64006967
64006963:	cmp    esi,eax
64006965:	je     0x6400696c
64006967:	call   0x640120d8
6400696c:	mov    edx,DWORD PTR [esp+0x20]
64006970:	cmp    DWORD PTR [esp+0x18],edx
64006974:	jne    0x64006a78
6400697a:	sub    esp,0x1c
6400697d:	mov    ecx,esp
6400697f:	mov    DWORD PTR [esp+0x48],esp
64006983:	push   0xffffffff
64006985:	push   ebx
64006986:	lea    eax,[esp+0xc4]
6400698d:	mov    DWORD PTR [ecx+0x18],edi
64006990:	mov    DWORD PTR [ecx+0x14],ebx
64006993:	push   eax
64006994:	mov    BYTE PTR [ecx+0x4],bl
64006997:	call   0x64001780
6400699c:	lea    ecx,[esp+0xd8]
640069a3:	push   ecx
640069a4:	call   0x640072f0
640069a9:	add    esp,0x4
640069ac:	mov    ecx,esp
640069ae:	mov    BYTE PTR [esp+0x104],0x1
640069b6:	mov    DWORD PTR [esp+0x48],esp
640069ba:	push   0xffffffff
640069bc:	push   ebx
640069bd:	lea    edx,[esp+0xe0]
640069c4:	mov    DWORD PTR [ecx+0x18],edi
640069c7:	mov    DWORD PTR [ecx+0x14],ebx
640069ca:	push   edx
640069cb:	mov    BYTE PTR [ecx+0x4],bl
640069ce:	call   0x64001780
640069d3:	sub    esp,0x1c
640069d6:	mov    ecx,esp
640069d8:	mov    BYTE PTR [esp+0x120],0x2
640069e0:	mov    DWORD PTR [esp+0x54],esp
640069e4:	push   0xffffffff
640069e6:	push   ebx
640069e7:	lea    eax,[esp+0xe0]
640069ee:	mov    DWORD PTR [ecx+0x18],edi
640069f1:	mov    DWORD PTR [ecx+0x14],ebx
640069f4:	push   eax
640069f5:	mov    BYTE PTR [ecx+0x4],bl
640069f8:	call   0x64001780
640069fd:	lea    ecx,[esp+0xa0]
64006a04:	push   ecx
64006a05:	mov    BYTE PTR [esp+0x124],0x1
64006a0d:	call   0x64009d80
64006a12:	add    esp,0x3c
64006a15:	push   eax
64006a16:	lea    ecx,[esp+0x34]
64006a1a:	mov    BYTE PTR [esp+0xec],0x3
64006a22:	call   0x64009e20
64006a27:	lea    edx,[esp+0x30]
64006a2b:	push   edx
64006a2c:	lea    eax,[esp+0x20]
64006a30:	push   eax
64006a31:	mov    BYTE PTR [esp+0xf0],0x4
64006a39:	call   0x64007260
64006a3e:	mov    ecx,eax
64006a40:	call   0x640079d0
64006a45:	lea    ecx,[esp+0x30]
64006a49:	call   0x6400f680
64006a4e:	lea    ecx,[esp+0x68]
64006a52:	call   0x6400f680
64006a57:	mov    BYTE PTR [esp+0xe8],bl
64006a5e:	cmp    DWORD PTR [esp+0xd4],0x10
64006a66:	jb     0x64006a78
64006a68:	mov    ecx,DWORD PTR [esp+0xc0]
64006a6f:	push   ecx
64006a70:	call   0x64011d22
64006a75:	add    esp,0x4
64006a78:	mov    edx,DWORD PTR [ebp+0x10]
64006a7b:	movzx  eax,BYTE PTR [edx]
64006a7e:	cmp    eax,0x100
64006a83:	jge    0x64006aa7
64006a85:	lea    ecx,[esp+0xa0]
64006a8c:	push   ecx
64006a8d:	lea    edx,[esp+0x20]
64006a91:	push   edx
64006a92:	call   0x64007260
64006a97:	mov    ecx,eax
64006a99:	call   0x64007b60
64006a9e:	mov    esi,DWORD PTR [eax]
64006aa0:	mov    eax,DWORD PTR [eax+0x4]
64006aa3:	mov    DWORD PTR [esp+0x18],eax
64006aa7:	call   0x64007260
64006aac:	cmp    esi,ebx
64006aae:	mov    ecx,DWORD PTR [eax+0x4]
64006ab1:	mov    DWORD PTR [esp+0x20],ecx
64006ab5:	je     0x64006abb
64006ab7:	cmp    esi,eax
64006ab9:	je     0x64006ac0
64006abb:	call   0x640120d8
64006ac0:	mov    edi,DWORD PTR [esp+0x18]
64006ac4:	cmp    edi,DWORD PTR [esp+0x20]
64006ac8:	je     0x64006aed
64006aca:	cmp    esi,ebx
64006acc:	jne    0x64006ad3
64006ace:	call   0x640120d8
64006ad3:	cmp    edi,DWORD PTR [esi+0x4]
64006ad6:	jne    0x64006add
64006ad8:	call   0x640120d8
64006add:	cmp    DWORD PTR [edi+0x40],0x10
64006ae1:	jb     0x64006ae8
64006ae3:	mov    edi,DWORD PTR [edi+0x2c]
64006ae6:	jmp    0x64006af1
64006ae8:	add    edi,0x2c
64006aeb:	jmp    0x64006af1
64006aed:	mov    edi,DWORD PTR [esp+0x28]
64006af1:	cmp    DWORD PTR ds:0x6402e060,ebx
64006af7:	jne    0x64006b15
64006af9:	push   0x64026528
64006afe:	push   0x64026538
64006b03:	call   DWORD PTR ds:0x64024074
64006b09:	push   eax
64006b0a:	call   DWORD PTR ds:0x64024014
64006b10:	mov    ds:0x6402e060,eax
64006b15:	mov    eax,ds:0x64030290
64006b1a:	cmp    eax,ebx
64006b1c:	jne    0x64006b2c
64006b1e:	push   ebx
64006b1f:	push   ebx
64006b20:	push   ebx
64006b21:	call   DWORD PTR ds:0x64024060
64006b27:	mov    ds:0x64030290,eax
64006b2c:	push   eax
64006b2d:	call   DWORD PTR ds:0x6402e060
64006b33:	cmp    DWORD PTR [esp+0xb8],0x10
64006b3b:	jb     0x64006b4d
64006b3d:	mov    edx,DWORD PTR [esp+0xa4]
64006b44:	push   edx
64006b45:	call   0x64011d22
64006b4a:	add    esp,0x4
64006b4d:	mov    eax,edi
64006b4f:	mov    ecx,DWORD PTR [esp+0xe0]
64006b56:	mov    DWORD PTR fs:0x0,ecx
64006b5d:	pop    ecx
64006b5e:	pop    edi
64006b5f:	pop    esi
64006b60:	pop    ebx
64006b61:	mov    ecx,DWORD PTR [esp+0xc8]
64006b68:	xor    ecx,esp
64006b6a:	call   0x6401257c
64006b6f:	mov    esp,ebp
64006b71:	pop    ebp
64006b72:	ret    
64006b73:	int3   
64006b74:	int3   
64006b75:	int3   
64006b76:	int3   
64006b77:	int3   
64006b78:	int3   
64006b79:	int3   
64006b7a:	int3   
64006b7b:	int3   
64006b7c:	int3   
64006b7d:	int3   
64006b7e:	int3   
64006b7f:	int3   
64006b80:	push   ebp
64006b81:	mov    ebp,esp
64006b83:	and    esp,0xfffffff8
64006b86:	push   0xffffffff
64006b88:	push   0x64022701
64006b8d:	mov    eax,fs:0x0
64006b93:	push   eax
64006b94:	sub    esp,0xd0
64006b9a:	mov    eax,ds:0x6402c09c
64006b9f:	xor    eax,esp
64006ba1:	mov    DWORD PTR [esp+0xc8],eax
64006ba8:	push   ebx
64006ba9:	push   esi
64006baa:	push   edi
64006bab:	mov    eax,ds:0x6402c09c
64006bb0:	xor    eax,esp
64006bb2:	push   eax
64006bb3:	lea    eax,[esp+0xe0]
64006bba:	mov    fs:0x0,eax
64006bc0:	mov    eax,ds:0x64030290
64006bc5:	mov    esi,DWORD PTR [ebp+0x8]
64006bc8:	xor    ebx,ebx
64006bca:	cmp    eax,ebx
64006bcc:	mov    DWORD PTR [esp+0x28],esi
64006bd0:	jne    0x64006be0
64006bd2:	push   ebx
64006bd3:	push   ebx
64006bd4:	push   ebx
64006bd5:	call   DWORD PTR ds:0x64024060
64006bdb:	mov    ds:0x64030290,eax
64006be0:	push   0xffffffff
64006be2:	push   eax
64006be3:	call   DWORD PTR ds:0x640240b4
64006be9:	test   eax,eax
64006beb:	je     0x64006bf4
64006bed:	mov    eax,esi
64006bef:	jmp    0x64006e43
64006bf4:	mov    eax,DWORD PTR [ebp+0xc]
64006bf7:	push   eax
64006bf8:	mov    edi,0x7
64006bfd:	push   esi
64006bfe:	lea    ecx,[esp+0xa8]
64006c05:	mov    DWORD PTR [esp+0xc0],edi
64006c0c:	mov    DWORD PTR [esp+0xbc],ebx
64006c13:	mov    WORD PTR [esp+0xac],bx
64006c1b:	call   0x64008680
64006c20:	lea    ecx,[esp+0xa0]
64006c27:	push   ecx
64006c28:	lea    edx,[esp+0x18]
64006c2c:	push   edx
64006c2d:	mov    DWORD PTR [esp+0xf0],ebx
64006c34:	call   0x640073c0
64006c39:	mov    ecx,eax
64006c3b:	call   0x64007d20
64006c40:	call   0x640073c0
64006c45:	mov    esi,DWORD PTR [esp+0x14]
64006c49:	cmp    esi,ebx
64006c4b:	mov    ecx,DWORD PTR [eax+0x4]
64006c4e:	mov    DWORD PTR [esp+0x20],ecx
64006c52:	je     0x64006c58
64006c54:	cmp    esi,eax
64006c56:	je     0x64006c5d
64006c58:	call   0x640120d8
64006c5d:	mov    edx,DWORD PTR [esp+0x20]
64006c61:	cmp    DWORD PTR [esp+0x18],edx
64006c65:	jne    0x64006d6c
64006c6b:	sub    esp,0x1c
64006c6e:	mov    ecx,esp
64006c70:	mov    DWORD PTR [esp+0x48],esp
64006c74:	push   0xffffffff
64006c76:	push   ebx
64006c77:	lea    eax,[esp+0xc4]
64006c7e:	mov    DWORD PTR [ecx+0x18],edi
64006c81:	mov    DWORD PTR [ecx+0x14],ebx
64006c84:	push   eax
64006c85:	mov    WORD PTR [ecx+0x4],bx
64006c89:	call   0x64008590
64006c8e:	lea    ecx,[esp+0xd8]
64006c95:	push   ecx
64006c96:	call   0x64007450
64006c9b:	add    esp,0x4
64006c9e:	mov    ecx,esp
64006ca0:	mov    BYTE PTR [esp+0x104],0x1
64006ca8:	mov    DWORD PTR [esp+0x48],esp
64006cac:	push   0xffffffff
64006cae:	push   ebx
64006caf:	lea    edx,[esp+0xe0]
64006cb6:	mov    DWORD PTR [ecx+0x18],edi
64006cb9:	mov    DWORD PTR [ecx+0x14],ebx
64006cbc:	push   edx
64006cbd:	mov    WORD PTR [ecx+0x4],bx
64006cc1:	call   0x64008590
64006cc6:	sub    esp,0x1c
64006cc9:	mov    ecx,esp
64006ccb:	mov    BYTE PTR [esp+0x120],0x2
64006cd3:	mov    DWORD PTR [esp+0x54],esp
64006cd7:	push   0xffffffff
64006cd9:	push   ebx
64006cda:	lea    eax,[esp+0xe0]
64006ce1:	mov    DWORD PTR [ecx+0x18],edi
64006ce4:	mov    DWORD PTR [ecx+0x14],ebx
64006ce7:	push   eax
64006ce8:	mov    WORD PTR [ecx+0x4],bx
64006cec:	call   0x64008590
64006cf1:	lea    ecx,[esp+0xa0]
64006cf8:	push   ecx
64006cf9:	mov    BYTE PTR [esp+0x124],0x1
64006d01:	call   0x64009ea0
64006d06:	add    esp,0x3c
64006d09:	push   eax
64006d0a:	lea    ecx,[esp+0x34]
64006d0e:	mov    BYTE PTR [esp+0xec],0x3
64006d16:	call   0x64009f40
64006d1b:	lea    edx,[esp+0x30]
64006d1f:	push   edx
64006d20:	lea    eax,[esp+0x20]
64006d24:	push   eax
64006d25:	mov    BYTE PTR [esp+0xf0],0x4
64006d2d:	call   0x640073c0
64006d32:	mov    ecx,eax
64006d34:	call   0x64007c10
64006d39:	lea    ecx,[esp+0x30]
64006d3d:	call   0x64007130
64006d42:	lea    ecx,[esp+0x68]
64006d46:	call   0x64007130
64006d4b:	mov    BYTE PTR [esp+0xe8],bl
64006d52:	cmp    DWORD PTR [esp+0xd4],0x8
64006d5a:	jb     0x64006d6c
64006d5c:	mov    ecx,DWORD PTR [esp+0xc0]
64006d63:	push   ecx
64006d64:	call   0x64011d22
64006d69:	add    esp,0x4
64006d6c:	mov    edx,DWORD PTR [ebp+0x10]
64006d6f:	movzx  eax,BYTE PTR [edx]
64006d72:	cmp    eax,0x100
64006d77:	jge    0x64006d9b
64006d79:	lea    ecx,[esp+0xa0]
64006d80:	push   ecx
64006d81:	lea    edx,[esp+0x20]
64006d85:	push   edx
64006d86:	call   0x640073c0
64006d8b:	mov    ecx,eax
64006d8d:	call   0x64007d20
64006d92:	mov    esi,DWORD PTR [eax]
64006d94:	mov    eax,DWORD PTR [eax+0x4]
64006d97:	mov    DWORD PTR [esp+0x18],eax
64006d9b:	call   0x640073c0
64006da0:	cmp    esi,ebx
64006da2:	mov    ecx,DWORD PTR [eax+0x4]
64006da5:	mov    DWORD PTR [esp+0x20],ecx
64006da9:	je     0x64006daf
64006dab:	cmp    esi,eax
64006dad:	je     0x64006db4
64006daf:	call   0x640120d8
64006db4:	mov    edi,DWORD PTR [esp+0x18]
64006db8:	cmp    edi,DWORD PTR [esp+0x20]
64006dbc:	je     0x64006de1
64006dbe:	cmp    esi,ebx
64006dc0:	jne    0x64006dc7
64006dc2:	call   0x640120d8
64006dc7:	cmp    edi,DWORD PTR [esi+0x4]
64006dca:	jne    0x64006dd1
64006dcc:	call   0x640120d8
64006dd1:	cmp    DWORD PTR [edi+0x40],0x8
64006dd5:	jb     0x64006ddc
64006dd7:	mov    edi,DWORD PTR [edi+0x2c]
64006dda:	jmp    0x64006de5
64006ddc:	add    edi,0x2c
64006ddf:	jmp    0x64006de5
64006de1:	mov    edi,DWORD PTR [esp+0x28]
64006de5:	cmp    DWORD PTR ds:0x6402e060,ebx
64006deb:	jne    0x64006e09
64006ded:	push   0x64026528
64006df2:	push   0x64026538
64006df7:	call   DWORD PTR ds:0x64024074
64006dfd:	push   eax
64006dfe:	call   DWORD PTR ds:0x64024014
64006e04:	mov    ds:0x6402e060,eax
64006e09:	mov    eax,ds:0x64030290
64006e0e:	cmp    eax,ebx
64006e10:	jne    0x64006e20
64006e12:	push   ebx
64006e13:	push   ebx
64006e14:	push   ebx
64006e15:	call   DWORD PTR ds:0x64024060
64006e1b:	mov    ds:0x64030290,eax
64006e20:	push   eax
64006e21:	call   DWORD PTR ds:0x6402e060
64006e27:	cmp    DWORD PTR [esp+0xb8],0x8
64006e2f:	jb     0x64006e41
64006e31:	mov    edx,DWORD PTR [esp+0xa4]
64006e38:	push   edx
64006e39:	call   0x64011d22
64006e3e:	add    esp,0x4
64006e41:	mov    eax,edi
64006e43:	mov    ecx,DWORD PTR [esp+0xe0]
64006e4a:	mov    DWORD PTR fs:0x0,ecx
64006e51:	pop    ecx
64006e52:	pop    edi
64006e53:	pop    esi
64006e54:	pop    ebx
64006e55:	mov    ecx,DWORD PTR [esp+0xc8]
64006e5c:	xor    ecx,esp
64006e5e:	call   0x6401257c
64006e63:	mov    esp,ebp
64006e65:	pop    ebp
64006e66:	ret    
64006e67:	int3   
64006e68:	int3   
64006e69:	int3   
64006e6a:	int3   
64006e6b:	int3   
64006e6c:	int3   
64006e6d:	int3   
64006e6e:	int3   
64006e6f:	int3   
64006e70:	push   ebp
64006e71:	mov    ebp,esp
64006e73:	push   0xffffffff
64006e75:	push   0x64022990
64006e7a:	mov    eax,fs:0x0
64006e80:	push   eax
64006e81:	push   ecx
64006e82:	push   ebx
64006e83:	push   esi
64006e84:	push   edi
64006e85:	mov    eax,ds:0x6402c09c
64006e8a:	xor    eax,ebp
64006e8c:	push   eax
64006e8d:	lea    eax,[ebp-0xc]
64006e90:	mov    fs:0x0,eax
64006e96:	mov    DWORD PTR [ebp-0x10],esp
64006e99:	mov    esi,DWORD PTR [ebp+0x8]
64006e9c:	call   0x64008250
64006ea1:	mov    DWORD PTR [esi+0x4],eax
64006ea4:	mov    BYTE PTR [eax+0x29],0x1
64006ea8:	mov    eax,DWORD PTR [esi+0x4]
64006eab:	mov    DWORD PTR [eax+0x4],eax
64006eae:	mov    eax,DWORD PTR [esi+0x4]
64006eb1:	mov    DWORD PTR [eax],eax
64006eb3:	mov    eax,DWORD PTR [esi+0x4]
64006eb6:	mov    DWORD PTR [eax+0x8],eax
64006eb9:	mov    ebx,0x640303d0
64006ebe:	mov    eax,esi
64006ec0:	mov    DWORD PTR [esi+0x8],0x0
64006ec7:	mov    DWORD PTR [ebp-0x4],0x0
64006ece:	call   0x64007630
64006ed3:	mov    eax,esi
64006ed5:	mov    ecx,DWORD PTR [ebp-0xc]
64006ed8:	mov    DWORD PTR fs:0x0,ecx
64006edf:	pop    ecx
64006ee0:	pop    edi
64006ee1:	pop    esi
64006ee2:	pop    ebx
64006ee3:	mov    esp,ebp
64006ee5:	pop    ebp
64006ee6:	ret    0x4
64006ee9:	mov    eax,DWORD PTR [ebp+0x8]
64006eec:	call   0x64007920
64006ef1:	push   0x0
64006ef3:	push   0x0
64006ef5:	call   0x6401216b
64006efa:	int3   
64006efb:	int3   
64006efc:	int3   
64006efd:	int3   
64006efe:	int3   
64006eff:	int3   
64006f00:	push   ebp
64006f01:	mov    ebp,esp
64006f03:	and    esp,0xfffffff8
64006f06:	sub    esp,0x8
64006f09:	push   ebx
64006f0a:	push   edi
64006f0b:	mov    ebx,eax
64006f0d:	mov    edi,ecx
64006f0f:	cmp    edi,ebx
64006f11:	je     0x64006f2d
64006f13:	mov    eax,DWORD PTR [edi+0x4]
64006f16:	mov    ecx,DWORD PTR [eax]
64006f18:	push   eax
64006f19:	push   edi
64006f1a:	push   ecx
64006f1b:	push   edi
64006f1c:	lea    eax,[esp+0x18]
64006f20:	push   eax
64006f21:	call   0x64007520
64006f26:	mov    eax,edi
64006f28:	call   0x64007630
64006f2d:	mov    eax,edi
64006f2f:	pop    edi
64006f30:	pop    ebx
64006f31:	mov    esp,ebp
64006f33:	pop    ebp
64006f34:	ret    
64006f35:	int3   
64006f36:	int3   
64006f37:	int3   
64006f38:	int3   
64006f39:	int3   
64006f3a:	int3   
64006f3b:	int3   
64006f3c:	int3   
64006f3d:	int3   
64006f3e:	int3   
64006f3f:	int3   
64006f40:	push   ebp
64006f41:	mov    ebp,esp
64006f43:	and    esp,0xfffffff8
64006f46:	sub    esp,0x1c
64006f49:	mov    ecx,DWORD PTR [ebp+0x8]
64006f4c:	mov    eax,DWORD PTR [ecx+0x4]
64006f4f:	push   ebx
64006f50:	push   esi
64006f51:	mov    esi,DWORD PTR [eax+0x4]
64006f54:	cmp    BYTE PTR [esi+0x29],0x0
64006f58:	mov    ebx,eax
64006f5a:	mov    al,0x1
64006f5c:	push   edi
64006f5d:	mov    BYTE PTR [esp+0x10],al
64006f61:	jne    0x64007002
64006f67:	mov    edx,DWORD PTR [ebp+0x10]
64006f6a:	mov    eax,DWORD PTR [edx+0x14]
64006f6d:	mov    ecx,DWORD PTR [edx+0x18]
64006f70:	mov    DWORD PTR [esp+0x18],eax
64006f74:	mov    DWORD PTR [esp+0x14],eax
64006f78:	mov    DWORD PTR [esp+0x1c],ecx
64006f7c:	jmp    0x64006f87
64006f7e:	mov    edi,edi
64006f80:	mov    edx,DWORD PTR [ebp+0x10]
64006f83:	mov    eax,DWORD PTR [esp+0x14]
64006f87:	cmp    DWORD PTR [esi+0x24],0x10
64006f8b:	mov    ebx,DWORD PTR [esi+0x20]
64006f8e:	mov    DWORD PTR [esp+0x20],esi
64006f92:	jb     0x64006f99
64006f94:	mov    ecx,DWORD PTR [esi+0x10]
64006f97:	jmp    0x64006f9c
64006f99:	lea    ecx,[esi+0x10]
64006f9c:	mov    edi,DWORD PTR [esp+0x18]
64006fa0:	cmp    eax,edi
64006fa2:	mov    DWORD PTR [esp+0xc],ecx
64006fa6:	jae    0x64006faa
64006fa8:	mov    edi,eax
64006faa:	cmp    edi,ebx
64006fac:	mov    ecx,edi
64006fae:	jb     0x64006fb2
64006fb0:	mov    ecx,ebx
64006fb2:	cmp    DWORD PTR [esp+0x1c],0x10
64006fb7:	lea    eax,[edx+0x4]
64006fba:	jb     0x64006fbe
64006fbc:	mov    eax,DWORD PTR [eax]
64006fbe:	mov    edx,DWORD PTR [esp+0xc]
64006fc2:	push   ecx
64006fc3:	push   edx
64006fc4:	push   eax
64006fc5:	call   0x64002c80
64006fca:	add    esp,0xc
64006fcd:	test   eax,eax
64006fcf:	jne    0x64006fe3
64006fd1:	cmp    edi,ebx
64006fd3:	jae    0x64006fda
64006fd5:	or     eax,0xffffffff
64006fd8:	jmp    0x64006fe1
64006fda:	xor    eax,eax
64006fdc:	cmp    edi,ebx
64006fde:	setne  al
64006fe1:	test   eax,eax
64006fe3:	setl   al
64006fe6:	test   al,al
64006fe8:	mov    BYTE PTR [esp+0x10],al
64006fec:	je     0x64006ff2
64006fee:	mov    esi,DWORD PTR [esi]
64006ff0:	jmp    0x64006ff5
64006ff2:	mov    esi,DWORD PTR [esi+0x8]
64006ff5:	cmp    BYTE PTR [esi+0x29],0x0
64006ff9:	je     0x64006f80
64006ffb:	mov    ebx,DWORD PTR [esp+0x20]
64006fff:	mov    ecx,DWORD PTR [ebp+0x8]
64007002:	test   al,al
64007004:	mov    esi,ebx
64007006:	mov    DWORD PTR [esp+0x24],esi
6400700a:	mov    DWORD PTR [esp+0x20],ecx
6400700e:	je     0x64007053
64007010:	mov    eax,DWORD PTR [ecx+0x4]
64007013:	cmp    ebx,DWORD PTR [eax]
64007015:	jne    0x64007046
64007017:	mov    edx,DWORD PTR [ebp+0x10]
6400701a:	push   edx
6400701b:	push   0x1
6400701d:	lea    eax,[esp+0x28]
64007021:	push   eax
64007022:	push   ecx
64007023:	mov    ecx,ebx
64007025:	call   0x640076a0
6400702a:	mov    edx,DWORD PTR [eax]
6400702c:	mov    ecx,DWORD PTR [ebp+0xc]
6400702f:	mov    eax,DWORD PTR [eax+0x4]
64007032:	mov    DWORD PTR [ecx+0x4],eax
64007035:	mov    DWORD PTR [ecx],edx
64007037:	mov    BYTE PTR [ecx+0x8],0x1
6400703b:	mov    eax,ecx
6400703d:	pop    edi
6400703e:	pop    esi
6400703f:	pop    ebx
64007040:	mov    esp,ebp
64007042:	pop    ebp
64007043:	ret    0xc
64007046:	lea    esi,[esp+0x20]
6400704a:	call   0x64008b40
6400704f:	mov    esi,DWORD PTR [esp+0x24]
64007053:	mov    edi,DWORD PTR [ebp+0x10]
64007056:	cmp    DWORD PTR [edi+0x18],0x10
6400705a:	mov    edx,DWORD PTR [edi+0x14]
6400705d:	lea    ecx,[esi+0xc]
64007060:	jb     0x64007067
64007062:	mov    eax,DWORD PTR [edi+0x4]
64007065:	jmp    0x6400706a
64007067:	lea    eax,[edi+0x4]
6400706a:	push   edx
6400706b:	mov    edx,DWORD PTR [ecx+0x14]
6400706e:	push   eax
6400706f:	push   edx
64007070:	push   0x0
64007072:	call   0x640071f0
64007077:	test   eax,eax
64007079:	jge    0x640070ad
6400707b:	mov    eax,DWORD PTR [esp+0x10]
6400707f:	mov    edx,DWORD PTR [ebp+0x8]
64007082:	push   edi
64007083:	push   eax
64007084:	lea    ecx,[esp+0x28]
64007088:	push   ecx
64007089:	push   edx
6400708a:	mov    ecx,ebx
6400708c:	call   0x640076a0
64007091:	mov    edx,DWORD PTR [eax]
64007093:	mov    ecx,DWORD PTR [ebp+0xc]
64007096:	mov    eax,DWORD PTR [eax+0x4]
64007099:	mov    DWORD PTR [ecx+0x4],eax
6400709c:	mov    DWORD PTR [ecx],edx
6400709e:	mov    BYTE PTR [ecx+0x8],0x1
640070a2:	mov    eax,ecx
640070a4:	pop    edi
640070a5:	pop    esi
640070a6:	pop    ebx
640070a7:	mov    esp,ebp
640070a9:	pop    ebp
640070aa:	ret    0xc
640070ad:	mov    eax,DWORD PTR [ebp+0xc]
640070b0:	mov    ecx,DWORD PTR [esp+0x20]
640070b4:	pop    edi
640070b5:	mov    DWORD PTR [eax+0x4],esi
640070b8:	pop    esi
640070b9:	mov    DWORD PTR [eax],ecx
640070bb:	mov    BYTE PTR [eax+0x8],0x0
640070bf:	pop    ebx
640070c0:	mov    esp,ebp
640070c2:	pop    ebp
640070c3:	ret    0xc
640070c6:	int3   
640070c7:	int3   
640070c8:	int3   
640070c9:	int3   
640070ca:	int3   
640070cb:	int3   
640070cc:	int3   
640070cd:	int3   
640070ce:	int3   
640070cf:	int3   
640070d0:	push   ebp
640070d1:	mov    ebp,esp
640070d3:	and    esp,0xfffffff8
640070d6:	sub    esp,0x8
640070d9:	push   ebx
640070da:	push   edi
640070db:	mov    ecx,esi
640070dd:	mov    edi,eax
640070df:	call   0x64008aa0
640070e4:	test   esi,esi
640070e6:	mov    ebx,eax
640070e8:	jne    0x640070ef
640070ea:	call   0x640120d8
640070ef:	mov    ecx,edi
640070f1:	mov    eax,esi
640070f3:	call   0x64008a10
640070f8:	test   esi,esi
640070fa:	mov    edi,eax
640070fc:	jne    0x64007103
640070fe:	call   0x640120d8
64007103:	mov    DWORD PTR [esp+0xc],0x0
6400710b:	mov    eax,DWORD PTR [esp+0xc]
6400710f:	push   eax
64007110:	push   ebx
64007111:	push   esi
64007112:	push   edi
64007113:	push   esi
64007114:	lea    ebx,[esp+0x20]
64007118:	call   0x6400a240
6400711d:	mov    eax,DWORD PTR [esp+0x20]
64007121:	add    esp,0x14
64007124:	pop    edi
64007125:	pop    ebx
64007126:	mov    esp,ebp
64007128:	pop    ebp
64007129:	ret    
6400712a:	int3   
6400712b:	int3   
6400712c:	int3   
6400712d:	int3   
6400712e:	int3   
6400712f:	int3   
64007130:	push   esi
64007131:	mov    esi,ecx
64007133:	cmp    DWORD PTR [esi+0x34],0x8
64007137:	push   edi
64007138:	jb     0x64007146
6400713a:	mov    eax,DWORD PTR [esi+0x20]
6400713d:	push   eax
6400713e:	call   0x64011d22
64007143:	add    esp,0x4
64007146:	xor    edi,edi
64007148:	mov    DWORD PTR [esi+0x34],0x7
6400714f:	mov    DWORD PTR [esi+0x30],edi
64007152:	mov    WORD PTR [esi+0x20],di
64007156:	cmp    DWORD PTR [esi+0x18],0x8
6400715a:	jb     0x64007168
6400715c:	mov    ecx,DWORD PTR [esi+0x4]
6400715f:	push   ecx
64007160:	call   0x64011d22
64007165:	add    esp,0x4
64007168:	mov    DWORD PTR [esi+0x14],edi
6400716b:	mov    DWORD PTR [esi+0x18],0x7
64007172:	mov    WORD PTR [esi+0x4],di
64007176:	pop    edi
64007177:	pop    esi
64007178:	ret    
64007179:	int3   
6400717a:	int3   
6400717b:	int3   
6400717c:	int3   
6400717d:	int3   
6400717e:	int3   
6400717f:	int3   
64007180:	mov    ecx,DWORD PTR [eax]
64007182:	push   esi
64007183:	mov    esi,DWORD PTR [edi]
64007185:	lea    eax,[ecx-0x10]
64007188:	sub    esi,0x10
6400718b:	cmp    eax,esi
6400718d:	je     0x640071dd
6400718f:	cmp    DWORD PTR [esi+0xc],0x0
64007193:	push   ebx
64007194:	lea    ebx,[esi+0xc]
64007197:	jl     0x640071cc
64007199:	mov    edx,DWORD PTR [eax]
6400719b:	cmp    edx,DWORD PTR [esi]
6400719d:	jne    0x640071cc
6400719f:	push   ebp
640071a0:	push   eax
640071a1:	call   0x640028b0
640071a6:	mov    ebp,eax
640071a8:	add    esp,0x4
640071ab:	or     eax,0xffffffff
640071ae:	lock xadd DWORD PTR [ebx],eax
640071b2:	dec    eax
640071b3:	test   eax,eax
640071b5:	jg     0x640071c1
640071b7:	mov    ecx,DWORD PTR [esi]
640071b9:	mov    edx,DWORD PTR [ecx]
640071bb:	mov    eax,DWORD PTR [edx+0x4]
640071be:	push   esi
640071bf:	call   eax
640071c1:	add    ebp,0x10
640071c4:	mov    DWORD PTR [edi],ebp
640071c6:	pop    ebp
640071c7:	pop    ebx
640071c8:	mov    eax,edi
640071ca:	pop    esi
640071cb:	ret    
640071cc:	mov    edx,DWORD PTR [ecx-0xc]
640071cf:	push   edx
640071d0:	push   ecx
640071d1:	mov    ecx,edi
640071d3:	call   0x64002af0
640071d8:	pop    ebx
640071d9:	mov    eax,edi
640071db:	pop    esi
640071dc:	ret    
640071dd:	mov    eax,edi
640071df:	pop    esi
640071e0:	ret    
640071e1:	int3   
640071e2:	int3   
640071e3:	int3   
640071e4:	int3   
640071e5:	int3   
640071e6:	int3   
640071e7:	int3   
640071e8:	int3   
640071e9:	int3   
640071ea:	int3   
640071eb:	int3   
640071ec:	int3   
640071ed:	int3   
640071ee:	int3   
640071ef:	int3   
640071f0:	push   ebx
640071f1:	push   ebp
640071f2:	mov    ebp,DWORD PTR [esp+0xc]
640071f6:	push   esi
640071f7:	push   edi
640071f8:	mov    edi,ecx
640071fa:	cmp    DWORD PTR [edi+0x14],ebp
640071fd:	jae    0x64007204
640071ff:	call   0x64011cde
64007204:	mov    eax,DWORD PTR [edi+0x14]
64007207:	mov    esi,DWORD PTR [esp+0x18]
6400720b:	sub    eax,ebp
6400720d:	cmp    eax,esi
6400720f:	jae    0x64007213
64007211:	mov    esi,eax
64007213:	mov    ebx,DWORD PTR [esp+0x20]
64007217:	cmp    esi,ebx
64007219:	mov    eax,esi
6400721b:	jb     0x6400721f
6400721d:	mov    eax,ebx
6400721f:	cmp    DWORD PTR [edi+0x18],0x10
64007223:	jb     0x6400722a
64007225:	mov    edi,DWORD PTR [edi+0x4]
64007228:	jmp    0x6400722d
6400722a:	add    edi,0x4
6400722d:	push   eax
6400722e:	mov    eax,DWORD PTR [esp+0x20]
64007232:	push   eax
64007233:	add    edi,ebp
64007235:	push   edi
64007236:	call   0x64002c80
6400723b:	add    esp,0xc
6400723e:	test   eax,eax
64007240:	jne    0x64007257
64007242:	cmp    esi,ebx
64007244:	jae    0x64007250
64007246:	pop    edi
64007247:	pop    esi
64007248:	pop    ebp
64007249:	or     eax,0xffffffff
6400724c:	pop    ebx
6400724d:	ret    0x10
64007250:	xor    eax,eax
64007252:	cmp    esi,ebx
64007254:	setne  al
64007257:	pop    edi
64007258:	pop    esi
64007259:	pop    ebp
6400725a:	pop    ebx
6400725b:	ret    0x10
6400725e:	int3   
6400725f:	int3   
64007260:	push   0xffffffff
64007262:	push   0x640226ae
64007267:	mov    eax,fs:0x0
6400726d:	push   eax
6400726e:	mov    eax,ds:0x6402c09c
64007273:	xor    eax,esp
64007275:	push   eax
64007276:	lea    eax,[esp+0x4]
6400727a:	mov    fs:0x0,eax
64007280:	test   BYTE PTR ds:0x64030364,0x1
64007287:	jne    0x640072d9
64007289:	or     DWORD PTR ds:0x64030364,0x1
64007290:	mov    ecx,0x64030348
64007295:	mov    DWORD PTR [esp+0xc],0x0
6400729d:	call   0x64009b00
640072a2:	mov    ds:0x6403034c,eax
640072a7:	mov    BYTE PTR [eax+0x45],0x1
640072ab:	mov    eax,ds:0x6403034c
640072b0:	mov    DWORD PTR [eax+0x4],eax
640072b3:	mov    eax,ds:0x6403034c
640072b8:	mov    DWORD PTR [eax],eax
640072ba:	mov    eax,ds:0x6403034c
640072bf:	mov    DWORD PTR [eax+0x8],eax
640072c2:	push   0x64023200
640072c7:	mov    DWORD PTR ds:0x64030350,0x0
640072d1:	call   0x640126af
640072d6:	add    esp,0x4
640072d9:	mov    eax,0x64030348
640072de:	mov    ecx,DWORD PTR [esp+0x4]
640072e2:	mov    DWORD PTR fs:0x0,ecx
640072e9:	pop    ecx
640072ea:	add    esp,0xc
640072ed:	ret    
640072ee:	int3   
640072ef:	int3   
640072f0:	push   0xffffffff
640072f2:	push   0x64022228
640072f7:	mov    eax,fs:0x0
640072fd:	push   eax
640072fe:	push   ecx
640072ff:	push   ebx
64007300:	push   ebp
64007301:	push   esi
64007302:	push   edi
64007303:	mov    eax,ds:0x6402c09c
64007308:	xor    eax,esp
6400730a:	push   eax
6400730b:	lea    eax,[esp+0x18]
6400730f:	mov    fs:0x0,eax
64007315:	mov    esi,DWORD PTR [esp+0x28]
64007319:	xor    eax,eax
6400731b:	mov    DWORD PTR [esp+0x14],eax
6400731f:	mov    DWORD PTR [esp+0x20],eax
64007323:	push   0xffffffff
64007325:	mov    DWORD PTR [esi+0x14],eax
64007328:	mov    DWORD PTR [esi+0x18],0xf
6400732f:	lea    ebp,[esi+0x4]
64007332:	push   eax
64007333:	mov    BYTE PTR [ebp+0x0],al
64007336:	lea    eax,[esp+0x34]
6400733a:	push   eax
6400733b:	mov    ecx,esi
6400733d:	call   0x64001780
64007342:	mov    eax,DWORD PTR [esi+0x14]
64007345:	mov    edi,0x1
6400734a:	cmp    eax,edi
6400734c:	jbe    0x6400738d
6400734e:	cmp    edi,eax
64007350:	jbe    0x64007357
64007352:	call   0x640120d8
64007357:	cmp    DWORD PTR [esi+0x18],0x10
6400735b:	jb     0x64007362
6400735d:	mov    ebx,DWORD PTR [ebp+0x0]
64007360:	jmp    0x64007364
64007362:	mov    ebx,ebp
64007364:	lea    ecx,[edi-0x1]
64007367:	cmp    ecx,DWORD PTR [esi+0x14]
6400736a:	jbe    0x64007371
6400736c:	call   0x640120d8
64007371:	cmp    DWORD PTR [esi+0x18],0x10
64007375:	jb     0x6400737c
64007377:	mov    eax,DWORD PTR [ebp+0x0]
6400737a:	jmp    0x6400737e
6400737c:	mov    eax,ebp
6400737e:	mov    dl,BYTE PTR [eax+edi*1-0x1]
64007382:	xor    BYTE PTR [ebx+edi*1],dl
64007385:	add    edi,0x1
64007388:	cmp    edi,DWORD PTR [esi+0x14]
6400738b:	jb     0x64007357
6400738d:	cmp    DWORD PTR [esp+0x44],0x10
64007392:	jb     0x640073a1
64007394:	mov    eax,DWORD PTR [esp+0x30]
64007398:	push   eax
64007399:	call   0x64011d22
6400739e:	add    esp,0x4
640073a1:	mov    eax,esi
640073a3:	mov    ecx,DWORD PTR [esp+0x18]
640073a7:	mov    DWORD PTR fs:0x0,ecx
640073ae:	pop    ecx
640073af:	pop    edi
640073b0:	pop    esi
640073b1:	pop    ebp
640073b2:	pop    ebx
640073b3:	add    esp,0x10
640073b6:	ret    
640073b7:	int3   
640073b8:	int3   
640073b9:	int3   
640073ba:	int3   
640073bb:	int3   
640073bc:	int3   
640073bd:	int3   
640073be:	int3   
640073bf:	int3   
640073c0:	push   0xffffffff
640073c2:	push   0x6402267e
640073c7:	mov    eax,fs:0x0
640073cd:	push   eax
640073ce:	mov    eax,ds:0x6402c09c
640073d3:	xor    eax,esp
640073d5:	push   eax
640073d6:	lea    eax,[esp+0x4]
640073da:	mov    fs:0x0,eax
640073e0:	test   BYTE PTR ds:0x64030360,0x1
640073e7:	jne    0x64007439
640073e9:	or     DWORD PTR ds:0x64030360,0x1
640073f0:	mov    ecx,0x64030354
640073f5:	mov    DWORD PTR [esp+0xc],0x0
640073fd:	call   0x64009b00
64007402:	mov    ds:0x64030358,eax
64007407:	mov    BYTE PTR [eax+0x45],0x1
6400740b:	mov    eax,ds:0x64030358
64007410:	mov    DWORD PTR [eax+0x4],eax
64007413:	mov    eax,ds:0x64030358
64007418:	mov    DWORD PTR [eax],eax
6400741a:	mov    eax,ds:0x64030358
6400741f:	mov    DWORD PTR [eax+0x8],eax
64007422:	push   0x640231b0
64007427:	mov    DWORD PTR ds:0x6403035c,0x0
64007431:	call   0x640126af
64007436:	add    esp,0x4
64007439:	mov    eax,0x64030354
6400743e:	mov    ecx,DWORD PTR [esp+0x4]
64007442:	mov    DWORD PTR fs:0x0,ecx
64007449:	pop    ecx
6400744a:	add    esp,0xc
6400744d:	ret    
6400744e:	int3   
6400744f:	int3   
64007450:	push   0xffffffff
64007452:	push   0x640221f8
64007457:	mov    eax,fs:0x0
6400745d:	push   eax
6400745e:	push   ecx
6400745f:	push   ebx
64007460:	push   ebp
64007461:	push   esi
64007462:	push   edi
64007463:	mov    eax,ds:0x6402c09c
64007468:	xor    eax,esp
6400746a:	push   eax
6400746b:	lea    eax,[esp+0x18]
6400746f:	mov    fs:0x0,eax
64007475:	mov    esi,DWORD PTR [esp+0x28]
64007479:	xor    eax,eax
6400747b:	mov    DWORD PTR [esp+0x14],eax
6400747f:	mov    DWORD PTR [esp+0x20],eax
64007483:	push   0xffffffff
64007485:	mov    DWORD PTR [esi+0x14],eax
64007488:	mov    DWORD PTR [esi+0x18],0x7
6400748f:	lea    ebp,[esi+0x4]
64007492:	push   eax
64007493:	mov    WORD PTR [ebp+0x0],ax
64007497:	lea    eax,[esp+0x34]
6400749b:	push   eax
6400749c:	mov    ecx,esi
6400749e:	call   0x64008590
640074a3:	mov    eax,DWORD PTR [esi+0x14]
640074a6:	mov    edi,0x1
640074ab:	cmp    eax,edi
640074ad:	jbe    0x640074f0
640074af:	cmp    edi,eax
640074b1:	jbe    0x640074b8
640074b3:	call   0x640120d8
640074b8:	cmp    DWORD PTR [esi+0x18],0x8
640074bc:	jb     0x640074c3
640074be:	mov    ebx,DWORD PTR [ebp+0x0]
640074c1:	jmp    0x640074c5
640074c3:	mov    ebx,ebp
640074c5:	lea    ecx,[edi-0x1]
640074c8:	cmp    ecx,DWORD PTR [esi+0x14]
640074cb:	jbe    0x640074d2
640074cd:	call   0x640120d8
640074d2:	cmp    DWORD PTR [esi+0x18],0x8
640074d6:	jb     0x640074dd
640074d8:	mov    eax,DWORD PTR [ebp+0x0]
640074db:	jmp    0x640074df
640074dd:	mov    eax,ebp
640074df:	mov    dx,WORD PTR [eax+edi*2-0x2]
640074e4:	xor    WORD PTR [ebx+edi*2],dx
640074e8:	add    edi,0x1
640074eb:	cmp    edi,DWORD PTR [esi+0x14]
640074ee:	jb     0x640074b8
640074f0:	cmp    DWORD PTR [esp+0x44],0x8
640074f5:	jb     0x64007504
640074f7:	mov    eax,DWORD PTR [esp+0x30]
640074fb:	push   eax
640074fc:	call   0x64011d22
64007501:	add    esp,0x4
64007504:	mov    eax,esi
64007506:	mov    ecx,DWORD PTR [esp+0x18]
6400750a:	mov    DWORD PTR fs:0x0,ecx
64007511:	pop    ecx
64007512:	pop    edi
64007513:	pop    esi
64007514:	pop    ebp
64007515:	pop    ebx
64007516:	add    esp,0x10
64007519:	ret    
6400751a:	int3   
6400751b:	int3   
6400751c:	int3   
6400751d:	int3   
6400751e:	int3   
6400751f:	int3   
64007520:	mov    eax,DWORD PTR [edi+0x4]
64007523:	sub    esp,0xc
64007526:	push   ebx
64007527:	mov    ebx,DWORD PTR [eax]
64007529:	push   ebp
6400752a:	mov    ebp,DWORD PTR [esp+0x1c]
6400752e:	test   ebp,ebp
64007530:	push   esi
64007531:	je     0x64007537
64007533:	cmp    ebp,edi
64007535:	je     0x6400753c
64007537:	call   0x640120d8
6400753c:	mov    esi,DWORD PTR [esp+0x24]
64007540:	cmp    esi,ebx
64007542:	jne    0x640075a0
64007544:	mov    eax,DWORD PTR [esp+0x28]
64007548:	test   eax,eax
6400754a:	mov    ebx,DWORD PTR [edi+0x4]
6400754d:	je     0x64007553
6400754f:	cmp    eax,edi
64007551:	je     0x64007558
64007553:	call   0x640120d8
64007558:	cmp    DWORD PTR [esp+0x2c],ebx
6400755c:	jne    0x640075a0
6400755e:	mov    ecx,DWORD PTR [edi+0x4]
64007561:	mov    edx,DWORD PTR [ecx+0x4]
64007564:	push   edx
64007565:	mov    ecx,edi
64007567:	call   0x640089b0
6400756c:	mov    eax,DWORD PTR [edi+0x4]
6400756f:	mov    DWORD PTR [eax+0x4],eax
64007572:	mov    eax,DWORD PTR [edi+0x4]
64007575:	mov    DWORD PTR [edi+0x8],0x0
6400757c:	mov    DWORD PTR [eax],eax
6400757e:	mov    eax,DWORD PTR [edi+0x4]
64007581:	mov    DWORD PTR [eax+0x8],eax
64007584:	mov    eax,DWORD PTR [edi+0x4]
64007587:	mov    ecx,DWORD PTR [eax]
64007589:	mov    eax,DWORD PTR [esp+0x1c]
6400758d:	mov    DWORD PTR [eax+0x4],ecx
64007590:	mov    DWORD PTR [eax],edi
64007592:	pop    esi
64007593:	pop    ebp
64007594:	pop    ebx
64007595:	add    esp,0xc
64007598:	ret    0x14
6400759b:	jmp    0x640075a0
6400759d:	lea    ecx,[ecx+0x0]
640075a0:	test   ebp,ebp
640075a2:	je     0x640075aa
640075a4:	cmp    ebp,DWORD PTR [esp+0x28]
640075a8:	je     0x640075af
640075aa:	call   0x640120d8
640075af:	cmp    esi,DWORD PTR [esp+0x2c]
640075b3:	je     0x6400761c
640075b5:	test   ebp,ebp
640075b7:	mov    DWORD PTR [esp+0x24],esi
640075bb:	jne    0x640075c2
640075bd:	call   0x640120d8
640075c2:	cmp    BYTE PTR [esi+0x29],0x0
640075c6:	je     0x640075cf
640075c8:	call   0x640120d8
640075cd:	jmp    0x64007609
640075cf:	mov    eax,DWORD PTR [esi+0x8]
640075d2:	cmp    BYTE PTR [eax+0x29],0x0
640075d6:	jne    0x640075ee
640075d8:	mov    esi,eax
640075da:	mov    eax,DWORD PTR [esi]
640075dc:	cmp    BYTE PTR [eax+0x29],0x0
640075e0:	jne    0x64007609
640075e2:	mov    esi,eax
640075e4:	mov    eax,DWORD PTR [esi]
640075e6:	cmp    BYTE PTR [eax+0x29],0x0
640075ea:	je     0x640075e2
640075ec:	jmp    0x64007609
640075ee:	mov    eax,DWORD PTR [esi+0x4]
640075f1:	cmp    BYTE PTR [eax+0x29],0x0
640075f5:	jne    0x64007607
640075f7:	cmp    esi,DWORD PTR [eax+0x8]
640075fa:	jne    0x64007607
640075fc:	mov    esi,eax
640075fe:	mov    eax,DWORD PTR [eax+0x4]
64007601:	cmp    BYTE PTR [eax+0x29],0x0
64007605:	je     0x640075f7
64007607:	mov    esi,eax
64007609:	mov    edx,DWORD PTR [esp+0x24]
6400760d:	push   edx
6400760e:	push   ebp
6400760f:	lea    eax,[esp+0x18]
64007613:	push   eax
64007614:	push   edi
64007615:	call   0x64007dc0
6400761a:	jmp    0x640075a0
6400761c:	mov    eax,DWORD PTR [esp+0x1c]
64007620:	mov    DWORD PTR [eax+0x4],esi
64007623:	pop    esi
64007624:	mov    DWORD PTR [eax],ebp
64007626:	pop    ebp
64007627:	pop    ebx
64007628:	add    esp,0xc
6400762b:	ret    0x14
6400762e:	int3   
6400762f:	int3   
64007630:	push   esi
64007631:	mov    esi,eax
64007633:	mov    eax,DWORD PTR [ebx+0x4]
64007636:	push   edi
64007637:	mov    edi,DWORD PTR [esi+0x4]
6400763a:	add    eax,0x4
6400763d:	mov    eax,DWORD PTR [eax]
6400763f:	push   edi
64007640:	push   eax
64007641:	mov    ecx,esi
64007643:	call   0x640080d0
64007648:	mov    DWORD PTR [edi+0x4],eax
6400764b:	mov    ecx,DWORD PTR [ebx+0x8]
6400764e:	mov    edx,DWORD PTR [esi+0x4]
64007651:	mov    DWORD PTR [esi+0x8],ecx
64007654:	mov    eax,DWORD PTR [edx+0x4]
64007657:	cmp    BYTE PTR [eax+0x29],0x0
6400765b:	jne    0x64007691
6400765d:	mov    ecx,DWORD PTR [eax]
6400765f:	cmp    BYTE PTR [ecx+0x29],0x0
64007663:	jne    0x6400766f
64007665:	mov    eax,ecx
64007667:	mov    ecx,DWORD PTR [eax]
64007669:	cmp    BYTE PTR [ecx+0x29],0x0
6400766d:	je     0x64007665
6400766f:	mov    DWORD PTR [edx],eax
64007671:	mov    esi,DWORD PTR [esi+0x4]
64007674:	mov    ecx,DWORD PTR [esi+0x4]
64007677:	mov    eax,DWORD PTR [ecx+0x8]
6400767a:	cmp    BYTE PTR [eax+0x29],0x0
6400767e:	jne    0x6400768b
64007680:	mov    ecx,eax
64007682:	mov    eax,DWORD PTR [ecx+0x8]
64007685:	cmp    BYTE PTR [eax+0x29],0x0
64007689:	je     0x64007680
6400768b:	pop    edi
6400768c:	mov    DWORD PTR [esi+0x8],ecx
6400768f:	pop    esi
64007690:	ret    
64007691:	mov    DWORD PTR [edx],edx
64007693:	mov    esi,DWORD PTR [esi+0x4]
64007696:	pop    edi
64007697:	mov    DWORD PTR [esi+0x8],esi
6400769a:	pop    esi
6400769b:	ret    
6400769c:	int3   
6400769d:	int3   
6400769e:	int3   
6400769f:	int3   
640076a0:	push   0xffffffff
640076a2:	push   0x64022648
640076a7:	mov    eax,fs:0x0
640076ad:	push   eax
640076ae:	sub    esp,0x44
640076b1:	push   ebx
640076b2:	push   ebp
640076b3:	push   esi
640076b4:	push   edi
640076b5:	mov    eax,ds:0x6402c09c
640076ba:	xor    eax,esp
640076bc:	push   eax
640076bd:	lea    eax,[esp+0x58]
640076c1:	mov    fs:0x0,eax
640076c7:	mov    esi,ecx
640076c9:	mov    ebp,DWORD PTR [esp+0x68]
640076cd:	xor    ebx,ebx
640076cf:	cmp    DWORD PTR [ebp+0x8],0x9249248
640076d6:	jb     0x64007721
640076d8:	push   0x13
640076da:	push   0x64027f2c
640076df:	lea    ecx,[esp+0x1c]
640076e3:	mov    DWORD PTR [esp+0x34],0xf
640076eb:	mov    DWORD PTR [esp+0x30],ebx
640076ef:	mov    BYTE PTR [esp+0x20],bl
640076f3:	call   0x64001860
640076f8:	lea    eax,[esp+0x14]
640076fc:	push   eax
640076fd:	lea    ecx,[esp+0x34]
64007701:	mov    DWORD PTR [esp+0x64],ebx
64007705:	call   0x64002d10
6400770a:	push   0x64029d68
6400770f:	lea    ecx,[esp+0x34]
64007713:	push   ecx
64007714:	mov    DWORD PTR [esp+0x38],0x64024274
6400771c:	call   0x6401216b
64007721:	mov    edx,DWORD PTR [esp+0x74]
64007725:	mov    eax,DWORD PTR [ebp+0x4]
64007728:	push   ebx
64007729:	push   edx
6400772a:	push   eax
6400772b:	push   esi
6400772c:	push   eax
6400772d:	call   0x64008290
64007732:	mov    ecx,DWORD PTR [ebp+0x4]
64007735:	mov    edx,eax
64007737:	mov    eax,0x1
6400773c:	add    DWORD PTR [ebp+0x8],eax
6400773f:	cmp    esi,ecx
64007741:	mov    DWORD PTR [esp+0x68],edx
64007745:	jne    0x64007754
64007747:	mov    DWORD PTR [ecx+0x4],edx
6400774a:	mov    ecx,DWORD PTR [ebp+0x4]
6400774d:	mov    DWORD PTR [ecx],edx
6400774f:	mov    ecx,DWORD PTR [ebp+0x4]
64007752:	jmp    0x64007772
64007754:	cmp    BYTE PTR [esp+0x70],bl
64007758:	je     0x64007767
6400775a:	mov    DWORD PTR [esi],edx
6400775c:	mov    ecx,DWORD PTR [ebp+0x4]
6400775f:	cmp    esi,DWORD PTR [ecx]
64007761:	jne    0x64007775
64007763:	mov    DWORD PTR [ecx],edx
64007765:	jmp    0x64007775
64007767:	mov    DWORD PTR [esi+0x8],edx
6400776a:	mov    ecx,DWORD PTR [ebp+0x4]
6400776d:	cmp    esi,DWORD PTR [ecx+0x8]
64007770:	jne    0x64007775
64007772:	mov    DWORD PTR [ecx+0x8],edx
64007775:	mov    esi,DWORD PTR [edx+0x4]
64007778:	cmp    BYTE PTR [esi+0x28],bl
6400777b:	lea    ecx,[edx+0x4]
6400777e:	jne    0x640078f6
64007784:	mov    esi,DWORD PTR [ecx]
64007786:	mov    edi,DWORD PTR [esi+0x4]
64007789:	cmp    esi,DWORD PTR [edi]
6400778b:	jne    0x64007837
64007791:	mov    edi,DWORD PTR [edi+0x8]
64007794:	cmp    BYTE PTR [edi+0x28],bl
64007797:	je     0x6400783e
6400779d:	cmp    edx,DWORD PTR [esi+0x8]
640077a0:	jne    0x640077dd
640077a2:	mov    edx,esi
640077a4:	mov    esi,DWORD PTR [edx+0x8]
640077a7:	mov    ecx,DWORD PTR [esi]
640077a9:	mov    DWORD PTR [edx+0x8],ecx
640077ac:	mov    ecx,DWORD PTR [esi]
640077ae:	cmp    BYTE PTR [ecx+0x29],bl
640077b1:	jne    0x640077b6
640077b3:	mov    DWORD PTR [ecx+0x4],edx
640077b6:	mov    edi,DWORD PTR [edx+0x4]
640077b9:	lea    ecx,[edx+0x4]
640077bc:	mov    DWORD PTR [esi+0x4],edi
640077bf:	mov    edi,DWORD PTR [ebp+0x4]
640077c2:	cmp    edx,DWORD PTR [edi+0x4]
640077c5:	jne    0x640077cc
640077c7:	mov    DWORD PTR [edi+0x4],esi
640077ca:	jmp    0x640077d9
640077cc:	mov    edi,DWORD PTR [ecx]
640077ce:	cmp    edx,DWORD PTR [edi]
640077d0:	jne    0x640077d6
640077d2:	mov    DWORD PTR [edi],esi
640077d4:	jmp    0x640077d9
640077d6:	mov    DWORD PTR [edi+0x8],esi
640077d9:	mov    DWORD PTR [esi],edx
640077db:	mov    DWORD PTR [ecx],esi
640077dd:	mov    esi,DWORD PTR [ecx]
640077df:	mov    BYTE PTR [esi+0x28],al
640077e2:	mov    esi,DWORD PTR [ecx]
640077e4:	mov    esi,DWORD PTR [esi+0x4]
640077e7:	mov    BYTE PTR [esi+0x28],bl
640077ea:	mov    ecx,DWORD PTR [ecx]
640077ec:	mov    ecx,DWORD PTR [ecx+0x4]
640077ef:	mov    esi,DWORD PTR [ecx]
640077f1:	mov    edi,DWORD PTR [esi+0x8]
640077f4:	mov    DWORD PTR [ecx],edi
640077f6:	mov    edi,DWORD PTR [esi+0x8]
640077f9:	cmp    BYTE PTR [edi+0x29],bl
640077fc:	jne    0x64007801
640077fe:	mov    DWORD PTR [edi+0x4],ecx
64007801:	mov    edi,DWORD PTR [ecx+0x4]
64007804:	mov    DWORD PTR [esi+0x4],edi
64007807:	mov    edi,DWORD PTR [ebp+0x4]
6400780a:	cmp    ecx,DWORD PTR [edi+0x4]
6400780d:	jne    0x6400781a
6400780f:	mov    DWORD PTR [edi+0x4],esi
64007812:	mov    DWORD PTR [esi+0x8],ecx
64007815:	jmp    0x640078e0
6400781a:	mov    edi,DWORD PTR [ecx+0x4]
6400781d:	cmp    ecx,DWORD PTR [edi+0x8]
64007820:	jne    0x6400782d
64007822:	mov    DWORD PTR [edi+0x8],esi
64007825:	mov    DWORD PTR [esi+0x8],ecx
64007828:	jmp    0x640078e0
6400782d:	mov    DWORD PTR [edi],esi
6400782f:	mov    DWORD PTR [esi+0x8],ecx
64007832:	jmp    0x640078e0
64007837:	mov    edi,DWORD PTR [edi]
64007839:	cmp    BYTE PTR [edi+0x28],bl
6400783c:	jne    0x64007858
6400783e:	mov    edx,esi
64007840:	mov    BYTE PTR [edx+0x28],al
64007843:	mov    BYTE PTR [edi+0x28],al
64007846:	mov    edx,DWORD PTR [ecx]
64007848:	mov    edx,DWORD PTR [edx+0x4]
6400784b:	mov    BYTE PTR [edx+0x28],bl
6400784e:	mov    ecx,DWORD PTR [ecx]
64007850:	mov    edx,DWORD PTR [ecx+0x4]
64007853:	jmp    0x640078e3
64007858:	cmp    edx,DWORD PTR [esi]
6400785a:	jne    0x64007899
6400785c:	mov    edx,esi
6400785e:	mov    esi,DWORD PTR [edx]
64007860:	mov    ecx,DWORD PTR [esi+0x8]
64007863:	mov    DWORD PTR [edx],ecx
64007865:	mov    ecx,DWORD PTR [esi+0x8]
64007868:	cmp    BYTE PTR [ecx+0x29],bl
6400786b:	jne    0x64007870
6400786d:	mov    DWORD PTR [ecx+0x4],edx
64007870:	mov    edi,DWORD PTR [edx+0x4]
64007873:	lea    ecx,[edx+0x4]
64007876:	mov    DWORD PTR [esi+0x4],edi
64007879:	mov    edi,DWORD PTR [ebp+0x4]
6400787c:	cmp    edx,DWORD PTR [edi+0x4]
6400787f:	jne    0x64007886
64007881:	mov    DWORD PTR [edi+0x4],esi
64007884:	jmp    0x64007894
64007886:	mov    edi,DWORD PTR [ecx]
64007888:	cmp    edx,DWORD PTR [edi+0x8]
6400788b:	jne    0x64007892
6400788d:	mov    DWORD PTR [edi+0x8],esi
64007890:	jmp    0x64007894
64007892:	mov    DWORD PTR [edi],esi
64007894:	mov    DWORD PTR [esi+0x8],edx
64007897:	mov    DWORD PTR [ecx],esi
64007899:	mov    esi,DWORD PTR [ecx]
6400789b:	mov    BYTE PTR [esi+0x28],al
6400789e:	mov    esi,DWORD PTR [ecx]
640078a0:	mov    esi,DWORD PTR [esi+0x4]
640078a3:	mov    BYTE PTR [esi+0x28],bl
640078a6:	mov    ecx,DWORD PTR [ecx]
640078a8:	mov    ecx,DWORD PTR [ecx+0x4]
640078ab:	mov    esi,DWORD PTR [ecx+0x8]
640078ae:	mov    edi,DWORD PTR [esi]
640078b0:	mov    DWORD PTR [ecx+0x8],edi
640078b3:	mov    edi,DWORD PTR [esi]
640078b5:	cmp    BYTE PTR [edi+0x29],bl
640078b8:	jne    0x640078bd
640078ba:	mov    DWORD PTR [edi+0x4],ecx
640078bd:	mov    edi,DWORD PTR [ecx+0x4]
640078c0:	mov    DWORD PTR [esi+0x4],edi
640078c3:	mov    edi,DWORD PTR [ebp+0x4]
640078c6:	cmp    ecx,DWORD PTR [edi+0x4]
640078c9:	jne    0x640078d0
640078cb:	mov    DWORD PTR [edi+0x4],esi
640078ce:	jmp    0x640078de
640078d0:	mov    edi,DWORD PTR [ecx+0x4]
640078d3:	cmp    ecx,DWORD PTR [edi]
640078d5:	jne    0x640078db
640078d7:	mov    DWORD PTR [edi],esi
640078d9:	jmp    0x640078de
640078db:	mov    DWORD PTR [edi+0x8],esi
640078de:	mov    DWORD PTR [esi],ecx
640078e0:	mov    DWORD PTR [ecx+0x4],esi
640078e3:	mov    esi,DWORD PTR [edx+0x4]
640078e6:	cmp    BYTE PTR [esi+0x28],bl
640078e9:	lea    ecx,[edx+0x4]
640078ec:	je     0x64007784
640078f2:	mov    edx,DWORD PTR [esp+0x68]
640078f6:	mov    ecx,DWORD PTR [ebp+0x4]
640078f9:	mov    ecx,DWORD PTR [ecx+0x4]
640078fc:	mov    BYTE PTR [ecx+0x28],al
640078ff:	mov    ecx,DWORD PTR [esp+0x6c]
64007903:	mov    DWORD PTR [ecx+0x4],edx
64007906:	mov    DWORD PTR [ecx],ebp
64007908:	mov    eax,ecx
6400790a:	mov    ecx,DWORD PTR [esp+0x58]
6400790e:	mov    DWORD PTR fs:0x0,ecx
64007915:	pop    ecx
64007916:	pop    edi
64007917:	pop    esi
64007918:	pop    ebp
64007919:	pop    ebx
6400791a:	add    esp,0x50
6400791d:	ret    0x10
64007920:	push   ebp
64007921:	mov    ebp,esp
64007923:	and    esp,0xfffffff8
64007926:	sub    esp,0xc
64007929:	push   edi
6400792a:	mov    edi,eax
6400792c:	mov    eax,DWORD PTR [edi+0x4]
6400792f:	mov    ecx,DWORD PTR [eax]
64007931:	push   eax
64007932:	push   edi
64007933:	push   ecx
64007934:	push   edi
64007935:	lea    eax,[esp+0x18]
64007939:	push   eax
6400793a:	call   0x64007520
6400793f:	mov    ecx,DWORD PTR [edi+0x4]
64007942:	push   ecx
64007943:	call   0x64011d22
64007948:	add    esp,0x4
6400794b:	xor    eax,eax
6400794d:	mov    DWORD PTR [edi+0x4],eax
64007950:	mov    DWORD PTR [edi+0x8],eax
64007953:	pop    edi
64007954:	mov    esp,ebp
64007956:	pop    ebp
64007957:	ret    
64007958:	int3   
64007959:	int3   
6400795a:	int3   
6400795b:	int3   
6400795c:	int3   
6400795d:	int3   
6400795e:	int3   
6400795f:	int3   
64007960:	cmp    DWORD PTR [esi],0x0
64007963:	jne    0x6400796a
64007965:	call   0x640120d8
6400796a:	mov    eax,DWORD PTR [esi+0x4]
6400796d:	cmp    BYTE PTR [eax+0x29],0x0
64007971:	je     0x64007978
64007973:	jmp    0x640120d8
64007978:	mov    ecx,DWORD PTR [eax+0x8]
6400797b:	cmp    BYTE PTR [ecx+0x29],0x0
6400797f:	jne    0x6400799e
64007981:	mov    eax,DWORD PTR [ecx]
64007983:	cmp    BYTE PTR [eax+0x29],0x0
64007987:	jne    0x6400799a
64007989:	lea    esp,[esp+0x0]
64007990:	mov    ecx,eax
64007992:	mov    eax,DWORD PTR [ecx]
64007994:	cmp    BYTE PTR [eax+0x29],0x0
64007998:	je     0x64007990
6400799a:	mov    DWORD PTR [esi+0x4],ecx
6400799d:	ret    
6400799e:	mov    eax,DWORD PTR [eax+0x4]
640079a1:	cmp    BYTE PTR [eax+0x29],0x0
640079a5:	jne    0x640079bd
640079a7:	mov    ecx,DWORD PTR [esi+0x4]
640079aa:	cmp    ecx,DWORD PTR [eax+0x8]
640079ad:	jne    0x640079bd
640079af:	mov    DWORD PTR [esi+0x4],eax
640079b2:	mov    edx,eax
640079b4:	mov    eax,DWORD PTR [edx+0x4]
640079b7:	cmp    BYTE PTR [eax+0x29],0x0
640079bb:	je     0x640079a7
640079bd:	mov    DWORD PTR [esi+0x4],eax
640079c0:	ret    
640079c1:	int3   
640079c2:	int3   
640079c3:	int3   
640079c4:	int3   
640079c5:	int3   
640079c6:	int3   
640079c7:	int3   
640079c8:	int3   
640079c9:	int3   
640079ca:	int3   
640079cb:	int3   
640079cc:	int3   
640079cd:	int3   
640079ce:	int3   
640079cf:	int3   
640079d0:	push   ebp
640079d1:	mov    ebp,esp
640079d3:	and    esp,0xfffffff8
640079d6:	sub    esp,0x24
640079d9:	push   ebx
640079da:	push   esi
640079db:	push   edi
640079dc:	mov    edi,ecx
640079de:	mov    eax,DWORD PTR [edi+0x4]
640079e1:	mov    esi,DWORD PTR [eax+0x4]
640079e4:	cmp    BYTE PTR [esi+0x45],0x0
640079e8:	mov    ecx,eax
640079ea:	mov    al,0x1
640079ec:	mov    DWORD PTR [esp+0x28],edi
640079f0:	mov    DWORD PTR [esp+0x10],ecx
640079f4:	mov    BYTE PTR [esp+0x18],al
640079f8:	jne    0x64007a98
640079fe:	mov    edx,DWORD PTR [ebp+0xc]
64007a01:	mov    eax,DWORD PTR [edx+0x14]
64007a04:	mov    ecx,DWORD PTR [edx+0x18]
64007a07:	mov    DWORD PTR [esp+0x20],eax
64007a0b:	mov    DWORD PTR [esp+0x1c],eax
64007a0f:	mov    DWORD PTR [esp+0x24],ecx
64007a13:	jmp    0x64007a1c
64007a15:	mov    edx,DWORD PTR [ebp+0xc]
64007a18:	mov    eax,DWORD PTR [esp+0x1c]
64007a1c:	cmp    DWORD PTR [esi+0x24],0x10
64007a20:	mov    ebx,DWORD PTR [esi+0x20]
64007a23:	mov    DWORD PTR [esp+0x10],esi
64007a27:	jb     0x64007a2e
64007a29:	mov    ecx,DWORD PTR [esi+0x10]
64007a2c:	jmp    0x64007a31
64007a2e:	lea    ecx,[esi+0x10]
64007a31:	mov    edi,DWORD PTR [esp+0x20]
64007a35:	cmp    eax,edi
64007a37:	mov    DWORD PTR [esp+0x14],ecx
64007a3b:	jae    0x64007a3f
64007a3d:	mov    edi,eax
64007a3f:	cmp    edi,ebx
64007a41:	mov    ecx,edi
64007a43:	jb     0x64007a47
64007a45:	mov    ecx,ebx
64007a47:	cmp    DWORD PTR [esp+0x24],0x10
64007a4c:	lea    eax,[edx+0x4]
64007a4f:	jb     0x64007a53
64007a51:	mov    eax,DWORD PTR [eax]
64007a53:	mov    edx,DWORD PTR [esp+0x14]
64007a57:	push   ecx
64007a58:	push   edx
64007a59:	push   eax
64007a5a:	call   0x64002c80
64007a5f:	add    esp,0xc
64007a62:	test   eax,eax
64007a64:	jne    0x64007a78
64007a66:	cmp    edi,ebx
64007a68:	jae    0x64007a6f
64007a6a:	or     eax,0xffffffff
64007a6d:	jmp    0x64007a76
64007a6f:	xor    eax,eax
64007a71:	cmp    edi,ebx
64007a73:	setne  al
64007a76:	test   eax,eax
64007a78:	setl   al
64007a7b:	test   al,al
64007a7d:	mov    BYTE PTR [esp+0x18],al
64007a81:	je     0x64007a87
64007a83:	mov    esi,DWORD PTR [esi]
64007a85:	jmp    0x64007a8a
64007a87:	mov    esi,DWORD PTR [esi+0x8]
64007a8a:	cmp    BYTE PTR [esi+0x45],0x0
64007a8e:	je     0x64007a15
64007a90:	mov    edi,DWORD PTR [esp+0x28]
64007a94:	mov    ecx,DWORD PTR [esp+0x10]
64007a98:	test   al,al
64007a9a:	mov    esi,ecx
64007a9c:	mov    DWORD PTR [esp+0x2c],esi
64007aa0:	mov    DWORD PTR [esp+0x28],edi
64007aa4:	je     0x64007ae9
64007aa6:	mov    eax,DWORD PTR [edi+0x4]
64007aa9:	cmp    ecx,DWORD PTR [eax]
64007aab:	jne    0x64007adc
64007aad:	mov    edx,DWORD PTR [ebp+0xc]
64007ab0:	push   edx
64007ab1:	push   ecx
64007ab2:	push   0x1
64007ab4:	lea    eax,[esp+0x34]
64007ab8:	push   eax
64007ab9:	mov    ecx,edi
64007abb:	call   0x64008340
64007ac0:	mov    ecx,eax
64007ac2:	mov    edx,DWORD PTR [ecx]
64007ac4:	mov    eax,DWORD PTR [ebp+0x8]
64007ac7:	mov    ecx,DWORD PTR [ecx+0x4]
64007aca:	mov    DWORD PTR [eax+0x4],ecx
64007acd:	mov    BYTE PTR [eax+0x8],0x1
64007ad1:	mov    DWORD PTR [eax],edx
64007ad3:	pop    edi
64007ad4:	pop    esi
64007ad5:	pop    ebx
64007ad6:	mov    esp,ebp
64007ad8:	pop    ebp
64007ad9:	ret    0x8
64007adc:	lea    ecx,[esp+0x28]
64007ae0:	call   0x640092b0
64007ae5:	mov    esi,DWORD PTR [esp+0x2c]
64007ae9:	mov    ebx,DWORD PTR [ebp+0xc]
64007aec:	cmp    DWORD PTR [ebx+0x18],0x10
64007af0:	mov    edx,DWORD PTR [ebx+0x14]
64007af3:	lea    ecx,[esi+0xc]
64007af6:	jb     0x64007afd
64007af8:	mov    eax,DWORD PTR [ebx+0x4]
64007afb:	jmp    0x64007b00
64007afd:	lea    eax,[ebx+0x4]
64007b00:	push   edx
64007b01:	mov    edx,DWORD PTR [ecx+0x14]
64007b04:	push   eax
64007b05:	push   edx
64007b06:	push   0x0
64007b08:	call   0x640071f0
64007b0d:	test   eax,eax
64007b0f:	jge    0x64007b44
64007b11:	mov    eax,DWORD PTR [esp+0x10]
64007b15:	mov    ecx,DWORD PTR [esp+0x18]
64007b19:	push   ebx
64007b1a:	push   eax
64007b1b:	push   ecx
64007b1c:	lea    edx,[esp+0x34]
64007b20:	push   edx
64007b21:	mov    ecx,edi
64007b23:	call   0x64008340
64007b28:	mov    ecx,eax
64007b2a:	mov    edx,DWORD PTR [ecx]
64007b2c:	mov    eax,DWORD PTR [ebp+0x8]
64007b2f:	mov    ecx,DWORD PTR [ecx+0x4]
64007b32:	mov    DWORD PTR [eax+0x4],ecx
64007b35:	mov    BYTE PTR [eax+0x8],0x1
64007b39:	mov    DWORD PTR [eax],edx
64007b3b:	pop    edi
64007b3c:	pop    esi
64007b3d:	pop    ebx
64007b3e:	mov    esp,ebp
64007b40:	pop    ebp
64007b41:	ret    0x8
64007b44:	mov    eax,DWORD PTR [ebp+0x8]
64007b47:	mov    edx,DWORD PTR [esp+0x28]
64007b4b:	pop    edi
64007b4c:	mov    DWORD PTR [eax+0x4],esi
64007b4f:	pop    esi
64007b50:	mov    BYTE PTR [eax+0x8],0x0
64007b54:	mov    DWORD PTR [eax],edx
64007b56:	pop    ebx
64007b57:	mov    esp,ebp
64007b59:	pop    ebp
64007b5a:	ret    0x8
64007b5d:	int3   
64007b5e:	int3   
64007b5f:	int3   
64007b60:	sub    esp,0x18
64007b63:	push   ebx
64007b64:	mov    ebx,DWORD PTR [esp+0x24]
64007b68:	push   esi
64007b69:	push   edi
64007b6a:	push   ebx
64007b6b:	mov    esi,ecx
64007b6d:	call   0x64008bc0
64007b72:	test   esi,esi
64007b74:	mov    edi,eax
64007b76:	mov    DWORD PTR [esp+0x14],edi
64007b7a:	jne    0x64007b81
64007b7c:	call   0x640120d8
64007b81:	cmp    edi,DWORD PTR [esi+0x4]
64007b84:	mov    DWORD PTR [esp+0x10],esi
64007b88:	je     0x64007bb4
64007b8a:	cmp    DWORD PTR [edi+0x24],0x10
64007b8e:	mov    eax,DWORD PTR [edi+0x20]
64007b91:	jb     0x64007b98
64007b93:	mov    edi,DWORD PTR [edi+0x10]
64007b96:	jmp    0x64007b9b
64007b98:	add    edi,0x10
64007b9b:	push   eax
64007b9c:	mov    eax,DWORD PTR [ebx+0x14]
64007b9f:	push   edi
64007ba0:	push   eax
64007ba1:	push   0x0
64007ba3:	mov    ecx,ebx
64007ba5:	call   0x640071f0
64007baa:	test   eax,eax
64007bac:	jl     0x64007bb4
64007bae:	lea    ecx,[esp+0x10]
64007bb2:	jmp    0x64007bc3
64007bb4:	mov    ecx,DWORD PTR [esi+0x4]
64007bb7:	mov    DWORD PTR [esp+0x1c],ecx
64007bbb:	mov    DWORD PTR [esp+0x18],esi
64007bbf:	lea    ecx,[esp+0x18]
64007bc3:	mov    edx,DWORD PTR [ecx]
64007bc5:	mov    eax,DWORD PTR [esp+0x28]
64007bc9:	mov    ecx,DWORD PTR [ecx+0x4]
64007bcc:	pop    edi
64007bcd:	pop    esi
64007bce:	mov    DWORD PTR [eax],edx
64007bd0:	mov    DWORD PTR [eax+0x4],ecx
64007bd3:	pop    ebx
64007bd4:	add    esp,0x18
64007bd7:	ret    0x8
64007bda:	int3   
64007bdb:	int3   
64007bdc:	int3   
64007bdd:	int3   
64007bde:	int3   
64007bdf:	int3   
64007be0:	push   esi
64007be1:	mov    esi,ecx
64007be3:	cmp    DWORD PTR [esi+0x18],0x8
64007be7:	jb     0x64007bf5
64007be9:	mov    eax,DWORD PTR [esi+0x4]
64007bec:	push   eax
64007bed:	call   0x64011d22
64007bf2:	add    esp,0x4
64007bf5:	xor    eax,eax
64007bf7:	mov    DWORD PTR [esi+0x18],0x7
64007bfe:	mov    DWORD PTR [esi+0x14],eax
64007c01:	mov    WORD PTR [esi+0x4],ax
64007c05:	pop    esi
64007c06:	ret    
64007c07:	int3   
64007c08:	int3   
64007c09:	int3   
64007c0a:	int3   
64007c0b:	int3   
64007c0c:	int3   
64007c0d:	int3   
64007c0e:	int3   
64007c0f:	int3   
64007c10:	push   ebp
64007c11:	mov    ebp,esp
64007c13:	and    esp,0xfffffff8
64007c16:	sub    esp,0x14
64007c19:	mov    eax,DWORD PTR [ecx+0x4]
64007c1c:	push   ebx
64007c1d:	push   esi
64007c1e:	mov    esi,DWORD PTR [eax+0x4]
64007c21:	cmp    BYTE PTR [esi+0x45],0x0
64007c25:	mov    ebx,eax
64007c27:	mov    al,0x1
64007c29:	push   edi
64007c2a:	mov    edi,DWORD PTR [ebp+0xc]
64007c2d:	mov    DWORD PTR [esp+0x14],ecx
64007c31:	mov    BYTE PTR [esp+0x10],al
64007c35:	jne    0x64007c77
64007c37:	cmp    DWORD PTR [esi+0x24],0x8
64007c3b:	mov    ecx,DWORD PTR [esi+0x20]
64007c3e:	mov    ebx,esi
64007c40:	jb     0x64007c47
64007c42:	mov    eax,DWORD PTR [esi+0x10]
64007c45:	jmp    0x64007c4a
64007c47:	lea    eax,[esi+0x10]
64007c4a:	push   ecx
64007c4b:	push   eax
64007c4c:	mov    eax,DWORD PTR [edi+0x14]
64007c4f:	push   eax
64007c50:	push   0x0
64007c52:	mov    ecx,edi
64007c54:	call   0x6400a0c0
64007c59:	test   eax,eax
64007c5b:	setl   al
64007c5e:	test   al,al
64007c60:	mov    BYTE PTR [esp+0x10],al
64007c64:	je     0x64007c6a
64007c66:	mov    esi,DWORD PTR [esi]
64007c68:	jmp    0x64007c6d
64007c6a:	mov    esi,DWORD PTR [esi+0x8]
64007c6d:	cmp    BYTE PTR [esi+0x45],0x0
64007c71:	je     0x64007c37
64007c73:	mov    ecx,DWORD PTR [esp+0x14]
64007c77:	test   al,al
64007c79:	mov    esi,ebx
64007c7b:	mov    DWORD PTR [esp+0x1c],esi
64007c7f:	mov    DWORD PTR [esp+0x18],ecx
64007c83:	je     0x64007cc3
64007c85:	mov    edx,DWORD PTR [ecx+0x4]
64007c88:	cmp    ebx,DWORD PTR [edx]
64007c8a:	jne    0x64007cb6
64007c8c:	push   edi
64007c8d:	push   ebx
64007c8e:	push   0x1
64007c90:	lea    eax,[esp+0x24]
64007c94:	push   eax
64007c95:	call   0x64008760
64007c9a:	mov    ecx,eax
64007c9c:	mov    edx,DWORD PTR [ecx]
64007c9e:	mov    eax,DWORD PTR [ebp+0x8]
64007ca1:	mov    ecx,DWORD PTR [ecx+0x4]
64007ca4:	mov    DWORD PTR [eax+0x4],ecx
64007ca7:	mov    BYTE PTR [eax+0x8],0x1
64007cab:	mov    DWORD PTR [eax],edx
64007cad:	pop    edi
64007cae:	pop    esi
64007caf:	pop    ebx
64007cb0:	mov    esp,ebp
64007cb2:	pop    ebp
64007cb3:	ret    0x8
64007cb6:	lea    ecx,[esp+0x18]
64007cba:	call   0x640092b0
64007cbf:	mov    esi,DWORD PTR [esp+0x1c]
64007cc3:	cmp    DWORD PTR [edi+0x18],0x8
64007cc7:	mov    edx,DWORD PTR [edi+0x14]
64007cca:	lea    ecx,[esi+0xc]
64007ccd:	jb     0x64007cd4
64007ccf:	mov    eax,DWORD PTR [edi+0x4]
64007cd2:	jmp    0x64007cd7
64007cd4:	lea    eax,[edi+0x4]
64007cd7:	push   edx
64007cd8:	mov    edx,DWORD PTR [ecx+0x14]
64007cdb:	push   eax
64007cdc:	push   edx
64007cdd:	push   0x0
64007cdf:	call   0x6400a0c0
64007ce4:	test   eax,eax
64007ce6:	jge    0x64007cfa
64007ce8:	mov    eax,DWORD PTR [esp+0x10]
64007cec:	push   edi
64007ced:	push   ebx
64007cee:	lea    ecx,[esp+0x20]
64007cf2:	push   eax
64007cf3:	push   ecx
64007cf4:	mov    ecx,DWORD PTR [esp+0x24]
64007cf8:	jmp    0x64007c95
64007cfa:	mov    eax,DWORD PTR [ebp+0x8]
64007cfd:	mov    edx,DWORD PTR [esp+0x18]
64007d01:	pop    edi
64007d02:	mov    DWORD PTR [eax+0x4],esi
64007d05:	pop    esi
64007d06:	mov    BYTE PTR [eax+0x8],0x0
64007d0a:	mov    DWORD PTR [eax],edx
64007d0c:	pop    ebx
64007d0d:	mov    esp,ebp
64007d0f:	pop    ebp
64007d10:	ret    0x8
64007d13:	int3   
64007d14:	int3   
64007d15:	int3   
64007d16:	int3   
64007d17:	int3   
64007d18:	int3   
64007d19:	int3   
64007d1a:	int3   
64007d1b:	int3   
64007d1c:	int3   
64007d1d:	int3   
64007d1e:	int3   
64007d1f:	int3   
64007d20:	sub    esp,0x18
64007d23:	push   ebx
64007d24:	mov    ebx,DWORD PTR [esp+0x24]
64007d28:	push   esi
64007d29:	push   edi
64007d2a:	push   ebx
64007d2b:	mov    esi,ecx
64007d2d:	call   0x64008e40
64007d32:	test   esi,esi
64007d34:	mov    edi,eax
64007d36:	mov    DWORD PTR [esp+0x14],edi
64007d3a:	jne    0x64007d41
64007d3c:	call   0x640120d8
64007d41:	cmp    edi,DWORD PTR [esi+0x4]
64007d44:	mov    DWORD PTR [esp+0x10],esi
64007d48:	je     0x64007d74
64007d4a:	cmp    DWORD PTR [edi+0x24],0x8
64007d4e:	mov    eax,DWORD PTR [edi+0x20]
64007d51:	jb     0x64007d58
64007d53:	mov    edi,DWORD PTR [edi+0x10]
64007d56:	jmp    0x64007d5b
64007d58:	add    edi,0x10
64007d5b:	push   eax
64007d5c:	mov    eax,DWORD PTR [ebx+0x14]
64007d5f:	push   edi
64007d60:	push   eax
64007d61:	push   0x0
64007d63:	mov    ecx,ebx
64007d65:	call   0x6400a0c0
64007d6a:	test   eax,eax
64007d6c:	jl     0x64007d74
64007d6e:	lea    ecx,[esp+0x10]
64007d72:	jmp    0x64007d83
64007d74:	mov    ecx,DWORD PTR [esi+0x4]
64007d77:	mov    DWORD PTR [esp+0x1c],ecx
64007d7b:	mov    DWORD PTR [esp+0x18],esi
64007d7f:	lea    ecx,[esp+0x18]
64007d83:	mov    edx,DWORD PTR [ecx]
64007d85:	mov    eax,DWORD PTR [esp+0x28]
64007d89:	mov    ecx,DWORD PTR [ecx+0x4]
64007d8c:	pop    edi
64007d8d:	pop    esi
64007d8e:	mov    DWORD PTR [eax],edx
64007d90:	mov    DWORD PTR [eax+0x4],ecx
64007d93:	pop    ebx
64007d94:	add    esp,0x18
64007d97:	ret    0x8
64007d9a:	int3   
64007d9b:	int3   
64007d9c:	int3   
64007d9d:	int3   
64007d9e:	int3   
64007d9f:	int3   
64007da0:	mov    eax,DWORD PTR [esp+0x4]
64007da4:	push   esi
64007da5:	push   eax
64007da6:	mov    esi,ecx
64007da8:	call   0x64002e30
64007dad:	mov    DWORD PTR [esi],0x64024274
64007db3:	mov    eax,esi
64007db5:	pop    esi
64007db6:	ret    0x4
64007db9:	int3   
64007dba:	int3   
64007dbb:	int3   
64007dbc:	int3   
64007dbd:	int3   
64007dbe:	int3   
64007dbf:	int3   
64007dc0:	push   0xffffffff
64007dc2:	push   0x64022618
64007dc7:	mov    eax,fs:0x0
64007dcd:	push   eax
64007dce:	sub    esp,0x44
64007dd1:	push   ebx
64007dd2:	push   ebp
64007dd3:	push   esi
64007dd4:	push   edi
64007dd5:	mov    eax,ds:0x6402c09c
64007dda:	xor    eax,esp
64007ddc:	push   eax
64007ddd:	lea    eax,[esp+0x58]
64007de1:	mov    fs:0x0,eax
64007de7:	mov    eax,DWORD PTR [esp+0x74]
64007deb:	cmp    BYTE PTR [eax+0x29],0x0
64007def:	je     0x64007e3d
64007df1:	push   0x1b
64007df3:	xor    esi,esi
64007df5:	push   0x64027f40
64007dfa:	lea    ecx,[esp+0x1c]
64007dfe:	mov    DWORD PTR [esp+0x34],0xf
64007e06:	mov    DWORD PTR [esp+0x30],esi
64007e0a:	mov    BYTE PTR [esp+0x20],0x0
64007e0f:	call   0x64001860
64007e14:	lea    eax,[esp+0x14]
64007e18:	push   eax
64007e19:	lea    ecx,[esp+0x34]
64007e1d:	mov    DWORD PTR [esp+0x64],esi
64007e21:	call   0x64002d10
64007e26:	push   0x64029d2c
64007e2b:	lea    ecx,[esp+0x34]
64007e2f:	push   ecx
64007e30:	mov    DWORD PTR [esp+0x38],0x64024280
64007e38:	call   0x6401216b
64007e3d:	lea    esi,[esp+0x70]
64007e41:	mov    ebp,eax
64007e43:	call   0x64007960
64007e48:	mov    eax,DWORD PTR [ebp+0x0]
64007e4b:	cmp    BYTE PTR [eax+0x29],0x0
64007e4f:	je     0x64007e56
64007e51:	mov    edi,DWORD PTR [ebp+0x8]
64007e54:	jmp    0x64007e6e
64007e56:	mov    edx,DWORD PTR [ebp+0x8]
64007e59:	cmp    BYTE PTR [edx+0x29],0x0
64007e5d:	je     0x64007e63
64007e5f:	mov    edi,eax
64007e61:	jmp    0x64007e6e
64007e63:	mov    ecx,DWORD PTR [esp+0x74]
64007e67:	cmp    ecx,ebp
64007e69:	mov    edi,DWORD PTR [ecx+0x8]
64007e6c:	jne    0x64007ee2
64007e6e:	cmp    BYTE PTR [edi+0x29],0x0
64007e72:	mov    esi,DWORD PTR [ebp+0x4]
64007e75:	jne    0x64007e7a
64007e77:	mov    DWORD PTR [edi+0x4],esi
64007e7a:	mov    ecx,DWORD PTR [esp+0x68]
64007e7e:	mov    eax,DWORD PTR [ecx+0x4]
64007e81:	cmp    DWORD PTR [eax+0x4],ebp
64007e84:	jne    0x64007e8b
64007e86:	mov    DWORD PTR [eax+0x4],edi
64007e89:	jmp    0x64007e96
64007e8b:	cmp    DWORD PTR [esi],ebp
64007e8d:	jne    0x64007e93
64007e8f:	mov    DWORD PTR [esi],edi
64007e91:	jmp    0x64007e96
64007e93:	mov    DWORD PTR [esi+0x8],edi
64007e96:	mov    edx,DWORD PTR [ecx+0x4]
64007e99:	cmp    DWORD PTR [edx],ebp
64007e9b:	jne    0x64007ebd
64007e9d:	cmp    BYTE PTR [edi+0x29],0x0
64007ea1:	je     0x64007ea7
64007ea3:	mov    ecx,esi
64007ea5:	jmp    0x64007ebb
64007ea7:	mov    eax,DWORD PTR [edi]
64007ea9:	cmp    BYTE PTR [eax+0x29],0x0
64007ead:	mov    ecx,edi
64007eaf:	jne    0x64007ebb
64007eb1:	mov    ecx,eax
64007eb3:	mov    eax,DWORD PTR [ecx]
64007eb5:	cmp    BYTE PTR [eax+0x29],0x0
64007eb9:	je     0x64007eb1
64007ebb:	mov    DWORD PTR [edx],ecx
64007ebd:	mov    eax,DWORD PTR [esp+0x68]
64007ec1:	mov    ebx,DWORD PTR [eax+0x4]
64007ec4:	cmp    DWORD PTR [ebx+0x8],ebp
64007ec7:	jne    0x64007f3e
64007ec9:	cmp    BYTE PTR [edi+0x29],0x0
64007ecd:	je     0x64007ed6
64007ecf:	mov    eax,esi
64007ed1:	mov    DWORD PTR [ebx+0x8],eax
64007ed4:	jmp    0x64007f3e
64007ed6:	mov    eax,edi
64007ed8:	call   0x640081e0
64007edd:	mov    DWORD PTR [ebx+0x8],eax
64007ee0:	jmp    0x64007f3e
64007ee2:	mov    DWORD PTR [eax+0x4],ecx
64007ee5:	mov    edx,DWORD PTR [ebp+0x0]
64007ee8:	mov    DWORD PTR [ecx],edx
64007eea:	cmp    ecx,DWORD PTR [ebp+0x8]
64007eed:	jne    0x64007ef3
64007eef:	mov    esi,ecx
64007ef1:	jmp    0x64007f0d
64007ef3:	cmp    BYTE PTR [edi+0x29],0x0
64007ef7:	mov    esi,DWORD PTR [ecx+0x4]
64007efa:	jne    0x64007eff
64007efc:	mov    DWORD PTR [edi+0x4],esi
64007eff:	mov    DWORD PTR [esi],edi
64007f01:	mov    eax,DWORD PTR [ebp+0x8]
64007f04:	mov    DWORD PTR [ecx+0x8],eax
64007f07:	mov    edx,DWORD PTR [ebp+0x8]
64007f0a:	mov    DWORD PTR [edx+0x4],ecx
64007f0d:	mov    eax,DWORD PTR [esp+0x68]
64007f11:	mov    eax,DWORD PTR [eax+0x4]
64007f14:	cmp    DWORD PTR [eax+0x4],ebp
64007f17:	jne    0x64007f1e
64007f19:	mov    DWORD PTR [eax+0x4],ecx
64007f1c:	jmp    0x64007f2c
64007f1e:	mov    eax,DWORD PTR [ebp+0x4]
64007f21:	cmp    DWORD PTR [eax],ebp
64007f23:	jne    0x64007f29
64007f25:	mov    DWORD PTR [eax],ecx
64007f27:	jmp    0x64007f2c
64007f29:	mov    DWORD PTR [eax+0x8],ecx
64007f2c:	mov    edx,DWORD PTR [ebp+0x4]
64007f2f:	mov    DWORD PTR [ecx+0x4],edx
64007f32:	mov    dl,BYTE PTR [ebp+0x28]
64007f35:	mov    al,BYTE PTR [ecx+0x28]
64007f38:	mov    BYTE PTR [ecx+0x28],dl
64007f3b:	mov    BYTE PTR [ebp+0x28],al
64007f3e:	mov    bl,0x1
64007f40:	cmp    BYTE PTR [ebp+0x28],bl
64007f43:	jne    0x6400806a
64007f49:	mov    eax,DWORD PTR [esp+0x68]
64007f4d:	mov    ecx,DWORD PTR [eax+0x4]
64007f50:	cmp    edi,DWORD PTR [ecx+0x4]
64007f53:	je     0x64008067
64007f59:	lea    esp,[esp+0x0]
64007f60:	cmp    BYTE PTR [edi+0x28],bl
64007f63:	jne    0x64008067
64007f69:	mov    ecx,DWORD PTR [esi]
64007f6b:	cmp    edi,ecx
64007f6d:	jne    0x64007fe5
64007f6f:	mov    ecx,DWORD PTR [esi+0x8]
64007f72:	cmp    BYTE PTR [ecx+0x28],0x0
64007f76:	jne    0x64007f8e
64007f78:	mov    edx,DWORD PTR [esp+0x68]
64007f7c:	mov    BYTE PTR [ecx+0x28],bl
64007f7f:	push   edx
64007f80:	mov    ecx,esi
64007f82:	mov    BYTE PTR [esi+0x28],0x0
64007f86:	call   0x64008190
64007f8b:	mov    ecx,DWORD PTR [esi+0x8]
64007f8e:	cmp    BYTE PTR [ecx+0x29],0x0
64007f92:	jne    0x64008019
64007f98:	mov    eax,DWORD PTR [ecx]
64007f9a:	cmp    BYTE PTR [eax+0x28],bl
64007f9d:	jne    0x64007fa7
64007f9f:	mov    edx,DWORD PTR [ecx+0x8]
64007fa2:	cmp    BYTE PTR [edx+0x28],bl
64007fa5:	je     0x64008015
64007fa7:	mov    eax,DWORD PTR [ecx+0x8]
64007faa:	cmp    BYTE PTR [eax+0x28],bl
64007fad:	jne    0x64007fc5
64007faf:	mov    edx,DWORD PTR [ecx]
64007fb1:	mov    eax,DWORD PTR [esp+0x68]
64007fb5:	mov    BYTE PTR [edx+0x28],bl
64007fb8:	push   eax
64007fb9:	mov    BYTE PTR [ecx+0x28],0x0
64007fbd:	call   0x64008200
64007fc2:	mov    ecx,DWORD PTR [esi+0x8]
64007fc5:	mov    dl,BYTE PTR [esi+0x28]
64007fc8:	mov    BYTE PTR [ecx+0x28],dl
64007fcb:	mov    BYTE PTR [esi+0x28],bl
64007fce:	mov    eax,DWORD PTR [ecx+0x8]
64007fd1:	mov    ecx,DWORD PTR [esp+0x68]
64007fd5:	push   ecx
64007fd6:	mov    ecx,esi
64007fd8:	mov    BYTE PTR [eax+0x28],bl
64007fdb:	call   0x64008190
64007fe0:	jmp    0x64008067
64007fe5:	cmp    BYTE PTR [ecx+0x28],0x0
64007fe9:	jne    0x64008000
64007feb:	mov    eax,DWORD PTR [esp+0x68]
64007fef:	mov    BYTE PTR [ecx+0x28],bl
64007ff2:	push   eax
64007ff3:	mov    ecx,esi
64007ff5:	mov    BYTE PTR [esi+0x28],0x0
64007ff9:	call   0x64008200
64007ffe:	mov    ecx,DWORD PTR [esi]
64008000:	cmp    BYTE PTR [ecx+0x29],0x0
64008004:	jne    0x64008019
64008006:	mov    edx,DWORD PTR [ecx+0x8]
64008009:	cmp    BYTE PTR [edx+0x28],bl
6400800c:	jne    0x64008030
6400800e:	mov    eax,DWORD PTR [ecx]
64008010:	cmp    BYTE PTR [eax+0x28],bl
64008013:	jne    0x64008030
64008015:	mov    BYTE PTR [ecx+0x28],0x0
64008019:	mov    ecx,DWORD PTR [esp+0x68]
6400801d:	mov    edx,DWORD PTR [ecx+0x4]
64008020:	mov    edi,esi
64008022:	cmp    edi,DWORD PTR [edx+0x4]
64008025:	mov    esi,DWORD PTR [esi+0x4]
64008028:	jne    0x64007f60
6400802e:	jmp    0x64008067
64008030:	mov    edx,DWORD PTR [ecx]
64008032:	cmp    BYTE PTR [edx+0x28],bl
64008035:	jne    0x6400804d
64008037:	mov    eax,DWORD PTR [ecx+0x8]
6400803a:	mov    edx,DWORD PTR [esp+0x68]
6400803e:	mov    BYTE PTR [eax+0x28],bl
64008041:	push   edx
64008042:	mov    BYTE PTR [ecx+0x28],0x0
64008046:	call   0x64008190
6400804b:	mov    ecx,DWORD PTR [esi]
6400804d:	mov    al,BYTE PTR [esi+0x28]
64008050:	mov    edx,DWORD PTR [esp+0x68]
64008054:	mov    BYTE PTR [ecx+0x28],al
64008057:	mov    BYTE PTR [esi+0x28],bl
6400805a:	mov    ecx,DWORD PTR [ecx]
6400805c:	mov    BYTE PTR [ecx+0x28],bl
6400805f:	push   edx
64008060:	mov    ecx,esi
64008062:	call   0x64008200
64008067:	mov    BYTE PTR [edi+0x28],bl
6400806a:	cmp    DWORD PTR [ebp+0x24],0x10
6400806e:	jb     0x6400807c
64008070:	mov    eax,DWORD PTR [ebp+0x10]
64008073:	push   eax
64008074:	call   0x64011d22
64008079:	add    esp,0x4
6400807c:	mov    DWORD PTR [ebp+0x24],0xf
64008083:	mov    DWORD PTR [ebp+0x20],0x0
6400808a:	push   ebp
6400808b:	mov    BYTE PTR [ebp+0x10],0x0
6400808f:	call   0x64011d22
64008094:	mov    ecx,DWORD PTR [esp+0x6c]
64008098:	mov    eax,DWORD PTR [ecx+0x8]
6400809b:	add    esp,0x4
6400809e:	test   eax,eax
640080a0:	jbe    0x640080a8
640080a2:	add    eax,0xffffffff
640080a5:	mov    DWORD PTR [ecx+0x8],eax
640080a8:	mov    eax,DWORD PTR [esp+0x6c]
640080ac:	mov    ecx,DWORD PTR [esp+0x70]
640080b0:	mov    edx,DWORD PTR [esp+0x74]
640080b4:	mov    DWORD PTR [eax],ecx
640080b6:	mov    DWORD PTR [eax+0x4],edx
640080b9:	mov    ecx,DWORD PTR [esp+0x58]
640080bd:	mov    DWORD PTR fs:0x0,ecx
640080c4:	pop    ecx
640080c5:	pop    edi
640080c6:	pop    esi
640080c7:	pop    ebp
640080c8:	pop    ebx
640080c9:	add    esp,0x50
640080cc:	ret    0x10
640080cf:	int3   
640080d0:	push   ebp
640080d1:	mov    ebp,esp
640080d3:	push   0xffffffff
640080d5:	push   0x640221d0
640080da:	mov    eax,fs:0x0
640080e0:	push   eax
640080e1:	sub    esp,0xc
640080e4:	push   ebx
640080e5:	push   esi
640080e6:	push   edi
640080e7:	mov    eax,ds:0x6402c09c
640080ec:	xor    eax,ebp
640080ee:	push   eax
640080ef:	lea    eax,[ebp-0xc]
640080f2:	mov    fs:0x0,eax
640080f8:	mov    DWORD PTR [ebp-0x10],esp
640080fb:	mov    ebx,ecx
640080fd:	mov    DWORD PTR [ebp-0x18],ebx
64008100:	mov    edi,DWORD PTR [ebp+0x8]
64008103:	cmp    BYTE PTR [edi+0x29],0x0
64008107:	mov    eax,DWORD PTR [ebx+0x4]
6400810a:	mov    DWORD PTR [ebp-0x14],eax
6400810d:	jne    0x64008154
6400810f:	movzx  ecx,BYTE PTR [edi+0x28]
64008113:	push   ecx
64008114:	mov    ecx,DWORD PTR [ebp+0xc]
64008117:	lea    edx,[edi+0xc]
6400811a:	push   edx
6400811b:	push   eax
6400811c:	push   ecx
6400811d:	push   eax
6400811e:	call   0x64008290
64008123:	mov    edx,DWORD PTR [ebp-0x14]
64008126:	cmp    BYTE PTR [edx+0x29],0x0
6400812a:	mov    esi,eax
6400812c:	je     0x64008131
6400812e:	mov    DWORD PTR [ebp-0x14],esi
64008131:	mov    DWORD PTR [ebp-0x4],0x0
64008138:	mov    eax,DWORD PTR [edi]
6400813a:	push   esi
6400813b:	push   eax
6400813c:	mov    ecx,ebx
6400813e:	call   0x640080d0
64008143:	mov    DWORD PTR [esi],eax
64008145:	mov    ecx,DWORD PTR [edi+0x8]
64008148:	push   esi
64008149:	push   ecx
6400814a:	mov    ecx,ebx
6400814c:	call   0x640080d0
64008151:	mov    DWORD PTR [esi+0x8],eax
64008154:	mov    eax,DWORD PTR [ebp-0x14]
64008157:	mov    ecx,DWORD PTR [ebp-0xc]
6400815a:	mov    DWORD PTR fs:0x0,ecx
64008161:	pop    ecx
64008162:	pop    edi
64008163:	pop    esi
64008164:	pop    ebx
64008165:	mov    esp,ebp
64008167:	pop    ebp
64008168:	ret    0x8
6400816b:	mov    edx,DWORD PTR [ebp-0x14]
6400816e:	mov    ecx,DWORD PTR [ebp-0x18]
64008171:	push   edx
64008172:	call   0x640089b0
64008177:	push   0x0
64008179:	push   0x0
6400817b:	call   0x6401216b
64008180:	int3   
64008181:	int3   
64008182:	int3   
64008183:	int3   
64008184:	int3   
64008185:	int3   
64008186:	int3   
64008187:	int3   
64008188:	int3   
64008189:	int3   
6400818a:	int3   
6400818b:	int3   
6400818c:	int3   
6400818d:	int3   
6400818e:	int3   
6400818f:	int3   
64008190:	mov    eax,DWORD PTR [ecx+0x8]
64008193:	mov    edx,DWORD PTR [eax]
64008195:	mov    DWORD PTR [ecx+0x8],edx
64008198:	mov    edx,DWORD PTR [eax]
6400819a:	cmp    BYTE PTR [edx+0x29],0x0
6400819e:	jne    0x640081a3
640081a0:	mov    DWORD PTR [edx+0x4],ecx
640081a3:	mov    edx,DWORD PTR [ecx+0x4]
640081a6:	mov    DWORD PTR [eax+0x4],edx
640081a9:	mov    edx,DWORD PTR [esp+0x4]
640081ad:	mov    edx,DWORD PTR [edx+0x4]
640081b0:	cmp    ecx,DWORD PTR [edx+0x4]
640081b3:	jne    0x640081c0
640081b5:	mov    DWORD PTR [edx+0x4],eax
640081b8:	mov    DWORD PTR [eax],ecx
640081ba:	mov    DWORD PTR [ecx+0x4],eax
640081bd:	ret    0x4
640081c0:	mov    edx,DWORD PTR [ecx+0x4]
640081c3:	cmp    ecx,DWORD PTR [edx]
640081c5:	jne    0x640081d1
640081c7:	mov    DWORD PTR [edx],eax
640081c9:	mov    DWORD PTR [eax],ecx
640081cb:	mov    DWORD PTR [ecx+0x4],eax
640081ce:	ret    0x4
640081d1:	mov    DWORD PTR [edx+0x8],eax
640081d4:	mov    DWORD PTR [eax],ecx
640081d6:	mov    DWORD PTR [ecx+0x4],eax
640081d9:	ret    0x4
640081dc:	int3   
640081dd:	int3   
640081de:	int3   
640081df:	int3   
640081e0:	mov    ecx,DWORD PTR [eax+0x8]
640081e3:	cmp    BYTE PTR [ecx+0x29],0x0
640081e7:	jne    0x640081fb
640081e9:	lea    esp,[esp+0x0]
640081f0:	mov    eax,ecx
640081f2:	mov    ecx,DWORD PTR [eax+0x8]
640081f5:	cmp    BYTE PTR [ecx+0x29],0x0
640081f9:	je     0x640081f0
640081fb:	ret    
640081fc:	int3   
640081fd:	int3   
640081fe:	int3   
640081ff:	int3   
64008200:	mov    eax,DWORD PTR [ecx]
64008202:	mov    edx,DWORD PTR [eax+0x8]
64008205:	mov    DWORD PTR [ecx],edx
64008207:	mov    edx,DWORD PTR [eax+0x8]
6400820a:	cmp    BYTE PTR [edx+0x29],0x0
6400820e:	jne    0x64008213
64008210:	mov    DWORD PTR [edx+0x4],ecx
64008213:	mov    edx,DWORD PTR [ecx+0x4]
64008216:	mov    DWORD PTR [eax+0x4],edx
64008219:	mov    edx,DWORD PTR [esp+0x4]
6400821d:	mov    edx,DWORD PTR [edx+0x4]
64008220:	cmp    ecx,DWORD PTR [edx+0x4]
64008223:	jne    0x64008231
64008225:	mov    DWORD PTR [edx+0x4],eax
64008228:	mov    DWORD PTR [eax+0x8],ecx
6400822b:	mov    DWORD PTR [ecx+0x4],eax
6400822e:	ret    0x4
64008231:	mov    edx,DWORD PTR [ecx+0x4]
64008234:	cmp    ecx,DWORD PTR [edx+0x8]
64008237:	jne    0x64008245
64008239:	mov    DWORD PTR [edx+0x8],eax
6400823c:	mov    DWORD PTR [eax+0x8],ecx
6400823f:	mov    DWORD PTR [ecx+0x4],eax
64008242:	ret    0x4
64008245:	mov    DWORD PTR [edx],eax
64008247:	mov    DWORD PTR [eax+0x8],ecx
6400824a:	mov    DWORD PTR [ecx+0x4],eax
6400824d:	ret    0x4
64008250:	push   0x2c
64008252:	call   0x64012101
64008257:	add    esp,0x4
6400825a:	test   eax,eax
6400825c:	je     0x64008264
6400825e:	mov    DWORD PTR [eax],0x0
64008264:	lea    ecx,[eax+0x4]
64008267:	test   ecx,ecx
64008269:	je     0x64008271
6400826b:	mov    DWORD PTR [ecx],0x0
64008271:	lea    ecx,[eax+0x8]
64008274:	test   ecx,ecx
64008276:	je     0x6400827e
64008278:	mov    DWORD PTR [ecx],0x0
6400827e:	mov    BYTE PTR [eax+0x28],0x1
64008282:	mov    BYTE PTR [eax+0x29],0x0
64008286:	ret    
64008287:	int3   
64008288:	int3   
64008289:	int3   
6400828a:	int3   
6400828b:	int3   
6400828c:	int3   
6400828d:	int3   
6400828e:	int3   
6400828f:	int3   
64008290:	push   ebp
64008291:	mov    ebp,esp
64008293:	push   0xffffffff
64008295:	push   0x640221b1
6400829a:	mov    eax,fs:0x0
640082a0:	push   eax
640082a1:	sub    esp,0xc
640082a4:	push   ebx
640082a5:	push   esi
640082a6:	push   edi
640082a7:	mov    eax,ds:0x6402c09c
640082ac:	xor    eax,ebp
640082ae:	push   eax
640082af:	lea    eax,[ebp-0xc]
640082b2:	mov    fs:0x0,eax
640082b8:	mov    DWORD PTR [ebp-0x10],esp
640082bb:	push   0x2c
640082bd:	call   0x64012101
640082c2:	mov    esi,eax
640082c4:	xor    ebx,ebx
640082c6:	mov    DWORD PTR [ebp-0x4],ebx
640082c9:	add    esp,0x4
640082cc:	mov    DWORD PTR [ebp-0x14],esi
640082cf:	mov    DWORD PTR [ebp-0x18],esi
640082d2:	cmp    esi,ebx
640082d4:	mov    BYTE PTR [ebp-0x4],0x1
640082d8:	je     0x64008310
640082da:	mov    eax,DWORD PTR [ebp+0x8]
640082dd:	mov    ecx,DWORD PTR [ebp+0xc]
640082e0:	mov    edx,DWORD PTR [ebp+0x10]
640082e3:	mov    DWORD PTR [esi],eax
640082e5:	mov    eax,DWORD PTR [ebp+0x14]
640082e8:	mov    DWORD PTR [esi+0x4],ecx
640082eb:	push   0xffffffff
640082ed:	lea    ecx,[esi+0xc]
640082f0:	mov    DWORD PTR [esi+0x8],edx
640082f3:	push   ebx
640082f4:	mov    DWORD PTR [ecx+0x18],0xf
640082fb:	mov    DWORD PTR [ecx+0x14],ebx
640082fe:	push   eax
640082ff:	mov    BYTE PTR [ecx+0x4],bl
64008302:	call   0x64001780
64008307:	mov    cl,BYTE PTR [ebp+0x18]
6400830a:	mov    BYTE PTR [esi+0x28],cl
6400830d:	mov    BYTE PTR [esi+0x29],bl
64008310:	mov    eax,esi
64008312:	mov    ecx,DWORD PTR [ebp-0xc]
64008315:	mov    DWORD PTR fs:0x0,ecx
6400831c:	pop    ecx
6400831d:	pop    edi
6400831e:	pop    esi
6400831f:	pop    ebx
64008320:	mov    esp,ebp
64008322:	pop    ebp
64008323:	ret    0x14
64008326:	mov    edx,DWORD PTR [ebp-0x14]
64008329:	push   edx
6400832a:	call   0x64011d22
6400832f:	add    esp,0x4
64008332:	xor    ebx,ebx
64008334:	push   ebx
64008335:	push   ebx
64008336:	call   0x6401216b
6400833b:	int3   
6400833c:	int3   
6400833d:	int3   
6400833e:	int3   
6400833f:	int3   
64008340:	push   ebp
64008341:	mov    ebp,esp
64008343:	and    esp,0xfffffff8
64008346:	push   0xffffffff
64008348:	push   0x640225e8
6400834d:	mov    eax,fs:0x0
64008353:	push   eax
64008354:	sub    esp,0x50
64008357:	push   ebx
64008358:	push   esi
64008359:	push   edi
6400835a:	mov    eax,ds:0x6402c09c
6400835f:	xor    eax,esp
64008361:	push   eax
64008362:	lea    eax,[esp+0x60]
64008366:	mov    fs:0x0,eax
6400836c:	mov    edi,ecx
6400836e:	xor    ebx,ebx
64008370:	cmp    DWORD PTR [edi+0x8],0x4924923
64008377:	jb     0x640083c2
64008379:	push   0x13
6400837b:	push   0x64027f2c
64008380:	lea    ecx,[esp+0x20]
64008384:	mov    DWORD PTR [esp+0x38],0xf
6400838c:	mov    DWORD PTR [esp+0x34],ebx
64008390:	mov    BYTE PTR [esp+0x24],bl
64008394:	call   0x64001860
64008399:	lea    eax,[esp+0x18]
6400839d:	push   eax
6400839e:	lea    ecx,[esp+0x38]
640083a2:	mov    DWORD PTR [esp+0x6c],ebx
640083a6:	call   0x64002d10
640083ab:	push   0x64029d68
640083b0:	lea    ecx,[esp+0x38]
640083b4:	push   ecx
640083b5:	mov    DWORD PTR [esp+0x3c],0x64024274
640083bd:	call   0x6401216b
640083c2:	mov    edx,DWORD PTR [ebp+0x14]
640083c5:	mov    eax,DWORD PTR [edi+0x4]
640083c8:	mov    esi,DWORD PTR [ebp+0x10]
640083cb:	push   ebx
640083cc:	push   edx
640083cd:	push   eax
640083ce:	push   esi
640083cf:	push   eax
640083d0:	call   0x64008d00
640083d5:	add    DWORD PTR [edi+0x8],0x1
640083d9:	mov    ecx,eax
640083db:	mov    eax,DWORD PTR [edi+0x4]
640083de:	cmp    esi,eax
640083e0:	mov    DWORD PTR [esp+0x14],ecx
640083e4:	jne    0x640083f6
640083e6:	mov    DWORD PTR [eax+0x4],ecx
640083e9:	mov    eax,DWORD PTR [edi+0x4]
640083ec:	mov    DWORD PTR [eax],ecx
640083ee:	mov    edx,DWORD PTR [edi+0x4]
640083f1:	mov    DWORD PTR [edx+0x8],ecx
640083f4:	jmp    0x64008416
640083f6:	cmp    BYTE PTR [ebp+0xc],bl
640083f9:	je     0x64008408
640083fb:	mov    DWORD PTR [esi],ecx
640083fd:	mov    eax,DWORD PTR [edi+0x4]
64008400:	cmp    esi,DWORD PTR [eax]
64008402:	jne    0x64008416
64008404:	mov    DWORD PTR [eax],ecx
64008406:	jmp    0x64008416
64008408:	mov    DWORD PTR [esi+0x8],ecx
6400840b:	mov    eax,DWORD PTR [edi+0x4]
6400840e:	cmp    esi,DWORD PTR [eax+0x8]
64008411:	jne    0x64008416
64008413:	mov    DWORD PTR [eax+0x8],ecx
64008416:	mov    edx,DWORD PTR [ecx+0x4]
64008419:	cmp    BYTE PTR [edx+0x44],bl
6400841c:	lea    eax,[ecx+0x4]
6400841f:	mov    esi,ecx
64008421:	jne    0x64008562
64008427:	mov    ecx,DWORD PTR [eax]
64008429:	mov    edx,DWORD PTR [ecx+0x4]
6400842c:	cmp    ecx,DWORD PTR [edx]
6400842e:	jne    0x640084d5
64008434:	mov    edx,DWORD PTR [edx+0x8]
64008437:	cmp    BYTE PTR [edx+0x44],bl
6400843a:	je     0x640084dc
64008440:	cmp    esi,DWORD PTR [ecx+0x8]
64008443:	jne    0x64008480
64008445:	mov    esi,ecx
64008447:	mov    ecx,DWORD PTR [esi+0x8]
6400844a:	mov    eax,DWORD PTR [ecx]
6400844c:	mov    DWORD PTR [esi+0x8],eax
6400844f:	mov    eax,DWORD PTR [ecx]
64008451:	cmp    BYTE PTR [eax+0x45],bl
64008454:	jne    0x64008459
64008456:	mov    DWORD PTR [eax+0x4],esi
64008459:	mov    edx,DWORD PTR [esi+0x4]
6400845c:	lea    eax,[esi+0x4]
6400845f:	mov    DWORD PTR [ecx+0x4],edx
64008462:	mov    edx,DWORD PTR [edi+0x4]
64008465:	cmp    esi,DWORD PTR [edx+0x4]
64008468:	jne    0x6400846f
6400846a:	mov    DWORD PTR [edx+0x4],ecx
6400846d:	jmp    0x6400847c
6400846f:	mov    edx,DWORD PTR [eax]
64008471:	cmp    esi,DWORD PTR [edx]
64008473:	jne    0x64008479
64008475:	mov    DWORD PTR [edx],ecx
64008477:	jmp    0x6400847c
64008479:	mov    DWORD PTR [edx+0x8],ecx
6400847c:	mov    DWORD PTR [ecx],esi
6400847e:	mov    DWORD PTR [eax],ecx
64008480:	mov    ecx,DWORD PTR [eax]
64008482:	mov    BYTE PTR [ecx+0x44],0x1
64008486:	mov    edx,DWORD PTR [eax]
64008488:	mov    ecx,DWORD PTR [edx+0x4]
6400848b:	mov    BYTE PTR [ecx+0x44],bl
6400848e:	mov    edx,DWORD PTR [eax]
64008490:	mov    eax,DWORD PTR [edx+0x4]
64008493:	mov    ecx,DWORD PTR [eax]
64008495:	mov    edx,DWORD PTR [ecx+0x8]
64008498:	mov    DWORD PTR [eax],edx
6400849a:	mov    edx,DWORD PTR [ecx+0x8]
6400849d:	cmp    BYTE PTR [edx+0x45],bl
640084a0:	jne    0x640084a5
640084a2:	mov    DWORD PTR [edx+0x4],eax
640084a5:	mov    edx,DWORD PTR [eax+0x4]
640084a8:	mov    DWORD PTR [ecx+0x4],edx
640084ab:	mov    edx,DWORD PTR [edi+0x4]
640084ae:	cmp    eax,DWORD PTR [edx+0x4]
640084b1:	jne    0x640084be
640084b3:	mov    DWORD PTR [edx+0x4],ecx
640084b6:	mov    DWORD PTR [ecx+0x8],eax
640084b9:	jmp    0x6400854c
640084be:	mov    edx,DWORD PTR [eax+0x4]
640084c1:	cmp    eax,DWORD PTR [edx+0x8]
640084c4:	jne    0x640084ce
640084c6:	mov    DWORD PTR [edx+0x8],ecx
640084c9:	mov    DWORD PTR [ecx+0x8],eax
640084cc:	jmp    0x6400854c
640084ce:	mov    DWORD PTR [edx],ecx
640084d0:	mov    DWORD PTR [ecx+0x8],eax
640084d3:	jmp    0x6400854c
640084d5:	mov    edx,DWORD PTR [edx]
640084d7:	cmp    BYTE PTR [edx+0x44],bl
640084da:	jne    0x640084f3
640084dc:	mov    BYTE PTR [ecx+0x44],0x1
640084e0:	mov    BYTE PTR [edx+0x44],0x1
640084e4:	mov    edx,DWORD PTR [eax]
640084e6:	mov    ecx,DWORD PTR [edx+0x4]
640084e9:	mov    BYTE PTR [ecx+0x44],bl
640084ec:	mov    edx,DWORD PTR [eax]
640084ee:	mov    esi,DWORD PTR [edx+0x4]
640084f1:	jmp    0x6400854f
640084f3:	cmp    esi,DWORD PTR [ecx]
640084f5:	jne    0x64008501
640084f7:	mov    esi,ecx
640084f9:	push   esi
640084fa:	mov    ecx,edi
640084fc:	call   0x64008ca0
64008501:	mov    eax,DWORD PTR [esi+0x4]
64008504:	mov    BYTE PTR [eax+0x44],0x1
64008508:	mov    ecx,DWORD PTR [esi+0x4]
6400850b:	mov    edx,DWORD PTR [ecx+0x4]
6400850e:	mov    BYTE PTR [edx+0x44],bl
64008511:	mov    eax,DWORD PTR [esi+0x4]
64008514:	mov    eax,DWORD PTR [eax+0x4]
64008517:	mov    ecx,DWORD PTR [eax+0x8]
6400851a:	mov    edx,DWORD PTR [ecx]
6400851c:	mov    DWORD PTR [eax+0x8],edx
6400851f:	mov    edx,DWORD PTR [ecx]
64008521:	cmp    BYTE PTR [edx+0x45],bl
64008524:	jne    0x64008529
64008526:	mov    DWORD PTR [edx+0x4],eax
64008529:	mov    edx,DWORD PTR [eax+0x4]
6400852c:	mov    DWORD PTR [ecx+0x4],edx
6400852f:	mov    edx,DWORD PTR [edi+0x4]
64008532:	cmp    eax,DWORD PTR [edx+0x4]
64008535:	jne    0x6400853c
64008537:	mov    DWORD PTR [edx+0x4],ecx
6400853a:	jmp    0x6400854a
6400853c:	mov    edx,DWORD PTR [eax+0x4]
6400853f:	cmp    eax,DWORD PTR [edx]
64008541:	jne    0x64008547
64008543:	mov    DWORD PTR [edx],ecx
64008545:	jmp    0x6400854a
64008547:	mov    DWORD PTR [edx+0x8],ecx
6400854a:	mov    DWORD PTR [ecx],eax
6400854c:	mov    DWORD PTR [eax+0x4],ecx
6400854f:	mov    ecx,DWORD PTR [esi+0x4]
64008552:	cmp    BYTE PTR [ecx+0x44],bl
64008555:	lea    eax,[esi+0x4]
64008558:	je     0x64008427
6400855e:	mov    ecx,DWORD PTR [esp+0x14]
64008562:	mov    edx,DWORD PTR [edi+0x4]
64008565:	mov    eax,DWORD PTR [edx+0x4]
64008568:	mov    BYTE PTR [eax+0x44],0x1
6400856c:	mov    eax,DWORD PTR [ebp+0x8]
6400856f:	mov    DWORD PTR [eax+0x4],ecx
64008572:	mov    DWORD PTR [eax],edi
64008574:	mov    ecx,DWORD PTR [esp+0x60]
64008578:	mov    DWORD PTR fs:0x0,ecx
6400857f:	pop    ecx
64008580:	pop    edi
64008581:	pop    esi
64008582:	pop    ebx
64008583:	mov    esp,ebp
64008585:	pop    ebp
64008586:	ret    0x10
64008589:	int3   
6400858a:	int3   
6400858b:	int3   
6400858c:	int3   
6400858d:	int3   
6400858e:	int3   
6400858f:	int3   
64008590:	push   ebx
64008591:	mov    ebx,DWORD PTR [esp+0xc]
64008595:	push   ebp
64008596:	mov    ebp,DWORD PTR [esp+0xc]
6400859a:	cmp    DWORD PTR [ebp+0x14],ebx
6400859d:	push   esi
6400859e:	push   edi
6400859f:	mov    esi,ecx
640085a1:	jae    0x640085a8
640085a3:	call   0x64011cde
640085a8:	mov    edi,DWORD PTR [ebp+0x14]
640085ab:	mov    eax,DWORD PTR [esp+0x1c]
640085af:	sub    edi,ebx
640085b1:	cmp    eax,edi
640085b3:	jae    0x640085b7
640085b5:	mov    edi,eax
640085b7:	cmp    esi,ebp
640085b9:	jne    0x640085da
640085bb:	push   0xffffffff
640085bd:	add    edi,ebx
640085bf:	push   edi
640085c0:	mov    ecx,esi
640085c2:	call   0x64008da0
640085c7:	push   ebx
640085c8:	push   0x0
640085ca:	mov    ecx,esi
640085cc:	call   0x64008da0
640085d1:	pop    edi
640085d2:	mov    eax,esi
640085d4:	pop    esi
640085d5:	pop    ebp
640085d6:	pop    ebx
640085d7:	ret    0xc
640085da:	cmp    edi,0x7ffffffe
640085e0:	jbe    0x640085e7
640085e2:	call   0x64011c9f
640085e7:	mov    eax,DWORD PTR [esi+0x18]
640085ea:	cmp    eax,edi
640085ec:	jae    0x64008609
640085ee:	mov    eax,DWORD PTR [esi+0x14]
640085f1:	push   eax
640085f2:	push   edi
640085f3:	mov    ecx,esi
640085f5:	call   0x64009050
640085fa:	test   edi,edi
640085fc:	jbe    0x64008676
640085fe:	cmp    DWORD PTR [ebp+0x18],0x8
64008602:	jb     0x64008635
64008604:	mov    ecx,DWORD PTR [ebp+0x4]
64008607:	jmp    0x64008638
64008609:	test   edi,edi
6400860b:	jne    0x640085fc
6400860d:	cmp    eax,0x8
64008610:	mov    DWORD PTR [esi+0x14],edi
64008613:	jb     0x64008624
64008615:	mov    eax,DWORD PTR [esi+0x4]
64008618:	mov    WORD PTR [eax],di
6400861b:	pop    edi
6400861c:	mov    eax,esi
6400861e:	pop    esi
6400861f:	pop    ebp
64008620:	pop    ebx
64008621:	ret    0xc
64008624:	lea    eax,[esi+0x4]
64008627:	pop    edi
64008628:	mov    WORD PTR [eax],0x0
6400862d:	mov    eax,esi
6400862f:	pop    esi
64008630:	pop    ebp
64008631:	pop    ebx
64008632:	ret    0xc
64008635:	lea    ecx,[ebp+0x4]
64008638:	cmp    DWORD PTR [esi+0x18],0x8
6400863c:	lea    ebp,[esi+0x4]
6400863f:	jb     0x64008646
64008641:	mov    eax,DWORD PTR [ebp+0x0]
64008644:	jmp    0x64008648
64008646:	mov    eax,ebp
64008648:	mov    edx,DWORD PTR [esp+0x18]
6400864c:	lea    ecx,[ecx+edx*2]
6400864f:	lea    ebx,[edi+edi*1]
64008652:	push   ebx
64008653:	push   ecx
64008654:	mov    ecx,DWORD PTR [esi+0x18]
64008657:	lea    edx,[ecx+ecx*1]
6400865a:	push   edx
6400865b:	push   eax
6400865c:	call   0x64011ed8
64008661:	add    esp,0x10
64008664:	cmp    DWORD PTR [esi+0x18],0x8
64008668:	mov    DWORD PTR [esi+0x14],edi
6400866b:	jb     0x64008670
6400866d:	mov    ebp,DWORD PTR [ebp+0x0]
64008670:	mov    WORD PTR [ebx+ebp*1],0x0
64008676:	pop    edi
64008677:	mov    eax,esi
64008679:	pop    esi
6400867a:	pop    ebp
6400867b:	pop    ebx
6400867c:	ret    0xc
6400867f:	int3   
64008680:	push   ebp
64008681:	push   esi
64008682:	mov    esi,ecx
64008684:	mov    edx,DWORD PTR [esi+0x18]
64008687:	cmp    edx,0x8
6400868a:	push   edi
6400868b:	lea    ebp,[esi+0x4]
6400868e:	jb     0x64008695
64008690:	mov    ecx,DWORD PTR [ebp+0x0]
64008693:	jmp    0x64008697
64008695:	mov    ecx,ebp
64008697:	mov    eax,DWORD PTR [esp+0x10]
6400869b:	cmp    eax,ecx
6400869d:	jb     0x640086d5
6400869f:	cmp    edx,0x8
640086a2:	jb     0x640086a9
640086a4:	mov    ecx,DWORD PTR [ebp+0x0]
640086a7:	jmp    0x640086ab
640086a9:	mov    ecx,ebp
640086ab:	mov    edi,DWORD PTR [esi+0x14]
640086ae:	lea    ecx,[ecx+edi*2]
640086b1:	cmp    ecx,eax
640086b3:	jbe    0x640086d5
640086b5:	cmp    edx,0x8
640086b8:	jb     0x640086bd
640086ba:	mov    ebp,DWORD PTR [ebp+0x0]
640086bd:	mov    edx,DWORD PTR [esp+0x14]
640086c1:	sub    eax,ebp
640086c3:	push   edx
640086c4:	sar    eax,1
640086c6:	push   eax
640086c7:	push   esi
640086c8:	mov    ecx,esi
640086ca:	call   0x64008590
640086cf:	pop    edi
640086d0:	pop    esi
640086d1:	pop    ebp
640086d2:	ret    0x8
640086d5:	mov    edi,DWORD PTR [esp+0x14]
640086d9:	cmp    edi,0x7ffffffe
640086df:	jbe    0x640086e6
640086e1:	call   0x64011c9f
640086e6:	mov    eax,DWORD PTR [esi+0x18]
640086e9:	cmp    eax,edi
640086eb:	jae    0x6400870a
640086ed:	mov    eax,DWORD PTR [esi+0x14]
640086f0:	push   eax
640086f1:	push   edi
640086f2:	mov    ecx,esi
640086f4:	call   0x64009050
640086f9:	test   edi,edi
640086fb:	jbe    0x64008752
640086fd:	mov    ecx,DWORD PTR [esi+0x18]
64008700:	cmp    ecx,0x8
64008703:	jb     0x64008727
64008705:	mov    eax,DWORD PTR [ebp+0x0]
64008708:	jmp    0x64008729
6400870a:	test   edi,edi
6400870c:	jne    0x640086fb
6400870e:	cmp    eax,0x8
64008711:	mov    DWORD PTR [esi+0x14],edi
64008714:	jb     0x64008719
64008716:	mov    ebp,DWORD PTR [ebp+0x0]
64008719:	pop    edi
6400871a:	mov    eax,esi
6400871c:	pop    esi
6400871d:	mov    WORD PTR [ebp+0x0],0x0
64008723:	pop    ebp
64008724:	ret    0x8
64008727:	mov    eax,ebp
64008729:	mov    edx,DWORD PTR [esp+0x10]
6400872d:	push   ebx
6400872e:	lea    ebx,[edi+edi*1]
64008731:	push   ebx
64008732:	push   edx
64008733:	add    ecx,ecx
64008735:	push   ecx
64008736:	push   eax
64008737:	call   0x64011ed8
6400873c:	add    esp,0x10
6400873f:	cmp    DWORD PTR [esi+0x18],0x8
64008743:	mov    DWORD PTR [esi+0x14],edi
64008746:	jb     0x6400874b
64008748:	mov    ebp,DWORD PTR [ebp+0x0]
6400874b:	mov    WORD PTR [ebx+ebp*1],0x0
64008751:	pop    ebx
64008752:	pop    edi
64008753:	mov    eax,esi
64008755:	pop    esi
64008756:	pop    ebp
64008757:	ret    0x8
6400875a:	int3   
6400875b:	int3   
6400875c:	int3   
6400875d:	int3   
6400875e:	int3   
6400875f:	int3   
64008760:	push   ebp
64008761:	mov    ebp,esp
64008763:	and    esp,0xfffffff8
64008766:	push   0xffffffff
64008768:	push   0x640225b8
6400876d:	mov    eax,fs:0x0
64008773:	push   eax
64008774:	sub    esp,0x50
64008777:	push   ebx
64008778:	push   esi
64008779:	push   edi
6400877a:	mov    eax,ds:0x6402c09c
6400877f:	xor    eax,esp
64008781:	push   eax
64008782:	lea    eax,[esp+0x60]
64008786:	mov    fs:0x0,eax
6400878c:	mov    edi,ecx
6400878e:	xor    ebx,ebx
64008790:	cmp    DWORD PTR [edi+0x8],0x4924923
64008797:	jb     0x640087e2
64008799:	push   0x13
6400879b:	push   0x64027f2c
640087a0:	lea    ecx,[esp+0x20]
640087a4:	mov    DWORD PTR [esp+0x38],0xf
640087ac:	mov    DWORD PTR [esp+0x34],ebx
640087b0:	mov    BYTE PTR [esp+0x24],bl
640087b4:	call   0x64001860
640087b9:	lea    eax,[esp+0x18]
640087bd:	push   eax
640087be:	lea    ecx,[esp+0x38]
640087c2:	mov    DWORD PTR [esp+0x6c],ebx
640087c6:	call   0x64002d10
640087cb:	push   0x64029d68
640087d0:	lea    ecx,[esp+0x38]
640087d4:	push   ecx
640087d5:	mov    DWORD PTR [esp+0x3c],0x64024274
640087dd:	call   0x6401216b
640087e2:	mov    edx,DWORD PTR [ebp+0x14]
640087e5:	mov    eax,DWORD PTR [edi+0x4]
640087e8:	mov    esi,DWORD PTR [ebp+0x10]
640087eb:	push   ebx
640087ec:	push   edx
640087ed:	push   eax
640087ee:	push   esi
640087ef:	push   eax
640087f0:	call   0x64008ea0
640087f5:	add    DWORD PTR [edi+0x8],0x1
640087f9:	mov    ecx,eax
640087fb:	mov    eax,DWORD PTR [edi+0x4]
640087fe:	cmp    esi,eax
64008800:	mov    DWORD PTR [esp+0x14],ecx
64008804:	jne    0x64008816
64008806:	mov    DWORD PTR [eax+0x4],ecx
64008809:	mov    eax,DWORD PTR [edi+0x4]
6400880c:	mov    DWORD PTR [eax],ecx
6400880e:	mov    edx,DWORD PTR [edi+0x4]
64008811:	mov    DWORD PTR [edx+0x8],ecx
64008814:	jmp    0x64008836
64008816:	cmp    BYTE PTR [ebp+0xc],bl
64008819:	je     0x64008828
6400881b:	mov    DWORD PTR [esi],ecx
6400881d:	mov    eax,DWORD PTR [edi+0x4]
64008820:	cmp    esi,DWORD PTR [eax]
64008822:	jne    0x64008836
64008824:	mov    DWORD PTR [eax],ecx
64008826:	jmp    0x64008836
64008828:	mov    DWORD PTR [esi+0x8],ecx
6400882b:	mov    eax,DWORD PTR [edi+0x4]
6400882e:	cmp    esi,DWORD PTR [eax+0x8]
64008831:	jne    0x64008836
64008833:	mov    DWORD PTR [eax+0x8],ecx
64008836:	mov    edx,DWORD PTR [ecx+0x4]
64008839:	cmp    BYTE PTR [edx+0x44],bl
6400883c:	lea    eax,[ecx+0x4]
6400883f:	mov    esi,ecx
64008841:	jne    0x64008982
64008847:	mov    ecx,DWORD PTR [eax]
64008849:	mov    edx,DWORD PTR [ecx+0x4]
6400884c:	cmp    ecx,DWORD PTR [edx]
6400884e:	jne    0x640088f5
64008854:	mov    edx,DWORD PTR [edx+0x8]
64008857:	cmp    BYTE PTR [edx+0x44],bl
6400885a:	je     0x640088fc
64008860:	cmp    esi,DWORD PTR [ecx+0x8]
64008863:	jne    0x640088a0
64008865:	mov    esi,ecx
64008867:	mov    ecx,DWORD PTR [esi+0x8]
6400886a:	mov    eax,DWORD PTR [ecx]
6400886c:	mov    DWORD PTR [esi+0x8],eax
6400886f:	mov    eax,DWORD PTR [ecx]
64008871:	cmp    BYTE PTR [eax+0x45],bl
64008874:	jne    0x64008879
64008876:	mov    DWORD PTR [eax+0x4],esi
64008879:	mov    edx,DWORD PTR [esi+0x4]
6400887c:	lea    eax,[esi+0x4]
6400887f:	mov    DWORD PTR [ecx+0x4],edx
64008882:	mov    edx,DWORD PTR [edi+0x4]
64008885:	cmp    esi,DWORD PTR [edx+0x4]
64008888:	jne    0x6400888f
6400888a:	mov    DWORD PTR [edx+0x4],ecx
6400888d:	jmp    0x6400889c
6400888f:	mov    edx,DWORD PTR [eax]
64008891:	cmp    esi,DWORD PTR [edx]
64008893:	jne    0x64008899
64008895:	mov    DWORD PTR [edx],ecx
64008897:	jmp    0x6400889c
64008899:	mov    DWORD PTR [edx+0x8],ecx
6400889c:	mov    DWORD PTR [ecx],esi
6400889e:	mov    DWORD PTR [eax],ecx
640088a0:	mov    ecx,DWORD PTR [eax]
640088a2:	mov    BYTE PTR [ecx+0x44],0x1
640088a6:	mov    edx,DWORD PTR [eax]
640088a8:	mov    ecx,DWORD PTR [edx+0x4]
640088ab:	mov    BYTE PTR [ecx+0x44],bl
640088ae:	mov    edx,DWORD PTR [eax]
640088b0:	mov    eax,DWORD PTR [edx+0x4]
640088b3:	mov    ecx,DWORD PTR [eax]
640088b5:	mov    edx,DWORD PTR [ecx+0x8]
640088b8:	mov    DWORD PTR [eax],edx
640088ba:	mov    edx,DWORD PTR [ecx+0x8]
640088bd:	cmp    BYTE PTR [edx+0x45],bl
640088c0:	jne    0x640088c5
640088c2:	mov    DWORD PTR [edx+0x4],eax
640088c5:	mov    edx,DWORD PTR [eax+0x4]
640088c8:	mov    DWORD PTR [ecx+0x4],edx
640088cb:	mov    edx,DWORD PTR [edi+0x4]
640088ce:	cmp    eax,DWORD PTR [edx+0x4]
640088d1:	jne    0x640088de
640088d3:	mov    DWORD PTR [edx+0x4],ecx
640088d6:	mov    DWORD PTR [ecx+0x8],eax
640088d9:	jmp    0x6400896c
640088de:	mov    edx,DWORD PTR [eax+0x4]
640088e1:	cmp    eax,DWORD PTR [edx+0x8]
640088e4:	jne    0x640088ee
640088e6:	mov    DWORD PTR [edx+0x8],ecx
640088e9:	mov    DWORD PTR [ecx+0x8],eax
640088ec:	jmp    0x6400896c
640088ee:	mov    DWORD PTR [edx],ecx
640088f0:	mov    DWORD PTR [ecx+0x8],eax
640088f3:	jmp    0x6400896c
640088f5:	mov    edx,DWORD PTR [edx]
640088f7:	cmp    BYTE PTR [edx+0x44],bl
640088fa:	jne    0x64008913
640088fc:	mov    BYTE PTR [ecx+0x44],0x1
64008900:	mov    BYTE PTR [edx+0x44],0x1
64008904:	mov    edx,DWORD PTR [eax]
64008906:	mov    ecx,DWORD PTR [edx+0x4]
64008909:	mov    BYTE PTR [ecx+0x44],bl
6400890c:	mov    edx,DWORD PTR [eax]
6400890e:	mov    esi,DWORD PTR [edx+0x4]
64008911:	jmp    0x6400896f
64008913:	cmp    esi,DWORD PTR [ecx]
64008915:	jne    0x64008921
64008917:	mov    esi,ecx
64008919:	push   esi
6400891a:	mov    ecx,edi
6400891c:	call   0x64008ca0
64008921:	mov    eax,DWORD PTR [esi+0x4]
64008924:	mov    BYTE PTR [eax+0x44],0x1
64008928:	mov    ecx,DWORD PTR [esi+0x4]
6400892b:	mov    edx,DWORD PTR [ecx+0x4]
6400892e:	mov    BYTE PTR [edx+0x44],bl
64008931:	mov    eax,DWORD PTR [esi+0x4]
64008934:	mov    eax,DWORD PTR [eax+0x4]
64008937:	mov    ecx,DWORD PTR [eax+0x8]
6400893a:	mov    edx,DWORD PTR [ecx]
6400893c:	mov    DWORD PTR [eax+0x8],edx
6400893f:	mov    edx,DWORD PTR [ecx]
64008941:	cmp    BYTE PTR [edx+0x45],bl
64008944:	jne    0x64008949
64008946:	mov    DWORD PTR [edx+0x4],eax
64008949:	mov    edx,DWORD PTR [eax+0x4]
6400894c:	mov    DWORD PTR [ecx+0x4],edx
6400894f:	mov    edx,DWORD PTR [edi+0x4]
64008952:	cmp    eax,DWORD PTR [edx+0x4]
64008955:	jne    0x6400895c
64008957:	mov    DWORD PTR [edx+0x4],ecx
6400895a:	jmp    0x6400896a
6400895c:	mov    edx,DWORD PTR [eax+0x4]
6400895f:	cmp    eax,DWORD PTR [edx]
64008961:	jne    0x64008967
64008963:	mov    DWORD PTR [edx],ecx
64008965:	jmp    0x6400896a
64008967:	mov    DWORD PTR [edx+0x8],ecx
6400896a:	mov    DWORD PTR [ecx],eax
6400896c:	mov    DWORD PTR [eax+0x4],ecx
6400896f:	mov    ecx,DWORD PTR [esi+0x4]
64008972:	cmp    BYTE PTR [ecx+0x44],bl
64008975:	lea    eax,[esi+0x4]
64008978:	je     0x64008847
6400897e:	mov    ecx,DWORD PTR [esp+0x14]
64008982:	mov    edx,DWORD PTR [edi+0x4]
64008985:	mov    eax,DWORD PTR [edx+0x4]
64008988:	mov    BYTE PTR [eax+0x44],0x1
6400898c:	mov    eax,DWORD PTR [ebp+0x8]
6400898f:	mov    DWORD PTR [eax+0x4],ecx
64008992:	mov    DWORD PTR [eax],edi
64008994:	mov    ecx,DWORD PTR [esp+0x60]
64008998:	mov    DWORD PTR fs:0x0,ecx
6400899f:	pop    ecx
640089a0:	pop    edi
640089a1:	pop    esi
640089a2:	pop    ebx
640089a3:	mov    esp,ebp
640089a5:	pop    ebp
640089a6:	ret    0x10
640089a9:	int3   
640089aa:	int3   
640089ab:	int3   
640089ac:	int3   
640089ad:	int3   
640089ae:	int3   
640089af:	int3   
640089b0:	push   ebx
640089b1:	push   ebp
640089b2:	push   esi
640089b3:	mov    esi,DWORD PTR [esp+0x10]
640089b7:	xor    ebx,ebx
640089b9:	cmp    BYTE PTR [esi+0x29],bl
640089bc:	push   edi
640089bd:	mov    ebp,ecx
640089bf:	mov    edi,esi
640089c1:	jne    0x640089ff
640089c3:	mov    eax,DWORD PTR [edi+0x8]
640089c6:	push   eax
640089c7:	mov    ecx,ebp
640089c9:	call   0x640089b0
640089ce:	cmp    DWORD PTR [esi+0x24],0x10
640089d2:	mov    edi,DWORD PTR [edi]
640089d4:	jb     0x640089e2
640089d6:	mov    ecx,DWORD PTR [esi+0x10]
640089d9:	push   ecx
640089da:	call   0x64011d22
640089df:	add    esp,0x4
640089e2:	mov    DWORD PTR [esi+0x24],0xf
640089e9:	mov    DWORD PTR [esi+0x20],ebx
640089ec:	push   esi
640089ed:	mov    BYTE PTR [esi+0x10],bl
640089f0:	call   0x64011d22
640089f5:	add    esp,0x4
640089f8:	cmp    BYTE PTR [edi+0x29],bl
640089fb:	mov    esi,edi
640089fd:	je     0x640089c3
640089ff:	pop    edi
64008a00:	pop    esi
64008a01:	pop    ebp
64008a02:	pop    ebx
64008a03:	ret    0x4
64008a06:	int3   
64008a07:	int3   
64008a08:	int3   
64008a09:	int3   
64008a0a:	int3   
64008a0b:	int3   
64008a0c:	int3   
64008a0d:	int3   
64008a0e:	int3   
64008a0f:	int3   
64008a10:	sub    esp,0x8
64008a13:	mov    eax,DWORD PTR [eax+0x4]
64008a16:	push   esi
64008a17:	mov    esi,DWORD PTR [eax+0x4]
64008a1a:	cmp    BYTE PTR [esi+0x29],0x0
64008a1e:	mov    DWORD PTR [esp+0x4],eax
64008a22:	jne    0x64008a95
64008a24:	mov    edx,DWORD PTR [ecx+0x18]
64008a27:	push   ebx
64008a28:	mov    ebx,DWORD PTR [ecx+0x14]
64008a2b:	push   ebp
64008a2c:	push   edi
64008a2d:	mov    DWORD PTR [esp+0x14],edx
64008a31:	lea    ebp,[ecx+0x4]
64008a34:	cmp    DWORD PTR [esp+0x14],0x10
64008a39:	jb     0x64008a40
64008a3b:	mov    edx,DWORD PTR [ebp+0x0]
64008a3e:	jmp    0x64008a42
64008a40:	mov    edx,ebp
64008a42:	mov    edi,DWORD PTR [esi+0x20]
64008a45:	mov    eax,edi
64008a47:	cmp    eax,edi
64008a49:	jae    0x64008a4b
64008a4b:	cmp    edi,ebx
64008a4d:	mov    ecx,edi
64008a4f:	jb     0x64008a53
64008a51:	mov    ecx,ebx
64008a53:	cmp    DWORD PTR [esi+0x24],0x10
64008a57:	jb     0x64008a5e
64008a59:	mov    eax,DWORD PTR [esi+0x10]
64008a5c:	jmp    0x64008a61
64008a5e:	lea    eax,[esi+0x10]
64008a61:	push   ecx
64008a62:	push   edx
64008a63:	push   eax
64008a64:	call   0x64002c80
64008a69:	add    esp,0xc
64008a6c:	test   eax,eax
64008a6e:	jne    0x64008a7b
64008a70:	cmp    edi,ebx
64008a72:	jb     0x64008a7d
64008a74:	cmp    edi,ebx
64008a76:	setne  al
64008a79:	test   eax,eax
64008a7b:	jge    0x64008a82
64008a7d:	mov    esi,DWORD PTR [esi+0x8]
64008a80:	jmp    0x64008a88
64008a82:	mov    DWORD PTR [esp+0x10],esi
64008a86:	mov    esi,DWORD PTR [esi]
64008a88:	cmp    BYTE PTR [esi+0x29],0x0
64008a8c:	je     0x64008a34
64008a8e:	mov    eax,DWORD PTR [esp+0x10]
64008a92:	pop    edi
64008a93:	pop    ebp
64008a94:	pop    ebx
64008a95:	pop    esi
64008a96:	add    esp,0x8
64008a99:	ret    
64008a9a:	int3   
64008a9b:	int3   
64008a9c:	int3   
64008a9d:	int3   
64008a9e:	int3   
64008a9f:	int3   
64008aa0:	sub    esp,0x10
64008aa3:	mov    ecx,DWORD PTR [ecx+0x4]
64008aa6:	push   edi
64008aa7:	mov    edi,DWORD PTR [ecx+0x4]
64008aaa:	cmp    BYTE PTR [edi+0x29],0x0
64008aae:	mov    DWORD PTR [esp+0x8],ecx
64008ab2:	jne    0x64008b31
64008ab4:	mov    edx,DWORD PTR [eax+0x14]
64008ab7:	mov    ecx,DWORD PTR [eax+0x18]
64008aba:	push   ebx
64008abb:	push   ebp
64008abc:	add    eax,0x4
64008abf:	push   esi
64008ac0:	mov    ebp,edx
64008ac2:	mov    DWORD PTR [esp+0x1c],ecx
64008ac6:	mov    DWORD PTR [esp+0x10],eax
64008aca:	lea    ebx,[ebx+0x0]
64008ad0:	cmp    DWORD PTR [edi+0x24],0x10
64008ad4:	mov    ebx,DWORD PTR [edi+0x20]
64008ad7:	jb     0x64008ade
64008ad9:	mov    edx,DWORD PTR [edi+0x10]
64008adc:	jmp    0x64008ae1
64008ade:	lea    edx,[edi+0x10]
64008ae1:	mov    esi,ebp
64008ae3:	cmp    esi,ebx
64008ae5:	mov    ecx,esi
64008ae7:	jb     0x64008aeb
64008ae9:	mov    ecx,ebx
64008aeb:	cmp    DWORD PTR [esp+0x1c],0x10
64008af0:	mov    eax,DWORD PTR [esp+0x10]
64008af4:	jb     0x64008af8
64008af6:	mov    eax,DWORD PTR [eax]
64008af8:	push   ecx
64008af9:	push   edx
64008afa:	push   eax
64008afb:	call   0x64002c80
64008b00:	add    esp,0xc
64008b03:	test   eax,eax
64008b05:	jne    0x64008b12
64008b07:	cmp    esi,ebx
64008b09:	jb     0x64008b14
64008b0b:	cmp    esi,ebx
64008b0d:	setne  al
64008b10:	test   eax,eax
64008b12:	jge    0x64008b1c
64008b14:	mov    DWORD PTR [esp+0x14],edi
64008b18:	mov    edi,DWORD PTR [edi]
64008b1a:	jmp    0x64008b1f
64008b1c:	mov    edi,DWORD PTR [edi+0x8]
64008b1f:	cmp    BYTE PTR [edi+0x29],0x0
64008b23:	je     0x64008ad0
64008b25:	mov    eax,DWORD PTR [esp+0x14]
64008b29:	pop    esi
64008b2a:	pop    ebp
64008b2b:	pop    ebx
64008b2c:	pop    edi
64008b2d:	add    esp,0x10
64008b30:	ret    
64008b31:	mov    eax,ecx
64008b33:	pop    edi
64008b34:	add    esp,0x10
64008b37:	ret    
64008b38:	int3   
64008b39:	int3   
64008b3a:	int3   
64008b3b:	int3   
64008b3c:	int3   
64008b3d:	int3   
64008b3e:	int3   
64008b3f:	int3   
64008b40:	cmp    DWORD PTR [esi],0x0
64008b43:	jne    0x64008b4a
64008b45:	call   0x640120d8
64008b4a:	mov    eax,DWORD PTR [esi+0x4]
64008b4d:	cmp    BYTE PTR [eax+0x29],0x0
64008b51:	je     0x64008b64
64008b53:	mov    eax,DWORD PTR [eax+0x8]
64008b56:	mov    DWORD PTR [esi+0x4],eax
64008b59:	cmp    BYTE PTR [eax+0x29],0x0
64008b5d:	je     0x64008bb6
64008b5f:	jmp    0x640120d8
64008b64:	mov    ecx,DWORD PTR [eax]
64008b66:	cmp    BYTE PTR [ecx+0x29],0x0
64008b6a:	jne    0x64008b84
64008b6c:	mov    eax,DWORD PTR [ecx+0x8]
64008b6f:	cmp    BYTE PTR [eax+0x29],0x0
64008b73:	jne    0x64008b80
64008b75:	mov    ecx,eax
64008b77:	mov    eax,DWORD PTR [ecx+0x8]
64008b7a:	cmp    BYTE PTR [eax+0x29],0x0
64008b7e:	je     0x64008b75
64008b80:	mov    DWORD PTR [esi+0x4],ecx
64008b83:	ret    
64008b84:	mov    eax,DWORD PTR [eax+0x4]
64008b87:	cmp    BYTE PTR [eax+0x29],0x0
64008b8b:	jne    0x64008ba5
64008b8d:	lea    ecx,[ecx+0x0]
64008b90:	mov    ecx,DWORD PTR [esi+0x4]
64008b93:	cmp    ecx,DWORD PTR [eax]
64008b95:	jne    0x64008ba5
64008b97:	mov    DWORD PTR [esi+0x4],eax
64008b9a:	mov    edx,eax
64008b9c:	mov    eax,DWORD PTR [edx+0x4]
64008b9f:	cmp    BYTE PTR [eax+0x29],0x0
64008ba3:	je     0x64008b90
64008ba5:	mov    ecx,DWORD PTR [esi+0x4]
64008ba8:	cmp    BYTE PTR [ecx+0x29],0x0
64008bac:	je     0x64008bb3
64008bae:	jmp    0x640120d8
64008bb3:	mov    DWORD PTR [esi+0x4],eax
64008bb6:	ret    
64008bb7:	int3   
64008bb8:	int3   
64008bb9:	int3   
64008bba:	int3   
64008bbb:	int3   
64008bbc:	int3   
64008bbd:	int3   
64008bbe:	int3   
64008bbf:	int3   
64008bc0:	push   ecx
64008bc1:	mov    eax,DWORD PTR [ecx+0x4]
64008bc4:	push   esi
64008bc5:	mov    esi,DWORD PTR [eax+0x4]
64008bc8:	cmp    BYTE PTR [esi+0x45],0x0
64008bcc:	mov    DWORD PTR [esp+0x4],eax
64008bd0:	jne    0x64008c47
64008bd2:	mov    eax,DWORD PTR [esp+0xc]
64008bd6:	mov    ecx,DWORD PTR [eax+0x18]
64008bd9:	push   ebx
64008bda:	mov    ebx,DWORD PTR [eax+0x14]
64008bdd:	push   ebp
64008bde:	push   edi
64008bdf:	mov    DWORD PTR [esp+0x18],ecx
64008be3:	lea    ebp,[eax+0x4]
64008be6:	cmp    DWORD PTR [esp+0x18],0x10
64008beb:	jb     0x64008bf2
64008bed:	mov    edx,DWORD PTR [ebp+0x0]
64008bf0:	jmp    0x64008bf4
64008bf2:	mov    edx,ebp
64008bf4:	mov    edi,DWORD PTR [esi+0x20]
64008bf7:	mov    eax,edi
64008bf9:	cmp    eax,edi
64008bfb:	jae    0x64008bfd
64008bfd:	cmp    edi,ebx
64008bff:	mov    ecx,edi
64008c01:	jb     0x64008c05
64008c03:	mov    ecx,ebx
64008c05:	cmp    DWORD PTR [esi+0x24],0x10
64008c09:	jb     0x64008c10
64008c0b:	mov    eax,DWORD PTR [esi+0x10]
64008c0e:	jmp    0x64008c13
64008c10:	lea    eax,[esi+0x10]
64008c13:	push   ecx
64008c14:	push   edx
64008c15:	push   eax
64008c16:	call   0x64002c80
64008c1b:	add    esp,0xc
64008c1e:	test   eax,eax
64008c20:	jne    0x64008c2d
64008c22:	cmp    edi,ebx
64008c24:	jb     0x64008c2f
64008c26:	cmp    edi,ebx
64008c28:	setne  al
64008c2b:	test   eax,eax
64008c2d:	jge    0x64008c34
64008c2f:	mov    esi,DWORD PTR [esi+0x8]
64008c32:	jmp    0x64008c3a
64008c34:	mov    DWORD PTR [esp+0x10],esi
64008c38:	mov    esi,DWORD PTR [esi]
64008c3a:	cmp    BYTE PTR [esi+0x45],0x0
64008c3e:	je     0x64008be6
64008c40:	mov    eax,DWORD PTR [esp+0x10]
64008c44:	pop    edi
64008c45:	pop    ebp
64008c46:	pop    ebx
64008c47:	pop    esi
64008c48:	pop    ecx
64008c49:	ret    0x4
64008c4c:	int3   
64008c4d:	int3   
64008c4e:	int3   
64008c4f:	int3   
64008c50:	mov    edx,DWORD PTR [esp+0x4]
64008c54:	mov    eax,DWORD PTR [edx+0x8]
64008c57:	push   esi
64008c58:	mov    esi,DWORD PTR [eax]
64008c5a:	mov    DWORD PTR [edx+0x8],esi
64008c5d:	mov    esi,DWORD PTR [eax]
64008c5f:	cmp    BYTE PTR [esi+0x45],0x0
64008c63:	jne    0x64008c68
64008c65:	mov    DWORD PTR [esi+0x4],edx
64008c68:	mov    esi,DWORD PTR [edx+0x4]
64008c6b:	mov    DWORD PTR [eax+0x4],esi
64008c6e:	mov    ecx,DWORD PTR [ecx+0x4]
64008c71:	cmp    edx,DWORD PTR [ecx+0x4]
64008c74:	pop    esi
64008c75:	jne    0x64008c82
64008c77:	mov    DWORD PTR [ecx+0x4],eax
64008c7a:	mov    DWORD PTR [eax],edx
64008c7c:	mov    DWORD PTR [edx+0x4],eax
64008c7f:	ret    0x4
64008c82:	mov    ecx,DWORD PTR [edx+0x4]
64008c85:	cmp    edx,DWORD PTR [ecx]
64008c87:	jne    0x64008c93
64008c89:	mov    DWORD PTR [ecx],eax
64008c8b:	mov    DWORD PTR [eax],edx
64008c8d:	mov    DWORD PTR [edx+0x4],eax
64008c90:	ret    0x4
64008c93:	mov    DWORD PTR [ecx+0x8],eax
64008c96:	mov    DWORD PTR [eax],edx
64008c98:	mov    DWORD PTR [edx+0x4],eax
64008c9b:	ret    0x4
64008c9e:	int3   
64008c9f:	int3   
64008ca0:	mov    edx,DWORD PTR [esp+0x4]
64008ca4:	mov    eax,DWORD PTR [edx]
64008ca6:	push   esi
64008ca7:	mov    esi,DWORD PTR [eax+0x8]
64008caa:	mov    DWORD PTR [edx],esi
64008cac:	mov    esi,DWORD PTR [eax+0x8]
64008caf:	cmp    BYTE PTR [esi+0x45],0x0
64008cb3:	jne    0x64008cb8
64008cb5:	mov    DWORD PTR [esi+0x4],edx
64008cb8:	mov    esi,DWORD PTR [edx+0x4]
64008cbb:	mov    DWORD PTR [eax+0x4],esi
64008cbe:	mov    ecx,DWORD PTR [ecx+0x4]
64008cc1:	cmp    edx,DWORD PTR [ecx+0x4]
64008cc4:	pop    esi
64008cc5:	jne    0x64008cd3
64008cc7:	mov    DWORD PTR [ecx+0x4],eax
64008cca:	mov    DWORD PTR [eax+0x8],edx
64008ccd:	mov    DWORD PTR [edx+0x4],eax
64008cd0:	ret    0x4
64008cd3:	mov    ecx,DWORD PTR [edx+0x4]
64008cd6:	cmp    edx,DWORD PTR [ecx+0x8]
64008cd9:	jne    0x64008ce7
64008cdb:	mov    DWORD PTR [ecx+0x8],eax
64008cde:	mov    DWORD PTR [eax+0x8],edx
64008ce1:	mov    DWORD PTR [edx+0x4],eax
64008ce4:	ret    0x4
64008ce7:	mov    DWORD PTR [ecx],eax
64008ce9:	mov    DWORD PTR [eax+0x8],edx
64008cec:	mov    DWORD PTR [edx+0x4],eax
64008cef:	ret    0x4
64008cf2:	int3   
64008cf3:	int3   
64008cf4:	int3   
64008cf5:	int3   
64008cf6:	int3   
64008cf7:	int3   
64008cf8:	int3   
64008cf9:	int3   
64008cfa:	int3   
64008cfb:	int3   
64008cfc:	int3   
64008cfd:	int3   
64008cfe:	int3   
64008cff:	int3   
64008d00:	push   ebp
64008d01:	mov    ebp,esp
64008d03:	push   0xffffffff
64008d05:	push   0x64022181
64008d0a:	mov    eax,fs:0x0
64008d10:	push   eax
64008d11:	sub    esp,0xc
64008d14:	push   ebx
64008d15:	push   esi
64008d16:	push   edi
64008d17:	mov    eax,ds:0x6402c09c
64008d1c:	xor    eax,ebp
64008d1e:	push   eax
64008d1f:	lea    eax,[ebp-0xc]
64008d22:	mov    fs:0x0,eax
64008d28:	mov    DWORD PTR [ebp-0x10],esp
64008d2b:	push   0x48
64008d2d:	call   0x64012101
64008d32:	mov    esi,eax
64008d34:	mov    DWORD PTR [ebp-0x4],0x0
64008d3b:	add    esp,0x4
64008d3e:	mov    DWORD PTR [ebp-0x14],esi
64008d41:	mov    DWORD PTR [ebp-0x18],esi
64008d44:	test   esi,esi
64008d46:	mov    BYTE PTR [ebp-0x4],0x1
64008d4a:	je     0x64008d73
64008d4c:	mov    eax,DWORD PTR [ebp+0x8]
64008d4f:	mov    ecx,DWORD PTR [ebp+0xc]
64008d52:	mov    edx,DWORD PTR [ebp+0x10]
64008d55:	mov    DWORD PTR [esi],eax
64008d57:	mov    eax,DWORD PTR [ebp+0x14]
64008d5a:	mov    DWORD PTR [esi+0x4],ecx
64008d5d:	push   eax
64008d5e:	lea    ecx,[esi+0xc]
64008d61:	mov    DWORD PTR [esi+0x8],edx
64008d64:	call   0x64009340
64008d69:	mov    cl,BYTE PTR [ebp+0x18]
64008d6c:	mov    BYTE PTR [esi+0x44],cl
64008d6f:	mov    BYTE PTR [esi+0x45],0x0
64008d73:	mov    eax,esi
64008d75:	mov    ecx,DWORD PTR [ebp-0xc]
64008d78:	mov    DWORD PTR fs:0x0,ecx
64008d7f:	pop    ecx
64008d80:	pop    edi
64008d81:	pop    esi
64008d82:	pop    ebx
64008d83:	mov    esp,ebp
64008d85:	pop    ebp
64008d86:	ret    0x14
64008d89:	mov    edx,DWORD PTR [ebp-0x14]
64008d8c:	push   edx
64008d8d:	call   0x64011d22
64008d92:	add    esp,0x4
64008d95:	push   0x0
64008d97:	push   0x0
64008d99:	call   0x6401216b
64008d9e:	int3   
64008d9f:	int3   
64008da0:	push   ebx
64008da1:	mov    ebx,DWORD PTR [esp+0x8]
64008da5:	push   esi
64008da6:	mov    esi,ecx
64008da8:	cmp    DWORD PTR [esi+0x14],ebx
64008dab:	push   edi
64008dac:	jae    0x64008db3
64008dae:	call   0x64011cde
64008db3:	mov    eax,DWORD PTR [esi+0x14]
64008db6:	mov    edi,DWORD PTR [esp+0x14]
64008dba:	sub    eax,ebx
64008dbc:	cmp    eax,edi
64008dbe:	jae    0x64008dc2
64008dc0:	mov    edi,eax
64008dc2:	test   edi,edi
64008dc4:	jbe    0x64008e2f
64008dc6:	mov    ecx,DWORD PTR [esi+0x18]
64008dc9:	cmp    ecx,0x8
64008dcc:	push   ebp
64008dcd:	lea    ebp,[esi+0x4]
64008dd0:	jb     0x64008ddb
64008dd2:	mov    edx,DWORD PTR [ebp+0x0]
64008dd5:	mov    DWORD PTR [esp+0x14],edx
64008dd9:	jmp    0x64008ddf
64008ddb:	mov    DWORD PTR [esp+0x14],ebp
64008ddf:	cmp    ecx,0x8
64008de2:	jb     0x64008ded
64008de4:	mov    edx,DWORD PTR [ebp+0x0]
64008de7:	mov    DWORD PTR [esp+0x18],edx
64008deb:	jmp    0x64008df1
64008ded:	mov    DWORD PTR [esp+0x18],ebp
64008df1:	mov    edx,DWORD PTR [esp+0x14]
64008df5:	sub    eax,edi
64008df7:	add    eax,eax
64008df9:	push   eax
64008dfa:	lea    eax,[ebx+edi*1]
64008dfd:	lea    eax,[edx+eax*2]
64008e00:	sub    ecx,ebx
64008e02:	push   eax
64008e03:	add    ecx,ecx
64008e05:	push   ecx
64008e06:	mov    ecx,DWORD PTR [esp+0x24]
64008e0a:	lea    edx,[ecx+ebx*2]
64008e0d:	push   edx
64008e0e:	call   0x64011f53
64008e13:	mov    eax,DWORD PTR [esi+0x14]
64008e16:	sub    eax,edi
64008e18:	add    esp,0x10
64008e1b:	cmp    DWORD PTR [esi+0x18],0x8
64008e1f:	mov    DWORD PTR [esi+0x14],eax
64008e22:	jb     0x64008e27
64008e24:	mov    ebp,DWORD PTR [ebp+0x0]
64008e27:	mov    WORD PTR [ebp+eax*2+0x0],0x0
64008e2e:	pop    ebp
64008e2f:	pop    edi
64008e30:	mov    eax,esi
64008e32:	pop    esi
64008e33:	pop    ebx
64008e34:	ret    0x8
64008e37:	int3   
64008e38:	int3   
64008e39:	int3   
64008e3a:	int3   
64008e3b:	int3   
64008e3c:	int3   
64008e3d:	int3   
64008e3e:	int3   
64008e3f:	int3   
64008e40:	mov    eax,DWORD PTR [ecx+0x4]
64008e43:	push   ebp
64008e44:	push   esi
64008e45:	mov    esi,DWORD PTR [eax+0x4]
64008e48:	cmp    BYTE PTR [esi+0x45],0x0
64008e4c:	mov    ebp,eax
64008e4e:	jne    0x64008e96
64008e50:	push   ebx
64008e51:	push   edi
64008e52:	mov    edi,DWORD PTR [esp+0x14]
64008e56:	lea    ebx,[edi+0x4]
64008e59:	lea    esp,[esp+0x0]
64008e60:	cmp    DWORD PTR [edi+0x18],0x8
64008e64:	mov    edx,DWORD PTR [edi+0x14]
64008e67:	lea    ecx,[esi+0xc]
64008e6a:	jb     0x64008e70
64008e6c:	mov    eax,DWORD PTR [ebx]
64008e6e:	jmp    0x64008e72
64008e70:	mov    eax,ebx
64008e72:	push   edx
64008e73:	push   eax
64008e74:	mov    eax,DWORD PTR [ecx+0x14]
64008e77:	push   eax
64008e78:	push   0x0
64008e7a:	call   0x6400a0c0
64008e7f:	test   eax,eax
64008e81:	jge    0x64008e88
64008e83:	mov    esi,DWORD PTR [esi+0x8]
64008e86:	jmp    0x64008e8c
64008e88:	mov    ebp,esi
64008e8a:	mov    esi,DWORD PTR [esi]
64008e8c:	cmp    BYTE PTR [esi+0x45],0x0
64008e90:	je     0x64008e60
64008e92:	pop    edi
64008e93:	mov    eax,ebp
64008e95:	pop    ebx
64008e96:	pop    esi
64008e97:	pop    ebp
64008e98:	ret    0x4
64008e9b:	int3   
64008e9c:	int3   
64008e9d:	int3   
64008e9e:	int3   
64008e9f:	int3   
64008ea0:	push   ebp
64008ea1:	mov    ebp,esp
64008ea3:	push   0xffffffff
64008ea5:	push   0x640224a1
64008eaa:	mov    eax,fs:0x0
64008eb0:	push   eax
64008eb1:	sub    esp,0xc
64008eb4:	push   ebx
64008eb5:	push   esi
64008eb6:	push   edi
64008eb7:	mov    eax,ds:0x6402c09c
64008ebc:	xor    eax,ebp
64008ebe:	push   eax
64008ebf:	lea    eax,[ebp-0xc]
64008ec2:	mov    fs:0x0,eax
64008ec8:	mov    DWORD PTR [ebp-0x10],esp
64008ecb:	push   0x48
64008ecd:	call   0x64012101
64008ed2:	mov    esi,eax
64008ed4:	mov    DWORD PTR [ebp-0x4],0x0
64008edb:	add    esp,0x4
64008ede:	mov    DWORD PTR [ebp-0x14],esi
64008ee1:	mov    DWORD PTR [ebp-0x18],esi
64008ee4:	test   esi,esi
64008ee6:	mov    BYTE PTR [ebp-0x4],0x1
64008eea:	je     0x64008f13
64008eec:	mov    eax,DWORD PTR [ebp+0x8]
64008eef:	mov    ecx,DWORD PTR [ebp+0xc]
64008ef2:	mov    edx,DWORD PTR [ebp+0x10]
64008ef5:	mov    DWORD PTR [esi],eax
64008ef7:	mov    eax,DWORD PTR [ebp+0x14]
64008efa:	mov    DWORD PTR [esi+0x4],ecx
64008efd:	push   eax
64008efe:	lea    ecx,[esi+0xc]
64008f01:	mov    DWORD PTR [esi+0x8],edx
64008f04:	call   0x640093c0
64008f09:	mov    cl,BYTE PTR [ebp+0x18]
64008f0c:	mov    BYTE PTR [esi+0x44],cl
64008f0f:	mov    BYTE PTR [esi+0x45],0x0
64008f13:	mov    eax,esi
64008f15:	mov    ecx,DWORD PTR [ebp-0xc]
64008f18:	mov    DWORD PTR fs:0x0,ecx
64008f1f:	pop    ecx
64008f20:	pop    edi
64008f21:	pop    esi
64008f22:	pop    ebx
64008f23:	mov    esp,ebp
64008f25:	pop    ebp
64008f26:	ret    0x14
64008f29:	mov    edx,DWORD PTR [ebp-0x14]
64008f2c:	push   edx
64008f2d:	call   0x64011d22
64008f32:	add    esp,0x4
64008f35:	push   0x0
64008f37:	push   0x0
64008f39:	call   0x6401216b
64008f3e:	int3   
64008f3f:	int3   
64008f40:	push   ebp
64008f41:	mov    ebp,esp
64008f43:	and    esp,0xfffffff8
64008f46:	sub    esp,0x14
64008f49:	push   ebx
64008f4a:	push   esi
64008f4b:	push   edi
64008f4c:	mov    edi,ecx
64008f4e:	mov    eax,DWORD PTR [edi+0x4]
64008f51:	mov    ebx,DWORD PTR [eax]
64008f53:	mov    eax,DWORD PTR [ebp+0xc]
64008f56:	test   eax,eax
64008f58:	je     0x64008f5e
64008f5a:	cmp    eax,edi
64008f5c:	je     0x64008f63
64008f5e:	call   0x640120d8
64008f63:	mov    esi,DWORD PTR [ebp+0x10]
64008f66:	cmp    esi,ebx
64008f68:	jne    0x64008fc0
64008f6a:	mov    eax,DWORD PTR [ebp+0x14]
64008f6d:	test   eax,eax
64008f6f:	mov    ebx,DWORD PTR [edi+0x4]
64008f72:	je     0x64008f78
64008f74:	cmp    eax,edi
64008f76:	je     0x64008f7d
64008f78:	call   0x640120d8
64008f7d:	cmp    DWORD PTR [ebp+0x18],ebx
64008f80:	jne    0x64008fc0
64008f82:	mov    ecx,DWORD PTR [edi+0x4]
64008f85:	mov    edx,DWORD PTR [ecx+0x4]
64008f88:	push   edx
64008f89:	mov    ecx,edi
64008f8b:	call   0x64009b40
64008f90:	mov    eax,DWORD PTR [edi+0x4]
64008f93:	mov    DWORD PTR [eax+0x4],eax
64008f96:	mov    eax,DWORD PTR [edi+0x4]
64008f99:	mov    DWORD PTR [edi+0x8],0x0
64008fa0:	mov    DWORD PTR [eax],eax
64008fa2:	mov    eax,DWORD PTR [edi+0x4]
64008fa5:	mov    DWORD PTR [eax+0x8],eax
64008fa8:	mov    eax,DWORD PTR [edi+0x4]
64008fab:	mov    ecx,DWORD PTR [eax]
64008fad:	mov    eax,DWORD PTR [ebp+0x8]
64008fb0:	mov    DWORD PTR [eax+0x4],ecx
64008fb3:	mov    DWORD PTR [eax],edi
64008fb5:	pop    edi
64008fb6:	pop    esi
64008fb7:	pop    ebx
64008fb8:	mov    esp,ebp
64008fba:	pop    ebp
64008fbb:	ret    0x14
64008fbe:	mov    edi,edi
64008fc0:	mov    ebx,DWORD PTR [ebp+0xc]
64008fc3:	test   ebx,ebx
64008fc5:	je     0x64008fcc
64008fc7:	cmp    ebx,DWORD PTR [ebp+0x14]
64008fca:	je     0x64008fd1
64008fcc:	call   0x640120d8
64008fd1:	cmp    esi,DWORD PTR [ebp+0x18]
64008fd4:	je     0x6400903e
64008fd6:	test   ebx,ebx
64008fd8:	mov    DWORD PTR [esp+0x14],esi
64008fdc:	jne    0x64008fe3
64008fde:	call   0x640120d8
64008fe3:	cmp    BYTE PTR [esi+0x45],0x0
64008fe7:	je     0x64008ff0
64008fe9:	call   0x640120d8
64008fee:	jmp    0x6400902a
64008ff0:	mov    eax,DWORD PTR [esi+0x8]
64008ff3:	cmp    BYTE PTR [eax+0x45],0x0
64008ff7:	jne    0x6400900f
64008ff9:	mov    esi,eax
64008ffb:	mov    eax,DWORD PTR [esi]
64008ffd:	cmp    BYTE PTR [eax+0x45],0x0
64009001:	jne    0x6400902a
64009003:	mov    esi,eax
64009005:	mov    eax,DWORD PTR [esi]
64009007:	cmp    BYTE PTR [eax+0x45],0x0
6400900b:	je     0x64009003
6400900d:	jmp    0x6400902a
6400900f:	mov    eax,DWORD PTR [esi+0x4]
64009012:	cmp    BYTE PTR [eax+0x45],0x0
64009016:	jne    0x64009028
64009018:	cmp    esi,DWORD PTR [eax+0x8]
6400901b:	jne    0x64009028
6400901d:	mov    esi,eax
6400901f:	mov    eax,DWORD PTR [eax+0x4]
64009022:	cmp    BYTE PTR [eax+0x45],0x0
64009026:	je     0x64009018
64009028:	mov    esi,eax
6400902a:	mov    edx,DWORD PTR [esp+0x14]
6400902e:	push   edx
6400902f:	push   ebx
64009030:	lea    eax,[esp+0x20]
64009034:	push   eax
64009035:	mov    ecx,edi
64009037:	call   0x64009440
6400903c:	jmp    0x64008fc0
6400903e:	mov    eax,DWORD PTR [ebp+0x8]
64009041:	pop    edi
64009042:	mov    DWORD PTR [eax+0x4],esi
64009045:	pop    esi
64009046:	mov    DWORD PTR [eax],ebx
64009048:	pop    ebx
64009049:	mov    esp,ebp
6400904b:	pop    ebp
6400904c:	ret    0x14
6400904f:	int3   
64009050:	push   ebp
64009051:	mov    ebp,esp
64009053:	push   0xffffffff
64009055:	push   0x64022150
6400905a:	mov    eax,fs:0x0
64009060:	push   eax
64009061:	sub    esp,0xc
64009064:	push   ebx
64009065:	push   esi
64009066:	push   edi
64009067:	mov    eax,ds:0x6402c09c
6400906c:	xor    eax,ebp
6400906e:	push   eax
6400906f:	lea    eax,[ebp-0xc]
64009072:	mov    fs:0x0,eax
64009078:	mov    DWORD PTR [ebp-0x10],esp
6400907b:	mov    edi,ecx
6400907d:	mov    DWORD PTR [ebp-0x14],edi
64009080:	mov    eax,DWORD PTR [ebp+0x8]
64009083:	mov    esi,eax
64009085:	or     esi,0x7
64009088:	cmp    esi,0x7ffffffe
6400908e:	jbe    0x64009094
64009090:	mov    esi,eax
64009092:	jmp    0x640090b6
64009094:	mov    ebx,DWORD PTR [edi+0x18]
64009097:	mov    eax,0xaaaaaaab
6400909c:	mul    esi
6400909e:	mov    ecx,ebx
640090a0:	shr    ecx,1
640090a2:	shr    edx,1
640090a4:	cmp    edx,ecx
640090a6:	jae    0x640090b6
640090a8:	mov    eax,0x7ffffffe
640090ad:	sub    eax,ecx
640090af:	cmp    ebx,eax
640090b1:	ja     0x640090b6
640090b3:	lea    esi,[ecx+ebx*1]
640090b6:	lea    ecx,[esi+0x1]
640090b9:	push   ecx
640090ba:	mov    ecx,edi
640090bc:	mov    DWORD PTR [ebp-0x4],0x0
640090c3:	call   0x64009760
640090c8:	mov    DWORD PTR [ebp+0x8],eax
640090cb:	jmp    0x640090f5
640090cd:	mov    eax,DWORD PTR [ebp+0x8]
640090d0:	mov    ecx,DWORD PTR [ebp-0x14]
640090d3:	mov    DWORD PTR [ebp-0x18],eax
640090d6:	add    eax,0x1
640090d9:	mov    DWORD PTR [ebp-0x10],esp
640090dc:	push   eax
640090dd:	mov    BYTE PTR [ebp-0x4],0x2
640090e1:	call   0x64009760
640090e6:	mov    DWORD PTR [ebp+0x8],eax
640090e9:	mov    eax,0x640090ef
640090ee:	ret    
640090ef:	mov    edi,DWORD PTR [ebp-0x14]
640090f2:	mov    esi,DWORD PTR [ebp-0x18]
640090f5:	mov    ebx,DWORD PTR [ebp+0xc]
640090f8:	test   ebx,ebx
640090fa:	jbe    0x64009120
640090fc:	cmp    DWORD PTR [edi+0x18],0x8
64009100:	jb     0x64009107
64009102:	mov    eax,DWORD PTR [edi+0x4]
64009105:	jmp    0x6400910a
64009107:	lea    eax,[edi+0x4]
6400910a:	mov    ecx,DWORD PTR [ebp+0x8]
6400910d:	lea    edx,[ebx+ebx*1]
64009110:	push   edx
64009111:	push   eax
64009112:	lea    eax,[esi+esi*1+0x2]
64009116:	push   eax
64009117:	push   ecx
64009118:	call   0x64011ed8
6400911d:	add    esp,0x10
64009120:	cmp    DWORD PTR [edi+0x18],0x8
64009124:	jb     0x64009132
64009126:	mov    edx,DWORD PTR [edi+0x4]
64009129:	push   edx
6400912a:	call   0x64011d22
6400912f:	add    esp,0x4
64009132:	cmp    esi,0x8
64009135:	mov    ecx,DWORD PTR [ebp+0x8]
64009138:	lea    eax,[edi+0x4]
6400913b:	mov    WORD PTR [eax],0x0
64009140:	mov    DWORD PTR [eax],ecx
64009142:	mov    DWORD PTR [edi+0x18],esi
64009145:	mov    DWORD PTR [edi+0x14],ebx
64009148:	jb     0x6400914c
6400914a:	mov    eax,ecx
6400914c:	mov    WORD PTR [eax+ebx*2],0x0
64009152:	mov    ecx,DWORD PTR [ebp-0xc]
64009155:	mov    DWORD PTR fs:0x0,ecx
6400915c:	pop    ecx
6400915d:	pop    edi
6400915e:	pop    esi
6400915f:	pop    ebx
64009160:	mov    esp,ebp
64009162:	pop    ebp
64009163:	ret    0x8
64009166:	mov    esi,DWORD PTR [ebp-0x14]
64009169:	cmp    DWORD PTR [esi+0x18],0x8
6400916d:	jb     0x6400917b
6400916f:	mov    eax,DWORD PTR [esi+0x4]
64009172:	push   eax
64009173:	call   0x64011d22
64009178:	add    esp,0x4
6400917b:	xor    eax,eax
6400917d:	push   eax
6400917e:	mov    DWORD PTR [esi+0x18],0x7
64009185:	mov    DWORD PTR [esi+0x14],eax
64009188:	push   eax
64009189:	mov    WORD PTR [esi+0x4],ax
6400918d:	call   0x6401216b
64009192:	int3   
64009193:	int3   
64009194:	int3   
64009195:	int3   
64009196:	int3   
64009197:	int3   
64009198:	int3   
64009199:	int3   
6400919a:	int3   
6400919b:	int3   
6400919c:	int3   
6400919d:	int3   
6400919e:	int3   
6400919f:	int3   
640091a0:	push   ebp
640091a1:	mov    ebp,esp
640091a3:	and    esp,0xfffffff8
640091a6:	sub    esp,0x14
640091a9:	push   ebx
640091aa:	push   esi
640091ab:	push   edi
640091ac:	mov    edi,ecx
640091ae:	mov    eax,DWORD PTR [edi+0x4]
640091b1:	mov    ebx,DWORD PTR [eax]
640091b3:	mov    eax,DWORD PTR [ebp+0xc]
640091b6:	test   eax,eax
640091b8:	je     0x640091be
640091ba:	cmp    eax,edi
640091bc:	je     0x640091c3
640091be:	call   0x640120d8
640091c3:	mov    esi,DWORD PTR [ebp+0x10]
640091c6:	cmp    esi,ebx
640091c8:	jne    0x64009220
640091ca:	mov    eax,DWORD PTR [ebp+0x14]
640091cd:	test   eax,eax
640091cf:	mov    ebx,DWORD PTR [edi+0x4]
640091d2:	je     0x640091d8
640091d4:	cmp    eax,edi
640091d6:	je     0x640091dd
640091d8:	call   0x640120d8
640091dd:	cmp    DWORD PTR [ebp+0x18],ebx
640091e0:	jne    0x64009220
640091e2:	mov    ecx,DWORD PTR [edi+0x4]
640091e5:	mov    edx,DWORD PTR [ecx+0x4]
640091e8:	push   edx
640091e9:	mov    ecx,edi
640091eb:	call   0x64009bc0
640091f0:	mov    eax,DWORD PTR [edi+0x4]
640091f3:	mov    DWORD PTR [eax+0x4],eax
640091f6:	mov    eax,DWORD PTR [edi+0x4]
640091f9:	mov    DWORD PTR [edi+0x8],0x0
64009200:	mov    DWORD PTR [eax],eax
64009202:	mov    eax,DWORD PTR [edi+0x4]
64009205:	mov    DWORD PTR [eax+0x8],eax
64009208:	mov    eax,DWORD PTR [edi+0x4]
6400920b:	mov    ecx,DWORD PTR [eax]
6400920d:	mov    eax,DWORD PTR [ebp+0x8]
64009210:	mov    DWORD PTR [eax+0x4],ecx
64009213:	mov    DWORD PTR [eax],edi
64009215:	pop    edi
64009216:	pop    esi
64009217:	pop    ebx
64009218:	mov    esp,ebp
6400921a:	pop    ebp
6400921b:	ret    0x14
6400921e:	mov    edi,edi
64009220:	mov    ebx,DWORD PTR [ebp+0xc]
64009223:	test   ebx,ebx
64009225:	je     0x6400922c
64009227:	cmp    ebx,DWORD PTR [ebp+0x14]
6400922a:	je     0x64009231
6400922c:	call   0x640120d8
64009231:	cmp    esi,DWORD PTR [ebp+0x18]
64009234:	je     0x6400929e
64009236:	test   ebx,ebx
64009238:	mov    DWORD PTR [esp+0x14],esi
6400923c:	jne    0x64009243
6400923e:	call   0x640120d8
64009243:	cmp    BYTE PTR [esi+0x45],0x0
64009247:	je     0x64009250
64009249:	call   0x640120d8
6400924e:	jmp    0x6400928a
64009250:	mov    eax,DWORD PTR [esi+0x8]
64009253:	cmp    BYTE PTR [eax+0x45],0x0
64009257:	jne    0x6400926f
64009259:	mov    esi,eax
6400925b:	mov    eax,DWORD PTR [esi]
6400925d:	cmp    BYTE PTR [eax+0x45],0x0
64009261:	jne    0x6400928a
64009263:	mov    esi,eax
64009265:	mov    eax,DWORD PTR [esi]
64009267:	cmp    BYTE PTR [eax+0x45],0x0
6400926b:	je     0x64009263
6400926d:	jmp    0x6400928a
6400926f:	mov    eax,DWORD PTR [esi+0x4]
64009272:	cmp    BYTE PTR [eax+0x45],0x0
64009276:	jne    0x64009288
64009278:	cmp    esi,DWORD PTR [eax+0x8]
6400927b:	jne    0x64009288
6400927d:	mov    esi,eax
6400927f:	mov    eax,DWORD PTR [eax+0x4]
64009282:	cmp    BYTE PTR [eax+0x45],0x0
64009286:	je     0x64009278
64009288:	mov    esi,eax
6400928a:	mov    edx,DWORD PTR [esp+0x14]
6400928e:	push   edx
6400928f:	push   ebx
64009290:	lea    eax,[esp+0x20]
64009294:	push   eax
64009295:	mov    ecx,edi
64009297:	call   0x640097c0
6400929c:	jmp    0x64009220
6400929e:	mov    eax,DWORD PTR [ebp+0x8]
640092a1:	pop    edi
640092a2:	mov    DWORD PTR [eax+0x4],esi
640092a5:	pop    esi
640092a6:	mov    DWORD PTR [eax],ebx
640092a8:	pop    ebx
640092a9:	mov    esp,ebp
640092ab:	pop    ebp
640092ac:	ret    0x14
640092af:	int3   
640092b0:	push   esi
640092b1:	mov    esi,ecx
640092b3:	cmp    DWORD PTR [esi],0x0
640092b6:	jne    0x640092bd
640092b8:	call   0x640120d8
640092bd:	mov    eax,DWORD PTR [esi+0x4]
640092c0:	cmp    BYTE PTR [eax+0x45],0x0
640092c4:	je     0x640092d8
640092c6:	mov    eax,DWORD PTR [eax+0x8]
640092c9:	mov    DWORD PTR [esi+0x4],eax
640092cc:	cmp    BYTE PTR [eax+0x45],0x0
640092d0:	je     0x64009337
640092d2:	pop    esi
640092d3:	jmp    0x640120d8
640092d8:	mov    ecx,DWORD PTR [eax]
640092da:	cmp    BYTE PTR [ecx+0x45],0x0
640092de:	jne    0x64009300
640092e0:	mov    eax,DWORD PTR [ecx+0x8]
640092e3:	cmp    BYTE PTR [eax+0x45],0x0
640092e7:	jne    0x640092fb
640092e9:	lea    esp,[esp+0x0]
640092f0:	mov    ecx,eax
640092f2:	mov    eax,DWORD PTR [ecx+0x8]
640092f5:	cmp    BYTE PTR [eax+0x45],0x0
640092f9:	je     0x640092f0
640092fb:	mov    DWORD PTR [esi+0x4],ecx
640092fe:	pop    esi
640092ff:	ret    
64009300:	mov    eax,DWORD PTR [eax+0x4]
64009303:	cmp    BYTE PTR [eax+0x45],0x0
64009307:	jne    0x64009325
64009309:	lea    esp,[esp+0x0]
64009310:	mov    ecx,DWORD PTR [esi+0x4]
64009313:	cmp    ecx,DWORD PTR [eax]
64009315:	jne    0x64009325
64009317:	mov    DWORD PTR [esi+0x4],eax
6400931a:	mov    edx,eax
6400931c:	mov    eax,DWORD PTR [edx+0x4]
6400931f:	cmp    BYTE PTR [eax+0x45],0x0
64009323:	je     0x64009310
64009325:	mov    ecx,DWORD PTR [esi+0x4]
64009328:	cmp    BYTE PTR [ecx+0x45],0x0
6400932c:	je     0x64009334
6400932e:	pop    esi
6400932f:	jmp    0x640120d8
64009334:	mov    DWORD PTR [esi+0x4],eax
64009337:	pop    esi
64009338:	ret    
64009339:	int3   
6400933a:	int3   
6400933b:	int3   
6400933c:	int3   
6400933d:	int3   
6400933e:	int3   
6400933f:	int3   
64009340:	push   0xffffffff
64009342:	push   0x64022128
64009347:	mov    eax,fs:0x0
6400934d:	push   eax
6400934e:	push   ecx
6400934f:	push   ebx
64009350:	push   esi
64009351:	push   edi
64009352:	mov    eax,ds:0x6402c09c
64009357:	xor    eax,esp
64009359:	push   eax
6400935a:	lea    eax,[esp+0x14]
6400935e:	mov    fs:0x0,eax
64009364:	mov    esi,ecx
64009366:	mov    DWORD PTR [esp+0x10],esi
6400936a:	mov    edi,DWORD PTR [esp+0x24]
6400936e:	xor    ebx,ebx
64009370:	push   0xffffffff
64009372:	push   ebx
64009373:	mov    DWORD PTR [esi+0x18],0xf
6400937a:	mov    DWORD PTR [esi+0x14],ebx
6400937d:	push   edi
6400937e:	mov    BYTE PTR [esi+0x4],bl
64009381:	call   0x64001780
64009386:	push   0xffffffff
64009388:	lea    ecx,[esi+0x1c]
6400938b:	mov    DWORD PTR [esp+0x20],ebx
6400938f:	lea    eax,[edi+0x1c]
64009392:	push   ebx
64009393:	mov    DWORD PTR [ecx+0x18],0xf
6400939a:	mov    DWORD PTR [ecx+0x14],ebx
6400939d:	push   eax
6400939e:	mov    BYTE PTR [ecx+0x4],bl
640093a1:	call   0x64001780
640093a6:	mov    eax,esi
640093a8:	mov    ecx,DWORD PTR [esp+0x14]
640093ac:	mov    DWORD PTR fs:0x0,ecx
640093b3:	pop    ecx
640093b4:	pop    edi
640093b5:	pop    esi
640093b6:	pop    ebx
640093b7:	add    esp,0x10
640093ba:	ret    0x4
640093bd:	int3   
640093be:	int3   
640093bf:	int3   
640093c0:	push   0xffffffff
640093c2:	push   0x64022468
640093c7:	mov    eax,fs:0x0
640093cd:	push   eax
640093ce:	push   ecx
640093cf:	push   ebx
640093d0:	push   esi
640093d1:	push   edi
640093d2:	mov    eax,ds:0x6402c09c
640093d7:	xor    eax,esp
640093d9:	push   eax
640093da:	lea    eax,[esp+0x14]
640093de:	mov    fs:0x0,eax
640093e4:	mov    esi,ecx
640093e6:	mov    DWORD PTR [esp+0x10],esi
640093ea:	mov    ebx,DWORD PTR [esp+0x24]
640093ee:	xor    edi,edi
640093f0:	push   0xffffffff
640093f2:	push   edi
640093f3:	mov    DWORD PTR [esi+0x18],0x7
640093fa:	mov    DWORD PTR [esi+0x14],edi
640093fd:	push   ebx
640093fe:	mov    WORD PTR [esi+0x4],di
64009402:	call   0x64008590
64009407:	push   0xffffffff
64009409:	lea    ecx,[esi+0x1c]
6400940c:	mov    DWORD PTR [esp+0x20],edi
64009410:	lea    eax,[ebx+0x1c]
64009413:	push   edi
64009414:	mov    DWORD PTR [ecx+0x18],0x7
6400941b:	mov    DWORD PTR [ecx+0x14],edi
6400941e:	push   eax
6400941f:	mov    WORD PTR [ecx+0x4],di
64009423:	call   0x64008590
64009428:	mov    eax,esi
6400942a:	mov    ecx,DWORD PTR [esp+0x14]
6400942e:	mov    DWORD PTR fs:0x0,ecx
64009435:	pop    ecx
64009436:	pop    edi
64009437:	pop    esi
64009438:	pop    ebx
64009439:	add    esp,0x10
6400943c:	ret    0x4
6400943f:	int3   
64009440:	push   ebp
64009441:	mov    ebp,esp
64009443:	and    esp,0xfffffff8
64009446:	push   0xffffffff
64009448:	push   0x64022588
6400944d:	mov    eax,fs:0x0
64009453:	push   eax
64009454:	sub    esp,0x50
64009457:	push   ebx
64009458:	push   esi
64009459:	push   edi
6400945a:	mov    eax,ds:0x6402c09c
6400945f:	xor    eax,esp
64009461:	push   eax
64009462:	lea    eax,[esp+0x60]
64009466:	mov    fs:0x0,eax
6400946c:	mov    DWORD PTR [esp+0x14],ecx
64009470:	mov    edi,DWORD PTR [ebp+0x10]
64009473:	cmp    BYTE PTR [edi+0x45],0x0
64009477:	je     0x640094c5
64009479:	push   0x1b
6400947b:	xor    esi,esi
6400947d:	push   0x64027f40
64009482:	lea    ecx,[esp+0x20]
64009486:	mov    DWORD PTR [esp+0x38],0xf
6400948e:	mov    DWORD PTR [esp+0x34],esi
64009492:	mov    BYTE PTR [esp+0x24],0x0
64009497:	call   0x64001860
6400949c:	lea    eax,[esp+0x18]
640094a0:	push   eax
640094a1:	lea    ecx,[esp+0x38]
640094a5:	mov    DWORD PTR [esp+0x6c],esi
640094a9:	call   0x64002d10
640094ae:	push   0x64029d2c
640094b3:	lea    ecx,[esp+0x38]
640094b7:	push   ecx
640094b8:	mov    DWORD PTR [esp+0x3c],0x64024280
640094c0:	call   0x6401216b
640094c5:	lea    ecx,[ebp+0xc]
640094c8:	call   0x64009c60
640094cd:	mov    ecx,DWORD PTR [edi]
640094cf:	cmp    BYTE PTR [ecx+0x45],0x0
640094d3:	je     0x640094da
640094d5:	mov    ebx,DWORD PTR [edi+0x8]
640094d8:	jmp    0x640094f1
640094da:	mov    edx,DWORD PTR [edi+0x8]
640094dd:	cmp    BYTE PTR [edx+0x45],0x0
640094e1:	je     0x640094e7
640094e3:	mov    ebx,ecx
640094e5:	jmp    0x640094f1
640094e7:	mov    eax,DWORD PTR [ebp+0x10]
640094ea:	cmp    eax,edi
640094ec:	mov    ebx,DWORD PTR [eax+0x8]
640094ef:	jne    0x6400956d
640094f1:	cmp    BYTE PTR [ebx+0x45],0x0
640094f5:	mov    esi,DWORD PTR [edi+0x4]
640094f8:	jne    0x640094fd
640094fa:	mov    DWORD PTR [ebx+0x4],esi
640094fd:	mov    ecx,DWORD PTR [esp+0x14]
64009501:	mov    eax,DWORD PTR [ecx+0x4]
64009504:	cmp    DWORD PTR [eax+0x4],edi
64009507:	jne    0x6400950e
64009509:	mov    DWORD PTR [eax+0x4],ebx
6400950c:	jmp    0x64009519
6400950e:	cmp    DWORD PTR [esi],edi
64009510:	jne    0x64009516
64009512:	mov    DWORD PTR [esi],ebx
64009514:	jmp    0x64009519
64009516:	mov    DWORD PTR [esi+0x8],ebx
64009519:	mov    eax,DWORD PTR [ecx+0x4]
6400951c:	cmp    DWORD PTR [eax],edi
6400951e:	jne    0x6400953c
64009520:	cmp    BYTE PTR [ebx+0x45],0x0
64009524:	je     0x6400952a
64009526:	mov    eax,esi
64009528:	jmp    0x64009537
6400952a:	push   ebx
6400952b:	call   0x64009c40
64009530:	mov    ecx,DWORD PTR [esp+0x18]
64009534:	add    esp,0x4
64009537:	mov    edx,DWORD PTR [ecx+0x4]
6400953a:	mov    DWORD PTR [edx],eax
6400953c:	mov    eax,DWORD PTR [ecx+0x4]
6400953f:	cmp    DWORD PTR [eax+0x8],edi
64009542:	jne    0x640095cc
64009548:	cmp    BYTE PTR [ebx+0x45],0x0
6400954c:	je     0x64009558
6400954e:	mov    edx,DWORD PTR [ecx+0x4]
64009551:	mov    eax,esi
64009553:	mov    DWORD PTR [edx+0x8],eax
64009556:	jmp    0x640095cc
64009558:	push   ebx
64009559:	call   0x64009ae0
6400955e:	mov    ecx,DWORD PTR [esp+0x18]
64009562:	mov    edx,DWORD PTR [ecx+0x4]
64009565:	add    esp,0x4
64009568:	mov    DWORD PTR [edx+0x8],eax
6400956b:	jmp    0x640095cc
6400956d:	mov    DWORD PTR [ecx+0x4],eax
64009570:	mov    ecx,DWORD PTR [edi]
64009572:	mov    DWORD PTR [eax],ecx
64009574:	cmp    eax,DWORD PTR [edi+0x8]
64009577:	jne    0x6400957d
64009579:	mov    esi,eax
6400957b:	jmp    0x64009597
6400957d:	cmp    BYTE PTR [ebx+0x45],0x0
64009581:	mov    esi,DWORD PTR [eax+0x4]
64009584:	jne    0x64009589
64009586:	mov    DWORD PTR [ebx+0x4],esi
64009589:	mov    DWORD PTR [esi],ebx
6400958b:	mov    edx,DWORD PTR [edi+0x8]
6400958e:	mov    DWORD PTR [eax+0x8],edx
64009591:	mov    ecx,DWORD PTR [edi+0x8]
64009594:	mov    DWORD PTR [ecx+0x4],eax
64009597:	mov    edx,DWORD PTR [esp+0x14]
6400959b:	mov    ecx,DWORD PTR [edx+0x4]
6400959e:	cmp    DWORD PTR [ecx+0x4],edi
640095a1:	jne    0x640095a8
640095a3:	mov    DWORD PTR [ecx+0x4],eax
640095a6:	jmp    0x640095b6
640095a8:	mov    ecx,DWORD PTR [edi+0x4]
640095ab:	cmp    DWORD PTR [ecx],edi
640095ad:	jne    0x640095b3
640095af:	mov    DWORD PTR [ecx],eax
640095b1:	jmp    0x640095b6
640095b3:	mov    DWORD PTR [ecx+0x8],eax
640095b6:	mov    ecx,DWORD PTR [edi+0x4]
640095b9:	mov    DWORD PTR [eax+0x4],ecx
640095bc:	mov    cl,BYTE PTR [eax+0x44]
640095bf:	mov    dl,BYTE PTR [edi+0x44]
640095c2:	mov    BYTE PTR [eax+0x44],dl
640095c5:	mov    BYTE PTR [edi+0x44],cl
640095c8:	mov    ecx,DWORD PTR [esp+0x14]
640095cc:	cmp    BYTE PTR [edi+0x44],0x1
640095d0:	jne    0x640096e1
640095d6:	mov    eax,DWORD PTR [ecx+0x4]
640095d9:	cmp    ebx,DWORD PTR [eax+0x4]
640095dc:	je     0x640096dd
640095e2:	cmp    BYTE PTR [ebx+0x44],0x1
640095e6:	jne    0x640096dd
640095ec:	mov    eax,DWORD PTR [esi]
640095ee:	cmp    ebx,eax
640095f0:	jne    0x64009660
640095f2:	mov    eax,DWORD PTR [esi+0x8]
640095f5:	cmp    BYTE PTR [eax+0x44],0x0
640095f9:	jne    0x64009610
640095fb:	mov    BYTE PTR [eax+0x44],0x1
640095ff:	push   esi
64009600:	mov    BYTE PTR [esi+0x44],0x0
64009604:	call   0x64008c50
64009609:	mov    eax,DWORD PTR [esi+0x8]
6400960c:	mov    ecx,DWORD PTR [esp+0x14]
64009610:	cmp    BYTE PTR [eax+0x45],0x0
64009614:	jne    0x64009695
64009616:	mov    edx,DWORD PTR [eax]
64009618:	cmp    BYTE PTR [edx+0x44],0x1
6400961c:	jne    0x64009627
6400961e:	mov    edx,DWORD PTR [eax+0x8]
64009621:	cmp    BYTE PTR [edx+0x44],0x1
64009625:	je     0x64009691
64009627:	mov    edx,DWORD PTR [eax+0x8]
6400962a:	cmp    BYTE PTR [edx+0x44],0x1
6400962e:	jne    0x64009647
64009630:	mov    edx,DWORD PTR [eax]
64009632:	mov    BYTE PTR [edx+0x44],0x1
64009636:	push   eax
64009637:	mov    BYTE PTR [eax+0x44],0x0
6400963b:	call   0x64008ca0
64009640:	mov    eax,DWORD PTR [esi+0x8]
64009643:	mov    ecx,DWORD PTR [esp+0x14]
64009647:	mov    dl,BYTE PTR [esi+0x44]
6400964a:	mov    BYTE PTR [eax+0x44],dl
6400964d:	mov    BYTE PTR [esi+0x44],0x1
64009651:	mov    eax,DWORD PTR [eax+0x8]
64009654:	push   esi
64009655:	mov    BYTE PTR [eax+0x44],0x1
64009659:	call   0x64008c50
6400965e:	jmp    0x640096dd
64009660:	cmp    BYTE PTR [eax+0x44],0x0
64009664:	jne    0x6400967a
64009666:	mov    BYTE PTR [eax+0x44],0x1
6400966a:	push   esi
6400966b:	mov    BYTE PTR [esi+0x44],0x0
6400966f:	call   0x64008ca0
64009674:	mov    eax,DWORD PTR [esi]
64009676:	mov    ecx,DWORD PTR [esp+0x14]
6400967a:	cmp    BYTE PTR [eax+0x45],0x0
6400967e:	jne    0x64009695
64009680:	mov    edx,DWORD PTR [eax+0x8]
64009683:	cmp    BYTE PTR [edx+0x44],0x1
64009687:	jne    0x640096a8
64009689:	mov    edx,DWORD PTR [eax]
6400968b:	cmp    BYTE PTR [edx+0x44],0x1
6400968f:	jne    0x640096a8
64009691:	mov    BYTE PTR [eax+0x44],0x0
64009695:	mov    eax,DWORD PTR [ecx+0x4]
64009698:	mov    ebx,esi
6400969a:	cmp    ebx,DWORD PTR [eax+0x4]
6400969d:	mov    esi,DWORD PTR [esi+0x4]
640096a0:	jne    0x640095e2
640096a6:	jmp    0x640096dd
640096a8:	mov    edx,DWORD PTR [eax]
640096aa:	cmp    BYTE PTR [edx+0x44],0x1
640096ae:	jne    0x640096c7
640096b0:	mov    edx,DWORD PTR [eax+0x8]
640096b3:	mov    BYTE PTR [edx+0x44],0x1
640096b7:	push   eax
640096b8:	mov    BYTE PTR [eax+0x44],0x0
640096bc:	call   0x64008c50
640096c1:	mov    eax,DWORD PTR [esi]
640096c3:	mov    ecx,DWORD PTR [esp+0x14]
640096c7:	mov    dl,BYTE PTR [esi+0x44]
640096ca:	mov    BYTE PTR [eax+0x44],dl
640096cd:	mov    BYTE PTR [esi+0x44],0x1
640096d1:	mov    eax,DWORD PTR [eax]
640096d3:	push   esi
640096d4:	mov    BYTE PTR [eax+0x44],0x1
640096d8:	call   0x64008ca0
640096dd:	mov    BYTE PTR [ebx+0x44],0x1
640096e1:	cmp    DWORD PTR [edi+0x40],0x10
640096e5:	jb     0x640096f3
640096e7:	mov    ecx,DWORD PTR [edi+0x2c]
640096ea:	push   ecx
640096eb:	call   0x64011d22
640096f0:	add    esp,0x4
640096f3:	xor    esi,esi
640096f5:	mov    ebx,0xf
640096fa:	mov    DWORD PTR [edi+0x40],ebx
640096fd:	mov    DWORD PTR [edi+0x3c],esi
64009700:	mov    BYTE PTR [edi+0x2c],0x0
64009704:	cmp    DWORD PTR [edi+0x24],0x10
64009708:	jb     0x64009716
6400970a:	mov    edx,DWORD PTR [edi+0x10]
6400970d:	push   edx
6400970e:	call   0x64011d22
64009713:	add    esp,0x4
64009716:	mov    DWORD PTR [edi+0x24],ebx
64009719:	mov    DWORD PTR [edi+0x20],esi
6400971c:	push   edi
6400971d:	mov    BYTE PTR [edi+0x10],0x0
64009721:	call   0x64011d22
64009726:	mov    ecx,DWORD PTR [esp+0x18]
6400972a:	mov    eax,DWORD PTR [ecx+0x8]
6400972d:	add    esp,0x4
64009730:	cmp    eax,esi
64009732:	jbe    0x6400973a
64009734:	add    eax,0xffffffff
64009737:	mov    DWORD PTR [ecx+0x8],eax
6400973a:	mov    eax,DWORD PTR [ebp+0x8]
6400973d:	mov    ecx,DWORD PTR [ebp+0xc]
64009740:	mov    edx,DWORD PTR [ebp+0x10]
64009743:	mov    DWORD PTR [eax],ecx
64009745:	mov    DWORD PTR [eax+0x4],edx
64009748:	mov    ecx,DWORD PTR [esp+0x60]
6400974c:	mov    DWORD PTR fs:0x0,ecx
64009753:	pop    ecx
64009754:	pop    edi
64009755:	pop    esi
64009756:	pop    ebx
64009757:	mov    esp,ebp
64009759:	pop    ebp
6400975a:	ret    0xc
6400975d:	int3   
6400975e:	int3   
6400975f:	int3   
64009760:	mov    ecx,DWORD PTR [esp+0x4]
64009764:	sub    esp,0xc
64009767:	test   ecx,ecx
64009769:	ja     0x6400977f
6400976b:	xor    ecx,ecx
6400976d:	lea    edx,[ecx+ecx*1]
64009770:	push   edx
64009771:	call   0x64012101
64009776:	add    esp,0x4
64009779:	add    esp,0xc
6400977c:	ret    0x4
6400977f:	or     eax,0xffffffff
64009782:	xor    edx,edx
64009784:	div    ecx
64009786:	cmp    eax,0x2
64009789:	jae    0x6400976d
6400978b:	lea    eax,[esp+0x10]
6400978f:	push   eax
64009790:	lea    ecx,[esp+0x4]
64009794:	mov    DWORD PTR [esp+0x14],0x0
6400979c:	call   0x64011d7d
640097a1:	push   0x64029c9c
640097a6:	lea    ecx,[esp+0x4]
640097aa:	push   ecx
640097ab:	mov    DWORD PTR [esp+0x8],0x6402425c
640097b3:	call   0x6401216b
640097b8:	int3   
640097b9:	int3   
640097ba:	int3   
640097bb:	int3   
640097bc:	int3   
640097bd:	int3   
640097be:	int3   
640097bf:	int3   
640097c0:	push   ebp
640097c1:	mov    ebp,esp
640097c3:	and    esp,0xfffffff8
640097c6:	push   0xffffffff
640097c8:	push   0x64022558
640097cd:	mov    eax,fs:0x0
640097d3:	push   eax
640097d4:	sub    esp,0x50
640097d7:	push   ebx
640097d8:	push   esi
640097d9:	push   edi
640097da:	mov    eax,ds:0x6402c09c
640097df:	xor    eax,esp
640097e1:	push   eax
640097e2:	lea    eax,[esp+0x60]
640097e6:	mov    fs:0x0,eax
640097ec:	mov    DWORD PTR [esp+0x14],ecx
640097f0:	mov    edi,DWORD PTR [ebp+0x10]
640097f3:	cmp    BYTE PTR [edi+0x45],0x0
640097f7:	je     0x64009845
640097f9:	push   0x1b
640097fb:	xor    esi,esi
640097fd:	push   0x64027f40
64009802:	lea    ecx,[esp+0x20]
64009806:	mov    DWORD PTR [esp+0x38],0xf
6400980e:	mov    DWORD PTR [esp+0x34],esi
64009812:	mov    BYTE PTR [esp+0x24],0x0
64009817:	call   0x64001860
6400981c:	lea    eax,[esp+0x18]
64009820:	push   eax
64009821:	lea    ecx,[esp+0x38]
64009825:	mov    DWORD PTR [esp+0x6c],esi
64009829:	call   0x64002d10
6400982e:	push   0x64029d2c
64009833:	lea    ecx,[esp+0x38]
64009837:	push   ecx
64009838:	mov    DWORD PTR [esp+0x3c],0x64024280
64009840:	call   0x6401216b
64009845:	lea    ecx,[ebp+0xc]
64009848:	call   0x64009c60
6400984d:	mov    ecx,DWORD PTR [edi]
6400984f:	cmp    BYTE PTR [ecx+0x45],0x0
64009853:	je     0x6400985a
64009855:	mov    ebx,DWORD PTR [edi+0x8]
64009858:	jmp    0x64009871
6400985a:	mov    edx,DWORD PTR [edi+0x8]
6400985d:	cmp    BYTE PTR [edx+0x45],0x0
64009861:	je     0x64009867
64009863:	mov    ebx,ecx
64009865:	jmp    0x64009871
64009867:	mov    eax,DWORD PTR [ebp+0x10]
6400986a:	cmp    eax,edi
6400986c:	mov    ebx,DWORD PTR [eax+0x8]
6400986f:	jne    0x640098ed
64009871:	cmp    BYTE PTR [ebx+0x45],0x0
64009875:	mov    esi,DWORD PTR [edi+0x4]
64009878:	jne    0x6400987d
6400987a:	mov    DWORD PTR [ebx+0x4],esi
6400987d:	mov    ecx,DWORD PTR [esp+0x14]
64009881:	mov    eax,DWORD PTR [ecx+0x4]
64009884:	cmp    DWORD PTR [eax+0x4],edi
64009887:	jne    0x6400988e
64009889:	mov    DWORD PTR [eax+0x4],ebx
6400988c:	jmp    0x64009899
6400988e:	cmp    DWORD PTR [esi],edi
64009890:	jne    0x64009896
64009892:	mov    DWORD PTR [esi],ebx
64009894:	jmp    0x64009899
64009896:	mov    DWORD PTR [esi+0x8],ebx
64009899:	mov    eax,DWORD PTR [ecx+0x4]
6400989c:	cmp    DWORD PTR [eax],edi
6400989e:	jne    0x640098bc
640098a0:	cmp    BYTE PTR [ebx+0x45],0x0
640098a4:	je     0x640098aa
640098a6:	mov    eax,esi
640098a8:	jmp    0x640098b7
640098aa:	push   ebx
640098ab:	call   0x64009c40
640098b0:	mov    ecx,DWORD PTR [esp+0x18]
640098b4:	add    esp,0x4
640098b7:	mov    edx,DWORD PTR [ecx+0x4]
640098ba:	mov    DWORD PTR [edx],eax
640098bc:	mov    eax,DWORD PTR [ecx+0x4]
640098bf:	cmp    DWORD PTR [eax+0x8],edi
640098c2:	jne    0x6400994c
640098c8:	cmp    BYTE PTR [ebx+0x45],0x0
640098cc:	je     0x640098d8
640098ce:	mov    edx,DWORD PTR [ecx+0x4]
640098d1:	mov    eax,esi
640098d3:	mov    DWORD PTR [edx+0x8],eax
640098d6:	jmp    0x6400994c
640098d8:	push   ebx
640098d9:	call   0x64009ae0
640098de:	mov    ecx,DWORD PTR [esp+0x18]
640098e2:	mov    edx,DWORD PTR [ecx+0x4]
640098e5:	add    esp,0x4
640098e8:	mov    DWORD PTR [edx+0x8],eax
640098eb:	jmp    0x6400994c
640098ed:	mov    DWORD PTR [ecx+0x4],eax
640098f0:	mov    ecx,DWORD PTR [edi]
640098f2:	mov    DWORD PTR [eax],ecx
640098f4:	cmp    eax,DWORD PTR [edi+0x8]
640098f7:	jne    0x640098fd
640098f9:	mov    esi,eax
640098fb:	jmp    0x64009917
640098fd:	cmp    BYTE PTR [ebx+0x45],0x0
64009901:	mov    esi,DWORD PTR [eax+0x4]
64009904:	jne    0x64009909
64009906:	mov    DWORD PTR [ebx+0x4],esi
64009909:	mov    DWORD PTR [esi],ebx
6400990b:	mov    edx,DWORD PTR [edi+0x8]
6400990e:	mov    DWORD PTR [eax+0x8],edx
64009911:	mov    ecx,DWORD PTR [edi+0x8]
64009914:	mov    DWORD PTR [ecx+0x4],eax
64009917:	mov    edx,DWORD PTR [esp+0x14]
6400991b:	mov    ecx,DWORD PTR [edx+0x4]
6400991e:	cmp    DWORD PTR [ecx+0x4],edi
64009921:	jne    0x64009928
64009923:	mov    DWORD PTR [ecx+0x4],eax
64009926:	jmp    0x64009936
64009928:	mov    ecx,DWORD PTR [edi+0x4]
6400992b:	cmp    DWORD PTR [ecx],edi
6400992d:	jne    0x64009933
6400992f:	mov    DWORD PTR [ecx],eax
64009931:	jmp    0x64009936
64009933:	mov    DWORD PTR [ecx+0x8],eax
64009936:	mov    ecx,DWORD PTR [edi+0x4]
64009939:	mov    DWORD PTR [eax+0x4],ecx
6400993c:	mov    cl,BYTE PTR [eax+0x44]
6400993f:	mov    dl,BYTE PTR [edi+0x44]
64009942:	mov    BYTE PTR [eax+0x44],dl
64009945:	mov    BYTE PTR [edi+0x44],cl
64009948:	mov    ecx,DWORD PTR [esp+0x14]
6400994c:	cmp    BYTE PTR [edi+0x44],0x1
64009950:	jne    0x64009a61
64009956:	mov    eax,DWORD PTR [ecx+0x4]
64009959:	cmp    ebx,DWORD PTR [eax+0x4]
6400995c:	je     0x64009a5d
64009962:	cmp    BYTE PTR [ebx+0x44],0x1
64009966:	jne    0x64009a5d
6400996c:	mov    eax,DWORD PTR [esi]
6400996e:	cmp    ebx,eax
64009970:	jne    0x640099e0
64009972:	mov    eax,DWORD PTR [esi+0x8]
64009975:	cmp    BYTE PTR [eax+0x44],0x0
64009979:	jne    0x64009990
6400997b:	mov    BYTE PTR [eax+0x44],0x1
6400997f:	push   esi
64009980:	mov    BYTE PTR [esi+0x44],0x0
64009984:	call   0x64008c50
64009989:	mov    eax,DWORD PTR [esi+0x8]
6400998c:	mov    ecx,DWORD PTR [esp+0x14]
64009990:	cmp    BYTE PTR [eax+0x45],0x0
64009994:	jne    0x64009a15
64009996:	mov    edx,DWORD PTR [eax]
64009998:	cmp    BYTE PTR [edx+0x44],0x1
6400999c:	jne    0x640099a7
6400999e:	mov    edx,DWORD PTR [eax+0x8]
640099a1:	cmp    BYTE PTR [edx+0x44],0x1
640099a5:	je     0x64009a11
640099a7:	mov    edx,DWORD PTR [eax+0x8]
640099aa:	cmp    BYTE PTR [edx+0x44],0x1
640099ae:	jne    0x640099c7
640099b0:	mov    edx,DWORD PTR [eax]
640099b2:	mov    BYTE PTR [edx+0x44],0x1
640099b6:	push   eax
640099b7:	mov    BYTE PTR [eax+0x44],0x0
640099bb:	call   0x64008ca0
640099c0:	mov    eax,DWORD PTR [esi+0x8]
640099c3:	mov    ecx,DWORD PTR [esp+0x14]
640099c7:	mov    dl,BYTE PTR [esi+0x44]
640099ca:	mov    BYTE PTR [eax+0x44],dl
640099cd:	mov    BYTE PTR [esi+0x44],0x1
640099d1:	mov    eax,DWORD PTR [eax+0x8]
640099d4:	push   esi
640099d5:	mov    BYTE PTR [eax+0x44],0x1
640099d9:	call   0x64008c50
640099de:	jmp    0x64009a5d
640099e0:	cmp    BYTE PTR [eax+0x44],0x0
640099e4:	jne    0x640099fa
640099e6:	mov    BYTE PTR [eax+0x44],0x1
640099ea:	push   esi
640099eb:	mov    BYTE PTR [esi+0x44],0x0
640099ef:	call   0x64008ca0
640099f4:	mov    eax,DWORD PTR [esi]
640099f6:	mov    ecx,DWORD PTR [esp+0x14]
640099fa:	cmp    BYTE PTR [eax+0x45],0x0
640099fe:	jne    0x64009a15
64009a00:	mov    edx,DWORD PTR [eax+0x8]
64009a03:	cmp    BYTE PTR [edx+0x44],0x1
64009a07:	jne    0x64009a28
64009a09:	mov    edx,DWORD PTR [eax]
64009a0b:	cmp    BYTE PTR [edx+0x44],0x1
64009a0f:	jne    0x64009a28
64009a11:	mov    BYTE PTR [eax+0x44],0x0
64009a15:	mov    eax,DWORD PTR [ecx+0x4]
64009a18:	mov    ebx,esi
64009a1a:	cmp    ebx,DWORD PTR [eax+0x4]
64009a1d:	mov    esi,DWORD PTR [esi+0x4]
64009a20:	jne    0x64009962
64009a26:	jmp    0x64009a5d
64009a28:	mov    edx,DWORD PTR [eax]
64009a2a:	cmp    BYTE PTR [edx+0x44],0x1
64009a2e:	jne    0x64009a47
64009a30:	mov    edx,DWORD PTR [eax+0x8]
64009a33:	mov    BYTE PTR [edx+0x44],0x1
64009a37:	push   eax
64009a38:	mov    BYTE PTR [eax+0x44],0x0
64009a3c:	call   0x64008c50
64009a41:	mov    eax,DWORD PTR [esi]
64009a43:	mov    ecx,DWORD PTR [esp+0x14]
64009a47:	mov    dl,BYTE PTR [esi+0x44]
64009a4a:	mov    BYTE PTR [eax+0x44],dl
64009a4d:	mov    BYTE PTR [esi+0x44],0x1
64009a51:	mov    eax,DWORD PTR [eax]
64009a53:	push   esi
64009a54:	mov    BYTE PTR [eax+0x44],0x1
64009a58:	call   0x64008ca0
64009a5d:	mov    BYTE PTR [ebx+0x44],0x1
64009a61:	cmp    DWORD PTR [edi+0x40],0x8
64009a65:	jb     0x64009a73
64009a67:	mov    ecx,DWORD PTR [edi+0x2c]
64009a6a:	push   ecx
64009a6b:	call   0x64011d22
64009a70:	add    esp,0x4
64009a73:	xor    esi,esi
64009a75:	mov    ebx,0x7
64009a7a:	mov    DWORD PTR [edi+0x40],ebx
64009a7d:	mov    DWORD PTR [edi+0x3c],esi
64009a80:	mov    WORD PTR [edi+0x2c],si
64009a84:	cmp    DWORD PTR [edi+0x24],0x8
64009a88:	jb     0x64009a96
64009a8a:	mov    edx,DWORD PTR [edi+0x10]
64009a8d:	push   edx
64009a8e:	call   0x64011d22
64009a93:	add    esp,0x4
64009a96:	mov    DWORD PTR [edi+0x24],ebx
64009a99:	mov    DWORD PTR [edi+0x20],esi
64009a9c:	push   edi
64009a9d:	mov    WORD PTR [edi+0x10],si
64009aa1:	call   0x64011d22
64009aa6:	mov    ecx,DWORD PTR [esp+0x18]
64009aaa:	mov    eax,DWORD PTR [ecx+0x8]
64009aad:	add    esp,0x4
64009ab0:	cmp    eax,esi
64009ab2:	jbe    0x64009aba
64009ab4:	add    eax,0xffffffff
64009ab7:	mov    DWORD PTR [ecx+0x8],eax
64009aba:	mov    eax,DWORD PTR [ebp+0x8]
64009abd:	mov    ecx,DWORD PTR [ebp+0xc]
64009ac0:	mov    edx,DWORD PTR [ebp+0x10]
64009ac3:	mov    DWORD PTR [eax],ecx
64009ac5:	mov    DWORD PTR [eax+0x4],edx
64009ac8:	mov    ecx,DWORD PTR [esp+0x60]
64009acc:	mov    DWORD PTR fs:0x0,ecx
64009ad3:	pop    ecx
64009ad4:	pop    edi
64009ad5:	pop    esi
64009ad6:	pop    ebx
64009ad7:	mov    esp,ebp
64009ad9:	pop    ebp
64009ada:	ret    0xc
64009add:	int3   
64009ade:	int3   
64009adf:	int3   
64009ae0:	mov    eax,DWORD PTR [esp+0x4]
64009ae4:	mov    ecx,DWORD PTR [eax+0x8]
64009ae7:	cmp    BYTE PTR [ecx+0x45],0x0
64009aeb:	jne    0x64009afb
64009aed:	lea    ecx,[ecx+0x0]
64009af0:	mov    eax,ecx
64009af2:	mov    ecx,DWORD PTR [eax+0x8]
64009af5:	cmp    BYTE PTR [ecx+0x45],0x0
64009af9:	je     0x64009af0
64009afb:	ret    
64009afc:	int3   
64009afd:	int3   
64009afe:	int3   
64009aff:	int3   
64009b00:	push   0x48
64009b02:	call   0x64012101
64009b07:	add    esp,0x4
64009b0a:	test   eax,eax
64009b0c:	je     0x64009b14
64009b0e:	mov    DWORD PTR [eax],0x0
64009b14:	lea    ecx,[eax+0x4]
64009b17:	test   ecx,ecx
64009b19:	je     0x64009b21
64009b1b:	mov    DWORD PTR [ecx],0x0
64009b21:	lea    ecx,[eax+0x8]
64009b24:	test   ecx,ecx
64009b26:	je     0x64009b2e
64009b28:	mov    DWORD PTR [ecx],0x0
64009b2e:	mov    BYTE PTR [eax+0x44],0x1
64009b32:	mov    BYTE PTR [eax+0x45],0x0
64009b36:	ret    
64009b37:	int3   
64009b38:	int3   
64009b39:	int3   
64009b3a:	int3   
64009b3b:	int3   
64009b3c:	int3   
64009b3d:	int3   
64009b3e:	int3   
64009b3f:	int3   
64009b40:	push   ecx
64009b41:	push   ebx
64009b42:	push   esi
64009b43:	mov    esi,DWORD PTR [esp+0x10]
64009b47:	xor    ebx,ebx
64009b49:	cmp    BYTE PTR [esi+0x45],bl
64009b4c:	push   edi
64009b4d:	mov    DWORD PTR [esp+0xc],ecx
64009b51:	mov    edi,esi
64009b53:	jne    0x64009bb6
64009b55:	push   ebp
64009b56:	lea    ebp,[ebx+0xf]
64009b59:	lea    esp,[esp+0x0]
64009b60:	mov    eax,DWORD PTR [edi+0x8]
64009b63:	mov    ecx,DWORD PTR [esp+0x10]
64009b67:	push   eax
64009b68:	call   0x64009b40
64009b6d:	cmp    DWORD PTR [esi+0x40],0x10
64009b71:	mov    edi,DWORD PTR [edi]
64009b73:	jb     0x64009b81
64009b75:	mov    ecx,DWORD PTR [esi+0x2c]
64009b78:	push   ecx
64009b79:	call   0x64011d22
64009b7e:	add    esp,0x4
64009b81:	mov    DWORD PTR [esi+0x40],ebp
64009b84:	mov    DWORD PTR [esi+0x3c],ebx
64009b87:	mov    BYTE PTR [esi+0x2c],bl
64009b8a:	cmp    DWORD PTR [esi+0x24],0x10
64009b8e:	jb     0x64009b9c
64009b90:	mov    edx,DWORD PTR [esi+0x10]
64009b93:	push   edx
64009b94:	call   0x64011d22
64009b99:	add    esp,0x4
64009b9c:	mov    DWORD PTR [esi+0x24],ebp
64009b9f:	mov    DWORD PTR [esi+0x20],ebx
64009ba2:	push   esi
64009ba3:	mov    BYTE PTR [esi+0x10],bl
64009ba6:	call   0x64011d22
64009bab:	add    esp,0x4
64009bae:	cmp    BYTE PTR [edi+0x45],bl
64009bb1:	mov    esi,edi
64009bb3:	je     0x64009b60
64009bb5:	pop    ebp
64009bb6:	pop    edi
64009bb7:	pop    esi
64009bb8:	pop    ebx
64009bb9:	pop    ecx
64009bba:	ret    0x4
64009bbd:	int3   
64009bbe:	int3   
64009bbf:	int3   
64009bc0:	push   ecx
64009bc1:	push   ebx
64009bc2:	push   esi
64009bc3:	mov    esi,DWORD PTR [esp+0x10]
64009bc7:	xor    ebx,ebx
64009bc9:	cmp    BYTE PTR [esi+0x45],bl
64009bcc:	push   edi
64009bcd:	mov    DWORD PTR [esp+0xc],ecx
64009bd1:	mov    edi,esi
64009bd3:	jne    0x64009c38
64009bd5:	push   ebp
64009bd6:	lea    ebp,[ebx+0x7]
64009bd9:	lea    esp,[esp+0x0]
64009be0:	mov    eax,DWORD PTR [edi+0x8]
64009be3:	mov    ecx,DWORD PTR [esp+0x10]
64009be7:	push   eax
64009be8:	call   0x64009bc0
64009bed:	cmp    DWORD PTR [esi+0x40],0x8
64009bf1:	mov    edi,DWORD PTR [edi]
64009bf3:	jb     0x64009c01
64009bf5:	mov    ecx,DWORD PTR [esi+0x2c]
64009bf8:	push   ecx
64009bf9:	call   0x64011d22
64009bfe:	add    esp,0x4
64009c01:	mov    DWORD PTR [esi+0x40],ebp
64009c04:	mov    DWORD PTR [esi+0x3c],ebx
64009c07:	mov    WORD PTR [esi+0x2c],bx
64009c0b:	cmp    DWORD PTR [esi+0x24],0x8
64009c0f:	jb     0x64009c1d
64009c11:	mov    edx,DWORD PTR [esi+0x10]
64009c14:	push   edx
64009c15:	call   0x64011d22
64009c1a:	add    esp,0x4
64009c1d:	mov    DWORD PTR [esi+0x24],ebp
64009c20:	mov    DWORD PTR [esi+0x20],ebx
64009c23:	push   esi
64009c24:	mov    WORD PTR [esi+0x10],bx
64009c28:	call   0x64011d22
64009c2d:	add    esp,0x4
64009c30:	cmp    BYTE PTR [edi+0x45],bl
64009c33:	mov    esi,edi
64009c35:	je     0x64009be0
64009c37:	pop    ebp
64009c38:	pop    edi
64009c39:	pop    esi
64009c3a:	pop    ebx
64009c3b:	pop    ecx
64009c3c:	ret    0x4
64009c3f:	int3   
64009c40:	mov    eax,DWORD PTR [esp+0x4]
64009c44:	mov    ecx,DWORD PTR [eax]
64009c46:	cmp    BYTE PTR [ecx+0x45],0x0
64009c4a:	jne    0x64009c5a
64009c4c:	lea    esp,[esp+0x0]
64009c50:	mov    eax,ecx
64009c52:	mov    ecx,DWORD PTR [eax]
64009c54:	cmp    BYTE PTR [ecx+0x45],0x0
64009c58:	je     0x64009c50
64009c5a:	ret    
64009c5b:	int3   
64009c5c:	int3   
64009c5d:	int3   
64009c5e:	int3   
64009c5f:	int3   
64009c60:	push   esi
64009c61:	mov    esi,ecx
64009c63:	cmp    DWORD PTR [esi],0x0
64009c66:	jne    0x64009c6d
64009c68:	call   0x640120d8
64009c6d:	mov    eax,DWORD PTR [esi+0x4]
64009c70:	cmp    BYTE PTR [eax+0x45],0x0
64009c74:	je     0x64009c7c
64009c76:	pop    esi
64009c77:	jmp    0x640120d8
64009c7c:	mov    ecx,DWORD PTR [eax+0x8]
64009c7f:	cmp    BYTE PTR [ecx+0x45],0x0
64009c83:	jne    0x64009c9f
64009c85:	mov    eax,DWORD PTR [ecx]
64009c87:	cmp    BYTE PTR [eax+0x45],0x0
64009c8b:	jne    0x64009c9a
64009c8d:	lea    ecx,[ecx+0x0]
64009c90:	mov    ecx,eax
64009c92:	mov    eax,DWORD PTR [ecx]
64009c94:	cmp    BYTE PTR [eax+0x45],0x0
64009c98:	je     0x64009c90
64009c9a:	mov    DWORD PTR [esi+0x4],ecx
64009c9d:	pop    esi
64009c9e:	ret    
64009c9f:	mov    eax,DWORD PTR [eax+0x4]
64009ca2:	cmp    BYTE PTR [eax+0x45],0x0
64009ca6:	jne    0x64009cbe
64009ca8:	mov    ecx,DWORD PTR [esi+0x4]
64009cab:	cmp    ecx,DWORD PTR [eax+0x8]
64009cae:	jne    0x64009cbe
64009cb0:	mov    DWORD PTR [esi+0x4],eax
64009cb3:	mov    edx,eax
64009cb5:	mov    eax,DWORD PTR [edx+0x4]
64009cb8:	cmp    BYTE PTR [eax+0x45],0x0
64009cbc:	je     0x64009ca8
64009cbe:	mov    DWORD PTR [esi+0x4],eax
64009cc1:	pop    esi
64009cc2:	ret    
64009cc3:	int3   
64009cc4:	int3   
64009cc5:	int3   
64009cc6:	int3   
64009cc7:	int3   
64009cc8:	int3   
64009cc9:	int3   
64009cca:	int3   
64009ccb:	int3   
64009ccc:	int3   
64009ccd:	int3   
64009cce:	int3   
64009ccf:	int3   
64009cd0:	push   0xffffffff
64009cd2:	push   0x640220f8
64009cd7:	mov    eax,fs:0x0
64009cdd:	push   eax
64009cde:	sub    esp,0x20
64009ce1:	push   ebx
64009ce2:	push   ebp
64009ce3:	mov    eax,ds:0x6402c09c
64009ce8:	xor    eax,esp
64009cea:	push   eax
64009ceb:	lea    eax,[esp+0x2c]
64009cef:	mov    fs:0x0,eax
64009cf5:	mov    eax,DWORD PTR [esp+0x3c]
64009cf9:	xor    ebx,ebx
64009cfb:	push   0xffffffff
64009cfd:	push   ebx
64009cfe:	push   eax
64009cff:	lea    ecx,[esp+0x1c]
64009d03:	mov    DWORD PTR [esp+0x18],ebx
64009d07:	mov    DWORD PTR [esp+0x34],0xf
64009d0f:	mov    DWORD PTR [esp+0x30],ebx
64009d13:	mov    BYTE PTR [esp+0x20],bl
64009d17:	call   0x64001780
64009d1c:	mov    eax,edi
64009d1e:	mov    DWORD PTR [esp+0x34],ebx
64009d22:	lea    ebp,[eax+0x1]
64009d25:	mov    cl,BYTE PTR [eax]
64009d27:	add    eax,0x1
64009d2a:	cmp    cl,bl
64009d2c:	jne    0x64009d25
64009d2e:	sub    eax,ebp
64009d30:	push   eax
64009d31:	push   edi
64009d32:	lea    eax,[esp+0x18]
64009d36:	call   0x6400a150
64009d3b:	push   0xffffffff
64009d3d:	push   ebx
64009d3e:	mov    DWORD PTR [esi+0x18],0xf
64009d45:	mov    DWORD PTR [esi+0x14],ebx
64009d48:	push   eax
64009d49:	mov    ecx,esi
64009d4b:	mov    BYTE PTR [esi+0x4],bl
64009d4e:	call   0x64001780
64009d53:	cmp    DWORD PTR [esp+0x28],0x10
64009d58:	jb     0x64009d67
64009d5a:	mov    ecx,DWORD PTR [esp+0x14]
64009d5e:	push   ecx
64009d5f:	call   0x64011d22
64009d64:	add    esp,0x4
64009d67:	mov    eax,esi
64009d69:	mov    ecx,DWORD PTR [esp+0x2c]
64009d6d:	mov    DWORD PTR fs:0x0,ecx
64009d74:	pop    ecx
64009d75:	pop    ebp
64009d76:	pop    ebx
64009d77:	add    esp,0x2c
64009d7a:	ret    
64009d7b:	int3   
64009d7c:	int3   
64009d7d:	int3   
64009d7e:	int3   
64009d7f:	int3   
64009d80:	push   0xffffffff
64009d82:	push   0x640220d0
64009d87:	mov    eax,fs:0x0
64009d8d:	push   eax
64009d8e:	push   ecx
64009d8f:	push   esi
64009d90:	mov    eax,ds:0x6402c09c
64009d95:	xor    eax,esp
64009d97:	push   eax
64009d98:	lea    eax,[esp+0xc]
64009d9c:	mov    fs:0x0,eax
64009da2:	mov    esi,DWORD PTR [esp+0x1c]
64009da6:	mov    DWORD PTR [esp+0x8],0x0
64009dae:	lea    eax,[esp+0x3c]
64009db2:	push   eax
64009db3:	lea    ecx,[esp+0x24]
64009db7:	push   ecx
64009db8:	mov    ecx,esi
64009dba:	mov    DWORD PTR [esp+0x1c],0x1
64009dc2:	call   0x64009fc0
64009dc7:	cmp    DWORD PTR [esp+0x38],0x10
64009dcc:	jb     0x64009ddb
64009dce:	mov    edx,DWORD PTR [esp+0x24]
64009dd2:	push   edx
64009dd3:	call   0x64011d22
64009dd8:	add    esp,0x4
64009ddb:	cmp    DWORD PTR [esp+0x54],0x10
64009de0:	mov    DWORD PTR [esp+0x38],0xf
64009de8:	mov    DWORD PTR [esp+0x34],0x0
64009df0:	mov    BYTE PTR [esp+0x24],0x0
64009df5:	jb     0x64009e04
64009df7:	mov    eax,DWORD PTR [esp+0x40]
64009dfb:	push   eax
64009dfc:	call   0x64011d22
64009e01:	add    esp,0x4
64009e04:	mov    eax,esi
64009e06:	mov    ecx,DWORD PTR [esp+0xc]
64009e0a:	mov    DWORD PTR fs:0x0,ecx
64009e11:	pop    ecx
64009e12:	pop    esi
64009e13:	add    esp,0x10
64009e16:	ret    
64009e17:	int3   
64009e18:	int3   
64009e19:	int3   
64009e1a:	int3   
64009e1b:	int3   
64009e1c:	int3   
64009e1d:	int3   
64009e1e:	int3   
64009e1f:	int3   
64009e20:	push   0xffffffff
64009e22:	push   0x64022098
64009e27:	mov    eax,fs:0x0
64009e2d:	push   eax
64009e2e:	push   ecx
64009e2f:	push   ebx
64009e30:	push   esi
64009e31:	push   edi
64009e32:	mov    eax,ds:0x6402c09c
64009e37:	xor    eax,esp
64009e39:	push   eax
64009e3a:	lea    eax,[esp+0x14]
64009e3e:	mov    fs:0x0,eax
64009e44:	mov    esi,ecx
64009e46:	mov    DWORD PTR [esp+0x10],esi
64009e4a:	mov    edi,DWORD PTR [esp+0x24]
64009e4e:	xor    ebx,ebx
64009e50:	push   0xffffffff
64009e52:	push   ebx
64009e53:	mov    DWORD PTR [esi+0x18],0xf
64009e5a:	mov    DWORD PTR [esi+0x14],ebx
64009e5d:	push   edi
64009e5e:	mov    BYTE PTR [esi+0x4],bl
64009e61:	call   0x64001780
64009e66:	push   0xffffffff
64009e68:	lea    ecx,[esi+0x1c]
64009e6b:	mov    DWORD PTR [esp+0x20],ebx
64009e6f:	lea    eax,[edi+0x1c]
64009e72:	push   ebx
64009e73:	mov    DWORD PTR [ecx+0x18],0xf
64009e7a:	mov    DWORD PTR [ecx+0x14],ebx
64009e7d:	push   eax
64009e7e:	mov    BYTE PTR [ecx+0x4],bl
64009e81:	call   0x64001780
64009e86:	mov    eax,esi
64009e88:	mov    ecx,DWORD PTR [esp+0x14]
64009e8c:	mov    DWORD PTR fs:0x0,ecx
64009e93:	pop    ecx
64009e94:	pop    edi
64009e95:	pop    esi
64009e96:	pop    ebx
64009e97:	add    esp,0x10
64009e9a:	ret    0x4
64009e9d:	int3   
64009e9e:	int3   
64009e9f:	int3   
64009ea0:	push   0xffffffff
64009ea2:	push   0x64022440
64009ea7:	mov    eax,fs:0x0
64009ead:	push   eax
64009eae:	push   ecx
64009eaf:	push   esi
64009eb0:	mov    eax,ds:0x6402c09c
64009eb5:	xor    eax,esp
64009eb7:	push   eax
64009eb8:	lea    eax,[esp+0xc]
64009ebc:	mov    fs:0x0,eax
64009ec2:	mov    esi,DWORD PTR [esp+0x1c]
64009ec6:	mov    DWORD PTR [esp+0x8],0x0
64009ece:	lea    eax,[esp+0x3c]
64009ed2:	push   eax
64009ed3:	lea    ecx,[esp+0x24]
64009ed7:	push   ecx
64009ed8:	mov    ecx,esi
64009eda:	mov    DWORD PTR [esp+0x1c],0x1
64009ee2:	call   0x6400a040
64009ee7:	cmp    DWORD PTR [esp+0x38],0x8
64009eec:	jb     0x64009efb
64009eee:	mov    edx,DWORD PTR [esp+0x24]
64009ef2:	push   edx
64009ef3:	call   0x64011d22
64009ef8:	add    esp,0x4
64009efb:	cmp    DWORD PTR [esp+0x54],0x8
64009f00:	mov    DWORD PTR [esp+0x38],0x7
64009f08:	mov    DWORD PTR [esp+0x34],0x0
64009f10:	mov    WORD PTR [esp+0x24],0x0
64009f17:	jb     0x64009f26
64009f19:	mov    eax,DWORD PTR [esp+0x40]
64009f1d:	push   eax
64009f1e:	call   0x64011d22
64009f23:	add    esp,0x4
64009f26:	mov    eax,esi
64009f28:	mov    ecx,DWORD PTR [esp+0xc]
64009f2c:	mov    DWORD PTR fs:0x0,ecx
64009f33:	pop    ecx
64009f34:	pop    esi
64009f35:	add    esp,0x10
64009f38:	ret    
64009f39:	int3   
64009f3a:	int3   
64009f3b:	int3   
64009f3c:	int3   
64009f3d:	int3   
64009f3e:	int3   
64009f3f:	int3   
64009f40:	push   0xffffffff
64009f42:	push   0x64022408
64009f47:	mov    eax,fs:0x0
64009f4d:	push   eax
64009f4e:	push   ecx
64009f4f:	push   ebx
64009f50:	push   esi
64009f51:	push   edi
64009f52:	mov    eax,ds:0x6402c09c
64009f57:	xor    eax,esp
64009f59:	push   eax
64009f5a:	lea    eax,[esp+0x14]
64009f5e:	mov    fs:0x0,eax
64009f64:	mov    esi,ecx
64009f66:	mov    DWORD PTR [esp+0x10],esi
64009f6a:	mov    ebx,DWORD PTR [esp+0x24]
64009f6e:	xor    edi,edi
64009f70:	push   0xffffffff
64009f72:	push   edi
64009f73:	mov    DWORD PTR [esi+0x18],0x7
64009f7a:	mov    DWORD PTR [esi+0x14],edi
64009f7d:	push   ebx
64009f7e:	mov    WORD PTR [esi+0x4],di
64009f82:	call   0x64008590
64009f87:	push   0xffffffff
64009f89:	lea    ecx,[esi+0x1c]
64009f8c:	mov    DWORD PTR [esp+0x20],edi
64009f90:	lea    eax,[ebx+0x1c]
64009f93:	push   edi
64009f94:	mov    DWORD PTR [ecx+0x18],0x7
64009f9b:	mov    DWORD PTR [ecx+0x14],edi
64009f9e:	push   eax
64009f9f:	mov    WORD PTR [ecx+0x4],di
64009fa3:	call   0x64008590
64009fa8:	mov    eax,esi
64009faa:	mov    ecx,DWORD PTR [esp+0x14]
64009fae:	mov    DWORD PTR fs:0x0,ecx
64009fb5:	pop    ecx
64009fb6:	pop    edi
64009fb7:	pop    esi
64009fb8:	pop    ebx
64009fb9:	add    esp,0x10
64009fbc:	ret    0x4
64009fbf:	int3   
64009fc0:	push   0xffffffff
64009fc2:	push   0x64022068
64009fc7:	mov    eax,fs:0x0
64009fcd:	push   eax
64009fce:	push   ecx
64009fcf:	push   ebx
64009fd0:	push   esi
64009fd1:	mov    eax,ds:0x6402c09c
64009fd6:	xor    eax,esp
64009fd8:	push   eax
64009fd9:	lea    eax,[esp+0x10]
64009fdd:	mov    fs:0x0,eax
64009fe3:	mov    esi,ecx
64009fe5:	mov    DWORD PTR [esp+0xc],esi
64009fe9:	mov    eax,DWORD PTR [esp+0x20]
64009fed:	xor    ebx,ebx
64009fef:	push   0xffffffff
64009ff1:	push   ebx
64009ff2:	mov    DWORD PTR [esi+0x18],0xf
64009ff9:	mov    DWORD PTR [esi+0x14],ebx
64009ffc:	push   eax
64009ffd:	mov    BYTE PTR [esi+0x4],bl
6400a000:	call   0x64001780
6400a005:	mov    edx,DWORD PTR [esp+0x24]
6400a009:	push   0xffffffff
6400a00b:	lea    ecx,[esi+0x1c]
6400a00e:	mov    DWORD PTR [esp+0x1c],ebx
6400a012:	push   ebx
6400a013:	mov    DWORD PTR [ecx+0x18],0xf
6400a01a:	mov    DWORD PTR [ecx+0x14],ebx
6400a01d:	push   edx
6400a01e:	mov    BYTE PTR [ecx+0x4],bl
6400a021:	call   0x64001780
6400a026:	mov    eax,esi
6400a028:	mov    ecx,DWORD PTR [esp+0x10]
6400a02c:	mov    DWORD PTR fs:0x0,ecx
6400a033:	pop    ecx
6400a034:	pop    esi
6400a035:	pop    ebx
6400a036:	add    esp,0x10
6400a039:	ret    0x8
6400a03c:	int3   
6400a03d:	int3   
6400a03e:	int3   
6400a03f:	int3   
6400a040:	push   0xffffffff
6400a042:	push   0x640223d8
6400a047:	mov    eax,fs:0x0
6400a04d:	push   eax
6400a04e:	push   ecx
6400a04f:	push   esi
6400a050:	push   edi
6400a051:	mov    eax,ds:0x6402c09c
6400a056:	xor    eax,esp
6400a058:	push   eax
6400a059:	lea    eax,[esp+0x10]
6400a05d:	mov    fs:0x0,eax
6400a063:	mov    esi,ecx
6400a065:	mov    DWORD PTR [esp+0xc],esi
6400a069:	mov    eax,DWORD PTR [esp+0x20]
6400a06d:	xor    edi,edi
6400a06f:	push   0xffffffff
6400a071:	push   edi
6400a072:	mov    DWORD PTR [esi+0x18],0x7
6400a079:	mov    DWORD PTR [esi+0x14],edi
6400a07c:	push   eax
6400a07d:	mov    WORD PTR [esi+0x4],di
6400a081:	call   0x64008590
6400a086:	mov    edx,DWORD PTR [esp+0x24]
6400a08a:	push   0xffffffff
6400a08c:	lea    ecx,[esi+0x1c]
6400a08f:	mov    DWORD PTR [esp+0x1c],edi
6400a093:	push   edi
6400a094:	mov    DWORD PTR [ecx+0x18],0x7
6400a09b:	mov    DWORD PTR [ecx+0x14],edi
6400a09e:	push   edx
6400a09f:	mov    WORD PTR [ecx+0x4],di
6400a0a3:	call   0x64008590
6400a0a8:	mov    eax,esi
6400a0aa:	mov    ecx,DWORD PTR [esp+0x10]
6400a0ae:	mov    DWORD PTR fs:0x0,ecx
6400a0b5:	pop    ecx
6400a0b6:	pop    edi
6400a0b7:	pop    esi
6400a0b8:	add    esp,0x10
6400a0bb:	ret    0x8
6400a0be:	int3   
6400a0bf:	int3   
6400a0c0:	push   ebx
6400a0c1:	push   ebp
6400a0c2:	push   esi
6400a0c3:	push   edi
6400a0c4:	mov    edi,DWORD PTR [esp+0x14]
6400a0c8:	mov    esi,ecx
6400a0ca:	cmp    DWORD PTR [esi+0x14],edi
6400a0cd:	jae    0x6400a0d4
6400a0cf:	call   0x64011cde
6400a0d4:	mov    eax,DWORD PTR [esi+0x14]
6400a0d7:	mov    ebx,DWORD PTR [esp+0x18]
6400a0db:	sub    eax,edi
6400a0dd:	cmp    eax,ebx
6400a0df:	jae    0x6400a0e3
6400a0e1:	mov    ebx,eax
6400a0e3:	mov    ebp,DWORD PTR [esp+0x20]
6400a0e7:	cmp    ebx,ebp
6400a0e9:	mov    edx,ebx
6400a0eb:	jb     0x6400a0ef
6400a0ed:	mov    edx,ebp
6400a0ef:	cmp    DWORD PTR [esi+0x18],0x8
6400a0f3:	jb     0x6400a0fa
6400a0f5:	mov    eax,DWORD PTR [esi+0x4]
6400a0f8:	jmp    0x6400a0fd
6400a0fa:	lea    eax,[esi+0x4]
6400a0fd:	test   edx,edx
6400a0ff:	mov    ecx,DWORD PTR [esp+0x1c]
6400a103:	lea    eax,[eax+edi*2]
6400a106:	jbe    0x6400a12d
6400a108:	mov    si,WORD PTR [eax]
6400a10b:	cmp    si,WORD PTR [ecx]
6400a10e:	jne    0x6400a11d
6400a110:	add    eax,0x2
6400a113:	add    ecx,0x2
6400a116:	sub    edx,0x1
6400a119:	jne    0x6400a108
6400a11b:	jmp    0x6400a12d
6400a11d:	movzx  eax,WORD PTR [eax]
6400a120:	cmp    ax,WORD PTR [ecx]
6400a123:	sbb    eax,eax
6400a125:	and    eax,0xfffffffe
6400a128:	add    eax,0x1
6400a12b:	jne    0x6400a142
6400a12d:	cmp    ebx,ebp
6400a12f:	jae    0x6400a13b
6400a131:	pop    edi
6400a132:	pop    esi
6400a133:	pop    ebp
6400a134:	or     eax,0xffffffff
6400a137:	pop    ebx
6400a138:	ret    0x10
6400a13b:	xor    eax,eax
6400a13d:	cmp    ebx,ebp
6400a13f:	setne  al
6400a142:	pop    edi
6400a143:	pop    esi
6400a144:	pop    ebp
6400a145:	pop    ebx
6400a146:	ret    0x10
6400a149:	int3   
6400a14a:	int3   
6400a14b:	int3   
6400a14c:	int3   
6400a14d:	int3   
6400a14e:	int3   
6400a14f:	int3   
6400a150:	mov    ecx,DWORD PTR [esp+0x4]
6400a154:	push   ebx
6400a155:	push   ebp
6400a156:	mov    ebp,DWORD PTR [esp+0x10]
6400a15a:	push   esi
6400a15b:	mov    esi,eax
6400a15d:	mov    edx,DWORD PTR [esi+0x18]
6400a160:	cmp    edx,0x10
6400a163:	push   edi
6400a164:	lea    ebx,[esi+0x4]
6400a167:	jb     0x6400a16d
6400a169:	mov    eax,DWORD PTR [ebx]
6400a16b:	jmp    0x6400a16f
6400a16d:	mov    eax,ebx
6400a16f:	cmp    ecx,eax
6400a171:	jb     0x6400a1a0
6400a173:	cmp    edx,0x10
6400a176:	jb     0x6400a17c
6400a178:	mov    eax,DWORD PTR [ebx]
6400a17a:	jmp    0x6400a17e
6400a17c:	mov    eax,ebx
6400a17e:	mov    edi,DWORD PTR [esi+0x14]
6400a181:	add    edi,eax
6400a183:	cmp    edi,ecx
6400a185:	jbe    0x6400a1a0
6400a187:	cmp    edx,0x10
6400a18a:	jb     0x6400a18e
6400a18c:	mov    ebx,DWORD PTR [ebx]
6400a18e:	sub    ecx,ebx
6400a190:	push   ecx
6400a191:	push   esi
6400a192:	mov    eax,ebp
6400a194:	call   0x640019d0
6400a199:	pop    edi
6400a19a:	pop    esi
6400a19b:	pop    ebp
6400a19c:	pop    ebx
6400a19d:	ret    0x8
6400a1a0:	mov    eax,DWORD PTR [esi+0x14]
6400a1a3:	or     ecx,0xffffffff
6400a1a6:	sub    ecx,eax
6400a1a8:	cmp    ecx,ebp
6400a1aa:	jbe    0x6400a1b3
6400a1ac:	lea    edx,[eax+ebp*1]
6400a1af:	cmp    edx,eax
6400a1b1:	jae    0x6400a1b8
6400a1b3:	call   0x64011c9f
6400a1b8:	test   ebp,ebp
6400a1ba:	jbe    0x6400a230
6400a1bc:	mov    edi,DWORD PTR [esi+0x14]
6400a1bf:	add    edi,ebp
6400a1c1:	cmp    edi,0xfffffffe
6400a1c4:	jbe    0x6400a1cb
6400a1c6:	call   0x64011c9f
6400a1cb:	mov    eax,DWORD PTR [esi+0x18]
6400a1ce:	cmp    eax,edi
6400a1d0:	jae    0x6400a1ee
6400a1d2:	mov    eax,DWORD PTR [esi+0x14]
6400a1d5:	push   eax
6400a1d6:	push   edi
6400a1d7:	mov    ecx,esi
6400a1d9:	call   0x64001b60
6400a1de:	test   edi,edi
6400a1e0:	jbe    0x6400a230
6400a1e2:	mov    eax,DWORD PTR [esi+0x18]
6400a1e5:	cmp    eax,0x10
6400a1e8:	jb     0x6400a208
6400a1ea:	mov    edx,DWORD PTR [ebx]
6400a1ec:	jmp    0x6400a20a
6400a1ee:	test   edi,edi
6400a1f0:	jne    0x6400a1e0
6400a1f2:	cmp    eax,0x10
6400a1f5:	mov    DWORD PTR [esi+0x14],edi
6400a1f8:	jb     0x6400a1fc
6400a1fa:	mov    ebx,DWORD PTR [ebx]
6400a1fc:	pop    edi
6400a1fd:	mov    eax,esi
6400a1ff:	pop    esi
6400a200:	pop    ebp
6400a201:	mov    BYTE PTR [ebx],0x0
6400a204:	pop    ebx
6400a205:	ret    0x8
6400a208:	mov    edx,ebx
6400a20a:	mov    ecx,DWORD PTR [esi+0x14]
6400a20d:	push   ebp
6400a20e:	mov    ebp,DWORD PTR [esp+0x18]
6400a212:	sub    eax,ecx
6400a214:	push   ebp
6400a215:	push   eax
6400a216:	add    ecx,edx
6400a218:	push   ecx
6400a219:	call   0x64011ed8
6400a21e:	add    esp,0x10
6400a221:	cmp    DWORD PTR [esi+0x18],0x10
6400a225:	mov    DWORD PTR [esi+0x14],edi
6400a228:	jb     0x6400a22c
6400a22a:	mov    ebx,DWORD PTR [ebx]
6400a22c:	mov    BYTE PTR [ebx+edi*1],0x0
6400a230:	pop    edi
6400a231:	mov    eax,esi
6400a233:	pop    esi
6400a234:	pop    ebp
6400a235:	pop    ebx
6400a236:	ret    0x8
6400a239:	int3   
6400a23a:	int3   
6400a23b:	int3   
6400a23c:	int3   
6400a23d:	int3   
6400a23e:	int3   
6400a23f:	int3   
6400a240:	push   ebp
6400a241:	mov    ebp,DWORD PTR [esp+0x14]
6400a245:	push   esi
6400a246:	mov    esi,DWORD PTR [esp+0x10]
6400a24a:	push   edi
6400a24b:	mov    edi,DWORD PTR [esp+0x10]
6400a24f:	nop
6400a250:	test   edi,edi
6400a252:	je     0x6400a25a
6400a254:	cmp    edi,DWORD PTR [esp+0x18]
6400a258:	je     0x6400a25f
6400a25a:	call   0x640120d8
6400a25f:	cmp    esi,ebp
6400a261:	je     0x6400a2bb
6400a263:	add    DWORD PTR [ebx],0x1
6400a266:	test   edi,edi
6400a268:	jne    0x6400a26f
6400a26a:	call   0x640120d8
6400a26f:	cmp    BYTE PTR [esi+0x29],0x0
6400a273:	je     0x6400a27c
6400a275:	call   0x640120d8
6400a27a:	jmp    0x6400a250
6400a27c:	mov    ecx,DWORD PTR [esi+0x8]
6400a27f:	cmp    BYTE PTR [ecx+0x29],0x0
6400a283:	jne    0x6400a29e
6400a285:	mov    eax,DWORD PTR [ecx]
6400a287:	cmp    BYTE PTR [eax+0x29],0x0
6400a28b:	jne    0x6400a29a
6400a28d:	lea    ecx,[ecx+0x0]
6400a290:	mov    ecx,eax
6400a292:	mov    eax,DWORD PTR [ecx]
6400a294:	cmp    BYTE PTR [eax+0x29],0x0
6400a298:	je     0x6400a290
6400a29a:	mov    esi,ecx
6400a29c:	jmp    0x6400a250
6400a29e:	mov    eax,DWORD PTR [esi+0x4]
6400a2a1:	cmp    BYTE PTR [eax+0x29],0x0
6400a2a5:	jne    0x6400a2b7
6400a2a7:	cmp    esi,DWORD PTR [eax+0x8]
6400a2aa:	jne    0x6400a2b7
6400a2ac:	mov    esi,eax
6400a2ae:	mov    eax,DWORD PTR [eax+0x4]
6400a2b1:	cmp    BYTE PTR [eax+0x29],0x0
6400a2b5:	je     0x6400a2a7
6400a2b7:	mov    esi,eax
6400a2b9:	jmp    0x6400a250
6400a2bb:	pop    edi
6400a2bc:	pop    esi
6400a2bd:	pop    ebp
6400a2be:	ret    
6400a2bf:	int3   
6400a2c0:	push   esi
6400a2c1:	mov    esi,ecx
6400a2c3:	call   0x6400db90
6400a2c8:	call   eax
6400a2ca:	mov    DWORD PTR [esi],eax
6400a2cc:	mov    eax,esi
6400a2ce:	pop    esi
6400a2cf:	ret    
6400a2d0:	mov    eax,DWORD PTR [ecx]
6400a2d2:	push   eax
6400a2d3:	call   0x6400dc20
6400a2d8:	call   eax
6400a2da:	ret    
6400a2db:	int3   
6400a2dc:	int3   
6400a2dd:	int3   
6400a2de:	int3   
6400a2df:	int3   
6400a2e0:	push   ebp
6400a2e1:	mov    ebp,esp
6400a2e3:	and    esp,0xfffffff8
6400a2e6:	push   0xffffffff
6400a2e8:	push   0x64022960
6400a2ed:	mov    eax,fs:0x0
6400a2f3:	push   eax
6400a2f4:	sub    esp,0x68
6400a2f7:	mov    eax,ds:0x6402c09c
6400a2fc:	xor    eax,esp
6400a2fe:	mov    DWORD PTR [esp+0x60],eax
6400a302:	push   ebx
6400a303:	push   esi
6400a304:	push   edi
6400a305:	mov    eax,ds:0x6402c09c
6400a30a:	xor    eax,esp
6400a30c:	push   eax
6400a30d:	lea    eax,[esp+0x78]
6400a311:	mov    fs:0x0,eax
6400a317:	mov    eax,DWORD PTR [ebp+0x14]
6400a31a:	mov    ebx,DWORD PTR [ebp+0xc]
6400a31d:	mov    DWORD PTR [esp+0x1c],ecx
6400a321:	mov    DWORD PTR [esp+0x18],eax
6400a325:	call   DWORD PTR ds:0x64024058
6400a32b:	lea    ecx,[esp+0x44]
6400a32f:	push   ecx
6400a330:	mov    DWORD PTR [esp+0x24],eax
6400a334:	call   0x6400e680
6400a339:	call   eax
6400a33b:	xor    edi,edi
6400a33d:	mov    DWORD PTR [esp+0x6c],0xf
6400a345:	mov    DWORD PTR [esp+0x68],edi
6400a349:	mov    BYTE PTR [esp+0x58],0x0
6400a34e:	mov    ecx,DWORD PTR [ebp+0x10]
6400a351:	mov    eax,0x8d3dcb09
6400a356:	mul    ecx
6400a358:	mov    esi,edx
6400a35a:	shr    esi,0x8
6400a35d:	lea    eax,[esi+0x1]
6400a360:	cmp    eax,edi
6400a362:	mov    DWORD PTR [esp+0x80],edi
6400a369:	mov    BYTE PTR [esp+0x13],0x1
6400a36e:	je     0x6400a434
6400a374:	mov    edx,0x1d0
6400a379:	sub    edx,ebx
6400a37b:	mov    DWORD PTR [esp+0x14],ebx
6400a37f:	mov    DWORD PTR [esp+0x24],edx
6400a383:	mov    eax,DWORD PTR [esp+0x14]
6400a387:	add    eax,edx
6400a389:	cmp    eax,ecx
6400a38b:	jb     0x6400a486
6400a391:	mov    eax,esi
6400a393:	imul   eax,eax,0x1d0
6400a399:	mov    ebx,ecx
6400a39b:	sub    ebx,eax
6400a39d:	test   ebx,ebx
6400a39f:	je     0x6400a41c
6400a3a1:	or     ecx,0xffffffff
6400a3a4:	cmp    DWORD PTR [ebp+0x18],ecx
6400a3a7:	je     0x6400a3c0
6400a3a9:	call   DWORD PTR ds:0x64024058
6400a3af:	sub    eax,DWORD PTR [esp+0x20]
6400a3b3:	mov    ecx,DWORD PTR [ebp+0x18]
6400a3b6:	cmp    eax,ecx
6400a3b8:	ja     0x6400a490
6400a3be:	sub    ecx,eax
6400a3c0:	mov    edx,DWORD PTR [esp+0x44]
6400a3c4:	sub    esp,0x10
6400a3c7:	mov    eax,esp
6400a3c9:	mov    DWORD PTR [eax],edx
6400a3cb:	mov    edx,DWORD PTR [esp+0x58]
6400a3cf:	mov    DWORD PTR [eax+0x4],edx
6400a3d2:	mov    edx,DWORD PTR [esp+0x5c]
6400a3d6:	mov    DWORD PTR [eax+0x8],edx
6400a3d9:	mov    edx,DWORD PTR [esp+0x60]
6400a3dd:	mov    DWORD PTR [eax+0xc],edx
6400a3e0:	mov    edx,DWORD PTR [esp+0x24]
6400a3e4:	test   edi,edi
6400a3e6:	setne  al
6400a3e9:	cmp    edi,esi
6400a3eb:	push   eax
6400a3ec:	mov    eax,DWORD PTR [ebp+0x8]
6400a3ef:	push   ecx
6400a3f0:	setb   cl
6400a3f3:	push   ecx
6400a3f4:	mov    ecx,DWORD PTR [esp+0x38]
6400a3f8:	push   edi
6400a3f9:	push   ebx
6400a3fa:	push   edx
6400a3fb:	push   eax
6400a3fc:	push   ecx
6400a3fd:	lea    edx,[esp+0x43]
6400a401:	lea    ecx,[esp+0x84]
6400a408:	call   0x6400a620
6400a40d:	test   al,al
6400a40f:	je     0x6400a4ab
6400a415:	mov    ecx,DWORD PTR [ebp+0x10]
6400a418:	mov    edx,DWORD PTR [esp+0x24]
6400a41c:	add    DWORD PTR [esp+0x14],0x1d0
6400a424:	add    edi,0x1
6400a427:	lea    eax,[esi+0x1]
6400a42a:	cmp    edi,eax
6400a42c:	jne    0x6400a383
6400a432:	xor    edi,edi
6400a434:	mov    esi,DWORD PTR [esp+0x18]
6400a438:	push   edi
6400a439:	lea    ecx,[esp+0x58]
6400a43d:	push   ecx
6400a43e:	or     eax,0xffffffff
6400a441:	call   0x640019d0
6400a446:	cmp    BYTE PTR [esp+0x13],0x0
6400a44b:	je     0x6400a5db
6400a451:	mov    DWORD PTR [esp+0x14],0xfffffffe
6400a459:	lea    esp,[esp+0x0]
6400a460:	mov    esi,0xf
6400a465:	mov    DWORD PTR [esp+0x40],esi
6400a469:	mov    DWORD PTR [esp+0x3c],edi
6400a46d:	mov    BYTE PTR [esp+0x2c],0x0
6400a472:	mov    ebx,DWORD PTR [ebp+0x18]
6400a475:	cmp    ebx,0xffffffff
6400a478:	mov    BYTE PTR [esp+0x80],0x1
6400a480:	jne    0x6400a4c6
6400a482:	or     ecx,ebx
6400a484:	jmp    0x6400a4dc
6400a486:	mov    ebx,0x1d0
6400a48b:	jmp    0x6400a3a1
6400a490:	cmp    DWORD PTR [esp+0x6c],0x10
6400a495:	jb     0x6400a4a4
6400a497:	mov    edx,DWORD PTR [esp+0x58]
6400a49b:	push   edx
6400a49c:	call   0x64011d22
6400a4a1:	add    esp,0x4
6400a4a4:	xor    al,al
6400a4a6:	jmp    0x6400a5f1
6400a4ab:	cmp    DWORD PTR [esp+0x6c],0x10
6400a4b0:	jb     0x6400a4a4
6400a4b2:	mov    eax,DWORD PTR [esp+0x58]
6400a4b6:	push   eax
6400a4b7:	call   0x64011d22
6400a4bc:	add    esp,0x4
6400a4bf:	xor    al,al
6400a4c1:	jmp    0x6400a5f1
6400a4c6:	call   DWORD PTR ds:0x64024058
6400a4cc:	sub    eax,DWORD PTR [esp+0x20]
6400a4d0:	cmp    eax,ebx
6400a4d2:	ja     0x6400a56b
6400a4d8:	mov    ecx,ebx
6400a4da:	sub    ecx,eax
6400a4dc:	mov    edx,DWORD PTR [esp+0x44]
6400a4e0:	sub    esp,0x10
6400a4e3:	mov    eax,esp
6400a4e5:	mov    DWORD PTR [eax],edx
6400a4e7:	mov    edx,DWORD PTR [esp+0x58]
6400a4eb:	mov    DWORD PTR [eax+0x4],edx
6400a4ee:	mov    edx,DWORD PTR [esp+0x5c]
6400a4f2:	push   0x1
6400a4f4:	push   ecx
6400a4f5:	mov    ecx,DWORD PTR [ebp+0x8]
6400a4f8:	mov    DWORD PTR [eax+0x8],edx
6400a4fb:	mov    edx,DWORD PTR [esp+0x68]
6400a4ff:	push   edi
6400a500:	mov    DWORD PTR [eax+0xc],edx
6400a503:	mov    eax,DWORD PTR [esp+0x30]
6400a507:	mov    edx,DWORD PTR [esp+0x38]
6400a50b:	push   eax
6400a50c:	push   edi
6400a50d:	push   edi
6400a50e:	push   ecx
6400a50f:	push   edx
6400a510:	lea    edx,[esp+0x43]
6400a514:	lea    ecx,[esp+0x58]
6400a518:	call   0x6400a620
6400a51d:	test   al,al
6400a51f:	je     0x6400a599
6400a521:	cmp    DWORD PTR [esp+0x3c],edi
6400a525:	je     0x6400a5c7
6400a52b:	mov    esi,DWORD PTR [esp+0x18]
6400a52f:	push   edi
6400a530:	lea    eax,[esp+0x2c]
6400a534:	push   eax
6400a535:	or     eax,0xffffffff
6400a538:	call   0x640019d0
6400a53d:	mov    BYTE PTR [esp+0x80],0x0
6400a545:	cmp    DWORD PTR [esp+0x40],0x10
6400a54a:	jb     0x6400a559
6400a54c:	mov    ecx,DWORD PTR [esp+0x2c]
6400a550:	push   ecx
6400a551:	call   0x64011d22
6400a556:	add    esp,0x4
6400a559:	sub    DWORD PTR [esp+0x14],0x1
6400a55e:	cmp    BYTE PTR [esp+0x13],0x0
6400a563:	jne    0x6400a460
6400a569:	jmp    0x6400a5db
6400a56b:	mov    ebx,0x10
6400a570:	cmp    DWORD PTR [esp+0x40],ebx
6400a574:	jb     0x6400a583
6400a576:	mov    edx,DWORD PTR [esp+0x2c]
6400a57a:	push   edx
6400a57b:	call   0x64011d22
6400a580:	add    esp,0x4
6400a583:	cmp    DWORD PTR [esp+0x6c],ebx
6400a587:	mov    DWORD PTR [esp+0x40],esi
6400a58b:	mov    DWORD PTR [esp+0x3c],edi
6400a58f:	mov    BYTE PTR [esp+0x2c],0x0
6400a594:	jmp    0x6400a4b0
6400a599:	mov    ebx,0x10
6400a59e:	cmp    DWORD PTR [esp+0x40],ebx
6400a5a2:	jb     0x6400a5b1
6400a5a4:	mov    ecx,DWORD PTR [esp+0x2c]
6400a5a8:	push   ecx
6400a5a9:	call   0x64011d22
6400a5ae:	add    esp,0x4
6400a5b1:	cmp    DWORD PTR [esp+0x6c],ebx
6400a5b5:	mov    DWORD PTR [esp+0x40],esi
6400a5b9:	mov    DWORD PTR [esp+0x3c],edi
6400a5bd:	mov    BYTE PTR [esp+0x2c],0x0
6400a5c2:	jmp    0x6400a495
6400a5c7:	cmp    DWORD PTR [esp+0x40],0x10
6400a5cc:	jb     0x6400a5db
6400a5ce:	mov    eax,DWORD PTR [esp+0x2c]
6400a5d2:	push   eax
6400a5d3:	call   0x64011d22
6400a5d8:	add    esp,0x4
6400a5db:	cmp    DWORD PTR [esp+0x6c],0x10
6400a5e0:	jb     0x6400a5ef
6400a5e2:	mov    ecx,DWORD PTR [esp+0x58]
6400a5e6:	push   ecx
6400a5e7:	call   0x64011d22
6400a5ec:	add    esp,0x4
6400a5ef:	mov    al,0x1
6400a5f1:	mov    ecx,DWORD PTR [esp+0x78]
6400a5f5:	mov    DWORD PTR fs:0x0,ecx
6400a5fc:	pop    ecx
6400a5fd:	pop    edi
6400a5fe:	pop    esi
6400a5ff:	pop    ebx
6400a600:	mov    ecx,DWORD PTR [esp+0x60]
6400a604:	xor    ecx,esp
6400a606:	call   0x6401257c
6400a60b:	mov    esp,ebp
6400a60d:	pop    ebp
6400a60e:	ret    0x14
6400a611:	int3   
6400a612:	int3   
6400a613:	int3   
6400a614:	int3   
6400a615:	int3   
6400a616:	int3   
6400a617:	int3   
6400a618:	int3   
6400a619:	int3   
6400a61a:	int3   
6400a61b:	int3   
6400a61c:	int3   
6400a61d:	int3   
6400a61e:	int3   
6400a61f:	int3   
6400a620:	push   0xffffffff
6400a622:	push   0x6402291c
6400a627:	mov    eax,fs:0x0
6400a62d:	push   eax
6400a62e:	mov    eax,0x10074
6400a633:	call   0x64017df0
6400a638:	mov    eax,ds:0x6402c09c
6400a63d:	xor    eax,esp
6400a63f:	mov    DWORD PTR [esp+0x10070],eax
6400a646:	push   ebx
6400a647:	push   ebp
6400a648:	push   esi
6400a649:	push   edi
6400a64a:	mov    eax,ds:0x6402c09c
6400a64f:	xor    eax,esp
6400a651:	push   eax
6400a652:	lea    eax,[esp+0x10088]
6400a659:	mov    fs:0x0,eax
6400a65f:	mov    eax,DWORD PTR [esp+0x10098]
6400a666:	mov    esi,DWORD PTR [esp+0x100a0]
6400a66d:	mov    ebp,DWORD PTR ds:0x640241c0
6400a673:	mov    DWORD PTR [esp+0x18],eax
6400a677:	mov    eax,DWORD PTR [esp+0x100b8]
6400a67e:	mov    DWORD PTR [esp+0x2c],ecx
6400a682:	mov    ecx,DWORD PTR [esp+0x100bc]
6400a689:	mov    DWORD PTR [esp+0x28],edx
6400a68d:	mov    edx,DWORD PTR [esp+0x100c0]
6400a694:	mov    DWORD PTR [esp+0x54],eax
6400a698:	mov    eax,DWORD PTR [esp+0x100c4]
6400a69f:	xor    ebx,ebx
6400a6a1:	mov    DWORD PTR [esp+0x1c],esi
6400a6a5:	mov    DWORD PTR [esp+0x58],ecx
6400a6a9:	mov    DWORD PTR [esp+0x5c],edx
6400a6ad:	mov    DWORD PTR [esp+0x60],eax
6400a6b1:	mov    BYTE PTR [esp+0x17],bl
6400a6b5:	xor    edi,edi
6400a6b7:	jmp    0x6400a6c0
6400a6b9:	lea    esp,[esp+0x0]
6400a6c0:	mov    DWORD PTR [esp+0x50],0xf
6400a6c8:	mov    DWORD PTR [esp+0x4c],ebx
6400a6cc:	mov    BYTE PTR [esp+0x3c],bl
6400a6d0:	mov    DWORD PTR [esp+0x10090],ebx
6400a6d7:	mov    edx,DWORD PTR [esp+0x58]
6400a6db:	mov    eax,DWORD PTR [esp+0x5c]
6400a6df:	mov    ecx,DWORD PTR [esp+0x54]
6400a6e3:	mov    DWORD PTR [esp+0x70],eax
6400a6e7:	mov    eax,DWORD PTR [esp+0x100a8]
6400a6ee:	mov    DWORD PTR [esp+0x68],ecx
6400a6f2:	mov    ecx,DWORD PTR [esp+0x60]
6400a6f6:	mov    DWORD PTR [esp+0x6c],edx
6400a6fa:	mov    dl,BYTE PTR [esp+0x100ac]
6400a701:	push   eax
6400a702:	mov    DWORD PTR [esp+0x78],ecx
6400a706:	mov    DWORD PTR [esp+0x7c],eax
6400a70a:	mov    DWORD PTR [esp+0x80],edi
6400a711:	mov    BYTE PTR [esp+0x84],dl
6400a718:	call   ebp
6400a71a:	mov    DWORD PTR [esp+0x78],eax
6400a71e:	mov    eax,DWORD PTR [esp+0x7c]
6400a722:	push   eax
6400a723:	call   ebp
6400a725:	push   0x19
6400a727:	lea    ecx,[esp+0x6c]
6400a72b:	mov    DWORD PTR [esp+0x80],eax
6400a732:	push   ecx
6400a733:	lea    eax,[esp+0x40]
6400a737:	call   0x6400a150
6400a73c:	cmp    esi,ebx
6400a73e:	je     0x6400a752
6400a740:	mov    edx,DWORD PTR [esp+0x100a4]
6400a747:	push   edx
6400a748:	push   esi
6400a749:	lea    eax,[esp+0x40]
6400a74d:	call   0x6400a150
6400a752:	cmp    DWORD PTR [esp+0x50],0x10
6400a757:	mov    eax,DWORD PTR [esp+0x3c]
6400a75b:	jae    0x6400a761
6400a75d:	lea    eax,[esp+0x3c]
6400a761:	mov    ecx,DWORD PTR [esp+0x4c]
6400a765:	push   ecx
6400a766:	push   eax
6400a767:	lea    ecx,[esp+0x2c]
6400a76b:	lea    ebx,[esp+0x38]
6400a76f:	call   0x6400d8e0
6400a774:	mov    edx,DWORD PTR [eax]
6400a776:	mov    esi,edx
6400a778:	mov    DWORD PTR [eax],0x0
6400a77e:	mov    DWORD PTR [esp+0x28],esi
6400a782:	mov    BYTE PTR [esp+0x10098],0x1
6400a78a:	mov    eax,DWORD PTR [esp+0x38]
6400a78e:	push   eax
6400a78f:	call   0x64011d22
6400a794:	add    esp,0xc
6400a797:	lea    ecx,[esp+0x34]
6400a79b:	push   0x0
6400a79d:	push   ecx
6400a79e:	mov    DWORD PTR [esp+0x3c],0x0
6400a7a6:	call   0x6400e330
6400a7ab:	call   eax
6400a7ad:	test   eax,eax
6400a7af:	je     0x6400a83e
6400a7b5:	mov    eax,DWORD PTR [esp+0x100b0]
6400a7bc:	cmp    eax,0x1388
6400a7c1:	jb     0x6400a7c8
6400a7c3:	mov    eax,0x1388
6400a7c8:	mov    ecx,DWORD PTR [esp+0x1009c]
6400a7cf:	push   eax
6400a7d0:	mov    eax,DWORD PTR [esp+0x28]
6400a7d4:	push   0xffff
6400a7d9:	lea    edx,[esp+0x8c]
6400a7e0:	push   edx
6400a7e1:	mov    edx,DWORD PTR [esp+0x24]
6400a7e5:	push   0x0
6400a7e7:	push   eax
6400a7e8:	mov    eax,DWORD PTR [edx]
6400a7ea:	push   esi
6400a7eb:	push   ecx
6400a7ec:	push   eax
6400a7ed:	call   0x6400db10
6400a7f2:	call   eax
6400a7f4:	mov    ebx,eax
6400a7f6:	test   ebx,ebx
6400a7f8:	jne    0x6400a841
6400a7fa:	push   esi
6400a7fb:	call   0x64011d22
6400a800:	add    esp,0x4
6400a803:	cmp    BYTE PTR [esp+0x100b4],bl
6400a80a:	mov    DWORD PTR [esp+0x10090],0xffffffff
6400a815:	je     0x6400a863
6400a817:	cmp    DWORD PTR [esp+0x50],0x10
6400a81c:	jb     0x6400a82b
6400a81e:	mov    ecx,DWORD PTR [esp+0x3c]
6400a822:	push   ecx
6400a823:	call   0x64011d22
6400a828:	add    esp,0x4
6400a82b:	add    edi,0x1
6400a82e:	cmp    edi,0x5
6400a831:	je     0x6400a877
6400a833:	mov    esi,DWORD PTR [esp+0x1c]
6400a837:	xor    ebx,ebx
6400a839:	jmp    0x6400a6c0
6400a83e:	or     ebx,0xffffffff
6400a841:	push   esi
6400a842:	call   0x64011d22
6400a847:	add    esp,0x4
6400a84a:	mov    DWORD PTR [esp+0x10090],0xffffffff
6400a855:	cmp    DWORD PTR [esp+0x50],0x10
6400a85a:	jb     0x6400a877
6400a85c:	mov    edx,DWORD PTR [esp+0x3c]
6400a860:	push   edx
6400a861:	jmp    0x6400a86f
6400a863:	cmp    DWORD PTR [esp+0x50],0x10
6400a868:	jb     0x6400a877
6400a86a:	mov    eax,DWORD PTR [esp+0x3c]
6400a86e:	push   eax
6400a86f:	call   0x64011d22
6400a874:	add    esp,0x4
6400a877:	test   ebx,ebx
6400a879:	je     0x6400aa1f
6400a87f:	mov    ax,WORD PTR [esp+0x90]
6400a887:	test   ax,ax
6400a88a:	je     0x6400aa13
6400a890:	lea    ecx,[esp+0x24]
6400a894:	push   ecx
6400a895:	lea    edx,[esp+0xa4]
6400a89c:	movzx  ebx,ax
6400a89f:	push   edx
6400a8a0:	lea    edi,[esp+0x24]
6400a8a4:	call   0x6400da10
6400a8a9:	mov    ecx,DWORD PTR [eax]
6400a8ab:	mov    ebp,ecx
6400a8ad:	xor    ebx,ebx
6400a8af:	mov    DWORD PTR [eax],ebx
6400a8b1:	mov    DWORD PTR [esp+0x28],ebp
6400a8b5:	mov    DWORD PTR [esp+0x10098],0x2
6400a8c0:	mov    edx,DWORD PTR [esp+0x24]
6400a8c4:	push   edx
6400a8c5:	call   0x64011d22
6400a8ca:	add    esp,0xc
6400a8cd:	cmp    ebp,ebx
6400a8cf:	je     0x6400aa02
6400a8d5:	mov    eax,DWORD PTR [ebp+0x10]
6400a8d8:	push   eax
6400a8d9:	call   DWORD PTR ds:0x640241c4
6400a8df:	cmp    BYTE PTR [esp+0x100ac],bl
6400a8e6:	mov    DWORD PTR [esp+0x18],eax
6400a8ea:	mov    DWORD PTR [ebp+0x10],eax
6400a8ed:	jne    0x6400a8ff
6400a8ef:	cmp    DWORD PTR [esp+0x100a8],ebx
6400a8f6:	jle    0x6400a8ff
6400a8f8:	mov    DWORD PTR [esp+0x100a8],ebx
6400a8ff:	mov    ecx,0x10
6400a904:	lea    edx,[esp+0x54]
6400a908:	mov    esi,ebp
6400a90a:	lea    ebx,[ebx+0x0]
6400a910:	mov    eax,DWORD PTR [esi]
6400a912:	cmp    eax,DWORD PTR [edx]
6400a914:	jne    0x6400a928
6400a916:	sub    ecx,0x4
6400a919:	add    edx,0x4
6400a91c:	add    esi,0x4
6400a91f:	cmp    ecx,0x4
6400a922:	jae    0x6400a910
6400a924:	cmp    ecx,ebx
6400a926:	je     0x6400a985
6400a928:	movzx  edi,BYTE PTR [esi]
6400a92b:	movzx  eax,BYTE PTR [edx]
6400a92e:	sub    edi,eax
6400a930:	jne    0x6400a977
6400a932:	sub    ecx,0x1
6400a935:	add    edx,0x1
6400a938:	add    esi,0x1
6400a93b:	cmp    ecx,ebx
6400a93d:	je     0x6400a985
6400a93f:	movzx  edi,BYTE PTR [esi]
6400a942:	movzx  eax,BYTE PTR [edx]
6400a945:	sub    edi,eax
6400a947:	jne    0x6400a977
6400a949:	sub    ecx,0x1
6400a94c:	add    edx,0x1
6400a94f:	add    esi,0x1
6400a952:	cmp    ecx,ebx
6400a954:	je     0x6400a985
6400a956:	movzx  edi,BYTE PTR [esi]
6400a959:	movzx  eax,BYTE PTR [edx]
6400a95c:	sub    edi,eax
6400a95e:	jne    0x6400a977
6400a960:	sub    ecx,0x1
6400a963:	add    edx,0x1
6400a966:	add    esi,0x1
6400a969:	cmp    ecx,ebx
6400a96b:	je     0x6400a985
6400a96d:	movzx  edi,BYTE PTR [esi]
6400a970:	movzx  ecx,BYTE PTR [edx]
6400a973:	sub    edi,ecx
6400a975:	je     0x6400a985
6400a977:	cmp    edi,ebx
6400a979:	mov    ecx,0x1
6400a97e:	jg     0x6400a987
6400a980:	or     ecx,0xffffffff
6400a983:	jmp    0x6400a987
6400a985:	xor    ecx,ecx
6400a987:	cmp    ecx,ebx
6400a989:	jne    0x6400aa02
6400a98b:	mov    edx,DWORD PTR [esp+0x100a8]
6400a992:	cmp    DWORD PTR [esp+0x18],edx
6400a996:	jne    0x6400aa02
6400a998:	mov    al,BYTE PTR [ebp+0x14]
6400a99b:	mov    ecx,DWORD PTR [esp+0x28]
6400a99f:	mov    BYTE PTR [ecx],al
6400a9a1:	mov    eax,DWORD PTR [esp+0x24]
6400a9a5:	add    eax,0xffffffeb
6400a9a8:	push   eax
6400a9a9:	lea    edx,[ebp+0x15]
6400a9ac:	push   edx
6400a9ad:	lea    ecx,[esp+0x40]
6400a9b1:	mov    DWORD PTR [esp+0x58],0xf
6400a9b9:	mov    DWORD PTR [esp+0x54],ebx
6400a9bd:	mov    BYTE PTR [esp+0x44],bl
6400a9c1:	call   0x64001860
6400a9c6:	mov    ecx,DWORD PTR [esp+0x2c]
6400a9ca:	push   0xffffffff
6400a9cc:	push   ebx
6400a9cd:	lea    eax,[esp+0x40]
6400a9d1:	push   eax
6400a9d2:	mov    BYTE PTR [esp+0x1009c],0x3
6400a9da:	call   0x64001780
6400a9df:	cmp    DWORD PTR [esp+0x50],0x10
6400a9e4:	jb     0x6400a9f3
6400a9e6:	mov    ecx,DWORD PTR [esp+0x3c]
6400a9ea:	push   ecx
6400a9eb:	call   0x64011d22
6400a9f0:	add    esp,0x4
6400a9f3:	push   ebp
6400a9f4:	mov    bl,0x1
6400a9f6:	call   0x64011d22
6400a9fb:	add    esp,0x4
6400a9fe:	mov    al,bl
6400aa00:	jmp    0x6400aa23
6400aa02:	mov    bl,BYTE PTR [esp+0x17]
6400aa06:	push   ebp
6400aa07:	call   0x64011d22
6400aa0c:	add    esp,0x4
6400aa0f:	mov    al,bl
6400aa11:	jmp    0x6400aa23
6400aa13:	cmp    BYTE PTR [esp+0x100ac],0x0
6400aa1b:	mov    al,0x1
6400aa1d:	jne    0x6400aa23
6400aa1f:	mov    al,BYTE PTR [esp+0x17]
6400aa23:	mov    ecx,DWORD PTR [esp+0x10088]
6400aa2a:	mov    DWORD PTR fs:0x0,ecx
6400aa31:	pop    ecx
6400aa32:	pop    edi
6400aa33:	pop    esi
6400aa34:	pop    ebp
6400aa35:	pop    ebx
6400aa36:	mov    ecx,DWORD PTR [esp+0x10070]
6400aa3d:	xor    ecx,esp
6400aa3f:	call   0x6401257c
6400aa44:	add    esp,0x10080
6400aa4a:	ret    0x30
6400aa4d:	int3   
6400aa4e:	int3   
6400aa4f:	int3   
6400aa50:	push   0xffffffff
6400aa52:	push   0x64021f0b
6400aa57:	mov    eax,fs:0x0
6400aa5d:	push   eax
6400aa5e:	push   ecx
6400aa5f:	push   esi
6400aa60:	mov    eax,ds:0x6402c09c
6400aa65:	xor    eax,esp
6400aa67:	push   eax
6400aa68:	lea    eax,[esp+0xc]
6400aa6c:	mov    fs:0x0,eax
6400aa72:	push   0xc
6400aa74:	call   0x64012101
6400aa79:	mov    esi,eax
6400aa7b:	add    esp,0x4
6400aa7e:	mov    DWORD PTR [esp+0x8],esi
6400aa82:	test   esi,esi
6400aa84:	mov    DWORD PTR [esp+0x14],0x0
6400aa8c:	je     0x6400aaaa
6400aa8e:	mov    eax,DWORD PTR [esp+0x1c]
6400aa92:	push   eax
6400aa93:	mov    DWORD PTR [esi+0x4],0x0
6400aa9a:	mov    DWORD PTR [esi+0x8],0x1
6400aaa1:	call   0x6401e4c0
6400aaa6:	mov    DWORD PTR [esi],eax
6400aaa8:	jmp    0x6400aaac
6400aaaa:	xor    esi,esi
6400aaac:	test   esi,esi
6400aaae:	mov    DWORD PTR [esp+0x14],0xffffffff
6400aab6:	mov    DWORD PTR [ebx],esi
6400aab8:	jne    0x6400aac4
6400aaba:	push   0x8007000e
6400aabf:	call   0x6401e4b0
6400aac4:	mov    eax,ebx
6400aac6:	mov    ecx,DWORD PTR [esp+0xc]
6400aaca:	mov    DWORD PTR fs:0x0,ecx
6400aad1:	pop    ecx
6400aad2:	pop    esi
6400aad3:	add    esp,0x10
6400aad6:	ret    0x4
6400aad9:	int3   
6400aada:	int3   
6400aadb:	int3   
6400aadc:	int3   
6400aadd:	int3   
6400aade:	int3   
6400aadf:	int3   
6400aae0:	push   0xffffffff
6400aae2:	push   0x64021edb
6400aae7:	mov    eax,fs:0x0
6400aaed:	push   eax
6400aaee:	push   ebp
6400aaef:	push   esi
6400aaf0:	mov    eax,ds:0x6402c09c
6400aaf5:	xor    eax,esp
6400aaf7:	push   eax
6400aaf8:	lea    eax,[esp+0xc]
6400aafc:	mov    fs:0x0,eax
6400ab02:	mov    ebp,DWORD PTR [esp+0x1c]
6400ab06:	push   0xc
6400ab08:	call   0x64012101
6400ab0d:	mov    esi,eax
6400ab0f:	add    esp,0x4
6400ab12:	mov    DWORD PTR [esp+0x1c],esi
6400ab16:	test   esi,esi
6400ab18:	mov    DWORD PTR [esp+0x14],0x0
6400ab20:	je     0x6400ab4d
6400ab22:	push   edi
6400ab23:	mov    DWORD PTR [esi+0x4],0x0
6400ab2a:	mov    DWORD PTR [esi+0x8],0x1
6400ab31:	call   DWORD PTR ds:0x64024198
6400ab37:	test   eax,eax
6400ab39:	mov    DWORD PTR [esi],eax
6400ab3b:	jne    0x6400ab4f
6400ab3d:	test   edi,edi
6400ab3f:	je     0x6400ab4f
6400ab41:	push   0x8007000e
6400ab46:	call   0x6401e4b0
6400ab4b:	jmp    0x6400ab4f
6400ab4d:	xor    esi,esi
6400ab4f:	test   esi,esi
6400ab51:	mov    DWORD PTR [esp+0x14],0xffffffff
6400ab59:	mov    DWORD PTR [ebp+0x0],esi
6400ab5c:	jne    0x6400ab68
6400ab5e:	push   0x8007000e
6400ab63:	call   0x6401e4b0
6400ab68:	mov    eax,ebp
6400ab6a:	mov    ecx,DWORD PTR [esp+0xc]
6400ab6e:	mov    DWORD PTR fs:0x0,ecx
6400ab75:	pop    ecx
6400ab76:	pop    esi
6400ab77:	pop    ebp
6400ab78:	add    esp,0xc
6400ab7b:	ret    0x4
6400ab7e:	int3   
6400ab7f:	int3   
6400ab80:	push   esi
6400ab81:	mov    esi,DWORD PTR [edi]
6400ab83:	test   esi,esi
6400ab85:	je     0x6400abc5
6400ab87:	lea    eax,[esi+0x8]
6400ab8a:	push   eax
6400ab8b:	call   DWORD PTR ds:0x64024098
6400ab91:	test   eax,eax
6400ab93:	jne    0x6400abbf
6400ab95:	test   esi,esi
6400ab97:	je     0x6400abbf
6400ab99:	mov    eax,DWORD PTR [esi]
6400ab9b:	test   eax,eax
6400ab9d:	je     0x6400aba6
6400ab9f:	push   eax
6400aba0:	call   DWORD PTR ds:0x640241a0
6400aba6:	mov    eax,DWORD PTR [esi+0x4]
6400aba9:	test   eax,eax
6400abab:	je     0x6400abb6
6400abad:	push   eax
6400abae:	call   0x64012bfa
6400abb3:	add    esp,0x4
6400abb6:	push   esi
6400abb7:	call   0x64011d22
6400abbc:	add    esp,0x4
6400abbf:	mov    DWORD PTR [edi],0x0
6400abc5:	pop    esi
6400abc6:	ret    
6400abc7:	int3   
6400abc8:	int3   
6400abc9:	int3   
6400abca:	int3   
6400abcb:	int3   
6400abcc:	int3   
6400abcd:	int3   
6400abce:	int3   
6400abcf:	int3   
6400abd0:	push   0xffffffff
6400abd2:	push   0x64021eab
6400abd7:	mov    eax,fs:0x0
6400abdd:	push   eax
6400abde:	push   ebp
6400abdf:	push   esi
6400abe0:	mov    eax,ds:0x6402c09c
6400abe5:	xor    eax,esp
6400abe7:	push   eax
6400abe8:	lea    eax,[esp+0xc]
6400abec:	mov    fs:0x0,eax
6400abf2:	mov    ebp,DWORD PTR [esp+0x1c]
6400abf6:	test   ebp,ebp
6400abf8:	je     0x6400ac0e
6400abfa:	mov    eax,DWORD PTR [ebx]
6400abfc:	test   eax,eax
6400abfe:	je     0x6400ac04
6400ac00:	mov    eax,DWORD PTR [eax]
6400ac02:	jmp    0x6400ac06
6400ac04:	xor    eax,eax
6400ac06:	cmp    eax,ebp
6400ac08:	je     0x6400acb3
6400ac0e:	mov    esi,DWORD PTR [ebx]
6400ac10:	test   esi,esi
6400ac12:	je     0x6400ac52
6400ac14:	lea    eax,[esi+0x8]
6400ac17:	push   eax
6400ac18:	call   DWORD PTR ds:0x64024098
6400ac1e:	test   eax,eax
6400ac20:	jne    0x6400ac4c
6400ac22:	test   esi,esi
6400ac24:	je     0x6400ac4c
6400ac26:	mov    eax,DWORD PTR [esi]
6400ac28:	test   eax,eax
6400ac2a:	je     0x6400ac33
6400ac2c:	push   eax
6400ac2d:	call   DWORD PTR ds:0x640241a0
6400ac33:	mov    eax,DWORD PTR [esi+0x4]
6400ac36:	test   eax,eax
6400ac38:	je     0x6400ac43
6400ac3a:	push   eax
6400ac3b:	call   0x64012bfa
6400ac40:	add    esp,0x4
6400ac43:	push   esi
6400ac44:	call   0x64011d22
6400ac49:	add    esp,0x4
6400ac4c:	mov    DWORD PTR [ebx],0x0
6400ac52:	push   0xc
6400ac54:	call   0x64012101
6400ac59:	mov    esi,eax
6400ac5b:	add    esp,0x4
6400ac5e:	mov    DWORD PTR [esp+0x1c],esi
6400ac62:	test   esi,esi
6400ac64:	mov    DWORD PTR [esp+0x14],0x0
6400ac6c:	je     0x6400ac99
6400ac6e:	push   ebp
6400ac6f:	mov    DWORD PTR [esi+0x4],0x0
6400ac76:	mov    DWORD PTR [esi+0x8],0x1
6400ac7d:	call   DWORD PTR ds:0x64024198
6400ac83:	test   eax,eax
6400ac85:	mov    DWORD PTR [esi],eax
6400ac87:	jne    0x6400ac9b
6400ac89:	test   ebp,ebp
6400ac8b:	je     0x6400ac9b
6400ac8d:	push   0x8007000e
6400ac92:	call   0x6401e4b0
6400ac97:	jmp    0x6400ac9b
6400ac99:	xor    esi,esi
6400ac9b:	test   esi,esi
6400ac9d:	mov    DWORD PTR [esp+0x14],0xffffffff
6400aca5:	mov    DWORD PTR [ebx],esi
6400aca7:	jne    0x6400acb3
6400aca9:	push   0x8007000e
6400acae:	call   0x6401e4b0
6400acb3:	mov    eax,ebx
6400acb5:	mov    ecx,DWORD PTR [esp+0xc]
6400acb9:	mov    DWORD PTR fs:0x0,ecx
6400acc0:	pop    ecx
6400acc1:	pop    esi
6400acc2:	pop    ebp
6400acc3:	add    esp,0xc
6400acc6:	ret    0x4
6400acc9:	int3   
6400acca:	int3   
6400accb:	int3   
6400accc:	int3   
6400accd:	int3   
6400acce:	int3   
6400accf:	int3   
6400acd0:	push   0xffffffff
6400acd2:	push   0x64021f3b
6400acd7:	mov    eax,fs:0x0
6400acdd:	push   eax
6400acde:	push   ecx
6400acdf:	push   esi
6400ace0:	push   edi
6400ace1:	mov    eax,ds:0x6402c09c
6400ace6:	xor    eax,esp
6400ace8:	push   eax
6400ace9:	lea    eax,[esp+0x10]
6400aced:	mov    fs:0x0,eax
6400acf3:	push   0xc
6400acf5:	call   0x64012101
6400acfa:	add    esp,0x4
6400acfd:	mov    DWORD PTR [esp+0xc],eax
6400ad01:	test   eax,eax
6400ad03:	mov    DWORD PTR [esp+0x18],0x0
6400ad0b:	je     0x6400ad1e
6400ad0d:	mov    ecx,DWORD PTR [esp+0x20]
6400ad11:	push   ecx
6400ad12:	push   ebx
6400ad13:	mov    edi,eax
6400ad15:	call   0x6400ae30
6400ad1a:	mov    edi,eax
6400ad1c:	jmp    0x6400ad20
6400ad1e:	xor    edi,edi
6400ad20:	test   edi,edi
6400ad22:	mov    DWORD PTR [esp+0x18],0xffffffff
6400ad2a:	jne    0x6400ad38
6400ad2c:	push   0x8007000e
6400ad31:	call   0x6401e4b0
6400ad36:	jmp    0x6400ad7e
6400ad38:	mov    esi,DWORD PTR [ebx]
6400ad3a:	test   esi,esi
6400ad3c:	je     0x6400ad7c
6400ad3e:	lea    edx,[esi+0x8]
6400ad41:	push   edx
6400ad42:	call   DWORD PTR ds:0x64024098
6400ad48:	test   eax,eax
6400ad4a:	jne    0x6400ad76
6400ad4c:	test   esi,esi
6400ad4e:	je     0x6400ad76
6400ad50:	mov    eax,DWORD PTR [esi]
6400ad52:	test   eax,eax
6400ad54:	je     0x6400ad5d
6400ad56:	push   eax
6400ad57:	call   DWORD PTR ds:0x640241a0
6400ad5d:	mov    eax,DWORD PTR [esi+0x4]
6400ad60:	test   eax,eax
6400ad62:	je     0x6400ad6d
6400ad64:	push   eax
6400ad65:	call   0x64012bfa
6400ad6a:	add    esp,0x4
6400ad6d:	push   esi
6400ad6e:	call   0x64011d22
6400ad73:	add    esp,0x4
6400ad76:	mov    DWORD PTR [ebx],0x0
6400ad7c:	mov    DWORD PTR [ebx],edi
6400ad7e:	mov    eax,ebx
6400ad80:	mov    ecx,DWORD PTR [esp+0x10]
6400ad84:	mov    DWORD PTR fs:0x0,ecx
6400ad8b:	pop    ecx
6400ad8c:	pop    edi
6400ad8d:	pop    esi
6400ad8e:	add    esp,0x10
6400ad91:	ret    0x4
6400ad94:	int3   
6400ad95:	int3   
6400ad96:	int3   
6400ad97:	int3   
6400ad98:	int3   
6400ad99:	int3   
6400ad9a:	int3   
6400ad9b:	int3   
6400ad9c:	int3   
6400ad9d:	int3   
6400ad9e:	int3   
6400ad9f:	int3   
6400ada0:	push   0xffffffff
6400ada2:	push   0x64021fe9
6400ada7:	mov    eax,fs:0x0
6400adad:	push   eax
6400adae:	push   ecx
6400adaf:	push   ebx
6400adb0:	mov    eax,ds:0x6402c09c
6400adb5:	xor    eax,esp
6400adb7:	push   eax
6400adb8:	lea    eax,[esp+0xc]
6400adbc:	mov    fs:0x0,eax
6400adc2:	mov    ebx,DWORD PTR [esp+0x20]
6400adc6:	mov    eax,DWORD PTR [esp+0x1c]
6400adca:	mov    DWORD PTR [esp+0x8],0x0
6400add2:	mov    eax,DWORD PTR [eax]
6400add4:	test   eax,eax
6400add6:	mov    DWORD PTR [ebx],eax
6400add8:	je     0x6400ade4
6400adda:	add    eax,0x8
6400addd:	push   eax
6400adde:	call   DWORD PTR ds:0x64024020
6400ade4:	mov    ecx,DWORD PTR [esp+0x24]
6400ade8:	mov    DWORD PTR [esp+0x14],0x0
6400adf0:	push   ecx
6400adf1:	mov    DWORD PTR [esp+0xc],0x1
6400adf9:	call   0x6400acd0
6400adfe:	mov    eax,ebx
6400ae00:	mov    ecx,DWORD PTR [esp+0xc]
6400ae04:	mov    DWORD PTR fs:0x0,ecx
6400ae0b:	pop    ecx
6400ae0c:	pop    ebx
6400ae0d:	add    esp,0x10
6400ae10:	ret    0xc
6400ae13:	int3   
6400ae14:	int3   
6400ae15:	int3   
6400ae16:	int3   
6400ae17:	int3   
6400ae18:	int3   
6400ae19:	int3   
6400ae1a:	int3   
6400ae1b:	int3   
6400ae1c:	int3   
6400ae1d:	int3   
6400ae1e:	int3   
6400ae1f:	int3   
6400ae20:	mov    eax,DWORD PTR [eax]
6400ae22:	test   eax,eax
6400ae24:	je     0x6400ae29
6400ae26:	mov    eax,DWORD PTR [eax]
6400ae28:	ret    
6400ae29:	xor    eax,eax
6400ae2b:	ret    
6400ae2c:	int3   
6400ae2d:	int3   
6400ae2e:	int3   
6400ae2f:	int3   
6400ae30:	mov    eax,DWORD PTR [esp+0x4]
6400ae34:	push   ebx
6400ae35:	xor    ebx,ebx
6400ae37:	mov    DWORD PTR [edi+0x4],ebx
6400ae3a:	mov    DWORD PTR [edi+0x8],0x1
6400ae41:	mov    eax,DWORD PTR [eax]
6400ae43:	cmp    eax,ebx
6400ae45:	push   ebp
6400ae46:	push   esi
6400ae47:	mov    esi,DWORD PTR ds:0x64024194
6400ae4d:	je     0x6400ae5c
6400ae4f:	mov    eax,DWORD PTR [eax]
6400ae51:	cmp    eax,ebx
6400ae53:	je     0x6400ae5c
6400ae55:	push   eax
6400ae56:	call   esi
6400ae58:	mov    ebp,eax
6400ae5a:	jmp    0x6400ae5e
6400ae5c:	xor    ebp,ebp
6400ae5e:	mov    ecx,DWORD PTR [esp+0x14]
6400ae62:	mov    eax,DWORD PTR [ecx]
6400ae64:	cmp    eax,ebx
6400ae66:	je     0x6400ae73
6400ae68:	mov    eax,DWORD PTR [eax]
6400ae6a:	cmp    eax,ebx
6400ae6c:	je     0x6400ae73
6400ae6e:	push   eax
6400ae6f:	call   esi
6400ae71:	mov    ebx,eax
6400ae73:	lea    esi,[ebx+ebp*1]
6400ae76:	add    esi,esi
6400ae78:	push   esi
6400ae79:	push   0x0
6400ae7b:	call   DWORD PTR ds:0x640241a4
6400ae81:	test   eax,eax
6400ae83:	mov    DWORD PTR [edi],eax
6400ae85:	jne    0x6400ae99
6400ae87:	push   0x8007000e
6400ae8c:	call   0x6401e4b0
6400ae91:	pop    esi
6400ae92:	pop    ebp
6400ae93:	mov    eax,edi
6400ae95:	pop    ebx
6400ae96:	ret    0x8
6400ae99:	mov    edx,DWORD PTR [esp+0x10]
6400ae9d:	mov    ecx,DWORD PTR [edx]
6400ae9f:	test   ecx,ecx
6400aea1:	je     0x6400aebc
6400aea3:	mov    ecx,DWORD PTR [ecx]
6400aea5:	test   ecx,ecx
6400aea7:	je     0x6400aebc
6400aea9:	lea    edx,[ebp+ebp*1+0x2]
6400aead:	push   edx
6400aeae:	push   ecx
6400aeaf:	add    esi,0x2
6400aeb2:	push   esi
6400aeb3:	push   eax
6400aeb4:	call   0x64011ed8
6400aeb9:	add    esp,0x10
6400aebc:	mov    eax,DWORD PTR [esp+0x14]
6400aec0:	mov    eax,DWORD PTR [eax]
6400aec2:	test   eax,eax
6400aec4:	je     0x6400aee1
6400aec6:	mov    ecx,DWORD PTR [eax]
6400aec8:	test   ecx,ecx
6400aeca:	je     0x6400aee1
6400aecc:	lea    eax,[ebx+ebx*1+0x2]
6400aed0:	push   eax
6400aed1:	push   ecx
6400aed2:	mov    ecx,DWORD PTR [edi]
6400aed4:	push   eax
6400aed5:	lea    edx,[ecx+ebp*2]
6400aed8:	push   edx
6400aed9:	call   0x64011ed8
6400aede:	add    esp,0x10
6400aee1:	pop    esi
6400aee2:	pop    ebp
6400aee3:	mov    eax,edi
6400aee5:	pop    ebx
6400aee6:	ret    0x8
6400aee9:	int3   
6400aeea:	int3   
6400aeeb:	int3   
6400aeec:	int3   
6400aeed:	int3   
6400aeee:	int3   
6400aeef:	int3   
6400aef0:	push   ecx
6400aef1:	call   DWORD PTR ds:0x64024190
6400aef7:	ret    
6400aef8:	int3   
6400aef9:	int3   
6400aefa:	int3   
6400aefb:	int3   
6400aefc:	int3   
6400aefd:	int3   
6400aefe:	int3   
6400aeff:	int3   
6400af00:	push   0xffffffff
6400af02:	push   0x64021fa8
6400af07:	mov    eax,fs:0x0
6400af0d:	push   eax
6400af0e:	sub    esp,0x18
6400af11:	push   ebx
6400af12:	mov    eax,ds:0x6402c09c
6400af17:	xor    eax,esp
6400af19:	push   eax
6400af1a:	lea    eax,[esp+0x20]
6400af1e:	mov    fs:0x0,eax
6400af24:	mov    ebx,ecx
6400af26:	cmp    WORD PTR [esi],0x8
6400af2a:	jne    0x6400af48
6400af2c:	mov    eax,DWORD PTR [esi+0x8]
6400af2f:	push   eax
6400af30:	call   0x6400abd0
6400af35:	mov    eax,ebx
6400af37:	mov    ecx,DWORD PTR [esp+0x20]
6400af3b:	mov    DWORD PTR fs:0x0,ecx
6400af42:	pop    ecx
6400af43:	pop    ebx
6400af44:	add    esp,0x24
6400af47:	ret    
6400af48:	lea    ecx,[esp+0xc]
6400af4c:	push   ecx
6400af4d:	call   DWORD PTR ds:0x64024188
6400af53:	lea    edx,[esp+0xc]
6400af57:	cmp    edx,esi
6400af59:	mov    DWORD PTR [esp+0x28],0x0
6400af61:	jne    0x6400af6b
6400af63:	cmp    WORD PTR [esp+0xc],0x8
6400af69:	je     0x6400af85
6400af6b:	push   0x8
6400af6d:	push   0x0
6400af6f:	push   esi
6400af70:	lea    eax,[esp+0x18]
6400af74:	push   eax
6400af75:	call   DWORD PTR ds:0x6402419c
6400af7b:	test   eax,eax
6400af7d:	jge    0x6400af85
6400af7f:	push   eax
6400af80:	call   0x6401e4b0
6400af85:	mov    ecx,DWORD PTR [esp+0x14]
6400af89:	push   ecx
6400af8a:	call   0x6400abd0
6400af8f:	lea    edx,[esp+0xc]
6400af93:	push   edx
6400af94:	call   DWORD PTR ds:0x64024190
6400af9a:	mov    eax,ebx
6400af9c:	mov    ecx,DWORD PTR [esp+0x20]
6400afa0:	mov    DWORD PTR fs:0x0,ecx
6400afa7:	pop    ecx
6400afa8:	pop    ebx
6400afa9:	add    esp,0x24
6400afac:	ret    
6400afad:	int3   
6400afae:	int3   
6400afaf:	int3   
6400afb0:	sub    esp,0x8
6400afb3:	test   eax,eax
6400afb5:	mov    BYTE PTR [edi],0x0
6400afb8:	jle    0x6400b10e
6400afbe:	push   ebx
6400afbf:	push   ebp
6400afc0:	push   esi
6400afc1:	xor    esi,esi
6400afc3:	add    eax,ecx
6400afc5:	mov    BYTE PTR [esp+0xf],0x0
6400afca:	mov    BYTE PTR [edi],0x0
6400afcd:	mov    DWORD PTR [esp+0x10],eax
6400afd1:	mov    ebp,eax
6400afd3:	mov    al,BYTE PTR [ebp+0x0]
6400afd6:	test   al,al
6400afd8:	je     0x6400b084
6400afde:	movsx  edx,al
6400afe1:	push   edx
6400afe2:	call   0x6401336f
6400afe7:	mov    bl,al
6400afe9:	movsx  eax,bl
6400afec:	push   eax
6400afed:	call   0x640131b0
6400aff2:	add    esp,0x8
6400aff5:	test   eax,eax
6400aff7:	je     0x6400affb
6400aff9:	mov    bl,0x30
6400affb:	shl    BYTE PTR [esi+edi*1],0x4
6400afff:	add    BYTE PTR [esp+0xf],0x1
6400b004:	mov    cl,BYTE PTR [esi+edi*1]
6400b007:	mov    al,bl
6400b009:	sub    al,0x30
6400b00b:	cmp    al,0x9
6400b00d:	ja     0x6400b016
6400b00f:	or     al,cl
6400b011:	mov    BYTE PTR [esi+edi*1],al
6400b014:	jmp    0x6400b028
6400b016:	mov    dl,bl
6400b018:	sub    dl,0x61
6400b01b:	cmp    dl,0x5
6400b01e:	ja     0x6400b05a
6400b020:	sub    bl,0x57
6400b023:	or     bl,cl
6400b025:	mov    BYTE PTR [esi+edi*1],bl
6400b028:	cmp    BYTE PTR [esp+0xf],0x2
6400b02d:	jne    0x6400b052
6400b02f:	mov    al,BYTE PTR [esi+edi*1]
6400b032:	test   al,al
6400b034:	je     0x6400b046
6400b036:	movsx  eax,al
6400b039:	push   eax
6400b03a:	call   0x6401322d
6400b03f:	add    esp,0x4
6400b042:	test   eax,eax
6400b044:	je     0x6400b05a
6400b046:	add    esi,0x1
6400b049:	mov    BYTE PTR [esp+0xf],0x0
6400b04e:	mov    BYTE PTR [esi+edi*1],0x0
6400b052:	add    ebp,0x1
6400b055:	jmp    0x6400afd3
6400b05a:	mov    ebp,DWORD PTR [esp+0x10]
6400b05e:	xor    esi,esi
6400b060:	mov    bl,BYTE PTR [ebp+0x0]
6400b063:	test   bl,bl
6400b065:	je     0x6400b084
6400b067:	movsx  ecx,bl
6400b06a:	push   ecx
6400b06b:	call   0x6401322d
6400b070:	add    esp,0x4
6400b073:	test   eax,eax
6400b075:	je     0x6400b082
6400b077:	mov    BYTE PTR [esi+edi*1],bl
6400b07a:	add    esi,0x1
6400b07d:	add    ebp,0x1
6400b080:	jmp    0x6400b060
6400b082:	xor    esi,esi
6400b084:	cmp    DWORD PTR [esp+0x18],0x0
6400b089:	mov    BYTE PTR [esi+edi*1],0x0
6400b08d:	je     0x6400b0b2
6400b08f:	test   esi,esi
6400b091:	jle    0x6400b0b2
6400b093:	add    esi,0xffffffff
6400b096:	shr    esi,1
6400b098:	lea    eax,[edi+0x1]
6400b09b:	add    esi,0x1
6400b09e:	mov    edi,edi
6400b0a0:	mov    cl,BYTE PTR [eax-0x1]
6400b0a3:	mov    dl,BYTE PTR [eax]
6400b0a5:	mov    BYTE PTR [eax-0x1],dl
6400b0a8:	mov    BYTE PTR [eax],cl
6400b0aa:	add    eax,0x2
6400b0ad:	sub    esi,0x1
6400b0b0:	jne    0x6400b0a0
6400b0b2:	or     ebx,0xffffffff
6400b0b5:	or     ebp,ebx
6400b0b7:	xor    esi,esi
6400b0b9:	cmp    BYTE PTR [edi],0x0
6400b0bc:	je     0x6400b10b
6400b0be:	mov    edi,edi
6400b0c0:	movsx  eax,BYTE PTR [esi+edi*1]
6400b0c4:	push   eax
6400b0c5:	call   0x640131b0
6400b0ca:	add    esp,0x4
6400b0cd:	test   eax,eax
6400b0cf:	jne    0x6400b0d9
6400b0d1:	test   ebp,ebp
6400b0d3:	jge    0x6400b0d7
6400b0d5:	mov    ebp,esi
6400b0d7:	mov    ebx,esi
6400b0d9:	add    esi,0x1
6400b0dc:	cmp    BYTE PTR [esi+edi*1],0x0
6400b0e0:	jne    0x6400b0c0
6400b0e2:	test   ebp,ebp
6400b0e4:	jl     0x6400b10b
6400b0e6:	test   ebx,ebx
6400b0e8:	jl     0x6400b10b
6400b0ea:	cmp    ebp,ebx
6400b0ec:	mov    eax,ebp
6400b0ee:	jg     0x6400b105
6400b0f0:	mov    edx,edi
6400b0f2:	sub    edx,ebp
6400b0f4:	mov    cl,BYTE PTR [eax+edi*1]
6400b0f7:	test   cl,cl
6400b0f9:	je     0x6400b105
6400b0fb:	mov    BYTE PTR [edx+eax*1],cl
6400b0fe:	add    eax,0x1
6400b101:	cmp    eax,ebx
6400b103:	jle    0x6400b0f4
6400b105:	sub    eax,ebp
6400b107:	mov    BYTE PTR [eax+edi*1],0x0
6400b10b:	pop    esi
6400b10c:	pop    ebp
6400b10d:	pop    ebx
6400b10e:	mov    eax,edi
6400b110:	add    esp,0x8
6400b113:	ret    
6400b114:	int3   
6400b115:	int3   
6400b116:	int3   
6400b117:	int3   
6400b118:	int3   
6400b119:	int3   
6400b11a:	int3   
6400b11b:	int3   
6400b11c:	int3   
6400b11d:	int3   
6400b11e:	int3   
6400b11f:	int3   
6400b120:	push   ebp
6400b121:	mov    ebp,esp
6400b123:	and    esp,0xfffffff8
6400b126:	mov    eax,0x2f34
6400b12b:	call   0x64017df0
6400b130:	mov    eax,ds:0x6402c09c
6400b135:	xor    eax,esp
6400b137:	mov    DWORD PTR [esp+0x2f30],eax
6400b13e:	push   ebx
6400b13f:	mov    eax,DWORD PTR [ebp+0x8]
6400b142:	mov    ecx,DWORD PTR [ebp+0xc]
6400b145:	mov    ebx,DWORD PTR [ebp+0x10]
6400b148:	push   esi
6400b149:	push   edi
6400b14a:	xor    edi,edi
6400b14c:	push   edi
6400b14d:	push   edi
6400b14e:	push   0x3
6400b150:	push   edi
6400b151:	push   0x3
6400b153:	push   edi
6400b154:	push   0x64027f5c
6400b159:	push   0x12
6400b15b:	push   0x64027f80
6400b160:	mov    DWORD PTR [esp+0x3c],eax
6400b164:	mov    DWORD PTR [esp+0x40],ecx
6400b168:	mov    BYTE PTR [esp+0x37],0x0
6400b16d:	call   0x64006b80
6400b172:	add    esp,0xc
6400b175:	push   eax
6400b176:	call   0x6400df80
6400b17b:	call   eax
6400b17d:	mov    esi,eax
6400b17f:	cmp    esi,0xffffffff
6400b182:	jne    0x6400b19b
6400b184:	xor    al,al
6400b186:	pop    edi
6400b187:	pop    esi
6400b188:	pop    ebx
6400b189:	mov    ecx,DWORD PTR [esp+0x2f30]
6400b190:	xor    ecx,esp
6400b192:	call   0x6401257c
6400b197:	mov    esp,ebp
6400b199:	pop    ebp
6400b19a:	ret    
6400b19b:	xor    eax,eax
6400b19d:	push   0x2710
6400b1a2:	lea    edx,[esp+0x82c]
6400b1a9:	push   edi
6400b1aa:	mov    DWORD PTR [esp+0x2c],eax
6400b1ae:	mov    DWORD PTR [esp+0x30],eax
6400b1b2:	push   edx
6400b1b3:	mov    DWORD PTR [esp+0x20],edi
6400b1b7:	mov    DWORD PTR [esp+0x38],eax
6400b1bb:	mov    DWORD PTR [esp+0x30],edi
6400b1bf:	mov    DWORD PTR [esp+0x34],edi
6400b1c3:	call   0x64012c00
6400b1c8:	add    esp,0xc
6400b1cb:	push   edi
6400b1cc:	lea    eax,[esp+0x18]
6400b1d0:	push   eax
6400b1d1:	push   0x2710
6400b1d6:	lea    ecx,[esp+0x834]
6400b1dd:	push   ecx
6400b1de:	push   0xc
6400b1e0:	lea    edx,[esp+0x38]
6400b1e4:	push   edx
6400b1e5:	push   0x2d1400
6400b1ea:	push   esi
6400b1eb:	call   0x6400e2b0
6400b1f0:	call   eax
6400b1f2:	test   eax,eax
6400b1f4:	je     0x6400b254
6400b1f6:	mov    eax,DWORD PTR [esp+0x838]
6400b1fd:	push   edi
6400b1fe:	lea    edi,[esp+0x444]
6400b205:	lea    ecx,[esp+0x82c]
6400b20c:	call   0x6400afb0
6400b211:	mov    eax,DWORD PTR [esp+0x844]
6400b218:	add    esp,0x4
6400b21b:	push   0x1
6400b21d:	lea    edi,[esp+0x5c]
6400b221:	lea    ecx,[esp+0x82c]
6400b228:	call   0x6400afb0
6400b22d:	mov    ecx,DWORD PTR [esp+0x1c]
6400b231:	add    esp,0x4
6400b234:	mov    eax,edi
6400b236:	push   eax
6400b237:	call   0x64002810
6400b23c:	lea    ecx,[esp+0x440]
6400b243:	push   ecx
6400b244:	mov    ecx,DWORD PTR [esp+0x20]
6400b248:	call   0x64002810
6400b24d:	mov    BYTE PTR [esp+0x13],0x1
6400b252:	xor    edi,edi
6400b254:	xor    eax,eax
6400b256:	push   edi
6400b257:	lea    edx,[esp+0x24]
6400b25b:	push   edx
6400b25c:	push   0x28
6400b25e:	mov    DWORD PTR [esp+0x40],eax
6400b262:	mov    DWORD PTR [esp+0x44],eax
6400b266:	mov    DWORD PTR [esp+0x48],eax
6400b26a:	mov    DWORD PTR [esp+0x4c],eax
6400b26e:	mov    DWORD PTR [esp+0x50],eax
6400b272:	mov    DWORD PTR [esp+0x54],eax
6400b276:	mov    DWORD PTR [esp+0x58],eax
6400b27a:	mov    DWORD PTR [esp+0x5c],eax
6400b27e:	mov    DWORD PTR [esp+0x60],eax
6400b282:	lea    eax,[esp+0x3c]
6400b286:	push   eax
6400b287:	push   edi
6400b288:	push   edi
6400b289:	push   0x700a0
6400b28e:	push   esi
6400b28f:	mov    DWORD PTR [esp+0x50],edi
6400b293:	mov    DWORD PTR [ebx],edi
6400b295:	mov    DWORD PTR [ebx+0x4],edi
6400b298:	call   0x6400e2b0
6400b29d:	call   eax
6400b29f:	test   eax,eax
6400b2a1:	je     0x6400b2b0
6400b2a3:	mov    ecx,DWORD PTR [esp+0x48]
6400b2a7:	mov    edx,DWORD PTR [esp+0x4c]
6400b2ab:	mov    DWORD PTR [ebx],ecx
6400b2ad:	mov    DWORD PTR [ebx+0x4],edx
6400b2b0:	push   esi
6400b2b1:	call   DWORD PTR ds:0x64024040
6400b2b7:	mov    ecx,DWORD PTR [esp+0x2f3c]
6400b2be:	mov    al,BYTE PTR [esp+0x13]
6400b2c2:	pop    edi
6400b2c3:	pop    esi
6400b2c4:	pop    ebx
6400b2c5:	xor    ecx,esp
6400b2c7:	call   0x6401257c
6400b2cc:	mov    esp,ebp
6400b2ce:	pop    ebp
6400b2cf:	ret    
6400b2d0:	push   ebp
6400b2d1:	lea    ebp,[esp-0x28c]
6400b2d8:	sub    esp,0x28c
6400b2de:	push   0xffffffff
6400b2e0:	push   0x640228c0
6400b2e5:	mov    eax,fs:0x0
6400b2eb:	push   eax
6400b2ec:	sub    esp,0x34
6400b2ef:	mov    eax,ds:0x6402c09c
6400b2f4:	xor    eax,ebp
6400b2f6:	mov    DWORD PTR [ebp+0x288],eax
6400b2fc:	push   ebx
6400b2fd:	push   esi
6400b2fe:	push   edi
6400b2ff:	push   eax
6400b300:	lea    eax,[ebp-0xc]
6400b303:	mov    fs:0x0,eax
6400b309:	mov    eax,DWORD PTR [ebp+0x294]
6400b30f:	lea    ecx,[ebp-0x14]
6400b312:	push   ecx
6400b313:	lea    edx,[ebp+0x0]
6400b316:	push   edx
6400b317:	mov    DWORD PTR [ebp-0x20],eax
6400b31a:	mov    DWORD PTR [ebp-0x14],0x1
6400b321:	call   0x6400dcb0
6400b326:	call   eax
6400b328:	cmp    eax,0x6f
6400b32b:	jne    0x6400b501
6400b331:	mov    eax,DWORD PTR [ebp-0x14]
6400b334:	push   eax
6400b335:	call   0x64011d1d
6400b33a:	mov    ebx,eax
6400b33c:	add    esp,0x4
6400b33f:	mov    DWORD PTR [ebp-0x24],ebx
6400b342:	lea    ecx,[ebp-0x14]
6400b345:	push   ecx
6400b346:	push   ebx
6400b347:	mov    DWORD PTR [ebp-0x4],0x0
6400b34e:	call   0x6400dcb0
6400b353:	call   eax
6400b355:	test   eax,eax
6400b357:	je     0x6400b35f
6400b359:	push   ebx
6400b35a:	jmp    0x6400b4f9
6400b35f:	call   DWORD PTR ds:0x6402c06c
6400b365:	mov    edx,DWORD PTR ds:0x6402d560
6400b36b:	mov    DWORD PTR [ebp-0x1c],eax
6400b36e:	mov    eax,DWORD PTR [edx+0xc]
6400b371:	mov    ecx,0x6402d560
6400b376:	call   eax
6400b378:	lea    edi,[eax+0x10]
6400b37b:	mov    DWORD PTR [ebp-0x10],edi
6400b37e:	xor    esi,esi
6400b380:	mov    BYTE PTR [ebp-0x4],0x1
6400b384:	cmp    DWORD PTR [ebx+0x190],esi
6400b38a:	je     0x6400b412
6400b390:	mov    edx,DWORD PTR ds:0x6402d560
6400b396:	mov    eax,DWORD PTR [edx+0xc]
6400b399:	mov    ecx,0x6402d560
6400b39e:	call   eax
6400b3a0:	add    eax,0x10
6400b3a3:	mov    DWORD PTR [ebp-0x18],eax
6400b3a6:	mov    BYTE PTR [ebp-0x4],0x2
6400b3aa:	movzx  ecx,BYTE PTR [ebx+esi*1+0x194]
6400b3b2:	push   ecx
6400b3b3:	push   0x64027fa8
6400b3b8:	push   0x4
6400b3ba:	push   0x64027fcc
6400b3bf:	call   0x64006b80
6400b3c4:	add    esp,0xc
6400b3c7:	push   eax
6400b3c8:	lea    edx,[ebp-0x18]
6400b3cb:	push   edx
6400b3cc:	call   0x64001d40
6400b3d1:	mov    edi,DWORD PTR [ebp-0x18]
6400b3d4:	mov    eax,DWORD PTR [edi-0xc]
6400b3d7:	add    esp,0xc
6400b3da:	push   eax
6400b3db:	push   edi
6400b3dc:	lea    ecx,[ebp-0x10]
6400b3df:	call   0x640029f0
6400b3e4:	lea    eax,[edi-0x10]
6400b3e7:	mov    BYTE PTR [ebp-0x4],0x1
6400b3eb:	lea    ecx,[eax+0xc]
6400b3ee:	or     edx,0xffffffff
6400b3f1:	lock xadd DWORD PTR [ecx],edx
6400b3f5:	dec    edx
6400b3f6:	test   edx,edx
6400b3f8:	jg     0x6400b404
6400b3fa:	mov    ecx,DWORD PTR [eax]
6400b3fc:	mov    edx,DWORD PTR [ecx]
6400b3fe:	push   eax
6400b3ff:	mov    eax,DWORD PTR [edx+0x4]
6400b402:	call   eax
6400b404:	add    esi,0x1
6400b407:	cmp    esi,DWORD PTR [ebx+0x190]
6400b40d:	jne    0x6400b390
6400b40f:	mov    edi,DWORD PTR [ebp-0x10]
6400b412:	cmp    DWORD PTR [edi-0x4],0x1
6400b416:	jle    0x6400b427
6400b418:	mov    ecx,DWORD PTR [edi-0xc]
6400b41b:	push   ecx
6400b41c:	lea    ecx,[ebp-0x10]
6400b41f:	call   0x64001950
6400b424:	mov    edi,DWORD PTR [ebp-0x10]
6400b427:	test   edi,edi
6400b429:	jne    0x6400b42f
6400b42b:	xor    esi,esi
6400b42d:	jmp    0x6400b47d
6400b42f:	push   edi
6400b430:	call   DWORD PTR ds:0x64024050
6400b436:	add    eax,0x1
6400b439:	cmp    eax,0x3fffffff
6400b43e:	jg     0x6400b479
6400b440:	lea    edi,[eax+eax*1]
6400b443:	mov    eax,edi
6400b445:	call   0x64012c80
6400b44a:	mov    esi,esp
6400b44c:	test   esi,esi
6400b44e:	je     0x6400b476
6400b450:	mov    edx,DWORD PTR [ebp-0x10]
6400b453:	mov    eax,DWORD PTR [ebp-0x1c]
6400b456:	push   0x0
6400b458:	push   0x0
6400b45a:	push   edi
6400b45b:	push   esi
6400b45c:	push   0xffffffff
6400b45e:	push   edx
6400b45f:	push   0x0
6400b461:	push   eax
6400b462:	mov    BYTE PTR [esi],0x0
6400b465:	call   DWORD PTR ds:0x64024028
6400b46b:	mov    edi,DWORD PTR [ebp-0x10]
6400b46e:	neg    eax
6400b470:	sbb    eax,eax
6400b472:	and    eax,esi
6400b474:	jmp    0x6400b47b
6400b476:	mov    edi,DWORD PTR [ebp-0x10]
6400b479:	xor    eax,eax
6400b47b:	mov    esi,eax
6400b47d:	mov    eax,esi
6400b47f:	mov    DWORD PTR [ebp-0x28],0xf
6400b486:	mov    DWORD PTR [ebp-0x2c],0x0
6400b48d:	mov    BYTE PTR [ebp-0x3c],0x0
6400b491:	lea    edx,[eax+0x1]
6400b494:	mov    cl,BYTE PTR [eax]
6400b496:	add    eax,0x1
6400b499:	test   cl,cl
6400b49b:	jne    0x6400b494
6400b49d:	sub    eax,edx
6400b49f:	push   eax
6400b4a0:	push   esi
6400b4a1:	lea    ecx,[ebp-0x40]
6400b4a4:	call   0x64001860
6400b4a9:	mov    esi,DWORD PTR [ebp-0x20]
6400b4ac:	lea    ecx,[ebp-0x40]
6400b4af:	push   ecx
6400b4b0:	mov    BYTE PTR [ebp-0x4],0x3
6400b4b4:	call   0x6400ba20
6400b4b9:	cmp    DWORD PTR [ebp-0x28],0x10
6400b4bd:	jb     0x6400b4cb
6400b4bf:	mov    edx,DWORD PTR [ebp-0x3c]
6400b4c2:	push   edx
6400b4c3:	call   0x64011d22
6400b4c8:	add    esp,0x4
6400b4cb:	mov    ebx,DWORD PTR [ebx]
6400b4cd:	lea    eax,[edi-0x10]
6400b4d0:	mov    BYTE PTR [ebp-0x4],0x0
6400b4d4:	lea    ecx,[eax+0xc]
6400b4d7:	or     edx,0xffffffff
6400b4da:	lock xadd DWORD PTR [ecx],edx
6400b4de:	dec    edx
6400b4df:	test   edx,edx
6400b4e1:	jg     0x6400b4ed
6400b4e3:	mov    ecx,DWORD PTR [eax]
6400b4e5:	mov    edx,DWORD PTR [ecx]
6400b4e7:	push   eax
6400b4e8:	mov    eax,DWORD PTR [edx+0x4]
6400b4eb:	call   eax
6400b4ed:	test   ebx,ebx
6400b4ef:	jne    0x6400b35f
6400b4f5:	mov    ecx,DWORD PTR [ebp-0x24]
6400b4f8:	push   ecx
6400b4f9:	call   0x64011d22
6400b4fe:	add    esp,0x4
6400b501:	lea    esp,[ebp-0x50]
6400b504:	mov    ecx,DWORD PTR [ebp-0xc]
6400b507:	mov    DWORD PTR fs:0x0,ecx
6400b50e:	pop    ecx
6400b50f:	pop    edi
6400b510:	pop    esi
6400b511:	pop    ebx
6400b512:	mov    ecx,DWORD PTR [ebp+0x288]
6400b518:	xor    ecx,ebp
6400b51a:	call   0x6401257c
6400b51f:	add    ebp,0x28c
6400b525:	mov    esp,ebp
6400b527:	pop    ebp
6400b528:	ret    
6400b529:	int3   
6400b52a:	int3   
6400b52b:	int3   
6400b52c:	int3   
6400b52d:	int3   
6400b52e:	int3   
6400b52f:	int3   
6400b530:	push   0xffffffff
6400b532:	push   0x64022880
6400b537:	mov    eax,fs:0x0
6400b53d:	push   eax
6400b53e:	sub    esp,0x50
6400b541:	push   ebx
6400b542:	push   ebp
6400b543:	push   esi
6400b544:	push   edi
6400b545:	mov    eax,ds:0x6402c09c
6400b54a:	xor    eax,esp
6400b54c:	push   eax
6400b54d:	lea    eax,[esp+0x64]
6400b551:	mov    fs:0x0,eax
6400b557:	mov    ebp,DWORD PTR [esp+0x74]
6400b55b:	lea    eax,[esp+0x18]
6400b55f:	xor    ebx,ebx
6400b561:	push   eax
6400b562:	mov    edi,0x640265c4
6400b567:	mov    DWORD PTR [esp+0x3c],ebx
6400b56b:	call   0x6400aae0
6400b570:	push   ebx
6400b571:	push   ebx
6400b572:	mov    DWORD PTR [esp+0x74],ebx
6400b576:	call   DWORD PTR ds:0x640241d0
6400b57c:	test   eax,eax
6400b57e:	jge    0x6400b5d3
6400b580:	mov    esi,DWORD PTR [esp+0x18]
6400b584:	cmp    esi,ebx
6400b586:	mov    DWORD PTR [ebp+0x0],esi
6400b589:	je     0x6400b873
6400b58f:	lea    edi,[esi+0x8]
6400b592:	push   edi
6400b593:	call   DWORD PTR ds:0x64024020
6400b599:	push   edi
6400b59a:	call   DWORD PTR ds:0x64024098
6400b5a0:	test   eax,eax
6400b5a2:	jne    0x6400b873
6400b5a8:	mov    eax,DWORD PTR [esi]
6400b5aa:	cmp    eax,ebx
6400b5ac:	je     0x6400b5b5
6400b5ae:	push   eax
6400b5af:	call   DWORD PTR ds:0x640241a0
6400b5b5:	mov    eax,DWORD PTR [esi+0x4]
6400b5b8:	cmp    eax,ebx
6400b5ba:	je     0x6400b5c5
6400b5bc:	push   eax
6400b5bd:	call   0x64012bfa
6400b5c2:	add    esp,0x4
6400b5c5:	push   esi
6400b5c6:	call   0x64011d22
6400b5cb:	add    esp,0x4
6400b5ce:	jmp    0x6400b873
6400b5d3:	lea    ecx,[esp+0x20]
6400b5d7:	push   ecx
6400b5d8:	push   0x64024930
6400b5dd:	push   0x1
6400b5df:	push   ebx
6400b5e0:	push   0x64024a00
6400b5e5:	mov    DWORD PTR [esp+0x34],ebx
6400b5e9:	call   DWORD PTR ds:0x640241dc
6400b5ef:	cmp    eax,ebx
6400b5f1:	jl     0x6400b84f
6400b5f7:	push   0x64027fd8
6400b5fc:	push   0xa
6400b5fe:	push   0x64028018
6400b603:	mov    DWORD PTR [esp+0x28],ebx
6400b607:	call   0x64006b80
6400b60c:	add    esp,0xc
6400b60f:	lea    edx,[esp+0x30]
6400b613:	push   edx
6400b614:	mov    edi,eax
6400b616:	call   0x6400aae0
6400b61b:	mov    BYTE PTR [esp+0x6c],0x1
6400b620:	mov    eax,DWORD PTR [eax]
6400b622:	cmp    eax,ebx
6400b624:	je     0x6400b62a
6400b626:	mov    eax,DWORD PTR [eax]
6400b628:	jmp    0x6400b62c
6400b62a:	xor    eax,eax
6400b62c:	mov    ecx,DWORD PTR [esp+0x20]
6400b630:	mov    edx,DWORD PTR [ecx]
6400b632:	lea    esi,[esp+0x1c]
6400b636:	push   esi
6400b637:	push   ebx
6400b638:	push   ebx
6400b639:	push   ebx
6400b63a:	push   ebx
6400b63b:	push   ebx
6400b63c:	push   ebx
6400b63d:	push   eax
6400b63e:	mov    eax,DWORD PTR [edx+0xc]
6400b641:	push   ecx
6400b642:	call   eax
6400b644:	lea    edi,[esp+0x30]
6400b648:	mov    esi,eax
6400b64a:	mov    BYTE PTR [esp+0x6c],bl
6400b64e:	call   0x6400ab80
6400b653:	cmp    esi,ebx
6400b655:	jge    0x6400b660
6400b657:	mov    eax,DWORD PTR [esp+0x20]
6400b65b:	jmp    0x6400b847
6400b660:	mov    eax,DWORD PTR [esp+0x1c]
6400b664:	push   ebx
6400b665:	push   ebx
6400b666:	push   0x3
6400b668:	push   0x3
6400b66a:	push   ebx
6400b66b:	push   ebx
6400b66c:	push   0xa
6400b66e:	push   eax
6400b66f:	call   0x6400e700
6400b674:	call   eax
6400b676:	cmp    eax,ebx
6400b678:	jge    0x6400b68f
6400b67a:	mov    eax,DWORD PTR [esp+0x1c]
6400b67e:	mov    ecx,DWORD PTR [eax]
6400b680:	mov    edx,DWORD PTR [ecx+0x8]
6400b683:	push   eax
6400b684:	call   edx
6400b686:	mov    eax,DWORD PTR [esp+0x20]
6400b68a:	jmp    0x6400b847
6400b68f:	push   0x64028030
6400b694:	push   0xe
6400b696:	push   0x64028060
6400b69b:	mov    DWORD PTR [esp+0x30],ebx
6400b69f:	call   0x64006890
6400b6a4:	add    esp,0xc
6400b6a7:	push   eax
6400b6a8:	lea    ebx,[esp+0x3c]
6400b6ac:	call   0x6400aa50
6400b6b1:	mov    ecx,DWORD PTR [esp+0x78]
6400b6b5:	push   ecx
6400b6b6:	lea    edx,[esp+0x38]
6400b6ba:	push   edx
6400b6bb:	push   eax
6400b6bc:	mov    BYTE PTR [esp+0x78],0x2
6400b6c1:	call   0x6400ada0
6400b6c6:	mov    esi,eax
6400b6c8:	push   0x64028070
6400b6cd:	push   0x3
6400b6cf:	push   0x640280b0
6400b6d4:	mov    BYTE PTR [esp+0x78],0x3
6400b6d9:	call   0x64006890
6400b6de:	add    esp,0xc
6400b6e1:	push   eax
6400b6e2:	lea    ebx,[esp+0x34]
6400b6e6:	call   0x6400aa50
6400b6eb:	mov    BYTE PTR [esp+0x6c],0x4
6400b6f0:	mov    ecx,DWORD PTR [esi]
6400b6f2:	xor    ebx,ebx
6400b6f4:	cmp    ecx,ebx
6400b6f6:	je     0x6400b6fc
6400b6f8:	mov    ecx,DWORD PTR [ecx]
6400b6fa:	jmp    0x6400b6fe
6400b6fc:	xor    ecx,ecx
6400b6fe:	mov    eax,DWORD PTR [eax]
6400b700:	cmp    eax,ebx
6400b702:	je     0x6400b708
6400b704:	mov    edx,DWORD PTR [eax]
6400b706:	jmp    0x6400b70a
6400b708:	xor    edx,edx
6400b70a:	mov    eax,DWORD PTR [esp+0x1c]
6400b70e:	mov    esi,DWORD PTR [eax]
6400b710:	lea    edi,[esp+0x24]
6400b714:	push   edi
6400b715:	push   ebx
6400b716:	push   0x30
6400b718:	push   ecx
6400b719:	push   edx
6400b71a:	push   eax
6400b71b:	mov    eax,DWORD PTR [esi+0x50]
6400b71e:	call   eax
6400b720:	lea    edi,[esp+0x30]
6400b724:	mov    esi,eax
6400b726:	call   0x6400ab80
6400b72b:	lea    edi,[esp+0x34]
6400b72f:	call   0x6400ab80
6400b734:	lea    edi,[esp+0x38]
6400b738:	mov    BYTE PTR [esp+0x6c],bl
6400b73c:	call   0x6400ab80
6400b741:	cmp    esi,ebx
6400b743:	jge    0x6400b75a
6400b745:	mov    eax,DWORD PTR [esp+0x1c]
6400b749:	mov    ecx,DWORD PTR [eax]
6400b74b:	mov    edx,DWORD PTR [ecx+0x8]
6400b74e:	push   eax
6400b74f:	call   edx
6400b751:	mov    eax,DWORD PTR [esp+0x20]
6400b755:	jmp    0x6400b847
6400b75a:	mov    eax,DWORD PTR [esp+0x24]
6400b75e:	cmp    eax,ebx
6400b760:	mov    DWORD PTR [esp+0x2c],ebx
6400b764:	je     0x6400b81f
6400b76a:	mov    edi,DWORD PTR ds:0x64024190
6400b770:	mov    ecx,DWORD PTR [eax]
6400b772:	lea    edx,[esp+0x2c]
6400b776:	push   edx
6400b777:	lea    edx,[esp+0x2c]
6400b77b:	push   edx
6400b77c:	push   0x1
6400b77e:	push   0xffffffff
6400b780:	push   eax
6400b781:	mov    eax,DWORD PTR [ecx+0x10]
6400b784:	call   eax
6400b786:	cmp    DWORD PTR [esp+0x2c],ebx
6400b78a:	je     0x6400b81f
6400b790:	mov    esi,DWORD PTR [esp+0x28]
6400b794:	mov    eax,DWORD PTR [esp+0x7c]
6400b798:	mov    ebp,DWORD PTR [esi]
6400b79a:	push   ebx
6400b79b:	push   ebx
6400b79c:	lea    ecx,[esp+0x44]
6400b7a0:	push   ecx
6400b7a1:	push   ebx
6400b7a2:	call   0x6400ae20
6400b7a7:	mov    edx,DWORD PTR [ebp+0x10]
6400b7aa:	push   eax
6400b7ab:	push   esi
6400b7ac:	call   edx
6400b7ae:	cmp    eax,ebx
6400b7b0:	jl     0x6400b7ba
6400b7b2:	cmp    WORD PTR [esp+0x3c],0x8
6400b7b8:	je     0x6400b7db
6400b7ba:	lea    eax,[esp+0x3c]
6400b7be:	push   eax
6400b7bf:	call   edi
6400b7c1:	mov    eax,DWORD PTR [esp+0x28]
6400b7c5:	mov    ecx,DWORD PTR [eax]
6400b7c7:	mov    edx,DWORD PTR [ecx+0x8]
6400b7ca:	push   eax
6400b7cb:	call   edx
6400b7cd:	mov    eax,DWORD PTR [esp+0x24]
6400b7d1:	cmp    eax,ebx
6400b7d3:	mov    ebp,DWORD PTR [esp+0x74]
6400b7d7:	jne    0x6400b770
6400b7d9:	jmp    0x6400b81f
6400b7db:	lea    eax,[esp+0x4c]
6400b7df:	push   eax
6400b7e0:	call   DWORD PTR ds:0x64024188
6400b7e6:	lea    ecx,[esp+0x3c]
6400b7ea:	push   ecx
6400b7eb:	lea    edx,[esp+0x50]
6400b7ef:	push   edx
6400b7f0:	call   DWORD PTR ds:0x6402418c
6400b7f6:	cmp    eax,ebx
6400b7f8:	jge    0x6400b800
6400b7fa:	push   eax
6400b7fb:	call   0x6401e4b0
6400b800:	lea    esi,[esp+0x4c]
6400b804:	lea    ecx,[esp+0x18]
6400b808:	mov    BYTE PTR [esp+0x6c],0x5
6400b80d:	call   0x6400af00
6400b812:	mov    eax,esi
6400b814:	push   eax
6400b815:	mov    BYTE PTR [esp+0x70],bl
6400b819:	call   edi
6400b81b:	mov    ebp,DWORD PTR [esp+0x74]
6400b81f:	mov    eax,DWORD PTR [esp+0x1c]
6400b823:	mov    ecx,DWORD PTR [eax]
6400b825:	mov    edx,DWORD PTR [ecx+0x8]
6400b828:	push   eax
6400b829:	call   edx
6400b82b:	mov    eax,DWORD PTR [esp+0x20]
6400b82f:	mov    ecx,DWORD PTR [eax]
6400b831:	mov    edx,DWORD PTR [ecx+0x8]
6400b834:	push   eax
6400b835:	call   edx
6400b837:	mov    eax,DWORD PTR [esp+0x24]
6400b83b:	mov    ecx,DWORD PTR [eax]
6400b83d:	mov    edx,DWORD PTR [ecx+0x8]
6400b840:	push   eax
6400b841:	call   edx
6400b843:	mov    eax,DWORD PTR [esp+0x28]
6400b847:	mov    ecx,DWORD PTR [eax]
6400b849:	mov    edx,DWORD PTR [ecx+0x8]
6400b84c:	push   eax
6400b84d:	call   edx
6400b84f:	call   DWORD PTR ds:0x640241d4
6400b855:	mov    eax,DWORD PTR [esp+0x18]
6400b859:	cmp    eax,ebx
6400b85b:	mov    DWORD PTR [ebp+0x0],eax
6400b85e:	je     0x6400b86a
6400b860:	add    eax,0x8
6400b863:	push   eax
6400b864:	call   DWORD PTR ds:0x64024020
6400b86a:	lea    edi,[esp+0x18]
6400b86e:	call   0x6400ab80
6400b873:	mov    eax,ebp
6400b875:	mov    ecx,DWORD PTR [esp+0x64]
6400b879:	mov    DWORD PTR fs:0x0,ecx
6400b880:	pop    ecx
6400b881:	pop    edi
6400b882:	pop    esi
6400b883:	pop    ebp
6400b884:	pop    ebx
6400b885:	add    esp,0x5c
6400b888:	ret    
6400b889:	int3   
6400b88a:	int3   
6400b88b:	int3   
6400b88c:	int3   
6400b88d:	int3   
6400b88e:	int3   
6400b88f:	int3   
6400b890:	push   ebp
6400b891:	mov    ebp,esp
6400b893:	and    esp,0xfffffff8
6400b896:	push   0xffffffff
6400b898:	push   0x64022bd8
6400b89d:	mov    eax,fs:0x0
6400b8a3:	push   eax
6400b8a4:	sub    esp,0x14
6400b8a7:	push   esi
6400b8a8:	push   edi
6400b8a9:	mov    eax,ds:0x6402c09c
6400b8ae:	xor    eax,esp
6400b8b0:	push   eax
6400b8b1:	lea    eax,[esp+0x20]
6400b8b5:	mov    fs:0x0,eax
6400b8bb:	mov    DWORD PTR [esp+0x18],0x0
6400b8c3:	call   DWORD PTR ds:0x6402c06c
6400b8c9:	push   0x640280b4
6400b8ce:	push   0xc
6400b8d0:	push   0x640280e8
6400b8d5:	call   0x64006b80
6400b8da:	add    esp,0xc
6400b8dd:	lea    ecx,[esp+0x14]
6400b8e1:	push   ecx
6400b8e2:	mov    edi,eax
6400b8e4:	call   0x6400aae0
6400b8e9:	push   0x64028104
6400b8ee:	push   0x15
6400b8f0:	push   0x64028140
6400b8f5:	mov    DWORD PTR [esp+0x34],0x0
6400b8fd:	call   0x64006b80
6400b902:	add    esp,0xc
6400b905:	lea    edx,[esp+0x10]
6400b909:	push   edx
6400b90a:	mov    edi,eax
6400b90c:	call   0x6400aae0
6400b911:	lea    eax,[esp+0x14]
6400b915:	push   eax
6400b916:	lea    ecx,[esp+0x14]
6400b91a:	push   ecx
6400b91b:	lea    edx,[esp+0x20]
6400b91f:	push   edx
6400b920:	mov    BYTE PTR [esp+0x34],0x1
6400b925:	call   0x6400b530
6400b92a:	add    esp,0xc
6400b92d:	mov    esi,DWORD PTR [esp+0x10]
6400b931:	test   esi,esi
6400b933:	je     0x6400b969
6400b935:	lea    eax,[esi+0x8]
6400b938:	push   eax
6400b939:	call   DWORD PTR ds:0x64024098
6400b93f:	test   eax,eax
6400b941:	jne    0x6400b969
6400b943:	mov    eax,DWORD PTR [esi]
6400b945:	test   eax,eax
6400b947:	je     0x6400b950
6400b949:	push   eax
6400b94a:	call   DWORD PTR ds:0x640241a0
6400b950:	mov    eax,DWORD PTR [esi+0x4]
6400b953:	test   eax,eax
6400b955:	je     0x6400b960
6400b957:	push   eax
6400b958:	call   0x64012bfa
6400b95d:	add    esp,0x4
6400b960:	push   esi
6400b961:	call   0x64011d22
6400b966:	add    esp,0x4
6400b969:	mov    BYTE PTR [esp+0x28],0x4
6400b96e:	mov    esi,DWORD PTR [esp+0x14]
6400b972:	test   esi,esi
6400b974:	je     0x6400b9aa
6400b976:	lea    ecx,[esi+0x8]
6400b979:	push   ecx
6400b97a:	call   DWORD PTR ds:0x64024098
6400b980:	test   eax,eax
6400b982:	jne    0x6400b9aa
6400b984:	mov    eax,DWORD PTR [esi]
6400b986:	test   eax,eax
6400b988:	je     0x6400b991
6400b98a:	push   eax
6400b98b:	call   DWORD PTR ds:0x640241a0
6400b991:	mov    eax,DWORD PTR [esi+0x4]
6400b994:	test   eax,eax
6400b996:	je     0x6400b9a1
6400b998:	push   eax
6400b999:	call   0x64012bfa
6400b99e:	add    esp,0x4
6400b9a1:	push   esi
6400b9a2:	call   0x64011d22
6400b9a7:	add    esp,0x4
6400b9aa:	mov    esi,DWORD PTR [esp+0x18]
6400b9ae:	test   esi,esi
6400b9b0:	je     0x6400b9b6
6400b9b2:	mov    eax,DWORD PTR [esi]
6400b9b4:	jmp    0x6400b9b8
6400b9b6:	xor    eax,eax
6400b9b8:	mov    edi,DWORD PTR [ebp+0x8]
6400b9bb:	push   eax
6400b9bc:	mov    ecx,edi
6400b9be:	call   0x640025a0
6400b9c3:	test   esi,esi
6400b9c5:	je     0x6400b9fb
6400b9c7:	lea    edx,[esi+0x8]
6400b9ca:	push   edx
6400b9cb:	call   DWORD PTR ds:0x64024098
6400b9d1:	test   eax,eax
6400b9d3:	jne    0x6400b9fb
6400b9d5:	mov    eax,DWORD PTR [esi]
6400b9d7:	test   eax,eax
6400b9d9:	je     0x6400b9e2
6400b9db:	push   eax
6400b9dc:	call   DWORD PTR ds:0x640241a0
6400b9e2:	mov    eax,DWORD PTR [esi+0x4]
6400b9e5:	test   eax,eax
6400b9e7:	je     0x6400b9f2
6400b9e9:	push   eax
6400b9ea:	call   0x64012bfa
6400b9ef:	add    esp,0x4
6400b9f2:	push   esi
6400b9f3:	call   0x64011d22
6400b9f8:	add    esp,0x4
6400b9fb:	mov    eax,edi
6400b9fd:	mov    ecx,DWORD PTR [esp+0x20]
6400ba01:	mov    DWORD PTR fs:0x0,ecx
6400ba08:	pop    ecx
6400ba09:	pop    edi
6400ba0a:	pop    esi
6400ba0b:	mov    esp,ebp
6400ba0d:	pop    ebp
6400ba0e:	ret    
6400ba0f:	int3   
6400ba10:	mov    ecx,DWORD PTR [eax]
6400ba12:	push   ecx
6400ba13:	call   0x64011d22
6400ba18:	pop    ecx
6400ba19:	ret    
6400ba1a:	int3   
6400ba1b:	int3   
6400ba1c:	int3   
6400ba1d:	int3   
6400ba1e:	int3   
6400ba1f:	int3   
6400ba20:	push   ebp
6400ba21:	mov    ebp,esp
6400ba23:	and    esp,0xfffffff8
6400ba26:	sub    esp,0x8
6400ba29:	push   ebx
6400ba2a:	mov    ebx,DWORD PTR [esi+0x4]
6400ba2d:	test   ebx,ebx
6400ba2f:	push   edi
6400ba30:	jne    0x6400ba36
6400ba32:	xor    edi,edi
6400ba34:	jmp    0x6400ba4e
6400ba36:	mov    ecx,DWORD PTR [esi+0x8]
6400ba39:	sub    ecx,ebx
6400ba3b:	mov    eax,0x92492493
6400ba40:	imul   ecx
6400ba42:	add    edx,ecx
6400ba44:	sar    edx,0x4
6400ba47:	mov    edi,edx
6400ba49:	shr    edi,0x1f
6400ba4c:	add    edi,edx
6400ba4e:	test   ebx,ebx
6400ba50:	je     0x6400baa1
6400ba52:	mov    ecx,DWORD PTR [esi+0xc]
6400ba55:	sub    ecx,ebx
6400ba57:	mov    eax,0x92492493
6400ba5c:	imul   ecx
6400ba5e:	add    edx,ecx
6400ba60:	sar    edx,0x4
6400ba63:	mov    eax,edx
6400ba65:	shr    eax,0x1f
6400ba68:	add    eax,edx
6400ba6a:	cmp    edi,eax
6400ba6c:	jae    0x6400baa1
6400ba6e:	mov    edx,DWORD PTR [ebp+0x8]
6400ba71:	mov    edi,DWORD PTR [esi+0x8]
6400ba74:	mov    BYTE PTR [esp+0x8],0x0
6400ba79:	mov    eax,DWORD PTR [esp+0x8]
6400ba7d:	mov    ecx,DWORD PTR [esp+0x8]
6400ba81:	push   eax
6400ba82:	push   ecx
6400ba83:	push   esi
6400ba84:	push   edx
6400ba85:	push   edi
6400ba86:	mov    ecx,0x1
6400ba8b:	call   0x6400c0c0
6400ba90:	add    esp,0x14
6400ba93:	add    edi,0x1c
6400ba96:	mov    DWORD PTR [esi+0x8],edi
6400ba99:	pop    edi
6400ba9a:	pop    ebx
6400ba9b:	mov    esp,ebp
6400ba9d:	pop    ebp
6400ba9e:	ret    0x4
6400baa1:	mov    edi,DWORD PTR [esi+0x8]
6400baa4:	cmp    ebx,edi
6400baa6:	jbe    0x6400baad
6400baa8:	call   0x640120d8
6400baad:	mov    eax,DWORD PTR [ebp+0x8]
6400bab0:	push   edi
6400bab1:	push   esi
6400bab2:	push   eax
6400bab3:	lea    ecx,[esp+0x14]
6400bab7:	push   ecx
6400bab8:	mov    eax,esi
6400baba:	call   0x6400bb00
6400babf:	pop    edi
6400bac0:	pop    ebx
6400bac1:	mov    esp,ebp
6400bac3:	pop    ebp
6400bac4:	ret    0x4
6400bac7:	int3   
6400bac8:	int3   
6400bac9:	int3   
6400baca:	int3   
6400bacb:	int3   
6400bacc:	int3   
6400bacd:	int3   
6400bace:	int3   
6400bacf:	int3   
6400bad0:	mov    eax,DWORD PTR [ecx+0x4]
6400bad3:	test   eax,eax
6400bad5:	jne    0x6400bad8
6400bad7:	ret    
6400bad8:	mov    ecx,DWORD PTR [ecx+0x8]
6400badb:	sub    ecx,eax
6400badd:	mov    eax,0x92492493
6400bae2:	imul   ecx
6400bae4:	add    edx,ecx
6400bae6:	sar    edx,0x4
6400bae9:	mov    eax,edx
6400baeb:	shr    eax,0x1f
6400baee:	add    eax,edx
6400baf0:	ret    
6400baf1:	int3   
6400baf2:	int3   
6400baf3:	int3   
6400baf4:	int3   
6400baf5:	int3   
6400baf6:	int3   
6400baf7:	int3   
6400baf8:	int3   
6400baf9:	int3   
6400bafa:	int3   
6400bafb:	int3   
6400bafc:	int3   
6400bafd:	int3   
6400bafe:	int3   
6400baff:	int3   
6400bb00:	push   ecx
6400bb01:	push   ebx
6400bb02:	push   ebp
6400bb03:	mov    ebp,DWORD PTR [esp+0x1c]
6400bb07:	push   esi
6400bb08:	mov    esi,eax
6400bb0a:	push   edi
6400bb0b:	mov    edi,DWORD PTR [esi+0x4]
6400bb0e:	test   edi,edi
6400bb10:	je     0x6400bb2e
6400bb12:	mov    ebx,DWORD PTR [esi+0x8]
6400bb15:	mov    ecx,ebx
6400bb17:	sub    ecx,edi
6400bb19:	mov    eax,0x92492493
6400bb1e:	imul   ecx
6400bb20:	add    edx,ecx
6400bb22:	sar    edx,0x4
6400bb25:	mov    eax,edx
6400bb27:	shr    eax,0x1f
6400bb2a:	add    eax,edx
6400bb2c:	jne    0x6400bb36
6400bb2e:	mov    ebx,DWORD PTR [esp+0x20]
6400bb32:	xor    edi,edi
6400bb34:	jmp    0x6400bb67
6400bb36:	cmp    edi,ebx
6400bb38:	jbe    0x6400bb3f
6400bb3a:	call   0x640120d8
6400bb3f:	mov    ebx,DWORD PTR [esp+0x20]
6400bb43:	test   ebx,ebx
6400bb45:	je     0x6400bb4b
6400bb47:	cmp    ebx,esi
6400bb49:	je     0x6400bb50
6400bb4b:	call   0x640120d8
6400bb50:	mov    ecx,ebp
6400bb52:	sub    ecx,edi
6400bb54:	mov    eax,0x92492493
6400bb59:	imul   ecx
6400bb5b:	add    edx,ecx
6400bb5d:	sar    edx,0x4
6400bb60:	mov    edi,edx
6400bb62:	shr    edi,0x1f
6400bb65:	add    edi,edx
6400bb67:	mov    ecx,DWORD PTR [esp+0x1c]
6400bb6b:	push   ebp
6400bb6c:	push   ebx
6400bb6d:	push   ecx
6400bb6e:	mov    ecx,esi
6400bb70:	call   0x6400bbf0
6400bb75:	mov    ebx,DWORD PTR [esi+0x4]
6400bb78:	cmp    ebx,DWORD PTR [esi+0x8]
6400bb7b:	jbe    0x6400bb82
6400bb7d:	call   0x640120d8
6400bb82:	lea    edx,[edi*8+0x0]
6400bb89:	sub    edx,edi
6400bb8b:	lea    edi,[ebx+edx*4]
6400bb8e:	cmp    edi,DWORD PTR [esi+0x8]
6400bb91:	mov    DWORD PTR [esp+0x24],ebx
6400bb95:	ja     0x6400bb9c
6400bb97:	cmp    edi,DWORD PTR [esi+0x4]
6400bb9a:	jae    0x6400bba1
6400bb9c:	call   0x640120d8
6400bba1:	mov    eax,DWORD PTR [esp+0x18]
6400bba5:	mov    DWORD PTR [eax+0x4],edi
6400bba8:	pop    edi
6400bba9:	mov    DWORD PTR [eax],esi
6400bbab:	pop    esi
6400bbac:	pop    ebp
6400bbad:	pop    ebx
6400bbae:	pop    ecx
6400bbaf:	ret    0x10
6400bbb2:	int3   
6400bbb3:	int3   
6400bbb4:	int3   
6400bbb5:	int3   
6400bbb6:	int3   
6400bbb7:	int3   
6400bbb8:	int3   
6400bbb9:	int3   
6400bbba:	int3   
6400bbbb:	int3   
6400bbbc:	int3   
6400bbbd:	int3   
6400bbbe:	int3   
6400bbbf:	int3   
6400bbc0:	push   ecx
6400bbc1:	mov    ecx,DWORD PTR [esp+0x8]
6400bbc5:	mov    BYTE PTR [esp],0x0
6400bbc9:	mov    eax,DWORD PTR [esp]
6400bbcc:	push   eax
6400bbcd:	mov    eax,DWORD PTR [esp+0xc]
6400bbd1:	push   ecx
6400bbd2:	push   edx
6400bbd3:	push   eax
6400bbd4:	push   edi
6400bbd5:	mov    ecx,esi
6400bbd7:	call   0x6400c0c0
6400bbdc:	lea    ecx,[esi*8+0x0]
6400bbe3:	sub    ecx,esi
6400bbe5:	lea    eax,[edi+ecx*4]
6400bbe8:	add    esp,0x18
6400bbeb:	ret    0x4
6400bbee:	int3   
6400bbef:	int3   
6400bbf0:	push   ebp
6400bbf1:	mov    ebp,esp
6400bbf3:	push   0xffffffff
6400bbf5:	push   0x64022528
6400bbfa:	mov    eax,fs:0x0
6400bc00:	push   eax
6400bc01:	sub    esp,0x34
6400bc04:	mov    eax,ds:0x6402c09c
6400bc09:	xor    eax,ebp
6400bc0b:	mov    DWORD PTR [ebp-0x14],eax
6400bc0e:	push   ebx
6400bc0f:	push   esi
6400bc10:	push   edi
6400bc11:	push   eax
6400bc12:	lea    eax,[ebp-0xc]
6400bc15:	mov    fs:0x0,eax
6400bc1b:	mov    DWORD PTR [ebp-0x10],esp
6400bc1e:	mov    eax,DWORD PTR [ebp+0x8]
6400bc21:	push   0xffffffff
6400bc23:	xor    edi,edi
6400bc25:	mov    ebx,ecx
6400bc27:	push   edi
6400bc28:	push   eax
6400bc29:	lea    ecx,[ebp-0x30]
6400bc2c:	mov    DWORD PTR [ebp-0x3c],ebx
6400bc2f:	mov    DWORD PTR [ebp-0x18],0xf
6400bc36:	mov    DWORD PTR [ebp-0x1c],edi
6400bc39:	mov    BYTE PTR [ebp-0x2c],0x0
6400bc3d:	call   0x64001780
6400bc42:	mov    DWORD PTR [ebp-0x4],edi
6400bc45:	mov    ecx,DWORD PTR [ebx+0x4]
6400bc48:	cmp    ecx,edi
6400bc4a:	je     0x6400bc64
6400bc4c:	mov    esi,DWORD PTR [ebx+0xc]
6400bc4f:	sub    esi,ecx
6400bc51:	mov    eax,0x92492493
6400bc56:	imul   esi
6400bc58:	add    edx,esi
6400bc5a:	sar    edx,0x4
6400bc5d:	mov    edi,edx
6400bc5f:	shr    edi,0x1f
6400bc62:	add    edi,edx
6400bc64:	test   ecx,ecx
6400bc66:	jne    0x6400bc6c
6400bc68:	xor    eax,eax
6400bc6a:	jmp    0x6400bc84
6400bc6c:	mov    esi,DWORD PTR [ebx+0x8]
6400bc6f:	sub    esi,ecx
6400bc71:	mov    eax,0x92492493
6400bc76:	imul   esi
6400bc78:	add    edx,esi
6400bc7a:	sar    edx,0x4
6400bc7d:	mov    eax,edx
6400bc7f:	shr    eax,0x1f
6400bc82:	add    eax,edx
6400bc84:	mov    edx,0x9249249
6400bc89:	sub    edx,eax
6400bc8b:	cmp    edx,0x1
6400bc8e:	jae    0x6400bc95
6400bc90:	call   0x6400bf30
6400bc95:	test   ecx,ecx
6400bc97:	jne    0x6400bc9d
6400bc99:	xor    eax,eax
6400bc9b:	jmp    0x6400bcb5
6400bc9d:	mov    esi,DWORD PTR [ebx+0x8]
6400bca0:	sub    esi,ecx
6400bca2:	mov    eax,0x92492493
6400bca7:	imul   esi
6400bca9:	add    edx,esi
6400bcab:	sar    edx,0x4
6400bcae:	mov    eax,edx
6400bcb0:	shr    eax,0x1f
6400bcb3:	add    eax,edx
6400bcb5:	add    eax,0x1
6400bcb8:	cmp    edi,eax
6400bcba:	jae    0x6400be16
6400bcc0:	mov    eax,edi
6400bcc2:	shr    eax,1
6400bcc4:	mov    edx,0x9249249
6400bcc9:	sub    edx,eax
6400bccb:	cmp    edx,edi
6400bccd:	jae    0x6400bcd3
6400bccf:	xor    edi,edi
6400bcd1:	jmp    0x6400bcd5
6400bcd3:	add    edi,eax
6400bcd5:	test   ecx,ecx
6400bcd7:	jne    0x6400bcdd
6400bcd9:	xor    eax,eax
6400bcdb:	jmp    0x6400bcf5
6400bcdd:	mov    esi,DWORD PTR [ebx+0x8]
6400bce0:	sub    esi,ecx
6400bce2:	mov    eax,0x92492493
6400bce7:	imul   esi
6400bce9:	add    edx,esi
6400bceb:	sar    edx,0x4
6400bcee:	mov    eax,edx
6400bcf0:	shr    eax,0x1f
6400bcf3:	add    eax,edx
6400bcf5:	add    eax,0x1
6400bcf8:	cmp    edi,eax
6400bcfa:	jae    0x6400bd08
6400bcfc:	mov    ecx,ebx
6400bcfe:	call   0x6400bad0
6400bd03:	mov    edi,eax
6400bd05:	add    edi,0x1
6400bd08:	push   0x0
6400bd0a:	push   edi
6400bd0b:	call   0x6400c050
6400bd10:	mov    BYTE PTR [ebp-0x4],0x1
6400bd14:	mov    ecx,DWORD PTR [ebx+0x4]
6400bd17:	mov    BYTE PTR [ebp-0x34],0x0
6400bd1b:	mov    edx,DWORD PTR [ebp-0x34]
6400bd1e:	push   edx
6400bd1f:	mov    edx,DWORD PTR [ebp-0x34]
6400bd22:	push   edx
6400bd23:	mov    edx,DWORD PTR [ebp+0x10]
6400bd26:	push   ebx
6400bd27:	push   edx
6400bd28:	mov    edx,eax
6400bd2a:	mov    DWORD PTR [ebp-0x40],eax
6400bd2d:	mov    DWORD PTR [ebp-0x38],eax
6400bd30:	call   0x6400c1e0
6400bd35:	add    esp,0x18
6400bd38:	mov    esi,eax
6400bd3a:	mov    BYTE PTR [ebp-0x34],0x0
6400bd3e:	mov    eax,DWORD PTR [ebp-0x34]
6400bd41:	mov    ecx,DWORD PTR [ebp-0x34]
6400bd44:	push   eax
6400bd45:	push   ecx
6400bd46:	push   ebx
6400bd47:	lea    edx,[ebp-0x30]
6400bd4a:	push   edx
6400bd4b:	push   esi
6400bd4c:	mov    ecx,0x1
6400bd51:	mov    DWORD PTR [ebp-0x38],esi
6400bd54:	call   0x6400c0c0
6400bd59:	mov    eax,DWORD PTR [ebx+0x8]
6400bd5c:	add    esp,0x14
6400bd5f:	mov    BYTE PTR [ebp-0x34],0x0
6400bd63:	mov    ecx,DWORD PTR [ebp-0x34]
6400bd66:	mov    edx,DWORD PTR [ebp-0x34]
6400bd69:	push   ecx
6400bd6a:	mov    ecx,DWORD PTR [ebp+0x10]
6400bd6d:	push   edx
6400bd6e:	add    esi,0x1c
6400bd71:	push   ebx
6400bd72:	push   eax
6400bd73:	mov    edx,esi
6400bd75:	mov    DWORD PTR [ebp-0x38],esi
6400bd78:	call   0x6400c1e0
6400bd7d:	mov    esi,DWORD PTR [ebx+0x4]
6400bd80:	add    esp,0x10
6400bd83:	test   esi,esi
6400bd85:	jne    0x6400bd8b
6400bd87:	xor    eax,eax
6400bd89:	jmp    0x6400bda3
6400bd8b:	mov    ecx,DWORD PTR [ebx+0x8]
6400bd8e:	sub    ecx,esi
6400bd90:	mov    eax,0x92492493
6400bd95:	imul   ecx
6400bd97:	add    edx,ecx
6400bd99:	sar    edx,0x4
6400bd9c:	mov    eax,edx
6400bd9e:	shr    eax,0x1f
6400bda1:	add    eax,edx
6400bda3:	add    eax,0x1
6400bda6:	test   esi,esi
6400bda8:	mov    DWORD PTR [ebp-0x34],eax
6400bdab:	je     0x6400bdcb
6400bdad:	mov    eax,DWORD PTR [ebp-0x34]
6400bdb0:	mov    ecx,DWORD PTR [ebx+0x8]
6400bdb3:	push   eax
6400bdb4:	push   ebx
6400bdb5:	push   ecx
6400bdb6:	push   esi
6400bdb7:	call   0x6400c170
6400bdbc:	mov    edx,DWORD PTR [ebx+0x4]
6400bdbf:	push   edx
6400bdc0:	call   0x64011d22
6400bdc5:	mov    eax,DWORD PTR [ebp-0x34]
6400bdc8:	add    esp,0x14
6400bdcb:	mov    ecx,DWORD PTR [ebp-0x40]
6400bdce:	lea    edx,[edi*8+0x0]
6400bdd5:	sub    edx,edi
6400bdd7:	lea    edx,[ecx+edx*4]
6400bdda:	mov    DWORD PTR [ebx+0xc],edx
6400bddd:	lea    edx,[eax*8+0x0]
6400bde4:	sub    edx,eax
6400bde6:	lea    eax,[ecx+edx*4]
6400bde9:	mov    DWORD PTR [ebx+0x8],eax
6400bdec:	mov    DWORD PTR [ebx+0x4],ecx
6400bdef:	jmp    0x6400bed2
6400bdf4:	mov    ecx,DWORD PTR [ebp-0x38]
6400bdf7:	mov    esi,DWORD PTR [ebp-0x40]
6400bdfa:	push   ecx
6400bdfb:	mov    ecx,DWORD PTR [ebp-0x3c]
6400bdfe:	push   esi
6400bdff:	call   0x6400bf10
6400be04:	push   esi
6400be05:	call   0x64011d22
6400be0a:	add    esp,0x4
6400be0d:	push   0x0
6400be0f:	push   0x0
6400be11:	call   0x6401216b
6400be16:	mov    edi,DWORD PTR [ebx+0x8]
6400be19:	mov    esi,DWORD PTR [ebp+0x10]
6400be1c:	mov    ecx,edi
6400be1e:	sub    ecx,esi
6400be20:	mov    eax,0x92492493
6400be25:	imul   ecx
6400be27:	add    edx,ecx
6400be29:	sar    edx,0x4
6400be2c:	mov    eax,edx
6400be2e:	shr    eax,0x1f
6400be31:	add    eax,edx
6400be33:	cmp    eax,0x1
6400be36:	mov    edx,ebx
6400be38:	jae    0x6400beaa
6400be3a:	lea    ecx,[esi+0x1c]
6400be3d:	push   ecx
6400be3e:	push   edi
6400be3f:	push   esi
6400be40:	call   0x6400bfb0
6400be45:	mov    BYTE PTR [ebp-0x4],0x3
6400be49:	mov    edi,DWORD PTR [ebx+0x8]
6400be4c:	lea    edx,[ebp-0x30]
6400be4f:	push   edx
6400be50:	mov    ecx,edi
6400be52:	sub    ecx,esi
6400be54:	mov    eax,0x92492493
6400be59:	imul   ecx
6400be5b:	add    edx,ecx
6400be5d:	sar    edx,0x4
6400be60:	mov    eax,edx
6400be62:	shr    eax,0x1f
6400be65:	add    eax,edx
6400be67:	mov    esi,0x1
6400be6c:	sub    esi,eax
6400be6e:	mov    edx,ebx
6400be70:	call   0x6400bbc0
6400be75:	mov    eax,DWORD PTR [ebp+0x10]
6400be78:	mov    DWORD PTR [ebp-0x4],0x0
6400be7f:	add    DWORD PTR [ebx+0x8],0x1c
6400be83:	mov    ebx,DWORD PTR [ebx+0x8]
6400be86:	lea    edi,[ebx-0x1c]
6400be89:	jmp    0x6400beca
6400be8b:	mov    ecx,DWORD PTR [ebp-0x3c]
6400be8e:	mov    edx,DWORD PTR [ecx+0x8]
6400be91:	mov    eax,DWORD PTR [ebp+0x10]
6400be94:	add    edx,0x1c
6400be97:	push   edx
6400be98:	add    eax,0x1c
6400be9b:	push   eax
6400be9c:	call   0x6400bf10
6400bea1:	push   0x0
6400bea3:	push   0x0
6400bea5:	call   0x6401216b
6400beaa:	push   edi
6400beab:	lea    eax,[edi-0x1c]
6400beae:	push   edi
6400beaf:	push   eax
6400beb0:	mov    DWORD PTR [ebp-0x34],eax
6400beb3:	call   0x6400bfb0
6400beb8:	mov    DWORD PTR [ebx+0x8],eax
6400bebb:	mov    eax,DWORD PTR [ebp-0x34]
6400bebe:	mov    ebx,esi
6400bec0:	call   0x6400c000
6400bec5:	lea    edi,[esi+0x1c]
6400bec8:	mov    eax,esi
6400beca:	lea    ebx,[ebp-0x30]
6400becd:	call   0x6400bfe0
6400bed2:	cmp    DWORD PTR [ebp-0x18],0x10
6400bed6:	jb     0x6400bee4
6400bed8:	mov    ecx,DWORD PTR [ebp-0x2c]
6400bedb:	push   ecx
6400bedc:	call   0x64011d22
6400bee1:	add    esp,0x4
6400bee4:	mov    ecx,DWORD PTR [ebp-0xc]
6400bee7:	mov    DWORD PTR fs:0x0,ecx
6400beee:	pop    ecx
6400beef:	pop    edi
6400bef0:	pop    esi
6400bef1:	pop    ebx
6400bef2:	mov    ecx,DWORD PTR [ebp-0x14]
6400bef5:	xor    ecx,ebp
6400bef7:	call   0x6401257c
6400befc:	mov    esp,ebp
6400befe:	pop    ebp
6400beff:	ret    0xc
6400bf02:	int3   
6400bf03:	int3   
6400bf04:	int3   
6400bf05:	int3   
6400bf06:	int3   
6400bf07:	int3   
6400bf08:	int3   
6400bf09:	int3   
6400bf0a:	int3   
6400bf0b:	int3   
6400bf0c:	int3   
6400bf0d:	int3   
6400bf0e:	int3   
6400bf0f:	int3   
6400bf10:	mov    eax,DWORD PTR [esp+0x8]
6400bf14:	mov    edx,DWORD PTR [esp+0x4]
6400bf18:	push   eax
6400bf19:	push   ecx
6400bf1a:	mov    ecx,DWORD PTR [esp+0x10]
6400bf1e:	push   ecx
6400bf1f:	push   edx
6400bf20:	call   0x6400c170
6400bf25:	add    esp,0x10
6400bf28:	ret    0x8
6400bf2b:	int3   
6400bf2c:	int3   
6400bf2d:	int3   
6400bf2e:	int3   
6400bf2f:	int3   
6400bf30:	push   ebp
6400bf31:	mov    ebp,esp
6400bf33:	and    esp,0xfffffff8
6400bf36:	push   0xffffffff
6400bf38:	push   0x640224f8
6400bf3d:	mov    eax,fs:0x0
6400bf43:	push   eax
6400bf44:	sub    esp,0x4c
6400bf47:	mov    eax,ds:0x6402c09c
6400bf4c:	xor    eax,esp
6400bf4e:	push   eax
6400bf4f:	lea    eax,[esp+0x50]
6400bf53:	mov    fs:0x0,eax
6400bf59:	push   0x12
6400bf5b:	push   0x6402816c
6400bf60:	lea    ecx,[esp+0x10]
6400bf64:	mov    DWORD PTR [esp+0x28],0xf
6400bf6c:	mov    DWORD PTR [esp+0x24],0x0
6400bf74:	mov    BYTE PTR [esp+0x14],0x0
6400bf79:	call   0x64001860
6400bf7e:	lea    eax,[esp+0x8]
6400bf82:	push   eax
6400bf83:	lea    ecx,[esp+0x28]
6400bf87:	mov    DWORD PTR [esp+0x5c],0x0
6400bf8f:	call   0x64002d10
6400bf94:	push   0x64029d68
6400bf99:	lea    ecx,[esp+0x28]
6400bf9d:	push   ecx
6400bf9e:	mov    DWORD PTR [esp+0x2c],0x64024274
6400bfa6:	call   0x6401216b
6400bfab:	int3   
6400bfac:	int3   
6400bfad:	int3   
6400bfae:	int3   
6400bfaf:	int3   
6400bfb0:	push   ecx
6400bfb1:	mov    ecx,DWORD PTR [esp+0xc]
6400bfb5:	mov    BYTE PTR [esp],0x0
6400bfb9:	mov    eax,DWORD PTR [esp]
6400bfbc:	push   eax
6400bfbd:	mov    eax,DWORD PTR [esp+0x10]
6400bfc1:	push   ecx
6400bfc2:	mov    ecx,DWORD PTR [esp+0x10]
6400bfc6:	push   edx
6400bfc7:	mov    edx,DWORD PTR [esp+0x1c]
6400bfcb:	push   eax
6400bfcc:	call   0x6400c1e0
6400bfd1:	add    esp,0x14
6400bfd4:	ret    0xc
6400bfd7:	int3   
6400bfd8:	int3   
6400bfd9:	int3   
6400bfda:	int3   
6400bfdb:	int3   
6400bfdc:	int3   
6400bfdd:	int3   
6400bfde:	int3   
6400bfdf:	int3   
6400bfe0:	push   esi
6400bfe1:	mov    esi,eax
6400bfe3:	cmp    esi,edi
6400bfe5:	je     0x6400bffa
6400bfe7:	push   0xffffffff
6400bfe9:	push   0x0
6400bfeb:	push   ebx
6400bfec:	mov    ecx,esi
6400bfee:	call   0x64001780
6400bff3:	add    esi,0x1c
6400bff6:	cmp    esi,edi
6400bff8:	jne    0x6400bfe7
6400bffa:	pop    esi
6400bffb:	ret    
6400bffc:	int3   
6400bffd:	int3   
6400bffe:	int3   
6400bfff:	int3   
6400c000:	push   ecx
6400c001:	push   esi
6400c002:	mov    esi,eax
6400c004:	mov    BYTE PTR [esp+0x4],0x0
6400c009:	mov    eax,DWORD PTR [esp+0x4]
6400c00d:	mov    ecx,DWORD PTR [esp+0x4]
6400c011:	mov    edx,DWORD PTR [esp+0x4]
6400c015:	push   eax
6400c016:	push   ecx
6400c017:	push   edx
6400c018:	push   edi
6400c019:	push   ebx
6400c01a:	mov    ecx,esi
6400c01c:	call   0x6400c320
6400c021:	sub    esi,ebx
6400c023:	mov    eax,0x92492493
6400c028:	imul   esi
6400c02a:	add    edx,esi
6400c02c:	sar    edx,0x4
6400c02f:	mov    eax,edx
6400c031:	shr    eax,0x1f
6400c034:	add    eax,edx
6400c036:	lea    ecx,[eax*8+0x0]
6400c03d:	sub    ecx,eax
6400c03f:	add    ecx,ecx
6400c041:	add    esp,0x14
6400c044:	add    ecx,ecx
6400c046:	mov    eax,edi
6400c048:	sub    eax,ecx
6400c04a:	pop    esi
6400c04b:	pop    ecx
6400c04c:	ret    
6400c04d:	int3   
6400c04e:	int3   
6400c04f:	int3   
6400c050:	mov    ecx,DWORD PTR [esp+0x4]
6400c054:	sub    esp,0xc
6400c057:	test   ecx,ecx
6400c059:	ja     0x6400c077
6400c05b:	xor    ecx,ecx
6400c05d:	lea    edx,[ecx*8+0x0]
6400c064:	sub    edx,ecx
6400c066:	add    edx,edx
6400c068:	add    edx,edx
6400c06a:	push   edx
6400c06b:	call   0x64012101
6400c070:	add    esp,0x4
6400c073:	add    esp,0xc
6400c076:	ret    
6400c077:	or     eax,0xffffffff
6400c07a:	xor    edx,edx
6400c07c:	div    ecx
6400c07e:	cmp    eax,0x1c
6400c081:	jae    0x6400c05d
6400c083:	lea    eax,[esp+0x10]
6400c087:	push   eax
6400c088:	lea    ecx,[esp+0x4]
6400c08c:	mov    DWORD PTR [esp+0x14],0x0
6400c094:	call   0x64011d7d
6400c099:	push   0x64029c9c
6400c09e:	lea    ecx,[esp+0x4]
6400c0a2:	push   ecx
6400c0a3:	mov    DWORD PTR [esp+0x8],0x6402425c
6400c0ab:	call   0x6401216b
6400c0b0:	int3   
6400c0b1:	int3   
6400c0b2:	int3   
6400c0b3:	int3   
6400c0b4:	int3   
6400c0b5:	int3   
6400c0b6:	int3   
6400c0b7:	int3   
6400c0b8:	int3   
6400c0b9:	int3   
6400c0ba:	int3   
6400c0bb:	int3   
6400c0bc:	int3   
6400c0bd:	int3   
6400c0be:	int3   
6400c0bf:	int3   
6400c0c0:	push   ebp
6400c0c1:	mov    ebp,esp
6400c0c3:	push   0xffffffff
6400c0c5:	push   0x64022041
6400c0ca:	mov    eax,fs:0x0
6400c0d0:	push   eax
6400c0d1:	sub    esp,0x10
6400c0d4:	push   ebx
6400c0d5:	push   esi
6400c0d6:	push   edi
6400c0d7:	mov    eax,ds:0x6402c09c
6400c0dc:	xor    eax,ebp
6400c0de:	push   eax
6400c0df:	lea    eax,[ebp-0xc]
6400c0e2:	mov    fs:0x0,eax
6400c0e8:	mov    DWORD PTR [ebp-0x10],esp
6400c0eb:	mov    edi,ecx
6400c0ed:	mov    esi,DWORD PTR [ebp+0x8]
6400c0f0:	xor    ebx,ebx
6400c0f2:	mov    DWORD PTR [ebp-0x14],esi
6400c0f5:	mov    DWORD PTR [ebp-0x4],ebx
6400c0f8:	cmp    edi,ebx
6400c0fa:	jbe    0x6400c158
6400c0fc:	mov    DWORD PTR [ebp-0x18],esi
6400c0ff:	mov    DWORD PTR [ebp-0x1c],esi
6400c102:	cmp    esi,ebx
6400c104:	mov    BYTE PTR [ebp-0x4],0x1
6400c108:	je     0x6400c125
6400c10a:	mov    eax,DWORD PTR [ebp+0xc]
6400c10d:	push   0xffffffff
6400c10f:	push   ebx
6400c110:	mov    DWORD PTR [esi+0x18],0xf
6400c117:	mov    DWORD PTR [esi+0x14],ebx
6400c11a:	push   eax
6400c11b:	mov    ecx,esi
6400c11d:	mov    BYTE PTR [esi+0x4],bl
6400c120:	call   0x64001780
6400c125:	sub    edi,0x1
6400c128:	add    esi,0x1c
6400c12b:	mov    BYTE PTR [ebp-0x4],bl
6400c12e:	mov    DWORD PTR [ebp+0x8],esi
6400c131:	jmp    0x6400c0f8
6400c133:	mov    esi,DWORD PTR [ebp-0x14]
6400c136:	mov    edi,DWORD PTR [ebp+0x8]
6400c139:	cmp    esi,edi
6400c13b:	je     0x6400c14f
6400c13d:	mov    ebx,DWORD PTR [ebp+0x10]
6400c140:	push   esi
6400c141:	mov    ecx,ebx
6400c143:	call   0x6400c1b0
6400c148:	add    esi,0x1c
6400c14b:	cmp    esi,edi
6400c14d:	jne    0x6400c140
6400c14f:	xor    ebx,ebx
6400c151:	push   ebx
6400c152:	push   ebx
6400c153:	call   0x6401216b
6400c158:	mov    ecx,DWORD PTR [ebp-0xc]
6400c15b:	mov    DWORD PTR fs:0x0,ecx
6400c162:	pop    ecx
6400c163:	pop    edi
6400c164:	pop    esi
6400c165:	pop    ebx
6400c166:	mov    esp,ebp
6400c168:	pop    ebp
6400c169:	ret    
6400c16a:	int3   
6400c16b:	int3   
6400c16c:	int3   
6400c16d:	int3   
6400c16e:	int3   
6400c16f:	int3   
6400c170:	push   esi
6400c171:	mov    esi,DWORD PTR [esp+0x8]
6400c175:	push   edi
6400c176:	mov    edi,DWORD PTR [esp+0x10]
6400c17a:	cmp    esi,edi
6400c17c:	je     0x6400c1a8
6400c17e:	push   ebx
6400c17f:	xor    ebx,ebx
6400c181:	cmp    DWORD PTR [esi+0x18],0x10
6400c185:	jb     0x6400c193
6400c187:	mov    eax,DWORD PTR [esi+0x4]
6400c18a:	push   eax
6400c18b:	call   0x64011d22
6400c190:	add    esp,0x4
6400c193:	mov    DWORD PTR [esi+0x18],0xf
6400c19a:	mov    DWORD PTR [esi+0x14],ebx
6400c19d:	mov    BYTE PTR [esi+0x4],bl
6400c1a0:	add    esi,0x1c
6400c1a3:	cmp    esi,edi
6400c1a5:	jne    0x6400c181
6400c1a7:	pop    ebx
6400c1a8:	pop    edi
6400c1a9:	pop    esi
6400c1aa:	ret    
6400c1ab:	int3   
6400c1ac:	int3   
6400c1ad:	int3   
6400c1ae:	int3   
6400c1af:	int3   
6400c1b0:	push   esi
6400c1b1:	mov    esi,DWORD PTR [esp+0x8]
6400c1b5:	cmp    DWORD PTR [esi+0x18],0x10
6400c1b9:	jb     0x6400c1c7
6400c1bb:	mov    eax,DWORD PTR [esi+0x4]
6400c1be:	push   eax
6400c1bf:	call   0x64011d22
6400c1c4:	add    esp,0x4
6400c1c7:	xor    eax,eax
6400c1c9:	mov    DWORD PTR [esi+0x18],0xf
6400c1d0:	mov    DWORD PTR [esi+0x14],eax
6400c1d3:	mov    BYTE PTR [esi+0x4],al
6400c1d6:	pop    esi
6400c1d7:	ret    0x4
6400c1da:	int3   
6400c1db:	int3   
6400c1dc:	int3   
6400c1dd:	int3   
6400c1de:	int3   
6400c1df:	int3   
6400c1e0:	push   ebp
6400c1e1:	mov    ebp,esp
6400c1e3:	push   0xffffffff
6400c1e5:	push   0x640223a9
6400c1ea:	mov    eax,fs:0x0
6400c1f0:	push   eax
6400c1f1:	sub    esp,0x44
6400c1f4:	mov    eax,ds:0x6402c09c
6400c1f9:	xor    eax,ebp
6400c1fb:	mov    DWORD PTR [ebp-0x14],eax
6400c1fe:	push   ebx
6400c1ff:	push   esi
6400c200:	push   edi
6400c201:	push   eax
6400c202:	lea    eax,[ebp-0xc]
6400c205:	mov    fs:0x0,eax
6400c20b:	mov    DWORD PTR [ebp-0x10],esp
6400c20e:	mov    esi,edx
6400c210:	xor    eax,eax
6400c212:	mov    edi,ecx
6400c214:	mov    DWORD PTR [ebp-0x44],esi
6400c217:	mov    DWORD PTR [ebp-0x48],esi
6400c21a:	mov    DWORD PTR [ebp-0x18],0xf
6400c221:	mov    DWORD PTR [ebp-0x1c],eax
6400c224:	mov    BYTE PTR [ebp-0x2c],al
6400c227:	mov    DWORD PTR [ebp-0x4],eax
6400c22a:	mov    BYTE PTR [ebp-0x4],0x1
6400c22e:	mov    edi,edi
6400c230:	cmp    edi,DWORD PTR [ebp+0x8]
6400c233:	je     0x6400c2e9
6400c239:	mov    DWORD PTR [ebp-0x4c],esi
6400c23c:	mov    DWORD PTR [ebp-0x50],esi
6400c23f:	cmp    esi,eax
6400c241:	mov    BYTE PTR [ebp-0x4],0x2
6400c245:	je     0x6400c262
6400c247:	push   0xffffffff
6400c249:	mov    DWORD PTR [esi+0x14],eax
6400c24c:	mov    DWORD PTR [esi+0x18],0xf
6400c253:	push   eax
6400c254:	mov    BYTE PTR [esi+0x4],al
6400c257:	lea    eax,[ebp-0x30]
6400c25a:	push   eax
6400c25b:	mov    ecx,esi
6400c25d:	call   0x64001780
6400c262:	mov    BYTE PTR [ebp-0x4],0x1
6400c266:	mov    ebx,DWORD PTR [esi+0x10]
6400c269:	mov    eax,DWORD PTR [esi+0x4]
6400c26c:	mov    ecx,DWORD PTR [esi+0x8]
6400c26f:	mov    edx,DWORD PTR [esi+0xc]
6400c272:	mov    DWORD PTR [ebp-0x34],ebx
6400c275:	mov    ebx,DWORD PTR [edi+0x4]
6400c278:	mov    DWORD PTR [esi+0x4],ebx
6400c27b:	mov    ebx,DWORD PTR [edi+0x8]
6400c27e:	mov    DWORD PTR [esi+0x8],ebx
6400c281:	mov    ebx,DWORD PTR [edi+0xc]
6400c284:	mov    DWORD PTR [esi+0xc],ebx
6400c287:	mov    ebx,DWORD PTR [edi+0x10]
6400c28a:	mov    DWORD PTR [esi+0x10],ebx
6400c28d:	mov    DWORD PTR [edi+0x4],eax
6400c290:	mov    DWORD PTR [edi+0x8],ecx
6400c293:	mov    ecx,DWORD PTR [ebp-0x34]
6400c296:	mov    DWORD PTR [edi+0xc],edx
6400c299:	mov    edx,DWORD PTR [edi+0x14]
6400c29c:	mov    DWORD PTR [edi+0x10],ecx
6400c29f:	mov    eax,DWORD PTR [esi+0x14]
6400c2a2:	mov    DWORD PTR [esi+0x14],edx
6400c2a5:	mov    ecx,DWORD PTR [edi+0x18]
6400c2a8:	mov    DWORD PTR [edi+0x14],eax
6400c2ab:	mov    eax,DWORD PTR [esi+0x18]
6400c2ae:	mov    DWORD PTR [esi+0x18],ecx
6400c2b1:	mov    DWORD PTR [edi+0x18],eax
6400c2b4:	add    esi,0x1c
6400c2b7:	add    edi,0x1c
6400c2ba:	mov    DWORD PTR [ebp-0x44],esi
6400c2bd:	xor    eax,eax
6400c2bf:	jmp    0x6400c230
6400c2c4:	mov    esi,DWORD PTR [ebp-0x48]
6400c2c7:	mov    edi,DWORD PTR [ebp-0x44]
6400c2ca:	cmp    esi,edi
6400c2cc:	je     0x6400c2e0
6400c2ce:	mov    ebx,DWORD PTR [ebp+0xc]
6400c2d1:	push   esi
6400c2d2:	mov    ecx,ebx
6400c2d4:	call   0x6400c1b0
6400c2d9:	add    esi,0x1c
6400c2dc:	cmp    esi,edi
6400c2de:	jne    0x6400c2d1
6400c2e0:	push   0x0
6400c2e2:	push   0x0
6400c2e4:	call   0x6401216b
6400c2e9:	cmp    DWORD PTR [ebp-0x18],0x10
6400c2ed:	jb     0x6400c2fb
6400c2ef:	mov    edx,DWORD PTR [ebp-0x2c]
6400c2f2:	push   edx
6400c2f3:	call   0x64011d22
6400c2f8:	add    esp,0x4
6400c2fb:	mov    eax,esi
6400c2fd:	mov    ecx,DWORD PTR [ebp-0xc]
6400c300:	mov    DWORD PTR fs:0x0,ecx
6400c307:	pop    ecx
6400c308:	pop    edi
6400c309:	pop    esi
6400c30a:	pop    ebx
6400c30b:	mov    ecx,DWORD PTR [ebp-0x14]
6400c30e:	xor    ecx,ebp
6400c310:	call   0x6401257c
6400c315:	mov    esp,ebp
6400c317:	pop    ebp
6400c318:	ret    
6400c319:	int3   
6400c31a:	int3   
6400c31b:	int3   
6400c31c:	int3   
6400c31d:	int3   
6400c31e:	int3   
6400c31f:	int3   
6400c320:	push   ecx
6400c321:	mov    eax,ds:0x6402c09c
6400c326:	xor    eax,esp
6400c328:	mov    DWORD PTR [esp],eax
6400c32b:	cmp    DWORD PTR [esp+0x8],ecx
6400c32f:	mov    eax,DWORD PTR [esp+0xc]
6400c333:	je     0x6400c398
6400c335:	push   ebx
6400c336:	push   ebp
6400c337:	push   esi
6400c338:	push   edi
6400c339:	lea    esp,[esp+0x0]
6400c340:	mov    ebp,DWORD PTR [ecx-0x18]
6400c343:	mov    edx,DWORD PTR [eax-0x18]
6400c346:	mov    esi,DWORD PTR [eax-0x14]
6400c349:	mov    edi,DWORD PTR [eax-0x10]
6400c34c:	mov    ebx,DWORD PTR [eax-0xc]
6400c34f:	sub    ecx,0x1c
6400c352:	sub    eax,0x1c
6400c355:	cmp    ecx,DWORD PTR [esp+0x18]
6400c359:	mov    DWORD PTR [eax+0x4],ebp
6400c35c:	mov    ebp,DWORD PTR [ecx+0x8]
6400c35f:	mov    DWORD PTR [eax+0x8],ebp
6400c362:	mov    ebp,DWORD PTR [ecx+0xc]
6400c365:	mov    DWORD PTR [eax+0xc],ebp
6400c368:	mov    ebp,DWORD PTR [ecx+0x10]
6400c36b:	mov    DWORD PTR [eax+0x10],ebp
6400c36e:	mov    DWORD PTR [ecx+0x4],edx
6400c371:	mov    DWORD PTR [ecx+0x8],esi
6400c374:	mov    esi,DWORD PTR [ecx+0x14]
6400c377:	mov    DWORD PTR [ecx+0xc],edi
6400c37a:	mov    DWORD PTR [ecx+0x10],ebx
6400c37d:	mov    edx,DWORD PTR [eax+0x14]
6400c380:	mov    DWORD PTR [eax+0x14],esi
6400c383:	mov    esi,DWORD PTR [ecx+0x18]
6400c386:	mov    DWORD PTR [ecx+0x14],edx
6400c389:	mov    edx,DWORD PTR [eax+0x18]
6400c38c:	mov    DWORD PTR [eax+0x18],esi
6400c38f:	mov    DWORD PTR [ecx+0x18],edx
6400c392:	jne    0x6400c340
6400c394:	pop    edi
6400c395:	pop    esi
6400c396:	pop    ebp
6400c397:	pop    ebx
6400c398:	mov    ecx,DWORD PTR [esp]
6400c39b:	xor    ecx,esp
6400c39d:	call   0x6401257c
6400c3a2:	pop    ecx
6400c3a3:	ret    
6400c3a4:	int3   
6400c3a5:	int3   
6400c3a6:	int3   
6400c3a7:	int3   
6400c3a8:	int3   
6400c3a9:	int3   
6400c3aa:	int3   
6400c3ab:	int3   
6400c3ac:	int3   
6400c3ad:	int3   
6400c3ae:	int3   
6400c3af:	int3   
6400c3b0:	sub    esp,0x800
6400c3b6:	push   ebx
6400c3b7:	push   ebp
6400c3b8:	xor    ecx,ecx
6400c3ba:	push   esi
6400c3bb:	lea    eax,[ecx+0x1]
6400c3be:	push   edi
6400c3bf:	nop
6400c3c0:	mov    edx,eax
6400c3c2:	and    dl,0x80
6400c3c5:	neg    dl
6400c3c7:	lea    esi,[eax+eax*1]
6400c3ca:	mov    DWORD PTR [esp+ecx*4+0x410],eax
6400c3d1:	mov    DWORD PTR [esp+eax*4+0x10],ecx
6400c3d5:	sbb    edx,edx
6400c3d7:	and    edx,0x1b
6400c3da:	xor    edx,esi
6400c3dc:	xor    edx,eax
6400c3de:	and    edx,0xff
6400c3e4:	add    ecx,0x1
6400c3e7:	cmp    ecx,0x100
6400c3ed:	mov    eax,edx
6400c3ef:	jl     0x6400c3c0
6400c3f1:	mov    eax,0x1
6400c3f6:	mov    ecx,0x6402e968
6400c3fb:	jmp    0x6400c400
6400c3fd:	lea    ecx,[ecx+0x0]
6400c400:	mov    edx,eax
6400c402:	and    dl,0x80
6400c405:	neg    dl
6400c407:	mov    DWORD PTR [ecx],eax
6400c409:	sbb    edx,edx
6400c40b:	and    edx,0x1b
6400c40e:	add    eax,eax
6400c410:	xor    edx,eax
6400c412:	and    edx,0xff
6400c418:	add    ecx,0x4
6400c41b:	cmp    ecx,0x6402e990
6400c421:	mov    eax,edx
6400c423:	jl     0x6400c400
6400c425:	mov    BYTE PTR ds:0x6402e068,0x63
6400c42c:	mov    BYTE PTR ds:0x640301f3,0x0
6400c433:	mov    ebx,0x1
6400c438:	mov    ecx,DWORD PTR [esp+ebx*4+0x10]
6400c43c:	add    ecx,ecx
6400c43e:	add    ecx,ecx
6400c440:	lea    edx,[esp+0x80c]
6400c447:	sub    edx,ecx
6400c449:	mov    eax,DWORD PTR [edx]
6400c44b:	mov    ecx,eax
6400c44d:	sar    ecx,0x7
6400c450:	lea    edx,[eax+eax*1]
6400c453:	or     ecx,edx
6400c455:	and    ecx,0xff
6400c45b:	xor    eax,ecx
6400c45d:	mov    edx,ecx
6400c45f:	sar    edx,0x7
6400c462:	add    ecx,ecx
6400c464:	or     edx,ecx
6400c466:	and    edx,0xff
6400c46c:	xor    eax,edx
6400c46e:	mov    ecx,edx
6400c470:	add    edx,edx
6400c472:	sar    ecx,0x7
6400c475:	or     ecx,edx
6400c477:	and    ecx,0xff
6400c47d:	xor    eax,ecx
6400c47f:	mov    edx,ecx
6400c481:	sar    edx,0x7
6400c484:	add    ecx,ecx
6400c486:	or     edx,ecx
6400c488:	xor    edx,0x63
6400c48b:	and    edx,0xff
6400c491:	xor    eax,edx
6400c493:	mov    BYTE PTR [ebx+0x6402e068],al
6400c499:	mov    BYTE PTR [eax+0x64030190],bl
6400c49f:	add    ebx,0x1
6400c4a2:	cmp    ebx,0x100
6400c4a8:	jl     0x6400c438
6400c4aa:	xor    ecx,ecx
6400c4ac:	lea    esp,[esp+0x0]
6400c4b0:	movzx  edx,BYTE PTR [ecx+0x6402e068]
6400c4b7:	mov    eax,edx
6400c4b9:	and    al,0x80
6400c4bb:	neg    al
6400c4bd:	lea    esi,[edx+edx*1]
6400c4c0:	sbb    eax,eax
6400c4c2:	and    eax,0x1b
6400c4c5:	xor    eax,esi
6400c4c7:	and    eax,0xff
6400c4cc:	mov    esi,eax
6400c4ce:	xor    eax,edx
6400c4d0:	shl    eax,0x8
6400c4d3:	xor    eax,edx
6400c4d5:	shl    eax,0x8
6400c4d8:	xor    eax,edx
6400c4da:	shl    eax,0x8
6400c4dd:	xor    eax,esi
6400c4df:	mov    DWORD PTR [ecx*4+0x6402fd90],eax
6400c4e6:	rol    eax,0x8
6400c4e9:	mov    DWORD PTR [ecx*4+0x6402f990],eax
6400c4f0:	rol    eax,0x8
6400c4f3:	mov    DWORD PTR [ecx*4+0x6402f590],eax
6400c4fa:	rol    eax,0x8
6400c4fd:	mov    DWORD PTR [ecx*4+0x6402f190],eax
6400c504:	movzx  eax,BYTE PTR [ecx+0x64030190]
6400c50b:	test   eax,eax
6400c50d:	je     0x6400c561
6400c50f:	mov    esi,DWORD PTR [esp+eax*4+0x10]
6400c513:	mov    edx,DWORD PTR [esp+0x48]
6400c517:	lea    eax,[esi+edx*1]
6400c51a:	cdq    
6400c51b:	mov    edi,0xff
6400c520:	idiv   edi
6400c522:	mov    eax,DWORD PTR [esp+0x34]
6400c526:	add    eax,esi
6400c528:	mov    ebp,DWORD PTR [esp+edx*4+0x410]
6400c52f:	cdq    
6400c530:	idiv   edi
6400c532:	mov    ebx,DWORD PTR [esp+edx*4+0x410]
6400c539:	mov    edx,DWORD PTR [esp+0x44]
6400c53d:	lea    eax,[esi+edx*1]
6400c540:	cdq    
6400c541:	idiv   edi
6400c543:	mov    eax,DWORD PTR [esp+0x3c]
6400c547:	add    eax,esi
6400c549:	mov    esi,0xff
6400c54e:	mov    edi,DWORD PTR [esp+edx*4+0x410]
6400c555:	cdq    
6400c556:	idiv   esi
6400c558:	mov    edx,DWORD PTR [esp+edx*4+0x410]
6400c55f:	jmp    0x6400c569
6400c561:	xor    ebp,ebp
6400c563:	xor    ebx,ebx
6400c565:	xor    edi,edi
6400c567:	xor    edx,edx
6400c569:	shl    edx,0x8
6400c56c:	xor    edx,edi
6400c56e:	shl    edx,0x8
6400c571:	xor    edx,ebx
6400c573:	shl    edx,0x8
6400c576:	xor    edx,ebp
6400c578:	mov    DWORD PTR [ecx*4+0x6402ed90],edx
6400c57f:	rol    edx,0x8
6400c582:	mov    DWORD PTR [ecx*4+0x6402e990],edx
6400c589:	rol    edx,0x8
6400c58c:	mov    DWORD PTR [ecx*4+0x6402e568],edx
6400c593:	rol    edx,0x8
6400c596:	mov    DWORD PTR [ecx*4+0x6402e168],edx
6400c59d:	add    ecx,0x1
6400c5a0:	cmp    ecx,0x100
6400c5a6:	jl     0x6400c4b0
6400c5ac:	pop    edi
6400c5ad:	pop    esi
6400c5ae:	pop    ebp
6400c5af:	pop    ebx
6400c5b0:	add    esp,0x800
6400c5b6:	ret    
6400c5b7:	int3   
6400c5b8:	int3   
6400c5b9:	int3   
6400c5ba:	int3   
6400c5bb:	int3   
6400c5bc:	int3   
6400c5bd:	int3   
6400c5be:	int3   
6400c5bf:	int3   
6400c5c0:	cmp    DWORD PTR ds:0x64030294,0x0
6400c5c7:	push   ebx
6400c5c8:	push   esi
6400c5c9:	push   edi
6400c5ca:	mov    edi,eax
6400c5cc:	jne    0x6400c5dd
6400c5ce:	call   0x6400c3b0
6400c5d3:	mov    DWORD PTR ds:0x64030294,0x1
6400c5dd:	lea    eax,[edi+0x8]
6400c5e0:	mov    ecx,0x6402d38a
6400c5e5:	mov    esi,eax
6400c5e7:	mov    DWORD PTR [edi],0xa
6400c5ed:	mov    DWORD PTR [edi+0x4],eax
6400c5f0:	sub    esi,ecx
6400c5f2:	movzx  ebx,BYTE PTR [ecx-0x1]
6400c5f6:	xor    edx,edx
6400c5f8:	mov    dh,BYTE PTR [ecx+0x1]
6400c5fb:	add    ecx,0x4
6400c5fe:	mov    dl,BYTE PTR [ecx-0x4]
6400c601:	shl    edx,0x8
6400c604:	or     edx,ebx
6400c606:	movzx  ebx,BYTE PTR [ecx-0x6]
6400c60a:	shl    edx,0x8
6400c60d:	or     edx,ebx
6400c60f:	cmp    ecx,0x6402d39a
6400c615:	mov    DWORD PTR [esi+ecx*1-0x4],edx
6400c619:	jl     0x6400c5f2
6400c61b:	mov    edi,DWORD PTR [edi]
6400c61d:	sub    edi,0xa
6400c620:	je     0x6400c8dc
6400c626:	sub    edi,0x2
6400c629:	je     0x6400c70f
6400c62f:	sub    edi,0x2
6400c632:	jne    0x6400cabf
6400c638:	push   ebp
6400c639:	mov    ebp,0x6402e968
6400c63e:	mov    edi,edi
6400c640:	mov    edi,DWORD PTR [eax+0x1c]
6400c643:	xor    edx,edx
6400c645:	mov    ecx,edi
6400c647:	and    ecx,0xff
6400c64d:	mov    dh,BYTE PTR [ecx+0x6402e068]
6400c653:	movzx  ecx,BYTE PTR [eax+0x1f]
6400c657:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400c65e:	xor    edx,ecx
6400c660:	movzx  ecx,BYTE PTR [eax+0x1e]
6400c664:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400c66b:	shl    edx,0x8
6400c66e:	xor    edx,ecx
6400c670:	movzx  ecx,BYTE PTR [eax+0x1d]
6400c674:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400c67b:	mov    esi,DWORD PTR [eax+0x8]
6400c67e:	shl    edx,0x8
6400c681:	xor    edx,ecx
6400c683:	xor    edx,DWORD PTR [eax]
6400c685:	xor    ebx,ebx
6400c687:	mov    ecx,edx
6400c689:	xor    ecx,DWORD PTR [ebp+0x0]
6400c68c:	mov    edx,DWORD PTR [eax+0x4]
6400c68f:	xor    edx,ecx
6400c691:	mov    DWORD PTR [eax+0x20],ecx
6400c694:	mov    ecx,DWORD PTR [eax+0xc]
6400c697:	xor    esi,edx
6400c699:	xor    ecx,esi
6400c69b:	mov    DWORD PTR [eax+0x2c],ecx
6400c69e:	mov    DWORD PTR [eax+0x24],edx
6400c6a1:	movzx  edx,BYTE PTR [eax+0x2f]
6400c6a5:	mov    DWORD PTR [eax+0x28],esi
6400c6a8:	mov    bh,BYTE PTR [edx+0x6402e068]
6400c6ae:	movzx  edx,BYTE PTR [eax+0x2e]
6400c6b2:	movzx  edx,BYTE PTR [edx+0x6402e068]
6400c6b9:	xor    ebx,edx
6400c6bb:	movzx  edx,BYTE PTR [eax+0x2d]
6400c6bf:	movzx  edx,BYTE PTR [edx+0x6402e068]
6400c6c6:	and    ecx,0xff
6400c6cc:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400c6d3:	shl    ebx,0x8
6400c6d6:	xor    ebx,edx
6400c6d8:	mov    edx,DWORD PTR [eax+0x14]
6400c6db:	shl    ebx,0x8
6400c6de:	xor    ecx,ebx
6400c6e0:	xor    ecx,DWORD PTR [eax+0x10]
6400c6e3:	add    ebp,0x4
6400c6e6:	xor    edx,ecx
6400c6e8:	mov    DWORD PTR [eax+0x30],ecx
6400c6eb:	mov    ecx,DWORD PTR [eax+0x18]
6400c6ee:	xor    ecx,edx
6400c6f0:	mov    DWORD PTR [eax+0x38],ecx
6400c6f3:	xor    ecx,edi
6400c6f5:	mov    DWORD PTR [eax+0x34],edx
6400c6f8:	mov    DWORD PTR [eax+0x3c],ecx
6400c6fb:	add    eax,0x20
6400c6fe:	cmp    ebp,0x6402e984
6400c704:	jl     0x6400c640
6400c70a:	pop    ebp
6400c70b:	pop    edi
6400c70c:	pop    esi
6400c70d:	pop    ebx
6400c70e:	ret    
6400c70f:	mov    esi,0x6402e96c
6400c714:	mov    edi,DWORD PTR [eax+0x14]
6400c717:	xor    ecx,ecx
6400c719:	mov    edx,edi
6400c71b:	and    edx,0xff
6400c721:	mov    ch,BYTE PTR [edx+0x6402e068]
6400c727:	movzx  edx,BYTE PTR [eax+0x17]
6400c72b:	movzx  edx,BYTE PTR [edx+0x6402e068]
6400c732:	xor    ecx,edx
6400c734:	movzx  edx,BYTE PTR [eax+0x16]
6400c738:	movzx  edx,BYTE PTR [edx+0x6402e068]
6400c73f:	shl    ecx,0x8
6400c742:	xor    ecx,edx
6400c744:	movzx  edx,BYTE PTR [eax+0x15]
6400c748:	movzx  edx,BYTE PTR [edx+0x6402e068]
6400c74f:	shl    ecx,0x8
6400c752:	xor    ecx,edx
6400c754:	xor    ecx,DWORD PTR [esi-0x4]
6400c757:	mov    edx,DWORD PTR [eax+0x4]
6400c75a:	xor    ecx,DWORD PTR [eax]
6400c75c:	xor    edx,ecx
6400c75e:	mov    DWORD PTR [eax+0x18],ecx
6400c761:	mov    ecx,DWORD PTR [eax+0x8]
6400c764:	xor    ecx,edx
6400c766:	mov    DWORD PTR [eax+0x1c],edx
6400c769:	mov    edx,DWORD PTR [eax+0xc]
6400c76c:	xor    edx,ecx
6400c76e:	mov    DWORD PTR [eax+0x20],ecx
6400c771:	mov    ecx,DWORD PTR [eax+0x10]
6400c774:	xor    ecx,edx
6400c776:	mov    DWORD PTR [eax+0x28],ecx
6400c779:	mov    DWORD PTR [eax+0x24],edx
6400c77c:	xor    ecx,edi
6400c77e:	mov    DWORD PTR [eax+0x2c],ecx
6400c781:	and    ecx,0xff
6400c787:	xor    edx,edx
6400c789:	mov    dh,BYTE PTR [ecx+0x6402e068]
6400c78f:	movzx  ecx,BYTE PTR [eax+0x2f]
6400c793:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400c79a:	xor    edx,ecx
6400c79c:	movzx  ecx,BYTE PTR [eax+0x2e]
6400c7a0:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400c7a7:	shl    edx,0x8
6400c7aa:	xor    edx,ecx
6400c7ac:	movzx  ecx,BYTE PTR [eax+0x2d]
6400c7b0:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400c7b7:	mov    edi,DWORD PTR [eax+0x28]
6400c7ba:	shl    edx,0x8
6400c7bd:	xor    edx,ecx
6400c7bf:	xor    edx,DWORD PTR [eax+0x18]
6400c7c2:	mov    ecx,edx
6400c7c4:	xor    ecx,DWORD PTR [esi]
6400c7c6:	mov    edx,DWORD PTR [eax+0x1c]
6400c7c9:	xor    edx,ecx
6400c7cb:	mov    DWORD PTR [eax+0x30],ecx
6400c7ce:	mov    ecx,DWORD PTR [eax+0x20]
6400c7d1:	xor    ecx,edx
6400c7d3:	mov    DWORD PTR [eax+0x34],edx
6400c7d6:	mov    edx,DWORD PTR [eax+0x24]
6400c7d9:	xor    edx,ecx
6400c7db:	mov    DWORD PTR [eax+0x38],ecx
6400c7de:	mov    ecx,DWORD PTR [eax+0x2c]
6400c7e1:	xor    edi,edx
6400c7e3:	mov    DWORD PTR [eax+0x3c],edx
6400c7e6:	xor    ecx,edi
6400c7e8:	mov    DWORD PTR [eax+0x44],ecx
6400c7eb:	and    ecx,0xff
6400c7f1:	xor    edx,edx
6400c7f3:	mov    DWORD PTR [eax+0x40],edi
6400c7f6:	mov    dh,BYTE PTR [ecx+0x6402e068]
6400c7fc:	movzx  ecx,BYTE PTR [eax+0x47]
6400c800:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400c807:	xor    edx,ecx
6400c809:	movzx  ecx,BYTE PTR [eax+0x46]
6400c80d:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400c814:	shl    edx,0x8
6400c817:	xor    edx,ecx
6400c819:	movzx  ecx,BYTE PTR [eax+0x45]
6400c81d:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400c824:	shl    edx,0x8
6400c827:	xor    edx,ecx
6400c829:	xor    edx,DWORD PTR [esi+0x4]
6400c82c:	mov    ecx,edx
6400c82e:	xor    ecx,DWORD PTR [eax+0x30]
6400c831:	mov    edx,DWORD PTR [eax+0x34]
6400c834:	xor    edx,ecx
6400c836:	mov    DWORD PTR [eax+0x48],ecx
6400c839:	mov    ecx,DWORD PTR [eax+0x38]
6400c83c:	xor    ecx,edx
6400c83e:	mov    DWORD PTR [eax+0x4c],edx
6400c841:	mov    edx,DWORD PTR [eax+0x3c]
6400c844:	xor    edx,ecx
6400c846:	mov    DWORD PTR [eax+0x50],ecx
6400c849:	mov    ecx,DWORD PTR [eax+0x44]
6400c84c:	xor    edi,edx
6400c84e:	mov    DWORD PTR [eax+0x54],edx
6400c851:	xor    ecx,edi
6400c853:	mov    DWORD PTR [eax+0x5c],ecx
6400c856:	and    ecx,0xff
6400c85c:	xor    edx,edx
6400c85e:	mov    DWORD PTR [eax+0x58],edi
6400c861:	mov    dh,BYTE PTR [ecx+0x6402e068]
6400c867:	movzx  ecx,BYTE PTR [eax+0x5f]
6400c86b:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400c872:	xor    edx,ecx
6400c874:	movzx  ecx,BYTE PTR [eax+0x5e]
6400c878:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400c87f:	shl    edx,0x8
6400c882:	xor    edx,ecx
6400c884:	movzx  ecx,BYTE PTR [eax+0x5d]
6400c888:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400c88f:	shl    edx,0x8
6400c892:	xor    edx,ecx
6400c894:	xor    edx,DWORD PTR [esi+0x8]
6400c897:	add    esi,0x10
6400c89a:	mov    ecx,edx
6400c89c:	xor    ecx,DWORD PTR [eax+0x48]
6400c89f:	mov    edx,DWORD PTR [eax+0x4c]
6400c8a2:	xor    edx,ecx
6400c8a4:	mov    DWORD PTR [eax+0x60],ecx
6400c8a7:	mov    ecx,DWORD PTR [eax+0x50]
6400c8aa:	xor    ecx,edx
6400c8ac:	mov    DWORD PTR [eax+0x64],edx
6400c8af:	mov    edx,DWORD PTR [eax+0x54]
6400c8b2:	xor    edx,ecx
6400c8b4:	mov    DWORD PTR [eax+0x68],ecx
6400c8b7:	mov    DWORD PTR [eax+0x6c],edx
6400c8ba:	mov    ecx,edi
6400c8bc:	xor    ecx,edx
6400c8be:	mov    edx,DWORD PTR [eax+0x5c]
6400c8c1:	xor    edx,ecx
6400c8c3:	mov    DWORD PTR [eax+0x70],ecx
6400c8c6:	mov    DWORD PTR [eax+0x74],edx
6400c8c9:	add    eax,0x60
6400c8cc:	cmp    esi,0x6402e98c
6400c8d2:	jl     0x6400c714
6400c8d8:	pop    edi
6400c8d9:	pop    esi
6400c8da:	pop    ebx
6400c8db:	ret    
6400c8dc:	mov    ecx,0x6402e96c
6400c8e1:	mov    esi,DWORD PTR [eax+0xc]
6400c8e4:	mov    edx,esi
6400c8e6:	and    edx,0xff
6400c8ec:	xor    ebx,ebx
6400c8ee:	mov    bh,BYTE PTR [edx+0x6402e068]
6400c8f4:	movzx  edx,BYTE PTR [eax+0xf]
6400c8f8:	movzx  edx,BYTE PTR [edx+0x6402e068]
6400c8ff:	xor    ebx,edx
6400c901:	movzx  edx,BYTE PTR [eax+0xe]
6400c905:	movzx  edx,BYTE PTR [edx+0x6402e068]
6400c90c:	mov    edi,DWORD PTR [eax+0x4]
6400c90f:	shl    ebx,0x8
6400c912:	xor    ebx,edx
6400c914:	movzx  edx,BYTE PTR [eax+0xd]
6400c918:	movzx  edx,BYTE PTR [edx+0x6402e068]
6400c91f:	shl    ebx,0x8
6400c922:	xor    ebx,edx
6400c924:	xor    ebx,DWORD PTR [ecx-0x4]
6400c927:	mov    edx,ebx
6400c929:	xor    edx,DWORD PTR [eax]
6400c92b:	mov    DWORD PTR [eax+0x10],edx
6400c92e:	xor    edi,edx
6400c930:	mov    edx,DWORD PTR [eax+0x8]
6400c933:	xor    edx,edi
6400c935:	xor    esi,edx
6400c937:	mov    DWORD PTR [eax+0x18],edx
6400c93a:	mov    DWORD PTR [eax+0x1c],esi
6400c93d:	and    esi,0xff
6400c943:	xor    edx,edx
6400c945:	mov    DWORD PTR [eax+0x14],edi
6400c948:	mov    dh,BYTE PTR [esi+0x6402e068]
6400c94e:	movzx  esi,BYTE PTR [eax+0x1f]
6400c952:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400c959:	xor    edx,esi
6400c95b:	movzx  esi,BYTE PTR [eax+0x1e]
6400c95f:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400c966:	shl    edx,0x8
6400c969:	xor    edx,esi
6400c96b:	movzx  esi,BYTE PTR [eax+0x1d]
6400c96f:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400c976:	shl    edx,0x8
6400c979:	xor    edx,esi
6400c97b:	xor    edx,DWORD PTR [ecx]
6400c97d:	mov    esi,edi
6400c97f:	xor    edx,DWORD PTR [eax+0x10]
6400c982:	xor    esi,edx
6400c984:	mov    DWORD PTR [eax+0x20],edx
6400c987:	mov    edx,DWORD PTR [eax+0x18]
6400c98a:	xor    edx,esi
6400c98c:	mov    DWORD PTR [eax+0x24],esi
6400c98f:	mov    esi,DWORD PTR [eax+0x1c]
6400c992:	xor    esi,edx
6400c994:	mov    DWORD PTR [eax+0x28],edx
6400c997:	mov    DWORD PTR [eax+0x2c],esi
6400c99a:	and    esi,0xff
6400c9a0:	xor    edx,edx
6400c9a2:	mov    dh,BYTE PTR [esi+0x6402e068]
6400c9a8:	movzx  esi,BYTE PTR [eax+0x2f]
6400c9ac:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400c9b3:	xor    edx,esi
6400c9b5:	movzx  esi,BYTE PTR [eax+0x2e]
6400c9b9:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400c9c0:	shl    edx,0x8
6400c9c3:	xor    edx,esi
6400c9c5:	movzx  esi,BYTE PTR [eax+0x2d]
6400c9c9:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400c9d0:	shl    edx,0x8
6400c9d3:	xor    edx,esi
6400c9d5:	xor    edx,DWORD PTR [ecx+0x4]
6400c9d8:	mov    esi,DWORD PTR [eax+0x24]
6400c9db:	xor    edx,DWORD PTR [eax+0x20]
6400c9de:	xor    esi,edx
6400c9e0:	mov    DWORD PTR [eax+0x30],edx
6400c9e3:	mov    edx,DWORD PTR [eax+0x28]
6400c9e6:	xor    edx,esi
6400c9e8:	mov    DWORD PTR [eax+0x34],esi
6400c9eb:	mov    esi,DWORD PTR [eax+0x2c]
6400c9ee:	xor    esi,edx
6400c9f0:	mov    DWORD PTR [eax+0x3c],esi
6400c9f3:	mov    DWORD PTR [eax+0x38],edx
6400c9f6:	and    esi,0xff
6400c9fc:	xor    edx,edx
6400c9fe:	mov    dh,BYTE PTR [esi+0x6402e068]
6400ca04:	movzx  esi,BYTE PTR [eax+0x3f]
6400ca08:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400ca0f:	xor    edx,esi
6400ca11:	movzx  esi,BYTE PTR [eax+0x3e]
6400ca15:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400ca1c:	shl    edx,0x8
6400ca1f:	xor    edx,esi
6400ca21:	movzx  esi,BYTE PTR [eax+0x3d]
6400ca25:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400ca2c:	shl    edx,0x8
6400ca2f:	xor    edx,esi
6400ca31:	xor    edx,DWORD PTR [ecx+0x8]
6400ca34:	mov    esi,DWORD PTR [eax+0x34]
6400ca37:	xor    edx,DWORD PTR [eax+0x30]
6400ca3a:	add    ecx,0x14
6400ca3d:	xor    esi,edx
6400ca3f:	mov    DWORD PTR [eax+0x40],edx
6400ca42:	mov    edx,DWORD PTR [eax+0x38]
6400ca45:	xor    edx,esi
6400ca47:	mov    DWORD PTR [eax+0x44],esi
6400ca4a:	mov    esi,DWORD PTR [eax+0x3c]
6400ca4d:	xor    esi,edx
6400ca4f:	mov    DWORD PTR [eax+0x48],edx
6400ca52:	mov    DWORD PTR [eax+0x4c],esi
6400ca55:	and    esi,0xff
6400ca5b:	xor    edx,edx
6400ca5d:	mov    dh,BYTE PTR [esi+0x6402e068]
6400ca63:	movzx  esi,BYTE PTR [eax+0x4f]
6400ca67:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400ca6e:	xor    edx,esi
6400ca70:	movzx  esi,BYTE PTR [eax+0x4e]
6400ca74:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400ca7b:	shl    edx,0x8
6400ca7e:	xor    edx,esi
6400ca80:	movzx  esi,BYTE PTR [eax+0x4d]
6400ca84:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400ca8b:	shl    edx,0x8
6400ca8e:	xor    edx,esi
6400ca90:	xor    edx,DWORD PTR [ecx-0x8]
6400ca93:	mov    esi,DWORD PTR [eax+0x44]
6400ca96:	xor    edx,DWORD PTR [eax+0x40]
6400ca99:	add    eax,0x50
6400ca9c:	xor    esi,edx
6400ca9e:	mov    DWORD PTR [eax],edx
6400caa0:	mov    edx,DWORD PTR [eax-0x8]
6400caa3:	xor    edx,esi
6400caa5:	mov    DWORD PTR [eax+0x4],esi
6400caa8:	mov    esi,DWORD PTR [eax-0x4]
6400caab:	xor    esi,edx
6400caad:	cmp    ecx,0x6402e994
6400cab3:	mov    DWORD PTR [eax+0x8],edx
6400cab6:	mov    DWORD PTR [eax+0xc],esi
6400cab9:	jl     0x6400c8e1
6400cabf:	pop    edi
6400cac0:	pop    esi
6400cac1:	pop    ebx
6400cac2:	ret    
6400cac3:	int3   
6400cac4:	int3   
6400cac5:	int3   
6400cac6:	int3   
6400cac7:	int3   
6400cac8:	int3   
6400cac9:	int3   
6400caca:	int3   
6400cacb:	int3   
6400cacc:	int3   
6400cacd:	int3   
6400cace:	int3   
6400cacf:	int3   
6400cad0:	sub    esp,0x11c
6400cad6:	push   esi
6400cad7:	push   edi
6400cad8:	mov    edi,eax
6400cada:	lea    esi,[edi+0x8]
6400cadd:	lea    eax,[esp+0x8]
6400cae1:	mov    DWORD PTR [edi],0xa
6400cae7:	mov    DWORD PTR [edi+0x4],esi
6400caea:	call   0x6400c5c0
6400caef:	mov    eax,DWORD PTR [esp+0x8]
6400caf3:	shl    eax,0x4
6400caf6:	add    eax,DWORD PTR [esp+0xc]
6400cafa:	add    esi,0x4
6400cafd:	mov    ecx,DWORD PTR [eax]
6400caff:	mov    DWORD PTR [esi-0x4],ecx
6400cb02:	mov    edx,DWORD PTR [eax+0x4]
6400cb05:	add    eax,0x4
6400cb08:	mov    DWORD PTR [esi],edx
6400cb0a:	mov    ecx,DWORD PTR [eax+0x4]
6400cb0d:	add    eax,0x4
6400cb10:	add    esi,0x4
6400cb13:	mov    DWORD PTR [esi],ecx
6400cb15:	mov    edx,DWORD PTR [eax+0x4]
6400cb18:	add    eax,0x4
6400cb1b:	add    esi,0x4
6400cb1e:	mov    DWORD PTR [esi],edx
6400cb20:	mov    ecx,DWORD PTR [edi]
6400cb22:	sub    ecx,0x1
6400cb25:	add    esi,0x4
6400cb28:	sub    eax,0x1c
6400cb2b:	test   ecx,ecx
6400cb2d:	jle    0x6400cc85
6400cb33:	movzx  edx,BYTE PTR [eax+0x3]
6400cb37:	movzx  edx,BYTE PTR [edx+0x6402e068]
6400cb3e:	mov    edx,DWORD PTR [edx*4+0x6402e168]
6400cb45:	movzx  edi,BYTE PTR [eax+0x2]
6400cb49:	movzx  edi,BYTE PTR [edi+0x6402e068]
6400cb50:	xor    edx,DWORD PTR [edi*4+0x6402e568]
6400cb57:	movzx  edi,BYTE PTR [eax+0x1]
6400cb5b:	movzx  edi,BYTE PTR [edi+0x6402e068]
6400cb62:	xor    edx,DWORD PTR [edi*4+0x6402e990]
6400cb69:	mov    edi,DWORD PTR [eax]
6400cb6b:	and    edi,0xff
6400cb71:	movzx  edi,BYTE PTR [edi+0x6402e068]
6400cb78:	xor    edx,DWORD PTR [edi*4+0x6402ed90]
6400cb7f:	add    eax,0x10
6400cb82:	mov    DWORD PTR [esi],edx
6400cb84:	mov    edx,DWORD PTR [eax-0xc]
6400cb87:	movzx  edi,BYTE PTR [eax-0x9]
6400cb8b:	movzx  edi,BYTE PTR [edi+0x6402e068]
6400cb92:	and    edx,0xff
6400cb98:	movzx  edx,BYTE PTR [edx+0x6402e068]
6400cb9f:	mov    edx,DWORD PTR [edx*4+0x6402ed90]
6400cba6:	xor    edx,DWORD PTR [edi*4+0x6402e168]
6400cbad:	movzx  edi,BYTE PTR [eax-0xa]
6400cbb1:	movzx  edi,BYTE PTR [edi+0x6402e068]
6400cbb8:	xor    edx,DWORD PTR [edi*4+0x6402e568]
6400cbbf:	movzx  edi,BYTE PTR [eax-0xb]
6400cbc3:	movzx  edi,BYTE PTR [edi+0x6402e068]
6400cbca:	xor    edx,DWORD PTR [edi*4+0x6402e990]
6400cbd1:	sub    ecx,0x1
6400cbd4:	mov    DWORD PTR [esi+0x4],edx
6400cbd7:	mov    edx,DWORD PTR [eax-0x8]
6400cbda:	movzx  edi,BYTE PTR [eax-0x5]
6400cbde:	movzx  edi,BYTE PTR [edi+0x6402e068]
6400cbe5:	and    edx,0xff
6400cbeb:	movzx  edx,BYTE PTR [edx+0x6402e068]
6400cbf2:	mov    edx,DWORD PTR [edx*4+0x6402ed90]
6400cbf9:	xor    edx,DWORD PTR [edi*4+0x6402e168]
6400cc00:	movzx  edi,BYTE PTR [eax-0x6]
6400cc04:	movzx  edi,BYTE PTR [edi+0x6402e068]
6400cc0b:	xor    edx,DWORD PTR [edi*4+0x6402e568]
6400cc12:	movzx  edi,BYTE PTR [eax-0x7]
6400cc16:	movzx  edi,BYTE PTR [edi+0x6402e068]
6400cc1d:	xor    edx,DWORD PTR [edi*4+0x6402e990]
6400cc24:	add    esi,0x10
6400cc27:	mov    DWORD PTR [esi-0x8],edx
6400cc2a:	mov    edx,DWORD PTR [eax-0x4]
6400cc2d:	movzx  edi,BYTE PTR [eax-0x1]
6400cc31:	movzx  edi,BYTE PTR [edi+0x6402e068]
6400cc38:	and    edx,0xff
6400cc3e:	movzx  edx,BYTE PTR [edx+0x6402e068]
6400cc45:	mov    edx,DWORD PTR [edx*4+0x6402ed90]
6400cc4c:	xor    edx,DWORD PTR [edi*4+0x6402e168]
6400cc53:	movzx  edi,BYTE PTR [eax-0x2]
6400cc57:	movzx  edi,BYTE PTR [edi+0x6402e068]
6400cc5e:	xor    edx,DWORD PTR [edi*4+0x6402e568]
6400cc65:	movzx  edi,BYTE PTR [eax-0x3]
6400cc69:	movzx  edi,BYTE PTR [edi+0x6402e068]
6400cc70:	xor    edx,DWORD PTR [edi*4+0x6402e990]
6400cc77:	sub    eax,0x20
6400cc7a:	test   ecx,ecx
6400cc7c:	mov    DWORD PTR [esi-0x4],edx
6400cc7f:	jg     0x6400cb33
6400cc85:	mov    ecx,DWORD PTR [eax]
6400cc87:	mov    DWORD PTR [esi],ecx
6400cc89:	mov    edx,DWORD PTR [eax+0x4]
6400cc8c:	add    esi,0x4
6400cc8f:	add    eax,0x4
6400cc92:	mov    DWORD PTR [esi],edx
6400cc94:	mov    ecx,DWORD PTR [eax+0x4]
6400cc97:	add    esi,0x4
6400cc9a:	add    eax,0x4
6400cc9d:	mov    DWORD PTR [esi],ecx
6400cc9f:	mov    edx,DWORD PTR [eax+0x4]
6400cca2:	pop    edi
6400cca3:	mov    DWORD PTR [esi+0x4],edx
6400cca6:	pop    esi
6400cca7:	add    esp,0x11c
6400ccad:	ret    
6400ccae:	int3   
6400ccaf:	int3   
6400ccb0:	sub    esp,0x10
6400ccb3:	xor    ecx,ecx
6400ccb5:	push   ebx
6400ccb6:	push   ebp
6400ccb7:	mov    ebp,DWORD PTR [esp+0x1c]
6400ccbb:	push   esi
6400ccbc:	push   edi
6400ccbd:	mov    edi,eax
6400ccbf:	mov    ch,BYTE PTR [edi+0x3]
6400ccc2:	movzx  edx,BYTE PTR [edi+0x1]
6400ccc6:	mov    eax,DWORD PTR [ebp+0x4]
6400ccc9:	movzx  esi,BYTE PTR [edi+0x9]
6400cccd:	mov    cl,BYTE PTR [edi+0x2]
6400ccd0:	movzx  ebx,BYTE PTR [edi+0xd]
6400ccd4:	add    eax,0x4
6400ccd7:	add    eax,0x4
6400ccda:	add    eax,0x4
6400ccdd:	shl    ecx,0x8
6400cce0:	or     ecx,edx
6400cce2:	movzx  edx,BYTE PTR [edi]
6400cce5:	shl    ecx,0x8
6400cce8:	or     ecx,edx
6400ccea:	xor    ecx,DWORD PTR [eax-0xc]
6400cced:	movzx  edx,BYTE PTR [edi+0x5]
6400ccf1:	mov    DWORD PTR [esp+0x24],ecx
6400ccf5:	xor    ecx,ecx
6400ccf7:	mov    ch,BYTE PTR [edi+0x7]
6400ccfa:	add    eax,0x4
6400ccfd:	mov    cl,BYTE PTR [edi+0x6]
6400cd00:	shl    ecx,0x8
6400cd03:	or     ecx,edx
6400cd05:	movzx  edx,BYTE PTR [edi+0x4]
6400cd09:	shl    ecx,0x8
6400cd0c:	or     ecx,edx
6400cd0e:	xor    edx,edx
6400cd10:	mov    dh,BYTE PTR [edi+0xb]
6400cd13:	xor    ecx,DWORD PTR [eax-0xc]
6400cd16:	mov    dl,BYTE PTR [edi+0xa]
6400cd19:	shl    edx,0x8
6400cd1c:	or     edx,esi
6400cd1e:	movzx  esi,BYTE PTR [edi+0x8]
6400cd22:	shl    edx,0x8
6400cd25:	or     edx,esi
6400cd27:	xor    edx,DWORD PTR [eax-0x8]
6400cd2a:	mov    esi,edx
6400cd2c:	xor    edx,edx
6400cd2e:	mov    dh,BYTE PTR [edi+0xf]
6400cd31:	mov    DWORD PTR [esp+0x10],esi
6400cd35:	mov    dl,BYTE PTR [edi+0xe]
6400cd38:	movzx  edi,BYTE PTR [edi+0xc]
6400cd3c:	shl    edx,0x8
6400cd3f:	or     edx,ebx
6400cd41:	shl    edx,0x8
6400cd44:	or     edx,edi
6400cd46:	xor    edx,DWORD PTR [eax-0x4]
6400cd49:	cmp    DWORD PTR [esp+0x28],0x0
6400cd4e:	jne    0x6400d1e9
6400cd54:	mov    ebp,DWORD PTR [ebp+0x0]
6400cd57:	sar    ebp,1
6400cd59:	sub    ebp,0x1
6400cd5c:	test   ebp,ebp
6400cd5e:	jle    0x6400cf8f
6400cd64:	mov    ebx,esi
6400cd66:	movzx  edi,dh
6400cd69:	mov    esi,DWORD PTR [edi*4+0x6402e990]
6400cd70:	mov    edi,ecx
6400cd72:	shr    edi,0x18
6400cd75:	shr    ebx,0x10
6400cd78:	and    ebx,0xff
6400cd7e:	xor    esi,DWORD PTR [ebx*4+0x6402e568]
6400cd85:	add    eax,0x4
6400cd88:	xor    esi,DWORD PTR [edi*4+0x6402e168]
6400cd8f:	mov    edi,DWORD PTR [esp+0x24]
6400cd93:	and    edi,0xff
6400cd99:	mov    DWORD PTR [esp+0x28],esi
6400cd9d:	xor    esi,DWORD PTR [edi*4+0x6402ed90]
6400cda4:	movzx  edi,BYTE PTR [esp+0x25]
6400cda9:	xor    esi,DWORD PTR [eax-0x4]
6400cdac:	add    eax,0x4
6400cdaf:	mov    DWORD PTR [esp+0x14],esi
6400cdb3:	mov    esi,edx
6400cdb5:	shr    esi,0x10
6400cdb8:	and    esi,0xff
6400cdbe:	mov    esi,DWORD PTR [esi*4+0x6402e568]
6400cdc5:	xor    esi,DWORD PTR [edi*4+0x6402e990]
6400cdcc:	mov    edi,DWORD PTR [esp+0x10]
6400cdd0:	shr    edi,0x18
6400cdd3:	mov    DWORD PTR [esp+0x28],esi
6400cdd7:	xor    esi,DWORD PTR [edi*4+0x6402e168]
6400cdde:	mov    edi,ecx
6400cde0:	and    edi,0xff
6400cde6:	xor    esi,DWORD PTR [edi*4+0x6402ed90]
6400cded:	mov    edi,DWORD PTR [esp+0x24]
6400cdf1:	xor    esi,DWORD PTR [eax-0x4]
6400cdf4:	shr    edi,0x10
6400cdf7:	mov    DWORD PTR [esp+0x18],esi
6400cdfb:	movzx  esi,ch
6400cdfe:	mov    esi,DWORD PTR [esi*4+0x6402e990]
6400ce05:	and    edi,0xff
6400ce0b:	xor    esi,DWORD PTR [edi*4+0x6402e568]
6400ce12:	mov    edi,edx
6400ce14:	shr    edi,0x18
6400ce17:	xor    esi,DWORD PTR [edi*4+0x6402e168]
6400ce1e:	mov    edi,DWORD PTR [esp+0x10]
6400ce22:	and    edi,0xff
6400ce28:	mov    DWORD PTR [esp+0x28],esi
6400ce2c:	xor    esi,DWORD PTR [edi*4+0x6402ed90]
6400ce33:	shr    ecx,0x10
6400ce36:	xor    esi,DWORD PTR [eax]
6400ce38:	and    ecx,0xff
6400ce3e:	mov    DWORD PTR [esp+0x28],esi
6400ce42:	movzx  esi,BYTE PTR [esp+0x11]
6400ce47:	mov    ebx,DWORD PTR [esi*4+0x6402e990]
6400ce4e:	xor    ebx,DWORD PTR [ecx*4+0x6402e568]
6400ce55:	mov    ecx,DWORD PTR [esp+0x24]
6400ce59:	mov    esi,DWORD PTR [esp+0x28]
6400ce5d:	shr    ecx,0x18
6400ce60:	xor    ebx,DWORD PTR [ecx*4+0x6402e168]
6400ce67:	and    edx,0xff
6400ce6d:	xor    ebx,DWORD PTR [edx*4+0x6402ed90]
6400ce74:	add    eax,0x4
6400ce77:	xor    ebx,DWORD PTR [eax]
6400ce79:	mov    ecx,esi
6400ce7b:	shr    ecx,0x10
6400ce7e:	and    ecx,0xff
6400ce84:	movzx  edx,bh
6400ce87:	mov    edi,DWORD PTR [edx*4+0x6402e990]
6400ce8e:	xor    edi,DWORD PTR [ecx*4+0x6402e568]
6400ce95:	mov    edx,DWORD PTR [esp+0x18]
6400ce99:	mov    ecx,edx
6400ce9b:	shr    ecx,0x18
6400ce9e:	xor    edi,DWORD PTR [ecx*4+0x6402e168]
6400cea5:	mov    ecx,DWORD PTR [esp+0x14]
6400cea9:	and    ecx,0xff
6400ceaf:	xor    edi,DWORD PTR [ecx*4+0x6402ed90]
6400ceb6:	add    eax,0x4
6400ceb9:	xor    edi,DWORD PTR [eax]
6400cebb:	mov    ecx,ebx
6400cebd:	shr    ecx,0x10
6400cec0:	mov    DWORD PTR [esp+0x24],edi
6400cec4:	movzx  edi,BYTE PTR [esp+0x15]
6400cec9:	add    eax,0x4
6400cecc:	and    ecx,0xff
6400ced2:	mov    ecx,DWORD PTR [ecx*4+0x6402e568]
6400ced9:	xor    ecx,DWORD PTR [edi*4+0x6402e990]
6400cee0:	shr    esi,0x18
6400cee3:	xor    ecx,DWORD PTR [esi*4+0x6402e168]
6400ceea:	mov    esi,edx
6400ceec:	and    esi,0xff
6400cef2:	xor    ecx,DWORD PTR [esi*4+0x6402ed90]
6400cef9:	mov    esi,DWORD PTR [esp+0x14]
6400cefd:	xor    ecx,DWORD PTR [eax]
6400ceff:	movzx  edx,dh
6400cf02:	mov    edx,DWORD PTR [edx*4+0x6402e990]
6400cf09:	mov    edi,DWORD PTR [esp+0x18]
6400cf0d:	shr    esi,0x10
6400cf10:	and    esi,0xff
6400cf16:	xor    edx,DWORD PTR [esi*4+0x6402e568]
6400cf1d:	mov    esi,ebx
6400cf1f:	shr    esi,0x18
6400cf22:	xor    edx,DWORD PTR [esi*4+0x6402e168]
6400cf29:	mov    esi,DWORD PTR [esp+0x28]
6400cf2d:	and    esi,0xff
6400cf33:	xor    edx,DWORD PTR [esi*4+0x6402ed90]
6400cf3a:	add    eax,0x4
6400cf3d:	xor    edx,DWORD PTR [eax]
6400cf3f:	shr    edi,0x10
6400cf42:	mov    esi,edx
6400cf44:	movzx  edx,BYTE PTR [esp+0x29]
6400cf49:	mov    edx,DWORD PTR [edx*4+0x6402e990]
6400cf50:	and    edi,0xff
6400cf56:	xor    edx,DWORD PTR [edi*4+0x6402e568]
6400cf5d:	mov    edi,DWORD PTR [esp+0x14]
6400cf61:	shr    edi,0x18
6400cf64:	xor    edx,DWORD PTR [edi*4+0x6402e168]
6400cf6b:	and    ebx,0xff
6400cf71:	xor    edx,DWORD PTR [ebx*4+0x6402ed90]
6400cf78:	add    eax,0x4
6400cf7b:	xor    edx,DWORD PTR [eax]
6400cf7d:	sub    ebp,0x1
6400cf80:	add    eax,0x4
6400cf83:	test   ebp,ebp
6400cf85:	mov    DWORD PTR [esp+0x10],esi
6400cf89:	jg     0x6400cd64
6400cf8f:	mov    ebx,esi
6400cf91:	movzx  edi,dh
6400cf94:	mov    esi,DWORD PTR [edi*4+0x6402e990]
6400cf9b:	mov    edi,ecx
6400cf9d:	shr    edi,0x18
6400cfa0:	shr    ebx,0x10
6400cfa3:	and    ebx,0xff
6400cfa9:	xor    esi,DWORD PTR [ebx*4+0x6402e568]
6400cfb0:	add    eax,0x4
6400cfb3:	xor    esi,DWORD PTR [edi*4+0x6402e168]
6400cfba:	mov    edi,DWORD PTR [esp+0x24]
6400cfbe:	mov    DWORD PTR [esp+0x28],esi
6400cfc2:	and    edi,0xff
6400cfc8:	xor    esi,DWORD PTR [edi*4+0x6402ed90]
6400cfcf:	movzx  edi,BYTE PTR [esp+0x25]
6400cfd4:	xor    esi,DWORD PTR [eax-0x4]
6400cfd7:	add    eax,0x4
6400cfda:	mov    DWORD PTR [esp+0x14],esi
6400cfde:	mov    esi,edx
6400cfe0:	shr    esi,0x10
6400cfe3:	and    esi,0xff
6400cfe9:	mov    esi,DWORD PTR [esi*4+0x6402e568]
6400cff0:	xor    esi,DWORD PTR [edi*4+0x6402e990]
6400cff7:	mov    edi,DWORD PTR [esp+0x10]
6400cffb:	shr    edi,0x18
6400cffe:	mov    DWORD PTR [esp+0x28],esi
6400d002:	xor    esi,DWORD PTR [edi*4+0x6402e168]
6400d009:	mov    edi,ecx
6400d00b:	and    edi,0xff
6400d011:	xor    esi,DWORD PTR [edi*4+0x6402ed90]
6400d018:	mov    edi,DWORD PTR [esp+0x24]
6400d01c:	xor    esi,DWORD PTR [eax-0x4]
6400d01f:	shr    edi,0x10
6400d022:	mov    DWORD PTR [esp+0x18],esi
6400d026:	movzx  esi,ch
6400d029:	mov    esi,DWORD PTR [esi*4+0x6402e990]
6400d030:	and    edi,0xff
6400d036:	xor    esi,DWORD PTR [edi*4+0x6402e568]
6400d03d:	mov    edi,edx
6400d03f:	shr    edi,0x18
6400d042:	xor    esi,DWORD PTR [edi*4+0x6402e168]
6400d049:	mov    edi,DWORD PTR [esp+0x10]
6400d04d:	mov    DWORD PTR [esp+0x28],esi
6400d051:	and    edi,0xff
6400d057:	xor    esi,DWORD PTR [edi*4+0x6402ed90]
6400d05e:	shr    ecx,0x10
6400d061:	xor    esi,DWORD PTR [eax]
6400d063:	and    ecx,0xff
6400d069:	mov    DWORD PTR [esp+0x28],esi
6400d06d:	movzx  esi,BYTE PTR [esp+0x11]
6400d072:	mov    ebx,DWORD PTR [esi*4+0x6402e990]
6400d079:	xor    ebx,DWORD PTR [ecx*4+0x6402e568]
6400d080:	mov    ecx,DWORD PTR [esp+0x24]
6400d084:	mov    edi,DWORD PTR [esp+0x28]
6400d088:	shr    ecx,0x18
6400d08b:	xor    ebx,DWORD PTR [ecx*4+0x6402e168]
6400d092:	mov    ecx,DWORD PTR [esp+0x18]
6400d096:	and    edx,0xff
6400d09c:	xor    ebx,DWORD PTR [edx*4+0x6402ed90]
6400d0a3:	add    eax,0x4
6400d0a6:	xor    ebx,DWORD PTR [eax]
6400d0a8:	add    eax,0x4
6400d0ab:	shr    ecx,0x18
6400d0ae:	mov    DWORD PTR [esp+0x1c],eax
6400d0b2:	xor    eax,eax
6400d0b4:	mov    ah,BYTE PTR [ecx+0x64030190]
6400d0ba:	mov    edx,edi
6400d0bc:	shr    edx,0x10
6400d0bf:	and    edx,0xff
6400d0c5:	movzx  edx,BYTE PTR [edx+0x64030190]
6400d0cc:	movzx  ecx,bh
6400d0cf:	movzx  ecx,BYTE PTR [ecx+0x64030190]
6400d0d6:	xor    edx,eax
6400d0d8:	shl    edx,0x8
6400d0db:	xor    edx,ecx
6400d0dd:	mov    ecx,DWORD PTR [esp+0x14]
6400d0e1:	and    ecx,0xff
6400d0e7:	movzx  ecx,BYTE PTR [ecx+0x64030190]
6400d0ee:	shl    edx,0x8
6400d0f1:	mov    DWORD PTR [esp+0x24],ebx
6400d0f5:	xor    edx,ecx
6400d0f7:	xor    ecx,ecx
6400d0f9:	shr    edi,0x18
6400d0fc:	mov    ch,BYTE PTR [edi+0x64030190]
6400d102:	mov    eax,DWORD PTR [esp+0x1c]
6400d106:	xor    edx,DWORD PTR [eax]
6400d108:	shr    ebx,0x10
6400d10b:	and    ebx,0xff
6400d111:	movzx  esi,BYTE PTR [ebx+0x64030190]
6400d118:	xor    esi,ecx
6400d11a:	mov    ecx,DWORD PTR [esp+0x14]
6400d11e:	shl    esi,0x8
6400d121:	movzx  edi,ch
6400d124:	movzx  edi,BYTE PTR [edi+0x64030190]
6400d12b:	xor    esi,edi
6400d12d:	mov    edi,DWORD PTR [esp+0x18]
6400d131:	shl    esi,0x8
6400d134:	and    edi,0xff
6400d13a:	movzx  edi,BYTE PTR [edi+0x64030190]
6400d141:	xor    esi,edi
6400d143:	xor    esi,DWORD PTR [eax+0x4]
6400d146:	shr    ecx,0x10
6400d149:	mov    DWORD PTR [esp+0x1c],esi
6400d14d:	and    ecx,0xff
6400d153:	movzx  esi,BYTE PTR [ecx+0x64030190]
6400d15a:	mov    ecx,DWORD PTR [esp+0x24]
6400d15e:	add    eax,0x4
6400d161:	shr    ecx,0x18
6400d164:	xor    ebx,ebx
6400d166:	mov    bh,BYTE PTR [ecx+0x64030190]
6400d16c:	mov    ecx,DWORD PTR [esp+0x18]
6400d170:	movzx  edi,ch
6400d173:	movzx  edi,BYTE PTR [edi+0x64030190]
6400d17a:	xor    esi,ebx
6400d17c:	shl    esi,0x8
6400d17f:	xor    esi,edi
6400d181:	mov    edi,DWORD PTR [esp+0x28]
6400d185:	shl    esi,0x8
6400d188:	and    edi,0xff
6400d18e:	movzx  edi,BYTE PTR [edi+0x64030190]
6400d195:	xor    esi,edi
6400d197:	xor    esi,DWORD PTR [eax+0x4]
6400d19a:	add    eax,0x4
6400d19d:	mov    DWORD PTR [esp+0x10],esi
6400d1a1:	mov    esi,DWORD PTR [esp+0x14]
6400d1a5:	shr    esi,0x18
6400d1a8:	shr    ecx,0x10
6400d1ab:	xor    ebx,ebx
6400d1ad:	mov    bh,BYTE PTR [esi+0x64030190]
6400d1b3:	movzx  esi,BYTE PTR [esp+0x29]
6400d1b8:	movzx  esi,BYTE PTR [esi+0x64030190]
6400d1bf:	and    ecx,0xff
6400d1c5:	movzx  ecx,BYTE PTR [ecx+0x64030190]
6400d1cc:	xor    ecx,ebx
6400d1ce:	shl    ecx,0x8
6400d1d1:	xor    ecx,esi
6400d1d3:	mov    esi,DWORD PTR [esp+0x24]
6400d1d7:	and    esi,0xff
6400d1dd:	movzx  esi,BYTE PTR [esi+0x64030190]
6400d1e4:	jmp    0x6400d67c
6400d1e9:	mov    edi,DWORD PTR [ebp+0x0]
6400d1ec:	sar    edi,1
6400d1ee:	sub    edi,0x1
6400d1f1:	test   edi,edi
6400d1f3:	mov    DWORD PTR [esp+0x1c],edi
6400d1f7:	jle    0x6400d433
6400d1fd:	lea    ecx,[ecx+0x0]
6400d200:	shr    esi,0x10
6400d203:	and    esi,0xff
6400d209:	mov    esi,DWORD PTR [esi*4+0x6402f590]
6400d210:	movzx  edi,ch
6400d213:	xor    esi,DWORD PTR [edi*4+0x6402f990]
6400d21a:	mov    edi,edx
6400d21c:	shr    edi,0x18
6400d21f:	xor    esi,DWORD PTR [edi*4+0x6402f190]
6400d226:	mov    edi,DWORD PTR [esp+0x24]
6400d22a:	mov    DWORD PTR [esp+0x28],esi
6400d22e:	and    edi,0xff
6400d234:	xor    esi,DWORD PTR [edi*4+0x6402fd90]
6400d23b:	movzx  edi,BYTE PTR [esp+0x11]
6400d240:	xor    esi,DWORD PTR [eax]
6400d242:	add    eax,0x4
6400d245:	mov    DWORD PTR [esp+0x14],esi
6400d249:	mov    esi,edx
6400d24b:	shr    esi,0x10
6400d24e:	and    esi,0xff
6400d254:	mov    esi,DWORD PTR [esi*4+0x6402f590]
6400d25b:	xor    esi,DWORD PTR [edi*4+0x6402f990]
6400d262:	mov    edi,DWORD PTR [esp+0x24]
6400d266:	mov    DWORD PTR [esp+0x28],esi
6400d26a:	shr    edi,0x18
6400d26d:	xor    esi,DWORD PTR [edi*4+0x6402f190]
6400d274:	mov    edi,ecx
6400d276:	and    edi,0xff
6400d27c:	xor    esi,DWORD PTR [edi*4+0x6402fd90]
6400d283:	mov    edi,DWORD PTR [esp+0x24]
6400d287:	xor    esi,DWORD PTR [eax]
6400d289:	shr    edi,0x10
6400d28c:	mov    DWORD PTR [esp+0x18],esi
6400d290:	and    edi,0xff
6400d296:	movzx  esi,dh
6400d299:	mov    esi,DWORD PTR [esi*4+0x6402f990]
6400d2a0:	xor    esi,DWORD PTR [edi*4+0x6402f590]
6400d2a7:	mov    edi,ecx
6400d2a9:	shr    edi,0x18
6400d2ac:	xor    esi,DWORD PTR [edi*4+0x6402f190]
6400d2b3:	mov    edi,DWORD PTR [esp+0x10]
6400d2b7:	mov    DWORD PTR [esp+0x28],esi
6400d2bb:	and    edi,0xff
6400d2c1:	xor    esi,DWORD PTR [edi*4+0x6402fd90]
6400d2c8:	add    eax,0x4
6400d2cb:	xor    esi,DWORD PTR [eax]
6400d2cd:	shr    ecx,0x10
6400d2d0:	mov    DWORD PTR [esp+0x28],esi
6400d2d4:	movzx  esi,BYTE PTR [esp+0x25]
6400d2d9:	and    ecx,0xff
6400d2df:	mov    ebx,DWORD PTR [ecx*4+0x6402f590]
6400d2e6:	xor    ebx,DWORD PTR [esi*4+0x6402f990]
6400d2ed:	mov    ecx,DWORD PTR [esp+0x10]
6400d2f1:	shr    ecx,0x18
6400d2f4:	xor    ebx,DWORD PTR [ecx*4+0x6402f190]
6400d2fb:	mov    ecx,DWORD PTR [esp+0x18]
6400d2ff:	and    edx,0xff
6400d305:	xor    ebx,DWORD PTR [edx*4+0x6402fd90]
6400d30c:	mov    edx,DWORD PTR [esp+0x28]
6400d310:	xor    ebx,DWORD PTR [eax+0x4]
6400d313:	add    eax,0x4
6400d316:	mov    esi,edx
6400d318:	shr    esi,0x10
6400d31b:	and    esi,0xff
6400d321:	mov    ebp,DWORD PTR [esi*4+0x6402f590]
6400d328:	movzx  edi,ch
6400d32b:	xor    ebp,DWORD PTR [edi*4+0x6402f990]
6400d332:	mov    esi,ebx
6400d334:	shr    esi,0x18
6400d337:	xor    ebp,DWORD PTR [esi*4+0x6402f190]
6400d33e:	mov    esi,DWORD PTR [esp+0x14]
6400d342:	mov    edi,esi
6400d344:	and    edi,0xff
6400d34a:	xor    ebp,DWORD PTR [edi*4+0x6402fd90]
6400d351:	add    eax,0x4
6400d354:	xor    ebp,DWORD PTR [eax]
6400d356:	mov    edi,ebx
6400d358:	shr    edi,0x10
6400d35b:	add    eax,0x4
6400d35e:	mov    DWORD PTR [esp+0x24],ebp
6400d362:	and    edi,0xff
6400d368:	movzx  edx,dh
6400d36b:	mov    edi,DWORD PTR [edi*4+0x6402f590]
6400d372:	xor    edi,DWORD PTR [edx*4+0x6402f990]
6400d379:	mov    edx,esi
6400d37b:	shr    edx,0x18
6400d37e:	xor    edi,DWORD PTR [edx*4+0x6402f190]
6400d385:	shr    esi,0x10
6400d388:	and    esi,0xff
6400d38e:	movzx  edx,bh
6400d391:	mov    edx,DWORD PTR [edx*4+0x6402f990]
6400d398:	xor    edx,DWORD PTR [esi*4+0x6402f590]
6400d39f:	mov    esi,DWORD PTR [esp+0x18]
6400d3a3:	shr    esi,0x18
6400d3a6:	xor    edx,DWORD PTR [esi*4+0x6402f190]
6400d3ad:	mov    esi,DWORD PTR [esp+0x28]
6400d3b1:	and    ecx,0xff
6400d3b7:	xor    edi,DWORD PTR [ecx*4+0x6402fd90]
6400d3be:	and    esi,0xff
6400d3c4:	xor    edi,DWORD PTR [eax]
6400d3c6:	xor    edx,DWORD PTR [esi*4+0x6402fd90]
6400d3cd:	mov    ecx,edi
6400d3cf:	xor    edx,DWORD PTR [eax+0x4]
6400d3d2:	mov    edi,DWORD PTR [esp+0x18]
6400d3d6:	add    eax,0x4
6400d3d9:	shr    edi,0x10
6400d3dc:	and    edi,0xff
6400d3e2:	mov    ebp,DWORD PTR [edi*4+0x6402f590]
6400d3e9:	mov    edi,DWORD PTR [esp+0x28]
6400d3ed:	mov    esi,edx
6400d3ef:	movzx  edx,BYTE PTR [esp+0x15]
6400d3f4:	xor    ebp,DWORD PTR [edx*4+0x6402f990]
6400d3fb:	shr    edi,0x18
6400d3fe:	xor    ebp,DWORD PTR [edi*4+0x6402f190]
6400d405:	mov    edi,DWORD PTR [esp+0x1c]
6400d409:	and    ebx,0xff
6400d40f:	xor    ebp,DWORD PTR [ebx*4+0x6402fd90]
6400d416:	add    eax,0x4
6400d419:	xor    ebp,DWORD PTR [eax]
6400d41b:	sub    edi,0x1
6400d41e:	add    eax,0x4
6400d421:	test   edi,edi
6400d423:	mov    DWORD PTR [esp+0x10],esi
6400d427:	mov    edx,ebp
6400d429:	mov    DWORD PTR [esp+0x1c],edi
6400d42d:	jg     0x6400d200
6400d433:	shr    esi,0x10
6400d436:	and    esi,0xff
6400d43c:	mov    esi,DWORD PTR [esi*4+0x6402f590]
6400d443:	movzx  edi,ch
6400d446:	xor    esi,DWORD PTR [edi*4+0x6402f990]
6400d44d:	mov    edi,edx
6400d44f:	shr    edi,0x18
6400d452:	xor    esi,DWORD PTR [edi*4+0x6402f190]
6400d459:	mov    edi,DWORD PTR [esp+0x24]
6400d45d:	mov    DWORD PTR [esp+0x28],esi
6400d461:	and    edi,0xff
6400d467:	xor    esi,DWORD PTR [edi*4+0x6402fd90]
6400d46e:	movzx  edi,BYTE PTR [esp+0x11]
6400d473:	xor    esi,DWORD PTR [eax]
6400d475:	add    eax,0x4
6400d478:	mov    DWORD PTR [esp+0x14],esi
6400d47c:	mov    esi,edx
6400d47e:	shr    esi,0x10
6400d481:	and    esi,0xff
6400d487:	mov    esi,DWORD PTR [esi*4+0x6402f590]
6400d48e:	xor    esi,DWORD PTR [edi*4+0x6402f990]
6400d495:	mov    edi,DWORD PTR [esp+0x24]
6400d499:	shr    edi,0x18
6400d49c:	mov    DWORD PTR [esp+0x28],esi
6400d4a0:	xor    esi,DWORD PTR [edi*4+0x6402f190]
6400d4a7:	mov    edi,ecx
6400d4a9:	and    edi,0xff
6400d4af:	xor    esi,DWORD PTR [edi*4+0x6402fd90]
6400d4b6:	mov    edi,DWORD PTR [esp+0x24]
6400d4ba:	xor    esi,DWORD PTR [eax]
6400d4bc:	shr    edi,0x10
6400d4bf:	mov    DWORD PTR [esp+0x18],esi
6400d4c3:	movzx  esi,dh
6400d4c6:	mov    esi,DWORD PTR [esi*4+0x6402f990]
6400d4cd:	and    edi,0xff
6400d4d3:	xor    esi,DWORD PTR [edi*4+0x6402f590]
6400d4da:	mov    edi,ecx
6400d4dc:	shr    edi,0x18
6400d4df:	xor    esi,DWORD PTR [edi*4+0x6402f190]
6400d4e6:	mov    edi,DWORD PTR [esp+0x10]
6400d4ea:	mov    DWORD PTR [esp+0x28],esi
6400d4ee:	and    edi,0xff
6400d4f4:	xor    esi,DWORD PTR [edi*4+0x6402fd90]
6400d4fb:	movzx  edi,BYTE PTR [esp+0x25]
6400d500:	xor    esi,DWORD PTR [eax+0x4]
6400d503:	shr    ecx,0x10
6400d506:	and    ecx,0xff
6400d50c:	add    eax,0x4
6400d50f:	mov    DWORD PTR [esp+0x28],esi
6400d513:	mov    esi,DWORD PTR [ecx*4+0x6402f590]
6400d51a:	xor    esi,DWORD PTR [edi*4+0x6402f990]
6400d521:	mov    ecx,DWORD PTR [esp+0x10]
6400d525:	and    edx,0xff
6400d52b:	shr    ecx,0x18
6400d52e:	xor    esi,DWORD PTR [ecx*4+0x6402f190]
6400d535:	add    eax,0x4
6400d538:	xor    esi,DWORD PTR [edx*4+0x6402fd90]
6400d53f:	mov    edx,DWORD PTR [esp+0x28]
6400d543:	xor    esi,DWORD PTR [eax]
6400d545:	shr    edx,0x10
6400d548:	and    edx,0xff
6400d54e:	movzx  edx,BYTE PTR [edx+0x6402e068]
6400d555:	mov    ecx,esi
6400d557:	shr    ecx,0x18
6400d55a:	xor    ebx,ebx
6400d55c:	mov    bh,BYTE PTR [ecx+0x6402e068]
6400d562:	movzx  ecx,BYTE PTR [esp+0x19]
6400d567:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400d56e:	xor    edx,ebx
6400d570:	shl    edx,0x8
6400d573:	xor    edx,ecx
6400d575:	mov    ecx,DWORD PTR [esp+0x14]
6400d579:	mov    edi,ecx
6400d57b:	and    edi,0xff
6400d581:	movzx  edi,BYTE PTR [edi+0x6402e068]
6400d588:	shl    edx,0x8
6400d58b:	add    eax,0x4
6400d58e:	xor    edx,edi
6400d590:	xor    edx,DWORD PTR [eax]
6400d592:	mov    DWORD PTR [esp+0x24],esi
6400d596:	add    eax,0x4
6400d599:	shr    esi,0x10
6400d59c:	and    esi,0xff
6400d5a2:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400d5a9:	shr    ecx,0x18
6400d5ac:	xor    ebx,ebx
6400d5ae:	mov    bh,BYTE PTR [ecx+0x6402e068]
6400d5b4:	movzx  ecx,BYTE PTR [esp+0x29]
6400d5b9:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400d5c0:	xor    esi,ebx
6400d5c2:	shl    esi,0x8
6400d5c5:	xor    esi,ecx
6400d5c7:	mov    ecx,DWORD PTR [esp+0x18]
6400d5cb:	mov    edi,ecx
6400d5cd:	shl    esi,0x8
6400d5d0:	and    edi,0xff
6400d5d6:	movzx  edi,BYTE PTR [edi+0x6402e068]
6400d5dd:	xor    esi,edi
6400d5df:	xor    esi,DWORD PTR [eax]
6400d5e1:	mov    edi,DWORD PTR [esp+0x28]
6400d5e5:	mov    DWORD PTR [esp+0x1c],esi
6400d5e9:	mov    esi,DWORD PTR [esp+0x14]
6400d5ed:	shr    ecx,0x18
6400d5f0:	shr    esi,0x10
6400d5f3:	and    esi,0xff
6400d5f9:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400d600:	xor    ebx,ebx
6400d602:	mov    bh,BYTE PTR [ecx+0x6402e068]
6400d608:	movzx  ecx,BYTE PTR [esp+0x25]
6400d60d:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400d614:	xor    esi,ebx
6400d616:	shl    esi,0x8
6400d619:	xor    esi,ecx
6400d61b:	mov    ecx,edi
6400d61d:	and    ecx,0xff
6400d623:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400d62a:	shl    esi,0x8
6400d62d:	xor    esi,ecx
6400d62f:	xor    esi,DWORD PTR [eax+0x4]
6400d632:	mov    ecx,DWORD PTR [esp+0x18]
6400d636:	shr    ecx,0x10
6400d639:	xor    ebx,ebx
6400d63b:	add    eax,0x4
6400d63e:	shr    edi,0x18
6400d641:	mov    bh,BYTE PTR [edi+0x6402e068]
6400d647:	and    ecx,0xff
6400d64d:	movzx  ecx,BYTE PTR [ecx+0x6402e068]
6400d654:	mov    DWORD PTR [esp+0x10],esi
6400d658:	movzx  esi,BYTE PTR [esp+0x15]
6400d65d:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400d664:	xor    ecx,ebx
6400d666:	shl    ecx,0x8
6400d669:	xor    ecx,esi
6400d66b:	mov    esi,DWORD PTR [esp+0x24]
6400d66f:	and    esi,0xff
6400d675:	movzx  esi,BYTE PTR [esi+0x6402e068]
6400d67c:	shl    ecx,0x8
6400d67f:	xor    ecx,esi
6400d681:	xor    ecx,DWORD PTR [eax+0x4]
6400d684:	mov    esi,DWORD PTR [esp+0x2c]
6400d688:	mov    eax,edx
6400d68a:	shr    eax,0x8
6400d68d:	mov    BYTE PTR [esi+0x1],al
6400d690:	mov    eax,edx
6400d692:	mov    BYTE PTR [esi],dl
6400d694:	shr    edx,0x18
6400d697:	shr    eax,0x10
6400d69a:	mov    BYTE PTR [esi+0x3],dl
6400d69d:	mov    BYTE PTR [esi+0x2],al
6400d6a0:	mov    eax,DWORD PTR [esp+0x1c]
6400d6a4:	mov    edx,eax
6400d6a6:	shr    edx,0x8
6400d6a9:	mov    BYTE PTR [esi+0x5],dl
6400d6ac:	mov    BYTE PTR [esi+0x4],al
6400d6af:	mov    edx,eax
6400d6b1:	shr    edx,0x10
6400d6b4:	shr    eax,0x18
6400d6b7:	mov    BYTE PTR [esi+0x6],dl
6400d6ba:	mov    BYTE PTR [esi+0x7],al
6400d6bd:	mov    eax,DWORD PTR [esp+0x10]
6400d6c1:	mov    edx,eax
6400d6c3:	shr    edx,0x8
6400d6c6:	mov    BYTE PTR [esi+0x9],dl
6400d6c9:	mov    edx,eax
6400d6cb:	mov    BYTE PTR [esi+0x8],al
6400d6ce:	shr    edx,0x10
6400d6d1:	shr    eax,0x18
6400d6d4:	mov    BYTE PTR [esi+0xa],dl
6400d6d7:	mov    BYTE PTR [esi+0xb],al
6400d6da:	mov    eax,ecx
6400d6dc:	mov    edx,ecx
6400d6de:	mov    BYTE PTR [esi+0xc],cl
6400d6e1:	shr    eax,0x8
6400d6e4:	shr    edx,0x10
6400d6e7:	pop    edi
6400d6e8:	shr    ecx,0x18
6400d6eb:	mov    BYTE PTR [esi+0xd],al
6400d6ee:	mov    BYTE PTR [esi+0xe],dl
6400d6f1:	mov    BYTE PTR [esi+0xf],cl
6400d6f4:	pop    esi
6400d6f5:	pop    ebp
6400d6f6:	pop    ebx
6400d6f7:	add    esp,0x10
6400d6fa:	ret    
6400d6fb:	int3   
6400d6fc:	int3   
6400d6fd:	int3   
6400d6fe:	int3   
6400d6ff:	int3   
6400d700:	sub    esp,0x30
6400d703:	mov    eax,ds:0x6402c09c
6400d708:	xor    eax,esp
6400d70a:	mov    DWORD PTR [esp+0x2c],eax
6400d70e:	cmp    DWORD PTR [esp+0x38],0x0
6400d713:	mov    eax,DWORD PTR [esp+0x34]
6400d717:	push   ebx
6400d718:	push   ebp
6400d719:	mov    ebp,DWORD PTR [esp+0x44]
6400d71d:	push   esi
6400d71e:	mov    esi,DWORD PTR [esp+0x4c]
6400d722:	push   edi
6400d723:	mov    edi,edx
6400d725:	mov    DWORD PTR [esp+0x24],eax
6400d729:	jne    0x6400d7e7
6400d72f:	test   ecx,ecx
6400d731:	jle    0x6400d8c6
6400d737:	lea    eax,[ecx-0x1]
6400d73a:	mov    ebx,ebp
6400d73c:	shr    eax,0x4
6400d73f:	sub    ebx,esi
6400d741:	add    eax,0x1
6400d744:	mov    DWORD PTR [esp+0x10],eax
6400d748:	mov    edx,DWORD PTR [edi+0x4]
6400d74b:	mov    ecx,DWORD PTR [edi]
6400d74d:	mov    eax,DWORD PTR [edi+0x8]
6400d750:	push   esi
6400d751:	mov    DWORD PTR [esp+0x34],edx
6400d755:	mov    edx,DWORD PTR [esp+0x28]
6400d759:	mov    DWORD PTR [esp+0x30],ecx
6400d75d:	mov    ecx,DWORD PTR [edi+0xc]
6400d760:	mov    DWORD PTR [esp+0x38],eax
6400d764:	push   0x0
6400d766:	push   edx
6400d767:	mov    eax,edi
6400d769:	mov    DWORD PTR [esp+0x44],ecx
6400d76d:	call   0x6400ccb0
6400d772:	mov    eax,esi
6400d774:	add    esp,0xc
6400d777:	lea    ecx,[ebp+0x2]
6400d77a:	mov    esi,0x4
6400d77f:	nop
6400d780:	movzx  edx,BYTE PTR [ebx+eax*1]
6400d784:	xor    BYTE PTR [eax],dl
6400d786:	movzx  edx,BYTE PTR [ecx-0x1]
6400d78a:	xor    BYTE PTR [eax+0x1],dl
6400d78d:	movzx  edx,BYTE PTR [ecx]
6400d790:	xor    BYTE PTR [eax+0x2],dl
6400d793:	movzx  edx,BYTE PTR [ecx+0x1]
6400d797:	xor    BYTE PTR [eax+0x3],dl
6400d79a:	add    eax,0x4
6400d79d:	add    ecx,0x4
6400d7a0:	sub    esi,0x1
6400d7a3:	jne    0x6400d780
6400d7a5:	mov    ecx,DWORD PTR [esp+0x2c]
6400d7a9:	mov    edx,DWORD PTR [esp+0x30]
6400d7ad:	mov    DWORD PTR [ebp+0x0],ecx
6400d7b0:	mov    ecx,DWORD PTR [esp+0x34]
6400d7b4:	mov    DWORD PTR [ebp+0x4],edx
6400d7b7:	mov    edx,DWORD PTR [esp+0x38]
6400d7bb:	add    edi,0x10
6400d7be:	sub    ebx,0x10
6400d7c1:	sub    DWORD PTR [esp+0x10],0x1
6400d7c6:	mov    DWORD PTR [ebp+0x8],ecx
6400d7c9:	mov    DWORD PTR [ebp+0xc],edx
6400d7cc:	mov    esi,eax
6400d7ce:	jne    0x6400d748
6400d7d4:	pop    edi
6400d7d5:	pop    esi
6400d7d6:	pop    ebp
6400d7d7:	pop    ebx
6400d7d8:	mov    ecx,DWORD PTR [esp+0x2c]
6400d7dc:	xor    ecx,esp
6400d7de:	call   0x6401257c
6400d7e3:	add    esp,0x30
6400d7e6:	ret    
6400d7e7:	test   ecx,ecx
6400d7e9:	jle    0x6400d8c6
6400d7ef:	mov    eax,ebp
6400d7f1:	sub    eax,esi
6400d7f3:	mov    DWORD PTR [esp+0x10],eax
6400d7f7:	mov    eax,ebp
6400d7f9:	sub    eax,edi
6400d7fb:	mov    DWORD PTR [esp+0x14],eax
6400d7ff:	lea    eax,[ecx-0x1]
6400d802:	shr    eax,0x4
6400d805:	add    eax,0x1
6400d808:	mov    DWORD PTR [esp+0x1c],eax
6400d80c:	lea    esp,[esp+0x0]
6400d810:	lea    eax,[ebp+0x3]
6400d813:	mov    edx,esi
6400d815:	sub    edx,edi
6400d817:	mov    DWORD PTR [esp+0x20],eax
6400d81b:	lea    ecx,[esi+0x1]
6400d81e:	mov    eax,edi
6400d820:	mov    DWORD PTR [esp+0x28],edx
6400d824:	mov    DWORD PTR [esp+0x18],0x4
6400d82c:	jmp    0x6400d834
6400d82e:	mov    edi,edi
6400d830:	mov    edx,DWORD PTR [esp+0x28]
6400d834:	mov    ebx,DWORD PTR [esp+0x14]
6400d838:	movzx  ebx,BYTE PTR [eax+ebx*1]
6400d83c:	xor    bl,BYTE PTR [eax]
6400d83e:	add    eax,0x4
6400d841:	mov    BYTE PTR [edx+eax*1-0x4],bl
6400d845:	mov    edx,DWORD PTR [esp+0x10]
6400d849:	mov    dl,BYTE PTR [ecx+edx*1]
6400d84c:	xor    dl,BYTE PTR [eax-0x3]
6400d84f:	add    ecx,0x4
6400d852:	mov    BYTE PTR [ecx-0x4],dl
6400d855:	movzx  ebx,BYTE PTR [eax-0x2]
6400d859:	mov    edx,DWORD PTR [esp+0x20]
6400d85d:	xor    bl,BYTE PTR [edx-0x1]
6400d860:	add    edx,0x4
6400d863:	mov    BYTE PTR [ecx-0x3],bl
6400d866:	movzx  ebx,BYTE PTR [eax-0x1]
6400d86a:	xor    bl,BYTE PTR [edx-0x4]
6400d86d:	mov    DWORD PTR [esp+0x20],edx
6400d871:	mov    BYTE PTR [ecx-0x2],bl
6400d874:	mov    ebx,0x1
6400d879:	sub    DWORD PTR [esp+0x18],ebx
6400d87d:	jne    0x6400d830
6400d87f:	mov    eax,DWORD PTR [esp+0x48]
6400d883:	mov    ecx,DWORD PTR [esp+0x24]
6400d887:	push   esi
6400d888:	push   eax
6400d889:	push   ecx
6400d88a:	mov    eax,esi
6400d88c:	call   0x6400ccb0
6400d891:	mov    edx,DWORD PTR [esi]
6400d893:	mov    DWORD PTR [ebp+0x0],edx
6400d896:	mov    eax,DWORD PTR [esi+0x4]
6400d899:	mov    DWORD PTR [ebp+0x4],eax
6400d89c:	mov    ecx,DWORD PTR [esi+0x8]
6400d89f:	mov    eax,0x10
6400d8a4:	sub    DWORD PTR [esp+0x20],eax
6400d8a8:	sub    DWORD PTR [esp+0x1c],eax
6400d8ac:	mov    DWORD PTR [ebp+0x8],ecx
6400d8af:	mov    edx,DWORD PTR [esi+0xc]
6400d8b2:	add    esp,0xc
6400d8b5:	add    edi,eax
6400d8b7:	add    esi,eax
6400d8b9:	sub    DWORD PTR [esp+0x1c],ebx
6400d8bd:	mov    DWORD PTR [ebp+0xc],edx
6400d8c0:	jne    0x6400d810
6400d8c6:	mov    ecx,DWORD PTR [esp+0x3c]
6400d8ca:	pop    edi
6400d8cb:	pop    esi
6400d8cc:	pop    ebp
6400d8cd:	pop    ebx
6400d8ce:	xor    ecx,esp
6400d8d0:	call   0x6401257c
6400d8d5:	add    esp,0x30
6400d8d8:	ret    
6400d8d9:	int3   
6400d8da:	int3   
6400d8db:	int3   
6400d8dc:	int3   
6400d8dd:	int3   
6400d8de:	int3   
6400d8df:	int3   
6400d8e0:	push   0xffffffff
6400d8e2:	push   0x64021f6b
6400d8e7:	mov    eax,fs:0x0
6400d8ed:	push   eax
6400d8ee:	sub    esp,0x138
6400d8f4:	mov    eax,ds:0x6402c09c
6400d8f9:	xor    eax,esp
6400d8fb:	mov    DWORD PTR [esp+0x134],eax
6400d902:	push   ebp
6400d903:	push   esi
6400d904:	push   edi
6400d905:	mov    eax,ds:0x6402c09c
6400d90a:	xor    eax,esp
6400d90c:	push   eax
6400d90d:	lea    eax,[esp+0x148]
6400d914:	mov    fs:0x0,eax
6400d91a:	mov    ebp,DWORD PTR [esp+0x15c]
6400d921:	mov    eax,DWORD PTR [esp+0x158]
6400d928:	mov    DWORD PTR [esp+0x14],eax
6400d92c:	lea    esi,[ebp+0x8]
6400d92f:	mov    eax,esi
6400d931:	and    eax,0xf
6400d934:	mov    DWORD PTR [esp+0x18],ecx
6400d938:	mov    DWORD PTR [esp+0x10],0x0
6400d940:	je     0x6400d94b
6400d942:	mov    edx,0x10
6400d947:	sub    edx,eax
6400d949:	add    esi,edx
6400d94b:	push   esi
6400d94c:	call   0x64011d1d
6400d951:	mov    edi,eax
6400d953:	mov    DWORD PTR [esp+0x14],edi
6400d957:	push   esi
6400d958:	mov    DWORD PTR [esp+0x158],0x0
6400d963:	call   0x64011d1d
6400d968:	push   esi
6400d969:	push   0x0
6400d96b:	push   edi
6400d96c:	mov    DWORD PTR [ebx],eax
6400d96e:	call   0x64012c00
6400d973:	mov    eax,DWORD PTR [esp+0x28]
6400d977:	push   ebp
6400d978:	push   eax
6400d979:	lea    ecx,[edi+0x8]
6400d97c:	mov    DWORD PTR [edi],0x52514f4b
6400d982:	push   ecx
6400d983:	mov    DWORD PTR [edi+0x4],ebp
6400d986:	call   0x64013f20
6400d98b:	xor    eax,eax
6400d98d:	mov    DWORD PTR [esp+0x154],eax
6400d994:	mov    DWORD PTR [esp+0x158],eax
6400d99b:	mov    DWORD PTR [esp+0x15c],eax
6400d9a2:	mov    DWORD PTR [esp+0x160],eax
6400d9a9:	lea    eax,[esp+0x3c]
6400d9ad:	call   0x6400c5c0
6400d9b2:	mov    eax,DWORD PTR [ebx]
6400d9b4:	push   eax
6400d9b5:	lea    edx,[esp+0x158]
6400d9bc:	push   edx
6400d9bd:	lea    eax,[esp+0x44]
6400d9c1:	push   0x1
6400d9c3:	push   eax
6400d9c4:	mov    edx,edi
6400d9c6:	mov    ecx,esi
6400d9c8:	call   0x6400d700
6400d9cd:	mov    ecx,DWORD PTR [esp+0x48]
6400d9d1:	push   0x0
6400d9d3:	mov    DWORD PTR [ecx],esi
6400d9d5:	call   0x64011d22
6400d9da:	push   edi
6400d9db:	call   0x64011d22
6400d9e0:	add    esp,0x38
6400d9e3:	mov    eax,ebx
6400d9e5:	mov    ecx,DWORD PTR [esp+0x148]
6400d9ec:	mov    DWORD PTR fs:0x0,ecx
6400d9f3:	pop    ecx
6400d9f4:	pop    edi
6400d9f5:	pop    esi
6400d9f6:	pop    ebp
6400d9f7:	mov    ecx,DWORD PTR [esp+0x134]
6400d9fe:	xor    ecx,esp
6400da00:	call   0x6401257c
6400da05:	add    esp,0x144
6400da0b:	ret    
6400da0c:	int3   
6400da0d:	int3   
6400da0e:	int3   
6400da0f:	int3   
6400da10:	sub    esp,0x13c
6400da16:	mov    eax,ds:0x6402c09c
6400da1b:	xor    eax,esp
6400da1d:	mov    DWORD PTR [esp+0x134],eax
6400da24:	mov    eax,DWORD PTR [esp+0x144]
6400da2b:	push   ebp
6400da2c:	mov    ebp,DWORD PTR [esp+0x144]
6400da33:	mov    DWORD PTR [esp+0x8],eax
6400da37:	xor    eax,eax
6400da39:	test   bl,0xf
6400da3c:	push   esi
6400da3d:	mov    DWORD PTR [esp+0x8],eax
6400da41:	je     0x6400da4f
6400da43:	mov    DWORD PTR [esp+0x8],eax
6400da47:	mov    DWORD PTR [edi],eax
6400da49:	push   eax
6400da4a:	jmp    0x6400daef
6400da4f:	push   ebx
6400da50:	call   0x64011d1d
6400da55:	mov    esi,eax
6400da57:	xor    eax,eax
6400da59:	mov    DWORD PTR [esp+0x130],eax
6400da60:	mov    DWORD PTR [esp+0x134],eax
6400da67:	mov    DWORD PTR [esp+0x138],eax
6400da6e:	mov    DWORD PTR [esp+0x13c],eax
6400da75:	add    esp,0x4
6400da78:	lea    eax,[esp+0x10]
6400da7c:	call   0x6400cad0
6400da81:	push   esi
6400da82:	lea    ecx,[esp+0x130]
6400da89:	push   ecx
6400da8a:	lea    edx,[esp+0x18]
6400da8e:	push   0x0
6400da90:	push   edx
6400da91:	mov    edx,ebp
6400da93:	mov    ecx,ebx
6400da95:	call   0x6400d700
6400da9a:	add    esp,0x10
6400da9d:	cmp    DWORD PTR [esi],0x52534f4b
6400daa3:	je     0x6400daca
6400daa5:	push   0x0
6400daa7:	mov    DWORD PTR [esp+0xc],0x0
6400daaf:	mov    DWORD PTR [edi],0x0
6400dab5:	call   0x64011d22
6400daba:	add    esp,0x4
6400dabd:	push   0x0
6400dabf:	call   0x64011d22
6400dac4:	add    esp,0x4
6400dac7:	push   esi
6400dac8:	jmp    0x6400daef
6400daca:	mov    eax,DWORD PTR [esi+0x4]
6400dacd:	mov    ecx,DWORD PTR [esp+0xc]
6400dad1:	push   eax
6400dad2:	lea    edx,[esi+0x8]
6400dad5:	push   edx
6400dad6:	push   esi
6400dad7:	mov    DWORD PTR [ecx],eax
6400dad9:	call   0x64013540
6400dade:	add    esp,0xc
6400dae1:	push   0x0
6400dae3:	mov    DWORD PTR [edi],esi
6400dae5:	call   0x64011d22
6400daea:	add    esp,0x4
6400daed:	push   0x0
6400daef:	call   0x64011d22
6400daf4:	mov    ecx,DWORD PTR [esp+0x140]
6400dafb:	add    esp,0x4
6400dafe:	pop    esi
6400daff:	pop    ebp
6400db00:	xor    ecx,esp
6400db02:	mov    eax,edi
6400db04:	call   0x6401257c
6400db09:	add    esp,0x13c
6400db0f:	ret    
6400db10:	push   esi
6400db11:	push   0x0
6400db13:	push   0x1
6400db15:	push   0x64030298
6400db1a:	call   DWORD PTR ds:0x6402408c
6400db20:	test   eax,eax
6400db22:	jne    0x6400db7c
6400db24:	push   0x64028180
6400db29:	push   0xc
6400db2b:	push   0x640281a4
6400db30:	call   0x64006890
6400db35:	push   0x640281b4
6400db3a:	push   0x8
6400db3c:	push   0x640281f4
6400db41:	mov    esi,eax
6400db43:	call   0x64006b80
6400db48:	add    esp,0x18
6400db4b:	push   eax
6400db4c:	call   DWORD PTR ds:0x64024018
6400db52:	add    DWORD PTR ds:0x6402d37c,0x1
6400db59:	test   eax,eax
6400db5b:	je     0x6400db73
6400db5d:	push   esi
6400db5e:	push   eax
6400db5f:	call   DWORD PTR ds:0x64024014
6400db65:	add    DWORD PTR ds:0x6402d380,0x1
6400db6c:	mov    ds:0x64030374,eax
6400db71:	pop    esi
6400db72:	ret    
6400db73:	xor    eax,eax
6400db75:	mov    ds:0x64030374,eax
6400db7a:	pop    esi
6400db7b:	ret    
6400db7c:	mov    eax,ds:0x64030374
6400db81:	pop    esi
6400db82:	ret    
6400db83:	int3   
6400db84:	int3   
6400db85:	int3   
6400db86:	int3   
6400db87:	int3   
6400db88:	int3   
6400db89:	int3   
6400db8a:	int3   
6400db8b:	int3   
6400db8c:	int3   
6400db8d:	int3   
6400db8e:	int3   
6400db8f:	int3   
6400db90:	push   ebp
6400db91:	mov    ebp,esp
6400db93:	and    esp,0xfffffff8
6400db96:	push   ecx
6400db97:	push   esi
6400db98:	push   0x0
6400db9a:	push   0x1
6400db9c:	push   0x6403029c
6400dba1:	call   DWORD PTR ds:0x6402408c
6400dba7:	test   eax,eax
6400dba9:	jne    0x6400dc09
6400dbab:	push   0x64028208
6400dbb0:	push   0xe
6400dbb2:	push   0x64028240
6400dbb7:	call   0x64006890
6400dbbc:	push   0x64028250
6400dbc1:	push   0x8
6400dbc3:	push   0x640281f4
6400dbc8:	mov    esi,eax
6400dbca:	call   0x64006b80
6400dbcf:	add    esp,0x18
6400dbd2:	push   eax
6400dbd3:	call   DWORD PTR ds:0x64024018
6400dbd9:	add    DWORD PTR ds:0x6402d37c,0x1
6400dbe0:	test   eax,eax
6400dbe2:	je     0x6400dbfd
6400dbe4:	push   esi
6400dbe5:	push   eax
6400dbe6:	call   DWORD PTR ds:0x64024014
6400dbec:	add    DWORD PTR ds:0x6402d380,0x1
6400dbf3:	mov    ds:0x64030378,eax
6400dbf8:	pop    esi
6400dbf9:	mov    esp,ebp
6400dbfb:	pop    ebp
6400dbfc:	ret    
6400dbfd:	xor    eax,eax
6400dbff:	mov    ds:0x64030378,eax
6400dc04:	pop    esi
6400dc05:	mov    esp,ebp
6400dc07:	pop    ebp
6400dc08:	ret    
6400dc09:	mov    eax,ds:0x64030378
6400dc0e:	pop    esi
6400dc0f:	mov    esp,ebp
6400dc11:	pop    ebp
6400dc12:	ret    
6400dc13:	int3   
6400dc14:	int3   
6400dc15:	int3   
6400dc16:	int3   
6400dc17:	int3   
6400dc18:	int3   
6400dc19:	int3   
6400dc1a:	int3   
6400dc1b:	int3   
6400dc1c:	int3   
6400dc1d:	int3   
6400dc1e:	int3   
6400dc1f:	int3   
6400dc20:	push   ebp
6400dc21:	mov    ebp,esp
6400dc23:	and    esp,0xfffffff8
6400dc26:	push   ecx
6400dc27:	push   esi
6400dc28:	push   0x0
6400dc2a:	push   0x1
6400dc2c:	push   0x640302a0
6400dc31:	call   DWORD PTR ds:0x6402408c
6400dc37:	test   eax,eax
6400dc39:	jne    0x6400dc99
6400dc3b:	push   0x6402828c
6400dc40:	push   0xf
6400dc42:	push   0x640282b0
6400dc47:	call   0x64006890
6400dc4c:	push   0x640282c0
6400dc51:	push   0x8
6400dc53:	push   0x640281f4
6400dc58:	mov    esi,eax
6400dc5a:	call   0x64006b80
6400dc5f:	add    esp,0x18
6400dc62:	push   eax
6400dc63:	call   DWORD PTR ds:0x64024018
6400dc69:	add    DWORD PTR ds:0x6402d37c,0x1
6400dc70:	test   eax,eax
6400dc72:	je     0x6400dc8d
6400dc74:	push   esi
6400dc75:	push   eax
6400dc76:	call   DWORD PTR ds:0x64024014
6400dc7c:	add    DWORD PTR ds:0x6402d380,0x1
6400dc83:	mov    ds:0x6403037c,eax
6400dc88:	pop    esi
6400dc89:	mov    esp,ebp
6400dc8b:	pop    ebp
6400dc8c:	ret    
6400dc8d:	xor    eax,eax
6400dc8f:	mov    ds:0x6403037c,eax
6400dc94:	pop    esi
6400dc95:	mov    esp,ebp
6400dc97:	pop    ebp
6400dc98:	ret    
6400dc99:	mov    eax,ds:0x6403037c
6400dc9e:	pop    esi
6400dc9f:	mov    esp,ebp
6400dca1:	pop    ebp
6400dca2:	ret    
6400dca3:	int3   
6400dca4:	int3   
6400dca5:	int3   
6400dca6:	int3   
6400dca7:	int3   
6400dca8:	int3   
6400dca9:	int3   
6400dcaa:	int3   
6400dcab:	int3   
6400dcac:	int3   
6400dcad:	int3   
6400dcae:	int3   
6400dcaf:	int3   
6400dcb0:	push   ebp
6400dcb1:	mov    ebp,esp
6400dcb3:	and    esp,0xfffffff8
6400dcb6:	push   ecx
6400dcb7:	push   esi
6400dcb8:	push   0x0
6400dcba:	push   0x1
6400dcbc:	push   0x640302a4
6400dcc1:	call   DWORD PTR ds:0x6402408c
6400dcc7:	test   eax,eax
6400dcc9:	jne    0x6400dd29
6400dccb:	push   0x640282e4
6400dcd0:	push   0xf
6400dcd2:	push   0x64028318
6400dcd7:	call   0x64006890
6400dcdc:	push   0x64028328
6400dce1:	push   0x8
6400dce3:	push   0x640281f4
6400dce8:	mov    esi,eax
6400dcea:	call   0x64006b80
6400dcef:	add    esp,0x18
6400dcf2:	push   eax
6400dcf3:	call   DWORD PTR ds:0x64024018
6400dcf9:	add    DWORD PTR ds:0x6402d37c,0x1
6400dd00:	test   eax,eax
6400dd02:	je     0x6400dd1d
6400dd04:	push   esi
6400dd05:	push   eax
6400dd06:	call   DWORD PTR ds:0x64024014
6400dd0c:	add    DWORD PTR ds:0x6402d380,0x1
6400dd13:	mov    ds:0x64030380,eax
6400dd18:	pop    esi
6400dd19:	mov    esp,ebp
6400dd1b:	pop    ebp
6400dd1c:	ret    
6400dd1d:	xor    eax,eax
6400dd1f:	mov    ds:0x64030380,eax
6400dd24:	pop    esi
6400dd25:	mov    esp,ebp
6400dd27:	pop    ebp
6400dd28:	ret    
6400dd29:	mov    eax,ds:0x64030380
6400dd2e:	pop    esi
6400dd2f:	mov    esp,ebp
6400dd31:	pop    ebp
6400dd32:	ret    
6400dd33:	int3   
6400dd34:	int3   
6400dd35:	int3   
6400dd36:	int3   
6400dd37:	int3   
6400dd38:	int3   
6400dd39:	int3   
6400dd3a:	int3   
6400dd3b:	int3   
6400dd3c:	int3   
6400dd3d:	int3   
6400dd3e:	int3   
6400dd3f:	int3   
6400dd40:	push   ebp
6400dd41:	mov    ebp,esp
6400dd43:	and    esp,0xfffffff8
6400dd46:	push   ecx
6400dd47:	push   esi
6400dd48:	push   0x0
6400dd4a:	push   0x1
6400dd4c:	push   0x640302a8
6400dd51:	call   DWORD PTR ds:0x6402408c
6400dd57:	test   eax,eax
6400dd59:	jne    0x6400ddb9
6400dd5b:	push   0x64028354
6400dd60:	push   0x13
6400dd62:	push   0x64028390
6400dd67:	call   0x64006890
6400dd6c:	push   0x640283a4
6400dd71:	push   0x8
6400dd73:	push   0x640283d4
6400dd78:	mov    esi,eax
6400dd7a:	call   0x64006b80
6400dd7f:	add    esp,0x18
6400dd82:	push   eax
6400dd83:	call   DWORD PTR ds:0x64024018
6400dd89:	add    DWORD PTR ds:0x6402d37c,0x1
6400dd90:	test   eax,eax
6400dd92:	je     0x6400ddad
6400dd94:	push   esi
6400dd95:	push   eax
6400dd96:	call   DWORD PTR ds:0x64024014
6400dd9c:	add    DWORD PTR ds:0x6402d380,0x1
6400dda3:	mov    ds:0x64030384,eax
6400dda8:	pop    esi
6400dda9:	mov    esp,ebp
6400ddab:	pop    ebp
6400ddac:	ret    
6400ddad:	xor    eax,eax
6400ddaf:	mov    ds:0x64030384,eax
6400ddb4:	pop    esi
6400ddb5:	mov    esp,ebp
6400ddb7:	pop    ebp
6400ddb8:	ret    
6400ddb9:	mov    eax,ds:0x64030384
6400ddbe:	pop    esi
6400ddbf:	mov    esp,ebp
6400ddc1:	pop    ebp
6400ddc2:	ret    
6400ddc3:	int3   
6400ddc4:	int3   
6400ddc5:	int3   
6400ddc6:	int3   
6400ddc7:	int3   
6400ddc8:	int3   
6400ddc9:	int3   
6400ddca:	int3   
6400ddcb:	int3   
6400ddcc:	int3   
6400ddcd:	int3   
6400ddce:	int3   
6400ddcf:	int3   
6400ddd0:	push   ebp
6400ddd1:	mov    ebp,esp
6400ddd3:	and    esp,0xfffffff8
6400ddd6:	push   ecx
6400ddd7:	push   esi
6400ddd8:	push   0x0
6400ddda:	push   0x1
6400dddc:	push   0x640302ac
6400dde1:	call   DWORD PTR ds:0x6402408c
6400dde7:	test   eax,eax
6400dde9:	jne    0x6400de49
6400ddeb:	push   0x640283e8
6400ddf0:	push   0xe
6400ddf2:	push   0x6402841c
6400ddf7:	call   0x64006890
6400ddfc:	push   0x6402842c
6400de01:	push   0x8
6400de03:	push   0x640283d4
6400de08:	mov    esi,eax
6400de0a:	call   0x64006b80
6400de0f:	add    esp,0x18
6400de12:	push   eax
6400de13:	call   DWORD PTR ds:0x64024018
6400de19:	add    DWORD PTR ds:0x6402d37c,0x1
6400de20:	test   eax,eax
6400de22:	je     0x6400de3d
6400de24:	push   esi
6400de25:	push   eax
6400de26:	call   DWORD PTR ds:0x64024014
6400de2c:	add    DWORD PTR ds:0x6402d380,0x1
6400de33:	mov    ds:0x64030388,eax
6400de38:	pop    esi
6400de39:	mov    esp,ebp
6400de3b:	pop    ebp
6400de3c:	ret    
6400de3d:	xor    eax,eax
6400de3f:	mov    ds:0x64030388,eax
6400de44:	pop    esi
6400de45:	mov    esp,ebp
6400de47:	pop    ebp
6400de48:	ret    
6400de49:	mov    eax,ds:0x64030388
6400de4e:	pop    esi
6400de4f:	mov    esp,ebp
6400de51:	pop    ebp
6400de52:	ret    
6400de53:	int3   
6400de54:	int3   
6400de55:	int3   
6400de56:	int3   
6400de57:	int3   
6400de58:	int3   
6400de59:	int3   
6400de5a:	int3   
6400de5b:	int3   
6400de5c:	int3   
6400de5d:	int3   
6400de5e:	int3   
6400de5f:	int3   
6400de60:	push   ebp
6400de61:	mov    ebp,esp
6400de63:	and    esp,0xfffffff8
6400de66:	push   ecx
6400de67:	push   esi
6400de68:	push   0x0
6400de6a:	push   0x1
6400de6c:	push   0x640302b0
6400de71:	call   DWORD PTR ds:0x6402408c
6400de77:	test   eax,eax
6400de79:	jne    0x6400ded9
6400de7b:	push   0x64028460
6400de80:	push   0xb
6400de82:	push   0x64028488
6400de87:	call   0x64006890
6400de8c:	push   0x64028494
6400de91:	push   0x8
6400de93:	push   0x640283d4
6400de98:	mov    esi,eax
6400de9a:	call   0x64006b80
6400de9f:	add    esp,0x18
6400dea2:	push   eax
6400dea3:	call   DWORD PTR ds:0x64024018
6400dea9:	add    DWORD PTR ds:0x6402d37c,0x1
6400deb0:	test   eax,eax
6400deb2:	je     0x6400decd
6400deb4:	push   esi
6400deb5:	push   eax
6400deb6:	call   DWORD PTR ds:0x64024014
6400debc:	add    DWORD PTR ds:0x6402d380,0x1
6400dec3:	mov    ds:0x6403038c,eax
6400dec8:	pop    esi
6400dec9:	mov    esp,ebp
6400decb:	pop    ebp
6400decc:	ret    
6400decd:	xor    eax,eax
6400decf:	mov    ds:0x6403038c,eax
6400ded4:	pop    esi
6400ded5:	mov    esp,ebp
6400ded7:	pop    ebp
6400ded8:	ret    
6400ded9:	mov    eax,ds:0x6403038c
6400dede:	pop    esi
6400dedf:	mov    esp,ebp
6400dee1:	pop    ebp
6400dee2:	ret    
6400dee3:	int3   
6400dee4:	int3   
6400dee5:	int3   
6400dee6:	int3   
6400dee7:	int3   
6400dee8:	int3   
6400dee9:	int3   
6400deea:	int3   
6400deeb:	int3   
6400deec:	int3   
6400deed:	int3   
6400deee:	int3   
6400deef:	int3   
6400def0:	push   ebp
6400def1:	mov    ebp,esp
6400def3:	and    esp,0xfffffff8
6400def6:	push   ecx
6400def7:	push   esi
6400def8:	push   0x0
6400defa:	push   0x1
6400defc:	push   0x640302b4
6400df01:	call   DWORD PTR ds:0x6402408c
6400df07:	test   eax,eax
6400df09:	jne    0x6400df69
6400df0b:	push   0x640284c4
6400df10:	push   0xb
6400df12:	push   0x640284e8
6400df17:	call   0x64006890
6400df1c:	push   0x640284f4
6400df21:	push   0x8
6400df23:	push   0x640283d4
6400df28:	mov    esi,eax
6400df2a:	call   0x64006b80
6400df2f:	add    esp,0x18
6400df32:	push   eax
6400df33:	call   DWORD PTR ds:0x64024018
6400df39:	add    DWORD PTR ds:0x6402d37c,0x1
6400df40:	test   eax,eax
6400df42:	je     0x6400df5d
6400df44:	push   esi
6400df45:	push   eax
6400df46:	call   DWORD PTR ds:0x64024014
6400df4c:	add    DWORD PTR ds:0x6402d380,0x1
6400df53:	mov    ds:0x64030390,eax
6400df58:	pop    esi
6400df59:	mov    esp,ebp
6400df5b:	pop    ebp
6400df5c:	ret    
6400df5d:	xor    eax,eax
6400df5f:	mov    ds:0x64030390,eax
6400df64:	pop    esi
6400df65:	mov    esp,ebp
6400df67:	pop    ebp
6400df68:	ret    
6400df69:	mov    eax,ds:0x64030390
6400df6e:	pop    esi
6400df6f:	mov    esp,ebp
6400df71:	pop    ebp
6400df72:	ret    
6400df73:	int3   
6400df74:	int3   
6400df75:	int3   
6400df76:	int3   
6400df77:	int3   
6400df78:	int3   
6400df79:	int3   
6400df7a:	int3   
6400df7b:	int3   
6400df7c:	int3   
6400df7d:	int3   
6400df7e:	int3   
6400df7f:	int3   
6400df80:	push   ebp
6400df81:	mov    ebp,esp
6400df83:	and    esp,0xfffffff8
6400df86:	push   ecx
6400df87:	push   esi
6400df88:	push   0x0
6400df8a:	push   0x1
6400df8c:	push   0x640302b8
6400df91:	call   DWORD PTR ds:0x6402408c
6400df97:	test   eax,eax
6400df99:	jne    0x6400dff9
6400df9b:	push   0x64028534
6400dfa0:	push   0xb
6400dfa2:	push   0x64028560
6400dfa7:	call   0x64006890
6400dfac:	push   0x6402856c
6400dfb1:	push   0x8
6400dfb3:	push   0x640283d4
6400dfb8:	mov    esi,eax
6400dfba:	call   0x64006b80
6400dfbf:	add    esp,0x18
6400dfc2:	push   eax
6400dfc3:	call   DWORD PTR ds:0x64024018
6400dfc9:	add    DWORD PTR ds:0x6402d37c,0x1
6400dfd0:	test   eax,eax
6400dfd2:	je     0x6400dfed
6400dfd4:	push   esi
6400dfd5:	push   eax
6400dfd6:	call   DWORD PTR ds:0x64024014
6400dfdc:	add    DWORD PTR ds:0x6402d380,0x1
6400dfe3:	mov    ds:0x64030394,eax
6400dfe8:	pop    esi
6400dfe9:	mov    esp,ebp
6400dfeb:	pop    ebp
6400dfec:	ret    
6400dfed:	xor    eax,eax
6400dfef:	mov    ds:0x64030394,eax
6400dff4:	pop    esi
6400dff5:	mov    esp,ebp
6400dff7:	pop    ebp
6400dff8:	ret    
6400dff9:	mov    eax,ds:0x64030394
6400dffe:	pop    esi
6400dfff:	mov    esp,ebp
6400e001:	pop    ebp
6400e002:	ret    
6400e003:	int3   
6400e004:	int3   
6400e005:	int3   
6400e006:	int3   
6400e007:	int3   
6400e008:	int3   
6400e009:	int3   
6400e00a:	int3   
6400e00b:	int3   
6400e00c:	int3   
6400e00d:	int3   
6400e00e:	int3   
6400e00f:	int3   
6400e010:	push   esi
6400e011:	push   0x0
6400e013:	push   0x1
6400e015:	push   0x640302bc
6400e01a:	call   DWORD PTR ds:0x6402408c
6400e020:	test   eax,eax
6400e022:	jne    0x6400e07c
6400e024:	push   0x64028594
6400e029:	push   0xc
6400e02b:	push   0x640285c0
6400e030:	call   0x64006890
6400e035:	push   0x640285d0
6400e03a:	push   0x8
6400e03c:	push   0x640283d4
6400e041:	mov    esi,eax
6400e043:	call   0x64006b80
6400e048:	add    esp,0x18
6400e04b:	push   eax
6400e04c:	call   DWORD PTR ds:0x64024018
6400e052:	add    DWORD PTR ds:0x6402d37c,0x1
6400e059:	test   eax,eax
6400e05b:	je     0x6400e073
6400e05d:	push   esi
6400e05e:	push   eax
6400e05f:	call   DWORD PTR ds:0x64024014
6400e065:	add    DWORD PTR ds:0x6402d380,0x1
6400e06c:	mov    ds:0x64030398,eax
6400e071:	pop    esi
6400e072:	ret    
6400e073:	xor    eax,eax
6400e075:	mov    ds:0x64030398,eax
6400e07a:	pop    esi
6400e07b:	ret    
6400e07c:	mov    eax,ds:0x64030398
6400e081:	pop    esi
6400e082:	ret    
6400e083:	int3   
6400e084:	int3   
6400e085:	int3   
6400e086:	int3   
6400e087:	int3   
6400e088:	int3   
6400e089:	int3   
6400e08a:	int3   
6400e08b:	int3   
6400e08c:	int3   
6400e08d:	int3   
6400e08e:	int3   
6400e08f:	int3   
6400e090:	push   esi
6400e091:	push   0x0
6400e093:	push   0x1
6400e095:	push   0x640302c0
6400e09a:	call   DWORD PTR ds:0x6402408c
6400e0a0:	test   eax,eax
6400e0a2:	jne    0x6400e0fc
6400e0a4:	push   0x640285f8
6400e0a9:	push   0x10
6400e0ab:	push   0x6402861c
6400e0b0:	call   0x64006890
6400e0b5:	push   0x64028630
6400e0ba:	push   0x8
6400e0bc:	push   0x640283d4
6400e0c1:	mov    esi,eax
6400e0c3:	call   0x64006b80
6400e0c8:	add    esp,0x18
6400e0cb:	push   eax
6400e0cc:	call   DWORD PTR ds:0x64024018
6400e0d2:	add    DWORD PTR ds:0x6402d37c,0x1
6400e0d9:	test   eax,eax
6400e0db:	je     0x6400e0f3
6400e0dd:	push   esi
6400e0de:	push   eax
6400e0df:	call   DWORD PTR ds:0x64024014
6400e0e5:	add    DWORD PTR ds:0x6402d380,0x1
6400e0ec:	mov    ds:0x6403039c,eax
6400e0f1:	pop    esi
6400e0f2:	ret    
6400e0f3:	xor    eax,eax
6400e0f5:	mov    ds:0x6403039c,eax
6400e0fa:	pop    esi
6400e0fb:	ret    
6400e0fc:	mov    eax,ds:0x6403039c
6400e101:	pop    esi
6400e102:	ret    
6400e103:	int3   
6400e104:	int3   
6400e105:	int3   
6400e106:	int3   
6400e107:	int3   
6400e108:	int3   
6400e109:	int3   
6400e10a:	int3   
6400e10b:	int3   
6400e10c:	int3   
6400e10d:	int3   
6400e10e:	int3   
6400e10f:	int3   
6400e110:	push   esi
6400e111:	push   0x0
6400e113:	push   0x1
6400e115:	push   0x640302c4
6400e11a:	call   DWORD PTR ds:0x6402408c
6400e120:	test   eax,eax
6400e122:	jne    0x6400e17c
6400e124:	push   0x6402866c
6400e129:	push   0x10
6400e12b:	push   0x640286a0
6400e130:	call   0x64006890
6400e135:	push   0x640286b4
6400e13a:	push   0x8
6400e13c:	push   0x640283d4
6400e141:	mov    esi,eax
6400e143:	call   0x64006b80
6400e148:	add    esp,0x18
6400e14b:	push   eax
6400e14c:	call   DWORD PTR ds:0x64024018
6400e152:	add    DWORD PTR ds:0x6402d37c,0x1
6400e159:	test   eax,eax
6400e15b:	je     0x6400e173
6400e15d:	push   esi
6400e15e:	push   eax
6400e15f:	call   DWORD PTR ds:0x64024014
6400e165:	add    DWORD PTR ds:0x6402d380,0x1
6400e16c:	mov    ds:0x640303a0,eax
6400e171:	pop    esi
6400e172:	ret    
6400e173:	xor    eax,eax
6400e175:	mov    ds:0x640303a0,eax
6400e17a:	pop    esi
6400e17b:	ret    
6400e17c:	mov    eax,ds:0x640303a0
6400e181:	pop    esi
6400e182:	ret    
6400e183:	int3   
6400e184:	int3   
6400e185:	int3   
6400e186:	int3   
6400e187:	int3   
6400e188:	int3   
6400e189:	int3   
6400e18a:	int3   
6400e18b:	int3   
6400e18c:	int3   
6400e18d:	int3   
6400e18e:	int3   
6400e18f:	int3   
6400e190:	push   ebp
6400e191:	mov    ebp,esp
6400e193:	and    esp,0xfffffff8
6400e196:	push   ecx
6400e197:	push   esi
6400e198:	push   0x0
6400e19a:	push   0x1
6400e19c:	push   0x640302c8
6400e1a1:	call   DWORD PTR ds:0x6402408c
6400e1a7:	test   eax,eax
6400e1a9:	jne    0x6400e209
6400e1ab:	push   0x640286e0
6400e1b0:	push   0x15
6400e1b2:	push   0x64028720
6400e1b7:	call   0x64006890
6400e1bc:	push   0x64028738
6400e1c1:	push   0x8
6400e1c3:	push   0x640283d4
6400e1c8:	mov    esi,eax
6400e1ca:	call   0x64006b80
6400e1cf:	add    esp,0x18
6400e1d2:	push   eax
6400e1d3:	call   DWORD PTR ds:0x64024018
6400e1d9:	add    DWORD PTR ds:0x6402d37c,0x1
6400e1e0:	test   eax,eax
6400e1e2:	je     0x6400e1fd
6400e1e4:	push   esi
6400e1e5:	push   eax
6400e1e6:	call   DWORD PTR ds:0x64024014
6400e1ec:	add    DWORD PTR ds:0x6402d380,0x1
6400e1f3:	mov    ds:0x640303a4,eax
6400e1f8:	pop    esi
6400e1f9:	mov    esp,ebp
6400e1fb:	pop    ebp
6400e1fc:	ret    
6400e1fd:	xor    eax,eax
6400e1ff:	mov    ds:0x640303a4,eax
6400e204:	pop    esi
6400e205:	mov    esp,ebp
6400e207:	pop    ebp
6400e208:	ret    
6400e209:	mov    eax,ds:0x640303a4
6400e20e:	pop    esi
6400e20f:	mov    esp,ebp
6400e211:	pop    ebp
6400e212:	ret    
6400e213:	int3   
6400e214:	int3   
6400e215:	int3   
6400e216:	int3   
6400e217:	int3   
6400e218:	int3   
6400e219:	int3   
6400e21a:	int3   
6400e21b:	int3   
6400e21c:	int3   
6400e21d:	int3   
6400e21e:	int3   
6400e21f:	int3   
6400e220:	push   ebp
6400e221:	mov    ebp,esp
6400e223:	and    esp,0xfffffff8
6400e226:	push   ecx
6400e227:	push   esi
6400e228:	push   0x0
6400e22a:	push   0x1
6400e22c:	push   0x640302cc
6400e231:	call   DWORD PTR ds:0x6402408c
6400e237:	test   eax,eax
6400e239:	jne    0x6400e299
6400e23b:	push   0x64028764
6400e240:	push   0x18
6400e242:	push   0x64028788
6400e247:	call   0x64006890
6400e24c:	push   0x640287a4
6400e251:	push   0x8
6400e253:	push   0x640283d4
6400e258:	mov    esi,eax
6400e25a:	call   0x64006b80
6400e25f:	add    esp,0x18
6400e262:	push   eax
6400e263:	call   DWORD PTR ds:0x64024018
6400e269:	add    DWORD PTR ds:0x6402d37c,0x1
6400e270:	test   eax,eax
6400e272:	je     0x6400e28d
6400e274:	push   esi
6400e275:	push   eax
6400e276:	call   DWORD PTR ds:0x64024014
6400e27c:	add    DWORD PTR ds:0x6402d380,0x1
6400e283:	mov    ds:0x640303a8,eax
6400e288:	pop    esi
6400e289:	mov    esp,ebp
6400e28b:	pop    ebp
6400e28c:	ret    
6400e28d:	xor    eax,eax
6400e28f:	mov    ds:0x640303a8,eax
6400e294:	pop    esi
6400e295:	mov    esp,ebp
6400e297:	pop    ebp
6400e298:	ret    
6400e299:	mov    eax,ds:0x640303a8
6400e29e:	pop    esi
6400e29f:	mov    esp,ebp
6400e2a1:	pop    ebp
6400e2a2:	ret    
6400e2a3:	int3   
6400e2a4:	int3   
6400e2a5:	int3   
6400e2a6:	int3   
6400e2a7:	int3   
6400e2a8:	int3   
6400e2a9:	int3   
6400e2aa:	int3   
6400e2ab:	int3   
6400e2ac:	int3   
6400e2ad:	int3   
6400e2ae:	int3   
6400e2af:	int3   
6400e2b0:	push   esi
6400e2b1:	push   0x0
6400e2b3:	push   0x1
6400e2b5:	push   0x640302d0
6400e2ba:	call   DWORD PTR ds:0x6402408c
6400e2c0:	test   eax,eax
6400e2c2:	jne    0x6400e31c
6400e2c4:	push   0x640287cc
6400e2c9:	push   0xf
6400e2cb:	push   0x640287f4
6400e2d0:	call   0x64006890
6400e2d5:	push   0x64028804
6400e2da:	push   0x8
6400e2dc:	push   0x640283d4
6400e2e1:	mov    esi,eax
6400e2e3:	call   0x64006b80
6400e2e8:	add    esp,0x18
6400e2eb:	push   eax
6400e2ec:	call   DWORD PTR ds:0x64024018
6400e2f2:	add    DWORD PTR ds:0x6402d37c,0x1
6400e2f9:	test   eax,eax
6400e2fb:	je     0x6400e313
6400e2fd:	push   esi
6400e2fe:	push   eax
6400e2ff:	call   DWORD PTR ds:0x64024014
6400e305:	add    DWORD PTR ds:0x6402d380,0x1
6400e30c:	mov    ds:0x640303ac,eax
6400e311:	pop    esi
6400e312:	ret    
6400e313:	xor    eax,eax
6400e315:	mov    ds:0x640303ac,eax
6400e31a:	pop    esi
6400e31b:	ret    
6400e31c:	mov    eax,ds:0x640303ac
6400e321:	pop    esi
6400e322:	ret    
6400e323:	int3   
6400e324:	int3   
6400e325:	int3   
6400e326:	int3   
6400e327:	int3   
6400e328:	int3   
6400e329:	int3   
6400e32a:	int3   
6400e32b:	int3   
6400e32c:	int3   
6400e32d:	int3   
6400e32e:	int3   
6400e32f:	int3   
6400e330:	push   ebp
6400e331:	mov    ebp,esp
6400e333:	and    esp,0xfffffff8
6400e336:	push   ecx
6400e337:	push   esi
6400e338:	push   0x0
6400e33a:	push   0x1
6400e33c:	push   0x640302ec
6400e341:	call   DWORD PTR ds:0x6402408c
6400e347:	test   eax,eax
6400e349:	jne    0x6400e3a9
6400e34b:	push   0x64028834
6400e350:	push   0x19
6400e352:	push   0x64028864
6400e357:	call   0x64006890
6400e35c:	push   0x64028880
6400e361:	push   0x7
6400e363:	push   0x640288a4
6400e368:	mov    esi,eax
6400e36a:	call   0x64006b80
6400e36f:	add    esp,0x18
6400e372:	push   eax
6400e373:	call   DWORD PTR ds:0x64024018
6400e379:	add    DWORD PTR ds:0x6402d37c,0x1
6400e380:	test   eax,eax
6400e382:	je     0x6400e39d
6400e384:	push   esi
6400e385:	push   eax
6400e386:	call   DWORD PTR ds:0x64024014
6400e38c:	add    DWORD PTR ds:0x6402d380,0x1
6400e393:	mov    ds:0x640303b0,eax
6400e398:	pop    esi
6400e399:	mov    esp,ebp
6400e39b:	pop    ebp
6400e39c:	ret    
6400e39d:	xor    eax,eax
6400e39f:	mov    ds:0x640303b0,eax
6400e3a4:	pop    esi
6400e3a5:	mov    esp,ebp
6400e3a7:	pop    ebp
6400e3a8:	ret    
6400e3a9:	mov    eax,ds:0x640303b0
6400e3ae:	pop    esi
6400e3af:	mov    esp,ebp
6400e3b1:	pop    ebp
6400e3b2:	ret    
6400e3b3:	int3   
6400e3b4:	int3   
6400e3b5:	int3   
6400e3b6:	int3   
6400e3b7:	int3   
6400e3b8:	int3   
6400e3b9:	int3   
6400e3ba:	int3   
6400e3bb:	int3   
6400e3bc:	int3   
6400e3bd:	int3   
6400e3be:	int3   
6400e3bf:	int3   
6400e3c0:	push   ebp
6400e3c1:	mov    ebp,esp
6400e3c3:	and    esp,0xfffffff8
6400e3c6:	push   ecx
6400e3c7:	push   esi
6400e3c8:	push   0x0
6400e3ca:	push   0x1
6400e3cc:	push   0x640302f4
6400e3d1:	call   DWORD PTR ds:0x6402408c
6400e3d7:	test   eax,eax
6400e3d9:	jne    0x6400e439
6400e3db:	push   0x640288c8
6400e3e0:	push   0x15
6400e3e2:	push   0x64028904
6400e3e7:	call   0x64006890
6400e3ec:	push   0x6402891c
6400e3f1:	push   0x8
6400e3f3:	push   0x640288b4
6400e3f8:	mov    esi,eax
6400e3fa:	call   0x64006b80
6400e3ff:	add    esp,0x18
6400e402:	push   eax
6400e403:	call   DWORD PTR ds:0x64024018
6400e409:	add    DWORD PTR ds:0x6402d37c,0x1
6400e410:	test   eax,eax
6400e412:	je     0x6400e42d
6400e414:	push   esi
6400e415:	push   eax
6400e416:	call   DWORD PTR ds:0x64024014
6400e41c:	add    DWORD PTR ds:0x6402d380,0x1
6400e423:	mov    ds:0x640303b4,eax
6400e428:	pop    esi
6400e429:	mov    esp,ebp
6400e42b:	pop    ebp
6400e42c:	ret    
6400e42d:	xor    eax,eax
6400e42f:	mov    ds:0x640303b4,eax
6400e434:	pop    esi
6400e435:	mov    esp,ebp
6400e437:	pop    ebp
6400e438:	ret    
6400e439:	mov    eax,ds:0x640303b4
6400e43e:	pop    esi
6400e43f:	mov    esp,ebp
6400e441:	pop    ebp
6400e442:	ret    
6400e443:	int3   
6400e444:	int3   
6400e445:	int3   
6400e446:	int3   
6400e447:	int3   
6400e448:	int3   
6400e449:	int3   
6400e44a:	int3   
6400e44b:	int3   
6400e44c:	int3   
6400e44d:	int3   
6400e44e:	int3   
6400e44f:	int3   
6400e450:	push   ebp
6400e451:	mov    ebp,esp
6400e453:	and    esp,0xfffffff8
6400e456:	push   ecx
6400e457:	push   esi
6400e458:	push   0x0
6400e45a:	push   0x1
6400e45c:	push   0x640302f8
6400e461:	call   DWORD PTR ds:0x6402408c
6400e467:	test   eax,eax
6400e469:	jne    0x6400e4c9
6400e46b:	push   0x64028950
6400e470:	push   0x15
6400e472:	push   0x6402897c
6400e477:	call   0x64006890
6400e47c:	push   0x64028994
6400e481:	push   0x8
6400e483:	push   0x640288b4
6400e488:	mov    esi,eax
6400e48a:	call   0x64006b80
6400e48f:	add    esp,0x18
6400e492:	push   eax
6400e493:	call   DWORD PTR ds:0x64024018
6400e499:	add    DWORD PTR ds:0x6402d37c,0x1
6400e4a0:	test   eax,eax
6400e4a2:	je     0x6400e4bd
6400e4a4:	push   esi
6400e4a5:	push   eax
6400e4a6:	call   DWORD PTR ds:0x64024014
6400e4ac:	add    DWORD PTR ds:0x6402d380,0x1
6400e4b3:	mov    ds:0x640303b8,eax
6400e4b8:	pop    esi
6400e4b9:	mov    esp,ebp
6400e4bb:	pop    ebp
6400e4bc:	ret    
6400e4bd:	xor    eax,eax
6400e4bf:	mov    ds:0x640303b8,eax
6400e4c4:	pop    esi
6400e4c5:	mov    esp,ebp
6400e4c7:	pop    ebp
6400e4c8:	ret    
6400e4c9:	mov    eax,ds:0x640303b8
6400e4ce:	pop    esi
6400e4cf:	mov    esp,ebp
6400e4d1:	pop    ebp
6400e4d2:	ret    
6400e4d3:	int3   
6400e4d4:	int3   
6400e4d5:	int3   
6400e4d6:	int3   
6400e4d7:	int3   
6400e4d8:	int3   
6400e4d9:	int3   
6400e4da:	int3   
6400e4db:	int3   
6400e4dc:	int3   
6400e4dd:	int3   
6400e4de:	int3   
6400e4df:	int3   
6400e4e0:	push   esi
6400e4e1:	push   0x0
6400e4e3:	push   0x1
6400e4e5:	push   0x640302fc
6400e4ea:	call   DWORD PTR ds:0x6402408c
6400e4f0:	test   eax,eax
6400e4f2:	jne    0x6400e54c
6400e4f4:	push   0x640289c8
6400e4f9:	push   0x34
6400e4fb:	push   0x64028a08
6400e500:	call   0x64006890
6400e505:	push   0x64028a40
6400e50a:	push   0x8
6400e50c:	push   0x640288b4
6400e511:	mov    esi,eax
6400e513:	call   0x64006b80
6400e518:	add    esp,0x18
6400e51b:	push   eax
6400e51c:	call   DWORD PTR ds:0x64024018
6400e522:	add    DWORD PTR ds:0x6402d37c,0x1
6400e529:	test   eax,eax
6400e52b:	je     0x6400e543
6400e52d:	push   esi
6400e52e:	push   eax
6400e52f:	call   DWORD PTR ds:0x64024014
6400e535:	add    DWORD PTR ds:0x6402d380,0x1
6400e53c:	mov    ds:0x640303bc,eax
6400e541:	pop    esi
6400e542:	ret    
6400e543:	xor    eax,eax
6400e545:	mov    ds:0x640303bc,eax
6400e54a:	pop    esi
6400e54b:	ret    
6400e54c:	mov    eax,ds:0x640303bc
6400e551:	pop    esi
6400e552:	ret    
6400e553:	int3   
6400e554:	int3   
6400e555:	int3   
6400e556:	int3   
6400e557:	int3   
6400e558:	int3   
6400e559:	int3   
6400e55a:	int3   
6400e55b:	int3   
6400e55c:	int3   
6400e55d:	int3   
6400e55e:	int3   
6400e55f:	int3   
6400e560:	push   ebp
6400e561:	mov    ebp,esp
6400e563:	and    esp,0xfffffff8
6400e566:	push   ecx
6400e567:	push   esi
6400e568:	push   0x0
6400e56a:	push   0x1
6400e56c:	push   0x64030308
6400e571:	call   DWORD PTR ds:0x6402408c
6400e577:	test   eax,eax
6400e579:	jne    0x6400e5d9
6400e57b:	push   0x64028a78
6400e580:	push   0xe
6400e582:	push   0x64028ab4
6400e587:	call   0x64006890
6400e58c:	push   0x64028ac4
6400e591:	push   0x8
6400e593:	push   0x640288b4
6400e598:	mov    esi,eax
6400e59a:	call   0x64006b80
6400e59f:	add    esp,0x18
6400e5a2:	push   eax
6400e5a3:	call   DWORD PTR ds:0x64024018
6400e5a9:	add    DWORD PTR ds:0x6402d37c,0x1
6400e5b0:	test   eax,eax
6400e5b2:	je     0x6400e5cd
6400e5b4:	push   esi
6400e5b5:	push   eax
6400e5b6:	call   DWORD PTR ds:0x64024014
6400e5bc:	add    DWORD PTR ds:0x6402d380,0x1
6400e5c3:	mov    ds:0x640303c0,eax
6400e5c8:	pop    esi
6400e5c9:	mov    esp,ebp
6400e5cb:	pop    ebp
6400e5cc:	ret    
6400e5cd:	xor    eax,eax
6400e5cf:	mov    ds:0x640303c0,eax
6400e5d4:	pop    esi
6400e5d5:	mov    esp,ebp
6400e5d7:	pop    ebp
6400e5d8:	ret    
6400e5d9:	mov    eax,ds:0x640303c0
6400e5de:	pop    esi
6400e5df:	mov    esp,ebp
6400e5e1:	pop    ebp
6400e5e2:	ret    
6400e5e3:	int3   
6400e5e4:	int3   
6400e5e5:	int3   
6400e5e6:	int3   
6400e5e7:	int3   
6400e5e8:	int3   
6400e5e9:	int3   
6400e5ea:	int3   
6400e5eb:	int3   
6400e5ec:	int3   
6400e5ed:	int3   
6400e5ee:	int3   
6400e5ef:	int3   
6400e5f0:	push   ebp
6400e5f1:	mov    ebp,esp
6400e5f3:	and    esp,0xfffffff8
6400e5f6:	push   ecx
6400e5f7:	push   esi
6400e5f8:	push   0x0
6400e5fa:	push   0x1
6400e5fc:	push   0x6403031c
6400e601:	call   DWORD PTR ds:0x6402408c
6400e607:	test   eax,eax
6400e609:	jne    0x6400e669
6400e60b:	push   0x64028aec
6400e610:	push   0x12
6400e612:	push   0x64028b1c
6400e617:	call   0x64006890
6400e61c:	push   0x64028b30
6400e621:	push   0x8
6400e623:	push   0x640288b4
6400e628:	mov    esi,eax
6400e62a:	call   0x64006b80
6400e62f:	add    esp,0x18
6400e632:	push   eax
6400e633:	call   DWORD PTR ds:0x64024018
6400e639:	add    DWORD PTR ds:0x6402d37c,0x1
6400e640:	test   eax,eax
6400e642:	je     0x6400e65d
6400e644:	push   esi
6400e645:	push   eax
6400e646:	call   DWORD PTR ds:0x64024014
6400e64c:	add    DWORD PTR ds:0x6402d380,0x1
6400e653:	mov    ds:0x640303c4,eax
6400e658:	pop    esi
6400e659:	mov    esp,ebp
6400e65b:	pop    ebp
6400e65c:	ret    
6400e65d:	xor    eax,eax
6400e65f:	mov    ds:0x640303c4,eax
6400e664:	pop    esi
6400e665:	mov    esp,ebp
6400e667:	pop    ebp
6400e668:	ret    
6400e669:	mov    eax,ds:0x640303c4
6400e66e:	pop    esi
6400e66f:	mov    esp,ebp
6400e671:	pop    ebp
6400e672:	ret    
6400e673:	int3   
6400e674:	int3   
6400e675:	int3   
6400e676:	int3   
6400e677:	int3   
6400e678:	int3   
6400e679:	int3   
6400e67a:	int3   
6400e67b:	int3   
6400e67c:	int3   
6400e67d:	int3   
6400e67e:	int3   
6400e67f:	int3   
6400e680:	push   esi
6400e681:	push   0x0
6400e683:	push   0x1
6400e685:	push   0x6403033c
6400e68a:	call   DWORD PTR ds:0x6402408c
6400e690:	test   eax,eax
6400e692:	jne    0x6400e6ec
6400e694:	push   0x64028b5c
6400e699:	push   0xc
6400e69b:	push   0x64028b8c
6400e6a0:	call   0x64006890
6400e6a5:	push   0x64028b9c
6400e6aa:	push   0x5
6400e6ac:	push   0x64028bd8
6400e6b1:	mov    esi,eax
6400e6b3:	call   0x64006b80
6400e6b8:	add    esp,0x18
6400e6bb:	push   eax
6400e6bc:	call   DWORD PTR ds:0x64024018
6400e6c2:	add    DWORD PTR ds:0x6402d37c,0x1
6400e6c9:	test   eax,eax
6400e6cb:	je     0x6400e6e3
6400e6cd:	push   esi
6400e6ce:	push   eax
6400e6cf:	call   DWORD PTR ds:0x64024014
6400e6d5:	add    DWORD PTR ds:0x6402d380,0x1
6400e6dc:	mov    ds:0x640303c8,eax
6400e6e1:	pop    esi
6400e6e2:	ret    
6400e6e3:	xor    eax,eax
6400e6e5:	mov    ds:0x640303c8,eax
6400e6ea:	pop    esi
6400e6eb:	ret    
6400e6ec:	mov    eax,ds:0x640303c8
6400e6f1:	pop    esi
6400e6f2:	ret    
6400e6f3:	int3   
6400e6f4:	int3   
6400e6f5:	int3   
6400e6f6:	int3   
6400e6f7:	int3   
6400e6f8:	int3   
6400e6f9:	int3   
6400e6fa:	int3   
6400e6fb:	int3   
6400e6fc:	int3   
6400e6fd:	int3   
6400e6fe:	int3   
6400e6ff:	int3   
6400e700:	push   esi
6400e701:	push   0x0
6400e703:	push   0x1
6400e705:	push   0x64030340
6400e70a:	call   DWORD PTR ds:0x6402408c
6400e710:	test   eax,eax
6400e712:	jne    0x6400e76c
6400e714:	push   0x64028be4
6400e719:	push   0x11
6400e71b:	push   0x64028c24
6400e720:	call   0x64006890
6400e725:	push   0x64028c38
6400e72a:	push   0x5
6400e72c:	push   0x64028bd8
6400e731:	mov    esi,eax
6400e733:	call   0x64006b80
6400e738:	add    esp,0x18
6400e73b:	push   eax
6400e73c:	call   DWORD PTR ds:0x64024018
6400e742:	add    DWORD PTR ds:0x6402d37c,0x1
6400e749:	test   eax,eax
6400e74b:	je     0x6400e763
6400e74d:	push   esi
6400e74e:	push   eax
6400e74f:	call   DWORD PTR ds:0x64024014
6400e755:	add    DWORD PTR ds:0x6402d380,0x1
6400e75c:	mov    ds:0x640303cc,eax
6400e761:	pop    esi
6400e762:	ret    
6400e763:	xor    eax,eax
6400e765:	mov    ds:0x640303cc,eax
6400e76a:	pop    esi
6400e76b:	ret    
6400e76c:	mov    eax,ds:0x640303cc
6400e771:	pop    esi
6400e772:	ret    
6400e773:	int3   
6400e774:	int3   
6400e775:	int3   
6400e776:	int3   
6400e777:	int3   
6400e778:	int3   
6400e779:	int3   
6400e77a:	int3   
6400e77b:	int3   
6400e77c:	int3   
6400e77d:	int3   
6400e77e:	int3   
6400e77f:	int3   
6400e780:	push   esi
6400e781:	push   edi
6400e782:	mov    edi,DWORD PTR [esp+0xc]
6400e786:	mov    esi,DWORD PTR [edi+0xc]
6400e789:	cmp    esi,DWORD PTR [edi+0x14]
6400e78c:	je     0x6400e7a4
6400e78e:	mov    edi,edi
6400e790:	mov    eax,DWORD PTR [esi-0x4]
6400e793:	mov    ecx,DWORD PTR [esi-0x8]
6400e796:	push   eax
6400e797:	call   ecx
6400e799:	add    esi,0xfffffff8
6400e79c:	add    esp,0x4
6400e79f:	cmp    esi,DWORD PTR [edi+0x14]
6400e7a2:	jne    0x6400e790
6400e7a4:	mov    edx,DWORD PTR [edi+0x14]
6400e7a7:	push   edx
6400e7a8:	call   0x64013396
6400e7ad:	mov    edi,DWORD PTR [edi+0x8]
6400e7b0:	mov    esi,DWORD PTR [edi]
6400e7b2:	push   edi
6400e7b3:	call   0x64013396
6400e7b8:	add    esp,0x8
6400e7bb:	test   esi,esi
6400e7bd:	je     0x6400e7d1
6400e7bf:	nop
6400e7c0:	mov    eax,esi
6400e7c2:	mov    esi,DWORD PTR [esi]
6400e7c4:	push   eax
6400e7c5:	call   0x64013396
6400e7ca:	add    esp,0x4
6400e7cd:	test   esi,esi
6400e7cf:	jne    0x6400e7c0
6400e7d1:	pop    edi
6400e7d2:	pop    esi
6400e7d3:	ret    
6400e7d4:	int3   
6400e7d5:	int3   
6400e7d6:	int3   
6400e7d7:	int3   
6400e7d8:	int3   
6400e7d9:	int3   
6400e7da:	int3   
6400e7db:	int3   
6400e7dc:	int3   
6400e7dd:	int3   
6400e7de:	int3   
6400e7df:	int3   
6400e7e0:	push   esi
6400e7e1:	mov    esi,DWORD PTR [esp+0x8]
6400e7e5:	push   edi
6400e7e6:	mov    edi,DWORD PTR [esp+0x10]
6400e7ea:	lea    eax,[edi+0x4]
6400e7ed:	push   eax
6400e7ee:	mov    DWORD PTR [esi+0x18],edi
6400e7f1:	call   0x64013473
6400e7f6:	xor    ecx,ecx
6400e7f8:	add    esp,0x4
6400e7fb:	cmp    eax,ecx
6400e7fd:	je     0x6400e81a
6400e7ff:	mov    DWORD PTR [esi+0x8],eax
6400e802:	mov    DWORD PTR [esi],edi
6400e804:	lea    edx,[eax+0x4]
6400e807:	mov    DWORD PTR [esi+0x4],edx
6400e80a:	mov    DWORD PTR [eax],ecx
6400e80c:	pop    edi
6400e80d:	mov    DWORD PTR [esi+0xc],ecx
6400e810:	mov    DWORD PTR [esi+0x10],ecx
6400e813:	mov    DWORD PTR [esi+0x14],ecx
6400e816:	mov    al,0x1
6400e818:	pop    esi
6400e819:	ret    
6400e81a:	pop    edi
6400e81b:	xor    al,al
6400e81d:	pop    esi
6400e81e:	ret    
6400e81f:	int3   
6400e820:	mov    ecx,DWORD PTR [ebx]
6400e822:	push   esi
6400e823:	mov    esi,eax
6400e825:	add    esi,0x3
6400e828:	and    esi,0xfffffffc
6400e82b:	cmp    ecx,esi
6400e82d:	jae    0x6400e863
6400e82f:	push   edi
6400e830:	mov    edi,DWORD PTR [ebx+0x18]
6400e833:	cmp    edi,esi
6400e835:	jae    0x6400e83d
6400e837:	add    edi,edi
6400e839:	cmp    edi,esi
6400e83b:	jb     0x6400e837
6400e83d:	lea    eax,[edi+0x4]
6400e840:	push   eax
6400e841:	call   0x64013473
6400e846:	mov    edx,DWORD PTR [ebx+0x8]
6400e849:	mov    DWORD PTR [eax],edx
6400e84b:	add    esp,0x4
6400e84e:	sub    edi,esi
6400e850:	lea    ecx,[eax+0x4]
6400e853:	mov    DWORD PTR [ebx+0x8],eax
6400e856:	lea    eax,[ecx+esi*1]
6400e859:	mov    DWORD PTR [ebx],edi
6400e85b:	pop    edi
6400e85c:	mov    DWORD PTR [ebx+0x4],eax
6400e85f:	mov    eax,ecx
6400e861:	pop    esi
6400e862:	ret    
6400e863:	mov    eax,DWORD PTR [ebx+0x4]
6400e866:	sub    ecx,esi
6400e868:	mov    DWORD PTR [ebx],ecx
6400e86a:	lea    ecx,[eax+esi*1]
6400e86d:	mov    DWORD PTR [ebx+0x4],ecx
6400e870:	pop    esi
6400e871:	ret    
6400e872:	int3   
6400e873:	int3   
6400e874:	int3   
6400e875:	int3   
6400e876:	int3   
6400e877:	int3   
6400e878:	int3   
6400e879:	int3   
6400e87a:	int3   
6400e87b:	int3   
6400e87c:	int3   
6400e87d:	int3   
6400e87e:	int3   
6400e87f:	int3   
6400e880:	push   ebx
6400e881:	mov    DWORD PTR [esi],0x6
6400e887:	mov    DWORD PTR [esi+0x8],0x0
6400e88e:	mov    ebx,DWORD PTR [ecx]
6400e890:	shl    eax,0x4
6400e893:	call   0x6400e820
6400e898:	mov    DWORD PTR [esi+0xc],eax
6400e89b:	neg    eax
6400e89d:	sbb    eax,eax
6400e89f:	neg    eax
6400e8a1:	sub    eax,0x1
6400e8a4:	pop    ebx
6400e8a5:	ret    
6400e8a6:	int3   
6400e8a7:	int3   
6400e8a8:	int3   
6400e8a9:	int3   
6400e8aa:	int3   
6400e8ab:	int3   
6400e8ac:	int3   
6400e8ad:	int3   
6400e8ae:	int3   
6400e8af:	int3   
6400e8b0:	push   ebx
6400e8b1:	mov    DWORD PTR [esi],0x7
6400e8b7:	mov    DWORD PTR [esi+0x8],0x0
6400e8be:	mov    ebx,DWORD PTR [ecx]
6400e8c0:	shl    eax,0x5
6400e8c3:	call   0x6400e820
6400e8c8:	mov    DWORD PTR [esi+0xc],eax
6400e8cb:	neg    eax
6400e8cd:	sbb    eax,eax
6400e8cf:	neg    eax
6400e8d1:	sub    eax,0x1
6400e8d4:	pop    ebx
6400e8d5:	ret    
6400e8d6:	int3   
6400e8d7:	int3   
6400e8d8:	int3   
6400e8d9:	int3   
6400e8da:	int3   
6400e8db:	int3   
6400e8dc:	int3   
6400e8dd:	int3   
6400e8de:	int3   
6400e8df:	int3   
6400e8e0:	sub    esp,0x44
6400e8e3:	mov    eax,DWORD PTR [esp+0x54]
6400e8e7:	mov    edx,DWORD PTR [esp+0x4c]
6400e8eb:	mov    ecx,DWORD PTR [esp+0x48]
6400e8ef:	mov    eax,DWORD PTR [eax]
6400e8f1:	push   ebx
6400e8f2:	push   ebp
6400e8f3:	push   esi
6400e8f4:	mov    esi,DWORD PTR [esp+0x5c]
6400e8f8:	add    eax,edx
6400e8fa:	add    edx,esi
6400e8fc:	mov    esi,DWORD PTR [ecx+0xc]
6400e8ff:	mov    DWORD PTR [esp+0x18],esi
6400e903:	mov    esi,DWORD PTR [ecx+0x8]
6400e906:	mov    ecx,DWORD PTR [ecx+0x10]
6400e909:	push   edi
6400e90a:	xor    edi,edi
6400e90c:	cmp    eax,edx
6400e90e:	mov    DWORD PTR [esp+0x60],ecx
6400e912:	mov    DWORD PTR [esp+0x14],eax
6400e916:	mov    DWORD PTR [esp+0x20],edx
6400e91a:	mov    DWORD PTR [esp+0x18],esi
6400e91e:	lea    ecx,[edi+0x20]
6400e921:	je     0x6400f1a1
6400e927:	mov    ebp,DWORD PTR [esp+0x38]
6400e92b:	jmp    0x6400e930
6400e92d:	lea    ecx,[ecx+0x0]
6400e930:	mov    eax,DWORD PTR [esp+0x18]
6400e934:	test   eax,eax
6400e936:	mov    ebx,DWORD PTR [esp+0x14]
6400e93a:	jne    0x6400ea4f
6400e940:	mov    al,BYTE PTR [ebx]
6400e942:	cmp    al,0x7f
6400e944:	ja     0x6400e95a
6400e946:	movzx  eax,al
6400e949:	cdq    
6400e94a:	mov    ebx,0x2
6400e94f:	mov    ebp,eax
6400e951:	mov    DWORD PTR [esp+0x3c],edx
6400e955:	jmp    0x6400f02c
6400e95a:	cmp    al,0xe0
6400e95c:	jb     0x6400e982
6400e95e:	cmp    al,0xff
6400e960:	ja     0x6400e982
6400e962:	test   al,al
6400e964:	movsx  eax,al
6400e967:	cdq    
6400e968:	mov    ebp,eax
6400e96a:	mov    DWORD PTR [esp+0x3c],edx
6400e96e:	mov    DWORD PTR [esp+0x38],ebp
6400e972:	jl     0x6400ec8b
6400e978:	mov    ebx,0x2
6400e97d:	jmp    0x6400f030
6400e982:	cmp    al,0xc0
6400e984:	jb     0x6400ea1e
6400e98a:	cmp    al,0xdf
6400e98c:	ja     0x6400ea1e
6400e992:	movzx  eax,al
6400e995:	lea    ecx,[eax-0xc0]
6400e99b:	cmp    ecx,0x1f
6400e99e:	ja     0x6400f1a5
6400e9a4:	movzx  ecx,BYTE PTR [ecx+0x6400f1f0]
6400e9ab:	jmp    DWORD PTR [ecx*4+0x6400f1d8]
6400e9b2:	xor    ebx,ebx
6400e9b4:	jmp    0x6400f030
6400e9b9:	mov    BYTE PTR [esp+0x38],0x0
6400e9be:	mov    ebp,DWORD PTR [esp+0x38]
6400e9c2:	mov    ebx,0x1
6400e9c7:	jmp    0x6400f030
6400e9cc:	mov    ebx,0x1
6400e9d1:	mov    BYTE PTR [esp+0x38],bl
6400e9d5:	mov    ebp,DWORD PTR [esp+0x38]
6400e9d9:	jmp    0x6400f030
6400e9de:	mov    ecx,eax
6400e9e0:	and    ecx,0x3
6400e9e3:	mov    esi,0x1
6400e9e8:	shl    esi,cl
6400e9ea:	and    eax,0x1f
6400e9ed:	add    ebx,0x1
6400e9f0:	mov    DWORD PTR [esp+0x18],eax
6400e9f4:	mov    DWORD PTR [esp+0x1c],esi
6400e9f8:	mov    DWORD PTR [esp+0x14],ebx
6400e9fc:	jmp    0x6400ea53
6400e9fe:	mov    ecx,eax
6400ea00:	and    ecx,0x1
6400ea03:	mov    esi,0x2
6400ea08:	shl    esi,cl
6400ea0a:	and    eax,0x1f
6400ea0d:	add    ebx,0x1
6400ea10:	mov    DWORD PTR [esp+0x18],eax
6400ea14:	mov    DWORD PTR [esp+0x1c],esi
6400ea18:	mov    DWORD PTR [esp+0x14],ebx
6400ea1c:	jmp    0x6400ea53
6400ea1e:	cmp    al,0xa0
6400ea20:	jb     0x6400ef82
6400ea26:	cmp    al,0xbf
6400ea28:	ja     0x6400ef82
6400ea2e:	and    eax,0x1f
6400ea31:	mov    esi,eax
6400ea33:	mov    DWORD PTR [esp+0x1c],esi
6400ea37:	je     0x6400ed2d
6400ea3d:	mov    eax,0x20
6400ea42:	add    ebx,0x1
6400ea45:	mov    DWORD PTR [esp+0x18],eax
6400ea49:	mov    DWORD PTR [esp+0x14],ebx
6400ea4d:	jmp    0x6400ea53
6400ea4f:	mov    esi,DWORD PTR [esp+0x1c]
6400ea53:	mov    ecx,edx
6400ea55:	sub    ecx,ebx
6400ea57:	cmp    ecx,esi
6400ea59:	jb     0x6400f1a1
6400ea5f:	mov    edi,ebx
6400ea61:	add    eax,0xfffffff6
6400ea64:	cmp    eax,0x16
6400ea67:	lea    ebx,[ebx+esi*1-0x1]
6400ea6b:	mov    DWORD PTR [esp+0x14],ebx
6400ea6f:	ja     0x6400f1a5
6400ea75:	jmp    DWORD PTR [eax*4+0x6400f210]
6400ea7c:	xor    eax,eax
6400ea7e:	mov    ah,BYTE PTR [edi]
6400ea80:	mov    al,BYTE PTR [edi+0x1]
6400ea83:	mov    esi,eax
6400ea85:	test   esi,esi
6400ea87:	jmp    0x6400ea33
6400ea89:	movzx  eax,BYTE PTR [edi+0x2]
6400ea8d:	xor    ecx,ecx
6400ea8f:	mov    ch,BYTE PTR [edi]
6400ea91:	mov    cl,BYTE PTR [edi+0x1]
6400ea94:	shl    ecx,0x8
6400ea97:	or     ecx,eax
6400ea99:	movzx  eax,BYTE PTR [edi+0x3]
6400ea9d:	shl    ecx,0x8
6400eaa0:	or     ecx,eax
6400eaa2:	mov    esi,ecx
6400eaa4:	jmp    0x6400ea33
6400eaa6:	movzx  edx,BYTE PTR [edi+0x2]
6400eaaa:	movzx  eax,BYTE PTR [edi+0x3]
6400eaae:	xor    ecx,ecx
6400eab0:	mov    ch,BYTE PTR [edi]
6400eab2:	mov    ebx,0x4
6400eab7:	mov    cl,BYTE PTR [edi+0x1]
6400eaba:	shl    ecx,0x8
6400eabd:	or     ecx,edx
6400eabf:	shl    ecx,0x8
6400eac2:	or     ecx,eax
6400eac4:	mov    DWORD PTR [esp+0x24],ecx
6400eac8:	fld    DWORD PTR [esp+0x24]
6400eacc:	fstp   QWORD PTR [esp+0x38]
6400ead0:	mov    ebp,DWORD PTR [esp+0x38]
6400ead4:	jmp    0x6400f030
6400ead9:	movzx  eax,BYTE PTR [edi]
6400eadc:	cdq    
6400eadd:	shld   edx,eax,0x8
6400eae1:	shl    eax,0x8
6400eae4:	mov    ecx,eax
6400eae6:	movzx  eax,BYTE PTR [edi+0x1]
6400eaea:	mov    esi,edx
6400eaec:	cdq    
6400eaed:	or     ecx,eax
6400eaef:	movzx  eax,BYTE PTR [edi+0x2]
6400eaf3:	or     esi,edx
6400eaf5:	shld   esi,ecx,0x8
6400eaf9:	shl    ecx,0x8
6400eafc:	cdq    
6400eafd:	or     ecx,eax
6400eaff:	movzx  eax,BYTE PTR [edi+0x3]
6400eb03:	or     esi,edx
6400eb05:	shld   esi,ecx,0x8
6400eb09:	shl    ecx,0x8
6400eb0c:	cdq    
6400eb0d:	or     ecx,eax
6400eb0f:	movzx  eax,BYTE PTR [edi+0x4]
6400eb13:	or     esi,edx
6400eb15:	shld   esi,ecx,0x8
6400eb19:	shl    ecx,0x8
6400eb1c:	cdq    
6400eb1d:	or     ecx,eax
6400eb1f:	movzx  eax,BYTE PTR [edi+0x5]
6400eb23:	or     esi,edx
6400eb25:	shld   esi,ecx,0x8
6400eb29:	shl    ecx,0x8
6400eb2c:	cdq    
6400eb2d:	or     ecx,eax
6400eb2f:	movzx  eax,BYTE PTR [edi+0x6]
6400eb33:	or     esi,edx
6400eb35:	shld   esi,ecx,0x8
6400eb39:	shl    ecx,0x8
6400eb3c:	cdq    
6400eb3d:	or     ecx,eax
6400eb3f:	movzx  eax,BYTE PTR [edi+0x7]
6400eb43:	or     esi,edx
6400eb45:	shld   esi,ecx,0x8
6400eb49:	cdq    
6400eb4a:	shl    ecx,0x8
6400eb4d:	or     ecx,eax
6400eb4f:	or     esi,edx
6400eb51:	mov    DWORD PTR [esp+0x28],ecx
6400eb55:	mov    DWORD PTR [esp+0x2c],esi
6400eb59:	mov    ebx,0x4
6400eb5e:	fld    QWORD PTR [esp+0x28]
6400eb62:	fstp   QWORD PTR [esp+0x38]
6400eb66:	mov    ebp,DWORD PTR [esp+0x38]
6400eb6a:	jmp    0x6400f030
6400eb6f:	movzx  eax,BYTE PTR [edi]
6400eb72:	cdq    
6400eb73:	mov    ebx,0x2
6400eb78:	mov    ebp,eax
6400eb7a:	mov    DWORD PTR [esp+0x3c],edx
6400eb7e:	jmp    0x6400f02c
6400eb83:	xor    edx,edx
6400eb85:	mov    dh,BYTE PTR [edi]
6400eb87:	mov    ebx,0x2
6400eb8c:	mov    dl,BYTE PTR [edi+0x1]
6400eb8f:	movzx  eax,dx
6400eb92:	cdq    
6400eb93:	mov    ebp,eax
6400eb95:	mov    DWORD PTR [esp+0x3c],edx
6400eb99:	jmp    0x6400f02c
6400eb9e:	movzx  ecx,BYTE PTR [edi+0x2]
6400eba2:	movzx  edx,BYTE PTR [edi+0x3]
6400eba6:	xor    eax,eax
6400eba8:	mov    ah,BYTE PTR [edi]
6400ebaa:	mov    ebx,0x2
6400ebaf:	mov    DWORD PTR [esp+0x3c],0x0
6400ebb7:	mov    al,BYTE PTR [edi+0x1]
6400ebba:	shl    eax,0x8
6400ebbd:	or     eax,ecx
6400ebbf:	shl    eax,0x8
6400ebc2:	or     eax,edx
6400ebc4:	mov    ebp,eax
6400ebc6:	jmp    0x6400f02c
6400ebcb:	movzx  eax,BYTE PTR [edi]
6400ebce:	cdq    
6400ebcf:	shld   edx,eax,0x8
6400ebd3:	shl    eax,0x8
6400ebd6:	mov    ecx,eax
6400ebd8:	movzx  eax,BYTE PTR [edi+0x1]
6400ebdc:	mov    esi,edx
6400ebde:	cdq    
6400ebdf:	or     ecx,eax
6400ebe1:	movzx  eax,BYTE PTR [edi+0x2]
6400ebe5:	or     esi,edx
6400ebe7:	shld   esi,ecx,0x8
6400ebeb:	shl    ecx,0x8
6400ebee:	cdq    
6400ebef:	or     ecx,eax
6400ebf1:	movzx  eax,BYTE PTR [edi+0x3]
6400ebf5:	or     esi,edx
6400ebf7:	shld   esi,ecx,0x8
6400ebfb:	shl    ecx,0x8
6400ebfe:	cdq    
6400ebff:	or     ecx,eax
6400ec01:	movzx  eax,BYTE PTR [edi+0x4]
6400ec05:	or     esi,edx
6400ec07:	shld   esi,ecx,0x8
6400ec0b:	shl    ecx,0x8
6400ec0e:	cdq    
6400ec0f:	or     ecx,eax
6400ec11:	movzx  eax,BYTE PTR [edi+0x5]
6400ec15:	or     esi,edx
6400ec17:	shld   esi,ecx,0x8
6400ec1b:	shl    ecx,0x8
6400ec1e:	cdq    
6400ec1f:	or     ecx,eax
6400ec21:	movzx  eax,BYTE PTR [edi+0x6]
6400ec25:	or     esi,edx
6400ec27:	shld   esi,ecx,0x8
6400ec2b:	cdq    
6400ec2c:	shl    ecx,0x8
6400ec2f:	or     ecx,eax
6400ec31:	movzx  eax,BYTE PTR [edi+0x7]
6400ec35:	or     esi,edx
6400ec37:	mov    ebp,ecx
6400ec39:	mov    ecx,esi
6400ec3b:	shld   ecx,ebp,0x8
6400ec3f:	cdq    
6400ec40:	shl    ebp,0x8
6400ec43:	or     ebp,eax
6400ec45:	mov    ebx,0x2
6400ec4a:	or     ecx,edx
6400ec4c:	jmp    0x6400f028
6400ec51:	mov    al,BYTE PTR [edi]
6400ec53:	jmp    0x6400e962
6400ec58:	xor    edx,edx
6400ec5a:	mov    dh,BYTE PTR [edi]
6400ec5c:	mov    dl,BYTE PTR [edi+0x1]
6400ec5f:	movzx  eax,dx
6400ec62:	test   ax,ax
6400ec65:	movsx  eax,ax
6400ec68:	jmp    0x6400e967
6400ec6d:	movzx  ecx,BYTE PTR [edi+0x2]
6400ec71:	movzx  edx,BYTE PTR [edi+0x3]
6400ec75:	xor    eax,eax
6400ec77:	mov    ah,BYTE PTR [edi]
6400ec79:	mov    al,BYTE PTR [edi+0x1]
6400ec7c:	shl    eax,0x8
6400ec7f:	or     eax,ecx
6400ec81:	shl    eax,0x8
6400ec84:	or     eax,edx
6400ec86:	jmp    0x6400e967
6400ec8b:	mov    ebx,0x3
6400ec90:	jmp    0x6400f030
6400ec95:	movzx  eax,BYTE PTR [edi]
6400ec98:	cdq    
6400ec99:	shld   edx,eax,0x8
6400ec9d:	shl    eax,0x8
6400eca0:	mov    ecx,eax
6400eca2:	movzx  eax,BYTE PTR [edi+0x1]
6400eca6:	mov    esi,edx
6400eca8:	cdq    
6400eca9:	or     ecx,eax
6400ecab:	movzx  eax,BYTE PTR [edi+0x2]
6400ecaf:	or     esi,edx
6400ecb1:	shld   esi,ecx,0x8
6400ecb5:	shl    ecx,0x8
6400ecb8:	cdq    
6400ecb9:	or     ecx,eax
6400ecbb:	movzx  eax,BYTE PTR [edi+0x3]
6400ecbf:	or     esi,edx
6400ecc1:	shld   esi,ecx,0x8
6400ecc5:	shl    ecx,0x8
6400ecc8:	cdq    
6400ecc9:	or     ecx,eax
6400eccb:	movzx  eax,BYTE PTR [edi+0x4]
6400eccf:	or     esi,edx
6400ecd1:	shld   esi,ecx,0x8
6400ecd5:	shl    ecx,0x8
6400ecd8:	cdq    
6400ecd9:	or     ecx,eax
6400ecdb:	movzx  eax,BYTE PTR [edi+0x5]
6400ecdf:	or     esi,edx
6400ece1:	shld   esi,ecx,0x8
6400ece5:	shl    ecx,0x8
6400ece8:	cdq    
6400ece9:	or     ecx,eax
6400eceb:	movzx  eax,BYTE PTR [edi+0x6]
6400ecef:	or     esi,edx
6400ecf1:	shld   esi,ecx,0x8
6400ecf5:	cdq    
6400ecf6:	shl    ecx,0x8
6400ecf9:	or     ecx,eax
6400ecfb:	movzx  eax,BYTE PTR [edi+0x7]
6400ecff:	or     esi,edx
6400ed01:	mov    ebp,ecx
6400ed03:	mov    ecx,esi
6400ed05:	shld   ecx,ebp,0x8
6400ed09:	cdq    
6400ed0a:	shl    ebp,0x8
6400ed0d:	or     ebp,eax
6400ed0f:	or     ecx,edx
6400ed11:	jl     0x6400ed23
6400ed13:	jg     0x6400ed19
6400ed15:	test   ebp,ebp
6400ed17:	jb     0x6400ed23
6400ed19:	mov    ebx,0x2
6400ed1e:	jmp    0x6400f028
6400ed23:	mov    ebx,0x3
6400ed28:	jmp    0x6400f028
6400ed2d:	mov    edx,DWORD PTR [esp+0x58]
6400ed31:	mov    ebx,0x5
6400ed36:	mov    DWORD PTR [esp+0x3c],edi
6400ed3a:	mov    ebp,esi
6400ed3c:	mov    BYTE PTR [edx+0x4],0x1
6400ed40:	jmp    0x6400f02c
6400ed45:	cmp    DWORD PTR [esp+0x60],0x20
6400ed4a:	jae    0x6400f1a5
6400ed50:	mov    eax,DWORD PTR [esp+0x60]
6400ed54:	mov    ecx,DWORD PTR [esp+0x58]
6400ed58:	lea    eax,[eax+eax*4]
6400ed5b:	lea    esi,[ecx+eax*8+0x18]
6400ed5f:	xor    eax,eax
6400ed61:	mov    ah,BYTE PTR [edi]
6400ed63:	mov    al,BYTE PTR [edi+0x1]
6400ed66:	mov    DWORD PTR [esi],0x6
6400ed6c:	mov    DWORD PTR [esi+0x8],0x0
6400ed73:	mov    ebx,DWORD PTR [ecx]
6400ed75:	shl    eax,0x4
6400ed78:	call   0x6400e820
6400ed7d:	test   eax,eax
6400ed7f:	mov    DWORD PTR [esi+0xc],eax
6400ed82:	je     0x6400f1a5
6400ed88:	xor    ecx,ecx
6400ed8a:	mov    ch,BYTE PTR [edi]
6400ed8c:	mov    cl,BYTE PTR [edi+0x1]
6400ed8f:	test   cx,cx
6400ed92:	jne    0x6400eda9
6400ed94:	mov    edx,DWORD PTR [esi+0x4]
6400ed97:	mov    ebx,DWORD PTR [esi]
6400ed99:	mov    ebp,DWORD PTR [esi+0x8]
6400ed9c:	mov    DWORD PTR [esp+0x34],edx
6400eda0:	mov    DWORD PTR [esp+0x3c],eax
6400eda4:	jmp    0x6400f02c
6400eda9:	xor    ecx,ecx
6400edab:	add    DWORD PTR [esp+0x60],0x1
6400edb0:	mov    DWORD PTR [esi+0x14],0x0
6400edb7:	mov    ch,BYTE PTR [edi]
6400edb9:	mov    cl,BYTE PTR [edi+0x1]
6400edbc:	mov    DWORD PTR [esi+0x10],ecx
6400edbf:	jmp    0x6400f15a
6400edc4:	cmp    DWORD PTR [esp+0x60],0x20
6400edc9:	jae    0x6400f1a5
6400edcf:	mov    eax,DWORD PTR [esp+0x60]
6400edd3:	mov    ecx,DWORD PTR [esp+0x58]
6400edd7:	lea    edx,[eax+eax*4]
6400edda:	xor    eax,eax
6400eddc:	mov    ah,BYTE PTR [edi]
6400edde:	lea    esi,[ecx+edx*8+0x18]
6400ede2:	movzx  edx,BYTE PTR [edi+0x2]
6400ede6:	mov    al,BYTE PTR [edi+0x1]
6400ede9:	shl    eax,0x8
6400edec:	or     eax,edx
6400edee:	movzx  edx,BYTE PTR [edi+0x3]
6400edf2:	shl    eax,0x8
6400edf5:	or     eax,edx
6400edf7:	mov    DWORD PTR [esi],0x6
6400edfd:	mov    DWORD PTR [esi+0x8],0x0
6400ee04:	mov    ebx,DWORD PTR [ecx]
6400ee06:	shl    eax,0x4
6400ee09:	call   0x6400e820
6400ee0e:	test   eax,eax
6400ee10:	mov    DWORD PTR [esi+0xc],eax
6400ee13:	je     0x6400f1a5
6400ee19:	movzx  ecx,BYTE PTR [edi+0x2]
6400ee1d:	movzx  edx,BYTE PTR [edi+0x3]
6400ee21:	xor    eax,eax
6400ee23:	mov    ah,BYTE PTR [edi]
6400ee25:	mov    al,BYTE PTR [edi+0x1]
6400ee28:	shl    eax,0x8
6400ee2b:	or     eax,ecx
6400ee2d:	shl    eax,0x8
6400ee30:	or     eax,edx
6400ee32:	je     0x6400f019
6400ee38:	xor    edx,edx
6400ee3a:	mov    DWORD PTR [esi+0x14],0x0
6400ee41:	mov    dh,BYTE PTR [edi]
6400ee43:	movzx  eax,BYTE PTR [edi+0x2]
6400ee47:	movzx  ecx,BYTE PTR [edi+0x3]
6400ee4b:	mov    dl,BYTE PTR [edi+0x1]
6400ee4e:	shl    edx,0x8
6400ee51:	or     edx,eax
6400ee53:	shl    edx,0x8
6400ee56:	or     edx,ecx
6400ee58:	add    DWORD PTR [esp+0x60],0x1
6400ee5d:	jmp    0x6400f157
6400ee62:	cmp    DWORD PTR [esp+0x60],0x20
6400ee67:	jae    0x6400f1a5
6400ee6d:	mov    eax,DWORD PTR [esp+0x60]
6400ee71:	mov    ecx,DWORD PTR [esp+0x58]
6400ee75:	lea    edx,[eax+eax*4]
6400ee78:	xor    eax,eax
6400ee7a:	mov    ah,BYTE PTR [edi]
6400ee7c:	lea    esi,[ecx+edx*8+0x18]
6400ee80:	mov    al,BYTE PTR [edi+0x1]
6400ee83:	mov    DWORD PTR [esi],0x7
6400ee89:	mov    DWORD PTR [esi+0x8],0x0
6400ee90:	mov    ebx,DWORD PTR [ecx]
6400ee92:	shl    eax,0x5
6400ee95:	call   0x6400e820
6400ee9a:	test   eax,eax
6400ee9c:	mov    DWORD PTR [esi+0xc],eax
6400ee9f:	je     0x6400f1a5
6400eea5:	xor    eax,eax
6400eea7:	mov    ah,BYTE PTR [edi]
6400eea9:	mov    al,BYTE PTR [edi+0x1]
6400eeac:	test   ax,ax
6400eeaf:	jne    0x6400eec9
6400eeb1:	mov    ecx,DWORD PTR [esi+0x4]
6400eeb4:	mov    edx,DWORD PTR [esi+0xc]
6400eeb7:	mov    ebx,DWORD PTR [esi]
6400eeb9:	mov    ebp,DWORD PTR [esi+0x8]
6400eebc:	mov    DWORD PTR [esp+0x34],ecx
6400eec0:	mov    DWORD PTR [esp+0x3c],edx
6400eec4:	jmp    0x6400f02c
6400eec9:	xor    ecx,ecx
6400eecb:	mov    eax,0x1
6400eed0:	add    DWORD PTR [esp+0x60],eax
6400eed4:	mov    DWORD PTR [esi+0x14],eax
6400eed7:	mov    ch,BYTE PTR [edi]
6400eed9:	mov    cl,BYTE PTR [edi+0x1]
6400eedc:	mov    DWORD PTR [esi+0x10],ecx
6400eedf:	jmp    0x6400f15a
6400eee4:	cmp    DWORD PTR [esp+0x60],0x20
6400eee9:	jae    0x6400f1a5
6400eeef:	mov    eax,DWORD PTR [esp+0x60]
6400eef3:	mov    ecx,DWORD PTR [esp+0x58]
6400eef7:	lea    edx,[eax+eax*4]
6400eefa:	xor    eax,eax
6400eefc:	mov    ah,BYTE PTR [edi]
6400eefe:	lea    esi,[ecx+edx*8+0x18]
6400ef02:	movzx  edx,BYTE PTR [edi+0x2]
6400ef06:	mov    al,BYTE PTR [edi+0x1]
6400ef09:	shl    eax,0x8
6400ef0c:	or     eax,edx
6400ef0e:	movzx  edx,BYTE PTR [edi+0x3]
6400ef12:	shl    eax,0x8
6400ef15:	or     eax,edx
6400ef17:	mov    DWORD PTR [esi],0x7
6400ef1d:	mov    DWORD PTR [esi+0x8],0x0
6400ef24:	mov    ebx,DWORD PTR [ecx]
6400ef26:	shl    eax,0x5
6400ef29:	call   0x6400e820
6400ef2e:	test   eax,eax
6400ef30:	mov    DWORD PTR [esi+0xc],eax
6400ef33:	je     0x6400f1a5
6400ef39:	movzx  ecx,BYTE PTR [edi+0x2]
6400ef3d:	movzx  edx,BYTE PTR [edi+0x3]
6400ef41:	xor    eax,eax
6400ef43:	mov    ah,BYTE PTR [edi]
6400ef45:	mov    al,BYTE PTR [edi+0x1]
6400ef48:	shl    eax,0x8
6400ef4b:	or     eax,ecx
6400ef4d:	shl    eax,0x8
6400ef50:	or     eax,edx
6400ef52:	je     0x6400f019
6400ef58:	xor    edx,edx
6400ef5a:	mov    eax,0x1
6400ef5f:	mov    DWORD PTR [esi+0x14],eax
6400ef62:	mov    dh,BYTE PTR [edi]
6400ef64:	movzx  ecx,BYTE PTR [edi+0x2]
6400ef68:	mov    dl,BYTE PTR [edi+0x1]
6400ef6b:	shl    edx,0x8
6400ef6e:	or     edx,ecx
6400ef70:	movzx  ecx,BYTE PTR [edi+0x3]
6400ef74:	shl    edx,0x8
6400ef77:	or     edx,ecx
6400ef79:	add    DWORD PTR [esp+0x60],eax
6400ef7d:	jmp    0x6400f157
6400ef82:	cmp    al,0x90
6400ef84:	jb     0x6400efd3
6400ef86:	cmp    al,0x9f
6400ef88:	ja     0x6400efd3
6400ef8a:	cmp    DWORD PTR [esp+0x60],ecx
6400ef8e:	jae    0x6400f1a5
6400ef94:	mov    ecx,DWORD PTR [esp+0x60]
6400ef98:	lea    edx,[ecx+ecx*4]
6400ef9b:	mov    ecx,DWORD PTR [esp+0x58]
6400ef9f:	lea    esi,[ecx+edx*8+0x18]
6400efa3:	and    eax,0xf
6400efa6:	call   0x6400e880
6400efab:	test   eax,eax
6400efad:	jl     0x6400f1a5
6400efb3:	mov    eax,DWORD PTR [esp+0x14]
6400efb7:	test   BYTE PTR [eax],0xf
6400efba:	je     0x6400f019
6400efbc:	mov    DWORD PTR [esi+0x14],0x0
6400efc3:	movzx  edx,BYTE PTR [eax]
6400efc6:	and    edx,0xf
6400efc9:	add    DWORD PTR [esp+0x60],0x1
6400efce:	jmp    0x6400f157
6400efd3:	cmp    al,0x80
6400efd5:	jb     0x6400f1a5
6400efdb:	cmp    al,0x8f
6400efdd:	ja     0x6400f1a5
6400efe3:	cmp    DWORD PTR [esp+0x60],ecx
6400efe7:	jae    0x6400f1a5
6400efed:	mov    ecx,DWORD PTR [esp+0x60]
6400eff1:	lea    edx,[ecx+ecx*4]
6400eff4:	mov    ecx,DWORD PTR [esp+0x58]
6400eff8:	lea    esi,[ecx+edx*8+0x18]
6400effc:	and    eax,0xf
6400efff:	call   0x6400e8b0
6400f004:	test   eax,eax
6400f006:	jl     0x6400f1a5
6400f00c:	mov    eax,DWORD PTR [esp+0x14]
6400f010:	test   BYTE PTR [eax],0xf
6400f013:	jne    0x6400f145
6400f019:	mov    eax,DWORD PTR [esi+0x4]
6400f01c:	mov    ecx,DWORD PTR [esi+0xc]
6400f01f:	mov    ebp,DWORD PTR [esi+0x8]
6400f022:	mov    ebx,DWORD PTR [esi]
6400f024:	mov    DWORD PTR [esp+0x34],eax
6400f028:	mov    DWORD PTR [esp+0x3c],ecx
6400f02c:	mov    DWORD PTR [esp+0x38],ebp
6400f030:	mov    eax,DWORD PTR [esp+0x60]
6400f034:	lea    edx,[eax+eax*4]
6400f037:	mov    eax,DWORD PTR [esp+0x58]
6400f03b:	lea    edx,[eax+edx*8+0x18]
6400f03f:	lea    eax,[edx-0x28]
6400f042:	add    edx,0xfffffff0
6400f045:	mov    esi,0x1
6400f04a:	lea    ebx,[ebx+0x0]
6400f050:	cmp    DWORD PTR [esp+0x60],0x0
6400f055:	je     0x6400f181
6400f05b:	mov    ecx,DWORD PTR [eax+0x14]
6400f05e:	sub    ecx,0x0
6400f061:	je     0x6400f0dd
6400f063:	sub    ecx,esi
6400f065:	je     0x6400f128
6400f06b:	sub    ecx,esi
6400f06d:	jne    0x6400f1a5
6400f073:	mov    ecx,DWORD PTR [edx+0x4]
6400f076:	mov    esi,DWORD PTR [edx]
6400f078:	mov    DWORD PTR [esp+0x44],ecx
6400f07c:	mov    ecx,DWORD PTR [edx+0x8]
6400f07f:	mov    DWORD PTR [esp+0x48],ecx
6400f083:	mov    ecx,DWORD PTR [edx+0xc]
6400f086:	mov    DWORD PTR [esp+0x4c],ecx
6400f08a:	mov    ecx,DWORD PTR [eax+0x8]
6400f08d:	shl    ecx,0x5
6400f090:	add    ecx,DWORD PTR [eax+0xc]
6400f093:	mov    DWORD PTR [ecx],esi
6400f095:	mov    esi,DWORD PTR [esp+0x44]
6400f099:	mov    DWORD PTR [ecx+0x4],esi
6400f09c:	mov    esi,DWORD PTR [esp+0x48]
6400f0a0:	mov    DWORD PTR [ecx+0x8],esi
6400f0a3:	mov    esi,DWORD PTR [esp+0x4c]
6400f0a7:	mov    DWORD PTR [ecx+0xc],esi
6400f0aa:	mov    ecx,DWORD PTR [eax+0x8]
6400f0ad:	mov    esi,DWORD PTR [eax+0xc]
6400f0b0:	shl    ecx,0x5
6400f0b3:	lea    ecx,[ecx+esi*1+0x10]
6400f0b7:	mov    esi,DWORD PTR [esp+0x34]
6400f0bb:	mov    DWORD PTR [ecx],ebx
6400f0bd:	mov    DWORD PTR [ecx+0x4],esi
6400f0c0:	mov    esi,DWORD PTR [esp+0x3c]
6400f0c4:	mov    DWORD PTR [ecx+0x8],ebp
6400f0c7:	mov    DWORD PTR [ecx+0xc],esi
6400f0ca:	mov    esi,0x1
6400f0cf:	add    DWORD PTR [eax+0x8],esi
6400f0d2:	add    DWORD PTR [eax+0x10],0xffffffff
6400f0d6:	je     0x6400f102
6400f0d8:	mov    DWORD PTR [eax+0x14],esi
6400f0db:	jmp    0x6400f15a
6400f0dd:	mov    ecx,DWORD PTR [eax+0x8]
6400f0e0:	shl    ecx,0x4
6400f0e3:	add    ecx,DWORD PTR [eax+0xc]
6400f0e6:	mov    DWORD PTR [ecx],ebx
6400f0e8:	mov    ebx,DWORD PTR [esp+0x34]
6400f0ec:	mov    DWORD PTR [ecx+0x4],ebx
6400f0ef:	mov    ebx,DWORD PTR [esp+0x3c]
6400f0f3:	mov    DWORD PTR [ecx+0x8],ebp
6400f0f6:	mov    DWORD PTR [ecx+0xc],ebx
6400f0f9:	add    DWORD PTR [eax+0x8],esi
6400f0fc:	add    DWORD PTR [eax+0x10],0xffffffff
6400f100:	jne    0x6400f15a
6400f102:	mov    ecx,DWORD PTR [eax+0x4]
6400f105:	mov    ebp,DWORD PTR [eax+0x8]
6400f108:	mov    ebx,DWORD PTR [eax]
6400f10a:	sub    DWORD PTR [esp+0x60],esi
6400f10e:	mov    DWORD PTR [esp+0x34],ecx
6400f112:	mov    ecx,DWORD PTR [eax+0xc]
6400f115:	sub    eax,0x28
6400f118:	mov    DWORD PTR [esp+0x38],ebp
6400f11c:	mov    DWORD PTR [esp+0x3c],ecx
6400f120:	sub    edx,0x28
6400f123:	jmp    0x6400f050
6400f128:	mov    edx,DWORD PTR [esp+0x34]
6400f12c:	mov    ecx,DWORD PTR [esp+0x3c]
6400f130:	mov    DWORD PTR [eax+0x18],ebx
6400f133:	mov    DWORD PTR [eax+0x1c],edx
6400f136:	mov    DWORD PTR [eax+0x20],ebp
6400f139:	mov    DWORD PTR [eax+0x24],ecx
6400f13c:	mov    DWORD PTR [eax+0x14],0x2
6400f143:	jmp    0x6400f15a
6400f145:	mov    ecx,0x1
6400f14a:	mov    DWORD PTR [esi+0x14],ecx
6400f14d:	movzx  edx,BYTE PTR [eax]
6400f150:	and    edx,0xf
6400f153:	add    DWORD PTR [esp+0x60],ecx
6400f157:	mov    DWORD PTR [esi+0x10],edx
6400f15a:	mov    eax,DWORD PTR [esp+0x14]
6400f15e:	add    eax,0x1
6400f161:	cmp    eax,DWORD PTR [esp+0x20]
6400f165:	mov    DWORD PTR [esp+0x18],0x0
6400f16d:	mov    DWORD PTR [esp+0x14],eax
6400f171:	je     0x6400f1a1
6400f173:	mov    edx,DWORD PTR [esp+0x20]
6400f177:	mov    ecx,0x20
6400f17c:	jmp    0x6400e930
6400f181:	mov    eax,DWORD PTR [esp+0x58]
6400f185:	mov    ecx,DWORD PTR [esp+0x34]
6400f189:	mov    edx,DWORD PTR [esp+0x3c]
6400f18d:	add    DWORD PTR [esp+0x14],esi
6400f191:	mov    DWORD PTR [eax+0x18],ebx
6400f194:	mov    DWORD PTR [eax+0x1c],ecx
6400f197:	mov    DWORD PTR [eax+0x20],ebp
6400f19a:	mov    DWORD PTR [eax+0x24],edx
6400f19d:	mov    eax,esi
6400f19f:	jmp    0x6400f1a8
6400f1a1:	xor    eax,eax
6400f1a3:	jmp    0x6400f1a8
6400f1a5:	or     eax,0xffffffff
6400f1a8:	mov    ecx,DWORD PTR [esp+0x58]
6400f1ac:	mov    edx,DWORD PTR [esp+0x18]
6400f1b0:	mov    DWORD PTR [ecx+0x8],edx
6400f1b3:	mov    edx,DWORD PTR [esp+0x1c]
6400f1b7:	mov    DWORD PTR [ecx+0xc],edx
6400f1ba:	mov    edx,DWORD PTR [esp+0x60]
6400f1be:	mov    DWORD PTR [ecx+0x10],edx
6400f1c1:	mov    ecx,DWORD PTR [esp+0x14]
6400f1c5:	sub    ecx,DWORD PTR [esp+0x5c]
6400f1c9:	mov    edx,DWORD PTR [esp+0x64]
6400f1cd:	pop    edi
6400f1ce:	pop    esi
6400f1cf:	pop    ebp
6400f1d0:	mov    DWORD PTR [edx],ecx
6400f1d2:	pop    ebx
6400f1d3:	add    esp,0x44
6400f1d6:	ret    
6400f1d7:	nop
6400f1d8:	mov    dl,0xe9
6400f1da:	add    BYTE PTR [ecx+edi*4-0x17],ah
6400f1de:	add    BYTE PTR [esp+ecx*8-0x17],ah
6400f1e2:	add    BYTE PTR [esi+ebx*8-0x17],ah
6400f1e6:	add    BYTE PTR [esi+edi*8-0x17],ah
6400f1ea:	add    BYTE PTR [ebp+eiz*4-0xf],ah
6400f1ee:	add    BYTE PTR [eax+eax*1+0x5],ah
6400f1f2:	add    DWORD PTR [edx],eax
6400f1f4:	add    eax,0x5050505
6400f1f9:	add    eax,0x3030303
6400f1fe:	add    eax,DWORD PTR [ebx]
6400f200:	add    eax,DWORD PTR [ebx]
6400f202:	add    eax,DWORD PTR [ebx]
6400f204:	add    eax,0x5050505
6400f209:	add    eax,0x4040404
6400f20e:	add    al,0x4
6400f210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
6400f211:	jmp    0x6400:0xead96400
6400f218:	outs   dx,DWORD PTR ds:[esi]
6400f219:	jmp    0x6400f21b
6400f21b:	fs sub ebx,0x0
6400f21f:	fs sahf 
6400f221:	jmp    0x6400f223
6400f223:	fs retf 
6400f225:	jmp    0x6400f227
6400f227:	fs push ecx
6400f229:	in     al,dx
6400f22a:	add    BYTE PTR [eax+ebx*2-0x14],ah
6400f22e:	add    BYTE PTR [ebp+ebp*2-0x14],ah
6400f232:	add    BYTE PTR [ebp+edx*4-0x14],ah
6400f236:	add    BYTE PTR [ebp+eiz*4-0xf],ah
6400f23a:	add    BYTE PTR [ebp+eiz*4-0xf],ah
6400f23e:	add    BYTE PTR [ebp+eiz*4-0xf],ah
6400f242:	add    BYTE PTR [ebp+eiz*4-0xf],ah
6400f246:	add    BYTE PTR [ebp+eiz*4-0xf],ah
6400f24a:	add    BYTE PTR [ebp+eiz*4-0xf],ah
6400f24e:	add    BYTE PTR [esp+edi*2-0x16],ah
6400f252:	add    BYTE PTR [ecx+ecx*4-0x16],ah
6400f256:	add    BYTE PTR [ebp+eax*2-0x13],ah
6400f25a:	add    BYTE PTR [esp+eax*8-0x13],ah
6400f25e:	add    BYTE PTR [edx+eiz*2-0x12],ah
6400f262:	add    BYTE PTR [esp+eiz*8-0x12],ah
6400f266:	add    BYTE PTR [ebp+ebp*1-0x13],ah
6400f26a:	add    BYTE PTR [esp+ecx*8-0x34],ah
6400f26e:	int3   
6400f26f:	int3   
6400f270:	push   ebp
6400f271:	mov    ebp,esp
6400f273:	and    esp,0xfffffff8
6400f276:	sub    esp,0x51c
6400f27c:	push   ebx
6400f27d:	push   esi
6400f27e:	mov    esi,DWORD PTR [ebp+0x10]
6400f281:	xor    ebx,ebx
6400f283:	xor    eax,eax
6400f285:	cmp    esi,ebx
6400f287:	push   edi
6400f288:	mov    DWORD PTR [esp+0xc],eax
6400f28c:	je     0x6400f294
6400f28e:	mov    eax,DWORD PTR [esi]
6400f290:	mov    DWORD PTR [esp+0xc],eax
6400f294:	mov    edi,DWORD PTR [ebp+0xc]
6400f297:	cmp    edi,eax
6400f299:	ja     0x6400f2a4
6400f29b:	xor    eax,eax
6400f29d:	pop    edi
6400f29e:	pop    esi
6400f29f:	pop    ebx
6400f2a0:	mov    esp,ebp
6400f2a2:	pop    ebp
6400f2a3:	ret    
6400f2a4:	mov    edx,DWORD PTR [ebp+0x8]
6400f2a7:	xor    eax,eax
6400f2a9:	lea    ecx,[esp+0xc]
6400f2ad:	push   ecx
6400f2ae:	mov    DWORD PTR [esp+0x2c],eax
6400f2b2:	mov    DWORD PTR [esp+0x30],eax
6400f2b6:	mov    DWORD PTR [esp+0x34],eax
6400f2ba:	mov    DWORD PTR [esp+0x38],eax
6400f2be:	mov    eax,DWORD PTR [ebp+0x14]
6400f2c1:	push   edi
6400f2c2:	mov    DWORD PTR [esp+0x18],eax
6400f2c6:	push   edx
6400f2c7:	lea    eax,[esp+0x1c]
6400f2cb:	push   eax
6400f2cc:	mov    DWORD PTR [esp+0x28],ebx
6400f2d0:	mov    DWORD PTR [esp+0x2c],ebx
6400f2d4:	mov    DWORD PTR [esp+0x30],ebx
6400f2d8:	mov    BYTE PTR [esp+0x24],bl
6400f2dc:	call   0x6400e8e0
6400f2e1:	add    esp,0x10
6400f2e4:	cmp    eax,ebx
6400f2e6:	jge    0x6400f2f2
6400f2e8:	or     eax,0xffffffff
6400f2eb:	pop    edi
6400f2ec:	pop    esi
6400f2ed:	pop    ebx
6400f2ee:	mov    esp,ebp
6400f2f0:	pop    ebp
6400f2f1:	ret    
6400f2f2:	cmp    esi,ebx
6400f2f4:	mov    ecx,DWORD PTR [esp+0xc]
6400f2f8:	je     0x6400f2fc
6400f2fa:	mov    DWORD PTR [esi],ecx
6400f2fc:	cmp    eax,ebx
6400f2fe:	je     0x6400f29b
6400f300:	mov    eax,DWORD PTR [ebp+0x18]
6400f303:	mov    edx,DWORD PTR [esp+0x28]
6400f307:	mov    DWORD PTR [eax],edx
6400f309:	mov    edx,DWORD PTR [esp+0x2c]
6400f30d:	mov    DWORD PTR [eax+0x4],edx
6400f310:	mov    edx,DWORD PTR [esp+0x30]
6400f314:	mov    DWORD PTR [eax+0x8],edx
6400f317:	mov    edx,DWORD PTR [esp+0x34]
6400f31b:	cmp    ecx,edi
6400f31d:	pop    edi
6400f31e:	mov    DWORD PTR [eax+0xc],edx
6400f321:	sbb    eax,eax
6400f323:	pop    esi
6400f324:	add    eax,0x2
6400f327:	pop    ebx
6400f328:	mov    esp,ebp
6400f32a:	pop    ebp
6400f32b:	ret    
6400f32c:	int3   
6400f32d:	int3   
6400f32e:	int3   
6400f32f:	int3   
6400f330:	mov    eax,DWORD PTR [esp+0x8]
6400f334:	sub    eax,0x1
6400f337:	jne    0x6400f342
6400f339:	mov    eax,DWORD PTR [esp+0x4]
6400f33d:	mov    ds:0x6402d4c4,eax
6400f342:	mov    eax,0x1
6400f347:	ret    0xc
6400f34a:	int3   
6400f34b:	int3   
6400f34c:	int3   
6400f34d:	int3   
6400f34e:	int3   
6400f34f:	int3   
6400f350:	cmp    BYTE PTR ds:0x6402d4c0,0x0
6400f357:	jne    0x6400f3b6
6400f359:	push   esi
6400f35a:	push   edi
6400f35b:	push   0x640242fc
6400f360:	mov    BYTE PTR ds:0x6402d4c0,0x1
6400f367:	call   DWORD PTR ds:0x64024018
6400f36d:	push   0x640242d8
6400f372:	push   0xb
6400f374:	push   0x640242cc
6400f379:	mov    esi,eax
6400f37b:	call   0x64006890
6400f380:	mov    edi,DWORD PTR ds:0x64024014
6400f386:	add    esp,0xc
6400f389:	push   eax
6400f38a:	push   esi
6400f38b:	call   edi
6400f38d:	push   0x640242a4
6400f392:	push   0x19
6400f394:	push   0x64024288
6400f399:	mov    ds:0x6402d4b8,eax
6400f39e:	call   0x64006890
6400f3a3:	add    esp,0xc
6400f3a6:	push   eax
6400f3a7:	push   esi
6400f3a8:	call   edi
6400f3aa:	pop    edi
6400f3ab:	mov    ds:0x6402d4bc,eax
6400f3b0:	pop    esi
6400f3b1:	jmp    0x640116c0
6400f3b6:	ret    
6400f3b7:	int3   
6400f3b8:	int3   
6400f3b9:	int3   
6400f3ba:	int3   
6400f3bb:	int3   
6400f3bc:	int3   
6400f3bd:	int3   
6400f3be:	int3   
6400f3bf:	int3   
6400f3c0:	call   0x6400f350
6400f3c5:	mov    eax,ds:0x6402d4b8
6400f3ca:	test   eax,eax
6400f3cc:	je     0x6400f3d0
6400f3ce:	jmp    eax
6400f3d0:	ret    0x8
6400f3d3:	int3   
6400f3d4:	int3   
6400f3d5:	int3   
6400f3d6:	int3   
6400f3d7:	int3   
6400f3d8:	int3   
6400f3d9:	int3   
6400f3da:	int3   
6400f3db:	int3   
6400f3dc:	int3   
6400f3dd:	int3   
6400f3de:	int3   
6400f3df:	int3   
6400f3e0:	call   0x6400f350
6400f3e5:	mov    eax,ds:0x6402d4bc
6400f3ea:	test   eax,eax
6400f3ec:	je     0x6400f3f0
6400f3ee:	jmp    eax
6400f3f0:	ret    0x4
6400f3f3:	int3   
6400f3f4:	int3   
6400f3f5:	int3   
6400f3f6:	int3   
6400f3f7:	int3   
6400f3f8:	int3   
6400f3f9:	int3   
6400f3fa:	int3   
6400f3fb:	int3   
6400f3fc:	int3   
6400f3fd:	int3   
6400f3fe:	int3   
6400f3ff:	int3   
6400f400:	mov    eax,DWORD PTR [esp+0x4]
6400f404:	mov    edx,DWORD PTR [ecx]
6400f406:	mov    DWORD PTR [eax],edx
6400f408:	mov    edx,DWORD PTR [ecx+0x4]
6400f40b:	mov    DWORD PTR [eax+0x4],edx
6400f40e:	mov    edx,DWORD PTR [ecx+0x8]
6400f411:	mov    ecx,DWORD PTR [ecx+0xc]
6400f414:	mov    DWORD PTR [eax+0x8],edx
6400f417:	mov    DWORD PTR [eax+0xc],ecx
6400f41a:	ret    0x4
6400f41d:	int3   
6400f41e:	int3   
6400f41f:	int3   
6400f420:	jmp    0x64011e8f
6400f425:	int3   
6400f426:	int3   
6400f427:	int3   
6400f428:	int3   
6400f429:	int3   
6400f42a:	int3   
6400f42b:	int3   
6400f42c:	int3   
6400f42d:	int3   
6400f42e:	int3   
6400f42f:	int3   
6400f430:	push   esi
6400f431:	mov    esi,ecx
6400f433:	call   0x64011e8f
6400f438:	test   BYTE PTR [esp+0x8],0x1
6400f43d:	je     0x6400f448
6400f43f:	push   esi
6400f440:	call   0x64011d22
6400f445:	add    esp,0x4
6400f448:	mov    eax,esi
6400f44a:	pop    esi
6400f44b:	ret    0x4
6400f44e:	int3   
6400f44f:	int3   
6400f450:	push   ebx
6400f451:	mov    ebx,DWORD PTR ds:0x6402404c
6400f457:	push   esi
6400f458:	push   edi
6400f459:	mov    edi,DWORD PTR [esp+0x10]
6400f45d:	xor    esi,esi
6400f45f:	nop
6400f460:	lea    eax,[esp+0x10]
6400f464:	push   0x0
6400f466:	push   eax
6400f467:	mov    DWORD PTR [esp+0x18],0x0
6400f46f:	call   0x6400e330
6400f474:	call   eax
6400f476:	test   eax,eax
6400f478:	je     0x6400f489
6400f47a:	cmp    edi,0xffffffff
6400f47d:	je     0x6400f489
6400f47f:	add    esi,0x3e8
6400f485:	cmp    esi,edi
6400f487:	ja     0x6400f492
6400f489:	push   0x3e8
6400f48e:	call   ebx
6400f490:	jmp    0x6400f460
6400f492:	pop    edi
6400f493:	pop    esi
6400f494:	mov    al,0x1
6400f496:	pop    ebx
6400f497:	ret    
6400f498:	int3   
6400f499:	int3   
6400f49a:	int3   
6400f49b:	int3   
6400f49c:	int3   
6400f49d:	int3   
6400f49e:	int3   
6400f49f:	int3   
6400f4a0:	mov    ecx,DWORD PTR [esp+0x4]
6400f4a4:	sub    esp,0xc
6400f4a7:	test   ecx,ecx
6400f4a9:	ja     0x6400f4c1
6400f4ab:	xor    ecx,ecx
6400f4ad:	lea    edx,[ecx*4+0x0]
6400f4b4:	push   edx
6400f4b5:	call   0x64012101
6400f4ba:	add    esp,0x4
6400f4bd:	add    esp,0xc
6400f4c0:	ret    
6400f4c1:	or     eax,0xffffffff
6400f4c4:	xor    edx,edx
6400f4c6:	div    ecx
6400f4c8:	cmp    eax,0x4
6400f4cb:	jae    0x6400f4ad
6400f4cd:	lea    eax,[esp+0x10]
6400f4d1:	push   eax
6400f4d2:	lea    ecx,[esp+0x4]
6400f4d6:	mov    DWORD PTR [esp+0x14],0x0
6400f4de:	call   0x64011d7d
6400f4e3:	push   0x64029c9c
6400f4e8:	lea    ecx,[esp+0x4]
6400f4ec:	push   ecx
6400f4ed:	mov    DWORD PTR [esp+0x8],0x6402425c
6400f4f5:	call   0x6401216b
6400f4fa:	int3   
6400f4fb:	int3   
6400f4fc:	int3   
6400f4fd:	int3   
6400f4fe:	int3   
6400f4ff:	int3   
6400f500:	push   esi
6400f501:	mov    esi,DWORD PTR [ecx]
6400f503:	test   esi,esi
6400f505:	je     0x6400f516
6400f507:	push   esi
6400f508:	call   0x6400e780
6400f50d:	push   esi
6400f50e:	call   0x64011d22
6400f513:	add    esp,0x8
6400f516:	pop    esi
6400f517:	ret    
6400f518:	int3   
6400f519:	int3   
6400f51a:	int3   
6400f51b:	int3   
6400f51c:	int3   
6400f51d:	int3   
6400f51e:	int3   
6400f51f:	int3   
6400f520:	push   esi
6400f521:	mov    esi,DWORD PTR [ecx+0x10]
6400f524:	test   esi,esi
6400f526:	je     0x6400f537
6400f528:	push   esi
6400f529:	call   0x6400e780
6400f52e:	push   esi
6400f52f:	call   0x64011d22
6400f534:	add    esp,0x8
6400f537:	pop    esi
6400f538:	ret    
6400f539:	int3   
6400f53a:	int3   
6400f53b:	int3   
6400f53c:	int3   
6400f53d:	int3   
6400f53e:	int3   
6400f53f:	int3   
6400f540:	mov    ecx,DWORD PTR [esp+0x8]
6400f544:	test   ecx,ecx
6400f546:	jne    0x6400f552
6400f548:	push   0x80004005
6400f54d:	call   0x64001040
6400f552:	mov    eax,DWORD PTR [esp+0x4]
6400f556:	mov    eax,DWORD PTR [eax]
6400f558:	mov    dx,WORD PTR [eax]
6400f55b:	cmp    dx,WORD PTR [ecx]
6400f55e:	jne    0x6400f586
6400f560:	test   dx,dx
6400f563:	je     0x6400f57a
6400f565:	mov    dx,WORD PTR [eax+0x2]
6400f569:	cmp    dx,WORD PTR [ecx+0x2]
6400f56d:	jne    0x6400f586
6400f56f:	add    eax,0x4
6400f572:	add    ecx,0x4
6400f575:	test   dx,dx
6400f578:	jne    0x6400f558
6400f57a:	xor    eax,eax
6400f57c:	xor    ecx,ecx
6400f57e:	test   eax,eax
6400f580:	setne  cl
6400f583:	mov    al,cl
6400f585:	ret    
6400f586:	sbb    eax,eax
6400f588:	sbb    eax,0xffffffff
6400f58b:	xor    ecx,ecx
6400f58d:	test   eax,eax
6400f58f:	setne  cl
6400f592:	mov    al,cl
6400f594:	ret    
6400f595:	int3   
6400f596:	int3   
6400f597:	int3   
6400f598:	int3   
6400f599:	int3   
6400f59a:	int3   
6400f59b:	int3   
6400f59c:	int3   
6400f59d:	int3   
6400f59e:	int3   
6400f59f:	int3   
6400f5a0:	mov    eax,DWORD PTR [esp+0x4]
6400f5a4:	mov    ecx,DWORD PTR [esp+0x8]
6400f5a8:	cmp    eax,ecx
6400f5aa:	je     0x6400f5bd
6400f5ac:	mov    edx,DWORD PTR [esp+0xc]
6400f5b0:	push   esi
6400f5b1:	mov    esi,DWORD PTR [edx]
6400f5b3:	mov    DWORD PTR [eax],esi
6400f5b5:	add    eax,0x4
6400f5b8:	cmp    eax,ecx
6400f5ba:	jne    0x6400f5b1
6400f5bc:	pop    esi
6400f5bd:	ret    
6400f5be:	int3   
6400f5bf:	int3   
6400f5c0:	mov    eax,DWORD PTR [esp+0x8]
6400f5c4:	mov    edx,DWORD PTR [esp+0x4]
6400f5c8:	sub    eax,edx
6400f5ca:	sar    eax,0x2
6400f5cd:	push   esi
6400f5ce:	mov    esi,DWORD PTR [esp+0x10]
6400f5d2:	lea    ecx,[eax*4+0x0]
6400f5d9:	sub    esi,ecx
6400f5db:	test   eax,eax
6400f5dd:	jle    0x6400f5eb
6400f5df:	push   ecx
6400f5e0:	push   edx
6400f5e1:	push   ecx
6400f5e2:	push   esi
6400f5e3:	call   0x64011f53
6400f5e8:	add    esp,0x10
6400f5eb:	mov    eax,esi
6400f5ed:	pop    esi
6400f5ee:	ret    
6400f5ef:	int3   
6400f5f0:	mov    eax,DWORD PTR [esp+0x14]
6400f5f4:	push   ebp
6400f5f5:	mov    ebp,DWORD PTR [esp+0x8]
6400f5f9:	push   esi
6400f5fa:	mov    esi,DWORD PTR [esp+0x14]
6400f5fe:	push   edi
6400f5ff:	lea    edi,[esi+eax*1]
6400f602:	mov    eax,DWORD PTR [ebp+0x0]
6400f605:	mov    edx,DWORD PTR [eax-0x8]
6400f608:	sub    eax,0x10
6400f60b:	mov    ecx,0x1
6400f610:	sub    ecx,DWORD PTR [eax+0xc]
6400f613:	sub    edx,edi
6400f615:	or     ecx,edx
6400f617:	jge    0x6400f621
6400f619:	push   edi
6400f61a:	mov    ecx,ebp
6400f61c:	call   0x64001e00
6400f621:	mov    eax,DWORD PTR [esp+0x14]
6400f625:	push   ebx
6400f626:	mov    ebx,DWORD PTR [ebp+0x0]
6400f629:	add    esi,esi
6400f62b:	push   esi
6400f62c:	push   eax
6400f62d:	push   esi
6400f62e:	push   ebx
6400f62f:	call   0x64011ed8
6400f634:	mov    eax,DWORD PTR [esp+0x34]
6400f638:	mov    ecx,DWORD PTR [esp+0x30]
6400f63c:	add    eax,eax
6400f63e:	push   eax
6400f63f:	push   ecx
6400f640:	push   eax
6400f641:	add    esi,ebx
6400f643:	push   esi
6400f644:	call   0x64011ed8
6400f649:	add    esp,0x20
6400f64c:	test   edi,edi
6400f64e:	pop    ebx
6400f64f:	jl     0x6400f669
6400f651:	mov    eax,DWORD PTR [ebp+0x0]
6400f654:	cmp    edi,DWORD PTR [eax-0x8]
6400f657:	jg     0x6400f669
6400f659:	mov    DWORD PTR [eax-0xc],edi
6400f65c:	mov    edx,DWORD PTR [ebp+0x0]
6400f65f:	mov    WORD PTR [edx+edi*2],0x0
6400f665:	pop    edi
6400f666:	pop    esi
6400f667:	pop    ebp
6400f668:	ret    
6400f669:	push   0x80070057
6400f66e:	call   0x64001040
6400f673:	int3   
6400f674:	int3   
6400f675:	int3   
6400f676:	int3   
6400f677:	int3   
6400f678:	int3   
6400f679:	int3   
6400f67a:	int3   
6400f67b:	int3   
6400f67c:	int3   
6400f67d:	int3   
6400f67e:	int3   
6400f67f:	int3   
6400f680:	push   ebx
6400f681:	push   esi
6400f682:	mov    esi,ecx
6400f684:	cmp    DWORD PTR [esi+0x34],0x10
6400f688:	jb     0x6400f696
6400f68a:	mov    eax,DWORD PTR [esi+0x20]
6400f68d:	push   eax
6400f68e:	call   0x64011d22
6400f693:	add    esp,0x4
6400f696:	xor    ebx,ebx
6400f698:	mov    DWORD PTR [esi+0x34],0xf
6400f69f:	mov    DWORD PTR [esi+0x30],ebx
6400f6a2:	mov    BYTE PTR [esi+0x20],bl
6400f6a5:	cmp    DWORD PTR [esi+0x18],0x10
6400f6a9:	jb     0x6400f6b7
6400f6ab:	mov    ecx,DWORD PTR [esi+0x4]
6400f6ae:	push   ecx
6400f6af:	call   0x64011d22
6400f6b4:	add    esp,0x4
6400f6b7:	mov    DWORD PTR [esi+0x14],ebx
6400f6ba:	mov    DWORD PTR [esi+0x18],0xf
6400f6c1:	mov    BYTE PTR [esi+0x4],bl
6400f6c4:	pop    esi
6400f6c5:	pop    ebx
6400f6c6:	ret    
6400f6c7:	int3   
6400f6c8:	int3   
6400f6c9:	int3   
6400f6ca:	int3   
6400f6cb:	int3   
6400f6cc:	int3   
6400f6cd:	int3   
6400f6ce:	int3   
6400f6cf:	int3   
6400f6d0:	push   0xffffffff
6400f6d2:	push   0x64021ac9
6400f6d7:	mov    eax,fs:0x0
6400f6dd:	push   eax
6400f6de:	push   ecx
6400f6df:	push   esi
6400f6e0:	push   edi
6400f6e1:	mov    eax,ds:0x6402c09c
6400f6e6:	xor    eax,esp
6400f6e8:	push   eax
6400f6e9:	lea    eax,[esp+0x10]
6400f6ed:	mov    fs:0x0,eax
6400f6f3:	mov    edi,DWORD PTR [esp+0x24]
6400f6f7:	mov    DWORD PTR [esp+0xc],0x0
6400f6ff:	mov    eax,DWORD PTR [edi]
6400f701:	mov    ecx,DWORD PTR [eax-0x10]
6400f704:	test   ecx,ecx
6400f706:	mov    DWORD PTR [esp+0x18],0x0
6400f70e:	je     0x6400f71b
6400f710:	mov    edx,DWORD PTR [ecx]
6400f712:	mov    eax,DWORD PTR [edx+0x10]
6400f715:	call   eax
6400f717:	test   eax,eax
6400f719:	jne    0x6400f72b
6400f71b:	mov    edx,DWORD PTR ds:0x6402d560
6400f721:	mov    eax,DWORD PTR [edx+0x10]
6400f724:	mov    ecx,0x6402d560
6400f729:	call   eax
6400f72b:	xor    ecx,ecx
6400f72d:	test   eax,eax
6400f72f:	setne  cl
6400f732:	test   ecx,ecx
6400f734:	jne    0x6400f740
6400f736:	push   0x80004005
6400f73b:	call   0x64001040
6400f740:	mov    edx,DWORD PTR [eax]
6400f742:	mov    ecx,eax
6400f744:	mov    eax,DWORD PTR [edx+0xc]
6400f747:	call   eax
6400f749:	mov    esi,DWORD PTR [esp+0x20]
6400f74d:	add    eax,0x10
6400f750:	mov    DWORD PTR [esi],eax
6400f752:	mov    ecx,DWORD PTR [esp+0x28]
6400f756:	mov    eax,DWORD PTR [ecx]
6400f758:	mov    edx,DWORD PTR [eax-0xc]
6400f75b:	mov    ecx,DWORD PTR [edi]
6400f75d:	mov    edi,DWORD PTR [ecx-0xc]
6400f760:	push   edx
6400f761:	push   eax
6400f762:	push   edi
6400f763:	push   ecx
6400f764:	push   esi
6400f765:	mov    DWORD PTR [esp+0x2c],0x0
6400f76d:	mov    DWORD PTR [esp+0x20],0x1
6400f775:	call   0x6400f5f0
6400f77a:	add    esp,0x14
6400f77d:	mov    eax,esi
6400f77f:	mov    ecx,DWORD PTR [esp+0x10]
6400f783:	mov    DWORD PTR fs:0x0,ecx
6400f78a:	pop    ecx
6400f78b:	pop    edi
6400f78c:	pop    esi
6400f78d:	add    esp,0x10
6400f790:	ret    
6400f791:	int3   
6400f792:	int3   
6400f793:	int3   
6400f794:	int3   
6400f795:	int3   
6400f796:	int3   
6400f797:	int3   
6400f798:	int3   
6400f799:	int3   
6400f79a:	int3   
6400f79b:	int3   
6400f79c:	int3   
6400f79d:	int3   
6400f79e:	int3   
6400f79f:	int3   
6400f7a0:	push   0xffffffff
6400f7a2:	push   0x64021b09
6400f7a7:	mov    eax,fs:0x0
6400f7ad:	push   eax
6400f7ae:	push   ecx
6400f7af:	push   ebp
6400f7b0:	push   esi
6400f7b1:	push   edi
6400f7b2:	mov    eax,ds:0x6402c09c
6400f7b7:	xor    eax,esp
6400f7b9:	push   eax
6400f7ba:	lea    eax,[esp+0x14]
6400f7be:	mov    fs:0x0,eax
6400f7c4:	mov    ebp,DWORD PTR [esp+0x28]
6400f7c8:	mov    DWORD PTR [esp+0x10],0x0
6400f7d0:	mov    eax,DWORD PTR [ebp+0x0]
6400f7d3:	mov    ecx,DWORD PTR [eax-0x10]
6400f7d6:	test   ecx,ecx
6400f7d8:	mov    DWORD PTR [esp+0x1c],0x0
6400f7e0:	je     0x6400f7ed
6400f7e2:	mov    edx,DWORD PTR [ecx]
6400f7e4:	mov    eax,DWORD PTR [edx+0x10]
6400f7e7:	call   eax
6400f7e9:	test   eax,eax
6400f7eb:	jne    0x6400f7fd
6400f7ed:	mov    edx,DWORD PTR ds:0x6402d560
6400f7f3:	mov    eax,DWORD PTR [edx+0x10]
6400f7f6:	mov    ecx,0x6402d560
6400f7fb:	call   eax
6400f7fd:	xor    ecx,ecx
6400f7ff:	test   eax,eax
6400f801:	setne  cl
6400f804:	test   ecx,ecx
6400f806:	jne    0x6400f812
6400f808:	push   0x80004005
6400f80d:	call   0x64001040
6400f812:	mov    edx,DWORD PTR [eax]
6400f814:	mov    ecx,eax
6400f816:	mov    eax,DWORD PTR [edx+0xc]
6400f819:	call   eax
6400f81b:	mov    esi,DWORD PTR [esp+0x24]
6400f81f:	add    eax,0x10
6400f822:	mov    DWORD PTR [esi],eax
6400f824:	mov    edi,DWORD PTR [esp+0x2c]
6400f828:	test   edi,edi
6400f82a:	mov    DWORD PTR [esp+0x1c],0x0
6400f832:	mov    DWORD PTR [esp+0x10],0x1
6400f83a:	jne    0x6400f840
6400f83c:	xor    eax,eax
6400f83e:	jmp    0x6400f854
6400f840:	mov    eax,edi
6400f842:	lea    edx,[eax+0x2]
6400f845:	mov    cx,WORD PTR [eax]
6400f848:	add    eax,0x2
6400f84b:	test   cx,cx
6400f84e:	jne    0x6400f845
6400f850:	sub    eax,edx
6400f852:	sar    eax,1
6400f854:	mov    ecx,DWORD PTR [ebp+0x0]
6400f857:	mov    edx,DWORD PTR [ecx-0xc]
6400f85a:	push   eax
6400f85b:	push   edi
6400f85c:	push   edx
6400f85d:	push   ecx
6400f85e:	push   esi
6400f85f:	call   0x6400f5f0
6400f864:	add    esp,0x14
6400f867:	mov    eax,esi
6400f869:	mov    ecx,DWORD PTR [esp+0x14]
6400f86d:	mov    DWORD PTR fs:0x0,ecx
6400f874:	pop    ecx
6400f875:	pop    edi
6400f876:	pop    esi
6400f877:	pop    ebp
6400f878:	add    esp,0x10
6400f87b:	ret    
6400f87c:	int3   
6400f87d:	int3   
6400f87e:	int3   
6400f87f:	int3   
6400f880:	mov    eax,DWORD PTR [esp+0x8]
6400f884:	mov    ecx,DWORD PTR [esp+0x4]
6400f888:	mov    edx,DWORD PTR [esp+0xc]
6400f88c:	sub    eax,ecx
6400f88e:	sar    eax,0x2
6400f891:	lea    eax,[eax*4+0x0]
6400f898:	push   esi
6400f899:	lea    esi,[eax+edx*1]
6400f89c:	je     0x6400f8aa
6400f89e:	push   eax
6400f89f:	push   ecx
6400f8a0:	push   eax
6400f8a1:	push   edx
6400f8a2:	call   0x64011f53
6400f8a7:	add    esp,0x10
6400f8aa:	mov    eax,esi
6400f8ac:	pop    esi
6400f8ad:	ret    0xc
6400f8b0:	push   esi
6400f8b1:	mov    esi,DWORD PTR [esp+0xc]
6400f8b5:	test   esi,esi
6400f8b7:	push   edi
6400f8b8:	mov    edi,DWORD PTR [esp+0xc]
6400f8bc:	mov    eax,esi
6400f8be:	mov    ecx,edi
6400f8c0:	jbe    0x6400f8d6
6400f8c2:	mov    edx,DWORD PTR [esp+0x14]
6400f8c6:	push   ebx
6400f8c7:	mov    ebx,DWORD PTR [edx]
6400f8c9:	mov    DWORD PTR [ecx],ebx
6400f8cb:	sub    eax,0x1
6400f8ce:	add    ecx,0x4
6400f8d1:	test   eax,eax
6400f8d3:	ja     0x6400f8c7
6400f8d5:	pop    ebx
6400f8d6:	lea    eax,[edi+esi*4]
6400f8d9:	pop    edi
6400f8da:	pop    esi
6400f8db:	ret    0xc
6400f8de:	int3   
6400f8df:	int3   
6400f8e0:	mov    eax,DWORD PTR [esp+0x4]
6400f8e4:	push   esi
6400f8e5:	push   eax
6400f8e6:	mov    esi,ecx
6400f8e8:	call   0x64011e77
6400f8ed:	mov    DWORD PTR [esi],0x64024338
6400f8f3:	mov    eax,esi
6400f8f5:	pop    esi
6400f8f6:	ret    0x4
6400f8f9:	int3   
6400f8fa:	int3   
6400f8fb:	int3   
6400f8fc:	int3   
6400f8fd:	int3   
6400f8fe:	int3   
6400f8ff:	int3   
6400f900:	push   0xffffffff
6400f902:	push   0x64021b38
6400f907:	mov    eax,fs:0x0
6400f90d:	push   eax
6400f90e:	sub    esp,0x44
6400f911:	mov    eax,ds:0x6402c09c
6400f916:	xor    eax,esp
6400f918:	push   eax
6400f919:	lea    eax,[esp+0x48]
6400f91d:	mov    fs:0x0,eax
6400f923:	push   0x12
6400f925:	push   0x6402816c
6400f92a:	lea    ecx,[esp+0xc]
6400f92e:	mov    DWORD PTR [esp+0x24],0xf
6400f936:	mov    DWORD PTR [esp+0x20],0x0
6400f93e:	mov    BYTE PTR [esp+0x10],0x0
6400f943:	call   0x64001860
6400f948:	lea    eax,[esp+0x4]
6400f94c:	push   eax
6400f94d:	lea    ecx,[esp+0x24]
6400f951:	mov    DWORD PTR [esp+0x54],0x0
6400f959:	call   0x64002d10
6400f95e:	push   0x64029d68
6400f963:	lea    ecx,[esp+0x24]
6400f967:	push   ecx
6400f968:	mov    DWORD PTR [esp+0x28],0x64024274
6400f970:	call   0x6401216b
6400f975:	int3   
6400f976:	int3   
6400f977:	int3   
6400f978:	int3   
6400f979:	int3   
6400f97a:	int3   
6400f97b:	int3   
6400f97c:	int3   
6400f97d:	int3   
6400f97e:	int3   
6400f97f:	int3   
6400f980:	sub    esp,0x10
6400f983:	mov    edx,DWORD PTR [ecx+0x4]
6400f986:	mov    eax,DWORD PTR [ecx]
6400f988:	cmp    eax,0x5
6400f98b:	mov    DWORD PTR [esp+0x4],edx
6400f98f:	mov    edx,DWORD PTR [ecx+0x8]
6400f992:	mov    ecx,DWORD PTR [ecx+0xc]
6400f995:	je     0x6400f9bc
6400f997:	push   0x64024340
6400f99c:	lea    ecx,[esp+0x4]
6400f9a0:	call   0x64011e5e
6400f9a5:	push   0x64029218
6400f9aa:	lea    eax,[esp+0x4]
6400f9ae:	push   eax
6400f9af:	mov    DWORD PTR [esp+0x8],0x64024338
6400f9b7:	call   0x6401216b
6400f9bc:	push   edx
6400f9bd:	push   ecx
6400f9be:	mov    ecx,DWORD PTR [esp+0x1c]
6400f9c2:	call   0x64001860
6400f9c7:	add    esp,0x10
6400f9ca:	ret    0x4
6400f9cd:	int3   
6400f9ce:	int3   
6400f9cf:	int3   
6400f9d0:	push   0xffffffff
6400f9d2:	push   0x64021b7e
6400f9d7:	mov    eax,fs:0x0
6400f9dd:	push   eax
6400f9de:	sub    esp,0x9c
6400f9e4:	push   ebx
6400f9e5:	push   ebp
6400f9e6:	push   edi
6400f9e7:	mov    eax,ds:0x6402c09c
6400f9ec:	xor    eax,esp
6400f9ee:	push   eax
6400f9ef:	lea    eax,[esp+0xac]
6400f9f6:	mov    fs:0x0,eax
6400f9fc:	xor    ebx,ebx
6400f9fe:	push   0x1c
6400fa00:	mov    DWORD PTR [esp+0x14],ebx
6400fa04:	call   0x64012101
6400fa09:	mov    edi,eax
6400fa0b:	add    esp,0x4
6400fa0e:	cmp    edi,ebx
6400fa10:	je     0x6400fa22
6400fa12:	push   0x2000
6400fa17:	push   edi
6400fa18:	call   0x6400e7e0
6400fa1d:	add    esp,0x8
6400fa20:	jmp    0x6400fa24
6400fa22:	xor    edi,edi
6400fa24:	mov    DWORD PTR [esp+0x20],edi
6400fa28:	mov    ecx,DWORD PTR [esp+0xc4]
6400fa2f:	mov    edx,DWORD PTR [esp+0xc0]
6400fa36:	lea    eax,[esp+0x10]
6400fa3a:	push   eax
6400fa3b:	mov    eax,DWORD PTR [esp+0xc0]
6400fa42:	push   edi
6400fa43:	push   ecx
6400fa44:	push   edx
6400fa45:	push   eax
6400fa46:	mov    DWORD PTR [esp+0xc8],ebx
6400fa4d:	call   0x6400f270
6400fa52:	add    esp,0x14
6400fa55:	sub    eax,ebx
6400fa57:	je     0x6400fb26
6400fa5d:	sub    eax,0x1
6400fa60:	je     0x6400fb09
6400fa66:	sub    eax,0x1
6400fa69:	je     0x6400fab8
6400fa6b:	push   0xb
6400fa6d:	push   0x64024378
6400fa72:	lea    ecx,[esp+0x2c]
6400fa76:	mov    DWORD PTR [esp+0x44],0xf
6400fa7e:	mov    DWORD PTR [esp+0x40],ebx
6400fa82:	mov    BYTE PTR [esp+0x30],bl
6400fa86:	call   0x64001860
6400fa8b:	lea    ecx,[esp+0x24]
6400fa8f:	push   ecx
6400fa90:	lea    ecx,[esp+0x60]
6400fa94:	mov    BYTE PTR [esp+0xb8],0x2
6400fa9c:	call   0x64002020
6400faa1:	push   0x6402929c
6400faa6:	lea    edx,[esp+0x60]
6400faaa:	push   edx
6400faab:	mov    DWORD PTR [esp+0x64],0x6402435c
6400fab3:	call   0x6401216b
6400fab8:	mov    eax,DWORD PTR [esp+0x10]
6400fabc:	mov    ecx,DWORD PTR [esp+0x14]
6400fac0:	mov    edx,DWORD PTR [esp+0x18]
6400fac4:	mov    DWORD PTR [esi],eax
6400fac6:	mov    eax,DWORD PTR [esp+0x1c]
6400faca:	mov    DWORD PTR [esi+0x4],ecx
6400facd:	mov    DWORD PTR [esi+0x8],edx
6400fad0:	mov    DWORD PTR [esi+0xc],eax
6400fad3:	mov    ebp,DWORD PTR [esi+0x10]
6400fad6:	cmp    edi,ebp
6400fad8:	je     0x6400faed
6400fada:	cmp    ebp,ebx
6400fadc:	je     0x6400faed
6400fade:	push   ebp
6400fadf:	call   0x6400e780
6400fae4:	push   ebp
6400fae5:	call   0x64011d22
6400faea:	add    esp,0x8
6400faed:	mov    DWORD PTR [esi+0x10],edi
6400faf0:	mov    ecx,DWORD PTR [esp+0xac]
6400faf7:	mov    DWORD PTR fs:0x0,ecx
6400fafe:	pop    ecx
6400faff:	pop    edi
6400fb00:	pop    ebp
6400fb01:	pop    ebx
6400fb02:	add    esp,0xa8
6400fb08:	ret    
6400fb09:	mov    ecx,DWORD PTR [esp+0x10]
6400fb0d:	mov    edx,DWORD PTR [esp+0x14]
6400fb11:	mov    eax,DWORD PTR [esp+0x18]
6400fb15:	mov    DWORD PTR [esi],ecx
6400fb17:	mov    ecx,DWORD PTR [esp+0x1c]
6400fb1b:	mov    DWORD PTR [esi+0x4],edx
6400fb1e:	mov    DWORD PTR [esi+0x8],eax
6400fb21:	mov    DWORD PTR [esi+0xc],ecx
6400fb24:	jmp    0x6400fad3
6400fb26:	push   0x12
6400fb28:	push   0x64024364
6400fb2d:	lea    ecx,[esp+0x48]
6400fb31:	mov    DWORD PTR [esp+0x60],0xf
6400fb39:	mov    DWORD PTR [esp+0x5c],ebx
6400fb3d:	mov    BYTE PTR [esp+0x4c],bl
6400fb41:	call   0x64001860
6400fb46:	lea    edx,[esp+0x40]
6400fb4a:	push   edx
6400fb4b:	lea    ecx,[esp+0x88]
6400fb52:	mov    BYTE PTR [esp+0xb8],0x1
6400fb5a:	call   0x64002020
6400fb5f:	push   0x6402929c
6400fb64:	lea    eax,[esp+0x88]
6400fb6b:	push   eax
6400fb6c:	mov    DWORD PTR [esp+0x8c],0x6402435c
6400fb77:	call   0x6401216b
6400fb7c:	int3   
6400fb7d:	int3   
6400fb7e:	int3   
6400fb7f:	int3   
6400fb80:	mov    eax,DWORD PTR [esp+0x4]
6400fb84:	push   esi
6400fb85:	push   eax
6400fb86:	mov    esi,ecx
6400fb88:	call   0x64002130
6400fb8d:	mov    DWORD PTR [esi],0x6402435c
6400fb93:	mov    eax,esi
6400fb95:	pop    esi
6400fb96:	ret    0x4
6400fb99:	int3   
6400fb9a:	int3   
6400fb9b:	int3   
6400fb9c:	int3   
6400fb9d:	int3   
6400fb9e:	int3   
6400fb9f:	int3   
6400fba0:	cmp    DWORD PTR [esp+0x4],0x6
6400fba5:	push   esi
6400fba6:	mov    esi,ecx
6400fba8:	je     0x6400fbcf
6400fbaa:	push   0x64024340
6400fbaf:	lea    ecx,[esp+0xc]
6400fbb3:	call   0x64011e5e
6400fbb8:	push   0x64029218
6400fbbd:	lea    eax,[esp+0xc]
6400fbc1:	push   eax
6400fbc2:	mov    DWORD PTR [esp+0x10],0x64024338
6400fbca:	call   0x6401216b
6400fbcf:	push   ebx
6400fbd0:	mov    ebx,DWORD PTR [esp+0x14]
6400fbd4:	test   ebx,ebx
6400fbd6:	jbe    0x6400fbf9
6400fbd8:	mov    ecx,DWORD PTR [esi]
6400fbda:	push   edi
6400fbdb:	mov    edi,DWORD PTR [esp+0x1c]
6400fbdf:	push   ecx
6400fbe0:	mov    ecx,edi
6400fbe2:	call   0x6400f980
6400fbe7:	cmp    ebx,0x1
6400fbea:	jbe    0x6400fbf8
6400fbec:	mov    edx,DWORD PTR [esi+0x4]
6400fbef:	push   edx
6400fbf0:	lea    ecx,[edi+0x10]
6400fbf3:	call   0x6400f980
6400fbf8:	pop    edi
6400fbf9:	pop    ebx
6400fbfa:	pop    esi
6400fbfb:	ret    0x10
6400fbfe:	int3   
6400fbff:	int3   
6400fc00:	mov    eax,DWORD PTR [esp+0x10]
6400fc04:	push   ebx
6400fc05:	push   esi
6400fc06:	mov    esi,ecx
6400fc08:	mov    ecx,DWORD PTR [eax]
6400fc0a:	mov    DWORD PTR [esp+0x18],ecx
6400fc0e:	mov    ecx,DWORD PTR [esi+0x4]
6400fc11:	test   ecx,ecx
6400fc13:	push   edi
6400fc14:	jne    0x6400fc1a
6400fc16:	xor    edi,edi
6400fc18:	jmp    0x6400fc22
6400fc1a:	mov    edi,DWORD PTR [esi+0xc]
6400fc1d:	sub    edi,ecx
6400fc1f:	sar    edi,0x2
6400fc22:	mov    ebx,DWORD PTR [esp+0x18]
6400fc26:	test   ebx,ebx
6400fc28:	je     0x6400fdaf
6400fc2e:	test   ecx,ecx
6400fc30:	jne    0x6400fc36
6400fc32:	xor    eax,eax
6400fc34:	jmp    0x6400fc3e
6400fc36:	mov    eax,DWORD PTR [esi+0x8]
6400fc39:	sub    eax,ecx
6400fc3b:	sar    eax,0x2
6400fc3e:	mov    edx,0x3fffffff
6400fc43:	sub    edx,eax
6400fc45:	cmp    edx,ebx
6400fc47:	jae    0x6400fc4e
6400fc49:	call   0x6400f900
6400fc4e:	test   ecx,ecx
6400fc50:	jne    0x6400fc56
6400fc52:	xor    eax,eax
6400fc54:	jmp    0x6400fc5e
6400fc56:	mov    eax,DWORD PTR [esi+0x8]
6400fc59:	sub    eax,ecx
6400fc5b:	sar    eax,0x2
6400fc5e:	add    eax,ebx
6400fc60:	cmp    edi,eax
6400fc62:	push   ebp
6400fc63:	jae    0x6400fd1d
6400fc69:	mov    eax,edi
6400fc6b:	shr    eax,1
6400fc6d:	mov    edx,0x3fffffff
6400fc72:	sub    edx,eax
6400fc74:	cmp    edx,edi
6400fc76:	jae    0x6400fc7c
6400fc78:	xor    edi,edi
6400fc7a:	jmp    0x6400fc7e
6400fc7c:	add    edi,eax
6400fc7e:	test   ecx,ecx
6400fc80:	jne    0x6400fc86
6400fc82:	xor    eax,eax
6400fc84:	jmp    0x6400fc8e
6400fc86:	mov    eax,DWORD PTR [esi+0x8]
6400fc89:	sub    eax,ecx
6400fc8b:	sar    eax,0x2
6400fc8e:	add    eax,ebx
6400fc90:	cmp    edi,eax
6400fc92:	jae    0x6400fca6
6400fc94:	test   ecx,ecx
6400fc96:	jne    0x6400fc9c
6400fc98:	xor    edi,edi
6400fc9a:	jmp    0x6400fca4
6400fc9c:	mov    edi,DWORD PTR [esi+0x8]
6400fc9f:	sub    edi,ecx
6400fca1:	sar    edi,0x2
6400fca4:	add    edi,ebx
6400fca6:	push   0x0
6400fca8:	push   edi
6400fca9:	call   0x6400f4a0
6400fcae:	mov    ecx,DWORD PTR [esi+0x4]
6400fcb1:	add    esp,0x8
6400fcb4:	mov    ebp,eax
6400fcb6:	mov    eax,DWORD PTR [esp+0x18]
6400fcba:	push   ebp
6400fcbb:	push   eax
6400fcbc:	push   ecx
6400fcbd:	mov    ecx,esi
6400fcbf:	call   0x6400f880
6400fcc4:	lea    edx,[esp+0x20]
6400fcc8:	push   edx
6400fcc9:	push   ebx
6400fcca:	push   eax
6400fccb:	mov    ecx,esi
6400fccd:	call   0x6400f8b0
6400fcd2:	mov    ecx,DWORD PTR [esp+0x18]
6400fcd6:	push   eax
6400fcd7:	mov    eax,DWORD PTR [esi+0x8]
6400fcda:	push   eax
6400fcdb:	push   ecx
6400fcdc:	mov    ecx,esi
6400fcde:	call   0x6400f880
6400fce3:	mov    eax,DWORD PTR [esi+0x4]
6400fce6:	test   eax,eax
6400fce8:	jne    0x6400fcee
6400fcea:	xor    ecx,ecx
6400fcec:	jmp    0x6400fcf6
6400fcee:	mov    ecx,DWORD PTR [esi+0x8]
6400fcf1:	sub    ecx,eax
6400fcf3:	sar    ecx,0x2
6400fcf6:	add    ebx,ecx
6400fcf8:	test   eax,eax
6400fcfa:	je     0x6400fd05
6400fcfc:	push   eax
6400fcfd:	call   0x64011d22
6400fd02:	add    esp,0x4
6400fd05:	lea    edx,[ebp+edi*4+0x0]
6400fd09:	lea    eax,[ebp+ebx*4+0x0]
6400fd0d:	mov    DWORD PTR [esi+0x4],ebp
6400fd10:	pop    ebp
6400fd11:	pop    edi
6400fd12:	mov    DWORD PTR [esi+0xc],edx
6400fd15:	mov    DWORD PTR [esi+0x8],eax
6400fd18:	pop    esi
6400fd19:	pop    ebx
6400fd1a:	ret    0x10
6400fd1d:	mov    ebp,DWORD PTR [esi+0x8]
6400fd20:	mov    edi,DWORD PTR [esp+0x18]
6400fd24:	mov    ecx,ebp
6400fd26:	sub    ecx,edi
6400fd28:	sar    ecx,0x2
6400fd2b:	lea    eax,[ebx*4+0x0]
6400fd32:	cmp    ecx,ebx
6400fd34:	mov    DWORD PTR [esp+0x1c],eax
6400fd38:	mov    ecx,esi
6400fd3a:	jae    0x6400fd82
6400fd3c:	add    eax,edi
6400fd3e:	push   eax
6400fd3f:	push   ebp
6400fd40:	push   edi
6400fd41:	call   0x6400f880
6400fd46:	mov    eax,DWORD PTR [esi+0x8]
6400fd49:	mov    ecx,eax
6400fd4b:	sub    ecx,edi
6400fd4d:	sar    ecx,0x2
6400fd50:	lea    edx,[esp+0x20]
6400fd54:	push   edx
6400fd55:	sub    ebx,ecx
6400fd57:	push   ebx
6400fd58:	push   eax
6400fd59:	mov    ecx,esi
6400fd5b:	call   0x6400f8b0
6400fd60:	mov    eax,DWORD PTR [esp+0x1c]
6400fd64:	add    DWORD PTR [esi+0x8],eax
6400fd67:	mov    esi,DWORD PTR [esi+0x8]
6400fd6a:	lea    edx,[esp+0x20]
6400fd6e:	push   edx
6400fd6f:	sub    esi,eax
6400fd71:	push   esi
6400fd72:	push   edi
6400fd73:	call   0x6400f5a0
6400fd78:	add    esp,0xc
6400fd7b:	pop    ebp
6400fd7c:	pop    edi
6400fd7d:	pop    esi
6400fd7e:	pop    ebx
6400fd7f:	ret    0x10
6400fd82:	push   ebp
6400fd83:	mov    ebx,ebp
6400fd85:	sub    ebx,eax
6400fd87:	push   ebp
6400fd88:	push   ebx
6400fd89:	call   0x6400f880
6400fd8e:	push   ebp
6400fd8f:	push   ebx
6400fd90:	push   edi
6400fd91:	mov    DWORD PTR [esi+0x8],eax
6400fd94:	call   0x6400f5c0
6400fd99:	mov    ecx,DWORD PTR [esp+0x28]
6400fd9d:	lea    eax,[esp+0x2c]
6400fda1:	push   eax
6400fda2:	add    ecx,edi
6400fda4:	push   ecx
6400fda5:	push   edi
6400fda6:	call   0x6400f5a0
6400fdab:	add    esp,0x18
6400fdae:	pop    ebp
6400fdaf:	pop    edi
6400fdb0:	pop    esi
6400fdb1:	pop    ebx
6400fdb2:	ret    0x10
6400fdb5:	int3   
6400fdb6:	int3   
6400fdb7:	int3   
6400fdb8:	int3   
6400fdb9:	int3   
6400fdba:	int3   
6400fdbb:	int3   
6400fdbc:	int3   
6400fdbd:	int3   
6400fdbe:	int3   
6400fdbf:	int3   
6400fdc0:	push   ecx
6400fdc1:	push   ebx
6400fdc2:	push   ebp
6400fdc3:	mov    ebp,DWORD PTR [esp+0x14]
6400fdc7:	push   esi
6400fdc8:	mov    esi,ecx
6400fdca:	push   edi
6400fdcb:	mov    edi,DWORD PTR [esi+0x4]
6400fdce:	test   edi,edi
6400fdd0:	je     0x6400fdde
6400fdd2:	mov    eax,DWORD PTR [esi+0x8]
6400fdd5:	mov    ecx,eax
6400fdd7:	sub    ecx,edi
6400fdd9:	sar    ecx,0x2
6400fddc:	jne    0x6400fde2
6400fdde:	xor    ebx,ebx
6400fde0:	jmp    0x6400fe01
6400fde2:	cmp    edi,eax
6400fde4:	jbe    0x6400fdeb
6400fde6:	call   0x640120d8
6400fdeb:	test   ebp,ebp
6400fded:	je     0x6400fdf3
6400fdef:	cmp    ebp,esi
6400fdf1:	je     0x6400fdf8
6400fdf3:	call   0x640120d8
6400fdf8:	mov    ebx,DWORD PTR [esp+0x20]
6400fdfc:	sub    ebx,edi
6400fdfe:	sar    ebx,0x2
6400fe01:	mov    edx,DWORD PTR [esp+0x24]
6400fe05:	mov    eax,DWORD PTR [esp+0x20]
6400fe09:	push   edx
6400fe0a:	push   0x1
6400fe0c:	push   eax
6400fe0d:	push   ebp
6400fe0e:	mov    ecx,esi
6400fe10:	call   0x6400fc00
6400fe15:	mov    edi,DWORD PTR [esi+0x4]
6400fe18:	cmp    edi,DWORD PTR [esi+0x8]
6400fe1b:	jbe    0x6400fe22
6400fe1d:	call   0x640120d8
6400fe22:	mov    DWORD PTR [esp+0x20],edi
6400fe26:	lea    edi,[edi+ebx*4]
6400fe29:	cmp    edi,DWORD PTR [esi+0x8]
6400fe2c:	ja     0x6400fe33
6400fe2e:	cmp    edi,DWORD PTR [esi+0x4]
6400fe31:	jae    0x6400fe38
6400fe33:	call   0x640120d8
6400fe38:	mov    eax,DWORD PTR [esp+0x18]
6400fe3c:	mov    DWORD PTR [eax+0x4],edi
6400fe3f:	pop    edi
6400fe40:	mov    DWORD PTR [eax],esi
6400fe42:	pop    esi
6400fe43:	pop    ebp
6400fe44:	pop    ebx
6400fe45:	pop    ecx
6400fe46:	ret    0x10
6400fe49:	int3   
6400fe4a:	int3   
6400fe4b:	int3   
6400fe4c:	int3   
6400fe4d:	int3   
6400fe4e:	int3   
6400fe4f:	int3   
6400fe50:	sub    esp,0x8
6400fe53:	push   esi
6400fe54:	mov    esi,ecx
6400fe56:	mov    edx,DWORD PTR [esi+0x4]
6400fe59:	test   edx,edx
6400fe5b:	jne    0x6400fe61
6400fe5d:	xor    ecx,ecx
6400fe5f:	jmp    0x6400fe69
6400fe61:	mov    ecx,DWORD PTR [esi+0x8]
6400fe64:	sub    ecx,edx
6400fe66:	sar    ecx,0x2
6400fe69:	test   edx,edx
6400fe6b:	je     0x6400fe91
6400fe6d:	mov    eax,DWORD PTR [esi+0xc]
6400fe70:	sub    eax,edx
6400fe72:	sar    eax,0x2
6400fe75:	cmp    ecx,eax
6400fe77:	jae    0x6400fe91
6400fe79:	mov    eax,DWORD PTR [esi+0x8]
6400fe7c:	mov    ecx,DWORD PTR [esp+0x10]
6400fe80:	mov    edx,DWORD PTR [ecx]
6400fe82:	mov    DWORD PTR [eax],edx
6400fe84:	add    eax,0x4
6400fe87:	mov    DWORD PTR [esi+0x8],eax
6400fe8a:	pop    esi
6400fe8b:	add    esp,0x8
6400fe8e:	ret    0x4
6400fe91:	push   edi
6400fe92:	mov    edi,DWORD PTR [esi+0x8]
6400fe95:	cmp    edx,edi
6400fe97:	jbe    0x6400fe9e
6400fe99:	call   0x640120d8
6400fe9e:	mov    eax,DWORD PTR [esp+0x14]
6400fea2:	push   eax
6400fea3:	push   edi
6400fea4:	push   esi
6400fea5:	lea    ecx,[esp+0x14]
6400fea9:	push   ecx
6400feaa:	mov    ecx,esi
6400feac:	call   0x6400fdc0
6400feb1:	pop    edi
6400feb2:	pop    esi
6400feb3:	add    esp,0x8
6400feb6:	ret    0x4
6400feb9:	int3   
6400feba:	int3   
6400febb:	int3   
6400febc:	int3   
6400febd:	int3   
6400febe:	int3   
6400febf:	int3   
6400fec0:	sub    esp,0x20
6400fec3:	mov    eax,DWORD PTR [ecx]
6400fec5:	mov    edx,DWORD PTR [ecx+0x4]
6400fec8:	mov    DWORD PTR [esp],eax
6400fecb:	mov    eax,DWORD PTR [ecx+0x8]
6400fece:	mov    ecx,DWORD PTR [ecx+0xc]
6400fed1:	mov    DWORD PTR [esp+0x4],edx
6400fed5:	lea    edx,[esp+0x10]
6400fed9:	mov    DWORD PTR [esp+0xc],ecx
6400fedd:	push   edx
6400fede:	lea    ecx,[esp+0x4]
6400fee2:	mov    DWORD PTR [esp+0xc],eax
6400fee6:	call   0x6400f400
6400feeb:	mov    ecx,DWORD PTR [esp+0x24]
6400feef:	lea    edx,[ecx+0x1c]
6400fef2:	mov    DWORD PTR [esp],edx
6400fef5:	mov    edx,DWORD PTR [eax]
6400fef7:	mov    DWORD PTR [esp+0x4],ecx
6400fefb:	sub    esp,0x10
6400fefe:	mov    ecx,esp
6400ff00:	mov    DWORD PTR [ecx],edx
6400ff02:	mov    edx,DWORD PTR [eax+0x4]
6400ff05:	mov    DWORD PTR [ecx+0x4],edx
6400ff08:	mov    edx,DWORD PTR [eax+0x8]
6400ff0b:	mov    eax,DWORD PTR [eax+0xc]
6400ff0e:	mov    DWORD PTR [ecx+0x8],edx
6400ff11:	mov    DWORD PTR [ecx+0xc],eax
6400ff14:	lea    ecx,[esp+0x10]
6400ff18:	call   0x6400fba0
6400ff1d:	add    esp,0x20
6400ff20:	ret    0x4
6400ff23:	int3   
6400ff24:	int3   
6400ff25:	int3   
6400ff26:	int3   
6400ff27:	int3   
6400ff28:	int3   
6400ff29:	int3   
6400ff2a:	int3   
6400ff2b:	int3   
6400ff2c:	int3   
6400ff2d:	int3   
6400ff2e:	int3   
6400ff2f:	int3   
6400ff30:	push   ebp
6400ff31:	lea    ebp,[esp-0x74]
6400ff35:	sub    esp,0x74
6400ff38:	push   0xffffffff
6400ff3a:	push   0x64021be8
6400ff3f:	mov    eax,fs:0x0
6400ff45:	push   eax
6400ff46:	sub    esp,0x70
6400ff49:	mov    eax,ds:0x6402c09c
6400ff4e:	xor    eax,ebp
6400ff50:	mov    DWORD PTR [ebp+0x70],eax
6400ff53:	push   ebx
6400ff54:	push   esi
6400ff55:	push   edi
6400ff56:	push   eax
6400ff57:	lea    eax,[ebp-0xc]
6400ff5a:	mov    fs:0x0,eax
6400ff60:	mov    DWORD PTR [ebp-0x10],esp
6400ff63:	mov    eax,DWORD PTR [ebp+0x7c]
6400ff66:	mov    ecx,0xf
6400ff6b:	xor    edi,edi
6400ff6d:	mov    DWORD PTR [ebp+0x50],ecx
6400ff70:	mov    DWORD PTR [ebp+0x4c],edi
6400ff73:	mov    BYTE PTR [ebp+0x3c],0x0
6400ff77:	mov    DWORD PTR [ebp+0x6c],ecx
6400ff7a:	mov    DWORD PTR [ebp+0x68],edi
6400ff7d:	mov    BYTE PTR [ebp+0x58],0x0
6400ff81:	mov    DWORD PTR [ebp-0x4],edi
6400ff84:	mov    DWORD PTR [ebp-0x38],edi
6400ff87:	mov    DWORD PTR [ebp-0x28],edi
6400ff8a:	mov    ecx,DWORD PTR [eax+0x14]
6400ff8d:	mov    ebx,0x10
6400ff92:	cmp    DWORD PTR [eax+0x18],ebx
6400ff95:	mov    BYTE PTR [ebp-0x4],0x2
6400ff99:	jb     0x6400ffa0
6400ff9b:	mov    eax,DWORD PTR [eax+0x4]
6400ff9e:	jmp    0x6400ffa3
6400ffa0:	add    eax,0x4
6400ffa3:	push   edi
6400ffa4:	push   ecx
6400ffa5:	push   eax
6400ffa6:	lea    esi,[ebp-0x38]
6400ffa9:	call   0x6400f9d0
6400ffae:	add    esp,0xc
6400ffb1:	lea    eax,[ebp+0x38]
6400ffb4:	push   eax
6400ffb5:	mov    ecx,esi
6400ffb7:	call   0x6400fec0
6400ffbc:	mov    DWORD PTR [ebp-0x4],0x1
6400ffc3:	call   DWORD PTR ds:0x6402c06c
6400ffc9:	cmp    DWORD PTR [ebp+0x6c],ebx
6400ffcc:	mov    DWORD PTR [ebp+0x0],eax
6400ffcf:	mov    BYTE PTR [ebp-0x4],0x4
6400ffd3:	jb     0x6400ffe0
6400ffd5:	mov    ebx,DWORD PTR [ebp+0x58]
6400ffd8:	cmp    ebx,edi
6400ffda:	jne    0x6400ffe3
6400ffdc:	xor    eax,eax
6400ffde:	jmp    0x6401002a
6400ffe0:	lea    ebx,[ebp+0x58]
6400ffe3:	push   ebx
6400ffe4:	call   DWORD PTR ds:0x64024054
6400ffea:	mov    edi,eax
6400ffec:	add    edi,0x1
6400ffef:	cmp    edi,0x3fffffff
6400fff5:	jg     0x64010026
6400fff7:	lea    eax,[edi+edi*1]
6400fffa:	call   0x64012c80
6400ffff:	mov    esi,esp
64010001:	test   esi,esi
64010003:	mov    DWORD PTR [ebp-0x10],esp
64010006:	je     0x64010026
64010008:	mov    ecx,DWORD PTR [ebp+0x0]
6401000b:	push   edi
6401000c:	push   esi
6401000d:	push   0xffffffff
6401000f:	push   ebx
64010010:	push   0x0
64010012:	push   ecx
64010013:	mov    WORD PTR [esi],0x0
64010018:	call   DWORD PTR ds:0x64024024
6401001e:	neg    eax
64010020:	sbb    eax,eax
64010022:	and    eax,esi
64010024:	jmp    0x64010028
64010026:	xor    eax,eax
64010028:	xor    edi,edi
6401002a:	push   eax
6401002b:	lea    ecx,[ebp+0x10]
6401002e:	call   0x640025a0
64010033:	mov    edx,DWORD PTR ds:0x6402d560
64010039:	mov    eax,DWORD PTR [edx+0xc]
6401003c:	mov    ecx,0x6402d560
64010041:	mov    BYTE PTR [ebp-0x4],0x5
64010045:	call   eax
64010047:	add    eax,0x10
6401004a:	mov    DWORD PTR [ebp+0x14],eax
6401004d:	lea    ecx,[ebp+0x14]
64010050:	push   ecx
64010051:	lea    edx,[ebp+0x10]
64010054:	push   edx
64010055:	lea    eax,[ebp+0x18]
64010058:	push   eax
64010059:	mov    BYTE PTR [ebp-0x4],0x6
6401005d:	call   0x640021b0
64010062:	add    esp,0xc
64010065:	lea    ecx,[ebp+0x18]
64010068:	push   0x640265c4
6401006d:	push   ecx
6401006e:	mov    BYTE PTR [ebp-0x4],0x7
64010072:	call   0x6400f540
64010077:	add    esp,0x8
6401007a:	test   al,al
6401007c:	je     0x64010254
64010082:	mov    esi,DWORD PTR [ebp+0x14]
64010085:	call   0x6400def0
6401008a:	push   esi
6401008b:	call   eax
6401008d:	cmp    DWORD PTR [ebp+0x50],0x10
64010091:	mov    edx,DWORD PTR [ebp+0x4c]
64010094:	mov    eax,DWORD PTR [ebp+0x3c]
64010097:	push   edx
64010098:	jae    0x6401009d
6401009a:	lea    eax,[ebp+0x3c]
6401009d:	push   eax
6401009e:	mov    eax,DWORD PTR [ebp+0x18]
640100a1:	push   ecx
640100a2:	add    eax,0xfffffff0
640100a5:	mov    DWORD PTR [ebp+0xc],esp
640100a8:	mov    esi,esp
640100aa:	push   eax
640100ab:	call   0x640028b0
640100b0:	add    eax,0x10
640100b3:	add    esp,0x4
640100b6:	mov    DWORD PTR [esi],eax
640100b8:	call   0x640023f0
640100bd:	add    esp,0xc
640100c0:	lea    eax,[ebp+0xc]
640100c3:	push   edi
640100c4:	push   eax
640100c5:	call   0x64003490
640100ca:	add    esp,0x8
640100cd:	push   0x64024384
640100d2:	push   eax
640100d3:	lea    ecx,[ebp+0x8]
640100d6:	push   ecx
640100d7:	mov    BYTE PTR [ebp-0x4],0x8
640100db:	call   0x6400f7a0
640100e0:	add    esp,0xc
640100e3:	mov    eax,DWORD PTR [ebp+0xc]
640100e6:	add    eax,0xfffffff0
640100e9:	mov    BYTE PTR [ebp-0x4],0xa
640100ed:	lea    edx,[eax+0xc]
640100f0:	or     ecx,0xffffffff
640100f3:	lock xadd DWORD PTR [edx],ecx
640100f7:	dec    ecx
640100f8:	test   ecx,ecx
640100fa:	jg     0x64010106
640100fc:	mov    ecx,DWORD PTR [eax]
640100fe:	mov    edx,DWORD PTR [ecx]
64010100:	push   eax
64010101:	mov    eax,DWORD PTR [edx+0x4]
64010104:	call   eax
64010106:	mov    eax,DWORD PTR [ebp+0x18]
64010109:	cmp    eax,edi
6401010b:	mov    ebx,eax
6401010d:	jne    0x64010113
6401010f:	xor    eax,eax
64010111:	jmp    0x64010143
64010113:	push   eax
64010114:	call   DWORD PTR ds:0x64024050
6401011a:	add    eax,0x1
6401011d:	cmp    eax,0x3fffffff
64010122:	jle    0x64010128
64010124:	xor    eax,eax
64010126:	jmp    0x64010143
64010128:	lea    esi,[eax+eax*1]
6401012b:	mov    eax,esi
6401012d:	call   0x64012c80
64010132:	mov    ecx,DWORD PTR [ebp+0x0]
64010135:	mov    DWORD PTR [ebp-0x10],esp
64010138:	mov    eax,esp
6401013a:	push   ecx
6401013b:	push   esi
6401013c:	push   ebx
6401013d:	push   eax
6401013e:	call   0x64002b90
64010143:	push   eax
64010144:	lea    ecx,[ebp+0x4]
64010147:	call   0x640065f0
6401014c:	lea    edx,[ebp+0x8]
6401014f:	push   edx
64010150:	lea    eax,[ebp+0x4]
64010153:	push   eax
64010154:	mov    BYTE PTR [ebp-0x4],0xb
64010158:	call   0x64002540
6401015d:	mov    eax,DWORD PTR [ebp+0x4]
64010160:	add    eax,0xfffffff0
64010163:	add    esp,0x8
64010166:	mov    BYTE PTR [ebp-0x4],0xa
6401016a:	lea    ecx,[eax+0xc]
6401016d:	or     edx,0xffffffff
64010170:	lock xadd DWORD PTR [ecx],edx
64010174:	dec    edx
64010175:	test   edx,edx
64010177:	jg     0x64010183
64010179:	mov    ecx,DWORD PTR [eax]
6401017b:	mov    edx,DWORD PTR [ecx]
6401017d:	push   eax
6401017e:	mov    eax,DWORD PTR [edx+0x4]
64010181:	call   eax
64010183:	push   0x40
64010185:	xor    eax,eax
64010187:	lea    ecx,[ebp-0x78]
6401018a:	push   edi
6401018b:	push   ecx
6401018c:	mov    DWORD PTR [ebp-0x20],edi
6401018f:	mov    DWORD PTR [ebp-0x1c],eax
64010192:	mov    DWORD PTR [ebp-0x18],eax
64010195:	mov    DWORD PTR [ebp-0x14],eax
64010198:	call   0x64012c00
6401019d:	lea    edx,[ebp+0x1c]
640101a0:	push   edx
640101a1:	mov    DWORD PTR [ebp-0x7c],0x44
640101a8:	call   0x640014a0
640101ad:	add    esp,0x10
640101b0:	cmp    DWORD PTR [ebp+0x34],0x10
640101b4:	mov    ebx,DWORD PTR [ebp+0x20]
640101b7:	mov    BYTE PTR [ebp-0x4],0xc
640101bb:	jae    0x640101c0
640101bd:	lea    ebx,[ebp+0x20]
640101c0:	mov    esi,DWORD PTR [ebp+0x18]
640101c3:	call   0x6400ddd0
640101c8:	lea    ecx,[ebp-0x20]
640101cb:	push   ecx
640101cc:	lea    edx,[ebp-0x7c]
640101cf:	push   edx
640101d0:	push   edi
640101d1:	push   ebx
640101d2:	push   0x400
640101d7:	push   0x1
640101d9:	push   edi
640101da:	push   edi
640101db:	push   edi
640101dc:	push   esi
640101dd:	call   eax
640101df:	cmp    eax,edi
640101e1:	je     0x640101f5
640101e3:	mov    eax,DWORD PTR [ebp-0x1c]
640101e6:	mov    esi,DWORD PTR ds:0x64024040
640101ec:	push   eax
640101ed:	call   esi
640101ef:	mov    ecx,DWORD PTR [ebp-0x20]
640101f2:	push   ecx
640101f3:	call   esi
640101f5:	mov    esi,DWORD PTR [ebp+0x18]
640101f8:	call   0x6400de60
640101fd:	push   0x4
640101ff:	push   edi
64010200:	push   esi
64010201:	call   eax
64010203:	mov    esi,DWORD PTR [ebp+0x14]
64010206:	call   0x6400de60
6401020b:	push   0x4
6401020d:	push   edi
6401020e:	push   esi
6401020f:	call   eax
64010211:	cmp    DWORD PTR [ebp+0x34],0x10
64010215:	jb     0x64010223
64010217:	mov    edx,DWORD PTR [ebp+0x20]
6401021a:	push   edx
6401021b:	call   0x64011d22
64010220:	add    esp,0x4
64010223:	mov    eax,DWORD PTR [ebp+0x8]
64010226:	add    eax,0xfffffff0
64010229:	mov    DWORD PTR [ebp+0x34],0xf
64010230:	mov    DWORD PTR [ebp+0x30],edi
64010233:	mov    BYTE PTR [ebp+0x20],0x0
64010237:	mov    BYTE PTR [ebp-0x4],0x7
6401023b:	lea    ecx,[eax+0xc]
6401023e:	or     edx,0xffffffff
64010241:	lock xadd DWORD PTR [ecx],edx
64010245:	dec    edx
64010246:	test   edx,edx
64010248:	jg     0x64010254
6401024a:	mov    ecx,DWORD PTR [eax]
6401024c:	mov    edx,DWORD PTR [ecx]
6401024e:	push   eax
6401024f:	mov    eax,DWORD PTR [edx+0x4]
64010252:	call   eax
64010254:	mov    eax,DWORD PTR [ebp+0x18]
64010257:	add    eax,0xfffffff0
6401025a:	mov    BYTE PTR [ebp-0x4],0x6
6401025e:	lea    ecx,[eax+0xc]
64010261:	or     edx,0xffffffff
64010264:	lock xadd DWORD PTR [ecx],edx
64010268:	dec    edx
64010269:	test   edx,edx
6401026b:	jg     0x64010277
6401026d:	mov    ecx,DWORD PTR [eax]
6401026f:	mov    edx,DWORD PTR [ecx]
64010271:	push   eax
64010272:	mov    eax,DWORD PTR [edx+0x4]
64010275:	call   eax
64010277:	mov    eax,DWORD PTR [ebp+0x14]
6401027a:	add    eax,0xfffffff0
6401027d:	mov    BYTE PTR [ebp-0x4],0x5
64010281:	lea    ecx,[eax+0xc]
64010284:	or     edx,0xffffffff
64010287:	lock xadd DWORD PTR [ecx],edx
6401028b:	dec    edx
6401028c:	test   edx,edx
6401028e:	jg     0x6401029a
64010290:	mov    ecx,DWORD PTR [eax]
64010292:	mov    edx,DWORD PTR [ecx]
64010294:	push   eax
64010295:	mov    eax,DWORD PTR [edx+0x4]
64010298:	call   eax
6401029a:	mov    eax,DWORD PTR [ebp+0x10]
6401029d:	add    eax,0xfffffff0
640102a0:	mov    BYTE PTR [ebp-0x4],0x4
640102a4:	lea    ecx,[eax+0xc]
640102a7:	or     edx,0xffffffff
640102aa:	lock xadd DWORD PTR [ecx],edx
640102ae:	dec    edx
640102af:	test   edx,edx
640102b1:	jg     0x640102c7
640102b3:	mov    ecx,DWORD PTR [eax]
640102b5:	mov    edx,DWORD PTR [ecx]
640102b7:	push   eax
640102b8:	mov    eax,DWORD PTR [edx+0x4]
640102bb:	call   eax
640102bd:	jmp    0x640102c7
640102bf:	mov    eax,0x640102c5
640102c4:	ret    
640102c5:	xor    edi,edi
640102c7:	mov    esi,DWORD PTR [ebp-0x28]
640102ca:	cmp    esi,edi
640102cc:	je     0x640102dd
640102ce:	push   esi
640102cf:	call   0x6400e780
640102d4:	push   esi
640102d5:	call   0x64011d22
640102da:	add    esp,0x8
640102dd:	mov    esi,0x10
640102e2:	cmp    DWORD PTR [ebp+0x6c],esi
640102e5:	jb     0x640102f3
640102e7:	mov    ecx,DWORD PTR [ebp+0x58]
640102ea:	push   ecx
640102eb:	call   0x64011d22
640102f0:	add    esp,0x4
640102f3:	cmp    DWORD PTR [ebp+0x50],esi
640102f6:	mov    DWORD PTR [ebp+0x6c],0xf
640102fd:	mov    DWORD PTR [ebp+0x68],edi
64010300:	mov    BYTE PTR [ebp+0x58],0x0
64010304:	jb     0x6401032a
64010306:	mov    edx,DWORD PTR [ebp+0x3c]
64010309:	push   edx
6401030a:	call   0x64011d22
6401030f:	add    esp,0x4
64010312:	jmp    0x6401032a
64010314:	mov    eax,0x6401031a
64010319:	ret    
6401031a:	lea    ecx,[ebp-0x38]
6401031d:	call   0x6400f520
64010322:	lea    ecx,[ebp+0x38]
64010325:	call   0x6400f680
6401032a:	lea    esp,[ebp-0x8c]
64010330:	mov    ecx,DWORD PTR [ebp-0xc]
64010333:	mov    DWORD PTR fs:0x0,ecx
6401033a:	pop    ecx
6401033b:	pop    edi
6401033c:	pop    esi
6401033d:	pop    ebx
6401033e:	mov    ecx,DWORD PTR [ebp+0x70]
64010341:	xor    ecx,ebp
64010343:	call   0x6401257c
64010348:	add    ebp,0x74
6401034b:	mov    esp,ebp
6401034d:	pop    ebp
6401034e:	ret    
6401034f:	int3   
64010350:	push   ecx
64010351:	push   esi
64010352:	mov    esi,ecx
64010354:	mov    eax,DWORD PTR [esi+0x4]
64010357:	test   eax,eax
64010359:	je     0x64010377
6401035b:	mov    ecx,DWORD PTR [esp+0x4]
6401035f:	mov    edx,DWORD PTR [esi+0x8]
64010362:	push   ecx
64010363:	push   esi
64010364:	push   edx
64010365:	push   eax
64010366:	call   0x6400c170
6401036b:	mov    eax,DWORD PTR [esi+0x4]
6401036e:	push   eax
6401036f:	call   0x64011d22
64010374:	add    esp,0x14
64010377:	mov    DWORD PTR [esi+0x4],0x0
6401037e:	mov    DWORD PTR [esi+0x8],0x0
64010385:	mov    DWORD PTR [esi+0xc],0x0
6401038c:	pop    esi
6401038d:	pop    ecx
6401038e:	ret    
6401038f:	int3   
64010390:	push   0xffffffff
64010392:	push   0x64021c1e
64010397:	mov    eax,fs:0x0
6401039d:	push   eax
6401039e:	push   ecx
6401039f:	push   ebx
640103a0:	push   esi
640103a1:	push   edi
640103a2:	mov    eax,ds:0x6402c09c
640103a7:	xor    eax,esp
640103a9:	push   eax
640103aa:	lea    eax,[esp+0x14]
640103ae:	mov    fs:0x0,eax
640103b4:	mov    eax,0x1
640103b9:	test   BYTE PTR ds:0x6402d4e8,al
640103bf:	jne    0x640103fa
640103c1:	or     DWORD PTR ds:0x6402d4e8,eax
640103c7:	push   0x64023250
640103cc:	mov    DWORD PTR ds:0x6402d4dc,0x0
640103d6:	mov    DWORD PTR ds:0x6402d4e0,0x0
640103e0:	mov    DWORD PTR ds:0x6402d4e4,0x0
640103ea:	call   0x640126af
640103ef:	add    esp,0x4
640103f2:	mov    DWORD PTR [esp+0x1c],0xffffffff
640103fa:	mov    esi,DWORD PTR ds:0x6402d4dc
64010400:	test   esi,esi
64010402:	je     0x64010417
64010404:	mov    edi,DWORD PTR ds:0x6402d4e0
6401040a:	mov    eax,edi
6401040c:	sub    eax,esi
6401040e:	sar    eax,0x2
64010411:	jne    0x6401052d
64010417:	push   0x64024480
6401041c:	push   0xc
6401041e:	push   0x64024470
64010423:	call   0x64006890
64010428:	mov    esi,DWORD PTR ds:0x640241c8
6401042e:	add    esp,0xc
64010431:	push   eax
64010432:	call   esi
64010434:	lea    ecx,[esp+0x10]
64010438:	push   ecx
64010439:	mov    ecx,0x6402d4d8
6401043e:	mov    DWORD PTR [esp+0x14],eax
64010442:	call   0x6400fe50
64010447:	push   0x6402444c
6401044c:	push   0xc
6401044e:	push   0x6402443c
64010453:	call   0x64006890
64010458:	add    esp,0xc
6401045b:	push   eax
6401045c:	call   esi
6401045e:	lea    edx,[esp+0x10]
64010462:	push   edx
64010463:	mov    ecx,0x6402d4d8
64010468:	mov    DWORD PTR [esp+0x14],eax
6401046c:	call   0x6400fe50
64010471:	push   0x64024404
64010476:	push   0xc
64010478:	push   0x6402443c
6401047d:	call   0x64006890
64010482:	add    esp,0xc
64010485:	push   eax
64010486:	call   esi
64010488:	mov    DWORD PTR [esp+0x10],eax
6401048c:	lea    eax,[esp+0x10]
64010490:	push   eax
64010491:	mov    ecx,0x6402d4d8
64010496:	call   0x6400fe50
6401049b:	push   0x640243d8
640104a0:	push   0xc
640104a2:	push   0x640243c8
640104a7:	call   0x64006890
640104ac:	add    esp,0xc
640104af:	push   eax
640104b0:	call   esi
640104b2:	lea    ecx,[esp+0x10]
640104b6:	push   ecx
640104b7:	mov    ecx,0x6402d4d8
640104bc:	mov    DWORD PTR [esp+0x14],eax
640104c0:	call   0x6400fe50
640104c5:	push   0x6402439c
640104ca:	push   0xc
640104cc:	push   0x640243c8
640104d1:	call   0x64006890
640104d6:	add    esp,0xc
640104d9:	push   eax
640104da:	call   esi
640104dc:	lea    edx,[esp+0x10]
640104e0:	push   edx
640104e1:	mov    ecx,0x6402d4d8
640104e6:	mov    DWORD PTR [esp+0x14],eax
640104ea:	call   0x6400fe50
640104ef:	call   DWORD PTR ds:0x64024058
640104f5:	push   eax
640104f6:	call   0x64012cac
640104fb:	mov    eax,ds:0x6402d4dc
64010500:	add    esp,0x4
64010503:	test   eax,eax
64010505:	jne    0x6401050b
64010507:	xor    esi,esi
64010509:	jmp    0x64010516
6401050b:	mov    esi,DWORD PTR ds:0x6402d4e0
64010511:	sub    esi,eax
64010513:	sar    esi,0x2
64010516:	call   0x64012cb9
6401051b:	mov    edi,DWORD PTR ds:0x6402d4e0
64010521:	xor    edx,edx
64010523:	div    esi
64010525:	mov    esi,DWORD PTR ds:0x6402d4dc
6401052b:	jmp    0x64010533
6401052d:	mov    edx,DWORD PTR ds:0x6402d4d4
64010533:	test   esi,esi
64010535:	jne    0x6401053b
64010537:	xor    ecx,ecx
64010539:	jmp    0x64010542
6401053b:	mov    ecx,edi
6401053d:	sub    ecx,esi
6401053f:	sar    ecx,0x2
64010542:	lea    eax,[edx+0x1]
64010545:	xor    edx,edx
64010547:	div    ecx
64010549:	test   esi,esi
6401054b:	mov    DWORD PTR ds:0x6402d4d4,edx
64010551:	mov    ebx,edx
64010553:	je     0x6401055e
64010555:	sub    edi,esi
64010557:	sar    edi,0x2
6401055a:	cmp    edx,edi
6401055c:	jb     0x6401057e
6401055e:	call   0x640120d8
64010563:	mov    eax,ds:0x6402d4dc
64010568:	mov    eax,DWORD PTR [eax+ebx*4]
6401056b:	mov    ecx,DWORD PTR [esp+0x14]
6401056f:	mov    DWORD PTR fs:0x0,ecx
64010576:	pop    ecx
64010577:	pop    edi
64010578:	pop    esi
64010579:	pop    ebx
6401057a:	add    esp,0x10
6401057d:	ret    
6401057e:	mov    eax,DWORD PTR [esi+ebx*4]
64010581:	mov    ecx,DWORD PTR [esp+0x14]
64010585:	mov    DWORD PTR fs:0x0,ecx
6401058c:	pop    ecx
6401058d:	pop    edi
6401058e:	pop    esi
6401058f:	pop    ebx
64010590:	add    esp,0x10
64010593:	ret    
64010594:	int3   
64010595:	int3   
64010596:	int3   
64010597:	int3   
64010598:	int3   
64010599:	int3   
6401059a:	int3   
6401059b:	int3   
6401059c:	int3   
6401059d:	int3   
6401059e:	int3   
6401059f:	int3   
640105a0:	push   ebp
640105a1:	mov    ebp,esp
640105a3:	push   0xffffffff
640105a5:	push   0x64021c48
640105aa:	mov    eax,fs:0x0
640105b0:	push   eax
640105b1:	sub    esp,0x8
640105b4:	push   ebx
640105b5:	push   esi
640105b6:	push   edi
640105b7:	mov    eax,ds:0x6402c09c
640105bc:	xor    eax,ebp
640105be:	push   eax
640105bf:	lea    eax,[ebp-0xc]
640105c2:	mov    fs:0x0,eax
640105c8:	mov    DWORD PTR [ebp-0x10],esp
640105cb:	xor    ebx,ebx
640105cd:	mov    DWORD PTR [ebp-0x4],ebx
640105d0:	call   0x64010390
640105d5:	lea    ecx,[ebp-0x14]
640105d8:	mov    edi,eax
640105da:	call   0x6400a2c0
640105df:	mov    eax,DWORD PTR [ebp+0x8]
640105e2:	cmp    DWORD PTR [eax+0x18],0x10
640105e6:	mov    ecx,DWORD PTR [eax+0x14]
640105e9:	mov    BYTE PTR [ebp-0x4],0x1
640105ed:	jb     0x640105f4
640105ef:	mov    eax,DWORD PTR [eax+0x4]
640105f2:	jmp    0x640105f7
640105f4:	add    eax,0x4
640105f7:	mov    esi,DWORD PTR [ebp+0xc]
640105fa:	push   0xffffffff
640105fc:	push   esi
640105fd:	add    ecx,0x1
64010600:	push   ecx
64010601:	push   eax
64010602:	push   edi
64010603:	lea    ecx,[ebp-0x14]
64010606:	call   0x6400a2e0
6401060b:	cmp    al,bl
6401060d:	je     0x6401062e
6401060f:	lea    ecx,[ebp-0x14]
64010612:	mov    BYTE PTR [ebp-0x4],bl
64010615:	call   0x6400a2d0
6401061a:	mov    al,0x1
6401061c:	mov    ecx,DWORD PTR [ebp-0xc]
6401061f:	mov    DWORD PTR fs:0x0,ecx
64010626:	pop    ecx
64010627:	pop    edi
64010628:	pop    esi
64010629:	pop    ebx
6401062a:	mov    esp,ebp
6401062c:	pop    ebp
6401062d:	ret    
6401062e:	push   ebx
6401062f:	push   0x640265c6
64010634:	mov    ecx,esi
64010636:	call   0x64001860
6401063b:	lea    ecx,[ebp-0x14]
6401063e:	mov    BYTE PTR [ebp-0x4],bl
64010641:	call   0x6400a2d0
64010646:	xor    al,al
64010648:	mov    ecx,DWORD PTR [ebp-0xc]
6401064b:	mov    DWORD PTR fs:0x0,ecx
64010652:	pop    ecx
64010653:	pop    edi
64010654:	pop    esi
64010655:	pop    ebx
64010656:	mov    esp,ebp
64010658:	pop    ebp
64010659:	ret    
6401065a:	mov    eax,0x64010646
6401065f:	ret    
64010660:	push   ecx
64010661:	push   esi
64010662:	push   0x640244c8
64010667:	push   0x17
64010669:	push   0x640244b0
6401066e:	mov    DWORD PTR [esp+0x10],0x0
64010676:	call   0x64006890
6401067b:	mov    esi,DWORD PTR [esp+0x18]
6401067f:	add    esp,0xc
64010682:	push   eax
64010683:	mov    ecx,esi
64010685:	call   0x640065f0
6401068a:	mov    eax,esi
6401068c:	pop    esi
6401068d:	pop    ecx
6401068e:	ret    
6401068f:	int3   
64010690:	push   0xffffffff
64010692:	push   0x64021c78
64010697:	mov    eax,fs:0x0
6401069d:	push   eax
6401069e:	push   ecx
6401069f:	push   esi
640106a0:	mov    eax,ds:0x6402c09c
640106a5:	xor    eax,esp
640106a7:	push   eax
640106a8:	lea    eax,[esp+0xc]
640106ac:	mov    fs:0x0,eax
640106b2:	lea    eax,[esp+0x8]
640106b6:	push   eax
640106b7:	call   0x64010660
640106bc:	add    esp,0x4
640106bf:	mov    eax,DWORD PTR [eax]
640106c1:	push   eax
640106c2:	push   0x0
640106c4:	mov    DWORD PTR [esp+0x1c],0x0
640106cc:	call   0x640064f0
640106d1:	push   eax
640106d2:	call   DWORD PTR ds:0x64024060
640106d8:	mov    esi,eax
640106da:	mov    eax,DWORD PTR [esp+0x8]
640106de:	add    eax,0xfffffff0
640106e1:	mov    DWORD PTR [esp+0x14],0xffffffff
640106e9:	lea    ecx,[eax+0xc]
640106ec:	or     edx,0xffffffff
640106ef:	lock xadd DWORD PTR [ecx],edx
640106f3:	dec    edx
640106f4:	test   edx,edx
640106f6:	jg     0x64010702
640106f8:	mov    ecx,DWORD PTR [eax]
640106fa:	mov    edx,DWORD PTR [ecx]
640106fc:	push   eax
640106fd:	mov    eax,DWORD PTR [edx+0x4]
64010700:	call   eax
64010702:	test   esi,esi
64010704:	jne    0x64010719
64010706:	xor    al,al
64010708:	mov    ecx,DWORD PTR [esp+0xc]
6401070c:	mov    DWORD PTR fs:0x0,ecx
64010713:	pop    ecx
64010714:	pop    esi
64010715:	add    esp,0x10
64010718:	ret    
64010719:	push   0x0
6401071b:	push   esi
6401071c:	call   DWORD PTR ds:0x640240b4
64010722:	test   eax,eax
64010724:	sete   al
64010727:	mov    ecx,DWORD PTR [esp+0xc]
6401072b:	mov    DWORD PTR fs:0x0,ecx
64010732:	pop    ecx
64010733:	pop    esi
64010734:	add    esp,0x10
64010737:	ret    
64010738:	int3   
64010739:	int3   
6401073a:	int3   
6401073b:	int3   
6401073c:	int3   
6401073d:	int3   
6401073e:	int3   
6401073f:	int3   
64010740:	push   0xffffffff
64010742:	push   0x64021cb0
64010747:	mov    eax,fs:0x0
6401074d:	push   eax
6401074e:	sub    esp,0x8
64010751:	push   ebx
64010752:	push   esi
64010753:	push   edi
64010754:	mov    eax,ds:0x6402c09c
64010759:	xor    eax,esp
6401075b:	push   eax
6401075c:	lea    eax,[esp+0x18]
64010760:	mov    fs:0x0,eax
64010766:	xor    ebx,ebx
64010768:	mov    DWORD PTR [esp+0x14],ebx
6401076c:	push   0x64024510
64010771:	push   0xf
64010773:	push   0x640244f0
64010778:	mov    DWORD PTR [esp+0x2c],ebx
6401077c:	call   0x64006b80
64010781:	add    esp,0xc
64010784:	push   eax
64010785:	lea    ecx,[esp+0x14]
64010789:	call   0x640025a0
6401078e:	mov    eax,DWORD PTR [esp+0x10]
64010792:	push   ebx
64010793:	push   ebx
64010794:	push   0x3
64010796:	push   ebx
64010797:	push   ebx
64010798:	push   0xc0000000
6401079d:	push   eax
6401079e:	mov    BYTE PTR [esp+0x3c],0x1
640107a3:	call   0x6400df80
640107a8:	call   eax
640107aa:	mov    esi,eax
640107ac:	mov    eax,DWORD PTR [esp+0x10]
640107b0:	add    eax,0xfffffff0
640107b3:	mov    DWORD PTR [esp+0x14],esi
640107b7:	mov    BYTE PTR [esp+0x20],bl
640107bb:	or     edx,0xffffffff
640107be:	lea    ecx,[eax+0xc]
640107c1:	lock xadd DWORD PTR [ecx],edx
640107c5:	dec    edx
640107c6:	cmp    esi,0xffffffff
640107c9:	je     0x64010808
640107cb:	test   edx,edx
640107cd:	jg     0x640107d9
640107cf:	mov    ecx,DWORD PTR [eax]
640107d1:	mov    edx,DWORD PTR [ecx]
640107d3:	push   eax
640107d4:	mov    eax,DWORD PTR [edx+0x4]
640107d7:	call   eax
640107d9:	cmp    esi,ebx
640107db:	je     0x640107f3
640107dd:	call   DWORD PTR ds:0x64024044
640107e3:	push   esi
640107e4:	mov    edi,eax
640107e6:	call   DWORD PTR ds:0x64024040
640107ec:	push   edi
640107ed:	call   DWORD PTR ds:0x6402405c
640107f3:	mov    al,0x1
640107f5:	mov    ecx,DWORD PTR [esp+0x18]
640107f9:	mov    DWORD PTR fs:0x0,ecx
64010800:	pop    ecx
64010801:	pop    edi
64010802:	pop    esi
64010803:	pop    ebx
64010804:	add    esp,0x14
64010807:	ret    
64010808:	test   edx,edx
6401080a:	jg     0x64010816
6401080c:	mov    ecx,DWORD PTR [eax]
6401080e:	mov    edx,DWORD PTR [ecx]
64010810:	push   eax
64010811:	mov    eax,DWORD PTR [edx+0x4]
64010814:	call   eax
64010816:	call   DWORD PTR ds:0x64024044
6401081c:	push   0xffffffff
6401081e:	mov    esi,eax
64010820:	call   DWORD PTR ds:0x64024040
64010826:	push   esi
64010827:	call   DWORD PTR ds:0x6402405c
6401082d:	xor    al,al
6401082f:	mov    ecx,DWORD PTR [esp+0x18]
64010833:	mov    DWORD PTR fs:0x0,ecx
6401083a:	pop    ecx
6401083b:	pop    edi
6401083c:	pop    esi
6401083d:	pop    ebx
6401083e:	add    esp,0x14
64010841:	ret    
64010842:	int3   
64010843:	int3   
64010844:	int3   
64010845:	int3   
64010846:	int3   
64010847:	int3   
64010848:	int3   
64010849:	int3   
6401084a:	int3   
6401084b:	int3   
6401084c:	int3   
6401084d:	int3   
6401084e:	int3   
6401084f:	int3   
64010850:	push   ebp
64010851:	lea    ebp,[esp-0x128]
64010858:	sub    esp,0x128
6401085e:	push   0xffffffff
64010860:	push   0x64021dd1
64010865:	mov    eax,fs:0x0
6401086b:	push   eax
6401086c:	sub    esp,0x90
64010872:	mov    eax,ds:0x6402c09c
64010877:	xor    eax,ebp
64010879:	mov    DWORD PTR [ebp+0x124],eax
6401087f:	push   ebx
64010880:	push   esi
64010881:	push   edi
64010882:	push   eax
64010883:	lea    eax,[ebp-0xc]
64010886:	mov    fs:0x0,eax
6401088c:	mov    esi,DWORD PTR [ebp+0x130]
64010892:	xor    edi,edi
64010894:	mov    DWORD PTR [ebp-0x4],edi
64010897:	mov    DWORD PTR [ebp-0x58],esi
6401089a:	mov    DWORD PTR [ebp-0x50],edi
6401089d:	call   DWORD PTR ds:0x6402c06c
640108a3:	mov    eax,ds:0x6402d560
640108a8:	mov    edx,DWORD PTR [eax+0xc]
640108ab:	mov    ecx,0x6402d560
640108b0:	call   edx
640108b2:	add    eax,0x10
640108b5:	mov    DWORD PTR [esi],eax
640108b7:	push   0x640248a4
640108bc:	push   0xd
640108be:	mov    ebx,0x1
640108c3:	push   0x64024894
640108c8:	mov    DWORD PTR [ebp-0x4],edi
640108cb:	mov    DWORD PTR [ebp-0x50],ebx
640108ce:	call   0x64006890
640108d3:	add    esp,0xc
640108d6:	push   eax
640108d7:	mov    ecx,esi
640108d9:	call   0x64002670
640108de:	push   0x64024860
640108e3:	push   0x3
640108e5:	push   0x6402485c
640108ea:	call   0x64006890
640108ef:	add    esp,0xc
640108f2:	push   eax
640108f3:	mov    ecx,esi
640108f5:	call   0x64002670
640108fa:	push   0x64024850
640108ff:	mov    ecx,esi
64010901:	call   0x64002670
64010906:	push   0x64024810
6401090b:	push   0x3
6401090d:	push   0x6402480c
64010912:	call   0x64006890
64010917:	add    esp,0xc
6401091a:	push   eax
6401091b:	mov    ecx,esi
6401091d:	call   0x64002670
64010922:	push   0x64024804
64010927:	mov    ecx,esi
64010929:	call   0x64002670
6401092e:	mov    eax,ds:0x6402d560
64010933:	mov    edx,DWORD PTR [eax+0xc]
64010936:	mov    ecx,0x6402d560
6401093b:	call   edx
6401093d:	add    eax,0x10
64010940:	mov    DWORD PTR [ebp-0x4c],eax
64010943:	mov    eax,ds:0x6402d560
64010948:	mov    edx,DWORD PTR [eax+0xc]
6401094b:	mov    ecx,0x6402d560
64010950:	mov    DWORD PTR [ebp-0x4],ebx
64010953:	call   edx
64010955:	add    eax,0x10
64010958:	mov    DWORD PTR [ebp-0x54],eax
6401095b:	lea    eax,[ebp+0x114]
64010961:	push   eax
64010962:	mov    BYTE PTR [ebp-0x4],0x2
64010966:	call   0x64006340
6401096b:	add    esp,0x4
6401096e:	test   al,al
64010970:	je     0x64010a10
64010976:	push   0x640247d8
6401097b:	push   0x4
6401097d:	push   0x640247d0
64010982:	call   0x64006890
64010987:	add    esp,0xc
6401098a:	push   eax
6401098b:	lea    ecx,[ebp-0x10]
6401098e:	call   0x640065f0
64010993:	mov    eax,DWORD PTR [eax]
64010995:	mov    ecx,DWORD PTR [eax-0xc]
64010998:	push   ecx
64010999:	push   eax
6401099a:	mov    ecx,esi
6401099c:	mov    BYTE PTR [ebp-0x4],0x3
640109a0:	call   0x640029f0
640109a5:	mov    eax,DWORD PTR [ebp-0x10]
640109a8:	add    eax,0xfffffff0
640109ab:	mov    BYTE PTR [ebp-0x4],0x2
640109af:	lea    ecx,[eax+0xc]
640109b2:	or     edx,0xffffffff
640109b5:	lock xadd DWORD PTR [ecx],edx
640109b9:	dec    edx
640109ba:	test   edx,edx
640109bc:	jg     0x640109c8
640109be:	mov    ecx,DWORD PTR [eax]
640109c0:	mov    edx,DWORD PTR [ecx]
640109c2:	push   eax
640109c3:	mov    eax,DWORD PTR [edx+0x4]
640109c6:	call   eax
640109c8:	lea    ecx,[ebp+0x114]
640109ce:	push   ecx
640109cf:	lea    edx,[ebp-0x10]
640109d2:	push   edx
640109d3:	call   0x64002eb0
640109d8:	add    esp,0x8
640109db:	mov    eax,DWORD PTR [eax]
640109dd:	mov    ecx,DWORD PTR [eax-0xc]
640109e0:	push   ecx
640109e1:	push   eax
640109e2:	mov    ecx,esi
640109e4:	mov    BYTE PTR [ebp-0x4],0x4
640109e8:	call   0x640029f0
640109ed:	mov    eax,DWORD PTR [ebp-0x10]
640109f0:	add    eax,0xfffffff0
640109f3:	mov    BYTE PTR [ebp-0x4],0x2
640109f7:	lea    ecx,[eax+0xc]
640109fa:	or     edx,0xffffffff
640109fd:	lock xadd DWORD PTR [ecx],edx
64010a01:	dec    edx
64010a02:	test   edx,edx
64010a04:	jg     0x64010a10
64010a06:	mov    ecx,DWORD PTR [eax]
64010a08:	mov    edx,DWORD PTR [ecx]
64010a0a:	push   eax
64010a0b:	mov    eax,DWORD PTR [edx+0x4]
64010a0e:	call   eax
64010a10:	push   0x640247ac
64010a15:	push   0x7
64010a17:	push   0x640247a4
64010a1c:	call   0x64006890
64010a21:	add    esp,0xc
64010a24:	push   eax
64010a25:	mov    ecx,esi
64010a27:	call   0x64002670
64010a2c:	call   0x64010740
64010a31:	test   al,al
64010a33:	je     0x64010a51
64010a35:	push   0x64024778
64010a3a:	push   0x6
64010a3c:	push   0x64024770
64010a41:	call   0x64006890
64010a46:	add    esp,0xc
64010a49:	push   eax
64010a4a:	mov    ecx,esi
64010a4c:	call   0x64002670
64010a51:	mov    edx,DWORD PTR ds:0x6402d560
64010a57:	mov    eax,DWORD PTR [edx+0xc]
64010a5a:	mov    ecx,0x6402d560
64010a5f:	call   eax
64010a61:	add    eax,0x10
64010a64:	mov    DWORD PTR [ebp-0x28],eax
64010a67:	mov    edx,DWORD PTR ds:0x6402d560
64010a6d:	mov    eax,DWORD PTR [edx+0xc]
64010a70:	mov    ecx,0x6402d560
64010a75:	mov    BYTE PTR [ebp-0x4],0x5
64010a79:	call   eax
64010a7b:	add    eax,0x10
64010a7e:	mov    DWORD PTR [ebp-0x48],eax
64010a81:	mov    edx,DWORD PTR ds:0x6402d560
64010a87:	mov    eax,DWORD PTR [edx+0xc]
64010a8a:	mov    ecx,0x6402d560
64010a8f:	mov    BYTE PTR [ebp-0x4],0x6
64010a93:	call   eax
64010a95:	add    eax,0x10
64010a98:	mov    DWORD PTR [ebp-0x24],eax
64010a9b:	lea    ecx,[ebp-0x44]
64010a9e:	push   ecx
64010a9f:	lea    edx,[ebp-0x24]
64010aa2:	push   edx
64010aa3:	lea    eax,[ebp-0x28]
64010aa6:	push   eax
64010aa7:	mov    BYTE PTR [ebp-0x4],0x7
64010aab:	mov    DWORD PTR [ebp-0x44],edi
64010aae:	mov    DWORD PTR [ebp-0x40],edi
64010ab1:	call   0x6400b120
64010ab6:	add    esp,0xc
64010ab9:	test   al,al
64010abb:	je     0x64010cfc
64010ac1:	lea    ecx,[ebp-0x24]
64010ac4:	push   ecx
64010ac5:	lea    edx,[ebp-0x14]
64010ac8:	push   edx
64010ac9:	call   0x64003150
64010ace:	mov    edi,eax
64010ad0:	push   0x64024734
64010ad5:	push   0x5
64010ad7:	mov    bl,0x8
64010ad9:	push   0x6402472c
64010ade:	mov    BYTE PTR [ebp-0x4],bl
64010ae1:	call   0x64006890
64010ae6:	add    esp,0x14
64010ae9:	push   eax
64010aea:	lea    ecx,[ebp-0x18]
64010aed:	call   0x640065f0
64010af2:	push   edi
64010af3:	push   eax
64010af4:	lea    eax,[ebp-0x10]
64010af7:	push   eax
64010af8:	mov    BYTE PTR [ebp-0x4],0x9
64010afc:	call   0x6400f6d0
64010b01:	add    esp,0xc
64010b04:	mov    eax,DWORD PTR [eax]
64010b06:	mov    ecx,DWORD PTR [eax-0xc]
64010b09:	push   ecx
64010b0a:	push   eax
64010b0b:	mov    ecx,esi
64010b0d:	mov    BYTE PTR [ebp-0x4],0xa
64010b11:	call   0x640029f0
64010b16:	mov    eax,DWORD PTR [ebp-0x10]
64010b19:	add    eax,0xfffffff0
64010b1c:	mov    BYTE PTR [ebp-0x4],0x9
64010b20:	lea    ecx,[eax+0xc]
64010b23:	or     edx,0xffffffff
64010b26:	lock xadd DWORD PTR [ecx],edx
64010b2a:	dec    edx
64010b2b:	test   edx,edx
64010b2d:	jg     0x64010b39
64010b2f:	mov    ecx,DWORD PTR [eax]
64010b31:	mov    edx,DWORD PTR [ecx]
64010b33:	push   eax
64010b34:	mov    eax,DWORD PTR [edx+0x4]
64010b37:	call   eax
64010b39:	mov    eax,DWORD PTR [ebp-0x18]
64010b3c:	add    eax,0xfffffff0
64010b3f:	mov    BYTE PTR [ebp-0x4],bl
64010b42:	lea    ecx,[eax+0xc]
64010b45:	or     edx,0xffffffff
64010b48:	lock xadd DWORD PTR [ecx],edx
64010b4c:	dec    edx
64010b4d:	test   edx,edx
64010b4f:	jg     0x64010b5b
64010b51:	mov    ecx,DWORD PTR [eax]
64010b53:	mov    edx,DWORD PTR [ecx]
64010b55:	push   eax
64010b56:	mov    eax,DWORD PTR [edx+0x4]
64010b59:	call   eax
64010b5b:	mov    eax,DWORD PTR [ebp-0x14]
64010b5e:	add    eax,0xfffffff0
64010b61:	mov    BYTE PTR [ebp-0x4],0x7
64010b65:	lea    ecx,[eax+0xc]
64010b68:	or     edx,0xffffffff
64010b6b:	lock xadd DWORD PTR [ecx],edx
64010b6f:	dec    edx
64010b70:	test   edx,edx
64010b72:	jg     0x64010b7e
64010b74:	mov    ecx,DWORD PTR [eax]
64010b76:	mov    edx,DWORD PTR [ecx]
64010b78:	push   eax
64010b79:	mov    eax,DWORD PTR [edx+0x4]
64010b7c:	call   eax
64010b7e:	lea    ecx,[ebp-0x28]
64010b81:	push   ecx
64010b82:	lea    edx,[ebp-0x10]
64010b85:	push   edx
64010b86:	call   0x64003150
64010b8b:	mov    edi,eax
64010b8d:	push   0x64024700
64010b92:	push   0x7
64010b94:	mov    bl,0xb
64010b96:	push   0x640246f8
64010b9b:	mov    BYTE PTR [ebp-0x4],bl
64010b9e:	call   0x64006890
64010ba3:	add    esp,0x14
64010ba6:	push   eax
64010ba7:	lea    ecx,[ebp-0x18]
64010baa:	call   0x640065f0
64010baf:	push   edi
64010bb0:	push   eax
64010bb1:	lea    eax,[ebp-0x14]
64010bb4:	push   eax
64010bb5:	mov    BYTE PTR [ebp-0x4],0xc
64010bb9:	call   0x6400f6d0
64010bbe:	add    esp,0xc
64010bc1:	mov    eax,DWORD PTR [eax]
64010bc3:	mov    ecx,DWORD PTR [eax-0xc]
64010bc6:	push   ecx
64010bc7:	push   eax
64010bc8:	mov    ecx,esi
64010bca:	mov    BYTE PTR [ebp-0x4],0xd
64010bce:	call   0x640029f0
64010bd3:	mov    eax,DWORD PTR [ebp-0x14]
64010bd6:	add    eax,0xfffffff0
64010bd9:	mov    BYTE PTR [ebp-0x4],0xc
64010bdd:	lea    ecx,[eax+0xc]
64010be0:	or     edx,0xffffffff
64010be3:	lock xadd DWORD PTR [ecx],edx
64010be7:	dec    edx
64010be8:	test   edx,edx
64010bea:	jg     0x64010bf6
64010bec:	mov    ecx,DWORD PTR [eax]
64010bee:	mov    edx,DWORD PTR [ecx]
64010bf0:	push   eax
64010bf1:	mov    eax,DWORD PTR [edx+0x4]
64010bf4:	call   eax
64010bf6:	mov    eax,DWORD PTR [ebp-0x18]
64010bf9:	add    eax,0xfffffff0
64010bfc:	mov    BYTE PTR [ebp-0x4],bl
64010bff:	lea    ecx,[eax+0xc]
64010c02:	or     edx,0xffffffff
64010c05:	lock xadd DWORD PTR [ecx],edx
64010c09:	dec    edx
64010c0a:	test   edx,edx
64010c0c:	jg     0x64010c18
64010c0e:	mov    ecx,DWORD PTR [eax]
64010c10:	mov    edx,DWORD PTR [ecx]
64010c12:	push   eax
64010c13:	mov    eax,DWORD PTR [edx+0x4]
64010c16:	call   eax
64010c18:	mov    eax,DWORD PTR [ebp-0x10]
64010c1b:	add    eax,0xfffffff0
64010c1e:	mov    BYTE PTR [ebp-0x4],0x7
64010c22:	lea    ecx,[eax+0xc]
64010c25:	or     edx,0xffffffff
64010c28:	lock xadd DWORD PTR [ecx],edx
64010c2c:	dec    edx
64010c2d:	test   edx,edx
64010c2f:	jg     0x64010c3b
64010c31:	mov    ecx,DWORD PTR [eax]
64010c33:	mov    edx,DWORD PTR [ecx]
64010c35:	push   eax
64010c36:	mov    eax,DWORD PTR [edx+0x4]
64010c39:	call   eax
64010c3b:	mov    edx,DWORD PTR ds:0x6402d560
64010c41:	mov    eax,DWORD PTR [edx+0xc]
64010c44:	mov    ecx,0x6402d560
64010c49:	call   eax
64010c4b:	add    eax,0x10
64010c4e:	mov    DWORD PTR [ebp-0x10],eax
64010c51:	mov    ecx,DWORD PTR [ebp-0x40]
64010c54:	mov    edx,DWORD PTR [ebp-0x44]
64010c57:	push   ecx
64010c58:	push   edx
64010c59:	push   0x640246c0
64010c5e:	push   0xc
64010c60:	push   0x640246a4
64010c65:	mov    BYTE PTR [ebp-0x4],0xe
64010c69:	call   0x64006b80
64010c6e:	add    esp,0xc
64010c71:	push   eax
64010c72:	lea    eax,[ebp-0x10]
64010c75:	push   eax
64010c76:	call   0x64001d40
64010c7b:	add    esp,0x10
64010c7e:	call   DWORD PTR ds:0x6402c06c
64010c84:	mov    edi,DWORD PTR [ebp-0x10]
64010c87:	cmp    DWORD PTR [edi-0x4],0x1
64010c8b:	mov    DWORD PTR [ebp-0x14],eax
64010c8e:	jle    0x64010c9f
64010c90:	mov    ecx,DWORD PTR [edi-0xc]
64010c93:	push   ecx
64010c94:	lea    ecx,[ebp-0x10]
64010c97:	call   0x64001950
64010c9c:	mov    edi,DWORD PTR [ebp-0x10]
64010c9f:	test   edi,edi
64010ca1:	jne    0x64010ca7
64010ca3:	xor    eax,eax
64010ca5:	jmp    0x64010cd4
64010ca7:	push   edi
64010ca8:	call   DWORD PTR ds:0x64024050
64010cae:	add    eax,0x1
64010cb1:	cmp    eax,0x3fffffff
64010cb6:	jle    0x64010cbc
64010cb8:	xor    eax,eax
64010cba:	jmp    0x64010cd4
64010cbc:	lea    ebx,[eax+eax*1]
64010cbf:	mov    eax,ebx
64010cc1:	call   0x64012c80
64010cc6:	mov    edx,DWORD PTR [ebp-0x14]
64010cc9:	mov    eax,esp
64010ccb:	push   edx
64010ccc:	push   ebx
64010ccd:	push   edi
64010cce:	push   eax
64010ccf:	call   0x64002b90
64010cd4:	push   eax
64010cd5:	mov    ecx,esi
64010cd7:	call   0x64002670
64010cdc:	add    edi,0xfffffff0
64010cdf:	mov    BYTE PTR [ebp-0x4],0x7
64010ce3:	lea    eax,[edi+0xc]
64010ce6:	or     ecx,0xffffffff
64010ce9:	lock xadd DWORD PTR [eax],ecx
64010ced:	dec    ecx
64010cee:	test   ecx,ecx
64010cf0:	jg     0x64010cfc
64010cf2:	mov    ecx,DWORD PTR [edi]
64010cf4:	mov    edx,DWORD PTR [ecx]
64010cf6:	mov    eax,DWORD PTR [edx+0x4]
64010cf9:	push   edi
64010cfa:	call   eax
64010cfc:	xor    edi,edi
64010cfe:	mov    DWORD PTR [ebp-0x38],edi
64010d01:	mov    DWORD PTR [ebp-0x34],edi
64010d04:	mov    DWORD PTR [ebp-0x30],edi
64010d07:	lea    ecx,[ebp-0x3c]
64010d0a:	push   ecx
64010d0b:	mov    BYTE PTR [ebp-0x4],0xf
64010d0f:	call   0x6400b2d0
64010d14:	add    esp,0x4
64010d17:	mov    DWORD PTR [ebp-0x10],edi
64010d1a:	xor    ebx,ebx
64010d1c:	lea    esp,[esp+0x0]
64010d20:	mov    eax,DWORD PTR [ebp-0x38]
64010d23:	cmp    eax,edi
64010d25:	jne    0x64010d2b
64010d27:	xor    eax,eax
64010d29:	jmp    0x64010d43
64010d2b:	mov    ecx,DWORD PTR [ebp-0x34]
64010d2e:	sub    ecx,eax
64010d30:	mov    eax,0x92492493
64010d35:	imul   ecx
64010d37:	add    edx,ecx
64010d39:	sar    edx,0x4
64010d3c:	mov    eax,edx
64010d3e:	shr    eax,0x1f
64010d41:	add    eax,edx
64010d43:	cmp    DWORD PTR [ebp-0x10],eax
64010d46:	je     0x64010df1
64010d4c:	push   0x64024680
64010d51:	push   0x5
64010d53:	push   0x64024678
64010d58:	call   0x64006890
64010d5d:	add    esp,0xc
64010d60:	push   eax
64010d61:	lea    ecx,[ebp-0x14]
64010d64:	call   0x640065f0
64010d69:	mov    eax,DWORD PTR [eax]
64010d6b:	mov    ecx,DWORD PTR [eax-0xc]
64010d6e:	push   ecx
64010d6f:	push   eax
64010d70:	mov    ecx,esi
64010d72:	mov    BYTE PTR [ebp-0x4],0x10
64010d76:	call   0x640029f0
64010d7b:	mov    eax,DWORD PTR [ebp-0x14]
64010d7e:	add    eax,0xfffffff0
64010d81:	mov    BYTE PTR [ebp-0x4],0xf
64010d85:	lea    edx,[eax+0xc]
64010d88:	or     ecx,0xffffffff
64010d8b:	lock xadd DWORD PTR [edx],ecx
64010d8f:	dec    ecx
64010d90:	test   ecx,ecx
64010d92:	jg     0x64010d9e
64010d94:	mov    ecx,DWORD PTR [eax]
64010d96:	mov    edx,DWORD PTR [ecx]
64010d98:	push   eax
64010d99:	mov    eax,DWORD PTR [edx+0x4]
64010d9c:	call   eax
64010d9e:	mov    edi,DWORD PTR [ebp-0x38]
64010da1:	test   edi,edi
64010da3:	je     0x64010dc2
64010da5:	mov    ecx,DWORD PTR [ebp-0x34]
64010da8:	sub    ecx,edi
64010daa:	mov    eax,0x92492493
64010daf:	imul   ecx
64010db1:	add    edx,ecx
64010db3:	sar    edx,0x4
64010db6:	mov    eax,edx
64010db8:	shr    eax,0x1f
64010dbb:	add    eax,edx
64010dbd:	cmp    DWORD PTR [ebp-0x10],eax
64010dc0:	jb     0x64010dca
64010dc2:	call   0x640120d8
64010dc7:	mov    edi,DWORD PTR [ebp-0x38]
64010dca:	cmp    DWORD PTR [ebx+edi*1+0x18],0x10
64010dcf:	jb     0x64010dd7
64010dd1:	mov    edi,DWORD PTR [ebx+edi*1+0x4]
64010dd5:	jmp    0x64010ddb
64010dd7:	lea    edi,[ebx+edi*1+0x4]
64010ddb:	push   edi
64010ddc:	mov    ecx,esi
64010dde:	call   0x64002670
64010de3:	add    DWORD PTR [ebp-0x10],0x1
64010de7:	add    ebx,0x1c
64010dea:	xor    edi,edi
64010dec:	jmp    0x64010d20
64010df1:	call   DWORD PTR ds:0x6402c06c
64010df7:	push   0x110
64010dfc:	lea    ecx,[ebp+0x4]
64010dff:	push   edi
64010e00:	push   ecx
64010e01:	mov    DWORD PTR [ebp-0x14],eax
64010e04:	call   0x64012c00
64010e09:	mov    edx,DWORD PTR ds:0x6402d560
64010e0f:	mov    eax,DWORD PTR [edx+0xc]
64010e12:	add    esp,0xc
64010e15:	mov    ecx,0x6402d560
64010e1a:	mov    DWORD PTR [ebp+0x0],0x114
64010e21:	call   eax
64010e23:	add    eax,0x10
64010e26:	mov    DWORD PTR [ebp-0x10],eax
64010e29:	lea    ecx,[ebp+0x0]
64010e2c:	push   ecx
64010e2d:	mov    BYTE PTR [ebp-0x4],0x11
64010e31:	call   DWORD PTR ds:0x64024068
64010e37:	test   eax,eax
64010e39:	lea    ecx,[ebp-0x10]
64010e3c:	je     0x64010e56
64010e3e:	mov    edx,DWORD PTR [ebp+0x8]
64010e41:	mov    eax,DWORD PTR [ebp+0x4]
64010e44:	push   edx
64010e45:	push   eax
64010e46:	push   0x64024650
64010e4b:	push   ecx
64010e4c:	call   0x64001d40
64010e51:	add    esp,0x10
64010e54:	jmp    0x64010e62
64010e56:	push   0xc
64010e58:	push   0x64024634
64010e5d:	call   0x64002af0
64010e62:	xor    eax,eax
64010e64:	lea    edx,[ebp-0x8c]
64010e6a:	push   edx
64010e6b:	mov    DWORD PTR [ebp-0x8c],edi
64010e71:	mov    DWORD PTR [ebp-0x88],eax
64010e77:	mov    DWORD PTR [ebp-0x84],eax
64010e7d:	mov    DWORD PTR [ebp-0x80],eax
64010e80:	mov    DWORD PTR [ebp-0x7c],eax
64010e83:	mov    DWORD PTR [ebp-0x78],eax
64010e86:	mov    DWORD PTR [ebp-0x74],eax
64010e89:	mov    DWORD PTR [ebp-0x70],eax
64010e8c:	mov    DWORD PTR [ebp-0x6c],eax
64010e8f:	call   DWORD PTR ds:0x64024064
64010e95:	movzx  eax,WORD PTR [ebp-0x8c]
64010e9c:	cmp    eax,edi
64010e9e:	je     0x64010eae
64010ea0:	cmp    eax,0x9
64010ea3:	jne    0x64010ebd
64010ea5:	push   0x4
64010ea7:	push   0x64024628
64010eac:	jmp    0x64010eb5
64010eae:	push   0x4
64010eb0:	push   0x6402461c
64010eb5:	lea    ecx,[ebp-0x10]
64010eb8:	call   0x640029f0
64010ebd:	mov    ebx,DWORD PTR [ebp-0x10]
64010ec0:	cmp    ebx,edi
64010ec2:	jne    0x64010ec8
64010ec4:	xor    eax,eax
64010ec6:	jmp    0x64010f11
64010ec8:	push   ebx
64010ec9:	call   DWORD PTR ds:0x64024050
64010ecf:	add    eax,0x1
64010ed2:	cmp    eax,0x3fffffff
64010ed7:	jg     0x64010f0c
64010ed9:	lea    ebx,[eax+eax*1]
64010edc:	mov    eax,ebx
64010ede:	call   0x64012c80
64010ee3:	mov    edi,esp
64010ee5:	test   edi,edi
64010ee7:	je     0x64010f0c
64010ee9:	mov    eax,DWORD PTR [ebp-0x10]
64010eec:	mov    ecx,DWORD PTR [ebp-0x14]
64010eef:	push   0x0
64010ef1:	push   0x0
64010ef3:	push   ebx
64010ef4:	push   edi
64010ef5:	push   0xffffffff
64010ef7:	push   eax
64010ef8:	push   0x0
64010efa:	push   ecx
64010efb:	mov    BYTE PTR [edi],0x0
64010efe:	call   DWORD PTR ds:0x64024028
64010f04:	neg    eax
64010f06:	sbb    eax,eax
64010f08:	and    eax,edi
64010f0a:	jmp    0x64010f0e
64010f0c:	xor    eax,eax
64010f0e:	mov    ebx,DWORD PTR [ebp-0x10]
64010f11:	push   eax
64010f12:	mov    ecx,esi
64010f14:	call   0x64002670
64010f19:	lea    eax,[ebx-0x10]
64010f1c:	mov    BYTE PTR [ebp-0x4],0xf
64010f20:	lea    edx,[eax+0xc]
64010f23:	or     ecx,0xffffffff
64010f26:	lock xadd DWORD PTR [edx],ecx
64010f2a:	dec    ecx
64010f2b:	test   ecx,ecx
64010f2d:	jg     0x64010f39
64010f2f:	mov    ecx,DWORD PTR [eax]
64010f31:	mov    edx,DWORD PTR [ecx]
64010f33:	push   eax
64010f34:	mov    eax,DWORD PTR [edx+0x4]
64010f37:	call   eax
64010f39:	lea    ecx,[ebp-0x20]
64010f3c:	push   ecx
64010f3d:	call   0x6400b890
64010f42:	push   eax
64010f43:	lea    edx,[ebp-0x10]
64010f46:	push   edx
64010f47:	mov    BYTE PTR [ebp-0x4],0x12
64010f4b:	call   0x64003150
64010f50:	mov    edi,eax
64010f52:	push   0x640245e0
64010f57:	push   0x7
64010f59:	push   0x640245d8
64010f5e:	mov    BYTE PTR [ebp-0x4],0x13
64010f62:	call   0x64006890
64010f67:	add    esp,0x18
64010f6a:	push   eax
64010f6b:	lea    ecx,[ebp-0x18]
64010f6e:	call   0x640065f0
64010f73:	push   edi
64010f74:	push   eax
64010f75:	lea    eax,[ebp-0x14]
64010f78:	mov    bl,0x14
64010f7a:	push   eax
64010f7b:	mov    BYTE PTR [ebp-0x4],bl
64010f7e:	call   0x6400f6d0
64010f83:	add    esp,0xc
64010f86:	mov    eax,DWORD PTR [eax]
64010f88:	mov    ecx,DWORD PTR [eax-0xc]
64010f8b:	push   ecx
64010f8c:	push   eax
64010f8d:	mov    ecx,esi
64010f8f:	mov    BYTE PTR [ebp-0x4],0x15
64010f93:	call   0x640029f0
64010f98:	mov    eax,DWORD PTR [ebp-0x14]
64010f9b:	add    eax,0xfffffff0
64010f9e:	mov    BYTE PTR [ebp-0x4],bl
64010fa1:	lea    ecx,[eax+0xc]
64010fa4:	or     edx,0xffffffff
64010fa7:	lock xadd DWORD PTR [ecx],edx
64010fab:	dec    edx
64010fac:	test   edx,edx
64010fae:	jg     0x64010fba
64010fb0:	mov    ecx,DWORD PTR [eax]
64010fb2:	mov    edx,DWORD PTR [ecx]
64010fb4:	push   eax
64010fb5:	mov    eax,DWORD PTR [edx+0x4]
64010fb8:	call   eax
64010fba:	mov    eax,DWORD PTR [ebp-0x18]
64010fbd:	add    eax,0xfffffff0
64010fc0:	mov    BYTE PTR [ebp-0x4],0x13
64010fc4:	lea    ecx,[eax+0xc]
64010fc7:	or     edx,0xffffffff
64010fca:	lock xadd DWORD PTR [ecx],edx
64010fce:	dec    edx
64010fcf:	test   edx,edx
64010fd1:	jg     0x64010fdd
64010fd3:	mov    ecx,DWORD PTR [eax]
64010fd5:	mov    edx,DWORD PTR [ecx]
64010fd7:	push   eax
64010fd8:	mov    eax,DWORD PTR [edx+0x4]
64010fdb:	call   eax
64010fdd:	mov    eax,DWORD PTR [ebp-0x10]
64010fe0:	add    eax,0xfffffff0
64010fe3:	mov    BYTE PTR [ebp-0x4],0x12
64010fe7:	lea    ecx,[eax+0xc]
64010fea:	or     edx,0xffffffff
64010fed:	lock xadd DWORD PTR [ecx],edx
64010ff1:	dec    edx
64010ff2:	test   edx,edx
64010ff4:	jg     0x64011000
64010ff6:	mov    ecx,DWORD PTR [eax]
64010ff8:	mov    edx,DWORD PTR [ecx]
64010ffa:	push   eax
64010ffb:	mov    eax,DWORD PTR [edx+0x4]
64010ffe:	call   eax
64011000:	mov    eax,DWORD PTR [ebp-0x20]
64011003:	add    eax,0xfffffff0
64011006:	mov    BYTE PTR [ebp-0x4],0xf
6401100a:	lea    ecx,[eax+0xc]
6401100d:	or     edx,0xffffffff
64011010:	lock xadd DWORD PTR [ecx],edx
64011014:	dec    edx
64011015:	test   edx,edx
64011017:	jg     0x64011023
64011019:	mov    ecx,DWORD PTR [eax]
6401101b:	mov    edx,DWORD PTR [ecx]
6401101d:	push   eax
6401101e:	mov    eax,DWORD PTR [edx+0x4]
64011021:	call   eax
64011023:	call   DWORD PTR ds:0x6402c06c
64011029:	mov    edx,DWORD PTR ds:0x6402d560
6401102f:	mov    DWORD PTR [ebp-0x14],eax
64011032:	mov    eax,DWORD PTR [edx+0xc]
64011035:	mov    ecx,0x6402d560
6401103a:	call   eax
6401103c:	add    eax,0x10
6401103f:	mov    DWORD PTR [ebp-0x10],eax
64011042:	mov    BYTE PTR [ebp-0x4],0x16
64011046:	call   0x64003800
6401104b:	push   eax
6401104c:	push   0x640245b4
64011051:	push   0x4
64011053:	push   0x640245a8
64011058:	call   0x64006b80
6401105d:	add    esp,0xc
64011060:	push   eax
64011061:	lea    ecx,[ebp-0x10]
64011064:	push   ecx
64011065:	call   0x64001d40
6401106a:	mov    ebx,DWORD PTR [ebp-0x10]
6401106d:	mov    eax,DWORD PTR [ebx-0x8]
64011070:	mov    ecx,0x1
64011075:	sub    ecx,DWORD PTR [ebx-0x4]
64011078:	add    eax,0x1
6401107b:	add    esp,0xc
6401107e:	or     eax,ecx
64011080:	jge    0x6401108f
64011082:	push   0xffffffff
64011084:	lea    ecx,[ebp-0x10]
64011087:	call   0x64001e00
6401108c:	mov    ebx,DWORD PTR [ebp-0x10]
6401108f:	test   ebx,ebx
64011091:	je     0x640110d7
64011093:	push   ebx
64011094:	call   DWORD PTR ds:0x64024050
6401109a:	add    eax,0x1
6401109d:	cmp    eax,0x3fffffff
640110a2:	jg     0x640110d7
640110a4:	add    eax,eax
640110a6:	mov    DWORD PTR [ebp-0x20],eax
640110a9:	call   0x64012c80
640110ae:	mov    edi,esp
640110b0:	test   edi,edi
640110b2:	je     0x640110d7
640110b4:	mov    edx,DWORD PTR [ebp-0x20]
640110b7:	mov    eax,DWORD PTR [ebp-0x14]
640110ba:	push   0x0
640110bc:	push   0x0
640110be:	push   edx
640110bf:	push   edi
640110c0:	push   0xffffffff
640110c2:	push   ebx
640110c3:	push   0x0
640110c5:	push   eax
640110c6:	mov    BYTE PTR [edi],0x0
640110c9:	call   DWORD PTR ds:0x64024028
640110cf:	neg    eax
640110d1:	sbb    eax,eax
640110d3:	and    eax,edi
640110d5:	jmp    0x640110d9
640110d7:	xor    eax,eax
640110d9:	push   eax
640110da:	lea    ecx,[ebp-0x1c]
640110dd:	call   0x640065f0
640110e2:	mov    edi,eax
640110e4:	push   0x64024570
640110e9:	push   0x5
640110eb:	push   0x64024568
640110f0:	mov    BYTE PTR [ebp-0x4],0x17
640110f4:	call   0x64006890
640110f9:	add    esp,0xc
640110fc:	push   eax
640110fd:	lea    ecx,[ebp-0x2c]
64011100:	call   0x640065f0
64011105:	push   edi
64011106:	push   eax
64011107:	lea    ecx,[ebp-0x18]
6401110a:	push   ecx
6401110b:	mov    BYTE PTR [ebp-0x4],0x18
6401110f:	call   0x6400f6d0
64011114:	add    esp,0xc
64011117:	mov    eax,DWORD PTR [eax]
64011119:	mov    ecx,DWORD PTR [eax-0xc]
6401111c:	push   ecx
6401111d:	push   eax
6401111e:	mov    ecx,esi
64011120:	mov    BYTE PTR [ebp-0x4],0x19
64011124:	call   0x640029f0
64011129:	mov    eax,DWORD PTR [ebp-0x18]
6401112c:	add    eax,0xfffffff0
6401112f:	mov    BYTE PTR [ebp-0x4],0x18
64011133:	lea    edx,[eax+0xc]
64011136:	or     ecx,0xffffffff
64011139:	lock xadd DWORD PTR [edx],ecx
6401113d:	dec    ecx
6401113e:	test   ecx,ecx
64011140:	jg     0x6401114c
64011142:	mov    ecx,DWORD PTR [eax]
64011144:	mov    edx,DWORD PTR [ecx]
64011146:	push   eax
64011147:	mov    eax,DWORD PTR [edx+0x4]
6401114a:	call   eax
6401114c:	mov    eax,DWORD PTR [ebp-0x2c]
6401114f:	add    eax,0xfffffff0
64011152:	mov    BYTE PTR [ebp-0x4],0x17
64011156:	lea    ecx,[eax+0xc]
64011159:	or     edx,0xffffffff
6401115c:	lock xadd DWORD PTR [ecx],edx
64011160:	dec    edx
64011161:	test   edx,edx
64011163:	jg     0x6401116f
64011165:	mov    ecx,DWORD PTR [eax]
64011167:	mov    edx,DWORD PTR [ecx]
64011169:	push   eax
6401116a:	mov    eax,DWORD PTR [edx+0x4]
6401116d:	call   eax
6401116f:	mov    eax,DWORD PTR [ebp-0x1c]
64011172:	add    eax,0xfffffff0
64011175:	mov    BYTE PTR [ebp-0x4],0x16
64011179:	lea    ecx,[eax+0xc]
6401117c:	or     edx,0xffffffff
6401117f:	lock xadd DWORD PTR [ecx],edx
64011183:	dec    edx
64011184:	test   edx,edx
64011186:	jg     0x64011192
64011188:	mov    ecx,DWORD PTR [eax]
6401118a:	mov    edx,DWORD PTR [ecx]
6401118c:	push   eax
6401118d:	mov    eax,DWORD PTR [edx+0x4]
64011190:	call   eax
64011192:	add    ebx,0xfffffff0
64011195:	mov    BYTE PTR [ebp-0x4],0xf
64011199:	lea    ecx,[ebx+0xc]
6401119c:	or     edx,0xffffffff
6401119f:	lock xadd DWORD PTR [ecx],edx
640111a3:	dec    edx
640111a4:	test   edx,edx
640111a6:	jg     0x640111b2
640111a8:	mov    ecx,DWORD PTR [ebx]
640111aa:	mov    eax,DWORD PTR [ecx]
640111ac:	mov    edx,DWORD PTR [eax+0x4]
640111af:	push   ebx
640111b0:	call   edx
640111b2:	lea    eax,[ebp-0x9c]
640111b8:	push   eax
640111b9:	call   0x640039d0
640111be:	mov    ecx,DWORD PTR [eax]
640111c0:	mov    DWORD PTR [ebp-0x68],ecx
640111c3:	mov    edx,DWORD PTR [eax+0x4]
640111c6:	mov    DWORD PTR [ebp-0x64],edx
640111c9:	mov    ecx,DWORD PTR [eax+0x8]
640111cc:	push   0x6402453c
640111d1:	mov    DWORD PTR [ebp-0x60],ecx
640111d4:	mov    edx,DWORD PTR [eax+0xc]
640111d7:	push   0x5
640111d9:	push   0x64024534
640111de:	mov    DWORD PTR [ebp-0x5c],edx
640111e1:	call   0x64006890
640111e6:	add    esp,0x10
640111e9:	push   eax
640111ea:	lea    ecx,[ebp-0x10]
640111ed:	call   0x640065f0
640111f2:	lea    eax,[ebp-0x68]
640111f5:	push   eax
640111f6:	lea    ecx,[ebp-0x2c]
640111f9:	push   ecx
640111fa:	mov    BYTE PTR [ebp-0x4],0x1a
640111fe:	call   0x64002eb0
64011203:	push   eax
64011204:	lea    edx,[ebp-0x10]
64011207:	push   edx
64011208:	lea    eax,[ebp-0x1c]
6401120b:	mov    bl,0x1b
6401120d:	push   eax
6401120e:	mov    BYTE PTR [ebp-0x4],bl
64011211:	call   0x6400f6d0
64011216:	add    esp,0x14
64011219:	mov    eax,DWORD PTR [eax]
6401121b:	mov    ecx,DWORD PTR [eax-0xc]
6401121e:	push   ecx
6401121f:	push   eax
64011220:	mov    ecx,esi
64011222:	mov    BYTE PTR [ebp-0x4],0x1c
64011226:	call   0x640029f0
6401122b:	mov    eax,DWORD PTR [ebp-0x1c]
6401122e:	add    eax,0xfffffff0
64011231:	mov    BYTE PTR [ebp-0x4],bl
64011234:	lea    ecx,[eax+0xc]
64011237:	or     edx,0xffffffff
6401123a:	lock xadd DWORD PTR [ecx],edx
6401123e:	dec    edx
6401123f:	test   edx,edx
64011241:	jg     0x6401124d
64011243:	mov    ecx,DWORD PTR [eax]
64011245:	mov    edx,DWORD PTR [ecx]
64011247:	push   eax
64011248:	mov    eax,DWORD PTR [edx+0x4]
6401124b:	call   eax
6401124d:	mov    eax,DWORD PTR [ebp-0x2c]
64011250:	add    eax,0xfffffff0
64011253:	mov    BYTE PTR [ebp-0x4],0x1a
64011257:	lea    ecx,[eax+0xc]
6401125a:	or     edx,0xffffffff
6401125d:	lock xadd DWORD PTR [ecx],edx
64011261:	dec    edx
64011262:	test   edx,edx
64011264:	jg     0x64011270
64011266:	mov    ecx,DWORD PTR [eax]
64011268:	mov    edx,DWORD PTR [ecx]
6401126a:	push   eax
6401126b:	mov    eax,DWORD PTR [edx+0x4]
6401126e:	call   eax
64011270:	mov    eax,DWORD PTR [ebp-0x10]
64011273:	add    eax,0xfffffff0
64011276:	mov    BYTE PTR [ebp-0x4],0xf
6401127a:	lea    ecx,[eax+0xc]
6401127d:	or     edx,0xffffffff
64011280:	lock xadd DWORD PTR [ecx],edx
64011284:	dec    edx
64011285:	test   edx,edx
64011287:	jg     0x64011293
64011289:	mov    ecx,DWORD PTR [eax]
6401128b:	mov    edx,DWORD PTR [ecx]
6401128d:	push   eax
6401128e:	mov    eax,DWORD PTR [edx+0x4]
64011291:	call   eax
64011293:	lea    ecx,[ebp-0x1c]
64011296:	push   0x1
64011298:	push   ecx
64011299:	call   0x64006120
6401129e:	add    esp,0x8
640112a1:	mov    eax,DWORD PTR [eax]
640112a3:	mov    ecx,DWORD PTR [eax-0xc]
640112a6:	push   ecx
640112a7:	push   eax
640112a8:	mov    ecx,esi
640112aa:	mov    BYTE PTR [ebp-0x4],0x1d
640112ae:	call   0x640029f0
640112b3:	mov    eax,DWORD PTR [ebp-0x1c]
640112b6:	add    eax,0xfffffff0
640112b9:	mov    BYTE PTR [ebp-0x4],0xf
640112bd:	lea    edx,[eax+0xc]
640112c0:	or     ecx,0xffffffff
640112c3:	lock xadd DWORD PTR [edx],ecx
640112c7:	dec    ecx
640112c8:	test   ecx,ecx
640112ca:	jg     0x640112d6
640112cc:	mov    ecx,DWORD PTR [eax]
640112ce:	mov    edx,DWORD PTR [ecx]
640112d0:	push   eax
640112d1:	mov    eax,DWORD PTR [edx+0x4]
640112d4:	call   eax
640112d6:	mov    eax,DWORD PTR [ebp-0x38]
640112d9:	xor    edi,edi
640112db:	cmp    eax,edi
640112dd:	je     0x640112fd
640112df:	mov    ecx,DWORD PTR [ebp-0x58]
640112e2:	push   ecx
640112e3:	mov    ecx,DWORD PTR [ebp-0x34]
640112e6:	lea    edx,[ebp-0x3c]
640112e9:	push   edx
640112ea:	push   ecx
640112eb:	push   eax
640112ec:	call   0x6400c170
640112f1:	mov    edx,DWORD PTR [ebp-0x38]
640112f4:	push   edx
640112f5:	call   0x64011d22
640112fa:	add    esp,0x14
640112fd:	mov    eax,DWORD PTR [ebp-0x24]
64011300:	add    eax,0xfffffff0
64011303:	mov    DWORD PTR [ebp-0x38],edi
64011306:	mov    DWORD PTR [ebp-0x34],edi
64011309:	mov    DWORD PTR [ebp-0x30],edi
6401130c:	mov    BYTE PTR [ebp-0x4],0x6
64011310:	lea    ecx,[eax+0xc]
64011313:	or     edx,0xffffffff
64011316:	lock xadd DWORD PTR [ecx],edx
6401131a:	dec    edx
6401131b:	test   edx,edx
6401131d:	jg     0x64011329
6401131f:	mov    ecx,DWORD PTR [eax]
64011321:	mov    edx,DWORD PTR [ecx]
64011323:	push   eax
64011324:	mov    eax,DWORD PTR [edx+0x4]
64011327:	call   eax
64011329:	mov    eax,DWORD PTR [ebp-0x48]
6401132c:	add    eax,0xfffffff0
6401132f:	mov    BYTE PTR [ebp-0x4],0x5
64011333:	lea    ecx,[eax+0xc]
64011336:	or     edx,0xffffffff
64011339:	lock xadd DWORD PTR [ecx],edx
6401133d:	dec    edx
6401133e:	test   edx,edx
64011340:	jg     0x6401134c
64011342:	mov    ecx,DWORD PTR [eax]
64011344:	mov    edx,DWORD PTR [ecx]
64011346:	push   eax
64011347:	mov    eax,DWORD PTR [edx+0x4]
6401134a:	call   eax
6401134c:	mov    eax,DWORD PTR [ebp-0x28]
6401134f:	add    eax,0xfffffff0
64011352:	mov    BYTE PTR [ebp-0x4],0x2
64011356:	lea    ecx,[eax+0xc]
64011359:	or     edx,0xffffffff
6401135c:	lock xadd DWORD PTR [ecx],edx
64011360:	dec    edx
64011361:	test   edx,edx
64011363:	jg     0x6401136f
64011365:	mov    ecx,DWORD PTR [eax]
64011367:	mov    edx,DWORD PTR [ecx]
64011369:	push   eax
6401136a:	mov    eax,DWORD PTR [edx+0x4]
6401136d:	call   eax
6401136f:	mov    eax,DWORD PTR [ebp-0x54]
64011372:	add    eax,0xfffffff0
64011375:	mov    BYTE PTR [ebp-0x4],0x1
64011379:	lea    ecx,[eax+0xc]
6401137c:	or     edx,0xffffffff
6401137f:	lock xadd DWORD PTR [ecx],edx
64011383:	dec    edx
64011384:	test   edx,edx
64011386:	jg     0x64011392
64011388:	mov    ecx,DWORD PTR [eax]
6401138a:	mov    edx,DWORD PTR [ecx]
6401138c:	push   eax
6401138d:	mov    eax,DWORD PTR [edx+0x4]
64011390:	call   eax
64011392:	mov    eax,DWORD PTR [ebp-0x4c]
64011395:	add    eax,0xfffffff0
64011398:	mov    BYTE PTR [ebp-0x4],0x0
6401139c:	lea    ecx,[eax+0xc]
6401139f:	or     edx,0xffffffff
640113a2:	lock xadd DWORD PTR [ecx],edx
640113a6:	dec    edx
640113a7:	test   edx,edx
640113a9:	jg     0x640113b5
640113ab:	mov    ecx,DWORD PTR [eax]
640113ad:	mov    edx,DWORD PTR [ecx]
640113af:	push   eax
640113b0:	mov    eax,DWORD PTR [edx+0x4]
640113b3:	call   eax
640113b5:	mov    eax,esi
640113b7:	lea    esp,[ebp-0xac]
640113bd:	mov    ecx,DWORD PTR [ebp-0xc]
640113c0:	mov    DWORD PTR fs:0x0,ecx
640113c7:	pop    ecx
640113c8:	pop    edi
640113c9:	pop    esi
640113ca:	pop    ebx
640113cb:	mov    ecx,DWORD PTR [ebp+0x124]
640113d1:	xor    ecx,ebp
640113d3:	call   0x6401257c
640113d8:	add    ebp,0x128
640113de:	mov    esp,ebp
640113e0:	pop    ebp
640113e1:	ret    
640113e2:	int3   
640113e3:	int3   
640113e4:	int3   
640113e5:	int3   
640113e6:	int3   
640113e7:	int3   
640113e8:	int3   
640113e9:	int3   
640113ea:	int3   
640113eb:	int3   
640113ec:	int3   
640113ed:	int3   
640113ee:	int3   
640113ef:	int3   
640113f0:	push   ebp
640113f1:	mov    ebp,esp
640113f3:	push   0xffffffff
640113f5:	push   0x64021e18
640113fa:	mov    eax,fs:0x0
64011400:	push   eax
64011401:	sub    esp,0x50
64011404:	mov    eax,ds:0x6402c09c
64011409:	xor    eax,ebp
6401140b:	mov    DWORD PTR [ebp-0x10],eax
6401140e:	push   ebx
6401140f:	push   esi
64011410:	push   edi
64011411:	push   eax
64011412:	lea    eax,[ebp-0xc]
64011415:	mov    fs:0x0,eax
6401141b:	call   DWORD PTR ds:0x6402c06c
64011421:	push   0xea60
64011426:	mov    DWORD PTR [ebp-0x3c],eax
64011429:	call   0x6400f450
6401142e:	add    esp,0x4
64011431:	mov    DWORD PTR [ebp-0x34],0x0
64011438:	lea    eax,[ebp-0x30]
6401143b:	push   eax
6401143c:	call   0x64010850
64011441:	add    esp,0x4
64011444:	xor    esi,esi
64011446:	mov    DWORD PTR [ebp-0x4],esi
64011449:	mov    DWORD PTR [ebp-0x14],0xf
64011450:	mov    DWORD PTR [ebp-0x18],esi
64011453:	mov    BYTE PTR [ebp-0x28],0x0
64011457:	mov    eax,DWORD PTR [ebp-0x30]
6401145a:	cmp    eax,esi
6401145c:	mov    BYTE PTR [ebp-0x4],0x1
64011460:	mov    ebx,eax
64011462:	jne    0x64011468
64011464:	xor    ecx,ecx
64011466:	jmp    0x640114af
64011468:	push   eax
64011469:	call   DWORD PTR ds:0x64024050
6401146f:	add    eax,0x1
64011472:	cmp    eax,0x3fffffff
64011477:	jg     0x640114a9
64011479:	lea    edi,[eax+eax*1]
6401147c:	mov    eax,edi
6401147e:	call   0x64012c80
64011483:	mov    esi,esp
64011485:	test   esi,esi
64011487:	je     0x640114a9
64011489:	mov    ecx,DWORD PTR [ebp-0x3c]
6401148c:	push   0x0
6401148e:	push   0x0
64011490:	push   edi
64011491:	push   esi
64011492:	push   0xffffffff
64011494:	push   ebx
64011495:	push   0x0
64011497:	push   ecx
64011498:	mov    BYTE PTR [esi],0x0
6401149b:	call   DWORD PTR ds:0x64024028
640114a1:	neg    eax
640114a3:	sbb    eax,eax
640114a5:	and    eax,esi
640114a7:	jmp    0x640114ab
640114a9:	xor    eax,eax
640114ab:	mov    ecx,eax
640114ad:	xor    esi,esi
640114af:	mov    eax,ecx
640114b1:	mov    DWORD PTR [ebp-0x48],esi
640114b4:	mov    DWORD PTR [ebp-0x44],0xf
640114bb:	mov    BYTE PTR [ebp-0x58],0x0
640114bf:	lea    esi,[eax+0x1]
640114c2:	mov    dl,BYTE PTR [eax]
640114c4:	add    eax,0x1
640114c7:	test   dl,dl
640114c9:	jne    0x640114c2
640114cb:	sub    eax,esi
640114cd:	push   eax
640114ce:	push   ecx
640114cf:	lea    ecx,[ebp-0x5c]
640114d2:	call   0x64001860
640114d7:	lea    edx,[ebp-0x2c]
640114da:	push   edx
640114db:	lea    eax,[ebp-0x5c]
640114de:	push   eax
640114df:	mov    BYTE PTR [ebp-0x4],0x2
640114e3:	call   0x640105a0
640114e8:	mov    edi,0x10
640114ed:	add    esp,0x8
640114f0:	cmp    DWORD PTR [ebp-0x44],edi
640114f3:	mov    bl,al
640114f5:	mov    BYTE PTR [ebp-0x4],0x1
640114f9:	jb     0x64011507
640114fb:	mov    ecx,DWORD PTR [ebp-0x58]
640114fe:	push   ecx
640114ff:	call   0x64011d22
64011504:	add    esp,0x4
64011507:	test   bl,bl
64011509:	jne    0x6401159c
6401150f:	xor    ebx,ebx
64011511:	xor    esi,esi
64011513:	lea    edx,[ebp-0x38]
64011516:	push   ebx
64011517:	push   edx
64011518:	mov    DWORD PTR [ebp-0x38],ebx
6401151b:	call   0x6400e330
64011520:	call   eax
64011522:	test   eax,eax
64011524:	je     0x64011534
64011526:	add    esi,0x3e8
6401152c:	cmp    esi,0x493e0
64011532:	ja     0x64011541
64011534:	push   0x3e8
64011539:	call   DWORD PTR ds:0x6402404c
6401153f:	jmp    0x64011513
64011541:	cmp    DWORD PTR [ebp-0x14],edi
64011544:	jb     0x64011552
64011546:	mov    eax,DWORD PTR [ebp-0x28]
64011549:	push   eax
6401154a:	call   0x64011d22
6401154f:	add    esp,0x4
64011552:	mov    eax,DWORD PTR [ebp-0x30]
64011555:	add    eax,0xfffffff0
64011558:	mov    DWORD PTR [ebp-0x14],0xf
6401155f:	mov    DWORD PTR [ebp-0x18],ebx
64011562:	mov    BYTE PTR [ebp-0x28],0x0
64011566:	mov    DWORD PTR [ebp-0x4],0xffffffff
6401156d:	lea    ecx,[eax+0xc]
64011570:	or     edx,0xffffffff
64011573:	lock xadd DWORD PTR [ecx],edx
64011577:	dec    edx
64011578:	test   edx,edx
6401157a:	jg     0x64011586
6401157c:	mov    ecx,DWORD PTR [eax]
6401157e:	mov    edx,DWORD PTR [ecx]
64011580:	push   eax
64011581:	mov    eax,DWORD PTR [edx+0x4]
64011584:	call   eax
64011586:	mov    eax,DWORD PTR [ebp-0x34]
64011589:	add    eax,0x1
6401158c:	cmp    eax,0x3
6401158f:	mov    DWORD PTR [ebp-0x34],eax
64011592:	jne    0x64011438
64011598:	xor    ebx,ebx
6401159a:	jmp    0x640115f4
6401159c:	xor    ebx,ebx
6401159e:	cmp    DWORD PTR [ebp-0x18],ebx
640115a1:	je     0x640115af
640115a3:	lea    ecx,[ebp-0x2c]
640115a6:	push   ecx
640115a7:	call   0x6400ff30
640115ac:	add    esp,0x4
640115af:	cmp    DWORD PTR [ebp-0x14],edi
640115b2:	jb     0x640115c0
640115b4:	mov    edx,DWORD PTR [ebp-0x28]
640115b7:	push   edx
640115b8:	call   0x64011d22
640115bd:	add    esp,0x4
640115c0:	mov    eax,DWORD PTR [ebp-0x30]
640115c3:	add    eax,0xfffffff0
640115c6:	mov    DWORD PTR [ebp-0x14],0xf
640115cd:	mov    DWORD PTR [ebp-0x18],ebx
640115d0:	mov    BYTE PTR [ebp-0x28],0x0
640115d4:	mov    DWORD PTR [ebp-0x4],0xffffffff
640115db:	lea    ecx,[eax+0xc]
640115de:	or     edx,0xffffffff
640115e1:	lock xadd DWORD PTR [ecx],edx
640115e5:	dec    edx
640115e6:	test   edx,edx
640115e8:	jg     0x640115f4
640115ea:	mov    ecx,DWORD PTR [eax]
640115ec:	mov    edx,DWORD PTR [ecx]
640115ee:	push   eax
640115ef:	mov    eax,DWORD PTR [edx+0x4]
640115f2:	call   eax
640115f4:	xor    esi,esi
640115f6:	lea    ecx,[ebp-0x40]
640115f9:	push   ebx
640115fa:	push   ecx
640115fb:	mov    DWORD PTR [ebp-0x40],ebx
640115fe:	call   0x6400e330
64011603:	call   eax
64011605:	test   eax,eax
64011607:	je     0x6401161b
64011609:	add    esi,0x3e8
6401160f:	cmp    esi,0x12e1fc0
64011615:	ja     0x64011431
6401161b:	push   0x3e8
64011620:	call   DWORD PTR ds:0x6402404c
64011626:	jmp    0x640115f6
64011628:	int3   
64011629:	int3   
6401162a:	int3   
6401162b:	int3   
6401162c:	int3   
6401162d:	int3   
6401162e:	int3   
6401162f:	int3   
64011630:	sub    esp,0x20c
64011636:	mov    eax,ds:0x6402c09c
6401163b:	xor    eax,esp
6401163d:	mov    DWORD PTR [esp+0x208],eax
64011644:	push   0x208
64011649:	lea    eax,[esp+0x4]
6401164d:	push   eax
6401164e:	push   0x0
64011650:	call   DWORD PTR ds:0x64024070
64011656:	test   eax,eax
64011658:	je     0x640116a7
6401165a:	lea    ecx,[esp]
6401165d:	push   0x104
64011662:	push   ecx
64011663:	call   0x64012be7
64011668:	lea    edx,[esp+0x8]
6401166c:	push   0x640248c8
64011671:	push   edx
64011672:	call   0x640126c1
64011677:	add    esp,0x10
6401167a:	test   eax,eax
6401167c:	je     0x640116a7
6401167e:	call   0x64010690
64011683:	test   al,al
64011685:	je     0x640116a7
64011687:	push   0x0
64011689:	push   0x0
6401168b:	push   0x0
6401168d:	push   0x640113f0
64011692:	push   0x0
64011694:	push   0x0
64011696:	call   DWORD PTR ds:0x6402406c
6401169c:	test   eax,eax
6401169e:	je     0x640116a7
640116a0:	push   eax
640116a1:	call   DWORD PTR ds:0x64024040
640116a7:	mov    ecx,DWORD PTR [esp+0x208]
640116ae:	xor    ecx,esp
640116b0:	xor    eax,eax
640116b2:	call   0x6401257c
640116b7:	add    esp,0x20c
640116bd:	ret    0x4
640116c0:	push   0x0
640116c2:	push   0x0
640116c4:	push   0x0
640116c6:	push   0x64011630
640116cb:	push   0x0
640116cd:	push   0x0
640116cf:	call   DWORD PTR ds:0x6402406c
640116d5:	ret    
640116d6:	push   ebp
640116d7:	mov    ebp,esp
640116d9:	sub    esp,0xc
640116dc:	mov    eax,ds:0x6402c09c
640116e1:	xor    eax,ebp
640116e3:	mov    DWORD PTR [ebp-0x4],eax
640116e6:	push   esi
640116e7:	xor    esi,esi
640116e9:	call   DWORD PTR ds:0x640240e4
640116ef:	push   0x7
640116f1:	lea    ecx,[ebp-0xc]
640116f4:	push   ecx
640116f5:	push   0x1004
640116fa:	push   eax
640116fb:	call   DWORD PTR ds:0x640240e0
64011701:	test   eax,eax
64011703:	je     0x64011724
64011705:	mov    cl,BYTE PTR [ebp-0xc]
64011708:	test   cl,cl
6401170a:	lea    eax,[ebp-0xc]
6401170d:	je     0x64011724
6401170f:	imul   esi,esi,0xa
64011712:	movsx  ecx,cl
64011715:	inc    eax
64011716:	lea    esi,[esi+ecx*1-0x30]
6401171a:	mov    cl,BYTE PTR [eax]
6401171c:	test   cl,cl
6401171e:	jne    0x6401170f
64011720:	test   esi,esi
64011722:	jne    0x6401172c
64011724:	call   DWORD PTR ds:0x640240dc
6401172a:	mov    esi,eax
6401172c:	mov    ecx,DWORD PTR [ebp-0x4]
6401172f:	mov    eax,esi
64011731:	xor    ecx,ebp
64011733:	pop    esi
64011734:	call   0x6401257c
64011739:	leave  
6401173a:	ret    
6401173b:	push   0x3
6401173d:	pop    eax
6401173e:	ret    
6401173f:	push   ebp
64011740:	mov    ebp,esp
64011742:	sub    esp,0x98
64011748:	mov    eax,ds:0x6402c09c
6401174d:	xor    eax,ebp
6401174f:	mov    DWORD PTR [ebp-0x4],eax
64011752:	lea    eax,[ebp-0x98]
64011758:	push   eax
64011759:	mov    DWORD PTR [ebp-0x98],0x94
64011763:	call   DWORD PTR ds:0x640240e8
64011769:	cmp    DWORD PTR [ebp-0x88],0x2
64011770:	jne    0x64011780
64011772:	cmp    DWORD PTR [ebp-0x94],0x5
64011779:	mov    eax,0x6401173b
6401177e:	jae    0x64011785
64011780:	mov    eax,0x640116d6
64011785:	push   eax
64011786:	push   0x6402c06c
6401178b:	call   DWORD PTR ds:0x640240d8
64011791:	call   DWORD PTR ds:0x6402c06c
64011797:	mov    ecx,DWORD PTR [ebp-0x4]
6401179a:	xor    ecx,ebp
6401179c:	call   0x6401257c
640117a1:	leave  
640117a2:	ret    
640117a3:	push   esi
640117a4:	push   0x18
640117a6:	mov    esi,ecx
640117a8:	push   0x0
640117aa:	push   esi
640117ab:	call   0x64012c00
640117b0:	add    esp,0xc
640117b3:	mov    eax,esi
640117b5:	pop    esi
640117b6:	ret    
640117b7:	push   0xc
640117b9:	push   0x64029630
640117be:	call   0x64013ac0
640117c3:	and    DWORD PTR [ebp-0x4],0x0
640117c7:	push   ecx
640117c8:	call   DWORD PTR ds:0x6402401c
640117ce:	and    DWORD PTR [ebp-0x1c],0x0
640117d2:	jmp    0x640117f2
640117d4:	mov    eax,DWORD PTR [ebp-0x14]
640117d7:	mov    eax,DWORD PTR [eax]
640117d9:	mov    eax,DWORD PTR [eax]
640117db:	xor    ecx,ecx
640117dd:	cmp    eax,0xc0000017
640117e2:	sete   cl
640117e5:	mov    eax,ecx
640117e7:	ret    
640117e8:	mov    esp,DWORD PTR [ebp-0x18]
640117eb:	mov    DWORD PTR [ebp-0x1c],0x8007000e
640117f2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640117f9:	mov    eax,DWORD PTR [ebp-0x1c]
640117fc:	call   0x64013b05
64011801:	ret    
64011802:	mov    eax,DWORD PTR [esp+0x4]
64011806:	test   eax,eax
64011808:	jne    0x64011811
6401180a:	mov    eax,0x80070057
6401180f:	jmp    0x64011822
64011811:	cmp    DWORD PTR [eax],0x2c
64011814:	jne    0x6401180a
64011816:	and    DWORD PTR [eax+0x1c],0x0
6401181a:	lea    ecx,[eax+0x4]
6401181d:	call   0x640117b7
64011822:	ret    0x4
64011825:	push   esi
64011826:	mov    esi,ecx
64011828:	mov    eax,DWORD PTR [esi]
6401182a:	test   eax,eax
6401182c:	je     0x64011838
6401182e:	push   eax
6401182f:	call   0x64013396
64011834:	and    DWORD PTR [esi],0x0
64011837:	pop    ecx
64011838:	and    DWORD PTR [esi+0x4],0x0
6401183c:	and    DWORD PTR [esi+0x8],0x0
64011840:	pop    esi
64011841:	ret    
64011842:	mov    eax,DWORD PTR [esp+0x4]
64011846:	test   eax,eax
64011848:	jl     0x64011857
6401184a:	cmp    eax,DWORD PTR [ecx+0x4]
6401184d:	jge    0x64011857
6401184f:	mov    ecx,DWORD PTR [ecx]
64011851:	lea    eax,[ecx+eax*2]
64011854:	ret    0x4
64011857:	push   0x0
64011859:	push   0x0
6401185b:	push   0x1
6401185d:	push   0xc000008c
64011862:	call   DWORD PTR ds:0x640240ec
64011868:	int3   
64011869:	mov    eax,DWORD PTR [esp+0x4]
6401186d:	test   eax,eax
6401186f:	jl     0x6401187e
64011871:	cmp    eax,DWORD PTR [ecx+0x4]
64011874:	jge    0x6401187e
64011876:	mov    ecx,DWORD PTR [ecx]
64011878:	lea    eax,[ecx+eax*4]
6401187b:	ret    0x4
6401187e:	push   0x0
64011880:	push   0x0
64011882:	push   0x1
64011884:	push   0xc000008c
64011889:	call   DWORD PTR ds:0x640240ec
6401188f:	int3   
64011890:	push   esi
64011891:	mov    esi,ecx
64011893:	lea    ecx,[esi+0x4]
64011896:	call   0x640117a3
6401189b:	xor    eax,eax
6401189d:	mov    DWORD PTR [esi+0x20],eax
640118a0:	mov    DWORD PTR [esi+0x24],eax
640118a3:	mov    DWORD PTR [esi+0x28],eax
640118a6:	mov    eax,esi
640118a8:	pop    esi
640118a9:	ret    
640118aa:	push   esi
640118ab:	mov    esi,DWORD PTR [esp+0x8]
640118af:	test   esi,esi
640118b1:	jne    0x640118ba
640118b3:	mov    eax,0x80070057
640118b8:	jmp    0x64011906
640118ba:	mov    eax,DWORD PTR [esi]
640118bc:	test   eax,eax
640118be:	je     0x64011904
640118c0:	cmp    eax,0x2c
640118c3:	jne    0x640118b3
640118c5:	push   edi
640118c6:	xor    edi,edi
640118c8:	cmp    DWORD PTR [esi+0x24],edi
640118cb:	jle    0x640118ee
640118cd:	push   ebx
640118ce:	lea    ebx,[esi+0x20]
640118d1:	push   edi
640118d2:	mov    ecx,ebx
640118d4:	call   0x64011842
640118d9:	movzx  eax,WORD PTR [eax]
640118dc:	push   DWORD PTR [esp+0x14]
640118e0:	push   eax
640118e1:	call   DWORD PTR ds:0x640241b8
640118e7:	inc    edi
640118e8:	cmp    edi,DWORD PTR [esi+0x24]
640118eb:	jl     0x640118d1
640118ed:	pop    ebx
640118ee:	lea    ecx,[esi+0x20]
640118f1:	call   0x64011825
640118f6:	lea    eax,[esi+0x4]
640118f9:	push   eax
640118fa:	call   DWORD PTR ds:0x640240a4
64011900:	and    DWORD PTR [esi],0x0
64011903:	pop    edi
64011904:	xor    eax,eax
64011906:	pop    esi
64011907:	ret    0x8
6401190a:	push   esi
6401190b:	mov    esi,ecx
6401190d:	cmp    BYTE PTR [esi+0x4],0x0
64011911:	je     0x6401191f
64011913:	push   DWORD PTR [esi]
64011915:	call   DWORD PTR ds:0x640240a0
6401191b:	mov    BYTE PTR [esi+0x4],0x0
6401191f:	pop    esi
64011920:	ret    
64011921:	push   esi
64011922:	mov    esi,ecx
64011924:	lea    ecx,[esi+0x18]
64011927:	call   0x640117a3
6401192c:	xor    eax,eax
6401192e:	mov    DWORD PTR [esi+0x30],eax
64011931:	mov    DWORD PTR [esi+0x34],eax
64011934:	mov    DWORD PTR [esi+0x38],eax
64011937:	mov    eax,esi
64011939:	pop    esi
6401193a:	ret    
6401193b:	push   esi
6401193c:	mov    esi,ecx
6401193e:	lea    eax,[esi+0x18]
64011941:	push   eax
64011942:	call   DWORD PTR ds:0x640240a4
64011948:	lea    ecx,[esi+0x30]
6401194b:	pop    esi
6401194c:	jmp    0x64011825
64011951:	push   ebp
64011952:	mov    ebp,esp
64011954:	push   ecx
64011955:	push   ecx
64011956:	push   esi
64011957:	mov    esi,ecx
64011959:	lea    eax,[esi+0x18]
6401195c:	push   eax
6401195d:	mov    DWORD PTR [ebp-0x8],eax
64011960:	call   DWORD PTR ds:0x6402409c
64011966:	mov    eax,DWORD PTR [esi+0x34]
64011969:	mov    ecx,DWORD PTR [ebp+0x8]
6401196c:	cmp    ecx,eax
6401196e:	mov    BYTE PTR [ebp-0x4],0x1
64011972:	jg     0x64011998
64011974:	test   ecx,ecx
64011976:	jl     0x64011998
64011978:	cmp    ecx,eax
6401197a:	jne    0x6401198b
6401197c:	mov    esi,DWORD PTR [esi+0x8]
6401197f:	lea    ecx,[ebp-0x8]
64011982:	call   0x6401190a
64011987:	mov    eax,esi
64011989:	jmp    0x640119a2
6401198b:	push   ecx
6401198c:	lea    ecx,[esi+0x30]
6401198f:	call   0x64011869
64011994:	mov    esi,DWORD PTR [eax]
64011996:	jmp    0x6401197f
64011998:	lea    ecx,[ebp-0x8]
6401199b:	call   0x6401190a
640119a0:	xor    eax,eax
640119a2:	pop    esi
640119a3:	leave  
640119a4:	ret    0x4
640119a7:	push   esi
640119a8:	mov    esi,ecx
640119aa:	call   0x64011890
640119af:	push   esi
640119b0:	mov    DWORD PTR [esi],0x2c
640119b6:	call   0x64011802
640119bb:	test   eax,eax
640119bd:	jge    0x640119c9
640119bf:	mov    BYTE PTR ds:0x64030344,0x1
640119c6:	and    DWORD PTR [esi],0x0
640119c9:	mov    eax,esi
640119cb:	pop    esi
640119cc:	ret    
640119cd:	push   ebp
640119ce:	lea    ebp,[esp-0x78]
640119d2:	sub    esp,0x98
640119d8:	mov    eax,ds:0x6402c09c
640119dd:	xor    eax,ebp
640119df:	mov    DWORD PTR [ebp+0x74],eax
640119e2:	push   esi
640119e3:	mov    esi,ecx
640119e5:	call   0x64011921
640119ea:	mov    eax,0x64000000
640119ef:	push   0x94
640119f4:	mov    DWORD PTR [esi+0x8],eax
640119f7:	mov    DWORD PTR [esi+0x4],eax
640119fa:	lea    eax,[ebp-0x20]
640119fd:	push   0x0
640119ff:	push   eax
64011a00:	mov    DWORD PTR [esi],0x3c
64011a06:	mov    BYTE PTR [esi+0xc],0x0
64011a0a:	call   0x64012c00
64011a0f:	add    esp,0xc
64011a12:	lea    eax,[ebp-0x20]
64011a15:	push   eax
64011a16:	mov    DWORD PTR [ebp-0x20],0x94
64011a1d:	call   DWORD PTR ds:0x640240e8
64011a23:	cmp    DWORD PTR [ebp-0x10],0x2
64011a27:	jne    0x64011a31
64011a29:	cmp    DWORD PTR [ebp-0x1c],0x5
64011a2d:	jb     0x64011a49
64011a2f:	jmp    0x64011a45
64011a31:	cmp    DWORD PTR [ebp-0x10],0x1
64011a35:	jne    0x64011a49
64011a37:	cmp    DWORD PTR [ebp-0x1c],0x4
64011a3b:	ja     0x64011a45
64011a3d:	jne    0x64011a49
64011a3f:	cmp    DWORD PTR [ebp-0x18],0x0
64011a43:	jbe    0x64011a49
64011a45:	mov    BYTE PTR [esi+0xc],0x1
64011a49:	lea    ecx,[esi+0x18]
64011a4c:	mov    DWORD PTR [esi+0x10],0x800
64011a53:	mov    DWORD PTR [esi+0x14],0x64024ae0
64011a5a:	call   0x640117b7
64011a5f:	test   eax,eax
64011a61:	jge    0x64011a6a
64011a63:	mov    BYTE PTR ds:0x64030344,0x1
64011a6a:	mov    ecx,DWORD PTR [ebp+0x74]
64011a6d:	mov    eax,esi
64011a6f:	xor    ecx,ebp
64011a71:	pop    esi
64011a72:	call   0x6401257c
64011a77:	add    ebp,0x78
64011a7a:	leave  
64011a7b:	ret    
64011a7c:	push   esi
64011a7d:	push   DWORD PTR ds:0x6402d4f0
64011a83:	mov    esi,ecx
64011a85:	push   esi
64011a86:	call   0x640118aa
64011a8b:	lea    ecx,[esi+0x20]
64011a8e:	pop    esi
64011a8f:	jmp    0x64011825
64011a94:	cmp    BYTE PTR [ecx+0x8],0x0
64011a98:	mov    DWORD PTR [ecx],0x64024af0
64011a9e:	je     0x64011aae
64011aa0:	mov    ecx,DWORD PTR [ecx+0x4]
64011aa3:	test   ecx,ecx
64011aa5:	je     0x64011aae
64011aa7:	push   ecx
64011aa8:	call   DWORD PTR ds:0x640240f0
64011aae:	ret    
64011aaf:	push   DWORD PTR [esp+0x4]
64011ab3:	push   0x0
64011ab5:	push   DWORD PTR [ecx+0x4]
64011ab8:	call   DWORD PTR ds:0x640240f4
64011abe:	ret    0x4
64011ac1:	cmp    DWORD PTR [esp+0x4],0x0
64011ac6:	je     0x64011ad7
64011ac8:	push   DWORD PTR [esp+0x4]
64011acc:	push   0x0
64011ace:	push   DWORD PTR [ecx+0x4]
64011ad1:	call   DWORD PTR ds:0x640240f8
64011ad7:	ret    0x4
64011ada:	push   ebp
64011adb:	mov    ebp,esp
64011add:	xor    eax,eax
64011adf:	cmp    DWORD PTR [ebp+0x8],eax
64011ae2:	jne    0x64011aed
64011ae4:	push   DWORD PTR [ebp+0xc]
64011ae7:	mov    eax,DWORD PTR [ecx]
64011ae9:	call   DWORD PTR [eax]
64011aeb:	jmp    0x64011b0e
64011aed:	cmp    DWORD PTR [ebp+0xc],eax
64011af0:	jne    0x64011afe
64011af2:	push   DWORD PTR [ebp+0x8]
64011af5:	mov    eax,DWORD PTR [ecx]
64011af7:	call   DWORD PTR [eax+0x4]
64011afa:	xor    eax,eax
64011afc:	jmp    0x64011b0e
64011afe:	push   DWORD PTR [ebp+0xc]
64011b01:	push   DWORD PTR [ebp+0x8]
64011b04:	push   eax
64011b05:	push   DWORD PTR [ecx+0x4]
64011b08:	call   DWORD PTR ds:0x640240fc
64011b0e:	pop    ebp
64011b0f:	ret    0x8
64011b12:	push   DWORD PTR [esp+0x4]
64011b16:	push   0x0
64011b18:	push   DWORD PTR [ecx+0x4]
64011b1b:	call   DWORD PTR ds:0x64024100
64011b21:	ret    0x4
64011b24:	push   esi
64011b25:	mov    esi,ecx
64011b27:	call   0x64011a94
64011b2c:	test   BYTE PTR [esp+0x8],0x1
64011b31:	je     0x64011b3a
64011b33:	push   esi
64011b34:	call   0x64011d22
64011b39:	pop    ecx
64011b3a:	mov    eax,esi
64011b3c:	pop    esi
64011b3d:	ret    0x4
64011b40:	mov    eax,ecx
64011b42:	mov    ecx,DWORD PTR [esp+0x4]
64011b46:	mov    DWORD PTR [eax+0x4],ecx
64011b49:	mov    DWORD PTR [eax],0x64024b04
64011b4f:	xor    ecx,ecx
64011b51:	mov    DWORD PTR [eax+0x14],0x2
64011b58:	mov    DWORD PTR [eax+0xc],ecx
64011b5b:	mov    DWORD PTR [eax+0x10],ecx
64011b5e:	mov    WORD PTR [eax+0x18],cx
64011b62:	mov    WORD PTR [eax+0x1a],cx
64011b66:	mov    DWORD PTR [eax+0x8],eax
64011b69:	ret    0x4
64011b6c:	mov    eax,DWORD PTR [esp+0x8]
64011b70:	mul    DWORD PTR [esp+0xc]
64011b74:	test   edx,edx
64011b76:	ja     0x64011b7d
64011b78:	cmp    eax,0xffffffff
64011b7b:	jbe    0x64011b83
64011b7d:	mov    eax,0x80070057
64011b82:	ret    
64011b83:	mov    ecx,DWORD PTR [esp+0x4]
64011b87:	mov    DWORD PTR [ecx],eax
64011b89:	xor    eax,eax
64011b8b:	ret    
64011b8c:	mov    ecx,DWORD PTR [ecx+0x4]
64011b8f:	mov    eax,DWORD PTR [ecx]
64011b91:	jmp    DWORD PTR [eax+0x4]
64011b94:	xor    edx,edx
64011b96:	lea    eax,[ecx+0x14]
64011b99:	inc    edx
64011b9a:	lock xadd DWORD PTR [eax],edx
64011b9e:	lea    eax,[ecx+0x8]
64011ba1:	ret    
64011ba2:	mov    eax,ecx
64011ba4:	ret    
64011ba5:	test   BYTE PTR [esp+0x4],0x1
64011baa:	push   esi
64011bab:	mov    esi,ecx
64011bad:	mov    DWORD PTR [esi],0x64024b04
64011bb3:	je     0x64011bbc
64011bb5:	push   esi
64011bb6:	call   0x64011d22
64011bbb:	pop    ecx
64011bbc:	mov    eax,esi
64011bbe:	pop    esi
64011bbf:	ret    0x4
64011bc2:	mov    eax,DWORD PTR [esp+0x8]
64011bc6:	mov    ecx,DWORD PTR [esp+0xc]
64011bca:	or     edx,0xffffffff
64011bcd:	sub    edx,eax
64011bcf:	cmp    edx,ecx
64011bd1:	jae    0x64011bd9
64011bd3:	mov    eax,0x80070057
64011bd8:	ret    
64011bd9:	add    eax,ecx
64011bdb:	mov    ecx,DWORD PTR [esp+0x4]
64011bdf:	mov    DWORD PTR [ecx],eax
64011be1:	xor    eax,eax
64011be3:	ret    
64011be4:	push   ebp
64011be5:	mov    ebp,esp
64011be7:	push   esi
64011be8:	mov    esi,DWORD PTR [ebp+0x8]
64011beb:	push   edi
64011bec:	push   DWORD PTR [ebp+0xc]
64011bef:	add    esi,0x8
64011bf2:	and    esi,0xfffffff8
64011bf5:	lea    eax,[ebp+0x8]
64011bf8:	push   esi
64011bf9:	push   eax
64011bfa:	mov    edi,ecx
64011bfc:	call   0x64011b6c
64011c01:	add    esp,0xc
64011c04:	test   eax,eax
64011c06:	jl     0x64011c3e
64011c08:	push   DWORD PTR [ebp+0x8]
64011c0b:	lea    eax,[ebp+0x8]
64011c0e:	push   0x10
64011c10:	push   eax
64011c11:	call   0x64011bc2
64011c16:	add    esp,0xc
64011c19:	test   eax,eax
64011c1b:	jl     0x64011c3e
64011c1d:	mov    ecx,DWORD PTR [edi+0x4]
64011c20:	push   DWORD PTR [ebp+0x8]
64011c23:	mov    eax,DWORD PTR [ecx]
64011c25:	call   DWORD PTR [eax]
64011c27:	test   eax,eax
64011c29:	je     0x64011c3e
64011c2b:	dec    esi
64011c2c:	and    DWORD PTR [eax+0x4],0x0
64011c30:	mov    DWORD PTR [eax],edi
64011c32:	mov    DWORD PTR [eax+0xc],0x1
64011c39:	mov    DWORD PTR [eax+0x8],esi
64011c3c:	jmp    0x64011c40
64011c3e:	xor    eax,eax
64011c40:	pop    edi
64011c41:	pop    esi
64011c42:	pop    ebp
64011c43:	ret    0x8
64011c46:	push   ebp
64011c47:	mov    ebp,esp
64011c49:	push   esi
64011c4a:	mov    esi,DWORD PTR [ebp+0xc]
64011c4d:	push   edi
64011c4e:	push   DWORD PTR [ebp+0x10]
64011c51:	add    esi,0x8
64011c54:	and    esi,0xfffffff8
64011c57:	lea    eax,[ebp+0xc]
64011c5a:	push   esi
64011c5b:	push   eax
64011c5c:	mov    edi,ecx
64011c5e:	call   0x64011b6c
64011c63:	add    esp,0xc
64011c66:	test   eax,eax
64011c68:	jl     0x64011c97
64011c6a:	push   DWORD PTR [ebp+0xc]
64011c6d:	lea    eax,[ebp+0xc]
64011c70:	push   0x10
64011c72:	push   eax
64011c73:	call   0x64011bc2
64011c78:	add    esp,0xc
64011c7b:	test   eax,eax
64011c7d:	jl     0x64011c97
64011c7f:	push   DWORD PTR [ebp+0xc]
64011c82:	mov    ecx,DWORD PTR [edi+0x4]
64011c85:	push   DWORD PTR [ebp+0x8]
64011c88:	mov    eax,DWORD PTR [ecx]
64011c8a:	call   DWORD PTR [eax+0x8]
64011c8d:	test   eax,eax
64011c8f:	je     0x64011c97
64011c91:	dec    esi
64011c92:	mov    DWORD PTR [eax+0x8],esi
64011c95:	jmp    0x64011c99
64011c97:	xor    eax,eax
64011c99:	pop    edi
64011c9a:	pop    esi
64011c9b:	pop    ebp
64011c9c:	ret    0xc
64011c9f:	push   0x44
64011ca1:	mov    eax,0x64021e45
64011ca6:	call   0x64013d4b
64011cab:	push   0x64024b1c
64011cb0:	lea    ecx,[ebp-0x28]
64011cb3:	call   0x64002720
64011cb8:	and    DWORD PTR [ebp-0x4],0x0
64011cbc:	lea    eax,[ebp-0x28]
64011cbf:	push   eax
64011cc0:	lea    ecx,[ebp-0x50]
64011cc3:	call   0x64002d10
64011cc8:	push   0x64029d68
64011ccd:	lea    eax,[ebp-0x50]
64011cd0:	push   eax
64011cd1:	mov    DWORD PTR [ebp-0x50],0x64024274
64011cd8:	call   0x6401216b
64011cdd:	int3   
64011cde:	push   0x44
64011ce0:	mov    eax,0x64021e68
64011ce5:	call   0x64013d4b
64011cea:	push   0x64024b2c
64011cef:	lea    ecx,[ebp-0x28]
64011cf2:	call   0x64002720
64011cf7:	and    DWORD PTR [ebp-0x4],0x0
64011cfb:	lea    eax,[ebp-0x28]
64011cfe:	push   eax
64011cff:	lea    ecx,[ebp-0x50]
64011d02:	call   0x64002d10
64011d07:	push   0x64029d2c
64011d0c:	lea    eax,[ebp-0x50]
64011d0f:	push   eax
64011d10:	mov    DWORD PTR [ebp-0x50],0x64024280
64011d17:	call   0x6401216b
64011d1c:	int3   
64011d1d:	jmp    0x64012101
64011d22:	jmp    0x64013396
64011d27:	push   ecx
64011d28:	mov    DWORD PTR [ecx],0x64024b48
64011d2e:	call   0x64013db4
64011d33:	pop    ecx
64011d34:	ret    
64011d35:	push   esi
64011d36:	mov    esi,ecx
64011d38:	call   0x64011d27
64011d3d:	test   BYTE PTR [esp+0x8],0x1
64011d42:	je     0x64011d4b
64011d44:	push   esi
64011d45:	call   0x64011d22
64011d4a:	pop    ecx
64011d4b:	mov    eax,esi
64011d4d:	pop    esi
64011d4e:	ret    0x4
64011d51:	mov    eax,DWORD PTR [esp+0x4]
64011d55:	add    ecx,0x9
64011d58:	push   ecx
64011d59:	add    eax,0x9
64011d5c:	push   eax
64011d5d:	call   0x64013e30
64011d62:	neg    eax
64011d64:	pop    ecx
64011d65:	sbb    eax,eax
64011d67:	pop    ecx
64011d68:	inc    eax
64011d69:	ret    0x4
64011d6c:	mov    eax,ecx
64011d6e:	and    DWORD PTR [eax+0x4],0x0
64011d72:	and    DWORD PTR [eax+0x8],0x0
64011d76:	mov    DWORD PTR [eax],0x64024b50
64011d7c:	ret    
64011d7d:	push   ebx
64011d7e:	mov    ebx,DWORD PTR [esp+0x8]
64011d82:	push   esi
64011d83:	push   edi
64011d84:	mov    edi,ecx
64011d86:	mov    DWORD PTR [edi],0x64024b50
64011d8c:	mov    eax,DWORD PTR [ebx]
64011d8e:	test   eax,eax
64011d90:	je     0x64011db8
64011d92:	push   eax
64011d93:	call   0x64013cc0
64011d98:	mov    esi,eax
64011d9a:	inc    esi
64011d9b:	push   esi
64011d9c:	call   0x64013473
64011da1:	test   eax,eax
64011da3:	pop    ecx
64011da4:	pop    ecx
64011da5:	mov    DWORD PTR [edi+0x4],eax
64011da8:	je     0x64011dbc
64011daa:	push   DWORD PTR [ebx]
64011dac:	push   esi
64011dad:	push   eax
64011dae:	call   0x64013eb8
64011db3:	add    esp,0xc
64011db6:	jmp    0x64011dbc
64011db8:	and    DWORD PTR [edi+0x4],0x0
64011dbc:	mov    DWORD PTR [edi+0x8],0x1
64011dc3:	mov    eax,edi
64011dc5:	pop    edi
64011dc6:	pop    esi
64011dc7:	pop    ebx
64011dc8:	ret    0x4
64011dcb:	mov    eax,ecx
64011dcd:	mov    ecx,DWORD PTR [esp+0x4]
64011dd1:	mov    DWORD PTR [eax],0x64024b50
64011dd7:	mov    ecx,DWORD PTR [ecx]
64011dd9:	and    DWORD PTR [eax+0x8],0x0
64011ddd:	mov    DWORD PTR [eax+0x4],ecx
64011de0:	ret    0x8
64011de3:	push   ebx
64011de4:	mov    ebx,DWORD PTR [esp+0x8]
64011de8:	push   esi
64011de9:	mov    esi,ecx
64011deb:	mov    DWORD PTR [esi],0x64024b50
64011df1:	mov    eax,DWORD PTR [ebx+0x8]
64011df4:	mov    DWORD PTR [esi+0x8],eax
64011df7:	test   eax,eax
64011df9:	mov    eax,DWORD PTR [ebx+0x4]
64011dfc:	push   edi
64011dfd:	je     0x64011e30
64011dff:	test   eax,eax
64011e01:	je     0x64011e2a
64011e03:	push   eax
64011e04:	call   0x64013cc0
64011e09:	mov    edi,eax
64011e0b:	inc    edi
64011e0c:	push   edi
64011e0d:	call   0x64013473
64011e12:	test   eax,eax
64011e14:	pop    ecx
64011e15:	pop    ecx
64011e16:	mov    DWORD PTR [esi+0x4],eax
64011e19:	je     0x64011e33
64011e1b:	push   DWORD PTR [ebx+0x4]
64011e1e:	push   edi
64011e1f:	push   eax
64011e20:	call   0x64013eb8
64011e25:	add    esp,0xc
64011e28:	jmp    0x64011e33
64011e2a:	and    DWORD PTR [esi+0x4],0x0
64011e2e:	jmp    0x64011e33
64011e30:	mov    DWORD PTR [esi+0x4],eax
64011e33:	pop    edi
64011e34:	mov    eax,esi
64011e36:	pop    esi
64011e37:	pop    ebx
64011e38:	ret    0x4
64011e3b:	cmp    DWORD PTR [ecx+0x8],0x0
64011e3f:	mov    DWORD PTR [ecx],0x64024b50
64011e45:	je     0x64011e50
64011e47:	push   DWORD PTR [ecx+0x4]
64011e4a:	call   0x64013396
64011e4f:	pop    ecx
64011e50:	ret    
64011e51:	mov    eax,DWORD PTR [ecx+0x4]
64011e54:	test   eax,eax
64011e56:	jne    0x64011e5d
64011e58:	mov    eax,0x64024b58
64011e5d:	ret    
64011e5e:	push   esi
64011e5f:	lea    eax,[esp+0x8]
64011e63:	push   eax
64011e64:	mov    esi,ecx
64011e66:	call   0x64011d7d
64011e6b:	mov    DWORD PTR [esi],0x64024b70
64011e71:	mov    eax,esi
64011e73:	pop    esi
64011e74:	ret    0x4
64011e77:	push   esi
64011e78:	push   DWORD PTR [esp+0x8]
64011e7c:	mov    esi,ecx
64011e7e:	call   0x64011de3
64011e83:	mov    DWORD PTR [esi],0x64024b70
64011e89:	mov    eax,esi
64011e8b:	pop    esi
64011e8c:	ret    0x4
64011e8f:	mov    DWORD PTR [ecx],0x64024b70
64011e95:	jmp    0x64011e3b
64011e9a:	push   esi
64011e9b:	mov    esi,ecx
64011e9d:	call   0x64011e3b
64011ea2:	test   BYTE PTR [esp+0x8],0x1
64011ea7:	je     0x64011eb0
64011ea9:	push   esi
64011eaa:	call   0x64011d22
64011eaf:	pop    ecx
64011eb0:	mov    eax,esi
64011eb2:	pop    esi
64011eb3:	ret    0x4
64011eb6:	push   esi
64011eb7:	mov    esi,ecx
64011eb9:	mov    DWORD PTR [esi],0x64024b70
64011ebf:	call   0x64011e3b
64011ec4:	test   BYTE PTR [esp+0x8],0x1
64011ec9:	je     0x64011ed2
64011ecb:	push   esi
64011ecc:	call   0x64011d22
64011ed1:	pop    ecx
64011ed2:	mov    eax,esi
64011ed4:	pop    esi
64011ed5:	ret    0x4
64011ed8:	push   ebp
64011ed9:	mov    ebp,esp
64011edb:	push   esi
64011edc:	mov    esi,DWORD PTR [ebp+0x14]
64011edf:	push   edi
64011ee0:	xor    edi,edi
64011ee2:	cmp    esi,edi
64011ee4:	jne    0x64011eea
64011ee6:	xor    eax,eax
64011ee8:	jmp    0x64011f4f
64011eea:	cmp    DWORD PTR [ebp+0x8],edi
64011eed:	jne    0x64011f0a
64011eef:	call   0x640142c0
64011ef4:	push   0x16
64011ef6:	pop    esi
64011ef7:	mov    DWORD PTR [eax],esi
64011ef9:	push   edi
64011efa:	push   edi
64011efb:	push   edi
64011efc:	push   edi
64011efd:	push   edi
64011efe:	call   0x640120b4
64011f03:	add    esp,0x14
64011f06:	mov    eax,esi
64011f08:	jmp    0x64011f4f
64011f0a:	cmp    DWORD PTR [ebp+0x10],edi
64011f0d:	je     0x64011f25
64011f0f:	cmp    DWORD PTR [ebp+0xc],esi
64011f12:	jb     0x64011f25
64011f14:	push   esi
64011f15:	push   DWORD PTR [ebp+0x10]
64011f18:	push   DWORD PTR [ebp+0x8]
64011f1b:	call   0x64013f20
64011f20:	add    esp,0xc
64011f23:	jmp    0x64011ee6
64011f25:	push   DWORD PTR [ebp+0xc]
64011f28:	push   edi
64011f29:	push   DWORD PTR [ebp+0x8]
64011f2c:	call   0x64012c00
64011f31:	add    esp,0xc
64011f34:	cmp    DWORD PTR [ebp+0x10],edi
64011f37:	je     0x64011eef
64011f39:	cmp    DWORD PTR [ebp+0xc],esi
64011f3c:	jae    0x64011f4c
64011f3e:	call   0x640142c0
64011f43:	push   0x22
64011f45:	pop    ecx
64011f46:	mov    DWORD PTR [eax],ecx
64011f48:	mov    esi,ecx
64011f4a:	jmp    0x64011ef9
64011f4c:	push   0x16
64011f4e:	pop    eax
64011f4f:	pop    edi
64011f50:	pop    esi
64011f51:	pop    ebp
64011f52:	ret    
64011f53:	push   ebp
64011f54:	mov    ebp,esp
64011f56:	mov    eax,DWORD PTR [ebp+0x14]
64011f59:	push   esi
64011f5a:	push   edi
64011f5b:	xor    edi,edi
64011f5d:	cmp    eax,edi
64011f5f:	je     0x64011fa8
64011f61:	cmp    DWORD PTR [ebp+0x8],edi
64011f64:	jne    0x64011f81
64011f66:	call   0x640142c0
64011f6b:	push   0x16
64011f6d:	pop    esi
64011f6e:	mov    DWORD PTR [eax],esi
64011f70:	push   edi
64011f71:	push   edi
64011f72:	push   edi
64011f73:	push   edi
64011f74:	push   edi
64011f75:	call   0x640120b4
64011f7a:	add    esp,0x14
64011f7d:	mov    eax,esi
64011f7f:	jmp    0x64011faa
64011f81:	cmp    DWORD PTR [ebp+0x10],edi
64011f84:	je     0x64011f66
64011f86:	cmp    DWORD PTR [ebp+0xc],eax
64011f89:	jae    0x64011f99
64011f8b:	call   0x640142c0
64011f90:	push   0x22
64011f92:	pop    ecx
64011f93:	mov    DWORD PTR [eax],ecx
64011f95:	mov    esi,ecx
64011f97:	jmp    0x64011f70
64011f99:	push   eax
64011f9a:	push   DWORD PTR [ebp+0x10]
64011f9d:	push   DWORD PTR [ebp+0x8]
64011fa0:	call   0x64013540
64011fa5:	add    esp,0xc
64011fa8:	xor    eax,eax
64011faa:	pop    edi
64011fab:	pop    esi
64011fac:	pop    ebp
64011fad:	ret    
64011fae:	mov    eax,DWORD PTR [esp+0x4]
64011fb2:	mov    ds:0x6402d57c,eax
64011fb7:	ret    
64011fb8:	push   ebp
64011fb9:	lea    ebp,[esp-0x2a8]
64011fc0:	sub    esp,0x328
64011fc6:	mov    eax,ds:0x6402c09c
64011fcb:	xor    eax,ebp
64011fcd:	mov    DWORD PTR [ebp+0x2a4],eax
64011fd3:	push   esi
64011fd4:	mov    DWORD PTR [ebp+0x88],eax
64011fda:	mov    DWORD PTR [ebp+0x84],ecx
64011fe0:	mov    DWORD PTR [ebp+0x80],edx
64011fe6:	mov    DWORD PTR [ebp+0x7c],ebx
64011fe9:	mov    DWORD PTR [ebp+0x78],esi
64011fec:	mov    DWORD PTR [ebp+0x74],edi
64011fef:	data16 mov WORD PTR [ebp+0xa0],ss
64011ff6:	data16 mov WORD PTR [ebp+0x94],cs
64011ffd:	data16 mov WORD PTR [ebp+0x70],ds
64012001:	data16 mov WORD PTR [ebp+0x6c],es
64012005:	data16 mov WORD PTR [ebp+0x68],fs
64012009:	data16 mov WORD PTR [ebp+0x64],gs
6401200d:	pushf  
6401200e:	pop    DWORD PTR [ebp+0x98]
64012014:	mov    esi,DWORD PTR [ebp+0x2ac]
6401201a:	lea    eax,[ebp+0x2ac]
64012020:	mov    DWORD PTR [ebp+0x9c],eax
64012026:	mov    DWORD PTR [ebp-0x28],0x10001
6401202d:	mov    DWORD PTR [ebp+0x90],esi
64012033:	mov    eax,DWORD PTR [eax-0x4]
64012036:	push   0x50
64012038:	mov    DWORD PTR [ebp+0x8c],eax
6401203e:	lea    eax,[ebp-0x80]
64012041:	push   0x0
64012043:	push   eax
64012044:	call   0x64012c00
64012049:	lea    eax,[ebp-0x80]
6401204c:	mov    DWORD PTR [ebp-0x30],eax
6401204f:	lea    eax,[ebp-0x28]
64012052:	add    esp,0xc
64012055:	mov    DWORD PTR [ebp-0x80],0xc000000d
6401205c:	mov    DWORD PTR [ebp-0x74],esi
6401205f:	mov    DWORD PTR [ebp-0x2c],eax
64012062:	call   DWORD PTR ds:0x64024114
64012068:	push   0x0
6401206a:	mov    esi,eax
6401206c:	call   DWORD PTR ds:0x64024110
64012072:	lea    eax,[ebp-0x30]
64012075:	push   eax
64012076:	call   DWORD PTR ds:0x6402410c
6401207c:	test   eax,eax
6401207e:	jne    0x6401208c
64012080:	test   esi,esi
64012082:	jne    0x6401208c
64012084:	push   0x2
64012086:	call   0x64014304
6401208b:	pop    ecx
6401208c:	push   0xc000000d
64012091:	call   DWORD PTR ds:0x64024048
64012097:	push   eax
64012098:	call   DWORD PTR ds:0x64024108
6401209e:	mov    ecx,DWORD PTR [ebp+0x2a4]
640120a4:	xor    ecx,ebp
640120a6:	pop    esi
640120a7:	call   0x6401257c
640120ac:	add    ebp,0x2a8
640120b2:	leave  
640120b3:	ret    
640120b4:	push   ebp
640120b5:	mov    ebp,esp
640120b7:	push   DWORD PTR ds:0x6402d57c
640120bd:	call   0x640143ef
640120c2:	test   eax,eax
640120c4:	pop    ecx
640120c5:	je     0x640120ca
640120c7:	pop    ebp
640120c8:	jmp    eax
640120ca:	push   0x2
640120cc:	call   0x64014304
640120d1:	pop    ecx
640120d2:	pop    ebp
640120d3:	jmp    0x64011fb8
640120d8:	xor    eax,eax
640120da:	push   eax
640120db:	push   eax
640120dc:	push   eax
640120dd:	push   eax
640120de:	push   eax
640120df:	call   0x640120b4
640120e4:	add    esp,0x14
640120e7:	ret    
640120e8:	push   esi
640120e9:	push   0x1
640120eb:	push   0x6402c098
640120f0:	mov    esi,ecx
640120f2:	call   0x64011dcb
640120f7:	mov    DWORD PTR [esi],0x6402425c
640120fd:	mov    eax,esi
640120ff:	pop    esi
64012100:	ret    
64012101:	push   ebp
64012102:	mov    ebp,esp
64012104:	sub    esp,0xc
64012107:	jmp    0x64012116
64012109:	push   DWORD PTR [ebp+0x8]
6401210c:	call   0x6401493b
64012111:	test   eax,eax
64012113:	pop    ecx
64012114:	je     0x64012125
64012116:	push   DWORD PTR [ebp+0x8]
64012119:	call   0x64013473
6401211e:	test   eax,eax
64012120:	pop    ecx
64012121:	je     0x64012109
64012123:	leave  
64012124:	ret    
64012125:	test   BYTE PTR ds:0x6402d58c,0x1
6401212c:	mov    esi,0x6402d580
64012131:	jne    0x6401214c
64012133:	or     DWORD PTR ds:0x6402d58c,0x1
6401213a:	mov    ecx,esi
6401213c:	call   0x640120e8
64012141:	push   0x640232aa
64012146:	call   0x640126af
6401214b:	pop    ecx
6401214c:	push   esi
6401214d:	lea    ecx,[ebp-0xc]
64012150:	call   0x64011de3
64012155:	push   0x64029c9c
6401215a:	lea    eax,[ebp-0xc]
6401215d:	push   eax
6401215e:	mov    DWORD PTR [ebp-0xc],0x6402425c
64012165:	call   0x6401216b
6401216a:	int3   
6401216b:	push   ebp
6401216c:	mov    ebp,esp
6401216e:	sub    esp,0x20
64012171:	mov    eax,DWORD PTR [ebp+0x8]
64012174:	push   esi
64012175:	push   edi
64012176:	push   0x8
64012178:	pop    ecx
64012179:	mov    esi,0x64024b78
6401217e:	lea    edi,[ebp-0x20]
64012181:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64012183:	mov    DWORD PTR [ebp-0x8],eax
64012186:	mov    eax,DWORD PTR [ebp+0xc]
64012189:	test   eax,eax
6401218b:	pop    edi
6401218c:	mov    DWORD PTR [ebp-0x4],eax
6401218f:	pop    esi
64012190:	je     0x6401219e
64012192:	test   BYTE PTR [eax],0x8
64012195:	je     0x6401219e
64012197:	mov    DWORD PTR [ebp-0xc],0x1994000
6401219e:	lea    eax,[ebp-0xc]
640121a1:	push   eax
640121a2:	push   DWORD PTR [ebp-0x10]
640121a5:	push   DWORD PTR [ebp-0x1c]
640121a8:	push   DWORD PTR [ebp-0x20]
640121ab:	call   DWORD PTR ds:0x640240ec
640121b1:	leave  
640121b2:	ret    0x8
640121b5:	push   ebp
640121b6:	mov    ebp,esp
640121b8:	push   ecx
640121b9:	push   ebx
640121ba:	mov    eax,DWORD PTR [ebp+0xc]
640121bd:	add    eax,0xc
640121c0:	mov    DWORD PTR [ebp-0x4],eax
640121c3:	mov    ebx,DWORD PTR fs:0x0
640121ca:	mov    eax,DWORD PTR [ebx]
640121cc:	mov    fs:0x0,eax
640121d2:	mov    eax,DWORD PTR [ebp+0x8]
640121d5:	mov    ebx,DWORD PTR [ebp+0xc]
640121d8:	mov    ebp,DWORD PTR [ebp-0x4]
640121db:	mov    esp,DWORD PTR [ebx-0x4]
640121de:	jmp    eax
640121e0:	pop    ebx
640121e1:	leave  
640121e2:	ret    0x8
640121e5:	pop    eax
640121e6:	pop    ecx
640121e7:	xchg   DWORD PTR [esp],eax
640121ea:	jmp    eax
640121ec:	push   ebp
640121ed:	mov    ebp,esp
640121ef:	push   ecx
640121f0:	push   ecx
640121f1:	push   ebx
640121f2:	push   esi
640121f3:	push   edi
640121f4:	mov    esi,DWORD PTR fs:0x0
640121fb:	mov    DWORD PTR [ebp-0x4],esi
640121fe:	mov    DWORD PTR [ebp-0x8],0x64012215
64012205:	push   0x0
64012207:	push   DWORD PTR [ebp+0xc]
6401220a:	push   DWORD PTR [ebp-0x8]
6401220d:	push   DWORD PTR [ebp+0x8]
64012210:	call   0x6401e75c
64012215:	mov    eax,DWORD PTR [ebp+0xc]
64012218:	mov    eax,DWORD PTR [eax+0x4]
6401221b:	and    eax,0xfffffffd
6401221e:	mov    ecx,DWORD PTR [ebp+0xc]
64012221:	mov    DWORD PTR [ecx+0x4],eax
64012224:	mov    edi,DWORD PTR fs:0x0
6401222b:	mov    ebx,DWORD PTR [ebp-0x4]
6401222e:	mov    DWORD PTR [ebx],edi
64012230:	mov    DWORD PTR fs:0x0,ebx
64012237:	pop    edi
64012238:	pop    esi
64012239:	pop    ebx
6401223a:	leave  
6401223b:	ret    0x8
6401223e:	push   ebp
6401223f:	mov    ebp,esp
64012241:	sub    esp,0x8
64012244:	push   ebx
64012245:	push   esi
64012246:	push   edi
64012247:	cld    
64012248:	mov    DWORD PTR [ebp-0x4],eax
6401224b:	xor    eax,eax
6401224d:	push   eax
6401224e:	push   eax
6401224f:	push   eax
64012250:	push   DWORD PTR [ebp-0x4]
64012253:	push   DWORD PTR [ebp+0x14]
64012256:	push   DWORD PTR [ebp+0x10]
64012259:	push   DWORD PTR [ebp+0xc]
6401225c:	push   DWORD PTR [ebp+0x8]
6401225f:	call   0x64015503
64012264:	add    esp,0x20
64012267:	mov    DWORD PTR [ebp-0x8],eax
6401226a:	pop    edi
6401226b:	pop    esi
6401226c:	pop    ebx
6401226d:	mov    eax,DWORD PTR [ebp-0x8]
64012270:	mov    esp,ebp
64012272:	pop    ebp
64012273:	ret    
64012274:	push   esi
64012275:	cld    
64012276:	mov    esi,DWORD PTR [esp+0xc]
6401227a:	mov    ecx,DWORD PTR [esi+0x8]
6401227d:	xor    ecx,esi
6401227f:	call   0x6401257c
64012284:	push   0x0
64012286:	push   esi
64012287:	push   DWORD PTR [esi+0x14]
6401228a:	push   DWORD PTR [esi+0xc]
6401228d:	push   0x0
6401228f:	push   DWORD PTR [esp+0x24]
64012293:	push   DWORD PTR [esi+0x10]
64012296:	push   DWORD PTR [esp+0x24]
6401229a:	call   0x64015503
6401229f:	add    esp,0x20
640122a2:	pop    esi
640122a3:	ret    
640122a4:	push   ebp
640122a5:	mov    ebp,esp
640122a7:	sub    esp,0x38
640122aa:	push   ebx
640122ab:	cmp    DWORD PTR [ebp+0x8],0x123
640122b2:	jne    0x640122c6
640122b4:	mov    eax,0x6401234d
640122b9:	mov    ecx,DWORD PTR [ebp+0xc]
640122bc:	mov    DWORD PTR [ecx],eax
640122be:	xor    eax,eax
640122c0:	inc    eax
640122c1:	jmp    0x64012376
640122c6:	and    DWORD PTR [ebp-0x28],0x0
640122ca:	mov    DWORD PTR [ebp-0x24],0x64012379
640122d1:	mov    eax,ds:0x6402c09c
640122d6:	lea    ecx,[ebp-0x28]
640122d9:	xor    eax,ecx
640122db:	mov    DWORD PTR [ebp-0x20],eax
640122de:	mov    eax,DWORD PTR [ebp+0x18]
640122e1:	mov    DWORD PTR [ebp-0x1c],eax
640122e4:	mov    eax,DWORD PTR [ebp+0xc]
640122e7:	mov    DWORD PTR [ebp-0x18],eax
640122ea:	mov    eax,DWORD PTR [ebp+0x1c]
640122ed:	mov    DWORD PTR [ebp-0x14],eax
640122f0:	mov    eax,DWORD PTR [ebp+0x20]
640122f3:	mov    DWORD PTR [ebp-0x10],eax
640122f6:	and    DWORD PTR [ebp-0xc],0x0
640122fa:	and    DWORD PTR [ebp-0x8],0x0
640122fe:	and    DWORD PTR [ebp-0x4],0x0
64012302:	mov    DWORD PTR [ebp-0xc],esp
64012305:	mov    DWORD PTR [ebp-0x8],ebp
64012308:	mov    eax,fs:0x0
6401230e:	mov    DWORD PTR [ebp-0x28],eax
64012311:	lea    eax,[ebp-0x28]
64012314:	mov    fs:0x0,eax
6401231a:	mov    DWORD PTR [ebp-0x38],0x1
64012321:	mov    eax,DWORD PTR [ebp+0x8]
64012324:	mov    DWORD PTR [ebp-0x34],eax
64012327:	mov    eax,DWORD PTR [ebp+0x10]
6401232a:	mov    DWORD PTR [ebp-0x30],eax
6401232d:	call   0x6401460b
64012332:	mov    eax,DWORD PTR [eax+0x80]
64012338:	mov    DWORD PTR [ebp-0x2c],eax
6401233b:	lea    eax,[ebp-0x34]
6401233e:	push   eax
6401233f:	mov    eax,DWORD PTR [ebp+0x8]
64012342:	push   DWORD PTR [eax]
64012344:	call   DWORD PTR [ebp-0x2c]
64012347:	pop    ecx
64012348:	pop    ecx
64012349:	and    DWORD PTR [ebp-0x38],0x0
6401234d:	cmp    DWORD PTR [ebp-0x4],0x0
64012351:	je     0x6401236a
64012353:	mov    ebx,DWORD PTR fs:0x0
6401235a:	mov    eax,DWORD PTR [ebx]
6401235c:	mov    ebx,DWORD PTR [ebp-0x28]
6401235f:	mov    DWORD PTR [ebx],eax
64012361:	mov    DWORD PTR fs:0x0,ebx
64012368:	jmp    0x64012373
6401236a:	mov    eax,DWORD PTR [ebp-0x28]
6401236d:	mov    fs:0x0,eax
64012373:	mov    eax,DWORD PTR [ebp-0x38]
64012376:	pop    ebx
64012377:	leave  
64012378:	ret    
64012379:	push   ebp
6401237a:	mov    ebp,esp
6401237c:	push   ecx
6401237d:	push   ebx
6401237e:	cld    
6401237f:	mov    eax,DWORD PTR [ebp+0xc]
64012382:	mov    ecx,DWORD PTR [eax+0x8]
64012385:	xor    ecx,DWORD PTR [ebp+0xc]
64012388:	call   0x6401257c
6401238d:	mov    eax,DWORD PTR [ebp+0x8]
64012390:	mov    eax,DWORD PTR [eax+0x4]
64012393:	and    eax,0x66
64012396:	je     0x640123a9
64012398:	mov    eax,DWORD PTR [ebp+0xc]
6401239b:	mov    DWORD PTR [eax+0x24],0x1
640123a2:	xor    eax,eax
640123a4:	inc    eax
640123a5:	jmp    0x64012413
640123a7:	jmp    0x64012413
640123a9:	push   0x1
640123ab:	mov    eax,DWORD PTR [ebp+0xc]
640123ae:	push   DWORD PTR [eax+0x18]
640123b1:	mov    eax,DWORD PTR [ebp+0xc]
640123b4:	push   DWORD PTR [eax+0x14]
640123b7:	mov    eax,DWORD PTR [ebp+0xc]
640123ba:	push   DWORD PTR [eax+0xc]
640123bd:	push   0x0
640123bf:	push   DWORD PTR [ebp+0x10]
640123c2:	mov    eax,DWORD PTR [ebp+0xc]
640123c5:	push   DWORD PTR [eax+0x10]
640123c8:	push   DWORD PTR [ebp+0x8]
640123cb:	call   0x64015503
640123d0:	add    esp,0x20
640123d3:	mov    eax,DWORD PTR [ebp+0xc]
640123d6:	cmp    DWORD PTR [eax+0x24],0x0
640123da:	jne    0x640123e7
640123dc:	push   DWORD PTR [ebp+0x8]
640123df:	push   DWORD PTR [ebp+0xc]
640123e2:	call   0x640121ec
640123e7:	push   0x0
640123e9:	push   0x0
640123eb:	push   0x0
640123ed:	push   0x0
640123ef:	push   0x0
640123f1:	lea    eax,[ebp-0x4]
640123f4:	push   eax
640123f5:	push   0x123
640123fa:	call   0x640122a4
640123ff:	add    esp,0x1c
64012402:	mov    eax,DWORD PTR [ebp-0x4]
64012405:	mov    ebx,DWORD PTR [ebp+0xc]
64012408:	mov    esp,DWORD PTR [ebx+0x1c]
6401240b:	mov    ebp,DWORD PTR [ebx+0x20]
6401240e:	jmp    eax
64012410:	xor    eax,eax
64012412:	inc    eax
64012413:	pop    ebx
64012414:	leave  
64012415:	ret    
64012416:	push   ebp
64012417:	mov    ebp,esp
64012419:	push   ecx
6401241a:	push   ebx
6401241b:	push   esi
6401241c:	push   edi
6401241d:	mov    edi,DWORD PTR [ebp+0x8]
64012420:	mov    eax,DWORD PTR [edi+0x10]
64012423:	mov    esi,DWORD PTR [edi+0xc]
64012426:	mov    DWORD PTR [ebp-0x4],eax
64012429:	mov    ebx,esi
6401242b:	jmp    0x6401245a
6401242d:	cmp    esi,0xffffffff
64012430:	jne    0x64012437
64012432:	call   0x64015633
64012437:	mov    ecx,DWORD PTR [ebp-0x4]
6401243a:	dec    esi
6401243b:	mov    eax,esi
6401243d:	imul   eax,eax,0x14
64012440:	add    eax,ecx
64012442:	mov    ecx,DWORD PTR [ebp+0x10]
64012445:	cmp    DWORD PTR [eax+0x4],ecx
64012448:	jge    0x6401244f
6401244a:	cmp    ecx,DWORD PTR [eax+0x8]
6401244d:	jle    0x64012454
6401244f:	cmp    esi,0xffffffff
64012452:	jne    0x6401245d
64012454:	dec    DWORD PTR [ebp+0xc]
64012457:	mov    ebx,DWORD PTR [ebp+0x8]
6401245a:	mov    DWORD PTR [ebp+0x8],esi
6401245d:	cmp    DWORD PTR [ebp+0xc],0x0
64012461:	jge    0x6401242d
64012463:	mov    eax,DWORD PTR [ebp+0x14]
64012466:	inc    esi
64012467:	mov    DWORD PTR [eax],esi
64012469:	mov    eax,DWORD PTR [ebp+0x18]
6401246c:	mov    DWORD PTR [eax],ebx
6401246e:	cmp    ebx,DWORD PTR [edi+0xc]
64012471:	ja     0x64012477
64012473:	cmp    esi,ebx
64012475:	jbe    0x6401247c
64012477:	call   0x64015633
6401247c:	mov    eax,esi
6401247e:	imul   eax,eax,0x14
64012481:	add    eax,DWORD PTR [ebp-0x4]
64012484:	pop    edi
64012485:	pop    esi
64012486:	pop    ebx
64012487:	leave  
64012488:	ret    
64012489:	mov    eax,DWORD PTR [esp+0x8]
6401248d:	push   esi
6401248e:	mov    esi,DWORD PTR [esp+0x8]
64012492:	mov    DWORD PTR [esi],eax
64012494:	call   0x6401460b
64012499:	mov    eax,DWORD PTR [eax+0x98]
6401249f:	mov    DWORD PTR [esi+0x4],eax
640124a2:	call   0x6401460b
640124a7:	mov    DWORD PTR [eax+0x98],esi
640124ad:	mov    eax,esi
640124af:	pop    esi
640124b0:	ret    
640124b1:	call   0x6401460b
640124b6:	mov    eax,DWORD PTR [eax+0x98]
640124bc:	jmp    0x640124c9
640124be:	mov    ecx,DWORD PTR [eax]
640124c0:	cmp    ecx,DWORD PTR [esp+0x4]
640124c4:	je     0x640124cf
640124c6:	mov    eax,DWORD PTR [eax+0x4]
640124c9:	test   eax,eax
640124cb:	jne    0x640124be
640124cd:	inc    eax
640124ce:	ret    
640124cf:	xor    eax,eax
640124d1:	ret    
640124d2:	push   esi
640124d3:	call   0x6401460b
640124d8:	mov    esi,DWORD PTR [esp+0x8]
640124dc:	cmp    esi,DWORD PTR [eax+0x98]
640124e2:	jne    0x640124f4
640124e4:	call   0x6401460b
640124e9:	mov    ecx,DWORD PTR [esi+0x4]
640124ec:	mov    DWORD PTR [eax+0x98],ecx
640124f2:	pop    esi
640124f3:	ret    
640124f4:	call   0x6401460b
640124f9:	mov    eax,DWORD PTR [eax+0x98]
640124ff:	jmp    0x6401250a
64012501:	mov    ecx,DWORD PTR [eax+0x4]
64012504:	cmp    esi,ecx
64012506:	je     0x64012516
64012508:	mov    eax,ecx
6401250a:	cmp    DWORD PTR [eax+0x4],0x0
6401250e:	jne    0x64012501
64012510:	pop    esi
64012511:	jmp    0x64015633
64012516:	mov    ecx,DWORD PTR [esi+0x4]
64012519:	mov    DWORD PTR [eax+0x4],ecx
6401251c:	pop    esi
6401251d:	ret    
6401251e:	push   ebp
6401251f:	mov    ebp,esp
64012521:	sub    esp,0x18
64012524:	mov    eax,ds:0x6402c09c
64012529:	and    DWORD PTR [ebp-0x18],0x0
6401252d:	lea    ecx,[ebp-0x18]
64012530:	xor    eax,ecx
64012532:	mov    ecx,DWORD PTR [ebp+0x8]
64012535:	mov    DWORD PTR [ebp-0x10],eax
64012538:	mov    eax,DWORD PTR [ebp+0xc]
6401253b:	mov    DWORD PTR [ebp-0xc],eax
6401253e:	mov    eax,DWORD PTR [ebp+0x14]
64012541:	inc    eax
64012542:	mov    DWORD PTR [ebp-0x14],0x64012274
64012549:	mov    DWORD PTR [ebp-0x8],ecx
6401254c:	mov    DWORD PTR [ebp-0x4],eax
6401254f:	mov    eax,fs:0x0
64012555:	mov    DWORD PTR [ebp-0x18],eax
64012558:	lea    eax,[ebp-0x18]
6401255b:	mov    fs:0x0,eax
64012561:	push   DWORD PTR [ebp+0x18]
64012564:	push   ecx
64012565:	push   DWORD PTR [ebp+0x10]
64012568:	call   0x64015680
6401256d:	mov    ecx,eax
6401256f:	mov    eax,DWORD PTR [ebp-0x18]
64012572:	mov    fs:0x0,eax
64012578:	mov    eax,ecx
6401257a:	leave  
6401257b:	ret    
6401257c:	cmp    ecx,DWORD PTR ds:0x6402c09c
64012582:	jne    0x64012586
64012584:	repz ret 
64012586:	jmp    0x640156cc
6401258b:	push   ecx
6401258c:	push   ebx
6401258d:	push   ebp
6401258e:	push   esi
6401258f:	push   edi
64012590:	push   DWORD PTR ds:0x64031570
64012596:	call   0x640143ef
6401259b:	push   DWORD PTR ds:0x6403156c
640125a1:	mov    esi,eax
640125a3:	mov    DWORD PTR [esp+0x18],esi
640125a7:	call   0x640143ef
640125ac:	mov    edi,eax
640125ae:	cmp    edi,esi
640125b0:	pop    ecx
640125b1:	pop    ecx
640125b2:	jb     0x6401263c
640125b8:	mov    ebx,edi
640125ba:	sub    ebx,esi
640125bc:	lea    ebp,[ebx+0x4]
640125bf:	cmp    ebp,0x4
640125c2:	jb     0x6401263c
640125c4:	push   esi
640125c5:	call   0x640158a3
640125ca:	mov    esi,eax
640125cc:	cmp    esi,ebp
640125ce:	pop    ecx
640125cf:	jae    0x6401261b
640125d1:	mov    eax,0x800
640125d6:	cmp    esi,eax
640125d8:	jae    0x640125dc
640125da:	mov    eax,esi
640125dc:	add    eax,esi
640125de:	cmp    eax,esi
640125e0:	jb     0x640125f2
640125e2:	push   eax
640125e3:	push   DWORD PTR [esp+0x14]
640125e7:	call   0x64015858
640125ec:	test   eax,eax
640125ee:	pop    ecx
640125ef:	pop    ecx
640125f0:	jne    0x64012609
640125f2:	lea    eax,[esi+0x10]
640125f5:	cmp    eax,esi
640125f7:	jb     0x6401263c
640125f9:	push   eax
640125fa:	push   DWORD PTR [esp+0x14]
640125fe:	call   0x64015858
64012603:	test   eax,eax
64012605:	pop    ecx
64012606:	pop    ecx
64012607:	je     0x6401263c
64012609:	sar    ebx,0x2
6401260c:	push   eax
6401260d:	lea    edi,[eax+ebx*4]
64012610:	call   0x64014378
64012615:	pop    ecx
64012616:	mov    ds:0x64031570,eax
6401261b:	push   DWORD PTR [esp+0x18]
6401261f:	call   0x64014378
64012624:	mov    DWORD PTR [edi],eax
64012626:	add    edi,0x4
64012629:	push   edi
6401262a:	call   0x64014378
6401262f:	pop    ecx
64012630:	mov    ds:0x6403156c,eax
64012635:	mov    eax,DWORD PTR [esp+0x1c]
64012639:	pop    ecx
6401263a:	jmp    0x6401263e
6401263c:	xor    eax,eax
6401263e:	pop    edi
6401263f:	pop    esi
64012640:	pop    ebp
64012641:	pop    ebx
64012642:	pop    ecx
64012643:	ret    
64012644:	push   esi
64012645:	push   0x4
64012647:	push   0x20
64012649:	call   0x64015810
6401264e:	mov    esi,eax
64012650:	push   esi
64012651:	call   0x64014378
64012656:	add    esp,0xc
64012659:	test   esi,esi
6401265b:	mov    ds:0x64031570,eax
64012660:	mov    ds:0x6403156c,eax
64012665:	jne    0x6401266c
64012667:	push   0x18
64012669:	pop    eax
6401266a:	pop    esi
6401266b:	ret    
6401266c:	and    DWORD PTR [esi],0x0
6401266f:	xor    eax,eax
64012671:	pop    esi
64012672:	ret    
64012673:	push   0xc
64012675:	push   0x640296a8
6401267a:	call   0x64013ac0
6401267f:	call   0x640159a5
64012684:	and    DWORD PTR [ebp-0x4],0x0
64012688:	push   DWORD PTR [ebp+0x8]
6401268b:	call   0x6401258b
64012690:	pop    ecx
64012691:	mov    DWORD PTR [ebp-0x1c],eax
64012694:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401269b:	call   0x640126a9
640126a0:	mov    eax,DWORD PTR [ebp-0x1c]
640126a3:	call   0x64013b05
640126a8:	ret    
640126a9:	call   0x640159ae
640126ae:	ret    
640126af:	push   DWORD PTR [esp+0x4]
640126b3:	call   0x64012673
640126b8:	neg    eax
640126ba:	sbb    eax,eax
640126bc:	neg    eax
640126be:	pop    ecx
640126bf:	dec    eax
640126c0:	ret    
640126c1:	mov    eax,DWORD PTR [esp+0x4]
640126c5:	push   ebx
640126c6:	mov    ebx,DWORD PTR [esp+0xc]
640126ca:	cmp    WORD PTR [ebx],0x0
640126ce:	push   edi
640126cf:	mov    edi,eax
640126d1:	je     0x64012718
640126d3:	movzx  ecx,WORD PTR [eax]
640126d6:	test   cx,cx
640126d9:	je     0x64012716
640126db:	movzx  edx,cx
640126de:	sub    eax,ebx
640126e0:	test   dx,dx
640126e3:	mov    ecx,DWORD PTR [esp+0x10]
640126e7:	je     0x64012704
640126e9:	movzx  edx,WORD PTR [ecx]
640126ec:	test   dx,dx
640126ef:	je     0x6401271b
640126f1:	movzx  ebx,WORD PTR [eax+ecx*1]
640126f5:	movzx  edx,dx
640126f8:	sub    ebx,edx
640126fa:	jne    0x64012704
640126fc:	inc    ecx
640126fd:	inc    ecx
640126fe:	cmp    WORD PTR [eax+ecx*1],bx
64012702:	jne    0x640126e9
64012704:	cmp    WORD PTR [ecx],0x0
64012708:	je     0x6401271b
6401270a:	inc    edi
6401270b:	inc    edi
6401270c:	movzx  edx,WORD PTR [edi]
6401270f:	inc    eax
64012710:	inc    eax
64012711:	test   dx,dx
64012714:	jne    0x640126e0
64012716:	xor    eax,eax
64012718:	pop    edi
64012719:	pop    ebx
6401271a:	ret    
6401271b:	mov    eax,edi
6401271d:	jmp    0x64012718
6401271f:	mov    eax,DWORD PTR [esp+0x4]
64012723:	test   eax,eax
64012725:	push   esi
64012726:	mov    esi,ecx
64012728:	mov    BYTE PTR [esi+0xc],0x0
6401272c:	jne    0x64012791
6401272e:	call   0x6401460b
64012733:	mov    DWORD PTR [esi+0x8],eax
64012736:	mov    ecx,DWORD PTR [eax+0x6c]
64012739:	mov    DWORD PTR [esi],ecx
6401273b:	mov    ecx,DWORD PTR [eax+0x68]
6401273e:	mov    DWORD PTR [esi+0x4],ecx
64012741:	mov    ecx,DWORD PTR [esi]
64012743:	cmp    ecx,DWORD PTR ds:0x6402c870
64012749:	je     0x6401275d
6401274b:	mov    ecx,DWORD PTR ds:0x6402c78c
64012751:	test   DWORD PTR [eax+0x70],ecx
64012754:	jne    0x6401275d
64012756:	call   0x6401658f
6401275b:	mov    DWORD PTR [esi],eax
6401275d:	mov    eax,DWORD PTR [esi+0x4]
64012760:	cmp    eax,DWORD PTR ds:0x6402c690
64012766:	je     0x6401277e
64012768:	mov    eax,DWORD PTR [esi+0x8]
6401276b:	mov    ecx,DWORD PTR ds:0x6402c78c
64012771:	test   DWORD PTR [eax+0x70],ecx
64012774:	jne    0x6401277e
64012776:	call   0x64015e50
6401277b:	mov    DWORD PTR [esi+0x4],eax
6401277e:	mov    eax,DWORD PTR [esi+0x8]
64012781:	test   BYTE PTR [eax+0x70],0x2
64012785:	jne    0x6401279b
64012787:	or     DWORD PTR [eax+0x70],0x2
6401278b:	mov    BYTE PTR [esi+0xc],0x1
6401278f:	jmp    0x6401279b
64012791:	mov    ecx,DWORD PTR [eax]
64012793:	mov    DWORD PTR [esi],ecx
64012795:	mov    eax,DWORD PTR [eax+0x4]
64012798:	mov    DWORD PTR [esi+0x4],eax
6401279b:	mov    eax,esi
6401279d:	pop    esi
6401279e:	ret    0x4
640127a1:	push   ebp
640127a2:	mov    ebp,esp
640127a4:	sub    esp,0x20
640127a7:	push   esi
640127a8:	xor    esi,esi
640127aa:	cmp    DWORD PTR [ebp+0xc],esi
640127ad:	jne    0x640127cc
640127af:	call   0x640142c0
640127b4:	push   esi
640127b5:	push   esi
640127b6:	push   esi
640127b7:	push   esi
640127b8:	push   esi
640127b9:	mov    DWORD PTR [eax],0x16
640127bf:	call   0x640120b4
640127c4:	add    esp,0x14
640127c7:	or     eax,0xffffffff
640127ca:	jmp    0x640127f3
640127cc:	push   DWORD PTR [ebp+0x14]
640127cf:	lea    eax,[ebp-0x20]
640127d2:	push   DWORD PTR [ebp+0x10]
640127d5:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
640127dc:	push   DWORD PTR [ebp+0xc]
640127df:	mov    DWORD PTR [ebp-0x14],0x42
640127e6:	push   eax
640127e7:	mov    DWORD PTR [ebp-0x18],esi
640127ea:	mov    DWORD PTR [ebp-0x20],esi
640127ed:	call   DWORD PTR [ebp+0x8]
640127f0:	add    esp,0x10
640127f3:	pop    esi
640127f4:	leave  
640127f5:	ret    
640127f6:	push   DWORD PTR [esp+0x8]
640127fa:	push   0x0
640127fc:	push   DWORD PTR [esp+0xc]
64012800:	push   0x640167b4
64012805:	call   0x640127a1
6401280a:	add    esp,0x10
6401280d:	ret    
6401280e:	push   ebp
6401280f:	mov    ebp,esp
64012811:	sub    esp,0x20
64012814:	push   ebx
64012815:	xor    ebx,ebx
64012817:	cmp    DWORD PTR [ebp+0x14],ebx
6401281a:	jne    0x6401283c
6401281c:	call   0x640142c0
64012821:	push   ebx
64012822:	push   ebx
64012823:	push   ebx
64012824:	push   ebx
64012825:	push   ebx
64012826:	mov    DWORD PTR [eax],0x16
6401282c:	call   0x640120b4
64012831:	add    esp,0x14
64012834:	or     eax,0xffffffff
64012837:	jmp    0x64012901
6401283c:	push   esi
6401283d:	mov    esi,DWORD PTR [ebp+0xc]
64012840:	push   edi
64012841:	mov    edi,DWORD PTR [ebp+0x10]
64012844:	cmp    edi,ebx
64012846:	je     0x6401286c
64012848:	cmp    esi,ebx
6401284a:	jne    0x6401286c
6401284c:	call   0x640142c0
64012851:	push   ebx
64012852:	push   ebx
64012853:	push   ebx
64012854:	push   ebx
64012855:	push   ebx
64012856:	mov    DWORD PTR [eax],0x16
6401285c:	call   0x640120b4
64012861:	add    esp,0x14
64012864:	or     eax,0xffffffff
64012867:	jmp    0x640128ff
6401286c:	cmp    edi,0x3fffffff
64012872:	mov    DWORD PTR [ebp-0x14],0x42
64012879:	mov    DWORD PTR [ebp-0x18],esi
6401287c:	mov    DWORD PTR [ebp-0x20],esi
6401287f:	jbe    0x6401288a
64012881:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64012888:	jmp    0x64012890
6401288a:	lea    eax,[edi+edi*1]
6401288d:	mov    DWORD PTR [ebp-0x1c],eax
64012890:	push   DWORD PTR [ebp+0x1c]
64012893:	lea    eax,[ebp-0x20]
64012896:	push   DWORD PTR [ebp+0x18]
64012899:	push   DWORD PTR [ebp+0x14]
6401289c:	push   eax
6401289d:	call   DWORD PTR [ebp+0x8]
640128a0:	add    esp,0x10
640128a3:	cmp    esi,ebx
640128a5:	mov    DWORD PTR [ebp+0x14],eax
640128a8:	je     0x640128ff
640128aa:	cmp    eax,ebx
640128ac:	jl     0x640128f0
640128ae:	dec    DWORD PTR [ebp-0x1c]
640128b1:	js     0x640128bd
640128b3:	mov    eax,DWORD PTR [ebp-0x20]
640128b6:	mov    BYTE PTR [eax],bl
640128b8:	inc    DWORD PTR [ebp-0x20]
640128bb:	jmp    0x640128ce
640128bd:	lea    eax,[ebp-0x20]
640128c0:	push   eax
640128c1:	push   ebx
640128c2:	call   0x64016605
640128c7:	cmp    eax,0xffffffff
640128ca:	pop    ecx
640128cb:	pop    ecx
640128cc:	je     0x640128f0
640128ce:	dec    DWORD PTR [ebp-0x1c]
640128d1:	js     0x640128da
640128d3:	mov    eax,DWORD PTR [ebp-0x20]
640128d6:	mov    BYTE PTR [eax],bl
640128d8:	jmp    0x640128eb
640128da:	lea    eax,[ebp-0x20]
640128dd:	push   eax
640128de:	push   ebx
640128df:	call   0x64016605
640128e4:	cmp    eax,0xffffffff
640128e7:	pop    ecx
640128e8:	pop    ecx
640128e9:	je     0x640128f0
640128eb:	mov    eax,DWORD PTR [ebp+0x14]
640128ee:	jmp    0x640128ff
640128f0:	xor    eax,eax
640128f2:	cmp    DWORD PTR [ebp-0x1c],ebx
640128f5:	mov    WORD PTR [esi+edi*2-0x2],bx
640128fa:	setge  al
640128fd:	dec    eax
640128fe:	dec    eax
640128ff:	pop    edi
64012900:	pop    esi
64012901:	pop    ebx
64012902:	leave  
64012903:	ret    
64012904:	push   ebp
64012905:	mov    ebp,esp
64012907:	push   esi
64012908:	xor    esi,esi
6401290a:	cmp    DWORD PTR [ebp+0x10],esi
6401290d:	jne    0x6401292c
6401290f:	call   0x640142c0
64012914:	push   esi
64012915:	push   esi
64012916:	push   esi
64012917:	push   esi
64012918:	push   esi
64012919:	mov    DWORD PTR [eax],0x16
6401291f:	call   0x640120b4
64012924:	add    esp,0x14
64012927:	or     eax,0xffffffff
6401292a:	jmp    0x64012988
6401292c:	push   edi
6401292d:	mov    edi,DWORD PTR [ebp+0x8]
64012930:	cmp    edi,esi
64012932:	je     0x64012939
64012934:	cmp    DWORD PTR [ebp+0xc],esi
64012937:	ja     0x64012946
64012939:	call   0x640142c0
6401293e:	mov    DWORD PTR [eax],0x16
64012944:	jmp    0x64012977
64012946:	push   DWORD PTR [ebp+0x18]
64012949:	push   DWORD PTR [ebp+0x14]
6401294c:	push   DWORD PTR [ebp+0x10]
6401294f:	push   DWORD PTR [ebp+0xc]
64012952:	push   edi
64012953:	push   0x6401710e
64012958:	call   0x6401280e
6401295d:	add    esp,0x18
64012960:	cmp    eax,esi
64012962:	jge    0x64012967
64012964:	mov    WORD PTR [edi],si
64012967:	cmp    eax,0xfffffffe
6401296a:	jne    0x64012987
6401296c:	call   0x640142c0
64012971:	mov    DWORD PTR [eax],0x22
64012977:	push   esi
64012978:	push   esi
64012979:	push   esi
6401297a:	push   esi
6401297b:	push   esi
6401297c:	call   0x640120b4
64012981:	add    esp,0x14
64012984:	or     eax,0xffffffff
64012987:	pop    edi
64012988:	pop    esi
64012989:	pop    ebp
6401298a:	ret    
6401298b:	push   DWORD PTR [esp+0x10]
6401298f:	push   0x0
64012991:	push   DWORD PTR [esp+0x14]
64012995:	push   DWORD PTR [esp+0x14]
64012999:	push   DWORD PTR [esp+0x14]
6401299d:	call   0x64012904
640129a2:	add    esp,0x14
640129a5:	ret    
640129a6:	mov    ecx,DWORD PTR [esp+0x4]
640129aa:	push   ebx
640129ab:	push   esi
640129ac:	push   edi
640129ad:	xor    edi,edi
640129af:	cmp    ecx,edi
640129b1:	je     0x640129bb
640129b3:	mov    ebx,DWORD PTR [esp+0x14]
640129b7:	cmp    ebx,edi
640129b9:	ja     0x640129d6
640129bb:	call   0x640142c0
640129c0:	push   0x16
640129c2:	pop    esi
640129c3:	mov    DWORD PTR [eax],esi
640129c5:	push   edi
640129c6:	push   edi
640129c7:	push   edi
640129c8:	push   edi
640129c9:	push   edi
640129ca:	call   0x640120b4
640129cf:	add    esp,0x14
640129d2:	mov    eax,esi
640129d4:	jmp    0x64012a0e
640129d6:	mov    esi,DWORD PTR [esp+0x18]
640129da:	cmp    esi,edi
640129dc:	jne    0x640129e3
640129de:	mov    WORD PTR [ecx],di
640129e1:	jmp    0x640129bb
640129e3:	mov    edx,ecx
640129e5:	movzx  eax,WORD PTR [esi]
640129e8:	mov    WORD PTR [edx],ax
640129eb:	inc    edx
640129ec:	inc    edx
640129ed:	inc    esi
640129ee:	inc    esi
640129ef:	cmp    ax,di
640129f2:	je     0x640129f7
640129f4:	dec    ebx
640129f5:	jne    0x640129e5
640129f7:	cmp    ebx,edi
640129f9:	jne    0x64012a0c
640129fb:	mov    WORD PTR [ecx],di
640129fe:	call   0x640142c0
64012a03:	push   0x22
64012a05:	pop    ecx
64012a06:	mov    DWORD PTR [eax],ecx
64012a08:	mov    esi,ecx
64012a0a:	jmp    0x640129c5
64012a0c:	xor    eax,eax
64012a0e:	pop    edi
64012a0f:	pop    esi
64012a10:	pop    ebx
64012a11:	ret    
64012a12:	mov    eax,DWORD PTR [esp+0x4]
64012a16:	test   eax,eax
64012a18:	je     0x64012a2c
64012a1a:	sub    eax,0x8
64012a1d:	cmp    DWORD PTR [eax],0xdddd
64012a23:	jne    0x64012a2c
64012a25:	push   eax
64012a26:	call   0x64013396
64012a2b:	pop    ecx
64012a2c:	ret    
64012a2d:	push   ebp
64012a2e:	mov    ebp,esp
64012a30:	sub    esp,0xc
64012a33:	mov    eax,ds:0x6402c09c
64012a38:	xor    eax,ebp
64012a3a:	mov    DWORD PTR [ebp-0x4],eax
64012a3d:	push   esi
64012a3e:	xor    esi,esi
64012a40:	cmp    ebx,esi
64012a42:	push   edi
64012a43:	jne    0x64012a63
64012a45:	call   0x640142c0
64012a4a:	push   0x16
64012a4c:	pop    edi
64012a4d:	push   esi
64012a4e:	push   esi
64012a4f:	push   esi
64012a50:	push   esi
64012a51:	push   esi
64012a52:	mov    DWORD PTR [eax],edi
64012a54:	call   0x640120b4
64012a59:	add    esp,0x14
64012a5c:	mov    eax,edi
64012a5e:	jmp    0x64012ba3
64012a63:	push   DWORD PTR [ebp+0x8]
64012a66:	push   ebx
64012a67:	call   0x64017ccb
64012a6c:	cmp    eax,DWORD PTR [ebp+0x8]
64012a6f:	pop    ecx
64012a70:	pop    ecx
64012a71:	jb     0x64012a78
64012a73:	mov    WORD PTR [ebx],si
64012a76:	jmp    0x64012a45
64012a78:	mov    edx,DWORD PTR [ebp+0xc]
64012a7b:	mov    eax,DWORD PTR [edx]
64012a7d:	mov    ecx,DWORD PTR [eax+0x14]
64012a80:	cmp    ecx,esi
64012a82:	jne    0x64012aae
64012a84:	cmp    WORD PTR [ebx],si
64012a87:	mov    eax,ebx
64012a89:	je     0x64012aa7
64012a8b:	movzx  ecx,WORD PTR [eax]
64012a8e:	cmp    cx,0x41
64012a92:	jb     0x64012aa0
64012a94:	cmp    cx,0x5a
64012a98:	ja     0x64012aa0
64012a9a:	add    ecx,0x20
64012a9d:	mov    WORD PTR [eax],cx
64012aa0:	inc    eax
64012aa1:	inc    eax
64012aa2:	cmp    WORD PTR [eax],si
64012aa5:	jne    0x64012a8b
64012aa7:	xor    eax,eax
64012aa9:	jmp    0x64012ba3
64012aae:	push   DWORD PTR [eax+0x4]
64012ab1:	mov    edi,0x100
64012ab6:	push   esi
64012ab7:	push   esi
64012ab8:	push   0xffffffff
64012aba:	push   ebx
64012abb:	push   edi
64012abc:	push   ecx
64012abd:	push   edx
64012abe:	call   0x64017c8b
64012ac3:	mov    ecx,eax
64012ac5:	add    esp,0x20
64012ac8:	cmp    ecx,esi
64012aca:	mov    DWORD PTR [ebp-0xc],ecx
64012acd:	jne    0x64012ae6
64012acf:	call   0x640142c0
64012ad4:	mov    DWORD PTR [eax],0x2a
64012ada:	call   0x640142c0
64012adf:	mov    eax,DWORD PTR [eax]
64012ae1:	jmp    0x64012ba3
64012ae6:	cmp    DWORD PTR [ebp+0x8],ecx
64012ae9:	jae    0x64012afa
64012aeb:	mov    WORD PTR [ebx],si
64012aee:	call   0x640142c0
64012af3:	push   0x22
64012af5:	jmp    0x64012a4c
64012afa:	cmp    ecx,esi
64012afc:	jle    0x64012b44
64012afe:	push   0xffffffe0
64012b00:	xor    edx,edx
64012b02:	pop    eax
64012b03:	div    ecx
64012b05:	cmp    eax,0x2
64012b08:	jb     0x64012b44
64012b0a:	lea    eax,[ecx+ecx*1+0x8]
64012b0e:	cmp    eax,0x400
64012b13:	ja     0x64012b28
64012b15:	call   0x64012c80
64012b1a:	mov    eax,esp
64012b1c:	cmp    eax,esi
64012b1e:	je     0x64012b3c
64012b20:	mov    DWORD PTR [eax],0xcccc
64012b26:	jmp    0x64012b39
64012b28:	push   eax
64012b29:	call   0x64013473
64012b2e:	cmp    eax,esi
64012b30:	pop    ecx
64012b31:	je     0x64012b3c
64012b33:	mov    DWORD PTR [eax],0xdddd
64012b39:	add    eax,0x8
64012b3c:	mov    ecx,DWORD PTR [ebp-0xc]
64012b3f:	mov    DWORD PTR [ebp-0x8],eax
64012b42:	jmp    0x64012b47
64012b44:	mov    DWORD PTR [ebp-0x8],esi
64012b47:	cmp    DWORD PTR [ebp-0x8],esi
64012b4a:	jne    0x64012b59
64012b4c:	call   0x640142c0
64012b51:	mov    DWORD PTR [eax],0xc
64012b57:	jmp    0x64012ada
64012b59:	mov    edx,DWORD PTR [ebp+0xc]
64012b5c:	mov    eax,DWORD PTR [edx]
64012b5e:	push   DWORD PTR [eax+0x4]
64012b61:	push   ecx
64012b62:	push   DWORD PTR [ebp-0x8]
64012b65:	push   0xffffffff
64012b67:	push   ebx
64012b68:	push   edi
64012b69:	push   DWORD PTR [eax+0x14]
64012b6c:	push   edx
64012b6d:	call   0x64017c8b
64012b72:	add    esp,0x20
64012b75:	test   eax,eax
64012b77:	je     0x64012b8c
64012b79:	push   DWORD PTR [ebp-0x8]
64012b7c:	push   DWORD PTR [ebp+0x8]
64012b7f:	push   ebx
64012b80:	call   0x640129a6
64012b85:	add    esp,0xc
64012b88:	mov    esi,eax
64012b8a:	jmp    0x64012b98
64012b8c:	call   0x640142c0
64012b91:	push   0x2a
64012b93:	pop    ecx
64012b94:	mov    DWORD PTR [eax],ecx
64012b96:	mov    esi,ecx
64012b98:	push   DWORD PTR [ebp-0x8]
64012b9b:	call   0x64012a12
64012ba0:	pop    ecx
64012ba1:	mov    eax,esi
64012ba3:	lea    esp,[ebp-0x14]
64012ba6:	pop    edi
64012ba7:	pop    esi
64012ba8:	mov    ecx,DWORD PTR [ebp-0x4]
64012bab:	xor    ecx,ebp
64012bad:	call   0x6401257c
64012bb2:	leave  
64012bb3:	ret    
64012bb4:	push   ebp
64012bb5:	mov    ebp,esp
64012bb7:	sub    esp,0x10
64012bba:	push   ebx
64012bbb:	push   DWORD PTR [ebp+0x10]
64012bbe:	lea    ecx,[ebp-0x10]
64012bc1:	call   0x6401271f
64012bc6:	mov    ebx,DWORD PTR [ebp+0x8]
64012bc9:	lea    eax,[ebp-0x10]
64012bcc:	push   eax
64012bcd:	push   DWORD PTR [ebp+0xc]
64012bd0:	call   0x64012a2d
64012bd5:	cmp    BYTE PTR [ebp-0x4],0x0
64012bd9:	pop    ecx
64012bda:	pop    ecx
64012bdb:	pop    ebx
64012bdc:	je     0x64012be5
64012bde:	mov    ecx,DWORD PTR [ebp-0x8]
64012be1:	and    DWORD PTR [ecx+0x70],0xfffffffd
64012be5:	leave  
64012be6:	ret    
64012be7:	push   0x0
64012be9:	push   DWORD PTR [esp+0xc]
64012bed:	push   DWORD PTR [esp+0xc]
64012bf1:	call   0x64012bb4
64012bf6:	add    esp,0xc
64012bf9:	ret    
64012bfa:	jmp    0x64011d22
64012bff:	int3   
64012c00:	mov    edx,DWORD PTR [esp+0xc]
64012c04:	mov    ecx,DWORD PTR [esp+0x4]
64012c08:	test   edx,edx
64012c0a:	je     0x64012c75
64012c0c:	xor    eax,eax
64012c0e:	mov    al,BYTE PTR [esp+0x8]
64012c12:	test   al,al
64012c14:	jne    0x64012c2c
64012c16:	cmp    edx,0x100
64012c1c:	jb     0x64012c2c
64012c1e:	cmp    DWORD PTR ds:0x64031564,0x0
64012c25:	je     0x64012c2c
64012c27:	jmp    0x64017d3e
64012c2c:	push   edi
64012c2d:	mov    edi,ecx
64012c2f:	cmp    edx,0x4
64012c32:	jb     0x64012c65
64012c34:	neg    ecx
64012c36:	and    ecx,0x3
64012c39:	je     0x64012c47
64012c3b:	sub    edx,ecx
64012c3d:	mov    BYTE PTR [edi],al
64012c3f:	add    edi,0x1
64012c42:	sub    ecx,0x1
64012c45:	jne    0x64012c3d
64012c47:	mov    ecx,eax
64012c49:	shl    eax,0x8
64012c4c:	add    eax,ecx
64012c4e:	mov    ecx,eax
64012c50:	shl    eax,0x10
64012c53:	add    eax,ecx
64012c55:	mov    ecx,edx
64012c57:	and    edx,0x3
64012c5a:	shr    ecx,0x2
64012c5d:	je     0x64012c65
64012c5f:	rep stos DWORD PTR es:[edi],eax
64012c61:	test   edx,edx
64012c63:	je     0x64012c6f
64012c65:	mov    BYTE PTR [edi],al
64012c67:	add    edi,0x1
64012c6a:	sub    edx,0x1
64012c6d:	jne    0x64012c65
64012c6f:	mov    eax,DWORD PTR [esp+0x8]
64012c73:	pop    edi
64012c74:	ret    
64012c75:	mov    eax,DWORD PTR [esp+0x4]
64012c79:	ret    
64012c7a:	int3   
64012c7b:	int3   
64012c7c:	int3   
64012c7d:	int3   
64012c7e:	int3   
64012c7f:	int3   
64012c80:	push   ecx
64012c81:	lea    ecx,[esp+0x8]
64012c85:	sub    ecx,eax
64012c87:	and    ecx,0xf
64012c8a:	add    eax,ecx
64012c8c:	sbb    ecx,ecx
64012c8e:	or     eax,ecx
64012c90:	pop    ecx
64012c91:	jmp    0x64017df0
64012c96:	push   ecx
64012c97:	lea    ecx,[esp+0x8]
64012c9b:	sub    ecx,eax
64012c9d:	and    ecx,0x7
64012ca0:	add    eax,ecx
64012ca2:	sbb    ecx,ecx
64012ca4:	or     eax,ecx
64012ca6:	pop    ecx
64012ca7:	jmp    0x64017df0
64012cac:	call   0x6401460b
64012cb1:	mov    ecx,DWORD PTR [esp+0x4]
64012cb5:	mov    DWORD PTR [eax+0x14],ecx
64012cb8:	ret    
64012cb9:	call   0x6401460b
64012cbe:	mov    ecx,DWORD PTR [eax+0x14]
64012cc1:	imul   ecx,ecx,0x343fd
64012cc7:	add    ecx,0x269ec3
64012ccd:	mov    DWORD PTR [eax+0x14],ecx
64012cd0:	mov    eax,ecx
64012cd2:	shr    eax,0x10
64012cd5:	and    eax,0x7fff
64012cda:	ret    
64012cdb:	push   ebp
64012cdc:	mov    ebp,esp
64012cde:	push   ecx
64012cdf:	mov    eax,DWORD PTR [ebp+0xc]
64012ce2:	cmp    eax,0x1
64012ce5:	push   ebx
64012ce6:	push   esi
64012ce7:	push   edi
64012ce8:	jne    0x64012e05
64012cee:	mov    ebx,DWORD PTR ds:0x64024104
64012cf4:	mov    edi,0x94
64012cf9:	push   edi
64012cfa:	push   0x0
64012cfc:	call   ebx
64012cfe:	push   eax
64012cff:	call   DWORD PTR ds:0x640240f4
64012d05:	mov    esi,eax
64012d07:	test   esi,esi
64012d09:	jne    0x64012d12
64012d0b:	xor    eax,eax
64012d0d:	jmp    0x64012ead
64012d12:	push   esi
64012d13:	mov    DWORD PTR [esi],edi
64012d15:	call   DWORD PTR ds:0x640240e8
64012d1b:	test   eax,eax
64012d1d:	push   esi
64012d1e:	push   0x0
64012d20:	jne    0x64012d2d
64012d22:	call   ebx
64012d24:	push   eax
64012d25:	call   DWORD PTR ds:0x640240f8
64012d2b:	jmp    0x64012d0b
64012d2d:	mov    eax,DWORD PTR [esi+0x10]
64012d30:	mov    edi,DWORD PTR [esi+0xc]
64012d33:	mov    DWORD PTR [ebp+0xc],eax
64012d36:	mov    eax,DWORD PTR [esi+0x4]
64012d39:	mov    DWORD PTR [ebp+0x10],eax
64012d3c:	mov    eax,DWORD PTR [esi+0x8]
64012d3f:	mov    DWORD PTR [ebp-0x4],eax
64012d42:	and    edi,0x7fff
64012d48:	call   ebx
64012d4a:	push   eax
64012d4b:	call   DWORD PTR ds:0x640240f8
64012d51:	mov    eax,DWORD PTR [ebp+0xc]
64012d54:	cmp    eax,0x2
64012d57:	je     0x64012d5f
64012d59:	or     edi,0x8000
64012d5f:	mov    ecx,DWORD PTR [ebp-0x4]
64012d62:	mov    ds:0x6402d8f4,eax
64012d67:	mov    eax,DWORD PTR [ebp+0x10]
64012d6a:	mov    edx,eax
64012d6c:	shl    edx,0x8
64012d6f:	add    edx,ecx
64012d71:	push   0x1
64012d73:	mov    DWORD PTR ds:0x6402d8fc,edx
64012d79:	mov    ds:0x6402d900,eax
64012d7e:	mov    DWORD PTR ds:0x6402d904,ecx
64012d84:	mov    DWORD PTR ds:0x6402d8f8,edi
64012d8a:	call   0x640185bf
64012d8f:	test   eax,eax
64012d91:	pop    ecx
64012d92:	je     0x64012d0b
64012d98:	call   0x640147ad
64012d9d:	test   eax,eax
64012d9f:	jne    0x64012dab
64012da1:	call   0x64018619
64012da6:	jmp    0x64012d0b
64012dab:	call   0x6401851c
64012db0:	call   DWORD PTR ds:0x64024120
64012db6:	mov    ds:0x64031580,eax
64012dbb:	call   0x640183e7
64012dc0:	mov    ds:0x6402d594,eax
64012dc5:	call   0x64017e1b
64012dca:	test   eax,eax
64012dcc:	jge    0x64012dd5
64012dce:	call   0x64014498
64012dd3:	jmp    0x64012da1
64012dd5:	call   0x6401832e
64012dda:	test   eax,eax
64012ddc:	jl     0x64012dfe
64012dde:	call   0x640180bb
64012de3:	test   eax,eax
64012de5:	jl     0x64012dfe
64012de7:	push   0x0
64012de9:	call   0x64015a62
64012dee:	test   eax,eax
64012df0:	pop    ecx
64012df1:	jne    0x64012dfe
64012df3:	inc    DWORD PTR ds:0x6402d590
64012df9:	jmp    0x64012eaa
64012dfe:	call   0x6401806f
64012e03:	jmp    0x64012dce
64012e05:	xor    edi,edi
64012e07:	cmp    eax,edi
64012e09:	jne    0x64012e40
64012e0b:	cmp    DWORD PTR ds:0x6402d590,edi
64012e11:	jle    0x64012d0b
64012e17:	dec    DWORD PTR ds:0x6402d590
64012e1d:	cmp    DWORD PTR ds:0x6402d930,edi
64012e23:	jne    0x64012e2a
64012e25:	call   0x64015be7
64012e2a:	cmp    DWORD PTR [ebp+0x10],edi
64012e2d:	jne    0x64012eaa
64012e2f:	call   0x6401806f
64012e34:	call   0x64014498
64012e39:	call   0x64018619
64012e3e:	jmp    0x64012eaa
64012e40:	cmp    eax,0x2
64012e43:	jne    0x64012e9e
64012e45:	call   0x64014466
64012e4a:	push   0x214
64012e4f:	push   0x1
64012e51:	call   0x64015810
64012e56:	mov    esi,eax
64012e58:	cmp    esi,edi
64012e5a:	pop    ecx
64012e5b:	pop    ecx
64012e5c:	je     0x64012d0b
64012e62:	push   esi
64012e63:	push   DWORD PTR ds:0x6402c230
64012e69:	push   DWORD PTR ds:0x6402d5b4
64012e6f:	call   0x640143ef
64012e74:	pop    ecx
64012e75:	call   eax
64012e77:	test   eax,eax
64012e79:	je     0x64012e92
64012e7b:	push   edi
64012e7c:	push   esi
64012e7d:	call   0x640144d5
64012e82:	pop    ecx
64012e83:	pop    ecx
64012e84:	call   DWORD PTR ds:0x6402411c
64012e8a:	or     DWORD PTR [esi+0x4],0xffffffff
64012e8e:	mov    DWORD PTR [esi],eax
64012e90:	jmp    0x64012eaa
64012e92:	push   esi
64012e93:	call   0x64013396
64012e98:	pop    ecx
64012e99:	jmp    0x64012d0b
64012e9e:	cmp    eax,0x3
64012ea1:	jne    0x64012eaa
64012ea3:	push   edi
64012ea4:	call   0x64014744
64012ea9:	pop    ecx
64012eaa:	xor    eax,eax
64012eac:	inc    eax
64012ead:	pop    edi
64012eae:	pop    esi
64012eaf:	pop    ebx
64012eb0:	leave  
64012eb1:	ret    0xc
64012eb4:	push   0xc
64012eb6:	push   0x640296c8
64012ebb:	call   0x64013ac0
64012ec0:	mov    edi,ecx
64012ec2:	mov    esi,edx
64012ec4:	mov    ebx,DWORD PTR [ebp+0x8]
64012ec7:	xor    eax,eax
64012ec9:	inc    eax
64012eca:	mov    DWORD PTR [ebp-0x1c],eax
64012ecd:	test   esi,esi
64012ecf:	jne    0x64012edd
64012ed1:	cmp    DWORD PTR ds:0x6402d590,edx
64012ed7:	je     0x64012fa2
64012edd:	and    DWORD PTR [ebp-0x4],0x0
64012ee1:	cmp    esi,eax
64012ee3:	je     0x64012eea
64012ee5:	cmp    esi,0x2
64012ee8:	jne    0x64012f18
64012eea:	mov    eax,ds:0x64024b98
64012eef:	test   eax,eax
64012ef1:	je     0x64012efb
64012ef3:	push   edi
64012ef4:	push   esi
64012ef5:	push   ebx
64012ef6:	call   eax
64012ef8:	mov    DWORD PTR [ebp-0x1c],eax
64012efb:	cmp    DWORD PTR [ebp-0x1c],0x0
64012eff:	je     0x64012f9b
64012f05:	push   edi
64012f06:	push   esi
64012f07:	push   ebx
64012f08:	call   0x64012cdb
64012f0d:	mov    DWORD PTR [ebp-0x1c],eax
64012f10:	test   eax,eax
64012f12:	je     0x64012f9b
64012f18:	push   edi
64012f19:	push   esi
64012f1a:	push   ebx
64012f1b:	call   0x6400f330
64012f20:	mov    DWORD PTR [ebp-0x1c],eax
64012f23:	cmp    esi,0x1
64012f26:	jne    0x64012f4c
64012f28:	test   eax,eax
64012f2a:	jne    0x64012f4c
64012f2c:	push   edi
64012f2d:	push   eax
64012f2e:	push   ebx
64012f2f:	call   0x6400f330
64012f34:	push   edi
64012f35:	push   0x0
64012f37:	push   ebx
64012f38:	call   0x64012cdb
64012f3d:	mov    eax,ds:0x64024b98
64012f42:	test   eax,eax
64012f44:	je     0x64012f4c
64012f46:	push   edi
64012f47:	push   0x0
64012f49:	push   ebx
64012f4a:	call   eax
64012f4c:	test   esi,esi
64012f4e:	je     0x64012f55
64012f50:	cmp    esi,0x3
64012f53:	jne    0x64012f7b
64012f55:	push   edi
64012f56:	push   esi
64012f57:	push   ebx
64012f58:	call   0x64012cdb
64012f5d:	test   eax,eax
64012f5f:	jne    0x64012f64
64012f61:	and    DWORD PTR [ebp-0x1c],eax
64012f64:	cmp    DWORD PTR [ebp-0x1c],0x0
64012f68:	je     0x64012f7b
64012f6a:	mov    eax,ds:0x64024b98
64012f6f:	test   eax,eax
64012f71:	je     0x64012f7b
64012f73:	push   edi
64012f74:	push   esi
64012f75:	push   ebx
64012f76:	call   eax
64012f78:	mov    DWORD PTR [ebp-0x1c],eax
64012f7b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64012f82:	mov    eax,DWORD PTR [ebp-0x1c]
64012f85:	jmp    0x64012fa4
64012f87:	mov    eax,DWORD PTR [ebp-0x14]
64012f8a:	mov    ecx,DWORD PTR [eax]
64012f8c:	mov    ecx,DWORD PTR [ecx]
64012f8e:	push   eax
64012f8f:	push   ecx
64012f90:	call   0x640187eb
64012f95:	pop    ecx
64012f96:	pop    ecx
64012f97:	ret    
64012f98:	mov    esp,DWORD PTR [ebp-0x18]
64012f9b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64012fa2:	xor    eax,eax
64012fa4:	call   0x64013b05
64012fa9:	ret    
64012faa:	cmp    DWORD PTR [esp+0x8],0x1
64012faf:	jne    0x64012fb6
64012fb1:	call   0x64018806
64012fb6:	push   DWORD PTR [esp+0x4]
64012fba:	mov    ecx,DWORD PTR [esp+0x10]
64012fbe:	mov    edx,DWORD PTR [esp+0xc]
64012fc2:	call   0x64012eb4
64012fc7:	pop    ecx
64012fc8:	ret    0xc
64012fcb:	cmp    DWORD PTR [esp+0x8],0x0
64012fd0:	je     0x64012fd8
64012fd2:	mov    BYTE PTR [ecx],0x2d
64012fd5:	inc    ecx
64012fd6:	neg    eax
64012fd8:	push   esi
64012fd9:	mov    esi,ecx
64012fdb:	xor    edx,edx
64012fdd:	div    DWORD PTR [esp+0x8]
64012fe1:	cmp    edx,0x9
64012fe4:	jbe    0x64012feb
64012fe6:	add    dl,0x57
64012fe9:	jmp    0x64012fee
64012feb:	add    dl,0x30
64012fee:	mov    BYTE PTR [ecx],dl
64012ff0:	inc    ecx
64012ff1:	test   eax,eax
64012ff3:	ja     0x64012fdb
64012ff5:	mov    BYTE PTR [ecx],0x0
64012ff8:	dec    ecx
64012ff9:	mov    dl,BYTE PTR [esi]
64012ffb:	mov    al,BYTE PTR [ecx]
64012ffd:	mov    BYTE PTR [ecx],dl
64012fff:	dec    ecx
64013000:	mov    BYTE PTR [esi],al
64013002:	inc    esi
64013003:	cmp    esi,ecx
64013005:	jb     0x64012ff9
64013007:	pop    esi
64013008:	ret    0x8
6401300b:	push   ebp
6401300c:	mov    ebp,esp
6401300e:	xor    eax,eax
64013010:	cmp    DWORD PTR [ebp+0x10],0xa
64013014:	jne    0x6401301c
64013016:	cmp    DWORD PTR [ebp+0x8],eax
64013019:	jge    0x6401301c
6401301b:	inc    eax
6401301c:	mov    ecx,DWORD PTR [ebp+0xc]
6401301f:	push   eax
64013020:	push   DWORD PTR [ebp+0x10]
64013023:	mov    eax,DWORD PTR [ebp+0x8]
64013026:	call   0x64012fcb
6401302b:	mov    eax,DWORD PTR [ebp+0xc]
6401302e:	pop    ebp
6401302f:	ret    
64013030:	push   ebp
64013031:	mov    ebp,esp
64013033:	sub    esp,0x20
64013036:	push   ebx
64013037:	xor    ebx,ebx
64013039:	cmp    DWORD PTR [ebp+0xc],ebx
6401303c:	jne    0x6401305b
6401303e:	call   0x640142c0
64013043:	push   ebx
64013044:	push   ebx
64013045:	push   ebx
64013046:	push   ebx
64013047:	push   ebx
64013048:	mov    DWORD PTR [eax],0x16
6401304e:	call   0x640120b4
64013053:	add    esp,0x14
64013056:	or     eax,0xffffffff
64013059:	jmp    0x640130a8
6401305b:	mov    eax,DWORD PTR [ebp+0x8]
6401305e:	cmp    eax,ebx
64013060:	je     0x6401303e
64013062:	push   esi
64013063:	mov    DWORD PTR [ebp-0x18],eax
64013066:	mov    DWORD PTR [ebp-0x20],eax
64013069:	lea    eax,[ebp+0x10]
6401306c:	push   eax
6401306d:	push   ebx
6401306e:	push   DWORD PTR [ebp+0xc]
64013071:	lea    eax,[ebp-0x20]
64013074:	push   eax
64013075:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
6401307c:	mov    DWORD PTR [ebp-0x14],0x42
64013083:	call   0x6401898c
64013088:	add    esp,0x10
6401308b:	dec    DWORD PTR [ebp-0x1c]
6401308e:	mov    esi,eax
64013090:	js     0x64013099
64013092:	mov    eax,DWORD PTR [ebp-0x20]
64013095:	mov    BYTE PTR [eax],bl
64013097:	jmp    0x640130a5
64013099:	lea    eax,[ebp-0x20]
6401309c:	push   eax
6401309d:	push   ebx
6401309e:	call   0x64016605
640130a3:	pop    ecx
640130a4:	pop    ecx
640130a5:	mov    eax,esi
640130a7:	pop    esi
640130a8:	pop    ebx
640130a9:	leave  
640130aa:	ret    
640130ab:	lea    eax,[esp+0x10]
640130af:	push   eax
640130b0:	push   0x0
640130b2:	push   DWORD PTR [esp+0x14]
640130b6:	push   DWORD PTR [esp+0x14]
640130ba:	push   DWORD PTR [esp+0x14]
640130be:	call   0x640193ea
640130c3:	add    esp,0x14
640130c6:	ret    
640130c7:	mov    eax,DWORD PTR [esp+0x4]
640130cb:	mov    dx,WORD PTR [esp+0x8]
640130d0:	jmp    0x640130d9
640130d2:	cmp    cx,dx
640130d5:	je     0x640130e8
640130d7:	inc    eax
640130d8:	inc    eax
640130d9:	movzx  ecx,WORD PTR [eax]
640130dc:	test   cx,cx
640130df:	jne    0x640130d2
640130e1:	cmp    WORD PTR [eax],dx
640130e4:	je     0x640130e8
640130e6:	xor    eax,eax
640130e8:	ret    
640130e9:	push   ebp
640130ea:	mov    ebp,esp
640130ec:	sub    esp,0x10
640130ef:	push   DWORD PTR [ebp+0xc]
640130f2:	lea    ecx,[ebp-0x10]
640130f5:	call   0x6401271f
640130fa:	mov    eax,DWORD PTR [ebp-0x10]
640130fd:	cmp    DWORD PTR [eax+0xac],0x1
64013104:	jle    0x64013119
64013106:	lea    eax,[ebp-0x10]
64013109:	push   eax
6401310a:	push   0x4
6401310c:	push   DWORD PTR [ebp+0x8]
6401310f:	call   0x64019470
64013114:	add    esp,0xc
64013117:	jmp    0x64013129
64013119:	mov    eax,DWORD PTR [eax+0xc8]
6401311f:	mov    ecx,DWORD PTR [ebp+0x8]
64013122:	movzx  eax,BYTE PTR [eax+ecx*2]
64013126:	and    eax,0x4
64013129:	cmp    BYTE PTR [ebp-0x4],0x0
6401312d:	je     0x64013136
6401312f:	mov    ecx,DWORD PTR [ebp-0x8]
64013132:	and    DWORD PTR [ecx+0x70],0xfffffffd
64013136:	leave  
64013137:	ret    
64013138:	cmp    DWORD PTR ds:0x6402d954,0x0
6401313f:	jne    0x64013153
64013141:	mov    eax,DWORD PTR [esp+0x4]
64013145:	mov    ecx,DWORD PTR ds:0x6402c860
6401314b:	movzx  eax,BYTE PTR [ecx+eax*2]
6401314f:	and    eax,0x4
64013152:	ret    
64013153:	push   0x0
64013155:	push   DWORD PTR [esp+0x8]
64013159:	call   0x640130e9
6401315e:	pop    ecx
6401315f:	pop    ecx
64013160:	ret    
64013161:	push   ebp
64013162:	mov    ebp,esp
64013164:	sub    esp,0x10
64013167:	push   DWORD PTR [ebp+0xc]
6401316a:	lea    ecx,[ebp-0x10]
6401316d:	call   0x6401271f
64013172:	mov    eax,DWORD PTR [ebp-0x10]
64013175:	cmp    DWORD PTR [eax+0xac],0x1
6401317c:	jle    0x64013191
6401317e:	lea    eax,[ebp-0x10]
64013181:	push   eax
64013182:	push   0x8
64013184:	push   DWORD PTR [ebp+0x8]
64013187:	call   0x64019470
6401318c:	add    esp,0xc
6401318f:	jmp    0x640131a1
64013191:	mov    eax,DWORD PTR [eax+0xc8]
64013197:	mov    ecx,DWORD PTR [ebp+0x8]
6401319a:	movzx  eax,BYTE PTR [eax+ecx*2]
6401319e:	and    eax,0x8
640131a1:	cmp    BYTE PTR [ebp-0x4],0x0
640131a5:	je     0x640131ae
640131a7:	mov    ecx,DWORD PTR [ebp-0x8]
640131aa:	and    DWORD PTR [ecx+0x70],0xfffffffd
640131ae:	leave  
640131af:	ret    
640131b0:	cmp    DWORD PTR ds:0x6402d954,0x0
640131b7:	jne    0x640131cb
640131b9:	mov    eax,DWORD PTR [esp+0x4]
640131bd:	mov    ecx,DWORD PTR ds:0x6402c860
640131c3:	movzx  eax,BYTE PTR [ecx+eax*2]
640131c7:	and    eax,0x8
640131ca:	ret    
640131cb:	push   0x0
640131cd:	push   DWORD PTR [esp+0x8]
640131d1:	call   0x64013161
640131d6:	pop    ecx
640131d7:	pop    ecx
640131d8:	ret    
640131d9:	push   ebp
640131da:	mov    ebp,esp
640131dc:	sub    esp,0x10
640131df:	push   DWORD PTR [ebp+0xc]
640131e2:	lea    ecx,[ebp-0x10]
640131e5:	call   0x6401271f
640131ea:	mov    eax,DWORD PTR [ebp-0x10]
640131ed:	cmp    DWORD PTR [eax+0xac],0x1
640131f4:	jle    0x6401320c
640131f6:	lea    eax,[ebp-0x10]
640131f9:	push   eax
640131fa:	push   0x157
640131ff:	push   DWORD PTR [ebp+0x8]
64013202:	call   0x64019470
64013207:	add    esp,0xc
6401320a:	jmp    0x6401321e
6401320c:	mov    eax,DWORD PTR [eax+0xc8]
64013212:	mov    ecx,DWORD PTR [ebp+0x8]
64013215:	movzx  eax,WORD PTR [eax+ecx*2]
64013219:	and    eax,0x157
6401321e:	cmp    BYTE PTR [ebp-0x4],0x0
64013222:	je     0x6401322b
64013224:	mov    ecx,DWORD PTR [ebp-0x8]
64013227:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401322b:	leave  
6401322c:	ret    
6401322d:	cmp    DWORD PTR ds:0x6402d954,0x0
64013234:	jne    0x6401324a
64013236:	mov    eax,DWORD PTR [esp+0x4]
6401323a:	mov    ecx,DWORD PTR ds:0x6402c860
64013240:	movzx  eax,WORD PTR [ecx+eax*2]
64013244:	and    eax,0x157
64013249:	ret    
6401324a:	push   0x0
6401324c:	push   DWORD PTR [esp+0x8]
64013250:	call   0x640131d9
64013255:	pop    ecx
64013256:	pop    ecx
64013257:	ret    
64013258:	push   ebp
64013259:	mov    ebp,esp
6401325b:	sub    esp,0x18
6401325e:	push   ebx
6401325f:	push   esi
64013260:	push   DWORD PTR [ebp+0xc]
64013263:	lea    ecx,[ebp-0x18]
64013266:	call   0x6401271f
6401326b:	mov    ebx,DWORD PTR [ebp+0x8]
6401326e:	mov    esi,0x100
64013273:	cmp    ebx,esi
64013275:	jae    0x640132cb
64013277:	mov    ecx,DWORD PTR [ebp-0x18]
6401327a:	cmp    DWORD PTR [ecx+0xac],0x1
64013281:	jle    0x64013297
64013283:	lea    eax,[ebp-0x18]
64013286:	push   eax
64013287:	push   0x1
64013289:	push   ebx
6401328a:	call   0x64019470
6401328f:	mov    ecx,DWORD PTR [ebp-0x18]
64013292:	add    esp,0xc
64013295:	jmp    0x640132a4
64013297:	mov    eax,DWORD PTR [ecx+0xc8]
6401329d:	movzx  eax,BYTE PTR [eax+ebx*2]
640132a1:	and    eax,0x1
640132a4:	test   eax,eax
640132a6:	je     0x640132b7
640132a8:	mov    eax,DWORD PTR [ecx+0xcc]
640132ae:	movzx  eax,BYTE PTR [eax+ebx*1]
640132b2:	jmp    0x6401335e
640132b7:	cmp    BYTE PTR [ebp-0xc],0x0
640132bb:	je     0x640132c4
640132bd:	mov    eax,DWORD PTR [ebp-0x10]
640132c0:	and    DWORD PTR [eax+0x70],0xfffffffd
640132c4:	mov    eax,ebx
640132c6:	jmp    0x6401336b
640132cb:	mov    eax,DWORD PTR [ebp-0x18]
640132ce:	cmp    DWORD PTR [eax+0xac],0x1
640132d5:	jle    0x64013308
640132d7:	mov    DWORD PTR [ebp+0x8],ebx
640132da:	sar    DWORD PTR [ebp+0x8],0x8
640132de:	lea    eax,[ebp-0x18]
640132e1:	push   eax
640132e2:	mov    eax,DWORD PTR [ebp+0x8]
640132e5:	and    eax,0xff
640132ea:	push   eax
640132eb:	call   0x6401990b
640132f0:	test   eax,eax
640132f2:	pop    ecx
640132f3:	pop    ecx
640132f4:	je     0x64013308
640132f6:	mov    al,BYTE PTR [ebp+0x8]
640132f9:	push   0x2
640132fb:	mov    BYTE PTR [ebp-0x4],al
640132fe:	mov    BYTE PTR [ebp-0x3],bl
64013301:	mov    BYTE PTR [ebp-0x2],0x0
64013305:	pop    ecx
64013306:	jmp    0x6401331d
64013308:	call   0x640142c0
6401330d:	mov    DWORD PTR [eax],0x2a
64013313:	xor    ecx,ecx
64013315:	mov    BYTE PTR [ebp-0x4],bl
64013318:	mov    BYTE PTR [ebp-0x3],0x0
6401331c:	inc    ecx
6401331d:	mov    eax,DWORD PTR [ebp-0x18]
64013320:	push   0x1
64013322:	push   DWORD PTR [eax+0x4]
64013325:	lea    edx,[ebp-0x8]
64013328:	push   0x3
6401332a:	push   edx
6401332b:	push   ecx
6401332c:	lea    ecx,[ebp-0x4]
6401332f:	push   ecx
64013330:	push   esi
64013331:	push   DWORD PTR [eax+0x14]
64013334:	lea    eax,[ebp-0x18]
64013337:	push   eax
64013338:	call   0x640198c8
6401333d:	add    esp,0x24
64013340:	test   eax,eax
64013342:	je     0x640132b7
64013348:	cmp    eax,0x1
6401334b:	jne    0x64013353
6401334d:	movzx  eax,BYTE PTR [ebp-0x8]
64013351:	jmp    0x6401335e
64013353:	movzx  ecx,BYTE PTR [ebp-0x7]
64013357:	xor    eax,eax
64013359:	mov    ah,BYTE PTR [ebp-0x8]
6401335c:	or     eax,ecx
6401335e:	cmp    BYTE PTR [ebp-0xc],0x0
64013362:	je     0x6401336b
64013364:	mov    ecx,DWORD PTR [ebp-0x10]
64013367:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401336b:	pop    esi
6401336c:	pop    ebx
6401336d:	leave  
6401336e:	ret    
6401336f:	cmp    DWORD PTR ds:0x6402d954,0x0
64013376:	jne    0x64013388
64013378:	mov    eax,DWORD PTR [esp+0x4]
6401337c:	lea    ecx,[eax-0x41]
6401337f:	cmp    ecx,0x19
64013382:	ja     0x64013395
64013384:	add    eax,0x20
64013387:	ret    
64013388:	push   0x0
6401338a:	push   DWORD PTR [esp+0x8]
6401338e:	call   0x64013258
64013393:	pop    ecx
64013394:	pop    ecx
64013395:	ret    
64013396:	push   0xc
64013398:	push   0x640296e8
6401339d:	call   0x64013ac0
640133a2:	mov    esi,DWORD PTR [ebp+0x8]
640133a5:	test   esi,esi
640133a7:	je     0x6401341e
640133a9:	cmp    DWORD PTR ds:0x6403143c,0x3
640133b0:	jne    0x640133f5
640133b2:	push   0x4
640133b4:	call   0x64019ac5
640133b9:	pop    ecx
640133ba:	and    DWORD PTR [ebp-0x4],0x0
640133be:	push   esi
640133bf:	call   0x64019b3e
640133c4:	pop    ecx
640133c5:	mov    DWORD PTR [ebp-0x1c],eax
640133c8:	test   eax,eax
640133ca:	je     0x640133d5
640133cc:	push   esi
640133cd:	push   eax
640133ce:	call   0x64019b69
640133d3:	pop    ecx
640133d4:	pop    ecx
640133d5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640133dc:	call   0x640133ec
640133e1:	cmp    DWORD PTR [ebp-0x1c],0x0
640133e5:	jne    0x6401341e
640133e7:	push   DWORD PTR [ebp+0x8]
640133ea:	jmp    0x640133f6
640133ec:	push   0x4
640133ee:	call   0x640199ed
640133f3:	pop    ecx
640133f4:	ret    
640133f5:	push   esi
640133f6:	push   0x0
640133f8:	push   DWORD PTR ds:0x6402da8c
640133fe:	call   DWORD PTR ds:0x640240f8
64013404:	test   eax,eax
64013406:	jne    0x6401341e
64013408:	call   0x640142c0
6401340d:	mov    esi,eax
6401340f:	call   DWORD PTR ds:0x64024044
64013415:	push   eax
64013416:	call   0x64014285
6401341b:	mov    DWORD PTR [esi],eax
6401341d:	pop    ecx
6401341e:	call   0x64013b05
64013423:	ret    
64013424:	push   0xc
64013426:	push   0x64029708
6401342b:	call   0x64013ac0
64013430:	and    DWORD PTR [ebp-0x1c],0x0
64013434:	mov    esi,DWORD PTR [ebp+0x8]
64013437:	cmp    esi,DWORD PTR ds:0x6403142c
6401343d:	ja     0x64013461
6401343f:	push   0x4
64013441:	call   0x64019ac5
64013446:	pop    ecx
64013447:	and    DWORD PTR [ebp-0x4],0x0
6401344b:	push   esi
6401344c:	call   0x6401a312
64013451:	pop    ecx
64013452:	mov    DWORD PTR [ebp-0x1c],eax
64013455:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401345c:	call   0x6401346a
64013461:	mov    eax,DWORD PTR [ebp-0x1c]
64013464:	call   0x64013b05
64013469:	ret    
6401346a:	push   0x4
6401346c:	call   0x640199ed
64013471:	pop    ecx
64013472:	ret    
64013473:	push   ebp
64013474:	mov    ebp,DWORD PTR [esp+0x8]
64013478:	cmp    ebp,0xffffffe0
6401347b:	ja     0x64013520
64013481:	push   ebx
64013482:	mov    ebx,DWORD PTR ds:0x640240f4
64013488:	push   esi
64013489:	push   edi
6401348a:	xor    esi,esi
6401348c:	cmp    DWORD PTR ds:0x6402da8c,esi
64013492:	mov    edi,ebp
64013494:	jne    0x640134ae
64013496:	call   0x6401a795
6401349b:	push   0x1e
6401349d:	call   0x6401a5f5
640134a2:	push   0xff
640134a7:	call   0x64015990
640134ac:	pop    ecx
640134ad:	pop    ecx
640134ae:	mov    eax,ds:0x6403143c
640134b3:	cmp    eax,0x1
640134b6:	jne    0x640134c6
640134b8:	cmp    ebp,esi
640134ba:	je     0x640134c0
640134bc:	mov    eax,ebp
640134be:	jmp    0x640134c3
640134c0:	xor    eax,eax
640134c2:	inc    eax
640134c3:	push   eax
640134c4:	jmp    0x640134e4
640134c6:	cmp    eax,0x3
640134c9:	jne    0x640134d6
640134cb:	push   ebp
640134cc:	call   0x64013424
640134d1:	cmp    eax,esi
640134d3:	pop    ecx
640134d4:	jne    0x640134ed
640134d6:	cmp    ebp,esi
640134d8:	jne    0x640134dd
640134da:	xor    edi,edi
640134dc:	inc    edi
640134dd:	add    edi,0xf
640134e0:	and    edi,0xfffffff0
640134e3:	push   edi
640134e4:	push   esi
640134e5:	push   DWORD PTR ds:0x6402da8c
640134eb:	call   ebx
640134ed:	mov    esi,eax
640134ef:	test   esi,esi
640134f1:	jne    0x64013519
640134f3:	cmp    DWORD PTR ds:0x6402df04,eax
640134f9:	push   0xc
640134fb:	pop    edi
640134fc:	je     0x6401350b
640134fe:	push   ebp
640134ff:	call   0x6401493b
64013504:	test   eax,eax
64013506:	pop    ecx
64013507:	jne    0x6401348a
64013509:	jmp    0x64013512
6401350b:	call   0x640142c0
64013510:	mov    DWORD PTR [eax],edi
64013512:	call   0x640142c0
64013517:	mov    DWORD PTR [eax],edi
64013519:	pop    edi
6401351a:	mov    eax,esi
6401351c:	pop    esi
6401351d:	pop    ebx
6401351e:	pop    ebp
6401351f:	ret    
64013520:	push   ebp
64013521:	call   0x6401493b
64013526:	pop    ecx
64013527:	call   0x640142c0
6401352c:	mov    DWORD PTR [eax],0xc
64013532:	xor    eax,eax
64013534:	pop    ebp
64013535:	ret    
64013536:	int3   
64013537:	int3   
64013538:	int3   
64013539:	int3   
6401353a:	int3   
6401353b:	int3   
6401353c:	int3   
6401353d:	int3   
6401353e:	int3   
6401353f:	int3   
64013540:	push   ebp
64013541:	mov    ebp,esp
64013543:	push   edi
64013544:	push   esi
64013545:	mov    esi,DWORD PTR [ebp+0xc]
64013548:	mov    ecx,DWORD PTR [ebp+0x10]
6401354b:	mov    edi,DWORD PTR [ebp+0x8]
6401354e:	mov    eax,ecx
64013550:	mov    edx,ecx
64013552:	add    eax,esi
64013554:	cmp    edi,esi
64013556:	jbe    0x64013560
64013558:	cmp    edi,eax
6401355a:	jb     0x64013704
64013560:	cmp    ecx,0x100
64013566:	jb     0x64013587
64013568:	cmp    DWORD PTR ds:0x64031564,0x0
6401356f:	je     0x64013587
64013571:	push   edi
64013572:	push   esi
64013573:	and    edi,0xf
64013576:	and    esi,0xf
64013579:	cmp    edi,esi
6401357b:	pop    esi
6401357c:	pop    edi
6401357d:	jne    0x64013587
6401357f:	pop    esi
64013580:	pop    edi
64013581:	pop    ebp
64013582:	jmp    0x6401a855
64013587:	test   edi,0x3
6401358d:	jne    0x640135a4
6401358f:	shr    ecx,0x2
64013592:	and    edx,0x3
64013595:	cmp    ecx,0x8
64013598:	jb     0x640135c4
6401359a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401359c:	jmp    DWORD PTR [edx*4+0x640136b4]
640135a3:	nop
640135a4:	mov    eax,edi
640135a6:	mov    edx,0x3
640135ab:	sub    ecx,0x4
640135ae:	jb     0x640135bc
640135b0:	and    eax,0x3
640135b3:	add    ecx,eax
640135b5:	jmp    DWORD PTR [eax*4+0x640135c8]
640135bc:	jmp    DWORD PTR [ecx*4+0x640136c4]
640135c3:	nop
640135c4:	jmp    DWORD PTR [ecx*4+0x64013648]
640135cb:	nop
640135cc:	fdiv   DWORD PTR ds:0x36046401
640135d2:	add    DWORD PTR [eax+ebp*1+0x36],esp
640135d6:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
640135da:	mov    al,BYTE PTR [esi]
640135dc:	mov    BYTE PTR [edi],al
640135de:	mov    al,BYTE PTR [esi+0x1]
640135e1:	mov    BYTE PTR [edi+0x1],al
640135e4:	mov    al,BYTE PTR [esi+0x2]
640135e7:	shr    ecx,0x2
640135ea:	mov    BYTE PTR [edi+0x2],al
640135ed:	add    esi,0x3
640135f0:	add    edi,0x3
640135f3:	cmp    ecx,0x8
640135f6:	jb     0x640135c4
640135f8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640135fa:	jmp    DWORD PTR [edx*4+0x640136b4]
64013601:	lea    ecx,[ecx+0x0]
64013604:	and    edx,ecx
64013606:	mov    al,BYTE PTR [esi]
64013608:	mov    BYTE PTR [edi],al
6401360a:	mov    al,BYTE PTR [esi+0x1]
6401360d:	shr    ecx,0x2
64013610:	mov    BYTE PTR [edi+0x1],al
64013613:	add    esi,0x2
64013616:	add    edi,0x2
64013619:	cmp    ecx,0x8
6401361c:	jb     0x640135c4
6401361e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013620:	jmp    DWORD PTR [edx*4+0x640136b4]
64013627:	nop
64013628:	and    edx,ecx
6401362a:	mov    al,BYTE PTR [esi]
6401362c:	mov    BYTE PTR [edi],al
6401362e:	add    esi,0x1
64013631:	shr    ecx,0x2
64013634:	add    edi,0x1
64013637:	cmp    ecx,0x8
6401363a:	jb     0x640135c4
6401363c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401363e:	jmp    DWORD PTR [edx*4+0x640136b4]
64013645:	lea    ecx,[ecx+0x0]
64013648:	stos   DWORD PTR es:[edi],eax
64013649:	add    DWORD PTR ss:[eax+ebx*4+0x36],esp
6401364e:	add    DWORD PTR [eax+edx*4+0x36],esp
64013652:	add    DWORD PTR [eax+ecx*4+0x36],esp
64013656:	add    DWORD PTR [eax+eax*4+0x36],esp
6401365a:	add    DWORD PTR [eax+edi*2+0x36],esp
6401365e:	add    DWORD PTR [eax+esi*2+0x36],esp
64013662:	add    DWORD PTR [eax+ebp*2+0x36],esp
64013666:	add    DWORD PTR [ebx+ecx*4+0x44],esp
6401366a:	mov    fs,esp
6401366c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64013670:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64013674:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64013678:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
6401367c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64013680:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64013684:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64013688:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
6401368c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64013690:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64013694:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64013698:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
6401369c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
640136a0:	lea    eax,[ecx*4+0x0]
640136a7:	add    esi,eax
640136a9:	add    edi,eax
640136ab:	jmp    DWORD PTR [edx*4+0x640136b4]
640136b2:	mov    edi,edi
640136b4:	les    esi,FWORD PTR [esi]
640136b6:	add    DWORD PTR [esp+ecx*8+0x36],esp
640136ba:	add    DWORD PTR [eax+ebx*8+0x36],esp
640136be:	add    DWORD PTR [esp+ebp*8+0x36],esp
640136c2:	add    DWORD PTR [ebx+ecx*4+0x45],esp
640136c6:	or     BYTE PTR [esi+0x5f],bl
640136c9:	leave  
640136ca:	ret    
640136cb:	nop
640136cc:	mov    al,BYTE PTR [esi]
640136ce:	mov    BYTE PTR [edi],al
640136d0:	mov    eax,DWORD PTR [ebp+0x8]
640136d3:	pop    esi
640136d4:	pop    edi
640136d5:	leave  
640136d6:	ret    
640136d7:	nop
640136d8:	mov    al,BYTE PTR [esi]
640136da:	mov    BYTE PTR [edi],al
640136dc:	mov    al,BYTE PTR [esi+0x1]
640136df:	mov    BYTE PTR [edi+0x1],al
640136e2:	mov    eax,DWORD PTR [ebp+0x8]
640136e5:	pop    esi
640136e6:	pop    edi
640136e7:	leave  
640136e8:	ret    
640136e9:	lea    ecx,[ecx+0x0]
640136ec:	mov    al,BYTE PTR [esi]
640136ee:	mov    BYTE PTR [edi],al
640136f0:	mov    al,BYTE PTR [esi+0x1]
640136f3:	mov    BYTE PTR [edi+0x1],al
640136f6:	mov    al,BYTE PTR [esi+0x2]
640136f9:	mov    BYTE PTR [edi+0x2],al
640136fc:	mov    eax,DWORD PTR [ebp+0x8]
640136ff:	pop    esi
64013700:	pop    edi
64013701:	leave  
64013702:	ret    
64013703:	nop
64013704:	lea    esi,[ecx+esi*1-0x4]
64013708:	lea    edi,[ecx+edi*1-0x4]
6401370c:	test   edi,0x3
64013712:	jne    0x64013738
64013714:	shr    ecx,0x2
64013717:	and    edx,0x3
6401371a:	cmp    ecx,0x8
6401371d:	jb     0x6401372c
6401371f:	std    
64013720:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013722:	cld    
64013723:	jmp    DWORD PTR [edx*4+0x64013850]
6401372a:	mov    edi,edi
6401372c:	neg    ecx
6401372e:	jmp    DWORD PTR [ecx*4+0x64013800]
64013735:	lea    ecx,[ecx+0x0]
64013738:	mov    eax,edi
6401373a:	mov    edx,0x3
6401373f:	cmp    ecx,0x4
64013742:	jb     0x64013750
64013744:	and    eax,0x3
64013747:	sub    ecx,eax
64013749:	jmp    DWORD PTR [eax*4+0x64013754]
64013750:	jmp    DWORD PTR [ecx*4+0x64013850]
64013757:	nop
64013758:	fs aaa 
6401375a:	add    DWORD PTR [eax+ecx*4+0x37],esp
6401375e:	add    DWORD PTR [eax+esi*4+0x37],esp
64013762:	add    DWORD PTR [edx+ecx*4+0x46],esp
64013766:	add    esp,DWORD PTR [ebx]
64013768:	ror    DWORD PTR [eax-0x117cfcb9],1
6401376e:	add    ecx,eax
64013770:	jmp    0x65f0ba77
64013775:	cmp    ecx,0x8
64013778:	jb     0x6401372c
6401377a:	std    
6401377b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401377d:	cld    
6401377e:	jmp    DWORD PTR [edx*4+0x64013850]
64013785:	lea    ecx,[ecx+0x0]
64013788:	mov    al,BYTE PTR [esi+0x3]
6401378b:	and    edx,ecx
6401378d:	mov    BYTE PTR [edi+0x3],al
64013790:	mov    al,BYTE PTR [esi+0x2]
64013793:	shr    ecx,0x2
64013796:	mov    BYTE PTR [edi+0x2],al
64013799:	sub    esi,0x2
6401379c:	sub    edi,0x2
6401379f:	cmp    ecx,0x8
640137a2:	jb     0x6401372c
640137a4:	std    
640137a5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640137a7:	cld    
640137a8:	jmp    DWORD PTR [edx*4+0x64013850]
640137af:	nop
640137b0:	mov    al,BYTE PTR [esi+0x3]
640137b3:	and    edx,ecx
640137b5:	mov    BYTE PTR [edi+0x3],al
640137b8:	mov    al,BYTE PTR [esi+0x2]
640137bb:	mov    BYTE PTR [edi+0x2],al
640137be:	mov    al,BYTE PTR [esi+0x1]
640137c1:	shr    ecx,0x2
640137c4:	mov    BYTE PTR [edi+0x1],al
640137c7:	sub    esi,0x3
640137ca:	sub    edi,0x3
640137cd:	cmp    ecx,0x8
640137d0:	jb     0x6401372c
640137d6:	std    
640137d7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640137d9:	cld    
640137da:	jmp    DWORD PTR [edx*4+0x64013850]
640137e1:	lea    ecx,[ecx+0x0]
640137e4:	add    al,0x38
640137e6:	add    DWORD PTR [esp+ecx*1+0x38],esp
640137ea:	add    DWORD PTR [esp+edx*1+0x38],esp
640137ee:	add    DWORD PTR [esp+ebx*1+0x38],esp
640137f2:	add    DWORD PTR [esp+0x38],esp
640137f6:	add    DWORD PTR [esp+ebp*1+0x38],esp
640137fa:	add    DWORD PTR [esp+esi*1+0x38],esp
640137fe:	add    DWORD PTR [edi+eax*2+0x38],esp
64013802:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64013806:	mov    ds,WORD PTR [ecx+ecx*4]
64013809:	inc    esp
6401380a:	(bad)  
6401380b:	sbb    al,0x8b
6401380d:	inc    esp
6401380e:	mov    ds,WORD PTR [eax]
64013810:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64013814:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64013818:	mov    DWORD PTR [edi+ecx*4+0x14],eax
6401381c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64013820:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64013824:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64013828:	mov    DWORD PTR [edi+ecx*4+0xc],eax
6401382c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64013830:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64013834:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64013838:	mov    DWORD PTR [edi+ecx*4+0x4],eax
6401383c:	lea    eax,[ecx*4+0x0]
64013843:	add    esi,eax
64013845:	add    edi,eax
64013847:	jmp    DWORD PTR [edx*4+0x64013850]
6401384e:	mov    edi,edi
64013850:	pusha  
64013851:	cmp    BYTE PTR [ecx],al
64013853:	fs push 0x78640138
64013859:	cmp    BYTE PTR [ecx],al
6401385b:	mov    WORD PTR fs:[eax],?
6401385e:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64013862:	or     BYTE PTR [esi+0x5f],bl
64013865:	leave  
64013866:	ret    
64013867:	nop
64013868:	mov    al,BYTE PTR [esi+0x3]
6401386b:	mov    BYTE PTR [edi+0x3],al
6401386e:	mov    eax,DWORD PTR [ebp+0x8]
64013871:	pop    esi
64013872:	pop    edi
64013873:	leave  
64013874:	ret    
64013875:	lea    ecx,[ecx+0x0]
64013878:	mov    al,BYTE PTR [esi+0x3]
6401387b:	mov    BYTE PTR [edi+0x3],al
6401387e:	mov    al,BYTE PTR [esi+0x2]
64013881:	mov    BYTE PTR [edi+0x2],al
64013884:	mov    eax,DWORD PTR [ebp+0x8]
64013887:	pop    esi
64013888:	pop    edi
64013889:	leave  
6401388a:	ret    
6401388b:	nop
6401388c:	mov    al,BYTE PTR [esi+0x3]
6401388f:	mov    BYTE PTR [edi+0x3],al
64013892:	mov    al,BYTE PTR [esi+0x2]
64013895:	mov    BYTE PTR [edi+0x2],al
64013898:	mov    al,BYTE PTR [esi+0x1]
6401389b:	mov    BYTE PTR [edi+0x1],al
6401389e:	mov    eax,DWORD PTR [ebp+0x8]
640138a1:	pop    esi
640138a2:	pop    edi
640138a3:	leave  
640138a4:	ret    
640138a5:	push   0x10
640138a7:	push   0x64029728
640138ac:	call   0x64013ac0
640138b1:	mov    ebx,DWORD PTR [ebp+0x8]
640138b4:	test   ebx,ebx
640138b6:	jne    0x640138c6
640138b8:	push   DWORD PTR [ebp+0xc]
640138bb:	call   0x64013473
640138c0:	pop    ecx
640138c1:	jmp    0x64013a92
640138c6:	mov    esi,DWORD PTR [ebp+0xc]
640138c9:	test   esi,esi
640138cb:	jne    0x640138d9
640138cd:	push   ebx
640138ce:	call   0x64013396
640138d3:	pop    ecx
640138d4:	jmp    0x64013a90
640138d9:	cmp    DWORD PTR ds:0x6403143c,0x3
640138e0:	jne    0x64013a79
640138e6:	xor    edi,edi
640138e8:	mov    DWORD PTR [ebp-0x1c],edi
640138eb:	cmp    esi,0xffffffe0
640138ee:	ja     0x64013a7e
640138f4:	push   0x4
640138f6:	call   0x64019ac5
640138fb:	pop    ecx
640138fc:	mov    DWORD PTR [ebp-0x4],edi
640138ff:	push   ebx
64013900:	call   0x64019b3e
64013905:	pop    ecx
64013906:	mov    DWORD PTR [ebp-0x20],eax
64013909:	cmp    eax,edi
6401390b:	je     0x640139af
64013911:	cmp    esi,DWORD PTR ds:0x6403142c
64013917:	ja     0x64013962
64013919:	push   esi
6401391a:	push   ebx
6401391b:	push   eax
6401391c:	call   0x6401a033
64013921:	add    esp,0xc
64013924:	test   eax,eax
64013926:	je     0x6401392d
64013928:	mov    DWORD PTR [ebp-0x1c],ebx
6401392b:	jmp    0x64013962
6401392d:	push   esi
6401392e:	call   0x6401a312
64013933:	pop    ecx
64013934:	mov    DWORD PTR [ebp-0x1c],eax
64013937:	cmp    eax,edi
64013939:	je     0x64013962
6401393b:	mov    eax,DWORD PTR [ebx-0x4]
6401393e:	dec    eax
6401393f:	cmp    eax,esi
64013941:	jb     0x64013945
64013943:	mov    eax,esi
64013945:	push   eax
64013946:	push   ebx
64013947:	push   DWORD PTR [ebp-0x1c]
6401394a:	call   0x64013f20
6401394f:	push   ebx
64013950:	call   0x64019b3e
64013955:	mov    DWORD PTR [ebp-0x20],eax
64013958:	push   ebx
64013959:	push   eax
6401395a:	call   0x64019b69
6401395f:	add    esp,0x18
64013962:	cmp    DWORD PTR [ebp-0x1c],edi
64013965:	jne    0x640139af
64013967:	cmp    esi,edi
64013969:	jne    0x64013971
6401396b:	xor    esi,esi
6401396d:	inc    esi
6401396e:	mov    DWORD PTR [ebp+0xc],esi
64013971:	add    esi,0xf
64013974:	and    esi,0xfffffff0
64013977:	mov    DWORD PTR [ebp+0xc],esi
6401397a:	push   esi
6401397b:	push   edi
6401397c:	push   DWORD PTR ds:0x6402da8c
64013982:	call   DWORD PTR ds:0x640240f4
64013988:	mov    DWORD PTR [ebp-0x1c],eax
6401398b:	cmp    eax,edi
6401398d:	je     0x640139af
6401398f:	mov    eax,DWORD PTR [ebx-0x4]
64013992:	dec    eax
64013993:	cmp    eax,esi
64013995:	jb     0x64013999
64013997:	mov    eax,esi
64013999:	push   eax
6401399a:	push   ebx
6401399b:	push   DWORD PTR [ebp-0x1c]
6401399e:	call   0x64013f20
640139a3:	push   ebx
640139a4:	push   DWORD PTR [ebp-0x20]
640139a7:	call   0x64019b69
640139ac:	add    esp,0x14
640139af:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640139b6:	call   0x640139e9
640139bb:	cmp    DWORD PTR [ebp-0x20],0x0
640139bf:	jne    0x640139f2
640139c1:	test   esi,esi
640139c3:	jne    0x640139c6
640139c5:	inc    esi
640139c6:	add    esi,0xf
640139c9:	and    esi,0xfffffff0
640139cc:	mov    DWORD PTR [ebp+0xc],esi
640139cf:	push   esi
640139d0:	push   ebx
640139d1:	push   0x0
640139d3:	push   DWORD PTR ds:0x6402da8c
640139d9:	call   DWORD PTR ds:0x640240fc
640139df:	mov    edi,eax
640139e1:	jmp    0x640139f5
640139e3:	mov    esi,DWORD PTR [ebp+0xc]
640139e6:	mov    ebx,DWORD PTR [ebp+0x8]
640139e9:	push   0x4
640139eb:	call   0x640199ed
640139f0:	pop    ecx
640139f1:	ret    
640139f2:	mov    edi,DWORD PTR [ebp-0x1c]
640139f5:	test   edi,edi
640139f7:	jne    0x64013abc
640139fd:	cmp    DWORD PTR ds:0x6402df04,edi
64013a03:	je     0x64013a31
64013a05:	push   esi
64013a06:	call   0x6401493b
64013a0b:	pop    ecx
64013a0c:	test   eax,eax
64013a0e:	jne    0x640138e6
64013a14:	call   0x640142c0
64013a19:	cmp    DWORD PTR [ebp-0x20],edi
64013a1c:	jne    0x64013a8a
64013a1e:	mov    esi,eax
64013a20:	call   DWORD PTR ds:0x64024044
64013a26:	push   eax
64013a27:	call   0x64014285
64013a2c:	pop    ecx
64013a2d:	mov    DWORD PTR [esi],eax
64013a2f:	jmp    0x64013a90
64013a31:	test   edi,edi
64013a33:	jne    0x64013abc
64013a39:	call   0x640142c0
64013a3e:	cmp    DWORD PTR [ebp-0x20],edi
64013a41:	je     0x64013aab
64013a43:	mov    DWORD PTR [eax],0xc
64013a49:	jmp    0x64013abc
64013a4b:	test   esi,esi
64013a4d:	jne    0x64013a50
64013a4f:	inc    esi
64013a50:	push   esi
64013a51:	push   ebx
64013a52:	push   0x0
64013a54:	push   DWORD PTR ds:0x6402da8c
64013a5a:	call   DWORD PTR ds:0x640240fc
64013a60:	mov    edi,eax
64013a62:	test   edi,edi
64013a64:	jne    0x64013abc
64013a66:	cmp    DWORD PTR ds:0x6402df04,eax
64013a6c:	je     0x64013aa2
64013a6e:	push   esi
64013a6f:	call   0x6401493b
64013a74:	pop    ecx
64013a75:	test   eax,eax
64013a77:	je     0x64013a98
64013a79:	cmp    esi,0xffffffe0
64013a7c:	jbe    0x64013a4b
64013a7e:	push   esi
64013a7f:	call   0x6401493b
64013a84:	pop    ecx
64013a85:	call   0x640142c0
64013a8a:	mov    DWORD PTR [eax],0xc
64013a90:	xor    eax,eax
64013a92:	call   0x64013b05
64013a97:	ret    
64013a98:	call   0x640142c0
64013a9d:	jmp    0x64013a1e
64013aa2:	test   edi,edi
64013aa4:	jne    0x64013abc
64013aa6:	call   0x640142c0
64013aab:	mov    esi,eax
64013aad:	call   DWORD PTR ds:0x64024044
64013ab3:	push   eax
64013ab4:	call   0x64014285
64013ab9:	mov    DWORD PTR [esi],eax
64013abb:	pop    ecx
64013abc:	mov    eax,edi
64013abe:	jmp    0x64013a92
64013ac0:	push   0x64013b20
64013ac5:	push   DWORD PTR fs:0x0
64013acc:	mov    eax,DWORD PTR [esp+0x10]
64013ad0:	mov    DWORD PTR [esp+0x10],ebp
64013ad4:	lea    ebp,[esp+0x10]
64013ad8:	sub    esp,eax
64013ada:	push   ebx
64013adb:	push   esi
64013adc:	push   edi
64013add:	mov    eax,ds:0x6402c09c
64013ae2:	xor    DWORD PTR [ebp-0x4],eax
64013ae5:	xor    eax,ebp
64013ae7:	push   eax
64013ae8:	mov    DWORD PTR [ebp-0x18],esp
64013aeb:	push   DWORD PTR [ebp-0x8]
64013aee:	mov    eax,DWORD PTR [ebp-0x4]
64013af1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013af8:	mov    DWORD PTR [ebp-0x8],eax
64013afb:	lea    eax,[ebp-0x10]
64013afe:	mov    fs:0x0,eax
64013b04:	ret    
64013b05:	mov    ecx,DWORD PTR [ebp-0x10]
64013b08:	mov    DWORD PTR fs:0x0,ecx
64013b0f:	pop    ecx
64013b10:	pop    edi
64013b11:	pop    edi
64013b12:	pop    esi
64013b13:	pop    ebx
64013b14:	mov    esp,ebp
64013b16:	pop    ebp
64013b17:	push   ecx
64013b18:	ret    
64013b19:	int3   
64013b1a:	int3   
64013b1b:	int3   
64013b1c:	int3   
64013b1d:	int3   
64013b1e:	int3   
64013b1f:	int3   
64013b20:	sub    esp,0x14
64013b23:	push   ebx
64013b24:	mov    ebx,DWORD PTR [esp+0x20]
64013b28:	push   ebp
64013b29:	push   esi
64013b2a:	mov    esi,DWORD PTR [ebx+0x8]
64013b2d:	xor    esi,DWORD PTR ds:0x6402c09c
64013b33:	push   edi
64013b34:	mov    eax,DWORD PTR [esi]
64013b36:	cmp    eax,0xfffffffe
64013b39:	mov    BYTE PTR [esp+0x13],0x0
64013b3e:	mov    DWORD PTR [esp+0x18],0x1
64013b46:	lea    edi,[ebx+0x10]
64013b49:	je     0x64013b58
64013b4b:	mov    ecx,DWORD PTR [esi+0x4]
64013b4e:	add    ecx,edi
64013b50:	xor    ecx,DWORD PTR [eax+edi*1]
64013b53:	call   0x6401257c
64013b58:	mov    ecx,DWORD PTR [esi+0xc]
64013b5b:	mov    eax,DWORD PTR [esi+0x8]
64013b5e:	add    ecx,edi
64013b60:	xor    ecx,DWORD PTR [eax+edi*1]
64013b63:	call   0x6401257c
64013b68:	mov    eax,DWORD PTR [esp+0x28]
64013b6c:	test   BYTE PTR [eax+0x4],0x66
64013b70:	jne    0x64013c95
64013b76:	mov    ebp,DWORD PTR [ebx+0xc]
64013b79:	cmp    ebp,0xfffffffe
64013b7c:	mov    ecx,DWORD PTR [esp+0x30]
64013b80:	lea    edx,[esp+0x1c]
64013b84:	mov    DWORD PTR [esp+0x1c],eax
64013b88:	mov    DWORD PTR [esp+0x20],ecx
64013b8c:	mov    DWORD PTR [ebx-0x4],edx
64013b8f:	je     0x64013bef
64013b91:	lea    eax,[ebp+ebp*2+0x0]
64013b95:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
64013b99:	test   ecx,ecx
64013b9b:	lea    ebx,[esi+eax*4+0x10]
64013b9f:	mov    eax,DWORD PTR [ebx]
64013ba1:	mov    DWORD PTR [esp+0x14],eax
64013ba5:	je     0x64013bbd
64013ba7:	mov    edx,edi
64013ba9:	call   0x6401aa2a
64013bae:	test   eax,eax
64013bb0:	mov    BYTE PTR [esp+0x13],0x1
64013bb5:	jl     0x64013bfb
64013bb7:	jg     0x64013c05
64013bb9:	mov    eax,DWORD PTR [esp+0x14]
64013bbd:	cmp    eax,0xfffffffe
64013bc0:	mov    ebp,eax
64013bc2:	jne    0x64013b91
64013bc4:	cmp    BYTE PTR [esp+0x13],0x0
64013bc9:	je     0x64013bef
64013bcb:	mov    eax,DWORD PTR [esi]
64013bcd:	cmp    eax,0xfffffffe
64013bd0:	je     0x64013bdf
64013bd2:	mov    ecx,DWORD PTR [esi+0x4]
64013bd5:	add    ecx,edi
64013bd7:	xor    ecx,DWORD PTR [eax+edi*1]
64013bda:	call   0x6401257c
64013bdf:	mov    ecx,DWORD PTR [esi+0xc]
64013be2:	mov    eax,DWORD PTR [esi+0x8]
64013be5:	add    ecx,edi
64013be7:	xor    ecx,DWORD PTR [eax+edi*1]
64013bea:	call   0x6401257c
64013bef:	mov    eax,DWORD PTR [esp+0x18]
64013bf3:	pop    edi
64013bf4:	pop    esi
64013bf5:	pop    ebp
64013bf6:	pop    ebx
64013bf7:	add    esp,0x14
64013bfa:	ret    
64013bfb:	mov    DWORD PTR [esp+0x18],0x0
64013c03:	jmp    0x64013bcb
64013c05:	mov    ecx,DWORD PTR [esp+0x28]
64013c09:	cmp    DWORD PTR [ecx],0xe06d7363
64013c0f:	jne    0x64013c3b
64013c11:	cmp    DWORD PTR ds:0x64024c00,0x0
64013c18:	je     0x64013c3b
64013c1a:	push   0x64024c00
64013c1f:	call   0x6401ab10
64013c24:	add    esp,0x4
64013c27:	test   eax,eax
64013c29:	je     0x64013c3b
64013c2b:	mov    edx,DWORD PTR [esp+0x28]
64013c2f:	push   0x1
64013c31:	push   edx
64013c32:	call   DWORD PTR ds:0x64024c00
64013c38:	add    esp,0x8
64013c3b:	mov    ecx,DWORD PTR [esp+0x2c]
64013c3f:	call   0x6401aa5a
64013c44:	mov    eax,DWORD PTR [esp+0x2c]
64013c48:	cmp    DWORD PTR [eax+0xc],ebp
64013c4b:	je     0x64013c60
64013c4d:	push   0x6402c09c
64013c52:	push   edi
64013c53:	mov    edx,ebp
64013c55:	mov    ecx,eax
64013c57:	call   0x6401aa74
64013c5c:	mov    eax,DWORD PTR [esp+0x2c]
64013c60:	mov    ecx,DWORD PTR [esp+0x14]
64013c64:	mov    DWORD PTR [eax+0xc],ecx
64013c67:	mov    eax,DWORD PTR [esi]
64013c69:	cmp    eax,0xfffffffe
64013c6c:	je     0x64013c7b
64013c6e:	mov    ecx,DWORD PTR [esi+0x4]
64013c71:	add    ecx,edi
64013c73:	xor    ecx,DWORD PTR [eax+edi*1]
64013c76:	call   0x6401257c
64013c7b:	mov    ecx,DWORD PTR [esi+0xc]
64013c7e:	mov    edx,DWORD PTR [esi+0x8]
64013c81:	add    ecx,edi
64013c83:	xor    ecx,DWORD PTR [edx+edi*1]
64013c86:	call   0x6401257c
64013c8b:	mov    ecx,DWORD PTR [ebx+0x8]
64013c8e:	mov    edx,edi
64013c90:	jmp    0x6401aa41
64013c95:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
64013c99:	je     0x64013bef
64013c9f:	push   0x6402c09c
64013ca4:	push   edi
64013ca5:	mov    ecx,ebx
64013ca7:	mov    edx,0xfffffffe
64013cac:	call   0x6401aa74
64013cb1:	jmp    0x64013bcb
64013cb6:	int3   
64013cb7:	int3   
64013cb8:	int3   
64013cb9:	int3   
64013cba:	int3   
64013cbb:	int3   
64013cbc:	int3   
64013cbd:	int3   
64013cbe:	int3   
64013cbf:	int3   
64013cc0:	mov    ecx,DWORD PTR [esp+0x4]
64013cc4:	test   ecx,0x3
64013cca:	je     0x64013cf0
64013ccc:	mov    al,BYTE PTR [ecx]
64013cce:	add    ecx,0x1
64013cd1:	test   al,al
64013cd3:	je     0x64013d23
64013cd5:	test   ecx,0x3
64013cdb:	jne    0x64013ccc
64013cdd:	add    eax,0x0
64013ce2:	lea    esp,[esp+0x0]
64013ce9:	lea    esp,[esp+0x0]
64013cf0:	mov    eax,DWORD PTR [ecx]
64013cf2:	mov    edx,0x7efefeff
64013cf7:	add    edx,eax
64013cf9:	xor    eax,0xffffffff
64013cfc:	xor    eax,edx
64013cfe:	add    ecx,0x4
64013d01:	test   eax,0x81010100
64013d06:	je     0x64013cf0
64013d08:	mov    eax,DWORD PTR [ecx-0x4]
64013d0b:	test   al,al
64013d0d:	je     0x64013d41
64013d0f:	test   ah,ah
64013d11:	je     0x64013d37
64013d13:	test   eax,0xff0000
64013d18:	je     0x64013d2d
64013d1a:	test   eax,0xff000000
64013d1f:	je     0x64013d23
64013d21:	jmp    0x64013cf0
64013d23:	lea    eax,[ecx-0x1]
64013d26:	mov    ecx,DWORD PTR [esp+0x4]
64013d2a:	sub    eax,ecx
64013d2c:	ret    
64013d2d:	lea    eax,[ecx-0x2]
64013d30:	mov    ecx,DWORD PTR [esp+0x4]
64013d34:	sub    eax,ecx
64013d36:	ret    
64013d37:	lea    eax,[ecx-0x3]
64013d3a:	mov    ecx,DWORD PTR [esp+0x4]
64013d3e:	sub    eax,ecx
64013d40:	ret    
64013d41:	lea    eax,[ecx-0x4]
64013d44:	mov    ecx,DWORD PTR [esp+0x4]
64013d48:	sub    eax,ecx
64013d4a:	ret    
64013d4b:	push   eax
64013d4c:	push   DWORD PTR fs:0x0
64013d53:	lea    eax,[esp+0xc]
64013d57:	sub    esp,DWORD PTR [esp+0xc]
64013d5b:	push   ebx
64013d5c:	push   esi
64013d5d:	push   edi
64013d5e:	mov    DWORD PTR [eax],ebp
64013d60:	mov    ebp,eax
64013d62:	mov    eax,ds:0x6402c09c
64013d67:	xor    eax,ebp
64013d69:	push   eax
64013d6a:	push   DWORD PTR [ebp-0x4]
64013d6d:	mov    DWORD PTR [ebp-0x4],0xffffffff
64013d74:	lea    eax,[ebp-0xc]
64013d77:	mov    fs:0x0,eax
64013d7d:	ret    
64013d7e:	push   eax
64013d7f:	push   DWORD PTR fs:0x0
64013d86:	lea    eax,[esp+0xc]
64013d8a:	sub    esp,DWORD PTR [esp+0xc]
64013d8e:	push   ebx
64013d8f:	push   esi
64013d90:	push   edi
64013d91:	mov    DWORD PTR [eax],ebp
64013d93:	mov    ebp,eax
64013d95:	mov    eax,ds:0x6402c09c
64013d9a:	xor    eax,ebp
64013d9c:	push   eax
64013d9d:	mov    DWORD PTR [ebp-0x10],esp
64013da0:	push   DWORD PTR [ebp-0x4]
64013da3:	mov    DWORD PTR [ebp-0x4],0xffffffff
64013daa:	lea    eax,[ebp-0xc]
64013dad:	mov    fs:0x0,eax
64013db3:	ret    
64013db4:	push   0xc
64013db6:	push   0x64029748
64013dbb:	call   0x64013ac0
64013dc0:	push   0xe
64013dc2:	call   0x64019ac5
64013dc7:	pop    ecx
64013dc8:	and    DWORD PTR [ebp-0x4],0x0
64013dcc:	mov    esi,DWORD PTR [ebp+0x8]
64013dcf:	mov    ecx,DWORD PTR [esi+0x4]
64013dd2:	test   ecx,ecx
64013dd4:	je     0x64013e05
64013dd6:	mov    eax,ds:0x6402d5a8
64013ddb:	mov    edx,0x6402d5a4
64013de0:	mov    DWORD PTR [ebp-0x1c],eax
64013de3:	test   eax,eax
64013de5:	je     0x64013df8
64013de7:	cmp    DWORD PTR [eax],ecx
64013de9:	jne    0x64013e17
64013deb:	mov    ecx,DWORD PTR [eax+0x4]
64013dee:	mov    DWORD PTR [edx+0x4],ecx
64013df1:	push   eax
64013df2:	call   0x64013396
64013df7:	pop    ecx
64013df8:	push   DWORD PTR [esi+0x4]
64013dfb:	call   0x64013396
64013e00:	pop    ecx
64013e01:	and    DWORD PTR [esi+0x4],0x0
64013e05:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013e0c:	call   0x64013e1b
64013e11:	call   0x64013b05
64013e16:	ret    
64013e17:	mov    edx,eax
64013e19:	jmp    0x64013de0
64013e1b:	push   0xe
64013e1d:	call   0x640199ed
64013e22:	pop    ecx
64013e23:	ret    
64013e24:	int3   
64013e25:	int3   
64013e26:	int3   
64013e27:	int3   
64013e28:	int3   
64013e29:	int3   
64013e2a:	int3   
64013e2b:	int3   
64013e2c:	int3   
64013e2d:	int3   
64013e2e:	int3   
64013e2f:	int3   
64013e30:	mov    edx,DWORD PTR [esp+0x4]
64013e34:	mov    ecx,DWORD PTR [esp+0x8]
64013e38:	test   edx,0x3
64013e3e:	jne    0x64013e7c
64013e40:	mov    eax,DWORD PTR [edx]
64013e42:	cmp    al,BYTE PTR [ecx]
64013e44:	jne    0x64013e74
64013e46:	or     al,al
64013e48:	je     0x64013e70
64013e4a:	cmp    ah,BYTE PTR [ecx+0x1]
64013e4d:	jne    0x64013e74
64013e4f:	or     ah,ah
64013e51:	je     0x64013e70
64013e53:	shr    eax,0x10
64013e56:	cmp    al,BYTE PTR [ecx+0x2]
64013e59:	jne    0x64013e74
64013e5b:	or     al,al
64013e5d:	je     0x64013e70
64013e5f:	cmp    ah,BYTE PTR [ecx+0x3]
64013e62:	jne    0x64013e74
64013e64:	add    ecx,0x4
64013e67:	add    edx,0x4
64013e6a:	or     ah,ah
64013e6c:	jne    0x64013e40
64013e6e:	mov    edi,edi
64013e70:	xor    eax,eax
64013e72:	ret    
64013e73:	nop
64013e74:	sbb    eax,eax
64013e76:	shl    eax,1
64013e78:	add    eax,0x1
64013e7b:	ret    
64013e7c:	test   edx,0x1
64013e82:	je     0x64013e9c
64013e84:	mov    al,BYTE PTR [edx]
64013e86:	add    edx,0x1
64013e89:	cmp    al,BYTE PTR [ecx]
64013e8b:	jne    0x64013e74
64013e8d:	add    ecx,0x1
64013e90:	or     al,al
64013e92:	je     0x64013e70
64013e94:	test   edx,0x2
64013e9a:	je     0x64013e40
64013e9c:	mov    ax,WORD PTR [edx]
64013e9f:	add    edx,0x2
64013ea2:	cmp    al,BYTE PTR [ecx]
64013ea4:	jne    0x64013e74
64013ea6:	or     al,al
64013ea8:	je     0x64013e70
64013eaa:	cmp    ah,BYTE PTR [ecx+0x1]
64013ead:	jne    0x64013e74
64013eaf:	or     ah,ah
64013eb1:	je     0x64013e70
64013eb3:	add    ecx,0x2
64013eb6:	jmp    0x64013e40
64013eb8:	mov    ecx,DWORD PTR [esp+0x4]
64013ebc:	push   ebx
64013ebd:	xor    ebx,ebx
64013ebf:	cmp    ecx,ebx
64013ec1:	push   esi
64013ec2:	push   edi
64013ec3:	je     0x64013ecd
64013ec5:	mov    edi,DWORD PTR [esp+0x14]
64013ec9:	cmp    edi,ebx
64013ecb:	ja     0x64013ee8
64013ecd:	call   0x640142c0
64013ed2:	push   0x16
64013ed4:	pop    esi
64013ed5:	mov    DWORD PTR [eax],esi
64013ed7:	push   ebx
64013ed8:	push   ebx
64013ed9:	push   ebx
64013eda:	push   ebx
64013edb:	push   ebx
64013edc:	call   0x640120b4
64013ee1:	add    esp,0x14
64013ee4:	mov    eax,esi
64013ee6:	jmp    0x64013f19
64013ee8:	mov    esi,DWORD PTR [esp+0x18]
64013eec:	cmp    esi,ebx
64013eee:	jne    0x64013ef4
64013ef0:	mov    BYTE PTR [ecx],bl
64013ef2:	jmp    0x64013ecd
64013ef4:	mov    edx,ecx
64013ef6:	mov    al,BYTE PTR [esi]
64013ef8:	mov    BYTE PTR [edx],al
64013efa:	inc    edx
64013efb:	inc    esi
64013efc:	cmp    al,bl
64013efe:	je     0x64013f03
64013f00:	dec    edi
64013f01:	jne    0x64013ef6
64013f03:	cmp    edi,ebx
64013f05:	jne    0x64013f17
64013f07:	mov    BYTE PTR [ecx],bl
64013f09:	call   0x640142c0
64013f0e:	push   0x22
64013f10:	pop    ecx
64013f11:	mov    DWORD PTR [eax],ecx
64013f13:	mov    esi,ecx
64013f15:	jmp    0x64013ed7
64013f17:	xor    eax,eax
64013f19:	pop    edi
64013f1a:	pop    esi
64013f1b:	pop    ebx
64013f1c:	ret    
64013f1d:	int3   
64013f1e:	int3   
64013f1f:	int3   
64013f20:	push   ebp
64013f21:	mov    ebp,esp
64013f23:	push   edi
64013f24:	push   esi
64013f25:	mov    esi,DWORD PTR [ebp+0xc]
64013f28:	mov    ecx,DWORD PTR [ebp+0x10]
64013f2b:	mov    edi,DWORD PTR [ebp+0x8]
64013f2e:	mov    eax,ecx
64013f30:	mov    edx,ecx
64013f32:	add    eax,esi
64013f34:	cmp    edi,esi
64013f36:	jbe    0x64013f40
64013f38:	cmp    edi,eax
64013f3a:	jb     0x640140e4
64013f40:	cmp    ecx,0x100
64013f46:	jb     0x64013f67
64013f48:	cmp    DWORD PTR ds:0x64031564,0x0
64013f4f:	je     0x64013f67
64013f51:	push   edi
64013f52:	push   esi
64013f53:	and    edi,0xf
64013f56:	and    esi,0xf
64013f59:	cmp    edi,esi
64013f5b:	pop    esi
64013f5c:	pop    edi
64013f5d:	jne    0x64013f67
64013f5f:	pop    esi
64013f60:	pop    edi
64013f61:	pop    ebp
64013f62:	jmp    0x6401a855
64013f67:	test   edi,0x3
64013f6d:	jne    0x64013f84
64013f6f:	shr    ecx,0x2
64013f72:	and    edx,0x3
64013f75:	cmp    ecx,0x8
64013f78:	jb     0x64013fa4
64013f7a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013f7c:	jmp    DWORD PTR [edx*4+0x64014094]
64013f83:	nop
64013f84:	mov    eax,edi
64013f86:	mov    edx,0x3
64013f8b:	sub    ecx,0x4
64013f8e:	jb     0x64013f9c
64013f90:	and    eax,0x3
64013f93:	add    ecx,eax
64013f95:	jmp    DWORD PTR [eax*4+0x64013fa8]
64013f9c:	jmp    DWORD PTR [ecx*4+0x640140a4]
64013fa3:	nop
64013fa4:	jmp    DWORD PTR [ecx*4+0x64014028]
64013fab:	nop
64013fac:	mov    eax,0xe464013f
64013fb1:	aas    
64013fb2:	add    DWORD PTR [eax+ecx*1+0x40],esp
64013fb6:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
64013fba:	mov    al,BYTE PTR [esi]
64013fbc:	mov    BYTE PTR [edi],al
64013fbe:	mov    al,BYTE PTR [esi+0x1]
64013fc1:	mov    BYTE PTR [edi+0x1],al
64013fc4:	mov    al,BYTE PTR [esi+0x2]
64013fc7:	shr    ecx,0x2
64013fca:	mov    BYTE PTR [edi+0x2],al
64013fcd:	add    esi,0x3
64013fd0:	add    edi,0x3
64013fd3:	cmp    ecx,0x8
64013fd6:	jb     0x64013fa4
64013fd8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013fda:	jmp    DWORD PTR [edx*4+0x64014094]
64013fe1:	lea    ecx,[ecx+0x0]
64013fe4:	and    edx,ecx
64013fe6:	mov    al,BYTE PTR [esi]
64013fe8:	mov    BYTE PTR [edi],al
64013fea:	mov    al,BYTE PTR [esi+0x1]
64013fed:	shr    ecx,0x2
64013ff0:	mov    BYTE PTR [edi+0x1],al
64013ff3:	add    esi,0x2
64013ff6:	add    edi,0x2
64013ff9:	cmp    ecx,0x8
64013ffc:	jb     0x64013fa4
64013ffe:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014000:	jmp    DWORD PTR [edx*4+0x64014094]
64014007:	nop
64014008:	and    edx,ecx
6401400a:	mov    al,BYTE PTR [esi]
6401400c:	mov    BYTE PTR [edi],al
6401400e:	add    esi,0x1
64014011:	shr    ecx,0x2
64014014:	add    edi,0x1
64014017:	cmp    ecx,0x8
6401401a:	jb     0x64013fa4
6401401c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401401e:	jmp    DWORD PTR [edx*4+0x64014094]
64014025:	lea    ecx,[ecx+0x0]
64014028:	mov    eax,DWORD PTR [eax+0x1]
6401402b:	fs js  0x6401406e
6401402e:	add    DWORD PTR [eax+esi*2+0x40],esp
64014032:	add    DWORD PTR [eax+ebp*2+0x40],esp
64014036:	add    DWORD PTR [eax+eiz*2+0x40],esp
6401403a:	add    DWORD PTR [eax+ebx*2+0x40],esp
6401403e:	add    DWORD PTR [eax+edx*2+0x40],esp
64014042:	add    DWORD PTR [eax+ecx*2+0x40],esp
64014046:	add    DWORD PTR [ebx+ecx*4+0x44],esp
6401404a:	mov    fs,esp
6401404c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64014050:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64014054:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64014058:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
6401405c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64014060:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64014064:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64014068:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
6401406c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64014070:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64014074:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64014078:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
6401407c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64014080:	lea    eax,[ecx*4+0x0]
64014087:	add    esi,eax
64014089:	add    edi,eax
6401408b:	jmp    DWORD PTR [edx*4+0x64014094]
64014092:	mov    edi,edi
64014094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
64014095:	inc    eax
64014096:	add    DWORD PTR [esp+ebp*4+0x40],esp
6401409a:	add    DWORD PTR [eax+edi*4+0x40],esp
6401409e:	add    DWORD PTR [esp+ecx*8+0x40],esp
640140a2:	add    DWORD PTR [ebx+ecx*4+0x45],esp
640140a6:	or     BYTE PTR [esi+0x5f],bl
640140a9:	leave  
640140aa:	ret    
640140ab:	nop
640140ac:	mov    al,BYTE PTR [esi]
640140ae:	mov    BYTE PTR [edi],al
640140b0:	mov    eax,DWORD PTR [ebp+0x8]
640140b3:	pop    esi
640140b4:	pop    edi
640140b5:	leave  
640140b6:	ret    
640140b7:	nop
640140b8:	mov    al,BYTE PTR [esi]
640140ba:	mov    BYTE PTR [edi],al
640140bc:	mov    al,BYTE PTR [esi+0x1]
640140bf:	mov    BYTE PTR [edi+0x1],al
640140c2:	mov    eax,DWORD PTR [ebp+0x8]
640140c5:	pop    esi
640140c6:	pop    edi
640140c7:	leave  
640140c8:	ret    
640140c9:	lea    ecx,[ecx+0x0]
640140cc:	mov    al,BYTE PTR [esi]
640140ce:	mov    BYTE PTR [edi],al
640140d0:	mov    al,BYTE PTR [esi+0x1]
640140d3:	mov    BYTE PTR [edi+0x1],al
640140d6:	mov    al,BYTE PTR [esi+0x2]
640140d9:	mov    BYTE PTR [edi+0x2],al
640140dc:	mov    eax,DWORD PTR [ebp+0x8]
640140df:	pop    esi
640140e0:	pop    edi
640140e1:	leave  
640140e2:	ret    
640140e3:	nop
640140e4:	lea    esi,[ecx+esi*1-0x4]
640140e8:	lea    edi,[ecx+edi*1-0x4]
640140ec:	test   edi,0x3
640140f2:	jne    0x64014118
640140f4:	shr    ecx,0x2
640140f7:	and    edx,0x3
640140fa:	cmp    ecx,0x8
640140fd:	jb     0x6401410c
640140ff:	std    
64014100:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014102:	cld    
64014103:	jmp    DWORD PTR [edx*4+0x64014230]
6401410a:	mov    edi,edi
6401410c:	neg    ecx
6401410e:	jmp    DWORD PTR [ecx*4+0x640141e0]
64014115:	lea    ecx,[ecx+0x0]
64014118:	mov    eax,edi
6401411a:	mov    edx,0x3
6401411f:	cmp    ecx,0x4
64014122:	jb     0x64014130
64014124:	and    eax,0x3
64014127:	sub    ecx,eax
64014129:	jmp    DWORD PTR [eax*4+0x64014134]
64014130:	jmp    DWORD PTR [ecx*4+0x64014230]
64014137:	nop
64014138:	inc    esp
64014139:	inc    ecx
6401413a:	add    DWORD PTR [eax+ebp*2+0x41],esp
6401413e:	add    DWORD PTR [eax+edx*4+0x41],esp
64014142:	add    DWORD PTR [edx+ecx*4+0x46],esp
64014146:	add    esp,DWORD PTR [ebx]
64014148:	ror    DWORD PTR [eax-0x117cfcb9],1
6401414e:	add    ecx,eax
64014150:	jmp    0x65f0c457
64014155:	cmp    ecx,0x8
64014158:	jb     0x6401410c
6401415a:	std    
6401415b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401415d:	cld    
6401415e:	jmp    DWORD PTR [edx*4+0x64014230]
64014165:	lea    ecx,[ecx+0x0]
64014168:	mov    al,BYTE PTR [esi+0x3]
6401416b:	and    edx,ecx
6401416d:	mov    BYTE PTR [edi+0x3],al
64014170:	mov    al,BYTE PTR [esi+0x2]
64014173:	shr    ecx,0x2
64014176:	mov    BYTE PTR [edi+0x2],al
64014179:	sub    esi,0x2
6401417c:	sub    edi,0x2
6401417f:	cmp    ecx,0x8
64014182:	jb     0x6401410c
64014184:	std    
64014185:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014187:	cld    
64014188:	jmp    DWORD PTR [edx*4+0x64014230]
6401418f:	nop
64014190:	mov    al,BYTE PTR [esi+0x3]
64014193:	and    edx,ecx
64014195:	mov    BYTE PTR [edi+0x3],al
64014198:	mov    al,BYTE PTR [esi+0x2]
6401419b:	mov    BYTE PTR [edi+0x2],al
6401419e:	mov    al,BYTE PTR [esi+0x1]
640141a1:	shr    ecx,0x2
640141a4:	mov    BYTE PTR [edi+0x1],al
640141a7:	sub    esi,0x3
640141aa:	sub    edi,0x3
640141ad:	cmp    ecx,0x8
640141b0:	jb     0x6401410c
640141b6:	std    
640141b7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640141b9:	cld    
640141ba:	jmp    DWORD PTR [edx*4+0x64014230]
640141c1:	lea    ecx,[ecx+0x0]
640141c4:	in     al,0x41
640141c6:	add    DWORD PTR [esp+ebp*8+0x41],esp
640141ca:	add    DWORD PTR [esp+esi*8+0x41],esp
640141ce:	add    DWORD PTR [esp+edi*8+0x41],esp
640141d2:	add    DWORD PTR [esp+eax*1+0x42],esp
640141d6:	add    DWORD PTR [esp+ecx*1+0x42],esp
640141da:	add    DWORD PTR [esp+edx*1+0x42],esp
640141de:	add    DWORD PTR [edi+eiz*1+0x42],esp
640141e2:	add    DWORD PTR [ebx+ecx*4+0x44],esp
640141e6:	mov    ds,WORD PTR [ecx+ecx*4]
640141e9:	inc    esp
640141ea:	(bad)  
640141eb:	sbb    al,0x8b
640141ed:	inc    esp
640141ee:	mov    ds,WORD PTR [eax]
640141f0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
640141f4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
640141f8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
640141fc:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64014200:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64014204:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64014208:	mov    DWORD PTR [edi+ecx*4+0xc],eax
6401420c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64014210:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64014214:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64014218:	mov    DWORD PTR [edi+ecx*4+0x4],eax
6401421c:	lea    eax,[ecx*4+0x0]
64014223:	add    esi,eax
64014225:	add    edi,eax
64014227:	jmp    DWORD PTR [edx*4+0x64014230]
6401422e:	mov    edi,edi
64014230:	inc    eax
64014231:	inc    edx
64014232:	add    DWORD PTR [eax+ecx*2+0x42],esp
64014236:	add    DWORD PTR [eax+ebx*2+0x42],esp
6401423a:	add    DWORD PTR [esp+ebp*2+0x42],esp
6401423e:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64014242:	or     BYTE PTR [esi+0x5f],bl
64014245:	leave  
64014246:	ret    
64014247:	nop
64014248:	mov    al,BYTE PTR [esi+0x3]
6401424b:	mov    BYTE PTR [edi+0x3],al
6401424e:	mov    eax,DWORD PTR [ebp+0x8]
64014251:	pop    esi
64014252:	pop    edi
64014253:	leave  
64014254:	ret    
64014255:	lea    ecx,[ecx+0x0]
64014258:	mov    al,BYTE PTR [esi+0x3]
6401425b:	mov    BYTE PTR [edi+0x3],al
6401425e:	mov    al,BYTE PTR [esi+0x2]
64014261:	mov    BYTE PTR [edi+0x2],al
64014264:	mov    eax,DWORD PTR [ebp+0x8]
64014267:	pop    esi
64014268:	pop    edi
64014269:	leave  
6401426a:	ret    
6401426b:	nop
6401426c:	mov    al,BYTE PTR [esi+0x3]
6401426f:	mov    BYTE PTR [edi+0x3],al
64014272:	mov    al,BYTE PTR [esi+0x2]
64014275:	mov    BYTE PTR [edi+0x2],al
64014278:	mov    al,BYTE PTR [esi+0x1]
6401427b:	mov    BYTE PTR [edi+0x1],al
6401427e:	mov    eax,DWORD PTR [ebp+0x8]
64014281:	pop    esi
64014282:	pop    edi
64014283:	leave  
64014284:	ret    
64014285:	mov    eax,DWORD PTR [esp+0x4]
64014289:	xor    ecx,ecx
6401428b:	cmp    eax,DWORD PTR [ecx*8+0x6402c0c0]
64014292:	je     0x640142a6
64014294:	inc    ecx
64014295:	cmp    ecx,0x2d
64014298:	jb     0x6401428b
6401429a:	lea    ecx,[eax-0x13]
6401429d:	cmp    ecx,0x11
640142a0:	ja     0x640142ae
640142a2:	push   0xd
640142a4:	pop    eax
640142a5:	ret    
640142a6:	mov    eax,DWORD PTR [ecx*8+0x6402c0c4]
640142ad:	ret    
640142ae:	add    eax,0xffffff44
640142b3:	push   0xe
640142b5:	pop    ecx
640142b6:	cmp    ecx,eax
640142b8:	sbb    eax,eax
640142ba:	and    eax,ecx
640142bc:	add    eax,0x8
640142bf:	ret    
640142c0:	call   0x64014594
640142c5:	test   eax,eax
640142c7:	jne    0x640142cf
640142c9:	mov    eax,0x6402c228
640142ce:	ret    
640142cf:	add    eax,0x8
640142d2:	ret    
640142d3:	call   0x64014594
640142d8:	test   eax,eax
640142da:	jne    0x640142e2
640142dc:	mov    eax,0x6402c22c
640142e1:	ret    
640142e2:	add    eax,0xc
640142e5:	ret    
640142e6:	push   esi
640142e7:	call   0x640142d3
640142ec:	mov    ecx,DWORD PTR [esp+0x8]
640142f0:	push   ecx
640142f1:	mov    DWORD PTR [eax],ecx
640142f3:	call   0x64014285
640142f8:	pop    ecx
640142f9:	mov    esi,eax
640142fb:	call   0x640142c0
64014300:	mov    DWORD PTR [eax],esi
64014302:	pop    esi
64014303:	ret    
64014304:	and    DWORD PTR ds:0x6403157c,0x0
6401430b:	ret    
6401430c:	push   ebp
6401430d:	mov    ebp,esp
6401430f:	push   ecx
64014310:	push   ecx
64014311:	push   ebx
64014312:	push   esi
64014313:	xor    esi,esi
64014315:	lea    eax,[ebp-0x4]
64014318:	inc    esi
64014319:	xor    ebx,ebx
6401431b:	push   eax
6401431c:	mov    DWORD PTR [ebp-0x8],esi
6401431f:	mov    DWORD PTR [ebp-0x4],ebx
64014322:	call   0x64015a26
64014327:	cmp    DWORD PTR [ebp-0x4],0x5
6401432b:	pop    ecx
6401432c:	jle    0x64014332
6401432e:	mov    eax,esi
64014330:	jmp    0x64014374
64014332:	push   edi
64014333:	push   ebx
64014334:	call   DWORD PTR ds:0x64024124
6401433a:	mov    esi,DWORD PTR [eax+0x3c]
6401433d:	add    esi,eax
6401433f:	cmp    WORD PTR [esi+0x6],bx
64014343:	movzx  eax,WORD PTR [esi+0x14]
64014347:	lea    edi,[eax+esi*1+0x18]
6401434b:	jbe    0x64014370
6401434d:	push   edi
6401434e:	push   0x64024b9c
64014353:	call   0x64013e30
64014358:	test   eax,eax
6401435a:	pop    ecx
6401435b:	pop    ecx
6401435c:	je     0x6401436c
6401435e:	movzx  eax,WORD PTR [esi+0x6]
64014362:	inc    ebx
64014363:	add    edi,0x28
64014366:	cmp    ebx,eax
64014368:	jb     0x6401434d
6401436a:	jmp    0x64014370
6401436c:	and    DWORD PTR [ebp-0x8],0x0
64014370:	mov    eax,DWORD PTR [ebp-0x8]
64014373:	pop    edi
64014374:	pop    esi
64014375:	pop    ebx
64014376:	leave  
64014377:	ret    
64014378:	push   esi
64014379:	push   DWORD PTR ds:0x6402c234
6401437f:	mov    esi,DWORD PTR ds:0x64024128
64014385:	call   esi
64014387:	test   eax,eax
64014389:	je     0x640143ac
6401438b:	mov    eax,ds:0x6402c230
64014390:	cmp    eax,0xffffffff
64014393:	je     0x640143ac
64014395:	push   eax
64014396:	push   DWORD PTR ds:0x6402c234
6401439c:	call   esi
6401439e:	call   eax
640143a0:	test   eax,eax
640143a2:	je     0x640143ac
640143a4:	mov    eax,DWORD PTR [eax+0x1f8]
640143aa:	jmp    0x640143d2
640143ac:	push   0x64024bb4
640143b1:	call   DWORD PTR ds:0x64024124
640143b7:	mov    esi,eax
640143b9:	test   esi,esi
640143bb:	je     0x640143e0
640143bd:	call   0x6401430c
640143c2:	test   eax,eax
640143c4:	je     0x640143e0
640143c6:	push   0x64024ba4
640143cb:	push   esi
640143cc:	call   DWORD PTR ds:0x64024014
640143d2:	test   eax,eax
640143d4:	je     0x640143e0
640143d6:	push   DWORD PTR [esp+0x8]
640143da:	call   eax
640143dc:	mov    DWORD PTR [esp+0x8],eax
640143e0:	mov    eax,DWORD PTR [esp+0x8]
640143e4:	pop    esi
640143e5:	ret    
640143e6:	push   0x0
640143e8:	call   0x64014378
640143ed:	pop    ecx
640143ee:	ret    
640143ef:	push   esi
640143f0:	push   DWORD PTR ds:0x6402c234
640143f6:	mov    esi,DWORD PTR ds:0x64024128
640143fc:	call   esi
640143fe:	test   eax,eax
64014400:	je     0x64014423
64014402:	mov    eax,ds:0x6402c230
64014407:	cmp    eax,0xffffffff
6401440a:	je     0x64014423
6401440c:	push   eax
6401440d:	push   DWORD PTR ds:0x6402c234
64014413:	call   esi
64014415:	call   eax
64014417:	test   eax,eax
64014419:	je     0x64014423
6401441b:	mov    eax,DWORD PTR [eax+0x1fc]
64014421:	jmp    0x64014449
64014423:	push   0x64024bb4
64014428:	call   DWORD PTR ds:0x64024124
6401442e:	mov    esi,eax
64014430:	test   esi,esi
64014432:	je     0x64014457
64014434:	call   0x6401430c
64014439:	test   eax,eax
6401443b:	je     0x64014457
6401443d:	push   0x64024bc4
64014442:	push   esi
64014443:	call   DWORD PTR ds:0x64024014
64014449:	test   eax,eax
6401444b:	je     0x64014457
6401444d:	push   DWORD PTR [esp+0x8]
64014451:	call   eax
64014453:	mov    DWORD PTR [esp+0x8],eax
64014457:	mov    eax,DWORD PTR [esp+0x8]
6401445b:	pop    esi
6401445c:	ret    
6401445d:	call   DWORD PTR ds:0x6402412c
64014463:	ret    0x4
64014466:	push   esi
64014467:	push   DWORD PTR ds:0x6402c234
6401446d:	call   DWORD PTR ds:0x64024128
64014473:	mov    esi,eax
64014475:	test   esi,esi
64014477:	jne    0x64014494
64014479:	push   DWORD PTR ds:0x6402d5b0
6401447f:	call   0x640143ef
64014484:	pop    ecx
64014485:	mov    esi,eax
64014487:	push   esi
64014488:	push   DWORD PTR ds:0x6402c234
6401448e:	call   DWORD PTR ds:0x64024130
64014494:	mov    eax,esi
64014496:	pop    esi
64014497:	ret    
64014498:	mov    eax,ds:0x6402c230
6401449d:	cmp    eax,0xffffffff
640144a0:	je     0x640144b8
640144a2:	push   eax
640144a3:	push   DWORD PTR ds:0x6402d5b8
640144a9:	call   0x640143ef
640144ae:	pop    ecx
640144af:	call   eax
640144b1:	or     DWORD PTR ds:0x6402c230,0xffffffff
640144b8:	mov    eax,ds:0x6402c234
640144bd:	cmp    eax,0xffffffff
640144c0:	je     0x640144d0
640144c2:	push   eax
640144c3:	call   DWORD PTR ds:0x64024134
640144c9:	or     DWORD PTR ds:0x6402c234,0xffffffff
640144d0:	jmp    0x64019998
640144d5:	push   0xc
640144d7:	push   0x64029768
640144dc:	call   0x64013ac0
640144e1:	push   0x64024bb4
640144e6:	call   DWORD PTR ds:0x64024124
640144ec:	mov    DWORD PTR [ebp-0x1c],eax
640144ef:	mov    esi,DWORD PTR [ebp+0x8]
640144f2:	mov    DWORD PTR [esi+0x5c],0x6402c8c8
640144f9:	xor    edi,edi
640144fb:	inc    edi
640144fc:	mov    DWORD PTR [esi+0x14],edi
640144ff:	test   eax,eax
64014501:	je     0x64014532
64014503:	call   0x6401430c
64014508:	test   eax,eax
6401450a:	je     0x64014532
6401450c:	push   0x64024ba4
64014511:	push   DWORD PTR [ebp-0x1c]
64014514:	mov    ebx,DWORD PTR ds:0x64024014
6401451a:	call   ebx
6401451c:	mov    DWORD PTR [esi+0x1f8],eax
64014522:	push   0x64024bc4
64014527:	push   DWORD PTR [ebp-0x1c]
6401452a:	call   ebx
6401452c:	mov    DWORD PTR [esi+0x1fc],eax
64014532:	mov    DWORD PTR [esi+0x70],edi
64014535:	mov    BYTE PTR [esi+0xc8],0x43
6401453c:	mov    BYTE PTR [esi+0x14b],0x43
64014543:	mov    eax,0x6402c268
64014548:	mov    DWORD PTR [esi+0x68],eax
6401454b:	push   eax
6401454c:	call   DWORD PTR ds:0x64024020
64014552:	push   0xc
64014554:	call   0x64019ac5
64014559:	pop    ecx
6401455a:	and    DWORD PTR [ebp-0x4],0x0
6401455e:	mov    eax,DWORD PTR [ebp+0xc]
64014561:	mov    DWORD PTR [esi+0x6c],eax
64014564:	test   eax,eax
64014566:	jne    0x64014570
64014568:	mov    eax,ds:0x6402c870
6401456d:	mov    DWORD PTR [esi+0x6c],eax
64014570:	push   DWORD PTR [esi+0x6c]
64014573:	call   0x6401643f
64014578:	pop    ecx
64014579:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014580:	call   0x6401458b
64014585:	call   0x64013b05
6401458a:	ret    
6401458b:	push   0xc
6401458d:	call   0x640199ed
64014592:	pop    ecx
64014593:	ret    
64014594:	push   esi
64014595:	push   edi
64014596:	call   DWORD PTR ds:0x64024044
6401459c:	push   DWORD PTR ds:0x6402c230
640145a2:	mov    edi,eax
640145a4:	call   0x64014466
640145a9:	call   eax
640145ab:	mov    esi,eax
640145ad:	test   esi,esi
640145af:	jne    0x640145ff
640145b1:	push   0x214
640145b6:	push   0x1
640145b8:	call   0x64015810
640145bd:	mov    esi,eax
640145bf:	test   esi,esi
640145c1:	pop    ecx
640145c2:	pop    ecx
640145c3:	je     0x640145ff
640145c5:	push   esi
640145c6:	push   DWORD PTR ds:0x6402c230
640145cc:	push   DWORD PTR ds:0x6402d5b4
640145d2:	call   0x640143ef
640145d7:	pop    ecx
640145d8:	call   eax
640145da:	test   eax,eax
640145dc:	je     0x640145f6
640145de:	push   0x0
640145e0:	push   esi
640145e1:	call   0x640144d5
640145e6:	pop    ecx
640145e7:	pop    ecx
640145e8:	call   DWORD PTR ds:0x6402411c
640145ee:	or     DWORD PTR [esi+0x4],0xffffffff
640145f2:	mov    DWORD PTR [esi],eax
640145f4:	jmp    0x640145ff
640145f6:	push   esi
640145f7:	call   0x64013396
640145fc:	pop    ecx
640145fd:	xor    esi,esi
640145ff:	push   edi
64014600:	call   DWORD PTR ds:0x6402405c
64014606:	pop    edi
64014607:	mov    eax,esi
64014609:	pop    esi
6401460a:	ret    
6401460b:	push   esi
6401460c:	call   0x64014594
64014611:	mov    esi,eax
64014613:	test   esi,esi
64014615:	jne    0x6401461f
64014617:	push   0x10
64014619:	call   0x64015946
6401461e:	pop    ecx
6401461f:	mov    eax,esi
64014621:	pop    esi
64014622:	ret    
64014623:	push   0x8
64014625:	push   0x64029788
6401462a:	call   0x64013ac0
6401462f:	mov    esi,DWORD PTR [ebp+0x8]
64014632:	test   esi,esi
64014634:	je     0x64014724
6401463a:	mov    eax,DWORD PTR [esi+0x24]
6401463d:	test   eax,eax
6401463f:	je     0x64014648
64014641:	push   eax
64014642:	call   0x64013396
64014647:	pop    ecx
64014648:	mov    eax,DWORD PTR [esi+0x2c]
6401464b:	test   eax,eax
6401464d:	je     0x64014656
6401464f:	push   eax
64014650:	call   0x64013396
64014655:	pop    ecx
64014656:	mov    eax,DWORD PTR [esi+0x34]
64014659:	test   eax,eax
6401465b:	je     0x64014664
6401465d:	push   eax
6401465e:	call   0x64013396
64014663:	pop    ecx
64014664:	mov    eax,DWORD PTR [esi+0x3c]
64014667:	test   eax,eax
64014669:	je     0x64014672
6401466b:	push   eax
6401466c:	call   0x64013396
64014671:	pop    ecx
64014672:	mov    eax,DWORD PTR [esi+0x44]
64014675:	test   eax,eax
64014677:	je     0x64014680
64014679:	push   eax
6401467a:	call   0x64013396
6401467f:	pop    ecx
64014680:	mov    eax,DWORD PTR [esi+0x48]
64014683:	test   eax,eax
64014685:	je     0x6401468e
64014687:	push   eax
64014688:	call   0x64013396
6401468d:	pop    ecx
6401468e:	mov    eax,DWORD PTR [esi+0x5c]
64014691:	cmp    eax,0x6402c8c8
64014696:	je     0x6401469f
64014698:	push   eax
64014699:	call   0x64013396
6401469e:	pop    ecx
6401469f:	push   0xd
640146a1:	call   0x64019ac5
640146a6:	pop    ecx
640146a7:	and    DWORD PTR [ebp-0x4],0x0
640146ab:	mov    edi,DWORD PTR [esi+0x68]
640146ae:	test   edi,edi
640146b0:	je     0x640146cc
640146b2:	push   edi
640146b3:	call   DWORD PTR ds:0x64024098
640146b9:	test   eax,eax
640146bb:	jne    0x640146cc
640146bd:	cmp    edi,0x6402c268
640146c3:	je     0x640146cc
640146c5:	push   edi
640146c6:	call   0x64013396
640146cb:	pop    ecx
640146cc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640146d3:	call   0x6401472f
640146d8:	push   0xc
640146da:	call   0x64019ac5
640146df:	pop    ecx
640146e0:	mov    DWORD PTR [ebp-0x4],0x1
640146e7:	mov    edi,DWORD PTR [esi+0x6c]
640146ea:	test   edi,edi
640146ec:	je     0x64014711
640146ee:	push   edi
640146ef:	call   0x640164c5
640146f4:	pop    ecx
640146f5:	cmp    edi,DWORD PTR ds:0x6402c870
640146fb:	je     0x64014711
640146fd:	cmp    edi,0x6402c798
64014703:	je     0x64014711
64014705:	cmp    DWORD PTR [edi],0x0
64014708:	jne    0x64014711
6401470a:	push   edi
6401470b:	call   0x640162ff
64014710:	pop    ecx
64014711:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014718:	call   0x6401473b
6401471d:	push   esi
6401471e:	call   0x64013396
64014723:	pop    ecx
64014724:	call   0x64013b05
64014729:	ret    0x4
6401472c:	mov    esi,DWORD PTR [ebp+0x8]
6401472f:	push   0xd
64014731:	call   0x640199ed
64014736:	pop    ecx
64014737:	ret    
64014738:	mov    esi,DWORD PTR [ebp+0x8]
6401473b:	push   0xc
6401473d:	call   0x640199ed
64014742:	pop    ecx
64014743:	ret    
64014744:	cmp    DWORD PTR ds:0x6402c230,0xffffffff
6401474b:	je     0x64014799
6401474d:	push   edi
6401474e:	mov    edi,DWORD PTR [esp+0x8]
64014752:	test   edi,edi
64014754:	jne    0x6401477c
64014756:	push   esi
64014757:	push   DWORD PTR ds:0x6402c234
6401475d:	mov    esi,DWORD PTR ds:0x64024128
64014763:	call   esi
64014765:	test   eax,eax
64014767:	je     0x6401477b
64014769:	push   DWORD PTR ds:0x6402c230
6401476f:	push   DWORD PTR ds:0x6402c234
64014775:	call   esi
64014777:	call   eax
64014779:	mov    edi,eax
6401477b:	pop    esi
6401477c:	push   0x0
6401477e:	push   DWORD PTR ds:0x6402c230
64014784:	push   DWORD PTR ds:0x6402d5b4
6401478a:	call   0x640143ef
6401478f:	pop    ecx
64014790:	call   eax
64014792:	push   edi
64014793:	call   0x64014623
64014798:	pop    edi
64014799:	mov    eax,ds:0x6402c234
6401479e:	cmp    eax,0xffffffff
640147a1:	je     0x640147ac
640147a3:	push   0x0
640147a5:	push   eax
640147a6:	call   DWORD PTR ds:0x64024130
640147ac:	ret    
640147ad:	push   edi
640147ae:	push   0x64024bb4
640147b3:	call   DWORD PTR ds:0x64024124
640147b9:	mov    edi,eax
640147bb:	test   edi,edi
640147bd:	jne    0x640147c8
640147bf:	call   0x64014498
640147c4:	xor    eax,eax
640147c6:	pop    edi
640147c7:	ret    
640147c8:	push   esi
640147c9:	mov    esi,DWORD PTR ds:0x64024014
640147cf:	push   0x64024bf4
640147d4:	push   edi
640147d5:	call   esi
640147d7:	push   0x64024be8
640147dc:	push   edi
640147dd:	mov    ds:0x6402d5ac,eax
640147e2:	call   esi
640147e4:	push   0x64024bdc
640147e9:	push   edi
640147ea:	mov    ds:0x6402d5b0,eax
640147ef:	call   esi
640147f1:	push   0x64024bd4
640147f6:	push   edi
640147f7:	mov    ds:0x6402d5b4,eax
640147fc:	call   esi
640147fe:	cmp    DWORD PTR ds:0x6402d5ac,0x0
64014805:	mov    esi,DWORD PTR ds:0x64024130
6401480b:	mov    ds:0x6402d5b8,eax
64014810:	je     0x64014828
64014812:	cmp    DWORD PTR ds:0x6402d5b0,0x0
64014819:	je     0x64014828
6401481b:	cmp    DWORD PTR ds:0x6402d5b4,0x0
64014822:	je     0x64014828
64014824:	test   eax,eax
64014826:	jne    0x6401484c
64014828:	mov    eax,ds:0x64024128
6401482d:	mov    ds:0x6402d5b0,eax
64014832:	mov    eax,ds:0x64024134
64014837:	mov    DWORD PTR ds:0x6402d5ac,0x6401445d
64014841:	mov    DWORD PTR ds:0x6402d5b4,esi
64014847:	mov    ds:0x6402d5b8,eax
6401484c:	call   DWORD PTR ds:0x6402412c
64014852:	cmp    eax,0xffffffff
64014855:	mov    ds:0x6402c234,eax
6401485a:	je     0x6401492c
64014860:	push   DWORD PTR ds:0x6402d5b0
64014866:	push   eax
64014867:	call   esi
64014869:	test   eax,eax
6401486b:	je     0x6401492c
64014871:	call   0x64015bf6
64014876:	push   DWORD PTR ds:0x6402d5ac
6401487c:	call   0x64014378
64014881:	push   DWORD PTR ds:0x6402d5b0
64014887:	mov    ds:0x6402d5ac,eax
6401488c:	call   0x64014378
64014891:	push   DWORD PTR ds:0x6402d5b4
64014897:	mov    ds:0x6402d5b0,eax
6401489c:	call   0x64014378
640148a1:	push   DWORD PTR ds:0x6402d5b8
640148a7:	mov    ds:0x6402d5b4,eax
640148ac:	call   0x64014378
640148b1:	add    esp,0x10
640148b4:	mov    ds:0x6402d5b8,eax
640148b9:	call   0x6401994f
640148be:	test   eax,eax
640148c0:	je     0x64014927
640148c2:	push   0x64014623
640148c7:	push   DWORD PTR ds:0x6402d5ac
640148cd:	call   0x640143ef
640148d2:	pop    ecx
640148d3:	call   eax
640148d5:	cmp    eax,0xffffffff
640148d8:	mov    ds:0x6402c230,eax
640148dd:	je     0x64014927
640148df:	push   0x214
640148e4:	push   0x1
640148e6:	call   0x64015810
640148eb:	mov    esi,eax
640148ed:	test   esi,esi
640148ef:	pop    ecx
640148f0:	pop    ecx
640148f1:	je     0x64014927
640148f3:	push   esi
640148f4:	push   DWORD PTR ds:0x6402c230
640148fa:	push   DWORD PTR ds:0x6402d5b4
64014900:	call   0x640143ef
64014905:	pop    ecx
64014906:	call   eax
64014908:	test   eax,eax
6401490a:	je     0x64014927
6401490c:	push   0x0
6401490e:	push   esi
6401490f:	call   0x640144d5
64014914:	pop    ecx
64014915:	pop    ecx
64014916:	call   DWORD PTR ds:0x6402411c
6401491c:	or     DWORD PTR [esi+0x4],0xffffffff
64014920:	mov    DWORD PTR [esi],eax
64014922:	xor    eax,eax
64014924:	inc    eax
64014925:	jmp    0x6401492e
64014927:	call   0x64014498
6401492c:	xor    eax,eax
6401492e:	pop    esi
6401492f:	pop    edi
64014930:	ret    
64014931:	mov    eax,DWORD PTR [esp+0x4]
64014935:	mov    ds:0x6402d5bc,eax
6401493a:	ret    
6401493b:	push   DWORD PTR ds:0x6402d5bc
64014941:	call   0x640143ef
64014946:	test   eax,eax
64014948:	pop    ecx
64014949:	je     0x6401495a
6401494b:	push   DWORD PTR [esp+0x4]
6401494f:	call   eax
64014951:	test   eax,eax
64014953:	pop    ecx
64014954:	je     0x6401495a
64014956:	xor    eax,eax
64014958:	inc    eax
64014959:	ret    
6401495a:	xor    eax,eax
6401495c:	ret    
6401495d:	mov    DWORD PTR [ecx],0x64024c08
64014963:	jmp    0x64011e3b
64014968:	push   esi
64014969:	mov    esi,ecx
6401496b:	mov    DWORD PTR [esi],0x64024c08
64014971:	call   0x64011e3b
64014976:	test   BYTE PTR [esp+0x8],0x1
6401497b:	je     0x64014984
6401497d:	push   esi
6401497e:	call   0x64011d22
64014983:	pop    ecx
64014984:	mov    eax,esi
64014986:	pop    esi
64014987:	ret    0x4
6401498a:	push   esi
6401498b:	push   edi
6401498c:	mov    edi,DWORD PTR [esp+0xc]
64014990:	mov    eax,DWORD PTR [edi+0x4]
64014993:	test   eax,eax
64014995:	je     0x640149e0
64014997:	lea    edx,[eax+0x8]
6401499a:	cmp    BYTE PTR [edx],0x0
6401499d:	je     0x640149e0
6401499f:	mov    esi,DWORD PTR [esp+0x10]
640149a3:	mov    ecx,DWORD PTR [esi+0x4]
640149a6:	cmp    eax,ecx
640149a8:	je     0x640149be
640149aa:	add    ecx,0x8
640149ad:	push   ecx
640149ae:	push   edx
640149af:	call   0x64013e30
640149b4:	test   eax,eax
640149b6:	pop    ecx
640149b7:	pop    ecx
640149b8:	je     0x640149be
640149ba:	xor    eax,eax
640149bc:	jmp    0x640149e3
640149be:	test   BYTE PTR [esi],0x2
640149c1:	je     0x640149c8
640149c3:	test   BYTE PTR [edi],0x8
640149c6:	je     0x640149ba
640149c8:	mov    eax,DWORD PTR [esp+0x14]
640149cc:	mov    eax,DWORD PTR [eax]
640149ce:	test   al,0x1
640149d0:	je     0x640149d7
640149d2:	test   BYTE PTR [edi],0x1
640149d5:	je     0x640149ba
640149d7:	test   al,0x2
640149d9:	je     0x640149e0
640149db:	test   BYTE PTR [edi],0x2
640149de:	je     0x640149ba
640149e0:	xor    eax,eax
640149e2:	inc    eax
640149e3:	pop    edi
640149e4:	pop    esi
640149e5:	ret    
640149e6:	mov    eax,DWORD PTR [esp+0x4]
640149ea:	mov    eax,DWORD PTR [eax]
640149ec:	mov    eax,DWORD PTR [eax]
640149ee:	cmp    eax,0xe0434f4d
640149f3:	je     0x64014a0d
640149f5:	cmp    eax,0xe06d7363
640149fa:	jne    0x64014a27
640149fc:	call   0x6401460b
64014a01:	and    DWORD PTR [eax+0x90],0x0
64014a08:	jmp    0x640155e7
64014a0d:	call   0x6401460b
64014a12:	cmp    DWORD PTR [eax+0x90],0x0
64014a19:	jle    0x64014a27
64014a1b:	call   0x6401460b
64014a20:	add    eax,0x90
64014a25:	dec    DWORD PTR [eax]
64014a27:	xor    eax,eax
64014a29:	ret    
64014a2a:	push   0x10
64014a2c:	push   0x640297b0
64014a31:	call   0x64013ac0
64014a36:	mov    edi,DWORD PTR [ebp+0x10]
64014a39:	mov    ebx,DWORD PTR [ebp+0x8]
64014a3c:	cmp    DWORD PTR [edi+0x4],0x80
64014a43:	jg     0x64014a4b
64014a45:	movsx  esi,BYTE PTR [ebx+0x8]
64014a49:	jmp    0x64014a4e
64014a4b:	mov    esi,DWORD PTR [ebx+0x8]
64014a4e:	mov    DWORD PTR [ebp-0x1c],esi
64014a51:	call   0x6401460b
64014a56:	add    eax,0x90
64014a5b:	inc    DWORD PTR [eax]
64014a5d:	and    DWORD PTR [ebp-0x4],0x0
64014a61:	cmp    esi,DWORD PTR [ebp+0x14]
64014a64:	je     0x64014acb
64014a66:	cmp    esi,0xffffffff
64014a69:	jle    0x64014a70
64014a6b:	cmp    esi,DWORD PTR [edi+0x4]
64014a6e:	jl     0x64014a75
64014a70:	call   0x64015633
64014a75:	mov    eax,esi
64014a77:	shl    eax,0x3
64014a7a:	mov    ecx,DWORD PTR [edi+0x8]
64014a7d:	add    ecx,eax
64014a7f:	mov    esi,DWORD PTR [ecx]
64014a81:	mov    DWORD PTR [ebp-0x20],esi
64014a84:	mov    DWORD PTR [ebp-0x4],0x1
64014a8b:	cmp    DWORD PTR [ecx+0x4],0x0
64014a8f:	je     0x64014aa6
64014a91:	mov    DWORD PTR [ebx+0x8],esi
64014a94:	push   0x103
64014a99:	push   ebx
64014a9a:	mov    ecx,DWORD PTR [edi+0x8]
64014a9d:	push   DWORD PTR [ecx+eax*1+0x4]
64014aa1:	call   0x64015680
64014aa6:	and    DWORD PTR [ebp-0x4],0x0
64014aaa:	jmp    0x64014ac6
64014aac:	push   DWORD PTR [ebp-0x14]
64014aaf:	call   0x640149e6
64014ab4:	pop    ecx
64014ab5:	ret    
64014ab6:	mov    esp,DWORD PTR [ebp-0x18]
64014ab9:	and    DWORD PTR [ebp-0x4],0x0
64014abd:	mov    edi,DWORD PTR [ebp+0x10]
64014ac0:	mov    ebx,DWORD PTR [ebp+0x8]
64014ac3:	mov    esi,DWORD PTR [ebp-0x20]
64014ac6:	mov    DWORD PTR [ebp-0x1c],esi
64014ac9:	jmp    0x64014a61
64014acb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014ad2:	call   0x64014af0
64014ad7:	cmp    esi,DWORD PTR [ebp+0x14]
64014ada:	je     0x64014ae1
64014adc:	call   0x64015633
64014ae1:	mov    DWORD PTR [ebx+0x8],esi
64014ae4:	call   0x64013b05
64014ae9:	ret    
64014aea:	mov    ebx,DWORD PTR [ebp+0x8]
64014aed:	mov    esi,DWORD PTR [ebp-0x1c]
64014af0:	call   0x6401460b
64014af5:	cmp    DWORD PTR [eax+0x90],0x0
64014afc:	jle    0x64014b0a
64014afe:	call   0x6401460b
64014b03:	add    eax,0x90
64014b08:	dec    DWORD PTR [eax]
64014b0a:	ret    
64014b0b:	mov    eax,DWORD PTR [eax]
64014b0d:	cmp    DWORD PTR [eax],0xe06d7363
64014b13:	jne    0x64014b4d
64014b15:	cmp    DWORD PTR [eax+0x10],0x3
64014b19:	jne    0x64014b4d
64014b1b:	mov    ecx,DWORD PTR [eax+0x14]
64014b1e:	cmp    ecx,0x19930520
64014b24:	je     0x64014b36
64014b26:	cmp    ecx,0x19930521
64014b2c:	je     0x64014b36
64014b2e:	cmp    ecx,0x19930522
64014b34:	jne    0x64014b4d
64014b36:	cmp    DWORD PTR [eax+0x1c],0x0
64014b3a:	jne    0x64014b4d
64014b3c:	call   0x6401460b
64014b41:	xor    ecx,ecx
64014b43:	inc    ecx
64014b44:	mov    DWORD PTR [eax+0x20c],ecx
64014b4a:	mov    eax,ecx
64014b4c:	ret    
64014b4d:	xor    eax,eax
64014b4f:	ret    
64014b50:	push   0x8
64014b52:	push   0x640297d8
64014b57:	call   0x64013ac0
64014b5c:	mov    ecx,DWORD PTR [ebp+0x8]
64014b5f:	test   ecx,ecx
64014b61:	je     0x64014b8d
64014b63:	cmp    DWORD PTR [ecx],0xe06d7363
64014b69:	jne    0x64014b8d
64014b6b:	mov    eax,DWORD PTR [ecx+0x1c]
64014b6e:	test   eax,eax
64014b70:	je     0x64014b8d
64014b72:	mov    eax,DWORD PTR [eax+0x4]
64014b75:	test   eax,eax
64014b77:	je     0x64014b8d
64014b79:	and    DWORD PTR [ebp-0x4],0x0
64014b7d:	push   eax
64014b7e:	push   DWORD PTR [ecx+0x18]
64014b81:	call   0x640121e5
64014b86:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014b8d:	call   0x64013b05
64014b92:	ret    
64014b93:	xor    eax,eax
64014b95:	cmp    BYTE PTR [ebp+0xc],al
64014b98:	setne  al
64014b9b:	ret    
64014b9c:	mov    esp,DWORD PTR [ebp-0x18]
64014b9f:	jmp    0x640155e7
64014ba4:	mov    ecx,DWORD PTR [esp+0x8]
64014ba8:	mov    eax,DWORD PTR [ecx]
64014baa:	push   esi
64014bab:	mov    esi,DWORD PTR [esp+0x8]
64014baf:	add    eax,esi
64014bb1:	cmp    DWORD PTR [ecx+0x4],0x0
64014bb5:	jl     0x64014bc7
64014bb7:	mov    edx,DWORD PTR [ecx+0x4]
64014bba:	mov    ecx,DWORD PTR [ecx+0x8]
64014bbd:	mov    esi,DWORD PTR [edx+esi*1]
64014bc0:	mov    ecx,DWORD PTR [esi+ecx*1]
64014bc3:	add    ecx,edx
64014bc5:	add    eax,ecx
64014bc7:	pop    esi
64014bc8:	ret    
64014bc9:	push   ebp
64014bca:	mov    ebp,esp
64014bcc:	sub    esp,0xc
64014bcf:	test   edi,edi
64014bd1:	jne    0x64014bdd
64014bd3:	call   0x64015633
64014bd8:	jmp    0x640155e7
64014bdd:	and    DWORD PTR [ebp-0x8],0x0
64014be1:	cmp    DWORD PTR [edi],0x0
64014be4:	mov    BYTE PTR [ebp-0x1],0x0
64014be8:	jle    0x64014c3d
64014bea:	push   ebx
64014beb:	push   esi
64014bec:	mov    eax,DWORD PTR [ebp+0x8]
64014bef:	mov    eax,DWORD PTR [eax+0x1c]
64014bf2:	mov    eax,DWORD PTR [eax+0xc]
64014bf5:	mov    ebx,DWORD PTR [eax]
64014bf7:	test   ebx,ebx
64014bf9:	lea    esi,[eax+0x4]
64014bfc:	jle    0x64014c31
64014bfe:	mov    eax,DWORD PTR [ebp-0x8]
64014c01:	shl    eax,0x4
64014c04:	mov    DWORD PTR [ebp-0xc],eax
64014c07:	mov    ecx,DWORD PTR [ebp+0x8]
64014c0a:	push   DWORD PTR [ecx+0x1c]
64014c0d:	mov    eax,DWORD PTR [esi]
64014c0f:	push   eax
64014c10:	mov    eax,DWORD PTR [edi+0x4]
64014c13:	add    eax,DWORD PTR [ebp-0xc]
64014c16:	push   eax
64014c17:	call   0x6401498a
64014c1c:	add    esp,0xc
64014c1f:	test   eax,eax
64014c21:	jne    0x64014c2d
64014c23:	dec    ebx
64014c24:	add    esi,0x4
64014c27:	test   ebx,ebx
64014c29:	jg     0x64014c07
64014c2b:	jmp    0x64014c31
64014c2d:	mov    BYTE PTR [ebp-0x1],0x1
64014c31:	inc    DWORD PTR [ebp-0x8]
64014c34:	mov    eax,DWORD PTR [ebp-0x8]
64014c37:	cmp    eax,DWORD PTR [edi]
64014c39:	jl     0x64014bec
64014c3b:	pop    esi
64014c3c:	pop    ebx
64014c3d:	mov    al,BYTE PTR [ebp-0x1]
64014c40:	leave  
64014c41:	ret    
64014c42:	push   0x4
64014c44:	mov    eax,0x64021e83
64014c49:	call   0x64013d7e
64014c4e:	call   0x6401460b
64014c53:	cmp    DWORD PTR [eax+0x94],0x0
64014c5a:	je     0x64014c61
64014c5c:	call   0x64015633
64014c61:	and    DWORD PTR [ebp-0x4],0x0
64014c65:	call   0x64015620
64014c6a:	or     DWORD PTR [ebp-0x4],0xffffffff
64014c6e:	jmp    0x640155e7
64014c73:	call   0x6401460b
64014c78:	mov    ecx,DWORD PTR [ebp+0x8]
64014c7b:	push   0x0
64014c7d:	push   0x0
64014c7f:	mov    DWORD PTR [eax+0x94],ecx
64014c85:	call   0x6401216b
64014c8a:	int3   
64014c8b:	push   0x2c
64014c8d:	push   0x64029850
64014c92:	call   0x64013ac0
64014c97:	mov    ebx,ecx
64014c99:	mov    edi,DWORD PTR [ebp+0xc]
64014c9c:	mov    esi,DWORD PTR [ebp+0x8]
64014c9f:	mov    DWORD PTR [ebp-0x1c],ebx
64014ca2:	and    DWORD PTR [ebp-0x34],0x0
64014ca6:	mov    eax,DWORD PTR [edi-0x4]
64014ca9:	mov    DWORD PTR [ebp-0x24],eax
64014cac:	push   DWORD PTR [esi+0x18]
64014caf:	lea    eax,[ebp-0x3c]
64014cb2:	push   eax
64014cb3:	call   0x64012489
64014cb8:	pop    ecx
64014cb9:	pop    ecx
64014cba:	mov    DWORD PTR [ebp-0x28],eax
64014cbd:	call   0x6401460b
64014cc2:	mov    eax,DWORD PTR [eax+0x88]
64014cc8:	mov    DWORD PTR [ebp-0x2c],eax
64014ccb:	call   0x6401460b
64014cd0:	mov    eax,DWORD PTR [eax+0x8c]
64014cd6:	mov    DWORD PTR [ebp-0x30],eax
64014cd9:	call   0x6401460b
64014cde:	mov    DWORD PTR [eax+0x88],esi
64014ce4:	call   0x6401460b
64014ce9:	mov    ecx,DWORD PTR [ebp+0x10]
64014cec:	mov    DWORD PTR [eax+0x8c],ecx
64014cf2:	and    DWORD PTR [ebp-0x4],0x0
64014cf6:	xor    eax,eax
64014cf8:	inc    eax
64014cf9:	mov    DWORD PTR [ebp+0x10],eax
64014cfc:	mov    DWORD PTR [ebp-0x4],eax
64014cff:	push   DWORD PTR [ebp+0x1c]
64014d02:	push   DWORD PTR [ebp+0x18]
64014d05:	push   ebx
64014d06:	push   DWORD PTR [ebp+0x14]
64014d09:	push   edi
64014d0a:	call   0x6401251e
64014d0f:	add    esp,0x14
64014d12:	mov    DWORD PTR [ebp-0x1c],eax
64014d15:	and    DWORD PTR [ebp-0x4],0x0
64014d19:	jmp    0x64014d8a
64014d1b:	mov    eax,DWORD PTR [ebp-0x14]
64014d1e:	call   0x64014b0b
64014d23:	ret    
64014d24:	mov    esp,DWORD PTR [ebp-0x18]
64014d27:	call   0x6401460b
64014d2c:	and    DWORD PTR [eax+0x20c],0x0
64014d33:	mov    esi,DWORD PTR [ebp+0x14]
64014d36:	mov    edi,DWORD PTR [ebp+0xc]
64014d39:	cmp    DWORD PTR [esi+0x4],0x80
64014d40:	jg     0x64014d48
64014d42:	movsx  ecx,BYTE PTR [edi+0x8]
64014d46:	jmp    0x64014d4b
64014d48:	mov    ecx,DWORD PTR [edi+0x8]
64014d4b:	mov    ebx,DWORD PTR [esi+0x10]
64014d4e:	and    DWORD PTR [ebp-0x20],0x0
64014d52:	mov    eax,DWORD PTR [ebp-0x20]
64014d55:	cmp    eax,DWORD PTR [esi+0xc]
64014d58:	jae    0x64014d72
64014d5a:	imul   eax,eax,0x14
64014d5d:	add    eax,ebx
64014d5f:	mov    edx,DWORD PTR [eax+0x4]
64014d62:	cmp    ecx,edx
64014d64:	jle    0x64014da6
64014d66:	cmp    ecx,DWORD PTR [eax+0x8]
64014d69:	jg     0x64014da6
64014d6b:	mov    eax,DWORD PTR [esi+0x8]
64014d6e:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
64014d72:	push   ecx
64014d73:	push   esi
64014d74:	push   0x0
64014d76:	push   edi
64014d77:	call   0x64014a2a
64014d7c:	add    esp,0x10
64014d7f:	and    DWORD PTR [ebp-0x1c],0x0
64014d83:	and    DWORD PTR [ebp-0x4],0x0
64014d87:	mov    esi,DWORD PTR [ebp+0x8]
64014d8a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014d91:	mov    DWORD PTR [ebp+0x10],0x0
64014d98:	call   0x64014db1
64014d9d:	mov    eax,DWORD PTR [ebp-0x1c]
64014da0:	call   0x64013b05
64014da5:	ret    
64014da6:	inc    DWORD PTR [ebp-0x20]
64014da9:	jmp    0x64014d52
64014dab:	mov    edi,DWORD PTR [ebp+0xc]
64014dae:	mov    esi,DWORD PTR [ebp+0x8]
64014db1:	mov    eax,DWORD PTR [ebp-0x24]
64014db4:	mov    DWORD PTR [edi-0x4],eax
64014db7:	push   DWORD PTR [ebp-0x28]
64014dba:	call   0x640124d2
64014dbf:	pop    ecx
64014dc0:	call   0x6401460b
64014dc5:	mov    ecx,DWORD PTR [ebp-0x2c]
64014dc8:	mov    DWORD PTR [eax+0x88],ecx
64014dce:	call   0x6401460b
64014dd3:	mov    ecx,DWORD PTR [ebp-0x30]
64014dd6:	mov    DWORD PTR [eax+0x8c],ecx
64014ddc:	cmp    DWORD PTR [esi],0xe06d7363
64014de2:	jne    0x64014e26
64014de4:	cmp    DWORD PTR [esi+0x10],0x3
64014de8:	jne    0x64014e26
64014dea:	mov    eax,DWORD PTR [esi+0x14]
64014ded:	cmp    eax,0x19930520
64014df2:	je     0x64014e02
64014df4:	cmp    eax,0x19930521
64014df9:	je     0x64014e02
64014dfb:	cmp    eax,0x19930522
64014e00:	jne    0x64014e26
64014e02:	cmp    DWORD PTR [ebp-0x34],0x0
64014e06:	jne    0x64014e26
64014e08:	cmp    DWORD PTR [ebp-0x1c],0x0
64014e0c:	je     0x64014e26
64014e0e:	push   DWORD PTR [esi+0x18]
64014e11:	call   0x640124b1
64014e16:	pop    ecx
64014e17:	test   eax,eax
64014e19:	je     0x64014e26
64014e1b:	push   DWORD PTR [ebp+0x10]
64014e1e:	push   esi
64014e1f:	call   0x64014b50
64014e24:	pop    ecx
64014e25:	pop    ecx
64014e26:	ret    
64014e27:	push   0xc
64014e29:	push   0x64029878
64014e2e:	call   0x64013ac0
64014e33:	xor    edx,edx
64014e35:	mov    DWORD PTR [ebp-0x1c],edx
64014e38:	mov    eax,DWORD PTR [ebp+0x10]
64014e3b:	mov    ecx,DWORD PTR [eax+0x4]
64014e3e:	cmp    ecx,edx
64014e40:	je     0x64014f9e
64014e46:	cmp    BYTE PTR [ecx+0x8],dl
64014e49:	je     0x64014f9e
64014e4f:	mov    ecx,DWORD PTR [eax+0x8]
64014e52:	cmp    ecx,edx
64014e54:	jne    0x64014e62
64014e56:	test   DWORD PTR [eax],0x80000000
64014e5c:	je     0x64014f9e
64014e62:	mov    eax,DWORD PTR [eax]
64014e64:	mov    esi,DWORD PTR [ebp+0xc]
64014e67:	test   eax,eax
64014e69:	js     0x64014e6f
64014e6b:	lea    esi,[ecx+esi*1+0xc]
64014e6f:	mov    DWORD PTR [ebp-0x4],edx
64014e72:	xor    ebx,ebx
64014e74:	inc    ebx
64014e75:	push   ebx
64014e76:	test   al,0x8
64014e78:	je     0x64014ebb
64014e7a:	mov    edi,DWORD PTR [ebp+0x8]
64014e7d:	push   DWORD PTR [edi+0x18]
64014e80:	call   0x6401abcb
64014e85:	pop    ecx
64014e86:	pop    ecx
64014e87:	test   eax,eax
64014e89:	je     0x64014f81
64014e8f:	push   ebx
64014e90:	push   esi
64014e91:	call   0x6401abcb
64014e96:	pop    ecx
64014e97:	pop    ecx
64014e98:	test   eax,eax
64014e9a:	je     0x64014f81
64014ea0:	mov    eax,DWORD PTR [edi+0x18]
64014ea3:	mov    DWORD PTR [esi],eax
64014ea5:	mov    ecx,DWORD PTR [ebp+0x14]
64014ea8:	add    ecx,0x8
64014eab:	push   ecx
64014eac:	push   eax
64014ead:	call   0x64014ba4
64014eb2:	pop    ecx
64014eb3:	pop    ecx
64014eb4:	mov    DWORD PTR [esi],eax
64014eb6:	jmp    0x64014f86
64014ebb:	mov    edi,DWORD PTR [ebp+0x14]
64014ebe:	mov    eax,DWORD PTR [ebp+0x8]
64014ec1:	push   DWORD PTR [eax+0x18]
64014ec4:	test   BYTE PTR [edi],bl
64014ec6:	je     0x64014f10
64014ec8:	call   0x6401abcb
64014ecd:	pop    ecx
64014ece:	pop    ecx
64014ecf:	test   eax,eax
64014ed1:	je     0x64014f81
64014ed7:	push   ebx
64014ed8:	push   esi
64014ed9:	call   0x6401abcb
64014ede:	pop    ecx
64014edf:	pop    ecx
64014ee0:	test   eax,eax
64014ee2:	je     0x64014f81
64014ee8:	push   DWORD PTR [edi+0x14]
64014eeb:	mov    eax,DWORD PTR [ebp+0x8]
64014eee:	push   DWORD PTR [eax+0x18]
64014ef1:	push   esi
64014ef2:	call   0x64013540
64014ef7:	add    esp,0xc
64014efa:	cmp    DWORD PTR [edi+0x14],0x4
64014efe:	jne    0x64014f86
64014f04:	mov    eax,DWORD PTR [esi]
64014f06:	test   eax,eax
64014f08:	je     0x64014f86
64014f0a:	add    edi,0x8
64014f0d:	push   edi
64014f0e:	jmp    0x64014eac
64014f10:	cmp    DWORD PTR [edi+0x18],edx
64014f13:	jne    0x64014f4d
64014f15:	call   0x6401abcb
64014f1a:	pop    ecx
64014f1b:	pop    ecx
64014f1c:	test   eax,eax
64014f1e:	je     0x64014f81
64014f20:	push   ebx
64014f21:	push   esi
64014f22:	call   0x6401abcb
64014f27:	pop    ecx
64014f28:	pop    ecx
64014f29:	test   eax,eax
64014f2b:	je     0x64014f81
64014f2d:	push   DWORD PTR [edi+0x14]
64014f30:	add    edi,0x8
64014f33:	push   edi
64014f34:	mov    eax,DWORD PTR [ebp+0x8]
64014f37:	push   DWORD PTR [eax+0x18]
64014f3a:	call   0x64014ba4
64014f3f:	pop    ecx
64014f40:	pop    ecx
64014f41:	push   eax
64014f42:	push   esi
64014f43:	call   0x64013540
64014f48:	add    esp,0xc
64014f4b:	jmp    0x64014f86
64014f4d:	call   0x6401abcb
64014f52:	pop    ecx
64014f53:	pop    ecx
64014f54:	test   eax,eax
64014f56:	je     0x64014f81
64014f58:	push   ebx
64014f59:	push   esi
64014f5a:	call   0x6401abcb
64014f5f:	pop    ecx
64014f60:	pop    ecx
64014f61:	test   eax,eax
64014f63:	je     0x64014f81
64014f65:	push   DWORD PTR [edi+0x18]
64014f68:	call   0x6401abcb
64014f6d:	pop    ecx
64014f6e:	test   eax,eax
64014f70:	je     0x64014f81
64014f72:	test   BYTE PTR [edi],0x4
64014f75:	push   0x0
64014f77:	pop    eax
64014f78:	setne  al
64014f7b:	inc    eax
64014f7c:	mov    DWORD PTR [ebp-0x1c],eax
64014f7f:	jmp    0x64014f86
64014f81:	call   0x64015633
64014f86:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014f8d:	mov    eax,DWORD PTR [ebp-0x1c]
64014f90:	jmp    0x64014fa0
64014f92:	xor    eax,eax
64014f94:	inc    eax
64014f95:	ret    
64014f96:	mov    esp,DWORD PTR [ebp-0x18]
64014f99:	jmp    0x640155e7
64014f9e:	xor    eax,eax
64014fa0:	call   0x64013b05
64014fa5:	ret    
64014fa6:	push   0x8
64014fa8:	push   0x64029898
64014fad:	call   0x64013ac0
64014fb2:	mov    eax,DWORD PTR [ebp+0x10]
64014fb5:	test   DWORD PTR [eax],0x80000000
64014fbb:	je     0x64014fc2
64014fbd:	mov    ebx,DWORD PTR [ebp+0xc]
64014fc0:	jmp    0x64014fcc
64014fc2:	mov    ecx,DWORD PTR [eax+0x8]
64014fc5:	mov    edx,DWORD PTR [ebp+0xc]
64014fc8:	lea    ebx,[ecx+edx*1+0xc]
64014fcc:	and    DWORD PTR [ebp-0x4],0x0
64014fd0:	mov    esi,DWORD PTR [ebp+0x14]
64014fd3:	push   esi
64014fd4:	push   eax
64014fd5:	push   DWORD PTR [ebp+0xc]
64014fd8:	mov    edi,DWORD PTR [ebp+0x8]
64014fdb:	push   edi
64014fdc:	call   0x64014e27
64014fe1:	add    esp,0x10
64014fe4:	dec    eax
64014fe5:	je     0x64015006
64014fe7:	dec    eax
64014fe8:	jne    0x6401501e
64014fea:	push   0x1
64014fec:	lea    eax,[esi+0x8]
64014fef:	push   eax
64014ff0:	push   DWORD PTR [edi+0x18]
64014ff3:	call   0x64014ba4
64014ff8:	pop    ecx
64014ff9:	pop    ecx
64014ffa:	push   eax
64014ffb:	push   DWORD PTR [esi+0x18]
64014ffe:	push   ebx
64014fff:	call   0x640121e5
64015004:	jmp    0x6401501e
64015006:	lea    eax,[esi+0x8]
64015009:	push   eax
6401500a:	push   DWORD PTR [edi+0x18]
6401500d:	call   0x64014ba4
64015012:	pop    ecx
64015013:	pop    ecx
64015014:	push   eax
64015015:	push   DWORD PTR [esi+0x18]
64015018:	push   ebx
64015019:	call   0x640121e5
6401501e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015025:	call   0x64013b05
6401502a:	ret    
6401502b:	xor    eax,eax
6401502d:	inc    eax
6401502e:	ret    
6401502f:	mov    esp,DWORD PTR [ebp-0x18]
64015032:	jmp    0x640155e7
64015037:	push   ebp
64015038:	mov    ebp,esp
6401503a:	cmp    DWORD PTR [ebp+0x18],0x0
6401503e:	je     0x64015050
64015040:	push   DWORD PTR [ebp+0x18]
64015043:	push   ebx
64015044:	push   esi
64015045:	push   DWORD PTR [ebp+0x8]
64015048:	call   0x64014fa6
6401504d:	add    esp,0x10
64015050:	cmp    DWORD PTR [ebp+0x20],0x0
64015054:	push   DWORD PTR [ebp+0x8]
64015057:	jne    0x6401505c
64015059:	push   esi
6401505a:	jmp    0x6401505f
6401505c:	push   DWORD PTR [ebp+0x20]
6401505f:	call   0x640121ec
64015064:	push   DWORD PTR [edi]
64015066:	push   DWORD PTR [ebp+0x14]
64015069:	push   DWORD PTR [ebp+0x10]
6401506c:	push   esi
6401506d:	call   0x64014a2a
64015072:	mov    eax,DWORD PTR [edi+0x4]
64015075:	push   0x100
6401507a:	push   DWORD PTR [ebp+0x1c]
6401507d:	inc    eax
6401507e:	push   DWORD PTR [ebp+0x14]
64015081:	mov    DWORD PTR [esi+0x8],eax
64015084:	push   DWORD PTR [ebp+0xc]
64015087:	mov    ecx,DWORD PTR [ebx+0xc]
6401508a:	push   esi
6401508b:	push   DWORD PTR [ebp+0x8]
6401508e:	call   0x64014c8b
64015093:	add    esp,0x28
64015096:	test   eax,eax
64015098:	je     0x640150a1
6401509a:	push   esi
6401509b:	push   eax
6401509c:	call   0x640121b5
640150a1:	pop    ebp
640150a2:	ret    
640150a3:	push   ebp
640150a4:	mov    ebp,esp
640150a6:	push   ecx
640150a7:	push   ecx
640150a8:	push   esi
640150a9:	mov    esi,DWORD PTR [ebp+0x8]
640150ac:	cmp    DWORD PTR [esi],0x80000003
640150b2:	je     0x64015192
640150b8:	push   edi
640150b9:	call   0x6401460b
640150be:	cmp    DWORD PTR [eax+0x80],0x0
640150c5:	je     0x64015106
640150c7:	call   0x6401460b
640150cc:	lea    edi,[eax+0x80]
640150d2:	call   0x640143e6
640150d7:	cmp    DWORD PTR [edi],eax
640150d9:	je     0x64015106
640150db:	cmp    DWORD PTR [esi],0xe0434f4d
640150e1:	je     0x64015106
640150e3:	push   DWORD PTR [ebp+0x24]
640150e6:	push   DWORD PTR [ebp+0x20]
640150e9:	push   DWORD PTR [ebp+0x18]
640150ec:	push   DWORD PTR [ebp+0x14]
640150ef:	push   DWORD PTR [ebp+0x10]
640150f2:	push   DWORD PTR [ebp+0xc]
640150f5:	push   esi
640150f6:	call   0x640122a4
640150fb:	add    esp,0x1c
640150fe:	test   eax,eax
64015100:	jne    0x64015191
64015106:	mov    edi,DWORD PTR [ebp+0x18]
64015109:	cmp    DWORD PTR [edi+0xc],0x0
6401510d:	jne    0x64015114
6401510f:	call   0x64015633
64015114:	mov    esi,DWORD PTR [ebp+0x1c]
64015117:	lea    eax,[ebp-0x8]
6401511a:	push   eax
6401511b:	lea    eax,[ebp-0x4]
6401511e:	push   eax
6401511f:	push   esi
64015120:	push   DWORD PTR [ebp+0x20]
64015123:	push   edi
64015124:	call   0x64012416
64015129:	mov    edi,eax
6401512b:	mov    eax,DWORD PTR [ebp-0x4]
6401512e:	add    esp,0x14
64015131:	cmp    eax,DWORD PTR [ebp-0x8]
64015134:	jae    0x64015191
64015136:	push   ebx
64015137:	cmp    esi,DWORD PTR [edi]
64015139:	jl     0x64015182
6401513b:	cmp    esi,DWORD PTR [edi+0x4]
6401513e:	jg     0x64015182
64015140:	mov    eax,DWORD PTR [edi+0xc]
64015143:	mov    ecx,DWORD PTR [edi+0x10]
64015146:	shl    eax,0x4
64015149:	add    eax,ecx
6401514b:	mov    ecx,DWORD PTR [eax-0xc]
6401514e:	test   ecx,ecx
64015150:	je     0x64015158
64015152:	cmp    BYTE PTR [ecx+0x8],0x0
64015156:	jne    0x64015182
64015158:	lea    ebx,[eax-0x10]
6401515b:	test   BYTE PTR [ebx],0x40
6401515e:	jne    0x64015182
64015160:	push   DWORD PTR [ebp+0x24]
64015163:	mov    esi,DWORD PTR [ebp+0xc]
64015166:	push   DWORD PTR [ebp+0x20]
64015169:	push   0x0
6401516b:	push   DWORD PTR [ebp+0x18]
6401516e:	push   DWORD PTR [ebp+0x14]
64015171:	push   DWORD PTR [ebp+0x10]
64015174:	push   DWORD PTR [ebp+0x8]
64015177:	call   0x64015037
6401517c:	mov    esi,DWORD PTR [ebp+0x1c]
6401517f:	add    esp,0x1c
64015182:	inc    DWORD PTR [ebp-0x4]
64015185:	mov    eax,DWORD PTR [ebp-0x4]
64015188:	add    edi,0x14
6401518b:	cmp    eax,DWORD PTR [ebp-0x8]
6401518e:	jb     0x64015137
64015190:	pop    ebx
64015191:	pop    edi
64015192:	pop    esi
64015193:	leave  
64015194:	ret    
64015195:	push   ebp
64015196:	mov    ebp,esp
64015198:	sub    esp,0x2c
6401519b:	mov    ecx,DWORD PTR [ebp+0xc]
6401519e:	push   ebx
6401519f:	mov    ebx,DWORD PTR [ebp+0x18]
640151a2:	mov    eax,DWORD PTR [ebx+0x4]
640151a5:	cmp    eax,0x80
640151aa:	push   esi
640151ab:	push   edi
640151ac:	mov    BYTE PTR [ebp-0x1],0x0
640151b0:	jg     0x640151b8
640151b2:	movsx  ecx,BYTE PTR [ecx+0x8]
640151b6:	jmp    0x640151bb
640151b8:	mov    ecx,DWORD PTR [ecx+0x8]
640151bb:	cmp    ecx,0xffffffff
640151be:	mov    DWORD PTR [ebp-0x8],ecx
640151c1:	jl     0x640151c7
640151c3:	cmp    ecx,eax
640151c5:	jl     0x640151cc
640151c7:	call   0x64015633
640151cc:	mov    esi,DWORD PTR [ebp+0x8]
640151cf:	mov    edi,0xe06d7363
640151d4:	cmp    DWORD PTR [esi],edi
640151d6:	jne    0x640154a7
640151dc:	cmp    DWORD PTR [esi+0x10],0x3
640151e0:	mov    ebx,0x19930520
640151e5:	jne    0x64015314
640151eb:	mov    eax,DWORD PTR [esi+0x14]
640151ee:	cmp    eax,ebx
640151f0:	je     0x64015204
640151f2:	cmp    eax,0x19930521
640151f7:	je     0x64015204
640151f9:	cmp    eax,0x19930522
640151fe:	jne    0x64015314
64015204:	cmp    DWORD PTR [esi+0x1c],0x0
64015208:	jne    0x64015314
6401520e:	call   0x6401460b
64015213:	cmp    DWORD PTR [eax+0x88],0x0
6401521a:	je     0x640154e6
64015220:	call   0x6401460b
64015225:	mov    esi,DWORD PTR [eax+0x88]
6401522b:	mov    DWORD PTR [ebp+0x8],esi
6401522e:	call   0x6401460b
64015233:	mov    eax,DWORD PTR [eax+0x8c]
64015239:	push   0x1
6401523b:	push   esi
6401523c:	mov    DWORD PTR [ebp+0x10],eax
6401523f:	call   0x6401abcb
64015244:	test   eax,eax
64015246:	pop    ecx
64015247:	pop    ecx
64015248:	jne    0x6401524f
6401524a:	call   0x64015633
6401524f:	cmp    DWORD PTR [esi],edi
64015251:	jne    0x64015279
64015253:	cmp    DWORD PTR [esi+0x10],0x3
64015257:	jne    0x64015279
64015259:	mov    eax,DWORD PTR [esi+0x14]
6401525c:	cmp    eax,ebx
6401525e:	je     0x6401526e
64015260:	cmp    eax,0x19930521
64015265:	je     0x6401526e
64015267:	cmp    eax,0x19930522
6401526c:	jne    0x64015279
6401526e:	cmp    DWORD PTR [esi+0x1c],0x0
64015272:	jne    0x64015279
64015274:	call   0x64015633
64015279:	call   0x6401460b
6401527e:	cmp    DWORD PTR [eax+0x94],0x0
64015285:	je     0x64015314
6401528b:	call   0x6401460b
64015290:	mov    edi,DWORD PTR [eax+0x94]
64015296:	call   0x6401460b
6401529b:	push   DWORD PTR [ebp+0x8]
6401529e:	xor    esi,esi
640152a0:	mov    DWORD PTR [eax+0x94],esi
640152a6:	call   0x64014bc9
640152ab:	test   al,al
640152ad:	pop    ecx
640152ae:	jne    0x6401530c
640152b0:	xor    ebx,ebx
640152b2:	cmp    DWORD PTR [edi],ebx
640152b4:	jle    0x640152d3
640152b6:	mov    eax,DWORD PTR [edi+0x4]
640152b9:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
640152bd:	push   0x6402c23c
640152c2:	call   0x64011d51
640152c7:	test   al,al
640152c9:	jne    0x640152d8
640152cb:	inc    esi
640152cc:	add    ebx,0x10
640152cf:	cmp    esi,DWORD PTR [edi]
640152d1:	jl     0x640152b6
640152d3:	jmp    0x640155e7
640152d8:	push   0x1
640152da:	push   DWORD PTR [ebp+0x8]
640152dd:	call   0x64014b50
640152e2:	pop    ecx
640152e3:	pop    ecx
640152e4:	lea    eax,[ebp+0x8]
640152e7:	push   eax
640152e8:	lea    ecx,[ebp-0x2c]
640152eb:	mov    DWORD PTR [ebp+0x8],0x64024c10
640152f2:	call   0x64011d7d
640152f7:	push   0x640298b4
640152fc:	lea    eax,[ebp-0x2c]
640152ff:	push   eax
64015300:	mov    DWORD PTR [ebp-0x2c],0x64024c08
64015307:	call   0x6401216b
6401530c:	mov    esi,DWORD PTR [ebp+0x8]
6401530f:	mov    edi,0xe06d7363
64015314:	cmp    DWORD PTR [esi],edi
64015316:	jne    0x640154a4
6401531c:	cmp    DWORD PTR [esi+0x10],0x3
64015320:	jne    0x640154a4
64015326:	mov    eax,DWORD PTR [esi+0x14]
64015329:	cmp    eax,ebx
6401532b:	je     0x6401533f
6401532d:	cmp    eax,0x19930521
64015332:	je     0x6401533f
64015334:	cmp    eax,0x19930522
64015339:	jne    0x640154a4
6401533f:	mov    edi,DWORD PTR [ebp+0x18]
64015342:	cmp    DWORD PTR [edi+0xc],0x0
64015346:	jbe    0x6401540b
6401534c:	lea    eax,[ebp-0x1c]
6401534f:	push   eax
64015350:	lea    eax,[ebp-0x10]
64015353:	push   eax
64015354:	push   DWORD PTR [ebp-0x8]
64015357:	push   DWORD PTR [ebp+0x20]
6401535a:	push   edi
6401535b:	call   0x64012416
64015360:	add    esp,0x14
64015363:	mov    edi,eax
64015365:	mov    eax,DWORD PTR [ebp-0x10]
64015368:	cmp    eax,DWORD PTR [ebp-0x1c]
6401536b:	jae    0x64015408
64015371:	mov    eax,DWORD PTR [ebp-0x8]
64015374:	cmp    DWORD PTR [edi],eax
64015376:	jg     0x640153fd
6401537c:	cmp    eax,DWORD PTR [edi+0x4]
6401537f:	jg     0x640153fd
64015381:	mov    eax,DWORD PTR [edi+0x10]
64015384:	mov    DWORD PTR [ebp-0xc],eax
64015387:	mov    eax,DWORD PTR [edi+0xc]
6401538a:	test   eax,eax
6401538c:	mov    DWORD PTR [ebp-0x18],eax
6401538f:	jle    0x640153fd
64015391:	mov    eax,DWORD PTR [esi+0x1c]
64015394:	mov    eax,DWORD PTR [eax+0xc]
64015397:	lea    ebx,[eax+0x4]
6401539a:	mov    eax,DWORD PTR [eax]
6401539c:	test   eax,eax
6401539e:	mov    DWORD PTR [ebp-0x14],eax
640153a1:	jle    0x640153c6
640153a3:	push   DWORD PTR [esi+0x1c]
640153a6:	mov    eax,DWORD PTR [ebx]
640153a8:	push   eax
640153a9:	push   DWORD PTR [ebp-0xc]
640153ac:	mov    DWORD PTR [ebp-0x20],eax
640153af:	call   0x6401498a
640153b4:	add    esp,0xc
640153b7:	test   eax,eax
640153b9:	jne    0x640153d5
640153bb:	dec    DWORD PTR [ebp-0x14]
640153be:	add    ebx,0x4
640153c1:	cmp    DWORD PTR [ebp-0x14],eax
640153c4:	jg     0x640153a3
640153c6:	dec    DWORD PTR [ebp-0x18]
640153c9:	add    DWORD PTR [ebp-0xc],0x10
640153cd:	cmp    DWORD PTR [ebp-0x18],0x0
640153d1:	jg     0x64015391
640153d3:	jmp    0x640153fd
640153d5:	push   DWORD PTR [ebp+0x24]
640153d8:	mov    ebx,DWORD PTR [ebp-0xc]
640153db:	push   DWORD PTR [ebp+0x20]
640153de:	mov    BYTE PTR [ebp-0x1],0x1
640153e2:	push   DWORD PTR [ebp-0x20]
640153e5:	push   DWORD PTR [ebp+0x18]
640153e8:	push   DWORD PTR [ebp+0x14]
640153eb:	push   DWORD PTR [ebp+0x10]
640153ee:	push   esi
640153ef:	mov    esi,DWORD PTR [ebp+0xc]
640153f2:	call   0x64015037
640153f7:	mov    esi,DWORD PTR [ebp+0x8]
640153fa:	add    esp,0x1c
640153fd:	inc    DWORD PTR [ebp-0x10]
64015400:	add    edi,0x14
64015403:	jmp    0x64015365
64015408:	mov    edi,DWORD PTR [ebp+0x18]
6401540b:	cmp    BYTE PTR [ebp+0x1c],0x0
6401540f:	je     0x6401541b
64015411:	push   0x1
64015413:	push   esi
64015414:	call   0x64014b50
64015419:	pop    ecx
6401541a:	pop    ecx
6401541b:	cmp    BYTE PTR [ebp-0x1],0x0
6401541f:	jne    0x640154d3
64015425:	mov    eax,DWORD PTR [edi]
64015427:	and    eax,0x1fffffff
6401542c:	cmp    eax,0x19930521
64015431:	jb     0x640154d3
64015437:	mov    edi,DWORD PTR [edi+0x1c]
6401543a:	test   edi,edi
6401543c:	je     0x640154d3
64015442:	push   esi
64015443:	call   0x64014bc9
64015448:	test   al,al
6401544a:	pop    ecx
6401544b:	jne    0x640154d3
64015451:	call   0x6401460b
64015456:	call   0x6401460b
6401545b:	call   0x6401460b
64015460:	mov    DWORD PTR [eax+0x88],esi
64015466:	call   0x6401460b
6401546b:	cmp    DWORD PTR [ebp+0x24],0x0
6401546f:	mov    ecx,DWORD PTR [ebp+0x10]
64015472:	mov    DWORD PTR [eax+0x8c],ecx
64015478:	push   esi
64015479:	jne    0x64015480
6401547b:	push   DWORD PTR [ebp+0xc]
6401547e:	jmp    0x64015483
64015480:	push   DWORD PTR [ebp+0x24]
64015483:	call   0x640121ec
64015488:	mov    esi,DWORD PTR [ebp+0x18]
6401548b:	push   0xffffffff
6401548d:	push   esi
6401548e:	push   DWORD PTR [ebp+0x14]
64015491:	push   DWORD PTR [ebp+0xc]
64015494:	call   0x64014a2a
64015499:	add    esp,0x10
6401549c:	push   DWORD PTR [esi+0x1c]
6401549f:	call   0x64014c42
640154a4:	mov    ebx,DWORD PTR [ebp+0x18]
640154a7:	cmp    DWORD PTR [ebx+0xc],0x0
640154ab:	jbe    0x640154d3
640154ad:	cmp    BYTE PTR [ebp+0x1c],0x0
640154b1:	jne    0x640152d3
640154b7:	push   DWORD PTR [ebp+0x24]
640154ba:	push   DWORD PTR [ebp+0x20]
640154bd:	push   DWORD PTR [ebp-0x8]
640154c0:	push   ebx
640154c1:	push   DWORD PTR [ebp+0x14]
640154c4:	push   DWORD PTR [ebp+0x10]
640154c7:	push   DWORD PTR [ebp+0xc]
640154ca:	push   esi
640154cb:	call   0x640150a3
640154d0:	add    esp,0x20
640154d3:	call   0x6401460b
640154d8:	cmp    DWORD PTR [eax+0x94],0x0
640154df:	je     0x640154e6
640154e1:	call   0x64015633
640154e6:	pop    edi
640154e7:	pop    esi
640154e8:	pop    ebx
640154e9:	leave  
640154ea:	ret    
640154eb:	push   esi
640154ec:	push   DWORD PTR [esp+0x8]
640154f0:	mov    esi,ecx
640154f2:	call   0x64011de3
640154f7:	mov    DWORD PTR [esi],0x64024c08
640154fd:	mov    eax,esi
640154ff:	pop    esi
64015500:	ret    0x4
64015503:	push   ebp
64015504:	mov    ebp,esp
64015506:	push   ebx
64015507:	push   esi
64015508:	push   edi
64015509:	call   0x6401460b
6401550e:	cmp    DWORD PTR [eax+0x20c],0x0
64015515:	mov    eax,DWORD PTR [ebp+0x18]
64015518:	mov    ecx,DWORD PTR [ebp+0x8]
6401551b:	mov    edi,0xe06d7363
64015520:	mov    esi,0x1fffffff
64015525:	mov    ebx,0x19930522
6401552a:	jne    0x6401554c
6401552c:	mov    edx,DWORD PTR [ecx]
6401552e:	cmp    edx,edi
64015530:	je     0x6401554c
64015532:	cmp    edx,0x80000026
64015538:	je     0x6401554c
6401553a:	mov    edx,DWORD PTR [eax]
6401553c:	and    edx,esi
6401553e:	cmp    edx,ebx
64015540:	jb     0x6401554c
64015542:	test   BYTE PTR [eax+0x20],0x1
64015546:	jne    0x640155df
6401554c:	test   BYTE PTR [ecx+0x4],0x66
64015550:	je     0x64015575
64015552:	cmp    DWORD PTR [eax+0x4],0x0
64015556:	je     0x640155df
6401555c:	cmp    DWORD PTR [ebp+0x1c],0x0
64015560:	jne    0x640155df
64015562:	push   0xffffffff
64015564:	push   eax
64015565:	push   DWORD PTR [ebp+0x14]
64015568:	push   DWORD PTR [ebp+0xc]
6401556b:	call   0x64014a2a
64015570:	add    esp,0x10
64015573:	jmp    0x640155df
64015575:	cmp    DWORD PTR [eax+0xc],0x0
64015579:	jne    0x6401558d
6401557b:	mov    edx,DWORD PTR [eax]
6401557d:	and    edx,esi
6401557f:	cmp    edx,0x19930521
64015585:	jb     0x640155df
64015587:	cmp    DWORD PTR [eax+0x1c],0x0
6401558b:	je     0x640155df
6401558d:	cmp    DWORD PTR [ecx],edi
6401558f:	jne    0x640155c3
64015591:	cmp    DWORD PTR [ecx+0x10],0x3
64015595:	jb     0x640155c3
64015597:	cmp    DWORD PTR [ecx+0x14],ebx
6401559a:	jbe    0x640155c3
6401559c:	mov    edx,DWORD PTR [ecx+0x1c]
6401559f:	mov    edx,DWORD PTR [edx+0x8]
640155a2:	test   edx,edx
640155a4:	je     0x640155c3
640155a6:	movzx  esi,BYTE PTR [ebp+0x24]
640155aa:	push   esi
640155ab:	push   DWORD PTR [ebp+0x20]
640155ae:	push   DWORD PTR [ebp+0x1c]
640155b1:	push   eax
640155b2:	push   DWORD PTR [ebp+0x14]
640155b5:	push   DWORD PTR [ebp+0x10]
640155b8:	push   DWORD PTR [ebp+0xc]
640155bb:	push   ecx
640155bc:	call   edx
640155be:	add    esp,0x20
640155c1:	jmp    0x640155e2
640155c3:	push   DWORD PTR [ebp+0x20]
640155c6:	push   DWORD PTR [ebp+0x1c]
640155c9:	push   DWORD PTR [ebp+0x24]
640155cc:	push   eax
640155cd:	push   DWORD PTR [ebp+0x14]
640155d0:	push   DWORD PTR [ebp+0x10]
640155d3:	push   DWORD PTR [ebp+0xc]
640155d6:	push   ecx
640155d7:	call   0x64015195
640155dc:	add    esp,0x20
640155df:	xor    eax,eax
640155e1:	inc    eax
640155e2:	pop    edi
640155e3:	pop    esi
640155e4:	pop    ebx
640155e5:	pop    ebp
640155e6:	ret    
640155e7:	push   0x8
640155e9:	push   0x640298f0
640155ee:	call   0x64013ac0
640155f3:	call   0x6401460b
640155f8:	mov    eax,DWORD PTR [eax+0x78]
640155fb:	test   eax,eax
640155fd:	je     0x64015615
640155ff:	and    DWORD PTR [ebp-0x4],0x0
64015603:	call   eax
64015605:	jmp    0x6401560e
64015607:	xor    eax,eax
64015609:	inc    eax
6401560a:	ret    
6401560b:	mov    esp,DWORD PTR [ebp-0x18]
6401560e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015615:	call   0x6401abd8
6401561a:	call   0x64013b05
6401561f:	ret    
64015620:	call   0x6401460b
64015625:	mov    eax,DWORD PTR [eax+0x7c]
64015628:	test   eax,eax
6401562a:	je     0x6401562e
6401562c:	call   eax
6401562e:	jmp    0x640155e7
64015633:	push   0x8
64015635:	push   0x64029910
6401563a:	call   0x64013ac0
6401563f:	push   DWORD PTR ds:0x6402d5c0
64015645:	call   0x640143ef
6401564a:	pop    ecx
6401564b:	test   eax,eax
6401564d:	je     0x64015665
6401564f:	and    DWORD PTR [ebp-0x4],0x0
64015653:	call   eax
64015655:	jmp    0x6401565e
64015657:	xor    eax,eax
64015659:	inc    eax
6401565a:	ret    
6401565b:	mov    esp,DWORD PTR [ebp-0x18]
6401565e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015665:	jmp    0x640155e7
6401566a:	push   0x640155e7
6401566f:	call   0x64014378
64015674:	pop    ecx
64015675:	mov    ds:0x6402d5c0,eax
6401567a:	ret    
6401567b:	int3   
6401567c:	int3   
6401567d:	int3   
6401567e:	int3   
6401567f:	int3   
64015680:	push   ebp
64015681:	mov    ebp,esp
64015683:	sub    esp,0x4
64015686:	push   ebx
64015687:	push   ecx
64015688:	mov    eax,DWORD PTR [ebp+0xc]
6401568b:	add    eax,0xc
6401568e:	mov    DWORD PTR [ebp-0x4],eax
64015691:	mov    eax,DWORD PTR [ebp+0x8]
64015694:	push   ebp
64015695:	push   DWORD PTR [ebp+0x10]
64015698:	mov    ecx,DWORD PTR [ebp+0x10]
6401569b:	mov    ebp,DWORD PTR [ebp-0x4]
6401569e:	call   0x6401add8
640156a3:	push   esi
640156a4:	push   edi
640156a5:	call   eax
640156a7:	pop    edi
640156a8:	pop    esi
640156a9:	mov    ebx,ebp
640156ab:	pop    ebp
640156ac:	mov    ecx,DWORD PTR [ebp+0x10]
640156af:	push   ebp
640156b0:	mov    ebp,ebx
640156b2:	cmp    ecx,0x100
640156b8:	jne    0x640156bf
640156ba:	mov    ecx,0x2
640156bf:	push   ecx
640156c0:	call   0x6401add8
640156c5:	pop    ebp
640156c6:	pop    ecx
640156c7:	pop    ebx
640156c8:	leave  
640156c9:	ret    0xc
640156cc:	push   ebp
640156cd:	mov    ebp,esp
640156cf:	sub    esp,0x328
640156d5:	mov    ds:0x6402d6d0,eax
640156da:	mov    DWORD PTR ds:0x6402d6cc,ecx
640156e0:	mov    DWORD PTR ds:0x6402d6c8,edx
640156e6:	mov    DWORD PTR ds:0x6402d6c4,ebx
640156ec:	mov    DWORD PTR ds:0x6402d6c0,esi
640156f2:	mov    DWORD PTR ds:0x6402d6bc,edi
640156f8:	data16 mov WORD PTR ds:0x6402d6e8,ss
640156ff:	data16 mov WORD PTR ds:0x6402d6dc,cs
64015706:	data16 mov WORD PTR ds:0x6402d6b8,ds
6401570d:	data16 mov WORD PTR ds:0x6402d6b4,es
64015714:	data16 mov WORD PTR ds:0x6402d6b0,fs
6401571b:	data16 mov WORD PTR ds:0x6402d6ac,gs
64015722:	pushf  
64015723:	pop    DWORD PTR ds:0x6402d6e0
64015729:	mov    eax,DWORD PTR [ebp+0x0]
6401572c:	mov    ds:0x6402d6d4,eax
64015731:	mov    eax,DWORD PTR [ebp+0x4]
64015734:	mov    ds:0x6402d6d8,eax
64015739:	lea    eax,[ebp+0x8]
6401573c:	mov    ds:0x6402d6e4,eax
64015741:	mov    eax,DWORD PTR [ebp-0x320]
64015747:	mov    DWORD PTR ds:0x6402d620,0x10001
64015751:	mov    eax,ds:0x6402d6d8
64015756:	mov    ds:0x6402d5d4,eax
6401575b:	mov    DWORD PTR ds:0x6402d5c8,0xc0000409
64015765:	mov    DWORD PTR ds:0x6402d5cc,0x1
6401576f:	mov    eax,ds:0x6402c09c
64015774:	mov    DWORD PTR [ebp-0x328],eax
6401577a:	mov    eax,ds:0x6402c0a0
6401577f:	mov    DWORD PTR [ebp-0x324],eax
64015785:	call   DWORD PTR ds:0x64024114
6401578b:	mov    ds:0x6402d618,eax
64015790:	push   0x1
64015792:	call   0x64014304
64015797:	pop    ecx
64015798:	push   0x0
6401579a:	call   DWORD PTR ds:0x64024110
640157a0:	push   0x64024c20
640157a5:	call   DWORD PTR ds:0x6402410c
640157ab:	cmp    DWORD PTR ds:0x6402d618,0x0
640157b2:	jne    0x640157bc
640157b4:	push   0x1
640157b6:	call   0x64014304
640157bb:	pop    ecx
640157bc:	push   0xc0000409
640157c1:	call   DWORD PTR ds:0x64024048
640157c7:	push   eax
640157c8:	call   DWORD PTR ds:0x64024108
640157ce:	leave  
640157cf:	ret    
640157d0:	push   esi
640157d1:	push   edi
640157d2:	xor    esi,esi
640157d4:	push   DWORD PTR [esp+0xc]
640157d8:	call   0x64013473
640157dd:	mov    edi,eax
640157df:	test   edi,edi
640157e1:	pop    ecx
640157e2:	jne    0x6401580b
640157e4:	cmp    DWORD PTR ds:0x6402d8ec,eax
640157ea:	jbe    0x6401580b
640157ec:	push   esi
640157ed:	call   DWORD PTR ds:0x6402404c
640157f3:	lea    eax,[esi+0x3e8]
640157f9:	cmp    eax,DWORD PTR ds:0x6402d8ec
640157ff:	jbe    0x64015804
64015801:	or     eax,0xffffffff
64015804:	cmp    eax,0xffffffff
64015807:	mov    esi,eax
64015809:	jne    0x640157d4
6401580b:	mov    eax,edi
6401580d:	pop    edi
6401580e:	pop    esi
6401580f:	ret    
64015810:	push   esi
64015811:	push   edi
64015812:	xor    esi,esi
64015814:	push   0x0
64015816:	push   DWORD PTR [esp+0x14]
6401581a:	push   DWORD PTR [esp+0x14]
6401581e:	call   0x6401ae03
64015823:	mov    edi,eax
64015825:	add    esp,0xc
64015828:	test   edi,edi
6401582a:	jne    0x64015853
6401582c:	cmp    DWORD PTR ds:0x6402d8ec,eax
64015832:	jbe    0x64015853
64015834:	push   esi
64015835:	call   DWORD PTR ds:0x6402404c
6401583b:	lea    eax,[esi+0x3e8]
64015841:	cmp    eax,DWORD PTR ds:0x6402d8ec
64015847:	jbe    0x6401584c
64015849:	or     eax,0xffffffff
6401584c:	cmp    eax,0xffffffff
6401584f:	mov    esi,eax
64015851:	jne    0x64015814
64015853:	mov    eax,edi
64015855:	pop    edi
64015856:	pop    esi
64015857:	ret    
64015858:	push   esi
64015859:	push   edi
6401585a:	xor    esi,esi
6401585c:	push   DWORD PTR [esp+0x10]
64015860:	push   DWORD PTR [esp+0x10]
64015864:	call   0x640138a5
64015869:	mov    edi,eax
6401586b:	test   edi,edi
6401586d:	pop    ecx
6401586e:	pop    ecx
6401586f:	jne    0x6401589e
64015871:	cmp    DWORD PTR [esp+0x10],eax
64015875:	je     0x6401589e
64015877:	cmp    DWORD PTR ds:0x6402d8ec,eax
6401587d:	jbe    0x6401589e
6401587f:	push   esi
64015880:	call   DWORD PTR ds:0x6402404c
64015886:	lea    eax,[esi+0x3e8]
6401588c:	cmp    eax,DWORD PTR ds:0x6402d8ec
64015892:	jbe    0x64015897
64015894:	or     eax,0xffffffff
64015897:	cmp    eax,0xffffffff
6401589a:	mov    esi,eax
6401589c:	jne    0x6401585c
6401589e:	mov    eax,edi
640158a0:	pop    edi
640158a1:	pop    esi
640158a2:	ret    
640158a3:	push   0x10
640158a5:	push   0x64029930
640158aa:	call   0x64013ac0
640158af:	xor    eax,eax
640158b1:	mov    ebx,DWORD PTR [ebp+0x8]
640158b4:	xor    edi,edi
640158b6:	cmp    ebx,edi
640158b8:	setne  al
640158bb:	cmp    eax,edi
640158bd:	jne    0x640158dc
640158bf:	call   0x640142c0
640158c4:	mov    DWORD PTR [eax],0x16
640158ca:	push   edi
640158cb:	push   edi
640158cc:	push   edi
640158cd:	push   edi
640158ce:	push   edi
640158cf:	call   0x640120b4
640158d4:	add    esp,0x14
640158d7:	or     eax,0xffffffff
640158da:	jmp    0x6401592f
640158dc:	cmp    DWORD PTR ds:0x6403143c,0x3
640158e3:	jne    0x6401591d
640158e5:	push   0x4
640158e7:	call   0x64019ac5
640158ec:	pop    ecx
640158ed:	mov    DWORD PTR [ebp-0x4],edi
640158f0:	push   ebx
640158f1:	call   0x64019b3e
640158f6:	pop    ecx
640158f7:	mov    DWORD PTR [ebp-0x20],eax
640158fa:	cmp    eax,edi
640158fc:	je     0x64015909
640158fe:	mov    esi,DWORD PTR [ebx-0x4]
64015901:	sub    esi,0x9
64015904:	mov    DWORD PTR [ebp-0x1c],esi
64015907:	jmp    0x6401590c
64015909:	mov    esi,DWORD PTR [ebp-0x1c]
6401590c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015913:	call   0x6401593d
64015918:	cmp    DWORD PTR [ebp-0x20],edi
6401591b:	jne    0x6401592d
6401591d:	push   ebx
6401591e:	push   edi
6401591f:	push   DWORD PTR ds:0x6402da8c
64015925:	call   DWORD PTR ds:0x64024100
6401592b:	mov    esi,eax
6401592d:	mov    eax,esi
6401592f:	call   0x64013b05
64015934:	ret    
64015935:	xor    edi,edi
64015937:	mov    ebx,DWORD PTR [ebp+0x8]
6401593a:	mov    esi,DWORD PTR [ebp-0x1c]
6401593d:	push   0x4
6401593f:	call   0x640199ed
64015944:	pop    ecx
64015945:	ret    
64015946:	call   0x6401a795
6401594b:	push   DWORD PTR [esp+0x4]
6401594f:	call   0x6401a5f5
64015954:	push   DWORD PTR ds:0x6402c260
6401595a:	call   0x640143ef
6401595f:	push   0xff
64015964:	call   eax
64015966:	add    esp,0xc
64015969:	ret    
6401596a:	push   0x64024c38
6401596f:	call   DWORD PTR ds:0x64024124
64015975:	test   eax,eax
64015977:	je     0x6401598f
64015979:	push   0x64024c28
6401597e:	push   eax
6401597f:	call   DWORD PTR ds:0x64024014
64015985:	test   eax,eax
64015987:	je     0x6401598f
64015989:	push   DWORD PTR [esp+0x4]
6401598d:	call   eax
6401598f:	ret    
64015990:	push   DWORD PTR [esp+0x4]
64015994:	call   0x6401596a
64015999:	pop    ecx
6401599a:	push   DWORD PTR [esp+0x4]
6401599e:	call   DWORD PTR ds:0x64024138
640159a4:	int3   
640159a5:	push   0x8
640159a7:	call   0x64019ac5
640159ac:	pop    ecx
640159ad:	ret    
640159ae:	push   0x8
640159b0:	call   0x640199ed
640159b5:	pop    ecx
640159b6:	ret    
640159b7:	push   esi
640159b8:	mov    esi,eax
640159ba:	jmp    0x640159c7
640159bc:	mov    eax,DWORD PTR [esi]
640159be:	test   eax,eax
640159c0:	je     0x640159c4
640159c2:	call   eax
640159c4:	add    esi,0x4
640159c7:	cmp    esi,DWORD PTR [esp+0x8]
640159cb:	jb     0x640159bc
640159cd:	pop    esi
640159ce:	ret    
640159cf:	push   esi
640159d0:	mov    esi,DWORD PTR [esp+0x8]
640159d4:	xor    eax,eax
640159d6:	jmp    0x640159e7
640159d8:	test   eax,eax
640159da:	jne    0x640159ed
640159dc:	mov    ecx,DWORD PTR [esi]
640159de:	test   ecx,ecx
640159e0:	je     0x640159e4
640159e2:	call   ecx
640159e4:	add    esi,0x4
640159e7:	cmp    esi,DWORD PTR [esp+0xc]
640159eb:	jb     0x640159d8
640159ed:	pop    esi
640159ee:	ret    
640159ef:	mov    ecx,DWORD PTR [esp+0x4]
640159f3:	push   esi
640159f4:	xor    esi,esi
640159f6:	cmp    ecx,esi
640159f8:	jne    0x64015a17
640159fa:	call   0x640142c0
640159ff:	push   esi
64015a00:	push   esi
64015a01:	push   esi
64015a02:	push   esi
64015a03:	push   esi
64015a04:	mov    DWORD PTR [eax],0x16
64015a0a:	call   0x640120b4
64015a0f:	add    esp,0x14
64015a12:	push   0x16
64015a14:	pop    eax
64015a15:	pop    esi
64015a16:	ret    
64015a17:	mov    eax,ds:0x6402d8f4
64015a1c:	cmp    eax,esi
64015a1e:	je     0x640159fa
64015a20:	mov    DWORD PTR [ecx],eax
64015a22:	xor    eax,eax
64015a24:	pop    esi
64015a25:	ret    
64015a26:	mov    eax,DWORD PTR [esp+0x4]
64015a2a:	push   esi
64015a2b:	xor    esi,esi
64015a2d:	cmp    eax,esi
64015a2f:	jne    0x64015a4e
64015a31:	call   0x640142c0
64015a36:	push   esi
64015a37:	push   esi
64015a38:	push   esi
64015a39:	push   esi
64015a3a:	push   esi
64015a3b:	mov    DWORD PTR [eax],0x16
64015a41:	call   0x640120b4
64015a46:	add    esp,0x14
64015a49:	push   0x16
64015a4b:	pop    eax
64015a4c:	pop    esi
64015a4d:	ret    
64015a4e:	cmp    DWORD PTR ds:0x6402d8f4,esi
64015a54:	je     0x64015a31
64015a56:	mov    ecx,DWORD PTR ds:0x6402d900
64015a5c:	mov    DWORD PTR [eax],ecx
64015a5e:	xor    eax,eax
64015a60:	pop    esi
64015a61:	ret    
64015a62:	cmp    DWORD PTR ds:0x640264ac,0x0
64015a69:	je     0x64015a85
64015a6b:	push   0x640264ac
64015a70:	call   0x6401ab10
64015a75:	test   eax,eax
64015a77:	pop    ecx
64015a78:	je     0x64015a85
64015a7a:	push   DWORD PTR [esp+0x4]
64015a7e:	call   DWORD PTR ds:0x640264ac
64015a84:	pop    ecx
64015a85:	call   0x6401af21
64015a8a:	push   0x64024218
64015a8f:	push   0x64024200
64015a94:	call   0x640159cf
64015a99:	test   eax,eax
64015a9b:	pop    ecx
64015a9c:	pop    ecx
64015a9d:	jne    0x64015af3
64015a9f:	push   esi
64015aa0:	push   edi
64015aa1:	push   0x64018540
64015aa6:	call   0x640126af
64015aab:	mov    esi,0x640241e4
64015ab0:	mov    eax,esi
64015ab2:	mov    edi,0x640241fc
64015ab7:	cmp    eax,edi
64015ab9:	pop    ecx
64015aba:	jae    0x64015acb
64015abc:	mov    eax,DWORD PTR [esi]
64015abe:	test   eax,eax
64015ac0:	je     0x64015ac4
64015ac2:	call   eax
64015ac4:	add    esi,0x4
64015ac7:	cmp    esi,edi
64015ac9:	jb     0x64015abc
64015acb:	cmp    DWORD PTR ds:0x64031578,0x0
64015ad2:	pop    edi
64015ad3:	pop    esi
64015ad4:	je     0x64015af1
64015ad6:	push   0x64031578
64015adb:	call   0x6401ab10
64015ae0:	test   eax,eax
64015ae2:	pop    ecx
64015ae3:	je     0x64015af1
64015ae5:	push   0x0
64015ae7:	push   0x2
64015ae9:	push   0x0
64015aeb:	call   DWORD PTR ds:0x64031578
64015af1:	xor    eax,eax
64015af3:	ret    
64015af4:	push   0x10
64015af6:	push   0x64029950
64015afb:	call   0x64013ac0
64015b00:	push   0x8
64015b02:	call   0x64019ac5
64015b07:	pop    ecx
64015b08:	xor    edi,edi
64015b0a:	mov    DWORD PTR [ebp-0x4],edi
64015b0d:	xor    ebx,ebx
64015b0f:	inc    ebx
64015b10:	cmp    DWORD PTR ds:0x6402d934,ebx
64015b16:	je     0x64015b96
64015b18:	mov    DWORD PTR ds:0x6402d930,ebx
64015b1e:	mov    al,BYTE PTR [ebp+0x10]
64015b21:	mov    ds:0x6402d92c,al
64015b26:	cmp    DWORD PTR [ebp+0xc],edi
64015b29:	jne    0x64015b86
64015b2b:	push   DWORD PTR ds:0x64031570
64015b31:	call   0x640143ef
64015b36:	mov    DWORD PTR [ebp-0x1c],eax
64015b39:	push   DWORD PTR ds:0x6403156c
64015b3f:	call   0x640143ef
64015b44:	pop    ecx
64015b45:	pop    ecx
64015b46:	mov    esi,eax
64015b48:	mov    DWORD PTR [ebp-0x20],esi
64015b4b:	cmp    DWORD PTR [ebp-0x1c],edi
64015b4e:	je     0x64015b76
64015b50:	sub    esi,0x4
64015b53:	mov    DWORD PTR [ebp-0x20],esi
64015b56:	cmp    esi,DWORD PTR [ebp-0x1c]
64015b59:	jb     0x64015b76
64015b5b:	cmp    DWORD PTR [esi],0x0
64015b5e:	je     0x64015b50
64015b60:	mov    edi,DWORD PTR [esi]
64015b62:	call   0x640143e6
64015b67:	cmp    edi,eax
64015b69:	je     0x64015b50
64015b6b:	push   edi
64015b6c:	call   0x640143ef
64015b71:	pop    ecx
64015b72:	call   eax
64015b74:	jmp    0x64015b50
64015b76:	push   0x64024228
64015b7b:	mov    eax,0x6402421c
64015b80:	call   0x640159b7
64015b85:	pop    ecx
64015b86:	push   0x64024230
64015b8b:	mov    eax,0x6402422c
64015b90:	call   0x640159b7
64015b95:	pop    ecx
64015b96:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015b9d:	call   0x64015bc1
64015ba2:	cmp    DWORD PTR [ebp+0x10],0x0
64015ba6:	jne    0x64015bd0
64015ba8:	mov    DWORD PTR ds:0x6402d934,ebx
64015bae:	push   0x8
64015bb0:	call   0x640199ed
64015bb5:	pop    ecx
64015bb6:	push   DWORD PTR [ebp+0x8]
64015bb9:	call   0x64015990
64015bbe:	xor    ebx,ebx
64015bc0:	inc    ebx
64015bc1:	cmp    DWORD PTR [ebp+0x10],0x0
64015bc5:	je     0x64015bcf
64015bc7:	push   0x8
64015bc9:	call   0x640199ed
64015bce:	pop    ecx
64015bcf:	ret    
64015bd0:	call   0x64013b05
64015bd5:	ret    
64015bd6:	push   0x0
64015bd8:	push   0x1
64015bda:	push   DWORD PTR [esp+0xc]
64015bde:	call   0x64015af4
64015be3:	add    esp,0xc
64015be6:	ret    
64015be7:	push   0x1
64015be9:	push   0x0
64015beb:	push   0x0
64015bed:	call   0x64015af4
64015bf2:	add    esp,0xc
64015bf5:	ret    
64015bf6:	push   esi
64015bf7:	call   0x640143e6
64015bfc:	mov    esi,eax
64015bfe:	push   esi
64015bff:	call   0x64014931
64015c04:	push   esi
64015c05:	call   0x6401b15e
64015c0a:	push   esi
64015c0b:	call   0x64011fae
64015c10:	push   esi
64015c11:	call   0x6401b154
64015c16:	push   esi
64015c17:	call   0x6401b14a
64015c1c:	push   esi
64015c1d:	call   0x6401af40
64015c22:	push   esi
64015c23:	call   0x6401e977
64015c28:	push   esi
64015c29:	call   0x6401566a
64015c2e:	push   0x64015bd6
64015c33:	call   0x64014378
64015c38:	add    esp,0x24
64015c3b:	mov    ds:0x6402c260,eax
64015c40:	pop    esi
64015c41:	ret    
64015c42:	sub    eax,0x3a4
64015c47:	je     0x64015c6b
64015c49:	sub    eax,0x4
64015c4c:	je     0x64015c65
64015c4e:	sub    eax,0xd
64015c51:	je     0x64015c5f
64015c53:	dec    eax
64015c54:	je     0x64015c59
64015c56:	xor    eax,eax
64015c58:	ret    
64015c59:	mov    eax,0x404
64015c5e:	ret    
64015c5f:	mov    eax,0x412
64015c64:	ret    
64015c65:	mov    eax,0x804
64015c6a:	ret    
64015c6b:	mov    eax,0x411
64015c70:	ret    
64015c71:	push   ebx
64015c72:	push   ebp
64015c73:	push   esi
64015c74:	push   edi
64015c75:	mov    ebp,0x101
64015c7a:	mov    esi,eax
64015c7c:	push   ebp
64015c7d:	xor    edi,edi
64015c7f:	lea    ebx,[esi+0x1c]
64015c82:	push   edi
64015c83:	push   ebx
64015c84:	call   0x64012c00
64015c89:	mov    DWORD PTR [esi+0x4],edi
64015c8c:	mov    DWORD PTR [esi+0x8],edi
64015c8f:	mov    DWORD PTR [esi+0xc],edi
64015c92:	xor    eax,eax
64015c94:	lea    edi,[esi+0x10]
64015c97:	stos   DWORD PTR es:[edi],eax
64015c98:	stos   DWORD PTR es:[edi],eax
64015c99:	stos   DWORD PTR es:[edi],eax
64015c9a:	mov    eax,0x6402c268
64015c9f:	add    esp,0xc
64015ca2:	sub    eax,esi
64015ca4:	mov    cl,BYTE PTR [eax+ebx*1]
64015ca7:	mov    BYTE PTR [ebx],cl
64015ca9:	inc    ebx
64015caa:	dec    ebp
64015cab:	jne    0x64015ca4
64015cad:	lea    ecx,[esi+0x11d]
64015cb3:	mov    esi,0x100
64015cb8:	mov    dl,BYTE PTR [ecx+eax*1]
64015cbb:	mov    BYTE PTR [ecx],dl
64015cbd:	inc    ecx
64015cbe:	dec    esi
64015cbf:	jne    0x64015cb8
64015cc1:	pop    edi
64015cc2:	pop    esi
64015cc3:	pop    ebp
64015cc4:	pop    ebx
64015cc5:	ret    
64015cc6:	push   ebp
64015cc7:	lea    ebp,[esp-0x49c]
64015cce:	sub    esp,0x51c
64015cd4:	mov    eax,ds:0x6402c09c
64015cd9:	xor    eax,ebp
64015cdb:	mov    DWORD PTR [ebp+0x498],eax
64015ce1:	push   ebx
64015ce2:	push   edi
64015ce3:	lea    eax,[ebp-0x7c]
64015ce6:	push   eax
64015ce7:	push   DWORD PTR [esi+0x4]
64015cea:	call   DWORD PTR ds:0x6402413c
64015cf0:	test   eax,eax
64015cf2:	mov    edi,0x100
64015cf7:	je     0x64015dec
64015cfd:	xor    eax,eax
64015cff:	mov    BYTE PTR [ebp+eax*1+0x398],al
64015d06:	inc    eax
64015d07:	cmp    eax,edi
64015d09:	jb     0x64015cff
64015d0b:	mov    al,BYTE PTR [ebp-0x76]
64015d0e:	test   al,al
64015d10:	mov    BYTE PTR [ebp+0x398],0x20
64015d17:	je     0x64015d44
64015d19:	lea    ebx,[ebp-0x75]
64015d1c:	movzx  ecx,al
64015d1f:	movzx  eax,BYTE PTR [ebx]
64015d22:	cmp    ecx,eax
64015d24:	ja     0x64015d3c
64015d26:	sub    eax,ecx
64015d28:	inc    eax
64015d29:	push   eax
64015d2a:	lea    edx,[ebp+ecx*1+0x398]
64015d31:	push   0x20
64015d33:	push   edx
64015d34:	call   0x64012c00
64015d39:	add    esp,0xc
64015d3c:	inc    ebx
64015d3d:	mov    al,BYTE PTR [ebx]
64015d3f:	inc    ebx
64015d40:	test   al,al
64015d42:	jne    0x64015d1c
64015d44:	push   0x0
64015d46:	push   DWORD PTR [esi+0xc]
64015d49:	lea    eax,[ebp-0x68]
64015d4c:	push   DWORD PTR [esi+0x4]
64015d4f:	push   eax
64015d50:	push   edi
64015d51:	lea    eax,[ebp+0x398]
64015d57:	push   eax
64015d58:	push   0x1
64015d5a:	push   0x0
64015d5c:	call   0x6401b3f5
64015d61:	xor    ebx,ebx
64015d63:	push   ebx
64015d64:	push   DWORD PTR [esi+0x4]
64015d67:	lea    eax,[ebp+0x298]
64015d6d:	push   edi
64015d6e:	push   eax
64015d6f:	push   edi
64015d70:	lea    eax,[ebp+0x398]
64015d76:	push   eax
64015d77:	push   edi
64015d78:	push   DWORD PTR [esi+0xc]
64015d7b:	push   ebx
64015d7c:	call   0x640198c8
64015d81:	add    esp,0x44
64015d84:	push   ebx
64015d85:	push   DWORD PTR [esi+0x4]
64015d88:	lea    eax,[ebp+0x198]
64015d8e:	push   edi
64015d8f:	push   eax
64015d90:	push   edi
64015d91:	lea    eax,[ebp+0x398]
64015d97:	push   eax
64015d98:	push   0x200
64015d9d:	push   DWORD PTR [esi+0xc]
64015da0:	push   ebx
64015da1:	call   0x640198c8
64015da6:	add    esp,0x24
64015da9:	xor    eax,eax
64015dab:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
64015db0:	test   cl,0x1
64015db3:	je     0x64015dc3
64015db5:	or     BYTE PTR [esi+eax*1+0x1d],0x10
64015dba:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
64015dc1:	jmp    0x64015dd4
64015dc3:	test   cl,0x2
64015dc6:	je     0x64015ddd
64015dc8:	or     BYTE PTR [esi+eax*1+0x1d],0x20
64015dcd:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
64015dd4:	mov    BYTE PTR [esi+eax*1+0x11d],cl
64015ddb:	jmp    0x64015de5
64015ddd:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
64015de5:	inc    eax
64015de6:	cmp    eax,edi
64015de8:	jb     0x64015dab
64015dea:	jmp    0x64015e39
64015dec:	lea    eax,[esi+0x11d]
64015df2:	mov    DWORD PTR [ebp-0x80],0xffffff9f
64015df9:	xor    ecx,ecx
64015dfb:	sub    DWORD PTR [ebp-0x80],eax
64015dfe:	mov    edx,DWORD PTR [ebp-0x80]
64015e01:	lea    eax,[esi+ecx*1+0x11d]
64015e08:	add    edx,eax
64015e0a:	lea    ebx,[edx+0x20]
64015e0d:	cmp    ebx,0x19
64015e10:	ja     0x64015e1e
64015e12:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
64015e17:	mov    dl,cl
64015e19:	add    dl,0x20
64015e1c:	jmp    0x64015e2d
64015e1e:	cmp    edx,0x19
64015e21:	ja     0x64015e31
64015e23:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
64015e28:	mov    dl,cl
64015e2a:	sub    dl,0x20
64015e2d:	mov    BYTE PTR [eax],dl
64015e2f:	jmp    0x64015e34
64015e31:	mov    BYTE PTR [eax],0x0
64015e34:	inc    ecx
64015e35:	cmp    ecx,edi
64015e37:	jb     0x64015dfe
64015e39:	mov    ecx,DWORD PTR [ebp+0x498]
64015e3f:	pop    edi
64015e40:	xor    ecx,ebp
64015e42:	pop    ebx
64015e43:	call   0x6401257c
64015e48:	add    ebp,0x49c
64015e4e:	leave  
64015e4f:	ret    
64015e50:	push   0xc
64015e52:	push   0x64029970
64015e57:	call   0x64013ac0
64015e5c:	call   0x6401460b
64015e61:	mov    edi,eax
64015e63:	mov    eax,ds:0x6402c78c
64015e68:	test   DWORD PTR [edi+0x70],eax
64015e6b:	je     0x64015e8a
64015e6d:	cmp    DWORD PTR [edi+0x6c],0x0
64015e71:	je     0x64015e8a
64015e73:	mov    esi,DWORD PTR [edi+0x68]
64015e76:	test   esi,esi
64015e78:	jne    0x64015e82
64015e7a:	push   0x20
64015e7c:	call   0x64015946
64015e81:	pop    ecx
64015e82:	mov    eax,esi
64015e84:	call   0x64013b05
64015e89:	ret    
64015e8a:	push   0xd
64015e8c:	call   0x64019ac5
64015e91:	pop    ecx
64015e92:	and    DWORD PTR [ebp-0x4],0x0
64015e96:	mov    esi,DWORD PTR [edi+0x68]
64015e99:	mov    DWORD PTR [ebp-0x1c],esi
64015e9c:	cmp    esi,DWORD PTR ds:0x6402c690
64015ea2:	je     0x64015eda
64015ea4:	test   esi,esi
64015ea6:	je     0x64015ec2
64015ea8:	push   esi
64015ea9:	call   DWORD PTR ds:0x64024098
64015eaf:	test   eax,eax
64015eb1:	jne    0x64015ec2
64015eb3:	cmp    esi,0x6402c268
64015eb9:	je     0x64015ec2
64015ebb:	push   esi
64015ebc:	call   0x64013396
64015ec1:	pop    ecx
64015ec2:	mov    eax,ds:0x6402c690
64015ec7:	mov    DWORD PTR [edi+0x68],eax
64015eca:	mov    esi,DWORD PTR ds:0x6402c690
64015ed0:	mov    DWORD PTR [ebp-0x1c],esi
64015ed3:	push   esi
64015ed4:	call   DWORD PTR ds:0x64024020
64015eda:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015ee1:	call   0x64015eeb
64015ee6:	jmp    0x64015e76
64015ee8:	mov    esi,DWORD PTR [ebp-0x1c]
64015eeb:	push   0xd
64015eed:	call   0x640199ed
64015ef2:	pop    ecx
64015ef3:	ret    
64015ef4:	push   ebp
64015ef5:	mov    ebp,esp
64015ef7:	sub    esp,0x10
64015efa:	push   ebx
64015efb:	xor    ebx,ebx
64015efd:	push   ebx
64015efe:	lea    ecx,[ebp-0x10]
64015f01:	call   0x6401271f
64015f06:	cmp    esi,0xfffffffe
64015f09:	mov    DWORD PTR ds:0x6402d938,ebx
64015f0f:	jne    0x64015f2f
64015f11:	mov    DWORD PTR ds:0x6402d938,0x1
64015f1b:	call   DWORD PTR ds:0x64024140
64015f21:	cmp    BYTE PTR [ebp-0x4],bl
64015f24:	je     0x64015f6b
64015f26:	mov    ecx,DWORD PTR [ebp-0x8]
64015f29:	and    DWORD PTR [ecx+0x70],0xfffffffd
64015f2d:	jmp    0x64015f6b
64015f2f:	cmp    esi,0xfffffffd
64015f32:	jne    0x64015f46
64015f34:	mov    DWORD PTR ds:0x6402d938,0x1
64015f3e:	call   DWORD PTR ds:0x640240dc
64015f44:	jmp    0x64015f21
64015f46:	cmp    esi,0xfffffffc
64015f49:	jne    0x64015f5d
64015f4b:	mov    eax,DWORD PTR [ebp-0x10]
64015f4e:	mov    eax,DWORD PTR [eax+0x4]
64015f51:	mov    DWORD PTR ds:0x6402d938,0x1
64015f5b:	jmp    0x64015f21
64015f5d:	cmp    BYTE PTR [ebp-0x4],bl
64015f60:	je     0x64015f69
64015f62:	mov    eax,DWORD PTR [ebp-0x8]
64015f65:	and    DWORD PTR [eax+0x70],0xfffffffd
64015f69:	mov    eax,esi
64015f6b:	pop    ebx
64015f6c:	leave  
64015f6d:	ret    
64015f6e:	push   ebp
64015f6f:	mov    ebp,esp
64015f71:	sub    esp,0x20
64015f74:	mov    eax,ds:0x6402c09c
64015f79:	xor    eax,ebp
64015f7b:	mov    DWORD PTR [ebp-0x4],eax
64015f7e:	push   ebx
64015f7f:	mov    ebx,DWORD PTR [ebp+0xc]
64015f82:	push   esi
64015f83:	mov    esi,DWORD PTR [ebp+0x8]
64015f86:	push   edi
64015f87:	call   0x64015ef4
64015f8c:	mov    edi,eax
64015f8e:	xor    esi,esi
64015f90:	cmp    edi,esi
64015f92:	mov    DWORD PTR [ebp+0x8],edi
64015f95:	jne    0x64015fa5
64015f97:	mov    eax,ebx
64015f99:	call   0x64015c71
64015f9e:	xor    eax,eax
64015fa0:	jmp    0x64016138
64015fa5:	mov    DWORD PTR [ebp-0x1c],esi
64015fa8:	xor    eax,eax
64015faa:	cmp    DWORD PTR [eax+0x6402c698],edi
64015fb0:	je     0x64016047
64015fb6:	inc    DWORD PTR [ebp-0x1c]
64015fb9:	add    eax,0x30
64015fbc:	cmp    eax,0xf0
64015fc1:	jb     0x64015faa
64015fc3:	cmp    edi,0xfde8
64015fc9:	je     0x64016135
64015fcf:	cmp    edi,0xfde9
64015fd5:	je     0x64016135
64015fdb:	movzx  eax,di
64015fde:	push   eax
64015fdf:	call   DWORD PTR ds:0x64024144
64015fe5:	test   eax,eax
64015fe7:	je     0x64016135
64015fed:	lea    eax,[ebp-0x18]
64015ff0:	push   eax
64015ff1:	push   edi
64015ff2:	call   DWORD PTR ds:0x6402413c
64015ff8:	test   eax,eax
64015ffa:	je     0x64016129
64016000:	push   0x101
64016005:	lea    eax,[ebx+0x1c]
64016008:	push   esi
64016009:	push   eax
6401600a:	call   0x64012c00
6401600f:	xor    edx,edx
64016011:	inc    edx
64016012:	add    esp,0xc
64016015:	cmp    DWORD PTR [ebp-0x18],edx
64016018:	mov    DWORD PTR [ebx+0x4],edi
6401601b:	mov    DWORD PTR [ebx+0xc],esi
6401601e:	jbe    0x6401611c
64016024:	cmp    BYTE PTR [ebp-0x12],0x0
64016028:	je     0x640160fd
6401602e:	lea    esi,[ebp-0x11]
64016031:	mov    cl,BYTE PTR [esi]
64016033:	test   cl,cl
64016035:	je     0x640160fd
6401603b:	movzx  eax,BYTE PTR [esi-0x1]
6401603f:	movzx  ecx,cl
64016042:	jmp    0x640160ed
64016047:	push   0x101
6401604c:	lea    eax,[ebx+0x1c]
6401604f:	push   esi
64016050:	push   eax
64016051:	call   0x64012c00
64016056:	mov    ecx,DWORD PTR [ebp-0x1c]
64016059:	add    esp,0xc
6401605c:	imul   ecx,ecx,0x30
6401605f:	mov    DWORD PTR [ebp-0x20],esi
64016062:	lea    esi,[ecx+0x6402c6a8]
64016068:	mov    DWORD PTR [ebp-0x1c],esi
6401606b:	jmp    0x64016097
6401606d:	mov    al,BYTE PTR [esi+0x1]
64016070:	test   al,al
64016072:	je     0x6401609c
64016074:	movzx  edi,BYTE PTR [esi]
64016077:	movzx  eax,al
6401607a:	jmp    0x6401608e
6401607c:	mov    eax,DWORD PTR [ebp-0x20]
6401607f:	mov    al,BYTE PTR [eax+0x6402c694]
64016085:	or     BYTE PTR [ebx+edi*1+0x1d],al
64016089:	movzx  eax,BYTE PTR [esi+0x1]
6401608d:	inc    edi
6401608e:	cmp    edi,eax
64016090:	jbe    0x6401607c
64016092:	mov    edi,DWORD PTR [ebp+0x8]
64016095:	inc    esi
64016096:	inc    esi
64016097:	cmp    BYTE PTR [esi],0x0
6401609a:	jne    0x6401606d
6401609c:	mov    esi,DWORD PTR [ebp-0x1c]
6401609f:	inc    DWORD PTR [ebp-0x20]
640160a2:	add    esi,0x8
640160a5:	cmp    DWORD PTR [ebp-0x20],0x4
640160a9:	mov    DWORD PTR [ebp-0x1c],esi
640160ac:	jb     0x64016097
640160ae:	mov    eax,edi
640160b0:	mov    DWORD PTR [ebx+0x4],edi
640160b3:	mov    DWORD PTR [ebx+0x8],0x1
640160ba:	call   0x64015c42
640160bf:	push   0x6
640160c1:	mov    DWORD PTR [ebx+0xc],eax
640160c4:	lea    eax,[ebx+0x10]
640160c7:	lea    ecx,[ecx+0x6402c69c]
640160cd:	pop    edx
640160ce:	mov    si,WORD PTR [ecx]
640160d1:	inc    ecx
640160d2:	mov    WORD PTR [eax],si
640160d5:	inc    ecx
640160d6:	inc    eax
640160d7:	inc    eax
640160d8:	dec    edx
640160d9:	jne    0x640160ce
640160db:	mov    esi,ebx
640160dd:	call   0x64015cc6
640160e2:	jmp    0x64015f9e
640160e7:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
640160ec:	inc    eax
640160ed:	cmp    eax,ecx
640160ef:	jbe    0x640160e7
640160f1:	inc    esi
640160f2:	inc    esi
640160f3:	cmp    BYTE PTR [esi-0x1],0x0
640160f7:	jne    0x64016031
640160fd:	lea    eax,[ebx+0x1e]
64016100:	mov    ecx,0xfe
64016105:	or     BYTE PTR [eax],0x8
64016108:	inc    eax
64016109:	dec    ecx
6401610a:	jne    0x64016105
6401610c:	mov    eax,DWORD PTR [ebx+0x4]
6401610f:	call   0x64015c42
64016114:	mov    DWORD PTR [ebx+0xc],eax
64016117:	mov    DWORD PTR [ebx+0x8],edx
6401611a:	jmp    0x6401611f
6401611c:	mov    DWORD PTR [ebx+0x8],esi
6401611f:	xor    eax,eax
64016121:	lea    edi,[ebx+0x10]
64016124:	stos   DWORD PTR es:[edi],eax
64016125:	stos   DWORD PTR es:[edi],eax
64016126:	stos   DWORD PTR es:[edi],eax
64016127:	jmp    0x640160db
64016129:	cmp    DWORD PTR ds:0x6402d938,esi
6401612f:	jne    0x64015f97
64016135:	or     eax,0xffffffff
64016138:	mov    ecx,DWORD PTR [ebp-0x4]
6401613b:	pop    edi
6401613c:	pop    esi
6401613d:	xor    ecx,ebp
6401613f:	pop    ebx
64016140:	call   0x6401257c
64016145:	leave  
64016146:	ret    
64016147:	push   0x14
64016149:	push   0x64029990
6401614e:	call   0x64013ac0
64016153:	or     DWORD PTR [ebp-0x20],0xffffffff
64016157:	call   0x6401460b
6401615c:	mov    edi,eax
6401615e:	mov    DWORD PTR [ebp-0x24],edi
64016161:	call   0x64015e50
64016166:	mov    ebx,DWORD PTR [edi+0x68]
64016169:	mov    esi,DWORD PTR [ebp+0x8]
6401616c:	call   0x64015ef4
64016171:	mov    DWORD PTR [ebp+0x8],eax
64016174:	cmp    eax,DWORD PTR [ebx+0x4]
64016177:	je     0x640162d4
6401617d:	push   0x220
64016182:	call   0x640157d0
64016187:	pop    ecx
64016188:	mov    ebx,eax
6401618a:	test   ebx,ebx
6401618c:	je     0x640162d8
64016192:	mov    ecx,0x88
64016197:	mov    esi,DWORD PTR [edi+0x68]
6401619a:	mov    edi,ebx
6401619c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401619e:	and    DWORD PTR [ebx],0x0
640161a1:	push   ebx
640161a2:	push   DWORD PTR [ebp+0x8]
640161a5:	call   0x64015f6e
640161aa:	pop    ecx
640161ab:	pop    ecx
640161ac:	mov    DWORD PTR [ebp-0x20],eax
640161af:	test   eax,eax
640161b1:	jne    0x640162b3
640161b7:	mov    esi,DWORD PTR [ebp-0x24]
640161ba:	push   DWORD PTR [esi+0x68]
640161bd:	call   DWORD PTR ds:0x64024098
640161c3:	test   eax,eax
640161c5:	jne    0x640161d8
640161c7:	mov    eax,DWORD PTR [esi+0x68]
640161ca:	cmp    eax,0x6402c268
640161cf:	je     0x640161d8
640161d1:	push   eax
640161d2:	call   0x64013396
640161d7:	pop    ecx
640161d8:	mov    DWORD PTR [esi+0x68],ebx
640161db:	push   ebx
640161dc:	mov    edi,DWORD PTR ds:0x64024020
640161e2:	call   edi
640161e4:	test   BYTE PTR [esi+0x70],0x2
640161e8:	jne    0x640162d8
640161ee:	test   BYTE PTR ds:0x6402c78c,0x1
640161f5:	jne    0x640162d8
640161fb:	push   0xd
640161fd:	call   0x64019ac5
64016202:	pop    ecx
64016203:	and    DWORD PTR [ebp-0x4],0x0
64016207:	mov    eax,DWORD PTR [ebx+0x4]
6401620a:	mov    ds:0x6402d948,eax
6401620f:	mov    eax,DWORD PTR [ebx+0x8]
64016212:	mov    ds:0x6402d94c,eax
64016217:	mov    eax,DWORD PTR [ebx+0xc]
6401621a:	mov    ds:0x6402d950,eax
6401621f:	xor    eax,eax
64016221:	mov    DWORD PTR [ebp-0x1c],eax
64016224:	cmp    eax,0x5
64016227:	jge    0x64016239
64016229:	mov    cx,WORD PTR [ebx+eax*2+0x10]
6401622e:	mov    WORD PTR [eax*2+0x6402d93c],cx
64016236:	inc    eax
64016237:	jmp    0x64016221
64016239:	xor    eax,eax
6401623b:	mov    DWORD PTR [ebp-0x1c],eax
6401623e:	cmp    eax,0x101
64016243:	jge    0x64016252
64016245:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
64016249:	mov    BYTE PTR [eax+0x6402c488],cl
6401624f:	inc    eax
64016250:	jmp    0x6401623b
64016252:	xor    eax,eax
64016254:	mov    DWORD PTR [ebp-0x1c],eax
64016257:	cmp    eax,0x100
6401625c:	jge    0x6401626e
6401625e:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
64016265:	mov    BYTE PTR [eax+0x6402c590],cl
6401626b:	inc    eax
6401626c:	jmp    0x64016254
6401626e:	push   DWORD PTR ds:0x6402c690
64016274:	call   DWORD PTR ds:0x64024098
6401627a:	test   eax,eax
6401627c:	jne    0x64016291
6401627e:	mov    eax,ds:0x6402c690
64016283:	cmp    eax,0x6402c268
64016288:	je     0x64016291
6401628a:	push   eax
6401628b:	call   0x64013396
64016290:	pop    ecx
64016291:	mov    DWORD PTR ds:0x6402c690,ebx
64016297:	push   ebx
64016298:	call   edi
6401629a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640162a1:	call   0x640162a8
640162a6:	jmp    0x640162d8
640162a8:	push   0xd
640162aa:	call   0x640199ed
640162af:	pop    ecx
640162b0:	ret    
640162b1:	jmp    0x640162d8
640162b3:	cmp    eax,0xffffffff
640162b6:	jne    0x640162d8
640162b8:	cmp    ebx,0x6402c268
640162be:	je     0x640162c7
640162c0:	push   ebx
640162c1:	call   0x64013396
640162c6:	pop    ecx
640162c7:	call   0x640142c0
640162cc:	mov    DWORD PTR [eax],0x16
640162d2:	jmp    0x640162d8
640162d4:	and    DWORD PTR [ebp-0x20],0x0
640162d8:	mov    eax,DWORD PTR [ebp-0x20]
640162db:	call   0x64013b05
640162e0:	ret    
640162e1:	cmp    DWORD PTR ds:0x64031574,0x0
640162e8:	jne    0x640162fc
640162ea:	push   0xfffffffd
640162ec:	call   0x64016147
640162f1:	pop    ecx
640162f2:	mov    DWORD PTR ds:0x64031574,0x1
640162fc:	xor    eax,eax
640162fe:	ret    
640162ff:	push   ebx
64016300:	push   ebp
64016301:	push   esi
64016302:	mov    esi,DWORD PTR [esp+0x10]
64016306:	mov    eax,DWORD PTR [esi+0xbc]
6401630c:	xor    ebp,ebp
6401630e:	cmp    eax,ebp
64016310:	push   edi
64016311:	je     0x64016382
64016313:	cmp    eax,0x6402cc38
64016318:	je     0x64016382
6401631a:	mov    eax,DWORD PTR [esi+0xb0]
64016320:	cmp    eax,ebp
64016322:	je     0x64016382
64016324:	cmp    DWORD PTR [eax],ebp
64016326:	jne    0x64016382
64016328:	mov    eax,DWORD PTR [esi+0xb8]
6401632e:	cmp    eax,ebp
64016330:	je     0x64016349
64016332:	cmp    DWORD PTR [eax],ebp
64016334:	jne    0x64016349
64016336:	push   eax
64016337:	call   0x64013396
6401633c:	push   DWORD PTR [esi+0xbc]
64016342:	call   0x6401b605
64016347:	pop    ecx
64016348:	pop    ecx
64016349:	mov    eax,DWORD PTR [esi+0xb4]
6401634f:	cmp    eax,ebp
64016351:	je     0x6401636a
64016353:	cmp    DWORD PTR [eax],ebp
64016355:	jne    0x6401636a
64016357:	push   eax
64016358:	call   0x64013396
6401635d:	push   DWORD PTR [esi+0xbc]
64016363:	call   0x6401b5c5
64016368:	pop    ecx
64016369:	pop    ecx
6401636a:	push   DWORD PTR [esi+0xb0]
64016370:	call   0x64013396
64016375:	push   DWORD PTR [esi+0xbc]
6401637b:	call   0x64013396
64016380:	pop    ecx
64016381:	pop    ecx
64016382:	mov    eax,DWORD PTR [esi+0xc0]
64016388:	cmp    eax,ebp
6401638a:	je     0x640163d0
6401638c:	cmp    DWORD PTR [eax],ebp
6401638e:	jne    0x640163d0
64016390:	mov    eax,DWORD PTR [esi+0xc4]
64016396:	sub    eax,0xfe
6401639b:	push   eax
6401639c:	call   0x64013396
640163a1:	mov    eax,DWORD PTR [esi+0xcc]
640163a7:	mov    edi,0x80
640163ac:	sub    eax,edi
640163ae:	push   eax
640163af:	call   0x64013396
640163b4:	mov    eax,DWORD PTR [esi+0xd0]
640163ba:	sub    eax,edi
640163bc:	push   eax
640163bd:	call   0x64013396
640163c2:	push   DWORD PTR [esi+0xc0]
640163c8:	call   0x64013396
640163cd:	add    esp,0x10
640163d0:	lea    edi,[esi+0xd4]
640163d6:	mov    eax,DWORD PTR [edi]
640163d8:	cmp    eax,0x6402cb78
640163dd:	je     0x640163f6
640163df:	cmp    DWORD PTR [eax+0xb4],ebp
640163e5:	jne    0x640163f6
640163e7:	push   eax
640163e8:	call   0x6401b435
640163ed:	push   DWORD PTR [edi]
640163ef:	call   0x64013396
640163f4:	pop    ecx
640163f5:	pop    ecx
640163f6:	push   0x6
640163f8:	lea    edi,[esi+0x50]
640163fb:	pop    ebx
640163fc:	cmp    DWORD PTR [edi-0x8],0x6402c790
64016403:	je     0x64016416
64016405:	mov    eax,DWORD PTR [edi]
64016407:	cmp    eax,ebp
64016409:	je     0x64016416
6401640b:	cmp    DWORD PTR [eax],ebp
6401640d:	jne    0x64016416
6401640f:	push   eax
64016410:	call   0x64013396
64016415:	pop    ecx
64016416:	cmp    DWORD PTR [edi-0x4],ebp
64016419:	je     0x6401642d
6401641b:	mov    eax,DWORD PTR [edi+0x4]
6401641e:	cmp    eax,ebp
64016420:	je     0x6401642d
64016422:	cmp    DWORD PTR [eax],ebp
64016424:	jne    0x6401642d
64016426:	push   eax
64016427:	call   0x64013396
6401642c:	pop    ecx
6401642d:	add    edi,0x10
64016430:	dec    ebx
64016431:	jne    0x640163fc
64016433:	push   esi
64016434:	call   0x64013396
64016439:	pop    ecx
6401643a:	pop    edi
6401643b:	pop    esi
6401643c:	pop    ebp
6401643d:	pop    ebx
6401643e:	ret    
6401643f:	push   ebx
64016440:	push   ebp
64016441:	push   esi
64016442:	mov    esi,DWORD PTR [esp+0x10]
64016446:	push   edi
64016447:	mov    edi,DWORD PTR ds:0x64024020
6401644d:	push   esi
6401644e:	call   edi
64016450:	mov    eax,DWORD PTR [esi+0xb0]
64016456:	test   eax,eax
64016458:	je     0x6401645d
6401645a:	push   eax
6401645b:	call   edi
6401645d:	mov    eax,DWORD PTR [esi+0xb8]
64016463:	test   eax,eax
64016465:	je     0x6401646a
64016467:	push   eax
64016468:	call   edi
6401646a:	mov    eax,DWORD PTR [esi+0xb4]
64016470:	test   eax,eax
64016472:	je     0x64016477
64016474:	push   eax
64016475:	call   edi
64016477:	mov    eax,DWORD PTR [esi+0xc0]
6401647d:	test   eax,eax
6401647f:	je     0x64016484
64016481:	push   eax
64016482:	call   edi
64016484:	push   0x6
64016486:	lea    ebx,[esi+0x50]
64016489:	pop    ebp
6401648a:	cmp    DWORD PTR [ebx-0x8],0x6402c790
64016491:	je     0x6401649c
64016493:	mov    eax,DWORD PTR [ebx]
64016495:	test   eax,eax
64016497:	je     0x6401649c
64016499:	push   eax
6401649a:	call   edi
6401649c:	cmp    DWORD PTR [ebx-0x4],0x0
640164a0:	je     0x640164ac
640164a2:	mov    eax,DWORD PTR [ebx+0x4]
640164a5:	test   eax,eax
640164a7:	je     0x640164ac
640164a9:	push   eax
640164aa:	call   edi
640164ac:	add    ebx,0x10
640164af:	dec    ebp
640164b0:	jne    0x6401648a
640164b2:	mov    eax,DWORD PTR [esi+0xd4]
640164b8:	add    eax,0xb4
640164bd:	push   eax
640164be:	call   edi
640164c0:	pop    edi
640164c1:	pop    esi
640164c2:	pop    ebp
640164c3:	pop    ebx
640164c4:	ret    
640164c5:	push   esi
640164c6:	mov    esi,DWORD PTR [esp+0x8]
640164ca:	test   esi,esi
640164cc:	je     0x6401654d
640164ce:	push   ebx
640164cf:	push   ebp
640164d0:	push   edi
640164d1:	mov    edi,DWORD PTR ds:0x64024098
640164d7:	push   esi
640164d8:	call   edi
640164da:	mov    eax,DWORD PTR [esi+0xb0]
640164e0:	test   eax,eax
640164e2:	je     0x640164e7
640164e4:	push   eax
640164e5:	call   edi
640164e7:	mov    eax,DWORD PTR [esi+0xb8]
640164ed:	test   eax,eax
640164ef:	je     0x640164f4
640164f1:	push   eax
640164f2:	call   edi
640164f4:	mov    eax,DWORD PTR [esi+0xb4]
640164fa:	test   eax,eax
640164fc:	je     0x64016501
640164fe:	push   eax
640164ff:	call   edi
64016501:	mov    eax,DWORD PTR [esi+0xc0]
64016507:	test   eax,eax
64016509:	je     0x6401650e
6401650b:	push   eax
6401650c:	call   edi
6401650e:	push   0x6
64016510:	lea    ebx,[esi+0x50]
64016513:	pop    ebp
64016514:	cmp    DWORD PTR [ebx-0x8],0x6402c790
6401651b:	je     0x64016526
6401651d:	mov    eax,DWORD PTR [ebx]
6401651f:	test   eax,eax
64016521:	je     0x64016526
64016523:	push   eax
64016524:	call   edi
64016526:	cmp    DWORD PTR [ebx-0x4],0x0
6401652a:	je     0x64016536
6401652c:	mov    eax,DWORD PTR [ebx+0x4]
6401652f:	test   eax,eax
64016531:	je     0x64016536
64016533:	push   eax
64016534:	call   edi
64016536:	add    ebx,0x10
64016539:	dec    ebp
6401653a:	jne    0x64016514
6401653c:	mov    eax,DWORD PTR [esi+0xd4]
64016542:	add    eax,0xb4
64016547:	push   eax
64016548:	call   edi
6401654a:	pop    edi
6401654b:	pop    ebp
6401654c:	pop    ebx
6401654d:	mov    eax,esi
6401654f:	pop    esi
64016550:	ret    
64016551:	test   edi,edi
64016553:	je     0x6401658c
64016555:	test   eax,eax
64016557:	je     0x6401658c
64016559:	push   esi
6401655a:	mov    esi,DWORD PTR [eax]
6401655c:	cmp    esi,edi
6401655e:	je     0x64016588
64016560:	push   edi
64016561:	mov    DWORD PTR [eax],edi
64016563:	call   0x6401643f
64016568:	test   esi,esi
6401656a:	pop    ecx
6401656b:	je     0x64016588
6401656d:	push   esi
6401656e:	call   0x640164c5
64016573:	cmp    DWORD PTR [esi],0x0
64016576:	pop    ecx
64016577:	jne    0x64016588
64016579:	cmp    esi,0x6402c798
6401657f:	je     0x64016588
64016581:	push   esi
64016582:	call   0x640162ff
64016587:	pop    ecx
64016588:	mov    eax,edi
6401658a:	pop    esi
6401658b:	ret    
6401658c:	xor    eax,eax
6401658e:	ret    
6401658f:	push   0xc
64016591:	push   0x640299b0
64016596:	call   0x64013ac0
6401659b:	call   0x6401460b
640165a0:	mov    esi,eax
640165a2:	mov    eax,ds:0x6402c78c
640165a7:	test   DWORD PTR [esi+0x70],eax
640165aa:	je     0x640165ce
640165ac:	cmp    DWORD PTR [esi+0x6c],0x0
640165b0:	je     0x640165ce
640165b2:	call   0x6401460b
640165b7:	mov    esi,DWORD PTR [eax+0x6c]
640165ba:	test   esi,esi
640165bc:	jne    0x640165c6
640165be:	push   0x20
640165c0:	call   0x64015946
640165c5:	pop    ecx
640165c6:	mov    eax,esi
640165c8:	call   0x64013b05
640165cd:	ret    
640165ce:	push   0xc
640165d0:	call   0x64019ac5
640165d5:	pop    ecx
640165d6:	and    DWORD PTR [ebp-0x4],0x0
640165da:	lea    eax,[esi+0x6c]
640165dd:	mov    edi,DWORD PTR ds:0x6402c870
640165e3:	call   0x64016551
640165e8:	mov    DWORD PTR [ebp-0x1c],eax
640165eb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640165f2:	call   0x640165f9
640165f7:	jmp    0x640165ba
640165f9:	push   0xc
640165fb:	call   0x640199ed
64016600:	pop    ecx
64016601:	mov    esi,DWORD PTR [ebp-0x1c]
64016604:	ret    
64016605:	push   ebp
64016606:	mov    ebp,esp
64016608:	push   ecx
64016609:	push   esi
6401660a:	mov    esi,DWORD PTR [ebp+0xc]
6401660d:	push   esi
6401660e:	call   0x6401c31d
64016613:	mov    DWORD PTR [ebp+0xc],eax
64016616:	mov    eax,DWORD PTR [esi+0xc]
64016619:	test   al,0x82
6401661b:	pop    ecx
6401661c:	jne    0x64016635
6401661e:	call   0x640142c0
64016623:	mov    DWORD PTR [eax],0x9
64016629:	or     DWORD PTR [esi+0xc],0x20
6401662d:	or     eax,0xffffffff
64016630:	jmp    0x64016762
64016635:	test   al,0x40
64016637:	je     0x64016646
64016639:	call   0x640142c0
6401663e:	mov    DWORD PTR [eax],0x22
64016644:	jmp    0x64016629
64016646:	push   ebx
64016647:	xor    ebx,ebx
64016649:	test   al,0x1
6401664b:	je     0x64016663
6401664d:	test   al,0x10
6401664f:	mov    DWORD PTR [esi+0x4],ebx
64016652:	je     0x640166dd
64016658:	mov    ecx,DWORD PTR [esi+0x8]
6401665b:	and    eax,0xfffffffe
6401665e:	mov    DWORD PTR [esi],ecx
64016660:	mov    DWORD PTR [esi+0xc],eax
64016663:	mov    eax,DWORD PTR [esi+0xc]
64016666:	and    eax,0xffffffef
64016669:	or     eax,0x2
6401666c:	test   ax,0x10c
64016670:	mov    DWORD PTR [esi+0xc],eax
64016673:	mov    DWORD PTR [esi+0x4],ebx
64016676:	mov    DWORD PTR [ebp-0x4],ebx
64016679:	jne    0x640166a7
6401667b:	call   0x6401c17c
64016680:	add    eax,0x20
64016683:	cmp    esi,eax
64016685:	je     0x64016693
64016687:	call   0x6401c17c
6401668c:	add    eax,0x40
6401668f:	cmp    esi,eax
64016691:	jne    0x640166a0
64016693:	push   DWORD PTR [ebp+0xc]
64016696:	call   0x6401c11e
6401669b:	test   eax,eax
6401669d:	pop    ecx
6401669e:	jne    0x640166a7
640166a0:	push   esi
640166a1:	call   0x6401c0da
640166a6:	pop    ecx
640166a7:	test   WORD PTR [esi+0xc],0x108
640166ad:	push   edi
640166ae:	je     0x64016734
640166b4:	mov    eax,DWORD PTR [esi+0x8]
640166b7:	mov    edi,DWORD PTR [esi]
640166b9:	lea    ecx,[eax+0x1]
640166bc:	mov    DWORD PTR [esi],ecx
640166be:	mov    ecx,DWORD PTR [esi+0x18]
640166c1:	sub    edi,eax
640166c3:	dec    ecx
640166c4:	cmp    edi,ebx
640166c6:	mov    DWORD PTR [esi+0x4],ecx
640166c9:	jle    0x640166e8
640166cb:	push   edi
640166cc:	push   eax
640166cd:	push   DWORD PTR [ebp+0xc]
640166d0:	call   0x6401bffe
640166d5:	add    esp,0xc
640166d8:	mov    DWORD PTR [ebp-0x4],eax
640166db:	jmp    0x6401672a
640166dd:	or     eax,0x20
640166e0:	mov    DWORD PTR [esi+0xc],eax
640166e3:	or     eax,0xffffffff
640166e6:	jmp    0x64016761
640166e8:	mov    ecx,DWORD PTR [ebp+0xc]
640166eb:	cmp    ecx,0xffffffff
640166ee:	je     0x6401670b
640166f0:	cmp    ecx,0xfffffffe
640166f3:	je     0x6401670b
640166f5:	mov    eax,ecx
640166f7:	and    eax,0x1f
640166fa:	mov    edx,ecx
640166fc:	sar    edx,0x5
640166ff:	shl    eax,0x6
64016702:	add    eax,DWORD PTR [edx*4+0x64031460]
64016709:	jmp    0x64016710
6401670b:	mov    eax,0x6402c880
64016710:	test   BYTE PTR [eax+0x4],0x20
64016714:	je     0x6401672a
64016716:	push   0x2
64016718:	push   ebx
64016719:	push   ebx
6401671a:	push   ecx
6401671b:	call   0x6401b8c3
64016720:	and    eax,edx
64016722:	add    esp,0x10
64016725:	cmp    eax,0xffffffff
64016728:	je     0x6401674f
6401672a:	mov    eax,DWORD PTR [esi+0x8]
6401672d:	mov    cl,BYTE PTR [ebp+0x8]
64016730:	mov    BYTE PTR [eax],cl
64016732:	jmp    0x6401674a
64016734:	xor    edi,edi
64016736:	inc    edi
64016737:	push   edi
64016738:	lea    eax,[ebp+0x8]
6401673b:	push   eax
6401673c:	push   DWORD PTR [ebp+0xc]
6401673f:	call   0x6401bffe
64016744:	add    esp,0xc
64016747:	mov    DWORD PTR [ebp-0x4],eax
6401674a:	cmp    DWORD PTR [ebp-0x4],edi
6401674d:	je     0x64016758
6401674f:	or     DWORD PTR [esi+0xc],0x20
64016753:	or     eax,0xffffffff
64016756:	jmp    0x64016760
64016758:	mov    eax,DWORD PTR [ebp+0x8]
6401675b:	and    eax,0xff
64016760:	pop    edi
64016761:	pop    ebx
64016762:	pop    esi
64016763:	leave  
64016764:	ret    
64016765:	test   BYTE PTR [edi+0xc],0x40
64016769:	push   ebx
6401676a:	push   esi
6401676b:	mov    esi,eax
6401676d:	mov    ebx,ecx
6401676f:	je     0x640167aa
64016771:	cmp    DWORD PTR [edi+0x8],0x0
64016775:	jne    0x640167aa
64016777:	mov    eax,DWORD PTR [esp+0xc]
6401677b:	add    DWORD PTR [esi],eax
6401677d:	jmp    0x640167b1
6401677f:	movzx  eax,WORD PTR [ebx]
64016782:	dec    DWORD PTR [esp+0xc]
64016786:	push   eax
64016787:	mov    eax,edi
64016789:	call   0x640170c4
6401678e:	inc    ebx
6401678f:	inc    ebx
64016790:	cmp    DWORD PTR [esi],0xffffffff
64016793:	pop    ecx
64016794:	jne    0x640167aa
64016796:	call   0x640142c0
6401679b:	cmp    DWORD PTR [eax],0x2a
6401679e:	jne    0x640167b1
640167a0:	push   0x3f
640167a2:	mov    eax,edi
640167a4:	call   0x640170c4
640167a9:	pop    ecx
640167aa:	cmp    DWORD PTR [esp+0xc],0x0
640167af:	jg     0x6401677f
640167b1:	pop    esi
640167b2:	pop    ebx
640167b3:	ret    
640167b4:	push   ebp
640167b5:	lea    ebp,[esp-0x3f4]
640167bc:	sub    esp,0x474
640167c2:	mov    eax,ds:0x6402c09c
640167c7:	xor    eax,ebp
640167c9:	mov    DWORD PTR [ebp+0x3f0],eax
640167cf:	mov    eax,DWORD PTR [ebp+0x3fc]
640167d5:	push   ebx
640167d6:	mov    ebx,DWORD PTR [ebp+0x408]
640167dc:	push   esi
640167dd:	mov    esi,DWORD PTR [ebp+0x400]
640167e3:	push   edi
640167e4:	push   DWORD PTR [ebp+0x404]
640167ea:	xor    edi,edi
640167ec:	lea    ecx,[ebp-0x64]
640167ef:	mov    DWORD PTR [ebp-0x3c],eax
640167f2:	mov    DWORD PTR [ebp-0x28],ebx
640167f5:	mov    DWORD PTR [ebp-0x54],edi
640167f8:	mov    DWORD PTR [ebp-0x14],edi
640167fb:	mov    DWORD PTR [ebp-0x38],edi
640167fe:	mov    DWORD PTR [ebp-0x18],edi
64016801:	mov    DWORD PTR [ebp-0x30],edi
64016804:	mov    DWORD PTR [ebp-0x48],edi
64016807:	mov    DWORD PTR [ebp-0x34],edi
6401680a:	call   0x6401271f
6401680f:	cmp    DWORD PTR [ebp-0x3c],edi
64016812:	jne    0x64016841
64016814:	call   0x640142c0
64016819:	push   edi
6401681a:	push   edi
6401681b:	push   edi
6401681c:	push   edi
6401681d:	mov    DWORD PTR [eax],0x16
64016823:	push   edi
64016824:	call   0x640120b4
64016829:	add    esp,0x14
6401682c:	cmp    BYTE PTR [ebp-0x58],0x0
64016830:	je     0x64016839
64016832:	mov    eax,DWORD PTR [ebp-0x5c]
64016835:	and    DWORD PTR [eax+0x70],0xfffffffd
64016839:	or     eax,0xffffffff
6401683c:	jmp    0x6401708c
64016841:	cmp    esi,edi
64016843:	je     0x64016814
64016845:	movzx  edx,WORD PTR [esi]
64016848:	xor    ecx,ecx
6401684a:	cmp    dx,di
6401684d:	mov    DWORD PTR [ebp-0x2c],edi
64016850:	mov    DWORD PTR [ebp-0x20],edi
64016853:	mov    DWORD PTR [ebp-0x50],edi
64016856:	mov    DWORD PTR [ebp-0x24],edx
64016859:	je     0x6401707c
6401685f:	push   0x2
64016861:	pop    edi
64016862:	add    esi,edi
64016864:	cmp    DWORD PTR [ebp-0x2c],0x0
64016868:	mov    DWORD PTR [ebp-0x4c],esi
6401686b:	jl     0x6401707c
64016871:	lea    eax,[edx-0x20]
64016874:	cmp    ax,0x58
64016878:	ja     0x64016889
6401687a:	movzx  eax,dx
6401687d:	movzx  eax,BYTE PTR [eax+0x64024cc8]
64016884:	and    eax,0xf
64016887:	jmp    0x6401688b
64016889:	xor    eax,eax
6401688b:	movsx  eax,BYTE PTR [ecx+eax*8+0x64024ce8]
64016893:	push   0x7
64016895:	sar    eax,0x4
64016898:	pop    ecx
64016899:	cmp    eax,ecx
6401689b:	mov    DWORD PTR [ebp-0x68],eax
6401689e:	ja     0x6401704a
640168a4:	jmp    DWORD PTR [eax*4+0x640170a4]
640168ab:	xor    eax,eax
640168ad:	or     DWORD PTR [ebp-0x18],0xffffffff
640168b1:	mov    DWORD PTR [ebp-0x6c],eax
640168b4:	mov    DWORD PTR [ebp-0x48],eax
640168b7:	mov    DWORD PTR [ebp-0x38],eax
640168ba:	mov    DWORD PTR [ebp-0x30],eax
640168bd:	mov    DWORD PTR [ebp-0x14],eax
640168c0:	mov    DWORD PTR [ebp-0x34],eax
640168c3:	jmp    0x6401704a
640168c8:	movzx  eax,dx
640168cb:	sub    eax,0x20
640168ce:	je     0x6401690e
640168d0:	sub    eax,0x3
640168d3:	je     0x64016902
640168d5:	sub    eax,0x8
640168d8:	je     0x640168f9
640168da:	sub    eax,edi
640168dc:	je     0x640168f0
640168de:	sub    eax,0x3
640168e1:	jne    0x6401704a
640168e7:	or     DWORD PTR [ebp-0x14],0x8
640168eb:	jmp    0x6401704a
640168f0:	or     DWORD PTR [ebp-0x14],0x4
640168f4:	jmp    0x6401704a
640168f9:	or     DWORD PTR [ebp-0x14],0x1
640168fd:	jmp    0x6401704a
64016902:	or     DWORD PTR [ebp-0x14],0x80
64016909:	jmp    0x6401704a
6401690e:	or     DWORD PTR [ebp-0x14],edi
64016911:	jmp    0x6401704a
64016916:	cmp    dx,0x2a
6401691a:	jne    0x6401693c
6401691c:	add    ebx,0x4
6401691f:	mov    DWORD PTR [ebp-0x28],ebx
64016922:	mov    ebx,DWORD PTR [ebx-0x4]
64016925:	test   ebx,ebx
64016927:	mov    DWORD PTR [ebp-0x38],ebx
6401692a:	jge    0x6401704a
64016930:	or     DWORD PTR [ebp-0x14],0x4
64016934:	neg    DWORD PTR [ebp-0x38]
64016937:	jmp    0x6401704a
6401693c:	mov    eax,DWORD PTR [ebp-0x38]
6401693f:	imul   eax,eax,0xa
64016942:	movzx  ecx,dx
64016945:	lea    eax,[eax+ecx*1-0x30]
64016949:	mov    DWORD PTR [ebp-0x38],eax
6401694c:	jmp    0x6401704a
64016951:	and    DWORD PTR [ebp-0x18],0x0
64016955:	jmp    0x6401704a
6401695a:	cmp    dx,0x2a
6401695e:	jne    0x6401697d
64016960:	add    ebx,0x4
64016963:	mov    DWORD PTR [ebp-0x28],ebx
64016966:	mov    ebx,DWORD PTR [ebx-0x4]
64016969:	test   ebx,ebx
6401696b:	mov    DWORD PTR [ebp-0x18],ebx
6401696e:	jge    0x6401704a
64016974:	or     DWORD PTR [ebp-0x18],0xffffffff
64016978:	jmp    0x6401704a
6401697d:	mov    eax,DWORD PTR [ebp-0x18]
64016980:	imul   eax,eax,0xa
64016983:	movzx  ecx,dx
64016986:	lea    eax,[eax+ecx*1-0x30]
6401698a:	mov    DWORD PTR [ebp-0x18],eax
6401698d:	jmp    0x6401704a
64016992:	movzx  eax,dx
64016995:	cmp    eax,0x49
64016998:	je     0x640169e2
6401699a:	cmp    eax,0x68
6401699d:	je     0x640169d9
6401699f:	cmp    eax,0x6c
640169a2:	je     0x640169b9
640169a4:	cmp    eax,0x77
640169a7:	jne    0x6401704a
640169ad:	or     DWORD PTR [ebp-0x14],0x800
640169b4:	jmp    0x6401704a
640169b9:	cmp    WORD PTR [esi],0x6c
640169bd:	jne    0x640169d0
640169bf:	add    esi,edi
640169c1:	or     DWORD PTR [ebp-0x14],0x1000
640169c8:	mov    DWORD PTR [ebp-0x4c],esi
640169cb:	jmp    0x6401704a
640169d0:	or     DWORD PTR [ebp-0x14],0x10
640169d4:	jmp    0x6401704a
640169d9:	or     DWORD PTR [ebp-0x14],0x20
640169dd:	jmp    0x6401704a
640169e2:	movzx  eax,WORD PTR [esi]
640169e5:	cmp    ax,0x36
640169e9:	jne    0x64016a04
640169eb:	cmp    WORD PTR [esi+0x2],0x34
640169f0:	jne    0x64016a04
640169f2:	add    esi,0x4
640169f5:	or     DWORD PTR [ebp-0x14],0x8000
640169fc:	mov    DWORD PTR [ebp-0x4c],esi
640169ff:	jmp    0x6401704a
64016a04:	cmp    ax,0x33
64016a08:	jne    0x64016a23
64016a0a:	cmp    WORD PTR [esi+0x2],0x32
64016a0f:	jne    0x64016a23
64016a11:	add    esi,0x4
64016a14:	and    DWORD PTR [ebp-0x14],0xffff7fff
64016a1b:	mov    DWORD PTR [ebp-0x4c],esi
64016a1e:	jmp    0x6401704a
64016a23:	cmp    ax,0x64
64016a27:	je     0x6401704a
64016a2d:	cmp    ax,0x69
64016a31:	je     0x6401704a
64016a37:	cmp    ax,0x6f
64016a3b:	je     0x6401704a
64016a41:	cmp    ax,0x75
64016a45:	je     0x6401704a
64016a4b:	cmp    ax,0x78
64016a4f:	je     0x6401704a
64016a55:	cmp    ax,0x58
64016a59:	je     0x6401704a
64016a5f:	and    DWORD PTR [ebp-0x68],0x0
64016a63:	mov    eax,DWORD PTR [ebp-0x3c]
64016a66:	push   edx
64016a67:	lea    esi,[ebp-0x2c]
64016a6a:	mov    DWORD PTR [ebp-0x34],0x1
64016a71:	call   0x640170c4
64016a76:	jmp    0x64017049
64016a7b:	movzx  eax,dx
64016a7e:	cmp    eax,0x64
64016a81:	jg     0x64016c2e
64016a87:	je     0x64016cad
64016a8d:	cmp    eax,0x53
64016a90:	jg     0x64016b6d
64016a96:	je     0x64016af7
64016a98:	sub    eax,0x41
64016a9b:	je     0x64016aad
64016a9d:	sub    eax,edi
64016a9f:	je     0x64016ae2
64016aa1:	sub    eax,edi
64016aa3:	je     0x64016aad
64016aa5:	sub    eax,edi
64016aa7:	jne    0x64016f2e
64016aad:	add    edx,0x20
64016ab0:	mov    DWORD PTR [ebp-0x6c],0x1
64016ab7:	mov    DWORD PTR [ebp-0x24],edx
64016aba:	or     DWORD PTR [ebp-0x14],0x40
64016abe:	cmp    DWORD PTR [ebp-0x18],0x0
64016ac2:	lea    esi,[ebp-0x10]
64016ac5:	mov    eax,0x200
64016aca:	mov    DWORD PTR [ebp-0x1c],esi
64016acd:	mov    DWORD PTR [ebp-0x20],eax
64016ad0:	jge    0x64016cd1
64016ad6:	mov    DWORD PTR [ebp-0x18],0x6
64016add:	jmp    0x64016d1e
64016ae2:	test   WORD PTR [ebp-0x14],0x830
64016ae8:	jne    0x64016b8a
64016aee:	or     DWORD PTR [ebp-0x14],0x20
64016af2:	jmp    0x64016b8a
64016af7:	test   WORD PTR [ebp-0x14],0x830
64016afd:	jne    0x64016b03
64016aff:	or     DWORD PTR [ebp-0x14],0x20
64016b03:	mov    edi,DWORD PTR [ebp-0x18]
64016b06:	cmp    edi,0xffffffff
64016b09:	jne    0x64016b10
64016b0b:	mov    edi,0x7fffffff
64016b10:	add    ebx,0x4
64016b13:	test   BYTE PTR [ebp-0x14],0x20
64016b17:	mov    DWORD PTR [ebp-0x28],ebx
64016b1a:	mov    ebx,DWORD PTR [ebx-0x4]
64016b1d:	mov    DWORD PTR [ebp-0x1c],ebx
64016b20:	je     0x64016f01
64016b26:	test   ebx,ebx
64016b28:	jne    0x64016b32
64016b2a:	mov    eax,ds:0x6402c950
64016b2f:	mov    DWORD PTR [ebp-0x1c],eax
64016b32:	and    DWORD PTR [ebp-0x20],0x0
64016b36:	test   edi,edi
64016b38:	mov    esi,DWORD PTR [ebp-0x1c]
64016b3b:	jle    0x64016f2e
64016b41:	mov    al,BYTE PTR [esi]
64016b43:	test   al,al
64016b45:	je     0x64016f2e
64016b4b:	lea    ecx,[ebp-0x64]
64016b4e:	movzx  eax,al
64016b51:	push   ecx
64016b52:	push   eax
64016b53:	call   0x6401990b
64016b58:	test   eax,eax
64016b5a:	pop    ecx
64016b5b:	pop    ecx
64016b5c:	je     0x64016b5f
64016b5e:	inc    esi
64016b5f:	inc    esi
64016b60:	inc    DWORD PTR [ebp-0x20]
64016b63:	cmp    DWORD PTR [ebp-0x20],edi
64016b66:	jl     0x64016b41
64016b68:	jmp    0x64016f2e
64016b6d:	sub    eax,0x58
64016b70:	je     0x64016db9
64016b76:	sub    eax,edi
64016b78:	je     0x64016be1
64016b7a:	sub    eax,ecx
64016b7c:	je     0x64016aba
64016b82:	sub    eax,edi
64016b84:	jne    0x64016f2e
64016b8a:	movzx  eax,WORD PTR [ebx]
64016b8d:	add    ebx,0x4
64016b90:	xor    esi,esi
64016b92:	inc    esi
64016b93:	test   BYTE PTR [ebp-0x14],0x20
64016b97:	mov    DWORD PTR [ebp-0x34],esi
64016b9a:	mov    DWORD PTR [ebp-0x28],ebx
64016b9d:	mov    DWORD PTR [ebp-0x70],eax
64016ba0:	je     0x64016bcf
64016ba2:	mov    BYTE PTR [ebp-0x40],al
64016ba5:	lea    eax,[ebp-0x64]
64016ba8:	push   eax
64016ba9:	mov    eax,DWORD PTR [ebp-0x64]
64016bac:	mov    BYTE PTR [ebp-0x3f],0x0
64016bb0:	push   DWORD PTR [eax+0xac]
64016bb6:	lea    eax,[ebp-0x40]
64016bb9:	push   eax
64016bba:	lea    eax,[ebp-0x10]
64016bbd:	push   eax
64016bbe:	call   0x6401c53e
64016bc3:	add    esp,0x10
64016bc6:	test   eax,eax
64016bc8:	jge    0x64016bd3
64016bca:	mov    DWORD PTR [ebp-0x48],esi
64016bcd:	jmp    0x64016bd3
64016bcf:	mov    WORD PTR [ebp-0x10],ax
64016bd3:	lea    eax,[ebp-0x10]
64016bd6:	mov    DWORD PTR [ebp-0x1c],eax
64016bd9:	mov    DWORD PTR [ebp-0x20],esi
64016bdc:	jmp    0x64016f2e
64016be1:	mov    eax,DWORD PTR [ebx]
64016be3:	add    ebx,0x4
64016be6:	test   eax,eax
64016be8:	mov    DWORD PTR [ebp-0x28],ebx
64016beb:	je     0x64016c1a
64016bed:	mov    ecx,DWORD PTR [eax+0x4]
64016bf0:	test   ecx,ecx
64016bf2:	je     0x64016c1a
64016bf4:	test   WORD PTR [ebp-0x14],0x800
64016bfa:	movsx  eax,WORD PTR [eax]
64016bfd:	mov    DWORD PTR [ebp-0x1c],ecx
64016c00:	je     0x64016c11
64016c02:	cdq    
64016c03:	sub    eax,edx
64016c05:	mov    DWORD PTR [ebp-0x34],0x1
64016c0c:	jmp    0x64016f29
64016c11:	and    DWORD PTR [ebp-0x34],0x0
64016c15:	jmp    0x64016f2b
64016c1a:	mov    eax,ds:0x6402c950
64016c1f:	mov    DWORD PTR [ebp-0x1c],eax
64016c22:	push   eax
64016c23:	call   0x64013cc0
64016c28:	pop    ecx
64016c29:	jmp    0x64016f2b
64016c2e:	cmp    eax,0x70
64016c31:	jg     0x64016dbe
64016c37:	je     0x64016db2
64016c3d:	cmp    eax,0x65
64016c40:	jl     0x64016f2e
64016c46:	cmp    eax,0x67
64016c49:	jle    0x64016aba
64016c4f:	cmp    eax,0x69
64016c52:	je     0x64016cad
64016c54:	cmp    eax,0x6e
64016c57:	je     0x64016c78
64016c59:	cmp    eax,0x6f
64016c5c:	jne    0x64016f2e
64016c62:	test   BYTE PTR [ebp-0x14],0x80
64016c66:	mov    DWORD PTR [ebp-0x24],0x8
64016c6d:	je     0x64016cb8
64016c6f:	or     DWORD PTR [ebp-0x14],0x200
64016c76:	jmp    0x64016cb8
64016c78:	mov    esi,DWORD PTR [ebx]
64016c7a:	add    ebx,0x4
64016c7d:	mov    DWORD PTR [ebp-0x28],ebx
64016c80:	call   0x6401c528
64016c85:	test   eax,eax
64016c87:	je     0x64017065
64016c8d:	test   BYTE PTR [ebp-0x14],0x20
64016c91:	je     0x64016c9c
64016c93:	mov    ax,WORD PTR [ebp-0x2c]
64016c97:	mov    WORD PTR [esi],ax
64016c9a:	jmp    0x64016ca1
64016c9c:	mov    eax,DWORD PTR [ebp-0x2c]
64016c9f:	mov    DWORD PTR [esi],eax
64016ca1:	mov    DWORD PTR [ebp-0x48],0x1
64016ca8:	jmp    0x64017037
64016cad:	or     DWORD PTR [ebp-0x14],0x40
64016cb1:	mov    DWORD PTR [ebp-0x24],0xa
64016cb8:	test   WORD PTR [ebp-0x14],0x8000
64016cbe:	je     0x64016e08
64016cc4:	mov    eax,DWORD PTR [ebx]
64016cc6:	mov    edx,DWORD PTR [ebx+0x4]
64016cc9:	add    ebx,0x8
64016ccc:	jmp    0x64016e41
64016cd1:	jne    0x64016ce2
64016cd3:	cmp    dx,0x67
64016cd7:	jne    0x64016d1e
64016cd9:	mov    DWORD PTR [ebp-0x18],0x1
64016ce0:	jmp    0x64016d1e
64016ce2:	cmp    DWORD PTR [ebp-0x18],eax
64016ce5:	jle    0x64016cea
64016ce7:	mov    DWORD PTR [ebp-0x18],eax
64016cea:	cmp    DWORD PTR [ebp-0x18],0xa3
64016cf1:	jle    0x64016d1e
64016cf3:	mov    edi,DWORD PTR [ebp-0x18]
64016cf6:	add    edi,0x15d
64016cfc:	push   edi
64016cfd:	call   0x640157d0
64016d02:	test   eax,eax
64016d04:	mov    edx,DWORD PTR [ebp-0x24]
64016d07:	pop    ecx
64016d08:	mov    DWORD PTR [ebp-0x50],eax
64016d0b:	je     0x64016d17
64016d0d:	mov    DWORD PTR [ebp-0x1c],eax
64016d10:	mov    DWORD PTR [ebp-0x20],edi
64016d13:	mov    esi,eax
64016d15:	jmp    0x64016d1e
64016d17:	mov    DWORD PTR [ebp-0x18],0xa3
64016d1e:	mov    eax,DWORD PTR [ebx]
64016d20:	add    ebx,0x8
64016d23:	mov    DWORD PTR [ebp-0x78],eax
64016d26:	mov    eax,DWORD PTR [ebx-0x4]
64016d29:	mov    DWORD PTR [ebp-0x74],eax
64016d2c:	lea    eax,[ebp-0x64]
64016d2f:	push   eax
64016d30:	push   DWORD PTR [ebp-0x6c]
64016d33:	movsx  eax,dl
64016d36:	push   DWORD PTR [ebp-0x18]
64016d39:	mov    DWORD PTR [ebp-0x28],ebx
64016d3c:	push   eax
64016d3d:	push   DWORD PTR [ebp-0x20]
64016d40:	lea    eax,[ebp-0x78]
64016d43:	push   esi
64016d44:	push   eax
64016d45:	push   DWORD PTR ds:0x6402cb5c
64016d4b:	call   0x640143ef
64016d50:	pop    ecx
64016d51:	call   eax
64016d53:	mov    ebx,DWORD PTR [ebp-0x14]
64016d56:	add    esp,0x1c
64016d59:	and    ebx,0x80
64016d5f:	je     0x64016d7c
64016d61:	cmp    DWORD PTR [ebp-0x18],0x0
64016d65:	jne    0x64016d7c
64016d67:	lea    eax,[ebp-0x64]
64016d6a:	push   eax
64016d6b:	push   esi
64016d6c:	push   DWORD PTR ds:0x6402cb68
64016d72:	call   0x640143ef
64016d77:	pop    ecx
64016d78:	call   eax
64016d7a:	pop    ecx
64016d7b:	pop    ecx
64016d7c:	cmp    WORD PTR [ebp-0x24],0x67
64016d81:	jne    0x64016d9c
64016d83:	test   ebx,ebx
64016d85:	jne    0x64016d9c
64016d87:	lea    eax,[ebp-0x64]
64016d8a:	push   eax
64016d8b:	push   esi
64016d8c:	push   DWORD PTR ds:0x6402cb64
64016d92:	call   0x640143ef
64016d97:	pop    ecx
64016d98:	call   eax
64016d9a:	pop    ecx
64016d9b:	pop    ecx
64016d9c:	cmp    BYTE PTR [esi],0x2d
64016d9f:	jne    0x64016dac
64016da1:	or     DWORD PTR [ebp-0x14],0x100
64016da8:	inc    esi
64016da9:	mov    DWORD PTR [ebp-0x1c],esi
64016dac:	push   esi
64016dad:	jmp    0x64016c23
64016db2:	mov    DWORD PTR [ebp-0x18],0x8
64016db9:	mov    DWORD PTR [ebp-0x54],ecx
64016dbc:	jmp    0x64016ddf
64016dbe:	sub    eax,0x73
64016dc1:	je     0x64016b03
64016dc7:	sub    eax,edi
64016dc9:	je     0x64016cb1
64016dcf:	sub    eax,0x3
64016dd2:	jne    0x64016f2e
64016dd8:	mov    DWORD PTR [ebp-0x54],0x27
64016ddf:	test   BYTE PTR [ebp-0x14],0x80
64016de3:	mov    DWORD PTR [ebp-0x24],0x10
64016dea:	je     0x64016cb8
64016df0:	mov    eax,DWORD PTR [ebp-0x54]
64016df3:	add    eax,0x51
64016df6:	mov    WORD PTR [ebp-0x44],0x30
64016dfc:	mov    WORD PTR [ebp-0x42],ax
64016e00:	mov    DWORD PTR [ebp-0x30],edi
64016e03:	jmp    0x64016cb8
64016e08:	test   WORD PTR [ebp-0x14],0x1000
64016e0e:	jne    0x64016cc4
64016e14:	add    ebx,0x4
64016e17:	test   BYTE PTR [ebp-0x14],0x20
64016e1b:	je     0x64016e33
64016e1d:	test   BYTE PTR [ebp-0x14],0x40
64016e21:	mov    DWORD PTR [ebp-0x28],ebx
64016e24:	je     0x64016e2c
64016e26:	movsx  eax,WORD PTR [ebx-0x4]
64016e2a:	jmp    0x64016e30
64016e2c:	movzx  eax,WORD PTR [ebx-0x4]
64016e30:	cdq    
64016e31:	jmp    0x64016e44
64016e33:	test   BYTE PTR [ebp-0x14],0x40
64016e37:	mov    eax,DWORD PTR [ebx-0x4]
64016e3a:	je     0x64016e3f
64016e3c:	cdq    
64016e3d:	jmp    0x64016e41
64016e3f:	xor    edx,edx
64016e41:	mov    DWORD PTR [ebp-0x28],ebx
64016e44:	test   BYTE PTR [ebp-0x14],0x40
64016e48:	je     0x64016e62
64016e4a:	test   edx,edx
64016e4c:	jg     0x64016e62
64016e4e:	jl     0x64016e54
64016e50:	test   eax,eax
64016e52:	jae    0x64016e62
64016e54:	neg    eax
64016e56:	adc    edx,0x0
64016e59:	neg    edx
64016e5b:	or     DWORD PTR [ebp-0x14],0x100
64016e62:	test   WORD PTR [ebp-0x14],0x9000
64016e68:	mov    ebx,edx
64016e6a:	mov    edi,eax
64016e6c:	jne    0x64016e70
64016e6e:	xor    ebx,ebx
64016e70:	cmp    DWORD PTR [ebp-0x18],0x0
64016e74:	jge    0x64016e7f
64016e76:	mov    DWORD PTR [ebp-0x18],0x1
64016e7d:	jmp    0x64016e90
64016e7f:	and    DWORD PTR [ebp-0x14],0xfffffff7
64016e83:	mov    eax,0x200
64016e88:	cmp    DWORD PTR [ebp-0x18],eax
64016e8b:	jle    0x64016e90
64016e8d:	mov    DWORD PTR [ebp-0x18],eax
64016e90:	mov    eax,edi
64016e92:	or     eax,ebx
64016e94:	jne    0x64016e99
64016e96:	and    DWORD PTR [ebp-0x30],eax
64016e99:	lea    esi,[ebp+0x1ef]
64016e9f:	mov    eax,DWORD PTR [ebp-0x18]
64016ea2:	dec    DWORD PTR [ebp-0x18]
64016ea5:	test   eax,eax
64016ea7:	jg     0x64016eaf
64016ea9:	mov    eax,edi
64016eab:	or     eax,ebx
64016ead:	je     0x64016ed3
64016eaf:	mov    eax,DWORD PTR [ebp-0x24]
64016eb2:	cdq    
64016eb3:	push   edx
64016eb4:	push   eax
64016eb5:	push   ebx
64016eb6:	push   edi
64016eb7:	call   0x640188a0
64016ebc:	add    ecx,0x30
64016ebf:	cmp    ecx,0x39
64016ec2:	mov    DWORD PTR [ebp-0x7c],ebx
64016ec5:	mov    edi,eax
64016ec7:	mov    ebx,edx
64016ec9:	jle    0x64016ece
64016ecb:	add    ecx,DWORD PTR [ebp-0x54]
64016ece:	mov    BYTE PTR [esi],cl
64016ed0:	dec    esi
64016ed1:	jmp    0x64016e9f
64016ed3:	lea    eax,[ebp+0x1ef]
64016ed9:	sub    eax,esi
64016edb:	inc    esi
64016edc:	test   WORD PTR [ebp-0x14],0x200
64016ee2:	mov    DWORD PTR [ebp-0x20],eax
64016ee5:	mov    DWORD PTR [ebp-0x1c],esi
64016ee8:	je     0x64016f2e
64016eea:	test   eax,eax
64016eec:	je     0x64016ef5
64016eee:	mov    ecx,esi
64016ef0:	cmp    BYTE PTR [ecx],0x30
64016ef3:	je     0x64016f2e
64016ef5:	dec    DWORD PTR [ebp-0x1c]
64016ef8:	mov    ecx,DWORD PTR [ebp-0x1c]
64016efb:	mov    BYTE PTR [ecx],0x30
64016efe:	inc    eax
64016eff:	jmp    0x64016f2b
64016f01:	test   ebx,ebx
64016f03:	jne    0x64016f0d
64016f05:	mov    eax,ds:0x6402c954
64016f0a:	mov    DWORD PTR [ebp-0x1c],eax
64016f0d:	mov    eax,DWORD PTR [ebp-0x1c]
64016f10:	mov    DWORD PTR [ebp-0x34],0x1
64016f17:	jmp    0x64016f22
64016f19:	dec    edi
64016f1a:	cmp    WORD PTR [eax],0x0
64016f1e:	je     0x64016f26
64016f20:	inc    eax
64016f21:	inc    eax
64016f22:	test   edi,edi
64016f24:	jne    0x64016f19
64016f26:	sub    eax,DWORD PTR [ebp-0x1c]
64016f29:	sar    eax,1
64016f2b:	mov    DWORD PTR [ebp-0x20],eax
64016f2e:	cmp    DWORD PTR [ebp-0x48],0x0
64016f32:	jne    0x64017037
64016f38:	mov    eax,DWORD PTR [ebp-0x14]
64016f3b:	test   al,0x40
64016f3d:	je     0x64016f6a
64016f3f:	test   ax,0x100
64016f43:	je     0x64016f4d
64016f45:	mov    WORD PTR [ebp-0x44],0x2d
64016f4b:	jmp    0x64016f63
64016f4d:	test   al,0x1
64016f4f:	je     0x64016f59
64016f51:	mov    WORD PTR [ebp-0x44],0x2b
64016f57:	jmp    0x64016f63
64016f59:	test   al,0x2
64016f5b:	je     0x64016f6a
64016f5d:	mov    WORD PTR [ebp-0x44],0x20
64016f63:	mov    DWORD PTR [ebp-0x30],0x1
64016f6a:	mov    ebx,DWORD PTR [ebp-0x38]
64016f6d:	mov    esi,DWORD PTR [ebp-0x20]
64016f70:	sub    ebx,esi
64016f72:	sub    ebx,DWORD PTR [ebp-0x30]
64016f75:	test   BYTE PTR [ebp-0x14],0xc
64016f79:	jne    0x64016f8c
64016f7b:	push   DWORD PTR [ebp-0x3c]
64016f7e:	lea    eax,[ebp-0x2c]
64016f81:	push   ebx
64016f82:	push   0x20
64016f84:	call   0x640170e9
64016f89:	add    esp,0xc
64016f8c:	push   DWORD PTR [ebp-0x30]
64016f8f:	mov    edi,DWORD PTR [ebp-0x3c]
64016f92:	lea    eax,[ebp-0x2c]
64016f95:	lea    ecx,[ebp-0x44]
64016f98:	call   0x64016765
64016f9d:	test   BYTE PTR [ebp-0x14],0x8
64016fa1:	pop    ecx
64016fa2:	je     0x64016fb9
64016fa4:	test   BYTE PTR [ebp-0x14],0x4
64016fa8:	jne    0x64016fb9
64016faa:	push   edi
64016fab:	push   ebx
64016fac:	push   0x30
64016fae:	lea    eax,[ebp-0x2c]
64016fb1:	call   0x640170e9
64016fb6:	add    esp,0xc
64016fb9:	cmp    DWORD PTR [ebp-0x34],0x0
64016fbd:	jne    0x6401700d
64016fbf:	test   esi,esi
64016fc1:	jle    0x6401700d
64016fc3:	mov    edi,DWORD PTR [ebp-0x1c]
64016fc6:	mov    DWORD PTR [ebp-0x24],esi
64016fc9:	dec    DWORD PTR [ebp-0x24]
64016fcc:	lea    eax,[ebp-0x64]
64016fcf:	push   eax
64016fd0:	mov    eax,DWORD PTR [ebp-0x64]
64016fd3:	push   DWORD PTR [eax+0xac]
64016fd9:	lea    eax,[ebp-0x70]
64016fdc:	push   edi
64016fdd:	push   eax
64016fde:	call   0x6401c53e
64016fe3:	add    esp,0x10
64016fe6:	test   eax,eax
64016fe8:	mov    DWORD PTR [ebp-0x7c],eax
64016feb:	jle    0x64017007
64016fed:	push   DWORD PTR [ebp-0x70]
64016ff0:	mov    eax,DWORD PTR [ebp-0x3c]
64016ff3:	lea    esi,[ebp-0x2c]
64016ff6:	call   0x640170c4
64016ffb:	add    edi,DWORD PTR [ebp-0x7c]
64016ffe:	cmp    DWORD PTR [ebp-0x24],0x0
64017002:	pop    ecx
64017003:	jg     0x64016fc9
64017005:	jmp    0x6401701a
64017007:	or     DWORD PTR [ebp-0x2c],0xffffffff
6401700b:	jmp    0x6401701a
6401700d:	mov    ecx,DWORD PTR [ebp-0x1c]
64017010:	push   esi
64017011:	lea    eax,[ebp-0x2c]
64017014:	call   0x64016765
64017019:	pop    ecx
6401701a:	cmp    DWORD PTR [ebp-0x2c],0x0
6401701e:	jl     0x64017037
64017020:	test   BYTE PTR [ebp-0x14],0x4
64017024:	je     0x64017037
64017026:	push   DWORD PTR [ebp-0x3c]
64017029:	lea    eax,[ebp-0x2c]
6401702c:	push   ebx
6401702d:	push   0x20
6401702f:	call   0x640170e9
64017034:	add    esp,0xc
64017037:	cmp    DWORD PTR [ebp-0x50],0x0
6401703b:	je     0x6401704a
6401703d:	push   DWORD PTR [ebp-0x50]
64017040:	call   0x64013396
64017045:	and    DWORD PTR [ebp-0x50],0x0
64017049:	pop    ecx
6401704a:	mov    esi,DWORD PTR [ebp-0x4c]
6401704d:	movzx  eax,WORD PTR [esi]
64017050:	test   ax,ax
64017053:	mov    DWORD PTR [ebp-0x24],eax
64017056:	je     0x6401707c
64017058:	mov    ecx,DWORD PTR [ebp-0x68]
6401705b:	mov    ebx,DWORD PTR [ebp-0x28]
6401705e:	mov    edx,eax
64017060:	jmp    0x6401685f
64017065:	call   0x640142c0
6401706a:	mov    DWORD PTR [eax],0x16
64017070:	xor    eax,eax
64017072:	push   eax
64017073:	push   eax
64017074:	push   eax
64017075:	push   eax
64017076:	push   eax
64017077:	jmp    0x64016824
6401707c:	cmp    BYTE PTR [ebp-0x58],0x0
64017080:	je     0x64017089
64017082:	mov    eax,DWORD PTR [ebp-0x5c]
64017085:	and    DWORD PTR [eax+0x70],0xfffffffd
64017089:	mov    eax,DWORD PTR [ebp-0x2c]
6401708c:	mov    ecx,DWORD PTR [ebp+0x3f0]
64017092:	pop    edi
64017093:	pop    esi
64017094:	xor    ecx,ebp
64017096:	pop    ebx
64017097:	call   0x6401257c
6401709c:	add    ebp,0x3f4
640170a2:	leave  
640170a3:	ret    
640170a4:	arpl   WORD PTR [edx+0x1],bp
640170a7:	fs stos DWORD PTR es:[edi],eax
640170a9:	push   0x68c86401
640170ae:	add    DWORD PTR [esi+edx*1+0x69],esp
640170b2:	add    DWORD PTR [ecx+edx*2+0x69],esp
640170b6:	add    DWORD PTR [edx+ebx*2+0x69],esp
640170ba:	add    DWORD PTR [edx+edx*4+0x69],esp
640170be:	add    DWORD PTR [ebx+edi*2+0x6a],esp
640170c2:	add    DWORD PTR [esi+esi*8+0x40],esp
640170c6:	or     al,0x40
640170c8:	je     0x640170d0
640170ca:	cmp    DWORD PTR [eax+0x8],0x0
640170ce:	je     0x640170e6
640170d0:	push   eax
640170d1:	push   DWORD PTR [esp+0x8]
640170d5:	call   0x6401c34a
640170da:	cmp    ax,0xffff
640170de:	pop    ecx
640170df:	pop    ecx
640170e0:	jne    0x640170e6
640170e2:	or     DWORD PTR [esi],0xffffffff
640170e5:	ret    
640170e6:	inc    DWORD PTR [esi]
640170e8:	ret    
640170e9:	push   ebp
640170ea:	mov    ebp,esp
640170ec:	push   esi
640170ed:	mov    esi,eax
640170ef:	jmp    0x64017105
640170f1:	push   DWORD PTR [ebp+0x8]
640170f4:	mov    eax,DWORD PTR [ebp+0x10]
640170f7:	dec    DWORD PTR [ebp+0xc]
640170fa:	call   0x640170c4
640170ff:	cmp    DWORD PTR [esi],0xffffffff
64017102:	pop    ecx
64017103:	je     0x6401710b
64017105:	cmp    DWORD PTR [ebp+0xc],0x0
64017109:	jg     0x640170f1
6401710b:	pop    esi
6401710c:	pop    ebp
6401710d:	ret    
6401710e:	push   ebp
6401710f:	lea    ebp,[esp-0x3f4]
64017116:	sub    esp,0x474
6401711c:	mov    eax,ds:0x6402c09c
64017121:	xor    eax,ebp
64017123:	mov    DWORD PTR [ebp+0x3f0],eax
64017129:	push   ebx
6401712a:	mov    ebx,DWORD PTR [ebp+0x408]
64017130:	push   esi
64017131:	mov    esi,DWORD PTR [ebp+0x3fc]
64017137:	xor    eax,eax
64017139:	push   edi
6401713a:	push   DWORD PTR [ebp+0x404]
64017140:	mov    edi,DWORD PTR [ebp+0x400]
64017146:	lea    ecx,[ebp-0x58]
64017149:	mov    DWORD PTR [ebp-0x48],esi
6401714c:	mov    DWORD PTR [ebp-0x24],ebx
6401714f:	mov    DWORD PTR [ebp-0x60],eax
64017152:	mov    DWORD PTR [ebp-0x14],eax
64017155:	mov    DWORD PTR [ebp-0x38],eax
64017158:	mov    DWORD PTR [ebp-0x18],eax
6401715b:	mov    DWORD PTR [ebp-0x30],eax
6401715e:	mov    DWORD PTR [ebp-0x5c],eax
64017161:	mov    DWORD PTR [ebp-0x34],eax
64017164:	call   0x6401271f
64017169:	test   esi,esi
6401716b:	jne    0x6401719c
6401716d:	call   0x640142c0
64017172:	mov    DWORD PTR [eax],0x16
64017178:	xor    eax,eax
6401717a:	push   eax
6401717b:	push   eax
6401717c:	push   eax
6401717d:	push   eax
6401717e:	push   eax
6401717f:	call   0x640120b4
64017184:	add    esp,0x14
64017187:	cmp    BYTE PTR [ebp-0x4c],0x0
6401718b:	je     0x64017194
6401718d:	mov    eax,DWORD PTR [ebp-0x50]
64017190:	and    DWORD PTR [eax+0x70],0xfffffffd
64017194:	or     eax,0xffffffff
64017197:	jmp    0x640179f2
6401719c:	xor    esi,esi
6401719e:	cmp    edi,esi
640171a0:	jne    0x640171b4
640171a2:	call   0x640142c0
640171a7:	push   esi
640171a8:	push   esi
640171a9:	push   esi
640171aa:	push   esi
640171ab:	mov    DWORD PTR [eax],0x16
640171b1:	push   esi
640171b2:	jmp    0x6401717f
640171b4:	movzx  ecx,WORD PTR [edi]
640171b7:	cmp    cx,si
640171ba:	mov    DWORD PTR [ebp-0x2c],esi
640171bd:	mov    DWORD PTR [ebp-0x20],esi
640171c0:	mov    DWORD PTR [ebp-0x40],esi
640171c3:	mov    DWORD PTR [ebp-0x64],esi
640171c6:	mov    DWORD PTR [ebp-0x28],ecx
640171c9:	je     0x640179e2
640171cf:	push   0x2
640171d1:	pop    esi
640171d2:	add    edi,esi
640171d4:	xor    eax,eax
640171d6:	cmp    DWORD PTR [ebp-0x2c],eax
640171d9:	mov    DWORD PTR [ebp-0x6c],edi
640171dc:	jl     0x640179d2
640171e2:	lea    edx,[ecx-0x20]
640171e5:	cmp    dx,0x58
640171e9:	ja     0x640171f8
640171eb:	movzx  eax,cx
640171ee:	movzx  eax,BYTE PTR [eax+0x64026370]
640171f5:	and    eax,0xf
640171f8:	mov    edx,DWORD PTR [ebp-0x40]
640171fb:	imul   eax,eax,0x9
640171fe:	movzx  eax,BYTE PTR [eax+edx*1+0x64026390]
64017206:	push   0x8
64017208:	shr    eax,0x4
6401720b:	pop    edx
6401720c:	cmp    eax,edx
6401720e:	mov    DWORD PTR [ebp-0x40],eax
64017211:	je     0x6401716d
64017217:	cmp    eax,0x7
6401721a:	ja     0x640179ba
64017220:	jmp    DWORD PTR [eax*4+0x64017a0a]
64017227:	xor    eax,eax
64017229:	or     DWORD PTR [ebp-0x18],0xffffffff
6401722d:	mov    DWORD PTR [ebp-0x68],eax
64017230:	mov    DWORD PTR [ebp-0x5c],eax
64017233:	mov    DWORD PTR [ebp-0x38],eax
64017236:	mov    DWORD PTR [ebp-0x30],eax
64017239:	mov    DWORD PTR [ebp-0x14],eax
6401723c:	mov    DWORD PTR [ebp-0x34],eax
6401723f:	jmp    0x640179c0
64017244:	movzx  eax,cx
64017247:	sub    eax,0x20
6401724a:	je     0x64017288
6401724c:	sub    eax,0x3
6401724f:	je     0x6401727c
64017251:	sub    eax,edx
64017253:	je     0x64017273
64017255:	sub    eax,esi
64017257:	je     0x6401726a
64017259:	sub    eax,0x3
6401725c:	jne    0x640179ba
64017262:	or     DWORD PTR [ebp-0x14],edx
64017265:	jmp    0x640179c0
6401726a:	or     DWORD PTR [ebp-0x14],0x4
6401726e:	jmp    0x640179c0
64017273:	or     DWORD PTR [ebp-0x14],0x1
64017277:	jmp    0x640179c0
6401727c:	or     DWORD PTR [ebp-0x14],0x80
64017283:	jmp    0x640179c0
64017288:	or     DWORD PTR [ebp-0x14],esi
6401728b:	jmp    0x640179c0
64017290:	cmp    cx,0x2a
64017294:	jne    0x640172b5
64017296:	mov    eax,DWORD PTR [ebx]
64017298:	add    ebx,0x4
6401729b:	test   eax,eax
6401729d:	mov    DWORD PTR [ebp-0x24],ebx
640172a0:	mov    DWORD PTR [ebp-0x38],eax
640172a3:	jge    0x640179c0
640172a9:	or     DWORD PTR [ebp-0x14],0x4
640172ad:	neg    DWORD PTR [ebp-0x38]
640172b0:	jmp    0x640179c0
640172b5:	mov    eax,DWORD PTR [ebp-0x38]
640172b8:	imul   eax,eax,0xa
640172bb:	movzx  ecx,cx
640172be:	lea    eax,[eax+ecx*1-0x30]
640172c2:	mov    DWORD PTR [ebp-0x38],eax
640172c5:	jmp    0x640179c0
640172ca:	and    DWORD PTR [ebp-0x18],0x0
640172ce:	jmp    0x640179c0
640172d3:	cmp    cx,0x2a
640172d7:	jne    0x640172f5
640172d9:	mov    eax,DWORD PTR [ebx]
640172db:	add    ebx,0x4
640172de:	test   eax,eax
640172e0:	mov    DWORD PTR [ebp-0x24],ebx
640172e3:	mov    DWORD PTR [ebp-0x18],eax
640172e6:	jge    0x640179c0
640172ec:	or     DWORD PTR [ebp-0x18],0xffffffff
640172f0:	jmp    0x640179c0
640172f5:	mov    eax,DWORD PTR [ebp-0x18]
640172f8:	imul   eax,eax,0xa
640172fb:	movzx  ecx,cx
640172fe:	lea    eax,[eax+ecx*1-0x30]
64017302:	mov    DWORD PTR [ebp-0x18],eax
64017305:	jmp    0x640179c0
6401730a:	movzx  eax,cx
6401730d:	cmp    eax,0x49
64017310:	je     0x64017357
64017312:	cmp    eax,0x68
64017315:	je     0x6401734e
64017317:	cmp    eax,0x6c
6401731a:	je     0x64017331
6401731c:	cmp    eax,0x77
6401731f:	jne    0x640179c0
64017325:	or     DWORD PTR [ebp-0x14],0x800
6401732c:	jmp    0x640179c0
64017331:	cmp    WORD PTR [edi],0x6c
64017335:	jne    0x64017345
64017337:	add    edi,esi
64017339:	or     DWORD PTR [ebp-0x14],0x1000
64017340:	jmp    0x640179c0
64017345:	or     DWORD PTR [ebp-0x14],0x10
64017349:	jmp    0x640179c0
6401734e:	or     DWORD PTR [ebp-0x14],0x20
64017352:	jmp    0x640179c0
64017357:	movzx  eax,WORD PTR [edi]
6401735a:	cmp    ax,0x36
6401735e:	jne    0x64017376
64017360:	cmp    WORD PTR [edi+0x2],0x34
64017365:	jne    0x64017376
64017367:	add    edi,0x4
6401736a:	or     DWORD PTR [ebp-0x14],0x8000
64017371:	jmp    0x640179c0
64017376:	cmp    ax,0x33
6401737a:	jne    0x64017392
6401737c:	cmp    WORD PTR [edi+0x2],0x32
64017381:	jne    0x64017392
64017383:	add    edi,0x4
64017386:	and    DWORD PTR [ebp-0x14],0xffff7fff
6401738d:	jmp    0x640179c0
64017392:	cmp    ax,0x64
64017396:	je     0x640179c0
6401739c:	cmp    ax,0x69
640173a0:	je     0x640179c0
640173a6:	cmp    ax,0x6f
640173aa:	je     0x640179c0
640173b0:	cmp    ax,0x75
640173b4:	je     0x640179c0
640173ba:	cmp    ax,0x78
640173be:	je     0x640179c0
640173c4:	cmp    ax,0x58
640173c8:	je     0x640179c0
640173ce:	and    DWORD PTR [ebp-0x40],0x0
640173d2:	mov    eax,DWORD PTR [ebp-0x48]
640173d5:	push   ecx
640173d6:	lea    esi,[ebp-0x2c]
640173d9:	mov    DWORD PTR [ebp-0x34],0x1
640173e0:	call   0x640170c4
640173e5:	pop    ecx
640173e6:	jmp    0x640179c0
640173eb:	movzx  eax,cx
640173ee:	cmp    eax,0x64
640173f1:	jg     0x6401759f
640173f7:	je     0x6401761a
640173fd:	cmp    eax,0x53
64017400:	jg     0x640174dd
64017406:	je     0x64017467
64017408:	sub    eax,0x41
6401740b:	je     0x6401741d
6401740d:	sub    eax,esi
6401740f:	je     0x64017452
64017411:	sub    eax,esi
64017413:	je     0x6401741d
64017415:	sub    eax,esi
64017417:	jne    0x6401789e
6401741d:	add    ecx,0x20
64017420:	mov    DWORD PTR [ebp-0x68],0x1
64017427:	mov    DWORD PTR [ebp-0x28],ecx
6401742a:	or     DWORD PTR [ebp-0x14],0x40
6401742e:	cmp    DWORD PTR [ebp-0x18],0x0
64017432:	lea    esi,[ebp-0x10]
64017435:	mov    eax,0x200
6401743a:	mov    DWORD PTR [ebp-0x1c],esi
6401743d:	mov    DWORD PTR [ebp-0x20],eax
64017440:	jge    0x6401763e
64017446:	mov    DWORD PTR [ebp-0x18],0x6
6401744d:	jmp    0x6401768e
64017452:	test   WORD PTR [ebp-0x14],0x830
64017458:	jne    0x640174fb
6401745e:	or     DWORD PTR [ebp-0x14],0x20
64017462:	jmp    0x640174fb
64017467:	test   WORD PTR [ebp-0x14],0x830
6401746d:	jne    0x64017473
6401746f:	or     DWORD PTR [ebp-0x14],0x20
64017473:	mov    edi,DWORD PTR [ebp-0x18]
64017476:	cmp    edi,0xffffffff
64017479:	jne    0x64017480
6401747b:	mov    edi,0x7fffffff
64017480:	add    ebx,0x4
64017483:	test   BYTE PTR [ebp-0x14],0x20
64017487:	mov    DWORD PTR [ebp-0x24],ebx
6401748a:	mov    ebx,DWORD PTR [ebx-0x4]
6401748d:	mov    DWORD PTR [ebp-0x1c],ebx
64017490:	je     0x64017871
64017496:	test   ebx,ebx
64017498:	jne    0x640174a2
6401749a:	mov    eax,ds:0x6402c950
6401749f:	mov    DWORD PTR [ebp-0x1c],eax
640174a2:	and    DWORD PTR [ebp-0x20],0x0
640174a6:	test   edi,edi
640174a8:	mov    esi,DWORD PTR [ebp-0x1c]
640174ab:	jle    0x6401789e
640174b1:	mov    al,BYTE PTR [esi]
640174b3:	test   al,al
640174b5:	je     0x6401789e
640174bb:	lea    ecx,[ebp-0x58]
640174be:	movzx  eax,al
640174c1:	push   ecx
640174c2:	push   eax
640174c3:	call   0x6401990b
640174c8:	test   eax,eax
640174ca:	pop    ecx
640174cb:	pop    ecx
640174cc:	je     0x640174cf
640174ce:	inc    esi
640174cf:	inc    esi
640174d0:	inc    DWORD PTR [ebp-0x20]
640174d3:	cmp    DWORD PTR [ebp-0x20],edi
640174d6:	jl     0x640174b1
640174d8:	jmp    0x6401789e
640174dd:	sub    eax,0x58
640174e0:	je     0x64017725
640174e6:	sub    eax,esi
640174e8:	je     0x64017552
640174ea:	sub    eax,0x7
640174ed:	je     0x6401742a
640174f3:	sub    eax,esi
640174f5:	jne    0x6401789e
640174fb:	movzx  eax,WORD PTR [ebx]
640174fe:	add    ebx,0x4
64017501:	xor    esi,esi
64017503:	inc    esi
64017504:	test   BYTE PTR [ebp-0x14],0x20
64017508:	mov    DWORD PTR [ebp-0x34],esi
6401750b:	mov    DWORD PTR [ebp-0x24],ebx
6401750e:	mov    DWORD PTR [ebp-0x70],eax
64017511:	je     0x64017540
64017513:	mov    BYTE PTR [ebp-0x44],al
64017516:	lea    eax,[ebp-0x58]
64017519:	push   eax
6401751a:	mov    eax,DWORD PTR [ebp-0x58]
6401751d:	mov    BYTE PTR [ebp-0x43],0x0
64017521:	push   DWORD PTR [eax+0xac]
64017527:	lea    eax,[ebp-0x44]
6401752a:	push   eax
6401752b:	lea    eax,[ebp-0x10]
6401752e:	push   eax
6401752f:	call   0x6401c53e
64017534:	add    esp,0x10
64017537:	test   eax,eax
64017539:	jge    0x64017544
6401753b:	mov    DWORD PTR [ebp-0x5c],esi
6401753e:	jmp    0x64017544
64017540:	mov    WORD PTR [ebp-0x10],ax
64017544:	lea    eax,[ebp-0x10]
64017547:	mov    DWORD PTR [ebp-0x1c],eax
6401754a:	mov    DWORD PTR [ebp-0x20],esi
6401754d:	jmp    0x6401789e
64017552:	mov    eax,DWORD PTR [ebx]
64017554:	add    ebx,0x4
64017557:	test   eax,eax
64017559:	mov    DWORD PTR [ebp-0x24],ebx
6401755c:	je     0x6401758b
6401755e:	mov    ecx,DWORD PTR [eax+0x4]
64017561:	test   ecx,ecx
64017563:	je     0x6401758b
64017565:	test   WORD PTR [ebp-0x14],0x800
6401756b:	movsx  eax,WORD PTR [eax]
6401756e:	mov    DWORD PTR [ebp-0x1c],ecx
64017571:	je     0x64017582
64017573:	cdq    
64017574:	sub    eax,edx
64017576:	mov    DWORD PTR [ebp-0x34],0x1
6401757d:	jmp    0x64017899
64017582:	and    DWORD PTR [ebp-0x34],0x0
64017586:	jmp    0x6401789b
6401758b:	mov    eax,ds:0x6402c950
64017590:	mov    DWORD PTR [ebp-0x1c],eax
64017593:	push   eax
64017594:	call   0x64013cc0
64017599:	pop    ecx
6401759a:	jmp    0x6401789b
6401759f:	cmp    eax,0x70
640175a2:	jg     0x6401772e
640175a8:	je     0x64017722
640175ae:	cmp    eax,0x65
640175b1:	jl     0x6401789e
640175b7:	cmp    eax,0x67
640175ba:	jle    0x6401742a
640175c0:	cmp    eax,0x69
640175c3:	je     0x6401761a
640175c5:	cmp    eax,0x6e
640175c8:	je     0x640175e5
640175ca:	cmp    eax,0x6f
640175cd:	jne    0x6401789e
640175d3:	test   BYTE PTR [ebp-0x14],0x80
640175d7:	mov    DWORD PTR [ebp-0x28],edx
640175da:	je     0x64017625
640175dc:	or     DWORD PTR [ebp-0x14],0x200
640175e3:	jmp    0x64017625
640175e5:	mov    esi,DWORD PTR [ebx]
640175e7:	add    ebx,0x4
640175ea:	mov    DWORD PTR [ebp-0x24],ebx
640175ed:	call   0x6401c528
640175f2:	test   eax,eax
640175f4:	je     0x6401716d
640175fa:	test   BYTE PTR [ebp-0x14],0x20
640175fe:	je     0x64017609
64017600:	mov    ax,WORD PTR [ebp-0x2c]
64017604:	mov    WORD PTR [esi],ax
64017607:	jmp    0x6401760e
64017609:	mov    eax,DWORD PTR [ebp-0x2c]
6401760c:	mov    DWORD PTR [esi],eax
6401760e:	mov    DWORD PTR [ebp-0x5c],0x1
64017615:	jmp    0x640179a7
6401761a:	or     DWORD PTR [ebp-0x14],0x40
6401761e:	mov    DWORD PTR [ebp-0x28],0xa
64017625:	test   WORD PTR [ebp-0x14],0x8000
6401762b:	je     0x64017778
64017631:	add    ebx,edx
64017633:	mov    eax,DWORD PTR [ebx-0x8]
64017636:	mov    edx,DWORD PTR [ebx-0x4]
64017639:	jmp    0x640177b1
6401763e:	jne    0x6401764f
64017640:	cmp    cx,0x67
64017644:	jne    0x6401768e
64017646:	mov    DWORD PTR [ebp-0x18],0x1
6401764d:	jmp    0x6401768e
6401764f:	cmp    DWORD PTR [ebp-0x18],eax
64017652:	jle    0x64017657
64017654:	mov    DWORD PTR [ebp-0x18],eax
64017657:	cmp    DWORD PTR [ebp-0x18],0xa3
6401765e:	jle    0x6401768e
64017660:	mov    edi,DWORD PTR [ebp-0x18]
64017663:	add    edi,0x15d
64017669:	push   edi
6401766a:	call   0x640157d0
6401766f:	test   eax,eax
64017671:	pop    ecx
64017672:	mov    ecx,DWORD PTR [ebp-0x28]
64017675:	push   0x8
64017677:	mov    DWORD PTR [ebp-0x64],eax
6401767a:	pop    edx
6401767b:	je     0x64017687
6401767d:	mov    DWORD PTR [ebp-0x1c],eax
64017680:	mov    DWORD PTR [ebp-0x20],edi
64017683:	mov    esi,eax
64017685:	jmp    0x6401768e
64017687:	mov    DWORD PTR [ebp-0x18],0xa3
6401768e:	add    ebx,edx
64017690:	mov    eax,DWORD PTR [ebx-0x8]
64017693:	mov    DWORD PTR [ebp-0x78],eax
64017696:	mov    eax,DWORD PTR [ebx-0x4]
64017699:	mov    DWORD PTR [ebp-0x74],eax
6401769c:	lea    eax,[ebp-0x58]
6401769f:	push   eax
640176a0:	push   DWORD PTR [ebp-0x68]
640176a3:	movsx  eax,cl
640176a6:	push   DWORD PTR [ebp-0x18]
640176a9:	mov    DWORD PTR [ebp-0x24],ebx
640176ac:	push   eax
640176ad:	push   DWORD PTR [ebp-0x20]
640176b0:	lea    eax,[ebp-0x78]
640176b3:	push   esi
640176b4:	push   eax
640176b5:	push   DWORD PTR ds:0x6402cb5c
640176bb:	call   0x640143ef
640176c0:	pop    ecx
640176c1:	call   eax
640176c3:	mov    ebx,DWORD PTR [ebp-0x14]
640176c6:	add    esp,0x1c
640176c9:	and    ebx,0x80
640176cf:	je     0x640176ec
640176d1:	cmp    DWORD PTR [ebp-0x18],0x0
640176d5:	jne    0x640176ec
640176d7:	lea    eax,[ebp-0x58]
640176da:	push   eax
640176db:	push   esi
640176dc:	push   DWORD PTR ds:0x6402cb68
640176e2:	call   0x640143ef
640176e7:	pop    ecx
640176e8:	call   eax
640176ea:	pop    ecx
640176eb:	pop    ecx
640176ec:	cmp    WORD PTR [ebp-0x28],0x67
640176f1:	jne    0x6401770c
640176f3:	test   ebx,ebx
640176f5:	jne    0x6401770c
640176f7:	lea    eax,[ebp-0x58]
640176fa:	push   eax
640176fb:	push   esi
640176fc:	push   DWORD PTR ds:0x6402cb64
64017702:	call   0x640143ef
64017707:	pop    ecx
64017708:	call   eax
6401770a:	pop    ecx
6401770b:	pop    ecx
6401770c:	cmp    BYTE PTR [esi],0x2d
6401770f:	jne    0x6401771c
64017711:	or     DWORD PTR [ebp-0x14],0x100
64017718:	inc    esi
64017719:	mov    DWORD PTR [ebp-0x1c],esi
6401771c:	push   esi
6401771d:	jmp    0x64017594
64017722:	mov    DWORD PTR [ebp-0x18],edx
64017725:	mov    DWORD PTR [ebp-0x60],0x7
6401772c:	jmp    0x6401774f
6401772e:	sub    eax,0x73
64017731:	je     0x64017473
64017737:	sub    eax,esi
64017739:	je     0x6401761e
6401773f:	sub    eax,0x3
64017742:	jne    0x6401789e
64017748:	mov    DWORD PTR [ebp-0x60],0x27
6401774f:	test   BYTE PTR [ebp-0x14],0x80
64017753:	mov    DWORD PTR [ebp-0x28],0x10
6401775a:	je     0x64017625
64017760:	mov    eax,DWORD PTR [ebp-0x60]
64017763:	add    eax,0x51
64017766:	mov    WORD PTR [ebp-0x3c],0x30
6401776c:	mov    WORD PTR [ebp-0x3a],ax
64017770:	mov    DWORD PTR [ebp-0x30],esi
64017773:	jmp    0x64017625
64017778:	test   WORD PTR [ebp-0x14],0x1000
6401777e:	jne    0x64017631
64017784:	add    ebx,0x4
64017787:	test   BYTE PTR [ebp-0x14],0x20
6401778b:	je     0x640177a3
6401778d:	test   BYTE PTR [ebp-0x14],0x40
64017791:	mov    DWORD PTR [ebp-0x24],ebx
64017794:	je     0x6401779c
64017796:	movsx  eax,WORD PTR [ebx-0x4]
6401779a:	jmp    0x640177a0
6401779c:	movzx  eax,WORD PTR [ebx-0x4]
640177a0:	cdq    
640177a1:	jmp    0x640177b4
640177a3:	test   BYTE PTR [ebp-0x14],0x40
640177a7:	mov    eax,DWORD PTR [ebx-0x4]
640177aa:	je     0x640177af
640177ac:	cdq    
640177ad:	jmp    0x640177b1
640177af:	xor    edx,edx
640177b1:	mov    DWORD PTR [ebp-0x24],ebx
640177b4:	test   BYTE PTR [ebp-0x14],0x40
640177b8:	je     0x640177d2
640177ba:	test   edx,edx
640177bc:	jg     0x640177d2
640177be:	jl     0x640177c4
640177c0:	test   eax,eax
640177c2:	jae    0x640177d2
640177c4:	neg    eax
640177c6:	adc    edx,0x0
640177c9:	neg    edx
640177cb:	or     DWORD PTR [ebp-0x14],0x100
640177d2:	test   WORD PTR [ebp-0x14],0x9000
640177d8:	mov    ebx,edx
640177da:	mov    edi,eax
640177dc:	jne    0x640177e0
640177de:	xor    ebx,ebx
640177e0:	cmp    DWORD PTR [ebp-0x18],0x0
640177e4:	jge    0x640177ef
640177e6:	mov    DWORD PTR [ebp-0x18],0x1
640177ed:	jmp    0x64017800
640177ef:	and    DWORD PTR [ebp-0x14],0xfffffff7
640177f3:	mov    eax,0x200
640177f8:	cmp    DWORD PTR [ebp-0x18],eax
640177fb:	jle    0x64017800
640177fd:	mov    DWORD PTR [ebp-0x18],eax
64017800:	mov    eax,edi
64017802:	or     eax,ebx
64017804:	jne    0x64017809
64017806:	and    DWORD PTR [ebp-0x30],eax
64017809:	lea    esi,[ebp+0x1ef]
6401780f:	mov    eax,DWORD PTR [ebp-0x18]
64017812:	dec    DWORD PTR [ebp-0x18]
64017815:	test   eax,eax
64017817:	jg     0x6401781f
64017819:	mov    eax,edi
6401781b:	or     eax,ebx
6401781d:	je     0x64017843
6401781f:	mov    eax,DWORD PTR [ebp-0x28]
64017822:	cdq    
64017823:	push   edx
64017824:	push   eax
64017825:	push   ebx
64017826:	push   edi
64017827:	call   0x640188a0
6401782c:	add    ecx,0x30
6401782f:	cmp    ecx,0x39
64017832:	mov    DWORD PTR [ebp-0x7c],ebx
64017835:	mov    edi,eax
64017837:	mov    ebx,edx
64017839:	jle    0x6401783e
6401783b:	add    ecx,DWORD PTR [ebp-0x60]
6401783e:	mov    BYTE PTR [esi],cl
64017840:	dec    esi
64017841:	jmp    0x6401780f
64017843:	lea    eax,[ebp+0x1ef]
64017849:	sub    eax,esi
6401784b:	inc    esi
6401784c:	test   WORD PTR [ebp-0x14],0x200
64017852:	mov    DWORD PTR [ebp-0x20],eax
64017855:	mov    DWORD PTR [ebp-0x1c],esi
64017858:	je     0x6401789e
6401785a:	test   eax,eax
6401785c:	je     0x64017865
6401785e:	mov    ecx,esi
64017860:	cmp    BYTE PTR [ecx],0x30
64017863:	je     0x6401789e
64017865:	dec    DWORD PTR [ebp-0x1c]
64017868:	mov    ecx,DWORD PTR [ebp-0x1c]
6401786b:	mov    BYTE PTR [ecx],0x30
6401786e:	inc    eax
6401786f:	jmp    0x6401789b
64017871:	test   ebx,ebx
64017873:	jne    0x6401787d
64017875:	mov    eax,ds:0x6402c954
6401787a:	mov    DWORD PTR [ebp-0x1c],eax
6401787d:	mov    eax,DWORD PTR [ebp-0x1c]
64017880:	mov    DWORD PTR [ebp-0x34],0x1
64017887:	jmp    0x64017892
64017889:	dec    edi
6401788a:	cmp    WORD PTR [eax],0x0
6401788e:	je     0x64017896
64017890:	add    eax,esi
64017892:	test   edi,edi
64017894:	jne    0x64017889
64017896:	sub    eax,DWORD PTR [ebp-0x1c]
64017899:	sar    eax,1
6401789b:	mov    DWORD PTR [ebp-0x20],eax
6401789e:	cmp    DWORD PTR [ebp-0x5c],0x0
640178a2:	jne    0x640179a7
640178a8:	mov    eax,DWORD PTR [ebp-0x14]
640178ab:	test   al,0x40
640178ad:	je     0x640178da
640178af:	test   ax,0x100
640178b3:	je     0x640178bd
640178b5:	mov    WORD PTR [ebp-0x3c],0x2d
640178bb:	jmp    0x640178d3
640178bd:	test   al,0x1
640178bf:	je     0x640178c9
640178c1:	mov    WORD PTR [ebp-0x3c],0x2b
640178c7:	jmp    0x640178d3
640178c9:	test   al,0x2
640178cb:	je     0x640178da
640178cd:	mov    WORD PTR [ebp-0x3c],0x20
640178d3:	mov    DWORD PTR [ebp-0x30],0x1
640178da:	mov    ebx,DWORD PTR [ebp-0x38]
640178dd:	mov    esi,DWORD PTR [ebp-0x20]
640178e0:	sub    ebx,esi
640178e2:	sub    ebx,DWORD PTR [ebp-0x30]
640178e5:	test   BYTE PTR [ebp-0x14],0xc
640178e9:	jne    0x640178fc
640178eb:	push   DWORD PTR [ebp-0x48]
640178ee:	lea    eax,[ebp-0x2c]
640178f1:	push   ebx
640178f2:	push   0x20
640178f4:	call   0x640170e9
640178f9:	add    esp,0xc
640178fc:	push   DWORD PTR [ebp-0x30]
640178ff:	mov    edi,DWORD PTR [ebp-0x48]
64017902:	lea    eax,[ebp-0x2c]
64017905:	lea    ecx,[ebp-0x3c]
64017908:	call   0x64016765
6401790d:	test   BYTE PTR [ebp-0x14],0x8
64017911:	pop    ecx
64017912:	je     0x64017929
64017914:	test   BYTE PTR [ebp-0x14],0x4
64017918:	jne    0x64017929
6401791a:	push   edi
6401791b:	push   ebx
6401791c:	push   0x30
6401791e:	lea    eax,[ebp-0x2c]
64017921:	call   0x640170e9
64017926:	add    esp,0xc
64017929:	cmp    DWORD PTR [ebp-0x34],0x0
6401792d:	jne    0x6401797d
6401792f:	test   esi,esi
64017931:	jle    0x6401797d
64017933:	mov    edi,DWORD PTR [ebp-0x1c]
64017936:	mov    DWORD PTR [ebp-0x28],esi
64017939:	dec    DWORD PTR [ebp-0x28]
6401793c:	lea    eax,[ebp-0x58]
6401793f:	push   eax
64017940:	mov    eax,DWORD PTR [ebp-0x58]
64017943:	push   DWORD PTR [eax+0xac]
64017949:	lea    eax,[ebp-0x70]
6401794c:	push   edi
6401794d:	push   eax
6401794e:	call   0x6401c53e
64017953:	add    esp,0x10
64017956:	test   eax,eax
64017958:	mov    DWORD PTR [ebp-0x7c],eax
6401795b:	jle    0x64017977
6401795d:	push   DWORD PTR [ebp-0x70]
64017960:	mov    eax,DWORD PTR [ebp-0x48]
64017963:	lea    esi,[ebp-0x2c]
64017966:	call   0x640170c4
6401796b:	add    edi,DWORD PTR [ebp-0x7c]
6401796e:	cmp    DWORD PTR [ebp-0x28],0x0
64017972:	pop    ecx
64017973:	jg     0x64017939
64017975:	jmp    0x6401798a
64017977:	or     DWORD PTR [ebp-0x2c],0xffffffff
6401797b:	jmp    0x6401798a
6401797d:	mov    ecx,DWORD PTR [ebp-0x1c]
64017980:	push   esi
64017981:	lea    eax,[ebp-0x2c]
64017984:	call   0x64016765
64017989:	pop    ecx
6401798a:	cmp    DWORD PTR [ebp-0x2c],0x0
6401798e:	jl     0x640179a7
64017990:	test   BYTE PTR [ebp-0x14],0x4
64017994:	je     0x640179a7
64017996:	push   DWORD PTR [ebp-0x48]
64017999:	lea    eax,[ebp-0x2c]
6401799c:	push   ebx
6401799d:	push   0x20
6401799f:	call   0x640170e9
640179a4:	add    esp,0xc
640179a7:	cmp    DWORD PTR [ebp-0x64],0x0
640179ab:	je     0x640179ba
640179ad:	push   DWORD PTR [ebp-0x64]
640179b0:	call   0x64013396
640179b5:	and    DWORD PTR [ebp-0x64],0x0
640179b9:	pop    ecx
640179ba:	mov    edi,DWORD PTR [ebp-0x6c]
640179bd:	mov    ebx,DWORD PTR [ebp-0x24]
640179c0:	movzx  eax,WORD PTR [edi]
640179c3:	test   ax,ax
640179c6:	mov    DWORD PTR [ebp-0x28],eax
640179c9:	je     0x640179d2
640179cb:	mov    ecx,eax
640179cd:	jmp    0x640171cf
640179d2:	cmp    DWORD PTR [ebp-0x40],0x0
640179d6:	je     0x640179e2
640179d8:	cmp    DWORD PTR [ebp-0x40],0x7
640179dc:	jne    0x6401716d
640179e2:	cmp    BYTE PTR [ebp-0x4c],0x0
640179e6:	je     0x640179ef
640179e8:	mov    eax,DWORD PTR [ebp-0x50]
640179eb:	and    DWORD PTR [eax+0x70],0xfffffffd
640179ef:	mov    eax,DWORD PTR [ebp-0x2c]
640179f2:	mov    ecx,DWORD PTR [ebp+0x3f0]
640179f8:	pop    edi
640179f9:	pop    esi
640179fa:	xor    ecx,ebp
640179fc:	pop    ebx
640179fd:	call   0x6401257c
64017a02:	add    ebp,0x3f4
64017a08:	leave  
64017a09:	ret    
64017a0a:	shl    BYTE PTR [ebx+0x1],cl
64017a0d:	fs daa 
64017a0f:	jb     0x64017a12
64017a11:	fs inc esp
64017a13:	jb     0x64017a16
64017a15:	fs nop
64017a17:	jb     0x64017a1a
64017a19:	fs retf 0x172
64017a1d:	shl    DWORD PTR fs:[edx+0x1],cl
64017a21:	or     dh,BYTE PTR fs:[ebx+0x1]
64017a25:	fs jmp 0x64017a9b
64017a28:	add    DWORD PTR [ebp+edx*2-0x75],esp
64017a2c:	in     al,dx
64017a2d:	sub    esp,0x10
64017a30:	mov    eax,ds:0x6402c09c
64017a35:	xor    eax,ebp
64017a37:	mov    DWORD PTR [ebp-0x4],eax
64017a3a:	push   ebx
64017a3b:	push   esi
64017a3c:	mov    esi,DWORD PTR ds:0x6402414c
64017a42:	xor    ebx,ebx
64017a44:	cmp    DWORD PTR ds:0x6402d978,ebx
64017a4a:	push   edi
64017a4b:	mov    edi,ecx
64017a4d:	jne    0x64017a85
64017a4f:	push   ebx
64017a50:	push   ebx
64017a51:	push   0x1
64017a53:	push   0x640265c0
64017a58:	push   0x100
64017a5d:	push   ebx
64017a5e:	call   esi
64017a60:	test   eax,eax
64017a62:	je     0x64017a70
64017a64:	mov    DWORD PTR ds:0x6402d978,0x1
64017a6e:	jmp    0x64017a85
64017a70:	call   DWORD PTR ds:0x64024044
64017a76:	cmp    eax,0x78
64017a79:	jne    0x64017a85
64017a7b:	mov    DWORD PTR ds:0x6402d978,0x2
64017a85:	cmp    DWORD PTR [ebp+0x14],ebx
64017a88:	jle    0x64017aa7
64017a8a:	mov    ecx,DWORD PTR [ebp+0x14]
64017a8d:	mov    eax,DWORD PTR [ebp+0x10]
64017a90:	dec    ecx
64017a91:	cmp    WORD PTR [eax],bx
64017a94:	je     0x64017a9f
64017a96:	inc    eax
64017a97:	inc    eax
64017a98:	cmp    ecx,ebx
64017a9a:	jne    0x64017a90
64017a9c:	or     ecx,0xffffffff
64017a9f:	or     eax,0xffffffff
64017aa2:	sub    eax,ecx
64017aa4:	add    DWORD PTR [ebp+0x14],eax
64017aa7:	mov    eax,ds:0x6402d978
64017aac:	cmp    eax,0x1
64017aaf:	jne    0x64017aca
64017ab1:	push   DWORD PTR [ebp+0x1c]
64017ab4:	push   DWORD PTR [ebp+0x18]
64017ab7:	push   DWORD PTR [ebp+0x14]
64017aba:	push   DWORD PTR [ebp+0x10]
64017abd:	push   DWORD PTR [ebp+0xc]
64017ac0:	push   DWORD PTR [ebp+0x8]
64017ac3:	call   esi
64017ac5:	jmp    0x64017c79
64017aca:	cmp    eax,0x2
64017acd:	je     0x64017ad3
64017acf:	cmp    eax,ebx
64017ad1:	jne    0x64017b25
64017ad3:	cmp    DWORD PTR [ebp+0x8],ebx
64017ad6:	mov    DWORD PTR [ebp-0xc],ebx
64017ad9:	jne    0x64017ae3
64017adb:	mov    eax,DWORD PTR [edi]
64017add:	mov    eax,DWORD PTR [eax+0x14]
64017ae0:	mov    DWORD PTR [ebp+0x8],eax
64017ae3:	cmp    DWORD PTR [ebp+0x20],ebx
64017ae6:	jne    0x64017af0
64017ae8:	mov    eax,DWORD PTR [edi]
64017aea:	mov    eax,DWORD PTR [eax+0x4]
64017aed:	mov    DWORD PTR [ebp+0x20],eax
64017af0:	push   DWORD PTR [ebp+0x8]
64017af3:	call   0x6401d062
64017af8:	cmp    DWORD PTR [ebp+0x20],eax
64017afb:	pop    ecx
64017afc:	je     0x64017b06
64017afe:	cmp    eax,0xffffffff
64017b01:	je     0x64017b06
64017b03:	mov    DWORD PTR [ebp+0x20],eax
64017b06:	mov    esi,DWORD PTR ds:0x64024028
64017b0c:	push   ebx
64017b0d:	push   ebx
64017b0e:	push   ebx
64017b0f:	push   ebx
64017b10:	push   DWORD PTR [ebp+0x14]
64017b13:	push   DWORD PTR [ebp+0x10]
64017b16:	push   ebx
64017b17:	push   DWORD PTR [ebp+0x20]
64017b1a:	call   esi
64017b1c:	mov    edi,eax
64017b1e:	cmp    edi,ebx
64017b20:	mov    DWORD PTR [ebp-0x10],edi
64017b23:	jne    0x64017b2c
64017b25:	xor    eax,eax
64017b27:	jmp    0x64017c79
64017b2c:	jle    0x64017b70
64017b2e:	push   0xffffffe0
64017b30:	xor    edx,edx
64017b32:	pop    eax
64017b33:	div    edi
64017b35:	cmp    eax,0x1
64017b38:	jb     0x64017b70
64017b3a:	lea    eax,[edi+0x8]
64017b3d:	cmp    eax,0x400
64017b42:	ja     0x64017b57
64017b44:	call   0x64012c80
64017b49:	mov    eax,esp
64017b4b:	cmp    eax,ebx
64017b4d:	je     0x64017b6b
64017b4f:	mov    DWORD PTR [eax],0xcccc
64017b55:	jmp    0x64017b68
64017b57:	push   eax
64017b58:	call   0x64013473
64017b5d:	cmp    eax,ebx
64017b5f:	pop    ecx
64017b60:	je     0x64017b6b
64017b62:	mov    DWORD PTR [eax],0xdddd
64017b68:	add    eax,0x8
64017b6b:	mov    DWORD PTR [ebp-0x8],eax
64017b6e:	jmp    0x64017b73
64017b70:	mov    DWORD PTR [ebp-0x8],ebx
64017b73:	cmp    DWORD PTR [ebp-0x8],ebx
64017b76:	je     0x64017b25
64017b78:	push   ebx
64017b79:	push   ebx
64017b7a:	push   edi
64017b7b:	push   DWORD PTR [ebp-0x8]
64017b7e:	push   DWORD PTR [ebp+0x14]
64017b81:	push   DWORD PTR [ebp+0x10]
64017b84:	push   ebx
64017b85:	push   DWORD PTR [ebp+0x20]
64017b88:	call   esi
64017b8a:	test   eax,eax
64017b8c:	je     0x64017c6d
64017b92:	push   ebx
64017b93:	push   ebx
64017b94:	push   edi
64017b95:	push   DWORD PTR [ebp-0x8]
64017b98:	mov    edi,DWORD PTR ds:0x64024148
64017b9e:	push   DWORD PTR [ebp+0xc]
64017ba1:	push   DWORD PTR [ebp+0x8]
64017ba4:	call   edi
64017ba6:	mov    esi,eax
64017ba8:	cmp    esi,ebx
64017baa:	je     0x64017c6d
64017bb0:	jle    0x64017bf1
64017bb2:	push   0xffffffe0
64017bb4:	xor    edx,edx
64017bb6:	pop    eax
64017bb7:	div    esi
64017bb9:	cmp    eax,0x1
64017bbc:	jb     0x64017bf1
64017bbe:	lea    eax,[esi+0x8]
64017bc1:	cmp    eax,0x400
64017bc6:	ja     0x64017bdb
64017bc8:	call   0x64012c80
64017bcd:	mov    eax,esp
64017bcf:	cmp    eax,ebx
64017bd1:	je     0x64017bef
64017bd3:	mov    DWORD PTR [eax],0xcccc
64017bd9:	jmp    0x64017bec
64017bdb:	push   eax
64017bdc:	call   0x64013473
64017be1:	cmp    eax,ebx
64017be3:	pop    ecx
64017be4:	je     0x64017bef
64017be6:	mov    DWORD PTR [eax],0xdddd
64017bec:	add    eax,0x8
64017bef:	mov    ebx,eax
64017bf1:	test   ebx,ebx
64017bf3:	je     0x64017c6d
64017bf5:	push   esi
64017bf6:	push   ebx
64017bf7:	push   DWORD PTR [ebp-0x10]
64017bfa:	push   DWORD PTR [ebp-0x8]
64017bfd:	push   DWORD PTR [ebp+0xc]
64017c00:	push   DWORD PTR [ebp+0x8]
64017c03:	call   edi
64017c05:	test   eax,eax
64017c07:	je     0x64017c66
64017c09:	test   WORD PTR [ebp+0xc],0x400
64017c0f:	je     0x64017c45
64017c11:	mov    eax,DWORD PTR [ebp+0x1c]
64017c14:	xor    edi,edi
64017c16:	cmp    eax,edi
64017c18:	mov    DWORD PTR [ebp-0xc],esi
64017c1b:	je     0x64017c66
64017c1d:	cmp    eax,esi
64017c1f:	jg     0x64017c24
64017c21:	lea    esi,[eax-0x1]
64017c24:	push   esi
64017c25:	push   ebx
64017c26:	push   eax
64017c27:	push   DWORD PTR [ebp+0x18]
64017c2a:	call   0x6401b746
64017c2f:	add    esp,0x10
64017c32:	test   eax,eax
64017c34:	je     0x64017c66
64017c36:	push   edi
64017c37:	push   edi
64017c38:	push   edi
64017c39:	push   edi
64017c3a:	push   edi
64017c3b:	call   0x64011fb8
64017c40:	add    esp,0x14
64017c43:	jmp    0x64017c66
64017c45:	xor    eax,eax
64017c47:	cmp    DWORD PTR [ebp+0x1c],eax
64017c4a:	jne    0x64017c50
64017c4c:	push   eax
64017c4d:	push   eax
64017c4e:	jmp    0x64017c56
64017c50:	push   DWORD PTR [ebp+0x1c]
64017c53:	push   DWORD PTR [ebp+0x18]
64017c56:	push   esi
64017c57:	push   ebx
64017c58:	push   0x1
64017c5a:	push   DWORD PTR [ebp+0x20]
64017c5d:	call   DWORD PTR ds:0x64024024
64017c63:	mov    DWORD PTR [ebp-0xc],eax
64017c66:	push   ebx
64017c67:	call   0x64012a12
64017c6c:	pop    ecx
64017c6d:	push   DWORD PTR [ebp-0x8]
64017c70:	call   0x64012a12
64017c75:	mov    eax,DWORD PTR [ebp-0xc]
64017c78:	pop    ecx
64017c79:	lea    esp,[ebp-0x1c]
64017c7c:	pop    edi
64017c7d:	pop    esi
64017c7e:	pop    ebx
64017c7f:	mov    ecx,DWORD PTR [ebp-0x4]
64017c82:	xor    ecx,ebp
64017c84:	call   0x6401257c
64017c89:	leave  
64017c8a:	ret    
64017c8b:	push   ebp
64017c8c:	mov    ebp,esp
64017c8e:	sub    esp,0x10
64017c91:	push   DWORD PTR [ebp+0x8]
64017c94:	lea    ecx,[ebp-0x10]
64017c97:	call   0x6401271f
64017c9c:	push   DWORD PTR [ebp+0x24]
64017c9f:	lea    ecx,[ebp-0x10]
64017ca2:	push   DWORD PTR [ebp+0x20]
64017ca5:	push   DWORD PTR [ebp+0x1c]
64017ca8:	push   DWORD PTR [ebp+0x18]
64017cab:	push   DWORD PTR [ebp+0x14]
64017cae:	push   DWORD PTR [ebp+0x10]
64017cb1:	push   DWORD PTR [ebp+0xc]
64017cb4:	call   0x64017a2a
64017cb9:	add    esp,0x1c
64017cbc:	cmp    BYTE PTR [ebp-0x4],0x0
64017cc0:	je     0x64017cc9
64017cc2:	mov    ecx,DWORD PTR [ebp-0x8]
64017cc5:	and    DWORD PTR [ecx+0x70],0xfffffffd
64017cc9:	leave  
64017cca:	ret    
64017ccb:	xor    eax,eax
64017ccd:	cmp    DWORD PTR [esp+0x8],eax
64017cd1:	jbe    0x64017ce6
64017cd3:	mov    ecx,DWORD PTR [esp+0x4]
64017cd7:	cmp    WORD PTR [ecx],0x0
64017cdb:	je     0x64017ce6
64017cdd:	inc    eax
64017cde:	inc    ecx
64017cdf:	inc    ecx
64017ce0:	cmp    eax,DWORD PTR [esp+0x8]
64017ce4:	jb     0x64017cd7
64017ce6:	ret    
64017ce7:	push   ebp
64017ce8:	mov    ebp,esp
64017cea:	sub    esp,0x4
64017ced:	mov    DWORD PTR [ebp-0x4],edi
64017cf0:	mov    edi,DWORD PTR [ebp+0x8]
64017cf3:	mov    ecx,DWORD PTR [ebp+0xc]
64017cf6:	shr    ecx,0x7
64017cf9:	pxor   xmm0,xmm0
64017cfd:	jmp    0x64017d07
64017cff:	lea    esp,[esp+0x0]
64017d06:	nop
64017d07:	movdqa XMMWORD PTR [edi],xmm0
64017d0b:	movdqa XMMWORD PTR [edi+0x10],xmm0
64017d10:	movdqa XMMWORD PTR [edi+0x20],xmm0
64017d15:	movdqa XMMWORD PTR [edi+0x30],xmm0
64017d1a:	movdqa XMMWORD PTR [edi+0x40],xmm0
64017d1f:	movdqa XMMWORD PTR [edi+0x50],xmm0
64017d24:	movdqa XMMWORD PTR [edi+0x60],xmm0
64017d29:	movdqa XMMWORD PTR [edi+0x70],xmm0
64017d2e:	lea    edi,[edi+0x80]
64017d34:	dec    ecx
64017d35:	jne    0x64017d07
64017d37:	mov    edi,DWORD PTR [ebp-0x4]
64017d3a:	mov    esp,ebp
64017d3c:	pop    ebp
64017d3d:	ret    
64017d3e:	push   ebp
64017d3f:	mov    ebp,esp
64017d41:	sub    esp,0x10
64017d44:	mov    DWORD PTR [ebp-0x4],edi
64017d47:	mov    eax,DWORD PTR [ebp+0x8]
64017d4a:	cdq    
64017d4b:	mov    edi,eax
64017d4d:	xor    edi,edx
64017d4f:	sub    edi,edx
64017d51:	and    edi,0xf
64017d54:	xor    edi,edx
64017d56:	sub    edi,edx
64017d58:	test   edi,edi
64017d5a:	jne    0x64017d98
64017d5c:	mov    ecx,DWORD PTR [ebp+0x10]
64017d5f:	mov    edx,ecx
64017d61:	and    edx,0x7f
64017d64:	mov    DWORD PTR [ebp-0xc],edx
64017d67:	cmp    ecx,edx
64017d69:	je     0x64017d7d
64017d6b:	sub    ecx,edx
64017d6d:	push   ecx
64017d6e:	push   eax
64017d6f:	call   0x64017ce7
64017d74:	add    esp,0x8
64017d77:	mov    eax,DWORD PTR [ebp+0x8]
64017d7a:	mov    edx,DWORD PTR [ebp-0xc]
64017d7d:	test   edx,edx
64017d7f:	je     0x64017dc6
64017d81:	add    eax,DWORD PTR [ebp+0x10]
64017d84:	sub    eax,edx
64017d86:	mov    DWORD PTR [ebp-0x8],eax
64017d89:	xor    eax,eax
64017d8b:	mov    edi,DWORD PTR [ebp-0x8]
64017d8e:	mov    ecx,DWORD PTR [ebp-0xc]
64017d91:	rep stos BYTE PTR es:[edi],al
64017d93:	mov    eax,DWORD PTR [ebp+0x8]
64017d96:	jmp    0x64017dc6
64017d98:	neg    edi
64017d9a:	add    edi,0x10
64017d9d:	mov    DWORD PTR [ebp-0x10],edi
64017da0:	xor    eax,eax
64017da2:	mov    edi,DWORD PTR [ebp+0x8]
64017da5:	mov    ecx,DWORD PTR [ebp-0x10]
64017da8:	rep stos BYTE PTR es:[edi],al
64017daa:	mov    eax,DWORD PTR [ebp-0x10]
64017dad:	mov    ecx,DWORD PTR [ebp+0x8]
64017db0:	mov    edx,DWORD PTR [ebp+0x10]
64017db3:	add    ecx,eax
64017db5:	sub    edx,eax
64017db7:	push   edx
64017db8:	push   0x0
64017dba:	push   ecx
64017dbb:	call   0x64017d3e
64017dc0:	add    esp,0xc
64017dc3:	mov    eax,DWORD PTR [ebp+0x8]
64017dc6:	mov    edi,DWORD PTR [ebp-0x4]
64017dc9:	mov    esp,ebp
64017dcb:	pop    ebp
64017dcc:	ret    
64017dcd:	and    DWORD PTR ds:0x64031560,0x0
64017dd4:	call   0x6401d2ab
64017dd9:	mov    ds:0x64031560,eax
64017dde:	xor    eax,eax
64017de0:	ret    
64017de1:	int3   
64017de2:	int3   
64017de3:	int3   
64017de4:	int3   
64017de5:	int3   
64017de6:	int3   
64017de7:	int3   
64017de8:	int3   
64017de9:	int3   
64017dea:	int3   
64017deb:	int3   
64017dec:	int3   
64017ded:	int3   
64017dee:	int3   
64017def:	int3   
64017df0:	push   ecx
64017df1:	lea    ecx,[esp+0x4]
64017df5:	sub    ecx,eax
64017df7:	sbb    eax,eax
64017df9:	not    eax
64017dfb:	and    ecx,eax
64017dfd:	mov    eax,esp
64017dff:	and    eax,0xfffff000
64017e04:	cmp    ecx,eax
64017e06:	jb     0x64017e12
64017e08:	mov    eax,ecx
64017e0a:	pop    ecx
64017e0b:	xchg   esp,eax
64017e0c:	mov    eax,DWORD PTR [eax]
64017e0e:	mov    DWORD PTR [esp],eax
64017e11:	ret    
64017e12:	sub    eax,0x1000
64017e17:	test   DWORD PTR [eax],eax
64017e19:	jmp    0x64017e04
64017e1b:	push   0x54
64017e1d:	push   0x640299d0
64017e22:	call   0x64013ac0
64017e27:	xor    edi,edi
64017e29:	mov    DWORD PTR [ebp-0x4],edi
64017e2c:	lea    eax,[ebp-0x64]
64017e2f:	push   eax
64017e30:	call   DWORD PTR ds:0x6402415c
64017e36:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017e3d:	push   0x40
64017e3f:	push   0x20
64017e41:	pop    esi
64017e42:	push   esi
64017e43:	call   0x64015810
64017e48:	pop    ecx
64017e49:	pop    ecx
64017e4a:	cmp    eax,edi
64017e4c:	je     0x64018066
64017e52:	mov    ds:0x64031460,eax
64017e57:	mov    DWORD PTR ds:0x64031440,esi
64017e5d:	lea    ecx,[eax+0x800]
64017e63:	jmp    0x64017e95
64017e65:	mov    BYTE PTR [eax+0x4],0x0
64017e69:	or     DWORD PTR [eax],0xffffffff
64017e6c:	mov    BYTE PTR [eax+0x5],0xa
64017e70:	mov    DWORD PTR [eax+0x8],edi
64017e73:	mov    BYTE PTR [eax+0x24],0x0
64017e77:	mov    BYTE PTR [eax+0x25],0xa
64017e7b:	mov    BYTE PTR [eax+0x26],0xa
64017e7f:	mov    DWORD PTR [eax+0x38],edi
64017e82:	mov    BYTE PTR [eax+0x34],0x0
64017e86:	add    eax,0x40
64017e89:	mov    ecx,DWORD PTR ds:0x64031460
64017e8f:	add    ecx,0x800
64017e95:	cmp    eax,ecx
64017e97:	jb     0x64017e65
64017e99:	cmp    WORD PTR [ebp-0x32],di
64017e9d:	je     0x64017fad
64017ea3:	mov    eax,DWORD PTR [ebp-0x30]
64017ea6:	cmp    eax,edi
64017ea8:	je     0x64017fad
64017eae:	mov    edi,DWORD PTR [eax]
64017eb0:	lea    ebx,[eax+0x4]
64017eb3:	lea    eax,[ebx+edi*1]
64017eb6:	mov    DWORD PTR [ebp-0x1c],eax
64017eb9:	mov    esi,0x800
64017ebe:	cmp    edi,esi
64017ec0:	jl     0x64017ec4
64017ec2:	mov    edi,esi
64017ec4:	mov    DWORD PTR [ebp-0x20],0x1
64017ecb:	jmp    0x64017f28
64017ecd:	push   0x40
64017ecf:	push   0x20
64017ed1:	call   0x64015810
64017ed6:	pop    ecx
64017ed7:	pop    ecx
64017ed8:	test   eax,eax
64017eda:	je     0x64017f32
64017edc:	mov    ecx,DWORD PTR [ebp-0x20]
64017edf:	lea    ecx,[ecx*4+0x64031460]
64017ee6:	mov    DWORD PTR [ecx],eax
64017ee8:	add    DWORD PTR ds:0x64031440,0x20
64017eef:	lea    edx,[eax+0x800]
64017ef5:	jmp    0x64017f21
64017ef7:	mov    BYTE PTR [eax+0x4],0x0
64017efb:	or     DWORD PTR [eax],0xffffffff
64017efe:	mov    BYTE PTR [eax+0x5],0xa
64017f02:	and    DWORD PTR [eax+0x8],0x0
64017f06:	and    BYTE PTR [eax+0x24],0x80
64017f0a:	mov    BYTE PTR [eax+0x25],0xa
64017f0e:	mov    BYTE PTR [eax+0x26],0xa
64017f12:	and    DWORD PTR [eax+0x38],0x0
64017f16:	mov    BYTE PTR [eax+0x34],0x0
64017f1a:	add    eax,0x40
64017f1d:	mov    edx,DWORD PTR [ecx]
64017f1f:	add    edx,esi
64017f21:	cmp    eax,edx
64017f23:	jb     0x64017ef7
64017f25:	inc    DWORD PTR [ebp-0x20]
64017f28:	cmp    DWORD PTR ds:0x64031440,edi
64017f2e:	jl     0x64017ecd
64017f30:	jmp    0x64017f38
64017f32:	mov    edi,DWORD PTR ds:0x64031440
64017f38:	and    DWORD PTR [ebp-0x20],0x0
64017f3c:	test   edi,edi
64017f3e:	jle    0x64017fad
64017f40:	mov    eax,DWORD PTR [ebp-0x1c]
64017f43:	mov    ecx,DWORD PTR [eax]
64017f45:	cmp    ecx,0xffffffff
64017f48:	je     0x64017fa0
64017f4a:	cmp    ecx,0xfffffffe
64017f4d:	je     0x64017fa0
64017f4f:	mov    al,BYTE PTR [ebx]
64017f51:	test   al,0x1
64017f53:	je     0x64017fa0
64017f55:	test   al,0x8
64017f57:	jne    0x64017f64
64017f59:	push   ecx
64017f5a:	call   DWORD PTR ds:0x64024158
64017f60:	test   eax,eax
64017f62:	je     0x64017fa0
64017f64:	mov    esi,DWORD PTR [ebp-0x20]
64017f67:	mov    eax,esi
64017f69:	sar    eax,0x5
64017f6c:	and    esi,0x1f
64017f6f:	shl    esi,0x6
64017f72:	add    esi,DWORD PTR [eax*4+0x64031460]
64017f79:	mov    eax,DWORD PTR [ebp-0x1c]
64017f7c:	mov    eax,DWORD PTR [eax]
64017f7e:	mov    DWORD PTR [esi],eax
64017f80:	mov    al,BYTE PTR [ebx]
64017f82:	mov    BYTE PTR [esi+0x4],al
64017f85:	push   0xfa0
64017f8a:	lea    eax,[esi+0xc]
64017f8d:	push   eax
64017f8e:	call   0x6401b178
64017f93:	pop    ecx
64017f94:	pop    ecx
64017f95:	test   eax,eax
64017f97:	je     0x64018066
64017f9d:	inc    DWORD PTR [esi+0x8]
64017fa0:	inc    DWORD PTR [ebp-0x20]
64017fa3:	inc    ebx
64017fa4:	add    DWORD PTR [ebp-0x1c],0x4
64017fa8:	cmp    DWORD PTR [ebp-0x20],edi
64017fab:	jl     0x64017f40
64017fad:	xor    ebx,ebx
64017faf:	mov    esi,ebx
64017fb1:	shl    esi,0x6
64017fb4:	add    esi,DWORD PTR ds:0x64031460
64017fba:	mov    eax,DWORD PTR [esi]
64017fbc:	cmp    eax,0xffffffff
64017fbf:	je     0x64017fcc
64017fc1:	cmp    eax,0xfffffffe
64017fc4:	je     0x64017fcc
64017fc6:	or     BYTE PTR [esi+0x4],0x80
64017fca:	jmp    0x6401803e
64017fcc:	mov    BYTE PTR [esi+0x4],0x81
64017fd0:	test   ebx,ebx
64017fd2:	jne    0x64017fd9
64017fd4:	push   0xfffffff6
64017fd6:	pop    eax
64017fd7:	jmp    0x64017fe3
64017fd9:	mov    eax,ebx
64017fdb:	dec    eax
64017fdc:	neg    eax
64017fde:	sbb    eax,eax
64017fe0:	add    eax,0xfffffff5
64017fe3:	push   eax
64017fe4:	call   DWORD PTR ds:0x64024154
64017fea:	mov    edi,eax
64017fec:	cmp    edi,0xffffffff
64017fef:	je     0x64018034
64017ff1:	test   edi,edi
64017ff3:	je     0x64018034
64017ff5:	push   edi
64017ff6:	call   DWORD PTR ds:0x64024158
64017ffc:	test   eax,eax
64017ffe:	je     0x64018034
64018000:	mov    DWORD PTR [esi],edi
64018002:	and    eax,0xff
64018007:	cmp    eax,0x2
6401800a:	jne    0x64018012
6401800c:	or     BYTE PTR [esi+0x4],0x40
64018010:	jmp    0x6401801b
64018012:	cmp    eax,0x3
64018015:	jne    0x6401801b
64018017:	or     BYTE PTR [esi+0x4],0x8
6401801b:	push   0xfa0
64018020:	lea    eax,[esi+0xc]
64018023:	push   eax
64018024:	call   0x6401b178
64018029:	pop    ecx
6401802a:	pop    ecx
6401802b:	test   eax,eax
6401802d:	je     0x64018066
6401802f:	inc    DWORD PTR [esi+0x8]
64018032:	jmp    0x6401803e
64018034:	or     BYTE PTR [esi+0x4],0x40
64018038:	mov    DWORD PTR [esi],0xfffffffe
6401803e:	inc    ebx
6401803f:	cmp    ebx,0x3
64018042:	jl     0x64017faf
64018048:	push   DWORD PTR ds:0x64031440
6401804e:	call   DWORD PTR ds:0x64024150
64018054:	xor    eax,eax
64018056:	jmp    0x64018069
64018058:	xor    eax,eax
6401805a:	inc    eax
6401805b:	ret    
6401805c:	mov    esp,DWORD PTR [ebp-0x18]
6401805f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64018066:	or     eax,0xffffffff
64018069:	call   0x64013b05
6401806e:	ret    
6401806f:	push   esi
64018070:	push   edi
64018071:	mov    esi,0x64031460
64018076:	mov    edi,DWORD PTR [esi]
64018078:	test   edi,edi
6401807a:	je     0x640180ad
6401807c:	lea    eax,[edi+0x800]
64018082:	jmp    0x6401809e
64018084:	cmp    DWORD PTR [edi+0x8],0x0
64018088:	je     0x64018094
6401808a:	lea    eax,[edi+0xc]
6401808d:	push   eax
6401808e:	call   DWORD PTR ds:0x640240a4
64018094:	mov    eax,DWORD PTR [esi]
64018096:	add    edi,0x40
64018099:	add    eax,0x800
6401809e:	cmp    edi,eax
640180a0:	jb     0x64018084
640180a2:	push   DWORD PTR [esi]
640180a4:	call   0x64013396
640180a9:	and    DWORD PTR [esi],0x0
640180ac:	pop    ecx
640180ad:	add    esi,0x4
640180b0:	cmp    esi,0x64031560
640180b6:	jl     0x64018076
640180b8:	pop    edi
640180b9:	pop    esi
640180ba:	ret    
640180bb:	push   ebx
640180bc:	xor    ebx,ebx
640180be:	cmp    DWORD PTR ds:0x64031574,ebx
640180c4:	push   esi
640180c5:	push   edi
640180c6:	jne    0x640180cd
640180c8:	call   0x640162e1
640180cd:	mov    esi,DWORD PTR ds:0x6402d594
640180d3:	xor    edi,edi
640180d5:	cmp    esi,ebx
640180d7:	jne    0x640180f1
640180d9:	or     eax,0xffffffff
640180dc:	jmp    0x6401817c
640180e1:	cmp    al,0x3d
640180e3:	je     0x640180e6
640180e5:	inc    edi
640180e6:	push   esi
640180e7:	call   0x64013cc0
640180ec:	pop    ecx
640180ed:	lea    esi,[esi+eax*1+0x1]
640180f1:	mov    al,BYTE PTR [esi]
640180f3:	cmp    al,bl
640180f5:	jne    0x640180e1
640180f7:	push   0x4
640180f9:	inc    edi
640180fa:	push   edi
640180fb:	call   0x64015810
64018100:	mov    edi,eax
64018102:	cmp    edi,ebx
64018104:	pop    ecx
64018105:	pop    ecx
64018106:	mov    DWORD PTR ds:0x6402d914,edi
6401810c:	je     0x640180d9
6401810e:	mov    esi,DWORD PTR ds:0x6402d594
64018114:	push   ebp
64018115:	jmp    0x64018157
64018117:	push   esi
64018118:	call   0x64013cc0
6401811d:	mov    ebp,eax
6401811f:	inc    ebp
64018120:	cmp    BYTE PTR [esi],0x3d
64018123:	pop    ecx
64018124:	je     0x64018155
64018126:	push   0x1
64018128:	push   ebp
64018129:	call   0x64015810
6401812e:	cmp    eax,ebx
64018130:	pop    ecx
64018131:	pop    ecx
64018132:	mov    DWORD PTR [edi],eax
64018134:	je     0x64018180
64018136:	push   esi
64018137:	push   ebp
64018138:	push   eax
64018139:	call   0x64013eb8
6401813e:	add    esp,0xc
64018141:	test   eax,eax
64018143:	je     0x64018152
64018145:	push   ebx
64018146:	push   ebx
64018147:	push   ebx
64018148:	push   ebx
64018149:	push   ebx
6401814a:	call   0x64011fb8
6401814f:	add    esp,0x14
64018152:	add    edi,0x4
64018155:	add    esi,ebp
64018157:	cmp    BYTE PTR [esi],bl
64018159:	jne    0x64018117
6401815b:	push   DWORD PTR ds:0x6402d594
64018161:	call   0x64013396
64018166:	mov    DWORD PTR ds:0x6402d594,ebx
6401816c:	mov    DWORD PTR [edi],ebx
6401816e:	mov    DWORD PTR ds:0x64031568,0x1
64018178:	xor    eax,eax
6401817a:	pop    ecx
6401817b:	pop    ebp
6401817c:	pop    edi
6401817d:	pop    esi
6401817e:	pop    ebx
6401817f:	ret    
64018180:	push   DWORD PTR ds:0x6402d914
64018186:	call   0x64013396
6401818b:	mov    DWORD PTR ds:0x6402d914,ebx
64018191:	or     eax,0xffffffff
64018194:	jmp    0x6401817a
64018196:	push   ebp
64018197:	mov    ebp,esp
64018199:	push   ecx
6401819a:	mov    ecx,DWORD PTR [ebp+0x10]
6401819d:	push   ebx
6401819e:	xor    eax,eax
640181a0:	cmp    DWORD PTR [ebp+0x8],eax
640181a3:	push   esi
640181a4:	mov    DWORD PTR [edi],eax
640181a6:	mov    esi,edx
640181a8:	mov    edx,DWORD PTR [ebp+0xc]
640181ab:	mov    DWORD PTR [ecx],0x1
640181b1:	je     0x640181bc
640181b3:	mov    ebx,DWORD PTR [ebp+0x8]
640181b6:	add    DWORD PTR [ebp+0x8],0x4
640181ba:	mov    DWORD PTR [ebx],edx
640181bc:	mov    DWORD PTR [ebp-0x4],eax
640181bf:	cmp    BYTE PTR [esi],0x22
640181c2:	jne    0x640181d4
640181c4:	xor    eax,eax
640181c6:	cmp    DWORD PTR [ebp-0x4],eax
640181c9:	mov    bl,0x22
640181cb:	sete   al
640181ce:	inc    esi
640181cf:	mov    DWORD PTR [ebp-0x4],eax
640181d2:	jmp    0x64018210
640181d4:	inc    DWORD PTR [edi]
640181d6:	test   edx,edx
640181d8:	je     0x640181e2
640181da:	mov    al,BYTE PTR [esi]
640181dc:	mov    BYTE PTR [edx],al
640181de:	inc    edx
640181df:	mov    DWORD PTR [ebp+0xc],edx
640181e2:	mov    bl,BYTE PTR [esi]
640181e4:	movzx  eax,bl
640181e7:	push   eax
640181e8:	inc    esi
640181e9:	call   0x6401d369
640181ee:	test   eax,eax
640181f0:	pop    ecx
640181f1:	je     0x64018206
640181f3:	inc    DWORD PTR [edi]
640181f5:	cmp    DWORD PTR [ebp+0xc],0x0
640181f9:	je     0x64018205
640181fb:	mov    ecx,DWORD PTR [ebp+0xc]
640181fe:	mov    al,BYTE PTR [esi]
64018200:	inc    DWORD PTR [ebp+0xc]
64018203:	mov    BYTE PTR [ecx],al
64018205:	inc    esi
64018206:	test   bl,bl
64018208:	mov    edx,DWORD PTR [ebp+0xc]
6401820b:	mov    ecx,DWORD PTR [ebp+0x10]
6401820e:	je     0x64018242
64018210:	cmp    DWORD PTR [ebp-0x4],0x0
64018214:	jne    0x640181bf
64018216:	cmp    bl,0x20
64018219:	je     0x64018220
6401821b:	cmp    bl,0x9
6401821e:	jne    0x640181bf
64018220:	test   edx,edx
64018222:	je     0x64018228
64018224:	mov    BYTE PTR [edx-0x1],0x0
64018228:	and    DWORD PTR [ebp-0x4],0x0
6401822c:	cmp    BYTE PTR [esi],0x0
6401822f:	je     0x6401831e
64018235:	mov    al,BYTE PTR [esi]
64018237:	cmp    al,0x20
64018239:	je     0x6401823f
6401823b:	cmp    al,0x9
6401823d:	jne    0x64018245
6401823f:	inc    esi
64018240:	jmp    0x64018235
64018242:	dec    esi
64018243:	jmp    0x64018228
64018245:	cmp    BYTE PTR [esi],0x0
64018248:	je     0x6401831e
6401824e:	cmp    DWORD PTR [ebp+0x8],0x0
64018252:	je     0x6401825d
64018254:	mov    eax,DWORD PTR [ebp+0x8]
64018257:	add    DWORD PTR [ebp+0x8],0x4
6401825b:	mov    DWORD PTR [eax],edx
6401825d:	inc    DWORD PTR [ecx]
6401825f:	xor    ebx,ebx
64018261:	inc    ebx
64018262:	xor    ecx,ecx
64018264:	jmp    0x64018268
64018266:	inc    esi
64018267:	inc    ecx
64018268:	cmp    BYTE PTR [esi],0x5c
6401826b:	je     0x64018266
6401826d:	cmp    BYTE PTR [esi],0x22
64018270:	jne    0x64018298
64018272:	test   cl,0x1
64018275:	jne    0x64018296
64018277:	cmp    DWORD PTR [ebp-0x4],0x0
6401827b:	je     0x64018289
6401827d:	lea    eax,[esi+0x1]
64018280:	cmp    BYTE PTR [eax],0x22
64018283:	jne    0x64018289
64018285:	mov    esi,eax
64018287:	jmp    0x64018296
64018289:	xor    eax,eax
6401828b:	xor    ebx,ebx
6401828d:	cmp    DWORD PTR [ebp-0x4],eax
64018290:	sete   al
64018293:	mov    DWORD PTR [ebp-0x4],eax
64018296:	shr    ecx,1
64018298:	test   ecx,ecx
6401829a:	je     0x640182ae
6401829c:	dec    ecx
6401829d:	test   edx,edx
6401829f:	je     0x640182a5
640182a1:	mov    BYTE PTR [edx],0x5c
640182a4:	inc    edx
640182a5:	inc    DWORD PTR [edi]
640182a7:	test   ecx,ecx
640182a9:	jne    0x6401829c
640182ab:	mov    DWORD PTR [ebp+0xc],edx
640182ae:	mov    al,BYTE PTR [esi]
640182b0:	test   al,al
640182b2:	je     0x64018309
640182b4:	cmp    DWORD PTR [ebp-0x4],0x0
640182b8:	jne    0x640182c2
640182ba:	cmp    al,0x20
640182bc:	je     0x64018309
640182be:	cmp    al,0x9
640182c0:	je     0x64018309
640182c2:	test   ebx,ebx
640182c4:	je     0x64018303
640182c6:	test   edx,edx
640182c8:	movsx  eax,al
640182cb:	push   eax
640182cc:	je     0x640182f1
640182ce:	call   0x6401d369
640182d3:	test   eax,eax
640182d5:	pop    ecx
640182d6:	je     0x640182e5
640182d8:	mov    al,BYTE PTR [esi]
640182da:	mov    ecx,DWORD PTR [ebp+0xc]
640182dd:	inc    DWORD PTR [ebp+0xc]
640182e0:	mov    BYTE PTR [ecx],al
640182e2:	inc    esi
640182e3:	inc    DWORD PTR [edi]
640182e5:	mov    ecx,DWORD PTR [ebp+0xc]
640182e8:	mov    al,BYTE PTR [esi]
640182ea:	inc    DWORD PTR [ebp+0xc]
640182ed:	mov    BYTE PTR [ecx],al
640182ef:	jmp    0x640182fe
640182f1:	call   0x6401d369
640182f6:	test   eax,eax
640182f8:	pop    ecx
640182f9:	je     0x640182fe
640182fb:	inc    esi
640182fc:	inc    DWORD PTR [edi]
640182fe:	inc    DWORD PTR [edi]
64018300:	mov    edx,DWORD PTR [ebp+0xc]
64018303:	inc    esi
64018304:	jmp    0x6401825f
64018309:	test   edx,edx
6401830b:	je     0x64018314
6401830d:	mov    BYTE PTR [edx],0x0
64018310:	inc    edx
64018311:	mov    DWORD PTR [ebp+0xc],edx
64018314:	inc    DWORD PTR [edi]
64018316:	mov    ecx,DWORD PTR [ebp+0x10]
64018319:	jmp    0x6401822c
6401831e:	mov    eax,DWORD PTR [ebp+0x8]
64018321:	test   eax,eax
64018323:	pop    esi
64018324:	pop    ebx
64018325:	je     0x6401832a
64018327:	and    DWORD PTR [eax],0x0
6401832a:	inc    DWORD PTR [ecx]
6401832c:	leave  
6401832d:	ret    
6401832e:	push   ebp
6401832f:	mov    ebp,esp
64018331:	sub    esp,0xc
64018334:	push   ebx
64018335:	xor    ebx,ebx
64018337:	cmp    DWORD PTR ds:0x64031574,ebx
6401833d:	push   esi
6401833e:	push   edi
6401833f:	jne    0x64018346
64018341:	call   0x640162e1
64018346:	push   0x104
6401834b:	mov    esi,0x6402d980
64018350:	push   esi
64018351:	push   ebx
64018352:	mov    BYTE PTR ds:0x6402da84,bl
64018358:	call   DWORD PTR ds:0x64024160
6401835e:	mov    eax,ds:0x64031580
64018363:	cmp    eax,ebx
64018365:	mov    DWORD PTR ds:0x6402d924,esi
6401836b:	je     0x64018374
6401836d:	cmp    BYTE PTR [eax],bl
6401836f:	mov    DWORD PTR [ebp-0x4],eax
64018372:	jne    0x64018377
64018374:	mov    DWORD PTR [ebp-0x4],esi
64018377:	mov    edx,DWORD PTR [ebp-0x4]
6401837a:	lea    eax,[ebp-0x8]
6401837d:	push   eax
6401837e:	push   ebx
6401837f:	push   ebx
64018380:	lea    edi,[ebp-0xc]
64018383:	call   0x64018196
64018388:	mov    eax,DWORD PTR [ebp-0x8]
6401838b:	add    esp,0xc
6401838e:	cmp    eax,0x3fffffff
64018393:	jae    0x640183df
64018395:	mov    ecx,DWORD PTR [ebp-0xc]
64018398:	cmp    ecx,0xffffffff
6401839b:	jae    0x640183df
6401839d:	mov    edi,eax
6401839f:	shl    edi,0x2
640183a2:	lea    eax,[edi+ecx*1]
640183a5:	cmp    eax,ecx
640183a7:	jb     0x640183df
640183a9:	push   eax
640183aa:	call   0x640157d0
640183af:	mov    esi,eax
640183b1:	cmp    esi,ebx
640183b3:	pop    ecx
640183b4:	je     0x640183df
640183b6:	mov    edx,DWORD PTR [ebp-0x4]
640183b9:	lea    eax,[ebp-0x8]
640183bc:	push   eax
640183bd:	add    edi,esi
640183bf:	push   edi
640183c0:	push   esi
640183c1:	lea    edi,[ebp-0xc]
640183c4:	call   0x64018196
640183c9:	mov    eax,DWORD PTR [ebp-0x8]
640183cc:	add    esp,0xc
640183cf:	dec    eax
640183d0:	mov    ds:0x6402d908,eax
640183d5:	mov    DWORD PTR ds:0x6402d90c,esi
640183db:	xor    eax,eax
640183dd:	jmp    0x640183e2
640183df:	or     eax,0xffffffff
640183e2:	pop    edi
640183e3:	pop    esi
640183e4:	pop    ebx
640183e5:	leave  
640183e6:	ret    
640183e7:	push   ecx
640183e8:	push   ecx
640183e9:	mov    eax,ds:0x6402da88
640183ee:	push   ebx
640183ef:	push   ebp
640183f0:	push   esi
640183f1:	push   edi
640183f2:	mov    edi,DWORD PTR ds:0x64024080
640183f8:	xor    ebx,ebx
640183fa:	xor    esi,esi
640183fc:	cmp    eax,ebx
640183fe:	push   0x2
64018400:	pop    ebp
64018401:	jne    0x64018430
64018403:	call   edi
64018405:	mov    esi,eax
64018407:	cmp    esi,ebx
64018409:	je     0x64018417
6401840b:	mov    DWORD PTR ds:0x6402da88,0x1
64018415:	jmp    0x64018439
64018417:	call   DWORD PTR ds:0x64024044
6401841d:	cmp    eax,0x78
64018420:	jne    0x6401842b
64018422:	mov    eax,ebp
64018424:	mov    ds:0x6402da88,eax
64018429:	jmp    0x64018430
6401842b:	mov    eax,ds:0x6402da88
64018430:	cmp    eax,0x1
64018433:	jne    0x640184bd
64018439:	cmp    esi,ebx
6401843b:	jne    0x6401844c
6401843d:	call   edi
6401843f:	mov    esi,eax
64018441:	cmp    esi,ebx
64018443:	jne    0x6401844c
64018445:	xor    eax,eax
64018447:	jmp    0x64018515
6401844c:	cmp    WORD PTR [esi],bx
6401844f:	mov    eax,esi
64018451:	je     0x64018461
64018453:	add    eax,ebp
64018455:	cmp    WORD PTR [eax],bx
64018458:	jne    0x64018453
6401845a:	add    eax,ebp
6401845c:	cmp    WORD PTR [eax],bx
6401845f:	jne    0x64018453
64018461:	mov    edi,DWORD PTR ds:0x64024028
64018467:	push   ebx
64018468:	push   ebx
64018469:	push   ebx
6401846a:	sub    eax,esi
6401846c:	push   ebx
6401846d:	sar    eax,1
6401846f:	inc    eax
64018470:	push   eax
64018471:	push   esi
64018472:	push   ebx
64018473:	push   ebx
64018474:	mov    DWORD PTR [esp+0x34],eax
64018478:	call   edi
6401847a:	mov    ebp,eax
6401847c:	cmp    ebp,ebx
6401847e:	je     0x640184b2
64018480:	push   ebp
64018481:	call   0x640157d0
64018486:	cmp    eax,ebx
64018488:	pop    ecx
64018489:	mov    DWORD PTR [esp+0x10],eax
6401848d:	je     0x640184b2
6401848f:	push   ebx
64018490:	push   ebx
64018491:	push   ebp
64018492:	push   eax
64018493:	push   DWORD PTR [esp+0x24]
64018497:	push   esi
64018498:	push   ebx
64018499:	push   ebx
6401849a:	call   edi
6401849c:	test   eax,eax
6401849e:	jne    0x640184ae
640184a0:	push   DWORD PTR [esp+0x10]
640184a4:	call   0x64013396
640184a9:	pop    ecx
640184aa:	mov    DWORD PTR [esp+0x10],ebx
640184ae:	mov    ebx,DWORD PTR [esp+0x10]
640184b2:	push   esi
640184b3:	call   DWORD PTR ds:0x6402416c
640184b9:	mov    eax,ebx
640184bb:	jmp    0x64018515
640184bd:	cmp    eax,ebp
640184bf:	je     0x640184c5
640184c1:	cmp    eax,ebx
640184c3:	jne    0x64018445
640184c5:	call   DWORD PTR ds:0x64024168
640184cb:	mov    esi,eax
640184cd:	cmp    esi,ebx
640184cf:	je     0x64018445
640184d5:	cmp    BYTE PTR [esi],bl
640184d7:	je     0x640184e3
640184d9:	inc    eax
640184da:	cmp    BYTE PTR [eax],bl
640184dc:	jne    0x640184d9
640184de:	inc    eax
640184df:	cmp    BYTE PTR [eax],bl
640184e1:	jne    0x640184d9
640184e3:	sub    eax,esi
640184e5:	inc    eax
640184e6:	mov    ebp,eax
640184e8:	push   ebp
640184e9:	call   0x640157d0
640184ee:	mov    edi,eax
640184f0:	cmp    edi,ebx
640184f2:	pop    ecx
640184f3:	jne    0x64018501
640184f5:	push   esi
640184f6:	call   DWORD PTR ds:0x64024164
640184fc:	jmp    0x64018445
64018501:	push   ebp
64018502:	push   esi
64018503:	push   edi
64018504:	call   0x64013f20
64018509:	add    esp,0xc
6401850c:	push   esi
6401850d:	call   DWORD PTR ds:0x64024164
64018513:	mov    eax,edi
64018515:	pop    edi
64018516:	pop    esi
64018517:	pop    ebp
64018518:	pop    ebx
64018519:	pop    ecx
6401851a:	pop    ecx
6401851b:	ret    
6401851c:	push   esi
6401851d:	push   edi
6401851e:	mov    eax,0x640291b0
64018523:	mov    edi,0x640291b0
64018528:	cmp    eax,edi
6401852a:	mov    esi,eax
6401852c:	jae    0x6401853d
6401852e:	mov    eax,DWORD PTR [esi]
64018530:	test   eax,eax
64018532:	je     0x64018536
64018534:	call   eax
64018536:	add    esi,0x4
64018539:	cmp    esi,edi
6401853b:	jb     0x6401852e
6401853d:	pop    edi
6401853e:	pop    esi
6401853f:	ret    
64018540:	push   esi
64018541:	push   edi
64018542:	mov    eax,0x640291b8
64018547:	mov    edi,0x640291b8
6401854c:	cmp    eax,edi
6401854e:	mov    esi,eax
64018550:	jae    0x64018561
64018552:	mov    eax,DWORD PTR [esi]
64018554:	test   eax,eax
64018556:	je     0x6401855a
64018558:	call   eax
6401855a:	add    esi,0x4
6401855d:	cmp    esi,edi
6401855f:	jb     0x64018552
64018561:	pop    edi
64018562:	pop    esi
64018563:	ret    
64018564:	push   ebp
64018565:	mov    ebp,esp
64018567:	push   ecx
64018568:	push   ecx
64018569:	push   esi
6401856a:	lea    eax,[ebp-0x4]
6401856d:	xor    esi,esi
6401856f:	push   eax
64018570:	mov    DWORD PTR [ebp-0x4],esi
64018573:	mov    DWORD PTR [ebp-0x8],esi
64018576:	call   0x640159ef
6401857b:	test   eax,eax
6401857d:	pop    ecx
6401857e:	je     0x6401858d
64018580:	push   esi
64018581:	push   esi
64018582:	push   esi
64018583:	push   esi
64018584:	push   esi
64018585:	call   0x64011fb8
6401858a:	add    esp,0x14
6401858d:	lea    eax,[ebp-0x8]
64018590:	push   eax
64018591:	call   0x64015a26
64018596:	test   eax,eax
64018598:	pop    ecx
64018599:	je     0x640185a8
6401859b:	push   esi
6401859c:	push   esi
6401859d:	push   esi
6401859e:	push   esi
6401859f:	push   esi
640185a0:	call   0x64011fb8
640185a5:	add    esp,0x14
640185a8:	cmp    DWORD PTR [ebp-0x4],0x2
640185ac:	pop    esi
640185ad:	jne    0x640185ba
640185af:	cmp    DWORD PTR [ebp-0x8],0x5
640185b3:	jb     0x640185ba
640185b5:	xor    eax,eax
640185b7:	inc    eax
640185b8:	leave  
640185b9:	ret    
640185ba:	push   0x3
640185bc:	pop    eax
640185bd:	leave  
640185be:	ret    
640185bf:	xor    eax,eax
640185c1:	cmp    DWORD PTR [esp+0x4],eax
640185c5:	push   0x0
640185c7:	sete   al
640185ca:	push   0x1000
640185cf:	push   eax
640185d0:	call   DWORD PTR ds:0x64024170
640185d6:	test   eax,eax
640185d8:	mov    ds:0x6402da8c,eax
640185dd:	jne    0x640185e2
640185df:	xor    eax,eax
640185e1:	ret    
640185e2:	call   0x64018564
640185e7:	cmp    eax,0x3
640185ea:	mov    ds:0x6403143c,eax
640185ef:	jne    0x64018615
640185f1:	push   0x3f8
640185f6:	call   0x64019af6
640185fb:	test   eax,eax
640185fd:	pop    ecx
640185fe:	jne    0x64018615
64018600:	push   DWORD PTR ds:0x6402da8c
64018606:	call   DWORD PTR ds:0x640240f0
6401860c:	and    DWORD PTR ds:0x6402da8c,0x0
64018613:	jmp    0x640185df
64018615:	xor    eax,eax
64018617:	inc    eax
64018618:	ret    
64018619:	push   ebp
6401861a:	xor    ebp,ebp
6401861c:	cmp    DWORD PTR ds:0x6403143c,0x3
64018623:	jne    0x64018679
64018625:	push   ebx
64018626:	mov    ebx,DWORD PTR ds:0x640240f8
6401862c:	push   edi
6401862d:	xor    edi,edi
6401862f:	cmp    DWORD PTR ds:0x64031424,ebp
64018635:	jle    0x64018668
64018637:	push   esi
64018638:	mov    esi,DWORD PTR ds:0x64031428
6401863e:	add    esi,0x10
64018641:	push   0x8000
64018646:	push   ebp
64018647:	push   DWORD PTR [esi-0x4]
6401864a:	call   DWORD PTR ds:0x64024174
64018650:	push   DWORD PTR [esi]
64018652:	push   ebp
64018653:	push   DWORD PTR ds:0x6402da8c
64018659:	call   ebx
6401865b:	add    esi,0x14
6401865e:	inc    edi
6401865f:	cmp    edi,DWORD PTR ds:0x64031424
64018665:	jl     0x64018641
64018667:	pop    esi
64018668:	push   DWORD PTR ds:0x64031428
6401866e:	push   ebp
6401866f:	push   DWORD PTR ds:0x6402da8c
64018675:	call   ebx
64018677:	pop    edi
64018678:	pop    ebx
64018679:	push   DWORD PTR ds:0x6402da8c
6401867f:	call   DWORD PTR ds:0x640240f0
64018685:	mov    DWORD PTR ds:0x6402da8c,ebp
6401868b:	pop    ebp
6401868c:	ret    
6401868d:	push   ebp
6401868e:	mov    ebp,esp
64018690:	push   ecx
64018691:	push   ecx
64018692:	push   esi
64018693:	call   0x64014594
64018698:	mov    esi,eax
6401869a:	test   esi,esi
6401869c:	je     0x640187e8
640186a2:	mov    edx,DWORD PTR [esi+0x5c]
640186a5:	mov    eax,ds:0x6402c94c
640186aa:	push   edi
640186ab:	mov    edi,DWORD PTR [ebp+0x8]
640186ae:	mov    ecx,edx
640186b0:	push   ebx
640186b1:	cmp    DWORD PTR [ecx],edi
640186b3:	je     0x640186c3
640186b5:	mov    ebx,eax
640186b7:	imul   ebx,ebx,0xc
640186ba:	add    ecx,0xc
640186bd:	add    ebx,edx
640186bf:	cmp    ecx,ebx
640186c1:	jb     0x640186b1
640186c3:	imul   eax,eax,0xc
640186c6:	add    eax,edx
640186c8:	cmp    ecx,eax
640186ca:	jae    0x640186d4
640186cc:	cmp    DWORD PTR [ecx],edi
640186ce:	jne    0x640186d4
640186d0:	mov    eax,ecx
640186d2:	jmp    0x640186d6
640186d4:	xor    eax,eax
640186d6:	test   eax,eax
640186d8:	je     0x640186e4
640186da:	mov    ebx,DWORD PTR [eax+0x8]
640186dd:	test   ebx,ebx
640186df:	mov    DWORD PTR [ebp-0x4],ebx
640186e2:	jne    0x640186eb
640186e4:	xor    eax,eax
640186e6:	jmp    0x640187e6
640186eb:	cmp    ebx,0x5
640186ee:	jne    0x640186fc
640186f0:	and    DWORD PTR [eax+0x8],0x0
640186f4:	xor    eax,eax
640186f6:	inc    eax
640186f7:	jmp    0x640187e6
640186fc:	cmp    ebx,0x1
640186ff:	je     0x640187e3
64018705:	mov    ecx,DWORD PTR [esi+0x60]
64018708:	mov    DWORD PTR [ebp-0x8],ecx
6401870b:	mov    ecx,DWORD PTR [ebp+0xc]
6401870e:	mov    DWORD PTR [esi+0x60],ecx
64018711:	mov    ecx,DWORD PTR [eax+0x4]
64018714:	cmp    ecx,0x8
64018717:	jne    0x640187d5
6401871d:	mov    ecx,DWORD PTR ds:0x6402c940
64018723:	mov    edi,DWORD PTR ds:0x6402c944
64018729:	mov    edx,ecx
6401872b:	add    edi,ecx
6401872d:	cmp    edx,edi
6401872f:	jge    0x64018755
64018731:	imul   ecx,ecx,0xc
64018734:	mov    edi,DWORD PTR [esi+0x5c]
64018737:	and    DWORD PTR [ecx+edi*1+0x8],0x0
6401873c:	mov    edi,DWORD PTR ds:0x6402c940
64018742:	mov    ebx,DWORD PTR ds:0x6402c944
64018748:	inc    edx
64018749:	add    ebx,edi
6401874b:	add    ecx,0xc
6401874e:	cmp    edx,ebx
64018750:	jl     0x64018734
64018752:	mov    ebx,DWORD PTR [ebp-0x4]
64018755:	mov    eax,DWORD PTR [eax]
64018757:	cmp    eax,0xc000008e
6401875c:	mov    edi,DWORD PTR [esi+0x64]
6401875f:	jne    0x6401876a
64018761:	mov    DWORD PTR [esi+0x64],0x83
64018768:	jmp    0x640187c8
6401876a:	cmp    eax,0xc0000090
6401876f:	jne    0x6401877a
64018771:	mov    DWORD PTR [esi+0x64],0x81
64018778:	jmp    0x640187c8
6401877a:	cmp    eax,0xc0000091
6401877f:	jne    0x6401878a
64018781:	mov    DWORD PTR [esi+0x64],0x84
64018788:	jmp    0x640187c8
6401878a:	cmp    eax,0xc0000093
6401878f:	jne    0x6401879a
64018791:	mov    DWORD PTR [esi+0x64],0x85
64018798:	jmp    0x640187c8
6401879a:	cmp    eax,0xc000008d
6401879f:	jne    0x640187aa
640187a1:	mov    DWORD PTR [esi+0x64],0x82
640187a8:	jmp    0x640187c8
640187aa:	cmp    eax,0xc000008f
640187af:	jne    0x640187ba
640187b1:	mov    DWORD PTR [esi+0x64],0x86
640187b8:	jmp    0x640187c8
640187ba:	cmp    eax,0xc0000092
640187bf:	jne    0x640187c8
640187c1:	mov    DWORD PTR [esi+0x64],0x8a
640187c8:	push   DWORD PTR [esi+0x64]
640187cb:	push   0x8
640187cd:	call   ebx
640187cf:	pop    ecx
640187d0:	mov    DWORD PTR [esi+0x64],edi
640187d3:	jmp    0x640187dc
640187d5:	and    DWORD PTR [eax+0x8],0x0
640187d9:	push   ecx
640187da:	call   ebx
640187dc:	mov    eax,DWORD PTR [ebp-0x8]
640187df:	pop    ecx
640187e0:	mov    DWORD PTR [esi+0x60],eax
640187e3:	or     eax,0xffffffff
640187e6:	pop    ebx
640187e7:	pop    edi
640187e8:	pop    esi
640187e9:	leave  
640187ea:	ret    
640187eb:	mov    eax,0xe06d7363
640187f0:	cmp    DWORD PTR [esp+0x4],eax
640187f4:	jne    0x64018803
640187f6:	push   DWORD PTR [esp+0x8]
640187fa:	push   eax
640187fb:	call   0x6401868d
64018800:	pop    ecx
64018801:	pop    ecx
64018802:	ret    
64018803:	xor    eax,eax
64018805:	ret    
64018806:	push   ebp
64018807:	mov    ebp,esp
64018809:	sub    esp,0x10
6401880c:	mov    eax,ds:0x6402c09c
64018811:	and    DWORD PTR [ebp-0x8],0x0
64018815:	and    DWORD PTR [ebp-0x4],0x0
64018819:	push   ebx
6401881a:	push   edi
6401881b:	mov    edi,0xbb40e64e
64018820:	cmp    eax,edi
64018822:	mov    ebx,0xffff0000
64018827:	je     0x64018836
64018829:	test   ebx,eax
6401882b:	je     0x64018836
6401882d:	not    eax
6401882f:	mov    ds:0x6402c0a0,eax
64018834:	jmp    0x64018896
64018836:	push   esi
64018837:	lea    eax,[ebp-0x8]
6401883a:	push   eax
6401883b:	call   DWORD PTR ds:0x64024180
64018841:	mov    esi,DWORD PTR [ebp-0x4]
64018844:	xor    esi,DWORD PTR [ebp-0x8]
64018847:	call   DWORD PTR ds:0x6402417c
6401884d:	xor    esi,eax
6401884f:	call   DWORD PTR ds:0x6402411c
64018855:	xor    esi,eax
64018857:	call   DWORD PTR ds:0x64024058
6401885d:	xor    esi,eax
6401885f:	lea    eax,[ebp-0x10]
64018862:	push   eax
64018863:	call   DWORD PTR ds:0x64024178
64018869:	mov    eax,DWORD PTR [ebp-0xc]
6401886c:	xor    eax,DWORD PTR [ebp-0x10]
6401886f:	xor    esi,eax
64018871:	cmp    esi,edi
64018873:	jne    0x6401887c
64018875:	mov    esi,0xbb40e64f
6401887a:	jmp    0x64018887
6401887c:	test   ebx,esi
6401887e:	jne    0x64018887
64018880:	mov    eax,esi
64018882:	shl    eax,0x10
64018885:	or     esi,eax
64018887:	mov    DWORD PTR ds:0x6402c09c,esi
6401888d:	not    esi
6401888f:	mov    DWORD PTR ds:0x6402c0a0,esi
64018895:	pop    esi
64018896:	pop    edi
64018897:	pop    ebx
64018898:	leave  
64018899:	ret    
6401889a:	int3   
6401889b:	int3   
6401889c:	int3   
6401889d:	int3   
6401889e:	int3   
6401889f:	int3   
640188a0:	push   esi
640188a1:	mov    eax,DWORD PTR [esp+0x14]
640188a5:	or     eax,eax
640188a7:	jne    0x640188d1
640188a9:	mov    ecx,DWORD PTR [esp+0x10]
640188ad:	mov    eax,DWORD PTR [esp+0xc]
640188b1:	xor    edx,edx
640188b3:	div    ecx
640188b5:	mov    ebx,eax
640188b7:	mov    eax,DWORD PTR [esp+0x8]
640188bb:	div    ecx
640188bd:	mov    esi,eax
640188bf:	mov    eax,ebx
640188c1:	mul    DWORD PTR [esp+0x10]
640188c5:	mov    ecx,eax
640188c7:	mov    eax,esi
640188c9:	mul    DWORD PTR [esp+0x10]
640188cd:	add    edx,ecx
640188cf:	jmp    0x64018918
640188d1:	mov    ecx,eax
640188d3:	mov    ebx,DWORD PTR [esp+0x10]
640188d7:	mov    edx,DWORD PTR [esp+0xc]
640188db:	mov    eax,DWORD PTR [esp+0x8]
640188df:	shr    ecx,1
640188e1:	rcr    ebx,1
640188e3:	shr    edx,1
640188e5:	rcr    eax,1
640188e7:	or     ecx,ecx
640188e9:	jne    0x640188df
640188eb:	div    ebx
640188ed:	mov    esi,eax
640188ef:	mul    DWORD PTR [esp+0x14]
640188f3:	mov    ecx,eax
640188f5:	mov    eax,DWORD PTR [esp+0x10]
640188f9:	mul    esi
640188fb:	add    edx,ecx
640188fd:	jb     0x6401890d
640188ff:	cmp    edx,DWORD PTR [esp+0xc]
64018903:	ja     0x6401890d
64018905:	jb     0x64018916
64018907:	cmp    eax,DWORD PTR [esp+0x8]
6401890b:	jbe    0x64018916
6401890d:	dec    esi
6401890e:	sub    eax,DWORD PTR [esp+0x10]
64018912:	sbb    edx,DWORD PTR [esp+0x14]
64018916:	xor    ebx,ebx
64018918:	sub    eax,DWORD PTR [esp+0x8]
6401891c:	sbb    edx,DWORD PTR [esp+0xc]
64018920:	neg    edx
64018922:	neg    eax
64018924:	sbb    edx,0x0
64018927:	mov    ecx,edx
64018929:	mov    edx,ebx
6401892b:	mov    ebx,ecx
6401892d:	mov    ecx,eax
6401892f:	mov    eax,esi
64018931:	pop    esi
64018932:	ret    0x10
64018935:	test   BYTE PTR [ecx+0xc],0x40
64018939:	je     0x64018941
6401893b:	cmp    DWORD PTR [ecx+0x8],0x0
6401893f:	je     0x64018965
64018941:	dec    DWORD PTR [ecx+0x4]
64018944:	js     0x64018951
64018946:	mov    edx,DWORD PTR [ecx]
64018948:	mov    BYTE PTR [edx],al
6401894a:	inc    DWORD PTR [ecx]
6401894c:	movzx  eax,al
6401894f:	jmp    0x6401895d
64018951:	movsx  eax,al
64018954:	push   ecx
64018955:	push   eax
64018956:	call   0x64016605
6401895b:	pop    ecx
6401895c:	pop    ecx
6401895d:	cmp    eax,0xffffffff
64018960:	jne    0x64018965
64018962:	or     DWORD PTR [esi],eax
64018964:	ret    
64018965:	inc    DWORD PTR [esi]
64018967:	ret    
64018968:	push   ebp
64018969:	mov    ebp,esp
6401896b:	push   esi
6401896c:	mov    esi,eax
6401896e:	jmp    0x64018983
64018970:	mov    ecx,DWORD PTR [ebp+0x10]
64018973:	mov    al,BYTE PTR [ebp+0x8]
64018976:	dec    DWORD PTR [ebp+0xc]
64018979:	call   0x64018935
6401897e:	cmp    DWORD PTR [esi],0xffffffff
64018981:	je     0x64018989
64018983:	cmp    DWORD PTR [ebp+0xc],0x0
64018987:	jg     0x64018970
64018989:	pop    esi
6401898a:	pop    ebp
6401898b:	ret    
6401898c:	push   ebp
6401898d:	lea    ebp,[esp-0x1f8]
64018994:	sub    esp,0x278
6401899a:	mov    eax,ds:0x6402c09c
6401899f:	xor    eax,ebp
640189a1:	mov    DWORD PTR [ebp+0x1f4],eax
640189a7:	mov    eax,DWORD PTR [ebp+0x200]
640189ad:	push   ebx
640189ae:	mov    ebx,DWORD PTR [ebp+0x204]
640189b4:	push   esi
640189b5:	xor    esi,esi
640189b7:	push   edi
640189b8:	mov    edi,DWORD PTR [ebp+0x20c]
640189be:	push   DWORD PTR [ebp+0x208]
640189c4:	lea    ecx,[ebp-0x64]
640189c7:	mov    DWORD PTR [ebp-0x30],eax
640189ca:	mov    DWORD PTR [ebp-0x2c],edi
640189cd:	mov    DWORD PTR [ebp-0x4c],esi
640189d0:	mov    DWORD PTR [ebp-0x18],esi
640189d3:	mov    DWORD PTR [ebp-0x40],esi
640189d6:	mov    DWORD PTR [ebp-0x20],esi
640189d9:	mov    DWORD PTR [ebp-0x3c],esi
640189dc:	mov    DWORD PTR [ebp-0x50],esi
640189df:	mov    DWORD PTR [ebp-0x44],esi
640189e2:	call   0x6401271f
640189e7:	cmp    DWORD PTR [ebp-0x30],esi
640189ea:	jne    0x64018a19
640189ec:	call   0x640142c0
640189f1:	push   esi
640189f2:	push   esi
640189f3:	push   esi
640189f4:	push   esi
640189f5:	mov    DWORD PTR [eax],0x16
640189fb:	push   esi
640189fc:	call   0x640120b4
64018a01:	add    esp,0x14
64018a04:	cmp    BYTE PTR [ebp-0x58],0x0
64018a08:	je     0x64018a11
64018a0a:	mov    eax,DWORD PTR [ebp-0x5c]
64018a0d:	and    DWORD PTR [eax+0x70],0xfffffffd
64018a11:	or     eax,0xffffffff
64018a14:	jmp    0x640192e8
64018a19:	mov    eax,DWORD PTR [ebp-0x30]
64018a1c:	test   BYTE PTR [eax+0xc],0x40
64018a20:	jne    0x64018aca
64018a26:	push   eax
64018a27:	call   0x6401c31d
64018a2c:	cmp    eax,0xffffffff
64018a2f:	pop    ecx
64018a30:	je     0x64018a68
64018a32:	push   DWORD PTR [ebp-0x30]
64018a35:	call   0x6401c31d
64018a3a:	cmp    eax,0xfffffffe
64018a3d:	pop    ecx
64018a3e:	je     0x64018a68
64018a40:	push   DWORD PTR [ebp-0x30]
64018a43:	call   0x6401c31d
64018a48:	push   DWORD PTR [ebp-0x30]
64018a4b:	sar    eax,0x5
64018a4e:	lea    esi,[eax*4+0x64031460]
64018a55:	call   0x6401c31d
64018a5a:	and    eax,0x1f
64018a5d:	shl    eax,0x6
64018a60:	add    eax,DWORD PTR [esi]
64018a62:	pop    ecx
64018a63:	pop    ecx
64018a64:	xor    esi,esi
64018a66:	jmp    0x64018a6d
64018a68:	mov    eax,0x6402c880
64018a6d:	test   BYTE PTR [eax+0x24],0x7f
64018a71:	jne    0x640189ec
64018a77:	push   DWORD PTR [ebp-0x30]
64018a7a:	call   0x6401c31d
64018a7f:	cmp    eax,0xffffffff
64018a82:	pop    ecx
64018a83:	je     0x64018abb
64018a85:	push   DWORD PTR [ebp-0x30]
64018a88:	call   0x6401c31d
64018a8d:	cmp    eax,0xfffffffe
64018a90:	pop    ecx
64018a91:	je     0x64018abb
64018a93:	push   DWORD PTR [ebp-0x30]
64018a96:	call   0x6401c31d
64018a9b:	push   DWORD PTR [ebp-0x30]
64018a9e:	sar    eax,0x5
64018aa1:	lea    esi,[eax*4+0x64031460]
64018aa8:	call   0x6401c31d
64018aad:	and    eax,0x1f
64018ab0:	shl    eax,0x6
64018ab3:	add    eax,DWORD PTR [esi]
64018ab5:	pop    ecx
64018ab6:	pop    ecx
64018ab7:	xor    esi,esi
64018ab9:	jmp    0x64018ac0
64018abb:	mov    eax,0x6402c880
64018ac0:	test   BYTE PTR [eax+0x24],0x80
64018ac4:	jne    0x640189ec
64018aca:	cmp    ebx,esi
64018acc:	je     0x640189ec
64018ad2:	mov    dl,BYTE PTR [ebx]
64018ad4:	xor    ecx,ecx
64018ad6:	test   dl,dl
64018ad8:	mov    DWORD PTR [ebp-0x34],esi
64018adb:	mov    DWORD PTR [ebp-0x28],esi
64018ade:	mov    DWORD PTR [ebp-0x54],esi
64018ae1:	mov    BYTE PTR [ebp-0x19],dl
64018ae4:	je     0x640192d8
64018aea:	inc    ebx
64018aeb:	cmp    DWORD PTR [ebp-0x34],0x0
64018aef:	mov    DWORD PTR [ebp-0x48],ebx
64018af2:	jl     0x640192d8
64018af8:	mov    al,dl
64018afa:	sub    al,0x20
64018afc:	cmp    al,0x58
64018afe:	ja     0x64018b11
64018b00:	movsx  eax,dl
64018b03:	movzx  eax,BYTE PTR [eax+0x64024cc8]
64018b0a:	and    eax,0xf
64018b0d:	xor    esi,esi
64018b0f:	jmp    0x64018b15
64018b11:	xor    esi,esi
64018b13:	xor    eax,eax
64018b15:	movsx  eax,BYTE PTR [ecx+eax*8+0x64024ce8]
64018b1d:	push   0x7
64018b1f:	sar    eax,0x4
64018b22:	pop    ecx
64018b23:	cmp    eax,ecx
64018b25:	mov    DWORD PTR [ebp-0x74],eax
64018b28:	ja     0x640192a8
64018b2e:	jmp    DWORD PTR [eax*4+0x64019300]
64018b35:	or     DWORD PTR [ebp-0x20],0xffffffff
64018b39:	mov    DWORD PTR [ebp-0x78],esi
64018b3c:	mov    DWORD PTR [ebp-0x50],esi
64018b3f:	mov    DWORD PTR [ebp-0x40],esi
64018b42:	mov    DWORD PTR [ebp-0x3c],esi
64018b45:	mov    DWORD PTR [ebp-0x18],esi
64018b48:	mov    DWORD PTR [ebp-0x44],esi
64018b4b:	jmp    0x640192a8
64018b50:	movsx  eax,dl
64018b53:	sub    eax,0x20
64018b56:	je     0x64018b96
64018b58:	sub    eax,0x3
64018b5b:	je     0x64018b8a
64018b5d:	sub    eax,0x8
64018b60:	je     0x64018b81
64018b62:	dec    eax
64018b63:	dec    eax
64018b64:	je     0x64018b78
64018b66:	sub    eax,0x3
64018b69:	jne    0x640192a8
64018b6f:	or     DWORD PTR [ebp-0x18],0x8
64018b73:	jmp    0x640192a8
64018b78:	or     DWORD PTR [ebp-0x18],0x4
64018b7c:	jmp    0x640192a8
64018b81:	or     DWORD PTR [ebp-0x18],0x1
64018b85:	jmp    0x640192a8
64018b8a:	or     DWORD PTR [ebp-0x18],0x80
64018b91:	jmp    0x640192a8
64018b96:	or     DWORD PTR [ebp-0x18],0x2
64018b9a:	jmp    0x640192a8
64018b9f:	cmp    dl,0x2a
64018ba2:	jne    0x64018bc4
64018ba4:	add    edi,0x4
64018ba7:	mov    DWORD PTR [ebp-0x2c],edi
64018baa:	mov    edi,DWORD PTR [edi-0x4]
64018bad:	cmp    edi,esi
64018baf:	mov    DWORD PTR [ebp-0x40],edi
64018bb2:	jge    0x640192a8
64018bb8:	or     DWORD PTR [ebp-0x18],0x4
64018bbc:	neg    DWORD PTR [ebp-0x40]
64018bbf:	jmp    0x640192a8
64018bc4:	mov    eax,DWORD PTR [ebp-0x40]
64018bc7:	imul   eax,eax,0xa
64018bca:	movsx  ecx,dl
64018bcd:	lea    eax,[eax+ecx*1-0x30]
64018bd1:	mov    DWORD PTR [ebp-0x40],eax
64018bd4:	jmp    0x640192a8
64018bd9:	mov    DWORD PTR [ebp-0x20],esi
64018bdc:	jmp    0x640192a8
64018be1:	cmp    dl,0x2a
64018be4:	jne    0x64018c03
64018be6:	add    edi,0x4
64018be9:	mov    DWORD PTR [ebp-0x2c],edi
64018bec:	mov    edi,DWORD PTR [edi-0x4]
64018bef:	cmp    edi,esi
64018bf1:	mov    DWORD PTR [ebp-0x20],edi
64018bf4:	jge    0x640192a8
64018bfa:	or     DWORD PTR [ebp-0x20],0xffffffff
64018bfe:	jmp    0x640192a8
64018c03:	mov    eax,DWORD PTR [ebp-0x20]
64018c06:	imul   eax,eax,0xa
64018c09:	movsx  ecx,dl
64018c0c:	lea    eax,[eax+ecx*1-0x30]
64018c10:	mov    DWORD PTR [ebp-0x20],eax
64018c13:	jmp    0x640192a8
64018c18:	cmp    dl,0x49
64018c1b:	je     0x64018c63
64018c1d:	cmp    dl,0x68
64018c20:	je     0x64018c5a
64018c22:	cmp    dl,0x6c
64018c25:	je     0x64018c3c
64018c27:	cmp    dl,0x77
64018c2a:	jne    0x640192a8
64018c30:	or     DWORD PTR [ebp-0x18],0x800
64018c37:	jmp    0x640192a8
64018c3c:	cmp    BYTE PTR [ebx],0x6c
64018c3f:	jne    0x64018c51
64018c41:	inc    ebx
64018c42:	or     DWORD PTR [ebp-0x18],0x1000
64018c49:	mov    DWORD PTR [ebp-0x48],ebx
64018c4c:	jmp    0x640192a8
64018c51:	or     DWORD PTR [ebp-0x18],0x10
64018c55:	jmp    0x640192a8
64018c5a:	or     DWORD PTR [ebp-0x18],0x20
64018c5e:	jmp    0x640192a8
64018c63:	mov    al,BYTE PTR [ebx]
64018c65:	cmp    al,0x36
64018c67:	jne    0x64018c80
64018c69:	cmp    BYTE PTR [ebx+0x1],0x34
64018c6d:	jne    0x64018c80
64018c6f:	inc    ebx
64018c70:	inc    ebx
64018c71:	or     DWORD PTR [ebp-0x18],0x8000
64018c78:	mov    DWORD PTR [ebp-0x48],ebx
64018c7b:	jmp    0x640192a8
64018c80:	cmp    al,0x33
64018c82:	jne    0x64018c9b
64018c84:	cmp    BYTE PTR [ebx+0x1],0x32
64018c88:	jne    0x64018c9b
64018c8a:	inc    ebx
64018c8b:	inc    ebx
64018c8c:	and    DWORD PTR [ebp-0x18],0xffff7fff
64018c93:	mov    DWORD PTR [ebp-0x48],ebx
64018c96:	jmp    0x640192a8
64018c9b:	cmp    al,0x64
64018c9d:	je     0x640192a8
64018ca3:	cmp    al,0x69
64018ca5:	je     0x640192a8
64018cab:	cmp    al,0x6f
64018cad:	je     0x640192a8
64018cb3:	cmp    al,0x75
64018cb5:	je     0x640192a8
64018cbb:	cmp    al,0x78
64018cbd:	je     0x640192a8
64018cc3:	cmp    al,0x58
64018cc5:	je     0x640192a8
64018ccb:	mov    DWORD PTR [ebp-0x74],esi
64018cce:	lea    eax,[ebp-0x64]
64018cd1:	push   eax
64018cd2:	movzx  eax,dl
64018cd5:	push   eax
64018cd6:	mov    DWORD PTR [ebp-0x44],esi
64018cd9:	call   0x6401990b
64018cde:	pop    ecx
64018cdf:	test   eax,eax
64018ce1:	mov    al,BYTE PTR [ebp-0x19]
64018ce4:	pop    ecx
64018ce5:	je     0x64018d00
64018ce7:	mov    ecx,DWORD PTR [ebp-0x30]
64018cea:	lea    esi,[ebp-0x34]
64018ced:	call   0x64018935
64018cf2:	mov    al,BYTE PTR [ebx]
64018cf4:	inc    ebx
64018cf5:	test   al,al
64018cf7:	mov    DWORD PTR [ebp-0x48],ebx
64018cfa:	je     0x640192c1
64018d00:	mov    ecx,DWORD PTR [ebp-0x30]
64018d03:	lea    esi,[ebp-0x34]
64018d06:	call   0x64018935
64018d0b:	jmp    0x640192a8
64018d10:	movsx  eax,dl
64018d13:	cmp    eax,0x64
64018d16:	jg     0x64018e8e
64018d1c:	je     0x64018f0d
64018d22:	cmp    eax,0x53
64018d25:	jg     0x64018dd6
64018d2b:	je     0x64018d87
64018d2d:	sub    eax,0x41
64018d30:	je     0x64018d42
64018d32:	dec    eax
64018d33:	dec    eax
64018d34:	je     0x64018d76
64018d36:	dec    eax
64018d37:	dec    eax
64018d38:	je     0x64018d42
64018d3a:	dec    eax
64018d3b:	dec    eax
64018d3c:	jne    0x64019190
64018d42:	add    dl,0x20
64018d45:	mov    DWORD PTR [ebp-0x78],0x1
64018d4c:	mov    BYTE PTR [ebp-0x19],dl
64018d4f:	or     DWORD PTR [ebp-0x18],0x40
64018d53:	cmp    DWORD PTR [ebp-0x20],esi
64018d56:	lea    ebx,[ebp-0x14]
64018d59:	mov    eax,0x200
64018d5e:	mov    DWORD PTR [ebp-0x24],ebx
64018d61:	mov    DWORD PTR [ebp-0x68],eax
64018d64:	jge    0x64018f31
64018d6a:	mov    DWORD PTR [ebp-0x20],0x6
64018d71:	jmp    0x64018f7f
64018d76:	test   WORD PTR [ebp-0x18],0x830
64018d7c:	jne    0x64018df3
64018d7e:	or     DWORD PTR [ebp-0x18],0x800
64018d85:	jmp    0x64018df3
64018d87:	test   WORD PTR [ebp-0x18],0x830
64018d8d:	jne    0x64018d96
64018d8f:	or     DWORD PTR [ebp-0x18],0x800
64018d96:	mov    ecx,DWORD PTR [ebp-0x20]
64018d99:	cmp    ecx,0xffffffff
64018d9c:	jne    0x64018da3
64018d9e:	mov    ecx,0x7fffffff
64018da3:	add    edi,0x4
64018da6:	test   WORD PTR [ebp-0x18],0x810
64018dac:	mov    DWORD PTR [ebp-0x2c],edi
64018daf:	mov    edi,DWORD PTR [edi-0x4]
64018db2:	mov    DWORD PTR [ebp-0x24],edi
64018db5:	je     0x6401916e
64018dbb:	cmp    edi,esi
64018dbd:	jne    0x64018dc7
64018dbf:	mov    eax,ds:0x6402c954
64018dc4:	mov    DWORD PTR [ebp-0x24],eax
64018dc7:	mov    eax,DWORD PTR [ebp-0x24]
64018dca:	mov    DWORD PTR [ebp-0x44],0x1
64018dd1:	jmp    0x64019163
64018dd6:	sub    eax,0x58
64018dd9:	je     0x64019018
64018ddf:	dec    eax
64018de0:	dec    eax
64018de1:	je     0x64018e40
64018de3:	sub    eax,ecx
64018de5:	je     0x64018d4f
64018deb:	dec    eax
64018dec:	dec    eax
64018ded:	jne    0x64019190
64018df3:	add    edi,0x4
64018df6:	test   WORD PTR [ebp-0x18],0x810
64018dfc:	mov    DWORD PTR [ebp-0x2c],edi
64018dff:	je     0x64018e28
64018e01:	movzx  eax,WORD PTR [edi-0x4]
64018e05:	push   eax
64018e06:	push   0x200
64018e0b:	lea    eax,[ebp-0x14]
64018e0e:	push   eax
64018e0f:	lea    eax,[ebp-0x28]
64018e12:	push   eax
64018e13:	call   0x6401d4db
64018e18:	add    esp,0x10
64018e1b:	test   eax,eax
64018e1d:	je     0x64018e35
64018e1f:	mov    DWORD PTR [ebp-0x50],0x1
64018e26:	jmp    0x64018e35
64018e28:	mov    al,BYTE PTR [edi-0x4]
64018e2b:	mov    BYTE PTR [ebp-0x14],al
64018e2e:	mov    DWORD PTR [ebp-0x28],0x1
64018e35:	lea    eax,[ebp-0x14]
64018e38:	mov    DWORD PTR [ebp-0x24],eax
64018e3b:	jmp    0x64019190
64018e40:	mov    eax,DWORD PTR [edi]
64018e42:	add    edi,0x4
64018e45:	cmp    eax,esi
64018e47:	mov    DWORD PTR [ebp-0x2c],edi
64018e4a:	je     0x64018e7a
64018e4c:	mov    ecx,DWORD PTR [eax+0x4]
64018e4f:	cmp    ecx,esi
64018e51:	je     0x64018e7a
64018e53:	test   WORD PTR [ebp-0x18],0x800
64018e59:	movsx  eax,WORD PTR [eax]
64018e5c:	mov    DWORD PTR [ebp-0x24],ecx
64018e5f:	je     0x64018e72
64018e61:	cdq    
64018e62:	sub    eax,edx
64018e64:	sar    eax,1
64018e66:	mov    DWORD PTR [ebp-0x44],0x1
64018e6d:	jmp    0x6401918d
64018e72:	mov    DWORD PTR [ebp-0x44],esi
64018e75:	jmp    0x6401918d
64018e7a:	mov    eax,ds:0x6402c950
64018e7f:	mov    DWORD PTR [ebp-0x24],eax
64018e82:	push   eax
64018e83:	call   0x64013cc0
64018e88:	pop    ecx
64018e89:	jmp    0x6401918d
64018e8e:	cmp    eax,0x70
64018e91:	jg     0x6401901d
64018e97:	je     0x64019011
64018e9d:	cmp    eax,0x65
64018ea0:	jl     0x64019190
64018ea6:	cmp    eax,0x67
64018ea9:	jle    0x64018d4f
64018eaf:	cmp    eax,0x69
64018eb2:	je     0x64018f0d
64018eb4:	cmp    eax,0x6e
64018eb7:	je     0x64018ed8
64018eb9:	cmp    eax,0x6f
64018ebc:	jne    0x64019190
64018ec2:	test   BYTE PTR [ebp-0x18],0x80
64018ec6:	mov    DWORD PTR [ebp-0x28],0x8
64018ecd:	je     0x64018f18
64018ecf:	or     DWORD PTR [ebp-0x18],0x200
64018ed6:	jmp    0x64018f18
64018ed8:	mov    esi,DWORD PTR [edi]
64018eda:	add    edi,0x4
64018edd:	mov    DWORD PTR [ebp-0x2c],edi
64018ee0:	call   0x6401c528
64018ee5:	test   eax,eax
64018ee7:	je     0x640192c1
64018eed:	test   BYTE PTR [ebp-0x18],0x20
64018ef1:	je     0x64018efc
64018ef3:	mov    ax,WORD PTR [ebp-0x34]
64018ef7:	mov    WORD PTR [esi],ax
64018efa:	jmp    0x64018f01
64018efc:	mov    eax,DWORD PTR [ebp-0x34]
64018eff:	mov    DWORD PTR [esi],eax
64018f01:	mov    DWORD PTR [ebp-0x50],0x1
64018f08:	jmp    0x64019295
64018f0d:	or     DWORD PTR [ebp-0x18],0x40
64018f11:	mov    DWORD PTR [ebp-0x28],0xa
64018f18:	mov    ecx,DWORD PTR [ebp-0x18]
64018f1b:	test   cx,cx
64018f1e:	jns    0x64019067
64018f24:	mov    eax,DWORD PTR [edi]
64018f26:	mov    edx,DWORD PTR [edi+0x4]
64018f29:	add    edi,0x8
64018f2c:	jmp    0x6401909c
64018f31:	jne    0x64018f41
64018f33:	cmp    dl,0x67
64018f36:	jne    0x64018f7f
64018f38:	mov    DWORD PTR [ebp-0x20],0x1
64018f3f:	jmp    0x64018f7f
64018f41:	cmp    DWORD PTR [ebp-0x20],eax
64018f44:	jle    0x64018f49
64018f46:	mov    DWORD PTR [ebp-0x20],eax
64018f49:	cmp    DWORD PTR [ebp-0x20],0xa3
64018f50:	jle    0x64018f7f
64018f52:	mov    esi,DWORD PTR [ebp-0x20]
64018f55:	add    esi,0x15d
64018f5b:	push   esi
64018f5c:	call   0x640157d0
64018f61:	test   eax,eax
64018f63:	mov    dl,BYTE PTR [ebp-0x19]
64018f66:	pop    ecx
64018f67:	mov    DWORD PTR [ebp-0x54],eax
64018f6a:	je     0x64018f76
64018f6c:	mov    DWORD PTR [ebp-0x24],eax
64018f6f:	mov    DWORD PTR [ebp-0x68],esi
64018f72:	mov    ebx,eax
64018f74:	jmp    0x64018f7d
64018f76:	mov    DWORD PTR [ebp-0x20],0xa3
64018f7d:	xor    esi,esi
64018f7f:	mov    eax,DWORD PTR [edi]
64018f81:	add    edi,0x8
64018f84:	mov    DWORD PTR [ebp-0x80],eax
64018f87:	mov    eax,DWORD PTR [edi-0x4]
64018f8a:	mov    DWORD PTR [ebp-0x7c],eax
64018f8d:	lea    eax,[ebp-0x64]
64018f90:	push   eax
64018f91:	push   DWORD PTR [ebp-0x78]
64018f94:	movsx  eax,dl
64018f97:	push   DWORD PTR [ebp-0x20]
64018f9a:	mov    DWORD PTR [ebp-0x2c],edi
64018f9d:	push   eax
64018f9e:	push   DWORD PTR [ebp-0x68]
64018fa1:	lea    eax,[ebp-0x80]
64018fa4:	push   ebx
64018fa5:	push   eax
64018fa6:	push   DWORD PTR ds:0x6402cb5c
64018fac:	call   0x640143ef
64018fb1:	pop    ecx
64018fb2:	call   eax
64018fb4:	mov    edi,DWORD PTR [ebp-0x18]
64018fb7:	add    esp,0x1c
64018fba:	and    edi,0x80
64018fc0:	je     0x64018fdc
64018fc2:	cmp    DWORD PTR [ebp-0x20],esi
64018fc5:	jne    0x64018fdc
64018fc7:	lea    eax,[ebp-0x64]
64018fca:	push   eax
64018fcb:	push   ebx
64018fcc:	push   DWORD PTR ds:0x6402cb68
64018fd2:	call   0x640143ef
64018fd7:	pop    ecx
64018fd8:	call   eax
64018fda:	pop    ecx
64018fdb:	pop    ecx
64018fdc:	cmp    BYTE PTR [ebp-0x19],0x67
64018fe0:	jne    0x64018ffb
64018fe2:	cmp    edi,esi
64018fe4:	jne    0x64018ffb
64018fe6:	lea    eax,[ebp-0x64]
64018fe9:	push   eax
64018fea:	push   ebx
64018feb:	push   DWORD PTR ds:0x6402cb64
64018ff1:	call   0x640143ef
64018ff6:	pop    ecx
64018ff7:	call   eax
64018ff9:	pop    ecx
64018ffa:	pop    ecx
64018ffb:	cmp    BYTE PTR [ebx],0x2d
64018ffe:	jne    0x6401900b
64019000:	or     DWORD PTR [ebp-0x18],0x100
64019007:	inc    ebx
64019008:	mov    DWORD PTR [ebp-0x24],ebx
6401900b:	push   ebx
6401900c:	jmp    0x64018e83
64019011:	mov    DWORD PTR [ebp-0x20],0x8
64019018:	mov    DWORD PTR [ebp-0x4c],ecx
6401901b:	jmp    0x6401903e
6401901d:	sub    eax,0x73
64019020:	je     0x64018d96
64019026:	dec    eax
64019027:	dec    eax
64019028:	je     0x64018f11
6401902e:	sub    eax,0x3
64019031:	jne    0x64019190
64019037:	mov    DWORD PTR [ebp-0x4c],0x27
6401903e:	test   BYTE PTR [ebp-0x18],0x80
64019042:	mov    DWORD PTR [ebp-0x28],0x10
64019049:	je     0x64018f18
6401904f:	mov    al,BYTE PTR [ebp-0x4c]
64019052:	add    al,0x51
64019054:	mov    BYTE PTR [ebp-0x38],0x30
64019058:	mov    BYTE PTR [ebp-0x37],al
6401905b:	mov    DWORD PTR [ebp-0x3c],0x2
64019062:	jmp    0x64018f18
64019067:	test   cx,0x1000
6401906c:	jne    0x64018f24
64019072:	add    edi,0x4
64019075:	test   cl,0x20
64019078:	je     0x6401908f
6401907a:	test   cl,0x40
6401907d:	mov    DWORD PTR [ebp-0x2c],edi
64019080:	je     0x64019088
64019082:	movsx  eax,WORD PTR [edi-0x4]
64019086:	jmp    0x6401908c
64019088:	movzx  eax,WORD PTR [edi-0x4]
6401908c:	cdq    
6401908d:	jmp    0x6401909f
6401908f:	test   cl,0x40
64019092:	mov    eax,DWORD PTR [edi-0x4]
64019095:	je     0x6401909a
64019097:	cdq    
64019098:	jmp    0x6401909c
6401909a:	xor    edx,edx
6401909c:	mov    DWORD PTR [ebp-0x2c],edi
6401909f:	test   cl,0x40
640190a2:	je     0x640190bc
640190a4:	cmp    edx,esi
640190a6:	jg     0x640190bc
640190a8:	jl     0x640190ae
640190aa:	cmp    eax,esi
640190ac:	jae    0x640190bc
640190ae:	neg    eax
640190b0:	adc    edx,0x0
640190b3:	neg    edx
640190b5:	or     DWORD PTR [ebp-0x18],0x100
640190bc:	test   WORD PTR [ebp-0x18],0x9000
640190c2:	mov    ebx,edx
640190c4:	mov    edi,eax
640190c6:	jne    0x640190ca
640190c8:	xor    ebx,ebx
640190ca:	cmp    DWORD PTR [ebp-0x20],0x0
640190ce:	jge    0x640190d9
640190d0:	mov    DWORD PTR [ebp-0x20],0x1
640190d7:	jmp    0x640190ea
640190d9:	and    DWORD PTR [ebp-0x18],0xfffffff7
640190dd:	mov    eax,0x200
640190e2:	cmp    DWORD PTR [ebp-0x20],eax
640190e5:	jle    0x640190ea
640190e7:	mov    DWORD PTR [ebp-0x20],eax
640190ea:	mov    eax,edi
640190ec:	or     eax,ebx
640190ee:	jne    0x640190f3
640190f0:	and    DWORD PTR [ebp-0x3c],eax
640190f3:	lea    esi,[ebp+0x1eb]
640190f9:	mov    eax,DWORD PTR [ebp-0x20]
640190fc:	dec    DWORD PTR [ebp-0x20]
640190ff:	test   eax,eax
64019101:	jg     0x64019109
64019103:	mov    eax,edi
64019105:	or     eax,ebx
64019107:	je     0x6401912d
64019109:	mov    eax,DWORD PTR [ebp-0x28]
6401910c:	cdq    
6401910d:	push   edx
6401910e:	push   eax
6401910f:	push   ebx
64019110:	push   edi
64019111:	call   0x640188a0
64019116:	add    ecx,0x30
64019119:	cmp    ecx,0x39
6401911c:	mov    DWORD PTR [ebp-0x68],ebx
6401911f:	mov    edi,eax
64019121:	mov    ebx,edx
64019123:	jle    0x64019128
64019125:	add    ecx,DWORD PTR [ebp-0x4c]
64019128:	mov    BYTE PTR [esi],cl
6401912a:	dec    esi
6401912b:	jmp    0x640190f9
6401912d:	lea    eax,[ebp+0x1eb]
64019133:	sub    eax,esi
64019135:	inc    esi
64019136:	test   WORD PTR [ebp-0x18],0x200
6401913c:	mov    DWORD PTR [ebp-0x28],eax
6401913f:	mov    DWORD PTR [ebp-0x24],esi
64019142:	je     0x64019190
64019144:	test   eax,eax
64019146:	je     0x6401914f
64019148:	mov    ecx,esi
6401914a:	cmp    BYTE PTR [ecx],0x30
6401914d:	je     0x64019190
6401914f:	dec    DWORD PTR [ebp-0x24]
64019152:	mov    ecx,DWORD PTR [ebp-0x24]
64019155:	mov    BYTE PTR [ecx],0x30
64019158:	inc    eax
64019159:	jmp    0x6401918d
6401915b:	dec    ecx
6401915c:	cmp    WORD PTR [eax],si
6401915f:	je     0x64019167
64019161:	inc    eax
64019162:	inc    eax
64019163:	cmp    ecx,esi
64019165:	jne    0x6401915b
64019167:	sub    eax,DWORD PTR [ebp-0x24]
6401916a:	sar    eax,1
6401916c:	jmp    0x6401918d
6401916e:	cmp    edi,esi
64019170:	jne    0x6401917a
64019172:	mov    eax,ds:0x6402c950
64019177:	mov    DWORD PTR [ebp-0x24],eax
6401917a:	mov    eax,DWORD PTR [ebp-0x24]
6401917d:	jmp    0x64019186
6401917f:	dec    ecx
64019180:	cmp    BYTE PTR [eax],0x0
64019183:	je     0x6401918a
64019185:	inc    eax
64019186:	cmp    ecx,esi
64019188:	jne    0x6401917f
6401918a:	sub    eax,DWORD PTR [ebp-0x24]
6401918d:	mov    DWORD PTR [ebp-0x28],eax
64019190:	cmp    DWORD PTR [ebp-0x50],0x0
64019194:	jne    0x64019295
6401919a:	mov    eax,DWORD PTR [ebp-0x18]
6401919d:	test   al,0x40
6401919f:	je     0x640191c6
640191a1:	test   ax,0x100
640191a5:	je     0x640191ad
640191a7:	mov    BYTE PTR [ebp-0x38],0x2d
640191ab:	jmp    0x640191bf
640191ad:	test   al,0x1
640191af:	je     0x640191b7
640191b1:	mov    BYTE PTR [ebp-0x38],0x2b
640191b5:	jmp    0x640191bf
640191b7:	test   al,0x2
640191b9:	je     0x640191c6
640191bb:	mov    BYTE PTR [ebp-0x38],0x20
640191bf:	mov    DWORD PTR [ebp-0x3c],0x1
640191c6:	mov    ebx,DWORD PTR [ebp-0x40]
640191c9:	sub    ebx,DWORD PTR [ebp-0x28]
640191cc:	sub    ebx,DWORD PTR [ebp-0x3c]
640191cf:	test   BYTE PTR [ebp-0x18],0xc
640191d3:	jne    0x640191e6
640191d5:	push   DWORD PTR [ebp-0x30]
640191d8:	lea    eax,[ebp-0x34]
640191db:	push   ebx
640191dc:	push   0x20
640191de:	call   0x64018968
640191e3:	add    esp,0xc
640191e6:	push   DWORD PTR [ebp-0x3c]
640191e9:	mov    edi,DWORD PTR [ebp-0x30]
640191ec:	lea    eax,[ebp-0x34]
640191ef:	lea    ecx,[ebp-0x38]
640191f2:	call   0x6401c668
640191f7:	test   BYTE PTR [ebp-0x18],0x8
640191fb:	pop    ecx
640191fc:	je     0x64019213
640191fe:	test   BYTE PTR [ebp-0x18],0x4
64019202:	jne    0x64019213
64019204:	push   edi
64019205:	push   ebx
64019206:	push   0x30
64019208:	lea    eax,[ebp-0x34]
6401920b:	call   0x64018968
64019210:	add    esp,0xc
64019213:	cmp    DWORD PTR [ebp-0x44],0x0
64019217:	mov    eax,DWORD PTR [ebp-0x28]
6401921a:	je     0x6401926d
6401921c:	test   eax,eax
6401921e:	jle    0x6401926d
64019220:	mov    esi,DWORD PTR [ebp-0x24]
64019223:	mov    DWORD PTR [ebp-0x68],eax
64019226:	movzx  eax,WORD PTR [esi]
64019229:	dec    DWORD PTR [ebp-0x68]
6401922c:	push   eax
6401922d:	push   0x6
6401922f:	lea    eax,[ebp+0x1ec]
64019235:	push   eax
64019236:	lea    eax,[ebp-0x70]
64019239:	inc    esi
6401923a:	push   eax
6401923b:	inc    esi
6401923c:	call   0x6401d4db
64019241:	add    esp,0x10
64019244:	test   eax,eax
64019246:	jne    0x64019267
64019248:	cmp    DWORD PTR [ebp-0x70],eax
6401924b:	je     0x64019267
6401924d:	push   DWORD PTR [ebp-0x70]
64019250:	lea    eax,[ebp-0x34]
64019253:	lea    ecx,[ebp+0x1ec]
64019259:	call   0x6401c668
6401925e:	cmp    DWORD PTR [ebp-0x68],0x0
64019262:	pop    ecx
64019263:	jne    0x64019226
64019265:	jmp    0x6401927a
64019267:	or     DWORD PTR [ebp-0x34],0xffffffff
6401926b:	jmp    0x6401927a
6401926d:	mov    ecx,DWORD PTR [ebp-0x24]
64019270:	push   eax
64019271:	lea    eax,[ebp-0x34]
64019274:	call   0x6401c668
64019279:	pop    ecx
6401927a:	cmp    DWORD PTR [ebp-0x34],0x0
6401927e:	jl     0x64019295
64019280:	test   BYTE PTR [ebp-0x18],0x4
64019284:	je     0x64019295
64019286:	push   edi
64019287:	push   ebx
64019288:	push   0x20
6401928a:	lea    eax,[ebp-0x34]
6401928d:	call   0x64018968
64019292:	add    esp,0xc
64019295:	cmp    DWORD PTR [ebp-0x54],0x0
64019299:	je     0x640192a8
6401929b:	push   DWORD PTR [ebp-0x54]
6401929e:	call   0x64013396
640192a3:	and    DWORD PTR [ebp-0x54],0x0
640192a7:	pop    ecx
640192a8:	mov    ebx,DWORD PTR [ebp-0x48]
640192ab:	mov    al,BYTE PTR [ebx]
640192ad:	test   al,al
640192af:	mov    BYTE PTR [ebp-0x19],al
640192b2:	je     0x640192d8
640192b4:	mov    ecx,DWORD PTR [ebp-0x74]
640192b7:	mov    edi,DWORD PTR [ebp-0x2c]
640192ba:	mov    dl,al
640192bc:	jmp    0x64018aea
640192c1:	call   0x640142c0
640192c6:	mov    DWORD PTR [eax],0x16
640192cc:	xor    eax,eax
640192ce:	push   eax
640192cf:	push   eax
640192d0:	push   eax
640192d1:	push   eax
640192d2:	push   eax
640192d3:	jmp    0x640189fc
640192d8:	cmp    BYTE PTR [ebp-0x58],0x0
640192dc:	je     0x640192e5
640192de:	mov    eax,DWORD PTR [ebp-0x5c]
640192e1:	and    DWORD PTR [eax+0x70],0xfffffffd
640192e5:	mov    eax,DWORD PTR [ebp-0x34]
640192e8:	mov    ecx,DWORD PTR [ebp+0x1f4]
640192ee:	pop    edi
640192ef:	pop    esi
640192f0:	xor    ecx,ebp
640192f2:	pop    ebx
640192f3:	call   0x6401257c
640192f8:	add    ebp,0x1f8
640192fe:	leave  
640192ff:	ret    
64019300:	into   
64019301:	mov    WORD PTR [ecx],es
64019303:	fs xor eax,0x5064018b
64019309:	mov    eax,DWORD PTR [ecx]
6401930b:	fs lahf 
6401930d:	mov    eax,DWORD PTR [ecx]
6401930f:	(bad)  fs:[ebx-0x741e9bff]
64019316:	add    DWORD PTR [eax+ebx*1-0x74],esp
6401931a:	add    DWORD PTR [eax+edx*1-0x73],esp
6401931e:	add    DWORD PTR [ebp+edx*2-0x75],esp
64019322:	in     al,dx
64019323:	sub    esp,0x20
64019326:	push   ebx
64019327:	xor    ebx,ebx
64019329:	cmp    DWORD PTR [ebp+0x14],ebx
6401932c:	jne    0x6401934e
6401932e:	call   0x640142c0
64019333:	push   ebx
64019334:	push   ebx
64019335:	push   ebx
64019336:	push   ebx
64019337:	push   ebx
64019338:	mov    DWORD PTR [eax],0x16
6401933e:	call   0x640120b4
64019343:	add    esp,0x14
64019346:	or     eax,0xffffffff
64019349:	jmp    0x640193e7
6401934e:	push   esi
6401934f:	mov    esi,DWORD PTR [ebp+0xc]
64019352:	push   edi
64019353:	mov    edi,DWORD PTR [ebp+0x10]
64019356:	cmp    edi,ebx
64019358:	je     0x6401937b
6401935a:	cmp    esi,ebx
6401935c:	jne    0x6401937b
6401935e:	call   0x640142c0
64019363:	push   ebx
64019364:	push   ebx
64019365:	push   ebx
64019366:	push   ebx
64019367:	push   ebx
64019368:	mov    DWORD PTR [eax],0x16
6401936e:	call   0x640120b4
64019373:	add    esp,0x14
64019376:	or     eax,0xffffffff
64019379:	jmp    0x640193e5
6401937b:	mov    eax,0x7fffffff
64019380:	cmp    edi,eax
64019382:	mov    DWORD PTR [ebp-0x1c],eax
64019385:	ja     0x6401938a
64019387:	mov    DWORD PTR [ebp-0x1c],edi
6401938a:	push   DWORD PTR [ebp+0x1c]
6401938d:	lea    eax,[ebp-0x20]
64019390:	push   DWORD PTR [ebp+0x18]
64019393:	mov    DWORD PTR [ebp-0x14],0x42
6401939a:	push   DWORD PTR [ebp+0x14]
6401939d:	mov    DWORD PTR [ebp-0x18],esi
640193a0:	push   eax
640193a1:	mov    DWORD PTR [ebp-0x20],esi
640193a4:	call   DWORD PTR [ebp+0x8]
640193a7:	add    esp,0x10
640193aa:	cmp    esi,ebx
640193ac:	mov    DWORD PTR [ebp+0x14],eax
640193af:	je     0x640193e5
640193b1:	cmp    eax,ebx
640193b3:	jl     0x640193d7
640193b5:	dec    DWORD PTR [ebp-0x1c]
640193b8:	js     0x640193c1
640193ba:	mov    eax,DWORD PTR [ebp-0x20]
640193bd:	mov    BYTE PTR [eax],bl
640193bf:	jmp    0x640193d2
640193c1:	lea    eax,[ebp-0x20]
640193c4:	push   eax
640193c5:	push   ebx
640193c6:	call   0x64016605
640193cb:	cmp    eax,0xffffffff
640193ce:	pop    ecx
640193cf:	pop    ecx
640193d0:	je     0x640193d7
640193d2:	mov    eax,DWORD PTR [ebp+0x14]
640193d5:	jmp    0x640193e5
640193d7:	xor    eax,eax
640193d9:	cmp    DWORD PTR [ebp-0x1c],ebx
640193dc:	mov    BYTE PTR [esi+edi*1-0x1],bl
640193e0:	setge  al
640193e3:	dec    eax
640193e4:	dec    eax
640193e5:	pop    edi
640193e6:	pop    esi
640193e7:	pop    ebx
640193e8:	leave  
640193e9:	ret    
640193ea:	push   ebp
640193eb:	mov    ebp,esp
640193ed:	push   ebx
640193ee:	xor    ebx,ebx
640193f0:	cmp    DWORD PTR [ebp+0x10],ebx
640193f3:	jne    0x64019412
640193f5:	call   0x640142c0
640193fa:	push   ebx
640193fb:	push   ebx
640193fc:	push   ebx
640193fd:	push   ebx
640193fe:	push   ebx
640193ff:	mov    DWORD PTR [eax],0x16
64019405:	call   0x640120b4
6401940a:	add    esp,0x14
6401940d:	or     eax,0xffffffff
64019410:	jmp    0x6401946d
64019412:	push   esi
64019413:	mov    esi,DWORD PTR [ebp+0x8]
64019416:	cmp    esi,ebx
64019418:	je     0x6401941f
6401941a:	cmp    DWORD PTR [ebp+0xc],ebx
6401941d:	ja     0x6401942c
6401941f:	call   0x640142c0
64019424:	mov    DWORD PTR [eax],0x16
6401942a:	jmp    0x6401945c
6401942c:	push   DWORD PTR [ebp+0x18]
6401942f:	push   DWORD PTR [ebp+0x14]
64019432:	push   DWORD PTR [ebp+0x10]
64019435:	push   DWORD PTR [ebp+0xc]
64019438:	push   esi
64019439:	push   0x6401c6b2
6401943e:	call   0x64019320
64019443:	add    esp,0x18
64019446:	cmp    eax,ebx
64019448:	jge    0x6401944c
6401944a:	mov    BYTE PTR [esi],bl
6401944c:	cmp    eax,0xfffffffe
6401944f:	jne    0x6401946c
64019451:	call   0x640142c0
64019456:	mov    DWORD PTR [eax],0x22
6401945c:	push   ebx
6401945d:	push   ebx
6401945e:	push   ebx
6401945f:	push   ebx
64019460:	push   ebx
64019461:	call   0x640120b4
64019466:	add    esp,0x14
64019469:	or     eax,0xffffffff
6401946c:	pop    esi
6401946d:	pop    ebx
6401946e:	pop    ebp
6401946f:	ret    
64019470:	push   ebp
64019471:	mov    ebp,esp
64019473:	sub    esp,0x18
64019476:	push   ebx
64019477:	push   DWORD PTR [ebp+0x10]
6401947a:	lea    ecx,[ebp-0x18]
6401947d:	call   0x6401271f
64019482:	mov    ebx,DWORD PTR [ebp+0x8]
64019485:	lea    eax,[ebx+0x1]
64019488:	cmp    eax,0x100
6401948d:	ja     0x6401949e
6401948f:	mov    eax,DWORD PTR [ebp-0x18]
64019492:	mov    eax,DWORD PTR [eax+0xc8]
64019498:	movzx  eax,WORD PTR [eax+ebx*2]
6401949c:	jmp    0x64019513
6401949e:	mov    DWORD PTR [ebp+0x8],ebx
640194a1:	sar    DWORD PTR [ebp+0x8],0x8
640194a5:	lea    eax,[ebp-0x18]
640194a8:	push   eax
640194a9:	mov    eax,DWORD PTR [ebp+0x8]
640194ac:	and    eax,0xff
640194b1:	push   eax
640194b2:	call   0x6401990b
640194b7:	test   eax,eax
640194b9:	pop    ecx
640194ba:	pop    ecx
640194bb:	je     0x640194cf
640194bd:	mov    al,BYTE PTR [ebp+0x8]
640194c0:	push   0x2
640194c2:	mov    BYTE PTR [ebp-0x8],al
640194c5:	mov    BYTE PTR [ebp-0x7],bl
640194c8:	mov    BYTE PTR [ebp-0x6],0x0
640194cc:	pop    ecx
640194cd:	jmp    0x640194d9
640194cf:	xor    ecx,ecx
640194d1:	mov    BYTE PTR [ebp-0x8],bl
640194d4:	mov    BYTE PTR [ebp-0x7],0x0
640194d8:	inc    ecx
640194d9:	mov    eax,DWORD PTR [ebp-0x18]
640194dc:	push   0x1
640194de:	push   DWORD PTR [eax+0x14]
640194e1:	push   DWORD PTR [eax+0x4]
640194e4:	lea    eax,[ebp-0x4]
640194e7:	push   eax
640194e8:	push   ecx
640194e9:	lea    eax,[ebp-0x8]
640194ec:	push   eax
640194ed:	lea    eax,[ebp-0x18]
640194f0:	push   0x1
640194f2:	push   eax
640194f3:	call   0x6401b3f5
640194f8:	add    esp,0x20
640194fb:	test   eax,eax
640194fd:	jne    0x6401950f
640194ff:	cmp    BYTE PTR [ebp-0xc],al
64019502:	je     0x6401950b
64019504:	mov    eax,DWORD PTR [ebp-0x10]
64019507:	and    DWORD PTR [eax+0x70],0xfffffffd
6401950b:	xor    eax,eax
6401950d:	jmp    0x64019523
6401950f:	movzx  eax,WORD PTR [ebp-0x4]
64019513:	and    eax,DWORD PTR [ebp+0xc]
64019516:	cmp    BYTE PTR [ebp-0xc],0x0
6401951a:	je     0x64019523
6401951c:	mov    ecx,DWORD PTR [ebp-0x10]
6401951f:	and    DWORD PTR [ecx+0x70],0xfffffffd
64019523:	pop    ebx
64019524:	leave  
64019525:	ret    
64019526:	push   ebp
64019527:	mov    ebp,esp
64019529:	sub    esp,0x14
6401952c:	mov    eax,ds:0x6402c09c
64019531:	xor    eax,ebp
64019533:	mov    DWORD PTR [ebp-0x4],eax
64019536:	push   ebx
64019537:	push   esi
64019538:	xor    ebx,ebx
6401953a:	cmp    DWORD PTR ds:0x6402da90,ebx
64019540:	push   edi
64019541:	mov    esi,ecx
64019543:	jne    0x6401957d
64019545:	push   ebx
64019546:	push   ebx
64019547:	xor    edi,edi
64019549:	inc    edi
6401954a:	push   edi
6401954b:	push   0x640265c0
64019550:	push   0x100
64019555:	push   ebx
64019556:	call   DWORD PTR ds:0x6402414c
6401955c:	test   eax,eax
6401955e:	je     0x64019568
64019560:	mov    DWORD PTR ds:0x6402da90,edi
64019566:	jmp    0x6401957d
64019568:	call   DWORD PTR ds:0x64024044
6401956e:	cmp    eax,0x78
64019571:	jne    0x6401957d
64019573:	mov    DWORD PTR ds:0x6402da90,0x2
6401957d:	cmp    DWORD PTR [ebp+0x14],ebx
64019580:	jle    0x640195a4
64019582:	mov    ecx,DWORD PTR [ebp+0x14]
64019585:	mov    eax,DWORD PTR [ebp+0x10]
64019588:	dec    ecx
64019589:	cmp    BYTE PTR [eax],bl
6401958b:	je     0x64019595
6401958d:	inc    eax
6401958e:	cmp    ecx,ebx
64019590:	jne    0x64019588
64019592:	or     ecx,0xffffffff
64019595:	mov    eax,DWORD PTR [ebp+0x14]
64019598:	sub    eax,ecx
6401959a:	dec    eax
6401959b:	cmp    eax,DWORD PTR [ebp+0x14]
6401959e:	jge    0x640195a1
640195a0:	inc    eax
640195a1:	mov    DWORD PTR [ebp+0x14],eax
640195a4:	mov    eax,ds:0x6402da90
640195a9:	cmp    eax,0x2
640195ac:	je     0x6401975d
640195b2:	cmp    eax,ebx
640195b4:	je     0x6401975d
640195ba:	cmp    eax,0x1
640195bd:	jne    0x6401978e
640195c3:	cmp    DWORD PTR [ebp+0x20],ebx
640195c6:	mov    DWORD PTR [ebp-0x8],ebx
640195c9:	jne    0x640195d3
640195cb:	mov    eax,DWORD PTR [esi]
640195cd:	mov    eax,DWORD PTR [eax+0x4]
640195d0:	mov    DWORD PTR [ebp+0x20],eax
640195d3:	mov    esi,DWORD PTR ds:0x64024024
640195d9:	xor    eax,eax
640195db:	cmp    DWORD PTR [ebp+0x24],ebx
640195de:	push   ebx
640195df:	push   ebx
640195e0:	push   DWORD PTR [ebp+0x14]
640195e3:	setne  al
640195e6:	push   DWORD PTR [ebp+0x10]
640195e9:	lea    eax,[eax*8+0x1]
640195f0:	push   eax
640195f1:	push   DWORD PTR [ebp+0x20]
640195f4:	call   esi
640195f6:	mov    edi,eax
640195f8:	cmp    edi,ebx
640195fa:	je     0x6401978e
64019600:	jle    0x64019645
64019602:	push   0xffffffe0
64019604:	xor    edx,edx
64019606:	pop    eax
64019607:	div    edi
64019609:	cmp    eax,0x2
6401960c:	jb     0x64019645
6401960e:	lea    eax,[edi+edi*1+0x8]
64019612:	cmp    eax,0x400
64019617:	ja     0x6401962c
64019619:	call   0x64012c80
6401961e:	mov    eax,esp
64019620:	cmp    eax,ebx
64019622:	je     0x64019640
64019624:	mov    DWORD PTR [eax],0xcccc
6401962a:	jmp    0x6401963d
6401962c:	push   eax
6401962d:	call   0x64013473
64019632:	cmp    eax,ebx
64019634:	pop    ecx
64019635:	je     0x64019640
64019637:	mov    DWORD PTR [eax],0xdddd
6401963d:	add    eax,0x8
64019640:	mov    DWORD PTR [ebp-0xc],eax
64019643:	jmp    0x64019648
64019645:	mov    DWORD PTR [ebp-0xc],ebx
64019648:	cmp    DWORD PTR [ebp-0xc],ebx
6401964b:	je     0x6401978e
64019651:	push   edi
64019652:	push   DWORD PTR [ebp-0xc]
64019655:	push   DWORD PTR [ebp+0x14]
64019658:	push   DWORD PTR [ebp+0x10]
6401965b:	push   0x1
6401965d:	push   DWORD PTR [ebp+0x20]
64019660:	call   esi
64019662:	test   eax,eax
64019664:	je     0x6401974c
6401966a:	mov    esi,DWORD PTR ds:0x6402414c
64019670:	push   ebx
64019671:	push   ebx
64019672:	push   edi
64019673:	push   DWORD PTR [ebp-0xc]
64019676:	push   DWORD PTR [ebp+0xc]
64019679:	push   DWORD PTR [ebp+0x8]
6401967c:	call   esi
6401967e:	mov    ecx,eax
64019680:	cmp    ecx,ebx
64019682:	mov    DWORD PTR [ebp-0x8],ecx
64019685:	je     0x6401974c
6401968b:	test   WORD PTR [ebp+0xc],0x400
64019691:	je     0x640196bc
64019693:	cmp    DWORD PTR [ebp+0x1c],ebx
64019696:	je     0x6401974c
6401969c:	cmp    ecx,DWORD PTR [ebp+0x1c]
6401969f:	jg     0x6401974c
640196a5:	push   DWORD PTR [ebp+0x1c]
640196a8:	push   DWORD PTR [ebp+0x18]
640196ab:	push   edi
640196ac:	push   DWORD PTR [ebp-0xc]
640196af:	push   DWORD PTR [ebp+0xc]
640196b2:	push   DWORD PTR [ebp+0x8]
640196b5:	call   esi
640196b7:	jmp    0x6401974c
640196bc:	cmp    ecx,ebx
640196be:	jle    0x64019705
640196c0:	push   0xffffffe0
640196c2:	xor    edx,edx
640196c4:	pop    eax
640196c5:	div    ecx
640196c7:	cmp    eax,0x2
640196ca:	jb     0x64019705
640196cc:	lea    eax,[ecx+ecx*1+0x8]
640196d0:	cmp    eax,0x400
640196d5:	ja     0x640196ed
640196d7:	call   0x64012c80
640196dc:	mov    esi,esp
640196de:	cmp    esi,ebx
640196e0:	je     0x6401974c
640196e2:	mov    DWORD PTR [esi],0xcccc
640196e8:	add    esi,0x8
640196eb:	jmp    0x64019707
640196ed:	push   eax
640196ee:	call   0x64013473
640196f3:	cmp    eax,ebx
640196f5:	pop    ecx
640196f6:	je     0x64019701
640196f8:	mov    DWORD PTR [eax],0xdddd
640196fe:	add    eax,0x8
64019701:	mov    esi,eax
64019703:	jmp    0x64019707
64019705:	xor    esi,esi
64019707:	cmp    esi,ebx
64019709:	je     0x6401974c
6401970b:	push   DWORD PTR [ebp-0x8]
6401970e:	push   esi
6401970f:	push   edi
64019710:	push   DWORD PTR [ebp-0xc]
64019713:	push   DWORD PTR [ebp+0xc]
64019716:	push   DWORD PTR [ebp+0x8]
64019719:	call   DWORD PTR ds:0x6402414c
6401971f:	test   eax,eax
64019721:	je     0x64019745
64019723:	cmp    DWORD PTR [ebp+0x1c],ebx
64019726:	push   ebx
64019727:	push   ebx
64019728:	jne    0x6401972e
6401972a:	push   ebx
6401972b:	push   ebx
6401972c:	jmp    0x64019734
6401972e:	push   DWORD PTR [ebp+0x1c]
64019731:	push   DWORD PTR [ebp+0x18]
64019734:	push   DWORD PTR [ebp-0x8]
64019737:	push   esi
64019738:	push   ebx
64019739:	push   DWORD PTR [ebp+0x20]
6401973c:	call   DWORD PTR ds:0x64024028
64019742:	mov    DWORD PTR [ebp-0x8],eax
64019745:	push   esi
64019746:	call   0x64012a12
6401974b:	pop    ecx
6401974c:	push   DWORD PTR [ebp-0xc]
6401974f:	call   0x64012a12
64019754:	mov    eax,DWORD PTR [ebp-0x8]
64019757:	pop    ecx
64019758:	jmp    0x640198b6
6401975d:	cmp    DWORD PTR [ebp+0x8],ebx
64019760:	mov    DWORD PTR [ebp-0xc],ebx
64019763:	mov    DWORD PTR [ebp-0x10],ebx
64019766:	jne    0x64019770
64019768:	mov    eax,DWORD PTR [esi]
6401976a:	mov    eax,DWORD PTR [eax+0x14]
6401976d:	mov    DWORD PTR [ebp+0x8],eax
64019770:	cmp    DWORD PTR [ebp+0x20],ebx
64019773:	jne    0x6401977d
64019775:	mov    eax,DWORD PTR [esi]
64019777:	mov    eax,DWORD PTR [eax+0x4]
6401977a:	mov    DWORD PTR [ebp+0x20],eax
6401977d:	push   DWORD PTR [ebp+0x8]
64019780:	call   0x6401d062
64019785:	cmp    eax,0xffffffff
64019788:	pop    ecx
64019789:	mov    DWORD PTR [ebp-0x14],eax
6401978c:	jne    0x64019795
6401978e:	xor    eax,eax
64019790:	jmp    0x640198b6
64019795:	cmp    eax,DWORD PTR [ebp+0x20]
64019798:	je     0x64019879
6401979e:	push   ebx
6401979f:	push   ebx
640197a0:	lea    ecx,[ebp+0x14]
640197a3:	push   ecx
640197a4:	push   DWORD PTR [ebp+0x10]
640197a7:	push   eax
640197a8:	push   DWORD PTR [ebp+0x20]
640197ab:	call   0x6401d0a9
640197b0:	add    esp,0x18
640197b3:	cmp    eax,ebx
640197b5:	mov    DWORD PTR [ebp-0xc],eax
640197b8:	je     0x6401978e
640197ba:	mov    esi,DWORD PTR ds:0x64024148
640197c0:	push   ebx
640197c1:	push   ebx
640197c2:	push   DWORD PTR [ebp+0x14]
640197c5:	push   eax
640197c6:	push   DWORD PTR [ebp+0xc]
640197c9:	push   DWORD PTR [ebp+0x8]
640197cc:	call   esi
640197ce:	cmp    eax,ebx
640197d0:	mov    DWORD PTR [ebp-0x8],eax
640197d3:	jne    0x640197dc
640197d5:	xor    esi,esi
640197d7:	jmp    0x64019893
640197dc:	jle    0x6401981b
640197de:	cmp    eax,0xffffffe0
640197e1:	ja     0x6401981b
640197e3:	add    eax,0x8
640197e6:	cmp    eax,0x400
640197eb:	ja     0x64019803
640197ed:	call   0x64012c80
640197f2:	mov    edi,esp
640197f4:	cmp    edi,ebx
640197f6:	je     0x640197d5
640197f8:	mov    DWORD PTR [edi],0xcccc
640197fe:	add    edi,0x8
64019801:	jmp    0x6401981d
64019803:	push   eax
64019804:	call   0x64013473
64019809:	cmp    eax,ebx
6401980b:	pop    ecx
6401980c:	je     0x64019817
6401980e:	mov    DWORD PTR [eax],0xdddd
64019814:	add    eax,0x8
64019817:	mov    edi,eax
64019819:	jmp    0x6401981d
6401981b:	xor    edi,edi
6401981d:	cmp    edi,ebx
6401981f:	je     0x640197d5
64019821:	push   DWORD PTR [ebp-0x8]
64019824:	push   ebx
64019825:	push   edi
64019826:	call   0x64012c00
6401982b:	add    esp,0xc
6401982e:	push   DWORD PTR [ebp-0x8]
64019831:	push   edi
64019832:	push   DWORD PTR [ebp+0x14]
64019835:	push   DWORD PTR [ebp-0xc]
64019838:	push   DWORD PTR [ebp+0xc]
6401983b:	push   DWORD PTR [ebp+0x8]
6401983e:	call   esi
64019840:	cmp    eax,ebx
64019842:	mov    DWORD PTR [ebp-0x8],eax
64019845:	jne    0x6401984b
64019847:	xor    esi,esi
64019849:	jmp    0x64019870
6401984b:	push   DWORD PTR [ebp+0x1c]
6401984e:	lea    eax,[ebp-0x8]
64019851:	push   DWORD PTR [ebp+0x18]
64019854:	push   eax
64019855:	push   edi
64019856:	push   DWORD PTR [ebp+0x20]
64019859:	push   DWORD PTR [ebp-0x14]
6401985c:	call   0x6401d0a9
64019861:	mov    esi,eax
64019863:	mov    DWORD PTR [ebp-0x10],esi
64019866:	add    esp,0x18
64019869:	neg    esi
6401986b:	sbb    esi,esi
6401986d:	and    esi,DWORD PTR [ebp-0x8]
64019870:	push   edi
64019871:	call   0x64012a12
64019876:	pop    ecx
64019877:	jmp    0x64019893
64019879:	push   DWORD PTR [ebp+0x1c]
6401987c:	push   DWORD PTR [ebp+0x18]
6401987f:	push   DWORD PTR [ebp+0x14]
64019882:	push   DWORD PTR [ebp+0x10]
64019885:	push   DWORD PTR [ebp+0xc]
64019888:	push   DWORD PTR [ebp+0x8]
6401988b:	call   DWORD PTR ds:0x64024148
64019891:	mov    esi,eax
64019893:	cmp    DWORD PTR [ebp-0xc],ebx
64019896:	je     0x640198a1
64019898:	push   DWORD PTR [ebp-0xc]
6401989b:	call   0x64013396
640198a0:	pop    ecx
640198a1:	mov    eax,DWORD PTR [ebp-0x10]
640198a4:	cmp    eax,ebx
640198a6:	je     0x640198b4
640198a8:	cmp    DWORD PTR [ebp+0x18],eax
640198ab:	je     0x640198b4
640198ad:	push   eax
640198ae:	call   0x64013396
640198b3:	pop    ecx
640198b4:	mov    eax,esi
640198b6:	lea    esp,[ebp-0x20]
640198b9:	pop    edi
640198ba:	pop    esi
640198bb:	pop    ebx
640198bc:	mov    ecx,DWORD PTR [ebp-0x4]
640198bf:	xor    ecx,ebp
640198c1:	call   0x6401257c
640198c6:	leave  
640198c7:	ret    
640198c8:	push   ebp
640198c9:	mov    ebp,esp
640198cb:	sub    esp,0x10
640198ce:	push   DWORD PTR [ebp+0x8]
640198d1:	lea    ecx,[ebp-0x10]
640198d4:	call   0x6401271f
640198d9:	push   DWORD PTR [ebp+0x28]
640198dc:	lea    ecx,[ebp-0x10]
640198df:	push   DWORD PTR [ebp+0x24]
640198e2:	push   DWORD PTR [ebp+0x20]
640198e5:	push   DWORD PTR [ebp+0x1c]
640198e8:	push   DWORD PTR [ebp+0x18]
640198eb:	push   DWORD PTR [ebp+0x14]
640198ee:	push   DWORD PTR [ebp+0x10]
640198f1:	push   DWORD PTR [ebp+0xc]
640198f4:	call   0x64019526
640198f9:	add    esp,0x20
640198fc:	cmp    BYTE PTR [ebp-0x4],0x0
64019900:	je     0x64019909
64019902:	mov    ecx,DWORD PTR [ebp-0x8]
64019905:	and    DWORD PTR [ecx+0x70],0xfffffffd
64019909:	leave  
6401990a:	ret    
6401990b:	push   ebp
6401990c:	mov    ebp,esp
6401990e:	sub    esp,0x10
64019911:	push   DWORD PTR [ebp+0xc]
64019914:	lea    ecx,[ebp-0x10]
64019917:	call   0x6401271f
6401991c:	movzx  eax,BYTE PTR [ebp+0x8]
64019920:	mov    ecx,DWORD PTR [ebp-0x10]
64019923:	mov    ecx,DWORD PTR [ecx+0xc8]
64019929:	movzx  eax,WORD PTR [ecx+eax*2]
6401992d:	and    eax,0x8000
64019932:	cmp    BYTE PTR [ebp-0x4],0x0
64019936:	je     0x6401993f
64019938:	mov    ecx,DWORD PTR [ebp-0x8]
6401993b:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401993f:	leave  
64019940:	ret    
64019941:	push   0x0
64019943:	push   DWORD PTR [esp+0x8]
64019947:	call   0x6401990b
6401994c:	pop    ecx
6401994d:	pop    ecx
6401994e:	ret    
6401994f:	push   esi
64019950:	push   edi
64019951:	xor    esi,esi
64019953:	mov    edi,0x6402da98
64019958:	cmp    DWORD PTR [esi*8+0x6402c95c],0x1
64019960:	jne    0x64019980
64019962:	lea    eax,[esi*8+0x6402c958]
64019969:	mov    DWORD PTR [eax],edi
6401996b:	push   0xfa0
64019970:	push   DWORD PTR [eax]
64019972:	add    edi,0x18
64019975:	call   0x6401b178
6401997a:	test   eax,eax
6401997c:	pop    ecx
6401997d:	pop    ecx
6401997e:	je     0x6401998c
64019980:	inc    esi
64019981:	cmp    esi,0x24
64019984:	jl     0x64019958
64019986:	xor    eax,eax
64019988:	inc    eax
64019989:	pop    edi
6401998a:	pop    esi
6401998b:	ret    
6401998c:	and    DWORD PTR [esi*8+0x6402c958],0x0
64019994:	xor    eax,eax
64019996:	jmp    0x64019989
64019998:	push   ebx
64019999:	mov    ebx,DWORD PTR ds:0x640240a4
6401999f:	push   esi
640199a0:	mov    esi,0x6402c958
640199a5:	push   edi
640199a6:	mov    edi,DWORD PTR [esi]
640199a8:	test   edi,edi
640199aa:	je     0x640199bf
640199ac:	cmp    DWORD PTR [esi+0x4],0x1
640199b0:	je     0x640199bf
640199b2:	push   edi
640199b3:	call   ebx
640199b5:	push   edi
640199b6:	call   0x64013396
640199bb:	and    DWORD PTR [esi],0x0
640199be:	pop    ecx
640199bf:	add    esi,0x8
640199c2:	cmp    esi,0x6402ca78
640199c8:	jl     0x640199a6
640199ca:	mov    esi,0x6402c958
640199cf:	pop    edi
640199d0:	mov    eax,DWORD PTR [esi]
640199d2:	test   eax,eax
640199d4:	je     0x640199df
640199d6:	cmp    DWORD PTR [esi+0x4],0x1
640199da:	jne    0x640199df
640199dc:	push   eax
640199dd:	call   ebx
640199df:	add    esi,0x8
640199e2:	cmp    esi,0x6402ca78
640199e8:	jl     0x640199d0
640199ea:	pop    esi
640199eb:	pop    ebx
640199ec:	ret    
640199ed:	push   ebp
640199ee:	mov    ebp,esp
640199f0:	mov    eax,DWORD PTR [ebp+0x8]
640199f3:	push   DWORD PTR [eax*8+0x6402c958]
640199fa:	call   DWORD PTR ds:0x640240a0
64019a00:	pop    ebp
64019a01:	ret    
64019a02:	push   0xc
64019a04:	push   0x640299f0
64019a09:	call   0x64013ac0
64019a0e:	xor    edi,edi
64019a10:	inc    edi
64019a11:	mov    DWORD PTR [ebp-0x1c],edi
64019a14:	xor    ebx,ebx
64019a16:	cmp    DWORD PTR ds:0x6402da8c,ebx
64019a1c:	jne    0x64019a36
64019a1e:	call   0x6401a795
64019a23:	push   0x1e
64019a25:	call   0x6401a5f5
64019a2a:	push   0xff
64019a2f:	call   0x64015990
64019a34:	pop    ecx
64019a35:	pop    ecx
64019a36:	mov    esi,DWORD PTR [ebp+0x8]
64019a39:	lea    esi,[esi*8+0x6402c958]
64019a40:	cmp    DWORD PTR [esi],ebx
64019a42:	je     0x64019a48
64019a44:	mov    eax,edi
64019a46:	jmp    0x64019ab6
64019a48:	push   0x18
64019a4a:	call   0x640157d0
64019a4f:	pop    ecx
64019a50:	mov    edi,eax
64019a52:	cmp    edi,ebx
64019a54:	jne    0x64019a65
64019a56:	call   0x640142c0
64019a5b:	mov    DWORD PTR [eax],0xc
64019a61:	xor    eax,eax
64019a63:	jmp    0x64019ab6
64019a65:	push   0xa
64019a67:	call   0x64019ac5
64019a6c:	pop    ecx
64019a6d:	mov    DWORD PTR [ebp-0x4],ebx
64019a70:	cmp    DWORD PTR [esi],ebx
64019a72:	jne    0x64019aa0
64019a74:	push   0xfa0
64019a79:	push   edi
64019a7a:	call   0x6401b178
64019a7f:	pop    ecx
64019a80:	pop    ecx
64019a81:	test   eax,eax
64019a83:	jne    0x64019a9c
64019a85:	push   edi
64019a86:	call   0x64013396
64019a8b:	pop    ecx
64019a8c:	call   0x640142c0
64019a91:	mov    DWORD PTR [eax],0xc
64019a97:	mov    DWORD PTR [ebp-0x1c],ebx
64019a9a:	jmp    0x64019aa7
64019a9c:	mov    DWORD PTR [esi],edi
64019a9e:	jmp    0x64019aa7
64019aa0:	push   edi
64019aa1:	call   0x64013396
64019aa6:	pop    ecx
64019aa7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64019aae:	call   0x64019abc
64019ab3:	mov    eax,DWORD PTR [ebp-0x1c]
64019ab6:	call   0x64013b05
64019abb:	ret    
64019abc:	push   0xa
64019abe:	call   0x640199ed
64019ac3:	pop    ecx
64019ac4:	ret    
64019ac5:	push   ebp
64019ac6:	mov    ebp,esp
64019ac8:	mov    eax,DWORD PTR [ebp+0x8]
64019acb:	push   esi
64019acc:	lea    esi,[eax*8+0x6402c958]
64019ad3:	cmp    DWORD PTR [esi],0x0
64019ad6:	jne    0x64019aeb
64019ad8:	push   eax
64019ad9:	call   0x64019a02
64019ade:	test   eax,eax
64019ae0:	pop    ecx
64019ae1:	jne    0x64019aeb
64019ae3:	push   0x11
64019ae5:	call   0x64015946
64019aea:	pop    ecx
64019aeb:	push   DWORD PTR [esi]
64019aed:	call   DWORD PTR ds:0x6402409c
64019af3:	pop    esi
64019af4:	pop    ebp
64019af5:	ret    
64019af6:	push   0x140
64019afb:	push   0x0
64019afd:	push   DWORD PTR ds:0x6402da8c
64019b03:	call   DWORD PTR ds:0x640240f4
64019b09:	test   eax,eax
64019b0b:	mov    ds:0x64031428,eax
64019b10:	jne    0x64019b13
64019b12:	ret    
64019b13:	mov    ecx,DWORD PTR [esp+0x4]
64019b17:	and    DWORD PTR ds:0x6402dbe8,0x0
64019b1e:	and    DWORD PTR ds:0x64031424,0x0
64019b25:	mov    ds:0x64031430,eax
64019b2a:	xor    eax,eax
64019b2c:	mov    DWORD PTR ds:0x6403142c,ecx
64019b32:	mov    DWORD PTR ds:0x64031434,0x10
64019b3c:	inc    eax
64019b3d:	ret    
64019b3e:	mov    ecx,DWORD PTR ds:0x64031424
64019b44:	mov    eax,ds:0x64031428
64019b49:	imul   ecx,ecx,0x14
64019b4c:	add    ecx,eax
64019b4e:	jmp    0x64019b62
64019b50:	mov    edx,DWORD PTR [esp+0x4]
64019b54:	sub    edx,DWORD PTR [eax+0xc]
64019b57:	cmp    edx,0x100000
64019b5d:	jb     0x64019b68
64019b5f:	add    eax,0x14
64019b62:	cmp    eax,ecx
64019b64:	jb     0x64019b50
64019b66:	xor    eax,eax
64019b68:	ret    
64019b69:	push   ebp
64019b6a:	mov    ebp,esp
64019b6c:	sub    esp,0x10
64019b6f:	mov    ecx,DWORD PTR [ebp+0x8]
64019b72:	mov    eax,DWORD PTR [ecx+0x10]
64019b75:	push   esi
64019b76:	mov    esi,DWORD PTR [ebp+0xc]
64019b79:	push   edi
64019b7a:	mov    edi,esi
64019b7c:	sub    edi,DWORD PTR [ecx+0xc]
64019b7f:	add    esi,0xfffffffc
64019b82:	shr    edi,0xf
64019b85:	mov    ecx,edi
64019b87:	imul   ecx,ecx,0x204
64019b8d:	lea    ecx,[ecx+eax*1+0x144]
64019b94:	mov    DWORD PTR [ebp-0x10],ecx
64019b97:	mov    ecx,DWORD PTR [esi]
64019b99:	dec    ecx
64019b9a:	test   cl,0x1
64019b9d:	mov    DWORD PTR [ebp-0x4],ecx
64019ba0:	jne    0x64019e79
64019ba6:	push   ebx
64019ba7:	lea    ebx,[ecx+esi*1]
64019baa:	mov    edx,DWORD PTR [ebx]
64019bac:	mov    DWORD PTR [ebp-0xc],edx
64019baf:	mov    edx,DWORD PTR [esi-0x4]
64019bb2:	mov    DWORD PTR [ebp-0x8],edx
64019bb5:	mov    edx,DWORD PTR [ebp-0xc]
64019bb8:	test   dl,0x1
64019bbb:	mov    DWORD PTR [ebp+0xc],ebx
64019bbe:	jne    0x64019c34
64019bc0:	sar    edx,0x4
64019bc3:	dec    edx
64019bc4:	cmp    edx,0x3f
64019bc7:	jbe    0x64019bcc
64019bc9:	push   0x3f
64019bcb:	pop    edx
64019bcc:	mov    ecx,DWORD PTR [ebx+0x4]
64019bcf:	cmp    ecx,DWORD PTR [ebx+0x8]
64019bd2:	jne    0x64019c16
64019bd4:	cmp    edx,0x20
64019bd7:	mov    ebx,0x80000000
64019bdc:	jae    0x64019bf7
64019bde:	mov    ecx,edx
64019be0:	shr    ebx,cl
64019be2:	lea    ecx,[edx+eax*1+0x4]
64019be6:	not    ebx
64019be8:	and    DWORD PTR [eax+edi*4+0x44],ebx
64019bec:	dec    BYTE PTR [ecx]
64019bee:	jne    0x64019c13
64019bf0:	mov    ecx,DWORD PTR [ebp+0x8]
64019bf3:	and    DWORD PTR [ecx],ebx
64019bf5:	jmp    0x64019c13
64019bf7:	lea    ecx,[edx-0x20]
64019bfa:	shr    ebx,cl
64019bfc:	lea    ecx,[edx+eax*1+0x4]
64019c00:	not    ebx
64019c02:	and    DWORD PTR [eax+edi*4+0xc4],ebx
64019c09:	dec    BYTE PTR [ecx]
64019c0b:	jne    0x64019c13
64019c0d:	mov    ecx,DWORD PTR [ebp+0x8]
64019c10:	and    DWORD PTR [ecx+0x4],ebx
64019c13:	mov    ebx,DWORD PTR [ebp+0xc]
64019c16:	mov    edx,DWORD PTR [ebx+0x8]
64019c19:	mov    ebx,DWORD PTR [ebx+0x4]
64019c1c:	mov    ecx,DWORD PTR [ebp-0x4]
64019c1f:	add    ecx,DWORD PTR [ebp-0xc]
64019c22:	mov    DWORD PTR [edx+0x4],ebx
64019c25:	mov    edx,DWORD PTR [ebp+0xc]
64019c28:	mov    ebx,DWORD PTR [edx+0x4]
64019c2b:	mov    edx,DWORD PTR [edx+0x8]
64019c2e:	mov    DWORD PTR [ebx+0x8],edx
64019c31:	mov    DWORD PTR [ebp-0x4],ecx
64019c34:	mov    edx,ecx
64019c36:	sar    edx,0x4
64019c39:	dec    edx
64019c3a:	cmp    edx,0x3f
64019c3d:	jbe    0x64019c42
64019c3f:	push   0x3f
64019c41:	pop    edx
64019c42:	mov    ebx,DWORD PTR [ebp-0x8]
64019c45:	and    ebx,0x1
64019c48:	mov    DWORD PTR [ebp-0xc],ebx
64019c4b:	jne    0x64019ce0
64019c51:	sub    esi,DWORD PTR [ebp-0x8]
64019c54:	mov    ebx,DWORD PTR [ebp-0x8]
64019c57:	sar    ebx,0x4
64019c5a:	push   0x3f
64019c5c:	mov    DWORD PTR [ebp+0xc],esi
64019c5f:	dec    ebx
64019c60:	pop    esi
64019c61:	cmp    ebx,esi
64019c63:	jbe    0x64019c67
64019c65:	mov    ebx,esi
64019c67:	add    ecx,DWORD PTR [ebp-0x8]
64019c6a:	mov    edx,ecx
64019c6c:	sar    edx,0x4
64019c6f:	dec    edx
64019c70:	cmp    edx,esi
64019c72:	mov    DWORD PTR [ebp-0x4],ecx
64019c75:	jbe    0x64019c79
64019c77:	mov    edx,esi
64019c79:	cmp    ebx,edx
64019c7b:	je     0x64019cdb
64019c7d:	mov    ecx,DWORD PTR [ebp+0xc]
64019c80:	mov    esi,DWORD PTR [ecx+0x4]
64019c83:	cmp    esi,DWORD PTR [ecx+0x8]
64019c86:	jne    0x64019cc3
64019c88:	cmp    ebx,0x20
64019c8b:	mov    esi,0x80000000
64019c90:	jae    0x64019ca9
64019c92:	mov    ecx,ebx
64019c94:	shr    esi,cl
64019c96:	not    esi
64019c98:	and    DWORD PTR [eax+edi*4+0x44],esi
64019c9c:	dec    BYTE PTR [ebx+eax*1+0x4]
64019ca0:	jne    0x64019cc3
64019ca2:	mov    ecx,DWORD PTR [ebp+0x8]
64019ca5:	and    DWORD PTR [ecx],esi
64019ca7:	jmp    0x64019cc3
64019ca9:	lea    ecx,[ebx-0x20]
64019cac:	shr    esi,cl
64019cae:	not    esi
64019cb0:	and    DWORD PTR [eax+edi*4+0xc4],esi
64019cb7:	dec    BYTE PTR [ebx+eax*1+0x4]
64019cbb:	jne    0x64019cc3
64019cbd:	mov    ecx,DWORD PTR [ebp+0x8]
64019cc0:	and    DWORD PTR [ecx+0x4],esi
64019cc3:	mov    ecx,DWORD PTR [ebp+0xc]
64019cc6:	mov    esi,DWORD PTR [ecx+0x8]
64019cc9:	mov    ecx,DWORD PTR [ecx+0x4]
64019ccc:	mov    DWORD PTR [esi+0x4],ecx
64019ccf:	mov    ecx,DWORD PTR [ebp+0xc]
64019cd2:	mov    esi,DWORD PTR [ecx+0x4]
64019cd5:	mov    ecx,DWORD PTR [ecx+0x8]
64019cd8:	mov    DWORD PTR [esi+0x8],ecx
64019cdb:	mov    esi,DWORD PTR [ebp+0xc]
64019cde:	jmp    0x64019ce3
64019ce0:	mov    ebx,DWORD PTR [ebp+0x8]
64019ce3:	cmp    DWORD PTR [ebp-0xc],0x0
64019ce7:	jne    0x64019cf1
64019ce9:	cmp    ebx,edx
64019ceb:	je     0x64019d71
64019cf1:	mov    ecx,DWORD PTR [ebp-0x10]
64019cf4:	lea    ecx,[ecx+edx*8]
64019cf7:	mov    ebx,DWORD PTR [ecx+0x4]
64019cfa:	mov    DWORD PTR [esi+0x8],ecx
64019cfd:	mov    DWORD PTR [esi+0x4],ebx
64019d00:	mov    DWORD PTR [ecx+0x4],esi
64019d03:	mov    ecx,DWORD PTR [esi+0x4]
64019d06:	mov    DWORD PTR [ecx+0x8],esi
64019d09:	mov    ecx,DWORD PTR [esi+0x4]
64019d0c:	cmp    ecx,DWORD PTR [esi+0x8]
64019d0f:	jne    0x64019d71
64019d11:	mov    cl,BYTE PTR [edx+eax*1+0x4]
64019d15:	mov    BYTE PTR [ebp+0xf],cl
64019d18:	inc    cl
64019d1a:	cmp    edx,0x20
64019d1d:	mov    BYTE PTR [edx+eax*1+0x4],cl
64019d21:	jae    0x64019d48
64019d23:	cmp    BYTE PTR [ebp+0xf],0x0
64019d27:	jne    0x64019d37
64019d29:	mov    ecx,edx
64019d2b:	mov    ebx,0x80000000
64019d30:	shr    ebx,cl
64019d32:	mov    ecx,DWORD PTR [ebp+0x8]
64019d35:	or     DWORD PTR [ecx],ebx
64019d37:	mov    ebx,0x80000000
64019d3c:	mov    ecx,edx
64019d3e:	shr    ebx,cl
64019d40:	lea    eax,[eax+edi*4+0x44]
64019d44:	or     DWORD PTR [eax],ebx
64019d46:	jmp    0x64019d71
64019d48:	cmp    BYTE PTR [ebp+0xf],0x0
64019d4c:	jne    0x64019d5e
64019d4e:	lea    ecx,[edx-0x20]
64019d51:	mov    ebx,0x80000000
64019d56:	shr    ebx,cl
64019d58:	mov    ecx,DWORD PTR [ebp+0x8]
64019d5b:	or     DWORD PTR [ecx+0x4],ebx
64019d5e:	lea    ecx,[edx-0x20]
64019d61:	mov    edx,0x80000000
64019d66:	shr    edx,cl
64019d68:	lea    eax,[eax+edi*4+0xc4]
64019d6f:	or     DWORD PTR [eax],edx
64019d71:	mov    eax,DWORD PTR [ebp-0x4]
64019d74:	mov    DWORD PTR [esi],eax
64019d76:	mov    DWORD PTR [eax+esi*1-0x4],eax
64019d7a:	mov    eax,DWORD PTR [ebp-0x10]
64019d7d:	dec    DWORD PTR [eax]
64019d7f:	jne    0x64019e78
64019d85:	mov    eax,ds:0x6402dbe8
64019d8a:	test   eax,eax
64019d8c:	je     0x64019e6a
64019d92:	mov    ecx,DWORD PTR ds:0x64031438
64019d98:	mov    esi,DWORD PTR ds:0x64024174
64019d9e:	push   0x4000
64019da3:	shl    ecx,0xf
64019da6:	add    ecx,DWORD PTR [eax+0xc]
64019da9:	mov    ebx,0x8000
64019dae:	push   ebx
64019daf:	push   ecx
64019db0:	call   esi
64019db2:	mov    ecx,DWORD PTR ds:0x64031438
64019db8:	mov    eax,ds:0x6402dbe8
64019dbd:	mov    edx,0x80000000
64019dc2:	shr    edx,cl
64019dc4:	or     DWORD PTR [eax+0x8],edx
64019dc7:	mov    eax,ds:0x6402dbe8
64019dcc:	mov    eax,DWORD PTR [eax+0x10]
64019dcf:	mov    ecx,DWORD PTR ds:0x64031438
64019dd5:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
64019ddd:	mov    eax,ds:0x6402dbe8
64019de2:	mov    eax,DWORD PTR [eax+0x10]
64019de5:	dec    BYTE PTR [eax+0x43]
64019de8:	mov    eax,ds:0x6402dbe8
64019ded:	mov    ecx,DWORD PTR [eax+0x10]
64019df0:	cmp    BYTE PTR [ecx+0x43],0x0
64019df4:	jne    0x64019dff
64019df6:	and    DWORD PTR [eax+0x4],0xfffffffe
64019dfa:	mov    eax,ds:0x6402dbe8
64019dff:	cmp    DWORD PTR [eax+0x8],0xffffffff
64019e03:	jne    0x64019e6a
64019e05:	push   ebx
64019e06:	push   0x0
64019e08:	push   DWORD PTR [eax+0xc]
64019e0b:	call   esi
64019e0d:	mov    eax,ds:0x6402dbe8
64019e12:	push   DWORD PTR [eax+0x10]
64019e15:	push   0x0
64019e17:	push   DWORD PTR ds:0x6402da8c
64019e1d:	call   DWORD PTR ds:0x640240f8
64019e23:	mov    ecx,DWORD PTR ds:0x64031424
64019e29:	mov    eax,ds:0x6402dbe8
64019e2e:	imul   ecx,ecx,0x14
64019e31:	mov    edx,DWORD PTR ds:0x64031428
64019e37:	sub    ecx,eax
64019e39:	lea    ecx,[ecx+edx*1-0x14]
64019e3d:	push   ecx
64019e3e:	lea    ecx,[eax+0x14]
64019e41:	push   ecx
64019e42:	push   eax
64019e43:	call   0x64013540
64019e48:	mov    eax,DWORD PTR [ebp+0x8]
64019e4b:	add    esp,0xc
64019e4e:	dec    DWORD PTR ds:0x64031424
64019e54:	cmp    eax,DWORD PTR ds:0x6402dbe8
64019e5a:	jbe    0x64019e60
64019e5c:	sub    DWORD PTR [ebp+0x8],0x14
64019e60:	mov    eax,ds:0x64031428
64019e65:	mov    ds:0x64031430,eax
64019e6a:	mov    eax,DWORD PTR [ebp+0x8]
64019e6d:	mov    ds:0x6402dbe8,eax
64019e72:	mov    DWORD PTR ds:0x64031438,edi
64019e78:	pop    ebx
64019e79:	pop    edi
64019e7a:	pop    esi
64019e7b:	leave  
64019e7c:	ret    
64019e7d:	mov    eax,ds:0x64031434
64019e82:	push   esi
64019e83:	mov    esi,DWORD PTR ds:0x64031424
64019e89:	push   edi
64019e8a:	xor    edi,edi
64019e8c:	cmp    esi,eax
64019e8e:	jne    0x64019ec4
64019e90:	add    eax,0x10
64019e93:	imul   eax,eax,0x14
64019e96:	push   eax
64019e97:	push   DWORD PTR ds:0x64031428
64019e9d:	push   edi
64019e9e:	push   DWORD PTR ds:0x6402da8c
64019ea4:	call   DWORD PTR ds:0x640240fc
64019eaa:	cmp    eax,edi
64019eac:	jne    0x64019eb2
64019eae:	xor    eax,eax
64019eb0:	jmp    0x64019f2a
64019eb2:	add    DWORD PTR ds:0x64031434,0x10
64019eb9:	mov    esi,DWORD PTR ds:0x64031424
64019ebf:	mov    ds:0x64031428,eax
64019ec4:	imul   esi,esi,0x14
64019ec7:	add    esi,DWORD PTR ds:0x64031428
64019ecd:	push   0x41c4
64019ed2:	push   0x8
64019ed4:	push   DWORD PTR ds:0x6402da8c
64019eda:	call   DWORD PTR ds:0x640240f4
64019ee0:	cmp    eax,edi
64019ee2:	mov    DWORD PTR [esi+0x10],eax
64019ee5:	je     0x64019eae
64019ee7:	push   0x4
64019ee9:	push   0x2000
64019eee:	push   0x100000
64019ef3:	push   edi
64019ef4:	call   DWORD PTR ds:0x640240c8
64019efa:	cmp    eax,edi
64019efc:	mov    DWORD PTR [esi+0xc],eax
64019eff:	jne    0x64019f13
64019f01:	push   DWORD PTR [esi+0x10]
64019f04:	push   edi
64019f05:	push   DWORD PTR ds:0x6402da8c
64019f0b:	call   DWORD PTR ds:0x640240f8
64019f11:	jmp    0x64019eae
64019f13:	or     DWORD PTR [esi+0x8],0xffffffff
64019f17:	mov    DWORD PTR [esi],edi
64019f19:	mov    DWORD PTR [esi+0x4],edi
64019f1c:	inc    DWORD PTR ds:0x64031424
64019f22:	mov    eax,DWORD PTR [esi+0x10]
64019f25:	or     DWORD PTR [eax],0xffffffff
64019f28:	mov    eax,esi
64019f2a:	pop    edi
64019f2b:	pop    esi
64019f2c:	ret    
64019f2d:	push   ebp
64019f2e:	mov    ebp,esp
64019f30:	push   ecx
64019f31:	push   ecx
64019f32:	mov    ecx,DWORD PTR [ebp+0x8]
64019f35:	mov    eax,DWORD PTR [ecx+0x8]
64019f38:	push   ebx
64019f39:	push   esi
64019f3a:	mov    esi,DWORD PTR [ecx+0x10]
64019f3d:	push   edi
64019f3e:	xor    ebx,ebx
64019f40:	jmp    0x64019f45
64019f42:	add    eax,eax
64019f44:	inc    ebx
64019f45:	test   eax,eax
64019f47:	jge    0x64019f42
64019f49:	mov    eax,ebx
64019f4b:	imul   eax,eax,0x204
64019f51:	lea    eax,[eax+esi*1+0x144]
64019f58:	push   0x3f
64019f5a:	mov    DWORD PTR [ebp-0x8],eax
64019f5d:	pop    edx
64019f5e:	mov    DWORD PTR [eax+0x8],eax
64019f61:	mov    DWORD PTR [eax+0x4],eax
64019f64:	add    eax,0x8
64019f67:	dec    edx
64019f68:	jne    0x64019f5e
64019f6a:	push   0x4
64019f6c:	mov    edi,ebx
64019f6e:	push   0x1000
64019f73:	shl    edi,0xf
64019f76:	add    edi,DWORD PTR [ecx+0xc]
64019f79:	push   0x8000
64019f7e:	push   edi
64019f7f:	call   DWORD PTR ds:0x640240c8
64019f85:	test   eax,eax
64019f87:	jne    0x64019f91
64019f89:	or     eax,0xffffffff
64019f8c:	jmp    0x6401a02e
64019f91:	lea    edx,[edi+0x7000]
64019f97:	cmp    edi,edx
64019f99:	mov    DWORD PTR [ebp-0x4],edx
64019f9c:	ja     0x64019fe1
64019f9e:	mov    ecx,edx
64019fa0:	sub    ecx,edi
64019fa2:	shr    ecx,0xc
64019fa5:	lea    eax,[edi+0x10]
64019fa8:	inc    ecx
64019fa9:	or     DWORD PTR [eax-0x8],0xffffffff
64019fad:	or     DWORD PTR [eax+0xfec],0xffffffff
64019fb4:	lea    edx,[eax+0xffc]
64019fba:	mov    DWORD PTR [eax],edx
64019fbc:	lea    edx,[eax-0x1004]
64019fc2:	mov    DWORD PTR [eax-0x4],0xff0
64019fc9:	mov    DWORD PTR [eax+0x4],edx
64019fcc:	mov    DWORD PTR [eax+0xfe8],0xff0
64019fd6:	add    eax,0x1000
64019fdb:	dec    ecx
64019fdc:	jne    0x64019fa9
64019fde:	mov    edx,DWORD PTR [ebp-0x4]
64019fe1:	mov    eax,DWORD PTR [ebp-0x8]
64019fe4:	add    eax,0x1f8
64019fe9:	lea    ecx,[edi+0xc]
64019fec:	mov    DWORD PTR [eax+0x4],ecx
64019fef:	mov    DWORD PTR [ecx+0x8],eax
64019ff2:	lea    ecx,[edx+0xc]
64019ff5:	mov    DWORD PTR [eax+0x8],ecx
64019ff8:	mov    DWORD PTR [ecx+0x4],eax
64019ffb:	and    DWORD PTR [esi+ebx*4+0x44],0x0
6401a000:	xor    edi,edi
6401a002:	inc    edi
6401a003:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
6401a00a:	mov    al,BYTE PTR [esi+0x43]
6401a00d:	mov    cl,al
6401a00f:	inc    cl
6401a011:	test   al,al
6401a013:	mov    eax,DWORD PTR [ebp+0x8]
6401a016:	mov    BYTE PTR [esi+0x43],cl
6401a019:	jne    0x6401a01e
6401a01b:	or     DWORD PTR [eax+0x4],edi
6401a01e:	mov    edx,0x80000000
6401a023:	mov    ecx,ebx
6401a025:	shr    edx,cl
6401a027:	not    edx
6401a029:	and    DWORD PTR [eax+0x8],edx
6401a02c:	mov    eax,ebx
6401a02e:	pop    edi
6401a02f:	pop    esi
6401a030:	pop    ebx
6401a031:	leave  
6401a032:	ret    
6401a033:	push   ebp
6401a034:	mov    ebp,esp
6401a036:	sub    esp,0xc
6401a039:	mov    ecx,DWORD PTR [ebp+0x8]
6401a03c:	mov    eax,DWORD PTR [ecx+0x10]
6401a03f:	push   ebx
6401a040:	push   esi
6401a041:	mov    esi,DWORD PTR [ebp+0x10]
6401a044:	push   edi
6401a045:	mov    edi,DWORD PTR [ebp+0xc]
6401a048:	mov    edx,edi
6401a04a:	sub    edx,DWORD PTR [ecx+0xc]
6401a04d:	add    esi,0x17
6401a050:	shr    edx,0xf
6401a053:	mov    ecx,edx
6401a055:	imul   ecx,ecx,0x204
6401a05b:	lea    ecx,[ecx+eax*1+0x144]
6401a062:	mov    DWORD PTR [ebp-0xc],ecx
6401a065:	mov    ecx,DWORD PTR [edi-0x4]
6401a068:	and    esi,0xfffffff0
6401a06b:	dec    ecx
6401a06c:	cmp    esi,ecx
6401a06e:	lea    edi,[ecx+edi*1-0x4]
6401a072:	mov    ebx,DWORD PTR [edi]
6401a074:	mov    DWORD PTR [ebp+0x10],ecx
6401a077:	mov    DWORD PTR [ebp-0x4],ebx
6401a07a:	jle    0x6401a1d5
6401a080:	test   bl,0x1
6401a083:	jne    0x6401a1ce
6401a089:	add    ebx,ecx
6401a08b:	cmp    esi,ebx
6401a08d:	jg     0x6401a1ce
6401a093:	mov    ecx,DWORD PTR [ebp-0x4]
6401a096:	sar    ecx,0x4
6401a099:	dec    ecx
6401a09a:	cmp    ecx,0x3f
6401a09d:	mov    DWORD PTR [ebp-0x8],ecx
6401a0a0:	jbe    0x6401a0a8
6401a0a2:	push   0x3f
6401a0a4:	pop    ecx
6401a0a5:	mov    DWORD PTR [ebp-0x8],ecx
6401a0a8:	mov    ebx,DWORD PTR [edi+0x4]
6401a0ab:	cmp    ebx,DWORD PTR [edi+0x8]
6401a0ae:	jne    0x6401a0f3
6401a0b0:	cmp    ecx,0x20
6401a0b3:	mov    ebx,0x80000000
6401a0b8:	jae    0x6401a0d4
6401a0ba:	shr    ebx,cl
6401a0bc:	mov    ecx,DWORD PTR [ebp-0x8]
6401a0bf:	lea    ecx,[ecx+eax*1+0x4]
6401a0c3:	not    ebx
6401a0c5:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401a0c9:	dec    BYTE PTR [ecx]
6401a0cb:	jne    0x6401a0f3
6401a0cd:	mov    ecx,DWORD PTR [ebp+0x8]
6401a0d0:	and    DWORD PTR [ecx],ebx
6401a0d2:	jmp    0x6401a0f3
6401a0d4:	add    ecx,0xffffffe0
6401a0d7:	shr    ebx,cl
6401a0d9:	mov    ecx,DWORD PTR [ebp-0x8]
6401a0dc:	lea    ecx,[ecx+eax*1+0x4]
6401a0e0:	not    ebx
6401a0e2:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401a0e9:	dec    BYTE PTR [ecx]
6401a0eb:	jne    0x6401a0f3
6401a0ed:	mov    ecx,DWORD PTR [ebp+0x8]
6401a0f0:	and    DWORD PTR [ecx+0x4],ebx
6401a0f3:	mov    ecx,DWORD PTR [edi+0x8]
6401a0f6:	mov    ebx,DWORD PTR [edi+0x4]
6401a0f9:	mov    DWORD PTR [ecx+0x4],ebx
6401a0fc:	mov    ecx,DWORD PTR [edi+0x4]
6401a0ff:	mov    edi,DWORD PTR [edi+0x8]
6401a102:	mov    DWORD PTR [ecx+0x8],edi
6401a105:	mov    ecx,DWORD PTR [ebp+0x10]
6401a108:	sub    ecx,esi
6401a10a:	add    DWORD PTR [ebp-0x4],ecx
6401a10d:	cmp    DWORD PTR [ebp-0x4],0x0
6401a111:	jle    0x6401a1bc
6401a117:	mov    edi,DWORD PTR [ebp-0x4]
6401a11a:	mov    ecx,DWORD PTR [ebp+0xc]
6401a11d:	sar    edi,0x4
6401a120:	dec    edi
6401a121:	cmp    edi,0x3f
6401a124:	lea    ecx,[ecx+esi*1-0x4]
6401a128:	jbe    0x6401a12d
6401a12a:	push   0x3f
6401a12c:	pop    edi
6401a12d:	mov    ebx,DWORD PTR [ebp-0xc]
6401a130:	lea    ebx,[ebx+edi*8]
6401a133:	mov    DWORD PTR [ebp+0x10],ebx
6401a136:	mov    ebx,DWORD PTR [ebx+0x4]
6401a139:	mov    DWORD PTR [ecx+0x4],ebx
6401a13c:	mov    ebx,DWORD PTR [ebp+0x10]
6401a13f:	mov    DWORD PTR [ecx+0x8],ebx
6401a142:	mov    DWORD PTR [ebx+0x4],ecx
6401a145:	mov    ebx,DWORD PTR [ecx+0x4]
6401a148:	mov    DWORD PTR [ebx+0x8],ecx
6401a14b:	mov    ebx,DWORD PTR [ecx+0x4]
6401a14e:	cmp    ebx,DWORD PTR [ecx+0x8]
6401a151:	jne    0x6401a1aa
6401a153:	mov    cl,BYTE PTR [edi+eax*1+0x4]
6401a157:	mov    BYTE PTR [ebp+0x13],cl
6401a15a:	inc    cl
6401a15c:	cmp    edi,0x20
6401a15f:	mov    BYTE PTR [edi+eax*1+0x4],cl
6401a163:	jae    0x6401a181
6401a165:	cmp    BYTE PTR [ebp+0x13],0x0
6401a169:	jne    0x6401a179
6401a16b:	mov    ecx,edi
6401a16d:	mov    ebx,0x80000000
6401a172:	shr    ebx,cl
6401a174:	mov    ecx,DWORD PTR [ebp+0x8]
6401a177:	or     DWORD PTR [ecx],ebx
6401a179:	lea    eax,[eax+edx*4+0x44]
6401a17d:	mov    ecx,edi
6401a17f:	jmp    0x6401a1a1
6401a181:	cmp    BYTE PTR [ebp+0x13],0x0
6401a185:	jne    0x6401a197
6401a187:	lea    ecx,[edi-0x20]
6401a18a:	mov    ebx,0x80000000
6401a18f:	shr    ebx,cl
6401a191:	mov    ecx,DWORD PTR [ebp+0x8]
6401a194:	or     DWORD PTR [ecx+0x4],ebx
6401a197:	lea    eax,[eax+edx*4+0xc4]
6401a19e:	lea    ecx,[edi-0x20]
6401a1a1:	mov    edx,0x80000000
6401a1a6:	shr    edx,cl
6401a1a8:	or     DWORD PTR [eax],edx
6401a1aa:	mov    edx,DWORD PTR [ebp+0xc]
6401a1ad:	mov    ecx,DWORD PTR [ebp-0x4]
6401a1b0:	lea    eax,[edx+esi*1-0x4]
6401a1b4:	mov    DWORD PTR [eax],ecx
6401a1b6:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
6401a1ba:	jmp    0x6401a1bf
6401a1bc:	mov    edx,DWORD PTR [ebp+0xc]
6401a1bf:	lea    eax,[esi+0x1]
6401a1c2:	mov    DWORD PTR [edx-0x4],eax
6401a1c5:	mov    DWORD PTR [edx+esi*1-0x8],eax
6401a1c9:	jmp    0x6401a30a
6401a1ce:	xor    eax,eax
6401a1d0:	jmp    0x6401a30d
6401a1d5:	jge    0x6401a30a
6401a1db:	mov    ebx,DWORD PTR [ebp+0xc]
6401a1de:	sub    DWORD PTR [ebp+0x10],esi
6401a1e1:	lea    ecx,[esi+0x1]
6401a1e4:	mov    DWORD PTR [ebx-0x4],ecx
6401a1e7:	lea    ebx,[ebx+esi*1-0x4]
6401a1eb:	mov    esi,DWORD PTR [ebp+0x10]
6401a1ee:	sar    esi,0x4
6401a1f1:	dec    esi
6401a1f2:	cmp    esi,0x3f
6401a1f5:	mov    DWORD PTR [ebp+0xc],ebx
6401a1f8:	mov    DWORD PTR [ebx-0x4],ecx
6401a1fb:	jbe    0x6401a200
6401a1fd:	push   0x3f
6401a1ff:	pop    esi
6401a200:	test   BYTE PTR [ebp-0x4],0x1
6401a204:	jne    0x6401a28a
6401a20a:	mov    esi,DWORD PTR [ebp-0x4]
6401a20d:	sar    esi,0x4
6401a210:	dec    esi
6401a211:	cmp    esi,0x3f
6401a214:	jbe    0x6401a219
6401a216:	push   0x3f
6401a218:	pop    esi
6401a219:	mov    ecx,DWORD PTR [edi+0x4]
6401a21c:	cmp    ecx,DWORD PTR [edi+0x8]
6401a21f:	jne    0x6401a263
6401a221:	cmp    esi,0x20
6401a224:	mov    ebx,0x80000000
6401a229:	jae    0x6401a244
6401a22b:	mov    ecx,esi
6401a22d:	shr    ebx,cl
6401a22f:	lea    esi,[esi+eax*1+0x4]
6401a233:	not    ebx
6401a235:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401a239:	dec    BYTE PTR [esi]
6401a23b:	jne    0x6401a260
6401a23d:	mov    ecx,DWORD PTR [ebp+0x8]
6401a240:	and    DWORD PTR [ecx],ebx
6401a242:	jmp    0x6401a260
6401a244:	lea    ecx,[esi-0x20]
6401a247:	shr    ebx,cl
6401a249:	lea    ecx,[esi+eax*1+0x4]
6401a24d:	not    ebx
6401a24f:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401a256:	dec    BYTE PTR [ecx]
6401a258:	jne    0x6401a260
6401a25a:	mov    ecx,DWORD PTR [ebp+0x8]
6401a25d:	and    DWORD PTR [ecx+0x4],ebx
6401a260:	mov    ebx,DWORD PTR [ebp+0xc]
6401a263:	mov    ecx,DWORD PTR [edi+0x8]
6401a266:	mov    esi,DWORD PTR [edi+0x4]
6401a269:	mov    DWORD PTR [ecx+0x4],esi
6401a26c:	mov    esi,DWORD PTR [edi+0x8]
6401a26f:	mov    ecx,DWORD PTR [edi+0x4]
6401a272:	mov    DWORD PTR [ecx+0x8],esi
6401a275:	mov    esi,DWORD PTR [ebp+0x10]
6401a278:	add    esi,DWORD PTR [ebp-0x4]
6401a27b:	mov    DWORD PTR [ebp+0x10],esi
6401a27e:	sar    esi,0x4
6401a281:	dec    esi
6401a282:	cmp    esi,0x3f
6401a285:	jbe    0x6401a28a
6401a287:	push   0x3f
6401a289:	pop    esi
6401a28a:	mov    ecx,DWORD PTR [ebp-0xc]
6401a28d:	lea    ecx,[ecx+esi*8]
6401a290:	mov    edi,DWORD PTR [ecx+0x4]
6401a293:	mov    DWORD PTR [ebx+0x8],ecx
6401a296:	mov    DWORD PTR [ebx+0x4],edi
6401a299:	mov    DWORD PTR [ecx+0x4],ebx
6401a29c:	mov    ecx,DWORD PTR [ebx+0x4]
6401a29f:	mov    DWORD PTR [ecx+0x8],ebx
6401a2a2:	mov    ecx,DWORD PTR [ebx+0x4]
6401a2a5:	cmp    ecx,DWORD PTR [ebx+0x8]
6401a2a8:	jne    0x6401a301
6401a2aa:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401a2ae:	mov    BYTE PTR [ebp+0xf],cl
6401a2b1:	inc    cl
6401a2b3:	cmp    esi,0x20
6401a2b6:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401a2ba:	jae    0x6401a2d8
6401a2bc:	cmp    BYTE PTR [ebp+0xf],0x0
6401a2c0:	jne    0x6401a2d0
6401a2c2:	mov    ecx,esi
6401a2c4:	mov    edi,0x80000000
6401a2c9:	shr    edi,cl
6401a2cb:	mov    ecx,DWORD PTR [ebp+0x8]
6401a2ce:	or     DWORD PTR [ecx],edi
6401a2d0:	lea    eax,[eax+edx*4+0x44]
6401a2d4:	mov    ecx,esi
6401a2d6:	jmp    0x6401a2f8
6401a2d8:	cmp    BYTE PTR [ebp+0xf],0x0
6401a2dc:	jne    0x6401a2ee
6401a2de:	lea    ecx,[esi-0x20]
6401a2e1:	mov    edi,0x80000000
6401a2e6:	shr    edi,cl
6401a2e8:	mov    ecx,DWORD PTR [ebp+0x8]
6401a2eb:	or     DWORD PTR [ecx+0x4],edi
6401a2ee:	lea    eax,[eax+edx*4+0xc4]
6401a2f5:	lea    ecx,[esi-0x20]
6401a2f8:	mov    edx,0x80000000
6401a2fd:	shr    edx,cl
6401a2ff:	or     DWORD PTR [eax],edx
6401a301:	mov    eax,DWORD PTR [ebp+0x10]
6401a304:	mov    DWORD PTR [ebx],eax
6401a306:	mov    DWORD PTR [eax+ebx*1-0x4],eax
6401a30a:	xor    eax,eax
6401a30c:	inc    eax
6401a30d:	pop    edi
6401a30e:	pop    esi
6401a30f:	pop    ebx
6401a310:	leave  
6401a311:	ret    
6401a312:	push   ebp
6401a313:	mov    ebp,esp
6401a315:	sub    esp,0x14
6401a318:	mov    eax,ds:0x64031424
6401a31d:	mov    ecx,DWORD PTR [ebp+0x8]
6401a320:	imul   eax,eax,0x14
6401a323:	add    eax,DWORD PTR ds:0x64031428
6401a329:	add    ecx,0x17
6401a32c:	and    ecx,0xfffffff0
6401a32f:	mov    DWORD PTR [ebp-0x10],ecx
6401a332:	sar    ecx,0x4
6401a335:	push   ebx
6401a336:	dec    ecx
6401a337:	cmp    ecx,0x20
6401a33a:	push   esi
6401a33b:	push   edi
6401a33c:	jge    0x6401a349
6401a33e:	or     esi,0xffffffff
6401a341:	shr    esi,cl
6401a343:	or     DWORD PTR [ebp-0x8],0xffffffff
6401a347:	jmp    0x6401a356
6401a349:	add    ecx,0xffffffe0
6401a34c:	or     edx,0xffffffff
6401a34f:	xor    esi,esi
6401a351:	shr    edx,cl
6401a353:	mov    DWORD PTR [ebp-0x8],edx
6401a356:	mov    ecx,DWORD PTR ds:0x64031430
6401a35c:	mov    ebx,ecx
6401a35e:	jmp    0x6401a371
6401a360:	mov    edx,DWORD PTR [ebx+0x4]
6401a363:	mov    edi,DWORD PTR [ebx]
6401a365:	and    edx,DWORD PTR [ebp-0x8]
6401a368:	and    edi,esi
6401a36a:	or     edx,edi
6401a36c:	jne    0x6401a378
6401a36e:	add    ebx,0x14
6401a371:	cmp    ebx,eax
6401a373:	mov    DWORD PTR [ebp+0x8],ebx
6401a376:	jb     0x6401a360
6401a378:	cmp    ebx,eax
6401a37a:	jne    0x6401a3fb
6401a37c:	mov    ebx,DWORD PTR ds:0x64031428
6401a382:	jmp    0x6401a395
6401a384:	mov    edx,DWORD PTR [ebx+0x4]
6401a387:	mov    edi,DWORD PTR [ebx]
6401a389:	and    edx,DWORD PTR [ebp-0x8]
6401a38c:	and    edi,esi
6401a38e:	or     edx,edi
6401a390:	jne    0x6401a39c
6401a392:	add    ebx,0x14
6401a395:	cmp    ebx,ecx
6401a397:	mov    DWORD PTR [ebp+0x8],ebx
6401a39a:	jb     0x6401a384
6401a39c:	cmp    ebx,ecx
6401a39e:	jne    0x6401a3fb
6401a3a0:	jmp    0x6401a3ae
6401a3a2:	cmp    DWORD PTR [ebx+0x8],0x0
6401a3a6:	jne    0x6401a3b2
6401a3a8:	add    ebx,0x14
6401a3ab:	mov    DWORD PTR [ebp+0x8],ebx
6401a3ae:	cmp    ebx,eax
6401a3b0:	jb     0x6401a3a2
6401a3b2:	cmp    ebx,eax
6401a3b4:	jne    0x6401a3e7
6401a3b6:	mov    ebx,DWORD PTR ds:0x64031428
6401a3bc:	jmp    0x6401a3c7
6401a3be:	cmp    DWORD PTR [ebx+0x8],0x0
6401a3c2:	jne    0x6401a3ce
6401a3c4:	add    ebx,0x14
6401a3c7:	cmp    ebx,ecx
6401a3c9:	mov    DWORD PTR [ebp+0x8],ebx
6401a3cc:	jb     0x6401a3be
6401a3ce:	cmp    ebx,ecx
6401a3d0:	jne    0x6401a3e7
6401a3d2:	call   0x64019e7d
6401a3d7:	mov    ebx,eax
6401a3d9:	test   ebx,ebx
6401a3db:	mov    DWORD PTR [ebp+0x8],ebx
6401a3de:	jne    0x6401a3e7
6401a3e0:	xor    eax,eax
6401a3e2:	jmp    0x6401a5f0
6401a3e7:	push   ebx
6401a3e8:	call   0x64019f2d
6401a3ed:	pop    ecx
6401a3ee:	mov    ecx,DWORD PTR [ebx+0x10]
6401a3f1:	mov    DWORD PTR [ecx],eax
6401a3f3:	mov    eax,DWORD PTR [ebx+0x10]
6401a3f6:	cmp    DWORD PTR [eax],0xffffffff
6401a3f9:	je     0x6401a3e0
6401a3fb:	mov    DWORD PTR ds:0x64031430,ebx
6401a401:	mov    eax,DWORD PTR [ebx+0x10]
6401a404:	mov    edx,DWORD PTR [eax]
6401a406:	cmp    edx,0xffffffff
6401a409:	mov    DWORD PTR [ebp-0x4],edx
6401a40c:	je     0x6401a422
6401a40e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401a415:	mov    edi,DWORD PTR [eax+edx*4+0x44]
6401a419:	and    ecx,DWORD PTR [ebp-0x8]
6401a41c:	and    edi,esi
6401a41e:	or     ecx,edi
6401a420:	jne    0x6401a44b
6401a422:	and    DWORD PTR [ebp-0x4],0x0
6401a426:	mov    edx,DWORD PTR [eax+0xc4]
6401a42c:	lea    ecx,[eax+0x44]
6401a42f:	mov    edi,DWORD PTR [ecx]
6401a431:	and    edx,DWORD PTR [ebp-0x8]
6401a434:	and    edi,esi
6401a436:	or     edx,edi
6401a438:	jne    0x6401a448
6401a43a:	inc    DWORD PTR [ebp-0x4]
6401a43d:	mov    edx,DWORD PTR [ecx+0x84]
6401a443:	add    ecx,0x4
6401a446:	jmp    0x6401a42f
6401a448:	mov    edx,DWORD PTR [ebp-0x4]
6401a44b:	mov    ecx,edx
6401a44d:	imul   ecx,ecx,0x204
6401a453:	lea    ecx,[ecx+eax*1+0x144]
6401a45a:	mov    DWORD PTR [ebp-0xc],ecx
6401a45d:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
6401a461:	xor    edi,edi
6401a463:	and    ecx,esi
6401a465:	jne    0x6401a479
6401a467:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401a46e:	and    ecx,DWORD PTR [ebp-0x8]
6401a471:	push   0x20
6401a473:	pop    edi
6401a474:	jmp    0x6401a479
6401a476:	add    ecx,ecx
6401a478:	inc    edi
6401a479:	test   ecx,ecx
6401a47b:	jge    0x6401a476
6401a47d:	mov    ecx,DWORD PTR [ebp-0xc]
6401a480:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
6401a484:	mov    ecx,DWORD PTR [edx]
6401a486:	sub    ecx,DWORD PTR [ebp-0x10]
6401a489:	mov    esi,ecx
6401a48b:	sar    esi,0x4
6401a48e:	dec    esi
6401a48f:	cmp    esi,0x3f
6401a492:	mov    DWORD PTR [ebp-0x8],ecx
6401a495:	jle    0x6401a49a
6401a497:	push   0x3f
6401a499:	pop    esi
6401a49a:	cmp    esi,edi
6401a49c:	je     0x6401a5a3
6401a4a2:	mov    ecx,DWORD PTR [edx+0x4]
6401a4a5:	cmp    ecx,DWORD PTR [edx+0x8]
6401a4a8:	jne    0x6401a506
6401a4aa:	cmp    edi,0x20
6401a4ad:	mov    ebx,0x80000000
6401a4b2:	jge    0x6401a4da
6401a4b4:	mov    ecx,edi
6401a4b6:	shr    ebx,cl
6401a4b8:	mov    ecx,DWORD PTR [ebp-0x4]
6401a4bb:	lea    edi,[eax+edi*1+0x4]
6401a4bf:	not    ebx
6401a4c1:	mov    DWORD PTR [ebp-0x14],ebx
6401a4c4:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
6401a4c8:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
6401a4cc:	dec    BYTE PTR [edi]
6401a4ce:	jne    0x6401a503
6401a4d0:	mov    ecx,DWORD PTR [ebp-0x14]
6401a4d3:	mov    ebx,DWORD PTR [ebp+0x8]
6401a4d6:	and    DWORD PTR [ebx],ecx
6401a4d8:	jmp    0x6401a506
6401a4da:	lea    ecx,[edi-0x20]
6401a4dd:	shr    ebx,cl
6401a4df:	mov    ecx,DWORD PTR [ebp-0x4]
6401a4e2:	lea    ecx,[eax+ecx*4+0xc4]
6401a4e9:	lea    edi,[eax+edi*1+0x4]
6401a4ed:	not    ebx
6401a4ef:	and    DWORD PTR [ecx],ebx
6401a4f1:	dec    BYTE PTR [edi]
6401a4f3:	mov    DWORD PTR [ebp-0x14],ebx
6401a4f6:	jne    0x6401a503
6401a4f8:	mov    ebx,DWORD PTR [ebp+0x8]
6401a4fb:	mov    ecx,DWORD PTR [ebp-0x14]
6401a4fe:	and    DWORD PTR [ebx+0x4],ecx
6401a501:	jmp    0x6401a506
6401a503:	mov    ebx,DWORD PTR [ebp+0x8]
6401a506:	cmp    DWORD PTR [ebp-0x8],0x0
6401a50a:	mov    ecx,DWORD PTR [edx+0x8]
6401a50d:	mov    edi,DWORD PTR [edx+0x4]
6401a510:	mov    DWORD PTR [ecx+0x4],edi
6401a513:	mov    ecx,DWORD PTR [edx+0x4]
6401a516:	mov    edi,DWORD PTR [edx+0x8]
6401a519:	mov    DWORD PTR [ecx+0x8],edi
6401a51c:	je     0x6401a5af
6401a522:	mov    ecx,DWORD PTR [ebp-0xc]
6401a525:	lea    ecx,[ecx+esi*8]
6401a528:	mov    edi,DWORD PTR [ecx+0x4]
6401a52b:	mov    DWORD PTR [edx+0x8],ecx
6401a52e:	mov    DWORD PTR [edx+0x4],edi
6401a531:	mov    DWORD PTR [ecx+0x4],edx
6401a534:	mov    ecx,DWORD PTR [edx+0x4]
6401a537:	mov    DWORD PTR [ecx+0x8],edx
6401a53a:	mov    ecx,DWORD PTR [edx+0x4]
6401a53d:	cmp    ecx,DWORD PTR [edx+0x8]
6401a540:	jne    0x6401a5a0
6401a542:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401a546:	mov    BYTE PTR [ebp+0xb],cl
6401a549:	inc    cl
6401a54b:	cmp    esi,0x20
6401a54e:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401a552:	jge    0x6401a577
6401a554:	cmp    BYTE PTR [ebp+0xb],0x0
6401a558:	jne    0x6401a565
6401a55a:	mov    edi,0x80000000
6401a55f:	mov    ecx,esi
6401a561:	shr    edi,cl
6401a563:	or     DWORD PTR [ebx],edi
6401a565:	mov    ecx,esi
6401a567:	mov    edi,0x80000000
6401a56c:	shr    edi,cl
6401a56e:	mov    ecx,DWORD PTR [ebp-0x4]
6401a571:	or     DWORD PTR [eax+ecx*4+0x44],edi
6401a575:	jmp    0x6401a5a0
6401a577:	cmp    BYTE PTR [ebp+0xb],0x0
6401a57b:	jne    0x6401a58a
6401a57d:	lea    ecx,[esi-0x20]
6401a580:	mov    edi,0x80000000
6401a585:	shr    edi,cl
6401a587:	or     DWORD PTR [ebx+0x4],edi
6401a58a:	mov    ecx,DWORD PTR [ebp-0x4]
6401a58d:	lea    edi,[eax+ecx*4+0xc4]
6401a594:	lea    ecx,[esi-0x20]
6401a597:	mov    esi,0x80000000
6401a59c:	shr    esi,cl
6401a59e:	or     DWORD PTR [edi],esi
6401a5a0:	mov    ecx,DWORD PTR [ebp-0x8]
6401a5a3:	test   ecx,ecx
6401a5a5:	je     0x6401a5b2
6401a5a7:	mov    DWORD PTR [edx],ecx
6401a5a9:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
6401a5ad:	jmp    0x6401a5b2
6401a5af:	mov    ecx,DWORD PTR [ebp-0x8]
6401a5b2:	mov    esi,DWORD PTR [ebp-0x10]
6401a5b5:	add    edx,ecx
6401a5b7:	lea    ecx,[esi+0x1]
6401a5ba:	mov    DWORD PTR [edx],ecx
6401a5bc:	mov    DWORD PTR [edx+esi*1-0x4],ecx
6401a5c0:	mov    esi,DWORD PTR [ebp-0xc]
6401a5c3:	mov    ecx,DWORD PTR [esi]
6401a5c5:	test   ecx,ecx
6401a5c7:	lea    edi,[ecx+0x1]
6401a5ca:	mov    DWORD PTR [esi],edi
6401a5cc:	jne    0x6401a5e8
6401a5ce:	cmp    ebx,DWORD PTR ds:0x6402dbe8
6401a5d4:	jne    0x6401a5e8
6401a5d6:	mov    ecx,DWORD PTR [ebp-0x4]
6401a5d9:	cmp    ecx,DWORD PTR ds:0x64031438
6401a5df:	jne    0x6401a5e8
6401a5e1:	and    DWORD PTR ds:0x6402dbe8,0x0
6401a5e8:	mov    ecx,DWORD PTR [ebp-0x4]
6401a5eb:	mov    DWORD PTR [eax],ecx
6401a5ed:	lea    eax,[edx+0x4]
6401a5f0:	pop    edi
6401a5f1:	pop    esi
6401a5f2:	pop    ebx
6401a5f3:	leave  
6401a5f4:	ret    
6401a5f5:	push   ecx
6401a5f6:	push   ebx
6401a5f7:	mov    ebx,DWORD PTR [esp+0xc]
6401a5fb:	push   esi
6401a5fc:	push   edi
6401a5fd:	xor    esi,esi
6401a5ff:	xor    edi,edi
6401a601:	cmp    ebx,DWORD PTR [edi*8+0x6402ca78]
6401a608:	je     0x6401a610
6401a60a:	inc    edi
6401a60b:	cmp    edi,0x17
6401a60e:	jb     0x6401a601
6401a610:	cmp    edi,0x17
6401a613:	jae    0x6401a790
6401a619:	push   ebp
6401a61a:	push   0x3
6401a61c:	call   0x6401d6b3
6401a621:	cmp    eax,0x1
6401a624:	pop    ecx
6401a625:	je     0x6401a75c
6401a62b:	push   0x3
6401a62d:	call   0x6401d6b3
6401a632:	test   eax,eax
6401a634:	pop    ecx
6401a635:	jne    0x6401a644
6401a637:	cmp    DWORD PTR ds:0x6402d5a0,0x1
6401a63e:	je     0x6401a75c
6401a644:	cmp    ebx,0xfc
6401a64a:	je     0x6401a78f
6401a650:	push   0x640252e8
6401a655:	mov    ebx,0x314
6401a65a:	push   ebx
6401a65b:	mov    ebp,0x6402dbf0
6401a660:	push   ebp
6401a661:	call   0x64013eb8
6401a666:	add    esp,0xc
6401a669:	test   eax,eax
6401a66b:	je     0x6401a67a
6401a66d:	push   esi
6401a66e:	push   esi
6401a66f:	push   esi
6401a670:	push   esi
6401a671:	push   esi
6401a672:	call   0x64011fb8
6401a677:	add    esp,0x14
6401a67a:	push   0x104
6401a67f:	mov    esi,0x6402dc09
6401a684:	push   esi
6401a685:	push   0x0
6401a687:	mov    BYTE PTR ds:0x6402dd0d,0x0
6401a68e:	call   DWORD PTR ds:0x64024160
6401a694:	test   eax,eax
6401a696:	jne    0x6401a6be
6401a698:	push   0x640252d0
6401a69d:	push   0x2fb
6401a6a2:	push   esi
6401a6a3:	call   0x64013eb8
6401a6a8:	add    esp,0xc
6401a6ab:	test   eax,eax
6401a6ad:	je     0x6401a6be
6401a6af:	xor    eax,eax
6401a6b1:	push   eax
6401a6b2:	push   eax
6401a6b3:	push   eax
6401a6b4:	push   eax
6401a6b5:	push   eax
6401a6b6:	call   0x64011fb8
6401a6bb:	add    esp,0x14
6401a6be:	push   esi
6401a6bf:	call   0x64013cc0
6401a6c4:	inc    eax
6401a6c5:	cmp    eax,0x3c
6401a6c8:	pop    ecx
6401a6c9:	jbe    0x6401a703
6401a6cb:	push   esi
6401a6cc:	call   0x64013cc0
6401a6d1:	sub    esi,0x3b
6401a6d4:	add    eax,esi
6401a6d6:	push   0x3
6401a6d8:	mov    ecx,0x6402df04
6401a6dd:	push   0x640252cc
6401a6e2:	sub    ecx,eax
6401a6e4:	push   ecx
6401a6e5:	push   eax
6401a6e6:	call   0x6401b746
6401a6eb:	add    esp,0x14
6401a6ee:	test   eax,eax
6401a6f0:	je     0x6401a703
6401a6f2:	xor    esi,esi
6401a6f4:	push   esi
6401a6f5:	push   esi
6401a6f6:	push   esi
6401a6f7:	push   esi
6401a6f8:	push   esi
6401a6f9:	call   0x64011fb8
6401a6fe:	add    esp,0x14
6401a701:	jmp    0x6401a705
6401a703:	xor    esi,esi
6401a705:	push   0x640252c8
6401a70a:	push   ebx
6401a70b:	push   ebp
6401a70c:	call   0x6401b68e
6401a711:	add    esp,0xc
6401a714:	test   eax,eax
6401a716:	je     0x6401a725
6401a718:	push   esi
6401a719:	push   esi
6401a71a:	push   esi
6401a71b:	push   esi
6401a71c:	push   esi
6401a71d:	call   0x64011fb8
6401a722:	add    esp,0x14
6401a725:	push   DWORD PTR [edi*8+0x6402ca7c]
6401a72c:	push   ebx
6401a72d:	push   ebp
6401a72e:	call   0x6401b68e
6401a733:	add    esp,0xc
6401a736:	test   eax,eax
6401a738:	je     0x6401a747
6401a73a:	push   esi
6401a73b:	push   esi
6401a73c:	push   esi
6401a73d:	push   esi
6401a73e:	push   esi
6401a73f:	call   0x64011fb8
6401a744:	add    esp,0x14
6401a747:	push   0x12010
6401a74c:	push   0x640252a0
6401a751:	push   ebp
6401a752:	call   0x6401d4f6
6401a757:	add    esp,0xc
6401a75a:	jmp    0x6401a78f
6401a75c:	push   0xfffffff4
6401a75e:	call   DWORD PTR ds:0x64024154
6401a764:	mov    ebp,eax
6401a766:	cmp    ebp,esi
6401a768:	je     0x6401a78f
6401a76a:	cmp    ebp,0xffffffff
6401a76d:	je     0x6401a78f
6401a76f:	push   0x0
6401a771:	lea    eax,[esp+0x14]
6401a775:	push   eax
6401a776:	lea    esi,[edi*8+0x6402ca7c]
6401a77d:	push   DWORD PTR [esi]
6401a77f:	call   0x64013cc0
6401a784:	pop    ecx
6401a785:	push   eax
6401a786:	push   DWORD PTR [esi]
6401a788:	push   ebp
6401a789:	call   DWORD PTR ds:0x64024084
6401a78f:	pop    ebp
6401a790:	pop    edi
6401a791:	pop    esi
6401a792:	pop    ebx
6401a793:	pop    ecx
6401a794:	ret    
6401a795:	push   0x3
6401a797:	call   0x6401d6b3
6401a79c:	cmp    eax,0x1
6401a79f:	pop    ecx
6401a7a0:	je     0x6401a7b7
6401a7a2:	push   0x3
6401a7a4:	call   0x6401d6b3
6401a7a9:	test   eax,eax
6401a7ab:	pop    ecx
6401a7ac:	jne    0x6401a7cd
6401a7ae:	cmp    DWORD PTR ds:0x6402d5a0,0x1
6401a7b5:	jne    0x6401a7cd
6401a7b7:	push   0xfc
6401a7bc:	call   0x6401a5f5
6401a7c1:	push   0xff
6401a7c6:	call   0x6401a5f5
6401a7cb:	pop    ecx
6401a7cc:	pop    ecx
6401a7cd:	ret    
6401a7ce:	push   ebp
6401a7cf:	mov    ebp,esp
6401a7d1:	sub    esp,0x8
6401a7d4:	mov    DWORD PTR [ebp-0x4],edi
6401a7d7:	mov    DWORD PTR [ebp-0x8],esi
6401a7da:	mov    esi,DWORD PTR [ebp+0xc]
6401a7dd:	mov    edi,DWORD PTR [ebp+0x8]
6401a7e0:	mov    ecx,DWORD PTR [ebp+0x10]
6401a7e3:	shr    ecx,0x7
6401a7e6:	jmp    0x6401a7ee
6401a7e8:	lea    ebx,[ebx+0x0]
6401a7ee:	movdqa xmm0,XMMWORD PTR [esi]
6401a7f2:	movdqa xmm1,XMMWORD PTR [esi+0x10]
6401a7f7:	movdqa xmm2,XMMWORD PTR [esi+0x20]
6401a7fc:	movdqa xmm3,XMMWORD PTR [esi+0x30]
6401a801:	movdqa XMMWORD PTR [edi],xmm0
6401a805:	movdqa XMMWORD PTR [edi+0x10],xmm1
6401a80a:	movdqa XMMWORD PTR [edi+0x20],xmm2
6401a80f:	movdqa XMMWORD PTR [edi+0x30],xmm3
6401a814:	movdqa xmm4,XMMWORD PTR [esi+0x40]
6401a819:	movdqa xmm5,XMMWORD PTR [esi+0x50]
6401a81e:	movdqa xmm6,XMMWORD PTR [esi+0x60]
6401a823:	movdqa xmm7,XMMWORD PTR [esi+0x70]
6401a828:	movdqa XMMWORD PTR [edi+0x40],xmm4
6401a82d:	movdqa XMMWORD PTR [edi+0x50],xmm5
6401a832:	movdqa XMMWORD PTR [edi+0x60],xmm6
6401a837:	movdqa XMMWORD PTR [edi+0x70],xmm7
6401a83c:	lea    esi,[esi+0x80]
6401a842:	lea    edi,[edi+0x80]
6401a848:	dec    ecx
6401a849:	jne    0x6401a7ee
6401a84b:	mov    esi,DWORD PTR [ebp-0x8]
6401a84e:	mov    edi,DWORD PTR [ebp-0x4]
6401a851:	mov    esp,ebp
6401a853:	pop    ebp
6401a854:	ret    
6401a855:	push   ebp
6401a856:	mov    ebp,esp
6401a858:	sub    esp,0x1c
6401a85b:	mov    DWORD PTR [ebp-0xc],edi
6401a85e:	mov    DWORD PTR [ebp-0x8],esi
6401a861:	mov    DWORD PTR [ebp-0x4],ebx
6401a864:	mov    ebx,DWORD PTR [ebp+0xc]
6401a867:	mov    eax,ebx
6401a869:	cdq    
6401a86a:	mov    ecx,eax
6401a86c:	mov    eax,DWORD PTR [ebp+0x8]
6401a86f:	xor    ecx,edx
6401a871:	sub    ecx,edx
6401a873:	and    ecx,0xf
6401a876:	xor    ecx,edx
6401a878:	sub    ecx,edx
6401a87a:	cdq    
6401a87b:	mov    edi,eax
6401a87d:	xor    edi,edx
6401a87f:	sub    edi,edx
6401a881:	and    edi,0xf
6401a884:	xor    edi,edx
6401a886:	sub    edi,edx
6401a888:	mov    edx,ecx
6401a88a:	or     edx,edi
6401a88c:	jne    0x6401a8d8
6401a88e:	mov    esi,DWORD PTR [ebp+0x10]
6401a891:	mov    ecx,esi
6401a893:	and    ecx,0x7f
6401a896:	mov    DWORD PTR [ebp-0x18],ecx
6401a899:	cmp    esi,ecx
6401a89b:	je     0x6401a8b0
6401a89d:	sub    esi,ecx
6401a89f:	push   esi
6401a8a0:	push   ebx
6401a8a1:	push   eax
6401a8a2:	call   0x6401a7ce
6401a8a7:	add    esp,0xc
6401a8aa:	mov    eax,DWORD PTR [ebp+0x8]
6401a8ad:	mov    ecx,DWORD PTR [ebp-0x18]
6401a8b0:	test   ecx,ecx
6401a8b2:	je     0x6401a92b
6401a8b4:	mov    ebx,DWORD PTR [ebp+0x10]
6401a8b7:	mov    edx,DWORD PTR [ebp+0xc]
6401a8ba:	add    edx,ebx
6401a8bc:	sub    edx,ecx
6401a8be:	mov    DWORD PTR [ebp-0x14],edx
6401a8c1:	add    ebx,eax
6401a8c3:	sub    ebx,ecx
6401a8c5:	mov    DWORD PTR [ebp-0x10],ebx
6401a8c8:	mov    esi,DWORD PTR [ebp-0x14]
6401a8cb:	mov    edi,DWORD PTR [ebp-0x10]
6401a8ce:	mov    ecx,DWORD PTR [ebp-0x18]
6401a8d1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401a8d3:	mov    eax,DWORD PTR [ebp+0x8]
6401a8d6:	jmp    0x6401a92b
6401a8d8:	cmp    ecx,edi
6401a8da:	jne    0x6401a911
6401a8dc:	neg    ecx
6401a8de:	add    ecx,0x10
6401a8e1:	mov    DWORD PTR [ebp-0x1c],ecx
6401a8e4:	mov    esi,DWORD PTR [ebp+0xc]
6401a8e7:	mov    edi,DWORD PTR [ebp+0x8]
6401a8ea:	mov    ecx,DWORD PTR [ebp-0x1c]
6401a8ed:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401a8ef:	mov    ecx,DWORD PTR [ebp+0x8]
6401a8f2:	add    ecx,DWORD PTR [ebp-0x1c]
6401a8f5:	mov    edx,DWORD PTR [ebp+0xc]
6401a8f8:	add    edx,DWORD PTR [ebp-0x1c]
6401a8fb:	mov    eax,DWORD PTR [ebp+0x10]
6401a8fe:	sub    eax,DWORD PTR [ebp-0x1c]
6401a901:	push   eax
6401a902:	push   edx
6401a903:	push   ecx
6401a904:	call   0x6401a855
6401a909:	add    esp,0xc
6401a90c:	mov    eax,DWORD PTR [ebp+0x8]
6401a90f:	jmp    0x6401a92b
6401a911:	mov    esi,DWORD PTR [ebp+0xc]
6401a914:	mov    edi,DWORD PTR [ebp+0x8]
6401a917:	mov    ecx,DWORD PTR [ebp+0x10]
6401a91a:	mov    edx,ecx
6401a91c:	shr    ecx,0x2
6401a91f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401a921:	mov    ecx,edx
6401a923:	and    ecx,0x3
6401a926:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401a928:	mov    eax,DWORD PTR [ebp+0x8]
6401a92b:	mov    ebx,DWORD PTR [ebp-0x4]
6401a92e:	mov    esi,DWORD PTR [ebp-0x8]
6401a931:	mov    edi,DWORD PTR [ebp-0xc]
6401a934:	mov    esp,ebp
6401a936:	pop    ebp
6401a937:	ret    
6401a938:	push   ebx
6401a939:	push   esi
6401a93a:	push   edi
6401a93b:	mov    edx,DWORD PTR [esp+0x10]
6401a93f:	mov    eax,DWORD PTR [esp+0x14]
6401a943:	mov    ecx,DWORD PTR [esp+0x18]
6401a947:	push   ebp
6401a948:	push   edx
6401a949:	push   eax
6401a94a:	push   ecx
6401a94b:	push   ecx
6401a94c:	push   0x6401a9c8
6401a951:	push   DWORD PTR fs:0x0
6401a958:	mov    eax,ds:0x6402c09c
6401a95d:	xor    eax,esp
6401a95f:	mov    DWORD PTR [esp+0x8],eax
6401a963:	mov    DWORD PTR fs:0x0,esp
6401a96a:	mov    eax,DWORD PTR [esp+0x30]
6401a96e:	mov    ebx,DWORD PTR [eax+0x8]
6401a971:	mov    ecx,DWORD PTR [esp+0x2c]
6401a975:	xor    ebx,DWORD PTR [ecx]
6401a977:	mov    esi,DWORD PTR [eax+0xc]
6401a97a:	cmp    esi,0xfffffffe
6401a97d:	je     0x6401a9ba
6401a97f:	mov    edx,DWORD PTR [esp+0x34]
6401a983:	cmp    edx,0xfffffffe
6401a986:	je     0x6401a98c
6401a988:	cmp    esi,edx
6401a98a:	jbe    0x6401a9ba
6401a98c:	lea    esi,[esi+esi*2]
6401a98f:	lea    ebx,[ebx+esi*4+0x10]
6401a993:	mov    ecx,DWORD PTR [ebx]
6401a995:	mov    DWORD PTR [eax+0xc],ecx
6401a998:	cmp    DWORD PTR [ebx+0x4],0x0
6401a99c:	jne    0x6401a96a
6401a99e:	push   0x101
6401a9a3:	mov    eax,DWORD PTR [ebx+0x8]
6401a9a6:	call   0x6401ade1
6401a9ab:	mov    ecx,0x1
6401a9b0:	mov    eax,DWORD PTR [ebx+0x8]
6401a9b3:	call   0x6401ae00
6401a9b8:	jmp    0x6401a96a
6401a9ba:	pop    DWORD PTR fs:0x0
6401a9c1:	add    esp,0x18
6401a9c4:	pop    edi
6401a9c5:	pop    esi
6401a9c6:	pop    ebx
6401a9c7:	ret    
6401a9c8:	mov    ecx,DWORD PTR [esp+0x4]
6401a9cc:	test   DWORD PTR [ecx+0x4],0x6
6401a9d3:	mov    eax,0x1
6401a9d8:	je     0x6401aa0d
6401a9da:	mov    eax,DWORD PTR [esp+0x8]
6401a9de:	mov    ecx,DWORD PTR [eax+0x8]
6401a9e1:	xor    ecx,eax
6401a9e3:	call   0x6401257c
6401a9e8:	push   ebp
6401a9e9:	mov    ebp,DWORD PTR [eax+0x18]
6401a9ec:	push   DWORD PTR [eax+0xc]
6401a9ef:	push   DWORD PTR [eax+0x10]
6401a9f2:	push   DWORD PTR [eax+0x14]
6401a9f5:	call   0x6401a938
6401a9fa:	add    esp,0xc
6401a9fd:	pop    ebp
6401a9fe:	mov    eax,DWORD PTR [esp+0x8]
6401aa02:	mov    edx,DWORD PTR [esp+0x10]
6401aa06:	mov    DWORD PTR [edx],eax
6401aa08:	mov    eax,0x3
6401aa0d:	ret    
6401aa0e:	push   ebp
6401aa0f:	mov    ecx,DWORD PTR [esp+0x8]
6401aa13:	mov    ebp,DWORD PTR [ecx]
6401aa15:	push   DWORD PTR [ecx+0x1c]
6401aa18:	push   DWORD PTR [ecx+0x18]
6401aa1b:	push   DWORD PTR [ecx+0x28]
6401aa1e:	call   0x6401a938
6401aa23:	add    esp,0xc
6401aa26:	pop    ebp
6401aa27:	ret    0x4
6401aa2a:	push   ebp
6401aa2b:	push   esi
6401aa2c:	push   edi
6401aa2d:	push   ebx
6401aa2e:	mov    ebp,edx
6401aa30:	xor    eax,eax
6401aa32:	xor    ebx,ebx
6401aa34:	xor    edx,edx
6401aa36:	xor    esi,esi
6401aa38:	xor    edi,edi
6401aa3a:	call   ecx
6401aa3c:	pop    ebx
6401aa3d:	pop    edi
6401aa3e:	pop    esi
6401aa3f:	pop    ebp
6401aa40:	ret    
6401aa41:	mov    ebp,edx
6401aa43:	mov    esi,ecx
6401aa45:	mov    eax,ecx
6401aa47:	push   0x1
6401aa49:	call   0x6401ade1
6401aa4e:	xor    eax,eax
6401aa50:	xor    ebx,ebx
6401aa52:	xor    ecx,ecx
6401aa54:	xor    edx,edx
6401aa56:	xor    edi,edi
6401aa58:	jmp    esi
6401aa5a:	push   ebp
6401aa5b:	mov    ebp,esp
6401aa5d:	push   ebx
6401aa5e:	push   esi
6401aa5f:	push   edi
6401aa60:	push   0x0
6401aa62:	push   0x0
6401aa64:	push   0x6401aa6f
6401aa69:	push   ecx
6401aa6a:	call   0x6401e75c
6401aa6f:	pop    edi
6401aa70:	pop    esi
6401aa71:	pop    ebx
6401aa72:	pop    ebp
6401aa73:	ret    
6401aa74:	push   ebp
6401aa75:	mov    ebp,DWORD PTR [esp+0x8]
6401aa79:	push   edx
6401aa7a:	push   ecx
6401aa7b:	push   DWORD PTR [esp+0x14]
6401aa7f:	call   0x6401a938
6401aa84:	add    esp,0xc
6401aa87:	pop    ebp
6401aa88:	ret    0x8
6401aa8b:	int3   
6401aa8c:	int3   
6401aa8d:	int3   
6401aa8e:	int3   
6401aa8f:	int3   
6401aa90:	mov    ecx,DWORD PTR [esp+0x4]
6401aa94:	cmp    WORD PTR [ecx],0x5a4d
6401aa99:	je     0x6401aa9e
6401aa9b:	xor    eax,eax
6401aa9d:	ret    
6401aa9e:	mov    eax,DWORD PTR [ecx+0x3c]
6401aaa1:	add    eax,ecx
6401aaa3:	cmp    DWORD PTR [eax],0x4550
6401aaa9:	jne    0x6401aa9b
6401aaab:	xor    ecx,ecx
6401aaad:	cmp    WORD PTR [eax+0x18],0x10b
6401aab3:	sete   cl
6401aab6:	mov    eax,ecx
6401aab8:	ret    
6401aab9:	int3   
6401aaba:	int3   
6401aabb:	int3   
6401aabc:	int3   
6401aabd:	int3   
6401aabe:	int3   
6401aabf:	int3   
6401aac0:	mov    eax,DWORD PTR [esp+0x4]
6401aac4:	mov    ecx,DWORD PTR [eax+0x3c]
6401aac7:	add    ecx,eax
6401aac9:	movzx  eax,WORD PTR [ecx+0x14]
6401aacd:	push   ebx
6401aace:	push   esi
6401aacf:	movzx  esi,WORD PTR [ecx+0x6]
6401aad3:	xor    edx,edx
6401aad5:	test   esi,esi
6401aad7:	push   edi
6401aad8:	lea    eax,[eax+ecx*1+0x18]
6401aadc:	jbe    0x6401aafc
6401aade:	mov    edi,DWORD PTR [esp+0x14]
6401aae2:	mov    ecx,DWORD PTR [eax+0xc]
6401aae5:	cmp    edi,ecx
6401aae7:	jb     0x6401aaf2
6401aae9:	mov    ebx,DWORD PTR [eax+0x8]
6401aaec:	add    ebx,ecx
6401aaee:	cmp    edi,ebx
6401aaf0:	jb     0x6401aafe
6401aaf2:	add    edx,0x1
6401aaf5:	add    eax,0x28
6401aaf8:	cmp    edx,esi
6401aafa:	jb     0x6401aae2
6401aafc:	xor    eax,eax
6401aafe:	pop    edi
6401aaff:	pop    esi
6401ab00:	pop    ebx
6401ab01:	ret    
6401ab02:	int3   
6401ab03:	int3   
6401ab04:	int3   
6401ab05:	int3   
6401ab06:	int3   
6401ab07:	int3   
6401ab08:	int3   
6401ab09:	int3   
6401ab0a:	int3   
6401ab0b:	int3   
6401ab0c:	int3   
6401ab0d:	int3   
6401ab0e:	int3   
6401ab0f:	int3   
6401ab10:	push   ebp
6401ab11:	mov    ebp,esp
6401ab13:	push   0xfffffffe
6401ab15:	push   0x64029a10
6401ab1a:	push   0x64013b20
6401ab1f:	mov    eax,fs:0x0
6401ab25:	push   eax
6401ab26:	sub    esp,0x8
6401ab29:	push   ebx
6401ab2a:	push   esi
6401ab2b:	push   edi
6401ab2c:	mov    eax,ds:0x6402c09c
6401ab31:	xor    DWORD PTR [ebp-0x8],eax
6401ab34:	xor    eax,ebp
6401ab36:	push   eax
6401ab37:	lea    eax,[ebp-0x10]
6401ab3a:	mov    fs:0x0,eax
6401ab40:	mov    DWORD PTR [ebp-0x18],esp
6401ab43:	mov    DWORD PTR [ebp-0x4],0x0
6401ab4a:	push   0x64000000
6401ab4f:	call   0x6401aa90
6401ab54:	add    esp,0x4
6401ab57:	test   eax,eax
6401ab59:	je     0x6401abb0
6401ab5b:	mov    eax,DWORD PTR [ebp+0x8]
6401ab5e:	sub    eax,0x64000000
6401ab63:	push   eax
6401ab64:	push   0x64000000
6401ab69:	call   0x6401aac0
6401ab6e:	add    esp,0x8
6401ab71:	test   eax,eax
6401ab73:	je     0x6401abb0
6401ab75:	mov    eax,DWORD PTR [eax+0x24]
6401ab78:	shr    eax,0x1f
6401ab7b:	not    eax
6401ab7d:	and    eax,0x1
6401ab80:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ab87:	mov    ecx,DWORD PTR [ebp-0x10]
6401ab8a:	mov    DWORD PTR fs:0x0,ecx
6401ab91:	pop    ecx
6401ab92:	pop    edi
6401ab93:	pop    esi
6401ab94:	pop    ebx
6401ab95:	mov    esp,ebp
6401ab97:	pop    ebp
6401ab98:	ret    
6401ab99:	mov    eax,DWORD PTR [ebp-0x14]
6401ab9c:	mov    ecx,DWORD PTR [eax]
6401ab9e:	mov    eax,DWORD PTR [ecx]
6401aba0:	xor    edx,edx
6401aba2:	cmp    eax,0xc0000005
6401aba7:	sete   dl
6401abaa:	mov    eax,edx
6401abac:	ret    
6401abad:	mov    esp,DWORD PTR [ebp-0x18]
6401abb0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401abb7:	xor    eax,eax
6401abb9:	mov    ecx,DWORD PTR [ebp-0x10]
6401abbc:	mov    DWORD PTR fs:0x0,ecx
6401abc3:	pop    ecx
6401abc4:	pop    edi
6401abc5:	pop    esi
6401abc6:	pop    ebx
6401abc7:	mov    esp,ebp
6401abc9:	pop    ebp
6401abca:	ret    
6401abcb:	xor    eax,eax
6401abcd:	inc    eax
6401abce:	cmp    DWORD PTR [esp+0x4],0x0
6401abd3:	jne    0x6401abd7
6401abd5:	xor    eax,eax
6401abd7:	ret    
6401abd8:	push   ebp
6401abd9:	lea    ebp,[esp-0x2a8]
6401abe0:	sub    esp,0x328
6401abe6:	mov    eax,ds:0x6402c09c
6401abeb:	xor    eax,ebp
6401abed:	mov    DWORD PTR [ebp+0x2a4],eax
6401abf3:	test   BYTE PTR ds:0x6402cb30,0x1
6401abfa:	push   esi
6401abfb:	je     0x6401ac05
6401abfd:	push   0xa
6401abff:	call   0x6401a5f5
6401ac04:	pop    ecx
6401ac05:	call   0x6401af8d
6401ac0a:	test   eax,eax
6401ac0c:	je     0x6401ac16
6401ac0e:	push   0x16
6401ac10:	call   0x6401af9a
6401ac15:	pop    ecx
6401ac16:	test   BYTE PTR ds:0x6402cb30,0x2
6401ac1d:	je     0x6401acc3
6401ac23:	mov    DWORD PTR [ebp+0x88],eax
6401ac29:	mov    DWORD PTR [ebp+0x84],ecx
6401ac2f:	mov    DWORD PTR [ebp+0x80],edx
6401ac35:	mov    DWORD PTR [ebp+0x7c],ebx
6401ac38:	mov    DWORD PTR [ebp+0x78],esi
6401ac3b:	mov    DWORD PTR [ebp+0x74],edi
6401ac3e:	data16 mov WORD PTR [ebp+0xa0],ss
6401ac45:	data16 mov WORD PTR [ebp+0x94],cs
6401ac4c:	data16 mov WORD PTR [ebp+0x70],ds
6401ac50:	data16 mov WORD PTR [ebp+0x6c],es
6401ac54:	data16 mov WORD PTR [ebp+0x68],fs
6401ac58:	data16 mov WORD PTR [ebp+0x64],gs
6401ac5c:	pushf  
6401ac5d:	pop    DWORD PTR [ebp+0x98]
6401ac63:	mov    esi,DWORD PTR [ebp+0x2ac]
6401ac69:	lea    eax,[ebp+0x2ac]
6401ac6f:	mov    DWORD PTR [ebp+0x9c],eax
6401ac75:	mov    DWORD PTR [ebp-0x28],0x10001
6401ac7c:	mov    DWORD PTR [ebp+0x90],esi
6401ac82:	mov    eax,DWORD PTR [eax-0x4]
6401ac85:	push   0x50
6401ac87:	mov    DWORD PTR [ebp+0x8c],eax
6401ac8d:	lea    eax,[ebp-0x80]
6401ac90:	push   0x0
6401ac92:	push   eax
6401ac93:	call   0x64012c00
6401ac98:	lea    eax,[ebp-0x80]
6401ac9b:	add    esp,0xc
6401ac9e:	mov    DWORD PTR [ebp-0x30],eax
6401aca1:	lea    eax,[ebp-0x28]
6401aca4:	push   0x0
6401aca6:	mov    DWORD PTR [ebp-0x80],0x40000015
6401acad:	mov    DWORD PTR [ebp-0x74],esi
6401acb0:	mov    DWORD PTR [ebp-0x2c],eax
6401acb3:	call   DWORD PTR ds:0x64024110
6401acb9:	lea    eax,[ebp-0x30]
6401acbc:	push   eax
6401acbd:	call   DWORD PTR ds:0x6402410c
6401acc3:	push   0x3
6401acc5:	call   0x64015bd6
6401acca:	int3   
6401accb:	int3   
6401accc:	push   ebp
6401accd:	mov    ebp,esp
6401accf:	push   ebx
6401acd0:	push   esi
6401acd1:	push   edi
6401acd2:	push   ebp
6401acd3:	push   0x0
6401acd5:	push   0x0
6401acd7:	push   0x6401ace4
6401acdc:	push   DWORD PTR [ebp+0x8]
6401acdf:	call   0x6401e75c
6401ace4:	pop    ebp
6401ace5:	pop    edi
6401ace6:	pop    esi
6401ace7:	pop    ebx
6401ace8:	mov    esp,ebp
6401acea:	pop    ebp
6401aceb:	ret    
6401acec:	mov    ecx,DWORD PTR [esp+0x4]
6401acf0:	test   DWORD PTR [ecx+0x4],0x6
6401acf7:	mov    eax,0x1
6401acfc:	je     0x6401ad30
6401acfe:	mov    eax,DWORD PTR [esp+0x14]
6401ad02:	mov    ecx,DWORD PTR [eax-0x4]
6401ad05:	xor    ecx,eax
6401ad07:	call   0x6401257c
6401ad0c:	push   ebp
6401ad0d:	mov    ebp,DWORD PTR [eax+0x10]
6401ad10:	mov    edx,DWORD PTR [eax+0x28]
6401ad13:	push   edx
6401ad14:	mov    edx,DWORD PTR [eax+0x24]
6401ad17:	push   edx
6401ad18:	call   0x6401ad31
6401ad1d:	add    esp,0x8
6401ad20:	pop    ebp
6401ad21:	mov    eax,DWORD PTR [esp+0x8]
6401ad25:	mov    edx,DWORD PTR [esp+0x10]
6401ad29:	mov    DWORD PTR [edx],eax
6401ad2b:	mov    eax,0x3
6401ad30:	ret    
6401ad31:	push   ebx
6401ad32:	push   esi
6401ad33:	push   edi
6401ad34:	mov    eax,DWORD PTR [esp+0x10]
6401ad38:	push   ebp
6401ad39:	push   eax
6401ad3a:	push   0xfffffffe
6401ad3c:	push   0x6401acec
6401ad41:	push   DWORD PTR fs:0x0
6401ad48:	mov    eax,ds:0x6402c09c
6401ad4d:	xor    eax,esp
6401ad4f:	push   eax
6401ad50:	lea    eax,[esp+0x4]
6401ad54:	mov    fs:0x0,eax
6401ad5a:	mov    eax,DWORD PTR [esp+0x28]
6401ad5e:	mov    ebx,DWORD PTR [eax+0x8]
6401ad61:	mov    esi,DWORD PTR [eax+0xc]
6401ad64:	cmp    esi,0xffffffff
6401ad67:	je     0x6401ada3
6401ad69:	cmp    DWORD PTR [esp+0x2c],0xffffffff
6401ad6e:	je     0x6401ad76
6401ad70:	cmp    esi,DWORD PTR [esp+0x2c]
6401ad74:	jbe    0x6401ada3
6401ad76:	lea    esi,[esi+esi*2]
6401ad79:	mov    ecx,DWORD PTR [ebx+esi*4]
6401ad7c:	mov    DWORD PTR [esp+0xc],ecx
6401ad80:	mov    DWORD PTR [eax+0xc],ecx
6401ad83:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
6401ad88:	jne    0x6401ada1
6401ad8a:	push   0x101
6401ad8f:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401ad93:	call   0x6401ade1
6401ad98:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401ad9c:	call   0x6401ae00
6401ada1:	jmp    0x6401ad5a
6401ada3:	mov    ecx,DWORD PTR [esp+0x4]
6401ada7:	mov    DWORD PTR fs:0x0,ecx
6401adae:	add    esp,0x18
6401adb1:	pop    edi
6401adb2:	pop    esi
6401adb3:	pop    ebx
6401adb4:	ret    
6401adb5:	xor    eax,eax
6401adb7:	mov    ecx,DWORD PTR fs:0x0
6401adbe:	cmp    DWORD PTR [ecx+0x4],0x6401acec
6401adc5:	jne    0x6401add7
6401adc7:	mov    edx,DWORD PTR [ecx+0xc]
6401adca:	mov    edx,DWORD PTR [edx+0xc]
6401adcd:	cmp    DWORD PTR [ecx+0x8],edx
6401add0:	jne    0x6401add7
6401add2:	mov    eax,0x1
6401add7:	ret    
6401add8:	push   ebx
6401add9:	push   ecx
6401adda:	mov    ebx,0x6402cb34
6401addf:	jmp    0x6401adec
6401ade1:	push   ebx
6401ade2:	push   ecx
6401ade3:	mov    ebx,0x6402cb34
6401ade8:	mov    ecx,DWORD PTR [esp+0xc]
6401adec:	mov    DWORD PTR [ebx+0x8],ecx
6401adef:	mov    DWORD PTR [ebx+0x4],eax
6401adf2:	mov    DWORD PTR [ebx+0xc],ebp
6401adf5:	push   ebp
6401adf6:	push   ecx
6401adf7:	push   eax
6401adf8:	pop    eax
6401adf9:	pop    ecx
6401adfa:	pop    ebp
6401adfb:	pop    ecx
6401adfc:	pop    ebx
6401adfd:	ret    0x4
6401ae00:	call   eax
6401ae02:	ret    
6401ae03:	push   0xc
6401ae05:	push   0x64029a30
6401ae0a:	call   0x64013ac0
6401ae0f:	mov    ecx,DWORD PTR [ebp+0x8]
6401ae12:	xor    edi,edi
6401ae14:	cmp    ecx,edi
6401ae16:	jbe    0x6401ae46
6401ae18:	push   0xffffffe0
6401ae1a:	pop    eax
6401ae1b:	xor    edx,edx
6401ae1d:	div    ecx
6401ae1f:	cmp    eax,DWORD PTR [ebp+0xc]
6401ae22:	sbb    eax,eax
6401ae24:	inc    eax
6401ae25:	jne    0x6401ae46
6401ae27:	call   0x640142c0
6401ae2c:	mov    DWORD PTR [eax],0xc
6401ae32:	push   edi
6401ae33:	push   edi
6401ae34:	push   edi
6401ae35:	push   edi
6401ae36:	push   edi
6401ae37:	call   0x640120b4
6401ae3c:	add    esp,0x14
6401ae3f:	xor    eax,eax
6401ae41:	jmp    0x6401af1b
6401ae46:	imul   ecx,DWORD PTR [ebp+0xc]
6401ae4a:	mov    esi,ecx
6401ae4c:	mov    DWORD PTR [ebp+0x8],esi
6401ae4f:	cmp    esi,edi
6401ae51:	jne    0x6401ae56
6401ae53:	xor    esi,esi
6401ae55:	inc    esi
6401ae56:	xor    ebx,ebx
6401ae58:	mov    DWORD PTR [ebp-0x1c],ebx
6401ae5b:	cmp    esi,0xffffffe0
6401ae5e:	ja     0x6401aec9
6401ae60:	cmp    DWORD PTR ds:0x6403143c,0x3
6401ae67:	jne    0x6401aeb4
6401ae69:	add    esi,0xf
6401ae6c:	and    esi,0xfffffff0
6401ae6f:	mov    DWORD PTR [ebp+0xc],esi
6401ae72:	mov    eax,DWORD PTR [ebp+0x8]
6401ae75:	cmp    eax,DWORD PTR ds:0x6403142c
6401ae7b:	ja     0x6401aeb4
6401ae7d:	push   0x4
6401ae7f:	call   0x64019ac5
6401ae84:	pop    ecx
6401ae85:	mov    DWORD PTR [ebp-0x4],edi
6401ae88:	push   DWORD PTR [ebp+0x8]
6401ae8b:	call   0x6401a312
6401ae90:	pop    ecx
6401ae91:	mov    DWORD PTR [ebp-0x1c],eax
6401ae94:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ae9b:	call   0x6401aeff
6401aea0:	mov    ebx,DWORD PTR [ebp-0x1c]
6401aea3:	cmp    ebx,edi
6401aea5:	je     0x6401aeb8
6401aea7:	push   DWORD PTR [ebp+0x8]
6401aeaa:	push   edi
6401aeab:	push   ebx
6401aeac:	call   0x64012c00
6401aeb1:	add    esp,0xc
6401aeb4:	cmp    ebx,edi
6401aeb6:	jne    0x6401af19
6401aeb8:	push   esi
6401aeb9:	push   0x8
6401aebb:	push   DWORD PTR ds:0x6402da8c
6401aec1:	call   DWORD PTR ds:0x640240f4
6401aec7:	mov    ebx,eax
6401aec9:	cmp    ebx,edi
6401aecb:	jne    0x6401af19
6401aecd:	cmp    DWORD PTR ds:0x6402df04,edi
6401aed3:	je     0x6401af08
6401aed5:	push   esi
6401aed6:	call   0x6401493b
6401aedb:	pop    ecx
6401aedc:	test   eax,eax
6401aede:	jne    0x6401ae56
6401aee4:	mov    eax,DWORD PTR [ebp+0x10]
6401aee7:	cmp    eax,edi
6401aee9:	je     0x6401ae3f
6401aeef:	mov    DWORD PTR [eax],0xc
6401aef5:	jmp    0x6401ae3f
6401aefa:	xor    edi,edi
6401aefc:	mov    esi,DWORD PTR [ebp+0xc]
6401aeff:	push   0x4
6401af01:	call   0x640199ed
6401af06:	pop    ecx
6401af07:	ret    
6401af08:	cmp    ebx,edi
6401af0a:	jne    0x6401af19
6401af0c:	mov    eax,DWORD PTR [ebp+0x10]
6401af0f:	cmp    eax,edi
6401af11:	je     0x6401af19
6401af13:	mov    DWORD PTR [eax],0xc
6401af19:	mov    eax,ebx
6401af1b:	call   0x64013b05
6401af20:	ret    
6401af21:	push   esi
6401af22:	push   edi
6401af23:	xor    edi,edi
6401af25:	lea    esi,[edi+0x6402cb44]
6401af2b:	push   DWORD PTR [esi]
6401af2d:	call   0x64014378
6401af32:	add    edi,0x4
6401af35:	cmp    edi,0x28
6401af38:	pop    ecx
6401af39:	mov    DWORD PTR [esi],eax
6401af3b:	jb     0x6401af25
6401af3d:	pop    edi
6401af3e:	pop    esi
6401af3f:	ret    
6401af40:	mov    eax,DWORD PTR [esp+0x4]
6401af44:	mov    ds:0x6402df44,eax
6401af49:	mov    ds:0x6402df48,eax
6401af4e:	mov    ds:0x6402df4c,eax
6401af53:	mov    ds:0x6402df50,eax
6401af58:	ret    
6401af59:	mov    eax,DWORD PTR [esp+0x4]
6401af5d:	mov    ecx,DWORD PTR ds:0x6402c94c
6401af63:	push   esi
6401af64:	cmp    DWORD PTR [eax+0x4],edx
6401af67:	je     0x6401af79
6401af69:	mov    esi,ecx
6401af6b:	imul   esi,esi,0xc
6401af6e:	add    esi,DWORD PTR [esp+0x8]
6401af72:	add    eax,0xc
6401af75:	cmp    eax,esi
6401af77:	jb     0x6401af64
6401af79:	imul   ecx,ecx,0xc
6401af7c:	add    ecx,DWORD PTR [esp+0x8]
6401af80:	pop    esi
6401af81:	cmp    eax,ecx
6401af83:	jae    0x6401af8a
6401af85:	cmp    DWORD PTR [eax+0x4],edx
6401af88:	je     0x6401af8c
6401af8a:	xor    eax,eax
6401af8c:	ret    
6401af8d:	push   DWORD PTR ds:0x6402df4c
6401af93:	call   0x640143ef
6401af98:	pop    ecx
6401af99:	ret    
6401af9a:	push   0x20
6401af9c:	push   0x64029a50
6401afa1:	call   0x64013ac0
6401afa6:	xor    edi,edi
6401afa8:	mov    DWORD PTR [ebp-0x1c],edi
6401afab:	mov    DWORD PTR [ebp-0x28],edi
6401afae:	mov    ebx,DWORD PTR [ebp+0x8]
6401afb1:	cmp    ebx,0xb
6401afb4:	jg     0x6401b002
6401afb6:	je     0x6401afcd
6401afb8:	mov    eax,ebx
6401afba:	push   0x2
6401afbc:	pop    ecx
6401afbd:	sub    eax,ecx
6401afbf:	je     0x6401afe3
6401afc1:	sub    eax,ecx
6401afc3:	je     0x6401afcd
6401afc5:	sub    eax,ecx
6401afc7:	je     0x6401b02d
6401afc9:	sub    eax,ecx
6401afcb:	jne    0x6401b011
6401afcd:	call   0x64014594
6401afd2:	mov    edi,eax
6401afd4:	mov    DWORD PTR [ebp-0x28],edi
6401afd7:	test   edi,edi
6401afd9:	jne    0x6401afef
6401afdb:	or     eax,0xffffffff
6401afde:	jmp    0x6401b144
6401afe3:	mov    esi,0x6402df44
6401afe8:	mov    eax,ds:0x6402df44
6401afed:	jmp    0x6401b04f
6401afef:	push   DWORD PTR [edi+0x5c]
6401aff2:	mov    edx,ebx
6401aff4:	call   0x6401af59
6401aff9:	mov    esi,eax
6401affb:	add    esi,0x8
6401affe:	mov    eax,DWORD PTR [esi]
6401b000:	jmp    0x6401b05c
6401b002:	mov    eax,ebx
6401b004:	sub    eax,0xf
6401b007:	je     0x6401b045
6401b009:	sub    eax,0x6
6401b00c:	je     0x6401b039
6401b00e:	dec    eax
6401b00f:	je     0x6401b02d
6401b011:	call   0x640142c0
6401b016:	mov    DWORD PTR [eax],0x16
6401b01c:	xor    eax,eax
6401b01e:	push   eax
6401b01f:	push   eax
6401b020:	push   eax
6401b021:	push   eax
6401b022:	push   eax
6401b023:	call   0x640120b4
6401b028:	add    esp,0x14
6401b02b:	jmp    0x6401afdb
6401b02d:	mov    esi,0x6402df4c
6401b032:	mov    eax,ds:0x6402df4c
6401b037:	jmp    0x6401b04f
6401b039:	mov    esi,0x6402df48
6401b03e:	mov    eax,ds:0x6402df48
6401b043:	jmp    0x6401b04f
6401b045:	mov    esi,0x6402df50
6401b04a:	mov    eax,ds:0x6402df50
6401b04f:	mov    DWORD PTR [ebp-0x1c],0x1
6401b056:	push   eax
6401b057:	call   0x640143ef
6401b05c:	mov    DWORD PTR [ebp-0x20],eax
6401b05f:	pop    ecx
6401b060:	xor    eax,eax
6401b062:	cmp    DWORD PTR [ebp-0x20],0x1
6401b066:	je     0x6401b144
6401b06c:	cmp    DWORD PTR [ebp-0x20],eax
6401b06f:	jne    0x6401b078
6401b071:	push   0x3
6401b073:	call   0x64015bd6
6401b078:	cmp    DWORD PTR [ebp-0x1c],eax
6401b07b:	je     0x6401b084
6401b07d:	push   eax
6401b07e:	call   0x64019ac5
6401b083:	pop    ecx
6401b084:	xor    eax,eax
6401b086:	mov    DWORD PTR [ebp-0x4],eax
6401b089:	cmp    ebx,0x8
6401b08c:	je     0x6401b098
6401b08e:	cmp    ebx,0xb
6401b091:	je     0x6401b098
6401b093:	cmp    ebx,0x4
6401b096:	jne    0x6401b0b3
6401b098:	mov    ecx,DWORD PTR [edi+0x60]
6401b09b:	mov    DWORD PTR [ebp-0x2c],ecx
6401b09e:	mov    DWORD PTR [edi+0x60],eax
6401b0a1:	cmp    ebx,0x8
6401b0a4:	jne    0x6401b0e6
6401b0a6:	mov    ecx,DWORD PTR [edi+0x64]
6401b0a9:	mov    DWORD PTR [ebp-0x30],ecx
6401b0ac:	mov    DWORD PTR [edi+0x64],0x8c
6401b0b3:	cmp    ebx,0x8
6401b0b6:	jne    0x6401b0e6
6401b0b8:	mov    ecx,DWORD PTR ds:0x6402c940
6401b0be:	mov    DWORD PTR [ebp-0x24],ecx
6401b0c1:	mov    ecx,DWORD PTR ds:0x6402c944
6401b0c7:	mov    edx,DWORD PTR ds:0x6402c940
6401b0cd:	add    ecx,edx
6401b0cf:	cmp    DWORD PTR [ebp-0x24],ecx
6401b0d2:	jge    0x6401b0ed
6401b0d4:	mov    ecx,DWORD PTR [ebp-0x24]
6401b0d7:	imul   ecx,ecx,0xc
6401b0da:	mov    edx,DWORD PTR [edi+0x5c]
6401b0dd:	mov    DWORD PTR [ecx+edx*1+0x8],eax
6401b0e1:	inc    DWORD PTR [ebp-0x24]
6401b0e4:	jmp    0x6401b0c1
6401b0e6:	call   0x640143e6
6401b0eb:	mov    DWORD PTR [esi],eax
6401b0ed:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b0f4:	call   0x6401b10e
6401b0f9:	cmp    ebx,0x8
6401b0fc:	jne    0x6401b11d
6401b0fe:	push   DWORD PTR [edi+0x64]
6401b101:	push   ebx
6401b102:	call   DWORD PTR [ebp-0x20]
6401b105:	pop    ecx
6401b106:	jmp    0x6401b121
6401b108:	mov    ebx,DWORD PTR [ebp+0x8]
6401b10b:	mov    edi,DWORD PTR [ebp-0x28]
6401b10e:	cmp    DWORD PTR [ebp-0x1c],0x0
6401b112:	je     0x6401b11c
6401b114:	push   0x0
6401b116:	call   0x640199ed
6401b11b:	pop    ecx
6401b11c:	ret    
6401b11d:	push   ebx
6401b11e:	call   DWORD PTR [ebp-0x20]
6401b121:	pop    ecx
6401b122:	cmp    ebx,0x8
6401b125:	je     0x6401b131
6401b127:	cmp    ebx,0xb
6401b12a:	je     0x6401b131
6401b12c:	cmp    ebx,0x4
6401b12f:	jne    0x6401b142
6401b131:	mov    eax,DWORD PTR [ebp-0x2c]
6401b134:	mov    DWORD PTR [edi+0x60],eax
6401b137:	cmp    ebx,0x8
6401b13a:	jne    0x6401b142
6401b13c:	mov    eax,DWORD PTR [ebp-0x30]
6401b13f:	mov    DWORD PTR [edi+0x64],eax
6401b142:	xor    eax,eax
6401b144:	call   0x64013b05
6401b149:	ret    
6401b14a:	mov    eax,DWORD PTR [esp+0x4]
6401b14e:	mov    ds:0x6402df58,eax
6401b153:	ret    
6401b154:	mov    eax,DWORD PTR [esp+0x4]
6401b158:	mov    ds:0x6402df64,eax
6401b15d:	ret    
6401b15e:	mov    eax,DWORD PTR [esp+0x4]
6401b162:	mov    ds:0x6402df68,eax
6401b167:	ret    
6401b168:	push   DWORD PTR [esp+0x4]
6401b16c:	call   DWORD PTR ds:0x6402401c
6401b172:	xor    eax,eax
6401b174:	inc    eax
6401b175:	ret    0x8
6401b178:	push   0x14
6401b17a:	push   0x64029a70
6401b17f:	call   0x64013ac0
6401b184:	xor    edi,edi
6401b186:	mov    DWORD PTR [ebp-0x1c],edi
6401b189:	push   DWORD PTR ds:0x6402df68
6401b18f:	call   0x640143ef
6401b194:	pop    ecx
6401b195:	mov    esi,eax
6401b197:	cmp    esi,edi
6401b199:	jne    0x6401b1ee
6401b19b:	lea    eax,[ebp-0x1c]
6401b19e:	push   eax
6401b19f:	call   0x640159ef
6401b1a4:	pop    ecx
6401b1a5:	cmp    eax,edi
6401b1a7:	je     0x6401b1b6
6401b1a9:	push   edi
6401b1aa:	push   edi
6401b1ab:	push   edi
6401b1ac:	push   edi
6401b1ad:	push   edi
6401b1ae:	call   0x64011fb8
6401b1b3:	add    esp,0x14
6401b1b6:	cmp    DWORD PTR [ebp-0x1c],0x1
6401b1ba:	je     0x6401b1dd
6401b1bc:	push   0x64025a48
6401b1c1:	call   DWORD PTR ds:0x64024124
6401b1c7:	cmp    eax,edi
6401b1c9:	je     0x6401b1dd
6401b1cb:	push   0x64025a20
6401b1d0:	push   eax
6401b1d1:	call   DWORD PTR ds:0x64024014
6401b1d7:	mov    esi,eax
6401b1d9:	cmp    esi,edi
6401b1db:	jne    0x6401b1e2
6401b1dd:	mov    esi,0x6401b168
6401b1e2:	push   esi
6401b1e3:	call   0x64014378
6401b1e8:	pop    ecx
6401b1e9:	mov    ds:0x6402df68,eax
6401b1ee:	mov    DWORD PTR [ebp-0x4],edi
6401b1f1:	push   DWORD PTR [ebp+0xc]
6401b1f4:	push   DWORD PTR [ebp+0x8]
6401b1f7:	call   esi
6401b1f9:	mov    DWORD PTR [ebp-0x20],eax
6401b1fc:	jmp    0x6401b22d
6401b1fe:	mov    eax,DWORD PTR [ebp-0x14]
6401b201:	mov    eax,DWORD PTR [eax]
6401b203:	mov    eax,DWORD PTR [eax]
6401b205:	mov    DWORD PTR [ebp-0x24],eax
6401b208:	xor    ecx,ecx
6401b20a:	cmp    eax,0xc0000017
6401b20f:	sete   cl
6401b212:	mov    eax,ecx
6401b214:	ret    
6401b215:	mov    esp,DWORD PTR [ebp-0x18]
6401b218:	cmp    DWORD PTR [ebp-0x24],0xc0000017
6401b21f:	jne    0x6401b229
6401b221:	push   0x8
6401b223:	call   DWORD PTR ds:0x6402405c
6401b229:	and    DWORD PTR [ebp-0x20],0x0
6401b22d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b234:	mov    eax,DWORD PTR [ebp-0x20]
6401b237:	call   0x64013b05
6401b23c:	ret    
6401b23d:	push   ebp
6401b23e:	mov    ebp,esp
6401b240:	push   ecx
6401b241:	push   ecx
6401b242:	mov    eax,ds:0x6402c09c
6401b247:	xor    eax,ebp
6401b249:	mov    DWORD PTR [ebp-0x4],eax
6401b24c:	mov    eax,ds:0x6402df6c
6401b251:	push   ebx
6401b252:	push   esi
6401b253:	xor    ebx,ebx
6401b255:	cmp    eax,ebx
6401b257:	push   edi
6401b258:	mov    edi,ecx
6401b25a:	jne    0x6401b296
6401b25c:	lea    eax,[ebp-0x8]
6401b25f:	push   eax
6401b260:	xor    esi,esi
6401b262:	inc    esi
6401b263:	push   esi
6401b264:	push   0x640265c0
6401b269:	push   esi
6401b26a:	call   DWORD PTR ds:0x640240bc
6401b270:	test   eax,eax
6401b272:	je     0x6401b27c
6401b274:	mov    DWORD PTR ds:0x6402df6c,esi
6401b27a:	jmp    0x6401b2b0
6401b27c:	call   DWORD PTR ds:0x64024044
6401b282:	cmp    eax,0x78
6401b285:	jne    0x6401b291
6401b287:	push   0x2
6401b289:	pop    eax
6401b28a:	mov    ds:0x6402df6c,eax
6401b28f:	jmp    0x6401b296
6401b291:	mov    eax,ds:0x6402df6c
6401b296:	cmp    eax,0x2
6401b299:	je     0x6401b36e
6401b29f:	cmp    eax,ebx
6401b2a1:	je     0x6401b36e
6401b2a7:	cmp    eax,0x1
6401b2aa:	jne    0x6401b398
6401b2b0:	cmp    DWORD PTR [ebp+0x18],ebx
6401b2b3:	mov    DWORD PTR [ebp-0x8],ebx
6401b2b6:	jne    0x6401b2c0
6401b2b8:	mov    eax,DWORD PTR [edi]
6401b2ba:	mov    eax,DWORD PTR [eax+0x4]
6401b2bd:	mov    DWORD PTR [ebp+0x18],eax
6401b2c0:	mov    esi,DWORD PTR ds:0x64024024
6401b2c6:	xor    eax,eax
6401b2c8:	cmp    DWORD PTR [ebp+0x20],ebx
6401b2cb:	push   ebx
6401b2cc:	push   ebx
6401b2cd:	push   DWORD PTR [ebp+0x10]
6401b2d0:	setne  al
6401b2d3:	push   DWORD PTR [ebp+0xc]
6401b2d6:	lea    eax,[eax*8+0x1]
6401b2dd:	push   eax
6401b2de:	push   DWORD PTR [ebp+0x18]
6401b2e1:	call   esi
6401b2e3:	mov    edi,eax
6401b2e5:	cmp    edi,ebx
6401b2e7:	je     0x6401b398
6401b2ed:	jle    0x6401b32b
6401b2ef:	cmp    edi,0x7ffffff0
6401b2f5:	ja     0x6401b32b
6401b2f7:	lea    eax,[edi+edi*1+0x8]
6401b2fb:	cmp    eax,0x400
6401b300:	ja     0x6401b315
6401b302:	call   0x64012c80
6401b307:	mov    eax,esp
6401b309:	cmp    eax,ebx
6401b30b:	je     0x6401b329
6401b30d:	mov    DWORD PTR [eax],0xcccc
6401b313:	jmp    0x6401b326
6401b315:	push   eax
6401b316:	call   0x64013473
6401b31b:	cmp    eax,ebx
6401b31d:	pop    ecx
6401b31e:	je     0x6401b329
6401b320:	mov    DWORD PTR [eax],0xdddd
6401b326:	add    eax,0x8
6401b329:	mov    ebx,eax
6401b32b:	test   ebx,ebx
6401b32d:	je     0x6401b398
6401b32f:	lea    eax,[edi+edi*1]
6401b332:	push   eax
6401b333:	push   0x0
6401b335:	push   ebx
6401b336:	call   0x64012c00
6401b33b:	add    esp,0xc
6401b33e:	push   edi
6401b33f:	push   ebx
6401b340:	push   DWORD PTR [ebp+0x10]
6401b343:	push   DWORD PTR [ebp+0xc]
6401b346:	push   0x1
6401b348:	push   DWORD PTR [ebp+0x18]
6401b34b:	call   esi
6401b34d:	test   eax,eax
6401b34f:	je     0x6401b362
6401b351:	push   DWORD PTR [ebp+0x14]
6401b354:	push   eax
6401b355:	push   ebx
6401b356:	push   DWORD PTR [ebp+0x8]
6401b359:	call   DWORD PTR ds:0x640240bc
6401b35f:	mov    DWORD PTR [ebp-0x8],eax
6401b362:	push   ebx
6401b363:	call   0x64012a12
6401b368:	mov    eax,DWORD PTR [ebp-0x8]
6401b36b:	pop    ecx
6401b36c:	jmp    0x6401b3e3
6401b36e:	xor    esi,esi
6401b370:	cmp    DWORD PTR [ebp+0x1c],ebx
6401b373:	jne    0x6401b37d
6401b375:	mov    eax,DWORD PTR [edi]
6401b377:	mov    eax,DWORD PTR [eax+0x14]
6401b37a:	mov    DWORD PTR [ebp+0x1c],eax
6401b37d:	cmp    DWORD PTR [ebp+0x18],ebx
6401b380:	jne    0x6401b38a
6401b382:	mov    eax,DWORD PTR [edi]
6401b384:	mov    eax,DWORD PTR [eax+0x4]
6401b387:	mov    DWORD PTR [ebp+0x18],eax
6401b38a:	push   DWORD PTR [ebp+0x1c]
6401b38d:	call   0x6401d062
6401b392:	cmp    eax,0xffffffff
6401b395:	pop    ecx
6401b396:	jne    0x6401b39c
6401b398:	xor    eax,eax
6401b39a:	jmp    0x6401b3e3
6401b39c:	cmp    eax,DWORD PTR [ebp+0x18]
6401b39f:	je     0x6401b3bf
6401b3a1:	push   ebx
6401b3a2:	push   ebx
6401b3a3:	lea    ecx,[ebp+0x10]
6401b3a6:	push   ecx
6401b3a7:	push   DWORD PTR [ebp+0xc]
6401b3aa:	push   eax
6401b3ab:	push   DWORD PTR [ebp+0x18]
6401b3ae:	call   0x6401d0a9
6401b3b3:	mov    esi,eax
6401b3b5:	add    esp,0x18
6401b3b8:	cmp    esi,ebx
6401b3ba:	je     0x6401b398
6401b3bc:	mov    DWORD PTR [ebp+0xc],esi
6401b3bf:	push   DWORD PTR [ebp+0x14]
6401b3c2:	push   DWORD PTR [ebp+0x10]
6401b3c5:	push   DWORD PTR [ebp+0xc]
6401b3c8:	push   DWORD PTR [ebp+0x8]
6401b3cb:	push   DWORD PTR [ebp+0x1c]
6401b3ce:	call   DWORD PTR ds:0x640240c0
6401b3d4:	cmp    esi,ebx
6401b3d6:	mov    edi,eax
6401b3d8:	je     0x6401b3e1
6401b3da:	push   esi
6401b3db:	call   0x64013396
6401b3e0:	pop    ecx
6401b3e1:	mov    eax,edi
6401b3e3:	lea    esp,[ebp-0x14]
6401b3e6:	pop    edi
6401b3e7:	pop    esi
6401b3e8:	pop    ebx
6401b3e9:	mov    ecx,DWORD PTR [ebp-0x4]
6401b3ec:	xor    ecx,ebp
6401b3ee:	call   0x6401257c
6401b3f3:	leave  
6401b3f4:	ret    
6401b3f5:	push   ebp
6401b3f6:	mov    ebp,esp
6401b3f8:	sub    esp,0x10
6401b3fb:	push   DWORD PTR [ebp+0x8]
6401b3fe:	lea    ecx,[ebp-0x10]
6401b401:	call   0x6401271f
6401b406:	push   DWORD PTR [ebp+0x24]
6401b409:	lea    ecx,[ebp-0x10]
6401b40c:	push   DWORD PTR [ebp+0x20]
6401b40f:	push   DWORD PTR [ebp+0x1c]
6401b412:	push   DWORD PTR [ebp+0x18]
6401b415:	push   DWORD PTR [ebp+0x14]
6401b418:	push   DWORD PTR [ebp+0x10]
6401b41b:	push   DWORD PTR [ebp+0xc]
6401b41e:	call   0x6401b23d
6401b423:	add    esp,0x1c
6401b426:	cmp    BYTE PTR [ebp-0x4],0x0
6401b42a:	je     0x6401b433
6401b42c:	mov    ecx,DWORD PTR [ebp-0x8]
6401b42f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401b433:	leave  
6401b434:	ret    
6401b435:	push   esi
6401b436:	mov    esi,DWORD PTR [esp+0x8]
6401b43a:	test   esi,esi
6401b43c:	je     0x6401b5c3
6401b442:	push   DWORD PTR [esi+0x4]
6401b445:	call   0x64013396
6401b44a:	push   DWORD PTR [esi+0x8]
6401b44d:	call   0x64013396
6401b452:	push   DWORD PTR [esi+0xc]
6401b455:	call   0x64013396
6401b45a:	push   DWORD PTR [esi+0x10]
6401b45d:	call   0x64013396
6401b462:	push   DWORD PTR [esi+0x14]
6401b465:	call   0x64013396
6401b46a:	push   DWORD PTR [esi+0x18]
6401b46d:	call   0x64013396
6401b472:	push   DWORD PTR [esi]
6401b474:	call   0x64013396
6401b479:	push   DWORD PTR [esi+0x20]
6401b47c:	call   0x64013396
6401b481:	push   DWORD PTR [esi+0x24]
6401b484:	call   0x64013396
6401b489:	push   DWORD PTR [esi+0x28]
6401b48c:	call   0x64013396
6401b491:	push   DWORD PTR [esi+0x2c]
6401b494:	call   0x64013396
6401b499:	push   DWORD PTR [esi+0x30]
6401b49c:	call   0x64013396
6401b4a1:	push   DWORD PTR [esi+0x34]
6401b4a4:	call   0x64013396
6401b4a9:	push   DWORD PTR [esi+0x1c]
6401b4ac:	call   0x64013396
6401b4b1:	push   DWORD PTR [esi+0x38]
6401b4b4:	call   0x64013396
6401b4b9:	push   DWORD PTR [esi+0x3c]
6401b4bc:	call   0x64013396
6401b4c1:	add    esp,0x40
6401b4c4:	push   DWORD PTR [esi+0x40]
6401b4c7:	call   0x64013396
6401b4cc:	push   DWORD PTR [esi+0x44]
6401b4cf:	call   0x64013396
6401b4d4:	push   DWORD PTR [esi+0x48]
6401b4d7:	call   0x64013396
6401b4dc:	push   DWORD PTR [esi+0x4c]
6401b4df:	call   0x64013396
6401b4e4:	push   DWORD PTR [esi+0x50]
6401b4e7:	call   0x64013396
6401b4ec:	push   DWORD PTR [esi+0x54]
6401b4ef:	call   0x64013396
6401b4f4:	push   DWORD PTR [esi+0x58]
6401b4f7:	call   0x64013396
6401b4fc:	push   DWORD PTR [esi+0x5c]
6401b4ff:	call   0x64013396
6401b504:	push   DWORD PTR [esi+0x60]
6401b507:	call   0x64013396
6401b50c:	push   DWORD PTR [esi+0x64]
6401b50f:	call   0x64013396
6401b514:	push   DWORD PTR [esi+0x68]
6401b517:	call   0x64013396
6401b51c:	push   DWORD PTR [esi+0x6c]
6401b51f:	call   0x64013396
6401b524:	push   DWORD PTR [esi+0x70]
6401b527:	call   0x64013396
6401b52c:	push   DWORD PTR [esi+0x74]
6401b52f:	call   0x64013396
6401b534:	push   DWORD PTR [esi+0x78]
6401b537:	call   0x64013396
6401b53c:	push   DWORD PTR [esi+0x7c]
6401b53f:	call   0x64013396
6401b544:	add    esp,0x40
6401b547:	push   DWORD PTR [esi+0x80]
6401b54d:	call   0x64013396
6401b552:	push   DWORD PTR [esi+0x84]
6401b558:	call   0x64013396
6401b55d:	push   DWORD PTR [esi+0x88]
6401b563:	call   0x64013396
6401b568:	push   DWORD PTR [esi+0x8c]
6401b56e:	call   0x64013396
6401b573:	push   DWORD PTR [esi+0x90]
6401b579:	call   0x64013396
6401b57e:	push   DWORD PTR [esi+0x94]
6401b584:	call   0x64013396
6401b589:	push   DWORD PTR [esi+0x98]
6401b58f:	call   0x64013396
6401b594:	push   DWORD PTR [esi+0x9c]
6401b59a:	call   0x64013396
6401b59f:	push   DWORD PTR [esi+0xa0]
6401b5a5:	call   0x64013396
6401b5aa:	push   DWORD PTR [esi+0xa4]
6401b5b0:	call   0x64013396
6401b5b5:	push   DWORD PTR [esi+0xa8]
6401b5bb:	call   0x64013396
6401b5c0:	add    esp,0x2c
6401b5c3:	pop    esi
6401b5c4:	ret    
6401b5c5:	push   esi
6401b5c6:	mov    esi,DWORD PTR [esp+0x8]
6401b5ca:	test   esi,esi
6401b5cc:	je     0x6401b603
6401b5ce:	mov    eax,DWORD PTR [esi]
6401b5d0:	cmp    eax,DWORD PTR ds:0x6402cc38
6401b5d6:	je     0x6401b5df
6401b5d8:	push   eax
6401b5d9:	call   0x64013396
6401b5de:	pop    ecx
6401b5df:	mov    eax,DWORD PTR [esi+0x4]
6401b5e2:	cmp    eax,DWORD PTR ds:0x6402cc3c
6401b5e8:	je     0x6401b5f1
6401b5ea:	push   eax
6401b5eb:	call   0x64013396
6401b5f0:	pop    ecx
6401b5f1:	mov    esi,DWORD PTR [esi+0x8]
6401b5f4:	cmp    esi,DWORD PTR ds:0x6402cc40
6401b5fa:	je     0x6401b603
6401b5fc:	push   esi
6401b5fd:	call   0x64013396
6401b602:	pop    ecx
6401b603:	pop    esi
6401b604:	ret    
6401b605:	push   esi
6401b606:	mov    esi,DWORD PTR [esp+0x8]
6401b60a:	test   esi,esi
6401b60c:	je     0x6401b68c
6401b60e:	mov    eax,DWORD PTR [esi+0xc]
6401b611:	cmp    eax,DWORD PTR ds:0x6402cc44
6401b617:	je     0x6401b620
6401b619:	push   eax
6401b61a:	call   0x64013396
6401b61f:	pop    ecx
6401b620:	mov    eax,DWORD PTR [esi+0x10]
6401b623:	cmp    eax,DWORD PTR ds:0x6402cc48
6401b629:	je     0x6401b632
6401b62b:	push   eax
6401b62c:	call   0x64013396
6401b631:	pop    ecx
6401b632:	mov    eax,DWORD PTR [esi+0x14]
6401b635:	cmp    eax,DWORD PTR ds:0x6402cc4c
6401b63b:	je     0x6401b644
6401b63d:	push   eax
6401b63e:	call   0x64013396
6401b643:	pop    ecx
6401b644:	mov    eax,DWORD PTR [esi+0x18]
6401b647:	cmp    eax,DWORD PTR ds:0x6402cc50
6401b64d:	je     0x6401b656
6401b64f:	push   eax
6401b650:	call   0x64013396
6401b655:	pop    ecx
6401b656:	mov    eax,DWORD PTR [esi+0x1c]
6401b659:	cmp    eax,DWORD PTR ds:0x6402cc54
6401b65f:	je     0x6401b668
6401b661:	push   eax
6401b662:	call   0x64013396
6401b667:	pop    ecx
6401b668:	mov    eax,DWORD PTR [esi+0x20]
6401b66b:	cmp    eax,DWORD PTR ds:0x6402cc58
6401b671:	je     0x6401b67a
6401b673:	push   eax
6401b674:	call   0x64013396
6401b679:	pop    ecx
6401b67a:	mov    esi,DWORD PTR [esi+0x24]
6401b67d:	cmp    esi,DWORD PTR ds:0x6402cc5c
6401b683:	je     0x6401b68c
6401b685:	push   esi
6401b686:	call   0x64013396
6401b68b:	pop    ecx
6401b68c:	pop    esi
6401b68d:	ret    
6401b68e:	mov    eax,DWORD PTR [esp+0x4]
6401b692:	push   ebx
6401b693:	xor    ebx,ebx
6401b695:	cmp    eax,ebx
6401b697:	push   esi
6401b698:	push   edi
6401b699:	je     0x6401b6a3
6401b69b:	mov    edi,DWORD PTR [esp+0x14]
6401b69f:	cmp    edi,ebx
6401b6a1:	ja     0x6401b6be
6401b6a3:	call   0x640142c0
6401b6a8:	push   0x16
6401b6aa:	pop    esi
6401b6ab:	mov    DWORD PTR [eax],esi
6401b6ad:	push   ebx
6401b6ae:	push   ebx
6401b6af:	push   ebx
6401b6b0:	push   ebx
6401b6b1:	push   ebx
6401b6b2:	call   0x640120b4
6401b6b7:	add    esp,0x14
6401b6ba:	mov    eax,esi
6401b6bc:	jmp    0x6401b6fb
6401b6be:	mov    esi,DWORD PTR [esp+0x18]
6401b6c2:	cmp    esi,ebx
6401b6c4:	jne    0x6401b6ca
6401b6c6:	mov    BYTE PTR [eax],bl
6401b6c8:	jmp    0x6401b6a3
6401b6ca:	mov    edx,eax
6401b6cc:	cmp    BYTE PTR [edx],bl
6401b6ce:	je     0x6401b6d4
6401b6d0:	inc    edx
6401b6d1:	dec    edi
6401b6d2:	jne    0x6401b6cc
6401b6d4:	cmp    edi,ebx
6401b6d6:	je     0x6401b6c6
6401b6d8:	mov    cl,BYTE PTR [esi]
6401b6da:	mov    BYTE PTR [edx],cl
6401b6dc:	inc    edx
6401b6dd:	inc    esi
6401b6de:	cmp    cl,bl
6401b6e0:	je     0x6401b6e5
6401b6e2:	dec    edi
6401b6e3:	jne    0x6401b6d8
6401b6e5:	cmp    edi,ebx
6401b6e7:	jne    0x6401b6f9
6401b6e9:	mov    BYTE PTR [eax],bl
6401b6eb:	call   0x640142c0
6401b6f0:	push   0x22
6401b6f2:	pop    ecx
6401b6f3:	mov    DWORD PTR [eax],ecx
6401b6f5:	mov    esi,ecx
6401b6f7:	jmp    0x6401b6ad
6401b6f9:	xor    eax,eax
6401b6fb:	pop    edi
6401b6fc:	pop    esi
6401b6fd:	pop    ebx
6401b6fe:	ret    
6401b6ff:	int3   
6401b700:	push   ebp
6401b701:	mov    ebp,esp
6401b703:	push   esi
6401b704:	xor    eax,eax
6401b706:	push   eax
6401b707:	push   eax
6401b708:	push   eax
6401b709:	push   eax
6401b70a:	push   eax
6401b70b:	push   eax
6401b70c:	push   eax
6401b70d:	push   eax
6401b70e:	mov    edx,DWORD PTR [ebp+0xc]
6401b711:	lea    ecx,[ecx+0x0]
6401b714:	mov    al,BYTE PTR [edx]
6401b716:	or     al,al
6401b718:	je     0x6401b723
6401b71a:	add    edx,0x1
6401b71d:	bts    DWORD PTR [esp],eax
6401b721:	jmp    0x6401b714
6401b723:	mov    esi,DWORD PTR [ebp+0x8]
6401b726:	or     ecx,0xffffffff
6401b729:	lea    ecx,[ecx+0x0]
6401b72c:	add    ecx,0x1
6401b72f:	mov    al,BYTE PTR [esi]
6401b731:	or     al,al
6401b733:	je     0x6401b73e
6401b735:	add    esi,0x1
6401b738:	bt     DWORD PTR [esp],eax
6401b73c:	jae    0x6401b72c
6401b73e:	mov    eax,ecx
6401b740:	add    esp,0x20
6401b743:	pop    esi
6401b744:	leave  
6401b745:	ret    
6401b746:	push   ebp
6401b747:	mov    ebp,esp
6401b749:	push   ebx
6401b74a:	push   esi
6401b74b:	mov    esi,DWORD PTR [ebp+0x8]
6401b74e:	xor    ebx,ebx
6401b750:	cmp    DWORD PTR [ebp+0x14],ebx
6401b753:	push   edi
6401b754:	jne    0x6401b766
6401b756:	cmp    esi,ebx
6401b758:	jne    0x6401b76a
6401b75a:	cmp    DWORD PTR [ebp+0xc],ebx
6401b75d:	jne    0x6401b771
6401b75f:	xor    eax,eax
6401b761:	pop    edi
6401b762:	pop    esi
6401b763:	pop    ebx
6401b764:	pop    ebp
6401b765:	ret    
6401b766:	cmp    esi,ebx
6401b768:	je     0x6401b771
6401b76a:	mov    edi,DWORD PTR [ebp+0xc]
6401b76d:	cmp    edi,ebx
6401b76f:	ja     0x6401b78c
6401b771:	call   0x640142c0
6401b776:	push   0x16
6401b778:	pop    esi
6401b779:	mov    DWORD PTR [eax],esi
6401b77b:	push   ebx
6401b77c:	push   ebx
6401b77d:	push   ebx
6401b77e:	push   ebx
6401b77f:	push   ebx
6401b780:	call   0x640120b4
6401b785:	add    esp,0x14
6401b788:	mov    eax,esi
6401b78a:	jmp    0x6401b761
6401b78c:	cmp    DWORD PTR [ebp+0x14],ebx
6401b78f:	jne    0x6401b795
6401b791:	mov    BYTE PTR [esi],bl
6401b793:	jmp    0x6401b75f
6401b795:	mov    edx,DWORD PTR [ebp+0x10]
6401b798:	cmp    edx,ebx
6401b79a:	jne    0x6401b7a0
6401b79c:	mov    BYTE PTR [esi],bl
6401b79e:	jmp    0x6401b771
6401b7a0:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401b7a4:	mov    eax,esi
6401b7a6:	jne    0x6401b7b7
6401b7a8:	mov    cl,BYTE PTR [edx]
6401b7aa:	mov    BYTE PTR [eax],cl
6401b7ac:	inc    eax
6401b7ad:	inc    edx
6401b7ae:	cmp    cl,bl
6401b7b0:	je     0x6401b7d0
6401b7b2:	dec    edi
6401b7b3:	jne    0x6401b7a8
6401b7b5:	jmp    0x6401b7d0
6401b7b7:	mov    cl,BYTE PTR [edx]
6401b7b9:	mov    BYTE PTR [eax],cl
6401b7bb:	inc    eax
6401b7bc:	inc    edx
6401b7bd:	cmp    cl,bl
6401b7bf:	je     0x6401b7c9
6401b7c1:	dec    edi
6401b7c2:	je     0x6401b7c9
6401b7c4:	dec    DWORD PTR [ebp+0x14]
6401b7c7:	jne    0x6401b7b7
6401b7c9:	cmp    DWORD PTR [ebp+0x14],ebx
6401b7cc:	jne    0x6401b7d0
6401b7ce:	mov    BYTE PTR [eax],bl
6401b7d0:	cmp    edi,ebx
6401b7d2:	jne    0x6401b75f
6401b7d4:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401b7d8:	jne    0x6401b7e9
6401b7da:	mov    eax,DWORD PTR [ebp+0xc]
6401b7dd:	push   0x50
6401b7df:	mov    BYTE PTR [esi+eax*1-0x1],bl
6401b7e3:	pop    eax
6401b7e4:	jmp    0x6401b761
6401b7e9:	mov    BYTE PTR [esi],bl
6401b7eb:	call   0x640142c0
6401b7f0:	push   0x22
6401b7f2:	pop    ecx
6401b7f3:	mov    DWORD PTR [eax],ecx
6401b7f5:	mov    esi,ecx
6401b7f7:	jmp    0x6401b77b
6401b7f9:	int3   
6401b7fa:	int3   
6401b7fb:	int3   
6401b7fc:	int3   
6401b7fd:	int3   
6401b7fe:	int3   
6401b7ff:	int3   
6401b800:	push   ebp
6401b801:	mov    ebp,esp
6401b803:	push   esi
6401b804:	xor    eax,eax
6401b806:	push   eax
6401b807:	push   eax
6401b808:	push   eax
6401b809:	push   eax
6401b80a:	push   eax
6401b80b:	push   eax
6401b80c:	push   eax
6401b80d:	push   eax
6401b80e:	mov    edx,DWORD PTR [ebp+0xc]
6401b811:	lea    ecx,[ecx+0x0]
6401b814:	mov    al,BYTE PTR [edx]
6401b816:	or     al,al
6401b818:	je     0x6401b823
6401b81a:	add    edx,0x1
6401b81d:	bts    DWORD PTR [esp],eax
6401b821:	jmp    0x6401b814
6401b823:	mov    esi,DWORD PTR [ebp+0x8]
6401b826:	mov    edi,edi
6401b828:	mov    al,BYTE PTR [esi]
6401b82a:	or     al,al
6401b82c:	je     0x6401b83a
6401b82e:	add    esi,0x1
6401b831:	bt     DWORD PTR [esp],eax
6401b835:	jae    0x6401b828
6401b837:	lea    eax,[esi-0x1]
6401b83a:	add    esp,0x20
6401b83d:	pop    esi
6401b83e:	leave  
6401b83f:	ret    
6401b840:	push   ebp
6401b841:	mov    ebp,esp
6401b843:	push   ecx
6401b844:	push   ecx
6401b845:	mov    eax,DWORD PTR [ebp+0xc]
6401b848:	push   esi
6401b849:	mov    esi,DWORD PTR [ebp+0x8]
6401b84c:	mov    DWORD PTR [ebp-0x8],eax
6401b84f:	mov    eax,DWORD PTR [ebp+0x10]
6401b852:	push   edi
6401b853:	push   esi
6401b854:	mov    DWORD PTR [ebp-0x4],eax
6401b857:	call   0x6401d7cf
6401b85c:	or     edi,0xffffffff
6401b85f:	cmp    eax,edi
6401b861:	pop    ecx
6401b862:	jne    0x6401b875
6401b864:	call   0x640142c0
6401b869:	mov    DWORD PTR [eax],0x9
6401b86f:	mov    eax,edi
6401b871:	mov    edx,edi
6401b873:	jmp    0x6401b8bf
6401b875:	push   DWORD PTR [ebp+0x14]
6401b878:	lea    ecx,[ebp-0x4]
6401b87b:	push   ecx
6401b87c:	push   DWORD PTR [ebp-0x8]
6401b87f:	push   eax
6401b880:	call   DWORD PTR ds:0x640240d4
6401b886:	cmp    eax,edi
6401b888:	mov    DWORD PTR [ebp-0x8],eax
6401b88b:	jne    0x6401b8a0
6401b88d:	call   DWORD PTR ds:0x64024044
6401b893:	test   eax,eax
6401b895:	je     0x6401b8a0
6401b897:	push   eax
6401b898:	call   0x640142e6
6401b89d:	pop    ecx
6401b89e:	jmp    0x6401b86f
6401b8a0:	mov    eax,esi
6401b8a2:	sar    eax,0x5
6401b8a5:	mov    eax,DWORD PTR [eax*4+0x64031460]
6401b8ac:	and    esi,0x1f
6401b8af:	shl    esi,0x6
6401b8b2:	lea    eax,[eax+esi*1+0x4]
6401b8b6:	and    BYTE PTR [eax],0xfd
6401b8b9:	mov    eax,DWORD PTR [ebp-0x8]
6401b8bc:	mov    edx,DWORD PTR [ebp-0x4]
6401b8bf:	pop    edi
6401b8c0:	pop    esi
6401b8c1:	leave  
6401b8c2:	ret    
6401b8c3:	push   0x14
6401b8c5:	push   0x64029a90
6401b8ca:	call   0x64013ac0
6401b8cf:	or     esi,0xffffffff
6401b8d2:	mov    DWORD PTR [ebp-0x24],esi
6401b8d5:	mov    DWORD PTR [ebp-0x20],esi
6401b8d8:	mov    eax,DWORD PTR [ebp+0x8]
6401b8db:	cmp    eax,0xfffffffe
6401b8de:	jne    0x6401b8fc
6401b8e0:	call   0x640142d3
6401b8e5:	and    DWORD PTR [eax],0x0
6401b8e8:	call   0x640142c0
6401b8ed:	mov    DWORD PTR [eax],0x9
6401b8f3:	mov    eax,esi
6401b8f5:	mov    edx,esi
6401b8f7:	jmp    0x6401b9cc
6401b8fc:	xor    edi,edi
6401b8fe:	cmp    eax,edi
6401b900:	jl     0x6401b90a
6401b902:	cmp    eax,DWORD PTR ds:0x64031440
6401b908:	jb     0x6401b92b
6401b90a:	call   0x640142d3
6401b90f:	mov    DWORD PTR [eax],edi
6401b911:	call   0x640142c0
6401b916:	mov    DWORD PTR [eax],0x9
6401b91c:	push   edi
6401b91d:	push   edi
6401b91e:	push   edi
6401b91f:	push   edi
6401b920:	push   edi
6401b921:	call   0x640120b4
6401b926:	add    esp,0x14
6401b929:	jmp    0x6401b8f3
6401b92b:	mov    ecx,eax
6401b92d:	sar    ecx,0x5
6401b930:	lea    ebx,[ecx*4+0x64031460]
6401b937:	mov    esi,eax
6401b939:	and    esi,0x1f
6401b93c:	shl    esi,0x6
6401b93f:	mov    ecx,DWORD PTR [ebx]
6401b941:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401b946:	and    ecx,0x1
6401b949:	jne    0x6401b971
6401b94b:	call   0x640142d3
6401b950:	mov    DWORD PTR [eax],edi
6401b952:	call   0x640142c0
6401b957:	mov    DWORD PTR [eax],0x9
6401b95d:	push   edi
6401b95e:	push   edi
6401b95f:	push   edi
6401b960:	push   edi
6401b961:	push   edi
6401b962:	call   0x640120b4
6401b967:	add    esp,0x14
6401b96a:	or     edx,0xffffffff
6401b96d:	mov    eax,edx
6401b96f:	jmp    0x6401b9cc
6401b971:	push   eax
6401b972:	call   0x6401d840
6401b977:	pop    ecx
6401b978:	mov    DWORD PTR [ebp-0x4],edi
6401b97b:	mov    eax,DWORD PTR [ebx]
6401b97d:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401b982:	je     0x6401b9a0
6401b984:	push   DWORD PTR [ebp+0x14]
6401b987:	push   DWORD PTR [ebp+0x10]
6401b98a:	push   DWORD PTR [ebp+0xc]
6401b98d:	push   DWORD PTR [ebp+0x8]
6401b990:	call   0x6401b840
6401b995:	add    esp,0x10
6401b998:	mov    DWORD PTR [ebp-0x24],eax
6401b99b:	mov    DWORD PTR [ebp-0x20],edx
6401b99e:	jmp    0x6401b9ba
6401b9a0:	call   0x640142c0
6401b9a5:	mov    DWORD PTR [eax],0x9
6401b9ab:	call   0x640142d3
6401b9b0:	mov    DWORD PTR [eax],edi
6401b9b2:	or     DWORD PTR [ebp-0x24],0xffffffff
6401b9b6:	or     DWORD PTR [ebp-0x20],0xffffffff
6401b9ba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b9c1:	call   0x6401b9d2
6401b9c6:	mov    eax,DWORD PTR [ebp-0x24]
6401b9c9:	mov    edx,DWORD PTR [ebp-0x20]
6401b9cc:	call   0x64013b05
6401b9d1:	ret    
6401b9d2:	push   DWORD PTR [ebp+0x8]
6401b9d5:	call   0x6401d8e0
6401b9da:	pop    ecx
6401b9db:	ret    
6401b9dc:	push   ebp
6401b9dd:	lea    ebp,[esp-0x514]
6401b9e4:	sub    esp,0x590
6401b9ea:	mov    eax,ds:0x6402c09c
6401b9ef:	xor    eax,ebp
6401b9f1:	mov    DWORD PTR [ebp+0x510],eax
6401b9f7:	mov    eax,DWORD PTR [ebp+0x520]
6401b9fd:	push   esi
6401b9fe:	xor    esi,esi
6401ba00:	cmp    DWORD PTR [ebp+0x524],esi
6401ba06:	mov    DWORD PTR [ebp-0x64],eax
6401ba09:	mov    DWORD PTR [ebp-0x60],esi
6401ba0c:	mov    DWORD PTR [ebp-0x68],esi
6401ba0f:	jne    0x6401ba18
6401ba11:	xor    eax,eax
6401ba13:	jmp    0x6401bfe8
6401ba18:	cmp    eax,esi
6401ba1a:	jne    0x6401ba43
6401ba1c:	call   0x640142d3
6401ba21:	mov    DWORD PTR [eax],esi
6401ba23:	call   0x640142c0
6401ba28:	push   esi
6401ba29:	push   esi
6401ba2a:	push   esi
6401ba2b:	push   esi
6401ba2c:	push   esi
6401ba2d:	mov    DWORD PTR [eax],0x16
6401ba33:	call   0x640120b4
6401ba38:	add    esp,0x14
6401ba3b:	or     eax,0xffffffff
6401ba3e:	jmp    0x6401bfe8
6401ba43:	push   ebx
6401ba44:	push   edi
6401ba45:	mov    edi,DWORD PTR [ebp+0x51c]
6401ba4b:	mov    eax,edi
6401ba4d:	sar    eax,0x5
6401ba50:	lea    esi,[eax*4+0x64031460]
6401ba57:	mov    eax,DWORD PTR [esi]
6401ba59:	and    edi,0x1f
6401ba5c:	shl    edi,0x6
6401ba5f:	add    eax,edi
6401ba61:	mov    bl,BYTE PTR [eax+0x24]
6401ba64:	add    bl,bl
6401ba66:	sar    bl,1
6401ba68:	cmp    bl,0x2
6401ba6b:	mov    DWORD PTR [ebp-0x70],esi
6401ba6e:	mov    BYTE PTR [ebp-0x71],bl
6401ba71:	je     0x6401ba78
6401ba73:	cmp    bl,0x1
6401ba76:	jne    0x6401baab
6401ba78:	mov    ecx,DWORD PTR [ebp+0x524]
6401ba7e:	not    ecx
6401ba80:	test   cl,0x1
6401ba83:	jne    0x6401baab
6401ba85:	call   0x640142d3
6401ba8a:	xor    esi,esi
6401ba8c:	mov    DWORD PTR [eax],esi
6401ba8e:	call   0x640142c0
6401ba93:	push   esi
6401ba94:	push   esi
6401ba95:	push   esi
6401ba96:	push   esi
6401ba97:	push   esi
6401ba98:	mov    DWORD PTR [eax],0x16
6401ba9e:	call   0x640120b4
6401baa3:	add    esp,0x14
6401baa6:	jmp    0x6401bfdb
6401baab:	test   BYTE PTR [eax+0x4],0x20
6401baaf:	je     0x6401bac5
6401bab1:	push   0x2
6401bab3:	push   0x0
6401bab5:	push   0x0
6401bab7:	push   DWORD PTR [ebp+0x51c]
6401babd:	call   0x6401b840
6401bac2:	add    esp,0x10
6401bac5:	push   DWORD PTR [ebp+0x51c]
6401bacb:	call   0x6401c11e
6401bad0:	test   eax,eax
6401bad2:	pop    ecx
6401bad3:	je     0x6401bd12
6401bad9:	mov    eax,DWORD PTR [esi]
6401badb:	test   BYTE PTR [edi+eax*1+0x4],0x80
6401bae0:	je     0x6401bd12
6401bae6:	call   0x6401460b
6401baeb:	mov    eax,DWORD PTR [eax+0x6c]
6401baee:	xor    ecx,ecx
6401baf0:	cmp    DWORD PTR [eax+0x14],ecx
6401baf3:	lea    eax,[ebp-0x7c]
6401baf6:	sete   cl
6401baf9:	push   eax
6401bafa:	mov    eax,DWORD PTR [esi]
6401bafc:	push   DWORD PTR [edi+eax*1]
6401baff:	mov    DWORD PTR [ebp-0x78],ecx
6401bb02:	call   DWORD PTR ds:0x640240cc
6401bb08:	test   eax,eax
6401bb0a:	je     0x6401bd12
6401bb10:	xor    ecx,ecx
6401bb12:	cmp    DWORD PTR [ebp-0x78],ecx
6401bb15:	je     0x6401bb1f
6401bb17:	test   bl,bl
6401bb19:	je     0x6401bd14
6401bb1f:	call   DWORD PTR ds:0x640240d0
6401bb25:	mov    ebx,DWORD PTR [ebp-0x64]
6401bb28:	mov    DWORD PTR [ebp-0x7c],eax
6401bb2b:	xor    eax,eax
6401bb2d:	cmp    DWORD PTR [ebp+0x524],eax
6401bb33:	mov    DWORD PTR [ebp-0x5c],eax
6401bb36:	jbe    0x6401bf83
6401bb3c:	mov    DWORD PTR [ebp-0x54],eax
6401bb3f:	mov    al,BYTE PTR [ebp-0x71]
6401bb42:	test   al,al
6401bb44:	jne    0x6401bc87
6401bb4a:	mov    cl,BYTE PTR [ebx]
6401bb4c:	mov    esi,DWORD PTR [ebp-0x70]
6401bb4f:	xor    eax,eax
6401bb51:	cmp    cl,0xa
6401bb54:	sete   al
6401bb57:	mov    DWORD PTR [ebp-0x78],eax
6401bb5a:	mov    eax,DWORD PTR [esi]
6401bb5c:	add    eax,edi
6401bb5e:	cmp    DWORD PTR [eax+0x38],0x0
6401bb62:	je     0x6401bb82
6401bb64:	mov    dl,BYTE PTR [eax+0x34]
6401bb67:	mov    BYTE PTR [ebp+0x508],dl
6401bb6d:	mov    BYTE PTR [ebp+0x509],cl
6401bb73:	and    DWORD PTR [eax+0x38],0x0
6401bb77:	push   0x2
6401bb79:	lea    eax,[ebp+0x508]
6401bb7f:	push   eax
6401bb80:	jmp    0x6401bbc7
6401bb82:	movsx  eax,cl
6401bb85:	push   eax
6401bb86:	call   0x64019941
6401bb8b:	test   eax,eax
6401bb8d:	pop    ecx
6401bb8e:	je     0x6401bbc4
6401bb90:	mov    ecx,DWORD PTR [ebp-0x64]
6401bb93:	sub    ecx,ebx
6401bb95:	add    ecx,DWORD PTR [ebp+0x524]
6401bb9b:	xor    eax,eax
6401bb9d:	inc    eax
6401bb9e:	cmp    ecx,eax
6401bba0:	jbe    0x6401bcfc
6401bba6:	push   0x2
6401bba8:	lea    eax,[ebp-0x58]
6401bbab:	push   ebx
6401bbac:	push   eax
6401bbad:	call   0x6401c651
6401bbb2:	add    esp,0xc
6401bbb5:	cmp    eax,0xffffffff
6401bbb8:	je     0x6401bf7d
6401bbbe:	inc    ebx
6401bbbf:	inc    DWORD PTR [ebp-0x54]
6401bbc2:	jmp    0x6401bbdc
6401bbc4:	push   0x1
6401bbc6:	push   ebx
6401bbc7:	lea    eax,[ebp-0x58]
6401bbca:	push   eax
6401bbcb:	call   0x6401c651
6401bbd0:	add    esp,0xc
6401bbd3:	cmp    eax,0xffffffff
6401bbd6:	je     0x6401bf7d
6401bbdc:	xor    eax,eax
6401bbde:	push   eax
6401bbdf:	push   eax
6401bbe0:	push   0x5
6401bbe2:	lea    ecx,[ebp+0x508]
6401bbe8:	push   ecx
6401bbe9:	push   0x1
6401bbeb:	lea    ecx,[ebp-0x58]
6401bbee:	push   ecx
6401bbef:	push   eax
6401bbf0:	push   DWORD PTR [ebp-0x7c]
6401bbf3:	inc    ebx
6401bbf4:	inc    DWORD PTR [ebp-0x54]
6401bbf7:	call   DWORD PTR ds:0x64024028
6401bbfd:	mov    esi,eax
6401bbff:	test   esi,esi
6401bc01:	je     0x6401bf7d
6401bc07:	push   0x0
6401bc09:	lea    eax,[ebp-0x5c]
6401bc0c:	push   eax
6401bc0d:	push   esi
6401bc0e:	lea    eax,[ebp+0x508]
6401bc14:	push   eax
6401bc15:	mov    eax,DWORD PTR [ebp-0x70]
6401bc18:	mov    eax,DWORD PTR [eax]
6401bc1a:	push   DWORD PTR [edi+eax*1]
6401bc1d:	call   DWORD PTR ds:0x64024084
6401bc23:	test   eax,eax
6401bc25:	je     0x6401bf74
6401bc2b:	mov    eax,DWORD PTR [ebp-0x54]
6401bc2e:	mov    ecx,DWORD PTR [ebp-0x68]
6401bc31:	add    eax,ecx
6401bc33:	cmp    DWORD PTR [ebp-0x5c],esi
6401bc36:	mov    DWORD PTR [ebp-0x60],eax
6401bc39:	jl     0x6401bf7d
6401bc3f:	cmp    DWORD PTR [ebp-0x78],0x0
6401bc43:	je     0x6401bce8
6401bc49:	push   0x0
6401bc4b:	lea    eax,[ebp-0x5c]
6401bc4e:	push   eax
6401bc4f:	push   0x1
6401bc51:	lea    eax,[ebp+0x508]
6401bc57:	push   eax
6401bc58:	mov    eax,DWORD PTR [ebp-0x70]
6401bc5b:	mov    eax,DWORD PTR [eax]
6401bc5d:	mov    BYTE PTR [ebp+0x508],0xd
6401bc64:	push   DWORD PTR [edi+eax*1]
6401bc67:	call   DWORD PTR ds:0x64024084
6401bc6d:	test   eax,eax
6401bc6f:	je     0x6401bf74
6401bc75:	cmp    DWORD PTR [ebp-0x5c],0x1
6401bc79:	jl     0x6401bf7d
6401bc7f:	inc    DWORD PTR [ebp-0x68]
6401bc82:	inc    DWORD PTR [ebp-0x60]
6401bc85:	jmp    0x6401bce8
6401bc87:	cmp    al,0x1
6401bc89:	je     0x6401bc8f
6401bc8b:	cmp    al,0x2
6401bc8d:	jne    0x6401bca7
6401bc8f:	movzx  esi,WORD PTR [ebx]
6401bc92:	xor    ecx,ecx
6401bc94:	cmp    si,0xa
6401bc98:	sete   cl
6401bc9b:	inc    ebx
6401bc9c:	inc    ebx
6401bc9d:	add    DWORD PTR [ebp-0x54],0x2
6401bca1:	mov    DWORD PTR [ebp-0x58],esi
6401bca4:	mov    DWORD PTR [ebp-0x78],ecx
6401bca7:	cmp    al,0x1
6401bca9:	je     0x6401bcaf
6401bcab:	cmp    al,0x2
6401bcad:	jne    0x6401bce8
6401bcaf:	push   DWORD PTR [ebp-0x58]
6401bcb2:	call   0x6401d902
6401bcb7:	cmp    ax,WORD PTR [ebp-0x58]
6401bcbb:	pop    ecx
6401bcbc:	jne    0x6401bf74
6401bcc2:	inc    DWORD PTR [ebp-0x60]
6401bcc5:	cmp    DWORD PTR [ebp-0x78],0x0
6401bcc9:	je     0x6401bce8
6401bccb:	push   0xd
6401bccd:	pop    eax
6401bcce:	push   eax
6401bccf:	mov    DWORD PTR [ebp-0x58],eax
6401bcd2:	call   0x6401d902
6401bcd7:	cmp    ax,WORD PTR [ebp-0x58]
6401bcdb:	pop    ecx
6401bcdc:	jne    0x6401bf74
6401bce2:	inc    DWORD PTR [ebp-0x60]
6401bce5:	inc    DWORD PTR [ebp-0x68]
6401bce8:	mov    eax,DWORD PTR [ebp+0x524]
6401bcee:	cmp    DWORD PTR [ebp-0x54],eax
6401bcf1:	jb     0x6401bb3f
6401bcf7:	jmp    0x6401bf7d
6401bcfc:	mov    ecx,DWORD PTR [esi]
6401bcfe:	mov    dl,BYTE PTR [ebx]
6401bd00:	inc    DWORD PTR [ebp-0x60]
6401bd03:	mov    BYTE PTR [edi+ecx*1+0x34],dl
6401bd07:	mov    ecx,DWORD PTR [esi]
6401bd09:	mov    DWORD PTR [edi+ecx*1+0x38],eax
6401bd0d:	jmp    0x6401bf7d
6401bd12:	xor    ecx,ecx
6401bd14:	mov    eax,DWORD PTR [esi]
6401bd16:	add    eax,edi
6401bd18:	test   BYTE PTR [eax+0x4],0x80
6401bd1c:	je     0x6401bf4d
6401bd22:	test   bl,bl
6401bd24:	mov    eax,DWORD PTR [ebp-0x64]
6401bd27:	mov    DWORD PTR [ebp-0x58],ecx
6401bd2a:	jne    0x6401bdc6
6401bd30:	cmp    DWORD PTR [ebp+0x524],ecx
6401bd36:	mov    DWORD PTR [ebp-0x5c],eax
6401bd39:	jbe    0x6401bfb3
6401bd3f:	jmp    0x6401bd44
6401bd41:	mov    esi,DWORD PTR [ebp-0x70]
6401bd44:	mov    ecx,DWORD PTR [ebp-0x5c]
6401bd47:	and    DWORD PTR [ebp-0x54],0x0
6401bd4b:	sub    ecx,DWORD PTR [ebp-0x64]
6401bd4e:	lea    eax,[ebp-0x50]
6401bd51:	cmp    ecx,DWORD PTR [ebp+0x524]
6401bd57:	jae    0x6401bd80
6401bd59:	mov    edx,DWORD PTR [ebp-0x5c]
6401bd5c:	inc    DWORD PTR [ebp-0x5c]
6401bd5f:	mov    dl,BYTE PTR [edx]
6401bd61:	inc    ecx
6401bd62:	cmp    dl,0xa
6401bd65:	jne    0x6401bd71
6401bd67:	inc    DWORD PTR [ebp-0x68]
6401bd6a:	mov    BYTE PTR [eax],0xd
6401bd6d:	inc    eax
6401bd6e:	inc    DWORD PTR [ebp-0x54]
6401bd71:	mov    BYTE PTR [eax],dl
6401bd73:	inc    eax
6401bd74:	inc    DWORD PTR [ebp-0x54]
6401bd77:	cmp    DWORD PTR [ebp-0x54],0x400
6401bd7e:	jb     0x6401bd51
6401bd80:	mov    ebx,eax
6401bd82:	lea    eax,[ebp-0x50]
6401bd85:	sub    ebx,eax
6401bd87:	push   0x0
6401bd89:	lea    eax,[ebp-0x6c]
6401bd8c:	push   eax
6401bd8d:	push   ebx
6401bd8e:	lea    eax,[ebp-0x50]
6401bd91:	push   eax
6401bd92:	mov    eax,DWORD PTR [esi]
6401bd94:	push   DWORD PTR [edi+eax*1]
6401bd97:	call   DWORD PTR ds:0x64024084
6401bd9d:	test   eax,eax
6401bd9f:	je     0x6401bf74
6401bda5:	mov    eax,DWORD PTR [ebp-0x6c]
6401bda8:	add    DWORD PTR [ebp-0x60],eax
6401bdab:	cmp    eax,ebx
6401bdad:	jl     0x6401bf7d
6401bdb3:	mov    eax,DWORD PTR [ebp-0x5c]
6401bdb6:	sub    eax,DWORD PTR [ebp-0x64]
6401bdb9:	cmp    eax,DWORD PTR [ebp+0x524]
6401bdbf:	jb     0x6401bd41
6401bdc1:	jmp    0x6401bf7d
6401bdc6:	cmp    bl,0x2
6401bdc9:	mov    DWORD PTR [ebp-0x54],eax
6401bdcc:	jne    0x6401be75
6401bdd2:	cmp    DWORD PTR [ebp+0x524],ecx
6401bdd8:	jbe    0x6401bfb3
6401bdde:	jmp    0x6401bde3
6401bde0:	mov    esi,DWORD PTR [ebp-0x70]
6401bde3:	mov    ecx,DWORD PTR [ebp-0x54]
6401bde6:	and    DWORD PTR [ebp-0x5c],0x0
6401bdea:	sub    ecx,DWORD PTR [ebp-0x64]
6401bded:	lea    eax,[ebp-0x50]
6401bdf0:	cmp    ecx,DWORD PTR [ebp+0x524]
6401bdf6:	jae    0x6401be2b
6401bdf8:	mov    edx,DWORD PTR [ebp-0x54]
6401bdfb:	add    DWORD PTR [ebp-0x54],0x2
6401bdff:	movzx  edx,WORD PTR [edx]
6401be02:	inc    ecx
6401be03:	inc    ecx
6401be04:	cmp    dx,0xa
6401be08:	jne    0x6401be19
6401be0a:	add    DWORD PTR [ebp-0x68],0x2
6401be0e:	mov    WORD PTR [eax],0xd
6401be13:	inc    eax
6401be14:	inc    eax
6401be15:	add    DWORD PTR [ebp-0x5c],0x2
6401be19:	add    DWORD PTR [ebp-0x5c],0x2
6401be1d:	mov    WORD PTR [eax],dx
6401be20:	inc    eax
6401be21:	inc    eax
6401be22:	cmp    DWORD PTR [ebp-0x5c],0x3ff
6401be29:	jb     0x6401bdf0
6401be2b:	mov    ebx,eax
6401be2d:	lea    eax,[ebp-0x50]
6401be30:	sub    ebx,eax
6401be32:	push   0x0
6401be34:	lea    eax,[ebp-0x6c]
6401be37:	push   eax
6401be38:	push   ebx
6401be39:	lea    eax,[ebp-0x50]
6401be3c:	push   eax
6401be3d:	mov    eax,DWORD PTR [esi]
6401be3f:	push   DWORD PTR [edi+eax*1]
6401be42:	call   DWORD PTR ds:0x64024084
6401be48:	test   eax,eax
6401be4a:	je     0x6401bf74
6401be50:	mov    eax,DWORD PTR [ebp-0x6c]
6401be53:	add    DWORD PTR [ebp-0x60],eax
6401be56:	cmp    eax,ebx
6401be58:	jl     0x6401bf7d
6401be5e:	mov    eax,DWORD PTR [ebp-0x54]
6401be61:	sub    eax,DWORD PTR [ebp-0x64]
6401be64:	cmp    eax,DWORD PTR [ebp+0x524]
6401be6a:	jb     0x6401bde0
6401be70:	jmp    0x6401bf7d
6401be75:	cmp    DWORD PTR [ebp+0x524],ecx
6401be7b:	jbe    0x6401bfb3
6401be81:	mov    ecx,DWORD PTR [ebp-0x54]
6401be84:	and    DWORD PTR [ebp-0x5c],0x0
6401be88:	sub    ecx,DWORD PTR [ebp-0x64]
6401be8b:	push   0x2
6401be8d:	lea    eax,[ebp+0x3b4]
6401be93:	pop    esi
6401be94:	cmp    ecx,DWORD PTR [ebp+0x524]
6401be9a:	jae    0x6401bec8
6401be9c:	mov    edx,DWORD PTR [ebp-0x54]
6401be9f:	movzx  edx,WORD PTR [edx]
6401bea2:	add    DWORD PTR [ebp-0x54],esi
6401bea5:	add    ecx,esi
6401bea7:	cmp    dx,0xa
6401beab:	jne    0x6401beb7
6401bead:	mov    WORD PTR [eax],0xd
6401beb2:	add    eax,esi
6401beb4:	add    DWORD PTR [ebp-0x5c],esi
6401beb7:	add    DWORD PTR [ebp-0x5c],esi
6401beba:	mov    WORD PTR [eax],dx
6401bebd:	add    eax,esi
6401bebf:	cmp    DWORD PTR [ebp-0x5c],0x152
6401bec6:	jb     0x6401be94
6401bec8:	xor    esi,esi
6401beca:	push   esi
6401becb:	push   esi
6401becc:	push   0x2ab
6401bed1:	lea    ecx,[ebp+0x104]
6401bed7:	push   ecx
6401bed8:	lea    ecx,[ebp+0x3b4]
6401bede:	sub    eax,ecx
6401bee0:	cdq    
6401bee1:	sub    eax,edx
6401bee3:	sar    eax,1
6401bee5:	push   eax
6401bee6:	mov    eax,ecx
6401bee8:	push   eax
6401bee9:	push   esi
6401beea:	push   0xfde9
6401beef:	call   DWORD PTR ds:0x64024028
6401bef5:	mov    ebx,eax
6401bef7:	cmp    ebx,esi
6401bef9:	je     0x6401bf74
6401befb:	push   0x0
6401befd:	lea    eax,[ebp-0x6c]
6401bf00:	push   eax
6401bf01:	mov    eax,ebx
6401bf03:	sub    eax,esi
6401bf05:	push   eax
6401bf06:	lea    eax,[ebp+esi*1+0x104]
6401bf0d:	push   eax
6401bf0e:	mov    eax,DWORD PTR [ebp-0x70]
6401bf11:	mov    eax,DWORD PTR [eax]
6401bf13:	push   DWORD PTR [edi+eax*1]
6401bf16:	call   DWORD PTR ds:0x64024084
6401bf1c:	test   eax,eax
6401bf1e:	je     0x6401bf29
6401bf20:	add    esi,DWORD PTR [ebp-0x6c]
6401bf23:	cmp    ebx,esi
6401bf25:	jg     0x6401befb
6401bf27:	jmp    0x6401bf32
6401bf29:	call   DWORD PTR ds:0x64024044
6401bf2f:	mov    DWORD PTR [ebp-0x58],eax
6401bf32:	cmp    ebx,esi
6401bf34:	jg     0x6401bf7d
6401bf36:	mov    eax,DWORD PTR [ebp-0x54]
6401bf39:	sub    eax,DWORD PTR [ebp-0x64]
6401bf3c:	cmp    eax,DWORD PTR [ebp+0x524]
6401bf42:	mov    DWORD PTR [ebp-0x60],eax
6401bf45:	jb     0x6401be81
6401bf4b:	jmp    0x6401bf7d
6401bf4d:	push   0x0
6401bf4f:	lea    ecx,[ebp-0x6c]
6401bf52:	push   ecx
6401bf53:	push   DWORD PTR [ebp+0x524]
6401bf59:	push   DWORD PTR [ebp-0x64]
6401bf5c:	push   DWORD PTR [eax]
6401bf5e:	call   DWORD PTR ds:0x64024084
6401bf64:	test   eax,eax
6401bf66:	je     0x6401bf74
6401bf68:	mov    eax,DWORD PTR [ebp-0x6c]
6401bf6b:	and    DWORD PTR [ebp-0x58],0x0
6401bf6f:	mov    DWORD PTR [ebp-0x60],eax
6401bf72:	jmp    0x6401bf7d
6401bf74:	call   DWORD PTR ds:0x64024044
6401bf7a:	mov    DWORD PTR [ebp-0x58],eax
6401bf7d:	cmp    DWORD PTR [ebp-0x60],0x0
6401bf81:	jne    0x6401bfe0
6401bf83:	cmp    DWORD PTR [ebp-0x58],0x0
6401bf87:	je     0x6401bfb0
6401bf89:	push   0x5
6401bf8b:	pop    esi
6401bf8c:	cmp    DWORD PTR [ebp-0x58],esi
6401bf8f:	jne    0x6401bfa5
6401bf91:	call   0x640142c0
6401bf96:	mov    DWORD PTR [eax],0x9
6401bf9c:	call   0x640142d3
6401bfa1:	mov    DWORD PTR [eax],esi
6401bfa3:	jmp    0x6401bfdb
6401bfa5:	push   DWORD PTR [ebp-0x58]
6401bfa8:	call   0x640142e6
6401bfad:	pop    ecx
6401bfae:	jmp    0x6401bfdb
6401bfb0:	mov    esi,DWORD PTR [ebp-0x70]
6401bfb3:	mov    eax,DWORD PTR [esi]
6401bfb5:	test   BYTE PTR [edi+eax*1+0x4],0x40
6401bfba:	je     0x6401bfc8
6401bfbc:	mov    eax,DWORD PTR [ebp-0x64]
6401bfbf:	cmp    BYTE PTR [eax],0x1a
6401bfc2:	jne    0x6401bfc8
6401bfc4:	xor    eax,eax
6401bfc6:	jmp    0x6401bfe6
6401bfc8:	call   0x640142c0
6401bfcd:	mov    DWORD PTR [eax],0x1c
6401bfd3:	call   0x640142d3
6401bfd8:	and    DWORD PTR [eax],0x0
6401bfdb:	or     eax,0xffffffff
6401bfde:	jmp    0x6401bfe6
6401bfe0:	mov    eax,DWORD PTR [ebp-0x60]
6401bfe3:	sub    eax,DWORD PTR [ebp-0x68]
6401bfe6:	pop    edi
6401bfe7:	pop    ebx
6401bfe8:	mov    ecx,DWORD PTR [ebp+0x510]
6401bfee:	xor    ecx,ebp
6401bff0:	pop    esi
6401bff1:	call   0x6401257c
6401bff6:	add    ebp,0x514
6401bffc:	leave  
6401bffd:	ret    
6401bffe:	push   0x10
6401c000:	push   0x64029ab0
6401c005:	call   0x64013ac0
6401c00a:	mov    eax,DWORD PTR [ebp+0x8]
6401c00d:	cmp    eax,0xfffffffe
6401c010:	jne    0x6401c02d
6401c012:	call   0x640142d3
6401c017:	and    DWORD PTR [eax],0x0
6401c01a:	call   0x640142c0
6401c01f:	mov    DWORD PTR [eax],0x9
6401c025:	or     eax,0xffffffff
6401c028:	jmp    0x6401c0ca
6401c02d:	xor    edi,edi
6401c02f:	cmp    eax,edi
6401c031:	jl     0x6401c03b
6401c033:	cmp    eax,DWORD PTR ds:0x64031440
6401c039:	jb     0x6401c05c
6401c03b:	call   0x640142d3
6401c040:	mov    DWORD PTR [eax],edi
6401c042:	call   0x640142c0
6401c047:	mov    DWORD PTR [eax],0x9
6401c04d:	push   edi
6401c04e:	push   edi
6401c04f:	push   edi
6401c050:	push   edi
6401c051:	push   edi
6401c052:	call   0x640120b4
6401c057:	add    esp,0x14
6401c05a:	jmp    0x6401c025
6401c05c:	mov    ecx,eax
6401c05e:	sar    ecx,0x5
6401c061:	lea    ebx,[ecx*4+0x64031460]
6401c068:	mov    esi,eax
6401c06a:	and    esi,0x1f
6401c06d:	shl    esi,0x6
6401c070:	mov    ecx,DWORD PTR [ebx]
6401c072:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401c077:	and    ecx,0x1
6401c07a:	je     0x6401c03b
6401c07c:	push   eax
6401c07d:	call   0x6401d840
6401c082:	pop    ecx
6401c083:	mov    DWORD PTR [ebp-0x4],edi
6401c086:	mov    eax,DWORD PTR [ebx]
6401c088:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401c08d:	je     0x6401c0a5
6401c08f:	push   DWORD PTR [ebp+0x10]
6401c092:	push   DWORD PTR [ebp+0xc]
6401c095:	push   DWORD PTR [ebp+0x8]
6401c098:	call   0x6401b9dc
6401c09d:	add    esp,0xc
6401c0a0:	mov    DWORD PTR [ebp-0x1c],eax
6401c0a3:	jmp    0x6401c0bb
6401c0a5:	call   0x640142c0
6401c0aa:	mov    DWORD PTR [eax],0x9
6401c0b0:	call   0x640142d3
6401c0b5:	mov    DWORD PTR [eax],edi
6401c0b7:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401c0bb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c0c2:	call   0x6401c0d0
6401c0c7:	mov    eax,DWORD PTR [ebp-0x1c]
6401c0ca:	call   0x64013b05
6401c0cf:	ret    
6401c0d0:	push   DWORD PTR [ebp+0x8]
6401c0d3:	call   0x6401d8e0
6401c0d8:	pop    ecx
6401c0d9:	ret    
6401c0da:	inc    DWORD PTR ds:0x6402df74
6401c0e0:	push   0x1000
6401c0e5:	call   0x640157d0
6401c0ea:	test   eax,eax
6401c0ec:	pop    ecx
6401c0ed:	mov    ecx,DWORD PTR [esp+0x4]
6401c0f1:	mov    DWORD PTR [ecx+0x8],eax
6401c0f4:	je     0x6401c103
6401c0f6:	or     DWORD PTR [ecx+0xc],0x8
6401c0fa:	mov    DWORD PTR [ecx+0x18],0x1000
6401c101:	jmp    0x6401c114
6401c103:	or     DWORD PTR [ecx+0xc],0x4
6401c107:	lea    eax,[ecx+0x14]
6401c10a:	mov    DWORD PTR [ecx+0x8],eax
6401c10d:	mov    DWORD PTR [ecx+0x18],0x2
6401c114:	mov    eax,DWORD PTR [ecx+0x8]
6401c117:	and    DWORD PTR [ecx+0x4],0x0
6401c11b:	mov    DWORD PTR [ecx],eax
6401c11d:	ret    
6401c11e:	mov    eax,DWORD PTR [esp+0x4]
6401c122:	cmp    eax,0xfffffffe
6401c125:	jne    0x6401c135
6401c127:	call   0x640142c0
6401c12c:	mov    DWORD PTR [eax],0x9
6401c132:	xor    eax,eax
6401c134:	ret    
6401c135:	push   esi
6401c136:	xor    esi,esi
6401c138:	cmp    eax,esi
6401c13a:	jl     0x6401c144
6401c13c:	cmp    eax,DWORD PTR ds:0x64031440
6401c142:	jb     0x6401c160
6401c144:	call   0x640142c0
6401c149:	push   esi
6401c14a:	push   esi
6401c14b:	push   esi
6401c14c:	push   esi
6401c14d:	push   esi
6401c14e:	mov    DWORD PTR [eax],0x9
6401c154:	call   0x640120b4
6401c159:	add    esp,0x14
6401c15c:	xor    eax,eax
6401c15e:	pop    esi
6401c15f:	ret    
6401c160:	mov    ecx,eax
6401c162:	and    eax,0x1f
6401c165:	sar    ecx,0x5
6401c168:	mov    ecx,DWORD PTR [ecx*4+0x64031460]
6401c16f:	shl    eax,0x6
6401c172:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
6401c177:	and    eax,0x40
6401c17a:	pop    esi
6401c17b:	ret    
6401c17c:	mov    eax,0x6402cc80
6401c181:	ret    
6401c182:	mov    eax,ds:0x64031420
6401c187:	test   eax,eax
6401c189:	push   esi
6401c18a:	push   0x14
6401c18c:	pop    esi
6401c18d:	jne    0x6401c196
6401c18f:	mov    eax,0x200
6401c194:	jmp    0x6401c19c
6401c196:	cmp    eax,esi
6401c198:	jge    0x6401c1a1
6401c19a:	mov    eax,esi
6401c19c:	mov    ds:0x64031420,eax
6401c1a1:	push   0x4
6401c1a3:	push   eax
6401c1a4:	call   0x64015810
6401c1a9:	test   eax,eax
6401c1ab:	pop    ecx
6401c1ac:	pop    ecx
6401c1ad:	mov    ds:0x64030400,eax
6401c1b2:	jne    0x6401c1d2
6401c1b4:	push   0x4
6401c1b6:	push   esi
6401c1b7:	mov    DWORD PTR ds:0x64031420,esi
6401c1bd:	call   0x64015810
6401c1c2:	test   eax,eax
6401c1c4:	pop    ecx
6401c1c5:	pop    ecx
6401c1c6:	mov    ds:0x64030400,eax
6401c1cb:	jne    0x6401c1d2
6401c1cd:	push   0x1a
6401c1cf:	pop    eax
6401c1d0:	pop    esi
6401c1d1:	ret    
6401c1d2:	xor    edx,edx
6401c1d4:	mov    ecx,0x6402cc80
6401c1d9:	jmp    0x6401c1e0
6401c1db:	mov    eax,ds:0x64030400
6401c1e0:	mov    DWORD PTR [edx+eax*1],ecx
6401c1e3:	add    ecx,0x20
6401c1e6:	add    edx,0x4
6401c1e9:	cmp    ecx,0x6402cf00
6401c1ef:	jl     0x6401c1db
6401c1f1:	push   0xfffffffe
6401c1f3:	pop    esi
6401c1f4:	xor    edx,edx
6401c1f6:	mov    ecx,0x6402cc90
6401c1fb:	push   edi
6401c1fc:	mov    eax,edx
6401c1fe:	sar    eax,0x5
6401c201:	mov    eax,DWORD PTR [eax*4+0x64031460]
6401c208:	mov    edi,edx
6401c20a:	and    edi,0x1f
6401c20d:	shl    edi,0x6
6401c210:	mov    eax,DWORD PTR [edi+eax*1]
6401c213:	cmp    eax,0xffffffff
6401c216:	je     0x6401c220
6401c218:	cmp    eax,esi
6401c21a:	je     0x6401c220
6401c21c:	test   eax,eax
6401c21e:	jne    0x6401c222
6401c220:	mov    DWORD PTR [ecx],esi
6401c222:	add    ecx,0x20
6401c225:	inc    edx
6401c226:	cmp    ecx,0x6402ccf0
6401c22c:	jl     0x6401c1fc
6401c22e:	pop    edi
6401c22f:	xor    eax,eax
6401c231:	pop    esi
6401c232:	ret    
6401c233:	call   0x6401dbe1
6401c238:	cmp    BYTE PTR ds:0x6402d92c,0x0
6401c23f:	je     0x6401c246
6401c241:	call   0x6401d9c4
6401c246:	push   DWORD PTR ds:0x64030400
6401c24c:	call   0x64013396
6401c251:	pop    ecx
6401c252:	ret    
6401c253:	push   esi
6401c254:	mov    esi,DWORD PTR [esp+0x8]
6401c258:	mov    eax,0x6402cc80
6401c25d:	cmp    esi,eax
6401c25f:	jb     0x6401c283
6401c261:	cmp    esi,0x6402cee0
6401c267:	ja     0x6401c283
6401c269:	mov    ecx,esi
6401c26b:	sub    ecx,eax
6401c26d:	sar    ecx,0x5
6401c270:	add    ecx,0x10
6401c273:	push   ecx
6401c274:	call   0x64019ac5
6401c279:	or     DWORD PTR [esi+0xc],0x8000
6401c280:	pop    ecx
6401c281:	pop    esi
6401c282:	ret    
6401c283:	add    esi,0x20
6401c286:	push   esi
6401c287:	call   DWORD PTR ds:0x6402409c
6401c28d:	pop    esi
6401c28e:	ret    
6401c28f:	mov    eax,DWORD PTR [esp+0x4]
6401c293:	cmp    eax,0x14
6401c296:	jge    0x6401c2ae
6401c298:	add    eax,0x10
6401c29b:	push   eax
6401c29c:	call   0x64019ac5
6401c2a1:	mov    eax,DWORD PTR [esp+0xc]
6401c2a5:	or     DWORD PTR [eax+0xc],0x8000
6401c2ac:	pop    ecx
6401c2ad:	ret    
6401c2ae:	mov    eax,DWORD PTR [esp+0x8]
6401c2b2:	add    eax,0x20
6401c2b5:	push   eax
6401c2b6:	call   DWORD PTR ds:0x6402409c
6401c2bc:	ret    
6401c2bd:	mov    eax,DWORD PTR [esp+0x4]
6401c2c1:	mov    ecx,0x6402cc80
6401c2c6:	cmp    eax,ecx
6401c2c8:	jb     0x6401c2e8
6401c2ca:	cmp    eax,0x6402cee0
6401c2cf:	ja     0x6401c2e8
6401c2d1:	and    DWORD PTR [eax+0xc],0xffff7fff
6401c2d8:	sub    eax,ecx
6401c2da:	sar    eax,0x5
6401c2dd:	add    eax,0x10
6401c2e0:	push   eax
6401c2e1:	call   0x640199ed
6401c2e6:	pop    ecx
6401c2e7:	ret    
6401c2e8:	add    eax,0x20
6401c2eb:	push   eax
6401c2ec:	call   DWORD PTR ds:0x640240a0
6401c2f2:	ret    
6401c2f3:	mov    ecx,DWORD PTR [esp+0x4]
6401c2f7:	cmp    ecx,0x14
6401c2fa:	mov    eax,DWORD PTR [esp+0x8]
6401c2fe:	jge    0x6401c312
6401c300:	and    DWORD PTR [eax+0xc],0xffff7fff
6401c307:	add    ecx,0x10
6401c30a:	push   ecx
6401c30b:	call   0x640199ed
6401c310:	pop    ecx
6401c311:	ret    
6401c312:	add    eax,0x20
6401c315:	push   eax
6401c316:	call   DWORD PTR ds:0x640240a0
6401c31c:	ret    
6401c31d:	mov    eax,DWORD PTR [esp+0x4]
6401c321:	push   esi
6401c322:	xor    esi,esi
6401c324:	cmp    eax,esi
6401c326:	jne    0x6401c345
6401c328:	call   0x640142c0
6401c32d:	push   esi
6401c32e:	push   esi
6401c32f:	push   esi
6401c330:	push   esi
6401c331:	push   esi
6401c332:	mov    DWORD PTR [eax],0x16
6401c338:	call   0x640120b4
6401c33d:	add    esp,0x14
6401c340:	or     eax,0xffffffff
6401c343:	pop    esi
6401c344:	ret    
6401c345:	mov    eax,DWORD PTR [eax+0x10]
6401c348:	pop    esi
6401c349:	ret    
6401c34a:	push   ebp
6401c34b:	mov    ebp,esp
6401c34d:	sub    esp,0x10
6401c350:	mov    eax,ds:0x6402c09c
6401c355:	xor    eax,ebp
6401c357:	mov    DWORD PTR [ebp-0x4],eax
6401c35a:	push   ebx
6401c35b:	push   esi
6401c35c:	mov    esi,DWORD PTR [ebp+0xc]
6401c35f:	test   BYTE PTR [esi+0xc],0x40
6401c363:	push   edi
6401c364:	jne    0x6401c4f9
6401c36a:	push   esi
6401c36b:	call   0x6401c31d
6401c370:	cmp    eax,0xffffffff
6401c373:	pop    ecx
6401c374:	mov    edi,0x6402c880
6401c379:	je     0x6401c3a9
6401c37b:	push   esi
6401c37c:	call   0x6401c31d
6401c381:	cmp    eax,0xfffffffe
6401c384:	pop    ecx
6401c385:	je     0x6401c3a9
6401c387:	push   esi
6401c388:	call   0x6401c31d
6401c38d:	sar    eax,0x5
6401c390:	push   esi
6401c391:	lea    ebx,[eax*4+0x64031460]
6401c398:	call   0x6401c31d
6401c39d:	and    eax,0x1f
6401c3a0:	pop    ecx
6401c3a1:	shl    eax,0x6
6401c3a4:	add    eax,DWORD PTR [ebx]
6401c3a6:	pop    ecx
6401c3a7:	jmp    0x6401c3ab
6401c3a9:	mov    eax,edi
6401c3ab:	mov    al,BYTE PTR [eax+0x24]
6401c3ae:	and    al,0x7f
6401c3b0:	cmp    al,0x2
6401c3b2:	je     0x6401c4f9
6401c3b8:	push   esi
6401c3b9:	call   0x6401c31d
6401c3be:	cmp    eax,0xffffffff
6401c3c1:	pop    ecx
6401c3c2:	je     0x6401c3f2
6401c3c4:	push   esi
6401c3c5:	call   0x6401c31d
6401c3ca:	cmp    eax,0xfffffffe
6401c3cd:	pop    ecx
6401c3ce:	je     0x6401c3f2
6401c3d0:	push   esi
6401c3d1:	call   0x6401c31d
6401c3d6:	sar    eax,0x5
6401c3d9:	push   esi
6401c3da:	lea    ebx,[eax*4+0x64031460]
6401c3e1:	call   0x6401c31d
6401c3e6:	and    eax,0x1f
6401c3e9:	pop    ecx
6401c3ea:	shl    eax,0x6
6401c3ed:	add    eax,DWORD PTR [ebx]
6401c3ef:	pop    ecx
6401c3f0:	jmp    0x6401c3f4
6401c3f2:	mov    eax,edi
6401c3f4:	mov    al,BYTE PTR [eax+0x24]
6401c3f7:	and    al,0x7f
6401c3f9:	cmp    al,0x1
6401c3fb:	jne    0x6401c459
6401c3fd:	dec    DWORD PTR [esi+0x4]
6401c400:	mov    ebx,DWORD PTR [ebp+0x8]
6401c403:	js     0x6401c413
6401c405:	mov    eax,DWORD PTR [esi]
6401c407:	mov    BYTE PTR [eax],bl
6401c409:	mov    ecx,DWORD PTR [esi]
6401c40b:	movzx  eax,BYTE PTR [ecx]
6401c40e:	inc    ecx
6401c40f:	mov    DWORD PTR [esi],ecx
6401c411:	jmp    0x6401c41f
6401c413:	movsx  eax,bl
6401c416:	push   esi
6401c417:	push   eax
6401c418:	call   0x64016605
6401c41d:	pop    ecx
6401c41e:	pop    ecx
6401c41f:	cmp    eax,0xffffffff
6401c422:	jne    0x6401c42d
6401c424:	or     ax,0xffff
6401c428:	jmp    0x6401c519
6401c42d:	dec    DWORD PTR [esi+0x4]
6401c430:	js     0x6401c440
6401c432:	mov    eax,DWORD PTR [esi]
6401c434:	mov    BYTE PTR [eax],bh
6401c436:	mov    ecx,DWORD PTR [esi]
6401c438:	movzx  eax,BYTE PTR [ecx]
6401c43b:	inc    ecx
6401c43c:	mov    DWORD PTR [esi],ecx
6401c43e:	jmp    0x6401c44c
6401c440:	movsx  eax,bh
6401c443:	push   esi
6401c444:	push   eax
6401c445:	call   0x64016605
6401c44a:	pop    ecx
6401c44b:	pop    ecx
6401c44c:	cmp    eax,0xffffffff
6401c44f:	je     0x6401c424
6401c451:	mov    ax,bx
6401c454:	jmp    0x6401c519
6401c459:	push   esi
6401c45a:	call   0x6401c31d
6401c45f:	cmp    eax,0xffffffff
6401c462:	pop    ecx
6401c463:	je     0x6401c493
6401c465:	push   esi
6401c466:	call   0x6401c31d
6401c46b:	cmp    eax,0xfffffffe
6401c46e:	pop    ecx
6401c46f:	je     0x6401c493
6401c471:	push   esi
6401c472:	call   0x6401c31d
6401c477:	sar    eax,0x5
6401c47a:	push   esi
6401c47b:	lea    ebx,[eax*4+0x64031460]
6401c482:	call   0x6401c31d
6401c487:	and    eax,0x1f
6401c48a:	pop    ecx
6401c48b:	shl    eax,0x6
6401c48e:	add    eax,DWORD PTR [ebx]
6401c490:	pop    ecx
6401c491:	jmp    0x6401c495
6401c493:	mov    eax,edi
6401c495:	test   BYTE PTR [eax+0x4],0x80
6401c499:	je     0x6401c4f9
6401c49b:	push   DWORD PTR [ebp+0x8]
6401c49e:	lea    eax,[ebp-0xc]
6401c4a1:	push   0x5
6401c4a3:	push   eax
6401c4a4:	lea    eax,[ebp-0x10]
6401c4a7:	push   eax
6401c4a8:	call   0x6401d4db
6401c4ad:	add    esp,0x10
6401c4b0:	test   eax,eax
6401c4b2:	jne    0x6401c424
6401c4b8:	xor    ebx,ebx
6401c4ba:	cmp    DWORD PTR [ebp-0x10],ebx
6401c4bd:	jle    0x6401c4f3
6401c4bf:	dec    DWORD PTR [esi+0x4]
6401c4c2:	js     0x6401c4d6
6401c4c4:	mov    eax,DWORD PTR [esi]
6401c4c6:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
6401c4ca:	mov    BYTE PTR [eax],cl
6401c4cc:	mov    ecx,DWORD PTR [esi]
6401c4ce:	movzx  eax,BYTE PTR [ecx]
6401c4d1:	inc    ecx
6401c4d2:	mov    DWORD PTR [esi],ecx
6401c4d4:	jmp    0x6401c4e4
6401c4d6:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
6401c4db:	push   esi
6401c4dc:	push   eax
6401c4dd:	call   0x64016605
6401c4e2:	pop    ecx
6401c4e3:	pop    ecx
6401c4e4:	cmp    eax,0xffffffff
6401c4e7:	je     0x6401c424
6401c4ed:	inc    ebx
6401c4ee:	cmp    ebx,DWORD PTR [ebp-0x10]
6401c4f1:	jl     0x6401c4bf
6401c4f3:	mov    ax,WORD PTR [ebp+0x8]
6401c4f7:	jmp    0x6401c519
6401c4f9:	add    DWORD PTR [esi+0x4],0xfffffffe
6401c4fd:	js     0x6401c50c
6401c4ff:	mov    ecx,DWORD PTR [esi]
6401c501:	mov    eax,DWORD PTR [ebp+0x8]
6401c504:	mov    WORD PTR [ecx],ax
6401c507:	add    DWORD PTR [esi],0x2
6401c50a:	jmp    0x6401c519
6401c50c:	movzx  eax,WORD PTR [ebp+0x8]
6401c510:	push   esi
6401c511:	push   eax
6401c512:	call   0x6401dbea
6401c517:	pop    ecx
6401c518:	pop    ecx
6401c519:	mov    ecx,DWORD PTR [ebp-0x4]
6401c51c:	pop    edi
6401c51d:	pop    esi
6401c51e:	xor    ecx,ebp
6401c520:	pop    ebx
6401c521:	call   0x6401257c
6401c526:	leave  
6401c527:	ret    
6401c528:	mov    eax,ds:0x6402c09c
6401c52d:	or     eax,0x1
6401c530:	xor    ecx,ecx
6401c532:	cmp    DWORD PTR ds:0x6402df78,eax
6401c538:	sete   cl
6401c53b:	mov    eax,ecx
6401c53d:	ret    
6401c53e:	push   ebp
6401c53f:	mov    ebp,esp
6401c541:	sub    esp,0x10
6401c544:	push   ebx
6401c545:	push   esi
6401c546:	mov    esi,DWORD PTR [ebp+0xc]
6401c549:	xor    ebx,ebx
6401c54b:	cmp    esi,ebx
6401c54d:	je     0x6401c562
6401c54f:	cmp    DWORD PTR [ebp+0x10],ebx
6401c552:	je     0x6401c562
6401c554:	cmp    BYTE PTR [esi],bl
6401c556:	jne    0x6401c568
6401c558:	mov    eax,DWORD PTR [ebp+0x8]
6401c55b:	cmp    eax,ebx
6401c55d:	je     0x6401c562
6401c55f:	mov    WORD PTR [eax],bx
6401c562:	xor    eax,eax
6401c564:	pop    esi
6401c565:	pop    ebx
6401c566:	leave  
6401c567:	ret    
6401c568:	push   DWORD PTR [ebp+0x14]
6401c56b:	lea    ecx,[ebp-0x10]
6401c56e:	call   0x6401271f
6401c573:	mov    eax,DWORD PTR [ebp-0x10]
6401c576:	cmp    DWORD PTR [eax+0x14],ebx
6401c579:	jne    0x6401c59a
6401c57b:	mov    eax,DWORD PTR [ebp+0x8]
6401c57e:	cmp    eax,ebx
6401c580:	je     0x6401c589
6401c582:	movzx  cx,BYTE PTR [esi]
6401c586:	mov    WORD PTR [eax],cx
6401c589:	cmp    BYTE PTR [ebp-0x4],bl
6401c58c:	je     0x6401c595
6401c58e:	mov    eax,DWORD PTR [ebp-0x8]
6401c591:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c595:	xor    eax,eax
6401c597:	inc    eax
6401c598:	jmp    0x6401c564
6401c59a:	lea    eax,[ebp-0x10]
6401c59d:	push   eax
6401c59e:	movzx  eax,BYTE PTR [esi]
6401c5a1:	push   eax
6401c5a2:	call   0x6401990b
6401c5a7:	test   eax,eax
6401c5a9:	pop    ecx
6401c5aa:	pop    ecx
6401c5ab:	je     0x6401c62a
6401c5ad:	mov    eax,DWORD PTR [ebp-0x10]
6401c5b0:	mov    ecx,DWORD PTR [eax+0xac]
6401c5b6:	cmp    ecx,0x1
6401c5b9:	jle    0x6401c5e0
6401c5bb:	cmp    DWORD PTR [ebp+0x10],ecx
6401c5be:	jl     0x6401c5e0
6401c5c0:	xor    edx,edx
6401c5c2:	cmp    DWORD PTR [ebp+0x8],ebx
6401c5c5:	setne  dl
6401c5c8:	push   edx
6401c5c9:	push   DWORD PTR [ebp+0x8]
6401c5cc:	push   ecx
6401c5cd:	push   esi
6401c5ce:	push   0x9
6401c5d0:	push   DWORD PTR [eax+0x4]
6401c5d3:	call   DWORD PTR ds:0x64024024
6401c5d9:	test   eax,eax
6401c5db:	mov    eax,DWORD PTR [ebp-0x10]
6401c5de:	jne    0x6401c5f0
6401c5e0:	mov    ecx,DWORD PTR [ebp+0x10]
6401c5e3:	cmp    ecx,DWORD PTR [eax+0xac]
6401c5e9:	jb     0x6401c60b
6401c5eb:	cmp    BYTE PTR [esi+0x1],bl
6401c5ee:	je     0x6401c60b
6401c5f0:	cmp    BYTE PTR [ebp-0x4],bl
6401c5f3:	mov    eax,DWORD PTR [eax+0xac]
6401c5f9:	je     0x6401c564
6401c5ff:	mov    ecx,DWORD PTR [ebp-0x8]
6401c602:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401c606:	jmp    0x6401c564
6401c60b:	call   0x640142c0
6401c610:	mov    DWORD PTR [eax],0x2a
6401c616:	cmp    BYTE PTR [ebp-0x4],bl
6401c619:	je     0x6401c622
6401c61b:	mov    eax,DWORD PTR [ebp-0x8]
6401c61e:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c622:	or     eax,0xffffffff
6401c625:	jmp    0x6401c564
6401c62a:	xor    eax,eax
6401c62c:	cmp    DWORD PTR [ebp+0x8],ebx
6401c62f:	setne  al
6401c632:	push   eax
6401c633:	push   DWORD PTR [ebp+0x8]
6401c636:	mov    eax,DWORD PTR [ebp-0x10]
6401c639:	push   0x1
6401c63b:	push   esi
6401c63c:	push   0x9
6401c63e:	push   DWORD PTR [eax+0x4]
6401c641:	call   DWORD PTR ds:0x64024024
6401c647:	test   eax,eax
6401c649:	jne    0x6401c589
6401c64f:	jmp    0x6401c60b
6401c651:	push   0x0
6401c653:	push   DWORD PTR [esp+0x10]
6401c657:	push   DWORD PTR [esp+0x10]
6401c65b:	push   DWORD PTR [esp+0x10]
6401c65f:	call   0x6401c53e
6401c664:	add    esp,0x10
6401c667:	ret    
6401c668:	test   BYTE PTR [edi+0xc],0x40
6401c66c:	push   ebx
6401c66d:	push   esi
6401c66e:	mov    esi,eax
6401c670:	mov    ebx,ecx
6401c672:	je     0x6401c6a8
6401c674:	cmp    DWORD PTR [edi+0x8],0x0
6401c678:	jne    0x6401c6a8
6401c67a:	mov    eax,DWORD PTR [esp+0xc]
6401c67e:	add    DWORD PTR [esi],eax
6401c680:	jmp    0x6401c6af
6401c682:	mov    al,BYTE PTR [ebx]
6401c684:	dec    DWORD PTR [esp+0xc]
6401c688:	mov    ecx,edi
6401c68a:	call   0x64018935
6401c68f:	inc    ebx
6401c690:	cmp    DWORD PTR [esi],0xffffffff
6401c693:	jne    0x6401c6a8
6401c695:	call   0x640142c0
6401c69a:	cmp    DWORD PTR [eax],0x2a
6401c69d:	jne    0x6401c6af
6401c69f:	mov    ecx,edi
6401c6a1:	mov    al,0x3f
6401c6a3:	call   0x64018935
6401c6a8:	cmp    DWORD PTR [esp+0xc],0x0
6401c6ad:	jg     0x6401c682
6401c6af:	pop    esi
6401c6b0:	pop    ebx
6401c6b1:	ret    
6401c6b2:	push   ebp
6401c6b3:	lea    ebp,[esp-0x1f8]
6401c6ba:	sub    esp,0x278
6401c6c0:	mov    eax,ds:0x6402c09c
6401c6c5:	xor    eax,ebp
6401c6c7:	mov    DWORD PTR [ebp+0x1f4],eax
6401c6cd:	mov    eax,DWORD PTR [ebp+0x200]
6401c6d3:	push   ebx
6401c6d4:	mov    ebx,DWORD PTR [ebp+0x204]
6401c6da:	push   esi
6401c6db:	xor    esi,esi
6401c6dd:	push   edi
6401c6de:	mov    edi,DWORD PTR [ebp+0x20c]
6401c6e4:	push   DWORD PTR [ebp+0x208]
6401c6ea:	lea    ecx,[ebp-0x5c]
6401c6ed:	mov    DWORD PTR [ebp-0x30],eax
6401c6f0:	mov    DWORD PTR [ebp-0x2c],edi
6401c6f3:	mov    DWORD PTR [ebp-0x64],esi
6401c6f6:	mov    DWORD PTR [ebp-0x18],esi
6401c6f9:	mov    DWORD PTR [ebp-0x40],esi
6401c6fc:	mov    DWORD PTR [ebp-0x20],esi
6401c6ff:	mov    DWORD PTR [ebp-0x3c],esi
6401c702:	mov    DWORD PTR [ebp-0x68],esi
6401c705:	mov    DWORD PTR [ebp-0x44],esi
6401c708:	call   0x6401271f
6401c70d:	cmp    DWORD PTR [ebp-0x30],esi
6401c710:	jne    0x6401c73f
6401c712:	call   0x640142c0
6401c717:	push   esi
6401c718:	push   esi
6401c719:	push   esi
6401c71a:	push   esi
6401c71b:	mov    DWORD PTR [eax],0x16
6401c721:	push   esi
6401c722:	call   0x640120b4
6401c727:	add    esp,0x14
6401c72a:	cmp    BYTE PTR [ebp-0x50],0x0
6401c72e:	je     0x6401c737
6401c730:	mov    eax,DWORD PTR [ebp-0x54]
6401c733:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c737:	or     eax,0xffffffff
6401c73a:	jmp    0x6401d029
6401c73f:	mov    eax,DWORD PTR [ebp-0x30]
6401c742:	test   BYTE PTR [eax+0xc],0x40
6401c746:	jne    0x6401c7f0
6401c74c:	push   eax
6401c74d:	call   0x6401c31d
6401c752:	cmp    eax,0xffffffff
6401c755:	pop    ecx
6401c756:	je     0x6401c78e
6401c758:	push   DWORD PTR [ebp-0x30]
6401c75b:	call   0x6401c31d
6401c760:	cmp    eax,0xfffffffe
6401c763:	pop    ecx
6401c764:	je     0x6401c78e
6401c766:	push   DWORD PTR [ebp-0x30]
6401c769:	call   0x6401c31d
6401c76e:	push   DWORD PTR [ebp-0x30]
6401c771:	sar    eax,0x5
6401c774:	lea    esi,[eax*4+0x64031460]
6401c77b:	call   0x6401c31d
6401c780:	and    eax,0x1f
6401c783:	shl    eax,0x6
6401c786:	add    eax,DWORD PTR [esi]
6401c788:	pop    ecx
6401c789:	pop    ecx
6401c78a:	xor    esi,esi
6401c78c:	jmp    0x6401c793
6401c78e:	mov    eax,0x6402c880
6401c793:	test   BYTE PTR [eax+0x24],0x7f
6401c797:	jne    0x6401c712
6401c79d:	push   DWORD PTR [ebp-0x30]
6401c7a0:	call   0x6401c31d
6401c7a5:	cmp    eax,0xffffffff
6401c7a8:	pop    ecx
6401c7a9:	je     0x6401c7e1
6401c7ab:	push   DWORD PTR [ebp-0x30]
6401c7ae:	call   0x6401c31d
6401c7b3:	cmp    eax,0xfffffffe
6401c7b6:	pop    ecx
6401c7b7:	je     0x6401c7e1
6401c7b9:	push   DWORD PTR [ebp-0x30]
6401c7bc:	call   0x6401c31d
6401c7c1:	push   DWORD PTR [ebp-0x30]
6401c7c4:	sar    eax,0x5
6401c7c7:	lea    esi,[eax*4+0x64031460]
6401c7ce:	call   0x6401c31d
6401c7d3:	and    eax,0x1f
6401c7d6:	shl    eax,0x6
6401c7d9:	add    eax,DWORD PTR [esi]
6401c7db:	pop    ecx
6401c7dc:	pop    ecx
6401c7dd:	xor    esi,esi
6401c7df:	jmp    0x6401c7e6
6401c7e1:	mov    eax,0x6402c880
6401c7e6:	test   BYTE PTR [eax+0x24],0x80
6401c7ea:	jne    0x6401c712
6401c7f0:	cmp    ebx,esi
6401c7f2:	je     0x6401c712
6401c7f8:	mov    dl,BYTE PTR [ebx]
6401c7fa:	test   dl,dl
6401c7fc:	mov    DWORD PTR [ebp-0x34],esi
6401c7ff:	mov    DWORD PTR [ebp-0x28],esi
6401c802:	mov    DWORD PTR [ebp-0x48],esi
6401c805:	mov    DWORD PTR [ebp-0x60],esi
6401c808:	mov    BYTE PTR [ebp-0x19],dl
6401c80b:	je     0x6401d019
6401c811:	inc    ebx
6401c812:	xor    eax,eax
6401c814:	cmp    DWORD PTR [ebp-0x34],eax
6401c817:	mov    DWORD PTR [ebp-0x4c],ebx
6401c81a:	jl     0x6401d008
6401c820:	mov    cl,dl
6401c822:	sub    cl,0x20
6401c825:	cmp    cl,0x58
6401c828:	ja     0x6401c837
6401c82a:	movsx  eax,dl
6401c82d:	movzx  eax,BYTE PTR [eax+0x64026370]
6401c834:	and    eax,0xf
6401c837:	mov    ecx,DWORD PTR [ebp-0x48]
6401c83a:	imul   eax,eax,0x9
6401c83d:	movzx  eax,BYTE PTR [eax+ecx*1+0x64026390]
6401c845:	push   0x8
6401c847:	shr    eax,0x4
6401c84a:	pop    esi
6401c84b:	cmp    eax,esi
6401c84d:	mov    DWORD PTR [ebp-0x48],eax
6401c850:	je     0x6401cff1
6401c856:	push   0x7
6401c858:	pop    ecx
6401c859:	cmp    eax,ecx
6401c85b:	ja     0x6401cfdb
6401c861:	jmp    DWORD PTR [eax*4+0x6401d042]
6401c868:	xor    eax,eax
6401c86a:	or     DWORD PTR [ebp-0x20],0xffffffff
6401c86e:	mov    DWORD PTR [ebp-0x74],eax
6401c871:	mov    DWORD PTR [ebp-0x68],eax
6401c874:	mov    DWORD PTR [ebp-0x40],eax
6401c877:	mov    DWORD PTR [ebp-0x3c],eax
6401c87a:	mov    DWORD PTR [ebp-0x18],eax
6401c87d:	mov    DWORD PTR [ebp-0x44],eax
6401c880:	jmp    0x6401cfdb
6401c885:	movsx  eax,dl
6401c888:	sub    eax,0x20
6401c88b:	je     0x6401c8c9
6401c88d:	sub    eax,0x3
6401c890:	je     0x6401c8bd
6401c892:	sub    eax,esi
6401c894:	je     0x6401c8b4
6401c896:	dec    eax
6401c897:	dec    eax
6401c898:	je     0x6401c8ab
6401c89a:	sub    eax,0x3
6401c89d:	jne    0x6401cfdb
6401c8a3:	or     DWORD PTR [ebp-0x18],esi
6401c8a6:	jmp    0x6401cfdb
6401c8ab:	or     DWORD PTR [ebp-0x18],0x4
6401c8af:	jmp    0x6401cfdb
6401c8b4:	or     DWORD PTR [ebp-0x18],0x1
6401c8b8:	jmp    0x6401cfdb
6401c8bd:	or     DWORD PTR [ebp-0x18],0x80
6401c8c4:	jmp    0x6401cfdb
6401c8c9:	or     DWORD PTR [ebp-0x18],0x2
6401c8cd:	jmp    0x6401cfdb
6401c8d2:	cmp    dl,0x2a
6401c8d5:	jne    0x6401c8f7
6401c8d7:	add    edi,0x4
6401c8da:	mov    DWORD PTR [ebp-0x2c],edi
6401c8dd:	mov    edi,DWORD PTR [edi-0x4]
6401c8e0:	test   edi,edi
6401c8e2:	mov    DWORD PTR [ebp-0x40],edi
6401c8e5:	jge    0x6401cfdb
6401c8eb:	or     DWORD PTR [ebp-0x18],0x4
6401c8ef:	neg    DWORD PTR [ebp-0x40]
6401c8f2:	jmp    0x6401cfdb
6401c8f7:	mov    eax,DWORD PTR [ebp-0x40]
6401c8fa:	imul   eax,eax,0xa
6401c8fd:	movsx  ecx,dl
6401c900:	lea    eax,[eax+ecx*1-0x30]
6401c904:	mov    DWORD PTR [ebp-0x40],eax
6401c907:	jmp    0x6401cfdb
6401c90c:	and    DWORD PTR [ebp-0x20],0x0
6401c910:	jmp    0x6401cfdb
6401c915:	cmp    dl,0x2a
6401c918:	jne    0x6401c937
6401c91a:	add    edi,0x4
6401c91d:	mov    DWORD PTR [ebp-0x2c],edi
6401c920:	mov    edi,DWORD PTR [edi-0x4]
6401c923:	test   edi,edi
6401c925:	mov    DWORD PTR [ebp-0x20],edi
6401c928:	jge    0x6401cfdb
6401c92e:	or     DWORD PTR [ebp-0x20],0xffffffff
6401c932:	jmp    0x6401cfdb
6401c937:	mov    eax,DWORD PTR [ebp-0x20]
6401c93a:	imul   eax,eax,0xa
6401c93d:	movsx  ecx,dl
6401c940:	lea    eax,[eax+ecx*1-0x30]
6401c944:	mov    DWORD PTR [ebp-0x20],eax
6401c947:	jmp    0x6401cfdb
6401c94c:	cmp    dl,0x49
6401c94f:	je     0x6401c997
6401c951:	cmp    dl,0x68
6401c954:	je     0x6401c98e
6401c956:	cmp    dl,0x6c
6401c959:	je     0x6401c970
6401c95b:	cmp    dl,0x77
6401c95e:	jne    0x6401cfdb
6401c964:	or     DWORD PTR [ebp-0x18],0x800
6401c96b:	jmp    0x6401cfdb
6401c970:	cmp    BYTE PTR [ebx],0x6c
6401c973:	jne    0x6401c985
6401c975:	inc    ebx
6401c976:	or     DWORD PTR [ebp-0x18],0x1000
6401c97d:	mov    DWORD PTR [ebp-0x4c],ebx
6401c980:	jmp    0x6401cfdb
6401c985:	or     DWORD PTR [ebp-0x18],0x10
6401c989:	jmp    0x6401cfdb
6401c98e:	or     DWORD PTR [ebp-0x18],0x20
6401c992:	jmp    0x6401cfdb
6401c997:	mov    al,BYTE PTR [ebx]
6401c999:	cmp    al,0x36
6401c99b:	jne    0x6401c9b4
6401c99d:	cmp    BYTE PTR [ebx+0x1],0x34
6401c9a1:	jne    0x6401c9b4
6401c9a3:	inc    ebx
6401c9a4:	inc    ebx
6401c9a5:	or     DWORD PTR [ebp-0x18],0x8000
6401c9ac:	mov    DWORD PTR [ebp-0x4c],ebx
6401c9af:	jmp    0x6401cfdb
6401c9b4:	cmp    al,0x33
6401c9b6:	jne    0x6401c9cf
6401c9b8:	cmp    BYTE PTR [ebx+0x1],0x32
6401c9bc:	jne    0x6401c9cf
6401c9be:	inc    ebx
6401c9bf:	inc    ebx
6401c9c0:	and    DWORD PTR [ebp-0x18],0xffff7fff
6401c9c7:	mov    DWORD PTR [ebp-0x4c],ebx
6401c9ca:	jmp    0x6401cfdb
6401c9cf:	cmp    al,0x64
6401c9d1:	je     0x6401cfdb
6401c9d7:	cmp    al,0x69
6401c9d9:	je     0x6401cfdb
6401c9df:	cmp    al,0x6f
6401c9e1:	je     0x6401cfdb
6401c9e7:	cmp    al,0x75
6401c9e9:	je     0x6401cfdb
6401c9ef:	cmp    al,0x78
6401c9f1:	je     0x6401cfdb
6401c9f7:	cmp    al,0x58
6401c9f9:	je     0x6401cfdb
6401c9ff:	and    DWORD PTR [ebp-0x48],0x0
6401ca03:	and    DWORD PTR [ebp-0x44],0x0
6401ca07:	lea    eax,[ebp-0x5c]
6401ca0a:	push   eax
6401ca0b:	movzx  eax,dl
6401ca0e:	push   eax
6401ca0f:	call   0x6401990b
6401ca14:	pop    ecx
6401ca15:	test   eax,eax
6401ca17:	mov    al,BYTE PTR [ebp-0x19]
6401ca1a:	pop    ecx
6401ca1b:	je     0x6401ca36
6401ca1d:	mov    ecx,DWORD PTR [ebp-0x30]
6401ca20:	lea    esi,[ebp-0x34]
6401ca23:	call   0x64018935
6401ca28:	mov    al,BYTE PTR [ebx]
6401ca2a:	inc    ebx
6401ca2b:	test   al,al
6401ca2d:	mov    DWORD PTR [ebp-0x4c],ebx
6401ca30:	je     0x6401cff1
6401ca36:	mov    ecx,DWORD PTR [ebp-0x30]
6401ca39:	lea    esi,[ebp-0x34]
6401ca3c:	call   0x64018935
6401ca41:	jmp    0x6401cfdb
6401ca46:	movsx  eax,dl
6401ca49:	cmp    eax,0x64
6401ca4c:	jg     0x6401cbc6
6401ca52:	je     0x6401cc41
6401ca58:	cmp    eax,0x53
6401ca5b:	jg     0x6401cb0d
6401ca61:	je     0x6401cabe
6401ca63:	sub    eax,0x41
6401ca66:	je     0x6401ca78
6401ca68:	dec    eax
6401ca69:	dec    eax
6401ca6a:	je     0x6401caad
6401ca6c:	dec    eax
6401ca6d:	dec    eax
6401ca6e:	je     0x6401ca78
6401ca70:	dec    eax
6401ca71:	dec    eax
6401ca72:	jne    0x6401cec3
6401ca78:	add    dl,0x20
6401ca7b:	mov    DWORD PTR [ebp-0x74],0x1
6401ca82:	mov    BYTE PTR [ebp-0x19],dl
6401ca85:	or     DWORD PTR [ebp-0x18],0x40
6401ca89:	cmp    DWORD PTR [ebp-0x20],0x0
6401ca8d:	lea    ebx,[ebp-0x14]
6401ca90:	mov    eax,0x200
6401ca95:	mov    DWORD PTR [ebp-0x24],ebx
6401ca98:	mov    DWORD PTR [ebp-0x6c],eax
6401ca9b:	jge    0x6401cc65
6401caa1:	mov    DWORD PTR [ebp-0x20],0x6
6401caa8:	jmp    0x6401ccb4
6401caad:	test   WORD PTR [ebp-0x18],0x830
6401cab3:	jne    0x6401cb2a
6401cab5:	or     DWORD PTR [ebp-0x18],0x800
6401cabc:	jmp    0x6401cb2a
6401cabe:	test   WORD PTR [ebp-0x18],0x830
6401cac4:	jne    0x6401cacd
6401cac6:	or     DWORD PTR [ebp-0x18],0x800
6401cacd:	mov    ecx,DWORD PTR [ebp-0x20]
6401cad0:	cmp    ecx,0xffffffff
6401cad3:	jne    0x6401cada
6401cad5:	mov    ecx,0x7fffffff
6401cada:	add    edi,0x4
6401cadd:	test   WORD PTR [ebp-0x18],0x810
6401cae3:	mov    DWORD PTR [ebp-0x2c],edi
6401cae6:	mov    edi,DWORD PTR [edi-0x4]
6401cae9:	mov    DWORD PTR [ebp-0x24],edi
6401caec:	je     0x6401cea1
6401caf2:	test   edi,edi
6401caf4:	jne    0x6401cafe
6401caf6:	mov    eax,ds:0x6402c954
6401cafb:	mov    DWORD PTR [ebp-0x24],eax
6401cafe:	mov    eax,DWORD PTR [ebp-0x24]
6401cb01:	mov    DWORD PTR [ebp-0x44],0x1
6401cb08:	jmp    0x6401ce96
6401cb0d:	sub    eax,0x58
6401cb10:	je     0x6401cd4a
6401cb16:	dec    eax
6401cb17:	dec    eax
6401cb18:	je     0x6401cb77
6401cb1a:	sub    eax,ecx
6401cb1c:	je     0x6401ca85
6401cb22:	dec    eax
6401cb23:	dec    eax
6401cb24:	jne    0x6401cec3
6401cb2a:	add    edi,0x4
6401cb2d:	test   WORD PTR [ebp-0x18],0x810
6401cb33:	mov    DWORD PTR [ebp-0x2c],edi
6401cb36:	je     0x6401cb5f
6401cb38:	movzx  eax,WORD PTR [edi-0x4]
6401cb3c:	push   eax
6401cb3d:	push   0x200
6401cb42:	lea    eax,[ebp-0x14]
6401cb45:	push   eax
6401cb46:	lea    eax,[ebp-0x28]
6401cb49:	push   eax
6401cb4a:	call   0x6401d4db
6401cb4f:	add    esp,0x10
6401cb52:	test   eax,eax
6401cb54:	je     0x6401cb6c
6401cb56:	mov    DWORD PTR [ebp-0x68],0x1
6401cb5d:	jmp    0x6401cb6c
6401cb5f:	mov    al,BYTE PTR [edi-0x4]
6401cb62:	mov    BYTE PTR [ebp-0x14],al
6401cb65:	mov    DWORD PTR [ebp-0x28],0x1
6401cb6c:	lea    eax,[ebp-0x14]
6401cb6f:	mov    DWORD PTR [ebp-0x24],eax
6401cb72:	jmp    0x6401cec3
6401cb77:	mov    eax,DWORD PTR [edi]
6401cb79:	add    edi,0x4
6401cb7c:	test   eax,eax
6401cb7e:	mov    DWORD PTR [ebp-0x2c],edi
6401cb81:	je     0x6401cbb2
6401cb83:	mov    ecx,DWORD PTR [eax+0x4]
6401cb86:	test   ecx,ecx
6401cb88:	je     0x6401cbb2
6401cb8a:	test   WORD PTR [ebp-0x18],0x800
6401cb90:	movsx  eax,WORD PTR [eax]
6401cb93:	mov    DWORD PTR [ebp-0x24],ecx
6401cb96:	je     0x6401cba9
6401cb98:	cdq    
6401cb99:	sub    eax,edx
6401cb9b:	sar    eax,1
6401cb9d:	mov    DWORD PTR [ebp-0x44],0x1
6401cba4:	jmp    0x6401cec0
6401cba9:	and    DWORD PTR [ebp-0x44],0x0
6401cbad:	jmp    0x6401cec0
6401cbb2:	mov    eax,ds:0x6402c950
6401cbb7:	mov    DWORD PTR [ebp-0x24],eax
6401cbba:	push   eax
6401cbbb:	call   0x64013cc0
6401cbc0:	pop    ecx
6401cbc1:	jmp    0x6401cec0
6401cbc6:	cmp    eax,0x70
6401cbc9:	jg     0x6401cd4f
6401cbcf:	je     0x6401cd47
6401cbd5:	cmp    eax,0x65
6401cbd8:	jl     0x6401cec3
6401cbde:	cmp    eax,0x67
6401cbe1:	jle    0x6401ca85
6401cbe7:	cmp    eax,0x69
6401cbea:	je     0x6401cc41
6401cbec:	cmp    eax,0x6e
6401cbef:	je     0x6401cc0c
6401cbf1:	cmp    eax,0x6f
6401cbf4:	jne    0x6401cec3
6401cbfa:	test   BYTE PTR [ebp-0x18],0x80
6401cbfe:	mov    DWORD PTR [ebp-0x28],esi
6401cc01:	je     0x6401cc4c
6401cc03:	or     DWORD PTR [ebp-0x18],0x200
6401cc0a:	jmp    0x6401cc4c
6401cc0c:	mov    esi,DWORD PTR [edi]
6401cc0e:	add    edi,0x4
6401cc11:	mov    DWORD PTR [ebp-0x2c],edi
6401cc14:	call   0x6401c528
6401cc19:	test   eax,eax
6401cc1b:	je     0x6401cff1
6401cc21:	test   BYTE PTR [ebp-0x18],0x20
6401cc25:	je     0x6401cc30
6401cc27:	mov    ax,WORD PTR [ebp-0x34]
6401cc2b:	mov    WORD PTR [esi],ax
6401cc2e:	jmp    0x6401cc35
6401cc30:	mov    eax,DWORD PTR [ebp-0x34]
6401cc33:	mov    DWORD PTR [esi],eax
6401cc35:	mov    DWORD PTR [ebp-0x68],0x1
6401cc3c:	jmp    0x6401cfc8
6401cc41:	or     DWORD PTR [ebp-0x18],0x40
6401cc45:	mov    DWORD PTR [ebp-0x28],0xa
6401cc4c:	mov    ecx,DWORD PTR [ebp-0x18]
6401cc4f:	test   cx,cx
6401cc52:	jns    0x6401cd99
6401cc58:	add    edi,esi
6401cc5a:	mov    eax,DWORD PTR [edi-0x8]
6401cc5d:	mov    edx,DWORD PTR [edi-0x4]
6401cc60:	jmp    0x6401cdce
6401cc65:	jne    0x6401cc75
6401cc67:	cmp    dl,0x67
6401cc6a:	jne    0x6401ccb4
6401cc6c:	mov    DWORD PTR [ebp-0x20],0x1
6401cc73:	jmp    0x6401ccb4
6401cc75:	cmp    DWORD PTR [ebp-0x20],eax
6401cc78:	jle    0x6401cc7d
6401cc7a:	mov    DWORD PTR [ebp-0x20],eax
6401cc7d:	cmp    DWORD PTR [ebp-0x20],0xa3
6401cc84:	jle    0x6401ccb4
6401cc86:	mov    esi,DWORD PTR [ebp-0x20]
6401cc89:	add    esi,0x15d
6401cc8f:	push   esi
6401cc90:	call   0x640157d0
6401cc95:	test   eax,eax
6401cc97:	mov    dl,BYTE PTR [ebp-0x19]
6401cc9a:	pop    ecx
6401cc9b:	mov    DWORD PTR [ebp-0x60],eax
6401cc9e:	push   0x8
6401cca0:	je     0x6401ccac
6401cca2:	mov    DWORD PTR [ebp-0x24],eax
6401cca5:	mov    DWORD PTR [ebp-0x6c],esi
6401cca8:	mov    ebx,eax
6401ccaa:	jmp    0x6401ccb3
6401ccac:	mov    DWORD PTR [ebp-0x20],0xa3
6401ccb3:	pop    esi
6401ccb4:	add    edi,esi
6401ccb6:	mov    eax,DWORD PTR [edi-0x8]
6401ccb9:	mov    DWORD PTR [ebp-0x80],eax
6401ccbc:	mov    eax,DWORD PTR [edi-0x4]
6401ccbf:	mov    DWORD PTR [ebp-0x7c],eax
6401ccc2:	lea    eax,[ebp-0x5c]
6401ccc5:	push   eax
6401ccc6:	push   DWORD PTR [ebp-0x74]
6401ccc9:	movsx  eax,dl
6401cccc:	push   DWORD PTR [ebp-0x20]
6401cccf:	mov    DWORD PTR [ebp-0x2c],edi
6401ccd2:	push   eax
6401ccd3:	push   DWORD PTR [ebp-0x6c]
6401ccd6:	lea    eax,[ebp-0x80]
6401ccd9:	push   ebx
6401ccda:	push   eax
6401ccdb:	push   DWORD PTR ds:0x6402cb5c
6401cce1:	call   0x640143ef
6401cce6:	pop    ecx
6401cce7:	call   eax
6401cce9:	mov    edi,DWORD PTR [ebp-0x18]
6401ccec:	add    esp,0x1c
6401ccef:	and    edi,0x80
6401ccf5:	je     0x6401cd12
6401ccf7:	cmp    DWORD PTR [ebp-0x20],0x0
6401ccfb:	jne    0x6401cd12
6401ccfd:	lea    eax,[ebp-0x5c]
6401cd00:	push   eax
6401cd01:	push   ebx
6401cd02:	push   DWORD PTR ds:0x6402cb68
6401cd08:	call   0x640143ef
6401cd0d:	pop    ecx
6401cd0e:	call   eax
6401cd10:	pop    ecx
6401cd11:	pop    ecx
6401cd12:	cmp    BYTE PTR [ebp-0x19],0x67
6401cd16:	jne    0x6401cd31
6401cd18:	test   edi,edi
6401cd1a:	jne    0x6401cd31
6401cd1c:	lea    eax,[ebp-0x5c]
6401cd1f:	push   eax
6401cd20:	push   ebx
6401cd21:	push   DWORD PTR ds:0x6402cb64
6401cd27:	call   0x640143ef
6401cd2c:	pop    ecx
6401cd2d:	call   eax
6401cd2f:	pop    ecx
6401cd30:	pop    ecx
6401cd31:	cmp    BYTE PTR [ebx],0x2d
6401cd34:	jne    0x6401cd41
6401cd36:	or     DWORD PTR [ebp-0x18],0x100
6401cd3d:	inc    ebx
6401cd3e:	mov    DWORD PTR [ebp-0x24],ebx
6401cd41:	push   ebx
6401cd42:	jmp    0x6401cbbb
6401cd47:	mov    DWORD PTR [ebp-0x20],esi
6401cd4a:	mov    DWORD PTR [ebp-0x64],ecx
6401cd4d:	jmp    0x6401cd70
6401cd4f:	sub    eax,0x73
6401cd52:	je     0x6401cacd
6401cd58:	dec    eax
6401cd59:	dec    eax
6401cd5a:	je     0x6401cc45
6401cd60:	sub    eax,0x3
6401cd63:	jne    0x6401cec3
6401cd69:	mov    DWORD PTR [ebp-0x64],0x27
6401cd70:	test   BYTE PTR [ebp-0x18],0x80
6401cd74:	mov    DWORD PTR [ebp-0x28],0x10
6401cd7b:	je     0x6401cc4c
6401cd81:	mov    al,BYTE PTR [ebp-0x64]
6401cd84:	add    al,0x51
6401cd86:	mov    BYTE PTR [ebp-0x38],0x30
6401cd8a:	mov    BYTE PTR [ebp-0x37],al
6401cd8d:	mov    DWORD PTR [ebp-0x3c],0x2
6401cd94:	jmp    0x6401cc4c
6401cd99:	test   cx,0x1000
6401cd9e:	jne    0x6401cc58
6401cda4:	add    edi,0x4
6401cda7:	test   cl,0x20
6401cdaa:	je     0x6401cdc1
6401cdac:	test   cl,0x40
6401cdaf:	mov    DWORD PTR [ebp-0x2c],edi
6401cdb2:	je     0x6401cdba
6401cdb4:	movsx  eax,WORD PTR [edi-0x4]
6401cdb8:	jmp    0x6401cdbe
6401cdba:	movzx  eax,WORD PTR [edi-0x4]
6401cdbe:	cdq    
6401cdbf:	jmp    0x6401cdd1
6401cdc1:	test   cl,0x40
6401cdc4:	mov    eax,DWORD PTR [edi-0x4]
6401cdc7:	je     0x6401cdcc
6401cdc9:	cdq    
6401cdca:	jmp    0x6401cdce
6401cdcc:	xor    edx,edx
6401cdce:	mov    DWORD PTR [ebp-0x2c],edi
6401cdd1:	test   cl,0x40
6401cdd4:	je     0x6401cdee
6401cdd6:	test   edx,edx
6401cdd8:	jg     0x6401cdee
6401cdda:	jl     0x6401cde0
6401cddc:	test   eax,eax
6401cdde:	jae    0x6401cdee
6401cde0:	neg    eax
6401cde2:	adc    edx,0x0
6401cde5:	neg    edx
6401cde7:	or     DWORD PTR [ebp-0x18],0x100
6401cdee:	test   WORD PTR [ebp-0x18],0x9000
6401cdf4:	mov    ebx,edx
6401cdf6:	mov    edi,eax
6401cdf8:	jne    0x6401cdfc
6401cdfa:	xor    ebx,ebx
6401cdfc:	cmp    DWORD PTR [ebp-0x20],0x0
6401ce00:	jge    0x6401ce0b
6401ce02:	mov    DWORD PTR [ebp-0x20],0x1
6401ce09:	jmp    0x6401ce1c
6401ce0b:	and    DWORD PTR [ebp-0x18],0xfffffff7
6401ce0f:	mov    eax,0x200
6401ce14:	cmp    DWORD PTR [ebp-0x20],eax
6401ce17:	jle    0x6401ce1c
6401ce19:	mov    DWORD PTR [ebp-0x20],eax
6401ce1c:	mov    eax,edi
6401ce1e:	or     eax,ebx
6401ce20:	jne    0x6401ce25
6401ce22:	and    DWORD PTR [ebp-0x3c],eax
6401ce25:	lea    esi,[ebp+0x1eb]
6401ce2b:	mov    eax,DWORD PTR [ebp-0x20]
6401ce2e:	dec    DWORD PTR [ebp-0x20]
6401ce31:	test   eax,eax
6401ce33:	jg     0x6401ce3b
6401ce35:	mov    eax,edi
6401ce37:	or     eax,ebx
6401ce39:	je     0x6401ce5f
6401ce3b:	mov    eax,DWORD PTR [ebp-0x28]
6401ce3e:	cdq    
6401ce3f:	push   edx
6401ce40:	push   eax
6401ce41:	push   ebx
6401ce42:	push   edi
6401ce43:	call   0x640188a0
6401ce48:	add    ecx,0x30
6401ce4b:	cmp    ecx,0x39
6401ce4e:	mov    DWORD PTR [ebp-0x6c],ebx
6401ce51:	mov    edi,eax
6401ce53:	mov    ebx,edx
6401ce55:	jle    0x6401ce5a
6401ce57:	add    ecx,DWORD PTR [ebp-0x64]
6401ce5a:	mov    BYTE PTR [esi],cl
6401ce5c:	dec    esi
6401ce5d:	jmp    0x6401ce2b
6401ce5f:	lea    eax,[ebp+0x1eb]
6401ce65:	sub    eax,esi
6401ce67:	inc    esi
6401ce68:	test   WORD PTR [ebp-0x18],0x200
6401ce6e:	mov    DWORD PTR [ebp-0x28],eax
6401ce71:	mov    DWORD PTR [ebp-0x24],esi
6401ce74:	je     0x6401cec3
6401ce76:	test   eax,eax
6401ce78:	je     0x6401ce81
6401ce7a:	mov    ecx,esi
6401ce7c:	cmp    BYTE PTR [ecx],0x30
6401ce7f:	je     0x6401cec3
6401ce81:	dec    DWORD PTR [ebp-0x24]
6401ce84:	mov    ecx,DWORD PTR [ebp-0x24]
6401ce87:	mov    BYTE PTR [ecx],0x30
6401ce8a:	inc    eax
6401ce8b:	jmp    0x6401cec0
6401ce8d:	dec    ecx
6401ce8e:	cmp    WORD PTR [eax],0x0
6401ce92:	je     0x6401ce9a
6401ce94:	inc    eax
6401ce95:	inc    eax
6401ce96:	test   ecx,ecx
6401ce98:	jne    0x6401ce8d
6401ce9a:	sub    eax,DWORD PTR [ebp-0x24]
6401ce9d:	sar    eax,1
6401ce9f:	jmp    0x6401cec0
6401cea1:	test   edi,edi
6401cea3:	jne    0x6401cead
6401cea5:	mov    eax,ds:0x6402c950
6401ceaa:	mov    DWORD PTR [ebp-0x24],eax
6401cead:	mov    eax,DWORD PTR [ebp-0x24]
6401ceb0:	jmp    0x6401ceb9
6401ceb2:	dec    ecx
6401ceb3:	cmp    BYTE PTR [eax],0x0
6401ceb6:	je     0x6401cebd
6401ceb8:	inc    eax
6401ceb9:	test   ecx,ecx
6401cebb:	jne    0x6401ceb2
6401cebd:	sub    eax,DWORD PTR [ebp-0x24]
6401cec0:	mov    DWORD PTR [ebp-0x28],eax
6401cec3:	cmp    DWORD PTR [ebp-0x68],0x0
6401cec7:	jne    0x6401cfc8
6401cecd:	mov    eax,DWORD PTR [ebp-0x18]
6401ced0:	test   al,0x40
6401ced2:	je     0x6401cef9
6401ced4:	test   ax,0x100
6401ced8:	je     0x6401cee0
6401ceda:	mov    BYTE PTR [ebp-0x38],0x2d
6401cede:	jmp    0x6401cef2
6401cee0:	test   al,0x1
6401cee2:	je     0x6401ceea
6401cee4:	mov    BYTE PTR [ebp-0x38],0x2b
6401cee8:	jmp    0x6401cef2
6401ceea:	test   al,0x2
6401ceec:	je     0x6401cef9
6401ceee:	mov    BYTE PTR [ebp-0x38],0x20
6401cef2:	mov    DWORD PTR [ebp-0x3c],0x1
6401cef9:	mov    ebx,DWORD PTR [ebp-0x40]
6401cefc:	sub    ebx,DWORD PTR [ebp-0x28]
6401ceff:	sub    ebx,DWORD PTR [ebp-0x3c]
6401cf02:	test   BYTE PTR [ebp-0x18],0xc
6401cf06:	jne    0x6401cf19
6401cf08:	push   DWORD PTR [ebp-0x30]
6401cf0b:	lea    eax,[ebp-0x34]
6401cf0e:	push   ebx
6401cf0f:	push   0x20
6401cf11:	call   0x64018968
6401cf16:	add    esp,0xc
6401cf19:	push   DWORD PTR [ebp-0x3c]
6401cf1c:	mov    edi,DWORD PTR [ebp-0x30]
6401cf1f:	lea    eax,[ebp-0x34]
6401cf22:	lea    ecx,[ebp-0x38]
6401cf25:	call   0x6401c668
6401cf2a:	test   BYTE PTR [ebp-0x18],0x8
6401cf2e:	pop    ecx
6401cf2f:	je     0x6401cf46
6401cf31:	test   BYTE PTR [ebp-0x18],0x4
6401cf35:	jne    0x6401cf46
6401cf37:	push   edi
6401cf38:	push   ebx
6401cf39:	push   0x30
6401cf3b:	lea    eax,[ebp-0x34]
6401cf3e:	call   0x64018968
6401cf43:	add    esp,0xc
6401cf46:	cmp    DWORD PTR [ebp-0x44],0x0
6401cf4a:	mov    eax,DWORD PTR [ebp-0x28]
6401cf4d:	je     0x6401cfa0
6401cf4f:	test   eax,eax
6401cf51:	jle    0x6401cfa0
6401cf53:	mov    esi,DWORD PTR [ebp-0x24]
6401cf56:	mov    DWORD PTR [ebp-0x6c],eax
6401cf59:	movzx  eax,WORD PTR [esi]
6401cf5c:	dec    DWORD PTR [ebp-0x6c]
6401cf5f:	push   eax
6401cf60:	push   0x6
6401cf62:	lea    eax,[ebp+0x1ec]
6401cf68:	push   eax
6401cf69:	lea    eax,[ebp-0x78]
6401cf6c:	inc    esi
6401cf6d:	push   eax
6401cf6e:	inc    esi
6401cf6f:	call   0x6401d4db
6401cf74:	add    esp,0x10
6401cf77:	test   eax,eax
6401cf79:	jne    0x6401cf9a
6401cf7b:	cmp    DWORD PTR [ebp-0x78],eax
6401cf7e:	je     0x6401cf9a
6401cf80:	push   DWORD PTR [ebp-0x78]
6401cf83:	lea    eax,[ebp-0x34]
6401cf86:	lea    ecx,[ebp+0x1ec]
6401cf8c:	call   0x6401c668
6401cf91:	cmp    DWORD PTR [ebp-0x6c],0x0
6401cf95:	pop    ecx
6401cf96:	jne    0x6401cf59
6401cf98:	jmp    0x6401cfad
6401cf9a:	or     DWORD PTR [ebp-0x34],0xffffffff
6401cf9e:	jmp    0x6401cfad
6401cfa0:	mov    ecx,DWORD PTR [ebp-0x24]
6401cfa3:	push   eax
6401cfa4:	lea    eax,[ebp-0x34]
6401cfa7:	call   0x6401c668
6401cfac:	pop    ecx
6401cfad:	cmp    DWORD PTR [ebp-0x34],0x0
6401cfb1:	jl     0x6401cfc8
6401cfb3:	test   BYTE PTR [ebp-0x18],0x4
6401cfb7:	je     0x6401cfc8
6401cfb9:	push   edi
6401cfba:	push   ebx
6401cfbb:	push   0x20
6401cfbd:	lea    eax,[ebp-0x34]
6401cfc0:	call   0x64018968
6401cfc5:	add    esp,0xc
6401cfc8:	cmp    DWORD PTR [ebp-0x60],0x0
6401cfcc:	je     0x6401cfdb
6401cfce:	push   DWORD PTR [ebp-0x60]
6401cfd1:	call   0x64013396
6401cfd6:	and    DWORD PTR [ebp-0x60],0x0
6401cfda:	pop    ecx
6401cfdb:	mov    ebx,DWORD PTR [ebp-0x4c]
6401cfde:	mov    al,BYTE PTR [ebx]
6401cfe0:	test   al,al
6401cfe2:	mov    BYTE PTR [ebp-0x19],al
6401cfe5:	je     0x6401d008
6401cfe7:	mov    edi,DWORD PTR [ebp-0x2c]
6401cfea:	mov    dl,al
6401cfec:	jmp    0x6401c811
6401cff1:	call   0x640142c0
6401cff6:	mov    DWORD PTR [eax],0x16
6401cffc:	xor    eax,eax
6401cffe:	push   eax
6401cfff:	push   eax
6401d000:	push   eax
6401d001:	push   eax
6401d002:	push   eax
6401d003:	jmp    0x6401c722
6401d008:	xor    esi,esi
6401d00a:	cmp    DWORD PTR [ebp-0x48],esi
6401d00d:	je     0x6401d019
6401d00f:	cmp    DWORD PTR [ebp-0x48],0x7
6401d013:	jne    0x6401c712
6401d019:	cmp    BYTE PTR [ebp-0x50],0x0
6401d01d:	je     0x6401d026
6401d01f:	mov    eax,DWORD PTR [ebp-0x54]
6401d022:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d026:	mov    eax,DWORD PTR [ebp-0x34]
6401d029:	mov    ecx,DWORD PTR [ebp+0x1f4]
6401d02f:	pop    edi
6401d030:	pop    esi
6401d031:	xor    ecx,ebp
6401d033:	pop    ebx
6401d034:	call   0x6401257c
6401d039:	add    ebp,0x1f8
6401d03f:	leave  
6401d040:	ret    
6401d041:	nop
6401d042:	add    ecx,edx
6401d044:	add    DWORD PTR [eax+ebp*2-0x38],esp
6401d048:	add    DWORD PTR [ebp+eax*4-0x38],esp
6401d04c:	add    DWORD PTR [edx+edx*8-0x38],esp
6401d050:	add    DWORD PTR [esp+ecx*1-0x37],esp
6401d054:	add    DWORD PTR [ebp+edx*1-0x37],esp
6401d058:	add    DWORD PTR [esp+ecx*2-0x37],esp
6401d05c:	add    DWORD PTR [esi+eax*2-0x36],esp
6401d060:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401d064:	in     al,dx
6401d065:	sub    esp,0xc
6401d068:	mov    eax,ds:0x6402c09c
6401d06d:	xor    eax,ebp
6401d06f:	mov    DWORD PTR [ebp-0x4],eax
6401d072:	push   0x6
6401d074:	lea    eax,[ebp-0xc]
6401d077:	push   eax
6401d078:	push   0x1004
6401d07d:	push   DWORD PTR [ebp+0x8]
6401d080:	mov    BYTE PTR [ebp-0x6],0x0
6401d084:	call   DWORD PTR ds:0x640240e0
6401d08a:	test   eax,eax
6401d08c:	jne    0x6401d093
6401d08e:	or     eax,0xffffffff
6401d091:	jmp    0x6401d09d
6401d093:	lea    eax,[ebp-0xc]
6401d096:	push   eax
6401d097:	call   0x6401d734
6401d09c:	pop    ecx
6401d09d:	mov    ecx,DWORD PTR [ebp-0x4]
6401d0a0:	xor    ecx,ebp
6401d0a2:	call   0x6401257c
6401d0a7:	leave  
6401d0a8:	ret    
6401d0a9:	push   ebp
6401d0aa:	mov    ebp,esp
6401d0ac:	sub    esp,0x34
6401d0af:	mov    eax,ds:0x6402c09c
6401d0b4:	xor    eax,ebp
6401d0b6:	mov    DWORD PTR [ebp-0x4],eax
6401d0b9:	mov    eax,DWORD PTR [ebp+0x10]
6401d0bc:	mov    ecx,DWORD PTR [ebp+0x18]
6401d0bf:	mov    DWORD PTR [ebp-0x28],eax
6401d0c2:	mov    eax,DWORD PTR [ebp+0x14]
6401d0c5:	push   ebx
6401d0c6:	mov    DWORD PTR [ebp-0x30],eax
6401d0c9:	mov    eax,DWORD PTR [eax]
6401d0cb:	push   esi
6401d0cc:	mov    DWORD PTR [ebp-0x24],eax
6401d0cf:	mov    eax,DWORD PTR [ebp+0x8]
6401d0d2:	push   edi
6401d0d3:	xor    edi,edi
6401d0d5:	cmp    eax,DWORD PTR [ebp+0xc]
6401d0d8:	mov    DWORD PTR [ebp-0x34],ecx
6401d0db:	mov    DWORD PTR [ebp-0x20],edi
6401d0de:	mov    DWORD PTR [ebp-0x2c],edi
6401d0e1:	je     0x6401d246
6401d0e7:	mov    esi,DWORD PTR ds:0x6402413c
6401d0ed:	lea    ecx,[ebp-0x18]
6401d0f0:	push   ecx
6401d0f1:	push   eax
6401d0f2:	call   esi
6401d0f4:	test   eax,eax
6401d0f6:	mov    ebx,DWORD PTR ds:0x64024024
6401d0fc:	je     0x6401d15c
6401d0fe:	cmp    DWORD PTR [ebp-0x18],0x1
6401d102:	jne    0x6401d15c
6401d104:	lea    eax,[ebp-0x18]
6401d107:	push   eax
6401d108:	push   DWORD PTR [ebp+0xc]
6401d10b:	call   esi
6401d10d:	test   eax,eax
6401d10f:	je     0x6401d15c
6401d111:	cmp    DWORD PTR [ebp-0x18],0x1
6401d115:	jne    0x6401d15c
6401d117:	mov    esi,DWORD PTR [ebp-0x24]
6401d11a:	cmp    esi,0xffffffff
6401d11d:	mov    DWORD PTR [ebp-0x2c],0x1
6401d124:	jne    0x6401d132
6401d126:	push   DWORD PTR [ebp-0x28]
6401d129:	call   0x64013cc0
6401d12e:	mov    esi,eax
6401d130:	pop    ecx
6401d131:	inc    esi
6401d132:	cmp    esi,edi
6401d134:	jle    0x6401d191
6401d136:	cmp    esi,0x7ffffff0
6401d13c:	ja     0x6401d191
6401d13e:	lea    eax,[esi+esi*1+0x8]
6401d142:	cmp    eax,0x400
6401d147:	ja     0x6401d178
6401d149:	call   0x64012c80
6401d14e:	mov    eax,esp
6401d150:	cmp    eax,edi
6401d152:	je     0x6401d18c
6401d154:	mov    DWORD PTR [eax],0xcccc
6401d15a:	jmp    0x6401d189
6401d15c:	push   edi
6401d15d:	push   edi
6401d15e:	push   DWORD PTR [ebp-0x24]
6401d161:	push   DWORD PTR [ebp-0x28]
6401d164:	push   0x1
6401d166:	push   DWORD PTR [ebp+0x8]
6401d169:	call   ebx
6401d16b:	mov    esi,eax
6401d16d:	cmp    esi,edi
6401d16f:	jne    0x6401d134
6401d171:	xor    eax,eax
6401d173:	jmp    0x6401d249
6401d178:	push   eax
6401d179:	call   0x64013473
6401d17e:	cmp    eax,edi
6401d180:	pop    ecx
6401d181:	je     0x6401d18c
6401d183:	mov    DWORD PTR [eax],0xdddd
6401d189:	add    eax,0x8
6401d18c:	mov    DWORD PTR [ebp-0x1c],eax
6401d18f:	jmp    0x6401d194
6401d191:	mov    DWORD PTR [ebp-0x1c],edi
6401d194:	cmp    DWORD PTR [ebp-0x1c],edi
6401d197:	je     0x6401d171
6401d199:	lea    eax,[esi+esi*1]
6401d19c:	push   eax
6401d19d:	push   edi
6401d19e:	push   DWORD PTR [ebp-0x1c]
6401d1a1:	call   0x64012c00
6401d1a6:	add    esp,0xc
6401d1a9:	push   esi
6401d1aa:	push   DWORD PTR [ebp-0x1c]
6401d1ad:	push   DWORD PTR [ebp-0x24]
6401d1b0:	push   DWORD PTR [ebp-0x28]
6401d1b3:	push   0x1
6401d1b5:	push   DWORD PTR [ebp+0x8]
6401d1b8:	call   ebx
6401d1ba:	test   eax,eax
6401d1bc:	je     0x6401d23d
6401d1be:	mov    ebx,DWORD PTR [ebp-0x34]
6401d1c1:	cmp    ebx,edi
6401d1c3:	je     0x6401d1e2
6401d1c5:	push   edi
6401d1c6:	push   edi
6401d1c7:	push   DWORD PTR [ebp+0x1c]
6401d1ca:	push   ebx
6401d1cb:	push   esi
6401d1cc:	push   DWORD PTR [ebp-0x1c]
6401d1cf:	push   edi
6401d1d0:	push   DWORD PTR [ebp+0xc]
6401d1d3:	call   DWORD PTR ds:0x64024028
6401d1d9:	test   eax,eax
6401d1db:	je     0x6401d23d
6401d1dd:	mov    DWORD PTR [ebp-0x20],ebx
6401d1e0:	jmp    0x6401d23d
6401d1e2:	cmp    DWORD PTR [ebp-0x2c],edi
6401d1e5:	mov    ebx,DWORD PTR ds:0x64024028
6401d1eb:	jne    0x6401d201
6401d1ed:	push   edi
6401d1ee:	push   edi
6401d1ef:	push   edi
6401d1f0:	push   edi
6401d1f1:	push   esi
6401d1f2:	push   DWORD PTR [ebp-0x1c]
6401d1f5:	push   edi
6401d1f6:	push   DWORD PTR [ebp+0xc]
6401d1f9:	call   ebx
6401d1fb:	mov    esi,eax
6401d1fd:	cmp    esi,edi
6401d1ff:	je     0x6401d23d
6401d201:	push   esi
6401d202:	push   0x1
6401d204:	call   0x64015810
6401d209:	cmp    eax,edi
6401d20b:	pop    ecx
6401d20c:	pop    ecx
6401d20d:	mov    DWORD PTR [ebp-0x20],eax
6401d210:	je     0x6401d23d
6401d212:	push   edi
6401d213:	push   edi
6401d214:	push   esi
6401d215:	push   eax
6401d216:	push   esi
6401d217:	push   DWORD PTR [ebp-0x1c]
6401d21a:	push   edi
6401d21b:	push   DWORD PTR [ebp+0xc]
6401d21e:	call   ebx
6401d220:	cmp    eax,edi
6401d222:	jne    0x6401d232
6401d224:	push   DWORD PTR [ebp-0x20]
6401d227:	call   0x64013396
6401d22c:	pop    ecx
6401d22d:	mov    DWORD PTR [ebp-0x20],edi
6401d230:	jmp    0x6401d23d
6401d232:	cmp    DWORD PTR [ebp-0x24],0xffffffff
6401d236:	je     0x6401d23d
6401d238:	mov    ecx,DWORD PTR [ebp-0x30]
6401d23b:	mov    DWORD PTR [ecx],eax
6401d23d:	push   DWORD PTR [ebp-0x1c]
6401d240:	call   0x64012a12
6401d245:	pop    ecx
6401d246:	mov    eax,DWORD PTR [ebp-0x20]
6401d249:	lea    esp,[ebp-0x40]
6401d24c:	pop    edi
6401d24d:	pop    esi
6401d24e:	pop    ebx
6401d24f:	mov    ecx,DWORD PTR [ebp-0x4]
6401d252:	xor    ecx,ebp
6401d254:	call   0x6401257c
6401d259:	leave  
6401d25a:	ret    
6401d25b:	push   0xc
6401d25d:	push   0x64029ad0
6401d262:	call   0x64013ac0
6401d267:	and    DWORD PTR [ebp-0x4],0x0
6401d26b:	movapd xmm0,xmm1
6401d26f:	mov    DWORD PTR [ebp-0x1c],0x1
6401d276:	jmp    0x6401d29b
6401d278:	mov    eax,DWORD PTR [ebp-0x14]
6401d27b:	mov    eax,DWORD PTR [eax]
6401d27d:	mov    eax,DWORD PTR [eax]
6401d27f:	cmp    eax,0xc0000005
6401d284:	je     0x6401d290
6401d286:	cmp    eax,0xc000001d
6401d28b:	je     0x6401d290
6401d28d:	xor    eax,eax
6401d28f:	ret    
6401d290:	xor    eax,eax
6401d292:	inc    eax
6401d293:	ret    
6401d294:	mov    esp,DWORD PTR [ebp-0x18]
6401d297:	and    DWORD PTR [ebp-0x1c],0x0
6401d29b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401d2a2:	mov    eax,DWORD PTR [ebp-0x1c]
6401d2a5:	call   0x64013b05
6401d2aa:	ret    
6401d2ab:	push   ebp
6401d2ac:	mov    ebp,esp
6401d2ae:	sub    esp,0x18
6401d2b1:	xor    eax,eax
6401d2b3:	push   ebx
6401d2b4:	mov    DWORD PTR [ebp-0x4],eax
6401d2b7:	mov    DWORD PTR [ebp-0xc],eax
6401d2ba:	mov    DWORD PTR [ebp-0x8],eax
6401d2bd:	push   ebx
6401d2be:	pushf  
6401d2bf:	pop    eax
6401d2c0:	mov    ecx,eax
6401d2c2:	xor    eax,0x200000
6401d2c7:	push   eax
6401d2c8:	popf   
6401d2c9:	pushf  
6401d2ca:	pop    edx
6401d2cb:	sub    edx,ecx
6401d2cd:	je     0x6401d2ee
6401d2cf:	push   ecx
6401d2d0:	popf   
6401d2d1:	xor    eax,eax
6401d2d3:	cpuid  
6401d2d5:	mov    DWORD PTR [ebp-0xc],eax
6401d2d8:	mov    DWORD PTR [ebp-0x18],ebx
6401d2db:	mov    DWORD PTR [ebp-0x14],edx
6401d2de:	mov    DWORD PTR [ebp-0x10],ecx
6401d2e1:	mov    eax,0x1
6401d2e6:	cpuid  
6401d2e8:	mov    DWORD PTR [ebp-0x4],edx
6401d2eb:	mov    DWORD PTR [ebp-0x8],eax
6401d2ee:	pop    ebx
6401d2ef:	test   DWORD PTR [ebp-0x4],0x4000000
6401d2f6:	je     0x6401d306
6401d2f8:	call   0x6401d25b
6401d2fd:	test   eax,eax
6401d2ff:	je     0x6401d306
6401d301:	xor    eax,eax
6401d303:	inc    eax
6401d304:	jmp    0x6401d308
6401d306:	xor    eax,eax
6401d308:	pop    ebx
6401d309:	leave  
6401d30a:	ret    
6401d30b:	call   0x6401d2ab
6401d310:	mov    ds:0x64031564,eax
6401d315:	xor    eax,eax
6401d317:	ret    
6401d318:	push   ebp
6401d319:	mov    ebp,esp
6401d31b:	sub    esp,0x10
6401d31e:	push   DWORD PTR [ebp+0x8]
6401d321:	lea    ecx,[ebp-0x10]
6401d324:	call   0x6401271f
6401d329:	movzx  eax,BYTE PTR [ebp+0xc]
6401d32d:	mov    ecx,DWORD PTR [ebp-0xc]
6401d330:	mov    dl,BYTE PTR [ebp+0x14]
6401d333:	test   BYTE PTR [ecx+eax*1+0x1d],dl
6401d337:	jne    0x6401d357
6401d339:	cmp    DWORD PTR [ebp+0x10],0x0
6401d33d:	je     0x6401d351
6401d33f:	mov    ecx,DWORD PTR [ebp-0x10]
6401d342:	mov    ecx,DWORD PTR [ecx+0xc8]
6401d348:	movzx  eax,WORD PTR [ecx+eax*2]
6401d34c:	and    eax,DWORD PTR [ebp+0x10]
6401d34f:	jmp    0x6401d353
6401d351:	xor    eax,eax
6401d353:	test   eax,eax
6401d355:	je     0x6401d35a
6401d357:	xor    eax,eax
6401d359:	inc    eax
6401d35a:	cmp    BYTE PTR [ebp-0x4],0x0
6401d35e:	je     0x6401d367
6401d360:	mov    ecx,DWORD PTR [ebp-0x8]
6401d363:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401d367:	leave  
6401d368:	ret    
6401d369:	push   0x4
6401d36b:	push   0x0
6401d36d:	push   DWORD PTR [esp+0xc]
6401d371:	push   0x0
6401d373:	call   0x6401d318
6401d378:	add    esp,0x10
6401d37b:	ret    
6401d37c:	push   ebp
6401d37d:	mov    ebp,esp
6401d37f:	sub    esp,0x10
6401d382:	push   ebx
6401d383:	push   esi
6401d384:	mov    esi,DWORD PTR [ebp+0xc]
6401d387:	xor    ebx,ebx
6401d389:	cmp    esi,ebx
6401d38b:	push   edi
6401d38c:	mov    edi,DWORD PTR [ebp+0x10]
6401d38f:	jne    0x6401d3a2
6401d391:	cmp    edi,ebx
6401d393:	jbe    0x6401d3a2
6401d395:	mov    eax,DWORD PTR [ebp+0x8]
6401d398:	cmp    eax,ebx
6401d39a:	je     0x6401d39e
6401d39c:	mov    DWORD PTR [eax],ebx
6401d39e:	xor    eax,eax
6401d3a0:	jmp    0x6401d421
6401d3a2:	mov    eax,DWORD PTR [ebp+0x8]
6401d3a5:	cmp    eax,ebx
6401d3a7:	je     0x6401d3ac
6401d3a9:	or     DWORD PTR [eax],0xffffffff
6401d3ac:	cmp    edi,0x7fffffff
6401d3b2:	jbe    0x6401d3cf
6401d3b4:	call   0x640142c0
6401d3b9:	push   0x16
6401d3bb:	pop    esi
6401d3bc:	push   ebx
6401d3bd:	push   ebx
6401d3be:	push   ebx
6401d3bf:	push   ebx
6401d3c0:	push   ebx
6401d3c1:	mov    DWORD PTR [eax],esi
6401d3c3:	call   0x640120b4
6401d3c8:	add    esp,0x14
6401d3cb:	mov    eax,esi
6401d3cd:	jmp    0x6401d421
6401d3cf:	push   DWORD PTR [ebp+0x18]
6401d3d2:	lea    ecx,[ebp-0x10]
6401d3d5:	call   0x6401271f
6401d3da:	mov    eax,DWORD PTR [ebp-0x10]
6401d3dd:	cmp    DWORD PTR [eax+0x14],ebx
6401d3e0:	jne    0x6401d47a
6401d3e6:	mov    ax,WORD PTR [ebp+0x14]
6401d3ea:	cmp    ax,0xff
6401d3ee:	jbe    0x6401d426
6401d3f0:	cmp    esi,ebx
6401d3f2:	je     0x6401d403
6401d3f4:	cmp    edi,ebx
6401d3f6:	jbe    0x6401d403
6401d3f8:	push   edi
6401d3f9:	push   ebx
6401d3fa:	push   esi
6401d3fb:	call   0x64012c00
6401d400:	add    esp,0xc
6401d403:	call   0x640142c0
6401d408:	mov    DWORD PTR [eax],0x2a
6401d40e:	call   0x640142c0
6401d413:	cmp    BYTE PTR [ebp-0x4],bl
6401d416:	mov    eax,DWORD PTR [eax]
6401d418:	je     0x6401d421
6401d41a:	mov    ecx,DWORD PTR [ebp-0x8]
6401d41d:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401d421:	pop    edi
6401d422:	pop    esi
6401d423:	pop    ebx
6401d424:	leave  
6401d425:	ret    
6401d426:	cmp    esi,ebx
6401d428:	je     0x6401d458
6401d42a:	cmp    edi,ebx
6401d42c:	ja     0x6401d456
6401d42e:	call   0x640142c0
6401d433:	push   0x22
6401d435:	pop    esi
6401d436:	push   ebx
6401d437:	push   ebx
6401d438:	push   ebx
6401d439:	push   ebx
6401d43a:	push   ebx
6401d43b:	mov    DWORD PTR [eax],esi
6401d43d:	call   0x640120b4
6401d442:	add    esp,0x14
6401d445:	cmp    BYTE PTR [ebp-0x4],bl
6401d448:	je     0x6401d3cb
6401d44a:	mov    eax,DWORD PTR [ebp-0x8]
6401d44d:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d451:	jmp    0x6401d3cb
6401d456:	mov    BYTE PTR [esi],al
6401d458:	mov    eax,DWORD PTR [ebp+0x8]
6401d45b:	cmp    eax,ebx
6401d45d:	je     0x6401d465
6401d45f:	mov    DWORD PTR [eax],0x1
6401d465:	cmp    BYTE PTR [ebp-0x4],bl
6401d468:	je     0x6401d39e
6401d46e:	mov    eax,DWORD PTR [ebp-0x8]
6401d471:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d475:	jmp    0x6401d39e
6401d47a:	lea    ecx,[ebp+0xc]
6401d47d:	push   ecx
6401d47e:	push   ebx
6401d47f:	push   edi
6401d480:	push   esi
6401d481:	push   0x1
6401d483:	lea    ecx,[ebp+0x14]
6401d486:	push   ecx
6401d487:	push   ebx
6401d488:	mov    DWORD PTR [ebp+0xc],ebx
6401d48b:	push   DWORD PTR [eax+0x4]
6401d48e:	call   DWORD PTR ds:0x64024028
6401d494:	cmp    eax,ebx
6401d496:	je     0x6401d4ac
6401d498:	cmp    DWORD PTR [ebp+0xc],ebx
6401d49b:	jne    0x6401d403
6401d4a1:	mov    ecx,DWORD PTR [ebp+0x8]
6401d4a4:	cmp    ecx,ebx
6401d4a6:	je     0x6401d465
6401d4a8:	mov    DWORD PTR [ecx],eax
6401d4aa:	jmp    0x6401d465
6401d4ac:	call   DWORD PTR ds:0x64024044
6401d4b2:	cmp    eax,0x7a
6401d4b5:	jne    0x6401d403
6401d4bb:	cmp    esi,ebx
6401d4bd:	je     0x6401d42e
6401d4c3:	cmp    edi,ebx
6401d4c5:	jbe    0x6401d42e
6401d4cb:	push   edi
6401d4cc:	push   ebx
6401d4cd:	push   esi
6401d4ce:	call   0x64012c00
6401d4d3:	add    esp,0xc
6401d4d6:	jmp    0x6401d42e
6401d4db:	push   0x0
6401d4dd:	push   DWORD PTR [esp+0x14]
6401d4e1:	push   DWORD PTR [esp+0x14]
6401d4e5:	push   DWORD PTR [esp+0x14]
6401d4e9:	push   DWORD PTR [esp+0x14]
6401d4ed:	call   0x6401d37c
6401d4f2:	add    esp,0x14
6401d4f5:	ret    
6401d4f6:	push   ebp
6401d4f7:	mov    ebp,esp
6401d4f9:	sub    esp,0x20
6401d4fc:	push   ebx
6401d4fd:	push   esi
6401d4fe:	push   edi
6401d4ff:	call   0x640143e6
6401d504:	xor    ebx,ebx
6401d506:	cmp    DWORD PTR ds:0x6402df7c,ebx
6401d50c:	mov    DWORD PTR [ebp-0x8],eax
6401d50f:	mov    DWORD PTR [ebp-0x4],ebx
6401d512:	mov    DWORD PTR [ebp-0xc],ebx
6401d515:	mov    DWORD PTR [ebp-0x10],ebx
6401d518:	jne    0x6401d5cc
6401d51e:	push   0x64026450
6401d523:	call   DWORD PTR ds:0x640240c4
6401d529:	mov    edi,eax
6401d52b:	cmp    edi,ebx
6401d52d:	je     0x6401d6ac
6401d533:	mov    esi,DWORD PTR ds:0x64024014
6401d539:	push   0x64026444
6401d53e:	push   edi
6401d53f:	call   esi
6401d541:	cmp    eax,ebx
6401d543:	je     0x6401d6ac
6401d549:	push   eax
6401d54a:	call   0x64014378
6401d54f:	mov    DWORD PTR [esp],0x64026434
6401d556:	push   edi
6401d557:	mov    ds:0x6402df7c,eax
6401d55c:	call   esi
6401d55e:	push   eax
6401d55f:	call   0x64014378
6401d564:	mov    DWORD PTR [esp],0x64026420
6401d56b:	push   edi
6401d56c:	mov    ds:0x6402df80,eax
6401d571:	call   esi
6401d573:	push   eax
6401d574:	call   0x64014378
6401d579:	mov    ds:0x6402df84,eax
6401d57e:	lea    eax,[ebp-0xc]
6401d581:	push   eax
6401d582:	call   0x640159ef
6401d587:	test   eax,eax
6401d589:	pop    ecx
6401d58a:	pop    ecx
6401d58b:	je     0x6401d59a
6401d58d:	push   ebx
6401d58e:	push   ebx
6401d58f:	push   ebx
6401d590:	push   ebx
6401d591:	push   ebx
6401d592:	call   0x64011fb8
6401d597:	add    esp,0x14
6401d59a:	cmp    DWORD PTR [ebp-0xc],0x2
6401d59e:	jne    0x6401d5cc
6401d5a0:	push   0x64026404
6401d5a5:	push   edi
6401d5a6:	call   esi
6401d5a8:	push   eax
6401d5a9:	call   0x64014378
6401d5ae:	cmp    eax,ebx
6401d5b0:	pop    ecx
6401d5b1:	mov    ds:0x6402df8c,eax
6401d5b6:	je     0x6401d5cc
6401d5b8:	push   0x640263ec
6401d5bd:	push   edi
6401d5be:	call   esi
6401d5c0:	push   eax
6401d5c1:	call   0x64014378
6401d5c6:	pop    ecx
6401d5c7:	mov    ds:0x6402df88,eax
6401d5cc:	mov    eax,ds:0x6402df88
6401d5d1:	mov    ecx,DWORD PTR [ebp-0x8]
6401d5d4:	cmp    eax,ecx
6401d5d6:	je     0x6401d651
6401d5d8:	cmp    DWORD PTR ds:0x6402df8c,ecx
6401d5de:	je     0x6401d651
6401d5e0:	push   eax
6401d5e1:	call   0x640143ef
6401d5e6:	push   DWORD PTR ds:0x6402df8c
6401d5ec:	mov    esi,eax
6401d5ee:	call   0x640143ef
6401d5f3:	cmp    esi,ebx
6401d5f5:	pop    ecx
6401d5f6:	pop    ecx
6401d5f7:	mov    edi,eax
6401d5f9:	je     0x6401d651
6401d5fb:	cmp    edi,ebx
6401d5fd:	je     0x6401d651
6401d5ff:	call   esi
6401d601:	cmp    eax,ebx
6401d603:	je     0x6401d61e
6401d605:	lea    ecx,[ebp-0x14]
6401d608:	push   ecx
6401d609:	push   0xc
6401d60b:	lea    ecx,[ebp-0x20]
6401d60e:	push   ecx
6401d60f:	push   0x1
6401d611:	push   eax
6401d612:	call   edi
6401d614:	test   eax,eax
6401d616:	je     0x6401d61e
6401d618:	test   BYTE PTR [ebp-0x18],0x1
6401d61c:	jne    0x6401d651
6401d61e:	lea    eax,[ebp-0x10]
6401d621:	push   eax
6401d622:	call   0x64015a26
6401d627:	test   eax,eax
6401d629:	pop    ecx
6401d62a:	je     0x6401d639
6401d62c:	push   ebx
6401d62d:	push   ebx
6401d62e:	push   ebx
6401d62f:	push   ebx
6401d630:	push   ebx
6401d631:	call   0x64011fb8
6401d636:	add    esp,0x14
6401d639:	cmp    DWORD PTR [ebp-0x10],0x4
6401d63d:	jb     0x6401d648
6401d63f:	or     DWORD PTR [ebp+0x10],0x200000
6401d646:	jmp    0x6401d68c
6401d648:	or     DWORD PTR [ebp+0x10],0x40000
6401d64f:	jmp    0x6401d68c
6401d651:	mov    eax,ds:0x6402df80
6401d656:	cmp    eax,DWORD PTR [ebp-0x8]
6401d659:	je     0x6401d68c
6401d65b:	push   eax
6401d65c:	call   0x640143ef
6401d661:	cmp    eax,ebx
6401d663:	pop    ecx
6401d664:	je     0x6401d68c
6401d666:	call   eax
6401d668:	cmp    eax,ebx
6401d66a:	mov    DWORD PTR [ebp-0x4],eax
6401d66d:	je     0x6401d68c
6401d66f:	mov    eax,ds:0x6402df84
6401d674:	cmp    eax,DWORD PTR [ebp-0x8]
6401d677:	je     0x6401d68c
6401d679:	push   eax
6401d67a:	call   0x640143ef
6401d67f:	cmp    eax,ebx
6401d681:	pop    ecx
6401d682:	je     0x6401d68c
6401d684:	push   DWORD PTR [ebp-0x4]
6401d687:	call   eax
6401d689:	mov    DWORD PTR [ebp-0x4],eax
6401d68c:	push   DWORD PTR ds:0x6402df7c
6401d692:	call   0x640143ef
6401d697:	cmp    eax,ebx
6401d699:	pop    ecx
6401d69a:	je     0x6401d6ac
6401d69c:	push   DWORD PTR [ebp+0x10]
6401d69f:	push   DWORD PTR [ebp+0xc]
6401d6a2:	push   DWORD PTR [ebp+0x8]
6401d6a5:	push   DWORD PTR [ebp-0x4]
6401d6a8:	call   eax
6401d6aa:	jmp    0x6401d6ae
6401d6ac:	xor    eax,eax
6401d6ae:	pop    edi
6401d6af:	pop    esi
6401d6b0:	pop    ebx
6401d6b1:	leave  
6401d6b2:	ret    
6401d6b3:	mov    ecx,DWORD PTR [esp+0x4]
6401d6b7:	push   esi
6401d6b8:	xor    esi,esi
6401d6ba:	cmp    ecx,esi
6401d6bc:	jl     0x6401d6dc
6401d6be:	cmp    ecx,0x2
6401d6c1:	jle    0x6401d6cf
6401d6c3:	cmp    ecx,0x3
6401d6c6:	jne    0x6401d6dc
6401d6c8:	mov    eax,ds:0x6402d59c
6401d6cd:	pop    esi
6401d6ce:	ret    
6401d6cf:	mov    eax,ds:0x6402d59c
6401d6d4:	mov    DWORD PTR ds:0x6402d59c,ecx
6401d6da:	pop    esi
6401d6db:	ret    
6401d6dc:	call   0x640142c0
6401d6e1:	push   esi
6401d6e2:	push   esi
6401d6e3:	push   esi
6401d6e4:	push   esi
6401d6e5:	push   esi
6401d6e6:	mov    DWORD PTR [eax],0x16
6401d6ec:	call   0x640120b4
6401d6f1:	add    esp,0x14
6401d6f4:	or     eax,0xffffffff
6401d6f7:	pop    esi
6401d6f8:	ret    
6401d6f9:	int3   
6401d6fa:	int3   
6401d6fb:	int3   
6401d6fc:	int3   
6401d6fd:	int3   
6401d6fe:	int3   
6401d6ff:	int3   
6401d700:	mov    eax,DWORD PTR [esp+0x8]
6401d704:	mov    ecx,DWORD PTR [esp+0x10]
6401d708:	or     ecx,eax
6401d70a:	mov    ecx,DWORD PTR [esp+0xc]
6401d70e:	jne    0x6401d719
6401d710:	mov    eax,DWORD PTR [esp+0x4]
6401d714:	mul    ecx
6401d716:	ret    0x10
6401d719:	push   ebx
6401d71a:	mul    ecx
6401d71c:	mov    ebx,eax
6401d71e:	mov    eax,DWORD PTR [esp+0x8]
6401d722:	mul    DWORD PTR [esp+0x14]
6401d726:	add    ebx,eax
6401d728:	mov    eax,DWORD PTR [esp+0x8]
6401d72c:	mul    ecx
6401d72e:	add    edx,ebx
6401d730:	pop    ebx
6401d731:	ret    0x10
6401d734:	push   0xa
6401d736:	push   0x0
6401d738:	push   DWORD PTR [esp+0xc]
6401d73c:	call   0x6401df85
6401d741:	add    esp,0xc
6401d744:	ret    
6401d745:	push   0x2
6401d747:	call   0x64015946
6401d74c:	pop    ecx
6401d74d:	ret    
6401d74e:	mov    ecx,DWORD PTR [esp+0x4]
6401d752:	push   ebx
6401d753:	xor    ebx,ebx
6401d755:	cmp    ecx,ebx
6401d757:	push   esi
6401d758:	push   edi
6401d759:	jl     0x6401d7b6
6401d75b:	cmp    ecx,DWORD PTR ds:0x64031440
6401d761:	jae    0x6401d7b6
6401d763:	mov    eax,ecx
6401d765:	sar    eax,0x5
6401d768:	mov    esi,ecx
6401d76a:	lea    edi,[eax*4+0x64031460]
6401d771:	mov    eax,DWORD PTR [edi]
6401d773:	and    esi,0x1f
6401d776:	shl    esi,0x6
6401d779:	add    eax,esi
6401d77b:	test   BYTE PTR [eax+0x4],0x1
6401d77f:	je     0x6401d7b6
6401d781:	cmp    DWORD PTR [eax],0xffffffff
6401d784:	je     0x6401d7b6
6401d786:	cmp    DWORD PTR ds:0x6402d5a0,0x1
6401d78d:	jne    0x6401d7ac
6401d78f:	sub    ecx,ebx
6401d791:	je     0x6401d7a3
6401d793:	dec    ecx
6401d794:	je     0x6401d79e
6401d796:	dec    ecx
6401d797:	jne    0x6401d7ac
6401d799:	push   ebx
6401d79a:	push   0xfffffff4
6401d79c:	jmp    0x6401d7a6
6401d79e:	push   ebx
6401d79f:	push   0xfffffff5
6401d7a1:	jmp    0x6401d7a6
6401d7a3:	push   ebx
6401d7a4:	push   0xfffffff6
6401d7a6:	call   DWORD PTR ds:0x640240b8
6401d7ac:	mov    eax,DWORD PTR [edi]
6401d7ae:	or     DWORD PTR [esi+eax*1],0xffffffff
6401d7b2:	xor    eax,eax
6401d7b4:	jmp    0x6401d7cb
6401d7b6:	call   0x640142c0
6401d7bb:	mov    DWORD PTR [eax],0x9
6401d7c1:	call   0x640142d3
6401d7c6:	mov    DWORD PTR [eax],ebx
6401d7c8:	or     eax,0xffffffff
6401d7cb:	pop    edi
6401d7cc:	pop    esi
6401d7cd:	pop    ebx
6401d7ce:	ret    
6401d7cf:	mov    eax,DWORD PTR [esp+0x4]
6401d7d3:	cmp    eax,0xfffffffe
6401d7d6:	jne    0x6401d7ef
6401d7d8:	call   0x640142d3
6401d7dd:	and    DWORD PTR [eax],0x0
6401d7e0:	call   0x640142c0
6401d7e5:	mov    DWORD PTR [eax],0x9
6401d7eb:	or     eax,0xffffffff
6401d7ee:	ret    
6401d7ef:	push   esi
6401d7f0:	xor    esi,esi
6401d7f2:	cmp    eax,esi
6401d7f4:	jl     0x6401d818
6401d7f6:	cmp    eax,DWORD PTR ds:0x64031440
6401d7fc:	jae    0x6401d818
6401d7fe:	mov    ecx,eax
6401d800:	and    eax,0x1f
6401d803:	sar    ecx,0x5
6401d806:	mov    ecx,DWORD PTR [ecx*4+0x64031460]
6401d80d:	shl    eax,0x6
6401d810:	add    eax,ecx
6401d812:	test   BYTE PTR [eax+0x4],0x1
6401d816:	jne    0x6401d83c
6401d818:	call   0x640142d3
6401d81d:	mov    DWORD PTR [eax],esi
6401d81f:	call   0x640142c0
6401d824:	push   esi
6401d825:	push   esi
6401d826:	push   esi
6401d827:	push   esi
6401d828:	push   esi
6401d829:	mov    DWORD PTR [eax],0x9
6401d82f:	call   0x640120b4
6401d834:	add    esp,0x14
6401d837:	or     eax,0xffffffff
6401d83a:	pop    esi
6401d83b:	ret    
6401d83c:	mov    eax,DWORD PTR [eax]
6401d83e:	pop    esi
6401d83f:	ret    
6401d840:	push   0xc
6401d842:	push   0x64029af0
6401d847:	call   0x64013ac0
6401d84c:	mov    edi,DWORD PTR [ebp+0x8]
6401d84f:	mov    eax,edi
6401d851:	sar    eax,0x5
6401d854:	mov    esi,edi
6401d856:	and    esi,0x1f
6401d859:	shl    esi,0x6
6401d85c:	add    esi,DWORD PTR [eax*4+0x64031460]
6401d863:	mov    DWORD PTR [ebp-0x1c],0x1
6401d86a:	xor    ebx,ebx
6401d86c:	cmp    DWORD PTR [esi+0x8],ebx
6401d86f:	jne    0x6401d8a7
6401d871:	push   0xa
6401d873:	call   0x64019ac5
6401d878:	pop    ecx
6401d879:	mov    DWORD PTR [ebp-0x4],ebx
6401d87c:	cmp    DWORD PTR [esi+0x8],ebx
6401d87f:	jne    0x6401d89b
6401d881:	push   0xfa0
6401d886:	lea    eax,[esi+0xc]
6401d889:	push   eax
6401d88a:	call   0x6401b178
6401d88f:	pop    ecx
6401d890:	pop    ecx
6401d891:	test   eax,eax
6401d893:	jne    0x6401d898
6401d895:	mov    DWORD PTR [ebp-0x1c],ebx
6401d898:	inc    DWORD PTR [esi+0x8]
6401d89b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401d8a2:	call   0x6401d8d7
6401d8a7:	cmp    DWORD PTR [ebp-0x1c],ebx
6401d8aa:	je     0x6401d8c9
6401d8ac:	mov    eax,edi
6401d8ae:	sar    eax,0x5
6401d8b1:	and    edi,0x1f
6401d8b4:	shl    edi,0x6
6401d8b7:	mov    eax,DWORD PTR [eax*4+0x64031460]
6401d8be:	lea    eax,[eax+edi*1+0xc]
6401d8c2:	push   eax
6401d8c3:	call   DWORD PTR ds:0x6402409c
6401d8c9:	mov    eax,DWORD PTR [ebp-0x1c]
6401d8cc:	call   0x64013b05
6401d8d1:	ret    
6401d8d2:	xor    ebx,ebx
6401d8d4:	mov    edi,DWORD PTR [ebp+0x8]
6401d8d7:	push   0xa
6401d8d9:	call   0x640199ed
6401d8de:	pop    ecx
6401d8df:	ret    
6401d8e0:	mov    eax,DWORD PTR [esp+0x4]
6401d8e4:	mov    ecx,eax
6401d8e6:	and    eax,0x1f
6401d8e9:	sar    ecx,0x5
6401d8ec:	mov    ecx,DWORD PTR [ecx*4+0x64031460]
6401d8f3:	shl    eax,0x6
6401d8f6:	lea    eax,[ecx+eax*1+0xc]
6401d8fa:	push   eax
6401d8fb:	call   DWORD PTR ds:0x640240a0
6401d901:	ret    
6401d902:	push   ebp
6401d903:	mov    ebp,esp
6401d905:	sub    esp,0x10
6401d908:	mov    eax,ds:0x6402c09c
6401d90d:	xor    eax,ebp
6401d90f:	mov    DWORD PTR [ebp-0x4],eax
6401d912:	push   esi
6401d913:	xor    esi,esi
6401d915:	cmp    DWORD PTR ds:0x6402cfb0,esi
6401d91b:	je     0x6401d96b
6401d91d:	cmp    DWORD PTR ds:0x6402d024,0xfffffffe
6401d924:	jne    0x6401d92b
6401d926:	call   0x6401e011
6401d92b:	mov    eax,ds:0x6402d024
6401d930:	cmp    eax,0xffffffff
6401d933:	jne    0x6401d93b
6401d935:	or     ax,0xffff
6401d939:	jmp    0x6401d9ab
6401d93b:	push   esi
6401d93c:	lea    ecx,[ebp-0x10]
6401d93f:	push   ecx
6401d940:	push   0x1
6401d942:	lea    ecx,[ebp+0x8]
6401d945:	push   ecx
6401d946:	push   eax
6401d947:	call   DWORD PTR ds:0x640240a8
6401d94d:	test   eax,eax
6401d94f:	jne    0x6401d9b8
6401d951:	cmp    DWORD PTR ds:0x6402cfb0,0x2
6401d958:	jne    0x6401d935
6401d95a:	call   DWORD PTR ds:0x64024044
6401d960:	cmp    eax,0x78
6401d963:	jne    0x6401d935
6401d965:	mov    DWORD PTR ds:0x6402cfb0,esi
6401d96b:	push   esi
6401d96c:	push   esi
6401d96d:	push   0x5
6401d96f:	lea    eax,[ebp-0xc]
6401d972:	push   eax
6401d973:	push   0x1
6401d975:	lea    eax,[ebp+0x8]
6401d978:	push   eax
6401d979:	push   esi
6401d97a:	call   DWORD PTR ds:0x64024090
6401d980:	push   eax
6401d981:	call   DWORD PTR ds:0x64024028
6401d987:	mov    ecx,DWORD PTR ds:0x6402d024
6401d98d:	cmp    ecx,0xffffffff
6401d990:	je     0x6401d935
6401d992:	push   esi
6401d993:	lea    edx,[ebp-0x10]
6401d996:	push   edx
6401d997:	push   eax
6401d998:	lea    eax,[ebp-0xc]
6401d99b:	push   eax
6401d99c:	push   ecx
6401d99d:	call   DWORD PTR ds:0x64024094
6401d9a3:	test   eax,eax
6401d9a5:	je     0x6401d935
6401d9a7:	mov    ax,WORD PTR [ebp+0x8]
6401d9ab:	mov    ecx,DWORD PTR [ebp-0x4]
6401d9ae:	xor    ecx,ebp
6401d9b0:	pop    esi
6401d9b1:	call   0x6401257c
6401d9b6:	leave  
6401d9b7:	ret    
6401d9b8:	mov    DWORD PTR ds:0x6402cfb0,0x1
6401d9c2:	jmp    0x6401d9a7
6401d9c4:	push   0x10
6401d9c6:	push   0x64029b10
6401d9cb:	call   0x64013ac0
6401d9d0:	xor    ebx,ebx
6401d9d2:	mov    DWORD PTR [ebp-0x1c],ebx
6401d9d5:	push   0x1
6401d9d7:	call   0x64019ac5
6401d9dc:	pop    ecx
6401d9dd:	mov    DWORD PTR [ebp-0x4],ebx
6401d9e0:	push   0x3
6401d9e2:	pop    edi
6401d9e3:	mov    DWORD PTR [ebp-0x20],edi
6401d9e6:	cmp    edi,DWORD PTR ds:0x64031420
6401d9ec:	jge    0x6401da45
6401d9ee:	mov    esi,edi
6401d9f0:	shl    esi,0x2
6401d9f3:	mov    eax,ds:0x64030400
6401d9f8:	add    eax,esi
6401d9fa:	cmp    DWORD PTR [eax],ebx
6401d9fc:	je     0x6401da42
6401d9fe:	mov    eax,DWORD PTR [eax]
6401da00:	test   BYTE PTR [eax+0xc],0x83
6401da04:	je     0x6401da15
6401da06:	push   eax
6401da07:	call   0x6401e0cf
6401da0c:	pop    ecx
6401da0d:	cmp    eax,0xffffffff
6401da10:	je     0x6401da15
6401da12:	inc    DWORD PTR [ebp-0x1c]
6401da15:	cmp    edi,0x14
6401da18:	jl     0x6401da42
6401da1a:	mov    eax,ds:0x64030400
6401da1f:	mov    eax,DWORD PTR [esi+eax*1]
6401da22:	add    eax,0x20
6401da25:	push   eax
6401da26:	call   DWORD PTR ds:0x640240a4
6401da2c:	mov    eax,ds:0x64030400
6401da31:	push   DWORD PTR [esi+eax*1]
6401da34:	call   0x64013396
6401da39:	pop    ecx
6401da3a:	mov    eax,ds:0x64030400
6401da3f:	mov    DWORD PTR [esi+eax*1],ebx
6401da42:	inc    edi
6401da43:	jmp    0x6401d9e3
6401da45:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401da4c:	call   0x6401da5a
6401da51:	mov    eax,DWORD PTR [ebp-0x1c]
6401da54:	call   0x64013b05
6401da59:	ret    
6401da5a:	push   0x1
6401da5c:	call   0x640199ed
6401da61:	pop    ecx
6401da62:	ret    
6401da63:	push   ebx
6401da64:	push   esi
6401da65:	mov    esi,DWORD PTR [esp+0xc]
6401da69:	mov    eax,DWORD PTR [esi+0xc]
6401da6c:	mov    ecx,eax
6401da6e:	and    cl,0x3
6401da71:	xor    ebx,ebx
6401da73:	cmp    cl,0x2
6401da76:	jne    0x6401dab7
6401da78:	test   ax,0x108
6401da7c:	je     0x6401dab7
6401da7e:	mov    eax,DWORD PTR [esi+0x8]
6401da81:	push   edi
6401da82:	mov    edi,DWORD PTR [esi]
6401da84:	sub    edi,eax
6401da86:	test   edi,edi
6401da88:	jle    0x6401dab6
6401da8a:	push   edi
6401da8b:	push   eax
6401da8c:	push   esi
6401da8d:	call   0x6401c31d
6401da92:	pop    ecx
6401da93:	push   eax
6401da94:	call   0x6401bffe
6401da99:	add    esp,0xc
6401da9c:	cmp    eax,edi
6401da9e:	jne    0x6401daaf
6401daa0:	mov    eax,DWORD PTR [esi+0xc]
6401daa3:	test   al,al
6401daa5:	jns    0x6401dab6
6401daa7:	and    eax,0xfffffffd
6401daaa:	mov    DWORD PTR [esi+0xc],eax
6401daad:	jmp    0x6401dab6
6401daaf:	or     DWORD PTR [esi+0xc],0x20
6401dab3:	or     ebx,0xffffffff
6401dab6:	pop    edi
6401dab7:	mov    eax,DWORD PTR [esi+0x8]
6401daba:	and    DWORD PTR [esi+0x4],0x0
6401dabe:	mov    DWORD PTR [esi],eax
6401dac0:	pop    esi
6401dac1:	mov    eax,ebx
6401dac3:	pop    ebx
6401dac4:	ret    
6401dac5:	push   esi
6401dac6:	mov    esi,DWORD PTR [esp+0x8]
6401daca:	test   esi,esi
6401dacc:	jne    0x6401dad7
6401dace:	push   esi
6401dacf:	call   0x6401db07
6401dad4:	pop    ecx
6401dad5:	pop    esi
6401dad6:	ret    
6401dad7:	push   esi
6401dad8:	call   0x6401da63
6401dadd:	test   eax,eax
6401dadf:	pop    ecx
6401dae0:	je     0x6401dae7
6401dae2:	or     eax,0xffffffff
6401dae5:	pop    esi
6401dae6:	ret    
6401dae7:	test   WORD PTR [esi+0xc],0x4000
6401daed:	je     0x6401db03
6401daef:	push   esi
6401daf0:	call   0x6401c31d
6401daf5:	push   eax
6401daf6:	call   0x6401e14b
6401dafb:	pop    ecx
6401dafc:	pop    ecx
6401dafd:	neg    eax
6401daff:	sbb    eax,eax
6401db01:	pop    esi
6401db02:	ret    
6401db03:	xor    eax,eax
6401db05:	pop    esi
6401db06:	ret    
6401db07:	push   0x14
6401db09:	push   0x64029b30
6401db0e:	call   0x64013ac0
6401db13:	xor    edi,edi
6401db15:	mov    DWORD PTR [ebp-0x1c],edi
6401db18:	mov    DWORD PTR [ebp-0x24],edi
6401db1b:	push   0x1
6401db1d:	call   0x64019ac5
6401db22:	pop    ecx
6401db23:	mov    DWORD PTR [ebp-0x4],edi
6401db26:	xor    esi,esi
6401db28:	mov    DWORD PTR [ebp-0x20],esi
6401db2b:	cmp    esi,DWORD PTR ds:0x64031420
6401db31:	jge    0x6401dbba
6401db37:	mov    eax,ds:0x64030400
6401db3c:	lea    eax,[eax+esi*4]
6401db3f:	cmp    DWORD PTR [eax],edi
6401db41:	je     0x6401dba1
6401db43:	mov    eax,DWORD PTR [eax]
6401db45:	test   BYTE PTR [eax+0xc],0x83
6401db49:	je     0x6401dba1
6401db4b:	push   eax
6401db4c:	push   esi
6401db4d:	call   0x6401c28f
6401db52:	pop    ecx
6401db53:	pop    ecx
6401db54:	xor    edx,edx
6401db56:	inc    edx
6401db57:	mov    DWORD PTR [ebp-0x4],edx
6401db5a:	mov    eax,ds:0x64030400
6401db5f:	mov    eax,DWORD PTR [eax+esi*4]
6401db62:	mov    ecx,DWORD PTR [eax+0xc]
6401db65:	test   cl,0x83
6401db68:	je     0x6401db99
6401db6a:	cmp    DWORD PTR [ebp+0x8],edx
6401db6d:	jne    0x6401db80
6401db6f:	push   eax
6401db70:	call   0x6401dac5
6401db75:	pop    ecx
6401db76:	cmp    eax,0xffffffff
6401db79:	je     0x6401db99
6401db7b:	inc    DWORD PTR [ebp-0x1c]
6401db7e:	jmp    0x6401db99
6401db80:	cmp    DWORD PTR [ebp+0x8],edi
6401db83:	jne    0x6401db99
6401db85:	test   cl,0x2
6401db88:	je     0x6401db99
6401db8a:	push   eax
6401db8b:	call   0x6401dac5
6401db90:	pop    ecx
6401db91:	cmp    eax,0xffffffff
6401db94:	jne    0x6401db99
6401db96:	or     DWORD PTR [ebp-0x24],eax
6401db99:	mov    DWORD PTR [ebp-0x4],edi
6401db9c:	call   0x6401dba9
6401dba1:	inc    esi
6401dba2:	jmp    0x6401db28
6401dba4:	xor    edi,edi
6401dba6:	mov    esi,DWORD PTR [ebp-0x20]
6401dba9:	mov    eax,ds:0x64030400
6401dbae:	push   DWORD PTR [eax+esi*4]
6401dbb1:	push   esi
6401dbb2:	call   0x6401c2f3
6401dbb7:	pop    ecx
6401dbb8:	pop    ecx
6401dbb9:	ret    
6401dbba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401dbc1:	call   0x6401dbd8
6401dbc6:	cmp    DWORD PTR [ebp+0x8],0x1
6401dbca:	mov    eax,DWORD PTR [ebp-0x1c]
6401dbcd:	je     0x6401dbd2
6401dbcf:	mov    eax,DWORD PTR [ebp-0x24]
6401dbd2:	call   0x64013b05
6401dbd7:	ret    
6401dbd8:	push   0x1
6401dbda:	call   0x640199ed
6401dbdf:	pop    ecx
6401dbe0:	ret    
6401dbe1:	push   0x1
6401dbe3:	call   0x6401db07
6401dbe8:	pop    ecx
6401dbe9:	ret    
6401dbea:	push   ebp
6401dbeb:	mov    ebp,esp
6401dbed:	push   ecx
6401dbee:	push   esi
6401dbef:	mov    esi,DWORD PTR [ebp+0xc]
6401dbf2:	push   esi
6401dbf3:	call   0x6401c31d
6401dbf8:	mov    DWORD PTR [ebp+0xc],eax
6401dbfb:	mov    eax,DWORD PTR [esi+0xc]
6401dbfe:	test   al,0x82
6401dc00:	pop    ecx
6401dc01:	jne    0x6401dc1c
6401dc03:	call   0x640142c0
6401dc08:	mov    DWORD PTR [eax],0x9
6401dc0e:	or     DWORD PTR [esi+0xc],0x20
6401dc12:	mov    eax,0xffff
6401dc17:	jmp    0x6401dd57
6401dc1c:	test   al,0x40
6401dc1e:	je     0x6401dc2d
6401dc20:	call   0x640142c0
6401dc25:	mov    DWORD PTR [eax],0x22
6401dc2b:	jmp    0x6401dc0e
6401dc2d:	test   al,0x1
6401dc2f:	je     0x6401dc48
6401dc31:	and    DWORD PTR [esi+0x4],0x0
6401dc35:	test   al,0x10
6401dc37:	je     0x6401dcc8
6401dc3d:	mov    ecx,DWORD PTR [esi+0x8]
6401dc40:	and    eax,0xfffffffe
6401dc43:	mov    DWORD PTR [esi],ecx
6401dc45:	mov    DWORD PTR [esi+0xc],eax
6401dc48:	mov    eax,DWORD PTR [esi+0xc]
6401dc4b:	and    DWORD PTR [esi+0x4],0x0
6401dc4f:	and    DWORD PTR [ebp-0x4],0x0
6401dc53:	push   ebx
6401dc54:	push   0x2
6401dc56:	and    eax,0xffffffef
6401dc59:	pop    ebx
6401dc5a:	or     eax,ebx
6401dc5c:	test   ax,0x10c
6401dc60:	mov    DWORD PTR [esi+0xc],eax
6401dc63:	jne    0x6401dc91
6401dc65:	call   0x6401c17c
6401dc6a:	add    eax,0x20
6401dc6d:	cmp    esi,eax
6401dc6f:	je     0x6401dc7d
6401dc71:	call   0x6401c17c
6401dc76:	add    eax,0x40
6401dc79:	cmp    esi,eax
6401dc7b:	jne    0x6401dc8a
6401dc7d:	push   DWORD PTR [ebp+0xc]
6401dc80:	call   0x6401c11e
6401dc85:	test   eax,eax
6401dc87:	pop    ecx
6401dc88:	jne    0x6401dc91
6401dc8a:	push   esi
6401dc8b:	call   0x6401c0da
6401dc90:	pop    ecx
6401dc91:	test   WORD PTR [esi+0xc],0x108
6401dc97:	push   edi
6401dc98:	je     0x6401dd21
6401dc9e:	mov    eax,DWORD PTR [esi+0x8]
6401dca1:	mov    edi,DWORD PTR [esi]
6401dca3:	lea    ecx,[eax+0x2]
6401dca6:	mov    DWORD PTR [esi],ecx
6401dca8:	mov    ecx,DWORD PTR [esi+0x18]
6401dcab:	sub    edi,eax
6401dcad:	sub    ecx,ebx
6401dcaf:	test   edi,edi
6401dcb1:	mov    DWORD PTR [esi+0x4],ecx
6401dcb4:	jle    0x6401dcd3
6401dcb6:	push   edi
6401dcb7:	push   eax
6401dcb8:	push   DWORD PTR [ebp+0xc]
6401dcbb:	call   0x6401bffe
6401dcc0:	add    esp,0xc
6401dcc3:	mov    DWORD PTR [ebp-0x4],eax
6401dcc6:	jmp    0x6401dd16
6401dcc8:	or     eax,0x20
6401dccb:	mov    DWORD PTR [esi+0xc],eax
6401dcce:	jmp    0x6401dc12
6401dcd3:	mov    ecx,DWORD PTR [ebp+0xc]
6401dcd6:	cmp    ecx,0xffffffff
6401dcd9:	je     0x6401dcf6
6401dcdb:	cmp    ecx,0xfffffffe
6401dcde:	je     0x6401dcf6
6401dce0:	mov    eax,ecx
6401dce2:	and    eax,0x1f
6401dce5:	mov    edx,ecx
6401dce7:	sar    edx,0x5
6401dcea:	shl    eax,0x6
6401dced:	add    eax,DWORD PTR [edx*4+0x64031460]
6401dcf4:	jmp    0x6401dcfb
6401dcf6:	mov    eax,0x6402c880
6401dcfb:	test   BYTE PTR [eax+0x4],0x20
6401dcff:	je     0x6401dd16
6401dd01:	push   ebx
6401dd02:	push   0x0
6401dd04:	push   0x0
6401dd06:	push   ecx
6401dd07:	call   0x6401b8c3
6401dd0c:	and    eax,edx
6401dd0e:	add    esp,0x10
6401dd11:	cmp    eax,0xffffffff
6401dd14:	je     0x6401dd43
6401dd16:	mov    eax,DWORD PTR [esi+0x8]
6401dd19:	mov    ebx,DWORD PTR [ebp+0x8]
6401dd1c:	mov    WORD PTR [eax],bx
6401dd1f:	jmp    0x6401dd3e
6401dd21:	push   0x2
6401dd23:	lea    eax,[ebp-0x4]
6401dd26:	push   eax
6401dd27:	push   DWORD PTR [ebp+0xc]
6401dd2a:	mov    edi,ebx
6401dd2c:	mov    ebx,DWORD PTR [ebp+0x8]
6401dd2f:	mov    WORD PTR [ebp-0x4],bx
6401dd33:	call   0x6401bffe
6401dd38:	add    esp,0xc
6401dd3b:	mov    DWORD PTR [ebp-0x4],eax
6401dd3e:	cmp    DWORD PTR [ebp-0x4],edi
6401dd41:	je     0x6401dd4e
6401dd43:	or     DWORD PTR [esi+0xc],0x20
6401dd47:	mov    eax,0xffff
6401dd4c:	jmp    0x6401dd55
6401dd4e:	mov    eax,ebx
6401dd50:	and    eax,0xffff
6401dd55:	pop    edi
6401dd56:	pop    ebx
6401dd57:	pop    esi
6401dd58:	leave  
6401dd59:	ret    
6401dd5a:	push   ebp
6401dd5b:	mov    ebp,esp
6401dd5d:	sub    esp,0x14
6401dd60:	push   esi
6401dd61:	push   edi
6401dd62:	push   DWORD PTR [ebp+0x8]
6401dd65:	lea    ecx,[ebp-0x14]
6401dd68:	call   0x6401271f
6401dd6d:	mov    eax,DWORD PTR [ebp+0x10]
6401dd70:	mov    esi,DWORD PTR [ebp+0xc]
6401dd73:	xor    edi,edi
6401dd75:	cmp    eax,edi
6401dd77:	je     0x6401dd7b
6401dd79:	mov    DWORD PTR [eax],esi
6401dd7b:	cmp    esi,edi
6401dd7d:	jne    0x6401ddab
6401dd7f:	call   0x640142c0
6401dd84:	push   edi
6401dd85:	push   edi
6401dd86:	push   edi
6401dd87:	push   edi
6401dd88:	push   edi
6401dd89:	mov    DWORD PTR [eax],0x16
6401dd8f:	call   0x640120b4
6401dd94:	add    esp,0x14
6401dd97:	cmp    BYTE PTR [ebp-0x8],0x0
6401dd9b:	je     0x6401dda4
6401dd9d:	mov    eax,DWORD PTR [ebp-0xc]
6401dda0:	and    DWORD PTR [eax+0x70],0xfffffffd
6401dda4:	xor    eax,eax
6401dda6:	jmp    0x6401df81
6401ddab:	cmp    DWORD PTR [ebp+0x14],edi
6401ddae:	je     0x6401ddbc
6401ddb0:	cmp    DWORD PTR [ebp+0x14],0x2
6401ddb4:	jl     0x6401dd7f
6401ddb6:	cmp    DWORD PTR [ebp+0x14],0x24
6401ddba:	jg     0x6401dd7f
6401ddbc:	mov    ecx,DWORD PTR [ebp-0x14]
6401ddbf:	push   ebx
6401ddc0:	mov    bl,BYTE PTR [esi]
6401ddc2:	mov    DWORD PTR [ebp-0x4],edi
6401ddc5:	lea    edi,[esi+0x1]
6401ddc8:	cmp    DWORD PTR [ecx+0xac],0x1
6401ddcf:	jle    0x6401dde8
6401ddd1:	lea    eax,[ebp-0x14]
6401ddd4:	push   eax
6401ddd5:	movzx  eax,bl
6401ddd8:	push   0x8
6401ddda:	push   eax
6401dddb:	call   0x64019470
6401dde0:	mov    ecx,DWORD PTR [ebp-0x14]
6401dde3:	add    esp,0xc
6401dde6:	jmp    0x6401ddf8
6401dde8:	mov    edx,DWORD PTR [ecx+0xc8]
6401ddee:	movzx  eax,bl
6401ddf1:	movzx  eax,BYTE PTR [edx+eax*2]
6401ddf5:	and    eax,0x8
6401ddf8:	test   eax,eax
6401ddfa:	je     0x6401de01
6401ddfc:	mov    bl,BYTE PTR [edi]
6401ddfe:	inc    edi
6401ddff:	jmp    0x6401ddc8
6401de01:	cmp    bl,0x2d
6401de04:	jne    0x6401de0c
6401de06:	or     DWORD PTR [ebp+0x18],0x2
6401de0a:	jmp    0x6401de11
6401de0c:	cmp    bl,0x2b
6401de0f:	jne    0x6401de14
6401de11:	mov    bl,BYTE PTR [edi]
6401de13:	inc    edi
6401de14:	mov    eax,DWORD PTR [ebp+0x14]
6401de17:	test   eax,eax
6401de19:	jl     0x6401df68
6401de1f:	cmp    eax,0x1
6401de22:	je     0x6401df68
6401de28:	cmp    eax,0x24
6401de2b:	jg     0x6401df68
6401de31:	test   eax,eax
6401de33:	jne    0x6401de5f
6401de35:	cmp    bl,0x30
6401de38:	je     0x6401de43
6401de3a:	mov    DWORD PTR [ebp+0x14],0xa
6401de41:	jmp    0x6401de77
6401de43:	mov    al,BYTE PTR [edi]
6401de45:	cmp    al,0x78
6401de47:	je     0x6401de56
6401de49:	cmp    al,0x58
6401de4b:	je     0x6401de56
6401de4d:	mov    DWORD PTR [ebp+0x14],0x8
6401de54:	jmp    0x6401de77
6401de56:	mov    DWORD PTR [ebp+0x14],0x10
6401de5d:	jmp    0x6401de69
6401de5f:	cmp    eax,0x10
6401de62:	jne    0x6401de77
6401de64:	cmp    bl,0x30
6401de67:	jne    0x6401de77
6401de69:	mov    al,BYTE PTR [edi]
6401de6b:	cmp    al,0x78
6401de6d:	je     0x6401de73
6401de6f:	cmp    al,0x58
6401de71:	jne    0x6401de77
6401de73:	inc    edi
6401de74:	mov    bl,BYTE PTR [edi]
6401de76:	inc    edi
6401de77:	mov    esi,DWORD PTR [ecx+0xc8]
6401de7d:	or     eax,0xffffffff
6401de80:	xor    edx,edx
6401de82:	div    DWORD PTR [ebp+0x14]
6401de85:	movzx  ecx,bl
6401de88:	movzx  ecx,WORD PTR [esi+ecx*2]
6401de8c:	test   cl,0x4
6401de8f:	je     0x6401de99
6401de91:	movsx  ecx,bl
6401de94:	sub    ecx,0x30
6401de97:	jmp    0x6401deb3
6401de99:	test   cx,0x103
6401de9e:	je     0x6401ded1
6401dea0:	mov    cl,bl
6401dea2:	sub    cl,0x61
6401dea5:	cmp    cl,0x19
6401dea8:	movsx  ecx,bl
6401deab:	ja     0x6401deb0
6401dead:	sub    ecx,0x20
6401deb0:	add    ecx,0xffffffc9
6401deb3:	cmp    ecx,DWORD PTR [ebp+0x14]
6401deb6:	jae    0x6401ded1
6401deb8:	or     DWORD PTR [ebp+0x18],0x8
6401debc:	cmp    DWORD PTR [ebp-0x4],eax
6401debf:	jb     0x6401dee8
6401dec1:	jne    0x6401dec7
6401dec3:	cmp    ecx,edx
6401dec5:	jbe    0x6401dee8
6401dec7:	or     DWORD PTR [ebp+0x18],0x4
6401decb:	cmp    DWORD PTR [ebp+0x10],0x0
6401decf:	jne    0x6401def4
6401ded1:	mov    eax,DWORD PTR [ebp+0x18]
6401ded4:	dec    edi
6401ded5:	test   al,0x8
6401ded7:	jne    0x6401def9
6401ded9:	cmp    DWORD PTR [ebp+0x10],0x0
6401dedd:	je     0x6401dee2
6401dedf:	mov    edi,DWORD PTR [ebp+0xc]
6401dee2:	and    DWORD PTR [ebp-0x4],0x0
6401dee6:	jmp    0x6401df44
6401dee8:	mov    ebx,DWORD PTR [ebp-0x4]
6401deeb:	imul   ebx,DWORD PTR [ebp+0x14]
6401deef:	add    ebx,ecx
6401def1:	mov    DWORD PTR [ebp-0x4],ebx
6401def4:	mov    bl,BYTE PTR [edi]
6401def6:	inc    edi
6401def7:	jmp    0x6401de85
6401def9:	test   al,0x4
6401defb:	mov    esi,0x7fffffff
6401df00:	jne    0x6401df1d
6401df02:	test   al,0x1
6401df04:	jne    0x6401df44
6401df06:	and    eax,0x2
6401df09:	je     0x6401df14
6401df0b:	cmp    DWORD PTR [ebp-0x4],0x80000000
6401df12:	ja     0x6401df1d
6401df14:	test   eax,eax
6401df16:	jne    0x6401df44
6401df18:	cmp    DWORD PTR [ebp-0x4],esi
6401df1b:	jbe    0x6401df44
6401df1d:	call   0x640142c0
6401df22:	test   BYTE PTR [ebp+0x18],0x1
6401df26:	mov    DWORD PTR [eax],0x22
6401df2c:	je     0x6401df34
6401df2e:	or     DWORD PTR [ebp-0x4],0xffffffff
6401df32:	jmp    0x6401df44
6401df34:	mov    al,BYTE PTR [ebp+0x18]
6401df37:	and    al,0x2
6401df39:	neg    al
6401df3b:	sbb    eax,eax
6401df3d:	neg    eax
6401df3f:	add    eax,esi
6401df41:	mov    DWORD PTR [ebp-0x4],eax
6401df44:	mov    eax,DWORD PTR [ebp+0x10]
6401df47:	test   eax,eax
6401df49:	je     0x6401df4d
6401df4b:	mov    DWORD PTR [eax],edi
6401df4d:	test   BYTE PTR [ebp+0x18],0x2
6401df51:	je     0x6401df56
6401df53:	neg    DWORD PTR [ebp-0x4]
6401df56:	cmp    BYTE PTR [ebp-0x8],0x0
6401df5a:	je     0x6401df63
6401df5c:	mov    eax,DWORD PTR [ebp-0xc]
6401df5f:	and    DWORD PTR [eax+0x70],0xfffffffd
6401df63:	mov    eax,DWORD PTR [ebp-0x4]
6401df66:	jmp    0x6401df80
6401df68:	mov    eax,DWORD PTR [ebp+0x10]
6401df6b:	test   eax,eax
6401df6d:	je     0x6401df71
6401df6f:	mov    DWORD PTR [eax],esi
6401df71:	cmp    BYTE PTR [ebp-0x8],0x0
6401df75:	je     0x6401df7e
6401df77:	mov    eax,DWORD PTR [ebp-0xc]
6401df7a:	and    DWORD PTR [eax+0x70],0xfffffffd
6401df7e:	xor    eax,eax
6401df80:	pop    ebx
6401df81:	pop    edi
6401df82:	pop    esi
6401df83:	leave  
6401df84:	ret    
6401df85:	push   ebp
6401df86:	mov    ebp,esp
6401df88:	xor    eax,eax
6401df8a:	cmp    DWORD PTR ds:0x6402d954,eax
6401df90:	push   eax
6401df91:	push   DWORD PTR [ebp+0x10]
6401df94:	push   DWORD PTR [ebp+0xc]
6401df97:	push   DWORD PTR [ebp+0x8]
6401df9a:	jne    0x6401dfa3
6401df9c:	push   0x6402c878
6401dfa1:	jmp    0x6401dfa4
6401dfa3:	push   eax
6401dfa4:	call   0x6401dd5a
6401dfa9:	add    esp,0x14
6401dfac:	pop    ebp
6401dfad:	ret    
6401dfae:	int3   
6401dfaf:	int3   
6401dfb0:	push   ebp
6401dfb1:	mov    ebp,esp
6401dfb3:	push   edi
6401dfb4:	push   esi
6401dfb5:	push   ebx
6401dfb6:	mov    ecx,DWORD PTR [ebp+0x10]
6401dfb9:	or     ecx,ecx
6401dfbb:	je     0x6401e00a
6401dfbd:	mov    esi,DWORD PTR [ebp+0x8]
6401dfc0:	mov    edi,DWORD PTR [ebp+0xc]
6401dfc3:	mov    bh,0x41
6401dfc5:	mov    bl,0x5a
6401dfc7:	mov    dh,0x20
6401dfc9:	lea    ecx,[ecx+0x0]
6401dfcc:	mov    ah,BYTE PTR [esi]
6401dfce:	or     ah,ah
6401dfd0:	mov    al,BYTE PTR [edi]
6401dfd2:	je     0x6401dffb
6401dfd4:	or     al,al
6401dfd6:	je     0x6401dffb
6401dfd8:	add    esi,0x1
6401dfdb:	add    edi,0x1
6401dfde:	cmp    ah,bh
6401dfe0:	jb     0x6401dfe8
6401dfe2:	cmp    ah,bl
6401dfe4:	ja     0x6401dfe8
6401dfe6:	add    ah,dh
6401dfe8:	cmp    al,bh
6401dfea:	jb     0x6401dff2
6401dfec:	cmp    al,bl
6401dfee:	ja     0x6401dff2
6401dff0:	add    al,dh
6401dff2:	cmp    ah,al
6401dff4:	jne    0x6401e001
6401dff6:	sub    ecx,0x1
6401dff9:	jne    0x6401dfcc
6401dffb:	xor    ecx,ecx
6401dffd:	cmp    ah,al
6401dfff:	je     0x6401e00a
6401e001:	mov    ecx,0xffffffff
6401e006:	jb     0x6401e00a
6401e008:	neg    ecx
6401e00a:	mov    eax,ecx
6401e00c:	pop    ebx
6401e00d:	pop    esi
6401e00e:	pop    edi
6401e00f:	leave  
6401e010:	ret    
6401e011:	xor    eax,eax
6401e013:	push   eax
6401e014:	push   eax
6401e015:	push   0x3
6401e017:	push   eax
6401e018:	push   0x3
6401e01a:	push   0x40000000
6401e01f:	push   0x6402649c
6401e024:	call   DWORD PTR ds:0x640240ac
6401e02a:	mov    ds:0x6402d024,eax
6401e02f:	ret    
6401e030:	mov    eax,ds:0x6402d024
6401e035:	cmp    eax,0xffffffff
6401e038:	push   esi
6401e039:	mov    esi,DWORD PTR ds:0x64024040
6401e03f:	je     0x6401e049
6401e041:	cmp    eax,0xfffffffe
6401e044:	je     0x6401e049
6401e046:	push   eax
6401e047:	call   esi
6401e049:	mov    eax,ds:0x6402d020
6401e04e:	cmp    eax,0xffffffff
6401e051:	je     0x6401e05b
6401e053:	cmp    eax,0xfffffffe
6401e056:	je     0x6401e05b
6401e058:	push   eax
6401e059:	call   esi
6401e05b:	pop    esi
6401e05c:	ret    
6401e05d:	push   ebx
6401e05e:	push   esi
6401e05f:	mov    esi,DWORD PTR [esp+0xc]
6401e063:	push   edi
6401e064:	xor    edi,edi
6401e066:	or     ebx,0xffffffff
6401e069:	cmp    esi,edi
6401e06b:	jne    0x6401e089
6401e06d:	call   0x640142c0
6401e072:	push   edi
6401e073:	push   edi
6401e074:	push   edi
6401e075:	push   edi
6401e076:	push   edi
6401e077:	mov    DWORD PTR [eax],0x16
6401e07d:	call   0x640120b4
6401e082:	add    esp,0x14
6401e085:	or     eax,ebx
6401e087:	jmp    0x6401e0cb
6401e089:	test   BYTE PTR [esi+0xc],0x83
6401e08d:	je     0x6401e0c6
6401e08f:	push   esi
6401e090:	call   0x6401da63
6401e095:	push   esi
6401e096:	mov    ebx,eax
6401e098:	call   0x6401e3aa
6401e09d:	push   esi
6401e09e:	call   0x6401c31d
6401e0a3:	push   eax
6401e0a4:	call   0x6401e2dd
6401e0a9:	add    esp,0x10
6401e0ac:	test   eax,eax
6401e0ae:	jge    0x6401e0b5
6401e0b0:	or     ebx,0xffffffff
6401e0b3:	jmp    0x6401e0c6
6401e0b5:	mov    eax,DWORD PTR [esi+0x1c]
6401e0b8:	cmp    eax,edi
6401e0ba:	je     0x6401e0c6
6401e0bc:	push   eax
6401e0bd:	call   0x64013396
6401e0c2:	pop    ecx
6401e0c3:	mov    DWORD PTR [esi+0x1c],edi
6401e0c6:	mov    DWORD PTR [esi+0xc],edi
6401e0c9:	mov    eax,ebx
6401e0cb:	pop    edi
6401e0cc:	pop    esi
6401e0cd:	pop    ebx
6401e0ce:	ret    
6401e0cf:	push   0xc
6401e0d1:	push   0x64029b58
6401e0d6:	call   0x64013ac0
6401e0db:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401e0df:	xor    eax,eax
6401e0e1:	mov    esi,DWORD PTR [ebp+0x8]
6401e0e4:	xor    edi,edi
6401e0e6:	cmp    esi,edi
6401e0e8:	setne  al
6401e0eb:	cmp    eax,edi
6401e0ed:	jne    0x6401e10c
6401e0ef:	call   0x640142c0
6401e0f4:	mov    DWORD PTR [eax],0x16
6401e0fa:	push   edi
6401e0fb:	push   edi
6401e0fc:	push   edi
6401e0fd:	push   edi
6401e0fe:	push   edi
6401e0ff:	call   0x640120b4
6401e104:	add    esp,0x14
6401e107:	or     eax,0xffffffff
6401e10a:	jmp    0x6401e118
6401e10c:	test   BYTE PTR [esi+0xc],0x40
6401e110:	je     0x6401e11e
6401e112:	mov    DWORD PTR [esi+0xc],edi
6401e115:	mov    eax,DWORD PTR [ebp-0x1c]
6401e118:	call   0x64013b05
6401e11d:	ret    
6401e11e:	push   esi
6401e11f:	call   0x6401c253
6401e124:	pop    ecx
6401e125:	mov    DWORD PTR [ebp-0x4],edi
6401e128:	push   esi
6401e129:	call   0x6401e05d
6401e12e:	pop    ecx
6401e12f:	mov    DWORD PTR [ebp-0x1c],eax
6401e132:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e139:	call   0x6401e143
6401e13e:	jmp    0x6401e115
6401e140:	mov    esi,DWORD PTR [ebp+0x8]
6401e143:	push   esi
6401e144:	call   0x6401c2bd
6401e149:	pop    ecx
6401e14a:	ret    
6401e14b:	push   0x10
6401e14d:	push   0x64029b78
6401e152:	call   0x64013ac0
6401e157:	mov    eax,DWORD PTR [ebp+0x8]
6401e15a:	cmp    eax,0xfffffffe
6401e15d:	jne    0x6401e172
6401e15f:	call   0x640142c0
6401e164:	mov    DWORD PTR [eax],0x9
6401e16a:	or     eax,0xffffffff
6401e16d:	jmp    0x6401e21c
6401e172:	xor    ebx,ebx
6401e174:	cmp    eax,ebx
6401e176:	jl     0x6401e180
6401e178:	cmp    eax,DWORD PTR ds:0x64031440
6401e17e:	jb     0x6401e19a
6401e180:	call   0x640142c0
6401e185:	mov    DWORD PTR [eax],0x9
6401e18b:	push   ebx
6401e18c:	push   ebx
6401e18d:	push   ebx
6401e18e:	push   ebx
6401e18f:	push   ebx
6401e190:	call   0x640120b4
6401e195:	add    esp,0x14
6401e198:	jmp    0x6401e16a
6401e19a:	mov    ecx,eax
6401e19c:	sar    ecx,0x5
6401e19f:	lea    edi,[ecx*4+0x64031460]
6401e1a6:	mov    esi,eax
6401e1a8:	and    esi,0x1f
6401e1ab:	shl    esi,0x6
6401e1ae:	mov    ecx,DWORD PTR [edi]
6401e1b0:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
6401e1b5:	and    ecx,0x1
6401e1b8:	je     0x6401e180
6401e1ba:	push   eax
6401e1bb:	call   0x6401d840
6401e1c0:	pop    ecx
6401e1c1:	mov    DWORD PTR [ebp-0x4],ebx
6401e1c4:	mov    eax,DWORD PTR [edi]
6401e1c6:	test   BYTE PTR [esi+eax*1+0x4],0x1
6401e1cb:	je     0x6401e1fe
6401e1cd:	push   DWORD PTR [ebp+0x8]
6401e1d0:	call   0x6401d7cf
6401e1d5:	pop    ecx
6401e1d6:	push   eax
6401e1d7:	call   DWORD PTR ds:0x640240b0
6401e1dd:	test   eax,eax
6401e1df:	jne    0x6401e1ec
6401e1e1:	call   DWORD PTR ds:0x64024044
6401e1e7:	mov    DWORD PTR [ebp-0x1c],eax
6401e1ea:	jmp    0x6401e1ef
6401e1ec:	mov    DWORD PTR [ebp-0x1c],ebx
6401e1ef:	cmp    DWORD PTR [ebp-0x1c],ebx
6401e1f2:	je     0x6401e20d
6401e1f4:	call   0x640142d3
6401e1f9:	mov    ecx,DWORD PTR [ebp-0x1c]
6401e1fc:	mov    DWORD PTR [eax],ecx
6401e1fe:	call   0x640142c0
6401e203:	mov    DWORD PTR [eax],0x9
6401e209:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401e20d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e214:	call   0x6401e222
6401e219:	mov    eax,DWORD PTR [ebp-0x1c]
6401e21c:	call   0x64013b05
6401e221:	ret    
6401e222:	push   DWORD PTR [ebp+0x8]
6401e225:	call   0x6401d8e0
6401e22a:	pop    ecx
6401e22b:	ret    
6401e22c:	xor    eax,eax
6401e22e:	cmp    DWORD PTR [esp+0x8],eax
6401e232:	jbe    0x6401e245
6401e234:	mov    ecx,DWORD PTR [esp+0x4]
6401e238:	cmp    BYTE PTR [ecx],0x0
6401e23b:	je     0x6401e245
6401e23d:	inc    eax
6401e23e:	inc    ecx
6401e23f:	cmp    eax,DWORD PTR [esp+0x8]
6401e243:	jb     0x6401e238
6401e245:	ret    
6401e246:	push   esi
6401e247:	mov    esi,DWORD PTR [esp+0x8]
6401e24b:	push   edi
6401e24c:	push   esi
6401e24d:	call   0x6401d7cf
6401e252:	cmp    eax,0xffffffff
6401e255:	pop    ecx
6401e256:	je     0x6401e2a8
6401e258:	cmp    esi,0x1
6401e25b:	mov    eax,ds:0x64031460
6401e260:	jne    0x6401e26b
6401e262:	test   BYTE PTR [eax+0x84],0x1
6401e269:	jne    0x6401e276
6401e26b:	cmp    esi,0x2
6401e26e:	jne    0x6401e28c
6401e270:	test   BYTE PTR [eax+0x44],0x1
6401e274:	je     0x6401e28c
6401e276:	push   0x2
6401e278:	call   0x6401d7cf
6401e27d:	push   0x1
6401e27f:	mov    edi,eax
6401e281:	call   0x6401d7cf
6401e286:	cmp    eax,edi
6401e288:	pop    ecx
6401e289:	pop    ecx
6401e28a:	je     0x6401e2a8
6401e28c:	push   esi
6401e28d:	call   0x6401d7cf
6401e292:	pop    ecx
6401e293:	push   eax
6401e294:	call   DWORD PTR ds:0x64024040
6401e29a:	test   eax,eax
6401e29c:	jne    0x6401e2a8
6401e29e:	call   DWORD PTR ds:0x64024044
6401e2a4:	mov    edi,eax
6401e2a6:	jmp    0x6401e2aa
6401e2a8:	xor    edi,edi
6401e2aa:	push   esi
6401e2ab:	call   0x6401d74e
6401e2b0:	mov    eax,esi
6401e2b2:	sar    eax,0x5
6401e2b5:	mov    eax,DWORD PTR [eax*4+0x64031460]
6401e2bc:	and    esi,0x1f
6401e2bf:	shl    esi,0x6
6401e2c2:	test   edi,edi
6401e2c4:	pop    ecx
6401e2c5:	mov    BYTE PTR [eax+esi*1+0x4],0x0
6401e2ca:	je     0x6401e2d8
6401e2cc:	push   edi
6401e2cd:	call   0x640142e6
6401e2d2:	pop    ecx
6401e2d3:	or     eax,0xffffffff
6401e2d6:	jmp    0x6401e2da
6401e2d8:	xor    eax,eax
6401e2da:	pop    edi
6401e2db:	pop    esi
6401e2dc:	ret    
6401e2dd:	push   0x10
6401e2df:	push   0x64029b98
6401e2e4:	call   0x64013ac0
6401e2e9:	mov    eax,DWORD PTR [ebp+0x8]
6401e2ec:	cmp    eax,0xfffffffe
6401e2ef:	jne    0x6401e30c
6401e2f1:	call   0x640142d3
6401e2f6:	and    DWORD PTR [eax],0x0
6401e2f9:	call   0x640142c0
6401e2fe:	mov    DWORD PTR [eax],0x9
6401e304:	or     eax,0xffffffff
6401e307:	jmp    0x6401e39a
6401e30c:	xor    edi,edi
6401e30e:	cmp    eax,edi
6401e310:	jl     0x6401e31a
6401e312:	cmp    eax,DWORD PTR ds:0x64031440
6401e318:	jb     0x6401e33b
6401e31a:	call   0x640142d3
6401e31f:	mov    DWORD PTR [eax],edi
6401e321:	call   0x640142c0
6401e326:	mov    DWORD PTR [eax],0x9
6401e32c:	push   edi
6401e32d:	push   edi
6401e32e:	push   edi
6401e32f:	push   edi
6401e330:	push   edi
6401e331:	call   0x640120b4
6401e336:	add    esp,0x14
6401e339:	jmp    0x6401e304
6401e33b:	mov    ecx,eax
6401e33d:	sar    ecx,0x5
6401e340:	lea    ebx,[ecx*4+0x64031460]
6401e347:	mov    esi,eax
6401e349:	and    esi,0x1f
6401e34c:	shl    esi,0x6
6401e34f:	mov    ecx,DWORD PTR [ebx]
6401e351:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401e356:	and    ecx,0x1
6401e359:	je     0x6401e31a
6401e35b:	push   eax
6401e35c:	call   0x6401d840
6401e361:	pop    ecx
6401e362:	mov    DWORD PTR [ebp-0x4],edi
6401e365:	mov    eax,DWORD PTR [ebx]
6401e367:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401e36c:	je     0x6401e37c
6401e36e:	push   DWORD PTR [ebp+0x8]
6401e371:	call   0x6401e246
6401e376:	pop    ecx
6401e377:	mov    DWORD PTR [ebp-0x1c],eax
6401e37a:	jmp    0x6401e38b
6401e37c:	call   0x640142c0
6401e381:	mov    DWORD PTR [eax],0x9
6401e387:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401e38b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e392:	call   0x6401e3a0
6401e397:	mov    eax,DWORD PTR [ebp-0x1c]
6401e39a:	call   0x64013b05
6401e39f:	ret    
6401e3a0:	push   DWORD PTR [ebp+0x8]
6401e3a3:	call   0x6401d8e0
6401e3a8:	pop    ecx
6401e3a9:	ret    
6401e3aa:	push   esi
6401e3ab:	mov    esi,DWORD PTR [esp+0x8]
6401e3af:	mov    eax,DWORD PTR [esi+0xc]
6401e3b2:	test   al,0x83
6401e3b4:	je     0x6401e3d4
6401e3b6:	test   al,0x8
6401e3b8:	je     0x6401e3d4
6401e3ba:	push   DWORD PTR [esi+0x8]
6401e3bd:	call   0x64013396
6401e3c2:	and    DWORD PTR [esi+0xc],0xfffffbf7
6401e3c9:	xor    eax,eax
6401e3cb:	pop    ecx
6401e3cc:	mov    DWORD PTR [esi],eax
6401e3ce:	mov    DWORD PTR [esi+0x8],eax
6401e3d1:	mov    DWORD PTR [esi+0x4],eax
6401e3d4:	pop    esi
6401e3d5:	ret    
6401e3d6:	int3   
6401e3d7:	int3   
6401e3d8:	int3   
6401e3d9:	int3   
6401e3da:	int3   
6401e3db:	int3   
6401e3dc:	int3   
6401e3dd:	int3   
6401e3de:	int3   
6401e3df:	int3   
6401e3e0:	lea    eax,[edx-0x1]
6401e3e3:	pop    ebx
6401e3e4:	ret    
6401e3e5:	lea    esp,[esp+0x0]
6401e3ec:	lea    esp,[esp+0x0]
6401e3f0:	xor    eax,eax
6401e3f2:	mov    al,BYTE PTR [esp+0x8]
6401e3f6:	push   ebx
6401e3f7:	mov    ebx,eax
6401e3f9:	shl    eax,0x8
6401e3fc:	mov    edx,DWORD PTR [esp+0x8]
6401e400:	test   edx,0x3
6401e406:	je     0x6401e41d
6401e408:	mov    cl,BYTE PTR [edx]
6401e40a:	add    edx,0x1
6401e40d:	cmp    cl,bl
6401e40f:	je     0x6401e3e0
6401e411:	test   cl,cl
6401e413:	je     0x6401e466
6401e415:	test   edx,0x3
6401e41b:	jne    0x6401e408
6401e41d:	or     ebx,eax
6401e41f:	push   edi
6401e420:	mov    eax,ebx
6401e422:	shl    ebx,0x10
6401e425:	push   esi
6401e426:	or     ebx,eax
6401e428:	mov    ecx,DWORD PTR [edx]
6401e42a:	mov    edi,0x7efefeff
6401e42f:	mov    eax,ecx
6401e431:	mov    esi,edi
6401e433:	xor    ecx,ebx
6401e435:	add    esi,eax
6401e437:	add    edi,ecx
6401e439:	xor    ecx,0xffffffff
6401e43c:	xor    eax,0xffffffff
6401e43f:	xor    ecx,edi
6401e441:	xor    eax,esi
6401e443:	add    edx,0x4
6401e446:	and    ecx,0x81010100
6401e44c:	jne    0x6401e46a
6401e44e:	and    eax,0x81010100
6401e453:	je     0x6401e428
6401e455:	and    eax,0x1010100
6401e45a:	jne    0x6401e464
6401e45c:	and    esi,0x80000000
6401e462:	jne    0x6401e428
6401e464:	pop    esi
6401e465:	pop    edi
6401e466:	pop    ebx
6401e467:	xor    eax,eax
6401e469:	ret    
6401e46a:	mov    eax,DWORD PTR [edx-0x4]
6401e46d:	cmp    al,bl
6401e46f:	je     0x6401e4a7
6401e471:	test   al,al
6401e473:	je     0x6401e464
6401e475:	cmp    ah,bl
6401e477:	je     0x6401e4a0
6401e479:	test   ah,ah
6401e47b:	je     0x6401e464
6401e47d:	shr    eax,0x10
6401e480:	cmp    al,bl
6401e482:	je     0x6401e499
6401e484:	test   al,al
6401e486:	je     0x6401e464
6401e488:	cmp    ah,bl
6401e48a:	je     0x6401e492
6401e48c:	test   ah,ah
6401e48e:	je     0x6401e464
6401e490:	jmp    0x6401e428
6401e492:	pop    esi
6401e493:	pop    edi
6401e494:	lea    eax,[edx-0x1]
6401e497:	pop    ebx
6401e498:	ret    
6401e499:	lea    eax,[edx-0x2]
6401e49c:	pop    esi
6401e49d:	pop    edi
6401e49e:	pop    ebx
6401e49f:	ret    
6401e4a0:	lea    eax,[edx-0x3]
6401e4a3:	pop    esi
6401e4a4:	pop    edi
6401e4a5:	pop    ebx
6401e4a6:	ret    
6401e4a7:	lea    eax,[edx-0x4]
6401e4aa:	pop    esi
6401e4ab:	pop    edi
6401e4ac:	pop    ebx
6401e4ad:	ret    
6401e4ae:	int3   
6401e4af:	int3   
6401e4b0:	mov    eax,DWORD PTR [esp+0x4]
6401e4b4:	push   0x0
6401e4b6:	push   eax
6401e4b7:	call   DWORD PTR ds:0x6402d030
6401e4bd:	ret    0x4
6401e4c0:	push   ebp
6401e4c1:	mov    ebp,esp
6401e4c3:	push   0xfffffffe
6401e4c5:	push   0x64029bb8
6401e4ca:	push   0x64013b20
6401e4cf:	mov    eax,fs:0x0
6401e4d5:	push   eax
6401e4d6:	sub    esp,0x18
6401e4d9:	mov    eax,ds:0x6402c09c
6401e4de:	xor    DWORD PTR [ebp-0x8],eax
6401e4e1:	xor    eax,ebp
6401e4e3:	mov    DWORD PTR [ebp-0x1c],eax
6401e4e6:	push   ebx
6401e4e7:	push   esi
6401e4e8:	push   edi
6401e4e9:	push   eax
6401e4ea:	lea    eax,[ebp-0x10]
6401e4ed:	mov    fs:0x0,eax
6401e4f3:	mov    DWORD PTR [ebp-0x18],esp
6401e4f6:	mov    esi,DWORD PTR [ebp+0x8]
6401e4f9:	test   esi,esi
6401e4fb:	je     0x6401e552
6401e4fd:	push   esi
6401e4fe:	call   DWORD PTR ds:0x64024054
6401e504:	mov    edi,eax
6401e506:	add    edi,0x1
6401e509:	mov    DWORD PTR [ebp-0x20],edi
6401e50c:	push   0x0
6401e50e:	push   0x0
6401e510:	push   edi
6401e511:	push   esi
6401e512:	push   0x0
6401e514:	push   0x0
6401e516:	call   DWORD PTR ds:0x64024024
6401e51c:	mov    esi,eax
6401e51e:	mov    DWORD PTR [ebp-0x28],esi
6401e521:	test   esi,esi
6401e523:	jne    0x6401e559
6401e525:	mov    esi,DWORD PTR ds:0x64024044
6401e52b:	call   esi
6401e52d:	test   eax,eax
6401e52f:	jg     0x6401e540
6401e531:	call   esi
6401e533:	push   eax
6401e534:	call   0x6401e4b0
6401e539:	xor    eax,eax
6401e53b:	jmp    0x6401e620
6401e540:	call   esi
6401e542:	and    eax,0xffff
6401e547:	or     eax,0x80070000
6401e54c:	push   eax
6401e54d:	call   0x6401e4b0
6401e552:	xor    eax,eax
6401e554:	jmp    0x6401e620
6401e559:	mov    DWORD PTR [ebp-0x4],0x0
6401e560:	lea    eax,[esi+esi*1]
6401e563:	cmp    esi,0x1000
6401e569:	jge    0x6401e583
6401e56b:	call   0x64012c80
6401e570:	mov    DWORD PTR [ebp-0x18],esp
6401e573:	mov    eax,esp
6401e575:	mov    ebx,eax
6401e577:	mov    DWORD PTR [ebp-0x24],ebx
6401e57a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e581:	jmp    0x6401e5b5
6401e583:	push   eax
6401e584:	call   0x64013473
6401e589:	add    esp,0x4
6401e58c:	mov    ebx,eax
6401e58e:	mov    DWORD PTR [ebp-0x24],ebx
6401e591:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e598:	jmp    0x6401e5b5
6401e59a:	mov    eax,0x1
6401e59f:	ret    
6401e5a0:	mov    esp,DWORD PTR [ebp-0x18]
6401e5a3:	xor    ebx,ebx
6401e5a5:	mov    DWORD PTR [ebp-0x24],ebx
6401e5a8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e5af:	mov    edi,DWORD PTR [ebp-0x20]
6401e5b2:	mov    esi,DWORD PTR [ebp-0x28]
6401e5b5:	test   ebx,ebx
6401e5b7:	jne    0x6401e5c7
6401e5b9:	push   0x8007000e
6401e5be:	call   0x6401e4b0
6401e5c3:	xor    eax,eax
6401e5c5:	jmp    0x6401e620
6401e5c7:	push   esi
6401e5c8:	push   ebx
6401e5c9:	push   edi
6401e5ca:	mov    ecx,DWORD PTR [ebp+0x8]
6401e5cd:	push   ecx
6401e5ce:	push   0x0
6401e5d0:	push   0x0
6401e5d2:	call   DWORD PTR ds:0x64024024
6401e5d8:	test   eax,eax
6401e5da:	jne    0x6401e5f6
6401e5dc:	cmp    esi,0x1000
6401e5e2:	jl     0x6401e525
6401e5e8:	push   ebx
6401e5e9:	call   0x64013396
6401e5ee:	add    esp,0x4
6401e5f1:	jmp    0x6401e525
6401e5f6:	push   ebx
6401e5f7:	call   DWORD PTR ds:0x64024198
6401e5fd:	mov    edi,eax
6401e5ff:	cmp    esi,0x1000
6401e605:	jl     0x6401e610
6401e607:	push   ebx
6401e608:	call   0x64013396
6401e60d:	add    esp,0x4
6401e610:	test   edi,edi
6401e612:	jne    0x6401e61e
6401e614:	push   0x8007000e
6401e619:	call   0x6401e4b0
6401e61e:	mov    eax,edi
6401e620:	lea    esp,[ebp-0x38]
6401e623:	mov    ecx,DWORD PTR [ebp-0x10]
6401e626:	mov    DWORD PTR fs:0x0,ecx
6401e62d:	pop    ecx
6401e62e:	pop    edi
6401e62f:	pop    esi
6401e630:	pop    ebx
6401e631:	mov    ecx,DWORD PTR [ebp-0x1c]
6401e634:	xor    ecx,ebp
6401e636:	call   0x6401257c
6401e63b:	mov    esp,ebp
6401e63d:	pop    ebp
6401e63e:	ret    0x4
6401e641:	int3   
6401e642:	int3   
6401e643:	int3   
6401e644:	int3   
6401e645:	int3   
6401e646:	int3   
6401e647:	int3   
6401e648:	int3   
6401e649:	int3   
6401e64a:	int3   
6401e64b:	int3   
6401e64c:	int3   
6401e64d:	int3   
6401e64e:	int3   
6401e64f:	int3   
6401e650:	push   esi
6401e651:	mov    esi,ecx
6401e653:	mov    eax,DWORD PTR [esi+0x8]
6401e656:	test   eax,eax
6401e658:	mov    DWORD PTR [esi],0x640264a8
6401e65e:	je     0x6401e668
6401e660:	mov    ecx,DWORD PTR [eax]
6401e662:	mov    edx,DWORD PTR [ecx+0x8]
6401e665:	push   eax
6401e666:	call   edx
6401e668:	cmp    DWORD PTR [esi+0xc],0x0
6401e66c:	je     0x6401e685
6401e66e:	call   DWORD PTR ds:0x64024104
6401e674:	test   eax,eax
6401e676:	je     0x6401e685
6401e678:	mov    ecx,DWORD PTR [esi+0xc]
6401e67b:	push   ecx
6401e67c:	push   0x0
6401e67e:	push   eax
6401e67f:	call   DWORD PTR ds:0x640240f8
6401e685:	pop    esi
6401e686:	ret    
6401e687:	int3   
6401e688:	int3   
6401e689:	int3   
6401e68a:	int3   
6401e68b:	int3   
6401e68c:	int3   
6401e68d:	int3   
6401e68e:	int3   
6401e68f:	int3   
6401e690:	sub    esp,0x10
6401e693:	mov    eax,DWORD PTR [esp+0x14]
6401e697:	mov    ecx,DWORD PTR [esp+0x18]
6401e69b:	push   0x64029bd4
6401e6a0:	lea    edx,[esp+0x4]
6401e6a4:	push   edx
6401e6a5:	mov    DWORD PTR [esp+0x8],0x640264a8
6401e6ad:	mov    DWORD PTR [esp+0xc],eax
6401e6b1:	mov    DWORD PTR [esp+0x10],ecx
6401e6b5:	mov    DWORD PTR [esp+0x14],0x0
6401e6bd:	call   0x6401216b
6401e6c2:	int3   
6401e6c3:	int3   
6401e6c4:	int3   
6401e6c5:	int3   
6401e6c6:	int3   
6401e6c7:	int3   
6401e6c8:	int3   
6401e6c9:	int3   
6401e6ca:	int3   
6401e6cb:	int3   
6401e6cc:	int3   
6401e6cd:	int3   
6401e6ce:	int3   
6401e6cf:	int3   
6401e6d0:	mov    eax,DWORD PTR [esp+0x4]
6401e6d4:	push   esi
6401e6d5:	mov    esi,ecx
6401e6d7:	mov    DWORD PTR [esi],0x640264a8
6401e6dd:	mov    ecx,DWORD PTR [eax+0x4]
6401e6e0:	mov    DWORD PTR [esi+0x4],ecx
6401e6e3:	mov    edx,DWORD PTR [eax+0x8]
6401e6e6:	mov    eax,edx
6401e6e8:	test   eax,eax
6401e6ea:	mov    DWORD PTR [esi+0x8],edx
6401e6ed:	mov    DWORD PTR [esi+0xc],0x0
6401e6f4:	je     0x6401e6fe
6401e6f6:	mov    ecx,DWORD PTR [eax]
6401e6f8:	mov    edx,DWORD PTR [ecx+0x4]
6401e6fb:	push   eax
6401e6fc:	call   edx
6401e6fe:	mov    eax,esi
6401e700:	pop    esi
6401e701:	ret    0x4
6401e704:	int3   
6401e705:	int3   
6401e706:	int3   
6401e707:	int3   
6401e708:	int3   
6401e709:	int3   
6401e70a:	int3   
6401e70b:	int3   
6401e70c:	int3   
6401e70d:	int3   
6401e70e:	int3   
6401e70f:	int3   
6401e710:	push   esi
6401e711:	mov    esi,ecx
6401e713:	mov    eax,DWORD PTR [esi+0x8]
6401e716:	test   eax,eax
6401e718:	mov    DWORD PTR [esi],0x640264a8
6401e71e:	je     0x6401e728
6401e720:	mov    ecx,DWORD PTR [eax]
6401e722:	mov    edx,DWORD PTR [ecx+0x8]
6401e725:	push   eax
6401e726:	call   edx
6401e728:	cmp    DWORD PTR [esi+0xc],0x0
6401e72c:	je     0x6401e745
6401e72e:	call   DWORD PTR ds:0x64024104
6401e734:	test   eax,eax
6401e736:	je     0x6401e745
6401e738:	mov    ecx,DWORD PTR [esi+0xc]
6401e73b:	push   ecx
6401e73c:	push   0x0
6401e73e:	push   eax
6401e73f:	call   DWORD PTR ds:0x640240f8
6401e745:	test   BYTE PTR [esp+0x8],0x1
6401e74a:	je     0x6401e755
6401e74c:	push   esi
6401e74d:	call   0x64011d22
6401e752:	add    esp,0x4
6401e755:	mov    eax,esi
6401e757:	pop    esi
6401e758:	ret    0x4
6401e75b:	int3   
6401e75c:	jmp    DWORD PTR ds:0x64024118
6401e762:	push   ebp
6401e763:	mov    ebp,esp
6401e765:	sub    esp,0xc
6401e768:	mov    eax,ds:0x6402c09c
6401e76d:	xor    eax,ebp
6401e76f:	mov    DWORD PTR [ebp-0x4],eax
6401e772:	push   ebx
6401e773:	push   esi
6401e774:	push   edi
6401e775:	mov    edi,DWORD PTR [ebp+0x8]
6401e778:	xor    ebx,ebx
6401e77a:	cmp    edi,ebx
6401e77c:	jne    0x6401e79a
6401e77e:	call   0x640142c0
6401e783:	push   0x16
6401e785:	pop    esi
6401e786:	push   ebx
6401e787:	push   ebx
6401e788:	push   ebx
6401e789:	push   ebx
6401e78a:	push   ebx
6401e78b:	mov    DWORD PTR [eax],esi
6401e78d:	call   0x640120b4
6401e792:	add    esp,0x14
6401e795:	jmp    0x6401e8cf
6401e79a:	push   DWORD PTR [ebp+0xc]
6401e79d:	push   edi
6401e79e:	call   0x6401e22c
6401e7a3:	cmp    eax,DWORD PTR [ebp+0xc]
6401e7a6:	pop    ecx
6401e7a7:	pop    ecx
6401e7a8:	jb     0x6401e7ae
6401e7aa:	mov    BYTE PTR [edi],bl
6401e7ac:	jmp    0x6401e77e
6401e7ae:	mov    edx,DWORD PTR [ebp+0x10]
6401e7b1:	mov    eax,DWORD PTR [edx]
6401e7b3:	mov    ecx,DWORD PTR [eax+0x14]
6401e7b6:	cmp    ecx,ebx
6401e7b8:	jne    0x6401e7da
6401e7ba:	cmp    BYTE PTR [edi],bl
6401e7bc:	mov    ecx,edi
6401e7be:	je     0x6401e7d3
6401e7c0:	mov    al,BYTE PTR [ecx]
6401e7c2:	cmp    al,0x41
6401e7c4:	jl     0x6401e7ce
6401e7c6:	cmp    al,0x5a
6401e7c8:	jg     0x6401e7ce
6401e7ca:	add    al,0x20
6401e7cc:	mov    BYTE PTR [ecx],al
6401e7ce:	inc    ecx
6401e7cf:	cmp    BYTE PTR [ecx],bl
6401e7d1:	jne    0x6401e7c0
6401e7d3:	xor    eax,eax
6401e7d5:	jmp    0x6401e8d1
6401e7da:	push   0x1
6401e7dc:	push   DWORD PTR [eax+0x4]
6401e7df:	mov    esi,0x100
6401e7e4:	push   ebx
6401e7e5:	push   ebx
6401e7e6:	push   0xffffffff
6401e7e8:	push   edi
6401e7e9:	push   esi
6401e7ea:	push   ecx
6401e7eb:	push   edx
6401e7ec:	call   0x640198c8
6401e7f1:	mov    ecx,eax
6401e7f3:	add    esp,0x24
6401e7f6:	cmp    ecx,ebx
6401e7f8:	mov    DWORD PTR [ebp-0xc],ecx
6401e7fb:	jne    0x6401e814
6401e7fd:	call   0x640142c0
6401e802:	mov    DWORD PTR [eax],0x2a
6401e808:	call   0x640142c0
6401e80d:	mov    eax,DWORD PTR [eax]
6401e80f:	jmp    0x6401e8d1
6401e814:	cmp    DWORD PTR [ebp+0xc],ecx
6401e817:	jae    0x6401e827
6401e819:	mov    BYTE PTR [edi],bl
6401e81b:	call   0x640142c0
6401e820:	push   0x22
6401e822:	jmp    0x6401e785
6401e827:	cmp    ecx,ebx
6401e829:	jle    0x6401e870
6401e82b:	push   0xffffffe0
6401e82d:	xor    edx,edx
6401e82f:	pop    eax
6401e830:	div    ecx
6401e832:	cmp    eax,0x1
6401e835:	jb     0x6401e870
6401e837:	lea    eax,[ecx+0x8]
6401e83a:	cmp    eax,0x400
6401e83f:	ja     0x6401e854
6401e841:	call   0x64012c80
6401e846:	mov    eax,esp
6401e848:	cmp    eax,ebx
6401e84a:	je     0x6401e868
6401e84c:	mov    DWORD PTR [eax],0xcccc
6401e852:	jmp    0x6401e865
6401e854:	push   eax
6401e855:	call   0x64013473
6401e85a:	cmp    eax,ebx
6401e85c:	pop    ecx
6401e85d:	je     0x6401e868
6401e85f:	mov    DWORD PTR [eax],0xdddd
6401e865:	add    eax,0x8
6401e868:	mov    ecx,DWORD PTR [ebp-0xc]
6401e86b:	mov    DWORD PTR [ebp-0x8],eax
6401e86e:	jmp    0x6401e873
6401e870:	mov    DWORD PTR [ebp-0x8],ebx
6401e873:	cmp    DWORD PTR [ebp-0x8],ebx
6401e876:	jne    0x6401e885
6401e878:	call   0x640142c0
6401e87d:	mov    DWORD PTR [eax],0xc
6401e883:	jmp    0x6401e808
6401e885:	mov    edx,DWORD PTR [ebp+0x10]
6401e888:	mov    eax,DWORD PTR [edx]
6401e88a:	push   0x1
6401e88c:	push   DWORD PTR [eax+0x4]
6401e88f:	push   ecx
6401e890:	push   DWORD PTR [ebp-0x8]
6401e893:	push   0xffffffff
6401e895:	push   edi
6401e896:	push   esi
6401e897:	push   DWORD PTR [eax+0x14]
6401e89a:	push   edx
6401e89b:	call   0x640198c8
6401e8a0:	add    esp,0x24
6401e8a3:	test   eax,eax
6401e8a5:	je     0x6401e8ba
6401e8a7:	push   DWORD PTR [ebp-0x8]
6401e8aa:	push   DWORD PTR [ebp+0xc]
6401e8ad:	push   edi
6401e8ae:	call   0x64013eb8
6401e8b3:	add    esp,0xc
6401e8b6:	mov    esi,eax
6401e8b8:	jmp    0x6401e8c6
6401e8ba:	call   0x640142c0
6401e8bf:	push   0x2a
6401e8c1:	pop    ecx
6401e8c2:	mov    DWORD PTR [eax],ecx
6401e8c4:	mov    esi,ecx
6401e8c6:	push   DWORD PTR [ebp-0x8]
6401e8c9:	call   0x64012a12
6401e8ce:	pop    ecx
6401e8cf:	mov    eax,esi
6401e8d1:	lea    esp,[ebp-0x18]
6401e8d4:	pop    edi
6401e8d5:	pop    esi
6401e8d6:	pop    ebx
6401e8d7:	mov    ecx,DWORD PTR [ebp-0x4]
6401e8da:	xor    ecx,ebp
6401e8dc:	call   0x6401257c
6401e8e1:	leave  
6401e8e2:	ret    
6401e8e3:	push   ebp
6401e8e4:	mov    ebp,esp
6401e8e6:	sub    esp,0x10
6401e8e9:	push   DWORD PTR [ebp+0x10]
6401e8ec:	lea    ecx,[ebp-0x10]
6401e8ef:	call   0x6401271f
6401e8f4:	lea    eax,[ebp-0x10]
6401e8f7:	push   eax
6401e8f8:	push   DWORD PTR [ebp+0xc]
6401e8fb:	push   DWORD PTR [ebp+0x8]
6401e8fe:	call   0x6401e762
6401e903:	add    esp,0xc
6401e906:	cmp    BYTE PTR [ebp-0x4],0x0
6401e90a:	je     0x6401e913
6401e90c:	mov    ecx,DWORD PTR [ebp-0x8]
6401e90f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401e913:	leave  
6401e914:	ret    
6401e915:	push   ebx
6401e916:	xor    ebx,ebx
6401e918:	cmp    DWORD PTR ds:0x6402d954,ebx
6401e91e:	jne    0x6401e962
6401e920:	mov    eax,DWORD PTR [esp+0x8]
6401e924:	cmp    eax,ebx
6401e926:	jne    0x6401e944
6401e928:	call   0x640142c0
6401e92d:	push   ebx
6401e92e:	push   ebx
6401e92f:	push   ebx
6401e930:	push   ebx
6401e931:	push   ebx
6401e932:	mov    DWORD PTR [eax],0x16
6401e938:	call   0x640120b4
6401e93d:	add    esp,0x14
6401e940:	xor    eax,eax
6401e942:	pop    ebx
6401e943:	ret    
6401e944:	cmp    BYTE PTR [eax],bl
6401e946:	mov    edx,eax
6401e948:	je     0x6401e975
6401e94a:	mov    cl,BYTE PTR [edx]
6401e94c:	cmp    cl,0x41
6401e94f:	jl     0x6401e95b
6401e951:	cmp    cl,0x5a
6401e954:	jg     0x6401e95b
6401e956:	add    cl,0x20
6401e959:	mov    BYTE PTR [edx],cl
6401e95b:	inc    edx
6401e95c:	cmp    BYTE PTR [edx],bl
6401e95e:	jne    0x6401e94a
6401e960:	pop    ebx
6401e961:	ret    
6401e962:	push   ebx
6401e963:	push   0xffffffff
6401e965:	push   DWORD PTR [esp+0x10]
6401e969:	call   0x6401e8e3
6401e96e:	mov    eax,DWORD PTR [esp+0x14]
6401e972:	add    esp,0xc
6401e975:	pop    ebx
6401e976:	ret    
6401e977:	ret    
6401e978:	mov    eax,0x6401f483
6401e97d:	mov    ds:0x6402cb44,eax
6401e982:	mov    DWORD PTR ds:0x6402cb48,0x6401eb7f
6401e98c:	mov    DWORD PTR ds:0x6402cb4c,0x6401eb3d
6401e996:	mov    DWORD PTR ds:0x6402cb50,0x6401eb71
6401e9a0:	mov    DWORD PTR ds:0x6402cb54,0x6401eae7
6401e9aa:	mov    ds:0x6402cb58,eax
6401e9af:	mov    DWORD PTR ds:0x6402cb5c,0x6401f3fd
6401e9b9:	mov    DWORD PTR ds:0x6402cb60,0x6401eafd
6401e9c3:	mov    DWORD PTR ds:0x6402cb64,0x6401ea67
6401e9cd:	mov    DWORD PTR ds:0x6402cb68,0x6401e9f6
6401e9d7:	ret    
6401e9d8:	call   0x6401e978
6401e9dd:	call   0x6401f509
6401e9e2:	cmp    DWORD PTR [esp+0x4],0x0
6401e9e7:	mov    ds:0x6402e054,eax
6401e9ec:	je     0x6401e9f3
6401e9ee:	call   0x6401f4a4
6401e9f3:	fnclex 
6401e9f5:	ret    
6401e9f6:	push   ebp
6401e9f7:	mov    ebp,esp
6401e9f9:	sub    esp,0x10
6401e9fc:	push   esi
6401e9fd:	push   DWORD PTR [ebp+0xc]
6401ea00:	lea    ecx,[ebp-0x10]
6401ea03:	call   0x6401271f
6401ea08:	mov    esi,DWORD PTR [ebp+0x8]
6401ea0b:	movsx  eax,BYTE PTR [esi]
6401ea0e:	push   eax
6401ea0f:	call   0x6401336f
6401ea14:	cmp    eax,0x65
6401ea17:	jmp    0x6401ea25
6401ea19:	inc    esi
6401ea1a:	movzx  eax,BYTE PTR [esi]
6401ea1d:	push   eax
6401ea1e:	call   0x64013138
6401ea23:	test   eax,eax
6401ea25:	pop    ecx
6401ea26:	jne    0x6401ea19
6401ea28:	movsx  eax,BYTE PTR [esi]
6401ea2b:	push   eax
6401ea2c:	call   0x6401336f
6401ea31:	cmp    eax,0x78
6401ea34:	pop    ecx
6401ea35:	jne    0x6401ea39
6401ea37:	inc    esi
6401ea38:	inc    esi
6401ea39:	mov    ecx,DWORD PTR [ebp-0x10]
6401ea3c:	mov    ecx,DWORD PTR [ecx+0xbc]
6401ea42:	mov    ecx,DWORD PTR [ecx]
6401ea44:	mov    al,BYTE PTR [esi]
6401ea46:	mov    cl,BYTE PTR [ecx]
6401ea48:	mov    BYTE PTR [esi],cl
6401ea4a:	inc    esi
6401ea4b:	mov    cl,BYTE PTR [esi]
6401ea4d:	mov    BYTE PTR [esi],al
6401ea4f:	mov    al,cl
6401ea51:	mov    cl,BYTE PTR [esi]
6401ea53:	inc    esi
6401ea54:	test   cl,cl
6401ea56:	jne    0x6401ea4b
6401ea58:	cmp    BYTE PTR [ebp-0x4],cl
6401ea5b:	pop    esi
6401ea5c:	je     0x6401ea65
6401ea5e:	mov    eax,DWORD PTR [ebp-0x8]
6401ea61:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ea65:	leave  
6401ea66:	ret    
6401ea67:	push   ebp
6401ea68:	mov    ebp,esp
6401ea6a:	sub    esp,0x10
6401ea6d:	push   esi
6401ea6e:	push   DWORD PTR [ebp+0xc]
6401ea71:	lea    ecx,[ebp-0x10]
6401ea74:	call   0x6401271f
6401ea79:	mov    eax,DWORD PTR [ebp+0x8]
6401ea7c:	mov    cl,BYTE PTR [eax]
6401ea7e:	test   cl,cl
6401ea80:	mov    esi,DWORD PTR [ebp-0x10]
6401ea83:	je     0x6401ea9a
6401ea85:	mov    edx,DWORD PTR [esi+0xbc]
6401ea8b:	mov    edx,DWORD PTR [edx]
6401ea8d:	mov    dl,BYTE PTR [edx]
6401ea8f:	cmp    cl,dl
6401ea91:	je     0x6401ea9a
6401ea93:	inc    eax
6401ea94:	mov    cl,BYTE PTR [eax]
6401ea96:	test   cl,cl
6401ea98:	jne    0x6401ea8f
6401ea9a:	mov    cl,BYTE PTR [eax]
6401ea9c:	inc    eax
6401ea9d:	test   cl,cl
6401ea9f:	je     0x6401ead7
6401eaa1:	jmp    0x6401eaae
6401eaa3:	cmp    cl,0x65
6401eaa6:	je     0x6401eab4
6401eaa8:	cmp    cl,0x45
6401eaab:	je     0x6401eab4
6401eaad:	inc    eax
6401eaae:	mov    cl,BYTE PTR [eax]
6401eab0:	test   cl,cl
6401eab2:	jne    0x6401eaa3
6401eab4:	mov    edx,eax
6401eab6:	dec    eax
6401eab7:	cmp    BYTE PTR [eax],0x30
6401eaba:	je     0x6401eab6
6401eabc:	mov    ecx,DWORD PTR [esi+0xbc]
6401eac2:	mov    ecx,DWORD PTR [ecx]
6401eac4:	push   ebx
6401eac5:	mov    bl,BYTE PTR [eax]
6401eac7:	cmp    bl,BYTE PTR [ecx]
6401eac9:	pop    ebx
6401eaca:	jne    0x6401eacd
6401eacc:	dec    eax
6401eacd:	mov    cl,BYTE PTR [edx]
6401eacf:	inc    eax
6401ead0:	inc    edx
6401ead1:	test   cl,cl
6401ead3:	mov    BYTE PTR [eax],cl
6401ead5:	jne    0x6401eacd
6401ead7:	cmp    BYTE PTR [ebp-0x4],0x0
6401eadb:	pop    esi
6401eadc:	je     0x6401eae5
6401eade:	mov    eax,DWORD PTR [ebp-0x8]
6401eae1:	and    DWORD PTR [eax+0x70],0xfffffffd
6401eae5:	leave  
6401eae6:	ret    
6401eae7:	fldz   
6401eae9:	mov    eax,DWORD PTR [esp+0x4]
6401eaed:	fcomp  QWORD PTR [eax]
6401eaef:	fnstsw ax
6401eaf1:	test   ah,0x41
6401eaf4:	jp     0x6401eafa
6401eaf6:	xor    eax,eax
6401eaf8:	inc    eax
6401eaf9:	ret    
6401eafa:	xor    eax,eax
6401eafc:	ret    
6401eafd:	push   ebp
6401eafe:	mov    ebp,esp
6401eb00:	push   ecx
6401eb01:	push   ecx
6401eb02:	cmp    DWORD PTR [ebp+0x8],0x0
6401eb06:	push   DWORD PTR [ebp+0x14]
6401eb09:	push   DWORD PTR [ebp+0x10]
6401eb0c:	je     0x6401eb27
6401eb0e:	lea    eax,[ebp-0x8]
6401eb11:	push   eax
6401eb12:	call   0x6401f56d
6401eb17:	mov    ecx,DWORD PTR [ebp-0x8]
6401eb1a:	mov    eax,DWORD PTR [ebp+0xc]
6401eb1d:	mov    DWORD PTR [eax],ecx
6401eb1f:	mov    ecx,DWORD PTR [ebp-0x4]
6401eb22:	mov    DWORD PTR [eax+0x4],ecx
6401eb25:	jmp    0x6401eb38
6401eb27:	lea    eax,[ebp+0x8]
6401eb2a:	push   eax
6401eb2b:	call   0x6401f613
6401eb30:	mov    eax,DWORD PTR [ebp+0xc]
6401eb33:	mov    ecx,DWORD PTR [ebp+0x8]
6401eb36:	mov    DWORD PTR [eax],ecx
6401eb38:	add    esp,0xc
6401eb3b:	leave  
6401eb3c:	ret    
6401eb3d:	push   0x0
6401eb3f:	push   DWORD PTR [esp+0x10]
6401eb43:	push   DWORD PTR [esp+0x10]
6401eb47:	push   DWORD PTR [esp+0x10]
6401eb4b:	call   0x6401eafd
6401eb50:	add    esp,0x10
6401eb53:	ret    
6401eb54:	test   edi,edi
6401eb56:	push   esi
6401eb57:	mov    esi,eax
6401eb59:	je     0x6401eb6f
6401eb5b:	push   esi
6401eb5c:	call   0x64013cc0
6401eb61:	inc    eax
6401eb62:	push   eax
6401eb63:	push   esi
6401eb64:	add    esi,edi
6401eb66:	push   esi
6401eb67:	call   0x64013540
6401eb6c:	add    esp,0x10
6401eb6f:	pop    esi
6401eb70:	ret    
6401eb71:	push   0x0
6401eb73:	push   DWORD PTR [esp+0x8]
6401eb77:	call   0x6401e9f6
6401eb7c:	pop    ecx
6401eb7d:	pop    ecx
6401eb7e:	ret    
6401eb7f:	push   0x0
6401eb81:	push   DWORD PTR [esp+0x8]
6401eb85:	call   0x6401ea67
6401eb8a:	pop    ecx
6401eb8b:	pop    ecx
6401eb8c:	ret    
6401eb8d:	push   ebp
6401eb8e:	mov    ebp,esp
6401eb90:	sub    esp,0x10
6401eb93:	push   ebx
6401eb94:	push   esi
6401eb95:	push   edi
6401eb96:	push   DWORD PTR [ebp+0x1c]
6401eb99:	lea    ecx,[ebp-0x10]
6401eb9c:	mov    ebx,eax
6401eb9e:	call   0x6401271f
6401eba3:	xor    esi,esi
6401eba5:	cmp    ebx,esi
6401eba7:	jne    0x6401ebd4
6401eba9:	call   0x640142c0
6401ebae:	push   0x16
6401ebb0:	pop    edi
6401ebb1:	push   esi
6401ebb2:	push   esi
6401ebb3:	push   esi
6401ebb4:	push   esi
6401ebb5:	push   esi
6401ebb6:	mov    DWORD PTR [eax],edi
6401ebb8:	call   0x640120b4
6401ebbd:	add    esp,0x14
6401ebc0:	cmp    BYTE PTR [ebp-0x4],0x0
6401ebc4:	je     0x6401ebcd
6401ebc6:	mov    eax,DWORD PTR [ebp-0x8]
6401ebc9:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ebcd:	mov    eax,edi
6401ebcf:	jmp    0x6401ecf5
6401ebd4:	cmp    DWORD PTR [ebp+0x8],esi
6401ebd7:	jbe    0x6401eba9
6401ebd9:	cmp    DWORD PTR [ebp+0xc],esi
6401ebdc:	jle    0x6401ebe3
6401ebde:	mov    eax,DWORD PTR [ebp+0xc]
6401ebe1:	jmp    0x6401ebe5
6401ebe3:	xor    eax,eax
6401ebe5:	add    eax,0x9
6401ebe8:	cmp    DWORD PTR [ebp+0x8],eax
6401ebeb:	ja     0x6401ebf6
6401ebed:	call   0x640142c0
6401ebf2:	push   0x22
6401ebf4:	jmp    0x6401ebb0
6401ebf6:	cmp    BYTE PTR [ebp+0x18],0x0
6401ebfa:	je     0x6401ec1a
6401ebfc:	mov    edx,DWORD PTR [ebp+0x14]
6401ebff:	xor    eax,eax
6401ec01:	cmp    DWORD PTR [ebp+0xc],esi
6401ec04:	setg   al
6401ec07:	xor    ecx,ecx
6401ec09:	cmp    DWORD PTR [edx],0x2d
6401ec0c:	sete   cl
6401ec0f:	mov    edi,eax
6401ec11:	add    ecx,ebx
6401ec13:	mov    eax,ecx
6401ec15:	call   0x6401eb54
6401ec1a:	mov    edi,DWORD PTR [ebp+0x14]
6401ec1d:	cmp    DWORD PTR [edi],0x2d
6401ec20:	mov    esi,ebx
6401ec22:	jne    0x6401ec2a
6401ec24:	mov    BYTE PTR [ebx],0x2d
6401ec27:	lea    esi,[ebx+0x1]
6401ec2a:	cmp    DWORD PTR [ebp+0xc],0x0
6401ec2e:	jle    0x6401ec48
6401ec30:	lea    eax,[esi+0x1]
6401ec33:	mov    cl,BYTE PTR [eax]
6401ec35:	mov    BYTE PTR [esi],cl
6401ec37:	mov    esi,eax
6401ec39:	mov    eax,DWORD PTR [ebp-0x10]
6401ec3c:	mov    eax,DWORD PTR [eax+0xbc]
6401ec42:	mov    eax,DWORD PTR [eax]
6401ec44:	mov    al,BYTE PTR [eax]
6401ec46:	mov    BYTE PTR [esi],al
6401ec48:	xor    eax,eax
6401ec4a:	cmp    BYTE PTR [ebp+0x18],al
6401ec4d:	sete   al
6401ec50:	add    eax,DWORD PTR [ebp+0xc]
6401ec53:	add    esi,eax
6401ec55:	cmp    DWORD PTR [ebp+0x8],0xffffffff
6401ec59:	jne    0x6401ec60
6401ec5b:	or     ebx,0xffffffff
6401ec5e:	jmp    0x6401ec65
6401ec60:	sub    ebx,esi
6401ec62:	add    ebx,DWORD PTR [ebp+0x8]
6401ec65:	push   0x640264b8
6401ec6a:	push   ebx
6401ec6b:	push   esi
6401ec6c:	call   0x64013eb8
6401ec71:	add    esp,0xc
6401ec74:	xor    ebx,ebx
6401ec76:	test   eax,eax
6401ec78:	je     0x6401ec87
6401ec7a:	push   ebx
6401ec7b:	push   ebx
6401ec7c:	push   ebx
6401ec7d:	push   ebx
6401ec7e:	push   ebx
6401ec7f:	call   0x64011fb8
6401ec84:	add    esp,0x14
6401ec87:	cmp    DWORD PTR [ebp+0x10],ebx
6401ec8a:	lea    ecx,[esi+0x2]
6401ec8d:	je     0x6401ec92
6401ec8f:	mov    BYTE PTR [esi],0x45
6401ec92:	mov    eax,DWORD PTR [edi+0xc]
6401ec95:	inc    esi
6401ec96:	cmp    BYTE PTR [eax],0x30
6401ec99:	je     0x6401ecc9
6401ec9b:	mov    eax,DWORD PTR [edi+0x4]
6401ec9e:	dec    eax
6401ec9f:	jns    0x6401eca6
6401eca1:	neg    eax
6401eca3:	mov    BYTE PTR [esi],0x2d
6401eca6:	inc    esi
6401eca7:	cmp    eax,0x64
6401ecaa:	jl     0x6401ecb6
6401ecac:	cdq    
6401ecad:	push   0x64
6401ecaf:	pop    edi
6401ecb0:	idiv   edi
6401ecb2:	add    BYTE PTR [esi],al
6401ecb4:	mov    eax,edx
6401ecb6:	inc    esi
6401ecb7:	cmp    eax,0xa
6401ecba:	jl     0x6401ecc6
6401ecbc:	cdq    
6401ecbd:	push   0xa
6401ecbf:	pop    edi
6401ecc0:	idiv   edi
6401ecc2:	add    BYTE PTR [esi],al
6401ecc4:	mov    eax,edx
6401ecc6:	add    BYTE PTR [esi+0x1],al
6401ecc9:	test   BYTE PTR ds:0x6402e058,0x1
6401ecd0:	je     0x6401ece6
6401ecd2:	cmp    BYTE PTR [ecx],0x30
6401ecd5:	jne    0x6401ece6
6401ecd7:	push   0x3
6401ecd9:	lea    eax,[ecx+0x1]
6401ecdc:	push   eax
6401ecdd:	push   ecx
6401ecde:	call   0x64013540
6401ece3:	add    esp,0xc
6401ece6:	cmp    BYTE PTR [ebp-0x4],0x0
6401ecea:	je     0x6401ecf3
6401ecec:	mov    eax,DWORD PTR [ebp-0x8]
6401ecef:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ecf3:	xor    eax,eax
6401ecf5:	pop    edi
6401ecf6:	pop    esi
6401ecf7:	pop    ebx
6401ecf8:	leave  
6401ecf9:	ret    
6401ecfa:	push   ebp
6401ecfb:	mov    ebp,esp
6401ecfd:	sub    esp,0x2c
6401ed00:	mov    eax,ds:0x6402c09c
6401ed05:	xor    eax,ebp
6401ed07:	mov    DWORD PTR [ebp-0x4],eax
6401ed0a:	mov    eax,DWORD PTR [ebp+0x8]
6401ed0d:	push   ebx
6401ed0e:	push   esi
6401ed0f:	push   edi
6401ed10:	mov    edi,DWORD PTR [ebp+0xc]
6401ed13:	push   0x16
6401ed15:	pop    esi
6401ed16:	push   esi
6401ed17:	lea    ecx,[ebp-0x1c]
6401ed1a:	push   ecx
6401ed1b:	lea    ecx,[ebp-0x2c]
6401ed1e:	push   ecx
6401ed1f:	push   DWORD PTR [eax+0x4]
6401ed22:	push   DWORD PTR [eax]
6401ed24:	call   0x6401f831
6401ed29:	xor    ebx,ebx
6401ed2b:	add    esp,0x14
6401ed2e:	cmp    edi,ebx
6401ed30:	jne    0x6401ed4a
6401ed32:	call   0x640142c0
6401ed37:	push   ebx
6401ed38:	push   ebx
6401ed39:	push   ebx
6401ed3a:	push   ebx
6401ed3b:	push   ebx
6401ed3c:	mov    DWORD PTR [eax],esi
6401ed3e:	call   0x640120b4
6401ed43:	add    esp,0x14
6401ed46:	mov    eax,esi
6401ed48:	jmp    0x6401edb9
6401ed4a:	mov    eax,DWORD PTR [ebp+0x10]
6401ed4d:	cmp    eax,ebx
6401ed4f:	jbe    0x6401ed32
6401ed51:	cmp    eax,0xffffffff
6401ed54:	mov    esi,DWORD PTR [ebp+0x14]
6401ed57:	jne    0x6401ed5e
6401ed59:	or     eax,0xffffffff
6401ed5c:	jmp    0x6401ed72
6401ed5e:	xor    ecx,ecx
6401ed60:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401ed64:	sete   cl
6401ed67:	sub    eax,ecx
6401ed69:	xor    ecx,ecx
6401ed6b:	cmp    esi,ebx
6401ed6d:	setg   cl
6401ed70:	sub    eax,ecx
6401ed72:	lea    ecx,[ebp-0x2c]
6401ed75:	push   ecx
6401ed76:	lea    ecx,[esi+0x1]
6401ed79:	push   ecx
6401ed7a:	push   eax
6401ed7b:	xor    eax,eax
6401ed7d:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401ed81:	sete   al
6401ed84:	xor    ecx,ecx
6401ed86:	cmp    esi,ebx
6401ed88:	setg   cl
6401ed8b:	add    eax,edi
6401ed8d:	add    ecx,eax
6401ed8f:	push   ecx
6401ed90:	call   0x6401f6b9
6401ed95:	add    esp,0x10
6401ed98:	cmp    eax,ebx
6401ed9a:	je     0x6401eda0
6401ed9c:	mov    BYTE PTR [edi],bl
6401ed9e:	jmp    0x6401edb9
6401eda0:	push   DWORD PTR [ebp+0x1c]
6401eda3:	lea    eax,[ebp-0x2c]
6401eda6:	push   ebx
6401eda7:	push   eax
6401eda8:	push   DWORD PTR [ebp+0x18]
6401edab:	mov    eax,edi
6401edad:	push   esi
6401edae:	push   DWORD PTR [ebp+0x10]
6401edb1:	call   0x6401eb8d
6401edb6:	add    esp,0x18
6401edb9:	mov    ecx,DWORD PTR [ebp-0x4]
6401edbc:	pop    edi
6401edbd:	pop    esi
6401edbe:	xor    ecx,ebp
6401edc0:	pop    ebx
6401edc1:	call   0x6401257c
6401edc6:	leave  
6401edc7:	ret    
6401edc8:	push   ebp
6401edc9:	mov    ebp,esp
6401edcb:	push   0x0
6401edcd:	push   DWORD PTR [ebp+0x18]
6401edd0:	push   DWORD PTR [ebp+0x14]
6401edd3:	push   DWORD PTR [ebp+0x10]
6401edd6:	push   DWORD PTR [ebp+0xc]
6401edd9:	push   DWORD PTR [ebp+0x8]
6401eddc:	call   0x6401ecfa
6401ede1:	add    esp,0x18
6401ede4:	pop    ebp
6401ede5:	ret    
6401ede6:	push   ebp
6401ede7:	mov    ebp,esp
6401ede9:	sub    esp,0x24
6401edec:	push   esi
6401eded:	push   edi
6401edee:	push   DWORD PTR [ebp+0x1c]
6401edf1:	lea    ecx,[ebp-0x24]
6401edf4:	mov    DWORD PTR [ebp-0x14],0x3ff
6401edfb:	xor    edi,edi
6401edfd:	mov    DWORD PTR [ebp-0x4],0x30
6401ee04:	call   0x6401271f
6401ee09:	cmp    DWORD PTR [ebp+0x14],edi
6401ee0c:	jge    0x6401ee11
6401ee0e:	mov    DWORD PTR [ebp+0x14],edi
6401ee11:	mov    esi,DWORD PTR [ebp+0xc]
6401ee14:	cmp    esi,edi
6401ee16:	jne    0x6401ee43
6401ee18:	call   0x640142c0
6401ee1d:	push   0x16
6401ee1f:	pop    esi
6401ee20:	push   edi
6401ee21:	push   edi
6401ee22:	push   edi
6401ee23:	push   edi
6401ee24:	push   edi
6401ee25:	mov    DWORD PTR [eax],esi
6401ee27:	call   0x640120b4
6401ee2c:	add    esp,0x14
6401ee2f:	cmp    BYTE PTR [ebp-0x18],0x0
6401ee33:	je     0x6401ee3c
6401ee35:	mov    eax,DWORD PTR [ebp-0x1c]
6401ee38:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ee3c:	mov    eax,esi
6401ee3e:	jmp    0x6401f153
6401ee43:	cmp    DWORD PTR [ebp+0x10],edi
6401ee46:	jbe    0x6401ee18
6401ee48:	mov    eax,DWORD PTR [ebp+0x14]
6401ee4b:	add    eax,0xb
6401ee4e:	cmp    DWORD PTR [ebp+0x10],eax
6401ee51:	mov    BYTE PTR [esi],0x0
6401ee54:	ja     0x6401ee5f
6401ee56:	call   0x640142c0
6401ee5b:	push   0x22
6401ee5d:	jmp    0x6401ee1f
6401ee5f:	mov    edi,DWORD PTR [ebp+0x8]
6401ee62:	mov    eax,DWORD PTR [edi]
6401ee64:	mov    DWORD PTR [ebp-0xc],eax
6401ee67:	mov    eax,DWORD PTR [edi+0x4]
6401ee6a:	mov    ecx,eax
6401ee6c:	shr    ecx,0x14
6401ee6f:	mov    edx,0x7ff
6401ee74:	push   ebx
6401ee75:	and    ecx,edx
6401ee77:	xor    ebx,ebx
6401ee79:	cmp    ecx,edx
6401ee7b:	jne    0x6401ef11
6401ee81:	test   ebx,ebx
6401ee83:	jne    0x6401ef11
6401ee89:	mov    eax,DWORD PTR [ebp+0x10]
6401ee8c:	cmp    eax,0xffffffff
6401ee8f:	jne    0x6401ee95
6401ee91:	or     eax,eax
6401ee93:	jmp    0x6401ee98
6401ee95:	add    eax,0xfffffffe
6401ee98:	push   0x0
6401ee9a:	push   DWORD PTR [ebp+0x14]
6401ee9d:	lea    ebx,[esi+0x2]
6401eea0:	push   eax
6401eea1:	push   ebx
6401eea2:	push   edi
6401eea3:	call   0x6401edc8
6401eea8:	add    esp,0x14
6401eeab:	test   eax,eax
6401eead:	je     0x6401eec8
6401eeaf:	cmp    BYTE PTR [ebp-0x18],0x0
6401eeb3:	mov    BYTE PTR [esi],0x0
6401eeb6:	je     0x6401f152
6401eebc:	mov    ecx,DWORD PTR [ebp-0x1c]
6401eebf:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401eec3:	jmp    0x6401f152
6401eec8:	cmp    BYTE PTR [ebx],0x2d
6401eecb:	jne    0x6401eed1
6401eecd:	mov    BYTE PTR [esi],0x2d
6401eed0:	inc    esi
6401eed1:	mov    BYTE PTR [esi],0x30
6401eed4:	inc    esi
6401eed5:	cmp    DWORD PTR [ebp+0x18],0x0
6401eed9:	push   0x65
6401eedb:	sete   al
6401eede:	dec    al
6401eee0:	and    al,0xe0
6401eee2:	add    al,0x78
6401eee4:	mov    BYTE PTR [esi],al
6401eee6:	inc    esi
6401eee7:	push   esi
6401eee8:	call   0x6401f540
6401eeed:	test   eax,eax
6401eeef:	pop    ecx
6401eef0:	pop    ecx
6401eef1:	je     0x6401f143
6401eef7:	cmp    DWORD PTR [ebp+0x18],0x0
6401eefb:	sete   cl
6401eefe:	dec    cl
6401ef00:	and    cl,0xe0
6401ef03:	add    cl,0x70
6401ef06:	mov    BYTE PTR [eax],cl
6401ef08:	mov    BYTE PTR [eax+0x3],0x0
6401ef0c:	jmp    0x6401f143
6401ef11:	and    eax,0x80000000
6401ef16:	xor    ecx,ecx
6401ef18:	or     ecx,eax
6401ef1a:	je     0x6401ef20
6401ef1c:	mov    BYTE PTR [esi],0x2d
6401ef1f:	inc    esi
6401ef20:	mov    ebx,DWORD PTR [ebp+0x18]
6401ef23:	mov    BYTE PTR [esi],0x30
6401ef26:	inc    esi
6401ef27:	test   ebx,ebx
6401ef29:	sete   al
6401ef2c:	dec    al
6401ef2e:	and    al,0xe0
6401ef30:	add    al,0x78
6401ef32:	mov    BYTE PTR [esi],al
6401ef34:	mov    ecx,DWORD PTR [edi+0x4]
6401ef37:	inc    esi
6401ef38:	neg    ebx
6401ef3a:	sbb    ebx,ebx
6401ef3c:	and    ebx,0xffffffe0
6401ef3f:	and    ecx,0x7ff00000
6401ef45:	xor    eax,eax
6401ef47:	add    ebx,0x27
6401ef4a:	xor    edx,edx
6401ef4c:	or     eax,ecx
6401ef4e:	jne    0x6401ef71
6401ef50:	mov    BYTE PTR [esi],0x30
6401ef53:	mov    ecx,DWORD PTR [edi+0x4]
6401ef56:	mov    eax,DWORD PTR [edi]
6401ef58:	and    ecx,0xfffff
6401ef5e:	inc    esi
6401ef5f:	or     eax,ecx
6401ef61:	jne    0x6401ef68
6401ef63:	mov    DWORD PTR [ebp-0x14],edx
6401ef66:	jmp    0x6401ef75
6401ef68:	mov    DWORD PTR [ebp-0x14],0x3fe
6401ef6f:	jmp    0x6401ef75
6401ef71:	mov    BYTE PTR [esi],0x31
6401ef74:	inc    esi
6401ef75:	mov    eax,esi
6401ef77:	inc    esi
6401ef78:	cmp    DWORD PTR [ebp+0x14],edx
6401ef7b:	mov    DWORD PTR [ebp+0xc],eax
6401ef7e:	jne    0x6401ef84
6401ef80:	mov    BYTE PTR [eax],dl
6401ef82:	jmp    0x6401ef93
6401ef84:	mov    ecx,DWORD PTR [ebp-0x24]
6401ef87:	mov    ecx,DWORD PTR [ecx+0xbc]
6401ef8d:	mov    ecx,DWORD PTR [ecx]
6401ef8f:	mov    cl,BYTE PTR [ecx]
6401ef91:	mov    BYTE PTR [eax],cl
6401ef93:	mov    ecx,DWORD PTR [edi+0x4]
6401ef96:	mov    eax,DWORD PTR [edi]
6401ef98:	and    ecx,0xfffff
6401ef9e:	mov    DWORD PTR [ebp-0x8],ecx
6401efa1:	ja     0x6401efab
6401efa3:	cmp    eax,edx
6401efa5:	jbe    0x6401f060
6401efab:	mov    DWORD PTR [ebp-0xc],edx
6401efae:	mov    DWORD PTR [ebp-0x8],0xf0000
6401efb5:	cmp    DWORD PTR [ebp+0x14],0x0
6401efb9:	jle    0x6401f008
6401efbb:	mov    edx,DWORD PTR [edi+0x4]
6401efbe:	and    edx,DWORD PTR [ebp-0x8]
6401efc1:	mov    eax,DWORD PTR [edi]
6401efc3:	movsx  ecx,WORD PTR [ebp-0x4]
6401efc7:	and    eax,DWORD PTR [ebp-0xc]
6401efca:	and    edx,0xfffff
6401efd0:	call   0x6401f9a0
6401efd5:	add    ax,0x30
6401efd9:	movzx  eax,ax
6401efdc:	cmp    ax,0x39
6401efe0:	jbe    0x6401efe4
6401efe2:	add    eax,ebx
6401efe4:	mov    ecx,DWORD PTR [ebp-0x8]
6401efe7:	sub    DWORD PTR [ebp-0x4],0x4
6401efeb:	mov    BYTE PTR [esi],al
6401efed:	mov    eax,DWORD PTR [ebp-0xc]
6401eff0:	shrd   eax,ecx,0x4
6401eff4:	shr    ecx,0x4
6401eff7:	inc    esi
6401eff8:	dec    DWORD PTR [ebp+0x14]
6401effb:	cmp    WORD PTR [ebp-0x4],0x0
6401f000:	mov    DWORD PTR [ebp-0xc],eax
6401f003:	mov    DWORD PTR [ebp-0x8],ecx
6401f006:	jge    0x6401efb5
6401f008:	cmp    WORD PTR [ebp-0x4],0x0
6401f00d:	jl     0x6401f060
6401f00f:	mov    edx,DWORD PTR [edi+0x4]
6401f012:	and    edx,DWORD PTR [ebp-0x8]
6401f015:	mov    eax,DWORD PTR [edi]
6401f017:	movsx  ecx,WORD PTR [ebp-0x4]
6401f01b:	and    eax,DWORD PTR [ebp-0xc]
6401f01e:	and    edx,0xfffff
6401f024:	call   0x6401f9a0
6401f029:	cmp    ax,0x8
6401f02d:	jbe    0x6401f060
6401f02f:	lea    eax,[esi-0x1]
6401f032:	mov    cl,BYTE PTR [eax]
6401f034:	cmp    cl,0x66
6401f037:	je     0x6401f03e
6401f039:	cmp    cl,0x46
6401f03c:	jne    0x6401f044
6401f03e:	mov    BYTE PTR [eax],0x30
6401f041:	dec    eax
6401f042:	jmp    0x6401f032
6401f044:	cmp    eax,DWORD PTR [ebp+0xc]
6401f047:	je     0x6401f05d
6401f049:	mov    cl,BYTE PTR [eax]
6401f04b:	cmp    cl,0x39
6401f04e:	jne    0x6401f057
6401f050:	add    bl,0x3a
6401f053:	mov    BYTE PTR [eax],bl
6401f055:	jmp    0x6401f060
6401f057:	inc    cl
6401f059:	mov    BYTE PTR [eax],cl
6401f05b:	jmp    0x6401f060
6401f05d:	inc    BYTE PTR [eax-0x1]
6401f060:	cmp    DWORD PTR [ebp+0x14],0x0
6401f064:	jle    0x6401f077
6401f066:	push   DWORD PTR [ebp+0x14]
6401f069:	push   0x30
6401f06b:	push   esi
6401f06c:	call   0x64012c00
6401f071:	add    esp,0xc
6401f074:	add    esi,DWORD PTR [ebp+0x14]
6401f077:	mov    eax,DWORD PTR [ebp+0xc]
6401f07a:	cmp    BYTE PTR [eax],0x0
6401f07d:	jne    0x6401f081
6401f07f:	mov    esi,eax
6401f081:	cmp    DWORD PTR [ebp+0x18],0x0
6401f085:	mov    cl,0x34
6401f087:	sete   al
6401f08a:	dec    al
6401f08c:	and    al,0xe0
6401f08e:	add    al,0x70
6401f090:	mov    BYTE PTR [esi],al
6401f092:	mov    eax,DWORD PTR [edi]
6401f094:	mov    edx,DWORD PTR [edi+0x4]
6401f097:	inc    esi
6401f098:	call   0x6401f9a0
6401f09d:	xor    ebx,ebx
6401f09f:	and    eax,0x7ff
6401f0a4:	and    edx,ebx
6401f0a6:	sub    eax,DWORD PTR [ebp-0x14]
6401f0a9:	push   ebx
6401f0aa:	pop    ecx
6401f0ab:	sbb    edx,ecx
6401f0ad:	js     0x6401f0bb
6401f0af:	jg     0x6401f0b5
6401f0b1:	cmp    eax,ebx
6401f0b3:	jb     0x6401f0bb
6401f0b5:	mov    BYTE PTR [esi],0x2b
6401f0b8:	inc    esi
6401f0b9:	jmp    0x6401f0c5
6401f0bb:	mov    BYTE PTR [esi],0x2d
6401f0be:	inc    esi
6401f0bf:	neg    eax
6401f0c1:	adc    edx,ebx
6401f0c3:	neg    edx
6401f0c5:	cmp    edx,ebx
6401f0c7:	mov    edi,esi
6401f0c9:	mov    BYTE PTR [esi],0x30
6401f0cc:	jl     0x6401f0f2
6401f0ce:	mov    ecx,0x3e8
6401f0d3:	jg     0x6401f0d9
6401f0d5:	cmp    eax,ecx
6401f0d7:	jb     0x6401f0f2
6401f0d9:	push   ebx
6401f0da:	push   ecx
6401f0db:	push   edx
6401f0dc:	push   eax
6401f0dd:	call   0x6401f8c0
6401f0e2:	add    al,0x30
6401f0e4:	mov    BYTE PTR [esi],al
6401f0e6:	inc    esi
6401f0e7:	cmp    esi,edi
6401f0e9:	mov    DWORD PTR [ebp-0x10],edx
6401f0ec:	mov    eax,ecx
6401f0ee:	mov    edx,ebx
6401f0f0:	jne    0x6401f0fd
6401f0f2:	test   edx,edx
6401f0f4:	jl     0x6401f114
6401f0f6:	jg     0x6401f0fd
6401f0f8:	cmp    eax,0x64
6401f0fb:	jb     0x6401f114
6401f0fd:	push   0x0
6401f0ff:	push   0x64
6401f101:	push   edx
6401f102:	push   eax
6401f103:	call   0x6401f8c0
6401f108:	add    al,0x30
6401f10a:	mov    BYTE PTR [esi],al
6401f10c:	mov    DWORD PTR [ebp-0x10],edx
6401f10f:	inc    esi
6401f110:	mov    eax,ecx
6401f112:	mov    edx,ebx
6401f114:	cmp    esi,edi
6401f116:	jne    0x6401f123
6401f118:	test   edx,edx
6401f11a:	jl     0x6401f13b
6401f11c:	jg     0x6401f123
6401f11e:	cmp    eax,0xa
6401f121:	jb     0x6401f13b
6401f123:	push   0x0
6401f125:	push   0xa
6401f127:	push   edx
6401f128:	push   eax
6401f129:	call   0x6401f8c0
6401f12e:	add    al,0x30
6401f130:	mov    BYTE PTR [esi],al
6401f132:	mov    DWORD PTR [ebp-0x10],edx
6401f135:	inc    esi
6401f136:	mov    eax,ecx
6401f138:	mov    DWORD PTR [ebp-0x10],ebx
6401f13b:	add    al,0x30
6401f13d:	mov    BYTE PTR [esi],al
6401f13f:	mov    BYTE PTR [esi+0x1],0x0
6401f143:	cmp    BYTE PTR [ebp-0x18],0x0
6401f147:	je     0x6401f150
6401f149:	mov    eax,DWORD PTR [ebp-0x1c]
6401f14c:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f150:	xor    eax,eax
6401f152:	pop    ebx
6401f153:	pop    edi
6401f154:	pop    esi
6401f155:	leave  
6401f156:	ret    
6401f157:	push   ebp
6401f158:	mov    ebp,esp
6401f15a:	sub    esp,0x10
6401f15d:	push   ebx
6401f15e:	push   esi
6401f15f:	push   edi
6401f160:	push   DWORD PTR [ebp+0x14]
6401f163:	mov    ebx,eax
6401f165:	mov    esi,DWORD PTR [ebx+0x4]
6401f168:	mov    edi,ecx
6401f16a:	lea    ecx,[ebp-0x10]
6401f16d:	dec    esi
6401f16e:	call   0x6401271f
6401f173:	test   edi,edi
6401f175:	jne    0x6401f1a4
6401f177:	call   0x640142c0
6401f17c:	push   0x16
6401f17e:	pop    esi
6401f17f:	mov    DWORD PTR [eax],esi
6401f181:	xor    eax,eax
6401f183:	push   eax
6401f184:	push   eax
6401f185:	push   eax
6401f186:	push   eax
6401f187:	push   eax
6401f188:	call   0x640120b4
6401f18d:	add    esp,0x14
6401f190:	cmp    BYTE PTR [ebp-0x4],0x0
6401f194:	je     0x6401f19d
6401f196:	mov    eax,DWORD PTR [ebp-0x8]
6401f199:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f19d:	mov    eax,esi
6401f19f:	jmp    0x6401f247
6401f1a4:	cmp    DWORD PTR [ebp+0x8],0x0
6401f1a8:	jbe    0x6401f177
6401f1aa:	cmp    BYTE PTR [ebp+0x10],0x0
6401f1ae:	je     0x6401f1c8
6401f1b0:	cmp    esi,DWORD PTR [ebp+0xc]
6401f1b3:	jne    0x6401f1c8
6401f1b5:	xor    eax,eax
6401f1b7:	cmp    DWORD PTR [ebx],0x2d
6401f1ba:	sete   al
6401f1bd:	add    eax,esi
6401f1bf:	add    eax,edi
6401f1c1:	mov    BYTE PTR [eax],0x30
6401f1c4:	mov    BYTE PTR [eax+0x1],0x0
6401f1c8:	cmp    DWORD PTR [ebx],0x2d
6401f1cb:	mov    esi,edi
6401f1cd:	jne    0x6401f1d5
6401f1cf:	mov    BYTE PTR [edi],0x2d
6401f1d2:	lea    esi,[edi+0x1]
6401f1d5:	mov    eax,DWORD PTR [ebx+0x4]
6401f1d8:	xor    edi,edi
6401f1da:	inc    edi
6401f1db:	test   eax,eax
6401f1dd:	jg     0x6401f1ec
6401f1df:	mov    eax,esi
6401f1e1:	call   0x6401eb54
6401f1e6:	mov    BYTE PTR [esi],0x30
6401f1e9:	inc    esi
6401f1ea:	jmp    0x6401f1ee
6401f1ec:	add    esi,eax
6401f1ee:	cmp    DWORD PTR [ebp+0xc],0x0
6401f1f2:	jle    0x6401f238
6401f1f4:	mov    eax,esi
6401f1f6:	call   0x6401eb54
6401f1fb:	mov    eax,DWORD PTR [ebp-0x10]
6401f1fe:	mov    eax,DWORD PTR [eax+0xbc]
6401f204:	mov    eax,DWORD PTR [eax]
6401f206:	mov    al,BYTE PTR [eax]
6401f208:	mov    BYTE PTR [esi],al
6401f20a:	mov    ebx,DWORD PTR [ebx+0x4]
6401f20d:	inc    esi
6401f20e:	test   ebx,ebx
6401f210:	jge    0x6401f238
6401f212:	neg    ebx
6401f214:	cmp    BYTE PTR [ebp+0x10],0x0
6401f218:	jne    0x6401f21f
6401f21a:	cmp    DWORD PTR [ebp+0xc],ebx
6401f21d:	jl     0x6401f222
6401f21f:	mov    DWORD PTR [ebp+0xc],ebx
6401f222:	mov    edi,DWORD PTR [ebp+0xc]
6401f225:	mov    eax,esi
6401f227:	call   0x6401eb54
6401f22c:	push   edi
6401f22d:	push   0x30
6401f22f:	push   esi
6401f230:	call   0x64012c00
6401f235:	add    esp,0xc
6401f238:	cmp    BYTE PTR [ebp-0x4],0x0
6401f23c:	je     0x6401f245
6401f23e:	mov    eax,DWORD PTR [ebp-0x8]
6401f241:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f245:	xor    eax,eax
6401f247:	pop    edi
6401f248:	pop    esi
6401f249:	pop    ebx
6401f24a:	leave  
6401f24b:	ret    
6401f24c:	push   ebp
6401f24d:	mov    ebp,esp
6401f24f:	sub    esp,0x2c
6401f252:	mov    eax,ds:0x6402c09c
6401f257:	xor    eax,ebp
6401f259:	mov    DWORD PTR [ebp-0x4],eax
6401f25c:	mov    eax,DWORD PTR [ebp+0x8]
6401f25f:	push   ebx
6401f260:	push   esi
6401f261:	push   edi
6401f262:	mov    edi,DWORD PTR [ebp+0xc]
6401f265:	push   0x16
6401f267:	pop    esi
6401f268:	push   esi
6401f269:	lea    ecx,[ebp-0x1c]
6401f26c:	push   ecx
6401f26d:	lea    ecx,[ebp-0x2c]
6401f270:	push   ecx
6401f271:	push   DWORD PTR [eax+0x4]
6401f274:	push   DWORD PTR [eax]
6401f276:	call   0x6401f831
6401f27b:	xor    ebx,ebx
6401f27d:	add    esp,0x14
6401f280:	cmp    edi,ebx
6401f282:	jne    0x6401f29c
6401f284:	call   0x640142c0
6401f289:	push   ebx
6401f28a:	push   ebx
6401f28b:	push   ebx
6401f28c:	push   ebx
6401f28d:	push   ebx
6401f28e:	mov    DWORD PTR [eax],esi
6401f290:	call   0x640120b4
6401f295:	add    esp,0x14
6401f298:	mov    eax,esi
6401f29a:	jmp    0x6401f2f6
6401f29c:	mov    eax,DWORD PTR [ebp+0x10]
6401f29f:	cmp    eax,ebx
6401f2a1:	jbe    0x6401f284
6401f2a3:	cmp    eax,0xffffffff
6401f2a6:	jne    0x6401f2ac
6401f2a8:	or     eax,eax
6401f2aa:	jmp    0x6401f2b7
6401f2ac:	xor    ecx,ecx
6401f2ae:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401f2b2:	sete   cl
6401f2b5:	sub    eax,ecx
6401f2b7:	mov    esi,DWORD PTR [ebp+0x14]
6401f2ba:	lea    ecx,[ebp-0x2c]
6401f2bd:	push   ecx
6401f2be:	mov    ecx,DWORD PTR [ebp-0x28]
6401f2c1:	add    ecx,esi
6401f2c3:	push   ecx
6401f2c4:	push   eax
6401f2c5:	xor    eax,eax
6401f2c7:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401f2cb:	sete   al
6401f2ce:	add    eax,edi
6401f2d0:	push   eax
6401f2d1:	call   0x6401f6b9
6401f2d6:	add    esp,0x10
6401f2d9:	cmp    eax,ebx
6401f2db:	je     0x6401f2e1
6401f2dd:	mov    BYTE PTR [edi],bl
6401f2df:	jmp    0x6401f2f6
6401f2e1:	push   DWORD PTR [ebp+0x18]
6401f2e4:	lea    eax,[ebp-0x2c]
6401f2e7:	push   ebx
6401f2e8:	push   esi
6401f2e9:	push   DWORD PTR [ebp+0x10]
6401f2ec:	mov    ecx,edi
6401f2ee:	call   0x6401f157
6401f2f3:	add    esp,0x10
6401f2f6:	mov    ecx,DWORD PTR [ebp-0x4]
6401f2f9:	pop    edi
6401f2fa:	pop    esi
6401f2fb:	xor    ecx,ebp
6401f2fd:	pop    ebx
6401f2fe:	call   0x6401257c
6401f303:	leave  
6401f304:	ret    
6401f305:	push   ebp
6401f306:	mov    ebp,esp
6401f308:	sub    esp,0x30
6401f30b:	mov    eax,ds:0x6402c09c
6401f310:	xor    eax,ebp
6401f312:	mov    DWORD PTR [ebp-0x4],eax
6401f315:	mov    eax,DWORD PTR [ebp+0x8]
6401f318:	push   ebx
6401f319:	push   esi
6401f31a:	mov    esi,DWORD PTR [ebp+0xc]
6401f31d:	push   edi
6401f31e:	push   0x16
6401f320:	pop    edi
6401f321:	push   edi
6401f322:	lea    ecx,[ebp-0x1c]
6401f325:	push   ecx
6401f326:	lea    ecx,[ebp-0x30]
6401f329:	push   ecx
6401f32a:	push   DWORD PTR [eax+0x4]
6401f32d:	push   DWORD PTR [eax]
6401f32f:	call   0x6401f831
6401f334:	xor    ebx,ebx
6401f336:	add    esp,0x14
6401f339:	cmp    esi,ebx
6401f33b:	jne    0x6401f358
6401f33d:	call   0x640142c0
6401f342:	push   ebx
6401f343:	push   ebx
6401f344:	push   ebx
6401f345:	push   ebx
6401f346:	push   ebx
6401f347:	mov    DWORD PTR [eax],edi
6401f349:	call   0x640120b4
6401f34e:	add    esp,0x14
6401f351:	mov    eax,edi
6401f353:	jmp    0x6401f3ee
6401f358:	mov    ecx,DWORD PTR [ebp+0x10]
6401f35b:	cmp    ecx,ebx
6401f35d:	jbe    0x6401f33d
6401f35f:	mov    eax,DWORD PTR [ebp-0x2c]
6401f362:	dec    eax
6401f363:	mov    DWORD PTR [ebp-0x20],eax
6401f366:	xor    eax,eax
6401f368:	cmp    DWORD PTR [ebp-0x30],0x2d
6401f36c:	sete   al
6401f36f:	cmp    ecx,0xffffffff
6401f372:	lea    edi,[eax+esi*1]
6401f375:	jne    0x6401f37b
6401f377:	or     ecx,ecx
6401f379:	jmp    0x6401f37d
6401f37b:	sub    ecx,eax
6401f37d:	lea    eax,[ebp-0x30]
6401f380:	push   eax
6401f381:	push   DWORD PTR [ebp+0x14]
6401f384:	push   ecx
6401f385:	push   edi
6401f386:	call   0x6401f6b9
6401f38b:	add    esp,0x10
6401f38e:	cmp    eax,ebx
6401f390:	je     0x6401f396
6401f392:	mov    BYTE PTR [esi],bl
6401f394:	jmp    0x6401f3ee
6401f396:	mov    eax,DWORD PTR [ebp-0x2c]
6401f399:	dec    eax
6401f39a:	cmp    DWORD PTR [ebp-0x20],eax
6401f39d:	setl   cl
6401f3a0:	cmp    eax,0xfffffffc
6401f3a3:	jl     0x6401f3d2
6401f3a5:	cmp    eax,DWORD PTR [ebp+0x14]
6401f3a8:	jge    0x6401f3d2
6401f3aa:	cmp    cl,bl
6401f3ac:	je     0x6401f3b8
6401f3ae:	mov    al,BYTE PTR [edi]
6401f3b0:	inc    edi
6401f3b1:	test   al,al
6401f3b3:	jne    0x6401f3ae
6401f3b5:	mov    BYTE PTR [edi-0x2],bl
6401f3b8:	push   DWORD PTR [ebp+0x1c]
6401f3bb:	lea    eax,[ebp-0x30]
6401f3be:	push   0x1
6401f3c0:	push   DWORD PTR [ebp+0x14]
6401f3c3:	mov    ecx,esi
6401f3c5:	push   DWORD PTR [ebp+0x10]
6401f3c8:	call   0x6401f157
6401f3cd:	add    esp,0x10
6401f3d0:	jmp    0x6401f3ee
6401f3d2:	push   DWORD PTR [ebp+0x1c]
6401f3d5:	lea    eax,[ebp-0x30]
6401f3d8:	push   0x1
6401f3da:	push   eax
6401f3db:	push   DWORD PTR [ebp+0x18]
6401f3de:	mov    eax,esi
6401f3e0:	push   DWORD PTR [ebp+0x14]
6401f3e3:	push   DWORD PTR [ebp+0x10]
6401f3e6:	call   0x6401eb8d
6401f3eb:	add    esp,0x18
6401f3ee:	mov    ecx,DWORD PTR [ebp-0x4]
6401f3f1:	pop    edi
6401f3f2:	pop    esi
6401f3f3:	xor    ecx,ebp
6401f3f5:	pop    ebx
6401f3f6:	call   0x6401257c
6401f3fb:	leave  
6401f3fc:	ret    
6401f3fd:	push   ebp
6401f3fe:	mov    ebp,esp
6401f400:	mov    eax,DWORD PTR [ebp+0x14]
6401f403:	cmp    eax,0x65
6401f406:	je     0x6401f467
6401f408:	cmp    eax,0x45
6401f40b:	je     0x6401f467
6401f40d:	cmp    eax,0x66
6401f410:	jne    0x6401f42b
6401f412:	push   DWORD PTR [ebp+0x20]
6401f415:	push   DWORD PTR [ebp+0x18]
6401f418:	push   DWORD PTR [ebp+0x10]
6401f41b:	push   DWORD PTR [ebp+0xc]
6401f41e:	push   DWORD PTR [ebp+0x8]
6401f421:	call   0x6401f24c
6401f426:	add    esp,0x14
6401f429:	pop    ebp
6401f42a:	ret    
6401f42b:	cmp    eax,0x61
6401f42e:	je     0x6401f44e
6401f430:	cmp    eax,0x41
6401f433:	je     0x6401f44e
6401f435:	push   DWORD PTR [ebp+0x20]
6401f438:	push   DWORD PTR [ebp+0x1c]
6401f43b:	push   DWORD PTR [ebp+0x18]
6401f43e:	push   DWORD PTR [ebp+0x10]
6401f441:	push   DWORD PTR [ebp+0xc]
6401f444:	push   DWORD PTR [ebp+0x8]
6401f447:	call   0x6401f305
6401f44c:	jmp    0x6401f47e
6401f44e:	push   DWORD PTR [ebp+0x20]
6401f451:	push   DWORD PTR [ebp+0x1c]
6401f454:	push   DWORD PTR [ebp+0x18]
6401f457:	push   DWORD PTR [ebp+0x10]
6401f45a:	push   DWORD PTR [ebp+0xc]
6401f45d:	push   DWORD PTR [ebp+0x8]
6401f460:	call   0x6401ede6
6401f465:	jmp    0x6401f47e
6401f467:	push   DWORD PTR [ebp+0x20]
6401f46a:	push   DWORD PTR [ebp+0x1c]
6401f46d:	push   DWORD PTR [ebp+0x18]
6401f470:	push   DWORD PTR [ebp+0x10]
6401f473:	push   DWORD PTR [ebp+0xc]
6401f476:	push   DWORD PTR [ebp+0x8]
6401f479:	call   0x6401ecfa
6401f47e:	add    esp,0x18
6401f481:	pop    ebp
6401f482:	ret    
6401f483:	push   ebp
6401f484:	mov    ebp,esp
6401f486:	push   0x0
6401f488:	push   DWORD PTR [ebp+0x1c]
6401f48b:	push   DWORD PTR [ebp+0x18]
6401f48e:	push   DWORD PTR [ebp+0x14]
6401f491:	push   DWORD PTR [ebp+0x10]
6401f494:	push   DWORD PTR [ebp+0xc]
6401f497:	push   DWORD PTR [ebp+0x8]
6401f49a:	call   0x6401f3fd
6401f49f:	add    esp,0x1c
6401f4a2:	pop    ebp
6401f4a3:	ret    
6401f4a4:	push   esi
6401f4a5:	push   0x30000
6401f4aa:	push   0x10000
6401f4af:	xor    esi,esi
6401f4b1:	push   esi
6401f4b2:	call   0x6401f9bf
6401f4b7:	add    esp,0xc
6401f4ba:	test   eax,eax
6401f4bc:	je     0x6401f4cb
6401f4be:	push   esi
6401f4bf:	push   esi
6401f4c0:	push   esi
6401f4c1:	push   esi
6401f4c2:	push   esi
6401f4c3:	call   0x64011fb8
6401f4c8:	add    esp,0x14
6401f4cb:	pop    esi
6401f4cc:	ret    
6401f4cd:	push   ebp
6401f4ce:	mov    ebp,esp
6401f4d0:	sub    esp,0x18
6401f4d3:	fld    QWORD PTR ds:0x640264c8
6401f4d9:	fstp   QWORD PTR [ebp-0x10]
6401f4dc:	fld    QWORD PTR ds:0x640264c0
6401f4e2:	fstp   QWORD PTR [ebp-0x18]
6401f4e5:	fld    QWORD PTR [ebp-0x18]
6401f4e8:	fdiv   QWORD PTR [ebp-0x10]
6401f4eb:	fmul   QWORD PTR [ebp-0x10]
6401f4ee:	fsubr  QWORD PTR [ebp-0x18]
6401f4f1:	fstp   QWORD PTR [ebp-0x8]
6401f4f4:	fld1   
6401f4f6:	fcomp  QWORD PTR [ebp-0x8]
6401f4f9:	fnstsw ax
6401f4fb:	test   ah,0x5
6401f4fe:	jp     0x6401f505
6401f500:	xor    eax,eax
6401f502:	inc    eax
6401f503:	leave  
6401f504:	ret    
6401f505:	xor    eax,eax
6401f507:	leave  
6401f508:	ret    
6401f509:	push   0x640264ec
6401f50e:	call   DWORD PTR ds:0x64024124
6401f514:	test   eax,eax
6401f516:	je     0x6401f52d
6401f518:	push   0x640264d0
6401f51d:	push   eax
6401f51e:	call   DWORD PTR ds:0x64024014
6401f524:	test   eax,eax
6401f526:	je     0x6401f52d
6401f528:	push   0x0
6401f52a:	call   eax
6401f52c:	ret    
6401f52d:	jmp    0x6401f4cd
6401f532:	int3   
6401f533:	int3   
6401f534:	int3   
6401f535:	int3   
6401f536:	int3   
6401f537:	int3   
6401f538:	int3   
6401f539:	int3   
6401f53a:	int3   
6401f53b:	int3   
6401f53c:	int3   
6401f53d:	int3   
6401f53e:	int3   
6401f53f:	int3   
6401f540:	push   ebp
6401f541:	mov    ebp,esp
6401f543:	push   edi
6401f544:	mov    edi,DWORD PTR [ebp+0x8]
6401f547:	xor    eax,eax
6401f549:	or     ecx,0xffffffff
6401f54c:	repnz scas al,BYTE PTR es:[edi]
6401f54e:	add    ecx,0x1
6401f551:	neg    ecx
6401f553:	sub    edi,0x1
6401f556:	mov    al,BYTE PTR [ebp+0xc]
6401f559:	std    
6401f55a:	repnz scas al,BYTE PTR es:[edi]
6401f55c:	add    edi,0x1
6401f55f:	cmp    BYTE PTR [edi],al
6401f561:	je     0x6401f567
6401f563:	xor    eax,eax
6401f565:	jmp    0x6401f569
6401f567:	mov    eax,edi
6401f569:	cld    
6401f56a:	pop    edi
6401f56b:	leave  
6401f56c:	ret    
6401f56d:	push   ebp
6401f56e:	mov    ebp,esp
6401f570:	sub    esp,0x28
6401f573:	mov    eax,ds:0x6402c09c
6401f578:	xor    eax,ebp
6401f57a:	mov    DWORD PTR [ebp-0x4],eax
6401f57d:	push   ebx
6401f57e:	push   esi
6401f57f:	mov    esi,DWORD PTR [ebp+0x8]
6401f582:	push   edi
6401f583:	push   DWORD PTR [ebp+0x10]
6401f586:	mov    edi,DWORD PTR [ebp+0xc]
6401f589:	lea    ecx,[ebp-0x24]
6401f58c:	call   0x6401271f
6401f591:	lea    eax,[ebp-0x24]
6401f594:	push   eax
6401f595:	xor    ebx,ebx
6401f597:	push   ebx
6401f598:	push   ebx
6401f599:	push   ebx
6401f59a:	push   ebx
6401f59b:	push   edi
6401f59c:	lea    eax,[ebp-0x28]
6401f59f:	push   eax
6401f5a0:	lea    eax,[ebp-0x10]
6401f5a3:	push   eax
6401f5a4:	call   0x640204ad
6401f5a9:	mov    DWORD PTR [ebp-0x14],eax
6401f5ac:	lea    eax,[ebp-0x10]
6401f5af:	push   esi
6401f5b0:	push   eax
6401f5b1:	call   0x6401fa29
6401f5b6:	add    esp,0x28
6401f5b9:	test   BYTE PTR [ebp-0x14],0x3
6401f5bd:	jne    0x6401f5ea
6401f5bf:	cmp    eax,0x1
6401f5c2:	jne    0x6401f5d5
6401f5c4:	cmp    BYTE PTR [ebp-0x18],bl
6401f5c7:	je     0x6401f5d0
6401f5c9:	mov    eax,DWORD PTR [ebp-0x1c]
6401f5cc:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f5d0:	push   0x3
6401f5d2:	pop    eax
6401f5d3:	jmp    0x6401f604
6401f5d5:	cmp    eax,0x2
6401f5d8:	jne    0x6401f5f6
6401f5da:	cmp    BYTE PTR [ebp-0x18],bl
6401f5dd:	je     0x6401f5e6
6401f5df:	mov    eax,DWORD PTR [ebp-0x1c]
6401f5e2:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f5e6:	push   0x4
6401f5e8:	jmp    0x6401f5d2
6401f5ea:	test   BYTE PTR [ebp-0x14],0x1
6401f5ee:	jne    0x6401f5da
6401f5f0:	test   BYTE PTR [ebp-0x14],0x2
6401f5f4:	jne    0x6401f5c4
6401f5f6:	cmp    BYTE PTR [ebp-0x18],bl
6401f5f9:	je     0x6401f602
6401f5fb:	mov    eax,DWORD PTR [ebp-0x1c]
6401f5fe:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f602:	xor    eax,eax
6401f604:	mov    ecx,DWORD PTR [ebp-0x4]
6401f607:	pop    edi
6401f608:	pop    esi
6401f609:	xor    ecx,ebp
6401f60b:	pop    ebx
6401f60c:	call   0x6401257c
6401f611:	leave  
6401f612:	ret    
6401f613:	push   ebp
6401f614:	mov    ebp,esp
6401f616:	sub    esp,0x28
6401f619:	mov    eax,ds:0x6402c09c
6401f61e:	xor    eax,ebp
6401f620:	mov    DWORD PTR [ebp-0x4],eax
6401f623:	push   ebx
6401f624:	push   esi
6401f625:	mov    esi,DWORD PTR [ebp+0x8]
6401f628:	push   edi
6401f629:	push   DWORD PTR [ebp+0x10]
6401f62c:	mov    edi,DWORD PTR [ebp+0xc]
6401f62f:	lea    ecx,[ebp-0x24]
6401f632:	call   0x6401271f
6401f637:	lea    eax,[ebp-0x24]
6401f63a:	push   eax
6401f63b:	xor    ebx,ebx
6401f63d:	push   ebx
6401f63e:	push   ebx
6401f63f:	push   ebx
6401f640:	push   ebx
6401f641:	push   edi
6401f642:	lea    eax,[ebp-0x28]
6401f645:	push   eax
6401f646:	lea    eax,[ebp-0x10]
6401f649:	push   eax
6401f64a:	call   0x640204ad
6401f64f:	mov    DWORD PTR [ebp-0x14],eax
6401f652:	lea    eax,[ebp-0x10]
6401f655:	push   esi
6401f656:	push   eax
6401f657:	call   0x6401ff6b
6401f65c:	add    esp,0x28
6401f65f:	test   BYTE PTR [ebp-0x14],0x3
6401f663:	jne    0x6401f690
6401f665:	cmp    eax,0x1
6401f668:	jne    0x6401f67b
6401f66a:	cmp    BYTE PTR [ebp-0x18],bl
6401f66d:	je     0x6401f676
6401f66f:	mov    eax,DWORD PTR [ebp-0x1c]
6401f672:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f676:	push   0x3
6401f678:	pop    eax
6401f679:	jmp    0x6401f6aa
6401f67b:	cmp    eax,0x2
6401f67e:	jne    0x6401f69c
6401f680:	cmp    BYTE PTR [ebp-0x18],bl
6401f683:	je     0x6401f68c
6401f685:	mov    eax,DWORD PTR [ebp-0x1c]
6401f688:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f68c:	push   0x4
6401f68e:	jmp    0x6401f678
6401f690:	test   BYTE PTR [ebp-0x14],0x1
6401f694:	jne    0x6401f680
6401f696:	test   BYTE PTR [ebp-0x14],0x2
6401f69a:	jne    0x6401f66a
6401f69c:	cmp    BYTE PTR [ebp-0x18],bl
6401f69f:	je     0x6401f6a8
6401f6a1:	mov    eax,DWORD PTR [ebp-0x1c]
6401f6a4:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f6a8:	xor    eax,eax
6401f6aa:	mov    ecx,DWORD PTR [ebp-0x4]
6401f6ad:	pop    edi
6401f6ae:	pop    esi
6401f6af:	xor    ecx,ebp
6401f6b1:	pop    ebx
6401f6b2:	call   0x6401257c
6401f6b7:	leave  
6401f6b8:	ret    
6401f6b9:	push   ebp
6401f6ba:	mov    ebp,esp
6401f6bc:	mov    ecx,DWORD PTR [ebp+0x14]
6401f6bf:	push   ebx
6401f6c0:	push   esi
6401f6c1:	mov    esi,DWORD PTR [ebp+0x8]
6401f6c4:	xor    ebx,ebx
6401f6c6:	cmp    esi,ebx
6401f6c8:	push   edi
6401f6c9:	mov    edi,DWORD PTR [ecx+0xc]
6401f6cc:	jne    0x6401f6ec
6401f6ce:	call   0x640142c0
6401f6d3:	push   0x16
6401f6d5:	pop    esi
6401f6d6:	mov    DWORD PTR [eax],esi
6401f6d8:	push   ebx
6401f6d9:	push   ebx
6401f6da:	push   ebx
6401f6db:	push   ebx
6401f6dc:	push   ebx
6401f6dd:	call   0x640120b4
6401f6e2:	add    esp,0x14
6401f6e5:	mov    eax,esi
6401f6e7:	jmp    0x6401f771
6401f6ec:	cmp    DWORD PTR [ebp+0xc],ebx
6401f6ef:	jbe    0x6401f6ce
6401f6f1:	mov    edx,DWORD PTR [ebp+0x10]
6401f6f4:	cmp    edx,ebx
6401f6f6:	mov    BYTE PTR [esi],bl
6401f6f8:	jle    0x6401f6fe
6401f6fa:	mov    eax,edx
6401f6fc:	jmp    0x6401f700
6401f6fe:	xor    eax,eax
6401f700:	inc    eax
6401f701:	cmp    DWORD PTR [ebp+0xc],eax
6401f704:	ja     0x6401f714
6401f706:	call   0x640142c0
6401f70b:	push   0x22
6401f70d:	pop    ecx
6401f70e:	mov    DWORD PTR [eax],ecx
6401f710:	mov    esi,ecx
6401f712:	jmp    0x6401f6d8
6401f714:	cmp    edx,ebx
6401f716:	mov    BYTE PTR [esi],0x30
6401f719:	lea    eax,[esi+0x1]
6401f71c:	jle    0x6401f738
6401f71e:	mov    cl,BYTE PTR [edi]
6401f720:	cmp    cl,bl
6401f722:	je     0x6401f72a
6401f724:	movsx  ecx,cl
6401f727:	inc    edi
6401f728:	jmp    0x6401f72d
6401f72a:	push   0x30
6401f72c:	pop    ecx
6401f72d:	mov    BYTE PTR [eax],cl
6401f72f:	inc    eax
6401f730:	dec    edx
6401f731:	cmp    edx,ebx
6401f733:	jg     0x6401f71e
6401f735:	mov    ecx,DWORD PTR [ebp+0x14]
6401f738:	cmp    edx,ebx
6401f73a:	mov    BYTE PTR [eax],bl
6401f73c:	jl     0x6401f750
6401f73e:	cmp    BYTE PTR [edi],0x35
6401f741:	jl     0x6401f750
6401f743:	jmp    0x6401f748
6401f745:	mov    BYTE PTR [eax],0x30
6401f748:	dec    eax
6401f749:	cmp    BYTE PTR [eax],0x39
6401f74c:	je     0x6401f745
6401f74e:	inc    BYTE PTR [eax]
6401f750:	cmp    BYTE PTR [esi],0x31
6401f753:	jne    0x6401f75a
6401f755:	inc    DWORD PTR [ecx+0x4]
6401f758:	jmp    0x6401f76f
6401f75a:	lea    edi,[esi+0x1]
6401f75d:	push   edi
6401f75e:	call   0x64013cc0
6401f763:	inc    eax
6401f764:	push   eax
6401f765:	push   edi
6401f766:	push   esi
6401f767:	call   0x64013540
6401f76c:	add    esp,0x10
6401f76f:	xor    eax,eax
6401f771:	pop    edi
6401f772:	pop    esi
6401f773:	pop    ebx
6401f774:	pop    ebp
6401f775:	ret    
6401f776:	push   ebp
6401f777:	mov    ebp,esp
6401f779:	push   ecx
6401f77a:	mov    edx,DWORD PTR [ebp+0xc]
6401f77d:	movzx  eax,WORD PTR [edx+0x6]
6401f781:	push   ebx
6401f782:	mov    ecx,eax
6401f784:	push   esi
6401f785:	push   edi
6401f786:	shr    ecx,0x4
6401f789:	and    eax,0x8000
6401f78e:	mov    edi,0x7ff
6401f793:	and    ecx,edi
6401f795:	mov    DWORD PTR [ebp+0xc],eax
6401f798:	mov    eax,DWORD PTR [edx+0x4]
6401f79b:	mov    edx,DWORD PTR [edx]
6401f79d:	movzx  ebx,cx
6401f7a0:	mov    esi,0x80000000
6401f7a5:	and    eax,0xfffff
6401f7aa:	test   ebx,ebx
6401f7ac:	mov    DWORD PTR [ebp-0x4],esi
6401f7af:	je     0x6401f7c4
6401f7b1:	cmp    ebx,edi
6401f7b3:	je     0x6401f7bd
6401f7b5:	add    ecx,0x3c00
6401f7bb:	jmp    0x6401f7e5
6401f7bd:	mov    edi,0x7fff
6401f7c2:	jmp    0x6401f7e8
6401f7c4:	xor    ebx,ebx
6401f7c6:	cmp    eax,ebx
6401f7c8:	jne    0x6401f7dc
6401f7ca:	cmp    edx,ebx
6401f7cc:	jne    0x6401f7dc
6401f7ce:	mov    eax,DWORD PTR [ebp+0x8]
6401f7d1:	mov    cx,WORD PTR [ebp+0xc]
6401f7d5:	mov    DWORD PTR [eax+0x4],ebx
6401f7d8:	mov    DWORD PTR [eax],ebx
6401f7da:	jmp    0x6401f828
6401f7dc:	add    ecx,0x3c01
6401f7e2:	mov    DWORD PTR [ebp-0x4],ebx
6401f7e5:	movzx  edi,cx
6401f7e8:	mov    ecx,edx
6401f7ea:	shr    ecx,0x15
6401f7ed:	shl    eax,0xb
6401f7f0:	or     ecx,eax
6401f7f2:	or     ecx,DWORD PTR [ebp-0x4]
6401f7f5:	mov    eax,DWORD PTR [ebp+0x8]
6401f7f8:	shl    edx,0xb
6401f7fb:	test   esi,ecx
6401f7fd:	mov    DWORD PTR [eax+0x4],ecx
6401f800:	mov    DWORD PTR [eax],edx
6401f802:	jne    0x6401f823
6401f804:	mov    ecx,DWORD PTR [eax]
6401f806:	mov    edx,DWORD PTR [eax+0x4]
6401f809:	mov    ebx,ecx
6401f80b:	add    edx,edx
6401f80d:	shr    ebx,0x1f
6401f810:	or     edx,ebx
6401f812:	add    ecx,ecx
6401f814:	add    edi,0xffff
6401f81a:	test   esi,edx
6401f81c:	mov    DWORD PTR [eax+0x4],edx
6401f81f:	mov    DWORD PTR [eax],ecx
6401f821:	je     0x6401f804
6401f823:	mov    ecx,DWORD PTR [ebp+0xc]
6401f826:	or     ecx,edi
6401f828:	pop    edi
6401f829:	pop    esi
6401f82a:	mov    WORD PTR [eax+0x8],cx
6401f82e:	pop    ebx
6401f82f:	leave  
6401f830:	ret    
6401f831:	push   ebp
6401f832:	mov    ebp,esp
6401f834:	sub    esp,0x30
6401f837:	mov    eax,ds:0x6402c09c
6401f83c:	xor    eax,ebp
6401f83e:	mov    DWORD PTR [ebp-0x4],eax
6401f841:	mov    eax,DWORD PTR [ebp+0x14]
6401f844:	push   ebx
6401f845:	mov    ebx,DWORD PTR [ebp+0x10]
6401f848:	push   esi
6401f849:	mov    DWORD PTR [ebp-0x30],eax
6401f84c:	push   edi
6401f84d:	lea    eax,[ebp+0x8]
6401f850:	push   eax
6401f851:	lea    eax,[ebp-0x10]
6401f854:	push   eax
6401f855:	call   0x6401f776
6401f85a:	pop    ecx
6401f85b:	pop    ecx
6401f85c:	lea    eax,[ebp-0x2c]
6401f85f:	push   eax
6401f860:	push   0x0
6401f862:	push   0x11
6401f864:	sub    esp,0xc
6401f867:	lea    esi,[ebp-0x10]
6401f86a:	mov    edi,esp
6401f86c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f86d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f86e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
6401f870:	call   0x64020b6d
6401f875:	mov    esi,DWORD PTR [ebp-0x30]
6401f878:	mov    DWORD PTR [ebx+0x8],eax
6401f87b:	movsx  eax,BYTE PTR [ebp-0x2a]
6401f87f:	mov    DWORD PTR [ebx],eax
6401f881:	movsx  eax,WORD PTR [ebp-0x2c]
6401f885:	mov    DWORD PTR [ebx+0x4],eax
6401f888:	lea    eax,[ebp-0x28]
6401f88b:	push   eax
6401f88c:	push   DWORD PTR [ebp+0x18]
6401f88f:	push   esi
6401f890:	call   0x64013eb8
6401f895:	add    esp,0x24
6401f898:	test   eax,eax
6401f89a:	je     0x6401f8ab
6401f89c:	xor    eax,eax
6401f89e:	push   eax
6401f89f:	push   eax
6401f8a0:	push   eax
6401f8a1:	push   eax
6401f8a2:	push   eax
6401f8a3:	call   0x64011fb8
6401f8a8:	add    esp,0x14
6401f8ab:	mov    ecx,DWORD PTR [ebp-0x4]
6401f8ae:	pop    edi
6401f8af:	mov    DWORD PTR [ebx+0xc],esi
6401f8b2:	pop    esi
6401f8b3:	mov    eax,ebx
6401f8b5:	xor    ecx,ebp
6401f8b7:	pop    ebx
6401f8b8:	call   0x6401257c
6401f8bd:	leave  
6401f8be:	ret    
6401f8bf:	int3   
6401f8c0:	push   edi
6401f8c1:	push   esi
6401f8c2:	push   ebp
6401f8c3:	xor    edi,edi
6401f8c5:	xor    ebp,ebp
6401f8c7:	mov    eax,DWORD PTR [esp+0x14]
6401f8cb:	or     eax,eax
6401f8cd:	jge    0x6401f8e4
6401f8cf:	inc    edi
6401f8d0:	inc    ebp
6401f8d1:	mov    edx,DWORD PTR [esp+0x10]
6401f8d5:	neg    eax
6401f8d7:	neg    edx
6401f8d9:	sbb    eax,0x0
6401f8dc:	mov    DWORD PTR [esp+0x14],eax
6401f8e0:	mov    DWORD PTR [esp+0x10],edx
6401f8e4:	mov    eax,DWORD PTR [esp+0x1c]
6401f8e8:	or     eax,eax
6401f8ea:	jge    0x6401f900
6401f8ec:	inc    edi
6401f8ed:	mov    edx,DWORD PTR [esp+0x18]
6401f8f1:	neg    eax
6401f8f3:	neg    edx
6401f8f5:	sbb    eax,0x0
6401f8f8:	mov    DWORD PTR [esp+0x1c],eax
6401f8fc:	mov    DWORD PTR [esp+0x18],edx
6401f900:	or     eax,eax
6401f902:	jne    0x6401f92c
6401f904:	mov    ecx,DWORD PTR [esp+0x18]
6401f908:	mov    eax,DWORD PTR [esp+0x14]
6401f90c:	xor    edx,edx
6401f90e:	div    ecx
6401f910:	mov    ebx,eax
6401f912:	mov    eax,DWORD PTR [esp+0x10]
6401f916:	div    ecx
6401f918:	mov    esi,eax
6401f91a:	mov    eax,ebx
6401f91c:	mul    DWORD PTR [esp+0x18]
6401f920:	mov    ecx,eax
6401f922:	mov    eax,esi
6401f924:	mul    DWORD PTR [esp+0x18]
6401f928:	add    edx,ecx
6401f92a:	jmp    0x6401f973
6401f92c:	mov    ebx,eax
6401f92e:	mov    ecx,DWORD PTR [esp+0x18]
6401f932:	mov    edx,DWORD PTR [esp+0x14]
6401f936:	mov    eax,DWORD PTR [esp+0x10]
6401f93a:	shr    ebx,1
6401f93c:	rcr    ecx,1
6401f93e:	shr    edx,1
6401f940:	rcr    eax,1
6401f942:	or     ebx,ebx
6401f944:	jne    0x6401f93a
6401f946:	div    ecx
6401f948:	mov    esi,eax
6401f94a:	mul    DWORD PTR [esp+0x1c]
6401f94e:	mov    ecx,eax
6401f950:	mov    eax,DWORD PTR [esp+0x18]
6401f954:	mul    esi
6401f956:	add    edx,ecx
6401f958:	jb     0x6401f968
6401f95a:	cmp    edx,DWORD PTR [esp+0x14]
6401f95e:	ja     0x6401f968
6401f960:	jb     0x6401f971
6401f962:	cmp    eax,DWORD PTR [esp+0x10]
6401f966:	jbe    0x6401f971
6401f968:	dec    esi
6401f969:	sub    eax,DWORD PTR [esp+0x18]
6401f96d:	sbb    edx,DWORD PTR [esp+0x1c]
6401f971:	xor    ebx,ebx
6401f973:	sub    eax,DWORD PTR [esp+0x10]
6401f977:	sbb    edx,DWORD PTR [esp+0x14]
6401f97b:	dec    ebp
6401f97c:	jns    0x6401f985
6401f97e:	neg    edx
6401f980:	neg    eax
6401f982:	sbb    edx,0x0
6401f985:	mov    ecx,edx
6401f987:	mov    edx,ebx
6401f989:	mov    ebx,ecx
6401f98b:	mov    ecx,eax
6401f98d:	mov    eax,esi
6401f98f:	dec    edi
6401f990:	jne    0x6401f999
6401f992:	neg    edx
6401f994:	neg    eax
6401f996:	sbb    edx,0x0
6401f999:	pop    ebp
6401f99a:	pop    esi
6401f99b:	pop    edi
6401f99c:	ret    0x10
6401f99f:	int3   
6401f9a0:	cmp    cl,0x40
6401f9a3:	jae    0x6401f9ba
6401f9a5:	cmp    cl,0x20
6401f9a8:	jae    0x6401f9b0
6401f9aa:	shrd   eax,edx,cl
6401f9ad:	shr    edx,cl
6401f9af:	ret    
6401f9b0:	mov    eax,edx
6401f9b2:	xor    edx,edx
6401f9b4:	and    cl,0x1f
6401f9b7:	shr    eax,cl
6401f9b9:	ret    
6401f9ba:	xor    eax,eax
6401f9bc:	xor    edx,edx
6401f9be:	ret    
6401f9bf:	push   ebp
6401f9c0:	mov    ebp,esp
6401f9c2:	mov    eax,DWORD PTR [ebp+0x10]
6401f9c5:	mov    ecx,DWORD PTR [ebp+0xc]
6401f9c8:	and    eax,0xfff7ffff
6401f9cd:	and    ecx,eax
6401f9cf:	test   ecx,0xfcf0fce0
6401f9d5:	push   esi
6401f9d6:	je     0x6401fa09
6401f9d8:	push   edi
6401f9d9:	mov    edi,DWORD PTR [ebp+0x8]
6401f9dc:	xor    esi,esi
6401f9de:	cmp    edi,esi
6401f9e0:	je     0x6401f9ed
6401f9e2:	push   esi
6401f9e3:	push   esi
6401f9e4:	call   0x64021561
6401f9e9:	pop    ecx
6401f9ea:	pop    ecx
6401f9eb:	mov    DWORD PTR [edi],eax
6401f9ed:	call   0x640142c0
6401f9f2:	push   0x16
6401f9f4:	pop    edi
6401f9f5:	push   esi
6401f9f6:	push   esi
6401f9f7:	push   esi
6401f9f8:	push   esi
6401f9f9:	push   esi
6401f9fa:	mov    DWORD PTR [eax],edi
6401f9fc:	call   0x640120b4
6401fa01:	add    esp,0x14
6401fa04:	mov    eax,edi
6401fa06:	pop    edi
6401fa07:	jmp    0x6401fa26
6401fa09:	mov    esi,DWORD PTR [ebp+0x8]
6401fa0c:	test   esi,esi
6401fa0e:	push   eax
6401fa0f:	push   DWORD PTR [ebp+0xc]
6401fa12:	je     0x6401fa1d
6401fa14:	call   0x64021561
6401fa19:	mov    DWORD PTR [esi],eax
6401fa1b:	jmp    0x6401fa22
6401fa1d:	call   0x64021561
6401fa22:	pop    ecx
6401fa23:	pop    ecx
6401fa24:	xor    eax,eax
6401fa26:	pop    esi
6401fa27:	pop    ebp
6401fa28:	ret    
6401fa29:	push   ebp
6401fa2a:	mov    ebp,esp
6401fa2c:	sub    esp,0x2c
6401fa2f:	mov    eax,DWORD PTR [ebp+0x8]
6401fa32:	movzx  ecx,WORD PTR [eax+0xa]
6401fa36:	push   ebx
6401fa37:	mov    ebx,ecx
6401fa39:	and    ecx,0x8000
6401fa3f:	mov    DWORD PTR [ebp-0x14],ecx
6401fa42:	mov    ecx,DWORD PTR [eax+0x6]
6401fa45:	mov    DWORD PTR [ebp-0x20],ecx
6401fa48:	mov    ecx,DWORD PTR [eax+0x2]
6401fa4b:	movzx  eax,WORD PTR [eax]
6401fa4e:	and    ebx,0x7fff
6401fa54:	sub    ebx,0x3fff
6401fa5a:	shl    eax,0x10
6401fa5d:	cmp    ebx,0xffffc001
6401fa63:	push   edi
6401fa64:	mov    DWORD PTR [ebp-0x1c],ecx
6401fa67:	mov    DWORD PTR [ebp-0x18],eax
6401fa6a:	jne    0x6401fa93
6401fa6c:	xor    ebx,ebx
6401fa6e:	xor    eax,eax
6401fa70:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6401fa74:	jne    0x6401fa83
6401fa76:	inc    eax
6401fa77:	cmp    eax,0x3
6401fa7a:	jl     0x6401fa70
6401fa7c:	xor    eax,eax
6401fa7e:	jmp    0x6401ff28
6401fa83:	xor    eax,eax
6401fa85:	lea    edi,[ebp-0x20]
6401fa88:	stos   DWORD PTR es:[edi],eax
6401fa89:	stos   DWORD PTR es:[edi],eax
6401fa8a:	push   0x2
6401fa8c:	stos   DWORD PTR es:[edi],eax
6401fa8d:	pop    eax
6401fa8e:	jmp    0x6401ff28
6401fa93:	and    DWORD PTR [ebp+0x8],0x0
6401fa97:	push   esi
6401fa98:	lea    esi,[ebp-0x20]
6401fa9b:	lea    edi,[ebp-0x2c]
6401fa9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401fa9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401faa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401faa1:	mov    esi,DWORD PTR ds:0x6402d078
6401faa7:	dec    esi
6401faa8:	lea    ecx,[esi+0x1]
6401faab:	mov    eax,ecx
6401faad:	cdq    
6401faae:	and    edx,0x1f
6401fab1:	add    eax,edx
6401fab3:	sar    eax,0x5
6401fab6:	mov    edx,ecx
6401fab8:	and    edx,0x8000001f
6401fabe:	mov    DWORD PTR [ebp-0x10],ebx
6401fac1:	mov    DWORD PTR [ebp-0xc],eax
6401fac4:	jns    0x6401facb
6401fac6:	dec    edx
6401fac7:	or     edx,0xffffffe0
6401faca:	inc    edx
6401facb:	lea    edi,[ebp+eax*4-0x20]
6401facf:	push   0x1f
6401fad1:	xor    eax,eax
6401fad3:	pop    ecx
6401fad4:	sub    ecx,edx
6401fad6:	inc    eax
6401fad7:	shl    eax,cl
6401fad9:	mov    DWORD PTR [ebp-0x8],ecx
6401fadc:	test   DWORD PTR [edi],eax
6401fade:	je     0x6401fb71
6401fae4:	mov    eax,DWORD PTR [ebp-0xc]
6401fae7:	or     edx,0xffffffff
6401faea:	shl    edx,cl
6401faec:	not    edx
6401faee:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401faf2:	jmp    0x6401faf9
6401faf4:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401faf9:	jne    0x6401fb03
6401fafb:	inc    eax
6401fafc:	cmp    eax,0x3
6401faff:	jl     0x6401faf4
6401fb01:	jmp    0x6401fb71
6401fb03:	mov    eax,esi
6401fb05:	cdq    
6401fb06:	push   0x1f
6401fb08:	pop    ecx
6401fb09:	and    edx,ecx
6401fb0b:	add    eax,edx
6401fb0d:	sar    eax,0x5
6401fb10:	and    esi,0x8000001f
6401fb16:	jns    0x6401fb1d
6401fb18:	dec    esi
6401fb19:	or     esi,0xffffffe0
6401fb1c:	inc    esi
6401fb1d:	and    DWORD PTR [ebp-0x4],0x0
6401fb21:	sub    ecx,esi
6401fb23:	xor    edx,edx
6401fb25:	inc    edx
6401fb26:	shl    edx,cl
6401fb28:	lea    ecx,[ebp+eax*4-0x20]
6401fb2c:	mov    esi,DWORD PTR [ecx]
6401fb2e:	add    esi,edx
6401fb30:	mov    DWORD PTR [ebp+0x8],esi
6401fb33:	mov    esi,DWORD PTR [ecx]
6401fb35:	cmp    DWORD PTR [ebp+0x8],esi
6401fb38:	jb     0x6401fb5c
6401fb3a:	cmp    DWORD PTR [ebp+0x8],edx
6401fb3d:	jmp    0x6401fb5a
6401fb3f:	test   ecx,ecx
6401fb41:	je     0x6401fb6e
6401fb43:	and    DWORD PTR [ebp-0x4],0x0
6401fb47:	lea    ecx,[ebp+eax*4-0x20]
6401fb4b:	mov    edx,DWORD PTR [ecx]
6401fb4d:	lea    esi,[edx+0x1]
6401fb50:	cmp    esi,edx
6401fb52:	mov    DWORD PTR [ebp+0x8],esi
6401fb55:	jb     0x6401fb5c
6401fb57:	cmp    esi,0x1
6401fb5a:	jae    0x6401fb63
6401fb5c:	mov    DWORD PTR [ebp-0x4],0x1
6401fb63:	dec    eax
6401fb64:	mov    edx,DWORD PTR [ebp+0x8]
6401fb67:	mov    DWORD PTR [ecx],edx
6401fb69:	mov    ecx,DWORD PTR [ebp-0x4]
6401fb6c:	jns    0x6401fb3f
6401fb6e:	mov    DWORD PTR [ebp+0x8],ecx
6401fb71:	mov    ecx,DWORD PTR [ebp-0x8]
6401fb74:	or     eax,0xffffffff
6401fb77:	shl    eax,cl
6401fb79:	and    DWORD PTR [edi],eax
6401fb7b:	mov    eax,DWORD PTR [ebp-0xc]
6401fb7e:	inc    eax
6401fb7f:	cmp    eax,0x3
6401fb82:	jge    0x6401fb91
6401fb84:	push   0x3
6401fb86:	pop    ecx
6401fb87:	lea    edi,[ebp+eax*4-0x20]
6401fb8b:	sub    ecx,eax
6401fb8d:	xor    eax,eax
6401fb8f:	rep stos DWORD PTR es:[edi],eax
6401fb91:	cmp    DWORD PTR [ebp+0x8],0x0
6401fb95:	je     0x6401fb98
6401fb97:	inc    ebx
6401fb98:	mov    eax,ds:0x6402d074
6401fb9d:	mov    ecx,eax
6401fb9f:	sub    ecx,DWORD PTR ds:0x6402d078
6401fba5:	cmp    ebx,ecx
6401fba7:	jge    0x6401fbb6
6401fba9:	xor    eax,eax
6401fbab:	lea    edi,[ebp-0x20]
6401fbae:	stos   DWORD PTR es:[edi],eax
6401fbaf:	stos   DWORD PTR es:[edi],eax
6401fbb0:	stos   DWORD PTR es:[edi],eax
6401fbb1:	jmp    0x6401fdc3
6401fbb6:	cmp    ebx,eax
6401fbb8:	jg     0x6401fdcd
6401fbbe:	sub    eax,DWORD PTR [ebp-0x10]
6401fbc1:	lea    esi,[ebp-0x2c]
6401fbc4:	mov    ecx,eax
6401fbc6:	lea    edi,[ebp-0x20]
6401fbc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401fbca:	cdq    
6401fbcb:	and    edx,0x1f
6401fbce:	add    eax,edx
6401fbd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401fbd1:	mov    edx,ecx
6401fbd3:	sar    eax,0x5
6401fbd6:	and    edx,0x8000001f
6401fbdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401fbdd:	jns    0x6401fbe4
6401fbdf:	dec    edx
6401fbe0:	or     edx,0xffffffe0
6401fbe3:	inc    edx
6401fbe4:	and    DWORD PTR [ebp-0xc],0x0
6401fbe8:	and    DWORD PTR [ebp+0x8],0x0
6401fbec:	or     edi,0xffffffff
6401fbef:	mov    ecx,edx
6401fbf1:	shl    edi,cl
6401fbf3:	mov    DWORD PTR [ebp-0x4],0x20
6401fbfa:	sub    DWORD PTR [ebp-0x4],edx
6401fbfd:	not    edi
6401fbff:	mov    ebx,DWORD PTR [ebp+0x8]
6401fc02:	lea    ebx,[ebp+ebx*4-0x20]
6401fc06:	mov    esi,DWORD PTR [ebx]
6401fc08:	mov    ecx,esi
6401fc0a:	and    ecx,edi
6401fc0c:	mov    DWORD PTR [ebp-0x10],ecx
6401fc0f:	mov    ecx,edx
6401fc11:	shr    esi,cl
6401fc13:	mov    ecx,DWORD PTR [ebp-0x4]
6401fc16:	or     esi,DWORD PTR [ebp-0xc]
6401fc19:	mov    DWORD PTR [ebx],esi
6401fc1b:	mov    esi,DWORD PTR [ebp-0x10]
6401fc1e:	shl    esi,cl
6401fc20:	inc    DWORD PTR [ebp+0x8]
6401fc23:	cmp    DWORD PTR [ebp+0x8],0x3
6401fc27:	mov    DWORD PTR [ebp-0xc],esi
6401fc2a:	jl     0x6401fbff
6401fc2c:	mov    esi,eax
6401fc2e:	push   0x2
6401fc30:	shl    esi,0x2
6401fc33:	lea    ecx,[ebp-0x18]
6401fc36:	pop    edx
6401fc37:	sub    ecx,esi
6401fc39:	cmp    edx,eax
6401fc3b:	jl     0x6401fc45
6401fc3d:	mov    esi,DWORD PTR [ecx]
6401fc3f:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401fc43:	jmp    0x6401fc4a
6401fc45:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401fc4a:	dec    edx
6401fc4b:	sub    ecx,0x4
6401fc4e:	test   edx,edx
6401fc50:	jge    0x6401fc39
6401fc52:	mov    esi,DWORD PTR ds:0x6402d078
6401fc58:	dec    esi
6401fc59:	lea    ecx,[esi+0x1]
6401fc5c:	mov    eax,ecx
6401fc5e:	cdq    
6401fc5f:	and    edx,0x1f
6401fc62:	add    eax,edx
6401fc64:	sar    eax,0x5
6401fc67:	mov    edx,ecx
6401fc69:	and    edx,0x8000001f
6401fc6f:	mov    DWORD PTR [ebp-0xc],eax
6401fc72:	jns    0x6401fc79
6401fc74:	dec    edx
6401fc75:	or     edx,0xffffffe0
6401fc78:	inc    edx
6401fc79:	push   0x1f
6401fc7b:	pop    ecx
6401fc7c:	sub    ecx,edx
6401fc7e:	xor    edx,edx
6401fc80:	inc    edx
6401fc81:	shl    edx,cl
6401fc83:	lea    ebx,[ebp+eax*4-0x20]
6401fc87:	mov    DWORD PTR [ebp-0x10],ecx
6401fc8a:	test   DWORD PTR [ebx],edx
6401fc8c:	je     0x6401fd14
6401fc92:	or     edx,0xffffffff
6401fc95:	shl    edx,cl
6401fc97:	not    edx
6401fc99:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401fc9d:	jmp    0x6401fca4
6401fc9f:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401fca4:	jne    0x6401fcae
6401fca6:	inc    eax
6401fca7:	cmp    eax,0x3
6401fcaa:	jl     0x6401fc9f
6401fcac:	jmp    0x6401fd14
6401fcae:	mov    eax,esi
6401fcb0:	cdq    
6401fcb1:	push   0x1f
6401fcb3:	pop    ecx
6401fcb4:	and    edx,ecx
6401fcb6:	add    eax,edx
6401fcb8:	sar    eax,0x5
6401fcbb:	and    esi,0x8000001f
6401fcc1:	jns    0x6401fcc8
6401fcc3:	dec    esi
6401fcc4:	or     esi,0xffffffe0
6401fcc7:	inc    esi
6401fcc8:	and    DWORD PTR [ebp+0x8],0x0
6401fccc:	xor    edx,edx
6401fcce:	sub    ecx,esi
6401fcd0:	inc    edx
6401fcd1:	shl    edx,cl
6401fcd3:	lea    ecx,[ebp+eax*4-0x20]
6401fcd7:	mov    esi,DWORD PTR [ecx]
6401fcd9:	lea    edi,[esi+edx*1]
6401fcdc:	cmp    edi,esi
6401fcde:	jb     0x6401fce4
6401fce0:	cmp    edi,edx
6401fce2:	jae    0x6401fceb
6401fce4:	mov    DWORD PTR [ebp+0x8],0x1
6401fceb:	mov    DWORD PTR [ecx],edi
6401fced:	mov    ecx,DWORD PTR [ebp+0x8]
6401fcf0:	jmp    0x6401fd11
6401fcf2:	test   ecx,ecx
6401fcf4:	je     0x6401fd14
6401fcf6:	lea    ecx,[ebp+eax*4-0x20]
6401fcfa:	mov    edx,DWORD PTR [ecx]
6401fcfc:	lea    esi,[edx+0x1]
6401fcff:	xor    edi,edi
6401fd01:	cmp    esi,edx
6401fd03:	jb     0x6401fd0a
6401fd05:	cmp    esi,0x1
6401fd08:	jae    0x6401fd0d
6401fd0a:	xor    edi,edi
6401fd0c:	inc    edi
6401fd0d:	mov    DWORD PTR [ecx],esi
6401fd0f:	mov    ecx,edi
6401fd11:	dec    eax
6401fd12:	jns    0x6401fcf2
6401fd14:	mov    ecx,DWORD PTR [ebp-0x10]
6401fd17:	or     eax,0xffffffff
6401fd1a:	shl    eax,cl
6401fd1c:	and    DWORD PTR [ebx],eax
6401fd1e:	mov    eax,DWORD PTR [ebp-0xc]
6401fd21:	inc    eax
6401fd22:	cmp    eax,0x3
6401fd25:	jge    0x6401fd34
6401fd27:	push   0x3
6401fd29:	pop    ecx
6401fd2a:	lea    edi,[ebp+eax*4-0x20]
6401fd2e:	sub    ecx,eax
6401fd30:	xor    eax,eax
6401fd32:	rep stos DWORD PTR es:[edi],eax
6401fd34:	mov    ecx,DWORD PTR ds:0x6402d07c
6401fd3a:	inc    ecx
6401fd3b:	mov    eax,ecx
6401fd3d:	cdq    
6401fd3e:	and    edx,0x1f
6401fd41:	add    eax,edx
6401fd43:	mov    edx,ecx
6401fd45:	sar    eax,0x5
6401fd48:	and    edx,0x8000001f
6401fd4e:	jns    0x6401fd55
6401fd50:	dec    edx
6401fd51:	or     edx,0xffffffe0
6401fd54:	inc    edx
6401fd55:	and    DWORD PTR [ebp-0xc],0x0
6401fd59:	and    DWORD PTR [ebp+0x8],0x0
6401fd5d:	or     edi,0xffffffff
6401fd60:	mov    ecx,edx
6401fd62:	shl    edi,cl
6401fd64:	mov    DWORD PTR [ebp-0x4],0x20
6401fd6b:	sub    DWORD PTR [ebp-0x4],edx
6401fd6e:	not    edi
6401fd70:	mov    ebx,DWORD PTR [ebp+0x8]
6401fd73:	lea    ebx,[ebp+ebx*4-0x20]
6401fd77:	mov    esi,DWORD PTR [ebx]
6401fd79:	mov    ecx,esi
6401fd7b:	and    ecx,edi
6401fd7d:	mov    DWORD PTR [ebp-0x10],ecx
6401fd80:	mov    ecx,edx
6401fd82:	shr    esi,cl
6401fd84:	mov    ecx,DWORD PTR [ebp-0x4]
6401fd87:	or     esi,DWORD PTR [ebp-0xc]
6401fd8a:	mov    DWORD PTR [ebx],esi
6401fd8c:	mov    esi,DWORD PTR [ebp-0x10]
6401fd8f:	shl    esi,cl
6401fd91:	inc    DWORD PTR [ebp+0x8]
6401fd94:	cmp    DWORD PTR [ebp+0x8],0x3
6401fd98:	mov    DWORD PTR [ebp-0xc],esi
6401fd9b:	jl     0x6401fd70
6401fd9d:	mov    esi,eax
6401fd9f:	push   0x2
6401fda1:	shl    esi,0x2
6401fda4:	lea    ecx,[ebp-0x18]
6401fda7:	pop    edx
6401fda8:	sub    ecx,esi
6401fdaa:	cmp    edx,eax
6401fdac:	jl     0x6401fdb6
6401fdae:	mov    esi,DWORD PTR [ecx]
6401fdb0:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401fdb4:	jmp    0x6401fdbb
6401fdb6:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401fdbb:	dec    edx
6401fdbc:	sub    ecx,0x4
6401fdbf:	test   edx,edx
6401fdc1:	jge    0x6401fdaa
6401fdc3:	push   0x2
6401fdc5:	xor    ebx,ebx
6401fdc7:	pop    eax
6401fdc8:	jmp    0x6401ff27
6401fdcd:	cmp    ebx,DWORD PTR ds:0x6402d070
6401fdd3:	mov    ecx,DWORD PTR ds:0x6402d07c
6401fdd9:	jl     0x6401fe8c
6401fddf:	xor    eax,eax
6401fde1:	lea    edi,[ebp-0x20]
6401fde4:	stos   DWORD PTR es:[edi],eax
6401fde5:	stos   DWORD PTR es:[edi],eax
6401fde6:	stos   DWORD PTR es:[edi],eax
6401fde7:	or     DWORD PTR [ebp-0x20],0x80000000
6401fdee:	mov    eax,ecx
6401fdf0:	cdq    
6401fdf1:	and    edx,0x1f
6401fdf4:	add    eax,edx
6401fdf6:	mov    edx,ecx
6401fdf8:	sar    eax,0x5
6401fdfb:	and    edx,0x8000001f
6401fe01:	jns    0x6401fe08
6401fe03:	dec    edx
6401fe04:	or     edx,0xffffffe0
6401fe07:	inc    edx
6401fe08:	and    DWORD PTR [ebp-0xc],0x0
6401fe0c:	and    DWORD PTR [ebp+0x8],0x0
6401fe10:	or     edi,0xffffffff
6401fe13:	mov    ecx,edx
6401fe15:	shl    edi,cl
6401fe17:	mov    DWORD PTR [ebp-0x4],0x20
6401fe1e:	sub    DWORD PTR [ebp-0x4],edx
6401fe21:	not    edi
6401fe23:	mov    ebx,DWORD PTR [ebp+0x8]
6401fe26:	lea    ebx,[ebp+ebx*4-0x20]
6401fe2a:	mov    esi,DWORD PTR [ebx]
6401fe2c:	mov    ecx,esi
6401fe2e:	and    ecx,edi
6401fe30:	mov    DWORD PTR [ebp-0x10],ecx
6401fe33:	mov    ecx,edx
6401fe35:	shr    esi,cl
6401fe37:	mov    ecx,DWORD PTR [ebp-0x4]
6401fe3a:	or     esi,DWORD PTR [ebp-0xc]
6401fe3d:	mov    DWORD PTR [ebx],esi
6401fe3f:	mov    esi,DWORD PTR [ebp-0x10]
6401fe42:	shl    esi,cl
6401fe44:	inc    DWORD PTR [ebp+0x8]
6401fe47:	cmp    DWORD PTR [ebp+0x8],0x3
6401fe4b:	mov    DWORD PTR [ebp-0xc],esi
6401fe4e:	jl     0x6401fe23
6401fe50:	mov    esi,eax
6401fe52:	push   0x2
6401fe54:	shl    esi,0x2
6401fe57:	lea    ecx,[ebp-0x18]
6401fe5a:	pop    edx
6401fe5b:	sub    ecx,esi
6401fe5d:	cmp    edx,eax
6401fe5f:	jl     0x6401fe69
6401fe61:	mov    esi,DWORD PTR [ecx]
6401fe63:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401fe67:	jmp    0x6401fe6e
6401fe69:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401fe6e:	dec    edx
6401fe6f:	sub    ecx,0x4
6401fe72:	test   edx,edx
6401fe74:	jge    0x6401fe5d
6401fe76:	mov    eax,ds:0x6402d070
6401fe7b:	mov    ecx,DWORD PTR ds:0x6402d084
6401fe81:	lea    ebx,[ecx+eax*1]
6401fe84:	xor    eax,eax
6401fe86:	inc    eax
6401fe87:	jmp    0x6401ff27
6401fe8c:	mov    eax,ds:0x6402d084
6401fe91:	and    DWORD PTR [ebp-0x20],0x7fffffff
6401fe98:	add    ebx,eax
6401fe9a:	mov    eax,ecx
6401fe9c:	cdq    
6401fe9d:	and    edx,0x1f
6401fea0:	add    eax,edx
6401fea2:	mov    edx,ecx
6401fea4:	sar    eax,0x5
6401fea7:	and    edx,0x8000001f
6401fead:	jns    0x6401feb4
6401feaf:	dec    edx
6401feb0:	or     edx,0xffffffe0
6401feb3:	inc    edx
6401feb4:	and    DWORD PTR [ebp-0xc],0x0
6401feb8:	and    DWORD PTR [ebp+0x8],0x0
6401febc:	or     esi,0xffffffff
6401febf:	mov    ecx,edx
6401fec1:	shl    esi,cl
6401fec3:	mov    DWORD PTR [ebp-0x4],0x20
6401feca:	sub    DWORD PTR [ebp-0x4],edx
6401fecd:	not    esi
6401fecf:	mov    ecx,DWORD PTR [ebp+0x8]
6401fed2:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
6401fed6:	mov    ecx,edi
6401fed8:	and    ecx,esi
6401feda:	mov    DWORD PTR [ebp-0x10],ecx
6401fedd:	mov    ecx,edx
6401fedf:	shr    edi,cl
6401fee1:	mov    ecx,DWORD PTR [ebp+0x8]
6401fee4:	or     edi,DWORD PTR [ebp-0xc]
6401fee7:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6401feeb:	mov    edi,DWORD PTR [ebp-0x10]
6401feee:	mov    ecx,DWORD PTR [ebp-0x4]
6401fef1:	shl    edi,cl
6401fef3:	inc    DWORD PTR [ebp+0x8]
6401fef6:	cmp    DWORD PTR [ebp+0x8],0x3
6401fefa:	mov    DWORD PTR [ebp-0xc],edi
6401fefd:	jl     0x6401fecf
6401feff:	mov    esi,eax
6401ff01:	push   0x2
6401ff03:	shl    esi,0x2
6401ff06:	lea    ecx,[ebp-0x18]
6401ff09:	pop    edx
6401ff0a:	sub    ecx,esi
6401ff0c:	cmp    edx,eax
6401ff0e:	jl     0x6401ff18
6401ff10:	mov    esi,DWORD PTR [ecx]
6401ff12:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401ff16:	jmp    0x6401ff1d
6401ff18:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401ff1d:	dec    edx
6401ff1e:	sub    ecx,0x4
6401ff21:	test   edx,edx
6401ff23:	jge    0x6401ff0c
6401ff25:	xor    eax,eax
6401ff27:	pop    esi
6401ff28:	push   0x1f
6401ff2a:	pop    ecx
6401ff2b:	sub    ecx,DWORD PTR ds:0x6402d07c
6401ff31:	shl    ebx,cl
6401ff33:	mov    ecx,DWORD PTR [ebp-0x14]
6401ff36:	neg    ecx
6401ff38:	sbb    ecx,ecx
6401ff3a:	and    ecx,0x80000000
6401ff40:	or     ebx,ecx
6401ff42:	mov    ecx,DWORD PTR ds:0x6402d080
6401ff48:	or     ebx,DWORD PTR [ebp-0x20]
6401ff4b:	cmp    ecx,0x40
6401ff4e:	jne    0x6401ff5d
6401ff50:	mov    ecx,DWORD PTR [ebp+0xc]
6401ff53:	mov    edx,DWORD PTR [ebp-0x1c]
6401ff56:	mov    DWORD PTR [ecx+0x4],ebx
6401ff59:	mov    DWORD PTR [ecx],edx
6401ff5b:	jmp    0x6401ff67
6401ff5d:	cmp    ecx,0x20
6401ff60:	jne    0x6401ff67
6401ff62:	mov    ecx,DWORD PTR [ebp+0xc]
6401ff65:	mov    DWORD PTR [ecx],ebx
6401ff67:	pop    edi
6401ff68:	pop    ebx
6401ff69:	leave  
6401ff6a:	ret    
6401ff6b:	push   ebp
6401ff6c:	mov    ebp,esp
6401ff6e:	sub    esp,0x2c
6401ff71:	mov    eax,DWORD PTR [ebp+0x8]
6401ff74:	movzx  ecx,WORD PTR [eax+0xa]
6401ff78:	push   ebx
6401ff79:	mov    ebx,ecx
6401ff7b:	and    ecx,0x8000
6401ff81:	mov    DWORD PTR [ebp-0x14],ecx
6401ff84:	mov    ecx,DWORD PTR [eax+0x6]
6401ff87:	mov    DWORD PTR [ebp-0x20],ecx
6401ff8a:	mov    ecx,DWORD PTR [eax+0x2]
6401ff8d:	movzx  eax,WORD PTR [eax]
6401ff90:	and    ebx,0x7fff
6401ff96:	sub    ebx,0x3fff
6401ff9c:	shl    eax,0x10
6401ff9f:	cmp    ebx,0xffffc001
6401ffa5:	push   edi
6401ffa6:	mov    DWORD PTR [ebp-0x1c],ecx
6401ffa9:	mov    DWORD PTR [ebp-0x18],eax
6401ffac:	jne    0x6401ffd5
6401ffae:	xor    ebx,ebx
6401ffb0:	xor    eax,eax
6401ffb2:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6401ffb6:	jne    0x6401ffc5
6401ffb8:	inc    eax
6401ffb9:	cmp    eax,0x3
6401ffbc:	jl     0x6401ffb2
6401ffbe:	xor    eax,eax
6401ffc0:	jmp    0x6402046a
6401ffc5:	xor    eax,eax
6401ffc7:	lea    edi,[ebp-0x20]
6401ffca:	stos   DWORD PTR es:[edi],eax
6401ffcb:	stos   DWORD PTR es:[edi],eax
6401ffcc:	push   0x2
6401ffce:	stos   DWORD PTR es:[edi],eax
6401ffcf:	pop    eax
6401ffd0:	jmp    0x6402046a
6401ffd5:	and    DWORD PTR [ebp+0x8],0x0
6401ffd9:	push   esi
6401ffda:	lea    esi,[ebp-0x20]
6401ffdd:	lea    edi,[ebp-0x2c]
6401ffe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401ffe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401ffe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401ffe3:	mov    esi,DWORD PTR ds:0x6402d090
6401ffe9:	dec    esi
6401ffea:	lea    ecx,[esi+0x1]
6401ffed:	mov    eax,ecx
6401ffef:	cdq    
6401fff0:	and    edx,0x1f
6401fff3:	add    eax,edx
6401fff5:	sar    eax,0x5
6401fff8:	mov    edx,ecx
6401fffa:	and    edx,0x8000001f
64020000:	mov    DWORD PTR [ebp-0x10],ebx
64020003:	mov    DWORD PTR [ebp-0xc],eax
64020006:	jns    0x6402000d
64020008:	dec    edx
64020009:	or     edx,0xffffffe0
6402000c:	inc    edx
6402000d:	lea    edi,[ebp+eax*4-0x20]
64020011:	push   0x1f
64020013:	xor    eax,eax
64020015:	pop    ecx
64020016:	sub    ecx,edx
64020018:	inc    eax
64020019:	shl    eax,cl
6402001b:	mov    DWORD PTR [ebp-0x8],ecx
6402001e:	test   DWORD PTR [edi],eax
64020020:	je     0x640200b3
64020026:	mov    eax,DWORD PTR [ebp-0xc]
64020029:	or     edx,0xffffffff
6402002c:	shl    edx,cl
6402002e:	not    edx
64020030:	test   DWORD PTR [ebp+eax*4-0x20],edx
64020034:	jmp    0x6402003b
64020036:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6402003b:	jne    0x64020045
6402003d:	inc    eax
6402003e:	cmp    eax,0x3
64020041:	jl     0x64020036
64020043:	jmp    0x640200b3
64020045:	mov    eax,esi
64020047:	cdq    
64020048:	push   0x1f
6402004a:	pop    ecx
6402004b:	and    edx,ecx
6402004d:	add    eax,edx
6402004f:	sar    eax,0x5
64020052:	and    esi,0x8000001f
64020058:	jns    0x6402005f
6402005a:	dec    esi
6402005b:	or     esi,0xffffffe0
6402005e:	inc    esi
6402005f:	and    DWORD PTR [ebp-0x4],0x0
64020063:	sub    ecx,esi
64020065:	xor    edx,edx
64020067:	inc    edx
64020068:	shl    edx,cl
6402006a:	lea    ecx,[ebp+eax*4-0x20]
6402006e:	mov    esi,DWORD PTR [ecx]
64020070:	add    esi,edx
64020072:	mov    DWORD PTR [ebp+0x8],esi
64020075:	mov    esi,DWORD PTR [ecx]
64020077:	cmp    DWORD PTR [ebp+0x8],esi
6402007a:	jb     0x6402009e
6402007c:	cmp    DWORD PTR [ebp+0x8],edx
6402007f:	jmp    0x6402009c
64020081:	test   ecx,ecx
64020083:	je     0x640200b0
64020085:	and    DWORD PTR [ebp-0x4],0x0
64020089:	lea    ecx,[ebp+eax*4-0x20]
6402008d:	mov    edx,DWORD PTR [ecx]
6402008f:	lea    esi,[edx+0x1]
64020092:	cmp    esi,edx
64020094:	mov    DWORD PTR [ebp+0x8],esi
64020097:	jb     0x6402009e
64020099:	cmp    esi,0x1
6402009c:	jae    0x640200a5
6402009e:	mov    DWORD PTR [ebp-0x4],0x1
640200a5:	dec    eax
640200a6:	mov    edx,DWORD PTR [ebp+0x8]
640200a9:	mov    DWORD PTR [ecx],edx
640200ab:	mov    ecx,DWORD PTR [ebp-0x4]
640200ae:	jns    0x64020081
640200b0:	mov    DWORD PTR [ebp+0x8],ecx
640200b3:	mov    ecx,DWORD PTR [ebp-0x8]
640200b6:	or     eax,0xffffffff
640200b9:	shl    eax,cl
640200bb:	and    DWORD PTR [edi],eax
640200bd:	mov    eax,DWORD PTR [ebp-0xc]
640200c0:	inc    eax
640200c1:	cmp    eax,0x3
640200c4:	jge    0x640200d3
640200c6:	push   0x3
640200c8:	pop    ecx
640200c9:	lea    edi,[ebp+eax*4-0x20]
640200cd:	sub    ecx,eax
640200cf:	xor    eax,eax
640200d1:	rep stos DWORD PTR es:[edi],eax
640200d3:	cmp    DWORD PTR [ebp+0x8],0x0
640200d7:	je     0x640200da
640200d9:	inc    ebx
640200da:	mov    eax,ds:0x6402d08c
640200df:	mov    ecx,eax
640200e1:	sub    ecx,DWORD PTR ds:0x6402d090
640200e7:	cmp    ebx,ecx
640200e9:	jge    0x640200f8
640200eb:	xor    eax,eax
640200ed:	lea    edi,[ebp-0x20]
640200f0:	stos   DWORD PTR es:[edi],eax
640200f1:	stos   DWORD PTR es:[edi],eax
640200f2:	stos   DWORD PTR es:[edi],eax
640200f3:	jmp    0x64020305
640200f8:	cmp    ebx,eax
640200fa:	jg     0x6402030f
64020100:	sub    eax,DWORD PTR [ebp-0x10]
64020103:	lea    esi,[ebp-0x2c]
64020106:	mov    ecx,eax
64020108:	lea    edi,[ebp-0x20]
6402010b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402010c:	cdq    
6402010d:	and    edx,0x1f
64020110:	add    eax,edx
64020112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020113:	mov    edx,ecx
64020115:	sar    eax,0x5
64020118:	and    edx,0x8000001f
6402011e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402011f:	jns    0x64020126
64020121:	dec    edx
64020122:	or     edx,0xffffffe0
64020125:	inc    edx
64020126:	and    DWORD PTR [ebp-0xc],0x0
6402012a:	and    DWORD PTR [ebp+0x8],0x0
6402012e:	or     edi,0xffffffff
64020131:	mov    ecx,edx
64020133:	shl    edi,cl
64020135:	mov    DWORD PTR [ebp-0x4],0x20
6402013c:	sub    DWORD PTR [ebp-0x4],edx
6402013f:	not    edi
64020141:	mov    ebx,DWORD PTR [ebp+0x8]
64020144:	lea    ebx,[ebp+ebx*4-0x20]
64020148:	mov    esi,DWORD PTR [ebx]
6402014a:	mov    ecx,esi
6402014c:	and    ecx,edi
6402014e:	mov    DWORD PTR [ebp-0x10],ecx
64020151:	mov    ecx,edx
64020153:	shr    esi,cl
64020155:	mov    ecx,DWORD PTR [ebp-0x4]
64020158:	or     esi,DWORD PTR [ebp-0xc]
6402015b:	mov    DWORD PTR [ebx],esi
6402015d:	mov    esi,DWORD PTR [ebp-0x10]
64020160:	shl    esi,cl
64020162:	inc    DWORD PTR [ebp+0x8]
64020165:	cmp    DWORD PTR [ebp+0x8],0x3
64020169:	mov    DWORD PTR [ebp-0xc],esi
6402016c:	jl     0x64020141
6402016e:	mov    esi,eax
64020170:	push   0x2
64020172:	shl    esi,0x2
64020175:	lea    ecx,[ebp-0x18]
64020178:	pop    edx
64020179:	sub    ecx,esi
6402017b:	cmp    edx,eax
6402017d:	jl     0x64020187
6402017f:	mov    esi,DWORD PTR [ecx]
64020181:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020185:	jmp    0x6402018c
64020187:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6402018c:	dec    edx
6402018d:	sub    ecx,0x4
64020190:	test   edx,edx
64020192:	jge    0x6402017b
64020194:	mov    esi,DWORD PTR ds:0x6402d090
6402019a:	dec    esi
6402019b:	lea    ecx,[esi+0x1]
6402019e:	mov    eax,ecx
640201a0:	cdq    
640201a1:	and    edx,0x1f
640201a4:	add    eax,edx
640201a6:	sar    eax,0x5
640201a9:	mov    edx,ecx
640201ab:	and    edx,0x8000001f
640201b1:	mov    DWORD PTR [ebp-0xc],eax
640201b4:	jns    0x640201bb
640201b6:	dec    edx
640201b7:	or     edx,0xffffffe0
640201ba:	inc    edx
640201bb:	push   0x1f
640201bd:	pop    ecx
640201be:	sub    ecx,edx
640201c0:	xor    edx,edx
640201c2:	inc    edx
640201c3:	shl    edx,cl
640201c5:	lea    ebx,[ebp+eax*4-0x20]
640201c9:	mov    DWORD PTR [ebp-0x10],ecx
640201cc:	test   DWORD PTR [ebx],edx
640201ce:	je     0x64020256
640201d4:	or     edx,0xffffffff
640201d7:	shl    edx,cl
640201d9:	not    edx
640201db:	test   DWORD PTR [ebp+eax*4-0x20],edx
640201df:	jmp    0x640201e6
640201e1:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
640201e6:	jne    0x640201f0
640201e8:	inc    eax
640201e9:	cmp    eax,0x3
640201ec:	jl     0x640201e1
640201ee:	jmp    0x64020256
640201f0:	mov    eax,esi
640201f2:	cdq    
640201f3:	push   0x1f
640201f5:	pop    ecx
640201f6:	and    edx,ecx
640201f8:	add    eax,edx
640201fa:	sar    eax,0x5
640201fd:	and    esi,0x8000001f
64020203:	jns    0x6402020a
64020205:	dec    esi
64020206:	or     esi,0xffffffe0
64020209:	inc    esi
6402020a:	and    DWORD PTR [ebp+0x8],0x0
6402020e:	xor    edx,edx
64020210:	sub    ecx,esi
64020212:	inc    edx
64020213:	shl    edx,cl
64020215:	lea    ecx,[ebp+eax*4-0x20]
64020219:	mov    esi,DWORD PTR [ecx]
6402021b:	lea    edi,[esi+edx*1]
6402021e:	cmp    edi,esi
64020220:	jb     0x64020226
64020222:	cmp    edi,edx
64020224:	jae    0x6402022d
64020226:	mov    DWORD PTR [ebp+0x8],0x1
6402022d:	mov    DWORD PTR [ecx],edi
6402022f:	mov    ecx,DWORD PTR [ebp+0x8]
64020232:	jmp    0x64020253
64020234:	test   ecx,ecx
64020236:	je     0x64020256
64020238:	lea    ecx,[ebp+eax*4-0x20]
6402023c:	mov    edx,DWORD PTR [ecx]
6402023e:	lea    esi,[edx+0x1]
64020241:	xor    edi,edi
64020243:	cmp    esi,edx
64020245:	jb     0x6402024c
64020247:	cmp    esi,0x1
6402024a:	jae    0x6402024f
6402024c:	xor    edi,edi
6402024e:	inc    edi
6402024f:	mov    DWORD PTR [ecx],esi
64020251:	mov    ecx,edi
64020253:	dec    eax
64020254:	jns    0x64020234
64020256:	mov    ecx,DWORD PTR [ebp-0x10]
64020259:	or     eax,0xffffffff
6402025c:	shl    eax,cl
6402025e:	and    DWORD PTR [ebx],eax
64020260:	mov    eax,DWORD PTR [ebp-0xc]
64020263:	inc    eax
64020264:	cmp    eax,0x3
64020267:	jge    0x64020276
64020269:	push   0x3
6402026b:	pop    ecx
6402026c:	lea    edi,[ebp+eax*4-0x20]
64020270:	sub    ecx,eax
64020272:	xor    eax,eax
64020274:	rep stos DWORD PTR es:[edi],eax
64020276:	mov    ecx,DWORD PTR ds:0x6402d094
6402027c:	inc    ecx
6402027d:	mov    eax,ecx
6402027f:	cdq    
64020280:	and    edx,0x1f
64020283:	add    eax,edx
64020285:	mov    edx,ecx
64020287:	sar    eax,0x5
6402028a:	and    edx,0x8000001f
64020290:	jns    0x64020297
64020292:	dec    edx
64020293:	or     edx,0xffffffe0
64020296:	inc    edx
64020297:	and    DWORD PTR [ebp-0xc],0x0
6402029b:	and    DWORD PTR [ebp+0x8],0x0
6402029f:	or     edi,0xffffffff
640202a2:	mov    ecx,edx
640202a4:	shl    edi,cl
640202a6:	mov    DWORD PTR [ebp-0x4],0x20
640202ad:	sub    DWORD PTR [ebp-0x4],edx
640202b0:	not    edi
640202b2:	mov    ebx,DWORD PTR [ebp+0x8]
640202b5:	lea    ebx,[ebp+ebx*4-0x20]
640202b9:	mov    esi,DWORD PTR [ebx]
640202bb:	mov    ecx,esi
640202bd:	and    ecx,edi
640202bf:	mov    DWORD PTR [ebp-0x10],ecx
640202c2:	mov    ecx,edx
640202c4:	shr    esi,cl
640202c6:	mov    ecx,DWORD PTR [ebp-0x4]
640202c9:	or     esi,DWORD PTR [ebp-0xc]
640202cc:	mov    DWORD PTR [ebx],esi
640202ce:	mov    esi,DWORD PTR [ebp-0x10]
640202d1:	shl    esi,cl
640202d3:	inc    DWORD PTR [ebp+0x8]
640202d6:	cmp    DWORD PTR [ebp+0x8],0x3
640202da:	mov    DWORD PTR [ebp-0xc],esi
640202dd:	jl     0x640202b2
640202df:	mov    esi,eax
640202e1:	push   0x2
640202e3:	shl    esi,0x2
640202e6:	lea    ecx,[ebp-0x18]
640202e9:	pop    edx
640202ea:	sub    ecx,esi
640202ec:	cmp    edx,eax
640202ee:	jl     0x640202f8
640202f0:	mov    esi,DWORD PTR [ecx]
640202f2:	mov    DWORD PTR [ebp+edx*4-0x20],esi
640202f6:	jmp    0x640202fd
640202f8:	and    DWORD PTR [ebp+edx*4-0x20],0x0
640202fd:	dec    edx
640202fe:	sub    ecx,0x4
64020301:	test   edx,edx
64020303:	jge    0x640202ec
64020305:	push   0x2
64020307:	xor    ebx,ebx
64020309:	pop    eax
6402030a:	jmp    0x64020469
6402030f:	cmp    ebx,DWORD PTR ds:0x6402d088
64020315:	mov    ecx,DWORD PTR ds:0x6402d094
6402031b:	jl     0x640203ce
64020321:	xor    eax,eax
64020323:	lea    edi,[ebp-0x20]
64020326:	stos   DWORD PTR es:[edi],eax
64020327:	stos   DWORD PTR es:[edi],eax
64020328:	stos   DWORD PTR es:[edi],eax
64020329:	or     DWORD PTR [ebp-0x20],0x80000000
64020330:	mov    eax,ecx
64020332:	cdq    
64020333:	and    edx,0x1f
64020336:	add    eax,edx
64020338:	mov    edx,ecx
6402033a:	sar    eax,0x5
6402033d:	and    edx,0x8000001f
64020343:	jns    0x6402034a
64020345:	dec    edx
64020346:	or     edx,0xffffffe0
64020349:	inc    edx
6402034a:	and    DWORD PTR [ebp-0xc],0x0
6402034e:	and    DWORD PTR [ebp+0x8],0x0
64020352:	or     edi,0xffffffff
64020355:	mov    ecx,edx
64020357:	shl    edi,cl
64020359:	mov    DWORD PTR [ebp-0x4],0x20
64020360:	sub    DWORD PTR [ebp-0x4],edx
64020363:	not    edi
64020365:	mov    ebx,DWORD PTR [ebp+0x8]
64020368:	lea    ebx,[ebp+ebx*4-0x20]
6402036c:	mov    esi,DWORD PTR [ebx]
6402036e:	mov    ecx,esi
64020370:	and    ecx,edi
64020372:	mov    DWORD PTR [ebp-0x10],ecx
64020375:	mov    ecx,edx
64020377:	shr    esi,cl
64020379:	mov    ecx,DWORD PTR [ebp-0x4]
6402037c:	or     esi,DWORD PTR [ebp-0xc]
6402037f:	mov    DWORD PTR [ebx],esi
64020381:	mov    esi,DWORD PTR [ebp-0x10]
64020384:	shl    esi,cl
64020386:	inc    DWORD PTR [ebp+0x8]
64020389:	cmp    DWORD PTR [ebp+0x8],0x3
6402038d:	mov    DWORD PTR [ebp-0xc],esi
64020390:	jl     0x64020365
64020392:	mov    esi,eax
64020394:	push   0x2
64020396:	shl    esi,0x2
64020399:	lea    ecx,[ebp-0x18]
6402039c:	pop    edx
6402039d:	sub    ecx,esi
6402039f:	cmp    edx,eax
640203a1:	jl     0x640203ab
640203a3:	mov    esi,DWORD PTR [ecx]
640203a5:	mov    DWORD PTR [ebp+edx*4-0x20],esi
640203a9:	jmp    0x640203b0
640203ab:	and    DWORD PTR [ebp+edx*4-0x20],0x0
640203b0:	dec    edx
640203b1:	sub    ecx,0x4
640203b4:	test   edx,edx
640203b6:	jge    0x6402039f
640203b8:	mov    eax,ds:0x6402d088
640203bd:	mov    ecx,DWORD PTR ds:0x6402d09c
640203c3:	lea    ebx,[ecx+eax*1]
640203c6:	xor    eax,eax
640203c8:	inc    eax
640203c9:	jmp    0x64020469
640203ce:	mov    eax,ds:0x6402d09c
640203d3:	and    DWORD PTR [ebp-0x20],0x7fffffff
640203da:	add    ebx,eax
640203dc:	mov    eax,ecx
640203de:	cdq    
640203df:	and    edx,0x1f
640203e2:	add    eax,edx
640203e4:	mov    edx,ecx
640203e6:	sar    eax,0x5
640203e9:	and    edx,0x8000001f
640203ef:	jns    0x640203f6
640203f1:	dec    edx
640203f2:	or     edx,0xffffffe0
640203f5:	inc    edx
640203f6:	and    DWORD PTR [ebp-0xc],0x0
640203fa:	and    DWORD PTR [ebp+0x8],0x0
640203fe:	or     esi,0xffffffff
64020401:	mov    ecx,edx
64020403:	shl    esi,cl
64020405:	mov    DWORD PTR [ebp-0x4],0x20
6402040c:	sub    DWORD PTR [ebp-0x4],edx
6402040f:	not    esi
64020411:	mov    ecx,DWORD PTR [ebp+0x8]
64020414:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
64020418:	mov    ecx,edi
6402041a:	and    ecx,esi
6402041c:	mov    DWORD PTR [ebp-0x10],ecx
6402041f:	mov    ecx,edx
64020421:	shr    edi,cl
64020423:	mov    ecx,DWORD PTR [ebp+0x8]
64020426:	or     edi,DWORD PTR [ebp-0xc]
64020429:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6402042d:	mov    edi,DWORD PTR [ebp-0x10]
64020430:	mov    ecx,DWORD PTR [ebp-0x4]
64020433:	shl    edi,cl
64020435:	inc    DWORD PTR [ebp+0x8]
64020438:	cmp    DWORD PTR [ebp+0x8],0x3
6402043c:	mov    DWORD PTR [ebp-0xc],edi
6402043f:	jl     0x64020411
64020441:	mov    esi,eax
64020443:	push   0x2
64020445:	shl    esi,0x2
64020448:	lea    ecx,[ebp-0x18]
6402044b:	pop    edx
6402044c:	sub    ecx,esi
6402044e:	cmp    edx,eax
64020450:	jl     0x6402045a
64020452:	mov    esi,DWORD PTR [ecx]
64020454:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020458:	jmp    0x6402045f
6402045a:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6402045f:	dec    edx
64020460:	sub    ecx,0x4
64020463:	test   edx,edx
64020465:	jge    0x6402044e
64020467:	xor    eax,eax
64020469:	pop    esi
6402046a:	push   0x1f
6402046c:	pop    ecx
6402046d:	sub    ecx,DWORD PTR ds:0x6402d094
64020473:	shl    ebx,cl
64020475:	mov    ecx,DWORD PTR [ebp-0x14]
64020478:	neg    ecx
6402047a:	sbb    ecx,ecx
6402047c:	and    ecx,0x80000000
64020482:	or     ebx,ecx
64020484:	mov    ecx,DWORD PTR ds:0x6402d098
6402048a:	or     ebx,DWORD PTR [ebp-0x20]
6402048d:	cmp    ecx,0x40
64020490:	jne    0x6402049f
64020492:	mov    ecx,DWORD PTR [ebp+0xc]
64020495:	mov    edx,DWORD PTR [ebp-0x1c]
64020498:	mov    DWORD PTR [ecx+0x4],ebx
6402049b:	mov    DWORD PTR [ecx],edx
6402049d:	jmp    0x640204a9
6402049f:	cmp    ecx,0x20
640204a2:	jne    0x640204a9
640204a4:	mov    ecx,DWORD PTR [ebp+0xc]
640204a7:	mov    DWORD PTR [ecx],ebx
640204a9:	pop    edi
640204aa:	pop    ebx
640204ab:	leave  
640204ac:	ret    
640204ad:	push   ebp
640204ae:	mov    ebp,esp
640204b0:	sub    esp,0x7c
640204b3:	mov    eax,ds:0x6402c09c
640204b8:	xor    eax,ebp
640204ba:	mov    DWORD PTR [ebp-0x4],eax
640204bd:	mov    eax,DWORD PTR [ebp+0x8]
640204c0:	push   ebx
640204c1:	xor    ebx,ebx
640204c3:	push   esi
640204c4:	xor    esi,esi
640204c6:	mov    DWORD PTR [ebp-0x7c],eax
640204c9:	mov    eax,DWORD PTR [ebp+0xc]
640204cc:	inc    esi
640204cd:	xor    ecx,ecx
640204cf:	cmp    DWORD PTR [ebp+0x24],ebx
640204d2:	push   edi
640204d3:	mov    DWORD PTR [ebp-0x70],eax
640204d6:	lea    edi,[ebp-0x20]
640204d9:	mov    DWORD PTR [ebp-0x74],ebx
640204dc:	mov    DWORD PTR [ebp-0x68],esi
640204df:	mov    DWORD PTR [ebp-0x4c],ebx
640204e2:	mov    DWORD PTR [ebp-0x58],ebx
640204e5:	mov    DWORD PTR [ebp-0x5c],ebx
640204e8:	mov    DWORD PTR [ebp-0x60],ebx
640204eb:	mov    DWORD PTR [ebp-0x64],ebx
640204ee:	mov    DWORD PTR [ebp-0x50],ebx
640204f1:	mov    DWORD PTR [ebp-0x6c],ebx
640204f4:	jne    0x64020515
640204f6:	call   0x640142c0
640204fb:	push   ebx
640204fc:	push   ebx
640204fd:	push   ebx
640204fe:	push   ebx
640204ff:	push   ebx
64020500:	mov    DWORD PTR [eax],0x16
64020506:	call   0x640120b4
6402050b:	add    esp,0x14
6402050e:	xor    eax,eax
64020510:	jmp    0x64020b2e
64020515:	mov    edx,DWORD PTR [ebp+0x10]
64020518:	mov    DWORD PTR [ebp-0x54],edx
6402051b:	mov    al,BYTE PTR [edx]
6402051d:	cmp    al,0x20
6402051f:	je     0x6402052d
64020521:	cmp    al,0x9
64020523:	je     0x6402052d
64020525:	cmp    al,0xa
64020527:	je     0x6402052d
64020529:	cmp    al,0xd
6402052b:	jne    0x64020530
6402052d:	inc    edx
6402052e:	jmp    0x6402051b
64020530:	mov    bl,0x30
64020532:	mov    al,BYTE PTR [edx]
64020534:	inc    edx
64020535:	cmp    ecx,0xb
64020538:	ja     0x6402076d
6402053e:	jmp    DWORD PTR [ecx*4+0x64020b3d]
64020545:	mov    cl,al
64020547:	sub    cl,0x31
6402054a:	cmp    cl,0x8
6402054d:	ja     0x64020555
6402054f:	push   0x3
64020551:	pop    ecx
64020552:	dec    edx
64020553:	jmp    0x64020532
64020555:	mov    ecx,DWORD PTR [ebp+0x24]
64020558:	mov    ecx,DWORD PTR [ecx]
6402055a:	mov    ecx,DWORD PTR [ecx+0xbc]
64020560:	mov    ecx,DWORD PTR [ecx]
64020562:	cmp    al,BYTE PTR [ecx]
64020564:	jne    0x6402056b
64020566:	push   0x5
64020568:	pop    ecx
64020569:	jmp    0x64020532
6402056b:	movsx  eax,al
6402056e:	sub    eax,0x2b
64020571:	je     0x64020590
64020573:	dec    eax
64020574:	dec    eax
64020575:	je     0x64020584
64020577:	sub    eax,0x3
6402057a:	jne    0x6402070b
64020580:	mov    ecx,esi
64020582:	jmp    0x64020532
64020584:	push   0x2
64020586:	pop    ecx
64020587:	mov    DWORD PTR [ebp-0x74],0x8000
6402058e:	jmp    0x64020532
64020590:	and    DWORD PTR [ebp-0x74],0x0
64020594:	push   0x2
64020596:	pop    ecx
64020597:	jmp    0x64020532
64020599:	mov    cl,al
6402059b:	sub    cl,0x31
6402059e:	cmp    cl,0x8
640205a1:	mov    DWORD PTR [ebp-0x58],esi
640205a4:	jbe    0x6402054f
640205a6:	mov    ecx,DWORD PTR [ebp+0x24]
640205a9:	mov    ecx,DWORD PTR [ecx]
640205ab:	mov    ecx,DWORD PTR [ecx+0xbc]
640205b1:	mov    ecx,DWORD PTR [ecx]
640205b3:	cmp    al,BYTE PTR [ecx]
640205b5:	jne    0x640205bb
640205b7:	push   0x4
640205b9:	jmp    0x64020568
640205bb:	cmp    al,0x2b
640205bd:	je     0x640205e7
640205bf:	cmp    al,0x2d
640205c1:	je     0x640205e7
640205c3:	cmp    al,bl
640205c5:	je     0x64020580
640205c7:	cmp    al,0x43
640205c9:	jle    0x6402070b
640205cf:	cmp    al,0x45
640205d1:	jle    0x640205e3
640205d3:	cmp    al,0x63
640205d5:	jle    0x6402070b
640205db:	cmp    al,0x65
640205dd:	jg     0x6402070b
640205e3:	push   0x6
640205e5:	jmp    0x64020568
640205e7:	dec    edx
640205e8:	push   0xb
640205ea:	jmp    0x64020568
640205ef:	mov    cl,al
640205f1:	sub    cl,0x31
640205f4:	cmp    cl,0x8
640205f7:	jbe    0x6402054f
640205fd:	mov    ecx,DWORD PTR [ebp+0x24]
64020600:	mov    ecx,DWORD PTR [ecx]
64020602:	mov    ecx,DWORD PTR [ecx+0xbc]
64020608:	mov    ecx,DWORD PTR [ecx]
6402060a:	cmp    al,BYTE PTR [ecx]
6402060c:	je     0x64020566
64020612:	cmp    al,bl
64020614:	je     0x64020580
6402061a:	mov    edx,DWORD PTR [ebp-0x54]
6402061d:	jmp    0x64020736
64020622:	mov    DWORD PTR [ebp-0x58],esi
64020625:	jmp    0x64020641
64020627:	cmp    al,0x39
64020629:	jg     0x64020645
6402062b:	cmp    DWORD PTR [ebp-0x4c],0x19
6402062f:	jae    0x6402063b
64020631:	inc    DWORD PTR [ebp-0x4c]
64020634:	sub    al,bl
64020636:	mov    BYTE PTR [edi],al
64020638:	inc    edi
64020639:	jmp    0x6402063e
6402063b:	inc    DWORD PTR [ebp-0x50]
6402063e:	mov    al,BYTE PTR [edx]
64020640:	inc    edx
64020641:	cmp    al,bl
64020643:	jge    0x64020627
64020645:	mov    ecx,DWORD PTR [ebp+0x24]
64020648:	mov    ecx,DWORD PTR [ecx]
6402064a:	mov    ecx,DWORD PTR [ecx+0xbc]
64020650:	mov    ecx,DWORD PTR [ecx]
64020652:	cmp    al,BYTE PTR [ecx]
64020654:	je     0x640205b7
6402065a:	cmp    al,0x2b
6402065c:	je     0x640205e7
6402065e:	cmp    al,0x2d
64020660:	je     0x640205e7
64020662:	jmp    0x640205c7
64020667:	cmp    DWORD PTR [ebp-0x4c],0x0
6402066b:	mov    DWORD PTR [ebp-0x58],esi
6402066e:	mov    DWORD PTR [ebp-0x5c],esi
64020671:	jne    0x64020699
64020673:	jmp    0x6402067b
64020675:	dec    DWORD PTR [ebp-0x50]
64020678:	mov    al,BYTE PTR [edx]
6402067a:	inc    edx
6402067b:	cmp    al,bl
6402067d:	je     0x64020675
6402067f:	jmp    0x64020699
64020681:	cmp    al,0x39
64020683:	jg     0x6402065a
64020685:	cmp    DWORD PTR [ebp-0x4c],0x19
64020689:	jae    0x64020696
6402068b:	inc    DWORD PTR [ebp-0x4c]
6402068e:	sub    al,bl
64020690:	mov    BYTE PTR [edi],al
64020692:	inc    edi
64020693:	dec    DWORD PTR [ebp-0x50]
64020696:	mov    al,BYTE PTR [edx]
64020698:	inc    edx
64020699:	cmp    al,bl
6402069b:	jge    0x64020681
6402069d:	jmp    0x6402065a
6402069f:	sub    al,bl
640206a1:	cmp    al,0x9
640206a3:	mov    DWORD PTR [ebp-0x5c],esi
640206a6:	ja     0x6402061a
640206ac:	push   0x4
640206ae:	jmp    0x64020551
640206b3:	lea    ecx,[edx-0x2]
640206b6:	mov    DWORD PTR [ebp-0x54],ecx
640206b9:	mov    cl,al
640206bb:	sub    cl,0x31
640206be:	cmp    cl,0x8
640206c1:	ja     0x640206ca
640206c3:	push   0x9
640206c5:	jmp    0x64020551
640206ca:	movsx  eax,al
640206cd:	sub    eax,0x2b
640206d0:	je     0x640206f2
640206d2:	dec    eax
640206d3:	dec    eax
640206d4:	je     0x640206e6
640206d6:	sub    eax,0x3
640206d9:	jne    0x6402061a
640206df:	push   0x8
640206e1:	jmp    0x64020568
640206e6:	or     DWORD PTR [ebp-0x68],0xffffffff
640206ea:	push   0x7
640206ec:	pop    ecx
640206ed:	jmp    0x64020532
640206f2:	push   0x7
640206f4:	jmp    0x64020568
640206f9:	mov    DWORD PTR [ebp-0x60],esi
640206fc:	jmp    0x64020701
640206fe:	mov    al,BYTE PTR [edx]
64020700:	inc    edx
64020701:	cmp    al,bl
64020703:	je     0x640206fe
64020705:	sub    al,0x31
64020707:	cmp    al,0x8
64020709:	jbe    0x640206c3
6402070b:	dec    edx
6402070c:	jmp    0x64020736
6402070e:	mov    cl,al
64020710:	sub    cl,0x31
64020713:	cmp    cl,0x8
64020716:	jbe    0x640206c3
64020718:	cmp    al,bl
6402071a:	jmp    0x640206d9
6402071c:	cmp    DWORD PTR [ebp+0x20],0x0
64020720:	je     0x64020769
64020722:	movsx  eax,al
64020725:	sub    eax,0x2b
64020728:	lea    ecx,[edx-0x1]
6402072b:	mov    DWORD PTR [ebp-0x54],ecx
6402072e:	je     0x640206f2
64020730:	dec    eax
64020731:	dec    eax
64020732:	je     0x640206e6
64020734:	mov    edx,ecx
64020736:	cmp    DWORD PTR [ebp-0x58],0x0
6402073a:	mov    eax,DWORD PTR [ebp-0x70]
6402073d:	mov    DWORD PTR [eax],edx
6402073f:	je     0x64020ae9
64020745:	push   0x18
64020747:	pop    eax
64020748:	cmp    DWORD PTR [ebp-0x4c],eax
6402074b:	jbe    0x6402075d
6402074d:	cmp    BYTE PTR [ebp-0x9],0x5
64020751:	jl     0x64020756
64020753:	inc    BYTE PTR [ebp-0x9]
64020756:	dec    edi
64020757:	inc    DWORD PTR [ebp-0x50]
6402075a:	mov    DWORD PTR [ebp-0x4c],eax
6402075d:	cmp    DWORD PTR [ebp-0x4c],0x0
64020761:	jbe    0x64020b10
64020767:	jmp    0x640207c2
64020769:	push   0xa
6402076b:	pop    ecx
6402076c:	dec    edx
6402076d:	cmp    ecx,0xa
64020770:	jne    0x64020532
64020776:	jmp    0x64020736
64020778:	mov    DWORD PTR [ebp-0x60],esi
6402077b:	xor    ecx,ecx
6402077d:	jmp    0x64020798
6402077f:	cmp    al,0x39
64020781:	jg     0x640207a3
64020783:	imul   ecx,ecx,0xa
64020786:	movsx  esi,al
64020789:	lea    ecx,[ecx+esi*1-0x30]
6402078d:	cmp    ecx,0x1450
64020793:	jg     0x6402079e
64020795:	mov    al,BYTE PTR [edx]
64020797:	inc    edx
64020798:	cmp    al,bl
6402079a:	jge    0x6402077f
6402079c:	jmp    0x640207a3
6402079e:	mov    ecx,0x1451
640207a3:	mov    DWORD PTR [ebp-0x64],ecx
640207a6:	jmp    0x640207b3
640207a8:	cmp    al,0x39
640207aa:	jg     0x6402070b
640207b0:	mov    al,BYTE PTR [edx]
640207b2:	inc    edx
640207b3:	cmp    al,bl
640207b5:	jge    0x640207a8
640207b7:	jmp    0x6402070b
640207bc:	dec    DWORD PTR [ebp-0x4c]
640207bf:	inc    DWORD PTR [ebp-0x50]
640207c2:	dec    edi
640207c3:	cmp    BYTE PTR [edi],0x0
640207c6:	je     0x640207bc
640207c8:	lea    eax,[ebp-0x3c]
640207cb:	push   eax
640207cc:	push   DWORD PTR [ebp-0x4c]
640207cf:	lea    eax,[ebp-0x20]
640207d2:	push   eax
640207d3:	call   0x64021864
640207d8:	mov    eax,DWORD PTR [ebp-0x64]
640207db:	xor    ecx,ecx
640207dd:	add    esp,0xc
640207e0:	cmp    DWORD PTR [ebp-0x68],ecx
640207e3:	jge    0x640207e7
640207e5:	neg    eax
640207e7:	add    eax,DWORD PTR [ebp-0x50]
640207ea:	cmp    DWORD PTR [ebp-0x60],ecx
640207ed:	jne    0x640207f2
640207ef:	add    eax,DWORD PTR [ebp+0x18]
640207f2:	cmp    DWORD PTR [ebp-0x5c],ecx
640207f5:	jne    0x640207fa
640207f7:	sub    eax,DWORD PTR [ebp+0x1c]
640207fa:	cmp    eax,0x1450
640207ff:	jg     0x64020af2
64020805:	cmp    eax,0xffffebb0
6402080a:	jl     0x64020b09
64020810:	mov    esi,0x6402d0a0
64020815:	sub    esi,0x60
64020818:	cmp    eax,ecx
6402081a:	mov    DWORD PTR [ebp-0x54],eax
6402081d:	je     0x64020ad7
64020823:	jge    0x64020832
64020825:	neg    eax
64020827:	mov    esi,0x6402d200
6402082c:	mov    DWORD PTR [ebp-0x54],eax
6402082f:	sub    esi,0x60
64020832:	cmp    DWORD PTR [ebp+0x14],ecx
64020835:	jne    0x6402083b
64020837:	mov    WORD PTR [ebp-0x3c],cx
6402083b:	cmp    DWORD PTR [ebp-0x54],ecx
6402083e:	je     0x64020ad7
64020844:	mov    eax,DWORD PTR [ebp-0x54]
64020847:	sar    DWORD PTR [ebp-0x54],0x3
6402084b:	add    esi,0x54
6402084e:	and    eax,0x7
64020851:	test   eax,eax
64020853:	mov    DWORD PTR [ebp-0x4c],esi
64020856:	je     0x64020acd
6402085c:	imul   eax,eax,0xc
6402085f:	add    eax,esi
64020861:	mov    ebx,eax
64020863:	cmp    WORD PTR [ebx],0x8000
64020868:	mov    DWORD PTR [ebp-0x70],ebx
6402086b:	jb     0x64020881
6402086d:	mov    esi,ebx
6402086f:	lea    edi,[ebp-0x48]
64020872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020875:	dec    DWORD PTR [ebp-0x46]
64020878:	mov    esi,DWORD PTR [ebp-0x4c]
6402087b:	lea    ebx,[ebp-0x48]
6402087e:	mov    DWORD PTR [ebp-0x70],ebx
64020881:	movzx  edx,WORD PTR [ebx+0xa]
64020885:	mov    ecx,DWORD PTR [ebp-0x32]
64020888:	xor    eax,eax
6402088a:	mov    DWORD PTR [ebp-0x50],eax
6402088d:	mov    DWORD PTR [ebp-0x2c],eax
64020890:	mov    DWORD PTR [ebp-0x28],eax
64020893:	mov    DWORD PTR [ebp-0x24],eax
64020896:	mov    eax,edx
64020898:	mov    edi,0x7fff
6402089d:	xor    eax,ecx
6402089f:	and    ecx,edi
640208a1:	and    edx,edi
640208a3:	and    eax,0x8000
640208a8:	cmp    cx,0x7fff
640208ad:	lea    edi,[edx+ecx*1]
640208b0:	movzx  edi,di
640208b3:	jae    0x64020ab3
640208b9:	cmp    dx,0x7fff
640208be:	jae    0x64020ab3
640208c4:	cmp    di,0xbffd
640208c9:	ja     0x64020ab3
640208cf:	cmp    di,0x3fbf
640208d4:	ja     0x640208e3
640208d6:	xor    eax,eax
640208d8:	mov    DWORD PTR [ebp-0x38],eax
640208db:	mov    DWORD PTR [ebp-0x3c],eax
640208de:	jmp    0x64020aca
640208e3:	test   cx,cx
640208e6:	jne    0x64020907
640208e8:	inc    edi
640208e9:	test   DWORD PTR [ebp-0x34],0x7fffffff
640208f0:	jne    0x64020907
640208f2:	cmp    DWORD PTR [ebp-0x38],0x0
640208f6:	jne    0x64020907
640208f8:	cmp    DWORD PTR [ebp-0x3c],0x0
640208fc:	jne    0x64020907
640208fe:	and    WORD PTR [ebp-0x32],cx
64020902:	jmp    0x64020acd
64020907:	xor    ecx,ecx
64020909:	cmp    dx,cx
6402090c:	jne    0x6402092f
6402090e:	inc    edi
6402090f:	test   DWORD PTR [ebx+0x8],0x7fffffff
64020916:	jne    0x6402092f
64020918:	cmp    DWORD PTR [ebx+0x4],ecx
6402091b:	jne    0x6402092f
6402091d:	cmp    DWORD PTR [ebx],ecx
6402091f:	jne    0x6402092f
64020921:	mov    DWORD PTR [ebp-0x34],ecx
64020924:	mov    DWORD PTR [ebp-0x38],ecx
64020927:	mov    DWORD PTR [ebp-0x3c],ecx
6402092a:	jmp    0x64020acd
6402092f:	and    DWORD PTR [ebp-0x68],ecx
64020932:	lea    esi,[ebp-0x28]
64020935:	mov    DWORD PTR [ebp-0x58],0x5
6402093c:	mov    ecx,DWORD PTR [ebp-0x68]
6402093f:	mov    edx,DWORD PTR [ebp-0x58]
64020942:	add    ecx,ecx
64020944:	test   edx,edx
64020946:	mov    DWORD PTR [ebp-0x64],edx
64020949:	jle    0x640209a0
6402094b:	lea    ecx,[ebp+ecx*1-0x3c]
6402094f:	add    ebx,0x8
64020952:	mov    DWORD PTR [ebp-0x5c],ecx
64020955:	mov    DWORD PTR [ebp-0x60],ebx
64020958:	mov    ecx,DWORD PTR [ebp-0x60]
6402095b:	mov    edx,DWORD PTR [ebp-0x5c]
6402095e:	movzx  edx,WORD PTR [edx]
64020961:	movzx  ecx,WORD PTR [ecx]
64020964:	and    DWORD PTR [ebp-0x78],0x0
64020968:	imul   ecx,edx
6402096b:	mov    edx,DWORD PTR [esi-0x4]
6402096e:	lea    ebx,[edx+ecx*1]
64020971:	cmp    ebx,edx
64020973:	jb     0x64020979
64020975:	cmp    ebx,ecx
64020977:	jae    0x64020980
64020979:	mov    DWORD PTR [ebp-0x78],0x1
64020980:	cmp    DWORD PTR [ebp-0x78],0x0
64020984:	mov    DWORD PTR [esi-0x4],ebx
64020987:	je     0x6402098c
64020989:	inc    WORD PTR [esi]
6402098c:	add    DWORD PTR [ebp-0x5c],0x2
64020990:	sub    DWORD PTR [ebp-0x60],0x2
64020994:	dec    DWORD PTR [ebp-0x64]
64020997:	cmp    DWORD PTR [ebp-0x64],0x0
6402099b:	jg     0x64020958
6402099d:	mov    ebx,DWORD PTR [ebp-0x70]
640209a0:	inc    esi
640209a1:	inc    esi
640209a2:	inc    DWORD PTR [ebp-0x68]
640209a5:	dec    DWORD PTR [ebp-0x58]
640209a8:	cmp    DWORD PTR [ebp-0x58],0x0
640209ac:	jg     0x6402093c
640209ae:	add    edi,0xc002
640209b4:	test   di,di
640209b7:	jle    0x640209f4
640209b9:	test   DWORD PTR [ebp-0x24],0x80000000
640209c0:	jne    0x640209ef
640209c2:	mov    esi,DWORD PTR [ebp-0x28]
640209c5:	mov    ecx,DWORD PTR [ebp-0x2c]
640209c8:	shl    DWORD PTR [ebp-0x2c],1
640209cb:	shr    ecx,0x1f
640209ce:	mov    edx,esi
640209d0:	add    esi,esi
640209d2:	or     esi,ecx
640209d4:	mov    ecx,DWORD PTR [ebp-0x24]
640209d7:	shr    edx,0x1f
640209da:	add    ecx,ecx
640209dc:	or     ecx,edx
640209de:	add    edi,0xffff
640209e4:	test   di,di
640209e7:	mov    DWORD PTR [ebp-0x28],esi
640209ea:	mov    DWORD PTR [ebp-0x24],ecx
640209ed:	jg     0x640209b9
640209ef:	test   di,di
640209f2:	jg     0x64020a41
640209f4:	add    edi,0xffff
640209fa:	test   di,di
640209fd:	jge    0x64020a41
640209ff:	mov    ecx,edi
64020a01:	neg    ecx
64020a03:	movzx  esi,cx
64020a06:	add    edi,esi
64020a08:	test   BYTE PTR [ebp-0x2c],0x1
64020a0c:	je     0x64020a11
64020a0e:	inc    DWORD PTR [ebp-0x50]
64020a11:	mov    ecx,DWORD PTR [ebp-0x24]
64020a14:	mov    ebx,DWORD PTR [ebp-0x28]
64020a17:	mov    edx,DWORD PTR [ebp-0x28]
64020a1a:	shr    DWORD PTR [ebp-0x24],1
64020a1d:	shl    ecx,0x1f
64020a20:	shr    ebx,1
64020a22:	or     ebx,ecx
64020a24:	mov    ecx,DWORD PTR [ebp-0x2c]
64020a27:	shl    edx,0x1f
64020a2a:	shr    ecx,1
64020a2c:	or     ecx,edx
64020a2e:	dec    esi
64020a2f:	mov    DWORD PTR [ebp-0x28],ebx
64020a32:	mov    DWORD PTR [ebp-0x2c],ecx
64020a35:	jne    0x64020a08
64020a37:	cmp    DWORD PTR [ebp-0x50],esi
64020a3a:	je     0x64020a41
64020a3c:	or     WORD PTR [ebp-0x2c],0x1
64020a41:	cmp    WORD PTR [ebp-0x2c],0x8000
64020a47:	ja     0x64020a5a
64020a49:	mov    ecx,DWORD PTR [ebp-0x2c]
64020a4c:	and    ecx,0x1ffff
64020a52:	cmp    ecx,0x18000
64020a58:	jne    0x64020a8d
64020a5a:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
64020a5e:	jne    0x64020a8a
64020a60:	and    DWORD PTR [ebp-0x2a],0x0
64020a64:	cmp    DWORD PTR [ebp-0x26],0xffffffff
64020a68:	jne    0x64020a85
64020a6a:	and    DWORD PTR [ebp-0x26],0x0
64020a6e:	cmp    WORD PTR [ebp-0x22],0xffff
64020a74:	jne    0x64020a7f
64020a76:	mov    WORD PTR [ebp-0x22],0x8000
64020a7c:	inc    edi
64020a7d:	jmp    0x64020a8d
64020a7f:	inc    WORD PTR [ebp-0x22]
64020a83:	jmp    0x64020a8d
64020a85:	inc    DWORD PTR [ebp-0x26]
64020a88:	jmp    0x64020a8d
64020a8a:	inc    DWORD PTR [ebp-0x2a]
64020a8d:	cmp    di,0x7fff
64020a92:	mov    esi,DWORD PTR [ebp-0x4c]
64020a95:	jae    0x64020ab3
64020a97:	mov    cx,WORD PTR [ebp-0x2a]
64020a9b:	mov    WORD PTR [ebp-0x3c],cx
64020a9f:	mov    ecx,DWORD PTR [ebp-0x28]
64020aa2:	mov    DWORD PTR [ebp-0x3a],ecx
64020aa5:	mov    ecx,DWORD PTR [ebp-0x24]
64020aa8:	or     edi,eax
64020aaa:	mov    DWORD PTR [ebp-0x36],ecx
64020aad:	mov    WORD PTR [ebp-0x32],di
64020ab1:	jmp    0x64020acd
64020ab3:	neg    ax
64020ab6:	sbb    eax,eax
64020ab8:	and    DWORD PTR [ebp-0x38],0x0
64020abc:	and    eax,0x80000000
64020ac1:	add    eax,0x7fff8000
64020ac6:	and    DWORD PTR [ebp-0x3c],0x0
64020aca:	mov    DWORD PTR [ebp-0x34],eax
64020acd:	cmp    DWORD PTR [ebp-0x54],0x0
64020ad1:	jne    0x64020844
64020ad7:	mov    eax,DWORD PTR [ebp-0x34]
64020ada:	movzx  ecx,WORD PTR [ebp-0x3c]
64020ade:	mov    esi,DWORD PTR [ebp-0x3a]
64020ae1:	mov    edx,DWORD PTR [ebp-0x36]
64020ae4:	shr    eax,0x10
64020ae7:	jmp    0x64020b18
64020ae9:	mov    DWORD PTR [ebp-0x6c],0x4
64020af0:	jmp    0x64020b10
64020af2:	xor    esi,esi
64020af4:	mov    eax,0x7fff
64020af9:	mov    edx,0x80000000
64020afe:	xor    ecx,ecx
64020b00:	mov    DWORD PTR [ebp-0x6c],0x2
64020b07:	jmp    0x64020b18
64020b09:	mov    DWORD PTR [ebp-0x6c],0x1
64020b10:	xor    ecx,ecx
64020b12:	xor    eax,eax
64020b14:	xor    edx,edx
64020b16:	xor    esi,esi
64020b18:	mov    edi,DWORD PTR [ebp-0x7c]
64020b1b:	or     eax,DWORD PTR [ebp-0x74]
64020b1e:	mov    WORD PTR [edi],cx
64020b21:	mov    WORD PTR [edi+0xa],ax
64020b25:	mov    eax,DWORD PTR [ebp-0x6c]
64020b28:	mov    DWORD PTR [edi+0x2],esi
64020b2b:	mov    DWORD PTR [edi+0x6],edx
64020b2e:	mov    ecx,DWORD PTR [ebp-0x4]
64020b31:	pop    edi
64020b32:	pop    esi
64020b33:	xor    ecx,ebp
64020b35:	pop    ebx
64020b36:	call   0x6401257c
64020b3b:	leave  
64020b3c:	ret    
64020b3d:	inc    ebp
64020b3e:	add    eax,0x5996402
64020b43:	add    ah,BYTE PTR [edi+ebp*8+0x5]
64020b47:	add    ah,BYTE PTR [edx+eiz*1+0x6]
64020b4b:	add    ah,BYTE PTR [edi+eiz*2+0x6]
64020b4f:	add    ah,BYTE PTR [edi+ebx*4+0x6]
64020b53:	add    ah,BYTE PTR [ebx+esi*4+0x6]
64020b57:	add    ah,BYTE PTR [esi+ecx*1+0x7]
64020b5b:	add    ah,BYTE PTR [ecx+edi*8+0x6]
64020b5f:	add    ah,BYTE PTR [eax+edi*2+0x7]
64020b63:	add    ah,BYTE PTR [ebp+ebp*2+0x7]
64020b67:	add    ah,BYTE PTR [esp+ebx*1+0x7]
64020b6b:	add    ah,BYTE PTR [ebp+edx*2-0x75]
64020b6f:	in     al,dx
64020b70:	sub    esp,0x74
64020b73:	mov    eax,ds:0x6402c09c
64020b78:	xor    eax,ebp
64020b7a:	mov    DWORD PTR [ebp-0x4],eax
64020b7d:	push   ebx
64020b7e:	mov    ebx,DWORD PTR [ebp+0x1c]
64020b81:	push   esi
64020b82:	push   edi
64020b83:	lea    esi,[ebp+0x8]
64020b86:	lea    edi,[ebp-0x10]
64020b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020b8b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
64020b8d:	mov    edx,DWORD PTR [ebp-0x8]
64020b90:	mov    ecx,edx
64020b92:	mov    eax,0x8000
64020b97:	and    ecx,eax
64020b99:	and    edx,0x7fff
64020b9f:	test   cx,cx
64020ba2:	mov    DWORD PTR [ebp-0x60],ebx
64020ba5:	mov    BYTE PTR [ebp-0x30],0xcc
64020ba9:	mov    BYTE PTR [ebp-0x2f],0xcc
64020bad:	mov    BYTE PTR [ebp-0x2e],0xcc
64020bb1:	mov    BYTE PTR [ebp-0x2d],0xcc
64020bb5:	mov    BYTE PTR [ebp-0x2c],0xcc
64020bb9:	mov    BYTE PTR [ebp-0x2b],0xcc
64020bbd:	mov    BYTE PTR [ebp-0x2a],0xcc
64020bc1:	mov    BYTE PTR [ebp-0x29],0xcc
64020bc5:	mov    BYTE PTR [ebp-0x28],0xcc
64020bc9:	mov    BYTE PTR [ebp-0x27],0xcc
64020bcd:	mov    BYTE PTR [ebp-0x26],0xfb
64020bd1:	mov    BYTE PTR [ebp-0x25],0x3f
64020bd5:	mov    DWORD PTR [ebp-0x74],0x1
64020bdc:	mov    DWORD PTR [ebp-0x6c],ecx
64020bdf:	je     0x64020be7
64020be1:	mov    BYTE PTR [ebx+0x2],0x2d
64020be5:	jmp    0x64020beb
64020be7:	mov    BYTE PTR [ebx+0x2],0x20
64020beb:	test   dx,dx
64020bee:	mov    esi,DWORD PTR [ebp-0xc]
64020bf1:	mov    edi,DWORD PTR [ebp-0x10]
64020bf4:	jne    0x64020c24
64020bf6:	test   esi,esi
64020bf8:	jne    0x64020c24
64020bfa:	test   edi,edi
64020bfc:	jne    0x64020c24
64020bfe:	and    WORD PTR [ebx],di
64020c01:	cmp    cx,ax
64020c04:	setne  al
64020c07:	dec    al
64020c09:	and    al,0xd
64020c0b:	add    al,0x20
64020c0d:	mov    BYTE PTR [ebx+0x2],al
64020c10:	mov    BYTE PTR [ebx+0x3],0x1
64020c14:	mov    BYTE PTR [ebx+0x4],0x30
64020c18:	mov    BYTE PTR [ebx+0x5],0x0
64020c1c:	xor    eax,eax
64020c1e:	inc    eax
64020c1f:	jmp    0x640213eb
64020c24:	cmp    dx,0x7fff
64020c29:	jne    0x64020ccd
64020c2f:	mov    eax,0x80000000
64020c34:	cmp    esi,eax
64020c36:	mov    WORD PTR [ebx],0x1
64020c3b:	jne    0x64020c41
64020c3d:	test   edi,edi
64020c3f:	je     0x64020c50
64020c41:	test   esi,0x40000000
64020c47:	jne    0x64020c50
64020c49:	push   0x64026510
64020c4e:	jmp    0x64020ca1
64020c50:	test   cx,cx
64020c53:	je     0x64020c68
64020c55:	cmp    esi,0xc0000000
64020c5b:	jne    0x64020c68
64020c5d:	test   edi,edi
64020c5f:	jne    0x64020c9c
64020c61:	push   0x64026508
64020c66:	jmp    0x64020c75
64020c68:	cmp    esi,eax
64020c6a:	jne    0x64020c9c
64020c6c:	test   edi,edi
64020c6e:	jne    0x64020c9c
64020c70:	push   0x64026500
64020c75:	lea    eax,[ebx+0x4]
64020c78:	push   0x16
64020c7a:	push   eax
64020c7b:	call   0x64013eb8
64020c80:	add    esp,0xc
64020c83:	xor    esi,esi
64020c85:	test   eax,eax
64020c87:	je     0x64020c96
64020c89:	push   esi
64020c8a:	push   esi
64020c8b:	push   esi
64020c8c:	push   esi
64020c8d:	push   esi
64020c8e:	call   0x64011fb8
64020c93:	add    esp,0x14
64020c96:	mov    BYTE PTR [ebx+0x3],0x5
64020c9a:	jmp    0x64020cc6
64020c9c:	push   0x640264f8
64020ca1:	lea    eax,[ebx+0x4]
64020ca4:	push   0x16
64020ca6:	push   eax
64020ca7:	call   0x64013eb8
64020cac:	add    esp,0xc
64020caf:	xor    esi,esi
64020cb1:	test   eax,eax
64020cb3:	je     0x64020cc2
64020cb5:	push   esi
64020cb6:	push   esi
64020cb7:	push   esi
64020cb8:	push   esi
64020cb9:	push   esi
64020cba:	call   0x64011fb8
64020cbf:	add    esp,0x14
64020cc2:	mov    BYTE PTR [ebx+0x3],0x6
64020cc6:	xor    eax,eax
64020cc8:	jmp    0x640213eb
64020ccd:	movzx  ecx,dx
64020cd0:	mov    ebx,ecx
64020cd2:	imul   ecx,ecx,0x4d10
64020cd8:	shr    ebx,0x8
64020cdb:	mov    eax,esi
64020cdd:	shr    eax,0x18
64020ce0:	lea    eax,[ebx+eax*2]
64020ce3:	imul   eax,eax,0x4d
64020ce6:	lea    eax,[eax+ecx*1-0x134312f4]
64020ced:	sar    eax,0x10
64020cf0:	movzx  ecx,ax
64020cf3:	movsx  ebx,cx
64020cf6:	mov    DWORD PTR [ebp-0x4c],ecx
64020cf9:	xor    eax,eax
64020cfb:	mov    ecx,0x6402d0a0
64020d00:	neg    ebx
64020d02:	sub    ecx,0x60
64020d05:	cmp    ebx,eax
64020d07:	mov    WORD PTR [ebp-0x16],dx
64020d0b:	mov    DWORD PTR [ebp-0x1a],esi
64020d0e:	mov    DWORD PTR [ebp-0x1e],edi
64020d11:	mov    WORD PTR [ebp-0x20],ax
64020d15:	mov    DWORD PTR [ebp-0x68],ecx
64020d18:	je     0x64020fcc
64020d1e:	jge    0x64020d2d
64020d20:	mov    ecx,0x6402d200
64020d25:	neg    ebx
64020d27:	sub    ecx,0x60
64020d2a:	mov    DWORD PTR [ebp-0x68],ecx
64020d2d:	cmp    ebx,eax
64020d2f:	je     0x64020fcc
64020d35:	add    DWORD PTR [ebp-0x68],0x54
64020d39:	mov    ecx,ebx
64020d3b:	and    ecx,0x7
64020d3e:	sar    ebx,0x3
64020d41:	test   ecx,ecx
64020d43:	je     0x64020fc2
64020d49:	imul   ecx,ecx,0xc
64020d4c:	add    ecx,DWORD PTR [ebp-0x68]
64020d4f:	cmp    WORD PTR [ecx],0x8000
64020d54:	mov    DWORD PTR [ebp-0x64],ecx
64020d57:	jb     0x64020d6c
64020d59:	mov    esi,ecx
64020d5b:	lea    edi,[ebp-0x3c]
64020d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020d60:	lea    eax,[ebp-0x3c]
64020d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020d64:	dec    DWORD PTR [ebp-0x3a]
64020d67:	mov    DWORD PTR [ebp-0x64],eax
64020d6a:	mov    ecx,eax
64020d6c:	movzx  edi,WORD PTR [ecx+0xa]
64020d70:	mov    edx,DWORD PTR [ebp-0x16]
64020d73:	xor    eax,eax
64020d75:	mov    ecx,edi
64020d77:	mov    esi,0x7fff
64020d7c:	xor    ecx,edx
64020d7e:	and    edx,esi
64020d80:	and    edi,esi
64020d82:	mov    DWORD PTR [ebp-0x48],eax
64020d85:	mov    DWORD PTR [ebp-0x10],eax
64020d88:	mov    DWORD PTR [ebp-0xc],eax
64020d8b:	mov    DWORD PTR [ebp-0x8],eax
64020d8e:	and    ecx,0x8000
64020d94:	cmp    dx,si
64020d97:	lea    eax,[edi+edx*1]
64020d9a:	movzx  eax,ax
64020d9d:	jae    0x64020fa6
64020da3:	cmp    di,si
64020da6:	jae    0x64020fa6
64020dac:	cmp    ax,0xbffd
64020db0:	ja     0x64020fa6
64020db6:	cmp    ax,0x3fbf
64020dba:	ja     0x64020dcc
64020dbc:	xor    eax,eax
64020dbe:	mov    DWORD PTR [ebp-0x18],eax
64020dc1:	mov    DWORD PTR [ebp-0x1c],eax
64020dc4:	mov    DWORD PTR [ebp-0x20],eax
64020dc7:	jmp    0x64020fc2
64020dcc:	xor    esi,esi
64020dce:	cmp    dx,si
64020dd1:	jne    0x64020df0
64020dd3:	inc    eax
64020dd4:	test   DWORD PTR [ebp-0x18],0x7fffffff
64020ddb:	jne    0x64020df0
64020ddd:	cmp    DWORD PTR [ebp-0x1c],esi
64020de0:	jne    0x64020df0
64020de2:	cmp    DWORD PTR [ebp-0x20],esi
64020de5:	jne    0x64020df0
64020de7:	mov    WORD PTR [ebp-0x16],si
64020deb:	jmp    0x64020fc2
64020df0:	cmp    di,si
64020df3:	jne    0x64020e19
64020df5:	mov    edx,DWORD PTR [ebp-0x64]
64020df8:	inc    eax
64020df9:	test   DWORD PTR [edx+0x8],0x7fffffff
64020e00:	jne    0x64020e19
64020e02:	cmp    DWORD PTR [edx+0x4],esi
64020e05:	jne    0x64020e19
64020e07:	cmp    DWORD PTR [edx],esi
64020e09:	jne    0x64020e19
64020e0b:	mov    DWORD PTR [ebp-0x18],esi
64020e0e:	mov    DWORD PTR [ebp-0x1c],esi
64020e11:	mov    DWORD PTR [ebp-0x20],esi
64020e14:	jmp    0x64020fc2
64020e19:	lea    edi,[ebp-0xc]
64020e1c:	mov    DWORD PTR [ebp-0x5c],esi
64020e1f:	mov    DWORD PTR [ebp-0x44],edi
64020e22:	mov    DWORD PTR [ebp-0x40],0x5
64020e29:	mov    edx,DWORD PTR [ebp-0x5c]
64020e2c:	mov    esi,DWORD PTR [ebp-0x40]
64020e2f:	add    edx,edx
64020e31:	test   esi,esi
64020e33:	mov    DWORD PTR [ebp-0x50],esi
64020e36:	jle    0x64020e90
64020e38:	lea    edx,[ebp+edx*1-0x20]
64020e3c:	mov    DWORD PTR [ebp-0x58],edx
64020e3f:	mov    edx,DWORD PTR [ebp-0x64]
64020e42:	add    edx,0x8
64020e45:	mov    DWORD PTR [ebp-0x54],edx
64020e48:	mov    edx,DWORD PTR [ebp-0x58]
64020e4b:	mov    esi,DWORD PTR [ebp-0x54]
64020e4e:	movzx  esi,WORD PTR [esi]
64020e51:	movzx  edx,WORD PTR [edx]
64020e54:	mov    edi,DWORD PTR [edi-0x4]
64020e57:	imul   edx,esi
64020e5a:	and    DWORD PTR [ebp-0x70],0x0
64020e5e:	lea    esi,[edi+edx*1]
64020e61:	cmp    esi,edi
64020e63:	jb     0x64020e69
64020e65:	cmp    esi,edx
64020e67:	jae    0x64020e70
64020e69:	mov    DWORD PTR [ebp-0x70],0x1
64020e70:	cmp    DWORD PTR [ebp-0x70],0x0
64020e74:	mov    edi,DWORD PTR [ebp-0x44]
64020e77:	mov    DWORD PTR [edi-0x4],esi
64020e7a:	je     0x64020e7f
64020e7c:	inc    WORD PTR [edi]
64020e7f:	add    DWORD PTR [ebp-0x58],0x2
64020e83:	sub    DWORD PTR [ebp-0x54],0x2
64020e87:	dec    DWORD PTR [ebp-0x50]
64020e8a:	cmp    DWORD PTR [ebp-0x50],0x0
64020e8e:	jg     0x64020e48
64020e90:	inc    edi
64020e91:	inc    edi
64020e92:	inc    DWORD PTR [ebp-0x5c]
64020e95:	dec    DWORD PTR [ebp-0x40]
64020e98:	cmp    DWORD PTR [ebp-0x40],0x0
64020e9c:	mov    DWORD PTR [ebp-0x44],edi
64020e9f:	jg     0x64020e29
64020ea1:	add    eax,0xc002
64020ea6:	test   ax,ax
64020ea9:	jle    0x64020ee6
64020eab:	test   DWORD PTR [ebp-0x8],0x80000000
64020eb2:	jne    0x64020ee1
64020eb4:	mov    edx,DWORD PTR [ebp-0x10]
64020eb7:	mov    edi,DWORD PTR [ebp-0xc]
64020eba:	mov    esi,DWORD PTR [ebp-0xc]
64020ebd:	shl    DWORD PTR [ebp-0x10],1
64020ec0:	shr    edx,0x1f
64020ec3:	add    edi,edi
64020ec5:	or     edi,edx
64020ec7:	mov    edx,DWORD PTR [ebp-0x8]
64020eca:	shr    esi,0x1f
64020ecd:	add    edx,edx
64020ecf:	or     edx,esi
64020ed1:	add    eax,0xffff
64020ed6:	test   ax,ax
64020ed9:	mov    DWORD PTR [ebp-0xc],edi
64020edc:	mov    DWORD PTR [ebp-0x8],edx
64020edf:	jg     0x64020eab
64020ee1:	test   ax,ax
64020ee4:	jg     0x64020f38
64020ee6:	add    eax,0xffff
64020eeb:	test   ax,ax
64020eee:	jge    0x64020f38
64020ef0:	mov    edx,eax
64020ef2:	neg    edx
64020ef4:	movzx  edx,dx
64020ef7:	mov    DWORD PTR [ebp-0x44],edx
64020efa:	add    eax,edx
64020efc:	test   BYTE PTR [ebp-0x10],0x1
64020f00:	je     0x64020f05
64020f02:	inc    DWORD PTR [ebp-0x48]
64020f05:	mov    edx,DWORD PTR [ebp-0x8]
64020f08:	mov    edi,DWORD PTR [ebp-0xc]
64020f0b:	mov    esi,DWORD PTR [ebp-0xc]
64020f0e:	shr    DWORD PTR [ebp-0x8],1
64020f11:	shl    edx,0x1f
64020f14:	shr    edi,1
64020f16:	or     edi,edx
64020f18:	mov    edx,DWORD PTR [ebp-0x10]
64020f1b:	shl    esi,0x1f
64020f1e:	shr    edx,1
64020f20:	or     edx,esi
64020f22:	dec    DWORD PTR [ebp-0x44]
64020f25:	mov    DWORD PTR [ebp-0xc],edi
64020f28:	mov    DWORD PTR [ebp-0x10],edx
64020f2b:	jne    0x64020efc
64020f2d:	cmp    DWORD PTR [ebp-0x48],0x0
64020f31:	je     0x64020f38
64020f33:	or     WORD PTR [ebp-0x10],0x1
64020f38:	cmp    WORD PTR [ebp-0x10],0x8000
64020f3e:	ja     0x64020f51
64020f40:	mov    edx,DWORD PTR [ebp-0x10]
64020f43:	and    edx,0x1ffff
64020f49:	cmp    edx,0x18000
64020f4f:	jne    0x64020f84
64020f51:	cmp    DWORD PTR [ebp-0xe],0xffffffff
64020f55:	jne    0x64020f81
64020f57:	and    DWORD PTR [ebp-0xe],0x0
64020f5b:	cmp    DWORD PTR [ebp-0xa],0xffffffff
64020f5f:	jne    0x64020f7c
64020f61:	and    DWORD PTR [ebp-0xa],0x0
64020f65:	cmp    WORD PTR [ebp-0x6],0xffff
64020f6b:	jne    0x64020f76
64020f6d:	mov    WORD PTR [ebp-0x6],0x8000
64020f73:	inc    eax
64020f74:	jmp    0x64020f84
64020f76:	inc    WORD PTR [ebp-0x6]
64020f7a:	jmp    0x64020f84
64020f7c:	inc    DWORD PTR [ebp-0xa]
64020f7f:	jmp    0x64020f84
64020f81:	inc    DWORD PTR [ebp-0xe]
64020f84:	cmp    ax,0x7fff
64020f88:	jae    0x64020fa6
64020f8a:	mov    dx,WORD PTR [ebp-0xe]
64020f8e:	mov    WORD PTR [ebp-0x20],dx
64020f92:	mov    edx,DWORD PTR [ebp-0xc]
64020f95:	mov    DWORD PTR [ebp-0x1e],edx
64020f98:	mov    edx,DWORD PTR [ebp-0x8]
64020f9b:	or     eax,ecx
64020f9d:	mov    DWORD PTR [ebp-0x1a],edx
64020fa0:	mov    WORD PTR [ebp-0x16],ax
64020fa4:	jmp    0x64020fc2
64020fa6:	neg    cx
64020fa9:	sbb    ecx,ecx
64020fab:	and    DWORD PTR [ebp-0x1c],0x0
64020faf:	and    ecx,0x80000000
64020fb5:	add    ecx,0x7fff8000
64020fbb:	and    DWORD PTR [ebp-0x20],0x0
64020fbf:	mov    DWORD PTR [ebp-0x18],ecx
64020fc2:	test   ebx,ebx
64020fc4:	jne    0x64020d35
64020fca:	xor    eax,eax
64020fcc:	mov    ecx,DWORD PTR [ebp-0x18]
64020fcf:	shr    ecx,0x10
64020fd2:	cmp    cx,0x3fff
64020fd7:	mov    ebx,0x7fff
64020fdc:	jb     0x6402122a
64020fe2:	mov    esi,DWORD PTR [ebp-0x26]
64020fe5:	inc    DWORD PTR [ebp-0x4c]
64020fe8:	movzx  edx,cx
64020feb:	mov    ecx,esi
64020fed:	xor    ecx,edx
64020fef:	and    edx,ebx
64020ff1:	and    esi,ebx
64020ff3:	and    ecx,0x8000
64020ff9:	cmp    dx,bx
64020ffc:	lea    edi,[esi+edx*1]
64020fff:	mov    DWORD PTR [ebp-0x58],eax
64021002:	mov    DWORD PTR [ebp-0x10],eax
64021005:	mov    DWORD PTR [ebp-0xc],eax
64021008:	mov    DWORD PTR [ebp-0x8],eax
6402100b:	movzx  edi,di
6402100e:	jae    0x64021210
64021014:	cmp    si,bx
64021017:	jae    0x64021210
6402101d:	cmp    di,0xbffd
64021022:	ja     0x64021210
64021028:	cmp    di,0x3fbf
6402102d:	ja     0x64021037
6402102f:	mov    DWORD PTR [ebp-0x18],eax
64021032:	jmp    0x64021224
64021037:	cmp    dx,ax
6402103a:	jne    0x64021059
6402103c:	inc    edi
6402103d:	test   DWORD PTR [ebp-0x18],0x7fffffff
64021044:	jne    0x64021059
64021046:	cmp    DWORD PTR [ebp-0x1c],eax
64021049:	jne    0x64021059
6402104b:	cmp    DWORD PTR [ebp-0x20],eax
6402104e:	jne    0x64021059
64021050:	mov    WORD PTR [ebp-0x16],ax
64021054:	jmp    0x6402122a
64021059:	cmp    si,ax
6402105c:	jne    0x64021072
6402105e:	inc    edi
6402105f:	test   DWORD PTR [ebp-0x28],0x7fffffff
64021066:	jne    0x64021072
64021068:	cmp    DWORD PTR [ebp-0x2c],eax
6402106b:	jne    0x64021072
6402106d:	cmp    DWORD PTR [ebp-0x30],eax
64021070:	je     0x6402102f
64021072:	and    DWORD PTR [ebp-0x54],0x0
64021076:	lea    eax,[ebp-0xc]
64021079:	mov    DWORD PTR [ebp-0x40],0x5
64021080:	mov    edx,DWORD PTR [ebp-0x54]
64021083:	mov    esi,DWORD PTR [ebp-0x40]
64021086:	add    edx,edx
64021088:	test   esi,esi
6402108a:	mov    DWORD PTR [ebp-0x50],esi
6402108d:	jle    0x640210e1
6402108f:	lea    esi,[ebp-0x28]
64021092:	lea    edx,[ebp+edx*1-0x20]
64021096:	mov    DWORD PTR [ebp-0x5c],esi
64021099:	mov    DWORD PTR [ebp-0x48],edx
6402109c:	mov    edx,DWORD PTR [ebp-0x5c]
6402109f:	mov    esi,DWORD PTR [ebp-0x48]
640210a2:	movzx  esi,WORD PTR [esi]
640210a5:	movzx  edx,WORD PTR [edx]
640210a8:	and    DWORD PTR [ebp-0x44],0x0
640210ac:	imul   edx,esi
640210af:	mov    esi,DWORD PTR [eax-0x4]
640210b2:	lea    ebx,[esi+edx*1]
640210b5:	cmp    ebx,esi
640210b7:	jb     0x640210bd
640210b9:	cmp    ebx,edx
640210bb:	jae    0x640210c4
640210bd:	mov    DWORD PTR [ebp-0x44],0x1
640210c4:	cmp    DWORD PTR [ebp-0x44],0x0
640210c8:	mov    DWORD PTR [eax-0x4],ebx
640210cb:	je     0x640210d0
640210cd:	inc    WORD PTR [eax]
640210d0:	add    DWORD PTR [ebp-0x48],0x2
640210d4:	sub    DWORD PTR [ebp-0x5c],0x2
640210d8:	dec    DWORD PTR [ebp-0x50]
640210db:	cmp    DWORD PTR [ebp-0x50],0x0
640210df:	jg     0x6402109c
640210e1:	inc    eax
640210e2:	inc    eax
640210e3:	inc    DWORD PTR [ebp-0x54]
640210e6:	dec    DWORD PTR [ebp-0x40]
640210e9:	cmp    DWORD PTR [ebp-0x40],0x0
640210ed:	jg     0x64021080
640210ef:	add    edi,0xc002
640210f5:	xor    eax,eax
640210f7:	cmp    di,ax
640210fa:	jle    0x64021138
640210fc:	test   DWORD PTR [ebp-0x8],0x80000000
64021103:	jne    0x64021133
64021105:	mov    edx,DWORD PTR [ebp-0x10]
64021108:	mov    ebx,DWORD PTR [ebp-0xc]
6402110b:	mov    esi,DWORD PTR [ebp-0xc]
6402110e:	shl    DWORD PTR [ebp-0x10],1
64021111:	shr    edx,0x1f
64021114:	add    ebx,ebx
64021116:	or     ebx,edx
64021118:	mov    edx,DWORD PTR [ebp-0x8]
6402111b:	shr    esi,0x1f
6402111e:	add    edx,edx
64021120:	or     edx,esi
64021122:	add    edi,0xffff
64021128:	cmp    di,ax
6402112b:	mov    DWORD PTR [ebp-0xc],ebx
6402112e:	mov    DWORD PTR [ebp-0x8],edx
64021131:	jg     0x640210fc
64021133:	cmp    di,ax
64021136:	jg     0x64021185
64021138:	add    edi,0xffff
6402113e:	cmp    di,ax
64021141:	jge    0x64021185
64021143:	mov    eax,edi
64021145:	neg    eax
64021147:	movzx  eax,ax
6402114a:	add    edi,eax
6402114c:	test   BYTE PTR [ebp-0x10],0x1
64021150:	je     0x64021155
64021152:	inc    DWORD PTR [ebp-0x58]
64021155:	mov    edx,DWORD PTR [ebp-0x8]
64021158:	mov    ebx,DWORD PTR [ebp-0xc]
6402115b:	mov    esi,DWORD PTR [ebp-0xc]
6402115e:	shr    DWORD PTR [ebp-0x8],1
64021161:	shl    edx,0x1f
64021164:	shr    ebx,1
64021166:	or     ebx,edx
64021168:	mov    edx,DWORD PTR [ebp-0x10]
6402116b:	shl    esi,0x1f
6402116e:	shr    edx,1
64021170:	or     edx,esi
64021172:	dec    eax
64021173:	mov    DWORD PTR [ebp-0xc],ebx
64021176:	mov    DWORD PTR [ebp-0x10],edx
64021179:	jne    0x6402114c
6402117b:	cmp    DWORD PTR [ebp-0x58],eax
6402117e:	je     0x64021185
64021180:	or     WORD PTR [ebp-0x10],0x1
64021185:	cmp    WORD PTR [ebp-0x10],0x8000
6402118b:	ja     0x6402119e
6402118d:	mov    edx,DWORD PTR [ebp-0x10]
64021190:	and    edx,0x1ffff
64021196:	cmp    edx,0x18000
6402119c:	jne    0x640211cf
6402119e:	cmp    DWORD PTR [ebp-0xe],0xffffffff
640211a2:	jne    0x640211cc
640211a4:	cmp    DWORD PTR [ebp-0xa],0xffffffff
640211a8:	mov    DWORD PTR [ebp-0xe],eax
640211ab:	jne    0x640211c7
640211ad:	cmp    WORD PTR [ebp-0x6],0xffff
640211b3:	mov    DWORD PTR [ebp-0xa],eax
640211b6:	jne    0x640211c1
640211b8:	mov    WORD PTR [ebp-0x6],0x8000
640211be:	inc    edi
640211bf:	jmp    0x640211cf
640211c1:	inc    WORD PTR [ebp-0x6]
640211c5:	jmp    0x640211cf
640211c7:	inc    DWORD PTR [ebp-0xa]
640211ca:	jmp    0x640211cf
640211cc:	inc    DWORD PTR [ebp-0xe]
640211cf:	cmp    di,0x7fff
640211d4:	jb     0x640211f4
640211d6:	neg    cx
640211d9:	mov    DWORD PTR [ebp-0x1c],eax
640211dc:	mov    DWORD PTR [ebp-0x20],eax
640211df:	sbb    ecx,ecx
640211e1:	and    ecx,0x80000000
640211e7:	add    ecx,0x7fff8000
640211ed:	mov    DWORD PTR [ebp-0x18],ecx
640211f0:	xor    eax,eax
640211f2:	jmp    0x6402122a
640211f4:	mov    ax,WORD PTR [ebp-0xe]
640211f8:	mov    WORD PTR [ebp-0x20],ax
640211fc:	mov    eax,DWORD PTR [ebp-0xc]
640211ff:	mov    DWORD PTR [ebp-0x1e],eax
64021202:	mov    eax,DWORD PTR [ebp-0x8]
64021205:	or     edi,ecx
64021207:	mov    DWORD PTR [ebp-0x1a],eax
6402120a:	mov    WORD PTR [ebp-0x16],di
6402120e:	jmp    0x640211f0
64021210:	neg    cx
64021213:	sbb    ecx,ecx
64021215:	and    ecx,0x80000000
6402121b:	add    ecx,0x7fff8000
64021221:	mov    DWORD PTR [ebp-0x18],ecx
64021224:	mov    DWORD PTR [ebp-0x1c],eax
64021227:	mov    DWORD PTR [ebp-0x20],eax
6402122a:	test   BYTE PTR [ebp+0x18],0x1
6402122e:	mov    edx,DWORD PTR [ebp-0x60]
64021231:	mov    ecx,DWORD PTR [ebp-0x4c]
64021234:	mov    WORD PTR [edx],cx
64021237:	je     0x6402126b
64021239:	movsx  ecx,cx
6402123c:	add    DWORD PTR [ebp+0x14],ecx
6402123f:	cmp    DWORD PTR [ebp+0x14],eax
64021242:	jg     0x6402126b
64021244:	and    WORD PTR [edx],0x0
64021248:	cmp    WORD PTR [ebp-0x6c],0x8000
6402124e:	mov    BYTE PTR [edx+0x3],0x1
64021252:	setne  al
64021255:	dec    al
64021257:	and    al,0xd
64021259:	add    al,0x20
6402125b:	mov    BYTE PTR [edx+0x2],al
6402125e:	mov    BYTE PTR [edx+0x4],0x30
64021262:	mov    BYTE PTR [edx+0x5],0x0
64021266:	jmp    0x64020c1c
6402126b:	push   0x15
6402126d:	pop    ecx
6402126e:	cmp    DWORD PTR [ebp+0x14],ecx
64021271:	jle    0x64021276
64021273:	mov    DWORD PTR [ebp+0x14],ecx
64021276:	mov    esi,DWORD PTR [ebp-0x18]
64021279:	shr    esi,0x10
6402127c:	push   0x8
6402127e:	sub    esi,0x3ffe
64021284:	mov    WORD PTR [ebp-0x16],ax
64021288:	pop    ebx
64021289:	mov    eax,DWORD PTR [ebp-0x20]
6402128c:	mov    edi,DWORD PTR [ebp-0x1c]
6402128f:	mov    ecx,DWORD PTR [ebp-0x1c]
64021292:	shl    DWORD PTR [ebp-0x20],1
64021295:	shr    eax,0x1f
64021298:	add    edi,edi
6402129a:	or     edi,eax
6402129c:	mov    eax,DWORD PTR [ebp-0x18]
6402129f:	shr    ecx,0x1f
640212a2:	add    eax,eax
640212a4:	or     eax,ecx
640212a6:	dec    ebx
640212a7:	mov    DWORD PTR [ebp-0x1c],edi
640212aa:	mov    DWORD PTR [ebp-0x18],eax
640212ad:	jne    0x64021289
640212af:	test   esi,esi
640212b1:	jge    0x640212e5
640212b3:	neg    esi
640212b5:	and    esi,0xff
640212bb:	jle    0x640212e5
640212bd:	mov    eax,DWORD PTR [ebp-0x18]
640212c0:	mov    edi,DWORD PTR [ebp-0x1c]
640212c3:	mov    ecx,DWORD PTR [ebp-0x1c]
640212c6:	shr    DWORD PTR [ebp-0x18],1
640212c9:	shl    eax,0x1f
640212cc:	shr    edi,1
640212ce:	or     edi,eax
640212d0:	mov    eax,DWORD PTR [ebp-0x20]
640212d3:	shl    ecx,0x1f
640212d6:	shr    eax,1
640212d8:	or     eax,ecx
640212da:	dec    esi
640212db:	test   esi,esi
640212dd:	mov    DWORD PTR [ebp-0x1c],edi
640212e0:	mov    DWORD PTR [ebp-0x20],eax
640212e3:	jg     0x640212bd
640212e5:	mov    eax,DWORD PTR [ebp+0x14]
640212e8:	inc    eax
640212e9:	test   eax,eax
640212eb:	lea    ebx,[edx+0x4]
640212ee:	mov    DWORD PTR [ebp-0x40],ebx
640212f1:	mov    DWORD PTR [ebp-0x4c],eax
640212f4:	jle    0x640213af
640212fa:	mov    edx,DWORD PTR [ebp-0x20]
640212fd:	mov    eax,DWORD PTR [ebp-0x1c]
64021300:	lea    esi,[ebp-0x20]
64021303:	lea    edi,[ebp-0x3c]
64021306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021309:	shl    DWORD PTR [ebp-0x20],1
6402130c:	mov    edi,DWORD PTR [ebp-0x20]
6402130f:	shl    DWORD PTR [ebp-0x20],1
64021312:	shr    edx,0x1f
64021315:	lea    ecx,[eax+eax*1]
64021318:	or     ecx,edx
6402131a:	mov    edx,DWORD PTR [ebp-0x18]
6402131d:	mov    esi,eax
6402131f:	shr    esi,0x1f
64021322:	add    edx,edx
64021324:	or     edx,esi
64021326:	mov    eax,ecx
64021328:	lea    esi,[ecx+ecx*1]
6402132b:	shr    eax,0x1f
6402132e:	lea    ecx,[edx+edx*1]
64021331:	mov    edx,DWORD PTR [ebp-0x3c]
64021334:	shr    edi,0x1f
64021337:	or     ecx,eax
64021339:	mov    eax,DWORD PTR [ebp-0x20]
6402133c:	or     esi,edi
6402133e:	lea    edi,[edx+eax*1]
64021341:	cmp    edi,eax
64021343:	jb     0x64021349
64021345:	cmp    edi,edx
64021347:	jae    0x64021361
64021349:	lea    eax,[esi+0x1]
6402134c:	xor    edx,edx
6402134e:	cmp    eax,esi
64021350:	jb     0x64021357
64021352:	cmp    eax,0x1
64021355:	jae    0x6402135a
64021357:	xor    edx,edx
64021359:	inc    edx
6402135a:	test   edx,edx
6402135c:	mov    esi,eax
6402135e:	je     0x64021361
64021360:	inc    ecx
64021361:	mov    eax,DWORD PTR [ebp-0x38]
64021364:	lea    edx,[eax+esi*1]
64021367:	cmp    edx,esi
64021369:	mov    DWORD PTR [ebp-0x44],edx
6402136c:	jb     0x64021372
6402136e:	cmp    edx,eax
64021370:	jae    0x64021373
64021372:	inc    ecx
64021373:	add    ecx,DWORD PTR [ebp-0x34]
64021376:	shr    edx,0x1f
64021379:	add    ecx,ecx
6402137b:	or     ecx,edx
6402137d:	lea    esi,[edi+edi*1]
64021380:	mov    DWORD PTR [ebp-0x20],esi
64021383:	mov    esi,DWORD PTR [ebp-0x44]
64021386:	mov    DWORD PTR [ebp-0x18],ecx
64021389:	shr    ecx,0x18
6402138c:	add    esi,esi
6402138e:	add    cl,0x30
64021391:	mov    eax,edi
64021393:	shr    eax,0x1f
64021396:	or     esi,eax
64021398:	mov    BYTE PTR [ebx],cl
6402139a:	inc    ebx
6402139b:	dec    DWORD PTR [ebp-0x4c]
6402139e:	cmp    DWORD PTR [ebp-0x4c],0x0
640213a2:	mov    DWORD PTR [ebp-0x1c],esi
640213a5:	mov    BYTE PTR [ebp-0x15],0x0
640213a9:	jg     0x640212fa
640213af:	dec    ebx
640213b0:	mov    al,BYTE PTR [ebx]
640213b2:	dec    ebx
640213b3:	cmp    al,0x35
640213b5:	jge    0x640213c5
640213b7:	mov    ecx,DWORD PTR [ebp-0x40]
640213ba:	jmp    0x64021400
640213bc:	cmp    BYTE PTR [ebx],0x39
640213bf:	jne    0x640213ca
640213c1:	mov    BYTE PTR [ebx],0x30
640213c4:	dec    ebx
640213c5:	cmp    ebx,DWORD PTR [ebp-0x40]
640213c8:	jae    0x640213bc
640213ca:	cmp    ebx,DWORD PTR [ebp-0x40]
640213cd:	mov    eax,DWORD PTR [ebp-0x60]
640213d0:	jae    0x640213d6
640213d2:	inc    ebx
640213d3:	inc    WORD PTR [eax]
640213d6:	inc    BYTE PTR [ebx]
640213d8:	sub    bl,al
640213da:	sub    bl,0x3
640213dd:	movsx  ecx,bl
640213e0:	mov    BYTE PTR [eax+0x3],bl
640213e3:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
640213e8:	mov    eax,DWORD PTR [ebp-0x74]
640213eb:	mov    ecx,DWORD PTR [ebp-0x4]
640213ee:	pop    edi
640213ef:	pop    esi
640213f0:	xor    ecx,ebp
640213f2:	pop    ebx
640213f3:	call   0x6401257c
640213f8:	leave  
640213f9:	ret    
640213fa:	cmp    BYTE PTR [ebx],0x30
640213fd:	jne    0x64021404
640213ff:	dec    ebx
64021400:	cmp    ebx,ecx
64021402:	jae    0x640213fa
64021404:	cmp    ebx,ecx
64021406:	mov    eax,DWORD PTR [ebp-0x60]
64021409:	jae    0x640213d8
6402140b:	and    WORD PTR [eax],0x0
6402140f:	cmp    WORD PTR [ebp-0x6c],0x8000
64021415:	mov    BYTE PTR [eax+0x3],0x1
64021419:	setne  dl
6402141c:	dec    dl
6402141e:	and    dl,0xd
64021421:	add    dl,0x20
64021424:	mov    BYTE PTR [eax+0x2],dl
64021427:	mov    BYTE PTR [ecx],0x30
6402142a:	mov    BYTE PTR [eax+0x5],0x0
6402142e:	jmp    0x64020c1c
64021433:	xor    eax,eax
64021435:	test   bl,0x10
64021438:	je     0x6402143b
6402143a:	inc    eax
6402143b:	test   bl,0x8
6402143e:	je     0x64021443
64021440:	or     eax,0x4
64021443:	test   bl,0x4
64021446:	je     0x6402144b
64021448:	or     eax,0x8
6402144b:	test   bl,0x2
6402144e:	je     0x64021453
64021450:	or     eax,0x10
64021453:	test   bl,0x1
64021456:	je     0x6402145b
64021458:	or     eax,0x20
6402145b:	test   ebx,0x80000
64021461:	je     0x64021466
64021463:	or     eax,0x2
64021466:	mov    ecx,ebx
64021468:	mov    edx,0x300
6402146d:	and    ecx,edx
6402146f:	push   esi
64021470:	mov    esi,0x200
64021475:	je     0x6402149a
64021477:	cmp    ecx,0x100
6402147d:	je     0x64021495
6402147f:	cmp    ecx,esi
64021481:	je     0x6402148e
64021483:	cmp    ecx,edx
64021485:	jne    0x6402149a
64021487:	or     eax,0xc00
6402148c:	jmp    0x6402149a
6402148e:	or     eax,0x800
64021493:	jmp    0x6402149a
64021495:	or     eax,0x400
6402149a:	mov    ecx,ebx
6402149c:	and    ecx,0x30000
640214a2:	je     0x640214b0
640214a4:	cmp    ecx,0x10000
640214aa:	jne    0x640214b2
640214ac:	or     eax,esi
640214ae:	jmp    0x640214b2
640214b0:	or     eax,edx
640214b2:	test   ebx,0x40000
640214b8:	pop    esi
640214b9:	je     0x640214c0
640214bb:	or     eax,0x1000
640214c0:	ret    
640214c1:	xor    eax,eax
640214c3:	test   dl,0x10
640214c6:	je     0x640214cd
640214c8:	mov    eax,0x80
640214cd:	test   dl,0x8
640214d0:	push   ebx
640214d1:	push   esi
640214d2:	push   edi
640214d3:	mov    ebx,0x200
640214d8:	je     0x640214dc
640214da:	or     eax,ebx
640214dc:	test   dl,0x4
640214df:	je     0x640214e6
640214e1:	or     eax,0x400
640214e6:	test   dl,0x2
640214e9:	je     0x640214f0
640214eb:	or     eax,0x800
640214f0:	test   dl,0x1
640214f3:	je     0x640214fa
640214f5:	or     eax,0x1000
640214fa:	test   edx,0x80000
64021500:	mov    edi,0x100
64021505:	je     0x64021509
64021507:	or     eax,edi
64021509:	mov    ecx,edx
6402150b:	mov    esi,0x300
64021510:	and    ecx,esi
64021512:	je     0x64021533
64021514:	cmp    ecx,edi
64021516:	je     0x6402152e
64021518:	cmp    ecx,ebx
6402151a:	je     0x64021527
6402151c:	cmp    ecx,esi
6402151e:	jne    0x64021533
64021520:	or     eax,0x6000
64021525:	jmp    0x64021533
64021527:	or     eax,0x4000
6402152c:	jmp    0x64021533
6402152e:	or     eax,0x2000
64021533:	mov    ecx,0x3000000
64021538:	pop    edi
64021539:	and    edx,ecx
6402153b:	cmp    edx,0x1000000
64021541:	pop    esi
64021542:	pop    ebx
64021543:	je     0x6402155b
64021545:	cmp    edx,0x2000000
6402154b:	je     0x64021557
6402154d:	cmp    edx,ecx
6402154f:	jne    0x64021560
64021551:	or     eax,0x8000
64021556:	ret    
64021557:	or     eax,0x40
6402155a:	ret    
6402155b:	or     eax,0x8040
64021560:	ret    
64021561:	sub    esp,0x10
64021564:	push   ebx
64021565:	push   ebp
64021566:	push   esi
64021567:	push   edi
64021568:	fstcw  WORD PTR [esp+0x14]
6402156d:	mov    ebx,DWORD PTR [esp+0x14]
64021571:	xor    edx,edx
64021573:	test   bl,0x1
64021576:	je     0x6402157b
64021578:	push   0x10
6402157a:	pop    edx
6402157b:	test   bl,0x4
6402157e:	je     0x64021583
64021580:	or     edx,0x8
64021583:	test   bl,0x8
64021586:	je     0x6402158b
64021588:	or     edx,0x4
6402158b:	test   bl,0x10
6402158e:	je     0x64021593
64021590:	or     edx,0x2
64021593:	test   bl,0x20
64021596:	je     0x6402159b
64021598:	or     edx,0x1
6402159b:	test   bl,0x2
6402159e:	je     0x640215a6
640215a0:	or     edx,0x80000
640215a6:	movzx  ecx,bx
640215a9:	mov    eax,ecx
640215ab:	mov    edi,0xc00
640215b0:	and    eax,edi
640215b2:	mov    ebp,0x300
640215b7:	mov    esi,0x200
640215bc:	je     0x640215de
640215be:	cmp    eax,0x400
640215c3:	je     0x640215d8
640215c5:	cmp    eax,0x800
640215ca:	je     0x640215d4
640215cc:	cmp    eax,edi
640215ce:	jne    0x640215de
640215d0:	or     edx,ebp
640215d2:	jmp    0x640215de
640215d4:	or     edx,esi
640215d6:	jmp    0x640215de
640215d8:	or     edx,0x100
640215de:	and    ecx,ebp
640215e0:	je     0x640215ee
640215e2:	cmp    ecx,esi
640215e4:	jne    0x640215f4
640215e6:	or     edx,0x10000
640215ec:	jmp    0x640215f4
640215ee:	or     edx,0x20000
640215f4:	test   bx,0x1000
640215f9:	je     0x64021601
640215fb:	or     edx,0x40000
64021601:	mov    esi,DWORD PTR [esp+0x28]
64021605:	mov    ecx,DWORD PTR [esp+0x24]
64021609:	mov    eax,esi
6402160b:	not    eax
6402160d:	and    eax,edx
6402160f:	and    ecx,esi
64021611:	or     eax,ecx
64021613:	cmp    eax,edx
64021615:	mov    DWORD PTR [esp+0x1c],eax
64021619:	je     0x640216c9
6402161f:	mov    ebx,eax
64021621:	call   0x64021433
64021626:	movzx  eax,ax
64021629:	mov    DWORD PTR [esp+0x10],eax
6402162d:	fldcw  WORD PTR [esp+0x10]
64021631:	fstcw  WORD PTR [esp+0x10]
64021636:	mov    ebx,DWORD PTR [esp+0x10]
6402163a:	xor    edx,edx
6402163c:	test   bl,0x1
6402163f:	je     0x64021644
64021641:	push   0x10
64021643:	pop    edx
64021644:	test   bl,0x4
64021647:	je     0x6402164c
64021649:	or     edx,0x8
6402164c:	test   bl,0x8
6402164f:	je     0x64021654
64021651:	or     edx,0x4
64021654:	test   bl,0x10
64021657:	je     0x6402165c
64021659:	or     edx,0x2
6402165c:	test   bl,0x20
6402165f:	je     0x64021664
64021661:	or     edx,0x1
64021664:	test   bl,0x2
64021667:	je     0x6402166f
64021669:	or     edx,0x80000
6402166f:	movzx  ecx,bx
64021672:	mov    eax,ecx
64021674:	and    eax,edi
64021676:	je     0x6402169c
64021678:	cmp    eax,0x400
6402167d:	je     0x64021696
6402167f:	cmp    eax,0x800
64021684:	je     0x6402168e
64021686:	cmp    eax,edi
64021688:	jne    0x6402169c
6402168a:	or     edx,ebp
6402168c:	jmp    0x6402169c
6402168e:	or     edx,0x200
64021694:	jmp    0x6402169c
64021696:	or     edx,0x100
6402169c:	and    ecx,ebp
6402169e:	je     0x640216b0
640216a0:	cmp    ecx,0x200
640216a6:	jne    0x640216b6
640216a8:	or     edx,0x10000
640216ae:	jmp    0x640216b6
640216b0:	or     edx,0x20000
640216b6:	test   bx,0x1000
640216bb:	je     0x640216c3
640216bd:	or     edx,0x40000
640216c3:	mov    eax,edx
640216c5:	mov    DWORD PTR [esp+0x1c],edx
640216c9:	cmp    DWORD PTR ds:0x64031564,0x0
640216d0:	je     0x6402185c
640216d6:	and    esi,0x308031f
640216dc:	mov    edi,esi
640216de:	stmxcsr DWORD PTR [esp+0x18]
640216e3:	mov    eax,DWORD PTR [esp+0x18]
640216e7:	xor    esi,esi
640216e9:	test   al,al
640216eb:	jns    0x640216f0
640216ed:	push   0x10
640216ef:	pop    esi
640216f0:	test   ax,0x200
640216f4:	je     0x640216f9
640216f6:	or     esi,0x8
640216f9:	test   ax,0x400
640216fd:	je     0x64021702
640216ff:	or     esi,0x4
64021702:	test   ax,0x800
64021706:	je     0x6402170b
64021708:	or     esi,0x2
6402170b:	test   ax,0x1000
6402170f:	je     0x64021714
64021711:	or     esi,0x1
64021714:	test   ax,0x100
64021718:	je     0x64021720
6402171a:	or     esi,0x80000
64021720:	mov    ecx,eax
64021722:	mov    ebp,0x6000
64021727:	and    ecx,ebp
64021729:	je     0x64021755
6402172b:	cmp    ecx,0x2000
64021731:	je     0x6402174f
64021733:	cmp    ecx,0x4000
64021739:	je     0x64021747
6402173b:	cmp    ecx,ebp
6402173d:	jne    0x64021755
6402173f:	or     esi,0x300
64021745:	jmp    0x64021755
64021747:	or     esi,0x200
6402174d:	jmp    0x64021755
6402174f:	or     esi,0x100
64021755:	mov    ebx,0x8040
6402175a:	and    eax,ebx
6402175c:	sub    eax,0x40
6402175f:	je     0x6402177d
64021761:	sub    eax,0x7fc0
64021766:	je     0x64021775
64021768:	sub    eax,0x40
6402176b:	jne    0x64021783
6402176d:	or     esi,0x1000000
64021773:	jmp    0x64021783
64021775:	or     esi,0x3000000
6402177b:	jmp    0x64021783
6402177d:	or     esi,0x2000000
64021783:	mov    edx,edi
64021785:	and    edi,DWORD PTR [esp+0x24]
64021789:	not    edx
6402178b:	and    edx,esi
6402178d:	or     edx,edi
6402178f:	cmp    edx,esi
64021791:	jne    0x6402179a
64021793:	mov    eax,esi
64021795:	jmp    0x64021845
6402179a:	call   0x640214c1
6402179f:	push   eax
640217a0:	mov    DWORD PTR [esp+0x2c],eax
640217a4:	call   0x64021a30
640217a9:	pop    ecx
640217aa:	stmxcsr DWORD PTR [esp+0x28]
640217af:	mov    eax,DWORD PTR [esp+0x28]
640217b3:	xor    edx,edx
640217b5:	test   al,al
640217b7:	jns    0x640217bc
640217b9:	push   0x10
640217bb:	pop    edx
640217bc:	mov    edi,0x200
640217c1:	test   edi,eax
640217c3:	je     0x640217c8
640217c5:	or     edx,0x8
640217c8:	test   ax,0x400
640217cc:	je     0x640217d1
640217ce:	or     edx,0x4
640217d1:	test   ax,0x800
640217d5:	je     0x640217da
640217d7:	or     edx,0x2
640217da:	test   ax,0x1000
640217de:	je     0x640217e3
640217e0:	or     edx,0x1
640217e3:	mov    esi,0x100
640217e8:	test   esi,eax
640217ea:	je     0x640217f2
640217ec:	or     edx,0x80000
640217f2:	mov    ecx,eax
640217f4:	and    ecx,ebp
640217f6:	je     0x6402181a
640217f8:	cmp    ecx,0x2000
640217fe:	je     0x64021818
64021800:	cmp    ecx,0x4000
64021806:	je     0x64021814
64021808:	cmp    ecx,ebp
6402180a:	jne    0x6402181a
6402180c:	or     edx,0x300
64021812:	jmp    0x6402181a
64021814:	or     edx,edi
64021816:	jmp    0x6402181a
64021818:	or     edx,esi
6402181a:	and    eax,ebx
6402181c:	sub    eax,0x40
6402181f:	je     0x6402183d
64021821:	sub    eax,0x7fc0
64021826:	je     0x64021835
64021828:	sub    eax,0x40
6402182b:	jne    0x64021843
6402182d:	or     edx,0x1000000
64021833:	jmp    0x64021843
64021835:	or     edx,0x3000000
6402183b:	jmp    0x64021843
6402183d:	or     edx,0x2000000
64021843:	mov    eax,edx
64021845:	mov    ecx,DWORD PTR [esp+0x1c]
64021849:	mov    edx,eax
6402184b:	xor    edx,ecx
6402184d:	or     eax,ecx
6402184f:	test   edx,0x8031f
64021855:	je     0x6402185c
64021857:	or     eax,0x80000000
6402185c:	pop    edi
6402185d:	pop    esi
6402185e:	pop    ebp
6402185f:	pop    ebx
64021860:	add    esp,0x10
64021863:	ret    
64021864:	push   ebp
64021865:	mov    ebp,esp
64021867:	sub    esp,0x18
6402186a:	mov    eax,ds:0x6402c09c
6402186f:	xor    eax,ebp
64021871:	mov    DWORD PTR [ebp-0x4],eax
64021874:	mov    eax,DWORD PTR [ebp+0x10]
64021877:	push   ebx
64021878:	push   esi
64021879:	xor    esi,esi
6402187b:	cmp    DWORD PTR [ebp+0xc],esi
6402187e:	push   edi
6402187f:	mov    DWORD PTR [ebp-0x18],0x404e
64021886:	mov    DWORD PTR [eax],esi
64021888:	mov    DWORD PTR [eax+0x4],esi
6402188b:	mov    DWORD PTR [eax+0x8],esi
6402188e:	jbe    0x640219da
64021894:	mov    edx,DWORD PTR [eax]
64021896:	mov    ebx,DWORD PTR [eax+0x4]
64021899:	mov    esi,eax
6402189b:	lea    edi,[ebp-0x10]
6402189e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402189f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640218a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640218a1:	mov    ecx,edx
640218a3:	shr    ecx,0x1f
640218a6:	lea    edi,[edx+edx*1]
640218a9:	lea    edx,[ebx+ebx*1]
640218ac:	or     edx,ecx
640218ae:	mov    ecx,DWORD PTR [eax+0x8]
640218b1:	mov    esi,ebx
640218b3:	shr    esi,0x1f
640218b6:	add    ecx,ecx
640218b8:	or     ecx,esi
640218ba:	mov    DWORD PTR [ebp-0x14],edi
640218bd:	mov    esi,edi
640218bf:	and    DWORD PTR [ebp-0x14],0x0
640218c3:	mov    ebx,edx
640218c5:	shr    ebx,0x1f
640218c8:	add    ecx,ecx
640218ca:	shr    edi,0x1f
640218cd:	or     ecx,ebx
640218cf:	mov    ebx,DWORD PTR [ebp-0x10]
640218d2:	add    esi,esi
640218d4:	add    edx,edx
640218d6:	or     edx,edi
640218d8:	lea    edi,[esi+ebx*1]
640218db:	cmp    edi,esi
640218dd:	mov    DWORD PTR [eax],esi
640218df:	mov    DWORD PTR [eax+0x4],edx
640218e2:	mov    DWORD PTR [eax+0x8],ecx
640218e5:	jb     0x640218eb
640218e7:	cmp    edi,ebx
640218e9:	jae    0x640218f2
640218eb:	mov    DWORD PTR [ebp-0x14],0x1
640218f2:	xor    ebx,ebx
640218f4:	cmp    DWORD PTR [ebp-0x14],ebx
640218f7:	mov    DWORD PTR [eax],edi
640218f9:	je     0x64021915
640218fb:	lea    esi,[edx+0x1]
640218fe:	cmp    esi,edx
64021900:	jb     0x64021907
64021902:	cmp    esi,0x1
64021905:	jae    0x6402190a
64021907:	xor    ebx,ebx
64021909:	inc    ebx
6402190a:	test   ebx,ebx
6402190c:	mov    DWORD PTR [eax+0x4],esi
6402190f:	je     0x64021915
64021911:	inc    ecx
64021912:	mov    DWORD PTR [eax+0x8],ecx
64021915:	mov    ecx,DWORD PTR [eax+0x4]
64021918:	mov    edx,DWORD PTR [ebp-0xc]
6402191b:	lea    ebx,[ecx+edx*1]
6402191e:	xor    esi,esi
64021920:	cmp    ebx,ecx
64021922:	jb     0x64021928
64021924:	cmp    ebx,edx
64021926:	jae    0x6402192b
64021928:	xor    esi,esi
6402192a:	inc    esi
6402192b:	test   esi,esi
6402192d:	mov    DWORD PTR [eax+0x4],ebx
64021930:	je     0x64021935
64021932:	inc    DWORD PTR [eax+0x8]
64021935:	mov    ecx,DWORD PTR [ebp-0x8]
64021938:	add    DWORD PTR [eax+0x8],ecx
6402193b:	and    DWORD PTR [ebp-0x14],0x0
6402193f:	lea    ecx,[edi+edi*1]
64021942:	mov    edx,edi
64021944:	shr    edx,0x1f
64021947:	lea    edi,[ebx+ebx*1]
6402194a:	or     edi,edx
6402194c:	mov    edx,DWORD PTR [eax+0x8]
6402194f:	mov    esi,ebx
64021951:	shr    esi,0x1f
64021954:	lea    ebx,[edx+edx*1]
64021957:	mov    edx,DWORD PTR [ebp+0x8]
6402195a:	or     ebx,esi
6402195c:	mov    DWORD PTR [eax],ecx
6402195e:	mov    DWORD PTR [eax+0x4],edi
64021961:	mov    DWORD PTR [eax+0x8],ebx
64021964:	movsx  edx,BYTE PTR [edx]
64021967:	lea    esi,[ecx+edx*1]
6402196a:	cmp    esi,ecx
6402196c:	mov    DWORD PTR [ebp-0x10],edx
6402196f:	jb     0x64021975
64021971:	cmp    esi,edx
64021973:	jae    0x6402197c
64021975:	mov    DWORD PTR [ebp-0x14],0x1
6402197c:	cmp    DWORD PTR [ebp-0x14],0x0
64021980:	mov    DWORD PTR [eax],esi
64021982:	je     0x640219a0
64021984:	lea    ecx,[edi+0x1]
64021987:	xor    edx,edx
64021989:	cmp    ecx,edi
6402198b:	jb     0x64021992
6402198d:	cmp    ecx,0x1
64021990:	jae    0x64021995
64021992:	xor    edx,edx
64021994:	inc    edx
64021995:	test   edx,edx
64021997:	mov    DWORD PTR [eax+0x4],ecx
6402199a:	je     0x640219a0
6402199c:	inc    ebx
6402199d:	mov    DWORD PTR [eax+0x8],ebx
640219a0:	dec    DWORD PTR [ebp+0xc]
640219a3:	inc    DWORD PTR [ebp+0x8]
640219a6:	cmp    DWORD PTR [ebp+0xc],0x0
640219aa:	ja     0x64021894
640219b0:	xor    esi,esi
640219b2:	jmp    0x640219da
640219b4:	mov    ecx,DWORD PTR [eax+0x4]
640219b7:	mov    edx,ecx
640219b9:	shr    edx,0x10
640219bc:	mov    DWORD PTR [eax+0x8],edx
640219bf:	mov    edx,DWORD PTR [eax]
640219c1:	mov    edi,edx
640219c3:	shl    ecx,0x10
640219c6:	shr    edi,0x10
640219c9:	or     ecx,edi
640219cb:	shl    edx,0x10
640219ce:	add    DWORD PTR [ebp-0x18],0xfff0
640219d5:	mov    DWORD PTR [eax+0x4],ecx
640219d8:	mov    DWORD PTR [eax],edx
640219da:	cmp    DWORD PTR [eax+0x8],esi
640219dd:	je     0x640219b4
640219df:	mov    ebx,0x8000
640219e4:	test   DWORD PTR [eax+0x8],ebx
640219e7:	jne    0x64021a19
640219e9:	mov    esi,DWORD PTR [eax]
640219eb:	mov    edi,DWORD PTR [eax+0x4]
640219ee:	add    DWORD PTR [ebp-0x18],0xffff
640219f5:	mov    ecx,esi
640219f7:	add    esi,esi
640219f9:	shr    ecx,0x1f
640219fc:	mov    DWORD PTR [eax],esi
640219fe:	lea    esi,[edi+edi*1]
64021a01:	or     esi,ecx
64021a03:	mov    ecx,DWORD PTR [eax+0x8]
64021a06:	mov    edx,edi
64021a08:	shr    edx,0x1f
64021a0b:	add    ecx,ecx
64021a0d:	or     ecx,edx
64021a0f:	test   ebx,ecx
64021a11:	mov    DWORD PTR [eax+0x4],esi
64021a14:	mov    DWORD PTR [eax+0x8],ecx
64021a17:	je     0x640219e9
64021a19:	mov    cx,WORD PTR [ebp-0x18]
64021a1d:	mov    WORD PTR [eax+0xa],cx
64021a21:	mov    ecx,DWORD PTR [ebp-0x4]
64021a24:	pop    edi
64021a25:	pop    esi
64021a26:	xor    ecx,ebp
64021a28:	pop    ebx
64021a29:	call   0x6401257c
64021a2e:	leave  
64021a2f:	ret    
64021a30:	push   0x8
64021a32:	push   0x64029c08
64021a37:	call   0x64013ac0
64021a3c:	xor    eax,eax
64021a3e:	cmp    DWORD PTR ds:0x64031564,eax
64021a44:	je     0x64021a9c
64021a46:	test   BYTE PTR [ebp+0x8],0x40
64021a4a:	je     0x64021a94
64021a4c:	cmp    DWORD PTR ds:0x6402d374,eax
64021a52:	je     0x64021a94
64021a54:	mov    DWORD PTR [ebp-0x4],eax
64021a57:	ldmxcsr DWORD PTR [ebp+0x8]
64021a5b:	jmp    0x64021a8b
64021a5d:	mov    eax,DWORD PTR [ebp-0x14]
64021a60:	mov    eax,DWORD PTR [eax]
64021a62:	mov    eax,DWORD PTR [eax]
64021a64:	cmp    eax,0xc0000005
64021a69:	je     0x64021a75
64021a6b:	cmp    eax,0xc000001d
64021a70:	je     0x64021a75
64021a72:	xor    eax,eax
64021a74:	ret    
64021a75:	xor    eax,eax
64021a77:	inc    eax
64021a78:	ret    
64021a79:	mov    esp,DWORD PTR [ebp-0x18]
64021a7c:	and    DWORD PTR ds:0x6402d374,0x0
64021a83:	and    DWORD PTR [ebp+0x8],0xffffffbf
64021a87:	ldmxcsr DWORD PTR [ebp+0x8]
64021a8b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64021a92:	jmp    0x64021a9c
64021a94:	and    DWORD PTR [ebp+0x8],0xffffffbf
64021a98:	ldmxcsr DWORD PTR [ebp+0x8]
64021a9c:	call   0x64013b05
64021aa1:	ret    
64021aa2:	int3   
64021aa3:	int3   
64021aa4:	int3   
64021aa5:	int3   
64021aa6:	int3   
64021aa7:	int3   
64021aa8:	int3   
64021aa9:	int3   
64021aaa:	int3   
64021aab:	int3   
64021aac:	int3   
64021aad:	int3   
64021aae:	int3   
64021aaf:	int3   
64021ab0:	mov    eax,DWORD PTR [ebp-0x10]
64021ab3:	and    eax,0x1
64021ab6:	je     0x64021ac8
64021abc:	and    DWORD PTR [ebp-0x10],0xfffffffe
64021ac0:	mov    ecx,DWORD PTR [ebp+0x4]
64021ac3:	jmp    0x64001930
64021ac8:	ret    
64021ac9:	mov    edx,DWORD PTR [esp+0x8]
64021acd:	lea    eax,[edx-0xc]
64021ad0:	mov    ecx,DWORD PTR [edx-0x10]
64021ad3:	xor    ecx,eax
64021ad5:	call   0x6401257c
64021ada:	mov    eax,0x640291c8
64021adf:	jmp    0x6401223e
64021ae4:	int3   
64021ae5:	int3   
64021ae6:	int3   
64021ae7:	int3   
64021ae8:	int3   
64021ae9:	int3   
64021aea:	int3   
64021aeb:	int3   
64021aec:	int3   
64021aed:	int3   
64021aee:	int3   
64021aef:	int3   
64021af0:	mov    eax,DWORD PTR [ebp-0x10]
64021af3:	and    eax,0x1
64021af6:	je     0x64021b08
64021afc:	and    DWORD PTR [ebp-0x10],0xfffffffe
64021b00:	mov    ecx,DWORD PTR [ebp+0x4]
64021b03:	jmp    0x64001930
64021b08:	ret    
64021b09:	mov    edx,DWORD PTR [esp+0x8]
64021b0d:	lea    eax,[edx-0x10]
64021b10:	mov    ecx,DWORD PTR [edx-0x14]
64021b13:	xor    ecx,eax
64021b15:	call   0x6401257c
64021b1a:	mov    eax,0x640291f4
64021b1f:	jmp    0x6401223e
64021b24:	int3   
64021b25:	int3   
64021b26:	int3   
64021b27:	int3   
64021b28:	int3   
64021b29:	int3   
64021b2a:	int3   
64021b2b:	int3   
64021b2c:	int3   
64021b2d:	int3   
64021b2e:	int3   
64021b2f:	int3   
64021b30:	lea    ecx,[ebp-0x50]
64021b33:	jmp    0x64001650
64021b38:	mov    edx,DWORD PTR [esp+0x8]
64021b3c:	lea    eax,[edx-0x44]
64021b3f:	mov    ecx,DWORD PTR [edx-0x48]
64021b42:	xor    ecx,eax
64021b44:	call   0x6401257c
64021b49:	mov    eax,0x64029278
64021b4e:	jmp    0x6401223e
64021b53:	int3   
64021b54:	int3   
64021b55:	int3   
64021b56:	int3   
64021b57:	int3   
64021b58:	int3   
64021b59:	int3   
64021b5a:	int3   
64021b5b:	int3   
64021b5c:	int3   
64021b5d:	int3   
64021b5e:	int3   
64021b5f:	int3   
64021b60:	lea    ecx,[ebp-0x98]
64021b66:	jmp    0x6400f500
64021b6b:	lea    ecx,[ebp-0x94]
64021b71:	jmp    0x64001650
64021b76:	lea    ecx,[ebp-0x78]
64021b79:	jmp    0x64001650
64021b7e:	mov    edx,DWORD PTR [esp+0x8]
64021b82:	lea    eax,[edx-0xa8]
64021b88:	mov    ecx,DWORD PTR [edx-0xac]
64021b8e:	xor    ecx,eax
64021b90:	call   0x6401257c
64021b95:	mov    eax,0x640292c4
64021b9a:	jmp    0x6401223e
64021b9f:	int3   
64021ba0:	lea    ecx,[ebp+0x38]
64021ba3:	jmp    0x6400f680
64021ba8:	lea    ecx,[ebp-0x38]
64021bab:	jmp    0x6400f520
64021bb0:	lea    ecx,[ebp+0x10]
64021bb3:	jmp    0x64001930
64021bb8:	lea    ecx,[ebp+0x14]
64021bbb:	jmp    0x64001930
64021bc0:	lea    ecx,[ebp+0x18]
64021bc3:	jmp    0x64001930
64021bc8:	lea    ecx,[ebp+0xc]
64021bcb:	jmp    0x64001930
64021bd0:	lea    ecx,[ebp+0x8]
64021bd3:	jmp    0x64001930
64021bd8:	lea    ecx,[ebp+0x4]
64021bdb:	jmp    0x64001930
64021be0:	lea    ecx,[ebp+0x1c]
64021be3:	jmp    0x64001650
64021be8:	mov    edx,DWORD PTR [esp+0x8]
64021bec:	lea    eax,[edx+0xc]
64021bef:	mov    ecx,DWORD PTR [edx-0x80]
64021bf2:	xor    ecx,eax
64021bf4:	call   0x6401257c
64021bf9:	mov    ecx,DWORD PTR [edx+0x7c]
64021bfc:	xor    ecx,eax
64021bfe:	call   0x6401257c
64021c03:	mov    eax,0x64029334
64021c08:	jmp    0x6401223e
64021c0d:	int3   
64021c0e:	int3   
64021c0f:	int3   
64021c10:	mov    eax,ds:0x6402d4e8
64021c15:	and    eax,0xfffffffe
64021c18:	mov    ds:0x6402d4e8,eax
64021c1d:	ret    
64021c1e:	mov    edx,DWORD PTR [esp+0x8]
64021c22:	lea    eax,[edx-0x10]
64021c25:	mov    ecx,DWORD PTR [edx-0x14]
64021c28:	xor    ecx,eax
64021c2a:	call   0x6401257c
64021c2f:	mov    eax,0x640293f8
64021c34:	jmp    0x6401223e
64021c39:	int3   
64021c3a:	int3   
64021c3b:	int3   
64021c3c:	int3   
64021c3d:	int3   
64021c3e:	int3   
64021c3f:	int3   
64021c40:	lea    ecx,[ebp-0x14]
64021c43:	jmp    0x6400a2d0
64021c48:	mov    edx,DWORD PTR [esp+0x8]
64021c4c:	lea    eax,[edx+0xc]
64021c4f:	mov    ecx,DWORD PTR [edx-0x18]
64021c52:	xor    ecx,eax
64021c54:	call   0x6401257c
64021c59:	mov    eax,0x64029458
64021c5e:	jmp    0x6401223e
64021c63:	int3   
64021c64:	int3   
64021c65:	int3   
64021c66:	int3   
64021c67:	int3   
64021c68:	int3   
64021c69:	int3   
64021c6a:	int3   
64021c6b:	int3   
64021c6c:	int3   
64021c6d:	int3   
64021c6e:	int3   
64021c6f:	int3   
64021c70:	lea    ecx,[ebp-0x10]
64021c73:	jmp    0x64001930
64021c78:	mov    edx,DWORD PTR [esp+0x8]
64021c7c:	lea    eax,[edx-0x8]
64021c7f:	mov    ecx,DWORD PTR [edx-0xc]
64021c82:	xor    ecx,eax
64021c84:	call   0x6401257c
64021c89:	mov    eax,0x64029484
64021c8e:	jmp    0x6401223e
64021c93:	int3   
64021c94:	int3   
64021c95:	int3   
64021c96:	int3   
64021c97:	int3   
64021c98:	int3   
64021c99:	int3   
64021c9a:	int3   
64021c9b:	int3   
64021c9c:	int3   
64021c9d:	int3   
64021c9e:	int3   
64021c9f:	int3   
64021ca0:	lea    ecx,[ebp-0x10]
64021ca3:	jmp    0x64001680
64021ca8:	lea    ecx,[ebp-0x14]
64021cab:	jmp    0x64001930
64021cb0:	mov    edx,DWORD PTR [esp+0x8]
64021cb4:	lea    eax,[edx-0x14]
64021cb7:	mov    ecx,DWORD PTR [edx-0x18]
64021cba:	xor    ecx,eax
64021cbc:	call   0x6401257c
64021cc1:	mov    eax,0x640294b8
64021cc6:	jmp    0x6401223e
64021ccb:	int3   
64021ccc:	int3   
64021ccd:	int3   
64021cce:	int3   
64021ccf:	int3   
64021cd0:	mov    eax,DWORD PTR [ebp-0x50]
64021cd3:	and    eax,0x1
64021cd6:	je     0x64021ce8
64021cdc:	and    DWORD PTR [ebp-0x50],0xfffffffe
64021ce0:	mov    ecx,DWORD PTR [ebp-0x58]
64021ce3:	jmp    0x64001930
64021ce8:	ret    
64021ce9:	lea    ecx,[ebp-0x4c]
64021cec:	jmp    0x64001930
64021cf1:	lea    ecx,[ebp-0x54]
64021cf4:	jmp    0x64001930
64021cf9:	lea    ecx,[ebp-0x10]
64021cfc:	jmp    0x64001930
64021d01:	lea    ecx,[ebp-0x10]
64021d04:	jmp    0x64001930
64021d09:	lea    ecx,[ebp-0x28]
64021d0c:	jmp    0x64001930
64021d11:	lea    ecx,[ebp-0x48]
64021d14:	jmp    0x64001930
64021d19:	lea    ecx,[ebp-0x24]
64021d1c:	jmp    0x64001930
64021d21:	lea    ecx,[ebp-0x14]
64021d24:	jmp    0x64001930
64021d29:	lea    ecx,[ebp-0x18]
64021d2c:	jmp    0x64001930
64021d31:	lea    ecx,[ebp-0x10]
64021d34:	jmp    0x64001930
64021d39:	lea    ecx,[ebp-0x10]
64021d3c:	jmp    0x64001930
64021d41:	lea    ecx,[ebp-0x18]
64021d44:	jmp    0x64001930
64021d49:	lea    ecx,[ebp-0x14]
64021d4c:	jmp    0x64001930
64021d51:	lea    ecx,[ebp-0x10]
64021d54:	jmp    0x64001930
64021d59:	lea    ecx,[ebp-0x3c]
64021d5c:	jmp    0x64010350
64021d61:	lea    ecx,[ebp-0x14]
64021d64:	jmp    0x64001930
64021d69:	lea    ecx,[ebp-0x10]
64021d6c:	jmp    0x64001930
64021d71:	lea    ecx,[ebp-0x20]
64021d74:	jmp    0x64001930
64021d79:	lea    ecx,[ebp-0x10]
64021d7c:	jmp    0x64001930
64021d81:	lea    ecx,[ebp-0x18]
64021d84:	jmp    0x64001930
64021d89:	lea    ecx,[ebp-0x14]
64021d8c:	jmp    0x64001930
64021d91:	lea    ecx,[ebp-0x10]
64021d94:	jmp    0x64001930
64021d99:	lea    ecx,[ebp-0x1c]
64021d9c:	jmp    0x64001930
64021da1:	lea    ecx,[ebp-0x2c]
64021da4:	jmp    0x64001930
64021da9:	lea    ecx,[ebp-0x18]
64021dac:	jmp    0x64001930
64021db1:	lea    ecx,[ebp-0x10]
64021db4:	jmp    0x64001930
64021db9:	lea    ecx,[ebp-0x2c]
64021dbc:	jmp    0x64001930
64021dc1:	lea    ecx,[ebp-0x1c]
64021dc4:	jmp    0x64001930
64021dc9:	lea    ecx,[ebp-0x1c]
64021dcc:	jmp    0x64001930
64021dd1:	mov    edx,DWORD PTR [esp+0x8]
64021dd5:	lea    eax,[edx+0xc]
64021dd8:	mov    ecx,DWORD PTR [edx-0xa0]
64021dde:	xor    ecx,eax
64021de0:	call   0x6401257c
64021de5:	mov    ecx,DWORD PTR [edx+0x130]
64021deb:	xor    ecx,eax
64021ded:	call   0x6401257c
64021df2:	mov    eax,0x640294dc
64021df7:	jmp    0x6401223e
64021dfc:	int3   
64021dfd:	int3   
64021dfe:	int3   
64021dff:	int3   
64021e00:	lea    ecx,[ebp-0x30]
64021e03:	jmp    0x64001930
64021e08:	lea    ecx,[ebp-0x2c]
64021e0b:	jmp    0x64001650
64021e10:	lea    ecx,[ebp-0x5c]
64021e13:	jmp    0x64001650
64021e18:	mov    edx,DWORD PTR [esp+0x8]
64021e1c:	lea    eax,[edx+0xc]
64021e1f:	mov    ecx,DWORD PTR [edx-0x60]
64021e22:	xor    ecx,eax
64021e24:	call   0x6401257c
64021e29:	mov    ecx,DWORD PTR [edx-0x4]
64021e2c:	xor    ecx,eax
64021e2e:	call   0x6401257c
64021e33:	mov    eax,0x64029608
64021e38:	jmp    0x6401223e
64021e3d:	lea    ecx,[ebp-0x28]
64021e40:	jmp    0x64001650
64021e45:	mov    edx,DWORD PTR [esp+0x8]
64021e49:	lea    eax,[edx+0xc]
64021e4c:	mov    ecx,DWORD PTR [edx-0x54]
64021e4f:	xor    ecx,eax
64021e51:	call   0x6401257c
64021e56:	mov    eax,0x64029654
64021e5b:	jmp    0x6401223e
64021e60:	lea    ecx,[ebp-0x28]
64021e63:	jmp    0x64001650
64021e68:	mov    edx,DWORD PTR [esp+0x8]
64021e6c:	lea    eax,[edx+0xc]
64021e6f:	mov    ecx,DWORD PTR [edx-0x54]
64021e72:	xor    ecx,eax
64021e74:	call   0x6401257c
64021e79:	mov    eax,0x64029680
64021e7e:	jmp    0x6401223e
64021e83:	mov    edx,DWORD PTR [esp+0x8]
64021e87:	lea    eax,[edx+0xc]
64021e8a:	mov    ecx,DWORD PTR [edx-0x14]
64021e8d:	xor    ecx,eax
64021e8f:	call   0x6401257c
64021e94:	mov    eax,0x64029828
64021e99:	jmp    0x6401223e
64021e9e:	int3   
64021e9f:	int3   
64021ea0:	mov    eax,DWORD PTR [ebp+0x4]
64021ea3:	push   eax
64021ea4:	call   0x64011d22
64021ea9:	pop    ecx
64021eaa:	ret    
64021eab:	mov    edx,DWORD PTR [esp+0x8]
64021eaf:	lea    eax,[edx-0x8]
64021eb2:	mov    ecx,DWORD PTR [edx-0xc]
64021eb5:	xor    ecx,eax
64021eb7:	call   0x6401257c
64021ebc:	mov    eax,0x64029d80
64021ec1:	jmp    0x6401223e
64021ec6:	int3   
64021ec7:	int3   
64021ec8:	int3   
64021ec9:	int3   
64021eca:	int3   
64021ecb:	int3   
64021ecc:	int3   
64021ecd:	int3   
64021ece:	int3   
64021ecf:	int3   
64021ed0:	mov    eax,DWORD PTR [ebp+0x4]
64021ed3:	push   eax
64021ed4:	call   0x64011d22
64021ed9:	pop    ecx
64021eda:	ret    
64021edb:	mov    edx,DWORD PTR [esp+0x8]
64021edf:	lea    eax,[edx-0x8]
64021ee2:	mov    ecx,DWORD PTR [edx-0xc]
64021ee5:	xor    ecx,eax
64021ee7:	call   0x6401257c
64021eec:	mov    eax,0x64029dac
64021ef1:	jmp    0x6401223e
64021ef6:	int3   
64021ef7:	int3   
64021ef8:	int3   
64021ef9:	int3   
64021efa:	int3   
64021efb:	int3   
64021efc:	int3   
64021efd:	int3   
64021efe:	int3   
64021eff:	int3   
64021f00:	mov    eax,DWORD PTR [ebp-0x10]
64021f03:	push   eax
64021f04:	call   0x64011d22
64021f09:	pop    ecx
64021f0a:	ret    
64021f0b:	mov    edx,DWORD PTR [esp+0x8]
64021f0f:	lea    eax,[edx-0x8]
64021f12:	mov    ecx,DWORD PTR [edx-0xc]
64021f15:	xor    ecx,eax
64021f17:	call   0x6401257c
64021f1c:	mov    eax,0x64029dd8
64021f21:	jmp    0x6401223e
64021f26:	int3   
64021f27:	int3   
64021f28:	int3   
64021f29:	int3   
64021f2a:	int3   
64021f2b:	int3   
64021f2c:	int3   
64021f2d:	int3   
64021f2e:	int3   
64021f2f:	int3   
64021f30:	mov    eax,DWORD PTR [ebp-0x10]
64021f33:	push   eax
64021f34:	call   0x64011d22
64021f39:	pop    ecx
64021f3a:	ret    
64021f3b:	mov    edx,DWORD PTR [esp+0x8]
64021f3f:	lea    eax,[edx-0xc]
64021f42:	mov    ecx,DWORD PTR [edx-0x10]
64021f45:	xor    ecx,eax
64021f47:	call   0x6401257c
64021f4c:	mov    eax,0x64029e04
64021f51:	jmp    0x6401223e
64021f56:	int3   
64021f57:	int3   
64021f58:	int3   
64021f59:	int3   
64021f5a:	int3   
64021f5b:	int3   
64021f5c:	int3   
64021f5d:	int3   
64021f5e:	int3   
64021f5f:	int3   
64021f60:	lea    ecx,[ebp-0x144]
64021f66:	jmp    0x64002760
64021f6b:	mov    edx,DWORD PTR [esp+0x8]
64021f6f:	lea    eax,[edx-0x144]
64021f75:	mov    ecx,DWORD PTR [edx-0x148]
64021f7b:	xor    ecx,eax
64021f7d:	call   0x6401257c
64021f82:	add    eax,0xc
64021f85:	mov    ecx,DWORD PTR [edx-0x4]
64021f88:	xor    ecx,eax
64021f8a:	call   0x6401257c
64021f8f:	mov    eax,0x64029e30
64021f94:	jmp    0x6401223e
64021f99:	int3   
64021f9a:	int3   
64021f9b:	int3   
64021f9c:	int3   
64021f9d:	int3   
64021f9e:	int3   
64021f9f:	int3   
64021fa0:	lea    ecx,[ebp-0x20]
64021fa3:	jmp    0x6400aef0
64021fa8:	mov    edx,DWORD PTR [esp+0x8]
64021fac:	lea    eax,[edx-0x1c]
64021faf:	mov    ecx,DWORD PTR [edx-0x20]
64021fb2:	xor    ecx,eax
64021fb4:	call   0x6401257c
64021fb9:	mov    eax,0x64029e5c
64021fbe:	jmp    0x6401223e
64021fc3:	int3   
64021fc4:	int3   
64021fc5:	int3   
64021fc6:	int3   
64021fc7:	int3   
64021fc8:	int3   
64021fc9:	int3   
64021fca:	int3   
64021fcb:	int3   
64021fcc:	int3   
64021fcd:	int3   
64021fce:	int3   
64021fcf:	int3   
64021fd0:	mov    eax,DWORD PTR [ebp-0x10]
64021fd3:	and    eax,0x1
64021fd6:	je     0x64021fe8
64021fdc:	and    DWORD PTR [ebp-0x10],0xfffffffe
64021fe0:	mov    edi,DWORD PTR [ebp+0x8]
64021fe3:	jmp    0x6400ab80
64021fe8:	ret    
64021fe9:	mov    edx,DWORD PTR [esp+0x8]
64021fed:	lea    eax,[edx-0x8]
64021ff0:	mov    ecx,DWORD PTR [edx-0xc]
64021ff3:	xor    ecx,eax
64021ff5:	call   0x6401257c
64021ffa:	mov    eax,0x64029e88
64021fff:	jmp    0x6401223e
64022004:	int3   
64022005:	int3   
64022006:	int3   
64022007:	int3   
64022008:	int3   
64022009:	int3   
6402200a:	int3   
6402200b:	int3   
6402200c:	int3   
6402200d:	int3   
6402200e:	int3   
6402200f:	int3   
64022010:	mov    edx,DWORD PTR [esp+0x8]
64022014:	lea    eax,[edx+0xc]
64022017:	mov    ecx,DWORD PTR [edx-0x2c]
6402201a:	xor    ecx,eax
6402201c:	call   0x6401257c
64022021:	mov    eax,0x64029f14
64022026:	jmp    0x6401223e
6402202b:	int3   
6402202c:	int3   
6402202d:	int3   
6402202e:	int3   
6402202f:	int3   
64022030:	mov    eax,DWORD PTR [ebp-0x18]
64022033:	push   eax
64022034:	mov    ecx,DWORD PTR [ebp-0x1c]
64022037:	push   ecx
64022038:	call   0x64002c70
6402203d:	add    esp,0x8
64022040:	ret    
64022041:	mov    edx,DWORD PTR [esp+0x8]
64022045:	lea    eax,[edx+0xc]
64022048:	mov    ecx,DWORD PTR [edx-0x20]
6402204b:	xor    ecx,eax
6402204d:	call   0x6401257c
64022052:	mov    eax,0x64029f74
64022057:	jmp    0x6401223e
6402205c:	int3   
6402205d:	int3   
6402205e:	int3   
6402205f:	int3   
64022060:	mov    ecx,DWORD PTR [ebp-0x10]
64022063:	jmp    0x64001650
64022068:	mov    edx,DWORD PTR [esp+0x8]
6402206c:	lea    eax,[edx-0xc]
6402206f:	mov    ecx,DWORD PTR [edx-0x10]
64022072:	xor    ecx,eax
64022074:	call   0x6401257c
64022079:	mov    eax,0x64029fa0
6402207e:	jmp    0x6401223e
64022083:	int3   
64022084:	int3   
64022085:	int3   
64022086:	int3   
64022087:	int3   
64022088:	int3   
64022089:	int3   
6402208a:	int3   
6402208b:	int3   
6402208c:	int3   
6402208d:	int3   
6402208e:	int3   
6402208f:	int3   
64022090:	mov    ecx,DWORD PTR [ebp-0x10]
64022093:	jmp    0x64001650
64022098:	mov    edx,DWORD PTR [esp+0x8]
6402209c:	lea    eax,[edx-0x10]
6402209f:	mov    ecx,DWORD PTR [edx-0x14]
640220a2:	xor    ecx,eax
640220a4:	call   0x6401257c
640220a9:	mov    eax,0x64029fcc
640220ae:	jmp    0x6401223e
640220b3:	int3   
640220b4:	int3   
640220b5:	int3   
640220b6:	int3   
640220b7:	int3   
640220b8:	int3   
640220b9:	int3   
640220ba:	int3   
640220bb:	int3   
640220bc:	int3   
640220bd:	int3   
640220be:	int3   
640220bf:	int3   
640220c0:	lea    ecx,[ebp+0x24]
640220c3:	jmp    0x64001650
640220c8:	lea    ecx,[ebp+0x8]
640220cb:	jmp    0x64001650
640220d0:	mov    edx,DWORD PTR [esp+0x8]
640220d4:	lea    eax,[edx-0x8]
640220d7:	mov    ecx,DWORD PTR [edx-0xc]
640220da:	xor    ecx,eax
640220dc:	call   0x6401257c
640220e1:	mov    eax,0x6402a000
640220e6:	jmp    0x6401223e
640220eb:	int3   
640220ec:	int3   
640220ed:	int3   
640220ee:	int3   
640220ef:	int3   
640220f0:	lea    ecx,[ebp-0x28]
640220f3:	jmp    0x64001650
640220f8:	mov    edx,DWORD PTR [esp+0x8]
640220fc:	lea    eax,[edx-0x28]
640220ff:	mov    ecx,DWORD PTR [edx-0x2c]
64022102:	xor    ecx,eax
64022104:	call   0x6401257c
64022109:	mov    eax,0x6402a02c
6402210e:	jmp    0x6401223e
64022113:	int3   
64022114:	int3   
64022115:	int3   
64022116:	int3   
64022117:	int3   
64022118:	int3   
64022119:	int3   
6402211a:	int3   
6402211b:	int3   
6402211c:	int3   
6402211d:	int3   
6402211e:	int3   
6402211f:	int3   
64022120:	mov    ecx,DWORD PTR [ebp-0x10]
64022123:	jmp    0x64001650
64022128:	mov    edx,DWORD PTR [esp+0x8]
6402212c:	lea    eax,[edx-0x10]
6402212f:	mov    ecx,DWORD PTR [edx-0x14]
64022132:	xor    ecx,eax
64022134:	call   0x6401257c
64022139:	mov    eax,0x6402a058
6402213e:	jmp    0x6401223e
64022143:	int3   
64022144:	int3   
64022145:	int3   
64022146:	int3   
64022147:	int3   
64022148:	int3   
64022149:	int3   
6402214a:	int3   
6402214b:	int3   
6402214c:	int3   
6402214d:	int3   
6402214e:	int3   
6402214f:	int3   
64022150:	mov    edx,DWORD PTR [esp+0x8]
64022154:	lea    eax,[edx+0xc]
64022157:	mov    ecx,DWORD PTR [edx-0x1c]
6402215a:	xor    ecx,eax
6402215c:	call   0x6401257c
64022161:	mov    eax,0x6402a0e4
64022166:	jmp    0x6401223e
6402216b:	int3   
6402216c:	int3   
6402216d:	int3   
6402216e:	int3   
6402216f:	int3   
64022170:	mov    eax,DWORD PTR [ebp-0x14]
64022173:	push   eax
64022174:	mov    ecx,DWORD PTR [ebp-0x18]
64022177:	push   ecx
64022178:	call   0x64002c70
6402217d:	add    esp,0x8
64022180:	ret    
64022181:	mov    edx,DWORD PTR [esp+0x8]
64022185:	lea    eax,[edx+0xc]
64022188:	mov    ecx,DWORD PTR [edx-0x1c]
6402218b:	xor    ecx,eax
6402218d:	call   0x6401257c
64022192:	mov    eax,0x6402a144
64022197:	jmp    0x6401223e
6402219c:	int3   
6402219d:	int3   
6402219e:	int3   
6402219f:	int3   
640221a0:	mov    eax,DWORD PTR [ebp-0x14]
640221a3:	push   eax
640221a4:	mov    ecx,DWORD PTR [ebp-0x18]
640221a7:	push   ecx
640221a8:	call   0x64002c70
640221ad:	add    esp,0x8
640221b0:	ret    
640221b1:	mov    edx,DWORD PTR [esp+0x8]
640221b5:	lea    eax,[edx+0xc]
640221b8:	mov    ecx,DWORD PTR [edx-0x1c]
640221bb:	xor    ecx,eax
640221bd:	call   0x6401257c
640221c2:	mov    eax,0x6402a1a4
640221c7:	jmp    0x6401223e
640221cc:	int3   
640221cd:	int3   
640221ce:	int3   
640221cf:	int3   
640221d0:	mov    edx,DWORD PTR [esp+0x8]
640221d4:	lea    eax,[edx+0xc]
640221d7:	mov    ecx,DWORD PTR [edx-0x1c]
640221da:	xor    ecx,eax
640221dc:	call   0x6401257c
640221e1:	mov    eax,0x6402a1fc
640221e6:	jmp    0x6401223e
640221eb:	int3   
640221ec:	int3   
640221ed:	int3   
640221ee:	int3   
640221ef:	int3   
640221f0:	lea    ecx,[ebp+0x8]
640221f3:	jmp    0x64007be0
640221f8:	mov    edx,DWORD PTR [esp+0x8]
640221fc:	lea    eax,[edx-0x14]
640221ff:	mov    ecx,DWORD PTR [edx-0x18]
64022202:	xor    ecx,eax
64022204:	call   0x6401257c
64022209:	mov    eax,0x6402a228
6402220e:	jmp    0x6401223e
64022213:	int3   
64022214:	int3   
64022215:	int3   
64022216:	int3   
64022217:	int3   
64022218:	int3   
64022219:	int3   
6402221a:	int3   
6402221b:	int3   
6402221c:	int3   
6402221d:	int3   
6402221e:	int3   
6402221f:	int3   
64022220:	lea    ecx,[ebp+0x8]
64022223:	jmp    0x64001650
64022228:	mov    edx,DWORD PTR [esp+0x8]
6402222c:	lea    eax,[edx-0x14]
6402222f:	mov    ecx,DWORD PTR [edx-0x18]
64022232:	xor    ecx,eax
64022234:	call   0x6401257c
64022239:	mov    eax,0x6402a254
6402223e:	jmp    0x6401223e
64022243:	int3   
64022244:	int3   
64022245:	int3   
64022246:	int3   
64022247:	int3   
64022248:	int3   
64022249:	int3   
6402224a:	int3   
6402224b:	int3   
6402224c:	int3   
6402224d:	int3   
6402224e:	int3   
6402224f:	int3   
64022250:	mov    ecx,DWORD PTR [ebp-0x10]
64022253:	jmp    0x64011e3b
64022258:	mov    edx,DWORD PTR [esp+0x8]
6402225c:	lea    eax,[edx-0xc]
6402225f:	mov    ecx,DWORD PTR [edx-0x10]
64022262:	xor    ecx,eax
64022264:	call   0x6401257c
64022269:	mov    eax,0x6402a280
6402226e:	jmp    0x6401223e
64022273:	int3   
64022274:	int3   
64022275:	int3   
64022276:	int3   
64022277:	int3   
64022278:	int3   
64022279:	int3   
6402227a:	int3   
6402227b:	int3   
6402227c:	int3   
6402227d:	int3   
6402227e:	int3   
6402227f:	int3   
64022280:	mov    ecx,DWORD PTR [ebp-0x10]
64022283:	jmp    0x64011e3b
64022288:	mov    edx,DWORD PTR [esp+0x8]
6402228c:	lea    eax,[edx-0x8]
6402228f:	mov    ecx,DWORD PTR [edx-0xc]
64022292:	xor    ecx,eax
64022294:	call   0x6401257c
64022299:	mov    eax,0x6402a2ac
6402229e:	jmp    0x6401223e
640222a3:	int3   
640222a4:	int3   
640222a5:	int3   
640222a6:	int3   
640222a7:	int3   
640222a8:	int3   
640222a9:	int3   
640222aa:	int3   
640222ab:	int3   
640222ac:	int3   
640222ad:	int3   
640222ae:	int3   
640222af:	int3   
640222b0:	mov    ecx,DWORD PTR [ebp-0x10]
640222b3:	jmp    0x64011e3b
640222b8:	mov    edx,DWORD PTR [esp+0x8]
640222bc:	lea    eax,[edx-0xc]
640222bf:	mov    ecx,DWORD PTR [edx-0x10]
640222c2:	xor    ecx,eax
640222c4:	call   0x6401257c
640222c9:	mov    eax,0x6402a2d8
640222ce:	jmp    0x6401223e
640222d3:	int3   
640222d4:	int3   
640222d5:	int3   
640222d6:	int3   
640222d7:	int3   
640222d8:	int3   
640222d9:	int3   
640222da:	int3   
640222db:	int3   
640222dc:	int3   
640222dd:	int3   
640222de:	int3   
640222df:	int3   
640222e0:	mov    ecx,DWORD PTR [ebp-0x10]
640222e3:	jmp    0x64011e3b
640222e8:	mov    edx,DWORD PTR [esp+0x8]
640222ec:	lea    eax,[edx-0x8]
640222ef:	mov    ecx,DWORD PTR [edx-0xc]
640222f2:	xor    ecx,eax
640222f4:	call   0x6401257c
640222f9:	mov    eax,0x6402a304
640222fe:	jmp    0x6401223e
64022303:	int3   
64022304:	int3   
64022305:	int3   
64022306:	int3   
64022307:	int3   
64022308:	int3   
64022309:	int3   
6402230a:	int3   
6402230b:	int3   
6402230c:	int3   
6402230d:	int3   
6402230e:	int3   
6402230f:	int3   
64022310:	mov    eax,DWORD PTR [ebp-0x34]
64022313:	and    eax,0x1
64022316:	je     0x64022328
6402231c:	and    DWORD PTR [ebp-0x34],0xfffffffe
64022320:	mov    ecx,DWORD PTR [ebp-0x30]
64022323:	jmp    0x64001650
64022328:	ret    
64022329:	lea    ecx,[ebp-0x2c]
6402232c:	jmp    0x64001650
64022331:	lea    ecx,[ebp-0x3c]
64022334:	jmp    0x64001930
64022339:	lea    ecx,[ebp-0x2c]
6402233c:	jmp    0x64001650
64022341:	lea    ecx,[ebp-0x3c]
64022344:	jmp    0x64001930
64022349:	lea    ecx,[ebp-0x2c]
6402234c:	jmp    0x64001650
64022351:	lea    ecx,[ebp-0x2c]
64022354:	jmp    0x64001650
64022359:	mov    edx,DWORD PTR [esp+0x8]
6402235d:	lea    eax,[edx-0x40]
64022360:	mov    ecx,DWORD PTR [edx-0x44]
64022363:	xor    ecx,eax
64022365:	call   0x6401257c
6402236a:	add    eax,0x10
6402236d:	mov    ecx,DWORD PTR [edx-0x4]
64022370:	xor    ecx,eax
64022372:	call   0x6401257c
64022377:	mov    eax,0x6402a360
6402237c:	jmp    0x6401223e
64022381:	int3   
64022382:	int3   
64022383:	int3   
64022384:	int3   
64022385:	int3   
64022386:	int3   
64022387:	int3   
64022388:	int3   
64022389:	int3   
6402238a:	int3   
6402238b:	int3   
6402238c:	int3   
6402238d:	int3   
6402238e:	int3   
6402238f:	int3   
64022390:	lea    ecx,[ebp-0x30]
64022393:	jmp    0x64001650
64022398:	mov    eax,DWORD PTR [ebp-0x4c]
6402239b:	push   eax
6402239c:	mov    ecx,DWORD PTR [ebp-0x50]
6402239f:	push   ecx
640223a0:	call   0x64002c70
640223a5:	add    esp,0x8
640223a8:	ret    
640223a9:	mov    edx,DWORD PTR [esp+0x8]
640223ad:	lea    eax,[edx+0xc]
640223b0:	mov    ecx,DWORD PTR [edx-0x54]
640223b3:	xor    ecx,eax
640223b5:	call   0x6401257c
640223ba:	mov    ecx,DWORD PTR [edx-0x8]
640223bd:	xor    ecx,eax
640223bf:	call   0x6401257c
640223c4:	mov    eax,0x6402a3d0
640223c9:	jmp    0x6401223e
640223ce:	int3   
640223cf:	int3   
640223d0:	mov    ecx,DWORD PTR [ebp-0x10]
640223d3:	jmp    0x64007be0
640223d8:	mov    edx,DWORD PTR [esp+0x8]
640223dc:	lea    eax,[edx-0xc]
640223df:	mov    ecx,DWORD PTR [edx-0x10]
640223e2:	xor    ecx,eax
640223e4:	call   0x6401257c
640223e9:	mov    eax,0x6402a3fc
640223ee:	jmp    0x6401223e
640223f3:	int3   
640223f4:	int3   
640223f5:	int3   
640223f6:	int3   
640223f7:	int3   
640223f8:	int3   
640223f9:	int3   
640223fa:	int3   
640223fb:	int3   
640223fc:	int3   
640223fd:	int3   
640223fe:	int3   
640223ff:	int3   
64022400:	mov    ecx,DWORD PTR [ebp-0x10]
64022403:	jmp    0x64007be0
64022408:	mov    edx,DWORD PTR [esp+0x8]
6402240c:	lea    eax,[edx-0x10]
6402240f:	mov    ecx,DWORD PTR [edx-0x14]
64022412:	xor    ecx,eax
64022414:	call   0x6401257c
64022419:	mov    eax,0x6402a428
6402241e:	jmp    0x6401223e
64022423:	int3   
64022424:	int3   
64022425:	int3   
64022426:	int3   
64022427:	int3   
64022428:	int3   
64022429:	int3   
6402242a:	int3   
6402242b:	int3   
6402242c:	int3   
6402242d:	int3   
6402242e:	int3   
6402242f:	int3   
64022430:	lea    ecx,[ebp+0x24]
64022433:	jmp    0x64007be0
64022438:	lea    ecx,[ebp+0x8]
6402243b:	jmp    0x64007be0
64022440:	mov    edx,DWORD PTR [esp+0x8]
64022444:	lea    eax,[edx-0x8]
64022447:	mov    ecx,DWORD PTR [edx-0xc]
6402244a:	xor    ecx,eax
6402244c:	call   0x6401257c
64022451:	mov    eax,0x6402a45c
64022456:	jmp    0x6401223e
6402245b:	int3   
6402245c:	int3   
6402245d:	int3   
6402245e:	int3   
6402245f:	int3   
64022460:	mov    ecx,DWORD PTR [ebp-0x10]
64022463:	jmp    0x64007be0
64022468:	mov    edx,DWORD PTR [esp+0x8]
6402246c:	lea    eax,[edx-0x10]
6402246f:	mov    ecx,DWORD PTR [edx-0x14]
64022472:	xor    ecx,eax
64022474:	call   0x6401257c
64022479:	mov    eax,0x6402a488
6402247e:	jmp    0x6401223e
64022483:	int3   
64022484:	int3   
64022485:	int3   
64022486:	int3   
64022487:	int3   
64022488:	int3   
64022489:	int3   
6402248a:	int3   
6402248b:	int3   
6402248c:	int3   
6402248d:	int3   
6402248e:	int3   
6402248f:	int3   
64022490:	mov    eax,DWORD PTR [ebp-0x14]
64022493:	push   eax
64022494:	mov    ecx,DWORD PTR [ebp-0x18]
64022497:	push   ecx
64022498:	call   0x64002c70
6402249d:	add    esp,0x8
640224a0:	ret    
640224a1:	mov    edx,DWORD PTR [esp+0x8]
640224a5:	lea    eax,[edx+0xc]
640224a8:	mov    ecx,DWORD PTR [edx-0x1c]
640224ab:	xor    ecx,eax
640224ad:	call   0x6401257c
640224b2:	mov    eax,0x6402a4e8
640224b7:	jmp    0x6401223e
640224bc:	int3   
640224bd:	int3   
640224be:	int3   
640224bf:	int3   
640224c0:	lea    eax,[ebp-0x10]
640224c3:	jmp    0x640016b0
640224c8:	mov    edx,DWORD PTR [esp+0x8]
640224cc:	lea    eax,[edx-0x34]
640224cf:	mov    ecx,DWORD PTR [edx-0x38]
640224d2:	xor    ecx,eax
640224d4:	call   0x6401257c
640224d9:	mov    eax,0x6402a514
640224de:	jmp    0x6401223e
640224e3:	int3   
640224e4:	int3   
640224e5:	int3   
640224e6:	int3   
640224e7:	int3   
640224e8:	int3   
640224e9:	int3   
640224ea:	int3   
640224eb:	int3   
640224ec:	int3   
640224ed:	int3   
640224ee:	int3   
640224ef:	int3   
640224f0:	lea    ecx,[ebp-0x54]
640224f3:	jmp    0x64001650
640224f8:	mov    edx,DWORD PTR [esp+0x8]
640224fc:	lea    eax,[edx-0x4c]
640224ff:	mov    ecx,DWORD PTR [edx-0x50]
64022502:	xor    ecx,eax
64022504:	call   0x6401257c
64022509:	mov    eax,0x6402a540
6402250e:	jmp    0x6401223e
64022513:	int3   
64022514:	int3   
64022515:	int3   
64022516:	int3   
64022517:	int3   
64022518:	int3   
64022519:	int3   
6402251a:	int3   
6402251b:	int3   
6402251c:	int3   
6402251d:	int3   
6402251e:	int3   
6402251f:	int3   
64022520:	lea    ecx,[ebp-0x30]
64022523:	jmp    0x64001650
64022528:	mov    edx,DWORD PTR [esp+0x8]
6402252c:	lea    eax,[edx+0xc]
6402252f:	mov    ecx,DWORD PTR [edx-0x44]
64022532:	xor    ecx,eax
64022534:	call   0x6401257c
64022539:	mov    ecx,DWORD PTR [edx-0x8]
6402253c:	xor    ecx,eax
6402253e:	call   0x6401257c
64022543:	mov    eax,0x6402a5d4
64022548:	jmp    0x6401223e
6402254d:	int3   
6402254e:	int3   
6402254f:	int3   
64022550:	lea    ecx,[ebp-0x54]
64022553:	jmp    0x64001650
64022558:	mov    edx,DWORD PTR [esp+0x8]
6402255c:	lea    eax,[edx-0x5c]
6402255f:	mov    ecx,DWORD PTR [edx-0x60]
64022562:	xor    ecx,eax
64022564:	call   0x6401257c
64022569:	mov    eax,0x6402a600
6402256e:	jmp    0x6401223e
64022573:	int3   
64022574:	int3   
64022575:	int3   
64022576:	int3   
64022577:	int3   
64022578:	int3   
64022579:	int3   
6402257a:	int3   
6402257b:	int3   
6402257c:	int3   
6402257d:	int3   
6402257e:	int3   
6402257f:	int3   
64022580:	lea    ecx,[ebp-0x54]
64022583:	jmp    0x64001650
64022588:	mov    edx,DWORD PTR [esp+0x8]
6402258c:	lea    eax,[edx-0x5c]
6402258f:	mov    ecx,DWORD PTR [edx-0x60]
64022592:	xor    ecx,eax
64022594:	call   0x6401257c
64022599:	mov    eax,0x6402a62c
6402259e:	jmp    0x6401223e
640225a3:	int3   
640225a4:	int3   
640225a5:	int3   
640225a6:	int3   
640225a7:	int3   
640225a8:	int3   
640225a9:	int3   
640225aa:	int3   
640225ab:	int3   
640225ac:	int3   
640225ad:	int3   
640225ae:	int3   
640225af:	int3   
640225b0:	lea    ecx,[ebp-0x54]
640225b3:	jmp    0x64001650
640225b8:	mov    edx,DWORD PTR [esp+0x8]
640225bc:	lea    eax,[edx-0x5c]
640225bf:	mov    ecx,DWORD PTR [edx-0x60]
640225c2:	xor    ecx,eax
640225c4:	call   0x6401257c
640225c9:	mov    eax,0x6402a658
640225ce:	jmp    0x6401223e
640225d3:	int3   
640225d4:	int3   
640225d5:	int3   
640225d6:	int3   
640225d7:	int3   
640225d8:	int3   
640225d9:	int3   
640225da:	int3   
640225db:	int3   
640225dc:	int3   
640225dd:	int3   
640225de:	int3   
640225df:	int3   
640225e0:	lea    ecx,[ebp-0x54]
640225e3:	jmp    0x64001650
640225e8:	mov    edx,DWORD PTR [esp+0x8]
640225ec:	lea    eax,[edx-0x5c]
640225ef:	mov    ecx,DWORD PTR [edx-0x60]
640225f2:	xor    ecx,eax
640225f4:	call   0x6401257c
640225f9:	mov    eax,0x6402a684
640225fe:	jmp    0x6401223e
64022603:	int3   
64022604:	int3   
64022605:	int3   
64022606:	int3   
64022607:	int3   
64022608:	int3   
64022609:	int3   
6402260a:	int3   
6402260b:	int3   
6402260c:	int3   
6402260d:	int3   
6402260e:	int3   
6402260f:	int3   
64022610:	lea    ecx,[ebp-0x50]
64022613:	jmp    0x64001650
64022618:	mov    edx,DWORD PTR [esp+0x8]
6402261c:	lea    eax,[edx-0x54]
6402261f:	mov    ecx,DWORD PTR [edx-0x58]
64022622:	xor    ecx,eax
64022624:	call   0x6401257c
64022629:	mov    eax,0x6402a6b0
6402262e:	jmp    0x6401223e
64022633:	int3   
64022634:	int3   
64022635:	int3   
64022636:	int3   
64022637:	int3   
64022638:	int3   
64022639:	int3   
6402263a:	int3   
6402263b:	int3   
6402263c:	int3   
6402263d:	int3   
6402263e:	int3   
6402263f:	int3   
64022640:	lea    ecx,[ebp-0x50]
64022643:	jmp    0x64001650
64022648:	mov    edx,DWORD PTR [esp+0x8]
6402264c:	lea    eax,[edx-0x54]
6402264f:	mov    ecx,DWORD PTR [edx-0x58]
64022652:	xor    ecx,eax
64022654:	call   0x6401257c
64022659:	mov    eax,0x6402a6dc
6402265e:	jmp    0x6401223e
64022663:	int3   
64022664:	int3   
64022665:	int3   
64022666:	int3   
64022667:	int3   
64022668:	int3   
64022669:	int3   
6402266a:	int3   
6402266b:	int3   
6402266c:	int3   
6402266d:	int3   
6402266e:	int3   
6402266f:	int3   
64022670:	mov    eax,ds:0x64030360
64022675:	and    eax,0xfffffffe
64022678:	mov    ds:0x64030360,eax
6402267d:	ret    
6402267e:	mov    edx,DWORD PTR [esp+0x8]
64022682:	lea    eax,[edx]
64022684:	mov    ecx,DWORD PTR [edx-0x4]
64022687:	xor    ecx,eax
64022689:	call   0x6401257c
6402268e:	mov    eax,0x6402a708
64022693:	jmp    0x6401223e
64022698:	int3   
64022699:	int3   
6402269a:	int3   
6402269b:	int3   
6402269c:	int3   
6402269d:	int3   
6402269e:	int3   
6402269f:	int3   
640226a0:	mov    eax,ds:0x64030364
640226a5:	and    eax,0xfffffffe
640226a8:	mov    ds:0x64030364,eax
640226ad:	ret    
640226ae:	mov    edx,DWORD PTR [esp+0x8]
640226b2:	lea    eax,[edx]
640226b4:	mov    ecx,DWORD PTR [edx-0x4]
640226b7:	xor    ecx,eax
640226b9:	call   0x6401257c
640226be:	mov    eax,0x6402a734
640226c3:	jmp    0x6401223e
640226c8:	int3   
640226c9:	int3   
640226ca:	int3   
640226cb:	int3   
640226cc:	int3   
640226cd:	int3   
640226ce:	int3   
640226cf:	int3   
640226d0:	lea    ecx,[ebp-0x4c]
640226d3:	jmp    0x64007be0
640226d8:	lea    ecx,[ebp-0x30]
640226db:	jmp    0x64007be0
640226e0:	mov    ecx,DWORD PTR [ebp-0xc0]
640226e6:	jmp    0x64007be0
640226eb:	lea    ecx,[ebp-0x84]
640226f1:	jmp    0x64007130
640226f6:	lea    ecx,[ebp-0xbc]
640226fc:	jmp    0x64007130
64022701:	mov    edx,DWORD PTR [esp+0x8]
64022705:	lea    eax,[edx-0xdc]
6402270b:	mov    ecx,DWORD PTR [edx-0xe0]
64022711:	xor    ecx,eax
64022713:	call   0x6401257c
64022718:	add    eax,0xc
6402271b:	mov    ecx,DWORD PTR [edx-0x8]
6402271e:	xor    ecx,eax
64022720:	call   0x6401257c
64022725:	mov    eax,0x6402a780
6402272a:	jmp    0x6401223e
6402272f:	int3   
64022730:	lea    ecx,[ebp-0x4c]
64022733:	jmp    0x64001650
64022738:	lea    ecx,[ebp-0x30]
6402273b:	jmp    0x64001650
64022740:	mov    ecx,DWORD PTR [ebp-0xc0]
64022746:	jmp    0x64001650
6402274b:	lea    ecx,[ebp-0x84]
64022751:	jmp    0x6400f680
64022756:	lea    ecx,[ebp-0xbc]
6402275c:	jmp    0x6400f680
64022761:	mov    edx,DWORD PTR [esp+0x8]
64022765:	lea    eax,[edx-0xdc]
6402276b:	mov    ecx,DWORD PTR [edx-0xe0]
64022771:	xor    ecx,eax
64022773:	call   0x6401257c
64022778:	add    eax,0xc
6402277b:	mov    ecx,DWORD PTR [edx-0x8]
6402277e:	xor    ecx,eax
64022780:	call   0x6401257c
64022785:	mov    eax,0x6402a7cc
6402278a:	jmp    0x6401223e
6402278f:	int3   
64022790:	lea    ecx,[ebp+0x4]
64022793:	jmp    0x64001930
64022798:	mov    edx,DWORD PTR [esp+0x8]
6402279c:	lea    eax,[edx-0x30]
6402279f:	mov    ecx,DWORD PTR [edx-0x34]
640227a2:	xor    ecx,eax
640227a4:	call   0x6401257c
640227a9:	add    eax,0xc
640227ac:	mov    ecx,DWORD PTR [edx-0x4]
640227af:	xor    ecx,eax
640227b1:	call   0x6401257c
640227b6:	mov    eax,0x6402a7f8
640227bb:	jmp    0x6401223e
640227c0:	mov    ecx,DWORD PTR [ebp-0x10]
640227c3:	jmp    0x64001930
640227c8:	mov    edx,DWORD PTR [esp+0x8]
640227cc:	lea    eax,[edx-0xc]
640227cf:	mov    ecx,DWORD PTR [edx-0x10]
640227d2:	xor    ecx,eax
640227d4:	call   0x6401257c
640227d9:	mov    eax,0x6402a824
640227de:	jmp    0x6401223e
640227e3:	int3   
640227e4:	int3   
640227e5:	int3   
640227e6:	int3   
640227e7:	int3   
640227e8:	int3   
640227e9:	int3   
640227ea:	int3   
640227eb:	int3   
640227ec:	int3   
640227ed:	int3   
640227ee:	int3   
640227ef:	int3   
640227f0:	lea    ecx,[ebp-0x10]
640227f3:	jmp    0x64001930
640227f8:	mov    edx,DWORD PTR [esp+0x8]
640227fc:	lea    eax,[edx-0x8]
640227ff:	mov    ecx,DWORD PTR [edx-0xc]
64022802:	xor    ecx,eax
64022804:	call   0x6401257c
64022809:	mov    eax,0x6402a850
6402280e:	jmp    0x6401223e
64022813:	int3   
64022814:	int3   
64022815:	int3   
64022816:	int3   
64022817:	int3   
64022818:	int3   
64022819:	int3   
6402281a:	int3   
6402281b:	int3   
6402281c:	int3   
6402281d:	int3   
6402281e:	int3   
6402281f:	int3   
64022820:	mov    ecx,DWORD PTR [ebp-0x10]
64022823:	jmp    0x64001930
64022828:	mov    edx,DWORD PTR [esp+0x8]
6402282c:	lea    eax,[edx-0xc]
6402282f:	mov    ecx,DWORD PTR [edx-0x10]
64022832:	xor    ecx,eax
64022834:	call   0x6401257c
64022839:	mov    eax,0x6402a87c
6402283e:	jmp    0x6401223e
64022843:	int3   
64022844:	int3   
64022845:	int3   
64022846:	int3   
64022847:	int3   
64022848:	int3   
64022849:	int3   
6402284a:	int3   
6402284b:	int3   
6402284c:	int3   
6402284d:	int3   
6402284e:	int3   
6402284f:	int3   
64022850:	lea    edi,[ebp-0x58]
64022853:	jmp    0x6400ab80
64022858:	lea    edi,[ebp-0x40]
6402285b:	jmp    0x6400ab80
64022860:	lea    edi,[ebp-0x38]
64022863:	jmp    0x6400ab80
64022868:	lea    edi,[ebp-0x3c]
6402286b:	jmp    0x6400ab80
64022870:	lea    edi,[ebp-0x40]
64022873:	jmp    0x6400ab80
64022878:	lea    ecx,[ebp-0x24]
6402287b:	jmp    0x6400aef0
64022880:	mov    edx,DWORD PTR [esp+0x8]
64022884:	lea    eax,[edx-0x60]
64022887:	mov    ecx,DWORD PTR [edx-0x64]
6402288a:	xor    ecx,eax
6402288c:	call   0x6401257c
64022891:	mov    eax,0x6402a8d0
64022896:	jmp    0x6401223e
6402289b:	int3   
6402289c:	int3   
6402289d:	int3   
6402289e:	int3   
6402289f:	int3   
640228a0:	lea    eax,[ebp-0x24]
640228a3:	jmp    0x6400ba10
640228a8:	lea    ecx,[ebp-0x10]
640228ab:	jmp    0x64001930
640228b0:	lea    ecx,[ebp-0x18]
640228b3:	jmp    0x64001930
640228b8:	lea    ecx,[ebp-0x40]
640228bb:	jmp    0x64001650
640228c0:	mov    edx,DWORD PTR [esp+0x8]
640228c4:	lea    eax,[edx+0xc]
640228c7:	mov    ecx,DWORD PTR [edx-0x44]
640228ca:	xor    ecx,eax
640228cc:	call   0x6401257c
640228d1:	mov    ecx,DWORD PTR [edx+0x294]
640228d7:	xor    ecx,eax
640228d9:	call   0x6401257c
640228de:	mov    eax,0x6402a914
640228e3:	jmp    0x6401223e
640228e8:	int3   
640228e9:	int3   
640228ea:	int3   
640228eb:	int3   
640228ec:	int3   
640228ed:	int3   
640228ee:	int3   
640228ef:	int3   
640228f0:	lea    ecx,[ebp-0x1005c]
640228f6:	jmp    0x64001650
640228fb:	lea    ecx,[ebp-0x10074]
64022901:	jmp    0x64002760
64022906:	lea    ecx,[ebp-0x10074]
6402290c:	jmp    0x64002760
64022911:	lea    ecx,[ebp-0x1005c]
64022917:	jmp    0x64001650
6402291c:	mov    edx,DWORD PTR [esp+0x8]
64022920:	lea    eax,[edx-0x10084]
64022926:	mov    ecx,DWORD PTR [edx-0x10088]
6402292c:	xor    ecx,eax
6402292e:	call   0x6401257c
64022933:	add    eax,0x10
64022936:	mov    ecx,DWORD PTR [edx-0x4]
64022939:	xor    ecx,eax
6402293b:	call   0x6401257c
64022940:	mov    eax,0x6402a958
64022945:	jmp    0x6401223e
6402294a:	int3   
6402294b:	int3   
6402294c:	int3   
6402294d:	int3   
6402294e:	int3   
6402294f:	int3   
64022950:	lea    ecx,[ebp-0x30]
64022953:	jmp    0x64001650
64022958:	lea    ecx,[ebp-0x5c]
6402295b:	jmp    0x64001650
64022960:	mov    edx,DWORD PTR [esp+0x8]
64022964:	lea    eax,[edx-0x74]
64022967:	mov    ecx,DWORD PTR [edx-0x78]
6402296a:	xor    ecx,eax
6402296c:	call   0x6401257c
64022971:	add    eax,0xc
64022974:	mov    ecx,DWORD PTR [edx-0x8]
64022977:	xor    ecx,eax
64022979:	call   0x6401257c
6402297e:	mov    eax,0x6402a98c
64022983:	jmp    0x6401223e
64022988:	int3   
64022989:	int3   
6402298a:	int3   
6402298b:	int3   
6402298c:	int3   
6402298d:	int3   
6402298e:	int3   
6402298f:	int3   
64022990:	mov    edx,DWORD PTR [esp+0x8]
64022994:	lea    eax,[edx+0xc]
64022997:	mov    ecx,DWORD PTR [edx-0x14]
6402299a:	xor    ecx,eax
6402299c:	call   0x6401257c
640229a1:	mov    eax,0x6402a9e4
640229a6:	jmp    0x6401223e
640229ab:	int3   
640229ac:	int3   
640229ad:	int3   
640229ae:	int3   
640229af:	int3   
640229b0:	mov    ecx,DWORD PTR [ebp-0x10]
640229b3:	jmp    0x64001930
640229b8:	mov    edx,DWORD PTR [esp+0x8]
640229bc:	lea    eax,[edx-0xc]
640229bf:	mov    ecx,DWORD PTR [edx-0x10]
640229c2:	xor    ecx,eax
640229c4:	call   0x6401257c
640229c9:	mov    eax,0x6402aa10
640229ce:	jmp    0x6401223e
640229d3:	int3   
640229d4:	int3   
640229d5:	int3   
640229d6:	int3   
640229d7:	int3   
640229d8:	int3   
640229d9:	int3   
640229da:	int3   
640229db:	int3   
640229dc:	int3   
640229dd:	int3   
640229de:	int3   
640229df:	int3   
640229e0:	lea    ecx,[ebp-0x1c]
640229e3:	jmp    0x64001930
640229e8:	mov    edx,DWORD PTR [esp+0x8]
640229ec:	lea    eax,[edx-0x1c]
640229ef:	mov    ecx,DWORD PTR [edx-0x20]
640229f2:	xor    ecx,eax
640229f4:	call   0x6401257c
640229f9:	mov    eax,0x6402aa3c
640229fe:	jmp    0x6401223e
64022a03:	int3   
64022a04:	int3   
64022a05:	int3   
64022a06:	int3   
64022a07:	int3   
64022a08:	int3   
64022a09:	int3   
64022a0a:	int3   
64022a0b:	int3   
64022a0c:	int3   
64022a0d:	int3   
64022a0e:	int3   
64022a0f:	int3   
64022a10:	mov    edx,DWORD PTR [esp+0x8]
64022a14:	lea    eax,[edx+0xc]
64022a17:	mov    ecx,DWORD PTR [edx-0x16c]
64022a1d:	xor    ecx,eax
64022a1f:	call   0x6401257c
64022a24:	mov    ecx,DWORD PTR [edx-0x8]
64022a27:	xor    ecx,eax
64022a29:	call   0x6401257c
64022a2e:	mov    eax,0x6402aa94
64022a33:	jmp    0x6401223e
64022a38:	int3   
64022a39:	int3   
64022a3a:	int3   
64022a3b:	int3   
64022a3c:	int3   
64022a3d:	int3   
64022a3e:	int3   
64022a3f:	int3   
64022a40:	mov    eax,ds:0x640303dc
64022a45:	and    eax,0xfffffffe
64022a48:	mov    ds:0x640303dc,eax
64022a4d:	ret    
64022a4e:	lea    ecx,[ebp-0x434]
64022a54:	jmp    0x64001650
64022a59:	lea    ecx,[ebp-0x460]
64022a5f:	jmp    0x64001650
64022a64:	mov    edx,DWORD PTR [esp+0x8]
64022a68:	lea    eax,[edx-0x46c]
64022a6e:	mov    ecx,DWORD PTR [edx-0x470]
64022a74:	xor    ecx,eax
64022a76:	call   0x6401257c
64022a7b:	add    eax,0xc
64022a7e:	mov    ecx,DWORD PTR [edx-0x8]
64022a81:	xor    ecx,eax
64022a83:	call   0x6401257c
64022a88:	mov    eax,0x6402aad0
64022a8d:	jmp    0x6401223e
64022a92:	int3   
64022a93:	int3   
64022a94:	int3   
64022a95:	int3   
64022a96:	int3   
64022a97:	int3   
64022a98:	int3   
64022a99:	int3   
64022a9a:	int3   
64022a9b:	int3   
64022a9c:	int3   
64022a9d:	int3   
64022a9e:	int3   
64022a9f:	int3   
64022aa0:	lea    esi,[ebp-0x840]
64022aa6:	jmp    0x64002bd0
64022aab:	lea    ecx,[ebp-0x848]
64022ab1:	jmp    0x64001930
64022ab6:	mov    edx,DWORD PTR [esp+0x8]
64022aba:	lea    eax,[edx-0x84c]
64022ac0:	mov    ecx,DWORD PTR [edx-0x850]
64022ac6:	xor    ecx,eax
64022ac8:	call   0x6401257c
64022acd:	add    eax,0xc
64022ad0:	mov    ecx,DWORD PTR [edx-0x8]
64022ad3:	xor    ecx,eax
64022ad5:	call   0x6401257c
64022ada:	mov    eax,0x6402ab04
64022adf:	jmp    0x6401223e
64022ae4:	int3   
64022ae5:	int3   
64022ae6:	int3   
64022ae7:	int3   
64022ae8:	int3   
64022ae9:	int3   
64022aea:	int3   
64022aeb:	int3   
64022aec:	int3   
64022aed:	int3   
64022aee:	int3   
64022aef:	int3   
64022af0:	mov    eax,DWORD PTR [ebp-0x54]
64022af3:	and    eax,0x1
64022af6:	je     0x64022b08
64022afc:	and    DWORD PTR [ebp-0x54],0xfffffffe
64022b00:	mov    ecx,DWORD PTR [ebp+0x4]
64022b03:	jmp    0x64001930
64022b08:	ret    
64022b09:	lea    ecx,[ebp-0x50]
64022b0c:	jmp    0x64001650
64022b11:	lea    ecx,[ebp-0x50]
64022b14:	jmp    0x64001650
64022b19:	mov    edx,DWORD PTR [esp+0x8]
64022b1d:	lea    eax,[edx-0x54]
64022b20:	mov    ecx,DWORD PTR [edx-0x58]
64022b23:	xor    ecx,eax
64022b25:	call   0x6401257c
64022b2a:	mov    eax,0x6402ab40
64022b2f:	jmp    0x6401223e
64022b34:	int3   
64022b35:	int3   
64022b36:	int3   
64022b37:	int3   
64022b38:	int3   
64022b39:	int3   
64022b3a:	int3   
64022b3b:	int3   
64022b3c:	int3   
64022b3d:	int3   
64022b3e:	int3   
64022b3f:	int3   
64022b40:	lea    ecx,[ebp+0x4]
64022b43:	jmp    0x64001930
64022b48:	lea    ecx,[ebp-0x58]
64022b4b:	jmp    0x64001680
64022b50:	lea    ecx,[ebp-0x50]
64022b53:	jmp    0x64001650
64022b58:	lea    ecx,[ebp-0x50]
64022b5b:	jmp    0x64001650
64022b60:	mov    edx,DWORD PTR [esp+0x8]
64022b64:	lea    eax,[edx-0x58]
64022b67:	mov    ecx,DWORD PTR [edx-0x5c]
64022b6a:	xor    ecx,eax
64022b6c:	call   0x6401257c
64022b71:	mov    eax,0x6402ab84
64022b76:	jmp    0x6401223e
64022b7b:	int3   
64022b7c:	int3   
64022b7d:	int3   
64022b7e:	int3   
64022b7f:	int3   
64022b80:	lea    ecx,[ebp-0x434]
64022b86:	jmp    0x64001930
64022b8b:	mov    edx,DWORD PTR [esp+0x8]
64022b8f:	lea    eax,[edx-0x434]
64022b95:	mov    ecx,DWORD PTR [edx-0x438]
64022b9b:	xor    ecx,eax
64022b9d:	call   0x6401257c
64022ba2:	add    eax,0xc
64022ba5:	mov    ecx,DWORD PTR [edx-0x8]
64022ba8:	xor    ecx,eax
64022baa:	call   0x6401257c
64022baf:	mov    eax,0x6402abb0
64022bb4:	jmp    0x6401223e
64022bb9:	int3   
64022bba:	int3   
64022bbb:	int3   
64022bbc:	int3   
64022bbd:	int3   
64022bbe:	int3   
64022bbf:	int3   
64022bc0:	lea    edi,[ebp-0x18]
64022bc3:	jmp    0x6400ab80
64022bc8:	lea    edi,[ebp-0x1c]
64022bcb:	jmp    0x6400ab80
64022bd0:	lea    edi,[ebp-0x14]
64022bd3:	jmp    0x6400ab80
64022bd8:	mov    edx,DWORD PTR [esp+0x8]
64022bdc:	lea    eax,[edx-0x1c]
64022bdf:	mov    ecx,DWORD PTR [edx-0x20]
64022be2:	xor    ecx,eax
64022be4:	call   0x6401257c
64022be9:	mov    eax,0x6402abfc
64022bee:	jmp    0x6401223e
64022bf3:	int3   
64022bf4:	int3   
64022bf5:	int3   
64022bf6:	int3   
64022bf7:	int3   
64022bf8:	int3   
64022bf9:	int3   
64022bfa:	int3   
64022bfb:	int3   
64022bfc:	int3   
64022bfd:	int3   
64022bfe:	int3   
64022bff:	int3   
64022c00:	lea    ecx,[ebp+0x40c]
64022c06:	jmp    0x64001930
64022c0b:	mov    eax,ds:0x640303ec
64022c10:	and    eax,0xfffffffe
64022c13:	mov    ds:0x640303ec,eax
64022c18:	ret    
64022c19:	lea    eax,[ebp-0x34]
64022c1c:	jmp    0x64003e40
64022c21:	lea    ecx,[ebp-0x28]
64022c24:	jmp    0x64001650
64022c29:	lea    ecx,[ebp-0x28]
64022c2c:	jmp    0x64001650
64022c31:	lea    ecx,[ebp-0x28]
64022c34:	jmp    0x64001650
64022c39:	lea    ecx,[ebp-0x28]
64022c3c:	jmp    0x64001650
64022c41:	lea    ecx,[ebp-0x28]
64022c44:	jmp    0x64001650
64022c49:	lea    ecx,[ebp-0x28]
64022c4c:	jmp    0x64001650
64022c51:	lea    ecx,[ebp-0x28]
64022c54:	jmp    0x64001650
64022c59:	lea    ecx,[ebp-0x28]
64022c5c:	jmp    0x64001650
64022c61:	lea    ecx,[ebp-0x28]
64022c64:	jmp    0x64001650
64022c69:	lea    ecx,[ebp-0x28]
64022c6c:	jmp    0x64001650
64022c71:	lea    ecx,[ebp-0x28]
64022c74:	jmp    0x64001650
64022c79:	lea    ecx,[ebp-0x28]
64022c7c:	jmp    0x64001650
64022c81:	lea    ecx,[ebp-0x28]
64022c84:	jmp    0x64001650
64022c89:	lea    ecx,[ebp-0x28]
64022c8c:	jmp    0x64001650
64022c91:	lea    ecx,[ebp-0x28]
64022c94:	jmp    0x64001650
64022c99:	lea    ecx,[ebp-0x28]
64022c9c:	jmp    0x64001650
64022ca1:	lea    ecx,[ebp-0x28]
64022ca4:	jmp    0x64001650
64022ca9:	lea    ecx,[ebp-0x28]
64022cac:	jmp    0x64001650
64022cb1:	lea    ecx,[ebp-0x28]
64022cb4:	jmp    0x64001650
64022cb9:	lea    ecx,[ebp-0x28]
64022cbc:	jmp    0x64001650
64022cc1:	lea    ecx,[ebp-0x28]
64022cc4:	jmp    0x64001650
64022cc9:	lea    ecx,[ebp-0x28]
64022ccc:	jmp    0x64001650
64022cd1:	lea    ecx,[ebp-0x28]
64022cd4:	jmp    0x64001650
64022cd9:	lea    ecx,[ebp-0x28]
64022cdc:	jmp    0x64001650
64022ce1:	lea    ecx,[ebp-0x28]
64022ce4:	jmp    0x64001650
64022ce9:	lea    ecx,[ebp-0x28]
64022cec:	jmp    0x64001650
64022cf1:	lea    ecx,[ebp-0x28]
64022cf4:	jmp    0x64001650
64022cf9:	lea    ecx,[ebp-0x28]
64022cfc:	jmp    0x64001650
64022d01:	lea    ecx,[ebp-0x28]
64022d04:	jmp    0x64001650
64022d09:	lea    ecx,[ebp-0x28]
64022d0c:	jmp    0x64001650
64022d11:	lea    ecx,[ebp-0x28]
64022d14:	jmp    0x64001650
64022d19:	lea    ecx,[ebp-0x28]
64022d1c:	jmp    0x64001650
64022d21:	lea    ecx,[ebp-0x28]
64022d24:	jmp    0x64001650
64022d29:	lea    ecx,[ebp-0x28]
64022d2c:	jmp    0x64001650
64022d31:	lea    ecx,[ebp-0x28]
64022d34:	jmp    0x64001650
64022d39:	lea    ecx,[ebp-0x28]
64022d3c:	jmp    0x64001650
64022d41:	lea    ecx,[ebp-0x28]
64022d44:	jmp    0x64001650
64022d49:	lea    ecx,[ebp-0x28]
64022d4c:	jmp    0x64001650
64022d51:	lea    ecx,[ebp-0x28]
64022d54:	jmp    0x64001650
64022d59:	lea    ecx,[ebp-0x28]
64022d5c:	jmp    0x64001650
64022d61:	lea    ecx,[ebp-0x28]
64022d64:	jmp    0x64001650
64022d69:	lea    ecx,[ebp-0x28]
64022d6c:	jmp    0x64001650
64022d71:	lea    ecx,[ebp-0x28]
64022d74:	jmp    0x64001650
64022d79:	lea    ecx,[ebp-0x28]
64022d7c:	jmp    0x64001650
64022d81:	lea    ecx,[ebp-0x28]
64022d84:	jmp    0x64001650
64022d89:	lea    ecx,[ebp-0x28]
64022d8c:	jmp    0x64001650
64022d91:	lea    ecx,[ebp-0x28]
64022d94:	jmp    0x64001650
64022d99:	lea    ecx,[ebp-0x28]
64022d9c:	jmp    0x64001650
64022da1:	lea    ecx,[ebp-0x28]
64022da4:	jmp    0x64001650
64022da9:	lea    ecx,[ebp-0x28]
64022dac:	jmp    0x64001650
64022db1:	lea    ecx,[ebp-0x28]
64022db4:	jmp    0x64001650
64022db9:	lea    ecx,[ebp-0x28]
64022dbc:	jmp    0x64001650
64022dc1:	lea    eax,[ebp-0x40]
64022dc4:	jmp    0x64003e40
64022dc9:	lea    ecx,[ebp-0x28]
64022dcc:	jmp    0x64001650
64022dd1:	mov    edx,DWORD PTR [esp+0x8]
64022dd5:	lea    eax,[edx+0xc]
64022dd8:	mov    ecx,DWORD PTR [edx-0x4c]
64022ddb:	xor    ecx,eax
64022ddd:	call   0x6401257c
64022de2:	mov    ecx,DWORD PTR [edx+0x40c]
64022de8:	xor    ecx,eax
64022dea:	call   0x6401257c
64022def:	mov    eax,0x6402ade8
64022df4:	jmp    0x6401223e
64022df9:	int3   
64022dfa:	int3   
64022dfb:	int3   
64022dfc:	int3   
64022dfd:	int3   
64022dfe:	int3   
64022dff:	int3   
64022e00:	lea    ecx,[ebp+0x40c]
64022e06:	jmp    0x64001930
64022e0b:	mov    eax,ds:0x640303fc
64022e10:	and    eax,0xfffffffe
64022e13:	mov    ds:0x640303fc,eax
64022e18:	ret    
64022e19:	lea    eax,[ebp-0x34]
64022e1c:	jmp    0x64003e40
64022e21:	lea    ecx,[ebp-0x28]
64022e24:	jmp    0x64001650
64022e29:	lea    ecx,[ebp-0x28]
64022e2c:	jmp    0x64001650
64022e31:	lea    ecx,[ebp-0x28]
64022e34:	jmp    0x64001650
64022e39:	lea    ecx,[ebp-0x28]
64022e3c:	jmp    0x64001650
64022e41:	lea    ecx,[ebp-0x28]
64022e44:	jmp    0x64001650
64022e49:	lea    ecx,[ebp-0x28]
64022e4c:	jmp    0x64001650
64022e51:	lea    ecx,[ebp-0x28]
64022e54:	jmp    0x64001650
64022e59:	lea    ecx,[ebp-0x28]
64022e5c:	jmp    0x64001650
64022e61:	lea    ecx,[ebp-0x28]
64022e64:	jmp    0x64001650
64022e69:	lea    ecx,[ebp-0x28]
64022e6c:	jmp    0x64001650
64022e71:	lea    ecx,[ebp-0x28]
64022e74:	jmp    0x64001650
64022e79:	lea    ecx,[ebp-0x28]
64022e7c:	jmp    0x64001650
64022e81:	lea    ecx,[ebp-0x28]
64022e84:	jmp    0x64001650
64022e89:	lea    ecx,[ebp-0x28]
64022e8c:	jmp    0x64001650
64022e91:	lea    ecx,[ebp-0x28]
64022e94:	jmp    0x64001650
64022e99:	lea    ecx,[ebp-0x28]
64022e9c:	jmp    0x64001650
64022ea1:	lea    ecx,[ebp-0x28]
64022ea4:	jmp    0x64001650
64022ea9:	lea    ecx,[ebp-0x28]
64022eac:	jmp    0x64001650
64022eb1:	lea    ecx,[ebp-0x28]
64022eb4:	jmp    0x64001650
64022eb9:	lea    ecx,[ebp-0x28]
64022ebc:	jmp    0x64001650
64022ec1:	lea    ecx,[ebp-0x28]
64022ec4:	jmp    0x64001650
64022ec9:	lea    ecx,[ebp-0x28]
64022ecc:	jmp    0x64001650
64022ed1:	lea    ecx,[ebp-0x28]
64022ed4:	jmp    0x64001650
64022ed9:	lea    ecx,[ebp-0x28]
64022edc:	jmp    0x64001650
64022ee1:	lea    ecx,[ebp-0x28]
64022ee4:	jmp    0x64001650
64022ee9:	lea    ecx,[ebp-0x28]
64022eec:	jmp    0x64001650
64022ef1:	lea    ecx,[ebp-0x28]
64022ef4:	jmp    0x64001650
64022ef9:	lea    ecx,[ebp-0x28]
64022efc:	jmp    0x64001650
64022f01:	lea    ecx,[ebp-0x28]
64022f04:	jmp    0x64001650
64022f09:	lea    ecx,[ebp-0x28]
64022f0c:	jmp    0x64001650
64022f11:	lea    ecx,[ebp-0x28]
64022f14:	jmp    0x64001650
64022f19:	lea    ecx,[ebp-0x28]
64022f1c:	jmp    0x64001650
64022f21:	lea    ecx,[ebp-0x28]
64022f24:	jmp    0x64001650
64022f29:	lea    ecx,[ebp-0x28]
64022f2c:	jmp    0x64001650
64022f31:	lea    ecx,[ebp-0x28]
64022f34:	jmp    0x64001650
64022f39:	lea    ecx,[ebp-0x28]
64022f3c:	jmp    0x64001650
64022f41:	lea    ecx,[ebp-0x28]
64022f44:	jmp    0x64001650
64022f49:	lea    ecx,[ebp-0x28]
64022f4c:	jmp    0x64001650
64022f51:	lea    eax,[ebp-0x40]
64022f54:	jmp    0x64003e40
64022f59:	lea    ecx,[ebp-0x28]
64022f5c:	jmp    0x64001650
64022f61:	mov    edx,DWORD PTR [esp+0x8]
64022f65:	lea    eax,[edx+0xc]
64022f68:	mov    ecx,DWORD PTR [edx-0x4c]
64022f6b:	xor    ecx,eax
64022f6d:	call   0x6401257c
64022f72:	mov    ecx,DWORD PTR [edx+0x40c]
64022f78:	xor    ecx,eax
64022f7a:	call   0x6401257c
64022f7f:	mov    eax,0x6402af68
64022f84:	jmp    0x6401223e
64022f89:	int3   
64022f8a:	int3   
64022f8b:	int3   
64022f8c:	int3   
64022f8d:	int3   
64022f8e:	int3   
64022f8f:	int3   
64022f90:	mov    eax,DWORD PTR [ebp-0x54]
64022f93:	and    eax,0x1
64022f96:	je     0x64022fa8
64022f9c:	and    DWORD PTR [ebp-0x54],0xfffffffe
64022fa0:	mov    ecx,DWORD PTR [ebp+0x4]
64022fa3:	jmp    0x64001930
64022fa8:	ret    
64022fa9:	lea    ecx,[ebp-0x50]
64022fac:	jmp    0x64001650
64022fb1:	mov    edx,DWORD PTR [esp+0x8]
64022fb5:	lea    eax,[edx-0x58]
64022fb8:	mov    ecx,DWORD PTR [edx-0x5c]
64022fbb:	xor    ecx,eax
64022fbd:	call   0x6401257c
64022fc2:	mov    eax,0x6402af9c
64022fc7:	jmp    0x6401223e
64022fcc:	int3   
64022fcd:	int3   
64022fce:	int3   
64022fcf:	int3   
64022fd0:	mov    eax,DWORD PTR [ebp-0x28]
64022fd3:	and    eax,0x1
64022fd6:	je     0x64022fe8
64022fdc:	and    DWORD PTR [ebp-0x28],0xfffffffe
64022fe0:	mov    ecx,DWORD PTR [ebp+0x4]
64022fe3:	jmp    0x64001930
64022fe8:	ret    
64022fe9:	lea    ecx,[ebp-0x24]
64022fec:	jmp    0x64001930
64022ff1:	lea    ecx,[ebp-0x20]
64022ff4:	jmp    0x64001930
64022ff9:	lea    ecx,[ebp-0x1c]
64022ffc:	jmp    0x64001930
64023001:	lea    ecx,[ebp-0x18]
64023004:	jmp    0x64001930
64023009:	lea    ecx,[ebp-0x14]
6402300c:	jmp    0x64001930
64023011:	lea    ecx,[ebp-0x10]
64023014:	jmp    0x64001930
64023019:	mov    edx,DWORD PTR [esp+0x8]
6402301d:	lea    eax,[edx-0x30]
64023020:	mov    ecx,DWORD PTR [edx-0x34]
64023023:	xor    ecx,eax
64023025:	call   0x6401257c
6402302a:	mov    eax,0x6402aff8
6402302f:	jmp    0x6401223e
64023034:	int3   
64023035:	int3   
64023036:	int3   
64023037:	int3   
64023038:	int3   
64023039:	int3   
6402303a:	int3   
6402303b:	int3   
6402303c:	int3   
6402303d:	int3   
6402303e:	int3   
6402303f:	int3   
64023040:	mov    eax,DWORD PTR [ebp-0x3c]
64023043:	and    eax,0x1
64023046:	je     0x64023058
6402304c:	and    DWORD PTR [ebp-0x3c],0xfffffffe
64023050:	mov    ecx,DWORD PTR [ebp+0x4]
64023053:	jmp    0x64001930
64023058:	ret    
64023059:	lea    ecx,[ebp-0x50]
6402305c:	jmp    0x64001930
64023061:	lea    ecx,[ebp-0x38]
64023064:	jmp    0x64001930
64023069:	mov    edx,DWORD PTR [esp+0x8]
6402306d:	lea    eax,[edx-0x54]
64023070:	mov    ecx,DWORD PTR [edx-0x58]
64023073:	xor    ecx,eax
64023075:	call   0x6401257c
6402307a:	mov    eax,0x6402b034
6402307f:	jmp    0x6401223e
64023084:	int3   
64023085:	int3   
64023086:	int3   
64023087:	int3   
64023088:	int3   
64023089:	int3   
6402308a:	int3   
6402308b:	int3   
6402308c:	int3   
6402308d:	int3   
6402308e:	int3   
6402308f:	int3   
64023090:	lea    ecx,[ebp+0xc]
64023093:	jmp    0x64001930
64023098:	lea    ecx,[ebp-0x28]
6402309b:	jmp    0x64001650
640230a0:	lea    ecx,[ebp-0x6c]
640230a3:	jmp    0x64001650
640230a8:	lea    ecx,[ebp-0x88]
640230ae:	jmp    0x64001650
640230b3:	lea    ecx,[ebp-0xc0]
640230b9:	jmp    0x64001650
640230be:	lea    ecx,[ebp-0xa4]
640230c4:	jmp    0x64001650
640230c9:	mov    edx,DWORD PTR [esp+0x8]
640230cd:	lea    eax,[edx+0xc]
640230d0:	mov    ecx,DWORD PTR [edx-0xc4]
640230d6:	xor    ecx,eax
640230d8:	call   0x6401257c
640230dd:	mov    ecx,DWORD PTR [edx+0x80]
640230e3:	xor    ecx,eax
640230e5:	call   0x6401257c
640230ea:	mov    eax,0x6402b088
640230ef:	jmp    0x6401223e
640230f4:	int3   
640230f5:	int3   
640230f6:	int3   
640230f7:	int3   
640230f8:	int3   
640230f9:	int3   
640230fa:	int3   
640230fb:	int3   
640230fc:	int3   
640230fd:	int3   
640230fe:	int3   
640230ff:	int3   
64023100:	mov    ecx,0x6402d4ec
64023105:	call   0x640119cd
6402310a:	push   0x64023281
6402310f:	call   0x640126af
64023114:	pop    ecx
64023115:	ret    
64023116:	mov    ecx,0x6402d528
6402311b:	call   0x640119a7
64023120:	push   0x6402328b
64023125:	call   0x640126af
6402312a:	pop    ecx
6402312b:	ret    
6402312c:	call   DWORD PTR ds:0x64024104
64023132:	push   0x64023295
64023137:	mov    DWORD PTR ds:0x6402d554,0x64024af0
64023141:	mov    ds:0x6402d558,eax
64023146:	mov    BYTE PTR ds:0x6402d55c,0x0
6402314d:	call   0x640126af
64023152:	pop    ecx
64023153:	ret    
64023154:	push   0x6402d554
64023159:	mov    ecx,0x6402d560
6402315e:	call   0x64011b40
64023163:	push   0x6402329f
64023168:	call   0x640126af
6402316d:	pop    ecx
6402316e:	ret    
6402316f:	int3   
64023170:	push   0x640232c0
64023175:	call   0x640126af
6402317a:	pop    ecx
6402317b:	ret    
6402317c:	int3   
6402317d:	int3   
6402317e:	int3   
6402317f:	int3   
64023180:	push   ecx
64023181:	mov    eax,0x640303d0
64023186:	call   0x64007920
6402318b:	pop    ecx
6402318c:	ret    
6402318d:	int3   
6402318e:	int3   
6402318f:	int3   
64023190:	mov    eax,0x640303f0
64023195:	jmp    0x64007920
6402319a:	int3   
6402319b:	int3   
6402319c:	int3   
6402319d:	int3   
6402319e:	int3   
6402319f:	int3   
640231a0:	mov    eax,0x640303e0
640231a5:	jmp    0x64007920
640231aa:	int3   
640231ab:	int3   
640231ac:	int3   
640231ad:	int3   
640231ae:	int3   
640231af:	int3   
640231b0:	push   ebp
640231b1:	mov    ebp,esp
640231b3:	and    esp,0xfffffff8
640231b6:	mov    eax,ds:0x64030358
640231bb:	mov    edx,DWORD PTR [eax]
640231bd:	sub    esp,0xc
640231c0:	push   esi
640231c1:	push   eax
640231c2:	mov    ecx,0x64030354
640231c7:	push   ecx
640231c8:	push   edx
640231c9:	mov    esi,ecx
640231cb:	push   esi
640231cc:	lea    eax,[esp+0x18]
640231d0:	push   eax
640231d1:	call   0x640091a0
640231d6:	mov    ecx,DWORD PTR ds:0x64030358
640231dc:	push   ecx
640231dd:	call   0x64011d22
640231e2:	add    esp,0x4
640231e5:	xor    eax,eax
640231e7:	mov    ds:0x64030358,eax
640231ec:	mov    ds:0x6403035c,eax
640231f1:	pop    esi
640231f2:	mov    esp,ebp
640231f4:	pop    ebp
640231f5:	ret    
640231f6:	int3   
640231f7:	int3   
640231f8:	int3   
640231f9:	int3   
640231fa:	int3   
640231fb:	int3   
640231fc:	int3   
640231fd:	int3   
640231fe:	int3   
640231ff:	int3   
64023200:	push   ebp
64023201:	mov    ebp,esp
64023203:	and    esp,0xfffffff8
64023206:	mov    eax,ds:0x6403034c
6402320b:	mov    edx,DWORD PTR [eax]
6402320d:	sub    esp,0xc
64023210:	push   esi
64023211:	push   eax
64023212:	mov    ecx,0x64030348
64023217:	push   ecx
64023218:	push   edx
64023219:	mov    esi,ecx
6402321b:	push   esi
6402321c:	lea    eax,[esp+0x18]
64023220:	push   eax
64023221:	call   0x64008f40
64023226:	mov    ecx,DWORD PTR ds:0x6403034c
6402322c:	push   ecx
6402322d:	call   0x64011d22
64023232:	add    esp,0x4
64023235:	xor    eax,eax
64023237:	mov    ds:0x6403034c,eax
6402323c:	mov    ds:0x64030350,eax
64023241:	pop    esi
64023242:	mov    esp,ebp
64023244:	pop    ebp
64023245:	ret    
64023246:	int3   
64023247:	int3   
64023248:	int3   
64023249:	int3   
6402324a:	int3   
6402324b:	int3   
6402324c:	int3   
6402324d:	int3   
6402324e:	int3   
6402324f:	int3   
64023250:	mov    eax,ds:0x6402d4dc
64023255:	test   eax,eax
64023257:	je     0x64023262
64023259:	push   eax
6402325a:	call   0x64011d22
6402325f:	add    esp,0x4
64023262:	mov    DWORD PTR ds:0x6402d4dc,0x0
6402326c:	mov    DWORD PTR ds:0x6402d4e0,0x0
64023276:	mov    DWORD PTR ds:0x6402d4e4,0x0
64023280:	ret    
64023281:	mov    ecx,0x6402d4ec
64023286:	jmp    0x6401193b
6402328b:	mov    ecx,0x6402d528
64023290:	jmp    0x64011a7c
64023295:	mov    ecx,0x6402d554
6402329a:	jmp    0x64011a94
6402329f:	mov    DWORD PTR ds:0x6402d560,0x64024b04
640232a9:	ret    
640232aa:	mov    DWORD PTR ds:0x6402d580,0x6402425c
640232b4:	mov    ecx,0x6402d580
640232b9:	jmp    0x64011e3b
640232be:	int3   
640232bf:	int3   
640232c0:	push   0x6402d038
640232c5:	call   DWORD PTR ds:0x64024190
640232cb:	ret    
