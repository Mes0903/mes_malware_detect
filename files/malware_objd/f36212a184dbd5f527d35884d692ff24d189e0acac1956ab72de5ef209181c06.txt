
f36212a184dbd5f527d35884d692ff24d189e0acac1956ab72de5ef209181c06.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xc
  401006:	mov    eax,DWORD PTR [ebp+0x8]
  401009:	mov    DWORD PTR [ebp-0x8],eax
  40100c:	mov    ecx,DWORD PTR [ebp+0xc]
  40100f:	mov    DWORD PTR [ebp-0xc],ecx
  401012:	mov    DWORD PTR [ebp-0x4],0x22b
  401019:	mov    edx,DWORD PTR [ebp-0x8]
  40101c:	cmp    edx,DWORD PTR [ebp-0xc]
  40101f:	jae    0x40102f
  401021:	mov    DWORD PTR [ebp-0x4],0x22b
  401028:	mov    eax,DWORD PTR [ebp-0x8]
  40102b:	jmp    0x401039
  40102d:	jmp    0x401039
  40102f:	mov    DWORD PTR [ebp-0x4],0x22b
  401036:	mov    eax,DWORD PTR [ebp-0xc]
  401039:	mov    esp,ebp
  40103b:	pop    ebp
  40103c:	ret    
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	sub    esp,0xc
  401046:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  40104d:	mov    DWORD PTR [ebp-0xc],0x3000
  401054:	mov    DWORD PTR [ebp-0x4],0x40
  40105b:	mov    eax,DWORD PTR [ebp-0x4]
  40105e:	push   eax
  40105f:	mov    ecx,DWORD PTR [ebp-0xc]
  401062:	push   ecx
  401063:	mov    edx,DWORD PTR [ebp+0x8]
  401066:	push   edx
  401067:	push   0x0
  401069:	push   0xffffffff
  40106b:	call   DWORD PTR ds:0x40313c
  401071:	mov    esp,ebp
  401073:	pop    ebp
  401074:	ret    
  401075:	int3   
  401076:	int3   
  401077:	int3   
  401078:	int3   
  401079:	int3   
  40107a:	int3   
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	pop    ebp
  401084:	ret    
  401085:	int3   
  401086:	int3   
  401087:	int3   
  401088:	int3   
  401089:	int3   
  40108a:	int3   
  40108b:	int3   
  40108c:	int3   
  40108d:	int3   
  40108e:	int3   
  40108f:	int3   
  401090:	push   ebp
  401091:	mov    ebp,esp
  401093:	mov    DWORD PTR ds:0x4032c4,0x405004
  40109d:	pop    ebp
  40109e:	ret    
  40109f:	int3   
  4010a0:	push   ebp
  4010a1:	mov    ebp,esp
  4010a3:	mov    DWORD PTR ds:0x4032c4,0x4515a0
  4010ad:	pop    ebp
  4010ae:	ret    
  4010af:	int3   
  4010b0:	push   ebp
  4010b1:	mov    ebp,esp
  4010b3:	mov    eax,DWORD PTR [ebp+0x8]
  4010b6:	mov    eax,DWORD PTR [eax-0x4]
  4010b9:	pop    ebp
  4010ba:	ret    
  4010bb:	int3   
  4010bc:	int3   
  4010bd:	int3   
  4010be:	int3   
  4010bf:	int3   
  4010c0:	push   ebp
  4010c1:	mov    ebp,esp
  4010c3:	mov    eax,DWORD PTR [ebp+0xc]
  4010c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c9:	movzx  eax,WORD PTR [ecx+eax*2]
  4010cd:	pop    ebp
  4010ce:	ret    
  4010cf:	int3   
  4010d0:	push   ebp
  4010d1:	mov    ebp,esp
  4010d3:	sub    esp,0x30
  4010d6:	mov    DWORD PTR [ebp-0x8],0x11cb
  4010dd:	mov    DWORD PTR [ebp-0x10],0x0
  4010e4:	jmp    0x4010ef
  4010e6:	mov    eax,DWORD PTR [ebp-0x10]
  4010e9:	add    eax,0x4
  4010ec:	mov    DWORD PTR [ebp-0x10],eax
  4010ef:	mov    ecx,DWORD PTR [ebp-0x10]
  4010f2:	cmp    ecx,DWORD PTR [ebp+0xc]
  4010f5:	jae    0x4011b6
  4010fb:	mov    DWORD PTR [ebp-0x8],0x4189
  401102:	mov    edx,DWORD PTR [ebp-0x10]
  401105:	add    edx,0x8fb5
  40110b:	mov    DWORD PTR [ebp-0x28],edx
  40110e:	mov    eax,DWORD PTR [ebp-0x28]
  401111:	mov    DWORD PTR [ebp-0x24],eax
  401114:	mov    ecx,DWORD PTR [ebp-0x24]
  401117:	mov    DWORD PTR [ebp-0x20],ecx
  40111a:	mov    edx,DWORD PTR [ebp-0x20]
  40111d:	mov    DWORD PTR [ebp-0x1c],edx
  401120:	cmp    DWORD PTR [ebp-0x10],0x0
  401124:	jne    0x401176
  401126:	push   0x104
  40112b:	push   0x4032c8
  401130:	call   DWORD PTR ds:0x403140
  401136:	push   0x403000
  40113b:	push   0x4032c8
  401140:	call   DWORD PTR ds:0x403144
  401146:	push   0x0
  401148:	push   0x80
  40114d:	push   0x3
  40114f:	push   0x0
  401151:	push   0x3
  401153:	push   0x1
  401155:	push   0x4032c8
  40115a:	call   DWORD PTR ds:0x403148
  401160:	mov    DWORD PTR [ebp-0x4],eax
  401163:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  401167:	je     0x40116f
  401169:	cmp    DWORD PTR [ebp-0x4],0x0
  40116d:	jne    0x401176
  40116f:	mov    eax,0x42
  401174:	jmp    0x4011b6
  401176:	mov    eax,DWORD PTR [ebp-0x1c]
  401179:	mov    DWORD PTR [ebp-0x30],eax
  40117c:	mov    ecx,DWORD PTR [ebp-0x30]
  40117f:	mov    DWORD PTR [ebp-0x14],ecx
  401182:	mov    edx,DWORD PTR [ebp-0x10]
  401185:	mov    DWORD PTR [ebp-0x18],edx
  401188:	mov    eax,DWORD PTR [ebp+0x8]
  40118b:	add    eax,DWORD PTR [ebp-0x10]
  40118e:	mov    DWORD PTR [ebp-0x2c],eax
  401191:	mov    ecx,DWORD PTR [ebp-0x2c]
  401194:	mov    edx,DWORD PTR [ecx]
  401196:	add    edx,DWORD PTR [ebp-0x18]
  401199:	mov    eax,DWORD PTR [ebp-0x2c]
  40119c:	mov    DWORD PTR [eax],edx
  40119e:	mov    ecx,DWORD PTR [ebp+0x8]
  4011a1:	add    ecx,DWORD PTR [ebp-0x10]
  4011a4:	mov    edx,DWORD PTR [ecx]
  4011a6:	xor    edx,DWORD PTR [ebp-0x14]
  4011a9:	mov    eax,DWORD PTR [ebp+0x8]
  4011ac:	add    eax,DWORD PTR [ebp-0x10]
  4011af:	mov    DWORD PTR [eax],edx
  4011b1:	jmp    0x4010e6
  4011b6:	mov    esp,ebp
  4011b8:	pop    ebp
  4011b9:	ret    
  4011ba:	int3   
  4011bb:	int3   
  4011bc:	int3   
  4011bd:	int3   
  4011be:	int3   
  4011bf:	int3   
  4011c0:	push   ebp
  4011c1:	mov    ebp,esp
  4011c3:	sub    esp,0x14
  4011c6:	mov    eax,DWORD PTR [ebp+0x8]
  4011c9:	cmp    DWORD PTR [eax+0x4],0x0
  4011cd:	je     0x401217
  4011cf:	mov    DWORD PTR [ebp-0x14],0x2a1
  4011d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4011d9:	mov    edx,DWORD PTR [ecx+0x4]
  4011dc:	sub    edx,0x8
  4011df:	shr    edx,1
  4011e1:	mov    DWORD PTR [ebp-0xc],edx
  4011e4:	mov    eax,DWORD PTR [ebp+0x8]
  4011e7:	add    eax,0x8
  4011ea:	mov    DWORD PTR [ebp-0x10],eax
  4011ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4011f0:	push   ecx
  4011f1:	mov    edx,DWORD PTR [ebp+0x10]
  4011f4:	push   edx
  4011f5:	mov    eax,DWORD PTR [ebp+0xc]
  4011f8:	push   eax
  4011f9:	mov    ecx,DWORD PTR [ebp-0x10]
  4011fc:	push   ecx
  4011fd:	mov    edx,DWORD PTR [ebp-0xc]
  401200:	push   edx
  401201:	call   0x401220
  401206:	add    esp,0x14
  401209:	mov    eax,DWORD PTR [ebp+0x8]
  40120c:	mov    ecx,DWORD PTR [ebp+0x8]
  40120f:	add    ecx,DWORD PTR [eax+0x4]
  401212:	mov    DWORD PTR [ebp+0x8],ecx
  401215:	jmp    0x4011c6
  401217:	mov    esp,ebp
  401219:	pop    ebp
  40121a:	ret    
  40121b:	int3   
  40121c:	int3   
  40121d:	int3   
  40121e:	int3   
  40121f:	int3   
  401220:	push   ebp
  401221:	mov    ebp,esp
  401223:	sub    esp,0xc
  401226:	mov    DWORD PTR [ebp-0x4],0x0
  40122d:	jmp    0x401238
  40122f:	mov    eax,DWORD PTR [ebp-0x4]
  401232:	add    eax,0x1
  401235:	mov    DWORD PTR [ebp-0x4],eax
  401238:	mov    ecx,DWORD PTR [ebp-0x4]
  40123b:	cmp    ecx,DWORD PTR [ebp+0x8]
  40123e:	jae    0x4012a3
  401240:	mov    edx,DWORD PTR [ebp-0x4]
  401243:	push   edx
  401244:	mov    eax,DWORD PTR [ebp+0xc]
  401247:	push   eax
  401248:	call   0x4010c0
  40124d:	add    esp,0x8
  401250:	sar    eax,0xc
  401253:	cmp    eax,0x3
  401256:	jne    0x4012a1
  401258:	mov    DWORD PTR [ebp-0xc],0xfff
  40125f:	mov    ecx,DWORD PTR [ebp-0x4]
  401262:	push   ecx
  401263:	mov    edx,DWORD PTR [ebp+0xc]
  401266:	push   edx
  401267:	call   0x4010c0
  40126c:	add    esp,0x8
  40126f:	and    eax,DWORD PTR [ebp-0xc]
  401272:	add    eax,0x2d23
  401277:	mov    DWORD PTR [ebp-0x8],eax
  40127a:	mov    eax,DWORD PTR [ebp+0x18]
  40127d:	mov    ecx,DWORD PTR [ebp+0x10]
  401280:	add    ecx,DWORD PTR [eax]
  401282:	mov    edx,DWORD PTR [ebp-0x8]
  401285:	mov    eax,DWORD PTR [ecx+edx*1-0x2d23]
  40128c:	add    eax,DWORD PTR [ebp+0x14]
  40128f:	mov    ecx,DWORD PTR [ebp+0x18]
  401292:	mov    edx,DWORD PTR [ebp+0x10]
  401295:	add    edx,DWORD PTR [ecx]
  401297:	mov    ecx,DWORD PTR [ebp-0x8]
  40129a:	mov    DWORD PTR [edx+ecx*1-0x2d23],eax
  4012a1:	jmp    0x40122f
  4012a3:	mov    esp,ebp
  4012a5:	pop    ebp
  4012a6:	ret    
  4012a7:	int3   
  4012a8:	int3   
  4012a9:	int3   
  4012aa:	int3   
  4012ab:	int3   
  4012ac:	int3   
  4012ad:	int3   
  4012ae:	int3   
  4012af:	int3   
  4012b0:	push   ebp
  4012b1:	mov    ebp,esp
  4012b3:	sub    esp,0x22c
  4012b9:	mov    DWORD PTR [ebp-0x220],0x7c
  4012c3:	mov    DWORD PTR [ebp-0x214],0x0
  4012cd:	mov    eax,ds:0x403140
  4012d2:	mov    DWORD PTR [ebp-0x4],eax
  4012d5:	push   0x104
  4012da:	lea    ecx,[ebp-0x210]
  4012e0:	push   ecx
  4012e1:	call   DWORD PTR [ebp-0x4]
  4012e4:	mov    edx,DWORD PTR ds:0x403144
  4012ea:	mov    DWORD PTR [ebp-0x224],edx
  4012f0:	mov    eax,ds:0x403148
  4012f5:	mov    DWORD PTR [ebp-0x218],eax
  4012fb:	mov    DWORD PTR [ebp-0x228],0x0
  401305:	jmp    0x401316
  401307:	mov    ecx,DWORD PTR [ebp-0x228]
  40130d:	add    ecx,0x1
  401310:	mov    DWORD PTR [ebp-0x228],ecx
  401316:	mov    edx,DWORD PTR [ebp-0x228]
  40131c:	cmp    edx,DWORD PTR [ebp+0x10]
  40131f:	jge    0x40135a
  401321:	mov    eax,DWORD PTR [ebp+0xc]
  401324:	add    eax,DWORD PTR [ebp-0x228]
  40132a:	movzx  ecx,BYTE PTR [eax]
  40132d:	mov    DWORD PTR [ebp-0x22c],ecx
  401333:	mov    DWORD PTR [ebp-0x220],0x7c
  40133d:	mov    edx,DWORD PTR [ebp+0x8]
  401340:	add    edx,DWORD PTR [ebp-0x228]
  401346:	mov    al,BYTE PTR [ebp-0x22c]
  40134c:	mov    BYTE PTR [edx],al
  40134e:	mov    DWORD PTR [ebp-0x220],0x33
  401358:	jmp    0x401307
  40135a:	mov    esp,ebp
  40135c:	pop    ebp
  40135d:	ret    
  40135e:	int3   
  40135f:	int3   
  401360:	push   ebp
  401361:	mov    ebp,esp
  401363:	sub    esp,0x50
  401366:	mov    eax,DWORD PTR [ebp+0xc]
  401369:	mov    DWORD PTR [ebp-0x50],eax
  40136c:	cmp    DWORD PTR [ebp-0x50],0x200
  401373:	ja     0x401397
  401375:	cmp    DWORD PTR [ebp-0x50],0x200
  40137c:	je     0x4013d1
  40137e:	cmp    DWORD PTR [ebp-0x50],0x2
  401382:	je     0x40154b
  401388:	cmp    DWORD PTR [ebp-0x50],0xf
  40138c:	je     0x40148d
  401392:	jmp    0x401557
  401397:	cmp    DWORD PTR [ebp-0x50],0x201
  40139e:	je     0x4013b2
  4013a0:	cmp    DWORD PTR [ebp-0x50],0x202
  4013a7:	je     0x401478
  4013ad:	jmp    0x401557
  4013b2:	mov    DWORD PTR ds:0x4032b8,0x0
  4013bc:	push   0x1
  4013be:	push   0x0
  4013c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4013c3:	push   ecx
  4013c4:	call   DWORD PTR ds:0x403150
  4013ca:	xor    eax,eax
  4013cc:	jmp    0x40156d
  4013d1:	mov    edx,DWORD PTR [ebp+0x10]
  4013d4:	and    edx,0x1
  4013d7:	je     0x401471
  4013dd:	cmp    DWORD PTR ds:0x4032b8,0x3e8
  4013e7:	jge    0x401471
  4013ed:	mov    eax,DWORD PTR [ebp+0x14]
  4013f0:	and    eax,0xffff
  4013f5:	movzx  ecx,ax
  4013f8:	mov    edx,DWORD PTR ds:0x4032b8
  4013fe:	mov    DWORD PTR [edx*8+0x4032bc],ecx
  401405:	mov    eax,DWORD PTR [ebp+0x14]
  401408:	shr    eax,0x10
  40140b:	and    eax,0xffff
  401410:	movzx  ecx,ax
  401413:	mov    edx,DWORD PTR ds:0x4032b8
  401419:	mov    DWORD PTR [edx*8+0x4032c0],ecx
  401420:	mov    eax,ds:0x4032b8
  401425:	add    eax,0x1
  401428:	mov    ds:0x4032b8,eax
  40142d:	mov    ecx,DWORD PTR [ebp+0x8]
  401430:	push   ecx
  401431:	call   DWORD PTR ds:0x403154
  401437:	mov    DWORD PTR [ebp-0x4c],eax
  40143a:	push   0x0
  40143c:	mov    edx,DWORD PTR [ebp+0x14]
  40143f:	shr    edx,0x10
  401442:	and    edx,0xffff
  401448:	movzx  eax,dx
  40144b:	push   eax
  40144c:	mov    ecx,DWORD PTR [ebp+0x14]
  40144f:	and    ecx,0xffff
  401455:	movzx  edx,cx
  401458:	push   edx
  401459:	mov    eax,DWORD PTR [ebp-0x4c]
  40145c:	push   eax
  40145d:	call   DWORD PTR ds:0x40317c
  401463:	mov    ecx,DWORD PTR [ebp-0x4c]
  401466:	push   ecx
  401467:	mov    edx,DWORD PTR [ebp+0x8]
  40146a:	push   edx
  40146b:	call   DWORD PTR ds:0x403158
  401471:	xor    eax,eax
  401473:	jmp    0x40156d
  401478:	push   0x0
  40147a:	push   0x0
  40147c:	mov    eax,DWORD PTR [ebp+0x8]
  40147f:	push   eax
  401480:	call   DWORD PTR ds:0x403150
  401486:	xor    eax,eax
  401488:	jmp    0x40156d
  40148d:	lea    ecx,[ebp-0x40]
  401490:	push   ecx
  401491:	mov    edx,DWORD PTR [ebp+0x8]
  401494:	push   edx
  401495:	call   DWORD PTR ds:0x40315c
  40149b:	mov    DWORD PTR [ebp-0x4c],eax
  40149e:	push   0x7f02
  4014a3:	push   0x0
  4014a5:	call   DWORD PTR ds:0x403160
  4014ab:	push   eax
  4014ac:	call   DWORD PTR ds:0x403164
  4014b2:	push   0x1
  4014b4:	call   DWORD PTR ds:0x403168
  4014ba:	mov    DWORD PTR [ebp-0x44],0x0
  4014c1:	jmp    0x4014cc
  4014c3:	mov    eax,DWORD PTR [ebp-0x44]
  4014c6:	add    eax,0x1
  4014c9:	mov    DWORD PTR [ebp-0x44],eax
  4014cc:	mov    ecx,DWORD PTR ds:0x4032b8
  4014d2:	sub    ecx,0x1
  4014d5:	cmp    DWORD PTR [ebp-0x44],ecx
  4014d8:	jge    0x40151d
  4014da:	mov    edx,DWORD PTR [ebp-0x44]
  4014dd:	add    edx,0x1
  4014e0:	mov    DWORD PTR [ebp-0x48],edx
  4014e3:	jmp    0x4014ee
  4014e5:	mov    eax,DWORD PTR [ebp-0x48]
  4014e8:	add    eax,0x1
  4014eb:	mov    DWORD PTR [ebp-0x48],eax
  4014ee:	mov    ecx,DWORD PTR [ebp-0x48]
  4014f1:	cmp    ecx,DWORD PTR ds:0x4032b8
  4014f7:	jge    0x40151b
  4014f9:	mov    edx,DWORD PTR [ebp-0x48]
  4014fc:	mov    eax,DWORD PTR [edx*8+0x4032c0]
  401503:	push   eax
  401504:	mov    ecx,DWORD PTR [ebp-0x48]
  401507:	mov    edx,DWORD PTR [ecx*8+0x4032bc]
  40150e:	push   edx
  40150f:	mov    eax,DWORD PTR [ebp-0x4c]
  401512:	push   eax
  401513:	call   DWORD PTR ds:0x403180
  401519:	jmp    0x4014e5
  40151b:	jmp    0x4014c3
  40151d:	push   0x0
  40151f:	call   DWORD PTR ds:0x403168
  401525:	push   0x7f00
  40152a:	push   0x0
  40152c:	call   DWORD PTR ds:0x403160
  401532:	push   eax
  401533:	call   DWORD PTR ds:0x403164
  401539:	lea    ecx,[ebp-0x40]
  40153c:	push   ecx
  40153d:	mov    edx,DWORD PTR [ebp+0x8]
  401540:	push   edx
  401541:	call   DWORD PTR ds:0x40316c
  401547:	xor    eax,eax
  401549:	jmp    0x40156d
  40154b:	push   0x0
  40154d:	call   DWORD PTR ds:0x403170
  401553:	xor    eax,eax
  401555:	jmp    0x40156d
  401557:	mov    eax,DWORD PTR [ebp+0x14]
  40155a:	push   eax
  40155b:	mov    ecx,DWORD PTR [ebp+0x10]
  40155e:	push   ecx
  40155f:	mov    edx,DWORD PTR [ebp+0xc]
  401562:	push   edx
  401563:	mov    eax,DWORD PTR [ebp+0x8]
  401566:	push   eax
  401567:	call   DWORD PTR ds:0x403174
  40156d:	mov    esp,ebp
  40156f:	pop    ebp
  401570:	ret    0x10
  401573:	int3   
  401574:	int3   
  401575:	int3   
  401576:	int3   
  401577:	int3   
  401578:	int3   
  401579:	int3   
  40157a:	int3   
  40157b:	int3   
  40157c:	int3   
  40157d:	int3   
  40157e:	int3   
  40157f:	int3   
  401580:	push   ebp
  401581:	mov    ebp,esp
  401583:	sub    esp,0x98
  401589:	mov    DWORD PTR ds:0x4033cc,ebp
  40158f:	pusha  
  401590:	mov    DWORD PTR [ebp-0x3c],0x0
  401597:	mov    DWORD PTR [ebp-0x50],0x80000002
  40159e:	mov    DWORD PTR [ebp-0x84],0x60
  4015a8:	mov    DWORD PTR [ebp-0x70],0x40302c
  4015af:	mov    DWORD PTR [ebp-0x80],0x403038
  4015b6:	mov    DWORD PTR [ebp-0x68],0x3
  4015bd:	push   0x1
  4015bf:	call   DWORD PTR ds:0x403168
  4015c5:	mov    DWORD PTR [ebp-0x84],0x42
  4015cf:	mov    eax,ds:0x403188
  4015d4:	mov    ds:0x4033d0,eax
  4015d9:	mov    DWORD PTR [ebp-0x84],0x6
  4015e3:	mov    ecx,DWORD PTR [ebp-0x70]
  4015e6:	mov    BYTE PTR [ecx+0x1],0x4f
  4015ea:	lea    edx,[ebp-0x78]
  4015ed:	push   edx
  4015ee:	mov    eax,DWORD PTR [ebp-0x70]
  4015f1:	push   eax
  4015f2:	push   0x80000002
  4015f7:	call   DWORD PTR ds:0x4033d0
  4015fd:	test   eax,eax
  4015ff:	je     0x401608
  401601:	xor    eax,eax
  401603:	jmp    0x4018eb
  401608:	mov    DWORD PTR [ebp-0x84],0x60
  401612:	lea    ecx,[ebp-0x78]
  401615:	push   ecx
  401616:	push   0x40303c
  40161b:	mov    edx,DWORD PTR [ebp-0x78]
  40161e:	push   edx
  40161f:	call   DWORD PTR ds:0x4033d0
  401625:	test   eax,eax
  401627:	je     0x401630
  401629:	xor    eax,eax
  40162b:	jmp    0x4018eb
  401630:	lea    eax,[ebp-0x78]
  401633:	push   eax
  401634:	push   0x403044
  401639:	mov    ecx,DWORD PTR [ebp-0x78]
  40163c:	push   ecx
  40163d:	call   DWORD PTR ds:0x4033d0
  401643:	test   eax,eax
  401645:	je     0x40164e
  401647:	xor    eax,eax
  401649:	jmp    0x4018eb
  40164e:	lea    edx,[ebp-0x78]
  401651:	push   edx
  401652:	push   0x403080
  401657:	mov    eax,DWORD PTR [ebp-0x78]
  40165a:	push   eax
  40165b:	call   DWORD PTR ds:0x4033d0
  401661:	test   eax,eax
  401663:	jne    0x40166c
  401665:	xor    eax,eax
  401667:	jmp    0x4018eb
  40166c:	call   0x401090
  401671:	mov    DWORD PTR [ebp-0x34],0x64
  401678:	mov    DWORD PTR [ebp-0x1c],0x14
  40167f:	mov    DWORD PTR [ebp-0x3c],0x0
  401686:	mov    DWORD PTR [ebp-0x24],0x0
  40168d:	mov    DWORD PTR [ebp-0x30],0x1
  401694:	mov    DWORD PTR [ebp-0x14],0x0
  40169b:	mov    DWORD PTR [ebp-0x34],0x64
  4016a2:	mov    DWORD PTR [ebp-0x1c],0x14
  4016a9:	mov    DWORD PTR [ebp-0x3c],0x0
  4016b0:	mov    DWORD PTR [ebp-0x24],0x0
  4016b7:	mov    DWORD PTR [ebp-0x30],0x1
  4016be:	mov    DWORD PTR [ebp-0x18],0x3
  4016c5:	mov    DWORD PTR [ebp-0x14],0x0
  4016cc:	mov    DWORD PTR [ebp-0x34],0x64
  4016d3:	mov    DWORD PTR [ebp-0x1c],0x14
  4016da:	mov    DWORD PTR [ebp-0x3c],0x0
  4016e1:	mov    DWORD PTR [ebp-0x24],0x0
  4016e8:	mov    DWORD PTR [ebp-0x30],0x1
  4016ef:	mov    DWORD PTR [ebp-0x18],0x3
  4016f6:	mov    ecx,DWORD PTR ds:0x4032c4
  4016fc:	push   ecx
  4016fd:	call   0x4010b0
  401702:	add    esp,0x4
  401705:	mov    DWORD PTR [ebp-0x40],eax
  401708:	mov    edx,DWORD PTR [ebp-0x40]
  40170b:	push   edx
  40170c:	call   0x401040
  401711:	add    esp,0x4
  401714:	mov    DWORD PTR [ebp-0x38],eax
  401717:	mov    eax,DWORD PTR [ebp-0x40]
  40171a:	push   eax
  40171b:	push   0x0
  40171d:	mov    ecx,DWORD PTR [ebp-0x38]
  401720:	push   ecx
  401721:	call   0x401080
  401726:	add    esp,0xc
  401729:	mov    edx,DWORD PTR [ebp-0x40]
  40172c:	mov    DWORD PTR [ebp-0x48],edx
  40172f:	mov    eax,DWORD PTR [ebp-0x3c]
  401732:	cmp    eax,DWORD PTR [ebp-0x40]
  401735:	jae    0x401787
  401737:	mov    ecx,DWORD PTR [ebp-0x48]
  40173a:	push   ecx
  40173b:	mov    edx,DWORD PTR [ebp-0x34]
  40173e:	push   edx
  40173f:	call   0x401000
  401744:	add    esp,0x8
  401747:	mov    DWORD PTR [ebp-0x4c],eax
  40174a:	mov    eax,DWORD PTR [ebp-0x4c]
  40174d:	push   eax
  40174e:	mov    ecx,DWORD PTR ds:0x4032c4
  401754:	add    ecx,DWORD PTR [ebp-0x24]
  401757:	push   ecx
  401758:	mov    edx,DWORD PTR [ebp-0x38]
  40175b:	add    edx,DWORD PTR [ebp-0x3c]
  40175e:	push   edx
  40175f:	call   0x4012b0
  401764:	add    esp,0xc
  401767:	mov    eax,DWORD PTR [ebp-0x1c]
  40176a:	add    eax,DWORD PTR [ebp-0x34]
  40176d:	add    eax,DWORD PTR [ebp-0x24]
  401770:	mov    DWORD PTR [ebp-0x24],eax
  401773:	mov    ecx,DWORD PTR [ebp-0x3c]
  401776:	add    ecx,DWORD PTR [ebp-0x34]
  401779:	mov    DWORD PTR [ebp-0x3c],ecx
  40177c:	mov    edx,DWORD PTR [ebp-0x48]
  40177f:	sub    edx,DWORD PTR [ebp-0x4c]
  401782:	mov    DWORD PTR [ebp-0x48],edx
  401785:	jmp    0x40172f
  401787:	mov    eax,DWORD PTR [ebp-0x40]
  40178a:	push   eax
  40178b:	mov    ecx,DWORD PTR [ebp-0x38]
  40178e:	push   ecx
  40178f:	call   0x4010d0
  401794:	add    esp,0x8
  401797:	mov    DWORD PTR [ebp-0x24],0x0
  40179e:	mov    DWORD PTR [ebp-0x88],0x0
  4017a8:	call   0x4010a0
  4017ad:	mov    edx,DWORD PTR ds:0x4032c4
  4017b3:	push   edx
  4017b4:	call   0x4010b0
  4017b9:	add    esp,0x4
  4017bc:	mov    DWORD PTR [ebp-0x8c],eax
  4017c2:	mov    eax,DWORD PTR [ebp-0x8c]
  4017c8:	push   eax
  4017c9:	call   0x401040
  4017ce:	add    esp,0x4
  4017d1:	mov    DWORD PTR [ebp-0x20],eax
  4017d4:	mov    ecx,DWORD PTR [ebp-0x8c]
  4017da:	push   ecx
  4017db:	push   0x0
  4017dd:	mov    edx,DWORD PTR [ebp-0x20]
  4017e0:	push   edx
  4017e1:	call   0x401080
  4017e6:	add    esp,0xc
  4017e9:	mov    eax,DWORD PTR [ebp-0x8c]
  4017ef:	mov    DWORD PTR [ebp-0x94],eax
  4017f5:	mov    ecx,DWORD PTR [ebp-0x88]
  4017fb:	cmp    ecx,DWORD PTR [ebp-0x8c]
  401801:	jae    0x40186e
  401803:	mov    edx,DWORD PTR [ebp-0x94]
  401809:	push   edx
  40180a:	mov    eax,DWORD PTR [ebp-0x34]
  40180d:	push   eax
  40180e:	call   0x401000
  401813:	add    esp,0x8
  401816:	mov    DWORD PTR [ebp-0x98],eax
  40181c:	mov    ecx,DWORD PTR [ebp-0x98]
  401822:	push   ecx
  401823:	mov    edx,DWORD PTR ds:0x4032c4
  401829:	add    edx,DWORD PTR [ebp-0x24]
  40182c:	push   edx
  40182d:	mov    eax,DWORD PTR [ebp-0x20]
  401830:	add    eax,DWORD PTR [ebp-0x88]
  401836:	push   eax
  401837:	call   0x4012b0
  40183c:	add    esp,0xc
  40183f:	mov    ecx,DWORD PTR [ebp-0x1c]
  401842:	add    ecx,DWORD PTR [ebp-0x34]
  401845:	add    ecx,DWORD PTR [ebp-0x24]
  401848:	mov    DWORD PTR [ebp-0x24],ecx
  40184b:	mov    edx,DWORD PTR [ebp-0x88]
  401851:	add    edx,DWORD PTR [ebp-0x34]
  401854:	mov    DWORD PTR [ebp-0x88],edx
  40185a:	mov    eax,DWORD PTR [ebp-0x94]
  401860:	sub    eax,DWORD PTR [ebp-0x98]
  401866:	mov    DWORD PTR [ebp-0x94],eax
  40186c:	jmp    0x4017f5
  40186e:	mov    ecx,DWORD PTR [ebp-0x8c]
  401874:	push   ecx
  401875:	mov    edx,DWORD PTR [ebp-0x20]
  401878:	push   edx
  401879:	call   0x4010d0
  40187e:	add    esp,0x8
  401881:	mov    eax,DWORD PTR [ebp-0x38]
  401884:	mov    ecx,DWORD PTR [ebp-0x20]
  401887:	mov    DWORD PTR [eax],ecx
  401889:	push   0x42000
  40188e:	call   0x401040
  401893:	add    esp,0x4
  401896:	mov    DWORD PTR [ebp-0xc],eax
  401899:	push   0x3fa00
  40189e:	mov    edx,DWORD PTR [ebp-0x38]
  4018a1:	push   edx
  4018a2:	mov    eax,DWORD PTR [ebp-0xc]
  4018a5:	add    eax,0x300
  4018aa:	push   eax
  4018ab:	call   0x4012b0
  4018b0:	add    esp,0xc
  4018b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018b6:	sub    ecx,0x400000
  4018bc:	push   ecx
  4018bd:	mov    edx,DWORD PTR [ebp-0xc]
  4018c0:	push   edx
  4018c1:	mov    eax,DWORD PTR [ebp-0x20]
  4018c4:	push   eax
  4018c5:	call   0x4011c0
  4018ca:	add    esp,0xc
  4018cd:	mov    eax,ds:0x4033cc
  4018d2:	mov    ecx,eax
  4018d4:	xor    eax,eax
  4018d6:	je     0x4018d9
  4018d8:	ret    
  4018d9:	mov    esp,ecx
  4018db:	pop    eax
  4018dc:	mov    eax,DWORD PTR [ebp-0xc]
  4018df:	add    eax,0x3f9f0
  4018e4:	mov    ds:0x4033d4,eax
  4018e9:	push   eax
  4018ea:	ret    
  4018eb:	mov    esp,ebp
  4018ed:	pop    ebp
  4018ee:	ret    
  4018ef:	int3   
  4018f0:	push   ebp
  4018f1:	mov    ebp,esp
  4018f3:	pop    eax
  4018f4:	mov    ecx,DWORD PTR ds:0x4033d4
  4018fa:	push   ecx
  4018fb:	ret    
  4018fc:	pop    ebp
  4018fd:	ret    
  4018fe:	jmp    DWORD PTR ds:0x40313c
  401904:	jmp    DWORD PTR ds:0x403140
  40190a:	jmp    DWORD PTR ds:0x403144
  401910:	jmp    DWORD PTR ds:0x403148
  401916:	jmp    DWORD PTR ds:0x403150
  40191c:	jmp    DWORD PTR ds:0x403154
  401922:	jmp    DWORD PTR ds:0x403158
  401928:	jmp    DWORD PTR ds:0x40315c
  40192e:	jmp    DWORD PTR ds:0x403160
  401934:	jmp    DWORD PTR ds:0x403164
  40193a:	jmp    DWORD PTR ds:0x403168
  401940:	jmp    DWORD PTR ds:0x40316c
  401946:	jmp    DWORD PTR ds:0x403170
  40194c:	jmp    DWORD PTR ds:0x403174
  401952:	jmp    DWORD PTR ds:0x40317c
  401958:	jmp    DWORD PTR ds:0x403180
  40195e:	jmp    DWORD PTR ds:0x403188

Disassembly of section .z3:

00404000 <.z3>:
  404000:	add    BYTE PTR [eax],al
	...

Disassembly of section .z:

00405000 <.z>:
  405000:	add    dl,bh
  405002:	add    eax,DWORD PTR [eax]
  405004:	mov    ch,0x72
  405006:	inc    ebx
  405007:	add    dl,bh
  405009:	jmp    0x4163:0xe0c75074
  405010:	cdq    
  405011:	jmp    0x405085
  405013:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  405015:	cld    
  405016:	add    BYTE PTR [eax],al
  405018:	jno    0x404ffa
  40501a:	popa   
  40501b:	fs imul esp,esi,0xfd947262
  405022:	jns    0x405069
  405024:	(bad)  
  405025:	into   
  405026:	add    BYTE PTR [eax],al
  405028:	jno    0x40500a
  40502a:	popa   
  40502b:	fs imul esp,esi,0xfd547262
  405032:	jns    0x405079
  405034:	ins    DWORD PTR es:[edi],dx
  405035:	fadd   DWORD PTR [eax]
  405037:	add    BYTE PTR [edx-0x16],bh
  40503a:	je     0x405089
  40503c:	dec    edx
  40503d:	jmp    0x4050b4
  40503f:	ins    BYTE PTR es:[edi],dx
  405040:	pop    eax
  405041:	(bad)  
  405042:	popa   
  405043:	outs   dx,BYTE PTR ds:[esi]
  405044:	push   ecx
  405045:	jecxz  0x4050ac
  405047:	inc    ecx
  405048:	mov    ch,0x8f
  40504a:	add    BYTE PTR [eax],al
  40504c:	jbe    0x40504b
  40504e:	gs popa 
  405050:	sub    ebp,esi
  405052:	inc    esi
  405053:	imul   ebx,DWORD PTR [ecx],0x110041f5
  405059:	jecxz  0x4050cf
  40505b:	jb     0x405073
  40505d:	icebp  
  40505e:	je     0x4050a1
  405060:	mov    ch,0x8f
  405062:	add    BYTE PTR [eax],al
  405064:	repnz hlt 
  405066:	je     0x4050bf
	...
  40507c:	or     al,0xfe
  40507e:	outs   dx,DWORD PTR fs:[esi]
  405080:	add    ah,bl
  405082:	inc    esp
  405083:	imul   esp,edi,0xda7463f4
  405089:	loope  0x405104
  40508b:	inc    ecx
  40508c:	mov    ch,0x8f
  40508e:	add    BYTE PTR [eax],al
  405090:	repnz hlt 
  405092:	je     0x4050e1
  405094:	loop   0x405089
  405096:	jne    0x405104
  405098:	rcl    bh,1
  40509a:	popa   
  40509b:	outs   dx,BYTE PTR ds:[esi]
  40509c:	fsincos 
  40509e:	gs push edi
  4050a0:	mov    ch,0x8f
  4050a2:	add    BYTE PTR [eax],al
  4050a4:	mov    ecx,0xc1004092
  4050a9:	xchg   edx,eax
  4050aa:	inc    eax
  4050ab:	add    cl,bl
  4050ad:	xchg   edx,eax
  4050ae:	inc    eax
  4050af:	add    cl,ah
  4050b1:	xchg   edx,eax
  4050b2:	inc    eax
  4050b3:	add    BYTE PTR [ebp-0x6e],bh
  4050b6:	inc    eax
  4050b7:	add    BYTE PTR [ecx-0x6e],ah
  4050ba:	inc    eax
  4050bb:	add    BYTE PTR [ebp+0x7d004092],dl
  4050c1:	xchg   edx,eax
  4050c2:	inc    eax
  4050c3:	add    BYTE PTR [edx-0xc],bh
  4050c6:	je     0x405118
  4050c8:	addr16 (bad) 
  4050ca:	arpl   WORD PTR [ecx+0x59],ax
  4050cd:	repz jb 0x405135
  4050d0:	data16 loop 0x4050d3
  4050d3:	add    BYTE PTR [ecx+0x796461fe],al
  4050d9:	clc    
  4050da:	bound  esi,QWORD PTR [edx+0x54]
  4050dd:	loope  0x405158
  4050df:	inc    ebp
	...
  4050f4:	cmp    eax,0x1e0000d0
  4050f9:	cmc    
  4050fa:	jb     0x40516a
  4050fc:	adc    ah,bh
  4050fe:	xor    esi,DWORD PTR [edx]
  405100:	shl    ebx,cl
  405102:	ins    BYTE PTR es:[edi],dx
  405103:	ins    BYTE PTR es:[edi],dx
  405104:	mov    ch,0x8f
  405106:	add    BYTE PTR [eax],al
  405108:	and    bl,ah
  40510a:	jbe    0x40516f
  40510c:	pop    es
  40510d:	in     al,0x2e
  40510f:	fs adc esp,edi
  405112:	add    BYTE PTR [eax],al
  405114:	or     ch,dh
  405116:	ins    DWORD PTR es:[edi],dx
  405117:	jae    0x4050f1
  405119:	jecxz  0x40511b
  40511b:	add    al,bl
  40511d:	loop   0x405195
  40511f:	arpl   di,sp
  405121:	jecxz  0x405151
  405123:	fs leave 
  405125:	sti    
  405126:	add    BYTE PTR [eax],al
  405128:	loopne 0x40511e
  40512a:	ins    DWORD PTR es:[edi],dx
  40512b:	arpl   bp,ax
  40512d:	call   0xf92b5132
  405132:	jb     0x4051a8
  405134:	shl    al,0x6c
  405137:	inc    ecx
  405138:	mov    eax,ds:0xb5636ffb
  40513d:	pop    DWORD PTR [eax]
  40513f:	add    BYTE PTR [ebx-0x5f8b8d08],cl
  405145:	lock ins BYTE PTR es:[edi],dx
  405147:	inc    ecx
  405148:	mov    eax,ds:0xb5636ffb
  40514d:	pop    DWORD PTR [eax]
  40514f:	add    BYTE PTR [eax-0x3],ch
  405152:	ins    DWORD PTR es:[edi],dx
  405153:	popa   
  405154:	test   ebp,eax
  405156:	imul   esp,DWORD PTR [ebp+0x0],0x0
	...
  405169:	add    BYTE PTR [eax],al
  40516b:	add    BYTE PTR [edx-0x22],ch
  40516e:	inc    si
  405170:	pop    esp
  405171:	sti    
  405172:	add    BYTE PTR gs:[ebx+0x607472f8],cl
  405179:	lock ins BYTE PTR es:[edi],dx
  40517b:	push   eax
  40517c:	inc    edi
  40517d:	(bad)  
  40517e:	je     0x4051e5
  405180:	push   esi
  405181:	jecxz  0x405183
  405183:	add    BYTE PTR [ebp-0xc],ch
  405186:	popa   
  405187:	jo     0x4051fd
  405189:	sti    
  40518a:	ins    BYTE PTR es:[edi],dx
  40518b:	outs   dx,DWORD PTR ds:[esi]
  40518c:	push   ss
  40518d:	nop
  40518e:	add    BYTE PTR [eax],al
  405190:	push   ds
  405191:	repz jb 0x405202
  405194:	sbb    ah,bh
  405196:	xor    esi,DWORD PTR [edx]
  405198:	retf   
  405199:	rep ins BYTE PTR es:[edi],dx
  40519b:	ins    BYTE PTR es:[edi],dx
  40519c:	mov    ch,0x8f
  40519e:	add    BYTE PTR [eax],al
  4051a0:	repnz bnd je 0x4051f4
  4051a4:	pop    es
  4051a5:	std    
  4051a6:	arpl   WORD PTR [ebp+0x6],sp
  4051a9:	loope  0x4051f3
  4051ab:	gs aam 0xdf
  4051ae:	add    BYTE PTR [eax],al
  4051b0:	mov    ch,0x8f
  4051b2:	in     al,0x3
  4051b4:	mov    ch,0x33
  4051b6:	pop    ecx
  4051b7:	add    BYTE PTR [ebp-0x4afffc8a],dh
  4051bd:	jbe    0x4051c2
  4051bf:	add    BYTE PTR [ebp-0x4afffc8a],dh
  4051c5:	jbe    0x4051ca
  4051c7:	add    BYTE PTR [ebp-0x4afffc8a],dh
  4051cd:	jbe    0x4051d2
	...
  4051e3:	add    BYTE PTR [ebp-0x4afffc8a],dh
  4051e9:	jbe    0x4051ee
  4051eb:	add    BYTE PTR [ebp-0x4afffc8a],dh
  4051f1:	jbe    0x4051f6
  4051f3:	add    BYTE PTR [ebp-0x4afffc8a],dh
  4051f9:	jbe    0x4051fe
  4051fb:	add    BYTE PTR [ebp-0x4afffc8a],dh
  405201:	jbe    0x405206
  405203:	add    BYTE PTR [ebp-0x4afffba2],dh
  405209:	jbe    0x40520e
  40520b:	add    BYTE PTR [ebp-0x4afffc8a],dh
  405211:	jbe    0x405216
  405213:	add    BYTE PTR [ebp-0x4afffc8a],dh
  405219:	jbe    0x40521e
  40521b:	add    BYTE PTR [ebp-0x4afffc8a],dh
  405221:	jbe    0x405226
  405223:	add    BYTE PTR [ebp-0x4afffc8a],dh
  405229:	jbe    0x40522e
  40522b:	add    BYTE PTR [ebp-0x4afffc8a],dh
  405231:	jbe    0x405236
  405233:	add    BYTE PTR [ebp-0x4afffc8a],dh
  405239:	jbe    0x40523e
  40523b:	add    BYTE PTR [ebp-0x4afffc8a],dh
  405241:	(bad)
  405245:	(bad)
	...
  405259:	add    BYTE PTR [eax],al
  40525b:	add    BYTE PTR [ebp-0x4afc1671],dh
  405261:	(bad)
  405265:	(bad)
  405269:	(bad)
  40526d:	(bad)
  405271:	(bad)
  405275:	(bad)
  405279:	(bad)
  40527d:	(bad)
  405281:	(bad)
  405285:	(bad)
  405289:	(bad)
  40528d:	(bad)
  405291:	(bad)
  405295:	(bad)
  405299:	(bad)
  40529d:	(bad)
  4052a1:	(bad)
  4052a5:	(bad)
  4052a9:	(bad)
  4052ad:	(bad)
  4052b1:	(bad)
  4052b5:	(bad)
  4052b9:	(bad)
  4052bd:	(bad)
	...
  4052d1:	add    BYTE PTR [eax],al
  4052d3:	add    BYTE PTR [ebp-0x4afc1671],dh
  4052d9:	(bad)
  4052dd:	(bad)
  4052e1:	pop    DWORD PTR [eax]
  4052e3:	jmp    0xe940e29e
  4052e8:	mov    dh,0x8f
  4052ea:	add    cl,ch
  4052ec:	mov    dh,0x8f
  4052ee:	add    cl,ch
  4052f0:	mov    dh,0x8f
  4052f2:	add    cl,ch
  4052f4:	mov    dh,0x8f
  4052f6:	add    cl,ch
  4052f8:	mov    dh,0x8f
  4052fa:	add    BYTE PTR [ecx-0x52ff700b],bl
  405300:	mov    ecx,0x17f9008e
  405305:	add    eax,0x8fb6e94f
  40530a:	add    cl,ch
  40530c:	mov    dh,0x8f
  40530e:	add    cl,cl
  405310:	mov    ecx,0xb7e2018d
  405315:	xchg   ebp,eax
  405316:	add    cl,ch
  405318:	pop    edx
  405319:	pop    DWORD PTR [eax]
  40531b:	jmp    0xe940e286
  405320:	mov    dh,0x8f
  405322:	add    BYTE PTR [ecx],bh
  405324:	or     DWORD PTR [eax-0x70391700],edx
  40532a:	add    cl,ch
  40532c:	test   BYTE PTR [esi-0x30491700],0x0
  405333:	jmp    0xe940e2fe
	...
  40534c:	mov    eax,0xb6ec008f
  405351:	nop
  405352:	add    al,ch
  405354:	mov    dh,0x8f
  405356:	add    ah,ch
  405358:	mov    dh,0x90
  40535a:	add    cl,ch
  40535c:	mov    dh,0x8f
  40535e:	add    cl,ch
  405360:	(bad)  
  405361:	xchg   ebx,eax
  405362:	add    cl,ch
  405364:	mov    ds:0xb6e9ff6a,al
  405369:	pop    DWORD PTR [eax]
  40536b:	jmp    0x405323
  40536d:	pop    DWORD PTR [ecx+0x108e9c00]
  405373:	add    BYTE PTR [esi+edi*2-0x71740000],cl
  40537a:	adc    BYTE PTR [eax],al
  40537c:	pop    esp
  40537d:	jle    0x40537f
  40537f:	add    BYTE PTR [esi+ecx*4+0x0],bl
  405383:	add    BYTE PTR [esi+ecx*4+0x0],bl
  405387:	add    BYTE PTR [esi+ecx*4+0x0],cl
  40538b:	add    BYTE PTR [esi+ecx*4+0x0],bl
  40538f:	add    BYTE PTR [eax],bl
  405391:	add    BYTE PTR [ebx],al
  405393:	add    BYTE PTR [ecx*4-0x71b40000],cl
  40539a:	add    BYTE PTR [eax],al
  40539c:	sbb    al,0x8e
  40539e:	add    BYTE PTR [eax],al
  4053a0:	sbb    al,0x8e
  4053a2:	add    BYTE PTR [eax],al
  4053a4:	or     al,0x8e
  4053a6:	add    BYTE PTR [eax],al
  4053a8:	or     al,0x8e
  4053aa:	add    BYTE PTR [eax],al
  4053ac:	sbb    al,0x8e
	...
  4053c2:	add    BYTE PTR [eax],al
  4053c4:	sbb    al,0x5e
  4053c6:	add    eax,DWORD PTR [eax]
  4053c8:	xchg   esp,eax
  4053c9:	mov    BYTE PTR [eax],al
  4053cb:	add    BYTE PTR [esi+ecx*4],cl
  4053ce:	add    BYTE PTR [eax],al
  4053d0:	fmul   QWORD PTR [ebp-0x72240000]
  4053d6:	add    BYTE PTR [eax],al
  4053d8:	int3   
  4053d9:	lea    eax,[eax]
  4053db:	add    ah,cl
  4053dd:	lea    eax,[eax]
  4053df:	add    ah,bl
  4053e1:	lea    eax,[eax]
  4053e3:	add    ah,bl
  4053e5:	lea    eax,[eax]
  4053e7:	add    ah,cl
  4053e9:	lea    eax,[eax]
  4053eb:	add    ah,cl
  4053ed:	lea    eax,[eax]
  4053ef:	add    BYTE PTR [ebp+ecx*4-0x72640000],bl
  4053f6:	add    BYTE PTR [eax],al
  4053f8:	mov    WORD PTR [ebp+0x76b50000],cs
  4053fe:	adc    eax,DWORD PTR [eax]
  405400:	mov    ch,0x6
  405402:	add    DWORD PTR [eax],eax
  405404:	mov    ch,0x76
  405406:	add    eax,DWORD PTR [eax]
  405408:	mov    ch,0x76
  40540a:	add    eax,DWORD PTR [eax]
  40540c:	mov    ch,0x76
  40540e:	add    eax,DWORD PTR [eax]
  405410:	mov    ch,0x76
  405412:	add    eax,DWORD PTR [eax]
  405414:	mov    ch,0x76
  405416:	add    eax,DWORD PTR [eax]
  405418:	mov    ch,0x76
  40541a:	add    eax,DWORD PTR [eax]
  40541c:	mov    ch,0x50
  40541e:	outs   dx,DWORD PTR ds:[esi]
  40541f:	gs int 0x2
  405422:	add    eax,DWORD PTR [eax]
  405424:	mov    ch,0xd8
  405426:	lods   eax,DWORD PTR ds:[esi]
  405427:	add    eax,DWORD PTR [eax]
	...
  405439:	add    BYTE PTR [eax],al
  40543b:	add    BYTE PTR [ebp-0x4affec8a],dh
  405441:	jbe    0x4053ea
  405443:	add    esi,DWORD PTR [ebp+0x2affff76]
  405449:	ja     0x40544e
  40544b:	add    BYTE PTR [ebp-0x4afffc8a],dh
  405451:	jbe    0x405456
  405453:	add    BYTE PTR [ebp-0x6afffb6a],dh
  405459:	and    BYTE PTR [eax+0x61],0x89
  40545d:	xlat   BYTE PTR ds:[ebx]
  40545e:	add    al,0x0
  405460:	mov    ch,0xd6
  405462:	and    DWORD PTR [eax],eax
  405464:	mov    ch,0x76
  405466:	ret    
  405467:	add    esi,DWORD PTR [ebp-0x4afff48a]
  40546d:	jbe    0x405422
  40546f:	add    esi,DWORD PTR [ebp-0x4afffc8a]
  405475:	jbe    0x40547a
  405477:	add    BYTE PTR [ebp-0x4afffc8a],dh
  40547d:	mov    dh,0x4
  40547f:	add    ch,dh
  405481:	push   eax
  405482:	jno    0x4054e9
  405484:	and    DWORD PTR [edx+0x62],ebp
  405487:	add    BYTE PTR [ebp-0x4ad3a071],dh
  40548d:	(bad)
  405491:	(bad)
  405495:	(bad)
  405499:	(bad)
  40549d:	(bad)
	...
  4054b1:	add    BYTE PTR [eax],al
  4054b3:	add    BYTE PTR [ebp-0x4afc1671],dh
  4054b9:	(bad)
  4054bd:	int    0xe9
  4054bf:	add    esi,DWORD PTR [ebp-0x4afc1671]
  4054c5:	(bad)
  4054c9:	(bad)
  4054cd:	(bad)
  4054d1:	(bad)
  4054d5:	(bad)
  4054d9:	(bad)
  4054dd:	(bad)
  4054e1:	(bad)
  4054e5:	(bad)
  4054e9:	(bad)
  4054ed:	(bad)
  4054f1:	(bad)
  4054f5:	(bad)
  4054f9:	(bad)
  4054fd:	(bad)
  405501:	(bad)
  405505:	(bad)
  405509:	(bad)
  40550d:	(bad)
  405511:	(bad)
  405515:	pop    DWORD PTR [eax]
  405517:	jmp    0x40551c
	...
  40552c:	mov    dh,0x8f
  40552e:	add    cl,ch
  405530:	mov    dh,0x8f
  405532:	add    cl,ch
  405534:	mov    dh,0x8f
  405536:	add    cl,ch
  405538:	mov    dh,0x8f
  40553a:	add    cl,ch
  40553c:	mov    dh,0x8f
  40553e:	add    cl,ch
  405540:	mov    dh,0x8f
  405542:	add    cl,ch
  405544:	mov    dh,0x8f
  405546:	add    cl,ch
  405548:	mov    dh,0x8f
  40554a:	add    cl,ch
  40554c:	mov    dh,0x8f
  40554e:	add    cl,ch
  405550:	mov    dh,0x8f
  405552:	add    cl,ch
  405554:	mov    dh,0x8f
  405556:	add    cl,ch
  405558:	mov    dh,0x8f
  40555a:	add    cl,ch
  40555c:	mov    dh,0x8f
  40555e:	add    cl,ch
  405560:	mov    dh,0x8f
  405562:	add    cl,ch
  405564:	mov    dh,0x8f
  405566:	add    cl,ch
  405568:	mov    dh,0x8f
  40556a:	add    cl,ch
  40556c:	mov    dh,0x8f
  40556e:	add    cl,ch
  405570:	mov    dh,0x8f
  405572:	add    cl,ch
  405574:	mov    dh,0x8f
  405576:	add    cl,ch
  405578:	mov    dh,0x8f
  40557a:	add    cl,ch
  40557c:	mov    dh,0x8f
  40557e:	add    cl,ch
  405580:	mov    dh,0x8f
  405582:	add    cl,ch
  405584:	mov    dh,0x8f
  405586:	add    cl,ch
  405588:	mov    dh,0x8f
  40558a:	add    cl,ch
  40558c:	mov    dh,0x8f
  40558e:	add    cl,ch
	...
  4055a4:	mov    dh,0x8f
  4055a6:	add    cl,ch
  4055a8:	mov    dh,0x8f
  4055aa:	add    cl,ch
  4055ac:	mov    dh,0x8f
  4055ae:	add    cl,ch
  4055b0:	mov    dh,0x8f
  4055b2:	add    cl,ch
  4055b4:	mov    dh,0x8f
  4055b6:	add    BYTE PTR [eax],al
  4055b8:	int3   
  4055b9:	xchg   edx,eax
  4055ba:	add    BYTE PTR [eax],al
  4055bc:	int3   
  4055bd:	xchg   edx,eax
  4055be:	add    BYTE PTR [eax],al
  4055c0:	pushf  
  4055c1:	xchg   edx,eax
  4055c2:	add    BYTE PTR [eax],al
  4055c4:	pushf  
  4055c5:	xchg   edx,eax
  4055c6:	add    BYTE PTR [eax],al
  4055c8:	mov    WORD PTR [edx-0x6d740000],ss
  4055ce:	add    BYTE PTR [eax],al
  4055d0:	pushf  
  4055d1:	xchg   edx,eax
  4055d2:	add    BYTE PTR [eax],al
  4055d4:	pushf  
  4055d5:	xchg   edx,eax
  4055d6:	add    BYTE PTR [eax],al
  4055d8:	mov    WORD PTR [edx-0x6d740000],ss
  4055de:	add    BYTE PTR [eax],al
  4055e0:	pop    esp
  4055e1:	xchg   edx,eax
  4055e2:	add    BYTE PTR [eax],al
  4055e4:	pop    esp
  4055e5:	xchg   edx,eax
  4055e6:	add    BYTE PTR [eax],al
  4055e8:	dec    esp
  4055e9:	xchg   edx,eax
  4055ea:	add    BYTE PTR [eax],al
  4055ec:	dec    esp
  4055ed:	xchg   edx,eax
  4055ee:	add    BYTE PTR [eax],al
  4055f0:	pop    esp
  4055f1:	xchg   edx,eax
  4055f2:	add    BYTE PTR [eax],al
  4055f4:	pop    esp
  4055f5:	xchg   edx,eax
  4055f6:	add    BYTE PTR [eax],al
  4055f8:	dec    esp
  4055f9:	xchg   edx,eax
  4055fa:	add    BYTE PTR [eax],al
  4055fc:	dec    esp
  4055fd:	xchg   edx,eax
  4055fe:	add    BYTE PTR [eax],al
  405600:	sbb    al,0x92
  405602:	add    BYTE PTR [eax],al
  405604:	sbb    al,0x92
	...
  40561a:	add    BYTE PTR [eax],al
  40561c:	or     al,0x92
  40561e:	add    BYTE PTR [eax],al
  405620:	or     al,0x92
  405622:	add    BYTE PTR [eax],al
  405624:	sbb    al,0x92
  405626:	add    BYTE PTR [eax],al
  405628:	sbb    al,0x92
  40562a:	add    BYTE PTR [eax],al
  40562c:	or     al,0x92
  40562e:	add    BYTE PTR [eax],al
  405630:	or     al,0x92
  405632:	add    BYTE PTR [eax],al
  405634:	fcom   QWORD PTR [ecx-0x6e240000]
  40563a:	add    BYTE PTR [eax],al
  40563c:	int3   
  40563d:	xchg   ecx,eax
  40563e:	add    BYTE PTR [eax],al
  405640:	int3   
  405641:	xchg   ecx,eax
  405642:	add    BYTE PTR [eax],al
  405644:	mov    ch,0x78
  405646:	add    eax,DWORD PTR [eax]
  405648:	mov    ch,0x78
  40564a:	add    eax,DWORD PTR [eax]
  40564c:	mov    ch,0x78
  40564e:	add    eax,DWORD PTR [eax]
  405650:	mov    ch,0x78
  405652:	add    eax,DWORD PTR [eax]
  405654:	mov    ch,0x76
  405656:	add    eax,DWORD PTR [eax]
  405658:	mov    ch,0x76
  40565a:	add    eax,DWORD PTR [eax]
  40565c:	mov    ch,0x76
  40565e:	add    eax,DWORD PTR [eax]
  405660:	mov    ch,0x76
  405662:	add    eax,DWORD PTR [eax]
  405664:	mov    ch,0x76
  405666:	add    eax,DWORD PTR [eax]
  405668:	mov    ch,0x76
  40566a:	add    eax,DWORD PTR [eax]
  40566c:	mov    ch,0x76
  40566e:	add    eax,DWORD PTR [eax]
  405670:	mov    ch,0x76
  405672:	add    eax,DWORD PTR [eax]
  405674:	mov    ch,0x76
  405676:	add    eax,DWORD PTR [eax]
  405678:	mov    ch,0x76
  40567a:	add    eax,DWORD PTR [eax]
  40567c:	mov    ch,0x76
  40567e:	add    eax,DWORD PTR [eax]
	...
  405694:	mov    ch,0x76
  405696:	add    eax,DWORD PTR [eax]
  405698:	mov    ch,0x2e
  40569a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40569b:	add    esi,DWORD PTR [ebp-0x4afc5a66]
  4056a1:	bound  esp,QWORD PTR [ebx+eax*1+0x3a446b5]
  4056a8:	mov    ch,0x12
  4056aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ab:	add    esi,DWORD PTR [ebp-0x4afc5b0a]
  4056b1:	out    0xa3,al
  4056b3:	add    esi,DWORD PTR [ebp-0x4afc5d02]
  4056b9:	cli    
  4056ba:	mov    ds:0xa304b503,al
  4056bf:	add    esi,DWORD PTR [ebp-0x4afc5caa]
  4056c5:	sbb    ah,BYTE PTR [ebx-0x4c8b4afd]
  4056cb:	add    esi,DWORD PTR [ebp-0x4afc4b6a]
  4056d1:	(bad)  
  4056d2:	aad    0xb3
  4056d4:	mov    dh,0x8f
  4056d6:	fbstp  TBYTE PTR [ebx-0x4bda704a]
  4056dc:	mov    dh,0x8f
  4056de:	add    DWORD PTR [esi+esi*4-0x494bfa71],esi
  4056e5:	(bad)  
  4056e6:	push   ebp
  4056e7:	mov    ah,0xb6
  4056e9:	pop    DWORD PTR [ebx-0x4c]
  4056ec:	mov    dh,0x8f
  4056ee:	sub    eax,0x358fb6b4
  4056f3:	mov    ah,0xb6
  4056f5:	(bad)
	...
  405709:	add    BYTE PTR [eax],al
  40570b:	add    BYTE PTR [esi-0x494ba671],dh
  405711:	(bad)  
  405712:	jmp    0x4056c8
  405714:	mov    dh,0x8f
  405716:	fbstp  TBYTE PTR [esi+esi*4-0x494af271]
  40571d:	(bad)  
  40571e:	div    DWORD PTR [esi+esi*4-0x494b6e71]
  405725:	(bad)  
  405726:	cdq    
  405727:	mov    ah,0xb6
  405729:	(bad)  
  40572a:	jno    0x4056e1
  40572c:	mov    dh,0x8f
  40572e:	push   edi
  40572f:	mov    ds:0x3e98fb6,al
  405734:	mov    ch,0x8f
  405736:	sub    eax,0x4b8fb6ba
  40573b:	mov    edx,0xba6d8fb6
  405740:	mov    dh,0x8f
  405742:	jg     0x4056fd
  405744:	mov    dh,0x8f
  405746:	inc    ebp
  405747:	mov    edx,0xba258fb6
  40574c:	mov    dh,0x8f
  40574e:	or     edi,DWORD PTR [edx-0x4652704a]
  405754:	mov    dh,0x8f
  405756:	jmp    0x21d00c5e
  40575b:	mov    ecx,0xcb008fb6
  405760:	and    dl,BYTE PTR [eax-0x6fe3e300]
  405766:	add    BYTE PTR [edi-0x58ff6fde],bh
  40576c:	or     dl,BYTE PTR [eax+0xd100]
	...
  405782:	add    BYTE PTR [eax],al
  405784:	or     eax,0xfdbd0090
  405789:	pop    DWORD PTR [eax]
  40578b:	out    0xfd,eax
  40578d:	pop    DWORD PTR [eax]
  40578f:	aad    0x6d
  405791:	pop    DWORD PTR [eax]
  405793:	loope  0x405802
  405795:	pop    DWORD PTR [eax]
  405797:	outs   dx,DWORD PTR ds:[esi]
  405798:	push   0xffffff8f
  40579a:	add    BYTE PTR [ebx+0x62],bl
  40579d:	pop    DWORD PTR [eax]
  40579f:	xchg   edi,eax
  4057a0:	dec    edx
  4057a1:	pop    DWORD PTR [eax]
  4057a3:	outs   dx,DWORD PTR ds:[esi]
  4057a4:	inc    edx
  4057a5:	pop    DWORD PTR [eax]
  4057a7:	mov    DWORD PTR [edx-0x71],ecx
  4057aa:	add    cl,ch
  4057ac:	mov    dh,0x8f
  4057ae:	add    BYTE PTR [edi-0x16ff70df],ch
  4057b4:	mov    dh,0x8f
  4057b6:	add    bl,bl
  4057b8:	sbb    ecx,DWORD PTR [edi-0x70ec3700]
  4057be:	add    bh,cl
  4057c0:	sbb    ecx,DWORD PTR [edi-0x70ec2900]
  4057c6:	add    BYTE PTR [ebx-0x5cff70e5],bh
  4057cc:	adc    ecx,DWORD PTR [edi-0x70a48700]
  4057d2:	add    BYTE PTR [ecx+0x53],ch
  4057d5:	pop    DWORD PTR [eax]
  4057d7:	push   ebx
  4057d8:	pop    ebx
  4057d9:	pop    DWORD PTR [eax]
  4057db:	(bad)  
  4057dc:	push   eax
  4057dd:	pop    DWORD PTR [eax]
  4057df:	xchg   ebp,eax
  4057e0:	pop    eax
  4057e1:	pop    DWORD PTR [eax]
  4057e3:	mov    ds:0xc7008f50,eax
	...
  4057fc:	pop    eax
  4057fd:	pop    DWORD PTR [eax]
  4057ff:	add    dl,dh
  405801:	sub    al,0x3
  405803:	add    dl,ah
  405805:	sub    al,BYTE PTR [ebx]
  405807:	add    BYTE PTR [esi-0x15fffcc9],bh
  40580d:	sub    al,BYTE PTR [ebx]
  40580f:	add    BYTE PTR [edx-0x6dfffcc9],cl
  405815:	aaa    
  405816:	add    eax,DWORD PTR [eax]
  405818:	mov    dl,0x37
  40581a:	add    eax,DWORD PTR [eax]
  40581c:	dec    esp
  40581d:	aaa    
  40581e:	add    eax,DWORD PTR [eax]
  405820:	inc    eax
  405821:	aaa    
  405822:	add    eax,DWORD PTR [eax]
  405824:	adc    BYTE PTR [eax],bh
  405826:	add    eax,DWORD PTR [eax]
  405828:	in     al,dx
  405829:	aaa    
  40582a:	add    eax,DWORD PTR [eax]
  40582c:	cmp    al,0x37
  40582e:	add    eax,DWORD PTR [eax]
  405830:	repnz aaa 
  405832:	add    eax,DWORD PTR [eax]
  405834:	add    BYTE PTR [eax],bh
  405836:	add    eax,DWORD PTR [eax]
  405838:	loop   0x405871
  40583a:	add    eax,DWORD PTR [eax]
  40583c:	bound  ebp,QWORD PTR [ecx]
  40583e:	add    eax,DWORD PTR [eax]
  405840:	scas   al,BYTE PTR es:[edi]
  405841:	sub    al,BYTE PTR [ebx]
  405843:	add    BYTE PTR [esi+0x4800032a],dh
  405849:	sub    DWORD PTR [ebx],eax
  40584b:	add    BYTE PTR [eax+0x29],bh
  40584e:	add    eax,DWORD PTR [eax]
  405850:	cmp    BYTE PTR [ecx],ch
  405852:	add    eax,DWORD PTR [eax]
  405854:	xor    al,0x2a
  405856:	add    eax,DWORD PTR [eax]
  405858:	mov    BYTE PTR [ebx],ch
  40585a:	add    eax,DWORD PTR [eax]
  40585c:	jl     0x405888
  40585e:	add    eax,DWORD PTR [eax]
	...
  405874:	stos   BYTE PTR es:[edi],al
  405875:	sub    al,BYTE PTR [ebx]
  405877:	add    BYTE PTR [eax],ch
  405879:	sub    DWORD PTR [ebx],eax
  40587b:	add    BYTE PTR [esi],bl
  40587d:	cmp    BYTE PTR [ebx],al
  40587f:	add    BYTE PTR [edx],cl
  405881:	cmp    BYTE PTR [ebx],al
  405883:	add    dh,al
  405885:	xor    eax,0x35d60003
  40588a:	add    eax,DWORD PTR [eax]
  40588c:	mov    ch,0xb2
  40588e:	stos   BYTE PTR es:[edi],al
  40588f:	add    esi,DWORD PTR [ebp-0x4afc5558]
  405895:	mov    edx,0xf8b503aa
  40589a:	test   eax,0xa9ecb503
  40589f:	add    esi,DWORD PTR [ebp-0x4afc56f4]
  4058a5:	cmp    BYTE PTR [ecx-0x56e54afd],ch
  4058ab:	add    esi,DWORD PTR [ebp-0x4afc56f6]
  4058b1:	adc    al,0xa9
  4058b3:	add    esi,DWORD PTR [ebp-0x4afc5790]
  4058b9:	cmp    al,0xa8
  4058bb:	add    esi,DWORD PTR [ebp-0x4afc564c]
  4058c1:	jl     0x40586c
  4058c3:	add    esi,DWORD PTR [ebp-0x4afc57b0]
  4058c9:	cmp    ch,BYTE PTR [eax-0x570d4afd]
  4058cf:	add    esi,DWORD PTR [ebp-0x4afc5722]
  4058d5:	in     al,0xa8
  4058d7:	add    eax,DWORD PTR [eax]
	...
  4058e9:	add    BYTE PTR [eax],al
  4058eb:	add    BYTE PTR [ebp-0x4afc574c],dh
  4058f1:	test   BYTE PTR [eax-0x52e54afd],ch
  4058f7:	add    esi,DWORD PTR [ebp-0x4afc52b2]
  4058fd:	sub    ch,BYTE PTR [ebp-0x52c14afd]
  405903:	add    esi,DWORD PTR [ebp-0x4afc52ac]
  405909:	inc    esi
  40590a:	lods   eax,DWORD PTR ds:[esi]
  40590b:	add    esi,DWORD PTR [ebp-0x4afc5ba6]
  405911:	jbe    0x4058b7
  405913:	add    esi,DWORD PTR [ebp-0x4afc5a78]
  405919:	(bad)  
  40591a:	mov    cl,0xa2
  40591c:	mov    dh,0x8f
  40591e:	mov    ds:0x858fb6a2,eax
  405923:	mov    ds:0xa26d8fb6,al
  405928:	mov    dh,0x8f
  40592a:	jne    0x4058ce
  40592c:	mov    dh,0x8f
  40592e:	inc    ecx
  40592f:	mov    ds:0xa2438fb6,al
  405934:	mov    dh,0x8f
  405936:	cpuid  
  405938:	mov    dh,0x8f
  40593a:	xor    DWORD PTR [edx-0x5e22704a],esp
  405940:	mov    dh,0x8f
  405942:	(bad)  
  405943:	mov    eax,ds:0xa1f38fb6
  405948:	mov    dh,0x8f
  40594a:	repz mov eax,ds:0xa5838fb6
	...
  405964:	mov    dh,0x8f
  405966:	lea    esp,[ebp-0x5a6e704a]
  40596c:	mov    dh,0x8f
  40596e:	sub    esp,DWORD PTR [ebp-0x5a66704a]
  405974:	mov    dh,0x8f
  405976:	jne    0x40591d
  405978:	mov    dh,0x8f
  40597a:	popa   
  40597b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40597c:	mov    dh,0x8f
  40597e:	mov    edi,0xd38fb6a4
  405983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405984:	mov    dh,0x8f
  405986:	popf   
  405987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405988:	mov    dh,0x8f
  40598a:	mov    eax,ds:0xd58fb6a4
  40598f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405990:	mov    dh,0x8f
  405992:	add    esp,DWORD PTR [ebp-0x5b1e704a]
  405998:	mov    dh,0x8f
  40599a:	adc    DWORD PTR [esi+esi*4-0x4956aa71],esp
  4059a1:	(bad)  
  4059a2:	adc    esp,DWORD PTR [esi+esi*4+0x592d008f]
  4059a9:	mov    WORD PTR [eax],es
  4059ab:	aas    
  4059ac:	push   ecx
  4059ad:	mov    WORD PTR [eax],es
  4059af:	jge    0x405a07
  4059b1:	mov    WORD PTR [eax],es
  4059b3:	imul   edx,DWORD PTR [esi-0x74],0x8c594100
  4059ba:	add    BYTE PTR [ecx],bh
  4059bc:	push   ecx
  4059bd:	mov    WORD PTR [eax],es
  4059bf:	sub    DWORD PTR [ecx],ebx
  4059c1:	mov    WORD PTR [eax],es
  4059c3:	adc    DWORD PTR [ecx],edx
  4059c5:	mov    WORD PTR [eax],es
  4059c7:	in     eax,0x0
	...
  4059d9:	add    BYTE PTR [eax],al
  4059db:	add    BYTE PTR [esi],dl
  4059dd:	mov    WORD PTR [eax],es
  4059df:	lods   eax,DWORD PTR ds:[esi]
  4059e0:	sub    ecx,DWORD PTR [eax+eax*1+0x8c4397]
  4059e7:	mov    edi,0xb9008c3b
  4059ec:	xor    ecx,DWORD PTR [eax+eax*1+0x8c2b4f]
  4059f3:	push   ecx
  4059f4:	inc    ebx
  4059f5:	xchg   ebx,eax
  4059f6:	add    BYTE PTR [ebp+0x3b],bl
  4059f9:	xchg   ebx,eax
  4059fa:	add    BYTE PTR [edi+0x33],ch
  4059fd:	xchg   ebx,eax
  4059fe:	add    ch,dh
  405a00:	sub    edx,DWORD PTR [ebx-0x6cbc3500]
  405a06:	add    BYTE PTR [ebx-0x56ff6cc5],bh
  405a0c:	xor    edx,DWORD PTR [ebx-0x6cd5eb00]
  405a12:	add    bh,ah
  405a14:	inc    ebx
  405a15:	xchg   ebx,eax
  405a16:	add    bl,bl
  405a18:	cmp    edx,DWORD PTR [ebx-0x6ccfcf00]
  405a1e:	add    BYTE PTR [edi+0x28],al
  405a21:	xchg   ebx,eax
  405a22:	add    BYTE PTR [edi],bh
  405a24:	inc    eax
  405a25:	xchg   ebx,eax
  405a26:	add    BYTE PTR [ebx],dh
  405a28:	cmp    BYTE PTR [ebx-0x6ccfad00],dl
  405a2e:	add    BYTE PTR ds:0x9328,bh
  405a34:	jl     0x405a42
  405a36:	add    eax,DWORD PTR [eax]
  405a38:	or     BYTE PTR [ebx+eax*1],0x0
  405a3c:	pusha  
  405a3d:	or     eax,0x3
	...
  405a52:	add    BYTE PTR [eax],al
  405a54:	mov    BYTE PTR [ebx+eax*1],cl
  405a57:	add    BYTE PTR [ebp+ecx*1+0x3],ah
  405a5b:	add    ah,cl
  405a5d:	or     eax,0xdd00003
  405a62:	add    eax,DWORD PTR [eax]
  405a64:	dec    esp
  405a65:	aaa    
  405a66:	add    eax,DWORD PTR [eax]
  405a68:	fcom   QWORD PTR [edx+0x29ee0000]
  405a6e:	add    eax,DWORD PTR [eax]
  405a70:	or     ch,BYTE PTR [edx]
  405a72:	add    eax,DWORD PTR [eax]
  405a74:	clc    
  405a75:	sub    DWORD PTR [ebx],eax
  405a77:	add    ah,bl
  405a79:	xchg   edx,eax
  405a7a:	add    BYTE PTR [eax],al
  405a7c:	les    edx,FWORD PTR [edx-0x6d2a8000]
  405a82:	add    BYTE PTR [eax-0x7fff6d2e],al
  405a88:	sahf   
  405a89:	xchg   edx,eax
  405a8a:	add    BYTE PTR [eax+0x929c],al
  405a90:	(bad)  
  405a91:	and    BYTE PTR [ebx],al
  405a93:	add    BYTE PTR [edx+0x6400031f],cl
  405a99:	pop    ds
  405a9a:	add    eax,DWORD PTR [eax]
  405a9c:	pushf  
  405a9d:	xchg   edx,eax
  405a9e:	add    BYTE PTR [eax],al
  405aa0:	push   esp
  405aa1:	pop    ds
  405aa2:	add    eax,DWORD PTR [eax]
  405aa4:	mov    al,ds:0xc0000320
  405aa9:	and    BYTE PTR [ebx],al
  405aab:	add    BYTE PTR [esi-0x57fffce1],cl
  405ab1:	and    DWORD PTR [ebx],eax
  405ab3:	add    BYTE PTR [eax+0x321],bl
	...
  405ac9:	add    BYTE PTR [eax],al
  405acb:	add    BYTE PTR [esi-0xbfffcdf],bh
  405ad1:	and    DWORD PTR [ebx],eax
  405ad3:	add    BYTE PTR [ebp-0x4afc4d4c],dh
  405ad9:	test   al,0xb2
  405adb:	add    esi,DWORD PTR [ebp-0x4afc4d66]
  405ae1:	(bad)  
  405ae2:	mov    dl,0x3
  405ae4:	mov    ch,0xbe
  405ae6:	mov    dl,0x3
  405ae8:	mov    ch,0xe8
  405aea:	mov    dl,0x3
  405aec:	mov    ch,0xc4
  405aee:	mov    dl,0x3
  405af0:	mov    ch,0xd0
  405af2:	mov    dl,0x3
  405af4:	mov    ch,0xaa
  405af6:	mov    dl,0x3
  405af8:	mov    ch,0x86
  405afa:	mov    dl,0x3
  405afc:	mov    ch,0x8c
  405afe:	mov    dl,0x3
  405b00:	mov    ch,0x6e
  405b02:	add    eax,DWORD PTR [eax]
  405b04:	xor    eax,0xb503b13e
  405b09:	jo     0x405abc
  405b0b:	add    esi,DWORD PTR [ebp-0x4afc4e08]
  405b11:	adc    al,0xb2
  405b13:	add    esi,DWORD PTR [ebp-0x4afc4de0]
  405b19:	sub    dh,BYTE PTR [edx-0x4d3b4afd]
  405b1f:	add    esi,DWORD PTR [ebp-0x4afffc9a]
  405b25:	aam    0xb0
  405b27:	add    esi,DWORD PTR [ebp-0x4afffc9a]
  405b2d:	je     0x405ac7
  405b2f:	add    eax,DWORD PTR [eax]
	...
  405b41:	add    BYTE PTR [eax],al
  405b43:	add    BYTE PTR [ebp-0x4afc67c2],dh
  405b49:	and    bl,BYTE PTR [eax-0x68034afd]
  405b4f:	add    esi,DWORD PTR [ebp-0x4afc666e]
  405b55:	mov    WORD PTR [ecx-0x67bb4afd],ds
  405b5b:	add    esi,DWORD PTR [ebp-0x4afc67ca]
  405b61:	(bad)  
  405b62:	jmp    0x405afc
  405b64:	mov    dh,0x8f
  405b66:	pop    ss
  405b67:	cdq    
  405b68:	mov    dh,0x8f
  405b6a:	setns  BYTE PTR [esi-0x4967ba71]
  405b71:	(bad)  
  405b72:	push   ebp
  405b73:	cwde   
  405b74:	mov    dh,0x8f
  405b76:	cmp    eax,0x238fb698
  405b7b:	cwde   
  405b7c:	mov    dh,0x8f
  405b7e:	pop    ss
  405b7f:	cwde   
  405b80:	mov    dh,0x8f
  405b82:	retf   
  405b83:	lahf   
  405b84:	mov    dh,0x8f
  405b86:	fstp   DWORD PTR [edi-0x6816704a]
  405b8c:	mov    dh,0x8f
  405b8e:	fst    QWORD PTR [edi-0x6818704a]
  405b94:	mov    dh,0x8f
  405b96:	stc    
  405b97:	xchg   edi,eax
  405b98:	mov    dh,0x8f
  405b9a:	sub    DWORD PTR [eax-0x609c704a],ebx
  405ba0:	mov    dh,0x8f
  405ba2:	inc    ebp
  405ba3:	cwde   
  405ba4:	mov    dh,0x8f
  405ba6:	sets   BYTE PTR [eax]
	...
  405bb9:	add    BYTE PTR [eax],al
  405bbb:	add    BYTE PTR [esi-0x49679671],dh
  405bc1:	(bad)  
  405bc2:	jnp    0x405b5c
  405bc4:	mov    dh,0x8f
  405bc6:	dec    edi
  405bc7:	cwde   
  405bc8:	mov    dh,0x8f
  405bca:	xor    eax,0xa18fb698
  405bcf:	cwde   
  405bd0:	mov    dh,0x8f
  405bd2:	xchg   ecx,eax
  405bd3:	cwde   
  405bd4:	mov    dh,0x8f
  405bd6:	push   ebp
  405bd7:	cwde   
  405bd8:	mov    dh,0x8f
  405bda:	pop    edi
  405bdb:	cwde   
  405bdc:	mov    dh,0x8f
  405bde:	out    0x98,eax
  405be0:	mov    dh,0x8f
  405be2:	out    dx,eax
  405be3:	cwde   
  405be4:	mov    dh,0x8f
  405be6:	call   FWORD PTR [eax-0x6574704a]
  405bec:	mov    dh,0x8f
  405bee:	add    BYTE PTR [ebp+0x3f],bl
  405bf1:	nop
  405bf2:	add    BYTE PTR [ebx+0x2f],ch
  405bf5:	nop
  405bf6:	add    BYTE PTR [ecx-0x7aff6fd4],bl
  405bfc:	sbb    al,0x90
  405bfe:	add    BYTE PTR [ecx-0x2aff6fe4],ah
  405c04:	dec    esp
  405c05:	nop
  405c06:	add    BYTE PTR [ebx+0x55009042],bl
  405c0c:	inc    edx
  405c0d:	nop
  405c0e:	add    cl,cl
  405c10:	cmp    al,0x90
  405c12:	add    ch,bl
  405c14:	sub    al,0x90
  405c16:	add    bl,bl
  405c18:	sub    eax,0x1dcb0090
  405c1d:	nop
  405c1e:	add    bl,dl
	...
  405c34:	push   edi
  405c35:	nop
  405c36:	add    bh,ah
  405c38:	dec    esi
  405c39:	nop
  405c3a:	add    bl,ah
  405c3c:	dec    esi
  405c3d:	nop
  405c3e:	add    BYTE PTR [edi],cl
  405c40:	inc    ecx
  405c41:	nop
  405c42:	add    BYTE PTR [ebx],ch
  405c44:	cmp    DWORD PTR [eax-0x6fcee700],edx
  405c4a:	add    BYTE PTR [edi],cl
  405c4c:	sub    DWORD PTR [eax-0x6fe19500],edx
  405c52:	add    BYTE PTR [edi+0x1e],bh
  405c55:	nop
  405c56:	add    BYTE PTR [edi+0x4e],al
  405c59:	pop    DWORD PTR [eax]
  405c5b:	lahf   
  405c5c:	dec    eax
  405c5d:	pop    DWORD PTR [eax]
  405c5f:	mov    cl,0x40
  405c61:	pop    DWORD PTR [eax]
  405c63:	xor    DWORD PTR [eax],edi
  405c65:	pop    DWORD PTR [eax]
  405c67:	inc    edi
  405c68:	xor    BYTE PTR [edi-0x70d77f00],cl
  405c6e:	add    BYTE PTR [ecx+0x20],dh
  405c71:	pop    DWORD PTR [eax]
  405c73:	rcr    DWORD PTR [eax],1
  405c75:	pop    DWORD PTR [eax]
  405c77:	rcl    DWORD PTR [eax-0x71],0x0
  405c7b:	add    BYTE PTR [esi-0x3],cl
  405c7e:	add    al,BYTE PTR [eax]
  405c80:	sbb    bh,ch
  405c82:	add    al,BYTE PTR [eax]
  405c84:	pop    eax
  405c85:	std    
  405c86:	add    al,BYTE PTR [eax]
  405c88:	mov    eax,0x4e0002f9
  405c8d:	std    
  405c8e:	add    al,BYTE PTR [eax]
  405c90:	dec    esi
  405c91:	std    
  405c92:	add    al,BYTE PTR [eax]
  405c94:	stos   BYTE PTR es:[edi],al
  405c95:	sti    
  405c96:	add    al,BYTE PTR [eax]
	...
  405cac:	in     al,0xfb
  405cae:	add    al,BYTE PTR [eax]
  405cb0:	out    0xfb,al
  405cb2:	add    al,BYTE PTR [eax]
  405cb4:	loopne 0x405cb1
  405cb6:	add    al,BYTE PTR [eax]
  405cb8:	je     0x405cb5
  405cba:	add    al,BYTE PTR [eax]
  405cbc:	cmp    bl,0x2
  405cbf:	add    BYTE PTR [esp+edi*8+0x2],cl
  405cc3:	add    ah,ah
  405cc5:	sti    
  405cc6:	add    al,BYTE PTR [eax]
  405cc8:	push   edx
  405cc9:	add    eax,DWORD PTR [ebx]
  405ccb:	add    BYTE PTR [ebx+eax*1],bl
  405cce:	add    eax,DWORD PTR [eax]
  405cd0:	outs   dx,BYTE PTR ds:[esi]
  405cd1:	add    al,BYTE PTR [ebx]
  405cd3:	add    BYTE PTR [esi],ch
  405cd5:	add    eax,DWORD PTR [ebx]
  405cd7:	add    BYTE PTR [edx+0x2],dl
  405cda:	add    eax,DWORD PTR [eax]
  405cdc:	xchg   BYTE PTR [edx],al
  405cde:	add    eax,DWORD PTR [eax]
  405ce0:	lods   al,BYTE PTR ds:[esi]
  405ce1:	add    al,BYTE PTR [ebx]
  405ce3:	add    BYTE PTR [eax-0x69fffcfe],al
  405ce9:	add    al,BYTE PTR [ebx]
  405ceb:	add    BYTE PTR [edx-0x5],al
  405cee:	add    al,BYTE PTR [eax]
  405cf0:	mov    ?,ebp
  405cf2:	add    al,BYTE PTR [eax]
  405cf4:	jo     0x405ceb
  405cf6:	add    al,BYTE PTR [eax]
  405cf8:	(bad)  
  405cf9:	cmc    
  405cfa:	add    al,BYTE PTR [eax]
  405cfc:	mov    al,0xf6
  405cfe:	add    al,BYTE PTR [eax]
  405d00:	jo     0x405cf7
  405d02:	add    al,BYTE PTR [eax]
  405d04:	jb     0x405cfb
  405d06:	add    al,BYTE PTR [eax]
  405d08:	mov    ch,0x42
  405d0a:	call   0x3:0x9bbab503
	...
  405d21:	add    BYTE PTR [eax],al
  405d23:	add    BYTE PTR [ebp-0x4afc6326],dh
  405d29:	push   0x82b50003
  405d2e:	lods   al,BYTE PTR ds:[esi]
  405d2f:	add    esi,DWORD PTR [ebp-0x4afc534c]
  405d35:	retf   0x3ac
  405d38:	mov    ch,0xea
  405d3a:	lods   al,BYTE PTR ds:[esi]
  405d3b:	add    esi,DWORD PTR [ebp-0x4afc5502]
  405d41:	adc    al,0xab
  405d43:	add    esi,DWORD PTR [ebp-0x4afc54d6]
  405d49:	inc    eax
  405d4a:	stos   DWORD PTR es:[edi],eax
  405d4b:	add    esi,DWORD PTR [ebp-0x4afc54ca]
  405d51:	ins    BYTE PTR es:[edi],dx
  405d52:	mov    al,0x3
  405d54:	mov    ch,0x4a
  405d56:	mov    al,0x3
  405d58:	mov    ch,0x2a
  405d5a:	mov    al,0x3
  405d5c:	mov    ch,0x0
  405d5e:	mov    al,0x3
  405d60:	mov    ch,0x10
  405d62:	mov    al,0x3
  405d64:	mov    ch,0xbc
  405d66:	mov    al,0x3
  405d68:	mov    ch,0xce
  405d6a:	mov    cl,0x3
  405d6c:	mov    ch,0xca
  405d6e:	mov    cl,0x3
  405d70:	mov    ch,0x78
  405d72:	mov    cl,0x3
  405d74:	mov    ch,0x70
  405d76:	mov    al,0x3
  405d78:	mov    ch,0xfa
  405d7a:	mov    al,0x3
  405d7c:	mov    ch,0x56
  405d7e:	mov    al,0x3
  405d80:	mov    ch,0x52
  405d82:	mov    al,0x3
  405d84:	mov    ch,0x66
  405d86:	add    eax,DWORD PTR [eax]
	...
  405d9c:	mov    ch,0x89
  405d9e:	add    al,0x0
  405da0:	xor    eax,0x35000335
  405da5:	icebp  
  405da6:	scas   al,BYTE PTR es:[edi]
  405da7:	add    esi,DWORD PTR [ebp-0x4afc2571]
  405dad:	pmulhw mm0,QWORD PTR [ebx]
  405db0:	mov    ch,0xf
  405db2:	jge    0x405d62
  405db4:	mov    dh,0x8f
  405db6:	out    0x3,al
  405db8:	mov    ch,0xf
  405dba:	xchg   ebx,eax
  405dbb:	scas   al,BYTE PTR es:[edi]
  405dbc:	mov    dh,0x8f
  405dbe:	in     eax,dx
  405dbf:	mov    cl,0xb6
  405dc1:	(bad)  
  405dc2:	jmp    0x405d75
  405dc4:	mov    dh,0x8f
  405dc6:	cmp    ebp,DWORD PTR [esi+0x3ec8fb6]
  405dcc:	mov    ch,0xf
  405dce:	pop    es
  405dcf:	scas   al,BYTE PTR es:[edi]
  405dd0:	mov    dh,0x8f
  405dd2:	clc    
  405dd3:	add    esi,DWORD PTR [ebp-0x4951e0f1]
  405dd9:	pop    DWORD PTR [ebp-0x52]
  405ddc:	mov    dh,0x8f
  405dde:	out    0x3,eax
  405de0:	mov    ch,0xf
  405de2:	fadd   QWORD PTR [ebx]
  405de4:	mov    ch,0xf
  405de6:	xlat   BYTE PTR ds:[ebx]
  405de7:	add    esi,DWORD PTR [ebp-0x4afba2f1]
  405ded:	psubw  mm0,QWORD PTR [ebx]
  405df0:	mov    ch,0xf
  405df2:	jmp    0x405df7
  405df4:	mov    ch,0xf
  405df6:	test   BYTE PTR [ebx],0xb5
  405df9:	(bad)  
  405dfb:	mov    cl,0xb6
  405dfd:	(bad)  
  405dfe:	cmp    DWORD PTR [eax+eax*1],eax
	...
  405e11:	add    BYTE PTR [eax],al
  405e13:	add    BYTE PTR [ebp-0x4afc15f1],dh
  405e19:	pminub mm0,QWORD PTR [ebx]
  405e1c:	mov    ch,0xf
  405e1e:	hlt    
  405e1f:	add    esi,DWORD PTR [ebp-0x4afc17f1]
  405e25:	paddw  mm0,QWORD PTR [ebx]
  405e28:	mov    ch,0xf
  405e2a:	jmp    0xfdd01332
  405e2f:	lods   al,BYTE PTR ds:[esi]
  405e30:	mov    dh,0x8f
  405e32:	jmp    FWORD PTR [esi+esi*4+0x6061008f]
  405e39:	mov    WORD PTR [eax],es
  405e3b:	pop    ebx
  405e3c:	pop    eax
  405e3d:	mov    WORD PTR [eax],es
  405e3f:	test   DWORD PTR [eax-0x74],edx
  405e42:	add    BYTE PTR [ebp-0x78ff73b8],al
  405e48:	and    BYTE PTR [eax+eax*1+0x8c1891],cl
  405e4f:	sub    edx,DWORD PTR [eax]
  405e51:	mov    WORD PTR [eax],es
  405e53:	sub    eax,0x11008c08
  405e58:	and    BYTE PTR [eax+eax*1+0x8c1847],cl
  405e5f:	sbb    eax,0x1f008c10
  405e64:	or     BYTE PTR [eax+eax*1+0x8c5f7b],cl
  405e6b:	jmp    0x9140ee26
  405e70:	push   edx
  405e71:	mov    WORD PTR [eax],es
  405e73:	cdq    
  405e74:	dec    edx
  405e75:	mov    WORD PTR [eax],es
  405e77:	mov    bh,0x0
	...
  405e89:	add    BYTE PTR [eax],al
  405e8b:	add    BYTE PTR [edx-0x74],ah
  405e8e:	add    BYTE PTR [ebp+0x3008c5a],bh
  405e94:	inc    ebp
  405e95:	mov    WORD PTR [eax],es
  405e97:	jmp    0x405ee3
  405e99:	mov    WORD PTR [eax],es
  405e9b:	fldenv [edi]
  405e9d:	mov    WORD PTR [eax],es
  405e9f:	lods   eax,DWORD PTR ds:[esi]
  405ea0:	daa    
  405ea1:	mov    WORD PTR [eax],es
  405ea3:	mov    ch,0x27
  405ea5:	mov    WORD PTR [eax],es
  405ea7:	jmp    0x9240ee62
  405eac:	xor    eax,0x55b03e21
  405eb1:	popa   
  405eb2:	dec    esp
  405eb3:	dec    ecx
  405eb4:	mov    WORD PTR [edi+ebp*8+0x4],gs
  405eb8:	inc    edi
  405eb9:	clc    
  405eba:	cmp    al,0x4d
  405ebc:	pop    ecx
  405ebd:	mov    al,0xa5
  405ebf:	imul   edi,DWORD PTR [ebx-0x6ffb0a3],0xcf73168a
  405ec9:	push   eax
  405eca:	scas   eax,DWORD PTR es:[edi]
  405ecb:	push   ss
  405ecc:	xchg   ebx,eax
  405ecd:	popf   
  405ece:	rcr    DWORD PTR [edx],0x33
  405ed1:	xchg   ecx,eax
  405ed2:	pop    ebp
  405ed3:	dec    esi
  405ed4:	and    edx,DWORD PTR [edi-0x43d54ed2]
  405eda:	cwde   
  405edb:	mov    bh,0x60
  405edd:	addr16 mov esi,ebx
  405ee0:	pop    ds
  405ee1:	mov    dl,dh
  405ee3:	inc    edx
  405ee4:	dec    DWORD PTR [edi+0x7b67de67]
  405eea:	cld    
  405eeb:	and    ebx,ebx
  405eed:	(bad)  
  405eef:	pop    esi
	...
  405f04:	mov    esi,0x36475f5d
  405f09:	ins    DWORD PTR es:[edi],dx
  405f0a:	jmp    0x9d73:0x71254333
  405f11:	sub    eax,0xea022933
  405f16:	rcl    BYTE PTR [ecx],cl
  405f18:	ficomp WORD PTR [edi+edi*8-0x41]
  405f1c:	dec    ebx
  405f1d:	or     edi,DWORD PTR [esi]
  405f1f:	pusha  
  405f20:	jno    0x405f4f
  405f22:	xor    ebp,DWORD PTR [ecx]
  405f24:	inc    edx
  405f25:	jmp    0xbfff:0x5e1e11d2
  405f2c:	retf   
  405f2d:	add    edi,DWORD PTR [esi]
  405f2f:	pusha  
  405f30:	into   
  405f31:	fadd   QWORD PTR [edi]
  405f33:	cmc    
  405f34:	lods   eax,DWORD PTR ds:[esi]
  405f35:	push   ss
  405f36:	rcl    DWORD PTR [ecx],cl
  405f38:	sub    al,BYTE PTR gs:[eax]
  405f3b:	add    ah,dh
  405f3d:	mov    edx,fs
  405f3f:	and    DWORD PTR [ecx+ebp*4],edi
  405f42:	dec    eax
  405f43:	loopne 0x405f60
  405f45:	xchg   ebp,eax
  405f46:	pushf  
  405f47:	dec    ebp
  405f48:	jb     0x405f8f
  405f4a:	ja     0x405f8d
  405f4c:	cld    
  405f4d:	and    dl,BYTE PTR [ebp+0x79f3b5f7]
  405f53:	mov    DWORD PTR [edx-0x4cd45d4],esp
  405f59:	retf   0xdad8
  405f5c:	mov    bl,0xb
  405f5e:	adc    ebx,DWORD PTR [edx]
  405f60:	xchg   DWORD PTR [esi],esp
  405f62:	aas    
  405f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f64:	mov    ecx,0x6c2d93
	...
  405f79:	add    BYTE PTR [eax],al
  405f7b:	add    bh,ch
  405f7d:	sub    eax,0x59039f92
  405f82:	std    
  405f83:	jge    0x405fed
  405f85:	sub    bl,dl
  405f87:	dec    esp
  405f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f89:	jg     0x405fe1
  405f8b:	fdiv   st,st(5)
  405f8d:	mov    ah,0x2a
  405f8f:	mov    ecx,0x9bf8acc6
  405f94:	imul   eax,eax,0xd7185527
  405f9a:	(bad)  
  405f9b:	dec    edx
  405f9c:	cli    
  405f9d:	fimul  WORD PTR ds:0x6e48a9fc
  405fa3:	mov    bh,0xed
  405fa5:	fwait
  405fa6:	sbb    eax,0x48c3a5dd
  405fab:	call   0x24352e2b
  405fb0:	arpl   WORD PTR [ecx-0x2ebdd7c2],bx
  405fb6:	mov    esp,0x95f08465
  405fbb:	mov    ebp,0x53e6e677
  405fc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fc1:	cld    
  405fc2:	sbb    bl,BYTE PTR [edx-0x49]
  405fc5:	ds (bad) 
  405fc7:	shr    DWORD PTR [ebx+0x6b],0x73
  405fcb:	rol    esp,1
  405fcd:	sti    
  405fce:	xchg   edx,eax
  405fcf:	add    ch,dh
  405fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fd2:	int3   
  405fd3:	std    
  405fd4:	shl    dh,cl
  405fd6:	popf   
  405fd7:	adc    ch,cl
  405fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fda:	jno    0x405fab
  405fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fdd:	(bad)  
  405fde:	jno    0x406016
	...
  405ff4:	mov    ch,0x29
  405ff6:	jmp    0x73ec4333
  405ffb:	daa    
  405ffc:	loopne 0x405fc4
  405ffe:	add    dl,BYTE PTR [ebx-0x7c]
  406001:	jg     0x40605a
  406003:	popf   
  406004:	mov    ch,0x4f
  406006:	cs scas al,BYTE PTR es:[edi]
  406008:	cmp    eax,0xa79d69b0
  40600d:	xor    ebp,esi
  40600f:	jo     0x406083
  406011:	jg     0x406084
  406013:	ss mov ch,0x29
  406016:	jmp    0x70ec0353
  40601b:	mov    DWORD PTR [ebx],0x72815cfb
  406021:	jg     0x405fad
  406023:	gs mov ch,0x29
  406026:	jmp    0x6e8d555c
  40602b:	popf   
  40602c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40602d:	xor    ebp,DWORD PTR [esi+0x717f7270]
  406033:	ss mov ch,0x29
  406036:	jmp    0xe8ec4373
  40603b:	imul   esi,DWORD PTR [eax],0xffffffd4
  40603e:	push   0x717ef270
  406043:	ss mov ch,0x29
  406046:	jmp    0x8ec4383
  40604b:	cmp    al,0x8c
  40604d:	xchg   ecx,eax
  40604e:	mov    eax,0x8a7ef3cc
  406053:	cmp    esi,DWORD PTR [ebp+0x3e98f]
	...
  406069:	add    BYTE PTR [eax],al
  40606b:	add    BYTE PTR [ebp+0x19aa5c8e],dh
  406071:	int3   
  406072:	int    0xec
  406074:	add    eax,0xb560897f
  406079:	dec    edi
  40607a:	cs call 0x241f:0x3d00b03d
  406082:	inc    esp
  406083:	lods   eax,DWORD PTR ds:[esi]
  406084:	sar    DWORD PTR [edi],1
  406086:	adc    DWORD PTR [ecx+0x55],ecx
  406089:	pop    eax
  40608b:	cs dec edi
  40608d:	pop    es
  40608e:	and    BYTE PTR [ebp+0x4b],ah
  406091:	pop    ecx
  406092:	sbb    al,0xca
  406094:	popf   
  406095:	aas    
  406096:	adc    DWORD PTR [eax+edi*8-0x71],edx
  40609a:	shr    BYTE PTR [esi],0x51
  40609d:	push   edx
  40609e:	(bad)  
  40609f:	in     eax,dx
  4060a0:	xor    eax,0xaaf831e0
  4060a5:	pop    ebx
  4060a6:	dec    esp
  4060a7:	adc    DWORD PTR ds:0x5fb3a4bd,0x76
  4060ae:	push   esi
  4060af:	xchg   ebp,eax
  4060b0:	push   eax
  4060b1:	or     al,0xeb
  4060b3:	sbb    cl,bl
  4060b5:	inc    ecx
  4060b6:	adc    DWORD PTR [edi-0x513f7098],edx
  4060bc:	sub    al,0x7
  4060be:	and    BYTE PTR [esi],ch
  4060c0:	mov    ds:0x1562c3f5,eax
  4060c5:	inc    ecx
  4060c6:	adc    DWORD PTR [ebp+edi*8-0x72],ebp
  4060ca:	adc    bl,al
  4060cc:	mov    bh,0x10
  4060ce:	add    al,0x2c
	...
  4060e4:	div    DWORD PTR [ebp-0x64f1055d]
  4060ea:	dec    eax
  4060eb:	jae    0x4060b8
  4060ed:	sbb    DWORD PTR [edi-0x24],edi
  4060f0:	outs   dx,DWORD PTR ds:[esi]
  4060f1:	shl    BYTE PTR [esi+0x50],cl
  4060f4:	aad    0x9a
  4060f6:	dec    ecx
  4060f7:	or     cl,0x3e
  4060fa:	adc    DWORD PTR [edi+0x2ec08f4c],edx
  406100:	dec    edi
  406101:	pop    es
  406102:	and    BYTE PTR [ecx-0x10],ah
  406105:	mov    DWORD PTR [edi],esp
  406107:	jg     0x40608a
  406109:	inc    ecx
  40610a:	adc    DWORD PTR [eax],eax
  40610c:	pop    edi
  40610d:	enter  0x1000,0x96
  406111:	nop
  406112:	xor    DWORD PTR [edi+0x6e],0x77493574
  406119:	call   0xc000:0x266211d1
  406120:	jecxz  0x406117
  406122:	xchg   DWORD PTR [eax],esp
  406124:	lods   eax,DWORD PTR ds:[esi]
  406125:	aaa    
  406126:	nop
  406127:	inc    ebp
  406128:	xchg   BYTE PTR [eax-0x71daee30],dl
  40612e:	add    BYTE PTR [edx+0x242ec29c],ch
  406134:	in     al,0xe8
  406136:	dec    ebx
  406137:	fisub  WORD PTR [bx+si-0x30]
  40613b:	adc    DWORD PTR [ecx],esp
  40613d:	mov    esp,0x1723c000
  406142:	std    
  406143:	push   DWORD PTR [ebx+ebp*4+0x49bd]
	...
  40615a:	add    BYTE PTR [eax],al
  40615c:	scas   eax,DWORD PTR es:[edi]
  40615d:	pop    eax
  40615e:	rcl    BYTE PTR [ecx],1
  406160:	inc    ecx
  406161:	mov    ah,0x0
  406163:	shl    BYTE PTR [ebx],0x17
  406166:	std    
  406167:	(bad)  
  406168:	fidivr DWORD PTR [esi+0x65]
  40616b:	call   0x33d9:0x11d15623
  406172:	add    BYTE PTR [eax],dl
  406174:	addr16 mov edi,0xd66bfd3e
  40617a:	scas   eax,DWORD PTR es:[edi]
  40617b:	ins    DWORD PTR es:[edi],dx
  40617c:	or     esp,DWORD PTR [ecx+0x438211d2]
  406182:	add    al,al
  406184:	arpl   cx,di
  406186:	xchg   DWORD PTR [eax],esp
  406188:	shr    DWORD PTR [ebx-0x79],0xeb
  40618c:	aas    
  40618d:	jge    0x406161
  40618f:	adc    DWORD PTR [edx],esp
  406191:	inc    edi
  406192:	add    al,al
  406194:	mov    ds:0xb52087f5,eax
  406199:	and    dl,BYTE PTR [esi]
  40619b:	sahf   
  40619c:	stc    
  40619d:	in     eax,dx
  40619e:	mov    al,ds:0xb8e3c4d2
  4061a3:	add    BYTE PTR [ebp-0x4e7cfe52],ah
  4061a9:	push   ss
  4061aa:	push   0x15
  4061ac:	cli    
  4061ad:	inc    edx
  4061ae:	cmp    ecx,edx
  4061b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061b1:	mov    ebx,0xa1750089
  4061b6:	mov    esp,0x37dbaafd
  4061bb:	sbb    al,0x30
  4061bd:	clc    
  4061be:	xchg   DWORD PTR [ebx+0x0],esi
	...
  4061d4:	out    dx,al
  4061d5:	shl    DWORD PTR [edi+0x3ea55a56],0x9b
  4061dc:	push   ebx
  4061dd:	(bad)  
  4061df:	mov    dl,0x4a
  4061e1:	cmp    esi,DWORD PTR [esi+0x7a4d3]
  4061e7:	add    ch,al
  4061e9:	dec    esi
  4061ea:	add    BYTE PTR [ecx+0xf],dl
  4061ed:	jg     0x40617b
  4061ef:	mov    edi,0xd3ce9922
  4061f4:	les    eax,FWORD PTR [edi]
  4061f6:	std    
  4061f7:	inc    edx
  4061f9:	add    BYTE PTR cs:[ecx-0x11],dl
  4061fd:	sub    bh,BYTE PTR [eax-0x51]
  406200:	rcr    BYTE PTR [ecx+0x31],1
  406203:	shl    BYTE PTR [edx+edi*4+0x20f500cb],cl
  40620a:	cdq    
  40620b:	mov    ch,dl
  40620d:	push   0x68b50003
  406212:	add    eax,DWORD PTR [eax]
  406214:	mov    ch,0xd8
  406216:	add    BYTE PTR [ebx-0x4b],al
  406219:	ins    BYTE PTR es:[edi],dx
  40621a:	add    eax,DWORD PTR [esi*4-0x4afbfc90]
  406221:	push   0x8fb54322
  406226:	in     eax,dx
  406227:	add    edi,DWORD PTR [eax-0x42fc0671]
  40622d:	(bad)
  406231:	(bad)  
  406232:	in     eax,0x3
  406234:	mov    bl,0x8f
  406236:	or     DWORD PTR [eax+eax*1],eax
	...
  406249:	add    BYTE PTR [eax],al
  40624b:	add    BYTE PTR [ebp+0x7622e98f],dl
  406251:	(bad)  
  406252:	in     eax,dx
  406253:	add    edi,DWORD PTR [ecx-0x5afc2671]
  406259:	(bad)  
  40625a:	fldenv [edi]
  40625c:	test   BYTE PTR [edi-0x703afc0f],0xc9
  406263:	add    edx,ebp
  406265:	(bad)  
  406266:	fldenv [edi]
  406268:	test   BYTE PTR [edi-0x705afc0f],0x69
  40626f:	add    esi,DWORD PTR ds:0xf627b990
  406275:	(bad)  
  406276:	loope  0x40627b
  406278:	aad    0x8f
  40627a:	imul   eax,DWORD PTR [ebx],0x28198eb5
  406280:	test   BYTE PTR [edi-0x6fcafbf7],0xeb
  406287:	add    dh,BYTE PTR [ebp-0x9d80675]
  40628d:	(bad)
  406291:	mov    gs,ebx
  406293:	add    dh,BYTE PTR [ebp-0x9d80681]
  406299:	(bad)
  40629d:	(bad)
  4062a1:	(bad)
  4062a5:	(bad)
  4062a9:	(bad)
  4062ad:	(bad)  
  4062ae:	aad    0xb
	...
  4062c4:	xchg   BYTE PTR [edi+0x70addb00],cl
  4062ca:	add    cl,ch
  4062cc:	scas   al,BYTE PTR es:[edi]
  4062cd:	fild   WORD PTR [eax]
  4062cf:	jmp    0xe9410292
  4062d4:	mov    ecx,0xbbf9004f
  4062d9:	test   DWORD PTR [eax],eax
  4062db:	jmp    0xe941528e
  4062e0:	mov    esi,0xb9e900af
  4062e5:	das    
  4062e6:	add    cl,ch
  4062e8:	scas   al,BYTE PTR es:[edi]
  4062e9:	pop    DWORD PTR [eax]
  4062eb:	jmp    0xe940729e
  4062f0:	mov    esi,0xb9e900cf
  4062f5:	outs   dx,DWORD PTR ds:[esi]
  4062f6:	add    cl,bh
  4062f8:	mov    ebx,0xaee90089
  4062fd:	mov    bh,0x0
  4062ff:	jmp    0xe940dac2
  406304:	mov    ecx,0xbbd9ffff
  406309:	xchg   esp,eax
  40630a:	add    cl,ch
  40630c:	scas   al,BYTE PTR es:[edi]
  40630d:	xlat   BYTE PTR ds:[ebx]
  40630e:	add    cl,ch
  406310:	mov    esi,0xb9e90097
  406315:	aas    
  406316:	add    al,bh
  406318:	mov    ebx,0xaee9007e
  40631d:	out    0x0,eax
  40631f:	jmp    0xe9410ae2
  406324:	mov    ecx,0xe9001f
	...
  406339:	add    BYTE PTR [eax],al
  40633b:	add    BYTE PTR [esi-0x5116ff79],ch
  406341:	pop    es
  406342:	add    cl,ch
  406344:	mov    esi,0xb9e900c7
  406349:	pop    edi
  40634a:	add    cl,bh
  40634c:	mov    ebx,0xaee9008b
  406351:	mov    ebx,0x841c0000
  406356:	adc    al,0x0
  406358:	loope  0x4062dd
  40635a:	jecxz  0x40635c
  40635c:	fisttp WORD PTR [eax-0x7bf3ffd5]
  406362:	je     0x406364
  406364:	fadd   QWORD PTR [ebx-0x7d23ffcc]
  40636a:	enter  0xdd00,0x88
  40636e:	or     eax,0x6483cc00
  406373:	add    ah,bl
  406375:	and    DWORD PTR [eax+eax*1],0xffffffdc
  406379:	sub    BYTE PTR [eax+0x483cc00],0x0
  406380:	int3   
  406381:	add    DWORD PTR [eax+eax*1+0x449b9c],0xffffff9c
  406389:	pushf  
  40638a:	call   0x8d6ff8f
  40638f:	add    BYTE PTR [ebx+ebx*4-0x6463ffa4],cl
  406396:	sbb    al,0x0
  406398:	pushf  
  406399:	pushf  
  40639a:	cwde   
  40639b:	add    BYTE PTR [eax-0x6a],ah
  40639e:	push   ebx
	...
  4063b3:	add    BYTE PTR [ebx+ebx*4-0x64a3ff84],cl
  4063ba:	cmp    al,0x0
  4063bc:	pop    esp
  4063bd:	pushf  
  4063be:	fadd   DWORD PTR [eax]
  4063c0:	pop    esi
  4063c1:	xchg   esi,eax
  4063c2:	pop    ss
  4063c3:	add    BYTE PTR [ebx+ebx*4+0x6c],cl
  4063c7:	add    BYTE PTR [ebx+ebx*4+0x2c],bl
  4063cb:	add    BYTE PTR [esp+ebx*4-0x48],bl
  4063cf:	add    BYTE PTR [ebx+ebx*4+0xc],cl
  4063d3:	add    BYTE PTR [ebx+ebx*4-0x74],cl
  4063d7:	add    BYTE PTR [ebx+ebx*4],bl
  4063da:	dec    esp
  4063db:	add    BYTE PTR [esp+ebx*4],bl
  4063de:	clc    
  4063df:	add    BYTE PTR [ebp-0x4afcf9b8],dh
  4063e5:	cmp    BYTE PTR [ebx],cl
  4063e7:	push   edx
  4063e8:	mov    ch,0x38
  4063ea:	or     edx,DWORD PTR [edx]
  4063ec:	mov    ch,0x63
  4063ee:	or     esp,DWORD PTR [ebx+0x230669b5]
  4063f4:	mov    ch,0x38
  4063f6:	or     esi,DWORD PTR [edx-0x4b]
  4063f9:	cmp    BYTE PTR [ebx],cl
  4063fb:	xor    dh,BYTE PTR [ebp-0x4a3bf5c8]
  406401:	inc    edi
  406402:	add    al,0xb
  406404:	mov    ch,0x38
  406406:	or     esp,DWORD PTR [edx-0x4b]
  406409:	cmp    BYTE PTR [ebx],cl
  40640b:	and    dh,BYTE PTR [ebp-0x4a5bf5c8]
  406411:	cmp    BYTE PTR [ebx],cl
  406413:	add    dh,BYTE PTR [ebp+0x820b38]
	...
  406429:	add    BYTE PTR [eax],al
  40642b:	add    BYTE PTR [ebp-0x4abdf4c8],dh
  406431:	cmp    BYTE PTR [edx],cl
  406433:	in     al,0xb5
  406435:	dec    eax
  406436:	add    al,0x7
  406438:	mov    ch,0x38
  40643a:	or     ebx,DWORD PTR [edx-0x4b]
  40643d:	cmp    BYTE PTR [ebx],cl
  40643f:	sbb    dh,BYTE PTR [ebp-0x4a6bf5c8]
  406445:	ins    BYTE PTR es:[edi],dx
  406446:	add    al,0x43
  406448:	mov    ch,0x38
  40644a:	or     edi,DWORD PTR [edx-0x4b]
  40644d:	cmp    BYTE PTR [ebx],cl
  40644f:	cmp    dh,BYTE PTR [ebp-0x4a2bf5c8]
  406455:	dec    edx
  406456:	add    al,0x13
  406458:	mov    ch,0x38
  40645a:	or     ebp,DWORD PTR [edx-0x4b]
  40645d:	cmp    BYTE PTR [ebx],cl
  40645f:	sub    dh,BYTE PTR [ebp-0x4a4bf5c8]
  406465:	cmp    BYTE PTR [ebx],cl
  406467:	or     dh,BYTE PTR [ebp-0x4a75f4c8]
  40646d:	(bad)
  406471:	(bad)
  406475:	(bad)  
  406476:	stc    
  406477:	add    al,0xb0
  406479:	(bad)
  40647d:	(bad)
  406481:	(bad)
  406485:	(bad)  
  406486:	fiadd  DWORD PTR [esi+eax*8]
  406489:	(bad)
  40648d:	(bad)
	...
  4064a1:	add    BYTE PTR [eax],al
  4064a3:	add    BYTE PTR [ebx-0xef51671],ah
  4064a9:	mov    ?,eax
  4064ab:	add    al,0xaa
  4064ad:	(bad)
  4064b1:	vprotq xmm1,[edi-0x70eef517],xmm6
  4064ba:	jmp    0xe9d017ca
  4064bf:	or     edi,DWORD PTR [ebx]
  4064c1:	nop
  4064c2:	jmp    0xe9d057d2
  4064c7:	or     dl,BYTE PTR [ecx-0x53fb0670]
  4064cd:	(bad)
  4064d1:	(bad)
  4064d5:	(bad)
  4064d9:	nop
  4064da:	fld    QWORD PTR [esi+edx*1]
  4064dd:	nop
  4064de:	jmp    0xe9d057ee
  4064e3:	or     ebp,DWORD PTR [ebx-0x7ef51671]
  4064e9:	nop
  4064ea:	sti    
  4064eb:	add    al,0xbe
  4064ed:	(bad)
  4064f1:	vpshaq xmm1,[edi-0x6ffef517],xmm6
  4064fa:	add    cl,ch
  4064fc:	scas   al,BYTE PTR es:[edi]
  4064fd:	popf   
  4064fe:	add    cl,ch
  406500:	mov    esi,0xbee9001d
  406505:	fld    QWORD PTR [eax]
  406507:	jmp    0x40650c
	...
  40651c:	scas   eax,DWORD PTR es:[edi]
  40651d:	dec    ebx
  40651e:	add    BYTE PTR [ecx-0x16ff704f],cl
  406524:	mov    esi,0xbee900de
  406529:	sahf   
  40652a:	add    ah,dl
  40652c:	scas   al,BYTE PTR es:[edi]
  40652d:	adc    BYTE PTR [eax],al
  40652f:	(bad)  [ecx-0x4116ff54]
  406535:	mov    esi,0x7ebee900
  40653a:	add    cl,ch
  40653c:	mov    cl,0x51
  40653e:	add    cl,bh
  406540:	mov    bh,0x99
  406542:	add    cl,ch
  406544:	mov    esi,0xbee900ae
  406549:	outs   dx,BYTE PTR ds:[esi]
  40654a:	add    cl,ch
  40654c:	mov    cl,0xf1
  40654e:	(bad)  
  40654f:	call   0xe940f402
  406554:	mov    esi,0xbee9000e
  406559:	into   
  40655a:	add    cl,ch
  40655c:	mov    cl,0x31
  40655e:	add    cl,bh
  406560:	mov    bh,0x95
  406562:	add    cl,ch
  406564:	mov    esi,0xbee900e6
  406569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40656a:	add    cl,ch
  40656c:	mov    cl,0x21
  40656e:	add    dl,bl
  406570:	mov    bh,0x88
  406572:	add    cl,ch
  406574:	mov    esi,0xbee900c6
  406579:	xchg   BYTE PTR [eax],al
  40657b:	jmp    0xf840c731
	...
  406594:	mov    bh,0x9e
  406596:	add    cl,ch
  406598:	mov    esi,0x5c0000b6
  40659d:	cwde   
  40659e:	sub    DWORD PTR [eax],eax
  4065a0:	dec    esp
  4065a1:	fwait
  4065a2:	mov    dl,0x0
  4065a4:	dec    esp
  4065a5:	cwde   
  4065a6:	or     DWORD PTR [eax],eax
  4065a8:	sbb    al,0x98
  4065aa:	mov    DWORD PTR [eax],eax
  4065ac:	sbb    al,0x98
  4065ae:	dec    ecx
  4065af:	add    BYTE PTR [ebx+ebx*4],cl
  4065b2:	repnz add BYTE PTR [ecx+edx*4],bl
  4065b6:	add    al,0x0
  4065b8:	sbb    al,0x98
  4065ba:	push   ebp
  4065bb:	add    BYTE PTR [eax+ebx*4],bl
  4065be:	adc    eax,0x297dc00
  4065c3:	add    edi,ebx
  4065c5:	nop
  4065c6:	sub    eax,DWORD PTR [eax]
  4065c8:	fcom   QWORD PTR [edi-0x6823ff8b]
  4065ce:	xor    eax,0xca9acc00
  4065d3:	add    ch,bl
  4065d5:	nop
  4065d6:	or     eax,0x6597dc00
  4065db:	add    ah,bl
  4065dd:	xchg   edi,eax
  4065de:	and    eax,0xaa9acc00
  4065e3:	add    ah,cl
  4065e5:	xchg   edi,eax
  4065e6:	add    eax,0x85979c00
  4065eb:	add    BYTE PTR [edi+edx*4-0x6373ffbb],bl
  4065f2:	jmp    0x0:0x88e9c00
	...
  406609:	add    BYTE PTR [eax],al
  40660b:	add    BYTE PTR [edi+edx*4-0x6863ffa3],bl
  406612:	sbb    eax,0x9a9c8c00
  406617:	add    BYTE PTR [eax-0x72],bl
  40661a:	push   ebx
  40661b:	add    BYTE PTR [edi+edx*4+0x7d],bl
  40661f:	add    BYTE PTR [edi+edx*4+0x3d],bl
  406623:	add    BYTE PTR [esp+ebx*4-0x26],cl
  406627:	add    BYTE PTR [ebp-0x4ae8fdba],dh
  40662d:	cmp    BYTE PTR [ebx],cl
  40662f:	ins    DWORD PTR es:[edi],dx
  406630:	mov    ch,0x38
  406632:	or     ebp,DWORD PTR ds:0xba0c38b5
  406638:	mov    ch,0x38
  40663a:	or     ecx,DWORD PTR ds:0x8d0b38b5
  406640:	mov    ch,0x38
  406642:	or     ecx,DWORD PTR [ebp-0x4b]
  406645:	cmp    BYTE PTR [edx+edi*8],cl
  406648:	mov    ch,0x48
  40664a:	add    al,BYTE PTR [ebx]
  40664c:	mov    ch,0x38
  40664e:	or     edx,DWORD PTR [ebx-0x4b]
  406651:	cmp    BYTE PTR [ebx],cl
  406653:	adc    esi,DWORD PTR [ebp-0x4a3cf49d]
  406659:	add    ah,BYTE PTR gs:[ebx]
  40665c:	mov    ch,0x38
  40665e:	or     esi,DWORD PTR [ebx-0x4b]
  406661:	cmp    BYTE PTR [ebx],cl
  406663:	xor    esi,DWORD PTR [ebp-0x4a39f5c8]
  406669:	inc    edi
  40666a:	add    BYTE PTR [ebx],cl
  40666c:	mov    ch,0x38
  40666e:	or     esp,DWORD PTR [ebx+0x0]
	...
  406681:	add    BYTE PTR [eax],al
  406683:	add    BYTE PTR [ebp-0x4adcf4c8],dh
  406689:	cmp    BYTE PTR [edx],cl
  40668b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40668c:	mov    ch,0x38
  40668e:	or     eax,DWORD PTR [ebx]
  406690:	mov    ch,0x38
  406692:	or     eax,DWORD PTR [ebx+0x430b38b5]
  406698:	mov    ch,0x38
  40669a:	or     ah,dh
  40669c:	mov    ch,0x48
  40669e:	add    BYTE PTR [edi],al
  4066a0:	mov    ch,0x38
  4066a2:	or     ebx,DWORD PTR [ebx-0x4b]
  4066a5:	cmp    BYTE PTR [ebx],cl
  4066a7:	sbb    esi,DWORD PTR [ebp-0x4a69f5c8]
  4066ad:	ins    BYTE PTR es:[edi],dx
  4066ae:	add    BYTE PTR [ebx-0x4b],al
  4066b1:	cmp    BYTE PTR [ebx],cl
  4066b3:	jnp    0x40666a
  4066b5:	(bad)
  4066b9:	(bad)
  4066bd:	(bad)  
  4066be:	sti    
  4066bf:	add    BYTE PTR [esi-0x21f41671],ah
  4066c5:	(bad)
  4066c9:	(bad)
  4066cd:	(bad)
  4066d1:	(bad)
  4066d5:	(bad)
  4066d9:	(bad)
  4066dd:	(bad)  
  4066de:	stc    
  4066df:	add    BYTE PTR [eax+0x620be98f],bh
  4066e5:	(bad)
	...
  4066f9:	add    BYTE PTR [eax],al
  4066fb:	add    BYTE PTR [edx-0x4af45671],ch
  406701:	(bad)  
  406702:	fiadd  DWORD PTR [eax]
  406704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406705:	(bad)
  406709:	(bad)
  40670d:	(bad)
  406711:	mov    ?,eax
  406713:	add    dl,al
  406715:	(bad)
  406719:	vpshad xmm1,[edi-0x70f4f517],xmm6
  406722:	jmp    0xe9d02132
  406727:	or     esi,DWORD PTR [edx]
  406729:	nop
  40672a:	jmp    0xe9d0613a
  40672f:	or     cl,BYTE PTR [ebx-0x43ff0670]
  406735:	(bad)
  406739:	(bad)
  40673d:	(bad)
  406741:	nop
  406742:	add    ch,bl
  406744:	mov    ch,0xac
  406746:	add    cl,ch
  406748:	mov    esi,0xaee900c8
  40674d:	mov    BYTE PTR [eax],al
  40674f:	jmp    0xfb40d103
  406754:	mov    ch,0xa4
  406756:	add    cl,ch
  406758:	mov    esi,0xaee900b8
  40675d:	js     0x40675f
  40675f:	jmp    0x406764
	...
  406774:	scas   eax,DWORD PTR es:[edi]
  406775:	or     DWORD PTR [eax],eax
  406777:	jmp    0xe941003a
  40677c:	mov    esi,0xaee90018
  406781:	fadd   DWORD PTR [eax]
  406783:	jmp    0x8940b137
  406788:	mov    ch,0x8f
  40678a:	add    cl,ch
  40678c:	mov    esi,0xaee900df
  406791:	lahf   
  406792:	add    ch,dl
  406794:	scas   al,BYTE PTR es:[edi]
  406795:	mov    esp,0xa8b5db00
  40679a:	add    cl,ch
  40679c:	mov    esi,0xaee900bf
  4067a1:	jg     0x4067a3
  4067a3:	jmp    0xf940b651
  4067a8:	rcl    DWORD PTR [esi-0x50411700],cl
  4067ae:	add    cl,ch
  4067b0:	scas   al,BYTE PTR es:[edi]
  4067b1:	outs   dx,DWORD PTR ds:[esi]
  4067b2:	add    cl,ch
  4067b4:	test   eax,0xbee8ffee
  4067b9:	pop    DWORD PTR [eax]
  4067bb:	jmp    0xe940777e
  4067c0:	scas   al,BYTE PTR es:[edi]
  4067c1:	iret   
  4067c2:	add    cl,ch
  4067c4:	test   eax,0x93f9002e
  4067c9:	xchg   edx,eax
  4067ca:	add    cl,ch
  4067cc:	mov    esi,0x8c0000e7
  4067d1:	xchg   esp,eax
  4067d2:	sbb    BYTE PTR [eax],al
  4067d4:	mov    WORD PTR [ebx+0x91],ds
	...
  4067ea:	add    BYTE PTR [eax],al
  4067ec:	(bad)
  4067f0:	pop    esp
  4067f1:	xchg   esp,eax
  4067f2:	js     0x4067f4
  4067f4:	dec    esp
  4067f5:	xchg   esp,eax
  4067f6:	cmp    BYTE PTR [eax],al
  4067f8:	dec    esp
  4067f9:	fwait
  4067fa:	rol    DWORD PTR [eax],1
  4067fc:	dec    ebp
  4067fd:	dec    ecx
  4067fe:	adc    BYTE PTR [eax],al
  406800:	pop    esp
  406801:	xchg   esp,eax
  406802:	push   0x28944c00
  406807:	add    BYTE PTR [ebx+ebx*4-0x4f],cl
  40680b:	add    BYTE PTR [esp+edx*4],bl
  40680e:	or     BYTE PTR [eax],al
  406810:	sbb    al,0x94
  406812:	mov    BYTE PTR [eax],al
  406814:	or     al,0x94
  406816:	dec    eax
  406817:	add    BYTE PTR [ebx+ebx*4],cl
  40681a:	icebp  
  40681b:	add    BYTE PTR [ecx+ecx*2],cl
  40681e:	add    eax,DWORD PTR [eax]
  406820:	sbb    al,0x94
  406822:	push   esp
  406823:	add    BYTE PTR [esp+edx*4],cl
  406826:	adc    al,0x0
  406828:	loope  0x4067bd
  40682a:	jecxz  0x40682c
  40682c:	cmovns ebp,DWORD PTR [edx]
  40682f:	add    ah,bl
  406831:	xchg   ebx,eax
  406832:	je     0x406834
  406834:	int3   
  406835:	xchg   ebx,eax
  406836:	xor    al,0x0
  406838:	int3   
  406839:	call   0xc:0x48cd00c9
  406840:	fcom   QWORD PTR [ebx-0x6c33ff9c]
  406846:	and    al,0x0
  406848:	int3   
  406849:	call   0x4:0x9b9c00a9
	...
  406864:	pushf  
  406865:	fwait
  406866:	test   BYTE PTR [eax],al
  406868:	mov    WORD PTR [ebx-0x6b73ffbc],ds
  40686e:	jmp    0xfe891d73
  406873:	pop    es
  406874:	mov    ch,0x38
  406876:	or     ebx,DWORD PTR [ebp+esi*4+0x38]
  40687a:	or     ebx,DWORD PTR [esi*4-0x4a66f3c8]
  406881:	fs (bad) 
  406883:	push   edx
  406884:	mov    ch,0x38
  406886:	or     edi,DWORD PTR [ebp+esi*4+0x38]
  40688a:	or     edi,DWORD PTR [esi*4-0x4a26f3c8]
  406891:	dec    edx
  406892:	(bad)  
  406893:	push   ss
  406894:	mov    ch,0x38
  406896:	or     ebp,DWORD PTR [ebp+esi*4+0x38]
  40689a:	or     ebp,DWORD PTR [esi*4-0x4a46f3c8]
  4068a1:	cmp    BYTE PTR [ebx],cl
  4068a3:	or     al,0xb5
  4068a5:	cmp    BYTE PTR [ebx],cl
  4068a7:	mov    WORD PTR [ebp-0x4ab3f4c8],?
  4068ad:	cmp    BYTE PTR [ecx+edi*8],cl
  4068b0:	mov    ch,0x48
  4068b2:	inc    BYTE PTR [edx]
  4068b4:	mov    ch,0x38
  4068b6:	or     edx,DWORD PTR [edx-0x4b]
  4068b9:	cmp    BYTE PTR [ebx],cl
  4068bb:	adc    dh,BYTE PTR [ebp-0x4a5cf4a5]
  4068c1:	imul   edi,esi,0xb38b522
  4068c7:	jb     0x4068c9
	...
  4068d9:	add    BYTE PTR [eax],al
  4068db:	add    BYTE PTR [ebp-0x4acdf4c8],dh
  4068e1:	cmp    BYTE PTR [edx],cl
  4068e3:	lds    esi,FWORD PTR [ebp-0x4af503b9]
  4068e9:	cmp    BYTE PTR [ebx],cl
  4068eb:	bound  esi,QWORD PTR [ebp-0x4addf4c8]
  4068f1:	cmp    BYTE PTR [edx],cl
  4068f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068f4:	mov    ch,0x38
  4068f6:	or     eax,DWORD PTR [edx]
  4068f8:	mov    ch,0x38
  4068fa:	or     eax,DWORD PTR [edx+0xbe98fb5]
  406900:	test   DWORD PTR [edi-0x7067f517],0x8fb3fcf9
  40690a:	jmp    0xe9d0481a
  40690f:	or     ebx,DWORD PTR [edi+0x480ae98f]
  406915:	(bad)  
  406916:	(bad)  
  406918:	test   DWORD PTR [edi-0x7020f417],0x8f9f0be9
  406922:	jmp    0xfbcfd131
  406927:	cld    
  406928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406929:	(bad)
  40692d:	(bad)
  406931:	(bad)
  406935:	(bad)
  406939:	(bad)
  40693d:	(bad)
	...
  406951:	add    BYTE PTR [eax],al
  406953:	add    BYTE PTR [edi-0x71],ch
  406956:	jmp    0xf9cf7165
  40695b:	cld    
  40695c:	mov    cl,0x8f
  40695e:	jmp    0xe9cfd46e
  406963:	or     esp,DWORD PTR [ebx-0x4af45671]
  406969:	(bad)  
  40696a:	(bad)  
  40696c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40696d:	(bad)
  406971:	(bad)
  406975:	(bad)
  406979:	(bad)  
  40697a:	clc    
  40697b:	cld    
  40697c:	mov    ebx,0x5b0be98f
  406981:	vprotq xmm1,[edi-0x6f9ff517],xmm6
  40698a:	add    cl,ch
  40698c:	mov    esi,0xaee9008d
  406991:	or     eax,0xcdaee900
  406996:	add    cl,ch
  406998:	mov    edi,0x89f90032
  40699d:	cwde   
  40699e:	add    cl,ch
  4069a0:	scas   al,BYTE PTR es:[edi]
  4069a1:	in     eax,0x0
  4069a3:	jmp    0xe9410f56
  4069a8:	mov    edi,0x69dd0022
  4069ad:	mov    dl,0x0
  4069af:	jmp    0xe9412f62
  4069b4:	scas   al,BYTE PTR es:[edi]
  4069b5:	test   DWORD PTR [eax],eax
  4069b7:	jmp    0x4069bc
	...
  4069cc:	mov    edi,0x49fb0062
  4069d1:	stos   BYTE PTR es:[edi],al
  4069d2:	add    cl,ch
  4069d4:	scas   al,BYTE PTR es:[edi]
  4069d5:	mov    ch,0x0
  4069d7:	jmp    0xe940df8a
  4069dc:	mov    edi,0xbee90002
  4069e1:	xchg   ebp,eax
  4069e2:	add    cl,ch
  4069e4:	scas   al,BYTE PTR es:[edi]
  4069e5:	adc    eax,0xd5aee900
  4069ea:	add    cl,ch
  4069ec:	mov    edi,0x9890042
  4069f1:	inc    ebp
  4069f2:	(bad)  
  4069f3:	jmp    0xe94148a6
  4069f8:	scas   al,BYTE PTR es:[edi]
  4069f9:	sahf   
  4069fa:	add    ah,dl
  4069fc:	mov    esi,0xe9db0010
  406a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a02:	add    cl,ch
  406a04:	scas   al,BYTE PTR es:[edi]
  406a05:	mov    esi,0x7fdee900
  406a0a:	add    cl,ch
  406a0c:	rcl    DWORD PTR [ecx+0x0],1
  406a0f:	stc    
  406a10:	mov    edi,0xbee90099
  406a15:	scas   eax,DWORD PTR es:[edi]
  406a16:	add    BYTE PTR [eax],al
  406a18:	int3   
  406a19:	dec    eax
  406a1a:	and    BYTE PTR [eax],al
  406a1c:	pushf  
  406a1d:	inc    ebx
  406a1e:	mov    ds:0x489c00,al
  406a23:	add    BYTE PTR [eax+ecx*2+0x488c0080],cl
  406a2a:	inc    eax
  406a2b:	add    BYTE PTR [ebx+eax*2+0xe2],bl
	...
  406a42:	add    BYTE PTR [eax],al
  406a44:	mov    WORD PTR [ecx+0x488c0006],ds
  406a4a:	pop    eax
  406a4b:	add    BYTE PTR [eax+ecx*2+0x435c0018],cl
  406a52:	xchg   edx,eax
  406a53:	add    BYTE PTR [edi+0x4c003b99],cl
  406a59:	dec    eax
  406a5a:	js     0x406a5c
  406a5c:	dec    esp
  406a5d:	dec    eax
  406a5e:	cmp    BYTE PTR [eax],al
  406a60:	pop    esp
  406a61:	inc    ebx
  406a62:	rol    BYTE PTR [eax],cl
  406a64:	dec    ebp
  406a65:	cdq    
  406a66:	adc    DWORD PTR [eax],eax
  406a68:	dec    esp
  406a69:	dec    eax
  406a6a:	push   0x28484c00
  406a6f:	add    BYTE PTR [ebx+eax*2],bl
  406a72:	mov    dl,0x0
  406a74:	sbb    al,0x48
  406a76:	or     BYTE PTR [eax],al
  406a78:	or     al,0x48
  406a7a:	mov    BYTE PTR [eax],al
  406a7c:	or     al,0x48
  406a7e:	dec    eax
  406a7f:	add    BYTE PTR [ebx+eax*2],bl
  406a82:	repnz add BYTE PTR [ecx+ebx*4],cl
  406a86:	add    al,0x0
  406a88:	or     al,0x48
  406a8a:	push   esp
  406a8b:	add    BYTE PTR [eax+ecx*2],cl
  406a8e:	adc    al,0x0
  406a90:	or     al,0x48
  406a92:	add    DWORD PTR [ecx],eax
  406a94:	setns  BYTE PTR [ebx]
  406a97:	add    ah,cl
  406a99:	inc    edi
  406a9a:	je     0x406a9c
  406a9c:	int3   
  406a9d:	inc    edi
  406a9e:	xor    al,0x0
  406aa0:	fadd   QWORD PTR [edx-0x36]
  406aa3:	add    BYTE PTR [ebp+0xd0a47],dh
	...
  406ab9:	add    BYTE PTR [eax],al
  406abb:	add    BYTE PTR [ebp-0x4a9b04ca],dh
  406ac1:	ss sti 
  406ac3:	and    al,0xb5
  406ac5:	cmp    ah,bh
  406ac7:	stos   BYTE PTR es:[edi],al
  406ac8:	mov    ch,0x38
  406aca:	sti    
  406acb:	add    al,0xb5
  406acd:	cmp    bl,bh
  406acf:	test   BYTE PTR [ebp-0x4abb04c8],dh
  406ad5:	cmp    ah,bh
  406ad7:	jmp    0x38b5:0x80a48b5
  406ade:	sti    
  406adf:	pop    esp
  406ae0:	mov    ch,0x38
  406ae2:	sti    
  406ae3:	sbb    al,0xb5
  406ae5:	cmp    ah,bh
  406ae7:	call   0x38b5:0x530a64b5
  406aee:	sti    
  406aef:	jl     0x406aa6
  406af1:	cmp    bl,bh
  406af3:	cmp    al,0xb5
  406af5:	cmp    ah,bh
  406af7:	fidiv  DWORD PTR [ebp-0x4ae8f5ba]
  406afd:	cmp    bl,bh
  406aff:	ins    BYTE PTR es:[edi],dx
  406b00:	mov    ch,0x38
  406b02:	sti    
  406b03:	sub    al,0xb5
  406b05:	cmp    ah,bh
  406b07:	mov    edx,0xcfb38b5
  406b0c:	mov    ch,0x38
  406b0e:	sti    
  406b0f:	mov    WORD PTR [ebp-0x4ab304c8],?
  406b15:	cmp    ah,bh
  406b17:	cli    
  406b18:	mov    ch,0x48
  406b1a:	or     al,BYTE PTR [ebx]
  406b1c:	mov    ch,0x38
  406b1e:	sti    
  406b1f:	push   edx
	...
  406b34:	mov    ch,0x38
  406b36:	sti    
  406b37:	adc    dh,BYTE PTR [ebp-0x4a3d04a5]
  406b3d:	or     ah,BYTE PTR gs:[ebx]
  406b40:	mov    ch,0x38
  406b42:	sti    
  406b43:	jb     0x406afa
  406b45:	(bad)  
  406b49:	(bad)  
  406b4d:	(bad)  
  406b4e:	clc    
  406b4f:	or     BYTE PTR [esi+0x57fbe98f],ch
  406b55:	vphadduwq xmm1,XMMWORD PTR [edi-0x70ac0517]
  406b5e:	jmp    0xe9d0235e
  406b63:	sti    
  406b64:	aaa    
  406b65:	(bad)  
  406b69:	vprotq xmm1,xmm0,[edi-0x7045f707]
  406b72:	jmp    0xe9d04b72
  406b77:	sti    
  406b78:	iret   
  406b79:	(bad)  
  406b7d:	(bad)  
  406b7e:	fisttp QWORD PTR [eax]
  406b80:	test   BYTE PTR [edi-0x70200417],0xe9
  406b87:	sti    
  406b88:	(bad)  
  406b89:	(bad)  
  406b8d:	(bad)  
  406b8e:	sti    
  406b8f:	or     BYTE PTR [esi-0x30041671],ah
  406b95:	(bad)  
	...
  406ba9:	add    BYTE PTR [eax],al
  406bab:	add    bh,bl
  406bad:	(bad)  
  406bb1:	(bad)  
  406bb5:	(bad)  
  406bb9:	(bad)  
  406bbd:	(bad)  
  406bc1:	(bad)  
  406bc2:	stc    
  406bc3:	or     BYTE PTR [eax+0x63fbe98f],bh
  406bc9:	vphadddq xmm1,XMMWORD PTR [edi+0x41eafba9]
  406bd2:	add    dl,bl
  406bd4:	lods   eax,DWORD PTR ds:[esi]
  406bd5:	jle    0x406bd7
  406bd7:	jmp    0xe94124ba
  406bdc:	into   
  406bdd:	js     0x406bdf
  406bdf:	jmp    0xf840bcb3
  406be4:	lods   eax,DWORD PTR ds:[esi]
  406be5:	xchg   edx,eax
  406be6:	add    cl,ch
  406be8:	mov    esi,0xaee900a8
  406bed:	push   0x0
  406bef:	jmp    0xe9405ea3
  406bf4:	sahf   
  406bf5:	mov    al,BYTE PTR [eax]
  406bf7:	jmp    0xe940769a
  406bfc:	mov    cs,edx
  406bfe:	add    cl,ch
  406c00:	(bad)  
  406c01:	xor    al,BYTE PTR [eax]
  406c03:	stc    
  406c04:	lods   eax,DWORD PTR ds:[esi]
  406c05:	xchg   esi,eax
  406c06:	add    cl,ch
  406c08:	jle    0x406bec
  406c0a:	add    cl,ch
  406c0c:	outs   dx,BYTE PTR ds:[esi]
  406c0d:	mov    ds:0xe900,al
	...
  406c22:	add    BYTE PTR [eax],al
  406c24:	outs   dx,DWORD PTR ds:[esi]
  406c25:	and    al,BYTE PTR [eax]
  406c27:	(bad)  [ebp+0x5ee900ac]
  406c2d:	ret    0xe900
  406c30:	dec    esi
  406c31:	add    BYTE PTR [eax],0xe9
  406c34:	dec    edi
  406c35:	bound  eax,QWORD PTR [eax]
  406c37:	sti    
  406c38:	lods   eax,DWORD PTR ds:[esi]
  406c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c3a:	add    cl,ch
  406c3c:	ds mov dl,0x0
  406c3f:	jmp    0xe940de72
  406c44:	das    
  406c45:	add    al,BYTE PTR [eax]
  406c47:	jmp    0xe940fe6a
  406c4c:	push   ds
  406c4d:	adc    al,BYTE PTR [eax]
  406c4f:	jmp    0xe9413e62
  406c54:	cmovb  eax,DWORD PTR [eax]
  406c57:	stc    
  406c58:	mov    ebx,0xb3f6008e
  406c5d:	mov    es,WORD PTR [ecx]
  406c5f:	add    BYTE PTR [edi],cl
  406c61:	mov    dl,BYTE PTR [ecx]
  406c63:	add    bh,dl
  406c65:	mov    DWORD PTR [ecx],eax
  406c67:	adc    ch,bh
  406c69:	mov    DWORD PTR ds:0x18a0500,eax
  406c6f:	add    al,0xd1
  406c71:	xchg   edi,eax
  406c72:	inc    ecx
  406c73:	add    cl,cl
  406c75:	xchg   edi,eax
  406c76:	add    DWORD PTR [eax-0x44],eax
  406c79:	xchg   edi,eax
  406c7a:	add    eax,DWORD PTR [eax]
  406c7c:	les    edx,FWORD PTR [edi-0x686ffdff]
  406c82:	and    DWORD PTR [eax],eax
  406c84:	mov    BYTE PTR [edi+0x2001],dl
	...
  406c9a:	add    BYTE PTR [eax],al
  406c9c:	jle    0x406c35
  406c9e:	or     DWORD PTR [eax],eax
  406ca0:	xchg   BYTE PTR [edi-0x686df7ff],dl
  406ca6:	add    DWORD PTR [eax],0x96dc
  406cac:	jl     0x406c45
  406cae:	add    al,BYTE PTR [eax]
  406cb0:	adc    DWORD PTR [edi-0x6870fe7f],0x19
  406cb7:	add    BYTE PTR [edi-0x69],dl
  406cba:	add    DWORD PTR [eax],ebx
  406cbc:	jge    0x406c55
  406cbe:	pop    es
  406cbf:	add    BYTE PTR [ebp+0x51060197],al
  406cc5:	xchg   edi,eax
  406cc6:	popa   
  406cc7:	add    BYTE PTR [ecx-0x69],cl
  406cca:	add    DWORD PTR [eax+0x3c],esp
  406ccd:	xchg   edi,eax
  406cce:	add    al,0x0
  406cd0:	inc    esp
  406cd1:	xchg   edi,eax
  406cd2:	add    DWORD PTR [ebx],eax
  406cd4:	adc    BYTE PTR [edi-0x68f7ffcf],dl
  406cda:	add    DWORD PTR [eax],esi
  406cdc:	(bad)  
  406cdd:	xchg   esi,eax
  406cde:	or     eax,0x1970600
  406ce3:	or     al,0x12
  406ce5:	xchg   edi,eax
  406ce6:	rol    DWORD PTR [eax],0x5c
  406ce9:	xchg   edi,eax
  406cea:	add    BYTE PTR [eax],al
  406cec:	mov    ch,0x46
  406cee:	add    edx,DWORD PTR [ecx]
  406cf0:	mov    ch,0x44
  406cf2:	add    eax,DWORD PTR [eax]
  406cf4:	mov    ch,0x3e
  406cf6:	add    eax,DWORD PTR [edi]
  406cf8:	mov    ch,0x3f
  406cfa:	add    eax,DWORD PTR [esi]
  406cfc:	mov    ch,0x2c
  406cfe:	add    eax,DWORD PTR ds:0x0
	...
  406d14:	mov    ch,0x2d
  406d16:	add    eax,DWORD PTR [esi*4-0x4afcfcc6]
  406d1d:	xor    eax,DWORD PTR [ebx]
  406d1f:	add    dh,BYTE PTR [ebp-0x4afefcd8]
  406d25:	popa   
  406d26:	add    eax,DWORD PTR [eax]
  406d28:	mov    ch,0x28
  406d2a:	add    eax,DWORD PTR [eax]
  406d2c:	mov    ch,0xe6
  406d2e:	adc    eax,DWORD PTR [edi]
  406d30:	sub    dl,BYTE PTR [ebp-0x3c74f19b]
  406d36:	xor    al,0x9
  406d38:	sub    al,0x90
  406d3a:	enter  0xb26d,0xad
  406d3e:	xlat   BYTE PTR ds:[ebx]
  406d3f:	push   0x5
  406d41:	pop    esp
  406d42:	test   al,0x63
  406d44:	mov    edx,cs
  406d46:	js     0x406dac
  406d48:	push   ebx
  406d49:	sti    
  406d4a:	jp     0x406d27
  406d4c:	mov    ebx,0xdcdc8bd4
  406d51:	data16 (bad) 
  406d54:	push   ebp
  406d55:	mov    cl,0xac
  406d57:	shr    BYTE PTR [edx],cl
  406d59:	mov    ds:0x1bbcb640,al
  406d5e:	dec    edi
  406d5f:	mov    cl,0xc3
  406d61:	sub    eax,0xb852b820
  406d66:	lock mov esi,0xb6f34d45
  406d6c:	enter  0x237a,0xb0
  406d70:	(bad)  
  406d71:	lock push ebx
  406d73:	mov    ecx,0xbe448f26
	...
  406d8c:	cmp    DWORD PTR [eax-0x6610485c],edx
  406d92:	adc    ah,bh
  406d94:	loopne 0x406d42
  406d96:	mov    eax,0x2643e198
  406d9b:	mov    BYTE PTR [esi],al
  406d9d:	adc    ebx,DWORD PTR [edi+0x29a2596b]
  406da3:	fwait
  406da4:	dec    esi
  406da5:	mov    bl,0x73
  406da7:	int3   
  406da8:	push   edi
  406da9:	cmp    al,0xfd
  406dab:	mov    ebx,0x30360958
  406db0:	mov    ah,0xa3
  406db2:	shl    BYTE PTR [eax-0x45],0xb2
  406db6:	dec    edx
  406db7:	rsm    
  406db9:	cmp    esp,edx
  406dbb:	(bad)  
  406dbc:	mov    edx,0x1b24b10c
  406dc1:	jnp    0x406de2
  406dc3:	hlt    
  406dc4:	or     eax,0x1543cdcc
  406dc9:	cmp    edx,DWORD PTR gs:[ebx+0x1a]
  406dcd:	repnz mov bh,0xe8
  406dd0:	mov    dh,0x7b
  406dd2:	es mov eax,0x8794cab9
  406dd8:	test   al,0x61
  406dda:	add    dl,BYTE PTR [edi-0x637d0b41]
  406de0:	and    BYTE PTR [ebp+ecx*1-0x602ed894],al
  406de7:	mov    ebx,0xcb295a1e
  406dec:	adc    ebx,ebp
  406dee:	dec    ecx
  406def:	pusha  
	...
  406e04:	ins    DWORD PTR es:[edi],dx
  406e05:	adc    esp,0x26d4622f
  406e0b:	jmp    DWORD PTR [eax+0x5b]
  406e0e:	mov    al,0xe
  406e10:	add    al,0xea
  406e12:	xchg   esp,eax
  406e13:	adc    al,0xc
  406e15:	jne    0x406e1a
  406e17:	add    al,0x3
  406e19:	loopne 0x406e1b
  406e1b:	imul   esp,esi,0x97d7c866
  406e21:	pop    edi
  406e22:	mov    edi,0x2102ed5c
  406e27:	retf   0x1fa
  406e2a:	push   esi
  406e2b:	jo     0x406daf
  406e2d:	stc    
  406e2e:	into   
  406e2f:	ficomp WORD PTR [ebx]
  406e31:	cld    
  406e32:	mov    bh,0x67
  406e34:	cmp    DWORD PTR [ecx-0x6ba10ed8],edx
  406e3a:	pop    edi
  406e3b:	cmp    ecx,DWORD PTR [esi]
  406e3d:	mov    eax,esi
  406e3f:	(bad)
  406e42:	mov    cl,0x6e
  406e44:	jp     0x406df4
  406e46:	das    
  406e47:	clc    
  406e48:	and    BYTE PTR [edi-0x51347da8],0xc1
  406e4f:	or     al,0xd2
  406e51:	mov    ch,0xb6
  406e53:	pop    ecx
  406e54:	neg    DWORD PTR [ebx+0x76]
  406e57:	out    0x7,eax
  406e59:	pop    ecx
  406e5a:	add    DWORD PTR [ebp-0x2a],esi
  406e5d:	popa   
  406e5e:	cwde   
  406e5f:	add    ecx,DWORD PTR [ecx+0x3370ef64]
  406e65:	push   DWORD PTR [eax-0x2]
	...
  406e7c:	sub    eax,DWORD PTR [esi]
  406e7e:	push   es
  406e7f:	dec    esp
  406e80:	xchg   edx,eax
  406e81:	std    
  406e82:	sahf   
  406e83:	fisubr DWORD PTR [edx]
  406e85:	clc    
  406e86:	out    0x4b,eax
  406e88:	das    
  406e89:	xchg   ebp,eax
  406e8a:	js     0x406e41
  406e8c:	outs   dx,DWORD PTR ds:[esi]
  406e8d:	nop
  406e8e:	packuswb mm7,QWORD PTR [esi]
  406e91:	xchg   DWORD PTR [esi-0x1e72212f],edx
  406e97:	mov    ds:0xc7fa74b,al
  406e9c:	mov    dl,0xaa
  406e9e:	or     BYTE PTR [esi-0x26],bh
  406ea1:	mov    bl,0x91
  406ea3:	call   0x1271f8a
  406ea8:	call   0xeeabda2e
  406ead:	mov    cl,0x6c
  406eaf:	sbb    al,0xc4
  406eb1:	mov    al,ds:0x91328565
  406eb6:	(bad)  
  406eb8:	mov    eax,ds:0x576c06c5
  406ebd:	test   BYTE PTR [eax],0x1b
  406ec0:	int    0x64
  406ec2:	or     BYTE PTR [edx-0xaf0aad5],al
  406ec8:	call   0xb75a:0x3c65afe9
  406ecf:	adc    dh,BYTE PTR [esi+0x608bbe08]
  406ed5:	mov    eax,0x26f3fcb9
  406eda:	fsub   QWORD PTR [edx-0x7b]
  406edd:	xchg   esi,eax
  406ede:	ficom  DWORD PTR ds:0x0
	...
  406ef4:	ffreep st(7)
  406ef6:	ror    DWORD PTR [ecx+edi*8-0x2b042b89],cl
  406efd:	mov    dl,0xb2
  406eff:	dec    ebp
  406f00:	push   edx
  406f01:	xor    BYTE PTR [ebp-0x436c27c6],0xa3
  406f08:	jle    0x406ead
  406f0a:	mov    ebx,0xdeeeddd4
  406f0f:	dec    edx
  406f10:	dec    ebx
  406f11:	mov    esi,0x4fb13dd8
  406f16:	shl    DWORD PTR [edi+eax*2-0x392c29a1],1
  406f1d:	pop    edx
  406f1e:	imul   eax,DWORD PTR [ebx-0x20],0x8a346dea
  406f25:	mov    ebx,0xb2cad67
  406f2a:	pusha  
  406f2b:	fisubr DWORD PTR [edi-0x69]
  406f2e:	add    al,0x44
  406f30:	stc    
  406f31:	add    dh,BYTE PTR es:[ebx]
  406f34:	mov    ch,0x5
  406f36:	aaa    
  406f37:	or     bl,BYTE PTR [edi+0x6f]
  406f3a:	dec    eax
  406f3b:	or     eax,0x5559208
  406f40:	test   DWORD PTR [eax],esp
  406f42:	inc    ebp
  406f43:	add    dl,dl
  406f45:	push   esi
  406f46:	repz or dl,BYTE PTR [ebx-0x4c]
  406f4a:	and    al,0xc
  406f4c:	cld    
  406f4d:	dec    edx
  406f4e:	nop
  406f4f:	push   0x6f81d96a
  406f54:	aad    0x2f
  406f56:	scas   eax,DWORD PTR es:[edi]
  406f57:	data16 add BYTE PTR [eax],al
	...
  406f6a:	add    BYTE PTR [eax],al
  406f6c:	sub    al,0xad
  406f6e:	loopne 0x406fd1
  406f70:	sti    
  406f71:	inc    ebx
  406f72:	int3   
  406f73:	fiadd  WORD PTR [ebx-0x73264252]
  406f79:	dec    eax
  406f7a:	imul   edx,eax,0x5
  406f7d:	sbb    BYTE PTR [edi+edx*8-0x4cf7c30e],0x5c
  406f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f86:	clc    
  406f87:	mov    bl,0x8b
  406f89:	mov    eax,ds:0xbc6abd28
  406f8e:	push   edi
  406f8f:	mov    edx,0xb8878975
  406f94:	nop
  406f95:	ret    
  406f96:	xchg   esi,eax
  406f97:	mov    edi,0xb6e5353f
  406f9c:	mov    dh,0xde
  406f9e:	mov    ch,0xb1
  406fa0:	add    DWORD PTR [eax],esi
  406fa2:	inc    edx
  406fa3:	aad    0x8f
  406fa5:	retf   0xd252
  406fa8:	sbb    BYTE PTR [ecx+eiz*1],bh
  406fab:	fstp   TBYTE PTR [ecx-0x19240e5b]
  406fb1:	push   esi
  406fb2:	(bad)  
  406fb3:	bound  edx,QWORD PTR [esi-0x4b]
  406fb6:	push   cs
  406fb7:	fs inc ecx
  406fb9:	add    ebx,DWORD PTR [ebp+0x6d]
  406fbc:	rcl    al,0x2d
  406fbf:	push   0xffffffcf
  406fc1:	(bad)  
  406fc2:	repnz mov edx,0xca7c33b3
  406fc8:	lods   al,BYTE PTR ds:[esi]
  406fc9:	push   ds
  406fca:	push   cs
  406fcb:	call   0x0:0x699885b5
	...
  406fe2:	add    BYTE PTR [eax],al
  406fe4:	mov    dl,0xbc
  406fe6:	lods   eax,DWORD PTR ds:[esi]
  406fe7:	jbe    0x406f9b
  406fe9:	aas    
  406fea:	sbb    esp,DWORD PTR [esi-0x2a3eed53]
  406ff0:	mov    ah,0x99
  406ff2:	das    
  406ff3:	lds    esi,FWORD PTR [ebx-0x68cd3b58]
  406ff9:	inc    edx
  406ffa:	xor    ah,BYTE PTR [edx-0x70]
  406ffd:	sets   BYTE PTR [ecx]
  407000:	popa   
  407001:	cwde   
  407002:	push   es
  407003:	add    DWORD PTR [esi-0x57],ebx
  407006:	jg     0x406ff6
  407008:	push   es
  407009:	cmp    cl,BYTE PTR [ecx]
  40700b:	push   ds
  40700c:	push   es
  40700d:	or     DWORD PTR [ebx+0x1d9fef4d],edx
  407013:	cmp    eax,0xa956b2e8
  407018:	cld    
  407019:	cmp    al,ah
  40701b:	fsincos 
  40701d:	or     DWORD PTR [edx],ebp
  40701f:	mov    ch,BYTE PTR [edx-0x5e]
  407022:	mov    ah,0x7a
  407024:	gs scas eax,DWORD PTR es:[edi]
  407026:	shl    DWORD PTR [ebp+0x753f618b],1
  40702c:	test   al,dh
  40702e:	lods   al,BYTE PTR ds:[esi]
  40702f:	(bad)  
  407030:	ins    DWORD PTR es:[edi],dx
  407031:	ja     0x40704e
  407033:	(bad)  
  407034:	push   0xffffffca
  407036:	cwde   
  407037:	popa   
  407038:	ds pusha 
  40703a:	push   es
  40703b:	xor    DWORD PTR [ecx],edi
  40703d:	icebp  
  40703e:	mov    bl,0x2
  407040:	sub    BYTE PTR [edx+0x22],bh
  407043:	adc    ah,BYTE PTR [edi]
  407045:	(bad)  
  407046:	mov    ds:0x1d,eax
	...
  40705b:	add    BYTE PTR [eax-0x5312d2a9],dh
  407061:	jmp    0x936:0x8e937eff
  407068:	sti    
  407069:	xchg   ebx,eax
  40706a:	inc    ecx
  40706b:	sub    bl,BYTE PTR [edi+ebp*4-0x21]
  40706f:	mov    ah,0xd
  407071:	mov    dl,0xa8
  407073:	inc    esi
  407074:	scas   eax,DWORD PTR es:[edi]
  407075:	test   eax,0xa83cd031
  40707a:	inc    esi
  40707b:	jne    0x4070c5
  40707d:	mov    al,0xcb
  40707f:	jecxz  0x4070b2
  407081:	mov    cl,0xbc
  407083:	mov    DWORD PTR [ebx-0x56],ecx
  407086:	and    eax,0x52a710f7
  40708b:	jl     0x4070f1
  40708d:	mov    ecx,esp
  40708f:	jmp    0x8fe7:0x50bb8675
  407096:	and    bh,BYTE PTR [esi+0x47559494]
  40709c:	mov    al,0xf5
  40709e:	(bad)  
  40709f:	rcr    ecx,1
  4070a1:	cli    
  4070a2:	mov    cl,0x5b
  4070a4:	mov    ds:0x68e52b03,eax
  4070a9:	(bad)  
  4070aa:	pop    ebx
  4070ab:	mov    gs,ebp
  4070ad:	popa   
  4070ae:	ret    0xfc18
  4070b1:	pop    esi
  4070b2:	mov    ch,0x62
  4070b4:	sbb    al,0x57
  4070b6:	sub    al,0xec
  4070b8:	dec    esp
  4070b9:	pop    edx
  4070ba:	pop    ebx
  4070bb:	jns    0x407135
  4070bd:	mov    ah,0x9b
  4070bf:	pop    es
	...
  4070d4:	sub    DWORD PTR [ebp-0x59a6aa14],0x75
  4070db:	jecxz  0x4070de
  4070dd:	stos   DWORD PTR es:[edi],eax
  4070de:	add    dl,BYTE PTR [eax-0x4c]
  4070e1:	xchg   BYTE PTR [esi+ebx*8+0x6ceb89a4],bl
  4070e8:	aad    0x90
  4070ea:	jb     0x4070e6
  4070ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070ed:	pop    DWORD PTR ds:0xbf7ace00
  4070f3:	xchg   ebp,eax
  4070f4:	or     bl,0xb8
  4070f7:	loop   0x4070f3
  4070f9:	fwait
  4070fa:	mov    cl,0x7b
  4070fc:	add    al,0x2c
  4070fe:	mov    ch,0xc
  407100:	aaa    
  407101:	mov    bh,0xd2
  407103:	xchg   edx,eax
  407104:	dec    ecx
  407105:	pop    es
  407106:	aad    0xe5
  407108:	push   ebx
  407109:	pop    eax
  40710a:	fdivr  QWORD PTR [ebp+edi*4-0x1a]
  40710e:	fimul  DWORD PTR [ebx]
  407110:	rol    BYTE PTR [edx],0xd3
  407113:	xchg   BYTE PTR [esi+0x33],cl
  407116:	aam    0xf1
  407118:	les    esp,FWORD PTR [ebx]
  40711a:	(bad)  [eax+0x4a]
  40711d:	adc    al,0xda
  40711f:	pop    ds
  407120:	leave  
  407121:	ds mov ebp,0xb96ef781
  407127:	idiv   BYTE PTR [ebp+0x436fb0df]
  40712d:	shl    BYTE PTR [edi+0x86ab218],1
  407133:	mov    BYTE PTR [edx+ebx*8+0xf],bl
  407137:	inc    DWORD PTR [eax]
	...
  407149:	add    BYTE PTR [eax],al
  40714b:	add    BYTE PTR [esi+0x3866068b],dl
  407151:	cmp    al,0x0
  407153:	adc    ebx,ebx
  407155:	mov    cl,0x65
  407157:	(bad)  
  407158:	and    DWORD PTR gs:[edx-0x8],esp
  40715c:	outs   dx,DWORD PTR ds:[esi]
  40715d:	push   eax
  40715e:	imul   esp,DWORD PTR [ecx-0x2f],0x0
  407162:	ins    BYTE PTR es:[edi],dx
  407163:	push   ss
  407164:	hlt    
  407165:	sub    eax,0xfd6aa00a
  40716a:	or     al,0xd7
  40716c:	mov    al,0xc
  40716e:	add    al,0x4e
  407170:	pop    esi
  407171:	sbb    al,0x3
  407173:	cmp    DWORD PTR [ebp+0x23a76799],ebp
  407179:	sub    DWORD PTR [edi-0x30],ebx
  40717c:	mov    ch,0x73
  40717e:	aas    
  40717f:	imul   edi,esp,0xa36e4efd
  407185:	jl     0x4071e1
  407187:	ror    DWORD PTR [ebx],1
  407189:	sbb    ch,BYTE PTR [edx]
  40718b:	(bad)  
  40718c:	ins    BYTE PTR es:[edi],dx
  40718d:	mov    bl,bh
  40718f:	fdivrp st(5),st
  407191:	mov    dh,0xb
  407193:	fmul   DWORD PTR [edx+0xcbc94f5]
  407199:	jae    0x407201
  40719b:	mov    ebx,0xb2b66113
  4071a0:	jb     0x407171
  4071a2:	(bad)  
  4071a3:	mov    ch,0xe5
  4071a5:	xor    dl,cl
  4071a7:	mov    ebp,0xbac2bc58
  4071ac:	push   DWORD PTR ds:0xb372
	...
  4071c2:	add    BYTE PTR [eax],al
  4071c4:	data16 adc BYTE PTR [ebx+0xd2bd9b4],ah
  4071cb:	sar    BYTE PTR [edi],1
  4071cd:	mov    ch,0xfe
  4071cf:	(bad)  
  4071d0:	add    BYTE PTR [edi+0x2e],cl
  4071d3:	fiadd  WORD PTR [ecx-0x6926a037]
  4071d9:	pusha  
  4071da:	dec    ecx
  4071db:	data16 es into 
  4071de:	cmp    ah,BYTE PTR [ecx-0x7]
  4071e1:	and    ebp,edx
  4071e3:	addr16 push 0x8f6f1be2
  4071e9:	cdq    
  4071ea:	xchg   BYTE PTR [ebx],cl
  4071ec:	add    DWORD PTR [edi],eax
  4071ee:	jne    0x4071fc
  4071f0:	jbe    0x407234
  4071f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071f3:	add    eax,0x2d6d40f
  4071f8:	shr    BYTE PTR [eax],1
  4071fa:	add    eax,DWORD PTR [eax]
  4071fc:	mov    ch,0x67
  4071fe:	adc    eax,0x61aaac1b
  407203:	ss (bad) 
  407205:	jmp    0x900e9f3b
  40720a:	in     eax,dx
  40720b:	ror    BYTE PTR [ecx],0xac
  40720e:	and    al,0xd0
  407210:	jmp    0xa6de:0xf9e6fb4
  407217:	ins    DWORD PTR es:[edi],dx
  407218:	hlt    
  407219:	(bad)  
  40721a:	icebp  
  40721b:	jns    0x407299
  40721d:	dec    eax
  40721e:	xor    BYTE PTR [ebx-0x249c9e89],cl
  407224:	pop    edx
  407225:	cmp    ah,BYTE PTR [edx+0xac]
	...
  40723b:	add    BYTE PTR [ecx+0x33],cl
  40723e:	cmc    
  40723f:	ss add ah,ah
  407242:	stos   DWORD PTR es:[edi],eax
  407243:	inc    ebp
  407244:	arpl   bp,di
  407246:	data16 sbb BYTE PTR [esi],dh
  407249:	push   ss
  40724a:	push   ds
  40724b:	out    0x4a,eax
  40724d:	sets   cl
  407250:	hlt    
  407251:	leave  
  407252:	fldenv [edx]
  407254:	in     al,dx
  407255:	loop   0x407271
  407257:	push   ebx
  407258:	add    DWORD PTR [eax-0x4eedbba5],edi
  40725e:	mov    esp,0xf5664bae
  407263:	(bad)  [eax]
  407265:	jg     0x4072a5
  407267:	nop
  407268:	dec    ebp
  407269:	xchg   esp,eax
  40726a:	ja     0x4072eb
  40726c:	lea    esp,ss:[eax-0x1eee4195]
  407273:	pushf  
  407274:	mov    ch,0x1a
  407276:	adc    cl,cl
  407278:	cwde   
  407279:	call   DWORD PTR [edx-0x46]
  40727c:	mov    ebp,eax
  40727e:	inc    ebx
  40727f:	daa    
  407280:	inc    edx
  407281:	sub    eax,0x372157fd
  407286:	mov    dh,0x5
  407288:	hlt    
  407289:	pop    ebx
  40728a:	outs   dx,DWORD PTR ds:[esi]
  40728b:	idiv   ah
  40728d:	inc    esp
  40728e:	mov    esp,DWORD PTR [eax]
  407290:	xor    DWORD PTR [edx+ecx*8],ebx
  407293:	out    dx,eax
  407294:	xor    eax,DWORD PTR [ebx]
  407296:	add    BYTE PTR [ecx],cl
  407298:	retf   
  407299:	add    DWORD PTR [edi-0x42170fb8],esp
  40729f:	dec    edi
	...
  4072b4:	xchg   esi,eax
  4072b5:	daa    
  4072b6:	icebp  
  4072b7:	xchg   BYTE PTR [ecx],ch
  4072b9:	inc    edx
  4072ba:	call   0xc395a88c
  4072bf:	add    al,0x47
  4072c1:	dec    esp
  4072c2:	ficom  DWORD PTR [ebx+0x43]
  4072c5:	aam    0x5d
  4072c7:	xchg   edx,eax
  4072c8:	fmul   st,st(5)
  4072ca:	inc    esp
  4072cb:	rol    DWORD PTR [edx],0xaa
  4072ce:	outs   dx,DWORD PTR ds:[esi]
  4072cf:	add    BYTE PTR [edx-0x41],bh
  4072d2:	jbe    0x40726b
  4072d4:	fadd   QWORD PTR [eax+0x69df4e39]
  4072da:	and    BYTE PTR ds:0xbc0b8d2e,al
  4072e0:	scas   al,BYTE PTR es:[edi]
  4072e1:	xchg   ebx,eax
  4072e2:	adc    bh,BYTE PTR [edx]
  4072e4:	stos   DWORD PTR es:[edi],eax
  4072e5:	int    0xdf
  4072e7:	jnp    0x4072f9
  4072e9:	rol    esi,cl
  4072eb:	mov    eax,0xf9edbfda
  4072f0:	arpl   WORD PTR [edx+0x68e41ef4],bp
  4072f6:	mov    ebx,0xa27ff757
  4072fb:	pushf  
  4072fc:	addr16 xchg ebx,eax
  4072fe:	mov    ebp,edx
  407300:	push   ss
  407301:	mov    ss,WORD PTR [eax+0x17162d02]
  407307:	inc    ebx
  407308:	dec    edx
  407309:	or     ecx,DWORD PTR [esi]
  40730b:	jo     0x40731d
  40730d:	call   0x12a2436
  407312:	cmp    al,0xe6
  407314:	outs   dx,DWORD PTR ds:[esi]
  407315:	inc    edx
  407316:	jae    0x4072b7
	...
  40732c:	out    dx,al
  40732d:	daa    
  40732e:	push   0x54
  407330:	pushf  
  407331:	dec    esp
  407332:	inc    ecx
  407333:	or     eax,0x5855bf
  407338:	mov    DWORD PTR [ecx+edi*2-0x10],edi
  40733c:	fmul   st,st(5)
  40733e:	(bad)  
  40733f:	jmp    0xc290115f
  407344:	pop    edx
  407345:	sub    eax,0xb78ddb53
  40734a:	adc    eax,0xe069c94
  40734f:	(bad)  
  407350:	fistp  WORD PTR [eax+0x23]
  407353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407354:	push   cs
  407355:	jmp    0x389f:0xf661bf37
  40735c:	mov    al,ds:0xd321bb5f
  407361:	adc    edx,DWORD PTR [esi-0x725cddf6]
  407367:	adc    eax,DWORD PTR [ebp-0x6f]
  40736a:	int3   
  40736b:	pop    esp
  40736c:	mov    fs:0xae9745d7,al
  407372:	cli    
  407373:	outs   dx,BYTE PTR ds:[esi]
  407374:	(bad)  
  407375:	jg     0x407358
  407377:	ja     0x4073b1
  407379:	outs   dx,BYTE PTR ds:[esi]
  40737a:	mov    ebx,0xa0dce9ba
  40737f:	mov    ds:0x888d8baa,eax
  407384:	imul   edi,DWORD PTR [edx],0xffffff95
  407387:	xchg   ecx,eax
  407388:	cmp    al,0xa9
  40738a:	xlat   BYTE PTR ds:[ebx]
  40738b:	fsubp  st(5),st
  40738d:	sbb    esp,ecx
  40738f:	mov    DWORD PTR [eax],0x0
	...
  4073a1:	add    BYTE PTR [eax],al
  4073a3:	add    BYTE PTR [esi+0x5fece146],ch
  4073a9:	idiv   ecx
  4073ab:	cmc    
  4073ac:	adc    ah,ah
  4073ae:	popa   
  4073af:	jb     0x4073a2
  4073b1:	push   edx
  4073b2:	jns    0x40741f
  4073b4:	mov    ds:0x73405405,al
  4073b9:	mov    ah,0x4f
  4073bb:	pop    ecx
  4073bc:	je     0x40735b
  4073be:	push   cs
  4073bf:	push   ss
  4073c0:	mov    ch,0x2c
  4073c2:	adc    al,0xf
  4073c4:	mov    ch,0x0
  4073c6:	xor    al,0x38
  4073c8:	fld    st(1)
  4073ca:	inc    ebp
  4073cb:	and    ebx,eax
  4073cd:	add    eax,0x4d18fd2f
  4073d2:	pop    esi
  4073d3:	out    0x9,al
  4073d5:	test   BYTE PTR ds:0xfccaeacb,cl
  4073db:	iret   
  4073dc:	jmp    0x4073a7
  4073de:	jb     0x407371
  4073e0:	mov    ah,0x8
  4073e2:	mov    ds:0xcf47cd8a,eax
  4073e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073e9:	xchg   cl,al
  4073eb:	mov    esp,0x24a5dd8f
  4073f0:	and    BYTE PTR [esp+edx*8],al
  4073f3:	aas    
  4073f4:	add    DWORD PTR [ebx-0x7a],ecx
  4073f7:	adc    ah,BYTE PTR [edx]
  4073f9:	xor    dh,BYTE PTR [ebp+0x9]
  4073fc:	xor    esp,DWORD PTR [ecx]
  4073fe:	call   0x1a20704a
  407403:	push   ebx
  407404:	add    eax,0x7e4a8f
	...
  407419:	add    BYTE PTR [eax],al
  40741b:	add    BYTE PTR [esi],bl
  40741d:	dec    esi
  40741e:	cmp    ah,BYTE PTR [ebp+0x17]
  407421:	je     0x407460
  407423:	aas    
  407424:	loop   0x4073e3
  407426:	dec    esp
  407427:	and    al,0xc3
  407429:	repnz sbb eax,0xed3ba009
  40742f:	adc    DWORD PTR [ecx+0x7e538098],esi
  407435:	fst    DWORD PTR [ecx-0x1ee978b8]
  40743b:	gs pop esp
  40743d:	push   edi
  40743e:	mov    dl,0x7e
  407440:	push   ebp
  407441:	mov    WORD PTR [edi-0x398b251a],?
  407447:	std    
  407448:	retf   
  407449:	mov    ecx,0xe2e8d094
  40744e:	(bad)  
  40744f:	retf   
  407450:	jmp    0x3d3a57e3
  407455:	cpuid  
  407457:	or     al,BYTE PTR [esi+edx*1+0x51]
  40745b:	pop    eax
  40745c:	popa   
  40745d:	add    DWORD PTR [eax],edx
  40745f:	sub    DWORD PTR [edx-0x18],edx
  407462:	xor    DWORD PTR [esi+esi*1+0x2d6cf377],ebx
  407469:	outs   dx,BYTE PTR ds:[esi]
  40746a:	mov    al,ds:0x618948bd
  40746f:	into   
  407470:	dec    ebx
  407471:	mov    al,ds:0xd3626136
  407476:	out    dx,eax
  407477:	das    
  407478:	popa   
  407479:	retf   0x2a4
  40747c:	jl     0x407423
  40747e:	pop    ebp
  40747f:	adc    DWORD PTR [eax],eax
	...
  407491:	add    BYTE PTR [eax],al
  407493:	add    BYTE PTR [edi-0x44],dh
  407496:	sub    dl,BYTE PTR [esi]
  407498:	out    dx,eax
  407499:	ds jmp 0x407482
  40749c:	cmc    
  40749d:	and    eax,0x50d133a8
  4074a2:	imul   eax,DWORD PTR [edx+eax*8+0x57],0x1aebdaae
  4074aa:	out    0xa9,eax
  4074ac:	fadd   DWORD PTR [ecx]
  4074ae:	sub    al,0x78
  4074b0:	mov    ch,0xec
  4074b2:	xchg   DWORD PTR fs:[esi+0x748de2f3],edi
  4074b9:	shl    BYTE PTR [edx+0x51a76f7e],0xab
  4074c0:	mov    cl,dh
  4074c2:	adc    ah,bl
  4074c4:	mov    ebp,edx
  4074c6:	pop    es
  4074c7:	push   ebx
  4074c8:	mov    al,ds:0xa341be9c
  4074cd:	xor    DWORD PTR [ebp-0x10],0xffffffbf
  4074d1:	push   0x2c
  4074d3:	pop    ds
  4074d4:	mov    ch,0x71
  4074d6:	fild   DWORD PTR [ebx]
  4074d8:	sub    eax,0x37f499f9
  4074dd:	lock call FWORD PTR [eax-0x68]
  4074e1:	loope  0x40746d
  4074e3:	sbb    BYTE PTR [ebx-0x4],ah
  4074e6:	xchg   ecx,eax
  4074e7:	(bad)  
  4074e8:	jnp    0x407525
  4074ea:	fnsave [esi]
  4074ec:	ins    DWORD PTR es:[edi],dx
  4074ed:	and    al,ah
  4074ef:	jge    0x4074fd
  4074f1:	dec    esi
  4074f2:	out    dx,eax
  4074f3:	mov    ah,0x3f
  4074f5:	pop    eax
  4074f6:	not    al
	...
  40750c:	xor    eax,0x3a91ae8a
  407511:	xchg   ebx,eax
  407512:	mov    bh,0x42
  407514:	xchg   edi,eax
  407515:	sbb    BYTE PTR [ebx+eax*1-0x6b7a9abc],0xae
  40751d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40751e:	retf   0xf94d
  407521:	mov    edi,0xd4c006d3
  407526:	clc    
  407527:	mov    edi,0x88e1cc48
  40752c:	dec    edi
  40752d:	push   esp
  40752e:	dec    cx
  407530:	mov    esp,0xdd0a7f4c
  407535:	daa    
  407536:	push   esp
  407537:	retf   
  407538:	xchg   ebx,eax
  407539:	ds dec ebp
  40753b:	dec    esp
  40753c:	push   0xf38501fd
  407541:	out    0x1a,eax
  407543:	into   
  407544:	inc    edi
  407545:	or     esi,DWORD PTR [eax]
  407547:	pop    es
  407548:	xchg   ecx,eax
  407549:	adc    ch,BYTE PTR [ecx]
  40754b:	add    DWORD PTR [edi+0x5440e44c],0xf2f3fd51
  407555:	cmp    eax,0x273bb2d6
  40755a:	iret   
  40755b:	mov    al,gs:0x8b1c7fe8
  407561:	std    
  407562:	cwde   
  407563:	xlat   BYTE PTR ds:[ebx]
  407564:	scas   eax,DWORD PTR es:[edi]
  407565:	adc    dh,BYTE PTR [edx-0x54f22172]
  40756b:	add    BYTE PTR [edi+eiz*1+0x2c1b],cl
	...
  407582:	add    BYTE PTR [eax],al
  407584:	int    0x98
  407586:	pop    es
  407587:	xor    eax,0x1e2ac7fe
  40758c:	aas    
  40758d:	ja     0x4075c0
  40758f:	pop    es
  407590:	push   eax
  407591:	out    dx,al
  407592:	outs   dx,DWORD PTR ds:[esi]
  407593:	dec    eax
  407594:	sbb    DWORD PTR [ebp+0x6b],0x460ac251
  40759b:	jp     0x4075a0
  40759d:	mov    edx,0x56ca635d
  4075a2:	cli    
  4075a3:	retf   
  4075a4:	fwait
  4075a5:	out    0xe0,eax
  4075a7:	rcr    BYTE PTR [eax-0x46],cl
  4075aa:	int3   
  4075ab:	stc    
  4075ac:	(bad)  [eax]
  4075ae:	xlat   BYTE PTR ds:[ebx]
  4075af:	loopne 0x407557
  4075b1:	cdq    
  4075b2:	xchg   esi,eax
  4075b3:	scas   eax,DWORD PTR es:[edi]
  4075b4:	addr16 sub al,0x8c
  4075b7:	mov    dh,0x14
  4075b9:	jge    0x40755b
  4075bb:	popf   
  4075bc:	aad    0xcd
  4075be:	mov    ebx,0x23d0a284
  4075c3:	add    edx,DWORD PTR [ebx+0x61]
  4075c6:	cmp    BYTE PTR [edx],bl
  4075c8:	adc    BYTE PTR [eax-0x612eceeb],dl
  4075ce:	push   cs
  4075cf:	sub    BYTE PTR [esi+0x15],bl
  4075d2:	dec    edi
  4075d3:	addr16 pop ds
  4075d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075d6:	push   esp
  4075d7:	jle    0x4075a5
  4075d9:	bnd js 0x407631
  4075dc:	lea    eax,[ebx+0x62]
  4075df:	dec    esp
  4075e0:	sbb    ecx,DWORD PTR [edx+0x38]
  4075e3:	sub    DWORD PTR [edx],0x9822f9
	...
  4075f9:	add    BYTE PTR [eax],al
  4075fb:	add    BYTE PTR [ecx-0x59],ch
  4075fe:	push   cs
  4075ff:	mov    bl,0xa8
  407601:	push   ss
  407602:	adc    eax,0x548bb7aa
  407607:	in     eax,0xf6
  407609:	cmp    eax,0xbfb5fc4e
  40760e:	and    eax,0x547f0262
  407613:	jns    0x407618
  407615:	push   edx
  407616:	push   eax
  407617:	loope  0x407695
  407619:	sbb    BYTE PTR [ecx-0x6],al
  40761c:	gs shr esi,cl
  40761f:	(bad)  
  407620:	ds call 0x8d89:0x3617cc1f
  407628:	fdiv   DWORD PTR [ebx+edi*2-0x6a]
  40762c:	jmp    0xbafc22e8
  407631:	neg    ah
  407633:	mov    al,ds:0x7eb35abb
  407638:	jmp    0x40763d
  40763a:	ret    0xfa65
  40763d:	enter  0x4895,0x9
  407641:	xor    ah,BYTE PTR [ebx+0x53]
  407644:	call   0xaf526c67
  407649:	fild   WORD PTR [edi]
  40764b:	or     DWORD PTR [esi-0x52dba774],edx
  407651:	dec    ebp
  407652:	sub    BYTE PTR [edi],bh
  407654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407655:	add    bh,BYTE PTR ds:0x4ccb23a7
  40765b:	mov    esp,0x911b8032
	...
  407674:	adc    DWORD PTR [ecx-0x17],ecx
  407677:	mov    DWORD PTR [eax-0x3a],esi
  40767a:	or     bl,0x27
  40767d:	pop    es
  40767e:	xchg   ecx,eax
  40767f:	ror    BYTE PTR [esi],1
  407681:	inc    esp
  407682:	(bad)  
  407684:	cmc    
  407685:	test   BYTE PTR [edi-0x5af5131a],ch
  40768b:	mov    esp,0xa7d472a1
  407690:	mov    al,0x39
  407692:	or     BYTE PTR [edx-0x6e8f1f2d],0xb2
  407699:	(bad)  
  40769a:	pusha  
  40769b:	call   0x1962359a
  4076a0:	out    dx,al
  4076a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076a2:	rol    BYTE PTR [ebp-0x2d],cl
  4076a5:	int3   
  4076a6:	xchg   ebx,eax
  4076a7:	ss rcl bl,1
  4076aa:	cmp    al,0x2b
  4076ac:	push   eax
  4076ad:	push   ebx
  4076ae:	cmc    
  4076af:	pop    ecx
  4076b0:	inc    ebx
  4076b1:	dec    edx
  4076b2:	mov    esi,0x7721660c
  4076b7:	sti    
  4076b8:	cli    
  4076b9:	es cwde 
  4076bb:	ins    DWORD PTR es:[edi],dx
  4076bc:	mov    esp,0xc79ed8e7
  4076c1:	lock sbb eax,edx
  4076c4:	ficomp DWORD PTR [ecx]
  4076c6:	pop    ebx
  4076c7:	rcr    ecx,0x2
  4076ca:	jmp    0xf6d02bd2
  4076cf:	sub    DWORD PTR [edi-0x6f],esi
  4076d2:	inc    edi
  4076d3:	fdiv   DWORD PTR [ecx]
  4076d5:	xchg   ebx,eax
  4076d6:	adc    BYTE PTR [esi+0x0],bh
	...
  4076e9:	add    BYTE PTR [eax],al
  4076eb:	add    bl,bh
  4076ed:	xchg   ecx,eax
  4076ee:	lds    ebp,FWORD PTR [ebx-0x44]
  4076f1:	xchg   esi,eax
  4076f2:	xchg   edx,eax
  4076f3:	shr    DWORD PTR [esi-0x6a],0x5b
  4076f7:	aas    
  4076f8:	sub    BYTE PTR [esp+eiz*2+0x41950215],dl
  4076ff:	push   esp
  407700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407701:	popf   
  407702:	outs   dx,BYTE PTR ds:[esi]
  407703:	cli    
  407704:	gs lahf 
  407706:	lahf   
  407707:	mov    BYTE PTR [edx],ah
  407709:	popf   
  40770a:	mov    BYTE PTR [esi-0x43326478],ch
  407710:	iret   
  407711:	cwde   
  407712:	mov    edx,0xe397fd92
  407717:	lock cmp BYTE PTR [edx-0x658eb8f4],bl
  40771e:	mov    ecx,0xa68bd362
  407723:	int3   
  407724:	sbb    DWORD PTR [ebp-0xe3c2900],ecx
  40772a:	push   ds
  40772b:	add    BYTE PTR [edi+ebp*4+0x7ebf551e],dl
  407732:	sbb    eax,DWORD PTR [edx+0x2b1a3c99]
  407738:	sti    
  407739:	cli    
  40773a:	pop    ss
  40773b:	adc    al,0x4d
  40773d:	mov    eax,0x65043119
  407742:	adc    bh,dh
  407744:	pop    ds
  407745:	daa    
  407746:	adc    ecx,DWORD PTR [edi-0x30]
  407749:	fist   WORD PTR [eax]
  40774b:	pop    eax
  40774c:	add    ah,BYTE PTR [ebx+0xfd10]
	...
  407762:	add    BYTE PTR [eax],al
  407764:	or     al,0x6c
  407766:	adc    eax,0x142ca90a
  40776b:	push   ebx
  40776c:	sub    esp,edi
  40776e:	adc    eax,0x17a95d1c
  407773:	leave  
  407774:	repz fdivr QWORD PTR [eax]
  407777:	xchg   esi,eax
  407778:	test   DWORD PTR ds:0x58276739,ebx
  40777e:	cmp    esi,DWORD PTR [eax+0x31]
  407781:	call   0xf23f:0xd318e53a
  407788:	cmp    dl,BYTE PTR ds:0xee5f3b3e
  40778e:	cmp    eax,DWORD PTR [ecx+ebp*8]
  407791:	xchg   ecx,eax
  407792:	cmp    eax,0x36cda021
  407797:	push   cs
  407798:	or     BYTE PTR [ebx],0x37
  40779b:	mov    edi,0xe8354975
  4077a0:	lahf   
  4077a1:	xchg   DWORD PTR [ebp*2-0x65ce3958],esi
  4077a8:	or     al,BYTE PTR [eax+esi*1]
  4077ab:	inc    ebx
  4077ac:	int3   
  4077ad:	inc    edx
  4077ae:	xor    ch,BYTE PTR [esi+esi*4]
  4077b1:	xor    BYTE PTR [ebx],0x0
  4077b4:	ins    BYTE PTR es:[edi],dx
  4077b5:	imul   BYTE PTR [edx+0x24]
  4077b8:	cmp    ebx,DWORD PTR [ecx+ebp*4]
  4077bb:	and    eax,0x27ee22c2
  4077c0:	xchg   ebp,eax
  4077c1:	enter  0x262d,0x20
  4077c5:	frstor [edx+0x23]
	...
  4077dc:	pop    ss
  4077dd:	xor    ebx,DWORD PTR [edi-0x19f711de]
  4077e3:	and    cl,cl
  4077e5:	fisub  WORD PTR [ebx]
  4077e7:	and    esp,esp
  4077e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077ea:	js     0x407816
  4077ec:	jecxz  0x407839
  4077ee:	mov    edx,0xfc720a2b
  4077f3:	sub    DWORD PTR ds:0x88283e97,ebp
  4077f9:	lea    esi,[ecx+0x2d]
  4077fc:	dec    edi
  4077fd:	arpl   WORD PTR [ebx-0xaa6d9d4],si
  407803:	adc    DWORD PTR cs:[edi+0x1e5c2f37],ebp
  40780a:	call   0x3271:0x57f44b70
  407811:	retf   0x731e
  407814:	add    eax,0xb072db20
  407819:	xor    al,0x92
  40781b:	ja     0x4077a4
  40781d:	fcom   QWORD PTR [ecx+0x76]
  407820:	mov    esi,0x997416e0
  407825:	push   es
  407826:	aad    0x75
  407828:	mov    ah,0x2f
  40782a:	mov    DWORD PTR [esi-0x6d],edi
  40782d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40782e:	dec    ebx
  40782f:	jg     0x40788b
  407831:	cdq    
  407832:	or     eax,0xcf6efd7d
  407837:	jl     0x407871
  407839:	cmp    BYTE PTR gs:[ecx-0x61],0x8a
  40783e:	inc    edx
  40783f:	js     0x407841
	...
  407851:	add    BYTE PTR [eax],al
  407853:	add    BYTE PTR [ebp-0x70fb9c90],dh
  407859:	fcmovne st,st(1)
  40785b:	(bad)  
  40785c:	mov    fs,WORD PTR [esi-0x4a6e4413]
  407862:	inc    edi
  407863:	jle    0x4077ed
  407865:	test   BYTE PTR [ecx-0x6c309dc8],bh
  40786b:	cli    
  40786c:	pop    ebx
  40786d:	add    al,BYTE PTR [ebp-0x50aeb14b]
  407873:	ja     0x4078c4
  407875:	cmp    BYTE PTR [ecx+0x31],dl
  407878:	pop    ebp
  407879:	inc    ebx
  40787a:	sti    
  40787b:	repnz pop esp
  40787d:	push   ds
  40787e:	cmp    al,0xaf
  407880:	push   edi
  407881:	in     eax,dx
  407882:	adc    eax,0x681c566d
  407887:	sub    edx,DWORD PTR [eax+ecx*1]
  40788a:	ret    0x15e9
  40788d:	jmp    0x407861
  40788f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407890:	sbb    BYTE PTR [edx+0x79],bl
  407893:	adc    DWORD PTR fs:[ecx],eax
  407896:	pop    es
  407897:	and    bl,BYTE PTR [ebx]
  407899:	int3   
  40789a:	sub    eax,0xcf9712e0
  40789f:	xlat   BYTE PTR ds:[ebx]
  4078a0:	in     eax,dx
  4078a1:	inc    ebp
  4078a2:	fs adc eax,0x531b74ec
  4078a8:	(bad)  
  4078a9:	pop    edi
  4078aa:	xor    DWORD PTR [ecx-0x21d90d01],edx
  4078b0:	repnz loope 0x4078bf
  4078b3:	sbb    al,0xeb
  4078b5:	test   al,0x73
  4078b7:	pop    edx
	...
  4078cc:	add    esp,edx
  4078ce:	fstp   DWORD PTR [eax-0x3b615108]
  4078d4:	sti    
  4078d5:	fnsave [esi+eax*1+0x404aacf2]
  4078dc:	js     0x4078d5
  4078de:	fild   WORD PTR [ecx-0xa52708f]
  4078e4:	icebp  
  4078e5:	int    0xda
  4078e7:	pop    ebx
  4078e8:	stos   BYTE PTR es:[edi],al
  4078e9:	iret   
  4078ea:	add    esp,DWORD PTR [edx-0x78132e84]
  4078f0:	rcr    BYTE PTR ds:[ecx-0x393cfbd5],1
  4078f7:	add    eax,0x77f7c2c6
  4078fc:	push   0x22d1e0c4
  407901:	lds    esi,FWORD PTR [ebp-0x3c]
  407904:	fnstsw WORD PTR [edi-0x3e60919e]
  40790a:	or     edx,DWORD PTR [eax]
  40790c:	push   ecx
  40790d:	mov    edi,0xbe0b3a34
  407912:	adc    ebp,edi
  407914:	aam    0xc8
  407916:	push   ds
  407917:	push   edi
  407918:	xchg   ebp,eax
  407919:	enter  0xa96f,0x1b
  40791d:	leave  
  40791e:	cmp    BYTE PTR [ebx-0x6ae237af],al
  407924:	mov    cs,ebp
  407926:	jmp    0x2241:0x33cbccbe
  40792d:	retf   0xeb3c
	...
  407944:	pop    ecx
  407945:	retf   
  407946:	imul   ebx,DWORD PTR [esi],0x347630c8
  40794c:	xor    BYTE PTR [eax],0xc7
  40794f:	retf   0x2e24
  407952:	nop
  407953:	pusha  
  407954:	out    0x2e,al
  407956:	inc    ebp
  407957:	ja     0x4078fa
  407959:	xor    DWORD PTR [edx],edx
  40795b:	fstp   QWORD PTR [ebx+0x33]
  40795e:	(bad)  [edx]
  407960:	or     eax,0xcf08e435
  407965:	xor    eax,ecx
  407967:	dec    ebp
  407968:	fwait
  407969:	cmp    ch,dh
  40796b:	jecxz  0x4079c3
  40796d:	cmp    al,BYTE PTR [eax]
  40796f:	pop    ds
  407970:	dec    edi
  407971:	out    dx,al
  407972:	jmp    0x40797c
  407974:	gs mov al,0xed
  407977:	dec    ebp
  407978:	pop    eax
  407979:	jnp    0x407963
  40797b:	cmp    ch,BYTE PTR [esi]
  40797d:	cmp    eax,0xf60463e9
  407982:	jmp    0x7e39:0xeab8628c
  407989:	jle    0x407988
  40798b:	es loopne 0x4079ce
  40798e:	cld    
  40798f:	push   edi
  407990:	call   0xffc4:0xb480fe02
  407997:	aad    0xc6
  407999:	test   edx,edi
  40799b:	add    bl,BYTE PTR [ebx+0x12abfb47]
  4079a1:	or     bh,cl
  4079a3:	xchg   esp,eax
  4079a4:	pop    esp
  4079a5:	retf   
  4079a6:	clc    
  4079a7:	mov    cl,0x0
	...
  4079b9:	add    BYTE PTR [eax],al
  4079bb:	add    BYTE PTR [ecx],dl
  4079bd:	nop
  4079be:	repz jle 0x4079f4
  4079c1:	dec    esi
  4079c2:	repnz iret 
  4079c4:	lods   eax,DWORD PTR ds:[esi]
  4079c5:	push   cs
  4079c6:	lock fadd DWORD PTR [edi]
  4079c9:	shl    cl,cl
  4079cb:	jge    0x4079c3
  4079cd:	cwde   
  4079ce:	hlt    
  4079cf:	mov    cl,BYTE PTR [eax+0x42d3f555]
  4079d5:	sbb    al,0xf7
  4079d7:	pushf  
  4079d8:	dec    esp
  4079d9:	(bad)  
  4079db:	dec    ecx
  4079dc:	jmp    0xd7e8:0x8416d9a7
  4079e3:	out    0x3f,eax
  4079e5:	sub    ebx,edx
  4079e7:	lock adc DWORD PTR [ecx-0x25],ebp
  4079eb:	adc    ah,BYTE PTR gs:[eax-0x21c38d22]
  4079f2:	fidivr WORD PTR [ebx-0x7b22dcaa]
  4079f8:	clc    
  4079f9:	(bad)  
  4079fa:	fadd   QWORD PTR [eax]
  4079fc:	adc    al,0x97
  4079fe:	imul   edx,edi,0x2b
  407a01:	ins    DWORD PTR es:[edi],dx
  407a02:	test   eax,0xef4bf2d6
  407a07:	aam    0x9d
  407a09:	mov    eax,ds:0xca10d52d
  407a0e:	(bad)  
  407a0f:	sar    BYTE PTR [edi-0x92e5fab],1
  407a15:	pop    ebp
  407a16:	out    0xd3,al
  407a18:	pop    ecx
  407a19:	mov    WORD PTR [edx+edx*8],fs
  407a1c:	fsubr  st(7),st
  407a1e:	pop    ebp
  407a1f:	lds    eax,FWORD PTR [eax]
	...
  407a31:	add    BYTE PTR [eax],al
  407a33:	add    BYTE PTR [ebx+0x2ac49bff],dh
  407a39:	cmp    al,0xd9
  407a3b:	(bad)  
  407a3c:	adc    eax,0xa8c718ce
  407a41:	mov    ebp,0x2797c257
  407a46:	xchg   esp,eax
  407a47:	ret    
  407a48:	jle    0x407a5b
  407a4a:	rol    ecx,cl
  407a4c:	inc    ecx
  407a4d:	sti    
  407a4e:	adc    al,al
  407a50:	fs mov eax,0xea5bcb4d
  407a56:	mov    cs,edx
  407a58:	loop   0x407ac4
  407a5a:	leave  
  407a5b:	enter  0x7ead,0xb
  407a5f:	leave  
  407a60:	add    BYTE PTR [edi+0x70cfcc44],cl
  407a66:	xchg   ch,cl
  407a68:	xchg   BYTE PTR [eax+eax*8-0x31],al
  407a6c:	mov    DWORD PTR [esi-0x23331fe],esp
  407a72:	scas   al,BYTE PTR es:[edi]
  407a73:	xchg   ecx,eax
  407a74:	ret    
  407a75:	out    0x6c,eax
  407a77:	nop
  407a78:	mov    edx,0x85922bd1
  407a7d:	xor    eax,0x273893e8
  407a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a83:	xchg   esi,eax
  407a84:	pop    es
  407a85:	fldenv [edi+edx*4-0x4b]
  407a89:	add    al,0xad
  407a8b:	and    ah,BYTE PTR [eax]
  407a8d:	hlt    
  407a8e:	and    al,0x29
  407a91:	xadd   BYTE PTR [edx+ebx*1+0x7e65fa],bh
	...
  407aa9:	add    BYTE PTR [eax],al
  407aab:	add    BYTE PTR [ebx-0x37],dl
  407aae:	adc    al,0x38
  407ab0:	dec    ecx
  407ab1:	fdivr  DWORD PTR [edx]
  407ab3:	cli    
  407ab4:	inc    eax
  407ab5:	fwait
  407ab6:	sub    DWORD PTR [ebp+0x76fe263d],esi
  407abc:	sub    al,0xed
  407abe:	jnp    0x407af1
  407ac0:	cs pop esp
  407ac2:	shl    bl,cl
  407ac4:	pop    ds
  407ac5:	daa    
  407ac6:	out    dx,al
  407ac7:	mov    BYTE PTR [eax],ch
  407ac9:	xor    bl,BYTE PTR [eax+0x4b]
  407acc:	inc    ecx
  407acd:	add    DWORD PTR [edx-0x73afc4f3],esp
  407ad3:	iret   
  407ad4:	xor    al,BYTE PTR [ebx-0x31d07f6a]
  407ada:	mov    al,0x42
  407adc:	ds mov ch,0x4a
  407adf:	add    al,0x3c
  407ae1:	(bad)  
  407ae2:	in     al,0xc5
  407ae4:	sub    eax,0x369a1f9f
  407ae9:	push   0x9
  407aeb:	pop    eax
  407aec:	aaa    
  407aed:	cwde   
  407aee:	jae    0x407b0e
  407af0:	xor    eax,0x34dcdd87
  407af5:	push   0xffffffc8
  407af7:	xchg   ebx,eax
  407af8:	xor    ebp,edx
  407afa:	pop    esi
  407afb:	push   ecx
  407afc:	cmp    BYTE PTR [esp+ebx*1+0x17],bh
  407b00:	xor    cl,BYTE PTR [ebx+0x31]
  407b03:	aad    0x3b
  407b05:	push   ss
  407b06:	aam    0xe2
  407b08:	dec    esp
  407b09:	sar    DWORD PTR [edx+0x20],0x1d
  407b0d:	lock jmp DWORD PTR [ebp+0x0]
	...
  407b21:	add    BYTE PTR [eax],al
  407b23:	add    BYTE PTR [edi],bl
  407b25:	fbld   TBYTE PTR ds:0x258f0ea4
  407b2b:	cmp    al,0x4e
  407b2d:	stc    
  407b2e:	xor    DWORD PTR [edx],edx
  407b30:	pushf  
  407b31:	clc    
  407b32:	cli    
  407b33:	addr16 (bad) 
  407b36:	ret    
  407b37:	mov    ebp,0x84e0fb10
  407b3c:	inc    esp
  407b3d:	lock int 0xaa
  407b40:	out    0xf1,al
  407b42:	(bad)  
  407b43:	push   eax
  407b44:	mov    al,ds:0x6bf727f3
  407b49:	repnz sub al,0xed
  407b4c:	and    ch,bh
  407b4e:	pop    ecx
  407b4f:	inc    ebx
  407b50:	iret   
  407b51:	out    dx,al
  407b52:	cmp    BYTE PTR [ecx-0x70941377],0x43
  407b59:	in     eax,dx
  407b5a:	sbb    BYTE PTR [ebx],dh
  407b5c:	icebp  
  407b5d:	loope  0x407ba4
  407b5f:	sbb    eax,0x5f76e3bb
  407b64:	jne    0x407b47
  407b66:	pop    edi
  407b67:	leave  
  407b68:	aaa    
  407b69:	loopne 0x407b5f
  407b6b:	(bad)  
  407b6d:	fsubr  st(1),st
  407b6f:	je     0x407b33
  407b71:	fmul   QWORD PTR [edx-0x4c2183fa]
  407b77:	and    BYTE PTR [esi],ch
  407b79:	fist   WORD PTR [eax-0x621c1c1f]
  407b7f:	dec    ebx
  407b80:	enter  0xeee9,0xad
  407b84:	push   es
  407b85:	call   0x411341
	...
  407b9a:	add    BYTE PTR [eax],al
  407b9c:	inc    esp
  407b9d:	jmp    0xe4bc053e
  407ba2:	imul   esp,DWORD PTR [ebx+0x55b2e4b1],0xefbbe6ef
  407bac:	sub    ah,dh
  407bae:	call   0x44d030b6
  407bb3:	pop    ds
  407bb4:	xor    eax,ebp
  407bb6:	jmp    DWORD PTR [ecx+0x7e]
  407bb9:	cdq    
  407bba:	stos   BYTE PTR es:[edi],al
  407bbb:	mov    edi,0x3e11dcdb
  407bc0:	sub    dh,BYTE PTR [edx+0x4606db8f]
  407bc6:	aaa    
  407bc7:	mov    ch,0xe3
  407bc9:	mov    edx,0x3e3e5025
  407bce:	popf   
  407bcf:	xchg   esi,eax
  407bd0:	dec    esi
  407bd1:	jecxz  0x407b97
  407bd3:	jae    0x407c50
  407bd5:	xchg   edi,eax
  407bd6:	jge    0x407be5
  407bd8:	push   ecx
  407bd9:	in     eax,0x6e
  407bdb:	call   0xa2180c83
  407be0:	mov    ds:0xee3c4a3d,eax
  407be5:	mov    ecx,0x46da1af2
  407bea:	loopne 0x407ba3
  407bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bed:	mov    dl,0x58
  407bef:	imul   cx,WORD PTR [eax-0x1419bcb0],0xffe7
  407bf7:	fld    QWORD PTR [ebx-0x80]
  407bfa:	cli    
  407bfb:	mov    eax,0x3141f41e
	...
  407c14:	imul   BYTE PTR [edx+0x4e734cdf]
  407c1a:	stos   BYTE PTR es:[di],al
  407c1c:	mov    esi,0x9bc775a1
  407c21:	push   ebp
  407c22:	int    0x79
  407c24:	xor    esp,0xffffff94
  407c27:	aam    0xce
  407c29:	sub    BYTE PTR ds:0x3eec18f2,0x4f
  407c30:	xchg   BYTE PTR [edi+0x56490e87],al
  407c36:	sbb    ch,BYTE PTR [ebx]
  407c38:	cmp    BYTE PTR [edx+0x4c9185a2],ah
  407c3e:	mov    al,0xa0
  407c40:	shr    BYTE PTR [ecx-0x534dfff8],0x32
  407c47:	mov    al,ds:0x188e5397
  407c4c:	jmp    0x3c4ab7d5
  407c51:	mov    eax,DWORD PTR [edi+0x4f23c5b2]
  407c57:	das    
  407c58:	pusha  
  407c59:	mov    ebx,0xdb3e97ec
  407c5e:	pop    eax
  407c5f:	test   ebx,ebx
  407c61:	adc    al,0xe5
  407c63:	cmp    eax,0x6586a41d
  407c68:	call   0xc71db658
  407c6d:	int3   
  407c6e:	(bad)  
  407c6f:	iret   
  407c70:	push   ebx
  407c71:	cmp    dh,BYTE PTR [edx]
  407c73:	ja     0x407bff
  407c75:	jnp    0x407c5b
  407c77:	jmp    0x0:0x0
	...
  407c8a:	add    BYTE PTR [eax],al
  407c8c:	jg     0x407d02
  407c8e:	pop    eax
  407c8f:	push   edx
  407c90:	adc    DWORD PTR [edx-0x13],ecx
  407c93:	inc    eax
  407c94:	hlt    
  407c95:	call   0xf02a:0xe32df851
  407c9c:	cwde   
  407c9d:	cld    
  407c9e:	xchg   esi,eax
  407c9f:	dec    eax
  407ca0:	mov    dh,0x1b
  407ca2:	and    DWORD PTR [edx+0x43],ebx
  407ca5:	rcr    DWORD PTR [esi+0x496cbae2],cl
  407cab:	jg     0x407cfc
  407cad:	xchg   ebx,eax
  407cae:	cmc    
  407caf:	(bad)  
  407cb0:	and    ebx,eax
  407cb2:	inc    eax
  407cb3:	aad    0xc4
  407cb5:	push   ecx
  407cb6:	cld    
  407cb7:	ins    DWORD PTR es:[edi],dx
  407cb8:	add    al,BYTE PTR [edx-0x61]
  407cbb:	xor    eax,0x8d23b487
  407cc0:	fld    DWORD PTR [ebx+0x5aec9f96]
  407cc6:	sub    ah,BYTE PTR [edi]
  407cc8:	mov    ch,0x62
  407cca:	std    
  407ccb:	mov    edx,0x2402bf0
  407cd0:	mov    ch,0xa8
  407cd2:	test   ah,dh
  407cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cd5:	cmp    eax,0x8c4d48ab
  407cda:	pop    esp
  407cdb:	adc    al,0x4e
  407cdd:	outs   dx,DWORD PTR ds:[esi]
  407cde:	cmc    
  407cdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ce0:	xchg   esi,eax
  407ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ce2:	xchg   ebx,eax
  407ce3:	sbb    eax,0xa1ac09a4
  407ce8:	sub    al,0x81
  407cea:	lds    esi,FWORD PTR [esi-0x57]
  407ced:	xor    eax,0xca6b
	...
  407d02:	add    BYTE PTR [eax],al
  407d04:	sbb    DWORD PTR [eax],ebx
  407d06:	cld    
  407d07:	jle    0x407d0c
  407d09:	stos   DWORD PTR es:[edi],eax
  407d0a:	and    eax,ebx
  407d0c:	mov    bl,0x8
  407d0e:	xor    esp,DWORD PTR [eax+0x1c0c5d93]
  407d14:	adc    eax,DWORD PTR [eax-0xcd65684]
  407d1a:	rcl    DWORD PTR ds:0xc29cb369,cl
  407d20:	in     al,0xd6
  407d22:	cmp    DWORD PTR [esi-0x64],0x2c
  407d26:	in     al,0xca
  407d28:	jle    0x407d7b
  407d2a:	dec    ebx
  407d2b:	ja     0x407d23
  407d2d:	sbb    BYTE PTR [ecx*1-0x4ed49202],al
  407d34:	data16 (bad) 
  407d36:	mov    ebp,0x63025404
  407d3b:	mov    eax,0x6f9b83fc
  407d40:	jns    0x407ce8
  407d42:	mov    ah,0xd3
  407d44:	leave  
  407d45:	cld    
  407d46:	push   edx
  407d47:	shl    WORD PTR [ecx],cl
  407d4a:	in     al,dx
  407d4b:	fldenv [ebx-0x25]
  407d4e:	fstp   TBYTE PTR [eax+0x5433ec3]
  407d54:	arpl   WORD PTR [esp+eiz*4-0x50],si
  407d58:	pop    ecx
  407d59:	(bad)  [ebx+0x38fb90c]
  407d5f:	je     0x407dcf
  407d61:	push   cs
  407d62:	pop    esi
  407d63:	fist   DWORD PTR [edx]
  407d65:	addr16 js 0x407d94
	...
  407d7c:	addr16 js 0x407d54
  407d7f:	adc    ecx,DWORD PTR [ebx]
  407d81:	add    edx,ebp
  407d83:	mov    edx,0x9447689b
  407d88:	dec    edi
  407d89:	adc    BYTE PTR [ecx-0xd],ah
  407d8c:	xchg   ebx,eax
  407d8d:	(bad)  
  407d8e:	mov    ebx,0x3d76464c
  407d93:	and    al,0xf9
  407d95:	fcmovnbe st,st(7)
  407d97:	or     cl,BYTE PTR [ebp-0x6d]
  407d9a:	mov    dh,0x5c
  407d9c:	lock test DWORD PTR [ebx-0x3d],edx
  407da0:	inc    esp
  407da1:	in     eax,dx
  407da2:	xchg   esp,eax
  407da3:	rol    DWORD PTR [edi+0x25],cl
  407da6:	jo     0x407e14
  407da8:	fcmovne st,st(5)
  407daa:	push   cs
  407dab:	sbb    edi,DWORD PTR [esi]
  407dad:	mov    ebx,0x33d233eb
  407db2:	mov    ds:0x3f9e053c,al
  407db7:	jecxz  0x407e37
  407db9:	push   esi
  407dba:	sbb    DWORD PTR [esp+edi*8+0x70aab447],eax
  407dc1:	mov    al,0x65
  407dc3:	fs mov dl,0xb8
  407dc6:	inc    eax
  407dc7:	retf   
  407dc8:	ss inc eax
  407dca:	ficomp WORD PTR [ebx]
  407dcc:	stos   DWORD PTR es:[edi],eax
  407dcd:	dec    esi
  407dce:	mov    ebx,0x32a62f02
  407dd3:	sti    
  407dd4:	jno    0x407e01
  407dd6:	dec    edi
  407dd7:	push   esp
  407dd8:	aam    0xc2
  407dda:	test   eax,0xc4d569b2
  407ddf:	mov    eax,DWORD PTR [eax]
	...
  407df1:	add    BYTE PTR [eax],al
  407df3:	add    ch,cl
  407df5:	sbb    al,0x7a
  407df7:	jnp    0x407e37
  407df9:	repnz (bad) 
  407dfb:	mov    ds:0xf10079e2,al
  407e00:	test   BYTE PTR ds:0x658e4c04,0xbc
  407e07:	or     eax,0x282138a6
  407e0c:	fnstcw WORD PTR [ecx+ebx*4-0x74cfa07a]
  407e13:	mov    ds:0x233c406,eax
  407e18:	out    dx,eax
  407e19:	enter  0x1fed,0x80
  407e1d:	sub    eax,0xbfa47955
  407e22:	inc    edi
  407e23:	xchg   esp,eax
  407e24:	test   eax,0x5815ff33
  407e29:	data16 (bad) 
  407e2b:	lock cld 
  407e2d:	or     bl,dl
  407e2f:	mov    fs,WORD PTR [ecx]
  407e31:	pop    esi
  407e32:	enter  0x346b,0x12
  407e36:	jo     0x407dd5
  407e38:	inc    esp
  407e39:	xor    eax,0xc1593828
  407e3e:	nop
  407e3f:	push   ss
  407e40:	jg     0x407e6d
  407e42:	xor    BYTE PTR [ebx+0x6a3abb21],0x11
  407e49:	adc    ah,BYTE PTR [edi+0x1f5ed447]
  407e4f:	loope  0x407e4a
  407e51:	or     DWORD PTR ds:0xb5658cbc,ecx
  407e57:	lea    eax,[eax]
	...
  407e69:	add    BYTE PTR [eax],al
  407e6b:	add    BYTE PTR [ecx],bl
  407e6d:	sar    BYTE PTR [ebp+0x5243c28],1
  407e73:	push   es
  407e74:	add    al,bl
  407e76:	pop    ss
  407e77:	mov    ds:0x1aaf1c74,eax
  407e7c:	mov    WORD PTR [ebp+0x32],gs
  407e7f:	ja     0x407e22
  407e81:	add    DWORD PTR [edx-0x6789bb6f],ecx
  407e87:	in     al,dx
  407e88:	jmp    0x67409e87
  407e8d:	jecxz  0x407e82
  407e8f:	js     0x407f0b
  407e91:	mov    al,0x48
  407e93:	ror    ah,0x8b
  407e96:	std    
  407e97:	shl    cl,cl
  407e99:	js     0x407edc
  407e9b:	push   0xffffffb8
  407e9d:	mov    ebp,0x3715f796
  407ea2:	sub    DWORD PTR [edi+0x3],ecx
  407ea5:	push   es
  407ea6:	lahf   
  407ea7:	pop    ebp
  407ea8:	pop    esi
  407ea9:	fisub  WORD PTR [edx]
  407eab:	in     eax,0x61
  407ead:	xchg   ebp,eax
  407eae:	imul   ecx,DWORD PTR [ebp-0x4],0x5d
  407eb2:	xlat   BYTE PTR ds:[ebx]
  407eb3:	cmc    
  407eb4:	fidivr DWORD PTR [esi]
  407eb6:	(bad)  
  407eb7:	out    0x77,eax
  407eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407eba:	ficomp WORD PTR [edi-0x72]
  407ebd:	or     eax,0x563c209
  407ec2:	mov    ch,0x7a
  407ec4:	add    eax,0xe86800d5
  407ec9:	cs mov ebx,0xde1e46d0
  407ecf:	mov    BYTE PTR [eax],al
	...
  407ee1:	add    BYTE PTR [eax],al
  407ee3:	add    BYTE PTR [ebx-0x52cf9c3b],bl
  407ee9:	not    ch
  407eeb:	and    dl,BYTE PTR [eax]
  407eed:	add    BYTE PTR [edx-0x66],ch
  407ef0:	pop    ecx
  407ef1:	mov    ch,0xbd
  407ef3:	pop    es
  407ef4:	je     0x407f44
  407ef6:	add    DWORD PTR [edi-0x524b925e],edi
  407efc:	aas    
  407efd:	and    eax,0xcd561507
  407f02:	jb     0x407f21
  407f04:	stos   DWORD PTR es:[edi],eax
  407f05:	inc    esi
  407f06:	int    0xa5
  407f08:	std    
  407f09:	pop    ss
  407f0a:	jnp    0x407ec3
  407f0c:	and    ch,ch
  407f0e:	(bad)  
  407f0f:	jns    0x64d28f6b
  407f15:	popf   
  407f16:	lods   al,BYTE PTR ds:[esi]
  407f17:	sub    dh,BYTE PTR [ebp+0x7d1911f2]
  407f1d:	push   ebp
  407f1e:	cmp    DWORD PTR [ebp-0x39d65bcb],esp
  407f24:	lea    eax,[edi+0x2]
  407f27:	jp     0x407f3e
  407f29:	sbb    DWORD PTR [ecx-0x31],esp
  407f2c:	daa    
  407f2d:	mov    esi,0x957f73bb
  407f32:	mov    bl,0xa4
  407f34:	loop   0x407f9f
  407f36:	call   0x78ac:0xea109218
  407f3d:	add    edx,DWORD PTR [ecx+0x11]
  407f40:	clc    
  407f41:	xor    BYTE PTR [ecx+0x7bd5e34d],ah
  407f47:	icebp  
	...
  407f5c:	jae    0x407f0a
  407f5e:	jmp    0x428ff8a6
  407f63:	clc    
  407f64:	fldenv [edi+0x2b]
  407f67:	das    
  407f68:	dec    esp
  407f69:	cmp    edx,DWORD PTR [ecx]
  407f6b:	xchg   ebx,eax
  407f6c:	hlt    
  407f6d:	fdiv   QWORD PTR [ecx+0x26]
  407f70:	out    0xd1,al
  407f72:	fstp   DWORD PTR [edx-0x636ffe2]
  407f78:	data16 mov bl,0x62
  407f7b:	inc    ebp
  407f7c:	scas   al,BYTE PTR es:[edi]
  407f7d:	xchg   esp,eax
  407f7e:	add    dh,al
  407f80:	mov    esp,0x544c1a29
  407f85:	jmp    0xce0a1adb
  407f8a:	stc    
  407f8b:	cmp    DWORD PTR es:[ebx+ecx*4-0x4f18dc6e],eax
  407f93:	mov    cs:0x93546aaf,eax
  407f99:	(bad)  
  407f9b:	call   0x5d72c4e3
  407fa0:	sub    edx,ebx
  407fa2:	sbb    cl,ah
  407fa4:	mov    DWORD PTR [edi-0x97f1ec9],ecx
  407faa:	push   ecx
  407fab:	cmp    ch,BYTE PTR [edi]
  407fad:	jg     0x407f5b
  407faf:	test   eax,0x82c98c7a
  407fb4:	ss in  al,0x7e
  407fb7:	xchg   edx,eax
  407fb8:	xchg   ebp,eax
  407fb9:	sub    al,0xda
  407fbb:	mov    ecx,0x49f4c501
	...
  407fd4:	mov    esi,ss
  407fd6:	push   ecx
  407fd7:	icebp  
  407fd8:	jmp    0x374687fb
  407fdd:	mov    bl,0x25
  407fdf:	and    eax,0xbe833bc3
  407fe4:	cs dec ecx
  407fe6:	sahf   
  407fe7:	pop    ebp
  407fe8:	stos   BYTE PTR es:[edi],al
  407fe9:	mov    eax,ds:0x39ea4501
  407fee:	sbb    al,0xe6
  407ff0:	ja     0x407fa3
  407ff2:	jp     0x408071
  407ff4:	jecxz  0x407f99
  407ff6:	xchg   edi,eax
  407ff7:	sahf   
  407ff8:	jg     0x408045
  407ffa:	push   ss
  407ffb:	(bad)  
  407ffc:	test   al,0xc6
  407ffe:	repz je 0x408015
  408001:	lea    ecx,cs:[esi]
  408004:	mov    eax,ds:0x5d2d681c
  408009:	aam    0x9e
  40800b:	sbb    eax,0xfe3b7bfe
  408010:	stos   DWORD PTR es:[edi],eax
  408011:	hlt    
  408012:	adc    al,0x65
  408014:	mul    ebp
  408016:	scas   eax,DWORD PTR es:[edi]
  408017:	lds    edx,FWORD PTR [ebx+0x5cae698e]
  40801d:	add    eax,DWORD PTR [ebp+ecx*4-0x58]
  408021:	imul   esp,edx,0xfffffff5
  408024:	sbb    bl,BYTE PTR [ecx-0x41]
  408027:	push   esp
  408028:	rcl    DWORD PTR [ecx],1
  40802a:	mov    ss,WORD PTR [esi]
  40802c:	push   ebx
  40802d:	or     DWORD PTR [ebx],ebp
  40802f:	xor    eax,0x50060ff
  408034:	jmp    0x407fe5
  408036:	sub    al,0xa0
	...
  40804c:	popa   
  40804d:	cmp    al,0x94
  40804f:	sbb    DWORD PTR [eax],esi
  408051:	mov    ecx,DWORD PTR [ecx]
  408053:	je     0x408070
  408055:	out    0xb0,eax
  408057:	xchg   edx,eax
  408058:	jns    0x407fec
  40805a:	mov    ds:0x1ae090ef,eax
  40805f:	mov    cl,0x98
  408061:	inc    ecx
  408062:	inc    ebx
  408063:	int3   
  408064:	icebp  
  408065:	lods   eax,DWORD PTR ds:[esi]
  408066:	sti    
  408067:	sub    ah,BYTE PTR [ebx+0x3b]
  40806a:	jmp    0x51f7a8b6
  40806f:	push   es
  408070:	call   0x43a44c54
  408075:	mov    WORD PTR [ebp+edi*2-0x2f],?
  408079:	fsub   DWORD PTR [ebp-0x28]
  40807c:	mov    eax,0xb6e9de94
  408081:	pop    DWORD PTR [eax]
  408083:	ss mov edx,0x58c7965f
  408089:	mov    al,0x2c
  40808b:	push   eax
  40808c:	push   ecx
  40808d:	sar    BYTE PTR [edx+0x195395ee],0x19
  408094:	lahf   
  408095:	and    ecx,DWORD PTR [edi+0x34f49780]
  40809b:	outs   dx,DWORD PTR ds:[esi]
  40809c:	fiadd  DWORD PTR [ebx+eiz*4]
  40809f:	idiv   edi
  4080a1:	pop    es
  4080a2:	xor    al,BYTE PTR [eax]
  4080a4:	add    eax,0xfd89a3d8
  4080a9:	sub    BYTE PTR [esi],bl
  4080ab:	push   esi
  4080ac:	in     al,0x38
  4080ae:	mov    al,dh
	...
  4080c4:	or     bl,0x2b
  4080c7:	fisttp WORD PTR [ecx-0x71b14265]
  4080cd:	ins    BYTE PTR es:[edi],dx
  4080ce:	pop    es
  4080cf:	jns    0x408134
  4080d1:	jl     0x408064
  4080d3:	add    cl,dl
  4080d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080d6:	adc    BYTE PTR [esi+eax*1-0x5d],ah
  4080da:	and    dl,dh
  4080dc:	lahf   
  4080dd:	stos   DWORD PTR es:[edi],eax
  4080de:	jno    0x408128
  4080e0:	pop    eax
  4080e1:	lods   al,BYTE PTR ds:[esi]
  4080e2:	inc    ecx
  4080e3:	fidiv  WORD PTR [esi+0x317dd449]
  4080e9:	inc    eax
  4080ea:	in     al,0xeb
  4080ec:	cwde   
  4080ed:	inc    esi
  4080ee:	mov    ch,0x51
  4080f0:	pop    ds
  4080f1:	inc    edx
  4080f2:	test   edi,eax
  4080f4:	(bad)  
  4080f5:	jle    0x40808f
  4080f7:	push   esi
  4080f8:	cmp    BYTE PTR [ecx-0x58],bh
  4080fb:	shl    BYTE PTR [ecx+0x167af96f],0x68
  408102:	leave  
  408103:	in     al,dx
  408104:	mov    BYTE PTR [ecx-0x6a10b0a4],dl
  40810a:	ins    BYTE PTR es:[edi],dx
  40810b:	fldenv [esi+0x1c]
  40810e:	cmp    al,0x63
  408110:	adc    DWORD PTR [esp+ecx*1],ebx
  408113:	cmc    
  408114:	mov    bh,0x7d
  408116:	and    al,cl
  408118:	nop
  408119:	jp     0x40812b
  40811b:	pop    esi
  40811c:	cmp    DWORD PTR [ebx+0x41],esi
  40811f:	in     al,0x3e
  408121:	je     0x408194
  408123:	jb     0x408175
  408125:	(bad)  
  408126:	in     al,0xd1
	...
  40813c:	xchg   DWORD PTR [edi+0x1dfe47d4],eax
  408142:	test   ch,bh
  408144:	jns    0x40815f
  408146:	mov    ah,0x6b
  408148:	imul   esp,DWORD PTR [ebp-0x5e310558],0xa8476c98
  408152:	leave  
  408153:	(bad)  
  408154:	rcr    BYTE PTR [edi+0x4bae40f9],1
  40815a:	ins    BYTE PTR es:[edi],dx
  40815b:	jecxz  0x4081b6
  40815d:	dec    ebx
  40815e:	pop    esp
  40815f:	jne    0x408116
  408161:	fs (bad) 
  408163:	or     eax,0x3dd31102
  408168:	mov    WORD PTR [esi-0x8eecf35],cs
  40816e:	int3   
  40816f:	add    BYTE PTR [edi+0x3551d570],bl
  408175:	lods   eax,DWORD PTR ds:[esi]
  408176:	aam    0x61
  408178:	mov    ds:0x8f47747,eax
  40817d:	out    0x6f,al
  40817f:	les    edx,FWORD PTR [esi+0x4c956a75]
  408185:	mov    edi,0x3ebaa56f
  40818a:	add    DWORD PTR [eax-0x77fa01bd],edi
  408190:	lods   eax,DWORD PTR ds:[esi]
  408191:	ins    BYTE PTR es:[edi],dx
  408192:	add    cl,bl
  408194:	inc    edi
  408195:	pop    eax
  408196:	stc    
  408197:	call   0x7c5e076d
  40819c:	cmp    cl,bh
  40819e:	sbb    al,0x4c
	...
  4081b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081b5:	out    0x21,eax
  4081b7:	sbb    eax,0x2d25051e
  4081bc:	test   al,0x5c
  4081be:	rol    BYTE PTR [ecx+0x45],1
  4081c1:	sub    al,cl
  4081c3:	jno    0x408178
  4081c5:	mov    esi,0xde1120d1
  4081ca:	aad    0x10
  4081cc:	lahf   
  4081cd:	ja     0x408242
  4081cf:	test   DWORD PTR [esi*1-0x5a654a8b],ebp
  4081d6:	ins    BYTE PTR es:[edi],dx
  4081d7:	in     al,0x58
  4081d9:	packssdw mm2,mm4
  4081dc:	out    0x8e,al
  4081de:	add    eax,0x32e57c9
  4081e3:	stc    
  4081e4:	loope  0x4081a2
  4081e6:	cli    
  4081e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081e8:	inc    ebx
  4081e9:	or     ch,bh
  4081eb:	xchg   edi,eax
  4081ec:	lods   eax,DWORD PTR ds:[esi]
  4081ed:	(bad)  
  4081ee:	out    0x19,al
  4081f0:	mov    al,0xd8
  4081f2:	lock push ds
  4081f4:	mov    eax,0x6127786a
  4081f9:	add    al,0x47
  4081fb:	and    BYTE PTR [ecx-0x7be72d72],cl
  408201:	and    ebx,ebp
  408203:	pop    ds
  408204:	push   esp
  408205:	mov    cl,0x6c
  408207:	test   DWORD PTR es:[edi],esi
  40820a:	cmp    esp,DWORD PTR [ecx]
  40820c:	mov    ch,0xcd
  40820e:	xchg   ebp,eax
  40820f:	add    eax,0x3022b28
  408214:	adc    BYTE PTR [ecx+0xfb6b],bl
	...
  40822a:	add    BYTE PTR [eax],al
  40822c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40822d:	dec    esi
  40822e:	adc    al,0xfc
  408230:	jbe    0x4081f6
  408232:	mov    WORD PTR [ebx+0x7c],?
  408235:	push   ebp
  408236:	(bad)  [esp+ecx*4-0x41]
  40823a:	bound  ebp,QWORD PTR [ebp+0x4d]
  40823d:	sub    ebp,ebp
  40823f:	imul   edi,DWORD PTR ds:0xa0c94b9b,0xc8cdf43c
  408249:	(bad)  
  40824a:	xlat   BYTE PTR gs:[ebx]
  40824c:	icebp  
  40824d:	and    dl,dl
  40824f:	sar    cl,1
  408251:	mov    dl,0x34
  408253:	jbe    0x408229
  408255:	mov    bh,0x3
  408257:	jno    0x40825d
  408259:	dec    esi
  40825a:	mov    ch,BYTE PTR [eax-0x4b]
  40825d:	mov    ds:0x31856f95,eax
  408262:	xor    ecx,ebx
  408264:	sbb    dh,cl
  408266:	fmul   st(3),st
  408268:	and    BYTE PTR [ebp+ecx*2-0x2b],al
  40826c:	stc    
  40826d:	test   eax,0x1821d2ba
  408272:	sub    bl,BYTE PTR ds:0x19b5a90c
  408278:	cld    
  408279:	sbb    al,BYTE PTR [eax]
  40827b:	inc    esp
  40827c:	(bad)  
  40827d:	pop    es
  40827e:	inc    esi
  40827f:	xchg   ebx,eax
  408280:	rcl    edi,1
  408282:	iret   
  408283:	lods   eax,DWORD PTR ds:[esi]
  408284:	add    ch,BYTE PTR [ebx+0x73]
  408287:	sbb    dh,BYTE PTR [edx-0xc7c1a86]
  40828d:	(bad)  
  40828e:	pop    edi
  40828f:	sub    al,0x0
	...
  4082a1:	add    BYTE PTR [eax],al
  4082a3:	add    ah,ch
  4082a5:	xchg   edi,eax
  4082a6:	leave  
  4082a7:	cdq    
  4082a8:	mov    ch,0x9e
  4082aa:	cmp    al,0x6
  4082ac:	mov    bl,0xce
  4082ae:	stos   BYTE PTR es:[edi],al
  4082af:	ja     0x408283
  4082b1:	mov    edx,DWORD PTR [eax]
  4082b3:	and    ch,cl
  4082b5:	jnp    0x40823d
  4082b7:	mov    esi,0xc924e29e
  4082bc:	lahf   
  4082bd:	adc    dh,BYTE PTR [ebx+0x943d750]
  4082c3:	pop    ds
  4082c4:	shl    BYTE PTR [ebx],1
  4082c6:	lahf   
  4082c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082c8:	ins    BYTE PTR es:[edi],dx
  4082c9:	sbb    DWORD PTR [esi],ecx
  4082cb:	shr    BYTE PTR [ecx+0x49],1
  4082ce:	cwde   
  4082cf:	cmp    DWORD PTR [ecx-0x8],ebp
  4082d2:	and    DWORD PTR [esi],esp
  4082d4:	callw  0xc38b
  4082d8:	or     bl,BYTE PTR [ebp+0x17]
  4082db:	syscall 
  4082dd:	lea    eax,[ecx+0x3bbbdd9e]
  4082e3:	test   eax,0xd4adabd8
  4082e8:	into   
  4082e9:	push   cs
  4082ea:	and    BYTE PTR [ebx-0x31],ah
  4082ed:	fidiv  WORD PTR [ebp+0xc2dc4ea]
  4082f3:	xor    eax,0x939a3dc0
  4082f8:	sar    DWORD PTR gs:[ecx],cl
  4082fb:	jl     0x40835d
  4082fd:	mov    ds:0x7203edaf,eax
  408302:	adc    eax,0x8381fd1a
	...
  40831b:	add    BYTE PTR [edi],ch
  40831d:	jb     0x40832a
  40831f:	adc    al,BYTE PTR [eax+0x19843b7a]
  408325:	js     0x408391
  408327:	ds push es
  408329:	jge    0x408385
  40832b:	test   al,0x70
  40832d:	sbb    dh,cl
  40832f:	or     edi,DWORD PTR [edi+0x1b]
  408332:	(bad)  
  408333:	popf   
  408334:	(bad)  
  408335:	mov    gs,WORD PTR [esi-0x617206d9]
  40833b:	mov    cl,0x9c
  40833d:	adc    eax,0x16534492
  408342:	mov    ds:0xf293ead2,al
  408347:	push   0xfec290f5
  40834c:	mov    ds:0x4c5d5774,eax
  408351:	outs   dx,DWORD PTR ds:[esi]
  408352:	addr16 retf 
  408354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408355:	xor    BYTE PTR [esi],0x71
  408358:	sub    bh,BYTE PTR [edx+0x6]
  40835b:	out    0xba,eax
  40835d:	dec    edx
  40835e:	sbb    esi,DWORD PTR [esi+0x25]
  408361:	inc    edx
  408362:	sub    esp,eax
  408364:	ins    BYTE PTR es:[edi],dx
  408365:	dec    esp
  408366:	jp     0x4083c2
  408368:	xor    eax,DWORD PTR [edi+0x4a]
  40836b:	int3   
  40836c:	xchg   ebp,eax
  40836d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40836e:	fild   QWORD PTR [edi+0xa]
  408371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408372:	out    dx,eax
  408373:	stc    
  408374:	jae    0x408315
  408376:	mov    esi,0x8ea3fc43
  40837b:	aad    0x42
  40837d:	cmp    eax,0xe8a3
	...
  408392:	add    BYTE PTR [eax],al
  408394:	sub    eax,0x447e933e
  408399:	inc    esi
  40839a:	ret    0xabc4
  40839d:	dec    eax
  40839e:	repnz push edx
  4083a0:	std    
  4083a1:	stos   DWORD PTR es:[edi],eax
  4083a2:	addr16 icebp 
  4083a4:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083a6:	push   edi
  4083a7:	addr16 mov ch,0x41
  4083aa:	outs   dx,BYTE PTR ds:[esi]
  4083ab:	push   es
  4083ac:	or     BYTE PTR [eax+0x76],dh
  4083af:	outs   dx,BYTE PTR ss:[esi]
  4083b1:	lock imul BYTE PTR [edx]
  4083b4:	dec    eax
  4083b6:	(bad)  
  4083b7:	sbb    al,BYTE PTR [ecx+0x34a03da]
  4083bd:	add    BYTE PTR [bp+si-0x6b],bh
  4083c1:	shl    DWORD PTR [edi+ebp*8],1
  4083c4:	idiv   bh
  4083c6:	and    bh,bl
  4083c8:	mov    BYTE PTR [edi+0x1a],dh
  4083cb:	mov    ds,edx
  4083cd:	icebp  
  4083ce:	sbb    DWORD PTR [esi-0x4cdca2a4],edi
  4083d4:	sub    DWORD PTR [edx+eiz*1+0x198baf83],ebx
  4083db:	rcl    BYTE PTR ds:0x8be21af6,cl
  4083e1:	fs clc 
  4083e3:	jbe    0x408405
  4083e5:	lods   eax,DWORD PTR ds:[esi]
  4083e6:	std    
  4083e7:	inc    esi
  4083e8:	mov    dh,0x44
  4083ea:	add    eax,0xfde46c16
  4083ef:	and    eax,0x3b6e6bd2
  4083f4:	pop    ebx
  4083f5:	push   ebp
  4083f6:	or     eax,DWORD PTR [bx+si]
	...
  408409:	add    BYTE PTR [eax],al
  40840b:	add    ch,bl
  40840d:	dec    ebp
  40840e:	outs   dx,DWORD PTR ds:[esi]
  40840f:	pop    edx
  408410:	daa    
  408411:	or     esi,DWORD PTR [edx+ebp*2-0x47]
  408415:	in     al,0xcf
  408417:	call   DWORD PTR [edx+0x4]
  40841a:	ror    edi,cl
  40841c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40841d:	xchg   edx,eax
  40841e:	retf   
  40841f:	sahf   
  408420:	ds pop esi
  408422:	retf   0xc0ae
  408425:	lods   eax,DWORD PTR ds:[esi]
  408426:	pop    ds
  408427:	ret    0x4b25
  40842a:	and    al,0xf2
  40842c:	fwait
  40842d:	pop    ebx
  40842e:	push   ds
  40842f:	mov    ds:0x93162529,eax
  408434:	scas   eax,DWORD PTR es:[edi]
  408435:	pop    DWORD PTR [ebp-0x6e194f06]
  40843b:	stc    
  40843c:	call   0x92419f99
  408441:	adc    ah,ah
  408443:	add    ecx,DWORD PTR [edx+0x6f685c7c]
  408449:	or     eax,0x838f6b8b
  40844e:	bnd jb 0x40842f
  408451:	jmp    0x57def632
  408456:	jnp    0x40842d
  408458:	sub    esi,ebp
  40845a:	inc    ebx
  40845b:	into   
  40845c:	xor    ecx,DWORD PTR [ebx-0x1f25382b]
  408462:	loope  0x408430
  408464:	add    ch,BYTE PTR [edi+0x6f]
  408467:	aam    0x7
  408469:	inc    esp
  40846a:	cmp    bh,cl
  40846c:	xlat   BYTE PTR ds:[ebx]
  40846d:	int    0xc1
  40846f:	mov    BYTE PTR [eax],0x0
	...
  408482:	add    BYTE PTR [eax],al
  408484:	push   es
  408485:	sbb    dh,cl
  408487:	int    0x36
  408489:	stos   BYTE PTR es:[edi],al
  40848a:	push   0x174aa369
  40848f:	push   0xffffffdb
  408491:	mov    ah,0x86
  408493:	jae    0x4084b7
  408495:	das    
  408496:	icebp  
  408497:	jo     0x408493
  408499:	mov    al,ds:0x31fcfb71
  40849e:	(bad)  
  40849f:	neg    DWORD PTR [eax+eiz*4]
  4084a2:	pop    DWORD PTR [ecx]
  4084a4:	into   
  4084a5:	inc    ebp
  4084a6:	fadd   DWORD PTR [edx]
  4084a8:	scas   al,BYTE PTR es:[edi]
  4084a9:	mov    ebx,0x181b2176
  4084ae:	loope  0x4084d2
  4084b0:	and    esp,DWORD PTR [esi+0x3c6a1b48]
  4084b6:	not    DWORD PTR [edi]
  4084b8:	jb     0x40848c
  4084ba:	mov    edx,edi
  4084bc:	push   esp
  4084bd:	xchg   edi,eax
  4084be:	xchg   esi,eax
  4084bf:	stc    
  4084c0:	sub    DWORD PTR fs:[eax],eax
  4084c3:	daa    
  4084c4:	mov    ch,0xc
  4084c6:	push   esp
  4084c7:	lock mov bh,0xdc
  4084ca:	ror    DWORD PTR [esi-0x66],0x71
  4084ce:	popa   
  4084cf:	mov    ecx,0x20f781d9
  4084d4:	enter  0x4dd0,0xcf
  4084d8:	enter  0xdba0,0x57
  4084dc:	add    BYTE PTR [ebp-0x4afc5fb6],ah
  4084e2:	fsubr  QWORD PTR [ecx]
  4084e4:	repnz and DWORD PTR [esi-0x4a],0x0
	...
  4084f9:	add    BYTE PTR [eax],al
  4084fb:	add    dh,ch
  4084fd:	push   ebx
  4084fe:	lock nop
  408500:	(bad)  
  408501:	jmp    0xf99ec458
  408506:	les    ebp,FWORD PTR [esi+0x197f4864]
  40850c:	fs sbb cl,ch
  40850f:	test   BYTE PTR [ebp+ebx*1+0x1c],cl
  408513:	xor    ebx,DWORD PTR [edi+0x4d]
  408516:	mov    bl,BYTE PTR [edx+0x52ffc47]
  40851c:	inc    ebp
  40851d:	in     al,dx
  40851e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40851f:	arpl   cx,sp
  408521:	pusha  
  408522:	add    eax,0x938e822c
  408527:	mov    ebp,0xca29bf70
  40852c:	jno    0x4084dd
  40852e:	mov    edi,0x2e99bb3a
  408533:	and    eax,0x94b8c9d8
  408538:	scas   al,BYTE PTR es:[edi]
  408539:	jp     0x40853d
  40853b:	ret    
  40853c:	stos   DWORD PTR es:[edi],eax
  40853d:	push   0xffffff94
  40853f:	popf   
  408540:	jg     0x408517
  408542:	ss stos BYTE PTR es:[edi],al
  408544:	push   0x5
  408546:	mov    eax,ds:0x1b36b433
  40854b:	cld    
  40854c:	mov    ah,0x26
  40854e:	lea    eax,[eax]
  408550:	dec    esp
  408551:	xchg   ebx,eax
  408552:	add    BYTE PTR [eax],al
  408554:	push   ebp
  408555:	mov    dh,BYTE PTR [ecx]
  408557:	inc    ecx
  408558:	dec    esi
  408559:	and    eax,0x38b78261
  40855e:	push   edx
  40855f:	ret    
	...
  408574:	test   al,0x77
  408576:	lds    eax,FWORD PTR [ecx+edx*8]
  408579:	data16 hlt 
  40857b:	inc    ebp
  40857c:	jmp    0x96cc:0xc386a7c9
  408583:	(bad)  
  408584:	fs inc esp
  408586:	mov    cl,BYTE PTR [eax]
  408588:	sub    eax,0x8649bb51
  40858d:	std    
  40858e:	out    0x8a,eax
  408590:	das    
  408591:	out    0xd8,eax
  408593:	retf   
  408594:	and    BYTE PTR [eax-0x42b6f3b1],ah
  40859a:	jle    0x4085e9
  40859c:	bound  edx,QWORD PTR [ecx]
  40859e:	sub    eax,0x1c0a5b8e
  4085a3:	iret   
  4085a4:	es push ecx
  4085a6:	adc    dl,BYTE PTR [ecx+0x2f]
  4085a9:	inc    esp
  4085aa:	and    edx,DWORD PTR [eax]
  4085ac:	add    al,0xe7
  4085ae:	outs   dx,DWORD PTR ds:[esi]
  4085af:	shr    ebp,cl
  4085b1:	std    
  4085b2:	inc    eax
  4085b3:	xchg   edx,eax
  4085b4:	loop   0x408572
  4085b6:	xlat   BYTE PTR ds:[ebx]
  4085b7:	push   ebp
  4085b8:	mov    ebx,DWORD PTR [edi+0xaa014e6]
  4085be:	mov    ch,0xd7
  4085c0:	cdq    
  4085c1:	adc    DWORD PTR [esi+edx*4+0x59988a0e],eax
  4085c8:	pop    ss
  4085c9:	xchg   ebx,eax
  4085ca:	test   eax,0xf937cc18
  4085cf:	fcomi  st,st(5)
  4085d1:	and    al,0xca
  4085d3:	call   0x0:0x5d5d646a
	...
  4085ea:	add    BYTE PTR [eax],al
  4085ec:	xchg   ebx,eax
  4085ed:	ja     0x40865b
  4085ef:	sbb    al,0xb5
  4085f1:	aam    0x42
  4085f3:	aas    
  4085f4:	xor    bl,0x49
  4085f7:	push   cs
  4085f8:	cmp    esi,DWORD PTR [ebx-0x5be8db80]
  4085fe:	test   DWORD PTR ds:0x46720556,edx
  408604:	xchg   ebp,eax
  408605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408606:	pop    ebx
  408607:	ja     0x4085dd
  408609:	neg    DWORD PTR [ebx-0x4effa41f]
  40860f:	rcl    BYTE PTR [edx],1
  408611:	jmp    0xe31a09db
  408616:	mov    esi,0x476b90b2
  40861b:	scas   al,BYTE PTR es:[edi]
  40861c:	pop    edi
  40861d:	ins    BYTE PTR es:[edi],dx
  40861e:	ds lahf 
  408620:	push   ds
  408621:	lea    ebx,[ecx]
  408623:	int3   
  408624:	int    0x1e
  408626:	xor    edi,ebp
  408628:	mov    WORD PTR [edi-0xd],gs
  40862b:	push   0x23
  40862d:	mov    dl,bl
  40862f:	pop    ecx
  408630:	fidiv  DWORD PTR [eax]
  408632:	cld    
  408633:	or     BYTE PTR [ecx+0x4838071a],dl
  408639:	ins    DWORD PTR es:[edi],dx
  40863a:	ds ss (bad) 
  40863d:	ins    DWORD PTR es:[edi],dx
  40863e:	inc    edi
  40863f:	pop    es
  408640:	pop    es
  408641:	retf   
  408642:	xor    al,0x54
  408644:	inc    esp
  408645:	pop    esp
  408646:	sbb    DWORD PTR [ebp-0x7b],esp
  408649:	mov    cl,0xda
  40864b:	repnz stos BYTE PTR es:[edi],al
  40864d:	leave  
  40864e:	repz rol DWORD PTR [eax],0x0
	...
  408662:	add    BYTE PTR [eax],al
  408664:	arpl   WORD PTR [eax-0x68d76ef8],si
  40866a:	std    
  40866b:	lahf   
  40866c:	loope  0x4086a3
  40866e:	test   BYTE PTR [esi+ecx*4+0x4f8d7f25],bh
  408675:	inc    esp
  408676:	pop    edx
  408677:	fdivp  st(4),st
  408679:	loop   0x4086eb
  40867b:	out    dx,eax
  40867c:	mov    ebp,0xecb15a8f
  408681:	adc    al,0x53
  408683:	pushf  
  408684:	std    
  408685:	aad    0x27
  408687:	mov    edi,0xc63192be
  40868c:	(bad)  
  40868d:	push   ebx
  40868e:	mov    ecx,0xd08b022a
  408693:	and    ebx,ecx
  408695:	retf   
  408696:	stos   DWORD PTR es:[edi],eax
  408697:	xor    al,0x90
  408699:	or     al,0x92
  40869b:	dec    edi
  40869c:	cdq    
  40869d:	dec    ebp
  40869e:	jge    0x4086ae
  4086a0:	aas    
  4086a1:	(bad)  
  4086a2:	ins    BYTE PTR es:[edi],dx
  4086a3:	cmc    
  4086a4:	outs   dx,DWORD PTR ds:[esi]
  4086a5:	ror    BYTE PTR [edi-0x20],1
  4086a8:	sbb    dl,BYTE PTR [ecx]
  4086aa:	dec    esi
  4086ab:	jmp    0x4086aa
  4086ad:	push   ecx
  4086ae:	shl    DWORD PTR [ebx-0x8],0x82
  4086b2:	enter  0x168,0xc4
  4086b6:	jecxz  0x408645
  4086b8:	pop    edx
  4086b9:	add    eax,0x462376da
  4086be:	lds    esi,FWORD PTR [edi-0x335b794b]
  4086c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086c5:	mov    edi,0xa9
	...
  4086db:	add    BYTE PTR [edi+0x8],dl
  4086de:	(bad)  
  4086df:	mov    ds:0x68834986,al
  4086e4:	jo     0x4086a1
  4086e6:	mov    ah,BYTE PTR [ebx+0x59]
  4086e9:	jp     0x40874c
  4086eb:	jbe    0x40866f
  4086ed:	cmp    eax,0xfcab8d58
  4086f2:	inc    esi
  4086f3:	int3   
  4086f4:	dec    ebp
  4086f5:	mov    edi,0x7e5cb726
  4086fa:	add    eax,0x14419fa2
  4086ff:	test   eax,0x217b006e
  408704:	push   0xffffffb3
  408706:	xchg   edx,eax
  408707:	sub    dl,BYTE PTR [ebx-0xd56ff8e]
  40870d:	fcmovu st,st(5)
  40870f:	nop
  408710:	ror    DWORD PTR [ebx],0x9f
  408713:	inc    esp
  408715:	sbb    DWORD PTR [eax-0x12],0xd19716d
  40871c:	and    DWORD PTR [edx+ebx*8-0x6430adf4],0xa7a8144c
  408727:	cmp    eax,0x1ee6b91f
  40872c:	jb     0x4086b4
  40872e:	and    eax,0x6457011f
  408733:	call   0x1e36ce1
  408738:	cmp    esi,esp
  40873a:	loope  0x408716
  40873c:	pop    DWORD PTR [ebx+0x21]
  40873f:	ret    
	...
  408754:	jp     0x408768
  408756:	pusha  
  408757:	push   esp
  408758:	sbb    eax,0x1635af2f
  40875d:	inc    esp
  40875e:	out    dx,al
  40875f:	push   esi
  408760:	or     edx,DWORD PTR [ecx]
  408762:	sub    eax,0x6be1a867
  408767:	xor    BYTE PTR [ecx-0x5dc65495],al
  40876d:	jp     0x408759
  40876f:	push   edx
  408770:	xchg   edi,eax
  408771:	int    0x29
  408773:	dec    ebx
  408774:	mov    WORD PTR [eax+ebp*2-0x96929ea],ds
  40877b:	not    edx
  40877d:	retf   
  40877e:	mov    bh,0xd4
  408780:	mov    cl,0x78
  408782:	je     0x408769
  408784:	shl    BYTE PTR [ebp+0x35],0xb2
  408788:	jmp    0x40875d
  40878a:	icebp  
  40878b:	mov    ebx,0x90b304fe
  408790:	int    0x31
  408792:	jo     0x40871d
  408794:	aam    0x22
  408796:	xor    DWORD PTR [eax],eax
  408798:	ret    
  408799:	in     eax,0xf2
  40879b:	dec    BYTE PTR [edx-0x5e403e10]
  4087a1:	fist   DWORD PTR [eax-0x5fbd6784]
  4087a7:	cmp    eax,0xfa3604df
  4087ac:	ss pushf 
  4087ae:	pop    es
  4087af:	mov    ebx,0x7854b33d
  4087b4:	xor    al,0xa6
  4087b6:	cmp    DWORD PTR gs:[eax],eax
	...
  4087c9:	add    BYTE PTR [eax],al
  4087cb:	add    BYTE PTR [edi-0x41b467f6],dh
  4087d1:	xchg   ebx,eax
  4087d2:	test   eax,0xfab8550a
  4087d7:	leave  
  4087d8:	pop    esp
  4087d9:	mov    eax,ds:0xde7b88cb
  4087de:	pop    esp
  4087df:	dec    edi
  4087e0:	shl    bh,cl
  4087e2:	imul   ecx,DWORD PTR [esi],0xffffffb9
  4087e5:	aam    0x3e
  4087e7:	int    0xc0
  4087e9:	dec    ecx
  4087ea:	push   cs
  4087eb:	mov    WORD PTR [edi+0x26431254],cs
  4087f1:	int3   
  4087f2:	and    eax,DWORD PTR [edx]
  4087f4:	dec    ebp
  4087f5:	arpl   WORD PTR [eax-0x3f],si
  4087f8:	and    al,0x76
  4087fa:	inc    ecx
  4087fb:	xor    BYTE PTR [ebx+0x38],0xd6
  4087ff:	inc    edi
  408800:	pop    edx
  408801:	pop    ds
  408802:	in     eax,0x6
  408804:	xor    DWORD PTR [edi+0x1228c5b5],ecx
  40880a:	add    DWORD PTR [ebp+ecx*1-0x1be57534],0x54
  408812:	mov    ebx,0xe8760f5b
  408817:	cwde   
  408818:	es arpl cx,bx
  40881b:	fnstenv [ecx-0x67e1b1e1]
  408821:	cmp    BYTE PTR [ebp+0x5f],bh
  408824:	mov    ch,0x41
  408826:	(bad)  
  408827:	sub    al,0x39
  408829:	inc    edx
  40882a:	add    ebx,DWORD PTR [eax+esi*2]
  40882d:	iret   
  40882e:	jnp    0x408830
	...
  408844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408845:	enter  0x3186,0xe6
  408849:	lods   eax,DWORD PTR ds:[esi]
  40884a:	jno    0x4088ae
  40884c:	and    eax,0x845358b6
  408851:	dec    ebx
  408852:	cwde   
  408853:	(bad)
  408856:	mov    al,0xf4
  408858:	or     cl,BYTE PTR [edx-0x3a]
  40885b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40885c:	inc    ecx
  40885d:	cmp    bh,BYTE PTR [ebx+0x8fa6896]
  408863:	mov    esp,0x8d00995c
  408868:	or     eax,0xceddd3bc
  40886d:	stos   DWORD PTR es:[edi],eax
  40886e:	out    dx,al
  40886f:	out    dx,al
  408870:	(bad)  
  408872:	sub    al,0x79
  408874:	sbb    ch,dl
  408876:	adc    ecx,DWORD PTR [eax+0x51]
  408879:	add    BYTE PTR [edi],bh
  40887b:	sbb    ecx,DWORD PTR [edx-0x1cd5b5f9]
  408881:	add    dl,0x36
  408884:	adc    al,0x11
  408886:	mov    BYTE PTR [edi],0x55
  408889:	je     0x408837
  40888b:	push   esp
  40888c:	xchg   esi,eax
  40888d:	jae    0x408824
  40888f:	gs xchg edi,eax
  408891:	es push ebp
  408893:	repz ror BYTE PTR [ebx+ebp*2-0x7787e63e],1
  40889b:	xchg   ecx,eax
  40889c:	push   edx
  40889d:	pop    DWORD PTR [ecx-0x383b6460]
  4088a3:	scas   al,BYTE PTR es:[edi]
  4088a4:	or     eax,0x9fc253
	...
  4088b9:	add    BYTE PTR [eax],al
  4088bb:	add    BYTE PTR [ecx+esi*2+0x717fcc95],bh
  4088c2:	lods   al,BYTE PTR ds:[esi]
  4088c3:	std    
  4088c4:	cs nop
  4088c6:	imul   ebp,DWORD PTR [ebx+0x1e],0xff567fd4
  4088cd:	adc    bl,BYTE PTR [ebx-0x7f]
  4088d0:	lods   al,BYTE PTR ds:[esi]
  4088d1:	push   ecx
  4088d2:	inc    edx
  4088d3:	mov    ch,cl
  4088d5:	nop
  4088d6:	aad    0xff
  4088d8:	(bad)  
  4088d9:	fbstp  TBYTE PTR [ebx-0x28e157f8]
  4088df:	in     eax,dx
  4088e0:	lock pop ebp
  4088e2:	out    0xd2,al
  4088e4:	jmp    0x408882
  4088e6:	xor    DWORD PTR [esp+edx*2],edx
  4088e9:	fdiv   QWORD PTR [edi]
  4088eb:	sub    eax,0x4a531b85
  4088f0:	ss pop edx
  4088f2:	dec    edx
  4088f3:	aas    
  4088f4:	pop    es
  4088f5:	cdq    
  4088f6:	mov    dl,0x9d
  4088f8:	(bad)  
  4088fa:	fwait
  4088fb:	mov    ds:0xcfb0815b,al
  408900:	add    BYTE PTR [ecx+ecx*8-0x48],al
  408904:	cmp    DWORD PTR [ebx],eax
  408906:	push   esi
  408907:	jns    0x4088d0
  408909:	lds    edx,FWORD PTR [edi-0x72]
  40890c:	(bad)  
  40890d:	test   BYTE PTR [ebx+eiz*2-0x5b],dh
  408911:	inc    edi
  408912:	gs pop esp
  408914:	je     0x40891c
  408916:	jmp    0x8edb:0xe3c969e4
  40891d:	mov    BYTE PTR [eax+0xf6],bh
	...
  408933:	add    BYTE PTR [ebx-0x3cee3eb5],bh
  408939:	or     cl,dh
  40893b:	push   eax
  40893c:	dec    ebp
  40893d:	into   
  40893e:	fbstp  TBYTE PTR [edi]
  408940:	or     al,0x8d
  408942:	mov    esp,0x9d4fdf1a
  408947:	and    eax,0xdb680efe
  40894c:	icebp  
  40894d:	jo     0x4089b0
  40894f:	in     al,0xc6
  408951:	mov    cl,0x0
  408953:	jp     0x4088f9
  408955:	call   0xfaec0cf6
  40895a:	fisttp DWORD PTR [edx+eiz*8]
  40895d:	(bad)  
  40895e:	sbb    ebx,DWORD PTR ds:0x3e5a5f05
  408964:	shr    BYTE PTR [ebp-0x4350e067],1
  40896a:	fdiv   DWORD PTR [eax-0x66e83fa9]
  408970:	and    BYTE PTR [ecx+0x623d7256],dl
  408976:	xchg   ebp,eax
  408977:	mov    eax,DWORD PTR [edx+0x4414d473]
  40897d:	add    eax,0xd4eb1513
  408982:	push   ecx
  408983:	idiv   bh
  408985:	daa    
  408986:	xchg   ecx,eax
  408987:	out    0xd6,eax
  408989:	shl    BYTE PTR ss:[edi],1
  40898c:	stos   DWORD PTR es:[edi],eax
  40898d:	sbb    al,0xec
  40898f:	mov    WORD PTR es:[ebp-0x53],cs
  408993:	inc    ebp
  408994:	jmp    0x74f797
	...
  4089a9:	add    BYTE PTR [eax],al
  4089ab:	add    dh,ah
  4089ad:	out    dx,eax
  4089ae:	cs jecxz 0x4089d5
  4089b1:	pop    edx
  4089b2:	call   0xa9c93b81
  4089b7:	loope  0x4089cb
  4089b9:	mov    esp,0xaaf3f86a
  4089be:	sub    ebx,DWORD PTR [edi-0x6e]
  4089c1:	xchg   esi,eax
  4089c2:	in     al,0x6e
  4089c4:	xchg   ebp,eax
  4089c5:	(bad)  
  4089c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089c7:	dec    ebp
  4089c8:	xor    BYTE PTR [esi+eiz*2+0x2c],0x3f
  4089cd:	gs daa 
  4089cf:	pop    ebx
  4089d0:	(bad)  
  4089d1:	rcr    bh,cl
  4089d3:	push   edx
  4089d4:	sub    DWORD PTR [edx],eax
  4089d6:	mov    eax,ds:0x62311429
  4089db:	xor    BYTE PTR [ebx],bl
  4089dd:	and    BYTE PTR [ebx],ah
  4089df:	add    al,ch
  4089e1:	scas   eax,DWORD PTR es:[edi]
  4089e2:	loope  0x4089a1
  4089e4:	shr    DWORD PTR [eax+0x5aafcd0],1
  4089ea:	cmp    DWORD PTR [edi],0xffffffa3
  4089ed:	test   BYTE PTR [edx+0x24434c7e],dh
  4089f3:	mov    ecx,0xf814da45
  4089f8:	dec    esi
  4089f9:	xor    eax,0x30473b46
  4089fe:	ja     0x408a7a
  408a00:	sar    BYTE PTR [eax-0x52264a95],1
  408a06:	pop    edx
  408a07:	hlt    
  408a08:	mov    dl,0xc2
  408a0a:	or     DWORD PTR [edi],esi
  408a0c:	imul   ebx,DWORD PTR [ebx+0x38],0x76
	...
  408a24:	adc    al,0x9c
  408a26:	scas   al,BYTE PTR es:[edi]
  408a27:	mov    cl,0x2d
  408a29:	add    DWORD PTR [esi-0x35122910],ebx
  408a2f:	xor    ecx,edi
  408a31:	idiv   bl
  408a33:	jb     0x408a91
  408a35:	xchg   ebx,eax
  408a36:	add    BYTE PTR [eax],al
  408a38:	dec    ebp
  408a39:	shr    DWORD PTR [ecx+0x37],1
  408a3c:	dec    edi
  408a3d:	pop    ss
  408a3e:	aam    0x6e
  408a40:	push   ds
  408a41:	push   ebp
  408a42:	mov    esi,0xa89c1b59
  408a47:	fcomp  QWORD PTR [edx]
  408a49:	fcmovb st,st(1)
  408a4b:	jmp    0x408a55
  408a4d:	and    BYTE PTR [edx+esi*4+0x19],bh
  408a51:	pop    esi
  408a52:	push   ss
  408a53:	test   DWORD PTR [edx],eax
  408a55:	add    dl,BYTE PTR [eax-0x48]
  408a58:	adc    eax,DWORD PTR [ebx+edi*1-0x71]
  408a5c:	adc    DWORD PTR [esi-0x37ef297b],eax
  408a62:	out    dx,eax
  408a63:	loope  0x408a4a
  408a65:	or     al,bh
  408a67:	fs in  al,0x4a
  408a6a:	xchg   ebx,eax
  408a6b:	push   ebx
  408a6c:	mov    ch,0xf2
  408a6e:	jl     0x408a9d
  408a70:	mov    edi,0x88473ef1
  408a75:	hlt    
  408a76:	in     al,0xa2
  408a78:	inc    ebp
  408a79:	jmp    0x408a21
  408a7b:	leave  
  408a7c:	jb     0x408a63
  408a7e:	pusha  
  408a7f:	ja     0x408a54
  408a81:	fisub  WORD PTR [edx]
  408a83:	sbb    eax,0xaef91dc
	...
  408a9c:	push   ecx
  408a9d:	xchg   edx,eax
  408a9e:	mov    cl,0x61
  408aa0:	add    BYTE PTR ds:[edx-0x21],ch
  408aa4:	ja     0x408aa5
  408aa6:	sub    esi,DWORD PTR [ebp-0xe281580]
  408aac:	ins    DWORD PTR es:[edi],dx
  408aad:	jmp    0xe7bb2347
  408ab2:	push   ebx
  408ab3:	es sbb ebp,eax
  408ab6:	adc    DWORD PTR [esp+eax*2+0xb],ecx
  408aba:	fistp  WORD PTR [ecx-0x37]
  408abd:	add    al,0x9d
  408abf:	xor    BYTE PTR [esi-0x3071a4f2],dl
  408ac5:	add    eax,0x90f8e419
  408aca:	dec    edi
  408acb:	inc    esi
  408acc:	push   ebp
  408acd:	(bad)  
  408ace:	lea    ebp,[edx+eiz*2]
  408ad1:	add    edx,ecx
  408ad3:	xchg   edx,eax
  408ad4:	inc    ebx
  408ad5:	add    cl,BYTE PTR [eax]
  408ad7:	clc    
  408ad8:	ins    BYTE PTR es:[edi],dx
  408ad9:	cmc    
  408ada:	inc    esi
  408adb:	out    dx,al
  408adc:	loope  0x408acc
  408ade:	test   BYTE PTR [esi+ebp*4+0x673ac2e4],al
  408ae5:	fild   DWORD PTR [eax]
  408ae7:	push   eax
  408ae8:	nop
  408ae9:	dec    esi
  408aea:	cmp    eax,0x7f455d17
  408aef:	jge    0x408a7b
  408af1:	dec    ebx
  408af2:	mov    ecx,0xfb44abc3
  408af7:	test   al,0xb4
  408af9:	(bad)  
  408afa:	sbb    BYTE PTR ds:0x77191322,dh
	...
  408b14:	add    BYTE PTR [edx+0x1b],al
  408b17:	mov    cl,0x5e
  408b19:	stc    
  408b1a:	sbb    ebx,esi
  408b1c:	mov    ch,0xec
  408b1e:	or     al,0x29
  408b20:	fcomp  DWORD PTR [esi]
  408b22:	add    al,0x6b
  408b24:	sub    dh,BYTE PTR [esi]
  408b26:	push   cs
  408b27:	lods   eax,DWORD PTR ds:[esi]
  408b28:	in     al,0xd
  408b2a:	pop    es
  408b2b:	out    dx,eax
  408b2c:	pmovmskb ecx,mm1
  408b2f:	and    eax,esi
  408b31:	pop    ebx
  408b32:	retf   
  408b33:	arpl   dx,dx
  408b35:	mov    cl,cl
  408b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b38:	sub    al,0xb2
  408b3a:	enter  0x87e7,0xa3
  408b3e:	rcr    DWORD PTR [ebx],cl
  408b40:	dec    ecx
  408b41:	mov    eax,0xad5b59d2
  408b46:	rcr    BYTE PTR [edi-0x223eaa2b],0xbc
  408b4d:	jle    0x408b63
  408b4f:	adc    eax,ecx
  408b51:	add    ecx,DWORD PTR ds:0x6d0e351
  408b57:	xchg   edi,eax
  408b58:	jge    0x408b84
  408b5a:	(bad)  
  408b5b:	aam    0x14
  408b5d:	cmp    edi,DWORD PTR [ecx]
  408b5f:	jp     0x408b91
  408b61:	shl    BYTE PTR [edi],1
  408b63:	cmp    al,0x52
  408b65:	add    eax,0x3d8dfe3a
  408b6a:	cmp    eax,eax
  408b6c:	out    0x26,al
  408b6e:	push   ds
  408b6f:	jno    0x408b49
  408b71:	stos   DWORD PTR es:[edi],eax
  408b72:	pop    ss
  408b73:	xor    ebp,DWORD PTR [edx-0x48]
  408b76:	sbb    eax,0xf5
	...
  408b8b:	add    BYTE PTR ds:0x2eb71482,al
  408b91:	push   ebx
  408b92:	pop    es
  408b93:	mov    esp,ecx
  408b95:	xchg   esi,edi
  408b97:	dec    eax
  408b98:	inc    ebx
  408b99:	pop    ebp
  408b9a:	add    ah,dh
  408b9c:	ret    
  408b9d:	xchg   edi,eax
  408b9e:	push   ss
  408b9f:	in     eax,dx
  408ba0:	stc    
  408ba1:	jno    0x408bc4
  408ba3:	loopne 0x408bdb
  408ba5:	test   BYTE PTR [ecx+eiz*8-0x2c6c528c],ah
  408bac:	mov    edx,0xf0d2ca2f
  408bb1:	frndint 
  408bb3:	aad    0x62
  408bb5:	mov    ebp,0x5398ccb0
  408bba:	xchg   esi,eax
  408bbc:	mov    es,WORD PTR [esi]
  408bbe:	fidivr WORD PTR [edi-0x6d16e0b4]
  408bc4:	or     edx,DWORD PTR [esi]
  408bc6:	ins    BYTE PTR es:[edi],dx
  408bc7:	xchg   ebx,eax
  408bc8:	sar    ebx,0x5a
  408bcb:	and    DWORD PTR [edi+0x5e],0xc7258002
  408bd2:	xor    eax,0x88d118b
  408bd7:	mov    cl,bl
  408bd9:	mov    ds:0x395d883f,al
  408bde:	mov    WORD PTR [edi],bx
  408be1:	into   
  408be2:	push   eax
  408be3:	dec    esp
  408be4:	xlat   BYTE PTR ds:[ebx]
  408be5:	in     al,0xd3
  408be7:	inc    ebp
  408be8:	xchg   ebp,eax
  408be9:	dec    edx
  408bea:	jecxz  0x408c3b
  408bec:	pop    ebx
  408bed:	xchg   ecx,eax
  408bee:	mov    edx,0x46
	...
  408c03:	add    BYTE PTR [ecx],dl
  408c05:	jbe    0x408b94
  408c07:	xor    DWORD PTR [esi],eax
  408c09:	fcomp  DWORD PTR [edi]
  408c0b:	xor    BYTE PTR [edi+ebp*1+0x17],al
  408c0f:	and    ch,dl
  408c11:	lods   al,BYTE PTR ds:[esi]
  408c12:	dec    esi
  408c13:	and    esp,DWORD PTR [eax+0x5f367982]
  408c19:	jo     0x408c17
  408c1b:	das    
  408c1c:	sbb    eax,0xd325cb97
  408c21:	inc    esp
  408c22:	xchg   edx,eax
  408c23:	sbb    al,0x89
  408c25:	jmp    0x9899:0xcfd200a4
  408c2c:	rcl    DWORD PTR [ecx+0x53a1aff0],cl
  408c32:	dec    esi
  408c33:	not    BYTE PTR [eax+0xdc12415]
  408c39:	xlat   BYTE PTR ds:[ebx]
  408c3a:	xor    DWORD PTR [esp+ecx*1-0x67],eax
  408c3e:	pop    eax
  408c3f:	jae    0x408c5f
  408c41:	pop    ebx
  408c42:	out    0x2a,al
  408c44:	pop    ds
  408c45:	sbb    eax,0x23201d8c
  408c4a:	push   0xe52150
  408c4f:	addr16 push ebx
  408c51:	mov    al,ds:0x5e423ebc
  408c56:	(bad)  
  408c57:	or     DWORD PTR [edi+0x27],ebx
  408c5a:	ror    BYTE PTR [esi+ebx*2+0x4cbba8ed],0xa3
  408c62:	adc    al,0xe2
  408c64:	dec    ebp
  408c65:	imul   edi,DWORD PTR [esi-0x2b],0x0
	...
  408c7c:	push   esi
  408c7d:	xor    eax,0xef57e839
  408c82:	push   ecx
  408c83:	fild   WORD PTR [ebp-0x4f]
  408c86:	in     eax,dx
  408c87:	xchg   BYTE PTR [ebx+ebp*2-0x79],al
  408c8b:	mov    cl,0xf9
  408c8d:	cmp    dl,BYTE PTR [ecx-0x60367cc]
  408c93:	add    ecx,DWORD PTR [edx-0x64a5ba4a]
  408c99:	js     0x408cca
  408c9b:	ins    DWORD PTR es:[edi],dx
  408c9c:	ins    DWORD PTR es:[edi],dx
  408c9d:	loopne 0x408cb8
  408c9f:	sub    BYTE PTR [esi+ebx*1+0x71],0xb7
  408ca4:	(bad)  
  408ca5:	arpl   di,cx
  408ca7:	out    dx,al
  408ca8:	jmp    DWORD PTR [ecx-0x1ccd265b]
  408cae:	mov    cl,0x5c
  408cb0:	xor    ebp,DWORD PTR [ecx]
  408cb2:	fldcw  WORD PTR [ebx-0x4b]
  408cb5:	sbb    ebx,DWORD PTR [ebx+0x67]
  408cb8:	(bad)  
  408cb9:	adc    al,0x1d
  408cbb:	or     eax,0x49e121b8
  408cc0:	mov    ebp,0xc2209f1a
  408cc5:	adc    al,0x65
  408cc7:	sahf   
  408cc8:	or     DWORD PTR [ebx+0x6054f423],0xffffffea
  408ccf:	loope  0x408ca2
  408cd1:	pop    edi
  408cd2:	test   al,0x88
  408cd4:	out    0x4d,al
  408cd6:	outs   dx,BYTE PTR ds:[esi]
  408cd7:	ss aas 
  408cd9:	dec    edi
  408cda:	sub    al,0x5c
  408cdc:	add    BYTE PTR [esi+esi*8-0x49],dl
	...
  408cf4:	(bad)
  408cf7:	sar    BYTE PTR [edx-0x3e],cl
  408cfa:	jb     0x408d68
  408cfc:	dec    ebx
  408cfd:	mov    ecx,0xae4c0630
  408d02:	std    
  408d03:	bswap  ecx
  408d05:	lods   eax,DWORD PTR ds:[esi]
  408d06:	mov    ebx,0x799fae7a
  408d0b:	(bad)  
  408d0c:	mul    DWORD PTR [eax+0x608ae37]
  408d12:	add    ch,cl
  408d14:	in     eax,dx
  408d15:	push   es
  408d16:	les    eax,FWORD PTR [ebx+0x3d7e08f2]
  408d1c:	xchg   ebx,eax
  408d1d:	pop    es
  408d1e:	inc    eax
  408d1f:	push   edi
  408d20:	(bad)  
  408d21:	in     al,dx
  408d22:	or     al,BYTE PTR [ecx+0x41]
  408d25:	jecxz  0x408cf3
  408d27:	sub    edx,DWORD PTR [esi]
  408d29:	jmp    0xe29022b4
  408d2e:	dec    eax
  408d2f:	push   DWORD PTR [eax+0x2f]
  408d32:	sbb    al,0x5d
  408d34:	aad    0x30
  408d36:	pop    esi
  408d37:	aaa    
  408d38:	mov    bl,BYTE PTR [esi]
  408d3a:	cwde   
  408d3b:	mov    DWORD PTR [ebx-0x231d25e3],edi
  408d41:	pop    edi
  408d43:	adc    esp,DWORD PTR [eax]
  408d45:	dec    ebx
  408d46:	mov    esi,0xb4163255
  408d4b:	(bad)  
  408d4c:	aam    0xdd
  408d4e:	lods   al,BYTE PTR ds:[esi]
  408d4f:	shr    DWORD PTR [edi-0xc],1
  408d52:	popf   
  408d53:	sub    eax,0x6b96e7a9
	...
  408d6c:	pop    ebx
  408d6d:	cli    
  408d6e:	pushf  
  408d6f:	test   eax,0xe794410d
  408d74:	and    al,0x10
  408d76:	cmp    DWORD PTR [esi],esp
  408d78:	adc    DWORD PTR [ebx-0x41fc9bc8],edx
  408d7e:	cmp    ah,BYTE PTR [edx-0x1fc48abb]
  408d84:	pushf  
  408d85:	ins    BYTE PTR es:[edi],dx
  408d86:	sub    al,0x3a
  408d88:	mov    ebx,0x4978259e
  408d8d:	mov    cl,0x2f
  408d8f:	mov    esi,0xfc2689df
  408d94:	loop   0x408dec
  408d96:	sub    esi,DWORD PTR [ecx]
  408d98:	add    ebx,esp
  408d9a:	sub    DWORD PTR [edi-0x2f],ebp
  408d9d:	add    al,0x28
  408d9f:	mov    ch,0x37
  408da1:	cs sub ebx,esi
  408da4:	call   0x3338:0x4a473223
  408dab:	mov    DWORD PTR [eax+0x29],edi
  408dae:	and    ebx,ecx
  408db0:	out    dx,al
  408db1:	rcr    DWORD PTR [edi],1
  408db3:	or     eax,0x3fb4fec4
  408db8:	mov    dl,0x83
  408dba:	lods   al,BYTE PTR ds:[esi]
  408dbb:	and    eax,0x66c3a64c
  408dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dc2:	lahf   
  408dc3:	add    eax,0x6858bafc
  408dc8:	and    edx,DWORD PTR [eax+0x59]
  408dcb:	xor    DWORD PTR es:[ecx+0x5b00],eax
	...
  408de2:	add    BYTE PTR [eax],al
  408de4:	sbb    DWORD PTR [edi+0x2e],ecx
  408de7:	pop    edx
  408de8:	dec    edi
  408de9:	mov    eax,0xc9947f19
  408dee:	pushf  
  408def:	jbe    0x408da3
  408df1:	arpl   WORD PTR [ebx-0xe08ef84],bp
  408df7:	jne    0x408e4f
  408df9:	adc    ch,al
  408dfb:	data16 (bad) 
  408dfd:	shl    bh,1
  408dff:	pop    edi
  408e00:	int3   
  408e01:	cmp    cl,bh
  408e03:	push   ebp
  408e04:	push   cs
  408e05:	sahf   
  408e06:	xchg   esi,eax
  408e07:	dec    esp
  408e08:	inc    eax
  408e09:	xchg   DWORD PTR [ecx+0x24786b81],esp
  408e0f:	and    BYTE PTR [ebp-0x188dec6e],0x45
  408e16:	dec    edx
  408e17:	jae    0x408e42
  408e19:	fistp  QWORD PTR [esp+esi*2+0x2f]
  408e1d:	ret    
  408e1e:	xor    BYTE PTR [ebp+0x1],ch
  408e21:	imul   eax,DWORD PTR [edi],0x5deeb367
  408e27:	pop    esi
  408e28:	ins    DWORD PTR es:[edi],dx
  408e29:	adc    al,0x69
  408e2b:	jae    0x408e63
  408e2d:	sub    ch,ah
  408e2f:	jb     0x408e29
  408e31:	add    bl,bl
  408e33:	pusha  
  408e34:	mov    dl,BYTE PTR [edi-0x7e]
  408e37:	popa   
  408e38:	je     0x408de6
  408e3a:	mov    ch,0x6a
  408e3c:	clc    
  408e3d:	jae    0x408dc7
  408e3f:	imul   ebp,DWORD PTR [esi+0x6c69bf99],0x38
  408e46:	out    0x68,al
	...
  408e5c:	sub    ah,ch
  408e5e:	shr    BYTE PTR [ebp-0x1a],1
  408e61:	fist   DWORD PTR [ebx+0x64]
  408e64:	mov    BYTE PTR [ecx],dh
  408e66:	arpl   WORD PTR [esi+0x5a],bp
  408e69:	mov    al,ds:0x7d04673a
  408e6e:	or     eax,0xd02d2500
  408e73:	mov    al,ds:0x97b8f344
  408e78:	ss test eax,0x6f37ce04
  408e7e:	outs   dx,BYTE PTR ds:[esi]
  408e7f:	stc    
  408e80:	xor    BYTE PTR [eax+edi*2],0x7c
  408e84:	cmp    edx,0x10
  408e87:	dec    ebx
  408e88:	jno    0x408e3a
  408e8a:	lods   al,BYTE PTR ds:[esi]
  408e8b:	adc    al,al
  408e8d:	jbe    0x408e55
  408e8f:	and    eax,0x1881226b
  408e94:	jp     0x408e72
  408e96:	jmp    0x55df06ca
  408e9b:	jbe    0x408f16
  408e9d:	pop    eax
  408e9e:	aas    
  408e9f:	inc    ecx
  408ea0:	sub    al,0x2b
  408ea2:	sub    esp,eax
  408ea4:	cmp    eax,0x3ff341e5
  408ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eaa:	std    
  408eab:	stos   BYTE PTR es:[edi],al
  408eac:	cs popa 
  408eae:	xchg   edi,eax
  408eaf:	popf   
  408eb0:	cmp    edi,ecx
  408eb2:	jb     0x408e84
  408eb4:	sub    BYTE PTR [esi],al
  408eb6:	sbb    bh,ah
  408eb8:	sub    cl,BYTE PTR [edi+eiz*4-0x42]
  408ebc:	sub    edx,DWORD PTR [edx]
  408ebe:	int    0x89
	...
  408ed4:	(bad)  
  408ed5:	fcomp  st(2)
  408ed7:	or     al,0xef
  408ed9:	mov    ?,WORD PTR [ecx+0xf54ed3b]
  408edf:	(bad)  
  408ee0:	fcomp  QWORD PTR [edx]
  408ee2:	gs push ebp
  408ee4:	div    DWORD PTR [esi]
  408ee6:	and    ch,BYTE PTR [eax-0xa]
  408ee9:	add    BYTE PTR [edi+0x5f],al
  408eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eed:	ret    0x6f6
  408ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ef1:	jl     0x408e8f
  408ef3:	xor    DWORD PTR [eax],edx
  408ef5:	cmp    eax,0xff31b48a
  408efa:	fiadd  WORD PTR [ebx+0x5e391db5]
  408f00:	pop    edi
  408f01:	pop    ss
  408f02:	jnp    0x408f38
  408f04:	dec    eax
  408f05:	stc    
  408f06:	add    al,BYTE PTR [eax]
  408f08:	mov    ch,0x10
  408f0a:	push   edi
  408f0b:	addr16 nop
  408f0d:	adc    cl,BYTE PTR [eax+ecx*8]
  408f10:	cs jmp 0x408f62
  408f13:	scas   eax,DWORD PTR es:[edi]
  408f14:	or     edi,DWORD PTR [esi+0x21]
  408f17:	xchg   edi,eax
  408f18:	push   0xffffffdd
  408f1a:	mov    ah,0xf0
  408f1c:	(bad)  
  408f1d:	shr    DWORD PTR [ecx],cl
  408f1f:	pop    edi
  408f20:	loope  0x408f95
  408f22:	scas   al,BYTE PTR es:[edi]
  408f23:	cmp    BYTE PTR [esp+esi*1],bh
  408f26:	dec    edi
  408f27:	sub    dl,ah
  408f29:	add    ecx,DWORD PTR [ebx]
  408f2b:	dec    edi
  408f2c:	aas    
  408f2d:	mov    ds,WORD PTR [ecx-0x20]
  408f30:	pop    ecx
  408f31:	sbb    eax,0x42b48704
  408f36:	lods   eax,DWORD PTR ds:[esi]
  408f37:	mov    edi,0x0
	...
  408f4c:	or     eax,0xe8d8296b
  408f51:	pop    eax
  408f52:	mov    dh,0x77
  408f54:	xchg   BYTE PTR [eax+0x22],al
  408f57:	adc    BYTE PTR [ebx+0x28],ah
  408f5a:	cld    
  408f5b:	push   esi
  408f5c:	push   edx
  408f5d:	pusha  
  408f5e:	pusha  
  408f5f:	xor    BYTE PTR [edi-0x36610c3e],ch
  408f65:	cmp    ah,BYTE PTR [edi-0x8]
  408f68:	and    al,0x4e
  408f6a:	sbb    al,al
  408f6c:	jge    0x408f7b
  408f6e:	mov    esi,0x112358a7
  408f73:	or     dh,dh
  408f75:	mov    ds:0x63d36fc5,eax
  408f7a:	push   0xf3d3e57f
  408f7f:	pop    ss
  408f80:	sar    BYTE PTR ds:0x6d5eb75f,0xfb
  408f87:	iret   
  408f88:	cmp    ecx,DWORD PTR [edi-0x51a23afd]
  408f8e:	mov    edx,DWORD PTR [ecx]
  408f90:	cmp    dl,BYTE PTR [ecx-0x67]
  408f93:	mov    esi,0x19e13395
  408f98:	repnz fmul DWORD PTR [eax-0x1e3a9c2e]
  408f9f:	test   ebp,edi
  408fa1:	imul   esp,ebx,0x7b3c9bd8
  408fa7:	jge    0x408f5e
  408fa9:	(bad)  
  408fab:	xor    ecx,ebp
  408fad:	js     0x409025
  408faf:	test   al,0x0
	...
  408fc1:	add    BYTE PTR [eax],al
  408fc3:	add    BYTE PTR [edx-0x6d],ch
  408fc6:	ins    BYTE PTR es:[edi],dx
  408fc7:	cmp    eax,DWORD PTR ds:0x229ecbf1
  408fcd:	push   cs
  408fce:	or     al,0x7e
  408fd0:	cmp    ah,al
  408fd2:	fimul  DWORD PTR [edx]
  408fd5:	cmp    esp,DWORD PTR [esi-0x9968d7b]
  408fdb:	rcl    BYTE PTR [edx-0x5a5fac3a],1
  408fe1:	or     eax,0xf2423bbb
  408fe6:	test   al,0xa6
  408fe8:	fst    QWORD PTR [ebx+0x76fa3351]
  408fee:	cmp    ecx,ebp
  408ff0:	stos   BYTE PTR es:[edi],al
  408ff1:	das    
  408ff2:	mov    cl,0x6c
  408ff4:	dec    edx
  408ff5:	int3   
  408ff6:	xchg   edx,eax
  408ff7:	loope  0x408fcb
  408ff9:	mov    ecx,0x5502764b
  408ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fff:	dec    edx
  409000:	and    bh,dh
  409002:	and    eax,0x3c20bd8f
  409007:	inc    esp
  409008:	pop    edx
  409009:	cmp    DWORD PTR [edi+edx*4+0x75],0xffffffa8
  40900e:	mov    esp,0x6c568574
  409013:	loope  0x409038
  409015:	mov    ecx,0xa7d35600
  40901a:	(bad)
  40901d:	xchg   BYTE PTR [eax+0x194d2ba3],ah
  409023:	jmp    0x40901c
  409025:	scas   eax,DWORD PTR es:[edi]
  409026:	jl     0x409021
	...
  40903c:	xor    dl,BYTE PTR ds:0xf7ee8192
  409042:	mul    BYTE PTR [edx+0x22]
  409045:	pop    ebp
  409046:	cmp    eax,0x58c4990a
  40904b:	clc    
  40904c:	sub    edx,DWORD PTR ds:0xfc9760b6
  409052:	sar    ch,cl
  409054:	rcl    ah,0x69
  409057:	dec    ebp
  409058:	cld    
  409059:	aaa    
  40905a:	xorps  xmm5,XMMWORD PTR [ecx-0xa181e74]
  409061:	outs   dx,DWORD PTR ds:[esi]
  409062:	test   BYTE PTR [edi],ah
  409064:	pop    ecx
  409065:	jg     0x409039
  409067:	xchg   edx,esp
  409069:	popf   
  40906a:	mov    bh,0x7d
  40906c:	dec    edi
  40906d:	inc    edi
  40906e:	pop    ecx
  40906f:	sbb    eax,0x383be5ca
  409074:	hlt    
  409075:	in     al,dx
  409076:	test   al,dl
  409078:	mov    al,ds:0xedd2e00f
  40907d:	mov    ah,0xe
  40907f:	sub    ch,BYTE PTR [ecx-0x44cd94a9]
  409085:	xchg   esp,eax
  409086:	mov    ds:0xc77807ba,al
  40908b:	enter  0xcda2,0x28
  40908f:	adc    dh,bh
  409091:	das    
  409092:	dec    esp
  409093:	lods   eax,DWORD PTR ds:[esi]
  409094:	fldenv [edi]
  409096:	cmc    
  409097:	sbb    eax,0x7900445
  40909c:	mov    al,ds:0xb77e5f
	...
  4090b1:	add    BYTE PTR [eax],al
  4090b3:	add    BYTE PTR [esp+edi*4],bh
  4090b6:	sbb    eax,DWORD PTR [eax]
  4090b8:	push   0x69
  4090ba:	daa    
  4090bb:	dec    ebp
  4090bc:	mov    ds:0xf0283f05,al
  4090c1:	pusha  
  4090c2:	out    dx,eax
  4090c3:	(bad)  
  4090c4:	push   0xdda3888c
  4090c9:	xor    al,0xb0
  4090cb:	sbb    dl,BYTE PTR [ebp-0x48802848]
  4090d1:	cmp    eax,0xb1bf9178
  4090d6:	pop    ds
  4090d7:	hlt    
  4090d8:	mov    bh,0xf9
  4090da:	cmc    
  4090db:	add    ebx,DWORD PTR [edi+0x7d669075]
  4090e1:	lock cmp eax,0x587cb588
  4090e7:	in     eax,dx
  4090e8:	jo     0x409141
  4090ea:	pusha  
  4090eb:	push   esp
  4090ec:	sbb    BYTE PTR [eax],bl
  4090ee:	pop    es
  4090ef:	xor    DWORD PTR [edx],ecx
  4090f1:	dec    edi
  4090f2:	test   al,0xdf
  4090f4:	jb     0x409110
  4090f6:	iret   
  4090f7:	mov    edx,0xecdf7d3a
  4090fc:	xchg   edx,eax
  4090fd:	icebp  
  4090fe:	mov    dh,0x89
  409100:	shl    BYTE PTR [edi+edx*1+0x67],0x58
  409105:	clc    
  409106:	outs   dx,BYTE PTR ds:[esi]
  409107:	add    ch,ch
  409109:	pop    ds
  40910a:	dec    eax
  40910b:	mov    ebx,0xde2f4f85
  409110:	xchg   DWORD PTR [edx],edx
  409112:	xor    BYTE PTR [eax],0xef
  409115:	push   esi
  409116:	out    0x55,eax
	...
  40912c:	xchg   esi,ebx
  40912e:	sahf   
  40912f:	pushf  
  409130:	iret   
  409131:	or     al,bh
  409133:	stc    
  409134:	int    0xe5
  409136:	popw   ss
  409138:	test   DWORD PTR gs:[edi],ecx
  40913b:	jb     0x4090fd
  40913d:	shl    BYTE PTR [edi],0xcb
  409140:	dec    eax
  409141:	sub    al,0x50
  409143:	scas   al,BYTE PTR es:[edi]
  409144:	mov    ch,0x2a
  409146:	aaa    
  409147:	push   ebp
  409149:	call   0x887f:0x5a98989c
  409150:	out    0xda,al
  409152:	fldz   
  409154:	retf   
  409155:	hlt    
  409156:	test   BYTE PTR [eax+0x5d],al
  409159:	mov    ch,0xd2
  40915b:	xor    BYTE PTR es:[eax+0xf911f9d],bl
  409162:	cmp    BYTE PTR [eax-0xc],bh
  409165:	ins    DWORD PTR es:[edi],dx
  409166:	mov    ds:0x30a60ad7,eax
  40916b:	mov    al,0xff
  40916d:	fld    TBYTE PTR [ebx]
  40916f:	mov    dh,0xee
  409171:	fwait
  409172:	test   eax,0x34b183d1
  409177:	jle    0x4091de
  409179:	xor    bl,BYTE PTR [edi-0x306917e7]
  40917f:	and    BYTE PTR [ecx-0x53b97632],bl
  409185:	xor    ch,dl
  409187:	call   0x8ec33a9e
  40918c:	aaa    
  40918d:	loope  0x40912e
  40918f:	sahf   
	...
  4091a4:	add    DWORD PTR [ecx+0x34],ebp
  4091a7:	stc    
  4091a8:	and    al,0x77
  4091aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091ab:	push   esi
  4091ac:	jp     0x4091ec
  4091ae:	sub    esi,DWORD PTR [ecx]
  4091b0:	(bad)  
  4091b1:	adc    DWORD PTR [edx-0x29fdc9f7],eax
  4091b7:	ins    DWORD PTR es:[edi],dx
  4091b8:	fucomi st,st(3)
  4091ba:	mov    cl,al
  4091bc:	lods   eax,DWORD PTR ds:[esi]
  4091bd:	sbb    ecx,ebp
  4091bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091c0:	and    BYTE PTR [ebx+eax*2],cl
  4091c3:	loope  0x409216
  4091c5:	jmp    0x409155
  4091c7:	xchg   BYTE PTR [ecx+eiz*8+0x3b],dh
  4091cb:	sub    edx,ecx
  4091cd:	sbb    DWORD PTR [eax-0x247000b2],0x72ff00e5
  4091d7:	jno    0x40917d
  4091d9:	sbb    DWORD PTR [ecx-0x22],esi
  4091dc:	cmp    BYTE PTR [edi-0x5b738537],al
  4091e2:	adc    DWORD PTR [edi+0x3b29567c],0x901bb113
  4091ec:	mov    ah,0xcf
  4091ee:	add    BYTE PTR [ebx+ebx*8+0x2c],0xde
  4091f3:	jp     0x4091e0
  4091f5:	mov    ds:0x887dde2e,eax
  4091fa:	xor    al,0x71
  4091fc:	and    ebx,DWORD PTR [edx]
  4091fe:	(bad)  
  4091ff:	in     eax,0x25
  409201:	std    
  409202:	xor    ebx,DWORD PTR ds:0xb9b48ccc
	...
  40921c:	mov    ds:0x426ce6f,eax
  409221:	adc    DWORD PTR [esi],ecx
  409223:	mov    dl,0x4b
  409225:	imul   BYTE PTR [edx+0x235d38fb]
  40922b:	push   edi
  40922c:	or     al,0xba
  40922e:	add    DWORD PTR [ebx+esi*2],eax
  409231:	call   0x43d4e2ee
  409236:	jno    0x4091e9
  409238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409239:	cmc    
  40923a:	mov    eax,0xcb128b24
  40923f:	mov    ecx,0x1e536fdc
  409244:	xor    ecx,DWORD PTR [ebx+0x44134eee]
  40924a:	sahf   
  40924b:	add    esi,esp
  40924d:	out    0x83,al
  40924f:	pop    eax
  409250:	dec    ebx
  409251:	mov    ecx,0x5cbdfbf4
  409256:	in     al,0x15
  409258:	sti    
  409259:	and    eax,0xccc284
  40925e:	add    BYTE PTR [esi-0x58],bh
  409261:	or     DWORD PTR [ecx],edx
  409263:	fidivr WORD PTR [ebp-0x11]
  409266:	jae    0x4092e3
  409268:	sub    eax,0x41e2d3cc
  40926e:	test   al,0xd1
  409270:	(bad)  
  409271:	mov    al,ds:0x79da6946
  409276:	and    esp,DWORD PTR [ecx]
  409278:	jg     0x4092e4
  40927a:	jne    0x409205
  40927c:	mov    al,0x8e
  40927e:	adc    BYTE PTR [ebx+0x0],bh
	...
  409291:	add    BYTE PTR [eax],al
  409293:	add    BYTE PTR [ebp+0x32],dh
  409296:	(bad)  
  409297:	and    ebp,DWORD PTR [eax-0x22c1652a]
  40929d:	(bad)  
  40929e:	and    esi,ecx
  4092a0:	dec    esi
  4092a1:	sbb    eax,DWORD PTR [edi-0x2c]
  4092a4:	fcmovnb st,st(6)
  4092a6:	test   eax,0xcc632624
  4092ab:	aas    
  4092ac:	jmp    0x6317:0x47af05f1
  4092b3:	xchg   ebp,eax
  4092b4:	jb     0x40925f
  4092b6:	lea    eax,[ebp+0x41]
  4092b9:	dec    edi
  4092ba:	call   0x51c8a85f
  4092bf:	sub    BYTE PTR [eax+0xf3a34a1],cl
  4092c5:	inc    eax
  4092c6:	fiadd  DWORD PTR [edx+0x3abed960]
  4092cc:	aas    
  4092cd:	retf   0xf2e8
  4092d0:	jnp    0x409300
  4092d2:	mov    eax,ss
  4092d4:	inc    esi
  4092d5:	xchg   edx,eax
  4092d6:	bound  ecx,QWORD PTR [eax-0x6e]
  4092d9:	jbe    0x4092e2
  4092db:	and    eax,0x65be5e58
  4092e0:	int    0xba
  4092e2:	fstp   TBYTE PTR [edi+0x40]
  4092e5:	es xor eax,0x500294ff
  4092eb:	add    BYTE PTR [edx+0x299b9c7],bh
  4092f1:	and    eax,0xb210fcde
  4092f6:	jno    0x40930a
	...
  40930c:	mov    BYTE PTR ds:0xe6e57716,ch
  409312:	sub    al,0xce
  409314:	jge    0x409298
  409316:	dec    ecx
  409317:	stos   DWORD PTR es:[edi],eax
  409318:	(bad)  
  409319:	(bad)  
  40931b:	inc    ebp
  40931c:	pop    es
  40931d:	or     al,0x81
  40931f:	and    BYTE PTR [edi+0x1776912c],bh
  409325:	mov    al,0xf6
  409327:	adc    edx,DWORD PTR ds:0x4dfd5925
  40932d:	mov    edx,0xde0983e
  409332:	push   es
  409333:	and    DWORD PTR [eax],ecx
  409335:	rcr    DWORD PTR [edi+0x44],1
  409338:	or     al,BYTE PTR [esi+ecx*8-0x58277d56]
  40933f:	iret   
  409340:	dec    edx
  409341:	nop
  409342:	inc    ecx
  409343:	cmp    BYTE PTR [edx-0x34],dh
  409346:	and    eax,0x8999e05d
  40934b:	mov    bl,0x58
  40934d:	inc    ebp
  40934e:	out    dx,al
  40934f:	(bad)  
  409350:	jne    0x409350
  409352:	aam    0x6f
  409354:	sub    eax,0x1f0ab16a
  409359:	pop    es
  40935a:	sbb    eax,0x796397e4
  40935f:	or     DWORD PTR [edi],0x87d76945
  409365:	cwde   
  409366:	push   cs
  409367:	mov    dl,0xa5
  409369:	int    0xa0
  40936b:	pop    esp
  40936c:	fst    QWORD PTR [ecx+0x39c6]
	...
  409382:	add    BYTE PTR [eax],al
  409384:	xor    BYTE PTR [edx-0x2],ah
  409387:	cmp    BYTE PTR [eax-0x4a1a67fa],0xa0
  40938e:	fs ss mov esi,0x1b50f05e
  409395:	outs   dx,DWORD PTR ds:[esi]
  409396:	es push ss
  409398:	pop    edx
  409399:	jmp    FWORD PTR [eax+0x1f957771]
  40939f:	fsubrp st(1),st
  4093a1:	fs mov bl,0xb9
  4093a4:	cld    
  4093a5:	inc    DWORD PTR [esi]
  4093a7:	add    DWORD PTR [ebp+0x20e64c58],0xee49014a
  4093b1:	add    DWORD PTR [esi+ebp*1-0x35],edx
  4093b5:	sub    DWORD PTR [ecx+0x1e91ed3e],esi
  4093bb:	pop    ecx
  4093bc:	mov    BYTE PTR [edi+0x1876f6ab],cl
  4093c2:	es xchg ecx,eax
  4093c4:	adc    eax,DWORD PTR [ebp+0x53]
  4093c7:	test   eax,0xce0064a2
  4093cc:	mov    edi,0x49614d4e
  4093d1:	das    
  4093d2:	or     BYTE PTR [esi],al
  4093d4:	and    al,0xe9
  4093d6:	add    al,BYTE PTR [eax]
  4093d8:	mov    ch,0xe8
  4093da:	add    al,BYTE PTR [eax]
  4093dc:	mov    ch,0xe8
  4093de:	add    al,BYTE PTR [eax]
  4093e0:	mov    ch,0xe8
  4093e2:	add    al,BYTE PTR [eax]
  4093e4:	mov    ch,0xe8
  4093e6:	add    al,BYTE PTR [eax]
	...
  4093fc:	mov    ch,0xe8
  4093fe:	add    al,BYTE PTR [eax]
  409400:	mov    ch,0xe8
  409402:	add    al,BYTE PTR [eax]
  409404:	mov    ch,0xe8
  409406:	add    al,BYTE PTR [eax]
  409408:	mov    ch,0xe7
  40940a:	add    al,BYTE PTR [eax]
  40940c:	mov    ch,0xe7
  40940e:	add    al,BYTE PTR [eax]
  409410:	mov    ch,0xe7
  409412:	add    al,BYTE PTR [eax]
  409414:	mov    ch,0xe7
  409416:	add    al,BYTE PTR [eax]
  409418:	mov    ch,0x8f
  40941a:	jmp    0x40941f
  40941c:	mov    ch,0x8f
  40941e:	jmp    0x409423
  409420:	mov    ch,0x8f
  409422:	jmp    0x409427
  409424:	mov    ch,0x8f
  409426:	jmp    0x40942b
  409428:	mov    ch,0x8f
  40942a:	jmp    0xb503:0xea8fb503
  409431:	(bad)
  409435:	(bad)
  409439:	(bad)  
  40943a:	in     eax,dx
  40943b:	add    esi,DWORD PTR [ebp-0x4afc1a71]
  409441:	(bad)  
  409442:	in     eax,dx
  409443:	add    esi,DWORD PTR [ebp-0x4afc1a71]
  409449:	(bad)  
  40944a:	in     al,dx
  40944b:	add    esi,DWORD PTR [ebp-0x4afc1b71]
  409451:	(bad)  
  409452:	in     al,dx
  409453:	add    esi,DWORD PTR [ebp-0x4afc1b71]
  409459:	(bad)
  40945d:	(bad)  
  40945e:	stc    
  40945f:	repnz add BYTE PTR [eax],al
	...
  409472:	add    BYTE PTR [eax],al
  409474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409475:	(bad)  
  409476:	loope  0x40947c
  409478:	mov    esp,0xbe06e395
  40947d:	xchg   ebx,eax
  40947e:	cmc    
  40947f:	add    BYTE PTR [eax-0x55fd106f],dh
  409485:	(bad)
  409489:	(bad)
  40948d:	(bad)
  409491:	(bad)
  409495:	(bad)
  409499:	(bad)
  40949d:	(bad)  
  40949e:	jmp    0x4094a3
  4094a0:	mov    ch,0x8f
  4094a2:	jmp    0x4094a7
  4094a4:	mov    ch,0x8f
  4094a6:	add    dl,ch
  4094a8:	mov    dh,0x8f
  4094aa:	add    dl,ch
  4094ac:	mov    dh,0x8f
  4094ae:	add    ch,ch
  4094b0:	mov    dh,0x8f
  4094b2:	add    ch,ah
  4094b4:	mov    dh,0x8f
  4094b6:	add    ah,ch
  4094b8:	mov    dh,0x8f
  4094ba:	add    ah,ah
  4094bc:	mov    dh,0x8f
  4094be:	add    bh,ch
  4094c0:	mov    dh,0x8f
  4094c2:	add    bh,ah
  4094c4:	mov    dh,0x8f
  4094c6:	add    dh,ch
  4094c8:	mov    dh,0x8f
  4094ca:	add    dh,ah
  4094cc:	mov    dh,0x8f
  4094ce:	add    cl,dh
  4094d0:	mov    dh,0x8f
  4094d2:	add    cl,dh
  4094d4:	mov    dh,0x8f
  4094d6:	add    al,ah
	...
  4094ec:	mov    dh,0x8f
  4094ee:	add    al,ah
  4094f0:	mov    dh,0x8f
  4094f2:	add    bl,dh
  4094f4:	mov    dh,0x8f
  4094f6:	add    bl,dh
  4094f8:	mov    dh,0x8f
  4094fa:	add    dl,ah
  4094fc:	mov    dh,0x8f
  4094fe:	add    dl,ah
  409500:	mov    dh,0x8f
  409502:	add    ch,dh
  409504:	mov    dh,0x8f
  409506:	add    ch,ch
  409508:	mov    dh,0x8f
  40950a:	add    ah,ah
  40950c:	mov    dh,0x8f
  40950e:	add    ah,bl
  409510:	mov    dh,0x8f
  409512:	add    cl,ch
  409514:	mov    dh,0x8f
  409516:	add    cl,ch
  409518:	mov    dh,0x8f
  40951a:	add    cl,ch
  40951c:	mov    dh,0x8f
  40951e:	add    cl,ch
  409520:	mov    dh,0x8f
  409522:	add    cl,ch
  409524:	mov    dh,0x8f
  409526:	add    cl,ch
  409528:	mov    dh,0x8f
  40952a:	add    cl,ch
  40952c:	mov    dh,0x8f
  40952e:	add    cl,ch
  409530:	mov    dh,0x8f
  409532:	add    BYTE PTR [eax],al
  409534:	int3   
  409535:	nop
  409536:	add    BYTE PTR [eax],al
  409538:	int3   
  409539:	nop
  40953a:	add    BYTE PTR [eax],al
  40953c:	fcom   QWORD PTR [eax-0x6f240000]
  409542:	add    BYTE PTR [eax],al
  409544:	int3   
  409545:	nop
  409546:	add    BYTE PTR [eax],al
  409548:	int3   
  409549:	nop
  40954a:	add    BYTE PTR [eax],al
  40954c:	pushf  
  40954d:	nop
	...
  409562:	add    BYTE PTR [eax],al
  409564:	pushf  
  409565:	nop
  409566:	add    BYTE PTR [eax],al
  409568:	mov    ss,WORD PTR [eax-0x6f710000]
  40956e:	add    BYTE PTR [eax],al
  409570:	mov    ds:0x9c000090,eax
  409575:	nop
  409576:	add    BYTE PTR [eax],al
  409578:	mov    BYTE PTR [eax-0x6ef7fff8],dl
  40957e:	or     BYTE PTR [eax],al
  409580:	sbb    BYTE PTR [eax-0x6f37fff8],dl
  409586:	or     BYTE PTR [eax],al
  409588:	mov    BYTE PTR [eax-0x6f17fff8],dl
  40958e:	or     BYTE PTR [eax],al
  409590:	cmp    BYTE PTR [eax-0x6eb7fff8],dl
  409596:	or     BYTE PTR [eax],al
  409598:	mov    eax,0xb8000893
  40959d:	xchg   ebx,eax
  40959e:	or     BYTE PTR [eax],al
  4095a0:	call   0x58409e38
  4095a5:	xchg   ebx,eax
  4095a6:	or     BYTE PTR [eax],al
  4095a8:	mov    eax,0x98000893
  4095ad:	xchg   ebx,eax
  4095ae:	or     BYTE PTR [eax],al
  4095b0:	enter  0x893,0x0
  4095b4:	pop    eax
  4095b5:	xchg   ebx,eax
  4095b6:	or     BYTE PTR [eax],al
  4095b8:	push   cs
  4095b9:	nop
  4095ba:	or     BYTE PTR [eax],al
  4095bc:	mov    ss,WORD PTR [ebx-0x574afff8]
  4095c2:	add    al,0x8
  4095c4:	mov    ch,0x28
  4095c6:	add    al,0x8
	...
  4095dc:	mov    ch,0xc8
  4095de:	add    cl,BYTE PTR [eax]
  4095e0:	mov    ch,0x48
  4095e2:	add    al,0x8
  4095e4:	mov    ch,0x88
  4095e6:	add    al,0x8
  4095e8:	mov    ch,0x8
  4095ea:	add    al,0x8
  4095ec:	mov    ch,0xf8
  4095ee:	add    cl,BYTE PTR [eax]
  4095f0:	mov    ch,0x78
  4095f2:	add    al,0x8
  4095f4:	mov    ch,0x36
  4095f6:	add    ecx,DWORD PTR [eax]
  4095f8:	mov    ch,0xb6
  4095fa:	add    al,0x8
  4095fc:	mov    ch,0xf6
  4095fe:	add    cl,BYTE PTR [eax]
  409600:	mov    ch,0x76
  409602:	add    al,0x8
  409604:	mov    ch,0x36
  409606:	add    ecx,DWORD PTR [eax]
  409608:	mov    ch,0xb6
  40960a:	add    al,0x8
  40960c:	mov    ch,0xfe
  40960e:	add    cl,BYTE PTR [eax]
  409610:	mov    ch,0x7e
  409612:	add    al,0x8
  409614:	mov    ch,0x2e
  409616:	add    ecx,DWORD PTR [eax]
  409618:	mov    ch,0xae
  40961a:	add    al,0x8
  40961c:	mov    ch,0xde
  40961e:	add    cl,BYTE PTR [eax]
  409620:	mov    ch,0x5e
  409622:	add    al,0x8
  409624:	mov    ch,0xe
  409626:	add    ecx,DWORD PTR [eax]
  409628:	mov    ch,0x8e
  40962a:	add    al,0x8
  40962c:	mov    ch,0x8e
  40962e:	add    al,0x8
  409630:	mov    ch,0xe
  409632:	add    ecx,DWORD PTR [eax]
  409634:	mov    ch,0xbe
  409636:	add    al,0x8
  409638:	mov    ch,0x3e
  40963a:	add    ecx,DWORD PTR [eax]
  40963c:	mov    ch,0x8e
  40963e:	add    al,0x8
	...
  409654:	mov    ch,0xe
  409656:	add    ecx,DWORD PTR [eax]
  409658:	mov    ch,0xbe
  40965a:	add    al,0x8
  40965c:	mov    ch,0x3e
  40965e:	add    ecx,DWORD PTR [eax]
  409660:	mov    ch,0x8f
  409662:	out    dx,eax
  409663:	add    ebp,DWORD PTR [ebp-0x42fc9871]
  409669:	(bad)  
  40966a:	das    
  40966b:	add    al,0xbd
  40966d:	(bad)  
  40966e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40966f:	add    ebp,DWORD PTR [ebp-0x52fc3071]
  409675:	pop    DWORD PTR [edi+0x3]
  409678:	mov    ebp,0xbd040f8f
  40967d:	pop    DWORD PTR [edi-0x7052fd]
  409683:	add    ebp,DWORD PTR [ebp-0x42fc8871]
  409689:	(bad)  
  40968a:	mov    edi,0x378fbd03
  40968f:	add    ebp,DWORD PTR [ebp-0x52fc0071]
  409695:	(bad)  
  409696:	ja     0x40969b
  409698:	mov    ebp,0xbd03bf8f
  40969d:	(bad)  
  40969e:	aaa    
  40969f:	add    ebp,DWORD PTR [ebp-0x52fc0871]
  4096a5:	(bad)  
  4096a6:	outs   dx,DWORD PTR ds:[esi]
  4096a7:	add    edi,DWORD PTR [ebp-0x42fc5871]
  4096ad:	(bad)  
  4096ae:	pop    ds
  4096af:	add    ebp,DWORD PTR [ebp-0x52fc2871]
  4096b5:	(bad)  
  4096b6:	dec    edi
  4096b7:	add    eax,DWORD PTR [eax]
	...
  4096c9:	add    BYTE PTR [eax],al
  4096cb:	add    BYTE PTR [ebp-0x42fc7871],bh
  4096d1:	(bad)  
  4096d2:	inc    DWORD PTR [edx]
  4096d4:	lods   eax,DWORD PTR ds:[esi]
  4096d5:	pop    DWORD PTR [edi]
  4096d7:	add    al,0xad
  4096d9:	(bad)  
  4096da:	jg     0x4096e0
  4096dc:	mov    ebp,0xbd04378f
  4096e1:	(bad)  
  4096e2:	scas   eax,DWORD PTR es:[edi]
  4096e3:	add    al,0xad
  4096e5:	pop    DWORD PTR [edi]
  4096e7:	add    al,0xad
  4096e9:	(bad)  
  4096ea:	jg     0x4096f0
  4096ec:	mov    ebp,0xb137008f
  4096f1:	xchg   DWORD PTR [eax],eax
  4096f3:	scas   eax,DWORD PTR es:[edi]
  4096f4:	mov    ecx,0xb6e80087
  4096f9:	xchg   DWORD PTR [eax],eax
  4096fb:	push   0x280087b9
  409700:	mov    cl,0x87
  409702:	add    BYTE PTR [eax-0x37ff7847],ch
  409708:	mov    dh,0x87
  40970a:	add    BYTE PTR [eax-0x47],cl
  40970d:	xchg   DWORD PTR [eax],eax
  40970f:	or     BYTE PTR [ecx-0x4677ff79],dh
  409715:	xchg   DWORD PTR [eax],eax
  409717:	clc    
  409718:	mov    dh,0x87
  40971a:	add    BYTE PTR [eax-0x47],bh
  40971d:	xchg   DWORD PTR [eax],eax
  40971f:	mov    eax,0x380087b6
  409724:	mov    ecx,0xb6f80087
  409729:	xchg   DWORD PTR [eax],eax
  40972b:	js     0x4096e6
  40972d:	xchg   DWORD PTR [eax],eax
  40972f:	mov    eax,0x0
	...
  409744:	mov    dh,0x87
  409746:	add    BYTE PTR [eax],bh
  409748:	mov    ecx,0xb6f00087
  40974d:	xchg   DWORD PTR [eax],eax
  40974f:	jo     0x40970a
  409751:	xchg   DWORD PTR [eax],eax
  409753:	mov    al,ds:0x200087b6
  409758:	mov    ecx,0xb6d00087
  40975d:	xchg   DWORD PTR [eax],eax
  40975f:	push   eax
  409760:	mov    ecx,0xb6800087
  409765:	xchg   DWORD PTR [eax],eax
  409767:	add    BYTE PTR [ecx-0x4effff79],bh
  40976d:	xchg   DWORD PTR [eax],eax
  40976f:	xor    BYTE PTR [esi-0x4ecfff79],0x87
  409776:	add    BYTE PTR [eax+0x87b6],dh
  40977c:	mov    ch,0x93
  40977e:	or     BYTE PTR [eax],al
  409780:	xor    eax,0xc500088d
  409785:	xchg   ebx,eax
  409786:	or     BYTE PTR [eax],al
  409788:	inc    ebp
  409789:	lea    ecx,[eax]
  40978b:	add    BYTE PTR [ecx],cl
  40978d:	lea    ecx,[eax]
  40978f:	add    BYTE PTR [ecx-0x74],bl
  409792:	or     BYTE PTR [eax],al
  409794:	cdq    
  409795:	xchg   ebx,eax
  409796:	or     BYTE PTR [eax],al
  409798:	sbb    DWORD PTR [ebp-0x7316fff8],ecx
  40979e:	or     BYTE PTR [eax],al
  4097a0:	jns    0x40972e
  4097a2:	or     BYTE PTR [eax],al
  4097a4:	mov    ecx,0x893
	...
  4097b9:	add    BYTE PTR [eax],al
  4097bb:	add    BYTE PTR [ecx],bh
  4097bd:	lea    ecx,[eax]
  4097bf:	add    BYTE PTR [ecx+0x2900088c],bh
  4097c5:	lea    ecx,[eax]
  4097c7:	add    BYTE PTR [ecx-0x74],ch
  4097ca:	or     BYTE PTR [eax],al
  4097cc:	jmp    0x9940a05d
  4097d1:	mov    WORD PTR [eax],cs
  4097d3:	add    BYTE PTR [ecx],cl
  4097d5:	lea    ecx,[eax]
  4097d7:	add    BYTE PTR [ecx-0x74],cl
  4097da:	or     BYTE PTR [eax],al
  4097dc:	leave  
  4097dd:	mov    WORD PTR [eax],cs
  4097df:	add    BYTE PTR [ecx-0x1efff774],al
  4097e5:	mov    WORD PTR [eax],cs
  4097e7:	add    BYTE PTR [ecx],dl
  4097e9:	mov    WORD PTR [eax],cs
  4097eb:	add    cl,al
  4097ed:	mov    WORD PTR [eax],cs
  4097ef:	add    BYTE PTR [ecx+0x100088c],al
  4097f5:	lea    ecx,[eax]
  4097f7:	add    BYTE PTR [ecx],dh
  4097f9:	mov    WORD PTR [eax],cs
  4097fb:	add    BYTE PTR [ecx-0x73],al
  4097fe:	or     BYTE PTR [eax],al
  409800:	mov    cl,0x93
  409802:	or     BYTE PTR [eax],al
  409804:	mov    cl,0x93
  409806:	or     BYTE PTR [eax],al
  409808:	mov    ch,0xc3
  40980a:	add    al,0x8
  40980c:	mov    ch,0x2b
  40980e:	add    al,0x8
  409810:	mov    ch,0x93
  409812:	add    al,0x8
  409814:	mov    ch,0x7b
  409816:	add    al,0x8
  409818:	mov    ch,0xc3
  40981a:	add    al,0x8
  40981c:	mov    ch,0x2b
  40981e:	add    al,0x8
	...
  409834:	mov    ch,0xf5
  409836:	add    cl,BYTE PTR [ecx]
  409838:	mov    ch,0xf5
  40983a:	add    ecx,DWORD PTR [ecx]
  40983c:	mov    ch,0x75
  40983e:	add    al,0x9
  409840:	mov    ch,0x75
  409842:	add    eax,0x495b509
  409847:	or     DWORD PTR [ebp-0x4af6fa6b],esi
  40984d:	adc    eax,0x15b50904
  409852:	add    eax,0x495b509
  409857:	or     DWORD PTR [ebp-0x4af6fa67],esi
  40985d:	sbb    DWORD PTR [ecx+ecx*1],eax
  409860:	mov    ch,0x19
  409862:	add    eax,0x339b509
  409867:	or     DWORD PTR [ebp-0x4af6fbc7],esi
  40986d:	mov    ecx,0xb9b50904
  409872:	add    eax,0x301b509
  409877:	or     DWORD PTR [ebp-0x4af6fbff],esi
  40987d:	jno    0x409883
  40987f:	or     DWORD PTR [ebp-0x4af6fa8f],esi
  409885:	inc    ecx
  409886:	add    ecx,DWORD PTR [ecx]
  409888:	mov    ch,0x41
  40988a:	add    al,0x9
  40988c:	mov    ch,0xb1
  40988e:	add    al,0x9
  409890:	mov    ch,0xb1
  409892:	add    eax,0x128fb509
  409897:	add    al,0x0
	...
  4098a9:	add    BYTE PTR [eax],al
  4098ab:	add    BYTE PTR [edi+ecx*4-0x7043faee],bh
  4098b2:	add    BYTE PTR [ebx],0xac
  4098b5:	pop    DWORD PTR [edx+0x528fac04]
  4098bb:	add    al,0xbc
  4098bd:	(bad)  
  4098be:	push   edx
  4098bf:	add    eax,0x3c28fbc
  4098c4:	lods   al,BYTE PTR ds:[esi]
  4098c5:	pop    edx
  4098c7:	add    al,0xac
  4098c9:	pop    DWORD PTR [edx]
  4098cb:	add    al,0xbc
  4098cd:	pop    DWORD PTR [edx]
  4098cf:	add    eax,0x3728fbc
  4098d4:	lods   al,BYTE PTR ds:[esi]
  4098d5:	(bad)  
  4098d6:	jb     0x4098dc
  4098d8:	lods   al,BYTE PTR ds:[esi]
  4098d9:	(bad)  
  4098da:	and    al,BYTE PTR [esp+edi*4]
  4098dd:	(bad)  
  4098de:	and    al,BYTE PTR ds:0x3928fbc
  4098e4:	lods   al,BYTE PTR ds:[esi]
  4098e5:	(bad)  
  4098e6:	xchg   edx,eax
  4098e7:	add    al,0xac
  4098e9:	(bad)  
  4098ea:	and    al,BYTE PTR [esp+edi*4]
  4098ed:	(bad)  
  4098ee:	and    al,BYTE PTR ds:0x3928fbc
  4098f4:	lods   al,BYTE PTR ds:[esi]
  4098f5:	(bad)  
  4098f6:	xchg   edx,eax
  4098f7:	add    al,0xac
  4098f9:	pop    edx
  4098fb:	add    edi,DWORD PTR [edi+ecx*4-0x7043fb3e]
  409902:	xor    al,BYTE PTR [ebx]
  409904:	lods   al,BYTE PTR ds:[esi]
  409905:	(bad)  
  409906:	xor    al,BYTE PTR [esp+ebp*4]
  409909:	(bad)  
  40990a:	out    dx,al
  40990b:	add    edi,DWORD PTR [edi+ecx*4+0x4e6]
	...
  409922:	add    BYTE PTR [eax],al
  409924:	mov    esp,0xac036e8f
  409929:	(bad)  
  40992a:	data16 add al,0xac
  40992d:	(bad)  
  40992e:	scas   al,BYTE PTR es:[edi]
  40992f:	add    edi,DWORD PTR [edi+ecx*4-0x7043fb5a]
  409936:	add    BYTE PTR [esi],ch
  409938:	mov    dh,0x88
  40993a:	add    BYTE PTR [esi],ah
  40993c:	mov    cl,0x88
  40993e:	add    BYTE PTR [esi],cl
  409940:	mov    ecx,0xb6060088
  409945:	mov    BYTE PTR [eax],al
  409947:	mov    ?,WORD PTR [ecx-0x4979ff78]
  40994d:	mov    BYTE PTR [eax],al
  40994f:	dec    esi
  409950:	mov    ecx,0xb6460088
  409955:	mov    BYTE PTR [eax],al
  409957:	into   
  409958:	mov    ecx,0xb6c60088
  40995d:	mov    BYTE PTR [eax],al
  40995f:	(bad)  
  409960:	mov    dh,0x88
  409962:	add    dh,dh
  409964:	mov    bh,0x88
  409966:	add    BYTE PTR [esi-0x47],bh
  409969:	mov    BYTE PTR [eax],al
  40996b:	jbe    0x409923
  40996d:	mov    BYTE PTR [eax],al
  40996f:	push   ds
  409970:	mov    ecx,0xb6160088
  409975:	mov    BYTE PTR [eax],al
  409977:	sahf   
  409978:	mov    ecx,0xb6960088
  40997d:	mov    BYTE PTR [eax],al
  40997f:	push   ds
  409980:	mov    ecx,0xb6160086
  409985:	xchg   BYTE PTR [eax],al
  409987:	sahf   
	...
  40999c:	mov    ecx,0xb6960086
  4099a1:	xchg   BYTE PTR [eax],al
  4099a3:	mov    esi,0xb60086b6
  4099a8:	mov    bh,0x86
  4099aa:	add    BYTE PTR [esi],bh
  4099ac:	mov    ecx,0xb6360086
  4099b1:	xchg   BYTE PTR [eax],al
  4099b3:	div    BYTE PTR [esi-0x4811ff7a]
  4099b9:	xchg   BYTE PTR [eax],al
  4099bb:	mov    cx,0x86
  4099bf:	pop    esi
  4099c0:	mov    dh,0x86
  4099c2:	add    BYTE PTR [eax],al
  4099c4:	or     edx,DWORD PTR [ecx-0x6de4fff7]
  4099ca:	or     DWORD PTR [eax],eax
  4099cc:	fwait
  4099cd:	mov    ecx,DWORD PTR [ecx]
  4099cf:	add    BYTE PTR [ebx-0x34fff670],bl
  4099d5:	mov    ecx,DWORD PTR [ecx]
  4099d7:	add    BYTE PTR [ebx+0x3b000990],bh
  4099dd:	xchg   ecx,eax
  4099de:	or     DWORD PTR [eax],eax
  4099e0:	fwait
  4099e1:	xchg   ecx,eax
  4099e2:	or     DWORD PTR [eax],eax
  4099e4:	imul   ecx,DWORD PTR [ebx-0x6f84fff7],0x9
  4099eb:	add    bl,bh
  4099ed:	nop
  4099ee:	or     DWORD PTR [eax],eax
  4099f0:	cmp    edx,DWORD PTR [edx-0x7444fff7]
  4099f6:	or     DWORD PTR [eax],eax
  4099f8:	jmp    0x40998b
  4099fa:	or     DWORD PTR [eax],eax
  4099fc:	imul   edx,DWORD PTR [eax+0x9],0x0
	...
  409a13:	add    BYTE PTR [ebx-0x6f],cl
  409a16:	or     DWORD PTR [eax],eax
  409a18:	fwait
  409a19:	mov    ecx,DWORD PTR [ecx]
  409a1b:	add    BYTE PTR [ebx+0x2b000990],ch
  409a21:	xchg   ecx,eax
  409a22:	or     DWORD PTR [eax],eax
  409a24:	sub    edx,DWORD PTR [edx-0x7424fff7]
  409a2a:	or     DWORD PTR [eax],eax
  409a2c:	retf   
  409a2d:	nop
  409a2e:	or     DWORD PTR [eax],eax
  409a30:	dec    ebx
  409a31:	nop
  409a32:	or     DWORD PTR [eax],eax
  409a34:	sub    edx,DWORD PTR [ecx-0x6f84fff7]
  409a3a:	or     DWORD PTR [eax],eax
  409a3c:	dec    ebx
  409a3d:	xchg   ecx,eax
  409a3e:	or     DWORD PTR [eax],eax
  409a40:	retf   
  409a41:	nop
  409a42:	or     DWORD PTR [eax],eax
  409a44:	retf   
  409a45:	xchg   ecx,eax
  409a46:	or     DWORD PTR [eax],eax
  409a48:	pop    esp
  409a49:	nop
  409a4a:	pop    es
  409a4b:	add    BYTE PTR [eax+edx*4],bl
  409a4e:	pop    es
  409a4f:	add    BYTE PTR [ebp-0x4af8fd3a],dh
  409a55:	push   es
  409a56:	add    eax,DWORD PTR [edi]
  409a58:	mov    ch,0xd6
  409a5a:	add    al,BYTE PTR [edi]
  409a5c:	mov    ch,0x16
  409a5e:	add    eax,DWORD PTR [edi]
  409a60:	mov    ch,0x36
  409a62:	add    eax,DWORD PTR [edi]
  409a64:	mov    ch,0x76
  409a66:	add    eax,DWORD PTR [edi]
  409a68:	mov    ch,0xfe
  409a6a:	add    al,BYTE PTR [edi]
  409a6c:	mov    ch,0xbe
  409a6e:	add    al,0x7
  409a70:	mov    ch,0x8e
  409a72:	add    al,0x7
  409a74:	mov    ch,0x4e
  409a76:	add    al,0x7
	...
  409a8c:	mov    ch,0xee
  409a8e:	add    al,BYTE PTR [edi]
  409a90:	mov    ch,0xae
  409a92:	add    al,0x7
  409a94:	mov    ch,0xfe
  409a96:	add    al,BYTE PTR [edi]
  409a98:	mov    ch,0xbe
  409a9a:	add    al,0x7
  409a9c:	mov    ch,0xe2
  409a9e:	add    al,BYTE PTR [edi]
  409aa0:	mov    ch,0xaa
  409aa2:	add    al,0x7
  409aa4:	mov    ch,0xc2
  409aa6:	add    al,BYTE PTR [edi]
  409aa8:	mov    ch,0x8a
  409aaa:	add    al,0x7
  409aac:	mov    ch,0xd2
  409aae:	add    al,BYTE PTR [edi]
  409ab0:	mov    ch,0x9a
  409ab2:	add    al,0x7
  409ab4:	mov    ch,0x32
  409ab6:	add    eax,DWORD PTR [edi]
  409ab8:	mov    ch,0xfa
  409aba:	add    al,BYTE PTR [edi]
  409abc:	mov    ch,0xe5
  409abe:	add    cl,BYTE PTR [eax]
  409ac0:	mov    ch,0x65
  409ac2:	add    al,0x8
  409ac4:	mov    ch,0x25
  409ac6:	add    ecx,DWORD PTR [eax]
  409ac8:	mov    ch,0xa5
  409aca:	add    al,0x8
  409acc:	mov    ch,0x85
  409ace:	add    al,0x8
  409ad0:	mov    ch,0x5
  409ad2:	add    al,0x8
  409ad4:	mov    ch,0xc5
  409ad6:	add    cl,BYTE PTR [eax]
  409ad8:	mov    ch,0x45
  409ada:	add    al,0x8
  409adc:	mov    ch,0x8f
  409ade:	jmp    0xf9d04ae6
  409ae3:	add    edi,DWORD PTR [eax-0x4ffc1e71]
  409ae9:	(bad)  
  409aea:	icebp  
  409aeb:	add    edi,DWORD PTR [eax+0x3ed8f]
	...
  409b01:	add    BYTE PTR [eax],al
  409b03:	add    BYTE PTR [eax-0x47fc2a71],dh
  409b09:	(bad)  
  409b0a:	in     eax,0x3
  409b0c:	mov    al,0x8f
  409b0e:	int    0x3
  409b10:	mov    eax,0xb003eb8f
  409b15:	(bad)  
  409b16:	sti    
  409b17:	add    edi,DWORD PTR [eax-0x4ffc1c71]
  409b1d:	(bad)  
  409b1e:	repz add edi,DWORD PTR [eax-0x4ffc1071]
  409b25:	(bad)  
  409b26:	xlat   BYTE PTR ds:[ebx]
  409b27:	add    edi,DWORD PTR [eax-0x4ffc1871]
  409b2d:	(bad)  
  409b2e:	iret   
  409b2f:	add    edi,DWORD PTR [eax-0x4ffc1771]
  409b35:	(bad)  
  409b36:	clc    
  409b37:	add    edi,DWORD PTR [eax-0x4ffc1f71]
  409b3d:	(bad)  
  409b3e:	lock add edi,DWORD PTR [eax-0x4ffc1371]
  409b45:	(bad)  
  409b46:	aam    0x3
  409b48:	mov    eax,0xb003e48f
  409b4d:	(bad)  
  409b4e:	int3   
  409b4f:	add    edi,DWORD PTR [eax-0x4ffc1571]
  409b55:	(bad)  
  409b56:	cli    
  409b57:	add    edi,DWORD PTR [eax-0x4ffc1d71]
  409b5d:	(bad)  
  409b5e:	repnz add edi,DWORD PTR [eax-0x4ffc1171]
  409b65:	(bad)  
  409b66:	(bad)  
  409b67:	add    eax,DWORD PTR [eax]
	...
  409b79:	add    BYTE PTR [eax],al
  409b7b:	add    BYTE PTR [eax-0x4e16ff71],bh
  409b81:	lea    eax,[ebx]
  409b83:	in     eax,0xba
  409b85:	mov    WORD PTR ds:0x689bcef,es
  409b8b:	out    0xaf,al
  409b8d:	mov    al,BYTE PTR [edi]
  409b8f:	loope  0x409b3f
  409b91:	xchg   DWORD PTR [eax],ecx
  409b93:	loope  0x409b53
  409b95:	xchg   DWORD PTR [eax],ecx
  409b97:	lock mov ecx,0xb1f00988
  409b9d:	mov    BYTE PTR [ecx],cl
  409b9f:	jecxz  0x409b49
  409ba1:	test   DWORD PTR [edx],ecx
  409ba3:	jecxz  0x409b65
  409ba5:	test   DWORD PTR [edx],ecx
  409ba7:	repz mov eax,0xb0f30a85
  409bad:	test   DWORD PTR [edx],ecx
  409baf:	loop   0x409b5a
  409bb1:	xchg   BYTE PTR [ebx],cl
  409bb3:	loop   0x409b76
  409bb5:	xchg   BYTE PTR [ebx],cl
  409bb7:	repnz mov ecx,0xb1f20b86
  409bbd:	xchg   BYTE PTR [ebx],cl
  409bbf:	in     eax,0xaa
  409bc1:	or     DWORD PTR [ebx*8-0xaf37c3e],0xffffffba
  409bc9:	or     DWORD PTR [ebp*8-0x1af37c4e],0xffffffaa
  409bd1:	or     DWORD PTR [ebx*8-0xaf37c3e],0xffffffba
  409bd9:	or     DWORD PTR [ebp*8-0x1bf37c4e],0x0
	...
  409bf1:	add    BYTE PTR [eax],al
  409bf3:	add    BYTE PTR [ebx-0x3c23f27c],ch
  409bf9:	or     BYTE PTR ds:0xd82bbf4,0xec
  409c00:	mov    bl,0x82
  409c02:	or     eax,0xd82abe4
  409c07:	fadd   st(3),st
  409c09:	or     BYTE PTR ds:0xd828100,0xd
  409c10:	xchg   ecx,eax
  409c11:	or     BYTE PTR ds:0xe9f920d,0xe
  409c18:	xchg   edx,eax
  409c19:	lahf   
  409c1a:	push   cs
  409c1b:	push   cs
  409c1c:	bound  ebx,QWORD PTR [edi-0x60adf1f2]
  409c22:	push   cs
  409c23:	push   cs
  409c24:	push   edx
  409c25:	lahf   
  409c26:	push   cs
  409c27:	push   cs
  409c28:	jb     0x409bc9
  409c2a:	push   cs
  409c2b:	push   cs
  409c2c:	inc    edx
  409c2d:	lahf   
  409c2e:	push   cs
  409c2f:	push   cs
  409c30:	push   edx
  409c31:	lahf   
  409c32:	push   cs
  409c33:	push   cs
  409c34:	push   edx
  409c35:	lahf   
  409c36:	push   cs
  409c37:	push   cs
  409c38:	adc    bl,BYTE PTR [edi-0x60ddf1f2]
  409c3e:	push   cs
  409c3f:	push   cs
  409c40:	adc    bl,BYTE PTR [edi-0x60edf1f2]
  409c46:	push   cs
  409c47:	push   cs
  409c48:	repnz sahf 
  409c4a:	push   cs
  409c4b:	push   cs
  409c4c:	add    bl,BYTE PTR [edi-0x60edf1f2]
  409c52:	push   cs
  409c53:	push   cs
  409c54:	adc    esp,DWORD PTR [eax+0xf0f]
	...
  409c6a:	add    BYTE PTR [eax],al
  409c6c:	adc    esp,DWORD PTR [eax-0x601cf0f1]
  409c72:	(bad)  
  409c73:	psrlq  mm3,QWORD PTR [edi-0x602cf0f1]
  409c7a:	(bad)  
  409c7b:	psllq  mm3,QWORD PTR [edi-0x603cf0f1]
  409c82:	(bad)  
  409c83:	psrlq  mm3,QWORD PTR [edi-0x602cf0f1]
  409c8a:	(bad)  
  409c8b:	setae  BYTE PTR [edi-0x605cf0f1]
  409c92:	(bad)  
  409c93:	setae  BYTE PTR [edi-0x164af0f1]
  409c9a:	(bad)  
  409c9b:	cmpps  xmm2,xmm1,0xf
  409c9f:	btc    ecx,0xf
  409ca3:	(bad)  
  409ca5:	loope  0x409cb6
  409ca7:	rsm    
  409ca9:	out    0x2,al
  409cab:	adc    ah,al
  409cad:	aam    0x14
  409caf:	adc    eax,esi
  409cb1:	repnz push ss
  409cb3:	adc    al,0xc9
  409cb5:	sti    
  409cb6:	adc    eax,0x18f0c015
  409cbb:	push   ss
  409cbc:	stos   DWORD PTR es:[edi],eax
  409cbd:	clc    
  409cbe:	sbb    BYTE PTR [esi],dl
  409cc0:	mov    ds:0xaa1717d1,eax
  409cc5:	fst    DWORD PTR [edi]
  409cc7:	pop    ss
  409cc8:	mov    ds:0xcd181ade,al
  409ccd:	ficomp WORD PTR [edx]
  409ccf:	sbb    BYTE PTR [eax],al
	...
  409ce1:	add    BYTE PTR [eax],al
  409ce3:	add    ch,cl
  409ce5:	mov    ds,WORD PTR [eax+ebx*1]
  409ce8:	mov    ebp,0xbd181c8e
  409ced:	call   FWORD PTR [ebx]
  409cef:	sbb    DWORD PTR [edi+edi*8-0x1053e6e5],ebp
  409cf6:	sbb    ebx,DWORD PTR [ecx]
  409cf8:	pushf  
  409cf9:	out    dx,eax
  409cfa:	sbb    ebx,DWORD PTR [ecx]
  409cfc:	pushf  
  409cfd:	fcomp  QWORD PTR [eax]
  409cff:	sbb    cl,bh
  409d01:	fcomp  QWORD PTR [eax]
  409d03:	sbb    cl,bh
  409d05:	mov    WORD PTR [edx],ds
  409d07:	sbb    bh,BYTE PTR [edi-0x40e5e574]
  409d0d:	cld    
  409d0e:	sbb    BYTE PTR [edx],bl
  409d10:	scas   eax,DWORD PTR es:[edi]
  409d11:	cld    
  409d12:	sbb    BYTE PTR [edx],bl
  409d14:	scas   eax,DWORD PTR es:[edi]
  409d15:	in     al,dx
  409d16:	sbb    BYTE PTR [edx],bl
  409d18:	lahf   
  409d19:	in     al,dx
  409d1a:	sbb    BYTE PTR [edx],bl
  409d1c:	lahf   
  409d1d:	fstp   QWORD PTR [ecx]
  409d1f:	sbb    ecx,esi
  409d21:	rcr    DWORD PTR [ecx],0x1b
  409d24:	into   
  409d25:	pop    DWORD PTR [edx]
  409d27:	sbb    edi,DWORD PTR [esi-0x41e4fd76]
  409d2d:	mov    dh,dl
  409d2f:	sbb    ch,BYTE PTR [esi-0x51e50d76]
  409d35:	mov    ah,dl
  409d37:	sbb    bl,BYTE PTR [esi-0x61e51d76]
  409d3d:	mov    dl,ch
  409d3f:	pop    ds
  409d40:	ror    DWORD PTR [ebx-0x7436e033],1
  409d46:	add    eax,0x20
	...
  409d5b:	add    cl,al
  409d5d:	mov    edi,ebp
  409d5f:	pop    ds
  409d60:	mov    ecx,0xb11ff58b
  409d65:	mov    ebp,ebp
  409d67:	pop    ds
  409d68:	test   eax,0xa11fe58b
  409d6d:	mov    ebx,ebp
  409d6f:	pop    ds
  409d70:	cdq    
  409d71:	mov    edx,ebp
  409d73:	pop    ds
  409d74:	ror    DWORD PTR [ebx-0x7436e033],1
  409d7a:	add    eax,0xfd8bc120
  409d7f:	pop    ds
  409d80:	mov    ecx,0xb11ff58b
  409d85:	mov    ebp,ebp
  409d87:	pop    ds
  409d88:	test   eax,0xa11fe58b
  409d8d:	mov    ebx,ebp
  409d8f:	pop    ds
  409d90:	cdq    
  409d91:	mov    edx,esp
  409d93:	and    al,dl
  409d95:	mov    esp,cs
  409d97:	and    al,cl
  409d99:	mov    WORD PTR [ecx+eiz*1],es
  409d9c:	ror    BYTE PTR [esp+edi*8-0xb7347e0],0x20
  409da4:	mov    al,0x8c
  409da6:	in     al,dx
  409da7:	and    BYTE PTR [eax-0x5fdf1b74],ch
  409dad:	mov    esp,ds
  409daf:	and    BYTE PTR [eax-0x2a2bff74],bl
  409db5:	mov    WORD PTR ds:0x1d8cd5cc,ds
  409dbb:	add    al,0xd4
  409dbd:	mov    WORD PTR ds:0xfc,ds
	...
  409dd3:	add    ch,dl
  409dd5:	mov    WORD PTR ds:0x1d8cd5f4,ds
  409ddb:	in     al,dx
  409ddc:	aad    0x8c
  409dde:	sbb    eax,0x1d8cd5e4
  409de3:	(bad)  
  409de5:	mov    WORD PTR ds:0x391b9e9,ds
  409deb:	in     eax,0xbd
  409ded:	xchg   ebp,eax
  409dee:	pop    es
  409def:	icebp  
  409df0:	scas   al,BYTE PTR es:[edi]
  409df1:	cwde   
  409df2:	or     ebx,esi
  409df4:	lods   al,BYTE PTR ds:[esi]
  409df5:	call   0xdc0c:0x9bc2e50b
  409dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dfd:	pushf  
  409dfe:	or     eax,0xe9db0f7
  409e03:	out    dx,al
  409e04:	stos   DWORD PTR es:[edi],eax
  409e05:	sahf   
  409e06:	psubusw mm0,mm6
  409e09:	jg     0x409e1b
  409e0b:	fld    st(6)
  409e0d:	jg     0x409e1f
  409e0f:	clc    
  409e10:	mov    DWORD PTR [eax-0x7f3807ef],0x81a4fb11
  409e1a:	adc    bh,bl
  409e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e1d:	adc    DWORD PTR [edx],0x1382a5da
  409e23:	fisub  DWORD PTR [ebp-0x3522ec7e]
  409e29:	adc    DWORD PTR [edx*8-0x2eb7c3e],0xffffffca
  409e31:	adc    DWORD PTR [esi*8-0x3eb7c3e],0x0
	...
  409e49:	add    BYTE PTR [eax],al
  409e4b:	add    BYTE PTR [ebx-0x5c0bea7c],ch
  409e51:	test   BYTE PTR ds:0x1584e100,dl
  409e57:	adc    eax,0x151584e1
  409e5c:	xchg   edx,eax
  409e5d:	adc    DWORD PTR [esi],0x16
  409e60:	add    BYTE PTR [ebx-0x7c5de9ea],0x16
  409e67:	push   ss
  409e68:	mov    ds:0x93161683,al
  409e6d:	test   BYTE PTR [edi],dl
  409e6f:	pop    ss
  409e70:	add    DWORD PTR [edi+edx*1+0x17846317],0x17
  409e78:	arpl   WORD PTR [edi+edx*1+0x18898417],ax
  409e7f:	sbb    BYTE PTR [ecx+ecx*4-0x744be7e8],al
  409e86:	sbb    BYTE PTR [eax],bl
  409e88:	mov    ah,0x8b
  409e8a:	sbb    BYTE PTR [eax],bl
  409e8c:	inc    esp
  409e8d:	mov    DWORD PTR [eax],ebx
  409e8f:	sbb    BYTE PTR [ecx+ecx*4+0x18],al
  409e93:	sbb    BYTE PTR [ecx+ecx*4+0x18],dl
  409e97:	sbb    BYTE PTR [ecx+ecx*4+0x18],dl
  409e9b:	sbb    BYTE PTR ds:0x519198a,al
  409ea1:	mov    bl,BYTE PTR [ecx]
  409ea3:	sbb    DWORD PTR [ebp-0x4ae6e678],esi
  409ea9:	mov    BYTE PTR [ecx],bl
  409eab:	sbb    DWORD PTR ds:0x19198a,eax
	...
  409ec1:	add    BYTE PTR [eax],al
  409ec3:	add    BYTE PTR ds:0x1519198a,al
  409ec9:	mov    bl,BYTE PTR [ecx]
  409ecb:	sbb    DWORD PTR ds:0x619198a,edx
  409ed1:	xchg   DWORD PTR [edx],ebx
  409ed3:	sbb    al,BYTE PTR [esi]
  409ed5:	xchg   DWORD PTR [edx],ebx
  409ed7:	sbb    dh,BYTE PTR [esi-0x49e5e577]
  409edd:	mov    DWORD PTR [edx],ebx
  409edf:	sbb    dh,BYTE PTR [ebp-0x50e5e720]
  409ee5:	loopne 0x409eff
  409ee7:	sbb    bl,BYTE PTR [edi-0x60e5e710]
  409eed:	lock sbb BYTE PTR [edx],bl
  409ef0:	iret   
  409ef1:	rcl    DWORD PTR [edi],0x1b
  409ef4:	into   
  409ef5:	rcl    DWORD PTR [edi],0x1b
  409ef8:	mov    esi,0xbe1b1991
  409efd:	xchg   ecx,eax
  409efe:	sbb    DWORD PTR [ebx],ebx
  409f00:	scas   al,BYTE PTR es:[edi]
  409f01:	loope  0x409f1a
  409f03:	sbb    ebp,DWORD PTR [esi-0x61e4e81f]
  409f09:	icebp  
  409f0a:	pop    ss
  409f0b:	sbb    ebx,DWORD PTR [esi-0x2ee4e80f]
  409f11:	test   BYTE PTR [edx],0x0
  409f14:	mov    ch,0xf7
  409f16:	add    al,BYTE PTR [eax]
  409f18:	mov    ch,0xf8
  409f1a:	add    al,BYTE PTR [eax]
  409f1c:	mov    ch,0xf9
  409f1e:	add    al,BYTE PTR [eax]
  409f20:	mov    ch,0xfa
  409f22:	add    al,BYTE PTR [eax]
  409f24:	mov    ch,0xf3
  409f26:	add    al,BYTE PTR [eax]
	...
  409f3c:	mov    ch,0xfc
  409f3e:	add    al,BYTE PTR [eax]
  409f40:	mov    ch,0xf5
  409f42:	add    al,BYTE PTR [eax]
  409f44:	mov    ch,0xee
  409f46:	add    al,BYTE PTR [eax]
  409f48:	mov    ch,0xf0
  409f4a:	add    al,BYTE PTR [eax]
  409f4c:	mov    ch,0xe2
  409f4e:	add    al,BYTE PTR [eax]
  409f50:	mov    ch,0xfc
  409f52:	add    al,BYTE PTR [eax]
  409f54:	mov    ch,0xe6
  409f56:	add    al,BYTE PTR [eax]
  409f58:	mov    ch,0xe2
  409f5a:	add    al,BYTE PTR [eax]
  409f5c:	mov    ch,0xee
  409f5e:	add    al,BYTE PTR [eax]
  409f60:	mov    ch,0xca
  409f62:	add    al,BYTE PTR [eax]
  409f64:	mov    ch,0x96
  409f66:	add    al,0x0
  409f68:	mov    ch,0x8e
  409f6a:	add    al,0x0
  409f6c:	mov    ch,0x8f
  409f6e:	fld    DWORD PTR [ebx]
  409f70:	mov    ch,0x8f
  409f72:	loope  0x409f77
  409f74:	mov    ch,0x8f
  409f76:	sub    DWORD PTR [esi*4-0x4afbc671],eax
  409f7d:	(bad)
  409f81:	(bad)  
  409f82:	stc    
  409f83:	add    esi,DWORD PTR [ebp-0x4afb9671]
  409f89:	(bad)
  409f8d:	(bad)
  409f91:	(bad)
  409f95:	(bad)
  409f99:	(bad)
  409f9d:	(bad)
	...
  409fb1:	add    BYTE PTR [eax],al
  409fb3:	add    BYTE PTR [ebp-0x4afc1771],dh
  409fb9:	(bad)  
  409fba:	jmp    0x409fbf
  409fbc:	mov    ch,0x8f
  409fbe:	jmp    0xb503:0xed8fb503
  409fc5:	(bad)  
  409fc6:	out    0x3,eax
  409fc8:	mov    ch,0x8f
  409fca:	loope  0x409fcf
  409fcc:	mov    ch,0x8f
  409fce:	fld    QWORD PTR [ebx]
  409fd0:	mov    ch,0x8f
  409fd2:	fld    DWORD PTR [ebx]
  409fd4:	mov    ch,0x8f
  409fd6:	loope  0x409fdb
  409fd8:	mov    ch,0x8f
  409fda:	leave  
  409fdb:	add    esi,DWORD PTR [ebp-0x4afc4671]
  409fe1:	(bad)
  409fe5:	(bad)
  409fe9:	(bad)
  409fed:	(bad)
  409ff1:	(bad)
  409ff5:	(bad)
  409ff9:	pop    DWORD PTR [eax]
  409ffb:	jmp    0xe9412fb0
  40a000:	mov    ebx,0xdae9008f
  40a005:	jmp    0xe900:0x8fb4e9fe
  40a00c:	mov    esi,0xbae9008f
  40a011:	pop    DWORD PTR [eax]
  40a013:	jmp    0xe9412fbe
	...
  40a02c:	into   
  40a02d:	pop    DWORD PTR [eax]
  40a02f:	jmp    0xe941300a
  40a034:	out    0x8f,al
  40a036:	add    cl,ch
  40a038:	jbe    0x40a024
  40a03a:	(bad)  
  40a03b:	jmp    0xeb3f8ad6
  40a040:	mov    dh,0x93
  40a042:	add    ah,ah
  40a044:	mov    dh,0x91
  40a046:	add    dh,ch
  40a048:	mov    dh,0x97
  40a04a:	add    al,dh
  40a04c:	mov    dh,0x95
  40a04e:	add    dl,ah
  40a050:	mov    dh,0x9c
  40a052:	add    dh,bl
  40a054:	mov    dh,0x80
  40a056:	add    dl,bh
  40a058:	mov    dh,0x82
  40a05a:	add    BYTE PTR [edx],al
  40a05c:	mov    ecx,0xb6ca008a
  40a061:	mov    dh,0x0
  40a063:	fidiv  DWORD PTR [esi-0x4955ff5a]
  40a069:	add    BYTE PTR ds:[edx+0x6a005eb6],cl
  40a070:	mov    dh,0x2e
  40a072:	add    BYTE PTR [edx],ch
  40a074:	mov    dh,0xee
  40a076:	(bad)  
  40a077:	jmp    0x8fb6:0xe9008fb7
  40a07e:	add    cl,bh
  40a080:	mov    dh,0x7f
  40a082:	add    cl,bh
  40a084:	mov    dh,0x7f
  40a086:	add    BYTE PTR [eax],al
  40a088:	fmul   QWORD PTR [ebp-0x71f3fff0]
  40a08e:	adc    BYTE PTR [eax],al
	...
  40a0a4:	or     eax,0xfd00118e
  40a0a9:	lea    edx,[ecx]
  40a0ab:	add    dh,bl
  40a0ad:	lea    edx,[edx]
  40a0af:	add    dh,cl
  40a0b1:	lea    edx,[edx]
  40a0b3:	add    bh,cl
  40a0b5:	lea    edx,[ebx]
  40a0b7:	add    BYTE PTR [edi-0x27ffec73],bh
  40a0bd:	lea    edx,[eax+eax*1]
  40a0c0:	mov    BYTE PTR [ebp-0x7276ffec],cl
  40a0c6:	adc    eax,0x158d8900
  40a0cb:	add    BYTE PTR [ebp+ecx*4-0x72a6ff35],bl
  40a0d2:	add    BYTE PTR [eax],al
  40a0d4:	popf   
  40a0d5:	lea    eax,[edx]
  40a0d7:	add    BYTE PTR [edi-0x76fffb73],cl
  40a0dd:	lea    eax,[edi]
  40a0df:	add    BYTE PTR [ebp-0x73],ah
  40a0e2:	or     eax,0x198d8d00
  40a0e7:	add    BYTE PTR [ebp+0xd003193],ch
  40a0ed:	lea    esp,[ecx+0x0]
  40a0f0:	fst    QWORD PTR [ebx-0x71a2ff3f]
  40a0f6:	add    DWORD PTR [ecx],0x301934d
  40a0fc:	dec    ebp
  40a0fd:	jmp    0x955da701
  40a102:	add    DWORD PTR [ebx*1+0x18017d],ecx
	...
  40a119:	add    BYTE PTR [eax],al
  40a11b:	add    BYTE PTR ds:0xd3001ad,cl
  40a121:	int    0xff
  40a123:	pop    edi
  40a124:	sbb    al,0x8d
  40a126:	add    BYTE PTR [eax],al
  40a128:	mov    ch,0xe6
  40a12a:	add    dl,BYTE PTR [eax]
  40a12c:	mov    ch,0xe6
  40a12e:	add    dl,BYTE PTR [eax]
  40a130:	mov    ch,0xc7
  40a132:	add    dl,BYTE PTR [ecx]
  40a134:	mov    ch,0xc4
  40a136:	add    dl,BYTE PTR [edx]
  40a138:	mov    ch,0xc5
  40a13a:	add    dl,BYTE PTR [ebx]
  40a13c:	mov    ch,0xc2
  40a13e:	add    dl,BYTE PTR [esi*4-0x4aeafd15]
  40a145:	loopne 0x40a149
  40a147:	push   ss
  40a148:	mov    ch,0xe9
  40a14a:	add    dl,BYTE PTR [edi]
  40a14c:	mov    ch,0xde
  40a14e:	add    bl,BYTE PTR [eax]
  40a150:	mov    ch,0xef
  40a152:	add    bl,BYTE PTR [ecx]
  40a154:	mov    ch,0xec
  40a156:	add    bl,BYTE PTR [edx]
  40a158:	mov    ch,0xbd
  40a15a:	add    bl,BYTE PTR [ebx]
  40a15c:	mov    ch,0xda
  40a15e:	add    bl,BYTE PTR [esi*4-0x4ae2fb6d]
  40a165:	add    eax,DWORD PTR ss:[eax-0x4b]
  40a169:	das    
  40a16a:	jmp    0xea6bb5e4
  40a16f:	arpl   bp,dx
  40a171:	es loop 0x40a1e5
  40a174:	aam    0xdb
  40a176:	fnsave [ebx-0x30]
  40a179:	and    al,0x23
  40a17b:	jo     0x40a151
  40a17d:	and    eax,0x64f4
	...
  40a192:	add    BYTE PTR [eax],al
  40a194:	rcl    esi,1
  40a196:	out    dx,al
  40a197:	outs   dx,BYTE PTR ds:[esi]
  40a198:	xchg   ebp,eax
  40a199:	xor    eax,0x10c07223
  40a19e:	out    dx,eax
  40a19f:	push   0x662313d0
  40a1a4:	rol    BYTE PTR [eax],0xe4
  40a1a7:	jae    0x40a145
  40a1a9:	sbb    ecx,ebp
  40a1ab:	sub    eax,0x2f6bf
  40a1b0:	mov    ch,0x86
  40a1b2:	inc    eax
  40a1b3:	inc    ebx
  40a1b4:	mov    ch,0x8f
  40a1b6:	or     DWORD PTR [esi+esi*2-0x71],ecx
  40a1ba:	jmp    0xefd056c2
  40a1bf:	xor    DWORD PTR ds:0x35856911,0xffffff8f
  40a1c6:	jmp    0x695257de
  40a1cb:	jle    0x40a204
  40a1cd:	paddusw mm0,QWORD PTR [eax]
  40a1d0:	mov    eax,0x31c12452
  40a1d5:	adc    ch,BYTE PTR [ecx+eax*1-0x4b]
  40a1d9:	(bad)  
  40a1da:	fnstenv [ebx]
  40a1dc:	xor    eax,0xb584693f
  40a1e1:	xchg   edi,eax
  40a1e2:	jmp    0x19e83412
  40a1e7:	iret   
  40a1e8:	xor    dl,BYTE PTR [eax-0x601dfc1a]
  40a1ee:	mov    ecx,0xe917f2d3
  40a1f3:	add    esi,DWORD PTR [ebp+0x8411af]
	...
  40a209:	add    BYTE PTR [eax],al
  40a20b:	add    BYTE PTR ds:0xb5046910,bh
  40a211:	(bad)
  40a215:	ja     0x40a1d8
  40a217:	jmp    0x40a1cb
  40a219:	xchg   edi,eax
  40a21a:	out    dx,al
  40a21b:	sti    
  40a21c:	loop   0x40a27d
  40a21e:	mov    dh,0xf3
  40a220:	ficom  DWORD PTR [edi-0x684afc1f]
  40a226:	jmp    0xf1cf5736
  40a22b:	add    esi,DWORD PTR [ebp-0x70fc4571]
  40a231:	pop    ecx
  40a233:	add    esi,eax
  40a235:	(bad)  
  40a236:	popf   
  40a237:	add    edi,DWORD PTR [esi-0x71]
  40a23a:	ret    0x8303
  40a23d:	(bad)  
  40a23e:	fwait
  40a23f:	add    edi,DWORD PTR [ebx-0x71]
  40a242:	add    BYTE PTR [esi-0x6effaa4a],bl
  40a248:	mov    dh,0xaa
  40a24a:	add    BYTE PTR [edx],ah
  40a24c:	mov    ecx,0xb12d00aa
  40a251:	add    BYTE PTR ds:[eax],al
  40a254:	mov    ecx,0xe50e008f
  40a259:	out    0xfe,al
  40a25b:	push   es
  40a25c:	or     eax,0xf9fe0052
  40a261:	out    0xfe,al
  40a263:	dec    edx
  40a264:	mov    ecx,0xb14b0070
  40a269:	js     0x40a26b
  40a26b:	pop    ss
  40a26c:	mov    ecx,0x15006c
	...
  40a281:	add    BYTE PTR [eax],al
  40a283:	add    BYTE PTR [ecx-0x46f2ff4b],dh
  40a289:	jae    0x40a28b
  40a28b:	std    
  40a28c:	mov    dh,0x8f
  40a28e:	add    BYTE PTR [edi],ch
  40a290:	jbe    0x40a2e9
  40a292:	inc    ebx
  40a293:	sti    
  40a294:	xchg   ebp,eax
  40a295:	outs   dx,DWORD PTR ds:[esi]
  40a296:	je     0x40a2a4
  40a298:	mov    ecx,0x7627008f
  40a29d:	push   edi
  40a29e:	inc    ecx
  40a29f:	int    0x72
  40a2a1:	dec    esp
  40a2a2:	imul   ecx,ebp,0xaffee695
  40a2a8:	ja     0x40a301
  40a2aa:	inc    esi
  40a2ab:	mov    ebp,0xaa686185
  40a2b0:	pop    ecx
  40a2b1:	jo     0x40a31c
  40a2b3:	iret   
  40a2b4:	push   ebp
  40a2b5:	bound  eax,QWORD PTR [eax]
  40a2b7:	scas   eax,DWORD PTR es:[edi]
  40a2b8:	ja     0x40a311
  40a2ba:	inc    esp
  40a2bb:	les    esp,FWORD PTR [edi+0x62]
  40a2be:	jb     0x40a256
  40a2c0:	push   ecx
  40a2c1:	out    0xfe,al
  40a2c3:	nop
  40a2c4:	imul   edx,DWORD PTR [eax+0x0],0x4f29fa
  40a2cb:	cli    
  40a2cc:	and    DWORD PTR [edi+0x0],ecx
  40a2cf:	add    BYTE PTR [ebx+edi*8],dl
  40a2d2:	aas    
  40a2d3:	add    BYTE PTR [ebp-0x3d],al
  40a2d6:	inc    eax
  40a2d7:	add    bh,bh
  40a2d9:	cli    
  40a2da:	aas    
  40a2db:	add    BYTE PTR [edi],ch
  40a2dd:	add    eax,DWORD PTR [eax+0x0]
  40a2e0:	das    
  40a2e1:	or     al,BYTE PTR [eax+0x0]
  40a2e4:	mov    ecx,0x6d8b
	...
  40a2f9:	add    BYTE PTR [eax],al
  40a2fb:	add    BYTE PTR [edx+edx*4],cl
  40a2fe:	add    BYTE PTR [eax],al
  40a300:	lods   al,BYTE PTR ds:[esi]
  40a301:	mov    ebp,DWORD PTR ds:0x8b8200
  40a307:	add    ah,bl
  40a309:	xchg   ecx,eax
  40a30a:	add    BYTE PTR [eax],al
  40a30c:	mov    ecx,0xb1006d8b
  40a311:	mov    esi,DWORD PTR [eax+0x0]
  40a314:	add    DWORD PTR [edx-0x6e23ff8d],edx
  40a31a:	add    BYTE PTR [eax],al
  40a31c:	mov    al,ds:0x9c006d8b
  40a321:	mov    eax,DWORD PTR [eax]
  40a323:	add    BYTE PTR [ecx+esi*4],cl
  40a326:	add    BYTE PTR [eax],al
  40a328:	jl     0x40a2bb
  40a32a:	add    BYTE PTR [eax],al
  40a32c:	lahf   
  40a32d:	xchg   ecx,eax
  40a32e:	push   0x6c8bb100
  40a333:	add    BYTE PTR [eax-0x6f],ch
  40a336:	xor    eax,DWORD PTR [eax]
  40a338:	scas   al,BYTE PTR es:[edi]
  40a339:	mov    ebp,DWORD PTR [esi]
  40a33b:	add    BYTE PTR [eax-0x6f],dh
  40a33e:	ins    BYTE PTR es:[edi],dx
  40a33f:	add    BYTE PTR [eax],bh
  40a341:	xchg   ecx,eax
  40a342:	add    BYTE PTR [eax],al
  40a344:	dec    edi
  40a345:	fld    DWORD PTR [ebp+0x65]
  40a348:	and    al,bl
  40a34a:	ins    BYTE PTR es:[edi],dx
  40a34b:	outs   dx,DWORD PTR ds:[esi]
  40a34c:	and    ebp,ebx
  40a34e:	inc    esp
  40a34f:	outs   dx,DWORD PTR ds:[esi]
  40a350:	sbb    ch,al
  40a352:	arpl   WORD PTR [edx+0xc],si
  40a355:	bnd jb 0x40a3c0
  40a358:	pop    esp
  40a359:	xchg   ecx,eax
  40a35a:	add    BYTE PTR [eax],al
  40a35c:	mov    ch,0x23
  40a35e:	mov    edi,0x41
	...
  40a373:	add    BYTE PTR [ebp-0x4abf5c15],dh
  40a379:	repz mov ds:0xa3ebb540,eax
  40a37f:	inc    eax
  40a380:	mov    ch,0x3
  40a382:	mov    edi,0xa3ebb541
  40a387:	inc    eax
  40a388:	mov    ch,0xa3
  40a38a:	rol    BYTE PTR [ecx-0x4b],0x3a
  40a38e:	lods   eax,DWORD PTR ds:[esi]
  40a38f:	inc    ecx
  40a390:	mov    ch,0x58
  40a392:	loope  0x40a3f7
  40a394:	xchg   ebx,eax
  40a395:	dec    ebp
  40a396:	in     al,dx
  40a397:	imul   ebx,DWORD PTR [esi+0x3a],0xa7656de7
  40a39e:	bnd jb 0x40a40a
  40a3a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3a2:	in     eax,dx
  40a3a3:	ja     0x40a404
  40a3a5:	push   edi
  40a3a6:	fild   QWORD PTR [eax+0x62]
  40a3a9:	cmp    ebx,0xffffffff
  40a3ac:	retf   0xf07e
  40a3af:	jae    0x40a3f6
  40a3b1:	shl    BYTE PTR [ebx],0x2f
  40a3b4:	inc    edx
  40a3b5:	jge    0x40a3a4
  40a3b7:	sub    eax,0x66e68017
  40a3bc:	fistp  DWORD PTR [ecx-0x92d931b]
  40a3c2:	add    al,BYTE PTR [eax]
  40a3c4:	mov    ch,0x8e
  40a3c6:	lock jae 0x40a3ce
  40a3c9:	mov    cl,0x25
  40a3cb:	das    
  40a3cc:	add    bh,BYTE PTR [esi-0x31e5d215]
  40a3d2:	jecxz  0x40a43a
  40a3d4:	or     esp,ecx
  40a3d6:	and    al,0x63
	...
  40a3ec:	loop   0x40a3a9
  40a3ee:	and    eax,DWORD PTR [eax]
  40a3f0:	mov    ch,0x7a
  40a3f2:	les    edi,FWORD PTR [edi]
  40a3f4:	mov    ch,0x5a
  40a3f6:	les    edi,FWORD PTR [edi]
  40a3f8:	mov    ch,0xd1
  40a3fa:	add    ah,BYTE PTR [ebp-0x4b]
  40a3fd:	(bad)  
  40a3fe:	fwait
  40a3ff:	add    ebx,ebx
  40a401:	pop    DWORD PTR [ebx+eax*1+0x3da8fd1]
  40a408:	xchg   DWORD PTR [edi-0x7066fc41],ecx
  40a40e:	xchg   ebp,eax
  40a40f:	add    ebx,DWORD PTR [ecx-0x4afc1671]
  40a415:	(bad)  
  40a416:	scas   al,BYTE PTR es:[edi]
  40a417:	fisub  WORD PTR [esi-0x691b84c1]
  40a41d:	pop    edx
  40a41e:	dec    edx
  40a41f:	clc    
  40a420:	jge    0x40a497
  40a422:	inc    edi
  40a423:	jecxz  0x40a427
  40a425:	in     al,0xe7
  40a427:	add    eax,0x3e98fb5
  40a42c:	mov    ch,0x8f
  40a42e:	jmp    0x40a435
  40a430:	mov    ch,0x8f
  40a432:	jmp    0x40a437
  40a434:	mov    ch,0x8f
  40a436:	call   0xe5d0593f
  40a43b:	add    esi,DWORD PTR [ebp-0x4afb1471]
  40a441:	(bad)  
  40a442:	out    0x3,eax
  40a444:	mov    ch,0x8f
  40a446:	call   0xe8cf584f
  40a44b:	add    al,0xb4
  40a44d:	nop
  40a44e:	call   0x40a457
	...
  40a463:	add    BYTE PTR [eax+edx*4-0x714bfb18],dh
  40a46a:	jmp    0xb404:0xe890b404
  40a471:	nop
  40a472:	call   0xebd1587c
  40a477:	add    eax,0x5eb8db7
  40a47c:	mov    bh,0x8d
  40a47e:	jmp    0x40a487
  40a480:	mov    ecx,0xb705eb8b
  40a485:	mov    ebp,ebx
  40a487:	add    eax,0xeb008db7
  40a48c:	mov    al,0x8b
  40a48e:	add    al,0xe5
  40a490:	mov    eax,0xb0ed028d
  40a495:	lea    eax,[edx]
  40a497:	jmp    0x40a451
  40a499:	lea    eax,[ebp*8-0x14fd724e]
  40a4a0:	mov    edx,0xb1e80190
  40a4a5:	nop
  40a4a6:	add    esp,esp
  40a4a8:	lods   eax,DWORD PTR ds:[esi]
  40a4a9:	mov    al,0x21
  40a4ab:	jmp    0xea473363
  40a4b0:	mov    ebx,0xb3ea038e
  40a4b5:	mov    es,WORD PTR [ebx]
  40a4b7:	jmp    0x8cb3:0xea058ebb
  40a4be:	add    ebp,edx
  40a4c0:	mov    ebx,0xb1e8038e
  40a4c5:	nop
  40a4c6:	add    ebp,eax
	...
  40a4dc:	mov    ebx,0xb3e80390
  40a4e1:	nop
  40a4e2:	add    eax,ebp
  40a4e4:	mov    ebx,0xb1200090
  40a4e9:	pop    DWORD PTR [eax]
  40a4eb:	or     DWORD PTR [edi],esi
  40a4ed:	dec    esi
  40a4ee:	add    BYTE PTR [ebx],dl
  40a4f0:	mov    cl,0x8f
  40a4f2:	add    BYTE PTR [eax],al
  40a4f4:	aaa    
  40a4f5:	dec    ebp
  40a4f6:	add    BYTE PTR [edx],al
  40a4f8:	mov    cl,0x8f
  40a4fa:	add    BYTE PTR [eax],dl
  40a4fc:	aaa    
  40a4fd:	dec    ebp
  40a4fe:	add    ch,dh
  40a500:	mov    dh,0x8f
  40a502:	add    al,ah
  40a504:	adc    ecx,DWORD PTR [esi+0x0]
  40a507:	in     al,0xb6
  40a509:	pop    DWORD PTR [eax]
  40a50b:	adc    DWORD PTR [edx],eax
  40a50d:	dec    esi
  40a50e:	add    bh,dl
  40a510:	mov    dh,0x8f
  40a512:	add    BYTE PTR [esi+0x4df3],ah
  40a518:	jae    0x40a4a8
  40a51a:	add    BYTE PTR [eax],al
  40a51c:	adc    al,0x61
  40a51e:	inc    edx
  40a51f:	add    ah,cl
  40a521:	mov    es,WORD PTR [eax]
  40a523:	add    BYTE PTR [esi],cl
  40a525:	adc    BYTE PTR [edx+0x0],al
  40a528:	fisttp QWORD PTR [esi+0x10ac0000]
  40a52e:	inc    edx
  40a52f:	add    dh,cl
  40a531:	mov    es,WORD PTR [eax]
  40a533:	add    BYTE PTR [ecx-0x60ffbdf3],ch
  40a539:	mov    es,WORD PTR [eax]
  40a53b:	add    BYTE PTR [edx+0x420d],al
	...
  40a551:	add    BYTE PTR [eax],al
  40a553:	add    BYTE PTR [eax+0x3500008e],cl
  40a559:	popa   
  40a55a:	inc    edx
  40a55b:	add    BYTE PTR [ecx+0x4c00008b],bl
  40a561:	cmovb  eax,DWORD PTR [eax]
  40a564:	mov    cl,BYTE PTR [ebx+0xf160000]
  40a56a:	inc    edx
  40a56b:	add    BYTE PTR [ebx-0x75],bl
  40a56e:	add    BYTE PTR [eax],al
  40a570:	inc    ecx
  40a571:	cmovb  eax,DWORD PTR [eax]
  40a574:	push   esp
  40a575:	mov    eax,DWORD PTR [eax]
  40a577:	add    cl,bh
  40a579:	push   cs
  40a57a:	inc    edx
  40a57b:	add    BYTE PTR [ebp-0x75],al
  40a57e:	add    BYTE PTR [eax],al
  40a580:	jmp    0x40a5e2
  40a582:	inc    edx
  40a583:	add    BYTE PTR [esi-0x75],dl
  40a586:	add    BYTE PTR [eax],al
  40a588:	aam    0x60
  40a58a:	inc    edx
  40a58b:	add    BYTE PTR [edi],ah
  40a58d:	mov    WORD PTR [eax],es
  40a58f:	add    ch,dl
  40a591:	pusha  
  40a592:	inc    edx
  40a593:	add    BYTE PTR [eax],dl
  40a595:	mov    WORD PTR [eax],es
  40a597:	add    BYTE PTR [edi+ecx*1+0x42],ch
  40a59b:	add    BYTE PTR [ecx],al
  40a59d:	mov    WORD PTR [eax],es
  40a59f:	add    BYTE PTR [eax+0xf],dl
  40a5a2:	inc    edx
  40a5a3:	add    BYTE PTR [ebp-0x4afffb98],dh
  40a5a9:	sbb    BYTE PTR [ecx-0x7ff14abe],al
  40a5af:	inc    eax
  40a5b0:	mov    ch,0xdf
  40a5b2:	add    al,BYTE PTR [eax]
  40a5b4:	mov    ch,0xf7
  40a5b6:	add    al,BYTE PTR [eax]
	...
  40a5cc:	mov    ch,0xe
  40a5ce:	add    BYTE PTR [eax-0x4b],0xf0
  40a5d2:	add    al,BYTE PTR [eax]
  40a5d4:	mov    ch,0xfe
  40a5d6:	add    al,BYTE PTR [eax]
  40a5d8:	mov    ch,0x76
  40a5da:	add    BYTE PTR [eax-0x4b],0xe4
  40a5de:	add    al,BYTE PTR [eax]
  40a5e0:	mov    ch,0xee
  40a5e2:	add    al,BYTE PTR [eax]
  40a5e4:	mov    ch,0x2
  40a5e6:	jg     0x40a628
  40a5e8:	mov    ch,0xc6
  40a5ea:	add    al,BYTE PTR [eax]
  40a5ec:	mov    ch,0xbe
  40a5ee:	add    al,BYTE PTR [eax]
  40a5f0:	mov    ch,0x9e
  40a5f2:	add    BYTE PTR [eax-0x4b],0xdf
  40a5f6:	add    al,BYTE PTR [eax]
  40a5f8:	mov    ch,0xde
  40a5fa:	add    al,BYTE PTR [eax]
  40a5fc:	mov    ch,0xe2
  40a5fe:	jle    0x40a640
  40a600:	mov    ch,0xdb
  40a602:	add    al,BYTE PTR [eax]
  40a604:	mov    ch,0xea
  40a606:	add    al,BYTE PTR [eax]
  40a608:	mov    ch,0xee
  40a60a:	clc    
  40a60b:	inc    edx
  40a60c:	mov    ch,0xf6
  40a60e:	add    al,BYTE PTR [eax]
  40a610:	mov    ch,0xf6
  40a612:	add    al,BYTE PTR [eax]
  40a614:	mov    ch,0xe4
  40a616:	add    eax,0x63cb541
  40a61b:	inc    ecx
  40a61c:	mov    ch,0xf6
  40a61e:	add    al,BYTE PTR [eax]
  40a620:	mov    ch,0xdd
  40a622:	or     BYTE PTR [ecx-0x4b],al
  40a625:	iret   
  40a626:	or     BYTE PTR [ecx-0x4b],al
  40a629:	mov    DWORD PTR [edx],0x7ab2b53d
  40a62f:	inc    eax
	...
  40a644:	mov    ch,0x8f
  40a646:	and    eax,0x958fb804
  40a64b:	jp     0x40a642
  40a64d:	(bad)  
  40a64e:	adc    al,BYTE PTR [edx+eiz*4]
  40a651:	(bad)  
  40a652:	gs jp  0x40a64a
  40a655:	(bad)  
  40a656:	std    
  40a657:	add    edi,DWORD PTR [eax-0xa854271]
  40a65d:	(bad)  
  40a65e:	sbb    DWORD PTR [ebx],eax
  40a660:	mov    eax,0xf57ab58f
  40a665:	(bad)  
  40a666:	mov    WORD PTR [ebx],es
  40a668:	mov    bl,0x8f
  40a66a:	test   DWORD PTR [edx-0xb],edi
  40a66d:	(bad)  
  40a66e:	fadd   DWORD PTR [ebx]
  40a670:	leave  
  40a671:	(bad)  
  40a672:	popf   
  40a673:	jp     0x40a6ea
  40a675:	pop    DWORD PTR [ecx-0x567053fd]
  40a67b:	jp     0x40a6f2
  40a67d:	(bad)  
  40a67e:	in     al,dx
  40a67f:	add    edi,DWORD PTR [ebx+0x757ab18f]
  40a685:	(bad)  
  40a686:	pop    eax
  40a687:	add    al,0xb8
  40a689:	(bad)  
  40a68a:	sbb    DWORD PTR [ebp+0x75],edi
  40a68d:	(bad)  
  40a68e:	cmp    BYTE PTR [esi+esi*4],al
  40a691:	(bad)  
  40a692:	std    
  40a693:	jl     0x40a70a
  40a695:	(bad)  
  40a696:	mov    eax,DWORD PTR [esi+eax*8]
  40a699:	(bad)  
  40a69a:	loope  0x40a718
  40a69c:	jne    0x40a62d
  40a69e:	popf   
  40a69f:	add    al,0xbf
  40a6a1:	(bad)  
  40a6a2:	fnstsw WORD PTR [ebp+esi*2-0x71]
  40a6a6:	and    eax,0x4
	...
  40a6bb:	add    BYTE PTR [ebx+0x757ce58f],bh
  40a6c1:	(bad)  
  40a6c2:	rol    DWORD PTR [ebx],cl
  40a6c4:	mov    ebx,0xf57c8d8f
  40a6c9:	(bad)  
  40a6ca:	stc    
  40a6cb:	add    ebp,DWORD PTR [edi+ecx*4-0x700a8387]
  40a6d2:	add    BYTE PTR [ecx+edi*4-0x6d],bh
  40a6d6:	add    BYTE PTR [ecx+0x4d005009],al
  40a6dc:	mov    ecx,0xf93d0087
  40a6e1:	dec    edi
  40a6e2:	add    bh,bh
  40a6e4:	mov    dh,0x8d
  40a6e6:	add    BYTE PTR ds:0xa0004fe9,bl
  40a6ec:	mov    dh,0x92
  40a6ee:	add    BYTE PTR [ecx],dh
  40a6f0:	(bad)  [edi+0x0]
  40a6f3:	or     bh,BYTE PTR [ecx-0x36d6ff6d]
  40a6f9:	dec    edi
  40a6fa:	add    BYTE PTR [ebx+0x550088b6],bh
  40a700:	mov    ecx,0xb956004f
  40a705:	lahf   
  40a706:	add    BYTE PTR [ecx-0x57],ch
  40a709:	dec    edi
  40a70a:	add    ah,bl
  40a70c:	mov    dh,0x96
  40a70e:	add    BYTE PTR [ecx+0x25004f9e],al
  40a714:	mov    ecx,0x8e7d0088
  40a719:	dec    edi
  40a71a:	add    BYTE PTR [edi+0x490089b6],cl
	...
  40a734:	jns    0x40a785
  40a736:	add    dl,al
  40a738:	mov    dh,0x81
  40a73a:	add    BYTE PTR ds:0x5f004f69,bl
  40a740:	mov    dh,0xaf
  40a742:	add    BYTE PTR [ecx],dl
  40a744:	pop    ecx
  40a745:	dec    edi
  40a746:	add    BYTE PTR [esi+esi*4+0x49090093],ch
  40a74d:	dec    edi
  40a74e:	add    BYTE PTR [esi],dh
  40a750:	mov    ecx,0x339d00b0
  40a755:	push   eax
  40a756:	add    BYTE PTR [eax-0x4a],dl
  40a759:	mov    eax,ds:0x4f33a100
  40a75e:	add    BYTE PTR [eax],al
  40a760:	mov    dh,0x93
  40a762:	and    al,BYTE PTR [eax]
  40a764:	lock adc eax,0x92460040
  40a76a:	or     al,0x0
  40a76c:	loopne 0x40a783
  40a76e:	inc    eax
  40a76f:	add    ch,dh
  40a771:	xchg   edx,eax
  40a772:	sbb    eax,DWORD PTR [eax]
  40a774:	xchg   esp,eax
  40a775:	adc    eax,0x922f0040
  40a77a:	(bad)  
  40a77c:	je     0x40a793
  40a77e:	inc    eax
  40a77f:	add    BYTE PTR [ecx],al
  40a781:	xchg   ebx,eax
  40a782:	or     BYTE PTR [eax],al
  40a784:	cmp    BYTE PTR ds:0x92cf0040,dl
  40a78a:	add    eax,0x40152000
  40a78f:	add    BYTE PTR [ebx],dh
  40a791:	xchg   edx,eax
  40a792:	add    al,BYTE PTR [eax]
  40a794:	cld    
  40a795:	adc    al,0x40
	...
  40a7ab:	add    BYTE PTR [edi+0x4001492],ch
  40a7b1:	adc    eax,0x922e0040
  40a7b6:	adc    DWORD PTR [eax],eax
  40a7b8:	lock adc al,0x40
  40a7bb:	add    BYTE PTR [ecx],dl
  40a7bd:	xchg   ecx,eax
  40a7be:	adc    DWORD PTR [eax],eax
  40a7c0:	in     al,dx
  40a7c1:	adc    al,0x40
  40a7c3:	add    BYTE PTR [ebx-0x6d],al
  40a7c6:	pop    es
  40a7c7:	add    BYTE PTR [ebx+edx*1],al
  40a7ca:	inc    eax
  40a7cb:	add    BYTE PTR [ecx],ah
  40a7cd:	xchg   ebx,eax
  40a7ce:	push   cs
  40a7cf:	add    BYTE PTR [edx*1-0x6ce2ffc0],al
  40a7d6:	or     al,0x0
  40a7d8:	add    al,0x15
  40a7da:	inc    eax
  40a7db:	add    BYTE PTR [esi-0x6d],ah
  40a7de:	add    al,0x0
  40a7e0:	cld    
  40a7e1:	adc    al,0x40
  40a7e3:	add    BYTE PTR [ecx],dl
  40a7e5:	xchg   ebx,eax
  40a7e6:	pop    es
  40a7e7:	add    ah,dh
  40a7e9:	adc    al,0x40
  40a7eb:	add    BYTE PTR [ebp-0x4af2fd3f],dh
  40a7f1:	xchg   BYTE PTR cs:[eax-0x4b],al
  40a7f5:	in     eax,0x2
  40a7f7:	or     BYTE PTR [ebp-0x4abf7966],dh
  40a7fd:	or     eax,DWORD PTR [eax+ecx*1]
  40a800:	mov    ch,0x96
  40a802:	xchg   BYTE PTR [eax-0x4b],al
  40a805:	pop    DWORD PTR [edi+eax*1]
  40a808:	mov    ch,0xfe
  40a80a:	test   DWORD PTR [eax-0x4b],eax
  40a80d:	inc    DWORD PTR [ebx]
  40a80f:	adc    eax,0x0
	...
  40a824:	mov    ch,0x56
  40a826:	xchg   BYTE PTR [eax-0x4b],al
  40a829:	pop    esi
  40a82a:	add    al,0xb
  40a82c:	mov    ch,0x72
  40a82e:	xchg   BYTE PTR [eax-0x4b],al
  40a831:	pop    es
  40a832:	add    al,0xb
  40a834:	mov    ch,0x1e
  40a836:	test   DWORD PTR [eax-0x4b],eax
  40a839:	add    edx,DWORD PTR es:[edx]
  40a83c:	mov    ch,0x12
  40a83e:	test   DWORD PTR [eax-0x4b],eax
  40a841:	ret    
  40a842:	add    cl,BYTE PTR [ecx]
  40a844:	mov    ch,0x1e
  40a846:	test   DWORD PTR [eax-0x4b],eax
  40a849:	cmp    al,0x4
  40a84b:	adc    esi,DWORD PTR [ebp-0x4abf7ace]
  40a851:	mov    bl,0x4
  40a853:	or     BYTE PTR [ebp-0x4abf7ae2],dh
  40a859:	sub    al,0x3
  40a85b:	lgs    edi,FWORD PTR [esi-0x7a]
  40a85f:	inc    eax
  40a860:	mov    ch,0xd4
  40a862:	add    al,BYTE PTR [edi]
  40a864:	mov    ch,0x86
  40a866:	xchg   BYTE PTR [eax-0x4b],al
  40a869:	mov    al,BYTE PTR [esp+ecx*1]
  40a86c:	mov    ch,0xb6
  40a86e:	test   BYTE PTR [eax-0x4b],al
  40a871:	rol    BYTE PTR [edx],cl
  40a873:	or     DWORD PTR [ebp-0x4abf7b0e],esi
  40a879:	(bad)  
  40a87a:	dec    ebp
  40a87b:	add    ebp,DWORD PTR [edi-0xa795e71]
  40a881:	(bad)  
  40a882:	ss add al,0xb1
  40a885:	(bad)  
  40a886:	cdq    
  40a887:	xchg   BYTE PTR [eax],al
	...
  40a899:	add    BYTE PTR [eax],al
  40a89b:	add    ch,dh
  40a89d:	(bad)  
  40a89e:	adc    BYTE PTR [ebx+esi*8],al
  40a8a1:	mov    ss,WORD PTR [ecx-0x79]
  40a8a4:	cmc    
  40a8a5:	(bad)  
  40a8a6:	cmp    al,0x3
  40a8a8:	loopne 0x40a839
  40a8aa:	sbb    DWORD PTR [eax+0x39b8ff5],ecx
  40a8b0:	int3   
  40a8b1:	pop    DWORD PTR ds:0xbf8ff588
  40a8b7:	add    edi,DWORD PTR [edi-0xa780e71]
  40a8bd:	(bad)  
  40a8be:	pop    ebx
  40a8bf:	add    esp,DWORD PTR [esi-0xa7fba71]
  40a8c5:	(bad)  
  40a8c6:	xor    BYTE PTR [ebx],al
  40a8c8:	mov    dl,0x8f
  40a8ca:	or     eax,0x268ff580
  40a8cf:	add    ebp,DWORD PTR [edi+ecx*4-0x708a7fc7]
  40a8d6:	rol    BYTE PTR [ebx],1
  40a8d8:	(bad)  [edi-0x708a7fb7]
  40a8de:	popa   
  40a8df:	add    ebp,DWORD PTR [ecx+0x7580598f]
  40a8e5:	pop    DWORD PTR [eax-0x5e708efd]
  40a8eb:	xor    BYTE PTR [ebp-0x71],0xfa
  40a8ef:	add    esi,DWORD PTR [ecx+0x7587298f]
  40a8f5:	pop    DWORD PTR [edx]
  40a8f7:	add    al,0xb1
  40a8f9:	(bad)  
  40a8fa:	adc    DWORD PTR [edi+0x4b58f75],eax
	...
  40a914:	scas   eax,DWORD PTR es:[edi]
  40a915:	(bad)  
  40a916:	or     eax,0x8f7587
  40a91b:	(bad)  
  40a91c:	mov    cl,0x95
  40a91e:	add    BYTE PTR ds:0x7d004f3a,al
  40a924:	mov    cl,0xb5
  40a926:	add    BYTE PTR [ebp-0x30ffafc5],bl
  40a92c:	mov    dh,0x94
  40a92e:	add    BYTE PTR [ebp+0x5300503b],dl
  40a934:	mov    cl,0x92
  40a936:	add    BYTE PTR [ebp+0x1300503b],cl
  40a93c:	mov    cl,0x8e
  40a93e:	add    BYTE PTR [ecx+0x7e00503b],al
  40a944:	mov    cl,0x82
  40a946:	add    BYTE PTR [ecx],bh
  40a948:	cmp    edx,DWORD PTR [eax+0x0]
  40a94b:	aas    
  40a94c:	mov    cl,0x8a
  40a94e:	add    BYTE PTR [ecx],ch
  40a950:	cmp    edx,DWORD PTR [eax+0x0]
  40a953:	mov    esi,DWORD PTR [ecx+0x3b810094]
  40a959:	push   eax
  40a95a:	add    bl,dl
  40a95c:	mov    dh,0x83
  40a95e:	add    BYTE PTR [ecx-0x6effafc5],cl
  40a964:	mov    dh,0x79
  40a966:	add    BYTE PTR [ecx+0x3b],ch
  40a969:	push   eax
  40a96a:	add    BYTE PTR [esi],bl
  40a96c:	mov    cl,0x92
  40a96e:	add    BYTE PTR [ecx+0x44005038],dl
  40a974:	mov    cl,0x7f
  40a976:	add    BYTE PTR [ebp+0x0],al
	...
  40a98c:	cmp    BYTE PTR [eax+0x0],dl
  40a98f:	call   0x5038:0x8d0091b6
  40a996:	add    BYTE PTR [ebp-0x4f],bl
  40a999:	mov    es,WORD PTR [eax]
  40a99b:	inc    ecx
  40a99c:	cmp    edx,DWORD PTR [eax+0x0]
  40a99f:	imul   esi,DWORD PTR [esi+0x3b0100aa],0x50
  40a9a6:	add    BYTE PTR [eax],al
  40a9a8:	mov    DWORD PTR [ebx+0x14ec0017],edx
  40a9ae:	inc    eax
  40a9af:	add    BYTE PTR [ebx],cl
  40a9b1:	(bad)  
  40a9b2:	sbb    al,BYTE PTR [eax]
  40a9b4:	or     BYTE PTR [eax+eax*2],dl
  40a9b7:	add    dh,al
  40a9b9:	mov    cs,WORD PTR [edi]
  40a9bb:	add    BYTE PTR [eax],bh
  40a9bd:	adc    eax,DWORD PTR [eax+0x0]
  40a9c0:	mov    DWORD PTR [esi+0x13400014],ecx
  40a9c6:	inc    eax
  40a9c7:	add    BYTE PTR [esi+ecx*4+0x1f],cl
  40a9cb:	add    BYTE PTR [eax],al
  40a9cd:	adc    al,0x40
  40a9cf:	add    BYTE PTR ds:0x1800248e,dh
  40a9d5:	adc    al,0x40
  40a9d7:	add    BYTE PTR [esi+ecx*4+0xa],bl
  40a9db:	add    BYTE PTR [ebx+edx*1+0x40],dl
  40a9df:	add    BYTE PTR [esi+0x7c00048e],ah
  40a9e5:	adc    eax,DWORD PTR [eax+0x0]
  40a9e8:	cmp    al,0x8e
  40a9ea:	add    al,0x0
  40a9ec:	adc    eax,DWORD PTR fs:[eax+0x0]
	...
  40aa04:	or     cl,BYTE PTR [esi+0x1324000c]
  40aa0a:	inc    eax
  40aa0b:	add    BYTE PTR [ebp+0x5800118e],cl
  40aa11:	adc    eax,DWORD PTR [eax+0x0]
  40aa14:	jp     0x40a9a4
  40aa16:	push   cs
  40aa17:	add    BYTE PTR [eax],cl
  40aa19:	adc    eax,DWORD PTR [eax+0x0]
  40aa1c:	loope  0x40a9ac
  40aa1e:	or     al,0x0
  40aa20:	clc    
  40aa21:	adc    al,BYTE PTR [eax+0x0]
  40aa24:	popf   
  40aa25:	mov    ss,WORD PTR [edx]
  40aa27:	add    ah,bl
  40aa29:	adc    al,BYTE PTR [eax+0x0]
  40aa2c:	jns    0x40a9c1
  40aa2e:	push   ds
  40aa2f:	add    BYTE PTR [ebx+edx*1],cl
  40aa32:	inc    eax
  40aa33:	add    BYTE PTR [ebp-0x4acefd1a],dh
  40aa39:	or     al,0x84
  40aa3b:	inc    eax
  40aa3c:	mov    ch,0x94
  40aa3e:	add    al,0x9
  40aa40:	mov    ch,0x58
  40aa42:	test   BYTE PTR [eax-0x4b],al
  40aa45:	xchg   esp,eax
  40aa46:	add    al,0xc
  40aa48:	mov    ch,0x8
  40aa4a:	test   BYTE PTR [eax-0x4b],al
  40aa4d:	jo     0x40aa53
  40aa4f:	or     al,0xb5
  40aa51:	push   esi
  40aa52:	test   BYTE PTR [eax-0x4b],al
  40aa55:	fwait
  40aa56:	add    al,0x7
  40aa58:	mov    ch,0x6e
  40aa5a:	test   BYTE PTR [eax-0x4b],al
  40aa5d:	add    BYTE PTR [esp+edx*1],al
  40aa60:	mov    ch,0xd6
  40aa62:	add    BYTE PTR [eax-0x4b],0x70
  40aa66:	add    al,0x4
	...
  40aa7c:	mov    ch,0x8e
  40aa7e:	test   BYTE PTR [eax-0x4b],al
  40aa81:	pop    ebx
  40aa82:	add    al,0x4
  40aa84:	mov    ch,0xc6
  40aa86:	add    BYTE PTR [eax-0x4b],0xc9
  40aa8a:	add    al,BYTE PTR [esi*4-0x4abf7ce2]
  40aa91:	ds add al,0x6
  40aa94:	mov    ch,0xf6
  40aa96:	add    BYTE PTR [eax-0x4b],0x93
  40aa9a:	add    al,0xc
  40aa9c:	mov    ch,0x26
  40aa9e:	add    DWORD PTR [eax-0x4b],0xffffffdf
  40aaa2:	add    al,BYTE PTR [esi*4-0x4abf7d12]
  40aaa9:	xlat   BYTE PTR ds:[ebx]
  40aaaa:	add    bl,BYTE PTR [esi]
  40aaac:	mov    ch,0xde
  40aaae:	add    BYTE PTR [eax-0x4b],0x2f
  40aab2:	add    eax,DWORD PTR [edi]
  40aab4:	mov    ch,0xb6
  40aab6:	add    BYTE PTR [eax-0x4b],0xd
  40aaba:	add    ecx,DWORD PTR [edi]
  40aabc:	mov    ch,0xe6
  40aabe:	add    BYTE PTR [eax-0x4b],0x8f
  40aac2:	push   0x3
  40aac4:	mov    esi,0xaae8d58f
  40aac9:	(bad)  
  40aaca:	xor    BYTE PTR [esp+ebp*4],al
  40aacd:	pop    ecx
  40aacf:	call   0x3ae3a6e
  40aad4:	ror    BYTE PTR [edi-0x7075175f],0x1
  40aadb:	add    al,0xaf
  40aadd:	(bad)  
  40aade:	popf   
  40aadf:	call   0x40aae4
	...
  40aaf4:	jp     0x40aa85
  40aaf6:	scas   al,BYTE PTR es:[edi]
  40aaf7:	add    eax,eax
  40aaf9:	(bad)  
  40aafa:	pop    ebp
  40aafb:	call   0x3b93aea
  40ab00:	retf   
  40ab01:	pop    DWORD PTR [ebp-0x18]
  40ab04:	fimul  DWORD PTR [edi-0x7057fc5a]
  40ab0a:	ins    DWORD PTR es:[edi],dx
  40ab0b:	call   0x3763ada
  40ab10:	test   eax,0xbae8f58f
  40ab15:	(bad)  
  40ab16:	adc    al,BYTE PTR [edx+eax*8]
  40ab19:	pop    ebp
  40ab1b:	call   0x36f3aca
  40ab20:	mov    cl,0x8f
  40ab22:	mov    ch,0xe8
  40ab24:	call   0xb18f:0xbe039e8f
  40ab2b:	call   0x36e3aba
  40ab30:	mov    cl,0x8f
  40ab32:	icebp  
  40ab33:	call   0x34d3ab2
  40ab38:	lds    ecx,FWORD PTR [edi-0x7015173b]
  40ab3e:	test   BYTE PTR [ebx],al
  40ab40:	(bad)  
  40ab41:	(bad)  
  40ab42:	stc    
  40ab43:	call   0x3453b22
  40ab48:	ret    
  40ab49:	(bad)
  40ab4d:	pop    DWORD PTR [eax]
  40ab4f:	cld    
  40ab50:	mov    bh,0x7e
  40ab52:	add    ch,bh
  40ab54:	or     eax,0x840098
	...
  40ab69:	add    BYTE PTR [eax],al
  40ab6b:	add    BYTE PTR [ecx-0x2c42ff77],bh
  40ab71:	xchg   edi,eax
  40ab72:	add    BYTE PTR [ecx],bh
  40ab74:	mov    ecx,0xd3a1007f
  40ab79:	xchg   edi,eax
  40ab7a:	add    BYTE PTR [ebx],ch
  40ab7c:	mov    ecx,0xd375007e
  40ab81:	xchg   edi,eax
  40ab82:	add    BYTE PTR [edi-0x47],bh
  40ab85:	add    BYTE PTR [eax],0x4d
  40ab88:	rcl    DWORD PTR [edi+0x7bb6d100],cl
  40ab8e:	add    BYTE PTR [ebp-0x6d],ah
  40ab91:	xchg   edi,eax
  40ab92:	add    BYTE PTR [esi],dh
  40ab94:	mov    ecx,0x90fd007e
  40ab99:	xchg   edi,eax
  40ab9a:	add    BYTE PTR [edx],bl
  40ab9c:	mov    ecx,0x93210081
  40aba1:	xchg   edi,eax
  40aba2:	add    BYTE PTR [ecx+edi*4],bl
  40aba5:	ja     0x40aba7
  40aba7:	lods   eax,DWORD PTR ds:[esi]
  40aba8:	nop
  40aba9:	xchg   edi,eax
  40abaa:	add    BYTE PTR [eax-0x47],bl
  40abad:	js     0x40abaf
  40abaf:	or     DWORD PTR [ebx-0x69],edx
  40abb2:	add    BYTE PTR [ecx-0x47],ch
  40abb5:	mov    dl,0x0
  40abb7:	dec    ebp
  40abb8:	dec    esp
  40abb9:	xchg   edi,eax
  40abba:	add    BYTE PTR [eax+0x1500acb9],cl
  40abc0:	pop    esp
  40abc1:	xchg   edi,eax
  40abc2:	add    bh,al
  40abc4:	mov    dh,0x7a
  40abc6:	add    BYTE PTR [ecx+0x4c],dh
  40abc9:	xchg   edi,eax
  40abca:	add    BYTE PTR [ebx+0x550092b6],bl
	...
  40abe4:	sbb    al,0x97
  40abe6:	add    BYTE PTR [esi+0x3d008eb6],ch
  40abec:	or     al,0x97
  40abee:	add    BYTE PTR [eax],al
  40abf0:	ret    0x78b
  40abf3:	add    BYTE PTR [eax-0x18],dh
  40abf6:	add    BYTE PTR ds:[edx-0x6d],cl
  40abfa:	sbb    al,0x0
  40abfc:	nop
  40abfd:	call   0x8b95ac40
  40ac02:	pop    es
  40ac03:	add    BYTE PTR [eax+0xd003ee8],cl
  40ac09:	xchg   ebx,eax
  40ac0a:	or     al,BYTE PTR [eax]
  40ac0c:	jl     0x40abf6
  40ac0e:	ds add bh,al
  40ac11:	xchg   edx,eax
  40ac12:	dec    esp
  40ac13:	add    BYTE PTR [eax+ebp*8-0x6d2dffc2],bh
  40ac1a:	and    al,BYTE PTR [eax]
  40ac1c:	add    al,0xef
  40ac1e:	add    BYTE PTR ds:[ebx+edx*4],al
  40ac22:	add    BYTE PTR cs:[esi+ebp*8+0x3e],ah
  40ac27:	add    BYTE PTR [eax-0x6e],ah
  40ac2a:	add    al,0x0
  40ac2c:	dec    esp
  40ac2d:	out    dx,al
  40ac2e:	add    BYTE PTR ds:[edi],bl
  40ac31:	xchg   ebx,eax
  40ac32:	adc    eax,DWORD PTR [eax]
  40ac34:	clc    
  40ac35:	out    dx,al
  40ac36:	add    BYTE PTR ds:[edx-0x6e],bl
  40ac3a:	adc    al,0x0
  40ac3c:	loopne 0x40ac2c
  40ac3e:	ds add ch,bl
  40ac41:	xchg   edx,eax
  40ac42:	push   ds
  40ac43:	add    BYTE PTR [eax+0x3eee],al
	...
  40ac59:	add    BYTE PTR [eax],al
  40ac5b:	add    dh,al
  40ac5d:	mov    ebx,DWORD PTR ds:0x3eee2000
  40ac63:	add    BYTE PTR [ebp-0x6e],ah
  40ac66:	and    BYTE PTR [eax],al
  40ac68:	dec    esp
  40ac69:	out    dx,al
  40ac6a:	add    BYTE PTR ds:[edi-0x6e],al
  40ac6e:	cmp    eax,0x3ee97c00
  40ac73:	add    ch,al
  40ac75:	xchg   edx,eax
  40ac76:	add    BYTE PTR [si+0x3ee9],ah
  40ac7b:	add    BYTE PTR [ebp-0x4afafd01],dh
  40ac81:	push   0x91b53fea
  40ac86:	add    ecx,DWORD PTR [edx]
  40ac88:	mov    ch,0x5c
  40ac8a:	jmp    0xb539:0x2fdb53f
  40ac91:	and    dl,ch
  40ac93:	aas    
  40ac94:	mov    ch,0x77
  40ac96:	add    al,0x2d
  40ac98:	mov    ch,0xe0
  40ac9a:	out    0x3f,eax
  40ac9c:	mov    ch,0xe
  40ac9e:	add    al,0x7
  40aca0:	mov    ch,0xe8
  40aca2:	out    0x3f,eax
  40aca4:	mov    ch,0x86
  40aca6:	add    al,0xc
  40aca8:	mov    ch,0x18
  40acaa:	jmp    0xb50b:0x2dcb53f
  40acb1:	int3   
  40acb2:	jmp    0x44d61f6
  40acb7:	or     esi,DWORD PTR [ebp-0x4ac01632]
  40acbd:	imul   eax,DWORD PTR [edx+ecx*1],0x0
	...
  40acd4:	mov    ch,0xf2
  40acd6:	jmp    0x2f9621a
  40acdb:	or     esi,DWORD PTR [ebp-0x4ac015da]
  40ace1:	pop    DWORD PTR [esp+ecx*1]
  40ace4:	mov    ch,0x96
  40ace6:	jmp    0xb52c:0x31fb53f
  40aced:	jmp    0x2e1:0xb53f
  40acf3:	or     esi,DWORD PTR [ebp-0x4ac01746]
  40acf9:	mov    BYTE PTR [eax+edx*1],al
  40acfc:	mov    ch,0xc6
  40acfe:	call   0x47f6242
  40ad03:	or     esi,DWORD PTR [ebp-0x4ac01706]
  40ad09:	(bad)  
  40ad0a:	jo     0x40ad10
  40ad0c:	mov    esi,0xe2e9b18f
  40ad11:	pop    DWORD PTR [ecx+0x4]
  40ad14:	mov    dl,0x8f
  40ad16:	test   eax,0x628fd2e9
  40ad1b:	add    al,0xa7
  40ad1d:	(bad)  
  40ad1e:	int    0xe9
  40ad20:	ret    0xc88f
  40ad23:	add    edx,ebx
  40ad25:	(bad)  
  40ad26:	in     eax,0xe9
  40ad28:	mov    dl,0x8f
  40ad2a:	gs add al,0xb9
  40ad2d:	(bad)  
  40ad2e:	aad    0xea
  40ad30:	mov    ds:0xc0040f8f,al
  40ad35:	(bad)  
  40ad36:	lods   eax,DWORD PTR ds:[esi]
  40ad37:	jmp    0x0:0x0
	...
  40ad4a:	add    BYTE PTR [eax],al
  40ad4c:	xchg   edx,eax
  40ad4d:	pop    DWORD PTR ds:0xad8fb804
  40ad53:	jmp    0x8fa4:0x3f08f82
  40ad5a:	jno    0x40ad46
  40ad5c:	repnz (bad) 
  40ad5e:	dec    ebx
  40ad5f:	add    edi,DWORD PTR [esi-0x1d15b271]
  40ad65:	(bad)  
  40ad66:	popf   
  40ad67:	add    edi,DWORD PTR [edx-0x2d15a271]
  40ad6d:	(bad)  
  40ad6e:	fild   DWORD PTR [ebx]
  40ad70:	mov    esp,0xc2ea698f
  40ad75:	pop    DWORD PTR [ecx+0x3]
  40ad78:	mov    dh,0x8f
  40ad7a:	in     eax,dx
  40ad7b:	jmp    0x8fb5:0x3e98fb2
  40ad82:	jmp    0xebd0628a
  40ad87:	add    esi,DWORD PTR [ebp+0x52b6098f]
  40ad8d:	aam    0xb3
  40ad8f:	add    esi,DWORD PTR [ebp-0x4afc1771]
  40ad95:	pop    DWORD PTR [eax]
  40ad97:	out    dx,eax
  40ad98:	mov    dh,0x8f
  40ad9a:	add    cl,bh
  40ad9c:	and    edx,esp
  40ad9e:	(bad)  
  40ad9f:	in     al,dx
  40ada0:	mov    dh,0x8f
  40ada2:	add    cl,bl
  40ada4:	adc    edx,esp
  40ada6:	(bad)  
  40ada7:	jmp    0xe9413d62
  40adac:	mov    dh,0x8f
  40adae:	add    cl,ch
	...
  40adc4:	mov    dh,0x8f
  40adc6:	add    cl,ch
  40adc8:	mov    dh,0x8f
  40adca:	add    cl,ch
  40adcc:	mov    dh,0x8f
  40adce:	add    cl,ch
  40add0:	mov    dh,0x8f
  40add2:	add    cl,ch
  40add4:	mov    dh,0x8f
  40add6:	add    cl,ch
  40add8:	mov    dh,0x8f
  40adda:	add    cl,ch
  40addc:	xchg   ecx,eax
  40addd:	(bad)  
  40adde:	and    eax,DWORD PTR ds:0xe927ad9c
  40ade4:	mov    dh,0xa9
  40ade6:	sub    ebp,ecx
  40ade8:	test   DWORD PTR [ebp-0x5e5e0700],esp
  40adee:	xor    esi,ebp
  40adf0:	int    0x99
  40adf2:	aaa    
  40adf3:	loope  0x40adbe
  40adf5:	pop    DWORD PTR [eax]
  40adf7:	jmp    0xe9413db2
  40adfc:	xchg   ecx,eax
  40adfd:	jno    0x40ae62
  40adff:	add    eax,0x11676d9c
  40ae04:	cwde   
  40ae05:	imul   ebp,DWORD PTR [ebx+0xd],0xf96f6584
  40ae0c:	popa   
  40ae0d:	popa   
  40ae0e:	jae    0x40ae05
  40ae10:	lea    ebx,[ebp+0x77]
  40ae13:	loope  0x40ad9e
  40ae15:	pop    ecx
  40ae16:	add    cl,ch
  40ae18:	mov    dh,0x31
  40ae1a:	pop    edi
  40ae1b:	leave  
  40ae1c:	push   ecx
  40ae1d:	jno    0x40ae82
  40ae1f:	lds    ebx,FWORD PTR [ebp+0x6d]
  40ae22:	add    BYTE PTR [si-0x1c],ah
  40ae26:	push   0x6b
	...
  40ae3b:	add    BYTE PTR [eax-0x20],dh
  40ae3e:	ins    BYTE PTR es:[edi],dx
  40ae3f:	outs   dx,DWORD PTR ds:[esi]
  40ae40:	cld    
  40ae41:	mov    ebx,0xb8687370
  40ae46:	je     0x40aebf
  40ae48:	push   esp
  40ae49:	mov    ah,0x78
  40ae4b:	add    BYTE PTR [eax-0x71],al
  40ae4e:	jle    0x40ae50
  40ae50:	or     al,0x8f
  40ae52:	add    BYTE PTR [eax],al
  40ae54:	sbb    al,0x8f
  40ae56:	add    BYTE PTR [eax],al
  40ae58:	sbb    al,0x8f
  40ae5a:	add    BYTE PTR [eax],al
  40ae5c:	or     al,0x8f
  40ae5e:	add    BYTE PTR [eax],al
  40ae60:	or     al,0x8f
  40ae62:	add    BYTE PTR [eax],al
  40ae64:	fmul   QWORD PTR [esi-0x71240000]
  40ae6a:	add    BYTE PTR [eax],al
  40ae6c:	int3   
  40ae6d:	mov    es,WORD PTR [eax]
  40ae6f:	add    ah,cl
  40ae71:	mov    es,WORD PTR [eax]
  40ae73:	add    ah,bl
  40ae75:	mov    es,WORD PTR [eax]
  40ae77:	add    ah,bl
  40ae79:	mov    es,WORD PTR [eax]
  40ae7b:	add    ah,cl
  40ae7d:	mov    es,WORD PTR [eax]
  40ae7f:	add    ah,cl
  40ae81:	mov    es,WORD PTR [eax]
  40ae83:	add    BYTE PTR [esi+ecx*4-0x71640000],bl
  40ae8a:	add    BYTE PTR [eax],al
  40ae8c:	mov    WORD PTR [esi-0x71740000],cs
  40ae92:	add    BYTE PTR [eax],al
  40ae94:	pushf  
  40ae95:	mov    es,WORD PTR [eax]
  40ae97:	add    BYTE PTR [esi+ecx*4-0x71740000],bl
	...
  40aeb2:	add    BYTE PTR [eax],al
  40aeb4:	mov    WORD PTR [esi-0x71a40000],cs
  40aeba:	add    BYTE PTR [eax],al
  40aebc:	pop    esp
  40aebd:	mov    es,WORD PTR [eax]
  40aebf:	add    BYTE PTR [esi+ecx*4+0x0],cl
  40aec3:	add    BYTE PTR [ebp-0x4afffd18],dh
  40aec9:	call   0xe8f5aed0
  40aece:	add    al,BYTE PTR [eax]
  40aed0:	mov    ch,0xe8
  40aed2:	add    al,BYTE PTR [eax]
  40aed4:	mov    ch,0xe8
  40aed6:	add    al,BYTE PTR [eax]
  40aed8:	mov    ch,0xe8
  40aeda:	add    al,BYTE PTR [eax]
  40aedc:	mov    ch,0xe8
  40aede:	add    al,BYTE PTR [eax]
  40aee0:	mov    ch,0xe8
  40aee2:	add    al,BYTE PTR [eax]
  40aee4:	mov    ch,0x79
  40aee6:	(bad)  
  40aee7:	call   DWORD PTR [edx]
  40aee9:	and    DWORD PTR [edx-0x1],0xff62890a
  40aef0:	add    dl,cl
  40aef2:	pusha  
  40aef3:	(bad)  
  40aef4:	cli    
  40aef5:	fsub   DWORD PTR [eax-0x1]
  40aef8:	repnz loopne 0x40af5b
  40aefb:	(bad)  
  40aefc:	jmp    0x60b0:0xe2ff60e8
  40af03:	(bad)  
  40af04:	fidivr DWORD PTR [eax-0x3f2d00a0]
  40af0a:	pusha  
  40af0b:	dec    edx
  40af0d:	enter  0xff60,0xc2
  40af11:	adc    BYTE PTR [ecx-0x1],ah
  40af14:	mov    edx,0x201e7
	...
  40af29:	add    BYTE PTR [eax],al
  40af2b:	add    BYTE PTR [esi-0x4df9fa16],dh
  40af31:	fimul  WORD PTR [ecx]
  40af33:	jmp    DWORD PTR [edx-0x65009f0e]
  40af39:	cli    
  40af3a:	or     eax,0x10b3c10b
  40af3f:	jp     0x8340104f
  40af45:	push   edx
  40af46:	popa   
  40af47:	(bad)  
  40af48:	jp     0x40afa4
  40af4a:	popa   
  40af4b:	push   DWORD PTR [edx+0x62]
  40af4e:	popa   
  40af4f:	jmp    FWORD PTR [edx-0x70]
  40af52:	popaw  
  40af54:	(bad)
  40af59:	rcl    DWORD PTR [ebp+0xe],1
  40af5c:	mov    esi,0xba11dc83
  40af61:	rol    BYTE PTR [ebp+0x61],1
  40af64:	inc    edx
  40af65:	sar    DWORD PTR ds:0x35d13a61,1
  40af6b:	popa   
  40af6c:	xor    dl,cl
  40af6e:	sub    eax,0x25d12a61
  40af73:	popa   
  40af74:	and    dl,cl
  40af76:	sbb    eax,0xe8d11a61
  40af7b:	add    esi,DWORD PTR [ebp-0x4afc1671]
  40af81:	(bad)
  40af85:	(bad)
  40af89:	(bad)
  40af8d:	(bad)
	...
  40afa1:	add    BYTE PTR [eax],al
  40afa3:	add    BYTE PTR [ebp-0x4afc1671],dh
  40afa9:	(bad)
  40afad:	(bad)
  40afb1:	(bad)
  40afb5:	(bad)
  40afb9:	(bad)
  40afbd:	(bad)
  40afc1:	(bad)
  40afc5:	(bad)
  40afc9:	(bad)
  40afcd:	(bad)
  40afd1:	(bad)
  40afd5:	(bad)
  40afd9:	(bad)
  40afdd:	pop    DWORD PTR [eax]
  40afdf:	jmp    0xe9413f9a
  40afe4:	mov    dh,0x8f
  40afe6:	add    cl,ch
  40afe8:	mov    dh,0x8f
  40afea:	add    cl,ch
  40afec:	mov    dh,0x8f
  40afee:	add    cl,ch
  40aff0:	mov    dh,0x8f
  40aff2:	add    cl,ch
  40aff4:	mov    dh,0x8f
  40aff6:	add    cl,ch
  40aff8:	mov    dh,0x8f
  40affa:	add    cl,ch
  40affc:	mov    dh,0x8f
  40affe:	add    cl,ch
  40b000:	mov    dh,0x8f
  40b002:	add    cl,ch
  40b004:	mov    dh,0x8f
  40b006:	add    cl,ch
	...
  40b01c:	mov    dh,0x8f
  40b01e:	add    cl,ch
  40b020:	mov    dh,0x8f
  40b022:	add    cl,ch
  40b024:	mov    dh,0x8f
  40b026:	add    cl,ch
  40b028:	mov    dh,0x8f
  40b02a:	add    cl,ch
  40b02c:	mov    dh,0x8f
  40b02e:	add    cl,ch
  40b030:	mov    dh,0x8f
  40b032:	add    cl,ch
  40b034:	mov    dh,0x8f
  40b036:	add    cl,ch
  40b038:	mov    dh,0x8f
  40b03a:	add    cl,ch
  40b03c:	mov    dh,0x8f
  40b03e:	add    cl,ch
  40b040:	mov    dh,0x8f
  40b042:	add    cl,ch
  40b044:	mov    ecx,0xb1e8008e
  40b049:	mov    es,WORD PTR [ecx]
  40b04b:	call   0xe8423f09
  40b050:	mov    cl,0x8e
  40b052:	add    eax,ebp
  40b054:	mov    ecx,0xb1e80190
  40b059:	nop
  40b05a:	add    eax,ebp
  40b05c:	mov    ecx,0xb1e80190
  40b061:	nop
  40b062:	add    al,ch
  40b064:	mov    ecx,0xb1e80190
  40b069:	nop
  40b06a:	add    DWORD PTR [eax],eax
  40b06c:	lea    edx,[ecx+eax*1+0x1948d01]
  40b073:	add    DWORD PTR [ebp-0x6c],ebx
  40b076:	add    DWORD PTR [ecx],eax
  40b078:	pop    ebp
  40b079:	xchg   esp,eax
  40b07a:	add    DWORD PTR [ecx],eax
  40b07c:	dec    ebp
  40b07d:	xchg   esp,eax
  40b07e:	add    DWORD PTR [ecx],eax
	...
  40b094:	dec    ebp
  40b095:	xchg   esp,eax
  40b096:	add    DWORD PTR [ecx],eax
  40b098:	pop    ebp
  40b099:	xchg   esp,eax
  40b09a:	add    DWORD PTR [ecx],eax
  40b09c:	pop    ebp
  40b09d:	xchg   esp,eax
  40b09e:	add    DWORD PTR [ecx],eax
  40b0a0:	dec    ebp
  40b0a1:	xchg   esp,eax
  40b0a2:	add    DWORD PTR [ecx],eax
  40b0a4:	dec    ebp
  40b0a5:	xchg   esp,eax
  40b0a6:	add    DWORD PTR [ecx],eax
  40b0a8:	sbb    eax,0x1d010194
  40b0ad:	xchg   esp,eax
  40b0ae:	add    DWORD PTR [ecx],eax
  40b0b0:	or     eax,0xd010194
  40b0b5:	xchg   esp,eax
  40b0b6:	add    DWORD PTR [eax],eax
  40b0b8:	sbb    al,0x93
  40b0ba:	add    BYTE PTR [eax],al
  40b0bc:	sbb    al,0x93
  40b0be:	add    BYTE PTR [eax],al
  40b0c0:	or     al,0x93
  40b0c2:	add    BYTE PTR [eax],al
  40b0c4:	or     al,0x93
  40b0c6:	add    BYTE PTR [eax],al
  40b0c8:	fcom   QWORD PTR [edx-0x6d240000]
  40b0ce:	add    BYTE PTR [eax],al
  40b0d0:	int3   
  40b0d1:	xchg   edx,eax
  40b0d2:	add    BYTE PTR [eax],al
  40b0d4:	int3   
  40b0d5:	xchg   edx,eax
  40b0d6:	add    BYTE PTR [eax],al
  40b0d8:	fcom   QWORD PTR [edx-0x6d240000]
  40b0de:	add    BYTE PTR [eax],al
  40b0e0:	int3   
  40b0e1:	xchg   edx,eax
  40b0e2:	add    BYTE PTR [eax],al
  40b0e4:	int3   
  40b0e5:	xchg   edx,eax
  40b0e6:	add    BYTE PTR [eax],al
  40b0e8:	pushf  
  40b0e9:	xchg   edx,eax
  40b0ea:	add    BYTE PTR [eax],al
  40b0ec:	pushf  
  40b0ed:	xchg   edx,eax
  40b0ee:	add    BYTE PTR [eax],al
  40b0f0:	mov    WORD PTR [edx-0x6d740000],ss
	...
  40b10a:	add    BYTE PTR [eax],al
  40b10c:	mov    ch,0xb8
  40b10e:	add    al,BYTE PTR [eax]
  40b110:	mov    ch,0xb8
  40b112:	add    al,BYTE PTR [eax]
  40b114:	mov    ch,0xb8
  40b116:	add    al,BYTE PTR [eax]
  40b118:	mov    ch,0xb8
  40b11a:	add    al,BYTE PTR [eax]
  40b11c:	mov    ch,0xb8
  40b11e:	add    al,BYTE PTR [eax]
  40b120:	mov    ch,0xb8
  40b122:	add    al,BYTE PTR [eax]
  40b124:	mov    ch,0xb8
  40b126:	add    al,BYTE PTR [eax]
  40b128:	mov    ch,0xb8
  40b12a:	add    al,BYTE PTR [eax]
  40b12c:	mov    ch,0xb8
  40b12e:	add    al,BYTE PTR [eax]
  40b130:	mov    ch,0xb8
  40b132:	add    al,BYTE PTR [eax]
  40b134:	mov    ch,0xb8
  40b136:	add    al,BYTE PTR [eax]
  40b138:	mov    ch,0xb8
  40b13a:	add    al,BYTE PTR [eax]
  40b13c:	mov    ch,0xb8
  40b13e:	add    al,BYTE PTR [eax]
  40b140:	mov    ch,0xb8
  40b142:	add    al,BYTE PTR [eax]
  40b144:	mov    ch,0xb8
  40b146:	add    al,BYTE PTR [eax]
  40b148:	mov    ch,0xb8
  40b14a:	add    al,BYTE PTR [eax]
  40b14c:	mov    ch,0xb8
  40b14e:	add    al,BYTE PTR [ecx]
  40b150:	mov    ah,0xb8
  40b152:	add    al,BYTE PTR [eax]
  40b154:	mov    ch,0xb8
  40b156:	add    al,BYTE PTR [eax]
  40b158:	mov    ch,0xb7
  40b15a:	add    eax,DWORD PTR [eax]
  40b15c:	mov    ch,0xb8
  40b15e:	add    eax,DWORD PTR [edx]
  40b160:	mov    dh,0xb4
  40b162:	pop    es
  40b163:	push   es
  40b164:	mov    edx,0xae0a09c0
  40b169:	mov    esp,0xc8c20e0d
  40b16e:	icebp  
  40b16f:	adc    DWORD PTR [eax],eax
	...
  40b181:	add    BYTE PTR [eax],al
  40b183:	add    BYTE PTR [esi-0x55ea0a3c],ah
  40b189:	mov    al,0xf9
  40b18b:	sbb    DWORD PTR [esi-0x2de20214],ebx
  40b191:	xchg   esi,eax
  40b192:	and    esp,DWORD PTR [edx]
  40b194:	(bad)  
  40b195:	xchg   edx,eax
  40b196:	daa    
  40b197:	fimul  DWORD PTR es:[edi+0x78cf2ad1]
  40b19e:	int    0x2e
  40b1a0:	jecxz  0x40b21e
  40b1a2:	fst    DWORD PTR [edx]
  40b1a4:	mov    DWORD PTR [eax-0x7b34e92b],0x88bf1ac1
  40b1ae:	mov    ebp,0x298cb31e
  40b1b3:	jecxz  0x40b189
  40b1b5:	xor    BYTE PTR ds:0xd134d8e7,al
  40b1bb:	jmp    0x3ce0:0xeecd38cc
  40b1c2:	(bad)  
  40b1c4:	les    eax,FWORD PTR [eax-0x2b]
  40b1c7:	(bad)  
  40b1c8:	enter  0xc144,0xda
  40b1cc:	mov    esp,0x90be9d68
  40b1d1:	ins    BYTE PTR es:[edi],dx
  40b1d2:	leave  
  40b1d3:	loop   0x40b169
  40b1d5:	xor    ch,al
  40b1d7:	out    0x98,al
  40b1d9:	xor    al,0x91
  40b1db:	jmp    0x3ca0:0xee8d388c
  40b1e2:	cdq    
  40b1e3:	rol    BYTE PTR [eax+eax*2+0xd695],cl
	...
  40b1fa:	add    BYTE PTR [eax],al
  40b1fc:	mov    BYTE PTR [ecx+eax*4-0x26],al
  40b200:	jl     0x40b24a
  40b202:	jge    0x40b1e2
  40b204:	jo     0x40b252
  40b206:	imul   eax,DWORD PTR [ebx-0x789aeec9],0x8a71153b
  40b210:	das    
  40b211:	sbb    DWORD PTR [ebp-0x72],ebp
  40b214:	inc    ebx
  40b215:	sbb    eax,0x21277279
  40b21a:	jne    0x40b292
  40b21c:	sub    esp,DWORD PTR ds:0x291f7a61
  40b222:	pop    ebp
  40b223:	jle    0x40b278
  40b225:	sub    al,0x0
  40b227:	mov    DWORD PTR [edi-0xf],edx
  40b22a:	mov    ds:0xa6f55b85,al
  40b22f:	push   ecx
  40b230:	dec    edi
  40b231:	stc    
  40b232:	stos   BYTE PTR es:[edi],al
  40b233:	dec    ebp
  40b234:	arpl   bp,di
  40b236:	scas   al,BYTE PTR es:[edi]
  40b237:	pop    ecx
  40b238:	daa    
  40b239:	add    DWORD PTR [ebx-0x48fad4ab],esi
  40b23f:	inc    ecx
  40b240:	pop    ds
  40b241:	or     DWORD PTR [ebx-0x40f2acc3],edi
  40b247:	test   eax,0xa5c2d1f7
  40b24c:	sti    
  40b24d:	aad    0xc6
  40b24f:	xor    edi,ebp
  40b251:	fxch   st(2)
  40b253:	sub    eax,0x39cede03
  40b258:	xchg   ecx,esp
  40b25a:	shl    BYTE PTR ds:0x21d6e58b,cl
	...
  40b274:	jg     0x40b25f
  40b276:	ficomp DWORD PTR ds:0x49deedf3
  40b27c:	xchg   edi,eax
  40b27d:	mov    cl,0xe2
  40b27f:	inc    ebp
  40b280:	fwait
  40b281:	mov    ch,0xe6
  40b283:	adc    DWORD PTR [edi-0x5cf21547],ecx
  40b289:	mov    ebp,0xc16719ee
  40b28e:	repnz adc eax,0x1f6c56b
  40b294:	pop    edi
  40b295:	leave  
  40b296:	cli    
  40b297:	std    
  40b298:	nop
  40b299:	int    0xfe
  40b29b:	jmp    0xe5444457
  40b2a0:	mov    ebx,0xa9f10795
  40b2a5:	cdq    
  40b2a6:	or     ebp,ebp
  40b2a8:	mov    ebp,0xc1f90f9d
  40b2ad:	popf   
  40b2ae:	adc    esi,ebp
  40b2b0:	lds    esp,FWORD PTR [ecx-0x352bffe9]
  40b2b6:	sbb    BYTE PTR [ebx],bl
  40b2b8:	nop
  40b2b9:	enter  0x1f1c,0xbc
  40b2bd:	je     0x40b2e1
  40b2bf:	and    edi,DWORD PTR [eax-0x7bd8d990]
  40b2c5:	jl     0x40b2f1
  40b2c7:	sub    eax,DWORD PTR [eax+0x6c2f2e78]
  40b2cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2ce:	xor    dh,BYTE PTR [ebx]
  40b2d0:	push   0x743736a0
  40b2d5:	lods   al,BYTE PTR ds:[esi]
  40b2d6:	cmp    bh,BYTE PTR [ebx]
	...
  40b2ec:	xor    BYTE PTR [eax-0x4b63c0c2],ch
  40b2f2:	pusha  
  40b2f3:	arpl   WORD PTR [eax-0x7b989b50],di
  40b2f9:	mov    esp,0xb8806b68
  40b2fe:	ins    BYTE PTR es:[edi],dx
  40b2ff:	outs   dx,DWORD PTR ds:[esi]
  40b300:	ins    BYTE PTR es:[edi],dx
  40b301:	in     al,0x70
  40b303:	jae    0x40b36d
  40b305:	loopne 0x40b37b
  40b307:	ja     0x40b37d
  40b309:	in     al,dx
  40b30a:	js     0x40b367
  40b30c:	push   eax
  40b30d:	or     BYTE PTR [ebp+0x5f],bl
  40b310:	cld    
  40b311:	rol    DWORD PTR [eax+0x43],cl
  40b314:	pop    eax
  40b315:	rol    BYTE PTR [edi+eax*2+0x64],1
  40b319:	fmul   QWORD PTR [eax+0x4b]
  40b31c:	pusha  
  40b31d:	fmul   DWORD PTR [edi+ecx*2+0x4c]
  40b321:	add    al,0x51
  40b323:	push   ebx
  40b324:	dec    eax
  40b325:	add    BYTE PTR [ebp+0x57],dl
  40b328:	push   esp
  40b329:	or     al,0x59
  40b32b:	jnp    0x40b39d
  40b32d:	out    0x7c,eax
  40b32f:	jg     0x40b38d
  40b331:	adc    al,0x82
  40b333:	sbb    DWORD PTR [eax+0x10],0xffffff86
  40b337:	xchg   DWORD PTR [ebx+ebx*1-0x76],esp
  40b33b:	mov    esp,DWORD PTR [eax+0x17]
  40b33e:	mov    cs,WORD PTR [edi-0x6d8bb74b]
  40b344:	es inc ebp
  40b346:	jo     0x40b2de
  40b348:	and    dh,BYTE PTR [ecx]
  40b34a:	jl     0x40b2e6
  40b34c:	dec    esi
  40b34d:	ins    BYTE PTR es:[edi],dx
  40b34e:	js     0x40b2ee
	...
  40b364:	dec    edx
  40b365:	sbb    BYTE PTR [edx+eiz*4-0x595febaa],ah
  40b36c:	push   edx
  40b36d:	pusha  
  40b36e:	lods   al,BYTE PTR ds:[esi]
  40b36f:	stos   BYTE PTR es:[edi],al
  40b370:	pop    esi
  40b371:	pop    esp
  40b372:	test   al,0xae
  40b374:	pop    edx
  40b375:	push   0x6446b294
  40b37a:	nop
  40b37b:	mov    dh,0x42
  40b37d:	push   eax
  40b37e:	pushf  
  40b37f:	mov    edx,0xbe988c2e
  40b384:	sub    bh,al
  40b386:	inc    ebx
  40b387:	ret    0xf476
  40b38a:	aas    
  40b38b:	(bad)  
  40b38c:	jb     0x40b30e
  40b38e:	dec    esp
  40b38f:	retf   0x7c7e
  40b392:	dec    eax
  40b393:	into   
  40b394:	jp     0x40b31e
  40b396:	xor    al,0xd2
  40b398:	data16 test BYTE PTR [eax],dh
  40b39b:	(bad)  
  40b39c:	bound  esi,QWORD PTR [eax+0x3c]
  40b39f:	fimul  DWORD PTR [esi]
  40b3a1:	lods   al,BYTE PTR ds:[esi]
  40b3a2:	cmp    dh,bl
  40b3a4:	or     bl,BYTE PTR [eax+0x64]
  40b3a7:	loop   0x40b3bf
  40b3a9:	push   esp
  40b3aa:	pusha  
  40b3ab:	out    0x12,al
  40b3ad:	mov    al,ds:0x9c1eea6c
  40b3b2:	push   0x54a81aee
  40b3b7:	repnz push es
  40b3b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3ba:	push   eax
  40b3bb:	test   BYTE PTR [edx],0x90
  40b3be:	pop    esp
  40b3bf:	cli    
  40b3c0:	out    dx,al
  40b3c1:	retf   
  40b3c2:	push   esi
  40b3c3:	(bad)  
  40b3c4:	jmp    0x0:0x18b7
	...
  40b3db:	add    BYTE PTR [ebp-0x4afffd49],dh
  40b3e1:	(bad)
  40b3e5:	(bad)
  40b3e9:	(bad)
  40b3ed:	(bad)
  40b3f1:	(bad)
  40b3f5:	(bad)
  40b3f9:	(bad)
  40b3fd:	vpshad xmm1,[ebp-0x704afbd9],xmm7
  40b406:	pop    ds
  40b407:	add    al,0xb5
  40b409:	(bad)
  40b40d:	(bad)
  40b411:	(bad)
  40b415:	(bad)
  40b419:	(bad)
  40b41d:	(bad)
  40b421:	(bad)  
  40b422:	jmp    0xe9d0692a
  40b427:	add    esi,DWORD PTR [ebp-0x4afc1671]
  40b42d:	(bad)
  40b431:	(bad)
  40b435:	(bad)
  40b439:	(bad)
  40b43d:	(bad)
	...
  40b451:	add    BYTE PTR [eax],al
  40b453:	add    BYTE PTR [ebp+0x1259278f],dh
  40b459:	xchg   ecx,eax
  40b45a:	jmp    0xe9d06962
  40b45f:	add    esi,DWORD PTR [ebp-0x4afc1671]
  40b465:	(bad)
  40b469:	(bad)
  40b46d:	pop    DWORD PTR [eax]
  40b46f:	jmp    0xe941442a
  40b474:	mov    dh,0x8f
  40b476:	add    cl,ch
  40b478:	mov    dh,0x8f
  40b47a:	add    bh,bl
  40b47c:	ins    DWORD PTR es:[edi],dx
  40b47d:	enter  0xe906,0xb6
  40b481:	pop    DWORD PTR [eax]
  40b483:	jmp    0xe941443e
  40b488:	mov    dh,0x8f
  40b48a:	add    cl,ch
  40b48c:	mov    dh,0x8f
  40b48e:	add    cl,ch
  40b490:	mov    dh,0x8f
  40b492:	add    cl,ch
  40b494:	mov    dh,0xc8
  40b496:	add    ah,BYTE PTR [edi-0x60793713]
  40b49c:	in     eax,dx
  40b49d:	enter  0xe906,0xb6
  40b4a1:	pop    DWORD PTR [eax]
  40b4a3:	jmp    0xe941445e
  40b4a8:	mov    dh,0x8f
  40b4aa:	add    cl,ch
  40b4ac:	mov    dh,0x8f
  40b4ae:	add    cl,ch
  40b4b0:	mov    dh,0x8f
  40b4b2:	add    BYTE PTR [edi-0x3],ch
  40b4b5:	enter  0x66fe,0x0
	...
  40b4c9:	add    BYTE PTR [eax],al
  40b4cb:	add    ch,ch
  40b4cd:	enter  0x5efe,0xed
  40b4d1:	enter  0xe97e,0xb6
  40b4d5:	pop    DWORD PTR [eax]
  40b4d7:	jmp    0xe9414492
  40b4dc:	mov    dh,0x8f
  40b4de:	add    cl,ch
  40b4e0:	mov    dh,0x8f
  40b4e2:	add    cl,ch
  40b4e4:	mov    dh,0x8f
  40b4e6:	add    BYTE PTR [esi],ch
  40b4e8:	jge    0x40b4b2
  40b4ea:	(bad)  
  40b4eb:	es ins DWORD PTR es:[edi],dx
  40b4ed:	enter  0x1efe,0x6d
  40b4f1:	enter  0xe97e,0xb6
  40b4f5:	pop    DWORD PTR [eax]
  40b4f7:	jmp    0x4144b2
  40b4fc:	fmul   QWORD PTR [ebx-0x74240000]
  40b502:	add    BYTE PTR [eax],al
  40b504:	int3   
  40b505:	mov    eax,DWORD PTR [eax]
  40b507:	add    dl,cl
  40b509:	pop    edi
  40b50a:	add    ah,bh
  40b50c:	fisttp QWORD PTR [ebx-0x74220800]
  40b512:	add    BYTE PTR [eax-0x34],bh
  40b515:	mov    eax,DWORD PTR [eax]
  40b517:	add    ah,cl
  40b519:	mov    eax,DWORD PTR [eax]
  40b51b:	add    BYTE PTR [ebx+edx*4-0x6c640000],bl
  40b522:	add    BYTE PTR [eax],al
  40b524:	imul   ebx,DWORD PTR [edi-0x1],0xffffffff
  40b528:	mov    WORD PTR [ebx-0x6c640000],ss
	...
  40b542:	add    BYTE PTR [eax],al
  40b544:	pushf  
  40b545:	xchg   ebx,eax
  40b546:	add    BYTE PTR [eax+0x938c],al
  40b54c:	mov    WORD PTR [ebx-0x6ca40000],ss
  40b552:	add    BYTE PTR [eax],al
  40b554:	pop    esp
  40b555:	xchg   ebx,eax
  40b556:	add    BYTE PTR [eax],al
  40b558:	int3   
  40b559:	mov    eax,DWORD PTR [eax]
  40b55b:	add    BYTE PTR [ebx+edx*4+0x0],cl
  40b55f:	add    BYTE PTR [esp+ecx*4+0x1],bl
  40b563:	add    BYTE PTR [ebp-0x74],bl
  40b566:	add    BYTE PTR [eax],al
  40b568:	dec    esp
  40b569:	xchg   ebx,eax
  40b56a:	add    BYTE PTR [eax],al
  40b56c:	dec    esp
  40b56d:	xchg   ebx,eax
  40b56e:	add    BYTE PTR [eax],al
  40b570:	sbb    al,0x93
  40b572:	add    BYTE PTR [eax],al
  40b574:	sbb    al,0x93
  40b576:	add    BYTE PTR [eax],al
  40b578:	or     eax,0x8c000093
  40b57d:	mov    eax,DWORD PTR [eax]
  40b57f:	add    BYTE PTR [ebx+ecx*1-0x6ce37f80],bl
  40b586:	add    BYTE PTR [eax],0xb5
  40b589:	mov    esp,0xb4991bf6
  40b58e:	neg    BYTE PTR [ebx]
  40b590:	shr    DWORD PTR [esi+esi*8+0x2b8eaff],1
  40b597:	add    BYTE PTR ds:0xbf19f8b9,dh
  40b59d:	loop   0x40b597
  40b59f:	sbb    DWORD PTR [edi-0x58ee0f36],esp
  40b5a5:	retf   0x11f0
	...
  40b5bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5bd:	retf   0x11f0
  40b5c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5c1:	retf   0x11f0
  40b5c4:	(bad)  
  40b5c5:	jmp    0x8003:0x383511f0
  40b5cc:	lds    edi,FWORD PTR [eax-0x1d40e608]
  40b5d2:	clc    
  40b5d3:	sbb    DWORD PTR [edi-0x58ee0f36],esp
  40b5d9:	retf   0x11f0
  40b5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5dd:	retf   0x11f0
  40b5e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5e1:	retf   0x11f0
  40b5e4:	(bad)  
  40b5e5:	jmp    0x3:0x383511f0
  40b5ec:	mov    ch,0xb8
  40b5ee:	add    al,BYTE PTR [eax]
  40b5f0:	mov    ch,0xb8
  40b5f2:	add    al,BYTE PTR [eax]
  40b5f4:	mov    ch,0xb8
  40b5f6:	add    al,BYTE PTR [eax]
  40b5f8:	mov    ch,0xb8
  40b5fa:	add    al,BYTE PTR [eax]
  40b5fc:	mov    ch,0xb8
  40b5fe:	add    al,BYTE PTR [eax]
  40b600:	mov    ch,0xb8
  40b602:	add    al,BYTE PTR [eax]
  40b604:	mov    ch,0xb8
  40b606:	add    al,BYTE PTR [eax]
  40b608:	mov    ch,0xb8
  40b60a:	add    al,BYTE PTR [eax]
  40b60c:	mov    ch,0xb8
  40b60e:	add    al,BYTE PTR [eax]
  40b610:	mov    ch,0xb8
  40b612:	add    al,BYTE PTR [eax]
  40b614:	mov    ch,0x8f
  40b616:	jmp    0xe9d06b1e
  40b61b:	add    esi,DWORD PTR [ebp+0x3e98f]
	...
  40b631:	add    BYTE PTR [eax],al
  40b633:	add    BYTE PTR [ebp-0x4afc1671],dh
  40b639:	(bad)
  40b63d:	(bad)
  40b641:	(bad)
  40b645:	(bad)
  40b649:	(bad)
  40b64d:	(bad)
  40b651:	(bad)
  40b655:	(bad)
  40b659:	(bad)
  40b65d:	(bad)
  40b661:	(bad)
  40b665:	(bad)
  40b669:	(bad)
  40b66d:	(bad)
  40b671:	(bad)
  40b675:	(bad)
  40b679:	(bad)
  40b67d:	(bad)
  40b681:	(bad)  
  40b682:	retf   
  40b683:	push   ebp
  40b684:	aam    0x8e
  40b686:	lds    edi,FWORD PTR [ebx]
  40b688:	aam    0x8e
  40b68a:	fbld   TBYTE PTR [ebp+edx*4-0x2baffa81]
  40b691:	mov    cs,WORD PTR [eax+ebx*2]
  40b694:	aad    0x8e
  40b696:	fisubr WORD PTR [edi+0x0]
	...
  40b6ac:	inc    edx
  40b6ad:	inc    ebx
  40b6ae:	mov    al,ds:0x7e52240f
  40b6b3:	add    DWORD PTR [esi+0x11d2fff7],ebp
  40b6b9:	das    
  40b6ba:	or     dl,BYTE PTR [ebx-0x24df493]
  40b6c0:	inc    edi
  40b6c1:	xchg   esi,eax
  40b6c2:	mov    BYTE PTR [edx],dl
  40b6c4:	add    ecx,edi
  40b6c6:	xor    eax,0xaff15a00
  40b6cb:	fistp  QWORD PTR [edx-0x75cc357a]
  40b6d1:	ja     0x40b6d4
  40b6d3:	dec    esp
  40b6d4:	das    
  40b6d5:	pop    ecx
  40b6d6:	or     ebx,DWORD PTR [ecx+0x2ceaf674]
  40b6dc:	jae    0x40b720
  40b6de:	int    0x4
  40b6e0:	xchg   edx,eax
  40b6e1:	ret    
  40b6e2:	lock ret 0xd0b1
  40b6e6:	push   ds
  40b6e7:	pop    ecx
  40b6e8:	fsub   st(3),st
  40b6ea:	lods   eax,DWORD PTR ds:[esi]
  40b6eb:	pop    edx
  40b6ec:	enter  0x81a6,0xc7
  40b6f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f1:	xchg   edx,eax
  40b6f2:	add    dl,BYTE PTR [eax]
  40b6f4:	call   0xb46a0752
  40b6f9:	push   edx
  40b6fa:	mov    dl,0x45
  40b6fc:	fstp   QWORD PTR [ebx+0x58]
  40b6ff:	mov    ecx,0xe9c79015
  40b704:	push   esp
  40b705:	mov    al,0xed
  40b707:	mov    ch,0xa3
  40b709:	pop    ebp
  40b70a:	adc    eax,0xe0ee239e
  40b70f:	inc    BYTE PTR [eax]
	...
  40b721:	add    BYTE PTR [eax],al
  40b723:	add    BYTE PTR [edi+0x62],ah
  40b726:	icebp  
  40b727:	das    
  40b728:	cmp    eax,0x16ca6802
  40b72d:	or     eax,0x48d2d72f
  40b732:	inc    esi
  40b733:	fnsave [ebx-0x5c85a74d]
  40b739:	jge    0x40b725
  40b73b:	jecxz  0x40b7a9
  40b73d:	jo     0x40b792
  40b73f:	jmp    0x40b7a6
  40b741:	push   0xf8bb0010
  40b746:	adc    DWORD PTR [edx-0x6a23977c],esi
  40b74c:	or     bl,al
  40b74e:	loope  0x40b7b0
  40b750:	rcr    al,0x40
  40b753:	push   eax
  40b754:	out    dx,eax
  40b755:	or     DWORD PTR [edi-0x64],0x4f
  40b759:	inc    edx
  40b75a:	inc    edi
  40b75b:	out    0xc4,al
  40b75d:	popa   
  40b75e:	mov    ah,0xea
  40b760:	cmp    BYTE PTR [esi+0x5],ah
  40b763:	ret    
  40b764:	xchg   edi,eax
  40b765:	inc    esp
  40b766:	cmp    al,0xd5
  40b768:	and    ebx,DWORD PTR [ecx+ebx*8]
  40b76b:	in     eax,0x5b
  40b76d:	sti    
  40b76e:	inc    esi
  40b76f:	and    al,0x4e
  40b771:	adc    al,0x9
  40b773:	adc    eax,ebp
  40b775:	or     bh,bl
  40b777:	push   ecx
  40b778:	(bad)  
  40b779:	stos   DWORD PTR es:[edi],eax
  40b77a:	sub    al,0x14
  40b77c:	aad    0x43
  40b77e:	mov    dl,dh
  40b780:	mov    ebx,0x5f59d1ec
  40b785:	jne    0x40b7cf
  40b787:	lods   eax,DWORD PTR ds:[esi]
	...
  40b79c:	outs   dx,BYTE PTR ds:[esi]
  40b79d:	dec    DWORD PTR [edx+esi*8-0x44b12433]
  40b7a4:	sub    esp,0xfffffff1
  40b7a7:	js     0x40b814
  40b7a9:	lods   eax,DWORD PTR ds:[esi]
  40b7aa:	in     al,dx
  40b7ab:	outs   dx,DWORD PTR ds:[esi]
  40b7ac:	dec    ecx
  40b7ad:	in     al,dx
  40b7ae:	scas   eax,DWORD PTR es:[edi]
  40b7af:	fs test al,0x10
  40b7b2:	test   DWORD PTR [esi+0x1f],ecx
  40b7b5:	mov    ds,WORD PTR [edi-0x79888a81]
  40b7bb:	(bad)  
  40b7be:	sub    eax,0xef33d1b2
  40b7c3:	lahf   
  40b7c4:	stc    
  40b7c5:	and    edx,DWORD PTR [esi+0x5d]
  40b7c8:	jecxz  0x40b837
  40b7ca:	(bad)
  40b7cf:	call   0x3019b389
  40b7d4:	popa   
  40b7d5:	mov    ecx,0x1eb50002
  40b7da:	add    al,0x0
  40b7dc:	mov    ch,0x38
  40b7de:	push   es
  40b7df:	add    BYTE PTR [ebp-0x4afffb6d],dh
  40b7e5:	or     eax,0x98b50004
  40b7ea:	add    eax,DWORD PTR [eax]
  40b7ec:	mov    ch,0xcb
  40b7ee:	add    al,BYTE PTR [eax]
  40b7f0:	mov    ch,0x4c
  40b7f2:	add    al,0x0
  40b7f4:	mov    ch,0x98
  40b7f6:	add    eax,DWORD PTR [eax]
  40b7f8:	mov    ch,0xd3
  40b7fa:	add    al,BYTE PTR [eax]
  40b7fc:	mov    ch,0x53
  40b7fe:	add    al,0x0
	...
  40b814:	mov    ch,0x38
  40b816:	push   es
  40b817:	add    BYTE PTR [ebp-0x4afffd35],dh
  40b81d:	sbb    al,BYTE PTR [ebx]
  40b81f:	add    BYTE PTR [ebp-0x4afffac8],dh
  40b825:	xchg   ebx,eax
  40b826:	add    al,0x0
  40b828:	mov    ch,0x41
  40b82a:	add    eax,DWORD PTR [eax]
  40b82c:	mov    ch,0x38
  40b82e:	add    eax,0x48bb500
  40b833:	add    BYTE PTR [ebp-0x4afffcb8],dh
  40b839:	fadd   DWORD PTR [ecx]
  40b83b:	add    BYTE PTR [ebp-0x4afffd2c],dh
  40b841:	mov    eax,0x57b50002
  40b846:	add    al,0x4
  40b848:	mov    ah,0x56
  40b84a:	add    al,0xd8
  40b84c:	mov    bh,0x55
  40b84e:	add    al,0x41
  40b850:	mov    ah,0x4b
  40b852:	add    al,0x3d
  40b854:	mov    ah,0x52
  40b856:	add    al,0x5a
  40b858:	mov    ah,0x4f
  40b85a:	add    al,0x60
  40b85c:	mov    ah,0x8f
  40b85e:	xchg   ebx,eax
  40b85f:	add    al,0xe3
  40b861:	nop
  40b862:	xchg   edx,eax
  40b863:	add    al,0xd1
  40b865:	nop
  40b866:	test   DWORD PTR [esp+ebp*4],eax
  40b869:	nop
  40b86a:	jg     0x40b870
  40b86c:	test   al,0x90
  40b86e:	xchg   esi,eax
  40b86f:	add    al,0x9e
  40b871:	nop
  40b872:	js     0x40b878
  40b874:	mov    al,0x90
  40b876:	jnp    0x40b87c
	...
  40b88c:	out    dx,al
  40b88d:	mov    WORD PTR [edx+0x4],?
  40b890:	ja     0x40b822
  40b892:	pop    esp
  40b893:	add    al,0xc3
  40b895:	nop
  40b896:	push   edi
  40b897:	add    al,0x5e
  40b899:	nop
  40b89a:	pop    esi
  40b89b:	add    al,0xfa
  40b89d:	mov    WORD PTR [eax+0x4],ss
  40b8a0:	push   esp
  40b8a1:	nop
  40b8a2:	inc    ebx
  40b8a3:	add    al,0x82
  40b8a5:	nop
  40b8a6:	inc    edx
  40b8a7:	add    al,0x50
  40b8a9:	nop
  40b8aa:	xor    eax,0x2c904f04
  40b8af:	add    al,0xe8
  40b8b1:	mov    WORD PTR [edi-0x616fbcfd],fs
  40b8b7:	add    edi,DWORD PTR [ecx]
  40b8b9:	nop
  40b8ba:	test   eax,0xaa8f0903
  40b8bf:	add    esi,DWORD PTR [edi-0x23fc5372]
  40b8c5:	mov    fs,WORD PTR [edi-0x5e714cfd]
  40b8cb:	add    eax,ecx
  40b8cd:	mov    fs,WORD PTR [ebx-0x4a7152fd]
  40b8d3:	add    ebx,DWORD PTR [edi-0x54fc5172]
  40b8d9:	mov    ?,WORD PTR [ecx-0x47713afd]
  40b8df:	add    esi,esi
  40b8e1:	mov    ds,WORD PTR [ebx-0x6b7105fd]
  40b8e7:	add    eax,DWORD PTR ds:0xb691008f
  40b8ed:	add    DWORD PTR [bx+si+0x0],edx
	...
  40b902:	add    BYTE PTR [eax],al
  40b904:	mov    dh,0x31
  40b906:	add    DWORD PTR [edx-0x4a],eax
  40b909:	aas    
  40b90a:	add    DWORD PTR [edi],edi
  40b90c:	mov    dh,0x2d
  40b90e:	add    DWORD PTR [ecx-0x4a],ecx
  40b911:	pop    edx
  40b912:	add    DWORD PTR [edx-0x4a],ecx
  40b915:	mov    WORD PTR [ecx],es
  40b917:	dec    esp
  40b918:	mov    dh,0x85
  40b91a:	add    DWORD PTR [edi-0x4a],eax
  40b91d:	mov    BYTE PTR [ecx],al
  40b91f:	inc    ecx
  40b920:	mov    dh,0x92
  40b922:	add    DWORD PTR [ebx-0x4a],eax
  40b925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b926:	add    DWORD PTR ds:0xe01a4b6,edx
  40b92c:	mov    dh,0x90
  40b92e:	add    DWORD PTR [ecx],ebx
  40b930:	mov    dh,0x9e
  40b932:	add    DWORD PTR [eax],ebx
  40b934:	mov    dh,0x4b
  40b936:	add    ebx,edi
  40b938:	mov    bh,0x57
  40b93a:	add    esp,esi
  40b93c:	mov    bh,0x5e
  40b93e:	add    ecx,esi
  40b940:	mov    bh,0x66
  40b942:	add    eax,esi
  40b944:	mov    bh,0x30
  40b946:	add    edx,esp
  40b948:	mov    bh,0x3e
  40b94a:	add    edi,ebx
  40b94c:	mov    bh,0x2c
  40b94e:	add    esi,edx
  40b950:	mov    bh,0xe6
  40b952:	add    DWORD PTR [eax-0x70fe9650],ecx
  40b958:	mov    eax,0xb090016b
  40b95d:	jg     0x40b960
  40b95f:	cmp    BYTE PTR [eax-0x4f82fe5f],0x7b
  40b966:	add    DWORD PTR [eax+0x0],ebx
	...
  40b979:	add    BYTE PTR [eax],al
  40b97b:	add    BYTE PTR [eax-0x4fa8fe98],bh
  40b981:	push   0x1
  40b983:	push   eax
  40b984:	mov    eax,0xb052017e
  40b989:	mov    al,ds:0x8af80001
  40b98e:	xor    eax,0xa8a1101
  40b993:	add    DWORD PTR [edx],esp
  40b995:	mov    cl,BYTE PTR [eax]
  40b997:	add    DWORD PTR [ecx],esp
  40b999:	mov    ah,BYTE PTR [eax]
  40b99b:	add    esp,esi
  40b99d:	mov    bl,BYTE PTR [ecx+eax*1]
  40b9a0:	jns    0x40b92c
  40b9a2:	ins    BYTE PTR es:[edi],dx
  40b9a3:	add    edx,ebp
  40b9a5:	mov    bl,BYTE PTR [ecx+eax*1+0x71]
  40b9a9:	mov    cl,BYTE PTR [ebx]
  40b9ab:	add    DWORD PTR [edx-0x76],esi
  40b9ae:	or     DWORD PTR [ecx],eax
  40b9b0:	loope  0x40b93c
  40b9b2:	and    DWORD PTR [ecx],eax
  40b9b4:	les    ecx,FWORD PTR [edx-0x7526fee3]
  40b9ba:	ins    DWORD PTR es:[edi],dx
  40b9bb:	add    edx,ebx
  40b9bd:	mov    bl,BYTE PTR [ebp+0x1]
  40b9c0:	outs   dx,BYTE PTR ds:[esi]
  40b9c1:	mov    edi,DWORD PTR [eax]
  40b9c3:	add    DWORD PTR [edi-0x75],edi
  40b9c6:	push   esi
  40b9c7:	add    DWORD PTR [ecx-0x75],esi
  40b9ca:	sub    BYTE PTR [ecx],al
  40b9cc:	jb     0x40b959
  40b9ce:	cmp    eax,DWORD PTR [ecx]
  40b9d0:	xchg   BYTE PTR [ebx-0x7488feee],cl
  40b9d6:	and    al,BYTE PTR [ecx]
  40b9d8:	mov    BYTE PTR [ebx-0x73e0fe9a],cl
  40b9de:	push   edi
  40b9df:	add    DWORD PTR [eax],eax
	...
  40b9f1:	add    BYTE PTR [eax],al
  40b9f3:	add    BYTE PTR [ecx],ah
  40b9f5:	mov    WORD PTR [ecx],gs
  40b9f7:	add    DWORD PTR [edx-0x6d],edx
  40b9fa:	cmp    al,0x1
  40b9fc:	inc    esi
  40b9fd:	xchg   ebx,eax
  40b9fe:	adc    eax,DWORD PTR [ecx]
  40ba00:	aaa    
  40ba01:	xchg   ebx,eax
  40ba02:	and    eax,DWORD PTR [ecx]
  40ba04:	sbb    BYTE PTR [ebx-0x6cf6fe99],dl
  40ba0a:	dec    edx
  40ba0b:	add    DWORD PTR [ebx],ebx
  40ba0d:	xchg   ebx,eax
  40ba0e:	dec    ebx
  40ba0f:	add    DWORD PTR [ebx+edx*4+0x0],ecx
  40ba13:	add    DWORD PTR [ebx-0x6d],edx
  40ba16:	add    DWORD PTR cs:[ebp-0x4be9fd0c],esi
  40ba1d:	sbb    eax,0x17b42a03
  40ba22:	add    eax,DWORD PTR [ebp-0x4c]
  40ba25:	sbb    al,BYTE PTR [ebx]
  40ba27:	dec    esp
  40ba28:	mov    ah,0x19
  40ba2a:	add    esi,DWORD PTR [esi]
  40ba2c:	mov    ah,0x1f
  40ba2e:	add    esi,DWORD PTR [edx-0x4c]
  40ba31:	push   ebx
  40ba32:	add    ebp,DWORD PTR [eax-0x4c]
  40ba35:	jle    0x40ba3a
  40ba37:	push   0xffffffb4
  40ba39:	dec    eax
  40ba3a:	add    eax,DWORD PTR [ecx]
  40ba3c:	mov    ah,0x55
  40ba3e:	add    ebp,DWORD PTR [edi]
  40ba40:	mov    ah,0x64
  40ba42:	add    edx,DWORD PTR [edi]
  40ba44:	mov    ah,0x4d
  40ba46:	add    ebp,DWORD PTR [ebx]
  40ba48:	mov    ah,0x77
  40ba4a:	add    eax,DWORD PTR [esi-0x4c]
  40ba4d:	jp     0x40ba52
  40ba4f:	dec    ebp
  40ba50:	mov    ah,0x99
  40ba52:	add    esi,DWORD PTR [edi]
  40ba54:	mov    ah,0x6f
  40ba56:	add    esi,DWORD PTR [ebx+0x0]
	...
  40ba69:	add    BYTE PTR [eax],al
  40ba6b:	add    BYTE PTR [ebx+eiz*4-0x714b96fd],dh
  40ba72:	add    ebp,DWORD PTR [ebx-0x4c]
  40ba75:	push   ss
  40ba76:	pop    es
  40ba77:	ds xchg ebp,eax
  40ba79:	inc    edi
  40ba7a:	or     BYTE PTR [edx],al
  40ba7c:	test   DWORD PTR [edx+0x8],ecx
  40ba7f:	or     al,0x85
  40ba81:	dec    ecx
  40ba82:	or     BYTE PTR ds:0x1070c85,cl
  40ba88:	test   DWORD PTR [ebx],edx
  40ba8a:	pop    es
  40ba8b:	sti    
  40ba8c:	in     eax,0xe
  40ba8e:	pop    es
  40ba8f:	repnz in eax,0x15
  40ba92:	pop    es
  40ba93:	mov    eax,ds:0xa30720e5
  40ba98:	in     eax,0x1f
  40ba9a:	pop    es
  40ba9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba9c:	lds    edx,FWORD PTR [edx]
  40ba9e:	pop    es
  40ba9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baa0:	lds    edx,FWORD PTR [ecx]
  40baa2:	pop    es
  40baa3:	test   eax,0x7558fc5
  40baa8:	xchg   esi,eax
  40baa9:	jg     0x40baf7
  40baab:	pop    es
  40baac:	pop    eax
  40baad:	jg     0x40baf6
  40baaf:	pop    es
  40bab0:	push   edx
  40bab1:	jg     0x40baf1
  40bab3:	pop    es
  40bab4:	jbe    0x40bb35
  40bab6:	cmp    DWORD PTR [edi],eax
  40bab8:	pop    ecx
  40bab9:	jg     0x40baf3
  40babb:	pop    es
  40babc:	pop    ss
  40babd:	jg     0x40bafa
  40babf:	pop    es
  40bac0:	adc    DWORD PTR [edi+0x3a],edi
  40bac3:	pop    es
  40bac4:	sbb    edi,DWORD PTR [edi-0x63]
  40bac7:	pop    es
  40bac8:	or     eax,0x5f07947f
  40bacd:	jg     0x40ba6e
  40bacf:	pop    es
	...
  40bae4:	pop    esi
  40bae5:	jg     0x40ba7d
  40bae7:	pop    es
  40bae8:	push   eax
  40bae9:	jg     0x40ba6c
  40baeb:	pop    es
  40baec:	dec    edx
  40baed:	jg     0x40ba6f
  40baef:	pop    es
  40baf0:	inc    esp
  40baf1:	jg     0x40bb66
  40baf3:	pop    es
  40baf4:	inc    esi
  40baf5:	jg     0x40bb69
  40baf7:	pop    es
  40baf8:	dec    eax
  40baf9:	jg     0x40bb60
  40bafb:	pop    es
  40bafc:	inc    edx
  40bafd:	jg     0x40bb5b
  40baff:	pop    es
  40bb00:	sub    al,0x7f
  40bb02:	push   edi
  40bb03:	pop    es
  40bb04:	cs jg  0x40bb55
  40bb07:	pop    es
  40bb08:	and    BYTE PTR [edi+0x29],bh
  40bb0b:	pop    es
  40bb0c:	sbb    bh,BYTE PTR [edi+0x28]
  40bb0f:	pop    es
  40bb10:	hlt    
  40bb11:	jle    0x40bb3e
  40bb13:	pop    es
  40bb14:	icebp  
  40bb15:	jle    0x40bb41
  40bb17:	pop    es
  40bb18:	sti    
  40bb19:	jle    0x40bac8
  40bb1b:	or     ch,ch
  40bb1d:	jle    0x40bac3
  40bb1f:	or     BYTE PTR [edi-0x80],bh
  40bb22:	scas   eax,DWORD PTR es:[edi]
  40bb23:	or     BYTE PTR [esi-0x80],bh
  40bb26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb27:	or     BYTE PTR [ecx-0x80],dh
  40bb2a:	mov    cl,0x8
  40bb2c:	push   0x8308b080
  40bb31:	add    BYTE PTR [eax],0xa3
  40bb34:	mov    ebp,0xada22fcc
  40bb39:	loope  0x40bb6a
  40bb3b:	mov    ch,0xad
  40bb3d:	loop   0x40bb6e
  40bb3f:	lods   al,BYTE PTR ds:[esi]
  40bb40:	mov    ebp,0xbda72fd7
  40bb45:	fsubr  DWORD PTR [edi]
  40bb47:	sahf   
	...
  40bb5c:	lods   eax,DWORD PTR ds:[esi]
  40bb5d:	(bad)  [edi]
  40bb5f:	cdq    
  40bb60:	lods   eax,DWORD PTR ds:[esi]
  40bb61:	fsubr  QWORD PTR [edi]
  40bb63:	cwde   
  40bb64:	mov    ebp,0xbd9b2faf
  40bb69:	scas   al,BYTE PTR es:[edi]
  40bb6a:	das    
  40bb6b:	call   0xb3ad:0x3d2fb1ad
  40bb72:	das    
  40bb73:	xor    al,0xbd
  40bb75:	mov    ch,0x2f
  40bb77:	aas    
  40bb78:	mov    ebp,0xad362fa7
  40bb7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb7e:	das    
  40bb7f:	and    DWORD PTR [ebp-0x42dfd057],ebp
  40bb85:	test   al,0x2f
  40bb87:	adc    edi,DWORD PTR [ebp-0x52edd055]
  40bb8d:	stos   BYTE PTR es:[edi],al
  40bb8e:	das    
  40bb8f:	inc    ebp
  40bb90:	lods   eax,DWORD PTR ds:[esi]
  40bb91:	lods   al,BYTE PTR ds:[esi]
  40bb92:	das    
  40bb93:	cmp    al,0xbd
  40bb95:	shr    BYTE PTR [edi],0x37
  40bb98:	mov    ebp,0xad2e3018
  40bb9d:	sbb    esi,DWORD PTR [eax]
  40bb9f:	push   ebp
  40bba0:	mov    dl,0x8b
  40bba2:	push   es
  40bba3:	inc    edx
  40bba4:	mov    edx,0xb2360698
  40bba9:	pushf  
  40bbaa:	push   es
  40bbab:	sub    BYTE PTR [edx-0x4c54f992],bh
  40bbb1:	jno    0x40bbb9
  40bbb3:	stos   BYTE PTR es:[edi],al
  40bbb4:	mov    ebx,0xb3ad0670
  40bbb9:	jae    0x40bbc1
  40bbbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbbc:	mov    ebx,0x672
	...
  40bbd1:	add    BYTE PTR [eax],al
  40bbd3:	add    BYTE PTR [edx-0x6b],cl
  40bbd6:	es push es
  40bbd8:	pop    ebx
  40bbd9:	xchg   ebp,eax
  40bbda:	daa    
  40bbdb:	push   es
  40bbdc:	push   esp
  40bbdd:	xchg   ebp,eax
  40bbde:	sub    BYTE PTR [esi],al
  40bbe0:	push   ebp
  40bbe1:	xchg   ebp,eax
  40bbe2:	sub    DWORD PTR [esi],eax
  40bbe4:	inc    esi
  40bbe5:	xchg   ebp,eax
  40bbe6:	sub    al,BYTE PTR [esi]
  40bbe8:	daa    
  40bbe9:	xchg   ebp,eax
  40bbea:	sub    eax,DWORD PTR [esi]
  40bbec:	adc    BYTE PTR [ebp-0x6abef9d4],dl
  40bbf2:	sub    eax,0x2e952206
  40bbf7:	push   es
  40bbf8:	and    edx,DWORD PTR [ebp-0x6ad3f9d1]
  40bbfe:	xor    BYTE PTR [esi],al
  40bc00:	sbb    eax,0x7e063195
  40bc05:	xchg   ebp,eax
  40bc06:	xor    al,BYTE PTR [esi]
  40bc08:	out    dx,eax
  40bc09:	xchg   ebp,eax
  40bc0a:	xor    eax,DWORD PTR [esi]
  40bc0c:	call   0xe946f0a6
  40bc11:	xchg   ebp,eax
  40bc12:	xor    eax,0x3695ba06
  40bc17:	push   es
  40bc18:	stos   DWORD PTR es:[edi],eax
  40bc19:	xchg   ebp,eax
  40bc1a:	aaa    
  40bc1b:	push   es
  40bc1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc1d:	xchg   ebp,eax
  40bc1e:	cmp    BYTE PTR [esi],al
  40bc20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc21:	xchg   ebp,eax
  40bc22:	cmp    DWORD PTR [esi],eax
  40bc24:	jbe    0x40bbbb
  40bc26:	cmp    al,BYTE PTR [esi]
  40bc28:	mov    esp,0xbd064095
  40bc2d:	xchg   ebp,eax
  40bc2e:	inc    ecx
  40bc2f:	push   es
  40bc30:	scas   al,BYTE PTR es:[edi]
  40bc31:	xchg   ebp,eax
  40bc32:	inc    edx
  40bc33:	push   es
  40bc34:	scas   eax,DWORD PTR es:[edi]
  40bc35:	xchg   ebp,eax
  40bc36:	inc    ebx
  40bc37:	push   es
	...
  40bc4c:	mov    eax,0xb9064495
  40bc51:	xchg   ebp,eax
  40bc52:	inc    ebp
  40bc53:	push   es
  40bc54:	mov    edx,0xeb064695
  40bc59:	lea    eax,[edi+0x6]
  40bc5c:	test   BYTE PTR [ecx-0x304af9b8],dl
  40bc62:	add    BYTE PTR [ecx-0x45],cl
  40bc65:	into   
  40bc66:	add    BYTE PTR [edx-0x4d],cl
  40bc69:	fld    QWORD PTR [eax]
  40bc6b:	dec    ebx
  40bc6c:	mov    ebx,0xb34c00cc
  40bc71:	rol    DWORD PTR [eax],cl
  40bc73:	dec    ebp
  40bc74:	mov    ebx,0xb34e00fa
  40bc79:	and    DWORD PTR [ecx],eax
  40bc7b:	dec    edi
  40bc7c:	mov    ebx,0xb3500118
  40bc81:	pop    ss
  40bc82:	add    DWORD PTR [ecx-0x45],edx
  40bc85:	push   ss
  40bc86:	add    DWORD PTR [edx-0x4d],edx
  40bc89:	inc    edi
  40bc8a:	add    dl,BYTE PTR [edx-0x47]
  40bc8d:	inc    esi
  40bc8e:	add    dl,BYTE PTR [ebx-0x4f]
  40bc91:	inc    ebp
  40bc92:	add    dl,BYTE PTR [ecx-0x47]
  40bc95:	push   esp
  40bc96:	add    dl,BYTE PTR [ecx+esi*4+0xb]
  40bc9a:	add    dl,BYTE PTR [ebp-0x47]
  40bc9d:	adc    al,BYTE PTR [edx]
  40bc9f:	push   esi
  40bca0:	mov    cl,0x9
  40bca2:	add    dl,BYTE PTR [edi-0x47]
  40bca5:	adc    BYTE PTR [edx],al
  40bca7:	pop    eax
  40bca8:	mov    cl,0x1f
  40bcaa:	add    bl,BYTE PTR [ecx-0x47]
  40bcad:	push   ds
  40bcae:	add    bl,BYTE PTR [edx+0x0]
	...
  40bcc1:	add    BYTE PTR [eax],al
  40bcc3:	add    BYTE PTR [ecx-0x46a4fdf3],dh
  40bcc9:	cmp    al,0x2
  40bccb:	pop    esp
  40bccc:	mov    cl,0x63
  40bcce:	add    dl,BYTE PTR [ecx+0x5e024ab9]
  40bcd4:	mov    cl,0x51
  40bcd6:	add    bl,BYTE PTR [edi-0x47]
  40bcd9:	pop    eax
  40bcda:	add    dl,BYTE PTR [esi]
  40bcdc:	xchg   esp,eax
  40bcdd:	ja     0x40bce1
  40bcdf:	add    bh,BYTE PTR [ecx-0x4efcfd8a]
  40bce5:	jne    0x40bce9
  40bce7:	add    DWORD PTR [ecx-0x4efbfd7c],edi
  40bced:	(bad)  
  40bcee:	pushf  
  40bcef:	add    DWORD PTR [eax-0x4cfe686d],edi
  40bcf5:	xchg   ebx,eax
  40bcf6:	sahf   
  40bcf7:	add    DWORD PTR [edx-0x52fe6e6d],edi
  40bcfd:	xchg   ebx,eax
  40bcfe:	add    BYTE PTR [ecx],0xbc
  40bd01:	xchg   ebx,eax
  40bd02:	add    DWORD PTR [ecx],0xffffffbf
  40bd05:	xchg   ebx,eax
  40bd06:	jb     0x40bd09
  40bd08:	scas   al,BYTE PTR es:[edi]
  40bd09:	xchg   ebx,eax
  40bd0a:	ins    DWORD PTR es:[edi],dx
  40bd0b:	add    DWORD PTR [ecx+0x45016493],ebp
  40bd11:	xchg   ebx,eax
  40bd12:	pop    edi
  40bd13:	add    DWORD PTR [ebx-0x4dfea96d],edi
  40bd19:	xchg   ebx,eax
  40bd1a:	test   eax,0xa893eb01
  40bd1f:	add    DWORD PTR [ebp-0x7bfe546d],eax
  40bd25:	xchg   ebx,eax
  40bd26:	stos   BYTE PTR es:[edi],al
  40bd27:	add    DWORD PTR [eax],eax
	...
  40bd39:	add    BYTE PTR [eax],al
  40bd3b:	add    bl,bh
  40bd3d:	xchg   ebx,eax
  40bd3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd3f:	add    DWORD PTR [ecx-0x17fed36d],eax
  40bd45:	xchg   ebx,eax
  40bd46:	daa    
  40bd47:	add    DWORD PTR [ecx-0x6d],esi
  40bd4a:	cs add esi,esp
  40bd4d:	xchg   ebx,eax
  40bd4e:	and    DWORD PTR [ecx],eax
  40bd50:	jo     0x40bce5
  40bd52:	xor    BYTE PTR [ecx],al
  40bd54:	int    0x93
  40bd56:	xor    eax,DWORD PTR [ecx]
  40bd58:	int3   
  40bd59:	xchg   ebx,eax
  40bd5a:	and    al,BYTE PTR [ecx]
  40bd5c:	mov    edi,0xbe011d93
  40bd61:	xchg   ebx,eax
  40bd62:	xor    al,0x1
  40bd64:	mov    cl,0x93
  40bd66:	das    
  40bd67:	add    DWORD PTR [eax-0x5cfed96d],ebp
  40bd6d:	xchg   ebx,eax
  40bd6e:	cmp    DWORD PTR [ecx],eax
  40bd70:	call   0x1b93:0x82011893
  40bd77:	add    DWORD PTR [ebp-0x6d],esi
  40bd7a:	add    BYTE PTR [edx],bl
  40bd7c:	mov    ah,0x50
  40bd7e:	add    al,0x15
  40bd80:	mov    ah,0x4d
  40bd82:	add    al,0xbc
  40bd84:	mov    bh,0x4c
  40bd86:	add    al,0xb7
  40bd88:	mov    bh,0x81
  40bd8a:	add    al,0xbe
  40bd8c:	mov    bh,0x7d
  40bd8e:	add    al,0xb1
  40bd90:	mov    bh,0x4b
  40bd92:	add    al,0xa0
  40bd94:	mov    bh,0x44
  40bd96:	add    al,0xa3
  40bd98:	mov    bh,0x80
  40bd9a:	add    al,0x92
  40bd9c:	mov    bh,0x47
  40bd9e:	add    al,0x8d
	...
  40bdb4:	mov    bh,0x4a
  40bdb6:	add    al,0xc4
  40bdb8:	mov    bh,0x46
  40bdba:	add    al,0xbf
  40bdbc:	mov    bh,0x50
  40bdbe:	add    al,0xb6
  40bdc0:	mov    bh,0x45
  40bdc2:	add    al,0x89
  40bdc4:	mov    bh,0x69
  40bdc6:	add    al,0x88
  40bdc8:	mov    bh,0x9f
  40bdca:	add    al,0x8b
  40bdcc:	mov    bh,0x9e
  40bdce:	add    al,0x8a
  40bdd0:	mov    bh,0x71
  40bdd2:	add    al,0x85
  40bdd4:	mov    bh,0xa3
  40bdd6:	add    al,0x4c
  40bdd8:	mov    bh,0xa2
  40bdda:	add    al,0x47
  40bddc:	mov    bh,0x73
  40bdde:	add    al,0x4e
  40bde0:	mov    bh,0x9c
  40bde2:	add    al,0x41
  40bde4:	mov    bh,0x72
  40bde6:	add    al,0x50
  40bde8:	mov    bh,0x97
  40bdea:	add    al,0x53
  40bdec:	mov    bh,0x96
  40bdee:	add    al,0x42
  40bdf0:	mov    bh,0x95
  40bdf2:	add    al,0x3d
  40bdf4:	mov    bh,0x94
  40bdf6:	add    al,0x14
  40bdf8:	mov    bh,0x9b
  40bdfa:	add    al,0xf
  40bdfc:	mov    bh,0x9a
  40bdfe:	add    al,0x6
  40be00:	mov    bh,0x99
  40be02:	add    al,0x19
  40be04:	mov    bh,0x98
  40be06:	add    al,0x0
  40be08:	int    0x8e
  40be0a:	das    
  40be0b:	add    al,0xce
  40be0d:	mov    fs,WORD PTR [eax]
  40be0f:	add    al,0xbf
  40be11:	mov    fs,WORD PTR [ecx]
  40be13:	add    al,0xc0
  40be15:	mov    fs,WORD PTR [edx]
  40be17:	add    al,0x0
	...
  40be29:	add    BYTE PTR [eax],al
  40be2b:	add    BYTE PTR [ecx-0x7dfbdc72],dl
  40be31:	mov    ss,WORD PTR [esi]
  40be33:	add    al,0x83
  40be35:	mov    ss,WORD PTR [edx]
  40be37:	add    al,0x84
  40be39:	mov    gs,WORD PTR [esp+eax*1]
  40be3c:	jne    0x40bdcc
  40be3e:	sub    eax,DWORD PTR [esi+esi*2]
  40be41:	mov    ss,WORD PTR [edi]
  40be43:	add    al,0x47
  40be45:	mov    gs,WORD PTR [eax]
  40be47:	add    al,0x48
  40be49:	mov    gs,WORD PTR ds:0x298e1904
  40be4f:	add    al,0x4a
  40be51:	mov    fs,WORD PTR [edi]
  40be53:	add    al,0x4b
  40be55:	mov    gs,WORD PTR [edx]
  40be57:	add    al,0xed
  40be59:	pop    DWORD PTR [esi-0x777001fd]
  40be5f:	add    edi,edi
  40be61:	(bad)
  40be65:	(bad)
  40be69:	(bad)
  40be6d:	(bad)  
  40be6e:	mov    WORD PTR [ebx],es
  40be70:	inc    esp
  40be71:	(bad)  
  40be72:	mov    es,WORD PTR [ebx]
  40be74:	xor    eax,0x3703ab8f
  40be79:	(bad)  
  40be7a:	pop    DWORD PTR [ebx]
  40be7c:	sub    cl,BYTE PTR [edi-0x70c4fc7b]
  40be82:	adc    eax,0xac8f7d20
  40be87:	add    edi,DWORD PTR [esi-0x71]
  40be8a:	lods   eax,DWORD PTR ds:[esi]
  40be8b:	add    ecx,DWORD PTR [edi+0x3ae8f]
	...
  40bea1:	add    BYTE PTR [eax],al
  40bea3:	add    BYTE PTR [eax-0x4afc5071],al
  40bea9:	pop    ebx
  40beaa:	add    dl,cl
  40beac:	mov    dh,0x60
  40beae:	add    BYTE PTR [eax-0x33ff864a],dl
  40beb4:	mov    dh,0x4e
  40beb6:	add    ch,cl
  40beb8:	mov    dh,0x7f
  40beba:	add    bl,cl
  40bebc:	mov    dh,0x7c
  40bebe:	add    BYTE PTR [eax-0x32010e4a],dh
  40bec4:	mov    dh,0xe7
  40bec6:	(bad)  
  40bec7:	nop
  40bec8:	mov    dh,0xea
  40beca:	(bad)  
  40becb:	xchg   ecx,eax
  40becc:	mov    dh,0xe9
  40bece:	(bad)  
  40becf:	xchg   edx,eax
  40bed0:	mov    dh,0xe4
  40bed2:	(bad)  
  40bed3:	xchg   ebx,eax
  40bed4:	mov    dh,0xeb
  40bed6:	(bad)  
  40bed7:	xchg   esp,eax
  40bed8:	mov    dh,0xe6
  40beda:	(bad)  
  40bedb:	xchg   ebp,eax
  40bedc:	mov    dh,0xed
  40bede:	(bad)  
  40bedf:	xchg   esi,eax
  40bee0:	mov    dh,0x0
  40bee2:	call   DWORD PTR [edi-0x6701004a]
  40bee8:	mov    dh,0xf2
  40beea:	(bad)  
  40beeb:	cdq    
  40beec:	mov    dh,0xf1
  40beee:	(bad)  
  40beef:	call   0xe3b6:0x9bfefcb6
  40bef6:	(bad)  
  40bef7:	pushf  
  40bef8:	mov    dh,0xee
  40befa:	(bad)  
  40befb:	popf   
  40befc:	mov    dh,0x15
  40befe:	call   FWORD PTR [esi-0x6000874a]
  40bf04:	mov    dh,0x77
  40bf06:	jmp    DWORD PTR [eax+0x0]
	...
  40bf1c:	mov    dh,0x7a
  40bf1e:	jmp    DWORD PTR [edx-0x5c00834a]
  40bf24:	mov    dh,0x93
  40bf26:	jmp    DWORD PTR [esi+esi*4-0x495a0062]
  40bf2d:	xchg   ebp,eax
  40bf2e:	jmp    DWORD PTR [esi-0x58005f4a]
  40bf34:	mov    dh,0x8f
  40bf36:	inc    eax
  40bf37:	call   FWORD PTR ds:0x25ff0893
  40bf3d:	xchg   ebx,eax
  40bf3e:	or     edi,edi
  40bf40:	and    al,0x93
  40bf42:	or     bh,bh
  40bf44:	pop    es
  40bf45:	xchg   ebx,eax
  40bf46:	or     eax,0x49306ff
  40bf4b:	dec    DWORD PTR [ecx]
  40bf4d:	xchg   ebx,eax
  40bf4e:	ud0    eax,DWORD PTR [eax]
  40bf51:	xchg   ebx,eax
  40bf52:	push   es
  40bf53:	jmp    FWORD PTR [ebx-0x6e]
  40bf56:	sar    esi,1
  40bf58:	bound  edx,QWORD PTR [edx-0x6da20130]
  40bf5e:	ret    
  40bf5f:	(bad)  
  40bf60:	pop    esp
  40bf61:	xchg   edx,eax
  40bf62:	ret    0x4ffe
  40bf65:	xchg   edx,eax
  40bf66:	aad    0xfe
  40bf68:	dec    esi
  40bf69:	xchg   edx,eax
  40bf6a:	int3   
  40bf6b:	inc    BYTE PTR [ecx-0x6e]
  40bf6e:	(bad)  
  40bf6f:	(bad)  
  40bf70:	cmp    BYTE PTR [edx-0x6dcc0142],dl
  40bf76:	cdq    
  40bf77:	(bad)  
  40bf78:	sub    dl,BYTE PTR [edx-0x6d8a0168]
  40bf7e:	fwait
  40bf7f:	inc    BYTE PTR [eax]
	...
  40bf91:	add    BYTE PTR [eax],al
  40bf93:	add    BYTE PTR [edi-0x6e],dh
  40bf96:	call   0x76fe:0x7d9274fe
  40bf9d:	xchg   edx,eax
  40bf9e:	je     0x40bf9e
  40bfa0:	jns    0x40bf34
  40bfa2:	jg     0x40bfa2
  40bfa4:	jo     0x40bf38
  40bfa6:	jbe    0x40bfa6
  40bfa8:	sti    
  40bfa9:	xchg   ecx,eax
  40bfaa:	popa   
  40bfab:	(bad)  
  40bfac:	repnz xchg ecx,eax
  40bfae:	pusha  
  40bfaf:	(bad)  
  40bfb0:	in     eax,dx
  40bfb1:	xchg   ecx,eax
  40bfb2:	mov    bl,bh
  40bfb4:	arpl   WORD PTR [edx-0x75],si
  40bfb7:	sti    
  40bfb8:	mov    esi,0xafb8a6c
  40bfbd:	imul   eax,DWORD PTR [ebp+0x72a2fb],0xffffff8c
  40bfc4:	(bad)  
  40bfc5:	outs   dx,BYTE PTR ds:[esi]
  40bfc6:	and    eax,DWORD PTR [edi+0x4e258fee]
  40bfcc:	out    dx,al
  40bfcd:	out    dx,al
  40bfce:	and    dl,BYTE PTR [ecx-0x22]
  40bfd1:	lock and al,BYTE PTR [eax-0x22]
  40bfd5:	icebp  
  40bfd6:	and    al,BYTE PTR [ebx-0x32]
  40bfd9:	jmp    0x40bffd
  40bfdb:	push   edx
  40bfdc:	into   
  40bfdd:	sbb    BYTE PTR [ebx],ah
  40bfdf:	dec    ebp
  40bfe0:	mov    esi,0xbe442312
  40bfe5:	adc    esp,DWORD PTR [ebx]
  40bfe7:	aas    
  40bfe8:	scas   al,BYTE PTR es:[edi]
  40bfe9:	adc    eax,0xeda99623
  40bfee:	and    bl,BYTE PTR [ecx-0x6add165f]
  40bff4:	cdq    
  40bff5:	xor    DWORD PTR [edx],esp
  40bff7:	mov    WORD PTR [eax],es
	...
  40c009:	add    BYTE PTR [eax],al
  40c00b:	add    BYTE PTR [ecx-0x7678ddab],dl
  40c011:	sub    al,0x22
  40c013:	jle    0x40bf96
  40c015:	push   0x22
  40c017:	test   eax,0xa8228179
  40c01c:	jno    0x40bfb2
  40c01e:	and    ch,BYTE PTR [ebx-0x5bdd6c97]
  40c024:	popa   
  40c025:	mov    fs,WORD PTR [edx]
  40c027:	mov    eax,ds:0xa0227959
  40c02c:	push   ecx
  40c02d:	push   edx
  40c02e:	and    dh,BYTE PTR [ecx+ecx*2+0x41af20e1]
  40c035:	fbld   TBYTE PTR [eax]
  40c037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c038:	cmp    DWORD PTR [eax],esi
  40c03a:	and    dl,BYTE PTR [edi+0x43229731]
  40c040:	sub    DWORD PTR [edi],ecx
  40c042:	and    al,BYTE PTR [edx+0x21]
  40c045:	adc    ah,BYTE PTR [edx]
  40c047:	xor    eax,0x2c226819
  40c04c:	adc    DWORD PTR [edi+0x22],esp
  40c04f:	add    dl,dl
  40c051:	mov    bl,0x25
  40c053:	and    ah,BYTE PTR [ebx+0x732226b3]
  40c059:	mov    bl,0x0
  40c05b:	and    ch,BYTE PTR [edx-0x68fe6f4d]
  40c061:	mov    bl,0x8e
  40c063:	and    eax,eax
  40c065:	mov    bl,0x8f
  40c067:	and    ecx,eax
  40c069:	mov    bl,0x90
  40c06b:	and    edx,eax
  40c06d:	mov    bl,0x91
  40c06f:	and    DWORD PTR [eax],eax
	...
  40c081:	add    BYTE PTR [eax],al
  40c083:	add    BYTE PTR [ebx-0x53dbdf48],dl
  40c089:	mov    eax,0xb8ad25c4
  40c08e:	nop
  40c08f:	and    eax,0x2407b8be
  40c094:	jg     0x40c04f
  40c096:	or     ah,BYTE PTR [eax+edi*2]
  40c099:	mov    ecx,0xb969240b
  40c09e:	or     BYTE PTR [esp+esi*2],ah
  40c0a1:	mov    ecx,0xb9652422
  40c0a6:	or     DWORD PTR [esi+eiz*2],esp
  40c0a9:	mov    ecx,0xb9772516
  40c0ae:	push   cs
  40c0af:	and    eax,0x250ab930
  40c0b4:	inc    ecx
  40c0b5:	mov    ecx,0xb9322512
  40c0ba:	cmp    ah,BYTE PTR ds:0x23b8b933
  40c0c0:	sub    al,0xb9
  40c0c2:	mov    ecx,0xfeb9cd23
  40c0c7:	and    al,0xbe
  40c0c9:	mov    ecx,0xb9bf23ba
  40c0ce:	mov    ebx,0x1ab9a823
  40c0d3:	and    eax,0x2522b989
  40c0d8:	mov    bh,BYTE PTR [ecx+0x55b52532]
  40c0de:	cli    
  40c0df:	sub    ebx,eax
  40c0e1:	pop    esi
  40c0e2:	cli    
  40c0e3:	add    eax,edx
  40c0e5:	pop    es
  40c0e6:	stc    
  40c0e7:	add    al,BYTE PTR [eax]
	...
  40c0f9:	add    BYTE PTR [eax],al
  40c0fb:	add    ch,dl
  40c0fd:	or     cl,bh
  40c0ff:	add    ebp,edx
  40c101:	or     ecx,edi
  40c103:	add    edx,DWORD PTR [ebp-0x6afb06f6]
  40c109:	inc    ebx
  40c10a:	stc    
  40c10b:	push   es
  40c10c:	xchg   ebp,eax
  40c10d:	dec    esp
  40c10e:	stc    
  40c10f:	pop    es
  40c110:	xchg   ebp,eax
  40c111:	inc    ebp
  40c112:	stc    
  40c113:	or     BYTE PTR [ebp-0x6af606b2],dl
  40c119:	pop    edi
  40c11a:	stc    
  40c11b:	adc    edx,DWORD PTR [ebp-0x6aed06a0]
  40c121:	dec    edx
  40c122:	stc    
  40c123:	and    bl,cl
  40c125:	jb     0x40c120
  40c127:	and    eax,0x250e19d5
  40c12c:	aad    0x18
  40c12e:	push   cs
  40c12f:	push   ebx
  40c130:	aam    0x17
  40c132:	push   cs
  40c133:	push   esp
  40c134:	aam    0x16
  40c136:	push   cs
  40c137:	push   ebp
  40c138:	aam    0x35
  40c13a:	push   cs
  40c13b:	push   esi
  40c13c:	aam    0x3c
  40c13e:	push   cs
  40c13f:	push   edi
  40c140:	aam    0x33
  40c142:	push   cs
  40c143:	pop    eax
  40c144:	xchg   esp,eax
  40c145:	cmp    cl,BYTE PTR [esi]
  40c147:	pop    ecx
  40c148:	xchg   esp,eax
  40c149:	push   ecx
  40c14a:	push   cs
  40c14b:	pop    edx
  40c14c:	xchg   esp,eax
  40c14d:	xor    BYTE PTR [esi],cl
  40c14f:	add    eax,0x120e5d94
  40c154:	xchg   ebp,eax
  40c155:	inc    esp
  40c156:	push   cs
  40c157:	sub    DWORD PTR [esi-0x4ad1f1b5],edx
  40c15d:	jb     0x40c16d
  40c15f:	sub    al,BYTE PTR [eax]
	...
  40c171:	add    BYTE PTR [eax],al
  40c173:	add    BYTE PTR [esi-0x2ba4f21b],dl
  40c179:	in     al,dx
  40c17a:	or     eax,0x2c8fd45c
  40c17f:	push   cs
  40c180:	xor    BYTE PTR [eax+0x27],0xe
  40c184:	jnp    0x40c1f6
  40c186:	and    BYTE PTR [esi],cl
  40c188:	xlat   BYTE PTR ds:[ebx]
  40c189:	jo     0x40c1ae
  40c18b:	push   cs
  40c18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c18d:	imul   esi,DWORD PTR ds:0x2c6cf40e,0x276d420e
  40c197:	push   cs
  40c198:	(bad)  
  40c199:	ins    BYTE PTR es:[edi],dx
  40c19a:	push   ds
  40c19b:	push   cs
  40c19c:	sbb    ch,BYTE PTR [ebp+0x39]
  40c19f:	push   cs
  40c1a0:	mov    ebp,0xbc0e386f
  40c1a5:	outs   dx,DWORD PTR ds:[esi]
  40c1a6:	cmp    ecx,DWORD PTR [esi]
  40c1a8:	mov    cl,0x6f
  40c1aa:	cmp    cl,BYTE PTR [esi]
  40c1ac:	test   al,0x6f
  40c1ae:	sbb    eax,0x1770a30e
  40c1b3:	push   cs
  40c1b4:	xchg   DWORD PTR [edi+0x1e],ebp
  40c1b7:	push   cs
  40c1b8:	out    0x6f,al
  40c1ba:	adc    BYTE PTR [esi],cl
  40c1bc:	enter  0xc26a,0xd
  40c1c0:	push   ecx
  40c1c1:	ins    BYTE PTR es:[edi],dx
  40c1c2:	mov    ebp,0xb46c750d
  40c1c7:	or     eax,0xdaf6c4b
  40c1cc:	jp     0x40c23a
  40c1ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1cf:	or     eax,0xdc96c53
  40c1d4:	xchg   ebx,eax
  40c1d5:	ins    BYTE PTR es:[edi],dx
  40c1d6:	enter  0xd,0x0
	...
  40c1ea:	add    BYTE PTR [eax],al
  40c1ec:	push   ds
  40c1ed:	ins    BYTE PTR es:[edi],dx
  40c1ee:	retf   
  40c1ef:	or     eax,0xd8a6c18
  40c1f4:	es ins BYTE PTR es:[edi],dx
  40c1f6:	test   DWORD PTR ds:0xd8c6c18,ecx
  40c1fc:	mov    ebx,0x970d8769
  40c201:	outs   dx,DWORD PTR ds:[esi]
  40c202:	mov    cs,WORD PTR ds:0xd916c0f
  40c208:	pop    es
  40c209:	ins    BYTE PTR es:[edi],dx
  40c20a:	add    BYTE PTR [eax-0x7cdb0c40],al
  40c210:	mov    eax,0xb0522693
  40c215:	xchg   ecx,eax
  40c216:	es dec ebp
  40c218:	test   al,0x2e
  40c21a:	es inc esp
  40c21c:	shr    BYTE PTR [ecx],0x26
  40c21f:	aas    
  40c220:	mov    eax,0xb039262c
  40c225:	outs   dx,DWORD PTR ds:[esi]
  40c226:	daa    
  40c227:	cmp    BYTE PTR [eax-0x3fc4df91],ch
  40c22d:	jo     0x40c24f
  40c22f:	cmp    bh,BYTE PTR [eax-0x4fe2d862]
  40c235:	call   0x1f26:0x22a81427
  40c23c:	shl    BYTE PTR [esi+eiz*1],0x16
  40c240:	mov    eax,0xb001264d
  40c245:	dec    edi
  40c246:	add    BYTE PTR es:[eax-0x3e0cd97f],ch
  40c24d:	call   0x0:0xf223
	...
  40c264:	mov    ecx,0xb3e52198
  40c269:	ja     0x40c28b
  40c26b:	fsubr  QWORD PTR [ebx-0x3c28df6b]
  40c271:	xchg   ecx,eax
  40c272:	and    BYTE PTR [edx-0x70ff8c48],cl
  40c278:	mov    al,0x71
  40c27a:	add    BYTE PTR [ecx-0x7fdd9858],dl
  40c280:	shr    BYTE PTR [eax+0x22],0xa9
  40c284:	mov    eax,0xb0aaffe0
  40c289:	jmp    0xad22:0x66a8aa21
  40c290:	rol    BYTE PTR [ebp+0x50b8a723],0x0
  40c297:	add    BYTE PTR [esi],al
  40c299:	sbb    DWORD PTR [eax],0x22
  40c29c:	or     BYTE PTR [ebx-0x7ca5dc6b],al
  40c2a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2a3:	and    cl,BYTE PTR [ebx-0x7d]
  40c2a6:	retf   
  40c2a7:	and    eax,0x230882df
  40c2ac:	loop   0x40c230
  40c2ae:	sub    ah,BYTE PTR [edx]
  40c2b0:	les    eax,FWORD PTR [edx-0x7d39dd7d]
  40c2b6:	and    BYTE PTR [edx],0xd8
  40c2b9:	and    BYTE PTR [edx-0x5c7d47de],0x22
  40c2c0:	retf   
  40c2c1:	lahf   
  40c2c2:	pop    ss
  40c2c3:	and    BYTE PTR [edi+ebx*4-0x30],bh
  40c2c7:	add    eax,0x0
	...
  40c2dc:	lods   eax,DWORD PTR ds:[esi]
  40c2dd:	lahf   
  40c2de:	rol    DWORD PTR ds:0x5d29fae,1
  40c2e4:	mov    edi,0xb005d39f
  40c2e9:	lahf   
  40c2ea:	aam    0x5
  40c2ec:	mov    cl,0x9f
  40c2ee:	aad    0x5
  40c2f0:	mov    dl,0x9f
  40c2f2:	(bad)  
  40c2f3:	add    eax,0x5d79fc3
  40c2f8:	mov    ah,0x9f
  40c2fa:	fadd   DWORD PTR ds:0x5d98085
  40c300:	xchg   BYTE PTR [eax-0x7f88fa26],al
  40c306:	fild   DWORD PTR ds:0x5dc8048
  40c30c:	imul   eax,DWORD PTR [eax-0x7f95fa23],0x807b05de
  40c316:	fild   WORD PTR ds:0x5e0802c
  40c31c:	cmp    eax,0x3e05e180
  40c321:	and    dl,0x5
  40c324:	mov    ch,0x15
  40c326:	pavgw  mm6,QWORD PTR [eax-0x471bf0e6]
  40c32d:	xor    ecx,DWORD PTR [edi]
  40c32f:	in     eax,0xb0
  40c331:	cmp    BYTE PTR [edi],cl
  40c333:	out    0xb8,al
  40c335:	xor    DWORD PTR [edi],ecx
  40c337:	out    0xb0,eax
  40c339:	psubsb mm7,QWORD PTR ds:[eax+0xe90f2f]
	...
  40c351:	add    BYTE PTR [eax],al
  40c353:	add    BYTE PTR [eax-0x4715f0d4],dh
  40c359:	pop    es
  40c35a:	push   cs
  40c35b:	add    DWORD PTR [ebx-0x4cfdf1fc],edi
  40c361:	add    eax,0xaab030e
  40c366:	push   cs
  40c367:	add    al,0xc3
  40c369:	add    ecx,DWORD PTR [esi]
  40c36b:	add    eax,0x60e08bb
  40c370:	mov    bl,0x41
  40c372:	push   cs
  40c373:	pop    es
  40c374:	stos   DWORD PTR es:[edi],eax
  40c375:	pop    esi
  40c376:	push   cs
  40c377:	or     bl,al
  40c379:	dec    edi
  40c37a:	push   cs
  40c37b:	or     DWORD PTR [ebx-0x4cf5f1b4],edi
  40c381:	pop    ebp
  40c382:	push   cs
  40c383:	or     ebp,DWORD PTR [ebx-0x3cf3f1be]
  40c389:	push   ebx
  40c38a:	push   cs
  40c38b:	or     eax,0xe0e6ebb
  40c390:	mov    bl,0x5
  40c392:	adc    DWORD PTR [edi],ecx
  40c394:	stos   DWORD PTR es:[edi],eax
  40c395:	or     BYTE PTR [ecx],dl
  40c397:	adc    bl,al
  40c399:	pop    es
  40c39a:	adc    DWORD PTR [ecx],edx
  40c39c:	mov    ebx,0xb312110a
  40c3a1:	sub    DWORD PTR [ecx],edx
  40c3a3:	adc    ebp,DWORD PTR [ebx-0x3cebeedc]
  40c3a9:	sub    edx,DWORD PTR [ecx]
  40c3ab:	adc    eax,0x161126bb
  40c3b0:	mov    bl,0x8f
  40c3b2:	pop    esi
  40c3b3:	adc    edx,eax
  40c3b5:	popf   
  40c3b6:	popa   
  40c3b7:	adc    DWORD PTR [eax],eax
	...
  40c3c9:	add    BYTE PTR [eax],al
  40c3cb:	add    BYTE PTR [ebp-0x53eeaf63],ch
  40c3d1:	popf   
  40c3d2:	push   ebx
  40c3d3:	adc    DWORD PTR [edi-0x61eebd63],ebx
  40c3d9:	popf   
  40c3da:	cmp    eax,0x349dd111
  40c3df:	adc    eax,ecx
  40c3e1:	popf   
  40c3e2:	das    
  40c3e3:	adc    ebx,eax
  40c3e5:	popf   
  40c3e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3e7:	adc    DWORD PTR [edx-0x2aeed663],edi
  40c3ed:	popf   
  40c3ee:	sub    BYTE PTR [ecx],dl
  40c3f0:	aam    0x9d
  40c3f2:	sub    edx,DWORD PTR [ecx]
  40c3f4:	xlat   BYTE PTR ds:[ebx]
  40c3f5:	popf   
  40c3f6:	sub    dl,BYTE PTR [ecx]
  40c3f8:	(bad)  
  40c3f9:	popf   
  40c3fa:	and    eax,0x2c9d9911
  40c3ff:	adc    DWORD PTR [eax-0x64eed863],edx
  40c405:	popf   
  40c406:	adc    DWORD PTR cs:[edx-0x62eece63],edx
  40c40d:	popf   
  40c40e:	and    BYTE PTR [ecx],dl
  40c410:	pushf  
  40c411:	popf   
  40c412:	and    edx,DWORD PTR [ecx]
  40c414:	(bad)  
  40c415:	popf   
  40c416:	xor    dl,BYTE PTR [ecx]
  40c418:	mov    ds,WORD PTR [ebp-0x621eeed3]
  40c41e:	and    al,0x11
  40c420:	fcomp  DWORD PTR [ebp-0x622ceee1]
  40c426:	mov    dh,0x10
  40c428:	retf   0xb99d
  40c42b:	adc    ch,al
  40c42d:	popf   
  40c42e:	mov    eax,0x10
	...
  40c443:	add    ah,al
  40c445:	popf   
  40c446:	mov    ebx,0x9a9dc710
  40c44b:	adc    dh,al
  40c44d:	popf   
  40c44e:	xchg   ebp,eax
  40c44f:	adc    BYTE PTR [ecx-0x3a63ff63],ch
  40c455:	fs push cs
  40c457:	xchg   edi,eax
  40c458:	lds    esp,FWORD PTR [ebp+0xe]
  40c45b:	mov    esi,0xc10e66c5
  40c460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c461:	addr16 push cs
  40c463:	mov    al,0xa5
  40c465:	push   0x69a5b30e
  40c46a:	push   cs
  40c46b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c46c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c46d:	ins    DWORD PTR es:[edi],dx
  40c46e:	push   cs
  40c46f:	sahf   
  40c470:	lds    ebp,FWORD PTR [esi+0xe]
  40c473:	mov    ebp,eax
  40c475:	dec    edi
  40c476:	push   cs
  40c477:	mov    ch,al
  40c479:	push   eax
  40c47a:	push   cs
  40c47b:	dec    ebx
  40c47c:	lds    edx,FWORD PTR [ecx+0xe]
  40c47f:	dec    edx
  40c480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c481:	push   edx
  40c482:	push   cs
  40c483:	dec    ebp
  40c484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c485:	push   ebx
  40c486:	push   cs
  40c487:	inc    esp
  40c488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c489:	push   esp
  40c48a:	push   cs
  40c48b:	dec    edi
  40c48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c48d:	push   ebp
  40c48e:	push   cs
  40c48f:	inc    esi
  40c490:	lds    edx,FWORD PTR [esi+0xe]
  40c493:	inc    ecx
  40c494:	lds    edx,FWORD PTR [edi+0xe]
  40c497:	inc    eax
  40c498:	lds    ebx,FWORD PTR [eax+0xe]
  40c49b:	adc    eax,ebp
  40c49d:	pop    ecx
  40c49e:	push   cs
  40c49f:	adc    ah,BYTE PTR [ebp-0x5afaf1a6]
  40c4a5:	pop    ebx
  40c4a6:	push   cs
  40c4a7:	cld    
	...
  40c4bc:	mov    dl,0x5c
  40c4be:	push   cs
  40c4bf:	stc    
  40c4c0:	stos   BYTE PTR es:[edi],al
  40c4c1:	aas    
  40c4c2:	push   cs
  40c4c3:	clc    
  40c4c4:	ret    0xe3e
  40c4c7:	sti    
  40c4c8:	mov    edx,0xb2fa0e41
  40c4cd:	inc    eax
  40c4ce:	push   cs
  40c4cf:	(bad)  [edx-0x3d2bf1bd]
  40c4d5:	inc    edx
  40c4d6:	push   cs
  40c4d7:	fistp  QWORD PTR [edx-0x4d29f1bb]
  40c4dd:	inc    esp
  40c4de:	push   cs
  40c4df:	add    BYTE PTR [ebp+ebx*4+0x58],dh
  40c4e3:	push   cs
  40c4e4:	jne    0x40c483
  40c4e6:	pop    ecx
  40c4e7:	push   cs
  40c4e8:	cmp    eax,0x2e31319e
  40c4ed:	sahf   
  40c4ee:	xor    dh,BYTE PTR [ecx]
  40c4f0:	out    dx,eax
  40c4f1:	popf   
  40c4f2:	xor    esi,DWORD PTR [ecx]
  40c4f4:	clc    
  40c4f5:	popf   
  40c4f6:	xor    al,0x31
  40c4f8:	stc    
  40c4f9:	popf   
  40c4fa:	xor    eax,0x369dfa31
  40c4ff:	xor    ebx,ebp
  40c501:	popf   
  40c502:	aaa    
  40c503:	xor    DWORD PTR [ebp+ebx*4-0x628acec8],eax
  40c50a:	cmp    DWORD PTR [ecx],esi
  40c50c:	jbe    0x40c4ab
  40c50e:	cmp    dh,BYTE PTR [ecx]
  40c510:	inc    edi
  40c511:	sahf   
  40c512:	cmp    esi,DWORD PTR [ecx]
  40c514:	inc    eax
  40c515:	sahf   
  40c516:	cmp    al,0x31
  40c518:	xor    DWORD PTR [esi-0x627dcec3],ebx
  40c51e:	xor    DWORD PTR ds:[eax],eax
	...
  40c531:	add    BYTE PTR [eax],al
  40c533:	add    BYTE PTR [ebx],ah
  40c535:	sahf   
  40c536:	aas    
  40c537:	xor    DWORD PTR [ebp+ebx*4+0x40],ebp
  40c53b:	xor    DWORD PTR [ebp-0x63],ebp
  40c53e:	inc    ecx
  40c53f:	xor    DWORD PTR [esi-0x63],ebx
  40c542:	inc    edx
  40c543:	xor    DWORD PTR [edi-0x63],edi
  40c546:	inc    ebx
  40c547:	xor    DWORD PTR [eax-0x63],ebp
  40c54a:	inc    esp
  40c54b:	xor    DWORD PTR [ecx-0x63],ebp
  40c54e:	inc    ebp
  40c54f:	xor    DWORD PTR [edx-0x63],ebp
  40c552:	inc    esi
  40c553:	xor    DWORD PTR [ebx-0x63],edi
  40c556:	inc    edi
  40c557:	xor    esp,esi
  40c559:	popf   
  40c55a:	dec    eax
  40c55b:	xor    ebp,esp
  40c55d:	popf   
  40c55e:	dec    ecx
  40c55f:	xor    esi,esp
  40c561:	popf   
  40c562:	dec    edx
  40c563:	xor    DWORD PTR [edi-0x66],edx
  40c566:	dec    ebx
  40c567:	xor    DWORD PTR [eax],esi
  40c569:	call   0x4d0d:0x3b5314c
  40c570:	les    ebx,FWORD PTR [ecx*1+0xd15c44e]
  40c577:	dec    edi
  40c578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c579:	test   BYTE PTR [eax+edx*2],0xa4
  40c57d:	test   DWORD PTR [ecx+edx*2],0x520cf8a4
  40c584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c585:	stc    
  40c586:	or     al,0x53
  40c588:	test   dl,dh
  40c58a:	or     al,0x54
  40c58c:	test   bl,bh
  40c58e:	or     al,0x55
  40c590:	test   ah,dh
  40c592:	or     al,0x56
  40c594:	test   ch,bh
  40c596:	or     al,0x57
	...
  40c5ac:	in     al,0xde
  40c5ae:	or     al,0x58
  40c5b0:	in     al,0xef
  40c5b2:	or     al,0x59
  40c5b4:	in     al,0xf0
  40c5b6:	or     al,0x5a
  40c5b8:	in     al,0x61
  40c5ba:	or     eax,0xd7ac45b
  40c5bf:	pop    esp
  40c5c0:	les    esi,FWORD PTR [ebx+0xd]
  40c5c3:	pop    ebp
  40c5c4:	les    ecx,FWORD PTR [ebp+ecx*1+0xd65c45e]
  40c5cb:	pop    edi
  40c5cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5cd:	xchg   BYTE PTR ds:0xd87a460,cl
  40c5d3:	popa   
  40c5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5d5:	mov    BYTE PTR ds:0xd69a462,cl
  40c5db:	arpl   WORD PTR [edx+eiz*2+0x6ba4a80d],ax
  40c5e2:	or     eax,0xd64a4a9
  40c5e7:	stos   BYTE PTR es:[edi],al
  40c5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5e9:	lea    ecx,ds:0xd70c4ab
  40c5ef:	lods   al,BYTE PTR ds:[esi]
  40c5f0:	les    edi,FWORD PTR [edi+0xd]
  40c5f3:	lods   eax,DWORD PTR ds:[esi]
  40c5f4:	les    edi,FWORD PTR [esi+0xd]
  40c5f7:	scas   al,BYTE PTR es:[edi]
  40c5f8:	les    ecx,FWORD PTR [edi-0x7e9df53e]
  40c5fe:	mov    ebp,0xb481450a
  40c603:	or     al,BYTE PTR [ecx+eax*4-0x51]
  40c607:	or     al,BYTE PTR [edi-0x7f]
  40c60a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c60b:	or     ah,BYTE PTR [esi]
  40c60d:	or     ecx,0xa
	...
  40c623:	add    BYTE PTR [ecx],ah
  40c625:	or     eax,0xcb81280a
  40c62b:	or     ah,BYTE PTR [ebx]
  40c62d:	or     DWORD PTR [edx-0x7a7ef5f6],0x8c810d0a
  40c637:	or     bh,ah
  40c639:	add    BYTE PTR [edi-0x717f00f6],0xa
  40c640:	outs   dx,BYTE PTR ds:[esi]
  40c641:	adc    DWORD PTR [ecx-0x7f7e96f6],0x8381600a
  40c64b:	or     bl,BYTE PTR [ebx-0x7f]
  40c64e:	push   edx
  40c64f:	or     dl,BYTE PTR [edx-0x7f]
  40c652:	dec    ebp
  40c653:	or     dh,ch
  40c655:	add    BYTE PTR [edx+ecx*1-0xc],0x80
  40c65a:	aas    
  40c65b:	or     dh,bh
  40c65d:	adc    BYTE PTR [esi+0xa],0x60
  40c661:	pusha  
  40c662:	cmp    DWORD PTR [edx],ecx
  40c664:	fs pusha 
  40c666:	cmp    BYTE PTR [edx],cl
  40c668:	pop    ebp
  40c669:	pusha  
  40c66a:	cmp    ecx,DWORD PTR [edx]
  40c66c:	pop    edx
  40c66d:	pusha  
  40c66e:	sbb    cl,BYTE PTR [edx]
  40c670:	xor    al,0x61
  40c672:	adc    eax,0x1c61310a
  40c677:	or     bh,BYTE PTR [ebx]
  40c679:	popa   
  40c67a:	pop    ss
  40c67b:	or     ch,BYTE PTR [eax]
  40c67d:	popa   
  40c67e:	dec    BYTE PTR [ecx]
  40c680:	inc    ebx
  40c681:	pusha  
  40c682:	add    DWORD PTR [edx],ecx
  40c684:	sahf   
  40c685:	add    BYTE PTR [eax],0xf0
	...
  40c69c:	lods   al,BYTE PTR ds:[esi]
  40c69d:	lahf   
  40c69e:	adc    bl,dh
  40c6a0:	lods   al,BYTE PTR ds:[esi]
  40c6a1:	test   al,0x10
  40c6a3:	out    0xbc,al
  40c6a5:	clc    
  40c6a6:	pop    ds
  40c6a7:	test   DWORD PTR [ebx-0x546ae005],esp
  40c6ad:	cmp    eax,0x3ea38c01
  40c6b2:	add    DWORD PTR [edi-0x76fed835],eax
  40c6b8:	push   esi
  40c6b9:	or     ah,BYTE PTR [eax]
  40c6bb:	mov    BYTE PTR [esi-0x11],dl
  40c6be:	pop    ds
  40c6bf:	mov    edx,DWORD PTR [esi-0x10]
  40c6c2:	pop    ds
  40c6c3:	dec    edx
  40c6c4:	push   esi
  40c6c5:	in     eax,dx
  40c6c6:	pop    ds
  40c6c7:	inc    ebp
  40c6c8:	push   esi
  40c6c9:	out    dx,al
  40c6ca:	pop    ds
  40c6cb:	dec    esp
  40c6cc:	push   esi
  40c6cd:	repz pop ds
  40c6cf:	inc    edi
  40c6d0:	push   esi
  40c6d1:	hlt    
  40c6d2:	pop    ds
  40c6d3:	dec    esi
  40c6d4:	push   ss
  40c6d5:	icebp  
  40c6d6:	pop    ds
  40c6d7:	push   ecx
  40c6d8:	push   ss
  40c6d9:	repnz pop ds
  40c6db:	inc    eax
  40c6dc:	push   ss
  40c6dd:	neg    DWORD PTR [edi]
  40c6df:	inc    ebx
  40c6e0:	push   ss
  40c6e1:	clc    
  40c6e2:	pop    ds
  40c6e3:	xchg   edx,eax
  40c6e4:	push   ss
  40c6e5:	cmc    
  40c6e6:	pop    ds
  40c6e7:	lea    edx,[esi]
  40c6e9:	neg    BYTE PTR [edi]
  40c6eb:	loope  0x40c6ac
  40c6ed:	pop    DWORD PTR [eax]
  40c6ef:	loope  0x40c6a7
  40c6f1:	pop    DWORD PTR [eax]
  40c6f3:	lock scas eax,DWORD PTR es:[edi]
  40c6f5:	pop    DWORD PTR [eax]
  40c6f7:	lock mov dh,0x8f
  40c6fa:	add    dl,ah
  40c6fc:	lahf   
  40c6fd:	pop    DWORD PTR [eax]
  40c6ff:	fld    QWORD PTR [eax]
	...
  40c711:	add    BYTE PTR [eax],al
  40c713:	add    BYTE PTR [esi-0x700bff71],dh
  40c719:	pop    DWORD PTR [eax]
  40c71b:	in     al,dx
  40c71c:	mov    dh,0x8f
  40c71e:	add    dl,bh
  40c720:	jg     0x40c6b1
  40c722:	add    dl,bh
  40c724:	mov    dh,0x8f
  40c726:	add    BYTE PTR [eax],al
  40c728:	xchg   edi,eax
  40c729:	data16 add BYTE PTR [eax],al
  40c72c:	xchg   edi,eax
  40c72d:	lea    eax,[eax]
  40c72f:	add    BYTE PTR [ebx+0x5a000067],ch
  40c735:	xchg   esp,eax
  40c736:	add    BYTE PTR [eax],al
  40c738:	int3   
  40c739:	data16 add BYTE PTR [eax],al
  40c73c:	mov    al,0x8c
  40c73e:	add    BYTE PTR [eax],al
  40c740:	mov    ebp,0xb1000066
  40c745:	mov    WORD PTR [eax],es
  40c747:	add    dh,cl
  40c749:	data16 add BYTE PTR [eax],al
  40c74c:	mov    dl,0x8c
  40c74e:	add    BYTE PTR [eax],al
  40c750:	mov    edi,0xb3000066
  40c755:	mov    WORD PTR [eax],es
  40c757:	add    BYTE PTR [eax+0x64000066],dl
  40c75d:	mov    es,WORD PTR [eax]
  40c75f:	add    BYTE PTR [ecx+0x6d000066],al
  40c765:	mov    es,WORD PTR [eax]
  40c767:	add    dl,dl
  40c769:	data16 add BYTE PTR [eax],al
  40c76c:	dec    BYTE PTR [ebp+0x66c30000]
  40c772:	add    BYTE PTR [eax],al
  40c774:	out    dx,eax
  40c775:	lea    eax,[eax]
	...
  40c78b:	add    ah,bh
  40c78d:	add    BYTE PTR [bx+si],al
  40c790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c791:	xchg   ebx,eax
  40c792:	add    BYTE PTR [eax],al
  40c794:	in     eax,dx
  40c795:	add    BYTE PTR [bx+si],al
  40c798:	clc    
  40c799:	mov    WORD PTR [eax],es
  40c79b:	add    dh,bh
  40c79d:	add    BYTE PTR [bx+si],al
  40c7a0:	(bad)  
  40c7a1:	xchg   ebx,eax
  40c7a2:	add    BYTE PTR [eax],al
  40c7a4:	out    dx,eax
  40c7a5:	add    BYTE PTR [bx+si],al
  40c7a8:	(bad)  [ebp+0x68260000]
  40c7ae:	add    BYTE PTR [eax],al
  40c7b0:	sti    
  40c7b1:	mov    WORD PTR [eax],es
  40c7b3:	add    BYTE PTR [ebp-0x4affc7f3],dh
  40c7b9:	mov    ch,0x1
  40c7bb:	add    BYTE PTR [ebp-0x4affc6ca],dh
  40c7c1:	(bad)  
  40c7c2:	add    al,BYTE PTR [eax]
  40c7c4:	mov    ch,0x2f
  40c7c6:	cmp    DWORD PTR [eax],eax
  40c7c8:	mov    ch,0xaf
  40c7ca:	add    al,BYTE PTR [eax]
  40c7cc:	mov    ch,0x23
  40c7ce:	cmp    BYTE PTR [eax],al
  40c7d0:	mov    ch,0xbb
  40c7d2:	add    DWORD PTR [eax],eax
  40c7d4:	mov    ch,0x27
  40c7d6:	cmp    BYTE PTR [eax],al
  40c7d8:	mov    ch,0x46
  40c7da:	add    al,0x0
  40c7dc:	mov    ch,0x44
  40c7de:	cmp    BYTE PTR [eax],al
  40c7e0:	mov    ch,0x67
  40c7e2:	add    al,0x0
  40c7e4:	mov    ch,0x45
  40c7e6:	cmp    BYTE PTR [eax],al
  40c7e8:	mov    ch,0x64
  40c7ea:	add    al,0x0
  40c7ec:	mov    ch,0x2a
  40c7ee:	cmp    BYTE PTR [eax],al
	...
  40c804:	mov    ch,0x85
  40c806:	add    al,0x0
  40c808:	mov    ch,0x2b
  40c80a:	cmp    BYTE PTR [eax],al
  40c80c:	mov    ch,0xd2
  40c80e:	add    al,BYTE PTR [eax]
  40c810:	mov    ch,0x48
  40c812:	cmp    BYTE PTR [eax],al
  40c814:	mov    ch,0xd3
  40c816:	add    al,BYTE PTR [eax]
  40c818:	mov    ch,0x49
  40c81a:	cmp    BYTE PTR [eax],al
  40c81c:	mov    ch,0xd0
  40c81e:	add    al,BYTE PTR [eax]
  40c820:	mov    ch,0xe
  40c822:	cmp    BYTE PTR [eax],al
  40c824:	mov    ch,0x91
  40c826:	add    al,0x0
  40c828:	mov    ch,0x1f
  40c82a:	cmp    BYTE PTR [eax],al
  40c82c:	mov    ch,0x8e
  40c82e:	add    al,0x0
  40c830:	mov    ch,0x32
  40c832:	cmp    BYTE PTR [eax],al
  40c834:	mov    ch,0x95
  40c836:	add    al,0x0
  40c838:	mov    ch,0x3c
  40c83a:	cmp    BYTE PTR [eax],al
  40c83c:	mov    ch,0x97
  40c83e:	add    al,0x0
  40c840:	mov    ch,0x8f
  40c842:	cmp    BYTE PTR [eax],0xb5
  40c845:	(bad)  
  40c846:	retf   
  40c847:	add    esi,DWORD PTR [ebp-0x4ac78b71]
  40c84d:	(bad)  
  40c84e:	fld    QWORD PTR [ebx]
  40c850:	mov    ch,0x8f
  40c852:	cmp    BYTE PTR [di-0x3371],dh
  40c857:	add    esi,DWORD PTR [ebp-0x4ac7a971]
  40c85d:	(bad)  
  40c85e:	mov    edi,0x938fb503
  40c863:	aaa    
  40c864:	mov    ch,0x8f
  40c866:	push   ebx
  40c867:	add    al,0x0
	...
  40c879:	add    BYTE PTR [eax],al
  40c87b:	add    BYTE PTR [ebp-0x4ac87d71],dh
  40c881:	pop    DWORD PTR [edx+0x4]
  40c884:	mov    ch,0x8f
  40c886:	xchg   ebp,eax
  40c887:	aaa    
  40c888:	mov    ch,0x8f
  40c88a:	dec    ebp
  40c88b:	add    al,0xb5
  40c88d:	pop    DWORD PTR [edi+esi*1+0x43c8fb5]
  40c894:	mov    ch,0x8f
  40c896:	push   edi
  40c897:	aaa    
  40c898:	mov    ch,0x8f
  40c89a:	(bad)  
  40c89c:	mov    ch,0x8f
  40c89e:	inc    esi
  40c89f:	aaa    
  40c8a0:	mov    ch,0x8f
  40c8a2:	inc    BYTE PTR [esi*4-0x4ac8c671]
  40c8a9:	(bad)
  40c8ad:	(bad)  
  40c8ae:	cmp    BYTE PTR [edi],dh
  40c8b0:	mov    ch,0x8f
  40c8b2:	or     BYTE PTR [esi*4-0x4ac86471],al
  40c8b9:	(bad)  
  40c8ba:	retf   
  40c8bb:	add    esi,DWORD PTR [ebp-0x4ac86571]
  40c8c1:	(bad)
  40c8c5:	(bad)  
  40c8c6:	jge    0x40c8ff
  40c8c8:	mov    ch,0x8f
  40c8ca:	lds    eax,FWORD PTR [ebx]
  40c8cc:	mov    ch,0x8f
  40c8ce:	add    BYTE PTR [edx+eiz*4-0x71],bh
  40c8d2:	add    ah,al
  40c8d4:	mov    dh,0x8f
  40c8d6:	add    BYTE PTR [edi-0x7e],bl
  40c8d9:	pop    DWORD PTR [eax]
  40c8db:	xchg   DWORD PTR [esi+0x5e008f],esi
	...
  40c8f1:	add    BYTE PTR [eax],al
  40c8f3:	add    BYTE PTR [edx-0x4979ff71],al
  40c8f9:	pop    DWORD PTR [eax]
  40c8fb:	inc    ecx
  40c8fc:	loop   0x40c88d
  40c8fe:	add    BYTE PTR [ecx+0x30008fb6],dl
  40c904:	loop   0x40c895
  40c906:	add    BYTE PTR [eax-0x58ff704a],al
  40c90c:	ret    
  40c90d:	pop    DWORD PTR [eax]
  40c90f:	pop    ecx
  40c910:	mov    ecx,0xc396008f
  40c915:	pop    DWORD PTR [eax]
  40c917:	pop    eax
  40c918:	mov    ecx,0xa3a9008f
  40c91d:	pop    DWORD PTR [eax]
  40c91f:	cmp    edi,DWORD PTR [ecx-0x5c57ff71]
  40c925:	pop    DWORD PTR [eax]
  40c927:	cmp    bh,BYTE PTR [ecx-0x7c54ff71]
  40c92d:	pop    DWORD PTR [eax]
  40c92f:	adc    eax,0xaa008fb9
  40c934:	or     DWORD PTR [edi-0x7046ec00],0x0
  40c93b:	lods   eax,DWORD PTR ds:[esi]
  40c93c:	jecxz  0x40c8cd
  40c93e:	add    bh,dh
  40c940:	mov    dh,0x8f
  40c942:	add    BYTE PTR [ebx+eiz*8-0x4909ff71],ch
  40c949:	pop    DWORD PTR [eax]
  40c94b:	das    
  40c94c:	ret    
  40c94d:	pop    DWORD PTR [eax]
  40c94f:	loope  0x40c907
  40c951:	pop    DWORD PTR [eax]
  40c953:	cs ret 
  40c955:	pop    DWORD PTR [eax]
  40c957:	rol    BYTE PTR [eax],1
	...
  40c969:	add    BYTE PTR [eax],al
  40c96b:	add    BYTE PTR [esi-0x5bffff71],dh
  40c971:	pop    ebp
  40c972:	add    BYTE PTR [eax],al
  40c974:	not    BYTE PTR [ecx+0x5d950000]
  40c97a:	add    BYTE PTR [eax],al
  40c97c:	pop    es
  40c97d:	xchg   edx,eax
  40c97e:	add    BYTE PTR [eax],al
  40c980:	xchg   BYTE PTR [ebp+0x0],bl
  40c983:	add    BYTE PTR [eax],ah
  40c985:	xchg   edx,eax
  40c986:	add    BYTE PTR [eax],al
  40c988:	xchg   edi,eax
  40c989:	pop    ebp
  40c98a:	add    BYTE PTR [eax],al
  40c98c:	inc    ecx
  40c98d:	xchg   ecx,eax
  40c98e:	add    BYTE PTR [eax],al
  40c990:	loopne 0x40c9ef
  40c992:	add    BYTE PTR [eax],al
  40c994:	and    dl,BYTE PTR [ecx+0x5dd10000]
  40c99a:	add    BYTE PTR [eax],al
  40c99c:	and    edx,DWORD PTR [ecx+0x5b420000]
  40c9a2:	add    BYTE PTR [eax],al
  40c9a4:	or     al,0x8c
  40c9a6:	add    BYTE PTR [eax],al
  40c9a8:	push   ebx
  40c9a9:	pop    ebx
  40c9aa:	add    BYTE PTR [eax],al
  40c9ac:	fisttp QWORD PTR [ebx+0x5b4c0000]
  40c9b2:	add    BYTE PTR [eax],al
  40c9b4:	into   
  40c9b5:	mov    eax,DWORD PTR [eax]
  40c9b7:	add    BYTE PTR ds:0xdf00005b,bh
  40c9bd:	mov    eax,DWORD PTR [eax]
  40c9bf:	add    BYTE PTR [esi],cl
  40c9c1:	pop    ebx
  40c9c2:	add    BYTE PTR [eax],al
  40c9c4:	fmul   DWORD PTR [ebx+0x5aff0000]
  40c9ca:	add    BYTE PTR [eax],al
  40c9cc:	cdq    
  40c9cd:	mov    eax,DWORD PTR [eax]
	...
  40c9e3:	add    BYTE PTR [eax+0x5b],cl
  40c9e6:	add    BYTE PTR [eax],al
  40c9e8:	call   0x5b:0x3900008b
  40c9ef:	add    BYTE PTR [ebx+0x7d00008b],bl
  40c9f5:	pop    edx
  40c9f6:	add    BYTE PTR [eax],al
  40c9f8:	sub    al,0x8c
  40c9fa:	add    BYTE PTR [eax],al
  40c9fc:	mov    ch,0x58
  40c9fe:	xor    eax,0x417b500
  40ca03:	add    BYTE PTR [ebp-0x4affcaa7],dh
  40ca09:	sbb    BYTE PTR [eax+eax*1],al
  40ca0c:	mov    ch,0x52
  40ca0e:	xor    eax,0x319b500
  40ca13:	add    BYTE PTR [ebp-0x4affca81],dh
  40ca19:	dec    edx
  40ca1a:	add    al,0x0
  40ca1c:	mov    ch,0x90
  40ca1e:	xor    eax,0x34bb500
  40ca23:	add    BYTE PTR [ebp-0x4affca7f],dh
  40ca29:	icebp  
  40ca2a:	add    al,BYTE PTR [eax]
  40ca2c:	mov    ch,0x8a
  40ca2e:	xor    eax,0x312b500
  40ca33:	add    BYTE PTR [ebp-0x4affcaab],dh
  40ca39:	arpl   WORD PTR [eax+eax*1],ax
  40ca3c:	mov    ch,0x9
  40ca3e:	push   ebp
  40ca3f:	call   0x97e24b86
  40ca44:	in     eax,0x4b
  40ca46:	dec    ebp
  40ca47:	ret    0x0
	...
  40ca5a:	add    BYTE PTR [eax],al
  40ca5c:	into   
  40ca5d:	cmp    al,BYTE PTR [ecx-0x651294c1]
  40ca63:	xlat   BYTE PTR ds:[ebx]
  40ca64:	cwde   
  40ca65:	push   ebp
  40ca66:	mov    esi,0x1ef01b4a
  40ca6b:	dec    ebp
  40ca6c:	push   ds
  40ca6d:	shl    DWORD PTR [ebx+0x17],1
  40ca70:	ret    0x3618
  40ca73:	mov    bl,0xd0
  40ca75:	inc    eax
  40ca76:	mov    dh,0x81
  40ca78:	push   0x68
  40ca7a:	cmc    
  40ca7b:	push   ecx
  40ca7c:	loop   0x40cafd
  40ca7e:	cmc    
  40ca7f:	cmp    edx,ebx
  40ca81:	stos   BYTE PTR es:[edi],al
  40ca82:	repz (bad) 
  40ca84:	outs   dx,DWORD PTR ds:[esi]
  40ca85:	std    
  40ca86:	or     DWORD PTR [ebx],esi
  40ca88:	pop    eax
  40ca89:	(bad)  
  40ca8a:	fist   WORD PTR [ecx+0x685f0d68]
  40ca90:	push   edx
  40ca91:	mov    ds:0x5b12ba2c,eax
  40ca96:	and    ebp,esp
  40ca98:	cmp    BYTE PTR [ebp-0x46],dl
  40ca9b:	dec    esi
  40ca9c:	sub    al,0xfa
  40ca9e:	push   ecx
  40ca9f:	add    eax,0x4698c968
  40caa4:	sti    
  40caa5:	sub    al,BYTE PTR [ebx+0x21]
  40caa8:	sub    BYTE PTR [edi-0x9],bl
  40caab:	out    dx,al
  40caac:	jne    0x40cb12
  40caae:	scas   eax,DWORD PTR es:[edi]
  40caaf:	dec    esi
  40cab0:	or     al,BYTE PTR [ebx+0x5bb9e3ba]
  40cab6:	add    BYTE PTR [esi-0x7],bh
  40cab9:	cmp    DWORD PTR [edi],eax
  40cabb:	mov    dh,0xcd
  40cabd:	icebp  
  40cabe:	xchg   ebp,eax
  40cabf:	outs   dx,BYTE PTR ds:[esi]
	...
  40cad4:	int3   
  40cad5:	pusha  
  40cad6:	sub    al,bh
  40cad8:	sub    eax,0xd80abca1
  40cadd:	addr16 call 0x5f1f:0x522423b1
  40cae5:	mov    bh,0xdb
  40cae7:	aaa    
  40cae8:	cmp    al,BYTE PTR [ebx]
  40caea:	imul   edi,DWORD PTR [ecx+edx*2+0x77],0x23680639
  40caf2:	pop    ebx
  40caf3:	and    eax,0xcdbd501e
  40caf8:	adc    edi,DWORD PTR [eax+0x31]
  40cafb:	jae    0x40caac
  40cafd:	mov    ebx,0x38101ca4
  40cb02:	mov    bl,0xbe
  40cb04:	ss popa 
  40cb06:	xchg   ebp,eax
  40cb07:	cmc    
  40cb08:	mov    dh,0x5d
  40cb0a:	(bad)  
  40cb0c:	(bad)  
  40cb0d:	pop    ebp
  40cb0e:	in     eax,0xf5
  40cb10:	(bad)  
  40cb11:	pop    ebp
  40cb12:	int    0xf5
  40cb14:	out    0x5d,al
  40cb16:	add    BYTE PTR [ebp+0x20230c08],dh
  40cb1c:	cli    
  40cb1d:	retf   0x149
  40cb20:	pop    ds
  40cb21:	adc    al,0xc7
  40cb23:	and    ah,dh
  40cb25:	push   ss
  40cb26:	push   ebp
  40cb27:	(bad)  
  40cb29:	dec    ecx
  40cb2a:	jmp    0x40caae
  40cb2c:	mov    dh,0xa9
  40cb2e:	sbb    al,0x15
  40cb30:	cmp    eax,0xe38d55ea
  40cb35:	fidiv  WORD PTR [ecx]
  40cb37:	jne    0x40cb39
	...
  40cb49:	add    BYTE PTR [eax],al
  40cb4b:	add    bl,cl
  40cb4d:	into   
  40cb4e:	xor    DWORD PTR ds:0x4531bec3,ebx
  40cb54:	retf   
  40cb55:	scas   al,BYTE PTR es:[edi]
  40cb56:	xor    DWORD PTR ds:0x91ef9ec3,ecx
  40cb5c:	in     eax,dx
  40cb5d:	jne    0x40cb63
  40cb5f:	(bad)  
  40cb60:	adc    eax,0xfe0ebd88
  40cb65:	jno    0x40cbcd
  40cb67:	pop    ebx
  40cb68:	pop    ebx
  40cb69:	fiadd  DWORD PTR [esi+0x75e2dbd4]
  40cb6f:	(bad)  
  40cb70:	sar    BYTE PTR [edi],1
  40cb72:	cmp    al,BYTE PTR [edx]
  40cb74:	mov    ch,BYTE PTR [esi]
  40cb76:	xor    ecx,DWORD PTR [ebp-0x7e]
  40cb79:	push   ds
  40cb7a:	xor    edx,DWORD PTR [ebp+0x6a]
  40cb7d:	push   cs
  40cb7e:	xor    ebx,DWORD PTR [ebp+0x63]
  40cb81:	(bad)  
  40cb82:	xor    ah,BYTE PTR [ebp+0x6b]
  40cb85:	out    dx,al
  40cb86:	xor    cl,BYTE PTR [esi+0x6a]
  40cb89:	sbb    DWORD PTR [ebx+0x7dc42e30],ecx
  40cb8f:	and    eax,0x764c9d4c
  40cb94:	test   BYTE PTR [ecx],bl
  40cb96:	xchg   DWORD PTR [ecx+0x1d],ecx
  40cb99:	imul   edi,esi,0x676c5b22
  40cb9f:	fnstenv [edi+0x1800347b]
  40cba5:	call   0x3432:0x99e83422
  40cbac:	dec    eax
  40cbad:	call   0x0:0x3442
	...
  40cbc4:	test   al,0xa7
  40cbc6:	push   edx
  40cbc7:	xor    al,0xf8
  40cbc9:	mov    ecx,0xadf2fc16
  40cbce:	mov    bh,0x12
  40cbd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbd1:	cmp    ebx,DWORD PTR [edi+0x3e]
  40cbd4:	ret    
  40cbd5:	sub    edx,DWORD PTR [ebx-0x5e]
  40cbd8:	in     al,0xbf
  40cbda:	mov    al,ds:0xebc51932
  40cbdf:	inc    eax
  40cbe0:	into   
  40cbe1:	xchg   ebp,eax
  40cbe2:	cli    
  40cbe3:	xor    al,0xa8
  40cbe5:	call   0x34e2:0x9a7834d2
  40cbec:	test   al,0x9a
  40cbee:	repnz xor al,0xc8
  40cbf1:	cwde   
  40cbf2:	add    dh,BYTE PTR ds:0xcdda888
  40cbf8:	pusha  
  40cbf9:	dec    ebx
  40cbfa:	in     eax,dx
  40cbfb:	das    
  40cbfc:	std    
  40cbfd:	cmp    BYTE PTR [ecx+0x10bd5bfe],dl
  40cc03:	(bad)  
  40cc04:	bound  ebp,QWORD PTR [ecx]
  40cc06:	sub    eax,0xda8fcd76
  40cc0b:	xchg   BYTE PTR [ecx+0x61],ah
  40cc0e:	or     BYTE PTR [edi],0x8
  40cc11:	cdq    
  40cc12:	xor    BYTE PTR ds:0x35929908,0xd8
  40cc19:	cwde   
  40cc1a:	mov    ds:0xb2992835,al
  40cc1f:	xor    eax,0xf2c298c8
  40cc24:	xchg   edx,eax
  40cc25:	loopne 0x40cc72
  40cc27:	jns    0x40cc29
	...
  40cc39:	add    BYTE PTR [eax],al
  40cc3b:	add    BYTE PTR [edx+ebx*1-0x1d],dl
  40cc3f:	shr    BYTE PTR [edx+0x4e],1
  40cc42:	mov    ah,0x13
  40cc44:	mov    ch,0x4b
  40cc46:	pop    edi
  40cc47:	test   eax,0x6aaa4acb
  40cc4c:	mov    cl,ah
  40cc4e:	mov    ds:0xf8c77c17,al
  40cc53:	xor    ecx,ebx
  40cc55:	(bad)  
  40cc57:	inc    ebx
  40cc58:	ret    
  40cc59:	cmp    dl,0x53
  40cc5c:	retf   
  40cc5d:	retf   0x63f8
  40cc60:	ret    
  40cc61:	sar    al,cl
  40cc63:	jae    0x40cc10
  40cc65:	cld    
  40cc66:	push   ss
  40cc67:	js     0x40cbf2
  40cc69:	mov    esi,0xa79eda5e
  40cc6e:	mov    dl,0xc6
  40cc70:	(bad)  
  40cc71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc72:	and    BYTE PTR ds:0x5be8f0e0,0xb
  40cc79:	call   0xdb72e1d
  40cc7e:	mov    dh,0xe3
  40cc80:	adc    DWORD PTR [edx+0x7aebf3fa],0xfffffffa
  40cc87:	add    esp,edx
  40cc89:	ret    0x13f7
  40cc8c:	jmp    0x25d2:0xe223f7aa
  40cc93:	psrlq  mm1,QWORD PTR [ebx+0x4e]
  40cc97:	xchg   edx,eax
  40cc98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc99:	sub    ebx,DWORD PTR [ebx-0x7991bdb]
  40cc9f:	xchg   ebp,eax
	...
  40ccb4:	jne    0x40cc8f
  40ccb6:	jl     0x40cccf
  40ccb8:	pop    ebp
  40ccb9:	lock jle 0x40ccba
  40ccbc:	jmp    0xf82a:0xaaa3fa5b
  40ccc3:	mov    ds:0xb3f812a2,eax
  40ccc8:	mov    bl,BYTE PTR [edx]
  40ccca:	clc    
  40cccb:	ret    
  40cccc:	add    BYTE PTR [edx],0xf8
  40cccf:	ror    DWORD PTR [edx+0x6db3e98f],cl
  40ccd5:	fs mov ecx,0x897f10c3
  40ccdb:	ret    
  40ccdc:	sub    DWORD PTR [eax],esp
  40ccde:	fld    TBYTE PTR [ecx]
  40cce0:	(bad)  
  40cce1:	clc    
  40cce2:	mov    ah,0x24
  40cce4:	jmp    0x848d:0x742d2176
  40cceb:	mov    esi,DWORD PTR [edi]
  40cced:	sbb    DWORD PTR [ecx-0x15],eax
  40ccf0:	dec    esi
  40ccf1:	addr16 cdq 
  40ccf3:	jmp    0x40cd3b
  40ccf5:	addr16 mov eax,ds:0x2eeb
  40ccf9:	addr16 sub ebx,ebp
  40ccfc:	xchg   esi,eax
  40ccfd:	data16 mov ch,0xea
  40cd00:	mov    al,bh
  40cd02:	sahf   
  40cd03:	daa    
  40cd04:	inc    ebx
  40cd05:	pop    ecx
  40cd06:	xchg   esp,eax
  40cd07:	leave  
  40cd08:	out    0x24,al
  40cd0a:	dec    esi
  40cd0b:	xor    al,0xd3
  40cd0d:	mov    ss,WORD PTR [ebx]
  40cd0f:	jg     0x40cd23
  40cd11:	test   eax,0xd6c9bb59
  40cd16:	sub    esp,esp
	...
  40cd2c:	push   ecx
  40cd2d:	and    eax,0x59aaea5c
  40cd32:	in     eax,0xed
  40cd34:	mov    edx,0xd2edf559
  40cd39:	pop    ecx
  40cd3a:	int    0xed
  40cd3c:	loop   0x40cd97
  40cd3e:	mov    ebp,0x6459caed
  40cd43:	inc    edi
  40cd44:	mov    eax,ds:0xa6d98cac
  40cd49:	sbb    BYTE PTR ds:0x66f36d82,cl
  40cd4f:	(bad)  
  40cd50:	sbb    bl,BYTE PTR [edx-0x3135eb2d]
  40cd56:	addr16 inc edx
  40cd58:	push   ebp
  40cd59:	cs jnp 0x40cd28
  40cd5c:	push   cs
  40cd5d:	pop    edx
  40cd5e:	add    BYTE PTR [ebp-0x52c458bb],bh
  40cd64:	inc    ebp
  40cd65:	lahf   
  40cd66:	cmp    ebp,ebp
  40cd68:	inc    ebp
  40cd69:	xchg   edi,eax
  40cd6a:	cmp    eax,0x3d8f25ed
  40cd6f:	std    
  40cd70:	jecxz  0x40cd1e
  40cd72:	jno    0x40cdab
  40cd74:	das    
  40cd75:	mov    bl,0x69
  40cd77:	push   0x5a
  40cd79:	bound  ecx,QWORD PTR [edx]
  40cd7b:	dec    BYTE PTR [ebp-0x6549cc2b]
  40cd81:	mov    ah,0xaf
  40cd83:	pop    ebx
  40cd84:	pop    edi
  40cd85:	xchg   ecx,eax
  40cd86:	jae    0x40cd33
  40cd88:	pop    edi
  40cd89:	jp     0x40cdc8
  40cd8b:	cdq    
  40cd8c:	in     al,0xe2
  40cd8e:	cmp    al,0x91
	...
  40cda4:	in     al,0xda
  40cda6:	cmp    al,0x29
  40cda8:	in     al,0xd2
  40cdaa:	cmp    al,0x31
  40cdac:	in     al,0xca
  40cdae:	cmp    al,0x19
  40cdb0:	les    edi,FWORD PTR [edi-0x41]
  40cdb3:	arpl   WORD PTR [esi+0x690db4aa],si
  40cdb9:	xchg   ebp,eax
  40cdba:	inc    edi
  40cdbb:	call   0x3028:0x5db4678d
  40cdc2:	ins    DWORD PTR es:[edi],dx
  40cdc3:	fs call 0x440da1e
  40cdc9:	loop   0x40ce30
  40cdcb:	in     eax,dx
  40cdcc:	mov    edx,DWORD PTR [esi-0x715c12c1]
  40cdd2:	aas    
  40cdd3:	fstp   QWORD PTR [ebx-0x6c32c07a]
  40cdd9:	jle    0x40ce1a
  40cddb:	or     eax,0xc499e8a
  40cde0:	clc    
  40cde1:	xchg   ebp,eax
  40cde2:	lods   al,BYTE PTR ds:[esi]
  40cde3:	je     0x40cdd0
  40cde5:	ret    0x4872
  40cde8:	ror    cl,1
  40cdea:	das    
  40cdeb:	add    BYTE PTR [ebx-0x5ac33964],dh
  40cdf1:	sub    dh,BYTE PTR [edi]
  40cdf3:	add    DWORD PTR [eax],esp
  40cdf5:	in     eax,dx
  40cdf6:	sti    
  40cdf7:	xor    eax,0x3081a3b4
  40cdfc:	mov    esp,0x6f30b7a2
  40ce01:	mov    ds:0xa1c23236,al
  40ce06:	call   0x0:0x32
	...
  40ce19:	add    BYTE PTR [eax],al
  40ce1b:	add    BYTE PTR [esi],dh
  40ce1d:	mov    al,ds:0x663232fe
  40ce22:	push   0x58
  40ce24:	mov    ch,0xab
  40ce26:	push   ecx
  40ce27:	int3   
  40ce28:	addr16 xchg edi,eax
  40ce2a:	jmp    FWORD PTR ds:0xd357a188
  40ce30:	inc    edx
  40ce31:	jb     0x40cdbf
  40ce33:	xchg   ebp,eax
  40ce34:	and    al,0x6d
  40ce36:	cmp    bl,BYTE PTR [edi]
  40ce38:	adc    ebp,edx
  40ce3a:	pop    edx
  40ce3b:	ss out dx,eax
  40ce3d:	mov    ds:0xa43636b2,eax
  40ce42:	iret   
  40ce43:	ss stos DWORD PTR es:[edi],eax
  40ce45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce46:	jecxz  0x40ce7e
  40ce48:	jbe    0x40cdee
  40ce4a:	hlt    
  40ce4b:	fnstcw WORD PTR ss:[ebx+0x62]
  40ce4f:	sbb    ch,BYTE PTR [edx-0x48]
  40ce52:	cmp    al,0xd2
  40ce54:	aad    0x3b
  40ce56:	(bad)  
  40ce57:	xchg   ebx,eax
  40ce58:	out    0xae,eax
  40ce5a:	sub    al,0xbe
  40ce5c:	and    al,0xe1
  40ce5f:	arpl   WORD PTR [edi+esi*8-0x4d],sp
  40ce63:	mov    bh,0xf7
  40ce65:	mov    BYTE PTR [ecx],0x38
  40ce68:	push   esp
  40ce69:	test   eax,0xa91e384b
  40ce6e:	pop    eax
  40ce6f:	cmp    BYTE PTR [eax],ch
  40ce71:	lods   al,BYTE PTR ds:[esi]
  40ce72:	sbb    BYTE PTR [ecx],bh
  40ce74:	jae    0x40ce20
  40ce76:	and    bh,BYTE PTR [ecx]
  40ce78:	mov    ch,0x91
  40ce7a:	jmp    0x40ce97
  40ce7c:	arpl   WORD PTR ds:0xa45,sp
	...
  40ce92:	add    BYTE PTR [eax],al
  40ce94:	mov    eax,0xf43c19d1
  40ce99:	in     al,dx
  40ce9a:	out    dx,eax
  40ce9b:	loop   0x40cf03
  40ce9d:	shl    DWORD PTR [edx],0x2
  40cea0:	sbb    eax,0x983c1346
  40cea5:	dec    ebp
  40cea6:	jnp    0x40ce91
  40cea8:	test   DWORD PTR [esi+0x71ee44e7],esi
  40ceae:	jmp    0xe954ad89
  40ceb3:	cmp    ecx,ebx
  40ceb5:	outs   dx,BYTE PTR ds:[esi]
  40ceb6:	lock imul edx,ecx,0xffffff99
  40ceba:	out    dx,al
  40cebb:	xchg   ebx,eax
  40cebc:	dec    esp
  40cebd:	fisubr WORD PTR [ebx+0x1e]
  40cec0:	cmp    ah,BYTE PTR [eax]
  40cec2:	dec    esp
  40cec3:	push   ecx
  40cec4:	mov    ds:0x318a9191,al
  40cec9:	cmp    DWORD PTR [esi-0x4ad02137],0x205236d6
  40ced3:	mov    edx,0xecedff02
  40ced8:	xchg   ebx,eax
  40ced9:	mov    eax,ds:0xeb8a1feb
  40cede:	jmp    0x40cf2e
  40cee0:	add    BYTE PTR [esp+ebp*8],0xad
  40cee4:	jp     0x40cf36
  40cee6:	in     eax,dx
  40cee7:	jmp    0x760643de
  40ceec:	xchg   ebx,eax
  40ceed:	lds    esi,FWORD PTR [esi]
  40ceef:	xor    ah,al
  40cef1:	push   edx
  40cef2:	inc    edi
  40cef3:	ja     0x40ced7
  40cef5:	ds push es
  40cef7:	mov    BYTE PTR [eax],0x0
	...
  40cf0a:	add    BYTE PTR [eax],al
  40cf0c:	xor    al,0xad
  40cf0e:	stos   BYTE PTR es:[edi],al
  40cf0f:	out    0xad,eax
  40cf11:	push   es
  40cf12:	cwde   
  40cf13:	mov    esi,0xf4b4c2f4
  40cf18:	(bad)  
  40cf19:	(bad)  
  40cf1a:	loop   0x40cf0d
  40cf1c:	mov    eax,0xc7f0ed60
  40cf21:	pusha  
  40cf22:	repz lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf25:	pusha  
  40cf26:	sub    cl,dh
  40cf28:	add    al,0x61
  40cf2a:	mov    bh,0xd0
  40cf2c:	lahf   
  40cf2d:	push   ebp
  40cf2e:	jecxz  0x40cf13
  40cf30:	mov    cl,BYTE PTR [esi+0x5c1293e0]
  40cf36:	ins    BYTE PTR es:[edi],dx
  40cf37:	clc    
  40cf38:	xor    DWORD PTR [esi],ebx
  40cf3a:	jnp    0x40cf98
  40cf3c:	in     eax,0x86
  40cf3e:	mov    WORD PTR [ebx],ss
  40cf40:	cmp    DWORD PTR ds:0x6d268fe5,esp
  40cf46:	sbb    eax,0x1b1020e1
  40cf4b:	mov    edx,0xacf5ad27
  40cf50:	cwde   
  40cf51:	mov    bl,BYTE PTR [ebp+ebx*4-0x480fd9b8]
  40cf58:	dec    esi
  40cf59:	(bad)  
  40cf5a:	int    0x2a
  40cf5c:	nop
  40cf5d:	mov    esp,0xb16c600b
  40cf62:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf64:	dec    ebp
  40cf65:	push   0xad6672ff
  40cf6a:	pop    ecx
  40cf6b:	stos   BYTE PTR es:[edi],al
  40cf6c:	sar    DWORD PTR [ecx+0xc7a8],1
	...
  40cf82:	add    BYTE PTR [eax],al
  40cf84:	or     dh,BYTE PTR [ebx+edi*2-0x6f]
  40cf88:	sbb    edi,DWORD PTR [eax+0x65848bb9]
  40cf8e:	clc    
  40cf8f:	cmp    edi,DWORD PTR [ecx]
  40cf91:	jno    0x40cfc9
  40cf93:	push   es
  40cf94:	fld    QWORD PTR [edx+0x41]
  40cf97:	rcr    bh,cl
  40cf99:	call   0x2d0fad34
  40cf9e:	test   eax,0x233d7b31
  40cfa3:	mov    ah,ah
  40cfa5:	add    BYTE PTR [eax],al
  40cfa7:	jmp    ebx
  40cfa9:	inc    ebp
  40cfaa:	xchg   ebx,eax
  40cfab:	mov    ds:0xbbacf2cb,eax
  40cfb0:	jnp    0x40cfd3
  40cfb2:	push   ss
  40cfb3:	aam    0xa8
  40cfb5:	xor    dl,BYTE PTR [esi-0x40328975]
  40cfbb:	jno    0x40cff2
  40cfbd:	cli    
  40cfbe:	jmp    0xda05:0x7c8a3a00
  40cfc5:	jecxz  0x40d007
  40cfc7:	pop    eax
  40cfc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfc9:	aaa    
  40cfca:	xor    BYTE PTR [edi-0x2],cl
  40cfcd:	pop    ds
  40cfce:	jmp    0xee34:0x200b95a6
  40cfd5:	bound  ebx,QWORD PTR [edi+eiz*2+0x4d]
  40cfd9:	mov    ds:0xe7acfd95,al
  40cfde:	loop   0x40cffc
  40cfe0:	lock xor al,0x9c
  40cfe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfe4:	cmp    BYTE PTR [edx+0x21b4],bl
	...
  40cffa:	add    BYTE PTR [eax],al
  40cffc:	outs   dx,BYTE PTR ds:[esi]
  40cffd:	enter  0x4a57,0x32
  40d001:	push   ebp
  40d002:	jmp    0xd1c7:0x8eb16f82
  40d009:	and    DWORD PTR [ebx],esp
  40d00b:	inc    edx
  40d00c:	push   0x184c5271
  40d011:	es jmp 0x2d0b5b1f
  40d017:	jb     0x40cfb7
  40d019:	and    edi,DWORD PTR [ecx-0x1cf84015]
  40d01f:	push   ebx
  40d020:	nop
  40d021:	fstp   st(2)
  40d023:	adc    esp,ebx
  40d025:	int    0xe9
  40d027:	jno    0x40d091
  40d029:	scas   eax,DWORD PTR es:[edi]
  40d02a:	cmp    DWORD PTR [edx+0x2b],0xfffffffb
  40d02e:	popf   
  40d02f:	mov    eax,ds:0xbfd23b
  40d034:	stc    
  40d035:	inc    ebp
  40d036:	xchg   edx,eax
  40d037:	mov    ah,0xbc
  40d039:	mov    ds:0xf979942d,al
  40d03e:	xchg   ebx,eax
  40d03f:	test   DWORD PTR [ebx],ecx
  40d041:	cmp    DWORD PTR [ecx-0x3f0b5a2a],ecx
  40d047:	sti    
  40d048:	cmp    dh,ah
  40d04a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d04b:	sbb    al,0xed
  40d04d:	sbb    al,0x78
  40d04f:	jbe    0x40d03f
  40d051:	mov    bl,ah
  40d053:	cmp    BYTE PTR [ebx-0x7d],cl
  40d056:	push   edi
  40d057:	div    BYTE PTR [edx-0x1ddc0cb0]
  40d05d:	sahf   
  40d05e:	lods   eax,DWORD PTR ds:[esi]
  40d05f:	inc    edi
	...
  40d074:	inc    esi
  40d075:	lods   eax,DWORD PTR ds:[esi]
  40d076:	push   0xffffff83
  40d078:	and    eax,0xa8a69519
  40d07d:	sahf   
  40d07e:	gs pop ds
  40d080:	cmc    
  40d081:	out    dx,al
  40d082:	jae    0x40d102
  40d084:	aas    
  40d085:	enter  0x8555,0xde
  40d089:	mov    al,0x68
  40d08b:	outs   dx,DWORD PTR ds:[esi]
  40d08c:	sti    
  40d08d:	popf   
  40d08e:	repz int 0xde
  40d091:	jl     0x40d07e
  40d093:	int3   
  40d094:	mov    BYTE PTR [esi+0x20b747ea],bl
  40d09a:	ds dec edi
  40d09c:	mov    dl,0x7a
  40d09e:	cwde   
  40d09f:	loop   0x40d090
  40d0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0a2:	loopne 0x40d0d7
  40d0a4:	shl    BYTE PTR [eax],1
  40d0a6:	adc    BYTE PTR [ebp+0x1fa66fbe],bh
  40d0ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0ad:	sti    
  40d0ae:	cs pop esi
  40d0b0:	mov    ch,BYTE PTR [eax-0x1a]
  40d0b3:	dec    eax
  40d0b4:	sbb    BYTE PTR [eax-0x3eff222a],dh
  40d0ba:	sub    eax,0xe605e0d5
  40d0bf:	in     al,0xb5
  40d0c1:	sub    bh,BYTE PTR [edx-0x64]
  40d0c4:	mov    dl,0xdc
  40d0c6:	xor    al,0xe4
  40d0c8:	xor    bl,BYTE PTR [edi-0x16f15d9e]
  40d0ce:	adc    ah,BYTE PTR [esi+eax*1+0x56555545]
  40d0d5:	mov    ebp,0x1609
	...
  40d0ea:	add    BYTE PTR [eax],al
  40d0ec:	shl    DWORD PTR [esi+0x6bb50002],0x4
  40d0f3:	pop    ecx
  40d0f4:	mov    ch,0xa6
  40d0f6:	add    al,BYTE PTR [eax]
  40d0f8:	mov    ch,0x98
  40d0fa:	add    dh,BYTE PTR [ebp+esi*4+0x4e]
  40d0fe:	add    al,0x74
  40d100:	mov    ch,0xa6
  40d102:	add    al,BYTE PTR [eax]
  40d104:	mov    ch,0x69
  40d106:	lahf   
  40d107:	jae    0x40d0fc
  40d109:	dec    edi
  40d10a:	cwde   
  40d10b:	fs jl  0x40d08e
  40d10e:	mov    ds:0xa38ba76e,al
  40d113:	jae    0x40d0a1
  40d115:	xchg   ecx,eax
  40d116:	call   0x996d:0xa36e9c41
  40d11d:	sbb    BYTE PTR [edi+0x2a68d44],0x0
  40d124:	mov    ch,0x75
  40d126:	lahf   
  40d127:	jae    0x40d19c
  40d129:	(bad)  
  40d12a:	cwde   
  40d12b:	fs jl  0x40d0ee
  40d12e:	mov    al,ds:0xa1cb676e
  40d133:	jae    0x40d181
  40d135:	rcr    DWORD PTR [eax-0x5e11a3bf],1
  40d13b:	ins    DWORD PTR es:[edi],dx
  40d13c:	pop    ecx
  40d13d:	ret    0xff9d
  40d140:	retf   0x9df1
  40d143:	jae    0x40d1aa
  40d145:	aam    0x97
  40d147:	bound  esi,QWORD PTR [edx+edx*8-0x62]
  40d14b:	jno    0x40d165
  40d14d:	nop
  40d14e:	call   0x0:0xb4
	...
  40d161:	add    BYTE PTR [eax],al
  40d163:	add    BYTE PTR [edx+0x1598ac98],ch
  40d169:	xor    al,0xa5
  40d16b:	call   0x4f0d:0xb5881e14
  40d172:	jmp    0xafd0867a
  40d177:	scas   eax,DWORD PTR es:[edi]
  40d178:	neg    DWORD PTR ds:0x3306a28c
  40d17e:	xchg   ebp,eax
  40d17f:	fwait
  40d180:	in     al,0x32
  40d182:	dec    eax
  40d183:	mov    al,ds:0xb02e986a
  40d188:	neg    DWORD PTR ds:0x32e6a34c
  40d18e:	xor    al,0xb5
  40d190:	fstp   DWORD PTR ds:0x2cdbb619
  40d196:	inc    esp
  40d197:	mov    ch,0xc7
  40d199:	(bad)  
  40d19a:	daa    
  40d19b:	mov    al,0xe5
  40d19d:	and    al,BYTE PTR [esi+esi*4-0x53]
  40d1a1:	inc    esi
  40d1a2:	pop    ss
  40d1a3:	mov    ds:0xa30c1d9b,al
  40d1a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1a9:	es push es
  40d1ab:	call   0x1c99:0xa4fe1d6a
  40d1b2:	cli    
  40d1b3:	add    esi,DWORD PTR [ebp-0x714fe471]
  40d1b9:	inc    edx
  40d1ba:	cli    
  40d1bb:	sahf   
  40d1bc:	test   BYTE PTR [ebx+0x1],al
  40d1bf:	mov    dh,0x59
  40d1c1:	cs int 0xd4
  40d1c4:	data16 fld TBYTE PTR cs:[edi+0x0]
	...
  40d1dc:	loop   0x40d175
  40d1de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1df:	lahf   
  40d1e0:	fs dec ebx
  40d1e2:	mov    esi,0xd55356a2
  40d1e7:	xchg   edi,eax
  40d1e8:	retf   0xac97
  40d1eb:	lahf   
  40d1ec:	inc    esp
  40d1ed:	push   eax
  40d1ee:	add    ah,cl
  40d1f0:	or     cl,BYTE PTR [esp+ebp*2-0x43]
  40d1f4:	outs   dx,BYTE PTR ds:[esi]
  40d1f5:	xor    BYTE PTR [esi-0x73],ch
  40d1f8:	inc    edx
  40d1f9:	sub    al,0x0
  40d1fb:	iret   
  40d1fc:	mov    dh,0x2b
  40d1fe:	add    BYTE PTR [eax-0x16ffe44a],cl
  40d204:	mov    dh,0x8f
  40d206:	add    BYTE PTR [edx-0x58ffb94a],bl
  40d20c:	mov    dh,0x3b
  40d20e:	add    BYTE PTR [esi-0x64ffaf4a],bl
  40d214:	mov    dh,0x4c
  40d216:	add    BYTE PTR [ebp-0x4f],al
  40d219:	inc    esp
  40d21a:	add    BYTE PTR [eax-0x47],dl
  40d21d:	xor    al,BYTE PTR [eax]
  40d21f:	pop    ebx
  40d220:	mov    cl,0x26
  40d222:	add    BYTE PTR [edx-0x47],bl
  40d225:	add    BYTE PTR es:[edi-0x4f],cl
  40d229:	sbb    eax,DWORD PTR [eax]
  40d22b:	sbb    eax,0x40003eb9
  40d230:	mov    cl,0x25
  40d232:	add    BYTE PTR [ebp-0x47],al
  40d235:	add    BYTE PTR es:[esi],bl
  40d238:	mov    cl,0x22
  40d23a:	add    cl,cl
  40d23c:	mov    dh,0x45
  40d23e:	add    BYTE PTR ds:0x0,bh
	...
  40d254:	mov    cl,0x33
  40d256:	add    BYTE PTR [edx],ch
  40d258:	mov    ecx,0xb6fb001c
  40d25d:	and    DWORD PTR [eax],eax
  40d25f:	add    al,0xb9
  40d261:	and    eax,0x3db6fd00
  40d266:	add    BYTE PTR [ecx+edi*4],al
  40d269:	and    DWORD PTR [eax],eax
  40d26b:	fidiv  DWORD PTR [esi-0x4931ffd8]
  40d271:	and    eax,0x3fb6b500
  40d276:	add    bl,bl
  40d278:	mov    dh,0x26
  40d27a:	add    BYTE PTR [eax],al
  40d27c:	cli    
  40d27d:	xchg   edx,eax
  40d27e:	imul   eax,DWORD PTR [eax],0x6592f0
  40d284:	adc    BYTE PTR [ebx-0x6d90ff97],dl
  40d28a:	je     0x40d28c
  40d28c:	jo     0x40d220
  40d28e:	and    eax,0x923f00
  40d293:	add    BYTE PTR [edx+edx*4+0x72],bl
  40d297:	add    BYTE PTR [ebx],dl
  40d299:	xchg   ebx,eax
  40d29a:	data16 add BYTE PTR ds:0x39006c92,ah
  40d2a1:	xchg   edx,eax
  40d2a2:	dec    ecx
  40d2a3:	add    BYTE PTR [ecx],dh
  40d2a5:	xchg   edx,eax
  40d2a6:	popa   
  40d2a7:	add    BYTE PTR [ebx],bh
  40d2a9:	xchg   edx,eax
  40d2aa:	add    BYTE PTR gs:[ebx+ecx*4-0x73f7ff9f],ch
  40d2b2:	push   0x924c00
	...
  40d2cb:	add    BYTE PTR [esi+eiz*8+0x34],bl
  40d2cf:	sbb    DWORD PTR [ebp-0x1a],ebx
  40d2d2:	xor    al,0x19
  40d2d4:	pop    edi
  40d2d5:	push   eax
  40d2d6:	sar    BYTE PTR [eax+0x58],1
  40d2d9:	push   eax
  40d2da:	sar    BYTE PTR [eax+0xe],1
  40d2dd:	mov    cl,0x38
  40d2df:	mov    ds:0x4911d,al
  40d2e4:	mov    dl,0x8b
  40d2e6:	jae    0x40d2e8
  40d2e8:	mov    esp,0xe800728b
  40d2ed:	xchg   ecx,eax
  40d2ee:	add    BYTE PTR cs:[eax-0x4fff9375],bh
  40d2f5:	mov    eax,DWORD PTR [eax]
  40d2f7:	add    BYTE PTR [ecx],dl
  40d2f9:	cwde   
  40d2fa:	or     ecx,DWORD PTR [edx]
  40d2fc:	fcom   QWORD PTR [ecx-0x67340000]
  40d302:	or     BYTE PTR ds:0x91e6,cl
  40d308:	mov    ch,0x83
  40d30a:	lods   al,BYTE PTR ds:[esi]
  40d30b:	call   edx
  40d30d:	mov    dl,0xf8
  40d30f:	dec    edx
  40d311:	xchg   ecx,eax
  40d312:	in     al,0xff
  40d314:	ret    0x2eb
  40d317:	dec    ecx
  40d318:	mov    ch,0xf9
  40d31a:	add    dl,BYTE PTR [eax-0x4b]
  40d31d:	repnz add al,BYTE PTR [ecx-0x4b]
  40d321:	iret   
  40d322:	add    al,BYTE PTR [eax]
  40d324:	mov    ch,0xd5
  40d326:	adc    eax,DWORD PTR [ecx-0x4b]
  40d329:	fdivr  DWORD PTR [ecx+eax*2+0x32f2b6d5]
	...
  40d344:	fcmovnbe st,st(6)
  40d346:	repnz xor ch,BYTE PTR [edi-0x4afffd5a]
  40d34d:	clc    
  40d34e:	mov    esp,0x2a69541
  40d353:	add    BYTE PTR [ebp-0x4afffb79],dh
  40d359:	dec    eax
  40d35a:	add    al,0x63
  40d35c:	mov    ch,0xa6
  40d35e:	add    al,BYTE PTR [eax]
  40d360:	mov    ch,0x56
  40d362:	iret   
  40d363:	push   ecx
  40d364:	repnz arpl WORD PTR [eax+eax*1],ax
  40d368:	mov    ch,0x76
  40d36a:	ret    
  40d36b:	push   ebx
  40d36c:	imul   BYTE PTR [esi+0x4]
  40d36f:	add    BYTE PTR [ebp-0x7fad4985],dh
  40d375:	push   0x5f8742d1
  40d37a:	ret    0xb544
  40d37d:	pop    ecx
  40d37e:	iret   
  40d37f:	inc    ecx
  40d380:	imul   dx,dx,0x7748
  40d385:	arpl   WORD PTR [eax+eax*1],ax
  40d388:	mov    ch,0x64
  40d38a:	mov    ch,0x53
  40d38c:	ins    BYTE PTR es:[edi],dx
  40d38d:	fs retf 
  40d38f:	push   edx
  40d391:	jae    0x40d36a
  40d393:	push   edx
  40d394:	jo     0x40d325
  40d396:	test   al,0xd1
  40d398:	ja     0x40d3e1
  40d39a:	jmp    0xa4d088a2
  40d39f:	mov    esi,0x3a44c64
  40d3a4:	mov    ch,0x8f
  40d3a6:	stos   BYTE PTR es:[edi],al
  40d3a7:	mov    ebx,0x0
	...
  40d3bc:	jns    0x40d40e
  40d3be:	mov    dl,0xb4
  40d3c0:	popa   
  40d3c1:	cmp    ebp,ecx
  40d3c3:	add    esi,DWORD PTR [ebp-0xa476371]
  40d3c9:	push   eax
  40d3ca:	mov    ebp,0xb54708ba
  40d3cf:	retf   0x949a
  40d3d2:	mov    edx,0xbb4502be
  40d3d7:	iret   
  40d3d8:	mov    dl,BYTE PTR [ebx+ebx*4-0x55bb114b]
  40d3df:	mov    eax,0xbe99947a
  40d3e4:	cmc    
  40d3e5:	inc    ecx
  40d3e6:	stos   BYTE PTR es:[edi],al
  40d3e7:	mov    ebx,0xd238946a
  40d3ec:	repz aas 
  40d3ee:	cmp    ebx,eax
  40d3f0:	push   es
  40d3f1:	push   ecx
  40d3f2:	and    DWORD PTR [esi*4-0x42dc671],eax
  40d3f9:	aas    
  40d3fa:	das    
  40d3fb:	mov    ebx,0x3e94bf0
  40d400:	mov    ch,0x8f
  40d402:	and    al,0xb5
  40d404:	mov    BYTE PTR [edx-0x17],cl
  40d407:	add    esi,DWORD PTR [ebp+0x77b9348f]
  40d40d:	inc    esp
  40d40e:	sub    eax,0x258fb504
  40d413:	mov    ch,0x77
  40d415:	dec    eax
  40d416:	jmp    0x2ad0891e
  40d41b:	mov    ch,0x72
  40d41d:	ss jmp 0x40d426
	...
  40d433:	add    BYTE PTR [ebp+0x71d008f],dh
  40d439:	dec    edi
  40d43a:	inc    ebx
  40d43b:	and    al,0xb1
  40d43d:	pop    DWORD PTR [eax]
  40d43f:	mov    dh,0x6
  40d441:	inc    eax
  40d442:	dec    ecx
  40d443:	scas   al,BYTE PTR es:[edi]
  40d444:	and    BYTE PTR [ecx+0x0],al
  40d447:	stos   BYTE PTR es:[edi],al
  40d448:	or     DWORD PTR [edx+0x4e],eax
  40d44b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d44c:	cmc    
  40d44d:	aas    
  40d44e:	add    BYTE PTR [ecx-0x66ffc00d],bl
  40d454:	add    DWORD PTR [ecx+0x54],eax
  40d457:	jmp    0xa1416412
  40d45c:	imul   edx,DWORD PTR [eax+0x44],0xffffffe9
  40d460:	mov    dh,0x8f
  40d462:	add    BYTE PTR [esi-0x52ffc0a5],ah
  40d468:	push   ebx
  40d469:	inc    edi
  40d46a:	inc    ebp
  40d46b:	mov    ch,0x4b
  40d46d:	xchg   ebx,eax
  40d46e:	dec    BYTE PTR [edx-0x7b91dad7]
  40d474:	push   ebp
  40d475:	pop    ds
  40d476:	imul   eax,DWORD PTR [esi+0x79fe9348],0x60782224
  40d480:	fs outs dx,DWORD PTR cs:[esi]
  40d483:	dec    edi
  40d484:	daa    
  40d485:	sub    al,0x63
  40d487:	pop    ebp
  40d488:	and    BYTE PTR [edx],ah
  40d48a:	outs   dx,BYTE PTR ds:[esi]
  40d48b:	jmp    0x4a416446
  40d490:	push   es
  40d491:	and    eax,0x1f074474
  40d496:	sub    eax,0x45
	...
  40d4ab:	add    BYTE PTR [ebp+eiz*1+0x67],bl
  40d4af:	xor    eax,0x1dfe9359
  40d4b4:	dec    ebx
  40d4b5:	xor    BYTE PTR [esi+0x1a],ch
  40d4b8:	dec    edi
  40d4b9:	sub    al,0x72
  40d4bb:	les    ebx,FWORD PTR [ebp+0x25]
  40d4be:	arpl   si,di
  40d4c0:	push   edx
  40d4c1:	sub    BYTE PTR [esi+0x0],ch
  40d4c4:	mov    bl,0x8b
  40d4c6:	add    BYTE PTR [eax],al
  40d4c8:	add    edi,edi
  40d4ca:	gs jb  0x40d48a
  40d4cd:	out    0x63,eax
  40d4cf:	add    BYTE PTR [edi+0x76e73e3],bh
  40d4d5:	call   0xe847d53c
  40d4da:	arpl   WORD PTR [eax-0x47],si
  40d4dd:	in     al,dx
  40d4de:	push   0x69
  40d4e0:	loop   0x40d4c9
  40d4e2:	(bad)  
  40d4e3:	(bad)  
  40d4e4:	out    dx,eax
  40d4e5:	loop   0x40d554
  40d4e7:	jae    0x40d4da
  40d4e9:	mov    es,WORD PTR [eax]
  40d4eb:	add    BYTE PTR [edi],dl
  40d4ed:	or     eax,DWORD PTR [ecx+0x0]
  40d4f0:	fisttp WORD PTR [edx]
  40d4f2:	inc    ecx
  40d4f3:	add    ch,ah
  40d4f5:	or     al,BYTE PTR [ecx+0x0]
  40d4f8:	and    al,0x9
  40d4fa:	inc    ecx
  40d4fb:	add    BYTE PTR [esp+edi*8+0xc330041],ah
  40d502:	inc    ecx
  40d503:	add    BYTE PTR [ecx+ecx*1],al
  40d506:	inc    ecx
  40d507:	add    BYTE PTR [eax],ch
  40d509:	or     al,0x41
  40d50b:	add    BYTE PTR [ebx+0xc],al
  40d50e:	inc    ecx
	...
  40d523:	add    BYTE PTR [esi+ecx*4+0x0],bl
  40d527:	add    BYTE PTR [esi+ecx*4+0x0],cl
  40d52b:	add    BYTE PTR [esi+ecx*4+0x0],cl
  40d52f:	add    BYTE PTR [esi+ecx*4+0x1],bl
  40d533:	add    BYTE PTR [ecx+esi*4+0x114002e],ch
  40d53a:	inc    ecx
  40d53b:	add    al,cl
  40d53d:	sbb    eax,DWORD PTR [ecx+0x0]
  40d540:	mov    ch,0x19
  40d542:	inc    ecx
  40d543:	add    BYTE PTR [eax+0x47004119],bh
  40d549:	sbb    al,0x41
  40d54b:	add    BYTE PTR ds:0xb5004244,cl
  40d551:	mov    edx,0xceb5417d
  40d556:	icebp  
  40d557:	sub    DWORD PTR [ebp+0x6553b860],esi
  40d55d:	rcl    ebx,0x2d
  40d560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d561:	test   al,0x2
  40d563:	add    BYTE PTR [ebp+0x5862a767],dh
  40d569:	mov    eax,0xc7692c96
  40d56e:	mov    al,0x66
  40d570:	dec    eax
  40d571:	(bad)  
  40d572:	test   eax,0x4888f64
  40d577:	add    BYTE PTR [ebp+0x4b6db1e5],dh
  40d57d:	retf   
  40d57e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d57f:	jae    0x40d59d
  40d581:	retf   0x39b0
  40d584:	aad    0xe5
  40d586:	scas   al,BYTE PTR es:[edi]
  40d587:	outs   dx,BYTE PTR ds:[esi]
	...
  40d59c:	es add al,0x10
  40d59f:	or     dh,BYTE PTR [ebp+0x206b94fb]
  40d5a5:	or     dh,BYTE PTR [ecx-0x50eceed3]
  40d5ab:	inc    DWORD PTR [edx+0x1473a4da]
  40d5b1:	add    BYTE PTR [ecx-0x6afc19ac],dh
  40d5b7:	inc    eax
  40d5b8:	ror    BYTE PTR [ebx],cl
  40d5ba:	mov    cl,0x73
  40d5bc:	push   es
  40d5bd:	xor    edx,DWORD PTR [esi+0x449cb68]
  40d5c3:	add    BYTE PTR [ebp-0x4afffb74],dh
  40d5c9:	mov    al,0x6e
  40d5cb:	inc    ecx
  40d5cc:	mov    ch,0x75
  40d5ce:	add    al,0x65
  40d5d0:	mov    ch,0x7a
  40d5d2:	add    al,0x63
  40d5d4:	mov    ch,0x44
  40d5d6:	add    al,0x50
  40d5d8:	mov    ch,0x54
  40d5da:	add    al,0x69
  40d5dc:	mov    ch,0x8f
  40d5de:	pop    ds
  40d5df:	add    al,0x8c
  40d5e1:	(bad)  
  40d5e2:	or     eax,0xe8f9804
  40d5e7:	add    al,0x90
  40d5e9:	(bad)
  40d5ed:	(bad)  
  40d5ee:	xlat   BYTE PTR ds:[ebx]
  40d5ef:	add    edx,DWORD PTR [eax+0x5804018f]
  40d5f5:	(bad)
  40d5f9:	(bad)
  40d5fd:	(bad)  
  40d5fe:	jns    0x40d659
	...
  40d614:	je     0x40d5a5
  40d616:	mov    ah,0xc7
  40d618:	je     0x40d5a9
  40d61a:	in     al,dx
  40d61b:	jo     0x40d692
  40d61d:	(bad)  
  40d61e:	in     al,0x70
  40d620:	jne    0x40d5b1
  40d622:	in     al,dx
  40d623:	jo     0x40d69a
  40d625:	(bad)  
  40d626:	xchg   esp,eax
  40d627:	(bad)  
  40d628:	hlt    
  40d629:	(bad)  
  40d62a:	in     al,dx
  40d62b:	jo     0x40d622
  40d62d:	(bad)  
  40d62e:	and    cl,BYTE PTR [edx-0x9]
  40d631:	(bad)  
  40d632:	popf   
  40d633:	pop    eax
  40d634:	hlt    
  40d635:	(bad)  
  40d636:	cmp    eax,0x958f6f48
  40d63b:	test   al,0x6
  40d63d:	adc    edx,DWORD PTR [ebx+0x7f1712da]
  40d643:	add    esi,DWORD PTR [ebp+0x37743a8f]
  40d649:	fcomp  QWORD PTR [ebx+0x79]
  40d64c:	inc    esi
  40d64d:	or     DWORD PTR [ecx-0x75],ebx
  40d650:	push   cs
  40d651:	add    eax,DWORD PTR [esp+ecx*4-0x7b8df9f1]
  40d658:	inc    edx
  40d659:	add    al,0x6c
  40d65b:	data16 ds (bad) 
  40d65e:	pop    edi
  40d65f:	xchg   ecx,eax
  40d660:	pop    ds
  40d661:	packsswb mm6,QWORD PTR [ebx-0x8]
  40d665:	mov    ss,WORD PTR [esi-0x4407cd]
  40d66b:	test   eax,0x9f8abd7f
  40d670:	ins    DWORD PTR es:[edi],dx
  40d671:	retf   
  40d672:	call   DWORD PTR [esi]
  40d674:	sub    BYTE PTR gs:[ebx+0x31],ch
	...
  40d68c:	dec    esi
  40d68d:	inc    ebx
  40d68e:	inc    edi
  40d68f:	or     eax,0x84039f0
  40d694:	inc    eax
  40d695:	xor    al,0x53
  40d697:	cs mov cl,0x8f
  40d69a:	add    BYTE PTR [edx],dl
  40d69c:	push   ds
  40d69d:	and    edi,DWORD PTR [ecx+0x23]
  40d6a0:	cmc    
  40d6a1:	xor    BYTE PTR [esi+0x18],dh
  40d6a4:	and    DWORD PTR [edi],esi
  40d6a6:	inc    ebp
  40d6a7:	mov    al,0xb6
  40d6a9:	pop    DWORD PTR [eax]
  40d6ab:	fsubr  DWORD PTR [ecx]
  40d6ad:	sbb    DWORD PTR [eax-0x5b],esp
  40d6b0:	or     al,0x43
  40d6b2:	inc    esp
  40d6b3:	lods   eax,DWORD PTR ds:[esi]
  40d6b4:	in     al,0x37
  40d6b6:	dec    eax
  40d6b7:	shl    ah,0x34
  40d6ba:	pop    edx
  40d6bb:	sahf   
  40d6bc:	outs   dx,BYTE PTR ds:[esi]
  40d6bd:	jmp    0x8ff7a308
  40d6c2:	add    dl,ah
  40d6c4:	scas   eax,DWORD PTR es:[edi]
  40d6c5:	pushf  
  40d6c6:	push   ds
  40d6c7:	icebp  
  40d6c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6c9:	fadd   DWORD PTR [edi-0x3d]
  40d6cc:	xchg   DWORD PTR [ecx-0x704916e7],ebp
  40d6d2:	add    BYTE PTR [ebx-0x64a92b9b],bl
  40d6d8:	jae    0x40d6be
  40d6da:	inc    ecx
  40d6db:	je     0x40d6fc
  40d6dd:	jmp    0x6c4d:0xea7b805a
  40d6e4:	jne    0x40d6b9
  40d6e6:	outs   dx,BYTE PTR ds:[esi]
  40d6e7:	dec    edi
  40d6e8:	push   ds
  40d6e9:	loopne 0x40d72d
  40d6eb:	das    
  40d6ec:	adc    al,bl
  40d6ee:	pop    ebp
  40d6ef:	dec    eax
	...
  40d704:	and    ch,ah
  40d706:	pop    ebx
  40d707:	pop    edx
  40d708:	adc    bh,bh
  40d70a:	imul   eax,DWORD PTR [eax],0xffffffef
  40d70d:	and    edi,esi
  40d70f:	jmp    DWORD PTR [ecx+ebp*4-0x3]
  40d713:	in     al,dx
  40d714:	hlt    
  40d715:	scas   al,BYTE PTR es:[edi]
  40d716:	in     eax,dx
  40d717:	stc    
  40d718:	inc    ebx
  40d719:	iret   
  40d71a:	clc    
  40d71b:	repz sub DWORD PTR [ebp-0x51be041a],ebp
  40d722:	add    BYTE PTR [eax],al
  40d724:	inc    ecx
  40d725:	xlat   BYTE PTR ds:[ebx]
  40d726:	mov    edi,0xc0ca4fc5
  40d72b:	add    BYTE PTR [ebx],ah
  40d72d:	mov    ebp,0xc33debfd
  40d732:	jmp    0x9100:0xefbe6ffc
  40d739:	mov    ecx,0xf940bec3
  40d73e:	(bad)  
  40d73f:	mov    edx,0xcafd3c
  40d744:	cli    
  40d745:	pop    eax
  40d746:	inc    edi
  40d747:	dec    eax
  40d748:	(bad)  
  40d749:	push   esp
  40d74a:	inc    esi
  40d74b:	jne    0x40d761
  40d74d:	push   edi
  40d74e:	dec    edx
  40d74f:	pop    esp
  40d750:	popa   
  40d751:	dec    ecx
  40d752:	gs dec ecx
  40d754:	pushf  
  40d755:	xchg   edx,eax
  40d756:	add    BYTE PTR [eax],al
  40d758:	ds es push 0x7120526c
  40d75f:	pop    eax
  40d760:	cs xor al,0x72
  40d763:	add    BYTE PTR [esi+0x1e0b95],al
	...
  40d779:	add    BYTE PTR [eax],al
  40d77b:	add    BYTE PTR [esi-0x6ef4e461],al
  40d781:	lahf   
  40d782:	sub    ah,BYTE PTR [ecx]
  40d784:	sub    edi,DWORD PTR [ecx+0x32]
  40d787:	sub    DWORD PTR [ebx],esp
  40d789:	jle    0x40d792
  40d78b:	or     eax,0x313b6028
  40d790:	stos   BYTE PTR es:[edi],al
  40d791:	jb     0x40d806
  40d793:	sbb    al,0x5d
  40d795:	call   0xdf8:0x81b52314
  40d79c:	mov    ecx,0x9909d87f
  40d7a1:	push   0xd
  40d7a3:	or     al,0xc1
  40d7a5:	js     0x40d7a9
  40d7a7:	add    BYTE PTR [ebp-0x44e50d8c],dh
  40d7ad:	jp     0x40d7ab
  40d7af:	or     DWORD PTR [ecx-0x45e4f83b],edi
  40d7b5:	js     0x40d7b9
  40d7b7:	add    BYTE PTR [ebp-0x78a06a68],dh
  40d7bd:	mov    ds:0x95be639e,al
  40d7c2:	mov    eax,ds:0x1418b57c
  40d7c7:	out    0xd8,eax
  40d7c9:	cvtpi2ps xmm5,QWORD PTR [ebx+0x2f08d4]
  40d7d0:	mov    ch,0xdf
  40d7d2:	sub    eax,0x20ddc6ff
  40d7d7:	loope  0x40d7db
  40d7d9:	jmp    0x30f6c90c
  40d7de:	mov    esi,0x4c
	...
  40d7f3:	add    BYTE PTR [ecx+0x33],ah
  40d7f6:	mov    bh,0x5c
  40d7f8:	enter  0xd127,0x52
  40d7fc:	mov    ch,0x28
  40d7fe:	les    edx,FWORD PTR [esi-0xd]
  40d801:	xor    dh,cl
  40d803:	push   edx
  40d804:	add    BYTE PTR [edi-0x38],dh
  40d807:	push   ebx
  40d808:	std    
  40d809:	jbe    0x40d80d
  40d80b:	add    BYTE PTR [ebp+0x36c139b0],dh
  40d811:	scas   al,BYTE PTR es:[edi]
  40d812:	xor    cl,ch
  40d814:	mov    ch,0x18
  40d816:	mov    edi,0xb938fb54
  40d81b:	inc    esp
  40d81c:	push   es
  40d81d:	sbb    al,0x99
  40d81f:	push   ecx
  40d820:	cld    
  40d821:	sub    eax,0x90044bb3
  40d826:	cs mov eax,0xca2c02d3
  40d82c:	not    esi
  40d82e:	xor    eax,0x2ff6cbb9
  40d833:	mov    esi,0xa846d8d9
  40d838:	cdq    
  40d839:	add    al,0x47
  40d83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d83c:	test   al,0x6
  40d83e:	aas    
  40d83f:	enter  0xfc6d,0x3a
  40d843:	add    al,0xb5
  40d845:	(bad)  
  40d846:	sbb    al,0x94
  40d848:	int    0xc0
  40d84a:	(bad)  
  40d84c:	ins    DWORD PTR es:[edi],dx
  40d84d:	add    DWORD PTR [ecx],edx
  40d84f:	out    dx,al
  40d850:	mov    ebp,0x7fb1c2b4
  40d855:	or     eax,0xddc7
	...
  40d86a:	add    BYTE PTR [eax],al
  40d86c:	lods   eax,DWORD PTR ds:[esi]
  40d86d:	ret    
  40d86e:	xor    ah,BYTE PTR [ebx+edx*2+0x79e6bfbb]
  40d875:	std    
  40d876:	cld    
  40d877:	(bad)  [ecx+0x67b7e6c0]
  40d87d:	fwait
  40d87e:	repnz or eax,0x1b0e14c
  40d884:	mov    al,0x8f
  40d886:	fidivr DWORD PTR [ebx+0x1e9a25b]
  40d88c:	and    dh,dl
  40d88e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d88f:	stc    
  40d890:	mov    ecx,0xb503ce9d
  40d895:	(bad)  
  40d896:	push   edi
  40d897:	jge    0x40d8d2
  40d899:	pop    ss
  40d89a:	cmp    bh,BYTE PTR [ebp+0x24]
  40d89d:	and    ah,BYTE PTR [ebp+0x75]
  40d8a0:	mov    ch,0x8f
  40d8a2:	icebp  
  40d8a3:	mul    DWORD PTR [esi-0x4afc106a]
  40d8a9:	pop    DWORD PTR [eax+0x65]
  40d8ac:	sub    eax,0x4d412d4d
  40d8b1:	sub    eax,DWORD PTR [ecx]
  40d8b3:	popa   
  40d8b4:	fst    QWORD PTR ds:0x41013cc3
  40d8ba:	mov    bh,0xbf
  40d8bc:	jmp    DWORD PTR [edx-0x36]
  40d8bf:	fldenv [eax+0x3a6b9044]
  40d8c5:	push   esi
  40d8c6:	sar    DWORD PTR [eax-0x39],cl
  40d8c9:	push   ds
  40d8ca:	xchg   esi,eax
  40d8cb:	test   DWORD PTR [edx+0xa6c64c],ebx
	...
  40d8e1:	add    BYTE PTR [eax],al
  40d8e3:	add    BYTE PTR [ebx],bh
  40d8e5:	cmp    ebp,DWORD PTR [ebp+ecx*4+0x69ee4486]
  40d8ec:	mov    WORD PTR [ebx],?
  40d8ee:	test   al,0x64
  40d8f0:	addr16 inc edx
  40d8f2:	mov    esp,0x9c62c786
  40d8f7:	push   edi
  40d8f8:	pusha  
  40d8f9:	dec    edx
  40d8fa:	mov    dh,0x57
  40d8fc:	xchg   esi,eax
  40d8fd:	dec    ebp
  40d8fe:	mov    eax,0x8e1864ae
  40d903:	lahf   
  40d904:	push   edi
  40d905:	xor    ch,ah
  40d907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d908:	jo     0x40d96e
  40d90a:	(bad)  
  40d90b:	mov    ds:0x45eb19a6,al
  40d910:	mov    BYTE PTR [ebx-0x31],ch
  40d913:	xor    al,0x30
  40d915:	sub    al,0x9a
  40d917:	sub    eax,0x71eb4663
  40d91c:	fwait
  40d91d:	or     BYTE PTR [ebp-0x7975dc70],0x66
  40d924:	aaa    
  40d925:	adc    eax,0xfc41b501
  40d92a:	sbb    cl,bl
  40d92c:	ins    BYTE PTR es:[edi],dx
  40d92d:	jecxz  0x40d97c
  40d92f:	scas   al,BYTE PTR es:[edi]
  40d930:	test   BYTE PTR [eax],cl
  40d932:	mov    dl,BYTE PTR gs:[eax-0x57]
  40d936:	add    ebp,esp
  40d938:	jge    0x40d8e9
  40d93a:	and    al,BYTE PTR [esi+0x58ed77]
  40d940:	push   ebp
  40d941:	xchg   ecx,eax
  40d942:	inc    ebx
  40d943:	inc    ebp
  40d944:	sbb    eax,0x484e54
	...
  40d959:	add    BYTE PTR [eax],al
  40d95b:	add    BYTE PTR [ebx],bh
  40d95d:	test   BYTE PTR [ebx],dl
  40d95f:	pop    ebx
  40d960:	fcomp  QWORD PTR [esi]
  40d962:	jae    0x40d9dd
  40d964:	in     al,dx
  40d965:	sub    eax,0x77d57f76
  40d96a:	xor    eax,0x7936fa7f
  40d96f:	and    eax,0x7a62317a
  40d974:	adc    BYTE PTR [esi-0x70e6f2f7],0x0
  40d97b:	add    BYTE PTR [esi],ah
  40d97d:	js     0x40d9a6
  40d97f:	das    
  40d980:	sbb    ah,BYTE PTR [edi+0x4f]
  40d983:	inc    esp
  40d984:	(bad)  [ebp+0x31]
  40d987:	sub    eax,0x8244ae4
  40d98c:	sbb    DWORD PTR [esi+eiz*1+0x1e9a100a],eax
  40d993:	or     al,0x10
  40d995:	outs   dx,DWORD PTR ds:[esi]
  40d996:	add    DWORD PTR ds:0x214940d,ebx
  40d99c:	int3   
  40d99d:	mov    es,WORD PTR [eax]
  40d99f:	add    BYTE PTR [ebp-0x26838ddb],dh
  40d9a5:	cmp    DWORD PTR [edx],ebx
  40d9a7:	pop    ss
  40d9a8:	into   
  40d9a9:	pop    ds
  40d9aa:	pusha  
  40d9ab:	jle    0x40d994
  40d9ad:	jge    0x40da1f
  40d9af:	pop    esp
  40d9b0:	add    al,0x59
  40d9b2:	pop    edi
  40d9b3:	dec    eax
  40d9b4:	pop    esi
  40d9b5:	push   ecx
  40d9b6:	jp     0x40da17
  40d9b8:	pop    ecx
  40d9b9:	dec    ebp
  40d9ba:	push   ebp
  40d9bb:	inc    edx
  40d9bc:	mov    es,WORD PTR ds:[eax]
	...
  40d9d3:	add    BYTE PTR [esi-0x1d383230],bh
  40d9d9:	ret    
  40d9da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9db:	lods   al,BYTE PTR ds:[esi]
  40d9dc:	in     eax,0xd5
  40d9de:	xlat   BYTE PTR ds:[ebx]
  40d9df:	lds    esi,FWORD PTR [ebp-0x6a319748]
  40d9e5:	xchg   ebx,eax
  40d9e6:	sbb    eax,ebp
  40d9e8:	outs   dx,BYTE PTR ds:[esi]
  40d9e9:	cdq    
  40d9ea:	and    esp,esp
  40d9ec:	jae    0x40d98b
  40d9ee:	adc    edi,edi
  40d9f0:	push   edx
  40d9f1:	sub    BYTE PTR [edx],0x0
  40d9f4:	mov    ch,0xbc
  40d9f6:	mov    fs:0xad7a0a0c,eax
  40d9fc:	pop    ds
  40d9fd:	and    eax,0x1d04ad51
  40da02:	and    BYTE PTR [ebp-0x51a3f1f6],0x22
  40da09:	js     0x40da0d
  40da0b:	add    BYTE PTR [ebp+0x29ee2947],dh
  40da11:	sbb    eax,0x3a12e031
  40da16:	sbb    ah,al
  40da18:	adc    DWORD PTR [edx],ebp
  40da1a:	dec    ecx
  40da1b:	call   0xe353eb37
  40da20:	mov    ch,0xce
  40da22:	jns    0x40d9e2
  40da24:	dec    eax
  40da25:	js     0x40da29
  40da27:	add    BYTE PTR [ebp-0x2507d5e8],dh
  40da2d:	or     al,0x26
  40da2f:	cld    
  40da30:	iret   
  40da31:	add    esp,DWORD PTR [ecx]
  40da33:	out    0xe5,eax
  40da35:	adc    BYTE PTR [ebx],dl
  40da37:	out    dx,eax
	...
  40da4c:	retf   0x11e3
  40da4f:	cmc    
  40da50:	rcl    bh,0x27
  40da53:	(bad)  
  40da54:	icebp  
  40da55:	mov    ebx,0xe0cadf2d
  40da5a:	xor    eax,ebx
  40da5c:	jbe    0x40da2b
  40da5e:	sub    esi,esp
  40da60:	mov    cs,ecx
  40da62:	and    ebp,ebp
  40da64:	pop    esi
  40da66:	adc    ebp,ebp
  40da68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da69:	lahf   
  40da6a:	push   eax
  40da6b:	add    BYTE PTR [ebp-0xb495071],dh
  40da71:	loope  0x40da5c
  40da73:	mov    ah,0xf9
  40da75:	shl    BYTE PTR [edx+ecx*1-0x22522411],1
  40da7c:	lods   al,BYTE PTR ds:[esi]
  40da7d:	xchg   esi,eax
  40da7e:	xchg   edi,eax
  40da7f:	mov    cl,0xaa
  40da81:	mov    bl,0xc3
  40da83:	test   BYTE PTR [eax],0xe0
  40da86:	mov    eax,ds:0x8eaa88e7
  40da8b:	(bad)  
  40da8c:	lock out 0x59,eax
  40da8f:	loope  0x40dadb
  40da91:	mov    eax,ebp
  40da93:	add    esi,DWORD PTR [ebp-0x4955e771]
  40da99:	lea    ecx,[esi+ebp*4-0x1f]
  40da9d:	lods   al,BYTE PTR ds:[esi]
  40da9e:	pop    ss
  40da9f:	out    0xd8,al
  40daa1:	fiadd  WORD PTR [esi]
  40daa3:	loopne 0x40da67
  40daa5:	add    cl,dh
  40daa7:	lock (bad) 
  40daa9:	cmc    
  40daaa:	xor    bl,dl
  40daac:	(bad)  
  40daad:	fcomp  st(2)
  40daaf:	(bad)  
	...
  40dac4:	retf   0xd4bf
  40dac7:	aam    0x98
  40dac9:	ror    ebp,0xe3
  40dacc:	mov    edx,0x89ccded9
  40dad1:	rcl    BYTE PTR [edi],cl
  40dad3:	mov    dl,0xb5
  40dad5:	(bad)  
  40dad6:	jmp    0x13d49689
  40dadb:	scas   eax,DWORD PTR es:[edi]
  40dadc:	imul   esp,eax,0xc1a2bdce
  40dae2:	shr    DWORD PTR [edi-0x47511d5b],0x78
  40dae9:	iret   
  40daea:	ret    0x4eab
  40daed:	les    edi,FWORD PTR [ecx+ebp*4-0x19015324]
  40daf4:	adc    eax,0xb503e7b4
  40daf9:	pop    DWORD PTR [eax]
  40dafb:	adc    DWORD PTR [edx],0xe089a42e
  40db01:	cmp    dh,BYTE PTR [edi+0x901c55]
  40db07:	in     eax,dx
  40db08:	test   BYTE PTR [eax-0x615604ec],bl
  40db0e:	add    BYTE PTR [edx+ebp*1+0x1ba658da],bl
  40db15:	aad    0x4f
  40db17:	mov    al,ds:0xde67d179
  40db1c:	jbe    0x40db12
  40db1e:	adc    al,0xcf
  40db20:	push   ecx
  40db21:	fdiv   QWORD PTR [edx-0xa]
  40db24:	dec    ecx
  40db25:	cwde   
  40db26:	dec    edi
  40db27:	icebp  
	...
  40db3c:	jnp    0x40db1a
  40db3e:	inc    edx
  40db3f:	jmp    0x6b416afa
  40db44:	cmp    BYTE PTR ds:0x233d5e85,cl
  40db4a:	add    ecx,ebx
  40db4c:	or     eax,0x11fe35b5
  40db51:	inc    DWORD PTR [eax]
  40db53:	in     al,dx
  40db54:	out    dx,al
  40db55:	jmp    0x90f8bd5a
  40db5a:	add    esp,esp
  40db5c:	or     dl,BYTE PTR [edx-0x695113b9]
  40db62:	or     dl,ch
  40db64:	mov    ebx,0xb9e63f93
  40db69:	jmp    0x40db7a
  40db6b:	fcmovbe st,st(3)
  40db6d:	stos   BYTE PTR es:[edi],al
  40db6e:	push   edi
  40db6f:	sbb    dh,BYTE PTR [ebx+0x778600e5]
  40db75:	push   ebp
  40db76:	iret   
  40db77:	sub    DWORD PTR [esi+0x10],esi
  40db7a:	shl    DWORD PTR [edi],cl
  40db7c:	cs pop ecx
  40db7e:	shl    DWORD PTR [ecx],cl
  40db80:	ins    DWORD PTR es:[edi],dx
  40db81:	(bad)  gs:0xdc6026
  40db88:	aam    0xc9
  40db8a:	(bad)  
  40db8b:	fadd   st,st(1)
  40db8d:	or     bl,bl
  40db8f:	into   
  40db90:	add    ebx,eax
  40db92:	(bad)  
  40db93:	sar    al,1
  40db95:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db97:	mul    edi
  40db99:	xchg   edx,eax
  40db9a:	add    BYTE PTR [eax],al
  40db9c:	fidiv  DWORD PTR [edx+0xefe9]
	...
  40dbb2:	add    BYTE PTR [eax],al
  40dbb4:	lods   eax,DWORD PTR ds:[esi]
  40dbb5:	mov    cl,0xa6
  40dbb7:	repz mov ebx,0xc1e4e6f9
  40dbbd:	mov    ecx,0x9c63e3ae
  40dbc2:	icebp  
  40dbc3:	call   FWORD PTR [eax+0x62f9f7a0]
  40dbc9:	mov    ds:0xa862eefb,al
  40dbce:	jmp    0x2400:0x8ccf13f6
  40dbd5:	inc    BYTE PTR [ebx-0x6df75a6d]
  40dbdb:	(bad)  
  40dbdc:	mov    DWORD PTR [eax],ecx
  40dbde:	xchg   esp,eax
  40dbdf:	popf   
  40dbe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbe1:	(bad)  
  40dbe2:	fst    QWORD PTR [ecx-0x7e6f3475]
  40dbe8:	imul   ebx,DWORD PTR [eax],0xffffff96
  40dbeb:	xchg   edx,eax
  40dbec:	pop    ebx
  40dbed:	mov    WORD PTR [eax],es
  40dbef:	add    BYTE PTR [edx],bl
  40dbf1:	push   esi
  40dbf2:	and    eax,0x7366ed3f
  40dbf7:	xor    ecx,DWORD PTR ds:0xf13f386d
  40dbfd:	imul   edi,DWORD PTR [ebx+0x3f],0x21
  40dc01:	ins    BYTE PTR es:[edi],dx
  40dc02:	and    dh,BYTE PTR [ebx]
  40dc04:	sbb    DWORD PTR [eax+0x27],esi
  40dc07:	ins    BYTE PTR es:[edi],dx
  40dc08:	fcom   QWORD PTR [edx+0x68b10000]
  40dc0e:	and    eax,0x38639e70
  40dc13:	and    DWORD PTR [ebp+0x78d29c],esi
	...
  40dc29:	add    BYTE PTR [eax],al
  40dc2b:	add    al,ch
  40dc2d:	mov    ds:0x92db31d1,al
  40dc32:	test   al,0xff
  40dc34:	mov    ds:0xcb37e7a2,al
  40dc39:	je     0x40dc11
  40dc3b:	xor    al,0xcc
  40dc3d:	mov    esi,ss
  40dc3f:	and    al,0xcd
  40dc41:	push   0xffffffeb
  40dc43:	xor    edx,edi
  40dc45:	mov    dh,dl
  40dc47:	daa    
  40dc48:	aam    0x54
  40dc4a:	(bad)  
  40dc4b:	sub    esi,DWORD PTR [ebp+0xc4eb833]
  40dc51:	or     cl,bl
  40dc53:	inc    ecx
  40dc54:	repz sub ebp,ecx
  40dc57:	push   ecx
  40dc58:	jmp    0xb40d:0xe842b633
  40dc5f:	pop    esi
  40dc60:	cli    
  40dc61:	js     0x40dc65
  40dc63:	add    BYTE PTR [ebp+0x72d13e39],dh
  40dc69:	dec    ebx
  40dc6a:	sub    al,0xdd
  40dc6c:	add    eax,0x4df333d
  40dc71:	sub    DWORD PTR [esi+edx*8],esi
  40dc74:	lock sbb bl,BYTE PTR [edx]
  40dc77:	ret    
  40dc78:	cmc    
  40dc79:	and    eax,0x7db50002
  40dc7e:	shl    BYTE PTR [esi+eax*8],cl
  40dc81:	(bad)  
  40dc82:	in     eax,0x2a
  40dc84:	int    0x55
  40dc86:	fld    TBYTE PTR [eax]
  40dc88:	retf   
  40dc89:	push   ecx
  40dc8a:	repnz ds popf 
  40dc8d:	dec    esi
  40dc8e:	add    al,BYTE PTR [eax]
	...
  40dca4:	mov    ch,0x53
  40dca6:	loopne 0x40dcde
  40dca8:	xchg   esp,eax
  40dca9:	and    edx,0xe6759e23
  40dcaf:	xor    ecx,DWORD PTR [eax+ecx*2-0x707ec330]
  40dcb6:	out    0x3,eax
  40dcb8:	mov    ch,0x8f
  40dcba:	dec    edi
  40dcbb:	es mov edi,0x9c282e72
  40dcc1:	jle    0x40dce5
  40dcc3:	or     eax,0x1a3a87ae
  40dcc8:	mov    ch,0x8f
  40dcca:	addr16 jle 0x40dd14
  40dccd:	or     al,0x86
  40dccf:	jb     0x40dcfc
  40dcd1:	adc    BYTE PTR [ecx-0x7a],ah
  40dcd4:	push   ebp
  40dcd5:	adc    al,0x84
  40dcd7:	jo     0x40dd02
  40dcd9:	adc    al,0x68
  40dcdb:	add    esi,DWORD PTR [ebp+0x4f865f8f]
  40dce1:	adc    al,0x46
  40dce3:	jp     0x40dd30
  40dce5:	sbb    BYTE PTR [ecx+0x7e],ch
  40dce8:	or     eax,0xb57f541f
  40dced:	(bad)  
  40dcee:	iret   
  40dcef:	idiv   BYTE PTR [ebx+eiz*4-0x754ef54b]
  40dcf6:	cmc    
  40dcf7:	push   es
  40dcf8:	mov    bh,0x9a
  40dcfa:	sbb    eax,0xf994b0f2
  40dcff:	or     edi,ecx
  40dd01:	(bad)  
  40dd02:	ja     0x40dd71
  40dd04:	aaa    
  40dd05:	sbb    al,0x86
  40dd07:	add    DWORD PTR [eax],0x0
	...
  40dd19:	add    BYTE PTR [eax],al
  40dd1b:	add    BYTE PTR [ecx],dh
  40dd1d:	adc    esp,DWORD PTR [esi+0x7f]
  40dd20:	das    
  40dd21:	and    edi,DWORD PTR [esi-0x7b]
  40dd24:	inc    ebx
  40dd25:	es call 0x58d0922e
  40dd2b:	dec    esi
  40dd2c:	push   esi
  40dd2d:	cmp    edi,DWORD PTR [edi+0x60]
  40dd30:	aas    
  40dd31:	cs inc edi
  40dd33:	pop    esp
  40dd34:	das    
  40dd35:	cmp    ch,al
  40dd37:	add    esi,DWORD PTR [ebp-0x6d213671]
  40dd3d:	lods   eax,DWORD PTR ds:[esi]
  40dd3e:	jmp    0x40dd15
  40dd40:	cwde   
  40dd41:	mov    esp,0xc9eeb900
  40dd46:	add    BYTE PTR [ebx],bh
  40dd48:	jp     0x40dd79
  40dd4a:	mov    bh,0x85
  40dd4c:	arpl   WORD PTR [ebx],bp
  40dd4e:	mov    dl,0xa2
  40dd50:	pop    ebp
  40dd51:	xor    DWORD PTR [ecx+ebp*8-0x63ff704a],esi
  40dd58:	outs   dx,DWORD PTR ds:[esi]
  40dd59:	cli    
  40dd5a:	dec    esi
  40dd5b:	scas   eax,DWORD PTR es:[edi]
  40dd5c:	jbe    0x40dd35
  40dd5e:	jno    0x40dd07
  40dd60:	pop    esp
  40dd61:	rol    BYTE PTR [ecx-0x65],1
  40dd64:	inc    esp
  40dd65:	les    eax,FWORD PTR [eax]
  40dd67:	adc    esi,ebx
  40dd69:	outs   dx,BYTE PTR ds:[esi]
  40dd6a:	fdivr  DWORD PTR [eax]
  40dd6c:	shl    BYTE PTR [ebp-0x1b],1
  40dd6f:	xor    al,0xc6
  40dd71:	popa   
  40dd72:	jmp    0xc59982a9
  40dd77:	sub    ah,BYTE PTR [eax-0x491622a7]
  40dd7d:	pop    DWORD PTR [eax]
  40dd7f:	cmp    al,0x0
	...
  40dd91:	add    BYTE PTR [eax],al
  40dd93:	add    BYTE PTR [esi],al
  40dd95:	aaa    
  40dd96:	cmp    BYTE PTR [edx],0xdb
  40dd99:	xor    ch,BYTE PTR [ecx-0x4fbb16d1]
  40dd9f:	cdq    
  40dda0:	loopne 0x40ddb7
  40dda2:	mov    ah,0x88
  40dda4:	shl    DWORD PTR [ecx+eiz*4],1
  40dda7:	xchg   DWORD PTR [esi-0x3e25ff71],esi
  40ddad:	ins    BYTE PTR es:[edi],dx
  40ddae:	int3   
  40ddaf:	(bad)  
  40ddb0:	(bad)  
  40ddb1:	jo     0x40dd9a
  40ddb3:	mov    ecx,0xb7fe7ea8
  40ddb8:	fimul  WORD PTR [edi-0x5]
  40ddbb:	shl    DWORD PTR [ebp-0x286f1e8f],0x8f
  40ddc2:	add    BYTE PTR [edi+ecx*4+0x3e],al
  40ddc6:	call   0x5543:0xb3255748
  40ddcd:	xor    DWORD PTR [ebx+0x908a00],edi
  40ddd3:	add    BYTE PTR [esi-0x658ba3bb],ah
  40ddd9:	dec    ebp
  40ddda:	jno    0x40de2a
  40dddc:	nop
  40dddd:	inc    esp
  40ddde:	(bad)  
  40dddf:	push   DWORD PTR [edx-0x4a]
  40dde2:	repnz fsub DWORD PTR [ecx-0x55]
  40dde6:	jmp    0xede6e9d8
  40ddeb:	jecxz  0x40dddd
  40dded:	mov    es,WORD PTR [eax]
  40ddef:	add    BYTE PTR [edx-0x4bd7fd88],ah
  40ddf5:	pop    ecx
  40ddf6:	xor    DWORD PTR cs:[eax],eax
	...
  40de09:	add    BYTE PTR [eax],al
  40de0b:	add    cl,al
  40de0d:	mov    eax,DWORD PTR [eax]
  40de0f:	add    al,cl
  40de11:	popf   
  40de12:	fdivrp st(3),st
  40de14:	stos   DWORD PTR es:[edi],eax
  40de15:	lahf   
  40de16:	out    dx,eax
  40de17:	loopne 0x40ddc9
  40de19:	cdq    
  40de1a:	in     eax,0x0
  40de1c:	push   0xffffff83
  40de1e:	add    BYTE PTR [esi],al
  40de20:	pop    esp
  40de21:	xchg   BYTE PTR [ebx],al
  40de23:	xor    BYTE PTR [edx+0x640e0a8b],al
  40de29:	jle    0x40de36
  40de2b:	add    BYTE PTR [edx],cl
  40de2d:	jns    0x40de67
  40de2f:	cmp    BYTE PTR [ebx],bl
  40de31:	cmp    ax,WORD PTR [eax]
  40de34:	fisubr WORD PTR [eax]
  40de36:	popa   
  40de37:	repnz inc bx
  40de3a:	xor    BYTE PTR [ebp-0x1f],ah
  40de3d:	pusha  
  40de3e:	inc    bp
  40de40:	les    ebp,FWORD PTR [edi+0x2d]
  40de43:	imul   ebx,edx,0x78
  40de46:	xor    esi,DWORD PTR [eax]
  40de48:	fdiv   QWORD PTR [edx]
  40de4a:	and    BYTE PTR [esi],dh
  40de4c:	or     DWORD PTR [eax],esp
  40de4e:	and    eax,0xfe27777a
  40de53:	call   ebp
  40de55:	and    al,0x76
  40de57:	jns    0x40de65
  40de59:	pop    DWORD PTR [eax]
  40de5b:	add    BYTE PTR [ebp-0x76b64e40],dh
  40de61:	mov    eax,0x7d8341ca
  40de66:	lds    ebx,FWORD PTR [esi+0x76]
  40de69:	js     0x40de6d
  40de6b:	add    BYTE PTR [ebp+0xb94430],dh
	...
  40de81:	add    BYTE PTR [eax],al
  40de83:	add    BYTE PTR ds:0xb50048d9,cl
  40de89:	call   0x2:0x788123dd
  40de90:	mov    ch,0xb3
  40de92:	sub    eax,0x27850c7
  40de97:	add    BYTE PTR [ebp+0x78d846ab],dh
  40de9d:	js     0x40dea1
  40de9f:	add    BYTE PTR [ebp+0x4bb370ad],dh
  40dea5:	loope  0x40df23
  40dea7:	popf   
  40dea8:	push   ds
  40dea9:	cmc    
  40deaa:	dec    esp
  40deab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deac:	das    
  40dead:	hlt    
  40deae:	jg     0x40de35
  40deb0:	aaa    
  40deb1:	out    dx,al
  40deb2:	jp     0x40de47
  40deb4:	inc    esi
  40deb5:	js     0x40deb9
  40deb7:	add    BYTE PTR [ebp-0x4cf814f8],dh
  40debd:	inc    edx
  40debe:	in     al,0x26
  40dec0:	mov    ch,0xdb
  40dec2:	ds in  eax,0x5e
  40dec5:	xchg   ebx,eax
  40dec6:	inc    edx
  40dec7:	int    0x6d
  40dec9:	dec    ecx
  40deca:	inc    edi
  40decb:	(bad)  
  40decc:	xor    al,0x78
  40dece:	add    al,BYTE PTR [eax]
  40ded0:	mov    ch,0x6f
  40ded2:	mov    al,0x70
  40ded4:	scas   eax,DWORD PTR es:[edi]
  40ded5:	mov    ebp,0xdea957c0
  40deda:	enter  0x774a,0x78
  40dede:	add    al,BYTE PTR [eax]
  40dee0:	mov    ch,0x5f
  40dee2:	shl    BYTE PTR [eax-0x67],0x93
  40dee6:	mov    ebp,0x4b
	...
  40defb:	add    BYTE PTR [ebx-0x71],ah
  40defe:	sub    eax,0xc68fb504
  40df03:	xchg   ebx,eax
  40df04:	lods   al,BYTE PTR ds:[esi]
  40df05:	xchg   esi,eax
  40df06:	out    0xb7,al
  40df08:	push   ebp
  40df09:	cli    
  40df0a:	or     esp,DWORD PTR [edx-0x222a41a4]
  40df10:	pop    ebx
  40df11:	mov    edx,0xed89a9b6
  40df16:	shl    ecx,cl
  40df18:	jne    0x40df03
  40df1a:	out    dx,al
  40df1b:	pushf  
  40df1c:	dec    eax
  40df1d:	pop    es
  40df1e:	fisttp DWORD PTR [ebp-0x4c193b70]
  40df24:	fdiv   QWORD PTR [edi-0x25fc3623]
  40df2a:	lods   al,BYTE PTR ds:[esi]
  40df2b:	(bad)  
  40df2c:	cld    
  40df2d:	rcr    bl,cl
  40df2f:	add    ch,BYTE PTR [ecx+eiz*8-0x704afc01]
  40df36:	ja     0x40df62
  40df38:	arpl   WORD PTR [ebx+0x3a],di
  40df3b:	adc    bl,BYTE PTR [ebx-0x7bb0ee7c]
  40df41:	adc    DWORD PTR [eax+edx*1],0x1a484614
  40df48:	cmp    BYTE PTR [ebp+0x3c],cl
  40df4b:	and    BYTE PTR [edi+0x75],dl
  40df4e:	or     DWORD PTR [ecx+0xa],ebx
  40df51:	xor    eax,0x8fb58502
  40df56:	sbb    DWORD PTR [eax+0x62],eax
  40df59:	pop    esi
  40df5a:	adc    al,BYTE PTR [edi+ecx*2+0x69]
  40df5e:	enter  0x28,0x0
	...
  40df72:	add    BYTE PTR [eax],al
  40df74:	popa   
  40df75:	push   ebp
  40df76:	rcr    DWORD PTR [eax+esi*1],1
  40df79:	jne    0x40df45
  40df7b:	and    eax,0x615b8fb5
  40df80:	push   ecx
  40df81:	das    
  40df82:	test   BYTE PTR [edx+0x5a],ch
  40df85:	sbb    esi,DWORD PTR [ebx+0x67]
  40df88:	pop    edi
  40df89:	sub    eax,0x8fb6e901
  40df8e:	add    dl,al
  40df90:	jnp    0x40dfea
  40df92:	xlat   BYTE PTR ds:[ebx]
  40df93:	stos   BYTE PTR es:[edi],al
  40df94:	ins    DWORD PTR es:[edi],dx
  40df95:	dec    edx
  40df96:	loope  0x40df44
  40df98:	jne    0x40dfe6
  40df9a:	fldcw  WORD PTR [ebp+0x77008fa4]
  40dfa0:	jle    0x40dfd4
  40dfa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfa3:	push   ebx
  40dfa4:	cmp    BYTE PTR [ebx],0xe7
  40dfa7:	fs push esi
  40dfa9:	inc    edx
  40dfaa:	scas   al,BYTE PTR es:[edi]
  40dfab:	test   BYTE PTR [esi],dh
  40dfad:	xor    ah,BYTE PTR [esi+0x8fb92c]
  40dfb3:	or     bh,al
  40dfb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfb6:	paddb  mm7,QWORD PTR [edx-0x58e5b074]
  40dfbd:	fwait
  40dfbe:	psubsw mm6,QWORD PTR [esi+0x7fc9008f]
  40dfc5:	stc    
  40dfc6:	and    cl,ch
  40dfc8:	mov    dh,0x8f
  40dfca:	add    BYTE PTR [eax-0x5],ah
  40dfcd:	cmp    ebp,DWORD PTR [ecx+ebp*8-0x35ff704a]
  40dfd4:	mov    bl,0xa2
  40dfd6:	push   edi
	...
  40dfec:	sub    ebp,DWORD PTR [eax+ebx*1-0x17f9402]
  40dff3:	push   ebx
  40dff4:	sub    al,0x12
  40dff6:	lahf   
  40dff7:	arpl   dx,bx
  40dff9:	and    cl,BYTE PTR [edx-0x7fea0dc4]
  40dfff:	pop    esi
  40e000:	enter  0x881b,0x4e
  40e004:	xor    eax,0xc07dac28
  40e009:	and    al,0x90
  40e00b:	cmp    DWORD PTR [si-0x41],ebx
  40e00f:	jne    0x40e041
  40e011:	sbb    eax,0x2d7f65d7
  40e016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e017:	add    BYTE PTR [esp+ecx*4],cl
  40e01a:	add    BYTE PTR [eax],al
  40e01c:	outs   dx,DWORD PTR ds:[esi]
  40e01d:	out    dx,al
  40e01e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e01f:	mov    bh,0x8f
  40e021:	call   0x8a982da
  40e026:	mov    ds:0xbbea92a8,al
  40e02b:	mov    al,ds:0x848ee98a
  40e030:	adc    ebx,0xe2a3b8b2
  40e036:	cli    
  40e037:	xchg   esi,eax
  40e038:	jno    0x40e012
  40e03a:	mov    dl,0x0
  40e03c:	test   al,0x46
  40e03e:	push   edx
  40e03f:	pop    ecx
  40e040:	cwde   
  40e041:	cmp    eax,0x4ceb4947
  40e046:	adc    DWORD PTR [ecx-0x10],edx
  40e049:	xor    al,0x56
  40e04b:	pop    ecx
  40e04c:	inc    dx
  40e04e:	dec    ecx
  40e04f:	push   edx
	...
  40e064:	pushf  
  40e065:	xchg   ebx,eax
  40e066:	add    BYTE PTR [eax],al
  40e068:	pop    ecx
  40e069:	and    DWORD PTR [edx+0x65],edi
  40e06c:	ins    DWORD PTR es:[edi],dx
  40e06d:	xor    esp,DWORD PTR [edi+0x2d]
  40e070:	pop    ebx
  40e071:	or     al,0x6e
  40e073:	jae    0x40e0f4
  40e075:	daa    
  40e076:	ja     0x40e078
  40e078:	add    al,0x14
  40e07a:	sbb    BYTE PTR [eax-0x2f6511d0],0xd6
  40e081:	or     BYTE PTR [esi+ecx*4-0x2775061e],cl
  40e088:	or     DWORD PTR [edi+eax*4],edx
  40e08b:	(bad)  
  40e08c:	(bad)  
  40e08d:	sti    
  40e08e:	test   BYTE PTR [esi+0xedd7],cl
  40e094:	outs   dx,BYTE PTR ds:[esi]
  40e095:	pop    esi
  40e096:	sub    DWORD PTR [edx],esp
  40e098:	add    bl,BYTE PTR [eax+0x2e]
  40e09b:	bound  ecx,QWORD PTR [eax+esi*2+0x24]
  40e09f:	and    al,BYTE PTR [ebp-0x4ad6d397]
  40e0a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0a6:	call   0xe8cec6e8
  40e0ab:	pop    ds
  40e0ac:	mov    ch,0x2d
  40e0ae:	pop    ds
  40e0af:	loope  0x40e0ce
  40e0b1:	arpl   WORD PTR [edi-0x20],ax
  40e0b4:	adc    al,0x41
  40e0b6:	pop    ds
  40e0b7:	sti    
  40e0b8:	call   FWORD PTR [ebx]
  40e0ba:	and    eax,0x151e14e0
  40e0bf:	in     al,0xed
  40e0c1:	das    
  40e0c2:	or     al,0xbb
  40e0c4:	add    eax,0xf10b1e
	...
  40e0d9:	add    BYTE PTR [eax],al
  40e0db:	add    al,ch
  40e0dd:	sub    eax,0x2dcaf80a
  40e0e2:	xor    eax,0x32e9cfd3
  40e0e7:	stc    
  40e0e8:	aas    
  40e0e9:	adc    bh,BYTE PTR [esi]
  40e0eb:	int3   
  40e0ec:	fidiv  WORD PTR [ecx]
  40e0ee:	xor    edi,ebx
  40e0f0:	mov    ch,0x2b
  40e0f2:	stos   DWORD PTR es:[edi],eax
  40e0f3:	inc    ebp
  40e0f4:	mov    ch,0x7a
  40e0f6:	cwde   
  40e0f7:	pusha  
  40e0f8:	adc    eax,0xa2fff74e
  40e0fd:	shl    BYTE PTR [edi],cl
  40e0ff:	sar    DWORD PTR [edi-0x62],1
  40e102:	cmp    eax,0x29c62fc8
  40e107:	fnstenv [edi-0x68]
  40e10a:	xor    edi,eax
  40e10c:	je     0x40e176
  40e10e:	add    al,BYTE PTR [eax]
  40e110:	mov    ch,0xc8
  40e112:	push   ebp
  40e113:	mov    bh,0x2e
  40e115:	jmp    0x61f6808f
  40e11a:	in     al,0x2b
  40e11c:	mov    ds:0x8f3bde61,al
  40e121:	push   esp
  40e122:	fimul  WORD PTR [edx]
  40e124:	mov    ch,0x66
  40e126:	clc    
  40e127:	adc    al,0xbd
  40e129:	add    WORD PTR [esi],sp
  40e12c:	xchg   ecx,eax
  40e12d:	sub    ecx,edi
  40e12f:	and    DWORD PTR [esi-0x71],edi
  40e132:	and    edx,ecx
  40e134:	aam    0xa1
  40e136:	out    0xf0,eax
  40e138:	sub    bh,BYTE PTR [esi+0x25]
  40e13b:	xchg   edx,eax
  40e13c:	test   al,0xfc
  40e13e:	pop    eax
  40e13f:	pushf  
	...
  40e154:	mov    edi,DWORD PTR [edx+ebx*1+0x3af28697]
  40e15b:	test   al,0x93
  40e15d:	les    ebx,FWORD PTR [edi]
  40e15f:	test   al,0x9b
  40e161:	icebp  
  40e162:	out    0x3,eax
  40e164:	mov    ch,0x8f
  40e166:	outs   dx,DWORD PTR ds:[esi]
  40e167:	add    BYTE PTR [esi],0x4d
  40e16a:	mov    dl,0x3
  40e16c:	mov    ch,0x8f
  40e16e:	push   edi
  40e16f:	dec    edx
  40e170:	sub    BYTE PTR ds:0x3f196252,dh
  40e176:	dec    edi
  40e177:	dec    ecx
  40e178:	and    eax,DWORD PTR [edx-0x70f0b6bf]
  40e17e:	xchg   ecx,eax
  40e17f:	push   ss
  40e180:	retf   
  40e181:	je     0x40e1ef
  40e183:	push   cs
  40e184:	rol    DWORD PTR [edx+0x5a740e5e],0x57
  40e18b:	or     bl,BYTE PTR [edi-0x73ca7080]
  40e191:	jae    0x40e1e5
  40e193:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40e195:	nop
  40e196:	fst    st(7)
  40e198:	jecxz  0x40e129
  40e19a:	sbb    dh,BYTE PTR [bx]
  40e19d:	adc    eax,0x905d3612
  40e1a2:	retf   0xe6b9
  40e1a5:	faddp  st(2),st
  40e1a7:	add    esi,DWORD PTR [ebp+0x6d0f2a8f]
  40e1ad:	jle    0x40e1c5
  40e1af:	pop    ss
  40e1b0:	pop    ebx
  40e1b1:	cmp    DWORD PTR ds:0x127a4f12,esi
  40e1b7:	push   ss
	...
  40e1cc:	push   edx
  40e1cd:	ins    DWORD PTR es:[edi],dx
  40e1ce:	inc    esp
  40e1cf:	inc    ebx
  40e1d0:	dec    ebx
  40e1d1:	test   DWORD PTR [ecx],eax
  40e1d3:	add    eax,0xefe77fa0
  40e1d8:	shr    DWORD PTR ds:0x6edbceed,cl
  40e1de:	jecxz  0x40e198
  40e1e0:	jae    0x40e1ed
  40e1e2:	mov    esp,0x8fd77c
  40e1e7:	mov    ds:0x61c85f8a,eax
  40e1ec:	(bad)  [edi+0x2c9aa700]
  40e1f2:	mov    edx,0xef69a489
  40e1f7:	jbe    0x40e1b1
  40e1f9:	pop    DWORD PTR [eax]
  40e1fb:	add    esp,ebp
  40e1fd:	xchg   edi,eax
  40e1fe:	psubsw mm6,QWORD PTR [esi-0x2734ff71]
  40e205:	scas   eax,DWORD PTR es:[edi]
  40e206:	es jmp 0xc34171c2
  40e20c:	mov    ecx,0xcbe31e8a
  40e211:	fwait
  40e212:	or     DWORD PTR [ebx+eiz*8-0x422a007a],esi
  40e219:	mov    al,ds:0xb4b50607
  40e21e:	sub    esi,ebp
  40e220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e221:	cdq    
  40e222:	pxor   mm6,QWORD PTR [ebp-0x4f16d054]
  40e229:	xchg   edx,eax
  40e22a:	adc    DWORD PTR [esi],ecx
  40e22c:	gs fwait
  40e22e:	sub    eax,0xfe
	...
  40e243:	add    BYTE PTR [ecx-0x4e],bh
  40e246:	pop    ds
  40e247:	push   es
  40e248:	test   DWORD PTR [esi-0x3c6807d4],eax
  40e24e:	sub    ch,ah
  40e250:	xchg   edx,eax
  40e251:	stc    
  40e252:	pop    es
  40e253:	loope  0x40e1e3
  40e255:	test   eax,0x9c89d635
  40e25a:	push   cs
  40e25b:	fisubr WORD PTR [ebp-0x49]
  40e25e:	xor    DWORD PTR [eax],eax
  40e260:	push   ss
  40e261:	and    al,0xc
  40e263:	pop    edi
  40e264:	pop    esp
  40e265:	nop
  40e266:	add    BYTE PTR [eax],al
  40e268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e26a:	std    
  40e26b:	cli    
  40e26c:	ds stos BYTE PTR es:[edi],al
  40e26e:	out    dx,eax
  40e26f:	lock pop ss
  40e271:	mov    ch,dh
  40e273:	loopne 0x40e291
  40e275:	nop
  40e276:	add    BYTE PTR [eax],al
  40e278:	jbe    0x40e2bc
  40e27a:	pop    ebp
  40e27b:	dec    esi
  40e27c:	(bad)  
  40e27d:	sub    al,0x4d
  40e27f:	pop    ebx
  40e280:	imul   ecx,DWORD PTR [eax+ebx*2],0x4226d351
  40e287:	pop    ecx
  40e288:	fstp   TBYTE PTR [edi]
  40e28a:	ja     0x40e2ef
  40e28c:	iret   
  40e28d:	sub    ecx,DWORD PTR [eax+0x5c]
  40e290:	stos   DWORD PTR es:[edi],eax
  40e291:	push   esp
  40e292:	push   edi
  40e293:	add    bh,BYTE PTR [edi+edi*1+0x19c24a57]
  40e29a:	jl     0x40e304
  40e29c:	lea    ecx,[edi+0x6d]
  40e29f:	ja     0x40e264
  40e2a1:	and    BYTE PTR [esi+0x6b],ch
  40e2a4:	fmul   QWORD PTR [edi+0x0]
	...
  40e2ba:	add    BYTE PTR [eax],al
  40e2bc:	xchg   BYTE PTR [eax],al
  40e2be:	popf   
  40e2bf:	sahf   
  40e2c0:	arpl   bx,bp
  40e2c2:	fwait
  40e2c3:	scas   al,BYTE PTR es:[edi]
  40e2c4:	jmp    0x40e254
  40e2c6:	add    BYTE PTR [eax],al
  40e2c8:	dec    eax
  40e2c9:	add    eax,0xe61d989b
  40e2ce:	cdq    
  40e2cf:	add    ch,cl
  40e2d1:	mov    dh,dh
  40e2d3:	in     eax,0xfd
  40e2d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2d6:	out    0xf0,al
  40e2d8:	rol    ah,cl
  40e2da:	out    dx,eax
  40e2db:	cli    
  40e2dc:	clc    
  40e2dd:	sahf   
  40e2de:	in     eax,dx
  40e2df:	repnz lock mov ds:0x9fc4c8dc,eax
  40e2e6:	fcomip st,st(7)
  40e2e8:	mov    al,0x9c
  40e2ea:	cld    
  40e2eb:	test   eax,0xfc14adb5
  40e2f0:	push   esp
  40e2f1:	lods   al,BYTE PTR ds:[esi]
  40e2f2:	inc    edx
  40e2f3:	aad    0x76
  40e2f5:	lahf   
  40e2f6:	and    al,0xdc
  40e2f8:	imul   eax,eax,0xa06ad130
  40e2fe:	or     dl,ch
  40e300:	mov    fs:0x6bb5d243,eax
  40e306:	out    0x34,eax
  40e308:	rcl    BYTE PTR [edx-0x602d006b],cl
  40e30e:	into   
  40e30f:	call   FWORD PTR [edx]
  40e311:	dec    eax
  40e312:	sub    esi,edx
  40e314:	clc    
  40e315:	daa    
  40e316:	xor    eax,esi
  40e318:	in     eax,0x52
  40e31a:	adc    edx,ecx
  40e31c:	fbstp  TBYTE PTR [esi*1+0xcf]
	...
  40e333:	add    bh,ah
  40e335:	xor    al,0x32
  40e337:	cld    
  40e338:	fld    QWORD PTR [eax+0x36]
  40e33b:	rol    DWORD PTR [edx],0x35
  40e33e:	cmp    ebx,esp
  40e340:	sub    al,0xe
  40e342:	xor    bl,ah
  40e344:	hlt    
  40e345:	or     esp,DWORD PTR [esi*8-0xad0c12a]
  40e34c:	leave  
  40e34d:	add    al,0x5
  40e34f:	add    BYTE PTR [ebp-0xe2dbdd8],dh
  40e355:	cli    
  40e356:	inc    esp
  40e357:	ror    DWORD PTR [edx-0x76628f33],0xbd
  40e35e:	xor    esp,ecx
  40e360:	ins    BYTE PTR es:[edi],dx
  40e361:	test   al,0x32
  40e363:	mov    DWORD PTR [eax+0x6bd143c3],eax
  40e369:	mov    al,0x28
  40e36b:	xor    DWORD PTR [ebx-0x4e],0xbc5fce3f
  40e372:	adc    eax,0x54eb41f2
  40e377:	mov    cl,0x2a
  40e379:	(bad)  
  40e37a:	adc    eax,0x7434234a
  40e37f:	jbe    0x40e3d4
  40e381:	push   0x817d1208
  40e386:	sbb    esp,DWORD PTR [ecx]
  40e388:	pop    eax
  40e389:	and    eax,0x70481a57
  40e38e:	dec    BYTE PTR [esi]
  40e390:	push   ebx
  40e391:	ja     0x40e3a6
  40e393:	xor    DWORD PTR [esi],0x22
  40e396:	imul   eax,DWORD PTR [eax+0x0],0x0
	...
  40e3a9:	add    BYTE PTR [eax],al
  40e3ab:	add    BYTE PTR [ebx],bh
  40e3ad:	or     eax,0x184b77bb
  40e3b2:	jl     0x40e3e1
  40e3b4:	or     dl,BYTE PTR [ebp-0x44]
  40e3b7:	cmp    cl,bh
  40e3b9:	gs ret 
  40e3bb:	add    esi,DWORD PTR [ebp-0x47111c71]
  40e3c1:	xchg   edi,eax
  40e3c2:	stc    
  40e3c3:	out    0xa1,eax
  40e3c5:	xchg   dh,ch
  40e3c7:	mov    ebx,0xf3e78b75
  40e3cc:	ret    0xf288
  40e3cf:	test   BYTE PTR [ecx-0x39090668],0xa2
  40e3d6:	sti    
  40e3d7:	test   eax,0xeaf19caa
  40e3dc:	mov    al,0x9e
  40e3de:	repnz fcom DWORD PTR [edi-0x5d1f3d5a]
  40e3e5:	mov    ebx,0xfd57980a
  40e3ea:	sti    
  40e3eb:	mov    bh,ah
  40e3ed:	retf   
  40e3ee:	adc    ebx,edi
  40e3f0:	call   0xd218cd9c
  40e3f5:	mov    ah,0x1e
  40e3f7:	mov    WORD PTR ds:0xd5c906ae,fs
  40e3fd:	shl    BYTE PTR [ecx-0x57394e4c],0xbc
  40e404:	lock fild DWORD PTR [eax]
  40e407:	(bad)  
  40e408:	cmp    al,0xe9
  40e40a:	dec    edx
  40e40b:	cdq    
  40e40c:	es into 
  40e40e:	inc    edi
  40e40f:	mov    bh,0x0
	...
  40e421:	add    BYTE PTR [eax],al
  40e423:	add    BYTE PTR [esp+eiz*4],ah
  40e426:	push   edi
  40e427:	mov    ebx,0xbd55dd2b
  40e42c:	jae    0x40e3ce
  40e42e:	push   ds
  40e42f:	hlt    
  40e430:	or     bl,ah
  40e432:	pop    edx
  40e433:	sub    DWORD PTR ds:0xb4e92faf,0xfffffff5
  40e43a:	jnp    0x40e3c9
  40e43c:	and    ch,dl
  40e43e:	jb     0x40e4b6
  40e440:	pop    ecx
  40e441:	lock and cl,BYTE PTR cs:[eax-0x5]
  40e446:	ja     0x40e499
  40e448:	aas    
  40e449:	add    ebp,DWORD PTR [ebx+0x41]
  40e44c:	out    dx,eax
  40e44d:	in     al,dx
  40e44e:	jno    0x40e496
  40e450:	inc    ebx
  40e451:	shl    DWORD PTR [eax+0x69],1
  40e454:	sbb    BYTE PTR [ebx],0x82
  40e457:	push   0xffffff80
  40e459:	aas    
  40e45a:	and    BYTE PTR [ecx-0x77],0x11
  40e45e:	xchg   DWORD PTR [esi-0x7e7eaf4f],esp
  40e464:	gs pop es
  40e466:	sahf   
  40e467:	mov    ch,0x74
  40e469:	jge    0x40e460
  40e46b:	ins    DWORD PTR es:[edi],dx
  40e46c:	xor    BYTE PTR [edx],ah
  40e46e:	add    DWORD PTR [ebx+0x35],0x91569213
  40e475:	mov    ax,0x5c51
  40e479:	xor    eax,0x356541bd
  40e47e:	in     eax,dx
  40e47f:	cmp    edx,DWORD PTR [edx]
  40e481:	inc    ebx
  40e482:	test   eax,0xbe3e0f6f
  40e487:	xchg   ebx,eax
	...
  40e49c:	repnz ds mov eax,0xab35f267
  40e4a3:	cdq    
  40e4a4:	jmp    0xdd41891f
  40e4a9:	into   
  40e4aa:	fdivr  st(5),st
  40e4ac:	into   
  40e4ad:	ror    esp,1
  40e4af:	retf   
  40e4b0:	psubb  mm0,QWORD PTR [ecx-0x2b44673c]
  40e4b7:	ret    
  40e4b8:	in     al,dx
  40e4b9:	adc    dh,BYTE PTR [edi-0x25495b50]
  40e4bf:	int3   
  40e4c0:	mov    dl,0xd3
  40e4c2:	mov    edi,0x93e78fd7
  40e4c7:	lds    esp,FWORD PTR [eax-0x47070166]
  40e4cd:	mov    esi,esi
  40e4cf:	mov    al,ds:0xecefad3a
  40e4d4:	(bad)  
  40e4d5:	sahf   
  40e4d6:	repnz in al,0x8
  40e4d9:	popf   
  40e4da:	in     eax,dx
  40e4db:	lds    ecx,FWORD PTR [eax]
  40e4dd:	mov    ds:0x98fefbec,al
  40e4e2:	fcomip st,st(7)
  40e4e4:	sub    eax,esp
  40e4e6:	mov    ch,0xf0
  40e4e8:	add    al,0x78
  40e4ea:	push   ss
  40e4eb:	psubusb mm7,QWORD PTR [esi]
  40e4ee:	pusha  
  40e4ef:	fadd   DWORD PTR fs:[edx+0x67e61004]
  40e4f6:	adc    eax,0x5943b303
  40e4fb:	or     DWORD PTR [esi+eiz*2+0xc08],esi
	...
  40e512:	add    BYTE PTR [eax],al
  40e514:	in     al,0x77
  40e516:	or     BYTE PTR [esi+ebx*8+0x68],bl
  40e51a:	add    eax,0x3c4aea18
  40e51f:	sub    ah,ch
  40e521:	pop    eax
  40e522:	cmp    edx,DWORD PTR [ecx]
  40e524:	hlt    
  40e525:	push   ebp
  40e526:	cs daa 
  40e528:	jp     0x40e58c
  40e52a:	xor    eax,0x33548b23
  40e52f:	xor    eax,0x30308cc6
  40e534:	mov    ch,0x9a
  40e536:	int    0x70
  40e538:	adc    ebx,DWORD PTR [esp+edx*8+0x35]
  40e53c:	iret   
  40e53d:	xor    dh,BYTE PTR [edi-0x1d775bff]
  40e543:	(bad)  
  40e544:	jp     0x40e5b4
  40e546:	leave  
  40e547:	sub    BYTE PTR [ecx-0x4afffd98],ch
  40e54d:	fwait
  40e54e:	das    
  40e54f:	hlt    
  40e550:	ja     0x40e4f7
  40e552:	inc    ecx
  40e553:	(bad)  
  40e554:	outs   dx,DWORD PTR ds:[esi]
  40e555:	ret    
  40e556:	cmp    DWORD PTR [eax],eax
  40e558:	mov    ch,0xc4
  40e55a:	push   0x7ee83c81
  40e55f:	(bad)  
  40e560:	jae    0x40e53a
  40e562:	add    DWORD PTR [eax],eax
  40e564:	mov    ch,0x14
  40e566:	mov    cl,0x48
  40e568:	je     0x40e599
  40e56a:	mov    bh,0x46
  40e56c:	test   DWORD PTR [edx-0x42],ebp
  40e56f:	aas    
  40e570:	jnp    0x40e5da
  40e572:	add    al,BYTE PTR [eax]
  40e574:	mov    ch,0x1
  40e576:	imul   ecx,DWORD PTR [ecx+0x0],0x0
	...
  40e58c:	xor    ch,BYTE PTR ds:0x1b59b84
  40e592:	pop    ebp
  40e593:	mov    esi,0xa1560751
  40e598:	sbb    cl,dh
  40e59a:	pop    esi
  40e59b:	mov    esi,0xb060f51d
  40e5a0:	mov    ch,0x28
  40e5a2:	aas    
  40e5a3:	jmp    0x691c:0xee1d1a20
  40e5aa:	add    al,BYTE PTR [eax]
  40e5ac:	mov    ch,0x26
  40e5ae:	inc    edx
  40e5af:	shl    al,0xcb
  40e5b2:	dec    esi
  40e5b3:	in     eax,0x2
  40e5b5:	rcr    BYTE PTR [edx],cl
  40e5b7:	mov    esp,0xb859d30a
  40e5bc:	mov    edx,DWORD PTR [ebx]
  40e5be:	jnp    0x40e54e
  40e5c0:	mov    ch,0x8f
  40e5c2:	ficom  DWORD PTR [esi-0x534b69f2]
  40e5c8:	hlt    
  40e5c9:	(bad)  
  40e5ca:	scas   al,BYTE PTR es:[edi]
  40e5cb:	add    esi,DWORD PTR [ebp-0x560d0871]
  40e5d1:	mov    ecx,DWORD PTR [eax]
  40e5d3:	aad    0xa9
  40e5d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5d6:	adc    ah,dl
  40e5d8:	retf   
  40e5d9:	mov    dh,0xea
  40e5db:	enter  0xadac,0xee
  40e5df:	(bad)  
  40e5e0:	push   0x76
  40e5e2:	sbb    DWORD PTR [edx],edx
  40e5e4:	popa   
  40e5e5:	ins    BYTE PTR es:[edi],dx
  40e5e6:	sub    BYTE PTR [edi+edx*2],dh
  40e5e9:	pop    ebx
  40e5ea:	xor    edi,DWORD PTR [edi]
  40e5ec:	ins    BYTE PTR es:[edi],dx
  40e5ed:	(bad)  
  40e5ee:	das    
  40e5ef:	sub    eax,DWORD PTR [eax]
	...
  40e601:	add    BYTE PTR [eax],al
  40e603:	add    BYTE PTR [eax+0x57],ah
  40e606:	adc    DWORD PTR ds:0x15fa746e,ecx
  40e60c:	inc    ebp
  40e60d:	pop    DWORD PTR [eax]
  40e60f:	sbb    bl,BYTE PTR [ecx]
  40e611:	je     0x40e623
  40e613:	cmp    al,0x24
  40e615:	push   esi
  40e616:	les    esi,FWORD PTR [eax]
  40e618:	sub    BYTE PTR [edi+eiz*4+0x8],dl
  40e61c:	push   es
  40e61d:	bound  ebp,QWORD PTR [edi-0x4bab08d9]
  40e623:	add    esi,DWORD PTR [ebp-0x6c67c771]
  40e629:	jmp    0x900bb934
  40e62e:	fs jae 0x40e677
  40e631:	sbb    eax,0x43f9295a
  40e636:	call   0x26d09b3e
  40e63b:	stos   BYTE PTR es:[edi],al
  40e63c:	jge    0x40e611
  40e63e:	retf   
  40e63f:	retf   0xb89b
  40e642:	out    0x3,eax
  40e644:	mov    ch,0x8f
  40e646:	add    DWORD PTR [edi-0x47e8208f],esi
  40e64c:	data16 int 0x0
  40e64f:	sbb    esi,DWORD PTR [ebx-0x23]
  40e652:	pop    ebp
  40e653:	adc    BYTE PTR [ecx+0x197e008f],dh
  40e659:	das    
  40e65a:	mov    ds:0x13f159a,al
  40e65f:	cmp    eax,edx
  40e661:	push   0x8fb6e9ec
  40e666:	add    BYTE PTR [ebx+0x0],bh
	...
  40e679:	add    BYTE PTR [eax],al
  40e67b:	add    BYTE PTR [ebx],bl
  40e67d:	adc    eax,DWORD PTR [edi-0x25eef3a7]
  40e683:	test   BYTE PTR [ecx],bh
  40e685:	or     DWORD PTR [esi+0x8fb6e9],ebx
  40e68b:	outs   dx,DWORD PTR ds:[esi]
  40e68c:	jmp    DWORD PTR [esi]
  40e68e:	mov    bl,0x45
  40e690:	add    BYTE PTR ds:0x2ef168ee,bh
  40e696:	test   al,0x4c
  40e698:	(bad)  
  40e699:	pop    DWORD PTR [eax]
  40e69b:	cmp    eax,0x41bb2ff8
  40e6a0:	jmp    0x40e6dc
  40e6a2:	add    DWORD PTR [eax-0x50],ecx
  40e6a5:	sbb    eax,0x1d986b99
  40e6aa:	cmp    DWORD PTR [ecx+0x779c1e6e],0x6b95218d
  40e6b4:	mov    ecx,0xa02008f
  40e6b9:	les    ebp,FWORD PTR [eax+esi*8]
  40e6bc:	mov    ch,0x82
  40e6be:	add    edx,ebp
  40e6c0:	add    BYTE PTR [ecx-0x710f0bbc],cl
  40e6c6:	push   cs
  40e6c7:	(bad)  
  40e6c8:	mov    dh,0x8f
  40e6ca:	add    bl,al
  40e6cc:	lds    esi,FWORD PTR [ebx]
  40e6ce:	fsub   QWORD PTR [ecx-0x640c8c39]
  40e6d4:	mov    eax,0xb89db472
  40e6d9:	cmp    dh,0x0
  40e6dc:	xor    al,ah
  40e6de:	mov    WORD PTR [edx+0x0],cs
	...
  40e6f4:	int3   
  40e6f5:	nop
  40e6f6:	add    BYTE PTR [eax],al
  40e6f8:	outs   dx,DWORD PTR ds:[esi]
  40e6f9:	outs   dx,DWORD PTR ds:[esi]
  40e6fa:	(bad)  
  40e6fb:	push   DWORD PTR [ebx]
  40e6fd:	or     BYTE PTR [ecx+0x8b59bd],0x0
  40e704:	clc    
  40e705:	fwait
  40e706:	repnz clc 
  40e708:	add    DWORD PTR [ecx-0x6f63141b],ecx
  40e70e:	add    BYTE PTR [eax],al
  40e710:	pop    esi
  40e711:	popa   
  40e712:	xor    BYTE PTR ds:0x117671b3,dh
  40e718:	jno    0x40e763
  40e71a:	xor    al,0x3c
  40e71c:	bound  esp,QWORD PTR [eax+0x38]
  40e71f:	add    BYTE PTR [esi+eax*8],dh
  40e722:	mov    eax,0xf2d3e9bf
  40e727:	fwait
  40e728:	jmp    0x40e708
  40e72a:	mov    esp,0xb0c9f8b6
  40e72f:	in     al,dx
  40e730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e731:	lock lods eax,DWORD PTR ds:[esi]
  40e733:	scas   eax,DWORD PTR es:[edi]
  40e734:	out    dx,eax
  40e735:	ret    
  40e736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e737:	mov    edx,0xc7bce4
  40e73c:	pop    ss
  40e73d:	jns    0x40e74e
  40e73f:	pop    ss
  40e740:	sub    al,BYTE PTR [ecx+0x790f130a]
  40e746:	adc    eax,0x901c44
  40e74b:	add    BYTE PTR [esi-0x25d6d5a6],ch
  40e751:	ins    DWORD PTR es:[edi],dx
  40e752:	or     DWORD PTR [ecx],ecx
  40e754:	push   ss
  40e755:	bound  ebx,QWORD PTR [eax*1+0x0]
	...
  40e76c:	or     esp,DWORD PTR [ebp+edx*1+0x1]
  40e770:	fbstp  TBYTE PTR [ebx+0x4]
  40e773:	dec    ecx
  40e774:	xchg   edx,eax
  40e775:	jns    0x40e777
  40e777:	push   cs
  40e778:	leave  
  40e779:	jb     0x40e780
  40e77b:	add    eax,0x43a5adb5
  40e780:	jne    0x40e7f1
  40e782:	mov    bl,0xff
  40e784:	ret    0x15f6
  40e787:	out    dx,eax
  40e788:	iret   
  40e789:	shl    BYTE PTR [esi],cl
  40e78b:	retf   0x207f
  40e78e:	das    
  40e78f:	fnsave [ebx+0x5]
  40e792:	sub    eax,0x3ca977d6
  40e797:	lds    eax,FWORD PTR [ebp-0x1c]
  40e79a:	sub    bl,ah
  40e79c:	jle    0x40e754
  40e79e:	xor    eax,edx
  40e7a0:	jp     0x40e74b
  40e7a2:	push   0xffffff85
  40e7a4:	fild   WORD PTR ss:[edi-0x49]
  40e7a8:	aas    
  40e7a9:	les    eax,FWORD PTR [esi]
  40e7ab:	in     al,dx
  40e7ac:	pusha  
  40e7ad:	ret    
  40e7ae:	add    al,0xe1
  40e7b0:	arpl   WORD PTR [ecx],dx
  40e7b2:	dec    esp
  40e7b3:	mov    dl,0x58
  40e7b5:	fidivr WORD PTR [edi+0x0]
  40e7b8:	mov    ch,0x42
  40e7ba:	les    edi,FWORD PTR [edx*4-0x76d824ba]
  40e7c1:	xor    bl,bl
  40e7c3:	sub    cl,dh
  40e7c5:	dec    ebp
  40e7c6:	xchg   ebp,eax
  40e7c7:	xor    eax,0x3a916082
  40e7cc:	out    0x4f,al
  40e7ce:	int    0x73
	...
  40e7e4:	fmul   DWORD PTR [ebx-0x38]
  40e7e7:	das    
  40e7e8:	fistp  WORD PTR [eax+0x7de0353f]
  40e7ee:	add    al,BYTE PTR [eax]
  40e7f0:	mov    ch,0xfb
  40e7f2:	jmp    0x40e778
  40e7f4:	xor    BYTE PTR [ecx+0x2],ch
  40e7f7:	add    BYTE PTR [ebp+0x5f6f911],dh
  40e7fd:	inc    edi
  40e7fe:	jmp    0xecf3:0x13909bc
  40e805:	xor    eax,0x9016fef8
  40e80a:	dec    ebp
  40e80b:	in     al,0xd8
  40e80d:	arpl   WORD PTR [edx-0x7c92cd4d],bx
  40e813:	in     eax,dx
  40e814:	jmp    0xe80f:0x39f28e63
  40e81b:	add    esi,DWORD PTR [ebp+0x3b894f8f]
  40e821:	adc    esp,DWORD PTR [edx-0x7c]
  40e824:	dec    ebp
  40e825:	push   eax
  40e826:	aaa    
  40e827:	lahf   
  40e828:	inc    ebp
  40e829:	or     al,0x45
  40e82b:	retf   0x1a5a
  40e82e:	push   esi
  40e82f:	hlt    
  40e830:	xchg   edx,eax
  40e831:	jb     0x40e8a1
  40e833:	xchg   ecx,eax
  40e834:	nop
  40e835:	push   0x6b8fe43d
  40e83a:	push   edx
  40e83b:	mov    DWORD PTR [edx+0x72],edi
  40e83e:	inc    esi
  40e83f:	pushf  
  40e840:	repnz or ebp,DWORD PTR [esi-0x76]
  40e844:	dec    ecx
  40e845:	or     al,0x3e
  40e847:	add    al,0x0
	...
  40e859:	add    BYTE PTR [eax],al
  40e85b:	add    BYTE PTR [ebp-0xab1971],dh
  40e861:	leave  
  40e862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e863:	dec    esp
  40e864:	mov    WORD PTR [edi+0x4222d171],cs
  40e86a:	pop    ecx
  40e86b:	in     al,dx
  40e86c:	pop    esi
  40e86d:	push   ecx
  40e86e:	sbb    cl,al
  40e870:	push   0x49
  40e872:	jno    0x40e80a
  40e874:	inc    esi
  40e875:	outs   dx,BYTE PTR ds:[esi]
  40e876:	dec    ebp
  40e877:	dec    DWORD PTR [eax]
  40e879:	dec    eax
  40e87a:	adc    DWORD PTR [esi-0x2940b69e],ecx
  40e880:	add    eax,0xe48a6b11
  40e885:	and    al,0x92
  40e887:	lock stc 
  40e889:	pop    ebp
  40e88a:	mov    al,ds:0xbe733dd1
  40e88f:	in     eax,0x6
  40e891:	and    DWORD PTR [ecx-0x65],esp
  40e894:	es dec esi
  40e896:	add    ecx,ebp
  40e898:	mov    dh,0x8f
  40e89a:	add    dl,bh
  40e89c:	jne    0x40e850
  40e89e:	cmp    eax,0x20b698d6
  40e8a3:	shl    BYTE PTR [esi+0x643a008f],1
  40e8a9:	loopne 0x40e8bc
  40e8ab:	jmp    0xc6417866
  40e8b0:	mov    ah,BYTE PTR [esi-0x5de54600]
  40e8b6:	cmp    dh,BYTE PTR [esp+ebp*8+0x12b229ec]
  40e8bd:	aam    0x38
  40e8bf:	rol    BYTE PTR [eax],1
	...
  40e8d1:	add    BYTE PTR [eax],al
  40e8d3:	add    dl,ah
  40e8d5:	pop    DWORD PTR [eax]
  40e8d7:	sub    BYTE PTR [esi],ah
  40e8d9:	push   esi
  40e8da:	ret    
  40e8db:	jp     0x40e947
  40e8dd:	dec    edx
  40e8de:	xchg   ecx,eax
  40e8df:	jmp    0x9441789a
  40e8e4:	pop    ecx
  40e8e5:	xor    esi,DWORD PTR [ebx+0x8fb6e9]
  40e8eb:	add    ebp,edx
  40e8ed:	scas   eax,DWORD PTR es:[edi]
  40e8ee:	push   ss
  40e8ef:	aam    0xc1
  40e8f1:	aam    0x3e
  40e8f3:	shl    DWORD PTR [esi+0x378e008f],1
  40e8f9:	call   0x9039db15
  40e8fe:	add    cl,al
  40e900:	hlt    
  40e901:	mov    eax,ds:0x8faaa45d
  40e906:	add    BYTE PTR ds:0x3a62f59,bh
  40e90c:	mov    ah,0x72
  40e90e:	idiv   DWORD PTR [esi]
  40e910:	sub    BYTE PTR [ecx-0x2],dh
  40e913:	int3   
  40e914:	add    al,0x42
  40e916:	ret    0xa6
  40e919:	jns    0x40e89c
  40e91b:	jae    0x40e93d
  40e91d:	popa   
  40e91e:	lea    ebp,[edi+0x1c]
  40e921:	jge    0x40e8ac
  40e923:	add    BYTE PTR [esi-0x44ff19fe],cl
  40e929:	int    0x30
  40e92b:	add    dh,bl
  40e92d:	scas   eax,DWORD PTR es:[edi]
  40e92e:	adc    BYTE PTR [ecx],bl
  40e930:	fimul  DWORD PTR [eax+eax*1+0x22a30300]
  40e937:	add    BYTE PTR ss:[eax],al
	...
  40e94a:	add    BYTE PTR [eax],al
  40e94c:	aad    0xf4
  40e94e:	add    BYTE PTR [eax],al
  40e950:	add    esp,0xd37e0342
  40e956:	dec    esi
  40e957:	inc    edi
  40e958:	les    ecx,FWORD PTR [eax+eax*1+0x75fbae00]
  40e95f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40e961:	call   0xe3b0ff71
  40e966:	das    
  40e967:	outs   dx,BYTE PTR ds:[esi]
  40e968:	arpl   cx,dx
  40e96a:	dec    esp
  40e96b:	push   esi
  40e96c:	mov    bh,0x8b
  40e96e:	push   es
  40e96f:	jno    0x40e90d
  40e971:	mov    WORD PTR [eax],es
  40e973:	add    BYTE PTR [edi+edx*4+0x5a],cl
  40e977:	inc    ebx
  40e978:	pop    esi
  40e979:	rol    DWORD PTR [ecx+0x12],cl
  40e97c:	pusha  
  40e97d:	xchg   esp,eax
  40e97e:	add    eax,0xdb1a53
  40e983:	add    dl,dl
  40e985:	dec    edi
  40e986:	jle    0x40e93e
  40e988:	dec    BYTE PTR [ebx-0x2b8a0000]
  40e98e:	popa   
  40e98f:	jle    0x40e9b9
  40e991:	mov    WORD PTR [eax],es
  40e993:	add    bh,bh
  40e995:	fisttp QWORD PTR [ebx+0x48]
  40e998:	add    BYTE PTR [eax-0x6eeaecee],cl
  40e99e:	push   esp
  40e99f:	push   edx
  40e9a0:	dec    eax
  40e9a1:	in     eax,0x50
  40e9a3:	push   esi
  40e9a4:	push   esp
  40e9a5:	xchg   ebx,eax
  40e9a6:	adc    BYTE PTR [esi],bl
  40e9a8:	mov    dl,0x8c
  40e9aa:	dec    eax
  40e9ab:	dec    esi
  40e9ac:	fcomp  QWORD PTR [edx+0x1618]
	...
  40e9c2:	add    BYTE PTR [eax],al
  40e9c4:	mov    ch,0x70
  40e9c6:	or     al,BYTE PTR [edx+ebp*2-0x33]
  40e9ca:	xor    al,0x24
  40e9cc:	outs   dx,DWORD PTR ds:[esi]
  40e9cd:	int3   
  40e9ce:	jae    0x40ea42
  40e9d0:	pop    ebp
  40e9d1:	mov    eax,0xbe627e62
  40e9d6:	jl     0x40ea17
  40e9d8:	mov    ch,0x94
  40e9da:	push   esp
  40e9db:	ins    BYTE PTR es:[edi],dx
  40e9dc:	jg     0x40e9a6
  40e9de:	add    al,0x0
  40e9e0:	mov    ch,0xaf
  40e9e2:	push   0x32805767
  40e9e7:	cmp    BYTE PTR [esp+ecx*4+0x7d],bh
  40e9eb:	js     0x40ea37
  40e9ed:	cdq    
  40e9ee:	jns    0x40ea61
  40e9f0:	pop    ds
  40e9f1:	push   0x7b
  40e9f3:	pusha  
  40e9f4:	sbb    BYTE PTR [esi+0x76],ch
  40e9f7:	sub    ecx,edx
  40e9f9:	push   esi
  40e9fa:	dec    ebx
  40e9fb:	jle    0x40ea18
  40e9fd:	pop    esp
  40e9fe:	imul   esp,DWORD PTR [ecx+0xf],0x51
  40ea02:	push   ebp
  40ea03:	push   edx
  40ea04:	repz and al,0x5d
  40ea07:	pop    ecx
  40ea08:	pushf  
  40ea09:	cmp    DWORD PTR [ebp+ebx*2-0x60],ebx
  40ea0d:	or     al,0x54
  40ea0f:	pop    ebx
  40ea10:	push   cs
  40ea11:	xor    BYTE PTR [ecx],ah
  40ea13:	or     ebx,esi
  40ea15:	xor    cl,BYTE PTR [ebx+0x46]
  40ea18:	repnz xor eax,0x7dc24f63
  40ea1e:	add    al,BYTE PTR [eax]
  40ea20:	mov    ch,0x78
  40ea22:	mov    ebp,0xbdf2b540
  40ea27:	inc    eax
	...
  40ea3c:	mov    ch,0x43
  40ea3e:	pop    ds
  40ea3f:	inc    edx
  40ea40:	mov    ch,0xee
  40ea42:	xchg   esi,eax
  40ea43:	aas    
  40ea44:	mov    ch,0xa7
  40ea46:	enter  0xb540,0x8
  40ea4a:	add    dh,BYTE PTR [edx-0x4b]
  40ea4d:	in     eax,dx
  40ea4e:	add    DWORD PTR [eax-0x4b],ebp
  40ea51:	(bad)  
  40ea52:	push   eax
  40ea53:	add    al,0x97
  40ea55:	(bad)  
  40ea56:	push   eax
  40ea57:	add    al,0x81
  40ea59:	(bad)  
  40ea5a:	sub    eax,DWORD PTR [ecx+ebp*2]
  40ea5d:	(bad)  
  40ea5e:	and    eax,DWORD PTR [esi*4+0x775d508f]
  40ea65:	(bad)  
  40ea66:	ficom  DWORD PTR [edx+ebp*4+0x75d8dd8f]
  40ea6d:	(bad)  
  40ea6e:	jp     0x40ea0d
  40ea70:	call   0xe78f:0x7103e18f
  40ea77:	add    esi,DWORD PTR [ebp+0x75e81e8f]
  40ea7d:	(bad)
  40ea81:	pop    DWORD PTR [edx+ebp*8-0x147f700b]
  40ea88:	cmc    
  40ea89:	(bad)  
  40ea8a:	in     eax,0xef
  40ea8c:	cmc    
  40ea8d:	(bad)  
  40ea8e:	sbb    al,dh
  40ea90:	cmc    
  40ea91:	(bad)  
  40ea92:	scas   al,BYTE PTR es:[edi]
  40ea93:	add    esp,DWORD PTR [ecx]
  40ea95:	nop
  40ea96:	into   
  40ea97:	add    edx,DWORD PTR [edi]
  40ea99:	nop
  40ea9a:	enter  0x1103,0x90
  40ea9e:	stos   DWORD PTR es:[edi],eax
  40ea9f:	add    eax,DWORD PTR [eax]
	...
  40eab1:	add    BYTE PTR [eax],al
  40eab3:	add    BYTE PTR [ebp-0x1dfc4c71],dh
  40eab9:	(bad)
  40eabd:	pop    ebx
  40eabf:	add    eax,DWORD PTR [ecx]
  40eac1:	nop
  40eac2:	out    0x3,eax
  40eac4:	mov    ch,0x8f
  40eac6:	aam    0x3
  40eac8:	mov    ch,0x8f
  40eaca:	ret    
  40eacb:	pop    esi
  40eacc:	in     eax,0xc1
  40eace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eacf:	pop    ebx
  40ead0:	fmul   st(6),st
  40ead2:	mov    edx,0xacc5e748
  40ead7:	push   ecx
  40ead8:	xchg   edx,eax
  40ead9:	xlat   BYTE PTR ds:[ebx]
  40eada:	scas   al,BYTE PTR es:[edi]
  40eadb:	push   edx
  40eadc:	or     esi,0x8fb6cd00
  40eae2:	add    BYTE PTR [eax+0x4a63f988],al
  40eae8:	lea    ecx,[edi-0x2e2bec00]
  40eaee:	add    BYTE PTR [eax],bh
  40eaf0:	aam    0xd1
  40eaf2:	add    BYTE PTR ds:0x300d1d4,bh
  40eaf8:	rcl    cl,cl
  40eafa:	add    BYTE PTR [esi],ah
  40eafc:	xchg   ebp,eax
  40eafd:	rol    DWORD PTR [eax],1
  40eaff:	ins    DWORD PTR es:[edi],dx
  40eb00:	ret    0xd1
  40eb03:	popa   
  40eb04:	sub    eax,0x95ef00cf
  40eb09:	rol    DWORD PTR [eax],1
  40eb0b:	(bad)  
  40eb0c:	xchg   ebp,eax
  40eb0d:	rol    DWORD PTR [eax],1
  40eb0f:	sub    BYTE PTR [edi-0x2e],dh
  40eb12:	inc    esp
  40eb13:	and    al,0x73
  40eb15:	(bad)  
  40eb16:	dec    eax
  40eb17:	xor    BYTE PTR [eax],al
	...
  40eb29:	add    BYTE PTR [eax],al
  40eb2b:	add    bh,bh
  40eb2d:	fmul   DWORD PTR [esp+ebp*1-0x5]
  40eb31:	fcom   QWORD PTR [eax+0x18]
  40eb34:	pop    es
  40eb35:	rcl    DWORD PTR [esp+edx*1+0x3],0xc5
  40eb3a:	pop    eax
  40eb3b:	shr    ah,0xee
  40eb3e:	(bad)  
  40eb3f:	retf   0xf312
  40eb42:	data16 into 
  40eb44:	push   cs
  40eb45:	imul   DWORD PTR [edx-0x3e]
  40eb48:	or     bh,bl
  40eb4a:	outs   dx,BYTE PTR ds:[esi]
  40eb4b:	(bad)  
  40eb4c:	out    0xde,al
  40eb4e:	jb     0x40eb0a
  40eb50:	loop   0x40eb34
  40eb52:	jbe    0x40eb12
  40eb54:	fsubrp st(6),st
  40eb56:	jp     0x40eb51
  40eb58:	mov    eax,ds:0x8ddd31a1
  40eb5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb5e:	xor    eax,0x2db889e1
  40eb63:	jmp    0xe9417b1e
  40eb68:	mov    dh,0x8f
  40eb6a:	add    BYTE PTR [eax],al
  40eb6c:	cmp    BYTE PTR [ebp-0x2156dbdc],dh
  40eb72:	jno    0x40ebe8
  40eb74:	mov    eax,ds:0xa57875e2
  40eb79:	out    0x79,al
  40eb7b:	and    al,0xc0
  40eb7d:	mov    bh,0x24
  40eb7f:	and    al,0xb0
  40eb81:	mov    bh,0x3e
  40eb83:	aas    
  40eb84:	int3   
  40eb85:	rol    BYTE PTR [edx+0x43],1
  40eb88:	rcl    ah,1
  40eb8a:	inc    esi
  40eb8b:	inc    edi
  40eb8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb8d:	fmul   DWORD PTR [edx+0x4b]
	...
  40eba4:	cwde   
  40eba5:	fmul   QWORD PTR [esi+0x4f]
  40eba8:	mov    esp,0xc05352c0
  40ebad:	les    edx,FWORD PTR [esi+0x57]
  40ebb0:	add    BYTE PTR [ebp-0x4b0fdbdc],dh
  40ebb6:	pop    eax
  40ebb7:	pop    ecx
  40ebb8:	xchg   dh,al
  40ebba:	pop    esp
  40ebbb:	pop    ebp
  40ebbc:	mov    cl,dl
  40ebbe:	pusha  
  40ebbf:	popa   
  40ebc0:	mov    esi,0xb26564ee
  40ebc5:	repnz push 0x6cf6b669
  40ebcb:	ins    DWORD PTR es:[edi],dx
  40ebcc:	call   0x90:0x9c7170fb
  40ebd3:	add    BYTE PTR [ecx-0x73ff896d],bh
  40ebd9:	nop
  40ebda:	add    BYTE PTR [eax],al
  40ebdc:	push   ebx
  40ebdd:	aad    0x54
  40ebdf:	and    BYTE PTR [eax+edx*4+0x0],bl
  40ebe3:	add    BYTE PTR [ebx+ebx*8+0x51],cl
  40ebe7:	push   esp
  40ebe8:	lods   al,BYTE PTR ds:[esi]
  40ebe9:	xchg   ebx,eax
  40ebea:	add    BYTE PTR [eax],al
  40ebec:	jae    0x40ebe2
  40ebee:	addr16 jo 0x40ec19
  40ebf1:	in     eax,0x71
  40ebf3:	cs xor ah,bh
  40ebf6:	ins    BYTE PTR es:[edi],dx
  40ebf7:	add    BYTE PTR [ebp-0x3a9699c3],dh
  40ebfd:	jmp    0x7262:0xea867376
  40ec04:	mov    eax,ds:0x71e3
	...
  40ec19:	add    BYTE PTR [eax],al
  40ec1b:	add    BYTE PTR [ebp-0x5a9699c3],dh
  40ec21:	jmp    0x7475:0xbe667376
  40ec28:	xchg   ecx,eax
  40ec29:	fnsave [ebx+0x6e]
  40ec2c:	mov    ch,0xbd
  40ec2e:	push   0x72b98569
  40ec33:	gs push esp
  40ec35:	stos   BYTE PTR es:[edi],al
  40ec36:	gs inc edx
  40ec38:	pop    esp
  40ec39:	mov    ds:0xbc65616d,al
  40ec3e:	jb     0x40ecaf
  40ec40:	dec    eax
  40ec41:	scas   al,BYTE PTR es:[edi]
  40ec42:	inc    edx
  40ec43:	dec    ecx
  40ec44:	imul   esp,DWORD PTR [ebx-0x4a4aafbf],0xba456968
  40ec4e:	imul   esi,DWORD PTR [ebx+0x45],0xfc65716d
  40ec55:	and    DWORD PTR [ecx+0x67],0x10
  40ec59:	jns    0x40ec5d
  40ec5b:	add    BYTE PTR [ebp+0x256968b9],dh
  40ec61:	mov    dl,0x65
  40ec63:	je     0x40ec61
  40ec65:	inc    ebx
  40ec66:	arpl   WORD PTR [edi+0x10],sp
  40ec69:	xor    al,0x6c
  40ec6b:	arpl   WORD PTR [edx],dx
  40ec6d:	pop    ebp
  40ec6e:	addr16 jb 0x40ec77
  40ec71:	imul   edi,DWORD PTR es:[edx-0x28],0x78
  40ec76:	add    al,BYTE PTR [eax]
  40ec78:	mov    ch,0x31
  40ec7a:	imul   sp,bp,0x6739
  40ec7f:	je     0x40ec81
	...
  40ec91:	add    BYTE PTR [eax],al
  40ec93:	add    ah,ch
  40ec95:	sub    esp,DWORD PTR [ebx+0x67]
  40ec98:	fmul   DWORD PTR [edi-0x5299254]
  40ec9e:	and    DWORD PTR [esi-0x39],0xffffffde
  40eca2:	out    0x3,eax
  40eca4:	mov    ch,0x8f
  40eca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eca7:	addr16 pushf 
  40eca9:	fistp  WORD PTR [edx-0x4f0b5c9e]
  40ecaf:	outs   dx,BYTE PTR ds:[esi]
  40ecb0:	xchg   esp,eax
  40ecb1:	repnz mov WORD PTR [edi-0x76],ss
  40ecb5:	mov    esi,0xf0987173
  40ecba:	push   esp
  40ecbb:	add    al,0xb5
  40ecbd:	(bad)  
  40ecbe:	xchg   esp,eax
  40ecbf:	loopne 0x40ed20
  40ecc1:	mov    WORD PTR [ecx],fs
  40ecc3:	dec    cl
  40ecc5:	aam    0x6b
  40ecc7:	fst    DWORD PTR [ecx-0x2dfee6e2]
  40eccd:	jbe    0x40ecea
  40eccf:	add    al,0x5c
  40ecd1:	(bad)  
  40ecd2:	cmp    al,BYTE PTR [ecx+ebp*2]
  40ecd5:	pop    DWORD PTR [eax+0x4]
  40ecd8:	inc    esi
  40ecd9:	(bad)  
  40ecda:	sbb    eax,DWORD PTR [ebx+eiz*2]
  40ecdd:	(bad)  
  40ecde:	adc    BYTE PTR [eax+ebx*2],al
  40ece1:	(bad)  
  40ece2:	push   ds
  40ece3:	add    al,0x86
  40ece5:	(bad)  
  40ece6:	fld    DWORD PTR [ebx]
  40ece8:	mov    ch,0x8f
  40ecea:	xor    al,0x4
  40ecec:	icebp  
  40eced:	(bad)  
  40ecee:	xor    BYTE PTR [esi+esi*8],al
  40ecf1:	pop    DWORD PTR [ebx]
  40ecf3:	add    al,0xc
  40ecf5:	nop
  40ecf6:	add    al,0x4
	...
  40ed0c:	and    edx,DWORD PTR [eax-0x704afc25]
  40ed12:	stos   BYTE PTR es:[edi],al
  40ed13:	add    ecx,DWORD PTR [eax+edx*4]
  40ed16:	retf   0x1003
  40ed19:	nop
  40ed1a:	fld    DWORD PTR [ebx]
  40ed1c:	loop   0x40ecad
  40ed1e:	pushf  
  40ed1f:	add    edi,esp
  40ed21:	(bad)  
  40ed22:	xchg   esi,eax
  40ed23:	add    edx,ebx
  40ed25:	pop    DWORD PTR [eax]
  40ed27:	int    0xb6
  40ed29:	rol    DWORD PTR [eax],1
  40ed2b:	mov    ebx,0x9400f0b6
  40ed30:	mov    dh,0xf4
  40ed32:	add    cl,ch
  40ed34:	mov    dh,0x8f
  40ed36:	add    BYTE PTR [edx+0x7f00fab6],ch
  40ed3c:	mov    dh,0xde
  40ed3e:	add    BYTE PTR [esi-0x7bff044a],dl
  40ed44:	mov    dh,0xc2
  40ed46:	add    BYTE PTR [eax-0x7aff064a],al
  40ed4c:	mov    dh,0xfa
  40ed4e:	add    BYTE PTR [esi-0x4f],bl
  40ed51:	into   
  40ed52:	add    BYTE PTR [ebp-0x47],cl
  40ed55:	lock add BYTE PTR [edx-0x4f],bl
  40ed59:	fiadd  WORD PTR [eax]
  40ed5b:	jmp    0xa417d16
  40ed60:	mov    cl,0x9e
  40ed62:	add    bl,bh
  40ed64:	mov    dh,0xa2
  40ed66:	add    bh,bh
  40ed68:	mov    dh,0xa7
  40ed6a:	add    cl,ch
  40ed6c:	mov    dh,0x8f
  40ed6e:	add    BYTE PTR [edx],bh
	...
  40ed84:	mov    cl,0xe8
  40ed86:	add    BYTE PTR [edx],bl
  40ed88:	mov    ecx,0xb10100be
  40ed8d:	lock add BYTE PTR ds:0xfe00f8b9,al
  40ed94:	mov    dh,0x8f
  40ed96:	add    BYTE PTR [edi],ah
  40ed98:	lock (bad) 
  40ed9a:	dec    ebx
  40ed9b:	sub    al,0xb1
  40ed9d:	pop    DWORD PTR [eax]
  40ed9f:	dec    eax
  40eda0:	mov    dh,0x2d
  40eda2:	add    DWORD PTR [edx-0x3aff704a],ecx
  40eda8:	mov    dh,0xf6
  40edaa:	add    dl,bl
  40edac:	mov    dh,0xdf
  40edae:	add    BYTE PTR [ebp+0xeeb6],bh
  40edb4:	jne    0x40ed43
  40edb6:	dec    esi
  40edb7:	add    BYTE PTR [ebp-0x73],ch
  40edba:	imul   eax,DWORD PTR [eax],0x69
  40edbd:	lea    eax,[eax]
  40edbf:	add    cl,bl
  40edc1:	retf   
  40edc2:	inc    edx
  40edc3:	add    BYTE PTR [eax-0x35],cl
  40edc6:	inc    edx
  40edc7:	add    BYTE PTR [esi-0x7affbd37],dh
  40edcd:	retf   0x42
  40edd0:	adc    cl,dl
  40edd2:	inc    edx
  40edd3:	add    bh,dh
  40edd5:	leave  
  40edd6:	inc    edx
  40edd7:	add    BYTE PTR [ecx+ecx*8+0x7b250042],bl
  40edde:	inc    ecx
  40eddf:	add    BYTE PTR [ecx-0xfffbe87],al
  40ede5:	jp     0x40ee28
	...
  40edfb:	add    BYTE PTR [ebp-0x3c],ah
  40edfe:	inc    edx
  40edff:	add    BYTE PTR ds:0x950042cc,bh
  40ee05:	les    eax,FWORD PTR [edx+0x0]
  40ee08:	outs   dx,DWORD PTR ds:[esi]
  40ee09:	add    al,0x3e
  40ee0b:	add    cl,ch
  40ee0d:	add    DWORD PTR [edx+0x0],0x41dd24
  40ee14:	add    al,0xdd
  40ee16:	inc    ecx
  40ee17:	add    BYTE PTR [edi-0x7],ah
  40ee1a:	inc    edx
  40ee1b:	add    bh,ah
  40ee1d:	sti    
  40ee1e:	inc    edx
  40ee1f:	add    BYTE PTR [eax+0x70042fa],ch
  40ee25:	sti    
  40ee26:	inc    edx
  40ee27:	add    BYTE PTR [esi-0x4fffbd10],ch
  40ee2d:	hlt    
  40ee2e:	add    BYTE PTR [eax],al
  40ee30:	mov    ah,0x9d
  40ee32:	add    BYTE PTR [eax],al
  40ee34:	mov    ah,0xb8
  40ee36:	add    BYTE PTR [eax],al
  40ee38:	fs mov eax,0xa3640000
  40ee3e:	add    BYTE PTR [eax],al
  40ee40:	mov    ch,0x4e
  40ee42:	xor    al,0x0
  40ee44:	mov    ch,0x4e
  40ee46:	xor    eax,DWORD PTR [eax]
  40ee48:	mov    ch,0x5a
  40ee4a:	imul   esi,DWORD PTR [esi-0x4b],0x22
  40ee4e:	pop    esi
  40ee4f:	add    BYTE PTR [ebp-0x4aff8bd6],dh
  40ee55:	dec    esi
  40ee56:	je     0x40ee58
  40ee58:	mov    ch,0x14
  40ee5a:	je     0x40ee5c
  40ee5c:	mov    ch,0x74
  40ee5e:	add    al,0x2
	...
  40ee74:	mov    bh,0x75
  40ee76:	add    al,0x2
  40ee78:	mov    bh,0x74
  40ee7a:	add    al,0x2
  40ee7c:	mov    bh,0x5c
  40ee7e:	or     al,0xa
  40ee80:	aad    0x5c
  40ee82:	or     al,0xa
  40ee84:	scas   eax,DWORD PTR es:[edi]
  40ee85:	ins    BYTE PTR es:[edi],dx
  40ee86:	or     al,0xa
  40ee88:	mov    edi,0x9c7264e5
  40ee8d:	(bad)  
  40ee8e:	jo     0x40ee90
  40ee90:	mov    ch,0xd8
  40ee92:	data16 jae 0x40ee1a
  40ee95:	jge    0x40ee9b
  40ee97:	add    BYTE PTR [ebp+0x5c7361b4],dh
  40ee9d:	aad    0x24
  40ee9f:	add    BYTE PTR [ebp-0x4afffd85],dh
  40eea5:	cli    
  40eea6:	outs   dx,BYTE PTR ds:[esi]
  40eea7:	inc    edx
  40eea8:	mov    ch,0xb9
  40eeaa:	ins    DWORD PTR es:[edi],dx
  40eeab:	inc    edx
  40eeac:	mov    ch,0x1a
  40eeae:	jp     0x40eef2
  40eeb0:	mov    ch,0xb7
  40eeb2:	outs   dx,DWORD PTR ds:[esi]
  40eeb3:	inc    edx
  40eeb4:	mov    ch,0xd6
  40eeb6:	outs   dx,BYTE PTR ds:[esi]
  40eeb7:	inc    edx
  40eeb8:	mov    ch,0x6b
  40eeba:	test   eax,0x6f15b53f
  40eebf:	inc    edx
  40eec0:	mov    ch,0xb6
  40eec2:	jb     0x40ef06
  40eec4:	mov    ch,0xcb
  40eec6:	outs   dx,BYTE PTR ds:[esi]
  40eec7:	inc    edx
  40eec8:	mov    ch,0x6b
  40eeca:	test   eax,0x8e8fb53f
  40eecf:	outs   dx,BYTE PTR ds:[esi]
  40eed0:	test   DWORD PTR [edi-0x70088edb],0x3ba
	...
  40eeea:	add    BYTE PTR [eax],al
  40eeec:	fmul   DWORD PTR [edi-0x7022fc46]
  40eef2:	mov    esp,0xc38fe903
  40eef7:	add    ecx,edx
  40eef9:	(bad)  
  40eefa:	mov    esi,0x978fe303
  40eeff:	add    eax,edi
  40ef01:	(bad)  
  40ef02:	nop
  40ef03:	add    ecx,ebx
  40ef05:	(bad)  
  40ef06:	nop
  40ef07:	add    ecx,ecx
  40ef09:	(bad)  
  40ef0a:	mov    WORD PTR [ebx],es
  40ef0c:	call   0x88f:0xb503848f
  40ef13:	jmp    FWORD PTR [edi+0x14]
  40ef16:	mov    ecx,0x68810514
  40ef1b:	mov    ebx,0xdb9f2712
  40ef20:	ins    BYTE PTR es:[edi],dx
  40ef21:	sbb    ebp,DWORD PTR [ecx+0x50]
  40ef24:	jnp    0x40ef8a
  40ef26:	fs adc esp,ebp
  40ef29:	add    BYTE PTR [edx+0x7e86f2b9],0xd7
  40ef30:	add    eax,0x3838a49a
  40ef35:	gs data16 ja 0x40ef3e
  40ef39:	sub    DWORD PTR [ecx+0x52],0xdc1f4fb5
  40ef40:	ins    BYTE PTR es:[edi],dx
  40ef41:	sbb    edi,DWORD PTR [ecx]
  40ef43:	sub    DWORD PTR [edx+0x4c],0x66
  40ef47:	ja     0x40ef2e
  40ef49:	sub    BYTE PTR [ecx+0x52],0xb5
  40ef4d:	dec    edi
  40ef4e:	pop    ds
  40ef4f:	fadd   QWORD PTR [eax]
	...
  40ef61:	add    BYTE PTR [eax],al
  40ef63:	add    BYTE PTR [esp+ebx*1],cl
  40ef66:	popf   
  40ef67:	cmp    BYTE PTR [eax],bh
  40ef69:	fs data16 ja 0x40eef2
  40ef6d:	add    BYTE PTR [eax],0x6b
  40ef70:	out    0x8f,eax
  40ef72:	rcr    BYTE PTR [esi],0x69
  40ef75:	enter  0x90b4,0x27
  40ef79:	call   0x6310:0x40ee5ce5
  40ef80:	inc    esp
  40ef81:	mov    si,0x299e
  40ef85:	mov    edi,0x9a4793f1
  40ef8a:	in     eax,0x3c
  40ef8c:	out    dx,al
  40ef8d:	inc    eax
  40ef8e:	adc    BYTE PTR [ebx+0x24],ah
  40ef91:	mov    si,0x99e
  40ef95:	mov    edi,0x8fb6f3f1
  40ef9a:	add    BYTE PTR [eax-0x5ff2e27],dl
  40efa0:	dec    ecx
  40efa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efa2:	add    BYTE PTR [ebx+0x4c],bl
  40efa5:	rol    BYTE PTR [eax],1
  40efa7:	cmp    al,BYTE PTR [eax-0x5a]
  40efaa:	add    BYTE PTR [ecx+0x794dc684],bl
  40efb0:	xchg   ebp,eax
  40efb1:	cmc    
  40efb2:	push   esp
  40efb3:	stos   BYTE PTR es:[edi],al
  40efb4:	retw   0x4a6d
  40efb8:	mov    gs,esp
  40efba:	je     0x40efa5
  40efbc:	mov    dh,0x8f
  40efbe:	add    BYTE PTR [ecx],bh
  40efc0:	xchg   esi,eax
  40efc2:	inc    ecx
  40efc3:	cmp    eax,0xe963e252
	...
  40efdc:	mov    dh,0x8f
  40efde:	add    BYTE PTR [ecx],bl
  40efe0:	xchg   esi,eax
  40efe2:	push   eax
  40efe3:	inc    esi
  40efe4:	pop    ebp
  40efe5:	repz add BYTE PTR [ecx],bl
  40efe8:	addr16 (bad) 
  40efea:	push   edx
  40efeb:	or     al,0x58
  40efed:	jmp    0x40efef
  40efef:	cmp    DWORD PTR [edi-0x3a],esp
  40eff2:	push   ebp
  40eff3:	sbb    esp,DWORD PTR [eax]
  40eff5:	fsub   QWORD PTR [ebx-0x17]
  40eff8:	mov    dh,0x8f
  40effa:	add    BYTE PTR [eax],al
  40effc:	(bad)  [eax]
  40effe:	inc    eax
  40efff:	add    BYTE PTR [ecx-0x6f],dh
  40f002:	jno    0x40f004
  40f004:	adc    DWORD PTR [ecx-0x6ebbffd0],0x8baa0078
  40f00e:	and    eax,DWORD PTR [eax]
  40f010:	pop    edi
  40f011:	xchg   ecx,eax
  40f012:	add    BYTE PTR [eax],al
  40f014:	ror    DWORD PTR [ebx-0x744eff8f],0x30
  40f01b:	add    BYTE PTR [ebx+ecx*4-0x6eb3ff88],dh
  40f022:	add    BYTE PTR [eax],al
  40f024:	(bad)  
  40f025:	and    eax,DWORD PTR [eax+0x0]
  40f028:	pop    ebp
  40f029:	push   edi
  40f02a:	inc    eax
  40f02b:	add    BYTE PTR [eax+0x1004022],bl
  40f031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f032:	inc    edx
  40f033:	add    BYTE PTR [ecx],ah
  40f035:	cs add BYTE PTR ds:[ecx],dl
  40f039:	cs add BYTE PTR ds:[ecx],dl
  40f03d:	cs add BYTE PTR ds:[eax],al
	...
  40f051:	add    BYTE PTR [eax],al
  40f053:	add    BYTE PTR [ecx-0x5b],al
  40f056:	inc    edx
  40f057:	add    BYTE PTR [edi+0x22],ah
  40f05a:	inc    eax
  40f05b:	add    bh,dl
  40f05d:	and    al,BYTE PTR [eax+0x0]
  40f060:	hlt    
  40f061:	and    eax,0x77150040
  40f066:	inc    ecx
  40f067:	add    BYTE PTR [edx+0x57],cl
  40f06a:	inc    eax
  40f06b:	add    ch,bl
  40f06d:	dec    esp
  40f06e:	inc    eax
  40f06f:	add    BYTE PTR [ebp-0x5c90aa22],ah
  40f075:	mov    ch,0x34
  40f077:	push   eax
  40f078:	mov    gs,edx
  40f07a:	popa   
  40f07b:	gs (bad) 
  40f07d:	fiadd  WORD PTR [eax]
  40f07f:	add    dh,ch
  40f081:	nop
  40f082:	and    eax,DWORD PTR [eax]
  40f084:	lahf   
  40f085:	mov    esp,DWORD PTR [edx]
  40f087:	add    BYTE PTR [ebp-0x4afffd8a],dh
  40f08d:	pop    eax
  40f08e:	add    ah,BYTE PTR ds:0x220269b5
  40f094:	mov    ch,0x56
  40f096:	add    ah,BYTE PTR ds:0x269b5
  40f09c:	mov    ch,0x5b
  40f09e:	jno    0x40f105
  40f0a0:	pop    es
  40f0a1:	push   esp
  40f0a2:	fs jbe 0x40f070
  40f0a5:	dec    edx
  40f0a6:	data16 ins BYTE PTR es:[edi],dx
  40f0a8:	mov    ch,0x39
  40f0aa:	jo     0x40f111
  40f0ac:	aam    0x3a
  40f0ae:	pop    edi
  40f0af:	inc    ebp
  40f0b0:	shl    DWORD PTR [ebx+ebp*2],cl
  40f0b3:	jb     0x40f07f
  40f0b5:	push   esp
  40f0b6:	add    BYTE PTR gs:[bx+si],al
	...
  40f0ca:	add    BYTE PTR [eax],al
  40f0cc:	jecxz  0x40f0f0
  40f0ce:	inc    eax
  40f0cf:	ins    BYTE PTR es:[edi],dx
  40f0d0:	ficomp DWORD PTR [ecx+0x69]
  40f0d3:	add    BYTE PTR [ebp-0x3e8ca0ce],dh
  40f0d9:	or     BYTE PTR [ebp+0x79],ah
  40f0dc:	js     0x40f0ea
  40f0de:	ins    BYTE PTR es:[edi],dx
  40f0df:	imul   esp,DWORD PTR [edi-0x67929c1b],0x89426dfc
  40f0e9:	adc    eax,0x20b56b61
  40f0ee:	pop    esi
  40f0ef:	or     eax,0x6c5f0abf
  40f0f4:	aad    0x98
  40f0f6:	sbb    eax,0x873d773
  40f0fb:	imul   ebx,DWORD PTR [ebx-0x6a],0xc95c785d
  40f102:	jo     0x40f124
  40f104:	xchg   edi,eax
  40f105:	xchg   ebx,eax
  40f106:	outs   dx,DWORD PTR ds:[esi]
  40f107:	and    dl,BYTE PTR [ebp+0x627463cd]
  40f10d:	xchg   esi,eax
  40f10e:	pusha  
  40f10f:	add    BYTE PTR [ebp-0x4a9efb28],dh
  40f115:	(bad)  
  40f116:	sbb    eax,DWORD PTR [esi*4+0x165f278f]
  40f11d:	clc    
  40f11e:	push   es
  40f11f:	and    al,0x1a
  40f121:	jmp    0x6fa:0xacaf0705
  40f128:	scas   eax,DWORD PTR es:[edi]
  40f129:	jmp    0x40f12f
  40f12b:	push   0x242db2d5
	...
  40f144:	xlat   BYTE PTR ds:[ebx]
  40f145:	lods   al,BYTE PTR ds:[esi]
  40f146:	cli    
  40f147:	and    DWORD PTR [eax-0x4afc186b],esi
  40f14d:	(bad)  
  40f14e:	push   cs
  40f14f:	add    al,0xd6
  40f151:	pop    DWORD PTR [edi]
  40f153:	add    al,0x97
  40f155:	pop    DWORD PTR [esp+eax*1]
  40f158:	out    0x8f,al
  40f15a:	or     DWORD PTR [esi*4-0x1dfc5571],eax
  40f161:	pop    esp
  40f163:	add    esp,esi
  40f165:	(bad)  
  40f166:	mov    bh,0x3
  40f168:	fmul   DWORD PTR [edi-0x704afc76]
  40f16e:	mov    dh,0x3
  40f170:	test   BYTE PTR [edi-0x704afc5d],cl
  40f176:	rcr    dl,1
  40f178:	je     0x40f109
  40f17a:	pop    ebx
  40f17b:	out    0x74,eax
  40f17d:	pop    DWORD PTR ds:0x38f74f1
  40f183:	icebp  
  40f184:	je     0x40f115
  40f186:	out    0x3,eax
  40f188:	mov    ch,0x8f
  40f18a:	out    0x3,eax
  40f18c:	mov    ch,0x8f
  40f18e:	out    0x3,eax
  40f190:	mov    ch,0x8f
  40f192:	cmp    al,0x7f
  40f194:	fimul  WORD PTR [esi]
  40f196:	mov    esp,0xe8f58614
  40f19b:	pop    edx
  40f19c:	fidivr DWORD PTR [ebx+eiz*8+0x13]
  40f1a0:	jne    0x40f131
  40f1a2:	add    BYTE PTR [ecx+esi*8-0x22],ch
  40f1a6:	ja     0x40f1a2
	...
  40f1bc:	repz mov ebp,0xbab01351
  40f1c2:	std    
  40f1c3:	hlt    
  40f1c4:	scas   al,BYTE PTR es:[edi]
  40f1c5:	xchg   edx,eax
  40f1c6:	inc    eax
  40f1c7:	jmp    0x1b61409
  40f1cc:	or     dl,BYTE PTR ds:0xf6018544
  40f1d2:	call   DWORD PTR [eax]
  40f1d4:	add    eax,0x87e940d2
  40f1d9:	jnp    0x40f1e7
  40f1db:	fdecstp 
  40f1dd:	pop    DWORD PTR [ebx-0x745702d7]
  40f1e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1e4:	push   0xffffffd2
  40f1e6:	mov    ebp,DWORD PTR [esi+ebx*2+0x66a48bd2]
  40f1ed:	sar    ch,cl
  40f1ef:	mov    esp,0x415c174a
  40f1f4:	inc    esi
  40f1f5:	jnp    0x40f1f7
  40f1f7:	fdecstp 
  40f1f9:	pop    DWORD PTR [ebx-0x28442d7]
  40f1ff:	pushf  
  40f200:	inc    edx
  40f201:	popa   
  40f202:	je     0x40f225
  40f204:	es fcomi st,st(0)
  40f207:	mov    esi,0xf9107b27
  40f20c:	jbe    0x40f19d
  40f20e:	sub    DWORD PTR [ecx],0xffffff9c
  40f211:	xchg   esp,eax
  40f212:	std    
  40f213:	je     0x40f237
  40f215:	popa   
  40f216:	adc    al,0xc9
  40f218:	mov    ds:0x746a00cf,eax
  40f21d:	arpl   si,di
  40f21f:	and    al,BYTE PTR [eax]
	...
  40f231:	add    BYTE PTR [eax],al
  40f233:	add    BYTE PTR [edx],al
  40f235:	fimul  WORD PTR [esi+eiz*4]
  40f238:	mov    esp,0xb6e90093
  40f23d:	sbb    BYTE PTR [edi-0x1b],bh
  40f240:	popa   
  40f241:	les    ecx,FWORD PTR [eax]
  40f243:	add    BYTE PTR [edi-0x29],ah
  40f246:	cld    
  40f247:	jmp    0x40f227
  40f249:	cwde   
  40f24a:	rcr    BYTE PTR [ebx+0x15],0x49
  40f24e:	push   ebp
  40f24f:	mov    eax,DWORD PTR [eax]
  40f251:	mov    ebx,0xdd98b56
  40f256:	push   cs
  40f257:	inc    eax
  40f258:	pushf  
  40f259:	(bad)  
  40f25a:	mov    eax,DWORD PTR [ebp+0x40]
  40f25d:	mov    ebp,0x8bb6006a
  40f262:	push   0x1
  40f264:	xor    ebp,eax
  40f266:	or     bh,bh
  40f268:	sub    bl,BYTE PTR [eax]
  40f26a:	mov    esi,0x155e4675
  40f26f:	adc    BYTE PTR [edi-0x33],bl
  40f272:	add    BYTE PTR [ebx+0x2f73f314],al
  40f278:	out    0xd7,eax
  40f27a:	cld    
  40f27b:	test   DWORD PTR [eax+ebx*8-0x36bc17d8],ebx
  40f282:	add    BYTE PTR [eax],al
  40f284:	out    0x74,eax
  40f286:	test   edi,edi
  40f288:	or     BYTE PTR [eax-0x437fba75],al
  40f28e:	std    
  40f28f:	jne    0x40f221
  40f291:	lds    ebp,FWORD PTR [edx+0x1]
  40f294:	xchg   ebx,eax
  40f295:	out    0x8,eax
  40f297:	inc    DWORD PTR [eax]
	...
  40f2a9:	add    BYTE PTR [eax],al
  40f2ab:	add    dl,ch
  40f2ad:	pop    ss
  40f2ae:	mov    esi,0xc6e21874
  40f2b3:	jmp    0x40f2c9
  40f2b5:	(bad)  
  40f2b6:	call   0xce3b1a
  40f2bb:	xor    ebx,esp
  40f2bd:	mov    ebp,0x88dec95e
  40f2c2:	add    BYTE PTR [ebx],dh
  40f2c4:	int3   
  40f2c5:	dec    edx
  40f2c6:	push   es
  40f2c7:	add    BYTE PTR [esi-0x77],ah
  40f2ca:	pop    eax
  40f2cb:	ret    0x8ce0
  40f2ce:	std    
  40f2cf:	je     0x40f286
  40f2d1:	xchg   edx,eax
  40f2d2:	or     al,ch
  40f2d4:	xchg   esi,eax
  40f2d5:	stos   BYTE PTR es:[edi],al
  40f2d6:	add    al,0x0
  40f2d8:	test   BYTE PTR [ecx+0x79],0x24
  40f2dc:	mov    ecx,0xb5442a3e
  40f2e1:	jbe    0x40f2a8
  40f2e3:	push   esp
  40f2e4:	and    edx,DWORD PTR cs:[edx-0x75]
  40f2e8:	jo     0x40f344
  40f2ea:	push   ebp
  40f2eb:	push   esi
  40f2ec:	or     bh,BYTE PTR [ebp+0x3]
  40f2ef:	pop    ebx
  40f2f0:	(bad)  
  40f2f1:	xor    eax,0x7ab5e784
  40f2f6:	and    cl,BYTE PTR [eax+0x21]
  40f2f9:	push   ebp
  40f2fa:	cmp    dh,BYTE PTR [ebx+ebp*4-0x23]
  40f2fe:	inc    ebp
  40f2ff:	adc    BYTE PTR [eax],dh
  40f301:	add    BYTE PTR ss:[ebp+esi*4+0x72000277],al
  40f309:	jbe    0x40f364
  40f30b:	add    BYTE PTR [ebp+0xf4db76],dh
	...
  40f321:	add    BYTE PTR [eax],al
  40f323:	add    BYTE PTR [ebp-0x738fd8a],dh
  40f329:	rol    BYTE PTR [eax+eax*1],cl
  40f32c:	mov    ch,0xb6
  40f32e:	fisttp DWORD PTR [edi]
  40f330:	jp     0x40f35d
  40f332:	out    dx,al
  40f333:	dec    DWORD PTR [edx+0x76]
  40f336:	inc    edx
  40f337:	jmp    0x40f2f3
  40f339:	test   eax,0x76b5fc45
  40f33e:	add    al,BYTE PTR [eax-0x4601d4c2]
  40f344:	mov    ch,0x71
  40f346:	add    al,BYTE PTR [eax]
  40f348:	(bad)  
  40f349:	mov    ah,0xa9
  40f34b:	push   DWORD PTR [esi-0xbc4fd8a]
  40f351:	loopne 0x40f378
  40f353:	je     0x40f317
  40f355:	repz les esi,FWORD PTR [ebx-0x3a]
  40f359:	xor    eax,DWORD PTR [edx]
  40f35b:	add    DWORD PTR [ebp-0x38881871],esi
  40f361:	mov    ds:0x8fb505e7,al
  40f366:	pop    ebx
  40f367:	xor    DWORD PTR [eax-0x4afc1571],esp
  40f36d:	fimul  DWORD PTR [edx-0x158b48a3]
  40f373:	pop    ebp
  40f374:	mov    cl,0xc4
  40f376:	ret    0x8016
  40f379:	(bad)  
  40f37a:	in     al,0x3
  40f37c:	mov    ch,0xdb
  40f37e:	repnz cs mov ch,0x95
  40f382:	out    0x3,eax
  40f384:	and    DWORD PTR [ecx+0xc5d2],esi
	...
  40f39a:	add    BYTE PTR [eax],al
  40f39c:	sub    DWORD PTR [eax],ecx
  40f39e:	fcmovne st,st(4)
  40f3a0:	imul   ecx
  40f3a2:	out    dx,eax
  40f3a3:	push   eax
  40f3a4:	jmp    0x628f:0xb5450267
  40f3ab:	repz cmp DWORD PTR [esi-0xb],esp
  40f3af:	add    BYTE PTR [esi],ch
  40f3b1:	aad    0xf7
  40f3b3:	xchg   BYTE PTR [edx],dh
  40f3b5:	in     al,0xe1
  40f3b7:	jp     0x40f35b
  40f3b9:	push   0xffffffde
  40f3bb:	pop    ebp
  40f3bc:	mov    eax,0xb15d226a
  40f3c1:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40f3c3:	inc    esp
  40f3c4:	mov    ch,0x8f
  40f3c6:	fs ret 
  40f3c8:	(bad)  
  40f3c9:	xchg   esp,eax
  40f3ca:	push   0xfffffffb
  40f3cc:	inc    ebx
  40f3cd:	imul   ebp,edx,0x34
  40f3d0:	jne    0x40f3dd
  40f3d2:	mov    ch,0xff
  40f3d4:	cmc    
  40f3d5:	push   0x911583eb
  40f3da:	pusha  
  40f3db:	or     DWORD PTR ds:0x5a86e3ce,ebp
  40f3e1:	in     eax,0xf2
  40f3e3:	jl     0x40f45e
  40f3e5:	jg     0x40f44b
  40f3e7:	ret    
  40f3e8:	xchg   al,dl
  40f3ea:	add    BYTE PTR [eax-0x32],ah
  40f3ed:	push   0x3c
  40f3ef:	xor    DWORD PTR [esi],0x87e9fe5f
  40f3f5:	jmp    0x5badd1fb
  40f3fa:	(bad)  
  40f3fb:	pop    esp
  40f3fc:	loope  0x40f474
  40f3fe:	pop    ebp
  40f3ff:	adc    al,BYTE PTR [eax]
	...
  40f411:	add    BYTE PTR [eax],al
  40f413:	add    BYTE PTR [ecx+0x4da9848f],dh
  40f419:	xchg   ebx,eax
  40f41a:	mov    DWORD PTR [edi+0x3489a9ee],esp
  40f420:	test   eax,0xb935fe14
  40f425:	pop    ebp
  40f426:	adc    al,0xf9
  40f428:	(bad)  
  40f429:	iret   
  40f42a:	add    BYTE PTR [eax-0x4e],dh
  40f42d:	or     bh,BYTE PTR [edi]
  40f42f:	ins    BYTE PTR es:[edi],dx
  40f430:	xchg   edx,eax
  40f431:	loop   0x40f43e
  40f433:	bound  esi,QWORD PTR [edx+0x76]
  40f436:	and    al,0xc2
  40f438:	mov    dh,0x8f
  40f43a:	push   ebp
  40f43b:	xchg   ecx,eax
  40f43c:	mov    eax,0xe8e900d2
  40f441:	adc    ch,BYTE PTR [bp+si]
  40f444:	mov    cl,0x8f
  40f446:	xor    DWORD PTR [ecx],0xc25ebd62
  40f44c:	sub    DWORD PTR [eax+0xd],edx
  40f44f:	jmp    0xeb61281
  40f454:	ss data16 (bad) 
  40f457:	mov    ebp,0x57d129c
  40f45c:	mov    ebp,0x37fa748f
  40f461:	fisub  DWORD PTR [ecx+eiz*8]
  40f464:	mov    dh,0xa
  40f466:	add    DWORD PTR [esp+ebp*1-0x33e1aa18],esp
  40f46d:	mov    bl,0x12
  40f46f:	test   eax,0xe136ab6
  40f474:	popf   
  40f475:	mov    bl,0x8
	...
  40f48b:	add    BYTE PTR [ebx+0x2c0824d7],bh
  40f491:	cmp    bl,bh
  40f493:	cmp    ecx,DWORD PTR [edx+edx*4]
  40f496:	add    eax,0xffffff85
  40f499:	mov    DWORD PTR [ebx-0x2886f0a],eax
  40f49f:	adc    eax,0x4080ec
  40f4a4:	push   ebp
  40f4a5:	xchg   esp,eax
  40f4a6:	jmp    0x72a545b5
  40f4ab:	push   es
  40f4ac:	and    edx,DWORD PTR [ebp+edx*2-0x7e6e2400]
  40f4b3:	enter  0x500b,0x6
  40f4b7:	add    BYTE PTR [ecx-0xdac1626],ah
  40f4bd:	fsubr  st,st(5)
  40f4bf:	xor    esi,DWORD PTR [edi-0x56]
  40f4c2:	icebp  
  40f4c3:	je     0x40f49c
  40f4c5:	adc    ah,bh
  40f4c7:	inc    eax
  40f4c9:	aad    0x37
  40f4cb:	pop    ebp
  40f4cc:	test   ch,ah
  40f4ce:	aas    
  40f4cf:	cmp    BYTE PTR [edx+0x170b7487],ch
  40f4d5:	xchg   ebx,eax
  40f4d6:	push   0x2
  40f4d8:	lahf   
  40f4d9:	shr    al,0x77
  40f4dc:	xchg   edi,eax
  40f4dd:	xchg   ebx,eax
  40f4de:	add    BYTE PTR [ebx+0x458bc0c2],cl
  40f4e4:	push   esp
  40f4e5:	rcl    DWORD PTR [ebp-0x1],0x81
  40f4e9:	pop    ecx
  40f4ea:	push   DWORD PTR [esi]
  40f4ec:	sti    
  40f4ed:	ja     0x40f52b
  40f4ef:	adc    al,BYTE PTR [eax]
	...
  40f501:	add    BYTE PTR [eax],al
  40f503:	add    BYTE PTR [ecx+edx*4],bl
  40f506:	add    eax,0x0
  40f509:	mov    BYTE PTR [edi],dh
  40f50b:	jge    0x40f561
  40f50d:	in     eax,0xf
  40f50f:	mov    edx,DWORD PTR [ecx+0x5d]
  40f512:	cmp    esi,ebx
  40f514:	inc    eax
  40f515:	mov    bh,ch
  40f517:	adc    eax,0x401356b5
  40f51c:	mov    ch,0xef
  40f51e:	add    ebp,ebx
  40f520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f521:	loope  0x40f4e9
  40f523:	jmp    0xa9be:0xc48e1a5
  40f52a:	jne    0x40f532
  40f52c:	repnz push di
  40f52f:	add    BYTE PTR [ebp-0x15387e9a],dh
  40f535:	pushf  
  40f536:	inc    edi
  40f537:	pop    ebp
  40f538:	imul   DWORD PTR [esi+0x2]
  40f53b:	push   ebp
  40f53c:	sbb    edx,DWORD PTR cs:[edx+0x51]
  40f540:	imul   esp,ecx,0xfffffff1
  40f543:	test   bl,al
  40f545:	mov    ds:0x25c3833b,al
  40f54a:	jns    0x40f596
  40f54c:	ss dec edi
  40f54e:	add    eax,0x789ec574
  40f553:	or     ch,bh
  40f555:	sub    DWORD PTR [ebx],0x6a
  40f558:	mov    bh,0x9e
  40f55a:	xlat   BYTE PTR ds:[ebx]
  40f55b:	push   es
  40f55c:	out    0x26,al
  40f55e:	inc    ebp
  40f55f:	jmp    0x40f518
  40f561:	sbb    edx,eax
  40f563:	dec    edi
  40f564:	ds mov bl,0xfc
  40f567:	cwde   
	...
  40f57c:	out    0x76,eax
  40f57e:	ja     0x40f585
  40f580:	(bad)  
  40f581:	loopne 0x40f5ad
  40f583:	add    BYTE PTR [ebp-0x398c3b16],dh
  40f589:	mov    ebp,0xbee88d36
  40f58e:	fsubr  QWORD PTR [ecx-0x7bfd9961]
  40f594:	jne    0x40f5b0
  40f596:	pop    es
  40f597:	mov    esi,eax
  40f599:	into   
  40f59a:	xlat   BYTE PTR ds:[ebx]
  40f59b:	sbb    bh,BYTE PTR [eax]
  40f59d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f59e:	js     0x40f5b4
  40f5a0:	cmp    al,BYTE PTR [ebx+0x12]
  40f5a3:	adc    esi,DWORD PTR [ebp-0x71]
  40f5a6:	out    0x7a,eax
  40f5a8:	mov    bl,0x68
  40f5aa:	xacquire xchg BYTE PTR [ebx],ah
  40f5ad:	jecxz  0x40f59c
  40f5af:	les    esi,FWORD PTR [ebx-0x4afc183c]
  40f5b5:	adc    BYTE PTR [eax],dh
  40f5b7:	in     eax,dx
  40f5b8:	push   0xb5082a46
  40f5bd:	adc    bh,dh
  40f5bf:	ja     0x40f597
  40f5c1:	adc    dh,ch
  40f5c3:	in     al,dx
  40f5c4:	data16 jge 0x40f605
  40f5c7:	jns    0x40f571
  40f5c9:	adc    bl,bh
  40f5cb:	ja     0x40f57d
  40f5cd:	or     BYTE PTR [edi-0x186a1325],ch
  40f5d3:	add    ebp,DWORD PTR [edx+0x67]
  40f5d6:	xchg   BYTE PTR [edx-0x4b],al
  40f5d9:	(bad)  
  40f5da:	adc    eax,0xe7ce0adc
  40f5df:	add    eax,DWORD PTR [eax]
	...
  40f5f1:	add    BYTE PTR [eax],al
  40f5f3:	add    BYTE PTR [esi+0x39c10f4f],al
  40f5f9:	push   eax
  40f5fa:	sbb    al,0x6
  40f5fc:	jb     0x40f58e
  40f5fe:	ss add al,0xb5
  40f601:	(bad)
  40f605:	dec    edi
  40f606:	xor    eax,0x94119e79
  40f60b:	sti    
  40f60c:	mov    ah,0x8f
  40f60e:	out    0x54,eax
  40f610:	cs (bad) 
  40f613:	jle    0x40f646
  40f615:	pop    eax
  40f616:	ins    DWORD PTR es:[edi],dx
  40f617:	in     al,dx
  40f618:	jae    0x40f5da
  40f61a:	jb     0x40f662
  40f61c:	mov    ebp,0xb5021867
  40f621:	(bad)  
  40f622:	mov    dh,0x87
  40f624:	sbb    ah,ah
  40f626:	repz in al,dx
  40f628:	leave  
  40f629:	xor    DWORD PTR [esi+eax*4+0x42],0x5d
  40f62e:	aas    
  40f62f:	in     al,dx
  40f630:	inc    ebx
  40f631:	in     eax,0x0
  40f633:	in     eax,0xe6
  40f635:	cmp    ch,BYTE PTR [si]
  40f638:	and    DWORD PTR [edx-0x38],ebx
  40f63b:	sub    ch,BYTE PTR [ebp-0x99beb2d]
  40f641:	fiadd  WORD PTR [esi]
  40f643:	cs mov dh,0xc2
  40f646:	add    cl,ch
  40f648:	mov    dh,0xe
  40f64a:	leave  
  40f64b:	push   es
  40f64c:	dec    edi
  40f64d:	dec    esi
  40f64e:	mov    ah,BYTE PTR [ebp-0x9a96c26]
  40f654:	xor    DWORD PTR [ebx+0x6210],0x0
	...
  40f66b:	add    BYTE PTR [edx-0x4d],ch
  40f66e:	sbb    dh,ah
  40f670:	gs mov bl,0x10
  40f673:	sar    DWORD PTR [ecx+0x59],1
  40f676:	(bad)  
  40f677:	(bad)  
  40f678:	outs   dx,DWORD PTR ds:[esi]
  40f679:	dec    esi
  40f67a:	mov    ah,BYTE PTR ds:0xc6559395
  40f680:	inc    ebp
  40f681:	mov    bl,0x14
  40f683:	jb     0x40f6d2
  40f685:	mov    bl,0x14
  40f687:	mov    dh,0x45
  40f689:	mov    bl,0x10
  40f68b:	shl    DWORD PTR [edx],0x5a
  40f68e:	(bad)  
  40f68f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f690:	dec    BYTE PTR [esi-0x76]
  40f693:	and    eax,0x625687d5
  40f698:	and    eax,0xf78108b4
  40f69d:	pop    edx
  40f69e:	inc    BYTE PTR [esi+0x258a4eff]
  40f6a4:	aad    0x8b
  40f6a6:	mov    DWORD PTR ds:0x6e5593d5,esp
  40f6ac:	in     eax,0xb3
  40f6ae:	or     al,0x72
  40f6b0:	fnsave [ebx+0x5c785118]
  40f6b6:	(bad)  
  40f6b7:	push   esi
  40f6b8:	out    dx,al
  40f6b9:	dec    esi
  40f6ba:	push   esp
  40f6bb:	bound  ebp,QWORD PTR [ebp+0xf]
  40f6be:	in     eax,dx
  40f6bf:	add    BYTE PTR [esp+edx*4+0x0],al
  40f6c3:	add    BYTE PTR [ebx],ch
  40f6c5:	fnstcw WORD PTR [eax+edx*1-0x2f]
  40f6c9:	adc    dh,dh
  40f6cb:	std    
  40f6cc:	jecxz  0x40f734
  40f6ce:	dec    esi
  40f6cf:	mov    eax,DWORD PTR [eax]
	...
  40f6e1:	add    BYTE PTR [eax],al
  40f6e3:	add    BYTE PTR [ecx+0x56],bl
  40f6e6:	out    0x91,al
  40f6e8:	or     eax,0x885f008e
  40f6ed:	push   ebx
  40f6ee:	jb     0x40f704
  40f6f0:	jno    0x40f702
  40f6f2:	idiv   ch
  40f6f4:	mov    bl,0x66
  40f6f6:	dec    esi
  40f6f7:	call   0x419ed3
  40f6fc:	mov    BYTE PTR [ebx+0x72],dl
  40f6ff:	add    al,0x2f
  40f701:	dec    esi
  40f702:	leave  
  40f703:	ret    
  40f704:	pop    edi
  40f705:	push   ss
  40f706:	dec    ecx
  40f708:	movsx  ecx,WORD PTR [ecx+0xe424dec]
  40f70f:	add    bl,ah
  40f711:	lea    edx,[ecx+0x56]
  40f714:	stos   DWORD PTR es:[edi],eax
  40f715:	mov    ecx,0x6b898d01
  40f71a:	pop    edi
  40f71b:	push   0x6d
  40f71d:	mov    ecx,0x7f74587a
  40f722:	sbb    al,0x0
  40f724:	pushf  
  40f725:	out    dx,eax
  40f726:	xchg   DWORD PTR [esi],eax
  40f728:	cmovg  eax,DWORD PTR [eax]
  40f72b:	dec    edi
  40f72c:	mov    ecx,0xbac03336
  40f731:	fiadd  DWORD PTR [esi+edi*8+0x7]
  40f735:	rcl    BYTE PTR [eax],1
  40f737:	xor    edx,DWORD PTR [edi+0x12]
  40f73a:	jbe    0x40f740
  40f73c:	(bad)  
  40f73d:	loopne 0x40f742
  40f73f:	mov    ebp,DWORD PTR [ebp+edx*2-0x15]
  40f743:	add    cl,bh
  40f745:	pop    ebp
  40f746:	lea    eax,[ebp+0x0]
	...
  40f75c:	cld    
  40f75d:	addr16 (bad) 
  40f75f:	push   DWORD PTR [ebp-0x517525ea]
  40f765:	data16 add dl,BYTE PTR [eax+0x38]
  40f769:	sub    al,0xea
  40f76b:	dec    edi
  40f76c:	xor    al,0xb1
  40f76e:	pop    ds
  40f76f:	add    al,0xb5
  40f771:	push   ax
  40f773:	dec    eax
  40f775:	ds pop ss
  40f777:	inc    eax
  40f778:	mov    ch,0xeb
  40f77a:	shl    DWORD PTR [ebx-0x6e],0xeb
  40f77e:	sub    bh,0x18
  40f781:	sub    dl,0x4f
  40f784:	adc    ah,BYTE PTR [edx+edi*4+0x12]
  40f788:	jne    0x40f7f0
  40f78a:	jg     0x40f753
  40f78c:	xor    ah,dh
  40f78e:	icebp  
  40f78f:	cld    
  40f790:	cli    
  40f791:	popa   
  40f792:	jp     0x40f7e0
  40f794:	lds    ebx,FWORD PTR ds:0xdd8673ba
  40f79a:	gs or  al,0x2e
  40f79d:	(bad)  
  40f79e:	cld    
  40f79f:	xor    dl,0x40
  40f7a2:	test   ch,al
  40f7a4:	mov    bh,0x4e
  40f7a6:	mov    edx,esi
  40f7a8:	mov    ch,0x66
  40f7aa:	sub    eax,0x555841c3
  40f7af:	push   ebx
  40f7b0:	bound  edi,QWORD PTR [eax+0x54]
  40f7b3:	jmp    FWORD PTR [eax]
  40f7b5:	aaa    
  40f7b6:	push   ebp
  40f7b7:	push   ebx
  40f7b8:	stos   BYTE PTR es:[edi],al
  40f7b9:	pop    ebx
  40f7ba:	jle    0x40f7cc
  40f7bc:	cmc    
  40f7bd:	sub    ax,0xc3
	...
  40f7d1:	add    BYTE PTR [eax],al
  40f7d3:	add    BYTE PTR [ebx],bl
  40f7d5:	dec    ebp
  40f7d6:	sub    eax,0x773913fb
  40f7db:	or     eax,ebp
  40f7dd:	dec    esi
  40f7de:	dec    ebx
  40f7df:	dec    DWORD PTR [ecx]
  40f7e1:	jno    0x40f810
  40f7e3:	xbegin 0xdf597225
  40f7e9:	fs pop edx
  40f7eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7ec:	sti    
  40f7ed:	(bad)  
  40f7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ef:	add    esp,DWORD PTR [edx-0x1e]
  40f7f2:	out    dx,eax
  40f7f3:	call   0x443ec3b9
  40f7f8:	mov    ch,0x9c
  40f7fa:	daa    
  40f7fb:	test   DWORD PTR [esi-0x75],esi
  40f7fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ff:	fdiv   QWORD PTR [esp+ebx*4-0x4b24b6d9]
  40f806:	and    ch,al
  40f808:	out    0x4f,eax
  40f80a:	test   al,0xc4
  40f80c:	out    0x4f,eax
  40f80e:	sub    ecx,DWORD PTR [edi+0x2e]
  40f811:	imul   ebp,DWORD PTR [ebx-0x28],0xffffffde
  40f815:	sar    DWORD PTR [esi-0x49846e84],0xe8
  40f81c:	xor    DWORD PTR [edi-0x6f],0xfe8f8f03
  40f823:	outs   dx,BYTE PTR ds:[esi]
  40f824:	lods   eax,DWORD PTR ds:[esi]
  40f825:	addr16 mov eax,0x6357f3e9
  40f82b:	hlt    
  40f82c:	aaa    
  40f82d:	push   ebx
  40f82e:	cld    
  40f82f:	jle    0x40f819
  40f831:	loop   0x40f881
  40f833:	test   eax,ebx
  40f835:	push   edi
  40f836:	pop    esp
  40f837:	pop    esi
	...
  40f84c:	ds xchg ecx,eax
  40f84e:	pop    esp
  40f84f:	ss icebp 
  40f851:	mov    ebp,0x81c233c6
  40f856:	fist   WORD PTR ds:0xc36c8f75
  40f85c:	sub    DWORD PTR [ebp+0x67cd3e62],eax
  40f862:	mov    ebx,0x6b57a3e6
  40f867:	mov    ebx,0x77236b9b
  40f86c:	stc    
  40f86d:	push   edi
  40f86e:	cmp    BYTE PTR [edi-0xf],dh
  40f871:	aaa    
  40f872:	sbb    cl,ch
  40f874:	test   eax,0xb543da5f
  40f879:	or     al,0x1
  40f87b:	test   eax,0xf4fd7fe2
  40f880:	mov    BYTE PTR [esp+eax*2],0x61
  40f884:	dec    ebp
  40f885:	fmul   QWORD PTR [ecx+edi*4]
  40f888:	dec    ebp
  40f889:	jl     0x40f8a7
  40f88b:	cli    
  40f88c:	test   BYTE PTR [edi+0xa0aa489],0x4c
  40f893:	fnstsw WORD PTR [ecx]
  40f895:	aaa    
  40f896:	es (bad) 
  40f898:	mov    edi,0x32b6818f
  40f89d:	nop
  40f89e:	jae    0x40f884
  40f8a0:	test   eax,0xb81208d5
  40f8a5:	mov    ds:0x7b8d69fd,al
  40f8aa:	call   FWORD PTR [ebx-0x167f7bf2]
	...
  40f8c4:	mov    dh,0x8f
  40f8c6:	data16 jo 0x40f880
  40f8c9:	or     al,bh
  40f8cb:	sahf   
  40f8cc:	ins    BYTE PTR es:[edi],dx
  40f8cd:	dec    eax
  40f8ce:	ret    0x719c
  40f8d1:	push   0xffffff80
  40f8d3:	std    
  40f8d4:	out    dx,eax
  40f8d5:	nop
  40f8d6:	add    cl,ch
  40f8d8:	xchg   DWORD PTR [ebp-0x7e22eb77],edi
  40f8de:	inc    eax
  40f8df:	jmp    0x81aa3733
  40f8e4:	or     edi,0x0
  40f8e7:	sbb    bl,dl
  40f8e9:	cmp    al,0x84
  40f8eb:	test   eax,0x2e897d44
  40f8f0:	mov    cl,0x8b
  40f8f2:	push   ds
  40f8f3:	jmp    0x40f8ab
  40f8f5:	(bad)  
  40f8f6:	push   eax
  40f8f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8f8:	and    al,0x88
  40f8fa:	std    
  40f8fb:	hlt    
  40f8fc:	add    BYTE PTR [eax-0x70b916c0],0xe9
  40f903:	sub    eax,0x4f23e9
  40f908:	int3   
  40f909:	mov    edx,DWORD PTR [ecx-0x1]
  40f90c:	and    dl,BYTE PTR [eax]
  40f90e:	mov    esi,0x46d95475
  40f913:	or     bh,bl
  40f915:	dec    ebx
  40f916:	adc    al,0xeb
  40f918:	cli    
  40f919:	mov    ecx,0x9d306802
  40f91e:	inc    eax
  40f91f:	add    BYTE PTR [edi],cl
  40f921:	ins    DWORD PTR es:[edi],dx
  40f922:	adc    eax,0xd24fc0
  40f927:	test   DWORD PTR [eax],eax
	...
  40f939:	add    BYTE PTR [eax],al
  40f93b:	add    BYTE PTR [eax+eiz*8-0x74af97cc],cl
  40f942:	add    BYTE PTR [eax],al
  40f944:	lahf   
  40f945:	push   edx
  40f946:	add    BYTE PTR [ebx+0x4c],dl
  40f949:	xlat   BYTE PTR ds:[ebx]
  40f94a:	mov    ah,0xf8
  40f94c:	fldcw  WORD PTR [esi-0x1]
  40f94f:	and    esp,0x6e
  40f952:	out    0x43,al
  40f954:	call   DWORD PTR [ecx-0x12237b00]
  40f95a:	sbb    BYTE PTR [ebx+0x4789bbd2],cl
  40f960:	add    al,0x8f
  40f962:	es add al,0xdc
  40f965:	xchg   ecx,eax
  40f966:	push   eax
  40f967:	jmp    DWORD PTR [ecx+0x5a]
  40f96a:	out    0xf3,al
  40f96c:	loope  0x40f8ff
  40f96e:	add    BYTE PTR [ebp+0x32a2df0c],al
  40f974:	sbb    al,0xcc
  40f976:	pop    ecx
  40f977:	leave  
  40f978:	push   ds
  40f979:	push   esi
  40f97a:	(bad)  
  40f97b:	push   edx
  40f97c:	mov    edi,0xd05e3948
  40f981:	pop    esp
  40f982:	test   DWORD PTR [ebp+0x6800919c],esp
  40f988:	sub    al,0x9b
  40f98a:	inc    eax
  40f98b:	add    BYTE PTR [ebx-0x80],bl
  40f98e:	add    BYTE PTR [ebx],dl
  40f990:	int3   
  40f991:	mov    eax,DWORD PTR [edi-0x3cbe4afa]
  40f997:	push   cs
  40f998:	xor    edi,edx
  40f99a:	add    DWORD PTR [eax],eax
  40f99c:	mov    ch,0x7e
  40f99e:	dec    esp
  40f99f:	or     DWORD PTR [eax],eax
	...
  40f9b1:	add    BYTE PTR [eax],al
  40f9b3:	add    BYTE PTR [ebp+0x72085866],dh
  40f9b9:	adc    al,0x1a
  40f9bb:	(bad)  
  40f9bc:	mul    BYTE PTR [esi-0x19]
  40f9bf:	adc    al,0xd1
  40f9c1:	pop    eax
  40f9c2:	inc    edx
  40f9c3:	add    BYTE PTR [ebp*1+0x33763afa],ch
  40f9ca:	push   esi
  40f9cb:	push   edi
  40f9cc:	ds test al,dh
  40f9cf:	adc    ebp,esi
  40f9d1:	pop    dx
  40f9d3:	enter  0x26eb,0x2
  40f9d7:	(bad)  
  40f9d8:	jmp    0x40f977
  40f9da:	into   
  40f9db:	mov    bh,BYTE PTR [ebx+0x6e]
  40f9de:	pop    edx
  40f9df:	aam    0x73
  40f9e1:	add    cl,BYTE PTR es:[ecx+0x35e76a74]
  40f9e8:	adc    dl,BYTE PTR [esi+0xebd4d7a]
  40f9ee:	loop   0x40fa3d
  40f9f0:	jne    0x40fa58
  40f9f2:	jge    0x40fa34
  40f9f4:	lods   eax,DWORD PTR ds:[esi]
  40f9f5:	push   ebp
  40f9f6:	sub    eax,0x33f20aff
  40f9fb:	or     BYTE PTR [ebp+0x56],bl
  40f9fe:	xor    eax,0x41dfb540
  40fa03:	or     al,0xda
  40fa05:	jl     0x40f9ea
  40fa07:	(bad)  
  40fa08:	lods   eax,DWORD PTR ds:[esi]
  40fa0a:	cld    
  40fa0b:	mov    BYTE PTR [esi+edx*2+0x79],dh
  40fa0f:	inc    ebp
  40fa10:	lods   eax,DWORD PTR ds:[esi]
  40fa11:	lods   eax,DWORD PTR ds:[esi]
  40fa12:	sub    DWORD PTR [eax-0x4f],ebx
  40fa15:	call   0x0:0x390b
	...
  40fa2c:	or     eax,0xec126e6f
  40fa31:	jle    0x40fa2b
  40fa33:	jae    0x40f9e5
  40fa35:	(bad)  
  40fa36:	loopne 0x40fa83
  40fa38:	(bad)
  40fa3b:	xor    BYTE PTR [ebp-0x31],dh
  40fa3e:	pusha  
  40fa3f:	ds mov cl,0xb8
  40fa42:	stos   BYTE PTR es:[edi],al
  40fa43:	push   esp
  40fa44:	lea    esi,[ebp+eax*8+0x3]
  40fa48:	mov    ch,0x6
  40fa4a:	push   ds
  40fa4b:	cld    
  40fa4c:	jae    0x40f9eb
  40fa4e:	jbe    0x40fa5f
  40fa50:	mov    cl,0x80
  40fa52:	daa    
  40fa53:	add    al,0x2c
  40fa55:	jne    0x40fa70
  40fa57:	(bad)  
  40fa58:	call   DWORD PTR [eax+0x73]
  40fa5b:	ds mov ebp,0xb11decbc
  40fa61:	(bad)  
  40fa62:	out    0x53,eax
  40fa64:	add    cl,BYTE PTR [ebx-0x434afc18]
  40fa6a:	cvtps2pi mm0,QWORD PTR ds:[ecx+0x4f3003a7]
  40fa72:	mov    ch,0xfc
  40fa74:	in     al,0x4f
  40fa76:	adc    esp,ebp
  40fa78:	sbb    dl,BYTE PTR [eax+ebp*8+0x78]
  40fa7c:	add    BYTE PTR [edi-0x782eaf9e],0xb6
  40fa83:	xor    ch,0x74
  40fa86:	jmp    0x7da8af8e
  40fa8b:	repnz repnz push ebx
  40fa8e:	ins    DWORD PTR es:[edi],dx
  40fa8f:	les    eax,FWORD PTR [eax]
	...
  40faa1:	add    BYTE PTR [eax],al
  40faa3:	add    BYTE PTR [ecx+0x71],ah
  40faa6:	arpl   WORD PTR [esi],si
  40faa8:	lods   eax,DWORD PTR ds:[esi]
  40faa9:	pop    ss
  40faaa:	out    0xe4,eax
  40faac:	fcmovnbe st,st(3)
  40faae:	jo     0x40fa32
  40fab0:	mov    ds:0x3e03e78d,al
  40fab5:	(bad)
  40fab8:	xor    eax,0xb503ed9b
  40fabd:	or     BYTE PTR [esi],ah
  40fabf:	cld    
  40fac0:	pop    es
  40fac1:	lahf   
  40fac2:	add    BYTE PTR [edx-0x18c704d1],dl
  40fac8:	mov    dh,0x8f
  40faca:	mov    DWORD PTR [edi],ebp
  40facc:	cdq    
  40facd:	or     BYTE PTR [ecx-0x1ac6f23],bl
  40fad3:	(bad)  
  40fad4:	enter  0x8787,0x71
  40fad8:	test   BYTE PTR [ecx-0x33021700],0x8
  40fadf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fae0:	ss iret 
  40fae2:	push   es
  40fae3:	jmp    0xe9418b9e
  40fae8:	mov    dh,0x6
  40faea:	inc    edi
  40faeb:	icebp  
  40faec:	(bad)  
  40faee:	dec    eax
  40faef:	out    0xb6,eax
  40faf1:	(bad)
  40faf5:	sahf   
  40faf6:	mov    edi,0xef510abf
  40fafc:	mov    dh,0x8f
  40fafe:	mov    DWORD PTR [edi-0x6466f4d2],esp
  40fb04:	sub    BYTE PTR [ebx-0x2],dl
  40fb07:	bound  eax,QWORD PTR [eax]
	...
  40fb19:	add    BYTE PTR [eax],al
  40fb1b:	add    al,ah
  40fb1d:	xchg   DWORD PTR [eax+0x53],ebp
  40fb20:	loopne 0x40faf1
  40fb22:	add    ah,ah
  40fb24:	mov    al,BYTE PTR fs:[eax]
  40fb27:	jmp    0x5554d92
  40fb2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb2d:	iret   
  40fb2e:	add    BYTE PTR [edx-0x48],dh
  40fb31:	xchg   DWORD PTR [edx-0x16],ebp
  40fb34:	mov    fs,WORD PTR [edi]
  40fb36:	dec    edi
  40fb37:	test   eax,0xe1528cb6
  40fb3c:	mov    dh,0x8f
  40fb3e:	push   eax
  40fb3f:	out    0xdc,al
  40fb41:	mov    dl,BYTE PTR [ecx]
  40fb43:	sub    DWORD PTR [ecx-0x731eb8fa],edi
  40fb49:	add    al,0x89
  40fb4b:	sbb    DWORD PTR [edi-0x62ffff71],ebp
  40fb51:	jecxz  0x40faee
  40fb53:	xchg   esp,eax
  40fb54:	fmul   QWORD PTR [ebx-0x33f79c98]
  40fb5a:	add    BYTE PTR [eax-0x29],ch
  40fb5d:	xlat   BYTE PTR ds:[ebx]
  40fb5e:	cmp    eax,0x9472c400
  40fb63:	inc    eax
  40fb64:	pushf  
  40fb65:	out    0x21,al
  40fb67:	xchg   esp,eax
  40fb68:	fmul   QWORD PTR [ebx-0x33f7f498]
  40fb6e:	add    BYTE PTR [eax+0x48],ch
  40fb71:	fidivr DWORD PTR ds:0x8fa3c400
  40fb77:	inc    eax
  40fb78:	pop    esp
  40fb79:	out    0x1e,al
  40fb7b:	xchg   ecx,eax
  40fb7c:	mov    WORD PTR [ebx+0x4e8b],cs
	...
  40fb92:	add    BYTE PTR [eax],al
  40fb94:	pusha  
  40fb95:	out    0x76,al
  40fb97:	xchg   ebp,eax
  40fb98:	sbb    al,0x8e
  40fb9a:	dec    edi
  40fb9b:	dec    DWORD PTR [edx+ecx*4]
  40fb9e:	mov    DWORD PTR [esi+0x54],ecx
  40fba1:	add    eax,DWORD PTR [ecx]
  40fba3:	mov    ecx,DWORD PTR [edx]
  40fba5:	xchg   BYTE PTR [ecx-0x3886d73c],al
  40fbab:	cmp    DWORD PTR [ecx+edx*4],eax
  40fbae:	or     eax,0xc2cecc95
  40fbb3:	add    al,0xc
  40fbb5:	add    DWORD PTR [esp+eax*1+0x44],eax
  40fbb9:	mov    edx,0x5a294801
  40fbbe:	mov    eax,DWORD PTR [esi+0x14]
  40fbc1:	or     DWORD PTR [esi],esi
  40fbc3:	add    BYTE PTR [eax-0x7e],bh
  40fbc6:	std    
  40fbc7:	xor    bl,dh
  40fbc9:	popf   
  40fbca:	adc    BYTE PTR [ebx+0x2081861a],cl
  40fbd0:	int3   
  40fbd1:	xchg   edx,eax
  40fbd2:	rcl    DWORD PTR [ebp+0x67],0x62
  40fbd6:	sub    esp,0xffffffe0
  40fbd9:	cwde   
  40fbda:	push   ebp
  40fbdb:	push   DWORD PTR [ebp-0x5700ef4d]
  40fbe1:	inc    esp
  40fbe2:	hlt    
  40fbe3:	aas    
  40fbe4:	mov    ch,0xdd
  40fbe6:	fnstenv [edx]
  40fbe8:	mov    fs,esp
  40fbea:	dec    edx
  40fbeb:	(bad)  
  40fbec:	cmp    al,0x7c
  40fbee:	fmul   DWORD PTR [eax-0x1dedd00]
  40fbf4:	mov    ch,0x66
  40fbf6:	add    cl,BYTE PTR [edi]
	...
  40fc0c:	cmp    dl,dh
  40fc0e:	add    DWORD PTR [eax],eax
  40fc10:	mov    ch,0xed
  40fc12:	dec    edi
  40fc13:	or     BYTE PTR [esi],ch
  40fc15:	pushf  
  40fc16:	or     al,0x68
  40fc18:	mov    cl,0x67
  40fc1a:	add    al,BYTE PTR [eax]
  40fc1c:	ss sub al,bh
  40fc1f:	out    0xaf,eax
  40fc21:	(bad)  
  40fc22:	add    DWORD PTR [eax],eax
  40fc24:	cmp    BYTE PTR [edi],ah
  40fc26:	pop    ecx
  40fc27:	jl     0x40fc2b
  40fc29:	jmp    0x4fd6:0x2c400c58
  40fc30:	pop    ebp
  40fc31:	lods   al,BYTE PTR ds:[esi]
  40fc32:	mov    es,WORD PTR [eax]
  40fc34:	mov    ch,0xea
  40fc36:	shl    DWORD PTR [ebx-0x32],0xe7
  40fc3a:	pusha  
  40fc3b:	cld    
  40fc3c:	mov    ch,0x67
  40fc3e:	add    al,BYTE PTR [eax]
  40fc40:	test   eax,0x22573733
  40fc45:	sbb    al,0xe
  40fc47:	push   ebx
  40fc48:	or     eax,0xb500cb55
  40fc4d:	fstp   st(1)
  40fc4f:	mov    dh,BYTE PTR [ebx+0x6e]
  40fc52:	mov    dl,BYTE PTR [edi-0x57]
  40fc55:	lea    ecx,[ebx]
  40fc57:	mov    esi,DWORD PTR [ebx+0x5e]
  40fc5a:	(bad)  
  40fc5b:	jl     0x40fc46
  40fc5d:	test   al,0x41
  40fc5f:	adc    al,0xb4
  40fc61:	sbb    eax,0xed8d73df
  40fc66:	inc    edi
  40fc67:	or     BYTE PTR [edi-0x71],cl
  40fc6a:	call   0x283b48da
  40fc6f:	add    al,0x0
	...
  40fc81:	add    BYTE PTR [eax],al
  40fc83:	add    BYTE PTR [ebp-0x27],bl
  40fc86:	jl     0x40fccc
  40fc88:	mov    ch,0xe7
  40fc8a:	pop    ecx
  40fc8b:	ja     0x40fd07
  40fc8d:	(bad)  
  40fc8e:	sbb    bh,BYTE PTR [ecx]
  40fc90:	sbb    eax,0xb5442e24
  40fc95:	push   eax
  40fc96:	clc    
  40fc97:	loopne 0x40fc8b
  40fc99:	xchg   DWORD PTR [edx-0x38],ebp
  40fc9c:	mov    edx,0x2811a80a
  40fca1:	dec    esp
  40fca2:	jecxz  0x40fd02
  40fca4:	sbb    ebx,0xac8d38ed
  40fcaa:	retf   
  40fcab:	add    esi,DWORD PTR [ebp+0x5ad7fd50]
  40fcb1:	je     0x40fc6e
  40fcb3:	add    esi,DWORD PTR [ebp-0x531254fb]
  40fcb9:	push   eax
  40fcba:	cmc    
  40fcbb:	xlat   BYTE PTR ds:[ebx]
  40fcbc:	push   edx
  40fcbd:	and    BYTE PTR [ebx],0x4
  40fcc0:	mov    ch,0x9d
  40fcc2:	daa    
  40fcc3:	inc    ecx
  40fcc4:	out    dx,al
  40fcc5:	inc    esi
  40fcc6:	sub    cl,BYTE PTR [esi*4+0x2ff062ba]
  40fccd:	retf   0x82f3
  40fcd0:	push   ds
  40fcd1:	xchg   ecx,ebp
  40fcd3:	add    esi,DWORD PTR [ebp-0x313b9548]
  40fcd9:	mov    edi,0x2ad572e
  40fcde:	ins    DWORD PTR es:[edi],dx
  40fcdf:	fcom   QWORD PTR [ecx]
  40fce1:	push   eax
  40fce2:	pop    ds
  40fce3:	xor    al,0x3e
  40fce5:	push   esi
  40fce6:	add    BYTE PTR [ebx],cl
	...
  40fcfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcfd:	(bad)  
  40fcfe:	out    0x86,eax
  40fd00:	cmp    bl,bl
  40fd02:	retf   0x7b8c
  40fd05:	adc    DWORD PTR [ebp+0x8b638c],0x64
  40fd0c:	sub    eax,0xd5ecf8cb
  40fd11:	push   eax
  40fd12:	push   ecx
  40fd13:	je     0x40fd50
  40fd15:	pop    eax
  40fd16:	cld    
  40fd17:	(bad)  
  40fd19:	mov    edi,0x50d4dae8
  40fd1e:	(bad)  
  40fd1f:	das    
  40fd20:	sub    eax,0x95ea7510
  40fd25:	(bad)  
  40fd26:	or     dl,bh
  40fd28:	jbe    0x40fd18
  40fd2a:	(bad)  
  40fd2b:	stos   DWORD PTR es:[edi],eax
  40fd2c:	scas   al,BYTE PTR es:[edi]
  40fd2d:	(bad)  
  40fd2e:	xor    DWORD PTR [ecx-0x16f2ae0a],ebp
  40fd34:	retf   
  40fd35:	sbb    ch,ch
  40fd37:	push   0xffffff9a
  40fd39:	adc    DWORD PTR [ecx+0x3f],0xffffffa8
  40fd3d:	push   0x6b
  40fd3f:	(bad)  [ebx]
  40fd41:	aam    0xdc
  40fd43:	sbb    ch,BYTE PTR [ecx+0x3f995c18]
  40fd49:	in     al,dx
  40fd4a:	aam    0x60
  40fd4c:	mov    ds:0xa6d4fe67,eax
  40fd51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd52:	inc    eax
  40fd53:	jmp    0x6c4e5091
  40fd58:	jecxz  0x40fdb9
  40fd5a:	mov    BYTE PTR [esi+ecx*2+0x4dc137],dh
	...
  40fd71:	add    BYTE PTR [eax],al
  40fd73:	add    BYTE PTR [ebp+0x4e],dl
  40fd76:	test   DWORD PTR [ecx],ebp
  40fd78:	lds    edx,FWORD PTR [ebx]
  40fd7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd7b:	jmp    0xbd3e8d36
  40fd80:	scas   al,BYTE PTR es:[edi]
  40fd81:	aaa    
  40fd82:	fs sub al,0x15
  40fd85:	dec    esi
  40fd86:	test   DWORD PTR [ecx],ebp
  40fd88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd89:	adc    edx,DWORD PTR [ecx+ebp*8-0x6176704a]
  40fd90:	mov    edx,0xbc39441c
  40fd95:	push   esi
  40fd96:	inc    esp
  40fd97:	add    al,cl
  40fd99:	sahf   
  40fd9a:	dec    ebp
  40fd9b:	inc    eax
  40fd9c:	fcomp  QWORD PTR [ecx]
  40fd9e:	inc    ebp
  40fd9f:	lock push ebp
  40fda1:	(bad)  
  40fda2:	hlt    
  40fda3:	inc    DWORD PTR [ecx]
  40fda5:	outs   dx,DWORD PTR ds:[esi]
  40fda6:	adc    BYTE PTR [eax-0x24],al
  40fda9:	sbb    eax,DWORD PTR [ebp-0x8]
  40fdac:	xchg   edi,eax
  40fdad:	push   edx
  40fdae:	je     0x40fdbc
  40fdb0:	jb     0x40fdc4
  40fdb2:	jp     0x40fdfa
  40fdb4:	jmp    0x451c:0xdc0474cf
  40fdbb:	clc    
  40fdbc:	imul   esp,esi,0x4
  40fdbf:	(bad)  
  40fdc0:	sar    DWORD PTR [edi],1
  40fdc2:	mov    ecx,edi
  40fdc4:	adc    eax,0x8b9ce897
  40fdc9:	xchg   ebx,eax
  40fdca:	add    BYTE PTR [ecx],bh
  40fdcc:	leave  
  40fdcd:	addr16 je 0x40fdee
  40fdd0:	pop    ss
  40fdd1:	(bad)  
  40fdd3:	push   0x3dc8a2
	...
  40fdec:	(bad)
  40fdf0:	pop    esp
  40fdf1:	cmp    ebp,0xc83eb30
  40fdf7:	adc    DWORD PTR [eax],0x43
  40fdfa:	les    eax,FWORD PTR [ebp+0x47]
  40fdfd:	xchg   ebx,eax
  40fdfe:	add    eax,0x61
  40fe01:	xchg   ecx,eax
  40fe02:	mov    BYTE PTR [ebp+0x57],bl
  40fe05:	pop    ds
  40fe06:	jne    0x40fdd8
  40fe08:	xchg   ebx,eax
  40fe09:	fsubr  st,st(4)
  40fe0b:	cld    
  40fe0c:	push   0xffffffd2
  40fe0e:	add    al,ch
  40fe10:	and    eax,0x97ffff6c
  40fe15:	fcom   st(4)
  40fe17:	dec    eax
  40fe18:	pusha  
  40fe19:	xchg   ecx,eax
  40fe1a:	dec    eax
  40fe1b:	jne    0x40fe21
  40fe1d:	ins    DWORD PTR es:[edi],dx
  40fe1e:	jne    0x40fdf8
  40fe20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe21:	cmp    al,0x38
  40fe23:	add    BYTE PTR [ebp-0x1aa2e2c8],dh
  40fe29:	and    ecx,DWORD PTR ds:0xdda868ff
  40fe2f:	adc    al,0xb1
  40fe31:	imul   eax,DWORD PTR [edx+0x0],0xeb0afb2f
  40fe38:	mov    ebx,gs
  40fe3a:	push   edi
  40fe3b:	rcr    ch,1
  40fe3d:	push   edx
  40fe3e:	loope  0x40fe3e
  40fe40:	retf   0x48c0
  40fe43:	aam    0x6d
  40fe45:	in     al,dx
  40fe46:	add    DWORD PTR [eax+0x40],ecx
  40fe49:	xor    bh,bl
  40fe4b:	je     0x40fdda
  40fe4d:	pop    edi
  40fe4e:	mov    eax,ds:0x39
	...
  40fe63:	add    BYTE PTR [ebp-0x7aa2e2ca],dh
  40fe69:	mov    ecx,DWORD PTR [ebx]
  40fe6b:	jmp    DWORD PTR [eax]
  40fe6d:	daa    
  40fe6e:	fist   WORD PTR [ecx+edi*4]
  40fe71:	dec    ecx
  40fe72:	inc    edx
  40fe73:	add    bh,al
  40fe75:	idiv   BYTE PTR [ebx]
  40fe77:	pop    ebx
  40fe78:	ins    BYTE PTR es:[edi],dx
  40fe79:	stc    
  40fe7a:	add    eax,0x8752e00
  40fe7f:	test   DWORD PTR [ebp+0x4b],esi
  40fe82:	or     edx,DWORD PTR [eax+0x6a]
  40fe85:	fs mov edx,0x8336f511
  40fe8b:	gs mov cl,0x36
  40fe8e:	mov    eax,DWORD PTR ds:0xa557738
  40fe94:	in     eax,0xed
  40fe96:	clc    
  40fe97:	mov    edi,0x8301f6a7
  40fe9c:	xchg   ebx,eax
  40fe9d:	ss ret 
  40fe9f:	lds    edi,FWORD PTR [bx+di]
  40fea2:	add    al,BYTE PTR [eax]
  40fea4:	popf   
  40fea5:	ficom  WORD PTR [esi+0x43]
  40fea8:	mov    ch,0xce
  40feaa:	neg    dl
  40feac:	mov    bh,0x36
  40feae:	adc    edi,edi
  40feb0:	cmp    al,0x90
  40feb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feb3:	jecxz  0x40fef2
  40feb5:	retf   
  40feb6:	cmp    ebp,DWORD PTR [ecx-0x49]
  40feb9:	in     al,0xbe
  40febb:	nop
  40febc:	jno    0x40feed
  40febe:	mov    eax,0x69b69de
  40fec3:	sbb    BYTE PTR [ecx+0x3ab6a],bh
	...
  40fed9:	add    BYTE PTR [eax],al
  40fedb:	add    BYTE PTR [edi+0x4c],cl
  40fede:	arpl   WORD PTR [eax],bx
  40fee0:	icebp  
  40fee1:	mov    eax,ds:0x65d203a7
  40fee6:	ins    DWORD PTR es:[edi],dx
  40fee7:	les    eax,FWORD PTR [ecx-0x6c]
  40feea:	sbb    esp,eax
  40feec:	int    0x39
  40feee:	call   0xe9fab3f6
  40fef3:	xor    al,0xa
  40fef5:	sbb    ebp,DWORD PTR ds:0x354cfac0
  40fefb:	adc    BYTE PTR [edx-0x841287e],ah
  40ff01:	pop    DWORD PTR [ecx-0x23]
  40ff04:	xchg   ebx,eax
  40ff05:	gs ins DWORD PTR es:[edi],dx
  40ff07:	les    eax,FWORD PTR [esi]
  40ff09:	xor    BYTE PTR [eax],dl
  40ff0b:	sbb    BYTE PTR [ebp-0x52961871],ch
  40ff11:	dec    esp
  40ff12:	aad    0x2b
  40ff14:	mov    edx,eax
  40ff16:	out    0xdc,eax
  40ff18:	sar    DWORD PTR [ebx+0x18b543d9],0x90
  40ff1f:	mov    edi,ecx
  40ff21:	addr16 mov bl,0xbc
  40ff24:	(bad)  
  40ff25:	push   ebx
  40ff26:	rol    BYTE PTR [edx],cl
  40ff28:	or     eax,0xb503e84c
  40ff2d:	aaa    
  40ff2e:	ret    
  40ff2f:	idiv   BYTE PTR [edx]
  40ff31:	dec    esp
  40ff32:	pusha  
  40ff33:	add    DWORD PTR [edx+0x7f],esi
  40ff36:	out    dx,eax
  40ff37:	add    esi,DWORD PTR [ebp-0x5f83cea]
  40ff3d:	iret   
  40ff3e:	add    ch,ah
	...
  40ff54:	xlat   BYTE PTR ds:[ebx]
  40ff55:	pop    DWORD PTR [eax]
  40ff57:	jmp    0xb951d09f
  40ff5c:	push   ds
  40ff5d:	daa    
  40ff5e:	push   ebx
  40ff5f:	jmp    0x985181a
  40ff64:	sar    DWORD PTR cs:[edx+eiz*2],1
  40ff68:	jp     0x40ffd5
  40ff6a:	mov    BYTE PTR [edx+0xbb41a76],ch
  40ff70:	aad    0x4c
  40ff72:	inc    BYTE PTR [ecx]
  40ff74:	add    ecx,DWORD PTR ds:0x3786e900
  40ff7a:	xchg   esi,eax
  40ff7b:	test   al,0xb7
  40ff7d:	(bad)  
  40ff7e:	mov    bh,0xcf
  40ff80:	mov    bh,0x8f
  40ff82:	add    BYTE PTR [edx-0x10],ah
  40ff85:	push   ecx
  40ff86:	add    ecx,ebp
  40ff88:	neg    al
  40ff8a:	jae    0x40ff4c
  40ff8c:	jno    0x40ffa2
  40ff8e:	sar    DWORD PTR [edi-0x16fab57f],1
  40ff94:	mov    dh,0x8f
  40ff96:	mov    DWORD PTR [esi+0x6c8c3e3d],edx
  40ff9c:	inc    esi
  40ff9d:	dec    ebp
  40ff9e:	(bad)  
  40ff9f:	sahf   
  40ffa0:	mov    ss,WORD PTR [edi+0x51b6e885]
  40ffa6:	inc    esp
  40ffa7:	fidiv  WORD PTR [edi-0x497a9bf2]
  40ffad:	push   ss
  40ffae:	je     0x40ffa1
  40ffb0:	add    ebp,0x4ab10308
  40ffb6:	ja     0x40ff9d
	...
  40ffcc:	jno    0x40ff72
  40ffce:	push   eax
  40ffcf:	push   esi
  40ffd1:	pop    DWORD PTR [ecx+0x51e2b225]
  40ffd7:	push   esi
  40ffd8:	loopne 0x40ff6d
  40ffda:	std    
  40ffdb:	hlt    
  40ffdc:	and    BYTE PTR [ecx+0x101c0040],0xc2
  40ffe3:	or     al,0x8f
  40ffe5:	frndint 
  40ffe7:	push   DWORD PTR [edi+0x40]
  40ffea:	xor    eax,eax
  40ffec:	pop    esp
  40ffed:	push   eax
  40ffee:	mov    esp,DWORD PTR [ebp-0x5c]
  40fff1:	push   esp
  40fff2:	inc    ebp
  40fff3:	(bad)  
  40fff5:	adc    BYTE PTR [ebp-0x4],cl
  40fff8:	mov    ds:0x2fd85d17,eax
  40fffd:	aaa    
  40fffe:	pop    esi
  40ffff:	cmp    esp,ebx
  410001:	mov    cs,WORD PTR [edx+0x3536d345]
  410007:	fcmove st,st(6)
  410009:	mov    es,edx
  41000b:	or     ah,bl
  41000d:	or     DWORD PTR [ecx+0x76375dec],0x568ecc05
  410017:	push   edi
  410018:	push   ecx
  410019:	sub    BYTE PTR [esi-0x19997c06],al
  41001f:	dec    edi
  410020:	fst    DWORD PTR [ebx+0x5be98b00]
  410026:	data16 js 0x40ffb2
  410029:	mov    es,WORD PTR [eax]
  41002b:	mov    ebx,DWORD PTR [ebx-0x47]
  41002e:	add    BYTE PTR [eax+0x0],dl
	...
  410041:	add    BYTE PTR [eax],al
  410043:	add    BYTE PTR [ebx+0x40],dl
  410046:	dec    esi
  410047:	push   ss
  410048:	int3   
  410049:	xchg   ebx,eax
  41004a:	add    esp,0x74db0f90
  410050:	pop    esi
  410051:	sbb    esi,DWORD PTR [ebx]
  410053:	xor    ebx,DWORD PTR [eax+edx*1]
  410056:	hlt    
  410057:	pop    edi
  410058:	push   ebx
  410059:	mov    edx,0x52155ebd
  41005e:	data16 and al,0x5d
  410061:	mov    es,WORD PTR [eax]
  410063:	push   0x41def4
  410068:	in     al,0xfa
  41006a:	fadd   DWORD PTR [edx]
  41006c:	mov    ch,0x38
  41006e:	pop    ss
  41006f:	fstp   TBYTE PTR [ebx+edi*8]
  410072:	loope  0x410000
  410074:	jo     0x410022
  410076:	xor    al,0xff
  410078:	enter  0xf6d8,0x3f
  41007c:	mov    ch,0x28
  41007e:	fist   DWORD PTR [ebp*2+0x3c004265]
  410085:	sti    
  410086:	mov    ch,0x3a
  410088:	idiv   BYTE PTR [eax]
  41008a:	jle    0x41009b
  41008c:	mov    ah,0x38
  41008e:	add    bh,BYTE PTR [ecx]
  410090:	nop
  410091:	test   BYTE PTR [edx+0x3d],bl
  410094:	ds sti 
  410096:	mov    ch,0x8a
  410098:	test   eax,0x61f57fb0
  41009d:	push   eax
  41009e:	ins    BYTE PTR es:[edi],dx
  41009f:	add    bl,BYTE PTR [ebp+0x5c]
  4100a2:	dec    ebx
  4100a3:	inc    eax
  4100a4:	mov    ch,0x8a
  4100a6:	fst    DWORD PTR [eax+eax*1]
	...
  4100b9:	add    BYTE PTR [eax],al
  4100bb:	add    BYTE PTR [ecx],al
  4100bd:	inc    ebp
  4100be:	inc    edx
  4100bf:	add    BYTE PTR [eax],dh
  4100c1:	clc    
  4100c2:	push   eax
  4100c3:	push   ss
  4100c4:	inc    eax
  4100c5:	add    DWORD PTR [eax],0xe9ef288d
  4100cb:	xchg   ebp,eax
  4100cc:	mov    eax,0x75850236
  4100d1:	mov    WORD PTR [ecx],es
  4100d3:	mov    edi,eax
  4100d5:	push   ds
  4100d6:	cmp    DWORD PTR [edi+0x3b473f00],0xc85602e0
  4100e0:	mov    ?,WORD PTR [esi]
  4100e2:	lea    eax,[ebp+edx*2+0x1a]
  4100e6:	push   ecx
  4100e7:	fsubr  QWORD PTR [edx+0x6c]
  4100ea:	and    dl,BYTE PTR [ebx]
  4100ec:	cmc    
  4100ed:	xchg   DWORD PTR ss:[ebp+edx*2+0x37],edi
  4100f2:	or     eax,DWORD PTR [esi+ecx*1+0x36000237]
  4100f9:	nop
  4100fa:	in     al,0xe3
  4100fc:	inc    ebx
  4100fd:	cdq    
  4100fe:	arpl   WORD PTR [edx+edi*1+0x3299e849],dx
  410105:	cdq    
  410106:	out    0x3,eax
  410108:	xor    DWORD PTR [edi],0xffffffa6
  41010b:	sbb    esi,DWORD PTR [ebp+0x2ddb728f]
  410111:	retf   
  410112:	jo     0x7ca49a2b
  410118:	or     cl,BYTE PTR [ecx-0x18]
  41011b:	xor    DWORD PTR [edi+0x3918f],ecx
	...
  410131:	add    BYTE PTR [eax],al
  410133:	add    BYTE PTR [edi-0xdc94d6d],cl
  410139:	ret    0xda07
  41013c:	shr    DWORD PTR [ebx-0x26],0x43
  410140:	mov    ch,0x16
  410142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410143:	mov    bh,0x31
  410145:	push   eax
  410146:	jl     0x41018d
  410148:	ss mov bl,0xeb
  41014b:	add    ah,BYTE PTR [ebx-0x21]
  41014e:	fldcw  WORD PTR ds:[ecx-0x4abc0a25]
  410155:	or     al,0xac
  410157:	or     BYTE PTR [edx+ebp*1],bh
  41015a:	pushf  
  41015b:	fisubr DWORD PTR [ebx+0x2fb27348]
  410161:	pop    eax
  410162:	ins    DWORD PTR es:[edi],dx
  410163:	jg     0x4101d3
  410165:	dec    ecx
  410166:	mov    bh,0xd9
  410168:	call   0x350c:0xb503661f
  41016f:	fadd   DWORD PTR [ebx+0x7514ee34]
  410175:	iret   
  410176:	stos   BYTE PTR es:[edi],al
  410177:	(bad)  
  410178:	fnstenv [edi]
  41017a:	imul   eax,DWORD PTR [edi+0x69],0x48
  41017e:	jae    0x4101d7
  410180:	jge    0x4101ca
  410182:	cmc    
  410183:	mov    bh,0x5b
  410185:	mov    ds:0x884b9100,al
  41018a:	add    BYTE PTR [ecx],dh
  41018c:	mov    eax,ds:0x9fe90097
  410191:	rol    BYTE PTR [edx*8-0x4b761f4d],1
	...
  4101ac:	mov    esi,0xb6ea5737
  4101b1:	(bad)
  4101b5:	cwde   
  4101b6:	push   eax
  4101b7:	xchg   esi,eax
  4101b8:	std    
  4101b9:	ret    0x3608
  4101bc:	and    dl,ah
  4101be:	push   ss
  4101bf:	test   eax,0xf5c50cb6
  4101c4:	sub    DWORD PTR [edi-0x7ef1eeab],ecx
  4101ca:	add    cl,ch
  4101cc:	jb     0x410233
  4101ce:	jne    0x4101ac
  4101d0:	or     eax,0xd206e0c3
  4101d5:	pop    es
  4101d6:	adc    ebp,DWORD PTR [ecx+0x1ffffb6]
  4101dc:	mov    ebx,0x1f01c07d
  4101e1:	pusha  
  4101e2:	add    ebp,ecx
  4101e4:	clc    
  4101e5:	mov    eax,DWORD PTR [eax]
  4101e7:	xchg   BYTE PTR [edx],al
  4101e9:	add    BYTE PTR [esi],0xff
  4101ec:	pop    ebp
  4101ed:	fsub   QWORD PTR [edi-0x49]
  4101f0:	fistp  DWORD PTR [ebx-0x7c]
  4101f3:	mov    BYTE PTR [edi+0x5f10b712],dh
  4101f9:	(bad)  
  4101fa:	lahf   
  4101fb:	retf   
  4101fc:	dec    edx
  4101fd:	je     0x41026a
  4101ff:	jle    0x410260
  410201:	jp     0x41027d
  410203:	pop    ds
  410204:	add    al,0xf0
  410206:	sub    BYTE PTR [ecx-0x64817bfb],0xa5
  41020d:	pop    ebx
  41020e:	add    al,0x5e
	...
  410224:	lods   eax,DWORD PTR ds:[esi]
  410225:	pop    esp
  410226:	icebp  
  410227:	add    al,ah
  410229:	imul   BYTE PTR [edx-0x2d8dc077]
  41022f:	push   es
  410230:	fld    DWORD PTR [ebx-0x9e090d]
  410236:	xchg   edx,eax
  410237:	mov    ecx,0x829dc063
  41023c:	cs sti 
  41023e:	ror    BYTE PTR [ecx+0x7c],0x3f
  410242:	ror    BYTE PTR [esi],cl
  410244:	inc    ecx
  410245:	inc    eax
  410246:	push   ecx
  410247:	inc    ebp
  410248:	xchg   edx,eax
  410249:	mov    DWORD PTR [ebp+0x7d],edx
  41024c:	or     DWORD PTR [ebx+ebx*8-0x11],ebp
  410250:	sbb    DWORD PTR [eax-0x79416fd7],edx
  410256:	xchg   esp,eax
  410257:	test   DWORD PTR [ebp-0xd],edx
  41025a:	pop    eax
  41025b:	fld    st(2)
  41025d:	aas    
  41025e:	cmp    cl,al
  410260:	sbb    BYTE PTR [ecx+0x4b2efd4],al
  410266:	dec    esi
  410267:	mov    eax,ds:0x85d480f0
  41026c:	outs   dx,BYTE PTR ds:[esi]
  41026d:	out    0xd,al
  41026f:	(bad)  
  410270:	dec    ebx
  410271:	imul   esi,eax,0xffffffa1
  410274:	dec    ebp
  410275:	(bad)  
  410276:	sub    ch,BYTE PTR [ebp+0x74]
  410279:	xlat   BYTE PTR ds:[ebx]
  41027a:	aam    0x85
  41027c:	mov    BYTE PTR [esi],al
  41027e:	add    dh,al
  410280:	mov    es,WORD PTR [ecx]
  410282:	adc    bh,bl
  410284:	jbe    0x41028f
  410286:	mov    fs,WORD PTR [ecx+0x0]
	...
  41029c:	xchg   BYTE PTR [esi-0x80],al
  41029f:	jp     0x4102b3
  4102a1:	jecxz  0x41026f
  4102a3:	ins    DWORD PTR es:[edi],dx
  4102a4:	xor    al,0x84
  4102a6:	aam    0x85
  4102a8:	ret    
  4102a9:	mov    dh,0xda
  4102ab:	adc    BYTE PTR [esi-0x49],bl
  4102ae:	adc    eax,0x960757f0
  4102b3:	mov    eax,ds:0x14611ab5
  4102b8:	push   esi
  4102b9:	mov    eax,ds:0x2674592e
  4102be:	out    dx,al
  4102bf:	or     eax,0xb
  4102c2:	outs   dx,BYTE PTR ds:[esi]
  4102c3:	aam    0x38
  4102c5:	loopne 0x4102f5
  4102c7:	sub    eax,DWORD PTR [esi+ebx*1+0x42]
  4102cb:	pop    ecx
  4102cc:	je     0x410254
  4102ce:	cmc    
  4102cf:	or     eax,0x3a
  4102d2:	pop    ebp
  4102d3:	aad    0x38
  4102d5:	outs   dx,WORD PTR ds:[esi]
  4102d7:	mov    al,ds:0xd49cf144
  4102dc:	cmp    BYTE PTR [edx-0x35ab7046],cl
  4102e2:	mov    ch,0xcb
  4102e4:	clc    
  4102e5:	shl    BYTE PTR [edx],0x2e
  4102e8:	cdq    
  4102e9:	mov    esi,0xed7f2aac
  4102ee:	repnz out dx,eax
  4102f0:	and    dl,bl
  4102f2:	add    edi,DWORD PTR [ebx+edx*4]
  4102f5:	jns    0x410324
  4102f7:	aam    0xb4
  4102f9:	push   0x23
  4102fb:	(bad)  
  4102fc:	lods   eax,DWORD PTR ds:[esi]
  4102fd:	xchg   BYTE PTR [ecx-0x3c],dl
	...
  410314:	add    cl,cl
  410316:	jno    0x41031f
  410318:	cmp    DWORD PTR [edx+0x2f],ecx
  41031b:	and    esi,0x61
  41031e:	lahf   
  41031f:	mov    WORD PTR [edx],?
  410321:	push   0xffffffed
  410323:	cmp    DWORD PTR [ecx],esi
  410325:	push   0x2f
  410327:	cmp    BYTE PTR [ebp-0x7f6facdc],0xc1
  41032e:	out    0xd,al
  410330:	jnp    0x41033b
  410332:	stos   BYTE PTR es:[edi],al
  410333:	shr    BYTE PTR [ebx+ecx*2-0x11],0xd3
  410338:	mov    ebx,0x74593b44
  41033d:	sbb    eax,0x90205bef
  410342:	pop    ecx
  410343:	cld    
  410344:	push   ebp
  410345:	lds    ebp,FWORD PTR [ecx]
  410347:	cs imul eax,DWORD PTR ds:[ecx-0x49],0xffaa67a5
  410350:	(bad)  
  410351:	fdiv   QWORD PTR [edx-0x19]
  410354:	xor    eax,0xb5034c34
  410359:	(bad)  
  41035a:	sbb    ch,BYTE PTR [esi]
  41035c:	loop   0x410317
  41035e:	fisttp DWORD PTR [eax+0x6bd067f9]
  410364:	arpl   cx,dx
  410366:	out    0x12,eax
  410368:	push   cs
  410369:	push   es
  41036a:	call   0xb8862e62
  41036f:	mov    WORD PTR [ecx+0x19507147],es
  410375:	inc    ebp
  410376:	aad    0x47
	...
  41038c:	stos   DWORD PTR es:[edi],eax
  41038d:	iret   
  41038e:	out    0x82,eax
  410390:	not    BYTE PTR [ebx-0x4899d266]
  410396:	jmp    0x41039b
  410398:	mov    ch,0x97
  41039a:	ins    BYTE PTR es:[edi],dx
  41039b:	inc    eax
  41039c:	or     eax,0xf3d681e0
  4103a1:	retf   0x407
  4103a4:	mov    ch,0x8f
  4103a6:	out    0xd6,eax
  4103a8:	rcl    DWORD PTR [edi-0x26],0x43
  4103ac:	mov    ch,0x18
  4103ae:	lock mov ecx,DWORD PTR [ecx+0x3b]
  4103b2:	mov    bl,0xda
  4103b4:	inc    esi
  4103b5:	test   al,0x3d
  4103b7:	xor    DWORD PTR [esi-0x47],esp
  4103ba:	in     eax,0x2c
  4103bc:	mov    dl,0x9a
  4103be:	mov    bl,0xf2
  4103c0:	jmp    0xaa88:0x9d3f608f
  4103c7:	dec    edi
  4103c8:	mov    esp,0x9ad03512
  4103cd:	pop    ds
  4103ce:	add    DWORD PTR [edx+0x348c4560],esi
  4103d4:	gs sub al,0x89
  4103d7:	mov    ds:0xa9334560,al
  4103dc:	test   al,0xe5
  4103de:	pop    ecx
  4103df:	mov    al,ds:0x51008c77
  4103e4:	xchg   ebp,eax
  4103e5:	aam    0x40
  4103e7:	jmp    0xf44de6aa
  4103ec:	push   ebx
  4103ed:	cld    
  4103ee:	sub    al,0x26
	...
  410404:	icebp  
  410405:	(bad)  
  410406:	push   eax
  410407:	push   ss
  410408:	sar    DWORD PTR [edi+0x4d],1
  41040b:	test   eax,0x648be0b6
  410410:	in     eax,0x44
  410412:	(bad)  
  410413:	push   esi
  410414:	loope  0x4103cf
  410416:	push   ds
  410417:	mov    al,0xe
  410419:	out    0xea,al
  41041b:	jmp    0xd60614d6
  410420:	xchg   ebx,eax
  410421:	add    al,0x74
  410423:	sub    ebx,DWORD PTR [edi-0x6d5b7431]
  410429:	loope  0x41047b
  41042b:	adc    DWORD PTR [edx+0x61],ebp
  41042e:	add    ebp,ecx
  410430:	lds    ecx,FWORD PTR [edi-0x78]
  410433:	mov    ah,0xa
  410435:	adc    edi,DWORD PTR [ecx+eax*1+0xc]
  410439:	adc    ebp,eax
  41043b:	cmc    
  41043c:	or     eax,0xf2a48bf9
  410441:	ror    DWORD PTR [ebx+0x51d446ac],cl
  410447:	call   0xe085:0xe86a8b4c
  41044e:	mov    esp,DWORD PTR [edx+eiz*8+0x42]
  410452:	(bad)  
  410453:	(bad)  
  410454:	out    0x42,al
  410456:	je     0x410439
  410458:	popa   
  410459:	int3   
  41045a:	nop
  41045b:	add    al,cl
  41045d:	mov    eax,DWORD PTR [eax]
  41045f:	add    BYTE PTR [ebx+0x32],dl
  410462:	rcl    BYTE PTR [edx],cl
  410464:	fmul   QWORD PTR [ebx+0xc083]
	...
  41047a:	add    BYTE PTR [eax],al
  41047c:	leave  
  41047d:	mov    WORD PTR [ebx+0x5371875],cs
  410483:	sti    
  410484:	push   ebx
  410485:	pop    esp
  410486:	mov    bl,al
  410488:	xor    eax,0x33fffde7
  41048d:	pop    esp
  41048e:	jne    0x410474
  410490:	loope  0x410413
  410492:	hlt    
  410493:	push   eax
  410494:	and    al,0x32
  410496:	sti    
  410497:	inc    ebx
  410499:	ret    0x74bd
  41049c:	pop    esp
  41049d:	pop    esp
  41049e:	jne    0x410488
  4104a0:	shl    DWORD PTR [ecx],cl
  4104a2:	mov    edx,0x818f5c12
  4104a7:	clc    
  4104a8:	adc    edx,0x2
  4104ab:	mov    bl,0xd
  4104ad:	pop    esp
  4104ae:	jne    0x410494
  4104b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104b1:	xchg   ecx,eax
  4104b2:	rcl    BYTE PTR [edx],0x5c
  4104b5:	(bad)  
  4104b6:	std    
  4104b7:	(bad)  
  4104b8:	ret    
  4104b9:	shr    eax,1
  4104bb:	jmp    FWORD PTR [edx-0x78aa40c9]
  4104c1:	sub    cl,BYTE PTR [ebx-0x15f21bb3]
  4104c7:	or     al,0xde
  4104c9:	mov    es,WORD PTR [eax]
  4104cb:	push   ebx
  4104cc:	sub    dh,BYTE PTR [ecx+esi*1-0x40]
  4104d0:	pop    ds
  4104d1:	push   ebp
  4104d2:	out    0x8c,al
  4104d4:	push   ss
  4104d5:	xchg   ecx,eax
  4104d6:	add    BYTE PTR [ebp-0x8d52d64],al
  4104dc:	or     al,0x43
  4104de:	(bad)  
  4104df:	inc    DWORD PTR [eax]
	...
  4104f1:	add    BYTE PTR [eax],al
  4104f3:	add    ah,cl
  4104f5:	ds jb  0x410509
  4104f8:	daa    
  4104f9:	inc    esp
  4104fa:	cmp    ecx,0xffffffb5
  4104fd:	xchg   edi,eax
  4104fe:	push   esi
  4104ff:	or     bh,BYTE PTR [eax]
  410501:	pop    edx
  410502:	pop    ecx
  410503:	add    al,0xde
  410505:	cmp    bl,BYTE PTR [eax+0x2]
  410508:	or     BYTE PTR ds:[esi+0x4c],bh
  41050c:	mov    ebp,0xb75a6b50
  410511:	cmp    BYTE PTR [ecx-0x77b0ff41],cl
  410517:	cmc    
  410518:	call   0x5f011949
  41051d:	mov    ds:0x38b17c84,eax
  410522:	pop    ecx
  410523:	add    eax,0x74254a36
  410528:	inc    esp
  410529:	rcl    DWORD PTR [edi+0x8],0x3e
  41052d:	cmp    bh,dh
  41052f:	out    0x18,eax
  410531:	sahf   
  410532:	push   es
  410533:	add    BYTE PTR [esi],ch
  410535:	rol    BYTE PTR [edi+0x7fd8a9da],1
  41053b:	test   BYTE PTR ds:0x85fed1db,ch
  410541:	push   eax
  410542:	inc    edx
  410543:	dec    edi
  410544:	jne    0x41057e
  410546:	enter  0xc244,0x38
  41054a:	fidiv  DWORD PTR [ebp-0x7bfdc95f]
  410550:	cmc    
  410551:	sti    
  410552:	sbb    dl,BYTE PTR [edi+0x66]
  410555:	mov    ebx,0xf787
	...
  41056a:	add    BYTE PTR [eax],al
  41056c:	lock mov al,ds:0x1bdd4fd1
  410572:	test   DWORD PTR [ecx],0x73c4acb5
  410578:	nop
  410579:	mov    ch,0x12
  41057b:	and    edx,eax
  41057d:	fadd   st(4),st
  41057f:	push   cs
  410580:	add    edi,DWORD PTR [eax+0x34]
  410583:	lea    edi,[eax]
  410585:	inc    eax
  410586:	sar    esi,1
  410588:	mov    edx,0xdddc378e
  41058d:	inc    ecx
  41058e:	(bad)  
  410590:	xor    cl,bl
  410592:	out    0x80,al
  410594:	cmp    DWORD PTR [eax-0x33],ecx
  410597:	rcr    BYTE PTR [ebx-0x1d6e3020],cl
  41059d:	(bad)  
  41059e:	out    0x36,eax
  4105a0:	popf   
  4105a1:	stc    
  4105a2:	sti    
  4105a3:	add    esi,DWORD PTR [ebp-0x25fcdaeb]
  4105a9:	loope  0x4105ed
  4105ab:	mov    ebp,0x38e79874
  4105b0:	ds xor al,0x69
  4105b3:	fbld   TBYTE PTR [esi-0x71]
  4105b6:	out    0x3,eax
  4105b8:	add    edx,DWORD PTR ds:0xc235fbfd
  4105be:	call   0xe7d0b8b7
  4105c3:	cmp    cl,cl
  4105c5:	mov    BYTE PTR [ecx-0x1752b23d],bh
  4105cb:	add    esi,DWORD PTR [ebp+0xfc1800]
	...
  4105e1:	add    BYTE PTR [eax],al
  4105e3:	add    BYTE PTR [edx],ch
  4105e5:	inc    ecx
  4105e6:	mov    edi,0x4edcb55d
  4105eb:	clc    
  4105ec:	push   0xffffff99
  4105ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105ef:	add    edi,DWORD PTR [eax*8-0x698f811d]
  4105f6:	push   0xffffffc7
  4105f8:	scas   al,BYTE PTR es:[edi]
  4105f9:	push   ss
  4105fa:	stos   DWORD PTR es:[edi],eax
  4105fb:	jmp    FWORD PTR [ecx]
  4105fd:	retf   0x33f4
  410600:	pop    edi
  410601:	call   0xca62:0x9f7f80be
  410608:	fcmovu st,st(7)
  41060a:	inc    DWORD PTR [edx]
  41060c:	mov    ch,0x14
  41060e:	scas   al,BYTE PTR es:[edi]
  41060f:	sbb    bh,BYTE PTR [ecx*8-0x7b8f8145]
  410616:	add    BYTE PTR [eax+0x7b],ah
  410619:	iret   
  41061a:	mov    esp,DWORD PTR [edi+0x256adf6f]
  410620:	in     al,0x12
  410622:	dec    edx
  410623:	sub    eax,0x1ae94a28
  410628:	add    DWORD PTR [eax-0x2],0x1012f62
  41062f:	jmp    0x2d7d1aea
  410634:	pop    DWORD PTR [eax+0x4c386000]
  41063a:	add    ecx,ebp
  41063c:	mov    dh,0xb5
  41063e:	adc    BYTE PTR [edi+edi*1+0x4d],dh
  410642:	add    ecx,ebp
  410644:	mov    dh,0xdf
  410646:	mov    ebp,DWORD PTR [edx+0x0]
	...
  410659:	add    BYTE PTR [eax],al
  41065b:	add    BYTE PTR [ecx],ah
  41065d:	inc    eax
  41065e:	(bad)  
  41065f:	jmp    0x6b17470a
  410664:	jge    0x4105fa
  410666:	push   0x8fb7eb
  41066b:	fs das 
  41066d:	pop    ebp
  41066e:	add    ecx,ebp
  410670:	mov    dh,0xdf
  410672:	mov    ebp,DWORD PTR [edx+0x61]
  410675:	inc    eax
  410676:	(bad)  
  410677:	jmp    0x6b174762
  41067c:	in     eax,dx
  41067d:	xchg   ebx,eax
  41067e:	mov    ebp,0x8fb7e5
  410683:	push   0xe9005aff
  410688:	mov    dh,0xd9
  41068a:	mov    esp,DWORD PTR [edx+0x45]
  41068d:	pop    DWORD PTR [eax]
  41068f:	jmp    0x432a500d
  410694:	fdivr  QWORD PTR [edi]
  410696:	(bad)  
  410697:	fs icebp 
  410699:	nop
  41069a:	cmp    DWORD PTR [ecx-0x7c01befb],0xffffffb7
  4106a1:	adc    dh,BYTE PTR [eax+eax*1-0xa214]
  4106a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106a9:	inc    esi
  4106aa:	mov    eax,0xc3c2cc01
  4106af:	push   eax
  4106b0:	mov    ah,0x13
  4106b2:	xchg   ebx,eax
  4106b3:	add    BYTE PTR [edi+edx*1+0xaaf75be],bl
  4106ba:	in     al,dx
  4106bb:	add    DWORD PTR [ebx+edx*4+0xc689],ecx
	...
  4106d2:	add    BYTE PTR [eax],al
  4106d4:	push   edx
  4106d5:	xchg   ebx,eax
  4106d6:	add    BYTE PTR [eax-0x3b],al
  4106d9:	out    0xf7,al
  4106db:	jmp    0x406790
  4106e0:	mov    ds:0x9cc244be,eax
  4106e5:	mov    esi,0x935ff8b2
  4106ea:	add    BYTE PTR [edx+0x5c],ch
  4106ed:	adc    al,0xc6
  4106ef:	push   DWORD PTR [edx+edx*4]
  4106f2:	sbb    BYTE PTR [eax],al
  4106f4:	dec    esp
  4106f5:	push   ss
  4106f6:	mov    esi,0xec0a737f
  4106fb:	add    DWORD PTR [ebx+edx*4-0x75],ebx
  4106ff:	test   DWORD PTR [ecx+eiz*2-0x1],ebx
  410703:	call   DWORD PTR [edx]
  410705:	xchg   ebx,eax
  410706:	add    BYTE PTR [eax+0x65],al
  410709:	out    0xf7,al
  41070b:	jmp    0x406790
  410710:	xchg   edi,eax
  410711:	aad    0xde
  410713:	mov    DWORD PTR [edi+0x1c00043a],ecx
  410719:	fisttp QWORD PTR [eax]
  41071b:	lea    edx,[ecx-0x7]
  41071e:	dec    ebp
  41071f:	lea    ecx,[edi+0xc000692]
  410725:	cmp    ebp,0x15
  410728:	sub    BYTE PTR [ecx],bh
  41072a:	add    BYTE PTR ds:[edi+0x56],bl
  41072e:	or     bh,BYTE PTR [ecx+0x296b5]
  410734:	mov    ch,0xdb
  410736:	xchg   BYTE PTR [edi],cl
	...
  41074c:	rcl    DWORD PTR [ebp+0x28b5c5d0],cl
  410752:	inc    edx
  410753:	dec    ecx
  410754:	dec    eax
  410755:	aas    
  410756:	jp     0x4107cc
  410758:	lods   eax,DWORD PTR ds:[esi]
  410759:	fild   DWORD PTR [edi+0x228b8e4]
  41075f:	push   eax
  410760:	cmp    cl,al
  410762:	clc    
  410763:	add    eax,0xc67b28b5
  410768:	lea    edi,ds:0xab92ffe7
  41076e:	les    ecx,FWORD PTR [esi]
  410770:	xor    BYTE PTR [edi+ecx*8],dl
  410773:	inc    BYTE PTR [edx-0x4d03794f]
  410779:	sub    BYTE PTR [edx],al
  41077b:	mov    DWORD PTR [esi],esi
  41077d:	xchg   esp,eax
  41077e:	cld    
  41077f:	jmp    FWORD PTR [edx-0x28]
  410782:	add    ebx,DWORD PTR [edi+0x3]
  410785:	lock ret 0xb503
  410789:	pop    ecx
  41078a:	ret    0x653a
  41078d:	cmp    al,0x58
  41078f:	lar    eax,WORD PTR [edx+0x64]
  410793:	cmp    ebp,DWORD PTR [ebp+0x3c]
  410796:	pusha  
  410797:	push   esi
  410798:	xchg   dh,al
  41079a:	cmp    eax,0xef35be5
  4107a0:	bound  eax,QWORD PTR [edx]
  4107a2:	add    BYTE PTR [ebx+0x556601c],al
  4107a8:	fild   QWORD PTR ss:[esi*2+0x580662b8]
	...
  4107c4:	mov    dh,0x98
  4107c6:	xor    DWORD PTR [edi],ecx
  4107c8:	dec    edx
  4107c9:	xor    al,BYTE PTR [ecx-0x7caa1aa8]
  4107cf:	cli    
  4107d0:	mov    esp,0xb7fb9e8f
  4107d5:	inc    ebp
  4107d6:	ins    DWORD PTR es:[edi],dx
  4107d7:	pop    eax
  4107d8:	in     al,0x5e
  4107da:	add    esp,DWORD PTR [eax+ebp*1]
  4107dd:	fmul   DWORD PTR [esi+0x66]
  4107e0:	ss cmp ch,ch
  4107e3:	push   esi
  4107e4:	mov    ebp,0x4680f592
  4107e9:	inc    eax
  4107ea:	and    ebx,ebx
  4107ec:	stos   DWORD PTR es:[edi],eax
  4107ed:	or     al,0x91
  4107ef:	outs   dx,BYTE PTR ds:[esi]
  4107f0:	sbb    BYTE PTR [ecx],dl
  4107f2:	jecxz  0x4107fc
  4107f4:	and    cl,BYTE PTR [ecx-0x3bce2a16]
  4107fa:	fcomp  DWORD PTR [edi+esi*1+0x7bdaea52]
  410801:	(bad)  [ebp-0x77]
  410804:	jge    0x4107ca
  410806:	jmp    0xdb16:0x608f7a82
  41080d:	push   eax
  41080e:	inc    edx
  41080f:	cld    
  410810:	cmp    eax,0x1c33f95
  410815:	out    0x36,al
  410817:	iret   
  410818:	out    0x73,al
  41081a:	test   esi,0x43fa3bc1
  410820:	mov    ch,0x8
  410822:	adc    BYTE PTR [eax+0x3e79152],0x0
	...
  410839:	add    BYTE PTR [eax],al
  41083b:	add    BYTE PTR [esi+0x3a],bh
  41083e:	not    BYTE PTR [ecx]
  410840:	sti    
  410841:	(bad)  
  410842:	mov    ds:0x66e5b542,al
  410847:	clc    
  410848:	push   esi
  410849:	mov    ds:0x832203a7,al
  41084e:	pop    ebx
  41084f:	mov    ecx,0x843f8f77
  410854:	les    ecx,FWORD PTR [edi+0x43d182e7]
  41085a:	xor    al,BYTE PTR [edx-0x4b]
  41085d:	pop    DWORD PTR [eax]
  41085f:	cli    
  410860:	mul    dl
  410862:	data16 mov al,BYTE PTR [edx]
  410865:	inc    edi
  410866:	inc    edx
  410867:	jmp    0xfbedac67
  41086c:	jbe    0x4107fd
  41086e:	out    0x4f,eax
  410870:	mov    dh,0x8f
  410872:	add    BYTE PTR [edx-0x55367092],bh
  410878:	mov    dh,0x3c
  41087a:	adc    al,0x45
  41087c:	les    edi,FWORD PTR [eax+eax*1-0x1a]
  410880:	and    ebx,DWORD PTR [esp+edi*8+0x18ff723]
  410887:	(bad)  
  410888:	cmp    eax,DWORD PTR [eax-0x35]
  41088b:	sub    bh,BYTE PTR [ecx-0x23a02488]
  410891:	not    al
  410893:	out    0xb6,al
  410895:	vpmadcsswd ymm1,ymm7,YMMWORD PTR [edi-0x3f869b00],ymm6
  41089f:	out    0x0,al
	...
  4108b1:	add    BYTE PTR [eax],al
  4108b3:	add    BYTE PTR [ecx],ah
  4108b5:	mov    edi,esp
  4108b7:	mov    ds:0xac898ff4,eax
  4108bc:	int3   
  4108bd:	push   esp
  4108be:	sub    dh,BYTE PTR [ecx+0x4800a0e2]
  4108c4:	jge    0x41090c
  4108c6:	inc    edx
  4108c7:	jmp    0x314e1350
  4108cc:	xchg   bh,bl
  4108ce:	call   0xd0afea
  4108d3:	jmp    0xab9:0x2acb4043
  4108da:	add    eax,0x753ce126
  4108df:	add    eax,0xabe8de11
  4108e4:	les    ecx,FWORD PTR [edi+0x6b8fc700]
  4108ea:	cld    
  4108eb:	add    dh,al
  4108ed:	into   
  4108ee:	add    bl,ch
  4108f0:	std    
  4108f1:	mov    esp,0x9e741b09
  4108f6:	das    
  4108f7:	add    ah,bl
  4108f9:	adc    edi,DWORD PTR [esi+0xcb6f974]
  4108ff:	hlt    
  410900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410901:	into   
  410902:	add    BYTE PTR [ebp+0xf508ac8],cl
  410908:	imul   edx,DWORD PTR [esp+edi*8-0x26fe036],0x74
  410910:	clc    
  410911:	daa    
  410912:	lea    eax,[ecx*1+0xfe880]
	...
  410929:	add    BYTE PTR [eax],al
  41092b:	add    BYTE PTR [esi-0x71],ch
  41092e:	add    BYTE PTR [esi+0x25],ah
  410931:	sub    bh,dl
  410933:	retf   0x93cf
  410936:	push   0xd05700
  41093b:	dec    DWORD PTR [ecx-0x63bfefe5]
  410941:	push   0x4da15e5d
  410946:	add    al,BYTE PTR [eax]
  410948:	call   0x5693:0x9fcafe09
  41094f:	jmp    FWORD PTR [ecx-0xd]
  410952:	cmovo  ecx,DWORD PTR [ecx+ebx*8+0x14]
  410957:	pop    eax
  410958:	inc    ebx
  410959:	mov    ds:0x939fcaf0,al
  41095e:	mov    ds:0x42f934,ax
  410964:	and    al,0xa6
  410966:	xor    BYTE PTR [eax],al
  410968:	dec    esp
  410969:	mov    al,ds:0x67d839c0
  41096e:	or     BYTE PTR [ecx+eiz*1+0x4c],dh
  410972:	jb     0x410998
  410974:	and    al,0x7f
  410976:	or     eax,0x1ad9e1b5
  41097c:	stos   DWORD PTR es:[edi],eax
  41097d:	sub    BYTE PTR [edx],al
  41097f:	push   esi
  410980:	push   esi
  410981:	jns    0x41093a
  410983:	inc    edx
  410984:	mov    ch,0x79
  410986:	imul   BYTE PTR [ebx+0x5e01e8a7]
  41098c:	div    DWORD PTR [edx+eax*1]
  41098f:	push   ebp
	...
  4109a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109a6:	and    bl,0xdd
  4109a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109aa:	fnsave [ebx-0x4a]
  4109ad:	sub    BYTE PTR [edx],al
  4109af:	push   ebx
  4109b0:	imul   eax,DWORD PTR [ecx],0x79
  4109b3:	jl     0x410972
  4109b5:	stos   DWORD PTR es:[edi],eax
  4109b6:	int3   
  4109b7:	push   cs
  4109b8:	cmp    edx,edi
  4109ba:	add    al,BYTE PTR [eax]
  4109bc:	mov    ch,0x90
  4109be:	mov    eax,0x8628b53a
  4109c3:	mov    edi,0x116acba
  4109c8:	mov    ch,0x28
  4109ca:	jg     0x410a12
  4109cc:	mov    cl,0xa3
  4109ce:	add    eax,DWORD PTR [edx]
  4109d0:	mov    ch,0x28
  4109d2:	sti    
  4109d3:	test   BYTE PTR [esi+0x28],al
  4109d6:	add    al,BYTE PTR [eax]
  4109d8:	or     eax,0xb542bf29
  4109dd:	add    eax,esi
  4109df:	mov    ds:0x660468c7,eax
  4109e4:	ss xor ecx,edx
  4109e7:	leave  
  4109e8:	imul   BYTE PTR [eax]
  4109ea:	add    cl,BYTE PTR [edi]
  4109ec:	xor    esi,DWORD PTR [ebx-0x1f4afffc]
  4109f2:	leave  
  4109f3:	(bad)  
  4109f4:	mov    ch,0x28
  4109f6:	pusha  
  4109f7:	add    DWORD PTR [eax-0x4abd40f0],edi
  4109fd:	mov    bl,0x50
  4109ff:	and    al,0xd9
  410a01:	sub    BYTE PTR [esi-0x1],0x2a
  410a05:	(bad)  
  410a06:	out    0xdb,eax
	...
  410a1c:	(bad)  [ecx+0x512e03e8]
  410a22:	mov    eax,0xe7a6d0db
  410a27:	add    edi,DWORD PTR [ebx+edx*8]
  410a2a:	or     edi,eax
  410a2c:	cmp    DWORD PTR [edi-0x4c],ecx
  410a2f:	data16 sub bl,al
  410a32:	or     ecx,DWORD PTR [eax]
  410a34:	sub    eax,0xb503e817
  410a39:	daa    
  410a3a:	icebp  
  410a3b:	icebp  
  410a3c:	mov    ch,0x8f
  410a3e:	ins    BYTE PTR es:[edi],dx
  410a3f:	push   eax
  410a40:	xchg   ecx,eax
  410a41:	lahf   
  410a42:	dec    edi
  410a43:	ins    DWORD PTR es:[edi],dx
  410a44:	sar    BYTE PTR [ecx],cl
  410a46:	call   0xe8e4da26
  410a4b:	add    edx,DWORD PTR [edi+edi*1]
  410a4e:	xor    al,BYTE PTR [edi-0x4b]
  410a51:	adc    al,0x28
  410a53:	push   eax
  410a54:	mov    bh,0x4
  410a56:	clc    
  410a57:	retf   0x3c1
  410a5a:	cli    
  410a5b:	inc    ebx
  410a5c:	mov    ch,0xdf
  410a5e:	ficom  WORD PTR [eax]
  410a60:	push   ecx
  410a61:	push   esi
  410a62:	sub    eax,DWORD PTR [eax+eax*2]
  410a65:	aam    0x3
  410a67:	inc    eax
  410a68:	jecxz  0x410a49
  410a6a:	cmp    bh,0xb5
  410a6d:	(bad)  
  410a6e:	out    0x78,eax
  410a70:	ds je  0x410ad2
  410a73:	add    al,0xb5
  410a75:	(bad)  
  410a76:	mov    edi,0xe78fcb56
  410a7b:	jle    0x410a63
  410a7d:	jae    0x410a7a
  410a7f:	xchg   BYTE PTR [eax],al
	...
  410a91:	add    BYTE PTR [eax],al
  410a93:	add    BYTE PTR [esi-0x60],dh
  410a96:	(bad)  
  410a98:	add    ch,BYTE PTR [eax]
  410a9a:	mov    ch,0x79
  410a9c:	dec    edx
  410a9d:	cmp    DWORD PTR [ebx+0x1],esi
  410aa0:	jmp    0x410ada
  410aa2:	sbb    ah,bh
  410aa4:	das    
  410aa5:	mov    ebx,0x8f8ee100
  410aaa:	leave  
  410aab:	sub    dh,BYTE PTR [ecx+0x28951438]
  410ab1:	jns    0x410ab3
  410ab3:	push   edx
  410ab4:	cmp    DWORD PTR [edx+0x0],0x738fb6e8
  410abb:	ret    
  410abc:	xor    edi,DWORD PTR [edx-0x4c8d1df8]
  410ac2:	mov    esp,DWORD PTR [ebp+0x3650b79a]
  410ac8:	in     eax,0xf0
  410aca:	adc    al,0xa9
  410acc:	mov    dh,0x12
  410ace:	rcr    DWORD PTR [ebp-0x6cff5a5b],0xd9
  410ad5:	or     eax,DWORD PTR [ebp-0x33]
  410ad8:	fmulp  st(0),st
  410ada:	mov    esp,DWORD PTR [ebp-0x56]
  410add:	adc    eax,DWORD PTR [ecx]
  410adf:	jmp    0x3e4eea9a
  410ae4:	ja     0x410a6f
  410ae6:	and    esi,esi
  410ae8:	mov    bh,0x8f
  410aea:	add    BYTE PTR [ecx-0x19f73e81],bl
  410af0:	xchg   edx,eax
  410af1:	sbb    BYTE PTR ds:0xc112b129,dl
  410af7:	push   edi
	...
  410b0c:	stos   BYTE PTR es:[edi],al
  410b0d:	or     al,0xf9
  410b0f:	call   0x46c2960f
  410b14:	adc    DWORD PTR [eax-0x38210f8d],0x24b9294d
  410b1e:	pop    ss
  410b1f:	imul   esi,DWORD PTR cs:[edx-0x606ada7f],0x7d661b20
  410b2a:	(bad)  
  410b2b:	bswap  esi
  410b2d:	les    eax,FWORD PTR [ecx+edi*8-0x3d]
  410b31:	int3   
  410b32:	and    al,0x0
  410b34:	pop    esp
  410b35:	jl     0x410b1f
  410b37:	imul   edi,DWORD PTR [ecx-0x54a800ba],0x28
  410b3e:	stos   BYTE PTR es:[edi],al
  410b3f:	adc    al,0xdc
  410b41:	xchg   ebx,eax
  410b42:	pop    ebp
  410b43:	pop    esi
  410b44:	idiv   DWORD PTR [edx-0x7031a21c]
  410b4a:	add    BYTE PTR [ebp-0x69],dl
  410b4d:	push   edi
  410b4e:	push   esp
  410b4f:	mov    esp,ecx
  410b51:	xor    edx,DWORD PTR [edi+0x56]
  410b54:	jnp    0x410b7e
  410b56:	mov    ds:0x898c4c14,al
  410b5b:	clc    
  410b5c:	push   ebp
  410b5d:	ror    BYTE PTR [eax],1
  410b5f:	call   0x419558
  410b64:	push   eax
  410b65:	push   ebx
  410b66:	jne    0x410b6f
  410b68:	addr16 dec esi
  410b6a:	jmp    0xcce7fc
  410b6f:	test   DWORD PTR [eax],eax
	...
  410b81:	add    BYTE PTR [eax],al
  410b83:	add    BYTE PTR [ebx-0x337d7dca],bh
  410b89:	mov    eax,DWORD PTR [eax]
  410b8b:	cmp    DWORD PTR [edx+0x1f0a748c],0x4a
  410b92:	or     eax,0xfc0c9174
  410b97:	pop    es
  410b98:	add    ebp,ebx
  410b9a:	push   ecx
  410b9b:	push   edi
  410b9c:	jnp    0x410bc4
  410b9e:	mov    dh,0x12
  410ba0:	fmul   QWORD PTR [ebx-0x1bee2777]
  410ba6:	jno    0x410c0c
  410ba8:	pop    es
  410ba9:	push   ecx
  410baa:	inc    esi
  410bab:	je     0x410c06
  410bad:	or     al,0xe6
  410baf:	push   es
  410bb0:	mov    al,0x3a
  410bb2:	sub    eax,0x52
  410bb5:	(bad)  
  410bb6:	sbb    BYTE PTR [ebx+0x53175417],cl
  410bbc:	(bad)  
  410bbd:	xchg   edx,eax
  410bbe:	or     eax,0x3ada1db5
  410bc4:	mov    eax,ds:0x3d8b0228
  410bc9:	and    bh,dl
  410bcb:	push   edx
  410bcc:	iret   
  410bcd:	sub    ch,bl
  410bcf:	out    dx,al
  410bd0:	ds cmp al,0xfa
  410bd3:	test   BYTE PTR [edx],ch
  410bd5:	cmp    eax,0x81b5be17
  410bda:	inc    esp
  410bdb:	add    BYTE PTR [ebx-0x585c112b],al
  410be1:	call   0x15ba73e7
  410be6:	inc    edx
	...
  410bfb:	add    BYTE PTR ds:0xfafec57f,cl
  410c01:	sbb    eax,0x7df1c7da
  410c06:	enter  0xea55,0x5b
  410c0a:	xchg   esi,eax
  410c0b:	adc    DWORD PTR [ebp+0x28],esi
  410c0e:	or     eax,0x312e61fb
  410c13:	call   0x435972
  410c18:	retf   0xfa1b
  410c1b:	(bad)  
  410c1c:	test   al,0xe0
  410c1e:	repz aas 
  410c20:	mov    ch,0xf1
  410c22:	jl     0x410c68
  410c24:	mov    ebp,0x775d281d
  410c29:	sub    al,0x2
  410c2b:	mov    ebp,DWORD PTR [ebp+0x3055b299]
  410c31:	call   DWORD PTR [eax+0x13]
  410c34:	ss call 0xa206973a
  410c3a:	push   eax
  410c3b:	and    al,0xad
  410c3d:	je     0x410c35
  410c3f:	inc    ecx
  410c40:	ss call 0x7ac54746
  410c46:	aam    0x31
  410c48:	jne    0x410bd0
  410c4a:	ret    0xb503
  410c4d:	(bad)  
  410c4e:	push   edi
  410c4f:	add    eax,0x7b35374e
  410c54:	pop    esi
  410c55:	adc    BYTE PTR [eax+edi*8+0x2de78fb5],al
  410c5c:	xchg   BYTE PTR ds:0x4173,bh
	...
  410c72:	add    BYTE PTR [eax],al
  410c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c75:	jp     0x410c1c
  410c77:	dec    esi
  410c78:	adc    BYTE PTR [edx],0x70
  410c7b:	(bad)  
  410c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c7d:	pushf  
  410c7e:	mov    edx,0xeb275db1
  410c83:	add    esi,DWORD PTR [ebp-0x18a2a6c2]
  410c89:	es jmp 0x410c8f
  410c8c:	mov    ch,0x8
  410c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c8f:	retf   
  410c90:	sub    eax,0x717b43dc
  410c95:	lahf   
  410c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c97:	into   
  410c98:	or     bl,BYTE PTR [edx+0x37797927]
  410c9e:	or     eax,ebp
  410ca0:	jb     0x410c7f
  410ca2:	mov    ebp,0x1e3b3178
  410ca7:	(bad)  
  410ca8:	rcr    esi,cl
  410caa:	mov    ebp,0xe3b31be
  410caf:	mov    ebx,0xb503e78f
  410cb5:	or     BYTE PTR ds:0xf735b0cc,bh
  410cbb:	mov    cl,0x5f
  410cbe:	aad    0x43
  410cc0:	mov    ch,0x10
  410cc2:	loopne 0x410cc8
  410cc4:	and    BYTE PTR [edx+0x35],ch
  410cc7:	(bad)  
  410cc8:	or     DWORD PTR [esi+edx*8-0x312342b0],eax
  410ccf:	lock sahf 
  410cd1:	popf   
  410cd2:	daa    
  410cd3:	add    al,0xbe
  410cd5:	dec    ebp
  410cd6:	ds in  al,dx
	...
  410cec:	popf   
  410ced:	retf   0xe500
  410cf0:	mov    cl,0xca
  410cf2:	or     al,dh
  410cf4:	add    eax,0xc7767d84
  410cf9:	dec    edi
  410cfa:	cmp    BYTE PTR [ecx*2-0x6f566b7a],dl
  410d01:	inc    esi
  410d02:	ret    
  410d03:	fnsave [esi+0x6b92c081]
  410d09:	fmul   QWORD PTR [ecx-0x16231673]
  410d0f:	shl    ebx,1
  410d11:	mov    ebx,0x876d6210
  410d16:	std    
  410d17:	mov    ah,0x22
  410d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d1a:	jmp    FWORD PTR [ebx+0x75]
  410d1d:	xor    al,0x51
  410d1f:	inc    ecx
  410d20:	(bad)  [esi+edi*8]
  410d23:	dec    esi
  410d24:	xor    ah,0x74
  410d27:	hlt    
  410d28:	aaa    
  410d29:	mov    ah,0xc
  410d2b:	jmp    0xe8f23eb5
  410d30:	xchg   ebx,eax
  410d31:	inc    esi
  410d32:	ret    
  410d33:	fnsave [esi-0x14ed3f7f]
  410d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d3a:	add    BYTE PTR [esi],bl
  410d3c:	sub    BYTE PTR [ebx+0x10],0x16
  410d40:	jp     0x410dad
  410d42:	adc    BYTE PTR [esi],cl
  410d44:	jb     0x410db1
  410d46:	adc    BYTE PTR [esi],al
  410d48:	lds    eax,FWORD PTR [eax+0x78b6a916]
  410d4e:	inc    esp
  410d4f:	int    0x0
	...
  410d61:	add    BYTE PTR [eax],al
  410d63:	add    BYTE PTR [edx+0x74299485],ah
  410d69:	mov    BYTE PTR [eax],al
  410d6b:	imul   BYTE PTR [ecx]
  410d6d:	lea    edx,[esi+0x53]
  410d70:	xchg   ebx,eax
  410d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d72:	(bad)  
  410d73:	cmp    BYTE PTR [eax-0x65],dh
  410d76:	and    al,0xf7
  410d78:	test   BYTE PTR [edi+0xe3c0089],0xfc
  410d7f:	jmp    FWORD PTR [eax-0x53fce6e]
  410d85:	push   cs
  410d86:	aas    
  410d87:	add    al,BYTE PTR [ebx-0x30b7425b]
  410d8d:	sub    esi,edx
  410d8f:	sbb    DWORD PTR [edi+eiz*1],0x4e
  410d93:	push   edi
  410d94:	mov    cl,BYTE PTR [edx+0x15]
  410d97:	fmul   QWORD PTR [ecx-0x30]
  410d9a:	add    BYTE PTR [ebp+0x560adf0c],al
  410da0:	mov    bl,0x24
  410da2:	cs push ss
  410da4:	fmul   QWORD PTR [ebx-0x496c317f]
  410daa:	ret    
  410dab:	pop    esi
  410dac:	iret   
  410dad:	fs mov esp,ebp
  410db0:	dec    ebp
  410db1:	adc    DWORD PTR [ecx+0x57],0x8be50fa
  410db8:	jecxz  0x410dbc
  410dba:	(bad)  
  410dbb:	xor    esi,DWORD PTR [ebx-0x44]
  410dbe:	inc    esp
  410dbf:	or     BYTE PTR [ebx+eiz*2+0x55],cl
  410dc3:	jmp    FWORD PTR [ecx]
  410dc5:	cmp    BYTE PTR [ecx+0x7d],cl
	...
  410ddb:	add    BYTE PTR [eax-0x6c078348],dl
  410de1:	and    al,0xd2
  410de3:	adc    eax,0xc083901c
  410de8:	sub    BYTE PTR [eax],bh
  410dea:	or     eax,0xffffffb3
  410ded:	pop    eax
  410dee:	add    BYTE PTR [eax],0xcc
  410df1:	(bad)  
  410df2:	push   esi
  410df3:	mov    ebp,DWORD PTR [ecx]
  410df5:	aaa    
  410df6:	jmp    0x410e26
  410df8:	pop    ss
  410df9:	jb     0x410dff
  410dfb:	and    DWORD PTR [ecx+edx*4-0x3a6cef8d],0x10
  410e03:	(bad)  
  410e04:	jmp    0x48a:0xb535e623
  410e0b:	add    BYTE PTR [esp+ebp*2],ch
  410e0e:	enter  0xa6ea,0xa5
  410e12:	leave  
  410e13:	push   ss
  410e14:	call   0xc5b6d33b
  410e19:	stc    
  410e1a:	dec    ebx
  410e1b:	sbb    BYTE PTR [ebp-0x77],cl
  410e1e:	push   ss
  410e1f:	add    BYTE PTR [ebp+0x3ef83ebf],dh
  410e25:	fwait
  410e26:	call   0xb6d55065
  410e2b:	dec    al
  410e2d:	xor    ch,al
  410e2f:	adc    al,0x8d
  410e31:	push   edx
  410e32:	inc    edx
  410e33:	add    BYTE PTR [esi],bh
  410e35:	ins    BYTE PTR es:[edi],dx
  410e36:	enter  0xfb82,0xb9
  410e3a:	or     bh,al
  410e3c:	test   eax,0xf77953
	...
  410e51:	add    BYTE PTR [eax],al
  410e53:	add    BYTE PTR [ebx+0x1d0229bf],dl
  410e59:	jno    0x410e1e
  410e5b:	dec    BYTE PTR [edx]
  410e5d:	scas   al,BYTE PTR es:[edi]
  410e5e:	ror    DWORD PTR [edx-0x1811f80],1
  410e64:	sbb    DWORD PTR [eax-0x7f],0xf8fbf2fd
  410e6b:	gs cmp al,0x1a
  410e6e:	add    al,ch
  410e70:	xchg   esp,eax
  410e71:	popa   
  410e72:	(bad)  
  410e73:	(bad)  
  410e74:	cs cdq 
  410e76:	les    esi,FWORD PTR [ecx+edx*8-0x60]
  410e7a:	pop    edx
  410e7b:	sub    eax,0x74c528b5
  410e80:	mov    ebp,0xb52d6290
  410e85:	sub    BYTE PTR [ecx-0x3b],bh
  410e88:	adc    edx,DWORD PTR [edx]
  410e8a:	sub    ecx,ecx
  410e8c:	ja     0x410eb2
  410e8e:	add    dl,BYTE PTR [esi+0xa]
  410e91:	scas   al,BYTE PTR es:[edi]
  410e92:	leave  
  410e93:	push   cs
  410e94:	bound  ecx,QWORD PTR [edi-0x5a44d212]
  410e9a:	call   0xbdd98f2
  410e9f:	sbb    dh,ch
  410ea1:	(bad)  
  410ea2:	bound  esi,QWORD PTR [edi+esi*1-0x9c738cf]
  410ea9:	jle    0x410e52
  410eab:	sub    dh,BYTE PTR [esi]
  410ead:	jb     0x410e98
  410eaf:	adc    cl,BYTE PTR [eax+0x4f]
  410eb2:	and    BYTE PTR [edi-0x3b94c486],al
	...
  410ecc:	scas   al,BYTE PTR es:[edi]
  410ecd:	fbstp  TBYTE PTR [esi]
  410ecf:	pop    edx
  410ed0:	dec    edx
  410ed1:	pushf  
  410ed2:	(bad)  
  410ed3:	sbb    ebp,esi
  410ed5:	(bad)  
  410ed6:	(bad)
  410edb:	add    eax,0xfbd5328b
  410ee0:	ror    bh,0xe7
  410ee3:	mov    BYTE PTR [edx-0x45],ah
  410ee6:	rol    dl,1
  410ee8:	rol    DWORD PTR [ebx-0x3],0x43
  410eec:	mov    ch,0xd9
  410eee:	jb     0x410eac
  410ef0:	or     ebx,DWORD PTR [edi+edx*1-0x49708ae6]
  410ef7:	ret    0x63a1
  410efa:	fld    QWORD PTR [ebx-0x4b]
  410efd:	push   cs
  410efe:	cs ret 
  410f00:	mov    eax,DWORD PTR [esi]
  410f02:	cs (bad) 
  410f04:	neg    bl
  410f06:	pop    esp
  410f07:	xor    BYTE PTR [ecx-0x3d4f96fd],dl
  410f0d:	mov    edi,fs
  410f0f:	add    esp,DWORD PTR [ebx-0x26]
  410f12:	bound  eax,QWORD PTR [ecx]
  410f14:	in     eax,0x9b
  410f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f17:	add    eax,DWORD PTR [esi+0x3c291339]
  410f1d:	mov    ebx,0xac61fc77
  410f22:	add    dh,dh
  410f24:	ja     0x410f58
  410f26:	ja     0x410ebb
  410f28:	sub    ecx,esp
  410f2a:	jo     0x410f9e
  410f2c:	cmp    cl,BYTE PTR [ecx+ebp*2]
  410f2f:	fiadd  WORD PTR [eax]
	...
  410f41:	add    BYTE PTR [eax],al
  410f43:	add    BYTE PTR [edi+0x32],dh
  410f46:	cmp    ch,BYTE PTR [edx+0x1c8987bd]
  410f4c:	cmc    
  410f4d:	push   es
  410f4e:	dec    esp
  410f4f:	push   ebp
  410f50:	and    cl,BYTE PTR [esi-0x265ae379]
  410f56:	push   0x8fbae9
  410f5b:	pop    esp
  410f5c:	inc    ebp
  410f5d:	lods   eax,DWORD PTR ds:[esi]
  410f5e:	stc    
  410f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f60:	ja     0x410f42
  410f62:	push   eax
  410f63:	sahf   
  410f64:	lods   eax,DWORD PTR ds:[esi]
  410f65:	xchg   ebx,eax
  410f66:	push   ss
  410f67:	sub    DWORD PTR [ecx+0x32014406],edi
  410f6d:	cmp    DWORD PTR [eax],eax
  410f6f:	add    eax,0x6c50d98d
  410f74:	cmp    eax,0xf776f9ad
  410f79:	sar    ch,0xf4
  410f7c:	retf   0x1430
  410f7f:	sbb    eax,0x2200cfaf
  410f84:	jl     0x410f2d
  410f86:	jae    0x410f9c
  410f88:	test   bl,0x70
  410f8b:	bound  ebp,QWORD PTR [ebp-0x41]
  410f8e:	cmp    DWORD PTR [edx+ebx*4+0x30],ebp
  410f92:	(bad)  
  410f93:	mov    al,ds:0xa2ac89e9
  410f99:	fst    DWORD PTR [esi+0x60]
  410f9c:	sub    eax,0xf726fda5
  410fa1:	fimul  DWORD PTR [ebx-0x1cf6d9c]
  410fa7:	push   ss
	...
  410fbc:	data16 fld st(5)
  410fbf:	fs xchg edx,eax
  410fc1:	xor    dh,bh
  410fc3:	add    BYTE PTR [ebx-0x63ffff76],bh
  410fc9:	add    ebx,DWORD PTR [ebp-0xb15498]
  410fcf:	inc    ebx
  410fd1:	or     esi,esi
  410fd3:	add    DWORD PTR [ebx+0x6bff6a01],ecx
  410fd9:	dec    esi
  410fda:	pop    edi
  410fdb:	pop    esi
  410fdc:	cmovns esi,DWORD PTR [edx-0x37]
  410fe0:	dec    esi
  410fe1:	xchg   DWORD PTR [eax],eax
  410fe3:	push   ebp
  410fe4:	out    0xff,eax
  410fe6:	sub    ah,0x58
  410fe9:	lea    eax,[eax]
  410feb:	add    BYTE PTR [edi-0x3df7a2fe],bh
  410ff1:	add    ch,dh
  410ff3:	mov    esp,DWORD PTR [ecx+0x5d4e8b9f]
  410ff9:	or     edi,ecx
  410ffb:	inc    eax
  410ffc:	lahf   
  410ffd:	je     0x410f82
  410fff:	shl    BYTE PTR [eax+0x77d23193],0xe3
  411006:	add    al,BYTE PTR [eax]
  411008:	sbb    al,0xf7
  41100a:	repnz mov ecx,ecx
  41100d:	and    DWORD PTR [edi-0x2e],0x34
  411011:	mov    al,BYTE PTR [eax]
  411013:	add    BYTE PTR [ebp+0x4189f8c8],al
  411019:	lock addr16 add al,0x3f
  41101d:	add    DWORD PTR [ebp+0xf8],eax
	...
  411033:	add    BYTE PTR [edx+0x4e],ch
  411036:	call   DWORD PTR [eax+0x65]
  411039:	add    dl,dh
  41103b:	(bad)  
  41103c:	stos   DWORD PTR es:[edi],eax
  41103d:	dec    esi
  41103e:	out    0x33,al
  411040:	mov    eax,0xa285008b
  411045:	ja     0x41105a
  411047:	mov    esp,DWORD PTR [edx+0xc02de4c]
  41104d:	dec    edi
  41104e:	jne    0x411060
  411050:	mov    ch,0xab
  411052:	test   ebx,edi
  411054:	mov    ebx,0x9d4fbf80
  411059:	xor    ebp,esi
  41105b:	jmp    FWORD PTR [edx-0x7c53e16]
  411061:	xor    al,0x8f
  411063:	dec    esp
  411064:	popf   
  411065:	inc    edx
  411066:	ret    0x7422
  411069:	imul   ebp,DWORD PTR [esi],0x8f391f00
  41106f:	test   BYTE PTR [ecx-0x1a013eb9],cl
  411075:	rol    BYTE PTR [edi+edi*8],cl
  411078:	enter  0x1708,0x40
  41107c:	mov    ch,0xb3
  41107e:	shl    DWORD PTR [ecx+ecx*8-0x30],0x50
  411083:	daa    
  411084:	mov    ch,0x38
  411086:	rcl    DWORD PTR [ecx+eiz*4],0x2e
  41108a:	inc    edx
  41108b:	add    BYTE PTR [esi],dh
  41108d:	loope  0x41104f
  41108f:	pop    ebp
  411090:	fsubp  st(7),st
  411092:	ret    
  411093:	or     esi,DWORD PTR [ebp+0xfeb9b9]
	...
  4110a9:	add    BYTE PTR [eax],al
  4110ab:	add    BYTE PTR [ecx+0x2af5f4aa],ch
  4110b1:	in     eax,0x74
  4110b3:	mov    WORD PTR [eax],?
  4110b5:	lods   eax,DWORD PTR ds:[esi]
  4110b6:	mov    edi,0xff111afe
  4110bb:	sti    
  4110bc:	adc    dh,BYTE PTR [esi+0x2080bf85]
  4110c2:	dec    eax
  4110c3:	add    DWORD PTR [ebx],0x38
  4110c6:	xor    al,0xe8
  4110c8:	push   cs
  4110c9:	mov    WORD PTR [bp+di],es
  4110cc:	es ret 0x54d5
  4110d0:	ds ffree st(0)
  4110d3:	je     0x411086
  4110d5:	sub    edx,eax
  4110d7:	imul   esi,DWORD PTR [ebp+0x7508367d],0xcbed0f8f
  4110e1:	cs pop ds
  4110e3:	test   dl,cl
  4110e5:	cs pushf 
  4110e7:	pop    ss
  4110e8:	sub    ch,bl
  4110ea:	fist   DWORD PTR [edx+0x1f]
  4110ed:	nop
  4110ee:	xchg   edi,eax
  4110ef:	enter  0x9bf1,0x67
  4110f3:	add    esi,DWORD PTR [ebp-0x26ea0971]
  4110f9:	test   DWORD PTR [edi-0xfae0ffd],esp
  4110ff:	add    esi,DWORD PTR [esi]
  411101:	sub    eax,0xb9a538df
  411106:	jmp    0xf3c58b60
  41110b:	adc    eax,0xbf1d8ff5
	...
  411124:	rcr    DWORD PTR [edi-0x2b],0x43
  411128:	mov    ch,0x52
  41112a:	out    0x76,eax
  41112c:	mov    al,0xc6
  41112e:	inc    ecx
  41112f:	adc    eax,0xbf3791df
  411134:	mov    eax,ds:0xb543f573
  411139:	sbb    dl,BYTE PTR [eax+0x142e3b83]
  41113f:	out    0xe7,eax
  411141:	dec    edi
  411142:	push   cs
  411143:	sub    eax,0xffffff91
  411146:	out    dx,al
  411147:	cwde   
  411148:	(bad)  
  411149:	xlat   BYTE PTR ds:[ebx]
  41114a:	push   0xffffffa4
  41114c:	adc    ch,BYTE PTR es:[eax-0x413a9ae0]
  411153:	mov    esi,0x43f56fa1
  411158:	mov    ch,0x14
  41115a:	sub    BYTE PTR [eax],bh
  41115c:	scas   eax,DWORD PTR es:[edi]
  41115d:	(bad)  
  41115e:	dec    esi
  41115f:	sbb    DWORD PTR [ebp+0x3603a785],esp
  411165:	pop    esi
  411166:	aas    
  411167:	mov    edi,ebx
  411169:	int    0x0
  41116b:	sub    dh,BYTE PTR [esi]
  41116d:	stos   BYTE PTR es:[edi],al
  41116e:	and    al,0xe5
  411170:	mov    ah,0xc5
  411172:	mov    DWORD PTR [eax],ebx
  411174:	mov    edx,0xd29408e5
  411179:	adc    al,bh
  41117b:	jecxz  0x4110ff
  41117d:	mov    eax,DWORD PTR [ecx+0x5ba2c410]
  411183:	mov    bh,0xaf
  411185:	push   ebx
  411186:	jb     0x41117a
	...
  41119c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41119e:	jmp    edx
  4111a0:	fst    QWORD PTR [edx+0x38eeeb6a]
  4111a6:	add    bl,BYTE PTR [edx]
  4111a8:	jno    0x411217
  4111aa:	xchg   ebx,ebp
  4111ac:	dec    edi
  4111ad:	xchg   ebx,eax
  4111ae:	(bad)
  4111b1:	pop    DWORD PTR [eax]
  4111b3:	jmp    0xd281ff1f
  4111b8:	mov    ch,0x10
  4111ba:	clc    
  4111bb:	repz mov ds:0xaab08165,al
  4111c1:	lods   eax,DWORD PTR ds:[esi]
  4111c2:	jmp    0x74dd2331
  4111c7:	mov    dh,0x31
  4111c9:	sub    BYTE PTR [ecx+ebp*8-0xe8b704a],al
  4111d0:	xor    DWORD PTR [eax],ebp
  4111d2:	es leave 
  4111d4:	mov    dh,0x8f
  4111d6:	jle    0x4111bd
  4111d8:	xor    DWORD PTR [eax],ebp
  4111da:	sub    cl,cl
  4111dc:	mov    dh,0x8f
  4111de:	jge    0x4111bd
  4111e0:	repz mov es,WORD PTR [ecx]
  4111e3:	jmp    0x362aa19e
  4111e8:	pop    es
  4111e9:	in     eax,dx
  4111ea:	aaa    
  4111eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111ec:	sbb    bl,BYTE PTR [ecx+0x6cf67c0d]
  4111f2:	jmp    0x5f2df98e
  4111f7:	add    BYTE PTR [esi+0x4f480098],bl
  4111fd:	ins    BYTE PTR es:[edi],dx
  4111fe:	and    al,0x4
	...
  411214:	into   
  411215:	popf   
  411216:	mov    dh,0x8
  411218:	or     DWORD PTR [ebp+0x64c6f981],eax
  41121e:	push   ecx
  41121f:	xor    ecx,DWORD PTR [ecx+edx*1+0x78190df9]
  411226:	lds    eax,FWORD PTR [edx]
  411228:	popf   
  411229:	nop
  41122a:	add    BYTE PTR [eax],al
  41122c:	(bad)  
  41122d:	int3   
  41122e:	cmp    ecx,0x7e3d64a6
  411234:	gs adc ecx,edi
  411237:	or     eax,0xf9813d22
  41123c:	sbb    DWORD PTR [eax+eax*1+0x7f8be800],edx
  411243:	stc    
  411244:	stos   DWORD PTR es:[edi],eax
  411245:	xor    edi,esi
  411247:	inc    DWORD PTR [edx]
  411249:	cmp    BYTE PTR [ecx-0x1cc3a07],al
  41124f:	jmp    DWORD PTR [ebx+0x4f02c56f]
  411255:	nop
  411256:	add    BYTE PTR [eax],al
  411258:	ja     0x411297
  41125a:	xor    eax,eax
  41125c:	push   ebp
  41125d:	aam    0x24
  41125f:	or     al,0x53
  411261:	add    eax,0x333740be
  411266:	mov    DWORD PTR [edx],0x901d
  41126c:	inc    edi
  41126d:	mov    DWORD PTR [ecx],esi
  41126f:	rol    BYTE PTR [edi-0x78],0x39
  411273:	inc    esp
  411274:	call   0x4c8910
	...
  411289:	add    BYTE PTR [eax],al
  41128b:	add    BYTE PTR [ebx+ebp*2-0x6b16f203],bl
  411292:	push   0x2
  411294:	hlt    
  411295:	test   BYTE PTR [edx],0x33
  411298:	mov    ch,0x76
  41129a:	inc    esp
  41129b:	mov    DWORD PTR [edi-0x8c03b77],esi
  4112a1:	and    DWORD PTR [edx],eax
  4112a3:	push   ebp
  4112a4:	fimul  DWORD PTR cs:[edi+0x33]
  4112a8:	dec    BYTE PTR [ebx]
  4112aa:	push   ebp
  4112ab:	cmp    BYTE PTR [eax-0x4abd2192],dh
  4112b1:	or     ebp,esp
  4112b3:	mov    ebp,0x3f6db5
  4112b8:	arpl   WORD PTR [ebp-0x7385beb],ax
  4112be:	add    DWORD PTR [eax],edi
  4112c0:	enter  0xde60,0x42
  4112c4:	mov    ch,0xa3
  4112c6:	adc    BYTE PTR [ecx+0x42c940b8],cl
  4112cc:	mov    ch,0xaf
  4112ce:	sbb    eax,0x4766bcc
  4112d3:	(bad)  
  4112d4:	mov    eax,0xb542dbe0
  4112d9:	aaa    
  4112da:	push   esp
  4112db:	dec    eax
  4112dd:	lods   al,BYTE PTR ds:[esi]
  4112de:	cmovo  esi,DWORD PTR [ebp-0x71f7b963]
  4112e5:	cmc    
  4112e6:	xor    eax,0x3870ed35
  4112eb:	sub    ch,bh
  4112ed:	and    BYTE PTR fs:[eax+0x0],cl
	...
  411301:	add    BYTE PTR [eax],al
  411303:	add    cl,al
  411305:	sub    BYTE PTR [edx+0xf],cl
  411308:	cmp    ah,dh
  41130a:	add    DWORD PTR [eax],eax
  41130c:	mov    ch,0xc1
  41130e:	mov    eax,ds:0x28387515
  411313:	and    al,0x1e
  411315:	push   edi
  411316:	jge    0x4112e7
  411318:	retf   
  411319:	js     0x41131f
  41131b:	push   0xffffffd0
  41131d:	or     eax,0x4305bf1b
  411322:	inc    edx
  411323:	add    BYTE PTR [edi-0x4d56f071],bl
  411329:	jmp    0x1fc1:0x8f751527
  411330:	ficom  WORD PTR [edx-0x303f8c72]
  411336:	out    0x29,eax
  411338:	mov    edi,0x77c8dff0
  41133d:	(bad)  
  41133e:	xchg   ebp,eax
  41133f:	clc    
  411340:	mul    DWORD PTR [edx+edi*8-0x58259ad5]
  411347:	add    eax,edx
  411349:	test   BYTE PTR [ebx+0x11],bh
  41134c:	jne    0x4112dd
  41134e:	rol    al,cl
  411350:	mov    edi,DWORD PTR es:[edi+0x2b]
  411354:	cli    
  411355:	iret   
  411356:	out    0x53,eax
  411358:	mov    ds:0xf510f384,al
  41135d:	(bad)
  411361:	into   
  411362:	out    0xf8,eax
  411364:	ja     0x41130a
  411366:	test   BYTE PTR [esi+0x0],0x0
	...
  411379:	add    BYTE PTR [eax],al
  41137b:	add    BYTE PTR [edx+0x2a],bh
  41137e:	mov    ebx,DWORD PTR [esi+ebp*2]
  411381:	into   
  411382:	out    0xae,eax
  411384:	mov    ecx,0xf7ceeff0
  411389:	(bad)
  41138d:	mov    ds:0xa377ff28,eax
  411392:	hlt    
  411393:	mov    BYTE PTR [ecx],al
  411395:	cwde   
  411396:	sbb    BYTE PTR [edi-0x23],dl
  411399:	(bad)  
  41139a:	test   DWORD PTR [ebx],0xd49ec2b5
  4113a0:	xor    DWORD PTR [edi+0x1d],ecx
  4113a3:	inc    edi
  4113a4:	ds (bad) 
  4113a6:	fisttp WORD PTR [esi+0xf9b79]
  4113ac:	mov    ah,0x8f
  4113ae:	out    0xab,eax
  4113b0:	pop    edi
  4113b1:	dec    ebx
  4113b2:	add    ecx,ebp
  4113b4:	mov    dh,0x2a
  4113b6:	je     0x411399
  4113b8:	cmp    edi,DWORD PTR [edx]
  4113ba:	(bad)  
  4113bb:	cld    
  4113bc:	mov    es,WORD PTR [eax+eax*2+0x741cfbe9]
  4113c3:	or     eax,0x4e0ca32e
  4113c8:	(bad)  
  4113c9:	out    0x11,eax
  4113cb:	test   eax,0x51ffdfb6
  4113d0:	mov    eax,0x39e5742a
  4113d5:	pop    esp
  4113d6:	add    ecx,edi
  4113d8:	mov    dh,0x8f
  4113da:	push   ecx
  4113db:	mov    edx,0xf4fdbe64
	...
  4113f4:	push   0x7e
  4113f6:	inc    eax
  4113f7:	jmp    0x342afd31
  4113fc:	mov    ds:0x3a75de9,eax
  411401:	retf   
  411402:	ret    0xb6f1
  411405:	ret    0x589
  411408:	call   0xb71a9019
  41140d:	mov    ds:0x7ff5720b,eax
  411412:	pushw  0x7e
  411415:	lds    esi,FWORD PTR [ebx-0x13]
  411418:	cmp    edx,esp
  41141a:	adc    bl,ch
  41141c:	add    eax,edx
  41141e:	mov    DWORD PTR [ecx+esi*4],edi
  411421:	rol    BYTE PTR [ebx-0x2bec5049],0xe9
  411428:	mov    dh,0x8f
  41142a:	mov    DWORD PTR [edi*4-0x493af4c9],ebx
  411431:	(bad)
  411435:	mov    edi,?
  411437:	call   0xdf1e78f2
  41143c:	xor    ebp,ebx
  41143e:	add    BYTE PTR [eax],al
  411440:	or     al,0x8d
  411442:	mov    DWORD PTR [ebp-0x4],ecx
  411445:	hlt    
  411446:	repnz fistp DWORD PTR [ecx*4+0x29984587]
  41144e:	(bad)  
  41144f:	jg     0xd41120e
  411455:	adc    bl,bl
  411457:	jne    0x411459
	...
  411469:	add    BYTE PTR [eax],al
  41146b:	add    ah,dl
  41146d:	movsx  ecx,BYTE PTR [edi]
  411470:	push   eax
  411471:	add    eax,0xfccfffe
  411476:	mov    esi,0x7528c675
  41147b:	or     al,0x10
  41147d:	or     DWORD PTR [ebx+0x5092e744],0xffffffff
  411484:	and    DWORD PTR [ecx-0x2f3e00aa],edx
  41148a:	push   ss
  41148b:	inc    eax
  41148c:	pushf  
  41148d:	adc    edx,eax
  41148f:	or     al,0x62
  411491:	in     eax,0x14
  411493:	mov    eax,0x8b00cc7f
  411498:	retf   0xb2f4
  41149b:	fistp  DWORD PTR [esp+ecx*4-0x6adfb75]
  4114a2:	jb     0x411429
  4114a4:	ja     0x411505
  4114a6:	dec    ebx
  4114a7:	mov    ecx,ecx
  4114a9:	xchg   edi,eax
  4114aa:	mov    esi,DWORD PTR [edi+eiz*2]
  4114ad:	outs   dx,BYTE PTR ds:[esi]
  4114ae:	cmp    DWORD PTR [edx+ecx*4-0x1a],0x69010f59
  4114b6:	or     eax,0x452b0c33
  4114bb:	cvtdq2ps xmm3,XMMWORD PTR [ecx]
  4114be:	mov    esi,0x2e79103
  4114c3:	ret    
  4114c4:	push   edi
  4114c5:	dec    edi
  4114c6:	jae    0x411514
  4114c8:	push   ebp
  4114c9:	ror    DWORD PTR [eax],1
  4114cb:	je     0x411482
  4114cd:	xor    BYTE PTR [eax+0x51],dl
	...
  4114e4:	sub    al,BYTE PTR [ebx+0x62c8ff0c]
  4114ea:	adc    al,BYTE PTR [eax-0x4b]
  4114ed:	mov    ch,0xc0
  4114ef:	or     esi,DWORD PTR [ebx+ebp*1+0x4988800a]
  4114f6:	add    dh,BYTE PTR [eax+esi*4-0x63]
  4114fa:	inc    ebp
  4114fb:	or     BYTE PTR [esi],dh
  4114fd:	repz or DWORD PTR [edx],eax
  411500:	pop    edi
  411501:	loop   0x41155c
  411503:	data16 cmp al,0x37
  411506:	lea    esi,[ebp+ebp*4-0x63]
  41150a:	cmp    eax,0x1f228fc
  41150f:	add    ah,BYTE PTR [ebp+0x61]
  411512:	sub    eax,0xd796310
  411517:	dec    esp
  411518:	stos   DWORD PTR es:[edi],eax
  411519:	test   BYTE PTR [ecx],0x83
  41151c:	icebp  
  41151d:	cmp    DWORD PTR [eax-0x1],edx
  411520:	enter  0x13c0,0x40
  411524:	mov    ch,0xb1
  411526:	ret    0xb7ea
  411529:	jmp    0xf23c73ef
  41152e:	retf   0xc1c1
  411531:	cmp    BYTE PTR [edi-0x75],cl
  411534:	cdq    
  411535:	or     cl,BYTE PTR [ebp+0x5739ad5c]
  41153b:	adc    BYTE PTR [esi],ch
  41153d:	out    dx,al
  41153e:	mov    edx,ss
  411540:	pop    ebp
  411541:	pop    DWORD PTR [eax+eax*1]
  411544:	mov    ch,0xac
  411546:	shl    DWORD PTR [eax+eax*1+0x0],0x0
	...
  41155b:	add    BYTE PTR [ecx-0x6b153dd7],bh
  411561:	jle    0x41151a
  411563:	je     0x41150a
  411565:	mov    cl,0xf0
  411567:	add    al,al
  411569:	xor    BYTE PTR [ecx+0x3d8fb174],bh
  41156f:	mov    ecx,0x43f5d3a1
  411574:	mov    ch,0x12
  411576:	lods   al,BYTE PTR ds:[esi]
  411577:	pop    es
  411578:	out    dx,al
  411579:	(bad)  
  41157a:	jecxz  0x4115ad
  41157c:	mov    dh,0x18
  41157e:	daa    
  41157f:	add    BYTE PTR [esi],ch
  411581:	dec    esi
  411582:	push   ds
  411583:	pop    ebp
  411584:	jo     0x4115d7
  411586:	in     al,0x3
  411588:	arpl   WORD PTR [edx],bx
  41158a:	js     0x4115dc
  41158c:	mov    esi,0xd631efbd
  411591:	sbb    ch,BYTE PTR [esi+0x56d14007]
  411597:	jle    0x41158d
  411599:	fwait
  41159a:	loope  0x41154c
  41159c:	bnd jb 0x4115c8
  41159f:	add    al,0xf4
  4115a1:	sbb    al,BYTE PTR [eax-0x54]
  4115a4:	mov    ah,0x1a
  4115a6:	xor    dl,BYTE PTR [eax-0x23]
  4115a9:	sbb    eax,0xbb50406
  4115ae:	sub    BYTE PTR [edi],ch
  4115b0:	mov    al,0x18
  4115b2:	sahf   
  4115b3:	or     esp,DWORD PTR [ebp-0x70]
  4115b6:	mov    dh,0x59
  4115b8:	jbe    0x4115d4
  4115ba:	mov    eax,ds:0x6902e1b
  4115bf:	adc    eax,DWORD PTR [eax]
	...
  4115d1:	add    BYTE PTR [eax],al
  4115d3:	add    dh,ah
  4115d5:	pop    eax
  4115d6:	fs ret 
  4115d8:	ret    
  4115d9:	cld    
  4115da:	sub    BYTE PTR [esi-0x47d4d90b],al
  4115e0:	push   es
  4115e1:	ins    BYTE PTR es:[edi],dx
  4115e2:	jmp    0x41156e
  4115e4:	in     eax,dx
  4115e5:	xchg   DWORD PTR [edx+0x5],esi
  4115e8:	pop    es
  4115e9:	daa    
  4115ea:	cmp    BYTE PTR [eax],al
  4115ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115ed:	pop    eax
  4115ee:	les    esi,FWORD PTR fs:[ebx-0xa765704]
  4115f5:	es stos BYTE PTR es:[edi],al
  4115f7:	add    BYTE PTR [ebp+0x553d0126],dh
  4115fd:	xchg   edx,eax
  4115fe:	mov    DWORD PTR [eax],esp
  411600:	mov    eax,ds:0x23b001a
  411605:	(bad)  
  411606:	or     dl,bl
  411608:	add    DWORD PTR [edx],edx
  41160a:	shl    esi,0x45
  41160d:	dec    edi
  41160e:	mov    WORD PTR [eax],gs
  411610:	push   0x50
  411612:	add    eax,0x24a263e9
  411617:	in     eax,0x3f
  411619:	xlat   BYTE PTR ds:[ebx]
  41161a:	sbb    BYTE PTR [edx-0x50],ah
  41161d:	sar    ebp,0x19
  411620:	lods   eax,DWORD PTR ds:[esi]
  411621:	(bad)  
  411622:	(bad)  
  411623:	ins    DWORD PTR es:[edi],dx
  411624:	icebp  
  411625:	xchg   esp,eax
  411626:	xchg   ebx,eax
  411627:	sub    BYTE PTR [edi+ecx*8],bh
  41162a:	std    
  41162b:	sub    esi,DWORD PTR [ebp-0x415f7671]
  411631:	sbb    al,BYTE PTR [eax]
  411633:	inc    esi
  411634:	cmp    DWORD PTR [edi+0x31],0x30
	...
  41164b:	add    BYTE PTR ds:0xf05c0de6,dh
  411651:	adc    al,BYTE PTR [eax+0x2e]
  411654:	mul    BYTE PTR [esi*2+0x4818bacd]
  41165b:	add    DWORD PTR [esi],edi
  41165d:	nop
  41165e:	push   edx
  41165f:	push   ss
  411660:	add    DWORD PTR [ecx+esi*1+0x20],edi
  411664:	xor    eax,0x705c0de5
  411669:	adc    al,0x40
  41166b:	(bad)  
  41166c:	je     0x4115ff
  41166e:	add    BYTE PTR [edx-0x8],ah
  411671:	xchg   DWORD PTR [ecx+0x18d54be8],ecx
  411677:	sbb    ch,BYTE PTR [eax+0x11]
  41167a:	shr    esi,0x45
  41167d:	push   eax
  41167e:	mov    WORD PTR [eax],gs
  411680:	and    dl,BYTE PTR [edx+0x57]
  411683:	cmp    DWORD PTR [esi+ebx*4],ebp
  411686:	adc    BYTE PTR [eax],al
  411688:	or     esp,DWORD PTR [esi]
  41168a:	jle    0x4116db
  41168c:	pushf  
  41168d:	mov    eax,DWORD PTR [edi+0x41f95447]
  411693:	ror    DWORD PTR [ecx+edx*4-0x79],cl
  411697:	jg     0x4116fd
  411699:	out    0x46,al
  41169b:	xor    BYTE PTR [edi],bl
  41169d:	stos   DWORD PTR es:[edi],eax
  41169e:	cmp    eax,0x34665b00
  4116a3:	adc    eax,0xc700d0e2
  4116a8:	retf   
  4116a9:	and    ebp,DWORD PTR [edi]
  4116ab:	scas   al,BYTE PTR es:[edi]
  4116ac:	fmul   QWORD PTR [ebx+0x47c5]
	...
  4116c2:	add    BYTE PTR [eax],al
  4116c4:	inc    eax
  4116c5:	aam    0xae
  4116c7:	inc    eax
  4116c8:	or     al,0xe6
  4116ca:	inc    esi
  4116cb:	inc    eax
  4116cc:	out    dx,eax
  4116cd:	stos   BYTE PTR es:[edi],al
  4116ce:	cmp    eax,0x44659b00
  4116d3:	jbe    0x411707
  4116d5:	rol    DWORD PTR [eax],1
  4116d7:	(bad)  
  4116d8:	sbb    ebx,ecx
  4116da:	nop
  4116db:	scas   al,BYTE PTR es:[edi]
  4116dc:	or     al,0x91
  4116de:	mov    edi,eax
  4116e0:	xor    dl,BYTE PTR [edx-0x1]
  4116e3:	je     0x41169d
  4116e5:	xchg   ebx,eax
  4116e6:	mov    ecx,DWORD PTR [eax-0x44]
  4116e9:	fnsave [ecx+0x24]
  4116ec:	les    edx,FWORD PTR [ecx]
  4116ee:	mov    esi,0x92f86d10
  4116f3:	mov    edi,0x8c2909c
  4116f8:	mov    WORD PTR [eax-0x6f5b3e00],fs
  4116fe:	xor    ecx,ecx
  411700:	push   DWORD PTR [eax]
  411702:	retf   
  411703:	inc    ebx
  411704:	pushf  
  411705:	retf   
  411706:	mov    eax,0xd1d720
  41170b:	push   esi
  41170c:	pop    es
  41170d:	jl     0x411698
  41170f:	repnz sbb eax,0xb5331bed
  411715:	dec    eax
  411716:	sub    dh,dh
  411718:	fsubr  DWORD PTR [edi-0x18499405]
  41171e:	mov    DWORD PTR [edi-0x47],ebp
  411721:	mov    ecx,0x1bf403c4
  411726:	(bad)  
  411727:	rol    DWORD PTR [eax],cl
	...
  411739:	add    BYTE PTR [eax],al
  41173b:	add    dh,dh
  41173d:	ss ss loope 0x41176d
  411741:	sbb    edx,DWORD PTR [esi]
  411743:	retf   
  411744:	jbe    0x41177c
  411746:	push   esp
  411747:	ret    
  411748:	push   esp
  411749:	sbb    cl,cl
  41174b:	inc    edx
  41174c:	mov    ch,0x53
  41174e:	xor    al,BYTE PTR [edx]
  411750:	mov    ch,0x36
  411752:	add    eax,0x236458c
  411757:	add    BYTE PTR [ebx-0x7b],ah
  41175a:	out    dx,eax
  41175b:	rol    DWORD PTR [ebx-0x4b],1
  41175e:	mov    bl,0xfe
  411760:	jp     0x411703
  411762:	retf   0xb98a
  411765:	mov    bl,0xe0
  411767:	retf   0x3676
  41176a:	icebp  
  41176b:	add    esi,DWORD PTR [eax]
  41176d:	xchg   esi,eax
  41176e:	mov    DWORD PTR [edx-0x4b],0xb932be99
  411775:	mov    bl,0xe4
  411777:	retf   0x3676
  41177a:	mov    edi,esi
  41177c:	in     al,0xcd
  41177e:	jg     0x411766
  411780:	mov    ah,0x49
  411782:	(bad)  
  411783:	mov    esp,0x3f7605
  411788:	out    0x34,al
  41178a:	xchg   DWORD PTR [ebx-0x7c],edx
  41178d:	test   BYTE PTR [ecx],0x42
  411790:	sub    al,0x35
  411792:	xchg   DWORD PTR [edi],ebx
  411794:	jle    0x41178c
  411796:	add    DWORD PTR [ecx+0x4968f],eax
  41179c:	mov    ch,0xb4
  41179e:	mov    edi,0x80
	...
  4117b3:	add    BYTE PTR [edi-0x70],bh
  4117b6:	push   esi
  4117b7:	add    dh,BYTE PTR [ebp+0x39f15c8f]
  4117bd:	xchg   esp,eax
  4117be:	jl     0x4117a3
  4117c0:	outs   dx,DWORD PTR ds:[esi]
  4117c1:	iret   
  4117c2:	out    0x88,eax
  4117c4:	mov    ch,0x5e
  4117c6:	sub    BYTE PTR [eax],al
  4117c8:	xchg   esi,eax
  4117c9:	dec    ecx
  4117ca:	sti    
  4117cb:	add    bh,BYTE PTR [esi]
  4117cd:	sub    BYTE PTR [ebx-0x64],ch
  4117d0:	mov    ch,0x16
  4117d2:	in     al,dx
  4117d3:	jbe    0x4117bf
  4117d5:	dec    esi
  4117d6:	sub    eax,DWORD PTR [esi+eiz*8]
  4117d9:	call   0x236ccff1
  4117de:	mov    ecx,0x6127e7ab
  4117e3:	cli    
  4117e4:	aaa    
  4117e5:	push   ecx
  4117e6:	in     al,dx
  4117e7:	or     BYTE PTR ds:0xb5409444,0xa3
  4117ee:	fwait
  4117ef:	mov    BYTE PTR [ecx-0x4abf6bbd],dh
  4117f5:	lock pop es
  4117f7:	leave  
  4117f8:	ja     0x411789
  4117fa:	sbb    al,bl
  4117fc:	xchg   edi,eax
  4117fd:	dec    ecx
  4117fe:	sbb    eax,ebx
  411800:	das    
  411801:	pop    eax
  411802:	cmp    DWORD PTR [ebx-0xf16cec9],ebp
  411808:	mov    dh,0x14
  41180a:	cwde   
  41180b:	shl    BYTE PTR [edi-0x71],0x96
  41180f:	lock mov ecx,0xb54018bf
  411815:	ror    DWORD PTR [edx-0x29],0x0
	...
  411829:	add    BYTE PTR [eax],al
  41182b:	add    BYTE PTR [esi+0x6af0e7ce],al
  411831:	push   ss
  411832:	in     al,0x7e
  411834:	ret    0xab56
  411837:	add    esi,ebp
  411839:	out    dx,al
  41183a:	jecxz  0x411804
  41183c:	test   DWORD PTR [edi+0x3775c272],0x4a85e201
  411846:	mov    ch,BYTE PTR [eax]
  411848:	pop    ebx
  411849:	repz pop eax
  41184b:	and    esp,DWORD PTR [esi]
  41184d:	dec    edi
  41184e:	loope  0x411836
  411850:	arpl   WORD PTR [edx-0x76],cx
  411853:	test   al,0x4c
  411855:	push   ss
  411856:	fmulp  st(6),st
  411858:	es dec edi
  41185a:	loope  0x411852
  41185c:	dec    ebx
  41185d:	dec    edx
  41185e:	mov    ch,BYTE PTR [eax-0x5ecd590]
  411864:	jns    0x4118b3
  411866:	push   esp
  411867:	bound  edx,QWORD PTR ds:0x59114fbf
  41186d:	ds inc edx
  41186f:	jmp    0xfbf193db
  411874:	jbe    0x411805
  411876:	mov    esp,DWORD PTR [ecx+ecx*2]
  411879:	sar    ch,cl
  41187b:	fdivr  QWORD PTR [esi]
  41187d:	add    BYTE PTR [eax-0x17],0x3d
  411881:	loop   0x4118f6
  411883:	loope  0x4118cc
  411885:	jnp    0x41183b
  411887:	(bad)  [esi-0x71]
  41188a:	jmp    0xf90c8c79
  41188f:	push   ecx
	...
  4118a4:	mov    BYTE PTR [esi+edi*8],ah
  4118a7:	push   esi
  4118a8:	imul   ecx,DWORD PTR [edi+0x2fb92ac7],0x22b6aad5
  4118b2:	adc    al,0x89
  4118b4:	mov    ds:0x392a00cf,eax
  4118b9:	arpl   WORD PTR [eax+0x8f720f],si
  4118bf:	mov    edx,0xfbac8433
  4118c4:	test   BYTE PTR [edi+0x6423be56],0xa4
  4118cb:	sti    
  4118cc:	test   BYTE PTR [edi-0x6095ff8d],0xfd
  4118d3:	ficomp WORD PTR [edi-0x73]
  4118d6:	push   esi
  4118d7:	jmp    DWORD PTR [ebx-0x554fc2f5]
  4118dd:	enter  0x0,0x11
  4118e1:	xchg   edx,eax
  4118e2:	call   0xff1fa47b
  4118e7:	test   BYTE PTR [ecx+ebx*2],cl
  4118ea:	(bad)  
  4118ec:	push   ecx
  4118ed:	cdq    
  4118ee:	fild   DWORD PTR [ebx+0x5c]
  4118f1:	js     0x4118a3
  4118f3:	inc    eax
  4118f4:	pop    esp
  4118f5:	push   edi
  4118f6:	add    eax,0xca2ab0
  4118fb:	add    DWORD PTR [edx+0x3cbed2dc],esp
  411901:	cmp    DWORD PTR [ebx+0x0],eax
  411904:	loop   0x4118e2
  411906:	(bad)  
  411907:	call   0x41190c
	...
  41191c:	(bad)  
  41191d:	(bad)  
  41191f:	jmp    edx
  411921:	mov    al,ds:0xa22ffff5
  411926:	(bad)  
  411927:	pop    edi
  411928:	stos   BYTE PTR es:[edi],al
  411929:	rol    cl,1
  41192b:	cmp    edx,eax
  41192d:	aaa    
  41192e:	add    dh,BYTE PTR [esi-0x16]
  411931:	inc    ecx
  411932:	inc    edx
  411933:	and    al,0xe0
  411935:	mov    BYTE PTR [eax-0x75],0x8c
  411939:	addr16 add al,0x33
  41193c:	mov    WORD PTR [ecx],es
  41193e:	psubsb mm2,QWORD PTR [ebp-0x23]
  411942:	(bad)  
  411943:	dec    edi
  411945:	cmp    dh,bh
  411947:	test   BYTE PTR [edi+0x4a],0x3
  41194b:	inc    esp
  41194c:	mov    al,0x23
  41194e:	pop    esp
  41194f:	ret    0x8cd0
  411952:	push   esi
  411953:	xor    edx,edx
  411955:	xor    esi,DWORD PTR [edx+0x24]
  411958:	cwde   
  411959:	data16 and BYTE PTR [edi-0x4b],dl
  41195d:	sub    DWORD PTR [eax+0x7b],edi
  411960:	rcr    DWORD PTR [edx],1
  411962:	pop    ebx
  411963:	mov    eax,0x23692
  411968:	popf   
  411969:	popa   
  41196a:	mov    dl,0xfe
  41196c:	sub    BYTE PTR [ebp-0x5156dbc3],0x5
  411973:	push   cs
  411974:	sti    
  411975:	ins    DWORD PTR es:[edi],dx
  411976:	cmp    BYTE PTR [eax*8+0x35ea7c4],ah
  41197d:	cmc    
	...
  411992:	add    BYTE PTR [eax],al
  411994:	add    BYTE PTR [esi+0x426182a0],ch
  41199a:	pop    eax
  41199b:	inc    eax
  41199d:	inc    esi
  41199e:	call   0x458a:0xafd9429c
  4119a5:	scas   eax,DWORD PTR es:[edi]
  4119a6:	xor    eax,0xb1431df8
  4119ab:	(bad)  
  4119ac:	sub    bh,BYTE PTR [edi+0x36b50104]
  4119b2:	ss adc dl,dh
  4119b5:	push   0xffffffa0
  4119b7:	lahf   
  4119b8:	xor    BYTE PTR [esi+0x4],0xc7
  4119bc:	jo     0x411964
  4119be:	js     0x411a0e
  4119c0:	jne    0x4119f8
  4119c2:	popf   
  4119c3:	or     eax,0xb3a06af2
  4119c8:	xor    dh,0x1
  4119cb:	(bad)  
  4119cc:	jo     0x411994
  4119ce:	fs dec esi
  4119d0:	jne    0x411a08
  4119d2:	push   ebp
  4119d3:	xor    edi,esi
  4119d5:	scas   al,BYTE PTR es:[edi]
  4119d6:	dec    ebp
  4119d7:	cld    
  4119d8:	cmp    al,0xeb
  4119da:	adc    DWORD PTR [ebx],edi
  4119dc:	(bad)  
  4119dd:	xor    BYTE PTR [eax+0x236b41a],cl
  4119e3:	mov    esi,DWORD PTR [eax+0x2e]
  4119e6:	test   edi,ebx
  4119e8:	lds    ecx,FWORD PTR [edi-0x385eb890]
  4119ee:	push   0x2f
  4119f0:	lds    edx,FWORD PTR [ecx+0x2a92e19c]
  4119f6:	push   cs
  4119f7:	mov    cl,0x0
	...
  411a09:	add    BYTE PTR [eax],al
  411a0b:	add    BYTE PTR [ebx-0x4afd1817],dl
  411a11:	(bad)  
  411a12:	jae    0x411a27
  411a14:	jp     0x4119eb
  411a16:	add    esp,DWORD PTR [ebx+ebp*8-0x31]
  411a1a:	out    0xc8,eax
  411a1c:	stc    
  411a1d:	pop    ds
  411a1e:	pushf  
  411a1f:	inc    eax
  411a20:	cmc    
  411a21:	(bad)  
  411a22:	rol    BYTE PTR [ecx],cl
  411a24:	jp     0x4119fb
  411a26:	ret    
  411a27:	ja     0x411a14
  411a29:	iret   
  411a2a:	out    0xc8,eax
  411a2c:	stc    
  411a2d:	pop    ds
  411a2e:	mov    BYTE PTR [eax-0xb],al
  411a31:	(bad)
  411a35:	(bad)
  411a39:	nop
  411a3a:	xor    esp,edx
  411a3c:	aas    
  411a3d:	push   ebx
  411a3e:	rol    DWORD PTR [esi+0x29],cl
  411a41:	adc    esp,DWORD PTR [eax+0x7f73ab02]
  411a47:	pop    edi
  411a48:	sbb    BYTE PTR [edi],bl
  411a4a:	(bad)  
  411a4b:	jl     0x411a47
  411a4d:	xlat   BYTE PTR ds:[ebx]
  411a4e:	call   0xcad0cf55
  411a53:	mov    ebx,0x15fd47bf
  411a58:	cs int 0xdb
  411a5b:	sbb    eax,0x7acdb795
  411a60:	mov    dh,0xb8
  411a62:	jo     0x411ab2
  411a64:	loope  0x411a8e
  411a66:	je     0x411a6b
  411a68:	mov    ch,0x8f
  411a6a:	push   ebp
  411a6b:	inc    esi
  411a6c:	mov    ebp,0xf4bb6f
	...
  411a81:	add    BYTE PTR [eax],al
  411a83:	add    BYTE PTR [ecx],dh
  411a85:	cmp    esi,DWORD PTR [ebp+0xd4cb09]
  411a8b:	loope  0x411ac3
  411a8d:	mov    ds:0x1dde4127,eax
  411a92:	(bad)  
  411a93:	es enter 0x3194,0x3b
  411a98:	out    dx,eax
  411a99:	es lock ins BYTE PTR es:[edi],dx
  411a9c:	and    BYTE PTR [ebx-0x774f44e9],0x58
  411aa3:	adc    DWORD PTR [eax+0x1c],esi
  411aa6:	(bad)  
  411aa7:	(bad)  
  411aa8:	dec    bl
  411aaa:	or     al,0xe6
  411aac:	cld    
  411aad:	fisub  WORD PTR [esi+0x6a]
  411ab0:	jbe    0x411b20
  411ab2:	data16 jo 0x411a72
  411ab5:	mov    eax,0xd3de4ae9
  411aba:	adc    BYTE PTR [edx-0x63],ah
  411abd:	adc    al,0xed
  411abf:	(bad)  
  411ac0:	cld    
  411ac1:	mov    ecx,DWORD PTR [ebx-0x3f9d06fb]
  411ac7:	push   0x294dfe13
  411acc:	mov    cl,0x8e
  411ace:	xchg   ebx,eax
  411acf:	test   eax,0x6a488fcf
  411ad4:	push   ecx
  411ad5:	mov    WORD PTR [ecx-0x72d85357],es
  411adb:	xchg   edi,eax
  411adc:	dec    edx
  411add:	sbb    eax,0x8f1124f7
  411ae2:	data16 neg BYTE PTR [eax+0x73092]
	...
  411af9:	add    BYTE PTR [eax],al
  411afb:	add    BYTE PTR [eax+0x40cd7395],al
  411b01:	ror    DWORD PTR [eax],cl
  411b03:	jmp    0x411aaf
  411b05:	mov    es,WORD PTR [ebx-0x767552be]
  411b0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b0c:	loop   0x411ac1
  411b0e:	adc    ebp,0xd5211d6e
  411b14:	shl    DWORD PTR [ebx],cl
  411b16:	inc    esp
  411b17:	add    ah,al
  411b19:	sbb    DWORD PTR [edx+0x11],esi
  411b1c:	fs xchg ebx,eax
  411b1e:	(bad)  
  411b1f:	inc    DWORD PTR [ebx-0x6b8bff45]
  411b25:	test   eax,0x919cffdd
  411b2a:	add    WORD PTR [ebx+0x4ff8749a],bx
  411b31:	out    dx,al
  411b32:	inc    esp
  411b33:	adc    BYTE PTR [edi+0x4b],ah
  411b36:	jb     0x4006c8
  411b3c:	and    esp,ebx
  411b3e:	inc    esp
  411b3f:	or     BYTE PTR [edx+ecx*8+0x74],bl
  411b43:	sbb    ecx,ebx
  411b45:	in     eax,0x71
  411b47:	adc    eax,0x8d0cc7e7
  411b4c:	nop
  411b4d:	arpl   si,di
  411b4f:	iretw  
  411b51:	sub    ebx,DWORD PTR [esi]
  411b53:	jne    0x411bac
  411b55:	adc    ch,cl
  411b57:	add    al,BYTE PTR [edx+0x4febf456]
  411b5d:	call   0x0:0xc44
	...
  411b74:	aas    
  411b75:	fdivr  st(3),st
  411b77:	inc    ebp
  411b78:	adc    al,0x93
  411b7a:	mov    WORD PTR [eax],sp
  411b7d:	popa   
  411b7e:	je     0x411b93
  411b80:	adc    esp,DWORD PTR [esi+0x74458305]
  411b86:	jb     0x411b93
  411b88:	lahf   
  411b89:	jmp    0x411c02
  411b8b:	ja     0x411ba7
  411b8d:	adc    al,cl
  411b8f:	loopne 0x411b4b
  411b91:	call   0xc2c7:0xcb4a8b05
  411b98:	adc    BYTE PTR [ecx+0x11808b53],dl
  411b9e:	jmp    0xb584:0xf505958
  411ba5:	jb     0x411ba8
  411ba7:	add    BYTE PTR [ebp+0x310eb3b3],dh
  411bad:	imul   eax,DWORD PTR [ecx],0x0
  411bb0:	mov    ch,0xa7
  411bb2:	jmp    0x522a82fb
  411bb7:	je     0x411b88
  411bb9:	mov    ebx,0x104ac40
  411bbe:	add    cl,BYTE PTR [ebp-0x17ab3110]
  411bc4:	ficomp DWORD PTR [edi]
  411bc6:	add    BYTE PTR [eax],al
  411bc8:	cmp    BYTE PTR [esi+0x38],ah
  411bcb:	pop    es
  411bcc:	pop    ds
  411bcd:	xchg   ebx,eax
  411bce:	pushf  
  411bcf:	mov    ds:0x830226b5,eax
  411bd4:	jle    0x411c0b
  411bd6:	inc    DWORD PTR [esi+0x0]
	...
  411bec:	dec    eax
  411bed:	add    al,BYTE PTR es:[eax]
  411bf0:	push   0xffffff8a
  411bf2:	lea    esi,[ebp-0x74fb99da]
  411bf8:	cmc    
  411bf9:	cs out 0x7e,eax
  411bfc:	iret   
  411bfd:	dec    edx
  411bfe:	loopne 0x411bea
  411c00:	retf   
  411c01:	mov    eax,ds:0xcf4e0444
  411c06:	jg     0x411c2d
  411c08:	mov    ch,0x51
  411c0a:	aaa    
  411c0b:	punpckhdq mm4,QWORD PTR [esi+0x14]
  411c0f:	jmp    0x411bac
  411c11:	and    eax,0x1c73f75
  411c16:	sbb    eax,0x6e620f
  411c1b:	div    ah
  411c1d:	daa    
  411c1e:	ss push es
  411c20:	mov    edx,0xe14445d
  411c25:	outs   dx,DWORD PTR ds:[esi]
  411c26:	ja     0x411be8
  411c28:	hlt    
  411c29:	or     eax,0xabfd8300
  411c2e:	xchg   edi,eax
  411c2f:	dec    esi
  411c30:	ss (bad) 
  411c32:	cmc    
  411c33:	lods   al,BYTE PTR ds:[esi]
  411c34:	iret   
  411c35:	retf   0x4455
  411c38:	test   eax,0xc205db93
  411c3d:	in     al,0xa7
  411c3f:	adc    eax,0xbc6a5cde
  411c44:	ret    
  411c45:	daa    
  411c46:	add    ebp,edi
  411c48:	add    ecx,edi
  411c4a:	rcr    DWORD PTR [eax+0x44768ae7],1
	...
  411c64:	leave  
  411c65:	es aad 0xfc
  411c68:	imul   ecx,eax,0xffffffff
  411c6b:	add    BYTE PTR [ebp+0x9],ch
  411c6e:	out    0x98,al
  411c70:	fst    DWORD PTR [edx-0x1a]
  411c73:	adc    ebp,esi
  411c75:	iret   
  411c76:	out    0x98,eax
  411c78:	mov    eax,ds:0xa944368a
  411c7d:	and    bl,BYTE PTR [eax]
  411c7f:	cdq    
  411c80:	ret    0x368a
  411c83:	inc    esp
  411c84:	mov    ecx,0x4e07d050
  411c89:	xchg   ebx,eax
  411c8a:	out    dx,al
  411c8b:	je     0x411c27
  411c8d:	mov    ebp,DWORD PTR [eax-0x37f14665]
  411c93:	add    bh,BYTE PTR [edx+edx*4]
  411c96:	cli    
  411c97:	ret    
  411c98:	ins    DWORD PTR es:[edi],dx
  411c99:	dec    edi
  411c9a:	push   edx
  411c9b:	scas   eax,DWORD PTR es:[edi]
  411c9c:	dec    edi
  411c9d:	mov    es,WORD PTR [ecx-0x52]
  411ca0:	mov    cl,BYTE PTR [eax-0x55]
  411ca3:	xchg   ebx,eax
  411ca4:	enter  0x27de,0x4
  411ca8:	int    0xde
  411caa:	daa    
  411cab:	add    al,0xe7
  411cad:	fisub  WORD PTR [edi]
  411caf:	add    al,0xcd
  411cb1:	fisub  WORD PTR [edi]
  411cb3:	add    al,0xcb
  411cb5:	fisub  WORD PTR [edi]
  411cb7:	add    al,0xd0
  411cb9:	fisub  WORD PTR [edi]
  411cbb:	add    al,0x59
  411cbd:	fiadd  WORD PTR [eax]
  411cbf:	sub    DWORD PTR [ecx-0x4ed64e54],edi
  411cc5:	sahf   
  411cc6:	mov    cl,0xa9
	...
  411cdc:	mov    dh,0x98
  411cde:	mov    cl,0xa9
  411ce0:	mov    dh,0x6c
  411ce2:	mov    cl,0xa9
  411ce4:	mov    dh,0xe
  411ce6:	mov    dl,0xa9
  411ce8:	mov    dh,0x6
  411cea:	mov    dl,0xa9
  411cec:	mov    dh,0xfe
  411cee:	mov    cl,0xa9
  411cf0:	mov    dh,0xfb
  411cf2:	mov    cl,0xa9
  411cf4:	mov    dh,0xc2
  411cf6:	mov    cl,0xa9
  411cf8:	mov    dh,0xc4
  411cfa:	mov    DWORD PTR ds:0xba112635,edx
  411d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d01:	xor    eax,0x37c3d157
  411d06:	fild   QWORD PTR [edx+0x4737a4b6]
  411d0c:	mov    dh,0x3a
  411d0e:	inc    edx
  411d0f:	jmp    0x4d5537f4
  411d14:	(bad)  
  411d15:	iret   
  411d16:	add    BYTE PTR [ecx+0x2adf37bb],dh
  411d1c:	mov    ecx,0xb4a71ea4
  411d21:	adc    eax,0x1ab92acb
  411d26:	(bad)  
  411d27:	in     al,0x1e
  411d29:	ds inc edx
  411d2b:	jmp    0xe981e65a
  411d30:	mov    ecx,0x7a97dc7b
  411d35:	pop    esi
  411d37:	in     al,0xfe
  411d39:	cmp    eax,DWORD PTR [edx-0x17]
  411d3c:	mov    ecx,0xf4fdc1
	...
  411d51:	add    BYTE PTR [eax],al
  411d53:	add    BYTE PTR [edx-0x6e16bf80],al
  411d59:	mov    ebx,0x237c60f0
  411d5e:	mov    BYTE PTR [eax],al
  411d60:	fldpi  
  411d62:	test   DWORD PTR [ebp+0x7b],ebx
  411d65:	push   ss
  411d66:	mov    ah,0x45
  411d68:	imul   ebx,DWORD PTR [edx-0x2dbf07f4],0x0
  411d6f:	push   ebx
  411d70:	pop    ebx
  411d71:	pop    ds
  411d72:	or     DWORD PTR [ebp-0x17b221ef],0xfffde1b2
  411d7c:	push   eax
  411d7d:	push   ebx
  411d7e:	jne    0x411d8b
  411d80:	jp     0x411d52
  411d82:	std    
  411d83:	cmp    cl,0xe4
  411d86:	push   DWORD PTR [ecx-0x38]
  411d89:	clc    
  411d8a:	push   DWORD PTR [edx-0xfbb6763]
  411d90:	les    eax,FWORD PTR [ebp-0x14]
  411d93:	add    BYTE PTR [edi+eax*8-0x23b83c76],cl
  411d9a:	ret    0x1755
  411d9d:	clc    
  411d9e:	sub    ah,0x60
  411da1:	ret    0xdb31
  411da4:	and    ah,BYTE PTR ds:0xd0cad81d
  411daa:	add    BYTE PTR [ebp+0x25],dh
  411dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dae:	std    
  411daf:	fimul  WORD PTR [edi+0x61ff5693]
  411db5:	mov    ecx,0x400f
	...
  411dca:	add    BYTE PTR [eax],al
  411dcc:	pop    esp
  411dcd:	and    eax,0xd21ad81d
  411dd2:	add    BYTE PTR [ebp+0x5a],dh
  411dd5:	dec    edi
  411dd6:	add    eax,0xd206fa
  411ddb:	jmp    DWORD PTR [ebx-0x70]
  411dde:	clc    
  411ddf:	aam    0xdf
  411de1:	xchg   ebx,eax
  411de2:	in     al,dx
  411de3:	dec    edi
  411de4:	int3   
  411de5:	xchg   ebx,eax
  411de6:	xchg   DWORD PTR ds:0x434758,ebx
  411dec:	mov    ch,0xe8
  411dee:	add    al,bl
  411df0:	jmp    0x411e57
  411df2:	add    al,0x1
  411df4:	imul   edx,DWORD PTR [ecx],0x11
  411df7:	lods   al,BYTE PTR ds:[esi]
  411df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411df9:	data16 add al,0x6a
  411dfc:	lds    ebp,FWORD PTR [edi-0x73c313b8]
  411e02:	mov    ah,0x88
  411e04:	cmp    BYTE PTR [edx-0x2725a387],0xfa
  411e0b:	mov    ch,0x78
  411e0d:	sar    DWORD PTR [esi+0xc],0xcd
  411e11:	bound  eax,QWORD PTR [esi+0x0]
  411e14:	shr    bp,1
  411e17:	sub    BYTE PTR [eax],0xf4
  411e1a:	xchg   ebp,eax
  411e1b:	dec    edi
  411e1c:	popf   
  411e1d:	or     BYTE PTR [ebp-0x3e4d5501],dh
  411e23:	jae    0x411de8
  411e25:	aad    0x78
  411e27:	inc    esp
  411e28:	popf   
  411e29:	(bad)  
  411e2a:	stos   BYTE PTR es:[edi],al
  411e2b:	je     0x411dea
  411e2d:	scas   eax,DWORD PTR es:[edi]
  411e2e:	xor    al,bh
	...
  411e44:	sbb    eax,0xf5000230
  411e49:	xchg   ecx,eax
  411e4a:	xor    ah,dh
  411e4c:	jp     0x411e91
  411e4e:	ret    0xf514
  411e51:	es xchg edi,esi
  411e54:	mov    ah,0xa2
  411e56:	or     al,0xfe
  411e58:	clc    
  411e59:	xor    DWORD PTR [ebp+0x34245a7c],eax
  411e5f:	mov    esi,0x74a755eb
  411e64:	mov    ebp,0xab500e49
  411e69:	data16 add al,0x83
  411e6c:	jno    0x411e98
  411e6e:	popf   
  411e6f:	add    DWORD PTR [esi+0x27],esp
  411e72:	ja     0x411eb8
  411e74:	sbb    DWORD PTR [esi-0x19],ecx
  411e77:	in     eax,dx
  411e78:	mov    ch,0x8f
  411e7a:	out    0x49,eax
  411e7c:	das    
  411e7d:	dec    esp
  411e7e:	inc    ebx
  411e7f:	mov    ebx,0x4ee792f4
  411e84:	sub    ebp,DWORD PTR ds:[ebx-0x68]
  411e88:	(bad)  
  411e89:	rol    DWORD PTR [ebp-0x4],0xe1
  411e8d:	retf   
  411e8e:	out    0x51,eax
  411e90:	cli    
  411e91:	xchg   ecx,eax
  411e92:	(bad)  
  411e94:	ja     0x411e25
  411e96:	retf   
  411e97:	add    dh,BYTE PTR [ebp+0x450f668f]
  411e9d:	jge    0x411e46
  411e9f:	add    edi,DWORD PTR [eax]
  411ea1:	dec    edi
  411ea2:	out    0x7f,eax
  411ea4:	mov    esi,0x3e78e
	...
  411eb9:	add    BYTE PTR [eax],al
  411ebb:	add    BYTE PTR [edi-0x73],cl
  411ebe:	mov    al,ds:0x1477a9ea
  411ec3:	inc    ebp
  411ec4:	mov    ch,0x86
  411ec6:	ins    BYTE PTR es:[edi],dx
  411ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ec8:	stos   BYTE PTR es:[edi],al
  411ec9:	pop    ss
  411eca:	call   0xab7ef332
  411ecf:	add    esp,esi
  411ed1:	inc    ecx
  411ed2:	fadd   QWORD PTR [edx]
  411ed4:	or     dl,al
  411ed6:	dec    eax
  411ed7:	clc    
  411ed8:	popa   
  411ed9:	shl    edi,cl
  411edb:	test   BYTE PTR [edx+0x55e47c8d],cl
  411ee1:	adc    BYTE PTR [eax*2+0x2f295ab5],0xbc
  411ee9:	dec    ebp
  411eea:	in     eax,0x3
  411eec:	mov    bl,dl
  411eee:	out    0x2,eax
  411ef0:	dec    esi
  411ef1:	xchg   esp,eax
  411ef2:	push   0xffffffab
  411ef4:	mov    ch,0x9b
  411ef6:	jmp    0x411ee4
  411ef8:	jne    0x411e97
  411efa:	pop    edx
  411efb:	jl     0x411eae
  411efd:	(bad)  
  411efe:	pushf  
  411eff:	inc    esp
  411f00:	mov    ch,0x2a
  411f02:	push   ebx
  411f03:	test   DWORD PTR [edx],ebp
  411f05:	mov    es,WORD PTR [eax]
  411f07:	cmp    al,0xd7
  411f09:	lock adc BYTE PTR [ecx+edi*2-0x3454c671],dl
  411f11:	mov    dh,al
  411f13:	in     al,0xb6
  411f15:	cmp    al,0x42
  411f17:	jmp    0x6a964926
  411f1c:	dec    esi
  411f1d:	nop
  411f1e:	jae    0x411f56
	...
  411f34:	test   DWORD PTR [ebx-0x70866c00],0x59748206
  411f3e:	mov    edi,0x15ae2f5
  411f43:	fmul   st(4),st
  411f45:	out    dx,eax
  411f46:	or     al,0x34
  411f48:	jns    0x411ed9
  411f4a:	adc    DWORD PTR [ecx-0x35],0xca100f9b
  411f51:	xchg   bl,dl
  411f53:	stos   BYTE PTR es:[edi],al
  411f54:	mov    dh,0x9c
  411f56:	sub    al,0x27
  411f58:	mov    bl,0x16
  411f5a:	aad    0xaa
  411f5c:	mov    dh,0x92
  411f5e:	jmp    0x75f576d
  411f63:	pushf  
  411f64:	lods   al,BYTE PTR ds:[esi]
  411f65:	lock adc BYTE PTR [ecx+edi*8],dh
  411f69:	(bad)  
  411f6a:	cmp    DWORD PTR [ebx],ebp
  411f6c:	fisttp DWORD PTR [eax+0x3cb6e4c6]
  411f72:	inc    edx
  411f73:	jmp    0x6a4e48f3
  411f78:	push   ds
  411f79:	(bad)  
  411f7a:	jae    0x411f6a
  411f7c:	je     0x411f09
  411f7e:	add    BYTE PTR [ecx+edi*8],dl
  411f81:	pop    DWORD PTR ds:0x423cc588
  411f87:	jmp    0xea3f356d
  411f8c:	mov    dh,0x5a
  411f8e:	enter  0x1f2,0x1d
  411f92:	rol    BYTE PTR [eax],1
  411f94:	scas   eax,DWORD PTR es:[edi]
  411f95:	shl    DWORD PTR [ebp+0xff],cl
	...
  411fab:	add    BYTE PTR [edx+edx*4],bl
  411fae:	add    BYTE PTR [esi-0x6b],ah
  411fb1:	sbb    BYTE PTR [eax],al
  411fb3:	aad    0xcf
  411fb5:	mov    esp,DWORD PTR [esi+0x39]
  411fb8:	or     DWORD PTR [esi+0x651c43d6],ecx
  411fbe:	adc    esp,DWORD PTR [esi-0x1b]
  411fc1:	jle    0x411fe1
  411fc3:	(bad)  
  411fc4:	iret   
  411fc5:	mov    esi,DWORD PTR [ebx+0xc]
  411fc8:	ins    BYTE PTR es:[edi],dx
  411fc9:	xchg   esi,edx
  411fcb:	inc    ebx
  411fcc:	fsubr  QWORD PTR [edi-0x74602aff]
  411fd2:	jmp    0x4c173dd
  411fd7:	aad    0xf
  411fd9:	xchg   edx,eax
  411fda:	mov    eax,DWORD PTR [ebp-0x70]
  411fdd:	mov    ebx,0x814815fd
  411fe2:	inc    eax
  411fe3:	add    dl,bh
  411fe5:	cwde   
  411fe6:	inc    esp
  411fe7:	fsub   st(2),st
  411fe9:	mov    al,0x3
  411feb:	aad    0x5f
  411fed:	xchg   ecx,eax
  411fee:	mov    al,0x1
  411ff0:	mul    DWORD PTR [eax]
  411ff2:	xor    edx,edx
  411ff4:	lahf   
  411ff5:	push   ecx
  411ff6:	data16 sbb al,0x8d
  411ff9:	xchg   ecx,eax
  411ffa:	add    BYTE PTR [esi-0x1],ah
  411ffd:	xchg   ecx,eax
  411ffe:	rol    DWORD PTR [ebx-0x64],cl
  412001:	mov    edi,0x8bb3ffb8
  412006:	add    BYTE PTR [esi+0x4],dl
  412009:	jg     0x41200b
  41200b:	aad    0x1f
  41200d:	xchg   ecx,eax
  41200e:	mov    BYTE PTR ds:0x0,dl
	...
  412024:	pop    eax
  412025:	inc    eax
  412026:	inc    ebx
  412027:	add    BYTE PTR [edx],bh
  412029:	mov    dl,0x3
  41202b:	aad    0x8f
  41202d:	mov    edi,ebp
  41202f:	adc    eax,0x40858c
  412034:	mov    ch,0xa9
  412036:	mov    ebp,0x43e6870b
  41203b:	leave  
  41203c:	jbe    0x411fe5
  41203e:	call   0x4ab3432
  412043:	add    BYTE PTR [eax-0x4a41b3ed],ah
  412049:	add    eax,0xed830043
  41204e:	adc    BYTE PTR [edi+eiz*4-0x377ffb9a],ah
  412055:	test   bl,0x42
  412058:	mov    ch,0x26
  41205a:	xor    DWORD PTR [edi],edx
  41205c:	or     eax,0xf2fea414
  412061:	stos   BYTE PTR es:[edi],al
  412062:	shl    DWORD PTR [ebx-0x45],0xa9
  412066:	loopne 0x41205b
  412068:	add    ebp,DWORD PTR [edx+0x4]
  41206b:	add    bl,dh
  41206d:	and    esi,DWORD PTR [edx+0x52676dd]
  412073:	push   esi
  412074:	retf   0x5613
  412077:	adc    DWORD PTR [ebp+0x26],esi
  41207a:	inc    esp
  41207b:	mov    al,ds:0x4273b5
  412080:	jbe    0x412028
  412082:	call   0x22aac76
	...
  41209b:	add    BYTE PTR [eax],ch
  41209d:	sbb    al,0x4c
  41209f:	mov    esi,0x42cdb5
  4120a4:	jmp    0x41211b
  4120a6:	adc    BYTE PTR [edi+eiz*4-0x3f7ffe1a],ah
  4120ad:	jbe    0x412072
  4120af:	inc    edx
  4120b0:	mov    ch,0x26
  4120b2:	xor    DWORD PTR [edi],edx
  4120b4:	pop    ebp
  4120b5:	xlat   BYTE PTR ds:[ebx]
  4120b6:	mov    ds:0xc1a26afe,eax
  4120bb:	jae    0x412070
  4120bd:	test   eax,0x8f7bf3e0
  4120c2:	sub    al,BYTE PTR [esi*4+0x68b3e54d]
  4120c9:	shl    bh,1
  4120cb:	add    ch,bl
  4120cd:	adc    al,0xf5
  4120cf:	push   edi
  4120d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120d1:	iret   
  4120d2:	out    0x45,eax
  4120d4:	push   ebp
  4120d5:	mov    edx,DWORD PTR [ecx+eax*2+0x791d50b5]
  4120dc:	push   cs
  4120dd:	mov    esi,0x56fff11a
  4120e2:	add    al,0xb4
  4120e4:	lock iret 
  4120e6:	out    0x2e,eax
  4120e8:	(bad)  
  4120e9:	mov    ebp,0xcfe20455
  4120ee:	out    0x4d,eax
  4120f0:	cli    
  4120f1:	jns    0x41213e
  4120f3:	adc    dh,BYTE PTR [ebp-0x71]
  4120f6:	mov    edi,0x2b34e506
  4120fb:	add    al,0x68
  4120fd:	jge    0x41217e
  4120ff:	pushf  
	...
  412114:	fst    DWORD PTR [ebx]
  412116:	adc    BYTE PTR [bp+si],0x9b
  41211a:	in     al,dx
  41211b:	jp     0x4120c6
  41211d:	sbb    esi,DWORD PTR [esi]
  41211f:	inc    ecx
  412120:	mov    ch,0x4d
  412122:	in     eax,0xb3
  412124:	fmul   st,st(7)
  412126:	out    0x2,eax
  412128:	or     edx,DWORD PTR [ebx]
  41212a:	aad    0x57
  41212c:	(bad)  
  41212d:	iret   
  41212e:	out    0x45,eax
  412130:	or     eax,0xb5439f1c
  412135:	or     ch,al
  412137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412138:	xchg   ebx,eax
  412139:	jge    0x4121b6
  41213b:	adc    dh,ch
  41213d:	(bad)  
  41213e:	rol    al,cl
  412140:	push   es
  412141:	pop    ecx
  412142:	jg     0x412157
  412144:	in     eax,0xcf
  412146:	out    0x53,eax
  412148:	jb     0x4121c7
  41214a:	repz adc ebp,esi
  41214d:	pop    DWORD PTR [eax]
  41214f:	mov    dl,0x75
  412151:	lahf   
  412152:	daa    
  412153:	pop    esp
  412154:	mov    ds:0xe1f65013,al
  412159:	sbb    DWORD PTR [esi],0xffffffb7
  41215c:	cmc    
  41215d:	(bad)  
  41215e:	dec    edi
  41215f:	out    0xd1,al
  412161:	sbb    DWORD PTR [edi+esi*4],0xfffffff5
  412165:	(bad)  
  412166:	dec    edi
  412167:	(bad)  
  412168:	and    eax,DWORD PTR [ebx+0x12b12ad3]
  41216e:	xor    al,0xe5
  412170:	repz int 0x0
  412173:	scas   al,BYTE PTR es:[edi]
  412174:	push   es
  412175:	or     al,0xc1
  412177:	sbb    al,0x0
	...
  412189:	add    BYTE PTR [eax],al
  41218b:	add    BYTE PTR [eax+ecx*1-0x347262a4],dh
  412192:	cld    
  412193:	xor    bh,BYTE PTR [esi]
  412195:	dec    esi
  412196:	push   esp
  412197:	bound  esp,QWORD PTR [edx]
  412199:	rcl    BYTE PTR [ecx+0x1e],0x18
  41219d:	pushf  
  41219e:	or     BYTE PTR [edx-0xc974203],bh
  4121a4:	loop   0x4121b8
  4121a6:	(bad)  
  4121a7:	popa   
  4121a8:	jae    0x4121bc
  4121aa:	(bad)  
  4121ab:	cld    
  4121ac:	dec    edx
  4121ad:	add    BYTE PTR [eax-0x17],0x4d
  4121b1:	sbb    bh,BYTE PTR [edx]
  4121b3:	push   edx
  4121b4:	xchg   edx,eax
  4121b5:	scas   eax,DWORD PTR es:[edi]
  4121b6:	push   esi
  4121b7:	mov    edx,0x510c9c11
  4121bc:	mov    cl,0x69
  4121be:	add    cl,ch
  4121c0:	sub    eax,0xd23a3a23
  4121c5:	(bad)  
  4121c6:	sub    esp,esp
  4121c8:	fidivr DWORD PTR [ecx]
  4121ca:	inc    edx
  4121cb:	jmp    0xe492e0b5
  4121d0:	pop    esp
  4121d1:	cs inc ecx
  4121d3:	jmp    0xb692e0be
  4121d8:	push   ecx
  4121d9:	jnp    0x41215b
  4121db:	add    BYTE PTR [ebp+0x118900ce],cl
  4121e1:	push   ss
  4121e2:	cmp    eax,ebx
  4121e4:	loopne 0x41216d
  4121e6:	push   0x8e7310
  4121eb:	push   eax
  4121ec:	pop    ebx
  4121ed:	sbb    dh,cl
  4121ef:	adc    al,BYTE PTR [eax]
	...
  412201:	add    BYTE PTR [eax],al
  412203:	add    BYTE PTR [ebx+ecx*4-0x12ab8a03],bl
  41220a:	adc    al,0xc0
  41220c:	ds into 
  41220e:	add    dh,al
  412210:	loope  0x412200
  412212:	add    bl,ch
  412214:	sbb    ah,BYTE PTR [esi+0x0]
  412217:	or     BYTE PTR [esi+ecx*4],0x51
  41221b:	push   esi
  41221c:	ret    
  41221d:	out    dx,al
  41221e:	adc    al,0x84
  412220:	push   cs
  412221:	into   
  412222:	add    BYTE PTR [edi+0x2b],dl
  412225:	sbb    BYTE PTR [esi+0x5e8bcc12],bh
  41222b:	mov    dl,cl
  41222d:	out    dx,al
  41222e:	pop    esi
  41222f:	pop    ebx
  412230:	and    eax,0xc1000649
  412235:	add    ch,dl
  412237:	cmp    DWORD PTR [eax],0xcc00025b
  41223d:	pop    eax
  41223e:	mov    DWORD PTR ds:0x3e199c,ebx
  412244:	add    dl,BYTE PTR [ebp+0x31]
  412247:	call   DWORD PTR [edx+0x5500fdc8]
  41224d:	jo     0x412243
  41224f:	mov    DWORD PTR [ecx-0xb],edi
  412252:	push   esi
  412253:	push   0xffffff9e
  412255:	out    dx,al
  412256:	adc    al,0x78
  412258:	jle    0x412227
  41225a:	add    BYTE PTR [ecx+0x7d88fd51],cl
  412260:	test   al,0x8
  412262:	idiv   bh
  412264:	fwait
  412265:	or     DWORD PTR [edx],esi
  412267:	add    DWORD PTR [eax],eax
	...
  412279:	add    BYTE PTR [eax],al
  41227b:	add    BYTE PTR [ebp+0x308d0226],dh
  412281:	mov    bh,0x9f
  412283:	(bad)  
  412284:	jb     0x41227d
  412286:	mov    ds:0x876a6574,al
  41228b:	scas   eax,DWORD PTR es:[edi]
  41228c:	pusha  
  41228d:	sbb    ah,BYTE PTR [ebx+0x226b72b]
  412293:	jmp    FWORD PTR [eax-0x4ac00c5a]
  412299:	aas    
  41229a:	mov    ds:0x8f2742ff,eax
  41229f:	mov    ebp,?
  4122a1:	inc    ebx
  4122a2:	mov    ds:0x12d9eefe,eax
  4122a7:	xchg   BYTE PTR [edi+eiz*1],dl
  4122aa:	add    al,BYTE PTR [eax]
  4122ac:	fisubr WORD PTR [ebx]
  4122ae:	fnstenvw [esi+0x26]
  4122b2:	adc    eax,DWORD PTR [eax+ebp*8-0x39fffdda]
  4122b9:	out    0xdc,al
  4122bb:	jl     0x4122ba
  4122bd:	jo     0x4122b5
  4122bf:	mov    ah,BYTE PTR [eax-0x6]
  4122c2:	fmul   QWORD PTR [ebx]
  4122c4:	aaa    
  4122c5:	sbb    al,BYTE PTR [esi+0x226b5c1]
  4122cb:	inc    eax
  4122cc:	sahf   
  4122cd:	arpl   WORD PTR [ecx+esi*2-0x1538835],bx
  4122d4:	cdq    
  4122d5:	add    cl,BYTE PTR es:[ecx-0x39214190]
  4122dc:	mov    dl,0xa2
  4122de:	outs   dx,BYTE PTR ds:[esi]
  4122df:	inc    DWORD PTR [eax]
	...
  4122f1:	add    BYTE PTR [eax],al
  4122f3:	add    BYTE PTR [edx+0x6db4a326],bh
  4122f9:	retf   
  4122fa:	mov    ds:0x23f02fe,al
  4122ff:	add    al,0xb5
  412301:	mov    es:0x42342914,eax
  412307:	add    BYTE PTR [esi],bh
  412309:	(bad)  
  41230a:	pop    ss
  41230b:	fiadd  WORD PTR [ebx-0x7d729c80]
  412311:	adc    al,ch
  412313:	nop
  412314:	icebp  
  412315:	sub    edi,DWORD PTR [eax-0x244ba2c7]
  41231b:	add    eax,0x9b72b9b5
  412320:	arpl   WORD PTR [ebp*2+0x629ae6a2],di
  412327:	dec    eax
  412328:	pop    ecx
  412329:	push   esp
  41232a:	in     al,dx
  41232b:	inc    ebx
  41232c:	arpl   sp,cx
  41232e:	out    0x16,eax
  412330:	fst    DWORD PTR [eax]
  412332:	pop    ds
  412333:	mov    eax,ds:0x43f77ba1
  412338:	mov    ch,0x54
  41233a:	in     al,dx
  41233b:	fild   DWORD PTR [eax]
  41233d:	int3   
  41233e:	out    0x16,eax
  412340:	mov    DWORD PTR [edi+eiz*8],eax
  412343:	xor    edx,DWORD PTR [ebx+ebx*2-0x6b]
  412347:	inc    ebp
  412348:	mov    ch,0x4
  41234a:	call   0xe7b428fa
  41234f:	add    edi,DWORD PTR [eax]
  412351:	dec    edi
  412352:	sbb    eax,0x8fc22e43
  412357:	pop    DWORD PTR [eax]
	...
  412369:	add    BYTE PTR [eax],al
  41236b:	add    BYTE PTR [esi-0x4afc13fe],bh
  412371:	(bad)  
  412372:	ins    BYTE PTR es:[edi],dx
  412373:	pop    ss
  412374:	jmp    0xdb3e3f9f
  412379:	pcmpgtb mm0,mm4
  41237c:	inc    esi
  41237d:	fs jb  0x4123b7
  412380:	int    0x3
  412382:	gs pop esp
  412384:	ror    DWORD PTR [edi],0x57
  412387:	lea    ebp,[ecx+0x1b]
  41238a:	dec    edi
  41238b:	pop    ss
  41238c:	popf   
  41238d:	shrd   DWORD PTR [ebx-0x74b4aa55],ebx,cl
  412394:	mov    dh,0x20
  412396:	add    DWORD PTR [esi],esi
  412398:	add    al,BYTE PTR [edi-0x4]
  41239b:	cs push esp
  41239d:	test   DWORD PTR [eax+0x27],0x29850e54
  4123a4:	popf   
  4123a5:	xchg   ebx,eax
  4123a6:	(bad)  
  4123a7:	lods   al,BYTE PTR ds:[esi]
  4123a8:	push   ebp
  4123a9:	nop
  4123aa:	push   ebp
  4123ab:	add    DWORD PTR [esi],edx
  4123ad:	stos   BYTE PTR es:[edi],al
  4123ae:	add    cl,ch
  4123b0:	or     DWORD PTR [esi],0xe0e74fe
  4123b6:	shl    BYTE PTR [edx+esi*1+0x3f],cl
  4123ba:	cld    
  4123bb:	out    dx,al
  4123bc:	adc    eax,0x215cfd5f
  4123c1:	push   cs
  4123c2:	adc    al,0x5d
  4123c4:	dec    ebx
  4123c5:	iret   
  4123c6:	add    BYTE PTR [esi+esi*2-0x62],ch
  4123ca:	adc    eax,0x54
  4123cd:	push   cs
  4123ce:	inc    dh
	...
  4123e4:	ret    
  4123e5:	(bad)  
  4123e6:	std    
  4123e7:	call   0x4333:0xe6ec8bff
  4123ee:	jmp    FWORD PTR [esi-0x628bf1ab]
  4123f4:	pop    esi
  4123f5:	cmp    ebx,DWORD PTR [edx]
  4123f7:	jmp    0x96853db2
  4123fc:	jne    0x41246b
  4123fe:	pop    ecx
  4123ff:	mov    al,ds:0x958963f9
  412404:	xor    DWORD PTR [edi],eax
  412406:	(bad)  
  412407:	hlt    
  412408:	scas   eax,DWORD PTR es:[edi]
  412409:	push   cs
  41240a:	je     0x4123f1
  41240c:	adc    eax,0x76db74a4
  412411:	(bad)  
  412412:	std    
  412413:	fadd   st(6),st
  412415:	fs push eax
  412417:	pop    esi
  412418:	stos   DWORD PTR es:[edi],eax
  412419:	fwait
  41241a:	push   0xffffffe9
  41241c:	adc    eax,0xab4e0884
  412421:	jle    0x412435
  412423:	add    BYTE PTR [edx+edx*4-0x7f],bl
  412427:	jge    0x4124a5
  412429:	xchg   edx,eax
  41242a:	jle    0x412439
  41242c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41242d:	push   ebp
  41242e:	adc    BYTE PTR [esi+ebx*4-0x1d],bh
  412432:	mov    ebp,0x87b8c533
  412437:	or     al,0x5a
  412439:	int    0xc2
  41243b:	or     al,0x8c
  41243d:	lds    ecx,FWORD PTR [ecx-0x29e4d014]
  412443:	push   esi
  412444:	dec    ebx
  412445:	adc    edi,ebx
  412447:	inc    DWORD PTR [eax]
	...
  412459:	add    BYTE PTR [eax],al
  41245b:	add    cl,ch
  41245d:	fwait
  41245e:	std    
  41245f:	jne    0x4124b1
  412461:	das    
  412462:	adc    eax,0x526e74
  412467:	mov    esi,DWORD PTR [ecx+edi*4+0x0]
  41246b:	(bad)  
  41246c:	jmp    0x64375610
  412471:	test   al,0x8
  412473:	mov    ebx,DWORD PTR [edi+0x3b]
  412476:	call   0x99f8:0x8b2df3ff
  41247d:	cs jl  0x4124a5
  412480:	retf   
  412481:	and    BYTE PTR [edx],al
  412483:	aas    
  412484:	cdq    
  412485:	shl    DWORD PTR [ecx+0x1d],cl
  412488:	and    al,0x29
  41248a:	sbb    BYTE PTR [eax],al
  41248c:	or     al,0x19
  41248e:	out    dx,al
  41248f:	test   DWORD PTR [edx],ebx
  412491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412492:	adc    dl,BYTE PTR [edi+0x43]
  412495:	test   al,0xc
  412497:	mov    ebx,DWORD PTR [edi]
  412499:	cs jne 0x4124a4
  41249c:	inc    esp
  41249d:	test   al,0xfd
  41249f:	jmp    DWORD PTR [ebx+0x1a]
  4124a2:	(bad)  
  4124a3:	jmp    0x412483
  4124a5:	loopne 0x412464
  4124a7:	pop    edi
  4124a8:	repnz enter 0xc25b,0xc4
  4124ad:	xchg   ecx,eax
  4124ae:	push   ebx
  4124af:	mov    esi,DWORD PTR [ebp+0xb533354]
  4124b5:	inc    esi
  4124b6:	lahf   
  4124b7:	je     0x412476
  4124b9:	sbb    DWORD PTR [edx+ecx*4-0x408315c],0x0
	...
  4124d4:	(bad)  
  4124d5:	add    cl,BYTE PTR ss:[ebx+0x3b086c6d]
  4124dc:	cmp    BYTE PTR [ebx],bh
  4124de:	add    al,BYTE PTR [edx]
  4124e0:	sub    al,0x34
  4124e2:	sahf   
  4124e3:	xor    al,0xa2
  4124e6:	add    al,0x4
  4124e8:	mov    ch,0xf6
  4124ea:	test   dl,al
  4124ec:	mov    ch,0xf8
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	xor    al,0x92
  4124f2:	add    al,0x0
  4124f4:	adc    eax,0x3e3816f7
  4124f9:	sub    al,0x9e
  4124fb:	out    0xb8,eax
  4124fd:	nop
  4124fe:	add    al,0x0
  412500:	cmp    DWORD PTR [edi],esi
  412502:	push   ss
  412503:	sub    al,0x3a
  412505:	ins    BYTE PTR es:[edi],dx
  412506:	adc    BYTE PTR [ebx+0x818ddbb],cl
  41250c:	cmp    bl,bh
  41250e:	sbb    DWORD PTR [ebx-0x7b],edx
  412511:	dec    ebp
  412512:	stc    
  412513:	mov    bl,0xc6
  412515:	mov    dh,0x4
  412517:	test   ebp,esi
  412519:	mov    esi,0x357e8ccc
  41251e:	fcmovnb st,st(0)
  412520:	xor    BYTE PTR [edi],0x3
  412523:	clc    
  412524:	cs std 
  412526:	ror    al,cl
  412528:	pop    ebx
  412529:	outs   dx,DWORD PTR ds:[esi]
  41252a:	or     eax,0xab3e3e78
  41252f:	add    dh,BYTE PTR [esi]
  412531:	aas    
  412532:	lahf   
  412533:	pop    esi
  412534:	jnp    0x4124d7
  412536:	retf   
  412537:	rol    DWORD PTR [eax],0x0
	...
  41254a:	add    BYTE PTR [eax],al
  41254c:	mov    ebp,0xca5733f6
  412551:	(bad)  
  412552:	(bad)  
  412554:	scas   al,BYTE PTR es:[edi]
  412555:	sbb    BYTE PTR [eax-0x62],bl
  412558:	mov    eax,ds:0xb543f983
  41255d:	sbb    BYTE PTR [eax-0x7c],dl
  412560:	jae    0x4124f1
  412562:	jmp    0x3f4fda6a
  412567:	add    esi,DWORD PTR [ebp-0x3ae917d1]
  41256d:	sbb    bl,BYTE PTR [edi+0x13a9d04]
  412573:	add    al,0xb5
  412575:	adc    ebp,DWORD PTR [eax]
  412577:	pop    ss
  412578:	ror    DWORD PTR [esp+ebx*4],1
  41257b:	out    0xc2,eax
  41257d:	or     al,0x94
  41257f:	out    0xba,eax
  412581:	fs push es
  412583:	aad    0x63
  412585:	mov    ds:0x8f9af237,al
  41258a:	ins    BYTE PTR es:[edi],dx
  41258b:	ret    
  41258c:	retf   0x5cde
  41258f:	dec    esi
  412590:	dec    edx
  412591:	enter  0x1fa8,0x6f
  412595:	sbb    dh,ch
  412597:	lds    esi,FWORD PTR [esi-0x48571869]
  41259d:	adc    BYTE PTR [eax-0x56927463],ah
  4125a3:	or     al,0xb5
  4125a5:	gs jno 0x41255c
  4125a8:	pop    edx
  4125a9:	stc    
  4125aa:	jmp    0x4125b8
  4125ac:	dec    ebx
  4125ad:	loope  0x4125f0
  4125af:	or     eax,DWORD PTR [eax]
	...
  4125c1:	add    BYTE PTR [eax],al
  4125c3:	add    BYTE PTR [ebx-0x4d],ch
  4125c6:	mul    BYTE PTR ds:0x960301be
  4125cc:	aaa    
  4125cd:	cmc    
  4125ce:	out    dx,al
  4125cf:	cmp    al,0xbe
  4125d2:	add    eax,0x3d9be701
  4125d7:	les    ecx,FWORD PTR [esi+edx*4+0x21]
  4125db:	es sahf 
  4125dd:	fild   WORD PTR [eax]
  4125df:	rol    BYTE PTR [ecx+edx*1],cl
  4125e2:	jecxz  0x4125ca
  4125e4:	xor    eax,0xb5cf30ce
  4125e9:	fbld   TBYTE PTR [esi+0x70]
  4125ec:	out    0x71,al
  4125ee:	xchg   DWORD PTR [eax+0x6ac169b4],edi
  4125f4:	dec    ecx
  4125f5:	or     dh,BYTE PTR [ebx+esi*8+0x41]
  4125f9:	jg     0x41261f
  4125fb:	in     eax,0x39
  4125fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125fe:	cld    
  4125ff:	fcomi  st,st(6)
  412601:	pop    DWORD PTR [ecx]
  412603:	sub    ecx,eax
  412605:	or     dh,BYTE PTR [ebp-0x33]
  412608:	scas   al,BYTE PTR es:[edi]
  412609:	popa   
  41260a:	call   0xfe4ca2d6
  41260f:	fidivr DWORD PTR [edi+0x75]
  412612:	xchg   ebp,ebx
  412614:	xchg   cl,dl
  412616:	add    al,0xe9
  412618:	xor    eax,0xac74fe03
  41261d:	or     dh,BYTE PTR [ebp-0x33]
  412620:	mov    edx,0x4475140a
  412625:	retf   
  412626:	add    BYTE PTR [ecx],bh
	...
  41263c:	and    BYTE PTR [edi+0x24],bh
  41263f:	icebp  
  412640:	xor    bh,0x1
  412643:	repz mov dh,0x8f
  412646:	(bad)  
  412647:	in     eax,0xb0
  412649:	pop    edx
  41264b:	in     eax,dx
  41264c:	mov    dh,0xe
  41264e:	jge    0x412655
  412650:	lods   eax,DWORD PTR ds:[esi]
  412651:	(bad)  
  412652:	jae    0x412641
  412654:	in     eax,0x4a
  412656:	jmp    0xaf1c:0xfe0335fe
  41265d:	or     dh,BYTE PTR [ebp-0x3b]
  412660:	mov    dl,0xa
  412662:	adc    al,0x95
  412664:	in     al,0xca
  412666:	add    BYTE PTR [edi],dh
  412668:	cmp    bh,BYTE PTR [edi+0x54690000]
  41266e:	add    al,BYTE PTR [ebp-0x17eb5cf4]
  412674:	mov    edi,0x51fffe06
  412679:	into   
  41267a:	jno    0x412687
  41267c:	add    ch,BYTE PTR [edx+esi*2]
  41267f:	and    al,0xc8
  412681:	mov    esi,0x8ea5c3e8
  412686:	add    BYTE PTR [esi-0x22],bl
  412689:	xchg   edx,eax
  41268a:	add    BYTE PTR [ebx+0x1f278],al
  412690:	inc    edx
  412691:	pop    ss
  412692:	out    dx,al
  412693:	jne    0x412635
  412695:	fistp  QWORD PTR [ebp-0x3f07715]
  41269b:	jmp    DWORD PTR [ecx]
  41269d:	call   0x0:0x74fd
	...
  4126b4:	jo     0x41264c
  4126b6:	std    
  4126b7:	adc    eax,0x3e0050
  4126bc:	xlat   BYTE PTR ds:[ebx]
  4126bd:	push   ds
  4126be:	lea    eax,[esi+0x4d]
  4126c1:	adc    DWORD PTR [esi+0x2536b074],edi
  4126c7:	sbb    DWORD PTR [esi+ecx*4-0x7d],ebx
  4126cb:	rol    al,0x97
  4126ce:	push   esi
  4126cf:	jmp    eax
  4126d1:	out    dx,eax
  4126d2:	or     DWORD PTR [eax+0x64],edx
  4126d5:	adc    BYTE PTR [ecx],bl
  4126d7:	add    BYTE PTR [eax+ecx*8],bl
  4126da:	ret    0x1c04
  4126dd:	rcl    DWORD PTR [esi-0x75],0x5d
  4126e1:	mov    esi,0x1d91f889
  4126e6:	jb     0x412728
  4126e8:	xchg   edi,eax
  4126e9:	or     dl,bh
  4126eb:	adc    bl,ah
  4126ed:	xchg   ebx,eax
  4126ee:	cmp    edi,0xff08a05b
  4126f4:	mov    al,ds:0xb5ff0def
  4126f9:	inc    ebp
  4126fa:	mov    ?,edi
  4126fc:	jmp    0x8830:0x2ed29ae1
  412703:	or     ebx,DWORD PTR [esi-0x48f6b785]
  412709:	adc    BYTE PTR [esi],dh
  41270b:	sbb    BYTE PTR [ebp+0x49bf7df8],dh
  412711:	or     DWORD PTR [ecx-0x70b785fd],ecx
  412717:	add    eax,0x0
	...
  41272c:	mov    dl,0xeb
  41272e:	fst    QWORD PTR [ebx]
  412730:	cmp    bl,dh
  412732:	cmp    DWORD PTR [eax-0x73],edx
  412735:	(bad)  
  412736:	sti    
  412737:	call   FWORD PTR [edx-0x4814fc79]
  41273d:	add    al,0xc2
  41273f:	pop    esi
  412740:	jmp    0x41275f
  412742:	les    eax,FWORD PTR [ebx]
  412744:	mov    ch,0x75
  412746:	sbb    BYTE PTR [ecx+esi*4],ah
  412749:	div    BYTE PTR [esi]
  41274b:	push   esi
  41274c:	or     ch,BYTE PTR [esi-0x44]
  41274f:	mov    ah,BYTE PTR [ebx+eiz*1-0x23]
  412753:	mov    ah,BYTE PTR [eax-0x4ac00c76]
  412759:	jne    0x4126f8
  41275b:	dec    al
  41275d:	out    dx,al
  41275e:	call   0x2ed6:0x9ae69173
  412765:	iret   
  412766:	call   0x40f7:0x8f423a35
  41276d:	mov    bl,0xf9
  41276f:	add    BYTE PTR ds:0x22fff9f7,bl
  412775:	jnp    0x412738
  412777:	jae    0x41273f
  412779:	jge    0x41277a
  41277b:	push   edx
  41277c:	adc    cl,bl
  41277e:	loopne 0x412793
  412780:	mov    dh,0x31
  412782:	xor    ch,al
  412784:	push   cs
  412785:	nop
  412786:	inc    DWORD PTR [ebx]
  412788:	mov    ch,0x3f
  41278a:	jmp    0xa7fedc3d
  41278f:	cmp    al,BYTE PTR [eax]
	...
  4127a1:	add    BYTE PTR [eax],al
  4127a3:	add    BYTE PTR [ebx-0x1d00569c],cl
  4127a9:	bound  eax,QWORD PTR [esi+0x279ddef0]
  4127af:	add    al,0x38
  4127b1:	shl    ch,1
  4127b3:	cmp    BYTE PTR [esi+0x6bb5bad6],al
  4127b9:	adc    ch,BYTE PTR [eax]
  4127bb:	sbb    DWORD PTR [ebp+0x8d79698],ebx
  4127c1:	or     eax,0x9726e357
  4127c6:	push   0xffffffc2
  4127c8:	stos   DWORD PTR es:[edi],eax
  4127c9:	jno    0x412835
  4127cb:	call   0xc4f7:0x44e580b6
  4127d2:	pop    ss
  4127d3:	pop    ss
  4127d4:	popf   
  4127d5:	mov    ah,0x28
  4127d7:	mov    BYTE PTR [esi+0x7a4b7459],ah
  4127dd:	adc    dh,BYTE PTR [ecx]
  4127df:	sbb    ecx,ebx
  4127e1:	cwde   
  4127e2:	pop    esi
  4127e3:	xlat   BYTE PTR ds:[ebx]
  4127e4:	cld    
  4127e5:	or     al,0xf
  4127e7:	jecxz  0x4127cf
  4127e9:	xchg   esi,eax
  4127ea:	push   0xffffffc2
  4127ec:	arpl   WORD PTR [ecx+0x6a],si
  4127ef:	call   0x86fc:0x4beb80b6
  4127f6:	add    DWORD PTR [edx],edi
  4127f8:	jle    0x4127db
  4127fa:	pop    ebp
  4127fb:	or     DWORD PTR [eax],esi
  4127fd:	iret   
  4127fe:	pop    ebp
  4127ff:	or     eax,0x32e79b40
  412804:	xchg   DWORD PTR [ecx-0x41],esp
  412807:	pop    ss
	...
  41281c:	mov    ebp,0xedd4e78f
  412821:	jo     0x412893
  412823:	or     BYTE PTR [ebx-0x34],bh
  412826:	add    BYTE PTR [edx],bl
  412828:	(bad)  
  412829:	mov    ebp,0x992962d9
  41282e:	mov    ch,0xef
  412830:	xor    ebx,DWORD PTR [eax-0x30]
  412833:	pop    es
  412834:	cmp    BYTE PTR [esi],al
  412836:	or     BYTE PTR [esi],bl
  412838:	jmp    0x8baa:0x10abb598
  41283f:	sbb    DWORD PTR [edx+esi*2-0x7f],edi
  412843:	adc    edx,0xffffff80
  412846:	add    eax,0x108ffec
  41284b:	jmp    0xb9ccc261
  412850:	cmp    eax,0xb2638172
  412855:	jle    0x412873
  412857:	in     al,dx
  412858:	pop    ds
  412859:	push   es
  41285a:	add    ecx,ebp
  41285c:	and    ch,dl
  41285e:	je     0x41284e
  412860:	scas   al,BYTE PTR es:[edi]
  412861:	nop
  412862:	aas    
  412863:	sti    
  412864:	push   ecx
  412865:	cli    
  412866:	add    eax,0x88935129
  41286b:	call   0x2fc2b859
  412870:	mov    bl,0xfa
  412872:	mov    edx,0x7446f387
  412877:	loope  0x412863
  412879:	jmp    0x90480df1
  41287e:	jmp    0x41296e
	...
  412893:	add    BYTE PTR [eax+0x79a25f47],al
  412899:	pop    esp
  41289a:	mov    DWORD PTR ds:0x6a0cfb30,eax
  4128a0:	mov    ds:0x873a0103,al
  4128a5:	sbb    dh,BYTE PTR [ecx+esi*8+0x3b]
  4128a9:	fwait
  4128aa:	push   es
  4128ab:	(bad)  
  4128ac:	jmp    0x412841
  4128ae:	or     DWORD PTR [ecx],0x875eb9
  4128b4:	loope  0x4128d9
  4128b6:	cmp    esi,ecx
  4128b8:	and    ecx,DWORD PTR [edx+edi*8]
  4128bb:	add    BYTE PTR [ebx+edx*4],bl
  4128be:	mov    DWORD PTR [ebp-0x24],eax
  4128c1:	or     ebx,esi
  4128c3:	add    al,BYTE PTR [ebp-0x26140b3b]
  4128c9:	adc    esi,DWORD PTR [ebp+0x8]
  4128cc:	push   edi
  4128cd:	fiadd  DWORD PTR [edx-0x766cb783]
  4128d3:	(bad)  
  4128d5:	dec    BYTE PTR [edx+0x7321f7c6]
  4128db:	or     al,0x56
  4128dd:	add    bh,BYTE PTR [eax]
  4128df:	push   ebp
  4128e0:	call   0x97812c7b
  4128e5:	shr    BYTE PTR [edi-0xc],cl
  4128e8:	daa    
  4128e9:	sub    ebp,DWORD PTR [ebx]
  4128eb:	(bad)  
  4128ec:	pop    esp
  4128ed:	sbb    DWORD PTR [ebp+0x8],eax
  4128f0:	test   DWORD PTR [ebp-0x658e72aa],0xf189
	...
  41290a:	add    BYTE PTR [eax],al
  41290c:	in     al,0x8b
  41290e:	add    eax,0xf6139c00
  412913:	mov    esp,DWORD PTR [ecx]
  412915:	push   ds
  412916:	mov    esi,DWORD PTR [ebp-0x80]
  412919:	or     eax,0x92588d0a
  41291e:	add    BYTE PTR [eax],al
  412920:	mov    ah,0x6b
  412922:	adc    eax,DWORD PTR [eax]
  412924:	dec    esp
  412925:	xchg   BYTE PTR [ebp-0x28c37f1],bh
  41292b:	call   FWORD PTR [ebp+eax*4-0x2]
  41292f:	je     0x412997
  412931:	mov    ebx,0xd8b4c789
  412936:	cld    
  412937:	call   DWORD PTR [ebx+0x1a]
  41293a:	push   ebp
  41293b:	cld    
  41293c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41293d:	int    0x8a
  41293f:	or     DWORD PTR [ebp+0x3891006f],esi
  412945:	cmp    BYTE PTR [esi],al
  412947:	test   BYTE PTR [eax],ch
  412949:	clc    
  41294a:	add    DWORD PTR [eax],eax
  41294c:	or     ebp,DWORD PTR [ebx+0x4e8100f4]
  412952:	mov    DWORD PTR [ecx+eax*1+0x71],ecx
  412956:	mov    esi,0x7bb58a
  41295b:	mov    BYTE PTR [esi],dh
  41295d:	lock add DWORD PTR [edx+ecx*4+0x71],esi
  412962:	aam    0x55
  412964:	loop   0x412960
  412966:	or     eax,0x80f87512
  41296b:	mov    edi,0xd1d1aa53
	...
  412984:	xchg   BYTE PTR [ebp+0x7f],bh
  412987:	mov    edi,0xb87de43
  41298c:	cmp    BYTE PTR [eax-0x65],0x1f
  412990:	sub    edi,edi
  412992:	sub    eax,0x39b76bc
  412998:	sub    ch,ch
  41299a:	aas    
  41299b:	inc    edi
  41299c:	fimul  WORD PTR [esi+0x18]
  41299f:	jmp    0x6bc7:0x3b87b8de
  4129a6:	xor    al,0xff
  4129a8:	cmp    BYTE PTR [ecx-0x4d0ebe4],ch
  4129ae:	xlat   BYTE PTR ds:[ebx]
  4129af:	jg     0x412a1d
  4129b1:	xlat   BYTE PTR ds:[ebx]
  4129b2:	or     eax,0xb903508
  4129b7:	sbb    BYTE PTR [ebx+ebp*8+0xe],0x4
  4129bc:	in     eax,dx
  4129bd:	inc    eax
  4129be:	sbb    eax,0xc048eec
  4129c3:	or     al,0x30
  4129c5:	mov    bh,0x16
  4129c7:	or     ch,ah
  4129c9:	sbb    eax,0x8faee82c
  4129ce:	inc    BYTE PTR [ebx]
  4129d0:	mov    ch,0xcd
  4129d2:	jecxz  0x4129a7
  4129d4:	sub    bl,BYTE PTR [edx]
  4129d6:	sub    eax,0xcb4b239c
  4129db:	fdiv   QWORD PTR [ecx-0x69]
  4129de:	test   BYTE PTR [ecx-0x6940fb3d],0x3f
  4129e5:	dec    ebx
  4129e6:	mov    bl,0x36
	...
  4129fc:	arpl   WORD PTR [eax-0x60],bp
  4129ff:	shr    DWORD PTR [edx-0xebf8d71],0x18
  412a06:	sahf   
  412a07:	stos   DWORD PTR es:[edi],eax
  412a08:	neg    BYTE PTR [ebp-0x27c9fc19]
  412a0e:	mov    gs,WORD PTR [edx-0x588da534]
  412a14:	aaa    
  412a15:	hlt    
  412a16:	jmp    0x41299a
  412a18:	push   ecx
  412a19:	pop    es
  412a1a:	call   0x7a599551
  412a1f:	adc    BYTE PTR [eax-0x45108b71],0x5c
  412a26:	jo     0x412a68
  412a28:	test   eax,0xdf8fbd16
  412a2d:	rcr    esi,1
  412a2f:	xor    BYTE PTR [ebp-0x71],0xe7
  412a33:	add    edi,DWORD PTR [edi]
  412a35:	xchg   edi,eax
  412a36:	addr16 pushf 
  412a38:	stos   BYTE PTR es:[edi],al
  412a39:	jnp    0x412a1c
  412a3b:	cmp    DWORD PTR [ebp-0x6a],0xffffffab
  412a3f:	or     BYTE PTR ds:0xbd16f506,dh
  412a45:	dec    edi
  412a46:	jo     0x412a88
  412a48:	imul   ecx,eax,0xc85a1129
  412a4e:	sub    DWORD PTR [esi],eax
  412a50:	ss das 
  412a52:	call   0xe05adf5a
  412a57:	mov    dl,al
  412a59:	mov    es,WORD PTR [eax]
  412a5b:	imul   ebx,DWORD PTR [edi],0xe474ad
	...
  412a71:	add    BYTE PTR [eax],al
  412a73:	add    BYTE PTR [esi],dh
  412a75:	or     DWORD PTR [ebx],esp
  412a77:	pop    esp
  412a78:	and    BYTE PTR [edi],dl
  412a7a:	jl     0x412a59
  412a7c:	pop    esp
  412a7d:	ror    BYTE PTR [edx+0x210736e6],0x55
  412a84:	mov    al,0xf
  412a86:	clc    
  412a87:	lock stos BYTE PTR es:[edi],al
  412a89:	mov    al,BYTE PTR [eax+0x385b2c0]
  412a8f:	fadd   QWORD PTR cs:0xe52cc373
  412a96:	sub    ecx,eax
  412a98:	sbb    al,0xac
  412a9a:	cmp    dh,bh
  412a9c:	mov    ebx,0x3aa031a0
  412aa1:	dec    ebp
  412aa2:	std    
  412aa3:	xor    BYTE PTR [edi-0xe96b7b2],0x67
  412aaa:	je     0x412a2c
  412aac:	cmp    ecx,edi
  412aae:	(bad)  
  412aaf:	cld    
  412ab0:	ret    
  412ab1:	dec    esp
  412ab2:	cmp    DWORD PTR [ebx-0x59],esi
  412ab5:	jmp    0x412af0
  412ab7:	arpl   dx,ax
  412ab9:	mov    ?,ebp
  412abb:	lods   al,BYTE PTR ds:[esi]
  412abc:	inc    edx
  412abd:	push   ss
  412abe:	fiadd  WORD PTR [edx]
  412ac0:	jmp    0xd14:0x3e9c8a03
  412ac7:	je     0x412a7e
  412ac9:	pop    DWORD PTR [eax]
  412acb:	jmp    0xe954e82e
  412ad0:	mov    dh,0xb
  412ad2:	shl    DWORD PTR [ebp-0x6325f3a4],0x0
	...
  412ae9:	add    BYTE PTR [eax],al
  412aeb:	add    BYTE PTR [esi+edi*4+0x7c6e91c0],bh
  412af2:	inc    eax
  412af3:	jmp    0xe4521ee
  412af8:	stos   BYTE PTR es:[edi],al
  412af9:	add    ecx,DWORD PTR [edx+0x59339f00]
  412aff:	cld    
  412b00:	dec    ebx
  412b01:	sbb    al,0x8b
  412b03:	push   cs
  412b04:	xlat   BYTE PTR ds:[ebx]
  412b05:	mov    dl,0xf8
  412b07:	mov    DWORD PTR [eax+0x7e],edx
  412b0a:	test   al,al
  412b0c:	nop
  412b0d:	icebp  
  412b0e:	inc    BYTE PTR [ebp+0x14]
  412b11:	sbb    BYTE PTR [ebp-0xc],dl
  412b14:	rcl    DWORD PTR [esi],cl
  412b16:	jge    0x412b14
  412b18:	xchg   edi,eax
  412b19:	inc    ebx
  412b1a:	jmp    0xff5d2656
  412b1f:	mov    edx,ecx
  412b21:	and    ebp,ebx
  412b23:	or     eax,0x8bf8c197
  412b28:	or     dh,BYTE PTR [edi]
  412b2a:	retf   0xdc15
  412b2d:	mov    es,WORD PTR [ecx+0x5ebc4bc8]
  412b33:	pop    ebx
  412b34:	adc    eax,0x588b54d0
  412b39:	pminsw mm1,QWORD PTR [edi+ebx*2]
  412b3d:	mov    eax,ds:0xb1af00f8
  412b42:	mov    edx,esi
  412b44:	dec    edi
  412b45:	in     al,0xfd
  412b47:	mov    eax,gs
  412b49:	push   esi
  412b4a:	push   ebp
  412b4b:	mov    DWORD PTR [ecx+0x1a],esp
  412b4e:	mov    DWORD PTR [ebp+0x0],ebx
	...
  412b65:	call   0x32503b2c
  412b6a:	(bad)  
  412b6b:	dec    DWORD PTR [ebx+ecx*4+0x261f08b5]
  412b72:	push   ds
  412b73:	je     0x412afb
  412b75:	psubw  mm1,QWORD PTR [ecx]
  412b78:	mov    eax,DWORD PTR ds:[ecx+0xa9359f9]
  412b7f:	sbb    DWORD PTR [eax+edx*4-0x1837ba79],0xffffffc2
  412b87:	jb     0x412b3e
  412b89:	xchg   esp,eax
  412b8a:	fadd   st,st(2)
  412b8c:	stos   BYTE PTR es:[edi],al
  412b8d:	jne    0x412be1
  412b8f:	call   DWORD PTR [edx-0x8]
  412b92:	add    al,0xb7
  412b94:	mov    ebp,0x36021973
  412b99:	(bad)  
  412b9a:	fnstenv [ebx-0x50]
  412b9d:	jne    0x412b39
  412b9f:	and    DWORD PTR [eax+0x3cd07d8c],ebp
  412ba5:	arpl   WORD PTR [eax+0x5ae9e0ea],dx
  412bab:	push   cs
  412bac:	ss (bad) 
  412baf:	jae    0x412b55
  412bb1:	jne    0x412b3e
  412bb3:	or     BYTE PTR [edi-0x4f077915],al
  412bb9:	ret    0x8309
  412bbc:	repnz cmc 
  412bbe:	into   
  412bbf:	cli    
  412bc0:	adc    DWORD PTR [bp-0x22],edi
  412bc4:	sahf   
  412bc5:	rcr    BYTE PTR [ebp+0x2e],1
	...
  412bdb:	add    BYTE PTR [ebx-0x21],bl
  412bde:	cli    
  412bdf:	je     0x412ba4
  412be1:	in     eax,0xbc
  412be3:	mov    WORD PTR [edx+0xa],?
  412be6:	sahf   
  412be7:	add    esi,DWORD PTR [ebp+esi*2-0x64]
  412beb:	add    DWORD PTR [ebx+0x75],ebx
  412bee:	int3   
  412bef:	pop    ebx
  412bf0:	inc    ecx
  412bf1:	jp     0x412b8d
  412bf3:	shl    BYTE PTR [edx+eiz*8-0xa8d7cf6],0xce
  412bfb:	cli    
  412bfc:	daa    
  412bfd:	mov    ecx,0xeb20facd
  412c02:	xchg   BYTE PTR [ecx+edx*4-0xb],ch
  412c06:	jle    0x412be6
  412c08:	fisub  WORD PTR [ebx]
  412c0a:	mov    cs,WORD PTR [edx+0xb7fbef0]
  412c10:	sub    bl,ch
  412c12:	add    DWORD PTR [eax],eax
  412c14:	mov    ch,0x8f
  412c16:	cmp    BYTE PTR [edi+0x3f3b752],cl
  412c1c:	mov    ch,0xb
  412c1e:	sub    BYTE PTR [eax],bl
  412c20:	cdq    
  412c21:	or     dh,BYTE PTR [ebx]
  412c23:	sbb    DWORD PTR [edi-0x66e3d844],edi
  412c29:	push   eax
  412c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c2b:	add    esi,ebp
  412c2d:	hlt    
  412c2e:	in     al,dx
  412c2f:	xchg   edx,eax
  412c30:	rol    DWORD PTR [ebx],0x63
  412c33:	(bad)  
  412c34:	sbb    dl,BYTE PTR [ecx+0x152b92e2]
  412c3a:	out    dx,al
  412c3b:	jle    0x412bc6
  412c3d:	pop    es
  412c3e:	popa   
  412c3f:	pop    es
	...
  412c54:	inc    esp
  412c55:	or     ebp,DWORD PTR [eax+0x2d00ad17]
  412c5b:	mov    WORD PTR [edi],?
  412c5d:	arpl   WORD PTR [ebx+0x608dfb86],si
  412c63:	adc    cl,bh
  412c65:	adc    al,0xa7
  412c67:	pushf  
  412c68:	xchg   edi,eax
  412c69:	add    BYTE PTR [edi-0x60b4c06e],ah
  412c6f:	sahf   
  412c70:	mov    cl,0x14
  412c72:	sub    eax,0x7fc22f8c
  412c77:	push   eax
  412c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c79:	(bad)  
  412c7a:	out    0x86,eax
  412c7c:	repnz add BYTE PTR [edi],bl
  412c7f:	xor    bl,BYTE PTR [esi-0x2a]
  412c82:	stos   BYTE PTR es:[edi],al
  412c83:	cmp    BYTE PTR [esi],ch
  412c85:	hlt    
  412c86:	push   0xffffff9f
  412c88:	(bad)  
  412c89:	pop    esp
  412c8a:	mov    ebp,0x1a588fd6
  412c8f:	xchg   ebx,eax
  412c90:	sub    eax,0xf97c5b62
  412c95:	pop    es
  412c96:	adc    DWORD PTR [ecx],esi
  412c98:	rcl    DWORD PTR [eax+0x8a5e6d],0xe8
  412c9f:	jle    0x412c92
  412ca1:	pop    es
  412ca2:	add    DWORD PTR [edx-0x13],esp
  412ca5:	xchg   edi,eax
  412ca6:	mov    esp,ebp
  412ca8:	out    dx,al
  412ca9:	adc    eax,0xfd2f11
  412cae:	add    DWORD PTR [eax-0x13],esi
  412cb1:	xrelease mov DWORD PTR [ebx],esp
  412cb4:	cmp    ebx,DWORD PTR [ebx+0x6a66]
	...
  412cca:	add    BYTE PTR [eax],al
  412ccc:	mov    al,ds:0xc9ce074
  412cd2:	stc    
  412cd3:	lock test al,0x89
  412cd6:	pushw  0x2e
  412cd9:	xchg   ebx,eax
  412cda:	jbe    0x412cb8
  412cdc:	cmp    ecx,edi
  412cde:	add    dh,dh
  412ce0:	lea    ecx,[edi+0x7af96466]
  412ce6:	loope  0x412caa
  412ce8:	lods   eax,DWORD PTR ds:[esi]
  412ce9:	leave  
  412cea:	inc    ebx
  412ceb:	into   
  412cec:	mov    dh,0x5d
  412cee:	std    
  412cef:	fdivr  QWORD PTR [edx]
  412cf1:	sahf   
  412cf2:	inc    eax
  412cf3:	jmp    0x6479c17b
  412cf8:	jne    0x412c90
  412cfa:	or     BYTE PTR [edx+ecx*8-0x5],bl
  412cfe:	xchg   DWORD PTR [ecx+eax*2],ebp
  412d01:	call   0x8ff8276d
  412d06:	test   BYTE PTR [ecx+0xc8161bd],ch
  412d0c:	inc    ecx
  412d0d:	add    BYTE PTR [ebx+0x87a2d24],cl
  412d13:	adc    ebx,ecx
  412d15:	push   edi
  412d16:	pushaw 
  412d18:	lods   eax,DWORD PTR ds:[esi]
  412d19:	test   BYTE PTR [ebp+0x69],al
  412d1c:	ret    0xfe
  412d1f:	(bad)  [esi-0x333edd97]
  412d25:	or     BYTE PTR ds:0x440aedd2,al
  412d2b:	cmp    eax,0x89af24
	...
  412d44:	pop    ecx
  412d45:	and    ecx,DWORD PTR [ebp-0xfe488cc]
  412d4b:	stc    
  412d4c:	ret    
  412d4d:	and    BYTE PTR [ebx],al
  412d4f:	jge    0x412cfd
  412d51:	adc    edi,DWORD PTR [ebp-0x1]
  412d54:	pop    esp
  412d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d56:	push   cs
  412d57:	push   0x6e
  412d59:	stos   DWORD PTR es:[edi],eax
  412d5a:	mov    WORD PTR [eax-0x74],cx
  412d5e:	inc    ebp
  412d5f:	xor    ebx,DWORD PTR [ecx+ebp*4+0x20370487]
  412d66:	inc    ebp
  412d67:	clc    
  412d68:	(bad)  
  412d69:	push   esi
  412d6a:	clc    
  412d6b:	cmp    ecx,DWORD PTR [ecx]
  412d6d:	dec    DWORD PTR [esi]
  412d6f:	or     BYTE PTR [ecx+0x20],0xff
  412d73:	jmp    DWORD PTR [edi+0x775e5ed3]
  412d79:	cmp    al,al
  412d7b:	or     BYTE PTR [eax+eiz*1],cl
  412d7e:	jne    0x412d74
  412d80:	hlt    
  412d81:	rcl    DWORD PTR [edx],1
  412d83:	add    BYTE PTR [esp+eiz*8],bl
  412d86:	mov    ebp,0x89c5f1eb
  412d8b:	in     al,dx
  412d8c:	call   0x8bd:0x57f989b8
  412d93:	mov    ecx,DWORD PTR [esi+edx*1-0x37]
  412d97:	jne    0x412d69
  412d99:	adc    eax,0x13d874ff
  412d9e:	(bad)  
  412d9f:	push   DWORD PTR ds:0xdcfffd6f
  412da5:	adc    eax,0x75ff
	...
  412dba:	add    BYTE PTR [eax],al
  412dbc:	shl    ebx,cl
  412dbe:	mov    ebp,0xfd833540
  412dc3:	call   FWORD PTR [ebx+eiz*8-0x6cda1643]
  412dca:	add    BYTE PTR [eax],al
  412dcc:	pop    edi
  412dcd:	jnp    0x412deb
  412dcf:	je     0x412d86
  412dd1:	cli    
  412dd2:	inc    ecx
  412dd3:	add    BYTE PTR [esi],dh
  412dd5:	dec    esi
  412dd6:	nop
  412dd7:	je     0x412d9e
  412dd9:	imul   ecx,DWORD PTR [esi],0xe443820c
  412ddf:	mov    DWORD PTR [edx-0x3dcfb00b],esi
  412de5:	outs   dx,BYTE PTR ds:[esi]
  412de6:	mov    cl,0x2a
  412de8:	sbb    edi,DWORD PTR [bx+di]
  412deb:	sub    esi,DWORD PTR [edx+0x74]
  412dee:	shl    DWORD PTR [ebx+0x4],0x2e
  412df2:	jl     0x412dfa
  412df4:	ret    0xd54e
  412df7:	cmp    BYTE PTR [edx+0x472ab156],bh
  412dfd:	test   BYTE PTR [edi-0x6ee80b16],bl
  412e03:	sar    BYTE PTR [esi],cl
  412e05:	sbb    edi,edx
  412e07:	mov    ah,BYTE PTR ds:0x220c0f69
  412e0d:	arpl   bx,di
  412e0f:	push   esi
  412e10:	sbb    bh,BYTE PTR [ecx]
  412e12:	jp     0x412e60
  412e14:	mov    ebp,0x3e0c476f
  412e19:	fwait
  412e1a:	add    BYTE PTR [ebx],bh
  412e1c:	pop    es
  412e1d:	ret    
  412e1e:	jecxz  0x412da4
	...
  412e34:	add    edi,DWORD PTR [edi+ebp*8-0x143bf87c]
  412e3b:	xor    dh,ch
  412e3d:	push   0xffffffb2
  412e3f:	jge    0x412e09
  412e41:	in     eax,dx
  412e42:	dec    ebx
  412e43:	xor    BYTE PTR [edx-0x39d5129a],ch
  412e49:	mov    ds:0xa87240f9,al
  412e4e:	leave  
  412e4f:	rol    DWORD PTR [ecx+0xd],0x9a
  412e53:	add    DWORD PTR [esi+0x38c8d17a],ecx
  412e59:	test   ebp,edi
  412e5b:	sahf   
  412e5c:	je     0x412dee
  412e5e:	jb     0x412e26
  412e60:	stos   DWORD PTR es:[edi],eax
  412e61:	fadd   DWORD PTR [edx]
  412e63:	(bad)  
  412e64:	dec    DWORD PTR [edx]
  412e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e67:	cld    
  412e68:	xchg   ebx,eax
  412e69:	mov    cl,0x28
  412e6b:	das    
  412e6c:	jmp    0x412ec8
  412e6e:	sub    esp,edi
  412e70:	and    BYTE PTR [edx+esi*2-0x60],0xe0
  412e75:	bound  ecx,QWORD PTR fs:[ebp+0x7adf4b3f]
  412e7c:	pop    edx
  412e7d:	adc    esi,DWORD PTR [ecx]
  412e7f:	sbb    DWORD PTR [ecx-0x3ee7e0ee],esi
  412e85:	adc    BYTE PTR [eax],ah
  412e87:	(bad)  
  412e88:	pop    ebp
  412e89:	sbb    eax,0x12b503e8
  412e8e:	pop    es
  412e8f:	sbb    DWORD PTR [edx+0x4c4427c0],esi
  412e95:	and    eax,ebp
  412e97:	add    eax,DWORD PTR [eax]
	...
  412ea9:	add    BYTE PTR [eax],al
  412eab:	add    BYTE PTR [ebp+0x3e9d27c0],dh
  412eb1:	nop
  412eb2:	out    0x3,eax
  412eb4:	xchg   BYTE PTR [eax],cl
  412eb6:	std    
  412eb7:	pop    esp
  412eb9:	dec    edi
  412eba:	out    0x82,eax
  412ebc:	adc    ch,bh
  412ebe:	push   esp
  412ebf:	fbstp  TBYTE PTR [edi]
  412ec1:	jnp    0x412eb6
  412ec3:	mov    cs,WORD PTR [ecx-0x4ca91152]
  412ec9:	mov    WORD PTR [esi-0x2c],?
  412ecc:	lahf   
  412ecd:	push   DWORD PTR [eax+esi*1]
  412ed0:	sahf   
  412ed1:	int3   
  412ed2:	or     eax,0x34842289
  412ed7:	xor    ebx,0xffffff91
  412eda:	out    0x56,al
  412edc:	mov    ebx,0x8dd7568c
  412ee1:	test   al,0x77
  412ee3:	pop    ss
  412ee4:	shr    al,1
  412ee6:	and    al,0x35
  412ee8:	mov    edx,0xf56200e0
  412eed:	xchg   DWORD PTR [ecx+0xc7b3779],ecx
  412ef3:	mov    bp,0x5586
  412ef7:	pop    esi
  412ef8:	or     DWORD PTR [si-0x1f],ecx
  412efc:	adc    DWORD PTR [esp+ecx*1+0x62],edx
  412f00:	int    0x8b
  412f02:	cmp    DWORD PTR [ebx],edi
  412f04:	popf   
  412f05:	mov    dl,0x83
  412f07:	aaa    
  412f08:	mov    ds:0xca1b83ae,al
  412f0d:	call   0x0:0x2931
	...
  412f24:	cmp    eax,0x62007ede
  412f29:	inc    ebp
  412f2a:	xor    dh,ch
  412f2c:	add    ebx,DWORD PTR [esi-0x7352e5d7]
  412f32:	sub    DWORD PTR [eax],0xebc610b4
  412f38:	idiv   BYTE PTR [eax-0x16e0823e]
  412f3e:	add    al,dl
  412f40:	inc    esp
  412f41:	rol    edi,0x64
  412f44:	inc    eax
  412f45:	lea    ebx,[ebp-0xa2d6358]
  412f4b:	ror    DWORD PTR [esp+edi*1],0x5a
  412f4f:	fs jne 0x412ed8
  412f52:	std    
  412f53:	or     dh,dh
  412f55:	pop    esp
  412f56:	pop    esi
  412f57:	and    al,0xf7
  412f59:	xchg   ebx,eax
  412f5a:	add    BYTE PTR [esp+edi*2],dl
  412f5d:	call   0x87bb91b1
  412f62:	xchg   DWORD PTR [eax*2-0x45d925ed],esp
  412f69:	adc    cl,cl
  412f6b:	sahf   
  412f6c:	push   ds
  412f6d:	rcl    DWORD PTR [esi+0x64],1
  412f70:	in     eax,dx
  412f71:	cwde   
  412f72:	push   esi
  412f73:	sub    DWORD PTR ss:[ebx-0x7033ffef],esp
  412f7a:	mov    eax,DWORD PTR [ebp-0x38]
  412f7d:	mov    edi,0xc12875fd
  412f82:	push   ebp
  412f83:	inc    DWORD PTR [ecx+0x401263]
	...
  412f99:	add    BYTE PTR [eax],al
  412f9b:	add    BYTE PTR [eax+eiz*8+0x502566c8],cl
  412fa2:	dec    BYTE PTR ds:[edx+0x10]
  412fa6:	idiv   bh
  412fa8:	popa   
  412fa9:	not    BYTE PTR [esi-0x1]
  412fac:	popa   
  412fad:	or     edx,DWORD PTR [eax]
  412faf:	inc    eax
  412fb0:	mov    WORD PTR [esi],?
  412fb2:	ret    
  412fb3:	xor    edx,DWORD PTR [ebp+0x130c87b1]
  412fb9:	ss ret 
  412fbb:	push   ebx
  412fbc:	out    0xbf,eax
  412fbe:	and    al,0x8
  412fc0:	ror    DWORD PTR [edi+edi*2],1
  412fc3:	add    eax,0x5bff3bdf
  412fc8:	lahf   
  412fc9:	les    edx,FWORD PTR [esi-0x18]
  412fcc:	lahf   
  412fcd:	std    
  412fce:	std    
  412fcf:	dec    ecx
  412fd1:	inc    edi
  412fd2:	and    al,0xc
  412fd4:	dec    esp
  412fd5:	rcl    BYTE PTR [ebp+0x56],0x1b
  412fd9:	add    ch,BYTE PTR [esi-0x396c33ed]
  412fdf:	inc    esp
  412fe0:	mov    edx,0xe482fe0c
  412fe5:	or     esi,DWORD PTR [ebp+0x9]
  412fe8:	ret    0x150c
  412feb:	je     0x412fcb
  412fed:	dec    esi
  412fee:	add    BYTE PTR [ebx+0x4f],bl
  412ff1:	aad    0x1
  412ff3:	xor    ah,bl
  412ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ff6:	rcl    DWORD PTR [ebp+0x57],0x1a
  412ffa:	push   ecx
  412ffb:	xor    DWORD PTR [ecx+0x55fe1f],0x0
	...
  413012:	add    BYTE PTR [eax],al
  413014:	dec    ecx
  413015:	push   ecx
  413016:	adc    BYTE PTR [eax-0x4b],dl
  413019:	and    DWORD PTR [edi],edx
  41301b:	or     al,0x86
  41301d:	sub    BYTE PTR [edi+0x4c],bh
  413020:	shl    DWORD PTR [eax],0x73
  413023:	cmc    
  413024:	mov    edx,0x38ef7879
  413029:	jp     0x413035
  41302b:	or     ch,BYTE PTR [edx+0x32e78e03]
  413031:	test   DWORD PTR [ecx],0x79008e00
  413037:	inc    esp
  413038:	xchg   ecx,eax
  413039:	ins    DWORD PTR es:[edi],dx
  41303a:	or     BYTE PTR ds:[edi+eiz*8],bh
  41303e:	js     0x413005
  413040:	jecxz  0x413001
  413042:	rcl    BYTE PTR [esi+ebp*1+0x4c],0x32
  413047:	push   esi
  413048:	ds mov eax,0x5bab8b34
  41304e:	inc    esi
  41304f:	or     al,0x5
  413051:	mov    dl,0x16
  413053:	or     BYTE PTR [esi],ch
  413055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413056:	js     0x413025
  413058:	pop    ebp
  413059:	ds xchg esp,eax
  41305b:	dec    BYTE PTR [edx+0x6f]
  41305e:	inc    esi
  41305f:	cld    
  413060:	ss nop
  413062:	mov    WORD PTR [edi+ebx*4+0x73],?
  413066:	test   al,0x74
  413068:	shr    BYTE PTR [ebx-0x74],0x74
  41306c:	mov    esp,0x72e7d4e9
  413071:	test   DWORD PTR [ecx],0x779ad400
  413077:	dec    ebx
	...
  41308c:	scas   al,BYTE PTR es:[edi]
  41308d:	out    0x99,al
  41308f:	and    DWORD PTR [ebp+0x788b01e8],0xec5e29d4
  413099:	and    al,0x30
  41309b:	mov    esp,ecx
  41309d:	xchg   esi,eax
  41309e:	test   DWORD PTR [ecx+ebp*8-0x19],esp
  4130a2:	das    
  4130a3:	lea    edi,[eax-0x71]
  4130a6:	div    DWORD PTR [ebx]
  4130a8:	fiadd  DWORD PTR [ebx-0x4868715]
  4130ae:	jg     0x413124
  4130b0:	sar    cl,0x8e
  4130b3:	jg     0x413087
  4130b5:	adc    edi,DWORD PTR [esi+0xd]
  4130b8:	scas   eax,DWORD PTR es:[edi]
  4130b9:	cli    
  4130ba:	hlt    
  4130bb:	xchg   DWORD PTR [edx-0x4afc275f],ebx
  4130c1:	in     al,0xdf
  4130c3:	jle    0x4130be
  4130c5:	sti    
  4130c6:	jb     0x413101
  4130c8:	lods   eax,DWORD PTR ds:[esi]
  4130c9:	push   es
  4130ca:	jmp    0x209ba94d
  4130cf:	(bad)  
  4130d0:	mov    eax,edx
  4130d2:	aas    
  4130d3:	add    eax,0x1de78fa4
  4130d8:	test   eax,0xc59a4f61
  4130dd:	(bad)  
  4130de:	out    0xc6,eax
  4130e0:	add    eax,DWORD PTR ds:0xf9638730
  4130e6:	pushf  
  4130e7:	neg    DWORD PTR [ebx-0x7c]
  4130ea:	ret    
  4130eb:	sti    
  4130ec:	push   ebx
  4130ed:	mov    ds:0xf613,eax
	...
  413102:	add    BYTE PTR [eax],al
  413104:	mov    cl,BYTE PTR [edi-0x6c6739e]
  41310a:	test   ebx,ebx
  41310c:	int3   
  41310d:	(bad)  
  41310e:	xchg   esi,eax
  41310f:	mov    ah,BYTE PTR [esi+0x1c1bd7b3]
  413115:	sti    
  413116:	out    0x3,eax
  413118:	or     eax,0xb504827d
  41311d:	push   es
  41311e:	out    0x80,al
  413120:	push   edx
  413121:	test   al,bh
  413123:	xor    edi,DWORD PTR [edx+edi*2]
  413126:	jecxz  0x4130b2
  413128:	test   eax,0xb543d983
  41312d:	push   es
  41312e:	es cld 
  413130:	and    cl,BYTE PTR [edi-0x424f3e00]
  413136:	ror    BYTE PTR [esi],0xfb
  413139:	mov    WORD PTR [eax],es
  41313b:	xchg   edx,eax
  41313c:	add    dh,BYTE PTR [ebx-0x7f]
  41313f:	mov    eax,ds:0xf0f7cd8
  413144:	xor    al,BYTE PTR [ecx]
  413146:	es adc eax,0x818172c2
  41314c:	xchg   edx,eax
  41314d:	add    DWORD PTR [ebx],0x7
  413150:	xor    al,0x38
  413152:	je     0x413134
  413154:	enter  0x585b,0x7
  413158:	and    BYTE PTR [edi+0x71b02b81],cl
  41315e:	mov    eax,ebp
  413160:	aam    0x6
  413162:	add    ebp,DWORD PTR [edx+0x70]
  413165:	mov    es,WORD PTR [ecx+0x28]
	...
  41317b:	add    BYTE PTR [eax-0x2b174a78],bh
  413181:	adc    al,cl
  413183:	mov    ah,0x2a
  413185:	mov    ebp,0x8ee9cfc0
  41318a:	shl    DWORD PTR [edx-0x56],0xb3
  41318e:	add    al,0x12
  413190:	pop    ebx
  413191:	push   es
  413192:	add    ch,bl
  413194:	push   eax
  413195:	jl     0x41319e
  413197:	aad    0x4d
  413199:	jl     0x41319e
  41319b:	test   al,0x73
  41319d:	retf   0xf872
  4131a0:	mov    eax,0x12a529cf
  4131a5:	mov    WORD PTR [ecx],?
  4131a7:	daa    
  4131a8:	mov    edx,0xb9988ba3
  4131ad:	mov    ah,0xd6
  4131af:	pop    edx
  4131b0:	sbb    eax,0xc3ec3778
  4131b5:	nop
  4131b6:	adc    BYTE PTR [ebx],0xb
  4131b9:	add    DWORD PTR [edx],0x62
  4131bc:	inc    ebx
  4131bd:	dec    edi
  4131be:	xchg   DWORD PTR [eax],eax
  4131c0:	add    edx,edx
  4131c2:	add    DWORD PTR [eax],eax
  4131c4:	leave  
  4131c5:	jp     0x4131b0
  4131c7:	xor    eax,0xffffffde
  4131ca:	push   edx
  4131cb:	push   esi
  4131cc:	push   edi
  4131cd:	sbb    al,0xf4
  4131cf:	inc    esi
  4131d0:	mov    al,0x3
  4131d2:	push   edi
  4131d3:	je     0x413163
  4131d5:	cdq    
  4131d6:	and    BYTE PTR [esi+0x51],dl
  4131d9:	mov    eax,0xb03450d0
  4131de:	adc    BYTE PTR [eax],al
	...
  4131f4:	int3   
  4131f5:	adc    ah,BYTE PTR [ebp-0x14]
  4131f8:	inc    ebx
  4131f9:	fstp   st(2)
  4131fb:	xor    esp,DWORD PTR [ebx]
  4131fd:	retf   
  4131fe:	pop    ebx
  4131ff:	adc    BYTE PTR [edx-0x5fb97513],ch
  413205:	mov    ebp,es
  413207:	mov    DWORD PTR [ecx+0x2f],ebx
  41320a:	mov    eax,DWORD PTR [esi-0x74]
  41320d:	aam    0xc6
  41320f:	lea    esp,[ecx]
  413211:	inc    ebx
  413212:	mov    DWORD PTR [ebp-0x14],eax
  413215:	adc    edi,DWORD PTR [edi+edi*8-0x3f7df74d]
  41321c:	sub    ecx,edi
  41321e:	inc    esi
  41321f:	cmp    edx,DWORD PTR [edx]
  413221:	add    esi,DWORD PTR [eax-0x22]
  413224:	in     eax,0xa9
  413226:	adc    al,0x89
  413228:	adc    ch,bl
  41322a:	jmp    0x9b03:0xe8b6d741
  413231:	jp     0x4132ae
  413233:	adc    al,0xc5
  413235:	push   ecx
  413236:	sbb    BYTE PTR [eax+0x3332141d],dh
  41323c:	(bad)  
  41323e:	dec    BYTE PTR [ecx+0x4588e75a]
  413244:	cld    
  413245:	leave  
  413246:	inc    ebx
  413247:	or     BYTE PTR [ebx],ah
  413249:	ja     0x413247
  41324b:	add    BYTE PTR [ebp-0x13ccfe18],dh
  413251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413252:	jns    0x4132a0
  413254:	add    DWORD PTR [eax+0xf836],eax
	...
  41326a:	add    BYTE PTR [eax],al
  41326c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41326e:	add    BYTE PTR [edx+0x1dcbf0c9],cl
  413274:	push   0xc57dccd9
  413279:	std    
  41327a:	jle    0x413248
  41327c:	mov    ch,0xe8
  41327e:	add    DWORD PTR [ecx-0x402bffb5],ecx
  413284:	bound  esp,QWORD PTR [esi-0x2d0936d5]
  41328a:	daa    
  41328b:	add    edx,eax
  41328d:	ins    BYTE PTR es:[edi],dx
  41328e:	popf   
  41328f:	jmp    FWORD PTR [edx-0x3a823318]
  413295:	cld    
  413296:	cdq    
  413297:	mov    ch,bl
  413299:	cld    
  41329a:	jnp    0x4132af
  41329c:	ret    0x3781
  41329f:	sbb    al,0x3d
  4132a1:	xor    ecx,DWORD PTR [ecx+0xdd474f5]
  4132a7:	inc    edx
  4132a8:	and    DWORD PTR [edi+0x63d073f9],0x3c
  4132af:	mov    edi,0x76eabf35
  4132b4:	mov    dh,0x68
  4132b6:	les    ebx,FWORD PTR [edi]
  4132b8:	sub    BYTE PTR [edx+0x49],al
  4132bb:	jg     0x413309
  4132bd:	(bad)  
  4132be:	syscall 
  4132c0:	xor    eax,0x98eae1aa
  4132c5:	jo     0x4132f5
  4132c7:	dec    DWORD PTR [esi-0x15]
  4132ca:	clc    
  4132cb:	mov    ebp,0x148917f6
	...
  4132e4:	gs aam 0x41
  4132e7:	add    BYTE PTR [edi],ch
  4132e9:	mov    al,ds:0x8f70bdf8
  4132ee:	out    0x34,al
  4132f0:	adc    bl,BYTE PTR [edi+edx*4+0x5f8fcaf0]
  4132f7:	inc    ecx
  4132f8:	add    cl,BYTE PTR [edx]
  4132fa:	and    eax,0xc65c2c94
  4132ff:	retf   0x7b0c
  413302:	sbb    eax,0xe993708e
  413307:	ucomiss xmm1,DWORD PTR [edi]
  41330a:	mov    bl,0xfa
  41330c:	popa   
  41330d:	stos   DWORD PTR es:[edi],eax
  41330e:	addr16 mov al,cl
  413311:	jl     0x413311
  413313:	jp     0x41338e
  413315:	not    edx
  413317:	xor    eax,0x116a86a5
  41331c:	mov    edx,0x7b86f5
  413321:	test   BYTE PTR [edi-0x197113d9],bh
  413327:	sbb    BYTE PTR [edx],0xf5
  41332a:	outs   dx,BYTE PTR ds:[esi]
  41332b:	xchg   ebx,esi
  41332d:	hlt    
  41332e:	lods   al,BYTE PTR ds:[esi]
  41332f:	mov    ebx,DWORD PTR [edi-0x4375985b]
  413335:	test   BYTE PTR [ebp+ebp*1-0x7e],ch
  413339:	cmc    
  41333a:	dec    esi
  41333b:	test   BYTE PTR [edi-0x7d],bh
  41333e:	test   BYTE PTR [eax-0x78c10afe],0x3f
  413345:	inc    ebx
  413346:	cmp    ecx,ebx
	...
  41335c:	lock xchg esi,ebx
  41335f:	xor    dh,0xf4
  413362:	xchg   DWORD PTR es:[edi],edi
  413365:	inc    esi
  413366:	jecxz  0x413333
  413368:	out    0x8e,al
  41336a:	call   0xefe6d65
  41336f:	xchg   DWORD PTR [ebx],edi
  413371:	push   eax
  413372:	push   es
  413373:	inc    ecx
  413374:	sub    DWORD PTR [ebp-0x2],ecx
  413377:	inc    eax
  413378:	sub    eax,0x75f60050
  41337d:	sti    
  41337e:	xchg   DWORD PTR [esi+eax*2+0xbf146ba],esp
  413385:	or     al,0xd
  413387:	fidiv  WORD PTR [ebx]
  413389:	div    BYTE PTR [ecx]
  41338b:	test   eax,0xe81c4b30
  413390:	jns    0x413404
  413392:	sbb    BYTE PTR ds:0xd97eb8c5,bh
  413398:	jecxz  0x4133ba
  41339a:	rol    eax,0xe8
  41339d:	cmc    
  41339e:	std    
  41339f:	scas   al,BYTE PTR es:[edi]
  4133a0:	pop    edi
  4133a1:	push   edx
  4133a2:	or     BYTE PTR [ebx-0x78],dh
  4133a5:	mov    cs,WORD PTR [ecx+0x394fb537]
  4133ab:	stos   BYTE PTR es:[edi],al
  4133ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133ad:	mov    WORD PTR [eax],?
  4133af:	fnsave [ebx+edi*2+0x7b77c2f6]
  4133b6:	or     BYTE PTR [edx-0x18],dh
  4133b9:	lahf   
  4133ba:	out    0x3d,eax
  4133bc:	cmp    ch,dh
  4133be:	std    
  4133bf:	add    eax,DWORD PTR [eax]
	...
  4133d1:	add    BYTE PTR [eax],al
  4133d3:	add    BYTE PTR [ecx+0x46b48b5a],dl
  4133d9:	pop    edi
  4133da:	call   0xfe35b406
  4133df:	call   0xa4690fd9
  4133e4:	dec    esi
  4133e5:	pop    es
  4133e6:	jg     0x4133c9
  4133e8:	dec    edi
  4133e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133ea:	mov    DWORD PTR [edi+0x60c59162],esp
  4133f0:	cmc    
  4133f1:	ror    DWORD PTR [ecx-0x3a569959],cl
  4133f7:	je     0x413386
  4133f9:	fild   WORD PTR [edi+0x27ec16a4]
  4133ff:	pop    ss
  413400:	cmp    esi,ebp
  413402:	mov    DWORD PTR [esi+ebx*1-0x5aff326f],ebx
  413409:	mov    edx,0xfddc8418
  41340e:	test   BYTE PTR [eax+0x2a],bh
  413411:	or     bh,bh
  413413:	inc    edi
  413414:	mov    dl,BYTE PTR [bx+si]
  413417:	jb     0x413467
  413419:	sbb    BYTE PTR [ebx+0x3e09ebfe],ah
  41341f:	jmp    0x4041af
  413424:	shl    DWORD PTR [esi-0x17],0x83
  413428:	or     bh,ah
  41342a:	push   ebx
  41342b:	push   edi
  41342c:	sbb    ebp,DWORD PTR [bx+si+0x1c]
  413430:	pop    ecx
  413431:	mov    ah,0xe4
  413433:	push   eax
  413434:	ret    0xfd99
  413437:	xor    eax,DWORD PTR [eax]
	...
  413449:	add    BYTE PTR [eax],al
  41344b:	add    BYTE PTR [ebx],bl
  41344d:	or     dl,BYTE PTR ds:0x4fce68
  413453:	test   DWORD PTR [edi+ebx*4],ecx
  413456:	and    BYTE PTR [ecx+0xffe1fa9],al
  41345c:	pushf  
  41345d:	(bad)  
  41345e:	jae    0x413477
  413460:	and    esi,DWORD PTR [ebx-0x7072fe08]
  413466:	add    BYTE PTR [ebp+0x7a],dh
  413469:	fdiv   DWORD PTR [esp+eiz*8+0x7]
  41346d:	mov    bl,0xf0
  41346f:	cmp    edx,edx
  413471:	add    DWORD PTR [ebx+ebp*1],0x8bf578d2
  413478:	shr    DWORD PTR [esi+ebx*2-0x765d6037],cl
  41347f:	in     al,dx
  413480:	fist   WORD PTR [edi]
  413482:	sub    dl,BYTE PTR [esi+0x5f]
  413485:	add    eax,0x82d5c38b
  41348a:	clc    
  41348b:	call   0x404174
  413490:	fild   WORD PTR [ebx]
  413492:	sbb    al,0xf
  413494:	mov    ch,0x66
  413496:	mov    ?,edi
  413498:	cmp    ch,cl
  41349a:	jbe    0x4134e0
  41349c:	xor    DWORD PTR [ecx],ebx
  41349e:	sbb    BYTE PTR [eax-0x61],al
  4134a1:	shl    BYTE PTR [eax],cl
  4134a3:	push   0x22
  4134a5:	cli    
  4134a6:	out    dx,al
  4134a7:	pop    edi
  4134a8:	(bad)  
  4134a9:	sub    BYTE PTR [edx],al
  4134ab:	test   ebp,esi
  4134ad:	stc    
  4134ae:	jge    0x41348c
	...
  4134c4:	mov    ch,0xe8
  4134c6:	add    DWORD PTR [edx-0x2a],ebp
  4134c9:	imul   edi,DWORD PTR [esi],0xffffffd4
  4134cc:	(bad)  
  4134cd:	js     0x413500
  4134cf:	dec    eax
  4134d1:	cwde   
  4134d2:	out    dx,al
  4134d3:	aas    
  4134d4:	mov    ch,0x65
  4134d6:	mov    ebp,0xe64e8b0b
  4134db:	mov    WORD PTR [eax+0x1c],?
  4134de:	xor    dl,BYTE PTR [ebx+0x5f]
  4134e1:	sub    DWORD PTR [ebp+0x41f65114],eax
  4134e7:	add    BYTE PTR [eax],bh
  4134e9:	sub    ebp,esi
  4134eb:	adc    DWORD PTR [edi],0xffffffe9
  4134ee:	add    DWORD PTR [eax],eax
  4134f0:	or     bh,BYTE PTR [esi+eax*1-0x2c]
  4134f4:	add    edi,DWORD PTR [esi-0x44]
  4134f7:	dec    edi
  4134f8:	mov    ?,WORD PTR [eax]
  4134fa:	add    eax,esi
  4134fc:	(bad)
  413502:	add    DWORD PTR [eax],eax
  413504:	mov    ch,0x7e
  413506:	hlt    
  413507:	jg     0x413585
  413509:	dec    edi
  41350a:	or     eax,0x995f3505
  41350f:	je     0x4134d1
  413511:	mov    DWORD PTR gs:[eax+eiz*8],eax
  413515:	add    BYTE PTR [ecx-0x3e],bh
  413518:	mov    fs,WORD PTR [ebx]
  41351a:	test   BYTE PTR [eax],0xf2
  41351d:	out    0x17,eax
  41351f:	add    BYTE PTR [esi],dh
  413521:	(bad)  
  413522:	and    eax,0x6ca0c7fe
  413527:	pop    es
	...
  41353c:	mov    bl,bl
  41353e:	mov    esi,0xea223c9b
  413543:	add    esi,DWORD PTR [esi]
  413545:	test   DWORD PTR [esi],0xa2e5f30e
  41354b:	js     0x413544
  41354d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41354e:	lods   al,BYTE PTR ds:[esi]
  41354f:	imul   DWORD PTR [ecx]
  413551:	jno    0x413537
  413553:	sbb    BYTE PTR [edx],0x8c
  413556:	jo     0x413520
  413558:	rcr    esp,0x36
  41355b:	xchg   ecx,eax
  41355c:	jns    0x413539
  41355e:	aaa    
  41355f:	add    DWORD PTR [ecx-0x56375a7d],0xffffffdb
  413566:	ror    BYTE PTR [edi-0x3c26a85f],1
  41356c:	loop   0x4135d5
  41356e:	mov    dh,0x83
  413570:	add    BYTE PTR [eax+ebp*4],cl
  413573:	clc    
  413574:	test   DWORD PTR [esi],eax
  413576:	sub    eax,0x6ace9e0c
  41357b:	ins    BYTE PTR es:[edi],dx
  41357c:	mov    ecx,0xb514150e
  413581:	leave  
  413582:	and    al,0x58
  413584:	popf   
  413585:	pop    es
  413586:	sub    eax,0x72882659
  41358b:	fldcw  WORD PTR [esi+0x183a304]
  413591:	mov    al,ds:0x8b1f0401
  413596:	je     0x413561
  413598:	pushaw 
  41359a:	mov    edx,0x3df183ed
  41359f:	mov    DWORD PTR [eax],eax
	...
  4135b1:	add    BYTE PTR [eax],al
  4135b3:	add    BYTE PTR [edx],bh
  4135b5:	jl     0x4135a1
  4135b7:	mov    ecx,?
  4135b9:	mul    DWORD PTR [esi-0x680c0e70]
  4135bf:	sub    cl,0xf3
  4135c2:	add    bl,al
  4135c4:	xchg   esp,eax
  4135c5:	pop    esp
  4135c6:	push   0x2e
  4135c8:	ss pushf 
  4135ca:	pusha  
  4135cb:	sti    
  4135cc:	jbe    0x4135bf
  4135ce:	mov    ah,BYTE PTR [esi+edi*4-0x5ad438ae]
  4135d5:	(bad)  
  4135d6:	push   ebx
  4135d7:	bound  esp,QWORD PTR [ebp+0x1c6a4f5f]
  4135dd:	stc    
  4135de:	add    BYTE PTR [esi+0x7437f0eb],dl
  4135e4:	scas   al,BYTE PTR es:[edi]
  4135e5:	jnp    0x413635
  4135e7:	xchg   edi,eax
  4135e8:	inc    ebx
  4135e9:	mov    esp,0xf0f6fdb8
  4135ee:	mov    WORD PTR [ecx+eax*4],fs
  4135f1:	inc    eax
  4135f2:	push   ebp
  4135f3:	fs in  eax,dx
  4135f5:	hlt    
  4135f6:	push   eax
  4135f7:	inc    ebx
  4135f8:	mov    ebx,0x37f173f0
  4135fd:	fild   DWORD PTR [ebx-0x76412257]
  413603:	sub    al,0x59
  413605:	or     eax,ecx
  413607:	xor    eax,0xebc10ca2
  41360c:	ret    0xe8ac
  41360f:	push   ss
  413610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413611:	pop    DWORD PTR [eax]
  413613:	bound  edi,QWORD PTR [esi]
  413615:	or     edi,esi
  413617:	adc    eax,0x0
	...
  41362c:	rol    BYTE PTR [edx],cl
  41362e:	inc    esp
  41362f:	icebp  
  413630:	xchg   cl,dh
  413632:	jae    0x4135b5
  413634:	jg     0x41369c
  413636:	add    dh,BYTE PTR [esi-0x63]
  413639:	mov    ch,bh
  41363b:	xchg   edi,eax
  41363c:	cmp    eax,0x6ff17430
  413641:	call   0x8ff823cf
  413646:	xor    DWORD PTR [esi-0x6c],edx
  413649:	add    eax,0xcf01aec6
  41364e:	add    al,0x0
  413650:	pop    esp
  413651:	fst    DWORD PTR [esi-0x1]
  413654:	sub    BYTE PTR [eax+0x64c7320c],ch
  41365a:	mov    edi,?
  41365c:	mov    ds:0xd9f88b0d,eax
  413661:	or     eax,0xd0a2b72
  413666:	jb     0x41368c
  413668:	cmp    BYTE PTR [esp+edi*2-0x1],ah
  41366c:	ret    
  41366d:	or     eax,0x7699f08b
  413672:	jno    0x413688
  413674:	dec    edx
  413675:	aad    0xfe
  413677:	adc    eax,0x409a38
  41367c:	cdq    
  41367d:	dec    esp
  41367e:	je     0x413682
  413680:	adc    cl,BYTE PTR [edx+0x53]
  413683:	call   0x41d64e
  413688:	mov    ebx,0xdc0c4163
  41368d:	mov    ebx,DWORD PTR [esi+0x5f]
	...
  4136a4:	dec    dx
  4136a6:	pop    edx
  4136a7:	ret    0x8be4
  4136aa:	std    
  4136ab:	je     0x413655
  4136ad:	xchg   ebp,edi
  4136af:	adc    eax,0x409874
  4136b4:	mov    WORD PTR [ebx-0x56],fs
  4136b7:	jmp    DWORD PTR [ebx]
  4136b9:	push   cs
  4136ba:	add    al,0x99
  4136bd:	popf   
  4136be:	std    
  4136bf:	je     0x413739
  4136c1:	xchg   edi,eax
  4136c2:	std    
  4136c3:	adc    eax,0x4086e4
  4136c8:	sbb    DWORD PTR [ecx+esi*2+0x3],edx
  4136cc:	pop    edi
  4136cd:	push   ebx
  4136ce:	cmp    eax,0x539398c2
  4136d3:	mov    esp,eax
  4136d5:	adc    al,0xea
  4136d7:	sub    al,0x3f
  4136d9:	leave  
  4136da:	xor    bl,bl
  4136dc:	mov    ch,0x2d
  4136de:	(bad)  
  4136df:	je     0x41373a
  4136e1:	add    DWORD PTR [ebx-0x76069501],ebx
  4136e7:	pop    esp
  4136e8:	bound  eax,QWORD PTR [ecx+0x18]
  4136eb:	icebp  
  4136ec:	mov    ch,0xf8
  4136ee:	sar    bh,0x52
  4136f1:	stc    
  4136f2:	adc    DWORD PTR [edi-0x1a],edx
  4136f5:	popa   
  4136f6:	dec    edx
  4136f7:	dec    edi
  4136f8:	inc    edx
  4136f9:	in     al,0xb5
  4136fb:	adc    esi,ebp
  4136fd:	clc    
  4136fe:	mov    al,BYTE PTR [ebp+ebp*1-0x3e]
  413702:	inc    esp
  413703:	je     0x4136c7
  413705:	or     ecx,ebx
  413707:	push   edx
	...
  41371c:	cs mov bh,0xd4
  41371f:	inc    al
  413721:	rcl    BYTE PTR [esi],0x40
  413724:	mov    ch,0x6f
  413726:	(bad)
  413729:	cmp    DWORD PTR [ecx],edx
  41372b:	test   BYTE PTR [edx-0x7],bl
  41372e:	add    DWORD PTR [eax],eax
  413730:	cli    
  413731:	jmp    0x41371c
  413733:	adc    al,0x75
  413735:	clc    
  413736:	xor    BYTE PTR [ebp+ebp*8+0x5f],0xc6
  41373b:	repz int 0xae
  41373e:	jg     0x41373e
  413740:	fidivr DWORD PTR [ecx+eax*2+0xe]
  413744:	cmp    DWORD PTR [ecx+eax*1+0x0],esi
  413748:	mov    ch,0x61
  41374a:	mov    BYTE PTR [edi],0x2c
  41374d:	mov    ah,0xc
  41374f:	cmp    esi,esi
  413751:	mov    edx,DWORD PTR [esi]
  413753:	(bad)  
  413754:	clc    
  413755:	and    al,0x8b
  413757:	inc    esp
  413758:	mov    ebp,0x4ab77161
  41375d:	clc    
  41375e:	add    DWORD PTR [eax],eax
  413760:	lea    esp,[edi-0x7a6d008f]
  413766:	rcl    DWORD PTR [edx-0x76],cl
  413769:	(bad)  
  41376a:	fmul   QWORD PTR [ebx]
  41376c:	add    BYTE PTR [ebx+eiz*1+0x628ff517],0x73
  413774:	scas   eax,DWORD PTR es:[edi]
  413775:	loop   0x41374b
  413777:	pop    ss
  413778:	push   es
  413779:	inc    edi
  41377a:	call   0xb:0xb4ef07d4
	...
  413791:	add    BYTE PTR [eax],al
  413793:	add    BYTE PTR [edx-0x7c],bl
  413796:	mov    ds:0x628ff516,eax
  41379b:	jae    0x41372c
  41379d:	loop   0x41373a
  41379f:	cmp    DWORD PTR [edx-0x7c],eax
  4137a2:	mov    bh,0x15
  4137a4:	cmc    
  4137a5:	(bad)  
  4137a6:	mov    bh,0x80
  4137a8:	leave  
  4137a9:	push   ebx
  4137aa:	hlt    
  4137ab:	ret    
  4137ac:	sub    al,BYTE PTR [edi+edx*4+0x6b]
  4137b0:	(bad)  
  4137b1:	in     al,dx
  4137b2:	(bad)  
  4137b3:	jg     0x4137eb
  4137b5:	iret   
  4137b6:	jl     0x4137c9
  4137b8:	imul   ebp,esi,0xffffffd4
  4137bb:	mov    edi,0x8be74fa6
  4137c0:	popa   
  4137c1:	out    dx,al
  4137c2:	fs inc esp
  4137c4:	xchg   BYTE PTR [ebx-0x700c3653],dl
  4137ca:	xor    eax,0xdbcfc17f
  4137cf:	ret    
  4137d0:	loop   0x413777
  4137d2:	sbb    al,0x7f
  4137d4:	popa   
  4137d5:	pushf  
  4137d6:	lock loopne 0x41379f
  4137d9:	(bad)  
  4137da:	fistp  QWORD PTR [esi+0x41]
  4137dd:	jecxz  0x41376e
  4137df:	jne    0x4137a1
  4137e1:	in     eax,dx
  4137e2:	sahf   
  4137e3:	jg     0x413826
  4137e5:	out    0x96,eax
  4137e7:	sbb    ecx,edx
  4137e9:	and    BYTE PTR [edi],0x4
  4137ec:	aas    
  4137ed:	push   ebx
  4137ee:	xchg   bh,bl
  4137f0:	add    BYTE PTR [ecx-0x50],cl
  4137f3:	inc    edx
  4137f4:	mov    dh,0x8f
  4137f6:	add    BYTE PTR [eax+eax*1],bl
	...
  413809:	add    BYTE PTR [eax],al
  41380b:	add    BYTE PTR [esi],bh
  41380d:	stc    
  41380e:	dec    edi
  41380f:	pop    ss
  413810:	ds std 
  413812:	mov    ebp,DWORD PTR [edx+eax*1-0x4b2ca9a3]
  413819:	aam    0x43
  41381b:	push   ebp
  41381c:	mov    ebp,0xebe9008e
  413821:	adc    eax,0xffffffda
  413824:	jbe    0x413813
  413826:	sub    DWORD PTR [ecx],0xac899f5d
  41382c:	rcl    BYTE PTR [ebx],cl
  41382e:	shl    DWORD PTR [ebp-0x70385f61],0x31
  413835:	cdq    
  413836:	inc    esi
  413837:	jb     0x41382c
  413839:	jb     0x413872
  41383b:	out    0x2a,eax
  41383d:	mov    bl,0xd
  41383f:	push   esi
  413840:	mov    ecx,0x2ad6f810
  413845:	xchg   esp,eax
  413846:	add    DWORD PTR [eax],0x83066415
  41384c:	adc    cl,BYTE PTR [eax+0x66]
  41384f:	pusha  
  413850:	mov    ecx,0x18ebc110
  413855:	adc    bh,BYTE PTR [ecx]
  413857:	jmp    0xe22b2959
  41385c:	fsub   QWORD PTR [eax+ebx*2-0x3f]
  413860:	mov    bh,ch
  413862:	add    cl,ch
  413864:	add    al,bl
  413866:	rcl    DWORD PTR [esi+ebp*1],0xf9
  41386a:	or     ebp,0x35ed0f4e
	...
  413884:	mov    dh,0x8f
  413886:	add    BYTE PTR [edx],bh
  413888:	jmp    0x4138cf
  41388a:	xor    edx,eax
  41388c:	into   
  41388d:	mov    BYTE PTR [ebx+0x29],dh
  413890:	mov    ecx,0xdd2d8840
  413895:	test   ch,bh
  413897:	add    BYTE PTR [ecx-0x73bff1f4],al
  41389d:	sbb    eax,DWORD PTR [edx+0x24]
  4138a0:	ins    BYTE PTR es:[edi],dx
  4138a1:	test   eax,0xd2100fc1
  4138a6:	add    BYTE PTR [eax],al
  4138a8:	mov    WORD PTR [ecx],ds
  4138aa:	xor    eax,0xfdd07c90
  4138af:	push   edx
  4138b0:	sub    al,0xa1
  4138b2:	std    
  4138b3:	jmp    DWORD PTR [edx+0x7c74c1a9]
  4138b9:	sar    dh,0x74
  4138bc:	mov    al,0x87
  4138be:	inc    ebp
  4138bf:	push   DWORD PTR [edx-0x7f8a3e57]
  4138c5:	test   eax,0x524675f9
  4138ca:	inc    ecx
  4138cb:	and    al,0x4b
  4138cd:	xchg   ebx,eax
  4138ce:	out    0xe,eax
  4138d0:	sbb    eax,0x416a0090
  4138d5:	push   DWORD PTR [ecx+0x24]
  4138d8:	in     al,dx
  4138d9:	(bad)  
  4138da:	mov    BYTE PTR [eax+esi*8-0x79],bl
  4138de:	xchg   DWORD PTR [eax+eax*1-0x7c],ebx
  4138e2:	call   0xd24455
  4138e7:	push   0x0
	...
  4138f9:	add    BYTE PTR [eax],al
  4138fb:	add    BYTE PTR [eax],dl
  4138fd:	mov    edi,0xa487c68a
  413902:	mov    BYTE PTR [eax],dl
  413904:	pushf  
  413905:	xchg   ebx,eax
  413906:	push   eax
  413907:	lea    edx,[eax-0x4afdf49]
  41390d:	out    0x21,al
  41390f:	and    BYTE PTR [ebx],bl
  413911:	inc    ebp
  413912:	test   al,al
  413914:	fist   DWORD PTR [ebx]
  413916:	fild   DWORD PTR [eax]
  413918:	fmul   QWORD PTR [edi-0x7c0fbb77]
  41391e:	cmp    ebx,eax
  413920:	mov    eax,ds:0xb5c03197
  413925:	or     eax,0xf0a5e806
  41392a:	add    DWORD PTR [eax],eax
  41392c:	sub    al,0xbd
  41392e:	sub    BYTE PTR [eax],bl
  413930:	fidiv  WORD PTR ds:0xf953840c
  413936:	add    DWORD PTR [eax],eax
  413938:	pop    ds
  413939:	cmc    
  41393a:	ror    BYTE PTR [ecx+edi*8+0x2850289c],1
  413941:	xor    eax,0x42052026
  413946:	clc    
  413947:	and    edx,DWORD PTR [ebp+0x75845659]
  41394d:	loop   0x4138d4
  41394f:	cdq    
  413950:	mov    ch,0xf8
  413952:	add    DWORD PTR [eax-0x4f],ebp
  413955:	sub    eax,edx
  413957:	push   DWORD PTR [edi]
  413959:	mov    cl,0x7b
  41395b:	mov    ecx,cs
  41395d:	fdiv   st(5),st
  41395f:	out    0x0,eax
	...
  413971:	add    BYTE PTR [eax],al
  413973:	add    BYTE PTR [eax-0x66],dl
  413976:	jnp    0x413976
  413978:	ds mov ebx,0x28c0fed4
  41397e:	pop    ss
  41397f:	inc    eax
  413980:	mov    ch,0x63
  413982:	enter  0xcd23,0x8
  413986:	jge    0x41399c
  413988:	add    esi,0x629cffc1
  41398e:	mov    ?,WORD PTR [ebx-0x27]
  413991:	mov    ah,0xdc
  413993:	out    0x13,eax
  413995:	fild   DWORD PTR [ecx]
  413997:	add    BYTE PTR [eax+0x7d],al
  41399a:	and    eax,0x1f8b478
  41399f:	call   0xfebe0cbc
  4139a4:	stos   BYTE PTR es:[edi],al
  4139a5:	popa   
  4139a6:	lds    esp,FWORD PTR [ebx]
  4139a8:	popf   
  4139a9:	mov    BYTE PTR [ebx],cl
  4139ab:	mov    bh,0x71
  4139ad:	xchg   esp,eax
  4139ae:	cs push eax
  4139b0:	mov    dl,0x8f
  4139b2:	pop    esi
  4139b3:	(bad)  
  4139b4:	xchg   esi,eax
  4139b5:	mov    eax,ds:0xb3368f37
  4139ba:	imul   eax,DWORD PTR [ebx],0xffffffb5
  4139bd:	(bad)  
  4139be:	aaa    
  4139bf:	(bad)  
  4139c0:	ss mov bl,0x6f
  4139c3:	add    dh,BYTE PTR [ebp+0x7889178f]
  4139c9:	aas    
  4139ca:	add    DWORD PTR [esi],edi
  4139cc:	out    dx,al
  4139cd:	sbb    al,0x2c
  4139cf:	daa    
  4139d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139d1:	nop
  4139d2:	out    0x3,eax
  4139d4:	lea    ebx,[esi+edx*2+0x7c]
	...
  4139ec:	jae    0x4139fc
  4139ee:	sub    al,0x1b
  4139f0:	xor    bh,cl
  4139f2:	int    0x23
  4139f4:	bound  esp,QWORD PTR [ebx+0xb]
  4139f7:	sbb    BYTE PTR [esi],ch
  4139f9:	sar    BYTE PTR [esi],cl
  4139fb:	not    DWORD PTR [esi-0x51146875]
  413a01:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  413a03:	add    ecx,edi
  413a05:	lea    ecx,[edi]
  413a07:	adc    eax,0x87e78fd3
  413a0c:	jb     0x413a71
  413a0e:	in     al,dx
  413a0f:	inc    ebp
  413a10:	jbe    0x4139c5
  413a12:	fiadd  WORD PTR [edx]
  413a14:	out    0xc6,al
  413a16:	push   es
  413a17:	not    esi
  413a19:	xchg   DWORD PTR [edi],ecx
  413a1b:	fidivr DWORD PTR [ebp+0xbd0e78f]
  413a21:	arpl   bx,ax
  413a23:	pop    ss
  413a24:	add    al,BYTE PTR [edi+edi*2+0x718f7514]
  413a2b:	rcl    BYTE PTR [esi-0x7025c966],0x16
  413a32:	(bad)
  413a35:	inc    ebx
  413a36:	jb     0x413aa0
  413a38:	aaa    
  413a39:	repz mov edi,0xeade85
  413a3f:	jmp    0x4139f7
  413a41:	(bad)  
  413a42:	push   ecx
  413a43:	pop    ss
  413a44:	xor    ah,BYTE PTR [ebx+0x8]
  413a47:	ds arpl WORD PTR ds:[eax],dx
  413a4b:	sahf   
  413a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a4d:	xchg   ebp,eax
  413a4e:	push   esi
  413a4f:	xchg   esi,eax
	...
  413a64:	les    eax,FWORD PTR [ebx]
  413a66:	adc    DWORD PTR [ecx],ebp
  413a68:	mov    ecx,0xc6cd4516
  413a6d:	adc    al,cl
  413a6f:	out    dx,al
  413a70:	adc    al,BYTE PTR [eax-0x1f491701]
  413a76:	inc    ebx
  413a77:	fnstenv [esi-0x5006ff71]
  413a7d:	adc    al,BYTE PTR ds:0x838fb6e8
  413a83:	pop    edi
  413a84:	mov    esi,0xb6e9fd13
  413a89:	pop    DWORD PTR [ecx-0x79674ef9]
  413a8f:	cmp    bh,BYTE PTR [ecx+0x4f6a008f]
  413a95:	lea    eax,[eax]
  413a97:	faddp  st(2),st
  413a99:	test   DWORD PTR [eax],0x5ff7b6e9
  413a9f:	cli    
  413aa0:	mov    dh,0x8f
  413aa2:	test   BYTE PTR [ecx],ch
  413aa4:	mov    esi,0xb6e9dd13
  413aa9:	(bad)  
  413aaa:	mov    ebp,DWORD PTR [ebp-0x1af5046]
  413ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ab1:	pop    ebx
  413ab2:	adc    ch,BYTE PTR [ecx+0x5c7675b6]
  413ab8:	inc    ebp
  413ab9:	lods   eax,DWORD PTR ds:[esi]
  413aba:	(bad)  
  413abb:	jmp    0xd199ca76
  413ac0:	xchg   edx,eax
  413ac1:	sti    
  413ac2:	add    cl,ch
  413ac4:	fsub   DWORD PTR [ecx-0x75]
  413ac7:	push   ebp
	...
  413adc:	xchg   ebp,eax
  413add:	mov    ds:0x45040058,eax
  413ae2:	in     al,dx
  413ae3:	add    ah,bl
  413ae5:	pop    ss
  413ae6:	and    BYTE PTR [esp+ebx*8],0x93
  413aea:	add    BYTE PTR [eax],al
  413aec:	hlt    
  413aed:	std    
  413aee:	cld    
  413aef:	call   DWORD PTR [ebx]
  413af1:	xchg   esi,eax
  413af2:	mov    ch,0x44
  413af4:	js     0x413aa2
  413af6:	push   eax
  413af7:	ud2    
  413af9:	sub    DWORD PTR [edx],esp
  413afb:	fcom   QWORD PTR es:[ebp+esi*4+0x50b66844]
  413b03:	mov    ebx,DWORD PTR [edx-0x44]
  413b06:	mov    WORD PTR [eax+edi*2-0x73000084],es
  413b0d:	mov    esp,0x3fa8848c
  413b12:	std    
  413b13:	call   FWORD PTR [esp+edi*4+0x67]
  413b17:	ds daa 
  413b19:	pop    ss
  413b1a:	jp     0x413b40
  413b1c:	and    al,0x74
  413b1e:	aas    
  413b1f:	div    bl
  413b21:	gs add ah,0x54
  413b25:	movsx  edi,BYTE PTR [esi+0xe]
  413b29:	sbb    DWORD PTR [ebp+0x8],eax
  413b2c:	xchg   ebx,eax
  413b2d:	pushf  
  413b2e:	std    
  413b2f:	jo     0x413b79
  413b31:	sbb    edi,eax
  413b33:	push   eax
  413b34:	pcmpgtw mm2,QWORD PTR [esi+0x6a]
  413b38:	push   ds
  413b39:	je     0x413b47
  413b3b:	gs or  al,0x8c
  413b3e:	test   al,al
	...
  413b54:	cwde   
  413b55:	retf   
  413b56:	mov    dh,BYTE PTR [ebp+0x20]
  413b59:	test   eax,0xee2e74f5
  413b5e:	cmp    BYTE PTR [esi],bh
  413b60:	mov    bh,dl
  413b62:	mov    WORD PTR [eax+ebp*4-0x2d],es
  413b66:	dec    ebp
  413b67:	(bad)  
  413b68:	jmp    0xb5814acc
  413b6d:	imul   bl
  413b6f:	pop    es
  413b70:	dec    ebp
  413b71:	xchg   edx,eax
  413b72:	in     eax,dx
  413b73:	aas    
  413b74:	mov    ch,0x63
  413b76:	rol    BYTE PTR [ebx+0x7d],0x86
  413b7a:	ins    BYTE PTR es:[edi],dx
  413b7b:	jae    0x413b3a
  413b7d:	test   BYTE PTR [ecx],0x33
  413b80:	in     al,dx
  413b81:	dec    edi
  413b82:	mov    DWORD PTR [edi-0x53],eax
  413b85:	test   al,0x85
  413b87:	jae    0x413b62
  413b89:	nop
  413b8a:	add    edi,0xffffffaa
  413b8d:	adc    DWORD PTR [esi],esp
  413b8f:	mul    DWORD PTR [edx+0x21bf8116]
  413b95:	repz js 0x413c0b
  413b98:	fld    st(4)
  413b9a:	xchg   BYTE PTR [ebx-0x2f],al
  413b9d:	mov    ah,0x77
  413b9f:	jae    0x413b7a
  413ba1:	rcl    cl,0x56
  413ba4:	psubq  mm5,QWORD PTR [ecx-0x4c]
  413ba8:	fprem  
  413baa:	add    eax,ebp
  413bac:	push   0x47
  413bae:	ja     0x413bae
  413bb0:	cs sub eax,0x2efa101e
  413bb6:	fisttp QWORD PTR [edx+0x0]
	...
  413bcc:	pop    eax
  413bcd:	add    al,0x44
  413bcf:	or     esi,DWORD PTR [ebp+0x3d830471]
  413bd5:	mov    dh,0xf0
  413bd7:	or     dh,BYTE PTR [eax]
  413bd9:	mov    ecx,0x858506f0
  413bde:	or     eax,0x238c7c0
  413be3:	ret    
  413be4:	mov    BYTE PTR [ecx+0x68],dh
  413be7:	adc    BYTE PTR [ecx],0x91
  413bea:	sub    ebx,0xffffffc1
  413bed:	or     esp,ebp
  413bef:	(bad)  
  413bf0:	aas    
  413bf1:	or     DWORD PTR [ebx+0x78cb9d44],0xe68f7afe
  413bfb:	shl    ebx,cl
  413bfd:	pop    esp
  413bfe:	repz in eax,dx
  413c00:	jmp    0xdb5c:0xe2145ce5
  413c07:	js     0x413c6a
  413c09:	xchg   edi,eax
  413c0a:	(bad)  
  413c0b:	push   cs
  413c0c:	test   DWORD PTR [ecx-0x17c9fbd9],eax
  413c12:	mov    dh,0xee
  413c14:	mov    dh,0xa1
  413c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c17:	ins    BYTE PTR es:[edi],dx
  413c18:	xchg   ecx,eax
  413c19:	fisubr WORD PTR [esp+ebx*1]
  413c1c:	mov    ch,0x8f
  413c1e:	add    edi,DWORD PTR [si]
  413c21:	xchg   edx,eax
  413c22:	sbb    ebx,DWORD PTR [esi+esi*1]
  413c25:	push   ebx
  413c26:	ret    
  413c27:	or     ebx,DWORD PTR [edx-0x3edfcbee]
  413c2d:	out    0x6c,al
  413c2f:	mov    edi,0x0
	...
  413c44:	(bad)  
  413c45:	xchg   edi,eax
  413c46:	pop    ss
  413c47:	aam    0xf2
  413c49:	jns    0x413c32
  413c4b:	imul   ecx,DWORD PTR [ecx+edx*4-0x6fdafc19],0xffffffc2
  413c53:	mov    WORD PTR [ecx+0x44],ss
  413c56:	sub    DWORD PTR [edi],ecx
  413c58:	mov    ch,0x3c
  413c5a:	bound  esp,QWORD PTR [edi+0x5]
  413c5d:	inc    ecx
  413c5e:	je     0x413c1e
  413c60:	dec    edx
  413c61:	aas    
  413c62:	jb     0x413c22
  413c64:	mov    dl,0xe6
  413c66:	idiv   DWORD PTR [eax-0x57]
  413c69:	mov    bh,0xd9
  413c6b:	ret    
  413c6c:	cmp    cl,BYTE PTR [ebx]
  413c6e:	sub    dh,ch
  413c70:	mov    dh,0xa1
  413c72:	daa    
  413c73:	ins    BYTE PTR es:[edi],dx
  413c74:	mov    ecx,0x2d7bad1a
  413c79:	lea    esp,[edx-0x42]
  413c7c:	push   ds
  413c7d:	sbb    BYTE PTR [esi+0x309062ff],ch
  413c83:	inc    ebp
  413c84:	mov    dh,0x8f
  413c86:	add    BYTE PTR [ecx+esi*1-0x58027e06],bl
  413c8d:	adc    ah,BYTE PTR [ebp+ebx*8-0x47]
  413c91:	xor    DWORD PTR ds:[ecx+0x548b8edf],ebp
  413c98:	popa   
  413c99:	cmp    DWORD PTR [esp+0x3cfd5665],ecx
  413ca0:	push   ecx
  413ca1:	sbb    DWORD PTR [ecx+esi*8+0x43],eax
  413ca5:	pop    ebx
  413ca6:	hlt    
  413ca7:	mov    dh,0x0
	...
  413cb9:	add    BYTE PTR [eax],al
  413cbb:	add    BYTE PTR [ecx-0x58daec1a],cl
  413cc1:	dec    edi
  413cc2:	add    BYTE PTR [ecx+edi*8+0x5b],ch
  413cc6:	add    al,0xdb
  413cc8:	idiv   cl
  413cca:	or     esp,DWORD PTR [edx+0x74]
  413ccd:	loope  0x413c56
  413ccf:	out    0x2f,eax
  413cd1:	dec    esp
  413cd2:	clc    
  413cd3:	jo     0x413d28
  413cd5:	xchg   ecx,eax
  413cd6:	mov    al,0xe8
  413cd8:	arpl   ax,bx
  413cda:	ret    0xb6ed
  413cdd:	in     al,0x74
  413cdf:	lds    esi,FWORD PTR [edx+0x65660079]
  413ce5:	mov    cl,0x10
  413ce7:	pop    esi
  413ce8:	gs mov cl,0x10
  413ceb:	push   esi
  413cec:	test   eax,0xc4a513e4
  413cf1:	dec    edi
  413cf2:	add    BYTE PTR [esi],bh
  413cf4:	icebp  
  413cf5:	mov    eax,eax
  413cf7:	ss jmp 0x662a49cb
  413cfd:	sbb    ch,ch
  413cff:	ret    
  413d00:	mov    dh,0x12
  413d02:	inc    esp
  413d03:	stc    
  413d04:	push   es
  413d05:	out    0x73,al
  413d07:	stc    
  413d08:	aas    
  413d09:	dec    esp
  413d0a:	or     BYTE PTR [esi],dl
  413d0c:	and    al,0x99
  413d0e:	std    
  413d0f:	fldenv [ebx-0x11ffcb85]
  413d15:	sar    ch,1
  413d17:	test   ah,bl
  413d19:	fiadd  WORD PTR [ebx+eax*4]
  413d1c:	aam    0x5c
  413d1e:	jmp    0x0:0x3
	...
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [edi+0x1e5d0dce],dl
  413d39:	lea    eax,[eax]
  413d3b:	push   ebx
  413d3c:	iret   
  413d3d:	dec    eax
  413d3e:	xor    eax,0x423b0c1d
  413d43:	add    BYTE PTR [ecx-0x2341a94b],al
  413d49:	cmp    eax,0x5ca20042
  413d4e:	adc    al,0xa4
  413d50:	(bad)  
  413d52:	std    
  413d53:	aaa    
  413d54:	jmp    0x9c8518a9
  413d59:	fistp  WORD PTR [eax]
  413d5b:	mov    DWORD PTR [ecx-0x73bc297c],ebp
  413d61:	adc    ebx,DWORD PTR ds:0xfdd160fc
  413d67:	mov    BYTE PTR [ecx-0x63bc245c],bl
  413d6d:	mov    ds:0xd12ac004,al
  413d72:	std    
  413d73:	add    BYTE PTR [edx+0x6eac145c],ah
  413d79:	sar    ch,1
  413d7b:	pop    ebp
  413d7c:	cmp    eax,0x4c43d15c
  413d81:	test   eax,0xf3b475c1
  413d86:	icebp  
  413d87:	dec    edi
  413d88:	sbb    al,0x90
  413d8a:	std    
  413d8b:	adc    eax,0x407ee8
  413d90:	inc    edi
  413d91:	push   ecx
  413d92:	jno    0x413da9
  413d94:	je     0x413d36
  413d96:	jae    0x413dd8
	...
  413dac:	sbb    al,0xc0
  413dae:	(bad)  
  413daf:	adc    eax,0x407ec0
  413db4:	mov    ch,0x59
  413db6:	jne    0x413d8b
  413db8:	jbe    0x413db0
  413dba:	cmp    al,bl
  413dbc:	mov    dl,dh
  413dbe:	das    
  413dbf:	rcr    BYTE PTR [esi],0xbb
  413dc2:	mov    cl,BYTE PTR [ebx-0x27]
  413dc5:	out    dx,al
  413dc6:	out    0x27,eax
  413dc8:	cli    
  413dc9:	pop    ecx
  413dca:	sbb    eax,0x31ed8610
  413dcf:	inc    DWORD PTR ds:0xf51a5cbd
  413dd5:	les    ebx,FWORD PTR [edx+ebx*2-0x9]
  413dd9:	in     eax,dx
  413dda:	add    DWORD PTR [ebx-0x7a],edx
  413ddd:	xor    DWORD PTR ds:0xc003f51d,edi
  413de3:	dec    DWORD PTR [ecx-0x1c]
  413de6:	retf   
  413de7:	mov    ebp,0xffc015b5
  413dec:	or     BYTE PTR [edx],ch
  413dee:	push   cs
  413def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413df0:	(bad)  
  413df1:	mov    eax,0x38c03804
  413df6:	push   edi
  413df7:	inc    edx
  413df8:	mov    ch,0x7b
  413dfa:	sbb    DWORD PTR [ecx+0x424bd4b0],ecx
  413e00:	mov    ch,0x5f
  413e02:	adc    eax,0x4b669fc
  413e07:	mov    DWORD PTR [eax-0x4abda8d4],ebx
  413e0d:	mov    dl,0xfd
  413e0f:	mov    edi,0x0
	...
  413e24:	mov    esi,DWORD PTR [esi]
  413e26:	add    al,BYTE PTR [ecx]
  413e28:	or     edi,DWORD PTR [edx]
  413e2a:	or     eax,0x238c7ac
  413e2f:	pop    esi
  413e30:	adc    al,0x95
  413e32:	dec    esi
  413e33:	inc    edx
  413e34:	mov    ch,0x8d
  413e36:	aas    
  413e37:	je     0x413dc6
  413e39:	shr    BYTE PTR [ebp+0x4e],1
  413e3c:	cmc    
  413e3d:	clc    
  413e3e:	je     0x413e54
  413e40:	push   ecx
  413e41:	nop
  413e42:	stc    
  413e43:	ret    
  413e44:	sub    ah,BYTE PTR [esi+0x77c9f02a]
  413e4a:	mov    bh,0xee
  413e4c:	fimul  DWORD PTR [edi-0x24568b49]
  413e52:	fld    st(3)
  413e54:	or     ch,BYTE PTR [esi]
  413e56:	les    ecx,FWORD PTR [ebp+0x77]
  413e59:	(bad)  
  413e5a:	mov    dl,0x40
  413e5c:	or     DWORD PTR [ebx+0x7cdf43b9],0x9796c772
  413e66:	push   ecx
  413e67:	sub    al,0xe2
  413e69:	pop    ebx
  413e6a:	or     edx,DWORD PTR [esi+eax*4]
  413e6d:	loop   0x413e87
  413e6f:	jne    0x413e73
  413e71:	fistp  DWORD PTR [edi-0x60250ae8]
  413e77:	fdiv   st,st(4)
  413e79:	xchg   edi,eax
  413e7a:	out    0xce,eax
  413e7c:	das    
  413e7d:	hlt    
  413e7e:	push   0x67
  413e80:	fidivr WORD PTR [ecx]
  413e82:	mov    DWORD PTR ds:[ecx],ebp
  413e85:	xor    BYTE PTR [edx+0x73],0x0
	...
  413e99:	add    BYTE PTR [eax],al
  413e9b:	add    BYTE PTR [ecx],bh
  413e9d:	loop   0x413eba
  413e9f:	fist   WORD PTR [edx-0x6c8b7a10]
  413ea5:	mov    ds:0x14eef1eb,eax
  413eaa:	and    eax,0x7f39f250
  413eaf:	cmp    eax,0x7f6ee278
  413eb4:	xor    bl,BYTE PTR [ebx+ebp*8+0x31]
  413eb8:	jne    0x413eb0
  413eba:	loop   0x413e3c
  413ebc:	loope  0x413e55
  413ebe:	out    0x88,eax
  413ec0:	mov    eax,ds:0x52c3f553
  413ec5:	js     0x413eb6
  413ec7:	aam    0xc6
  413ec9:	xchg   esp,eax
  413eca:	xchg   esi,eax
  413ecb:	xchg   cl,bh
  413ecd:	mov    ebx,0x5bc19900
  413ed2:	or     BYTE PTR [esi],ch
  413ed4:	or     BYTE PTR ds:0x6335f5c5,0xc
  413edb:	jmp    0x6496d1f2
  413ee0:	pop    ebx
  413ee1:	(bad)  
  413ee2:	push   eax
  413ee3:	push   cs
  413ee4:	and    edx,DWORD PTR [esi-0x31cae003]
  413eea:	or     al,0x64
  413eec:	pop    ebp
  413eed:	pop    esi
  413eee:	or     DWORD PTR [esi-0x661bb4cd],ebx
  413ef4:	add    eax,0x7d6ad6e1
  413ef9:	xchg   esi,eax
  413efa:	push   ebp
  413efb:	ins    BYTE PTR es:[edi],dx
  413efc:	in     al,dx
  413efd:	cmc    
  413efe:	push   eax
  413eff:	(bad)  
	...
  413f14:	fcom   QWORD PTR [ecx-0x498d4803]
  413f1a:	and    DWORD PTR [edx+0x240dc94a],0x7a
  413f21:	push   edx
  413f22:	std    
  413f23:	cmp    al,0xb5
  413f25:	loop   0x413f9a
  413f27:	loope  0x413f50
  413f29:	fwait
  413f2a:	std    
  413f2b:	cld    
  413f2c:	(bad)  
  413f2d:	jge    0x413f6f
  413f2f:	jmp    0x71b66061
  413f34:	sub    al,0xe2
  413f36:	je     0x413f30
  413f38:	cmp    eax,0x68f474c6
  413f3d:	mov    DWORD PTR [ecx+0x16],edx
  413f40:	push   es
  413f41:	jl     0x413f8f
  413f43:	fbstp  TBYTE PTR [esi-0x1f]
  413f46:	and    BYTE PTR [ebp-0x39ffe04b],0x84
  413f4d:	fadd   st,st(2)
  413f4f:	in     eax,dx
  413f50:	mov    dh,0x3a
  413f52:	mov    DWORD PTR [ebp-0x80],eax
  413f55:	ds std 
  413f57:	aam    0x4e
  413f59:	loop   0x413f6e
  413f5b:	add    BYTE PTR [ecx+edi*2+0x73cf0040],dh
  413f62:	(bad)  
  413f63:	je     0x413f75
  413f65:	or     cl,BYTE PTR [ebp-0x4]
  413f68:	jecxz  0x413f72
  413f6a:	ficom  WORD PTR [eax]
  413f6c:	(bad)  [ebx+0x14]
  413f6f:	push   eax
  413f70:	inc    esi
  413f71:	mov    ch,BYTE PTR [edx+0x7]
  413f74:	xor    al,0x8d
	...
  413f8a:	add    BYTE PTR [eax],al
  413f8c:	pushf  
  413f8d:	pop    esp
  413f8e:	je     0x413f98
  413f90:	adc    esi,0x70ffe8f9
  413f96:	(bad)  
  413f97:	dec    DWORD PTR [eax+0x3621714b]
  413f9d:	lea    ebp,[edx+0x0]
  413fa0:	shl    edi,cl
  413fa2:	or     DWORD PTR [ebx],esi
  413fa4:	test   DWORD PTR [edi],0xe0f4fc45
  413faa:	(bad)  
  413fab:	inc    DWORD PTR [ebx]
  413fad:	or     DWORD PTR [esi+0x450fc074],edi
  413fb3:	cld    
  413fb4:	in     al,0x1d
  413fb6:	cli    
  413fb7:	inc    DWORD PTR [ebx]
  413fb9:	sbb    eax,0xf96eb01
  413fbe:	inc    ebp
  413fbf:	cld    
  413fc0:	inc    esp
  413fc1:	sbb    edx,edi
  413fc3:	inc    DWORD PTR [ebx-0x66]
  413fc6:	rcr    BYTE PTR [ebx+0x55],0x4a
  413fca:	add    eax,0xe960c900
  413fcf:	cmp    DWORD PTR [eax],0x74
  413fd2:	sub    ah,0x70
  413fd5:	or     DWORD PTR [ebp+0x14],edi
  413fd8:	mov    esi,es
  413fda:	jno    0x414055
  413fdc:	xor    al,0x4d
  413fde:	in     al,0xff
  413fe0:	shl    DWORD PTR [eax+0xf7c7204],cl
  413fe6:	inc    edx
  413fe7:	and    al,0xb5
  413fe9:	out    dx,al
  413fea:	rcl    DWORD PTR [edx+0x5d],1
  413fed:	add    eax,0xfe71
	...
  414002:	add    BYTE PTR [eax],al
  414004:	dec    edx
  414005:	jb     0x414048
  414007:	jae    0x413fc6
  414009:	jne    0x413ffb
  41400b:	pop    es
  41400c:	mov    ch,0x6d
  41400e:	cmp    BYTE PTR [ebx+ecx*8+0x36],cl
  414012:	add    dh,BYTE PTR [edx+edi*4-0x4]
  414016:	stc    
  414017:	(bad)  
  414018:	test   al,0xde
  41401a:	add    BYTE PTR [ebx-0x2f],0xe6
  41401e:	sar    esi,1
  414020:	jmp    0x414096
  414022:	inc    ebp
  414023:	or     esi,DWORD PTR [esi]
  414025:	or     edi,esi
  414027:	inc    DWORD PTR [esi-0x5f8240f]
  41402d:	(bad)  
  41402e:	std    
  41402f:	mov    WORD PTR [ecx-0x36],?
  414032:	or     DWORD PTR [eax-0x16],edx
  414035:	pop    ds
  414036:	test   bl,al
  414038:	mov    cl,0x75
  41403a:	in     eax,dx
  41403b:	lgs    eax,FWORD PTR [edx-0x1]
  41403f:	imul   edi,DWORD PTR [ebp+0x380ff5d1],0x652028b2
  414049:	and    DWORD PTR [ebx-0x7e],ebx
  41404c:	icebp  
  41404d:	jmp    0xa4f3482d
  414052:	sbb    BYTE PTR [ebp+0x5019ccf1],cl
  414058:	mov    ds:0xa9c38427,al
  41405d:	jae    0x414027
  41405f:	and    edi,DWORD PTR [ebp+0x6ee7d398]
  414065:	adc    al,0x70
  414067:	inc    BYTE PTR [eax]
	...
  414079:	add    BYTE PTR [eax],al
  41407b:	add    BYTE PTR [esi-0x5a8b8f3a],cl
  414081:	gs cmc 
  414083:	or     esi,DWORD PTR [edx-0x1c]
  414086:	stc    
  414087:	(bad)  
  414088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414089:	(bad)  
  41408a:	popw   ss
  41408c:	cmc    
  41408d:	and    DWORD PTR [edi-0xd479dfd],0xadb84b43
  414097:	jl     0x4140ea
  414099:	cmp    eax,0x67b51429
  41409e:	addr16 add al,0xb5
  4140a1:	(bad)  
  4140a2:	ss clc 
  4140a4:	(bad)  
  4140a5:	xchg   DWORD PTR [esi],ebp
  4140a7:	pop    ss
  4140a8:	sbb    eax,0x2203a782
  4140ad:	fs ret 
  4140af:	pop    es
  4140b0:	sbb    al,BYTE PTR [ebp-0x708aea0d]
  4140b6:	push   ss
  4140b7:	dec    esp
  4140b8:	scas   eax,DWORD PTR es:[edi]
  4140b9:	iret   
  4140ba:	dec    BYTE PTR [ebx-0xc]
  4140bd:	xchg   ebx,eax
  4140be:	out    0xd6,eax
  4140c0:	das    
  4140c1:	in     al,dx
  4140c2:	push   0x60
  4140c4:	(bad)  
  4140c5:	adc    bl,BYTE PTR [ebp+0x3d42eb6f]
  4140cb:	fsub   QWORD PTR [edx-0x71]
  4140ce:	out    0x3,eax
  4140d0:	dec    edi
  4140d1:	xchg   edx,eax
  4140d2:	inc    ecx
  4140d3:	add    eax,0x3e78f5d
  4140d8:	xor    eax,0x31fc3cdf
  4140dd:	push   ebp
  4140de:	mov    ebx,0x5b
	...
  4140f3:	add    ch,ah
  4140f5:	fidiv  DWORD PTR [esi+0x33cf3670]
  4140fb:	in     al,0x39
  4140fd:	push   esp
  4140fe:	mov    ds:0x976431d3,eax
  414103:	pop    ebx
  414104:	aad    0xdb
  414106:	xchg   esi,eax
  414107:	jo     0x41413f
  414109:	iret   
  41410a:	adc    edx,esp
  41410c:	(bad)  
  41410d:	mov    edx,0x6686cec0
  414112:	xor    BYTE PTR [ebp+0x1],bh
  414115:	loopne 0x414117
  414117:	sti    
  414118:	jae    0x414129
  41411a:	(bad)  
  41411b:	jmp    0xde4270d6
  414120:	xchg   edx,eax
  414121:	cwde   
  414122:	pop    ebx
  414123:	push   ebp
  414124:	pop    ebp
  414125:	xchg   edx,eax
  414126:	cmp    DWORD PTR [edx+0x4c],ebx
  414129:	push   ecx
  41412a:	push   esi
  41412b:	inc    ecx
  41412c:	push   edi
  41412d:	xchg   ecx,eax
  41412e:	add    cl,ch
  414130:	mov    edi,0x422a3995
  414135:	mov    ch,0x51
  414137:	fs jae 0x4140d0
  41413a:	dec    edi
  41413b:	xchg   edi,eax
  41413c:	push   es
  41413d:	fnsave [ebx+0x25]
  414140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414141:	xor    DWORD PTR [ebx+edi*8],0xfffffff6
  414145:	fld    QWORD PTR [ecx+ebp*1-0x5b7675f6]
  41414c:	push   cs
  41414d:	cdq    
  41414e:	(bad)  
  41414f:	jl     0x41410c
  414151:	or     BYTE PTR [esi-0x1b],al
  414154:	pop    ecx
  414155:	jp     0x414154
  414157:	mov    esi,0x0
	...
  41416c:	mov    es,WORD PTR [edx+0x1]
  41416f:	jmp    0xe5854e2a
  414174:	add    DWORD PTR [eax-0x7],0xc0a04ade
  41417b:	aaa    
  41417c:	inc    dh
  41417e:	ret    0xb6e5
  414181:	or     BYTE PTR [esi],bl
  414183:	jo     0x414177
  414185:	xchg   ecx,eax
  414186:	mov    esp,DWORD PTR [eax*2+0x22b23bf6]
  41418d:	fidiv  WORD PTR [eax-0x7e17f018]
  414193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414194:	fldenv [ecx+0x3]
  414197:	push   0xa
  414199:	pop    ebx
  41419a:	jbe    0x41417e
  41419c:	xor    eax,0x1a8e6116
  4141a1:	fiadd  WORD PTR [ecx+0x76cd3400]
  4141a7:	add    al,0xb2
  4141a9:	pop    eax
  4141aa:	mov    bl,0xd7
  4141ad:	push   esp
  4141ae:	and    al,0x0
  4141b0:	pop    esp
  4141b1:	xchg   ecx,eax
  4141b2:	std    
  4141b3:	cmp    eax,0x100914c
  4141b8:	cmp    BYTE PTR [ebx],0x53
  4141bb:	xor    esi,edx
  4141bd:	sub    al,BYTE PTR [edi]
  4141bf:	add    ebx,DWORD PTR [ecx+edx*4-0x75]
  4141c3:	add    al,0x3d
  4141c5:	or     al,0x2b
  4141c7:	ret    0x6b9d
  4141ca:	push   cs
  4141cb:	mov    bh,0x10
  4141cd:	or     BYTE PTR [esi+0x60],bh
	...
  4141e3:	add    BYTE PTR [ecx+edx*4+0x39],bl
  4141e7:	xlat   BYTE PTR ds:[ebx]
  4141e8:	aas    
  4141e9:	mov    BYTE PTR [ebx+0x43a0d70],cl
  4141ef:	jbe    0x414208
  4141f1:	adc    BYTE PTR [esi-0x1],al
  4141f4:	out    0x9a,eax
  4141f6:	jl     0x4141d6
  4141f8:	aas    
  4141f9:	push   ecx
  4141fa:	pop    ebx
  4141fb:	ret    
  4141fc:	xor    bl,BYTE PTR [edx+0x1]
  4141ff:	test   DWORD PTR [esi+0x3a003df3],ebx
  414205:	push   edx
  414206:	push   esp
  414207:	mov    ecx,DWORD PTR [eax]
  414209:	les    edx,FWORD PTR [edx+0x57]
  41420c:	addr16 push 0xc6a4c032
  414212:	or     DWORD PTR [edi],ecx
  414214:	inc    ecx
  414215:	push   eax
  414216:	inc    ebp
  414217:	and    eax,0xc00090cc
  41421c:	inc    ebp
  41421d:	(bad)  
  41421e:	stc    
  41421f:	xor    bl,BYTE PTR [ebp+ebx*8-0x4d]
  414223:	enter  0xaca5,0xcb
  414227:	loopne 0x4141f1
  414229:	sar    ebp,cl
  41422b:	jae    0x414212
  41422d:	ins    DWORD PTR es:[edi],dx
  41422e:	mov    ebp,0xf29eb53c
  414233:	in     eax,dx
  414234:	(bad)  
  414235:	and    esp,esp
  414237:	test   BYTE PTR [esi-0x1b],bl
  41423a:	test   DWORD PTR [edi-0xfe194b],ecx
  414240:	call   0x3f03ba37
  414245:	cld    
  414246:	pop    ecx
  414247:	inc    ebx
	...
  41425c:	in     eax,0xe7
  41425e:	add    DWORD PTR [edi],ecx
  414260:	and    esi,DWORD PTR [ecx-0x29]
  414263:	(bad)  
  414264:	jmp    0x4142ab
  414266:	sbb    BYTE PTR [eax-0x60],bl
  414269:	add    al,BYTE PTR es:[ebp+0xefd1a75]
  414270:	add    esp,DWORD PTR [esi-0x103a20bc]
  414276:	enter  0x3efb,0x34
  41427a:	adc    dh,dh
  41427c:	jne    0x414256
  41427e:	xor    DWORD PTR [ebx-0x34],0x3510c184
  414285:	sti    
  414286:	and    dh,BYTE PTR [eax+0xf2491b4]
  41428c:	dec    ebx
  41428d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41428e:	(bad)  
  41428f:	mov    ch,0xa9
  414291:	mov    bl,0x68
  414293:	imul   esi,DWORD PTR [ebp-0x1a],0xfffffffe
  414297:	mov    ch,0xb1
  414299:	mov    bl,0x65
  41429b:	imul   esi,DWORD PTR [ebp-0x1a],0xffffffe3
  41429f:	rcl    ah,0xdd
  4142a2:	jecxz  0x4142ae
  4142a4:	std    
  4142a5:	hlt    
  4142a6:	mov    ah,0xd8
  4142a8:	fiadd  WORD PTR ds:0x1f86c033
  4142ae:	sub    eax,0xfea2a94d
  4142b3:	xor    DWORD PTR [ebp-0xe],0xffffff96
  4142b7:	sar    BYTE PTR [eax],0xf5
  4142ba:	jle    0x4142bb
  4142bc:	mov    ch,0x8f
  4142be:	out    0x3,eax
	...
  4142d4:	mov    cs,WORD PTR [ebx+eiz*2-0x56fb3cbc]
  4142db:	jg     0x414293
  4142dd:	or     al,0xe9
  4142df:	add    dh,BYTE PTR [ebp+0x7ef7868f]
  4142e5:	inc    ebx
  4142e6:	pop    ss
  4142e7:	ins    DWORD PTR es:[edi],dx
  4142e8:	jmp    0x158b974
  4142ed:	test   DWORD PTR [edi],esp
  4142ef:	add    al,0x6a
  4142f1:	mov    eax,0xb8634402
  4142f6:	push   edx
  4142f7:	xor    al,0x35
  4142f9:	pop    ebp
  4142fa:	jecxz  0x4142ff
  4142fc:	shl    DWORD PTR [edi-0x24bfc1c1],0x46
  414303:	std    
  414304:	add    edx,eax
  414306:	lds    eax,FWORD PTR [esi+0x78d26472]
  41430c:	js     0x41438d
  41430e:	xor    eax,0x9c0fc4c3
  414313:	add    al,0x34
  414315:	dec    ebp
  414316:	sbb    eax,DWORD PTR [esi*4-0x7e933871]
  41431d:	(bad)  [edi-0x186f4b25]
  414323:	add    ecx,DWORD PTR [esi]
  414325:	sar    DWORD PTR [ecx+0x20369343],1
  41432b:	inc    edx
  41432c:	mov    dl,0x8f
  41432e:	(bad)  
  41432f:	(bad)  
  414330:	scas   al,BYTE PTR es:[edi]
  414331:	adc    al,0xa8
  414333:	div    DWORD PTR [ebx+0x16de3f]
	...
  414349:	add    BYTE PTR [eax],al
  41434b:	add    BYTE PTR [ecx+0x3e04277f],bl
  414351:	rol    al,cl
  414353:	leave  
  414354:	out    0x90,al
  414356:	out    0xd5,eax
  414358:	das    
  414359:	loopne 0x41432a
  41435b:	dec    eax
  41435c:	xchg   DWORD PTR [eax+0x1a32e900],edx
  414362:	jne    0x414356
  414364:	mov    DWORD PTR [ebx],ecx
  414366:	jg     0x41435d
  414368:	sbb    eax,0x8aa98392
  41436d:	xchg   ecx,eax
  41436e:	push   eax
  41436f:	xchg   esi,eax
  414370:	mov    ds:0xb92910b3,eax
  414375:	push   cs
  414376:	jge    0x414345
  414378:	jp     0x414354
  41437a:	jno    0x414345
  41437c:	mov    DWORD PTR [eax+0x0],ebp
  41437f:	add    esi,DWORD PTR [ecx-0x4917eb99]
  414385:	(bad)  
  414386:	std    
  414387:	fst    QWORD PTR [edx-0x1fe80285]
  41438d:	and    DWORD PTR [eax],0xfffffff9
  414390:	jbe    0x41436c
  414392:	test   BYTE PTR [ecx],ch
  414394:	dec    ebx
  414395:	xchg   esp,eax
  414396:	pop    ds
  414397:	out    dx,al
  414398:	test   bh,cl
  41439a:	jmp    0x5dd0aa8a
  41439f:	xchg   edi,eax
  4143a0:	je     0x414330
  4143a2:	add    BYTE PTR [ebp+ebx*4-0x6247b01a],dl
  4143a9:	call   0xe904:0xd5fb260c
	...
  4143c4:	mov    dh,0x8f
  4143c6:	sub    DWORD PTR [ecx],0xa
  4143c9:	scas   al,BYTE PTR es:[edi]
  4143ca:	push   0xffffffe9
  4143cc:	jnp    0x414419
  4143ce:	cld    
  4143cf:	cwde   
  4143d0:	jae    0x41441d
  4143d2:	clc    
  4143d3:	cwde   
  4143d4:	or     al,0x87
  4143d6:	push   eax
  4143d7:	out    dx,al
  4143d8:	enter  0x107b,0x29
  4143dc:	mov    cl,0x14
  4143de:	rcl    DWORD PTR [ebp-0x34],0xc
  4143e2:	jl     0x4143b9
  4143e4:	mov    ch,0x64
  4143e6:	add    eax,0xa8e1f462
  4143eb:	add    bl,cl
  4143ed:	jmp    0xb9d76f1
  4143f2:	and    edx,0xffffff9b
  4143f5:	xchg   edx,eax
  4143f6:	ret    0x64c1
  4143f9:	xchg   ecx,eax
  4143fa:	mov    ebx,0x53e958d9
  414400:	pop    es
  414401:	dec    esp
  414402:	mov    al,bh
  414404:	xor    al,0xf5
  414406:	(bad)  
  414407:	push   DWORD PTR [ebx]
  414409:	test   eax,0xa38874d8
  41440e:	shr    bl,0xca
  414411:	mov    ebp,0xd569ff52
  414416:	in     eax,0x81
  414418:	dec    ebp
  414419:	lea    eax,[eax]
  41441b:	mov    edi,esp
  41441d:	push   cs
  41441e:	hlt    
  41441f:	jne    0x414479
  414421:	mov    ds:0x581debc0,eax
  414426:	inc    ecx
  414427:	push   ds
	...
  41443c:	repz pop eax
  41443e:	retf   
  41443f:	cmp    edi,DWORD PTR [eax+eiz*8+0x11]
  414443:	mov    cl,BYTE PTR ds:0x960b5455
  414449:	or     DWORD PTR [eax+0xabe9611],0x41
  414450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414451:	or     DWORD PTR [eax+0x3b],0xffffffc4
  414455:	loope  0x414440
  414457:	push   0x1c
  414459:	mov    ebx,0xe12bfefd
  41445e:	push   edx
  41445f:	push   esi
  414460:	mov    bl,0xdc
  414462:	add    edi,edi
  414464:	or     DWORD PTR [ebp+0x57dc4010],eax
  41446a:	push   ebp
  41446b:	(bad)  
  41446c:	jmp    0x4144b7
  41446e:	pop    ss
  41446f:	fistp  DWORD PTR [edx+0x6e8c265]
  414475:	lea    eax,[eax]
  414477:	add    BYTE PTR [ebp+0x5e5d466c],dh
  41447d:	stos   DWORD PTR es:[edi],eax
  41447e:	inc    esi
  41447f:	add    esi,DWORD PTR [ebp-0x3e8bc395]
  414485:	sbb    DWORD PTR [eax],esi
  414487:	call   0x432aee
  41448c:	ss nop
  41448e:	add    al,0xeb
  414490:	out    0x5d,eax
  414492:	inc    DWORD PTR [edx-0x7b2b0d8c]
  414498:	jne    0x414515
  41449a:	adc    al,0x6a
  41449c:	lods   eax,DWORD PTR ds:[esi]
  41449d:	or     DWORD PTR [ecx],esi
  41449f:	sub    BYTE PTR [eax],al
	...
  4144b1:	add    BYTE PTR [eax],al
  4144b3:	add    BYTE PTR [ebx-0x5b],ah
  4144b6:	add    al,0xff
  4144b8:	enter  0x168a,0x40
  4144bc:	mov    ch,0xd
  4144be:	sti    
  4144bf:	dec    edi
  4144c0:	iret   
  4144c1:	out    dx,al
  4144c2:	push   0x34
  4144c4:	lea    ebx,[eax-0x1cac003a]
  4144ca:	or     eax,0x80e6f512
  4144cf:	mov    edi,0xc033e5c8
  4144d4:	jbe    0x414535
  4144d6:	jmp    FWORD PTR [edi+0x7b86a5b4]
  4144dc:	shr    edx,1
  4144de:	add    DWORD PTR [ebp-0x4f],esi
  4144e1:	test   eax,0xe68ae82f
  4144e6:	add    DWORD PTR [eax],eax
  4144e8:	rol    BYTE PTR ss:[ecx],1
  4144eb:	jmp    0x4144b4
  4144ed:	ins    DWORD PTR es:[edi],dx
  4144ee:	(bad)  
  4144ef:	dec    BYTE PTR [ecx-0xa7b022e]
  4144f5:	pop    edx
  4144f6:	cli    
  4144f7:	dec    edi
  4144f8:	repnz and bl,BYTE PTR [edx]
  4144fb:	(bad)  
  4144fc:	jbe    0x4144e4
  4144fe:	push   0x14
  414500:	push   ecx
  414501:	mov    ah,0xc1
  414503:	dec    edi
  414505:	mov    ?,esi
  414507:	rcr    DWORD PTR [edi+ecx*4-0x22],cl
  41450b:	das    
  41450c:	popf   
  41450d:	shr    DWORD PTR [edx],0x4
  414510:	ret    0xf381
  414513:	adc    eax,0x446c8f75
	...
  41452c:	sub    DWORD PTR [ecx+edi*8+0x608c9f43],ecx
  414533:	add    ah,BYTE PTR [ebp-0x6f]
  414536:	test   eax,0xa812b500
  41453b:	add    ch,ah
  41453d:	imul   ebp,edi,0xbda7c168
  414543:	lds    eax,FWORD PTR [edx-0x5b280b2a]
  414549:	dec    edi
  41454a:	out    0x44,eax
  41454c:	aaa    
  41454d:	push   esp
  41454e:	ret    
  41454f:	jmp    FWORD PTR [edx+0x5c]
  414552:	jmp    0x414588
  414554:	jne    0x414541
  414556:	fldcw  WORD PTR [eax-0x1a]
  414559:	stos   DWORD PTR es:[edi],eax
  41455a:	jmp    0x414539
  41455c:	push   edx
  41455d:	(bad)  
  41455e:	adc    al,0x1c
  414560:	arpl   WORD PTR [ebx-0x19],dx
  414563:	push   0xc3f963a9
  414568:	cmp    dl,cl
  41456a:	jmp    0x41456f
  41456c:	ss push esp
  41456e:	add    eax,DWORD PTR [eax]
  414570:	mov    ch,0x5b
  414572:	fldcw  WORD PTR [eax-0x5a]
  414575:	stos   DWORD PTR es:[edi],eax
  414576:	jecxz  0x414555
  414578:	sbb    dl,dh
  41457a:	fcomp  QWORD PTR [ebx]
  41457c:	jmp    0x4145d0
  41457e:	out    0x68,eax
  414580:	mov    eax,ds:0x2c3f983
  414585:	shl    ebx,1
  414587:	add    esp,DWORD PTR [ebx+0xa]
  41458a:	clc    
  41458b:	jle    0x414580
  41458d:	pop    ebx
  41458e:	(bad)  
  41458f:	jle    0x414591
	...
  4145a1:	add    BYTE PTR [eax],al
  4145a3:	add    al,ah
  4145a5:	pop    ebx
  4145a6:	add    dl,bl
  4145a8:	sbb    al,0xd6
  4145aa:	xor    al,0x36
  4145ac:	jns    0x414574
  4145ae:	std    
  4145af:	out    0x5d,al
  4145b1:	or     esi,edi
  4145b3:	push   esp
  4145b4:	inc    eax
  4145b5:	cmp    eax,0xd54dafe8
  4145ba:	std    
  4145bb:	das    
  4145bc:	jo     0x4145fa
  4145be:	push   ebp
  4145bf:	sbb    BYTE PTR [eax],dh
  4145c1:	arpl   WORD PTR [edx*8-0x26dba4d7],sp
  4145c8:	and    DWORD PTR [ebx+0x24],ecx
  4145cb:	shl    DWORD PTR [ecx],1
  4145cd:	xor    ebx,DWORD PTR [eax+0x46]
  4145d0:	jg     0x4145a2
  4145d2:	or     al,0xe9
  4145d4:	or     ecx,eax
  4145d6:	je     0x4145d5
  4145d8:	or     DWORD PTR fs:[ebp-0x3b],esi
  4145dc:	jle    0x4145e1
  4145de:	add    eax,0x48e1d1f3
  4145e3:	xor    bl,ch
  4145e5:	add    BYTE PTR [esi],0x61
  4145e8:	(bad)  
  4145e9:	pop    esp
  4145ea:	cmc    
  4145eb:	psllq  mm2,QWORD PTR [edx+0x62ddbf00]
  4145f2:	and    al,0xed
  4145f4:	out    dx,al
  4145f5:	outs   dx,BYTE PTR ds:[esi]
  4145f6:	std    
  4145f7:	push   esi
  4145f8:	int    0x9
  4145fa:	icebp  
  4145fb:	les    esp,FWORD PTR fs:[edx+0x12]
  4145ff:	inc    esi
  414600:	and    dh,BYTE PTR [edx-0x4de5c1f4]
  414606:	or     al,0x9f
	...
  41461c:	lea    edi,[ebx+0x4c]
  41461f:	xlat   BYTE PTR ds:[ebx]
  414620:	not    ch
  414622:	sub    BYTE PTR ds:0xbfc7090a,0x70
  414629:	mov    es,WORD PTR [eax]
  41462b:	(bad)  
  41462c:	std    
  41462d:	cmp    ecx,DWORD PTR [ecx-0x17354ee7]
  414633:	add    BYTE PTR [eax+0x68],bl
  414636:	(bad)  
  414637:	call   DWORD PTR [eax+0x52]
  41463a:	jno    0x414655
  41463c:	push   edi
  41463d:	mov    al,ds:0x673f3701
  414642:	jno    0x414668
  414644:	enter  0xfec3,0x15
  414648:	cwde   
  414649:	test   DWORD PTR [eax+0x0],eax
  41464c:	dec    edi
  41464d:	dec    edi
  41464e:	or     DWORD PTR [ecx],eax
  414650:	retf   
  414651:	pop    eax
  414652:	ret    
  414653:	jmp    0x4145f3
  414655:	mov    ds:0x905e5ec0,al
  41465a:	add    BYTE PTR [esi-0x3d],dl
  41465d:	mov    al,ds:0xafc839fd
  414662:	or     al,0x76
  414664:	xchg   ecx,eax
  414665:	pop    edx
  414666:	lock sub ebp,DWORD PTR [edx+ebx*2]
  41466a:	or     DWORD PTR [esi],eax
  41466c:	push   ss
  41466d:	jl     0x4146a9
  41466f:	retf   0xdca1
  414672:	inc    esi
  414673:	inc    eax
  414674:	ja     0x414663
  414676:	and    DWORD PTR [esi+ebp*2],ecx
  414679:	ds xor al,al
  41467c:	retf   
  41467d:	int    0xbf
  41467f:	add    al,0x0
	...
  414691:	add    BYTE PTR [eax],al
  414693:	add    BYTE PTR [esi+ebx*8-0x4d],cl
  414697:	ror    BYTE PTR [ebx+0x23],cl
  41469a:	shr    DWORD PTR [ebx],0x9e
  41469d:	cmp    al,dh
  41469f:	jmp    DWORD PTR [eax+0x75]
  4146a2:	or     BYTE PTR [edx+0x4c],ch
  4146a5:	outs   dx,BYTE PTR ds:[esi]
  4146a6:	jno    0x4146cc
  4146a8:	sub    BYTE PTR [esi+0x14],ch
  4146ab:	push   eax
  4146ac:	add    dl,cl
  4146ae:	std    
  4146af:	adc    al,0xd7
  4146b2:	mov    edi,0x56c30c08
  4146b7:	cmp    eax,edi
  4146b9:	je     0x4146c7
  4146bb:	jb     0x4146bc
  4146bd:	jae    0x41471b
  4146bf:	and    al,0xb5
  4146c1:	jmp    0xfed1:0x772eff32
  4146c8:	imul   eax,edx,0xbbea560d
  4146ce:	int    0x15
  4146d0:	jne    0x4146b8
  4146d2:	add    bl,0xa9
  4146d5:	imul   eax,DWORD PTR [ebx+esi*2-0x3e],0xffffffa5
  4146da:	mov    esi,0xf88a493a
  4146df:	jne    0x4146b9
  4146e1:	jns    0x414727
  4146e3:	pop    esi
  4146e4:	pop    ebx
  4146e5:	sub    dl,bh
  4146e7:	(bad)  
  4146e8:	aas    
  4146e9:	and    al,0x5b
  4146eb:	imul   ah
  4146ed:	stos   BYTE PTR es:[edi],al
  4146ee:	and    BYTE PTR [esi+eiz*1],al
  4146f1:	ret    0xc82a
  4146f4:	and    bh,BYTE PTR [esi+0x10ed]
	...
  41470a:	add    BYTE PTR [eax],al
  41470c:	fisub  WORD PTR [edi]
  41470e:	rcl    BYTE PTR [eax-0x76],cl
  414711:	jp     0x414733
  414713:	or     al,0x82
  414715:	shl    DWORD PTR [ebp-0x7d190aeb],cl
  41471b:	ret    
  41471c:	rcl    DWORD PTR [esi+0x18b7eb04],0x42
  414723:	sar    DWORD PTR [ecx-0x66b9851a],0x79
  41472a:	into   
  41472b:	mov    cl,cl
  41472d:	scas   al,BYTE PTR es:[edi]
  41472e:	in     al,dx
  41472f:	add    al,BYTE PTR [edx+0x79]
  414732:	dec    ecx
  414733:	cmp    bl,ah
  414735:	fsubp  st(3),st
  414737:	and    ebp,DWORD PTR [eax]
  414739:	jmp    0x15f0:0x867b0286
  414740:	ds (bad) 
  414743:	(bad)  
  414744:	and    dl,BYTE PTR [edx]
  414746:	push   ds
  414747:	adc    BYTE PTR [esi+0x12c78275],dh
  41474d:	(bad)  
  41474e:	btr    DWORD PTR [esp+edx*8],ebx
  414752:	push   ds
  414753:	add    BYTE PTR [edx+0x5b],0xe4
  414757:	ret    0x35bf
  41475a:	out    dx,eax
  41475b:	icebp  
  41475c:	push   cs
  41475d:	mov    al,ds:0xd18fc527
  414762:	jecxz  0x414767
  414764:	cs dec ebp
  414766:	retf   
  414767:	jp     0x4147d1
  414769:	jae    0x4147c7
  41476b:	jmp    FWORD PTR [edx-0x7c]
  41476e:	sahf   
	...
  414783:	add    BYTE PTR [ebp+0x2f82e402],cl
  414789:	mov    ecx,DWORD PTR [edi]
  41478b:	add    edx,esi
  41478d:	out    0xc3,eax
  41478f:	iret   
  414790:	aas    
  414791:	in     al,0x12
  414793:	push   esi
  414795:	mov    ecx,0x3a06042a
  41479a:	bound  ebp,QWORD PTR [edi]
  41479c:	jno    0x41481c
  41479e:	daa    
  41479f:	add    al,0xea
  4147a1:	gs jmp 0x367cd1d7
  4147a7:	jns    0x414813
  4147a9:	add    eax,0xd2e5142d
  4147ae:	adc    al,0xfc
  4147b0:	jae    0x41480f
  4147b2:	xlat   BYTE PTR ds:[ebx]
  4147b3:	fldcw  WORD PTR [ebx-0x2d]
  4147b6:	xchg   ebp,eax
  4147b7:	jg     0x4147db
  4147b9:	pop    esp
  4147ba:	rol    DWORD PTR [eax],0xf8
  4147bd:	adc    DWORD PTR [esi],0xffffffda
  4147c0:	mov    dh,0x4
  4147c2:	lods   eax,DWORD PTR ds:[esi]
  4147c3:	adc    esp,ebp
  4147c5:	ds pop esi
  4147c7:	out    dx,eax
  4147c8:	mov    edx,0xa4cbfcd2
  4147cd:	dec    edi
  4147ce:	out    0x7e,eax
  4147d0:	jb     0x41482e
  4147d2:	jmp    0x414787
  4147d4:	mov    ch,0xe6
  4147d6:	xlat   BYTE PTR ds:[ebx]
  4147d7:	fnstenv [ebp-0x1661ffc6]
  4147dd:	cmp    ebp,edi
  4147df:	mov    ah,0xa6
  4147e1:	shl    BYTE PTR [ebx-0xf],cl
  4147e4:	xchg   ecx,eax
  4147e5:	mov    esp,0x2932
	...
  4147fa:	add    BYTE PTR [eax],al
  4147fc:	clc    
  4147fd:	xor    al,0x59
  4147ff:	mov    ah,0x74
  414801:	xchg   BYTE PTR [eax],al
  414803:	mov    bh,0x1
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	fs jb  0x4147c3
  414809:	lahf   
  41480a:	add    cl,ch
  41480c:	mov    dh,0x6
  41480e:	push   ebx
  41480f:	in     eax,0x5d
  414811:	inc    eax
  414812:	adc    al,0x62
  414814:	(bad)  
  414815:	stos   BYTE PTR es:[edi],al
  414816:	mov    bh,0x1
  414818:	mov    cl,0x8f
  41481a:	add    BYTE PTR [edx],bl
  41481c:	pop    eax
  41481d:	popf   
  41481e:	rol    BYTE PTR [ebp-0x14838f6e],0xca
  414825:	scas   eax,DWORD PTR es:[edi]
  414826:	mov    edi,0xf88da3b6
  41482b:	retf   
  41482c:	es adc dh,bh
  41482f:	adc    cl,BYTE PTR [ebp+0x48]
  414832:	push   0x62
  414834:	je     0x4147b8
  414836:	mov    ebx,edi
  414838:	fwait
  414839:	mov    bh,0x5d
  41483b:	aas    
  41483c:	hlt    
  41483d:	cmp    ecx,DWORD PTR [ecx+0x14e63585]
  414843:	sbb    DWORD PTR ds:0x1586fdd1,0xb92ad64a
  41484d:	or     al,0xc1
  41484f:	cld    
  414850:	pop    ecx
  414851:	mov    al,ds:0x8f4d80c0
  414856:	add    cl,ch
  414858:	fmul   DWORD PTR [ebx+0x8]
  41485b:	call   0x755d4dc5
	...
  414874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414875:	dec    edi
  414876:	add    BYTE PTR [esi+0x6a8323],dh
  41487c:	sbb    al,0x6b
  41487e:	shl    BYTE PTR [ebx+0x424458],cl
  414884:	mov    DWORD PTR [esi-0x16],ecx
  414887:	sub    esi,esp
  414889:	mov    ecx,0x571c4074
  41488e:	cmc    
  41488f:	call   0x3fb551
  414894:	xchg   edi,eax
  414895:	test   eax,0x8e1fd648
  41489a:	push   eax
  41489b:	push   0x3de130
  4148a0:	les    ecx,FWORD PTR [esi-0x5]
  4148a3:	jmp    ebx
  4148a5:	pop    ecx
  4148a6:	or     al,0x44
  4148a8:	stos   BYTE PTR es:[edi],al
  4148a9:	iret   
  4148aa:	std    
  4148ab:	dec    edi
  4148ac:	in     al,0x2d
  4148ae:	and    al,BYTE PTR [ecx]
  4148b0:	int3   
  4148b1:	or     DWORD PTR [esi-0x3f84348b],edi
  4148b7:	jmp    0x41d502
  4148bc:	retf   0x74fe
  4148bf:	in     al,dx
  4148c0:	xor    al,0x2d
  4148c2:	(bad)  
  4148c3:	dec    DWORD PTR [ebp+eiz*2-0x72631db2]
  4148ca:	mov    esi,eax
  4148cc:	int3   
  4148cd:	ins    BYTE PTR es:[edi],dx
  4148ce:	shl    BYTE PTR [ebx],cl
  4148d0:	and    ebp,DWORD PTR [ecx]
  4148d2:	dec    edx
  4148d3:	(bad)  
  4148d4:	iret   
  4148d5:	mov    edi,DWORD PTR [ecx]
  4148d7:	mov    DWORD PTR [eax],0x0
	...
  4148e9:	add    BYTE PTR [eax],al
  4148eb:	add    BYTE PTR [ebx+0x5c009509],dl
  4148f1:	lea    ecx,[ecx+0x3dd9e835]
  4148f7:	add    BYTE PTR [edi+edi*8+0x1d5c4074],dh
  4148fe:	call   esi
  414900:	fs push ecx
  414902:	je     0x414944
  414904:	dec    esp
  414905:	outs   dx,BYTE PTR ds:[esi]
  414906:	xor    al,0x4c
  414908:	mov    ch,0x90
  41490a:	vxorps ymm2,ymm0,YMMWORD PTR [edi]
  41490e:	cmp    BYTE PTR [edx-0x4b],al
  414911:	dec    ecx
  414912:	cmp    ah,BYTE PTR [edi+0x65]
  414915:	sbb    al,0xc2
  414917:	call   FWORD PTR [ebx]
  414919:	aam    0xcd
  41491b:	aad    0x76
  41491d:	out    0xa6,al
  41491f:	push   ebx
  414920:	jecxz  0x414947
  414922:	add    bh,bh
  414924:	jmp    0x414924
  414926:	dec    ebp
  414927:	je     0x41499e
  414929:	out    0x62,al
  41492b:	xor    al,0x81
  41492d:	cwde   
  41492e:	(bad)  
  414931:	das    
  414932:	cmp    BYTE PTR [edx-0x4b],al
  414935:	shl    DWORD PTR [edi],1
  414937:	addr16 aad 0x53
  41493a:	sar    edi,0xd3
  41493d:	sbb    ecx,esi
  41493f:	aad    0x76
  414941:	out    0xa6,al
  414943:	pop    ebx
  414944:	jmp    0x4148eb
  414946:	add    al,0xff
  414948:	jecxz  0x414998
  41494a:	jo     0x4149c0
  41494c:	cmc    
  41494d:	out    0x62,al
  41494f:	xor    al,0x0
	...
  414961:	add    BYTE PTR [eax],al
  414963:	add    cl,bh
  414965:	lock (bad) 
  414967:	call   DWORD PTR [edi+0x46]
  41496a:	cmp    al,BYTE PTR [edx-0x4b]
  41496d:	sbb    DWORD PTR [eax],edi
  41496f:	mov    ds:0xffc6f919,al
  414974:	int    0xeb
  414976:	mov    cl,0xd5
  414978:	mul    dh
  41497a:	fadd   DWORD PTR [edi]
  41497c:	mov    esp,0xf6d5b5bb
  414981:	out    0xd5,al
  414983:	pop    ss
  414984:	lods   al,BYTE PTR ds:[esi]
  414985:	retf   
  414986:	mov    ecx,0xd5e6f6d5
  41498b:	setl   BYTE PTR [ebx]
  41498e:	loop   0x414965
  414990:	mul    dh
  414992:	aad    0x7
  414994:	mov    cs,WORD PTR [edi+0x1fb6d72e]
  41499a:	jmp    0x27defe0d
  41499f:	rcl    DWORD PTR [ebx-0x49badfcc],0x8f
  4149a6:	call   0xa004:0x4b0c0a8e
  4149ad:	jg     0x4149ee
  4149af:	call   0x8828d7bc
  4149b4:	dec    edx
  4149b5:	pop    ebx
  4149b6:	out    dx,al
  4149b7:	xchg   BYTE PTR [ecx-0x539ca61],dh
  4149bd:	mov    ?,WORD PTR [ebp+0x355b33ba]
  4149c3:	(bad)  
  4149c4:	jmp    0x0:0x399011
	...
  4149db:	add    BYTE PTR [edi-0x71],dh
  4149de:	movlps xmm4,QWORD PTR [edx]
  4149e1:	shl    dh,1
  4149e3:	rcl    DWORD PTR [edi],0x7
  4149e6:	push   ss
  4149e7:	(bad)  
  4149e8:	retf   0x6c31
  4149eb:	inc    esp
  4149ec:	dec    ecx
  4149ed:	mov    ebx,DWORD PTR [ecx]
  4149ef:	inc    esp
  4149f0:	pop    edi
  4149f1:	int3   
  4149f2:	ins    BYTE PTR es:[edi],dx
  4149f3:	cmp    eax,0xac3f9a29
  4149f8:	mov    WORD PTR [ebx-0x19],ss
  4149fb:	imul   ebp,DWORD PTR [edx],0x76
  4149fe:	call   0x9486d706
  414a03:	popa   
  414a04:	xchg   ebx,eax
  414a05:	mov    ecx,gs
  414a07:	aad    0x91
  414a09:	mov    eax,0x8fb5570e
  414a0e:	dec    ecx
  414a0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a10:	pop    esp
  414a11:	push   ebx
  414a12:	out    0x87,eax
  414a14:	xor    al,BYTE PTR [ebp-0x9]
  414a17:	imul   ecx,DWORD PTR [eax],0xffffffed
  414a1a:	xchg   BYTE PTR [ecx-0x62],ah
  414a1d:	xchg   ebx,eax
  414a1e:	cli    
  414a1f:	push   ecx
  414a20:	or     dl,BYTE PTR [edx-0x16e6b500]
  414a26:	inc    ecx
  414a27:	jmp    0xedb5345f
  414a2c:	mov    ds:0x219e7291,al
  414a31:	nop
  414a32:	pop    ecx
  414a33:	sub    ah,BYTE PTR [ecx]
  414a35:	(bad)  
  414a36:	(bad)  
  414a37:	stos   BYTE PTR es:[edi],al
  414a38:	mov    dh,0x39
  414a3a:	std    
  414a3b:	push   ecx
  414a3c:	jle    0x4149ff
  414a3e:	(bad)  
  414a3f:	call   0x414a44
	...
  414a54:	push   ecx
  414a55:	adc    esi,0xffffffaa
  414a58:	mov    dh,0x14
  414a5a:	shl    DWORD PTR [ebp-0x26029923],0x95
  414a61:	mov    ds:0xcef6f914,eax
  414a66:	dec    ebp
  414a67:	dec    edx
  414a68:	shl    ebp,1
  414a6a:	inc    ecx
  414a6b:	jmp    0xab17cd87
  414a70:	mov    dh,0xce
  414a72:	xor    BYTE PTR [esi],bh
  414a74:	xchg   ebp,eax
  414a75:	in     eax,0x41
  414a77:	jmp    0x199db5c
  414a7c:	inc    ebx
  414a7d:	(bad)  
  414a7f:	call   0xaa9edaaa
  414a84:	mov    al,ds:0x403cc1cf
  414a89:	mov    edx,0x91bebd7f
  414a8e:	add    cl,ch
  414a90:	cld    
  414a91:	push   ebx
  414a92:	or     al,ch
  414a94:	xor    DWORD PTR [edx+0x68],0x59
  414a98:	int3   
  414a99:	push   ecx
  414a9a:	add    BYTE PTR [ebx-0x4f],al
  414a9d:	mov    bh,0xad
  414a9f:	mov    eax,0xa984ce15
  414aa4:	arpl   WORD PTR [edx-0x771e56ce],dx
  414aaa:	push   0x51ae71
  414aaf:	add    dh,al
  414ab1:	xchg   ebp,eax
  414ab2:	call   0xfe708852
  414ab7:	test   BYTE PTR [eax],al
	...
  414ac9:	add    BYTE PTR [eax],al
  414acb:	add    BYTE PTR [esi+eiz*8],bl
  414ace:	jmp    0xd29b3b
  414ad3:	add    cl,cl
  414ad5:	adc    eax,0x2fdbfdf6
  414ada:	dec    ebp
  414adb:	push   0x1c
  414add:	das    
  414ade:	adc    al,0x8
  414ae0:	sub    eax,0xa98cfdd2
  414ae5:	push   0xfffffffc
  414ae7:	(bad)  
  414ae8:	fild   DWORD PTR [ecx]
  414aea:	out    0xb7,al
  414aec:	jge    0x414b1d
  414aee:	inc    BYTE PTR [ebp-0x29760c24]
  414af4:	dec    edi
  414af5:	xchg   edx,eax
  414af6:	or     eax,0xbf59cc95
  414afb:	add    al,0xdc
  414afd:	add    al,0x8b
  414aff:	in     al,dx
  414b00:	pop    ebp
  414b01:	ds xchg ebp,eax
  414b03:	add    al,0xcc
  414b05:	xchg   ecx,eax
  414b06:	test   BYTE PTR [ebp-0x1c],0x90
  414b0a:	push   ecx
  414b0b:	push   esi
  414b0c:	xor    ebx,DWORD PTR [edi-0x6e23797c]
  414b12:	add    BYTE PTR [eax+0x43d7f399],al
  414b18:	int3   
  414b19:	xchg   edx,eax
  414b1a:	or     eax,0x941886
  414b1f:	add    bh,cl
  414b21:	mov    BYTE PTR [edx],dh
  414b23:	push   edx
  414b25:	sbb    BYTE PTR [edi-0x22c1398],al
  414b2b:	mov    WORD PTR [ecx],ss
  414b2d:	mov    esp,0xfffa
	...
  414b42:	add    BYTE PTR [eax],al
  414b44:	pop    ebx
  414b45:	cmp    al,0x4a
  414b47:	loopne 0x414ad5
  414b49:	xchg   ecx,eax
  414b4a:	mov    eax,DWORD PTR [ebp-0x1d0ac]
  414b50:	mov    ch,0x86
  414b52:	adc    eax,eax
  414b54:	add    eax,0xe5b65d87
  414b59:	xchg   esi,eax
  414b5a:	(bad)  
  414b5b:	(bad)  
  414b5c:	jmp    0x476:0xa653f74d
  414b63:	test   DWORD PTR [ebp-0x3c],esi
  414b66:	sub    cl,BYTE PTR [ebx-0x7b6ef885]
  414b6c:	cmp    eax,0x85fe5d6c
  414b71:	push   es
  414b72:	push   0x27
  414b74:	pop    es
  414b75:	pop    esi
  414b76:	pop    ebp
  414b77:	test   ch,dh
  414b79:	or     dh,bh
  414b7b:	(bad)  
  414b7c:	loopne 0x414bb8
  414b7e:	ss inc edx
  414b80:	mov    ch,0x33
  414b82:	xchg   edi,esi
  414b84:	or     BYTE PTR [esi+0x5d],bh
  414b87:	dec    edi
  414b88:	add    cl,ah
  414b8a:	mov    ch,0x11
  414b8c:	jne    0x414b44
  414b8e:	mov    BYTE PTR [edi-0x397d4e97],bh
  414b94:	mov    ecx,0x89fe82f9
  414b99:	dec    eax
  414b9a:	jnp    0x414b86
  414b9c:	xchg   ecx,eax
  414b9d:	and    DWORD PTR [ebx],edi
  414b9f:	or     edi,DWORD PTR [esi]
  414ba1:	cmp    dh,al
  414ba3:	pop    edi
  414ba4:	jne    0x414b5c
  414ba6:	or     al,0x5
	...
  414bbc:	test   DWORD PTR [ebx+eax*8],ecx
  414bbf:	dec    edi
  414bc1:	leave  
  414bc2:	push   ebx
  414bc3:	add    al,0xe5
  414bc5:	or     al,0xc3
  414bc7:	push   DWORD PTR [ebp-0x4f7ef59e]
  414bcd:	(bad)  
  414bce:	xor    eax,DWORD PTR [edx-0x4b]
  414bd1:	(bad)  
  414bd2:	push   cs
  414bd3:	add    BYTE PTR [ebp-0x4b50415b],dh
  414bd9:	mov    eax,ds:0x8fb9c14b
  414bde:	out    0xb8,eax
  414be0:	das    
  414be1:	mov    ebx,0x95c66f68
  414be6:	out    0x3,eax
  414be8:	push   es
  414be9:	mov    sp,WORD PTR ss:[ecx+0x5ac3d9ff]
  414bf1:	xor    al,0xe7
  414bf3:	dec    edx
  414bf4:	test   DWORD PTR [edi-0x1778c98a],0xcf862401
  414bfe:	mov    edx,0xaaec9a9d
  414c03:	add    ecx,DWORD PTR [ebx-0x3a80aea]
  414c09:	dec    edi
  414c0a:	out    0xe5,eax
  414c0c:	push   edi
  414c0d:	retf   
  414c0e:	xor    edx,eax
  414c10:	sbb    dh,BYTE PTR [edx]
  414c12:	mov    bl,BYTE PTR [ebx-0x4]
  414c15:	dec    edi
  414c16:	out    0x8c,eax
  414c18:	test   eax,0x2c221bf
  414c1d:	int    0xfc
  414c1f:	mov    bl,0x0
	...
  414c31:	add    BYTE PTR [eax],al
  414c33:	add    BYTE PTR [eax-0x97d18b1],ah
  414c39:	call   0x6f55:0x1a035ebd
  414c40:	(bad)  
  414c42:	push   es
  414c43:	imul   ebx,DWORD PTR [ecx+0xf],0xffffffe9
  414c47:	add    edi,DWORD PTR [esi]
  414c49:	dec    edi
  414c4a:	jae    0x414bee
  414c4c:	mov    ch,ah
  414c4e:	stos   BYTE PTR es:[edi],al
  414c4f:	add    edi,esp
  414c51:	mov    esp,0x18b503e8
  414c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c57:	mov    edx,cs
  414c59:	dec    edi
  414c5a:	and    bh,dl
  414c5c:	lods   al,BYTE PTR ds:[esi]
  414c5d:	sbb    eax,0xcb9f3a95
  414c62:	(bad)  
  414c63:	ins    BYTE PTR es:[edi],dx
  414c64:	stc    
  414c65:	psubsw mm0,QWORD PTR [ebx]
  414c68:	mov    eax,0xb6e800fd
  414c6d:	(bad)
  414c71:	pop    esi
  414c72:	mov    ebx,DWORD PTR [ecx+eax*8]
  414c75:	or     eax,0xee19ec9
  414c7a:	fist   WORD PTR [esi+0xfc11408]
  414c80:	bound  edx,QWORD PTR [esi]
  414c82:	(bad)  
  414c83:	sbb    DWORD PTR [ecx+0x23],ecx
  414c86:	fldcw  WORD PTR [edx]
  414c88:	mov    ecx,0xeaa1841c
  414c8d:	leave  
  414c8e:	std    
  414c8f:	sbb    ecx,edx
  414c91:	jle    0x414c62
  414c93:	data16 fcom DWORD PTR [ebx]
  414c96:	shr    esi,0x0
	...
  414ca9:	add    BYTE PTR [eax],al
  414cab:	add    BYTE PTR [ebx+0x22a3b0a],ch
  414cb1:	cwde   
  414cb2:	xor    DWORD PTR [ecx],ebp
  414cb4:	sbb    ebx,DWORD PTR [eax]
  414cb6:	test   BYTE PTR [ecx],dh
  414cb8:	jp     0x414c83
  414cba:	std    
  414cbb:	and    BYTE PTR [ebx+0x3be9008f],0x14
  414cc2:	(bad)  [edx]
  414cc4:	pusha  
  414cc5:	leave  
  414cc6:	mov    BYTE PTR [ecx],al
  414cc8:	icebp  
  414cc9:	push   edi
  414cca:	jae    0x414cef
  414ccc:	loope  0x414c94
  414cce:	jae    0x414c79
  414cd0:	mov    dh,0x1c
  414cd2:	test   BYTE PTR [ecx],ah
  414cd4:	or     cl,0xfd
  414cd7:	cdq    
  414cd8:	jns    0x414c7d
  414cda:	adc    al,0xd8
  414cdc:	test   dl,0x82
  414cdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ce0:	outs   dx,BYTE PTR ds:[esi]
  414ce1:	leave  
  414ce2:	push   ecx
  414ce3:	call   0x37b6:0x53518dcc
  414cea:	add    cl,ch
  414cec:	mov    dh,0xf
  414cee:	mov    WORD PTR [esi+edi*8-0x35],gs
  414cf2:	std    
  414cf3:	into   
  414cf4:	rol    WORD PTR [ebx+0x0],1
  414cf8:	jo     0x414d66
  414cfa:	add    BYTE PTR [eax],al
  414cfc:	pushf  
  414cfd:	imul   edx,DWORD PTR [eax+esi*1],0x6e
  414d01:	into   
  414d02:	std    
  414d03:	mov    bh,BYTE PTR [edi+ecx*1]
  414d06:	cld    
  414d07:	call   FWORD PTR [eax-0x6672ae8c]
  414d0d:	das    
  414d0e:	dec    ebp
  414d0f:	inc    DWORD PTR [eax]
	...
  414d21:	add    BYTE PTR [eax],al
  414d23:	add    cl,cl
  414d25:	das    
  414d26:	mov    WORD PTR [ebp-0x196ec],es
  414d2c:	mov    esp,0x815ff01
  414d31:	sar    BYTE PTR ds:0x714ed900,0x6
  414d38:	xlat   BYTE PTR ds:[ebx]
  414d39:	sar    ecx,1
  414d3b:	mov    DWORD PTR [ecx],ecx
  414d3d:	push   bx
  414d3f:	jmp    FWORD PTR [ecx]
  414d41:	dec    esi
  414d42:	cmovo  ebx,DWORD PTR [edi+edx*1]
  414d46:	inc    ebp
  414d47:	clc    
  414d48:	(bad)  
  414d49:	data16 (bad) 
  414d4b:	je     0x414d55
  414d4d:	test   BYTE PTR [eax],0x74
  414d50:	push   ds
  414d51:	lahf   
  414d52:	rcl    cl,0x74
  414d55:	lahf   
  414d56:	(bad)  
  414d57:	xchg   bp,ax
  414d59:	sbb    al,BYTE PTR [ebp-0x38]
  414d5c:	shr    DWORD PTR [ebx-0x2],1
  414d5f:	lea    ebx,[ecx+0x56]
  414d62:	cld    
  414d63:	inc    ebx
  414d65:	mov    ss:0x8b8dccf5,al
  414d6b:	test   DWORD PTR [ecx+ebp*2-0x5e5b0002],esp
  414d72:	push   ds
  414d73:	add    ah,bl
  414d75:	mov    ch,0x49
  414d77:	fisttp WORD PTR [edi]
  414d79:	mov    es,WORD PTR [edi+0x4286841d]
  414d7f:	add    BYTE PTR ds:0xb5df61c7,ah
  414d85:	jne    0x414d8b
  414d87:	inc    DWORD PTR [eax]
	...
  414d99:	add    BYTE PTR [eax],al
  414d9b:	add    BYTE PTR [edx-0x4b995c31],cl
  414da1:	mov    dh,0xe9
  414da3:	mov    ebx,0xff04770b
  414da8:	mov    al,ds:0xb53ff662
  414dad:	mov    ebp,0x3dac7346
  414db2:	pop    esp
  414db3:	out    0x4e,eax
  414db5:	add    DWORD PTR [eax+eax*1],eax
  414db8:	pop    esi
  414db9:	mov    ch,0x13
  414dbb:	rcr    BYTE PTR [edi+0x3606d0f5],0xc4
  414dc2:	mov    ecx,0x4b6f6dd
  414dc7:	call   0x45786a
  414dcc:	loop   0x414d66
  414dce:	xchg   esp,eax
  414dcf:	add    dh,bl
  414dd1:	jg     0x414e18
  414dd3:	push   esp
  414dd4:	ds pop ebx
  414dd6:	test   ebx,esp
  414dd8:	sub    eax,0xba0b6838
  414ddd:	mov    dh,0x1
  414ddf:	push   ebx
  414de0:	sub    DWORD PTR [ecx],0xffffff8f
  414de3:	jl     0x414da2
  414de5:	lds    edi,FWORD PTR [esi]
  414de7:	adc    BYTE PTR [edx],0xb8
  414dea:	mov    WORD PTR [ecx+ebp*4],ds
  414ded:	fwait
  414dee:	(bad)  
  414df1:	mov    eax,0x80a51c8c
  414df6:	(bad)  
  414df9:	sub    ecx,DWORD PTR [edx]
  414dfb:	call   0xfe9aebaa
	...
  414e14:	xor    DWORD PTR [edi-0x31],esi
  414e17:	push   es
  414e18:	xchg   DWORD PTR [esi+0x6b],esi
  414e1b:	cmp    eax,0x5301b6b4
  414e20:	dec    ebp
  414e21:	mov    dh,0x1
  414e23:	or     BYTE PTR [ebp-0x36a4c571],dh
  414e29:	ret    
  414e2a:	test   ebx,0x31ffedaa
  414e30:	test   DWORD PTR [edi-0x62deb8ee],0x9dc2f0c6
  414e3a:	daa    
  414e3b:	add    al,0x56
  414e3d:	ja     0x414ddc
  414e3f:	mov    BYTE PTR [edx+0x6c5ecd10],0x4c
  414e46:	out    0x6e,eax
  414e48:	mov    ebx,0x7c5ee4d1
  414e4d:	dec    esp
  414e4e:	out    0x4,eax
  414e50:	iret   
  414e51:	fwait
  414e52:	dec    edi
  414e53:	mov    ds:0xbce74c78,eax
  414e58:	cmp    ah,BYTE PTR [edi+0x56b2436a]
  414e5e:	cld    
  414e5f:	pop    ebx
  414e60:	das    
  414e61:	xor    BYTE PTR [edi],0xf5
  414e64:	jp     0x414df5
  414e66:	iret   
  414e67:	add    edx,DWORD PTR [edx]
  414e69:	dec    esp
  414e6a:	out    0x5a,eax
  414e6c:	add    BYTE PTR [edi],dh
  414e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e6f:	cmp    DWORD PTR [edi-0x71],esi
  414e72:	dec    esi
  414e73:	xor    DWORD PTR [ecx],ebp
  414e75:	push   ebx
  414e76:	or     esi,esp
	...
  414e8c:	xor    BYTE PTR [edi],0xe9
  414e8f:	add    eax,0xf8608fb5
  414e94:	push   0xffffffe9
  414e96:	stos   BYTE PTR es:[edi],al
  414e97:	add    edi,edx
  414e99:	mov    eax,ds:0x8fb2f03f
  414e9e:	jb     0x414e60
  414ea0:	mov    dl,0xb7
  414ea2:	or     ebx,DWORD PTR [esi-0x1d]
  414ea5:	(bad)  
  414ea6:	arpl   WORD PTR [ebx+0x66],ax
  414ea9:	or     al,0xc3
  414eab:	pop    esi
  414eac:	dec    ecx
  414ead:	ins    BYTE PTR es:[edi],dx
  414eae:	call   0xce81:0x8e5cb6
  414eb5:	loope  0x414ef8
  414eb7:	jmp    0xf84df21b
  414ebc:	jbe    0x414e85
  414ebe:	sub    ah,0xa6
  414ec1:	in     al,0x41
  414ec3:	jmp    0xac4e40c5
  414ec8:	jo     0x414e91
  414eca:	cmp    ch,BYTE PTR [edx-0x41a2f444]
  414ed0:	in     al,dx
  414ed1:	(bad)
  414ed4:	ffree  st(5)
  414ed6:	std    
  414ed7:	gs icebp 
  414ed9:	xchg   ebp,eax
  414eda:	test   BYTE PTR [esi],dh
  414edc:	or     al,0xc6
  414ede:	std    
  414edf:	sahf   
  414ee0:	jp     0x414e71
  414ee2:	call   0xfe074c1c
  414ee7:	gs icebp 
  414ee9:	xchg   ebp,eax
  414eea:	test   dh,al
  414eec:	in     eax,dx
  414eed:	(bad)  
	...
  414f04:	pop    edx
  414f05:	stos   DWORD PTR es:[edi],eax
  414f06:	movaps XMMWORD PTR [ecx+0x7093a4f2],xmm7
  414f0d:	(bad)  
  414f0e:	cmp    ah,BYTE PTR [edx+0x2]
  414f11:	pusha  
  414f12:	mov    esp,esi
  414f14:	push   0xffffffdd
  414f16:	inc    ecx
  414f17:	jmp    0xe85d62aa
  414f1c:	mov    dh,0x8a
  414f1e:	shl    esi,0x92
  414f21:	mov    ds:0x796c3efd,eax
  414f26:	add    ebp,DWORD PTR [ebp-0x75ffae3c]
  414f2c:	test   eax,0xd1e941e4
  414f31:	retf   0xce73
  414f34:	xor    ecx,DWORD PTR [ebx]
  414f36:	and    eax,0x8fb649
  414f3b:	add    DWORD PTR [esi-0x23ffff6f],eax
  414f41:	sti    
  414f42:	mov    WORD PTR [eax+esi*8-0x33fffaeb],es
  414f49:	add    bh,bh
  414f4b:	xor    eax,0x428108
  414f50:	push   ebp
  414f51:	sub    bl,dl
  414f53:	inc    ebx
  414f54:	pushf  
  414f55:	mov    edx,0x8bcfdaa5
  414f5a:	mov    eax,0x813c1f12
  414f5f:	call   0x40bb8b
  414f64:	dec    ebx
  414f65:	aad    0x5
  414f67:	call   0x414f6c
	...
  414f7c:	fldenv [edi-0x2]
  414f7f:	call   DWORD PTR [eax]
  414f81:	push   ebx
  414f82:	push   cs
  414f83:	test   BYTE PTR [ebx],ch
  414f85:	push   0x542fffe
  414f8a:	push   es
  414f8b:	add    al,al
  414f8d:	nop
  414f8e:	call   0xfea87885
  414f93:	jmp    0x414ff3
  414f95:	and    al,BYTE PTR [ecx]
  414f97:	cmp    bl,BYTE PTR [edi]
  414f99:	xchg   edi,eax
  414f9a:	xchg   ebx,eax
  414f9b:	shr    BYTE PTR [ebx+0x318b5b09],0xfd
  414fa2:	mov    edi,0x8af51c04
  414fa7:	in     al,dx
  414fa8:	lahf   
  414fa9:	data16 cmc 
  414fab:	cmp    DWORD PTR [eax-0x7e],0xc0006
  414fb2:	push   edi
  414fb3:	lea    edi,[eax]
  414fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fb6:	pusha  
  414fb7:	add    bl,BYTE PTR [edx+edx*4]
  414fba:	call   0xd35f46
  414fbf:	lea    eax,[eax-0x5a]
  414fc2:	jb     0x414fac
  414fc4:	imul   ebx,ebp,0x0
  414fc7:	add    BYTE PTR [edi+0x12],ah
  414fca:	in     al,0x1
  414fcc:	mov    ch,0xb8
  414fce:	add    DWORD PTR [edx-0x49],ebp
  414fd1:	arpl   WORD PTR [ebp+0x1b64823],ax
  414fd7:	add    BYTE PTR [ebp+eax*8-0x35],ah
  414fdb:	pop    es
  414fdc:	xor    ah,ch
  414fde:	sbb    eax,0x14
	...
  414ff3:	add    BYTE PTR [ebp+0x50],cl
  414ff6:	cmp    eax,DWORD PTR [edx-0x4b]
  414ff9:	ficomp WORD PTR [edx]
  414ffb:	and    dh,BYTE PTR [esi+esi*4-0x494b1264]
  415002:	add    DWORD PTR [ebx+0x4ed73],ecx
  415008:	cmc    
  415009:	jg     0x414fda
  41500b:	clc    
  41500c:	cmp    BYTE PTR [ebx+0x20],ch
  41500f:	or     ch,ah
  415011:	push   eax
  415012:	add    ebp,DWORD PTR [eax+0xd]
  415015:	sbb    eax,0xc473ffc2
  41501a:	jns    0x41502c
  41501c:	cmc    
  41501d:	mov    dh,0x8a
  41501f:	out    dx,eax
  415020:	cmp    BYTE PTR ds:0xbc5a15d1,ah
  415026:	icebp  
  415027:	adc    dh,ch
  415029:	mov    dh,0x18
  41502b:	mov    bh,0xb5
  41502d:	mov    dh,0x1
  41502f:	jne    0x414fdd
  415031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415032:	push   ebp
  415033:	adc    al,0x75
  415035:	jmp    0x65294ffb
  41503a:	mov    ch,0x8a
  41503c:	repz add al,0x8b
  41503f:	in     al,0x80
  415041:	js     0x415043
  415043:	add    BYTE PTR [eax+0x19826831],al
  415049:	dec    edi
  41504a:	sub    ebx,0xffffff89
  41504d:	stos   DWORD PTR es:[edi],eax
  41504e:	add    DWORD PTR [eax],eax
  415050:	push   0x2b
  415052:	fsub   DWORD PTR [ebx]
  415054:	lods   eax,DWORD PTR ds:[esi]
  415055:	dec    esi
  415056:	add    eax,DWORD PTR [ebx]
	...
  41506c:	mov    ch,0x8f
  41506e:	out    0x56,eax
  415070:	popa   
  415071:	lahf   
  415072:	jb     0x41503d
  415074:	scas   al,BYTE PTR es:[edi]
  415075:	adc    ch,BYTE PTR [eax+eiz*1-0x48]
  415079:	mov    esp,edi
  41507b:	add    esp,DWORD PTR [ebp-0x3c]
  41507e:	mov    esp,0xe750e317
  415083:	mov    bh,BYTE PTR [ecx-0x69]
  415086:	jg     0x415033
  415088:	fcom   QWORD PTR [eax-0x19]
  41508b:	imul   esi,DWORD PTR [ecx+0x6e],0xffffffe8
  41508f:	add    ecx,DWORD PTR [edx]
  415091:	sbb    ebp,eax
  415093:	mov    eax,0xb0e79374
  415098:	das    
  415099:	mov    bl,0x6a
  41509b:	sbb    bl,BYTE PTR [bp-0x3a]
  41509f:	sar    BYTE PTR [esi-0xd83daee],1
  4150a5:	les    edi,FWORD PTR [esp+ecx*1]
  4150a8:	(bad)  
  4150a9:	repz scas al,BYTE PTR es:[edi]
  4150ab:	push   esi
  4150ac:	jae    0x4150c0
  4150ae:	sub    eax,0xe739fa7c
  4150b3:	jmp    0x41508f
  4150b5:	(bad)  [edx]
  4150b7:	add    al,0x5a
  4150b9:	call   0x5372:0x8f92f46f
  4150c0:	xor    DWORD PTR [ebp-0x3b33050d],edi
  4150c6:	sbb    eax,0xd9dfa157
  4150cb:	ret    
  4150cc:	xor    cl,BYTE PTR [ebx]
  4150ce:	sub    bh,cl
	...
  4150e4:	rol    DWORD PTR [edx-0x704afc99],0xdb
  4150eb:	add    eax,0x43f4c483
  4150f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f1:	dec    edi
  4150f2:	out    0x12,eax
  4150f4:	cmc    
  4150f5:	xor    BYTE PTR fs:[ecx-0x46],al
  4150f9:	pop    DWORD PTR [eax]
  4150fb:	bound  edi,QWORD PTR [eax+0x3f94f5b9]
  415101:	mov    eax,0x933fb84f
  415106:	inc    esp
  415107:	aaa    
  415108:	test   ebx,0x6d4ebe52
  41510e:	sbb    ebp,eax
  415110:	mov    dh,0x80
  415112:	fnstenv [eax-0xb]
  415115:	mov    ebx,0x8ce52a39
  41511a:	xor    DWORD PTR [ecx],ebp
  41511c:	dec    ecx
  41511d:	retf   
  41511e:	add    cl,ch
  415120:	mov    dh,0x35
  415122:	add    bh,BYTE PTR [edx]
  415124:	fs adc al,0x44
  415127:	icebp  
  415128:	pop    dx
  41512a:	std    
  41512b:	pop    esp
  41512c:	test   eax,0x9fce5c17
  415131:	ret    0xdcfd
  415134:	retf   0x40a0
  415137:	jmp    0xedb5543f
  41513c:	mov    eax,0x17e8fd4b
  415141:	jae    0x415119
  415143:	sub    dh,BYTE PTR [ecx+0xf5e10e]
	...
  415159:	add    BYTE PTR [eax],al
  41515b:	add    BYTE PTR [edi+0x2c3f0c4c],ch
  415161:	jl     0x4151bb
  415163:	sti    
  415164:	jbe    0x415129
  415166:	push   edx
  415167:	inc    ecx
  415168:	mov    eax,ds:0x8de941d9
  41516d:	mov    WORD PTR [edi+ebx*4+0x74],es
  415171:	ret    
  415172:	addr16 in eax,0xb5
  415175:	dec    esp
  415176:	clc    
  415177:	je     0x41516b
  415179:	xchg   esi,eax
  41517a:	dec    edi
  41517b:	mov    ecx,0x6cd6c251
  415180:	jno    0x4151bd
  415182:	add    DWORD PTR [edi+0x52],ecx
  415185:	ret    0x51
  415188:	xor    al,0xd0
  41518a:	rol    DWORD PTR [ebx+0xc],cl
  41518d:	js     0x415192
  41518f:	inc    esp
  415190:	call   0x438f:0xd869fdd0
  415197:	clc    
  415198:	popa   
  415199:	retf   0x51f5
  41519c:	sbb    al,0xf4
  41519e:	(bad)  
  41519f:	(bad)  
  4151a0:	and    al,BYTE PTR [edx-0x43]
  4151a3:	jne    0x415184
  4151a5:	pop    esp
  4151a6:	inc    esp
  4151a7:	push   DWORD PTR [ebx+0xfdd0c92]
  4151ad:	(bad)  
  4151ae:	mov    eax,0xfdd0a10c
  4151b3:	(bad)  
  4151b4:	sub    DWORD PTR [edi+0x56],esp
  4151b7:	call   0x3fa5e1
  4151bc:	sbb    BYTE PTR [edi+0x74],cl
  4151bf:	add    eax,DWORD PTR [eax]
	...
  4151d1:	add    BYTE PTR [eax],al
  4151d3:	add    BYTE PTR [edx-0x560000ff],al
  4151d9:	mov    ebx,0x269c43dc
  4151de:	push   cs
  4151df:	(bad)  
  4151e1:	mov    edi,ebp
  4151e3:	jne    0x415229
  4151e5:	repz in eax,0x6e
  4151e8:	sub    ebx,DWORD PTR [ebx-0x2]
  4151eb:	test   BYTE PTR [ecx+edx*8],bl
  4151ee:	add    bh,dh
  4151f0:	cdq    
  4151f1:	pop    esp
  4151f2:	xor    eax,0x14d2435d
  4151f7:	push   0xfffe0e5c
  4151fc:	scas   eax,DWORD PTR es:[edi]
  4151fd:	pop    esp
  4151fe:	je     0x4151f8
  415200:	stos   DWORD PTR es:[edi],eax
  415201:	pop    esp
  415202:	adc    al,0x84
  415204:	pop    esi
  415205:	into   
  415206:	std    
  415207:	call   0x3fad77
  41520c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41520d:	add    esi,esi
  41520f:	pop    ebx
  415210:	in     eax,0x50
  415212:	add    eax,0x1ceb500
  415217:	dec    eax
  415219:	in     al,0x36
  41521b:	inc    edx
  41521c:	mov    ch,0x49
  41521e:	out    dx,al
  41521f:	iret   
  415220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415221:	clc    
  415222:	add    edi,esi
  415224:	fstp   st(4)
  415226:	inc    ecx
  415227:	test   BYTE PTR ds:0x598cae75,0xd4
  41522e:	test   DWORD PTR [eax-0x542f],eax
  415234:	mov    ch,0x2
  415236:	xchg   DWORD PTR [eax+eax*1+0x0],eax
	...
  41524a:	add    BYTE PTR [eax],al
  41524c:	pop    ecx
  41524d:	or     BYTE PTR [edi+0x3d27dd44],al
  415253:	inc    esp
  415254:	pop    ecx
  415255:	loopne 0x415258
  415257:	add    BYTE PTR [ebp-0x3a001447],dh
  41525d:	test   BYTE PTR [ecx],0x85
  415260:	jne    0x4152c6
  415262:	dec    DWORD PTR [eax+ebp*1-0x4a4a7321]
  415269:	mov    dh,0x1
  41526b:	call   0x464f63
  415270:	les    esi,FWORD PTR ds:[ecx-0x49490aeb]
  415277:	push   esi
  415278:	fild   DWORD PTR ds:[eax+eax*1]
  41527c:	mov    ch,0xa5
  41527e:	adc    eax,0xd43438ff
  415283:	std    
  415284:	bound  esp,QWORD PTR [edx]
  415286:	mov    edx,0x86015a4f
  41528b:	ret    
  41528c:	shl    DWORD PTR [ebx-0x79],0x6f
  415290:	dec    ebx
  415291:	or     dl,BYTE PTR [edx+0x4f]
  415294:	sub    al,0x64
  415296:	aam    0xfd
  415298:	cmp    bh,BYTE PTR [edx]
  41529a:	push   ecx
  41529b:	adc    al,0x45
  41529d:	in     eax,0xc1
  41529f:	push   DWORD PTR [ecx]
  4152a1:	nop
  4152a2:	daa    
  4152a3:	fldcw  WORD PTR [ebp-0x757693a4]
  4152a9:	rcl    DWORD PTR [esi+0x53],0x1f
  4152ad:	xchg   ebp,eax
  4152ae:	mov    edi,0x3
	...
  4152c3:	add    BYTE PTR [edi+ecx*4+0xc3980e7],dh
  4152ca:	ds push ebx
  4152cc:	sti    
  4152cd:	pop    eax
  4152ce:	xchg   edi,eax
  4152cf:	push   edx
  4152d0:	or     BYTE PTR ds:0x3b380024,cl
  4152d6:	jae    0x415264
  4152d8:	and    eax,0xcd03e790
  4152dd:	lea    esi,[ecx]
  4152df:	add    al,0xb5
  4152e1:	adc    dl,BYTE PTR [ebp-0x1801fd3d]
  4152e7:	add    esi,DWORD PTR [ebp-0x45d30b49]
  4152ed:	shl    BYTE PTR [edx+0x4a],0x2
  4152f1:	adc    esp,DWORD PTR [ebp-0x15ff0581]
  4152f7:	add    esi,DWORD PTR [ebp-0x6db58cf1]
  4152fd:	cli    
  4152fe:	mov    esi,0x2516b504
  415303:	mov    al,0x39
  415305:	cmp    bh,bh
  415307:	mov    eax,DWORD PTR [edi-0x71]
  41530a:	out    0x3,eax
  41530c:	(bad)  
  41530d:	fst    QWORD PTR [eax+0x2512b503]
  415313:	aam    0xfa
  415315:	xor    eax,0x596b16e8
  41531a:	ins    BYTE PTR es:[edi],dx
  41531b:	enter  0x5f2e,0x3e
  41531f:	jge    0x4152ea
  415321:	xor    esp,DWORD PTR [eax-0x30]
  415324:	ficom  DWORD PTR [esi]
  415326:	std    
  415327:	fild   DWORD PTR [eax]
	...
  415339:	add    BYTE PTR [eax],al
  41533b:	add    BYTE PTR [ebx-0x66],al
  41533e:	sbb    esi,esp
  415340:	jp     0x4152d1
  415342:	add    BYTE PTR [esi+esi*2+0x3b],ch
  415346:	adc    DWORD PTR [ebp+edi*8+0x27],ebx
  41534a:	push   eax
  41534b:	mov    edi,0xb9384b35
  415350:	xor    eax,0xf5417043
  415355:	xlat   BYTE PTR ds:[ebx]
  415356:	(bad)  
  415357:	call   0x31c2e0c7
  41535c:	addr16 or eax,0xa4e23ef9
  415362:	cmp    DWORD PTR [edi],ebp
  415364:	or     al,0x99
  415366:	push   eax
  415367:	cs or  eax,0x2a48b28
  41536d:	ss add al,cl
  415370:	jle    0x4153e9
  415372:	enter  0xb6e8,0xc0
  415376:	jae    0x4152f9
  415378:	outs   dx,BYTE PTR ds:[esi]
  415379:	pusha  
  41537a:	hlt    
  41537b:	push   es
  41537c:	addr16 adc eax,0x4b398d44
  415382:	pusha  
  415383:	lea    edi,fs:[edi-0x48]
  415387:	xor    eax,0xd1008fb6
  41538c:	sbb    eax,0xc61e900
  415392:	test   BYTE PTR [ecx-0x19],bl
  415395:	mov    ebp,0x916b39fd
  41539a:	mov    eax,DWORD PTR [ecx+ebp*2+0x67]
  41539e:	call   0x415465
	...
  4153b3:	add    ah,ch
  4153b5:	pop    DWORD PTR [eax]
  4153b7:	inc    ebx
  4153b8:	jno    0x4153c6
  4153ba:	inc    esp
  4153bb:	or     eax,0x74022921
  4153c0:	jb     0x4153ed
  4153c2:	pop    eax
  4153c3:	xchg   ecx,eax
  4153c4:	sti    
  4153c5:	aad    0xff
  4153c7:	call   0x5cad97b1
  4153cc:	jb     0x415385
  4153ce:	std    
  4153cf:	add    BYTE PTR [ecx-0x1d],al
  4153d2:	dec    ebp
  4153d3:	mov    edx,DWORD PTR [edx]
  4153d5:	cmp    eax,0xddcc7c74
  4153da:	cmp    DWORD PTR [ebx-0x69],ebx
  4153dd:	popa   
  4153de:	in     eax,0xd1
  4153e0:	ins    DWORD PTR es:[edi],dx
  4153e1:	pusha  
  4153e2:	inc    BYTE PTR [ebx-0x76a13c30]
  4153e8:	popa   
  4153e9:	mov    bh,0x5a
  4153eb:	and    DWORD PTR [edx+edx*4+0x7b],0xa
  4153f0:	xor    al,0x27
  4153f2:	(bad)  
  4153f3:	dec    DWORD PTR [ebx+ebx*2]
  4153f6:	adc    bl,cl
  4153f8:	fcom   QWORD PTR [edx-0x286e7ca2]
  4153fe:	enter  0xd0c2,0x92
  415402:	push   esi
  415403:	mov    esi,0x9614
  415408:	adc    bl,bl
  41540a:	popf   
  41540b:	outs   dx,DWORD PTR ds:[esi]
  41540c:	sbb    al,0x93
  41540e:	push   ebp
  41540f:	jmp    ecx
  415411:	(bad)  
  415412:	adc    eax,DWORD PTR [eax-0x34]
  415415:	cmp    ecx,DWORD PTR [eax+ecx*1]
	...
  41542c:	leave  
  41542d:	aam    0xfd
  41542f:	add    cl,BYTE PTR [ecx-0x73bc2c2a]
  415435:	adc    eax,edx
  415437:	or     al,0x27
  415439:	dec    eax
  41543a:	sub    cl,bh
  41543c:	push   ss
  41543d:	mov    DWORD PTR [eax],0x4bd28c30
  415443:	jne    0x415488
  415445:	add    bl,al
  415447:	push   ebp
  415448:	pop    es
  415449:	pop    edi
  41544a:	sub    ah,0x8c
  41544d:	xchg   ebx,eax
  41544e:	add    BYTE PTR [eax],al
  415450:	iret   
  415451:	(bad)  [ebp+0x5]
  415454:	dec    esp
  415455:	xchg   edx,eax
  415456:	push   0xfdd3aba0
  41545b:	mov    WORD PTR [ebp+0x4afd552b],?
  415461:	or     eax,0xa7f5535a
  415466:	add    DWORD PTR [ebx+0x447b98ab],ecx
  41546c:	mov    ebp,0xb4010510
  415471:	test   al,0x48
  415473:	add    eax,0x1aab5
  415478:	xor    BYTE PTR [eax-0x2b],ch
  41547b:	and    eax,DWORD PTR [eax+0x33]
  41547e:	push   ebp
  41547f:	std    
  415480:	or     cl,BYTE PTR [ebp-0x4e]
  415483:	push   ebp
  415484:	gs inc ebx
  415486:	outs   dx,BYTE PTR ds:[esi]
  415487:	repz stc 
  415489:	jl     0x4154db
  41548b:	out    0xf6,eax
  41548d:	test   BYTE PTR [ecx],al
	...
  4154a3:	add    BYTE PTR [ecx],dh
  4154a5:	push   0xdde20bd5
  4154aa:	jl     0x41546e
  4154ac:	test   DWORD PTR [eax-0x5b2d0dc8],esp
  4154b2:	pop    esp
  4154b3:	add    DWORD PTR [esi-0x8375398],eax
  4154b9:	stos   DWORD PTR es:[edi],eax
  4154ba:	add    DWORD PTR [ebp+0x2e],edx
  4154bd:	mov    WORD PTR [edx+0x1a7edeb],es
  4154c3:	add    BYTE PTR [esi],al
  4154c5:	and    eax,0xa7c9bab9
  4154ca:	add    DWORD PTR [eax],eax
  4154cc:	push   es
  4154cd:	inc    edx
  4154ce:	dec    esp
  4154cf:	addr16 in eax,0x85
  4154d2:	(bad)  
  4154d3:	(bad)  
  4154d4:	cmp    DWORD PTR [eax+eax*2],esi
  4154d7:	std    
  4154d8:	adc    dh,0xb4
  4154db:	(bad)  
  4154dc:	lock into 
  4154de:	sub    ah,bh
  4154e0:	aam    0xa7
  4154e2:	pop    ecx
  4154e3:	outs   dx,DWORD PTR ds:[esi]
  4154e4:	data16 out dx,al
  4154e6:	dec    ebp
  4154e7:	xor    ch,BYTE PTR [ebx-0x70]
  4154ea:	fiadd  DWORD PTR [ebx+0x2c]
  4154ed:	dec    esp
  4154ee:	in     al,0x4b
  4154f0:	mov    ds:0x483fdd0b,al
  4154f5:	mov    ebp,0xb837c48e
  4154fa:	jmp    0x4154d4
  4154fc:	mov    ah,0x80
  4154fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154ff:	(bad)  
  415500:	out    dx,eax
  415501:	sar    cl,0x5b
  415504:	out    0xcf,eax
  415506:	daa    
  415507:	add    DWORD PTR [eax],0x0
	...
  415519:	add    BYTE PTR [eax],al
  41551b:	add    BYTE PTR [ecx-0xe4db059],ch
  415521:	mov    fs,edi
  415523:	sbb    BYTE PTR [ecx+0x3180e7c3],0xcc
  41552a:	dec    ebp
  41552b:	dec    edi
  41552c:	add    esp,DWORD PTR [eax+0x72]
  41552f:	inc    esi
  415530:	adc    bh,BYTE PTR [edx+0x38]
  415533:	dec    edi
  415534:	repz adc ebp,DWORD PTR [eax]
  415537:	fdiv   DWORD PTR [esi+0x8]
  41553a:	es pop esp
  41553c:	pop    esp
  41553d:	mov    esi,0xc02f4f26
  415542:	jo     0x41551d
  415544:	retf   0x1e12
  415547:	into   
  415548:	xchg   BYTE PTR [eax+0xd],bh
  41554b:	(bad)  
  41554c:	xchg   edx,eax
  41554d:	push   0x42bbb705
  415552:	out    dx,eax
  415553:	cmp    cl,0xa7
  415556:	push   DWORD PTR [esi+0x71]
  415559:	mov    fs,edi
  41555b:	xchg   DWORD PTR [edx+0x43],esp
  41555e:	add    eax,0x72881803
  415563:	inc    ebp
  415564:	jmp    0x415570
  415566:	push   ebp
  415567:	pop    esp
  415568:	xchg   edx,eax
  415569:	push   ds
  41556a:	(bad)  [esi-0x7d]
  41556d:	adc    ebp,DWORD PTR [eax-0x48f75129]
  415573:	pop    ebx
  415574:	push   esp
  415575:	mov    edi,0x9fbb600
  41557a:	je     0x41552d
  41557c:	inc    DWORD PTR [esi+0x1c8b]
	...
  415592:	add    BYTE PTR [eax],al
  415594:	stc    
  415595:	mov    ah,0xd3
  415597:	cdq    
  415598:	add    edi,DWORD PTR [esi+0xb079f31]
  41559e:	test   BYTE PTR [ebp+0x13fdbdf0],bl
  4155a4:	mov    cl,0x5f
  4155a6:	std    
  4155a7:	aam    0x66
  4155a9:	mov    ds:0xd037e940,al
  4155ae:	or     al,0xe
  4155b0:	sahf   
  4155b1:	rcr    BYTE PTR [esi-0x3e],cl
  4155b4:	fxch   st(6)
  4155b6:	add    al,0xe9
  4155b8:	dec    ebp
  4155b9:	or     ebp,ebp
  4155bb:	push   0xe9033c6a
  4155c0:	mov    dh,0x60
  4155c2:	push   esi
  4155c3:	sahf   
  4155c4:	fsubr  QWORD PTR [edi-0x18]
  4155c7:	mov    ds:0xfafdbd84,eax
  4155cc:	lahf   
  4155cd:	jns    0x415590
  4155cf:	mov    ch,0xe1
  4155d1:	or     cl,dh
  4155d3:	adc    DWORD PTR [esi],eax
  4155d5:	sar    bh,cl
  4155d7:	call   0x2972e44b
  4155dc:	pop    ss
  4155dd:	push   0x78b6aad6
  4155e2:	shl    esi,0x32
  4155e5:	mov    edx,0xf0b6e900
  4155ea:	xor    BYTE PTR [edi],bl
  4155ec:	ja     0x4155a9
  4155ee:	test   al,0x9
  4155f0:	mov    ds:0x32f6fdbb,eax
  4155f5:	lods   eax,DWORD PTR ds:[esi]
  4155f6:	add    cl,ch
	...
  41560c:	mov    dh,0xe8
  41560e:	add    cl,ah
  415610:	mov    dh,0x8f
  415612:	je     0x415616
  415614:	popa   
  415615:	out    0xff,eax
  415617:	dec    DWORD PTR [edi+ecx*4+0x4d2e1be8]
  41561e:	(bad)  
  41561f:	cmp    ebx,DWORD PTR [edi]
  415621:	fcom   DWORD PTR [eax]
  415623:	jmp    FWORD PTR [ecx-0x45]
  415626:	fadd   QWORD PTR [ebx+0x4c]
  415629:	cmp    ch,ch
  41562b:	call   0x411217
  415630:	xlat   BYTE PTR ds:[ebx]
  415631:	arpl   dx,bp
  415633:	add    bl,BYTE PTR [edi+0x65]
  415636:	mov    al,ds:0xfdd11a2c
  41563b:	out    0x30,eax
  41563d:	adc    eax,0x92aa0001
  415642:	xor    dh,dl
  415644:	iret   
  415645:	xchg   ebx,eax
  415646:	and    BYTE PTR [edi+eiz*1+0x3a],dh
  41564a:	mov    esp,0xfe4c9684
  41564f:	call   0x3fa35e
  415654:	imul   edx,DWORD PTR [edx-0x70b029d0],0x0
  41565b:	add    esp,ebx
  41565d:	mov    ?,WORD PTR [ebx+edx*1+0x57]
  415661:	mov    ch,BYTE PTR [esi+edx*8]
  415664:	jg     0x9b85a9bb
  41566a:	rol    DWORD PTR [edx-0x24],0xff
  41566e:	in     eax,0xad
	...
  415684:	call   0xd69e:0xd9f6008e
  41568b:	inc    ebx
  41568c:	int3   
  41568d:	into   
  41568e:	jno    0x4156dc
  415690:	inc    esi
  415691:	mov    edx,0x4badb7e5
  415696:	(bad)  
  415697:	mov    edi,0x3d35f0
  41569c:	xlat   BYTE PTR ds:[ebx]
  41569d:	push   eax
  41569e:	jno    0x4156ac
  4156a0:	add    eax,0xb5588887
  4156a5:	lods   al,BYTE PTR ds:[esi]
  4156a6:	jp     0x4156ff
  4156a8:	lods   eax,DWORD PTR ds:[esi]
  4156a9:	sub    eax,0xb5b7ea51
  4156ae:	push   ebx
  4156af:	mov    al,ds:0xffc122a1
  4156b4:	push   edx
  4156b5:	loopne 0x41563a
  4156b7:	add    BYTE PTR [ebp+0x2ae8004e],dh
  4156bd:	pop    ss
  4156be:	dec    ebp
  4156bf:	dec    BYTE PTR [esi+0x3c0cd5e5]
  4156c5:	loopne 0x41570a
  4156c7:	aas    
  4156c8:	mov    ecx,0xad577aa7
  4156cd:	cmp    eax,0xf5b7ea51
  4156d2:	push   ebx
  4156d3:	mov    al,ds:0xffc11ad9
  4156d8:	sbb    al,BYTE PTR [esi+eax*4+0x0]
  4156dc:	mov    ch,0x5a
  4156de:	push   es
  4156df:	xor    bl,ch
  4156e1:	in     al,0x1
  4156e3:	add    BYTE PTR [ecx+0xc959ab],0x0
	...
  4156fa:	add    BYTE PTR [eax],al
  4156fc:	mov    ds:0x583801a7,eax
  415701:	rcl    ch,0x20
  415704:	ds ret 
  415706:	sbb    eax,0x59a876d6
  41570b:	idiv   ebx
  41570d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41570e:	add    DWORD PTR [ecx-0x3f8577],esp
  415714:	aas    
  415715:	cwde   
  415716:	or     bl,al
  415718:	inc    ecx
  415719:	lods   eax,DWORD PTR ds:[esi]
  41571a:	pop    ecx
  41571b:	jge    0x415715
  41571d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41571e:	add    DWORD PTR [esi-0x33],edx
  415721:	icebp  
  415722:	push   edx
  415723:	(bad)  
  415724:	mov    dl,0x1a
  415726:	lods   al,BYTE PTR ds:[esi]
  415727:	pop    edx
  415728:	jl     0x41578f
  41572a:	add    eax,0x5d2e0800
  41572f:	or     BYTE PTR [ecx-0x4afa0c70],0x8f
  415736:	ins    BYTE PTR es:[edi],dx
  415737:	shl    DWORD PTR [edx-0x452e29a1],0xd1
  41573e:	and    al,0x4b
  415740:	jp     0x4156fc
  415742:	fcom   QWORD PTR [ebx]
  415744:	lds    ecx,FWORD PTR [edi-0x19]
  415747:	sub    BYTE PTR [edx],0x44
  41574a:	inc    eax
  41574b:	mov    bh,0xb
  41574d:	mov    ecx,0x941ffc34
  415752:	call   0xef690c5a
  415757:	ror    DWORD PTR [edx+0x4689648f],1
  41575d:	mov    ebx,0x4b8e
	...
  415772:	add    BYTE PTR [eax],al
  415774:	push   edx
  415775:	scas   eax,DWORD PTR es:[edi]
  415776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415777:	dec    ebx
  415778:	xor    edx,DWORD PTR [edi+0x20]
  41577b:	sub    DWORD PTR [edx+0x3a],0x41a2dbb5
  415782:	daa    
  415783:	add    al,0x2e
  415785:	shl    DWORD PTR [edi-0x18704b75],1
  41578b:	adc    DWORD PTR [edx],0x7c
  41578e:	cmp    al,BYTE PTR ds:0xd02812b5
  415794:	ror    BYTE PTR [eax+eax*2],cl
  415797:	dec    ebx
  415798:	data16 ins BYTE PTR es:[edi],dx
  41579a:	jb     0x4157df
  41579c:	jp     0x415756
  41579e:	(bad)  
  4157a0:	(bad)  
  4157a1:	dec    edi
  4157a2:	out    0xb6,eax
  4157a4:	fild   DWORD PTR [edx-0xd]
  4157a7:	jle    0x4157a4
  4157a9:	pop    edi
  4157aa:	push   ds
  4157ab:	icebp  
  4157ac:	neg    BYTE PTR [esi+0xa6d03a7]
  4157b2:	mov    ds:0xe1c77f4a,eax
  4157b7:	inc    ebx
  4157b8:	mov    al,0xcf
  4157ba:	outs   dx,DWORD PTR ds:[esi]
  4157bb:	shr    DWORD PTR [ebx-0x6183ff48],0xb9
  4157c2:	adc    ecx,ecx
  4157c4:	mov    ds:0x62460078,eax
  4157c9:	push   es
  4157ca:	inc    esp
  4157cb:	fmulp  st(1),st
  4157cd:	into   
  4157ce:	or     cl,ch
  4157d0:	inc    ebp
  4157d1:	add    eax,0xc0da6aed
  4157d6:	push   0xffffffea
	...
  4157ec:	push   cs
  4157ed:	in     eax,0xf5
  4157ef:	mov    esi,0x3dc10cff
  4157f4:	imul   esp,DWORD PTR [esi],0xb9bac100
  4157fa:	std    
  4157fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157fc:	out    dx,al
  4157fd:	lahf   
  4157fe:	mov    al,0xe8
  415800:	mov    dh,0xff
  415802:	inc    DWORD PTR [ecx+0x62c07db8]
  415808:	aad    0x5b
  41580a:	rcl    DWORD PTR [ecx+0x7efdb9e2],0xaa
  415811:	clc    
  415812:	je     0x4157e3
  415814:	add    BYTE PTR [eax-0x616d2b02],bh
  41581a:	inc    eax
  41581b:	jmp    0xe99ba361
  415820:	mov    dh,0x31
  415822:	aaa    
  415823:	loope  0x41580a
  415825:	fwait
  415826:	mov    DWORD PTR [ecx-0x17c2f14e],esp
  41582c:	es push ebx
  41582e:	add    cl,ch
  415830:	add    eax,0xb9a58990
  415835:	add    DWORD PTR [bx+di],esp
  415838:	outs   dx,DWORD PTR ds:[esi]
  415839:	scas   eax,DWORD PTR es:[edi]
  41583a:	xor    DWORD PTR [ecx],ebp
  41583c:	jnp    0x4157ee
  41583e:	mov    ds:0x31b97f1e,al
  415843:	sub    DWORD PTR [eax-0x74],edi
  415846:	add    BYTE PTR [ebx+edi*1-0x37ff7e5c],dh
  41584d:	ficom  DWORD PTR [edx+0x56]
	...
  415864:	outs   dx,BYTE PTR ds:[esi]
  415865:	pushw  cs
  415867:	mov    dh,0x9f
  415869:	aam    0xff
  41586b:	mov    WORD PTR [ecx+0x2b],ss
  41586e:	dec    ebp
  41586f:	lea    esi,[eax-0x23895dfa]
  415875:	mov    edi,ebp
  415877:	ss je  0x415804
  41587a:	idiv   edi
  41587c:	imul   edi,DWORD PTR [edi],0x44
  41587f:	cwde   
  415880:	int3   
  415881:	push   ebx
  415882:	jnp    0x4158f7
  415884:	pop    ebp
  415885:	xchg   ebx,eax
  415886:	test   al,al
  415888:	mov    eax,ds:0xf9016a96
  41588d:	not    BYTE PTR [ebp-0x175de4b0]
  415893:	and    al,0x15
  415895:	dec    ecx
  415896:	dec    BYTE PTR [ebp-0x17b2dc6f]
  41589c:	mov    al,0xdc
  41589e:	add    BYTE PTR [eax],al
  4158a0:	mov    al,ds:0xaa0b744b
  4158a5:	dec    esp
  4158a6:	jge    0x4158a3
  4158a8:	adc    ebp,ebx
  4158aa:	mov    edx,0xc27ac75e
  4158af:	mov    al,0x1d
  4158b1:	push   esp
  4158b2:	cmc    
  4158b3:	push   ebp
  4158b4:	xchg   DWORD PTR [edi-0x7e],edx
  4158b7:	in     al,0x64
  4158b9:	adc    ch,dl
  4158bb:	and    al,0x17
  4158bd:	xchg   ebx,eax
  4158be:	add    BYTE PTR [ebx+0x52],dl
  4158c1:	add    bh,bh
  4158c3:	xor    eax,0x428158
	...
  4158dc:	pop    ecx
  4158dd:	fbld   TBYTE PTR [ecx]
  4158df:	sbb    al,0x92
  4158e1:	iret   
  4158e2:	and    DWORD PTR [ebx],edx
  4158e4:	fcomp  QWORD PTR [edx-0x1a]
  4158e7:	into   
  4158e8:	fst    QWORD PTR [edx+0x14b5c084]
  4158ee:	sbb    BYTE PTR [ebx-0x11a338f],cl
  4158f4:	sub    ebp,eax
  4158f6:	jmp    0xee0e7a87
  4158fb:	mov    cl,bh
  4158fd:	(bad)  
  4158fe:	in     eax,dx
  4158ff:	out    0xc1,eax
  415901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415902:	dec    eax
  415903:	(bad)  
  415904:	ds mov al,0x7a
  415907:	jnp    0x4158da
  415909:	mov    esp,0xa508fe7e
  41590e:	and    al,BYTE PTR [ecx+edx*8-0x48]
  415912:	jbe    0x415957
  415914:	cdq    
  415915:	mov    al,0x59
  415917:	push   edx
  415918:	jp     0x4158c1
  41591a:	add    ebx,ebp
  41591c:	mov    ecx,0xc123c531
  415921:	daa    
  415922:	lds    esp,FWORD PTR [ebx]
  415924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415925:	push   ds
  415926:	add    eax,DWORD PTR [eax]
  415928:	mov    ch,0xa5
  41592a:	jle    0x415952
  41592c:	mov    ah,0xa8
  41592e:	add    DWORD PTR [edi+0x4d],edx
  415931:	dec    edi
  415932:	xor    eax,0x412432ff
  415937:	push   cs
  415938:	xor    DWORD PTR [ebx],esp
  41593a:	add    eax,DWORD PTR [eax]
  41593c:	mov    ch,0x92
  41593e:	add    DWORD PTR [ebp+0x0],ecx
	...
  415954:	jno    0x415922
  415956:	fisttp QWORD PTR [edi-0x63]
  415959:	cwde   
  41595a:	icebp  
  41595b:	(bad)  
  41595c:	int    0x60
  41595e:	xor    edi,0x2
  415961:	pop    ebp
  415962:	jbe    0x4159a7
  415964:	ror    eax,1
  415966:	mov    cl,0x69
  415968:	mov    ah,0xe0
  41596a:	(bad)  
  41596c:	jbe    0x415916
  41596e:	dec    eax
  41596f:	adc    al,0x3d
  415971:	xlat   BYTE PTR ds:[ebx]
  415972:	sar    edi,0x2f
  415975:	js     0x4159f5
  415977:	cmc    
  415978:	ret    0x6b8f
  41597b:	jecxz  0x415931
  41597d:	(bad)  
  41597e:	out    0x48,eax
  415980:	test   eax,0xbac3fa9f
  415985:	or     ch,ch
  415987:	inc    ebx
  415988:	les    ecx,FWORD PTR [edi-0x19]
  41598b:	push   es
  41598c:	bound  edx,QWORD PTR [eax-0x74d7fc19]
  415992:	popf   
  415993:	dec    eax
  415994:	xchg   DWORD PTR [ecx-0x7a77820b],eax
  41599a:	imul   eax,esp,0xffffffb4
  41599d:	(bad)  
  41599e:	out    0x5b,eax
  4159a0:	add    cl,BYTE PTR [ebp+0x704d03e7]
  4159a6:	push   ebx
  4159a7:	push   DWORD PTR [edi]
  4159a9:	xor    edi,0x2d
  4159ac:	test   DWORD PTR [edi+0x6c3678d7],0x8fb504a3
  4159b6:	pop    ss
  4159b7:	pop    esp
	...
  4159cc:	sub    eax,0x3103e78d
  4159d1:	rcl    BYTE PTR [esp+edi*4],1
  4159d4:	xor    esp,esi
  4159d6:	retf   
  4159d7:	add    esi,DWORD PTR [esi-0x1da41871]
  4159dd:	mov    eax,0x10904786
  4159e2:	cmp    al,0x20
  4159e4:	int    0x90
  4159e6:	out    0x3,eax
  4159e8:	mov    ch,0x3b
  4159ea:	(bad)
  4159ed:	add    bh,BYTE PTR [eax+eiz*1-0x27]
  4159f1:	nop
  4159f2:	out    0x3,eax
  4159f4:	xor    BYTE PTR [ebx+ecx*1+0xc],al
  4159f8:	or     eax,0xb50489ee
  4159fd:	add    ch,BYTE PTR [edi+ebx*1-0xec1a05f]
  415a04:	fisub  WORD PTR [ecx+0x2b6a900]
  415a0a:	dec    ebp
  415a0b:	add    eax,0xb8c090a5
  415a10:	outs   dx,DWORD PTR ds:[esi]
  415a11:	nop
  415a12:	push   0xffffffe9
  415a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a15:	iret   
  415a16:	push   0xffffffeb
  415a18:	pop    esi
  415a19:	clc    
  415a1a:	add    al,0xe9
  415a1c:	mov    dh,0xa7
  415a1e:	mov    edi,0xf6b5f218
  415a23:	in     al,0xc6
  415a25:	fld    QWORD PTR [ecx-0x17]
  415a28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a29:	inc    eax
  415a2a:	or     eax,DWORD PTR [ecx+0x69008fb6]
	...
  415a44:	ins    BYTE PTR es:[edi],dx
  415a45:	mov    al,ds:0x9b5af4fd
  415a4a:	inc    eax
  415a4b:	jmp    0x25cce9ac
  415a50:	xchg   ebp,eax
  415a51:	sub    edx,DWORD PTR [eax+0x51]
  415a54:	mov    dl,0x60
  415a56:	inc    ecx
  415a57:	adc    eax,DWORD PTR [ecx]
  415a59:	add    dh,dh
  415a5b:	mov    dh,0xf3
  415a5d:	add    eax,DWORD PTR [ebp+0x5]
  415a60:	pop    ecx
  415a61:	inc    esp
  415a62:	push   0xffffffe9
  415a64:	ins    BYTE PTR es:[edi],dx
  415a65:	mov    ?,ebp
  415a67:	hlt    
  415a68:	dec    esi
  415a69:	lahf   
  415a6a:	inc    eax
  415a6b:	jmp    0x8ec5172f
  415a70:	add    al,BYTE PTR [esi-0x37da79ab]
  415a76:	adc    ch,BYTE PTR [ecx]
  415a78:	mov    ecx,0xfc9afd5c
  415a7d:	mov    gs,eax
  415a7f:	in     al,0x7a
  415a81:	mov    ch,0xfd
  415a83:	mov    edi,0xfa2450c8
  415a88:	mov    ecx,0xf262d1b4
  415a8d:	outs   dx,DWORD PTR ds:[esi]
  415a8e:	adc    al,0x40
  415a90:	add    cl,BYTE PTR [edi+0x10dc0000]
  415a96:	jp     0x415abc
  415a98:	cld    
  415a99:	mov    edi,0x8af5850e
  415a9e:	add    BYTE PTR [eax],al
  415aa0:	test   BYTE PTR [ebp+0x32e87b68],0x86
  415aa7:	call   0x415aac
	...
  415abc:	ins    DWORD PTR es:[edi],dx
  415abd:	inc    ebp
  415abe:	(bad)  
  415abf:	call   DWORD PTR [ebp-0xc]
  415ac2:	and    DWORD PTR [eax],edx
  415ac4:	sbb    DWORD PTR [edi+0xe],ecx
  415ac7:	test   BYTE PTR [esp+ecx*4+0x0],bl
  415acb:	add    BYTE PTR [ecx],dl
  415acd:	xor    esp,DWORD PTR [ecx]
  415acf:	add    BYTE PTR [edi+0x4e50008f],cl
  415ad5:	in     ax,0x37
  415ad8:	sub    DWORD PTR [ebp-0x2],ecx
  415adb:	test   BYTE PTR [eax+eiz*8-0x1],cl
  415adf:	std    
  415ae0:	dec    edi
  415ae1:	out    dx,eax
  415ae2:	xor    esi,edx
  415ae4:	lahf   
  415ae5:	mov    ebp,DWORD PTR [edx+0x16]
  415ae8:	jae    0x415a86
  415aea:	std    
  415aeb:	adc    eax,0x3dbbb0
  415af0:	iret   
  415af1:	inc    ebx
  415af2:	add    BYTE PTR [ebp+0x72],dh
  415af5:	push   edi
  415af6:	stc    
  415af7:	retf   
  415af8:	pop    esp
  415af9:	(bad)
  415afd:	mov    esp,0x8f4d00e8
  415b02:	add    BYTE PTR [eax+0x2d738f47],al
  415b08:	xor    eax,DWORD PTR [ebp+0x61d81d89]
  415b0e:	inc    edx
  415b0f:	add    BYTE PTR [ebx-0x7f97fe3c],ah
  415b15:	sub    bh,BYTE PTR ds:0xf9b36400
  415b1b:	add    BYTE PTR [esp+ecx*2],cl
  415b1e:	je     0x415b28
	...
  415b34:	mov    ch,0x2b
  415b36:	jo     0x415b5b
  415b38:	icebp  
  415b39:	test   al,0x1
  415b3b:	add    BYTE PTR [eax],bh
  415b3d:	cmp    eax,0xa8b60420
  415b42:	add    eax,ebp
  415b44:	mov    WORD PTR [edx],?
  415b46:	inc    ebx
  415b47:	(bad)  
  415b48:	fidiv  WORD PTR [edx+0x69c88959]
  415b4e:	inc    ebx
  415b4f:	xor    ebp,0xffffffa1
  415b52:	jle    0x415b14
  415b54:	mov    ch,0xa8
  415b56:	add    edi,edi
  415b58:	jmp    0x1e5:0x8343e52d
  415b5f:	jmp    FWORD PTR [edx]
  415b61:	rcr    ecx,0x33
  415b64:	fs out 0x1,eax
  415b67:	call   0x4318ef
  415b6c:	cmp    BYTE PTR [ebx*1+0x1a8b5f8],bh
  415b73:	call   0x434a9c
  415b78:	cmp    eax,0xa90f206c
  415b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b7e:	hlt    
  415b7f:	test   BYTE PTR [ecx-0x58],cl
  415b82:	add    DWORD PTR [eax],eax
  415b84:	sub    BYTE PTR [eax+eiz*1+0x24],ah
  415b88:	in     eax,0xb5
  415b8a:	sub    BYTE PTR [edx-0x23],dl
  415b8d:	cmp    BYTE PTR [ebx],ch
  415b8f:	inc    edx
  415b90:	mov    ch,0x75
  415b92:	jne    0x415b17
  415b94:	xchg   ecx,eax
  415b95:	mov    al,0x2
	...
  415bab:	add    BYTE PTR [ebp+0x1d555c78],dh
  415bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bb2:	add    DWORD PTR [ebp+0x436ea0f5],eax
  415bb8:	shr    DWORD PTR [ecx-0x2e26a3f7],1
  415bbe:	int    0x6b
  415bc0:	lahf   
  415bc1:	(bad)
  415bc5:	imul   eax,ebx,0xffffffb3
  415bc8:	xchg   edx,eax
  415bc9:	jb     0x415b85
  415bcb:	rcr    BYTE PTR [edi+eiz*4-0x4e14b22e],0x74
  415bd3:	mov    edi,0xb0972f96
  415bd8:	dec    esp
  415bd9:	nop
  415bda:	mov    edi,0xe74de8db
  415bdf:	inc    esp
  415be0:	mov    eax,ds:0xc2c3f883
  415be5:	add    al,0x94
  415be7:	pop    ds
  415be8:	xchg   ecx,eax
  415be9:	or     BYTE PTR [edi+ebx*1+0x1f9406cd],ch
  415bf0:	leave  
  415bf1:	and    eax,0x3b760806
  415bf6:	lock lods eax,DWORD PTR ds:[esi]
  415bf8:	fwait
  415bf9:	fwait
  415bfa:	pop    ss
  415bfb:	icebp  
  415bfc:	ror    BYTE PTR [edi+0x2e7f502],cl
  415c02:	sub    al,0xe8
  415c04:	mov    ds:0x7a06515f,al
  415c09:	fwait
  415c0a:	not    DWORD PTR [esi*8+0x1628f]
	...
  415c21:	add    BYTE PTR [eax],al
  415c23:	add    BYTE PTR [ebp-0x62],dh
  415c26:	daa    
  415c27:	add    al,0x9c
  415c29:	push   ebx
  415c2a:	add    ebx,DWORD PTR [ecx+eiz*8]
  415c2d:	mov    DWORD PTR [esi-0x51686948],esi
  415c33:	pop    ebx
  415c34:	dec    ebx
  415c35:	cmp    al,0xcb
  415c37:	jmp    0x415c7c
  415c39:	fnstenv ds:0x14056343
  415c3f:	call   0xe8550d0a
  415c44:	mov    edx,0xb5b417a7
  415c49:	(bad)  
  415c4a:	shr    DWORD PTR [bp+0x8e],0xfc
  415c50:	ret    
  415c51:	mov    al,0x33
  415c53:	pop    ebp
  415c54:	outs   dx,DWORD PTR ds:[esi]
  415c55:	dec    ebp
  415c56:	add    BYTE PTR [ecx+0x58],dl
  415c59:	test   al,0xff
  415c5b:	call   0x4447053f
  415c60:	jbe    0x415c13
  415c62:	mov    ah,BYTE PTR [ebp-0x58a27e2e]
  415c68:	add    eax,DWORD PTR [esi]
  415c6a:	in     al,0x9c
  415c6c:	jo     0x415bf6
  415c6e:	add    BYTE PTR [ebx+eax*2-0x1365b05b],bl
  415c75:	jge    0x415c6d
  415c77:	mov    edi,0x43e8d5c8
  415c7c:	xor    BYTE PTR [ecx-0x7e069203],0x84
  415c83:	cs mov cl,0x8f
  415c86:	add    BYTE PTR [esi+0x0],bl
	...
  415c9c:	dec    esi
  415c9d:	mov    DWORD PTR [eax+0x13b0b6e9],eax
  415ca3:	cmc    
  415ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca5:	dec    edi
  415ca6:	add    BYTE PTR [esp+edi*2-0x4c],bl
  415caa:	push   eax
  415cab:	sbb    ah,dl
  415cad:	mov    cl,0x13
  415caf:	leave  
  415cb0:	mov    al,ds:0xf639004f
  415cb5:	fwait
  415cb6:	pop    eax
  415cb7:	cli    
  415cb8:	jbe    0x415c6a
  415cba:	mov    al,cl
  415cbc:	arpl   WORD PTR [edx+0x53582374],si
  415cc2:	cld    
  415cc3:	aaa    
  415cc4:	addr16 add eax,0xf03d7605
  415cca:	je     0x415cf4
  415ccc:	prefetch BYTE PTR [ecx]
  415ccf:	int3   
  415cd0:	std    
  415cd1:	je     0x415ce0
  415cd3:	pop    esi
  415cd4:	dec    BYTE PTR [ebp+0x3c5c8081]
  415cda:	sub    eax,0x5638f00
  415cdf:	je     0x415cd2
  415ce1:	or     cl,ch
  415ce3:	pop    es
  415ce4:	adc    BYTE PTR [edi+eax*2-0x34f70e8b],al
  415ceb:	add    ah,BYTE PTR [edi-0x54]
  415cee:	add    al,0x10
  415cf1:	out    0x82,al
  415cf3:	cmp    ah,bl
  415cf5:	not    DWORD PTR [esi]
  415cf7:	push   eax
  415cf8:	jnp    0x415c91
  415cfa:	pop    eax
  415cfb:	push   ss
  415cfc:	or     al,0x8c
  415cfe:	push   edi
  415cff:	mov    ds:0x0,eax
	...
  415d14:	add    BYTE PTR [edi],ch
  415d16:	inc    edx
  415d17:	add    BYTE PTR [edi-0x7c],dh
  415d1a:	or     ebx,0x830260ec
  415d20:	xchg   DWORD PTR [esi+eax*2+0x7970213b],eax
  415d27:	mov    dl,0x73
  415d29:	push   edx
  415d2a:	adc    al,0x20
  415d2c:	scas   eax,DWORD PTR es:[edi]
  415d2d:	sar    ebp,cl
  415d2f:	pop    esi
  415d30:	mov    ds:0x6f73ff55,al
  415d35:	jnp    0x415cec
  415d37:	pop    edx
  415d38:	popf   
  415d39:	xchg   ebx,eax
  415d3a:	call   0xd5ae0c
  415d3f:	not    BYTE PTR [ecx-0x73bc2c5d]
  415d45:	xchg   edi,eax
  415d46:	mov    bl,al
  415d48:	adc    BYTE PTR [eax-0x3bbff99],ah
  415d4e:	fiadd  WORD PTR [ebx+0x4c]
  415d51:	jnp    0x415d67
  415d53:	pop    ecx
  415d54:	dec    ebp
  415d55:	xchg   ebx,eax
  415d56:	jmp    0xc0963479
  415d5b:	call   0x250ec6b0
  415d60:	dec    ebp
  415d61:	xor    BYTE PTR [esi+0x27d0dc0],0x50
  415d68:	mov    ch,0x38
  415d6a:	and    eax,DWORD PTR [eax]
  415d6c:	mov    edx,0xd4f4346
  415d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d72:	cmp    eax,0x5c231afe
  415d77:	add    DWORD PTR [eax],0x0
	...
  415d8a:	add    BYTE PTR [eax],al
  415d8c:	out    dx,al
  415d8d:	lods   al,BYTE PTR ds:[esi]
  415d8e:	push   ss
  415d8f:	div    BYTE PTR [eax-0x4abda818]
  415d95:	mov    edx,0x4d8f0bb5
  415d9a:	aas    
  415d9b:	adc    al,0xb9
  415d9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d9e:	sar    edi,0x88
  415da1:	loope  0x415ded
  415da3:	ret    0x78a6
  415da6:	mov    dl,bl
  415da8:	stos   BYTE PTR es:[edi],al
  415da9:	inc    esp
  415daa:	inc    esp
  415dab:	dec    edi
  415dac:	ror    bl,cl
  415dae:	cmp    DWORD PTR [edi],ecx
  415db0:	jne    0x415d6a
  415db2:	dec    ebp
  415db3:	push   esp
  415db4:	test   DWORD PTR cs:[ecx+0x1ba75eb],eax
  415dbb:	add    BYTE PTR [ebx],cl
  415dbd:	out    dx,al
  415dbe:	test   eax,0x1b8b5d9
  415dc3:	push   0xffffffb5
  415dc5:	push   ebp
  415dc6:	sbb    al,0xdd
  415dc8:	idiv   BYTE PTR [eax+0x8a8fed8]
  415dce:	sbb    BYTE PTR [eax-0x4b],al
  415dd1:	cmp    DWORD PTR [eax+0xb],ecx
  415dd4:	btc    DWORD PTR [ecx+0x479588d],ebp
  415ddb:	push   0x112c97ac
  415de0:	pop    ebp
  415de1:	add    DWORD PTR [esi],esi
  415de3:	(bad)  
  415de4:	bound  esp,QWORD PTR [ebx]
  415de6:	jbe    0x415da9
  415de8:	pop    eax
  415de9:	in     eax,dx
  415dea:	inc    eax
  415deb:	out    0x6d,eax
  415ded:	add    DWORD PTR [bx+si],eax
	...
  415e04:	mov    al,0xa
  415e06:	add    eax,DWORD PTR [eax]
  415e08:	mov    ch,0x8f
  415e0a:	adc    DWORD PTR [eax],ebx
  415e0c:	in     eax,0x39
  415e0e:	out    0x8e,eax
  415e10:	test   eax,0x2b4b6adf
  415e15:	mov    bh,0x8d
  415e17:	push   eax
  415e18:	and    ebp,DWORD PTR [esi+0x7298436c]
  415e1e:	ins    BYTE PTR es:[edi],dx
  415e1f:	mov    dh,0xea
  415e21:	out    0x3e,al
  415e23:	add    esi,DWORD PTR [ebp-0xd908071]
  415e29:	mov    fs,edi
  415e2b:	mov    ?,WORD PTR [ecx-0x21]
  415e2e:	mov    bh,0x8c
  415e30:	clc    
  415e31:	ds mov esi,0x4ed1122b
  415e37:	inc    eax
  415e38:	cmp    edi,ecx
  415e3a:	not    BYTE PTR [esi-0x49d7ece6]
  415e40:	mov    edx,0x17a92762
  415e45:	xchg   DWORD PTR [esp+eax*8],ecx
  415e48:	ret    0x604c
  415e4b:	xor    DWORD PTR [ebp+0x398ee78f],esi
  415e51:	rcl    BYTE PTR [eax+eax*2],cl
  415e54:	stos   DWORD PTR es:[edi],eax
  415e55:	dec    esi
  415e56:	and    eax,0xb04fb503
  415e5b:	mov    dh,0x9d
  415e5d:	loopne 0x415e47
  415e5f:	dec    edx
  415e60:	ja     0x415e7b
  415e62:	out    dx,al
  415e63:	xchg   BYTE PTR [edx+0x24],cl
  415e66:	loopne 0x415e3b
	...
  415e7c:	call   0x610:0xb505560f
  415e83:	add    al,0x76
  415e85:	adc    BYTE PTR ds:0xe7518824,dl
  415e8b:	add    ecx,DWORD PTR [ebx]
  415e8d:	and    edi,edx
  415e8f:	jge    0x415eeb
  415e91:	into   
  415e92:	sub    al,BYTE PTR [ebx+ebp*8]
  415e95:	lods   al,BYTE PTR ds:[esi]
  415e96:	add    ah,bl
  415e98:	sar    BYTE PTR [esi+0x40],cl
  415e9b:	jmp    0xc821cad6
  415ea0:	jbe    0x415e4f
  415ea2:	std    
  415ea3:	adc    al,0xca
  415ea5:	mov    bh,0x31
  415ea7:	xchg   esi,eax
  415ea8:	jmp    0x819b:0x5da984ad
  415eaf:	int3   
  415eb0:	ror    dl,cl
  415eb2:	inc    ecx
  415eb3:	jmp    0x8945346e
  415eb8:	imul   edx,DWORD PTR [ecx+0x0],0xffffffe8
  415ebc:	call   0xa7d6726e
  415ec1:	dec    edi
  415ec2:	add    cl,dl
  415ec4:	inc    eax
  415ec5:	int3   
  415ec6:	inc    ecx
  415ec7:	jmp    0xc1a70be8
  415ecc:	mov    BYTE PTR [ecx+0x0],dl
  415ecf:	inc    esi
  415ed0:	mov    esp,0xb6a91007
  415ed5:	sbb    cl,dh
  415ed7:	ins    BYTE PTR es:[edi],dx
  415ed8:	and    DWORD PTR [eax],0x19
  415edb:	ret    
  415edc:	add    DWORD PTR [edx-0x3],0xfffffffc
	...
  415ef4:	data16 jle 0x415f37
  415ef7:	jmp    0xf6b64b39
  415efc:	mov    ch,0xf
  415efe:	add    ecx,ebp
  415f00:	mov    dh,0x23
  415f02:	sbb    BYTE PTR [edi-0x243f7c25],bl
  415f08:	jbe    0x415eb6
  415f0a:	xor    ch,BYTE PTR [ecx]
  415f0c:	imul   edx,DWORD PTR [ebx],0xffffffc1
  415f0f:	jne    0x415ec1
  415f11:	sbb    BYTE PTR [ebp+0xd],cl
  415f14:	lods   eax,DWORD PTR ds:[esi]
  415f15:	push   ss
  415f16:	add    BYTE PTR [ecx+0x6206b8b9],bl
  415f1c:	lock mov ecx,0xcef91beb
  415f22:	add    al,0x0
  415f24:	dec    esp
  415f25:	(bad)  
  415f26:	mov    ch,ah
  415f28:	fistp  QWORD PTR [ebp+ecx*1-0x80]
  415f2c:	inc    ecx
  415f2d:	jo     0x415f0a
  415f2f:	inc    ebx
  415f30:	dec    esp
  415f31:	nop
  415f32:	push   esi
  415f33:	push   edi
  415f34:	cdq    
  415f35:	mov    al,ds:0xd17300bb
  415f3a:	std    
  415f3b:	push   ebp
  415f3c:	inc    ebx
  415f3d:	xchg   DWORD PTR [edx+edx*1+0x3d8093cc],esp
  415f44:	sub    al,0x4a
  415f46:	inc    edx
  415f47:	add    BYTE PTR [edi+eiz*8],bl
  415f4a:	push   ss
  415f4b:	call   0x3fc9ce
  415f50:	cwde   
  415f51:	push   eax
  415f52:	jno    0x415f62
  415f54:	(bad)  
  415f55:	mov    bh,0xe1
  415f57:	fiadd  WORD PTR [eax]
	...
  415f69:	add    BYTE PTR [eax],al
  415f6b:	add    BYTE PTR [edi],bl
  415f6d:	nop
  415f6e:	add    dh,al
  415f70:	fldcw  WORD PTR [edi-0x25]
  415f73:	inc    ebx
  415f74:	int3   
  415f75:	xchg   edx,eax
  415f76:	push   esi
  415f77:	(bad)  
  415f78:	stc    
  415f79:	cmp    ecx,DWORD PTR [edi]
  415f7b:	inc    eax
  415f7c:	fdivr  st(5),st
  415f7e:	call   DWORD PTR [edi+0x51]
  415f81:	out    0xed,eax
  415f83:	call   0x418bd3
  415f88:	inc    edi
  415f89:	xlat   BYTE PTR ds:[ebx]
  415f8a:	add    eax,0x8f2c05
  415f8f:	add    BYTE PTR [ecx+edx*4],dh
  415f92:	(bad)  
  415f93:	dec    DWORD PTR [edi+edi*4-0x763b3976]
  415f9a:	mov    ebx,0x1f99c01
  415f9f:	lea    ebx,[ecx-0x65]
  415fa2:	push   eax
  415fa3:	mov    ebx,edx
  415fa5:	jbe    0x415fb6
  415fa7:	mov    ebp,0x7d8b8f8d
  415fac:	nop
  415fad:	sbb    esp,eax
  415faf:	call   0xbf6e69
  415fb4:	mov    ch,0x4e
  415fb6:	sbb    bh,bh
  415fb8:	loopne 0x415f82
  415fba:	cmp    al,0x74
  415fbc:	push   ecx
  415fbd:	jmp    0x8304:0x78a35c15
  415fc4:	jns    0x415f93
  415fc6:	mov    ch,al
  415fc8:	dec    ebp
  415fc9:	cli    
  415fca:	add    BYTE PTR [eax],0xb5
  415fcd:	imul   ebx,esi,0xc8
	...
  415fe3:	add    bh,dh
  415fe5:	mov    ah,0x1
  415fe7:	push   ebp
  415fe8:	cs sub eax,0xbc71eb81
  415fee:	add    DWORD PTR [eax],eax
  415ff0:	xor    eax,0x76d961ec
  415ff5:	mov    eax,0x816b5302
  415ffa:	xchg   edi,edx
  415ffc:	cmp    BYTE PTR [ecx-0x5c234011],0x2
  416003:	add    BYTE PTR [ebp-0x1f308acd],dh
  416009:	pop    ecx
  41600a:	cmp    esp,edi
  41600c:	xchg   ebp,eax
  41600d:	call   0xf4816014
  416012:	inc    ebp
  416013:	dec    edi
  416014:	retf   0x9eb
  416017:	mov    edi,ebx
  416019:	or     BYTE PTR [edx],ch
  41601b:	cs mov edx,0x8e843b71
  416021:	add    ebp,edi
  416023:	mov    eax,?
  416025:	jl     0x415ffb
  416027:	addr16 mov ebp,0x12ffbf7b
  41602d:	mov    eax,0xa9350001
  416032:	push   ss
  416033:	ins    BYTE PTR es:[edi],dx
  416034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416035:	clc    
  416036:	add    edi,esi
  416038:	pop    ebp
  416039:	mov    esi,0x8f75fd41
  41603e:	mov    eax,ds:0xe78fb52d
  416043:	mov    BYTE PTR [eax-0x2f],bh
  416046:	call   0x41604e
	...
  41605b:	add    ah,dh
  41605d:	push   ebp
  41605e:	push   esp
  41605f:	cmp    ecx,DWORD PTR [ebp-0x2b]
  416062:	out    0x3,eax
  416064:	mov    ch,0xe
  416066:	test   DWORD PTR [ebx+0x4e],ecx
  416069:	stos   BYTE PTR es:[edi],al
  41606a:	mov    dh,0x3
  41606c:	xor    BYTE PTR [eax+ecx*2],dl
  41606f:	cmp    ebp,DWORD PTR ds:[edx-0x28c670c9]
  416076:	fwait
  416077:	cmp    al,0x2b
  416079:	mov    bh,0x53
  41607b:	cmc    
  41607c:	mov    ch,0x8f
  41607e:	bound  esi,QWORD PTR [esi-0x7164e952]
  416084:	cmp    edi,edx
  416086:	jnp    0x4160c4
  416088:	or     esi,DWORD PTR [edi-0x704a0a8f]
  41608e:	push   0xe7d1fa38
  416093:	add    ebp,DWORD PTR [ebx-0x6c]
  416096:	rol    DWORD PTR [eax],1
  416098:	mov    dh,BYTE PTR [esi+0xdedf0b4]
  41609e:	push   ebx
  41609f:	pop    es
  4160a0:	stos   BYTE PTR es:[edi],al
  4160a1:	add    al,0x29
  4160a3:	test   eax,0x457249b4
  4160a8:	pop    esp
  4160a9:	pop    DWORD PTR [edx]
  4160ab:	inc    ebx
  4160ac:	fcmovb st,st(6)
  4160ae:	and    edi,DWORD PTR [ebx+edi*4]
  4160b1:	cdq    
  4160b2:	pop    ebp
  4160b3:	jnp    0x41611f
  4160b5:	and    ah,BYTE PTR [edi-0x1756c9fd]
  4160bb:	mov    dh,0xea
  4160bd:	sbb    ah,BYTE PTR [ebp+0xb]
	...
  4160d3:	add    BYTE PTR ds:0x8f436d1b,al
  4160d9:	test   eax,0xcd3fd2fe
  4160de:	add    BYTE PTR [edx+0x63],ah
  4160e1:	xchg   ebp,eax
  4160e2:	xchg   DWORD PTR [esi+esi*8],esi
  4160e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160e6:	std    
  4160e7:	out    0xa1,al
  4160e9:	push   eax
  4160ea:	xor    eax,0xf114b6e8
  4160ef:	ins    BYTE PTR es:[edi],dx
  4160f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160f1:	and    ebx,DWORD PTR [ebx]
  4160f3:	nop
  4160f4:	(bad)  
  4160f5:	pop    DWORD PTR [eax]
  4160f7:	jmp    0xbd127539
  4160fc:	mov    gs,WORD PTR [ecx+0x4fb6e9c6]
  416102:	inc    edi
  416103:	xor    al,0x78
  416105:	mov    bh,0x1e
  416107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416108:	out    dx,al
  416109:	test   eax,0x16bd1489
  41610e:	pop    esp
  41610f:	loope  0x4160f0
  416111:	and    ecx,DWORD PTR [eax]
  416113:	pop    esp
  416114:	hlt    
  416115:	int3   
  416116:	push   esi
  416117:	push   ds
  416118:	jmp    0xf2dd794d
  41611d:	test   al,0xe5
  41611f:	arpl   WORD PTR [ebp-0x71],bp
  416122:	add    BYTE PTR [ebx+0x59],ah
  416125:	gs jae 0x41611d
  416128:	and    dl,BYTE PTR [ebx-0x4947aeaa]
  41612e:	std    
  41612f:	push   esi
  416130:	pusha  
  416131:	mov    edx,0x1ab6e8ff
  416136:	test   BYTE PTR [ecx],bl
	...
  41614c:	mov    WORD PTR [ecx-0x704ed803],gs
  416152:	inc    eax
  416153:	mov    al,ds:0x2a8aa805
  416158:	fimul  WORD PTR [edx+0x59]
  41615b:	xor    bl,bh
  41615d:	nop
  41615e:	add    BYTE PTR [ebx+edi*1-0x1ef27e4c],dh
  416165:	paddsw mm3,QWORD PTR [ebp+0xfda89a]
  41616c:	das    
  41616d:	mov    esi,0xafc08d56
  416172:	pop    ebp
  416173:	add    DWORD PTR [esp+ecx*4-0x6c050b18],ecx
  41617a:	add    BYTE PTR [ebp+0x5019afa0],cl
  416180:	mov    ebx,edi
  416182:	add    eax,0xe5bc128b
  416187:	add    ch,BYTE PTR [edx+0x65]
  41618a:	dec    BYTE PTR [ebp+0x510daf88]
  416190:	out    0x92,al
  416192:	xor    ebx,ebx
  416194:	lahf   
  416195:	sub    eax,DWORD PTR [eax]
  416197:	add    BYTE PTR [esp+ecx*1+0x66],cl
  41619b:	sbb    cl,bh
  41619d:	sar    ch,1
  41619f:	dec    edi
  4161a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161a1:	call   0xc0d685c7
  4161a6:	and    DWORD PTR [eax],esp
  4161a8:	sub    edi,DWORD PTR [edi+0x5c]
  4161ab:	adc    ah,bl
  4161ad:	xchg   ebx,eax
  4161ae:	add    eax,0x0
	...
  4161c1:	add    BYTE PTR [eax],al
  4161c3:	add    BYTE PTR [ecx],al
  4161c5:	mov    cl,BYTE PTR [ebx+0x508ff044]
  4161cb:	(bad)  
  4161cc:	shr    BYTE PTR [edi-0x1796afe7],1
  4161d2:	and    DWORD PTR [esp+ebp*1],esp
  4161d5:	pop    ss
  4161d6:	jp     0x4161fc
  4161d8:	call   0xce0dab50
  4161dd:	mov    ebp,ecx
  4161df:	add    ebx,DWORD PTR [edi+0x54]
  4161e2:	dec    BYTE PTR [ecx-0x7cee37f0]
  4161e8:	test   BYTE PTR [ebp+0xe],ah
  4161eb:	test   BYTE PTR [ecx-0x74],bl
  4161ee:	add    BYTE PTR [eax],al
  4161f0:	xchg   edi,eax
  4161f1:	dec    esi
  4161f2:	push   cs
  4161f3:	test   BYTE PTR [ecx],dl
  4161f5:	xchg   ebx,eax
  4161f6:	add    BYTE PTR [eax],al
  4161f8:	mov    ch,0x39
  4161fa:	mov    ch,0x23
  4161fc:	mov    ebp,0xe530b0b7
  416201:	lea    ebp,[ebp-0x2acc5add]
  416207:	and    esp,DWORD PTR [ecx-0x22dc92d5]
  41620d:	mov    ecx,0x357a0001
  416212:	loopne 0x41626b
  416214:	mov    dh,0xb8
  416216:	add    DWORD PTR [edx],eax
  416218:	mov    ch,0xb8
  41621a:	add    eax,ebp
  41621c:	repz jge 0x416220
  41621f:	add    BYTE PTR [edx+0x65],dl
  416222:	loopne 0x41622f
  416224:	ds jmp 0x419956
	...
  41623a:	add    BYTE PTR [eax],al
  41623c:	dec    ebp
  41623d:	fidiv  WORD PTR [edi]
  41623f:	mov    cl,al
  416241:	mov    WORD PTR [eax],cs
  416243:	xor    ecx,DWORD PTR [esi]
  416245:	sbb    al,0x80
  416247:	and    esp,DWORD PTR ds:0x850001b8
  41624d:	sub    eax,eax
  41624f:	and    edi,DWORD PTR [ecx+0x2f]
  416252:	fsub   DWORD PTR [ebx]
  416254:	jno    0x416256
  416256:	hlt    
  416257:	xor    al,0xb4
  416259:	mov    eax,0xc4d9738c
  41625e:	cld    
  41625f:	repnz add ebp,0x9c994b8c
  416266:	mov    ebp,ss
  416268:	cmp    ch,ch
  41626a:	fst    QWORD PTR [edi-0x33]
  41626d:	(bad)  
  41626f:	add    BYTE PTR [ebp-0x71f442cf],dh
  416275:	jns    0x416227
  416277:	add    DWORD PTR [ecx+ebp*4],edi
  41627a:	jp     0x416269
  41627c:	mov    ah,0xb8
  41627e:	add    DWORD PTR [ebp+0xa48d31],ecx
  416284:	mov    ch,0x8f
  416286:	out    0x8b,eax
  416288:	ret    0xb04f
  41628b:	scas   al,BYTE PTR es:[edi]
  41628c:	pushf  
  41628d:	sbb    ch,BYTE PTR [edi+ebx*8+0x7af3baae]
  416294:	mov    al,ds:0x3803e790
  416299:	or     eax,esp
  41629b:	mov    ds:0x8be78fb5,eax
	...
  4162b4:	mov    ds:0x6caea04f,al
  4162b9:	bound  esp,QWORD PTR [edi+0x724b08d8]
  4162bf:	push   ds
  4162c0:	add    edx,edx
  4162c2:	fild   WORD PTR [ebx]
  4162c4:	add    BYTE PTR [ebx],bl
  4162c6:	mov    esp,0x2d14e8d2
  4162cb:	cmp    dl,bh
  4162cd:	cmp    eax,ebp
  4162cf:	sub    ebp,DWORD PTR [ebp+eiz*4-0x4a]
  4162d3:	cmp    BYTE PTR [ecx],dh
  4162d5:	iret   
  4162d6:	xor    edx,DWORD PTR [esi]
  4162d8:	ss and al,0xa3
  4162db:	jmp    DWORD PTR [ecx+0x72f37293]
  4162e1:	mov    bh,0x4d
  4162e3:	and    BYTE PTR [ebx],bl
  4162e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162e6:	bound  eax,QWORD PTR [ecx+0x1f]
  4162e9:	xchg   edi,eax
  4162ea:	pop    ss
  4162eb:	sub    al,0x2e
  4162ed:	scas   al,BYTE PTR es:[edi]
  4162ee:	jle    0x416328
  4162f0:	(bad)  
  4162f1:	iret   
  4162f2:	adc    eax,0x623bf74b
  4162f7:	daa    
  4162f8:	test   DWORD PTR ds:0xa37186be,edi
  4162fe:	mov    bh,0xad
  416300:	mov    ah,0xb7
  416302:	outs   dx,DWORD PTR ds:[esi]
  416303:	cmp    ebx,ebx
  416305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416306:	bound  esi,QWORD PTR [ebx]
  416308:	cmp    DWORD PTR [ebp+0x4c3e18bb],ebx
  41630e:	cmp    ebp,DWORD PTR [ebx-0x4b]
  416311:	sbb    al,0x0
  416313:	shr    DWORD PTR [ecx],1
  416315:	push   ebx
  416316:	or     BYTE PTR [edi+0x0],dl
	...
  41632c:	pusha  
  41632d:	jl     0x4162fe
  41632f:	adc    DWORD PTR [ebp-0x497da753],ecx
  416335:	(bad)  
  416336:	push   esi
  416337:	add    DWORD PTR [ebx],edi
  416339:	scas   al,BYTE PTR es:[edi]
  41633a:	std    
  41633b:	push   cs
  41633c:	push   es
  41633d:	nop
  41633e:	jmp    0x59eec834
  416343:	push   es
  416344:	mov    ebp,0x5d2932a5
  416349:	inc    ebx
  41634a:	(bad)  
  41634b:	sub    esi,DWORD PTR [edx-0x5b]
  41634e:	push   esp
  41634f:	jb     0x4162ee
  416351:	adc    ebp,esp
  416353:	loope  0x41638d
  416355:	mov    ecx,0x8fb6ec7c
  41635a:	push   ebp
  41635b:	into   
  41635c:	add    al,0x8d
  41635e:	call   0xfde6e5f1
  416363:	gs stc 
  416365:	sbb    esi,DWORD PTR [eax]
  416367:	fs std 
  416369:	jo     0x416373
  41636b:	sar    eax,0xa1
  41636e:	std    
  41636f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416370:	ds push esp
  416372:	or     BYTE PTR [ebp+esi*8+0x70],ch
  416376:	xor    BYTE PTR [ecx],bh
  416378:	dec    edi
  416379:	jl     0x4163d8
  41637b:	(bad)
  416380:	mov    cl,0x8f
  416382:	push   0x8fb401
  416387:	fs cmc 
  416389:	jo     0x416397
  41638b:	add    edi,DWORD PTR [ecx+0xfcfd3f]
	...
  4163a1:	add    BYTE PTR [eax],al
  4163a3:	add    BYTE PTR [esi],al
  4163a5:	jnp    0x4163e7
  4163a7:	jmp    0xb64e34e3
  4163ac:	das    
  4163ad:	lods   al,BYTE PTR ds:[esi]
  4163ae:	pop    ebx
  4163af:	sub    esi,DWORD PTR [ebp+0x4700538f]
  4163b5:	ja     0x416407
  4163b7:	push   ecx
  4163b8:	sub    dh,bh
  4163ba:	or     edi,edi
  4163bc:	stc    
  4163bd:	cwde   
  4163be:	call   0xfe9e5fab
  4163c3:	lea    ebx,[ecx+0x5c]
  4163c6:	dec    ebp
  4163c7:	push   0x39
  4163c9:	js     0x4163c2
  4163cb:	std    
  4163cc:	ret    
  4163cd:	pop    esp
  4163ce:	mov    dh,al
  4163d0:	sbb    DWORD PTR [esi+0x74],esi
  4163d3:	add    al,0x4e
  4163d5:	push   eax
  4163d6:	jmp    0x8483:0xf9cf0721
  4163dd:	mov    WORD PTR [esi+0x3],?
  4163e0:	mov    WORD PTR ss:[eax+0x50],ds
  4163e4:	stos   BYTE PTR es:[edi],al
  4163e5:	pop    esp
  4163e6:	je     0x4163f0
  4163e8:	cmp    DWORD PTR [edi+0x4c],0x16
  4163ec:	mov    WORD PTR [ebx-0x2d8f3b7f],cs
  4163f2:	in     eax,0xbf
  4163f4:	jp     0x416453
  4163f6:	(bad)  
  4163f7:	mov    al,0x4d
  4163f9:	mov    edx,0x9048c2c8
  4163fe:	push   ebx
  4163ff:	mov    esi,DWORD PTR [eax-0x45]
  416402:	push   eax
  416403:	push   esi
  416404:	jmp    0x41641c
  416406:	inc    ebp
  416407:	cld    
	...
  41641c:	fdivr  st(3),st
  41641e:	lds    eax,FWORD PTR [eax]
  416420:	or     al,0x90
  416422:	call   0xfe9ea5dc
  416427:	mov    ecx,DWORD PTR [edi+ecx*1+0x18e074f4]
  41642e:	inc    ebp
  41642f:	cld    
  416430:	mov    dh,0x8a
  416432:	push   0x0
  416434:	push   edi
  416435:	dec    edx
  416436:	in     eax,0x2f
  416438:	jecxz  0x4163c7
  41643a:	add    BYTE PTR [ebx+0x75ff0f54],cl
  416440:	mov    ch,0xb4
  416442:	retf   
  416443:	out    0x36,eax
  416445:	dec    esp
  416446:	ss (bad) 
  416448:	ds jne 0x416421
  41644b:	pop    ebp
  41644c:	in     al,dx
  41644d:	js     0x41641f
  41644f:	mov    cl,cl
  416451:	cmp    BYTE PTR [eax-0x4efa4af9],bh
  416457:	nop    DWORD PTR [ecx-0x474a3857]
  41645e:	add    DWORD PTR [ebx],esi
  416460:	jne    0x4163f3
  416462:	clc    
  416463:	sti    
  416464:	xchg   edx,eax
  416465:	xchg   edx,eax
  416466:	sub    dh,BYTE PTR [eax]
  416468:	cmp    ah,dh
  41646a:	or     DWORD PTR [eax+0xf],edx
  41646d:	mov    ecx,0x247a00a7
  416472:	or     eax,ebp
  416474:	xor    ebp,eax
  416476:	(bad)  
  416477:	push   DWORD PTR [eax]
  416479:	stc    
  41647a:	lods   eax,DWORD PTR ds:[esi]
  41647b:	add    esp,DWORD PTR [edi+0x1827f8]
	...
  416491:	add    BYTE PTR [eax],al
  416493:	add    BYTE PTR [edx+0x44],bl
  416496:	or     al,0x68
  416498:	jge    0x416453
  41649a:	add    DWORD PTR [eax],eax
  41649c:	pop    ebp
  41649d:	ret    
  41649e:	xor    eax,0xade242fe
  4164a3:	pop    es
  4164a4:	das    
  4164a5:	add    DWORD PTR ds:0x33f21b33,ebp
  4164ab:	mov    esi,esi
  4164ad:	dec    ebp
  4164ae:	aad    0xc1
  4164b0:	mov    ecx,0x98aceb8
  4164b5:	push   0x8ed969ce
  4164ba:	add    al,0xff
  4164bc:	and    BYTE PTR [eax-0x459aebcc],0xc1
  4164c3:	push   DWORD PTR [edi]
  4164c5:	cmc    
  4164c6:	or     BYTE PTR [ebp+0x69d43478],cl
  4164cc:	push   ebx
  4164cd:	(bad)  
  4164ce:	dec    edi
  4164cf:	adc    eax,0x895ea2e0
  4164d4:	retf   0x5e0c
  4164d7:	scas   eax,DWORD PTR es:[edi]
  4164d8:	mov    dh,0x5d
  4164da:	daa    
  4164db:	sub    DWORD PTR [ebp+0x3737ad16],edx
  4164e1:	test   al,0x3
  4164e3:	scas   al,BYTE PTR es:[edi]
  4164e4:	mov    bh,0x35
  4164e6:	or     ebx,esp
  4164e8:	add    bh,BYTE PTR [edx]
  4164ea:	cs scas eax,DWORD PTR es:[edi]
  4164ec:	mov    dl,0xa2
  4164ee:	cld    
  4164ef:	(bad)  
  4164f0:	enter  0xe74f,0x80
  4164f4:	jbe    0x416489
  4164f6:	mov    ebp,0x2b
	...
  41650b:	add    BYTE PTR [esi+0x5a350eac],dl
  416511:	nop
  416512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416513:	dec    edx
  416514:	je     0x4164a1
  416516:	out    0xce,eax
  416518:	das    
  416519:	mov    bl,0x6a
  41651b:	sub    BYTE PTR [esi-0x4af492f2],dl
  416521:	sbb    eax,DWORD PTR [edx+ebp*4]
  416524:	xchg   esi,eax
  416525:	mov    ds:0x4c280c54,al
  41652a:	mov    bl,0xd3
  41652c:	push   ebx
  41652d:	jl     0x41654a
  41652f:	push   cs
  416530:	cmc    
  416531:	(bad)
  416535:	adc    al,0x25
  416537:	pop    eax
  416538:	jmp    0xc247:0xd6aa4d35
  41653f:	std    
  416540:	pushf  
  416541:	(bad)  
  416542:	adc    DWORD PTR [esi-0x7d703019],ebx
  416548:	pop    ds
  416549:	mov    ds:0x8af44a96,al
  41654e:	out    0x80,eax
  416550:	adc    cl,BYTE PTR [edi+0x1b6d09fb]
  416556:	jmp    0xe403:0xce3af0
  41655d:	cmp    ecx,eax
  41655f:	add    esp,edi
  416561:	cmp    ecx,eax
  416563:	mov    esp,0x4d81b62d
  416568:	ret    0x4416
  41656b:	in     eax,0xe5
  41656d:	pop    esp
  41656e:	fnstenv [edi+0x0]
	...
  416584:	stc    
  416585:	push   ss
  416586:	pop    esp
  416587:	inc    ebp
  416588:	mov    esi,0x3d650d79
  41658d:	mov    ds:0x4c3be9fd,al
  416592:	cld    
  416593:	cdq    
  416594:	fisubr WORD PTR [ebx-0x6]
  416597:	es jmp 0x1b3026a9
  41659d:	test   DWORD PTR [eax],0x4414b6e9
  4165a3:	loope  0x416583
  4165a5:	in     eax,0xfd
  4165a7:	push   es
  4165a8:	leave  
  4165a9:	adc    ecx,DWORD PTR [ecx+esi*8+0x67]
  4165ad:	push   ecx
  4165ae:	xchg   DWORD PTR [esi+ebp*4-0x59129c58],ebp
  4165b5:	mov    eax,ds:0x16616489
  4165ba:	icebp  
  4165bb:	ss fcmovbe st,st(2)
  4165be:	call   0xd12024
  4165c3:	gs icebp 
  4165c5:	sbb    ecx,DWORD PTR [edx]
  4165c7:	pop    ds
  4165c8:	mov    eax,ds:0x86bee364
  4165cd:	pop    ebp
  4165ce:	idiv   dl
  4165d0:	out    0x5d,eax
  4165d2:	shl    BYTE PTR [ecx+0x4],0xa9
  4165d6:	xchg   DWORD PTR [edx*8-0x67668be9],esp
  4165dd:	inc    ebx
  4165de:	hlt    
  4165df:	ror    bl,cl
  4165e1:	sbb    al,0xf
  4165e3:	shl    DWORD PTR [edx+ebx*1+0x6],1
	...
  4165fa:	add    BYTE PTR [eax],al
  4165fc:	int3   
  4165fd:	mov    bl,0x5b
  4165ff:	add    DWORD PTR [eax],eax
  416601:	mov    al,BYTE PTR [esi-0x15]
  416604:	outs   dx,DWORD PTR ds:[esi]
  416605:	mov    al,0xc2
  416607:	jg     0x4165a6
  416609:	pop    esp
  41660a:	je     0x416618
  41660c:	imul   ebx,esi,0x88dee8e5
  416612:	add    BYTE PTR [eax],al
  416614:	pusha  
  416615:	dec    ebx
  416616:	jno    0x416658
  416618:	jnp    0x416600
  41661a:	in     eax,dx
  41661b:	mov    edx,DWORD PTR [ecx]
  41661d:	cmp    esi,0xcd837475
  416623:	cli    
  416624:	jmp    0x416682
  416626:	xchg   eax,ebx
  416628:	or     edi,esp
  41662a:	in     eax,0xe8
  41662c:	mov    al,ds:0x9000089
  416631:	out    0xf9,eax
  416633:	call   0x3fd94f
  416638:	push   ss
  416639:	dec    ecx
  41663a:	jmp    0x7b50:0x9e6bb2e
  416641:	xchg   DWORD PTR [ebx+edx*1],ecx
  416644:	sbb    al,0x8c
  416646:	add    eax,0xffffffe0
  416649:	mov    WORD PTR ds:[ebp-0x7c],es
  41664d:	test   BYTE PTR [ebx+0x398c4c03],dl
  416653:	ret    
  416654:	icebp  
  416655:	jne    0x416641
  416657:	mov    cl,0xe9
  416659:	out    0xe5,eax
  41665b:	call   0x41f0d0
	...
  416674:	leave  
  416675:	out    0xf9,eax
  416677:	call   0x3fd943
  41667c:	cs dec esp
  41667e:	pop    esi
  41667f:	pop    esi
  416680:	ja     0x4166e4
  416682:	mov    edi,0x8ac70c08
  416687:	in     al,dx
  416688:	mov    ch,0x67
  41668a:	rcl    DWORD PTR [edx+0x63],cl
  41668d:	pop    ecx
  41668e:	jg     0x4166d4
  416690:	std    
  416691:	test   DWORD PTR [esi+edx*4-0x17fe494b],ebx
  416698:	sbb    al,0x1d
  41669a:	xor    bh,dh
  41669c:	ds es inc edi
  41669f:	inc    esp
  4166a0:	loop   0x416657
  4166a2:	mov    ch,dh
  4166a4:	popa   
  4166a5:	cmp    BYTE PTR [ebp+0x4c],0xcd
  4166a9:	retf   
  4166aa:	or     DWORD PTR [ebx],esi
  4166ac:	out    0x2c,eax
  4166ae:	inc    esp
  4166af:	pop    esi
  4166b0:	retf   0x8860
  4166b3:	rol    DWORD PTR [eax-0x6e],1
  4166b6:	jg     0x4166d3
  4166b8:	in     al,0x31
  4166ba:	das    
  4166bb:	cmp    ah,BYTE PTR [esi-0x36961926]
  4166c1:	jne    0x41667b
  4166c3:	pop    es
  4166c4:	sub    dh,dh
  4166c6:	add    eax,0xd59c9250
  4166cb:	adc    eax,0xc386a8f5
  4166d0:	mov    cl,0x2b
  4166d2:	inc    ecx
  4166d3:	jae    0x416681
  4166d5:	sub    DWORD PTR [edx+0x17],ecx
	...
  4166ec:	scas   al,BYTE PTR es:[edi]
  4166ed:	mov    eax,ds:0xb55ee2b4
  4166f2:	inc    edi
  4166f3:	inc    esp
  4166f4:	bound  ebp,QWORD PTR [eax-0x2b111829]
  4166fa:	das    
  4166fb:	(bad)  
  4166fc:	aas    
  4166fd:	ins    BYTE PTR es:[edi],dx
  4166fe:	das    
  4166ff:	pop    esi
  416700:	jmp    0x416763
  416702:	cmp    ecx,eax
  416704:	mov    ecx,0x498ad6a8
  416709:	sub    ch,BYTE PTR [ebp-0x25864af9]
  41670f:	jae    0x4166f1
  416711:	sub    DWORD PTR [ebp+0x1d8fb50b],ebp
  416717:	loope  0x416734
  416719:	and    eax,0x878930eb
  41671e:	jg     0x4166b5
  416720:	push   ss
  416721:	lahf   
  416722:	mov    ?,WORD PTR [ebp+0x12]
  416725:	adc    eax,0x61b6b77e
  41672a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41672b:	sbb    eax,0x2d0a9a
  416730:	and    DWORD PTR [edi],0x4f
  416733:	add    al,0xb5
  416735:	(bad)  
  416736:	dec    edi
  416737:	daa    
  416738:	fstp   QWORD PTR [esi-0x47c325a2]
  41673e:	aas    
  41673f:	pop    es
  416740:	rcr    DWORD PTR [esi-0x550881b2],1
  416746:	cmc    
  416747:	popf   
  416748:	mov    edx,0xb5045f36
  41674d:	(bad)  
  41674e:	cli    
  41674f:	inc    ebx
	...
  416764:	xchg   edx,eax
  416765:	retf   0x3130
  416768:	mov    ds:0x74cec23d,eax
  41676d:	xchg   edi,esp
  41676f:	(bad)  
  416770:	aas    
  416771:	stos   DWORD PTR es:[edi],eax
  416772:	mov    eax,0xa50ce0d2
  416777:	das    
  416778:	repnz daa 
  41677a:	pusha  
  41677b:	add    al,0xb5
  41677d:	(bad)  
  41677e:	nop    DWORD PTR [esi+ebx*4-0xa]
  416783:	jl     0x4167f7
  416785:	adc    al,0x21
  416787:	mov    eax,0x302d0abe
  41678c:	int3   
  41678d:	xchg   BYTE PTR [edx],bl
  41678f:	push   esi
  416790:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416792:	fld    QWORD PTR [esi-0x1522db9c]
  416798:	leave  
  416799:	fwait
  41679a:	cmp    ebx,edi
  41679c:	das    
  41679d:	inc    esp
  41679e:	out    dx,eax
  41679f:	jp     0x416755
  4167a1:	or     al,BYTE PTR [ecx]
  4167a3:	test   al,0xc9
  4167a5:	xchg   esi,eax
  4167a6:	dec    edi
  4167a7:	shl    DWORD PTR [edi+0x21a6fdb1],0xde
  4167ae:	pop    esi
  4167af:	mov    al,0x78
  4167b1:	xchg   edx,eax
  4167b2:	add    BYTE PTR [eax],bh
  4167b4:	xor    BYTE PTR [edx],bl
  4167b6:	and    al,0xe1
  4167b8:	mov    dh,0x42
  4167ba:	push   esi
  4167bb:	push   ds
  4167bc:	cmp    eax,0x2aa98364
  4167c1:	pusha  
  4167c2:	imul   ebp,DWORD PTR [ecx+0x16f90acd],0x0
	...
  4167dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167dd:	and    ah,BYTE PTR [ecx+eax*1]
  4167e0:	mov    ecx,0x855ee198
  4167e5:	or     ecx,esi
  4167e7:	ins    BYTE PTR es:[edi],dx
  4167e8:	mov    WORD PTR [ebx],fs
  4167ea:	add    al,0x1b
  4167ec:	jns    0x416797
  4167ee:	and    eax,0xf71e9f
  4167f3:	jmp    0x420770ae
  4167f8:	imul   ebx,DWORD PTR [eax+0x77c2efd],0xffffffd9
  4167ff:	adc    DWORD PTR [ebx],edi
  416801:	mov    dl,0xfd
  416803:	push   ds
  416804:	adc    dl,dl
  416806:	jmp    0x65de90f2
  41680b:	jo     0x4167c3
  41680d:	pop    DWORD PTR [eax]
  41680f:	mov    edx,0x31b4f6
  416814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416815:	popf   
  416816:	pop    ebp
  416817:	xchg   edi,eax
  416818:	jns    0x416852
  41681a:	ret    0xb6e5
  41681d:	inc    edx
  41681e:	mov    ebp,edx
  416820:	add    BYTE PTR [ebx+0x55],0x6c
  416824:	jl     0x4167bf
  416826:	push   eax
  416827:	inc    ecx
  416828:	aas    
  416829:	popf   
  41682a:	std    
  41682b:	jmp    0x13ba6ce
  416830:	jae    0x41689f
  416832:	mov    dh,al
  416834:	cdq    
  416835:	gs jno 0x416858
  416838:	xchg   edi,eax
  416839:	(bad)  
  41683a:	stc    
  41683b:	mov    ecx,0x9347
	...
  416854:	(bad)  
  416855:	ds mov bh,cl
  416858:	sub    esp,DWORD PTR [ebp-0x7c]
  41685b:	shr    BYTE PTR [ecx+0x304d389d],cl
  416861:	loop   0x41686b
  416863:	mov    eax,ecx
  416865:	fwait
  416866:	mov    BYTE PTR [ecx],al
  416868:	addr16 push ebp
  41686a:	jmp    0x53e3:0x117bca08
  416871:	ins    BYTE PTR es:[edi],dx
  416872:	xor    al,al
  416874:	repz retf 0xc2c8
  416878:	fcom   DWORD PTR [eax-0x4b1f7cb1]
  41687e:	add    eax,0x56c2ff00
  416883:	je     0x41683a
  416885:	push   es
  416886:	mov    esi,0xbdfba974
  41688b:	fistp  DWORD PTR [ebp-0x1b74ff70]
  416891:	(bad)  
  416892:	(bad)  
  416893:	je     0x4168fd
  416895:	mov    al,ch
  416897:	pop    ecx
  416898:	mov    edi,0xac8bfe6c
  41689d:	push   es
  41689e:	hlt    
  41689f:	jne    0x416839
  4168a1:	sahf   
  4168a2:	mov    ebp,0x65c26beb
  4168a7:	call   0x7b9b:0x8b00905c
  4168ae:	test   eax,0x536d53f8
  4168b3:	mov    dh,BYTE PTR [eax+edi*2-0x37]
  4168b7:	loop   0x4168b9
	...
  4168c9:	add    BYTE PTR [eax],al
  4168cb:	add    BYTE PTR [ebx+0x6d],dh
  4168ce:	xchg   ebx,eax
  4168d0:	mov    ch,0xd1
  4168d2:	sti    
  4168d3:	imul   esi,DWORD PTR [ebp+0x3aff8a4e],0x1dbff2a6
  4168dd:	cmp    BYTE PTR [ecx],ch
  4168df:	(bad)  
  4168e0:	sub    al,BYTE PTR [ebp-0x1783a532]
  4168e6:	add    eax,0x1d218000
  4168eb:	push   eax
  4168ec:	fs fs jg 0x416934
  4168f0:	or     DWORD PTR [esi-0x64],edx
  4168f3:	xchg   ebp,eax
  4168f4:	mov    ch,0xa6
  4168f6:	add    eax,ebp
  4168f8:	inc    esp
  4168f9:	comiss xmm7,xmm6
  4168fc:	fimul  WORD PTR ds:[eax+0x7ac261c8]
  416903:	inc    esp
  416904:	loope  0x416895
  416906:	in     al,dx
  416907:	xor    al,BYTE PTR [edi]
  416909:	aam    0x36
  41690b:	cmc    
  41690c:	cmp    BYTE PTR [eax-0x48],bl
  41690f:	or     eax,0x712dbb8c
  416914:	lods   al,BYTE PTR ds:[esi]
  416915:	xor    eax,ebx
  416917:	pop    es
  416918:	sub    al,0xa8
  41691a:	jp     0x4168dc
  41691c:	sahf   
  41691d:	mov    eax,ds:0x4722e7d4
  416922:	cs (bad) 
  416924:	out    0x68,al
  416926:	retf   
  416927:	enter  0xad77,0x1
  41692b:	push   ebp
  41692c:	ds (bad) 
  41692e:	aam    0x50
	...
  416944:	jecxz  0x416979
  416946:	enter  0xe5fb,0xe
  41694a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41694b:	out    0x4,eax
  41694d:	nop
  41694e:	cs (bad) 
  416950:	ds popa 
  416952:	mov    al,cl
  416954:	loope  0x41691a
  416956:	jp     0x41699c
  416958:	popa   
  416959:	psubsb mm6,QWORD PTR [edx]
  41695c:	xchg   DWORD PTR [eax+0x15483545],edx
  416962:	mov    edx,0x5c58b8b7
  416967:	xor    ah,al
  416969:	mov    BYTE PTR [edx-0x29],ah
  41696c:	mov    dl,0x8
  41696e:	jmp    0x12d2:0xefa6f578
  416975:	arpl   cx,cx
  416977:	sub    eax,0xcea75f23
  41697c:	in     eax,dx
  41697d:	int    0xeb
  41697f:	add    ebp,DWORD PTR [eax+0x6]
  416982:	mov    WORD PTR [ecx-0x7ec767ea],es
  416988:	add    DWORD PTR [edi+0x4260d0e7],0xd039f1fb
  416992:	repz fstp QWORD PTR [edi-0x31]
  416996:	mov    cl,0x78
  416998:	jmp    0xe3a7:0xb2b76e42
  41699f:	and    ebx,edx
  4169a1:	call   0x7dc:0xa2313472
	...
  4169bc:	xchg   edi,ecx
  4169be:	inc    edx
  4169bf:	jecxz  0x416a21
  4169c1:	and    eax,0xa77b78cb
  4169c6:	sbb    DWORD PTR ds:0x799d9aab,esi
  4169cc:	mov    ah,BYTE PTR [edi-0x6564dcc7]
  4169d2:	jno    0x416a15
  4169d4:	lahf   
  4169d5:	xchg   BYTE PTR [ecx-0x25cbe0fd],dl
  4169db:	inc    ebx
  4169dc:	call   0xa53a:0x7b2d16d6
  4169e3:	enter  0xb43f,0x9c
  4169e7:	inc    ecx
  4169e8:	mov    dh,0x8f
  4169ea:	add    BYTE PTR [edx-0x30c74a9b],bl
  4169f0:	and    edx,DWORD PTR [edx-0x4daea003]
  4169f6:	leave  
  4169f7:	enter  0x9999,0x88
  4169fb:	idiv   DWORD PTR [edi+0x6860043c]
  416a01:	xchg   edx,eax
  416a02:	xchg   DWORD PTR [edi],esp
  416a04:	mov    ch,0x36
  416a06:	rcl    DWORD PTR [ebx-0x4b],0x27
  416a0a:	cwde   
  416a0b:	ds hlt 
  416a0d:	cdq    
  416a0e:	in     eax,0x15
  416a10:	aaa    
  416a11:	nop
  416a12:	add    dl,bl
  416a14:	fs push ebp
  416a16:	retf   0x1c15
  416a19:	or     eax,0x19b4e17c
  416a1e:	xor    esp,DWORD PTR [eax+0x0]
	...
  416a31:	add    BYTE PTR [eax],al
  416a33:	add    bl,ah
  416a35:	xchg   ebp,eax
  416a36:	xor    DWORD PTR [ecx-0x3d1bac91],ebp
  416a3c:	repz xchg ecx,eax
  416a3e:	jnp    0x416a0d
  416a40:	into   
  416a41:	jge    0x416a4b
  416a43:	hlt    
  416a44:	ret    
  416a45:	push   edi
  416a46:	push   esp
  416a47:	icebp  
  416a48:	mov    bh,0x24
  416a4a:	or     eax,0x3990766a
  416a4f:	lods   al,BYTE PTR ds:[esi]
  416a50:	mov    esi,0x35299488
  416a55:	dec    ebx
  416a56:	cld    
  416a57:	inc    esi
  416a58:	int    0x88
  416a5a:	inc    eax
  416a5b:	push   edx
  416a5c:	std    
  416a5d:	pop    ebp
  416a5e:	shr    BYTE PTR [ecx+0x416405f5],0x35
  416a65:	dec    esp
  416a66:	cld    
  416a67:	es test cl,bl
  416a6a:	call   0xd09f15
  416a6f:	sub    edi,DWORD PTR [edx-0x70c4ce71]
  416a75:	cmp    eax,0xe1600024
  416a7a:	and    cl,BYTE PTR [ebx-0x3dc56ae3]
  416a80:	loopne 0x416a0a
  416a82:	xor    ecx,ecx
  416a84:	and    al,0x7d
  416a86:	jae    0x416a94
  416a88:	xchg   esp,eax
  416a89:	ret    
  416a8a:	add    BYTE PTR [esi+eax*2-0x2c],dh
  416a8e:	cmp    cl,BYTE PTR [eax+esi*4-0x71]
  416a92:	je     0x416a9b
  416a94:	mov    WORD PTR [eax-0x14],?
  416a97:	xor    eax,DWORD PTR [eax]
	...
  416aa9:	add    BYTE PTR [eax],al
  416aab:	add    BYTE PTR [ecx+edi*2+0x3],bl
  416aaf:	inc    eax
  416ab0:	pop    es
  416ab1:	xchg   ecx,eax
  416ab2:	mov    DWORD PTR [ecx+0x14],eax
  416ab5:	push   ebx
  416ab6:	add    DWORD PTR [eax],eax
  416ab8:	xchg   edi,eax
  416ab9:	fisttp DWORD PTR [ecx]
  416abb:	test   DWORD PTR [ebp-0x21],eax
  416abe:	add    eax,0x889bc48b
  416ac3:	dec    eax
  416ac4:	sbb    BYTE PTR [edx+0x2a],bh
  416ac7:	mov    edi,DWORD PTR [ebx+ebx*4-0x531135c6]
  416ace:	push   ebx
  416acf:	mov    ebp,esp
  416ad1:	cwde   
  416ad2:	add    dh,dl
  416ad4:	daa    
  416ad5:	push   edi
  416ad6:	pop    ebx
  416ad7:	jae    0x416ada
  416ad9:	sbb    edx,DWORD PTR [eax]
  416adb:	inc    ecx
  416adc:	inc    ebp
  416add:	fisttp DWORD PTR [ecx]
  416adf:	test   BYTE PTR [esi-0x42c70c22],cl
  416ae5:	fisttp WORD PTR [edx]
  416ae7:	inc    ecx
  416ae8:	push   ebp
  416ae9:	fisttp DWORD PTR [ecx]
  416aeb:	xor    ebx,esp
  416aed:	push   eax
  416aee:	and    BYTE PTR [eax-0x68],0x8c
  416af2:	mov    DWORD PTR [eax-0x68],eax
  416af5:	push   ecx
  416af6:	jge    0x416b37
  416af8:	mov    eax,gs
  416afa:	push   es
  416afb:	xor    bl,ah
  416afd:	jp     0x416a89
  416aff:	add    BYTE PTR [esp+ecx*4-0x54a00af],bl
  416b06:	fld    QWORD PTR [edi]
  416b08:	jp     0x416aad
  416b0a:	lods   eax,DWORD PTR ds:[esi]
  416b0b:	adc    ebp,esi
  416b0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b0e:	jle    0x416ae7
	...
  416b24:	xor    BYTE PTR [ebp-0x57],ch
  416b27:	add    esp,DWORD PTR [edi+0x3741d66]
  416b2d:	cmp    al,0xb1
  416b2f:	pop    es
  416b30:	ss jo  0x416b37
  416b33:	jne    0x416acb
  416b35:	sub    eax,esi
  416b37:	add    ebp,esp
  416b39:	into   
  416b3a:	pusha  
  416b3b:	fistp  QWORD PTR [edx]
  416b3d:	leave  
  416b3e:	jl     0x416b45
  416b40:	cmp    dh,ah
  416b42:	lods   eax,DWORD PTR ds:[esi]
  416b43:	and    eax,DWORD PTR [esi-0x3adc5227]
  416b49:	jbe    0x416b74
  416b4b:	adc    al,0x69
  416b4d:	rol    cl,0xff
  416b50:	aaa    
  416b51:	jmp    0x2d1e:0xb26a88f5
  416b58:	imul   eax,DWORD PTR cs:[eax],0x49e698d
  416b5f:	call   0xfe6c5c74
  416b64:	xor    esi,esp
  416b66:	mov    al,0x3
  416b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b69:	out    0x1e,al
  416b6b:	xor    ebp,DWORD PTR [esi]
  416b6d:	mov    eax,0xa5b94e2a
  416b72:	mov    edx,0xad396603
  416b77:	and    esp,DWORD PTR [ebp+0x69142ad7]
  416b7d:	mov    al,ds:0x6537ffc1
  416b82:	cmc    
  416b83:	add    BYTE PTR [edx],cl
  416b85:	lods   eax,DWORD PTR ds:[esi]
  416b86:	jle    0x416bce
	...
  416b9c:	mov    ecx,0xb1c5f731
  416ba1:	mov    al,0x1
  416ba3:	(bad)  
  416ba4:	cli    
  416ba5:	(bad)  
  416ba6:	jmp    0x416c26
  416ba8:	repz mov esi,DWORD PTR [edx-0x7]
  416bac:	js     0x416b3a
  416bae:	fild   WORD PTR [ebx]
  416bb0:	jp     0x416c01
  416bb2:	jecxz  0x416c27
  416bb4:	mov    ch,0x35
  416bb6:	mov    ds:0x948fb645,al
  416bbb:	jle    0x416c0b
  416bbd:	adc    BYTE PTR [edi-0x46741efd],dh
  416bc3:	inc    ebx
  416bc4:	pop    edi
  416bc5:	xor    DWORD PTR ds:0x7287c129,edi
  416bcb:	cmp    DWORD PTR [edx-0x50],ebx
  416bce:	aad    0x29
  416bd0:	cmp    ecx,DWORD PTR [ebx]
  416bd2:	fdivr  DWORD PTR [ebx-0x57]
  416bd5:	xchg   DWORD PTR [edx+esi*1-0x5f],ebp
  416bd9:	mov    edi,ecx
  416bdb:	inc    ebx
  416bdc:	cmovs  ebx,DWORD PTR [edx]
  416bdf:	rcr    BYTE PTR [ebx],cl
  416be1:	jge    0x416c16
  416be3:	push   ss
  416be4:	jne    0x416b75
  416be6:	jb     0x416ba1
  416be8:	mov    dh,0x4
  416bea:	inc    eax
  416beb:	add    esi,DWORD PTR [eax]
  416bed:	mov    edx,ds
  416bef:	fdivr  st(2),st
  416bf1:	add    al,0x17
  416bf3:	cld    
  416bf4:	mov    bh,0x85
  416bf6:	sbb    ah,dl
  416bf8:	jmp    0x416c16
  416bfa:	out    dx,eax
  416bfb:	sub    cl,cl
  416bfd:	inc    ebx
  416bfe:	ffree  st(3)
	...
  416c14:	fisub  DWORD PTR [edi+0xe]
  416c17:	add    BYTE PTR [esi],bh
  416c19:	inc    edi
  416c1a:	jmp    0x416ba0
  416c1c:	test   BYTE PTR [ebx-0x6f427b3e],0xdc
  416c23:	clc    
  416c24:	mov    ebx,0x95033f5d
  416c29:	xchg   esi,eax
  416c2a:	inc    esi
  416c2b:	test   eax,edx
  416c2d:	(bad)  
  416c2e:	ds mov ecx,0xec00aab6
  416c34:	mov    esi,0xdc2edd60
  416c39:	out    0xff,al
  416c3b:	(bad)  
  416c3c:	jae    0x416c0e
  416c3e:	add    al,0xe9
  416c40:	add    ebx,DWORD PTR [ebp-0x7c06378c]
  416c46:	xor    BYTE PTR [edi],ch
  416c48:	js     0x416be0
  416c4a:	xor    ch,BYTE PTR [ecx]
  416c4c:	jmp    0x2c7b:0xe1d474c7
  416c53:	pop    ss
  416c54:	jo     0x416bec
  416c56:	cmp    BYTE PTR [ebx+0x68408422],bh
  416c5c:	lock push cs
  416c5e:	add    ecx,ebp
  416c60:	mov    dh,0x5a
  416c62:	mov    edi,0xc911865b
  416c67:	into   
  416c68:	jns    0x416c73
  416c6a:	or     al,0xf9
  416c6c:	jl     0x416cbf
  416c6e:	add    BYTE PTR [edx],bl
  416c70:	repnz cmp eax,DWORD PTR [ecx-0x3f9e325c]
  416c77:	push   ss
	...
  416c8c:	mov    al,ds:0xb6e9010e
  416c91:	or     al,0xc8
  416c93:	adc    eax,0xc5340915
  416c98:	ins    BYTE PTR es:[edi],dx
  416c99:	push   ecx
  416c9a:	add    BYTE PTR [edx-0x7c],ah
  416c9d:	adc    DWORD PTR [ebx],edi
  416c9f:	jmp    0xea81f3be
  416ca4:	mov    DWORD PTR [ecx-0x41],ebx
  416ca7:	sti    
  416ca8:	mov    ch,BYTE PTR [ecx+0x279e620e]
  416cae:	std    
  416caf:	jno    0x416c67
  416cb1:	pop    DWORD PTR [eax]
  416cb3:	jmp    0x4ec7:0xdce9098c
  416cba:	and    BYTE PTR ds:0xfd95,ch
  416cbf:	add    BYTE PTR [edi+eiz*1-0x6eb021d7],bl
  416cc6:	call   0xfea92f80
  416ccb:	test   ah,bl
  416ccd:	in     al,0x3f
  416ccf:	mov    esp,DWORD PTR [ecx-0x5f]
  416cd2:	fild   DWORD PTR [ebx-0x74]
  416cd5:	push   0xcbc23004
  416cda:	std    
  416cdb:	mov    al,cl
  416cdd:	stc    
  416cde:	dec    BYTE PTR [eax+0x300915c]
  416ce4:	and    DWORD PTR [ebp-0x1ab3bc25],edi
  416cea:	and    edx,DWORD PTR [ebx+0x2b]
  416ced:	jns    0x416d33
  416cef:	loopne 0x416cf1
	...
  416d01:	add    BYTE PTR [eax],al
  416d03:	add    BYTE PTR [ebx+0x6d],dl
  416d06:	mov    al,BYTE PTR [eax+edi*4+0x7f]
  416d0a:	xor    ebx,ebx
  416d0c:	(bad)  
  416d0d:	stc    
  416d0e:	std    
  416d0f:	mov    WORD PTR [ebx-0x5af8787d],cs
  416d15:	int3   
  416d16:	add    eax,ebp
  416d18:	sbb    bp,di
  416d1b:	(bad)  
  416d1c:	mov    edi,0xf4387616
  416d21:	dec    edx
  416d22:	mov    al,BYTE PTR [eax]
  416d24:	sbb    al,0xce
  416d26:	pop    ebx
  416d27:	mov    ebx,DWORD PTR [ecx-0x39]
  416d2a:	pop    edx
  416d2b:	ret    0x9108
  416d2e:	mov    DWORD PTR [ebx-0x14],ecx
  416d31:	ret    0x3356
  416d34:	xor    esp,DWORD PTR [ecx-0x1fda7a43]
  416d3a:	sbb    al,0x8b
  416d3c:	fistp  WORD PTR [edx+ecx*4+0x2914ad6]
  416d43:	jne    0x416d0b
  416d45:	rol    BYTE PTR [edx-0x3f57633e],1
  416d4b:	jb     0x416d02
  416d4d:	cmp    DWORD PTR [ecx],ebx
  416d4f:	or     BYTE PTR [esi],bl
  416d51:	addr16 hlt 
  416d53:	add    dh,BYTE PTR [ebx+0x21]
  416d56:	sub    al,0x74
  416d58:	xlat   BYTE PTR ds:[ebx]
  416d59:	out    0x9a,eax
  416d5b:	enter  0x2be5,0xb1
  416d5f:	or     ebx,DWORD PTR [ebp-0x7501bc6a]
  416d65:	and    al,BYTE PTR [ebx+esi*2+0x0]
	...
  416d79:	add    BYTE PTR [eax],al
  416d7b:	add    BYTE PTR [esi+0x2e0fc121],bl
  416d81:	jle    0x416d1c
  416d83:	(bad)  
  416d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d85:	test   eax,0xa7f58ce3
  416d8a:	jl     0x416dce
  416d8c:	lds    ebx,FWORD PTR [edx]
  416d8e:	cld    
  416d8f:	mov    dh,dh
  416d91:	scas   al,BYTE PTR es:[edi]
  416d92:	jl     0x416dda
  416d94:	mov    ecx,0x3e01fd6c
  416d99:	in     eax,0xc6
  416d9b:	pop    ebp
  416d9c:	jbe    0x416dfa
  416d9e:	jns    0x416e10
  416da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416da1:	jns    0x416de7
  416da3:	push   esi
  416da4:	cmp    BYTE PTR [ebp+ebp*4+0x4f3e19],bh
  416dab:	mov    ebp,DWORD PTR [edx+eiz*4+0x7a]
  416daf:	rcr    ah,1
  416db1:	pusha  
  416db2:	add    BYTE PTR [ebp-0x48],dh
  416db5:	fdiv   st(7),st
  416db7:	add    DWORD PTR [ecx-0x87d3e65],eax
  416dbd:	mov    ch,0xea
  416dbf:	lds    eax,FWORD PTR [edi-0x6d400cf4]
  416dc5:	fs inc ecx
  416dc7:	push   0xfffffff5
  416dc9:	aad    0x2
  416dcb:	ror    esi,0x1b
  416dce:	ja     0x416dd5
  416dd0:	or     eax,0x1d48b0a8
  416dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dd6:	lods   eax,DWORD PTR ds:[esi]
  416dd7:	push   cs
  416dd8:	ds (bad) 
  416dda:	lods   eax,DWORD PTR ds:[esi]
  416ddb:	sti    
  416ddc:	cmp    edi,ecx
  416dde:	shl    edx,cl
	...
  416df4:	push   0xffffffa7
  416df6:	std    
  416df7:	jno    0x416dab
  416df9:	xchg   ebx,eax
  416dfa:	inc    edx
  416dfb:	fisubr DWORD PTR [ebx-0x7850ce6]
  416e01:	jg     0x416e52
  416e03:	(bad)
  416e06:	out    0x26,eax
  416e08:	or     BYTE PTR [eax-0x6c974bc1],cl
  416e0e:	es or  BYTE PTR es:[edi+ecx*1-0x64],bh
  416e14:	pop    eax
  416e15:	xchg   ebx,eax
  416e16:	push   ss
  416e17:	es call 0x88e56d8c
  416e1d:	xchg   ebx,eax
  416e1e:	push   es
  416e1f:	es call 0x790d7d8c
  416e25:	xchg   ebx,eax
  416e26:	neg    BYTE PTR [eax-0x4300c65e]
  416e2c:	imul   edx,DWORD PTR [ebx-0x7247c11a],0xffffffaa
  416e33:	shl    ecx,1
  416e35:	cmp    DWORD PTR [esi],edi
  416e37:	jns    0x416e63
  416e39:	sub    esi,ecx
  416e3b:	jl     0x416e67
  416e3d:	xchg   ebx,eax
  416e3e:	out    0x0,eax
  416e40:	loopne 0x416ea5
  416e42:	popf   
  416e43:	rcr    DWORD PTR [edx],0x5e
  416e46:	les    esp,FWORD PTR ds:0xd560378b
  416e4c:	adc    ah,BYTE PTR [ebx-0x3b]
  416e4f:	and    eax,0xb4169303
  416e54:	adc    ch,BYTE PTR [ebx-0x4b]
  416e57:	and    eax,0x0
	...
  416e6c:	repz xchg edx,eax
  416e6e:	push   esi
  416e6f:	test   dl,ch
  416e71:	xchg   edx,eax
  416e72:	out    0x1b,eax
  416e74:	mov    esi,0xa7257eb1
  416e79:	mov    dh,0x0
  416e7b:	mov    al,0x29
  416e7d:	xor    DWORD PTR [esi-0x26],0x4d
  416e81:	sbb    DWORD PTR [edx+ebp*8],ecx
  416e84:	xchg   ebx,eax
  416e85:	stos   BYTE PTR es:[edi],al
  416e86:	outs   dx,BYTE PTR ds:[esi]
  416e87:	pop    esi
  416e88:	nop
  416e89:	xchg   ecx,eax
  416e8a:	inc    ecx
  416e8b:	push   0xfffffff2
  416e8d:	bound  edi,QWORD PTR [ecx]
  416e8f:	scas   al,BYTE PTR es:[edi]
  416e90:	(bad)  
  416e91:	sbb    eax,0x865046eb
  416e96:	call   0xfdd360de
  416e9b:	mov    BYTE PTR [ecx+0xde941b4],cl
  416ea1:	fwait
  416ea2:	sub    DWORD PTR [ecx],0x45
  416ea5:	aas    
  416ea6:	mov    esp,esi
  416ea8:	bound  esi,QWORD PTR [ecx+eax*2+0x67caede9]
  416eaf:	and    cl,ch
  416eb1:	xchg   edx,eax
  416eb2:	std    
  416eb3:	jmp    0x815175a3
  416eb8:	xchg   ecx,eax
  416eb9:	xchg   ecx,eax
  416eba:	std    
  416ebb:	push   0x5e
  416ebd:	xchg   edx,eax
  416ebe:	je     0x416ea0
  416ec0:	aaa    
  416ec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ec2:	mov    cl,ch
  416ec4:	mov    dh,0x8f
  416ec6:	dec    ebp
  416ec7:	push   esp
  416ec8:	xchg   DWORD PTR [ebp-0x8],edx
  416ecb:	pop    ebp
  416ecc:	ud2    
  416ece:	(bad)  
  416ecf:	push   esp
	...
  416ee4:	and    eax,DWORD PTR [eax-0x18]
  416ee7:	xchg   DWORD PTR [ebx-0x6f],edi
  416eea:	std    
  416eeb:	or     BYTE PTR [edx],dl
  416eed:	data16 fisubr WORD PTR [edx]
  416ef0:	mov    ecx,0xc16212a6
  416ef5:	daa    
  416ef6:	(bad)  
  416ef7:	jno    0x416eaf
  416ef9:	pop    DWORD PTR [eax]
  416efb:	pop    edi
  416efc:	loop   0x416eb1
  416efe:	inc    ecx
  416eff:	jmp    0x8f1e1fd2
  416f04:	xchg   ecx,eax
  416f05:	pop    es
  416f06:	cmp    al,0x0
  416f08:	sbb    al,0x4c
  416f0a:	inc    edx
  416f0b:	add    BYTE PTR [ebx+0x1f5b5cc9],bh
  416f11:	ror    DWORD PTR [edx-0x5685a214],0x8
  416f18:	int3   
  416f19:	lea    edx,[esi+0x6a]
  416f1c:	xchg   ebp,eax
  416f1d:	sbb    dh,BYTE PTR [esp+esi*2+0x58fe6c0b]
  416f24:	hlt    
  416f25:	or     al,al
  416f27:	add    BYTE PTR [edx+ebx*1+0x6bf76484],cl
  416f2e:	(bad)  
  416f2f:	push   eax
  416f30:	jbe    0x416ebf
  416f32:	call   0xfead7eaa
  416f37:	test   ah,cl
  416f39:	fwait
  416f3a:	adc    DWORD PTR [ebp-0x73],0xa28b008d
  416f41:	mov    esp,0x6830858c
  416f46:	(bad)  
  416f47:	inc    DWORD PTR [eax]
	...
  416f59:	add    BYTE PTR [eax],al
  416f5b:	add    BYTE PTR [edi*4+0x6ba07fe5],bh
  416f62:	inc    BYTE PTR [ebp+0x3d819b9c]
  416f68:	pop    ebp
  416f69:	lea    eax,[eax]
  416f6b:	push   0xffffff97
  416f6d:	(bad)  
  416f6e:	je     0x416f04
  416f70:	hlt    
  416f71:	arpl   WORD PTR [edx-0x3e],sp
  416f74:	sbb    al,0x8d
  416f76:	mov    esi,eax
  416f78:	in     al,dx
  416f79:	inc    BYTE PTR [esp+eiz*2+0x50fe6cf7]
  416f80:	mov    DWORD PTR [esi],eax
  416f82:	pop    edx
  416f83:	stc    
  416f84:	dec    ebx
  416f85:	ins    DWORD PTR es:[edi],dx
  416f86:	dec    ebp
  416f87:	call   0x3fa72e
  416f8c:	xchg   ecx,eax
  416f8d:	dec    ebx
  416f8e:	push   cs
  416f8f:	test   BYTE PTR [eax],al
  416f91:	mov    WORD PTR [eax],es
  416f93:	add    BYTE PTR [ebp-0x13a478d5],dh
  416f99:	add    DWORD PTR [edx],esp
  416f9b:	dec    edi
  416f9c:	loop   0x416f51
  416f9e:	fst    DWORD PTR [ecx]
  416fa0:	jne    0x416f48
  416fa2:	xchg   bh,dh
  416fa4:	shr    BYTE PTR [ecx-0x594a027b],cl
  416faa:	add    DWORD PTR [edx-0x7f],ebp
  416fad:	sbb    edx,DWORD PTR [edi-0x17c1a239]
  416fb3:	shl    DWORD PTR [ebp+0x383caba6],0xbb
  416fba:	push   ecx
  416fbb:	push   edi
  416fbc:	lea    ebp,[edi+0xff43]
	...
  416fd2:	add    BYTE PTR [eax],al
  416fd4:	call   0xbc57:0x88cdfbc
  416fdb:	out    0xbb,eax
  416fdd:	fs add al,0x0
  416fe0:	out    0x60,al
  416fe2:	(bad)  
  416fe3:	(bad)  
  416fe4:	mov    ch,0xd9
  416fe6:	adc    dh,BYTE PTR [esi-0x734b8608]
  416fec:	lock outs dx,BYTE PTR ds:[esi]
  416fee:	mov    ah,0x69
  416ff0:	scas   eax,DWORD PTR es:[edi]
  416ff1:	in     eax,dx
  416ff2:	nop
  416ff3:	jl     0x41706e
  416ff5:	jle    0x417074
  416ff7:	leave  
  416ff8:	push   edx
  416ff9:	cdq    
  416ffa:	mov    esp,0x49e3658
  416fff:	rdtsc  
  417001:	lock add DWORD PTR [eax],eax
  417004:	mov    ch,0x23
  417006:	mov    BYTE PTR [ebx+0x2c],bl
  417009:	mov    ecx,0xc19f4f22
  41700e:	nop
  41700f:	inc    esp
  417010:	gs jbe 0x416fa0
  417013:	mov    BYTE PTR [ebp-0x5bdc072f],0x66
  41701a:	add    al,0x8b
  41701c:	or     eax,0xb2fe2225
  417021:	(bad)  
  417022:	imul   edi,DWORD PTR [eax-0x6],0xffffff8f
  417026:	out    0x90,eax
  417028:	cmp    DWORD PTR [ebx],esi
  41702a:	nop
  41702b:	and    ch,bl
  41702d:	inc    DWORD PTR ds:[edi]
  417030:	mov    ah,0x8f
  417032:	out    0x90,eax
  417034:	xor    DWORD PTR [ebx],esp
  417036:	jl     0x41705a
	...
  41704c:	sar    DWORD PTR [esi],cl
  41704e:	mov    edx,0x25026019
  417053:	adc    al,0x72
  417055:	add    ch,BYTE PTR [ebp-0xb6f95c1]
  41705b:	jecxz  0x417022
  41705d:	iret   
  41705e:	out    0x88,eax
  417060:	push   0x4
  417062:	enter  0x3990,0xfc
  417066:	inc    esp
  417067:	and    bl,BYTE PTR [ebx+0x1e5900f6]
  41706d:	lea    esi,[esi]
  41706f:	and    al,BYTE PTR [esi]
  417071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417072:	lds    eax,FWORD PTR [esi+0x99cbeca]
  417078:	paddsb mm0,mm0
  41707b:	test   eax,0x436a983d
  417080:	mov    ah,0xf5
  417082:	rcl    bl,1
  417084:	jmp    0xb563db04
  417089:	add    al,0xc6
  41708b:	nop
  41708c:	cmp    esp,edi
  41708e:	hlt    
  41708f:	and    DWORD PTR [ebx-0x20],ecx
  417092:	pop    esp
  417093:	mov    dh,dl
  417095:	mov    ah,dh
  417097:	and    edx,ebp
  417099:	sbb    al,0x64
  41709b:	mov    eax,0xb4d68f2b
  4170a0:	adc    dh,bh
  4170a2:	call   0xbc98:0xa7152321
  4170a9:	sbb    al,0x6c
  4170ab:	mov    eax,0xb6008f0b
	...
  4170c4:	fcom   DWORD PTR [ebx+ecx*4-0x273baa4]
  4170cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170cc:	sub    ah,ah
  4170ce:	or     BYTE PTR [ecx-0x1602710f],dl
  4170d4:	xor    cl,BYTE PTR [edi+0x74]
  4170d7:	fcom   QWORD PTR [ebx+edx*8-0x71c59603]
  4170de:	cli    
  4170df:	out    dx,al
  4170e0:	cmp    BYTE PTR [edx-0x126b8903],bh
  4170e6:	pop    ecx
  4170e7:	movd   mm2,DWORD PTR [eax+0x4]
  4170eb:	jmp    0x692d8af3
  4170f0:	in     eax,0xfa
  4170f2:	add    ecx,ebp
  4170f4:	mov    dh,0xe5
  4170f6:	push   ebp
  4170f7:	ret    
  4170f8:	sbb    BYTE PTR [ebx],0x73
  4170fb:	dec    ebp
  4170fc:	pop    ecx
  4170fd:	pop    ss
  4170fe:	push   ebx
  4170ff:	xor    eax,0xd8e88740
  417104:	test   DWORD PTR [esi-0x21109d03],0x22327455
  41710e:	cld    
  41710f:	push   ds
  417110:	xchg   esp,eax
  417111:	fsubp  st(0),st
  417113:	jecxz  0x417116
  417115:	mov    ?,ebp
  417117:	fs stc 
  417119:	popf   
  41711a:	test   BYTE PTR ds:0xba008fb1,bh
  417120:	lods   al,BYTE PTR ds:[esi]
  417121:	in     al,0x68
  417123:	imul   esi,DWORD PTR [ecx+0x83008f],0x0
	...
  417139:	add    BYTE PTR [eax],al
  41713b:	add    BYTE PTR [eax+0xee86ae5],bh
  417141:	mov    ?,ebp
  417143:	jmp    0x7dc48c3e
  417148:	retf   0xfd8d
  41714b:	cmp    esp,edx
  41714d:	mov    ds:0x51fe0030,eax
  417152:	std    
  417153:	mov    cl,bl
  417155:	scas   eax,DWORD PTR es:[edi]
  417156:	cmp    al,0x43
  417159:	lahf   
  41715a:	test   BYTE PTR [ecx+0x5300920c],cl
  417160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417161:	jo     0x4170ef
  417163:	mov    ebp,0xfffeb070
  417168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417169:	gs (bad) 
  41716c:	pop    ebx
  41716d:	sar    ch,cl
  41716f:	(bad)  
  417170:	mov    edx,0xee3c341c
  417175:	push   ecx
  417176:	std    
  417177:	mov    WORD PTR [ecx-0x6540b255],ds
  41717d:	xchg   edx,eax
  41717e:	add    BYTE PTR [eax],al
  417180:	sti    
  417181:	sbb    al,0x84
  417183:	pushf  
  417184:	adc    dh,BYTE PTR [eax+0x260350fe]
  41718a:	stc    
  41718b:	(bad)  
  41718c:	jmp    0x7c6a:0x9874bd15
  417193:	clc    
  417194:	dec    ecx
  417195:	add    BYTE PTR [edx+0x7490c87d],0x23
  41719c:	shl    DWORD PTR ds:0xfff1,cl
	...
  4171b2:	add    BYTE PTR [eax],al
  4171b4:	jns    0x4171db
  4171b6:	cmovo  ebx,DWORD PTR [ebx+edi*1-0x3]
  4171bb:	mov    al,ah
  4171bd:	sbb    eax,0x481cf844
  4171c2:	(bad)  
  4171c3:	jne    0x41721d
  4171c5:	lods   eax,DWORD PTR ds:[esi]
  4171c6:	je     0x4171c4
  4171c8:	push   ebx
  4171c9:	enter  0xc084,0xc8
  4171cd:	cdq    
  4171ce:	aaa    
  4171cf:	jge    0x417215
  4171d1:	and    eax,DWORD PTR [ecx]
  4171d3:	mov    bl,0x4d
  4171d5:	mov    edx,0xacf731ff
  4171da:	je     0x4171d8
  4171dc:	mov    ch,0x65
  4171de:	imul   DWORD PTR [ebx]
  4171e0:	(bad)  
  4171e1:	mov    dh,0x4
  4171e3:	jmp    DWORD PTR [eax-0xaebe2ae]
  4171e9:	push   0x2236ffc1
  4171ee:	mov    ecx,0x87ebb174
  4171f3:	xchg   ebx,eax
  4171f4:	stc    
  4171f5:	xor    eax,0x61dd4f1d
  4171fa:	ss (bad) 
  4171fc:	jmp    0x412f:0x830054c5
  417203:	push   esp
  417204:	and    eax,DWORD PTR cs:[ecx-0x2009a215]
  41720b:	lahf   
  41720c:	out    dx,eax
  41720d:	mov    ecx,0xa4660104
  417212:	mov    ch,0x8a
  417214:	lds    eax,FWORD PTR [ebp+0x9b83]
	...
  41722a:	add    BYTE PTR [eax],al
  41722c:	mov    ch,0x76
  41722e:	add    DWORD PTR [eax+0x69],ebp
  417231:	ins    BYTE PTR es:[edi],dx
  417232:	sar    edi,0xa3
  417235:	cmp    DWORD PTR [ebp+0x11],0xfffffff5
  417239:	jbe    0x4171c3
  41723b:	mov    edi,0xff8bf2c2
  417240:	mov    dh,BYTE PTR [esi-0x78]
  417243:	cmc    
  417244:	or     DWORD PTR ds:0x76bb82a3,edi
  41724a:	xchg   ebp,eax
  41724b:	ja     0x417258
  41724d:	scas   al,BYTE PTR es:[edi]
  41724e:	idiv   ebx
  417250:	(bad)  
  417251:	add    DWORD PTR ss:[ebp+0x2f3b9],ecx
  417258:	mov    ch,0x76
  41725a:	mov    cl,0xe7
  41725c:	push   cs
  41725d:	mov    al,0x1d
  41725f:	(bad)  
  417260:	ds jle 0x4171eb
  417263:	dec    cl
  417265:	adc    ecx,DWORD PTR [edx-0x4a70d12a]
  41726b:	sub    ecx,esp
  41726d:	pop    ecx
  41726e:	ficomp WORD PTR [esi]
  417270:	sbb    DWORD PTR [edx],0x5c
  417273:	adc    al,0x37
  417275:	push   edi
  417276:	into   
  417277:	sub    esi,edx
  417279:	push   ebp
  41727a:	(bad)  
  41727b:	push   ds
  41727c:	imul   ebx,DWORD PTR [ecx],0xffffff9f
  41727f:	sub    eax,DWORD PTR [edx+0x69]
  417282:	mov    dh,0x1e
  417284:	ss push 0xcf8cc833
  41728a:	je     0x41722c
  41728c:	dec    edx
  41728d:	out    0x8f,eax
  41728f:	lea    eax,[eax]
	...
  4172a1:	add    BYTE PTR [eax],al
  4172a3:	add    BYTE PTR [ebx],ch
  4172a5:	(bad)  
  4172a6:	out    0x1e,eax
  4172a8:	imul   edi,DWORD PTR [edi+0x62],0x2c1a6a46
  4172af:	and    BYTE PTR [edx-0x34b2e389],al
  4172b5:	mov    ebp,DWORD PTR [edx+0x47]
  4172b8:	scas   al,BYTE PTR es:[edi]
  4172b9:	adc    ah,BYTE PTR [edi+0x4f501a0e]
  4172bf:	mov    BYTE PTR [ebp-0x75],bh
  4172c2:	pop    esi
  4172c3:	xchg   DWORD PTR [edi+0x291ef104],ecx
  4172c9:	mov    WORD PTR [edi],?
  4172cb:	sub    ebx,DWORD PTR [esi+0x91e468b]
  4172d1:	mov    WORD PTR [edi-0x64],cs
  4172d4:	ins    BYTE PTR es:[edi],dx
  4172d5:	mov    esi,DWORD PTR [esi]
  4172d7:	sub    bh,BYTE PTR [ebx+0x632be7f5]
  4172dd:	mov    WORD PTR [esi],fs
  4172df:	push   ds
  4172e0:	adc    ebp,edx
  4172e2:	ret    0x774c
  4172e5:	in     eax,0x62
  4172e7:	das    
  4172e8:	aaa    
  4172e9:	jl     0x4172da
  4172eb:	mov    dl,0x0
  4172ed:	jecxz  0x4172a9
  4172ef:	cmp    bl,dl
  4172f1:	lahf   
  4172f2:	sbb    eax,0x164ac2
  4172f7:	stc    
  4172f8:	lods   al,BYTE PTR cs:[esi]
  4172fa:	sub    al,0xf
  4172fc:	ja     0x417289
  4172fe:	mov    BYTE PTR [ecx+ecx*1],al
  417301:	ins    DWORD PTR es:[edi],dx
  417302:	inc    ecx
  417303:	jmp    0xfbf216d1
	...
  41731c:	test   BYTE PTR [edx+0x2ea9248a],0x28
  417323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417324:	hlt    
  417325:	mov    cl,BYTE PTR [edx+0x2ea524]
  41732b:	xchg   edi,eax
  41732c:	hlt    
  41732d:	mov    cl,BYTE PTR [edx+0x42e0124]
  417333:	(bad)  
  417334:	hlt    
  417335:	mov    cl,BYTE PTR [edx+0x382ded24]
  41733b:	mov    bh,0xf4
  41733d:	mov    cl,BYTE PTR [edx+0x32f8d924]
  417343:	dec    edx
  417344:	xchg   ebp,eax
  417345:	imul   eax,DWORD PTR [ecx-0x17],0x3b
  417349:	or     al,0xe9
  41734b:	adc    DWORD PTR [esi],ebp
  41734d:	les    ecx,FWORD PTR [eax]
  41734f:	(bad)  
  417350:	hlt    
  417351:	mov    ah,ch
  417353:	pop    edx
  417354:	adc    ecx,DWORD PTR [ebx-0x250f8d03]
  41735a:	push   esi
  41735b:	bound  ecx,QWORD PTR [edx-0x4956ed82]
  417361:	mov    dl,dh
  417363:	shl    DWORD PTR [ebp+0x2d],cl
  417366:	clc    
  417367:	sbb    al,0x74
  417369:	mov    cl,BYTE PTR [esp+esi*4+0x16e8e2a6]
  417370:	fisttp DWORD PTR [edx-0x25078d03]
  417376:	std    
  417377:	aam    0xbe
  417379:	imul   eax,DWORD PTR [ecx-0x17],0xd56a64c1
	...
  417394:	aad    0x96
  417396:	fiadd  WORD PTR [eax]
  417398:	pop    ds
  417399:	mov    cs,WORD PTR [ebx-0x1ab9b383]
  41739f:	mov    esp,0x8b00938a
  4173a4:	xchg   ebx,eax
  4173a5:	inc    ebx
  4173a6:	(bad)  
  4173a7:	xor    eax,0x42cc24
  4173ac:	or     eax,esp
  4173ae:	addr16 xor eax,0x43dca22f
  4173b4:	or     al,0x19
  4173b6:	jl     0x4173a0
  4173b8:	aam    0xbb
  4173ba:	mov    al,ds:0x898e1cbe
  4173bf:	(bad)  
  4173c0:	pushf  
  4173c1:	lods   al,BYTE PTR ds:[esi]
  4173c2:	xor    al,0x8
  4173c4:	sub    cl,BYTE PTR [edi-0x3]
  4173c7:	(bad)  
  4173c8:	xor    ch,bh
  4173ca:	xor    esi,ebx
  4173cc:	lahf   
  4173cd:	xchg   ebx,eax
  4173ce:	aaa    
  4173cf:	sbb    eax,0x42c944
  4173d4:	ror    BYTE PTR [eax-0x3437e2c8],0x42
  4173db:	add    al,al
  4173dd:	jle    0x417417
  4173df:	sbb    eax,0x42c940
  4173e4:	rcl    BYTE PTR [esi-0x28e5fa3a],0x42
  4173eb:	add    BYTE PTR [ebp-0x6d8a3d98],bl
  4173f1:	adc    eax,0x4fd6fe1c
  4173f6:	std    
  4173f7:	pop    esi
	...
  41740c:	pop    edx
  41740d:	dec    eax
  41740e:	enter  0x60c2,0x8d
  417412:	push   ebx
  417413:	mov    edi,eax
  417415:	psubsw mm5,QWORD PTR [edx+eiz*1+0x44]
  41741a:	addr16 inc esp
  41741c:	das    
  41741d:	mov    ch,0x60
  41741f:	fcmove st,st(3)
  417421:	stos   DWORD PTR es:[edi],eax
  417422:	addr16 das 
  417424:	mov    ch,0xf3
  417426:	sahf   
  417427:	mov    bl,0xfd
  417429:	mov    es,ebx
  41742b:	mov    ebp,0x2ba776b5
  417430:	cmp    BYTE PTR [edx+eax*2],cl
  417433:	push   edi
  417434:	dec    ebp
  417435:	ds pop ebx
  417437:	(bad)  
  417438:	cmp    ch,dh
  41743a:	xchg   esi,eax
  41743b:	(bad)  
  41743d:	hlt    
  41743e:	or     BYTE PTR [ebp+0x69b45670],cl
  417444:	mov    bh,0xc8
  417446:	mov    cl,0xe7
  417448:	mov    ah,bl
  41744a:	add    eax,DWORD PTR [eax]
  41744c:	cmp    BYTE PTR [edi],dh
  41744e:	or     DWORD PTR [ecx+ebp*8-0x70fffe8c],eax
  417455:	outs   dx,BYTE PTR ds:[esi]
  417456:	mov    cl,0x8a
  417458:	jo     0x4174b0
  41745a:	xchg   DWORD PTR [ecx+ebp*1+0x1f],ecx
  41745e:	xchg   esp,eax
  41745f:	(bad)  
  417460:	jmp    0x42fb:0xb2bf7f29
  417467:	add    DWORD PTR [ebp-0x1ebb778a],esi
  41746d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41746e:	scas   al,BYTE PTR es:[edi]
	...
  417483:	add    BYTE PTR [ebx-0x5f],ah
  417486:	sub    al,0x43
  417488:	dec    eax
  417489:	ja     0x41748c
  41748b:	mov    DWORD PTR [eax+0x22],esi
  41748e:	jg     0x41744f
  417490:	ret    0x6afa
  417493:	add    DWORD PTR [ebp-0x6e83798a],esi
  417499:	jbe    0x4174a5
  41749b:	test   BYTE PTR [ecx+0x74],dl
  41749e:	add    DWORD PTR [eax],eax
  4174a0:	inc    eax
  4174a1:	cmp    ebp,DWORD PTR [ecx]
  4174a3:	dec    edi
  4174a4:	pop    ds
  4174a5:	ja     0x417456
  4174a7:	push   esi
  4174a8:	lea    edx,[edi+ecx*4-0x40104b00]
  4174af:	retf   
  4174b0:	cmp    BYTE PTR [edi+0x1b310b27],cl
  4174b6:	jmp    0x944e29be
  4174bb:	sub    ebx,DWORD PTR [edx-0x67]
  4174be:	arpl   WORD PTR [esi-0x7718704c],ax
  4174c4:	icebp  
  4174c5:	jg     0x41745e
  4174c7:	mov    cl,bh
  4174c9:	dec    edi
  4174ca:	xchg   edi,eax
  4174cb:	mov    cl,0xe3
  4174cd:	ja     0x4174bc
  4174cf:	(bad)  
  4174d0:	mov    ch,0x8f
  4174d2:	jo     0x417494
  4174d4:	add    dl,BYTE PTR [edx]
  4174d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174d7:	or     bh,BYTE PTR [ecx]
  4174d9:	imul   ecx
  4174db:	add    esi,DWORD PTR [ebp+0x12144c0c]
  4174e1:	cdq    
  4174e2:	imul   edi,DWORD PTR [ecx-0x7718704c],0x0
	...
  4174f9:	add    BYTE PTR [eax],al
  4174fb:	add    BYTE PTR [ecx+0x73],bh
  4174fe:	pop    ss
  4174ff:	scas   al,BYTE PTR es:[edi]
  417500:	mov    bh,0xe1
  417502:	push   ss
  417503:	sub    al,0xe
  417505:	add    ebp,ecx
  417507:	add    edi,DWORD PTR [edx+edx*8]
  41750a:	scas   eax,DWORD PTR es:[edi]
  41750b:	and    BYTE PTR [edx],0x98
  41750e:	imul   eax,ecx,0xffffffb4
  417511:	(bad)  
  417512:	out    0x86,eax
  417514:	pop    ecx
  417515:	and    edi,0xffffffad
  417518:	pushf  
  417519:	sbb    bh,ah
  41751b:	outs   dx,DWORD PTR ds:[esi]
  41751c:	push   0x77
  41751e:	repnz pop eax
  417520:	mov    edx,0xaac05c87
  417525:	loopne 0x417599
  417527:	inc    edx
  417528:	cli    
  417529:	fstp   QWORD PTR [esi-0x70]
  41752c:	scas   al,BYTE PTR es:[edi]
  41752d:	ja     0x4174c8
  41752f:	(bad)  
  417530:	mov    ch,0x8f
  417532:	fs inc ebx
  417534:	push   es
  417535:	shr    DWORD PTR [edx-0x68],cl
  417538:	adc    BYTE PTR [eax-0x6e628012],0x0
  41753f:	jmp    0x31bc87fa
  417544:	rcl    BYTE PTR [esi-0x704f097b],0x0
  41754b:	mov    ecx,0x64f8cc33
  417550:	inc    ebp
  417551:	xor    ebp,eax
  417553:	push   0x74fd85ec
  417558:	sub    eax,0x8e178983
  41755d:	rcl    BYTE PTR [edx],1
  41755f:	jmp    0x417564
	...
  417574:	mov    dh,0x37
  417576:	add    bl,dh
  417578:	xor    eax,0xb6e8ff80
  41757d:	sbb    al,BYTE PTR [ebx-0x3b]
  417580:	dec    bl
  417582:	hlt    
  417583:	out    0x30,al
  417585:	ins    BYTE PTR es:[edi],dx
  417586:	(bad)  
  417587:	call   0xbd852e42
  41758c:	fcomp  DWORD PTR [eax-0x792ac37f]
  417592:	push   cs
  417593:	ins    BYTE PTR es:[edi],dx
  417594:	(bad)  
  417595:	pop    DWORD PTR [eax]
  417597:	jmp    0xae4a41dd
  41759c:	mov    al,0x91
  41759e:	add    cl,ch
  4175a0:	mov    dh,0x1a
  4175a2:	inc    eax
  4175a3:	std    
  4175a4:	or     BYTE PTR [esi-0x4066db3b],cl
  4175aa:	add    cl,ch
  4175ac:	mov    dh,0xe5
  4175ae:	sub    DWORD PTR [ecx+0x7650c31f],0xffffffca
  4175b5:	jle    0x417592
  4175b7:	sub    bh,BYTE PTR [ecx-0x1d537818]
  4175bd:	or     eax,eax
  4175bf:	aad    0x83
  4175c1:	clc    
  4175c2:	ss fs inc edx
  4175c5:	cs pop eax
  4175c7:	inc    ecx
  4175c8:	xlat   BYTE PTR ds:[ebx]
  4175c9:	dec    edx
  4175ca:	add    BYTE PTR [eax],al
  4175cc:	pushf  
  4175cd:	adc    ecx,DWORD PTR [esp+ebx*8+0x66]
  4175d1:	cdq    
  4175d2:	mov    edi,eax
  4175d4:	hlt    
  4175d5:	in     eax,0xd5
  4175d7:	inc    DWORD PTR [eax]
	...
  4175e9:	add    BYTE PTR [eax],al
  4175eb:	add    BYTE PTR [ebx+0x6675be06],ah
  4175f1:	xor    al,0x5
  4175f3:	(bad)  
  4175f4:	sbb    DWORD PTR [edx-0x6db3ffd3],esi
  4175fa:	pop    esi
  4175fb:	mov    ebx,DWORD PTR [ecx]
  4175fd:	mov    ds:0x98a04d8a,al
  417602:	mov    ch,0xf6
  417604:	dec    edi
  417605:	ror    BYTE PTR [esp+eax*2-0x3f7c6eac],1
  41760c:	test   al,0x85
  41760e:	in     eax,0x9c
  417610:	imul   esp,DWORD PTR [edi-0x6c307602],0xffffff83
  417617:	sar    BYTE PTR [ecx-0x6d],0x89
  41761b:	inc    ebp
  41761c:	call   0x1c42d7d9
  417621:	xchg   edx,eax
  417622:	mov    eax,edi
  417624:	xchg   DWORD PTR [ebp-0x23],eax
  417627:	call   0x3f5493
  41762c:	push   edi
  41762d:	inc    ebp
  41762e:	in     eax,dx
  41762f:	mov    esp,DWORD PTR [edi-0x3600af6d]
  417635:	ret    
  417636:	add    cl,dh
  417638:	popf   
  417639:	sbb    dh,BYTE PTR [edx+0xc]
  41763c:	xor    al,0xbd
  41763e:	(bad)  
  41763f:	push   DWORD PTR [ebx]
  417641:	xchg   ecx,eax
  417642:	inc    ecx
  417643:	or     al,0x47
  417645:	dec    ebp
  417646:	rol    DWORD PTR [eax+0x438a7705],1
  41764c:	nop
  41764d:	adc    eax,0x8b07
	...
  417662:	add    BYTE PTR [eax],al
  417664:	outs   dx,DWORD PTR ds:[esi]
  417665:	cdq    
  417666:	mov    BYTE PTR [esp+ebx*4],0x78
  41766a:	inc    BYTE PTR [ebx-0x4b]
  41766d:	push   0xffffff8c
  41766f:	inc    esp
  417670:	mov    eax,ds:0xfe8ab247
  417675:	jp     0x41767b
  417677:	dec    ebx
  417678:	lods   eax,DWORD PTR ds:[esi]
  417679:	daa    
  41767a:	sub    DWORD PTR [ebx+0x18be62],esi
  417680:	mul    BYTE PTR [edx-0x74]
  417683:	inc    edx
  417684:	mov    ecx,0xcf07cd01
  417689:	push   ebx
  41768a:	aas    
  41768b:	add    ebp,DWORD PTR [ebp+0x657c8676]
  417691:	aas    
  417692:	sub    DWORD PTR [ecx+ecx*1+0x77],eax
  417696:	add    DWORD PTR [ebp-0x754e7108],ecx
  41769c:	jb     0x4176c5
  41769e:	sbb    BYTE PTR [ebp+eax*8+0x75],dh
  4176a2:	mov    ecx,DWORD PTR [ebx]
  4176a4:	sbb    eax,0xb50091f1
  4176a9:	jmp    0x4176ef
  4176ab:	jae    0x41766d
  4176ad:	icebp  
  4176ae:	(bad)  
  4176af:	idiv   DWORD PTR [eax]
  4176b1:	pop    ebp
  4176b2:	nop
  4176b3:	or     eax,0xe73f0165
  4176b8:	cmp    eax,0x2cfe1604
  4176bd:	mov    edx,0x5a6688f4
  4176c2:	mov    al,BYTE PTR [ecx+edi*8+0x0]
  4176c6:	add    eax,0x3c
	...
  4176db:	add    BYTE PTR [ebp+0x5883089b],al
  4176e1:	push   cs
  4176e2:	add    BYTE PTR [ebp-0x45],dh
  4176e5:	sub    al,0xc1
  4176e7:	pop    ss
  4176e8:	mov    ah,0x21
  4176ea:	out    dx,al
  4176eb:	cmp    edi,DWORD PTR [edx+0x75]
  4176ee:	or     BYTE PTR [edi-0x46],0xfd
  4176f2:	adc    eax,0x10f3082
  4176f7:	wrmsr  
  4176f9:	(bad)  
  4176fa:	lods   eax,DWORD PTR ds:[esi]
  4176fb:	push   ss
  4176fc:	mov    ds:0xc2c32584,eax
  417701:	pop    ecx
  417703:	jmp    0x6b92:0xbc840241
  41770a:	add    BYTE PTR [esi*4-0x15e45bee],0x18
  417712:	cs mov ah,0x73
  417715:	cli    
  417716:	xlat   BYTE PTR ds:[ebx]
  417717:	push   ss
  417718:	loope  0x4176ad
  41771a:	paddw  mm4,mm7
  41771d:	mov    fs,edi
  41771f:	sbb    BYTE PTR [edx],0xfb
  417722:	cld    
  417723:	mov    cl,cl
  417725:	xchg   DWORD PTR [esi+ecx*1-0x3a],esp
  417729:	xchg   ebp,eax
  41772a:	xchg   edi,eax
  41772b:	mov    bh,BYTE PTR [eax+0x77]
  41772e:	xchg   esi,eax
  41772f:	pop    eax
  417730:	cmp    eax,DWORD PTR [eax+eiz*2+0x7a16cec3]
  417737:	jecxz  0x417778
  417739:	retf   0x88cb
  41773c:	jp     0x4176c2
  41773e:	push   0x1c
	...
  417753:	add    BYTE PTR [ebx],bl
  417755:	test   dh,ah
  417757:	add    ecx,DWORD PTR [edx-0xd379d6a]
  41775d:	adc    eax,0xd02de032
  417762:	rsm    
  417764:	enter  0x3412,0x60
  417768:	mov    dh,BYTE PTR [edi+0x56]
  41776b:	pop    edx
  41776c:	jmp    0x72de:0xeac07483
  417773:	ds push 0xffffff84
  417776:	sbb    al,0xf4
  417778:	sar    ecx,cl
  41777a:	fld    TBYTE PTR [ebx]
  41777c:	inc    BYTE PTR [eax]
  41777e:	jmp    0x64c0a586
  417783:	or     eax,0x6a00b746
  417788:	dec    ebp
  417789:	jnp    0x41778b
  41778b:	not    DWORD PTR [esp+edx*1+0x14691941]
  417792:	inc    ecx
  417793:	or     eax,0x51738261
  417798:	aas    
  417799:	dec    ebp
  41779a:	call   0xd19ce6
  41779f:	ins    DWORD PTR es:[edi],dx
  4177a0:	idiv   bl
  4177a2:	or     al,0x72
  4177a4:	jne    0x417821
  4177a6:	push   esi
  4177a7:	inc    ecx
  4177a8:	les    eax,FWORD PTR [esi-0x3]
  4177ab:	cs cmp esi,ecx
  4177ae:	xor    al,0x11
  4177b0:	add    eax,0x291efd72
  4177b5:	into   
  4177b6:	inc    eax
  4177b7:	bound  eax,QWORD PTR [eax]
	...
  4177c9:	add    BYTE PTR [eax],al
  4177cb:	add    BYTE PTR [ebp-0x75],dh
  4177ce:	xchg   DWORD PTR [edx+0x795784a],ebp
  4177d4:	stos   DWORD PTR es:[edi],eax
  4177d5:	add    DWORD PTR [ecx+0x5ee1a331],0x967420
  4177df:	xchg   esp,eax
  4177e0:	aas    
  4177e1:	ja     0x417764
  4177e3:	aad    0x15
  4177e5:	fimul  WORD PTR [ecx+0x10cc2cc1]
  4177eb:	jmp    0x93de:0xe274dc75
  4177f2:	(bad)  
  4177f3:	(bad)  
  4177f4:	test   al,0x15
  4177f6:	lock fs stos DWORD PTR es:[edi],eax
  4177f9:	sti    
  4177fa:	add    eax,0xac7776fa
  4177ff:	jmp    0x139707ba
  417804:	iret   
  417805:	adc    edi,DWORD PTR [ebx-0x43]
  417808:	sbb    DWORD PTR [ebx+0xc],ebp
  41780b:	push   edx
  41780c:	mov    ecx,0xad248b8f
  417811:	ror    BYTE PTR [ecx+0x523c1300],cl
  417817:	inc    ecx
  417819:	xchg   esi,eax
  41781a:	call   0xcf2662
  41781f:	mov    ecx,edx
  417821:	mov    ds:0x2180c084,eax
  417826:	or     cl,BYTE PTR [bx+di]
  417829:	inc    ebx
  41782a:	jmp    0xd54637f
  41782f:	inc    DWORD PTR [eax]
	...
  417841:	add    BYTE PTR [eax],al
  417843:	add    BYTE PTR [ecx-0x73bfecd2],al
  417849:	xadd   DWORD PTR [ecx+ecx*1],ecx
  41784d:	inc    ebx
  41784e:	jmp    0x71b423a3
  417853:	adc    bl,BYTE PTR [esi+ecx*4]
  417856:	mov    DWORD PTR [ebp-0x6c],edx
  417859:	js     0x4178af
  41785b:	or     BYTE PTR [esi],bl
  41785d:	fwait
  41785e:	je     0x417868
  417860:	adc    dh,BYTE PTR [esi-0x634429e3]
  417866:	dec    ebp
  417867:	lea    ecx,[ecx]
  417869:	stos   BYTE PTR es:[edi],al
  41786a:	push   eax
  41786b:	lea    ecx,[eax+0x60]
  41786e:	push   eax
  41786f:	call   0x402c82
  417874:	mov    DWORD PTR [edi-0x1],esp
  417877:	mov    dl,cl
  417879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41787a:	sub    bl,dl
  41787c:	mov    ebx,0x3ee44502
  417882:	dec    ebp
  417883:	lea    edx,[eax]
  417885:	pop    esp
  417886:	dec    ebp
  417887:	call   0x402982
  41788c:	mov    DWORD PTR [ecx-0x7],eax
  41788f:	push   eax
  417890:	jbe    0x417822
  417892:	add    ebx,edi
  417894:	ret    
  417895:	xor    ebp,esp
  417897:	fstp   TBYTE PTR [ebp+0xc85008e]
  41789d:	adc    DWORD PTR [edi],eax
  41789f:	push   esi
  4178a0:	mov    ch,0x10
  4178a2:	pop    esi
  4178a3:	aam    0xca
  4178a5:	adc    al,dl
  4178a7:	mov    edi,0x0
	...
  4178bc:	into   
  4178bd:	outs   dx,BYTE PTR ds:[esi]
  4178be:	adc    al,0x74
  4178c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178c1:	add    DWORD PTR [edi+0x320f050b],ecx
  4178c7:	aam    0xaa
  4178c9:	repnz mov BYTE PTR [ecx+ecx*8-0x1],al
  4178ce:	ror    DWORD PTR [edx-0x442618e],1
  4178d4:	mov    dh,0x33
  4178d6:	icebp  
  4178d7:	pop    esi
  4178d8:	jmp    0x417917
  4178da:	dec    edx
  4178db:	shl    DWORD PTR [ebp-0x7675518a],0xf6
  4178e2:	and    eax,0x7d54367b
  4178e7:	(bad)  
  4178e8:	cmp    DWORD PTR [edi*2+0x924624f],ebp
  4178ef:	inc    eax
  4178f1:	pop    edx
  4178f2:	xor    eax,DWORD PTR [edx-0x4b]
  4178f5:	aas    
  4178f6:	mov    edx,0xfb1c7584
  4178fb:	aas    
  4178fc:	jl     0x417931
  4178fe:	test   DWORD PTR [ebx-0x49],esi
  417901:	inc    ebp
  417902:	inc    ecx
  417903:	enter  0x72f7,0x1
  417907:	push   edi
  417908:	sub    bh,bl
  41790a:	fld    QWORD PTR [edi]
  41790c:	and    al,BYTE PTR [ecx+ebx*8+0x7e7676dd]
  417913:	imul   DWORD PTR [ebx+esi*8+0x11]
  417917:	jae    0x4178f1
  417919:	test   bh,0xfd
  41791c:	out    dx,eax
  41791d:	mov    ch,0x4
	...
  417933:	add    BYTE PTR [ecx+0x12ad1c8a],al
  417939:	cmp    dl,BYTE PTR [ecx]
  41793b:	xor    ebp,0xffffffba
  41793e:	in     eax,dx
  41793f:	push   ebp
  417940:	and    edx,DWORD PTR [eax-0x7088ce09]
  417946:	xor    eax,0xf92ba913
  41794b:	ret    
  41794c:	retf   0x7fd9
  41794f:	mov    cl,0xc9
  417951:	add    BYTE PTR [esi+0x4b9abbba],0xf6
  417958:	repnz (bad) 
  41795a:	adc    eax,0xaae0737f
  41795f:	mov    bh,0x8
  417961:	adc    eax,0xd9aee7db
  417966:	pop    esi
  417967:	stc    
  417968:	xchg   edx,eax
  417969:	bound  ebp,QWORD PTR [edx-0x4f98c1fd]
  41796f:	mov    BYTE PTR [edi-0x6],bl
  417972:	add    BYTE PTR [ecx-0x340b0480],cl
  417978:	mov    ecx,0x6ac72181
  41797d:	cld    
  41797e:	cld    
  41797f:	sbb    ebx,eax
  417981:	pusha  
  417982:	adc    esi,DWORD PTR es:[esi]
  417985:	dec    edi
  417986:	xchg   ebx,eax
  417987:	out    0xeb,eax
  417989:	inc    eax
  41798a:	div    DWORD PTR [ecx]
  41798c:	test   DWORD PTR [edi+0x2ba912b6],0x683ac3d9
  417996:	or     al,0x18
	...
  4179ac:	xor    eax,DWORD PTR [eax-0x4d4f396]
  4179b2:	in     al,0x1b
  4179b4:	aaa    
  4179b5:	jns    0x41799d
  4179b7:	adc    al,BYTE PTR [ebx-0x5ba00b80]
  4179bd:	iret   
  4179be:	out    0xb2,eax
  4179c0:	push   0xf7aeaa14
  4179c5:	xlat   BYTE PTR ds:[ebx]
  4179c6:	jb     0x417953
  4179c8:	xchg   BYTE PTR [edi+edi*1+0xc7668c],dh
  4179cf:	repnz cmp ch,BYTE PTR [esp+ecx*1+0xdf01e62]
  4179d7:	xor    al,0x45
  4179d9:	lods   al,BYTE PTR ds:[esi]
  4179da:	or     al,0xea
  4179dc:	push   cs
  4179dd:	clc    
  4179de:	push   ebp
  4179df:	cmp    BYTE PTR [esi-0x6106db04],ah
  4179e5:	fs aam 0x86
  4179e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179e9:	(bad)  
  4179ea:	js     0x4179ed
  4179ec:	xor    dl,bh
  4179ee:	js     0x4179a2
  4179f0:	outs   dx,BYTE PTR ds:[esi]
  4179f1:	add    esi,DWORD PTR [edi+eiz*8+0x36]
  4179f5:	pop    es
  4179f6:	jl     0x4179e1
  4179f8:	inc    edx
  4179f9:	mov    WORD PTR [eax-0x7],gs
  4179fc:	(bad)  
  4179fd:	rol    DWORD PTR [eax],1
  4179ff:	push   esi
  417a00:	lea    ebp,[ebx]
  417a02:	adc    ch,BYTE PTR [ecx+0x69386ab6]
  417a08:	cs sti 
  417a0a:	add    BYTE PTR [edi-0x6765db6],dl
	...
  417a24:	into   
  417a25:	adc    eax,0x11c72ef4
  417a2a:	clc    
  417a2b:	es inc edx
  417a2d:	cwde   
  417a2e:	call   0xfdbf272f
  417a33:	add    al,BYTE PTR [eax+0xc]
  417a36:	jo     0x4179d1
  417a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a39:	(bad)  
  417a3a:	call   0xfdbefce6
  417a3f:	xchg   ebx,eax
  417a40:	es in  eax,0xe8
  417a43:	mov    ds:0x81fd7ded,al
  417a48:	es pop ebp
  417a4a:	inc    ecx
  417a4b:	jmp    0xfbee1e15
  417a50:	idiv   BYTE PTR [esi+0x5b]
  417a53:	bound  edi,QWORD PTR [ebp+ebx*8-0x3e]
  417a57:	loope  0x417a0f
  417a59:	or     bh,bh
  417a5b:	dec    DWORD PTR [ecx-0x5be48e2d]
  417a61:	cld    
  417a62:	push   ecx
  417a63:	and    al,0xd8
  417a65:	cld    
  417a66:	adc    DWORD PTR [eax],edx
  417a68:	dec    esp
  417a69:	lea    ecx,[esp+esi*2]
  417a6c:	leave  
  417a6d:	adc    dh,bh
  417a6f:	or     ch,BYTE PTR [ecx+0x5709fe7a]
  417a75:	ret    
  417a76:	inc    ebp
  417a77:	test   esi,edi
  417a79:	es jecxz 0x417a3e
  417a7c:	enter  0x5392,0x8b
  417a80:	inc    eax
  417a81:	adc    al,0xe1
  417a83:	clc    
  417a84:	sbb    eax,0x91b0
	...
  417a99:	add    BYTE PTR [eax],al
  417a9b:	add    BYTE PTR [edx+edx*4+0x27275651],cl
  417aa2:	add    eax,0x567a5a8b
  417aa7:	push   eax
  417aa8:	adc    eax,0xf31c2148
  417aad:	xchg   BYTE PTR [ecx+0x12],dh
  417ab0:	dec    esp
  417ab1:	xchg   edx,eax
  417ab2:	xchg   DWORD PTR [eax+edi*4+0x7f],eax
  417ab6:	mov    al,BYTE PTR [esi-0x44]
  417ab9:	cli    
  417aba:	inc    ecx
  417abb:	and    al,0xb4
  417abd:	cld    
  417abe:	inc    ebx
  417abf:	and    al,0x46
  417ac1:	pop    ebx
  417ac2:	mov    BYTE PTR [eax+edi*2+0x62],al
  417ac6:	mov    WORD PTR [eax+edi*2+0x42],?
  417aca:	push   ebp
  417acb:	call   0x3f466b
  417ad0:	rol    DWORD PTR [edi+0x21],0x24
  417ad4:	dec    esp
  417ad5:	sti    
  417ad6:	(bad)  
  417ad7:	lea    eax,[edx+0x6a]
  417ada:	dec    ebp
  417adb:	call   FWORD PTR [edi+0x13]
  417ade:	ret    
  417adf:	adc    al,0x13
  417ae1:	pop    eax
  417ae2:	mov    BYTE PTR [eax+edi*4+0x73],bl
  417ae6:	mov    BYTE PTR [ebp+esi*4-0x74],dh
  417aea:	call   0x1fe8dd6
  417aef:	add    BYTE PTR [esi],dh
  417af1:	aam    0xe8
  417af3:	daa    
  417af4:	mov    ch,0xff
  417af6:	lds    esp,FWORD PTR [ebx]
  417af8:	xchg   ebp,eax
  417af9:	icebp  
  417afa:	mov    BYTE PTR [edi],0x2e
  417afd:	mov    al,0x0
  417aff:	mov    eax,DWORD PTR [eax]
	...
  417b11:	add    BYTE PTR [eax],al
  417b13:	add    BYTE PTR [ebp+0x78],dh
  417b16:	jp     0x417b63
  417b18:	cdq    
  417b19:	pop    eax
  417b1a:	jp     0x417b5f
  417b1c:	xchg   ecx,eax
  417b1d:	pop    esp
  417b1e:	add    BYTE PTR [esp+eiz*2+0x28000167],al
  417b25:	lods   al,BYTE PTR ds:[esi]
  417b26:	call   0xed608042
  417b2b:	adc    al,0xb4
  417b2d:	test   WORD PTR [edi+0xd0f2b2],di
  417b34:	mov    ch,0x66
  417b36:	fwait
  417b37:	daa    
  417b38:	inc    eax
  417b39:	pop    ebx
  417b3a:	in     eax,0x3b
  417b3c:	in     eax,dx
  417b3d:	into   
  417b3e:	fwait
  417b3f:	mov    bh,0xb5
  417b41:	data16 jl 0x417b0a
  417b44:	in     eax,0xd5
  417b46:	aam    0xfe
  417b48:	stos   DWORD PTR es:[edi],eax
  417b49:	fimul  WORD PTR [eax+0x6f]
  417b4c:	mov    ah,0x66
  417b4e:	adc    BYTE PTR ds:0x27ab22e,dh
  417b54:	dec    ebp
  417b55:	popa   
  417b56:	adc    dh,bh
  417b58:	push   edx
  417b59:	and    ebx,edi
  417b5b:	mov    ecx,?
  417b5d:	dec    edx
  417b5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b5f:	dec    edi
  417b60:	inc    edx
  417b61:	and    esp,ebp
  417b63:	xor    edi,DWORD PTR [edx]
  417b65:	pop    esp
  417b66:	mov    eax,ds:0x84667515
  417b6b:	ret    
  417b6c:	mov    ecx,0xa18cdb10
  417b71:	push   edx
  417b72:	int    0x57
  417b74:	or     eax,0x4c1a90
	...
  417b89:	add    BYTE PTR [eax],al
  417b8b:	add    BYTE PTR [edx],dl
  417b8d:	jge    0x417bfb
  417b8f:	enter  0xdbd6,0x37
  417b93:	jnp    0x417b90
  417b95:	(bad)  
  417b97:	sar    ebx,cl
  417b99:	(bad)
  417b9c:	arpl   WORD PTR [esi+0x42a88e7],cx
  417ba2:	repnz xor BYTE PTR [esi-0x4d],0x47
  417ba7:	mov    ah,0xdb
  417ba9:	mov    ds:0x8f92f21b,al
  417bae:	jb     0x417bec
  417bb0:	mov    bh,0x88
  417bb2:	jg     0x417b57
  417bb4:	in     al,0x7c
  417bb6:	mov    cs,WORD PTR [eax+0x3b6b8cfa]
  417bbc:	mov    dl,0x7c
  417bbe:	out    0x80,eax
  417bc0:	div    BYTE PTR [ebx+0x542fb407]
  417bc6:	pop    ss
  417bc7:	movntq QWORD PTR [ebp+ebx*1+0x1c],mm7
  417bcc:	(bad)  
  417bcd:	(bad)  
  417bce:	call   0x630705d6
  417bd3:	cmp    ebp,DWORD PTR ds:0x78513f90
  417bd9:	jl     0x417c21
  417bdb:	sbb    edi,edi
  417bdd:	jmp    0xb42ffce1
  417be2:	xchg   edi,eax
  417be3:	stos   DWORD PTR es:[edi],eax
  417be4:	pop    edx
  417be5:	push   edi
  417be6:	jbe    0x417bec
  417be8:	mov    ch,0xa
  417bea:	stos   DWORD PTR es:[edi],eax
  417beb:	out    0xf2,eax
  417bed:	fild   QWORD PTR [eax+ecx*8+0x0]
	...
  417c01:	add    BYTE PTR [eax],al
  417c03:	add    BYTE PTR [esi+0x7b7ab7bb],dl
  417c09:	fild   WORD PTR [ecx+0x3b0adbdf]
  417c0f:	call   0x4290bc6
  417c14:	sbb    eax,0xb2290073
  417c19:	jge    0x417b9c
  417c1b:	and    eax,0x5dc012b5
  417c20:	inc    ebx
  417c21:	or     DWORD PTR [ebp+eax*1+0x1],edi
  417c25:	or     esi,ecx
  417c27:	(bad)  
  417c28:	into   
  417c29:	or     DWORD PTR [ebp+eax*1-0x3],eax
  417c2d:	fsubp  st(0),st
  417c2f:	sbb    eax,0x64fd7da6
  417c34:	jbe    0x417c36
  417c36:	imul   esp,DWORD PTR [edx+0x4a],0x8b6214b0
  417c3d:	or     DWORD PTR [ecx],eax
  417c3f:	jb     0x417c83
  417c41:	mov    al,0x2c
  417c43:	ins    BYTE PTR es:[edi],dx
  417c44:	or     al,ah
  417c46:	add    al,0x81
  417c48:	xchg   edi,eax
  417c49:	pop    edi
  417c4a:	std    
  417c4b:	mov    ?,WORD PTR [edx]
  417c4d:	cmp    al,0x74
  417c4f:	ss mov es,WORD PTR cs:[ecx]
  417c53:	out    0x4c,eax
  417c55:	(bad)
  417c59:	mov    ebx,0x46b91900
  417c5e:	shl    BYTE PTR [esi-0x3d],cl
  417c61:	add    eax,0x93b76a0e
  417c66:	add    edx,esp
	...
  417c7c:	dec    ebx
  417c7d:	jp     0x417cf3
  417c7f:	add    eax,0x83e8e095
  417c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c85:	jns    0x417c84
  417c87:	call   0xe1bc830b
  417c8c:	mov    bl,0x1
  417c8e:	sub    DWORD PTR [ecx+0x41],eax
  417c91:	popa   
  417c92:	std    
  417c93:	es iret 
  417c95:	xchg   esp,eax
  417c96:	std    
  417c97:	xchg   ebp,eax
  417c98:	push   edx
  417c99:	mov    bl,0x87
  417c9b:	scas   al,BYTE PTR es:[edi]
  417c9c:	pop    esi
  417c9d:	push   es
  417c9e:	add    DWORD PTR [eax+0x73],esp
  417ca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ca2:	call   0xff02d6a7
  417ca7:	inc    DWORD PTR [esi-0x7d]
  417caa:	push   ebx
  417cab:	call   0x403b07
  417cb0:	fcom   QWORD PTR [ebx-0x2c51fd17]
  417cb6:	pop    esi
  417cb7:	pop    esi
  417cb8:	ja     0x417cb2
  417cba:	in     al,0x5d
  417cbc:	dec    esi
  417cbd:	mov    BYTE PTR [eax],al
  417cbf:	push   ebp
  417cc0:	xchg   edi,eax
  417cc1:	scas   eax,DWORD PTR es:[edi]
  417cc2:	sub    ah,0x80
  417cc5:	inc    eax
  417cc6:	push   ebx
  417cc7:	mov    esp,DWORD PTR [ecx-0x27817f71]
  417ccd:	mov    ss,WORD PTR [ebp+0xf]
  417cd0:	push   ecx
  417cd1:	mov    al,ds:0xf7dcfffd
  417cd6:	jae    0x417ce0
  417cd8:	pop    edi
  417cd9:	xor    bh,cl
  417cdb:	add    BYTE PTR [ecx+0x52],bl
  417cde:	stc    
  417cdf:	push   eax
	...
  417cf4:	mov    dh,0x81
  417cf6:	push   ebx
  417cf7:	call   0x3f71a1
  417cfc:	daa    
  417cfd:	lods   al,BYTE PTR ds:[esi]
  417cfe:	mov    BYTE PTR [ebp+0x24],bl
  417d01:	adc    ebx,edx
  417d03:	jne    0x417c98
  417d05:	pusha  
  417d06:	mov    ebp,0x8f0ee9
  417d0b:	add    BYTE PTR [esi+0x58],ah
  417d0e:	mov    WORD PTR [ebp-0x40],?
  417d11:	sub    esp,ebp
  417d13:	call   0x6a42103a
  417d18:	(bad)  
  417d19:	cli    
  417d1a:	jl     0x417cdc
  417d1c:	adc    al,0x96
  417d1e:	fdiv   QWORD PTR [esi+0x458b8e4c]
  417d24:	rol    BYTE PTR [ebx-0x2],0x75
  417d28:	cwde   
  417d29:	inc    eax
  417d2a:	in     eax,0x39
  417d2c:	cmp    ecx,DWORD PTR [ebp-0x4e4a7500]
  417d32:	mov    cl,0x4f
  417d34:	out    0x90,al
  417d36:	fld    TBYTE PTR [esi-0x4c]
  417d39:	push   0x7c788cb0
  417d3e:	jp     0x417d84
  417d40:	and    DWORD PTR [eax+0x691afc71],edx
  417d46:	cmp    DWORD PTR [edx],0x52fcdbb5
  417d4c:	sbb    eax,0x2fe323e
  417d51:	dec    ebp
  417d52:	push   eax
  417d53:	imul   edi,DWORD PTR [ebp+0xe38edb],0x0
	...
  417d69:	add    BYTE PTR [eax],al
  417d6b:	add    BYTE PTR [ebp-0x4a4aa0a0],cl
  417d71:	push   0xc3302897
  417d76:	adc    al,0x57
  417d78:	int    0xe0
  417d7a:	push   ebx
  417d7b:	call   edx
  417d7d:	cld    
  417d7e:	inc    esp
  417d7f:	dec    edi
  417d80:	cmp    BYTE PTR [ebx-0x54cfb0bc],dh
  417d86:	sub    BYTE PTR [edi+0x4f],cl
  417d89:	inc    ebp
  417d8a:	lods   al,BYTE PTR ds:[esi]
  417d8b:	mov    WORD PTR [eax],gs
  417d8d:	repz sbb DWORD PTR [eax-0x7df30596],ebp
  417d94:	jns    0x417e09
  417d96:	xchg   BYTE PTR [edi-0x3287cbdf],bh
  417d9c:	ds iret 
  417d9e:	mov    dl,0x8c
  417da0:	or     bl,bl
  417da2:	jle    0x417de8
  417da4:	jge    0x417d75
  417da6:	call   0x870bf87c
  417dab:	mov    edi,0xcf9c8de9
  417db0:	jecxz  0x417dd8
  417db2:	add    DWORD PTR [edx-0x47],ebp
  417db5:	sbb    eax,0xcf5d447e
  417dba:	add    al,0xd2
  417dbc:	push   edx
  417dbd:	nop
  417dbe:	xchg   BYTE PTR es:[edx],cl
  417dc1:	add    al,0xc7
  417dc3:	js     0x417dbe
  417dc5:	xchg   DWORD PTR [edx-0x42],esp
  417dc8:	inc    edx
  417dc9:	add    eax,0x54e70fb4
  417dce:	outs   dx,DWORD PTR ds:[esi]
  417dcf:	out    dx,eax
	...
  417de4:	lds    eax,FWORD PTR [esi]
  417de6:	scas   eax,DWORD PTR es:[edi]
  417de7:	xchg   ebx,eax
  417de8:	sub    eax,0x827a7be0
  417ded:	test   DWORD PTR [ebp+0x72fb6a7a],0x2751bec1
  417df7:	clc    
  417df8:	mov    ch,0x66
  417dfa:	lahf   
  417dfb:	add    al,0xb5
  417dfd:	(bad)  
  417dfe:	bound  ebp,QWORD PTR [ecx+0xb5566ea]
  417e04:	jmp    0x417e7e
  417e06:	dec    edi
  417e07:	cld    
  417e08:	mov    dl,0x8f
  417e0a:	out    0x1b,eax
  417e0c:	(bad)  
  417e0d:	pop    esi
  417e0e:	scas   al,BYTE PTR es:[edi]
  417e0f:	or     edi,DWORD PTR [edi]
  417e11:	pop    eax
  417e12:	ins    BYTE PTR es:[edi],dx
  417e13:	das    
  417e14:	mov    ebx,0xc30af413
  417e19:	js     0x417e7f
  417e1b:	mov    ecx,0x3ffdeae
  417e20:	lds    ecx,FWORD PTR [edi-0x6e088719]
  417e26:	pop    ss
  417e27:	or     ebp,DWORD PTR [eax]
  417e29:	mov    BYTE PTR [esi-0xf],dh
  417e2c:	pop    esi
  417e2d:	mov    ds:0x77360427,al
  417e32:	call   0x5ef5b031
  417e37:	or     eax,DWORD PTR [ebx+0x7af7d40c]
  417e3d:	add    ebp,edi
  417e3f:	popf   
  417e40:	mov    ecx,0x829b97d7
  417e45:	add    DWORD PTR [eax+0x3],ebp
	...
  417e5b:	add    BYTE PTR [esi],al
  417e5d:	push   0x79a1fb00
  417e62:	std    
  417e63:	pusha  
  417e64:	je     0x417dea
  417e66:	call   0xfdbb1f23
  417e6b:	jb     0x417ee1
  417e6d:	nop
  417e6e:	std    
  417e6f:	test   eax,0xe53653a
  417e74:	inc    esp
  417e75:	test   BYTE PTR [ecx+0x76584efa],cl
  417e7b:	test   eax,0x9603e5b6
  417e80:	mov    esi,0xbfeebe6f
  417e85:	xlat   BYTE PTR ds:[ebx]
  417e86:	push   edi
  417e87:	push   0xffffffbe
  417e89:	jns    0x417e98
  417e8b:	gs mov cl,0x7a
  417e8e:	std    
  417e8f:	(bad)  
  417e90:	push   esp
  417e91:	push   ecx
  417e92:	add    al,0xf1
  417e94:	in     eax,dx
  417e95:	test   DWORD PTR [ecx-0x7f34f57],eax
  417e9b:	out    0x32,eax
  417e9d:	mov    ch,bh
  417e9f:	cmp    al,0xdd
  417ea1:	or     cl,BYTE PTR [ecx-0x19]
  417ea4:	or     DWORD PTR [ebx],ecx
  417ea6:	or     al,0x1
  417ea8:	add    BYTE PTR [eax-0x1b],dh
  417eab:	mov    ecx,0x2bff79af
  417eb0:	mov    ebp,0xf4dd4304
  417eb5:	xchg   edx,eax
  417eb6:	sbb    ah,dh
  417eb8:	mov    edi,0x75720ccb
  417ebd:	mov    eax,esi
  417ebf:	in     eax,dx
	...
  417ed4:	mov    cs,WORD PTR [ecx+0xa8d24fd]
  417eda:	inc    ebx
  417edb:	icebp  
  417edc:	or     eax,esp
  417ede:	or     al,0x6a
  417ee0:	push   esi
  417ee1:	inc    DWORD PTR [eax]
  417ee3:	pusha  
  417ee4:	dec    esi
  417ee5:	out    0x87,eax
  417ee7:	mov    eax,ds:0xc5ed42
  417eec:	sbb    al,0xf
  417eee:	std    
  417eef:	(bad)  
  417ef0:	fmul   QWORD PTR [ebx-0x4bb8a1a3]
  417ef6:	mov    edi,0x3df65c08
  417efb:	add    al,0xb
  417efd:	mov    dh,BYTE PTR [ecx+0x24]
  417f00:	inc    esp
  417f01:	clc    
  417f02:	jne    0x417f1c
  417f04:	iret   
  417f05:	rcl    BYTE PTR [ecx],cl
  417f07:	call   0x4041d0
  417f0c:	sub    ebp,DWORD PTR [edx-0x55d43fe6]
  417f12:	pop    esi
  417f13:	ret    0x9308
  417f16:	push   ebx
  417f17:	mov    edx,DWORD PTR [eax]
  417f19:	or     eax,0x41cf34e9
  417f1e:	mov    dh,cl
  417f20:	xchg   DWORD PTR [ecx+0x15],edx
  417f23:	mov    edx,esp
  417f25:	(bad)  
  417f26:	push   ebp
  417f27:	mov    DWORD PTR [ecx-0xfba777d],ebp
  417f2d:	test   al,0xf
  417f30:	pop    eax
  417f31:	or     edi,ebp
  417f33:	dec    esp
  417f35:	or     edi,DWORD PTR [eax+0x14]
	...
  417f4c:	fadd   QWORD PTR ds:0xfdeb6a3d
  417f52:	jl     0x417f38
  417f54:	je     0x417ee9
  417f56:	or     al,0xb5
  417f58:	int3   
  417f59:	xchg   edx,eax
  417f5a:	or     eax,0x4d7ddab7
  417f5f:	por    mm2,QWORD PTR [ecx+0xd]
  417f63:	push   eax
  417f64:	daa    
  417f65:	ror    DWORD PTR [ebp+0x6a],1
  417f68:	test   BYTE PTR [edi],ah
  417f6a:	mov    WORD PTR [ebp+0x30],?
  417f6d:	xchg   ebx,eax
  417f6e:	sbb    al,0xbe
  417f70:	adc    ecx,DWORD PTR [ecx-0xa6f3b7e]
  417f76:	mov    ebp,0x7c77b574
  417f7b:	int    0x3e
  417f7d:	sar    BYTE PTR [ebx+0x44],0x69
  417f81:	pop    ss
  417f82:	sbb    DWORD PTR [esi-0x7cf84a9e],eax
  417f88:	jne    0x417fbd
  417f8a:	in     al,0x82
  417f8c:	jge    0x417f33
  417f8e:	sbb    edi,DWORD PTR [ebx]
  417f90:	fild   QWORD PTR [edx-0x54]
  417f93:	aaa    
  417f94:	fdiv   QWORD PTR [esi+ecx*4+0x18]
  417f98:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  417f9a:	jne    0x418013
  417f9c:	int    0x10
  417f9e:	sbb    eax,0x84687575
  417fa3:	mov    edi,0xcf97a0c9
  417fa8:	sbb    bh,BYTE PTR [ebp+0x7e]
  417fab:	mov    edi,0x447ba11e
	...
  417fc4:	or     DWORD PTR [ecx],eax
  417fc6:	ret    0x203
  417fc9:	fisttp DWORD PTR [edx+ecx*4]
  417fcc:	pop    eax
  417fcd:	jo     0x41800e
  417fcf:	aas    
  417fd0:	shl    DWORD PTR [edi+0x7c],1
  417fd3:	inc    esp
  417fd4:	jmp    0xe3403938
  417fd9:	xor    al,0x7d
  417fdb:	mov    edi,0xbfd42761
  417fe0:	jb     0x417f68
  417fe2:	stos   DWORD PTR es:[edi],eax
  417fe3:	enter  0x63f7,0x1
  417fe7:	push   ebx
  417fe8:	push   0x9d707bbe
  417fed:	icebp  
  417fee:	mov    edi,0x7e113e03
  417ff3:	mov    edi,0x77815121
  417ff8:	shl    DWORD PTR [edi-0x65],0x1
  417ffc:	(bad)  
  417ffd:	jae    0x417feb
  417fff:	push   esi
  418000:	inc    eax
  418001:	jg     0x417fec
  418003:	addr16 popf 
  418005:	nop
  418006:	ffree  st(3)
  418008:	adc    BYTE PTR [edx],0x27
  41800b:	out    dx,eax
  41800c:	xchg   edx,eax
  41800d:	xchg   ebx,eax
  41800e:	aaa    
  41800f:	or     BYTE PTR [ebx-0x2b],dh
  418012:	fs inc ebx
  418014:	loope  0x417fa0
  418016:	push   0x3b
  418018:	arpl   WORD PTR [ecx-0x21],bp
  41801b:	jl     0x41800d
  41801d:	mov    ebx,DWORD PTR [edi-0x55]
  418020:	scas   al,BYTE PTR es:[edi]
  418021:	or     BYTE PTR [ebx+0x72dabadf],cl
  418027:	inc    ecx
	...
  41803c:	pop    edx
  41803d:	jle    0x41805c
  41803f:	or     BYTE PTR [ebx],bh
  418041:	or     al,0x27
  418043:	(bad)  
  418044:	sbb    ecx,eax
  418046:	daa    
  418047:	test   eax,0xff29d889
  41804c:	and    cl,BYTE PTR [edx]
  41804e:	test   al,0xeb
  418050:	aaa    
  418051:	clc    
  418052:	jmp    0x418057
  418054:	mov    DWORD PTR [edi-0x1f493c9e],ebp
  41805a:	jb     0x418004
  41805c:	(bad)  
  41805d:	xchg   DWORD PTR [esi],esi
  41805f:	jns    0x417fe3
  418061:	stos   DWORD PTR es:[edi],eax
  418062:	cmp    DWORD PTR [ebx+0x2fbfb032],eax
  418068:	sti    
  418069:	je     0x418031
  41806b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41806c:	jg     0x418078
  41806e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41806f:	xchg   ecx,eax
  418070:	mov    cl,0x10
  418072:	lahf   
  418073:	pop    es
  418074:	fist   WORD PTR [ecx-0x740bbc06]
  41807a:	out    0xf6,eax
  41807c:	or     ebx,edi
  41807e:	repz jp 0x4180f6
  418081:	xchg   edi,eax
  418082:	cmp    eax,0xe78f7a46
  418087:	add    edx,DWORD PTR [ebx]
  418089:	mov    ecx,0x8b27a69d
  41808e:	push   0xa
  418090:	push   ss
  418091:	add    DWORD PTR [ecx],eax
  418093:	in     al,dx
  418094:	jne    0xedf6ac97
  41809a:	mov    DWORD PTR [eax-0x3900196e],edi
	...
  4180b4:	stc    
  4180b5:	les    ecx,FWORD PTR [eax]
  4180b7:	inc    ecx
  4180b8:	mov    al,ds:0x87e900f9
  4180bd:	xor    al,0xc1
  4180bf:	pushf  
  4180c0:	fild   QWORD PTR [eax-0x7f]
  4180c3:	dec    ebp
  4180c4:	gs hlt 
  4180c6:	cmp    esi,DWORD PTR [edi]
  4180c8:	(bad)  
  4180c9:	rol    DWORD PTR [eax],1
  4180cb:	jmp    0xf6975ad7
  4180d0:	ret    0x111
  4180d3:	jmp    0x309ce88e
  4180d8:	mov    edx,0x22298475
  4180dd:	adc    BYTE PTR [esi-0x16],dh
  4180e0:	mov    dh,0x8f
  4180e2:	cmp    DWORD PTR [edx+eiz*1+0x74],0x912d6d0e
  4180ea:	add    cl,ch
  4180ec:	aaa    
  4180ed:	repz adc cl,ch
  4180f0:	or     eax,DWORD PTR [edx]
  4180f2:	(bad)  
  4180f3:	jmp    0xd9f1:0x5c898fb6
  4180fa:	call   0xfdb73927
  4180ff:	ins    DWORD PTR es:[edi],dx
  418100:	jbe    0x418087
  418102:	test   BYTE PTR [eax],bl
  418104:	mov    dh,0x8f
  418106:	add    BYTE PTR [edx-0x3],ah
  418109:	das    
  41810a:	adc    ch,BYTE PTR [ecx]
  41810c:	mov    cl,0x38
  41810e:	adc    bh,al
  418110:	div    DWORD PTR [ebx+0x52]
  418113:	sahf   
  418114:	mov    ebp,DWORD PTR [edx+edi*4-0x79]
	...
  41812c:	mov    ebx,0xbd248771
  418131:	or     eax,0x7a3b00f8
  418136:	sub    DWORD PTR [ebx],0x69008f8f
  41813c:	pop    esp
  41813d:	idiv   ebp
  41813f:	call   FWORD PTR [esi+ecx*4+0x4dfa2c03]
  418146:	std    
  418147:	adc    BYTE PTR [ebx+eax*1+0xf6274fd],0x75
  41814f:	jge    0x4181ad
  418151:	add    ecx,DWORD PTR ds:0xfe7f21ff
  418157:	jne    0x4181a1
  418159:	xchg   edi,eax
  41815a:	mov    ah,0xf9
  41815c:	mov    ecx,DWORD PTR [ecx-0x70a0e318]
  418162:	add    BYTE PTR [ebx-0x76350a0c],cl
  418168:	stc    
  418169:	call   0x89fe:0x89bb99e5
  418170:	push   ecx
  418171:	lahf   
  418172:	xor    al,al
  418174:	xor    dh,ah
  418176:	inc    esp
  418177:	hlt    
  418178:	mov    DWORD PTR [edi-0x17],ecx
  41817b:	mov    DWORD PTR [edi+0x3f],ebx
  41817e:	mov    al,BYTE PTR [ebp+0xc]
  418181:	popa   
  418182:	repz cmp edx,DWORD PTR [edx+0x20]
  418186:	sbb    dh,dh
  418188:	or     al,0x8e
  41818a:	je     0x4181a2
  41818c:	lods   al,BYTE PTR ds:[esi]
  41818d:	mov    WORD PTR [esp+ebp*8+0x0],?
	...
  4181a1:	add    BYTE PTR [eax],al
  4181a3:	add    ah,dh
  4181a5:	test   edx,edi
  4181a7:	(bad)  
  4181a8:	sti    
  4181a9:	bsr    ecx,DWORD PTR [edi]
  4181ac:	push   eax
  4181ad:	aad    0xff
  4181af:	(bad)  
  4181b0:	fdivr  st(7),st
  4181b2:	inc    esp
  4181b3:	in     al,dx
  4181b4:	neg    esi
  4181b6:	mov    al,BYTE PTR [ebp+0x28]
  4181b9:	stc    
  4181ba:	xchg   ebp,eax
  4181bb:	test   ah,cl
  4181bd:	mov    es,WORD PTR [eax]
  4181bf:	cmp    esi,DWORD PTR [ebp-0x13a871c6]
  4181c5:	mov    ds:0xabf70ef4,eax
  4181ca:	hlt    
  4181cb:	push   edx
  4181cc:	call   0x468:0x92ff84b8
  4181d3:	je     0x41818e
  4181d5:	adc    BYTE PTR [ebp+0x77e982cd],dh
  4181db:	inc    esp
  4181dc:	mov    DWORD PTR [edi+0x68b5836c],ebx
  4181e2:	add    DWORD PTR [ebx-0x78884b10],ecx
  4181e8:	cmp    DWORD PTR [eax+0x1],ebp
  4181eb:	add    BYTE PTR [esi+0x52158da2],bl
  4181f1:	clc    
  4181f2:	test   bh,bh
  4181f4:	dec    edx
  4181f5:	push   0xa970ef19
  4181fa:	add    ecx,DWORD PTR [edx-0x50867b10]
  418200:	xor    eax,0x1e000168
  418205:	ja     0x41827f
  418207:	jg     0x418209
	...
  418219:	add    BYTE PTR [eax],al
  41821b:	add    BYTE PTR ds:0x84000168,dh
  418221:	jecxz  0x41821b
  418223:	pop    ss
  418224:	sbb    BYTE PTR fs:[ecx],bl
  418227:	psubq  mm4,QWORD PTR [eax+0x4]
  41822b:	mov    bh,BYTE PTR [eax+0x5c]
  41822e:	sbb    BYTE PTR [ebp+0x3b],dh
  418231:	js     0x418256
  418233:	inc    edx
  418234:	mov    ch,0xb2
  418236:	add    edx,DWORD PTR [ecx+ebx*1]
  418239:	jbe    0x4181fc
  41823b:	jmp    ebx
  41823d:	mov    dl,0xf4
  41823f:	(bad)  
  418240:	pusha  
  418241:	fs add al,0x74
  418244:	mov    ebp,0xeb37ee39
  418249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41824a:	add    al,0x8b
  41824c:	fisttp QWORD PTR [esi+0xcae3f6a]
  418252:	ret    0x3af4
  418255:	loopne 0x418240
  418257:	add    esi,DWORD PTR [ebp+0x2f2c8ed9]
  41825d:	sti    
  41825e:	out    dx,eax
  41825f:	sbb    ecx,DWORD PTR [ebx+0x63]
  418262:	jle    0x418268
  418264:	aas    
  418265:	js     0x4182c7
  418267:	xchg   BYTE PTR [esi-0x4cfb91f3],cl
  41826d:	or     esp,DWORD PTR [esi+0x2]
  418270:	mov    ch,0x8f
  418272:	push   0xffffff86
  418274:	bound  edx,QWORD PTR [eax+0x519ece62]
  41827a:	stos   BYTE PTR es:[edi],al
  41827b:	add    ebp,ecx
  41827d:	xchg   ebp,eax
  41827e:	jb     0x4182b4
	...
  418294:	int    0x46
  418296:	outs   dx,DWORD PTR ds:[esi]
  418297:	add    esi,DWORD PTR [ebp+0x5235ea8f]
  41829d:	sub    edi,DWORD PTR ds:0xac074304
  4182a3:	adc    esi,DWORD PTR [ecx]
  4182a5:	push   eax
  4182a6:	out    dx,al
  4182a7:	jg     0x4182b6
  4182a9:	(bad)  
  4182aa:	out    0x3,eax
  4182ac:	ds dec ecx
  4182ae:	add    BYTE PTR [ebx+0x3a],0x90
  4182b2:	out    0x3,eax
  4182b4:	mov    dh,0x49
  4182b6:	jo     0x418276
  4182b8:	push   ds
  4182b9:	mov    ebp,0xfb0baffd
  4182be:	fild   DWORD PTR [eax-0x47b047be]
  4182c4:	push   0xffffffcf
  4182c6:	out    0xeb,eax
  4182c8:	fs jmp 0x787d86b5
  4182ce:	pusha  
  4182cf:	sbb    ebp,0xe17900e9
  4182d5:	stc    
  4182d6:	dec    ebp
  4182d7:	(bad)  
  4182d8:	jle    0x41833d
  4182da:	add    BYTE PTR [edi],bl
  4182dc:	xor    dh,BYTE PTR [ecx]
  4182de:	cmp    cl,al
  4182e0:	lods   al,BYTE PTR ds:[esi]
  4182e1:	cmc    
  4182e2:	add    cl,ch
  4182e4:	mov    edx,DWORD PTR [edx+0x74]
  4182e7:	cmp    eax,0x62eccc42
  4182ec:	cmp    DWORD PTR [ebx],ecx
  4182ee:	add    cl,ch
  4182f0:	mov    dh,0x8e
  4182f2:	leave  
  4182f3:	je     0x418356
  4182f5:	verw   cx
	...
  41830c:	mov    dh,0x67
  41830e:	push   ebx
  41830f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418310:	mov    dh,0x71
  418312:	test   BYTE PTR [ecx-0x177ff45a],ch
  418318:	mov    dh,0x8f
  41831a:	mov    DWORD PTR [edx+eiz*2-0x4e9277fa],esp
  418321:	pop    DWORD PTR [eax]
  418323:	fs jo  0x418321
  418326:	adc    al,0x72
  418328:	xor    DWORD PTR [edi],ecx
  41832a:	add    cl,ch
  41832c:	mov    dh,0x4
  41832e:	adc    al,0xd1
  418330:	loopne 0x418338
  418332:	rol    BYTE PTR [ecx-0x13],1
  418335:	inc    esp
  418336:	std    
  418337:	es sub cl,ah
  41833a:	in     al,dx
  41833b:	jb     0x4182c1
  41833d:	adc    DWORD PTR [ecx-0x16],0x7
  418341:	sar    ch,0x59
  418344:	cmp    DWORD PTR [edi-0x68f11700],ecx
  41834a:	retf   
  41834b:	(bad)  
  41834c:	mov    bh,0x5
  41834e:	inc    ebx
  41834f:	add    eax,0xe98417b0
  418354:	mov    dh,0x8f
  418356:	xor    edi,ebx
  418358:	sub    edx,DWORD PTR [edx-0x77]
  41835b:	and    al,0xe9
  41835d:	mov    ch,0xc6
  41835f:	pop    ebp
  418360:	xchg   ebx,eax
  418361:	mov    dh,0xde
  418363:	dec    edi
  418364:	xchg   edi,eax
  418365:	jb     0x4183da
  418367:	add    al,ah
  418369:	push   ds
  41836a:	js     0x418398
  41836c:	pop    edi
  41836d:	dec    esp
  41836e:	sub    al,ch
	...
  418384:	nop
  418385:	pop    esi
  418386:	sti    
  418387:	call   FWORD PTR [ecx+0x4c]
  41838a:	or     eax,DWORD PTR [ebx+esi*4+0x2700008a]
  418391:	fdiv   st,st(0)
  418393:	mov    eax,ecx
  418395:	imul   ebp,DWORD PTR [edi],0xfffffff6
  418398:	mov    edx,0xa3f471ac
  41839d:	sbb    DWORD PTR [eax+0x37939c00],ecx
  4183a3:	(bad)  
  4183a4:	xchg   ebx,eax
  4183a5:	pop    ss
  4183a6:	add    BYTE PTR [eax],0x8c
  4183a9:	xchg   ebx,eax
  4183aa:	mov    ch,0xc8
  4183ac:	mov    WORD PTR [ebx-0x3f6a9a00],ss
  4183b2:	hlt    
  4183b3:	jne    0x41840a
  4183b5:	ret    
  4183b6:	call   0xfed3881e
  4183bb:	mov    ecx,DWORD PTR [ecx]
  4183bd:	arpl   WORD PTR [edi+0x491ea440],ax
  4183c3:	in     al,dx
  4183c4:	aad    0xd3
  4183c6:	jo     0x418353
  4183c8:	sbb    DWORD PTR [ebx-0x79],esp
  4183cb:	inc    eax
  4183cc:	pusha  
  4183cd:	push   ds
  4183ce:	dec    ecx
  4183cf:	in     al,dx
  4183d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183d1:	shl    DWORD PTR [ebx+ecx*4+0x59],cl
  4183d5:	jg     0x41835c
  4183d7:	jo     0x41841d
  4183d9:	push   ds
  4183da:	inc    ecx
  4183db:	in     al,dx
  4183dc:	retf   0x7cd2
  4183df:	add    BYTE PTR [edi-0x5dc41341],al
  4183e5:	adc    DWORD PTR [eax+eax*8+0x0],0x0
	...
  4183fc:	xchg   esp,eax
  4183fd:	sar    DWORD PTR [ecx-0x75],cl
  418400:	leave  
  418401:	arpl   WORD PTR [ebp+0x411cc470],ax
  418407:	hlt    
  418408:	mov    ch,0xf9
  41840a:	les    ebx,FWORD PTR [ebx+ebx*2-0x559e0307]
  418411:	std    
  418412:	mov    es,WORD PTR [eax]
  418414:	mov    ch,0x78
  418416:	mov    WORD PTR [ebx-0x3b],es
  418419:	and    eax,0x6acd2074
  41841e:	int    0xfd
  418420:	mov    edx,0xb2f045e1
  418425:	mov    BYTE PTR [eax],bl
  418427:	call   0xfe40b8fe
  41842c:	cs mov bl,0xf4
  41842f:	push   0xffffffc1
  418431:	stc    
  418432:	les    edx,FWORD PTR [eiz*8-0x7534ee00]
  418439:	in     eax,0xe9
  41843b:	fld    DWORD PTR [eax-0x17760003]
  418441:	(bad)  
  418442:	cli    
  418443:	aas    
  418444:	add    bh,cl
  418446:	jne    0x418465
  418448:	scas   al,BYTE PTR es:[edi]
  418449:	shl    DWORD PTR [ebp+0x19],0x9e
  41844d:	mov    dh,0x78
  41844f:	arpl   WORD PTR [esi-0x14a07d4a],bx
  418455:	inc    eax
  418456:	xchg   ebx,eax
  418457:	call   0x144129a6
  41845c:	mov    cl,0x9e
  41845e:	inc    ebx
	...
  418473:	add    ah,bl
  418475:	dec    edi
  418476:	test   cl,cl
  418478:	xor    al,BYTE PTR [ecx+0xbf33952]
  41847e:	inc    ebx
  41847f:	aaa    
  418480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418481:	sub    al,0x77
  418483:	cmp    ebp,DWORD PTR [esi]
  418485:	cmp    BYTE PTR [ecx],ch
  418487:	xchg   DWORD PTR [eax+ebp*8-0x74],esi
  41848b:	inc    ebx
  41848c:	add    eax,0x2e2c44f1
  418491:	or     ebp,ebp
  418493:	xchg   DWORD PTR [edi+ecx*4+0x5b],esi
  418497:	lea    esi,[esi+0x7b]
  41849a:	jo     0x41850f
  41849c:	ins    DWORD PTR es:[edi],dx
  41849d:	sbb    ch,BYTE PTR [eax+esi*8]
  4184a0:	sti    
  4184a1:	into   
  4184a2:	dec    ebx
  4184a3:	add    ebp,DWORD PTR [esp+ebx*8]
  4184a6:	sar    DWORD PTR [ebx+esi*8],cl
  4184a9:	popf   
  4184aa:	push   ebx
  4184ab:	ret    
  4184ac:	cmp    eax,0x768d34d0
  4184b1:	pop    edi
  4184b2:	pusha  
  4184b3:	jae    0x418442
  4184b5:	sbb    bl,BYTE PTR [esp+esi*8]
  4184b8:	popf   
  4184b9:	sahf   
  4184ba:	mov    WORD PTR [eax],es
  4184bc:	stos   DWORD PTR es:[edi],eax
  4184bd:	ja     0x4184c3
  4184bf:	jmp    DWORD PTR [eax-0x66b99d93]
  4184c5:	js     0x4184df
  4184c7:	out    dx,eax
  4184c8:	nop
  4184c9:	ins    DWORD PTR es:[edi],dx
  4184ca:	unpcklps xmm5,XMMWORD PTR [ebx-0x2f]
  4184ce:	out    0x0,eax
  4184d0:	test   eax,0xb543d93b
  4184d5:	sbb    BYTE PTR [edx],ch
  4184d7:	in     al,dx
	...
  4184ec:	lods   eax,DWORD PTR ds:[esi]
  4184ed:	div    edi
  4184ef:	loope  0x4184e5
  4184f1:	(bad)  
  4184f2:	push   esi
  4184f3:	push   ss
  4184f4:	adc    DWORD PTR [edx-0x6830fc59],eax
  4184fa:	iret   
  4184fb:	xchg   ebx,eax
  4184fc:	pop    ebp
  4184fd:	ins    DWORD PTR es:[edi],dx
  4184fe:	add    BYTE PTR ds:[ecx-0x4abbea65],ah
  418505:	(bad)  
  418506:	nop
  418507:	test   BYTE PTR [ebp+0x6d],ch
  41850a:	adc    bl,BYTE PTR [edx]
  41850c:	test   BYTE PTR [esp+esi*8-0x51],ch
  418510:	(bad)  
  418511:	iret   
  418512:	out    0x0,eax
  418514:	test   eax,0xa9760e7f
  418519:	ins    BYTE PTR es:[edi],dx
  41851a:	jl     0x418527
  41851c:	adc    BYTE PTR [ebx-0x708b1e41],al
  418522:	add    BYTE PTR [edx-0x6],ch
  418525:	fwait
  418526:	pop    ebp
  418527:	(bad)  
  418528:	pop    ecx
  418529:	push   esp
  41852a:	shl    DWORD PTR [edx-0x7f],0xef
  41852e:	push   ecx
  41852f:	xor    al,0x83
  418531:	push   ss
  418532:	jo     0x418565
  418534:	mov    dl,BYTE PTR [esi]
  418536:	js     0x418565
  418538:	hlt    
  418539:	jg     0x418519
  41853b:	sub    bh,BYTE PTR [ecx-0x6147fe40]
  418541:	fs std 
  418543:	fcom   QWORD PTR [edx]
  418545:	add    BYTE PTR [eax-0x17],0x63
  418549:	lds    ecx,FWORD PTR [ecx+0x568bdd1d]
  41854f:	sahf   
	...
  418564:	int3   
  418565:	imul   ebx,ebx,0x2a
  418568:	mov    ecx,0x6d6ad816
  41856d:	fwait
  41856e:	add    DWORD PTR [edx+0x1459e392],0xdba4808a
  418578:	test   BYTE PTR [edi+0x6a8fc4e8],0xfd
  41857f:	push   0x71
  418581:	push   0x73
  418583:	cli    
  418584:	fcom   QWORD PTR [edi+0x6a517968]
  41858a:	std    
  41858b:	loop   0x41860b
  41858d:	push   0x13
  41858f:	cmc    
  418590:	jo     0x418560
  418592:	add    BYTE PTR [eax-0x3fcf8917],ah
  418598:	jbe    0x4185b1
  41859a:	add    cl,ch
  41859c:	mov    dh,0x8e
  41859e:	add    edx,ebp
  4185a0:	adc    dh,cl
  4185a2:	add    dl,ah
  4185a4:	or     esp,eax
  4185a6:	adc    eax,0x8bf38162
  4185ab:	cdq    
  4185ac:	jle    0x418618
  4185ae:	add    BYTE PTR ss:[esi+ebp*2-0x9f40036],ah
  4185b6:	adc    BYTE PTR [esi-0x4c],dl
  4185b9:	pop    ecx
  4185ba:	(bad)  
  4185bb:	dec    DWORD PTR [ebx]
  4185bd:	jns    0x4185c4
  4185bf:	add    DWORD PTR [ebx+esi*8-0x5],esi
  4185c3:	dec    eax
  4185c4:	jo     0x418566
  4185c6:	xlat   BYTE PTR ds:[ebx]
  4185c7:	inc    ebx
	...
  4185dc:	mov    eax,ds:0xdeac116c
  4185e1:	iret   
  4185e2:	add    BYTE PTR [edi-0x66],bl
  4185e5:	out    dx,al
  4185e6:	xchg   ebx,eax
  4185e8:	xchg   edi,eax
  4185e9:	push   ecx
  4185ea:	add    al,0x0
  4185ec:	lahf   
  4185ed:	lds    eax,FWORD PTR [edi+0x6cea4cf0]
  4185f3:	add    BYTE PTR [edi],ah
  4185f5:	dec    esp
  4185f6:	je     0x418619
  4185f8:	daa    
  4185f9:	aad    0x68
  4185fb:	cmp    esp,DWORD PTR [edx+eiz*8+0x3]
  4185ff:	sub    ecx,DWORD PTR [edi+0x1c]
  418602:	inc    esi
  418603:	push   0xd8279527
  418608:	pop    ds
  418609:	cmc    
  41860a:	push   0xde83b400
  41860f:	inc    ebx
  418610:	mov    WORD PTR [edx+0x11],gs
  418613:	lods   al,BYTE PTR ds:[esi]
  418614:	outs   dx,BYTE PTR ds:[esi]
  418615:	iret   
  418616:	add    bl,ch
  418618:	xchg   dl,al
  41861a:	mov    ebx,0xcdaa10
  41861f:	push   edi
  418620:	jmp    0x4185a9
  418622:	lods   al,BYTE PTR ds:[esi]
  418623:	adc    bl,BYTE PTR [edi+ecx*4]
  418626:	xchg   DWORD PTR [esi+0x64],esi
  418629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41862a:	fimul  WORD PTR [edi]
  41862c:	push   cs
  41862d:	pop    esi
  41862e:	push   esi
  41862f:	inc    DWORD PTR [eax]
  418631:	mov    bl,0x18
  418633:	mov    edx,DWORD PTR [eax-0x4d]
  418636:	sbb    BYTE PTR [esi-0x35],dl
  418639:	xchg   esp,edi
  41863b:	fnsave [ebp+0x890135]
	...
  418651:	add    BYTE PTR [eax],al
  418653:	add    ch,bh
  418655:	cmc    
  418656:	lds    ecx,FWORD PTR [esi+esi*1]
  418659:	mov    ?,esi
  41865b:	je     0x41862c
  41865d:	add    esi,edi
  41865f:	adc    ebx,DWORD PTR [ecx+0x47]
  418662:	inc    ecx
  418663:	add    BYTE PTR ds:0xf2fde714,cl
  418669:	cmc    
  41866a:	cld    
  41866b:	std    
  41866c:	pusha  
  41866d:	or     BYTE PTR gs:[di-0x18],cl
  418672:	in     al,dx
  418673:	std    
  418674:	fisubr DWORD PTR [ebp-0x27]
  418677:	std    
  418678:	test   al,0x64
  41867a:	fild   DWORD PTR [ecx-0x4b]
  41867d:	scas   eax,DWORD PTR es:[edi]
  41867e:	pop    ecx
  41867f:	jmp    0x89065636
  418684:	mov    ch,0x78
  418686:	add    DWORD PTR [ecx],eax
  418688:	mov    eax,0xb541db44
  41868d:	aas    
  41868e:	pop    ecx
  41868f:	push   0xac15020a
  418694:	(bad)  
  418695:	mov    eax,0xddf35d04
  41869a:	mov    edi,0x1607759
  41869f:	push   ebx
  4186a0:	cs adc al,0x7f
  4186a3:	in     al,0x7d
  4186a5:	div    eax
  4186a7:	test   BYTE PTR [ebp-0x59aefe88],dh
  4186ad:	int    0x56
  4186af:	push   ebp
  4186b0:	popf   
  4186b1:	arpl   bx,di
  4186b3:	retf   0x78f6
  4186b6:	or     al,0x84
	...
  4186cc:	pop    es
  4186cd:	js     0x4186d0
  4186cf:	add    BYTE PTR [ebp+0x28],bl
  4186d2:	aad    0xfd
  4186d4:	inc    edx
  4186d5:	cld    
  4186d6:	les    ecx,FWORD PTR ds:0x41331
  4186dc:	mov    ch,0x8f
  4186de:	loopne 0x41873e
  4186e0:	mov    ecx,0xb5a0639a
  4186e5:	(bad)  
  4186e6:	out    0x3a,eax
  4186e8:	jle    0x418769
  4186ea:	fimul  WORD PTR [ebp+0x3e78f24]
  4186f0:	cmp    al,0xe4
  4186f2:	out    dx,eax
  4186f3:	push   ebp
  4186f4:	or     eax,0xf8fcfbc1
  4186f9:	adc    ah,BYTE PTR [edi]
  4186fb:	or     eax,0x3e70d39
  418700:	mov    ch,0x2a
  418702:	neg    ebp
  418704:	je     0x418695
  418706:	ds std 
  418708:	(bad)  
  418709:	xor    edi,ecx
  41870b:	inc    ebx
  41870c:	mov    ch,0x77
  41870e:	cwde   
  41870f:	jmp    0xe33a:0xf37269c8
  418716:	or     ebx,DWORD PTR [esp+esi*1]
  418719:	imul   ebp,DWORD PTR [esi-0x6208ef89],0xe78fb58b
  418723:	add    dh,ah
  418725:	mov    ebx,0xa6b540b5
  41872a:	sub    eax,0x869c0b60
  41872f:	jbe    0x418731
	...
  418741:	add    BYTE PTR [eax],al
  418743:	add    BYTE PTR [ebp-0x4145aec],bh
  418749:	imul   esi,DWORD PTR [esi-0x4],0x5db0c58c
  418750:	fucom  st(1)
  418752:	stc    
  418753:	mov    dh,bh
  418755:	jg     0x4187b5
  418757:	jbe    0x41870a
  418759:	adc    al,0x2d
  41875b:	cld    
  41875c:	out    0x97,al
  41875e:	aas    
  41875f:	les    edx,FWORD PTR [ebx+0x69]
  418762:	inc    esi
  418763:	call   0x13f5f059
  418768:	cs int3 
  41876a:	add    BYTE PTR ds:0xdd736ae5,cl
  418770:	xor    ebp,ebx
  418772:	or     BYTE PTR [ecx],dl
  418774:	daa    
  418775:	jnp    0x418774
  418777:	push   ds
  418778:	das    
  418779:	aam    0x24
  41877b:	cmc    
  41877c:	xor    eax,0xc694fd68
  418781:	push   ss
  418782:	inc    esp
  418783:	int    0xae
  418785:	ja     0x418795
  418787:	adc    al,BYTE PTR [ecx]
  418789:	imul   ecx,DWORD PTR [ecx+0xc430e2a],0xffffffe8
  418790:	mov    dh,0xc2
  418792:	std    
  418793:	cld    
  418794:	adc    bh,BYTE PTR [esi+0x40]
  418797:	jmp    0xd652647b
  41879c:	fs fwait
  41879e:	std    
  41879f:	push   esp
  4187a0:	shr    DWORD PTR [edx+0x13],0xc5
  4187a4:	in     al,dx
  4187a5:	into   
  4187a6:	add    BYTE PTR [edx+0x0],ch
	...
  4187b9:	add    BYTE PTR [eax],al
  4187bb:	add    ch,dh
  4187bd:	fwait
  4187be:	pop    ebp
  4187bf:	pop    ss
  4187c0:	pop    edx
  4187c1:	push   ss
  4187c2:	jecxz  0x4187d0
  4187c4:	jp     0x418830
  4187c6:	inc    esi
  4187c7:	icebp  
  4187c8:	jecxz  0x418810
  4187ca:	aaa    
  4187cb:	cmp    eax,0x6d0ddbd5
  4187d0:	repz lea eax,[eax]
  4187d3:	jmp    0x31665b15
  4187d8:	loope  0x418851
  4187da:	jmp    0x87d1415d
  4187df:	sub    eax,0xe8a8afd5
  4187e4:	loop   0x418794
  4187e6:	mov    ebp,DWORD PTR [ebp+0x6ce8d7ca]
  4187ec:	lods   eax,DWORD PTR ds:[esi]
  4187ed:	push   0x7c5fbefd
  4187f2:	lods   al,BYTE PTR ds:[esi]
  4187f3:	sti    
  4187f4:	test   BYTE PTR [edi+0x31640051],0xe8
  4187fb:	inc    DWORD PTR [ebx-0x5df3ee9c]
  418801:	rol    BYTE PTR [eax],1
  418803:	pop    ecx
  418804:	inc    ebp
  418805:	adc    eax,ecx
  418807:	inc    edi
  418809:	push   ds
  41880a:	test   DWORD PTR [eax+edi*8-0x7d],ebx
  41880e:	test   DWORD PTR [eax+ebp*8-0x69],ebx
  418812:	test   al,0x2
  418814:	repz out 0x6a,eax
  418817:	add    DWORD PTR [esp+ecx*4],ebx
  41881a:	xchg   esi,ebx
  41881c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41881d:	and    ah,ch
  41881f:	inc    DWORD PTR [eax]
	...
  418831:	add    BYTE PTR [eax],al
  418833:	add    BYTE PTR [ebx],al
  418835:	sbb    eax,ebx
  418837:	test   edi,eax
  418839:	xchg   esp,eax
  41883a:	test   BYTE PTR [esp+ebx*8+0x4083008b],dh
  418841:	mov    BYTE PTR [eax+eax*1+0xefd8bcc],al
  418848:	pop    ecx
  418849:	add    DWORD PTR [eax],eax
  41884b:	add    ah,bl
  41884d:	sbb    BYTE PTR [esp+0x8c4c],cl
  418854:	dec    edi
  418855:	jmp    0x41885b
  418857:	add    BYTE PTR [ebx-0x63ff7d19],dl
  41885d:	xchg   ebx,eax
  41885e:	mov    DWORD PTR [eax+edi*2-0x25],eax
  418862:	mov    DWORD PTR [eax+ebp*2-0x79],edi
  418866:	call   0xcdfb85
  41886b:	dec    eax
  41886d:	xchg   BYTE PTR [eax-0x776c7400],al
  418873:	inc    esp
  418874:	push   0x78848782
  418879:	sbb    eax,DWORD PTR [eax]
  41887b:	add    BYTE PTR [ebx+edi*2+0x6d],bl
  41887f:	or     al,0x4d
  418881:	xchg   ebx,eax
  418882:	cmp    BYTE PTR [ebp+esi*4-0x6c],0x15
  418887:	add    dl,al
  418889:	in     al,dx
  41888a:	push   cs
  41888b:	dec    DWORD PTR [edx+0x79]
  41888e:	imul   edi,ebp,0x42
  418891:	sbb    eax,0x443a341d
  418896:	rcl    DWORD PTR [edx],1
	...
  4188ac:	jne    0x418926
  4188ae:	cli    
  4188af:	je     0x418882
  4188b1:	inc    eax
  4188b2:	jmp    0xfac77623
  4188b7:	std    
  4188b8:	mov    eax,ds:0xa8fd3154
  4188bd:	mov    eax,0xe1b54013
  4188c2:	jne    0x4188e8
  4188c4:	shr    ebx,1
  4188c6:	cli    
  4188c7:	or     eax,0x19931
  4188cc:	mov    ch,0xc3
  4188ce:	cmp    eax,0xd4407d24
  4188d3:	or     DWORD PTR [eax+edi*2-0xe3ab474],esi
  4188da:	inc    eax
  4188db:	and    al,0xb1
  4188dd:	cs inc ebx
  4188df:	or     al,0xb5
  4188e1:	fistp  QWORD PTR [ebx+0x8]
  4188e4:	sti    
  4188e5:	jns    0x4188e9
  4188e7:	add    esp,esi
  4188e9:	out    dx,eax
  4188ea:	inc    edx
  4188eb:	push   0xff68ae7b
  4188f0:	popf   
  4188f1:	fdivr  st,st(2)
  4188f3:	std    
  4188f4:	mov    ds:0x9a106d05,al
  4188f9:	or     DWORD PTR [eax],0xffffffe8
  4188fc:	and    al,0x30
  4188fe:	idiv   ebp
  418900:	cmp    al,0xb4
  418902:	and    BYTE PTR [eax],bl
  418904:	cmp    BYTE PTR [eax],bh
  418906:	ins    DWORD PTR es:[edi],dx
  418907:	sbb    BYTE PTR [edx-0x5c],bh
  41890a:	and    BYTE PTR [eax-0x76fe874b],al
	...
  418924:	xor    DWORD PTR [edi-0x704a73f5],ecx
  41892a:	out    0xeb,eax
  41892c:	dec    esi
  41892d:	call   0x3e7:0x145a03e8
  418934:	mov    ch,0x4d
  418936:	jmp    0x2c54:0x3db4003
  41893d:	retf   
  41893e:	or     ebx,DWORD PTR [ebp+ebx*1-0x21]
  418942:	jge    0x41893d
  418944:	sub    BYTE PTR [eax],bl
  418946:	stos   BYTE PTR es:[edi],al
  418947:	or     ebp,DWORD PTR [ebx+ecx*1]
  41894a:	ret    
  41894b:	xor    DWORD PTR [ebp+0x748ae78f],0xffffff93
  418952:	bound  eax,QWORD PTR [eax+0x3e70bd1]
  418958:	mov    ch,0xf9
  41895a:	leave  
  41895b:	mov    dh,BYTE PTR [edi+edi*2+0x64]
  41895f:	js     0x4188fa
  418961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418962:	(bad)  
  418963:	jmp    0x41898b
  418965:	xor    esp,edi
  418967:	add    ecx,DWORD PTR [edi-0x4e]
  41896a:	ins    BYTE PTR es:[edi],dx
  41896b:	ja     0x4188fe
  41896d:	mov    bh,0x2f
  41896f:	in     al,dx
  418970:	sbb    dh,BYTE PTR [ebx]
  418972:	out    0x3,eax
  418974:	cmp    al,0x4e
  418976:	pop    ss
  418977:	xchg   DWORD PTR [ecx-0x55],edi
  41897a:	call   DWORD PTR [ebx-0x48]
  41897d:	fcmovnbe st,st(7)
  41897f:	clc    
  418980:	sub    DWORD PTR [ebx+eax*1-0x1714b714],ebp
  418987:	add    eax,DWORD PTR [eax]
	...
  418999:	add    BYTE PTR [eax],al
  41899b:	add    BYTE PTR [edi],cl
  41899d:	stos   DWORD PTR es:[edi],eax
  41899e:	jb     0x41897b
  4189a0:	cs in  al,0xcb
  4189a3:	sbb    ebp,ebp
  4189a5:	ja     0x418a0d
  4189a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189a8:	mov    ch,0x8f
  4189aa:	jb     0x41896c
  4189ac:	in     eax,0xc0
  4189ae:	jle    0x418a1f
  4189b0:	shr    DWORD PTR [edi-0x13a67f00],1
  4189b6:	(bad)  
  4189b7:	call   0x41cb3494
  4189bc:	cmp    esp,esp
  4189be:	and    al,0x21
  4189c0:	stc    
  4189c1:	ja     0x418a2f
  4189c3:	test   DWORD PTR [esi-0x19d97671],esi
  4189c9:	mov    esi,0xafa2bdfd
  4189ce:	call   0xfda66404
  4189d3:	pusha  
  4189d4:	repnz stos DWORD PTR es:[edi],eax
  4189d6:	adc    al,0x37
  4189d8:	jmp    0x89ba:0x92ed20ab
  4189df:	popf   
  4189e0:	mov    edx,0xa3168387
  4189e5:	xchg   edi,eax
  4189e6:	mov    DWORD PTR [edx+esi*4+0x11d95b16],ecx
  4189ed:	mov    WORD PTR [ecx-0x74846563],cs
  4189f3:	lods   eax,DWORD PTR ds:[esi]
  4189f4:	rol    BYTE PTR [edi-0x54a411b0],cl
  4189fa:	je     0x418a6e
  4189fc:	mul    BYTE PTR [edx+0x74]
  4189ff:	add    eax,0x0
	...
  418a14:	gs mov edx,0x62c9d9e8
  418a1a:	std    
  418a1b:	into   
  418a1c:	inc    ebp
  418a1d:	stos   DWORD PTR es:[edi],eax
  418a1e:	ins    BYTE PTR es:[edi],dx
  418a1f:	jo     0x418a96
  418a21:	stos   DWORD PTR es:[edi],eax
  418a22:	sbb    cl,dl
  418a24:	js     0x418a70
  418a26:	std    
  418a27:	mov    dh,0x36
  418a29:	jecxz  0x418a4f
  418a2b:	aad    0xb6
  418a2d:	loopne 0x418a3c
  418a2f:	loop   0x418a4e
  418a31:	xchg   esp,eax
  418a32:	je     0x418a67
  418a34:	sub    bl,ah
  418a36:	and    al,0xf1
  418a38:	inc    ecx
  418a39:	ret    
  418a3a:	and    al,0xf5
  418a3c:	lahf   
  418a3d:	xchg   esi,eax
  418a3e:	cmp    DWORD PTR [eax],eax
  418a40:	mov    ecx,0xa3067497
  418a45:	jae    0x418a5f
  418a47:	(bad)  
  418a48:	jmp    0x418aa6
  418a4a:	xchg   DWORD PTR [eax+esi*2-0x78],edi
  418a4e:	cmp    edi,0x4489b780
  418a54:	mov    al,0xd3
  418a56:	call   0xcce0e5
  418a5b:	mov    edx,DWORD PTR [eax]
  418a5d:	test   BYTE PTR [ebx+eax*4],bl
  418a60:	jb     0x418a52
  418a62:	add    BYTE PTR [ecx+0x4487f812],cl
  418a68:	sar    BYTE PTR [edi-0x7b],0x46
  418a6c:	cmp    BYTE PTR [ecx],bl
  418a6e:	inc    ecx
  418a6f:	adc    dl,dl
  418a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a72:	ins    BYTE PTR es:[edi],dx
  418a73:	add    BYTE PTR [ebp+0x8958dd],ah
	...
  418a89:	add    BYTE PTR [eax],al
  418a8b:	add    BYTE PTR [edx-0x3c],ah
  418a8e:	in     eax,0x41
  418a90:	mov    ecx,0x508dfb5c
  418a95:	test   BYTE PTR [eax-0x18],cl
  418a98:	sbb    DWORD PTR [esi-0x30a80003],edx
  418a9e:	and    al,0x1c
  418aa0:	push   edi
  418aa1:	(bad)  
  418aa2:	adc    BYTE PTR [ebx],al
  418aa4:	or     eax,0x12684613
  418aa9:	mov    ds:0xb4f5006c,al
  418aae:	stc    
  418aaf:	(bad)  
  418ab0:	sti    
  418ab1:	mov    esi,0xa74cec87
  418ab6:	dec    dl
  418ab8:	(bad)  
  418ab9:	mov    eax,DWORD PTR [eax]
  418abb:	push   ebx
  418abc:	pop    ss
  418abd:	enter  0x5608,0xc3
  418ac1:	fild   QWORD PTR [ebp+0x33]
  418ac4:	pop    ebx
  418ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ac6:	(bad)  [edi+eax*8-0x5c]
  418aca:	jns    0x418ad8
  418acc:	mov    ch,0x7a
  418ace:	pop    esi
  418acf:	call   0xfe37b280
  418ad4:	cmp    DWORD PTR [ecx],edi
  418ad6:	ins    DWORD PTR es:[edi],dx
  418ad7:	pop    ebx
  418ad8:	or     eax,0xb541d349
  418add:	fst    DWORD PTR [eax]
  418adf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ae0:	(bad)  
  418ae1:	mov    eax,0x5ce03704
  418ae6:	jae    0x418b2a
  418ae8:	arpl   WORD PTR ds:0x44b404fa,bp
  418aee:	xor    BYTE PTR [ecx+0x0],cl
	...
  418b04:	cmp    DWORD PTR [ebp-0x35a46e17],0xa23d81f6
  418b0e:	ins    DWORD PTR es:[edi],dx
  418b0f:	sub    BYTE PTR [eax+edi*4+0x78b50089],bl
  418b16:	add    al,BYTE PTR [ebx]
  418b18:	ror    edx,1
  418b1a:	inc    edx
  418b1b:	add    BYTE PTR [esi],dh
  418b1d:	xor    DWORD PTR [ebp+0x0],ebp
  418b20:	mov    BYTE PTR [ecx+eax*4],bh
  418b23:	js     0x418aad
  418b25:	js     0x418b97
  418b27:	ss mov eax,cs:0x62128ee9
  418b2e:	repz xor ebp,0xffffffe4
  418b32:	add    dh,dh
  418b34:	mov    ch,0x77
  418b36:	jo     0x418b5e
  418b38:	jp     0x418ae7
  418b3a:	jne    0x418b48
  418b3c:	pop    ecx
  418b3d:	add    ch,BYTE PTR [eax+edx*1-0xd]
  418b41:	mov    ch,0x4
  418b43:	std    
  418b44:	mov    al,ds:0xb54012e4
  418b49:	dec    ecx
  418b4a:	ins    DWORD PTR es:[edi],dx
  418b4b:	adc    BYTE PTR [edx-0x4daef765],bh
  418b51:	inc    ebx
  418b52:	std    
  418b53:	(bad)  
  418b55:	js     0x418ad7
  418b57:	les    esi,FWORD PTR [ecx-0x3a9b971]
  418b5d:	les    ebp,FWORD PTR [edx+0x2a41a56c]
  418b63:	add    al,0x88
  418b65:	jl     0x418ba2
  418b67:	adc    al,BYTE PTR [eax]
	...
  418b79:	add    BYTE PTR [eax],al
  418b7b:	add    ch,dh
  418b7d:	(bad)  
  418b7e:	mov    edx,0x70e9f5c3
  418b83:	inc    eax
  418b84:	ins    BYTE PTR es:[edi],dx
  418b85:	mov    DWORD PTR [edx-0x43],esp
  418b88:	pop    esp
  418b89:	imul   esp,DWORD PTR [edx+edx*8-0x17],0xffffffcc
  418b8e:	jno    0x418b9a
  418b90:	xor    DWORD PTR [eax-0x2d],ebx
  418b93:	xor    al,0x84
  418b95:	dec    edi
  418b96:	addr16 sti 
  418b98:	sahf   
  418b99:	fsubr  st(4),st
  418b9b:	imul   esi,DWORD PTR [edi-0x4500ad39],0x326f1268
  418ba5:	rcr    BYTE PTR [ebp-0x2889dcd0],1
  418bab:	sub    DWORD PTR [edx],0xffffffa8
  418bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418baf:	adc    DWORD PTR [ecx+ebx*2+0x585304f1],ecx
  418bb6:	fs jo  0x418b74
  418bb9:	aas    
  418bba:	test   eax,0xfaf89
  418bbf:	xor    al,0x7e
  418bc1:	js     0x418c26
  418bc3:	retf   
  418bc4:	imul   ecx,DWORD PTR [esi+0x29eacc6a],0x5ab76fe9
  418bce:	lds    ecx,FWORD PTR [edx-0x7f553e60]
  418bd4:	cwde   
  418bd5:	pop    DWORD PTR [ecx+0xc]
  418bd8:	ins    DWORD PTR es:[edi],dx
  418bd9:	dec    esi
  418bda:	xor    al,0x89
  418bdc:	ror    DWORD PTR ds:0x53d3,1
	...
  418bf2:	add    BYTE PTR [eax],al
  418bf4:	fs mov ecx,0xf88c3116
  418bfa:	add    BYTE PTR ds:0x6000d03c,bh
  418c00:	or     edi,DWORD PTR [eax-0x3]
  418c03:	cld    
  418c04:	loop   0x418b96
  418c06:	inc    eax
  418c07:	jmp    0xd316594b
  418c0c:	jne    0x418ba1
  418c0e:	test   BYTE PTR [esi],dl
  418c10:	mov    dh,0x8f
  418c12:	add    BYTE PTR [ecx],dl
  418c14:	xor    DWORD PTR [edi],edx
  418c16:	inc    eax
  418c17:	jmp    0x7d54ef22
  418c1c:	(bad)  
  418c1d:	iret   
  418c1e:	add    BYTE PTR [esi-0x1700b45d],ah
  418c24:	mov    dh,0x8f
  418c26:	xchg   DWORD PTR [esi+edi*2+0x3f255b09],edi
  418c2d:	vmovlps xmm6,xmm5,QWORD PTR [ebx+edx*4-0x7c]
  418c33:	mov    bl,0xb7
  418c35:	pop    DWORD PTR [eax]
  418c37:	call   0xd533:0x98c4d53b
  418c3e:	fcomp  DWORD PTR [eax+0x29834029]
  418c44:	mov    cl,0xc
  418c46:	xor    eax,0x518fb6e8
  418c4b:	mov    edx,0x97ecf765
  418c50:	jbe    0x418be1
  418c52:	std    
  418c53:	fdivr  QWORD PTR [esi]
  418c55:	add    BYTE PTR [eax-0x17],0x0
	...
  418c69:	add    BYTE PTR [eax],al
  418c6b:	add    BYTE PTR ds:0xd6748768,bh
  418c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c72:	stc    
  418c73:	fisub  WORD PTR [edx-0x71]
  418c76:	(bad)  
  418c77:	call   0xf53f4732
  418c7c:	fidivr DWORD PTR [edi+0x40]
  418c7f:	jmp    0x133a58cd
  418c84:	cli    
  418c85:	xchg   edx,eax
  418c86:	test   BYTE PTR [eax],al
  418c88:	jmp    0x418c15
  418c8a:	add    BYTE PTR [eax],al
  418c8c:	add    al,0xcc
  418c8e:	add    BYTE PTR [eax],0x9c
  418c91:	mov    ecx,0xc48e6a4f
  418c96:	add    BYTE PTR [edi-0x74],bh
  418c99:	mov    WORD PTR [edi-0x1],cs
  418c9c:	mov    esp,ebx
  418c9e:	adc    al,0x40
  418ca0:	pushf  
  418ca1:	jecxz  0x418ce4
  418ca3:	hlt    
  418ca4:	addr16 dec ecx
  418ca6:	je     0x418cc8
  418ca8:	add    edi,ecx
  418caa:	mov    al,0x51
  418cac:	int3   
  418cad:	pop    esp
  418cae:	adc    DWORD PTR [ecx+ecx*4-0x34],esp
  418cb2:	add    BYTE PTR [ebp-0x72f118f4],al
  418cb8:	or     DWORD PTR [eax],esp
  418cba:	push   eax
  418cbb:	dec    DWORD PTR [ecx-0x14]
  418cbe:	adc    DWORD PTR [eax+0x5c],eax
  418cc1:	pop    ss
  418cc2:	shl    BYTE PTR [ebp+0x4f],0xe3
  418cc6:	pop    ecx
  418cc7:	hlt    
  418cc8:	(bad)  
  418cc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cca:	mov    al,0x10
  418ccc:	pop    esp
  418ccd:	mov    WORD PTR [edx+0x8],gs
	...
  418ce4:	dec    ebx
  418ce5:	pop    ebp
  418ce6:	(bad)  
  418ce7:	push   0x16
  418ce9:	lds    eax,FWORD PTR [ebp-0x29a343bb]
  418cef:	push   eax
  418cf0:	mov    bl,0xe6
  418cf2:	lock mov DWORD PTR [ecx+0x68],ebx
  418cf6:	push   ebx
  418cf7:	dec    DWORD PTR [ecx]
  418cf9:	ins    BYTE PTR es:[edi],dx
  418cfa:	adc    BYTE PTR [eax+0xc],al
  418cfd:	jecxz  0x418d40
  418cff:	in     al,dx
  418d00:	test   DWORD PTR [eax+0x74],0xdca6577a
  418d07:	adc    BYTE PTR [esp+ecx*4],cl
  418d0a:	push   eax
  418d0b:	(bad)  
  418d0c:	jns    0x418d81
  418d0e:	sti    
  418d0f:	(bad)  
  418d10:	inc    ebp
  418d11:	xlat   BYTE PTR ds:[ebx]
  418d12:	fdivr  QWORD PTR [ebx]
  418d14:	mov    ch,0x35
  418d16:	jne    0x418d76
  418d18:	dec    ebp
  418d19:	xchg   esi,eax
  418d1a:	add    al,0xcc
  418d1c:	jne    0x418ca3
  418d1e:	push   ebp
  418d1f:	push   ebp
  418d20:	mov    dl,0xa4
  418d22:	call   0x565aae24
  418d27:	push   ecx
  418d28:	mov    ds:0xc0fdeca4,al
  418d2d:	sbb    al,0x11
  418d2f:	inc    eax
  418d30:	mov    ch,0xf3
  418d32:	shl    DWORD PTR [esp+ecx*8+0x3f],0x50
  418d37:	hlt    
  418d38:	or     DWORD PTR [ecx+0x7e],ecx
  418d3b:	dec    ebx
  418d3c:	imul   eax,DWORD PTR [edx+0x40],0xd4b43eb4
  418d43:	std    
  418d44:	loopne 0x418d22
  418d46:	add    cl,BYTE PTR [eax+0x0]
	...
  418d59:	add    BYTE PTR [eax],al
  418d5b:	add    BYTE PTR [esi+0x52],ch
  418d5e:	dec    eax
  418d5f:	mov    eax,0x50c620aa
  418d64:	in     al,0xbd
  418d66:	js     0x418d60
  418d68:	dec    edx
  418d69:	pop    esp
  418d6a:	adc    eax,0xf268f513
  418d6f:	jae    0x418d1e
  418d71:	jecxz  0x418de3
  418d73:	aam    0x32
  418d75:	and    al,0xdd
  418d77:	call   0x4522bd
  418d7c:	cs sub al,0xe1
  418d7f:	xchg   DWORD PTR [eax-0x80],esi
  418d82:	bnd jae 0x418d76
  418d85:	jge    0x418dff
  418d87:	clc    
  418d88:	or     bl,BYTE PTR [edi-0x71ee8c0e]
  418d8e:	sbb    BYTE PTR [ebp+eiz*4+0x68fd0128],bh
  418d95:	nop
  418d96:	repnz adc ecx,DWORD PTR ds:0x8a004139
  418d9d:	ins    DWORD PTR es:[edi],dx
  418d9e:	adc    eax,0x278fc5d8
  418da3:	add    al,0x8a
  418da5:	mov    esp,0xe79578b3
  418daa:	ja     0x418e29
  418dac:	jne    0x418d3d
  418dae:	into   
  418daf:	ja     0x418d92
  418db1:	pop    esi
  418db2:	fdivr  st(7),st
  418db4:	(bad)  
  418db5:	iret   
  418db6:	out    0x2c,eax
  418db8:	je     0x418d9d
  418dba:	in     al,dx
  418dbb:	lock cmp BYTE PTR es:[esi+0xd4],ch
	...
  418dd3:	add    BYTE PTR [eax-0x590e441c],bl
  418dd9:	xchg   ebx,eax
  418dda:	cli    
  418ddb:	inc    ebx
  418ddc:	mov    ch,0xa
  418dde:	sub    al,0xdc
  418de0:	loopne 0x418d9f
  418de2:	xor    bh,BYTE PTR [ebx+0x5de79377]
  418de8:	mov    ch,0xe9
  418dea:	out    0xc8,eax
  418dec:	mov    bl,0x5b
  418dee:	std    
  418def:	inc    ebx
  418df0:	mov    ch,0x5e
  418df2:	aam    0x8b
  418df4:	ret    
  418df5:	iret   
  418df6:	out    0x7a,eax
  418df8:	sti    
  418df9:	xchg   ebx,eax
  418dfa:	jb     0x418dc6
  418dfc:	je     0x418dc3
  418dfe:	(bad)
  418e03:	add    esi,DWORD PTR [ebp-0x42d8549b]
  418e09:	nop
  418e0a:	mov    bl,0x9
  418e0c:	and    DWORD PTR [edi+0x3d],0xffffffc5
  418e10:	and    BYTE PTR [esi+0x62],bl
  418e13:	retf   0x517b
  418e16:	jmp    0x418e1b
  418e18:	imul   ecx,DWORD PTR [edx],0x18
  418e1b:	jge    0x418e90
  418e1d:	xchg   ebx,eax
  418e1e:	or     al,BYTE PTR cs:[ecx]
  418e21:	in     eax,0xa7
  418e23:	add    esi,DWORD PTR [esi]
  418e25:	dec    edi
  418e26:	jnp    0x418e2e
  418e28:	xor    al,0x57
  418e2a:	call   0xa04da5
  418e2f:	fcom   QWORD PTR [esi]
  418e31:	test   DWORD PTR [eax-0x17],eax
  418e34:	xor    ebp,ecx
  418e36:	add    al,0xe6
	...
  418e4c:	fs push eax
  418e4e:	mov    DWORD PTR [ecx],ebp
  418e50:	mov    ebp,0xb45dc012
  418e55:	adc    al,bh
  418e57:	call   0xef7d179e
  418e5c:	mov    bh,0x5c
  418e5e:	jge    0x418e95
  418e60:	mov    al,0x9e
  418e62:	shr    BYTE PTR [edx-0x55bfb017],0x3
  418e69:	pop    es
  418e6a:	in     al,dx
  418e6b:	cmp    BYTE PTR [eax],bh
  418e6d:	icebp  
  418e6e:	cld    
  418e6f:	jmp    0x3a3e5f7f
  418e74:	test   cl,ah
  418e76:	or     al,0x1
  418e78:	mov    dh,0xd3
  418e7a:	add    cl,ch
  418e7c:	adc    BYTE PTR [eax+0x5c6ef4fd],dl
  418e82:	adc    ecx,DWORD PTR [ebp-0x44]
  418e85:	iret   
  418e86:	add    BYTE PTR [esi+esi*2-0x28],ah
  418e8a:	add    eax,0x835bfb72
  418e8f:	sub    ebx,eax
  418e91:	xchg   ecx,eax
  418e92:	xor    DWORD PTR [ecx],ebp
  418e94:	call   DWORD PTR [ecx+0x8]
  418e97:	jmp    0x69815654
  418e9c:	pop    ds
  418e9d:	pop    ebp
  418e9e:	jno    0x418e75
  418ea0:	ss add bh,BYTE PTR gs:[ebp+ebp*4-0x60383862]
  418ea9:	mov    ecx,ebp
  418eab:	icebp  
  418eac:	ss gs add al,0x94
	...
  418ec4:	mov    cl,0xe
  418ec6:	and    ch,cl
  418ec8:	add    bh,0x30
  418ecb:	arpl   WORD PTR [esi-0x64],si
  418ece:	cmp    al,BYTE PTR [eax]
  418ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ed1:	jecxz  0x418ed5
  418ed3:	mov    bl,BYTE PTR [ebp+0x3cc0b68f]
  418ed9:	pusha  
  418eda:	je     0x418f00
  418edc:	aam    0xc2
  418ede:	call   0xfbaeae6e
  418ee3:	ret    0x90d0
  418ee6:	push   ecx
  418ee7:	mov    edi,eax
  418ee9:	ret    0xf4d
  418eec:	and    edx,ebp
  418eee:	or     BYTE PTR [ebx+0x26],dl
  418ef1:	int    0x30
  418ef3:	push   esi
  418ef4:	fwait
  418ef5:	and    eax,0x259b1071
  418efa:	lds    ecx,FWORD PTR [ebp+0xffc5de0]
  418f00:	jmp    0x418f1d
  418f02:	or     ebp,DWORD PTR [edi-0x2d4ba3d4]
  418f08:	adc    al,0xbf
  418f0a:	sti    
  418f0b:	psrad  mm0,mm6
  418f0e:	sti    
  418f0f:	imul   di,bp,0x40
  418f13:	or     al,0x5b
  418f15:	and    dl,bh
  418f17:	add    ebx,esi
  418f19:	nop
  418f1a:	retf   0x9b0f
  418f1d:	pusha  
  418f1e:	or     ebp,DWORD PTR [edi-0x7b62579]
  418f24:	pop    ebx
  418f25:	and    eax,0x3bc0
	...
  418f3a:	add    BYTE PTR [eax],al
  418f3c:	call   0x90:0x4c98845c
  418f43:	btr    DWORD PTR [ebx-0x7b],edx
  418f47:	inc    ebp
  418f48:	or     al,0xd9
  418f4a:	pop    ebx
  418f4b:	adc    al,0x8f
  418f4d:	out    0xc,al
  418f4f:	add    BYTE PTR [edi],cl
  418f51:	dec    ebx
  418f52:	jg     0x418fd1
  418f54:	or     al,0x90
  418f56:	jbe    0x418f7e
  418f58:	xchg   esi,eax
  418f5a:	or     al,0x8b
  418f5c:	mov    ch,0x1b
  418f5e:	stc    
  418f5f:	add    dh,dh
  418f61:	adc    eax,0x2eddc57a
  418f66:	out    dx,al
  418f67:	std    
  418f68:	jmp    0x4867:0x7445b36c
  418f6f:	or     BYTE PTR [edx-0x4bcfba5c],ch
  418f75:	stos   DWORD PTR es:[edi],eax
  418f76:	add    BYTE PTR [ecx+0x432a6a70],cl
  418f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f7d:	mov    eax,0x5e6a89ca
  418f82:	ja     0x418fc9
  418f84:	hlt    
  418f85:	gs inc eax
  418f87:	clc    
  418f88:	jmp    0x2e5307f4
  418f8d:	lods   al,BYTE PTR ds:[esi]
  418f8e:	adc    al,0x1
  418f90:	jbe    0x418fe0
  418f92:	add    ecx,DWORD PTR [edx+0x3f14e0a6]
  418f98:	imul   BYTE PTR [ebp-0x37]
  418f9b:	jb     0x418f28
  418f9d:	push   cs
  418f9e:	sbb    eax,0x3c
	...
  418fb3:	add    BYTE PTR [edi-0x776ee7d],dh
  418fb9:	cmp    BYTE PTR [edx],al
  418fbb:	rcr    DWORD PTR [esi+0x73],0x77
  418fbf:	adc    DWORD PTR ds:0x9e414438,ebp
  418fc5:	add    BYTE PTR [edi-0xa],ch
  418fc8:	pop    esi
  418fc9:	pop    esp
  418fca:	sub    eax,0x7a57c004
  418fcf:	inc    ebx
  418fd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fd1:	gs ret 0xb3e9
  418fd5:	out    dx,al
  418fd6:	adc    cl,BYTE PTR [eax+0x394227c4]
  418fdc:	or     eax,0x7089f317
  418fe1:	mov    al,ds:0xefa94d02
  418fe6:	inc    eax
  418fe7:	clc    
  418fe8:	into   
  418fe9:	(bad)  
  418fea:	xor    eax,0x1eea30fe
  418fef:	out    dx,al
  418ff0:	add    BYTE PTR [edx-0x7408434e],bh
  418ff6:	out    0x58,eax
  418ff8:	cmp    al,0x6c
  418ffa:	push   0xffffffdf
  418ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ffd:	mov    esi,0x3da45695
  419002:	mov    edx,0x279e70ee
  419007:	jl     0x41906f
  419009:	addr16 jo 0x419063
  41900c:	lds    ecx,FWORD PTR [eax]
  41900e:	xor    al,0xcc
  419010:	cmp    bl,ch
  419012:	retf   
  419013:	sub    esp,DWORD PTR [esi-0x7d]
  419016:	fidivr WORD PTR [ebp+0x0]
	...
  419029:	add    BYTE PTR [eax],al
  41902b:	add    BYTE PTR [eax+edx*4],bh
  41902e:	out    0x3,eax
  419030:	cmp    al,0xcc
  419032:	out    dx,eax
  419033:	jp     0x41903b
  419035:	cmp    al,0x60
  419037:	aas    
  419038:	mov    DWORD PTR [esi],eax
  41903a:	sbb    al,0x14
  41903c:	cmp    al,ah
  41903e:	lahf   
  41903f:	sub    DWORD PTR [edi-0x76],edi
  419042:	ins    DWORD PTR es:[edi],dx
  419043:	push   0x78e75a82
  419048:	out    dx,al
  419049:	imul   esp,DWORD PTR [edx+0x57],0x6d
  41904d:	add    eax,0xcc3d12f3
  419052:	jle    0x41907e
  419054:	out    dx,al
  419055:	ja     0x41903d
  419057:	xchg   DWORD PTR [ebx+0x3e03e790],ebx
  41905d:	mov    edi,0x6ff6c566
  419062:	call   0x62d1456a
  419067:	hlt    
  419068:	jl     0x41903e
  41906a:	rep outs dx,BYTE PTR ds:[esi]
  41906c:	pop    DWORD PTR [esi]
  41906e:	(bad)  
  41906f:	fbstp  TBYTE PTR [edx]
  419071:	fdiv   QWORD PTR [ebx]
  419073:	jns    0x4190f3
  419075:	arpl   WORD PTR [eax],ax
  419077:	bound  ecx,QWORD PTR [edx-0x2222c7a9]
  41907d:	fiadd  WORD PTR [esi+0x72]
  419080:	clc    
  419081:	xchg   edi,eax
  419082:	pop    ebx
  419083:	stc    
  419084:	xchg   ebx,eax
  419085:	mov    DWORD PTR [ecx+0xc9702b4],ecx
  41908b:	shr    BYTE PTR [ebx-0x6f],cl
  41908e:	inc    ebp
  41908f:	ret    0x0
	...
  4190a2:	add    BYTE PTR [eax],al
  4190a4:	pop    ebx
  4190a5:	jg     0x419123
  4190a7:	sti    
  4190a8:	mov    eax,ds:0xb07cf098
  4190ad:	adc    bh,BYTE PTR [ebx+0x1]
  4190b0:	dec    esi
  4190b1:	(bad)  
  4190b2:	lock and bl,BYTE PTR [edx+0x5f]
  4190b6:	jnp    0x4190a2
  4190b8:	aas    
  4190b9:	(bad)  
  4190ba:	lock push 0x4b
  4190bd:	outs   dx,DWORD PTR ds:[esi]
  4190be:	add    BYTE PTR [edi-0x4f],cl
  4190c1:	cwde   
  4190c2:	jnp    0x419095
  4190c4:	sbb    cl,BYTE PTR [edi+0xebad242]
  4190ca:	arpl   cx,cx
  4190cc:	mov    dh,0x6
  4190ce:	jnp    0x4190a9
  4190d0:	mov    bh,0xd4
  4190d2:	hlt    
  4190d3:	das    
  4190d4:	(bad)  
  4190d6:	adc    al,0x1d
  4190d8:	and    BYTE PTR [edi],al
  4190da:	jnp    0x419069
  4190dc:	std    
  4190dd:	(bad)  
  4190de:	call   0x299944a5
  4190e3:	cdq    
  4190e4:	test   ebp,0x74d1487
  4190ea:	push   ebx
  4190eb:	jns    0x4190aa
  4190ed:	mov    esp,0x740362f8
  4190f2:	sub    DWORD PTR [ecx+0x49],ebx
  4190f5:	sub    al,0xd7
  4190f7:	stos   DWORD PTR es:[edi],eax
  4190f8:	mov    edi,0x19e6d4dc
  4190fd:	pop    esi
  4190fe:	cmp    DWORD PTR [edi],ebp
  419100:	mov    al,ds:0x51008987
  419105:	jno    0x41908c
  419107:	dec    ebp
	...
  41911c:	ins    BYTE PTR es:[edi],dx
  41911d:	aaa    
  41911e:	push   es
  41911f:	mov    eax,DWORD PTR [ecx+0x41]
  419122:	test   DWORD PTR [ebp+0x7c],edx
  419125:	or     al,0x79
  419127:	sbb    al,0x1c
  419129:	fimul  DWORD PTR [ebx+0x2]
  41912c:	sub    DWORD PTR [eax-0x27f0b077],edx
  419132:	push   ecx
  419133:	adc    BYTE PTR [ebx],dl
  419135:	cld    
  419136:	push   eax
  419137:	adc    al,0xf7
  419139:	push   ss
  41913a:	or     ecx,DWORD PTR [edi+0x8caa]
  419140:	jecxz  0x419114
  419142:	fadd   DWORD PTR [eax-0x74ff779f]
  419148:	imul   edx,DWORD PTR [edi+0x72],0xfb964607
  41914f:	mov    al,dl
  419151:	popf   
  419152:	inc    ebx
  419153:	mov    dl,cl
  419155:	imul   eax,eax,0xffffffe1
  419158:	cwde   
  419159:	pop    edx
  41915a:	lds    ecx,FWORD PTR [eax+0x4d8a9d90]
  419160:	ins    BYTE PTR es:[edi],dx
  419161:	(bad)
  419165:	(bad)
  419169:	pop    ecx
  41916a:	mov    DWORD PTR [ebx],0x374cdb74
  419170:	lea    edx,[ecx]
  419172:	ret    
  419173:	add    dl,ch
  419175:	out    0xe4,al
  419177:	mov    DWORD PTR [ecx+0x3c5d855f],ebx
  41917d:	test   al,0xbf
  41917f:	jge    0x419181
	...
  419191:	add    BYTE PTR [eax],al
  419193:	add    BYTE PTR [edi-0x281fae28],cl
  419199:	xchg   esi,eax
  41919a:	clc    
  41919b:	add    ecx,DWORD PTR [ebp-0x382bae26]
  4191a1:	mov    esi,0x1bb589dc
  4191a6:	loope  0x419191
  4191a8:	iret   
  4191a9:	in     eax,dx
  4191aa:	aaa    
  4191ab:	clc    
  4191ac:	push   ds
  4191ad:	cmp    eax,DWORD PTR [esi+0x7099297b]
  4191b3:	adc    al,0x2e
  4191b5:	sti    
  4191b6:	loopne 0x419141
  4191b8:	mov    BYTE PTR [esi+0x7b],ch
  4191bb:	pop    ebx
  4191bc:	lods   eax,DWORD PTR ds:[esi]
  4191bd:	gs aam 0x88
  4191c0:	mov    eax,ds:0x68394434
  4191c5:	call   0xfd10:0xfb3ee668
  4191cc:	jo     0x419228
  4191ce:	add    al,0x4b
  4191d0:	aad    0xdc
  4191d2:	aaa    
  4191d3:	hlt    
  4191d4:	sahf   
  4191d5:	xor    edx,ecx
  4191d7:	jl     0x4191be
  4191d9:	push   0xa33ef840
  4191de:	adc    al,0x37
  4191e0:	jo     0x419250
  4191e2:	cli    
  4191e3:	mov    ebx,DWORD PTR [ebx]
  4191e5:	inc    eax
  4191e6:	jmp    0x894b:0x41ae6fd
  4191ed:	push   0x91f5ec38
  4191f2:	aas    
  4191f3:	adc    al,0xaa
  4191f5:	in     al,dx
  4191f6:	inc    BYTE PTR [bx+si]
	...
  419209:	add    BYTE PTR [eax],al
  41920b:	add    BYTE PTR [edx-0x46bc81da],dl
  419211:	loop   0x41924b
  419213:	fsubr  DWORD PTR ds:0xdac57e61
  419219:	sahf   
  41921a:	dec    ebp
  41921b:	(bad)  
  41921c:	ja     0x41927f
  41921e:	add    DWORD PTR [ecx],esi
  419220:	jne    0x419224
  419222:	lock push ebx
  419224:	cs add eax,0xf1edec86
  41922a:	cmp    BYTE PTR [eax],cl
  41922c:	ds mov al,0x8
  41922f:	push   esi
  419230:	loop   0x4191c1
  419232:	jo     0x41926c
  419234:	inc    ebp
  419235:	or     ebp,DWORD PTR [edi+ecx*1+0x50625a2c]
  41923c:	lds    edx,FWORD PTR [edx-0x5cd0f9e1]
  419242:	cmp    eax,0xe75476c1
  419247:	shl    DWORD PTR [esi+0x55],0xe7
  41924b:	jl     0x4192cb
  41924d:	pop    ss
  41924e:	pusha  
  41924f:	push   0xdbac08f5
  419254:	mov    esp,0x3f78ee50
  419259:	xchg   ecx,eax
  41925a:	out    0x3,eax
  41925c:	pushf  
  41925d:	inc    edi
  41925e:	mov    edx,0x12437e7c
  419263:	push   es
  419264:	sub    al,0xbd
  419266:	xlat   BYTE PTR ds:[ebx]
  419267:	jle    0x4192df
  419269:	dec    edi
  41926a:	pusha  
  41926b:	push   eax
  41926c:	loope  0x419208
  41926e:	pop    ss
  41926f:	cli    
	...
  419284:	aas    
  419285:	add    al,0xe8
  419287:	add    esi,DWORD PTR [ebp+0x767ba9aa]
  41928d:	aas    
  41928e:	ret    0x3c05
  419291:	int3   
  419292:	mov    bh,0x5e
  419294:	lds    edi,FWORD PTR [eax+0x8a93770]
  41929a:	sub    al,0xc8
  41929c:	fcom   QWORD PTR [eax+0x34]
  41929f:	add    eax,0x7db3cc3a
  4192a4:	test   BYTE PTR [ebx-0x1e],0xc2
  4192a8:	(bad)  
  4192a9:	xchg   edx,eax
  4192aa:	jo     0x4192eb
  4192ac:	pop    ecx
  4192ad:	or     dh,BYTE PTR [eax+ecx*8]
  4192b0:	rcr    BYTE PTR [esi],0x1c
  4192b3:	fdivr  QWORD PTR [eax+0x2cd81c1e]
  4192b9:	aam    0xef
  4192bb:	push   esp
  4192bc:	pop    eax
  4192bd:	fadd   QWORD PTR [eax]
  4192bf:	jge    0x41931d
  4192c1:	loop   0x4192b3
  4192c3:	or     DWORD PTR [edx],0x3c66fd53
  4192c9:	and    ebx,DWORD PTR [ebx+0x55]
  4192cc:	mov    eax,0xf2620cca
  4192d1:	pop    edi
  4192d2:	add    esp,0xcc818f0a
  4192d8:	push   ss
  4192d9:	(bad)  
  4192da:	mov    edi,ebp
  4192dc:	sbb    al,0xcc
  4192de:	(bad)  
  4192df:	out    dx,al
  4192e0:	mov    dh,0xe
  4192e2:	jae    0x419351
  4192e4:	mov    ?,WORD PTR [edx+0x70d8]
	...
  4192fa:	add    BYTE PTR [eax],al
  4192fc:	ret    0xc647
  4192ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419300:	or     eax,0xc5acc68f
  419305:	pop    esi
  419307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419308:	cli    
  419309:	push   ebp
  41930a:	ret    
  41930b:	lods   al,BYTE PTR ds:[esi]
  41930c:	ficom  DWORD PTR [ebp-0x7c]
  41930f:	and    cl,BYTE PTR [edi-0x3f]
  419312:	xor    DWORD PTR [edx+esi*8-0x72],0x7f48e473
  41931a:	mov    BYTE PTR [esp+ecx*8],bh
  41931d:	or     BYTE PTR [eax],al
  41931f:	and    edi,DWORD PTR [edx+0x54]
  419322:	jae    0x419310
  419324:	popf   
  419325:	shl    esp,1
  419327:	ret    0xebb
  41932a:	jnp    0x4192f5
  41932c:	mov    dh,0xe0
  41932e:	add    eax,0x53dba7
  419333:	popa   
  419334:	sar    DWORD PTR [edx+0x3a],cl
  419337:	and    al,0xa4
  419339:	loopne 0x41934e
  41933b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41933c:	ret    
  41933d:	outs   dx,DWORD PTR ds:[esi]
  41933e:	mov    DWORD PTR [ecx+edi*1],esp
  419341:	push   ebx
  419342:	dec    ebx
  419343:	mov    cl,0xf6
  419345:	push   cs
  419346:	jnp    0x4192f9
  419348:	mov    dh,0xc
  41934a:	inc    ebx
  41934b:	add    BYTE PTR [eax+ebp*8],ah
  41934e:	(bad)  
  41934f:	jmp    0x4193a1
  419351:	dec    edi
  419352:	inc    ecx
  419353:	aam    0x5c
  419355:	aam    0x41
  419357:	in     al,0x7
  419359:	xchg   esi,eax
  41935a:	loopne 0x4193d2
  41935c:	inc    esp
  41935d:	rol    DWORD PTR [ecx-0x1],cl
	...
  419374:	mov    ch,0x13
  419377:	jmp    0x41939b
  419379:	rol    DWORD PTR [ecx+0x17],cl
  41937c:	xchg   esi,eax
  41937d:	(bad)  
  419380:	stc    
  419381:	ins    DWORD PTR es:[edi],dx
  419382:	add    BYTE PTR [eax+0x5748041],cl
  419388:	push   es
  419389:	xchg   esi,eax
  41938a:	les    esi,FWORD PTR [edx+ebp*8+0x10]
  41938e:	or     eax,DWORD PTR [edx]
  419390:	test   BYTE PTR [ebx+ecx*1-0x3a],dl
  419394:	push   ecx
  419395:	outs   dx,BYTE PTR ds:[esi]
  419396:	std    
  419397:	xchg   DWORD PTR [ecx],esp
  419399:	adc    eax,0x6d398046
  41939e:	add    BYTE PTR [edi],cl
  4193a0:	push   ecx
  4193a1:	push   cs
  4193a2:	add    BYTE PTR [eax],al
  4193a4:	int3   
  4193a5:	adc    BYTE PTR [ebx],cl
  4193a7:	or     BYTE PTR [ebp+ebp*8-0x2c],bl
  4193ab:	add    BYTE PTR [esi-0x71],dl
  4193ae:	je     0x4193cf
  4193b0:	dec    esp
  4193b1:	out    0xfe,al
  4193b3:	add    BYTE PTR [esi-0x42],al
  4193b6:	adc    esi,DWORD PTR [ecx+eiz*4-0x5a]
  4193ba:	push   ecx
  4193bb:	sti    
  4193bc:	add    BYTE PTR [ebx+0x5524040c],al
  4193c2:	test   DWORD PTR [edx+ecx*4],edx
  4193c5:	adc    al,BYTE PTR [ecx-0x2]
  4193c8:	popf   
  4193c9:	fcom   DWORD PTR [ecx-0x5]
  4193cc:	sar    BYTE PTR [eax],cl
  4193ce:	or     BYTE PTR [esp+edi*2],cl
  4193d1:	adc    al,BYTE PTR [ecx-0x2]
  4193d4:	mov    eax,ds
  4193d6:	add    edi,edi
	...
  4193ec:	mov    ch,0x73
  4193ee:	ror    BYTE PTR [ebx+0x73e634b1],1
  4193f4:	jns    0x419403
  4193f6:	outs   dx,DWORD PTR ds:[esi]
  4193f7:	fcomp  QWORD PTR [edx+0x5b]
  4193fa:	in     eax,dx
  4193fb:	push   eax
  4193fc:	push   edx
  4193fd:	push   ebx
  4193fe:	icebp  
  4193ff:	call   0xfe27761f
  419404:	mov    dh,0xb6
  419406:	jg     0x4193c8
  419408:	sar    BYTE PTR [ebp+eiz*8+0x73],0x11
  41940d:	ins    DWORD PTR es:[edi],dx
  41940e:	scas   al,BYTE PTR es:[edi]
  41940f:	dec    ebx
  419410:	sbb    eax,0xb2f46fc5
  419415:	aad    0x4f
  419417:	in     al,dx
  419418:	sbb    bl,BYTE PTR [ebx]
  41941a:	icebp  
  41941b:	mov    DWORD PTR [eax-0x4bfa4126],ecx
  419421:	icebp  
  419422:	or     BYTE PTR [di],ch
  419425:	and    ebp,eax
  419427:	mov    BYTE PTR [eax+0x74],dh
  41942a:	fcomp  QWORD PTR [esi+ebp*8+0x7089e57c]
  419431:	xor    dl,BYTE PTR [edx-0x3]
  419434:	push   0x85c60256
  419439:	jle    0x41944a
  41943b:	mov    ebp,0xf1025cd2
  419440:	ss sub edx,ebp
  419443:	adc    BYTE PTR [esi],ch
  419445:	mov    ds:0x164881d8,eax
  41944a:	adc    DWORD PTR [ecx],edi
  41944c:	clc    
  41944d:	sub    dh,dh
  41944f:	mov    eax,DWORD PTR [eax]
	...
  419461:	add    BYTE PTR [eax],al
  419463:	add    BYTE PTR [esi],ch
  419465:	inc    ebx
  419466:	out    0xfd,al
  419468:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41946a:	fcom   QWORD PTR [eax]
  41946c:	lods   al,BYTE PTR cs:[esi]
  41946e:	fadd   QWORD PTR [ecx+0x39112d20]
  419474:	lock loopne 0x41946d
  419477:	mov    esi,edx
  419479:	(bad)  
  41947a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41947b:	out    0x78,al
  41947d:	mov    bh,0x3e
  41947f:	jnp    0x4194fc
  419481:	mov    dl,0xa0
  419483:	rol    ebp,0x8f
  419486:	xor    al,0x7b
  419488:	push   ecx
  419489:	setae  BYTE PTR [edi]
  41948c:	add    al,0xba
  41948e:	push   ss
  41948f:	xor    esp,DWORD PTR [edi-0x61]
  419492:	jbe    0x4194d2
  419494:	test   BYTE PTR [edi+0x60],cl
  419497:	push   eax
  419498:	push   ecx
  419499:	or     DWORD PTR [edi+ebp*8+0x7c3bbd32],edi
  4194a0:	scas   al,BYTE PTR es:[edi]
  4194a1:	adc    BYTE PTR [bx+di-0x3f],dl
  4194a5:	sbb    BYTE PTR [ebp-0x62],0x22
  4194a9:	push   ebx
  4194aa:	out    0x7a,eax
  4194ac:	outs   dx,BYTE PTR ds:[esi]
  4194ad:	xchg   DWORD PTR [eax+0x50],esi
  4194b0:	adc    eax,0x3cf3a409
  4194b5:	vhaddps ymm4,ymm5,YMMWORD PTR [esi+0x53]
  4194ba:	loop   0x419475
  4194bc:	test   al,0x1
  4194be:	popf   
  4194bf:	add    al,0xb5
  4194c1:	(bad)  
  4194c2:	bound  edi,QWORD PTR [eax]
  4194c4:	jmp    0x13548cf
	...
  4194d9:	add    BYTE PTR [eax],al
  4194db:	add    BYTE PTR [eax+ecx*2-0x7d02c790],dh
  4194e2:	idiv   DWORD PTR ss:[ecx+ebp*8-0x7d52c74e]
  4194ea:	arpl   WORD PTR [edi-0x3e],cx
  4194ed:	push   edx
  4194ee:	out    0x78,eax
  4194f0:	loop   0x4194fa
  4194f2:	cmp    al,0xd0
  4194f4:	ds mov edi,0x6bf6bdd6
  4194fa:	call   0x72d14a02
  4194ff:	hlt    
  419500:	fmul   st(4),st
  419502:	shl    DWORD PTR [esi-0xe],cl
  419505:	push   es
  419506:	add    BYTE PTR [ecx+eax*4],ah
  419509:	or     cl,BYTE PTR [ebx-0x4f]
  41950c:	cld    
  41950d:	(bad)  
  41950e:	fdiv   DWORD PTR [edx+0x12]
  419511:	pop    eax
  419512:	data16 loopne 0x4194cf
  419515:	test   BYTE PTR [ebx+0x25],dh
  419518:	in     al,dx
  419519:	(bad)  
  41951a:	cld    
  41951b:	bound  ebp,QWORD PTR [eax]
  41951d:	cwde   
  41951e:	dec    ebx
  41951f:	(bad)  
  419521:	test   BYTE PTR [ecx+0x37e9612c],cl
  419527:	aad    0xdf
  419529:	fiadd  WORD PTR [esi]
  41952b:	es mov esi,ss
  41952e:	adc    ch,ah
  419530:	inc    edi
  419531:	les    edi,FWORD PTR [ecx]
  419533:	pop    ecx
  419534:	mov    ds:0x2d48789,al
  419539:	or     bh,BYTE PTR [ebx+0x55]
  41953c:	int3   
  41953d:	(bad)  
  41953e:	hlt    
  41953f:	les    eax,FWORD PTR [eax]
	...
  419551:	add    BYTE PTR [eax],al
  419553:	add    BYTE PTR [ebp+0x34357b0a],dh
  419559:	(bad)  
  41955a:	in     al,0xe9
  41955c:	nop
  41955d:	xchg   DWORD PTR [ecx],edi
  41955f:	lods   al,BYTE PTR ds:[esi]
  419560:	jmp    0x818a:0xddab01d2
  419567:	test   BYTE PTR [edx],dl
  419569:	(bad)
  41956d:	nop
  41956e:	(bad)  
  41956f:	call   0xc287ed1f
  419574:	dec    ebx
  419575:	jnp    0x4195f3
  419577:	push   ecx
  419578:	dec    esp
  419579:	(bad)  
  41957a:	call   0x29a517e1
  41957f:	pushf  
  419580:	fisub  DWORD PTR [edi+0xa7728d0]
  419586:	push   ebx
  419587:	shr    DWORD PTR ds:0xfa02f4bd,1
  41958d:	push   ebx
  41958e:	mov    DWORD PTR [ecx+eax*4],ebp
  419591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419592:	lock add BYTE PTR [ebx+0x542d4fc],ah
  419599:	loop   0x419573
  41959b:	rdpmc  
  41959d:	pop    edi
  41959e:	aaa    
  41959f:	(bad)  
  4195a1:	push   ebx
  4195a2:	mov    BYTE PTR [ebp+0x24],bl
  4195a5:	(bad)  
  4195a6:	dec    ecx
  4195a7:	in     al,0x47
  4195a9:	push   ebx
  4195aa:	mov    BYTE PTR [ebp+0x24],bl
  4195ad:	(bad)  
  4195ae:	push   ecx
  4195af:	in     al,0xcc
  4195b1:	jmp    0x9c2295d2
  4195b6:	add    dh,BYTE PTR [ebp+0x0]
	...
  4195c9:	add    BYTE PTR [eax],al
  4195cb:	add    BYTE PTR [edi-0x26],bl
  4195ce:	dec    ebx
  4195cf:	add    al,0xd7
  4195d1:	rcl    DWORD PTR [eax],0xf
  4195d4:	add    ecx,0x14
  4195d7:	add    edi,DWORD PTR [esi-0x59]
  4195da:	retf   0xa30f
  4195dd:	dec    esp
  4195de:	add    BYTE PTR [eax],al
  4195e0:	sbb    al,0x6c
  4195e2:	inc    ecx
  4195e3:	fmul   QWORD PTR [ecx+ebp*8-0x1e58ffe4]
  4195ea:	or     al,0x75
  4195ec:	and    eax,ebx
  4195ee:	dec    ecx
  4195ef:	aam    0x94
  4195f1:	pop    eax
  4195f2:	xor    al,0x88
  4195f4:	inc    eax
  4195f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195f6:	std    
  4195f7:	or     bl,0x8e
  4195fa:	mov    cl,BYTE PTR [ebp-0x30]
  4195fd:	dec    esp
  4195fe:	fld    QWORD PTR [esi+edx*8]
  419601:	adc    al,0x88
  419603:	or     al,0xb
  419605:	xlat   BYTE PTR ds:[ebx]
  419606:	dec    ecx
  419607:	in     al,0xb2
  419609:	adc    eax,0xd9d8e1c0
  41960e:	dec    edi
  41960f:	call   esi
  419611:	push   ss
  419612:	call   edi
  419614:	push   esp
  419615:	cwde   
  419616:	xor    eax,DWORD PTR [ecx]
  419618:	dec    edi
  419619:	inc    esp
  41961a:	add    cl,BYTE PTR [ecx+0x45856411]
  419620:	mov    ch,0x3e
  419622:	mov    ebx,DWORD PTR [ebx-0x77]
  419625:	jge    0x4195ec
  419627:	jnp    0x419619
  419629:	fnsave [edi]
  41962b:	in     al,0x3e
  41962d:	mov    ds:0x1e0,eax
	...
  419642:	add    BYTE PTR [eax],al
  419644:	fs out dx,eax
  419646:	aaa    
  419647:	fsubr  DWORD PTR [esi]
  419649:	jnp    0x41962f
  41964b:	xchg   eax,esp
  41964d:	add    ch,ch
  41964f:	sbb    al,0x3e
  419651:	mov    ds:0xe5c2e9e0,eax
  419656:	pop    edi
  419657:	clc    
  419658:	bound  edi,QWORD PTR [edx-0x6]
  41965b:	mov    BYTE PTR [eax],al
  41965d:	add    ebp,DWORD PTR [edx-0x77]
  419660:	enter  0x8e6e,0x5b
  419664:	mov    ebp,0x2c66b465
  419669:	sbb    dh,BYTE PTR [esi]
  41966b:	aas    
  41966c:	jle    0x419689
  41966e:	mov    ecx,0x4fdd197c
  419673:	adc    BYTE PTR [edx],ch
  419675:	and    ebx,ecx
  419677:	push   DWORD PTR [ecx-0x36]
  41967a:	lea    ecx,[ebx+0x1d]
  41967d:	lea    ecx,[edi-0x2c]
  419680:	xchg   ecx,eax
  419681:	mov    al,ds:0xed0943e1
  419686:	dec    edi
  419687:	adc    BYTE PTR [ebx+esi*8-0x1dd6f224],bh
  41968e:	loop   0x41968d
  419690:	repnz xor al,0xb3
  419693:	(bad)  
  419694:	jns    0x41961c
  419696:	add    eax,0xd0f3b4c7
  41969b:	inc    eax
  41969c:	sahf   
  41969d:	and    esi,ebp
  41969f:	or     al,0x41
  4196a1:	add    al,0xdf
  4196a3:	std    
  4196a4:	retf   0x47ec
  4196a7:	or     al,0x0
	...
  4196b9:	add    BYTE PTR [eax],al
  4196bb:	add    BYTE PTR [edi],ch
  4196bd:	repz mov esp,0x728fad88
  4196c3:	retf   0xee10
  4196c6:	inc    edx
  4196c7:	int    0x77
  4196c9:	test   al,0xe7
  4196cb:	push   ss
  4196cc:	jne    0x419709
  4196ce:	aam    0x38
  4196d0:	sub    al,0x3c
  4196d2:	push   0xffffffef
  4196d4:	in     eax,0x1a
  4196d6:	sub    al,0xc
  4196d8:	cmp    al,0xd9
  4196da:	sar    DWORD PTR [ecx],cl
  4196dc:	call   0x2d19b2f9
  4196e1:	(bad)  
  4196e3:	mov    gs,WORD PTR [edi+0x1b]
  4196e6:	xor    al,0xf4
  4196e8:	mov    ch,0x57
  4196ea:	jmp    0x5b48:0xa545a4dd
  4196f1:	nop
  4196f2:	lods   eax,DWORD PTR ds:[esi]
  4196f3:	dec    eax
  4196f4:	push   eax
  4196f5:	nop
  4196f6:	jo     0x419748
  4196f8:	add    eax,0x3a9ff419
  4196fd:	aad    0x7b
  4196ff:	push   ds
  419700:	cli    
  419701:	sahf   
  419702:	je     0x4196ee
  419704:	xor    cl,BYTE PTR [edi-0x19]
  419707:	cs std 
  419709:	loop   0x41976b
  41970b:	push   eax
  41970c:	in     eax,dx
  41970d:	cmp    ch,dl
  41970f:	mov    es,WORD PTR [esi+0x5148729f]
  419715:	sbb    DWORD PTR [ebx+edx*8-0x6f19a034],edx
  41971c:	dec    edx
  41971d:	xchg   ecx,eax
  41971e:	out    0x3,eax
	...
  419734:	int3   
  419735:	push   ecx
  419736:	jo     0x419780
  419738:	add    DWORD PTR [ebx],edi
  41973a:	jmp    0x8bf3:0x815b768e
  419741:	sbb    BYTE PTR [ebx+ebx*8+0x1e1fdd32],bl
  419748:	adc    cl,ch
  41974a:	jmp    0x6d62:0x47768c
  419751:	push   edi
  419752:	cmp    DWORD PTR [eax],ebp
  419754:	push   ebp
  419755:	nop
  419756:	xchg   DWORD PTR [ecx+esi*2],ebp
  419759:	sbb    BYTE PTR [ebx-0x3f],bl
  41975c:	les    eax,FWORD PTR [ebx+ecx*2]
  41975f:	(bad)
  419762:	push   ebx
  419763:	fldcw  WORD PTR [eax]
  419765:	retf   0x1a08
  419768:	xchg   esp,eax
  419769:	ret    0xbef8
  41976c:	loop   0x4197b1
  41976e:	call   0xfd8df936
  419773:	fiadd  WORD PTR [ebp-0x16]
  419776:	clc    
  419777:	jb     0x41977b
  419779:	pushf  
  41977a:	mov    DWORD PTR [ecx*4-0x464a9cf0],esp
  419781:	adc    BYTE PTR [ebx-0x77],ah
  419784:	mov    cl,0x10
  419786:	arpl   WORD PTR [ecx-0x7a9cef47],dx
  41978c:	mov    cl,0x1a
  41978e:	cmp    al,0xe7
  419790:	in     al,dx
  419791:	push   ebp
  419792:	add    eax,0xb4c22fe9
  419797:	jo     0x419799
	...
  4197a9:	add    BYTE PTR [eax],al
  4197ab:	add    dl,dh
  4197ad:	arpl   WORD PTR [edi+0x4354f2a4],ax
  4197b3:	cmp    DWORD PTR [esi-0x4809bcab],esi
  4197b9:	adc    bl,cl
  4197bb:	(bad)  
  4197bc:	rcl    BYTE PTR [eax],cl
  4197be:	jnp    0x419811
  4197c0:	mov    cl,0xc2
  4197c2:	push   es
  4197c3:	out    0x1d,al
  4197c5:	lahf   
  4197c6:	xchg   DWORD PTR [edx+edi*1+0x5ce9b59c],edx
  4197cd:	mov    BYTE PTR [ebx+0x3d],al
  4197d0:	adc    BYTE PTR [edx+0x37ceacfd],0x18
  4197d7:	push   0x7a
  4197d9:	xor    eax,DWORD PTR [eax]
  4197db:	add    BYTE PTR [ecx-0x67],dl
  4197de:	xchg   eax,edx
  4197e0:	xchg   edx,eax
  4197e1:	(bad)  
  4197e2:	adc    eax,DWORD PTR [eax]
  4197e4:	push   ebp
  4197e5:	xchg   al,ah
  4197e7:	popw   es
  4197e9:	aad    0xe0
  4197eb:	jne    0x4197a0
  4197ed:	xor    BYTE PTR [ecx-0x1c],al
  4197f0:	daa    
  4197f1:	(bad)  
  4197f2:	(bad)  
  4197f3:	(bad)  
  4197f4:	fld    DWORD PTR [edi]
  4197f6:	jg     0x4197b8
  4197f8:	mov    ss,WORD PTR [ecx+edi*2]
  4197fb:	aam    0x9c
  4197fd:	sbb    al,BYTE PTR [ecx-0x3c]
  419800:	retf   
  419801:	out    dx,eax
  419802:	out    0x4,al
  419804:	push   edx
  419805:	(bad)  
  419806:	rol    BYTE PTR [eax],1
  419808:	pop    ss
  419809:	(bad)  
  41980a:	call   0x7679394a
  41980f:	or     al,BYTE PTR [eax]
	...
  419821:	add    BYTE PTR [eax],al
  419823:	add    BYTE PTR [ebx+0x28],bl
  419826:	inc    ecx
  419827:	fcomp  QWORD PTR [ebx+0x28]
  41982a:	push   ecx
  41982b:	loopne 0x419864
  41982d:	cdq    
  41982e:	or     esi,DWORD PTR [edi-0x48f4cc5f]
  419834:	mov    eax,ds:0xca7d804f
  419839:	nop
  41983a:	test   DWORD PTR [ebp+0x28],edx
  41983d:	in     eax,0x6
  41983f:	data16 xlat BYTE PTR ds:[ebx]
  419841:	aam    0xc0
  419843:	je     0x4197fb
  419845:	adc    ecx,DWORD PTR [ebx]
  419847:	add    dl,BYTE PTR [esp+edx*4+0x1430f0e]
  41984e:	mov    ebp,0x441904e8
  419853:	push   cs
  419854:	sbb    eax,0xdfe4157
  419859:	sbb    dl,BYTE PTR [ecx-0x40]
  41985c:	(bad)  
  41985d:	push   esi
  41985e:	add    al,BYTE PTR [eax+0xefd4819]
  419864:	push   ecx
  419865:	retf   0x0
  419868:	mov    ch,0x36
  41986a:	or     DWORD PTR ds:0xd05eb6ad,0x7408c0b5
  419874:	test   BYTE PTR [esi-0x354a02a2],dh
  41987a:	or     esp,DWORD PTR [esi+0x2e]
  41987d:	and    al,0xbd
  41987f:	data16 out dx,al
  419881:	mov    ebx,DWORD PTR [esp+esi*2+0x53963ddc]
	...
  41989c:	xor    DWORD PTR [edx],0xb1b28805
  4198a2:	inc    edi
  4198a3:	fdivr  QWORD PTR ds:0x9dbf0b3a
  4198a9:	mov    DWORD PTR ds:[ebx+esi*4+0x37],eax
  4198ae:	ret    
  4198af:	inc    ebx
  4198b0:	jp     0x4198e9
  4198b2:	mov    WORD PTR [ebx+0x2d],ss
  4198b5:	mov    ecx,0x3e5e02c6
  4198ba:	or     eax,0xdd7b7b10
  4198bf:	add    BYTE PTR ds:0x6573de35,ch
  4198c5:	ret    
  4198c6:	or     BYTE PTR [esi],cl
  4198c8:	dec    edx
  4198c9:	inc    ebx
  4198ca:	sar    ebp,0xc8
  4198cd:	push   ds
  4198ce:	fnsave [ebx+0x3d]
  4198d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198d2:	fnsave [ebx+0x29]
  4198d5:	fisub  WORD PTR [ebp-0x4]
  4198d8:	sub    ch,ch
  4198da:	add    eax,esi
  4198dc:	cmp    BYTE PTR [esi+0x57],dh
  4198df:	cmp    BYTE PTR [edx],bl
  4198e1:	arpl   WORD PTR [ecx-0x12fcb5f3],di
  4198e7:	std    
  4198e8:	or     dh,0xd
  4198eb:	mov    ch,0x68
  4198ed:	xchg   ch,bl
  4198ef:	jae    0x4198f2
  4198f1:	mov    cl,0x57
  4198f3:	mov    ah,0xfb
  4198f5:	mov    gs,esi
  4198f7:	add    al,0x3c
  4198f9:	retf   0x8bef
  4198fc:	jbe    0x41994b
  4198fe:	pop    edi
  4198ff:	dec    ecx
	...
  419914:	fdiv   DWORD PTR [esi]
  419916:	jne    0x4198ef
  419918:	ror    BYTE PTR [ebx+0x72],1
  41991b:	dec    ecx
  41991c:	mov    ecx,0xc0332290
  419921:	sar    ebx,0x2
  419924:	repz fdivp st(7),st
  419927:	adc    BYTE PTR [ebx+ecx*2-0x1a],ch
  41992b:	add    ah,BYTE PTR [edi+ecx*1+0x16c5d424]
  419932:	sub    al,0xd4
  419934:	xor    al,0xbd
  419936:	fwait
  419937:	repz int 0xd4
  41993a:	or     DWORD PTR [esi],0x39
  41993d:	fidivr DWORD PTR [ebp+0x2c0f80de]
  419943:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419945:	push   ss
  419946:	and    al,0xf0
  419948:	xor    al,0xbd
  41994a:	scas   eax,DWORD PTR es:[edi]
  41994b:	rep lods eax,DWORD PTR ds:[esi]
  41994d:	aam    0x57
  41994f:	push   cs
  419950:	xor    DWORD PTR [esi-0x6b],ebp
  419953:	ficomp WORD PTR [eax-0x19]
  419956:	mov    edi,DWORD PTR cs:[ebx-0x16]
  41995a:	mov    al,0xc1
  41995c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41995d:	(bad)  
  41995e:	adc    al,0x8b
  419960:	push   ecx
  419961:	jae    0x17237d96
  419967:	adc    eax,DWORD PTR [edi]
  419969:	jg     0x4199d1
  41996b:	inc    esi
  41996c:	in     al,0x4f
  41996e:	jo     0x4199a8
  419970:	and    eax,0x32d7bc19
  419975:	in     eax,0x2b
  419977:	mov    WORD PTR [eax],es
	...
  419989:	add    BYTE PTR [eax],al
  41998b:	add    BYTE PTR [esi-0x5ec6ffc5],cl
  419991:	call   0xe900:0x4b02a96d
  419998:	das    
  419999:	xlat   BYTE PTR ds:[ebx]
  41999a:	or     BYTE PTR [eax-0x53],ah
  41999d:	xor    eax,DWORD PTR [edi+0x4b18d6b4]
  4199a3:	stc    
  4199a4:	xor    edi,ebx
  4199a6:	cld    
  4199a7:	shr    ah,cl
  4199a9:	pushf  
  4199aa:	mov    gs,WORD PTR [ecx-0x47]
  4199ad:	pop    DWORD PTR [eax]
  4199af:	jb     0x419a16
  4199b1:	dec    ebx
  4199b2:	mov    DWORD PTR [esi+edx*8+0x29ebdf0a],ebx
  4199b9:	xlat   BYTE PTR ds:[ebx]
  4199ba:	fsub   DWORD PTR [edx-0x3e]
  4199bd:	cwde   
  4199be:	cmp    DWORD PTR [ecx+ebp*4],esi
  4199c1:	fwait
  4199c2:	test   BYTE PTR [esi],dh
  4199c4:	mov    dh,0x8f
  4199c6:	add    BYTE PTR [eax-0x16],ah
  4199c9:	inc    edi
  4199ca:	mov    edi,DWORD PTR [ecx]
  4199cc:	jo     0x419a22
  4199ce:	inc    ebx
  4199cf:	shl    DWORD PTR [esi+0x2de9008f],1
  4199d5:	aas    
  4199d6:	cmp    DWORD PTR [edi*2+0x26257c5],ebp
  4199dd:	push   0x82892489
  4199e2:	cmp    al,0xf2
  4199e4:	or     ebx,ecx
  4199e6:	mov    DWORD PTR [edx*2+0x3d2cd18],edx
  4199ed:	mov    al,ds:0xf77b
	...
  419a02:	add    BYTE PTR [eax],al
  419a04:	cmp    eax,0xb2c0f8d6
  419a09:	or     BYTE PTR [ebx-0x11],dh
  419a0c:	icebp  
  419a0d:	mov    BYTE PTR [ebx-0x27],bh
  419a10:	xchg   edx,eax
  419a11:	cmp    eax,0xbe01224d
  419a16:	push   es
  419a17:	jo     0x41999b
  419a19:	aas    
  419a1a:	xchg   esp,edx
  419a1c:	add    cl,BYTE PTR [eax-0x6f8daa85]
  419a22:	xchg   DWORD PTR [eax],eax
  419a24:	icebp  
  419a25:	popa   
  419a26:	jg     0x419aa5
  419a28:	fs xchg ebx,eax
  419a2a:	jle    0x419a34
  419a2c:	pop    es
  419a2d:	jmp    0xd0211722
  419a32:	out    0x4,eax
  419a34:	pop    edi
  419a35:	mov    dl,0xe8
  419a37:	add    BYTE PTR [edi-0x16],ah
  419a3a:	adc    cl,al
  419a3c:	stos   DWORD PTR es:[edi],eax
  419a3d:	lea    eax,[esi+0x3]
  419a40:	mov    ds:0x301471a8,eax
  419a45:	clc    
  419a46:	xchg   BYTE PTR [ebp-0x50],bh
  419a49:	sbb    BYTE PTR [ecx-0x10],cl
  419a4c:	neg    eax
  419a4e:	cld    
  419a4f:	sub    ecx,esp
  419a51:	int3   
  419a52:	inc    edx
  419a53:	mov    ecx,ebp
  419a55:	aas    
  419a56:	xchg   DWORD PTR [ebp-0x78],edx
  419a59:	js     0x419aac
  419a5b:	cld    
  419a5c:	pop    ss
  419a5d:	mov    ch,ah
  419a5f:	sub    ebp,DWORD PTR [esp+ebx*4-0x55]
  419a63:	(bad)  
  419a65:	adc    al,0x71
  419a67:	fadd   DWORD PTR [eax]
	...
  419a79:	add    BYTE PTR [eax],al
  419a7b:	add    BYTE PTR [ebx+0x223bf1fc],dl
  419a81:	jmp    0x419a8b
  419a83:	mov    eax,ecx
  419a85:	aas    
  419a86:	test   DWORD PTR [ebp+0x44],ecx
  419a89:	cmp    BYTE PTR [esi],al
  419a8b:	mov    esp,DWORD PTR [ecx+0x3455850b]
  419a91:	or     eax,0x1a5c1c79
  419a96:	dec    ebx
  419a97:	add    cl,BYTE PTR [ecx-0x70]
  419a9a:	mov    DWORD PTR [edi+0x5a],ecx
  419a9d:	sbb    BYTE PTR [ecx+0x10],dl
  419aa0:	push   ebx
  419aa1:	cld    
  419aa2:	push   eax
  419aa3:	adc    al,0x5d
  419aa5:	das    
  419aa6:	add    bh,BYTE PTR [ebx]
  419aa8:	out    0x9b,al
  419aaa:	mov    ecx,ebp
  419aac:	or     al,0x8d
  419aae:	add    bh,bh
  419ab0:	mov    ch,0xfb
  419ab2:	mov    esp,0x13a9080
  419ab7:	mov    DWORD PTR [eax+0x2e195642],eax
  419abd:	cld    
  419abe:	fmul   DWORD PTR [eax+0x4b8749a9]
  419ac4:	out    dx,eax
  419ac5:	scas   al,BYTE PTR es:[edi]
  419ac6:	ins    DWORD PTR es:[edi],dx
  419ac7:	xor    eax,0x354dbeb4
  419acc:	mov    bh,0xbc
  419ace:	dec    esi
  419acf:	stc    
  419ad0:	sub    eax,0x360113f3
  419ad5:	jb     0x419adc
  419ad7:	mov    bh,BYTE PTR [eax-0x6e]
  419ada:	rcr    edi,0xb9
  419add:	cmp    al,0xc9
  419adf:	mov    BYTE PTR [eax],al
	...
  419af1:	add    BYTE PTR [eax],al
  419af3:	add    BYTE PTR [ecx-0x62b478f7],ch
  419af9:	cmp    bh,al
  419afb:	rcl    BYTE PTR [edx+edi*1+0x3ca25188],0xcb
  419b03:	add    DWORD PTR [ebp-0x52],edi
  419b06:	dec    eax
  419b07:	xor    eax,0x2c1b5b4
  419b0c:	cmp    al,0xd3
  419b0e:	call   0x8b90939a
  419b13:	pop    ebx
  419b14:	popa   
  419b15:	cmp    eax,0xadf67bc6
  419b1a:	das    
  419b1b:	call   0x21a1e5e
  419b20:	test   BYTE PTR [edi-0x74d127d1],bh
  419b26:	loopne 0x419aaf
  419b28:	call   0x3e5c883b
  419b2d:	sbb    eax,0xffffffe9
  419b30:	test   al,0xb5
  419b32:	push   edi
  419b33:	clc    
  419b34:	cmp    cl,BYTE PTR [edx-0x13]
  419b37:	mov    BYTE PTR [eax-0x328c72f2],cl
  419b3d:	(bad)  
  419b3e:	jb     0x419b79
  419b40:	lods   eax,DWORD PTR ds:[esi]
  419b41:	mov    WORD PTR [eax],?
  419b43:	(bad)  
  419b44:	loope  0x419b62
  419b46:	test   al,0x1e
  419b48:	jle    0x419bb1
  419b4a:	retf   
  419b4b:	loope  0x419b89
  419b4d:	fcmovbe st,st(7)
  419b4f:	fidiv  DWORD PTR [esi+0x47]
  419b52:	call   0xa455a89f
  419b57:	fild   DWORD PTR [eax]
	...
  419b69:	add    BYTE PTR [eax],al
  419b6b:	add    BYTE PTR [edx+ebx*8+0x48055813],ch
  419b72:	lods   al,BYTE PTR ds:[esi]
  419b73:	xlat   BYTE PTR ds:[ebx]
  419b74:	sub    al,0xda
  419b76:	neg    DWORD PTR [esi+ebp*2]
  419b79:	dec    ebx
  419b7a:	out    0x87,al
  419b7c:	aaa    
  419b7d:	dec    ecx
  419b7e:	push   cs
  419b7f:	fild   DWORD PTR [ebp+ebx*2+0x4dd948e8]
  419b86:	or     BYTE PTR [esi],al
  419b88:	mov    edx,0xec4407da
  419b8d:	int3   
  419b8e:	ror    DWORD PTR [edx],cl
  419b90:	cmp    edi,esp
  419b92:	in     eax,0xda
  419b94:	mov    al,ds:0x2f08241b
  419b99:	aad    0xb3
  419b9b:	mov    edi,DWORD PTR [ebp-0x14c559e6]
  419ba1:	jmp    0xc3fa:0x8f9dc5b0
  419ba8:	mov    WORD PTR ds:0x13618f1c,?
  419bae:	mov    ebx,0xefd53c33
  419bb3:	mov    ?,edx
  419bb5:	mov    ds:0xd5323335,eax
  419bba:	xchg   edi,eax
  419bbb:	mov    ?,esi
  419bbd:	lahf   
  419bbe:	(bad)  
  419bbf:	fnstsw WORD PTR [ebx*8-0x6c92f90d]
  419bc6:	adc    DWORD PTR [esi],0x2c004e43
  419bcc:	seto   dh
  419bcf:	and    al,0x0
	...
  419be1:	add    BYTE PTR [eax],al
  419be3:	add    BYTE PTR [esi],cl
  419be5:	nop
  419be6:	xchg   DWORD PTR [esi+eax*2+0x29297b0f],esi
  419bed:	shr    eax,cl
  419bef:	adc    bh,al
  419bf1:	xchg   esp,eax
  419bf2:	mov    eax,DWORD PTR [esi-0x4f]
  419bf5:	pop    DWORD PTR [eax]
  419bf7:	adc    dh,cl
  419bf9:	push   cs
  419bfa:	dec    ebx
  419bfb:	xor    DWORD PTR [ebx],ecx
  419bfd:	xchg   ecx,eax
  419bfe:	mov    DWORD PTR [edx+edi*4+0x39294318],ebx
  419c05:	jecxz  0x419bf3
  419c07:	loop   0x419c2f
  419c09:	xchg   ebp,eax
  419c0a:	mov    esp,DWORD PTR [edx-0x4f]
  419c0d:	pop    DWORD PTR [eax]
  419c0f:	ret    0xef8
  419c12:	inc    ebx
  419c13:	sbb    eax,0xac8990db
  419c18:	cli    
  419c19:	mov    ecx,0xdb29a010
  419c1e:	hlt    
  419c1f:	pusha  
  419c20:	std    
  419c21:	inc    edi
  419c22:	cmp    DWORD PTR [eax],ebp
  419c24:	or     eax,0x852c8791
  419c29:	sbb    BYTE PTR [ebx-0x4f],al
  419c2c:	mov    eax,0x3fea7b06
  419c31:	sar    al,cl
  419c33:	into   
  419c34:	cli    
  419c35:	inc    edi
  419c36:	or     eax,0xfd37fa7e
  419c3b:	xor    al,0x65
  419c3d:	xchg   esp,eax
  419c3e:	mov    ch,0x1c
  419c40:	pop    ebp
  419c41:	inc    esp
  419c42:	jae    0x419bfd
  419c44:	cmp    dl,cl
  419c46:	or     BYTE PTR [ecx+0x0],dl
	...
  419c5c:	push   esi
  419c5d:	cmp    edi,ebp
  419c5f:	sahf   
  419c60:	sub    dl,dl
  419c62:	clc    
  419c63:	out    0x1d,al
  419c65:	shl    ah,cl
  419c67:	push   0xffffffea
  419c69:	add    BYTE PTR [bx+si],al
  419c6c:	iret   
  419c6d:	out    0xdc,al
  419c6f:	add    bh,cl
  419c71:	out    0xe0,al
  419c73:	add    BYTE PTR [edi-0x68ff1b1a],bl
  419c79:	jbe    0x419c6b
  419c7b:	(bad)  
  419c7c:	fmul   DWORD PTR [ecx+0x43]
  419c7f:	(bad)  
  419c80:	adc    edx,DWORD PTR [edx+0x1a247585]
  419c86:	inc    ecx
  419c87:	mov    ah,0x95
  419c89:	xchg   ah,dl
  419c8b:	(bad)  
  419c8c:	push   ecx
  419c8d:	add    bh,ch
  419c8f:	lds    edx,FWORD PTR [ecx+0x3b]
  419c92:	inc    BYTE PTR [esp+ebx*4+0x19834ee9]
  419c99:	xor    al,BYTE PTR [eax]
  419c9b:	jne    0x419c6e
  419c9d:	adc    al,BYTE PTR [edx]
  419c9f:	mov    DWORD PTR [ecx],edx
  419ca1:	or     al,BYTE PTR [edi-0x277b18fe]
  419ca7:	jne    0x419c7a
  419ca9:	inc    cx
  419cab:	loopne 0x419c54
  419cad:	cmp    BYTE PTR ss:[ebp-0x50],0x8b
  419cb2:	jno    0x419cbb
  419cb4:	loop   0x419c3a
  419cb6:	lldt   WORD PTR ds:0xd13bdc85
  419cbd:	pop    es
  419cbe:	jno    0x419cd1
	...
  419cd4:	jnp    0x419c5c
  419cd6:	in     al,0xff
  419cd8:	fcos   
  419cda:	jle    0x419c9e
  419cdc:	nop
  419cdd:	or     al,0x79
  419cdf:	aam    0x8c
  419ce1:	call   0x4fd288ae
  419ce6:	inc    ecx
  419ce7:	rcr    BYTE PTR [esp+edx*1+0x41],1
  419ceb:	in     al,0x65
  419ced:	xchg   al,ah
  419cef:	jbe    0x419d55
  419cf1:	adc    al,0x41
  419cf3:	fsub   st,st(7)
  419cf5:	int    0xdc
  419cf7:	jmp    0x419cae
  419cf9:	xor    al,0x8c
  419cfb:	inc    ebx
  419cfc:	imul   esi,DWORD PTR [edx-0x73ca27ba],0x2bc100da
  419d06:	sbb    al,0x43
  419d08:	stc    
  419d09:	inc    edx
  419d0a:	sub    al,BYTE PTR [eax+0x48938ba]
  419d10:	ret    
  419d11:	shl    DWORD PTR [ecx-0x76c0f041],0x54
  419d18:	mov    bl,0x37
  419d1a:	mov    eax,ss
  419d1c:	hlt    
  419d1d:	shl    cl,1
  419d1f:	xchg   BYTE PTR [eax+0x72],bh
  419d22:	ret    0x9de8
  419d25:	mov    esi,0xaeb71e2d
  419d2a:	cmp    eax,0x3e6cb61e
  419d2f:	(bad)  
  419d30:	mov    ah,0xb9
  419d32:	mov    edi,0xf4243504
  419d37:	inc    DWORD PTR [eax]
	...
  419d49:	add    BYTE PTR [eax],al
  419d4b:	add    bl,al
  419d4d:	mov    bl,0xa3
  419d4f:	add    BYTE PTR [ebp-0x52f27eca],dh
  419d55:	mov    dh,0x56
  419d57:	shl    BYTE PTR [ebp-0x158bff40],1
  419d5d:	mov    dh,0x56
  419d5f:	std    
  419d60:	mov    ch,0xba
  419d62:	(bad)  
  419d63:	cmp    al,dh
  419d65:	jmp    0x589:0x2aa9344f
  419d6c:	cmp    eax,0x7488f32a
  419d71:	imul   ebx
  419d73:	or     BYTE PTR ds:0x2ffef672,ch
  419d79:	test   edx,0x47afc5e8
  419d7f:	mov    esp,0x87fc4f74
  419d84:	stc    
  419d85:	pop    DWORD PTR ds:0xfdd32d02
  419d8b:	add    bh,BYTE PTR [ebx-0x36]
  419d8e:	xchg   esi,eax
  419d8f:	add    eax,0xeae34d34
  419d94:	lods   eax,DWORD PTR ds:[esi]
  419d95:	xchg   ebx,eax
  419d96:	xlat   BYTE PTR ds:[ebx]
  419d97:	mov    ebp,0x8be744f6
  419d9c:	mov    eax,0x3eb3fc44
  419da1:	mov    ecx,ebp
  419da3:	(bad)  
  419da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419da5:	dec    ebx
  419da6:	push   cx
  419da8:	sbb    eax,0x65cfd444
  419dad:	inc    esp
  419dae:	(bad)  
	...
  419dc4:	sbb    eax,0xd74baa
  419dc9:	nop
  419dca:	aaa    
  419dcb:	xor    ebp,0x66d701b9
  419dd1:	inc    edi
  419dd2:	out    0x8e,al
  419dd4:	jle    0x419e0d
  419dd6:	cs push ecx
  419dd8:	jmp    0xc972fc70
  419ddd:	inc    ebx
  419dde:	xchg   esp,eax
  419ddf:	sar    DWORD PTR [edx+edi*4],cl
  419de2:	dec    edi
  419de3:	mov    esi,0x59628eb0
  419de8:	lods   eax,DWORD PTR ds:[esi]
  419de9:	pop    ss
  419dea:	lods   al,BYTE PTR ds:[esi]
  419deb:	aad    0x2d
  419ded:	retf   0xebfe
  419df0:	inc    ecx
  419df1:	aas    
  419df2:	not    dh
  419df4:	cmp    al,0xcd
  419df6:	xor    eax,ebp
  419df8:	xchg   ebp,eax
  419df9:	mov    ?,WORD PTR [edi]
  419dfb:	xlat   BYTE PTR ds:[ebx]
  419dfc:	es inc eax
  419dfe:	ins    BYTE PTR es:[edi],dx
  419dff:	pop    es
  419e00:	mov    bl,0xe0
  419e02:	mov    edi,0xce434004
  419e07:	add    al,BYTE PTR [ebp-0x5a17d3f1]
  419e0d:	push   ss
  419e0e:	and    al,0xe8
  419e10:	xor    al,0xb5
  419e12:	add    BYTE PTR [ebp-0x56bc779a],ah
  419e18:	mov    ebx,0x83a74c13
  419e1d:	inc    ebp
  419e1e:	and    DWORD PTR [ecx+eiz*2],0x592c89a0
  419e25:	adc    DWORD PTR [ebx-0x5f],ebp
	...
  419e3c:	inc    esi
  419e3d:	mov    BYTE PTR [ebx+0x39],al
  419e40:	mov    bl,0x13
  419e42:	and    BYTE PTR [edi+0xb],bh
  419e45:	inc    ebp
  419e46:	pop    ebp
  419e47:	bound  ebp,QWORD PTR [eax-0x1e]
  419e4a:	(bad)  
  419e4b:	stos   DWORD PTR es:[edi],eax
  419e4c:	mov    edx,0x1272538f
  419e51:	sbb    DWORD PTR [ebx-0x13],eax
  419e54:	scas   eax,DWORD PTR es:[edi]
  419e55:	into   
  419e56:	adc    dh,ah
  419e58:	mov    ebx,DWORD PTR [edi]
  419e5a:	add    cl,ch
  419e5c:	mov    dh,0xe0
  419e5e:	push   esi
  419e5f:	jb     0x419ecc
  419e61:	fwait
  419e62:	add    DWORD PTR [edx+edi*4-0x520f2680],esi
  419e69:	fwait
  419e6a:	jbe    0x419e75
  419e6c:	fisttp WORD PTR cs:[eax]
  419e6f:	je     0x419e4b
  419e71:	jg     0x419ec3
  419e73:	jb     0x419e88
  419e75:	cmp    dl,ah
  419e77:	sbb    esp,ebx
  419e79:	inc    esp
  419e7a:	or     eax,0xff828357
  419e7f:	stos   DWORD PTR es:[edi],eax
  419e80:	scas   al,BYTE PTR es:[edi]
  419e81:	xchg   esp,eax
  419e82:	mov    dh,0xa6
  419e84:	(bad)  
  419e85:	nop
  419e86:	fdiv   DWORD PTR [edx+0x9729bed]
  419e8c:	das    
  419e8d:	int3   
  419e8e:	sbb    BYTE PTR [edx-0x36],dh
  419e91:	fwait
  419e92:	mov    bh,BYTE PTR [esi]
  419e94:	not    BYTE PTR [eax+0x59b5e543]
  419e9a:	mov    DWORD PTR [edi-0xb7c7],ebx
	...
  419eb4:	mov    ecx,0xaff2383b
  419eb9:	lahf   
  419eba:	mov    bl,BYTE PTR [ecx]
  419ebc:	aam    0x43
  419ebe:	cmp    eax,0x72586741
  419ec3:	test   BYTE PTR [edi+0x73],0x80
  419ec7:	sti    
  419ec8:	pop    esi
  419ec9:	rcl    DWORD PTR [eax],1
  419ecb:	cmp    ebp,DWORD PTR [esi]
  419ecd:	loopne 0x419eea
  419ecf:	mov    al,BYTE PTR [ebp+0x16]
  419ed2:	sbb    BYTE PTR [eax-0x73],al
  419ed5:	test   al,0xca
  419ed7:	jb     0x419e83
  419ed9:	cmp    BYTE PTR [edi],cl
  419edb:	and    BYTE PTR [edi+0x670e718f],0x60
  419ee2:	outs   dx,DWORD PTR ds:[esi]
  419ee3:	or     ah,BYTE PTR [esi+0x5c188546]
  419ee9:	int    0x37
  419eeb:	retf   0x53ee
  419eee:	xchg   DWORD PTR [ebp-0x20],eax
  419ef1:	mov    es,WORD PTR [ebx+0xc]
  419ef4:	test   DWORD PTR [edx+0x3e193b0c],eax
  419efa:	or     al,0x86
  419efc:	sub    BYTE PTR [ebx-0x5],bl
  419eff:	push   DWORD PTR [edx]
  419f01:	xchg   DWORD PTR [ebp+0xd0723c],ebx
  419f07:	pop    ebp
  419f08:	sahf   
  419f09:	cmp    edi,ebp
  419f0b:	push   esp
  419f0c:	push   edi
  419f0d:	aaa    
  419f0e:	xchg   DWORD PTR [ebp-0x20],ecx
  419f11:	mov    dh,BYTE PTR [ebx-0x13f136af]
  419f17:	inc    esp
	...
  419f2c:	dec    edi
  419f2d:	jae    0x419f5e
  419f2f:	fisttp DWORD PTR [ebx+0x18]
  419f32:	clc    
  419f33:	data16 add BYTE PTR [bp+di],cl
  419f37:	test   BYTE PTR [edx-0x5cffff72],ch
  419f3d:	adc    al,0x6d
  419f3f:	pop    es
  419f40:	mov    ch,0xd0
  419f42:	pop    ss
  419f43:	icebp  
  419f44:	mov    dl,0xaa
  419f46:	cli    
  419f47:	add    BYTE PTR [ebp-0xb4afbca],dh
  419f4d:	aaa    
  419f4e:	add    al,dl
  419f50:	mov    edx,0x887afc1
  419f55:	out    dx,eax
  419f56:	pop    edx
  419f57:	mov    DWORD PTR [esi+esi*1],eax
  419f5a:	pop    ebx
  419f5b:	add    DWORD PTR [ebx+0x32],ebp
  419f5e:	mov    edx,ss
  419f60:	cmp    al,0x84
  419f62:	rol    BYTE PTR [edi+0x5b89f2e0],0x49
  419f69:	shl    BYTE PTR [esi],0xcc
  419f6c:	ds daa 
  419f6e:	mov    BYTE PTR [ebx-0x3],al
  419f71:	dec    ebp
  419f72:	mov    edi,0x66f76a0d
  419f77:	pusha  
  419f78:	jnp    0x419f39
  419f7a:	cs loopne 0x419f18
  419f7d:	ins    DWORD PTR es:[edi],dx
  419f7e:	aam    0x71
  419f80:	mov    al,0xaf
  419f82:	dec    esi
  419f83:	lock push cs
  419f85:	sub    DWORD PTR [esi*4-0xfc1400b],eax
  419f8c:	pop    ebx
  419f8d:	lea    ebp,ds:0xc8
	...
  419fa3:	add    BYTE PTR [edx-0x4afdab4b],bh
  419fa9:	ss pop ebx
  419fab:	sbb    DWORD PTR [eax-0x5a],0x1b390d01
  419fb2:	(bad)  
  419fb3:	push   DWORD PTR [ebp-0x3aac73d7]
  419fb9:	popa   
  419fba:	mov    eax,DWORD PTR [ebp-0x7b]
  419fbd:	cmp    DWORD PTR [edx+eax*8+0xde8eb3c],esp
  419fc4:	(bad)  
  419fc5:	idiv   edi
  419fc7:	xchg   BYTE PTR [eax],cl
  419fc9:	fwait
  419fca:	mov    al,BYTE PTR [ebx-0x6f]
  419fcd:	(bad)  
  419fce:	jb     0x41a019
  419fd0:	jns    0x419fe6
  419fd2:	push   esp
  419fd3:	call   0x9b27e9b4
  419fd8:	jne    0x419f8f
  419fda:	inc    edi
  419fdb:	adc    eax,DWORD PTR cs:[ebp+0x16b65797]
  419fe2:	adc    al,0xd8
  419fe4:	pop    esp
  419fe5:	mov    esi,esp
  419fe7:	call   0x84d3:0xd8241675
  419fee:	sbb    al,0xc8
  419ff0:	ror    BYTE PTR [eax+edx*8],0x5
  419ff4:	mov    ch,0x8f
  419ff6:	or     eax,0xe73bbe87
  419ffb:	add    dh,BYTE PTR [ecx]
  419ffd:	mov    eax,ds:0x90b503e9
  41a002:	cmp    DWORD PTR ss:[ecx],esp
  41a005:	nop
  41a006:	ds dec ebx
	...
  41a01c:	lods   eax,DWORD PTR ds:[esi]
  41a01d:	nop
  41a01e:	ss ret 0xf8a8
  41a022:	fninit 
  41a024:	ds jecxz 0x41a01f
  41a027:	sar    BYTE PTR [eax+0x50032ef0],cl
  41a02d:	dec    esi
  41a02e:	pusha  
  41a02f:	pop    ecx
  41a030:	std    
  41a031:	(bad)  
  41a032:	jge    0x41a08f
  41a034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a035:	mov    WORD PTR [ebx+ecx*8+0x32fe2b4],fs
  41a03c:	adc    BYTE PTR [ecx+0x60],cl
  41a03f:	inc    ecx
  41a040:	add    eax,0x3cb25690
  41a045:	shr    bl,cl
  41a047:	add    DWORD PTR [edx-0x22c69f71],0x15
  41a04e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a04f:	(bad)
  41a053:	add    al,0xb5
  41a055:	(bad)  
  41a056:	jno    0x41a09b
  41a058:	in     eax,0xf
  41a05a:	add    al,dh
  41a05c:	mov    ecx,0x81623dc2
  41a061:	jns    0x41a024
  41a063:	idiv   BYTE PTR [edi]
  41a065:	cli    
  41a066:	(bad)  
  41a067:	call   0xf186a922
  41a06c:	add    ecx,ebx
  41a06e:	call   0xc8d30d5d
  41a073:	jo     0x41a06a
  41a075:	dec    edi
  41a076:	cmp    DWORD PTR [eax+0x26899803],ebp
  41a07c:	pop    ebp
  41a07d:	push   0xeac8
	...
  41a092:	add    BYTE PTR [eax],al
  41a094:	je     0x41a0a0
  41a096:	adc    al,0xe8
  41a098:	rcr    BYTE PTR [edi-0x6fe99bf3],0x0
  41a09f:	jmp    0xa985199a
  41a0a4:	loopne 0x41a0d2
  41a0a6:	add    esi,edi
  41a0a8:	xor    bh,BYTE PTR [eax-0xf]
  41a0ab:	mul    DWORD PTR [esi+0x37]
  41a0ae:	sub    eax,0xffffffb6
  41a0b1:	pop    DWORD PTR [eax+0x3fc2b070]
  41a0b7:	jb     0x41a107
  41a0b9:	jns    0x41a07c
  41a0bb:	out    dx,al
  41a0bc:	aas    
  41a0bd:	(bad)  
  41a0be:	(bad)  
  41a0bf:	call   0xf186a97a
  41a0c4:	jnp    0x41a0a8
  41a0c6:	call   0xd0d29ab5
  41a0cb:	add    dh,bl
  41a0cd:	rcr    BYTE PTR [ebx],0x62
  41a0d0:	jg     0x41a075
  41a0d2:	sub    DWORD PTR [ecx],edi
  41a0d4:	mov    bl,0x2e
  41a0d6:	xchg   DWORD PTR [esi+esi*8+0x5c297308],ebx
  41a0dd:	or     BYTE PTR [edi+ebp*8],dh
  41a0e0:	dec    esp
  41a0e1:	js     0x41a113
  41a0e3:	xchg   esp,eax
  41a0e4:	mov    edx,DWORD PTR [eax]
  41a0e6:	rol    BYTE PTR [eax],0x9e
  41a0e9:	(bad)  
  41a0ea:	ret    0xb972
  41a0ed:	xchg   ebp,eax
  41a0ee:	dec    ebx
  41a0ef:	or     al,0x67
  41a0f1:	std    
  41a0f2:	jne    0x41a0c2
  41a0f4:	mov    ch,0xa1
  41a0f6:	std    
  41a0f7:	inc    DWORD PTR [eax]
	...
  41a109:	add    BYTE PTR [eax],al
  41a10b:	add    BYTE PTR [edx+edx*1+0x159b04f5],bl
  41a112:	add    DWORD PTR ss:[edx+edx*4+0x54a7c887],ecx
  41a11a:	or     eax,DWORD PTR [edi+0x92c8]
  41a120:	out    0xc8,eax
  41a122:	sbb    BYTE PTR [ebx-0x3f00a43f],cl
  41a128:	dec    edi
  41a129:	add    dh,BYTE PTR [edi]
  41a12b:	ret    0x2caf
  41a12e:	mov    BYTE PTR [edi+0x40],dh
  41a131:	fwait
  41a132:	lock add ebx,DWORD PTR ds:0xd7c071ba
  41a139:	out    0xc0,al
  41a13b:	mov    esi,DWORD PTR [eax-0x78]
  41a13e:	aaa    
  41a13f:	xor    BYTE PTR [ecx],ah
  41a141:	inc    ebx
  41a142:	add    al,0x10
  41a145:	mov    eax,edx
  41a147:	jb     0x41a0e4
  41a149:	xchg   esp,eax
  41a14a:	dec    ebx
  41a14b:	or     al,0xd7
  41a14d:	cld    
  41a14e:	jne    0x41a120
  41a150:	gs pop eax
  41a152:	add    BYTE PTR [eax],al
  41a154:	or     al,0x8f
  41a156:	mov    dh,0x47
  41a158:	dec    ebp
  41a159:	fld    st(0)
  41a15b:	add    al,al
  41a15d:	xchg   ebx,eax
  41a15e:	add    BYTE PTR [ebx+0x74017e2b],al
  41a164:	(bad)  
  41a165:	nop
  41a166:	inc    ecx
  41a167:	cld    
  41a168:	das    
  41a169:	lahf   
  41a16a:	fiadd  WORD PTR [ebx-0x24]
  41a16d:	pop    edx
  41a16e:	or     cl,BYTE PTR [ebx+0x0]
	...
  41a184:	sbb    DWORD PTR [esi-0x77],ecx
  41a187:	inc    esp
  41a188:	mov    ch,0x27
  41a18a:	adc    al,BYTE PTR [edi+0x437b8c70]
  41a190:	mov    eax,ds:0x38fc3dc2
  41a195:	jmp    0x41a198
  41a197:	or     al,0x30
  41a199:	mov    esp,0x79c4e8ad
  41a19e:	iret   
  41a19f:	std    
  41a1a0:	cmp    edi,esp
  41a1a2:	inc    DWORD PTR [ebx+0x1274c]
  41a1a8:	cs ins BYTE PTR es:[edi],dx
  41a1aa:	loopne 0x41a1ad
  41a1ac:	lock jmp 0xbf67:0x47088966
  41a1b4:	ja     0x41a1f5
  41a1b6:	addr16 xchg ebp,eax
  41a1b9:	int3   
  41a1ba:	jnp    0x41a20f
  41a1bc:	push   ecx
  41a1bd:	aad    0xc1
  41a1bf:	ret    0x8cbd
  41a1c2:	jns    0x41a214
  41a1c4:	mov    bh,0x94
  41a1c6:	jnp    0x41a21b
  41a1c8:	inc    ebp
  41a1c9:	(bad)  
  41a1ca:	rol    edx,0xad
  41a1cd:	xchg   esp,eax
  41a1ce:	jns    0x41a220
  41a1d0:	mov    ecx,0x21537b8c
  41a1d5:	xchg   ebp,eax
  41a1d6:	rol    edx,0xad
  41a1d9:	mov    WORD PTR [ecx+0x50],?
  41a1dc:	mov    bl,0xb1
  41a1de:	cmp    BYTE PTR [eax+0x3c],dl
  41a1e1:	idiv   eax
  41a1e3:	or     BYTE PTR [edx+0x8b05ea],0x0
	...
  41a1fa:	add    BYTE PTR [eax],al
  41a1fc:	ins    DWORD PTR es:[edi],dx
  41a1fd:	xor    dl,BYTE PTR [ebp+0xd]
  41a200:	cli    
  41a201:	arpl   cx,bx
  41a203:	push   ecx
  41a204:	repnz sti 
  41a206:	mov    WORD PTR [edi-0x23],cs
  41a209:	aad    0xcd
  41a20b:	std    
  41a20c:	loop   0x41a1df
  41a20e:	xor    ecx,DWORD PTR ds:0x4841f623
  41a214:	dec    ecx
  41a215:	(bad)  
  41a216:	fistp  QWORD PTR [ebx]
  41a218:	inc    ecx
  41a219:	outs   dx,DWORD PTR ds:[esi]
  41a21a:	scas   eax,DWORD PTR es:[edi]
  41a21b:	cmp    ecx,DWORD PTR [ecx-0x6b]
  41a21e:	push   0x66
  41a220:	mov    ecx,0xb035028f
  41a225:	ret    0x7c1f
  41a228:	push   es
  41a229:	fs (bad) 
  41a22b:	push   ebp
  41a22c:	popf   
  41a22d:	or     BYTE PTR [ebx+esi*4-0x24eff700],ch
  41a234:	sub    edi,DWORD PTR [ecx]
  41a236:	out    0xcf,al
  41a238:	pushf  
  41a239:	ficomp WORD PTR [bx+di+0x5d]
  41a23d:	or     BYTE PTR [eax+edi*4],bh
  41a240:	js     0x41a204
  41a242:	iret   
  41a243:	jnp    0x41a23b
  41a245:	pop    edi
  41a246:	sbb    BYTE PTR [edi],dh
  41a248:	pop    ebp
  41a249:	lds    esi,FWORD PTR [ebp-0x25d79f31]
  41a24f:	into   
  41a250:	out    0x57,al
  41a252:	bound  edi,QWORD PTR [ecx]
  41a254:	imul   edi,DWORD PTR [esp+ebx*1],0xb7d23ccc
  41a25b:	xor    eax,0xd26d27e8
	...
  41a274:	cmp    BYTE PTR [eax+eiz*2],bh
  41a277:	dec    ecx
  41a278:	xor    DWORD PTR [edx],edx
  41a27a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a27b:	pop    eax
  41a27c:	mov    esi,0x20e02c08
  41a281:	shl    BYTE PTR [ebx-0x24718e7f],cl
  41a287:	jl     0x41a2ff
  41a289:	sub    esi,DWORD PTR [edx+0x49]
  41a28c:	add    DWORD PTR [esi-0x35d3185c],ecx
  41a292:	jecxz  0x41a30e
  41a294:	pop    esi
  41a295:	dec    ebx
  41a296:	inc    eax
  41a297:	lahf   
  41a298:	out    dx,al
  41a299:	cmp    eax,DWORD PTR [esi+0x7b]
  41a29c:	xchg   BYTE PTR [edi],ch
  41a29e:	jmp    0x590:0x25e538
  41a2a5:	cmp    bh,ch
  41a2a7:	fs push ds
  41a2a9:	rol    BYTE PTR [ebx],0x93
  41a2ac:	mov    ah,0xdd
  41a2ae:	jmp    0x66914a93
  41a2b3:	pusha  
  41a2b4:	ins    BYTE PTR es:[edi],dx
  41a2b5:	mov    ebp,DWORD PTR [edx-0x1b]
  41a2b8:	xor    eax,0x7b990ccf
  41a2bd:	mov    edi,0x51798708
  41a2c2:	or     BYTE PTR [edi+0x10ed719],cl
  41a2c8:	sbb    BYTE PTR [edi*8+0x745032e6],dl
  41a2cf:	div    BYTE PTR [ebx-0x41]
  41a2d2:	in     al,dx
  41a2d3:	(bad)  
  41a2d4:	fstp   QWORD PTR [ebx-0x3]
  41a2d7:	push   esp
	...
  41a2ec:	jno    0x41a321
  41a2ee:	dec    ebp
  41a2ef:	ins    DWORD PTR es:[edi],dx
  41a2f0:	jnp    0x41a32f
  41a2f2:	test   BYTE PTR [ecx-0x40ce70f6],ch
  41a2f8:	lock sub BYTE PTR [edx],al
  41a2fb:	cli    
  41a2fc:	push   0x6ec5733d
  41a301:	in     al,dx
  41a302:	mov    cl,0x9e
  41a304:	jae    0x41a30f
  41a306:	mov    BYTE PTR [edx+0x2ec080b4],0xe3
  41a30d:	fadd   st,st(7)
  41a30f:	stos   DWORD PTR es:[edi],eax
  41a310:	cmp    ebp,DWORD PTR cs:[edi]
  41a313:	mov    al,0xff
  41a315:	xchg   ebx,eax
  41a316:	iret   
  41a317:	sub    eax,0x6ae8a7fa
  41a31d:	aaa    
  41a31e:	mov    DWORD PTR [ebp+0x706693d2],edi
  41a324:	mov    ah,0x8
  41a326:	inc    esp
  41a327:	or     eax,0x2b0812f9
  41a32c:	out    dx,al
  41a32d:	cmp    dl,BYTE PTR [eax+eax*1+0x67]
  41a331:	pop    edx
  41a332:	jg     0x41a320
  41a334:	sar    BYTE PTR [ebp+0x56],1
  41a337:	push   edi
  41a338:	mul    BYTE PTR [esi+0x6a]
  41a33b:	or     BYTE PTR [ebx+0x1fd62897],ah
  41a341:	pop    DWORD PTR [edi-0x514b808]
  41a347:	adc    eax,0x3d4130
  41a34c:	pop    ss
  41a34d:	pop    edi
  41a34e:	xor    esi,0x0
	...
  41a364:	mov    ds:0x8c016c12,eax
  41a369:	mov    ?,WORD PTR [edi+0x7d]
  41a36c:	xchg   esp,eax
  41a36d:	mov    es,WORD PTR [ebp+0x3b53a1e]
  41a373:	add    ax,0x8d2
  41a377:	(bad)  
  41a379:	aam    0x4
  41a37b:	(bad)  
  41a37c:	leave  
  41a37d:	dec    esp
  41a37e:	add    BYTE PTR [esi-0x2b],ah
  41a381:	ror    DWORD PTR [edx],1
  41a383:	psubusb mm2,mm0
  41a386:	std    
  41a387:	dec    DWORD PTR [ebx+edi*1-0x4c]
  41a38b:	dec    esi
  41a38c:	push   esp
  41a38d:	jle    0x41a3dc
  41a38f:	push   ebx
  41a390:	and    eax,DWORD PTR [edx-0x23]
  41a393:	adc    BYTE PTR [ebx+edx*4+0x26a8c081],bl
  41a39a:	dec    ebp
  41a39b:	push   0x8d74
  41a3a0:	inc    ebx
  41a3a1:	loop   0x41a3ab
  41a3a3:	(bad)  
  41a3a4:	fidiv  DWORD PTR [edi]
  41a3a6:	dec    ebp
  41a3a7:	(bad)  
  41a3a8:	fnstcw WORD PTR [ebx]
  41a3aa:	dec    ebp
  41a3ab:	push   ebx
  41a3ac:	xor    al,0xdc
  41a3ae:	push   esi
  41a3af:	add    DWORD PTR [edi+edx*2],ebx
  41a3b2:	add    dh,BYTE PTR [ebx]
  41a3b4:	fdiv   QWORD PTR [esi+0x53991046]
  41a3ba:	or     eax,DWORD PTR [ebp+esi*4-0x4afffdcc]
  41a3c1:	lods   eax,DWORD PTR ds:[esi]
  41a3c2:	dec    ebp
  41a3c3:	or     BYTE PTR [ebx-0x43],dl
  41a3c6:	inc    ebx
  41a3c7:	push   cs
	...
  41a3dc:	mov    dl,0xc1
  41a3de:	or     BYTE PTR ds:[ebx+0x67],dl
  41a3e2:	fadd   QWORD PTR [ecx]
  41a3e4:	cmp    eax,0x30d10f2
  41a3e9:	push   0xbef4acfb
  41a3ee:	inc    esi
  41a3ef:	or     al,0xd
  41a3f1:	and    eax,0x87360655
  41a3f6:	rol    BYTE PTR [ecx+0x467a2b75],1
  41a3fc:	mov    cl,0xbc
  41a3fe:	inc    ebx
  41a3ff:	push   cs
  41a400:	sub    BYTE PTR [ecx],ah
  41a402:	and    DWORD PTR [eax+0xe43acb6],ecx
  41a408:	cmp    eax,0xfbc62169
  41a40d:	test   BYTE PTR [esi+eiz*2],al
  41a410:	ss loop 0x41a411
  41a413:	pop    es
  41a414:	ret    0xc1c3
  41a417:	mov    bl,dh
  41a419:	test   DWORD PTR [eax],edx
  41a41b:	(bad)  
  41a41c:	jmp    0xf2f69ffd
  41a421:	xor    BYTE PTR [eax-0xc7c5a08],al
  41a427:	(bad)  
  41a428:	lock add DWORD PTR ds:[ebp+esi*4+0x26],edi
  41a42e:	les    eax,FWORD PTR [ebx+0x3d]
  41a431:	pop    es
  41a432:	add    BYTE PTR [eax],al
  41a434:	mov    ch,0xf1
  41a436:	inc    ebp
  41a437:	hlt    
  41a438:	retf   0x126
  41a43b:	add    BYTE PTR [esi],cl
  41a43d:	sub    eax,0xf880
	...
  41a452:	add    BYTE PTR [eax],al
  41a454:	aad    0x3b
  41a456:	test   ah,0x78
  41a459:	add    DWORD PTR cs:[eax],eax
  41a45c:	or     dl,BYTE PTR [eax+0x3776c4e7]
  41a462:	out    0xcc,eax
  41a464:	mov    ch,0x8f
  41a466:	cs inc esi
  41a468:	jmp    0xb5458ba5
  41a46d:	or     ch,BYTE PTR [ebp-0x5af57ae7]
  41a473:	daa    
  41a474:	test   DWORD PTR [esp+ebp*4],eax
  41a477:	sti    
  41a478:	fisub  DWORD PTR [ebx+0x2d]
  41a47b:	int3   
  41a47c:	enter  0xad0a,0x18
  41a480:	or     ah,BYTE PTR gs:[ebp-0x53fb9adb]
  41a487:	retf   
  41a488:	popf   
  41a489:	push   ebx
  41a48a:	or     eax,0xad0aa8cc
  41a48f:	pop    ds
  41a490:	add    eax,0x51ba50b
  41a495:	add    eax,0x39dd7ac
  41a49a:	in     eax,dx
  41a49b:	retf   
  41a49c:	mov    BYTE PTR [ebp-0x2ed1c909],ah
  41a4a2:	sbb    BYTE PTR [ecx*4+0x70cb980c],dh
  41a4a9:	add    eax,0xd13d1425
  41a4ae:	sub    bl,bh
  41a4b0:	sub    ecx,edx
  41a4b2:	icebp  
  41a4b3:	cli    
  41a4b4:	or     ecx,edx
  41a4b6:	jecxz  0x41a479
	...
  41a4cc:	sti    
  41a4cd:	sub    eax,0xffffff80
  41a4d0:	jne    0x41a495
  41a4d2:	in     al,dx
  41a4d3:	fisttp DWORD PTR [edx-0x1]
  41a4d6:	popf   
  41a4d7:	retf   
  41a4d8:	xor    dl,cl
  41a4da:	out    dx,eax
  41a4db:	xor    ch,0xc2
  41a4de:	cmc    
  41a4df:	retf   0x9fa3
  41a4e2:	xchg   BYTE PTR [edx],dl
  41a4e4:	and    BYTE PTR [edx-0x70250b65],ah
  41a4ea:	add    BYTE PTR [eax+0x77],ah
  41a4ed:	xchg   ebx,eax
  41a4ee:	sub    DWORD PTR [ecx-0x53396c9b],0xffffffef
  41a4f5:	aaa    
  41a4f6:	push   esi
  41a4f7:	push   ecx
  41a4f8:	clc    
  41a4f9:	call   0xb47afbfa
  41a4fe:	std    
  41a4ff:	jmp    0xc03f2d89
  41a504:	out    0x3a,al
  41a506:	adc    edi,DWORD PTR [ebp-0x1f]
  41a509:	ja     0x41a50b
  41a50b:	lahf   
  41a50c:	out    dx,al
  41a50d:	inc    edx
  41a50e:	mov    al,0x2e
  41a510:	(bad)  
  41a511:	jge    0x41a509
  41a513:	jb     0x41a50c
  41a515:	fstp   DWORD PTR [esi-0x3e]
  41a518:	stc    
  41a519:	dec    esp
  41a51a:	add    al,0xe9
  41a51c:	jg     0x41a4dc
  41a51e:	add    al,0xe
  41a520:	(bad)  
  41a521:	xor    al,0x13
  41a523:	and    eax,0xfe0077a9
  41a528:	add    al,0xa0
  41a52a:	std    
  41a52b:	fdivr  QWORD PTR [edx]
  41a52d:	mov    al,ds:0xe940
	...
  41a542:	add    BYTE PTR [eax],al
  41a544:	jg     0x41a504
  41a546:	sbb    al,0xd1
  41a548:	cmp    eax,0x6fdefd00
  41a54d:	mov    esi,0x75c118
  41a552:	std    
  41a553:	into   
  41a554:	jg     0x41a514
  41a556:	inc    esp
  41a557:	shr    DWORD PTR ds:0xa4befd00,1
  41a55d:	daa    
  41a55e:	mov    ch,0x79
  41a560:	jg     0x41a597
  41a562:	rcl    DWORD PTR [edx+ecx*8],0x23
  41a566:	dec    edi
  41a567:	aas    
  41a568:	outs   dx,BYTE PTR ds:[esi]
  41a569:	ret    
  41a56a:	or     al,0x9e
  41a56c:	inc    ebp
  41a56d:	ret    
  41a56e:	adc    ch,BYTE PTR [ecx]
  41a570:	mov    ecx,0xb6c4f008
  41a575:	(bad)  
  41a576:	std    
  41a577:	add    BYTE PTR [esi+esi*4],cl
  41a57a:	into   
  41a57b:	rol    DWORD PTR [ebp+0x43],0x8
  41a57f:	rcl    DWORD PTR [edi+0x1ce17cf8],0x4a
  41a586:	add    BYTE PTR [eax],al
  41a588:	xchg   DWORD PTR [eax],eax
  41a58a:	mov    ebp,0xc735fce2
  41a58f:	shl    DWORD PTR [edx+edi*1-0x42],0xe1
  41a594:	aam    0x35
  41a596:	mov    esi,0x6a4f1189
  41a59b:	add    al,0x49
  41a59d:	iret   
  41a59e:	cld    
  41a59f:	push   eax
  41a5a0:	mov    ebx,edi
  41a5a2:	or     al,ch
  41a5a4:	fimul  WORD PTR [ebx+edi*8]
  41a5a7:	inc    DWORD PTR [eax]
	...
  41a5b9:	add    BYTE PTR [eax],al
  41a5bb:	add    BYTE PTR [eax+0x52],dl
  41a5be:	je     0x41a5d8
  41a5c0:	push   ecx
  41a5c1:	pusha  
  41a5c2:	je     0x41a5d4
  41a5c4:	jb     0x41a60f
  41a5c6:	jno    0x41a5d4
  41a5c8:	mov    ebx,0xcae808df
  41a5cd:	or     edi,ebx
  41a5cf:	call   DWORD PTR [eax]
  41a5d1:	push   ebx
  41a5d2:	je     0x41a5d8
  41a5d4:	int3   
  41a5d5:	mov    esp,edi
  41a5d7:	add    cl,BYTE PTR [esi+0x52]
  41a5da:	pop    esi
  41a5db:	leave  
  41a5dc:	dec    esi
  41a5dd:	xor    edi,ebp
  41a5df:	push   esp
  41a5e0:	pop    es
  41a5e1:	pop    eax
  41a5e2:	jge    0x41a5d0
  41a5e4:	or     BYTE PTR [esi-0x4b510000],cl
  41a5ea:	pop    ecx
  41a5eb:	or     al,0xc2
  41a5ed:	add    BYTE PTR [edi+0xcd4647d],0x68
  41a5f4:	pop    esp
  41a5f5:	fild   WORD PTR [eax+0x0]
  41a5f8:	mov    ds:0x1b81c053,eax
  41a5fd:	dec    eax
  41a5fe:	test   al,al
  41a600:	dec    ebx
  41a601:	mov    dh,0xfb
  41a603:	pop    es
  41a604:	mov    ch,0x28
  41a606:	add    DWORD PTR [eax+0x75],ebp
  41a609:	popf   
  41a60a:	jmp    0x41a60b
  41a60c:	mov    WORD PTR [esi+esi*2],?
  41a60f:	inc    ebx
  41a610:	in     eax,dx
  41a611:	xchg   edi,eax
  41a612:	fsub   st(2),st
  41a614:	xor    eax,0xf584c7bd
  41a619:	push   esp
  41a61a:	jge    0x41a601
  41a61c:	mov    edx,0x6a0128
	...
  41a631:	add    BYTE PTR [eax],al
  41a633:	add    BYTE PTR [ecx-0x7f74ceb0],dh
  41a639:	jo     0x41a66c
  41a63b:	mov    bh,0xc5
  41a63d:	pop    ebp
  41a63e:	inc    ecx
  41a63f:	add    ch,cl
  41a641:	out    0x64,al
  41a643:	std    
  41a644:	fisubr DWORD PTR [edx+0x6b380dc4]
  41a64a:	(bad)  
  41a64b:	push   DWORD PTR [ebp+0x2dcd3db0]
  41a651:	jecxz  0x41a606
  41a653:	mov    edi,DWORD PTR [eax]
  41a655:	xchg   ebp,eax
  41a656:	jne    0x41a69b
  41a658:	or     DWORD PTR [edi+0x26b505c3],0xbc987b76
  41a662:	cmp    eax,0xffcf8dd0
  41a667:	push   DWORD PTR [ebp-0x6fbc70d3]
  41a66d:	push   esi
  41a66e:	(bad)  
  41a66f:	dec    ebx
  41a670:	add    ch,0xc1
  41a673:	loopne 0x41a622
  41a675:	int3   
  41a676:	sti    
  41a677:	mov    esi,0x3c115c2
  41a67c:	push   0x1cfdc843
  41a681:	daa    
  41a682:	add    al,0x0
  41a684:	mov    ch,0xcc
  41a686:	or     edi,DWORD PTR [edi+0x575a5c2]
  41a68c:	mov    ch,0x26
  41a68e:	jl     0x41a699
  41a690:	ss nop
  41a692:	or     al,0xdc
  41a694:	mov    ch,0x80
  41a696:	sahf   
  41a697:	jbe    0x41a699
	...
  41a6a9:	add    BYTE PTR [eax],al
  41a6ab:	add    BYTE PTR [esi+0x27],dh
  41a6ae:	cs xor al,0x3e
  41a6b1:	fstp   TBYTE PTR [ebx+0x7a]
  41a6b4:	sahf   
  41a6b5:	and    eax,DWORD PTR [esi+0x2408b134]
  41a6bb:	fdivr  DWORD PTR [eax+ecx*2]
  41a6be:	bound  esi,QWORD PTR [ebx-0x7d28d5b6]
  41a6c4:	loop   0x41a655
  41a6c6:	out    0xc8,eax
  41a6c8:	mov    ch,0x88
  41a6ca:	xor    DWORD PTR [ebp+eax*1-0xa],edi
  41a6ce:	out    0xc8,al
  41a6d0:	mov    ch,0x8f
  41a6d2:	or     dh,BYTE PTR [edx-0x328cfde]
  41a6d8:	jmp    0x282f:0x7676e3a9
  41a6df:	fidivr DWORD PTR [ebp+0x72fb494e]
  41a6e5:	xor    al,0x9c
  41a6e7:	sti    
  41a6e8:	lods   eax,DWORD PTR ds:[esi]
  41a6e9:	dec    ecx
  41a6ea:	jo     0x41a722
  41a6ec:	xchg   ebp,eax
  41a6ed:	daa    
  41a6ee:	sbb    eax,0x6334a883
  41a6f3:	ret    
  41a6f4:	mov    WORD PTR es:[edx+0x36],gs
  41a6f8:	mov    DWORD PTR [edx+esi*2],esi
  41a6fb:	mov    eax,ds:0xb802ff10
  41a701:	or     ecx,ebp
  41a703:	add    BYTE PTR [ebp+0x37f72f8f],dh
  41a709:	jno    0x41a6f1
  41a70b:	add    esi,DWORD PTR [ebp+0x4f27a7]
	...
  41a721:	add    BYTE PTR [eax],al
  41a723:	add    ah,cl
  41a725:	(bad)  
  41a726:	ss jnp 0x41a707
  41a729:	xchg   DWORD PTR [ecx+eax*2+0x58],esi
  41a72d:	(bad)  
  41a72f:	sti    
  41a730:	shl    BYTE PTR [eax+eax*1],cl
  41a733:	mov    dh,0x35
  41a735:	dec    edi
  41a736:	or     eax,0x8b4165
  41a73b:	jmp    0xea3f5f76
  41a740:	scas   eax,DWORD PTR es:[edi]
  41a741:	xchg   BYTE PTR ds:0x5131f77c,cl
  41a747:	loope  0x41a6eb
  41a749:	dec    edi
  41a74a:	or     eax,0x8d056d
  41a74f:	jmp    0xcc32de3
  41a754:	adc    DWORD PTR [edi-0x207edb75],ecx
  41a75a:	mov    edi,DWORD PTR [esi+edx*1+0x6fed5132]
  41a761:	inc    edi
  41a762:	and    DWORD PTR [eax],0xffffffe2
  41a765:	pminub mm4,mm7
  41a768:	mov    dh,0x8f
  41a76a:	std    
  41a76b:	mov    esp,0x714308e6
  41a770:	icebp  
  41a771:	mov    edi,0x5f236fc
  41a776:	fsub   DWORD PTR [esi+ecx*1-0x7e]
  41a77a:	test   BYTE PTR [ebx+edi*4],ch
  41a77d:	xor    edi,ebp
  41a77f:	push   ds
  41a780:	add    al,0x30
  41a782:	std    
  41a783:	cld    
  41a784:	cli    
  41a785:	popf   
  41a786:	inc    eax
  41a787:	jmp    0x41a78c
	...
  41a79c:	stos   DWORD PTR es:[edi],eax
  41a79d:	std    
  41a79e:	dec    eax
  41a79f:	lock pop ds
  41a7a1:	cmp    BYTE PTR [esi+0x72],ah
  41a7a4:	test   BYTE PTR [edi-0x776ed79a],0x66
  41a7ab:	loop   0x41a826
  41a7ad:	stos   BYTE PTR es:[edi],al
  41a7ae:	xchg   DWORD PTR [ecx*1+0x6f2a89aa],ebp
  41a7b5:	test   BYTE PTR [esi-0x405291de],dh
  41a7bb:	leave  
  41a7bc:	pop    esi
  41a7bd:	lods   eax,DWORD PTR ds:[esi]
  41a7be:	or     DWORD PTR [eax],eax
  41a7c0:	or     eax,0xf24585d5
  41a7c5:	mov    ch,0xc3
  41a7c7:	and    eax,0xfb8f5c
  41a7cc:	xlat   BYTE PTR ds:[ebx]
  41a7cd:	stc    
  41a7ce:	mov    esp,0xbe363ce9
  41a7d3:	mov    esp,DWORD PTR [ebx+0x4c]
  41a7d6:	fst    QWORD PTR [eax]
  41a7d8:	xchg   edi,eax
  41a7d9:	loope  0x41a7f9
  41a7db:	(bad)  
  41a7dc:	pop    ss
  41a7dd:	stc    
  41a7de:	mov    esp,0xdd4c24e8
  41a7e3:	or     BYTE PTR [edi],al
  41a7e5:	dec    esp
  41a7e6:	test   DWORD PTR [ebp-0x34],eax
  41a7e9:	fcom   DWORD PTR [eax]
  41a7eb:	(bad)  
  41a7ec:	iret   
  41a7ed:	imul   edx,DWORD PTR [eax-0x73],0x49
  41a7f1:	out    dx,eax
  41a7f2:	dec    edi
  41a7f3:	call   0x3cc492
  41a7f8:	cli    
  41a7f9:	dec    ebx
  41a7fa:	inc    ecx
  41a7fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7fc:	aam    0xd4
  41a7fe:	mov    ebp,0x45
	...
  41a813:	add    BYTE PTR [edx],ch
  41a815:	aaa    
  41a816:	arpl   cx,ax
  41a818:	sbb    DWORD PTR [edi],edx
  41a81a:	or     BYTE PTR [edx-0x1c],ch
  41a81d:	mov    bh,0x41
  41a81f:	pushf  
  41a820:	sbb    al,0x4a
  41a822:	jno    0x41a82c
  41a824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a825:	inc    edi
  41a826:	jnp    0x41a827
  41a828:	shl    DWORD PTR [edx-0x68e7f040],cl
  41a82e:	push   es
  41a82f:	add    BYTE PTR [edi+ecx*1+0x617874fb],cl
  41a836:	sti    
  41a837:	jne    0x41a7f5
  41a839:	dec    ecx
  41a83a:	jno    0x41a844
  41a83c:	mov    ah,0x2f
  41a83e:	jnp    0x41a83f
  41a840:	xchg   ebx,eax
  41a841:	mov    cl,0xc0
  41a843:	invd   
  41a845:	cmp    al,0x3
  41a847:	add    BYTE PTR [edi+esi*4+0x39],bl
  41a84b:	push   eax
  41a84c:	mov    ch,0x32
  41a84e:	inc    ecx
  41a84f:	add    BYTE PTR ds:0xb500c341,bl
  41a855:	or     al,bl
  41a857:	add    BYTE PTR [ebp-0x1c3787d8],dh
  41a85d:	ret    0x4379
  41a860:	pop    esi
  41a861:	sar    DWORD PTR [ebp-0x78],cl
  41a864:	cmp    ebp,ecx
  41a866:	ret    0xb56a
  41a869:	js     0x41a829
  41a86b:	inc    ebx
  41a86c:	or     eax,0x70875b28
  41a871:	inc    edx
  41a873:	aad    0x83
  41a875:	cmc    
  41a876:	retf   0x8b
	...
  41a889:	add    BYTE PTR [eax],al
  41a88b:	add    BYTE PTR [eax],bh
  41a88d:	rol    ch,0xfd
  41a890:	or     dl,BYTE PTR [edx-0x5b1502cc]
  41a896:	rcr    BYTE PTR [eax],0x2c
  41a899:	push   ebx
  41a89a:	leave  
  41a89b:	xchg   DWORD PTR [eax-0x3c],ebp
  41a89e:	jg     0x41a91b
  41a8a0:	in     eax,dx
  41a8a1:	daa    
  41a8a2:	hlt    
  41a8a3:	test   esp,edi
  41a8a5:	daa    
  41a8a6:	add    DWORD PTR [eax],eax
  41a8a8:	dec    edi
  41a8a9:	sub    BYTE PTR [ecx+0x2c],bl
  41a8ac:	mov    ah,0x28
  41a8ae:	add    DWORD PTR [ebx+0x31313070],ecx
  41a8b4:	cmc    
  41a8b5:	iret   
  41a8b6:	xchg   esi,eax
  41a8b7:	jg     0x41a873
  41a8b9:	push   0x22b2f87f
  41a8be:	jle    0x41a87e
  41a8c0:	mov    ch,0x26
  41a8c2:	add    ebp,edi
  41a8c4:	enter  0xed92,0x3f
  41a8c8:	mov    ch,0x4b
  41a8ca:	xor    eax,0xf426b525
  41a8cf:	cmp    BYTE PTR [esp],0x1
  41a8d3:	add    BYTE PTR [esi],dh
  41a8d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8d6:	in     eax,dx
  41a8d7:	inc    DWORD PTR [esi]
  41a8d9:	nop
  41a8da:	repnz pop ecx
  41a8dc:	jo     0x41a90f
  41a8de:	push   esp
  41a8df:	lock imul ebx,DWORD PTR [ebx-0x705d0e49],0x4a93e62
  41a8ea:	out    dx,eax
  41a8eb:	(bad)  
  41a8ec:	in     eax,0x9f
  41a8ee:	jb     0x41a936
	...
  41a904:	dec    ebp
  41a905:	or     eax,0xc42f44c
  41a90a:	scas   al,BYTE PTR es:[edi]
  41a90b:	dec    edi
  41a90c:	retf   0xc0c
  41a90f:	fdiv   QWORD PTR [ebp+0x3dfa9ea4]
  41a915:	retf   
  41a916:	cmp    DWORD PTR [eax+0x6e],0x27
  41a91a:	pop    esp
  41a91b:	bndldx (bad),[ebx-0x7049ba96]
  41a922:	cmc    
  41a923:	cmp    BYTE PTR [ebx+0x2fcf50c],dl
  41a929:	mov    ebx,0xbaf82e23
  41a92e:	out    dx,eax
  41a92f:	js     0x41a925
  41a931:	daa    
  41a932:	jle    0x41a900
  41a934:	call   0xe10d1369
  41a939:	and    BYTE PTR [ebx-0x18],0xb7
  41a93d:	(bad)  
  41a93e:	out    0x7e,eax
  41a940:	cmc    
  41a941:	and    BYTE PTR [ebx-0x10],0xb7
  41a945:	(bad)  
  41a946:	out    0x80,eax
  41a948:	mov    ebp,0x2c20b48e
  41a94d:	retf   
  41a94e:	test   DWORD PTR [ebx-0x14],0xc74e1fca
  41a955:	xor    BYTE PTR [ebx+ecx*8+0x78e02034],ah
  41a95c:	push   0x9dd77c02
  41a961:	push   ss
  41a962:	dec    ebx
  41a963:	les    ecx,FWORD PTR [eax+0xe10024]
	...
  41a979:	add    BYTE PTR [eax],al
  41a97b:	add    ah,bl
  41a97d:	mov    BYTE PTR [esi+0x1],dl
  41a980:	mov    eax,0x76e6fce1
  41a985:	int3   
  41a986:	adc    BYTE PTR [edx-0x4],dh
  41a989:	lahf   
  41a98a:	sub    DWORD PTR [ecx+edx*1],0x19243988
  41a991:	mov    ebp,0x9bf46a96
  41a996:	add    dh,ch
  41a998:	xor    ah,BYTE PTR [esi-0x3]
  41a99b:	mov    dh,0x76
  41a99d:	xor    dh,BYTE PTR [ebx-0x2b]
  41a9a0:	ja     0x41a93e
  41a9a2:	sub    al,bh
  41a9a4:	jbe    0x41a935
  41a9a6:	out    0xfc,eax
  41a9a8:	div    DWORD PTR [ecx]
  41a9aa:	std    
  41a9ab:	bound  esi,QWORD PTR [edi+eax*4+0x68]
  41a9af:	sub    esi,ebx
  41a9b1:	xchg   esi,eax
  41a9b2:	add    BYTE PTR [ebx],dl
  41a9b4:	mov    eax,0x617e4304
  41a9b9:	daa    
  41a9ba:	out    0xf4,eax
  41a9bc:	div    DWORD PTR [ecx]
  41a9be:	test   BYTE PTR [ecx-0x1240f45a],ch
  41a9c4:	mov    dh,0x8f
  41a9c6:	or     eax,0x81327c97
  41a9cb:	inc    ecx
  41a9cc:	mov    ecx,0xb2ed8482
  41a9d1:	pop    DWORD PTR [eax]
  41a9d3:	mov    cl,0x7e
  41a9d5:	add    BYTE PTR [esp-0x5eff704d],0xa7
  41a9dd:	or     ebp,DWORD PTR [ebx]
  41a9df:	jmp    0x41a9e1
	...
  41a9f1:	add    BYTE PTR [eax],al
  41a9f3:	add    BYTE PTR [esi+0x3af6488f],dh
  41a9f9:	pop    ebx
  41a9fa:	(bad)  
  41a9fb:	call   0x6d4f81b6
  41aa00:	sbb    dl,BYTE PTR [eax-0x63111700]
  41aa06:	add    DWORD PTR [eax],0xffffffec
  41aa09:	xchg   edi,eax
  41aa0a:	add    BYTE PTR [eax],al
  41aa0c:	and    al,0xd3
  41aa0e:	jae    0x41aa2b
  41aa10:	mov    WORD PTR [ebp-0x1],?
  41aa13:	mov    WORD PTR [ecx+0x3],ss
  41aa16:	push   eax
  41aa17:	call   0x3d7a58
  41aa1c:	rcl    BYTE PTR [edx+0xb],1
  41aa1f:	test   BYTE PTR [eax+ebx*4],al
  41aa22:	add    BYTE PTR [eax],al
  41aa24:	hlt    
  41aa25:	shl    DWORD PTR [ebx+0x1b],cl
  41aa28:	pop    esp
  41aa29:	jge    0x41aa2f
  41aa2b:	lea    edx,[ecx-0x2b17afa9]
  41aa31:	iret   
  41aa32:	sti    
  41aa33:	call   eax
  41aa35:	push   edx
  41aa36:	or     eax,DWORD PTR [esp+edi*4-0x58ffff69]
  41aa3d:	mov    edi,0x384d8bc4
  41aa42:	std    
  41aa43:	jmp    FWORD PTR [ebx]
  41aa45:	xchg   ebx,eax
  41aa46:	xchg   ecx,edx
  41aa48:	pop    ebp
  41aa49:	std    
  41aa4a:	ud2    
  41aa4c:	pop    esi
  41aa4d:	push   ds
  41aa4e:	int    0xc1
  41aa50:	cmp    DWORD PTR cs:[ebp-0x1f],0xc
  41aa55:	push   edx
	...
  41aa6a:	add    BYTE PTR [eax],al
  41aa6c:	out    0x43,eax
  41aa6e:	mov    ebp,0xe253e4e8
  41aa73:	or     bh,dl
  41aa75:	push   esp
  41aa76:	test   DWORD PTR [ebp-0x70],eax
  41aa79:	ror    BYTE PTR [ebx],cl
  41aa7b:	test   BYTE PTR [ebp+0x64000097],ah
  41aa81:	fsubr  DWORD PTR [edi+edi*8-0x7a0fe275]
  41aa88:	add    BYTE PTR [ecx-0x6d5fe57c],0x0
  41aa8f:	push   0x17695c
  41aa94:	mov    ch,0x85
  41aa96:	cmp    ah,al
  41aa98:	add    edx,DWORD PTR [ecx-0x6a6d850a]
  41aa9e:	test   eax,eax
  41aaa0:	mov    edx,0xb5040eb4
  41aaa5:	cmp    BYTE PTR [esi+0x58b1a943],cl
  41aaab:	les    edi,FWORD PTR [esi]
  41aaad:	and    BYTE PTR [edi-0x3],dl
  41aab0:	add    eax,0xfae8572d
  41aab5:	adc    al,0xbf
  41aab7:	std    
  41aab8:	dec    esp
  41aab9:	add    edx,0xfffffffd
  41aabc:	push   edx
  41aabd:	mov    eax,ds:0x78dd083d
  41aac2:	aaa    
  41aac3:	sbb    DWORD PTR [ebp-0xf74fa2e],esi
  41aac9:	call   0x73f69321
  41aace:	mov    edi,0xfd
	...
  41aae3:	add    BYTE PTR [ecx],dh
  41aae5:	clc    
  41aae6:	push   cs
  41aae7:	test   ah,bh
  41aae9:	cmp    BYTE PTR [ecx],al
  41aaeb:	add    BYTE PTR [ebx-0x4210bb09],dl
  41aaf1:	sahf   
  41aaf2:	rol    DWORD PTR [ebx+0x6],0x20
  41aaf6:	sub    edx,DWORD PTR ds:0x82a5c6
  41aafc:	xor    eax,0xc8fd0138
  41ab01:	sub    BYTE PTR [esi],dl
  41ab03:	inc    eax
  41ab04:	mov    ch,0xb3
  41ab06:	les    esp,FWORD PTR [esi+0x2e]
  41ab09:	sti    
  41ab0a:	(bad)  ds:0x6613f340
  41ab10:	mov    ebx,?
  41ab12:	mov    cl,0x73
  41ab14:	mov    edi,0xde438c56
  41ab19:	pop    ebp
  41ab1a:	cli    
  41ab1b:	inc    edx
  41ab1c:	(bad)  
  41ab1d:	jecxz  0x41ab24
  41ab1f:	mov    esi,0x4678fb4
  41ab24:	mov    ch,0x19
  41ab26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab27:	fld    TBYTE PTR [edi]
  41ab29:	fist   DWORD PTR [edi]
  41ab2b:	mov    es,WORD PTR [ebp+0x35030810]
  41ab31:	xor    ch,al
  41ab33:	std    
  41ab34:	jl     0x41aada
  41ab36:	lds    eax,FWORD PTR [edi-0xb275b86]
  41ab3c:	jae    0x41aba6
  41ab3e:	pushf  
  41ab3f:	adc    al,0xc0
  41ab41:	add    ebp,DWORD PTR [eax-0x1ad0cbb6]
  41ab47:	test   BYTE PTR [eax],al
	...
  41ab59:	add    BYTE PTR [eax],al
  41ab5b:	add    BYTE PTR [edx],ah
  41ab5d:	xchg   edx,eax
  41ab5e:	ret    0xa410
  41ab61:	push   esi
  41ab62:	cmovg  esp,DWORD PTR [esp+ebx*4+0x10f2c25b]
  41ab6a:	enter  0x340f,0x4f
  41ab6e:	jmp    0x41ab7c
  41ab70:	dec    edx
  41ab71:	sbb    bl,BYTE PTR [esp+esi*4]
  41ab74:	aas    
  41ab75:	inc    eax
  41ab76:	addr16 mov ds:0xfb1,al
  41ab7a:	mov    DWORD PTR [edi],eax
  41ab7c:	fistp  WORD PTR [ecx+0x1b]
  41ab7f:	jmp    0x56c4:0x13135736
  41ab86:	mov    edi,0x539ca44e
  41ab8b:	ret    0x107a
  41ab8e:	mov    BYTE PTR [ebp-0x5320b0cc],bh
  41ab94:	shl    BYTE PTR [eax+0x30],0xfb
  41ab98:	jg     0x41ab1a
  41ab9a:	out    dx,al
  41ab9b:	xchg   edi,eax
  41ab9c:	and    dl,bh
  41ab9e:	push   0xffffffa2
  41aba0:	loope  0x41abb2
  41aba2:	sub    BYTE PTR [ebx],dl
  41aba4:	mov    esp,0xc54e711e
  41aba9:	cmovs  eax,DWORD PTR ds:0xf3009199
  41abb0:	out    dx,al
  41abb1:	mov    ds:0x1376fa10,eax
  41abb6:	(bad)  
  41abb7:	test   BYTE PTR [edx+0x4f],0x48
  41abbb:	push   0x56
  41abbd:	das    
  41abbe:	sub    DWORD PTR [ecx],0x0
	...
  41abd4:	not    BYTE PTR [esi+0x1ffb17f0]
  41abda:	or     BYTE PTR [ebp-0x41],bh
  41abdd:	mov    ecx,0x8f646878
  41abe2:	or     cl,ch
  41abe4:	mov    dh,0xca
  41abe6:	mul    BYTE PTR [esi+eiz*1-0x630f8b81]
  41abed:	pop    ss
  41abee:	jg     0x41ab9f
  41abf0:	mov    ecx,0xfbe90097
  41abf5:	mov    ecx,0x1ffc5c03
  41abfa:	push   eax
  41abfb:	je     0x41abf9
  41abfd:	inc    edi
  41abfe:	push   eax
  41abff:	sar    DWORD PTR [esi+esi*8-0x4],1
  41ac03:	mov    dh,0xaa
  41ac05:	loop   0x41ac49
  41ac07:	mov    edx,0x5e0dbf8a
  41ac0c:	jl     0x41ac4a
  41ac0e:	push   eax
  41ac0f:	jb     0x41ac7d
  41ac11:	fwait
  41ac12:	mov    ecx,esp
  41ac14:	das    
  41ac15:	inc    ebp
  41ac16:	std    
  41ac17:	cmp    DWORD PTR [ecx+0x4a841234],esi
  41ac1d:	sub    cl,BYTE PTR [ecx+0x40b7aefc]
  41ac23:	(bad)  
  41ac24:	lahf   
  41ac25:	(bad)
  41ac29:	rcl    BYTE PTR [ecx+edi*4+0x5e794d1e],1
  41ac30:	and    dl,BYTE PTR [ebx]
  41ac32:	shl    dh,0x32
  41ac35:	in     eax,0x1
  41ac37:	jmp    0x41ac3c
	...
  41ac4c:	mov    dh,0xf
  41ac4e:	jnp    0x41ac50
  41ac50:	push   0x8c950b93
  41ac55:	pushf  
  41ac56:	mov    dh,0xc0
  41ac58:	sbb    al,0x19
  41ac5a:	inc    ecx
  41ac5b:	xchg   edi,eax
  41ac5c:	pop    ss
  41ac5d:	inc    esp
  41ac5e:	xchg   eax,ecx
  41ac60:	(bad)  
  41ac62:	jno    0xff424016
  41ac68:	mov    WORD PTR [esi+0x54d48bcd],ss
  41ac6e:	fst    QWORD PTR [eax]
  41ac70:	jns    0x41ac01
  41ac72:	sti    
  41ac73:	add    BYTE PTR [esi+edx*4-0x64b67438],cl
  41ac7a:	mov    ebp,0xea5454e1
  41ac7f:	or     BYTE PTR [edi+0x44],ah
  41ac82:	xchg   DWORD PTR [eax],ecx
  41ac84:	cmp    DWORD PTR [edi-0x14ba16ec],0xfffffffa
  41ac8b:	call   edi
  41ac8d:	iret   
  41ac8e:	or     BYTE PTR [eax-0x64],ch
  41ac91:	bound  edx,QWORD PTR [edi]
  41ac93:	add    dh,ah
  41ac95:	pushf  
  41ac96:	mov    DWORD PTR [ebp+0x10],eax
  41ac99:	mov    edi,0xeae785e8
  41ac9e:	cli    
  41ac9f:	test   BYTE PTR [edx+ebx*4-0x7c],bl
  41aca3:	pop    ebp
  41aca4:	push   cs
  41aca5:	pop    DWORD PTR [eax]
  41aca7:	dec    bp
  41aca9:	fmul   st,st(1)
  41acab:	or     BYTE PTR [edx+0xcf4154],bh
	...
  41acc1:	add    BYTE PTR [eax],al
  41acc3:	add    BYTE PTR [esi*2-0x68e2ba43],al
  41acca:	ror    cx,0x3e
  41acce:	or     BYTE PTR [eax+0xf005ae1],al
  41acd4:	imul   ecx,DWORD PTR [esi+0x2f],0x87eabfc9
  41acdb:	inc    ebp
  41acdc:	mov    ch,0x74
  41acde:	cld    
  41acdf:	dec    edx
  41ace0:	int    0x42
  41ace2:	pop    ss
  41ace3:	mov    DWORD PTR [eax-0x3c],esi
  41ace6:	add    al,0xba
  41ace9:	push   edx
  41acea:	cld    
  41aceb:	inc    edi
  41acec:	mov    ebx,0xec6607eb
  41acf1:	xor    BYTE PTR ds:0xc1b5f207,dh
  41acf7:	pop    es
  41acf8:	fimul  WORD PTR [ebx]
  41acfa:	mov    ecx,0x403d8972
  41acff:	clc    
  41ad00:	or     BYTE PTR [eax],ah
  41ad02:	mov    esi,0x509d8d43
  41ad07:	clc    
  41ad08:	push   cs
  41ad09:	pusha  
  41ad0a:	or     al,0x8b
  41ad0c:	add    BYTE PTR [ebp+0x391c92a9],dl
  41ad12:	mov    ebx,0x85217584
  41ad17:	(bad)  
  41ad18:	mov    ah,0x38
  41ad1a:	add    DWORD PTR [ecx+0x5a],ebp
  41ad1d:	das    
  41ad1e:	add    BYTE PTR [ebx+0x61],bh
  41ad21:	into   
  41ad22:	or     DWORD PTR [ebx+0x5553e4f0],ecx
	...
  41ad3c:	dec    ebp
  41ad3d:	bound  ebp,QWORD PTR [edx-0x3]
  41ad40:	cmp    cl,BYTE PTR [edi-0x14]
  41ad43:	sti    
  41ad44:	xor    bh,cl
  41ad46:	sub    eax,DWORD PTR [eax-0x5e]
  41ad49:	lea    eax,[edx+ebp*2]
  41ad4c:	mov    ah,0x9
  41ad4e:	xor    eax,0x37ba0d08
  41ad53:	std    
  41ad54:	adc    dh,BYTE PTR [esp+eax*8+0x108310d]
  41ad5b:	add    BYTE PTR [ebp-0x72f7c263],dh
  41ad61:	js     0x41ad96
  41ad63:	sbb    DWORD PTR [ebp+0x708b028e],esi
  41ad69:	(bad)  
  41ad6a:	dec    ebx
  41ad6b:	push   esp
  41ad6c:	int    0x4b
  41ad6e:	loope  0x41ad2c
  41ad70:	fcom   DWORD PTR [edx]
  41ad72:	daa    
  41ad73:	or     eax,0x3e7e439
  41ad78:	mov    ch,0x9a
  41ad7a:	jle    0x41adcb
  41ad7c:	(bad)  ds:0x16b54fca
  41ad82:	sub    bh,ah
  41ad84:	mov    cl,0x90
  41ad86:	out    0x3,eax
  41ad88:	push   0x30
  41ad8a:	out    dx,eax
  41ad8b:	ret    0x989a
  41ad8e:	bnd ret 0x1713
  41ad92:	stos   BYTE PTR es:[edi],al
  41ad93:	dec    ebx
  41ad94:	sbb    edx,DWORD PTR [ebx]
  41ad96:	daa    
  41ad97:	or     eax,0x3e71a31
  41ad9c:	mov    ch,0x98
  41ad9e:	ss mov esp,0x0
	...
  41adb4:	cmp    dh,BYTE PTR [ecx]
  41adb6:	jmp    0x63159249
  41adbb:	int    0x5d
  41adbd:	fwait
  41adbe:	nop
  41adbf:	mov    esp,0xca71460
  41adc4:	xor    DWORD PTR [edi-0x484afc18],esp
  41adca:	daa    
  41adcb:	xor    eax,0xbd1e8fac
  41add0:	mov    edx,DWORD PTR [esp+edi*1]
  41add3:	or     al,0x4d
  41add5:	pop    ss
  41add6:	xor    DWORD PTR [ebp+0xca71430],edi
  41addc:	xor    DWORD PTR [edi+0xcb503e8],ebp
  41ade2:	add    al,0x14
  41ade4:	mov    ch,0x5c
  41ade6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ade7:	jns    0x41ad9e
  41ade9:	sub    bh,ah
  41adeb:	add    edx,DWORD PTR [ebx-0x7bb3d59c]
  41adf1:	mov    ebp,0xe0a80572
  41adf6:	jmp    DWORD PTR [ebx]
  41adf8:	leave  
  41adf9:	call   0xd58199dc
  41adfe:	call   0xff589ced
  41ae03:	jno    0x41ae2b
  41ae05:	jmp    0x287fa7ef
  41ae0a:	and    DWORD PTR [ebx-0x43],edx
  41ae0d:	and    cl,BYTE PTR ds:0xbf8e7f7f
  41ae13:	inc    edi
  41ae14:	scas   al,BYTE PTR es:[edi]
  41ae15:	call   0x429001
	...
  41ae2a:	add    BYTE PTR [eax],al
  41ae2c:	mov    ebp,0xbd2b2122
  41ae31:	pop    ds
  41ae32:	xchg   eax,ebx
  41ae34:	sub    eax,0xe37244ce
  41ae39:	aaa    
  41ae3a:	push   0xffffffec
  41ae3c:	out    dx,eax
  41ae3d:	pusha  
  41ae3e:	or     al,0xe7
  41ae40:	ret    
  41ae41:	mov    es,WORD PTR [edi+0x432af2b2]
  41ae47:	fnop   
  41ae49:	push   ss
  41ae4a:	dec    ebx
  41ae4b:	fstp   DWORD PTR [eax-0x5b5eb69a]
  41ae51:	loop   0x41ae3b
  41ae53:	in     al,dx
  41ae54:	loopne 0x41ade5
  41ae56:	std    
  41ae57:	jmp    0x2582c512
  41ae5c:	inc    edx
  41ae5d:	push   edi
  41ae5e:	mov    edi,0xf016a1c8
  41ae63:	or     cl,BYTE PTR [ebx]
  41ae65:	xchg   esi,eax
  41ae66:	into   
  41ae67:	jb     0x41ae6a
  41ae69:	call   0x1e5d905b
  41ae6e:	or     eax,0xbfda8277
  41ae73:	mov    BYTE PTR [ecx-0x170d316a],dh
  41ae79:	cmovns edi,DWORD PTR [ecx]
  41ae7c:	cmp    ah,BYTE PTR [edi]
  41ae7e:	add    edx,DWORD PTR [esp+ebx*1]
  41ae81:	vmwrite eax,DWORD PTR [eax]
  41ae84:	sbb    BYTE PTR [ebx+ecx*1-0x516f67b],cl
  41ae8b:	push   DWORD PTR [edi+ecx*4+0x4]
	...
  41aea2:	add    BYTE PTR [eax],al
  41aea4:	fdivr  QWORD PTR [ecx+0x8]
  41aea7:	inc    ecx
  41aea9:	cmp    edx,ebx
  41aeab:	inc    ebx
  41aeac:	int3   
  41aead:	in     al,0x10
  41aeaf:	ins    BYTE PTR es:[edi],dx
  41aeb0:	into   
  41aeb1:	retf   
  41aeb2:	add    BYTE PTR [ecx-0x3f7e7fe1],cl
  41aeb8:	retf   
  41aeb9:	push   cs
  41aeba:	jmp    0x41aeb6
  41aebc:	jnp    0x41aea2
  41aebe:	in     al,0xa9
  41aec0:	pushf  
  41aec1:	xchg   ebx,eax
  41aec2:	add    bh,bh
  41aec4:	outs   dx,DWORD PTR ds:[esi]
  41aec5:	jg     0x41aeaf
  41aec7:	out    dx,eax
  41aec8:	add    al,0xeb
  41aeca:	cli    
  41aecb:	sub    DWORD PTR [edi],0x7f
  41aece:	add    cl,ch
  41aed0:	vpsubd ymm7,ymm3,ymm7
  41aed4:	xor    al,0xd3
  41aed6:	jae    0x41aef3
  41aed8:	mov    WORD PTR [ebp-0x1],?
  41aedb:	inc    BYTE PTR [ecx]
  41aedd:	fwait
  41aede:	call   0xfb2b951a
  41aee3:	test   BYTE PTR [edx+ebx*4-0x6cb37e7c],bl
  41aeea:	add    BYTE PTR [ebx+0x406893f9],cl
  41aef0:	xrelease xchg BYTE PTR [eax],al
  41aef3:	push   0x4c
  41aef5:	sbb    BYTE PTR [ecx-0x4c],al
  41aef8:	pushf  
  41aef9:	repz lea edi,[ecx-0x5]
  41aefd:	jmp    0x76326f85
  41af02:	cmp    BYTE PTR [ebp-0x60],0x32
  41af06:	jno    0x41af14
	...
  41af1c:	mov    WORD PTR [edi-0x4c],fs
  41af1f:	adc    al,al
  41af21:	xchg   ecx,eax
  41af22:	cmp    BYTE PTR [ebp-0x4b],0xc4
  41af26:	or     DWORD PTR [ebx+0x6d],esi
  41af29:	mov    eax,0x24b5b538
  41af2e:	push   ebx
  41af2f:	data16 hlt 
  41af31:	imul   edi,DWORD PTR [eax+ecx*1+0x5b],0xfffffff7
  41af36:	aas    
  41af37:	mov    edx,0x43c38ebd
  41af3c:	and    DWORD PTR [ecx],esp
  41af3e:	cmp    DWORD PTR [ebx+0x23],0xc2102b39
  41af45:	mov    ds:0xfe7088c1,eax
  41af4a:	xchg   DWORD PTR [ebx+0x9],eax
  41af4d:	or     DWORD PTR [eax-0x40f77bbf],ecx
  41af53:	inc    ebx
  41af54:	push   0x37
  41af56:	test   eax,0xba755db0
  41af5b:	mov    bh,al
  41af5d:	(bad)
  41af61:	mov    al,ds:0xdf9c3f46
  41af66:	mov    edx,0x38b98afd
  41af6b:	adc    al,0xb5
  41af6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af6e:	adc    edi,ebp
  41af70:	add    BYTE PTR ds:0x479d13ba,bh
  41af76:	inc    ecx
  41af77:	add    BYTE PTR [esi+0x2d],bl
  41af7a:	sub    eax,DWORD PTR [eax]
  41af7c:	dec    ebp
  41af7d:	pop    esi
  41af7e:	ins    BYTE PTR es:[edi],dx
  41af7f:	std    
	...
  41af94:	pop    edx
  41af95:	mov    eax,ds:0x45f3e8b3
  41af9a:	mov    bh,0xfd
  41af9c:	dec    edx
  41af9d:	mov    ebx,0x82e8a8
  41afa2:	mov    bh,0xfd
  41afa4:	dec    esi
  41afa5:	cmp    al,0x8c
  41afa7:	icebp  
  41afa8:	sbb    eax,0x2afdaf6b
  41afad:	push   ecx
  41afae:	or     edi,ebp
  41afb0:	test   al,0x8f
  41afb2:	(bad)  
  41afb3:	mov    ecx,0x358f97a6
  41afb8:	or     BYTE PTR [esi],ah
  41afba:	xchg   esi,eax
  41afbb:	pop    ecx
  41afbc:	imul   ecx,edx,0xffffffa0
  41afbf:	(bad)  
  41afc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afc1:	(bad)  
  41afc2:	sbb    eax,0x750c058d
  41afc7:	xor    BYTE PTR [edx-0xa8012e7],al
  41afcd:	call   0x2f14:0x6304f522
  41afd4:	mov    dh,0xb9
  41afd6:	jmp    0x13cc8c38
  41afdb:	in     eax,dx
  41afdc:	inc    edi
  41afdd:	nop
  41afde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afdf:	lea    esi,[ebx-0x3d7bd89f]
  41afe5:	pop    esi
  41afe6:	mov    ebx,0x30100410
  41afeb:	sti    
  41afec:	sub    DWORD PTR [eax+0x39ab0e7a],eax
  41aff2:	jmp    0xa5a179b9
  41aff7:	lea    eax,[eax]
	...
  41b009:	add    BYTE PTR [eax],al
  41b00b:	add    bl,al
  41b00d:	movups xmm6,xmm4
  41b010:	(bad)  
  41b012:	mov    dl,0x7f
  41b014:	jp     0x41afb2
  41b016:	jmp    0x7571:0xee8f6f84
  41b01d:	push   ds
  41b01e:	sub    DWORD PTR [esi],eax
  41b020:	loope  0x41afaf
  41b022:	add    bl,0x60
  41b025:	nop
  41b026:	out    0x3,eax
  41b028:	sub    eax,0xf3c5728d
  41b02d:	push   eax
  41b02e:	inc    ecx
  41b02f:	or     al,0xed
  41b031:	dec    ebp
  41b032:	out    0x3,al
  41b034:	jecxz  0x41b086
  41b036:	sbb    al,0x8d
  41b038:	dec    ecx
  41b039:	bswap  ebx
  41b03b:	add    esi,DWORD PTR [edi-0x7e16ff71]
  41b041:	mov    ebp,0xb7bb4355
  41b046:	lock push edi
  41b048:	inc    ecx
  41b049:	or     ecx,DWORD PTR [ecx-0x4fbca15f]
  41b04f:	xchg   esi,eax
  41b050:	dec    ebp
  41b051:	pop    edi
  41b052:	fldenv [eax+0x75]
  41b055:	xchg   edi,eax
  41b056:	cmp    DWORD PTR [edx-0x17f9f453],ebp
  41b05c:	mov    dh,0x8f
  41b05e:	mov    edi,DWORD PTR [esi+esi*4]
  41b061:	and    eax,0xf50e6efd
  41b066:	sub    ch,al
  41b068:	mov    dh,0x16
  41b06a:	inc    ebx
  41b06b:	das    
  41b06c:	cmp    ecx,ebx
  41b06e:	cld    
  41b06f:	push   esi
	...
  41b084:	mov    bl,0x8f
  41b086:	add    BYTE PTR [ecx-0x4a],ch
  41b089:	mov    edi,0xc9be2931
  41b08e:	or     dh,ch
  41b090:	inc    ebx
  41b091:	dec    edi
  41b092:	sub    DWORD PTR [ecx],0xe86abfb1
  41b098:	into   
  41b099:	pop    DWORD PTR [eax]
  41b09b:	jmp    0xf986c916
  41b0a0:	out    0x18,al
  41b0a2:	inc    ebx
  41b0a3:	adc    eax,0xe9da85e
  41b0a8:	cmp    eax,0xfaf6c00b
  41b0ad:	cmc    
  41b0ae:	(bad)  
  41b0af:	call   0xf584c96a
  41b0b4:	pop    es
  41b0b5:	sbb    DWORD PTR [ebx-0x7],esi
  41b0b8:	cmovl  ebx,DWORD PTR [ebp-0x3ff4dd1a]
  41b0bf:	out    dx,al
  41b0c0:	ror    BYTE PTR [ecx],cl
  41b0c2:	add    cl,ch
  41b0c4:	mov    dh,0x5c
  41b0c6:	pop    ebx
  41b0c7:	aad    0x92
  41b0c9:	mov    WORD PTR [edi+0x0],?
  41b0cc:	icebp  
  41b0cd:	(bad)  
  41b0cf:	call   FWORD PTR [eax+eax*4]
  41b0d2:	jb     0x41b10b
  41b0d4:	iret   
  41b0d5:	ror    BYTE PTR [edi-0x73],0xd9
  41b0d9:	out    0xe7,eax
  41b0db:	pop    ss
  41b0dc:	ins    BYTE PTR es:[edi],dx
  41b0dd:	fdiv   st(2),st
  41b0df:	test   BYTE PTR [edi+ebx*2+0x9],bl
  41b0e3:	jmp    FWORD PTR [ecx+0x15fae7]
	...
  41b0f9:	add    BYTE PTR [eax],al
  41b0fb:	add    ah,dl
  41b0fd:	add    DWORD PTR [eax+0x0],0x1b714b89
  41b104:	popa   
  41b105:	into   
  41b106:	cld    
  41b107:	call   0x3cae0c
  41b10c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b10d:	in     eax,dx
  41b10e:	cld    
  41b10f:	dec    esp
  41b111:	push   ss
  41b112:	add    DWORD PTR [eax],0x88fadc72
  41b118:	(bad)  
  41b119:	iret   
  41b11a:	inc    ebp
  41b11b:	jne    0x41b183
  41b11d:	clc    
  41b11e:	ins    DWORD PTR es:[edi],dx
  41b11f:	mov    ecx,DWORD PTR [ecx]
  41b121:	fdiv   st(2),st
  41b123:	jne    0x41b12b
  41b125:	cmovns edi,esp
  41b128:	jecxz  0x41b0e5
  41b12a:	call   0xcdae0e
  41b12f:	cmp    ecx,edi
  41b131:	pusha  
  41b132:	sbb    eax,0xc8a453
  41b137:	add    BYTE PTR [eax+ebx*1+0x2b4fc41],bl
  41b13e:	sahf   
  41b13f:	push   DWORD PTR [ebx+0x5c01eea4]
  41b145:	(bad)
  41b149:	(bad)  
  41b14b:	call   esp
  41b14d:	add    DWORD PTR [eax+0x49],0xfffffff9
  41b151:	in     eax,0xe6
  41b153:	cmp    ebp,eax
  41b155:	popa   
  41b156:	or     al,0x8d
  41b158:	mov    ch,0x73
  41b15a:	mov    eax,0xb6b36ce8
  41b15f:	std    
	...
  41b174:	cld    
  41b175:	cmp    al,BYTE PTR [eax+eax*1]
  41b178:	mov    ch,0xb3
  41b17a:	add    BYTE PTR [eax],0x2b
  41b17d:	fidiv  DWORD PTR [ebp+0x4b78bd88]
  41b183:	jae    0x41b1a4
  41b185:	leave  
  41b186:	add    al,0xe9
  41b188:	scas   al,BYTE PTR es:[edi]
  41b189:	mov    bl,0x40
  41b18b:	cld    
  41b18c:	sbb    eax,0x2fd93cd
  41b191:	shl    BYTE PTR [ebx-0x77c70501],0x83
  41b198:	mov    ch,0xa2
  41b19a:	mov    dh,0xfd
  41b19c:	cmp    eax,0x68474141
  41b1a1:	sahf   
  41b1a2:	out    dx,eax
  41b1a3:	mov    edi,0xc75a4a7a
  41b1a8:	imul   DWORD PTR [ecx+eax*1]
  41b1ab:	push   ebx
  41b1ac:	ds int 0x84
  41b1af:	in     al,dx
  41b1b0:	leave  
  41b1b1:	aaa    
  41b1b2:	add    DWORD PTR [eax],eax
  41b1b4:	and    ax,0x56da
  41b1b8:	in     al,dx
  41b1b9:	add    DWORD PTR ds:0x58210c74,eax
  41b1bf:	or     BYTE PTR [eax],ch
  41b1c1:	sbb    cl,BYTE PTR [eax-0x49953a4d]
  41b1c7:	std    
  41b1c8:	popf   
  41b1c9:	popf   
  41b1ca:	in     eax,0xfe
  41b1cc:	mov    bh,BYTE PTR [edi]
  41b1ce:	pop    eax
  41b1cf:	fimul  DWORD PTR [edx]
  41b1d1:	sub    al,0xfc
  41b1d3:	pop    edx
  41b1d4:	arpl   WORD PTR [edx+0x8914],sp
	...
  41b1ea:	add    BYTE PTR [eax],al
  41b1ec:	adc    dh,BYTE PTR ds:0x8834388
  41b1f2:	push   ecx
  41b1f3:	push   eax
  41b1f4:	add    eax,0x5a9f6a91
  41b1f9:	(bad)  
  41b1fa:	out    0xf1,al
  41b1fc:	ins    DWORD PTR es:[edi],dx
  41b1fd:	call   0x8ff6b5ce
  41b202:	fs jg  0x41b1aa
  41b205:	and    esi,ecx
  41b207:	mov    ch,0x2d
  41b209:	xchg   DWORD PTR [edi],esp
  41b20b:	dec    ebx
  41b20c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b20d:	and    eax,0x66b92d72
  41b212:	mov    edx,0x637b630
  41b217:	add    al,0xb5
  41b219:	(bad)  
  41b21a:	jo     0x41b271
  41b21c:	shl    DWORD PTR [edi+0x3c],0xc
  41b220:	sbb    DWORD PTR [eax-0x405ac29c],0x2254e27f
  41b22a:	xchg   BYTE PTR [ecx-0x3f3d6888],cl
  41b230:	popa   
  41b231:	cwde   
  41b232:	pop    ss
  41b233:	lods   al,BYTE PTR ds:[esi]
  41b234:	jnp    0x41b2ae
  41b236:	call   0xf003e43e
  41b23b:	push   ebp
  41b23c:	ins    BYTE PTR es:[edi],dx
  41b23d:	pop    eax
  41b23e:	sub    DWORD PTR [eax],eax
  41b240:	mov    ch,0x16
  41b242:	in     eax,dx
  41b243:	cmp    BYTE PTR [ebp+0x3608d321],0x4f
  41b24a:	mov    ebx,0xd42102fc
  41b24f:	out    0x0,eax
	...
  41b261:	add    BYTE PTR [eax],al
  41b263:	add    ah,al
  41b265:	iret   
  41b266:	out    0x88,eax
  41b268:	jnp    0x41b2a2
  41b26a:	das    
  41b26b:	xchg   edi,eax
  41b26c:	cwde   
  41b26d:	and    DWORD PTR [ebp+0x1deba1ab],edi
  41b273:	mov    ch,0x3c
  41b275:	dec    edx
  41b276:	sub    cl,BYTE PTR [edi+0x2c]
  41b279:	xor    al,0x6a
  41b27b:	sbb    eax,0x1d6a8fad
  41b280:	ror    DWORD PTR [edi-0x72325798],0x0
  41b287:	jmp    0x5c987142
  41b28c:	retf   0xfb35
  41b28f:	out    0x9,al
  41b291:	adc    eax,0x291ef95d
  41b296:	sub    eax,ebp
  41b298:	mov    dh,0x8c
  41b29a:	mov    dl,0xe8
  41b29c:	mov    dh,0x8f
  41b29e:	push   0xffffffdd
  41b2a0:	xchg   BYTE PTR [ebp+0x47db6c00],dh
  41b2a6:	and    DWORD PTR [ecx+0x630d3869],0xa9832361
  41b2b0:	enter  0x897a,0xa7
  41b2b4:	data16 mov bh,0x98
  41b2b7:	mov    cl,0x75
  41b2b9:	(bad)  
  41b2ba:	push   ecx
  41b2bb:	cmp    DWORD PTR [ebx],0x7386fda4
  41b2c1:	dec    edi
  41b2c2:	or     eax,0xc00bf654
  41b2c7:	cld    
	...
  41b2dc:	jecxz  0x41b33d
  41b2de:	rol    BYTE PTR [edi],0x2e
  41b2e1:	(bad)  
  41b2e2:	mov    bh,0x57
  41b2e4:	mov    bh,0x8f
  41b2e6:	add    BYTE PTR [ebx+ecx*2+0x35],ch
  41b2ea:	sti    
  41b2eb:	push   esi
  41b2ec:	or     DWORD PTR [edx+0x0],ecx
  41b2ef:	jmp    0x40b57b6a
  41b2f4:	or     BYTE PTR [edi],dl
  41b2f6:	lds    esp,FWORD PTR [edx+0x62534e7f]
  41b2fc:	pop    edx
  41b2fd:	push   cs
  41b2fe:	in     al,0x31
  41b300:	aaa    
  41b301:	xor    eax,DWORD PTR [eax]
  41b303:	jmp    0x41b2bb
  41b305:	(bad)
  41b309:	pop    esi
  41b30a:	(bad)  
  41b30b:	mov    edi,0xc54c08f1
  41b310:	mov    dl,0x66
  41b312:	mov    edi,0x858ef000
  41b317:	or     BYTE PTR [ebp+0x17],cl
  41b31a:	mov    edi,0xfada00e8
  41b31f:	call   eax
  41b321:	dec    esp
  41b322:	or     eax,DWORD PTR [ebx+edi*1-0x26ffff75]
  41b329:	addr16 and al,0x18
  41b32c:	adc    dl,bh
  41b32e:	and    al,0x10
  41b330:	dec    esp
  41b331:	add    al,0x5d
  41b333:	sub    ebx,DWORD PTR ds:0x1873878c
  41b339:	add    al,0x4c
  41b33b:	nop
  41b33c:	or     al,0x8c
  41b33e:	test   al,al
	...
  41b354:	loopne 0x41b3cc
  41b356:	xchg   DWORD PTR [ebx+0x8],edi
  41b359:	je     0xcd1783
  41b35f:	add    BYTE PTR [esi+ecx*1-0x4403dbbc],bh
  41b366:	call   0xcd4013
  41b36b:	test   BYTE PTR [edi+eiz*2],bl
  41b36e:	dec    esp
  41b36f:	mov    esp,eax
  41b371:	daa    
  41b372:	or     DWORD PTR [ebp-0x76eed838],ecx
  41b378:	lock daa 
  41b37a:	adc    eax,ebp
  41b37c:	fst    DWORD PTR [eax+0x4b50fffd]
  41b382:	jno    0x41b39c
  41b384:	push   ecx
  41b385:	in     eax,0x73
  41b387:	or     eax,0xfbe519fb
  41b38c:	xor    bl,ah
  41b38e:	cli    
  41b38f:	push   esi
  41b390:	hlt    
  41b391:	fsub   DWORD PTR [ebx+0x6416cbff]
  41b397:	and    al,0x88
  41b399:	xchg   ebx,eax
  41b39a:	out    0x24,eax
  41b39c:	pop    es
  41b39d:	leave  
  41b39e:	or     BYTE PTR [ebp+0x83868b5],al
  41b3a4:	cs repnz cld 
  41b3a7:	mov    ah,bh
  41b3a9:	inc    eax
  41b3aa:	jl     0x41b3b4
  41b3ac:	ds jmp 0x97c:0x30ed88fc
  41b3b4:	cs jmp 0x423ab6
	...
  41b3ca:	add    BYTE PTR [eax],al
  41b3cc:	imul   BYTE PTR [esi+ebx*4]
  41b3cf:	add    esi,DWORD PTR [ebx+0x75]
  41b3d2:	call   0x358767e6
  41b3d7:	and    al,0xa5
  41b3d9:	mov    cl,0xae
  41b3db:	call   0xfdf40ac6
  41b3e0:	ins    BYTE PTR es:[edi],dx
  41b3e1:	dec    edi
  41b3e2:	add    al,0x0
  41b3e4:	mov    ch,0xb3
  41b3e6:	inc    ebp
  41b3e7:	and    al,0xbd
  41b3e9:	test   BYTE PTR [eax],0x0
  41b3ec:	jne    0x41b44d
  41b3ee:	aaa    
  41b3ef:	idiv   DWORD PTR [esi]
  41b3f1:	jne    0x41b3db
  41b3f3:	or     esp,DWORD PTR [edx+0x66]
  41b3f6:	jge    0x41b3db
  41b3f8:	pop    eax
  41b3f9:	jmp    0x819d:0xa1880004
  41b400:	rcl    DWORD PTR [eax],1
  41b402:	xchg   ah,ch
  41b404:	mov    eax,ds:0xcd555a79
  41b409:	mov    edi,0xd8d2fd32
  41b40e:	cwde   
  41b40f:	aad    0xf9
  41b411:	daa    
  41b412:	add    DWORD PTR [ecx+0xdceabdd],ecx
  41b418:	xor    DWORD PTR [ecx-0x5c4afffd],ecx
  41b41e:	sub    eax,0x4d9fc524
  41b423:	and    al,0xc5
  41b425:	shr    BYTE PTR [ecx],1
  41b427:	sbb    dh,BYTE PTR [eax+ebp*1-0x703d3f7b]
  41b42e:	imul   esi,DWORD PTR [ecx+0x0],0x0
	...
  41b441:	add    BYTE PTR [eax],al
  41b443:	add    BYTE PTR [ebp+0x980e78f],dh
  41b449:	je     0x41b416
  41b44b:	fwait
  41b44c:	or     eax,0xdf03e87b
  41b451:	jo     0x41b4c5
  41b453:	leave  
  41b454:	add    eax,0x4d568faa
  41b459:	push   esp
  41b45a:	pop    ds
  41b45b:	add    al,0xb5
  41b45d:	adc    esp,DWORD PTR [edi]
  41b45f:	add    bh,BYTE PTR [ecx]
  41b461:	das    
  41b462:	out    0x3,eax
  41b464:	mov    ch,0xa
  41b466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b467:	push   esp
  41b468:	dec    ebp
  41b469:	dec    ebx
  41b46a:	icebp  
  41b46b:	add    dh,BYTE PTR [ebp+0x3901a713]
  41b471:	aas    
  41b472:	out    0x3,eax
  41b474:	mov    ch,0xc
  41b476:	xor    ebp,eax
  41b478:	(bad)  
  41b479:	daa    
  41b47a:	jbe    0x41b48b
  41b47c:	sbb    bl,BYTE PTR [esi]
  41b47e:	inc    ecx
  41b47f:	(bad)  
  41b480:	cmp    eax,0x9e1e3755
  41b485:	ret    0x998f
  41b488:	in     eax,dx
  41b489:	(bad)  
  41b48a:	out    0x87,eax
  41b48c:	cmc    
  41b48d:	lea    esp,[ebx+0x76]
  41b490:	mov    ch,0x8f
  41b492:	out    0x7e,eax
  41b494:	jno    0x41b509
  41b496:	xlat   BYTE PTR ds:[ebx]
  41b497:	push   ebx
  41b498:	int    0xe5
  41b49a:	mov    BYTE PTR [edx],0xb5
  41b49d:	or     dh,BYTE PTR [edi-0x79]
  41b4a0:	retf   
  41b4a1:	mov    ds:0x7341b109,al
  41b4a6:	neg    DWORD PTR [ecx+0x0]
	...
  41b4b9:	add    BYTE PTR [eax],al
  41b4bb:	add    BYTE PTR [edi-0x52],cl
  41b4be:	mov    edx,0xe847479b
  41b4c3:	add    ecx,DWORD PTR [ebx]
  41b4c5:	or     BYTE PTR [ebx+0x4127c5e7],ch
  41b4cb:	mov    al,gs:0xe569001d
  41b4d1:	jae    0x41b4e0
  41b4d3:	jmp    0xe9c1c88d
  41b4d8:	mov    dh,0x8f
  41b4da:	sbb    BYTE PTR [esi+edi*2-0x4608ee3],0xd3
  41b4e2:	and    al,0xf9
  41b4e4:	push   es
  41b4e5:	sub    BYTE PTR [ebx],dl
  41b4e7:	out    0xb7,eax
  41b4e9:	(bad)  
  41b4ed:	es je  0x41b4c7
  41b4f0:	and    eax,0xecd924a4
  41b4f5:	test   eax,0x5a293a6e
  41b4fa:	enter  0xb6e8,0xc5
  41b4fe:	mov    BYTE PTR ds:0xabe8804d,ch
  41b504:	cdq    
  41b505:	sbb    bh,ch
  41b507:	imul   ebx,edx,0xeae90d73
  41b50d:	retf   
  41b50e:	mov    esi,DWORD PTR ds:0xaae8810d
  41b514:	sbb    BYTE PTR [esi],bl
  41b516:	std    
  41b517:	adc    esp,DWORD PTR [ecx-0x5cc63afa]
  41b51d:	lahf   
  41b51e:	push   ecx
  41b51f:	add    DWORD PTR [eax],0x0
	...
  41b531:	add    BYTE PTR [eax],al
  41b533:	add    BYTE PTR [ecx+0x3ae8ff47],ah
  41b539:	push   eax
  41b53a:	je     0x41b4f7
  41b53c:	imul   edx,ebx,0x24
  41b53f:	fld    DWORD PTR [esi-0x483585d9]
  41b545:	(bad)  
  41b549:	es je  0x41b553
  41b54c:	add    al,0xa4
  41b54e:	and    al,0xf9
  41b550:	pop    esp
  41b551:	test   eax,0x221eba6f
  41b556:	(bad)
  41b559:	lds    ecx,FWORD PTR [eax+0x10345800]
  41b55f:	call   0x3d68da
  41b564:	or     al,0x6d
  41b566:	and    al,0xf
  41b568:	pushf  
  41b569:	fs add al,0x8b
  41b56c:	(bad)  
  41b56e:	or     bh,bh
  41b570:	pop    edi
  41b571:	clc    
  41b572:	addr16 mov ds:0xdfa3,eax
  41b576:	dec    esi
  41b577:	call   0x3d68ba
  41b57c:	das    
  41b57d:	push   eax
  41b57e:	pop    ebx
  41b57f:	pop    esi
  41b580:	pop    ss
  41b581:	fwait
  41b582:	loope  0x41b5e1
  41b584:	mov    ss,WORD PTR [eax+eax*1+0x7efcd755]
  41b58b:	in     al,0x54
  41b58d:	adc    ch,ah
  41b58f:	and    al,0x58
  41b591:	nop
  41b592:	add    BYTE PTR [ecx+0x8be1],al
	...
  41b5ac:	cmp    al,0x93
  41b5ae:	dec    edi
  41b5af:	push   esi
  41b5b0:	retf   
  41b5b1:	sbb    al,0x80
  41b5b3:	arpl   WORD PTR ds:0x21e80090,cx
  41b5b9:	push   0xfffffffb
  41b5bb:	jmp    FWORD PTR [ebx+edi*8-0x6fe2348a]
  41b5c2:	xchg   eax,ebx
  41b5c4:	fucomip st,st(4)
  41b5c6:	fist   WORD PTR ss:[ebx]
  41b5c9:	adc    al,0x4c
  41b5cb:	add    esp,ebx
  41b5cd:	(bad)
  41b5d1:	adc    DWORD PTR [eax-0x77],0xffffffc0
  41b5d5:	daa    
  41b5d6:	adc    eax,0xfd8a87e8
  41b5db:	call   FWORD PTR [eax+0x53]
  41b5de:	or     eax,DWORD PTR [ebp+eiz*4+0x51000092]
  41b5e5:	(bad)  
  41b5e6:	and    al,0x10
  41b5e8:	mov    ch,0xd6
  41b5ea:	cwde   
  41b5eb:	(bad)
  41b5ee:	add    DWORD PTR [ecx+0x74b58ea5],ecx
  41b5f4:	xlat   BYTE PTR ds:[ebx]
  41b5f5:	pop    ecx
  41b5f6:	cmp    BYTE PTR [eax*8-0x1993e906],ah
  41b5fd:	ror    BYTE PTR [ebp-0x3b],1
  41b600:	mov    ah,0x28
  41b602:	push   ebx
  41b603:	mov    cl,bh
  41b605:	push   esp
  41b606:	adc    ch,al
  41b608:	xchg   edx,eax
  41b609:	(bad)  
  41b60a:	lods   eax,DWORD PTR ds:[esi]
  41b60b:	std    
  41b60c:	xor    eax,0xce50d
	...
  41b621:	add    BYTE PTR [eax],al
  41b623:	add    BYTE PTR [ebp-0x4a0a7adf],dh
  41b629:	sub    BYTE PTR [ecx],al
  41b62b:	mov    esp,ecx
  41b62d:	dec    esp
  41b62e:	or     eax,ebp
  41b630:	icebp  
  41b631:	dec    esp
  41b632:	add    al,0x0
  41b634:	fbld   TBYTE PTR [ebx]
  41b636:	jp     0x41b5fe
  41b638:	in     eax,0xbe
  41b63a:	pop    ds
  41b63b:	push   ecx
  41b63c:	dec    ebp
  41b63d:	jge    0x41b604
  41b63f:	push   DWORD PTR [edx]
  41b641:	mov    ch,0xc1
  41b643:	or     eax,0xf031
  41b648:	mov    ch,0xbe
  41b64a:	or     BYTE PTR [eax-0x43],ch
  41b64d:	pop    ecx
  41b64e:	inc    esp
  41b64f:	add    BYTE PTR [edi-0x5717ae9d],bl
  41b655:	jmp    0xe97ab65d
  41b65a:	std    
  41b65b:	xor    edi,0x28
  41b65e:	add    DWORD PTR [eax],eax
  41b660:	pop    edi
  41b661:	xor    al,0x80
  41b663:	inc    ebx
  41b664:	mov    ebp,0x86761a78
  41b669:	add    BYTE PTR [esi],al
  41b66b:	lds    esi,FWORD PTR [eax+ebp*1-0x4b3d3f7b]
  41b672:	pop    ebp
  41b673:	add    BYTE PTR [ebp+0x3fece78f],dh
  41b679:	ja     0x41b650
  41b67b:	adc    eax,0xaeefa4b8
  41b680:	es test cl,al
  41b683:	ss add al,0x28
  41b686:	push   ebx
  41b687:	lds    eax,FWORD PTR [eax]
	...
  41b699:	add    BYTE PTR [eax],al
  41b69b:	add    BYTE PTR [edx-0x573c9ce6],ah
  41b6a1:	adc    ebx,DWORD PTR [eax+0x3]
  41b6a4:	mov    ch,0x8f
  41b6a6:	lock xor BYTE PTR [ecx+0x6aef6a3],bh
  41b6ad:	mov    WORD PTR [ecx-0x44d81be4],ss
  41b6b3:	(bad)  
  41b6b4:	jb     0x41b6d0
  41b6b6:	arpl   bx,ax
  41b6b8:	loope  0x41b656
  41b6ba:	shl    BYTE PTR [eax],0xc5
  41b6bd:	mov    ds:0x7fe6aeee,eax
  41b6c2:	sbb    DWORD PTR [ecx],0xc6a727e4
  41b6c8:	dec    edx
  41b6c9:	sbb    ch,BYTE PTR [ebx-0x3c]
  41b6cc:	leave  
  41b6cd:	test   al,0x6c
  41b6cf:	xor    BYTE PTR [ecx-0x26b75299],dl
  41b6d5:	mov    ah,bh
  41b6d7:	fwait
  41b6d8:	sbb    BYTE PTR [ebx],0xc6
  41b6db:	lods   eax,DWORD PTR ds:[esi]
  41b6dc:	(bad)  
  41b6dd:	nop
  41b6de:	jb     0x41b6a5
  41b6e0:	or     eax,0x10adb1a4
  41b6e5:	adc    esp,DWORD PTR [edi+0x5b0cc538]
  41b6eb:	call   0x42944b2
  41b6f0:	or     eax,0xb502bfc7
  41b6f5:	push   es
  41b6f6:	or     ebp,eax
  41b6f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6f9:	or     al,0x6b
  41b6fb:	call   0x42943f2
	...
  41b714:	test   DWORD PTR [esi+0xb688100],edi
  41b71a:	add    cl,ch
  41b71c:	dec    esi
  41b71d:	shl    DWORD PTR [esi+esi*8],cl
  41b720:	dec    edi
  41b721:	sub    edi,edi
  41b723:	call   0x3007bfde
  41b728:	mov    ecx,0xe3a0408f
  41b72d:	and    BYTE PTR [edx-0x17],ch
  41b730:	and    ebx,DWORD PTR [esp-0x653c6f3]
  41b737:	ss pusha 
  41b739:	sbb    esi,DWORD PTR [ecx]
  41b73b:	inc    ecx
  41b73c:	inc    esi
  41b73d:	stc    
  41b73e:	cld    
  41b73f:	es in  al,0x27
  41b742:	jmp    0x8a5cff8f
  41b747:	lods   eax,DWORD PTR ds:[esi]
  41b748:	pop    edx
  41b749:	mov    ecx,gs
  41b74b:	ficomp WORD PTR [ecx]
  41b74d:	pop    edi
  41b74e:	call   0xfd5c8d7a
  41b753:	call   0x5e21:0xf69f383e
  41b75a:	ror    BYTE PTR [esi-0x33764908],0xf3
  41b761:	dec    ebp
  41b762:	adc    al,0xe9
  41b764:	jecxz  0x41b76c
  41b766:	in     al,dx
  41b767:	bound  edi,QWORD PTR [eax-0x7bca13f2]
  41b76d:	ret    0xe86a
  41b770:	mov    ds:0x8318acc4,eax
  41b775:	pop    esi
  41b776:	fnstenv [esi+0x0]
	...
  41b78c:	pop    di
  41b78e:	sub    DWORD PTR [ecx+0x2c89d2c3],0x7d
  41b795:	push   esp
  41b796:	add    cl,ch
  41b798:	xchg   esi,eax
  41b799:	(bad)  
  41b79a:	jno    0x41b770
  41b79c:	fbstp  TBYTE PTR [ebp-0x3726eb48]
  41b7a2:	xchg   DWORD PTR [eax],eax
  41b7a4:	xchg   ecx,eax
  41b7a5:	jmp    0x41b78e
  41b7a7:	jnp    0x41b816
  41b7a9:	jmp    0x41b7a5
  41b7ab:	mov    eax,DWORD PTR [edi+eiz*1-0x8]
  41b7af:	je     0x41b7a6
  41b7b1:	xchg   edi,eax
  41b7b2:	push   es
  41b7b3:	lea    ecx,[ecx]
  41b7b5:	in     eax,0x4c
  41b7b7:	jmp    ecx
  41b7b9:	in     al,0x52
  41b7bb:	push   esi
  41b7bc:	or     edi,DWORD PTR [ebp+0x61dc850c]
  41b7c2:	or     eax,0x52e461ff
  41b7c7:	jmp    DWORD PTR [ecx+0x14]
  41b7ca:	push   eax
  41b7cb:	push   0xffffff9e
  41b7cd:	hlt    
  41b7ce:	sbb    dh,bh
  41b7d0:	fucomi st,st(3)
  41b7d2:	mov    eax,ebx
  41b7d4:	inc    ebx
  41b7d5:	hlt    
  41b7d6:	imul   esp,DWORD PTR [ecx-0x75a51465],0xffffff9f
  41b7dd:	mov    ebp,0x518c50c2
  41b7e3:	mov    ecx,eax
  41b7e5:	paddsb mm2,QWORD PTR [edi+ecx*8]
  41b7e9:	jno    0x41b7e7
  41b7eb:	add    BYTE PTR [edi],ch
  41b7ed:	cdq    
  41b7ee:	inc    ecx
  41b7ef:	sbb    BYTE PTR [eax],al
	...
  41b801:	add    BYTE PTR [eax],al
  41b803:	add    BYTE PTR [ebx+ebp*8],ch
  41b806:	jo     0x41b81c
  41b808:	leave  
  41b809:	into   
  41b80a:	clc    
  41b80b:	push   eax
  41b80c:	leave  
  41b80d:	into   
  41b80e:	cld    
  41b80f:	push   eax
  41b810:	hlt    
  41b811:	aad    0x50
  41b813:	add    BYTE PTR [edi+ecx*1],bl
  41b816:	shl    BYTE PTR [eax+edx*1+0x22],0xbd
  41b81b:	jmp    0x41b804
  41b81d:	cwde   
  41b81e:	inc    ecx
  41b81f:	clc    
  41b820:	mov    bh,0xce
  41b822:	cld    
  41b823:	xor    DWORD PTR [ecx-0x9],0xffffffff
  41b827:	xor    BYTE PTR [ecx+0x54d0ffdf],0xc3
  41b82e:	sti    
  41b82f:	jne    0x41b7e6
  41b831:	add    dh,BYTE PTR [edi+0x43]
  41b834:	fst    DWORD PTR [ebp-0x64]
  41b837:	gs in  eax,0x25
  41b83a:	add    ebp,edi
  41b83c:	pusha  
  41b83d:	call   0xfd64:0x37ddd87e
  41b844:	retf   0xcdb1
  41b847:	je     0x41b7f4
  41b849:	mov    cl,0x2f
  41b84b:	hlt    
  41b84c:	mov    edx,0x28fd9542
  41b851:	sbb    DWORD PTR [edx+0x2fc5b973],ebp
  41b857:	or     BYTE PTR [ebp-0x650258fa],cl
  41b85d:	mov    ds:0xcd08fdcc,eax
  41b862:	pushf  
  41b863:	hlt    
  41b864:	push   ebp
  41b865:	test   ax,0x8a
	...
  41b879:	add    BYTE PTR [eax],al
  41b87b:	add    BYTE PTR [esi+0x52],dh
  41b87e:	mov    esp,0x98a1e0c1
  41b883:	and    DWORD PTR [ecx+0x2d],0xfc6a5556
  41b88a:	clc    
  41b88b:	mov    ah,al
  41b88d:	adc    al,0xf6
  41b88f:	fmul   DWORD PTR [ebp+0x14]
  41b892:	test   ebp,edi
  41b894:	push   edx
  41b895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b896:	les    esi,FWORD PTR [eax+edx*4+0x25]
  41b89a:	xor    al,bh
  41b89c:	jl     0x41b869
  41b89e:	clc    
  41b89f:	cld    
  41b8a0:	sar    BYTE PTR [esi+edi*2],0x43
  41b8a4:	mov    ebp,0xba10303d
  41b8a9:	imul   edi,DWORD PTR [edi],0xc
  41b8ac:	test   edx,eax
  41b8ae:	push   es
  41b8af:	call   0xfdeb8c45
  41b8b4:	adc    dl,BYTE PTR [eax+esi*4-0x76]
  41b8b8:	in     eax,dx
  41b8b9:	push   eax
  41b8ba:	je     0x41b85c
  41b8bc:	add    dl,BYTE PTR [eax+0x532f4aa6]
  41b8c2:	inc    edx
  41b8c3:	mov    ebp,0x50e783f7
  41b8c8:	cmp    al,0x24
  41b8ca:	push   0xe78bc997
  41b8cf:	add    eax,DWORD PTR [esi+edi*4+0xd3eab72]
  41b8d6:	sub    DWORD PTR [esi+0x1c1716c8],0xffffffcb
  41b8dd:	(bad)  
  41b8de:	out    0x3,eax
	...
  41b8f4:	test   BYTE PTR [edx],bh
  41b8f6:	pop    esi
  41b8f7:	adc    BYTE PTR [ebp-0x2fc587f],ch
  41b8fd:	push   esp
  41b8fe:	push   esp
  41b8ff:	add    esi,DWORD PTR [ebp+0x2e4abe8f]
  41b905:	or     al,0x33
  41b907:	test   al,0x90
  41b909:	push   ss
  41b90a:	xchg   edi,eax
  41b90b:	push   esi
  41b90c:	sbb    eax,0xb543b674
  41b911:	add    al,0x6c
  41b913:	xchg   edi,eax
  41b914:	jl     0x41b92c
  41b916:	push   ds
  41b917:	push   ebx
  41b918:	jo     0x41b996
  41b91a:	out    dx,eax
  41b91b:	push   ss
  41b91c:	cmc    
  41b91d:	(bad)  
  41b91e:	fs ret 
  41b920:	jmp    0x61c22df5
  41b925:	adc    al,0xfe
  41b927:	test   eax,0x879e27e5
  41b92c:	dec    eax
  41b92d:	push   ss
  41b92e:	arpl   bx,ax
  41b930:	leave  
  41b931:	pusha  
  41b932:	je     0x41b9b3
  41b934:	inc    ecx
  41b935:	adc    al,0xde
  41b937:	test   eax,0x207c2785
  41b93c:	sub    BYTE PTR [esi],dl
  41b93e:	arpl   sp,ax
  41b940:	test   eax,0xad2fc670
  41b945:	or     ah,BYTE PTR [esi]
  41b947:	add    BYTE PTR [ebp+0x4],ah
  41b94a:	add    BYTE PTR [ebp+eax*2+0x1a],ch
  41b94e:	std    
  41b94f:	scas   al,BYTE PTR es:[edi]
  41b950:	imul   esp,DWORD PTR [edi],0x144ca640
  41b956:	mov    al,cl
	...
  41b96c:	push   0x12
  41b96e:	hlt    
  41b96f:	xchg   esp,eax
  41b970:	sbb    al,0x14
  41b972:	push   eax
  41b973:	sbb    ebx,0x6c86fcf9
  41b979:	or     ecx,eax
  41b97b:	and    cl,BYTE PTR [esi]
  41b97d:	push   ecx
  41b97e:	add    al,0xe9
  41b980:	jnp    0x41b98a
  41b982:	in     al,dx
  41b983:	push   0xe9026b1d
  41b988:	mov    dh,0xbd
  41b98a:	push   ebp
  41b98b:	push   ecx
  41b98c:	leave  
  41b98d:	xchg   esi,eax
  41b98e:	std    
  41b98f:	push   esi
  41b990:	retf   
  41b991:	mov    ?,WORD PTR [ecx]
  41b993:	cmp    ebp,esi
  41b995:	sbb    ch,bh
  41b997:	push   0x3b
  41b999:	nop
  41b99a:	je     0x41b970
  41b99c:	rcr    BYTE PTR [ebx+0x17ca2e07],1
  41b9a2:	push   es
  41b9a3:	jmp    0xfa2b495e
  41b9a8:	jne    0x41b97b
  41b9aa:	clc    
  41b9ab:	in     eax,0xb6
  41b9ad:	pop    DWORD PTR [eax]
  41b9af:	add    dh,BYTE PTR [edx+ecx*2-0x7044eebd]
  41b9b6:	add    cl,ch
  41b9b8:	mov    eax,0x14a48b8e
  41b9bd:	shr    BYTE PTR [edx-0x17],0xa8
  41b9c1:	mov    ds,WORD PTR [eax+0x1]
  41b9c4:	ret    
  41b9c5:	xchg   esi,eax
  41b9c6:	std    
  41b9c7:	out    0x98,al
  41b9c9:	gs pop eax
  41b9cb:	inc    edi
  41b9cc:	scas   al,BYTE PTR es:[edi]
  41b9cd:	shl    ah,1
  41b9cf:	add    BYTE PTR fs:[eax],al
	...
  41b9e2:	add    BYTE PTR [eax],al
  41b9e4:	stos   DWORD PTR es:[edi],eax
  41b9e5:	xor    edi,ebx
  41b9e7:	into   
  41b9e8:	dec    ebp
  41b9e9:	ror    BYTE PTR [ecx+0x8e3c900],0x0
  41b9f0:	sbb    al,0x91
  41b9f2:	add    al,0x50
  41b9f4:	xchg   ecx,eax
  41b9f5:	push   ebp
  41b9f6:	in     al,0x50
  41b9f8:	xchg   edx,eax
  41b9f9:	or     al,bl
  41b9fb:	inc    ebx
  41b9fc:	or     al,0xbf
  41b9fe:	push   0x0
  41ba00:	inc    esp
  41ba01:	or     eax,eax
  41ba03:	add    esp,ebx
  41ba05:	xchg   ebx,eax
  41ba06:	clc    
  41ba07:	test   DWORD PTR [ebx],esi
  41ba09:	data16 add al,0x32
  41ba0c:	or     al,0xf4
  41ba0e:	sub    cl,BYTE PTR [ebp+0x564fdb99]
  41ba14:	xor    al,0x9a
  41ba16:	call   0xbd75:0xc09453ff
  41ba1d:	jb     0x41ba27
  41ba1f:	lea    ebx,[ecx-0x20]
  41ba22:	imul   eax,DWORD PTR [eax],0x5010e76c
  41ba28:	stos   BYTE PTR es:[edi],al
  41ba29:	rol    BYTE PTR [eax],1
  41ba2b:	or     eax,0x1c
  41ba2e:	cld    
  41ba2f:	jne    0x41ba25
  41ba31:	popf   
  41ba32:	inc    ecx
  41ba33:	lock sub al,0xbf
  41ba36:	xchg   DWORD PTR [ebp-0x6c],edi
  41ba39:	clc    
  41ba3a:	push   ss
  41ba3b:	sub    DWORD PTR [ebp-0x5aa1a470],ecx
  41ba41:	dec    edx
  41ba42:	add    al,0x0
  41ba44:	sub    dl,BYTE PTR [ebx+0x2474]
	...
  41ba5a:	add    BYTE PTR [eax],al
  41ba5c:	push   esp
  41ba5d:	mov    edi,0xc0e7fa87
  41ba62:	or     al,0x8b
  41ba64:	push   0x3470879a
  41ba69:	mov    esi,edx
  41ba6b:	mov    ebx,DWORD PTR [esp+edi*2]
  41ba6e:	daa    
  41ba6f:	rcl    DWORD PTR [edi-0x30fb8217],1
  41ba75:	dec    ebx
  41ba76:	out    0x2a,eax
  41ba78:	mov    ch,0x34
  41ba7a:	inc    eax
  41ba7b:	and    al,0xc5
  41ba7d:	daa    
  41ba7e:	push   edx
  41ba7f:	je     0x41ba68
  41ba81:	mov    ds:0xa1af7ea5,eax
  41ba86:	inc    esp
  41ba87:	xor    dh,bl
  41ba89:	xlat   BYTE PTR ds:[ebx]
  41ba8a:	hlt    
  41ba8b:	mov    ch,0x9c
  41ba8d:	xor    eax,0xa0ab146b
  41ba92:	or     BYTE PTR [ecx],al
  41ba94:	and    BYTE PTR [edi-0x14],0x1b
  41ba98:	mov    bh,0x73
  41ba9a:	push   es
  41ba9b:	and    edx,0xffffff84
  41ba9e:	cdq    
  41ba9f:	xor    ebp,esi
  41baa1:	gs dec ecx
  41baa3:	pop    ebp
  41baa4:	jae    0x41ba8e
  41baa6:	sti    
  41baa7:	(bad)  
  41baa8:	cmp    al,0x37
  41baaa:	ja     0x41bab2
  41baac:	jb     0x41bb15
  41baae:	ds cmp dh,bh
  41bab1:	xor    bh,bl
  41bab3:	xor    BYTE PTR [edx-0x6c164bce],0x76
  41baba:	(bad)  
  41babb:	jmp    0xecbb9758
	...
  41bad4:	xor    al,0xbd
  41bad6:	adc    bh,bh
  41bad8:	xchg   edx,eax
  41bad9:	sub    DWORD PTR [edx+0x56],edx
  41badc:	ds aam 0xc
  41badf:	push   ebp
  41bae0:	cs pop edi
  41bae2:	jns    0x41babb
  41bae4:	mov    WORD PTR ds:0x9db50006,?
  41baea:	aas    
  41baeb:	and    al,0xae
  41baed:	loop   0x41bae7
  41baef:	or     al,0x36
  41baf1:	cmp    eax,0x12b50006
  41baf6:	inc    eax
  41baf7:	and    BYTE PTR [edi+0x3c183f9d],dh
  41bafd:	in     al,0x98
  41baff:	je     0x41bab3
  41bb01:	lods   eax,DWORD PTR ds:[esi]
  41bb02:	aas    
  41bb03:	sbb    al,0x2c
  41bb05:	nop
  41bb06:	sub    al,0xbc
  41bb08:	ds int 0xaf
  41bb0b:	jl     0x41ba9b
  41bb0d:	inc    ebx
  41bb0e:	pusha  
  41bb0f:	inc    eax
  41bb10:	rol    DWORD PTR ds:0x1f9682de,0xe7
  41bb17:	adc    BYTE PTR [esi+0x40f6e723],0x51
  41bb1e:	pusha  
  41bb1f:	inc    eax
  41bb20:	add    DWORD PTR [edi],ecx
  41bb22:	scas   eax,DWORD PTR es:[edi]
  41bb23:	sub    eax,0xdc540aa8
  41bb28:	repnz adc ch,dh
  41bb2b:	ins    DWORD PTR es:[edi],dx
  41bb2c:	inc    ebp
  41bb2d:	hlt    
  41bb2e:	pop    es
  41bb2f:	inc    ebp
  41bb30:	mov    ch,0x12
  41bb32:	ret    
  41bb33:	nop
  41bb34:	popa   
  41bb35:	scas   eax,DWORD PTR es:[edi]
  41bb36:	sub    BYTE PTR [eax+eax*1],al
	...
  41bb49:	add    BYTE PTR [eax],al
  41bb4b:	add    al,al
  41bb4d:	fldenv ds:0x25d9b805
  41bb53:	add    al,BYTE PTR [edx]
  41bb55:	xor    bh,bl
  41bb57:	cli    
  41bb58:	sti    
  41bb59:	(bad)  
  41bb5b:	add    al,BYTE PTR [ecx+ecx*1]
  41bb5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb5f:	(bad)  
  41bb61:	or     al,0x7c
  41bb63:	add    esi,DWORD PTR [ebp-0x35179571]
  41bb69:	sub    al,0xaa
  41bb6b:	add    esi,DWORD PTR [ebp-0x4a7f9c7e]
  41bb71:	(bad)  
  41bb72:	out    0xf6,eax
  41bb74:	dec    eax
  41bb75:	retf   0x7ae3
  41bb78:	jmp    0x41bb1d
  41bb7a:	jo     0x41bbbc
  41bb7c:	push   ecx
  41bb7d:	push   es
  41bb7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb7f:	div    DWORD PTR [ebx]
  41bb81:	int3   
  41bb82:	inc    edi
  41bb83:	jp     0x41bb80
  41bb85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb86:	ret    0x32bb
  41bb89:	les    ecx,FWORD PTR [edi+0x7a]
  41bb8c:	inc    BYTE PTR [edi-0x33cd442e]
  41bb92:	add    BYTE PTR [ebp-0x3f],cl
  41bb95:	(bad)  
  41bb96:	lods   al,BYTE PTR ds:[esi]
  41bb97:	(bad)  
  41bb98:	jmp    DWORD PTR [edi-0x38]
  41bb9b:	mul    BYTE PTR [eax+0x51a803cc]
  41bba1:	xchg   DWORD PTR [edi-0x497b56dc],eax
  41bba7:	push   ds
  41bba8:	sbb    eax,DWORD PTR [edi-0x3b5f0941]
  41bbae:	or     BYTE PTR [eax+0x0],dh
	...
  41bbc1:	add    BYTE PTR [eax],al
  41bbc3:	add    dl,cl
  41bbc5:	dec    edi
  41bbc6:	or     eax,0xbf8cc07f
  41bbcb:	leave  
  41bbcc:	stc    
  41bbcd:	xchg   BYTE PTR [edi-0x76b44d90],bh
  41bbd3:	and    al,0xc1
  41bbd5:	cli    
  41bbd6:	sub    BYTE PTR [ebx+0x24871706],ch
  41bbdc:	or     BYTE PTR gs:[esi+0x8fb96d],al
  41bbe3:	jo     0x41bb6f
  41bbe5:	xlat   BYTE PTR ds:[ebx]
  41bbe6:	mov    BYTE PTR [edi+0x31],ch
  41bbe9:	pop    DWORD PTR [eax]
  41bbeb:	jmp    0x2eda8233
  41bbf0:	repnz idiv esi
  41bbf3:	call   0xacc94bae
  41bbf8:	sbb    dl,BYTE PTR [ebx]
  41bbfa:	adc    ebx,DWORD PTR [ecx]
  41bbfc:	cmp    cl,bh
  41bbfe:	add    BYTE PTR [ecx+edi*2-0x7d],ch
  41bc02:	lea    ebx,[edi+ecx*4+0x11]
  41bc06:	std    
  41bc07:	out    0xfe,al
  41bc09:	sbb    DWORD PTR [eax],ebp
  41bc0b:	jmp    0xf006cac6
  41bc10:	jmp    0x41bbcc
  41bc12:	add    esi,ebp
  41bc14:	fadd   DWORD PTR [ebp+0xf26a487]
  41bc1a:	test   DWORD PTR [edi+0xe70d61],0x83008d5d
  41bc24:	mov    ch,0x72
  41bc26:	or     eax,DWORD PTR [eax+eax*1+0x0]
	...
  41bc39:	add    BYTE PTR [eax],al
  41bc3b:	add    BYTE PTR [esp+ecx*4-0x1b310000],ch
  41bc42:	arpl   WORD PTR [edi+esi*2+0xe],si
  41bc46:	cmc    
  41bc47:	gs add cl,0x7f
  41bc4b:	stc    
  41bc4c:	je     0x41bcae
  41bc4e:	adc    al,0xf
  41bc50:	inc    edx
  41bc51:	push   esp
  41bc52:	std    
  41bc53:	push   cs
  41bc54:	xchg   edx,eax
  41bc55:	pop    ebx
  41bc56:	add    al,cl
  41bc58:	cld    
  41bc59:	adc    al,0x8
  41bc5b:	ror    DWORD PTR [edi],0xe5
  41bc5e:	in     al,0x82
  41bc60:	or     eax,0xa18b008d
  41bc65:	das    
  41bc66:	cmp    eax,0x6a8cc650
  41bc6b:	add    BYTE PTR [ebx+0x62],cl
  41bc6e:	sbb    BYTE PTR [ebx+0x75fbc317],cl
  41bc74:	in     al,dx
  41bc75:	jmp    0x41bce7
  41bc77:	or     al,0x4b
  41bc79:	popa   
  41bc7a:	or     al,ch
  41bc7c:	pop    esp
  41bc7d:	jmp    0xefc:0xe44ffffa
  41bc84:	and    BYTE PTR [ebx-0x6e63ffe4],dh
  41bc8a:	shl    BYTE PTR [edi+edx*4+0x29],0x1b
  41bc8f:	cld    
  41bc90:	jmp    0x41bc7d
  41bc92:	or     al,BYTE PTR [ebp-0x2cae4]
  41bc98:	lahf   
  41bc99:	imul   edx,DWORD PTR [ecx+ebp*8],0x8d51
	...
  41bcb4:	pop    ebx
  41bcb5:	mov    ds:0xa26b0443,al
  41bcba:	push   ebx
  41bcbb:	add    eax,0xb07ec9d
  41bcc0:	mov    ch,0x64
  41bcc2:	add    al,al
  41bcc4:	sahf   
  41bcc5:	jmp    0x41bcd7
  41bcc7:	jnp    0x41bc89
  41bcc9:	popf   
  41bcca:	dec    ebx
  41bccb:	or     al,0x36
  41bccd:	sar    BYTE PTR [esi+0x0],cl
  41bcd0:	mov    dl,0xab
  41bcd2:	test   BYTE PTR [edx],al
  41bcd4:	mov    ch,0x26
  41bcd6:	and    BYTE PTR [ebx+0x29],0x26
  41bcda:	xchg   bh,dh
  41bcdc:	nop
  41bcdd:	and    DWORD PTR [eax+0x126b402],ecx
  41bce3:	mov    DWORD PTR [ebx-0x72],ebp
  41bce6:	test   DWORD PTR [ebx-0x57],esp
  41bce9:	es mov ah,0xf8
  41bcec:	ss push eax
  41bcee:	in     al,0xff
  41bcf0:	sub    eax,0x68879463
  41bcf5:	shl    BYTE PTR [ecx],cl
  41bcf7:	and    al,dl
  41bcf9:	mov    al,0x3
  41bcfb:	or     eax,0xbf035723
  41bd00:	aad    0x2d
  41bd02:	push   cs
  41bd03:	ret    0x6b9e
  41bd06:	xchg   esp,eax
  41bd07:	je     0x41bcad
  41bd09:	and    eax,0x6aca244f
  41bd0e:	clc    
  41bd0f:	mov    BYTE PTR [eax+0x32],bh
  41bd12:	mov    WORD PTR [ebx-0x37],cs
  41bd15:	fadd   QWORD PTR [esi+0x20]
	...
  41bd2c:	xor    DWORD PTR [edi-0x73],edx
  41bd2f:	inc    ebx
  41bd30:	shl    DWORD PTR [ecx+0x73b2204a],0x61
  41bd37:	add    BYTE PTR [ebp-0x5ebc7208],dh
  41bd3d:	add    BYTE PTR [edi-0x10],0xce
  41bd41:	ss jmp 0x47b3aebc
  41bd47:	lock into 
  41bd49:	ss in  eax,0x86
  41bd4c:	clc    
  41bd4d:	(bad)  
  41bd4e:	pop    ss
  41bd4f:	xchg   DWORD PTR [ebp-0x6e],esi
  41bd52:	mov    bh,0x8e
  41bd54:	idiv   bl
  41bd56:	imul   eax,esp,0xf90e5fb7
  41bd5c:	fisub  DWORD PTR [ebp+0x68e203a7]
  41bd62:	fs (bad) 
  41bd64:	(bad)  
  41bd65:	mov    ebx,0x9f455162
  41bd6a:	xor    eax,0x3845c005
  41bd6f:	add    eax,0xeeef06a
  41bd74:	not    DWORD PTR [edx-0x60882159]
  41bd7a:	dec    esp
  41bd7b:	adc    DWORD PTR [esi+eiz*2],edi
  41bd7e:	repz xchg cl,cl
  41bd81:	adc    edi,esp
  41bd83:	adc    ch,BYTE PTR [esi]
  41bd85:	xchg   ecx,eax
  41bd86:	jmp    0x4454728e
  41bd8b:	cwde   
  41bd8c:	mov    ch,0xca
  41bd8e:	xor    eax,0xec
	...
  41bda3:	add    BYTE PTR [ecx+0x43],ah
  41bda6:	jb     0x41bdf0
  41bda8:	ror    DWORD PTR [esi],1
  41bdaa:	sub    al,0xf8
  41bdac:	xor    edx,DWORD PTR [ebp-0x69]
  41bdaf:	mov    ?,WORD PTR [esi-0x5d]
  41bdb2:	ret    0x9549
  41bdb5:	mov    WORD PTR [esi],ss
  41bdb7:	(bad)  
  41bdb8:	jbe    0x41bdb5
  41bdba:	imul   eax,ebx,0xb02418b7
  41bdc0:	cmp    al,0x54
  41bdc2:	push   edi
  41bdc3:	push   es
  41bdc4:	repz mov bl,0x70
  41bdc7:	dec    eax
  41bdc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdc9:	adc    ah,BYTE PTR [edi]
  41bdcb:	add    eax,0xafd40f05
  41bdd0:	nop
  41bdd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdd2:	iret   
  41bdd3:	stc    
  41bdd4:	retf   0xa08f
  41bdd7:	cmp    al,0x36
  41bdd9:	iret   
  41bdda:	(bad)  
  41bddb:	mov    ebx,0x394b1760
  41bde0:	mov    DWORD PTR [ebp-0x1],0xff570cf5
  41bde7:	daa    
  41bde8:	push   ss
  41bde9:	xchg   edi,eax
  41bdea:	or     DWORD PTR [eax],ebp
  41bdec:	mov    bl,0xcf
  41bdee:	cmp    BYTE PTR [esi+eax*2-0x1b8df477],ah
  41bdf5:	fwait
  41bdf6:	cmp    DWORD PTR [ebp+0x640d8f39],0xe9fd0e37
  41be00:	cmp    esi,DWORD PTR [edx-0xc]
  41be03:	jmp    0x7256105d
	...
  41be1c:	jp     0x41bdc1
  41be1e:	cmp    DWORD PTR [edi],ebp
  41be20:	adc    DWORD PTR [edx+0x546cdeb2],ecx
  41be26:	push   ebp
  41be28:	ins    BYTE PTR es:[edi],dx
  41be29:	pop    esp
  41be2a:	add    ch,BYTE PTR [eax-0x57f668a7]
  41be30:	mov    al,0x7
  41be32:	sub    DWORD PTR [ecx*2+0x36f0738f],0x3bee54cc
  41be3d:	imul   eax,DWORD PTR [ecx],0xc510b6e9
  41be43:	jmp    0x12a4:0xafc8a39
  41be4a:	push   ebx
  41be4b:	fnsave [esi-0x32d37671]
  41be51:	int    0x50
  41be53:	add    edi,DWORD PTR [ebx+0x3805730a]
  41be59:	jecxz  0x41be57
  41be5b:	aam    0x9e
  41be5d:	arpl   bp,di
  41be5f:	fsub   QWORD PTR [esi-0x55b136e8]
  41be65:	fwait
  41be66:	std    
  41be67:	add    BYTE PTR [ecx-0x67],cl
  41be6a:	call   0xfb707f64
  41be6f:	jmp    0x3eb838
  41be74:	xlat   BYTE PTR ds:[ebx]
  41be75:	mov    DWORD PTR [eax+eax*1-0x2d7e6ea4],edx
  41be7c:	push   ebx
  41be7d:	adc    eax,0xfe1d
	...
  41be92:	add    BYTE PTR [eax],al
  41be94:	ret    
  41be95:	or     esi,DWORD PTR cs:[esi-0x49f46ae5]
  41be9c:	add    edx,DWORD PTR [esi-0x63bb1f43]
  41bea2:	mov    ebp,0x39290989
  41bea7:	jmp    DWORD PTR [ebx]
  41bea9:	xchg   ecx,eax
  41beaa:	add    BYTE PTR [edi],cl
  41beac:	cwde   
  41bead:	pop    es
  41beae:	(bad)  
  41beaf:	dec    DWORD PTR [esp+ebp*8]
  41beb2:	ds add al,0x13
  41beb5:	adc    eax,0x911c010e
  41beba:	jg     0x41bf21
  41bebc:	dec    eax
  41bebd:	xchg   ecx,eax
  41bebe:	jg     0x41bf3d
  41bec0:	cmp    al,0xb8
  41bec2:	or     eax,DWORD PTR [ebp-0x4d144]
  41bec8:	push   edi
  41bec9:	push   esi
  41beca:	sub    BYTE PTR [ebx-0x7d02f847],al
  41bed0:	ret    0xfcf3
  41bed3:	mov    BYTE PTR [ecx-0xcdd81c1],cl
  41bed9:	data16 or BYTE PTR [edi],cl
  41bedc:	mov    al,al
  41bede:	std    
  41bedf:	shr    BYTE PTR ds:0x7ca0799,0x5e
  41bee6:	clc    
  41bee7:	je     0x41be76
  41bee9:	xchg   ebx,eax
  41beea:	inc    esi
  41beeb:	and    al,0x13
  41beed:	push   esi
  41beee:	adc    al,0x8b
  41bef0:	push   ecx
  41bef1:	add    al,0x86
  41bef3:	inc    ebp
  41bef4:	mov    ch,0x52
  41bef6:	fmul   QWORD PTR [ebp+0x0]
	...
  41bf09:	add    BYTE PTR [eax],al
  41bf0b:	add    ch,dl
  41bf0d:	fidivr DWORD PTR [esi-0x24150f77]
  41bf13:	inc    ebp
  41bf14:	aad    0xfd
  41bf16:	lea    esi,[edx]
  41bf18:	jp     0x41bedf
  41bf1a:	mov    al,ds:0x8acaf889
  41bf1f:	inc    ebx
  41bf20:	gs icebp 
  41bf22:	inc    esi
  41bf23:	sub    bl,ch
  41bf25:	xor    eax,0xd165438c
  41bf2a:	inc    esi
  41bf2b:	and    al,0x3c
  41bf2d:	xor    edx,DWORD PTR [ecx+0x30f87581]
  41bf33:	mov    eax,edi
  41bf35:	call   0x13a0:0x26b7c084
  41bf3c:	popf   
  41bf3d:	in     al,0x40
  41bf3f:	add    BYTE PTR [edi+ecx*2-0x6a573f79],cl
  41bf46:	mov    DWORD PTR [ebx+0x25],ecx
  41bf49:	cmc    
  41bf4a:	push   edx
  41bf4b:	cmpps  xmm4,XMMWORD PTR [ebx+eax*2],0xff
  41bf50:	cmc    
  41bf51:	xlat   BYTE PTR ds:[ebx]
  41bf52:	or     ecx,DWORD PTR [ecx]
  41bf54:	test   DWORD PTR [eax-0x94a6b8a],0xf2772900
  41bf5e:	xchg   ebp,eax
  41bf5f:	fmul   st,st(6)
  41bf61:	ss inc esp
  41bf63:	xchg   DWORD PTR [eax+0x22],edi
  41bf66:	pop    ss
  41bf67:	jl     0x41bf07
  41bf69:	mov    ah,0xec
  41bf6b:	je     0x41bf79
  41bf6d:	jno    0x41bfb6
  41bf6f:	in     al,dx
	...
  41bf84:	retf   0xf8ba
  41bf87:	xchg   BYTE PTR [eax-0x7a],bh
  41bf8a:	mov    DWORD PTR [ebx-0x5f],eax
  41bf8d:	inc    ecx
  41bf8e:	inc    ebx
  41bf8f:	and    dl,al
  41bf91:	imul   ecx,ecx,0xfffffffe
  41bf94:	stos   BYTE PTR es:[edi],al
  41bf95:	nop
  41bf96:	mov    si,si
  41bf99:	sti    
  41bf9a:	imul   eax,esp,0xafac18b7
  41bfa0:	cmp    al,0x55
  41bfa2:	push   edi
  41bfa3:	add    esi,ebx
  41bfa5:	mov    bl,0x70
  41bfa7:	dec    ecx
  41bfa8:	test   DWORD PTR [edi],ecx
  41bfaa:	daa    
  41bfab:	add    ah,ch
  41bfad:	or     bh,BYTE PTR [edi+ebp*4-0xa405a90]
  41bfb4:	stos   BYTE PTR es:[edi],al
  41bfb5:	pop    eax
  41bfb7:	cmp    al,0x36
  41bfb9:	shr    ch,1
  41bfbb:	mov    BYTE PTR [edi],dl
  41bfbd:	or     dl,BYTE PTR [esi]
  41bfbf:	lahf   
  41bfc0:	cmp    al,0x5d
  41bfc2:	pop    ss
  41bfc3:	lsl    edx,WORD PTR [ecx-0x18]
  41bfc7:	push   cs
  41bfc8:	or     ebx,DWORD PTR [ecx-0x69525ad8]
  41bfce:	sub    BYTE PTR [ebx+0x3e72443],cl
  41bfd4:	mov    ch,0xb6
  41bfd6:	sub    BYTE PTR [eax],cl
  41bfd8:	sub    al,ch
  41bfda:	add    esp,eax
  41bfdc:	jne    0x41bff6
  41bfde:	sub    al,0x98
  41bfe0:	xchg   BYTE PTR [edx+0x16a148ce],ah
  41bfe6:	sub    al,0xf8
	...
  41bffc:	mov    ebp,0x44200751
  41c001:	stc    
  41c002:	ss sahf 
  41c004:	lock or ah,BYTE PTR [esi-0x186f1eb8]
  41c00b:	add    esi,DWORD PTR [ebp-0x2dc4158b]
  41c011:	jns    0x41bfa8
  41c013:	sahf   
  41c014:	rcr    BYTE PTR [edx-0x6635b9ab],1
  41c01a:	cmp    eax,0x86d0b74e
  41c01f:	or     ebp,DWORD PTR [eax+edx*8+0xaaa63ff]
  41c026:	mov    BYTE PTR [ecx+eax*2],dl
  41c029:	adc    al,BYTE PTR [esi+0x8fb66d]
  41c02f:	and    ah,bl
  41c031:	mov    ds:0x517be57c,eax
  41c036:	cmp    al,ch
  41c038:	mov    dh,0x8f
  41c03a:	add    BYTE PTR [eax+0x13],dl
  41c03d:	or     edi,ebp
  41c03f:	jmp    0x284e1973
  41c044:	adc    al,0x8d
  41c046:	xchg   DWORD PTR [edx+eiz*2+0x4ff95617],edx
  41c04d:	fimul  DWORD PTR [eax+0x4318e1f5]
  41c053:	std    
  41c054:	inc    ecx
  41c055:	mov    ds:0x9b806208,eax
  41c05a:	mov    DWORD PTR [edx],esi
  41c05c:	dec    edi
  41c05d:	pop    esp
  41c05e:	push   0x70
	...
  41c073:	add    dl,ch
  41c075:	lahf   
  41c076:	add    al,0x62
  41c078:	jge    0x41c079
  41c07a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41c07c:	es fwait
  41c07e:	lea    ebp,[ecx-0x4a]
  41c081:	pop    DWORD PTR [eax]
  41c083:	push   0xfffffff1
  41c085:	mov    WORD PTR [edi+0x72f1092c],es
  41c08b:	call   0x87cb5046
  41c090:	jge    0x41c021
  41c092:	add    cl,ch
  41c094:	in     eax,0xd0
  41c096:	cmp    BYTE PTR [eax-0x331aec40],dh
  41c09c:	mov    dh,0x8f
  41c09e:	aaa    
  41c09f:	lods   eax,DWORD PTR ss:[esi]
  41c0a1:	pushf  
  41c0a2:	cmp    DWORD PTR [edi+0x62fd09da],0xffffffc0
  41c0a9:	adc    cl,BYTE PTR [esi+0x8fb175]
  41c0af:	add    BYTE PTR [edi+0x54],al
  41c0b2:	adc    cl,al
  41c0b4:	sub    al,0x8d
  41c0b6:	push   eax
  41c0b7:	push   DWORD PTR [ebx-0x77890467]
  41c0bd:	sub    al,0x11
  41c0bf:	mov    fs:0x538b004d,al
  41c0c5:	add    DWORD PTR [eax+0x4116947f],ecx
  41c0cb:	adc    BYTE PTR [edi],dl
  41c0cd:	push   ecx
  41c0ce:	call   0x85e19156
  41c0d3:	inc    ebp
  41c0d4:	xchg   esp,eax
  41c0d5:	ss sub eax,0xfb
	...
  41c0eb:	add    BYTE PTR [ebx+0x13b60b2a],ch
  41c0f1:	mov    es,WORD PTR [ebp-0x3cf14bbb]
  41c0f7:	add    al,ch
  41c0f9:	in     eax,dx
  41c0fa:	idiv   edi
  41c0fc:	stos   DWORD PTR es:[edi],eax
  41c0fd:	push   ss
  41c0fe:	inc    ecx
  41c0ff:	and    al,0x1c
  41c101:	mov    ebp,0x8d26006a
  41c106:	sti    
  41c107:	jne    0x41c15d
  41c109:	sbb    dl,BYTE PTR [ebx+0x3]
  41c10c:	push   edx
  41c10d:	sub    al,0x71
  41c10f:	adc    BYTE PTR [edi+0x2875fad6],dl
  41c115:	sub    al,0x71
  41c117:	or     BYTE PTR [eax+edx*8],al
  41c11a:	stc    
  41c11b:	(bad)  
  41c11c:	jmp    0x41c12d
  41c11e:	clc    
  41c11f:	add    DWORD PTR [eax-0x1],esp
  41c122:	cmp    DWORD PTR [ecx],ebx
  41c124:	clc    
  41c125:	sub    edi,ebx
  41c127:	je     0x41c0da
  41c129:	adc    al,al
  41c12b:	je     0x41c104
  41c12d:	jmp    0x2c5dbd4c
  41c132:	or     eax,DWORD PTR [ebp-0x30f84]
  41c138:	retf   
  41c139:	bound  eax,QWORD PTR [ebx+0x1]
  41c13c:	mov    ch,0xf1
  41c13e:	push   edx
  41c13f:	dec    ebp
  41c140:	mov    bh,0x37
  41c142:	mov    eax,ds:0x37ae08
  41c147:	clc    
  41c148:	xor    eax,0x6474354a
  41c14d:	or     eax,0x8903
	...
  41c162:	add    BYTE PTR [eax],al
  41c164:	repz push es
  41c166:	mov    al,BYTE PTR [ebx-0x53]
  41c169:	jbe    0x41c147
  41c16b:	push   edx
  41c16c:	stos   BYTE PTR es:[edi],al
  41c16d:	jb     0x41c105
  41c16f:	sbb    al,0xb5
  41c171:	not    BYTE PTR [edx+0xbf7d543]
  41c177:	add    DWORD PTR [eax],0xfffffff4
  41c17a:	add    BYTE PTR [eax],al
  41c17c:	stos   BYTE PTR es:[edi],al
  41c17d:	add    BYTE PTR [edi+edi*8-0x3d],0x88
  41c182:	dec    esp
  41c183:	add    dh,BYTE PTR [esi+edx*2+0x9]
  41c187:	or     DWORD PTR [ebp+esi*8-0x68],esi
  41c18b:	sbb    BYTE PTR [edx+0x3eec1542],0x78
  41c192:	add    DWORD PTR [eax],0xc57ff6b5
  41c198:	mov    dh,0x7f
  41c19a:	inc    esi
  41c19b:	adc    BYTE PTR [ebp+eiz*2-0x69],cl
  41c19f:	std    
  41c1a0:	xor    ch,BYTE PTR [ebp+0x46]
  41c1a3:	and    al,0x75
  41c1a5:	es daa 
  41c1a7:	add    BYTE PTR [edi-0x428c660a],cl
  41c1ad:	jnp    0x41c1e0
  41c1af:	add    DWORD PTR [ebx-0x1f],ebp
  41c1b2:	push   cs
  41c1b3:	adc    BYTE PTR [esi],bh
  41c1b5:	sub    eax,0xd1b17399
  41c1ba:	push   cs
  41c1bb:	or     BYTE PTR ds:0xf2fd9b02,cl
  41c1c1:	je     0x41c15f
  41c1c3:	(bad)  
  41c1c4:	mov    ebx,0x1c7772
	...
  41c1d9:	add    BYTE PTR [eax],al
  41c1db:	add    BYTE PTR [ebp-0x3c271871],dh
  41c1e1:	or     ebx,DWORD PTR [esi+0x7913c09b]
  41c1e7:	clc    
  41c1e8:	retf   0xcc07
  41c1eb:	idiv   DWORD PTR [esi-0x7bef79f9]
  41c1f1:	retf   0x97e2
  41c1f4:	mov    al,0x7
  41c1f6:	sti    
  41c1f7:	out    0xef,eax
  41c1f9:	test   eax,0x7ca09b6b
  41c1fe:	or     al,0x81
  41c200:	jne    0x41c27e
  41c202:	repnz fdiv DWORD PTR [eax-0x4764a9fd]
  41c209:	or     al,0xe3
  41c20b:	fild   WORD PTR [edx-0xfae09f9]
  41c211:	nop
  41c212:	out    dx,al
  41c213:	push   ecx
  41c214:	add    BYTE PTR [edx-0x65425bd8],dl
  41c21a:	sub    BYTE PTR [edi],al
  41c21c:	pop    ebp
  41c21d:	adc    dh,ah
  41c21f:	das    
  41c220:	loope  0x41c23d
  41c222:	adc    dh,al
  41c224:	sar    DWORD PTR ds:0x3db804ae,0x9e
  41c22b:	add    eax,0xeeef002
  41c230:	cli    
  41c231:	xchg   edx,eax
  41c232:	inc    DWORD PTR [ebx-0x5884a410]
  41c238:	and    ecx,DWORD PTR [ebp-0x39]
  41c23b:	add    al,0xb0
  41c23d:	or     al,0xb3
  41c23f:	test   DWORD PTR [eax],0x0
	...
  41c251:	add    BYTE PTR [eax],al
  41c253:	add    BYTE PTR [edx],bl
  41c255:	pop    es
  41c256:	push   0xffffffc2
  41c258:	mov    ah,0xf8
  41c25a:	aad    0x9c
  41c25c:	or     BYTE PTR [edi],al
  41c25e:	ficom  WORD PTR [ecx+0x78]
  41c261:	nop
  41c262:	not    BYTE PTR [ecx+0x68]
  41c265:	xchg   ecx,eax
  41c266:	test   al,0xa3
  41c268:	mov    ebp,0xdba8009a
  41c26d:	fidivr WORD PTR [eax]
  41c26f:	setno  BYTE PTR [edx+eax*4-0x2f922fd]
  41c277:	loop   0x41c205
  41c279:	xchg   DWORD PTR [ecx-0x4e],esi
  41c27c:	cmp    DWORD PTR [esi+0x78],esp
  41c27f:	add    BYTE PTR [ecx+edx*1],0x3b
  41c283:	mov    ecx,0xe9005115
  41c288:	mov    edi,0xb6e99a0b
  41c28d:	(bad)  
  41c28e:	or     eax,0x8a06f737
  41c293:	mov    bh,0xd2
  41c295:	push   cs
  41c296:	or     ebp,0x2f
  41c299:	add    al,0xfd
  41c29b:	(bad)  
  41c29c:	hlt    
  41c29d:	xchg   ebx,eax
  41c29e:	xchg   DWORD PTR [esi+eiz*4+0x4],esp
  41c2a2:	std    
  41c2a3:	inc    esi
  41c2a4:	sub    ecx,DWORD PTR [ebp+0x68]
  41c2a7:	adc    al,BYTE PTR [ecx+0x4fb18b0e]
  41c2ad:	add    al,0xfd
  41c2af:	(bad)  
  41c2b0:	in     eax,dx
  41c2b1:	xchg   edi,eax
  41c2b2:	sub    DWORD PTR [ecx],esi
  41c2b4:	sub    DWORD PTR [edx],edx
  41c2b6:	je     0x41c2d6
	...
  41c2cc:	das    
  41c2cd:	add    al,0x87
  41c2cf:	mov    fs:0x330efd04,al
  41c2d5:	fsubr  DWORD PTR [eax]
  41c2d7:	xor    DWORD PTR [edi-0x614bac3],ebp
  41c2dd:	out    dx,al
  41c2de:	pop    es
  41c2df:	pusha  
  41c2e0:	jge    0x41c2f1
  41c2e2:	or     eax,0x9906f37
  41c2e7:	test   al,0xac
  41c2e9:	cmp    eax,0x523fe44d
  41c2ee:	nop
  41c2ef:	out    0x64,al
  41c2f1:	dec    esp
  41c2f2:	add    al,0xa8
  41c2f4:	pop    ecx
  41c2f5:	xchg   edi,eax
  41c2f6:	or     DWORD PTR [eax],eax
  41c2f8:	dec    ebp
  41c2f9:	sbb    al,BYTE PTR [ecx-0x6c]
  41c2fc:	addr16 (bad) 
  41c2fe:	adc    BYTE PTR [ecx-0x7333249],bl
  41c304:	push   ebp
  41c305:	mov    BYTE PTR [ebx+ecx*4+0xf4a],0xdc
  41c30d:	sbb    BYTE PTR [ecx-0x78],al
  41c310:	push   edi
  41c311:	adc    DWORD PTR [eax-0x766e3400],ebx
  41c317:	lea    esp,[eax+ebp*1-0x7aa40005]
  41c31e:	push   0xfd2723ff
  41c323:	dec    DWORD PTR [ecx+edx*4+0x27204585]
  41c32a:	adc    DWORD PTR [eax],esi
  41c32c:	stc    
  41c32d:	dec    edx
  41c32e:	add    BYTE PTR [ebp+0x0],al
	...
  41c344:	fcom   QWORD PTR [esi-0x6e675975]
  41c34a:	add    BYTE PTR [edi],cl
  41c34c:	add    al,0x27
  41c34e:	and    al,BYTE PTR [eax]
  41c350:	pop    esp
  41c351:	or     al,0xc3
  41c353:	push   es
  41c354:	cmc    
  41c355:	stc    
  41c356:	cmc    
  41c357:	call   DWORD PTR [ebx-0x1aeb86e8]
  41c35d:	mov    esp,0xe5198bf0
  41c362:	cmp    al,0x50
  41c364:	ss xchg ecx,eax
  41c366:	sti    
  41c367:	jne    0x41c3b9
  41c369:	push   cs
  41c36a:	push   ebx
  41c36b:	add    esi,DWORD PTR [ebx-0x1874e76c]
  41c371:	sar    ebx,0x75
  41c374:	or     al,0x28
  41c376:	jno    0x41c384
  41c378:	adc    edx,DWORD PTR [esi+0x2964e808]
  41c37e:	sti    
  41c37f:	call   FWORD PTR [edi-0x4a8c02d8]
  41c385:	xchg   ebx,eax
  41c386:	jge    0x41c348
  41c388:	mov    ecx,esi
  41c38a:	aad    0x1d
  41c38c:	stc    
  41c38d:	int    0x97
  41c38f:	or     eax,0xffe38338
  41c394:	jmp    0x4ee5:0xb4454eed
  41c39b:	dec    ebp
  41c39c:	mov    bh,0x37
  41c39e:	mov    eax,ds:0x437be08
  41c3a3:	clc    
  41c3a4:	xor    eax,0x742cde
	...
  41c3b9:	add    BYTE PTR [eax],al
  41c3bb:	add    BYTE PTR [edx],cl
  41c3bd:	adc    bh,bh
  41c3bf:	mov    BYTE PTR [ebx+0x6],dh
  41c3c2:	mov    al,BYTE PTR [ebx-0x43]
  41c3c5:	add    BYTE PTR [eax],0x3c
  41c3c8:	or     BYTE PTR [ebx],al
  41c3ca:	or     DWORD PTR [ecx+ecx*1],edi
  41c3cd:	out    0x7d,al
  41c3cf:	add    edi,DWORD PTR [esi+0x4b0d00f6]
  41c3d5:	sub    eax,0x2d430d02
  41c3da:	add    edi,DWORD PTR [edi-0x40f4116b]
  41c3e0:	mov    dh,0x4e
  41c3e2:	cmp    DWORD PTR ds:0x80a53b09,0x868c23aa
  41c3ec:	xor    eax,0x2e0000f6
  41c3f1:	int3   
  41c3f2:	or     al,0x87
  41c3f4:	clc    
  41c3f5:	push   es
  41c3f6:	or     BYTE PTR [esp+ebp*1+0x7efd989c],al
  41c3fd:	xor    edx,DWORD PTR [ecx-0x6899cef3]
  41c403:	std    
  41c404:	xor    dh,BYTE PTR [ebx+0x40]
  41c407:	add    DWORD PTR ds:0x7886fa3e,esi
  41c40d:	(bad)  
  41c40e:	or     eax,0x348f2e0d
  41c413:	cld    
  41c414:	sar    DWORD PTR ds:0xee340026,0xce
  41c41b:	or     eax,DWORD PTR [edx+0x16]
  41c41e:	and    al,0xfc
	...
  41c434:	sub    eax,0x35440b4a
  41c439:	les    edx,FWORD PTR [esi]
  41c43b:	mov    edi,esp
  41c43d:	pop    esi
  41c43e:	out    0x80,al
  41c440:	rcr    DWORD PTR [edi+eiz*8-0x38a5d3fd],0x29
  41c448:	mov    ch,0x4
  41c44a:	adc    al,0xf8
  41c44c:	leave  
  41c44d:	jns    0x41c43e
  41c44f:	sub    eax,0x96f779c0
  41c454:	inc    esi
  41c455:	xchg   ebx,eax
  41c456:	xchg   BYTE PTR [ecx],dl
  41c458:	mov    ebp,0xa89bd2f7
  41c45d:	add    ebp,DWORD PTR [esp+eax*8-0x50]
  41c461:	or     al,0xd3
  41c463:	loope  0x41c3ff
  41c465:	add    esi,DWORD PTR [edx+0x19]
  41c468:	test   eax,0x8aeea2f8
  41c46d:	add    esp,esi
  41c46f:	dec    ebp
  41c470:	clc    
  41c471:	nop
  41c472:	fimul  WORD PTR [ebp-0x18]
  41c475:	lea    ebp,[eax]
  41c477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c478:	mov    ebp,0x6d032896
  41c47d:	adc    dh,dh
  41c47f:	das    
  41c480:	jmp    0x632c0478
  41c485:	add    esp,DWORD PTR [esi]
  41c487:	mov    esi,esi
  41c489:	stos   DWORD PTR es:[edi],eax
  41c48a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c48b:	inc    ebx
  41c48c:	in     eax,0x75
  41c48e:	out    0x96,eax
  41c490:	(bad)  
  41c491:	mov    ds:0x7d38af62,eax
  41c496:	fisttp WORD PTR [edx+0x0]
	...
  41c4ac:	cld    
  41c4ad:	pop    ecx
  41c4ae:	(bad)  
  41c4af:	adc    ch,al
  41c4b1:	add    al,BYTE PTR [eax]
  41c4b3:	jl     0x41c46f
  41c4b5:	add    al,0x73
  41c4b7:	loope  0x41c507
  41c4b9:	(bad)  
  41c4ba:	hlt    
  41c4bb:	out    0x2b,al
  41c4bd:	xadd   dh,ch
  41c4c0:	xor    eax,0xb6e91ed6
  41c4c5:	xchg   esp,eax
  41c4c6:	mov    dh,0x26
  41c4c8:	mov    al,0x94
  41c4ca:	mov    dh,0x36
  41c4cc:	mov    bh,0x42
  41c4ce:	loopne 0x41c4c1
  41c4d0:	mov    edi,0x36b10142
  41c4d5:	lds    edx,FWORD PTR [ebp+esi*1+0xd]
  41c4d9:	jmp    0x41c4b9
  41c4db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4dc:	sub    eax,DWORD PTR ds:0x950b7245
  41c4e2:	mov    dh,0x21
  41c4e4:	mov    eax,0xb739b694
  41c4e9:	inc    edx
  41c4ea:	fcomip st,st(1)
  41c4ec:	mov    edi,0x36a800d5
  41c4f1:	(bad)  
  41c4f2:	push   esp
  41c4f3:	std    
  41c4f4:	pop    edx
  41c4f5:	sbb    BYTE PTR [ebx-0x3b],cl
  41c4f8:	icebp  
  41c4f9:	push   edx
  41c4fa:	push   0xffffffe9
  41c4fc:	sub    edi,DWORD PTR [esi+0x1c]
  41c4ff:	ins    BYTE PTR es:[edi],dx
  41c500:	(bad)  
  41c501:	nop
  41c502:	std    
  41c503:	fdivr  QWORD PTR [esi+0x17]
  41c506:	leave  
  41c507:	mov    bh,0x23
  41c509:	jle    0x41c51b
  41c50b:	inc    esi
  41c50c:	lds    edx,FWORD PTR [ebx+0xb4fd]
	...
  41c522:	add    BYTE PTR [eax],al
  41c524:	mov    esi,0x4b3e6ef7
  41c529:	add    al,0x83
  41c52b:	sub    DWORD PTR [ebx-0x493790f2],esi
  41c531:	(bad)  
  41c532:	out    0x4a,eax
  41c534:	cmp    eax,DWORD PTR [edi*8+0x4539bbae]
  41c53b:	call   0x8efef3
  41c540:	push   ds
  41c541:	retf   
  41c542:	fisttp WORD PTR [eax]
  41c544:	daa    
  41c545:	retf   
  41c546:	(bad)  
  41c547:	test   DWORD PTR [ecx+ebx*8+0x36187450],0x1c1bfd82
  41c552:	or     esi,DWORD PTR [esi-0x49f47125]
  41c558:	ror    DWORD PTR [ebp-0x68eb1e43],cl
  41c55e:	enter  0x238b,0xf8
  41c562:	mov    ebp,0x85aeb480
  41c567:	inc    ebp
  41c568:	add    BYTE PTR [eax+0x7b98b10],ah
  41c56e:	mov    BYTE PTR [ecx-0x20],dl
  41c571:	push   ss
  41c572:	add    eax,0x851b8189
  41c577:	dec    ebp
  41c578:	enter  0x436,0x83
  41c57c:	mov    cl,0x1b
  41c57e:	add    BYTE PTR [edx+0x58f50da4],cl
  41c584:	fwait
  41c585:	or     eax,0x1b
	...
  41c59b:	add    BYTE PTR [ebp+ecx*4-0x753a0680],cl
  41c5a2:	test   BYTE PTR [edi-0x7fff7449],bh
  41c5a8:	adc    eax,0x22840bc6
  41c5ad:	pop    es
  41c5ae:	std    
  41c5af:	dec    DWORD PTR [eiz*1+0x68e00f57]
  41c5b6:	pop    ss
  41c5b7:	add    BYTE PTR [ebp+ecx*1-0xb],bl
  41c5bb:	pop    ebp
  41c5bc:	pop    ebx
  41c5bd:	and    DWORD PTR [ebx+ebx*1-0x67f72b4],0x8005917b
  41c5c8:	xchg   ebp,eax
  41c5c9:	lods   eax,DWORD PTR ds:[esi]
  41c5ca:	or     eax,DWORD PTR [ebp+0x47db5]
  41c5d0:	mov    ch,0xe1
  41c5d2:	dec    edx
  41c5d3:	dec    eax
  41c5d4:	mov    dh,0xf9
  41c5d6:	dec    edx
  41c5d7:	inc    eax
  41c5d8:	mov    cl,0xb7
  41c5da:	mov    eax,ds:0x85aeae08
  41c5df:	adc    al,0xac
  41c5e1:	outs   dx,DWORD PTR ds:[esi]
  41c5e2:	inc    ebp
  41c5e3:	hlt    
  41c5e4:	cmp    al,0x79
  41c5e6:	jge    0x41c5e8
  41c5e8:	mov    ch,0xf6
  41c5ea:	xlat   BYTE PTR ds:[ebx]
  41c5eb:	push   ebp
  41c5ec:	test   eax,0x73c5095a
  41c5f1:	sahf   
  41c5f2:	add    DWORD PTR [eax],eax
  41c5f4:	mov    ch,0xf6
  41c5f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5f7:	cs ds test eax,0x6def8908
  41c5fe:	sub    edx,DWORD PTR [eax]
	...
  41c614:	mov    ds,WORD PTR [ebx-0x79567670]
  41c61a:	mov    dl,BYTE PTR [edi*1+0x2e0c2b7e]
  41c621:	ss call 0x3db1136c
  41c627:	mov    bh,BYTE PTR [ecx+0x38f4467d]
  41c62d:	jmp    0x613:0xe6f83709
  41c634:	ss inc DWORD PTR ss:[esi-0x6977f908]
  41c63c:	and    esi,esi
  41c63e:	add    BYTE PTR [eax],al
  41c640:	cmp    ah,al
  41c642:	or     eax,0xfd2cbc37
  41c647:	jb     0x41c5f2
  41c649:	jge    0x41c5e2
  41c64b:	mov    DWORD PTR [edx-0x4a6b7c81],edi
  41c651:	test   BYTE PTR [eax],0x89
  41c654:	repnz out 0xc1,al
  41c657:	loopne 0x41c610
  41c659:	(bad)  
  41c65a:	mov    bh,0x94
  41c65c:	rcl    BYTE PTR [ebx+0xb10d1e],0xfc
  41c663:	inc    edi
  41c664:	mov    ds:0x7888e74f,eax
  41c669:	fwait
  41c66a:	jb     0x41c680
  41c66c:	mov    ebp,0x2df3a416
  41c671:	dec    edx
  41c672:	(bad)  
  41c673:	jg     0x41c666
  41c675:	xchg   edx,eax
  41c676:	pusha  
  41c677:	add    BYTE PTR ds:[eax],al
	...
  41c68a:	add    BYTE PTR [eax],al
  41c68c:	lods   eax,DWORD PTR ds:[esi]
  41c68d:	imul   BYTE PTR [ebp-0x66]
  41c690:	or     BYTE PTR [eax],al
  41c692:	jb     0x41c6dd
  41c694:	test   eax,0x2c39160f
  41c699:	push   edx
  41c69a:	mov    edi,0xf6a77e7d
  41c69f:	xchg   DWORD PTR [ebx+0x3],ebx
  41c6a2:	mov    esi,0xb7629c93
  41c6a7:	add    esi,DWORD PTR [ecx]
  41c6a9:	push   0xffffffab
  41c6ab:	xchg   ebx,eax
  41c6ac:	ror    BYTE PTR [esi],1
  41c6ae:	fbld   TBYTE PTR [esp+ebp*4]
  41c6b1:	iret   
  41c6b2:	imul   esp,DWORD PTR [ebx+eax*8+0x3506a70b],0xf67d36c0
  41c6bd:	scas   eax,DWORD PTR es:[edi]
  41c6be:	test   BYTE PTR [eax+0x3e7a4dc],0x2c
  41c6c5:	push   ebp
  41c6c6:	retf   
  41c6c7:	inc    ebx
  41c6c8:	add    eax,0x692e76a
  41c6cd:	pushf  
  41c6ce:	je     0x41c70b
  41c6d0:	mov    ah,0x60
  41c6d2:	mov    ch,0x92
  41c6d4:	push   es
  41c6d5:	mov    al,ds:0x8578bf62
  41c6da:	fist   DWORD PTR [edx-0x64b0781a]
  41c6e0:	data16 (bad) 
  41c6e2:	cmp    eax,0x8f7589
  41c6e7:	ins    BYTE PTR es:[edi],dx
  41c6e8:	ds popf 
  41c6ea:	add    cl,ch
  41c6ec:	adc    DWORD PTR [edx+0x20],0xf6
	...
  41c703:	add    BYTE PTR ds:0xb6e91a16,bh
  41c709:	or     BYTE PTR [ebx-0x3],bh
  41c70c:	sbb    DWORD PTR [edx+0x10b6e913],esi
  41c712:	jle    0x41c6d9
  41c714:	mov    dh,0x83
  41c716:	pop    es
  41c717:	ret    0x67e4
  41c71a:	or     eax,0x97706d
  41c71f:	jmp    0xeb5a1a50
  41c724:	mov    ds:0xa12f8969,al
  41c729:	mov    eax,0xb8c45dd7
  41c72e:	pop    esi
  41c72f:	cmp    eax,0xe12913b6
  41c734:	mov    dh,0x8f
  41c736:	mov    DWORD PTR [edi],esp
  41c738:	rcl    DWORD PTR [ecx],1
  41c73a:	sar    BYTE PTR ds:0xded7b7d1,0x3c
  41c741:	pushf  
  41c742:	sbb    cl,ch
  41c744:	mov    dh,0x69
  41c746:	add    BYTE PTR [eax],bh
  41c748:	mov    DWORD PTR [edx],ecx
  41c74a:	push   esi
  41c74b:	cmc    
  41c74c:	cmp    edx,eax
  41c74e:	out    0xca,eax
  41c750:	sar    ah,1
  41c752:	cld    
  41c753:	ins    BYTE PTR es:[edi],dx
  41c754:	jbe    0x41c6e2
  41c756:	test   bh,ah
  41c758:	mov    ?,esi
  41c75a:	cld    
  41c75b:	adc    BYTE PTR [ebp-0x4432b9f9],0xc7
  41c762:	cmp    BYTE PTR [eax-0x49],al
  41c765:	adc    ebp,esi
  41c767:	test   BYTE PTR [eax],0x0
	...
  41c77a:	add    BYTE PTR [eax],al
  41c77c:	mov    dh,0x8f
  41c77e:	mov    DWORD PTR [edx],esp
  41c780:	pop    ebx
  41c781:	(bad)  
  41c782:	mov    eax,edi
  41c784:	and    BYTE PTR [esp+ebp*1+0x0],0x63
  41c789:	pop    es
  41c78a:	call   0x7fd413a6
  41c78f:	clc    
  41c790:	dec    ebp
  41c791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c792:	or     al,0x8a
  41c794:	sbb    eax,0x61463a93
  41c799:	xchg   ecx,eax
  41c79a:	adc    edi,0x4700924b
  41c7a0:	mov    ch,0x80
  41c7a2:	icebp  
  41c7a3:	inc    ebx
  41c7a5:	int    0x5a
  41c7a7:	push   0x868731c7
  41c7ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7ad:	xchg   edx,eax
  41c7ae:	add    BYTE PTR [eax],al
  41c7b0:	cmovs  ebp,DWORD PTR [eax+0x3b]
  41c7b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7b5:	sbb    eax,0xfb7189e2
  41c7ba:	out    0xe3,eax
  41c7bc:	jmp    0x8756:0x58021855
  41c7c3:	dec    esi
  41c7c4:	mov    al,0xcc
  41c7c6:	aad    0x73
  41c7c8:	mov    ah,0x7c
  41c7ca:	inc    esi
  41c7cb:	sbb    BYTE PTR [ecx-0x2d],bl
  41c7ce:	jae    0x41c7df
  41c7d0:	jbe    0x41c765
  41c7d2:	push   eax
  41c7d3:	lea    ebp,[edx+0x24c387ff]
  41c7d9:	xlat   BYTE PTR ds:[ebx]
  41c7da:	jmp    DWORD PTR gs:[ebx]
  41c7dd:	sbb    al,0x85
  41c7df:	mov    eax,DWORD PTR [eax]
	...
  41c7f1:	add    BYTE PTR [eax],al
  41c7f3:	add    BYTE PTR [edx-0x7837d801],cl
  41c7f9:	sub    cl,BYTE PTR [ebx]
  41c7fb:	xchg   DWORD PTR [esi],esp
  41c7fd:	idiv   esp
  41c7ff:	jmp    DWORD PTR [esi]
  41c801:	sti    
  41c802:	ss dec esi
  41c804:	jo     0x41c796
  41c806:	cmp    DWORD PTR [edi+0x6b],0x14830091
  41c80d:	xchg   ecx,eax
  41c80e:	je     0x41c7b3
  41c810:	push   es
  41c811:	push   ebx
  41c812:	std    
  41c813:	jmp    0xe6f5:0x7e837bb5
  41c81a:	fwait
  41c81b:	xchg   edx,eax
  41c81c:	ss aad 0x40
  41c81f:	add    BYTE PTR [edx-0x4aeada8d],dh
  41c825:	out    0x83,al
  41c827:	jle    0x41c80e
  41c829:	out    0x15,al
  41c82b:	pop    edi
  41c82c:	ds inc ebp
  41c82e:	sbb    eax,0x82235c39
  41c833:	mov    ebx,esi
  41c835:	inc    BYTE PTR [ebp-0x34125640]
  41c83b:	(bad)  
  41c83c:	mov    edx,0xb5153969
  41c841:	out    0x1a,al
  41c843:	add    BYTE PTR [ebp+0x3e1c3a73],al
  41c849:	stos   BYTE PTR es:[edi],al
  41c84a:	pushf  
  41c84b:	aad    0x9d
  41c84d:	cmc    
  41c84e:	pop    DWORD PTR [ebx+0x3484edf5]
  41c854:	mov    ds:0xe900e6,al
	...
  41c869:	add    BYTE PTR [eax],al
  41c86b:	add    BYTE PTR [ecx+esi*2+0x3e9e1c47],bl
  41c872:	int3   
  41c873:	(bad)  
  41c874:	mov    dl,0x75
  41c876:	out    0x14,al
  41c878:	mov    ch,0xe6
  41c87a:	jp     0x41c885
  41c87c:	(bad)  
  41c87d:	pushf  
  41c87e:	loopne 0x41c88c
  41c880:	xor    BYTE PTR [ecx+0x69c2fff7],dl
  41c886:	mov    edi,edi
  41c888:	inc    esi
  41c889:	bnd jp 0x41c8cd
  41c88c:	mov    ah,0xe0
  41c88e:	inc    esi
  41c88f:	sub    edi,DWORD PTR [edx-0x4aeb0595]
  41c895:	out    0x7b,al
  41c897:	inc    esi
  41c898:	or     edx,edx
  41c89a:	inc    esi
  41c89b:	sbb    al,0x9c
  41c89d:	inc    ecx
  41c89e:	nop
  41c89f:	std    
  41c8a0:	mov    cl,BYTE PTR [edi-0x72eecdde]
  41c8a6:	imul   edx,DWORD PTR [esi-0x6518705d],0x904dfcca
  41c8b0:	cmp    al,0x4d
  41c8b2:	ror    esp,cl
  41c8b4:	mov    ecx,DWORD PTR [ebx+eiz*2+0x35fc5801]
  41c8bb:	jl     0x41c8b8
  41c8bd:	xchg   edi,eax
  41c8be:	fs ret 
  41c8c0:	shl    DWORD PTR [edx-0x613b551e],0x91
  41c8c7:	add    esp,ebp
  41c8c9:	or     bh,BYTE PTR [ebp-0x12fc211]
  41c8cf:	sbb    al,BYTE PTR [eax]
	...
  41c8e1:	add    BYTE PTR [eax],al
  41c8e3:	add    BYTE PTR [ebp-0xa79fa04],bl
  41c8e9:	or     esp,0xa4085ad4
  41c8ef:	(bad)  
  41c8f0:	cmp    ecx,DWORD PTR ds:0x8fb5034b
  41c8f6:	sar    BYTE PTR [edi],1
  41c8f8:	mov    ds:0x737ae78f,eax
  41c8fd:	fwait
  41c8fe:	add    bh,BYTE PTR [esp+ebp*4+0x3fa755d6]
  41c905:	mov    BYTE PTR [ecx],al
  41c907:	ds xchg ecx,eax
  41c909:	add    bh,0x83
  41c90c:	fisttp QWORD PTR [ebp+0x503cfc3b]
  41c912:	call   0x1cec39e0
  41c917:	mov    bl,0x2c
  41c919:	push   ebp
  41c91a:	or     ebx,ebx
  41c91c:	jo     0x41c8b9
  41c91e:	shr    BYTE PTR [ebx+0x567fc926],cl
  41c924:	stos   DWORD PTR es:[edi],eax
  41c925:	sti    
  41c926:	test   ebx,ecx
  41c928:	add    BYTE PTR [eax-0xc],ch
  41c92b:	pop    es
  41c92c:	in     al,0xc8
  41c92e:	inc    DWORD PTR [ecx-0xea1477b]
  41c934:	mov    ds:0x33aa8b91,eax
  41c939:	adc    eax,DWORD PTR [esi-0x1f]
  41c93c:	jnp    0x41c983
  41c93e:	inc    ecx
  41c93f:	push   esi
  41c940:	out    dx,al
  41c941:	dec    ecx
  41c942:	xor    al,0xde
  41c944:	add    BYTE PTR [eax+ecx*1+0x28],cl
	...
  41c95b:	add    BYTE PTR [eax-0x6c],al
  41c95e:	or     DWORD PTR [eax-0x50],0xa4c55eb8
  41c965:	cdq    
  41c966:	mov    DWORD PTR [edi-0x623ff146],esp
  41c96c:	inc    edi
  41c96d:	mov    eax,0x89a0f15b
  41c972:	xor    DWORD PTR [ebx],edi
  41c974:	ja     0x41c988
  41c976:	push   esi
  41c977:	lods   eax,DWORD PTR ds:[esi]
  41c978:	call   eax
  41c97a:	or     al,0x76
  41c97c:	xchg   BYTE PTR [edi+0x3b07e900],cl
  41c982:	jmp    0x186dd60
  41c987:	(bad)  
  41c989:	ret    
  41c98a:	or     eax,0xbf8dba9f
  41c98f:	shl    DWORD PTR [edx+0x6ce8e010],1
  41c995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c996:	inc    ebp
  41c997:	imul   edi,DWORD PTR [edi+ecx*4],0xe107f073
  41c99e:	cmp    BYTE PTR [eax-0x3d3de125],ch
  41c9a4:	mov    ebx,0xf1f2d2c0
  41c9a9:	mov    WORD PTR [ebx-0x7d32c055],ss
  41c9af:	test   eax,0x9ae00ebb
  41c9b4:	inc    ebx
  41c9b5:	cld    
  41c9b6:	out    0x24,al
  41c9b8:	cmp    bh,ah
  41c9ba:	cld    
  41c9bb:	add    BYTE PTR [edi],ah
  41c9bd:	push   ebp
  41c9be:	sbb    BYTE PTR [ebx+0x0],cl
	...
  41c9d4:	retf   0x81af
  41c9d7:	rcl    BYTE PTR [eax-0x7026c81b],0xca
  41c9de:	data16 add BYTE PTR [edi+ecx*1],bh
  41c9e2:	push   esi
  41c9e3:	sbb    al,0x7
  41c9e5:	into   
  41c9e6:	out    0x8e,eax
  41c9e8:	or     DWORD PTR [ecx],0xfffffffb
  41c9eb:	test   DWORD PTR [ecx+edi*8+0x9fb2281],ebx
  41c9f2:	sti    
  41c9f3:	jmp    0x41c9a6
  41c9f5:	jbe    0x41ca3d
  41c9f7:	sbb    al,0xb7
  41c9f9:	cmp    esi,DWORD PTR [edi]
  41c9fb:	fld    DWORD PTR [ebx]
  41c9fd:	jmp    0x752c:0xbc560b86
  41ca04:	inc    ecx
  41ca05:	or     eax,0x121b01f8
  41ca0a:	add    edi,edi
  41ca0c:	mov    ebx,0xd438a09
  41ca11:	enter  0x2d42,0xb
  41ca15:	adc    dh,bh
  41ca17:	dec    BYTE PTR [ebx]
  41ca19:	or     al,0x87
  41ca1b:	ret    
  41ca1c:	pop    edi
  41ca1d:	lds    eax,FWORD PTR [edx+0x6c]
  41ca20:	or     edx,DWORD PTR [eax]
  41ca22:	(bad)  
  41ca24:	fisttp DWORD PTR [ebx]
  41ca26:	xchg   DWORD PTR [esi-0x78],eax
  41ca29:	adc    al,al
  41ca2b:	(bad)  
  41ca2d:	daa    
  41ca2e:	(bad)  
  41ca2f:	(bad)  
  41ca30:	sti    
  41ca31:	(bad)  
  41ca32:	pop    ecx
  41ca33:	or     bl,cl
  41ca35:	adc    edx,edi
  41ca37:	inc    BYTE PTR [eax]
	...
  41ca49:	add    BYTE PTR [eax],al
  41ca4b:	add    BYTE PTR [ebx],cl
  41ca4d:	or     al,0x2f
  41ca4f:	leave  
  41ca50:	popf   
  41ca51:	jbe    0x41caa1
  41ca53:	pop    esp
  41ca54:	xlat   BYTE PTR ds:[ebx]
  41ca55:	int3   
  41ca56:	or     cl,BYTE PTR [esi-0x4f6f7]
  41ca5c:	mov    ch,0x8c
  41ca5e:	cwde   
  41ca5f:	pop    eax
  41ca60:	pushf  
  41ca61:	xor    cl,BYTE PTR [esi+0x2acea2fd]
  41ca67:	ins    BYTE PTR es:[edi],dx
  41ca68:	es sbb bl,bh
  41ca6b:	mov    ch,0xb6
  41ca6d:	ins    DWORD PTR es:[edi],dx
  41ca6e:	ds xor al,0xf6
  41ca71:	or     BYTE PTR [eax],0x8
  41ca74:	mov    ecx,0x7afea55f
  41ca79:	pop    edx
  41ca7a:	(bad)  
  41ca7b:	pop    ebp
  41ca7c:	loope  0x41ca53
  41ca7e:	dec    esp
  41ca7f:	or     eax,0x4e77e623
  41ca84:	test   eax,0xad049325
  41ca89:	repnz sti 
  41ca8b:	sub    DWORD PTR [edi],0xffffffc1
  41ca8e:	mov    edi,ebp
  41ca90:	pop    esp
  41ca91:	jb     0x41ca20
  41ca93:	std    
  41ca94:	inc    edx
  41ca95:	out    dx,al
  41ca96:	sub    ch,BYTE PTR [esi+eax*8+0x47]
  41ca9a:	sti    
  41ca9b:	mov    ch,0xb6
  41ca9d:	ins    DWORD PTR es:[edi],dx
  41ca9e:	ds xor al,0x76
  41caa1:	mov    al,ds:0x9fb40808
  41caa6:	push   ebp
  41caa7:	(bad)  
  41caa8:	sbb    bh,dl
  41caaa:	(bad)  
  41caab:	pop    ebp
  41caac:	mov    eax,ds:0xd7d75
	...
  41cac1:	add    BYTE PTR [eax],al
  41cac3:	add    BYTE PTR [ebx-0x1a],al
  41cac6:	ja     0x41cb16
  41cac8:	leave  
  41cac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caca:	xchg   esi,eax
  41cacb:	add    al,0xad
  41cacd:	out    0x97,eax
  41cacf:	into   
  41cad0:	scas   al,BYTE PTR es:[edi]
  41cad1:	shl    BYTE PTR [eax],0xd
  41cad4:	ss popa 
  41cad6:	mov    edi,ebp
  41cad8:	loop   0x41cadb
  41cada:	push   ebx
  41cadb:	add    DWORD PTR [esi],ebp
  41cadd:	test   eax,0xeacb40d8
  41cae2:	clc    
  41cae3:	paddusb mm5,QWORD PTR [ebx+ecx*4-0x3]
  41cae8:	ret    0xe28f
  41caeb:	sub    eax,0x2e6a8849
  41caf0:	mov    al,0xf8
  41caf2:	xchg   ebp,eax
  41caf3:	cld    
  41caf4:	pusha  
  41caf5:	mov    WORD PTR [edx+0x3d],fs
  41caf8:	jmp    0xad494849
  41cafd:	lahf   
  41cafe:	xchg   edx,eax
  41caff:	ins    BYTE PTR es:[edi],dx
  41cb00:	cmp    al,0x49
  41cb02:	add    ecx,ecx
  41cb04:	arpl   WORD PTR [eax-0x77fb996],cx
  41cb0a:	gs cld 
  41cb0c:	inc    eax
  41cb0d:	mov    WORD PTR [edx-0x197a9280],gs
  41cb13:	xchg   edx,eax
  41cb15:	cli    
  41cb16:	dec    ebp
  41cb17:	mov    WORD PTR [eax+0x588e0811],?
  41cb1d:	clc    
  41cb1e:	imul   ecx,DWORD PTR [ebx-0x7ef67e3f],0xdeb38a4d
	...
  41cb3c:	jg     0x41cb50
  41cb3e:	out    0x3,eax
  41cb40:	mov    ch,0x83
  41cb42:	cmc    
  41cb43:	into   
  41cb44:	fldcw  WORD PTR [edi+0x11b803e7]
  41cb4a:	in     al,0x8d
  41cb4c:	and    al,bh
  41cb4e:	ret    
  41cb4f:	fidivr DWORD PTR [edx+0x39fce78f]
  41cb55:	cmc    
  41cb56:	repz mov ecx,DWORD PTR [eax]
  41cb59:	mov    esp,0x6f78ca27
  41cb5e:	test   BYTE PTR [eax-0x742205f6],0xda
  41cb65:	fcmovbe st,st(2)
  41cb67:	mov    ebp,eax
  41cb69:	mov    bl,0xb0
  41cb6b:	sti    
  41cb6c:	xor    eax,0xd88bc2e3
  41cb71:	push   cs
  41cb72:	add    bh,dh
  41cb74:	rcl    DWORD PTR [edx],0x0
  41cb77:	mov    ds:0x2afcfa3d,al
  41cb7c:	and    ah,cl
  41cb7e:	sti    
  41cb7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb80:	cs mov dh,0x5e
  41cb83:	or     eax,0x97d910ae
  41cb88:	ds cmc 
  41cb8a:	or     al,0x57
  41cb8c:	mov    edx,0xb6e10e3e
  41cb91:	pop    DWORD PTR [ecx-0x3e]
  41cb94:	jns    0x41cc13
  41cb96:	sub    esp,esi
  41cb98:	or     bh,BYTE PTR ds:0x112e6efb
  41cb9e:	clc    
  41cb9f:	lock add BYTE PTR [eax],al
	...
  41cbb2:	add    BYTE PTR [eax],al
  41cbb4:	jg     0x41cbc9
  41cbb6:	scas   al,BYTE PTR es:[edi]
  41cbb7:	pop    esp
  41cbb8:	ds cmc 
  41cbba:	adc    BYTE PTR [ecx+0x51],0x84
  41cbbe:	test   BYTE PTR [esp+ebp*1-0x2efb030b],al
  41cbc5:	pop    DWORD PTR [eax]
  41cbc7:	jmp    0x34dbdf1b
  41cbcc:	ds cmc 
  41cbce:	cmp    ch,BYTE PTR [ecx+0x47]
  41cbd1:	idiv   esp
  41cbd3:	adc    BYTE PTR [ecx],ah
  41cbd5:	idiv   ah
  41cbd7:	push   ds
  41cbd8:	cld    
  41cbd9:	neg    BYTE PTR [ecx+ebp*8]
  41cbdc:	mov    dh,0x84
  41cbde:	adc    BYTE PTR [esi-0x3b030ac6],0x18
  41cbe5:	xchg   edi,eax
  41cbe6:	add    cl,ch
  41cbe8:	prefetch BYTE PTR [edx-0xc]
  41cbec:	aas    
  41cbed:	cmc    
  41cbee:	cmp    bh,BYTE PTR [esi-0x90308ea]
  41cbf4:	jp     0x41cc5a
  41cbf6:	sti    
  41cbf7:	fidivr WORD PTR [edi]
  41cbf9:	mov    ebx,0x8fb1095d
  41cbfe:	or     eax,0xfcfac265
  41cc03:	add    bl,dh
  41cc05:	(bad)  
  41cc06:	cld    
  41cc07:	das    
  41cc08:	fcom   QWORD PTR [edx+0xa02bae5]
  41cc0e:	sti    
  41cc0f:	cmp    esi,DWORD PTR [edx-0x517cf469]
  41cc15:	or     ebx,edi
  41cc17:	inc    DWORD PTR [eax]
	...
  41cc29:	add    BYTE PTR [eax],al
  41cc2b:	add    BYTE PTR [ebx-0x6d4700a0],ah
  41cc31:	jmp    0x77bd:0xc6cffffc
  41cc38:	cmp    ecx,0xa103080
  41cc3e:	sti    
  41cc3f:	add    DWORD PTR [esp+esi*8],0xb
  41cc43:	test   BYTE PTR [ebx+0xe],bh
  41cc46:	sti    
  41cc47:	dec    DWORD PTR [edi]
  41cc49:	or     esp,DWORD PTR [eax]
  41cc4b:	psubusb mm5,mm0
  41cc4e:	clc    
  41cc4f:	inc    DWORD PTR [ebx]
  41cc51:	enter  0x9c,0x4c
  41cc55:	xchg   edx,eax
  41cc56:	or     eax,DWORD PTR [edi+edi*2+0x51fffb0e]
  41cc5d:	adc    dl,BYTE PTR [esi]
  41cc5f:	add    BYTE PTR [ebx+edx*1+0x4c],bl
  41cc63:	std    
  41cc64:	xchg   ebx,eax
  41cc65:	or     DWORD PTR [ecx],edi
  41cc67:	add    BYTE PTR [edx+edx*4+0x0],ch
  41cc6b:	setle  dh
  41cc6e:	stc    
  41cc6f:	inc    ebx
  41cc71:	mov    DWORD PTR [esi],0xb920c20
  41cc77:	xchg   BYTE PTR [edi],bl
  41cc79:	add    al,0xfb
  41cc7b:	call   DWORD PTR [ecx-0x27]
  41cc7e:	sbb    al,0x0
  41cc80:	sbb    al,0xf9
  41cc82:	sub    al,0x7
  41cc85:	or     bl,bh
  41cc87:	cmp    eax,0xfffceb73
  41cc8c:	jecxz  0x41cd03
  41cc8e:	fsincos 
	...
  41cca4:	mov    ch,0xdd
  41cca6:	xchg   BYTE PTR [ebx],bh
  41cca8:	mov    ch,0x98
  41ccaa:	add    al,0x0
  41ccac:	int3   
  41ccad:	aad    0x85
  41ccaf:	std    
  41ccb0:	rcl    BYTE PTR [eax+0x69ba6c2a],cl
  41ccb6:	cdq    
  41ccb7:	sti    
  41ccb8:	ret    0xf724
  41ccbb:	mov    ch,0xb6
  41ccbd:	test   eax,0xe5bff883
  41ccc2:	cmp    BYTE PTR [ebx-0x7e78e152],0x9d
  41ccc9:	aam    0xf7
  41cccb:	test   DWORD PTR [edi+0xb],esi
  41ccce:	xchg   ebp,edi
  41ccd0:	shr    BYTE PTR [ebx+0x4],1
  41ccd3:	add    BYTE PTR [ebp-0x7e4a8313],dh
  41ccd9:	xchg   WORD PTR [ebx],di
  41ccdc:	rol    BYTE PTR [esi+0x6cc20004],cl
  41cce2:	push   0xfffffff9
  41cce4:	push   0x5e
  41cce6:	lds    esp,FWORD PTR [esi]
  41cce8:	xchg   ebp,eax
  41cce9:	out    0x0,al
  41cceb:	or     eax,0xfd880833
  41ccf0:	push   edx
  41ccf1:	pusha  
  41ccf2:	jp     0x41cced
  41ccf4:	dec    edx
  41ccf5:	mov    esi,0xd5d15dcb
  41ccfa:	and    DWORD PTR [eax+edi*1+0x6b0d87ae],0xffffffea
  41cd02:	inc    ebx
  41cd03:	sub    DWORD PTR ds:0x81f7f1,0x0
	...
  41cd19:	add    BYTE PTR [eax],al
  41cd1b:	add    BYTE PTR [ebx],bh
  41cd1d:	add    DWORD PTR [edi-0xa70c903],0xc
  41cd24:	cmp    eax,DWORD PTR [esi]
  41cd26:	mov    ebp,?
  41cd28:	or     bh,BYTE PTR [esi+edi*2]
  41cd2b:	add    BYTE PTR [ebp-0x6e7c081a],dh
  41cd31:	(bad)  
  41cd32:	loop   0x41ccbc
  41cd34:	lock mov dl,0x6
  41cd37:	in     al,0xea
  41cd39:	hlt    
  41cd3a:	in     eax,0x81
  41cd3c:	pop    eax
  41cd3d:	repz int 0x88
  41cd40:	sahf   
  41cd41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd42:	pop    es
  41cd43:	add    al,0xb5
  41cd45:	test   BYTE PTR [esi+0x27],ah
  41cd48:	leave  
  41cd49:	hlt    
  41cd4a:	mov    ch,0x9a
  41cd4c:	jp     0x41cd46
  41cd4e:	lods   eax,DWORD PTR ds:[esi]
  41cd4f:	mov    BYTE PTR [eax-0x3ffcd1c3],ch
  41cd55:	cmp    eax,0xef6a062e
  41cd5a:	fdivp  st(4),st
  41cd5c:	arpl   WORD PTR [eax-0x6f8f7b59],dx
  41cd62:	jo     0x41cda2
  41cd64:	test   DWORD PTR [eax-0x5ef00bdc],edi
  41cd6a:	bound  edi,QWORD PTR [ecx]
  41cd6c:	mov    cl,0x2
  41cd6e:	jecxz  0x41ccf2
  41cd70:	sub    al,0x87
  41cd72:	ins    BYTE PTR es:[edi],dx
  41cd73:	mov    edx,0x33728ced
  41cd78:	mov    cl,0xa8
  41cd7a:	cmp    BYTE PTR [esi+ebp*4+0xca39c0],bl
	...
  41cd95:	dec    eax
  41cd96:	mov    esp,0xcb5d3c01
  41cd9b:	fsub   QWORD PTR [ebp+0x51]
  41cd9e:	popa   
  41cd9f:	add    BYTE PTR [edx],bh
  41cda1:	pop    edx
  41cda2:	xor    eax,edi
  41cda4:	lock test BYTE PTR [ecx-0x53],ch
  41cda8:	mov    ch,0x8f
  41cdaa:	out    0xc7,eax
  41cdac:	jge    0x41ce2b
  41cdae:	stos   DWORD PTR es:[edi],eax
  41cdaf:	(bad)  
  41cdb0:	outs   dx,DWORD PTR ds:[esi]
  41cdb1:	test   BYTE PTR [esi-0x47],ah
  41cdb4:	mov    ch,0x8f
  41cdb6:	out    0xf8,eax
  41cdb8:	dec    eax
  41cdb9:	pop    esp
  41cdba:	jecxz  0x41cd90
  41cdbc:	repz mov dl,0x0
  41cdbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdc0:	std    
  41cdc1:	cmp    DWORD PTR [ebp-0x15],eax
  41cdc4:	std    
  41cdc5:	pop    ds
  41cdc6:	mov    edi,0xce3ac70
  41cdcb:	xchg   edi,eax
  41cdcc:	mov    ds:0xe1c8bff4,al
  41cdd1:	xchg   al,cl
  41cdd3:	fisubr WORD PTR [eax+0x4a]
  41cdd6:	add    DWORD PTR [eax-0x54f678e7],ebp
  41cddc:	dec    eax
  41cddd:	dec    eax
  41cdde:	cld    
  41cddf:	pusha  
  41cde0:	je     0x41cdd9
  41cde2:	jb     0x41cdc5
  41cde4:	outs   dx,BYTE PTR ds:[esi]
  41cde5:	repnz cld 
  41cde7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cde8:	mov    edx,0x2ea1430a
  41cded:	pop    edi
  41cdee:	hlt    
  41cdef:	push   0x62
  41cdf1:	(bad)
  41cdf5:	cmp    eax,0x74c0
	...
  41ce0a:	add    BYTE PTR [eax],al
  41ce0c:	shl    DWORD PTR ds:0xab08881,1
  41ce12:	dec    ebx
  41ce13:	test   DWORD PTR [edx-0x30cc77cb],ecx
  41ce19:	dec    edi
  41ce1a:	add    dh,dh
  41ce1c:	clc    
  41ce1d:	cmpps  xmm0,xmm3,0xf6
  41ce21:	pop    DWORD PTR [ebp+0x60]
  41ce24:	pushf  
  41ce25:	xrelease xchg BYTE PTR [esi+ebp*1+0x4ebcc00f],ah
  41ce2d:	cmp    edi,ebp
  41ce2f:	xor    dh,BYTE PTR ds:[ebp-0x79]
  41ce33:	lods   al,BYTE PTR ds:[esi]
  41ce34:	cs psrld mm3,mm6
  41ce38:	mov    edx,0x3a26f0aa
  41ce3d:	rcl    edx,0xab
  41ce40:	test   eax,0x5cd2145e
  41ce45:	je     0x41ce75
  41ce47:	push   cs
  41ce48:	les    edx,FWORD PTR [edi+0x3310089]
  41ce4e:	sti    
  41ce4f:	jne    0x41ce5d
  41ce51:	jbe    0x41ce19
  41ce53:	mov    edx,edi
  41ce55:	adc    ebp,DWORD PTR [edx-0x11]
  41ce58:	or     ecx,DWORD PTR [edx]
  41ce5a:	add    eax,0x157172eb
  41ce60:	fmul   QWORD PTR [esi+0xa005cff]
  41ce66:	inc    ecx
  41ce67:	adc    al,0x57
  41ce69:	dec    edi
  41ce6a:	adc    al,0x3b
  41ce6c:	mov    eax,ds:0xd87e07
	...
  41ce81:	add    BYTE PTR [eax],al
  41ce83:	add    BYTE PTR [edi-0x49],al
  41ce86:	cld    
  41ce87:	mov    edx,DWORD PTR [ecx-0x2437c8fd]
  41ce8d:	jb     0x41ce74
  41ce8f:	out    dx,eax
  41ce90:	pop    ebx
  41ce91:	or     DWORD PTR [edi+0x7d],edi
  41ce94:	cmp    BYTE PTR [esi-0x1cf67bf5],cl
  41ce9a:	cld    
  41ce9b:	call   DWORD PTR [edi]
  41ce9d:	push   eax
  41ce9e:	cld    
  41ce9f:	mov    ecx,esp
  41cea1:	inc    DWORD PTR [edi-0x7ab18fbb]
  41cea7:	inc    ebp
  41cea8:	jo     0x41ce68
  41ceaa:	in     eax,0x86
  41ceac:	pusha  
  41cead:	mov    es,WORD PTR [eax]
  41ceaf:	call   DWORD PTR [ecx+0x5587e6]
  41ceb5:	or     dh,BYTE PTR [ecx-0x10]
  41ceb8:	xlat   BYTE PTR ds:[ebx]
  41ceb9:	xor    al,0x87
  41cebb:	retf   
  41cebc:	hlt    
  41cebd:	loope  0x41ceaa
  41cebf:	(bad)  
  41cec0:	sti    
  41cec1:	xadd   BYTE PTR [edi],cl
  41cec4:	shl    al,1
  41cec6:	adc    DWORD PTR [eax],eax
  41cec8:	dec    esp
  41cec9:	lea    ebx,[ecx-0xc]
  41cecc:	cmc    
  41cecd:	pop    eax
  41cece:	jmp    0x41cecf
  41ced0:	(bad)  [edi+0x43]
  41ced3:	add    DWORD PTR [edi-0x4a76e2cf],ebx
  41ced9:	and    ecx,DWORD PTR [ebp+0x3ac4b28a]
  41cedf:	jb     0x41ce81
  41cee1:	int3   
  41cee2:	cmp    DWORD PTR [esi-0x38],esi
  41cee5:	xor    al,0x38
  41cee7:	jne    0x41cee9
	...
  41cef9:	add    BYTE PTR [eax],al
  41cefb:	add    BYTE PTR [eax-0x4eaab517],bl
  41cf01:	xor    eax,0xf9803cbc
  41cf06:	dec    edx
  41cf07:	inc    ebp
  41cf08:	mov    bh,0xe1
  41cf0a:	ins    BYTE PTR es:[edi],dx
  41cf0b:	mov    edi,0xd98ab2c
  41cf10:	and    edx,DWORD PTR [ecx-0x2b40ff]
  41cf16:	test   edi,0x13b7aba
  41cf1c:	hlt    
  41cf1d:	(bad)  
  41cf1e:	sti    
  41cf1f:	or     bh,dh
  41cf21:	outs   dx,BYTE PTR ds:[esi]
  41cf22:	xor    eax,0x8ca43cfc
  41cf27:	jae    0x41cee6
  41cf29:	outs   dx,BYTE PTR ds:[esi]
  41cf2a:	cmp    ebp,0xffffffa2
  41cf2d:	call   0x3bb:0x669d4379
  41cf34:	sahf   
  41cf35:	xor    dh,ah
  41cf37:	mov    ch,0x75
  41cf39:	fs cmp al,0xba
  41cf3c:	or     BYTE PTR ss:[ecx],al
  41cf3f:	xchg   eax,ebp
  41cf41:	jb     0x41cf36
  41cf43:	mov    ebp,0x402a2d3d
  41cf48:	mov    ch,0xe1
  41cf4a:	inc    edx
  41cf4b:	xor    BYTE PTR [edi+0x3d],0x41
  41cf4f:	add    dl,dh
  41cf51:	outs   dx,DWORD PTR ds:[esi]
  41cf52:	xor    eax,0x89243cfc
  41cf57:	xor    DWORD PTR [ebp+0x3c],0xffffffef
  41cf5b:	mov    bh,0x42
  41cf5d:	mov    edx,0x7d83
	...
  41cf72:	add    BYTE PTR [eax],al
  41cf74:	dec    esi
  41cf75:	out    dx,eax
  41cf76:	iret   
  41cf77:	(bad)  
  41cf78:	je     0x41cf09
  41cf7a:	jb     0x41cf3f
  41cf7c:	xor    al,BYTE PTR [ebx+0x1b]
  41cf7f:	jnp    0x41cff7
  41cf81:	neg    ecx
  41cf83:	mov    cl,0x77
  41cf85:	push   es
  41cf86:	mov    ah,0xef
  41cf88:	int    0xc5
  41cf8a:	or     ch,0xcd
  41cf8d:	push   ecx
  41cf8e:	mov    esi,esp
  41cf90:	xor    eax,0xf884f205
  41cf95:	xor    BYTE PTR ds:0x19c83c01,0xb2
  41cf9c:	xor    al,0xef
  41cf9e:	in     eax,0x41
  41cfa0:	add    al,0xee
  41cfa2:	popa   
  41cfa3:	ss loope 0x41cf74
  41cfa6:	mov    esi,0xef8c3f00
  41cfab:	inc    eax
  41cfac:	xor    eax,esp
  41cfae:	in     eax,dx
  41cfaf:	jg     0x41d00d
  41cfb1:	cmc    
  41cfb2:	mov    ch,0x84
  41cfb4:	mov    eax,0xfe78d34a
  41cfb9:	repz fbstp TBYTE PTR [esi]
  41cfbc:	shl    DWORD PTR [ecx-0x54],0x78
  41cfc0:	div    bh
  41cfc2:	sar    DWORD PTR [ebx-0x6a4df458],1
  41cfc8:	nop
  41cfc9:	lock imul eax,DWORD PTR [esi],0x36708f99
  41cfd0:	test   eax,0xa1bd6b80
  41cfd5:	(bad)  
  41cfd6:	out    0x78,eax
	...
  41cfec:	imul   BYTE PTR [ebx-0x54098559]
  41cff2:	mov    bh,0x9a
  41cff4:	inc    esi
  41cff5:	fwait
  41cff6:	out    0x3,eax
  41cff8:	sub    al,0x49
  41cffa:	mov    ebx,0x2aa47bd0
  41cfff:	inc    edx
  41d000:	mov    esi,cs
  41d002:	in     eax,dx
  41d003:	ja     0x41d082
  41d005:	call   0xaa01:0x5b6e900
  41d00c:	dec    BYTE PTR [edx-0x1]
  41d00f:	cmc    
  41d010:	stos   DWORD PTR es:[edi],eax
  41d011:	cmp    dl,0x1e
  41d014:	cmp    eax,ebp
  41d016:	jne    0x41d032
  41d018:	xor    edx,esi
  41d01a:	mov    BYTE PTR [edi-0x2d384156],ah
  41d020:	cmc    
  41d021:	scas   eax,DWORD PTR es:[edi]
  41d022:	cmp    DWORD PTR [eax],ebp
  41d024:	or     DWORD PTR [edx*1+0xd8fb6dc],eax
  41d02b:	aaa    
  41d02c:	in     eax,0x6
  41d02e:	inc    esi
  41d02f:	sbb    esi,eax
  41d031:	cmp    DWORD PTR [ebp-0x18],ecx
  41d034:	xor    BYTE PTR [ebx-0x6466d5fe],bl
  41d03a:	inc    ecx
  41d03c:	imul   eax,DWORD PTR [edx-0x7d4fd14a],0xffffffb6
  41d043:	cs mov ebx,0xabe1e030
  41d049:	xor    BYTE PTR [edi-0x3aeecadc],al
  41d04f:	jmp    0x0:0x0
	...
  41d062:	add    BYTE PTR [eax],al
  41d064:	sbb    esp,DWORD PTR [edx-0x3b]
  41d067:	and    al,0x29
  41d069:	out    dx,eax
  41d06a:	cld    
  41d06b:	jmp    0x26f86d26
  41d070:	mov    eax,0xb31eb69c
  41d075:	adc    BYTE PTR [ebx+0x7d],ah
  41d078:	mov    ecx,0xabe1e02e
  41d07d:	shl    DWORD PTR [eax],1
  41d07f:	fwait
  41d080:	cmp    edi,esp
  41d082:	and    eax,0x86d242f6
  41d087:	mov    ah,0xd2
  41d089:	clc    
  41d08a:	aad    0x6a
  41d08c:	dec    esp
  41d08d:	jmp    0x41d08e
  41d08f:	and    eax,0xfffeff7c
  41d094:	pop    esp
  41d095:	xchg   ebx,eax
  41d096:	add    BYTE PTR [edi-0x19],al
  41d099:	lods   eax,DWORD PTR ds:[esi]
  41d09a:	das    
  41d09b:	ror    BYTE PTR [esp+ebx*1],0x41
  41d09f:	lock xchg ebp,eax
  41d0a1:	fdivr  st,st(0)
  41d0a3:	jmp    0x41d073
  41d0a5:	push   ss
  41d0a6:	popa   
  41d0a7:	cld    
  41d0a8:	or     al,0xa6
  41d0aa:	rol    BYTE PTR [eax-0x6b],0xd8
  41d0ae:	in     al,dx
  41d0af:	inc    edi
  41d0b0:	mov    bh,0xba
  41d0b2:	mov    DWORD PTR [eax-0x43],ecx
  41d0b5:	push   ss
  41d0b6:	fld    QWORD PTR [ecx]
  41d0b8:	test   eax,eax
  41d0ba:	call   0xdd5d92ce
  41d0bf:	pop    edx
  41d0c0:	sbb    al,0x93
  41d0c2:	or     edi,DWORD PTR [esi+0x405a7b5c]
	...
  41d0dc:	int3   
  41d0dd:	fld    DWORD PTR [ebp+0x411c004d]
  41d0e3:	clc    
  41d0e4:	pop    ecx
  41d0e5:	push   edx
  41d0e6:	jno    0x41d0f0
  41d0e8:	xor    al,0x12
  41d0ea:	sti    
  41d0eb:	inc    DWORD PTR [ebx-0x2c07bee4]
  41d0f1:	sub    BYTE PTR [ebx],dl
  41d0f3:	inc    edi
  41d0f4:	push   0xffffffd7
  41d0f6:	adc    al,0x1
  41d0f8:	and    eax,0x180ff0c8
  41d0fd:	ja     0x41d0ff
  41d0ff:	add    BYTE PTR [ebp+ebx*1+0x2873304e],cl
  41d106:	or     al,0x11
  41d108:	dec    edi
  41d109:	inc    esp
  41d10a:	test   DWORD PTR [ebp+0x8],ecx
  41d10d:	push   ds
  41d10e:	dec    ecx
  41d10f:	cld    
  41d110:	into   
  41d111:	sbb    al,0x51
  41d113:	adc    al,0x27
  41d115:	pop    esp
  41d116:	jl     0x41d145
  41d118:	pop    es
  41d119:	xchg   esi,eax
  41d11a:	das    
  41d11b:	ror    BYTE PTR [esi],cl
  41d11d:	lods   eax,DWORD PTR ds:[esi]
  41d11e:	pop    esi
  41d11f:	ins    BYTE PTR es:[edi],dx
  41d120:	mov    ch,0xf5
  41d122:	test   DWORD PTR [ebx-0x57],ebx
  41d125:	clc    
  41d126:	add    BYTE PTR ds:0x4e8dc903,cl
  41d12c:	test   ebp,edi
  41d12e:	mov    dh,0xc
  41d130:	scas   eax,DWORD PTR es:[edi]
  41d131:	cmp    DWORD PTR [ebx+ecx*2],edi
  41d134:	sub    ebp,ecx
  41d136:	xchg   DWORD PTR [ecx],edx
  41d138:	sub    al,0xb5
  41d13a:	cmp    ch,0x78
  41d13d:	in     al,0x8d
  41d13f:	dec    ebx
	...
  41d154:	sbb    DWORD PTR [edi-0x5c6cec31],edi
  41d15a:	ds enter 0x7cba,0x97
  41d15f:	jmp    0x41d163
  41d161:	in     eax,dx
  41d162:	cmp    BYTE PTR [ebx+0x9],0xf8
  41d166:	adc    DWORD PTR [ebx+0xc47f],eax
  41d16c:	cmp    al,0x53
  41d16e:	cmp    BYTE PTR [ecx],0xed
  41d171:	dec    edx
  41d172:	inc    eax
  41d173:	xchg   DWORD PTR [eax-0x14],ebp
  41d176:	cmp    ebx,DWORD PTR [esi+0x61]
  41d179:	dec    ecx
  41d17a:	push   ds
  41d17b:	or     eax,0x4e8bc903
  41d180:	test   ebp,edi
  41d182:	mov    dh,0xc
  41d184:	scas   eax,DWORD PTR es:[edi]
  41d185:	(bad)  
  41d187:	repz sub BYTE PTR [ebx+eax*8+0x39eaf0fc],dl
  41d18f:	inc    ebx
  41d190:	leave  
  41d191:	mov    ah,BYTE PTR [ebx-0x17]
  41d194:	mov    edi,0x387bca71
  41d199:	aaa    
  41d19a:	clc    
  41d19b:	adc    dh,cl
  41d19d:	mov    bl,0xc
  41d19f:	jbe    0x41d154
  41d1a1:	sub    DWORD PTR [edx+0x3f],ecx
  41d1a4:	sub    al,0xb5
  41d1a6:	loopne 0x41d1e0
  41d1a8:	je     0x41d178
  41d1aa:	(bad)  
  41d1ab:	out    0x6c,al
  41d1ad:	nop
  41d1ae:	xor    WORD PTR [ebx+ebp*2],0x457
  41d1b4:	test   al,0x12
  41d1b6:	push   ss
  41d1b7:	outs   dx,DWORD PTR ds:[esi]
	...
  41d1cc:	push   eax
  41d1cd:	in     eax,dx
  41d1ce:	adc    edi,ebx
  41d1d0:	dec    esi
  41d1d1:	popf   
  41d1d2:	imul   esp,DWORD PTR [ebp+edi*1-0x972c213],0x768aa7b3
  41d1dd:	mov    bl,0x2e
  41d1df:	not    esi
  41d1e1:	sbb    BYTE PTR [esi],bh
  41d1e3:	out    dx,al
  41d1e4:	and    ch,dh
  41d1e6:	xchg   ebx,eax
  41d1e7:	pop    ds
  41d1e8:	sub    al,0xd9
  41d1ea:	adc    eax,0xe45aaf7
  41d1ef:	idiv   DWORD PTR [edx+0xf7bec]
  41d1f5:	arpl   di,bp
  41d1f7:	imul   esp,edi,0xfffffffb
  41d1fa:	cmc    
  41d1fb:	cmp    BYTE PTR [edx+edx*1+0x27],0x11
  41d200:	ss mov edi,0xa8b503fc
  41d206:	cmp    al,0x80
  41d208:	fs ret 
  41d20a:	mov    edi,0xcdeccaeb
  41d20f:	mov    WORD PTR [esi-0x15],?
  41d212:	lods   eax,DWORD PTR ds:[esi]
  41d213:	(bad)  
  41d214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d215:	mov    fs,edi
  41d217:	add    esi,DWORD PTR [ebp+0x3102b010]
  41d21d:	scas   eax,DWORD PTR es:[edi]
  41d21e:	repnz loope 0x41d23f
  41d221:	popf   
  41d222:	push   0xffffffe2
  41d224:	stos   DWORD PTR es:[edi],eax
  41d225:	in     al,dx
  41d226:	popf   
  41d227:	adc    BYTE PTR [ebx-0x68],ah
  41d22a:	sub    bh,BYTE PTR [ebx]
  41d22c:	(bad)  
  41d22d:	jecxz  0x41d20c
  41d22f:	xchg   BYTE PTR [eax],al
	...
  41d241:	add    BYTE PTR [eax],al
  41d243:	add    ah,dh
  41d245:	out    0x85,eax
  41d247:	add    BYTE PTR [eax-0x11732cae],0xeb
  41d24e:	jmp    FWORD PTR [edi-0x71817f7d]
  41d254:	test   eax,0xec6d0cd7
  41d259:	sti    
  41d25a:	cld    
  41d25b:	pop    esi
  41d25c:	xor    DWORD PTR [eax-0x14],ebp
  41d25f:	jmp    0xde562aa3
  41d264:	xor    eax,edx
  41d266:	adc    cl,ch
  41d268:	mov    dh,0x14
  41d26a:	pop    ebx
  41d26b:	cmp    eax,0xfb7ad779
  41d270:	icebp  
  41d271:	dec    ebp
  41d272:	ins    BYTE PTR es:[edi],dx
  41d273:	mov    edx,0xf2b69ac1
  41d278:	fistp  WORD PTR [eax-0xc]
  41d27b:	xchg   esp,eax
  41d27c:	ror    DWORD PTR [esi-0x3],cl
  41d27f:	lods   al,BYTE PTR ds:[esi]
  41d280:	stos   BYTE PTR es:[edi],al
  41d281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d282:	inc    ebx
  41d283:	cmc    
  41d284:	or     dh,dh
  41d286:	call   0x7c97046e
  41d28b:	fs jbe 0x41d2f1
  41d28e:	adc    DWORD PTR [edx-0x20896bed],esi
  41d294:	mov    eax,ds:0xf3703ed4
  41d299:	inc    edi
  41d29a:	cmp    DWORD PTR [eax-0x2fe4e556],ebp
  41d2a0:	push   edx
  41d2a1:	jmp    0x6c0d:0x8f414c80
	...
  41d2bc:	retf   
  41d2bd:	idiv   esp
  41d2bf:	mov    esi,0xe6fc487e
  41d2c4:	xor    al,0xc5
  41d2c6:	hlt    
  41d2c7:	scas   al,BYTE PTR es:[edi]
  41d2c8:	sub    bl,BYTE PTR [ecx]
  41d2ca:	inc    ebx
  41d2cb:	int    0x76
  41d2cd:	adc    al,BYTE PTR [ebx-0x3b]
  41d2d0:	sbb    ebx,DWORD PTR [edi+0x24]
  41d2d3:	(bad)  
  41d2d4:	jmp    0x8987:0x8c8e0075
  41d2db:	add    BYTE PTR [edi+0x6b],al
  41d2de:	jno    0x41d2f8
  41d2e0:	mov    ds:0xeb10716a,al
  41d2e5:	call   0x97a3d1f2
  41d2ea:	call   0xfbacdaf8
  41d2ef:	dec    ebx
  41d2f0:	rcl    DWORD PTR [ebx+0xb],1
  41d2f3:	test   DWORD PTR [ebp+eax*4+0x0],edx
  41d2f7:	add    BYTE PTR [edi-0x5f8c0710],ah
  41d2fd:	jl     0x41d29a
  41d2ff:	idiv   DWORD PTR [ebx+0x6a]
  41d302:	aaa    
  41d303:	pop    esi
  41d304:	clc    
  41d305:	cdq    
  41d306:	jg     0x41d2af
  41d308:	in     al,0x6a
  41d30a:	sti    
  41d30b:	jb     0x523812a7
  41d311:	xchg   ebp,edi
  41d313:	jae    0x41d31c
  41d315:	push   ss
  41d316:	inc    esi
  41d317:	xor    bl,ch
  41d319:	and    al,0x53
  41d31b:	add    DWORD PTR [esi+0x83087f],eax
	...
  41d331:	add    BYTE PTR [eax],al
  41d333:	add    bl,dl
  41d335:	lea    edi,[eax]
  41d337:	or     al,0xde
  41d339:	cdq    
  41d33a:	or     DWORD PTR [eax+ebp*8],0x7de9fb69
  41d341:	(bad)  
  41d342:	sti    
  41d343:	dec    ebx
  41d345:	and    al,0x43
  41d347:	add    DWORD PTR [edi+0x51],ebx
  41d34a:	add    bh,BYTE PTR [ebx]
  41d34c:	sbb    eax,0x420fea76
  41d351:	sar    ebp,1
  41d353:	push   cs
  41d354:	inc    edx
  41d355:	fsin   
  41d357:	sar    BYTE PTR [esi+edx*4+0x7],0xc1
  41d35c:	adc    eax,0x5383f8d8
  41d361:	(bad)  
  41d362:	in     eax,0x85
  41d364:	mov    WORD PTR [esi+0x4ab50f00],cs
  41d36a:	(bad)  
  41d36b:	(bad)  
  41d36c:	mov    ebx,0x3601d642
  41d371:	fwait
  41d372:	add    BYTE PTR [eax],0x74
  41d375:	sbb    BYTE PTR [ecx],cl
  41d377:	or     DWORD PTR [edi+0x25],esi
  41d37a:	dec    edi
  41d37b:	sub    BYTE PTR [ebp+eiz*1+0xe],0x94
  41d380:	ja     0x41d3e1
  41d382:	fsubr  st,st(3)
  41d384:	dec    esi
  41d385:	dec    esi
  41d386:	and    BYTE PTR [ebx+0x51],0xf8
  41d38a:	inc    ebp
  41d38b:	inc    ebx
  41d38c:	inc    ebp
  41d38d:	test   DWORD PTR [eax],0x6a39b500
  41d393:	push   esp
  41d394:	xchg   BYTE PTR [eax+0x86c1],bh
	...
  41d3aa:	add    BYTE PTR [eax],al
  41d3ac:	js     0x41d356
  41d3ae:	mov    WORD PTR [ebx+0x29],es
  41d3b1:	dec    ebp
  41d3b2:	outs   dx,DWORD PTR ds:[esi]
  41d3b3:	sbb    DWORD PTR [eax-0xacefe4c],0x5438c37
  41d3bd:	cmp    DWORD PTR [edx+0x3f],ebp
  41d3c0:	mov    edx,0xb3fec642
  41d3c5:	stos   BYTE PTR es:[edi],al
  41d3c6:	into   
  41d3c7:	add    DWORD PTR [esi],esi
  41d3c9:	adc    edi,DWORD PTR [ebp+0x0]
  41d3cc:	hlt    
  41d3cd:	xchg   edi,eax
  41d3ce:	or     ebp,eax
  41d3d0:	jo     0x41d3ba
  41d3d2:	add    BYTE PTR [eax],al
  41d3d4:	mov    ch,0xf8
  41d3d6:	pop    es
  41d3d7:	mov    edi,0x488d0dce
  41d3dc:	jmp    0x3e413555
  41d3e1:	mov    esi,DWORD PTR [eax+0xd]
  41d3e4:	add    esp,DWORD PTR [eax+0x58]
  41d3e7:	pop    edx
  41d3e8:	jne    0x41d3e2
  41d3ea:	or     edi,DWORD PTR [esi+0x3fda0335]
  41d3f0:	mov    ch,0xb1
  41d3f2:	mov    DWORD PTR [ebx-0x5f],ecx
  41d3f5:	nop
  41d3f6:	jo     0x41d3bf
  41d3f8:	mov    ds:0xbaf7a713,al
  41d3fd:	daa    
  41d3fe:	xchg   esi,eax
  41d3ff:	jge    0x41d389
  41d401:	imul   esp,DWORD PTR [eax-0x39],0x153d998a
  41d408:	lock loope 0x41d42e
  41d40b:	sbb    al,0x72
  41d40d:	sbb    BYTE PTR [eax+edi*2],bl
	...
  41d424:	mov    eax,0xb5048313
  41d429:	(bad)  
  41d42a:	jb     0x41d3fa
  41d42c:	mov    bl,BYTE PTR [eax-0x633def6b]
  41d432:	cmp    DWORD PTR [ebx-0x309e1c02],ecx
  41d438:	ds dec esi
  41d43a:	jo     0x41d413
  41d43c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d43d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d43e:	xor    DWORD PTR [eax],eax
  41d440:	fdivrp st(4),st
  41d442:	jmp    0xf28fdb77
  41d447:	fisttp QWORD PTR [esi-0x55b99568]
  41d44d:	(bad)  
  41d44e:	out    0xc,eax
  41d450:	dec    ebx
  41d451:	jge    0x41d4b5
  41d453:	into   
  41d454:	ficomp DWORD PTR [eax+0x4caf1055]
  41d45a:	ror    dh,0x6
  41d45d:	cdq    
  41d45e:	arpl   WORD PTR [eax],ax
  41d460:	jmp    0x41d44a
  41d462:	cmc    
  41d463:	jl     0x41d4db
  41d465:	and    DWORD PTR [edx-0x31],0xffffffde
  41d469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d46a:	xor    al,0x18
  41d46c:	pop    ebx
  41d46d:	ret    0x4c21
  41d470:	rcl    BYTE PTR [ebx],0xd6
  41d473:	imul   ecx,eax,0xcefe69e8
  41d479:	(bad)  
  41d47a:	jo     0x41d44a
  41d47c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d47d:	cwde   
  41d47e:	fs in  eax,0xc4
  41d481:	pop    DWORD PTR [eax]
  41d483:	jmp    0xf33e18c7
	...
  41d49c:	out    dx,al
  41d49d:	fs aaa 
  41d49f:	loop   0x41d519
  41d4a1:	je     0x41d514
  41d4a3:	add    eax,eax
  41d4a5:	and    DWORD PTR [ecx],edx
  41d4a7:	bound  edi,QWORD PTR [eax-0x48]
  41d4aa:	or     eax,0x3795b257
  41d4af:	xor    al,0xfd
  41d4b1:	arpl   WORD PTR [ebx],sp
  41d4b3:	sub    dh,al
  41d4b5:	dec    esp
  41d4b6:	adc    al,0xb0
  41d4b8:	jae    0x41d536
  41d4ba:	jl     0x41d446
  41d4bc:	int    0x85
  41d4be:	mov    DWORD PTR [edi-0x2a3ff2a6],ebp
  41d4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4c6:	pop    ebx
  41d4c7:	loope  0x41d509
  41d4c9:	call   0xa54e:0x11772031
  41d4d0:	jge    0x41d4fa
  41d4d2:	or     eax,0xfce3016e
  41d4d7:	ss xor eax,0xb1e9f064
  41d4dd:	or     al,0xa8
  41d4df:	adc    ebx,DWORD PTR [ecx-0x6d43c716]
  41d4e5:	call   0x62fc:0xea80e082
  41d4ec:	sti    
  41d4ed:	stos   DWORD PTR es:[edi],eax
  41d4ee:	inc    eax
  41d4ef:	jo     0x41d4e4
  41d4f1:	stos   DWORD PTR es:[edi],eax
  41d4f2:	std    
  41d4f3:	je     0x41d48f
  41d4f5:	push   ss
  41d4f6:	aad    0x83
  41d4f8:	mov    dh,0xea
  41d4fa:	jb     0x41d4c9
  41d4fc:	sub    eax,0x5cfcd6
	...
  41d511:	add    BYTE PTR [eax],al
  41d513:	add    BYTE PTR [ecx-0x56ab02bf],bh
  41d519:	jmp    0xc108:0x5c4fe572
  41d520:	xor    ch,0xfc
  41d523:	add    bl,dh
  41d525:	or     eax,0xa7190fc0
  41d52a:	adc    al,0x0
  41d52c:	pushf  
  41d52d:	(bad)  
  41d52e:	aaa    
  41d52f:	pop    ebp
  41d530:	push   eax
  41d531:	(bad)  
  41d533:	jmp    0x3d3695
  41d538:	pop    es
  41d539:	fprem  
  41d53b:	(bad)  
  41d53c:	fnstcw WORD PTR [edi-0x3]
  41d53f:	dec    DWORD PTR [ebx+edx*4-0x20720681]
  41d546:	sbb    eax,0xbf7d23b
  41d54b:	adc    DWORD PTR [esi],0x62
  41d54e:	sti    
  41d54f:	inc    DWORD PTR [ebx-0x6abcf8df]
  41d555:	fdiv   st,st(0)
  41d557:	psubusb mm6,QWORD PTR [edi]
  41d55a:	icebp  
  41d55b:	jmp    ebx
  41d55d:	push   0x41
  41d55f:	adc    al,0xd7
  41d561:	fdivr  st,st(0)
  41d563:	cmp    DWORD PTR [ecx],eax
  41d565:	xchg   edi,eax
  41d566:	jle    0x41d547
  41d568:	mov    bh,0x53
  41d56a:	or     eax,DWORD PTR [ebx+esi*4-0x7000048b]
  41d571:	call   0xd8e6d65e
  41d576:	adc    BYTE PTR [edi],cl
	...
  41d58c:	cdq    
  41d58d:	pop    esi
  41d58e:	or     eax,0x59141c00
  41d593:	cld    
  41d594:	out    0x5a,eax
  41d596:	jns    0x41d5ca
  41d598:	test   eax,0x9a0f7368
  41d59e:	mov    dh,0xb
  41d5a0:	and    eax,0xf974f0d8
  41d5a5:	int    0xfb
  41d5a7:	inc    ebp
  41d5a8:	fsub   DWORD PTR [ebx+0x75701441]
  41d5ae:	out    0x1a,eax
  41d5b0:	mov    ch,0x71
  41d5b2:	mov    edi,0xed39387b
  41d5b7:	adc    BYTE PTR [esi-0x55],bh
  41d5ba:	or     al,0x76
  41d5bc:	ret    
  41d5bd:	jmp    0xae7e150d
  41d5c2:	fdivr  DWORD PTR [eax]
  41d5c4:	je     0x41d58b
  41d5c6:	mov    DWORD PTR [esi-0x7e85d25d],eax
  41d5cc:	adc    BYTE PTR [ecx],cl
  41d5ce:	add    DWORD PTR ds:0xfd6c1d30,ecx
  41d5d4:	add    cl,0xd7
  41d5d7:	sti    
  41d5d8:	stos   BYTE PTR es:[edi],al
  41d5d9:	jp     0x41d59c
  41d5db:	bnd jb 0x41d643
  41d5de:	mov    es,WORD PTR [ebx-0x6f]
  41d5e1:	mov    eax,0x7599438b
  41d5e6:	lock and ebp,DWORD PTR [esi]
  41d5e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5ea:	jmp    0x41d5eb
  41d5ec:	push   ebx
  41d5ed:	mov    ebx,0x8914
	...
  41d602:	add    BYTE PTR [eax],al
  41d604:	jle    0x41d643
  41d606:	lock pop ss
  41d608:	jmp    0x41d65f
  41d60a:	lock (bad) 
  41d60e:	add    eax,0x68e0a8fd
  41d613:	jb     0x41d631
  41d615:	popf   
  41d616:	jp     0x41d59b
  41d618:	cmc    
  41d619:	les    edi,FWORD PTR [edi+0x72]
  41d61c:	xabort 0x0
  41d61f:	dec    ecx
  41d620:	into   
  41d621:	and    esi,DWORD PTR [ebp+0x71]
  41d624:	loope  0x41d5b4
  41d626:	or     ebx,esi
  41d628:	add    dl,BYTE PTR [ebp-0x89549f6]
  41d62e:	or     DWORD PTR [esi-0x20bc0586],esi
  41d634:	mov    ebp,0xf48948f1
  41d639:	lods   al,BYTE PTR ds:[esi]
  41d63a:	shr    bl,0xb4
  41d63d:	(bad)  
  41d63e:	out    0x3,eax
  41d640:	mov    ch,0x18
  41d642:	and    al,0x78
  41d644:	xor    al,0xce
  41d646:	jmp    0xe7d109b5
  41d64b:	add    ebp,DWORD PTR [eax-0x3ffcc9e3]
  41d651:	sbb    eax,0xef6a0616
  41d656:	fimul  WORD PTR [edi+ebp*2]
  41d659:	pop    ss
  41d65a:	sbb    al,0x7c
  41d65c:	in     al,0xd6
  41d65e:	fld    DWORD PTR [ebx+0x35]
  41d661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d662:	daa    
  41d663:	mov    esi,esi
  41d665:	jecxz  0x41d64c
  41d667:	pop    DWORD PTR [eax]
	...
  41d679:	add    BYTE PTR [eax],al
  41d67b:	add    BYTE PTR [edx+0x11],al
  41d67e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d67f:	add    eax,0x8d935332
  41d684:	(bad)  
  41d685:	out    0x91,eax
  41d687:	jmp    0x41d6fa
  41d689:	dec    ebx
  41d68a:	ja     0x41d68f
  41d68c:	mov    ch,0x8f
  41d68e:	out    0x34,eax
  41d690:	jne    0x41d6a9
  41d692:	lods   al,BYTE PTR ds:[esi]
  41d693:	ja     0x41d68d
  41d695:	clc    
  41d696:	mov    eax,0x60507534
  41d69b:	mov    edi,0x3558f952
  41d6a0:	jb     0x41d6f1
  41d6a2:	cli    
  41d6a3:	inc    ebx
  41d6a4:	cmp    dl,BYTE PTR [ebx+0x37]
  41d6a7:	mov    esi,DWORD PTR [esi-0x1d]
  41d6aa:	lods   eax,DWORD PTR ds:[esi]
  41d6ab:	ins    BYTE PTR es:[edi],dx
  41d6ac:	loop   0x41d642
  41d6ae:	jne    0x41d679
  41d6b0:	sbb    edx,DWORD PTR [esi-0x314b2ea3]
  41d6b6:	pop    es
  41d6b7:	or     al,0xc4
  41d6b9:	iret   
  41d6ba:	sub    eax,0xe78f12bf
  41d6bf:	add    esi,DWORD PTR [ebp+0x456d3198]
  41d6c5:	adc    ebp,DWORD PTR [edi-0x30c3c0]
  41d6cb:	imul   ebx,DWORD PTR [ecx-0x1c],0x9252a487
  41d6d2:	mov    esi,0x4046b668
  41d6d7:	jmp    0xe1c8fc99
  41d6dc:	loope  0x41d682
  41d6de:	add    BYTE PTR [esi],ah
	...
  41d6f4:	cs push ecx
  41d6f6:	cld    
  41d6f7:	jo     0x41d774
  41d6f9:	fadd   QWORD PTR [edx-0x48736450]
  41d6ff:	mov    dh,0x1d
  41d701:	jecxz  0x41d77f
  41d703:	pusha  
  41d704:	jae    0x41d6e2
  41d706:	or     al,0x5f
  41d708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d709:	dec    edx
  41d70a:	xchg   DWORD PTR [eax*1+0x2ce6c011],esi
  41d711:	push   0x1
  41d713:	jmp    0x8403e5ce
  41d718:	cmp    ecx,ebp
  41d71a:	or     al,0xee
  41d71c:	xor    eax,0xb6e90fe7
  41d721:	loop   0x41d746
  41d723:	push   esp
  41d724:	stos   BYTE PTR es:[edi],al
  41d725:	jno    0x41d766
  41d727:	jmp    0x228398b5
  41d72c:	repz xchg edx,eax
  41d72e:	mov    WORD PTR [eax+0x60008fb9],fs
  41d734:	imul   eax,DWORD PTR [eax-0x3e161517],0x41
  41d73b:	jb     0x41d739
  41d73d:	ja     0x41d778
  41d73f:	adc    BYTE PTR [ebp-0x4921b3f2],ch
  41d745:	pop    DWORD PTR [ecx+0x748faea7]
  41d74b:	std    
  41d74c:	sbb    ah,ah
  41d74e:	std    
  41d74f:	lahf   
  41d750:	sahf   
  41d751:	sbb    BYTE PTR [esi-0x13],dl
  41d754:	sub    esi,ecx
  41d756:	out    0x0,eax
	...
  41d76c:	inc    ecx
  41d76d:	mov    esp,0x5051fffb
  41d772:	or     eax,DWORD PTR [ebp-0x4a01b]
  41d778:	push   edi
  41d779:	and    eax,0x18c1ebf9
  41d77e:	push   esi
  41d77f:	sbb    al,0xa7
  41d781:	pop    ecx
  41d782:	aaa    
  41d783:	fldenv [ebx-0x79]
  41d786:	mov    cl,BYTE PTR [ebx]
  41d788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d789:	int    0x28
  41d78b:	jne    0x41d71e
  41d78d:	push   cs
  41d78e:	cli    
  41d78f:	add    DWORD PTR [ebx+0x6bf3d763],ebx
  41d795:	pop    ebx
  41d796:	mov    cl,BYTE PTR [ebx-0x73]
  41d799:	test   eax,0x638b2d4e
  41d79e:	retf   
  41d79f:	repz sub ebx,DWORD PTR [ebx-0x79]
  41d7a3:	dec    ebp
  41d7a4:	and    al,0xcf
  41d7a6:	sti    
  41d7a7:	inc    ebp
  41d7a8:	and    BYTE PTR [ecx+eax*2-0x1b0545ec],0xde
  41d7b0:	pop    esi
  41d7b1:	pop    DWORD PTR [eax]
  41d7b3:	mov    eax,edx
  41d7b5:	mul    DWORD PTR [edi]
  41d7b7:	shl    BYTE PTR [edi],1
  41d7b9:	dec    ecx
  41d7ba:	or     eax,DWORD PTR [edi-0x4a062]
  41d7c0:	pop    edi
  41d7c1:	inc    edi
  41d7c2:	in     eax,0xca
  41d7c4:	dec    esi
  41d7c5:	pop    DWORD PTR [eax]
  41d7c7:	(bad)  
  41d7c8:	adc    DWORD PTR [ebx-0x70e30003],edx
  41d7ce:	jg     0x41d7c8
	...
  41d7e4:	sbb    eax,0xeba8c8a
  41d7e9:	pop    DWORD PTR [eax]
  41d7eb:	cmp    ebp,DWORD PTR [edx]
  41d7ed:	jmp    0x41d7fa
  41d7ef:	cmp    DWORD PTR [esi+0x5f],0xfffffffb
  41d7f3:	call   FWORD PTR [ebx]
  41d7f5:	xor    eax,0x75b5430f
  41d7fa:	jp     0x41d806
  41d7fc:	or     edx,0xe6378e05
  41d802:	jne    0x41d801
  41d804:	ss (bad) 
  41d809:	jne    0x41d885
  41d80b:	or     esp,DWORD PTR [ecx-0x2b]
  41d80e:	cmp    edx,0x38
  41d811:	stc    
  41d812:	add    BYTE PTR [eax],al
  41d814:	mov    edx,0xc2f0e56b
  41d819:	mov    ecx,0xf8557e81
  41d81e:	add    eax,0x76261783
  41d823:	std    
  41d824:	stos   BYTE PTR es:[edi],al
  41d825:	stos   DWORD PTR es:[edi],eax
  41d826:	adc    BYTE PTR [edi],dh
  41d828:	clc    
  41d829:	(bad)  
  41d82a:	repnz mov edi,0x29b8c
  41d830:	mov    ch,0xed
  41d832:	shr    BYTE PTR [ebx+0x6],cl
  41d835:	adc    eax,DWORD PTR [ecx+0x6b83af39]
  41d83b:	inc    ecx
  41d83c:	mov    cs,WORD PTR [edx]
  41d83e:	ds inc ebx
  41d840:	leave  
  41d841:	test   DWORD PTR [eax],0x7975b500
  41d847:	inc    DWORD PTR [eax]
	...
  41d859:	add    BYTE PTR [eax],al
  41d85b:	add    BYTE PTR [ebx-0x4afe2694],dh
  41d861:	clc    
  41d862:	cmp    DWORD PTR [esi-0x1f],ebx
  41d865:	fld    DWORD PTR [ecx+0x76414140]
  41d86b:	or     eax,0x80c1e50b
  41d870:	aas    
  41d871:	out    dx,eax
  41d872:	add    eax,0x76a5d784
  41d877:	std    
  41d878:	ss dec esi
  41d87a:	and    DWORD PTR ds:0xfd71bf39,ecx
  41d880:	sbb    dh,BYTE PTR [edi+0x77]
  41d883:	mov    al,ds:0x3e78fb5
  41d888:	mov    eax,0x72ec0b
  41d88d:	loop   0x41d8a4
  41d88f:	shl    BYTE PTR [esi+0x730fa4a8],0xd4
  41d896:	mov    db6,edi
  41d899:	(bad)  
  41d89a:	out    0x3e,eax
  41d89c:	jbe    0x41d919
  41d89e:	call   0x6ad18da6
  41d8a3:	jnp    0x41d877
  41d8a5:	nop
  41d8a6:	jae    0x41d8bc
  41d8a8:	mov    bh,0x8f
  41d8aa:	out    0x38,eax
  41d8ac:	arpl   WORD PTR [ebx-0x1a],si
  41d8af:	cmp    BYTE PTR [ebp-0x3f8a3223],0x19
  41d8b6:	fcmovb st,st(0)
  41d8b8:	xor    eax,0xb3efefe6
  41d8bd:	or     al,0xb1
  41d8bf:	and    al,0x0
	...
  41d8d1:	add    BYTE PTR [eax],al
  41d8d3:	add    BYTE PTR [ecx],ah
  41d8d5:	xchg   esp,eax
  41d8d6:	push   0xe790557a
  41d8db:	add    edi,DWORD PTR [eax-0x7f8d53f6]
  41d8e1:	loope  0x41d878
  41d8e3:	mov    edi,0x1024a6a6
  41d8e8:	repz mov edx,0xe16a648f
  41d8ee:	out    0x3c,al
  41d8f0:	idiv   BYTE PTR [ebx-0x18]
  41d8f3:	add    esi,DWORD PTR [ebp+0x527c6a8f]
  41d8f9:	xchg   edx,eax
  41d8fa:	jae    0x41d950
  41d8fc:	dec    edx
  41d8fd:	loope  0x41d8e5
  41d8ff:	cmp    bl,ah
  41d901:	jae    0x41d8e9
  41d903:	cmp    ch,0xdc
  41d906:	dec    ebp
  41d907:	jne    0x41d8c9
  41d909:	sbb    edx,ebx
  41d90b:	shl    BYTE PTR ds:0xc7f7f0e6,0xc
  41d912:	add    BYTE PTR [ebx],dh
  41d914:	mov    dl,0x92
  41d916:	mov    ss,WORD PTR [edi+eax*4-0x1e]
  41d91a:	cld    
  41d91b:	push   0xe9000c8f
  41d920:	mov    dh,0x92
  41d922:	test   BYTE PTR [eax-0x79],ah
  41d925:	loop   0x41d923
  41d927:	push   cs
  41d928:	xor    bh,BYTE PTR [ebp+0x37]
  41d92b:	lods   al,BYTE PTR ds:[esi]
  41d92c:	mov    edx,0x3d10cf61
  41d931:	loope  0x41d92f
  41d933:	jmp    0xe85625d1
	...
  41d94c:	mov    dh,0x8f
  41d94e:	add    BYTE PTR [edx+0x4e],ch
  41d951:	loopne 0x41d960
  41d953:	ins    DWORD PTR es:[edi],dx
  41d954:	cmp    ah,cl
  41d956:	cld    
  41d957:	jmp    0xdeae1ad9
  41d95c:	xor    eax,0x21c6f15b
  41d961:	xchg   ebx,eax
  41d962:	mov    dh,0xda
  41d964:	jne    0x41d975
  41d966:	cli    
  41d967:	jecxz  0x41d91a
  41d969:	adc    edx,DWORD PTR [esi-0x45]
  41d96c:	or     ebx,esp
  41d96e:	and    BYTE PTR [ebx+0x680c61b3],0xfc
  41d975:	or     al,0x0
  41d977:	jmp    0x24c56c32
  41d97c:	out    0xe2,eax
  41d97e:	cld    
  41d97f:	xchg   BYTE PTR [ebx],ch
  41d981:	jl     0x41d9ba
  41d983:	and    al,0xc5
  41d985:	popa   
  41d986:	iret   
  41d987:	cmp    BYTE PTR [esi-0x1f],0xfc
  41d98b:	jmp    0x70839715
  41d990:	jnp    0x41da0e
  41d992:	cmp    DWORD PTR [ebx],ebp
  41d994:	mov    ecx,0xb6e84a13
  41d999:	(bad)
  41d99d:	mov    ebp,0xb9b70041
  41d9a2:	push   0x9be8f0f
  41d9a7:	add    BYTE PTR [ebx+ecx*4],cl
  41d9aa:	mov    dh,0xb
  41d9ac:	xchg   edi,eax
  41d9ad:	shl    BYTE PTR [eax],cl
  41d9af:	mov    al,BYTE PTR [eax]
	...
  41d9c5:	jge    0x41da06
  41d9c7:	sub    BYTE PTR [ebp+0x15850be0],0x5e
  41d9ce:	sti    
  41d9cf:	inc    ebx
  41d9d1:	and    DWORD PTR [ecx],edx
  41d9d3:	cmp    DWORD PTR [ecx],ebx
  41d9d5:	nop
  41d9d6:	jle    0x41d9b1
  41d9d8:	lds    eax,FWORD PTR [ebp-0x61330003]
  41d9de:	rol    BYTE PTR [edx+0x55],cl
  41d9e1:	rcl    DWORD PTR [eax],1
  41d9e3:	cmp    ebx,DWORD PTR [esi]
  41d9e5:	mov    WORD PTR [esi+ecx*1-0x14ff7433],cs
  41d9ec:	iret   
  41d9ed:	cwde   
  41d9ee:	rol    BYTE PTR [edx-0x39],cl
  41d9f1:	shr    DWORD PTR [eax+0xf],0x1f
  41d9f5:	jp     0x41da00
  41d9f7:	add    BYTE PTR [edx+edx*4-0x45e8f44a],cl
  41d9fe:	xor    BYTE PTR [edx-0x7fc07b90],cl
  41da04:	cmp    eax,0x51840b88
  41da09:	gs sti 
  41da0b:	jmp    DWORD PTR [ebx]
  41da0d:	leave  
  41da0e:	adc    BYTE PTR [ecx],bh
  41da10:	cdq    
  41da11:	ja     0x41da91
  41da13:	fld    DWORD PTR [ebp+0x41]
  41da16:	add    BYTE PTR [eax],al
  41da18:	dec    esp
  41da19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da1a:	rol    BYTE PTR [edx-0x2b],cl
  41da1d:	mov    eax,0x931e3b10
  41da22:	mov    edx,ss
  41da24:	pop    esp
  41da25:	xchg   ebx,eax
  41da26:	add    bl,ch
	...
  41da3c:	dec    edi
  41da3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da3e:	rol    BYTE PTR [edx-0x4b],cl
  41da41:	adc    edx,0x4e69c26b
  41da47:	or     al,0xb5
  41da49:	call   0x61f0904f
  41da4e:	fidiv  DWORD PTR [ebx]
  41da50:	das    
  41da51:	cmc    
  41da52:	adc    eax,DWORD PTR [ecx+0x35]
  41da55:	dec    eax
  41da56:	add    ecx,DWORD PTR ds:0xfd735830
  41da5c:	add    bh,BYTE PTR [esi-0x39]
  41da5f:	adc    edi,DWORD PTR [ebx+ebp*1-0x6ff381eb]
  41da66:	mov    ds:0x35e8b500,eax
  41da6b:	shl    BYTE PTR [edi+0x5f],cl
  41da6e:	xlat   BYTE PTR ds:[ebx]
  41da6f:	adc    ebx,DWORD PTR [esi+0x2b8c01aa]
  41da75:	jmp    0xea1fda7a
  41da7a:	xor    eax,0xd2b177d2
  41da7f:	imul   ebp,DWORD PTR [edx-0x4af37097],0xffffffe8
  41da86:	add    DWORD PTR [esi+0x33d761be],esi
  41da8c:	das    
  41da8d:	in     al,dx
  41da8e:	adc    eax,DWORD PTR [ecx+0x35]
  41da91:	mov    DWORD PTR [ebx],0x7383390d
  41da97:	std    
  41da98:	mov    dh,BYTE PTR ds:0xb3bc13c8
  41da9e:	sbb    BYTE PTR [esi+0x0],bh
	...
  41dab1:	add    BYTE PTR [eax],al
  41dab3:	add    BYTE PTR [ecx+edx*1-0x27],bl
  41dab7:	xor    BYTE PTR [edi-0x3eac8456],al
  41dabd:	rol    DWORD PTR [edx+0x7c],1
  41dac0:	aam    0x1
  41dac2:	push   es
  41dac3:	xor    DWORD PTR [edi-0x1ea1d256],eax
  41dac9:	mov    ebp,0x8fb96785
  41dace:	out    0x3,eax
  41dad0:	mov    al,0x25
  41dad2:	bnd jle 0x41dab8
  41dad5:	mov    ds:0x52c3ff61,eax
  41dada:	lds    ecx,FWORD PTR fs:[bp+0x236c]
  41dae0:	adc    bl,dh
  41dae2:	cmp    eax,0xf0837672
  41dae7:	enter  0x5da6,0x10
  41daeb:	pop    esi
  41daec:	les    esp,FWORD PTR [edx+0x443bc539]
  41daf2:	repz neg DWORD PTR cs:[edx-0x3d]
  41daf7:	pop    esi
  41daf8:	mov    ah,0xa2
  41dafa:	cmp    ebp,eax
  41dafc:	lods   eax,DWORD PTR ds:[esi]
  41dafd:	cmp    eax,0xa3340293
  41db02:	jmp    0x41db07
  41db04:	mov    ch,0x8e
  41db06:	cmp    eax,0xb3453dfe
  41db0b:	jge    0x41dac6
  41db0d:	sub    BYTE PTR [edx],0x84
  41db10:	loop   0x41db90
  41db12:	out    dx,al
  41db13:	xchg   esp,ecx
  41db15:	(bad)  
  41db17:	jno    0x41db19
	...
  41db29:	add    BYTE PTR [eax],al
  41db2b:	add    BYTE PTR [eax-0x9d50cad],dh
  41db31:	add    DWORD PTR [ebp+0x4b],0x2c
  41db35:	dec    ebx
  41db36:	mov    edi,0x6b8d5a2d
  41db3b:	loop   0x41dad4
  41db3d:	(bad)  [ebp-0x1913f17b]
  41db43:	add    BYTE PTR [esi],dh
  41db45:	add    ch,ah
  41db47:	add    esi,DWORD PTR [ebp+0x34783c08]
  41db4d:	rcl    BYTE PTR [eax+0x69dc0e7b],cl
  41db53:	outs   dx,BYTE PTR ds:[esi]
  41db54:	mov    al,0x8c
  41db56:	data16 jmp 0x41db08
  41db59:	pop    DWORD PTR [eax]
  41db5b:	jmp    0x15d58f25
  41db60:	push   ebx
  41db61:	sahf   
  41db62:	add    BYTE PTR [eax+0x7a],dh
  41db65:	cmp    DWORD PTR [ecx],0x89654a28
  41db6b:	scas   eax,DWORD PTR es:[edi]
  41db6c:	adc    bl,BYTE PTR [eax+0x100ddad8]
  41db72:	jle    0x41db55
  41db74:	mov    dh,0x63
  41db76:	sbb    dl,bl
  41db78:	mov    dh,0xda
  41db7a:	jne    0x41db4d
  41db7c:	xchg   ecx,eax
  41db7d:	(bad)  
  41db7e:	mov    dl,BYTE PTR [edi+0x11c106ba]
  41db84:	jge    0x41dbbd
  41db86:	std    
  41db87:	push   ds
  41db88:	xor    dl,al
  41db8a:	jb     0x41db4b
  41db8c:	jno    0x41dbd6
  41db8e:	clc    
  41db8f:	add    al,BYTE PTR [eax]
	...
  41dba1:	add    BYTE PTR [eax],al
  41dba3:	add    BYTE PTR [edx-0x3e1aa9fa],bh
  41dba9:	sar    DWORD PTR [eax],1
  41dbab:	and    esp,ebx
  41dbad:	or     BYTE PTR [edx+0x2c55a0ea],0x74
  41dbb4:	retf   
  41dbb5:	psubd  mm5,mm0
  41dbb8:	retf   0x8a98
  41dbbb:	sub    dh,BYTE PTR [esi-0x52fbb967]
  41dbc1:	mov    al,ds:0x8073ce41
  41dbc6:	aaa    
  41dbc7:	xor    al,0xbd
  41dbc9:	pop    ebx
  41dbca:	mov    cl,0xd2
  41dbcc:	mov    edi,0x7c62c8a6
  41dbd1:	push   0xbea99989
  41dbd6:	cmp    BYTE PTR [ebx-0x3e768c84],dh
  41dbdc:	stc    
  41dbdd:	push   ebp
  41dbde:	jl     0x41dc4c
  41dbe0:	mul    BYTE PTR [ebx+0x11]
  41dbe3:	sar    BYTE PTR [ebx-0x6c],cl
  41dbe6:	jbe    0x41dbe8
  41dbe8:	push   0xffffffa3
  41dbea:	lds    eax,FWORD PTR [ecx-0x1b]
  41dbed:	into   
  41dbee:	pop    eax
  41dbef:	cmp    ebx,DWORD PTR ds:0xcd698b8f
  41dbf5:	pop    edi
  41dbf6:	sti    
  41dbf7:	sbb    DWORD PTR [ecx+0x60],0x0
  41dbfb:	psrlw  mm2,QWORD PTR [edx-0x1c]
  41dbff:	dec    DWORD PTR [ebx+0xbfc59ab]
  41dc05:	adc    bl,BYTE PTR [edi]
  41dc07:	lock add BYTE PTR [eax],al
	...
  41dc1a:	add    BYTE PTR [eax],al
  41dc1c:	jnp    0x41dc7d
  41dc1e:	xchg   DWORD PTR [ebp-0x50],eax
  41dc21:	rol    DWORD PTR [ebp+0x715ec045],cl
  41dc27:	and    al,0x97
  41dc29:	aaa    
  41dc2a:	push   0x0
  41dc2c:	frstpm(287 only) 
  41dc2e:	sbb    BYTE PTR [ebx+0x18715fc7],cl
  41dc34:	xor    bl,BYTE PTR [edi+0x71]
  41dc37:	adc    BYTE PTR [ebx+0x61ff08e5],bh
  41dc3d:	fsub   st,st(4)
  41dc3f:	push   ebp
  41dc40:	mov    al,0x5f
  41dc42:	sti    
  41dc43:	dec    ebx
  41dc44:	popa   
  41dc45:	push   eax
  41dc46:	or     eax,DWORD PTR [ebp+0x8e20]
  41dc4c:	xchg   edi,eax
  41dc4d:	mov    esi,0x3a0073f8
  41dc52:	out    0xef,eax
  41dc54:	mov    ebp,DWORD PTR [ebx-0x1]
  41dc57:	fdiv   DWORD PTR [edi+0x25]
  41dc5a:	test   DWORD PTR [ebp-0x80],eax
  41dc5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc5e:	mov    ebp,0x4657467d
  41dc63:	ins    BYTE PTR es:[edi],dx
  41dc64:	xchg   DWORD PTR [edi+0x6f],eax
  41dc67:	mov    DWORD PTR [ebx+0x25],ebp
  41dc6a:	jae    0xcb36dc6
  41dc70:	iret   
  41dc71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc72:	fdiv   DWORD PTR [ebx-0x4b]
  41dc75:	pop    edx
  41dc76:	test   BYTE PTR [ecx],bh
  41dc78:	mov    edi,0x94e92883
  41dc7d:	gs push 0xa
	...
  41dc94:	loope  0x41dc52
  41dc96:	cmp    DWORD PTR [esi-0x2b],0x3683f7e8
  41dc9d:	pop    edi
  41dc9e:	stc    
  41dc9f:	jae    0x41dc45
  41dca1:	gs push 0xc
  41dca4:	shr    esp,0x83
  41dca7:	cli    
  41dca8:	cmp    cl,ch
  41dcaa:	add    BYTE PTR [eax],al
  41dcac:	mov    edx,0x22fcde73
  41dcb1:	push   edx
  41dcb2:	sar    esp,0x70
  41dcb5:	les    ebp,FWORD PTR [ebx]
  41dcb7:	dec    ebx
  41dcb8:	test   eax,0x95e7ab24
  41dcbd:	test   eax,0xd2befd6d
  41dcc2:	fmul   QWORD PTR [esi+esi*1]
  41dcc5:	mov    esp,0xf1f2fd6d
  41dcca:	mov    dl,0x11
  41dccc:	ss jg  0x41dcca
  41dccf:	or     al,0x39
  41dcd1:	push   ds
  41dcd2:	outs   dx,BYTE PTR ds:[esi]
  41dcd3:	std    
  41dcd4:	fisub  DWORD PTR [ebp+0x6a]
  41dcd7:	and    dl,al
  41dcd9:	ins    BYTE PTR es:[edi],dx
  41dcda:	ret    0xcafc
  41dcdd:	jmp    0xe957d765
  41dce2:	add    BYTE PTR [eax],al
  41dce4:	stos   BYTE PTR es:[edi],al
  41dce5:	je     0x41dd1a
  41dce7:	std    
  41dce8:	mov    dl,0xc1
  41dcea:	sar    DWORD PTR [edi],0xee
  41dced:	daa    
  41dcee:	in     eax,dx
  41dcef:	iret   
  41dcf0:	mov    WORD PTR [ebp+0x6d],?
  41dcf3:	std    
  41dcf4:	call   0x0:0x6bce8d
	...
  41dd0b:	add    dl,al
  41dd0d:	gs stc 
  41dd0f:	cld    
  41dd10:	mov    ch,BYTE PTR [ecx]
  41dd12:	(bad)  
  41dd13:	mov    ch,0xa6
  41dd15:	(bad)
  41dd19:	arpl   ax,di
  41dd1b:	sub    BYTE PTR [edi-0x51],0x1b
  41dd1f:	add    dl,ch
  41dd21:	aad    0x46
  41dd23:	add    esi,DWORD PTR [ebp-0x4d770971]
  41dd29:	fidivr DWORD PTR [ebp+0x6e]
  41dd2c:	hlt    
  41dd2d:	dec    edi
  41dd2e:	mov    dl,0x44
  41dd30:	leave  
  41dd31:	mov    bh,0x7f
  41dd33:	ins    DWORD PTR es:[edi],dx
  41dd34:	inc    ebx
  41dd35:	fisub  DWORD PTR [ebp+0x2a]
  41dd38:	fld    TBYTE PTR [ebx-0x12]
  41dd3b:	or     BYTE PTR [ecx+ebx*8],0x55
  41dd3f:	outs   dx,BYTE PTR ds:[esi]
  41dd40:	mov    eax,0x1f82fa21
  41dd45:	test   esi,esi
  41dd47:	xchg   DWORD PTR [edx],edx
  41dd49:	fnstcw WORD PTR ds:0xe1d5346e
  41dd4f:	(bad)  
  41dd50:	ss out dx,eax
  41dd52:	sub    al,0x6e
  41dd54:	add    BYTE PTR [esi],cl
  41dd56:	and    edi,edi
  41dd58:	test   eax,0xf06d3613
  41dd5d:	fldcw  WORD PTR [ecx+0x69]
  41dd60:	mov    esi,0xe33d638a
  41dd65:	fld    DWORD PTR ds:0xe713df84
  41dd6b:	add    esi,DWORD PTR [ebp+0x416b8a]
	...
  41dd81:	add    BYTE PTR [eax],al
  41dd83:	add    bl,cl
  41dd85:	fldln2 
  41dd87:	rol    DWORD PTR [edx-0x70f576a],0xe7
  41dd8e:	xchg   ebp,eax
  41dd8f:	outs   dx,BYTE PTR ds:[esi]
  41dd90:	mov    al,0xd9
  41dd92:	adc    esi,ecx
  41dd94:	push   ds
  41dd95:	mov    DWORD PTR [edx-0x68],ebp
  41dd98:	mov    ds:0x60fdc5d9,eax
  41dd9d:	jge    0x41de09
  41dd9f:	push   0xffffffbf
  41dda1:	arpl   WORD PTR [eax],ax
  41dda3:	shl    BYTE PTR ds:0xab3508d6,cl
  41dda9:	push   cs
  41ddaa:	cli    
  41ddab:	cmc    
  41ddac:	or     BYTE PTR [edx+0x5d72a381],0xc
  41ddb3:	push   0xe9000cdf
  41ddb8:	mov    dh,0x8a
  41ddba:	xor    DWORD PTR [edx-0x35],0xffffffda
  41ddbe:	cld    
  41ddbf:	sub    bh,BYTE PTR [ecx-0x68]
  41ddc2:	mov    edi,0x7ff088f5
  41ddc7:	outs   dx,DWORD PTR ds:[esi]
  41ddc8:	rcr    dl,1
  41ddca:	xchg   BYTE PTR [edx+eiz*4-0x4c11406a],ch
  41ddd1:	pop    esp
  41ddd2:	(bad)  
  41ddd3:	push   esi
  41ddd4:	cwde   
  41ddd5:	xchg   esi,eax
  41ddd6:	pop    esi
  41ddd7:	mov    ebp,0x47521021
  41dddc:	mov    dl,bl
  41ddde:	or     al,0x77
  41dde0:	mov    ah,0x6
  41dde2:	push   esi
  41dde3:	std    
  41dde4:	adc    BYTE PTR [ebx+0xe510],0x0
	...
  41ddfb:	add    BYTE PTR [ecx],al
  41ddfd:	push   cs
  41ddfe:	pop    esp
  41ddff:	daa    
  41de00:	mov    dl,bl
  41de02:	inc    eax
  41de03:	push   ds
  41de04:	cli    
  41de05:	jl     0x41de3e
  41de07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de08:	ret    0xde5b
  41de0b:	add    BYTE PTR [ebx],ah
  41de0d:	(bad)  
  41de0f:	push   es
  41de10:	pop    esi
  41de11:	dec    esp
  41de12:	adc    al,0xc2
  41de14:	ja     0x41dda0
  41de16:	mov    ebp,DWORD PTR [edx-0x4d0325a8]
  41de1c:	lock fs or eax,0xfcd9966a
  41de23:	fidiv  WORD PTR [ecx-0x7f9dfede]
  41de29:	pushf  
  41de2a:	mul    ch
  41de2c:	(bad)  
  41de2d:	xchg   ebx,eax
  41de2e:	or     eax,0xfe770800
  41de33:	call   DWORD PTR [ebx-0x31]
  41de36:	sti    
  41de37:	inc    ebp
  41de38:	push   0xd01449a5
  41de3d:	dec    ecx
  41de3e:	in     eax,0x1c
  41de40:	push   edx
  41de41:	imul   edi,ebx,0xffffff89
  41de44:	cdq    
  41de45:	ja     0x41de7e
  41de47:	rcl    DWORD PTR [ebx+0x59],0xd
  41de4b:	(bad)  
  41de4c:	xor    ebp,DWORD PTR [ebx+0x37]
  41de4f:	pop    esi
  41de50:	rcr    dl,0x7f
  41de53:	out    dx,al
  41de54:	shr    DWORD PTR [ebx-0x5],1
  41de57:	jp     0x89865ec
  41de5d:	bound  eax,QWORD PTR [eax+edx*1]
	...
  41de74:	dec    ebp
  41de75:	fild   DWORD PTR [ecx-0x4946e08]
  41de7b:	inc    ebx
  41de7c:	adc    ecx,0x10
  41de7f:	cmp    DWORD PTR [ecx-0x80],eax
  41de82:	jl     0x41de62
  41de84:	test   DWORD PTR [esi],esi
  41de86:	stc    
  41de87:	call   ebx
  41de89:	push   ebp
  41de8a:	inc    ecx
  41de8b:	adc    al,0x7
  41de8d:	dec    ebp
  41de8e:	or     ecx,DWORD PTR [ebp-0x4964d]
  41de94:	pop    ss
  41de95:	retf   0xf68
  41de98:	pop    edi
  41de99:	sub    cl,bh
  41de9b:	inc    ebx
  41de9d:	(bad)  [edx+0x30c25703]
  41dea3:	test   al,0x7b
  41dea6:	std    
  41dea7:	push   cs
  41dea8:	pop    eax
  41dea9:	push   edx
  41deaa:	stc    
  41deab:	inc    ebx
  41dead:	pop    ss
  41deae:	cld    
  41deaf:	inc    ebp
  41deb0:	call   0x50562859
  41deb5:	inc    ebp
  41deb6:	in     eax,0xb8
  41deb8:	xchg   ecx,eax
  41deb9:	imul   edi,ebx,0xffffff89
  41debc:	mov    ch,0xa3
  41debe:	adc    BYTE PTR [ecx],bh
  41dec0:	je     0x41de78
  41dec2:	ja     0x41de6f
  41dec4:	cwde   
  41dec5:	into   
  41dec6:	push   0xf944f339
  41decb:	cmp    BYTE PTR [edi],0x1c
  41dece:	imul   edi,ebp,0x89055eb2
  41ded4:	jecxz  0x41de8a
  41ded6:	outs   dx,BYTE PTR ds:[esi]
  41ded7:	add    al,0x0
	...
  41dee9:	add    BYTE PTR [eax],al
  41deeb:	add    ch,al
  41deed:	fdivr  st,st(1)
  41deef:	add    BYTE PTR [ecx-0x4],0x68
  41def3:	std    
  41def4:	test   BYTE PTR ds:0x9b9c13bf,0x10
  41defb:	jl     0x41df70
  41defd:	add    BYTE PTR [edx+0x7b5e4afb],al
  41df03:	inc    ebx
  41df04:	test   eax,0x280d4421
  41df09:	repnz addr16 std 
  41df0c:	xor    dh,BYTE PTR [edx+0x69ba6bca]
  41df12:	int3   
  41df13:	cli    
  41df14:	and    al,BYTE PTR [esi-0x7]
  41df17:	mov    ch,0xb6
  41df19:	popa   
  41df1a:	shl    BYTE PTR [ebx],cl
  41df1c:	or     ebp,ebp
  41df1e:	adc    BYTE PTR [eax],dl
  41df20:	mov    edx,0x2fae664
  41df25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df26:	(bad)  
  41df29:	aam    0x2b
  41df2b:	dec    ebx
  41df2c:	leave  
  41df2d:	hlt    
  41df2e:	inc    esi
  41df2f:	out    0x81,eax
  41df31:	jnp    0x41df9c
  41df33:	std    
  41df34:	mov    dl,0x3e
  41df36:	rol    DWORD PTR [ebx],0xaa
  41df39:	xchg   esi,eax
  41df3a:	mov    ecx,0xfc88f402
  41df3f:	or     ah,dh
  41df41:	imul   ebp,eax,0x4
  41df44:	mov    dh,0x91
  41df46:	stc    
  41df47:	or     al,0x3
  41df49:	nop
  41df4a:	cs add eax,0x62e1dc0
	...
  41df64:	push   0xffffffef
  41df66:	fdivp  st(6),st
  41df68:	arpl   WORD PTR [edx+0x3bd883cf],dx
  41df6e:	cmp    ebx,DWORD PTR [eax-0x66]
  41df71:	add    al,bl
  41df73:	push   0xffffff88
  41df75:	xchg   BYTE PTR [ebp-0x46],bh
  41df78:	mov    ch,0x86
  41df7a:	jne    0x41df4e
  41df7c:	mov    dh,0xd0
  41df7e:	xchg   ebx,edi
  41df80:	mov    ebp,0x66b86fc9
  41df85:	xchg   edx,eax
  41df86:	mov    al,ds:0xde7bf32e
  41df8b:	ja     0x41df2b
  41df8d:	xchg   edx,eax
  41df8e:	out    0x3,eax
  41df90:	xor    al,0xd7
  41df92:	pop    es
  41df93:	call   0x246dae4b
  41df98:	mov    bh,0x8f
  41df9a:	out    0x3,eax
  41df9c:	dec    esp
  41df9d:	inc    esi
  41df9e:	push   0xffffffe0
  41dfa0:	ror    BYTE PTR [edi+0x4c3dbc52],cl
  41dfa6:	or     eax,esp
  41dfa8:	jb     0x41df80
  41dfaa:	shl    DWORD PTR [ebx],cl
  41dfac:	test   al,0x1d
  41dfae:	out    dx,al
  41dfaf:	push   0xffffff86
  41dfb1:	jae    0x41dfa1
  41dfb3:	mov    cl,0x25
  41dfb5:	dec    edi
  41dfb6:	xchg   edi,eax
  41dfb7:	ret    
  41dfb8:	add    dl,ch
  41dfba:	mov    bl,0xb
  41dfbc:	mov    ah,0xbe
  41dfbe:	mov    esp,0x727f666a
  41dfc3:	ds call 0xacc324
	...
  41dfd9:	add    BYTE PTR [eax],al
  41dfdb:	add    BYTE PTR [esi-0x79],ah
  41dfde:	dec    ebp
  41dfe0:	sti    
  41dfe1:	aad    0x5
  41dfe3:	xor    ch,0x5a
  41dfe6:	repnz sub BYTE PTR [ebx+0x4cf5ffd3],ch
  41dfed:	test   BYTE PTR [ebx-0x32a446b],al
  41dff3:	mul    BYTE PTR [ebx+ecx*2-0x1]
  41dff7:	in     eax,dx
  41dff8:	fs inc ebx
  41dffa:	add    ch,BYTE PTR [eax-0x57f677e7]
  41e000:	mov    al,0xd7
  41e002:	or     al,0x7f
  41e004:	je     0x41dfdc
  41e006:	or     eax,0xbf8f4c77
  41e00b:	leave  
  41e00c:	or     DWORD PTR [eax-0x68329641],0xf151d54
  41e016:	jnp    0x41dfe1
  41e018:	mov    dh,0x82
  41e01a:	or     DWORD PTR [ebx-0x48],0xffffff8f
  41e01e:	add    dh,bl
  41e020:	and    al,0x8b
  41e022:	or     eax,0x5050393f
  41e027:	sub    DWORD PTR [ecx+0x6782f88e],esi
  41e02d:	or     BYTE PTR [ebx-0x2b],dl
  41e030:	pop    eax
  41e031:	(bad)  
  41e032:	std    
  41e033:	fdivr  QWORD PTR [edx+0x70172d2]
  41e039:	aam    0x72
  41e03b:	stc    
  41e03c:	lea    esp,[eax+0xc]
  41e03f:	dec    esi
	...
  41e054:	or     cl,BYTE PTR [ebp-0x2d66be18]
  41e05a:	cld    
  41e05b:	fs jno 0x41dfe0
  41e05e:	xor    DWORD PTR [ecx],0x3
  41e061:	aad    0xfc
  41e063:	bound  edx,QWORD PTR [edx]
  41e065:	jne    0x41e050
  41e067:	shl    BYTE PTR [ecx+0x48],cl
  41e06a:	and    al,0x72
  41e06c:	cli    
  41e06d:	cmp    BYTE PTR [edi],0xb8
  41e070:	push   es
  41e071:	aam    0x72
  41e073:	in     eax,dx
  41e074:	pop    ecx
  41e075:	(bad)  
  41e076:	cld    
  41e077:	add    BYTE PTR [ecx+0x38],dl
  41e07a:	push   esi
  41e07b:	inc    DWORD PTR [ecx-0x80]
  41e07e:	sti    
  41e07f:	jne    0x41e059
  41e081:	addr16 jno 0x41e08c
  41e084:	mov    ah,0x92
  41e086:	loopne 0x41e087
  41e088:	fwait
  41e089:	push   ebp
  41e08a:	ror    BYTE PTR [edi],0x11
  41e08d:	xchg   esp,eax
  41e08e:	or     al,BYTE PTR [eax]
  41e090:	mov    WORD PTR [ebx],cs
  41e092:	ret    
  41e093:	add    ecx,DWORD PTR [edi]
  41e095:	mov    dh,0x1c
  41e097:	add    BYTE PTR [edi],al
  41e099:	(bad)  
  41e09a:	aaa    
  41e09b:	inc    esi
  41e09c:	nop
  41e09d:	addr16 push es
  41e09f:	femms  
  41e0a1:	push   eax
  41e0a2:	loopne 0x41e0a3
  41e0a4:	dec    ebx
  41e0a5:	mov    dl,0xf4
  41e0a7:	jmp    0x3eb3b7
  41e0ac:	(bad)  
  41e0ad:	xor    ah,ch
  41e0af:	test   al,0x56
  41e0b1:	nop
  41e0b2:	add    BYTE PTR [ebx-0x49f45047],cl
	...
  41e0cc:	mov    bl,0x90
  41e0ce:	cmp    eax,0x1ce5cb51
  41e0d3:	lea    edx,[ebx+0x6875fb8d]
  41e0d9:	pop    ecx
  41e0da:	inc    ecx
  41e0db:	or     al,0x9b
  41e0dd:	in     eax,0x14
  41e0df:	mov    esp,edi
  41e0e1:	mov    esi,0xc01c75fb
  41e0e6:	or     esi,DWORD PTR [esi-0x7f4d28ed]
  41e0ec:	pop    esp
  41e0ed:	sar    BYTE PTR [eax+eax*1],0xcb
  41e0f1:	in     eax,0x4
  41e0f3:	add    edx,ebx
  41e0f5:	mov    edx,eax
  41e0f7:	call   0x3d5134
  41e0fc:	addr16 push 0x6be9ff7d
  41e102:	sti    
  41e103:	push   DWORD PTR [ebp+0x63fd05f3]
  41e109:	mul    BYTE PTR [edi+0x73]
  41e10c:	ror    DWORD PTR [ebp+0x26a3680e],0x1
  41e113:	push   edi
  41e114:	pop    esp
  41e115:	arpl   WORD PTR [ecx+0x73],ax
  41e118:	scas   al,BYTE PTR es:[edi]
  41e119:	outs   dx,DWORD PTR ds:[esi]
  41e11a:	(bad)  
  41e11b:	outs   dx,DWORD PTR ds:[esi]
  41e11c:	inc    eax
  41e11d:	mov    ds:0xdef8e765,al
  41e122:	add    BYTE PTR [eax],al
  41e124:	ss sti 
  41e126:	xchg   DWORD PTR [eax],eax
  41e128:	mov    ch,0xe8
  41e12a:	add    BYTE PTR [ebx-0x44],dh
  41e12d:	pop    ebp
  41e12e:	mov    edi,0xb
	...
  41e143:	add    BYTE PTR [ebx+ebp*2],bh
  41e146:	mov    BYTE PTR [eax],al
  41e148:	mov    ch,0xe8
  41e14a:	jns    0x41e111
  41e14c:	mov    ebp,ds
  41e14e:	idiv   bh
  41e150:	jb     0x41e1b0
  41e152:	mov    edi,0x6598f523
  41e157:	jae    0x41e0ee
  41e159:	jmp    0x7c9be708
  41e15e:	or     BYTE PTR ds:0x4fc4390b,cl
  41e164:	cmc    
  41e165:	call   0xe5df54cf
  41e16a:	dec    ebp
  41e16b:	push   esi
  41e16c:	cmp    bl,ah
  41e16e:	adc    BYTE PTR [ecx+0xbef69fe],cl
  41e174:	sub    bh,BYTE PTR [eax+edi*8+0x6548b4e7]
  41e17b:	std    
  41e17c:	xor    BYTE PTR [ecx-0x214b7d0b],ch
  41e182:	add    BYTE PTR [eax],al
  41e184:	dec    ebp
  41e185:	out    dx,eax
  41e186:	fs std 
  41e188:	add    dl,BYTE PTR [eax-0x76]
  41e18b:	jmp    0x43bb838a
  41e190:	cdq    
  41e191:	(bad)  
  41e192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e193:	shr    ecx,cl
  41e195:	pop    esp
  41e196:	(bad)  
  41e197:	imul   BYTE PTR [eax]
  41e199:	mov    edx,DWORD PTR [esi]
  41e19b:	icebp  
  41e19c:	mov    esi,0x75945582
  41e1a1:	aas    
  41e1a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1a3:	add    ecx,eax
  41e1a5:	pop    esp
  41e1a6:	fild   WORD PTR [edx]
	...
  41e1bc:	call   0xab32d7fa
  41e1c1:	push   es
  41e1c2:	and    ah,BYTE PTR [edi+0x26]
  41e1c5:	test   dh,ah
  41e1c7:	lock mov dl,0xe7
  41e1ca:	mov    ds:0x6bd2a046,al
  41e1cf:	inc    ebx
  41e1d0:	test   al,0xc
  41e1d2:	mov    ds:0x7ed292fc,eax
  41e1d7:	or     cl,BYTE PTR [ecx-0x21a3422e]
  41e1dd:	out    0xb5,al
  41e1df:	data16 sub al,0x4c
  41e1e2:	add    esi,edi
  41e1e4:	sub    BYTE PTR [edx],bh
  41e1e6:	call   0x1414dcae
  41e1eb:	and    al,0xb0
  41e1ed:	sbb    esi,ebp
  41e1ef:	data16 out 0x73,al
  41e1f2:	fisubr WORD PTR [ebp-0x3be8b0cb]
  41e1f8:	dec    edx
  41e1f9:	shl    ebx,1
  41e1fb:	or     esi,DWORD PTR [edx+ecx*8+0x7fc6671c]
  41e202:	jmp    0xfc7a:0xf35c3053
  41e209:	rcl    ebx,1
  41e20b:	sti    
  41e20c:	sbb    dl,BYTE PTR [eax]
  41e20e:	data16 sbb BYTE PTR ss:[edi+eiz*1],cl
  41e213:	div    BYTE PTR [edi]
  41e215:	adc    al,dh
  41e217:	add    esi,DWORD PTR [ebp+0x67e217]
  41e21d:	sar    bh,cl
  41e21f:	imul   eax,DWORD PTR [eax],0x0
	...
  41e231:	add    BYTE PTR [eax],al
  41e233:	add    BYTE PTR [ebx+0x3a6f878d],bh
  41e239:	pop    DWORD PTR [eax]
  41e23b:	jmp    0xe94943c9
  41e240:	mov    dh,0x8
  41e242:	inc    ebx
  41e243:	int    0xf6
  41e245:	inc    ecx
  41e246:	std    
  41e247:	xchg   esp,eax
  41e248:	xchg   esi,eax
  41e249:	test   BYTE PTR [esi+0x1c5e53ee],dh
  41e24f:	out    dx,al
  41e250:	adc    bh,bh
  41e252:	aas    
  41e253:	cdq    
  41e254:	not    cl
  41e256:	std    
  41e257:	je     0x41e217
  41e259:	mov    ss,ebp
  41e25b:	aas    
  41e25c:	adc    BYTE PTR [ebp+0x10],bl
  41e25f:	jb     0x41e23d
  41e261:	shl    BYTE PTR [edx-0x1b],cl
  41e264:	adc    DWORD PTR [ebp+0x8],ebx
  41e267:	rcr    esp,0xb2
  41e26a:	cld    
  41e26b:	(bad)  
  41e26c:	or     dl,al
  41e26e:	or     al,0x64
  41e270:	int3   
  41e271:	mov    BYTE PTR [eax],al
  41e273:	jmp    0x71b21477
  41e278:	mov    ebp,0xea6fcd3
  41e27d:	shr    ecx,0x9e
  41e280:	fadd   DWORD PTR [esi]
  41e282:	inc    ebx
  41e283:	int    0x61
  41e285:	sbb    edx,DWORD PTR [ebp-0x18]
  41e288:	jbe    0x41e2cb
  41e28a:	std    
  41e28b:	cld    
  41e28c:	xchg   esi,eax
  41e28d:	xor    BYTE PTR [esi+0x1c5cd9e6],0xe6
  41e294:	or     BYTE PTR [eax],dl
  41e296:	inc    eax
  41e297:	sbb    DWORD PTR [eax],eax
	...
  41e2a9:	add    BYTE PTR [eax],al
  41e2ab:	add    cl,bh
  41e2ad:	sar    ch,1
  41e2af:	fdivr  QWORD PTR [esi-0x66483a72]
  41e2b5:	pop    esp
  41e2b6:	adc    dl,ch
  41e2b8:	xchg   dl,dl
  41e2ba:	jb     0x41e299
  41e2bc:	(bad)  
  41e2bd:	(bad)  
  41e2be:	cld    
  41e2bf:	add    BYTE PTR [ecx-0x2b],cl
  41e2c2:	in     al,0xf5
  41e2c4:	mov    ds:0xcc85fb6a,al
  41e2c9:	fiadd  DWORD PTR [ecx+0x8cd4f5]
  41e2cf:	sbb    DWORD PTR [ebx+0x3c7e858d],0x25
  41e2d6:	sbb    esp,edi
  41e2d8:	ret    
  41e2d9:	push   0xffffffe5
  41e2db:	in     eax,0xd4
  41e2dd:	mov    WORD PTR [eax],es
  41e2df:	mov    ebx,DWORD PTR [ecx]
  41e2e1:	jno    0x41e323
  41e2e3:	push   eax
  41e2e4:	ret    
  41e2e5:	loope  0x41e303
  41e2e7:	(bad)  
  41e2e9:	sar    bl,cl
  41e2eb:	jne    0x41e26d
  41e2ed:	(bad)  [edx+0x3cbbdc90]
  41e2f3:	add    BYTE PTR [ebx+0x5b0314e1],al
  41e2f9:	ret    0x75fb
  41e2fc:	mov    WORD PTR [edi-0x39],ss
  41e2ff:	dec    ecx
  41e301:	xlat   BYTE PTR ds:[ebx]
  41e302:	sti    
  41e303:	jne    0x41e289
  41e305:	xor    al,0xb2
  41e307:	fiadd  WORD PTR [ebx+0x6b]
  41e30a:	add    eax,0x8b25193
	...
  41e324:	pop    esp
  41e325:	mov    WORD PTR [eax-0x494bfe2],?
  41e32b:	jmp    0x3d18c7
  41e330:	xlat   BYTE PTR ds:[ebx]
  41e331:	adc    DWORD PTR [ecx],esp
  41e333:	jp     0x9c81e0fc
  41e339:	push   0x71
  41e33b:	and    BYTE PTR [ebx+0x22],dl
  41e33e:	add    edi,edi
  41e340:	sub    DWORD PTR [eax-0x336349f5],ecx
  41e346:	dec    esp
  41e347:	inc    eax
  41e348:	or     al,0x6b
  41e34a:	jno    0x41e364
  41e34c:	mov    ch,0xe5
  41e34e:	cmp    edx,DWORD PTR [esi+0x12]
  41e351:	mov    ebx,0x48e50110
  41e356:	out    dx,al
  41e357:	or     ebp,DWORD PTR [esi]
  41e359:	popf   
  41e35a:	fs jae 0x41e30a
  41e35d:	dec    esi
  41e35e:	aam    0xdd
  41e360:	repnz mov al,ds:0x63bac07e
  41e366:	aam    0x7
  41e368:	mov    ch,0xe6
  41e36a:	test   al,0x1e
  41e36c:	fnstcw WORD PTR [eax+0x64]
  41e36f:	out    0xdc,eax
  41e371:	jg     0x41e3d7
  41e373:	std    
  41e374:	ds and ch,dh
  41e377:	mov    esi,0x1477e3d4
  41e37c:	mov    ah,0x6f
  41e37e:	mov    dh,0x13
  41e380:	ds sub eax,0x843c0402
  41e386:	jo     0x41e311
	...
  41e39c:	repz enter 0x4b2d,0xa1
  41e3a1:	xor    BYTE PTR [edi-0x774abf11],dh
  41e3a7:	mov    DWORD PTR [ebp+0x2ef7cf3f],edi
  41e3ad:	aas    
  41e3ae:	mov    BYTE PTR [eax],al
  41e3b0:	mov    ch,0xb8
  41e3b2:	mov    ecx,DWORD PTR [ebx+0x5d]
  41e3b5:	xor    cl,BYTE PTR [ebp+0x29]
  41e3b8:	sti    
  41e3b9:	mov    al,ds:0x9b617b85
  41e3be:	mov    ecx,DWORD PTR [eax]
  41e3c0:	loopne 0x41e371
  41e3c2:	dec    ecx
  41e3c3:	inc    ebx
  41e3c4:	xchg   ebp,eax
  41e3c5:	mov    edx,0x21b50000
  41e3ca:	or     BYTE PTR [ecx-0x76ff2728],al
  41e3d0:	lock fadd st(0),st
  41e3d3:	xchg   BYTE PTR [eax-0x2c],bh
  41e3d6:	popa   
  41e3d7:	jae    0x41e3aa
  41e3d9:	(bad)  
  41e3da:	neg    BYTE PTR [ecx+0x23d3ceb8]
  41e3e0:	test   al,0x5
  41e3e2:	ja     0x41e3a8
  41e3e4:	or     BYTE PTR [edi-0x19],0x62
  41e3e8:	xchg   BYTE PTR [ebx+0x45003aea],ch
  41e3ee:	fisttp WORD PTR [esi-0x26c99a14]
  41e3f4:	ret    0xb3ce
  41e3f7:	psubsb mm0,QWORD PTR [edi+ebp*8+0x6b]
  41e3fc:	fucomi st,st(4)
  41e3fe:	sbb    eax,0x63
	...
  41e413:	add    BYTE PTR [esi],dh
  41e415:	rcr    BYTE PTR [edx+0xbad8e0e],1
  41e41b:	arpl   ax,cx
  41e41d:	sahf   
  41e41e:	ins    BYTE PTR es:[edi],dx
  41e41f:	inc    ebx
  41e420:	mov    eax,0x6e8ee78f
  41e425:	mov    bh,0x5f
  41e427:	xchg   edx,eax
  41e428:	cmp    DWORD PTR [edi+0x5b803e7],ecx
  41e42e:	ss add eax,0x63605b0
  41e434:	pop    edx
  41e435:	mov    al,0xde
  41e437:	push   cs
  41e438:	jg     0x41e3cc
  41e43a:	rol    BYTE PTR [ebx-0x50c49c38],1
  41e440:	sub    al,0x65
  41e442:	jmp    0x41e3d2
  41e444:	out    dx,al
  41e445:	mov    ds:0x1862e062,eax
  41e44a:	jmp    0x41e440
  41e44c:	cmp    eax,0xde8ef365
  41e451:	mov    ebx,0x93abdf6f
  41e456:	(bad)  
  41e458:	ret    0x1c7a
  41e45b:	pop    eax
  41e45c:	cmp    al,0x65
  41e45e:	repz mov ?,WORD PTR [esi+0x2f1f6fc7]
  41e465:	mov    WORD PTR [eax],es
  41e467:	xlat   BYTE PTR ds:[ebx]
  41e468:	xchg   edx,eax
  41e469:	int3   
  41e46a:	cld    
  41e46b:	cmc    
  41e46c:	mov    ecx,0x31f54318
  41e471:	adc    eax,0x8fb6e99c
  41e476:	xor    DWORD PTR [ecx],ebp
	...
  41e48c:	mov    eax,ds:0xb6e90515
  41e491:	sbb    BYTE PTR [ebx+0xd],al
  41e494:	stc    
  41e495:	pop    ebp
  41e496:	std    
  41e497:	mov    ah,0xd6
  41e499:	pushf  
  41e49a:	mov    dh,0xee
  41e49c:	push   edi
  41e49d:	inc    edx
  41e49e:	sbb    al,0xde
  41e4a0:	dec    esp
  41e4a1:	pop    ds
  41e4a2:	inc    eax
  41e4a3:	mov    ecx,0x94fdcdf6
  41e4a8:	fimul  WORD PTR [esi+0x4257bfd5]
  41e4ae:	adc    BYTE PTR [edx+0x7b],ah
  41e4b1:	int3   
  41e4b2:	jb     0x41e4a9
  41e4b4:	push   edi
  41e4b5:	inc    edx
  41e4b6:	or     BYTE PTR [ecx],dl
  41e4b8:	add    ebp,ecx
  41e4ba:	cld    
  41e4bb:	idiv   BYTE PTR [edx]
  41e4bd:	ror    BYTE PTR [esp+eiz*2],1
  41e4c0:	arpl   WORD PTR [eax+eax*1-0x1842f017],dx
  41e4c7:	ficom  WORD PTR [edi+eax*4]
  41e4ca:	pop    ebx
  41e4cb:	loope  0x41e538
  41e4cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4ce:	aaa    
  41e4cf:	pop    ds
  41e4d0:	dec    ebp
  41e4d1:	inc    edx
  41e4d2:	scas   al,BYTE PTR es:[edi]
  41e4d3:	add    BYTE PTR [edi+0x65],ah
  41e4d6:	je     0x41e4c7
  41e4d8:	sub    DWORD PTR [esi],edx
  41e4da:	mov    cl,ch
  41e4dc:	mov    dh,0x8f
  41e4de:	add    DWORD PTR [edi],esp
  41e4e0:	pop    ecx
  41e4e1:	xchg   BYTE PTR [ebx-0xf],al
  41e4e4:	mov    ch,BYTE PTR [eax]
  41e4e6:	mov    DWORD PTR [ecx+eiz*2],esp
  41e4e9:	push   ss
  41e4ea:	xchg   BYTE PTR [ecx-0x47],ch
  41e4ed:	pop    DWORD PTR [eax]
  41e4ef:	bound  eax,QWORD PTR [eax]
	...
  41e501:	add    BYTE PTR [eax],al
  41e503:	add    BYTE PTR [edx-0x6b],dh
  41e506:	xchg   DWORD PTR [eax],eax
  41e508:	xchg   edx,eax
  41e509:	jecxz  0x41e492
  41e50b:	inc    ebp
  41e50c:	dec    eax
  41e50d:	sbb    al,BYTE PTR [esi+0x911c9c]
  41e513:	mov    edx,ecx
  41e515:	das    
  41e516:	repz fdiv DWORD PTR [edi+0x78182153]
  41e51d:	cs sti 
  41e51f:	mov    DWORD PTR [edx-0x1b],ecx
  41e522:	cmp    al,0xe9
  41e524:	adc    BYTE PTR [eax+0x50ff0000],bl
  41e52a:	inc    eax
  41e52b:	jmp    0x427ee8
  41e530:	(bad)  [esi]
  41e532:	inc    ebx
  41e533:	add    DWORD PTR [ebx],ecx
  41e535:	daa    
  41e536:	push   ebx
  41e537:	add    ah,BYTE PTR [edi-0x1f]
  41e53a:	pusha  
  41e53b:	shr    DWORD PTR [ebx+ebx*4+0x51dfc207],0x85
  41e543:	inc    ebp
  41e544:	cld    
  41e545:	stos   DWORD PTR es:[edi],eax
  41e546:	mov    ebp,0x6113d275
  41e54b:	aam    0xcc
  41e54d:	cmp    edx,DWORD PTR [eax]
  41e54f:	pslld  mm3,mm3
  41e552:	dec    DWORD PTR [esi]
  41e554:	loop   0x41e529
  41e556:	add    cl,al
  41e558:	ins    DWORD PTR es:[edi],dx
  41e559:	cwde   
  41e55a:	pop    es
  41e55b:	enter  0xde25,0xd0
  41e55f:	mov    esp,DWORD PTR [edx]
  41e561:	inc    ebp
  41e562:	add    BYTE PTR [eax],al
  41e564:	pushf  
  41e565:	sbb    DWORD PTR [ecx-0x30],eax
	...
  41e57c:	or     esi,edx
  41e57e:	int3   
  41e57f:	mov    DWORD PTR [edx],edx
  41e581:	inc    ebp
  41e582:	add    BYTE PTR [eax],al
  41e584:	pop    esp
  41e585:	sbb    eax,DWORD PTR [esi+0x10]
  41e588:	fist   WORD PTR [edi-0x1]
  41e58b:	mov    BYTE PTR [ecx+0x2c45858b],bl
  41e591:	adc    edi,eax
  41e593:	push   ds
  41e594:	mov    ch,0xa5
  41e596:	or     ecx,DWORD PTR [ebx-0x2a0d9c8]
  41e59c:	inc    edx
  41e59d:	aas    
  41e59e:	into   
  41e59f:	fisttp DWORD PTR [esi-0x16]
  41e5a2:	mov    ecx,eax
  41e5a4:	hlt    
  41e5a5:	push   ss
  41e5a6:	add    edi,ebp
  41e5a8:	ror    dh,0x47
  41e5ab:	inc    ecx
  41e5ac:	mov    ch,0x3f
  41e5ae:	(bad)  
  41e5af:	(bad)  [eax]
  41e5b1:	jbe    0x41e589
  41e5b3:	add    al,0x9f
  41e5b5:	pusha  
  41e5b6:	push   0xffffff83
  41e5b8:	mov    bl,0xb6
  41e5ba:	add    BYTE PTR [ecx-0x1fbda988],cl
  41e5c0:	mov    bh,0x26
  41e5c2:	pusha  
  41e5c3:	jbe    0x41e586
  41e5c5:	test   esi,edx
  41e5c7:	fucomi st,st(2)
  41e5c9:	loop   0x41e597
  41e5cb:	adc    eax,0x438bb675
  41e5d0:	lds    eax,FWORD PTR [ecx-0x32]
  41e5d3:	and    edi,DWORD PTR [ebx+edi*8]
  41e5d6:	mov    DWORD PTR fs:[eax-0x2a],esi
  41e5da:	mov    al,BYTE PTR [eax]
  41e5dc:	ss jp  0x41e5ec
  41e5df:	cmp    al,0x0
	...
  41e5f1:	add    BYTE PTR [eax],al
  41e5f3:	add    BYTE PTR [ecx+esi*4+0x5f],dl
  41e5f7:	sbb    DWORD PTR [edx-0x483a7f3d],0xd94b89f7
  41e601:	mov    cl,0xd6
  41e603:	and    ebp,DWORD PTR [edx+0x4b0d4422]
  41e609:	dec    ecx
  41e60a:	les    ecx,FWORD PTR [edi-0xb]
  41e60d:	mov    eax,0xa9d55301
  41e612:	pop    ebp
  41e613:	jae    0x41e5ae
  41e615:	cmp    eax,0xe0e8fd49
  41e61a:	mov    dl,0xfc
  41e61c:	loopne 0x41e606
  41e61e:	pop    ebp
  41e61f:	jae    0x41e5d2
  41e621:	(bad)  
  41e622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e623:	fnstenv [edx+0x503fc2b7]
  41e629:	retf   
  41e62a:	pop    edi
  41e62b:	leave  
  41e62c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e62d:	push   cs
  41e62e:	pop    DWORD PTR ds:0x45b13b0
  41e634:	mov    ch,0x8f
  41e636:	mov    esp,0x75cb2efc
  41e63b:	rdtsc  
  41e63d:	sbb    edi,esp
  41e63f:	add    esi,DWORD PTR [ebp-0x4e27d8ec]
  41e645:	mov    ebp,?
  41e647:	pop    edi
  41e648:	adc    bl,cl
  41e64a:	fnclex 
  41e64c:	aas    
  41e64d:	push   ebp
  41e64e:	aaa    
  41e64f:	lea    edi,[ebx]
  41e651:	and    al,0xe7
  41e653:	add    esi,DWORD PTR [ebp+0x63a416]
	...
  41e669:	add    BYTE PTR [eax],al
  41e66b:	add    BYTE PTR [edx],dh
  41e66d:	mov    al,0xe8
  41e66f:	mov    bl,0xe9
  41e671:	inc    esp
  41e672:	or     ebx,DWORD PTR [edi+0x6b]
  41e675:	fwait
  41e676:	es stc 
  41e678:	outs   dx,BYTE PTR ds:[esi]
  41e679:	mov    eax,ds:0x553c03a7
  41e67e:	(bad)  
  41e67f:	push   cs
  41e680:	add    ebx,DWORD PTR [eax-0x18]
  41e683:	push   cs
  41e684:	or     esp,DWORD PTR [eax-0x17]
  41e687:	inc    esp
  41e688:	ficom  DWORD PTR [edi-0x2f4bb60e]
  41e68e:	pop    edi
  41e68f:	leave  
  41e690:	retf   0xe715
  41e693:	cmp    BYTE PTR [ecx-0x65],0x23
  41e697:	mov    eax,0x5f5f13a9
  41e69c:	nop
  41e69d:	retf   0xc861
  41e6a0:	jp     0x41e6b8
  41e6a2:	sbb    al,0x40
  41e6a4:	cmp    dl,BYTE PTR [ecx]
  41e6a6:	pop    ebx
  41e6a7:	add    esi,DWORD PTR [ebp+0x65886c8f]
  41e6ad:	leave  
  41e6ae:	push   DWORD PTR [ebp-0x213776f5]
  41e6b4:	cmp    ah,BYTE PTR [eax-0x1b]
  41e6b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6b8:	sti    
  41e6b9:	int3   
  41e6ba:	adc    cl,ch
  41e6bc:	sti    
  41e6bd:	push   eax
  41e6be:	add    BYTE PTR [eax-0x71034c82],al
  41e6c4:	das    
  41e6c5:	push   esi
  41e6c6:	fdiv   QWORD PTR [ebp+ebp*1-0x41]
  41e6ca:	std    
  41e6cb:	jle    0x41e660
  41e6cd:	mov    al,cl
  41e6cf:	std    
	...
  41e6e4:	mov    al,0xcc
  41e6e6:	adc    bh,BYTE PTR [ebp+0x7200507b]
  41e6ec:	in     eax,dx
  41e6ed:	popf   
  41e6ee:	out    0x6d,eax
  41e6f0:	mov    ebp,0xfd62008f
  41e6f5:	(bad)  [eax-0x79ed3d64]
  41e6fb:	pop    ebp
  41e6fc:	mov    dh,0x8f
  41e6fe:	add    BYTE PTR [ebp+edi*1-0x41],ch
  41e702:	std    
  41e703:	mov    ecx,DWORD PTR ss:[eax-0x33474a38]
  41e70a:	adc    dl,ch
  41e70c:	jae    0x41e75e
  41e70e:	add    dl,bl
  41e710:	jbe    0x41e761
  41e712:	out    0xe2,eax
  41e714:	push   ebx
  41e715:	int3   
  41e716:	cld    
  41e717:	(bad)  
  41e718:	in     eax,dx
  41e719:	ins    DWORD PTR es:[edi],dx
  41e71a:	mov    DWORD PTR [edx+eax*8-0x7501af77],ebx
  41e721:	test   eax,0xccaa7cfd
  41e726:	jb     0x41e729
  41e728:	adc    DWORD PTR [esi+ebx*8-0x1a],edx
  41e72c:	clc    
  41e72d:	push   ss
  41e72e:	inc    ebx
  41e72f:	stc    
  41e730:	aas    
  41e731:	adc    al,BYTE PTR [eax-0x76704917]
  41e737:	and    al,0xb1
  41e739:	adc    BYTE PTR [esi+0x0],bl
  41e73c:	mov    eax,0x87704614
  41e741:	pop    edx
  41e742:	xchg   DWORD PTR [ebp+0x24],eax
  41e745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e746:	inc    ecx
  41e747:	adc    al,0x0
	...
  41e759:	add    BYTE PTR [eax],al
  41e75b:	add    BYTE PTR [ebx+0x13e6cf1a],al
  41e761:	imul   edi,ebx,0x75
  41e764:	mov    ah,0x16
  41e766:	push   ecx
  41e767:	hlt    
  41e768:	and    esp,ecx
  41e76a:	in     al,dx
  41e76b:	mov    ebx,DWORD PTR [edx]
  41e76d:	pop    ss
  41e76e:	(bad)  
  41e76f:	call   0x3d6cec
  41e774:	cdq    
  41e775:	push   ebx
  41e776:	or     eax,DWORD PTR [ebx+eiz*8+0xf000093]
  41e77d:	or     dh,cl
  41e77f:	dec    DWORD PTR [ecx-0x3f]
  41e782:	sti    
  41e783:	jne    0x41e73d
  41e785:	mov    ch,0xfc
  41e787:	(bad)  
  41e788:	jmp    0x74196f55
  41e78d:	loopne 0x41e7a3
  41e78f:	mov    eax,edi
  41e791:	add    esp,edi
  41e793:	jne    0x41e7a1
  41e795:	ins    BYTE PTR es:[edi],dx
  41e796:	jno    0x41e7a4
  41e798:	mov    ds:0xa0e804e0,eax
  41e79d:	test   ebx,edi
  41e79f:	dec    DWORD PTR [ecx+0x53]
  41e7a2:	je     0x41e756
  41e7a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7a5:	ss add al,0x0
  41e7a8:	fcom   QWORD PTR ds:0xd855fc59
  41e7ae:	adc    BYTE PTR [ebx],bh
  41e7b0:	test   al,ch
  41e7b2:	dec    edx
  41e7b3:	jmp    FWORD PTR [ecx]
  41e7b5:	lds    eax,FWORD PTR [edi+0x716ba855]
  41e7bb:	lock pop ss
  41e7bd:	push   edx
  41e7be:	xchg   ebx,ecx
	...
  41e7d4:	test   BYTE PTR [edi+0x1173ffd6],ch
  41e7da:	shl    BYTE PTR [ebp+esi*4-0x3a],0xff
  41e7df:	pop    edx
  41e7e0:	mov    ecx,ebx
  41e7e2:	lds    edx,FWORD PTR [ebx]
  41e7e4:	cs jnp 0x41e7df
  41e7e7:	cmp    al,bh
  41e7e9:	into   
  41e7ea:	(bad)  
  41e7ec:	pop    esi
  41e7ed:	loope  0x41e776
  41e7ef:	dec    esi
  41e7f0:	loope  0x41e825
  41e7f2:	dec    edx
  41e7f3:	je     0x41e7b2
  41e7f5:	lods   eax,DWORD PTR ds:[esi]
  41e7f6:	mov    edx,0x17c5c76b
  41e7fb:	pop    ebx
  41e7fc:	mov    ebp,0x75310ea8
  41e801:	jbe    0x41e78c
  41e803:	inc    esi
  41e804:	fxch   st(5)
  41e806:	dec    eax
  41e807:	or     eax,0xfd63c642
  41e80c:	sub    bh,ch
  41e80e:	mov    ebp,0x1534b2fb
  41e813:	out    0x1a,al
  41e815:	xor    DWORD PTR [eax-0x760926bd],ecx
  41e81b:	inc    ebx
  41e81c:	shl    DWORD PTR [ecx-0x2a],1
  41e81f:	and    ebp,DWORD PTR [esi]
  41e821:	and    edi,0xfd0afbff
  41e827:	mov    dh,bh
  41e829:	mov    dh,dl
  41e82b:	pop    ss
  41e82c:	add    DWORD PTR [ecx+0x2e20fd6],0xd
  41e833:	std    
  41e834:	pusha  
  41e835:	mov    esi,0x6668
	...
  41e84a:	add    BYTE PTR [eax],al
  41e84c:	out    dx,eax
  41e84d:	test   al,0x5c
  41e84f:	xor    ebp,0xffffffb0
  41e852:	test   DWORD PTR [esi-0x47],esp
  41e855:	mov    dh,0x0
  41e857:	sub    DWORD PTR [eax-0x36],ebx
  41e85a:	adc    al,0x5b
  41e85c:	mov    cl,0x4a
  41e85e:	das    
  41e85f:	out    0xaf,eax
  41e861:	xchg   esp,eax
  41e862:	pop    esp
  41e863:	std    
  41e864:	cs daa 
  41e866:	fld    QWORD PTR [edx+0x7ff6906c]
  41e86c:	mov    al,ds:0xcc5bddad
  41e871:	gs inc ebx
  41e873:	or     esi,DWORD PTR [edi]
  41e875:	scas   al,BYTE PTR es:[edi]
  41e876:	ret    
  41e877:	pop    ebx
  41e878:	js     0x41e805
  41e87a:	and    al,0xc
  41e87c:	ror    BYTE PTR ds:0xc768619c,0xf9
  41e883:	inc    ebx
  41e884:	cmc    
  41e885:	sbb    BYTE PTR ds:0x8fd79db8,ah
  41e88b:	pop    ecx
  41e88c:	pop    ebx
  41e88d:	(bad)  
  41e88e:	popf   
  41e88f:	(bad)  
  41e890:	test   bh,0xcf
  41e893:	shl    BYTE PTR [esi+0x56405c96],0xc7
  41e89a:	test   DWORD PTR [edi],ebx
  41e89c:	xchg   ebx,eax
  41e89d:	xor    ebp,esi
  41e89f:	xchg   cl,bh
  41e8a1:	lods   eax,DWORD PTR ds:[esi]
  41e8a2:	jne    0x41e8ff
  41e8a4:	mov    al,0xfd
  41e8a6:	jmp    0x39c4d639
  41e8ab:	xchg   edx,esi
  41e8ad:	mov    gs,WORD PTR [ecx+0x36]
	...
  41e8c3:	add    BYTE PTR [edi],dl
  41e8c5:	sbb    esp,DWORD PTR [edi+ecx*2-0x721647be]
  41e8cc:	mov    cl,0x97
  41e8ce:	stos   BYTE PTR es:[edi],al
  41e8cf:	jg     0x41e8d6
  41e8d1:	xchg   edi,eax
  41e8d2:	arpl   WORD PTR [eax-0x2a],di
  41e8d5:	(bad)  
  41e8d6:	xor    eax,0x2e9b765b
  41e8db:	rcl    DWORD PTR [esi+0x465ae739],1
  41e8e1:	mov    ds:0x3cc83372,eax
  41e8e6:	out    dx,eax
  41e8e7:	mov    gs,esp
  41e8e9:	pop    ebp
  41e8ea:	push   cs
  41e8eb:	shr    DWORD PTR [edx-0x4ff8843a],1
  41e8f1:	cmp    al,0xef
  41e8f3:	imul   eax,DWORD PTR [edi-0xa0018],0x12
  41e8fa:	shl    BYTE PTR [ebp+0x57],0xae
  41e8fe:	into   
  41e8ff:	jmp    0x88ed:0x3c878fb6
  41e906:	enter  0x4954,0x87
  41e90a:	pop    esi
  41e90b:	cmp    eax,0x7f0d6e62
  41e910:	mov    ebx,0xa0fac818
  41e915:	adc    bh,bl
  41e917:	out    dx,al
  41e918:	js     0x41e8f9
  41e91a:	loope  0x41e97e
  41e91c:	ins    DWORD PTR es:[edi],dx
  41e91d:	ret    0x91be
  41e920:	mov    ebx,0xcaf10419
  41e925:	fbstp  TBYTE PTR [ebx-0x3f]
	...
  41e93c:	jnp    0x41e901
  41e93e:	inc    edx
  41e93f:	cmc    
  41e940:	sub    edx,DWORD PTR [edx+0x14]
  41e943:	ret    0xbdf5
  41e946:	jnp    0x41e8dc
  41e948:	fwait
  41e949:	test   eax,0x10fd2f89
  41e94e:	shl    ch,0x23
  41e951:	xchg   DWORD PTR [ebx-0xf],ebx
  41e954:	in     al,0x93
  41e956:	xor    DWORD PTR [eax],esi
  41e958:	icebp  
  41e959:	or     al,0x4e
  41e95b:	mov    ch,0xa3
  41e95d:	push   es
  41e95e:	or     eax,0xfcac475e
  41e963:	inc    esi
  41e964:	shr    DWORD PTR [edx-0x4],cl
  41e967:	out    dx,al
  41e968:	xor    BYTE PTR [eax+0x187f36e3],ch
  41e96e:	inc    ebx
  41e96f:	add    eax,0xcd430cf1
  41e974:	outs   dx,DWORD PTR ds:[esi]
  41e975:	inc    edx
  41e976:	and    al,0x72
  41e978:	xchg   DWORD PTR [ecx],edi
  41e97a:	add    BYTE PTR [esi],dl
  41e97c:	in     eax,0xa9
  41e97e:	mov    DWORD PTR [edx],esp
  41e980:	pop    edi
  41e981:	inc    edx
  41e982:	sbb    BYTE PTR [eax],al
  41e984:	push   edx
  41e985:	push   0x71
  41e987:	adc    BYTE PTR [ebx+0x21ff08d5],ch
  41e98d:	cdq    
  41e98e:	call   0xfbabaee0
  41e993:	test   DWORD PTR [edi+edx*4-0x7f],ebx
  41e997:	dec    ebp
  41e998:	lahf   
  41e999:	xchg   ecx,eax
  41e99a:	add    BYTE PTR [ebx-0x59],cl
  41e99d:	cld    
  41e99e:	clc    
  41e99f:	jae    0x41e9a1
	...
  41e9b1:	add    BYTE PTR [eax],al
  41e9b3:	add    BYTE PTR [eax+0x39],al
  41e9b6:	(bad)  
  41e9b8:	jnp    0x41ea21
  41e9ba:	xchg   DWORD PTR [esi-0x58],eax
  41e9bd:	inc    esp
  41e9be:	ror    BYTE PTR [edi],0xd0
  41e9c1:	and    esp,0xffffffff
  41e9c4:	or     esp,DWORD PTR [ebx+0xf4b0859]
  41e9ca:	retf   
  41e9cb:	in     al,0x2b
  41e9cd:	addr16 in eax,0xf2
  41e9d0:	xor    DWORD PTR [edi-0x5],esp
  41e9d3:	mov    edx,DWORD PTR [edx+0x2bc081e7]
  41e9d9:	inc    ebp
  41e9da:	mov    ebx,0x3766abe4
  41e9df:	pop    ebp
  41e9e0:	adc    al,0x98
  41e9e2:	xchg   BYTE PTR [esi-0x760498d0],dh
  41e9e8:	push   edx
  41e9e9:	std    
  41e9ea:	aaa    
  41e9eb:	ret    0x8865
  41e9ee:	loope  0x41e9ef
  41e9f0:	imul   edx,DWORD PTR [edx],0x41
  41e9f3:	and    al,0x4c
  41e9f5:	sbb    cl,BYTE PTR [ecx+0x14]
  41e9f8:	gs add al,0x21
  41e9fb:	push   eax
  41e9fc:	xchg   DWORD PTR [esi-0x79],esi
  41e9ff:	inc    ebp
  41ea00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea01:	test   al,0x41
  41ea03:	adc    al,0xfb
  41ea05:	or     eax,0x669be48f
  41ea0a:	aaa    
  41ea0b:	pop    esi
  41ea0c:	cmp    BYTE PTR [eax-0x6c4a6481],bl
  41ea12:	push   edi
  41ea13:	std    
  41ea14:	stos   BYTE PTR es:[edi],al
  41ea15:	pop    esp
  41ea16:	add    ecx,DWORD PTR [ecx+0x0]
	...
  41ea2c:	add    eax,DWORD PTR [edi]
  41ea2e:	or     BYTE PTR [esi+0x36c3beb1],dh
  41ea34:	clc    
  41ea35:	ret    0x8307
  41ea38:	and    ecx,DWORD PTR [ebx+0x7392fd57]
  41ea3e:	lock cld 
  41ea40:	add    BYTE PTR [ebx+0x6383ffee],cl
  41ea46:	clc    
  41ea47:	mov    BYTE PTR [edx-0x2b],ah
  41ea4a:	int    0x17
  41ea4c:	add    DWORD PTR ds:[edi+0x57e6e0fc],ebp
  41ea53:	jae    0x41ea06
  41ea55:	std    
  41ea56:	int    0x7
  41ea58:	dec    ebp
  41ea59:	inc    edx
  41ea5a:	cmp    ebp,edi
  41ea5c:	push   edx
  41ea5d:	xor    eax,DWORD PTR [ecx+0x74]
  41ea60:	pop    es
  41ea61:	pop    ds
  41ea62:	lods   al,BYTE PTR ds:[esi]
  41ea63:	add    dh,BYTE PTR [ebp-0x6ebc744a]
  41ea69:	jbe    0x41e9f4
  41ea6b:	inc    ebx
  41ea6c:	fldenv [esi+0x6b3e286b]
  41ea72:	pop    esp
  41ea73:	aaa    
  41ea74:	js     0x41ea58
  41ea76:	pop    es
  41ea77:	mov    esp,ebx
  41ea79:	or     bl,BYTE PTR [eax-0x3]
  41ea7c:	into   
  41ea7d:	int3   
  41ea7e:	in     al,0xc
  41ea80:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41ea82:	pop    ebp
  41ea83:	std    
  41ea84:	add    ch,BYTE PTR [ebp-0x6089fe72]
  41ea8a:	mov    ebp,0x2133c2f3
  41ea8f:	in     al,0x0
	...
  41eaa1:	add    BYTE PTR [eax],al
  41eaa3:	add    dl,ch
  41eaa5:	test   BYTE PTR [eax+0x43],bl
  41eaa8:	leave  
  41eaa9:	jge    0x41ea79
  41eaab:	and    ecx,DWORD PTR [edi-0x4a]
  41eaae:	push   edi
  41eaaf:	jae    0x41ea62
  41eab1:	(bad)  
  41eab2:	jb     0x41eae4
  41eab4:	enter  0xff39,0x8c
  41eab8:	in     al,dx
  41eab9:	pop    esp
  41eaba:	push   ss
  41eabb:	into   
  41eabc:	stos   BYTE PTR es:[edi],al
  41eabd:	les    edx,FWORD PTR [ebx-0x10c24ff9]
  41eac3:	imul   eax,DWORD PTR [ebx],0xffffffe8
  41eac6:	std    
  41eac7:	push   edi
  41eac8:	sar    BYTE PTR ss:[edx-0x66],1
  41eacc:	xchg   edx,eax
  41eacd:	pop    ebp
  41eace:	jmp    0x2c589fd6
  41ead3:	and    ch,dh
  41ead5:	sbb    BYTE PTR [eax+eiz*1],ah
  41ead8:	in     eax,0xb6
  41eada:	add    eax,0xfc7f68b
  41eadf:	rol    esi,0x92
  41eae2:	je     0x41eb48
  41eae4:	push   esp
  41eae5:	ret    
  41eae6:	mov    ebp,0xe634031b
  41eaeb:	or     BYTE PTR [ebp-0x54],0xad
  41eaef:	push   edi
  41eaf0:	sar    cl,0xe9
  41eaf3:	mov    bh,bl
  41eaf5:	jg     0x41eae5
  41eaf7:	lea    edi,[ecx-0x9e2d569]
  41eafd:	mov    ebx,0xaef47fdd
  41eb02:	test   DWORD PTR [edi+0x28],edx
  41eb05:	dec    ebp
  41eb06:	rcl    DWORD PTR [esi+0x0],cl
	...
  41eb19:	add    BYTE PTR [eax],al
  41eb1b:	add    BYTE PTR [esi+0x1804016b],ah
  41eb21:	cmp    eax,0xc2e88acb
  41eb26:	(bad)  
  41eb28:	cmp    eax,0x8656b4d7
  41eb2d:	lahf   
  41eb2e:	push   esi
  41eb2f:	shr    DWORD PTR [esi-0x22f42c3e],1
  41eb35:	enter  0x571d,0xe8
  41eb39:	or     al,0x27
  41eb3b:	shl    BYTE PTR [ecx+edi*4],1
  41eb3e:	push   DWORD PTR [eax]
  41eb40:	mov    al,0x8f
  41eb42:	add    BYTE PTR [edx-0xc],ah
  41eb45:	outs   dx,BYTE PTR ds:[esi]
  41eb46:	inc    eax
  41eb47:	jo     0x41eb3d
  41eb49:	outs   dx,BYTE PTR ds:[esi]
  41eb4a:	push   eax
  41eb4b:	adc    dl,BYTE PTR [ecx-0x67eebce8]
  41eb51:	dec    esi
  41eb52:	adc    al,0xde
  41eb54:	cmp    eax,0x206e110
  41eb59:	mov    DWORD PTR [esi-0x73],ebx
  41eb5c:	mov    ebx,0x20d8910
  41eb61:	lds    ecx,FWORD PTR [edi+esi*1]
  41eb64:	mov    dh,0x50
  41eb66:	aaa    
  41eb67:	sub    al,0xe5
  41eb69:	xchg   esp,eax
  41eb6a:	test   BYTE PTR [esi+edx*1-0x3b],cl
  41eb6e:	cld    
  41eb6f:	(bad)  
  41eb70:	jne    0x41eb10
  41eb72:	std    
  41eb73:	push   esp
  41eb74:	xchg   ebp,eax
  41eb75:	xor    eax,0xa685c600
  41eb7a:	mov    DWORD PTR [esi+0x62183f0b],edx
	...
  41eb94:	out    dx,eax
  41eb95:	pop    ecx
  41eb96:	std    
  41eb97:	xor    al,0x49
  41eb99:	ret    
  41eb9a:	jb     0x41eb91
  41eb9c:	jecxz  0x41ebdc
  41eb9e:	or     BYTE PTR [ecx-0x690323e9],dl
  41eba4:	xor    eax,0xa15073cf
  41eba9:	in     eax,dx
  41ebaa:	(bad)  
  41ebab:	call   0x91342166
  41ebb0:	pushf  
  41ebb1:	ret    0xe9fc
  41ebb4:	das    
  41ebb5:	dec    esi
  41ebb6:	cld    
  41ebb7:	pusha  
  41ebb8:	cmc    
  41ebb9:	popf   
  41ebba:	mov    DWORD PTR [edx+ebp*4-0x5d5b78b1],ebp
  41ebc1:	pop    edi
  41ebc2:	out    0xc9,eax
  41ebc4:	mov    cl,0x8f
  41ebc6:	add    BYTE PTR [edx-0xb],ah
  41ebc9:	mov    ecx,0xb2190036
  41ebce:	or     ecx,DWORD PTR [ebp-0x4d2ff]
  41ebd4:	push   edi
  41ebd5:	int3   
  41ebd6:	push   0x7f89a53b
  41ebdb:	and    edi,DWORD PTR [eax+0x2183fb59]
  41ebe1:	push   edx
  41ebe2:	or     al,0x75
  41ebe4:	unpckhps xmm0,XMMWORD PTR [esi+0x18]
  41ebe8:	sbb    DWORD PTR [ebp+0x74],ecx
  41ebeb:	pop    ss
  41ebec:	inc    esi
  41ebed:	lea    edx,[eax-0x73]
  41ebf0:	dec    edx
  41ebf1:	mov    ecx,0xf8b4c387
  41ebf6:	inc    edi
  41ebf7:	inc    DWORD PTR [eax]
	...
  41ec09:	add    BYTE PTR [eax],al
  41ec0b:	add    BYTE PTR [ebx+0x190fc041],ah
  41ec11:	pop    esp
  41ec12:	loop   0x41ec13
  41ec14:	arpl   WORD PTR [edi],si
  41ec16:	and    DWORD PTR [ebx-0x37d83836],ecx
  41ec1c:	mov    DWORD PTR [ebx+esi*2+0x3a96e61c],0x11d0b04e
  41ec27:	and    DWORD PTR [ecx*4+0x2e29840b],0xfffffffb
  41ec2f:	inc    esi
  41ec31:	into   
  41ec32:	std    
  41ec33:	cmp    DWORD PTR [edx+0x15840b68],ebx
  41ec39:	cs sti 
  41ec3b:	call   DWORD PTR [edi-0x15f00f38]
  41ec41:	mov    ?,WORD PTR [edi-0x3f]
  41ec44:	ss iret 
  41ec46:	jg     0x41ec41
  41ec48:	adc    ecx,DWORD PTR [ebx+eax*4-0x4a55c8d]
  41ec4f:	(bad)  
  41ec50:	mov    eax,0x4d629408
  41ec55:	lea    edi,[edi-0x8]
  41ec58:	mov    ch,0xac
  41ec5a:	add    eax,DWORD PTR [edx+ecx*1-0x45ffff49]
  41ec61:	xor    BYTE PTR [edx+eiz*8-0x7807e1e],ah
  41ec68:	test   eax,0xcd80f100
  41ec6d:	jecxz  0x41ec3b
  41ec6f:	sbb    BYTE PTR [eax],al
	...
  41ec81:	add    BYTE PTR [eax],al
  41ec83:	add    BYTE PTR [eax-0x4afffbcd],cl
  41ec89:	mov    cl,0x7d
  41ec8b:	mov    edi,edx
  41ec8d:	cdq    
  41ec8e:	push   ebx
  41ec8f:	xor    DWORD PTR [ebp-0x21],esi
  41ec92:	mov    edx,0x8233ba5f
  41ec97:	loop   0x41ec3b
  41ec99:	shr    DWORD PTR [ecx-0x54],0xb5
  41ec9d:	mov    dh,0x0
  41ec9f:	cmp    ebx,esi
  41eca1:	inc    edx
  41eca2:	add    al,0x81
  41eca4:	push   esi
  41eca5:	mov    dh,0x0
  41eca7:	add    BYTE PTR ds:0x300d0a6d,dh
  41ecad:	cmp    al,0x1
  41ecaf:	add    BYTE PTR [ebp-0x4a6b968b],dh
  41ecb5:	mov    dh,0x0
  41ecb7:	sbb    DWORD PTR [ebp-0x41],0xd4ff8403
  41ecbe:	push   ebx
  41ecbf:	std    
  41ecc0:	ss (bad) 
  41ecc2:	and    BYTE PTR ds:0xfd628731,cl
  41ecc8:	inc    edx
  41ecc9:	jecxz  0x41ec6b
  41eccb:	add    BYTE PTR [ebp+0x367367b6],dh
  41ecd1:	push   ds
  41ecd2:	or     dh,BYTE PTR [ebx+eiz*4+0x35]
  41ecd6:	pop    ecx
  41ecd7:	and    BYTE PTR [ecx-0x4a5fea39],ch
  41ecdd:	mov    dh,0x0
  41ecdf:	or     eax,0xfd5efb38
  41ece4:	or     cl,BYTE PTR [edi+0xdf52]
	...
  41ecfa:	add    BYTE PTR [eax],al
  41ecfc:	xor    eax,0x59d1f0c7
  41ed01:	or     al,0x4f
  41ed03:	push   es
  41ed04:	ror    BYTE PTR [ecx],0x4
  41ed07:	(bad)  
  41ed08:	call   0xb5c0f0cc
  41ed0d:	(bad)  
  41ed0e:	out    0x68,eax
  41ed10:	jb     0x41ed1e
  41ed12:	das    
  41ed13:	or     eax,eax
  41ed15:	or     eax,0xbfc861d4
  41ed1a:	imul   ebx,DWORD PTR [ebx-0x52],0x3616a839
  41ed21:	(bad)  
  41ed22:	out    0x3,eax
  41ed24:	pushf  
  41ed25:	into   
  41ed26:	popa   
  41ed27:	(bad)
  41ed2a:	jmp    0xeb88:0x23aab90b
  41ed31:	cmp    ebp,0xfffffffe
  41ed34:	mov    edx,0x3c210293
  41ed39:	dec    esi
  41ed3a:	sbb    ebx,DWORD PTR [edx-0x47]
  41ed3d:	xchg   eax,ebp
  41ed3f:	pop    esi
  41ed40:	inc    esp
  41ed41:	or     esp,DWORD PTR ds:0xdf946b18
  41ed47:	add    al,0x5c
  41ed49:	mov    al,ds:0xc5a6c272
  41ed4e:	loop   0x41ed4b
  41ed50:	stos   BYTE PTR es:[edi],al
  41ed51:	stos   BYTE PTR es:[edi],al
  41ed52:	xchg   DWORD PTR [edi+0x3],edi
  41ed55:	test   BYTE PTR [ebp-0x96042f8],dh
  41ed5b:	xchg   DWORD PTR [eax-0x4f],esi
  41ed5e:	popf   
  41ed5f:	push   ebx
	...
  41ed74:	cmp    BYTE PTR [ebp-0x5],dl
  41ed77:	push   edx
  41ed78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed79:	jae    0x41ed7c
  41ed7b:	add    al,0x28
  41ed7d:	inc    ebp
  41ed7e:	jecxz  0x41edfe
  41ed80:	or     BYTE PTR [edi-0x34d2140d],bh
  41ed86:	call   FWORD PTR [esi]
  41ed88:	inc    dx
  41ed8a:	adc    BYTE PTR [esi-0x14],ch
  41ed8d:	mov    bh,ch
  41ed8f:	fdiv   st(6),st
  41ed91:	mov    dh,0x2
  41ed93:	aaa    
  41ed94:	mov    sp,0x2982
  41ed98:	mov    dh,0x13
  41ed9a:	jnp    0x41edeb
  41ed9c:	xchg   BYTE PTR [eax+ebp*8+0x57b800ea],bh
  41eda3:	sahf   
  41eda4:	and    al,0x58
  41eda6:	(bad)  
  41eda7:	sub    ebx,DWORD PTR [ecx-0x45f96f71]
  41edad:	jle    0x41edaf
  41edaf:	in     al,dx
  41edb0:	stc    
  41edb1:	jge    0x41edb3
  41edb3:	repz icebp 
  41edb5:	jge    0x41edb7
  41edb7:	(bad)  
  41edb8:	jns    0x41ee37
  41edba:	add    BYTE PTR [eax-0x4eff8290],ah
  41edc0:	jnp    0x41ee3f
  41edc2:	add    BYTE PTR [ebx+esi*2+0x7b71007d],bl
  41edc9:	jge    0x41edcb
  41edcb:	pop    esp
  41edcc:	jb     0x41ee4b
  41edce:	add    BYTE PTR [esi-0x5eff8285],al
  41edd4:	jae    0x41ee53
  41edd6:	add    BYTE PTR [ecx+0x0],ah
	...
  41edec:	js     0x41ee6b
  41edee:	add    bl,bh
  41edf0:	jae    0x41ee6f
  41edf2:	add    BYTE PTR [edi+0x3007d7b],dh
  41edf8:	ins    DWORD PTR es:[edi],dx
  41edf9:	jge    0x41edfb
  41edfb:	jp     0x41ee77
  41edfd:	jge    0x41edff
  41edff:	std    
  41ee00:	jge    0x41ee7f
  41ee02:	add    BYTE PTR [eax],bl
  41ee04:	ins    BYTE PTR es:[edi],dx
  41ee05:	jge    0x41ee07
  41ee07:	xchg   DWORD PTR [ecx+0x7d],esi
  41ee0a:	add    BYTE PTR [ecx+0x1b007cf9],dh
  41ee10:	mov    edx,0x9200007e
  41ee15:	sar    BYTE PTR ds:0x3dd2f800,cl
  41ee1b:	add    BYTE PTR [esi],bh
  41ee1d:	leave  
  41ee1e:	cmp    eax,0x3dfa1f00
  41ee23:	add    dl,ch
  41ee25:	sti    
  41ee26:	cmp    eax,0x3dfa9200
  41ee2b:	add    BYTE PTR [esi],bl
  41ee2d:	cli    
  41ee2e:	cmp    eax,0x3dfbb200
  41ee33:	add    ah,ch
  41ee35:	stc    
  41ee36:	cmp    eax,0x3df9ea00
  41ee3b:	add    BYTE PTR ds:0xc7003dfa,al
  41ee41:	stc    
  41ee42:	cmp    eax,0x3dfeb900
  41ee47:	add    BYTE PTR [ebx-0x4],bl
  41ee4a:	cmp    eax,0x3dfb0300
	...
  41ee63:	add    cl,bl
  41ee65:	cli    
  41ee66:	cmp    eax,0x3dfac700
  41ee6b:	add    BYTE PTR [edx-0x60ffc204],ah
  41ee71:	(bad)  
  41ee72:	cmp    eax,0x3dd01700
  41ee77:	add    BYTE PTR [edx-0x6effc204],dh
  41ee7d:	(bad)  
  41ee7e:	cmp    eax,0x3dfc9a00
  41ee83:	add    BYTE PTR [ecx-0xeffc204],bl
  41ee89:	cld    
  41ee8a:	cmp    eax,0x3dfc9f00
  41ee8f:	add    BYTE PTR ds:0xc2003dca,al
  41ee95:	aam    0x3d
  41ee97:	add    BYTE PTR [eax+ebp*8-0x5fedffc3],bl
  41ee9e:	cmp    eax,0x1286b500
  41eea3:	aas    
  41eea4:	mov    ch,0xc0
  41eea6:	(bad)  
  41eea8:	mov    ch,0x27
  41eeaa:	or     edi,DWORD PTR [edi]
  41eeac:	mov    ch,0xd6
  41eeae:	or     al,0x3f
  41eeb0:	mov    ch,0x4a
  41eeb2:	adc    BYTE PTR [edi],bh
  41eeb4:	mov    ch,0xc3
  41eeb6:	or     eax,0xb880b53f
  41eebb:	ds mov ch,0xd
  41eebe:	mov    eax,0x1a70b53e
  41eec3:	aas    
  41eec4:	mov    ch,0xdf
  41eec6:	push   cs
  41eec7:	aas    
	...
  41eedc:	mov    ch,0x11
  41eede:	adc    bh,BYTE PTR [edi]
  41eee0:	mov    ch,0x69
  41eee2:	mov    ch,0x3e
  41eee4:	mov    ch,0xfb
  41eee6:	mov    dh,0x3e
  41eee8:	mov    ch,0x38
  41eeea:	mov    edx,0xba74b53e
  41eeef:	ds mov ch,0xdc
  41eef2:	mov    bh,0x3e
  41eef4:	mov    ch,0x2d
  41eef6:	mov    bh,0x3e
  41eef8:	mov    ch,0x72
  41eefa:	mov    bh,0x3e
  41eefc:	mov    ch,0xce
  41eefe:	mov    dh,0x3e
  41ef00:	mov    ch,0xab
  41ef02:	ret    0xb53e
  41ef05:	imul   ecx,DWORD PTR [esi],0xfa6b53f
  41ef0b:	aas    
  41ef0c:	mov    ch,0x5f
  41ef0e:	in     al,0x3e
  41ef10:	mov    ch,0xa6
  41ef12:	add    DWORD PTR [edx],eax
  41ef14:	mov    dh,0xaa
  41ef16:	add    al,0x3
  41ef18:	mov    bl,0xb5
  41ef1a:	clc    
  41ef1b:	push   es
  41ef1c:	scas   eax,DWORD PTR es:[edi]
  41ef1d:	sar    esp,0xb
  41ef20:	in     al,dx
  41ef21:	jg     0x41ef20
  41ef23:	or     eax,0x46f1d6c2
  41ef28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef29:	fxtract 
  41ef2b:	adc    ch,BYTE PTR [ebx-0x5c140171]
  41ef31:	cdq    
  41ef32:	add    esi,ebp
  41ef34:	int3   
  41ef35:	cdq    
  41ef36:	icebp  
  41ef37:	in     al,dx
  41ef38:	int    0x9b
  41ef3a:	in     al,dx
  41ef3b:	icebp  
  41ef3c:	shr    DWORD PTR [edi-0x38],0x22
	...
  41ef54:	mov    edx,0xd722c86e
  41ef59:	jno    0x41ef25
  41ef5b:	daa    
  41ef5c:	(bad)  
  41ef5d:	jne    0x41ef25
  41ef5f:	sbb    ecx,ebp
  41ef61:	addr16 nop ebp
  41ef65:	data16 adc BYTE PTR [esi],bl
  41ef68:	pushf  
  41ef69:	imul   eax,DWORD PTR [edx+eiz*1],0x72
  41ef6d:	inc    esi
  41ef6e:	mov    al,ds:0xb0467bba
  41ef73:	mov    edx,0x13b06c89
  41ef78:	mov    ds:0x8117fa81,al
  41ef7d:	xor    esp,0x19
  41ef80:	xchg   BYTE PTR [ebp+0x79820bde],al
  41ef86:	loop   0x41ef92
  41ef88:	out    dx,eax
  41ef89:	jbe    0x41ef2b
  41ef8b:	mov    edx,0xfa048f3
  41ef90:	fidivr WORD PTR [ecx-0x3a]
  41ef93:	ret    
  41ef94:	fisttp DWORD PTR [ebp-0x56]
  41ef97:	(bad)  
  41ef98:	not    DWORD PTR [ecx-0x19]
  41ef9b:	enter  0x1ff2,0x14
  41ef9f:	rol    bl,0x8f
  41efa2:	clc    
  41efa3:	mov    bl,0xbb
  41efa5:	(bad)  
  41efa6:	sub    al,0xb4
  41efa8:	mov    bl,0x8f
  41efaa:	pusha  
  41efab:	mov    ah,0xab
  41efad:	(bad)
  41efb1:	(bad)  
  41efb2:	mov    esi,0xa08f9bb4
  41efb7:	rol    DWORD PTR [eax],0x0
	...
  41efca:	add    BYTE PTR [eax],al
  41efcc:	xchg   ebx,eax
  41efcd:	pop    DWORD PTR [eax]
  41efcf:	or     edi,DWORD PTR es:[edx+0x0]
  41efd3:	push   ds
  41efd4:	add    edi,DWORD PTR [edx+0x0]
  41efd7:	mov    bl,0xb
  41efd9:	jp     0x41efdb
  41efdb:	mov    bl,0x63
  41efdd:	jp     0x41efdf
  41efdf:	or     ch,BYTE PTR [ebx+0x7a]
  41efe2:	add    BYTE PTR [ebx+eiz*2+0x5bf4007a],ah
  41efe9:	jp     0x41efeb
  41efeb:	sub    al,0x52
  41efed:	jp     0x41efef
  41efef:	pop    eax
  41eff0:	dec    edx
  41eff1:	jp     0x41eff3
  41eff3:	push   ss
  41eff4:	inc    esi
  41eff5:	jp     0x41eff7
  41eff7:	jo     0x41f03f
  41eff9:	jp     0x41effb
  41effb:	mov    ds:0x44007a26,al
  41f000:	es jp  0x41f003
  41f003:	out    dx,al
  41f004:	sub    bh,BYTE PTR [edx+0x0]
  41f007:	cwde   
  41f008:	and    bh,BYTE PTR [edx+0x0]
  41f00b:	mov    eax,ds:0x87007a09
  41f010:	add    BYTE PTR [edx+0x0],bh
  41f013:	jg     0x41f01d
  41f015:	jp     0x41f017
  41f017:	xor    ecx,DWORD PTR [ebx]
  41f019:	jp     0x41f01b
  41f01b:	xor    esp,DWORD PTR [ebx+0x79]
  41f01e:	add    bh,cl
  41f020:	fs jns 0x41f023
  41f023:	dec    edx
  41f024:	addr16 jns 0x41f027
  41f027:	sbb    DWORD PTR [edi+0x79],esp
  41f02a:	add    dh,dl
  41f02c:	inc    edi
  41f02d:	jns    0x41f02f
  41f02f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  41f044:	inc    edi
  41f045:	jns    0x41f047
  41f047:	in     eax,0x96
  41f049:	jns    0x41f04b
  41f04b:	hlt    
  41f04c:	xchg   esi,eax
  41f04d:	jns    0x41f04f
  41f04f:	not    DWORD PTR [esi+0x79]
  41f052:	add    dh,dh
  41f054:	push   esi
  41f055:	jns    0x41f057
  41f057:	add    DWORD PTR [ecx+0x79],ebx
  41f05a:	add    BYTE PTR [eax],al
  41f05c:	pop    ebp
  41f05d:	scas   al,BYTE PTR es:[edi]
  41f05e:	cmp    eax,0x3dae5200
  41f063:	add    BYTE PTR [edx-0x52],al
  41f066:	cmp    eax,0x3dae5200
  41f06b:	add    BYTE PTR [esi],al
  41f06d:	in     al,dx
  41f06e:	cmp    eax,0x3dec6600
  41f073:	add    dl,ah
  41f075:	jmp    0x3d:0xe976003d
  41f07c:	dec    edi
  41f07d:	jmp    0xe997f0bf
  41f082:	cmp    eax,0x3de93300
  41f087:	add    BYTE PTR [ecx+0x6081ec36],ch
  41f08d:	mov    ds:0xcdcfffd,al
  41f092:	dec    ecx
  41f093:	hlt    
  41f094:	or     DWORD PTR ds:0xd73f049,0x49
  41f09b:	int3   
  41f09c:	jae    0x41f09b
  41f09e:	xchg   DWORD PTR [ebp-0x3c],ebx
  41f0a1:	add    esi,DWORD PTR [eax]
  41f0a3:	shr    BYTE PTR [ebx],cl
  41f0a5:	xor    eax,0x8df8
	...
  41f0ba:	add    BYTE PTR [eax],al
  41f0bc:	cmovns eax,DWORD PTR [ebp+0x513bac55]
  41f0c3:	enter  0xf825,0xd8
  41f0c7:	mov    DWORD PTR [ecx+0x49],esp
  41f0ca:	test   DWORD PTR [ebp-0x4c],edx
  41f0cd:	cmp    eax,DWORD PTR [ecx-0x30]
  41f0d0:	daa    
  41f0d1:	bound  esi,QWORD PTR [edi]
  41f0d3:	cli    
  41f0d4:	mov    ds:0x9c072411,eax
  41f0d9:	lea    esi,[edi]
  41f0db:	fisub  DWORD PTR [ebx+0x11]
  41f0de:	sbb    al,0x7
  41f0e0:	mov    WORD PTR [ebp-0x1d93aacb],cs
  41f0e6:	add    eax,0xf87bb539
  41f0eb:	or     al,0x32
  41f0ed:	fld    DWORD PTR [ebx]
  41f0ef:	add    BYTE PTR [ebp-0x2fec4a71],dh
  41f0f5:	mov    cl,0xd6
  41f0f7:	out    dx,al
  41f0f8:	pop    esp
  41f0f9:	stos   DWORD PTR es:[edi],eax
  41f0fa:	add    eax,DWORD PTR [eax]
  41f0fc:	mov    ch,0xd9
  41f0fe:	xchg   ebx,eax
  41f0ff:	inc    ebp
  41f100:	popf   
  41f101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f102:	inc    ebx
  41f103:	xchg   DWORD PTR [eax],edi
  41f105:	ja     0x41f152
  41f107:	std    
  41f108:	sub    dh,BYTE PTR [edx+0x2fc14593]
  41f10e:	test   DWORD PTR [eax+0x1a],ecx
  41f111:	adc    cl,BYTE PTR [ebx+0xd]
  41f114:	dec    edx
  41f115:	jb     0x41f101
  41f117:	xchg   BYTE PTR [eax],dh
  41f119:	jae    0x41f166
  41f11b:	std    
  41f11c:	add    bh,BYTE PTR [edi-0x3c]
  41f11f:	inc    ecx
	...
  41f134:	stos   BYTE PTR es:[edi],al
  41f135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f136:	jns    0x41f0bb
  41f138:	mov    eax,ds:0x3cfd4b59
  41f13d:	sub    al,0x14
  41f13f:	std    
  41f140:	loop   0x41f18b
  41f142:	ja     0x41f189
  41f144:	xchg   ebp,eax
  41f145:	aas    
  41f146:	mov    ch,0xbf
  41f148:	cmp    al,0xf4
  41f14a:	dec    eax
  41f14b:	cmp    edi,esi
  41f14d:	sti    
  41f14e:	add    eax,ebp
  41f150:	js     0x41f1d0
  41f152:	hlt    
  41f153:	pop    eax
  41f154:	jne    0x41f0fc
  41f156:	cmp    DWORD PTR ds:0x4fbff4f8,0x837dc921
  41f160:	jno    0x41f0ea
  41f162:	dec    ebx
  41f163:	std    
  41f164:	add    eax,0x388b011d
  41f169:	mov    cs,WORD PTR [esi-0x3]
  41f16c:	mov    dl,BYTE PTR [esi]
  41f16e:	js     0x41f135
  41f170:	lea    ecx,[esp+ebx*8-0x2]
  41f174:	jp     0x41f105
  41f176:	jb     0x41f1cb
  41f178:	rcl    DWORD PTR ss:[ebx+0x5],0xdf
  41f17d:	mov    ebx,0x8fbb70bf
  41f182:	out    0x10,eax
  41f184:	xchg   DWORD PTR [ebp*1-0x5838c204],eax
  41f18b:	pop    ebx
  41f18c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f18d:	into   
  41f18e:	mov    edi,0xe7af3407
  41f193:	sbb    BYTE PTR [edx-0x72],0x70
  41f197:	mov    BYTE PTR [eax],0x0
	...
  41f1aa:	add    BYTE PTR [eax],al
  41f1ac:	push   es
  41f1ad:	mov    BYTE PTR [esi-0x3b],dl
  41f1b0:	int3   
  41f1b1:	push   es
  41f1b2:	and    al,0x2c
  41f1b4:	mov    al,0x0
  41f1b6:	sbb    eax,0xe9a65a00
  41f1bb:	xor    dl,0x8d
  41f1be:	jo     0x41f23e
  41f1c0:	sar    DWORD PTR [eax+0xb04c75],1
  41f1c6:	sbb    eax,0x2ee8a9f0
  41f1cb:	cld    
  41f1cc:	sub    DWORD PTR [ecx-0x1],edx
  41f1cf:	jp     0x41f15f
  41f1d1:	pop    ds
  41f1d2:	jmp    0x1a00:0x1e8caeae
  41f1d9:	push   es
  41f1da:	lods   al,BYTE PTR ds:[esi]
  41f1db:	jg     0x41f217
  41f1dd:	bound  esi,QWORD PTR [edi+0x7a]
  41f1e0:	outs   dx,BYTE PTR ds:[esi]
  41f1e1:	and    esp,DWORD PTR [edx-0x3b]
  41f1e4:	mov    edx,0x84063ece
  41f1e9:	(bad)  
  41f1ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1eb:	and    BYTE PTR [edx+0x9],dh
  41f1ee:	fs retf 
  41f1f0:	test   eax,0xfb7815b7
  41f1f5:	xchg   DWORD PTR [eax],ebp
  41f1f7:	pop    ebx
  41f1f8:	lods   al,BYTE PTR ds:[esi]
  41f1f9:	jb     0x41f223
  41f1fb:	jp     0x41f1f3
  41f1fd:	stos   DWORD PTR es:[edi],eax
  41f1fe:	outs   dx,DWORD PTR ds:[esi]
  41f1ff:	xchg   BYTE PTR [ecx],bl
  41f201:	mov    bh,0xff
  41f203:	cmc    
  41f204:	out    dx,al
  41f205:	or     BYTE PTR [esi-0x1f],al
  41f208:	mul    DWORD PTR [edi+0xef80a1a]
  41f20e:	adc    DWORD PTR [ebp+0x0],0x0
	...
  41f222:	add    BYTE PTR [eax],al
  41f224:	(bad)  
  41f225:	mov    ah,0xfc
  41f227:	bound  esi,QWORD PTR [edi-0x71]
  41f22a:	mov    edi,0xbf7048c1
  41f22f:	jo     0x41f265
  41f231:	inc    eax
  41f232:	std    
  41f233:	mov    esi,0xb14308fe
  41f238:	rcl    BYTE PTR [edx],0x58
  41f23b:	scas   al,BYTE PTR es:[edi]
  41f23c:	out    dx,al
  41f23d:	mov    ah,0x2
  41f23f:	sub    DWORD PTR [edx-0x5b8fff71],edi
  41f245:	sub    edi,ebp
  41f247:	xchg   esi,eax
  41f248:	outs   dx,BYTE PTR ds:[esi]
  41f249:	push   cs
  41f24a:	xchg   ebx,eax
  41f24b:	add    DWORD PTR [esi-0x4c],ebp
  41f24e:	cld    
  41f24f:	jo     0x41f1d5
  41f251:	xor    edi,ebp
  41f253:	jle    0x41f2d3
  41f255:	push   cs
  41f256:	push   ebx
  41f257:	imul   eax,DWORD PTR [eax+0x4460a462],0xb2bc8713
  41f261:	push   cs
  41f262:	push   ebx
  41f263:	popf   
  41f264:	push   0x6e565c12
  41f269:	mov    ah,0x88
  41f26b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f26c:	fimul  WORD PTR ds:0x9031f55b
  41f272:	add    BYTE PTR [ecx-0x50],ch
  41f275:	cmp    ecx,DWORD PTR [edx]
  41f277:	sub    BYTE PTR [ecx-0x64],ah
  41f27a:	and    DWORD PTR [eax],ebp
  41f27c:	cmp    BYTE PTR [edx-0x78],dl
  41f27f:	adc    bh,BYTE PTR [edx+0x2a71530e]
  41f285:	dec    esi
  41f286:	or     ah,cl
	...
  41f29c:	mov    dh,0x8f
  41f29e:	jo     0x41f289
  41f2a0:	js     0x41f232
  41f2a2:	pop    ebp
  41f2a3:	add    BYTE PTR [eax],dl
  41f2a5:	mov    cl,0x39
  41f2a7:	add    BYTE PTR [edx+eax*8-0x78e08c04],bl
  41f2ae:	add    BYTE PTR [eax],al
  41f2b0:	ins    BYTE PTR es:[edi],dx
  41f2b1:	xchg   edx,eax
  41f2b2:	je     0x41f2fb
  41f2b4:	cdq    
  41f2b5:	mov    eax,DWORD PTR [eax]
  41f2b7:	xor    BYTE PTR [esi+eax*8+0x11],bl
  41f2bb:	cmp    eax,0x40924c
  41f2c0:	add    dh,dh
  41f2c2:	cmp    DWORD PTR [eax],eax
  41f2c4:	pop    esp
  41f2c5:	add    bh,ch
  41f2c7:	jae    0x41f280
  41f2c9:	aad    0xe5
  41f2cb:	jmp    0x4282a0
  41f2d0:	les    esi,FWORD PTR [ecx+ecx*1-0x6ecce400]
  41f2d7:	inc    eax
  41f2d8:	dec    ebx
  41f2d9:	dec    ecx
  41f2da:	sti    
  41f2db:	cmp    eax,0x924b
  41f2e0:	stos   BYTE PTR es:[edi],al
  41f2e1:	popf   
  41f2e2:	xchg   eax,ecx
  41f2e4:	pop    ebp
  41f2e5:	inc    ebx
  41f2e6:	or     BYTE PTR [ecx-0x40937],cl
  41f2ec:	mov    edi,DWORD PTR [edx]
  41f2ee:	mov    DWORD PTR [ebx+ecx*4+0x49],edx
  41f2f2:	sti    
  41f2f3:	mov    BYTE PTR [ecx-0x1],ah
  41f2f6:	sti    
  41f2f7:	dec    DWORD PTR [ebx-0x2995deab]
  41f2fd:	jmp    0x42c8e9
	...
  41f312:	add    BYTE PTR [eax],al
  41f314:	div    BYTE PTR [esi+0x745f9e7]
  41f31a:	inc    eax
  41f31b:	dec    DWORD PTR [ebx+0x5514e749]
  41f321:	aaa    
  41f322:	inc    eax
  41f323:	dec    DWORD PTR [ebx+0x250ce749]
  41f329:	cmp    BYTE PTR [edi+edi*8-0x35],al
  41f32d:	dec    ecx
  41f32e:	mov    BYTE PTR [ebp-0x2b60d4b],al
  41f334:	call   0xed0c:0x3e07bf32
  41f33b:	adc    BYTE PTR [ebp-0x2a7c8452],0xbd
  41f342:	inc    esi
  41f343:	std    
  41f344:	outs   dx,BYTE PTR cs:[esi]
  41f346:	ins    BYTE PTR es:[edi],dx
  41f347:	push   0xffffffb6
  41f349:	dec    edi
  41f34a:	dec    edi
  41f34b:	idiv   DWORD PTR [edx-0x71ee3de3]
  41f351:	loopne 0x41f334
  41f353:	xor    BYTE PTR [ebp+0x5b],0xb
  41f357:	mov    DWORD PTR [ebp+0x42],edi
  41f35a:	aas    
  41f35b:	push   0xffffffb6
  41f35d:	das    
  41f35e:	stos   DWORD PTR es:[edi],eax
  41f35f:	hlt    
  41f360:	ds ret 0x7c38
  41f364:	mov    BYTE PTR [ebx-0x37],dl
  41f367:	(bad)  
  41f368:	lahf   
  41f369:	in     eax,dx
  41f36a:	add    cl,BYTE PTR [ecx+0x260e7fa]
  41f370:	and    dh,BYTE PTR [eax+ebx*1+0x7ba676c5]
  41f377:	fadd   DWORD PTR [eax]
	...
  41f389:	add    BYTE PTR [eax],al
  41f38b:	add    BYTE PTR [esp+ebp*1],bh
  41f38e:	adc    ch,bh
  41f390:	or     dh,BYTE PTR [esi]
  41f392:	jge    0x41f36d
  41f394:	mov    BYTE PTR [ebp+0x70cf9da],ah
  41f39a:	add    BYTE PTR [eax],al
  41f39c:	mov    ch,0x65
  41f39e:	mov    ebp,0xa6b4df
  41f3a3:	add    dh,cl
  41f3a5:	mov    cl,0x7b
  41f3a7:	inc    ebx
  41f3a8:	lds    ebp,FWORD PTR [edi]
  41f3aa:	jge    0x41f3e0
  41f3ac:	ror    BYTE PTR [ebp+0x47],cl
  41f3af:	mov    ebp,ebp
  41f3b1:	and    eax,DWORD PTR [eax]
  41f3b3:	cmp    eax,0x5703d11c
  41f3b8:	ret    0x837f
  41f3bb:	mov    ds:0x49269015,eax
  41f3c0:	test   al,0x8f
  41f3c2:	push   0xffffffb7
  41f3c4:	dec    esi
  41f3c5:	mov    ah,0x5f
  41f3c7:	xchg   ebp,ebx
  41f3c9:	mov    ah,0xd
  41f3cb:	dec    ecx
  41f3cc:	cmp    cl,BYTE PTR [edx]
  41f3ce:	ret    
  41f3cf:	dec    eax
  41f3d0:	mov    BYTE PTR [ebp+ebp*8+0x649ffb90],dh
  41f3d7:	sar    BYTE PTR [edx-0x72],0x60
  41f3db:	mov    edi,0xf02c785e
  41f3e0:	call   0x4f086475
  41f3e5:	or     dh,BYTE PTR [edx+0x24088ccf]
  41f3eb:	pop    eax
  41f3ec:	sub    ch,BYTE PTR [eax-0x57]
  41f3ef:	adc    al,0x0
	...
  41f401:	add    BYTE PTR [eax],al
  41f403:	add    BYTE PTR [edi-0x22],ah
  41f406:	mov    esi,0x72832fc5
  41f40b:	sbb    al,0x65
  41f40d:	add    ah,bl
  41f40f:	jb     0x41f445
  41f411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f412:	jmp    0xba84:0xf740fd0c
  41f419:	mov    ah,0x69
  41f41b:	pop    edx
  41f41c:	mov    cl,0x78
  41f41e:	lahf   
  41f41f:	aam    0x8
  41f421:	or     BYTE PTR [edi+ecx*1+0x8],ah
  41f425:	mov    ah,0x7d
  41f427:	test   BYTE PTR [esi-0x29],bh
  41f42a:	out    0xce,al
  41f42c:	iret   
  41f42d:	mov    ebp,0x3bb4f824
  41f432:	push   cs
  41f433:	stc    
  41f434:	and    DWORD PTR [ebp-0xd],ecx
  41f437:	jl     0x41f426
  41f439:	or     eax,0x8fb54848
  41f43e:	out    0x42,eax
  41f440:	fld    QWORD PTR [esi+0x6ca636a]
  41f446:	lods   al,BYTE PTR ds:[esi]
  41f447:	dec    edi
  41f448:	cmp    cl,BYTE PTR [edx+0x0]
  41f44b:	and    edx,ebp
  41f44d:	mov    BYTE PTR [ecx-0x34ba19c],cl
  41f453:	lods   eax,DWORD PTR es:[esi]
  41f455:	std    
  41f456:	add    esi,ecx
  41f458:	pop    ds
  41f459:	dec    edi
  41f45a:	hlt    
  41f45b:	pop    ds
  41f45c:	je     0x41f3e5
  41f45e:	add    al,0x95
  41f460:	aam    0x84
  41f462:	mov    ch,0xaf
  41f464:	test   BYTE PTR [eax],cl
  41f466:	enter  0x28,0x0
	...
  41f47a:	add    BYTE PTR [eax],al
  41f47c:	fiadd  WORD PTR [edi-0x7012f781]
  41f482:	add    cl,ch
  41f484:	cmp    DWORD PTR [eax-0x288b9002],esi
  41f48a:	mov    BYTE PTR [ecx+esi*8],ah
  41f48d:	test   BYTE PTR [esi-0x4ca693],dh
  41f493:	call   0xb98cff4e
  41f498:	enter  0xcc4e,0x72
  41f49c:	je     0x41f425
  41f49e:	mov    DWORD PTR [ebp*8+0x34b1430a],ebx
  41f4a5:	fnstenv [ebx+0x1]
  41f4a8:	scas   al,BYTE PTR es:[edi]
  41f4a9:	dec    esi
  41f4aa:	in     al,dx
  41f4ab:	ins    BYTE PTR es:[edi],dx
  41f4ac:	sbb    eax,0x6b03910
  41f4b1:	test   DWORD PTR [ecx],ebp
  41f4b3:	mov    ds:0xebe6f250,al
  41f4b8:	icebp  
  41f4b9:	bswap  eax
  41f4bb:	jle    0x41f53b
  41f4bd:	mov    eax,0x373642f0
  41f4c2:	aam    0xe9
  41f4c4:	add    ch,BYTE PTR ds:0x5ebe6389
  41f4ca:	xchg   esp,eax
  41f4cb:	ficomp DWORD PTR [edx]
  41f4cd:	adc    BYTE PTR [ebx-0x34b8c57],bh
  41f4d3:	jmp    0x13f65da
  41f4d8:	or     DWORD PTR [ebx-0x79],edx
  41f4db:	dec    ebp
  41f4dc:	push   0x40b14a
	...
  41f4f1:	add    BYTE PTR [eax],al
  41f4f3:	add    BYTE PTR [ebx+0x98dfb4a],al
  41f4f9:	sar    bl,1
  41f4fb:	call   ebx
  41f4fd:	ss ret 
  41f4ff:	call   0x3dc3c1
  41f504:	pop    ss
  41f505:	add    ecx,edi
  41f507:	test   esp,ebx
  41f509:	loopne 0x41f53a
  41f50b:	jmp    0x41f574
  41f50d:	xor    eax,0xf679441
  41f512:	inc    esp
  41f513:	inc    DWORD PTR [ebx-0x1407c8b7]
  41f519:	lods   al,BYTE PTR ds:[esi]
  41f51a:	xchg   BYTE PTR [edi],al
  41f51c:	xchg   esi,eax
  41f51d:	adc    BYTE PTR [edi+edi*8-0x7d],dl
  41f521:	dec    ecx
  41f522:	jno    0x41f538
  41f524:	iret   
  41f525:	pop    es
  41f526:	inc    esp
  41f527:	inc    DWORD PTR [ebx+0x6d73fd49]
  41f52d:	cmp    BYTE PTR [ebx+0x1],al
  41f530:	mov    dh,0x10
  41f532:	push   ecx
  41f533:	inc    DWORD PTR [ebx]
  41f535:	dec    ecx
  41f536:	je     0x41f53e
  41f538:	fild   DWORD PTR [esi-0x10316b87]
  41f53e:	test   BYTE PTR [ebp+0x10],bh
  41f541:	popf   
  41f542:	sar    BYTE PTR [ecx],0xc9
  41f545:	pop    edi
  41f546:	jl     0x41f58d
  41f548:	in     eax,0xce
  41f54a:	les    esi,FWORD PTR [edx+ecx*2+0x55]
  41f54e:	sbb    cl,BYTE PTR [edi]
  41f550:	retf   0x8790
  41f553:	lea    esp,[edx+ecx*2+0xfffb]
	...
  41f56a:	add    BYTE PTR [eax],al
  41f56c:	adc    eax,DWORD PTR [esp+eax*1]
  41f56f:	or     BYTE PTR [edi+0x580ff0d0],dl
  41f575:	jp     0x41f577
  41f577:	add    BYTE PTR [ebp+0x6886bea8],dh
  41f57d:	inc    esp
  41f57e:	or     dl,BYTE PTR [ebx-0x47]
  41f581:	mul    BYTE PTR [ebx-0x19]
  41f584:	add    ebp,DWORD PTR [eax+0x32aa0000]
  41f58a:	(bad)  
  41f58b:	cmp    al,bh
  41f58d:	jp     0x41f585
  41f58f:	and    DWORD PTR [edi-0x59],0x0
  41f593:	add    bh,dh
  41f595:	aas    
  41f596:	mov    al,0xfb
  41f598:	fdivrp st(3),st
  41f59a:	hlt    
  41f59b:	jno    0x41f53b
  41f59d:	nop
  41f59e:	popf   
  41f59f:	add    BYTE PTR [ebp-0x267cf45a],dh
  41f5a5:	mov    cl,0x42
  41f5a7:	std    
  41f5a8:	stos   BYTE PTR es:[edi],al
  41f5a9:	and    ch,BYTE PTR [ecx+0x0]
  41f5ac:	mov    ch,0xa6
  41f5ae:	or     DWORD PTR [ebx+0x45],edx
  41f5b1:	mov    edx,0xa6b58d7a
  41f5b6:	add    cl,ch
  41f5b8:	xlat   BYTE PTR ds:[ebx]
  41f5b9:	and    eax,0xc2524085
  41f5be:	inc    edx
  41f5bf:	add    cl,al
  41f5c1:	sahf   
  41f5c2:	pop    es
  41f5c3:	push   ebx
  41f5c4:	and    eax,0xc0fcb479
  41f5c9:	ret    0x4376
  41f5cc:	xor    edx,esp
  41f5ce:	int3   
  41f5cf:	pop    DWORD PTR [eax]
	...
  41f5e1:	add    BYTE PTR [eax],al
  41f5e3:	add    BYTE PTR [eax],bh
  41f5e5:	xor    al,0xc0
  41f5e7:	cld    
  41f5e8:	and    dl,BYTE PTR [edx]
  41f5ea:	inc    ebx
  41f5eb:	mov    bl,0x75
  41f5ed:	sbb    DWORD PTR [ebx-0x3],eax
  41f5f0:	sbb    eax,0xafcbf46
  41f5f5:	lods   eax,DWORD PTR ds:[esi]
  41f5f7:	sti    
  41f5f8:	cmp    bh,ah
  41f5fa:	int3   
  41f5fb:	aaa    
  41f5fc:	push   cs
  41f5fd:	int3   
  41f5fe:	ja     0x41f5bb
  41f600:	jns    0x41f623
  41f602:	inc    ebx
  41f603:	std    
  41f604:	ds nop
  41f606:	lods   al,BYTE PTR ds:[esi]
  41f607:	jae    0x41f5bd
  41f609:	enter  0x3421,0x67
  41f60d:	xchg   ecx,eax
  41f60e:	popa   
  41f60f:	ja     0x41f67a
  41f611:	mov    al,0x4d
  41f613:	inc    ebp
  41f614:	cmp    al,0xce
  41f616:	adc    DWORD PTR ds:0xf3b4877d,edi
  41f61c:	xor    eax,0xc6cfe7b1
  41f621:	add    eax,0xb0a9af5c
  41f626:	and    eax,0x938eed0c
  41f62b:	cli    
  41f62c:	hlt    
  41f62d:	push   es
  41f62e:	mov    esp,0xdb5acc47
  41f633:	shl    DWORD PTR [ebx],1
  41f635:	jno    0xc77ca47f
  41f63b:	cmp    BYTE PTR [esi],0x4f
  41f63e:	test   BYTE PTR [eax+esi*2-0x72],0x73
  41f643:	cli    
  41f644:	xor    eax,0x4526f2
	...
  41f659:	add    BYTE PTR [eax],al
  41f65b:	add    BYTE PTR [eax-0x50],ah
  41f65e:	call   0x3cb69f31
  41f663:	clc    
  41f664:	lds    eax,FWORD PTR [esi+0x3abf0967]
  41f66a:	jmp    0x41f62d
  41f66c:	cmp    ebx,DWORD PTR [edx-0x45]
  41f66f:	js     0x41f62f
  41f671:	mov    bh,0xf9
  41f673:	cmp    bh,BYTE PTR [edx]
  41f675:	xor    bl,bl
  41f677:	or     bh,BYTE PTR [esi-0x15]
  41f67a:	sbb    esp,ecx
  41f67c:	jmp    0x41f6c0
  41f67e:	xchg   edi,eax
  41f67f:	(bad)  
  41f680:	js     0x41f686
  41f682:	scas   al,BYTE PTR es:[edi]
  41f683:	sbb    bh,dh
  41f685:	jno    0x41f706
  41f687:	add    BYTE PTR [ebp-0x3a4efb71],dh
  41f68d:	iret   
  41f68e:	mov    edi,0x8006b6
  41f693:	push   esp
  41f694:	jbe    0x41f624
  41f696:	ret    0x2bb2
  41f699:	shl    BYTE PTR [ebp-0x53],0xaf
  41f69d:	inc    esp
  41f69e:	(bad)  
  41f6a0:	shl    BYTE PTR [esi-0x3b],cl
  41f6a3:	out    0x35,al
  41f6a5:	and    bh,bh
  41f6a7:	call   0xf1f87962
  41f6ac:	div    BYTE PTR [esi+0x4b]
  41f6af:	cmp    edx,ebp
  41f6b1:	ins    DWORD PTR es:[edi],dx
  41f6b2:	cmp    DWORD PTR [edx+ebp*8-0x160de4dd],esp
  41f6b9:	and    esi,ebp
  41f6bb:	adc    cl,BYTE PTR [esi+0xeec568]
	...
  41f6d1:	add    BYTE PTR [eax],al
  41f6d3:	add    BYTE PTR ds:0xb6e8ff43,dh
  41f6d9:	pushf  
  41f6da:	mov    dh,0xe1
  41f6dc:	jbe    0x41f746
  41f6de:	dec    ebx
  41f6df:	stc    
  41f6e0:	jae    0x41f677
  41f6e2:	cmp    DWORD PTR [esi],esp
  41f6e4:	mov    al,fs:0x682ee8e8
  41f6ea:	(bad)
  41f6ed:	imul   edi,edi,0xffffffe8
  41f6f0:	mov    dh,0x16
  41f6f2:	inc    ebx
  41f6f3:	mov    ecx,0x62fc2b2a
  41f6f8:	ins    BYTE PTR es:[edi],dx
  41f6f9:	sbb    esi,DWORD PTR [ecx]
  41f6fb:	test   eax,0xc6505f61
  41f700:	mov    esp,0xf6befd6f
  41f705:	sbb    cl,BYTE PTR [ebx-0x35389ff]
  41f70b:	sbb    BYTE PTR [ebx-0x6f],bl
  41f70e:	push   eax
  41f70f:	ds xor bl,ch
  41f712:	xchg   BYTE PTR [ecx+edi*1],bl
  41f715:	pop    ss
  41f716:	jnp    0x41f761
  41f718:	inc    eax
  41f719:	adc    ebp,DWORD PTR [eax]
  41f71b:	mov    ?,WORD PTR [esi-0x54]
  41f71e:	out    0x0,eax
  41f720:	adc    al,0x41
  41f722:	sti    
  41f723:	(bad)  
  41f724:	aas    
  41f725:	pop    esp
  41f726:	xchg   eax,ebx
  41f728:	and    eax,0xd77480c0
  41f72d:	stos   DWORD PTR es:[edi],eax
  41f72e:	dec    ecx
  41f72f:	call   0x45c99035
  41f734:	sub    al,0x1d
  41f736:	inc    ecx
  41f737:	call   0x41f73c
	...
  41f74c:	pop    ebp
  41f74d:	outs   dx,BYTE PTR ds:[esi]
  41f74e:	sbb    bh,ah
  41f750:	jnp    0x41f7a4
  41f752:	or     eax,DWORD PTR [ebx+ebp*2+0x4d000093]
  41f759:	outs   dx,BYTE PTR ds:[esi]
  41f75a:	pop    ss
  41f75b:	cld    
  41f75c:	jmp    0x41f7b0
  41f75e:	je     0x41f77f
  41f760:	and    al,0x70
  41f762:	cld    
  41f763:	(bad)  
  41f764:	fld    TBYTE PTR [esi-0x7ea18b2c]
  41f76a:	mov    ds,edx
  41f76c:	pushf  
  41f76d:	xchg   edx,eax
  41f76e:	add    BYTE PTR [ecx-0x38e59],al
  41f774:	mov    ebx,0xd53b04d1
  41f779:	add    BYTE PTR [ecx+0x925cca],0x8b
  41f780:	fldcw  WORD PTR [esi+0x43]
  41f783:	xor    esi,DWORD PTR [edi-0x55]
  41f786:	pop    ecx
  41f787:	aam    0x0
  41f789:	std    
  41f78a:	xchg   DWORD PTR [ebp+0x68],eax
  41f78d:	stos   DWORD PTR es:[edi],eax
  41f78e:	cdq    
  41f78f:	inc    eax
  41f790:	jnp    0x41f7e3
  41f792:	sti    
  41f793:	je     0x41f7d1
  41f795:	lods   eax,DWORD PTR ds:[esi]
  41f796:	inc    ecx
  41f797:	xchg   esp,eax
  41f798:	jg     0x41f766
  41f79a:	sti    
  41f79b:	jne    0x41f79d
  41f79d:	sbb    eax,0x275b9449
  41f7a2:	inc    eax
  41f7a3:	call   FWORD PTR [ebx+0x51]
  41f7a6:	mov    DWORD PTR [ebp-0x4ad30],edx
  41f7ac:	mov    ch,0x10
  41f7ae:	ins    DWORD PTR es:[edi],dx
  41f7af:	aas    
	...
  41f7c4:	or     bl,BYTE PTR ds:0x3bb2c088
  41f7ca:	mov    ds:0x2db8b500,al
  41f7cf:	cmp    BYTE PTR [ebx+eiz*4+0x312a7498],ch
  41f7d6:	rcl    BYTE PTR [edi+0x4b8df5ce],0x41
  41f7dd:	or     DWORD PTR [edi+0x4244d244],0xe3c4f439
  41f7e7:	mov    DWORD PTR [eax],esi
  41f7e9:	or     al,0x42
  41f7eb:	std    
  41f7ec:	mov    edx,0xca730c8f
  41f7f1:	cmp    DWORD PTR [eax+0x427eaa44],eax
  41f7f7:	jmp    DWORD PTR [esi]
  41f7f9:	or     cl,BYTE PTR [ebx+0x428e0083]
  41f7ff:	std    
  41f800:	ds hlt 
  41f802:	cmp    al,0x38
  41f804:	hlt    
  41f805:	mov    bh,0xb4
  41f807:	bound  ebp,QWORD PTR [esp+edx*1]
  41f80a:	cmp    eax,0xb86ed837
  41f80f:	pop    edx
  41f810:	scas   al,BYTE PTR es:[edi]
  41f811:	and    edi,DWORD PTR [ecx]
  41f813:	jne    0x41f822
  41f815:	aaa    
  41f816:	ret    0xb0fc
  41f819:	dec    ebx
  41f81a:	out    dx,eax
  41f81b:	cmp    al,bl
  41f81d:	scas   al,BYTE PTR es:[edi]
  41f81e:	mov    dl,0x29
  41f820:	xor    eax,0x90730e86
  41f825:	(bad)  
  41f826:	leave  
  41f827:	or     eax,DWORD PTR [eax]
	...
  41f839:	add    BYTE PTR [eax],al
  41f83b:	add    BYTE PTR [ebp-0x77ee095],dl
  41f841:	jbe    0x41f882
  41f843:	std    
  41f844:	xor    bh,BYTE PTR [eax+0x3c3611b4]
  41f84a:	(bad)  
  41f84b:	cld    
  41f84c:	and    dl,BYTE PTR [eax-0x695ef95a]
  41f852:	push   0x7f
  41f854:	jns    0x41f802
  41f856:	xchg   ebp,eax
  41f857:	inc    ecx
  41f858:	mov    bh,0x22
  41f85a:	jecxz  0x41f824
  41f85c:	cmp    ebp,DWORD PTR [ebx]
  41f85e:	and    ebx,0x5f
  41f861:	shl    DWORD PTR [ecx-0x61],cl
  41f864:	test   eax,0xd24175ac
  41f869:	ret    0x416a
  41f86c:	loopne 0x41f8ce
  41f86e:	inc    edx
  41f86f:	sub    eax,0xf54260aa
  41f874:	rcl    DWORD PTR [edx+edx*1+0x61],1
  41f878:	inc    ecx
  41f879:	inc    edi
  41f87a:	push   0x45abaa3d
  41f87f:	inc    ecx
  41f880:	inc    ecx
  41f881:	aas    
  41f882:	push   0xffffffbf
  41f884:	xchg   edx,eax
  41f885:	(bad)  
  41f886:	mov    ebx,0xf31a3c0f
  41f88b:	inc    eax
  41f88c:	mov    al,ds:0xc91725ac
  41f891:	aam    0xa9
  41f893:	add    ebx,DWORD PTR [edi]
  41f895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f896:	scas   al,BYTE PTR es:[edi]
  41f897:	xchg   BYTE PTR [ebx+eiz*1-0x1e],ch
  41f89b:	cld    
  41f89c:	push   0x23
  41f89e:	out    dx,al
  41f89f:	mov    WORD PTR [eax],es
	...
  41f8b1:	add    BYTE PTR [eax],al
  41f8b3:	add    BYTE PTR [esi+esi*4+0x4f],dh
  41f8b7:	add    al,0xb5
  41f8b9:	(bad)  
  41f8ba:	(bad)  
  41f8bb:	iret   
  41f8bc:	push   edx
  41f8bd:	adc    ah,BYTE PTR [eax]
  41f8bf:	mov    eax,0x186410c2
  41f8c4:	pop    edx
  41f8c5:	popf   
  41f8c6:	ins    DWORD PTR es:[edi],dx
  41f8c7:	fwait
  41f8c8:	mov    ch,0x8f
  41f8ca:	out    0xec,eax
  41f8cc:	call   DWORD PTR [edi+0x16b2d662]
  41f8d2:	icebp  
  41f8d3:	mov    esi,gs
  41f8d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8d6:	adc    edi,ecx
  41f8d8:	mov    edx,0xbd230016
  41f8dd:	mov    ah,0x81
  41f8df:	jmp    0xb1c3889a
  41f8e4:	jne    0x41f89c
  41f8e6:	jp     0x41f95a
  41f8e8:	dec    ebx
  41f8e9:	xor    BYTE PTR [edi],0x24
  41f8ec:	shl    DWORD PTR [ebx],1
  41f8ee:	ds push 0x74
  41f8f1:	xchg   ebx,eax
  41f8f2:	jl     0x41f8bf
  41f8f4:	sub    edx,DWORD PTR [ebx-0x558a7e4d]
  41f8fa:	cld    
  41f8fb:	sbb    DWORD PTR [eax],edi
  41f8fd:	adc    BYTE PTR [esi+ebp*2],dh
  41f900:	jne    0x41f8ac
  41f902:	sub    BYTE PTR [ecx],0xae
  41f905:	aas    
  41f906:	mov    DWORD PTR [esi+eiz*4-0x191e3ff2],esp
  41f90d:	stos   BYTE PTR es:[edi],al
  41f90e:	adc    bl,BYTE PTR [ebp+0x6a004f9c]
  41f914:	jb     0x41f8b1
  41f916:	aaa    
  41f917:	mov    ah,0x0
	...
  41f929:	add    BYTE PTR [eax],al
  41f92b:	add    BYTE PTR [esi],bl
  41f92d:	sub    al,BYTE PTR [esi]
  41f92f:	pusha  
  41f930:	sub    esi,DWORD PTR [eax]
  41f932:	std    
  41f933:	cs cmc 
  41f935:	sbb    BYTE PTR [ebx-0x3530a23],cl
  41f93b:	push   ds
  41f93c:	stos   DWORD PTR es:[edi],eax
  41f93d:	jnp    0x41f904
  41f93f:	stos   BYTE PTR es:[edi],al
  41f940:	mov    dh,0x10
  41f942:	mov    ebx,0xfcacf589
  41f947:	jmp    0x2973888e
  41f94c:	mov    eax,ds:0xdeac8997
  41f951:	add    ch,BYTE PTR [ecx]
  41f953:	sub    eax,DWORD PTR [edi]
  41f955:	test   al,0x80
  41f957:	out    0xb7,eax
  41f959:	es add al,0x1a
  41f95c:	stc    
  41f95d:	mov    eax,0x36c6216
  41f962:	sub    DWORD PTR [ecx+ebp*1],esi
  41f965:	sbb    DWORD PTR [ebx+0x0],ecx
  41f968:	pop    esp
  41f969:	sbb    al,0xd
  41f96b:	mov    ecx,ecx
  41f96d:	out    dx,eax
  41f96e:	es push ebp
  41f970:	mov    WORD PTR [ecx*2+0x6a8ef704],ds
  41f977:	(bad)  
  41f978:	je     0x41f944
  41f97a:	pop    edx
  41f97b:	pop    ebx
  41f97c:	inc    ebp
  41f97d:	dec    esi
  41f97e:	adc    BYTE PTR [eax],al
  41f980:	leave  
  41f981:	push   ss
  41f982:	in     al,dx
  41f983:	cmp    DWORD PTR [eax],0x6c
  41f986:	jg     0x41f974
  41f988:	in     al,dx
  41f989:	mov    ebp,0xe88ce853
  41f98e:	sti    
  41f98f:	inc    DWORD PTR [eax]
	...
  41f9a1:	add    BYTE PTR [eax],al
  41f9a3:	add    BYTE PTR [edi-0x30],dl
  41f9a6:	adc    BYTE PTR [esp+ecx*1+0x88d78e8],al
  41f9ad:	mov    bl,0x8
  41f9af:	push   eax
  41f9b0:	out    0x86,al
  41f9b2:	mov    DWORD PTR [eax+edi*4-0x75],eax
  41f9b6:	push   eax
  41f9b7:	push   0xffffffcc
  41f9b9:	sar    ebx,0x15
  41f9bc:	adc    al,0x45
  41f9be:	aas    
  41f9bf:	add    BYTE PTR [ecx],bl
  41f9c1:	push   esp
  41f9c2:	js     0x41fa27
  41f9c4:	pop    ds
  41f9c5:	shl    BYTE PTR [eax],1
  41f9c7:	adc    al,0x8c
  41f9c9:	loop   0x41fa23
  41f9cb:	adc    DWORD PTR [eax-0x4e],0x1c
  41f9cf:	add    BYTE PTR [eax],ch
  41f9d1:	jg     0x41f9ce
  41f9d3:	je     0x41fa4d
  41f9d5:	scas   al,BYTE PTR es:[edi]
  41f9d6:	in     al,0x3d
  41f9d8:	das    
  41f9d9:	xchg   ebx,eax
  41f9da:	add    BYTE PTR [ebp-0xbb1734],al
  41f9e0:	call   0x1a2a1697
  41f9e5:	(bad)  
  41f9e7:	call   edi
  41f9e9:	dec    ebx
  41f9ea:	sbb    ebx,0x66acf8
  41f9f0:	(bad)  
  41f9f1:	jnp    0x41fa45
  41f9f3:	je     0x41f9aa
  41f9f5:	sar    DWORD PTR ds:0xe6447583,0x28
  41f9fc:	mov    al,0x7c
  41f9fe:	push   esi
  41f9ff:	inc    ecx
  41fa00:	mov    ch,0xb3
  41fa02:	dec    eax
  41fa03:	in     al,0x75
  41fa05:	mov    eax,0x332
	...
  41fa1a:	add    BYTE PTR [eax],al
  41fa1c:	in     eax,0x2
  41fa1e:	ret    0xaaff
  41fa21:	mov    WORD PTR [ebx],cs
  41fa23:	mov    DWORD PTR [eax+0x457ef1ac],eax
  41fa29:	mov    eax,0x8b2e0000
  41fa2e:	and    BYTE PTR [edi+0x16834],al
  41fa34:	mov    ch,0x85
  41fa36:	cmp    eax,0xc0c5f513
  41fa3b:	jmp    ebx
  41fa3d:	mov    ds:0x9860fce4,al
  41fa42:	cmp    eax,0xb849b173
  41fa47:	pop    ss
  41fa48:	bound  eax,QWORD PTR [ecx-0x48]
  41fa4b:	cmpps  xmm0,xmm2,0xc
  41fa4f:	std    
  41fa50:	inc    eax
  41fa51:	mov    al,ds:0x8105133d
  41fa56:	ret    0xbff
  41fa59:	dec    BYTE PTR [ecx-0x1e8aff1d]
  41fa5f:	inc    DWORD PTR [ecx]
  41fa61:	push   ds
  41fa62:	sub    eax,0xff7ba17f
  41fa67:	push   DWORD PTR [ebp-0x3a8cc21b]
  41fa6d:	sub    eax,0x2c7a07e0
  41fa72:	in     eax,dx
  41fa73:	cld    
  41fa74:	call   0x91b53837
  41fa79:	mov    eax,ds:0x24621fb4
  41fa7e:	sbb    eax,0xfd
	...
  41fa93:	add    al,ah
  41fa95:	(bad)  
  41fa96:	(bad)  
  41fa97:	cmp    al,0xc6
  41fa99:	sbb    esi,0xffffffb7
  41fa9c:	mov    edx,0xe4105ba8
  41faa1:	test   al,0xf3
  41faa3:	xlat   BYTE PTR ds:[ebx]
  41faa4:	pusha  
  41faa5:	dec    ebp
  41faa6:	out    0x8a,eax
  41faa8:	jbe    0x41fb25
  41faaa:	fs inc esp
  41faac:	mov    eax,0xb504bf17
  41fab1:	(bad)  
  41fab2:	mov    ch,0xc7
  41fab4:	(bad)  
  41fab5:	mov    ?,esi
  41fab7:	xchg   ebx,esi
  41fab9:	(bad)  
  41faba:	out    0x3,eax
  41fabc:	(bad)
  41fac0:	jmp    0x41fa51
  41fac2:	out    0x3,eax
  41fac4:	xor    al,0x2b
  41fac6:	repz add eax,eax
  41fac9:	adc    ebp,DWORD PTR [ebx+0x7f8fb504]
  41facf:	mov    DWORD PTR [ecx-0x58],ebp
  41fad2:	ins    DWORD PTR es:[edi],dx
  41fad3:	mov    ch,dh
  41fad5:	cwde   
  41fad6:	imul   edi,DWORD PTR [ebp-0x4b],0xffffff8f
  41fada:	out    0x3c,eax
  41fadc:	test   BYTE PTR [eax+0x4fb3f7fb],ch
  41fae2:	out    0x86,eax
  41fae4:	cmc    
  41fae5:	cwde   
  41fae6:	imul   ebp,DWORD PTR [ebp-0x4b],0xffffff8f
  41faea:	out    0xd3,eax
  41faec:	xchg   edx,eax
  41faed:	xor    DWORD PTR [ecx-0x5be95fc4],edi
  41faf3:	repz aaa 
  41faf5:	iret   
  41faf6:	cmc    
  41faf7:	xchg   DWORD PTR [eax],eax
	...
  41fb09:	add    BYTE PTR [eax],al
  41fb0b:	add    BYTE PTR [ebx],dh
  41fb0d:	(bad)  
  41fb0e:	out    0x3,eax
  41fb10:	jecxz  0x41fb52
  41fb12:	(bad)  
  41fb13:	stc    
  41fb14:	or     al,0x90
  41fb16:	mov    bh,0x2b
  41fb18:	nop    DWORD PTR [esi]
  41fb1b:	cmp    eax,0xb76f9f3c
  41fb20:	xchg   esi,eax
  41fb21:	adc    al,BYTE PTR [eax]
  41fb23:	jmp    FWORD PTR [edx]
  41fb25:	sub    ch,BYTE PTR [ecx]
  41fb27:	mov    ah,0x72
  41fb29:	ret    0xe940
  41fb2c:	cmp    eax,0x336c0c24
  41fb31:	arpl   bx,di
  41fb33:	(bad)  
  41fb34:	cmp    DWORD PTR [edi],0xd13616fd
  41fb3a:	(bad)  
  41fb3b:	int    0xf6
  41fb3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb3e:	lds    esp,FWORD PTR [edx+eiz*1-0x5b]
  41fb42:	cld    
  41fb43:	mov    dh,0xb5
  41fb45:	(bad)  
  41fb46:	(bad)  
  41fb47:	call   0xf86e7825
  41fb4c:	mul    BYTE PTR [edi+0x6842a983]
  41fb52:	mov    DWORD PTR [edx+edx*8-0x5c],ebp
  41fb56:	cld    
  41fb57:	mov    ?,ebp
  41fb59:	mov    WORD PTR [edi+ebx*4-0xb],ds
  41fb5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb5e:	jae    0x41fb1b
  41fb60:	mov    al,ds:0xf59f308c
  41fb65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb66:	or     al,0xf5
  41fb68:	mov    al,0x5e
  41fb6a:	mov    bl,0x4d
  41fb6c:	xchg   ebx,eax
  41fb6d:	stos   BYTE PTR es:[edi],al
  41fb6e:	cld    
  41fb6f:	ins    BYTE PTR es:[edi],dx
	...
  41fb84:	xor    esp,DWORD PTR [ebx-0x5]
  41fb87:	push   esi
  41fb88:	cmp    DWORD PTR [edi],0xdc2e16fd
  41fb8e:	jecxz  0x41fbd4
  41fb90:	icebp  
  41fb91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb92:	les    esp,FWORD PTR [edx+eiz*4-0x56]
  41fb96:	cld    
  41fb97:	ss mov ah,0x8f
  41fb9a:	(bad)  
  41fb9b:	call   0xf8727e79
  41fba0:	jbe    0x41fb49
  41fba2:	sub    DWORD PTR [ecx],0x43
  41fba5:	sub    DWORD PTR [eax-0x17],0x83009036
  41fbac:	mov    dh,0xa4
  41fbae:	jb     0x41fbb0
  41fbb0:	and    BYTE PTR [edi+ebp*1-0x1],0x81
  41fbb5:	movlps xmm0,QWORD PTR [eax+0x4c]
  41fbb9:	fs jno 0x41fbec
  41fbbc:	dec    ebx
  41fbbd:	jge    0x41fb7f
  41fbbf:	adc    bl,BYTE PTR [ebx+ecx*4-0x2f38a1a5]
  41fbc6:	sub    BYTE PTR [ebx+0x15],bl
  41fbc9:	dec    esi
  41fbca:	sub    al,0x0
  41fbcc:	adc    DWORD PTR [esi],0xdeb0e8ec
  41fbd2:	sti    
  41fbd3:	call   DWORD PTR [eax-0x36f88eb5]
  41fbd9:	push   0x21
  41fbdb:	pusha  
  41fbdc:	inc    edx
  41fbdd:	iret   
  41fbde:	cld    
  41fbdf:	push   edx
  41fbe0:	rcl    BYTE PTR [esi],cl
  41fbe2:	jno    0x41fbf8
  41fbe4:	ret    
  41fbe5:	sar    ebx,0x75
	...
  41fbfc:	cld    
  41fbfd:	hlt    
  41fbfe:	cld    
  41fbff:	(bad)  
  41fc00:	mov    eax,ds:0xc015fb93
  41fc05:	inc    ecx
  41fc06:	aas    
  41fc07:	add    dl,al
  41fc09:	push   0x71
  41fc0b:	adc    BYTE PTR [edi+0x63],dl
  41fc0e:	sti    
  41fc0f:	jne    0x41fc09
  41fc11:	imul   esi,DWORD PTR [ecx+0x8],0xd660805b
  41fc18:	pop    ds
  41fc19:	xchg   ebx,eax
  41fc1a:	xchg   eax,ebx
  41fc1c:	push   ecx
  41fc1d:	push   0x75
  41fc1f:	push   esp
  41fc20:	push   ecx
  41fc21:	inc    esi
  41fc22:	js     0x41fc74
  41fc24:	and    DWORD PTR [edx+0x74],esp
  41fc27:	dec    esp
  41fc28:	pop    ds
  41fc29:	stos   BYTE PTR es:[edi],al
  41fc2a:	cld    
  41fc2b:	jae    0x41fc80
  41fc2d:	or     eax,0xf68c1079
  41fc32:	cmp    eax,0x3f485cbe
  41fc37:	add    BYTE PTR [edx+0x69],al
  41fc3a:	adc    DWORD PTR [ebp+esi*4-0x7f003f56],esp
  41fc41:	stos   DWORD PTR es:[edi],eax
  41fc42:	fcomp  st(5)
  41fc44:	idiv   BYTE PTR [eax+0x907303]
  41fc4a:	jne    0x41fcc2
  41fc4c:	cmc    
  41fc4d:	mov    eax,0xca391339
  41fc52:	sar    bh,0x39
  41fc55:	clc    
  41fc56:	lods   al,BYTE PTR ds:[esi]
  41fc57:	push   es
  41fc58:	ds mov al,0x28
  41fc5b:	cmp    bl,bh
  41fc5d:	mov    bh,0x0
  41fc5f:	jmp    0x41fc64
	...
  41fc74:	mov    bh,0x8a
  41fc76:	inc    esp
  41fc77:	test   ch,dh
  41fc79:	arpl   WORD PTR [ecx],ax
  41fc7b:	cmp    DWORD PTR [eax-0x4abea590],0xc0fcceb7
  41fc85:	and    al,0x13
  41fc87:	inc    eax
  41fc88:	mov    ch,0x4d
  41fc8a:	fimul  DWORD PTR [eax-0x3e28af0a]
  41fc90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc91:	mov    eax,0x39085087
  41fc96:	cmp    ecx,DWORD PTR ds:0xff8435c2
  41fc9c:	jmp    0xaa83:0x482439b7
  41fca3:	ds mov ch,0x38
  41fca6:	cmp    al,0x2d
  41fca8:	dec    ecx
  41fca9:	mov    es,WORD PTR [edi+esi*8-0x7fe44361]
  41fcb0:	in     al,dx
  41fcb1:	xchg   edi,eax
  41fcb2:	test   bh,dh
  41fcb4:	push   esp
  41fcb5:	lds    eax,FWORD PTR [edx+0xb6b464]
  41fcbb:	sub    BYTE PTR [ecx+edx*8-0x48017af7],0x0
  41fcc3:	add    BYTE PTR [edi],cl
  41fcc5:	mov    ebx,0x901f022d
  41fcca:	add    eax,0x381a75dc
  41fccf:	sub    DWORD PTR [edi+0x70],0x67
  41fcd3:	cmp    eax,0x83e021da
	...
  41fcec:	outs   dx,DWORD PTR ds:[esi]
  41fced:	sub    dh,dh
  41fcef:	xor    esp,0x3503e78e
  41fcf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcf6:	mov    al,0xa
  41fcf8:	ss pop ebp
  41fcfa:	call   0xfc7bb202
  41fcff:	(bad)  [ebp+0x10]
  41fd02:	loopne 0x41fced
  41fd04:	mov    cl,0xa
  41fd06:	add    DWORD PTR [ebx],eax
  41fd08:	mov    ch,0x8f
  41fd0a:	inc    ecx
  41fd0b:	adc    cl,BYTE PTR [ebp-0x27c49930]
  41fd11:	xchg   esp,eax
  41fd12:	fs pop ss
  41fd14:	and    ah,BYTE PTR [ebp+0x47c1ade6]
  41fd1a:	stos   BYTE PTR es:[edi],al
  41fd1b:	test   BYTE PTR [edx],cl
  41fd1d:	dec    ecx
  41fd1e:	sbb    al,0x0
  41fd20:	lahf   
  41fd21:	xchg   DWORD PTR [edi],edi
  41fd23:	inc    ebp
  41fd24:	das    
  41fd25:	iret   
  41fd26:	loop   0x41fd0b
  41fd28:	mov    esi,0xb100192e
  41fd2d:	sub    ebp,edi
  41fd2f:	sbb    esi,DWORD PTR ds:0xb7b7b6a7
  41fd35:	pshufw mm7,mm3,0x58
  41fd39:	xchg   ebp,eax
  41fd3a:	cmp    esp,DWORD PTR [bp+di-0xfe5]
  41fd3f:	add    edx,0x72
  41fd42:	out    dx,al
  41fd43:	jle    0x41fd16
  41fd45:	(bad)  
  41fd46:	out    0x3,eax
  41fd48:	dec    edi
  41fd49:	mov    BYTE PTR [edi-0xd31c0bc],ch
  41fd4f:	jecxz  0x41fd51
	...
  41fd61:	add    BYTE PTR [eax],al
  41fd63:	add    dh,ch
  41fd65:	cs mov ecx,0x29deff
  41fd6b:	mov    edi,0xf9f70fe6
  41fd70:	dec    edx
  41fd71:	xchg   ecx,eax
  41fd72:	and    BYTE PTR [eax],0x8e
  41fd75:	and    ah,dh
  41fd77:	imul   edi,DWORD PTR [esi+0x31087475],0xa952a9c
  41fd81:	adc    bh,dh
  41fd83:	(bad)  
  41fd84:	mov    ebp,0x9dfe680b
  41fd89:	mov    ds:0x2058f07f,al
  41fd8e:	or     ebp,DWORD PTR [ecx-0x72]
  41fd91:	bound  ecx,QWORD PTR ds:0x8fc76c
  41fd97:	jmp    0xaa9a80ac
  41fd9c:	or     BYTE PTR [eax-0x63c955a8],cl
  41fda2:	pop    edx
  41fda3:	cmp    al,0xb5
  41fda5:	cmp    DWORD PTR [edx],ebx
  41fda7:	and    DWORD PTR [eax+0xf],edi
  41fdaa:	idiv   ecx
  41fdac:	bound  edx,QWORD PTR [ecx+0x220fb080]
  41fdb2:	adc    esi,DWORD PTR [ebx+0x77]
  41fdb5:	xchg   ebx,eax
  41fdb6:	and    ch,bl
  41fdb8:	push   edi
  41fdb9:	push   ds
  41fdba:	add    al,0xd5
  41fdbc:	push   esp
  41fdbd:	sbb    al,BYTE PTR [edi]
  41fdbf:	imul   ebp,DWORD PTR [edi+0x376c0d69],0xe9008f
	...
  41fdd9:	add    BYTE PTR [eax],al
  41fddb:	add    BYTE PTR [eax],dl
  41fddd:	jge    0x41fe37
  41fddf:	stos   BYTE PTR es:[edi],al
  41fde0:	ss pushf 
  41fde2:	sub    al,0xde
  41fde4:	push   edx
  41fde5:	mov    ch,bh
  41fde7:	lea    cx,[edi]
  41fdea:	neg    DWORD PTR [esi]
  41fdec:	add    eax,0xc6407fe2
  41fdf1:	and    esi,edi
  41fdf3:	loopne 0x41fe5a
  41fdf5:	sub    al,0x6a
  41fdf7:	add    BYTE PTR [ecx+0x2a0fbfc7],dl
  41fdfd:	cmp    BYTE PTR ds:[edx+0x3cc58c],0x9c
  41fe05:	repnz push esi
  41fe07:	adc    ch,0xab
  41fe0a:	jno    0x41fda4
  41fe0c:	es scas al,BYTE PTR es:[edi]
  41fe0e:	push   esp
  41fe0f:	ret    
  41fe10:	xchg   ebx,eax
  41fe11:	and    DWORD PTR [ebp+0x5a8f0480],edi
  41fe17:	inc    eax
  41fe18:	pop    esp
  41fe19:	(bad)  
  41fe1a:	je     0x41fe20
  41fe1c:	inc    esi
  41fe1d:	scas   eax,DWORD PTR es:[edi]
  41fe1e:	push   esp
  41fe1f:	ret    
  41fe20:	int3   
  41fe21:	gs pop ds
  41fe23:	je     0x41fde0
  41fe25:	push   cs
  41fe26:	cmc    
  41fe27:	aas    
  41fe28:	jmp    0x5432e5cc
  41fe2d:	xor    eax,0x8c2680cd
  41fe32:	pop    edx
  41fe33:	inc    eax
  41fe34:	sbb    al,0x8f
  41fe36:	je     0x41fe3c
  41fe38:	xchg   BYTE PTR [ebp+0x648cc354],ch
  41fe3e:	pop    ds
  41fe3f:	je     0x41fe41
	...
  41fe51:	add    BYTE PTR [eax],al
  41fe53:	add    BYTE PTR [ebx+ecx*1-0x7c36c00b],ch
  41fe5a:	out    0xf0,eax
  41fe5c:	add    esi,DWORD PTR ds:0x8b9680cd
  41fe62:	pop    edx
  41fe63:	inc    eax
  41fe64:	or     al,0x8f
  41fe66:	jno    0x41fe75
  41fe68:	pop    esp
  41fe69:	fs pop ds
  41fe6b:	je     0x41fe51
  41fe6d:	push   cs
  41fe6e:	cmc    
  41fe6f:	aas    
  41fe70:	call   0x8d022e02
  41fe75:	dec    esi
  41fe76:	mov    DWORD PTR [ecx-0x24],ecx
  41fe79:	push   edx
  41fe7a:	ins    BYTE PTR es:[edi],dx
  41fe7b:	inc    ecx
  41fe7c:	fsub   QWORD PTR [ebp+0x6c]
  41fe7f:	inc    ecx
  41fe80:	int3   
  41fe81:	test   DWORD PTR [ecx+0x41],ebp
  41fe84:	mov    ch,0xb8
  41fe86:	call   0xeffaf2f5
  41fe8b:	push   0xfffffff4
  41fe8d:	mov    eax,0xb8f46b62
  41fe92:	pop    edi
  41fe93:	imul   esi,esp,0xffffffb8
  41fe96:	jp     0x41ff03
  41fe98:	hlt    
  41fe99:	mov    eax,0xb8f46a9a
  41fe9e:	push   ebp
  41fe9f:	imul   esi,esp,0xffffffb8
  41fea2:	push   ebx
  41fea3:	imul   esi,esp,0xffffffb8
  41fea6:	sub    DWORD PTR [ebx-0xc],ebp
  41fea9:	mov    eax,0xb8f46e00
  41feae:	add    BYTE PTR [esi-0xc],ch
  41feb1:	mov    eax,0xb8f46e14
  41feb6:	clc    
  41feb7:	ins    DWORD PTR es:[edi],dx
	...
  41fecc:	hlt    
  41fecd:	mov    eax,0x355988cf
  41fed2:	sbb    eax,0xe4d436f8
  41fed7:	mov    al,ch
  41fed9:	test   al,0xd1
  41fedb:	mov    BYTE PTR [eax+0x2588cab0],dl
  41fee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fee2:	inc    eax
  41fee3:	xchg   DWORD PTR [ecx-0x74],edi
  41fee6:	sbb    al,0x87
  41fee8:	jno    0x41fe7e
  41feea:	adc    al,0x87
  41feec:	jns    0x41fe7a
  41feee:	sbb    BYTE PTR [edi-0x75f32b8f],al
  41fef4:	jnp    0x41fe8f
  41fef6:	mov    BYTE PTR [ecx+edx*8-0x53],al
  41fefa:	and    BYTE PTR [ecx+ebx*4-0x53],0xb5
  41feff:	push   esp
  41ff00:	mov    ecx,DWORD PTR ds:[eax]
  41ff03:	je     0x41febf
  41ff05:	in     eax,0x40
  41ff07:	out    0x59,eax
  41ff09:	mov    DWORD PTR [eax],0xafef3800
  41ff0f:	inc    edx
  41ff10:	aas    
  41ff11:	(bad)  
  41ff12:	mov    ch,0x4
  41ff14:	cmp    eax,ebx
  41ff16:	shl    dh,cl
  41ff18:	cmp    ch,BYTE PTR [eax+0x109bade8]
  41ff1e:	push   eax
  41ff1f:	jmp    DWORD PTR [esi]
  41ff21:	lods   al,BYTE PTR ds:[esi]
  41ff22:	data16 cmp al,0xb2
  41ff25:	sbb    ebx,DWORD PTR [esi]
  41ff27:	and    DWORD PTR [edx+0x3c1abc63],0x4d
  41ff2e:	iret   
  41ff2f:	add    BYTE PTR [eax],0x0
	...
  41ff42:	add    BYTE PTR [eax],al
  41ff44:	jne    0x41ff62
  41ff46:	cmp    cl,BYTE PTR [edx-0x7fc95e8d]
  41ff4c:	jne    0x41ff6a
  41ff4e:	and    cl,BYTE PTR [ecx+0x7ec378fb]
  41ff54:	mov    ecx,0xc9bd6f88
  41ff59:	mov    ah,0x3d
  41ff5b:	fbstp  TBYTE PTR [edx]
  41ff5d:	xchg   esp,eax
  41ff5e:	fisttp WORD PTR [ebx+0x43ba78fb]
  41ff64:	cmc    
  41ff65:	mov    dh,0x19
  41ff67:	adc    esi,DWORD PTR [ebp+0x3bbe718f]
  41ff6d:	gs add eax,0x4b16b6af
  41ff73:	loopne 0x41ff43
  41ff75:	arpl   di,si
  41ff77:	scas   al,BYTE PTR es:[edi]
  41ff78:	mov    dh,0x16
  41ff7a:	cmp    esp,eax
  41ff7c:	(bad)  
  41ff7d:	jae    0x41ff5a
  41ff7f:	test   eax,0x898ae318
  41ff85:	imul   eax,edi,0xffffff86
  41ff88:	mov    ecx,0xd6b87090
  41ff8d:	jg     0x41ffef
  41ff8f:	rcl    BYTE PTR [esi-0x47c42d95],0xb
  41ff96:	push   ss
  41ff97:	add    eax,0xb6678fb5
  41ff9c:	fistp  DWORD PTR [eax+0x0]
  41ff9f:	arpl   WORD PTR [eax+0xb6e101a],bp
  41ffa5:	lea    edi,[edi-0x19]
	...
  41ffbc:	ret    0x3ca0
  41ffbf:	call   0x72c7927a
  41ffc4:	mov    eax,0x6262008f
  41ffc9:	mov    BYTE PTR ds:0x44a1637f,cl
  41ffcf:	push   0xffffffd9
  41ffd1:	fs or  eax,0x7fa86e
  41ffd7:	jmp    0xc0c56b9d
  41ffdc:	ss pusha 
  41ffde:	add    BYTE PTR [ecx-0x44],ch
  41ffe1:	xchg   esp,eax
  41ffe2:	or     eax,0x92c86d
  41ffe7:	jmp    0xf64ba622
  41ffec:	loop   0x420067
  41ffee:	or     eax,0x260fb6e9
  41fff3:	jmp    0x5135:0xee085135
  41fffa:	or     al,0xe6
  41fffc:	sub    al,0x89
  41fffe:	and    dl,0x6e
  420001:	xchg   ebx,eax
  420002:	test   BYTE PTR [edx+0x5008fb7],bh
  420008:	in     eax,dx
  420009:	pop    ss
  42000a:	push   es
  42000b:	scas   eax,DWORD PTR es:[edi]
  42000c:	pusha  
  42000d:	mov    eax,ds:0xf9fd20f
  420012:	stc    
  420013:	in     al,0xb9
  420015:	or     ecx,esi
  420017:	out    0xb6,al
  420019:	pop    DWORD PTR [eax-0x7c6d535e]
  42001f:	scas   eax,DWORD PTR es:[edi]
	...
  420034:	stc    
  420035:	lahf   
  420036:	cld    
  420037:	scas   eax,DWORD PTR es:[edi]
  420038:	xor    BYTE PTR [ecx+0xf578235],ah
  42003e:	stc    
  42003f:	add    cl,ch
  420041:	mov    al,BYTE PTR [ecx+eax*8-0x7fff741a]
  420048:	inc    edi
  420049:	xchg   esi,eax
  42004a:	or     eax,DWORD PTR [ebp+0x962d]
  420050:	dec    edi
  420051:	fsub   DWORD PTR [eax]
  420053:	adc    al,0xcc
  420055:	popa   
  420056:	inc    esi
  420057:	add    esi,ecx
  420059:	fild   WORD PTR [eax-0x7e68ac75]
  42005f:	shl    BYTE PTR [eax-0x49],0x87
  420063:	push   esp
  420064:	mov    al,0x7f
  420066:	xchg   DWORD PTR [eax+eax*8-0x7d],ecx
  42006a:	daa    
  42006b:	retf   0x82d
  42006e:	into   
  42006f:	(bad)  
  420070:	mov    esp,0x8674c01d
  420075:	or     DWORD PTR [esi+0x17],eax
  420078:	sbb    BYTE PTR [edi],0xc
  42007b:	add    al,0xd4
  42007d:	fcom   QWORD PTR [ebx]
  42007f:	mov    dl,BYTE PTR [edx]
  420081:	mov    WORD PTR [edi+edi*2],fs
  420084:	in     al,0xde
  420086:	and    BYTE PTR [edi],cl
  420088:	pop    ebx
  420089:	push   ds
  42008a:	jg     0x42008c
  42008c:	pop    esp
  42008d:	xchg   ebx,eax
  42008e:	jg     0x4200f4
  420090:	mov    al,0x77
  420092:	add    cl,ch
  420094:	xchg   ebx,eax
  420095:	(bad)  
  420096:	sti    
  420097:	inc    DWORD PTR [eax]
	...
  4200a9:	add    BYTE PTR [eax],al
  4200ab:	add    BYTE PTR [esi+ebp*2-0x756ff0e0],bl
  4200b2:	or     al,0x0
  4200b4:	or     al,0x13
  4200b6:	test   DWORD PTR [ecx],0xbfe170b
  4200bc:	sbb    al,0x93
  4200be:	mov    BYTE PTR [esi+0x1d],0xb0
  4200c2:	in     eax,0x2c
  4200c4:	pop    ebx
  4200c5:	arpl   bx,di
  4200c7:	adc    BYTE PTR [edi-0x62],0xb
  4200cb:	test   DWORD PTR [ebp-0x4afffaa3],esi
  4200d1:	xor    cl,BYTE PTR [edx]
  4200d3:	ror    ch,0xaa
  4200d6:	pop    eax
  4200d7:	or     BYTE PTR [edx-0x4af6e3cd],ch
  4200dd:	test   al,0x46
  4200df:	inc    esi
  4200e0:	mov    ah,0xe0
  4200e2:	pop    eax
  4200e3:	adc    BYTE PTR [eax-0x5e],cl
  4200e6:	cmp    BYTE PTR [esi-0x5d],0xb3
  4200ea:	mov    ah,0x3
  4200ec:	out    0x68,al
  4200ee:	sbb    eax,0xc468e601
  4200f3:	mov    edi,0x43faad95
  4200f8:	shr    DWORD PTR [ebp+0x31aa4678],1
  4200fe:	leave  
  4200ff:	wrmsr  
  420101:	push   0x662e10b8
  420106:	xor    eax,edx
  420108:	add    BYTE PTR ss:[esp+esi*2],0xbf
  42010d:	lock add DWORD PTR [ebx+0x0],eax
	...
  420124:	push   ds
  420125:	mov    esi,0xa6350000
  42012a:	or     BYTE PTR [edx+0x7ce4c5f3],0x3d
  420131:	in     al,dx
  420132:	in     al,0xc
  420134:	mov    edx,0x42fe4234
  420139:	mov    ch,0x7d
  42013b:	inc    esp
  42013c:	xchg   ecx,eax
  42013d:	cwde   
  42013e:	fld    QWORD PTR [edx-0x3f]
  420141:	iret   
  420142:	pop    edx
  420143:	or     eax,0x437da8b5
  420148:	mov    cl,0x81
  42014a:	enter  0xc523,0x21
  42014e:	mov    edi,0x146bb60b
  420153:	xchg   edi,eax
  420154:	ds loop 0x4201d2
  420157:	inc    esp
  420158:	(bad)  [edi-0x788c8131]
  42015e:	loop   0x4201a2
  420160:	push   0xac0a197f
  420165:	push   ebx
  420166:	ret    
  420167:	(bad)  [ebp-0x79]
  42016a:	jb     0x4201bf
  42016c:	xor    cl,BYTE PTR [ebx-0x3d]
  42016f:	neg    ebp
  420171:	xchg   BYTE PTR [edx-0x29],ah
  420174:	xchg   esi,eax
  420175:	addr16 pusha 
  420177:	scas   eax,DWORD PTR es:[edi]
  420178:	xchg   esi,eax
  420179:	arpl   WORD PTR [edx-0x51],bp
  42017c:	xchg   esi,eax
  42017d:	ja     0x420166
  42017f:	mov    eax,0xe7d308ba
  420184:	mov    edx,0xe7cb06
	...
  420199:	add    BYTE PTR [eax],al
  42019b:	add    dl,cl
  42019d:	push   0x73e90e29
  4201a2:	repz jl 0x4201a0
  4201a5:	xchg   DWORD PTR [edx-0x39],esp
  4201a8:	(bad)  
  4201a9:	jg     0x420207
  4201ab:	(bad)  
  4201ac:	mov    dl,0x9c
  4201ae:	outs   dx,DWORD PTR ds:[esi]
  4201af:	(bad)  
  4201b0:	(bad)  
  4201b1:	jg     0x420225
  4201b3:	leave  
  4201b4:	mov    edx,0xfb7c2888
  4201b9:	mov    ebx,esi
  4201bb:	mov    BYTE PTR [edi],bh
  4201bd:	mov    esp,edi
  4201bf:	add    esi,DWORD PTR [ebx+0x56]
  4201c2:	call   0xcb958db8
  4201c7:	or     edi,DWORD PTR [eax+0x40319b13]
  4201cd:	popf   
  4201ce:	jno    0x42017f
  4201d0:	mov    dl,0x8
  4201d2:	sbb    BYTE PTR es:[esi],dh
  4201d5:	rcr    BYTE PTR [edx-0x21],1
  4201d8:	cmp    eax,0x2c0c0344
  4201dd:	dec    esp
  4201de:	or     edx,DWORD PTR [esp+ecx*8]
  4201e1:	leave  
  4201e2:	daa    
  4201e3:	sar    DWORD PTR ds:0x61b5ffce,cl
  4201e9:	adc    al,al
  4201eb:	xor    eax,0xfe460703
  4201f0:	adc    dl,BYTE PTR [ebx]
  4201f2:	or     al,0xe7
  4201f4:	outs   dx,BYTE PTR ds:[esi]
  4201f5:	push   ebp
  4201f6:	adc    eax,0x2483ff63
  4201fb:	push   cs
  4201fc:	popa   
  4201fd:	push   ebx
  4201fe:	and    al,0xf6
	...
  420214:	mov    ch,0x10
  420216:	dec    edx
  420217:	jle    0x42019d
  420219:	call   0x8000:0x84dd0d80
  420220:	mov    bh,0x9d
  420222:	cld    
  420223:	xor    WORD PTR [edi+0x513aee0a],dx
  42022a:	or     ebp,ecx
  42022c:	mov    dh,0xf
  42022e:	stc    
  42022f:	jecxz  0x4201e6
  420231:	adc    esi,DWORD PTR [edi]
  420233:	hlt    
  420234:	mov    dh,0x8f
  420236:	mov    ah,BYTE PTR [edi-0x1a758c53]
  42023c:	mov    BYTE PTR [ebp-0x704920dd],dh
  420242:	(bad)  
  420243:	scas   eax,DWORD PTR es:[edi]
  420244:	mov    bh,0x8e
  420246:	mov    esi,ebx
  420248:	cmp    ebx,DWORD PTR [edx-0x773b92f4]
  42024e:	add    cl,ch
  420250:	loope  0x42021f
  420252:	cld    
  420253:	push   ds
  420254:	xor    cl,bh
  420256:	jae    0x42024b
  420258:	rcl    BYTE PTR [ebp+0x15],1
  42025b:	int    0x37
  42025d:	mov    edi,edi
  42025f:	pusha  
  420260:	outs   dx,DWORD PTR ds:[esi]
  420261:	or     DWORD PTR [edx+0x7d739c2f],0x71
  420268:	cli    
  420269:	outs   dx,DWORD PTR ds:[esi]
  42026a:	or     eax,0xb9d32e6
  42026f:	jmp    0x86092a
  420274:	test   al,0x83
  420276:	daa    
  420277:	inc    ebp
	...
  42028c:	and    al,dl
  42028e:	in     eax,0x9c
  420290:	adc    dl,BYTE PTR [eax-0x3bb88000]
  420296:	jno    0x4202a2
  420298:	xchg   BYTE PTR [esi-0x6f1f02dc],al
  42029e:	mov    BYTE PTR [esi],al
  4202a0:	aaa    
  4202a1:	fnstsw WORD PTR [ebx+edi*8-0x67]
  4202a5:	mov    es,WORD PTR [ecx+0x8fe140]
  4202ab:	cmp    dl,0x6b
  4202ae:	mov    BYTE PTR [esi-0x16],0x91
  4202b2:	mov    BYTE PTR [esi-0x31],0x91
  4202b6:	mov    BYTE PTR [esi-0x33],0x81
  4202ba:	in     eax,0xc5
  4202bc:	mov    al,ds:0xba80008f
  4202c1:	xchg   esp,eax
  4202c2:	jg     0x420312
  4202c4:	xchg   esp,eax
  4202c5:	pusha  
  4202c6:	jg     0x420316
  4202c8:	mov    al,ds:0x86fb8060
  4202cd:	jecxz  0x420257
  4202cf:	add    bh,0x99
  4202d2:	jo     0x42025b
  4202d4:	or     al,0x6c
  4202d6:	dec    eax
  4202d7:	wbinvd 
  4202d9:	xchg   ecx,eax
  4202da:	or     DWORD PTR [eax],eax
  4202dc:	pop    esp
  4202dd:	dec    ecx
  4202de:	inc    esi
  4202df:	add    DWORD PTR [ecx+0x76],ebx
  4202e2:	jno    0x4202e3
  4202e4:	mov    bl,0x5f
  4202e6:	cmp    bl,0x38
  4202e9:	nop
  4202ea:	or     DWORD PTR [ebp+ebx*2+0xc6008f],0x0
	...
  420301:	add    BYTE PTR [eax],al
  420303:	add    BYTE PTR [edx],bl
  420305:	mov    es,WORD PTR [esi]
  420307:	jmp    0x3e9dec
  42030c:	int3   
  42030d:	push   sp
  42030f:	setns  ch
  420312:	std    
  420313:	push   DWORD PTR [ebp-0x4bb9bd58]
  420319:	mov    cl,0x1b
  42031b:	jp     0x4202c6
  42031d:	test   al,0x0
  42031f:	or     BYTE PTR [esi],0x79
  420322:	std    
  420323:	sbb    BYTE PTR [ebp-0x4ffff59],0x72
  42032a:	add    ecx,DWORD PTR [eax]
  42032c:	or     al,0x81
  42032e:	add    BYTE PTR [eax],al
  420330:	mov    ch,0x28
  420332:	sub    DWORD PTR ds:0xfed62bba,ebp
  420338:	loop   0x4202e2
  42033a:	inc    edx
  42033b:	inc    esi
  42033c:	mov    ah,0x9f
  42033e:	sbb    edx,DWORD PTR [esi-0x3f]
  420341:	test   al,0x0
  420343:	mov    esi,DWORD PTR [esi-0x8]
  420346:	out    dx,eax
  420347:	push   es
  420348:	dec    edx
  420349:	jbe    0x4202f1
  42034b:	or     al,0xfb
  42034d:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42034f:	sbb    BYTE PTR [ebp-0xc795988],0x98
  420356:	inc    edx
  420357:	inc    esi
  420358:	mov    ah,0xae
  42035a:	sbb    edi,DWORD PTR [edx]
  42035c:	test   eax,0x8e8000a8
  420361:	mov    dh,BYTE PTR [edi+0x3ea7306]
  420367:	or     DWORD PTR [eax],eax
	...
  420379:	add    BYTE PTR [eax],al
  42037b:	add    BYTE PTR [esp+ebx*4+0x287afffc],cl
  420382:	sub    DWORD PTR [eax],esi
  420384:	icebp  
  420385:	mov    esi,0x1acf980
  42038a:	call   0x113431f4
  42038f:	data16 into 
  420391:	push   0x5ac265fa
  420396:	cmp    DWORD PTR [esi-0x4a],esp
  420399:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42039b:	or     BYTE PTR [ebp-0x28],0xa2
  42039f:	xchg   bl,dh
  4203a1:	(bad)  
  4203a2:	imul   DWORD PTR [eax+ebx*1-0x72]
  4203a6:	out    0x3,eax
  4203a8:	xchg   ebx,eax
  4203a9:	push   esi
  4203aa:	test   al,0xfe
  4203ac:	cmp    BYTE PTR [ecx+eiz*8+0x2d05b503],bl
  4203b3:	pop    ss
  4203b4:	fld    DWORD PTR [esi]
  4203b6:	jmp    0x4203b2
  4203b8:	adc    esp,DWORD PTR [edi+0xcb503e2]
  4203be:	sub    dl,BYTE PTR [ecx+edi*4-0x78]
  4203c2:	push   ds
  4203c3:	and    DWORD PTR [ebx-0x76],ebx
  4203c6:	pop    ebp
  4203c7:	inc    edx
  4203c8:	push   ebx
  4203c9:	push   cs
  4203ca:	jg     0x4203bf
  4203cc:	pop    eax
  4203cd:	or     BYTE PTR ds:0xe850f312,ah
  4203d3:	(bad)  
  4203d4:	fcmovnb st,st(3)
  4203d6:	icebp  
  4203d7:	add    esi,DWORD PTR [ebp+0x47e3720f]
  4203dd:	mov    BYTE PTR [ebp+0xc5],ah
	...
  4203f3:	add    BYTE PTR [ebx-0x43b9af76],bh
  4203f9:	(bad)  
  4203fa:	out    0x83,eax
  4203fc:	lods   al,BYTE PTR ds:[esi]
  4203fd:	pusha  
  4203fe:	ror    DWORD PTR [eax+0x35],cl
  420401:	xchg   ebp,eax
  420402:	imul   ebx,DWORD PTR [edx+0x32]
  420406:	jb     0x4203cd
  420408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420409:	xor    edx,edx
  42040b:	inc    ebx
  42040c:	mov    edi,0x6c6de631
  420411:	xor    ch,dl
  420413:	inc    esp
  420414:	adc    ecx,DWORD PTR ds:0x6d8f30f
  42041a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42041b:	adc    DWORD PTR [edi+esi*8+0x63],ebx
  42041f:	ret    0x5c72
  420422:	loopne 0x4203da
  420424:	(bad)  
  420425:	xor    esi,esi
  420427:	ins    DWORD PTR es:[edi],dx
  420428:	je     0x42045c
  42042a:	push   0x1b
  42042c:	test   DWORD PTR [ecx],esi
  42042e:	add    BYTE PTR [eax+0x78],ah
  420431:	jge    0x4203f9
  420433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420434:	mov    cl,0x89
  420436:	out    0x71,eax
  420438:	sub    al,0x99
  42043a:	cld    
  42043b:	imul   ebx,esp,0x506d0d6f
  420441:	mov    BYTE PTR [eax],al
  420443:	jmp    0xd5755e4
  420448:	xor    eax,0x2fd00c8c
  42044d:	test   DWORD PTR [eax],eax
  42044f:	jmp    0xee1252d7
  420454:	jmp    DWORD PTR [ebx]
  420456:	sldt   WORD PTR es:[eax]
	...
  42046a:	add    BYTE PTR [eax],al
  42046c:	ins    BYTE PTR es:[edi],dx
  42046d:	push   ecx
  42046e:	adc    al,0x7
  420470:	dec    esp
  420471:	(bad)  [ecx]
  420473:	pavgb  mm3,mm2
  420476:	enter  0xb407,0xd8
  42047a:	gs push 0xffffffb1
  42047d:	pop    edi
  42047e:	mov    bh,0x86
  420480:	mov    ah,0x8f
  420482:	add    BYTE PTR [edi],cl
  420484:	ds push ecx
  420486:	adc    al,0x7
  420488:	int3   
  420489:	fnstenv [ebp+esi*1-0x32]
  42048d:	push   ecx
  42048e:	or     ecx,ebp
  420490:	mov    dh,0xf
  420492:	stc    
  420493:	jecxz  0x4204ff
  420495:	data16 adc BYTE PTR [edx-0x66],0x1c
  42049a:	adc    DWORD PTR [ecx-0x24],ebp
  42049d:	outs   dx,DWORD PTR ds:[esi]
  42049e:	jae    0x420421
  4204a0:	repz push ecx
  4204a2:	jmp    ebp
  4204a4:	lahf   
  4204a5:	imul   ecx,DWORD PTR [ecx],0xf90fb6e9
  4204ab:	hlt    
  4204ac:	sub    edx,DWORD PTR [ecx+0x7fb7a7c6]
  4204b2:	out    0xc9,eax
  4204b4:	pop    ebp
  4204b5:	cwde   
  4204b6:	cld    
  4204b7:	imul   ecx,DWORD PTR [ebp+eax*4-0x7d1efff3],0x525c0007
  4204c2:	inc    esi
  4204c3:	add    DWORD PTR [ecx+0x75],edi
  4204c6:	push   cs
  4204c7:	or     ecx,DWORD PTR [esp+ecx*4-0x80]
  4204cb:	sti    
  4204cc:	es loopne 0x4204bd
  4204cf:	mov    al,BYTE PTR [eax]
	...
  4204e1:	add    BYTE PTR [eax],al
  4204e3:	add    dl,dl
  4204e5:	and    BYTE PTR [edx+ebx*4],0x18
  4204e9:	xchg   ch,ah
  4204eb:	hlt    
  4204ec:	pop    ss
  4204ed:	mov    WORD PTR [eax],es
  4204ef:	xor    bh,0x98
  4204f2:	or     eax,DWORD PTR [eax+eax*2-0x7300036a]
  4204f9:	or     cl,BYTE PTR [bx]
  4204fc:	nop
  4204fd:	ja     0x420509
  4204ff:	add    ah,bl
  420501:	or     esp,DWORD PTR [esi]
  420503:	add    ebx,DWORD PTR [edi-0x26]
  420506:	add    al,0xff
  420508:	dec    edi
  420509:	fimul  DWORD PTR [eax]
  42050b:	call   DWORD PTR [esi+0x4f]
  42050e:	or     al,0x20
  420510:	clc    
  420511:	in     al,dx
  420512:	or     eax,DWORD PTR [edx-0x3696d]
  420518:	or     dh,ah
  42051a:	or     eax,DWORD PTR [edi-0x368f5]
  420520:	stos   DWORD PTR es:[edi],eax
  420521:	and    eax,0x7d52c6bf
  420526:	add    dh,al
  420528:	push   edx
  420529:	nop
  42052a:	std    
  42052b:	add    BYTE PTR [edx*8-0x2cafb785],0x7f
  420533:	call   0x4873e497
  420538:	inc    eax
  420539:	mov    bh,0x7f
  42053b:	call   0x485fe4cf
  420540:	push   eax
  420541:	mov    edi,DWORD PTR [edi-0x18]
  420544:	push   eax
  420545:	fisttp WORD PTR [ecx]
  420547:	dec    eax
	...
  42055c:	mov    ch,0xad
  42055e:	test   DWORD PTR [edi],ecx
  420560:	scas   al,BYTE PTR es:[edi]
  420561:	test   al,0x0
  420563:	(bad)  
  420564:	sti    
  420565:	mov    dh,0xf6
  420567:	call   0x16057456
  42056c:	lods   al,BYTE PTR ds:[esi]
  42056d:	xchg   ecx,eax
  42056e:	retf   0xf3c5
  420571:	mov    esi,0xe686e8fe
  420576:	rcl    DWORD PTR ds:0xc5b6c1b4,0x7b
  42057d:	xchg   esi,eax
  42057e:	add    cl,ch
  420580:	jb     0x420570
  420582:	rcl    DWORD PTR ds:0xc5c2c1b8,0x73
  420589:	mov    esi,0x29bee90f
  42058e:	sbb    al,0x4d
  420590:	sbb    DWORD PTR [edx+0x609c73b8],0x60ca73bc
  42059a:	mov    al,0x15
  42059c:	ins    DWORD PTR es:[edi],dx
  42059d:	je     0x420596
  42059f:	inc    edi
  4205a0:	stos   BYTE PTR es:[edi],al
  4205a1:	sub    edi,DWORD PTR [edx]
  4205a3:	or     dh,BYTE PTR [ebp-0x5cb9c158]
  4205a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205aa:	sbb    eax,0x1266fb1c
  4205af:	add    eax,0x463ebece
  4205b4:	retf   
  4205b5:	xchg   esi,eax
  4205b6:	sbb    eax,0xeee7310
  4205bb:	adc    BYTE PTR [esi+0x463eb2],cl
	...
  4205d1:	add    BYTE PTR [eax],al
  4205d3:	add    bl,al
  4205d5:	test   eax,0xe67b041d
  4205da:	push   cs
  4205db:	push   es
  4205dc:	jae    0x4205cc
  4205de:	add    edx,DWORD PTR [edx]
  4205e0:	mov    WORD PTR [ebp+0x2c7afd27],fs
  4205e6:	dec    ebp
  4205e7:	or     eax,0xfe828f39
  4205ec:	push   0xffffff96
  4205ee:	jo     0x4205aa
  4205f0:	enter  0x5d86,0x45
  4205f4:	sub    al,0x8b
  4205f6:	fs hlt 
  4205f8:	jns    0x42064c
  4205fa:	out    0x83,eax
  4205fc:	dec    esp
  4205fd:	outs   dx,DWORD PTR ds:[esi]
  4205fe:	je     0x420610
  420600:	das    
  420601:	cmp    eax,0x9900faea
  420606:	callw  0x95c3
  42060a:	pop    esp
  42060b:	std    
  42060c:	lock dec esp
  42060e:	call   0xe8ac2029
  420613:	add    esi,DWORD PTR [ebp-0x3ff8caf7]
  420619:	ffree  st(0)
  42061b:	in     eax,dx
  42061c:	scas   al,BYTE PTR es:[edi]
  42061d:	mov    gs,esi
  42061f:	jg     0x4205c2
  420621:	nop
  420622:	out    0x3,eax
  420624:	xor    eax,0xa0b0e398
  420629:	pop    fs
  42062b:	add    al,0x66
  42062d:	test   DWORD PTR [edi+0x2e],esp
  420630:	ins    DWORD PTR es:[edi],dx
  420631:	sbb    al,0xe0
  420633:	inc    ecx
  420634:	jae    0x4206b3
  420636:	stc    
  420637:	sbb    al,0x0
	...
  420649:	add    BYTE PTR [eax],al
  42064b:	add    BYTE PTR [ecx+0x3503e790],bh
  420651:	cdq    
  420652:	call   0xe10c3e51
  420657:	add    esi,DWORD PTR [ebp-0x3e2c8df1]
  42065d:	or     ch,BYTE PTR [ecx]
  42065f:	std    
  420660:	stos   BYTE PTR es:[edi],al
  420661:	xchg   ebp,eax
  420662:	and    al,0xc1
  420664:	enter  0x4087,0x1c
  420668:	mov    ch,0x8f
  42066a:	out    0x83,eax
  42066c:	mov    cl,BYTE PTR [edx-0x65f53044]
  420672:	out    0xb0,eax
  420674:	(bad)  
  420675:	(bad)  
  420677:	xor    bh,BYTE PTR [edi]
  420679:	and    al,BYTE PTR [edi]
  42067b:	daa    
  42067c:	je     0x4206f9
  42067e:	or     DWORD PTR [eax],edx
  420680:	add    DWORD PTR [eax-0x65c91700],edx
  420686:	(bad)  
  420687:	fwait
  420688:	push   ecx
  420689:	adc    eax,0x8e05a4f9
  42068e:	(bad)  
  42068f:	scas   eax,DWORD PTR es:[edi]
  420690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420691:	jle    0x42067a
  420693:	aas    
  420694:	mov    dh,0x8f
  420696:	add    BYTE PTR [ecx-0x78],ch
  420699:	xchg   esp,eax
  42069a:	jae    0x42067b
  42069c:	ss xchg edi,eax
  42069e:	sub    bl,BYTE PTR [esi+ebp*1-0x35]
  4206a2:	inc    ebp
  4206a3:	div    DWORD PTR [edx-0x49165754]
  4206a9:	pop    DWORD PTR [eax-0x7c7d442d]
  4206af:	cmp    eax,DWORD PTR [eax]
	...
  4206c1:	add    BYTE PTR [eax],al
  4206c3:	add    BYTE PTR [ebx],cl
  4206c5:	xchg   ebp,eax
  4206c6:	cld    
  4206c7:	imul   edx,eax,0x1e6c0d54
  4206cd:	xchg   DWORD PTR [eax],eax
  4206cf:	jmp    0xf8585448
  4206d4:	iret   
  4206d5:	(bad)  
  4206d6:	(bad)  
  4206d7:	call   0x391692
  4206dc:	or     edi,DWORD PTR [ebp-0x80]
  4206df:	xchg   ebx,eax
  4206e0:	mov    dh,0x82
  4206e2:	sbb    DWORD PTR [ebx],0xffffffcb
  4206e5:	xchg   esp,eax
  4206e6:	cld    
  4206e7:	imul   edx,DWORD PTR [eax-0x193f2b0],0xf4e90086
  4206f1:	dec    ebp
  4206f2:	push   ss
  4206f3:	test   ecx,0xb663801e
  4206f9:	and    BYTE PTR [edx],ch
  4206fb:	imul   ecx,esi,0x3904738e
  420701:	xchg   esi,eax
  420702:	push   ecx
  420703:	add    BYTE PTR [ecx-0x72],cl
  420706:	mov    BYTE PTR [esi+0x6a],0x9c
  42070a:	out    0x5e,eax
  42070c:	or     al,0x63
  42070e:	push   ecx
  42070f:	jne    0x42076b
  420711:	dec    esi
  420712:	inc    esi
  420713:	push   ss
  420714:	pop    eax
  420715:	jae    0x420766
  420717:	adc    BYTE PTR [edi+0x66850bd0],0x92
  42071e:	cld    
  42071f:	call   FWORD PTR [edx-0x58e7ed2f]
  420725:	iret   
  420726:	jl     0x420722
	...
  42073c:	dec    esi
  42073d:	in     eax,0x1c
  42073f:	add    BYTE PTR [ebp-0x6c],0x71
  420743:	or     ebx,DWORD PTR [edx+eiz*2+0x51c97552]
  42074a:	inc    esi
  42074b:	push   ss
  42074c:	mov    ch,0x72
  42074e:	sub    eax,DWORD PTR [eax+0x2a719705]
  420754:	pushf  
  420755:	arpl   WORD PTR [edi+0x75],cx
  420758:	mov    ecx,0xeb164651
  42075d:	jb     0x42077a
  42075f:	add    BYTE PTR [esi-0x6c],0xb
  420763:	test   ebx,eax
  420765:	cwde   
  420766:	cld    
  420767:	call   FWORD PTR [ecx+ebp*2+0xc]
  42076b:	mulps  xmm7,XMMWORD PTR [esi+0xfcc0005]
  420772:	not    DWORD PTR [eax-0xd]
  420775:	adc    al,0x49
  420777:	or     esp,ebx
  420779:	pop    esi
  42077b:	inc    esi
  42077c:	jmp    0xffbe:0x54c2fa9c
  420783:	call   0x3e9ed8
  420788:	sbb    al,0x64
  42078a:	and    BYTE PTR [edi],cl
  42078c:	sbb    BYTE PTR [eax+ecx*1+0x0],cl
  420790:	mov    ch,0xa8
  420792:	cmp    DWORD PTR [ecx+ebx*8-0x78],0x4
  420797:	jae    0x420756
  420799:	sbb    eax,0x1fa523bd
  42079e:	mov    ebp,0x23
	...
  4207b3:	add    ch,dl
  4207b5:	sub    BYTE PTR [edi-0x32447eb],ah
  4207bb:	(bad)
  4207be:	prefetch BYTE PTR [ebx]
  4207c1:	jmp    0x4207c4
  4207c3:	mov    ch,BYTE PTR [esi-0x6f]
  4207c6:	not    BYTE PTR gs:[edx-0x7e]
  4207ca:	jns    0x420812
  4207cc:	mov    ah,0xcc
  4207ce:	add    DWORD PTR ds:0xfff93d38,ecx
  4207d4:	cmp    ch,BYTE PTR [edi]
  4207d6:	mov    edi,0xf532d914
  4207db:	or     eax,0xfffb2a1c
  4207e0:	and    ch,BYTE PTR [ecx]
  4207e2:	sub    DWORD PTR [edx],ecx
  4207e4:	mov    eax,ds:0xc0f983c9
  4207e9:	cmp    al,0x1a
  4207eb:	or     BYTE PTR [esi],0x89
  4207ee:	mov    al,0xe2
  4207f0:	push   cs
  4207f1:	in     al,0x83
  4207f3:	stc    
  4207f4:	scas   eax,DWORD PTR es:[edi]
  4207f5:	push   esp
  4207f6:	adc    al,0x80
  4207f8:	out    dx,al
  4207f9:	mov    bl,0xac
  4207fb:	or     BYTE PTR ds:0x2372e3ee,dh
  420801:	jmp    0x4207c0
  420803:	(bad)  
  420804:	xchg   edi,eax
  420805:	or     eax,0x8af5310c
  42080a:	jnp    0x420852
  42080c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42080d:	jle    0x42080a
  42080f:	push   edi
  420810:	xor    eax,0x2c65f70e
  420815:	arpl   WORD PTR [edx],dx
  420817:	or     eax,0x0
	...
  42082c:	dec    eax
  42082d:	call   0x8f7f3431
  420832:	lods   eax,DWORD PTR ds:[esi]
  420833:	add    al,0x2c
  420835:	cmp    eax,DWORD PTR [ebx]
  420837:	in     al,0x37
  420839:	mov    ebp,0x87d37fe5
  42083e:	out    0x3,eax
  420840:	cmp    al,0x12
  420842:	jmp    0x4207c4
  420844:	sbb    BYTE PTR [ebx],0xf
  420847:	jnp    0x42083a
  420849:	imul   edx,edi,0xffffffda
  42084c:	je     0x42088d
  42084e:	bound  esi,QWORD PTR [esi]
  420850:	push   0xe9446bba
  420855:	test   DWORD PTR [ecx-0x42],esi
  420858:	shr    DWORD PTR [ebx+0x69],0xf8
  42085c:	mov    ah,0x7
  42085e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42085f:	push   cs
  420860:	aas    
  420861:	dec    ecx
  420862:	(bad)  
  420864:	rol    DWORD PTR [edi],0xa3
  420867:	fild   QWORD PTR [ecx+0x2c156c82]
  42086d:	xchg   edx,eax
  42086e:	in     eax,dx
  42086f:	adc    BYTE PTR [ecx+0x1a04076b],0x8c
  420876:	out    dx,eax
  420877:	add    esi,DWORD PTR [ebp-0x3e1c2df1]
  42087d:	or     ecx,ebx
  42087f:	dec    BYTE PTR [edx]
  420881:	xchg   edx,eax
  420882:	data16 sub ch,BYTE PTR [ebp-0x7e]
  420886:	fs leave 
  420888:	mov    dl,0x8f
  42088a:	out    0x3d,eax
  42088c:	jnp    0x42081e
  42088e:	add    ebx,DWORD PTR ds:0x0
	...
  4208a4:	fisttp WORD PTR [ecx-0x69cafc19]
  4208aa:	xor    dh,bh
  4208ac:	aaa    
  4208ad:	mov    bh,0x92
  4208af:	es ror al,1
  4208b2:	and    al,0x5
  4208b4:	xchg   esi,eax
  4208b5:	test   al,0x9e
  4208b7:	inc    dl
  4208b9:	xchg   ecx,eax
  4208ba:	data16 sub ah,BYTE PTR [ecx-0x7e]
  4208be:	add    BYTE PTR [eax+esi*8-0x6d],ch
  4208c2:	cld    
  4208c3:	outs   dx,BYTE PTR ds:[esi]
  4208c4:	call   0xc0510812
  4208c9:	leave  
  4208ca:	add    al,0xe9
  4208cc:	mov    dh,0xf
  4208ce:	stc    
  4208cf:	mov    ecx,0x4db40e8b
  4208d4:	rcl    DWORD PTR [edx+0x6ab9afc5],cl
  4208da:	out    0x75,eax
  4208dc:	jnp    0x42086f
  4208de:	cld    
  4208df:	imul   ebx,DWORD PTR [edi-0x2b9bf29e],0xa026fc93
  4208e9:	dec    ecx
  4208ea:	call   eax
  4208ec:	mov    ecx,0xb6e904ed
  4208f1:	add    al,0x41
  4208f3:	push   ds
  4208f4:	push   edx
  4208f5:	mov    DWORD PTR ds:0xfc972c6e,ecx
  4208fb:	(bad)  
  4208fc:	sbb    DWORD PTR [esi+edi*4-0x17efafd6],eax
  420903:	mov    ecx,0xf9460a48
	...
  42091c:	loopne 0x420967
  42091e:	dec    DWORD PTR [edi]
  420920:	mov    esi,0xb6e9050d
  420925:	psubw  mm7,mm7
  420928:	add    DWORD PTR [esi],ecx
  42092a:	dec    ebx
  42092b:	ret    0x92d8
  42092e:	lds    esp,FWORD PTR [edi]
  420930:	mov    dh,0x65
  420932:	out    0x39,eax
  420934:	lock nop
  420936:	cld    
  420937:	pop    esp
  420938:	hlt    
  420939:	sar    BYTE PTR [ebx],0xf0
  42093c:	jmp    0x90e4714c
  420941:	xchg   edx,eax
  420942:	gs out 0x58,al
  420945:	into   
  420946:	gs push 0xffffffa9
  420949:	pop    edi
  42094a:	data16 add BYTE PTR [ebp-0x2f],al
  42094e:	push   cs
  42094f:	(bad)  
  420950:	xchg   edx,eax
  420951:	mov    WORD PTR [edi],fs
  420953:	jmp    0x3e9c24
  420958:	sbb    al,0x67
  42095a:	or     DWORD PTR [ebp-0x5b],esi
  42095d:	push   edx
  42095e:	inc    esi
  42095f:	add    DWORD PTR [eax-0x63f8bd8c],ebp
  420965:	mov    WORD PTR [eax-0x7f646905],es
  42096b:	and    bh,al
  42096d:	push   0xfffffffb
  42096f:	jmp    0x3d70dd
  420974:	fsub   QWORD PTR [esi+0xa]
  420977:	(bad)  
  420979:	jg     0x420977
  42097b:	call   FWORD PTR [ebx+0x174615]
	...
  420991:	add    BYTE PTR [eax],al
  420993:	add    BYTE PTR [eax+0x0],dh
  420996:	or     al,0x14
  420998:	mov    ch,0x81
  42099a:	or     BYTE PTR [eax],al
  42099c:	pop    esp
  42099d:	push   edx
  42099e:	inc    esi
  42099f:	add    DWORD PTR [ebx],eax
  4209a1:	jne    0x4209b9
  4209a3:	pop    es
  4209a4:	dec    esp
  4209a5:	mov    WORD PTR [ebx],cs
  4209a7:	mov    dh,0xdf
  4209a9:	adc    eax,0xcc440080
  4209ae:	cld    
  4209af:	or     DWORD PTR [ebx+ebx*4-0x80],0xffffff81
  4209b4:	adc    ecx,DWORD PTR [eax+eax*1+0x18af6883]
  4209bb:	add    BYTE PTR [ecx-0x6d],ah
  4209be:	xchg   DWORD PTR [eax+esi*4+0x7b],ecx
  4209c2:	test   DWORD PTR [eax+esi*4-0x79],ecx
  4209c6:	or     edi,DWORD PTR [esi+0x63e80f1c]
  4209cc:	adc    dl,dl
  4209ce:	(bad)  
  4209cf:	call   DWORD PTR [edx]
  4209d1:	sar    ch,cl
  4209d3:	sub    eax,0xe87fb7c0
  4209d8:	mov    ch,0xab
  4209da:	lods   al,BYTE PTR ds:[esi]
  4209db:	sbb    eax,0x73fd0e36
  4209e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209e1:	pop    esi
  4209e2:	repz sbb BYTE PTR [ebx-0x59],0x0
  4209e7:	add    BYTE PTR [ebx-0x41],bh
  4209ea:	inc    BYTE PTR [edi]
  4209ec:	pushf  
  4209ed:	sub    eax,0xbfa2fffe
  4209f2:	mov    ebp,0x40dfb201
  4209f7:	push   es
	...
  420a0c:	mov    ch,0x78
  420a0e:	ds inc esi
  420a10:	mov    bh,0x73
  420a12:	pop    ss
  420a13:	mov    edx,0xc60078bb
  420a18:	repz jp 0x420a1a
  420a1b:	out    0x24,al
  420a1d:	jg     0x420a1f
  420a1f:	add    BYTE PTR [edx+0x358a4106],bh
  420a25:	jns    0x4209ef
  420a27:	aas    
  420a28:	mov    ch,0xf4
  420a2a:	aas    
  420a2b:	or     eax,0xffff6b39
  420a30:	mov    ch,0x6d
  420a32:	outs   dx,BYTE PTR ds:[esi]
  420a33:	dec    esi
  420a34:	mov    bh,0x3f
  420a36:	xor    edi,0x927d7dae
  420a3c:	mov    ebx,0xd1fd0078
  420a41:	jmp    0x420a11
  420a43:	jle    0x420ab9
  420a45:	js     0x420a69
  420a47:	inc    esi
  420a48:	mov    dh,0xac
  420a4a:	scas   eax,DWORD PTR es:[edi]
  420a4b:	or     al,0x28
  420a4d:	cmp    DWORD PTR [edi],ebx
  420a4f:	enter  0x7ad1,0x2d
  420a53:	pop    esi
  420a54:	mov    bh,0x78
  420a56:	add    dh,bh
  420a58:	jae    0x420ad3
  420a5a:	fsubr  QWORD PTR [ebp-0x3e]
  420a5d:	jmp    0x420aa3
  420a5f:	(bad)  
  420a60:	std    
  420a61:	xchg   esp,eax
  420a62:	add    esp,edi
  420a64:	jo     0x4209f5
  420a66:	out    0x3,eax
  420a68:	mov    ch,0x8d
  420a6a:	and    al,0x7
  420a6c:	xchg   ecx,eax
  420a6d:	std    
  420a6e:	sbb    eax,0x12
	...
  420a83:	add    BYTE PTR [ecx-0xa8724fd],cl
  420a89:	lea    esi,[edx-0x3d874f18]
  420a8f:	add    eax,0xcaab8fb5
  420a94:	mov    ah,0x93
  420a96:	or     bh,0xb8
  420a99:	(bad)
  420a9d:	xchg   edx,eax
  420a9e:	outs   dx,DWORD PTR ds:[esi]
  420a9f:	shl    BYTE PTR [ebp-0x47f1aef1],cl
  420aa5:	push   ss
  420aa6:	and    eax,0xf28fb504
  420aab:	pop    ecx
  420aac:	push   0xffffffc9
  420aae:	addr16 or al,0xed
  420ab1:	iret   
  420ab2:	jmp    0xea8740c9
  420ab7:	add    esi,DWORD PTR [ebp-0x57f2def1]
  420abd:	adc    al,0xc6
  420abf:	or     DWORD PTR [ebp-0x4b35d471],esi
  420ac5:	cwde   
  420ac6:	add    bh,bh
  420ac8:	mov    eax,0xf321e98f
  420acd:	xchg   edx,eax
  420ace:	outs   dx,DWORD PTR ds:[esi]
  420acf:	shl    BYTE PTR [ebp-0x460c0ef1],cl
  420ad5:	push   ss
  420ad6:	push   ebp
  420ad7:	add    al,0xb5
  420ad9:	(bad)  
  420ada:	repnz pop ecx
  420adc:	jmp    0xe9cf:0x8af767c8
  420ae3:	adc    dh,BYTE PTR [esi]
  420ae5:	adc    eax,0x3ea
	...
  420afa:	add    BYTE PTR [eax],al
  420afc:	mov    ch,0xf
  420afe:	rcl    DWORD PTR [edx],0xc
  420b01:	pop    ebp
  420b02:	mov    esp,0x119b5c9
  420b07:	daa    
  420b08:	mov    dl,0xf
  420b0a:	cli    
  420b0b:	fistp  QWORD PTR [edi]
  420b0d:	add    al,0xc
  420b0f:	pop    edi
  420b10:	mov    eax,ds:0x2ed17ec9
  420b15:	into   
  420b16:	add    BYTE PTR [edx+ebx*1],bl
  420b19:	push   cs
  420b1a:	cli    
  420b1b:	fsub   QWORD PTR [edi-0x491325ee]
  420b21:	pop    edx
  420b23:	daa    
  420b24:	mov    ebx,0xbd99e999
  420b29:	pop    DWORD PTR [eax]
  420b2b:	outs   dx,DWORD PTR ds:[esi]
  420b2c:	ins    BYTE PTR es:[edi],dx
  420b2d:	nop
  420b2e:	xchg   BYTE PTR [edi-0x705f04d],dh
  420b34:	das    
  420b35:	fisttp DWORD PTR [ebx]
  420b37:	lahf   
  420b38:	ror    ecx,0x7e
  420b3b:	adc    DWORD PTR [ecx],esp
  420b3d:	int    0x0
  420b3f:	mov    esp,0xd9fa0d73
  420b44:	(bad)  
  420b45:	adc    BYTE PTR [edx-0x3d704914],dh
  420b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b4c:	mov    eax,0xad51e996
  420b51:	pop    DWORD PTR [eax]
  420b53:	pop    ds
  420b54:	jl     0x420ae6
  420b56:	xchg   BYTE PTR [edi-0x1905f04d],ah
  420b5c:	pop    ds
  420b5d:	mov    bl,0xb
  420b5f:	aas    
	...
  420b74:	or     ecx,0xcd4ead7e
  420b7a:	add    BYTE PTR [ebx+ebp*1+0xd],bh
  420b7e:	cli    
  420b7f:	out    0xc7,eax
  420b81:	adc    BYTE PTR [edx-0x3d704914],cl
  420b87:	daa    
  420b88:	mov    ebx,0xb269e99b
  420b8d:	pop    DWORD PTR [eax]
  420b8f:	imul   esp,DWORD PTR [eax-0x77fff451],0xdcffff26
  420b99:	(bad)  
  420b9a:	inc    edx
  420b9b:	add    bl,ah
  420b9d:	mov    ecx,0x90cc056a
  420ba2:	cmp    bl,0xd6
  420ba5:	and    eax,0x909ac643
  420baa:	sub    eax,0x1877888b
  420baf:	test   esi,edi
  420bb1:	sahf   
  420bb2:	test   BYTE PTR [ecx-0x37],bl
  420bb5:	nop
  420bb6:	add    BYTE PTR [ebx-0x80674d],cl
  420bbc:	test   al,0x78
  420bbe:	mov    DWORD PTR [eax+edi*2-0x80],eax
  420bc2:	sub    edx,eax
  420bc4:	pop    esp
  420bc5:	sbb    ecx,ebx
  420bc7:	dec    ebx
  420bc9:	adc    al,0xc1
  420bcb:	je     0x420b63
  420bcd:	sbb    al,BYTE PTR [ebx+0x17]
  420bd0:	mov    eax,0x4030d12
  420bd5:	pop    edx
  420bd6:	adc    eax,0x8a
	...
  420beb:	add    BYTE PTR [edx],bl
  420bed:	xchg   DWORD PTR [eax],esp
  420bef:	jg     0x420bc5
  420bf1:	push   edi
  420bf2:	and    BYTE PTR [edi],cl
  420bf4:	adc    DWORD PTR ds:0xae93f82d,0xffffff81
  420bfb:	fs js  0x420b8a
  420bfe:	cld    
  420bff:	call   0x42a180
  420c04:	int3   
  420c05:	stos   BYTE PTR es:[edi],al
  420c06:	pop    es
  420c07:	jne    0x420c53
  420c09:	(bad)  
  420c0a:	inc    edx
  420c0b:	add    DWORD PTR [esi-0x45],ebp
  420c0e:	mov    al,0x80
  420c10:	daa    
  420c11:	call   0x0:0x9494850d
  420c18:	dec    edx
  420c19:	push   esi
  420c1a:	sti    
  420c1b:	sub    al,0xe7
  420c1d:	lock cmp bl,0xb5
  420c21:	xchg   esi,eax
  420c22:	adc    DWORD PTR [eax+eax*1+0x35000072],eax
  420c29:	push   ecx
  420c2a:	pop    es
  420c2b:	or     eax,0x44239
  420c30:	mov    ch,0x89
  420c32:	inc    eax
  420c33:	aaa    
  420c34:	jns    0x420bc8
  420c36:	clc    
  420c37:	jb     0x420be6
  420c39:	add    esp,ecx
  420c3b:	and    esp,DWORD PTR [ebp-0x5edc3401]
  420c41:	cmp    al,0xca
  420c43:	(bad)  
  420c44:	xchg   edx,eax
  420c45:	out    dx,al
  420c46:	leave  
  420c47:	add    BYTE PTR ds:0x730b11,dh
  420c4d:	xchg   ebx,eax
  420c4e:	dec    ecx
  420c4f:	inc    esi
	...
  420c64:	mov    ah,0x46
  420c66:	add    BYTE PTR [edi],dh
  420c68:	stc    
  420c69:	push   esp
  420c6a:	hlt    
  420c6b:	or     al,0x31
  420c6d:	rol    DWORD PTR [ebx],0x0
  420c70:	mov    ch,0xfd
  420c72:	mov    al,ds:0x93e0ce0b
  420c77:	sub    ebp,DWORD PTR [esi]
  420c79:	inc    ebp
  420c7a:	in     al,0x13
  420c7c:	cs cmp eax,0xb69e0fe4
  420c82:	scas   eax,DWORD PTR es:[edi]
  420c83:	mov    BYTE PTR [ebx-0x3e],bh
  420c86:	cmp    BYTE PTR [ebx-0x75f1ba8b],al
  420c8c:	repz mov esp,esp
  420c8f:	add    ecx,0x74
  420c92:	mov    BYTE PTR [esi-0x5e],al
  420c95:	out    dx,al
  420c96:	leave  
  420c97:	adc    al,0x99
  420c99:	sbb    DWORD PTR [eax+0x11819144],ecx
  420c9f:	or     DWORD PTR [edx-0x7e],0x1c
  420ca3:	std    
  420ca4:	ss sbb eax,0x8fb513e4
  420caa:	mov    WORD PTR [esi*4+0xc83e98f],es
  420cb1:	xchg   esi,eax
  420cb2:	push   esp
  420cb3:	push   es
  420cb4:	repz shr eax,1
  420cb7:	lock or eax,0x6b55db3a
  420cbd:	lea    ebp,[edi+0x43]
  420cc0:	shr    DWORD PTR [edi+0x3b22d66],0x29
  420cc7:	int    0x0
	...
  420cd9:	add    BYTE PTR [eax],al
  420cdb:	add    BYTE PTR [esi-0x50],ah
  420cde:	and    BYTE PTR [eax-0x3954273b],bl
  420ce4:	mov    ah,0x8f
  420ce6:	jmp    0x3503:0xe9935788
  420ced:	call   0x3e9:0x935f2d29
  420cf4:	icebp  
  420cf5:	out    dx,al
  420cf6:	jmp    0xafe8:0xa2897578
  420cfd:	jbe    0x420cb6
  420cff:	nop
  420d00:	hlt    
  420d01:	pop    edi
  420d02:	es or  eax,0x83112c0
  420d08:	mov    ch,0x8f
  420d0a:	loop   0x420d69
  420d0c:	je     0x420d1c
  420d0e:	inc    edx
  420d0f:	aam    0x23
  420d11:	sbb    BYTE PTR [ebx+ecx*1+0x2cede13a],ch
  420d18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d19:	xchg   ebx,eax
  420d1a:	jmp    0xb538ae22
  420d1f:	or     al,0x73
  420d21:	shl    edi,1
  420d23:	or     eax,0x3e5b45a
  420d28:	mov    ch,0xcb
  420d2a:	xchg   BYTE PTR [esi],cl
  420d2c:	es dec edi
  420d2e:	or     al,0x4c
  420d30:	xchg   ecx,eax
  420d31:	call   0x7d6:0x78b4c671
  420d38:	mov    ch,0x8f
  420d3a:	add    BYTE PTR [edx+0x55],ch
  420d3d:	scas   al,BYTE PTR es:[edi]
  420d3e:	adc    al,0xe9
	...
  420d54:	jo     0x420d27
  420d56:	add    DWORD PTR [ebx],ebx
  420d58:	ret    0x613
  420d5b:	in     eax,0xb6
  420d5d:	pop    DWORD PTR [edi-0x3f15aaa]
  420d63:	rcr    dh,0x8a
  420d66:	cld    
  420d67:	mov    bl,0x41
  420d6a:	dec    ebx
  420d6b:	jmp    0x420da9
  420d6d:	push   eax
  420d6e:	or     eax,0xe823609
  420d73:	fisubr WORD PTR [ebx]
  420d75:	inc    esi
  420d76:	add    ecx,ebp
  420d78:	mov    dh,0x9c
  420d7a:	test   BYTE PTR [esi-0x4a],ah
  420d7d:	pop    DWORD PTR [eax]
  420d7f:	push   0xffffff91
  420d81:	(bad)  
  420d82:	or     esp,DWORD PTR [ebp+0x7f]
  420d85:	nop
  420d86:	add    cl,ch
  420d88:	aaa    
  420d89:	jno    0x420d95
  420d8b:	out    dx,al
  420d8c:	xor    bl,BYTE PTR [esi+0x0]
  420d8f:	jmp    0xddb6de4a
  420d94:	imul   ebx,DWORD PTR [esp+eax*4+0x8fb731],0x901a50
  420d9f:	jmp    0xde6394da
  420da4:	xor    al,BYTE PTR [esi+0x0]
  420da7:	jmp    0xfa3a1d62
  420dac:	mov    ebx,0xb6ed331b
  420db1:	pop    DWORD PTR [eax-0x746386ce]
  420db7:	aam    0x0
	...
  420dc9:	add    BYTE PTR [eax],al
  420dcb:	add    BYTE PTR [edx+0x7872008f],bh
  420dd1:	xchg   ecx,eax
  420dd2:	jmpw   0x5789
  420dd6:	rol    BYTE PTR [ebx+0x738aac],0x28
  420ddd:	push   cs
  420dde:	jmp    0x8985a313
  420de3:	clc    
  420de4:	xchg   edi,eax
  420de5:	(bad)  
  420de6:	call   0xcf3424
  420deb:	add    edx,DWORD PTR [edi+edi*2]
  420dee:	fidivr DWORD PTR [ebx]
  420df0:	retf   0xd9f
  420df3:	adc    BYTE PTR [ecx],0x91
  420df6:	add    BYTE PTR [eax],al
  420df8:	arpl   WORD PTR [ecx+edi*1+0x7e9be47e],dx
  420dff:	cli    
  420e00:	fisttp WORD PTR [eax+eax*1-0x3e90ec75]
  420e07:	and    DWORD PTR [ebx+ebp*4],0xd
  420e0b:	test   BYTE PTR [ecx],ch
  420e0d:	pop    DWORD PTR [eax]
  420e0f:	add    BYTE PTR [ebp+0x29],al
  420e12:	add    al,0x89
  420e14:	mov    bl,BYTE PTR [edi-0x7330a21d]
  420e1a:	add    dh,bh
  420e1c:	loop   0x420dac
  420e1e:	xchg   BYTE PTR [esi-0x61],cl
  420e21:	or     al,0xf4
  420e23:	pop    es
  420e24:	fwait
  420e25:	adc    edx,esi
  420e27:	std    
  420e28:	or     ebp,DWORD PTR [ebx+0x65cdb60d]
  420e2e:	adc    BYTE PTR [eax+eax*1+0x0],0x0
	...
  420e43:	add    BYTE PTR [esp+ecx*2-0x23eef104],dl
  420e4a:	idiv   edi
  420e4c:	jmp    0x420e61
  420e4e:	hlt    
  420e4f:	push   es
  420e50:	imul   edx,DWORD PTR [ecx],0x33
  420e53:	add    ebx,DWORD PTR [esp+ecx*4-0x3e]
  420e57:	inc    esi
  420e58:	dec    esi
  420e59:	jl     0x420e3e
  420e5b:	sub    eax,0x83008c4f
  420e60:	xchg   ebp,eax
  420e61:	cdq    
  420e62:	je     0x420eb0
  420e64:	fbld   TBYTE PTR [ebp+ecx*1-0x7e764a8c]
  420e6b:	mov    edi,0x217f545
  420e70:	ret    0x75f8
  420e73:	sti    
  420e74:	sub    cl,BYTE PTR [ecx+0x777bc4a6]
  420e7a:	sar    bh,1
  420e7c:	or     eax,0xb500016a
  420e81:	jo     0x420e49
  420e83:	add    BYTE PTR [edi],bh
  420e85:	mov    eax,0x7afc8001
  420e8a:	or     eax,0x1d5b3385
  420e8f:	std    
  420e90:	ret    0x2f08
  420e93:	cmp    dh,BYTE PTR [edi]
  420e95:	ficomp WORD PTR [edi+edi*1+0x758371b5]
  420e9c:	fdivr  DWORD PTR [eax]
  420e9e:	sbb    eax,0xd79cc80
  420ea3:	adc    eax,0x73
	...
  420eba:	add    BYTE PTR [eax],al
  420ebc:	sti    
  420ebd:	mov    bh,0xfe
  420ebf:	adc    esp,ecx
  420ec1:	cmp    DWORD PTR [edx],eax
  420ec3:	add    BYTE PTR [ebp+0x3f00c60e],dh
  420ec9:	mov    bh,0x1
  420ecb:	sbb    BYTE PTR [ebx+esi*2-0xbfc7af3],0x1c
  420ed3:	std    
  420ed4:	ret    0x2f26
  420ed7:	cmp    dh,BYTE PTR [edi]
  420ed9:	inc    ebp
  420eda:	cwde   
  420edb:	aas    
  420edc:	mov    ch,0x6d
  420ede:	add    DWORD PTR [ebp+0x78],0xffffffd6
  420ee2:	sbb    al,0x80
  420ee4:	ins    BYTE PTR es:[edi],dx
  420ee5:	or     BYTE PTR ds:0x7b2083,0x0
  420eec:	jnp    0x420f25
  420eee:	add    cl,BYTE PTR [edi]
  420ef0:	dec    esp
  420ef1:	add    eax,0x8fb50002
  420ef6:	imul   ebx,DWORD PTR [eax],0x796496bf
  420efc:	dec    eax
  420efd:	xchg   DWORD PTR [ebx],edx
  420eff:	or     al,0x3
  420f01:	into   
  420f02:	out    0x80,eax
  420f04:	sbb    eax,0x2bc52ba0
  420f09:	shl    BYTE PTR [ebp-0x7],0x7a
  420f0d:	sti    
  420f0e:	loop   0x420edb
  420f10:	test   eax,0xb5015e0c
  420f15:	(bad)
  420f19:	js     0x420f81
  420f1b:	push   es
  420f1c:	mov    ch,0x8f
  420f1e:	imul   ecx,DWORD PTR [edx],0x0
	...
  420f34:	lods   eax,DWORD PTR ds:[esi]
  420f35:	js     0x420f85
  420f37:	push   es
  420f38:	mov    ch,0x8f
  420f3a:	imul   ecx,DWORD PTR [edx],0x63678b1
  420f40:	mov    ch,0x8f
  420f42:	stos   DWORD PTR es:[edi],eax
  420f43:	ret    0xb5db
  420f46:	shr    BYTE PTR [edi-0x7116704c],0xf3
  420f4d:	ja     0x420fba
  420f4f:	add    DWORD PTR [ebp+0x41446c8f],esi
  420f55:	mov    ds:0x92d9025f,al
  420f5a:	repnz push ecx
  420f5c:	jne    0x420fdc
  420f5e:	mov    ds:0x8a1262ff,al
  420f63:	pop    ss
  420f64:	xor    al,0x4f
  420f66:	fldcw  WORD PTR [esi]
  420f68:	mov    ah,0xc2
  420f6a:	sub    esp,eax
  420f6c:	xor    cl,ch
  420f6e:	call   0x6cea1001
  420f73:	sbb    ebp,DWORD PTR [eax-0x4af9f1f5]
  420f79:	(bad)  
  420f7a:	outs   dx,BYTE PTR ds:[esi]
  420f7b:	dec    edx
  420f7c:	push   0xb044655e
  420f81:	or     eax,DWORD PTR [ecx]
  420f83:	or     al,ah
  420f85:	test   ah,bh
  420f87:	arpl   WORD PTR [edi-0x65],si
  420f8a:	and    al,0x6e
  420f8c:	mov    ebp,0xa5f5e98c
  420f91:	test   ah,bh
  420f93:	imul   ebx,DWORD PTR [edx+0x640b99],0x0
	...
  420fa9:	add    BYTE PTR [eax],al
  420fab:	add    BYTE PTR [ebx],ch
  420fad:	jnp    0x420fab
  420faf:	push   es
  420fb0:	xor    ch,ch
  420fb2:	add    al,0xe9
  420fb4:	(bad)  
  420fb5:	int    0x13
  420fb7:	imul   ebp,DWORD PTR [esi-0x491458ee],0x3b07868f
  420fc1:	push   eax
  420fc2:	rcl    ecx,0xb8
  420fc5:	aaa    
  420fc6:	and    DWORD PTR [ebp+eax*1+0x2e],ebx
  420fca:	add    bl,dh
  420fcc:	xor    eax,0xb6e9027d
  420fd1:	sbb    BYTE PTR [ebx-0xf],al
  420fd4:	xor    edx,ebp
  420fd6:	or     al,0x62
  420fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fd9:	cwde   
  420fda:	shl    DWORD PTR [edx+ecx*8],1
  420fdd:	push   ss
  420fde:	ret    
  420fdf:	xchg   ecx,eax
  420fe0:	rcl    BYTE PTR [eax+0x4f35e900],0x75
  420fe7:	jg     0x42101f
  420fe9:	jo     0x420feb
  420feb:	fiadd  WORD PTR [edi+ecx*2]
  420fee:	call   0x8088a35e
  420ff3:	cmp    DWORD PTR [edi+0x74af09fb],0x3803886
  420ffd:	test   esp,edi
  420fff:	jmp    0xd5427f3a
  421004:	mov    BYTE PTR [ebp-0x65],ch
  421007:	in     eax,dx
  421008:	mov    dh,0x8f
  42100a:	test   DWORD PTR [ecx],ebp
  42100c:	inc    edx
  42100d:	mov    es,edx
	...
  421023:	add    BYTE PTR [edx],bl
  421025:	mov    WORD PTR [edi],?
  421027:	jmp    0x429c14
  42102c:	xlat   BYTE PTR ds:[ebx]
  42102d:	into   
  42102e:	call   0xd3690b
  421033:	test   DWORD PTR [ecx+ebx*4-0x565ca77c],ebx
  42103a:	std    
  42103b:	xor    ecx,DWORD PTR [esp+eax*1-0x2f56f026]
  421042:	dec    eax
  421043:	cmp    DWORD PTR [edi+edx*4-0x4be73f7f],0x48
  42104b:	jmp    DWORD PTR [ebx]
  42104d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42104e:	cmp    DWORD PTR [eax+edi*8-0x78],0x140474fc
  421056:	inc    ebp
  421057:	and    al,0xfc
  421059:	sbb    DWORD PTR [ebp+0x24],eax
  42105c:	add    al,0x14
  42105e:	inc    ebp
  42105f:	and    al,0xb8
  421061:	push   ebx
  421062:	add    DWORD PTR [eax+edi*4+0x7b],0xffffffe3
  421067:	jne    0x421036
  421069:	nop
  42106a:	add    BYTE PTR [edi],cl
  42106c:	pop    edx
  42106d:	retf   0x8086
  421070:	fmul   QWORD PTR [ecx+0x3c]
  421073:	add    al,dl
  421075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421076:	or     eax,0x8d8784
  42107b:	add    bl,dl
  42107d:	out    0xc0,al
  42107f:	cdq    
  421080:	adc    eax,0xca890452
  421085:	xchg   edi,eax
  421086:	ret    0x46
	...
  421099:	add    BYTE PTR [eax],al
  42109b:	add    BYTE PTR [ebp-0x72ae1cac],cl
  4210a1:	nop
  4210a2:	add    BYTE PTR [eax+0x96f8d07],al
  4210a8:	ficom  DWORD PTR [ecx-0x5]
  4210ab:	xor    eax,0xfffb4ae5
  4210b0:	mov    ch,0x76
  4210b2:	or     DWORD PTR [esi+0x74f076],esi
  4210b8:	or     al,0x37
  4210ba:	add    BYTE PTR [eax+0x148bc55f],al
  4210c0:	xor    eax,0xbc73ddc1
  4210c5:	neg    BYTE PTR ds:0x6f3ba20
  4210cb:	add    dh,BYTE PTR [ebp-0x4bb9bd8a]
  4210d1:	arpl   WORD PTR [edi],sp
  4210d3:	push   ds
  4210d4:	mov    ah,0x76
  4210d6:	add    BYTE PTR [ecx+0x468d7aab],cl
  4210dc:	lods   eax,DWORD PTR ds:[esi]
  4210dd:	add    DWORD PTR [edx+0xd],ecx
  4210e0:	push   ecx
  4210e1:	mov    bh,0x0
  4210e3:	mov    edi,0xd88d6a15
  4210e8:	mov    edx,0xb697462c
  4210ed:	dec    esi
  4210ee:	cmc    
  4210ef:	leave  
  4210f0:	mov    esi,0x3782092d
  4210f5:	ja     0x4210f7
  4210f7:	add    BYTE PTR [edx+0x7f],ah
  4210fa:	fstp   QWORD PTR [ebp-0x53]
  4210fd:	jne    0x421085
  4210ff:	jne    0x421101
	...
  421111:	add    BYTE PTR [eax],al
  421113:	add    BYTE PTR [esi+esi*2-0x67097700],dh
  42111a:	aas    
  42111b:	or     ebp,0x4f84092c
  421121:	ja     0x421123
  421123:	add    BYTE PTR [esp+edi*4],ch
  421126:	or     al,0x87
  421128:	add    esp,DWORD PTR [ebp+0x27]
  42112b:	fidiv  DWORD PTR [ebp-0x617fff88]
  421131:	je     0x42113c
  421133:	add    DWORD PTR [ecx+edi*2-0x9620000],0x7f
  42113b:	stc    
  42113c:	mov    edi,0x3e7ef28f
  421141:	jge    0x42119e
  421143:	sbb    BYTE PTR [edx+ecx*8],ch
  421146:	loope  0x4210cc
  421148:	fisttp DWORD PTR [ebx-0x6c0cf317]
  42114e:	mov    esp,0x992350b
  421153:	sub    edi,DWORD PTR [edi*2-0x3584e7cd]
  42115a:	call   0xea7b6539
  42115f:	add    esi,DWORD PTR [ebp+0x2c07a516]
  421165:	add    al,0xce
  421167:	repz cmp eax,0x8b8cddd2
  42116d:	xchg   edi,eax
  42116e:	into   
  42116f:	inc    eax
  421170:	mov    ah,0xcc
  421172:	fnstcw WORD PTR [edx-0x24]
  421175:	push   ebp
  421176:	jnp    0x421185
	...
  42118c:	xchg   DWORD PTR [ebx-0x747bc452],ecx
  421192:	outs   dx,BYTE PTR ds:[esi]
  421193:	inc    ebx
  421194:	sub    al,0x61
  421196:	addr16 cwde 
  421198:	(bad)  
  421199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42119a:	jmp    0x4e5ac82f
  42119f:	loopne 0x421163
  4211a1:	mov    dh,0xa1
  4211a3:	mov    DWORD PTR [ecx-0x76],edi
  4211a6:	mov    edx,0xd9ab718d
  4211ab:	cli    
  4211ac:	cld    
  4211ad:	push   ss
  4211ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211af:	or     ecx,DWORD PTR [edx]
  4211b1:	sbb    DWORD PTR [esp+ecx*1+0x3a],eax
  4211b5:	shr    ch,cl
  4211b7:	nop
  4211b8:	push   edi
  4211b9:	dec    ecx
  4211ba:	sub    al,0x5
  4211bc:	out    dx,eax
  4211bd:	jbe    0x4211ea
  4211bf:	test   BYTE PTR [esp+edx*4+0x7cee80f2],ch
  4211c6:	jnp    0x4211df
  4211c8:	xor    al,0x3
  4211ca:	add    ebp,ecx
  4211cc:	mov    es,WORD PTR [edx-0x374fd83a]
  4211d2:	je     0x421186
  4211d4:	das    
  4211d5:	add    al,0x15
  4211d7:	mov    fs:0x25622cfb,al
  4211dd:	scas   al,BYTE PTR es:[edi]
  4211de:	sbb    BYTE PTR [edx+0x75],ah
  4211e1:	scas   al,BYTE PTR es:[edi]
  4211e2:	adc    BYTE PTR [edx],dl
  4211e4:	neg    edi
  4211e6:	xchg   DWORD PTR [edi],ebp
  4211e8:	ret    0x865c
  4211eb:	sub    DWORD PTR ds:0xa78698,esp
	...
  421201:	add    BYTE PTR [eax],al
  421203:	add    BYTE PTR [ebx-0x52],bl
  421206:	xor    ch,0x40
  421209:	or     al,BYTE PTR [ebx-0xa]
  42120c:	sub    al,0xc9
  42120e:	adc    ecx,ebp
  421210:	dec    ebx
  421211:	or     al,BYTE PTR [ebp-0x3b]
  421214:	mov    bl,0x94
  421216:	test   ebx,esp
  421218:	mov    DWORD PTR [esp+edi*8+0x18ae556a],0x8092dfe9
  421223:	repnz mov esp,0xb2e68594
  421229:	test   ah,bh
  42122b:	push   0x18
  42122d:	mov    es,WORD PTR [eax]
  42122f:	scas   eax,DWORD PTR es:[edi]
  421230:	xor    BYTE PTR [ecx-0x51d531d1],al
  421236:	adc    BYTE PTR [edx+0x22],dh
  421239:	scas   al,BYTE PTR es:[edi]
  42123a:	adc    BYTE PTR [edx-0x42],dh
  42123d:	enter  0xd44,0xd5
  421241:	xchg   edx,eax
  421242:	test   DWORD PTR [ebp-0x5a],edx
  421245:	test   ah,bh
  421247:	jb     0x421246
  421249:	mov    DWORD PTR [edi+0x1d],edi
  42124c:	aad    0xa5
  42124e:	add    dh,ah
  421250:	xor    ch,BYTE PTR [ecx+0x1]
  421253:	jmp    0x82290e
  421258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421259:	adc    cl,al
  42125b:	movups xmm7,XMMWORD PTR [ebx+0x169c0000]
  421262:	push   ebp
  421263:	and    al,0x78
  421265:	push   ss
  421266:	into   
  421267:	sub    eax,DWORD PTR [eax]
	...
  421279:	add    BYTE PTR [eax],al
  42127b:	add    BYTE PTR [eax+0x61],cl
  42127e:	sbb    BYTE PTR [ecx+0x7],dl
  421281:	retf   
  421282:	std    
  421283:	shl    cl,1
  421285:	int3   
  421286:	je     0x421292
  421288:	(bad)  
  421289:	inc    edx
  42128a:	adc    eax,0x188cf24
  42128f:	mov    BYTE PTR [edx],dl
  421291:	jb     0x421289
  421293:	inc    esi
  421294:	jae    0x4212b0
  421296:	or     eax,0x8cc384
  42129b:	add    bh,al
  42129d:	shl    ebx,0x9e
  4212a0:	popf   
  4212a1:	cdq    
  4212a2:	std    
  4212a3:	mov    ah,BYTE PTR [edx+0x72]
  4212a6:	and    BYTE PTR [ecx-0x6f1c6bf8],cl
  4212ac:	or     al,0x8d
  4212ae:	add    BYTE PTR [edx-0x67df8dae],cl
  4212b4:	sbb    BYTE PTR [ebp-0x72e37b1d],al
  4212ba:	add    BYTE PTR [edx-0x72df8d2e],cl
  4212c0:	or     BYTE PTR [edx+0x41567be9],cl
  4212c6:	adc    eax,0xf976124
  4212cb:	jmp    0x42126b
  4212cd:	adc    eax,0xf1b01743
  4212d2:	or     al,0x16
  4212d4:	div    DWORD PTR [edx+ecx*4]
  4212d7:	inc    esi
  4212d8:	jecxz  0x42133a
  4212da:	jg     0x4212e8
  4212dc:	rcl    DWORD PTR [ebx+eax*2],1
  4212df:	pop    ss
	...
  4212f4:	and    eax,0xb5ffeb44
  4212f9:	sbb    DWORD PTR [edx-0x116623a],ecx
  4212ff:	push   DWORD PTR [ebp-0x398bbb0d]
  421305:	cld    
  421306:	cli    
  421307:	and    esi,DWORD PTR [esi-0x7d3fb197]
  42130d:	push   ds
  42130e:	cli    
  42130f:	mov    edi,0x8111d636
  421314:	jne    0x42129d
  421316:	sub    DWORD PTR [ecx],eax
  421318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421319:	mov    dh,0xc4
  42131b:	xchg   ebx,esi
  42131d:	ja     0x4212a8
  42131f:	jge    0x4212de
  421321:	repz adc eax,0x1278310d
  421327:	std    
  421328:	push   edx
  421329:	in     eax,dx
  42132a:	inc    edx
  42132b:	std    
  42132c:	(bad)  
  42132d:	jmp    0x421373
  42132f:	or     eax,0xfd125c39
  421334:	cmp    bh,ah
  421336:	mov    edx,0x8f1d914
  42133b:	add    eax,0xe6ed283d
  421340:	mov    esi,0x2ffd1584
  421345:	sub    ch,ch
  421347:	and    ebp,DWORD PTR [edx]
  421349:	push   0xffffffed
  42134b:	call   0x14fd0002
  421350:	(bad)  [edi]
  421352:	add    al,0x17
  421354:	sub    eax,0x89eda8
	...
  421369:	add    BYTE PTR [eax],al
  42136b:	add    BYTE PTR [ebx-0x7f],bh
  42136e:	push   0xfebba7d
  421373:	lock loop 0x4213be
  421376:	fcomp  QWORD PTR [ebx-0x75d69d57]
  42137c:	ss mov edx,0xbab513e0
  421382:	loop   0x42130c
  421384:	jbe    0x421315
  421386:	cmc    
  421387:	jle    0x42137e
  421389:	cli    
  42138a:	ret    0x988
  42138d:	mov    ah,0xfd
  42138f:	mov    BYTE PTR [eax-0x55],bh
  421392:	sbb    eax,0x6ee0c6e0
  421397:	inc    ebp
  421398:	cwde   
  421399:	pusha  
  42139a:	gs inc ebx
  42139c:	or     DWORD PTR [edx-0x4c5e42a1],ecx
  4213a2:	gs pop es
  4213a4:	mov    ecx,0x80ecac07
  4213a9:	(bad)  
  4213aa:	repnz xchg esp,eax
  4213ac:	rcl    DWORD PTR [esi+edi*8],0x14
  4213b0:	push   0x9697677f
  4213b5:	scas   eax,DWORD PTR es:[edi]
  4213b6:	jmp    0xa74c9c4a
  4213bb:	push   DWORD PTR [edi]
  4213bd:	push   eax
  4213be:	mov    esi,0x5e43ddc
  4213c3:	in     al,0x2d
  4213c5:	dec    edi
  4213c6:	iret   
  4213c7:	(bad)  
  4213c8:	xchg   esi,eax
  4213c9:	scas   eax,DWORD PTR es:[edi]
  4213ca:	mov    eax,0x3a7f0388
  4213cf:	jle    0x4213d1
	...
  4213e1:	add    BYTE PTR [eax],al
  4213e3:	add    ch,dh
  4213e5:	add    esp,eax
  4213e7:	mov    DWORD PTR [ebx-0x5a],edi
  4213ea:	int    0x81
  4213ec:	test   eax,0xa9bd7191
  4213f1:	test   DWORD PTR [esp+ebp*8+0x34648e89],ebp
  4213f8:	add    edi,DWORD PTR [edi-0x1d]
  4213fb:	xchg   DWORD PTR [ecx-0x4d],edi
  4213fe:	add    DWORD PTR [ecx+ebp*2],eax
  421401:	stos   DWORD PTR es:[edi],eax
  421402:	pop    esi
  421403:	mov    esi,0x9798aa14
  421409:	or     bl,BYTE PTR [esi]
  42140b:	call   0xdfed1ed2
  421410:	cld    
  421411:	loopne 0x421413
  421413:	bound  esi,QWORD PTR [edi+0x7c]
  421416:	shl    DWORD PTR [ecx+edi*2+0x3],1
  42141a:	pop    es
  42141b:	jae    0x42140c
  42141d:	mov    ds:0x95b56724,eax
  421422:	mov    BYTE PTR [edi],ch
  421424:	scas   al,BYTE PTR es:[edi]
  421425:	test   BYTE PTR [ebx-0xa],al
  421428:	inc    edi
  421429:	mov    eax,DWORD PTR [ebp-0x38338ab]
  42142f:	jb     0x4214ad
  421431:	mov    ds,WORD PTR [ebx+0x17]
  421434:	pop    edx
  421435:	pop    es
  421436:	out    0xc,al
  421438:	sti    
  421439:	mov    eax,DWORD PTR [eax]
  42143b:	jns    0x421485
  42143d:	in     eax,dx
  42143e:	inc    ecx
  42143f:	jmp    0xe983ff86
  421444:	add    ebp,edi
  421446:	inc    ecx
  421447:	jmp    0x42144c
	...
  42145c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42145d:	out    dx,al
  42145e:	inc    ecx
  42145f:	jmp    0xe9841610
  421464:	pop    esi
  421465:	add    BYTE PTR [edx-0x17],al
  421468:	push   0x72e94200
  42146d:	add    BYTE PTR [edx-0x17],al
  421470:	je     0x421472
  421472:	inc    edx
  421473:	jmp    0xe98414c8
  421478:	add    DWORD PTR [ecx],0x42
  42147b:	jmp    0xe98415f7
  421480:	mov    dh,0x0
  421482:	inc    edx
  421483:	jmp    0xe9841371
  421488:	sub    al,0xff
  42148a:	inc    ecx
  42148b:	jmp    0xe984150c
  421490:	pop    DWORD PTR [eax]
  421492:	inc    edx
  421493:	jmp    0xe98416e2
  421498:	sahf   
  421499:	add    al,BYTE PTR [edx-0x17]
  42149c:	rol    BYTE PTR [ebx],cl
  42149e:	inc    edx
  42149f:	add    ah,cl
  4214a1:	ins    DWORD PTR es:[edi],dx
  4214a2:	jbe    0x4214e5
  4214a4:	fsubr  QWORD PTR [ebp+0x76]
  4214a7:	inc    ecx
  4214a8:	fsubr  QWORD PTR [ebp+0x76]
  4214ab:	inc    ecx
  4214ac:	int3   
  4214ad:	ins    DWORD PTR es:[edi],dx
  4214ae:	jbe    0x4214f1
  4214b0:	int3   
  4214b1:	ins    DWORD PTR es:[edi],dx
  4214b2:	jbe    0x4214f5
  4214b4:	pushf  
  4214b5:	jo     0x42152d
  4214b7:	inc    ecx
  4214b8:	pushf  
  4214b9:	jo     0x421531
  4214bb:	inc    ecx
  4214bc:	mov    WORD PTR [ebp+0x76],gs
  4214bf:	inc    ecx
	...
  4214d4:	mov    WORD PTR [eax+0x76],?
  4214d7:	inc    ecx
  4214d8:	pushf  
  4214d9:	jo     0x421551
  4214db:	inc    ecx
  4214dc:	pushf  
  4214dd:	jo     0x421555
  4214df:	inc    ecx
  4214e0:	mov    WORD PTR [eax+0x76],?
  4214e3:	inc    ecx
  4214e4:	mov    WORD PTR [eax+0x76],?
  4214e7:	inc    ecx
  4214e8:	pop    esp
  4214e9:	jo     0x421561
  4214eb:	inc    ecx
  4214ec:	pop    esp
  4214ed:	add    dh,BYTE PTR [ebx+0x41]
  4214f0:	dec    esp
  4214f1:	retf   
  4214f2:	jb     0x421535
  4214f4:	dec    esp
  4214f5:	mov    ebp,0xbf5c4172
  4214fa:	jb     0x42153d
  4214fc:	pop    esp
  4214fd:	mov    eax,ds:0x934c4172
  421502:	jne    0x421545
  421504:	dec    esp
  421505:	jae    0x42157c
  421507:	inc    ecx
  421508:	sbb    al,0x65
  42150a:	jne    0x42154d
  42150c:	sbb    al,0x45
  42150e:	jne    0x421551
  421510:	or     al,0x21
  421512:	jne    0x421555
  421514:	or     al,0xef
  421516:	ins    DWORD PTR es:[edi],dx
  421517:	inc    ecx
  421518:	sbb    al,0xa6
  42151a:	jne    0x42155d
  42151c:	sbb    al,0xff
  42151e:	jae    0x421561
  421520:	or     al,0xc7
  421522:	ins    DWORD PTR es:[edi],dx
  421523:	inc    ecx
  421524:	or     al,0x71
  421526:	ins    BYTE PTR es:[edi],dx
  421527:	inc    ecx
  421528:	fmul   QWORD PTR [eax+0x66b54179]
  42152e:	loope  0x4215aa
  421530:	je     0x421598
  421532:	mov    ch,0x7a
  421534:	je     0x42159c
  421536:	ds jnp 0x421539
	...
  421549:	add    BYTE PTR [eax],al
  42154b:	add    BYTE PTR [esi+eiz*2+0x33],dh
  42154f:	jnp    0x4215c5
  421551:	data16 int 0x6f
  421554:	je     0x4215bc
  421556:	cmp    BYTE PTR [esp+esi*2+0x66],0xd
  42155b:	jnp    0x421551
  42155d:	retw   
  42155f:	jge    0x421555
  421561:	data16 jne 0x4215e2
  421564:	hlt    
  421565:	data16 arpl WORD PTR [eax-0xc],si
  421569:	data16 idiv BYTE PTR [edx-0xc]
  42156d:	data16 (bad) 
  42156f:	jnp    0x421565
  421571:	out    0x77,ax
  421574:	hlt    
  421575:	data16 fidiv WORD PTR [edi-0xc]
  421579:	data16 int 0x77
  42157c:	hlt    
  42157d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  42157f:	ja     0x421575
  421581:	data16 ja 0x4215fc
  421584:	hlt    
  421585:	pop    sp
  421587:	js     0x42157d
  421589:	data16 xor al,0x78
  42158c:	hlt    
  42158d:	data16 or al,0x78
  421590:	hlt    
  421591:	data16 in al,0x76
  421594:	hlt    
  421595:	data16 in al,0x76
  421598:	hlt    
  421599:	data16 in al,0x76
  42159c:	je     0x421604
  42159e:	in     al,0x76
  4215a0:	je     0x421608
  4215a2:	mov    ch,0x89
  4215a4:	ret    
  4215a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215a6:	inc    ebp
  4215a7:	add    DWORD PTR [ecx-0x7c4afed8],esp
  4215ad:	bound  edi,QWORD PTR [ecx+0x88]
	...
  4215c3:	add    ah,dh
  4215c5:	shld   DWORD PTR [esi+0x5d118562],edx,0x36
  4215cd:	(bad)  
  4215ce:	loope  0x4215d2
  4215d0:	imul   ebp,DWORD PTR [ecx+eiz*4-0x16704ac1],0x56479da9
  4215db:	out    0x35,eax
  4215dd:	dec    edi
  4215de:	dec    esi
  4215df:	stos   BYTE PTR es:[edi],al
  4215e0:	lea    eax,[edi+0x36]
  4215e3:	out    dx,eax
  4215e4:	cmp    al,0x50
  4215e6:	stos   BYTE PTR es:[edi],al
  4215e7:	sbb    esi,DWORD PTR [edi-0x5968f5d9]
  4215ed:	daa    
  4215ee:	jmp    0x2448d889
  4215f3:	cld    
  4215f4:	aad    0xd1
  4215f6:	in     eax,0x84
  4215f8:	popf   
  4215f9:	jnp    0x421610
  4215fb:	pop    es
  4215fc:	in     al,0x4f
  4215fe:	sub    ch,BYTE PTR [ebp-0x5356408b]
  421604:	jne    0x4215e8
  421606:	pop    esi
  421607:	adc    ebx,DWORD PTR [ebx]
  421609:	paddsb mm6,mm3
  42160c:	jp     0x421613
  42160e:	cli    
  42160f:	test   eax,0x3f7fa35
  421614:	jecxz  0x42159e
  421616:	pop    ebx
  421617:	or     ebp,eax
  421619:	add    esp,ecx
  42161b:	aam    0x1a
  42161d:	fisub  DWORD PTR [esi]
  42161f:	sbb    DWORD PTR [ebx+0x5d18b587],edi
  421625:	or     dh,BYTE PTR [ebx]
  421627:	adc    BYTE PTR [eax],al
	...
  421639:	add    BYTE PTR [eax],al
  42163b:	add    BYTE PTR [eax-0x7d],al
  42163e:	adc    ch,ah
  421640:	cli    
  421641:	iret   
  421642:	ret    
  421643:	inc    esp
  421644:	mov    BYTE PTR [esi],al
  421646:	pushf  
  421647:	jmp    0x4215e5
  421649:	scas   eax,DWORD PTR es:[edi]
  42164a:	jg     0x42164f
  42164c:	mov    edi,DWORD PTR [edx-0xb]
  42164f:	mov    bl,0xc0
  421651:	iret   
  421652:	jmp    0xa5ffd1d4
  421657:	out    0xa6,eax
  421659:	push   cs
  42165a:	add    DWORD PTR ds:0xb8ffaf02,ebp
  421660:	lods   al,BYTE PTR ds:[esi]
  421661:	adc    BYTE PTR [ebp+0xd],bh
  421664:	icebp  
  421665:	jp     0x4215f0
  421667:	pop    edi
  421668:	(bad)  
  42166a:	jne    0x421658
  42166c:	cmp    al,0x8a
  42166e:	pop    eax
  42166f:	ret    0xbfdb
  421672:	shr    BYTE PTR [edx+0x25],0xaf
  421676:	add    al,0xe8
  421678:	retf   
  421679:	push   ds
  42167a:	shl    DWORD PTR [ebp+ebp*8+0x7a],0x2
  42167f:	imul   edx,DWORD PTR [ebx],0x7b7180a4
  421685:	jns    0x421649
  421687:	in     eax,0xb6
  421689:	add    eax,0x601cfe42
  42168e:	or     DWORD PTR [ebx+0x6905fe2a],0xd67598bf
  421698:	aaa    
  421699:	sti    
  42169a:	and    al,0xed
  42169c:	mov    dh,0x8c
  42169e:	xchg   esp,eax
  42169f:	stos   DWORD PTR es:[edi],eax
	...
  4216b4:	stos   DWORD PTR es:[edi],eax
  4216b5:	inc    ebp
  4216b6:	or     DWORD PTR [ebx+0x5e],0x9769d0c0
  4216bd:	cld    
  4216be:	cs cmp ecx,esp
  4216c1:	retf   0x2b13
  4216c4:	lods   eax,DWORD PTR ds:[esi]
  4216c5:	(bad)  
  4216c6:	mov    al,0xe8
  4216c8:	hlt    
  4216c9:	xchg   ebx,eax
  4216ca:	add    BYTE PTR [edi+ecx*8-0x26ba7d95],dl
  4216d1:	lea    eax,[eax]
  4216d3:	jmp    0xf71c1ddf
  4216d8:	mov    edx,eax
  4216da:	add    al,0xb7
  4216dc:	arpl   sp,si
  4216de:	test   DWORD PTR [ecx],ebp
  4216e0:	cmp    al,0x93
  4216e2:	mov    eax,0x8fb174
  4216e7:	add    BYTE PTR [edi+0x47b8161],ah
  4216ed:	mov    DWORD PTR [eax+esi*1-0x67],esi
  4216f1:	loopne 0x421753
  4216f3:	std    
  4216f4:	or     ecx,DWORD PTR [ecx-0x6c2c4b18]
  4216fa:	add    bh,bh
  4216fc:	(bad)  
  4216fd:	jnp    0x421688
  4216ff:	(bad)  
  421700:	pushf  
  421701:	adc    BYTE PTR [eax-0x2771558],al
  421707:	push   0xffffffdc
  421709:	cmp    eax,0x8ddd51b3
  42170e:	add    al,ch
  421710:	mov    bl,0x92
  421712:	add    BYTE PTR [eax],al
  421714:	dec    edi
  421715:	rcl    BYTE PTR [eax],cl
  421717:	test   DWORD PTR [eax],eax
	...
  421729:	add    BYTE PTR [eax],al
  42172b:	add    BYTE PTR [ecx+eiz*1+0xc],bl
  42172f:	mov    eax,0x8d1b
  421734:	sbb    eax,esp
  421736:	test   al,0xfe
  421738:	sub    ecx,DWORD PTR [edx-0x72ac7b18]
  42173e:	add    al,ch
  421740:	std    
  421741:	outs   dx,DWORD PTR ds:[esi]
  421742:	std    
  421743:	call   FWORD PTR [ebx+ebx*4-0x72728523]
  42174a:	mov    DWORD PTR [ebp+0x68],esi
  42174d:	cld    
  42174e:	add    al,BYTE PTR [ebp-0x607f8664]
  421754:	dec    esp
  421755:	lea    eax,[eax]
  421757:	mov    DWORD PTR [ecx],edx
  421759:	jns    0x42178c
  42175b:	rol    BYTE PTR [edx-0x26fbbeb4],0x1f
  421762:	or     BYTE PTR [edi],cl
  421764:	loope  0x421732
  421766:	add    DWORD PTR [ebp-0x78],0xffffff94
  42176a:	jno    0x421734
  42176c:	sbb    al,0x8d
  42176e:	test   al,al
  421770:	inc    eax
  421771:	and    al,0x6a
  421773:	add    al,0xb5
  421775:	push   cs
  421776:	call   0x98a88cef
  42177b:	(bad)  
  42177c:	mov    ch,0x66
  42177e:	add    ch,bh
  421780:	ret    
  421781:	sahf   
  421782:	inc    edx
  421783:	jbe    0x421739
  421785:	data16 test al,al
  421788:	sbb    DWORD PTR [edx+ebx*4],0xd5f20f
  42178f:	push   0x0
	...
  4217a4:	std    
  4217a5:	data16 add BYTE PTR [eax],al
  4217a8:	loop   0x421742
  4217aa:	sbb    al,0xb2
  4217ac:	arpl   WORD PTR [edi+0x0],sp
  4217af:	test   ch,dh
  4217b1:	mov    edx,0xebb169c3
  4217b6:	ret    
  4217b7:	sti    
  4217b8:	gs into 
  4217ba:	add    BYTE PTR ss:[ebp-0x62c9f29a],dh
  4217c1:	adc    dl,BYTE PTR [ebx+0x44f2aafe]
  4217c7:	je     0x42179b
  4217c9:	repz sub DWORD PTR [eax+0x500e099b],0xffffff92
  4217d1:	pop    ebx
  4217d2:	xchg   esp,eax
  4217d3:	adc    ebp,esi
  4217d5:	data16 mov al,0x8a
  4217d8:	cmp    dh,cl
  4217da:	or     bh,ch
  4217dc:	jp     0x421774
  4217de:	pushf  
  4217df:	enter  0x66b5,0x0
  4217e3:	std    
  4217e4:	mov    ds:0xb47595de,eax
  4217e9:	data16 test al,al
  4217ec:	loope  0x42185a
  4217ee:	jns    0x421833
  4217f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217f1:	test   al,0x4
  4217f3:	call   FWORD PTR [edx]
  4217f5:	sbb    DWORD PTR [bp+di],edx
  4217f8:	cs js  0x42177e
  4217fb:	test   cl,0x5b
  4217fe:	or     eax,0x138f1d36
  421803:	mov    bl,0x29
  421805:	js     0x4217bb
  421807:	sbb    eax,DWORD PTR [eax]
	...
  421819:	add    BYTE PTR [eax],al
  42181b:	add    BYTE PTR ds:0xe70d12de,cl
  421821:	dec    edi
  421822:	stos   DWORD PTR es:[edi],eax
  421823:	lods   eax,DWORD PTR ds:[esi]
  421824:	ins    DWORD PTR es:[edi],dx
  421825:	inc    esi
  421826:	sub    BYTE PTR [eax],al
  421828:	mov    ch,0xe1
  42182a:	outs   dx,BYTE PTR ds:[esi]
  42182b:	adc    ebp,DWORD PTR [eax+0x4]
  42182e:	je     0x421837
  421830:	lock nop
  421832:	jns    0x4217bf
  421834:	mov    dl,0x8f
  421836:	ins    BYTE PTR es:[edi],dx
  421837:	or     al,0x61
  421839:	mov    bl,dl
  42183b:	aam    0xda
  42183d:	dec    edi
  42183e:	cmp    DWORD PTR ds:0x42c1dfd8,ecx
  421844:	cmp    BYTE PTR [eax-0x3d],0x15
  421848:	jno    0x4217fd
  42184a:	in     eax,dx
  42184b:	add    bh,al
  42184d:	nop
  42184e:	add    eax,0x358f757f
  421853:	push   es
  421854:	or     ebp,DWORD PTR [eax+0x54]
  421857:	mov    dl,0xa9
  421859:	ja     0x421896
  42185b:	jns    0x4218d8
  42185d:	(bad)  
  42185e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42185f:	pop    es
  421860:	mov    ch,0x37
  421862:	jno    0x4218c4
  421864:	cmp    BYTE PTR [ebx],dl
  421866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421867:	mov    dh,0x3d
  421869:	fs addr16 daa 
  42186c:	jge    0x421881
  42186e:	xchg   bh,dl
  421870:	in     eax,0x4
  421872:	es call 0xb580db3e
  421878:	cmp    eax,0xf97ae601
  42187d:	stos   DWORD PTR es:[edi],eax
  42187e:	adc    ecx,edx
	...
  421894:	sbb    bl,bh
  421896:	pusha  
  421897:	mov    edi,0xaf709f96
  42189c:	xchg   esi,eax
  42189d:	and    DWORD PTR [edx],0xffffffc7
  4218a0:	xchg   esi,eax
  4218a1:	xchg   ebx,eax
  4218a2:	add    BYTE PTR [ecx+0x2e],ah
  4218a5:	mov    bh,0x0
  4218a7:	es cli 
  4218a9:	mov    dl,0x2c
  4218ab:	sbb    eax,0x8700cfa8
  4218b0:	lahf   
  4218b1:	retf   
  4218b2:	and    al,0xfd
  4218b4:	lahf   
  4218b5:	shl    DWORD PTR [ecx+esi*8],cl
  4218b8:	scas   eax,DWORD PTR es:[edi]
  4218b9:	sub    BYTE PTR [ecx],al
  4218bb:	jmp    0xedbe2976
  4218c0:	push   es
  4218c1:	test   BYTE PTR [edx+0x8fb651],al
  4218c7:	xchg   edi,eax
  4218c8:	ins    DWORD PTR es:[edi],dx
  4218c9:	jl     0x4218b4
  4218cb:	leave  
  4218cc:	inc    edi
  4218cd:	jbe    0x4218cb
  4218cf:	jb     0x421862
  4218d1:	adc    bl,al
  4218d3:	out    0x5a,al
  4218d5:	or     eax,DWORD PTR [ecx]
  4218d7:	jmp    0x6f2af992
  4218dc:	int3   
  4218dd:	jne    0x4218db
  4218df:	push   0xfffffffd
  4218e1:	mov    dl,0x24
  4218e3:	mov    dh,0x17
  4218e5:	push   cs
  4218e6:	inc    ebp
  4218e7:	add    eax,0xcd5d0d99
  4218ec:	mov    gs,esp
  4218ee:	test   DWORD PTR [ecx+0x2e87e144],ebp
  4218f4:	popf   
  4218f5:	or     DWORD PTR [eax-0x7],ecx
	...
  42190c:	dec    ecx
  42190d:	psubsw mm3,mm1
  421910:	cs ins DWORD PTR es:[edi],dx
  421912:	(bad)  
  421913:	jmp    0xbced80ce
  421918:	scas   eax,DWORD PTR es:[edi]
  421919:	je     0x4218a3
  42191b:	jns    0x421951
  42191d:	jge    0x421995
  42191f:	cmc    
  421920:	inc    BYTE PTR [ecx+eax*1]
  421923:	jmp    0xadcc06de
  421928:	jp     0x4218c0
  42192a:	out    0xfe,eax
  42192c:	int    0xcb
  42192e:	and    al,0x0
  421930:	mov    eax,0xb844873b
  421935:	arpl   WORD PTR [ebx+ecx*4-0x76],cx
  421939:	xchg   ebx,eax
  42193a:	sub    ecx,DWORD PTR [ebx]
  42193c:	sbb    eax,0xa5665292
  421941:	dec    edi
  421942:	and    BYTE PTR [esp+eax*8],ah
  421945:	xchg   esp,eax
  421946:	push   eax
  421947:	inc    ebx
  421949:	test   BYTE PTR [esp+0x4],0xf
  42194e:	les    esi,FWORD PTR [edi+eax*1-0xb]
  421952:	sti    
  421953:	imul   ecx,DWORD PTR ds:0x28831089,0x36001456
  42195d:	xchg   edx,eax
  42195e:	xchg   DWORD PTR [eax+edi*4+0x7b],eax
  421962:	dec    esp
  421963:	lea    ecx,[eax-0x7a17cf91]
  421969:	push   eax
  42196a:	sti    
  42196b:	dec    DWORD PTR [edi+0x50c093]
	...
  421981:	add    BYTE PTR [eax],al
  421983:	add    bl,dh
  421985:	mov    BYTE PTR [ecx],dh
  421987:	fild   DWORD PTR [edi+0x36]
  42198a:	and    BYTE PTR [eax],dl
  42198c:	push   edi
  42198d:	and    al,BYTE PTR [eax]
  42198f:	mov    ebx,DWORD PTR [ebx-0xa]
  421992:	retf   0x73e8
  421995:	and    bl,bh
  421997:	jmp    DWORD PTR [edi]
  421999:	mov    DWORD PTR [ecx],edi
  42199b:	sti    
  42199c:	xchg   ebx,eax
  42199d:	adc    BYTE PTR [ebp-0x1],al
  4219a0:	inc    ebx
  4219a1:	mov    dh,dl
  4219a3:	inc    esp
  4219a4:	js     0x421a0b
  4219a6:	or     al,0x74
  4219a8:	aad    0xf6
  4219aa:	inc    esp
  4219ab:	and    al,0x90
  4219ad:	inc    ecx
  4219ae:	sbb    DWORD PTR [eax+edi*2-0x7f],0xffffffe4
  4219b3:	inc    esp
  4219b4:	jns    0x421940
  4219b6:	std    
  4219b7:	test   BYTE PTR [esp+eax*1+0x1cb5e838],cl
  4219be:	cwde   
  4219bf:	cld    
  4219c0:	push   edx
  4219c1:	jmp    0xfdc:0x233c2037
  4219c8:	xor    BYTE PTR [ebx],ch
  4219ca:	fmul   QWORD PTR [edi]
  4219cc:	in     eax,0x50
  4219ce:	add    eax,0x181eb96a
  4219d3:	dec    eax
  4219d4:	xchg   ebx,eax
  4219d5:	lods   eax,DWORD PTR ds:[esi]
  4219d6:	push   es
  4219d7:	std    
  4219d8:	test   eax,0x3ce7f44a
  4219dd:	mov    edx,0x5436ffff
  4219e2:	rcl    ch,1
  4219e4:	jbe    0x421a4c
  4219e6:	lock add BYTE PTR [bx+si],al
	...
  4219fa:	add    BYTE PTR [eax],al
  4219fc:	mov    ch,0x66
  4219fe:	add    BYTE PTR [eax+0x5c7d528f],al
  421a04:	cdq    
  421a05:	pop    edx
  421a06:	pop    es
  421a07:	adc    ecx,DWORD PTR [ecx+0x31ffc073]
  421a0d:	fneni(8087 only) 
  421a0f:	or     ecx,ebp
  421a11:	push   ecx
  421a12:	mov    eax,ds:0xb451d2fc
  421a17:	cmc    
  421a18:	jno    0x42199c
  421a1a:	lock pop es
  421a1c:	dec    ecx
  421a1d:	imul   ebx,DWORD PTR [eax],0x56
  421a20:	test   DWORD PTR [esi+0x0],esp
  421a23:	idiv   cl
  421a25:	mov    dh,al
  421a27:	add    BYTE PTR [ecx],ah
  421a29:	inc    ebp
  421a2a:	cwde   
  421a2b:	fbstp  TBYTE PTR [eax]
  421a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a2e:	add    al,0xe8
  421a30:	jge    0x4219e0
  421a32:	(bad)  
  421a33:	(bad)  
  421a34:	ds stos BYTE PTR es:[edi],al
  421a36:	loopne 0x421a4b
  421a38:	sbb    eax,0x35000067
  421a3d:	pop    ss
  421a3e:	sbb    eax,0xb0679581
  421a43:	imul   esi,DWORD PTR [ecx+ebx*4-0x7095af4b],0xcfb2c3fc
  421a4e:	jmp    0xaebfdb6f
  421a53:	fbld   TBYTE PTR [esi-0x2d092a75]
  421a59:	(bad)
  421a5d:	jmp    0x422337
	...
  421a72:	add    BYTE PTR [eax],al
  421a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a75:	rcr    esp,cl
  421a77:	ret    
  421a78:	xor    cl,BYTE PTR [ecx]
  421a7a:	sahf   
  421a7b:	ffreep st(2)
  421a7d:	mov    eax,0x8b8902e
  421a82:	jmp    0xfab73624
  421a87:	test   al,0x70
  421a89:	fcomp  DWORD PTR [esi+0x1f]
  421a8c:	outs   dx,BYTE PTR ds:[esi]
  421a8d:	push   eax
  421a8e:	cld    
  421a8f:	mov    edi,0xb1e88bd6
  421a94:	sub    eax,0x71022b7e
  421a99:	imul   DWORD PTR [ecx+0x3b8d6103]
  421a9f:	sbb    al,0xf1
  421aa1:	ret    
  421aa2:	fimul  DWORD PTR [eax]
  421aa4:	sub    al,0x4d
  421aa6:	xor    al,0x46
  421aa8:	mov    ecx,0x3db2368f
  421aad:	jg     0x421aca
  421aaf:	aad    0x2
  421ab1:	or     BYTE PTR [esp+edx*8+0x1bb2bfdd],ch
  421ab8:	xchg   esi,eax
  421ab9:	cld    
  421aba:	call   0x1e9106c2
  421abf:	hlt    
  421ac0:	sub    eax,0x821c2342
  421ac5:	cld    
  421ac6:	call   0x1590e6ce
  421acb:	adc    ah,cl
  421acd:	jbe    0x421acc
  421acf:	call   DWORD PTR [edx-0x6f]
  421ad2:	mov    es,WORD PTR [esi+0x76008a2d]
	...
  421aec:	inc    esi
  421aed:	lahf   
  421aee:	push   eax
  421aef:	cmp    DWORD PTR [ebp-0x1e99043c],0x2a5a387f
  421af9:	lods   al,BYTE PTR ds:[esi]
  421afa:	in     ax,dx
  421afc:	scas   al,BYTE PTR es:[edi]
  421afd:	jmp    0x421b4a
  421aff:	dec    esi
  421b00:	mov    ebp,0x42bdbfb8
  421b05:	or     bl,BYTE PTR [ecx]
  421b07:	push   edx
  421b08:	mov    al,0xc0
  421b0a:	shl    dl,0x79
  421b0d:	sti    
  421b0e:	add    ah,BYTE PTR [eax+0x6]
  421b11:	or     cl,bh
  421b13:	adc    bl,BYTE PTR [esi]
  421b15:	fucomp st(0)
  421b17:	xchg   ebx,eax
  421b18:	pop    ebp
  421b19:	je     0x421b17
  421b1b:	fidivr DWORD PTR [ebp+0xa94f7b8]
  421b21:	rol    eax,0x12
  421b24:	imul   eax
  421b26:	or     BYTE PTR [ecx],dl
  421b28:	out    dx,eax
  421b29:	ret    
  421b2a:	sti    
  421b2b:	idiv   dh
  421b2d:	dec    edi
  421b2e:	jne    0x421b12
  421b30:	jne    0x421ac1
  421b32:	jo     0x421b95
  421b34:	stc    
  421b35:	jb     0x421ac0
  421b37:	popa   
  421b38:	mov    ch,0x68
  421b3a:	call   FWORD PTR [ecx]
  421b3c:	jns    0x421af6
  421b3e:	mov    edi,0x3473c254
  421b43:	shr    esp,1
  421b45:	ret    
  421b46:	sti    
  421b47:	mov    esi,0x26346b0a
  421b4c:	mov    edx,0x98e874
	...
  421b61:	add    BYTE PTR [eax],al
  421b63:	add    BYTE PTR [esi],ch
  421b65:	sub    cl,0xc7
  421b68:	(bad)  
  421b69:	pop    DWORD PTR [eax]
  421b6b:	loop   0x421b64
  421b6d:	sti    
  421b6e:	or     DWORD PTR [ecx],edi
  421b70:	out    0x72,al
  421b72:	sti    
  421b73:	hlt    
  421b74:	neg    BYTE PTR [ebp-0x773ffc0]
  421b7a:	rcr    DWORD PTR [edi-0x66],0x26
  421b7e:	rcl    DWORD PTR [edi-0x29],0x83
  421b82:	dec    ebx
  421b83:	push   edi
  421b84:	xor    al,0xdc
  421b86:	sti    
  421b87:	dec    DWORD PTR [edi+ecx*1-0x3f]
  421b8b:	js     0x421c0a
  421b8d:	bswap  edi
  421b8f:	jne    0x421bf2
  421b91:	enter  0x7518,0x1c
  421b95:	mov    ?,WORD PTR [ecx]
  421b97:	rcr    BYTE PTR [edi],0xf
  421b9a:	les    esi,FWORD PTR [ebp+0x62]
  421b9d:	inc    esi
  421b9e:	add    dh,BYTE PTR [esi+ecx*2+0xf]
  421ba2:	(bad)  
  421ba3:	jne    0x421bb8
  421ba5:	(bad)  
  421ba6:	push   ebp
  421ba7:	add    BYTE PTR [ebx],dl
  421ba9:	push   cs
  421baa:	jmp    0x9c06:0xfc059451
  421bb1:	xchg   esi,eax
  421bb2:	inc    eax
  421bb3:	push   esi
  421bb4:	mov    ebx,0x8914201f
  421bb9:	sbb    al,0xfd
  421bbb:	push   edx
  421bbc:	and    ah,BYTE PTR [ecx]
  421bbe:	xor    ebx,ebx
  421bc0:	jmp    0x421c40
  421bc2:	jo     0x421bda
  421bc4:	sbb    al,0x8e
  421bc6:	add    esp,0x0
	...
  421bdc:	fadd   st(2),st
  421bde:	jbe    0x421be0
  421be0:	ror    DWORD PTR ds:0x7a64c080,cl
  421be6:	cmp    esi,eax
  421be8:	arpl   WORD PTR [esi+0x6f],si
  421beb:	add    eax,0xeb3e6a44
  421bf0:	(bad)
  421bf3:	jmp    0x421b96
  421bf5:	cmc    
  421bf6:	sbb    al,0x3e
  421bf8:	pop    ss
  421bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bfa:	add    esi,edi
  421bfc:	daa    
  421bfd:	into   
  421bfe:	pop    edx
  421bff:	test   DWORD PTR [edi+0x4],esi
  421c02:	add    BYTE PTR [ebx],bh
  421c04:	mov    ch,0x3f
  421c06:	xchg   ecx,eax
  421c07:	or     DWORD PTR [esi],edi
  421c09:	xchg   ebx,eax
  421c0a:	loopne 0x421c17
  421c0c:	cmp    BYTE PTR [eax-0x74],al
  421c0f:	add    DWORD PTR [eax+edx*2],ebp
  421c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c13:	pop    esp
  421c14:	ja     0x421c85
  421c16:	add    BYTE PTR [ecx+0x2],dl
  421c19:	out    dx,al
  421c1a:	pop    es
  421c1b:	dec    edi
  421c1c:	or     bl,bh
  421c1e:	fdivr  st,st(6)
  421c20:	pop    edx
  421c21:	addr16 iret 
  421c23:	fmul   DWORD PTR [esi-0x71957c5b]
  421c29:	mov    ch,0x90
  421c2b:	add    bh,bh
  421c2d:	call   0x3940:0x75b53fb3
  421c34:	(bad)  
  421c35:	xor    ebp,ebx
  421c37:	gs in  al,dx
  421c39:	pop    esp
  421c3a:	mov    WORD PTR [esi+ebx*8-0x53],cs
  421c3e:	nop
  421c3f:	add    al,0x0
	...
  421c51:	add    BYTE PTR [eax],al
  421c53:	add    BYTE PTR [ebp+0x3a],bl
  421c56:	add    BYTE PTR ds:0xb7b58e35,al
  421c5c:	(bad)  
  421c5d:	data16 sti 
  421c5f:	jg     0x421c6f
  421c61:	dec    esp
  421c62:	scas   al,BYTE PTR es:[edi]
  421c63:	cld    
  421c64:	or     DWORD PTR [edx-0x14],0xb179648a
  421c6b:	push   ebp
  421c6c:	and    BYTE PTR [ecx-0x14],0x6f
  421c70:	retf   
  421c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c72:	add    al,0x81
  421c74:	icebp  
  421c75:	jbe    0x421cbe
  421c77:	jp     0x421c2e
  421c79:	popa   
  421c7a:	add    BYTE PTR [ebx+0x38f6def5],0xfb
  421c81:	mov    cl,0xfa
  421c83:	jae    0x421c38
  421c85:	std    
  421c86:	adc    al,0xe9
  421c88:	mov    ebp,0x753127ed
  421c8d:	enter  0x477,0x2a
  421c91:	nop
  421c92:	je     0x421c5c
  421c94:	and    DWORD PTR ds:0x5437a6a7,eax
  421c9a:	adc    DWORD PTR [eax],eax
  421c9c:	int3   
  421c9d:	push   esi
  421c9e:	adc    eax,0xcdc32dfa
  421ca3:	div    DWORD PTR [edi]
  421ca5:	inc    esi
  421ca6:	test   BYTE PTR [ecx],0x3a
  421ca9:	mov    dh,0x12
  421cab:	test   eax,0x7ee98774
  421cb0:	jp     0x421cad
  421cb2:	pop    ss
  421cb3:	dec    esp
  421cb4:	pop    eax
  421cb5:	jo     0x421d12
  421cb7:	test   DWORD PTR [eax],eax
	...
  421cc9:	add    BYTE PTR [eax],al
  421ccb:	add    cl,ch
  421ccd:	add    al,0x3a
  421ccf:	ror    DWORD PTR [ecx+0xf],1
  421cd2:	adc    DWORD PTR [ecx+ecx*8],eax
  421cd5:	mov    ebp,DWORD PTR [eax+0x6578c7b9]
  421cdb:	xor    ah,BYTE PTR [esi+0x2aad728a]
  421ce1:	mov    DWORD PTR [ecx+0x7f],ebp
  421ce4:	sub    edi,ebx
  421ce6:	hlt    
  421ce7:	jle    0x421d01
  421ce9:	mul    ebx
  421ceb:	fdiv   st,st(4)
  421ced:	add    eax,0xcb418ec
  421cf2:	les    eax,FWORD PTR [ebx]
  421cf4:	sub    al,0x48
  421cf6:	mov    ds:0x9337b618,eax
  421cfb:	add    edi,DWORD PTR [eax+0x62446d0f]
  421d01:	mov    BYTE PTR [esi+ecx*1+0x69],ah
  421d05:	mov    WORD PTR [esi-0x23],fs
  421d08:	fimul  DWORD PTR [ebp+eiz*2+0x3a]
  421d0c:	dec    ecx
  421d0d:	mov    ebx,0x6fc80491
  421d12:	dec    ebx
  421d13:	lods   eax,DWORD PTR ds:[esi]
  421d14:	sub    eax,0x5304f75f
  421d19:	mov    dh,0x0
  421d1b:	nop
  421d1c:	mov    eax,0xb4a80112
  421d21:	fnstenv [ebp-0x4c]
  421d24:	and    eax,DWORD PTR [edx+0x76]
  421d27:	in     al,dx
  421d28:	icebp  
  421d29:	les    eax,FWORD PTR [eax]
  421d2b:	out    0x36,al
  421d2d:	adc    esi,ebx
  421d2f:	sbb    eax,0x0
	...
  421d44:	adc    BYTE PTR [edx],0xfc
  421d47:	adc    DWORD PTR [ebx+0x7870beb8],eax
  421d4d:	js     0x421d4f
  421d4f:	push   0xffffff90
  421d51:	outs   dx,DWORD PTR ds:[esi]
  421d52:	xchg   DWORD PTR [esi+0x31067811],ebp
  421d58:	adc    DWORD PTR [edi+0x3],ebp
  421d5b:	imul   ebx,ebx,0xd3e67a4f
  421d61:	gs jne 0x421d4e
  421d64:	xor    eax,0x652a00b6
  421d69:	das    
  421d6a:	cmp    BYTE PTR [ecx],dh
  421d6c:	sub    bl,BYTE PTR [ebp+0x6cb80081]
  421d72:	cld    
  421d73:	mov    dh,0x44
  421d75:	xchg   ebp,eax
  421d76:	mov    eax,0x8094b696
  421d7b:	sub    ch,bh
  421d7d:	nop
  421d7e:	jne    0x421d6d
  421d80:	rcl    DWORD PTR [ecx+0x6ef6a62c],1
  421d86:	aaa    
  421d87:	and    DWORD PTR [edx],esi
  421d89:	xchg   ecx,eax
  421d8a:	mov    eax,ebp
  421d8c:	jne    0x421d2e
  421d8e:	rol    al,0x32
  421d91:	mov    bl,0x4
  421d93:	jl     0x421d7d
  421d95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d96:	inc    esp
  421d97:	(bad)
  421d9a:	push   es
  421d9b:	push   0xde08b435
  421da0:	mov    dh,0x6c
  421da2:	jl     0x421e03
  421da4:	mov    esp,0xe95427
	...
  421db9:	add    BYTE PTR [eax],al
  421dbb:	add    BYTE PTR [edi-0x3bff40f1],ch
  421dc1:	xchg   edx,eax
  421dc2:	push   ecx
  421dc3:	push   esi
  421dc4:	retf   
  421dc5:	std    
  421dc6:	mov    ebp,DWORD PTR cs:[esi-0x5a]
  421dca:	shl    BYTE PTR [ebx],0x47
  421dcd:	repnz sub ecx,esi
  421dd0:	and    DWORD PTR [ebx],ecx
  421dd2:	enter  0x33ff,0x12
  421dd6:	adc    dl,0xa8
  421dd9:	add    DWORD PTR [esi-0x2de99dec],0xb1a8b74
  421de3:	inc    ecx
  421de4:	lahf   
  421de5:	ret    0xe86f
  421de8:	fst    DWORD PTR [edx-0x216af891]
  421dee:	mov    eax,0x80994c7a
  421df3:	(bad)  
  421df4:	pop    ebp
  421df5:	xchg   edx,eax
  421df6:	mov    DWORD PTR [eax+edi*4-0x7d],ecx
  421dfa:	jg     0x421dc5
  421dfc:	push   0x13198394
  421e01:	lock pop ecx
  421e03:	ret    0x9218
  421e06:	dec    edi
  421e07:	mov    esi,DWORD PTR [eax-0x3c]
  421e0a:	and    DWORD PTR [ebp-0x30],0xa7565193
  421e11:	gs xor ebx,ebx
  421e14:	cdq    
  421e15:	imul   esi,DWORD PTR [eax+0x23],0xc771d4b
  421e1c:	imul   DWORD PTR [edx+0x7f]
  421e1f:	rol    BYTE PTR [eax],0x0
	...
  421e32:	add    BYTE PTR [eax],al
  421e34:	js     0x421dbc
  421e36:	or     eax,0x628108b7
  421e3b:	test   esi,ecx
  421e3d:	out    0x9,eax
  421e3f:	push   bp
  421e41:	test   BYTE PTR [ecx+0x41d9cec1],al
  421e47:	dec    esi
  421e48:	imul   edi,DWORD PTR [ebx+0x5d],0x794eb585
  421e4f:	or     DWORD PTR [esi],esi
  421e51:	dec    edi
  421e52:	push   es
  421e53:	dec    ecx
  421e54:	repnz mov edx,0x75b57a00
  421e5a:	xor    BYTE PTR [eax],0x75
  421e5d:	fisttp QWORD PTR [ebp+0xcb42ffe]
  421e63:	xor    DWORD PTR [ebp-0x75],0x2
  421e67:	xchg   DWORD PTR [ebp-0x1403b71f],ebp
  421e6d:	mov    eax,ds:0x76adc1cd
  421e72:	pop    ecx
  421e73:	mov    DWORD PTR [ecx-0x17397678],ecx
  421e79:	jb     0x421eae
  421e7b:	sar    BYTE PTR [edx+edi*1+0x5a],0x8b
  421e80:	call   0x5c04067f
  421e85:	idiv   dh
  421e87:	pop    ebp
  421e88:	cmp    BYTE PTR [edi-0x50c9fc8d],dh
  421e8e:	inc    dh
  421e90:	jbe    0x421e84
  421e92:	dec    eax
  421e93:	cld    
  421e94:	ins    BYTE PTR es:[edi],dx
  421e95:	mov    edx,0x8958
	...
  421eaa:	add    BYTE PTR [eax],al
  421eac:	and    DWORD PTR [eax],ecx
  421eae:	mov    esi,eax
  421eb0:	mov    al,ds:0xecc0337a
  421eb5:	mov    ecx,0xb2a08b59
  421eba:	out    0x54,eax
  421ebc:	adc    ecx,DWORD PTR [esi-0x48cfa202]
  421ec2:	jae    0x421ec7
  421ec4:	ss scas eax,DWORD PTR es:[edi]
  421ec6:	inc    dh
  421ec8:	mul    cl
  421eca:	dec    eax
  421ecb:	cld    
  421ecc:	cld    
  421ecd:	mov    ecx,0x65d98958
  421ed2:	je     0x421edc
  421ed4:	test   BYTE PTR [esi-0x7025020c],cl
  421eda:	loop   0x421e63
  421edc:	adc    ch,al
  421ede:	adc    eax,DWORD PTR [edi-0x42131d1c]
  421ee4:	mov    ds,esp
  421ee6:	sub    DWORD PTR [esp+eax*4],eax
  421ee9:	dec    edi
  421eea:	add    DWORD PTR [edi-0x43],eax
  421eed:	loop   0x421ec4
  421eef:	imul   esp,edx,0xa8233d91
  421ef5:	inc    esi
  421ef6:	iret   
  421ef7:	retf   0x6e35
  421efa:	(bad)  
  421efb:	mov    ss,WORD PTR [ebx]
  421efd:	(bad)
  421f00:	xor    eax,0x2c55f878
  421f05:	ret    0x8ee1
  421f08:	not    DWORD PTR [edi+0x6c70bc19]
  421f0e:	jnp    0x421e91
	...
  421f24:	pop    ebp
  421f25:	mov    BYTE PTR [edx+0x1],dh
  421f28:	pusha  
  421f29:	retf   0x8a7
  421f2c:	mov    ch,0xc2
  421f2e:	outs   dx,BYTE PTR ds:[esi]
  421f2f:	lock add eax,esi
  421f32:	jo     0x421f7b
  421f34:	dec    ecx
  421f35:	sbb    BYTE PTR [ebp+0x5918e80b],ch
  421f3b:	pop    edx
  421f3c:	xor    dl,dl
  421f3e:	icebp  
  421f3f:	jmp    0x421f8f
  421f41:	ins    DWORD PTR es:[edi],dx
  421f42:	cmp    eax,DWORD PTR [ecx]
  421f44:	ss dec edi
  421f46:	mov    dl,0x4e
  421f48:	fisubr DWORD PTR cs:0x1197878f
  421f4f:	ins    BYTE PTR es:[edi],dx
  421f50:	adc    ebp,DWORD PTR [ebx+ebx*1-0x79]
  421f54:	dec    edx
  421f55:	out    0xdc,eax
  421f57:	xchg   BYTE PTR [ecx],al
  421f59:	loop   0x421f48
  421f5b:	cmp    bh,BYTE PTR [esi+0x6b]
  421f5e:	jle    0x421f96
  421f60:	cmp    al,0xda
  421f62:	icebp  
  421f63:	imul   esp,DWORD PTR [edx-0x6c82ff5a],0xdcd2db62
  421f6d:	push   cs
  421f6e:	jecxz  0x421f7a
  421f70:	inc    edx
  421f71:	adc    dl,BYTE PTR [ecx+ebp*8-0x43]
  421f75:	psubsb mm6,mm7
  421f78:	mov    ch,0xe0
  421f7a:	or     BYTE PTR [ebx+esi*2-0x69],bl
  421f7e:	push   eax
  421f7f:	jb     0x421f7c
  421f81:	imul   ecx,DWORD PTR [eax-0x16a2c66a],0x73
	...
  421f9c:	mov    ah,0x6c
  421f9e:	cld    
  421f9f:	ret    0xeaf
  421fa2:	cld    
  421fa3:	sbb    eax,0x7c9a0ba
  421fa8:	ds popf 
  421faa:	pop    edx
  421fab:	mov    al,ds:0x62008f78
  421fb0:	loop   0x421f65
  421fb2:	or     al,0x74
  421fb4:	cli    
  421fb5:	mov    bl,0x10
  421fb7:	sbb    DWORD PTR [ebx+eiz*8-0x30ce1adc],esi
  421fbe:	and    al,0xdd
  421fc0:	dec    esi
  421fc1:	arpl   bp,di
  421fc3:	data16 mov ch,0x50
  421fc6:	mov    BYTE PTR [ebp-0x5272646e],dh
  421fcc:	call   0xcb3:0xc24e507f
  421fd3:	jb     0x42204f
  421fd5:	mov    bl,0xc
  421fd7:	push   ecx
  421fd8:	xchg   esp,eax
  421fd9:	imul   edi,esp,0x36
  421fdc:	stc    
  421fdd:	mov    ebp,0xda873d87
  421fe2:	jg     0x421f88
  421fe4:	mov    esi,0x4ee6758f
  421fe9:	les    eax,FWORD PTR [eax]
  421feb:	out    dx,al
  421fec:	ss js  0x42205f
  421fef:	bound  ebp,QWORD PTR [ebx+0x7f]
  421ff2:	dec    edi
  421ff3:	add    ah,al
  421ff5:	es (bad) 
  421ff7:	(bad)  
  421ff8:	jmp    0x422010
  421ffa:	aam    0x85
  421ffc:	(bad)  
  421ffd:	in     eax,0x5
  421fff:	mov    eax,0x0
	...
  422014:	inc    ebx
  422015:	pop    DWORD PTR ds:0x81efe780
  42201b:	gs aam 0x93
  42201e:	ret    0xeb45
  422021:	xchg   ebx,eax
  422022:	push   edx
  422023:	or     DWORD PTR [edi],0x9cfffb94
  422029:	es std 
  42202b:	jmp    FWORD PTR [ebx-0x16]
  42202e:	cmp    eax,ebx
  422030:	call   0x531aa9c6
  422035:	fdivr  st,st(5)
  422037:	add    DWORD PTR [ecx],ecx
  422039:	cwde   
  42203a:	sbb    DWORD PTR [eax+0x19],edx
  42203d:	jmp    0xd638093a
  422042:	std    
  422043:	call   DWORD PTR [eax]
  422045:	push   esp
  422046:	jo     0x42207b
  422048:	cmp    ebp,eax
  42204a:	adc    al,0x8b
  42204c:	rol    DWORD PTR [ebx+0x155875fd],0x3f
  422053:	clc    
  422054:	xlat   BYTE PTR ds:[ebx]
  422055:	push   esi
  422056:	in     al,0x77
  422058:	fsubr  DWORD PTR [edx-0x3]
  42205b:	mov    ebp,esp
  42205d:	adc    al,0xfe
  42205f:	jp     0x4220ad
  422061:	xchg   ecx,eax
  422062:	xor    BYTE PTR [ebp+0x49],0xe
  422066:	ja     0x422067
  422068:	sbb    al,0xe2
  42206a:	mov    eax,0xe46661ff
  42206f:	not    DWORD PTR [esi+0x69]
  422072:	std    
  422073:	mov    edx,edx
  422075:	leave  
  422076:	pop    ecx
  422077:	leave  
	...
  42208c:	fiadd  WORD PTR [ebx-0x71a94200]
  422092:	add    eax,0xed8db580
  422097:	add    BYTE PTR [ebx],0x3
  42209a:	jmp    0x87a29927
  42209f:	dec    edx
  4220a0:	in     eax,dx
  4220a1:	fimul  WORD PTR [ecx+esi*1]
  4220a4:	cmc    
  4220a5:	mov    edi,ds
  4220a7:	push   edx
  4220a8:	cs ins BYTE PTR es:[edi],dx
  4220aa:	push   ebp
  4220ab:	dec    edi
  4220ac:	ss repz or al,0x0
  4220b0:	inc    eax
  4220b1:	jno    0x42206b
  4220b3:	push   esp
  4220b4:	mov    ch,0x79
  4220b6:	sub    al,0x43
  4220b9:	in     eax,dx
  4220ba:	push   eax
  4220bb:	adc    BYTE PTR [esi],al
  4220bd:	aas    
  4220be:	cmp    al,0xfe
  4220c0:	stos   BYTE PTR es:[edi],al
  4220c1:	sub    al,BYTE PTR [edi+0x7cfe38d7]
  4220c7:	add    eax,0x504825d
  4220cc:	xor    eax,0x10815afe
  4220d1:	das    
  4220d2:	add    dh,al
  4220d4:	clc    
  4220d5:	add    DWORD PTR [eax],eax
  4220d7:	push   esi
  4220d8:	xor    al,0x36
  4220da:	add    bh,bh
  4220dc:	jb     0x422155
  4220de:	mov    eax,ebx
  4220e0:	jmp    0x422140
  4220e2:	test   eax,edi
  4220e4:	(bad)  
  4220e6:	cli    
  4220e7:	jl     0x4220c2
  4220e9:	outs   dx,DWORD PTR ds:[esi]
  4220ea:	mov    bh,0xfc
  4220ec:	push   edx
  4220ed:	bnd jp 0x4220b6
	...
  422104:	lock leave 
  422106:	add    al,0x51
  422108:	xor    BYTE PTR [eax+edi*8-0x19],cl
  42210c:	mov    bl,0x2c
  42210e:	sti    
  42210f:	cld    
  422110:	cmp    DWORD PTR [edi+0x242a3173],esi
  422116:	adc    al,0x89
  422118:	mov    BYTE PTR [esi-0x5],al
  42211b:	jb     0x4220c6
  42211d:	in     eax,dx
  42211e:	dec    eax
  42211f:	clc    
  422120:	ds nop
  422122:	cs jmp 0x4221a0
  422125:	fs sbb edi,esi
  422128:	sub    eax,0x7cfd6960
  42212d:	(bad)  
  42212e:	loop   0x4220b3
  422130:	mov    ch,BYTE PTR [bx+di-0x80]
  422134:	call   0xe1fa96c8
  422139:	loop   0x42212c
  42213b:	jmp    0x523d:0xfdead586
  422142:	inc    esp
  422143:	pop    ecx
  422144:	repnz dec ebp
  422146:	cli    
  422147:	add    eax,DWORD PTR [ebx]
  422149:	out    0xe9,al
  42214b:	add    al,0x35
  42214d:	jne    0x422110
  42214f:	xchg   DWORD PTR [eax-0x876331e],ebp
  422155:	outs   dx,DWORD PTR ds:[si]
  422157:	dec    edi
  422158:	lods   eax,DWORD PTR ds:[esi]
  422159:	push   ss
  42215a:	jmp    0xc7b6968f
  42215f:	(bad)  
  422160:	div    BYTE PTR [ebx-0x1c77ac07]
  422166:	lds    edx,FWORD PTR [ebx]
	...
  42217c:	and    bl,0xcd
  42217f:	adc    edi,DWORD PTR [eax-0x1d]
  422182:	lds    edx,FWORD PTR [ebx]
  422184:	pop    ebp
  422185:	rol    BYTE PTR [edx+0x154c69fd],1
  42218b:	mov    DWORD PTR [esi+0xc],ecx
  42218e:	mov    ?,esp
  422190:	fstp   TBYTE PTR [ebx+0x5a]
  422193:	add    esi,DWORD PTR [ebp-0x6ef78b71]
  422199:	mov    edi,0x8fb701d1
  42219e:	jmp    0xf589c99f
  4221a3:	inc    ebx
  4221a4:	mov    ch,0x60
  4221a6:	and    bl,BYTE PTR [ecx]
  4221a8:	cmc    
  4221a9:	into   
  4221aa:	outs   dx,BYTE PTR ds:[esi]
  4221ab:	out    0x7f,eax
  4221ad:	dec    esp
  4221ae:	add    DWORD PTR [esi],esi
  4221b0:	rol    BYTE PTR [edi+0x52b6a912],cl
  4221b6:	add    edx,DWORD PTR [ecx-0x77]
  4221b9:	iret   
  4221ba:	add    BYTE PTR [ecx-0x3e],ch
  4221bd:	aas    
  4221be:	fld    TBYTE PTR [edx-0x2e8a704a]
  4221c4:	mov    DWORD PTR [edx],ebp
  4221c6:	add    DWORD PTR [esi],esp
  4221c8:	je     0x422159
  4221ca:	push   ebx
  4221cb:	dec    bl
  4221cd:	xor    ecx,DWORD PTR [edi]
  4221cf:	test   eax,0x193e0fb6
  4221d4:	repz into 
  4221d6:	add    cl,ch
  4221d8:	inc    ebx
  4221d9:	test   eax,ebp
  4221db:	(bad)  
  4221dc:	shr    DWORD PTR [edx-0x4],0x6d
	...
  4221f4:	neg    bl
  4221f6:	adc    DWORD PTR [esi+0x2adb3bbb],esp
  4221fc:	mov    cl,0xdf
  4221fe:	xchg   DWORD PTR [eax],ebp
  422200:	mov    ecx,0x7899064d
  422205:	rol    BYTE PTR [eax],1
  422207:	call   0x555886f5
  42220c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42220d:	iret   
  42220e:	add    BYTE PTR [esi],bh
  422210:	das    
  422211:	shl    DWORD PTR [ebp*8-0x71fb2acb],cl
  422218:	xor    eax,0x3ee908ed
  42221d:	int    0xc
  42221f:	jae    0x42221b
  422221:	stos   DWORD PTR es:[edi],eax
  422222:	or     BYTE PTR [ecx-0x10],ah
  422225:	call   0xbf00:0x8f74a787
  42222c:	cmp    eax,0xb63fe976
  422231:	pop    DWORD PTR [eax]
  422233:	pop    edi
  422234:	repnz stos DWORD PTR es:[edi],eax
  422236:	or     al,ch
  422238:	stos   BYTE PTR es:[edi],al
  422239:	lea    edx,[edx+0x0]
  42223c:	test   ch,ah
  42223e:	inc    ebx
  42223f:	jmp    ebx
  422241:	pop    ss
  422242:	(bad)  
  422243:	pop    esi
  422244:	into   
  422245:	mov    es,WORD PTR [eax]
  422247:	push   ebp
  422248:	xchg   edi,eax
  422249:	jbe    0x4222c6
  42224b:	in     al,dx
  42224c:	push   esp
  42224d:	xchg   edx,eax
  42224e:	add    BYTE PTR [eax],al
  422250:	fisttp DWORD PTR [eax+ebp*4-0x7f6cb388]
  422257:	cmp    eax,0x0
	...
  42226c:	lods   al,BYTE PTR ds:[esi]
  42226d:	inc    esp
  42226e:	inc    ecx
  42226f:	add    ah,bl
  422271:	mov    ebx,0x92a3366f
  422276:	fld    QWORD PTR [ebx-0x34]
  422279:	mov    ebx,0x807815fd
  42227e:	inc    eax
  42227f:	add    BYTE PTR [eax+ebp*4-0x30],bl
  422283:	fimul  WORD PTR [edi-0x398aff75]
  422289:	jp     0x4222b1
  42228b:	inc    DWORD PTR [ebx-0x173f7f96]
  422291:	jl     0x422258
  422293:	add    eax,0x414948
  422298:	fcom   QWORD PTR [esi]
  42229a:	cmp    eax,DWORD PTR [eax]
  42229c:	pop    edx
  42229d:	nop
  42229e:	rcr    dh,1
  4222a0:	fisttp WORD PTR [ebx-0x7fdca905]
  4222a6:	lods   al,BYTE PTR ds:[esi]
  4222a7:	adc    cl,ah
  4222a9:	mov    eax,DWORD PTR [edi-0x7844bfbb]
  4222af:	test   esp,esp
  4222b1:	imul   edi,ebp,0x4f3bcff
  4222b7:	and    BYTE PTR [edx+edx*4+0x68],cl
  4222bb:	jmp    ebx
  4222bd:	mov    eax,DWORD PTR [eax]
  4222bf:	jmp    FWORD PTR [ecx-0x66]
  4222c2:	mov    ebp,0x924d74
  4222c7:	mov    DWORD PTR [ebp-0x37030bc5],esi
  4222cd:	int3   
  4222ce:	adc    DWORD PTR [eax+0x0],eax
	...
  4222e1:	add    BYTE PTR [eax],al
  4222e3:	add    BYTE PTR [ebp-0x398c3b0d],dh
  4222e9:	std    
  4222ea:	mov    BYTE PTR [edx-0x30861d3],al
  4222f0:	lahf   
  4222f1:	js     0x422343
  4222f3:	std    
  4222f4:	mov    al,ds:0xb5401228
  4222f9:	stc    
  4222fa:	ror    BYTE PTR [ebx],0x36
  4222fd:	mov    ebx,0x94f2fde0
  422302:	(bad)  
  422303:	pop    esp
  422304:	popa   
  422305:	dec    ecx
  422306:	cmp    DWORD PTR [edx-0x3089a27],0xffffffc4
  42230d:	ins    DWORD PTR es:[edi],dx
  42230e:	xchg   ecx,eax
  42230f:	mov    edi,0x220afd3
  422314:	cmp    eax,0xb9e909b6
  422319:	cs inc edx
  42231b:	or     esi,DWORD PTR [ecx+esi*8+0x56b3d380]
  422322:	mul    edi
  422324:	pop    esi
  422325:	js     0x422327
  422327:	add    BYTE PTR [esi],dh
  422329:	int    0xc
  42232b:	add    BYTE PTR ds:0xf88908b5,ch
  422331:	outs   dx,BYTE PTR ds:[esi]
  422332:	lea    eax,[ebp-0x4f]
  422335:	loope  0x4222f8
  422337:	(bad)  
  422338:	ja     0x4223a5
  42233a:	add    BYTE PTR [esi+0x2e],dl
  42233d:	or     BYTE PTR [edi+0x447f1afe],bh
  422343:	add    BYTE PTR [ebp-0x8],bl
  422346:	(bad)  
  422347:	inc    DWORD PTR [eax]
	...
  422359:	add    BYTE PTR [eax],al
  42235b:	add    BYTE PTR [ebp-0x247f3c7c],dh
  422361:	jb     0x42235a
  422363:	jae    0x42231b
  422365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422366:	add    al,0xc1
  422368:	mov    edx,0xae419b8f
  42236d:	xlat   BYTE PTR ds:[ebx]
  42236e:	aad    0x8
  422370:	in     eax,dx
  422371:	(bad)  
  422373:	xor    eax,0x5c050f5
  422378:	cmp    cl,0xd8
  42237b:	out    dx,al
  42237c:	mov    bh,0xa0
  42237e:	xor    BYTE PTR [edi+ecx*4-0x73],al
  422382:	pop    edi
  422383:	inc    ecx
  422384:	ror    ecx,0x41
  422387:	dec    esp
  422388:	or     ah,BYTE PTR [ebp-0x16]
  42238b:	push   ebp
  42238c:	jb     0x42234d
  42238e:	sbb    dl,BYTE PTR [eax]
  422390:	sar    DWORD PTR [ebp-0x57],1
  422393:	add    esp,DWORD PTR [esi+edx*2+0x16e9fb67]
  42239a:	lods   al,BYTE PTR ds:[esi]
  42239b:	push   DWORD PTR [ecx+0x35c629fa]
  4223a1:	out    0xe1,al
  4223a3:	add    ecx,DWORD PTR [ecx-0x74]
  4223a6:	mov    al,0x79
  4223a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223a9:	xchg   esp,eax
  4223aa:	jge    0x422370
  4223ac:	cmc    
  4223ad:	fs cmc 
  4223af:	jmp    0x422358
  4223b1:	iret   
  4223b2:	jmp    0x64da1c41
  4223b7:	les    esp,FWORD PTR [esi]
  4223b9:	mov    dl,0x1a
  4223bb:	push   esp
  4223bc:	mov    al,ds:0xf8e5dd
	...
  4223d1:	add    BYTE PTR [eax],al
  4223d3:	add    bh,al
  4223d5:	xchg   edi,eax
  4223d6:	fild   DWORD PTR [ebx-0x4b]
  4223d9:	or     ch,BYTE PTR [edx+0x2416b36f]
  4223df:	adc    al,0x45
  4223e1:	mov    fs,WORD PTR [esi-0x6d67ff07]
  4223e7:	punpckhwd mm7,QWORD PTR [edx+0x29]
  4223eb:	add    al,0x34
  4223ed:	in     eax,dx
  4223ee:	icebp  
  4223ef:	add    esp,DWORD PTR [edi-0xf7258b1]
  4223f5:	mov    eax,DWORD PTR [eax]
  4223f7:	push   0x51
  4223f9:	arpl   WORD PTR [ebp-0x29],si
  4223fc:	fcom   DWORD PTR [ecx+0x7bb26650]
  422402:	adc    ch,BYTE PTR [ecx-0x128c9d4a]
  422408:	sub    eax,0x76f73081
  42240d:	(bad)  
  42240e:	jg     0x4223c7
  422410:	and    ah,BYTE PTR [ebx-0x78]
  422413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422414:	scas   al,BYTE PTR es:[edi]
  422415:	adc    cl,al
  422417:	mov    ebp,0xd4fbbfc1
  42241c:	sbb    al,BYTE PTR [ecx-0x15c616c0]
  422422:	or     cl,ch
  422424:	icebp  
  422425:	rol    BYTE PTR [edi+0x4d783805],0xb7
  42242c:	cmp    DWORD PTR [edi+eiz*2-0x18],esi
  422430:	fstp   st(1)
  422432:	add    al,0xfe
  422434:	stos   DWORD PTR es:[edi],eax
  422435:	jnp    0x422449
  422437:	test   eax,0x0
	...
  42244c:	mov    dh,0x10
  42244e:	shl    DWORD PTR [ebp+eiz*2+0x16],0x3
  422453:	push   ebx
  422454:	cdq    
  422455:	sbb    BYTE PTR [esi-0x37],cl
  422458:	addr16 push ss
  42245a:	retf   
  42245b:	(bad)  
  42245c:	push   es
  42245d:	mov    WORD PTR [ebp+0x75752da9],es
  422463:	xor    bl,BYTE PTR [esi+edi*2-0x70092b34]
  42246a:	cmp    eax,0x8fd5fa
  42246f:	xor    al,0xc4
  422471:	not    DWORD PTR [eax]
  422473:	into   
  422474:	mov    dh,0x8f
  422476:	lea    esp,[eax*2-0x3ed3782d]
  42247d:	cmc    
  42247e:	and    DWORD PTR [ecx+0x8ef2],eax
  422484:	dec    esp
  422485:	loop   0x422442
  422487:	jne    0x4224f5
  422489:	popa   
  42248a:	aas    
  42248b:	mov    ah,0x7c
  42248d:	repz (bad) 
  42248f:	cmp    BYTE PTR [ecx-0x1ddf90a9],dl
  422495:	mov    eax,ds:0x276001b4
  42249a:	cmp    DWORD PTR [ebp+0x44],0x7bb2748f
  4224a1:	icebp  
  4224a2:	mov    eax,0x12ab01ff
  4224a7:	inc    eax
  4224a8:	or     al,0x9d
  4224aa:	rcr    BYTE PTR [esi-0x2b],0x4c
	...
  4224c2:	add    BYTE PTR [eax],al
  4224c4:	mov    WORD PTR [ebp-0xe240817],cs
  4224ca:	int3   
  4224cb:	jmp    0x422473
  4224cd:	ror    DWORD PTR [ecx+0x746a5dec],1
  4224d3:	add    esp,ebx
  4224d5:	mov    es,WORD PTR [edi-0x784147bb]
  4224db:	test   DWORD PTR [eax+ebp*2-0x3],esp
  4224df:	jmp    FWORD PTR [edi+esi*8]
  4224e2:	add    al,0x20
  4224e4:	fmul   QWORD PTR [esi-0x74240098]
  4224ea:	add    bh,bh
  4224ec:	popa   
  4224ed:	xchg   ebx,eax
  4224ee:	lds    eax,FWORD PTR [ebp-0x78]
  4224f1:	(bad)  
  4224f3:	call   FWORD PTR [ecx+ebx*2-0x317e1bf1]
  4224fa:	add    BYTE PTR [ebp-0x74f81fb4],al
  422500:	and    DWORD PTR [eax-0x2],eax
  422503:	call   FWORD PTR [ebx+0x73]
  422506:	sbb    BYTE PTR [eax],al
  422508:	mov    WORD PTR [esi+0x4e5e02e9],cs
  42250e:	ret    
  42250f:	ret    0x74b5
  422512:	add    BYTE PTR ds:0x744d3823,cl
  422518:	scas   eax,DWORD PTR es:[edi]
  422519:	mov    al,ds:0x38a60170
  42251e:	shr    BYTE PTR [ecx-0x56],0x80
  422522:	mov    edi,0xbf80b769
  422527:	inc    edi
	...
  42253c:	in     eax,dx
  42253d:	inc    esp
  42253e:	pop    es
  42253f:	or     DWORD PTR [ebp+0x5b],0xb8e7016c
  422546:	mov    edi,0xb4b5b7af
  42254b:	(bad)  
  42254c:	neg    DWORD PTR [eax-0x52]
  42254f:	aas    
  422550:	test   eax,0x7d0a6c20
  422555:	and    al,0xff
  422557:	xor    ch,dh
  422559:	mov    ah,0x66
  42255b:	sbb    al,0x5d
  42255d:	mov    ch,0x66
  42255f:	adc    BYTE PTR [ebp-0x4b],bl
  422562:	add    esi,DWORD PTR [ebp+0x744830b5]
  422568:	mov    ecx,0x6912ecf5
  42256d:	jne    0x42259e
  42256f:	shl    dh,0xfd
  422572:	adc    ebx,DWORD PTR [eax-0xa]
  422575:	or     eax,0xfaf65810
  42257a:	xchg   bl,ch
  42257c:	fnstsw WORD PTR fs:[ebp-0xcbf1319]
  422583:	cld    
  422584:	add    eax,0x20fd04cd
  422589:	outs   dx,DWORD PTR ds:[esi]
  42258a:	lea    eax,[edx-0x5f]
  42258d:	dec    edx
  42258e:	adc    DWORD PTR [eax-0x3d],edx
  422591:	mov    dh,0x4
  422593:	cmp    DWORD PTR [ecx+0x6b],0x87894289
  42259a:	repz jb 0x42254a
  42259d:	(bad)  
  42259e:	mov    ds:0x6d,al
	...
  4225b3:	add    BYTE PTR [ecx-0x34f80aa0],dh
  4225b9:	iret   
  4225ba:	jmp    0xa9c7a8ad
  4225bf:	inc    ebx
  4225c0:	jp     0x422610
  4225c2:	out    dx,al
  4225c3:	add    eax,DWORD PTR [esi]
  4225c5:	adc    eax,0x4a3c548e
  4225ca:	adc    BYTE PTR [edx+0x536b6149],0xcf
  4225d1:	(bad)  
  4225d2:	bound  esi,QWORD PTR [eax-0x53]
  4225d5:	push   ss
  4225d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225d7:	div    DWORD PTR [ecx]
  4225d9:	jnp    0x422594
  4225db:	or     eax,0xbf668f75
  4225e0:	scas   al,BYTE PTR es:[edi]
  4225e1:	adc    ch,BYTE PTR [ebp-0x4a9f9509]
  4225e7:	or     edx,DWORD PTR [eax]
  4225e9:	(bad)  
  4225eb:	mul    BYTE PTR [edi-0x4abc2a99]
  4225f1:	pop    eax
  4225f2:	inc    edx
  4225f3:	sbb    dh,ch
  4225f5:	iret   
  4225f6:	xor    cl,al
  4225f8:	mov    dh,0x8f
  4225fa:	adc    ch,BYTE PTR [edi-0x6f]
  4225fd:	mov    ecx,DWORD PTR [edx]
  4225ff:	jae    0x4225ae
  422601:	pusha  
  422602:	jp     0x422603
  422604:	fnstcw WORD PTR [edx-0x1b]
  422607:	or     eax,0xdafa8f75
  42260c:	lods   eax,DWORD PTR ds:[esi]
  42260d:	dec    edi
  42260e:	stos   BYTE PTR es:[edi],al
  42260f:	shl    DWORD PTR [esi-0x3176c371],0xc
  422616:	into   
  422617:	xor    al,0x0
	...
  422629:	add    BYTE PTR [eax],al
  42262b:	add    BYTE PTR [edx+edi*4],al
  42262e:	cmp    cl,BYTE PTR [ecx-0x134deb65]
  422634:	push   esi
  422635:	(bad)
  42263a:	ss cs pop ds
  42263d:	popf   
  42263e:	add    BYTE PTR [esi],dl
  422640:	cdq    
  422641:	cmp    dh,bh
  422643:	scas   al,BYTE PTR es:[edi]
  422644:	mov    BYTE PTR [ecx+eax*8],cl
  422647:	sbb    eax,0xeab392cf
  42264c:	xor    eax,0x6a1bff58
  422651:	not    BYTE PTR [eax]
  422653:	xor    DWORD PTR [edx+edx*4+0x2f],ecx
  422657:	mov    al,0x34
  422659:	pop    eax
  42265a:	adc    al,0xee
  42265c:	inc    ebx
  42265d:	and    DWORD PTR [esi-0x1ef0bfd8],ecx
  422663:	int    0xe6
  422665:	mov    esi,0x633adffb
  42266a:	push   ss
  42266b:	cmp    eax,0x6c00cfc2
  422670:	icebp  
  422671:	(bad)  [esi]
  422673:	(bad)  
  422674:	jmp    0xd462:0xb6a91653
  42267b:	add    ah,0xaa
  42267e:	add    cl,ch
  422680:	aas    
  422681:	int    0xfc
  422683:	repnz cmc 
  422685:	fisttp DWORD PTR [edx]
  422687:	adc    ecx,esp
  422689:	fs cld 
  42268b:	push   ds
  42268c:	call   0x59236d
	...
  4226a1:	add    BYTE PTR [eax],al
  4226a3:	add    BYTE PTR [edx-0x4956ed4d],bh
  4226a9:	(bad)  
  4226aa:	aam    0xc2
  4226ac:	cmc    
  4226ad:	fsubr  QWORD PTR [esi]
  4226af:	adc    bh,BYTE PTR [edi-0x6cfdfde1]
  4226b5:	pop    ecx
  4226b6:	inc    esi
  4226b7:	sbb    DWORD PTR [ecx+0x4be613dc],ebp
  4226bd:	xchg   edi,eax
  4226be:	lea    esp,[ecx+ecx*4]
  4226c1:	iret   
  4226c2:	xchg   DWORD PTR [edi*4+0x1ac110e9],ebp
  4226c9:	xchg   ecx,eax
  4226ca:	add    BYTE PTR [eax],al
  4226cc:	mov    esi,ds
  4226ce:	mov    ebx,0xd687974
  4226d3:	add    ecx,0x6f
  4226d6:	cld    
  4226d7:	jae    0x4226fe
  4226d9:	outs   dx,DWORD PTR fs:[esi]
  4226db:	in     al,0x53
  4226dd:	mov    gs,WORD PTR [esi+edx*1]
  4226e0:	pushf  
  4226e1:	xchg   ebx,eax
  4226e2:	shl    BYTE PTR cs:[ebx+0xec959c5],0x8b
  4226ea:	add    BYTE PTR [esi-0x19],dl
  4226ed:	bound  esi,QWORD PTR [ecx]
  4226ef:	rcr    ah,0xe4
  4226f2:	pop    es
  4226f3:	add    DWORD PTR [ebx-0x1e3f706c],ebp
  4226f9:	(bad)  
  4226fb:	sub    ebx,0x5d
  4226fe:	xchg   DWORD PTR [edi+0x1f],edi
  422701:	imul   ebp,eax,0xfffffffc
  422704:	and    DWORD PTR [ebx-0x80],0xffffffc0
	...
  42271c:	or     bh,dl
  42271e:	call   0xfda59846
  422723:	test   ah,bl
  422725:	out    dx,al
  422726:	inc    ecx
  422727:	jnp    0xf3aa8bc
  42272d:	out    dx,al
  42272e:	jmp    FWORD PTR [ecx-0x4]
  422731:	mov    edx,0x4a0f0ee9
  422736:	cmp    eax,0xc18f93eb
  42273c:	adc    ecx,0x86ac83fd
  422742:	push   eax
  422743:	push   ebx
  422744:	shr    ebx,cl
  422746:	add    al,0xff
  422748:	jmp    0xcc8239ff
  42274d:	fnstsw WORD PTR [ebx+0x7e13b575]
  422753:	or     eax,0x6a0dd79d
  422758:	mov    ch,0x5c
  42275a:	out    dx,eax
  42275b:	jne    0x422716
  42275d:	dec    ebp
  42275e:	sbb    bh,BYTE PTR [eax]
  422760:	ret    
  422761:	test   al,0x4
  422763:	xor    DWORD PTR [ebp-0x5d],0x8
  422767:	mov    al,0xb4
  422769:	push   ecx
  42276a:	pop    ss
  42276b:	std    
  42276c:	test   al,0xfc
  42276e:	sbb    DWORD PTR [eax-0x4b],eax
  422771:	loope  0x42275f
  422773:	out    0xc3,eax
  422775:	sti    
  422776:	out    dx,eax
  422777:	cld    
  422778:	add    al,BYTE PTR [esi]
  42277a:	sbb    ch,BYTE PTR [ebx+ecx*8]
  42277d:	test   al,0x4
  42277f:	xor    al,BYTE PTR [eax]
	...
  422791:	add    BYTE PTR [eax],al
  422793:	add    BYTE PTR [ebp-0x4b],dh
  422796:	dec    esi
  422797:	shr    eax,0xe1
  42279a:	loopne 0x42281a
  42279c:	pop    ecx
  42279d:	mov    eax,0x79b50004
  4227a2:	pop    edx
  4227a3:	jle    0x4227cd
  4227a5:	jmp    0x42281d
  4227a7:	std    
  4227a8:	xor    bh,BYTE PTR [ebp-0x2f7affa6]
  4227ae:	sbb    esi,0x427b68b4
  4227b4:	lods   eax,DWORD PTR ds:[esi]
  4227b5:	loop   0x4227fb
  4227b7:	or     al,0x36
  4227b9:	mov    ah,0x0
  4227bb:	call   0xfd31caba
  4227c0:	fwait
  4227c1:	out    dx,eax
  4227c2:	mov    DWORD PTR [ebx-0x6],esi
  4227c5:	mov    ah,0xef
  4227c7:	lds    edx,FWORD PTR [di+0x0]
  4227cb:	add    BYTE PTR ds:0xb5007938,ch
  4227d1:	nop
  4227d2:	inc    esi
  4227d3:	and    dl,bl
  4227d5:	xchg   esp,eax
  4227d6:	and    DWORD PTR [edx-0x37],0x67
  4227da:	jge    0x42281e
  4227dc:	int    0xd
  4227de:	jnp    0x422822
  4227e0:	mov    ebp,0xadbfc515
  4227e5:	(bad)  
  4227e6:	dec    ebx
  4227e7:	jge    0x422820
  4227e9:	out    0xda,al
  4227eb:	repnz test eax,0x2ffc2d09
  4227f1:	sti    
  4227f2:	push   ebp
  4227f3:	repz cdq 
  4227f5:	pop    ebp
  4227f6:	ror    BYTE PTR ds:0x0,cl
	...
  42280c:	nop
  42280d:	pop    ebp
  42280e:	mov    ebx,0xfce34a87
  422813:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422815:	dec    ebx
  422816:	aad    0x43
  422818:	mov    ch,0x9a
  42281a:	sub    DWORD PTR [ebx],ebp
  42281c:	mov    ch,0x8f
  42281e:	adc    al,0x25
  422820:	push   0xdf8491d3
  422825:	push   edi
  422826:	fidivr DWORD PTR [eax-0x4b]
  422829:	(bad)  
  42282a:	sti    
  42282b:	or     bh,BYTE PTR [eax-0x2d]
  42282e:	adc    DWORD PTR [ebx],0xf2e98f90
  422834:	mul    DWORD PTR [ebx+0x32]
  422837:	and    ebp,ebx
  422839:	(bad)
  42283d:	rcl    BYTE PTR [ebp+0x75],cl
  422840:	pop    edx
  422841:	mov    ds:0x51fa4e29,al
  422846:	out    0x3,al
  422848:	gs (bad) 
  42284a:	dec    esi
  42284b:	cli    
  42284c:	or     BYTE PTR [bp+0x54],cl
  422850:	pusha  
  422851:	or     BYTE PTR [ecx],ch
  422853:	fild   DWORD PTR [edx+ebx*2-0x2ccc0dd5]
  42285a:	and    eax,0x1287777e
  42285f:	retf   
  422860:	int    0x4f
  422862:	gs pop eax
  422864:	loope  0x422816
  422866:	daa    
  422867:	push   ebx
  422868:	fsub   st,st(2)
  42286a:	icebp  
  42286b:	repnz arpl WORD PTR [ebx+0x17fa],dx
	...
  422882:	add    BYTE PTR [eax],al
  422884:	mov    DWORD PTR [ebp+0x6b6a900],eax
  42288a:	stc    
  42288b:	push   0xffffffc7
  42288d:	pop    ebx
  42288e:	jne    0x42289a
  422890:	adc    edx,DWORD PTR [eax+0x5b0de966]
  422896:	push   ss
  422897:	loope  0x422855
  422899:	iret   
  42289a:	add    BYTE PTR [edi],dh
  42289c:	sti    
  42289d:	sub    eax,0xffffffe7
  4228a0:	cli    
  4228a1:	pop    edx
  4228a2:	cld    
  4228a3:	fs jno 0x422886
  4228a6:	adc    BYTE PTR [esi],bl
  4228a8:	add    BYTE PTR [ebp-0x17],ch
  4228ab:	jb     0x422838
  4228ad:	pop    ebx
  4228ae:	cld    
  4228af:	jb     0x42291a
  4228b1:	addr16 add ebx,edx
  4228b4:	jbe    0x42291d
  4228b6:	inc    esp
  4228b7:	ficomp DWORD PTR [edi+edi*4-0x7b]
  4228bb:	xchg   edi,eax
  4228bc:	fnstsw WORD PTR [edi+0x66]
  4228bf:	retf   0x67e5
  4228c2:	mov    esp,0x855b4482
  4228c7:	test   eax,0xa78784bd
  4228cc:	pop    eax
  4228cd:	stos   BYTE PTR es:[edi],al
  4228ce:	data16 icebp 
  4228d0:	sub    ecx,0x8125b5fe
  4228d6:	adc    al,0xff
  4228d8:	jbe    0x422869
  4228da:	push   ebx
  4228db:	dec    esi
  4228dc:	ret    0x129f
  4228df:	test   eax,0x3e1166b6
  4228e4:	mov    ds:0xa9164b,al
	...
  4228f9:	add    BYTE PTR [eax],al
  4228fb:	add    BYTE PTR [esi-0x509d26fa],dh
  422901:	jmp    0x5b399b07
  422906:	adc    DWORD PTR [edx-0xd37f1b],edi
  42290c:	jbe    0x42289d
  42290e:	das    
  42290f:	sub    DWORD PTR [eax-0x43],ebp
  422912:	pop    ebx
  422913:	add    BYTE PTR [ebp+0x26000055],al
  422919:	nop
  42291a:	std    
  42291b:	je     0x42290d
  42291d:	pop    ebx
  42291e:	std    
  42291f:	je     0x422911
  422921:	pop    ebx
  422922:	std    
  422923:	jno    0x4228c5
  422925:	pusha  
  422926:	nop    DWORD PTR [edx-0x6b3dff31]
  42292d:	(bad)  
  42292e:	dec    edi
  42292f:	mov    ebx,DWORD PTR [eax+0x14]
  422932:	call   0x55f7d863
  422937:	mov    esi,DWORD PTR [esp+ebx*8-0x16]
  42293b:	mov    esp,DWORD PTR [esi]
  42293d:	cmp    al,0x4c
  42293f:	mov    edx,DWORD PTR [edx+0x2a8b51b8]
  422945:	pusha  
  422946:	dec    esp
  422947:	add    al,0xd1
  422949:	dec    esi
  42294a:	jle    0x422952
  42294c:	dec    edi
  42294d:	inc    edi
  42294e:	sub    eax,edi
  422950:	aaa    
  422951:	stos   BYTE PTR es:[edi],al
  422952:	je     0x42299c
  422954:	cmp    eax,DWORD PTR [edx-0x6c63ea34]
  42295a:	aaa    
  42295b:	xor    esi,DWORD PTR [ebx-0x71]
  42295e:	add    BYTE PTR [ebp+0x0],dh
	...
  422971:	add    BYTE PTR [eax],al
  422973:	add    BYTE PTR [edx+0x1c7530bb],dl
  422979:	pop    DWORD PTR [edi-0x76411fbb]
  42297f:	inc    ebp
  422980:	adc    al,0xbd
  422982:	sbb    ebp,eax
  422984:	sbb    DWORD PTR [esi+0x4ea10000],ecx
  42298a:	outs   dx,DWORD PTR ds:[esi]
  42298b:	das    
  42298c:	ret    0xd4d1
  42298f:	and    BYTE PTR [eax-0x6e],al
  422992:	xor    eax,DWORD PTR [ebp-0x48]
  422995:	loope  0x4229bf
  422997:	mul    BYTE PTR [ecx]
  422999:	inc    ebx
  42299a:	sti    
  42299b:	jae    0x42296f
  42299d:	adc    esi,DWORD PTR [edi-0x28]
  4229a0:	mov    ch,0x68
  4229a2:	jae    0x4229c3
  4229a4:	xor    BYTE PTR [edx+0x6805ac70],cl
  4229aa:	push   ecx
  4229ab:	pop    esi
  4229ac:	outs   dx,BYTE PTR ds:[esi]
  4229ad:	lahf   
  4229ae:	lds    eax,FWORD PTR [ebx]
  4229b0:	mov    ch,0x10
  4229b2:	jae    0x4229d9
  4229b4:	mov    ch,0x68
  4229b6:	icebp  
  4229b7:	adc    ah,cl
  4229b9:	pop    edx
  4229ba:	inc    eax
  4229bb:	add    bh,ah
  4229bd:	sub    al,bl
  4229bf:	jmp    0xe922e566
  4229c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229c5:	dec    ecx
  4229c6:	jp     0x4229a0
  4229c8:	sahf   
  4229c9:	inc    esp
  4229ca:	pop    edx
  4229cb:	mov    DWORD PTR [ecx-0x72418889],ebx
  4229d1:	pop    esp
  4229d2:	in     al,dx
  4229d3:	cld    
  4229d4:	jp     0x4229c5
  4229d6:	dec    ecx
  4229d7:	cld    
	...
  4229ec:	ds stos DWORD PTR es:[edi],eax
  4229ee:	cld    
  4229ef:	hlt    
  4229f0:	lea    ecx,[ebp+0x5088ac4]
  4229f6:	and    dl,al
  4229f8:	add    eax,0xdf087a0a
  4229fd:	push   0xd9a572eb
  422a02:	jns    0x422a10
  422a04:	inc    edx
  422a05:	push   edi
  422a06:	add    al,0xfd
  422a08:	mov    al,ds:0xb5401668
  422a0d:	lahf   
  422a0e:	mov    esi,0x3eb50b
  422a13:	std    
  422a14:	test   eax,0xa1fd008c
  422a19:	xchg   esp,eax
  422a1a:	add    ch,bh
  422a1c:	test   BYTE PTR [ebx+ebp*8+0x12],ch
  422a20:	rol    DWORD PTR [edx+0x40],0x0
  422a24:	imul   DWORD PTR [edi+0x0]
  422a27:	push   ebx
  422a28:	cs pushf 
  422a2a:	jg     0x422a17
  422a2c:	mov    eax,ds:0x8055b68f
  422a31:	push   es
  422a32:	and    bh,BYTE PTR [ebx-0x2d]
  422a35:	add    eax,0x66edb30
  422a3a:	hlt    
  422a3b:	stos   DWORD PTR es:[edi],eax
  422a3c:	rcl    BYTE PTR [ecx+0x578c03e9],cl
  422a42:	jmp    0x422a81
  422a44:	clc    
  422a45:	mov    esi,0x59e87a96
  422a4a:	cwde   
  422a4b:	push   DWORD PTR [edi]
  422a4d:	push   eax
  422a4e:	fs push es
	...
  422a64:	mov    ah,0x37
  422a66:	paddsb mm1,QWORD PTR [ebp-0x67d5a257]
  422a6d:	sbb    DWORD PTR [ebp+0x48ff518],0x33
  422a74:	ror    BYTE PTR [edi+0x58ce78e9],1
  422a7a:	cmp    eax,0x95d32ffc
  422a7f:	push   ebx
  422a80:	cmp    al,0xd3
  422a82:	cmc    
  422a83:	pop    ecx
  422a84:	mov    bh,0x67
  422a86:	xor    eax,0x6c8fb504
  422a8b:	ret    
  422a8c:	out    0x77,eax
  422a8e:	xchg   ebx,eax
  422a8f:	dec    eax
  422a90:	imul   ecx,DWORD PTR [esi-0x2d7df703],0x12b2789d
  422a9a:	jae    0x422b0a
  422a9c:	add    eax,0x934ee920
  422aa1:	mov    ah,0x30
  422aa3:	shl    DWORD PTR [edx+0xdc4178f],0x63
  422aaa:	push   ebx
  422aab:	js     0x422aa6
  422aad:	pop    eax
  422aae:	cmc    
  422aaf:	pop    ds
  422ab0:	stos   DWORD PTR es:[edi],eax
  422ab1:	iret   
  422ab2:	jmp    0x29474691
  422ab7:	fisttp DWORD PTR [eax+0xb360154]
  422abd:	leave  
  422abe:	sti    
  422abf:	mov    ch,0x9a
  422ac1:	xchg   DWORD PTR [esi-0x17],esp
  422ac4:	fcmovnu st,st(4)
  422ac6:	and    al,0x1
	...
  422adc:	rcr    ah,cl
  422ade:	and    al,0xf1
  422ae0:	retf   
  422ae1:	jmp    0xcfef38ea
  422ae6:	adc    ch,BYTE PTR [ecx+0x6ac99eb6]
  422aec:	into   
  422aed:	pop    ebx
  422aee:	or     al,0x5c
  422af0:	test   BYTE PTR [esi+0xd],0xe9
  422af4:	or     eax,0x956aed07
  422af9:	test   BYTE PTR [edi+0x44],bh
  422afc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422afd:	pop    eax
  422afe:	dec    edi
  422aff:	ds mov ch,bl
  422b02:	or     BYTE PTR [edx-0x1e],ah
  422b05:	xchg   DWORD PTR [edx],edx
  422b07:	sub    DWORD PTR [ecx-0x20e8ca6],esi
  422b0d:	inc    eax
  422b0e:	cld    
  422b0f:	aas    
  422b10:	lods   eax,DWORD PTR ds:[esi]
  422b11:	pop    edx
  422b12:	aam    0x64
  422b14:	jns    0x422af2
  422b16:	or     BYTE PTR [edx+0x2c],ch
  422b19:	pop    ebx
  422b1a:	jmp    0x9b62:0x8fb970
  422b21:	xchg   DWORD PTR [eax-0xb3a3018],esi
  422b27:	ins    BYTE PTR es:[edi],dx
  422b28:	jl     0x422b06
  422b2a:	add    eax,0xfb57f270
  422b2f:	test   eax,0x60c12238
  422b34:	jp     0x422abd
  422b36:	sti    
  422b37:	fadd   st(6),st
  422b39:	add    al,0x46
  422b3b:	push   ebp
  422b3c:	jg     0x422acd
  422b3e:	push   eax
  422b3f:	push   esi
	...
  422b54:	mov    ds:0xa6f4fb87,al
  422b59:	mov    BYTE PTR [eax+0x0],al
  422b5c:	sbb    al,0xd7
  422b5e:	rol    DWORD PTR [ebp-0xe31f29],cl
  422b64:	cmp    DWORD PTR [eax-0x77],ebx
  422b67:	(bad)  
  422b68:	je     0x422b7c
  422b6a:	stc    
  422b6b:	call   DWORD PTR [ebx-0x1a8b43f9]
  422b71:	(bad)  
  422b72:	ds or  al,0x5
  422b75:	test   BYTE PTR [ebx+edx*8-0x49],dh
  422b79:	lods   eax,DWORD PTR ds:[esi]
  422b7a:	or     ebx,0x831736b3
  422b80:	mov    bh,0x8c
  422b82:	outs   dx,DWORD PTR ds:[esi]
  422b83:	or     DWORD PTR [ebx-0x601c0330],ecx
  422b89:	xchg   ebx,eax
  422b8a:	add    bl,ch
  422b8c:	mov    ds:0x8d02f912,eax
  422b91:	xchg   ebx,eax
  422b92:	add    BYTE PTR [ebp-0x75],dh
  422b95:	dec    esp
  422b96:	aas    
  422b97:	cld    
  422b98:	mov    al,0xac
  422b9a:	add    BYTE PTR [eax],al
  422b9c:	jae    0x422b7b
  422b9e:	adc    bh,bh
  422ba0:	retf   0xfd53
  422ba3:	jbe    0x422b2d
  422ba5:	fs aad 0x85
  422ba8:	sbb    al,0xdf
  422baa:	add    DWORD PTR [ebx+0x7d816427],eax
  422bb0:	inc    eax
  422bb1:	xchg   ebx,eax
  422bb2:	je     0x422bbd
  422bb4:	inc    ebx
  422bb5:	fdivp  st(4),st
  422bb7:	inc    DWORD PTR [eax]
	...
  422bc9:	add    BYTE PTR [eax],al
  422bcb:	add    BYTE PTR [ecx+0x77],cl
  422bce:	adc    al,BYTE PTR [eax+0x5c]
  422bd1:	les    ecx,FWORD PTR [ecx-0x3de5683d]
  422bd7:	or     al,0x4c
  422bd9:	mov    esi,0x369fec89
  422bde:	or     BYTE PTR [ebx],dh
  422be0:	fadd   st(2),st
  422be2:	push   eax
  422be3:	lea    edx,[ecx+0x5b]
  422be6:	dec    ebx
  422be7:	push   eax
  422be8:	mov    ch,0x18
  422bea:	pop    edx
  422beb:	or     al,0x40
  422bed:	sub    al,0xf4
  422bef:	dec    edi
  422bf0:	popf   
  422bf1:	add    BYTE PTR fs:[eax],al
  422bf4:	sbb    eax,0xf2087296
  422bf9:	and    esi,esp
  422bfb:	(bad)  
  422bfc:	repnz push 0xb070c500
  422c02:	(bad)  
  422c04:	mov    ch,0x68
  422c06:	lds    eax,FWORD PTR [edx-0x27]
  422c09:	lock adc BYTE PTR [eax],al
  422c0c:	mov    ch,0x85
  422c0e:	adc    bh,ah
  422c10:	mov    al,ds:0xddf50028
  422c15:	jno    0x422bd7
  422c17:	aas    
  422c18:	in     al,dx
  422c19:	stos   BYTE PTR es:[edi],al
  422c1a:	add    eax,DWORD PTR [eax]
  422c1c:	or     dl,dh
  422c1e:	fisttp DWORD PTR [esi+0x1f]
  422c21:	gs xor eax,eax
  422c24:	xor    BYTE PTR [ebx-0x670ab118],ah
  422c2a:	pop    edx
  422c2b:	push   es
  422c2c:	xchg   edx,eax
  422c2d:	mov    ebx,0x86fc
	...
  422c42:	add    BYTE PTR [eax],al
  422c44:	lock dec esp
  422c46:	call   0x4080d15d
  422c4b:	add    BYTE PTR [edx-0xa3ff400],al
  422c51:	das    
  422c52:	ret    
  422c53:	add    esi,DWORD PTR [ebp+0x7e315199]
  422c59:	sahf   
  422c5a:	inc    ebx
  422c5b:	sbb    BYTE PTR [eax-0x4abf38e8],0x68
  422c62:	dec    edi
  422c63:	jae    0x422be5
  422c65:	into   
  422c66:	add    al,0xdd
  422c68:	imul   BYTE PTR [eax+0x52]
  422c6b:	std    
  422c6c:	mov    al,ds:0xb54012c4
  422c71:	call   0x8f4dfc9f
  422c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c77:	add    esi,DWORD PTR [ebp+0xcdc00dc]
  422c7d:	pop    ebp
  422c7e:	push   ebx
  422c7f:	jmp    0x422cb7
  422c81:	dec    edi
  422c82:	(bad)  
  422c83:	adc    esi,eax
  422c85:	mov    ebx,DWORD PTR ds:0xb98f75ca
  422c8b:	jle    0x422c48
  422c8d:	(bad)  
  422c8e:	popa   
  422c8f:	or     DWORD PTR ds:0x8303a735,eax
  422c95:	push   esi
  422c96:	std    
  422c97:	xchg   edi,eax
  422c98:	(bad)  
  422c99:	iret   
  422c9a:	jmp    0xfdeda31c
  422c9f:	fisttp DWORD PTR [esi]
  422ca1:	pop    eax
  422ca2:	or     ebp,ebx
  422ca4:	cmp    eax,0x11cd9c
	...
  422cb9:	add    BYTE PTR [eax],al
  422cbb:	add    BYTE PTR [ebp-0x71],dh
  422cbe:	pop    DWORD PTR [ecx]
  422cc0:	sub    al,0x57
  422cc2:	xchg   edi,eax
  422cc3:	push   edx
  422cc4:	mov    al,0x3e
  422cc6:	adc    BYTE PTR [edi+ebx*1],0x92
  422cca:	cmp    bh,BYTE PTR [edi-0x66]
  422ccd:	push   ebp
  422cce:	mov    ah,0x7e
  422cd0:	mov    ds:0x6ead511,al
  422cd5:	mov    esp,DWORD PTR [esi-0x16]
  422cd8:	mov    ebx,ebx
  422cda:	out    0x35,eax
  422cdc:	pop    esp
  422cdd:	or     ebp,esi
  422cdf:	xor    esp,DWORD PTR [ebx+0x7050e9cf]
  422ce5:	ds adc ebp,ebx
  422ce8:	xor    BYTE PTR [ebp+0x512f4943],0x3f
  422cef:	(bad)  
  422cf0:	mov    dh,0x8f
  422cf2:	cmp    al,0x7f
  422cf4:	pop    esi
  422cf5:	adc    DWORD PTR [esi+0xf],edi
  422cf8:	in     al,0xa0
  422cfa:	sahf   
  422cfb:	push   ecx
  422cfc:	jge    0x422d70
  422cfe:	cdq    
  422cff:	leave  
  422d00:	cmc    
  422d01:	pop    DWORD PTR [eax]
  422d03:	cld    
  422d04:	in     eax,0x15
  422d06:	add    DWORD PTR [esi+0x66528f73],ecx
  422d0c:	lds    ebp,FWORD PTR [ebx]
  422d0e:	pop    gs
  422d10:	mov    dh,0x97
  422d12:	sbb    eax,0xcffc39
  422d17:	aam    0xb8
  422d19:	bound  edi,QWORD PTR [bx]
  422d1c:	andps  xmm0,XMMWORD PTR [ebp+0x29]
	...
  422d33:	add    BYTE PTR [edx+0x2ecc384],cl
  422d39:	xor    eax,DWORD PTR [eax-0x17]
  422d3c:	pushw  es
  422d3e:	inc    edx
  422d3f:	jmp    0x4012bf38
  422d44:	jae    0x422cd5
  422d46:	add    DWORD PTR [edi-0x4537e21],edi
  422d4c:	jbe    0x422cdd
  422d4e:	xchg   BYTE PTR [esi+edi*4-0x21149941],ch
  422d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d56:	stc    
  422d57:	neg    BYTE PTR [esp+eax*8+0x7dcad4fb]
  422d5e:	inc    eax
  422d5f:	jmp    0x6b3aff83
  422d64:	mov    DWORD PTR [ebx+0x76],edx
  422d67:	in     eax,dx
  422d68:	leave  
  422d69:	dec    edi
  422d6a:	call   0xfce435c0
  422d6f:	fdivr  st(6),st
  422d71:	(bad)  
  422d72:	push   ebx
  422d73:	sbb    ah,al
  422d75:	or     BYTE PTR [esi-0x4b],cl
  422d78:	push   es
  422d79:	mov    edi,0xc58d1c8d
  422d7e:	dec    edi
  422d7f:	cmp    cl,BYTE PTR [edx+edi*2]
  422d82:	add    cl,ch
  422d84:	sahf   
  422d85:	mov    edx,0x87fa6050
  422d8a:	mov    DWORD PTR [ebx*2-0x30ff2cad],ebp
  422d91:	arpl   bp,di
  422d93:	jne    0x422d24
  422d95:	bswap  sp
	...
  422dac:	adc    eax,edx
  422dae:	add    BYTE PTR ds:0xaefa,bh
  422db4:	add    DWORD PTR [esi-0x5d87ba77],ebx
  422dba:	shl    DWORD PTR [eax+edi*4+0x33],0xcb
  422dbf:	aas    
  422dc0:	jnp    0x422e28
  422dc2:	add    DWORD PTR [ebp+0x4],0xffffffa3
  422dc6:	shl    DWORD PTR [edi+ebp*4-0x46],0x51
  422dcb:	lea    esp,[ecx]
  422dcd:	ins    BYTE PTR es:[edi],dx
  422dce:	dec    esp
  422dcf:	jmp    DWORD PTR [ecx]
  422dd1:	ins    BYTE PTR es:[edi],dx
  422dd2:	std    
  422dd3:	jne    0x422db9
  422dd5:	mov    edx,0xe4bb5751
  422dda:	clc    
  422ddb:	call   DWORD PTR [edx-0x288b442c]
  422de1:	outs   dx,WORD PTR ds:[esi]
  422de3:	or     BYTE PTR [esp+ecx*2-0x274400c3],ah
  422dea:	push   esi
  422deb:	or     BYTE PTR [ebx-0x7e00071e],ch
  422df1:	lahf   
  422df2:	adc    al,BYTE PTR [eax-0x74]
  422df5:	aam    0x3e
  422df7:	or     bl,bl
  422df9:	lds    ebx,FWORD PTR [ecx-0x37]
  422dfc:	pop    esi
  422dfd:	push   ebx
  422dfe:	cld    
  422dff:	push   esp
  422e00:	pop    ss
  422e01:	cmp    eax,DWORD PTR [ecx+0x52bc88ec]
  422e07:	push   edi
  422e08:	jle    0x422e59
  422e0a:	in     al,0x8f
  422e0c:	and    al,0x68
  422e0e:	std    
  422e0f:	add    DWORD PTR [eax],0x0
	...
  422e22:	add    BYTE PTR [eax],al
  422e24:	icebp  
  422e25:	arpl   sp,di
  422e27:	mov    dh,BYTE PTR [eax+edx*2+0x3f]
  422e2b:	hlt    
  422e2c:	dec    esp
  422e2d:	push   edi
  422e2e:	cld    
  422e2f:	push   DWORD PTR [ebp-0x4a02c4de]
  422e35:	add    DWORD PTR [ebx-0xc],ebp
  422e38:	xor    BYTE PTR [eax+ebp*8-0x19],dl
  422e3c:	fwait
  422e3d:	adc    ecx,ebp
  422e3f:	cld    
  422e40:	ds pop esp
  422e42:	call   0x269f23ca
  422e47:	mov    edi,DWORD PTR [eax-0x4c]
  422e4a:	dec    edi
  422e4b:	push   ebp
  422e4c:	(bad)
  422e50:	mov    cx,0xec0a
  422e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e55:	sub    BYTE PTR [eax],al
  422e57:	mov    DWORD PTR ds:0x806ce9e6,eax
  422e5d:	(bad)  
  422e5e:	jmp    0xb6fd:0x62e8f242
  422e65:	push   ss
  422e66:	mov    edx,0xf7febae8
  422e6b:	pop    ebp
  422e6c:	xor    BYTE PTR [ebx+0x6b],bh
  422e6f:	or     BYTE PTR [edx-0x70],ch
  422e72:	pop    edx
  422e73:	cmp    eax,0xfd3481ca
  422e78:	imul   ecx,DWORD PTR [ecx+0x28a7240a],0x0
  422e7f:	mov    DWORD PTR [edx-0x7],edi
  422e82:	dec    ecx
  422e83:	pop    ecx
  422e84:	jl     0x422e2b
  422e86:	dec    edx
  422e87:	mov    DWORD PTR [eax],eax
	...
  422e99:	add    BYTE PTR [eax],al
  422e9b:	add    BYTE PTR [ecx-0x7ac57b69],dl
  422ea1:	adc    al,BYTE PTR [eax+0x0]
  422ea4:	mov    ch,0xb3
  422ea6:	sub    al,0x56
  422ea8:	dec    ebx
  422ea9:	push   0x72b540c3
  422eae:	jecxz  0x422ec2
  422eb0:	push   ecx
  422eb1:	ss inc eax
  422eb3:	add    BYTE PTR ds:0xf6ddd05b,dh
  422eb9:	push   0x8fbf7300
  422ebe:	xchg   ecx,eax
  422ebf:	mul    DWORD PTR [edi+0x52]
  422ec2:	fwait
  422ec3:	adc    BYTE PTR [edx],0xdb
  422ec6:	clc    
  422ec7:	mov    esi,0x43ac3bb7
  422ecc:	mov    ch,0xdf
  422ece:	outs   dx,BYTE PTR ds:[esi]
  422ecf:	inc    ebp
  422ed0:	mov    ch,0x49
  422ed2:	in     eax,0xd3
  422ed4:	adc    dh,cl
  422ed6:	jmp    0xd594b1df
  422edb:	xchg   edi,eax
  422edc:	(bad)  
  422edd:	iret   
  422ede:	jmp    0x5e0e5d28
  422ee3:	push   esp
  422ee4:	adc    ah,bl
  422ee6:	in     eax,0x7a
  422ee8:	ja     0x422e71
  422eea:	mov    edi,0x45cbf803
  422eef:	xor    al,0xb5
  422ef1:	(bad)
  422ef5:	push   edi
  422ef6:	xor    esp,edi
  422ef8:	jp     0x422f4c
  422efa:	mov    ch,0xfb
  422efc:	loope  0x422f79
  422efe:	or     DWORD PTR [ecx],edx
	...
  422f14:	jne    0x422ea5
  422f16:	les    eax,FWORD PTR fs:[esi+0x7d]
  422f1a:	sbb    DWORD PTR [edi-0x191630be],0x11028347
  422f24:	sar    DWORD PTR [ecx+ebp*4+0x3],1
  422f28:	out    0x4f,eax
  422f2a:	inc    DWORD PTR [ecx]
  422f2c:	gs (bad) 
  422f2e:	and    dl,al
  422f30:	mov    edx,0x8e7b3c8f
  422f35:	or     eax,0x901d4fce
  422f3a:	loope  0x422f3f
  422f3c:	mov    ch,0x67
  422f3e:	mov    BYTE PTR ds:0x40715180,ah
  422f44:	test   DWORD PTR [ebx],ecx
  422f46:	stos   BYTE PTR es:[edi],al
  422f47:	jo     0x422f09
  422f49:	in     eax,0x0
  422f4b:	loope  0x422fa0
  422f4d:	jle    0x422f7b
  422f4f:	xlat   BYTE PTR ds:[ebx]
  422f50:	test   BYTE PTR [edi+0x3979a92e],0x2
  422f57:	jmp    0x34c9ee12
  422f5c:	dec    ecx
  422f5d:	mov    al,ds:0x4f237c0
  422f62:	jle    0x422ee4
  422f64:	clc    
  422f65:	int    0xf8
  422f67:	jmp    0xe18237b8
  422f6c:	scas   eax,DWORD PTR es:[edi]
  422f6d:	aad    0xc
  422f6f:	pusha  
  422f70:	jne    0x422fa9
  422f72:	mov    BYTE PTR [esi+0x3d460a1e],ch
	...
  422f8c:	(bad)  
  422f8d:	int    0x14
  422f8f:	cs jne 0x422ffd
  422f92:	(bad)  
  422f93:	call   0x29c7bf4e
  422f98:	mov    al,BYTE PTR [ebp+0x4bd6a489]
  422f9e:	inc    esi
  422f9f:	dec    ebp
  422fa0:	mov    bh,0x8f
  422fa2:	add    cl,ch
  422fa4:	fcmovnu st,st(5)
  422fa6:	adc    BYTE PTR [edx+0x55],ch
  422fa9:	pop    ebx
  422faa:	add    DWORD PTR [ebx+0x314604b6],edx
  422fb0:	push   dx
  422fb2:	jbe    0x422fb9
  422fb4:	add    dh,cl
  422fb6:	sti    
  422fb7:	jmp    0xd852ad8f
  422fbc:	test   BYTE PTR [edi-0x704e14c3],0x0
  422fc3:	fisub  WORD PTR [edx]
  422fc5:	mov    eax,ds:0x66b6e901
  422fca:	add    esi,DWORD PTR [edx-0x6]
  422fcd:	xchg   DWORD PTR [edi-0x3ef272ac],eax
  422fd3:	push   ebp
  422fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fd5:	push   cs
  422fd6:	stc    
  422fd7:	add    BYTE PTR [ebp+0x5d2a7f5b],cl
  422fdd:	mov    WORD PTR [eax],es
  422fdf:	mov    ebp,DWORD PTR [ebx]
  422fe1:	aam    0x56
  422fe3:	call   0xec3618e9
  422fe8:	fs aad 0x76
  422feb:	call   0x7dc98eb7
	...
  423004:	and    al,0xd8
  423006:	lods   al,BYTE PTR ds:[esi]
  423008:	jl     0x423074
  42300a:	jbe    0x423014
  42300c:	xor    esp,ecx
  42300e:	add    al,0xff
  423010:	or     DWORD PTR [eax+0x16],edx
  423013:	inc    eax
  423014:	sbb    al,0xd1
  423016:	mov    ebx,0xfbab990f
  42301b:	dec    DWORD PTR [edx+eiz*2]
  42301e:	aas    
  42301f:	lods   al,BYTE PTR ds:[esi]
  423020:	sbb    eax,0x1c98805b
  423025:	mov    WORD PTR [eax],es
  423027:	mov    ebx,DWORD PTR [ecx+0x1c]
  42302a:	jg     0x422fec
  42302c:	add    edx,ecx
  42302e:	add    DWORD PTR [ecx],eax
  423030:	fmul   QWORD PTR [ebx-0x740bf977]
  423036:	or     BYTE PTR [eax],al
  423038:	int3   
  423039:	push   0x6f
  42303b:	lock addr16 sbb ebp,edi
  42303f:	push   eax
  423040:	fcom   st(4)
  423042:	ds in  al,dx
  423044:	pop    ecx
  423045:	dec    ebx
  423046:	je     0x4230b2
  423048:	push   edi
  423049:	cwde   
  42304a:	sbb    BYTE PTR [edi],cl
  42304c:	pop    eax
  42304d:	dec    esi
  42304e:	jg     0x423019
  423050:	sub    BYTE PTR [edx-0x20eefe77],ch
  423056:	in     al,dx
  423057:	push   edx
  423058:	xchg   ebx,eax
  423059:	mov    esi,0x6bf9fff0
  42305e:	push   esi
  42305f:	dec    esp
  423061:	pop    DWORD PTR [eax+eax*8-0x2f83ca4b]
	...
  42307c:	mov    ch,0x38
  42307e:	add    BYTE PTR [esi+ebx*2-0x4a5d84ba],al
  423085:	cmp    BYTE PTR [eax],al
  423087:	mov    eax,esi
  423089:	push   esp
  42308a:	jnp    0x42304b
  42308c:	jecxz  0x4230eb
  42308e:	fld    DWORD PTR [ebx]
  423090:	xor    DWORD PTR [edx+0x6b],edx
  423093:	sub    eax,0x8910a452
  423098:	loopne 0x4230c2
  42309a:	in     eax,0x72
  42309c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42309d:	mov    cl,0x32
  42309f:	call   0xfd2c0ff1
  4230a4:	xor    dh,BYTE PTR [ebp-0x23cef341]
  4230aa:	(bad)  
  4230ab:	push   DWORD PTR [ebp-0x4a98024f]
  4230b1:	inc    eax
  4230b2:	add    BYTE PTR [eax],al
  4230b4:	adc    ah,BYTE PTR [eax+esi*8-0x78]
  4230b8:	sti    
  4230b9:	in     eax,0x4f
  4230bb:	add    al,0x2c
  4230bd:	hlt    
  4230be:	rol    DWORD PTR [edx-0x7d75b00b],cl
  4230c4:	cmc    
  4230c5:	dec    edi
  4230c6:	repz cld 
  4230c8:	shl    BYTE PTR [edx+ecx*1+0x40],0xb5
  4230cd:	cmp    esi,DWORD PTR [ecx]
  4230cf:	and    eax,0x7e6b38b5
  4230d4:	retf   
  4230d5:	repz xchg ebx,eax
  4230d7:	pop    ds
  4230d8:	inc    ecx
  4230d9:	pop    eax
  4230da:	jns    0x42311e
  4230dc:	stc    
  4230dd:	mov    bl,0xbf
  4230df:	jb     0x4230e1
	...
  4230f1:	add    BYTE PTR [eax],al
  4230f3:	add    BYTE PTR [ebp+0x50],cl
  4230f6:	std    
  4230f7:	jb     0x4230c0
  4230f9:	sar    DWORD PTR [edx],0xe8
  4230fc:	pop    ds
  4230fd:	cmp    ch,ah
  4230ff:	outs   dx,DWORD PTR ds:[esi]
  423100:	mov    ecx,0xc3140e3d
  423105:	(bad)
  423109:	dec    edi
  42310a:	push   ebp
  42310b:	aas    
  42310c:	jae    0x4230a4
  42310e:	call   0xe98a3096
  423113:	pop    eax
  423114:	mov    bl,0xf
  423116:	inc    ebp
  423117:	fnsave [ebx-0x3e]
  42311a:	xor    ebx,esp
  42311c:	out    0x9f,eax
  42311e:	fs dec ecx
  423120:	jge    0x4230db
  423122:	jmp    0x8e06895a
  423127:	jecxz  0x4230d0
  423129:	lahf   
  42312a:	clc    
  42312b:	inc    ebx
  42312c:	mov    ch,0x8c
  42312e:	out    0x4,eax
  423130:	mov    ch,0x8f
  423132:	fimul  DWORD PTR [eax-0x1c7cb29c]
  423138:	stc    
  423139:	shl    DWORD PTR [ebp+0x50],cl
  42313c:	ror    BYTE PTR [edi+0x12d8eee9],1
  423142:	add    eax,0x88391af0
  423147:	pop    ss
  423148:	cli    
  423149:	adc    DWORD PTR [edx+0x6],esp
  42314c:	mov    eax,0x824d2924
  423151:	xor    BYTE PTR ds:0x668fb507,ch
  423157:	lds    eax,FWORD PTR [eax]
	...
  423169:	add    BYTE PTR [eax],al
  42316b:	add    BYTE PTR [eax-0x222852e8],bh
  423171:	xchg   edi,eax
  423172:	pusha  
  423173:	dec    ecx
  423174:	jmp    0x780c17b2
  423179:	dec    esi
  42317a:	jmp    0x12817961
  42317f:	in     eax,dx
  423180:	mov    cs,WORD PTR [esi+0x13]
  423183:	xchg   DWORD PTR [edi],edi
  423185:	inc    ebx
  423186:	jmp    0xb00c:0x7dea5b42
  42318d:	ret    
  42318e:	cmc    
  42318f:	loop   0x423158
  423191:	jnp    0x423193
  423193:	fcomip st,st(6)
  423195:	pop    DWORD PTR [esi-0x40a9685c]
  42319b:	std    
  42319c:	mov    dh,0xe5
  42319e:	push   ebx
  42319f:	jb     0x42320f
  4231a1:	adc    bh,ah
  4231a3:	pop    esp
  4231a4:	mov    cl,0x10
  4231a6:	fcom   DWORD PTR [ebp-0x65]
  4231a9:	lods   al,BYTE PTR ds:[esi]
  4231aa:	call   ecx
  4231ac:	int3   
  4231ad:	adc    al,bl
  4231af:	xor    eax,0xeb4418cf
  4231b4:	sub    eax,0x4efe750d
  4231b9:	retf   0xa63c
  4231bc:	push   edi
  4231bd:	sbb    cl,dh
  4231bf:	fs ins BYTE PTR es:[edi],dx
  4231c1:	shl    DWORD PTR [ecx+eax*1],0xa9
  4231c5:	rol    BYTE PTR [eax],0xe9
  4231c8:	jg     0x4231e0
  4231ca:	jge    0x423199
  4231cc:	sub    ah,bl
  4231ce:	call   0x4231e0
	...
  4231e3:	add    ah,al
  4231e5:	dec    edx
  4231e6:	cld    
  4231e7:	ins    DWORD PTR es:[edi],dx
  4231e8:	test   cl,0x6
  4231eb:	pop    ss
  4231ec:	or     DWORD PTR ds:0x7f17663d,ebx
  4231f2:	rcl    BYTE PTR [edx-0x2a],0x14
  4231f6:	xor    BYTE PTR [ecx-0x3ee8c947],bl
  4231fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231fd:	rol    BYTE PTR [eax],0xe9
  423200:	scas   eax,DWORD PTR es:[edi]
  423201:	dec    edx
  423202:	jne    0x423209
  423204:	in     eax,dx
  423205:	xor    al,0xd4
  423207:	in     al,0xd7
  423209:	dec    ebx
  42320a:	xchg   BYTE PTR [edx],dl
  42320c:	sub    BYTE PTR [ebp+0xc],dl
  42320f:	jl     0x423207
  423211:	dec    edx
  423212:	leave  
  423213:	retf   
  423214:	icebp  
  423215:	jmp    0x423271
  423217:	sub    edi,DWORD PTR [edx-0x359daa71]
  42321d:	paddsw mm0,QWORD PTR [eax]
  423220:	xchg   esp,eax
  423221:	adc    eax,0xb69c0c77
  423226:	xor    DWORD PTR [ebp-0x4a],0x18
  42322a:	aas    
  42322b:	in     al,dx
  42322c:	and    DWORD PTR [ebx-0x460bfa9a],ebx
  423232:	add    DWORD PTR [ebp+0x64],0xffffff83
  423236:	jmp    0x54872852
  42323b:	push   0x7c
  42323d:	das    
  42323e:	outs   dx,DWORD PTR ds:[esi]
  42323f:	or     al,0x2
  423241:	sbb    DWORD PTR [edi],edi
  423243:	call   0x512a0721
	...
  42325c:	je     0x42323e
  42325e:	cmp    al,0xff
  423260:	or     edi,DWORD PTR [ebp+0x3ba18d0f]
  423266:	dec    esp
  423267:	jmp    DWORD PTR [ecx+0x59b7e89b]
  42326d:	das    
  42326e:	std    
  42326f:	test   BYTE PTR [edi+eiz*8],cl
  423272:	pop    ss
  423273:	mov    ax,ds:0x1b137069
  423279:	daa    
  42327a:	(bad)  
  42327b:	push   eax
  42327c:	stos   DWORD PTR es:[edi],eax
  42327d:	in     al,0x10
  42327f:	jmp    DWORD PTR [ecx]
  423281:	cwde   
  423282:	call   0xfd713c26
  423287:	test   ah,bl
  423289:	out    0xff,eax
  42328b:	xor    cl,ah
  42328d:	shr    ecx,cl
  42328f:	add    bl,BYTE PTR [edi-0x173d3cad]
  423295:	(bad)  
  423296:	dec    edi
  423297:	mov    edi,DWORD PTR [eax+0x12]
  42329a:	call   0x80dd88cf
  42329f:	rcr    esp,0x17
  4232a2:	inc    edi
  4232a3:	lock inc esi
  4232a5:	(bad)  
  4232a7:	push   cs
  4232a8:	arpl   bx,dx
  4232aa:	add    dl,BYTE PTR [edi-0x4b]
  4232ad:	mov    edi,0x2b2d056a
  4232b2:	iret   
  4232b3:	push   esi
  4232b4:	stos   BYTE PTR es:[edi],al
  4232b5:	nop
  4232b6:	mov    al,dh
  4232b8:	pop    ds
  4232b9:	xor    cl,BYTE PTR [ebx-0x18b47a86]
  4232bf:	xchg   DWORD PTR [eax],eax
	...
  4232d1:	add    BYTE PTR [eax],al
  4232d3:	add    al,dh
  4232d5:	inc    esi
  4232d6:	lea    eax,[edx-0x43]
  4232d9:	mov    edi,0x7438f142
  4232de:	aam    0x4f
  4232e0:	xabort 0xe7
  4232e3:	sub    BYTE PTR [edx+0x75840037],0x42
  4232ea:	test   ah,ah
  4232ec:	mov    ch,0x38
  4232ee:	add    BYTE PTR [ebx+0x323528f8],cl
  4232f4:	jle    0x4232a6
  4232f6:	inc    edx
  4232f7:	clc    
  4232f8:	jp     0x423376
  4232fa:	aam    0xf
  4232fc:	mov    ch,0x38
  4232fe:	add    BYTE PTR [ecx-0x71df08],cl
  423304:	sub    al,0xf1
  423306:	mov    edi,0x4f3cb9e7
  42330b:	adc    BYTE PTR [edx+edi*1],0x88
  42330f:	inc    edx
  423310:	and    bh,BYTE PTR [ecx-0x718a142]
  423316:	jg     0x423392
  423318:	adc    ch,BYTE PTR [edi]
  42331a:	pop    edx
  42331b:	adc    BYTE PTR ds:0xb2b5e0f4,dh
  423321:	sub    bh,BYTE PTR [edi+0x412e8f96]
  423327:	cmc    
  423328:	bnd ret 
  42332a:	inc    ebp
  42332b:	xor    BYTE PTR [edx-0x9024b3e],bh
  423331:	mov    al,0xb
  423333:	xor    ch,BYTE PTR [edi]
  423335:	and    al,0xe1
  423337:	or     al,0x0
	...
  423349:	add    BYTE PTR [eax],al
  42334b:	add    BYTE PTR [ebx],cl
  42334d:	nop
  42334e:	cs loope 0x423346
  423351:	pop    ss
  423352:	not    BYTE PTR [edx]
  423354:	cmp    DWORD PTR [eax-0x62],edx
  423357:	or     ebp,DWORD PTR [eax-0x4974e0ff]
  42335d:	add    BYTE PTR [ebx],0xc4
  423360:	test   eax,0xefe001d4
  423365:	aas    
  423366:	jge    0x423317
  423368:	test   eax,0xb6c92701
  42336d:	jg     0x423382
  42336f:	mov    esi,edi
  423371:	xchg   edi,eax
  423372:	dec    edi
  423373:	push   es
  423374:	les    ebx,FWORD PTR [ebp+0x33]
  423377:	xlat   BYTE PTR ds:[ebx]
  423378:	or     DWORD PTR [ecx-0x59],0xe7562b0f
  42337f:	int    0x37
  423381:	pop    ebp
  423382:	xor    eax,0x3790780b
  423387:	pop    ecx
  423388:	mov    ch,0x8f
  42338a:	imul   eax,ebx,0x8b3836b4
  423390:	not    DWORD PTR [edi+0x5d84090f]
  423396:	xor    edx,edi
  423398:	inc    ecx
  423399:	adc    al,0xb8
  42339b:	pop    ecx
  42339c:	mov    ebp,0x9261e952
  4233a1:	vpminsw xmm5,xmm2,xmm3
  4233a5:	push   ss
  4233a6:	sub    eax,0xf48e4d0c
  4233ab:	or     bh,al
  4233ad:	(bad)  
  4233ae:	shr    BYTE PTR [ebp+0x0],1
	...
  4233c1:	add    BYTE PTR [eax],al
  4233c3:	add    BYTE PTR [ebx-0x493c9646],dl
  4233c9:	add    BYTE PTR ss:[edx-0x4c],ch
  4233cd:	jle    0x423406
  4233cf:	aas    
  4233d0:	call   0x67f4a116
  4233d5:	xchg   edi,eax
  4233d6:	and    al,BYTE PTR ds:0xce00bd50
  4233dc:	mov    dh,0x38
  4233de:	adc    eax,0x1977c37
  4233e3:	pushf  
  4233e4:	mov    esi,0x4d8f0254
  4233e9:	ret    
  4233ea:	add    BYTE PTR [edx],al
  4233ec:	mov    bl,0x54
  4233ee:	add    cl,BYTE PTR [edx+0x6900b523]
  4233f4:	jbe    0x423386
  4233f6:	or     esi,DWORD PTR [edi]
  4233f8:	jbe    0x42344d
  4233fa:	add    eax,0xc015b6b9
  4233ff:	xchg   edx,eax
  423400:	rcl    DWORD PTR [eax-0x41],cl
  423403:	in     eax,dx
  423404:	mov    dh,0xdc
  423406:	xchg   ebp,ecx
  423408:	aaa    
  423409:	xor    eax,0x14c23f51
  42340e:	inc    esi
  42340f:	shl    DWORD PTR [esi-0x741f26c9],0x4c
  423416:	test   DWORD PTR [ecx-0x6d4768f6],ebp
  42341c:	mov    bl,0x8f
  42341e:	add    BYTE PTR [edi-0x50],al
  423421:	int3   
  423422:	call   0x4656f341
  423427:	xchg   ecx,eax
	...
  42343c:	xchg   BYTE PTR [edx+0x16],cl
  42343f:	and    eax,0x81008947
  423444:	pop    esi
  423445:	sahf   
  423446:	sti    
  423447:	xchg   BYTE PTR [edi],dh
  423449:	scas   al,BYTE PTR es:[edi]
  42344a:	clc    
  42344b:	jmp    0x373f0281
  423450:	pop    edx
  423451:	mov    es,WORD PTR [eax]
  423453:	jmp    0xe94afa8f
  423458:	ret    
  423459:	mov    esp,0x8cfd5e08
  42345e:	adc    DWORD PTR [ecx+0x4e1136b6],ebp
  423464:	lea    edx,[edi-0x2f6ff05]
  42346a:	adc    DWORD PTR [eax-0x34],eax
  42346d:	outs   dx,DWORD PTR ds:[esi]
  42346e:	inc    BYTE PTR [eax]
  423470:	int3   
  423471:	mov    WORD PTR [edi+0x3e],gs
  423474:	push   edi
  423475:	xlat   BYTE PTR ds:[ebx]
  423476:	cld    
  423477:	xor    ecx,DWORD PTR [esi-0x33fc1bd5]
  42347d:	mov    ebp,?
  42347f:	icebp  
  423480:	push   ecx
  423481:	xlat   BYTE PTR ds:[ebx]
  423482:	call   0x525e7e14
  423487:	call   0x3f9ede
  42348c:	mov    ds:0xcc84fcd0,eax
  423491:	loopne 0x4234b0
  423493:	mov    ebp,DWORD PTR [ecx]
  423495:	cwde   
  423496:	mov    esi,ecx
  423498:	fs sbb al,0x25
  42349b:	add    BYTE PTR [edi+ecx*1+0xe4],cl
	...
  4234b2:	add    BYTE PTR [eax],al
  4234b4:	fmul   DWORD PTR [ebx+0x44]
  4234b7:	dec    eax
  4234b8:	or     BYTE PTR [eax+0xc7445fd],ah
  4234be:	ja     0x4234b8
  4234c0:	test   BYTE PTR [esi-0x11620000],cl
  4234c6:	xor    eax,eax
  4234c8:	ret    
  4234c9:	mov    ebx,eax
  4234cb:	ret    0x8c44
  4234ce:	mov    al,0x1
  4234d0:	daa    
  4234d1:	popa   
  4234d2:	lods   al,BYTE PTR ds:[esi]
  4234d3:	add    DWORD PTR [esi],ecx
  4234d5:	lahf   
  4234d6:	add    BYTE PTR [ebx-0x74f38828],cl
  4234dc:	loopne 0x423555
  4234de:	or     BYTE PTR [esi-0x59],dl
  4234e1:	out    0x24,eax
  4234e3:	or     BYTE PTR [ebx-0xc3f7e5f],ah
  4234e9:	jnp    0x42346c
  4234eb:	rol    DWORD PTR [ebx],0x34
  4234ee:	sub    bl,cl
  4234f0:	or     al,0x8c
  4234f2:	cmp    BYTE PTR [esi-0x4b],0x3a
  4234f6:	add    BYTE PTR [esi+0x68],bl
  4234f9:	xor    al,0xd5
  4234fb:	xlat   BYTE PTR ds:[ebx]
  4234fc:	imul   BYTE PTR [edx]
  4234fe:	mov    ebx,ebp
  423500:	test   BYTE PTR [edi],ah
  423502:	xchg   DWORD PTR [edx-0x23],eax
  423505:	mov    dl,0x43
  423507:	clc    
  423508:	gs dec esi
  42350a:	inc    ecx
  42350b:	cdq    
  42350c:	je     0x423544
  42350e:	push   0x36b4d9
  423513:	std    
  423514:	inc    eax
  423515:	xor    al,dh
  423517:	inc    edx
	...
  42352c:	mov    cl,0x38
  42352e:	fnsave [edx-0x43]
  423531:	mov    al,ds:0x38b4cf01
  423536:	add    ebx,0x7be6fc1
  42353c:	mov    ch,0x1b
  42353e:	mov    ebx,ebp
  423540:	ds je  0x423553
  423543:	adc    DWORD PTR [ecx+0x75813191],0xb0553609
  42354d:	sbb    bh,bh
  42354f:	push   DWORD PTR [ebp-0x4a1e7ac3]
  423555:	cmp    BYTE PTR [eax],al
  423557:	mov    eax,esi
  423559:	xor    BYTE PTR [ecx-0x72d4641],al
  42355f:	dec    edi
  423560:	cmp    al,0x74
  423562:	fsub   st,st(7)
  423564:	jbe    0x423568
  423566:	add    BYTE PTR [eax],al
  423568:	in     eax,0x1d
  42356a:	repz push ebx
  42356c:	retf   
  42356d:	js     0x423573
  42356f:	xor    ecx,0xb2bf833c
  423575:	lods   al,BYTE PTR ds:[esi]
  423576:	pushf  
  423577:	call   FWORD PTR [edx]
  423579:	cmp    eax,ebp
  42357b:	xchg   edi,eax
  42357c:	cmp    BYTE PTR gs:[eax],al
  42357f:	xchg   DWORD PTR [eax-0x71],esi
  423582:	popa   
  423583:	mov    ?,WORD PTR [edi+0x33]
  423586:	pop    ss
  423587:	(bad)  
  423588:	push   0x18
  42358a:	fst    st(3)
  42358c:	fidiv  DWORD PTR [esi-0x4d]
  42358f:	fadd   QWORD PTR [eax]
	...
  4235a1:	add    BYTE PTR [eax],al
  4235a3:	add    cl,ch
  4235a5:	sbb    BYTE PTR [ebp-0x4ab26221],ch
  4235ab:	pop    es
  4235ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235ad:	inc    esi
  4235ae:	aas    
  4235af:	push   edi
  4235b0:	cmp    al,0xc5
  4235b2:	cmp    eax,0x979bc980
  4235b7:	add    BYTE PTR [edi-0x65],cl
  4235ba:	mov    edx,0xc3bdbb18
  4235bf:	mov    cs,WORD PTR [edx]
  4235c1:	xchg   edi,eax
  4235c2:	jg     0x4235bb
  4235c4:	test   eax,0xa02ffdbc
  4235c9:	pushf  
  4235ca:	xchg   ebp,eax
  4235cb:	cmc    
  4235cc:	fimul  DWORD PTR [edi+0xcbec766]
  4235d2:	sub    dl,BYTE PTR [edi-0x42]
  4235d5:	int    0x68
  4235d7:	(bad)  
  4235d8:	pop    ebp
  4235d9:	nop
  4235da:	jmp    0x5880f1e2
  4235df:	out    0x5d,al
  4235e1:	call   0x3e9:0x908dd240
  4235e8:	mov    ah,0xbc
  4235ea:	mov    ebp,0x9782ca51
  4235ef:	adc    DWORD PTR [ecx-0x45],0x43f78ef8
  4235f6:	les    esi,FWORD PTR [bp+0x220f]
  4235fb:	add    BYTE PTR [esp+edx*1-0x1c5627e6],dh
  423602:	pop    esi
  423603:	or     al,0x36
  423605:	pop    eax
  423606:	(bad)  
  423607:	cmc    
	...
  42361c:	jmp    0x4235f2
  42361e:	adc    DWORD PTR [edx-0x52],0xf114011a
  423625:	jbe    0x423600
  423627:	push   0xc28dc5ea
  42362c:	mov    dh,0xc0
  42362e:	inc    esp
  42362f:	stos   DWORD PTR es:[edi],eax
  423630:	mov    ch,0x68
  423632:	add    ch,cl
  423634:	mov    dh,0x88
  423636:	rcr    ebx,cl
  423638:	and    eax,0x23d0dc17
  42363d:	addr16 add ch,cl
  423640:	mov    dh,0x1a
  423642:	mov    BYTE PTR [edx],dl
  423644:	mov    eax,0x645c008f
  423649:	inc    ebx
  42364a:	jmp    0xfc86d524
  42364f:	gs icebp 
  423651:	rcr    BYTE PTR [ecx],0x16
  423654:	add    al,0x44
  423656:	jmp    0xfc84ff66
  42365b:	je     0x423661
  42365d:	inc    eax
  42365e:	jmp    0xfc8523e1
  423663:	mov    ebx,0x925ae476
  423668:	jns    0x4236b9
  42366a:	or     eax,0xfcd233e9
  42366f:	ins    BYTE PTR es:[edi],dx
  423670:	stos   BYTE PTR es:[edi],al
  423671:	mov    es,WORD PTR [ebx+0x41]
  423674:	xor    al,BYTE PTR [esi-0x4]
  423677:	jmp    0xc694c654
  42367c:	gs aad 0x12
  42367f:	sub    DWORD PTR [eax],eax
	...
  423691:	add    BYTE PTR [eax],al
  423693:	add    BYTE PTR [ecx+0x492cb292],dh
  423699:	adc    ch,al
  42369b:	frstor [edi+0x5d]
  42369e:	sbb    BYTE PTR [ecx-0x58072f65],ch
  4236a4:	hlt    
  4236a5:	xchg   edi,eax
  4236a6:	add    BYTE PTR [eax+0x74],ah
  4236a9:	mov    eax,DWORD PTR [edi-0x42042dc]
  4236af:	add    BYTE PTR [ecx],ah
  4236b1:	cdq    
  4236b2:	bound  ecx,QWORD PTR [ecx-0x397e6d2e]
  4236b8:	pop    ss
  4236b9:	jg     0x4236b8
  4236bb:	adc    eax,0x3c41a8
  4236c0:	pop    DWORD PTR [eax+ecx*1]
  4236c3:	sbb    DWORD PTR [ebx-0x75],0x72
  4236c7:	cmp    eax,0xc9c774
  4236cc:	fcom   QWORD PTR ds:0x7f43fc6f
  4236d2:	call   0xfdabd150
  4236d7:	or     DWORD PTR [ebx-0xad689cc],0x69
  4236de:	fld    DWORD PTR [ecx]
  4236e0:	int3   
  4236e1:	nop
  4236e2:	data16 adc al,0x9b
  4236e5:	fcomip st,st(4)
  4236e7:	lea    esp,[eax]
  4236e9:	mov    ds:0x69bbfe34,al
  4236ee:	dec    esp
  4236ef:	inc    DWORD PTR [ecx-0x73bfed8c]
  4236f5:	or     eax,0xcc0
	...
  42370a:	add    BYTE PTR [eax],al
  42370c:	and    DWORD PTR [ecx+0xd],edx
  42370f:	xchg   ebp,eax
  423710:	fbstp  TBYTE PTR [edx+0x630c5f14]
  423716:	sti    
  423717:	je     0x4236a1
  423719:	outs   dx,DWORD PTR ds:[si]
  42371b:	cld    
  42371c:	xlat   BYTE PTR ds:[ebx]
  42371d:	dec    esi
  42371e:	in     al,0x37
  423720:	mov    eax,ds:0x148afd66
  423725:	outs   dx,WORD PTR ds:[esi]
  423727:	cld    
  423728:	test   BYTE PTR [eax+0xc0bff38],ch
  42372e:	outs   dx,DWORD PTR ds:[esi]
  42372f:	lock je 0x423733
  423732:	dec    eax
  423733:	call   FWORD PTR [ebx]
  423735:	adc    eax,0x667ee9c1
  42373a:	std    
  42373b:	push   DWORD PTR [ebp+0x36eb8d83]
  423741:	ret    0x50f4
  423744:	mov    esp,DWORD PTR [ebp-0x59e6bd7d]
  42374a:	in     al,dx
  42374b:	ret    
  42374c:	imul   edi,DWORD PTR [ebp-0x50f27727],0xad38f453
  423756:	dec    ebx
  423757:	add    al,0xc7
  423759:	jbe    0x423748
  42375b:	imul   edi,DWORD PTR [esi],0x7088d463
  423761:	inc    esi
  423762:	xor    dl,BYTE PTR [ebp-0x33]
  423765:	leave  
  423766:	sar    esp,cl
  423768:	fidivr DWORD PTR [eax+0x394703d6]
  42376e:	outs   dx,BYTE PTR ds:[esi]
  42376f:	add    al,0x0
	...
  423781:	add    BYTE PTR [eax],al
  423783:	add    BYTE PTR [ebx+0x6c],ch
  423786:	cmp    edx,DWORD PTR [ecx]
  423788:	mov    ch,0xb3
  42378a:	into   
  42378b:	jae    0x4237fe
  42378d:	mov    bl,0x41
  42378f:	or     DWORD PTR [esp+esi*8],edi
  423792:	xlat   BYTE PTR ds:[ebx]
  423793:	xchg   BYTE PTR [eax],ah
  423795:	xchg   ebp,eax
  423796:	or     DWORD PTR [ebp+0x4a8d3ffa],esi
  42379c:	test   eax,0x8d72d928
  4237a1:	verw   WORD PTR [edx-0x4d]
  4237a5:	nop
  4237a6:	aaa    
  4237a7:	or     eax,0xef8d38b5
  4237ac:	xor    BYTE PTR [ebx+0x4c],bl
  4237af:	sbb    al,0x3e
  4237b1:	je     0x4237bf
  4237b3:	mov    DWORD PTR [ebp+0x43e7b9ad],ebp
  4237b9:	jp     0x4237ba
  4237bb:	push   DWORD PTR [ecx]
  4237bd:	stc    
  4237be:	dec    ebx
  4237bf:	add    al,0x7b
  4237c1:	je     0x4237b8
  4237c3:	(bad)  
  4237c4:	push   edx
  4237c5:	imul   dl
  4237c7:	inc    BYTE PTR [edx-0x70]
  4237ca:	outs   dx,BYTE PTR ds:[esi]
  4237cb:	push   esi
  4237cc:	inc    ecx
  4237cd:	inc    ebx
  4237ce:	sub    eax,0x3b4ca7d8
  4237d3:	in     al,dx
  4237d4:	push   esi
  4237d5:	jnp    0x423761
  4237d7:	fsubr  DWORD PTR [ecx*8-0x1984c72a]
  4237de:	mov    al,0xc5
  4237e0:	mov    esi,0x1e8d1c8f
  4237e5:	loope  0x4237ff
  4237e7:	xor    eax,0x0
	...
  4237fc:	sub    al,0xe6
  4237fe:	stc    
  4237ff:	xor    DWORD PTR [edi+edi*1],ebp
  423802:	push   ebx
  423803:	mov    ecx,0x456539cd
  423808:	ret    
  423809:	outs   dx,BYTE PTR ds:[esi]
  42380a:	pop    ecx
  42380b:	and    DWORD PTR [eax-0x72],0xfffffff7
  42380f:	xor    BYTE PTR [esi+edx*2],ch
  423812:	jmp    0x423883
  423814:	ja     0x42385d
  423816:	inc    edx
  423817:	push   0xffffffae
  423819:	(bad)
  42381d:	dec    eax
  42381e:	ficom  DWORD PTR [ecx+esi*4+0x7d]
  423822:	sub    esp,ebp
  423824:	das    
  423825:	or     eax,0x70b64e2f
  42382a:	lods   al,BYTE PTR ds:[esi]
  42382b:	xlat   BYTE PTR ds:[ebx]
  42382c:	lea    ecx,[ecx+0x18cec466]
  423832:	popf   
  423833:	xlat   BYTE PTR ds:[ebx]
  423834:	cmp    eax,0xae4a0255
  423839:	(bad)
  42383d:	inc    esp
  42383e:	repz mov es,WORD PTR [edx+0x5aeca316]
  423845:	into   
  423846:	rcl    bh,cl
  423848:	aaa    
  423849:	dec    edi
  42384a:	dec    esp
  42384b:	mov    cl,0xe2
  42384d:	(bad)
  423851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423852:	outs   dx,BYTE PTR ds:[esi]
  423853:	inc    ecx
  423854:	mov    ebp,0x3fe90116
  423859:	sbb    cl,BYTE PTR [ebp+0x538fb6e8]
  42385f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  423874:	in     al,0x43
  423876:	jmp    0xfc85135f
  42387b:	ins    DWORD PTR es:[edi],dx
  42387c:	icebp  
  42387d:	mov    ebp,0x47848eb3
  423882:	push   esp
  423883:	xchg   BYTE PTR [ebx+eax*2+0x42ec25e9],al
  42388a:	cld    
  42388b:	imul   ebp,DWORD PTR [edi+eax*2+0x2],0x4315a2f4
  423893:	call   0xfcb73b12
  423898:	mov    ds:0x3557644,eax
  42389d:	dec    edx
  42389e:	or     al,0x97
  4238a0:	stc    
  4238a1:	ror    DWORD PTR [ebp+0xbd1daaf],1
  4238a7:	ja     0x42383c
  4238a9:	nop
  4238aa:	push   eax
  4238ab:	bound  esi,QWORD PTR [edi+edx*4-0x5]
  4238af:	stc    
  4238b0:	into   
  4238b1:	xchg   ebx,eax
  4238b2:	push   eax
  4238b3:	call   0xbe44386e
  4238b8:	call   0xb56e02a3
  4238bd:	(bad)  
  4238be:	push   ebp
  4238bf:	bound  ecx,QWORD PTR [ebp-0x49de133e]
  4238c5:	pop    DWORD PTR [eax]
  4238c7:	call   0xd14e:0xac8ddae0
  4238ce:	call   0xfc850042
  4238d3:	jb     0x42393b
  4238d5:	cmp    bl,0x70
	...
  4238ec:	add    eax,0x5de3864
  4238f1:	mov    ebp,DWORD PTR [esi]
  4238f3:	test   eax,0x46951
  4238f8:	dec    esp
  4238f9:	lea    ecx,[ecx-0x2259eba3]
  4238ff:	je     0x423953
  423901:	push   ss
  423902:	shr    eax,0x93
  423905:	xchg   ecx,eax
  423906:	std    
  423907:	inc    ebp
  423909:	iret   
  42390a:	loopne 0x423947
  42390c:	pop    ebx
  42390d:	loopne 0x423917
  42390f:	push   esi
  423910:	xor    al,0xf0
  423912:	xor    eax,0xd83633ff
  423917:	mov    DWORD PTR [ecx+0x1dfb80ff],esi
  42391d:	sar    DWORD PTR [eax],cl
  42391f:	(bad)  
  423920:	fst    DWORD PTR [ebx]
  423922:	dec    esp
  423923:	call   0x3fb4e1
  423928:	mov    BYTE PTR [eax+esi*2+0x2b],cl
  42392c:	xchg   edi,eax
  42392d:	clc    
  42392e:	jne    0x423957
  423930:	pop    edi
  423931:	add    cl,BYTE PTR ds:0x3f17e86a
  423937:	cwde   
  423938:	cmp    bh,BYTE PTR [ebp-0x3]
  42393b:	adc    eax,0x3c3328
  423940:	pop    edi
  423941:	add    BYTE PTR [eax],cl
  423943:	test   DWORD PTR [eax+edx*8+0x24d4707],ecx
  42394a:	fld    DWORD PTR [ecx]
  42394c:	pushf  
  42394d:	mov    WORD PTR [ecx],?
  42394f:	sti    
	...
  423964:	dec    esi
  423965:	sub    ebp,ecx
  423967:	add    edx,DWORD PTR ds:0x9a33d4e8
  42396d:	jae    0x4239d7
  42396f:	int3   
  423970:	pushf  
  423971:	mov    WORD PTR [eax],es
  423973:	push   esi
  423974:	adc    DWORD PTR [eax],edx
  423976:	pop    eax
  423977:	call   DWORD PTR [ebx-0x4f011ba6]
  42397d:	mov    eax,DWORD PTR [eax]
  42397f:	lea    ebx,[eax+0x47]
  423982:	add    DWORD PTR [ebp-0x4b],0xffffffee
  423986:	add    eax,eax
  423988:	jnp    0x423935
  42398a:	xor    edi,ebp
  42398c:	pop    edx
  42398d:	dec    ecx
  42398e:	add    esi,eax
  423990:	clc    
  423991:	dec    ebp
  423992:	add    eax,0x87eaf087
  423997:	jb     0x4239e6
  423999:	cmp    eax,0xb5330cbe
  42399e:	add    DWORD PTR [eax],eax
  4239a0:	mov    ch,0x1d
  4239a2:	add    cl,BYTE PTR [ecx+0x4289fe88]
  4239a8:	or     DWORD PTR ds:0x24e6e83b,esi
  4239ae:	into   
  4239af:	lock (bad) 
  4239b1:	mul    BYTE PTR [esi+0x6]
  4239b4:	xchg   ebx,eax
  4239b5:	scas   eax,DWORD PTR es:[edi]
  4239b6:	cmp    ebp,DWORD PTR [esp+ebx*2+0x6ae53e3]
  4239bd:	sbb    eax,0xe43ea95b
  4239c2:	test   BYTE PTR ds:0x37,0x0
	...
  4239dc:	mov    dh,0x5b
  4239de:	mov    ah,0x86
  4239e0:	add    BYTE PTR [edx-0x767c4afb],0x87
  4239e7:	jb     0x4239ce
  4239e9:	dec    edi
  4239ea:	jnp    0x4239b2
  4239ec:	mov    dl,0xab
  4239ee:	lods   al,BYTE PTR ds:[esi]
  4239ef:	(bad)  
  4239f0:	mov    edx,0x3375e35
  4239f5:	xor    BYTE PTR ds:0x294b83,al
  4239fb:	add    BYTE PTR [esi],ch
  4239fd:	hlt    
  4239fe:	fbstp  TBYTE PTR [edi]
  423a00:	test   eax,0xa830558
  423a05:	sub    eax,DWORD PTR [eax]
  423a07:	add    BYTE PTR [esi],dh
  423a09:	or     al,0xcc
  423a0b:	(bad)  
  423a0c:	js     0x423a43
  423a0e:	lock (bad) 
  423a10:	sub    DWORD PTR [eax+0x2802e82c],edx
  423a16:	push   esp
  423a17:	xor    ch,BYTE PTR [eax+0x3f]
  423a1a:	pop    edi
  423a1b:	mov    ebx,0x66565b37
  423a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a21:	add    DWORD PTR ds:[edi+0x61],edx
  423a25:	(bad)  
  423a26:	dec    eax
  423a27:	xor    DWORD PTR [eax-0x71],0xd594e60
  423a2e:	aaa    
  423a2f:	add    eax,0x4ea2a3cf
  423a34:	sbb    esi,esp
  423a36:	call   0x3404:0x29a586ee
  423a3d:	push   esp
  423a3e:	fidivr WORD PTR [esi+0x0]
	...
  423a51:	add    BYTE PTR [eax],al
  423a53:	add    BYTE PTR [edx-0x3c],bl
  423a56:	repz cmp al,0x92
  423a59:	push   ebp
  423a5a:	lahf   
  423a5b:	add    dh,BYTE PTR [ebp+0x1156ae8f]
  423a61:	ret    0xe888
  423a64:	shr    DWORD PTR [eax+0x3ef3b862],0xea
  423a6b:	add    ah,ch
  423a6d:	jp     0x423abd
  423a6f:	push   ecx
  423a70:	retf   0xa50a
  423a73:	out    0x53,eax
  423a75:	dec    edi
  423a76:	pop    ds
  423a77:	add    dh,BYTE PTR [ebp+0x3fc0e68f]
  423a7d:	(bad)  
  423a7e:	lar    esi,WORD PTR [ebp+0xbeb928f]
  423a85:	xchg   BYTE PTR [edx],ah
  423a87:	aam    0x9d
  423a89:	xchg   ecx,eax
  423a8a:	xlat   BYTE PTR ds:[ebx]
  423a8b:	ret    
  423a8c:	ss dec edi
  423a8e:	sahf   
  423a8f:	pop    es
  423a90:	mov    al,ds:0xf787fdcc
  423a95:	sub    edx,DWORD PTR [edi-0x51dfd15]
  423a9b:	shl    ebp,cl
  423a9d:	daa    
  423a9e:	add    DWORD PTR [edi+0x5cfc3cb3],ebx
  423aa4:	jmp    0x423ae9
  423aa6:	jmp    0xfc7eeb85
  423aab:	rcr    BYTE PTR [ebp+edi*1-0x4],1
  423aaf:	jmp    0x1b2b0c97
  423ab4:	and    eax,DWORD PTR [ebx+0x76]
  423ab7:	mov    cl,0x0
	...
  423ac9:	add    BYTE PTR [eax],al
  423acb:	add    dl,al
  423acd:	pusha  
  423ace:	jo     0x423adf
  423ad0:	fist   WORD PTR [edx]
  423ad2:	retf   0x3ae6
  423ad5:	dec    esi
  423ad6:	add    ch,cl
  423ad8:	mov    dh,0xa9
  423ada:	inc    BYTE PTR [eax-0x61]
  423add:	push   ss
  423ade:	inc    esi
  423adf:	dec    ebp
  423ae0:	mov    dh,0x5
  423ae2:	inc    ebx
  423ae3:	ror    DWORD PTR [eax+ecx*1-0x17339b5],0xe1
  423aeb:	icebp  
  423aec:	pushf  
  423aed:	mov    cl,al
  423aef:	pop    es
  423af0:	mov    cl,dl
  423af2:	stos   BYTE PTR es:[edi],al
  423af3:	outs   dx,DWORD PTR fs:[esi]
  423af5:	jo     0x423b5d
  423af7:	in     eax,0xc6
  423af9:	or     al,BYTE PTR [esi-0x67]
  423afc:	adc    ch,BYTE PTR [edx+eiz*2+0x6a]
  423b00:	xchg   DWORD PTR [esi+0x1e3ae600],eax
  423b06:	add    ch,cl
  423b08:	mov    dh,0xa9
  423b0a:	adc    esp,DWORD PTR [ecx-0x72b9e9a4]
  423b10:	mov    dh,0x5
  423b12:	inc    ebx
  423b13:	repz dec esp
  423b15:	or     BYTE PTR [ebx-0x10],cl
  423b18:	dec    esp
  423b19:	(bad)  
  423b1a:	loope  0x423b0d
  423b1c:	sbb    al,0x87
  423b1e:	rol    DWORD PTR [edi+0x64aad229],0xef
  423b25:	je     0x423b8d
  423b27:	stc    
  423b28:	out    0x8,al
  423b2a:	inc    esi
  423b2b:	add    al,dl
  423b2d:	cmp    ebp,0x15
	...
  423b44:	pop    eax
  423b45:	aaa    
  423b46:	cmp    al,0x0
  423b48:	fwait
  423b49:	sbb    bh,BYTE PTR [edi]
  423b4b:	lods   al,BYTE PTR ds:[esi]
  423b4c:	cmovs  ecx,DWORD PTR [eax]
  423b4f:	push   0x5d
  423b51:	pop    ecx
  423b52:	mov    ah,0xed
  423b54:	mov    esp,DWORD PTR [edx+0xd]
  423b57:	mov    dh,0xc
  423b59:	add    DWORD PTR [edi-0x2b2a77b],0xc2fe64ff
  423b63:	add    BYTE PTR [esi+edi*4+0x3e],bl
  423b67:	or     BYTE PTR [ebx],cl
  423b69:	mov    eax,ds:0xdb5b4e87
  423b6e:	add    DWORD PTR [ebx-0x57],ebx
  423b71:	pop    ds
  423b72:	sub    ah,bh
  423b74:	dec    ebx
  423b75:	bound  eax,QWORD PTR [ebx+0x1459304d]
  423b7b:	retf   0x910c
  423b7e:	std    
  423b7f:	jne    0x423b6d
  423b81:	(bad)  
  423b83:	lods   al,BYTE PTR ds:[esi]
  423b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b85:	stos   DWORD PTR es:[edi],eax
  423b86:	cmp    DWORD PTR [eax],eax
  423b88:	or     al,0xbe
  423b8a:	int3   
  423b8b:	call   0x3f6d5c
  423b90:	pusha  
  423b91:	push   eax
  423b92:	jo     0x423bd0
  423b94:	mov    edx,edi
  423b96:	adc    BYTE PTR [edi+0xd6bc],bh
  423b9c:	and    ebx,ebx
  423b9e:	sub    al,0x58
  423ba0:	dec    ecx
  423ba1:	mov    bh,0x57
  423ba3:	dec    DWORD PTR [ebx+0x8d8761]
	...
  423bb9:	add    BYTE PTR [eax],al
  423bbb:	add    BYTE PTR [eax+0x74fffd5f],bh
  423bc1:	retf   
  423bc2:	jmp    0x423bc3
  423bc4:	fist   DWORD PTR [esp+edi*4]
  423bc7:	je     0x423b80
  423bc9:	pusha  
  423bca:	outs   dx,DWORD PTR ds:[esi]
  423bcb:	adc    BYTE PTR [ebp+0x2e0c40b1],dh
  423bd1:	daa    
  423bd2:	aaa    
  423bd3:	mov    ebp,DWORD PTR [eax]
  423bd5:	(bad)  
  423bd6:	int3   
  423bd7:	cld    
  423bd8:	mov    bl,BYTE PTR [eax]
  423bda:	iret   
  423bdb:	dec    edi
  423bdc:	mov    ecx,0x300cbfaa
  423be1:	sub    BYTE PTR ds:0x53c1b500,al
  423be7:	hlt    
  423be8:	mov    dh,0xe3
  423bea:	in     al,0x7f
  423bec:	mov    ds:0x81830126,eax
  423bf1:	add    BYTE PTR es:[eax],al
  423bf4:	pop    ebp
  423bf5:	add    bl,dh
  423bf7:	cld    
  423bf8:	dec    edx
  423bf9:	mov    dl,0xc4
  423bfb:	or     al,0x39
  423bfd:	in     eax,dx
  423bfe:	add    al,0x0
  423c00:	mov    ch,0xdb
  423c02:	inc    ebx
  423c03:	lock out 0xf5,al
  423c06:	xor    al,0xc6
  423c08:	mov    bl,0x27
  423c0a:	ja     0x423c86
  423c0c:	sub    DWORD PTR [esi],ecx
  423c0e:	mov    al,0x4f
  423c10:	sbb    cl,BYTE PTR ds:0xf5ced77e
  423c16:	pop    eax
  423c17:	outs   dx,DWORD PTR ds:[esi]
  423c18:	int3   
  423c19:	cmp    edx,eax
  423c1b:	jne    0x423bb8
  423c1d:	mov    cl,0xd5
  423c1f:	imul   eax,DWORD PTR [eax],0x0
	...
  423c31:	add    BYTE PTR [eax],al
  423c33:	add    BYTE PTR [ecx+0x40e453ad],ah
  423c39:	in     al,dx
  423c3a:	add    BYTE PTR [eax-0x16],dl
  423c3d:	inc    edx
  423c3e:	xor    al,0x16
  423c40:	jne    0x423c68
  423c42:	test   ebx,eax
  423c44:	test   eax,0xc373c4b3
  423c49:	in     eax,dx
  423c4a:	jle    0x423c11
  423c4c:	out    dx,al
  423c4d:	add    BYTE PTR es:[eax],al
  423c50:	jle    0x423c55
  423c52:	shl    BYTE PTR [ecx-0x25],1
  423c55:	rol    BYTE PTR [esi+edi*8-0x5],1
  423c59:	(bad)  
  423c5a:	icebp  
  423c5b:	sub    DWORD PTR [eax],0xffffff88
  423c5e:	out    0x59,al
  423c60:	shr    DWORD PTR [eax+0x3b9bad12],cl
  423c66:	jmp    0xa255:0xfe778c04
  423c6d:	push   es
  423c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c6f:	rcr    DWORD PTR [ebx],cl
  423c71:	push   eax
  423c72:	lsl    esi,WORD PTR [ebp+0x3fc4e68f]
  423c79:	or     edi,DWORD PTR [edi+0x328fb502]
  423c7f:	fdivr  QWORD PTR [ebx+0x4dd0d284]
  423c85:	mov    ss,WORD PTR [edi]
  423c87:	les    esi,FWORD PTR [esi]
  423c89:	push   eax
  423c8a:	ds add eax,0x7cb9cd48
  423c90:	idiv   DWORD PTR [edi]
  423c92:	pop    ss
  423c93:	fcom   QWORD PTR [edx]
  423c95:	loopne 0x423c41
  423c97:	rol    BYTE PTR [eax],1
	...
  423ca9:	add    BYTE PTR [eax],al
  423cab:	add    BYTE PTR [ebp+0x28145427],al
  423cb1:	cmp    ebp,DWORD PTR [ebp+0x56]
  423cb4:	sub    DWORD PTR [eax],ebp
  423cb6:	pop    ds
  423cb7:	cmp    al,0x18
  423cb9:	cmp    esp,DWORD PTR [edi+0x66]
  423cbc:	or     DWORD PTR [eax-0x1fc2b98c],edx
  423cc2:	xchg   ecx,eax
  423cc3:	pop    edi
  423cc4:	outs   dx,BYTE PTR ds:[esi]
  423cc5:	cmp    dh,BYTE PTR [ebx-0x79]
  423cc8:	cmp    al,ah
  423cca:	retf   
  423ccb:	pop    ebp
  423ccc:	leave  
  423ccd:	cmp    bl,ch
  423ccf:	out    0x3f,eax
  423cd1:	aad    0x81
  423cd3:	xor    esp,eax
  423cd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cd6:	mov    ebp,0x668f9af9
  423cdb:	(bad)  
  423cdc:	mov    esi,0xbd562a14
  423ce1:	(bad)  
  423ce3:	imul   ecx,ebp,0xe5a000ca
  423ce9:	cmp    ecx,DWORD PTR [esi+0x15328ab4]
  423cef:	mov    cl,0x85
  423cf1:	cmp    ecx,DWORD PTR [esi-0x3c43dac]
  423cf7:	push   ss
  423cf8:	jle    0x423cf4
  423cfa:	enter  0xb6e9,0x3c
  423cfe:	inc    esi
  423cff:	adc    DWORD PTR [ecx],ecx
  423d01:	into   
  423d02:	call   0xc8e38c9
  423d07:	imul   ebx,DWORD PTR [edi-0x731103ca],0xffffffed
  423d0e:	add    cl,ch
	...
  423d24:	mov    dh,0x6
  423d26:	inc    esi
  423d27:	stc    
  423d28:	(bad)  
  423d29:	pop    eax
  423d2a:	push   ecx
  423d2b:	pusha  
  423d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d2d:	mov    ebp,eax
  423d2f:	mov    edi,0x70fc3c92
  423d34:	cld    
  423d35:	xchg   DWORD PTR [edi],esi
  423d37:	stos   BYTE PTR es:[edi],al
  423d38:	fst    st(2)
  423d3a:	cmp    DWORD PTR [ecx+eax*2],edx
  423d3d:	les    edi,FWORD PTR [esp+ebx*2]
  423d40:	or     DWORD PTR [edi+eax*4-0x725c7067],0x27
  423d48:	and    ah,bl
  423d4a:	push   eax
  423d4b:	xchg   esi,eax
  423d4c:	sbb    al,0xde
  423d4e:	adc    ch,BYTE PTR [ecx]
  423d50:	mov    ecx,0x3df5c510
  423d55:	cli    
  423d56:	je     0x423d47
  423d58:	ja     0x423d14
  423d5a:	ret    0xb092
  423d5d:	pop    DWORD PTR [eax]
  423d5f:	mov    dl,0xa5
  423d61:	lahf   
  423d62:	outs   dx,BYTE PTR ds:[esi]
  423d63:	dec    ecx
  423d64:	push   cs
  423d65:	popf   
  423d66:	sbb    bh,0xde
  423d69:	cmp    DWORD PTR [eax-0x1a],esi
  423d6c:	jmp    0x423d2a
  423d6e:	or     BYTE PTR [edx+0x7c],ah
  423d71:	lahf   
  423d72:	ret    0x1a00
  423d75:	ss cld 
  423d77:	out    0x72,eax
  423d79:	jp     0x423d78
  423d7b:	inc    DWORD PTR [ebx-0x1117f728]
  423d81:	popf   
  423d82:	std    
  423d83:	jmp    DWORD PTR [ecx]
  423d85:	xlat   BYTE PTR ds:[ebx]
  423d86:	or     al,0xe8
	...
  423d9c:	adc    edx,ecx
  423d9e:	std    
  423d9f:	push   DWORD PTR [esi]
  423da1:	jno    0x423d2a
  423da3:	inc    ebp
  423da4:	adc    al,0xd6
  423da6:	add    BYTE PTR [eax-0x4d],dl
  423da9:	ss dec esp
  423dab:	push   ss
  423dac:	dec    esp
  423dad:	lea    ecx,[ecx-0x3ff363bb]
  423db3:	or     al,0xdf
  423db5:	push   ebx
  423db6:	or     eax,0x877d686a
  423dbb:	inc    ebp
  423dbc:	xor    al,0x7d
  423dbe:	std    
  423dbf:	adc    eax,0x3c4190
  423dc4:	fist   WORD PTR [eax+0x8]
  423dc7:	lea    ebx,[ecx+0x21e84bbb]
  423dcd:	jns    0x423dcc
  423dcf:	call   ecx
  423dd1:	pop    ss
  423dd2:	sub    ah,bh
  423dd4:	arpl   WORD PTR [edx-0x3a],cx
  423dd7:	inc    ebp
  423dd8:	push   edi
  423dd9:	xchg   esp,eax
  423dda:	call   0xcfa1e6
  423ddf:	(bad)  
  423de0:	mov    ecx,0xeea3e3ff
  423de5:	dec    ecx
  423de6:	std    
  423de7:	dec    DWORD PTR [ecx]
  423de9:	sub    eax,0x4a3e9be4
  423dee:	std    
  423def:	mov    cl,cl
  423df1:	inc    esp
  423df2:	pop    ebp
  423df3:	pop    esi
  423df4:	(bad)  
  423df5:	cli    
  423df6:	ror    DWORD PTR [esp+ebx*8],0x77
  423dfa:	mov    esp,ebp
  423dfc:	pop    ds
  423dfd:	or     BYTE PTR [ecx+0xc6],0x0
	...
  423e14:	mov    ch,0xce
  423e16:	push   ebp
  423e17:	add    BYTE PTR [ebp-0x4ee927da],dh
  423e1d:	add    BYTE PTR es:[ecx],dh
  423e20:	ficom  WORD PTR ds:0xfbba512f
  423e26:	out    dx,eax
  423e27:	mov    BYTE PTR [ebp+0x5112cb21],ch
  423e2d:	cmp    eax,DWORD PTR [eax+0x0]
  423e30:	or     al,al
  423e32:	add    eax,0xcb5512e8
  423e37:	cld    
  423e38:	int3   
  423e39:	sub    BYTE PTR [ecx+0x4],bl
  423e3c:	(bad)  
  423e3d:	data16 (bad) 
  423e3f:	dec    ecx
  423e40:	inc    edx
  423e41:	xchg   BYTE PTR [edx],dh
  423e43:	inc    eax
  423e44:	mov    ch,0x69
  423e46:	dec    eax
  423e47:	adc    BYTE PTR [ecx-0x20ffffda],bh
  423e4d:	sub    bh,BYTE PTR [ebx+0x44]
  423e50:	mov    ecx,0x5a34cd76
  423e55:	cwde   
  423e56:	int    0x12
  423e58:	or     DWORD PTR [ebx+0x40],eax
  423e5b:	add    BYTE PTR [esi],dh
  423e5d:	jmp    0x57333b5e
  423e62:	push   ebx
  423e63:	call   0x198d44e
  423e68:	xchg   BYTE PTR [ebp-0xe468d33],dl
  423e6e:	push   ebx
  423e6f:	or     BYTE PTR [edx],ah
  423e71:	pusha  
  423e72:	int    0x12
  423e74:	icebp  
  423e75:	cmp    al,BYTE PTR [eax+0x0]
	...
  423e8c:	cmp    al,0x70
  423e8e:	or     BYTE PTR [ecx],bh
  423e90:	idiv   BYTE PTR [edx]
  423e92:	test   DWORD PTR [eax-0x8e205],0xb3d925fa
  423e9c:	and    eax,0x88592d27
  423ea1:	(bad)  
  423ea2:	daa    
  423ea3:	add    BYTE PTR [ebp-0x35874d1f],dh
  423ea9:	es pop es
  423eab:	add    al,0xb5
  423ead:	(bad)  
  423eae:	pop    esi
  423eaf:	inc    esi
  423eb0:	mov    cl,0x4
  423eb2:	add    eax,0xe9cfa7a4
  423eb7:	xchg   dl,bh
  423eb9:	ret    0x33ea
  423ebc:	mov    al,0x5f
  423ebe:	addr16 data16 mov cl,0x8f
  423ec2:	outs   dx,BYTE PTR ds:[esi]
  423ec3:	push   es
  423ec4:	ss push eax
  423ec6:	xchg   esi,eax
  423ec7:	add    eax,0x813b3705
  423ecc:	fmul   DWORD PTR [edi+0xb742daa]
  423ed2:	lods   al,BYTE PTR ds:[esi]
  423ed3:	sti    
  423ed4:	aaa    
  423ed5:	push   eax
  423ed6:	jbe    0x423ed0
  423ed8:	jmp    0xe9cf:0xc7a3dd36
  423edf:	adc    al,0x87
  423ee2:	jmp    0xce4d46a7
  423ee7:	or     BYTE PTR [esi-0x68],0xe8
  423eeb:	add    esi,DWORD PTR [ebp+0x7b33e2]
	...
  423f01:	add    BYTE PTR [eax],al
  423f03:	add    bh,dh
  423f05:	xor    esp,DWORD PTR [edi+0x66]
  423f08:	inc    ecx
  423f09:	xchg   edx,eax
  423f0a:	adc    bh,BYTE PTR [ecx+0x4b]
  423f0d:	sti    
  423f0e:	jmp    0x364dfddf
  423f13:	pop    es
  423f14:	ins    BYTE PTR es:[edi],dx
  423f15:	nop
  423f16:	mov    ds:0xe5e8393f,al
  423f1b:	push   edi
  423f1c:	mov    bl,0x10
  423f1e:	lahf   
  423f1f:	add    esi,DWORD PTR [ebp+0x1e8cea0f]
  423f25:	mov    edi,0x914d0429
  423f2a:	hlt    
  423f2b:	push   es
  423f2c:	cmp    BYTE PTR [ecx+eax*1],dh
  423f2f:	(bad)  
  423f30:	jbe    0x423ec1
  423f32:	call   0xfc763875
  423f37:	shl    DWORD PTR [esi-0xe7e9720],cl
  423f3d:	iret   
  423f3e:	add    bl,al
  423f40:	mov    dh,0xa7
  423f42:	enter  0x76d1,0x8f
  423f46:	sti    
  423f47:	mov    esp,0xb7fbdbbe
  423f4c:	mov    dl,0x34
  423f4e:	push   ss
  423f4f:	jns    0x423efc
  423f51:	jbe    0x423f53
  423f53:	pusha  
  423f54:	lock xchg DWORD PTR [ebp-0xded5ed7],eax
  423f5b:	jmp    0xeda8cf16
  423f60:	adc    ecx,edx
  423f62:	or     BYTE PTR [eax+0x2e50caec],bh
	...
  423f7c:	sti    
  423f7d:	xchg   DWORD PTR [ecx],eax
  423f7f:	jmp    0xdd3dcf3a
  423f84:	dec    edx
  423f85:	mov    eax,ds:0x48ee940
  423f8a:	(bad)  
  423f8c:	outs   dx,BYTE PTR ds:[esi]
  423f8d:	pop    es
  423f8e:	lea    esp,ds:[esi+esi*2+0x0]
  423f93:	xchg   edx,eax
  423f94:	mov    ecx,0xbd89008f
  423f99:	mov    esi,DWORD PTR [ebp-0xc]
  423f9c:	pop    esi
  423f9d:	hlt    
  423f9e:	push   cs
  423f9f:	mov    esi,0xe6c1126e
  423fa4:	mov    dl,0x11
  423fa6:	add    ecx,ebp
  423fa8:	mov    dh,0xa
  423faa:	inc    esi
  423fab:	icebp  
  423fac:	out    0xa,al
  423fae:	xchg   BYTE PTR [eax+0x39fc32ef],ah
  423fb4:	not    al
  423fb6:	or     cl,ch
  423fb8:	mov    cl,0x8f
  423fba:	add    BYTE PTR [eax],al
  423fbc:	cmp    eax,DWORD PTR [eax-0x58]
  423fbf:	adc    ecx,esp
  423fc1:	mov    edi,DWORD PTR [edi-0x40]
  423fc4:	icebp  
  423fc5:	sar    BYTE PTR [eax+0x91dcff],cl
  423fcb:	cmp    DWORD PTR [ecx],edx
  423fcd:	cmp    cl,BYTE PTR ds:0xc63a1142
  423fd3:	test   cl,ah
  423fd5:	inc    edx
  423fd6:	(bad)  
  423fd7:	(bad)  
  423fd8:	jnp    0x423f65
  423fda:	xchg   DWORD PTR [ebp-0x2b68b],eax
	...
  423ff4:	sbb    al,0x49
  423ff6:	pcmpeqb mm1,QWORD PTR [esi+0x518900d1]
  423ffd:	cmp    DWORD PTR [edi-0x40],edi
  424000:	inc    eax
  424001:	int3   
  424002:	adc    WORD PTR [ecx],cx
  424005:	pmulhuw mm7,mm6
  424008:	stos   DWORD PTR es:[edi],eax
  424009:	dec    eax
  42400a:	fs aam 0x24
  42400d:	rol    DWORD PTR [eax],1
  42400f:	push   eax
  424010:	mov    ebx,0x4c16483e
  424015:	xchg   ecx,eax
  424016:	mov    DWORD PTR [ebp+0x54],eax
  424019:	push   cs
  42401a:	ror    BYTE PTR [esp+esi*1],0x55
  42401e:	jbe    0x424060
  424020:	dec    esp
  424021:	mov    eax,0x4755057f
  424026:	std    
  424027:	dec    DWORD PTR [eax+ecx*2-0x2eb11bf1]
  42402e:	add    BYTE PTR [ebx-0x7caecc6f],cl
  424034:	or     al,0x3e
  424036:	dec    esp
  424037:	lea    esp,[ecx+0x5bfffe58]
  42403d:	cmp    ebp,0xd54a2476
  424043:	cmp    DWORD PTR [ecx-0x4a8b03b9],0x38
  42404a:	xor    ebp,DWORD PTR [edx-0x5a]
  42404d:	mov    ds,esp
  42404f:	ja     0x4240c6
  424051:	es (bad) 
  424053:	jne    0x424002
  424055:	mov    ch,0xae
  424057:	add    BYTE PTR [eax],0x0
	...
  42406a:	add    BYTE PTR [eax],al
  42406c:	in     eax,dx
  42406d:	daa    
  42406e:	push   ecx
  42406f:	sbb    BYTE PTR [esi-0x7aafd01a],ah
  424075:	test   dh,0x75
  424078:	lods   eax,DWORD PTR ds:[esi]
  424079:	aad    0xf0
  42407b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42407c:	test   al,0xe6
  42407e:	inc    DWORD PTR [eax+0x45127cd]
  424084:	das    
  424085:	fiadd  DWORD PTR [si]
  424088:	int    0xdd
  42408a:	leave  
  42408b:	cld    
  42408c:	mov    dl,0x38
  42408e:	rcr    BYTE PTR [ebx+ecx*1+0x22],0xbd
  424093:	sar    DWORD PTR [ecx-0x7676ceda],0xf7
  42409a:	xor    al,0x51
  42409c:	jmp    0x42404f
  42409e:	iret   
  42409f:	push   esp
  4240a0:	xor    BYTE PTR [ebx+ecx*2+0x5e3f0f0e],bl
  4240a7:	add    bl,ah
  4240a9:	xor    eax,0xe6cb4fec
  4240ae:	inc    DWORD PTR [eax+0x62835271]
  4240b4:	pop    ebp
  4240b5:	es mov edi,edi
  4240b8:	stos   BYTE PTR es:[edi],al
  4240b9:	add    BYTE PTR es:[ebp+0x5d],dl
  4240bd:	test   BYTE PTR [edi*8-0x7d534eb6],dl
  4240c4:	pop    esi
  4240c5:	cmp    eax,0x26b58b7c
  4240ca:	add    BYTE PTR [ecx+0x74002ab0],al
	...
  4240e4:	(bad)  
  4240e5:	rol    BYTE PTR [edi*8-0x370a7058],1
  4240ec:	(bad)  
  4240ed:	pop    edi
  4240ee:	clc    
  4240ef:	inc    ebx
  4240f0:	mov    ch,0x72
  4240f2:	out    0x2,eax
  4240f4:	mov    ch,0x8f
  4240f6:	adc    al,0x65
  4240f8:	cs retf 0x3485
  4240fc:	sub    al,0xca
  4240fe:	icebp  
  4240ff:	xor    BYTE PTR [esp+esi*1-0x4dcc0406],al
  424106:	ins    DWORD PTR es:[edi],dx
  424107:	leave  
  424108:	(bad)  
  424109:	repz cld 
  42410b:	inc    ebx
  42410c:	mov    ch,0xa
  42410e:	sub    dl,BYTE PTR [eax+0x7f]
  424111:	or     BYTE PTR [ebp-0x29b0c839],ch
  424117:	or     al,dl
  424119:	retf   0x8341
  42411c:	aas    
  42411d:	aaa    
  42411e:	xor    al,bh
  424120:	mov    dl,0x33
  424122:	mov    ebx,0xb63a3610
  424127:	mov    ebp,DWORD PTR ds:0x6d04edc2
  42412d:	sub    dl,dl
  42412f:	sbb    BYTE PTR [eax+0x6c46e33],dl
  424135:	ins    DWORD PTR es:[edi],dx
  424136:	or     cl,BYTE PTR [edi-0x7f]
  424139:	pop    es
  42413a:	in     al,dx
  42413b:	add    al,0xf3
  42413d:	mov    edx,DWORD PTR [esi-0x5a628fcd]
  424143:	icebp  
  424144:	stos   BYTE PTR es:[edi],al
  424145:	(bad)  
  424146:	pop    esi
  424147:	aas    
	...
  42415c:	popa   
  42415d:	(bad)  
  42415f:	neg    DWORD PTR [ebx-0x33]
  424162:	in     eax,0xdc
  424164:	inc    ecx
  424165:	ffreep st(1)
  424167:	mov    esi,0x93cb3299
  42416c:	inc    ebx
  42416d:	xlat   BYTE PTR es:[ebx]
  42416f:	xor    al,0x4d
  424171:	test   DWORD PTR [edx],0x10d31c9
  424177:	mov    edi,0xf7fb8c7a
  42417c:	(bad)  
  42417d:	loop   0x4241aa
  42417f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424180:	in     eax,dx
  424181:	add    al,0x3e
  424184:	(bad)  
  424186:	leave  
  424187:	stos   DWORD PTR es:[edi],eax
  424188:	push   cs
  424189:	xor    edx,DWORD PTR [ebp+0x62]
  42418c:	jmp    0x2fdc:0xc1dded0f
  424193:	mov    ds:0xe980a7a9,al
  424198:	mov    dh,0x8f
  42419a:	data16 jmp 0x424146
  42419d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42419e:	add    ecx,edx
  4241a0:	mov    dh,0x8f
  4241a2:	add    BYTE PTR [ecx+0x610cbdfd],ch
  4241a8:	xchg   ebx,eax
  4241a9:	xor    al,0xfc
  4241ab:	hlt    
  4241ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241ad:	popf   
  4241ae:	inc    eax
  4241af:	jmp    0x3ec27bed
  4241b4:	jge    0x424139
  4241b6:	test   BYTE PTR [esi+esi*4-0x71],dl
  4241ba:	add    BYTE PTR [edi-0x16f3cdd4],dl
	...
  4241d4:	mov    dh,0xd9
  4241d6:	call   0xfc76ef8e
  4241db:	pusha  
  4241dc:	retf   
  4241dd:	cmp    edi,DWORD PTR [eax]
  4241df:	sub    dh,dl
  4241e1:	mov    esi,0x796ea489
  4241e6:	pop    ebp
  4241e7:	fld    DWORD PTR [edx]
  4241e9:	or     DWORD PTR [edi-0xa],0xfffffff8
  4241ed:	lahf   
  4241ee:	sti    
  4241ef:	aam    0x26
  4241f1:	mov    al,ds:0x8dade940
  4241f6:	add    ecx,ebp
  4241f8:	mov    dh,0xbe
  4241fa:	push   esp
  4241fb:	fs hlt 
  4241fd:	aas    
  4241fe:	push   ecx
  4241ff:	(bad)  
  424200:	hlt    
  424201:	xchg   DWORD PTR [edx+0x0],edx
  424204:	jae    0x4241e6
  424206:	hlt    
  424207:	(bad)  
  424208:	in     al,dx
  424209:	xor    edi,ebp
  42420b:	adc    eax,0x3c40a0
  424210:	cdq    
  424211:	dec    ebx
  424212:	jo     0x424250
  424214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424215:	shl    al,1
  424217:	cmp    ebx,DWORD PTR [edi-0x21]
  42421a:	es add ecx,ebx
  42421d:	inc    ebx
  42421e:	jnp    0x42429d
  424220:	and    al,0x8b
  424222:	add    BYTE PTR [eax+0x5323c10c],ah
  424228:	popa   
  424229:	js     0x424217
  42422b:	push   ecx
  42422c:	int3   
  42422d:	dec    edx
  42422e:	outs   dx,DWORD PTR ds:[esi]
  42422f:	hlt    
  424230:	retf   
  424231:	dec    edx
  424232:	(bad)  
  424234:	fmulp  st(5),st
  424236:	add    BYTE PTR [ebp+0x0],al
	...
  42424c:	pushf  
  42424d:	fisttp WORD PTR [edi]
  42424f:	mov    ebx,DWORD PTR [ecx]
  424251:	pop    esi
  424252:	cmp    DWORD PTR [ebp-0x80],eax
  424255:	fbld   TBYTE PTR [ecx-0x29f3815]
  42425b:	adc    eax,0x3c3dc0
  424260:	fcmove st,st(6)
  424262:	std    
  424263:	add    ebx,edx
  424265:	fdivrp st(4),st
  424267:	call   0x3fdc2e
  42426c:	dec    ebx
  42426d:	dec    edx
  42426e:	xadd   BYTE PTR [esi+0x645e00cd],cl
  424275:	push   0x4a8475fd
  42427a:	outs   dx,DWORD PTR ds:[esi]
  42427b:	or     al,0xc4
  42427d:	in     eax,0x29
  42427f:	jmp    DWORD PTR [ebx-0x49]
  424282:	push   DWORD PTR ds:[ebx]
  424285:	retw   
  424287:	ret    0x8d60
  42428a:	dec    edi
  42428b:	mov    eax,DWORD PTR [eax-0x4ae717f2]
  424291:	jne    0x4242bd
  424293:	push   ebp
  424294:	inc    edx
  424295:	fdiv   st(0),st
  424297:	mov    al,al
  424299:	pop    edx
  42429a:	fsubr  st,st(0)
  42429c:	sti    
  42429d:	add    BYTE PTR es:[ebp+esi*8-0x5f7fc98e],al
  4242a5:	cld    
  4242a6:	add    DWORD PTR [ebx-0x50],esi
  4242a9:	pushf  
  4242aa:	add    BYTE PTR [ebp+0x1e],bl
  4242ad:	and    eax,0xfd0f
	...
  4242c2:	add    BYTE PTR [eax],al
  4242c4:	or     dl,BYTE PTR [esp+esi*8-0x3cd17778]
  4242cb:	jb     0x4242ca
  4242cd:	or     DWORD PTR [ecx-0x14],edx
  4242d0:	fnstsw WORD PTR [edi]
  4242d2:	(bad)  
  4242d3:	cld    
  4242d4:	jmp    0x50a1:0xc973bfa2
  4242db:	lock bound esi,QWORD PTR cs:[esi-0x33]
  4242e0:	fucomp st(4)
  4242e2:	ret    
  4242e3:	cld    
  4242e4:	retf   0xbfa2
  4242e7:	jae    0x4242a2
  4242e9:	adc    eax,0x34b7e905
  4242ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242ef:	cld    
  4242f0:	sub    bl,al
  4242f2:	xlat   BYTE PTR ds:[ebx]
  4242f3:	ja     0x4242d0
  4242f5:	jns    0x4242b9
  4242f7:	cld    
  4242f8:	sub    BYTE PTR [edi-0x29],dh
  4242fb:	outs   dx,DWORD PTR ds:[esi]
  4242fc:	retf   
  4242fd:	imul   eax,edx,0x25f17689
  424303:	pop    ecx
  424304:	jl     0x42436a
  424306:	repz (bad) 
  424308:	jmp    0xe49116ba
  42430d:	push   ds
  42430e:	les    esi,FWORD PTR [edi-0xb]
  424311:	es ret 
  424313:	adc    ch,BYTE PTR [ecx+0x2c004057]
  424319:	jmp    0x4242e2
  42431b:	xor    BYTE PTR [ebp-0x71],0x5c
  42431f:	add    bh,BYTE PTR [edx+0x4c]
  424322:	aaa    
  424323:	sub    eax,0x445087dd
	...
  42433c:	mov    ch,0xdf
  42433e:	push   ss
  42433f:	lds    edi,FWORD PTR [ecx]
  424341:	call   0xac6e:0x8ff2f2bd
  424348:	aaa    
  424349:	push   esp
  42434a:	ds inc eax
  42434c:	lea    ecx,[ebx-0x5a4afc27]
  424352:	icebp  
  424353:	(bad)  
  424354:	(bad)  
  424355:	addr16 mov bl,0x41
  424358:	mov    ch,0x30
  42435a:	std    
  42435b:	push   edi
  42435c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42435d:	iret   
  42435e:	jmp    0x834c45db
  424363:	push   eax
  424364:	pushf  
  424365:	fldcw  WORD PTR [edi+edi*1-0x17]
  424369:	ficomp WORD PTR [edx]
  42436b:	xchg   cl,ah
  42436d:	jg     0x424358
  42436f:	add    ecx,DWORD PTR [edi-0x71]
  424372:	jo     0x4243c3
  424374:	shr    DWORD PTR [edi],1
  424376:	aaa    
  424377:	jg     0x424383
  424379:	mov    edx,0x337778e3
  42437e:	movsx  ebp,BYTE PTR [ecx-0x4941d434]
  424385:	xchg   esi,eax
  424386:	jmp    0x4208f463
  42438b:	iret   
  42438c:	iret   
  42438d:	sub    esp,DWORD PTR cs:[esi]
  424390:	cwde   
  424391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424392:	and    ebp,eax
  424394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424395:	xchg   ebx,eax
  424396:	test   BYTE PTR [ebx-0x4b],0x1a
  42439a:	sub    esp,DWORD PTR ds:0x2f2758dc
	...
  4243b4:	sub    al,0x3c
  4243b6:	cdq    
  4243b7:	adc    bh,0x2b
  4243ba:	jmp    0x5255:0x653c2d
  4243c1:	outs   dx,DWORD PTR ds:[esi]
  4243c2:	add    BYTE PTR [esi+0x39fcd1e3],dl
  4243c8:	out    dx,eax
  4243c9:	(bad)  
  4243ca:	or     si,WORD PTR [eax-0x5e]
  4243ce:	or     dh,dl
  4243d0:	adc    BYTE PTR [edx],dl
  4243d2:	rcl    DWORD PTR [ecx+edi*2+0x66],0x45
  4243d7:	lds    eax,FWORD PTR [edx+0x26d4fbd0]
  4243dd:	add    BYTE PTR [eax-0x17],0x35
  4243e1:	daa    
  4243e2:	ja     0x424418
  4243e4:	test   eax,0x76a54618
  4243e9:	mov    ds:0x7a78912e,eax
  4243ee:	sti    
  4243ef:	xchg   esi,eax
  4243f0:	jge    0x424418
  4243f2:	xchg   BYTE PTR [esi+0x2c8d746a],cl
  4243f8:	std    
  4243f9:	ficom  WORD PTR [ebx+0x13]
  4243fc:	xchg   edi,eax
  4243fd:	sub    al,0x76
  4243ff:	loope  0x4243fa
  424401:	inc    esp
  424402:	xor    BYTE PTR [ecx-0x49],0xa2
  424406:	adc    BYTE PTR [edx-0x6d],dh
  424409:	fwait
  42440a:	test   DWORD PTR [ecx],ebp
  42440c:	jp     0x4243a0
  42440e:	xchg   DWORD PTR [edx+edi*8-0x69df6eb],esp
  424415:	aaa    
  424416:	or     DWORD PTR [esi+0x0],ebx
	...
  42442c:	mov    gs,WORD PTR [edx+0x5f713e2d]
  424432:	rcl    BYTE PTR [esi-0x1e40a928],0xb6
  424439:	ret    0x1587
  42443c:	(bad)  
  42443d:	adc    BYTE PTR [esi+0x1d],ah
  424440:	mov    dh,0xc5
  424442:	xchg   esp,ebx
  424444:	add    DWORD PTR cs:[eax-0x17],0x461ac9
  42444c:	mov    eax,0x6b006662
  424451:	fmul   QWORD PTR [edi+edi*8]
  424454:	loope  0x424480
  424456:	std    
  424457:	(bad)  
  424458:	rcl    DWORD PTR [edx+0x6f],1
  42445b:	aas    
  42445c:	xchg   ebp,eax
  42445d:	fdivr  st,st(4)
  42445f:	je     0x4243f7
  424461:	push   edx
  424462:	movups xmm7,XMMWORD PTR [edi]
  424465:	rol    BYTE PTR [eax],cl
  424467:	and    DWORD PTR [ebp+ebp*2+0x6f],0x2f
  42446c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42446d:	fdivr  st,st(4)
  42446f:	sbb    DWORD PTR [ebp+edx*4+0x74],0x27
  424474:	hlt    
  424475:	xchg   esp,eax
  424476:	daa    
  424477:	dec    DWORD PTR [ebx+0x1e]
  42447a:	hlt    
  42447b:	test   DWORD PTR [ebx+0x67],ebx
  42447e:	sbb    al,0x8d
  424480:	ror    DWORD PTR [edi+0x4c],1
  424483:	push   edi
  424484:	sub    ebp,DWORD PTR [eax+0xc]
  424487:	jmp    DWORD PTR [ecx+0x5fd6fd9b]
  42448d:	jmp    0x424489
  42448f:	je     0x424491
	...
  4244a1:	add    BYTE PTR [eax],al
  4244a3:	add    al,dl
  4244a5:	sbb    al,0xc5
  4244a7:	jmp    0x42447d
  4244a9:	enter  0x13e8,0x19
  4244ad:	push   ecx
  4244ae:	std    
  4244af:	xor    ebx,DWORD PTR [edx+esi*4-0x646136a6]
  4244b6:	add    BYTE PTR [ebp+0x57],dl
  4244b9:	fisttp WORD PTR [edx+0x51]
  4244bc:	dec    edi
  4244bd:	js     0x4244bb
  4244bf:	add    BYTE PTR [edi-0x39],cl
  4244c2:	push   ebp
  4244c3:	jmp    DWORD PTR [ecx-0x63]
  4244c6:	std    
  4244c7:	adc    eax,0x408360
  4244cc:	retf   
  4244cd:	data16 adc al,0x8b
  4244d0:	jno    0x424523
  4244d2:	cmovo  ebx,DWORD PTR [esi+ebx*1-0x44a722c]
  4244da:	mov    ebx,0xc047a4f
  4244df:	mov    ebp,0x49672
  4244e4:	add    ch,BYTE PTR [esi]
  4244e6:	cmp    DWORD PTR [eax],ecx
  4244e8:	bound  ecx,QWORD PTR [ebp+0x1ae0bf89]
  4244ee:	mov    edi,0x4029a512
  4244f3:	add    BYTE PTR [esi],dh
  4244f5:	das    
  4244f6:	ds jae 0x4244dd
  4244f9:	mov    cl,0x48
  4244fb:	cld    
  4244fc:	jle    0x4244dc
  4244fe:	push   cs
  4244ff:	inc    ebp
  424500:	div    BYTE PTR [esi+0x38]
  424503:	inc    esi
  424504:	sbb    eax,0xfcebb6
	...
  424519:	add    BYTE PTR [eax],al
  42451b:	add    BYTE PTR [edx],ah
  42451d:	mov    al,0x48
  42451f:	clc    
  424520:	xor    bh,dh
  424522:	xor    edi,DWORD PTR [edx]
  424524:	jbe    0x42458f
  424526:	mov    edi,0xbf66b972
  42452b:	adc    ch,BYTE PTR [ebp-0x5ffbfd7]
  424531:	sbb    DWORD PTR [eax],0xffffff8b
  424534:	js     0x424548
  424536:	push   eax
  424537:	std    
  424538:	pusha  
  424539:	push   cs
  42453a:	push   edi
  42453b:	std    
  42453c:	push   0x36d5bf2e
  424541:	lahf   
  424542:	add    al,0x73
  424544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424545:	mov    eax,ds:0x77301048
  42454a:	xor    eax,DWORD PTR [ebx]
  42454c:	cs hlt 
  42454e:	mov    ebx,0x48b1ad86
  424553:	clc    
  424554:	sahf   
  424555:	and    BYTE PTR [edi+0x3cbead72],bh
  42455b:	sub    al,0xa2
  42455d:	gs repnz mov edi,0xc75b1cfa
  424564:	ja     0x4244f5
  424566:	stc    
  424567:	add    esp,esi
  424569:	sbb    BYTE PTR [esi],cl
  42456b:	xchg   BYTE PTR [esi+0x2c59b69b],cl
  424571:	bound  ebp,QWORD PTR [ebp+0x18]
  424574:	cmc    
  424575:	(bad)  
  424576:	call   0x6148:0x6cc8b12d
  42457d:	mov    edi,0x4864
	...
  424592:	add    BYTE PTR [eax],al
  424594:	popa   
  424595:	mov    edi,0xa250187f
  42459a:	icebp  
  42459b:	mov    ch,bh
  42459d:	sub    ebx,ebx
  42459f:	fisubr DWORD PTR ds:0xf517896a
  4245a5:	(bad)  
  4245a6:	mov    esi,0xbdd23c1e
  4245ab:	xchg   DWORD PTR [edx-0x5d],ebp
  4245ae:	or     BYTE PTR [edi-0x70e6d491],cl
  4245b4:	outs   dx,DWORD PTR ds:[esi]
  4245b5:	and    ebx,DWORD PTR [ecx]
  4245b7:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4245b9:	mov    edi,0x16bd4770
  4245be:	cmp    eax,0x934501c0
  4245c3:	aaa    
  4245c4:	lods   eax,DWORD PTR ds:[esi]
  4245c5:	push   ss
  4245c6:	and    eax,0x6743f1bc
  4245cb:	aas    
  4245cc:	in     eax,dx
  4245cd:	mov    ?,esp
  4245cf:	fild   DWORD PTR [ecx-0xb34f133]
  4245d5:	xchg   edx,eax
  4245d6:	jmp    0xb97d8231
  4245db:	push   edx
  4245dc:	rcl    cl,0xed
  4245df:	add    esi,DWORD PTR [ebp-0x4ec83671]
  4245e5:	pusha  
  4245e6:	sub    DWORD PTR [ebp-0x4432f0e2],ebp
  4245ec:	stos   BYTE PTR es:[edi],al
  4245ed:	mov    esi,0x4fe78c93
  4245f2:	add    esp,ebx
  4245f4:	test   BYTE PTR [edi+0xe966],0x0
	...
  42460b:	add    BYTE PTR [ebx-0x32],al
  42460e:	clc    
  42460f:	mov    ecx,0xb9fbce3b
  424614:	jne    0x4245b4
  424616:	or     al,0x16
  424618:	ret    0xfb97
  42461b:	aaa    
  42461c:	cmp    ch,bl
  42461e:	jne    0x4245cf
  424620:	jne    0x4246a0
  424622:	adc    dl,bl
  424624:	test   BYTE PTR [edi-0x61670e81],0x37
  42462b:	(bad)  
  42462c:	cli    
  42462d:	daa    
  42462e:	inc    ecx
  42462f:	pop    ebp
  424630:	inc    edx
  424631:	xor    ebx,DWORD PTR [ecx-0x77d38bee]
  424637:	mov    cl,0x33
  424639:	dec    eax
  42463a:	jne    0x42463f
  42463c:	jecxz  0x4245cd
  42463e:	lea    ebp,[ecx+ebp*2]
  424641:	fisttp DWORD PTR [edi-0x42]
  424644:	jmp    0x4245e1
  424646:	sti    
  424647:	cmp    al,0xa9
  424649:	sub    al,0xd3
  42464b:	push   0x4e
  42464d:	sub    dh,BYTE PTR [ebp-0x7]
  424650:	cmp    esi,ecx
  424652:	adc    BYTE PTR [esi+esi*8-0x62],ah
  424656:	add    eax,0x8a276b62
  42465b:	loope  0x42469e
  42465d:	push   eax
  42465e:	call   0x9879c854
  424663:	shl    ch,cl
  424665:	sub    esi,DWORD PTR [eax]
  424667:	test   eax,0xabc9c854
  42466c:	ret    0x558f
  42466f:	jb     0x424671
	...
  424681:	add    BYTE PTR [eax],al
  424683:	add    BYTE PTR [edx],bl
  424685:	stos   BYTE PTR es:[edi],al
  424686:	in     al,dx
  424687:	leave  
  424688:	mov    edx,0x29ba008f
  42468d:	(bad)  
  42468e:	or     BYTE PTR [edi+0x20b80d],dh
  424694:	jne    0x424664
  424696:	add    BYTE PTR [ebx+0x11],dl
  424699:	adc    ah,BYTE PTR [eax+0x4c4fe3fb]
  42469f:	mov    ecx,ebp
  4246a1:	test   BYTE PTR [edi+0x7f4fd302],0xc0
  4246a8:	sub    DWORD PTR [esi-0xabbfc9a],edx
  4246ae:	dec    esi
  4246af:	add    DWORD PTR [esi+ecx*4-0x79],ebx
  4246b3:	test   DWORD PTR [eax],eax
  4246b5:	jmp    0xa47f:0x193cfffc
  4246bc:	addr16 jmp 0x1140:0x846350fc
  4246c4:	pushf  
  4246c5:	xchg   ebx,eax
  4246c6:	add    DWORD PTR [ebp+0x44],0xd
  4246ca:	hlt    
  4246cb:	(bad)  
  4246cc:	fst    DWORD PTR [edi+0x44f70466]
  4246d2:	xor    edi,edi
  4246d4:	mov    eax,ds:0x63fdd418
  4246d9:	jmp    0x8400:0x931023e3
  4246e0:	pop    esp
  4246e1:	call   0x8b00:0x8e1cd57f
	...
  4246fc:	adc    dl,BYTE PTR ds:0x9f798cfb
  424702:	idiv   bh
  424704:	inc    ebx
  424705:	mov    ebp,0x97ccff51
  42470a:	jg     0x4246cc
  42470c:	call   0xce3ac8a6
  424711:	cli    
  424712:	mov    bl,0x0
  424714:	fmul   QWORD PTR [ebp+0x502085f2]
  42471a:	std    
  42471b:	(bad)  
  42471c:	mov    esp,0xb5848498
  424721:	cmp    BYTE PTR [eax],al
  424723:	add    BYTE PTR [ebx+0x210207f1],ch
  424729:	xchg   esi,eax
  42472a:	xchg   ecx,eax
  42472b:	cmp    BYTE PTR [ebp+0x6c],0xbb
  42472f:	cld    
  424730:	add    eax,0x92ffb1cf
  424735:	aaa    
  424736:	test   BYTE PTR [edi+0xd872601],bh
  42473c:	cmp    BYTE PTR cs:[ecx-0x447bb66e],dl
  424743:	cld    
  424744:	pop    es
  424745:	out    0xba,al
  424747:	dec    edi
  424748:	mov    ebp,0x7772c4bb
  42474d:	and    DWORD PTR [esi+0x8],eax
  424750:	mov    ah,0xaa
  424752:	cmp    eax,0xc17f388b
  424757:	cld    
  424758:	dec    edx
  424759:	addr16 dec edi
  42475b:	mov    edi,DWORD PTR [eax]
  42475d:	adc    esi,DWORD PTR [edi+0xfc]
	...
  424773:	add    BYTE PTR [edx],bh
  424775:	lods   al,BYTE PTR ds:[si]
  424777:	out    0xb4,eax
  424779:	pop    ecx
  42477a:	mov    ebx,0x96bf582
  42477f:	push   0xffffffb6
  424781:	mov    DWORD PTR [edi+0x63bc281d],esp
  424787:	clc    
  424788:	adc    bh,dl
  42478a:	dec    edi
  42478b:	mov    ebx,edi
  42478d:	(bad)  
  42478e:	sbb    ebp,edi
  424790:	add    cl,BYTE PTR [edx]
  424792:	xchg   edi,esi
  424794:	xor    BYTE PTR [edx],al
  424796:	xor    al,0x4b
  424798:	sbb    al,BYTE PTR ss:0xbab55874
  42479f:	add    DWORD PTR [ecx+0x7e],ebp
  4247a2:	xchg   DWORD PTR ds:0x8b53382e,ecx
  4247a8:	sub    BYTE PTR [ebx-0x40],ch
  4247ab:	cld    
  4247ac:	retf   0xb78f
  4247af:	push   edx
  4247b0:	sar    BYTE PTR [edi-0x733d7d13],0xdd
  4247b7:	jae    0x424754
  4247b9:	mov    al,0x4a
  4247bb:	mov    esi,0xbac21a9
  4247c0:	mov    ecx,0x379106a3
  4247c5:	inc    edi
  4247c6:	xor    eax,0x41bf91be
  4247cb:	sub    al,0xb5
  4247cd:	(bad)
  4247d1:	mov    ds:0x14a88af6,eax
  4247d6:	jmp    0x42486b
	...
  4247eb:	add    BYTE PTR [edi-0x5],al
  4247ee:	or     al,0xbe
  4247f0:	imul   edi,DWORD PTR [ebp-0x680d416a],0x85e7c364
  4247fa:	mov    BYTE PTR fs:[esi],bl
  4247fd:	sub    ch,bl
  4247ff:	mov    ebp,0xc5d28fa
  424804:	inc    eax
  424805:	xor    BYTE PTR [ecx],0x13
  424808:	cmc    
  424809:	(bad)  
  42480a:	ins    BYTE PTR es:[edi],dx
  42480b:	(bad)
  42480f:	mov    esp,0x9cf2829
  424814:	in     al,0x56
  424816:	addr16 mov esp,0xc35c98b4
  42481c:	aas    
  42481d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42481e:	call   0xf6c1efdf
  424823:	inc    ebx
  424824:	mov    ch,0x14
  424826:	call   0xf080:0xe1a1f987
  42482d:	jl     0x424844
  42482f:	add    DWORD PTR [edi-0x6d],ebx
  424832:	and    bh,BYTE PTR [ebp+0x177a9767]
  424838:	jno    0x4248b8
  42483a:	add    BYTE PTR [ecx],ch
  42483c:	mov    ecx,0xd2d4fbc1
  424841:	jge    0x424883
  424843:	jmp    0xbf9e9b75
  424848:	pop    ebp
  424849:	push   eax
  42484a:	mov    edi,0x2fbcb6ed
  42484f:	dec    esi
	...
  424864:	scas   al,BYTE PTR es:[edi]
  424865:	stos   DWORD PTR es:[edi],eax
  424866:	and    al,0xf1
  424868:	jmp    0x4247f5
  42486a:	sub    DWORD PTR cs:[edx+eax*8-0x79],ecx
  42486f:	scas   eax,DWORD PTR es:[edi]
  424870:	stos   BYTE PTR es:[edi],al
  424871:	js     0x424836
  424873:	mov    ch,0xfa
  424875:	xlat   BYTE PTR ds:[ebx]
  424876:	je     0x424845
  424878:	out    dx,al
  424879:	mov    ds:0x7fb8e0eb,al
  42487e:	jb     0x424883
  424880:	cmp    al,0xcd
  424882:	or     al,0xe
  424884:	ins    DWORD PTR es:[edi],dx
  424885:	(bad)  
  424887:	jge    0x4248e3
  424889:	fwait
  42488a:	sti    
  42488b:	aam    0xce
  42488d:	jg     0x4248cf
  42488f:	jmp    0xbcb82fcf
  424894:	icebp  
  424895:	push   0x2d84f97a
  42489a:	call   0xd0f764e
  42489f:	pusha  
  4248a0:	out    dx,al
  4248a1:	xchg   ebx,eax
  4248a2:	out    0xde,eax
  4248a4:	xchg   BYTE PTR [esi*2+0x1624c50d],ah
  4248ab:	xchg   ecx,eax
  4248ac:	(bad)
  4248af:	ins    BYTE PTR es:[edi],dx
  4248b0:	mul    BYTE PTR [ecx-0x6c8f9df6]
  4248b6:	call   0xd1ffb0
  4248bb:	loop   0x4248ae
  4248bd:	mov    eax,ds:0xf65f82e5
  4248c2:	add    DWORD PTR [esi],ebp
  4248c4:	not    DWORD PTR [edx+0x0]
	...
  4248da:	add    BYTE PTR [eax],al
  4248dc:	fimul  DWORD PTR [si]
  4248df:	test   DWORD PTR ds:0x948b085e,esp
  4248e5:	xchg   ebx,eax
  4248e6:	or     DWORD PTR [eax-0x18],0xfffffff7
  4248ea:	xor    BYTE PTR [ebx-0x35c66504],cl
  4248f0:	fidivr WORD PTR [edx]
  4248f2:	push   esi
  4248f3:	mov    ecx,DWORD PTR [esi+ecx*4-0x3b71eb79]
  4248fa:	cmp    edx,ecx
  4248fc:	pop    edi
  4248fd:	xchg   BYTE PTR [edx-0x75],ah
  424900:	jge    0x424911
  424902:	mov    ebx,0xcdb1502
  424907:	adc    WORD PTR [ecx+0x6f],ax
  42490b:	repnz xor ch,BYTE PTR [ecx]
  42490e:	or     esi,DWORD PTR [ebp-0x77]
  424911:	btc    DWORD PTR [edx],eax
  424914:	aad    0xda
  424916:	or     al,0x33
  424918:	pushf  
  424919:	dec    edi
  42491a:	and    DWORD PTR [eax+0x68],0x48408992
  424921:	dec    edi
  424922:	push   esi
  424923:	push   edi
  424924:	xlat   BYTE PTR ds:[ebx]
  424925:	jmp    0x4c0ec0b2
  42492a:	add    eax,0xcbd524
  42492f:	test   DWORD PTR [edx+0x5f],esp
  424932:	jmp    edi
  424934:	repz xchg edx,eax
  424936:	sti    
  424937:	call   DWORD PTR [edi+0x2af0e3e2]
  42493d:	xchg   edx,eax
  42493e:	add    dh,dh
	...
  424954:	shr    BYTE PTR [edi],1
  424956:	or     BYTE PTR [ecx],al
  424958:	rcl    BYTE PTR [ecx+0x330ee855],1
  42495e:	std    
  42495f:	inc    DWORD PTR [edi+0x4e5e5d52]
  424965:	pop    DWORD PTR [eax]
  424967:	push   ebp
  424968:	mov    ch,0xb1
  42496a:	test   al,0x4e
  42496c:	xchg   BYTE PTR [esi+0x4f],bl
  42496f:	std    
  424970:	push   0xdad8f32c
  424975:	sbb    bl,BYTE PTR [eax]
  424977:	mov    ebp,ecx
  424979:	pushf  
  42497a:	xor    DWORD PTR [edx+ecx*8],edx
  42497d:	sbb    dl,BYTE PTR [eax]
  42497f:	std    
  424980:	dec    eax
  424981:	sbb    al,0xb7
  424983:	jb     0x424932
  424985:	jmp    0x37c631dc
  42498a:	add    BYTE PTR [eax],al
  42498c:	ds (bad) 
  42498e:	sti    
  42498f:	lock sub DWORD PTR [esi+0x22],ecx
  424993:	aaa    
  424994:	cli    
  424995:	xchg   esi,eax
  424996:	xor    BYTE PTR [eax],dh
  424998:	pop    ds
  424999:	inc    edi
  42499a:	mov    DWORD PTR [ebp-0xf],eax
  42499d:	or     DWORD PTR [eax-0x3],edx
  4249a0:	test   al,0xe6
  4249a2:	adc    DWORD PTR [eax-0x4b],eax
  4249a5:	mov    ecx,0x38df0bc0
  4249aa:	pop    eax
  4249ab:	data16 cmp al,0xed
  4249ae:	cmp    ecx,DWORD PTR ds:0x65e4f62b
  4249b4:	cs neg bh
  4249b7:	add    BYTE PTR gs:[eax],al
	...
  4249ca:	add    BYTE PTR [eax],al
  4249cc:	je     0x424966
  4249ce:	or     al,0x66
  4249d0:	mov    esi,0xfb871e77
  4249d5:	je     0x424962
  4249d7:	inc    esp
  4249d8:	cdq    
  4249d9:	lahf   
  4249da:	inc    ecx
  4249db:	dec    eax
  4249dc:	fwait
  4249dd:	jg     0x424a36
  4249df:	xor    al,0xa1
  4249e1:	jns    0x424a0d
  4249e3:	sbb    al,0x30
  4249e5:	jne    0x424a37
  4249e7:	push   ecx
  4249e8:	test   ebp,esp
  4249ea:	adc    BYTE PTR [eax-0x55],dl
  4249ed:	jbe    0x4249f3
  4249ef:	xor    ecx,0x5d152e42
  4249f5:	(bad)  
  4249f6:	or     ecx,DWORD PTR [ebp+0x71eabb70]
  4249fc:	jns    0x424a58
  4249fe:	or     ecx,DWORD PTR [edi-0x3afca487]
  424a04:	add    ebx,DWORD PTR [eax-0x45e5f0f5]
  424a0a:	fldenv [ecx]
  424a0c:	cmp    cl,dh
  424a0e:	sbb    eax,DWORD PTR [edi+0x415c6bf1]
  424a14:	popa   
  424a15:	mov    esp,0xc7588cb9
  424a1a:	pop    edx
  424a1b:	adc    BYTE PTR [ecx],al
  424a1d:	jle    0x4249c8
  424a1f:	add    esi,DWORD PTR [ebx+ecx*2]
  424a22:	fimul  WORD PTR [eax+eax*1+0x708ea2b4]
  424a29:	lds    ebx,FWORD PTR [esi-0x2dae11a4]
  424a2f:	add    eax,DWORD PTR [eax]
	...
  424a41:	add    BYTE PTR [eax],al
  424a43:	add    dh,ah
  424a45:	sbb    BYTE PTR [esi],bh
  424a47:	push   esp
  424a48:	repnz xchg esp,eax
  424a4a:	pop    edx
  424a4b:	add    al,0xc4
  424a4d:	inc    ecx
  424a4e:	addr16 mov ebx,0x8ce19ab4
  424a54:	jmp    DWORD PTR [edi]
  424a56:	popa   
  424a57:	push   eax
  424a58:	popa   
  424a59:	cmp    bh,ch
  424a5b:	xchg   BYTE PTR [edx+0x7c],ah
  424a5e:	je     0x424a61
  424a60:	cmp    bh,BYTE PTR [edx+0x23ff8bf1]
  424a66:	cwde   
  424a67:	mov    edx,0x2fe27bc7
  424a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a6d:	rcr    edx,0x2f
  424a70:	shl    DWORD PTR [ebx*2-0x3265d7f4],0xb9
  424a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a79:	daa    
  424a7a:	rol    BYTE PTR [eax],cl
  424a7c:	mov    ch,0x8f
  424a7e:	jmp    0xc13f4d
  424a83:	jmp    0x692f6103
  424a88:	dec    ebp
  424a89:	cwde   
  424a8a:	add    ecx,ebp
  424a8c:	mov    dh,0xbe
  424a8e:	mov    bh,0x5
  424a90:	repnz and edi,esp
  424a93:	aas    
  424a94:	test   BYTE PTR [ebp+ebx*2-0x37],bl
  424a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a9a:	data16 std 
  424a9c:	push   cs
  424a9d:	sub    BYTE PTR [esi+edi*2],ah
  424aa0:	or     al,0x17
  424aa2:	icebp  
  424aa3:	mov    edx,0xf5f3670d
	...
  424abc:	mov    al,ds:0xb6f47537
  424ac1:	(bad)  
  424ac2:	das    
  424ac3:	sub    DWORD PTR [esi],edi
  424ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ac6:	jo     0x424af6
  424ac8:	mov    bh,0x6b
  424aca:	jns    0x424a75
  424acc:	mov    dh,0xa9
  424ace:	mov    DWORD PTR [edi-0x58765626],ebp
  424ad4:	add    bl,BYTE PTR [ecx]
  424ad6:	sti    
  424ad7:	ins    BYTE PTR es:[edi],dx
  424ad8:	dec    esp
  424ad9:	lahf   
  424ada:	push   ecx
  424adb:	imul   ecx,edx,0xea9d006b
  424ae1:	mov    bh,0xc8
  424ae3:	jmp    0x302ada9e
  424ae8:	push   esp
  424ae9:	and    al,0xfc
  424aeb:	bound  ebp,QWORD PTR [ecx]
  424aed:	push   cs
  424aee:	repz jge 0x424ab2
  424af1:	aaa    
  424af2:	inc    ecx
  424af3:	in     al,dx
  424af4:	mov    dh,0x8f
  424af6:	das    
  424af7:	sub    DWORD PTR [ebp+ecx*4-0x10],esi
  424afb:	pop    edi
  424afc:	stc    
  424afd:	(bad)  
  424afe:	bound  esi,QWORD PTR [eax-0xc]
  424b01:	xlat   BYTE PTR ds:[ebx]
  424b02:	out    0xeb,eax
  424b04:	sub    DWORD PTR ds:0xee15e8a,ebx
  424b0a:	repz push ebp
  424b0c:	les    ebx,FWORD PTR [eax]
  424b0e:	hlt    
  424b0f:	add    BYTE PTR [esi+edi*8],al
  424b12:	push   es
  424b13:	add    BYTE PTR [ebx+eiz*4],bl
  424b16:	mov    ebx,0x75141074
  424b1b:	jo     0x424b11
  424b1d:	mov    eax,ds:0x6
	...
  424b32:	add    BYTE PTR [eax],al
  424b34:	or     al,0xa3
  424b36:	mov    ebx,0x513ed75
  424b3b:	push   0xffffffdd
  424b3d:	adc    ecx,ebp
  424b3f:	(bad)  
  424b40:	fcomp  QWORD PTR [ebx]
  424b42:	mov    esp,0xc3c4925f
  424b47:	ret    0x8efc
  424b4a:	mov    DWORD PTR [ebp-0x4],ecx
  424b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b4e:	retf   
  424b4f:	add    esp,ecx
  424b51:	mov    ?,WORD PTR [ecx]
  424b53:	enter  0x1fd8,0x39
  424b57:	retf   
  424b58:	mov    BYTE PTR [ebx],bl
  424b5a:	xchg   DWORD PTR [ecx+0x8ed4],edx
  424b60:	sbb    DWORD PTR [edi+0x59e43bf1],0x3
  424b67:	data16 mov bh,0xdb
  424b6a:	jo     0x424b79
  424b6c:	pop    ss
  424b6d:	push   ecx
  424b6e:	jmp    0x6693627c
  424b73:	cmp    ebx,DWORD PTR [edi-0x607501a4]
  424b79:	xor    al,0xbb
  424b7b:	(bad)  
  424b7d:	dec    edi
  424b7e:	push   0x1
  424b80:	mov    ah,0x50
  424b82:	add    bh,bh
  424b84:	mov    bl,0x13
  424b86:	inc    edi
  424b87:	and    ah,al
  424b89:	popa   
  424b8a:	and    al,0xeb
  424b8c:	pop    eax
  424b8d:	push   eax
  424b8e:	aas    
  424b8f:	and    al,0x4c
  424b91:	xchg   edi,eax
  424b92:	mov    dl,0x45
  424b94:	test   al,0x81
  424b96:	add    ecx,eax
	...
  424bac:	jp     0x424bbc
  424bae:	mov    esp,0x8dd2b52c
  424bb3:	inc    esp
  424bb4:	leave  
  424bb5:	inc    ecx
  424bb6:	imul   edi,DWORD PTR [edi+0x251a4085],0x12
  424bbd:	loope  0x424b4c
  424bbf:	inc    esp
  424bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bc1:	mov    bl,0xc4
  424bc3:	jae    0x424bf1
  424bc5:	mov    ch,0x39
  424bc7:	or     BYTE PTR [ebp-0x34b3e663],dh
  424bcd:	js     0x424bd3
  424bcf:	je     0x424b8c
  424bd1:	mov    ss,WORD PTR [edi*8+0x44893068]
  424bd8:	jno    0x424b62
  424bda:	mov    bl,0xd0
  424bdc:	ss in  al,dx
  424bde:	or     BYTE PTR [ecx+0x74002c48],al
  424be4:	mov    bl,0x8e
  424be6:	sbb    ch,bh
  424be8:	inc    eax
  424be9:	sbb    al,0x89
  424beb:	inc    esp
  424bec:	or     edi,esp
  424bee:	mov    dl,0xd0
  424bf0:	ss jae 0x424bfb
  424bf3:	std    
  424bf4:	sub    BYTE PTR [ebx],bl
  424bf6:	mov    al,BYTE PTR [edx-0x3b]
  424bf9:	leave  
  424bfa:	xor    DWORD PTR [eax],edx
  424bfc:	loope  0x424c22
  424bfe:	mov    bl,0x72
  424c00:	shr    DWORD PTR [ebx+0x3f08163b],1
  424c06:	test   al,0x9c
  424c08:	test   al,0x36
  424c0a:	add    BYTE PTR [eax+0x76008ef0],al
	...
  424c24:	mov    cl,0x45
  424c26:	shr    al,0xb9
  424c29:	inc    ecx
  424c2a:	outs   dx,BYTE PTR ds:[esi]
  424c2b:	inc    edx
  424c2c:	mov    ebp,0x5e153b9e
  424c31:	sub    al,0xa8
  424c33:	test   BYTE PTR [eax-0x3576ffca],bh
  424c39:	inc    esi
  424c3a:	sub    ch,BYTE PTR [eax+ebp*1]
  424c3d:	nop
  424c3e:	sub    cl,BYTE PTR [esi]
  424c40:	test   DWORD PTR [ecx-0x64d62d26],edi
  424c46:	or     DWORD PTR [ebx+0x30ca73f8],eax
  424c4c:	mov    ecx,0xc1d2c2b9
  424c51:	fldenv [eax+eiz*8]
  424c54:	mov    ch,0x9a
  424c56:	or     DWORD PTR [ebx+0x53f87f6],eax
  424c5c:	gs mov ecx,0x20b4fc91
  424c62:	fwait
  424c63:	push   es
  424c64:	and    BYTE PTR [ecx+0x2837befd],bh
  424c6a:	mov    WORD PTR [esi+0x3e98bd9],?
  424c70:	mov    ch,0xa
  424c72:	cwde   
  424c73:	das    
  424c74:	mov    ebx,0x2e13fb14
  424c79:	or     esi,DWORD PTR [edx-0x4b]
  424c7c:	mov    ecx,0x25b45220
  424c81:	nop
  424c82:	jmp    0x4778be11
  424c87:	mov    ch,0x0
	...
  424c99:	add    BYTE PTR [eax],al
  424c9b:	add    BYTE PTR [ecx-0x55446e0],ah
  424ca1:	imul   eax,DWORD PTR [edx-0x4a],0x3c51be75
  424ca8:	shl    DWORD PTR [eax],cl
  424caa:	xor    eax,edx
  424cac:	out    0x14,eax
  424cae:	ds push esp
  424cb0:	in     al,0xb9
  424cb2:	ins    BYTE PTR es:[edi],dx
  424cb3:	mov    dh,0xe7
  424cb5:	ins    DWORD PTR es:[edi],dx
  424cb6:	(bad)  
  424cb7:	fisub  DWORD PTR [ebp-0x52bfa0e7]
  424cbd:	mov    ecx,0x7fe7b6b6
  424cc2:	add    dh,BYTE PTR [eax]
  424cc4:	shl    DWORD PTR [edi],0x26
  424cc7:	jb     0x424d12
  424cc9:	and    BYTE PTR [ecx],al
  424ccb:	bound  eax,QWORD PTR [esi]
  424ccd:	or     eax,0xbf4b70f3
  424cd2:	call   0xfc65600e
  424cd7:	rcr    BYTE PTR [edx],cl
  424cd9:	pop    ss
  424cda:	inc    esi
  424cdb:	loope  0x424ca9
  424cdd:	lea    ecx,[ebp-0x1738a2ac]
  424ce3:	xchg   ebx,eax
  424ce4:	mov    ah,0x22
  424ce6:	cld    
  424ce7:	fs icebp 
  424ce9:	pushf  
  424cea:	and    eax,0x4323d262
  424cef:	inc    edx
  424cf0:	dec    ebx
  424cf1:	pop    DWORD PTR [edi-0xc00951]
  424cf7:	cmp    BYTE PTR [ecx],bl
  424cf9:	mov    BYTE PTR [edx],ah
  424cfb:	xchg   esi,eax
  424cfc:	sub    BYTE PTR [edi],dl
  424cfe:	fldenv [eax+eax*1+0x0]
	...
  424d12:	add    BYTE PTR [eax],al
  424d14:	cld    
  424d15:	pushf  
  424d16:	mov    eax,0xe7b80f13
  424d1b:	icebp  
  424d1c:	dec    ebx
  424d1d:	and    esi,DWORD PTR [ebp-0x15]
  424d20:	das    
  424d21:	add    DWORD PTR [edi-0x36399c59],0x2b
  424d28:	mov    ebp,0x5d72558f
  424d2d:	sahf   
  424d2e:	in     al,dx
  424d2f:	loope  0x424ce5
  424d31:	pop    DWORD PTR [eax]
  424d33:	pop    esp
  424d34:	sbb    ah,BYTE PTR [edi]
  424d36:	inc    BYTE PTR [esi+0x48]
  424d39:	iret   
  424d3a:	push   0x48fb169
  424d3f:	ret    
  424d40:	mov    dh,0x1c
  424d42:	jbe    0x424d25
  424d44:	int3   
  424d45:	xchg   ebx,eax
  424d46:	call   0xfc61008f
  424d4b:	fs jno 0x424cf1
  424d4e:	jae    0x11c8580a
  424d54:	and    bl,BYTE PTR [esp+edi*8]
  424d57:	add    BYTE PTR [esp+eiz*8],ch
  424d5a:	push   cs
  424d5b:	dec    esp
  424d5c:	ins    DWORD PTR es:[edi],dx
  424d5d:	rol    DWORD PTR [eax],cl
  424d5f:	test   DWORD PTR [esi+ebp*2-0x1773cdfc],ecx
  424d66:	sbb    edi,edi
  424d68:	xchg   ecx,eax
  424d69:	xchg   DWORD PTR [edi-0x319eb7b],eax
  424d6f:	push   DWORD PTR [ebx+edx*1-0x4]
  424d73:	dec    DWORD PTR [ebx+ebp*2]
  424d76:	dec    eax
  424d77:	jns    0x424d79
	...
  424d89:	add    BYTE PTR [eax],al
  424d8b:	add    ah,bl
  424d8d:	xchg   ebx,eax
  424d8e:	push   eax
  424d8f:	push   0x1c
  424d91:	jmp    0x424d37
  424d93:	inc    esi
  424d94:	or     eax,0xdbc07f93
  424d99:	or     eax,0x8b1ec9bc
  424d9e:	add    BYTE PTR [ebp+0x67],dl
  424da1:	test   BYTE PTR [esi-0x23d27bb],0x75
  424da8:	clc    
  424da9:	jecxz  0x424df9
  424dab:	or     BYTE PTR [ecx+0x52],ah
  424dae:	jo     0x424e0c
  424db0:	mov    ds:0x340c6ee4,eax
  424db5:	inc    esi
  424db6:	fdiv   st(6),st
  424db8:	dec    ebx
  424db9:	pop    es
  424dba:	hlt    
  424dbb:	test   DWORD PTR [ebx],ebx
  424dbd:	outs   dx,DWORD PTR ds:[esi]
  424dbe:	inc    ecx
  424dbf:	inc    DWORD PTR [ecx+0xb37fd82]
  424dc5:	mov    ?,WORD PTR [eax+edx*1]
  424dc8:	dec    esp
  424dc9:	xchg   edx,eax
  424dca:	jg     0x424d8c
  424dcc:	push   eax
  424dcd:	xor    al,0x56
  424dcf:	inc    DWORD PTR [ecx-0x72]
  424dd2:	mov    DWORD PTR [ebp-0x68],esi
  424dd5:	adc    eax,0x1a74083f
  424dda:	lea    eax,[eax+0x5c]
  424ddd:	ret    0xb4e8
  424de0:	outs   dx,DWORD PTR ds:[esi]
  424de1:	jecxz  0x424ddf
  424de3:	xor    DWORD PTR [ebp+0x7583036c],0xe
  424dea:	paddw  mm1,mm0
  424ded:	and    BYTE PTR [esi-0x18],cl
	...
  424e04:	(bad)  [eax-0x1]
  424e07:	inc    DWORD PTR [edx-0x65]
  424e0a:	pop    es
  424e0b:	call   0xfcf7a1f6
  424e10:	xchg   ebx,eax
  424e11:	pop    ebp
  424e12:	pushf  
  424e13:	dec    ebx
  424e14:	sar    BYTE PTR ds:0x34a8fcb0,1
  424e1a:	scas   eax,DWORD PTR es:[edi]
  424e1b:	adc    dh,ch
  424e1d:	sbb    DWORD PTR [eax+0x0],eax
  424e20:	jb     0x424e95
  424e22:	ret    0xb50f
  424e25:	cmp    DWORD PTR [ebx-0x15],0x36
  424e29:	push   esp
  424e2a:	and    DWORD PTR [esi+0x28],edx
  424e2d:	arpl   WORD PTR [eax+0x282cb7],bx
  424e33:	add    ch,bl
  424e35:	jb     0x424e31
  424e37:	jmp    edx
  424e39:	mov    al,0xc6
  424e3b:	dec    edi
  424e3c:	fisub  DWORD PTR [edx]
  424e3e:	add    BYTE PTR [ecx],dl
  424e40:	jne    0x424e6a
  424e42:	jge    0x424e86
  424e44:	leave  
  424e45:	mov    dl,0xc4
  424e47:	or     al,0x39
  424e49:	add    DWORD PTR ds:0x5779b500,eax
  424e4f:	mov    esi,DWORD PTR [eax]
  424e51:	imul   DWORD PTR [ecx+edi*4-0x4b]
  424e55:	es add al,ch
  424e58:	xchg   ecx,eax
  424e59:	xor    BYTE PTR [eax],al
  424e5b:	add    BYTE PTR [esi],ch
  424e5d:	test   BYTE PTR [eax+0x7b26f511],bh
  424e63:	(bad)  
  424e64:	in     eax,0x5d
  424e66:	cmp    esp,edi
	...
  424e7c:	cmp    BYTE PTR [ebp+0x7b],0xd7
  424e80:	sub    ah,ch
  424e82:	retf   
  424e83:	mov    bh,0x2e
  424e85:	nop
  424e86:	jmp    0x2b6a038e
  424e8b:	std    
  424e8c:	bound  ebx,QWORD PTR ds:0x1ceacb5f
  424e92:	xchg   ebp,eax
  424e93:	scas   eax,DWORD PTR es:[edi]
  424e94:	push   ecx
  424e95:	inc    esi
  424e96:	jno    0x424ee1
  424e98:	inc    ebp
  424e99:	or     edi,DWORD PTR [ebp-0x45]
  424e9c:	or     bl,ah
  424e9e:	jmp    0x336a03a6
  424ea3:	std    
  424ea4:	xor    bl,BYTE PTR ds:0x1c7aca6f
  424eaa:	push   ebp
  424eab:	mov    al,0x21
  424ead:	inc    esi
  424eae:	pop    ss
  424eaf:	mov    edx,0xd20f182d
  424eb4:	xchg   BYTE PTR [ebx-0x5bfac700],bl
  424eba:	xor    ch,bh
  424ebc:	add    BYTE PTR [esi+esi*1+0x2996cd1c],ah
  424ec3:	add    al,0xdd
  424ec5:	scas   eax,DWORD PTR es:[edi]
  424ec6:	add    al,0x5
  424ec8:	mov    ch,0x1c
  424eca:	cmc    
  424ecb:	push   ebx
  424ecc:	mov    dl,0xcf
  424ece:	jmp    0x676dc64f
  424ed3:	stos   DWORD PTR es:[edi],eax
  424ed4:	shl    DWORD PTR [ebx-0x74b84d0c],1
  424eda:	jp     0x424f14
  424edc:	lods   eax,DWORD PTR ds:[esi]
  424edd:	mov    edi,0x9c1a
	...
  424ef2:	add    BYTE PTR [eax],al
  424ef4:	xlat   BYTE PTR ds:[ebx]
  424ef5:	sbb    eax,0xd23fb26b
  424efa:	popa   
  424efb:	push   ebx
  424efc:	rcl    BYTE PTR ds:[ebp+0x53],cl
  424f00:	jg     0x40daa8c1
  424f06:	gs ret 
  424f08:	push   es
  424f09:	pop    esp
  424f0a:	test   dh,0xc3
  424f0d:	mov    ds:0x8d03941,al
  424f12:	add    DWORD PTR [edx+eax*2-0xc18f2f7],ebp
  424f19:	pop    ebp
  424f1a:	or     BYTE PTR [esi+esi*2-0x60],ch
  424f1e:	add    eax,0x75900e6a
  424f23:	std    
  424f24:	fistp  DWORD PTR ds:0xa032a437
  424f2a:	or     eax,0xfb8b8d06
  424f2f:	je     0x424f6f
  424f31:	int3   
  424f32:	push   ebx
  424f33:	add    esp,ecx
  424f35:	sbb    bh,ah
  424f37:	out    dx,al
  424f38:	js     0x424f48
  424f3a:	ret    
  424f3b:	cmc    
  424f3c:	sbb    DWORD PTR [ecx+0x1b065bf8],edi
  424f42:	jbe    0x424f21
  424f44:	fs shl eax,0xce
  424f48:	retf   0xfc1b
  424f4b:	fdiv   QWORD PTR [edx+0x65e9407e]
  424f51:	mov    dh,0x5a
  424f53:	mov    al,ds:0x860093f3
	...
  424f6c:	add    eax,0x55ff0264
  424f71:	shr    DWORD PTR [ecx+0x47],0x88
  424f75:	inc    ebx
  424f76:	xchg   BYTE PTR [eax-0x4a],cl
  424f79:	push   cs
  424f7a:	or     DWORD PTR [edi],edi
  424f7c:	mov    BYTE PTR [ebx+0xd],dl
  424f7f:	inc    edi
  424f80:	or     BYTE PTR [ebx+0x6e],0xb6
  424f84:	push   ebx
  424f85:	data16 jbe 0x424f87
  424f88:	sbb    eax,0x4ca97efc
  424f8d:	push   esi
  424f8e:	xchg   BYTE PTR [edx+0xc],bl
  424f91:	inc    esp
  424f92:	or     DWORD PTR [edi-0x18],esp
  424f95:	add    edi,DWORD PTR [esi]
  424f97:	lods   al,BYTE PTR ds:[esi]
  424f98:	std    
  424f99:	inc    ebx
  424f9a:	xchg   BYTE PTR ds:0x871fa8,dl
  424fa0:	into   
  424fa1:	mov    al,ds:0xb8be8cc0
  424fa6:	push   ebx
  424fa7:	add    DWORD PTR [edx-0x517a2d70],ebx
  424fad:	mov    BYTE PTR [ebp+0x15],ch
  424fb0:	js     0x424f35
  424fb2:	aam    0xd6
  424fb4:	mov    dh,0x9a
  424fb6:	and    bh,BYTE PTR [edx+0x51]
  424fb9:	inc    esp
  424fba:	adc    BYTE PTR [edx-0x7a3062d6],cl
  424fc0:	dec    esi
  424fc1:	dec    ebp
  424fc2:	mov    WORD PTR [ecx+0x435d88a2],fs
  424fc8:	out    dx,al
  424fc9:	mov    al,ds:0xb82ec857
  424fce:	push   eax
  424fcf:	inc    ebp
	...
  424fe4:	adc    DWORD PTR [eax+ebx*1-0x7b],eax
  424fe8:	(bad)  
  424fe9:	mov    bh,0x55
  424feb:	loope  0x425047
  424fed:	pop    esp
  424fee:	aam    0xb6
  424ff0:	scas   al,BYTE PTR es:[edi]
  424ff1:	dec    ecx
  424ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ff3:	mov    eax,ds:0x7a7d932e
  424ff8:	sti    
  424ff9:	mov    ebx,0xb73ec5c5
  424ffe:	fwait
  424fff:	mov    eax,ds:0xc1644cfe
  425004:	add    cl,0xd4
  425007:	test   ebx,eax
  425009:	xor    al,0xec
  42500b:	jmp    0x9e2e8cd7
  425010:	(bad)  
  425011:	xchg   esi,eax
  425012:	jbe    0x424f99
  425014:	dec    esi
  425015:	pop    ds
  425016:	push   eax
  425017:	test   DWORD PTR [esi],edi
  425019:	mov    bh,0x53
  42501b:	rcr    DWORD PTR [edx],0x58
  42501e:	test   dl,dl
  425020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425021:	mov    ch,0x37
  425023:	push   esi
  425024:	jb     0x424fdd
  425026:	aam    0x8
  425028:	dec    edx
  425029:	arpl   ax,di
  42502b:	aad    0xb5
  42502d:	aas    
  42502e:	(bad)  
  42502f:	cmp    esp,DWORD PTR [ebp-0x442ba717]
  425035:	sbb    al,0x9
  425037:	cmp    al,0x9a
  425039:	xlat   BYTE PTR ds:[ebx]
  42503a:	push   edi
  42503b:	sub    BYTE PTR [ebx+0x683c091c],ch
  425041:	or     bl,BYTE PTR [ecx-0x2c]
  425044:	pop    edx
  425045:	jbe    0x425014
  425047:	dec    edi
	...
  42505c:	adc    al,0xca
  42505e:	push   edx
  42505f:	aam    0x30
  425061:	(bad)  
  425062:	retf   
  425063:	adc    DWORD PTR [eax+0x1e],ebp
  425066:	adc    ch,cl
  425068:	xor    BYTE PTR [esi],dl
  42506a:	call   0xf050:0x54163939
  425071:	stos   BYTE PTR es:[edi],al
  425072:	adc    DWORD PTR [edi-0xc],edx
  425075:	xor    DWORD PTR [esp+eax*4],0xca128e03
  42507c:	lahf   
  42507d:	sub    ecx,edi
  42507f:	adc    esp,DWORD PTR [ebx+eax*2]
  425082:	(bad)  
  425083:	(bad)  
  425084:	push   esp
  425085:	loop   0x42508a
  425087:	sub    DWORD PTR [edx+edi*8],eax
  42508a:	cmp    eax,DWORD PTR [ebp-0x2cea0270]
  425090:	xor    BYTE PTR [edi+eax*8],cl
  425093:	(bad)  
  425094:	adc    al,0xca
  425096:	add    edi,DWORD PTR [eax+ebp*4+0x5fd41440]
  42509d:	adc    DWORD PTR [eax],ecx
  42509f:	ret    0xf5f0
  4250a2:	fmul   DWORD PTR [edi]
  4250a4:	cmp    al,0x89
  4250a6:	iret   
  4250a7:	out    dx,eax
  4250a8:	call   0xe916a444
  4250ad:	sub    bl,bh
  4250af:	out    dx,eax
  4250b0:	sbb    al,0x33
  4250b2:	inc    edx
  4250b3:	cmp    BYTE PTR [edx+0x55],cl
  4250b6:	push   ebx
  4250b7:	adc    dh,BYTE PTR [eax+edx*4+0x3b]
  4250bb:	dec    esp
  4250bc:	xchg   BYTE PTR [eax+0x3393],cl
	...
  4250d2:	add    BYTE PTR [eax],al
  4250d4:	pop    ecx
  4250d5:	int    0x57
  4250d7:	push   edi
  4250d8:	sub    DWORD PTR [ebp+0x63],eax
  4250db:	pop    esi
  4250dc:	call   0x2c8e6d2f
  4250e1:	xor    eax,0x37cbd091
  4250e6:	daa    
  4250e7:	pop    ecx
  4250e8:	cmp    al,0x2c
  4250ea:	imul   esp,DWORD PTR [eax+0x3e99396],0x9e5ac10b
  4250f4:	pop    ebx
  4250f5:	sbb    edx,ebp
  4250f7:	push   esi
  4250f8:	push   eax
  4250f9:	mov    ds:0x360d1be1,eax
  4250fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250ff:	add    eax,DWORD PTR [eax-0x7d]
  425102:	lods   eax,DWORD PTR ds:[esi]
  425103:	adc    eax,0xc8668ff5
  425108:	mov    esi,0x2fa8350a
  42510d:	sbb    ebx,esp
  42510f:	fwait
  425110:	psubsb mm5,mm1
  425113:	add    ecx,DWORD PTR [edi-0x69779b81]
  425119:	sbb    ebx,ecx
  42511b:	scas   al,BYTE PTR es:[edi]
  42511c:	inc    ebx
  42511d:	call   0x27f793c1
  425122:	cmp    esp,ebx
  425124:	stc    
  425125:	sbb    BYTE PTR [ebp-0x3d],ch
  425128:	data16 mov bl,BYTE PTR [esi-0x3b]
  42512c:	(bad)
  425131:	mov    ds:0x251af1a0,al
  425136:	add    ebx,DWORD PTR [edx]
	...
  42514c:	test   eax,0xc835650a
  425151:	sbb    BYTE PTR [ebx+0x6c8f4f53],al
  425157:	cmp    cl,ah
  425159:	or     al,0x1
  42515b:	mov    eax,ds:0xe7ec3063
  425160:	pop    ebx
  425161:	sbb    eax,DWORD PTR [esi-0x788b2fd7]
  425167:	daa    
  425168:	push   es
  425169:	test   al,0x90
  42516b:	aas    
  42516c:	test   DWORD PTR [edi+0x177a648d],0x27e646fc
  425176:	pushf  
  425177:	inc    eax
  425178:	dec    eax
  425179:	sbb    eax,DWORD PTR [esi-0x3f028cd7]
  42517f:	gs jbe 0x42511f
  425182:	or     edx,ebx
  425184:	jbe    0x425138
  425186:	mov    DWORD PTR [edx+ebp*2+0x17],esp
  42518a:	cld    
  42518b:	push   ss
  42518c:	and    ebx,DWORD PTR [ebp-0x74]
  42518f:	aaa    
  425190:	test   DWORD PTR [edi+0x17726c8d],0x1ae7fefc
  42519a:	push   ss
  42519b:	popf   
  42519c:	(bad)  
  42519d:	iret   
  42519e:	add    BYTE PTR [esi+esi*8+0x4],ah
  4251a2:	xchg   ch,cl
  4251a4:	push   edx
  4251a5:	sbb    edi,esp
  4251a7:	push   ebp
  4251a8:	push   ds
  4251a9:	push   edx
  4251aa:	add    ecx,ebp
  4251ac:	jbe    0x425178
  4251ae:	jne    0x425180
	...
  4251c4:	sub    al,0x2
  4251c6:	ret    
  4251c7:	jmp    0x348e2182
  4251cc:	dec    esi
  4251cd:	call   0x50c567d3
  4251d2:	mov    edi,0x87bcb6e5
  4251d7:	xchg   ebp,eax
  4251d8:	ss and al,0x75
  4251db:	out    0xb6,eax
  4251dd:	(bad)  
  4251de:	dec    edi
  4251df:	aas    
  4251e0:	les    esi,FWORD PTR [esi]
  4251e2:	push   esp
  4251e3:	pop    esp
  4251e4:	or     BYTE PTR [ebx-0x47],0x0
  4251e8:	jns    0x42517d
  4251ea:	add    BYTE PTR [eax],al
  4251ec:	inc    esp
  4251ed:	enter  0xe8fd,0x6d
  4251f1:	mov    WORD PTR [eax],es
  4251f3:	add    BYTE PTR [edi],dl
  4251f5:	dec    esi
  4251f6:	dec    esp
  4251f7:	jmp    DWORD PTR [ecx-0x73bfee6d]
  4251fd:	call   0x840d:0x50a7f43e
  425204:	mov    WORD PTR ds:[eax],es
  425207:	add    BYTE PTR [ecx],cl
  425209:	lods   al,BYTE PTR ds:[si]
  42520b:	mov    eax,0x8bfa
  425210:	hlt    
  425211:	dec    ecx
  425212:	push   es
  425213:	add    BYTE PTR [eax+ebx*4-0x3c],bl
  425217:	push   eax
  425218:	fwait
  425219:	pop    esi
  42521a:	hlt    
  42521b:	jmp    DWORD PTR [ecx-0x21]
  42521e:	adc    DWORD PTR [eax+0x5c],eax
  425221:	sub    cl,al
  425223:	je     0x425248
  425225:	xchg   esi,eax
  425226:	inc    esi
  425227:	clc    
	...
  42523c:	sbb    eax,0x39a08696
  425241:	in     al,0xfc
  425243:	push   ecx
  425244:	jecxz  0x425214
  425246:	clc    
  425247:	add    al,0x1d
  425249:	xchg   ebx,eax
  42524a:	add    bh,bh
  42524c:	pop    esp
  42524d:	adc    ah,dh
  42524f:	add    DWORD PTR [ecx-0x7b7a783b],eax
  425255:	out    0xfc,eax
  425257:	dec    esp
  425259:	jns    0x425256
  42525b:	imul   edi,ebx,0x3b530578
  425261:	jle    0x4252b7
  425263:	adc    ebx,DWORD PTR [ebx+ecx*4-0x325e3f81]
  42526a:	xchg   DWORD PTR [ebp-0x31a94],eax
  425270:	pushf  
  425271:	in     al,0xe
  425273:	cld    
  425274:	mov    ch,0x1a
  425276:	inc    eax
  425277:	add    BYTE PTR [ebp-0x51],ah
  42527a:	inc    edx
  42527b:	clc    
  42527c:	xor    BYTE PTR [edi+eax*4+0x4f95baf8],ah
  425283:	mov    edi,DWORD PTR [eax]
  425285:	enter  0xfcaa,0xaa
  425289:	js     0x425238
  42528b:	adc    bl,BYTE PTR [ecx+0x19]
  42528e:	inc    eax
  42528f:	add    BYTE PTR [eax],dh
  425291:	push   0xe33e1b32
  425296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425297:	mov    dh,BYTE PTR [ecx]
  425299:	jmp    0x425222
  42529b:	clc    
  42529c:	or     ch,0x4f
  42529f:	add    DWORD PTR [eax],0x0
	...
  4252b1:	add    BYTE PTR [eax],al
  4252b3:	add    BYTE PTR [ebp+0x55],ch
  4252b6:	jp     0x42526a
  4252b8:	dec    ebp
  4252b9:	popa   
  4252ba:	lods   al,BYTE PTR ds:[esi]
  4252bb:	cld    
  4252bc:	pop    ebp
  4252bd:	aam    0x4
  4252bf:	std    
  4252c0:	bound  esp,QWORD PTR [esi+0x42]
  4252c3:	std    
  4252c4:	mov    ah,0x75
  4252c6:	xor    dh,ah
  4252c8:	push   edx
  4252c9:	adc    eax,DWORD PTR [ecx+edx*1]
  4252cc:	cmc    
  4252cd:	sub    al,ch
  4252cf:	pop    edx
  4252d0:	inc    edx
  4252d1:	xchg   ebx,eax
  4252d2:	add    al,0x32
  4252d4:	jne    0x425355
  4252d6:	xor    edi,edi
  4252d8:	xor    ch,BYTE PTR [eax]
  4252da:	js     0x425336
  4252dc:	sub    ch,BYTE PTR [edi+0x6062e84a]
  4252e2:	sub    eax,0x41a3b540
  4252e7:	call   0xe483fe51
  4252ec:	gs mov bl,0x41
  4252ef:	lock gs ret 0x8aa7
  4252f4:	jo     0x425346
  4252f6:	push   ebp
  4252f7:	push   0xffffffb7
  4252f9:	jns    0x42534e
  4252fb:	xchg   DWORD PTR [eax-0x6eed5820],ecx
  425301:	(bad)  
  425302:	test   BYTE PTR [ebx-0x4b],0x8
  425306:	and    eax,0x1e528d98
  42530b:	dec    DWORD PTR [edi-0x4afc15d7]
  425311:	xchg   BYTE PTR [eax+eiz*4-0x46],ch
  425315:	adc    eax,0xecea
	...
  42532a:	add    BYTE PTR [eax],al
  42532c:	(bad)  
  42532e:	jecxz  0x4253af
  425330:	js     0x4252c2
  425332:	jmp    0x2160373a
  425337:	dec    ecx
  425338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425339:	test   DWORD PTR [ebx+0x6e],esp
  42533c:	xchg   edx,eax
  42533d:	adc    eax,0x1bf778ea
  425342:	mov    edx,0xd017f77e
  425347:	adc    bh,BYTE PTR [eax+0x5c]
  42534a:	jns    0x4253a3
  42534c:	jo     0x4253c9
  42534e:	std    
  42534f:	push   ss
  425350:	cmc    
  425351:	(bad)  
  425352:	les    esi,FWORD PTR fs:[ecx-0x4afb82f6]
  425359:	(bad)  
  42535a:	outs   dx,BYTE PTR ds:[esi]
  42535b:	inc    ecx
  42535c:	dec    ecx
  42535d:	pop    ecx
  42535e:	es sti 
  425360:	ss or  ch,dl
  425363:	add    esi,DWORD PTR [ebp+0x3f647502]
  425369:	adc    eax,0xa03054fb
  42536e:	fstp   DWORD PTR [ebx-0x55159b51]
  425374:	ss push eax
  425376:	pop    esi
  425377:	sbb    ch,BYTE PTR [esi]
  425379:	or     eax,DWORD PTR [edx+0x3a1511ae]
  42537f:	jns    0x4253b8
  425381:	lock int3 
  425383:	stos   BYTE PTR es:[edi],al
  425384:	add    eax,eax
  425386:	sbb    DWORD PTR [edx+ebx*8+0x37aabc1c],ebx
  42538d:	push   eax
  42538e:	add    DWORD PTR ds:0x0,edi
	...
  4253a4:	xchg   DWORD PTR [eax],ecx
  4253a6:	xchg   BYTE PTR [ecx+0x39fc140d],cl
  4253ac:	cmp    ebx,edx
  4253ae:	add    eax,ebp
  4253b0:	mov    dh,0xb
  4253b2:	rcr    DWORD PTR ds:0x79860877,0x11
  4253b9:	adc    al,0xfc
  4253bb:	sbb    DWORD PTR [ecx-0x4d16fef1],ebx
  4253c1:	mov    ebx,0x1a166c8d
  4253c6:	cld    
  4253c7:	outs   dx,BYTE PTR ds:[esi]
  4253c8:	push   es
  4253c9:	mov    edi,0x14f1e4e8
  4253ce:	cld    
  4253cf:	fs jbe 0x425372
  4253d2:	sub    BYTE PTR [edx+0x5091120d],bh
  4253d8:	dec    edi
  4253d9:	adc    edx,DWORD PTR [ecx-0x66]
  4253dc:	push   ds
  4253dd:	scas   al,BYTE PTR es:[edi]
  4253de:	sbb    cl,ch
  4253e0:	mov    dh,0xb
  4253e2:	sar    DWORD PTR [ebp+0x598608c4],0x11
  4253e9:	adc    edi,esp
  4253eb:	mov    ecx,0x1ef4d1db
  4253f0:	xchg   BYTE PTR [edi-0x3e],bh
  4253f3:	lods   al,BYTE PTR ds:[esi]
  4253f4:	pop    ds
  4253f5:	adc    eax,0x1313c5e4
  4253fa:	cld    
  4253fb:	push   es
  4253fc:	test   DWORD PTR [ebx],ebx
  4253fe:	cld    
  4253ff:	aam    0x26
  425401:	jg     0x425443
  425403:	jmp    0xf9b7aa7c
	...
  42541c:	sbb    al,0xe
  42541e:	inc    ebx
  42541f:	out    0x4c,al
  425421:	adc    edi,esp
  425423:	push   esp
  425424:	popa   
  425425:	adc    edx,DWORD PTR [esi]
  425427:	sbb    DWORD PTR [eax-0x2597ff31],esp
  42542d:	and    esp,edi
  42542f:	add    BYTE PTR [eax+edx*4],cl
  425432:	add    BYTE PTR [edi],cl
  425434:	pop    eax
  425435:	repnz std 
  425437:	jmp    DWORD PTR [ebx]
  425439:	pushf  
  42543a:	jle    0x4253d4
  42543c:	daa    
  42543d:	out    0xfc,al
  42543f:	push   eax
  425440:	(bad)  
  425441:	nop
  425442:	jmp    WORD PTR [esi+ecx*4-0x4523ff80]
  42544a:	std    
  42544b:	adc    eax,0x407a88
  425450:	dec    ecx
  425451:	dec    ebx
  425452:	outs   dx,DWORD PTR ds:[esi]
  425453:	xor    al,0x21
  425455:	xchg   ebx,eax
  425456:	mov    edi,ecx
  425458:	and    ebp,ecx
  42545a:	dec    ebx
  42545b:	push   0x4008c0c
  425460:	pop    ebx
  425461:	call   0x50fc:0xe917987e
  425468:	dec    edi
  425469:	div    eax
  42546b:	inc    eax
  42546c:	lea    ecx,[edi-0x7ec73f81]
  425472:	push   ecx
  425473:	(bad)  
  425474:	fsincos 
  425476:	bnd jmp DWORD PTR [ebx-0x3b17ae45]
  42547d:	add    BYTE PTR [eax],0x0
	...
  425494:	enter  0x704b,0x4
  425498:	call   0xfd52:0xd601fd52
  42549f:	pop    edi
  4254a0:	adc    al,ah
  4254a2:	ret    
  4254a3:	ret    
  4254a4:	sbb    DWORD PTR [edi+eiz*8+0xd0fc081],edx
  4254ab:	add    BYTE PTR [esp+edi*4],bl
  4254ae:	push   edx
  4254af:	push   edi
  4254b0:	and    DWORD PTR [edx-0x17ec0905],0x8f39ece3
  4254ba:	add    BYTE PTR [edx-0x4b],ch
  4254bd:	adc    al,0x73
  4254bf:	and    BYTE PTR [edi],0x41
  4254c2:	test   eax,0xbca565fc
  4254c7:	cld    
  4254c8:	pop    edi
  4254c9:	sub    BYTE PTR [ebx-0x4e],dh
  4254cc:	push   ebp
  4254cd:	fldcw  WORD PTR [eax-0x6819d104]
  4254d3:	or     esi,DWORD PTR [ecx-0xa7d5717]
  4254d9:	jb     0x4254de
  4254db:	mov    ebx,esi
  4254dd:	pop    eax
  4254de:	sbb    al,0x90
  4254e0:	jmp    0x425547
  4254e2:	add    al,0x8b
  4254e4:	xor    BYTE PTR [ecx],ch
  4254e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254e7:	cld    
  4254e8:	mov    dl,0x78
  4254ea:	pushf  
  4254eb:	mov    ebx,0x82a89aa3
  4254f0:	jne    0x425523
  4254f2:	mov    edi,DWORD PTR [edi+0x72a6831]
	...
  42550c:	(bad)  
  42550d:	push   0x28308721
  425512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425513:	cld    
  425514:	sub    BYTE PTR [ebp-0x17593c1e],0xff
  42551b:	mov    bh,BYTE PTR [eax]
  42551d:	sub    BYTE PTR [esp+edi*8-0x2b570796],ah
  425524:	iret   
  425525:	cmp    al,0x73
  425527:	and    BYTE PTR [edi],0x70
  42552a:	test   al,0xfc
  42552c:	in     eax,0xfe
  42552e:	dec    DWORD PTR [edx-0x3f834740]
  425534:	dec    ebp
  425535:	ret    0xfd04
  425538:	cmp    ah,BYTE PTR [ebx-0x622f8241]
  42553e:	ror    DWORD PTR [edi-0x63],0xc0
  425542:	mov    DWORD PTR [eax-0x4b],0x1cf77ab3
  425549:	(bad)  
  42554a:	loop   0x4254f3
  42554c:	and    BYTE PTR [edi],0x4c
  42554f:	scas   al,BYTE PTR es:[edi]
  425550:	or     BYTE PTR [edx],dl
  425552:	ins    DWORD PTR es:[edi],dx
  425553:	les    esi,FWORD PTR [ecx+0x3a80a9fc]
  425559:	pushf  
  42555a:	lock repnz xor ch,BYTE PTR [ecx+0x17e28170]
  425562:	mov    bl,0xa7
  425564:	das    
  425565:	or     al,0xb2
  425567:	lods   eax,DWORD PTR ds:[esi]
  425568:	fst    DWORD PTR [ecx]
  42556a:	cmp    ah,BYTE PTR [edi-0x82aee17]
	...
  425584:	out    dx,eax
  425585:	int    0xe9
  425587:	sub    BYTE PTR [edi-0x4abc4ca1],0x8d
  42558e:	adc    BYTE PTR [ecx],0x81
  425591:	jle    0x4255bc
  425593:	add    al,0x4a
  425595:	adc    BYTE PTR [ebx+eax*2+0x30a654b5],0xad
  42559d:	mov    esp,0x3fa7a6b9
  4255a2:	clc    
  4255a3:	inc    ebx
  4255a4:	mov    ch,0x27
  4255a6:	arpl   WORD PTR [eax],di
  4255a8:	mov    ch,0x8f
  4255aa:	pop    esp
  4255ab:	jns    0x425627
  4255ad:	adc    eax,0x9c5aa743
  4255b2:	jmp    0x65450abb
  4255b7:	lods   al,BYTE PTR ds:[esi]
  4255b8:	imul   edx,DWORD PTR [ecx],0x2b
  4255bb:	pushf  
  4255bc:	ror    DWORD PTR [edi+0x7bdf03e8],cl
  4255c2:	ins    BYTE PTR es:[edi],dx
  4255c3:	and    DWORD PTR [eax+ebx*1+0x13],0xe9a5f2a7
  4255cb:	js     0x425594
  4255cd:	pop    es
  4255ce:	outs   dx,DWORD PTR ds:[esi]
  4255cf:	ret    
  4255d0:	sbb    bl,BYTE PTR [ecx-0x1a]
  4255d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255d4:	sub    DWORD PTR [ebx],ecx
  4255d6:	add    DWORD PTR [ecx],ebp
  4255d8:	fld    TBYTE PTR [eax-0x73]
  4255db:	je     0x4255cb
  4255dd:	fdiv   DWORD PTR [ebx-0x17704917]
  4255e3:	les    esi,FWORD PTR [edi+0x64008f]
	...
  4255f9:	add    BYTE PTR [eax],al
  4255fb:	add    BYTE PTR [ebp+0x7],dh
  4255fe:	push   ecx
  4255ff:	bound  edi,QWORD PTR [eax]
  425601:	ror    DWORD PTR [ebp-0x3e2e194],0xbe
  425608:	xchg   BYTE PTR [edi],ah
  42560a:	fdivr  DWORD PTR [eax+ebx*1-0x1c5679ec]
  425611:	std    
  425612:	shr    BYTE PTR [ebp-0xa],0x9d
  425616:	or     edx,ebx
  425618:	imul   BYTE PTR [edx+0x1d0e6c89]
  42561e:	cld    
  42561f:	mov    ?,WORD PTR ds:0x5b7df90d
  425625:	adc    edx,DWORD PTR [ecx+0x11]
  425628:	mov    al,0x8f
  42562a:	add    BYTE PTR [ecx+0x5b],ch
  42562d:	jge    0x425697
  42562f:	(bad)  
  425631:	pop    DWORD PTR [edi+0x407d8d1c]
  425637:	jmp    0x52336449
  42563c:	pop    ebx
  42563d:	adc    edx,DWORD PTR [ecx+0x5c]
  425640:	xor    eax,0x1b46f810
  425645:	sar    bl,0x17
  425648:	in     eax,dx
  425649:	or     eax,0x131b3709
  42564e:	push   ecx
  42564f:	pop    esp
  425650:	xor    eax,0x1b26fa18
  425655:	sar    bl,0x37
  425658:	int    0xd5
  42565a:	adc    BYTE PTR [esi],dl
  42565c:	sbb    edx,DWORD PTR [ebx]
  42565e:	mov    ecx,0x72
	...
  425673:	add    BYTE PTR [esi-0x3bffff71],dh
  425679:	into   
  42567a:	add    DWORD PTR [eax],eax
  42567c:	sbb    al,0x97
  42567e:	jle    0x425688
  425680:	sub    ch,dl
  425682:	cld    
  425683:	push   eax
  425684:	jns    0x425695
  425686:	in     al,dx
  425687:	clc    
  425688:	sbb    ebp,edx
  42568a:	dec    ebx
  42568b:	lea    edx,[ecx-0x140001ed]
  425691:	mov    edx,0xe2dc8587
  425696:	cld    
  425697:	dec    esp
  425699:	xchg   esi,eax
  42569a:	les    edx,FWORD PTR [eax+0x6b]
  42569d:	pop    edi
  42569e:	add    al,0x0
  4256a0:	int3   
  4256a1:	cwde   
  4256a2:	scas   al,BYTE PTR es:[edi]
  4256a3:	sbb    BYTE PTR [edx+ebp*8],0xfc
  4256a7:	call   0x3f6e83
  4256ac:	pop    edi
  4256ad:	dec    edi
  4256ae:	adc    BYTE PTR [ebp-0x74f796f4],al
  4256b4:	adc    bh,BYTE PTR [ebx-0x6d693118]
  4256ba:	add    BYTE PTR [ecx],bh
  4256bc:	mov    DWORD PTR [ebx-0x4173bc29],esp
  4256c2:	or     BYTE PTR [edx-0x74],ch
  4256c5:	xor    al,0xf
  4256c7:	clc    
  4256c8:	mov    WORD PTR [ebx+0x0],ss
  4256cb:	mov    ecx,0x92fa
  4256d0:	sbb    DWORD PTR [edi+0x34ebf6fb],ecx
  4256d6:	mov    BYTE PTR [eax],0x0
	...
  4256e9:	add    BYTE PTR [eax],al
  4256eb:	add    BYTE PTR [ebx+edx*2+0x43],bl
  4256ef:	jne    0x4256e6
  4256f1:	push   esp
  4256f2:	pop    edx
  4256f3:	mov    al,0x4d
  4256f5:	pop    eax
  4256f6:	ret    
  4256f7:	ret    
  4256f8:	mov    ds:0x5d04244f,al
  4256fd:	pop    ebp
  4256fe:	mov    ecx,esi
  425700:	xchg   ebx,eax
  425701:	or     eax,0x38b54f7c
  425706:	add    BYTE PTR [ebx+esi*4+0x46],dh
  42570a:	cwde   
  42570b:	(bad)  
  42570d:	xchg   ebp,eax
  42570e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42570f:	mov    bl,dh
  425711:	cs ret 0xb503
  425715:	sub    edi,DWORD PTR [ecx-0x15]
  425718:	ss xchg ebp,eax
  42571a:	lods   al,BYTE PTR ds:[esi]
  42571b:	jle    0x42573e
  42571d:	inc    ebp
  42571e:	idiv   edi
  425720:	or     cl,dl
  425722:	dec    edx
  425723:	push   ebp
  425724:	xor    BYTE PTR ds:0xf8b597dc,ah
  42572a:	push   DWORD PTR [edi-0x6e7]
  425730:	cmp    al,0xbd
  425732:	loopne 0x425743
  425734:	int    0x61
  425736:	add    DWORD PTR [eax],eax
  425738:	mov    ch,0x3d
  42573a:	sub    edx,DWORD PTR [eax]
  42573c:	ds push esp
  42573e:	cld    
  42573f:	cld    
  425740:	inc    eax
  425741:	cld    
  425742:	js     0x425718
  425744:	dec    edi
  425745:	jecxz  0x42578e
  425747:	mov    esi,ebp
  425749:	adc    BYTE PTR [edi-0x27],dl
  42574c:	mov    dl,0x15
  42574e:	jl     0x42570f
	...
  425764:	and    ebx,edx
  425766:	lock mov edi,0x242373f5
  42576c:	in     eax,dx
  42576d:	adc    BYTE PTR [edx-0x438a6c0b],bh
  425773:	inc    ebx
  425774:	rol    DWORD PTR [eax+0x44],1
  425777:	ja     0x42576e
  425779:	clc    
  42577a:	fs psrld mm7,mm0
  42577e:	(bad)  
  42577f:	call   0x247e2676
  425784:	leave  
  425785:	cwde   
  425786:	sub    ecx,DWORD PTR [esi]
  425788:	imul   edi,DWORD PTR [esp+ebx*8],0x1b
  42578c:	mov    ah,0x44
  42578e:	das    
  42578f:	adc    ecx,0x4ae3cd8f
  425795:	sbb    dl,0xf1
  425798:	add    dl,BYTE PTR [ebx]
  42579a:	sub    dh,ah
  42579c:	aaa    
  42579d:	and    edx,ebp
  42579f:	add    esi,DWORD PTR [ebp-0x2165d63f]
  4257a5:	nop
  4257a6:	jmp    0x6e5ee2ae
  4257ab:	(bad)  
  4257ad:	(bad)
  4257b1:	sbb    al,0x6e
  4257b3:	call   0x42be742
  4257b8:	gs sbb al,0x2e
  4257bb:	call   0x5a7f4f56
  4257c0:	icebp  
  4257c1:	or     eax,0xea67c9ff
  4257c6:	outs   dx,DWORD PTR ds:[esi]
  4257c7:	dec    eax
	...
  4257dc:	cdq    
  4257dd:	jle    0x4257ec
  4257df:	and    esp,DWORD PTR [ecx-0x6d]
  4257e2:	in     eax,dx
  4257e3:	inc    BYTE PTR [edi-0x22]
  4257e6:	in     eax,0xfe
  4257e8:	inc    esi
  4257e9:	pop    ecx
  4257ea:	outs   dx,BYTE PTR ds:[esi]
  4257eb:	pop    es
  4257ec:	dec    ebp
  4257ed:	(bad)  
  4257ee:	loope  0x4257f3
  4257f0:	mov    ch,0x1c
  4257f2:	pop    esi
  4257f3:	call   0x42be786
  4257f8:	cli    
  4257f9:	sbb    BYTE PTR [edi+0x5e93f2a3],ch
  4257ff:	xchg   esp,eax
  425800:	aaa    
  425801:	push   es
  425802:	icebp  
  425803:	pop    ebx
  425804:	xchg   ecx,eax
  425805:	mov    ds:0x8fcaf935,eax
  42580a:	sbb    al,0xd7
  42580c:	(bad)  [edi+0x131f18e9]
  425812:	push   esp
  425813:	sbb    BYTE PTR [ebx+0x65],cl
  425816:	je     0x425860
  425818:	xchg   ecx,eax
  425819:	scas   eax,DWORD PTR es:[edi]
  42581a:	cdq    
  42581b:	mov    ?,edi
  42581d:	lahf   
  42581e:	add    bl,al
  425820:	push   ecx
  425821:	sbb    al,dh
  425823:	inc    ecx
  425824:	xor    eax,0x3c26fbe7
  425829:	dec    ebp
  42582a:	or     al,0x65
  42582c:	mov    cs,WORD PTR [edx]
  42582e:	cld    
  42582f:	push   ss
  425830:	or     BYTE PTR [ebx+edi*8-0x36baa9f2],al
  425837:	jmp    0xc0a4e7f2
  42583c:	jp     0x4257f1
  42583e:	ins    BYTE PTR es:[edi],dx
  42583f:	rol    DWORD PTR [eax],cl
	...
  425851:	add    BYTE PTR [eax],al
  425853:	add    dh,dh
  425855:	or     al,cl
  425857:	add    bh,bl
  425859:	or     bh,ah
  42585b:	out    0x3b,al
  42585d:	and    DWORD PTR [ecx+edi*8],0x6c046333
  425864:	inc    eax
  425865:	sbb    DWORD PTR [eax],0x879fcdce
  42586b:	mov    dl,0x17
  42586d:	or     BYTE PTR [ebx+edx*2],0xac
  425871:	addr16 call 0xfc4e71ee
  425877:	neg    BYTE PTR gs:[ebx+0xc163284]
  42587e:	cld    
  42587f:	adc    ecx,ecx
  425881:	sbb    DWORD PTR [ebp-0x33],edi
  425884:	mov    esi,0xb966e864
  425889:	pop    DWORD PTR [eax]
  42588b:	adc    esi,DWORD PTR [edx+0x57f1730a]
  425891:	add    BYTE PTR [esp+eiz*2],0x2
  425895:	mov    cl,0xe4
  425897:	jmp    0x842ae852
  42589c:	pop    ss
  42589d:	or     eax,0x156f72fc
  4258a2:	test   DWORD PTR ds:0xe9fc0c49,ecx
  4258a8:	push   ds
  4258a9:	add    BYTE PTR gs:[eax],al
  4258ac:	pop    esp
  4258ad:	nop
  4258ae:	mov    eax,esi
  4258b0:	fldenv [esi]
  4258b2:	jo     0x4258cb
  4258b4:	cmp    bl,BYTE PTR ds:0x50c5
	...
  4258ca:	add    BYTE PTR [eax],al
  4258cc:	icebp  
  4258cd:	adc    al,0x20
  4258cf:	loopne 0x42592d
  4258d1:	nop
  4258d2:	add    BYTE PTR [eax-0x5c],dl
  4258d5:	clc    
  4258d6:	mov    ebx,0xe8c64c00
  4258db:	arpl   WORD PTR [eax],sp
  4258dd:	xor    ebp,edi
  4258df:	lea    ebx,[eax+0xc00d3f4]
  4258e5:	nop
  4258e6:	push   eax
  4258e7:	call   FWORD PTR [ecx-0x7bb7700]
  4258ed:	pop    es
  4258ee:	std    
  4258ef:	jne    0x4258f1
  4258f1:	ret    
  4258f2:	std    
  4258f3:	jo     0x4258f9
  4258f5:	cmp    BYTE PTR [esi-0x23],dh
  4258f8:	jecxz  0x425927
  4258fa:	mov    DWORD PTR [eax+edi*4-0x230004bd],esi
  425901:	sbb    al,0xb8
  425903:	and    al,0x14
  425905:	xchg   ebx,eax
  425906:	add    BYTE PTR [eax],al
  425908:	hlt    
  425909:	fdivr  QWORD PTR [eax+eax*1+0xff614dc]
  425910:	dec    ecx
  425911:	rcr    DWORD PTR [esi+ebx*2+0x77],cl
  425915:	sbb    bl,bh
  425917:	pop    ebp
  425918:	push   cs
  425919:	lahf   
  42591a:	add    BYTE PTR [ebp+0x17],dl
  42591d:	inc    eax
  42591e:	jnp    0x42590c
  425920:	fcom   DWORD PTR [ecx-0x3a410000]
  425926:	push   ebp
  425927:	(bad)  
  425928:	(bad)  
  42592a:	idiv   bh
  42592c:	and    edi,DWORD PTR [ebx+ebp*1]
  42592f:	mov    ds:0x0,al
	...
  425944:	pushf  
  425945:	(bad)  
  425946:	xor    ebx,ebx
  425948:	adc    DWORD PTR [ebx-0x50],edx
  42594b:	push   eax
  42594c:	mov    ch,0x6f
  42594e:	cmp    esi,eax
  425950:	cmp    al,0x3c
  425952:	lods   al,BYTE PTR ds:[esi]
  425953:	xchg   BYTE PTR [eax],cl
  425955:	int    0x87
  425957:	pop    edx
  425958:	pop    ebp
  425959:	cmp    BYTE PTR [ebx],0xfc
  42595c:	dec    ebp
  42595d:	push   ss
  42595e:	frndint 
  425960:	push   edx
  425961:	rcl    esi,cl
  425963:	pop    edx
  425964:	add    eax,0xf88ad02d
  425969:	push   0xacf08b34
  42596e:	xor    al,0xe8
  425970:	imul   ecx,DWORD PTR [esi],0xb9310000
  425976:	sbb    BYTE PTR ds:0xfc9b8422,bl
  42597c:	mov    al,ds:0x4ad0a80c
  425981:	stc    
  425982:	(bad)  
  425983:	cld    
  425984:	sub    ah,0x86
  425987:	inc    edx
  425988:	add    eax,0xfa18c6e1
  42598d:	loope  0x425915
  42598f:	pop    edx
  425990:	jmp    0x3d3a9404
  425995:	mov    ah,0xa0
  425997:	mov    bh,BYTE PTR [eax]
  425999:	xor    eax,0xa8dafc9b
  42599e:	mov    eax,DWORD PTR [edx-0x37]
  4259a1:	test   al,0xac
  4259a3:	jle    0x425a03
  4259a5:	clc    
  4259a6:	inc    DWORD PTR [ebx+0x0]
	...
  4259bc:	cmc    
  4259bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259be:	add    ebp,edi
  4259c0:	inc    eax
  4259c1:	and    al,0xa1
  4259c3:	jb     0x42596e
  4259c5:	adc    BYTE PTR [eax-0x4c],ah
  4259c8:	mov    ch,0xf8
  4259ca:	mov    al,ds:0x427fa972
  4259cf:	in     al,dx
  4259d0:	lea    ebp,[edx-0x4]
  4259d3:	cld    
  4259d4:	xchg   edx,eax
  4259d5:	outs   dx,DWORD PTR ds:[esi]
  4259d6:	cmp    dh,ah
  4259d8:	cmp    al,0x8f
  4259da:	les    ebx,FWORD PTR [ebx-0x5fa293c5]
  4259e0:	pop    es
  4259e1:	add    al,0x42
  4259e3:	xchg   ch,cl
  4259e5:	or     cl,BYTE PTR [ebx+0x2d]
  4259e8:	mov    edx,0xabfc51c
  4259ed:	clc    
  4259ee:	call   0x614e:0x5e8fb503
  4259f5:	(bad)  
  4259f6:	push   ds
  4259f7:	pop    ebx
  4259f8:	mov    ds:0xb003a984,al
  4259fd:	push   ebx
  4259fe:	xor    edx,ebx
  425a00:	(bad)  
  425a02:	mov    eax,0x19547610
  425a07:	xor    ebp,DWORD PTR [eax]
  425a09:	inc    esp
  425a0a:	(bad)  
  425a0b:	mov    eax,ds:0xc86f0a21
  425a10:	push   0x1c
  425a12:	lods   eax,DWORD PTR ds:[esi]
  425a13:	stos   DWORD PTR es:[edi],eax
  425a14:	gs pop edi
  425a16:	add    edi,edi
  425a18:	sti    
  425a19:	or     ebx,esp
  425a1b:	xor    esi,0xffffffa6
  425a1e:	ficomp DWORD PTR [ecx]
	...
  425a34:	add    eax,0x76acda16
  425a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a3a:	retf   0xe99f
  425a3d:	adc    ebp,0xffffffac
  425a40:	sahf   
  425a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a42:	mov    edx,0xcee8e19f
  425a47:	xchg   ebp,eax
  425a48:	leave  
  425a49:	loopne 0x425a51
  425a4b:	sbb    ebp,ebx
  425a4d:	inc    esp
  425a4e:	xchg   esp,eax
  425a4f:	add    eax,0xc66e8fb5
  425a54:	das    
  425a55:	sbb    al,0xaa
  425a57:	mov    eax,ds:0xfd6209b1
  425a5c:	jmp    0x425ab3
  425a5e:	cld    
  425a5f:	cdq    
  425a60:	add    DWORD PTR [edx+0x1e],ebp
  425a63:	int    0x75
  425a65:	cdq    
  425a66:	add    BYTE PTR [esi],bh
  425a68:	jns    0x425a80
  425a6a:	add    eax,0x405a41a4
  425a6f:	jmp    0x307239db
  425a74:	rol    esi,cl
  425a76:	push   eax
  425a77:	jmp    0x425a40
  425a79:	mov    al,ds:0x93a16252
  425a7e:	or     edi,DWORD PTR [esi+0x48]
  425a81:	pop    ss
  425a82:	adc    eax,0x2e9984fb
  425a87:	sbb    al,bh
  425a89:	pop    ss
  425a8a:	adc    eax,0x48c690ef
  425a8f:	jmp    0x425a35
  425a91:	lock pop edx
  425a93:	out    dx,al
  425a94:	jecxz  0x425a5e
  425a96:	(bad)  
  425a97:	add    BYTE PTR cs:[eax],al
	...
  425aaa:	add    BYTE PTR [eax],al
  425aac:	mov    ebp,0xba2a00c7
  425ab1:	inc    edx
  425ab2:	shl    DWORD PTR [ebp+ebp*4-0x34],0xd0
  425ab7:	cwde   
  425ab8:	jbe    0x425a49
  425aba:	das    
  425abb:	and    dh,ah
  425abd:	fisub  WORD PTR [edx-0x4e]
  425ac0:	jle    0x425a4f
  425ac2:	outs   dx,DWORD PTR ds:[esi]
  425ac3:	adc    al,dh
  425ac5:	bound  eax,QWORD PTR [edi-0x4d65529f]
  425acb:	icebp  
  425acc:	ret    
  425acd:	inc    edx
  425ace:	mov    DWORD PTR [edi-0x46],0x98f63d49
  425ad5:	mov    esi,0x70647f7
  425ada:	mov    eax,0x8fb6b6
  425adf:	inc    edi
  425ae0:	(bad)  
  425ae1:	pop    es
  425ae2:	aas    
  425ae3:	wrmsr  
  425ae5:	lds    ecx,FWORD PTR [edx+0x7]
  425ae8:	ficomp WORD PTR [eax-0x2]
  425aeb:	sbb    dh,BYTE PTR [eax+0x6b]
  425aee:	push   edi
  425aef:	fiadd  WORD PTR [ebx]
  425af1:	leave  
  425af2:	(bad)  
  425af3:	call   FWORD PTR [edi-0x25]
  425af6:	mov    DWORD PTR gs:[eax+0x5c33c152],ecx
  425afd:	mov    dh,0x2c
  425aff:	push   eax
  425b00:	adc    eax,0x52890853
  425b05:	cwde   
  425b06:	add    DWORD PTR [esi+0x7c],0x1f
  425b0a:	inc    esi
  425b0b:	push   ss
  425b0c:	iret   
  425b0d:	fimul  DWORD PTR [ebx-0x39]
	...
  425b24:	adc    dl,BYTE PTR [eax-0x73b30005]
  425b2a:	lds    eax,FWORD PTR [esi]
  425b2c:	cwde   
  425b2d:	sbb    edi,DWORD PTR [eax+eax*1]
  425b30:	sbb    BYTE PTR [ebx],0x4e
  425b33:	adc    al,0x9b
  425b35:	pop    es
  425b36:	dec    esp
  425b37:	push   ss
  425b38:	or     al,0x8c
  425b3a:	add    esp,0xc3c61548
  425b40:	jb     0x425b57
  425b42:	jmp    0x425b2c
  425b44:	das    
  425b45:	mov    WORD PTR [eax],es
  425b47:	add    BYTE PTR [edx],ah
  425b49:	push   ecx
  425b4a:	and    al,0x8
  425b4c:	or     eax,0xb45602a0
  425b51:	(bad)  
  425b52:	push   ss
  425b53:	call   FWORD PTR [ebx]
  425b55:	push   ss
  425b56:	(bad)  
  425b57:	pop    esi
  425b58:	dec    esi
  425b59:	xchg   edi,eax
  425b5a:	add    BYTE PTR [ebx+0x6c59bd2],cl
  425b60:	or     BYTE PTR [esp+edi*1],dl
  425b63:	add    BYTE PTR [ecx-0x2d],dl
  425b66:	outs   dx,DWORD PTR ds:[esi]
  425b67:	pop    es
  425b68:	mov    esp,0xfec00f2a
  425b6d:	dec    ebx
  425b6e:	add    bh,bh
  425b70:	xchg   edx,eax
  425b71:	add    esp,esp
  425b73:	xor    esp,esi
  425b75:	sub    bh,ch
  425b77:	(bad)  
  425b78:	rcl    bl,cl
  425b7a:	lea    eax,[eax-0x34]
  425b7d:	into   
  425b7e:	cmp    BYTE PTR [esi-0x4b],0xf0
  425b82:	push   DWORD PTR [edx-0x3d]
  425b85:	xchg   edx,eax
  425b86:	add    al,0x6a
	...
  425b9c:	mov    ch,0xa2
  425b9e:	jmp    FWORD PTR [ecx-0x4b]
  425ba1:	test   ebx,esi
  425ba3:	or     esp,DWORD PTR [eax+edi*4-0xf0c78fc]
  425baa:	cmp    BYTE PTR [edi+0x30c0f808],0x75
  425bb1:	cmp    ecx,eax
  425bb3:	or     al,0x2a
  425bb5:	cmp    ah,dh
  425bb7:	sub    BYTE PTR [ebp+0x5],0x15
  425bbb:	add    DWORD PTR [esi+0x230cc1b8],esp
  425bc1:	inc    eax
  425bc2:	clc    
  425bc3:	xor    BYTE PTR [ebp-0x5b],0xe9
  425bc7:	mov    esi,0xeb891c76
  425bcc:	ss popf 
  425bce:	in     al,0x55
  425bd0:	loop   0x425b53
  425bd2:	pushf  
  425bd3:	xor    ch,dh
  425bd5:	cmp    BYTE PTR [ebx-0x1d6eee8e],cl
  425bdb:	jmp    0x425b92
  425bdd:	clc    
  425bde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425bdf:	loopne 0x425c02
  425be1:	pop    es
  425be2:	popf   
  425be3:	xchg   BYTE PTR [eax-0x4],bh
  425be6:	mov    al,BYTE PTR [edx+0x5]
  425be9:	sub    DWORD PTR [ebp+0x400b1d12],ebx
  425bef:	add    BYTE PTR [eax],dh
  425bf1:	cmp    DWORD PTR [ebx],edx
  425bf3:	or     al,0x94
  425bf5:	mov    bl,0x98
  425bf7:	cld    
  425bf8:	rcr    BYTE PTR [edx+esi*8],0x3f
  425bfc:	mov    ch,0x7f
  425bfe:	inc    edx
  425bff:	lock add BYTE PTR [eax],al
	...
  425c12:	add    BYTE PTR [eax],al
  425c14:	dec    edi
  425c15:	fsub   QWORD PTR [edi-0x6e131]
  425c1b:	dec    edi
  425c1c:	cmp    BYTE PTR [eax+ebp*4-0x6a70bb19],ch
  425c23:	add    esi,DWORD PTR [ebp-0x1ae855f5]
  425c29:	jns    0x425c0c
  425c2b:	mov    ?,edi
  425c2d:	(bad)  
  425c2e:	cmp    DWORD PTR [edi+0x3c91ebf7],ecx
  425c34:	mov    DWORD PTR [edi+0x7b5287e9],ecx
  425c3a:	shr    DWORD PTR [ecx],cl
  425c3c:	mov    cl,0x14
  425c3e:	and    eax,0xad14f2a0
  425c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c44:	xchg   edx,eax
  425c45:	push   esp
  425c46:	dec    ebp
  425c47:	add    esi,DWORD PTR [ebp-0x46e8d5f5]
  425c4d:	adc    al,0xa5
  425c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c50:	pop    edx
  425c51:	repnz push ebp
  425c53:	add    esi,DWORD PTR [ebp-0x4ce9d5f5]
  425c59:	jns    0x425c38
  425c5b:	sub    DWORD PTR [ebp-0xd09d5a2],esi
  425c61:	popf   
  425c62:	test   eax,0x6c97cf03
  425c67:	inc    esi
  425c68:	and    eax,0xbec4665f
  425c6d:	pop    esi
  425c6e:	or     dh,dh
  425c70:	outs   dx,BYTE PTR ds:[esi]
  425c71:	popf   
  425c72:	test   eax,0xe1cb3403
  425c77:	mov    es,WORD PTR [eax]
	...
  425c89:	add    BYTE PTR [eax],al
  425c8b:	add    BYTE PTR [edi-0x15],dh
  425c8e:	add    DWORD PTR [ebp+0x3ce98f1d],ebp
  425c94:	arpl   ax,bx
  425c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c97:	xor    ah,BYTE PTR [eax+0x1a]
  425c9a:	fisubr DWORD PTR [ecx+eax*4-0x46642c05]
  425ca1:	cmp    eax,0x6217daa
  425ca6:	jmp    0xcb93:0xab1ab503
  425cad:	add    al,0x1
  425caf:	stos   DWORD PTR es:[edi],eax
  425cb0:	cmp    DWORD PTR [eax+ebp*8-0x3fbcd10],ebx
  425cb7:	mul    BYTE PTR [esi+eax*2-0x66]
  425cbb:	xchg   esi,eax
  425cbc:	dec    esi
  425cbd:	pop    ss
  425cbe:	inc    ebp
  425cbf:	int    0xb2
  425cc1:	push   ss
  425cc2:	ds sbb eax,0x7100c5a7
  425cc8:	not    DWORD PTR [ecx-0x6a6ada7a]
  425cce:	mov    BYTE PTR [edi],ch
  425cd0:	mov    dl,0x18
  425cd2:	inc    ebx
  425cd3:	in     eax,0x1c
  425cd5:	iret   
  425cd6:	jg     0x425cbd
  425cd8:	pop    edx
  425cd9:	mov    eax,ds:0x4a77100
  425cde:	jo     0x425cc7
  425ce0:	cwde   
  425ce1:	fwait
  425ce2:	sti    
  425ce3:	aad    0x82
  425ce5:	popf   
  425ce6:	push   eax
  425ce7:	inc    esi
  425ce8:	es adc ch,al
  425ceb:	in     eax,dx
  425cec:	and    edx,DWORD PTR [edx+0xe9e8]
	...
  425d02:	add    BYTE PTR [eax],al
  425d04:	das    
  425d05:	add    al,0xfc
  425d07:	ret    
  425d08:	push   edx
  425d09:	in     eax,dx
  425d0a:	add    edx,DWORD PTR [edx-0x4f]
  425d0d:	(bad)  
  425d0e:	push   eax
  425d0f:	push   0xfffffff7
  425d11:	pushf  
  425d12:	push   edx
  425d13:	push   ss
  425d14:	data16 adc ch,al
  425d17:	fstp   st(7)
  425d19:	gs mov esi,0x875db6f5
  425d1f:	clc    
  425d20:	pop    esi
  425d21:	mov    al,ds:0xfdb6e900
  425d26:	inc    esp
  425d27:	lds    ebp,FWORD PTR [esi-0x3b108ffc]
  425d2d:	test   edi,0x88044e01
  425d33:	scas   eax,DWORD PTR es:[edi]
  425d34:	lods   al,BYTE PTR ds:[esi]
  425d35:	rol    DWORD PTR [ecx+ebp*8],1
  425d38:	xor    ecx,DWORD PTR [ebx+0x8]
  425d3b:	add    BYTE PTR [ebx],cl
  425d3d:	pop    DWORD PTR [eax]
  425d3f:	mov    bl,BYTE PTR [ebx+ecx*4-0x6a773f81]
  425d46:	mov    DWORD PTR [eax],ecx
  425d48:	pushf  
  425d49:	sub    BYTE PTR [ebx+0x8],cl
  425d4c:	dec    edi
  425d4d:	scas   al,BYTE PTR es:[edi]
  425d4e:	or     BYTE PTR [eax],al
  425d50:	daa    
  425d51:	xlat   BYTE PTR ds:[ebx]
  425d52:	loop   0x425d0b
  425d54:	call   0x17985a81
  425d59:	sub    eax,0xa60f514b
  425d5e:	or     BYTE PTR [eax],al
  425d60:	mov    BYTE PTR [esp+ebp*4],al
  425d63:	add    DWORD PTR [ebp-0x33],edx
  425d66:	and    BYTE PTR [ebp+0x0],0x0
	...
  425d7a:	add    BYTE PTR [eax],al
  425d7c:	add    al,0x91
  425d7e:	push   edx
  425d7f:	push   0x3c014c
  425d84:	test   BYTE PTR [eax+0x385c4015],dh
  425d8a:	int    0x54
  425d8c:	repz sub DWORD PTR [ecx+0x701ec9f0],ecx
  425d93:	cmp    al,bh
  425d95:	mov    es,WORD PTR [ecx-0x786f7f9b]
  425d9b:	dec    ebp
  425d9c:	nop
  425d9d:	mov    ebx,0xfbfcff52
  425da2:	jle    0x425d64
  425da4:	dec    ecx
  425da5:	jmp    0x74bc:0xfc04588
  425dac:	daa    
  425dad:	adc    eax,0x28398d04
  425db2:	push   edx
  425db3:	push   eax
  425db4:	adc    eax,eax
  425db6:	sbb    al,0x85
  425db8:	fcom   QWORD PTR [esp+eax*1-0x3d7c67d]
  425dbf:	mov    cl,cl
  425dc1:	daa    
  425dc2:	mov    DWORD PTR [eax],ecx
  425dc4:	lods   al,BYTE PTR ds:[esi]
  425dc5:	es dec ebx
  425dc7:	or     BYTE PTR [ebp-0x1daa018f],dh
  425dcd:	lds    ecx,FWORD PTR [ecx+ecx*4]
  425dd0:	jo     0x425da0
  425dd2:	ss xor ebp,0xffffffb9
  425dd6:	sti    
  425dd7:	xchg   BYTE PTR [esi-0x12],dh
  425dda:	lods   al,BYTE PTR ds:[esi]
  425ddb:	cwde   
  425ddc:	xchg   DWORD PTR [esi],esi
  425dde:	enter  0xc0,0x0
	...
  425df2:	add    BYTE PTR [eax],al
  425df4:	pusha  
  425df5:	sub    DWORD PTR [eax+0xcb93e4e],0x51d1081
  425dff:	mov    DWORD PTR [ebp+0x7fc2b63],ebp
  425e05:	test   eax,0x6bfd4e99
  425e0a:	les    esi,FWORD PTR [ebx-0x4f]
  425e0d:	jne    0x425e2a
  425e0f:	cld    
  425e10:	mov    ch,0x6d
  425e12:	cmp    edi,esp
  425e14:	ins    BYTE PTR es:[edi],dx
  425e15:	mov    dh,0x2e
  425e17:	push   0x3ff9a5
  425e1c:	fisttp QWORD PTR [eax-0xf]
  425e1f:	aas    
  425e20:	mov    ch,0x50
  425e22:	dec    eax
  425e23:	push   esp
  425e24:	pop    edx
  425e25:	dec    edx
  425e26:	(bad)  
  425e27:	out    dx,eax
  425e28:	cmp    BYTE PTR [ebx-0x461da7f0],bh
  425e2e:	adc    BYTE PTR [ecx+esi*4],ah
  425e31:	mov    cl,0xeb
  425e33:	inc    edi
  425e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e35:	cmp    BYTE PTR [eax],al
  425e37:	mov    DWORD PTR ds:0xe073996c,ebp
  425e3d:	ins    DWORD PTR es:[edi],dx
  425e3e:	(bad)  
  425e3f:	push   esp
  425e40:	mov    edx,DWORD PTR [ecx-0x46cfdfcc]
  425e46:	or     ebp,DWORD PTR [edx]
  425e48:	ret    0x48b9
  425e4b:	and    al,0xa5
  425e4d:	ins    DWORD PTR es:[edi],dx
  425e4e:	dec    BYTE PTR [esi+0x6b]
  425e51:	icebp  
  425e52:	das    
  425e53:	cmp    BYTE PTR [eax],dh
  425e55:	nop
  425e56:	test   eax,0xe
	...
  425e6b:	add    bh,cl
  425e6d:	add    dl,BYTE PTR [esi-0x20]
  425e70:	(bad)  
  425e71:	push   ss
  425e72:	in     al,dx
  425e73:	xor    eax,esp
  425e75:	pop    edi
  425e76:	sbb    DWORD PTR [edi+0x1a],edi
  425e79:	jge    0x425e70
  425e7b:	mov    WORD PTR [eax-0x37ce168b],?
  425e81:	pop    edi
  425e82:	sub    DWORD PTR [edi+0x2],edi
  425e85:	jl     0x425e68
  425e87:	mov    WORD PTR [eax-0x42cc5da7],?
  425e8d:	mov    esi,0x9ca83093
  425e92:	sub    eax,0x5e8fe2f5
  425e97:	sar    ecx,0x61
  425e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e9b:	pop    es
  425e9c:	mov    ch,0x5c
  425e9e:	outs   dx,BYTE PTR ds:[esi]
  425e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ea0:	sti    
  425ea1:	push   ss
  425ea2:	sub    eax,0x815aeb0c
  425ea7:	cmp    DWORD PTR [eax+0x2],edi
  425eaa:	arpl   WORD PTR [edx+eiz*2-0xcf0abf4],cx
  425eb1:	push   cs
  425eb2:	int    0x97
  425eb4:	bound  edx,QWORD PTR ds:0x3ef86e4
  425eba:	cdq    
  425ebb:	cwde   
  425ebc:	(bad)  
  425ebd:	fwait
  425ebe:	jmp    0x4031:0x989fff50
  425ec5:	pop    edi
  425ec6:	add    DWORD PTR [edi-0x6],edi
  425ec9:	jp     0x425eb8
  425ecb:	test   BYTE PTR [edi+0x8cea03],dl
	...
  425ee1:	add    BYTE PTR [eax],al
  425ee3:	add    BYTE PTR [eax-0x52cceda7],dh
  425ee9:	push   ss
  425eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425eeb:	xchg   edi,eax
  425eec:	sub    eax,0x86c36cff
  425ef1:	test   al,0x6e
  425ef3:	or     ebx,DWORD PTR [edi+0x1d990102]
  425ef9:	push   ecx
  425efa:	push   eax
  425efb:	bound  ebx,QWORD PTR [esi]
  425efd:	pop    ss
  425efe:	add    edi,DWORD PTR [edi]
  425f00:	dec    edx
  425f01:	push   edx
  425f02:	or     BYTE PTR [edx],bl
  425f04:	icebp  
  425f05:	or     al,0xfc
  425f07:	out    0x52,al
  425f09:	inc    edx
  425f0a:	call   0x14bfa130
  425f0f:	(bad)  
  425f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f11:	lahf   
  425f12:	sti    
  425f13:	xor    al,0xbd
  425f15:	mul    DWORD PTR [edx]
  425f17:	mov    dh,0x2a
  425f19:	add    ecx,DWORD PTR [eax+0x760334b1]
  425f1f:	in     eax,dx
  425f20:	test   BYTE PTR [ecx-0x18],al
  425f23:	fnstcw WORD PTR [edi]
  425f25:	dec    esi
  425f26:	or     BYTE PTR [edx],bh
  425f28:	push   ecx
  425f29:	repnz cli 
  425f2b:	mov    es,WORD PTR [edx+0x18]
  425f2e:	icebp  
  425f2f:	ins    BYTE PTR es:[edi],dx
  425f30:	inc    ebx
  425f31:	jle    0x425f37
  425f33:	mov    ebx,0x6214f84f
  425f38:	sbb    DWORD PTR [edx+edx*2+0x6e],0xffffffc1
  425f3d:	scas   eax,DWORD PTR es:[edi]
  425f3e:	xchg   DWORD PTR [ecx+0x3e],eax
  425f41:	mov    edx,DWORD PTR [edx+0x5e]
  425f44:	mov    eax,ds:0x328597
	...
  425f59:	add    BYTE PTR [eax],al
  425f5b:	add    BYTE PTR [edx+0x5a62c01b],bh
  425f61:	pop    esp
  425f62:	sti    
  425f63:	cdq    
  425f64:	mov    esi,0x83a2c015
  425f69:	popa   
  425f6a:	leave  
  425f6b:	sub    ecx,DWORD PTR [ecx+0x1]
  425f6e:	push   ebp
  425f6f:	bound  ecx,QWORD PTR ds:0xe601ed10
  425f75:	mov    esi,0x5ee7b7d7
  425f7a:	dec    edi
  425f7b:	bound  esp,QWORD PTR [edx+0xa]
  425f7e:	pop    esp
  425f7f:	leave  
  425f80:	sub    DWORD PTR [esp+0x0],esp
  425f84:	test   DWORD PTR [eax-0x772117d8],edi
  425f8a:	std    
  425f8b:	call   DWORD PTR [eax-0x3b7bf335]
  425f91:	mov    eax,DWORD PTR [eax]
  425f93:	add    BYTE PTR [ebx+0x4e86f16],dh
  425f99:	dec    edi
  425f9a:	or     eax,0xbb810bff
  425f9f:	(bad)  
  425fa1:	popa   
  425fa2:	sti    
  425fa3:	(bad)  
  425fa4:	fcom   QWORD PTR [ebx]
  425fa6:	push   edi
  425fa7:	lock inc ebp
  425fa9:	(bad)  
  425faa:	hlt    
  425fab:	jmp    0x425f7b
  425fad:	fstp   st(0)
  425faf:	push   0xffffffd1
  425fb1:	pop    ss
  425fb2:	aas    
  425fb3:	clc    
  425fb4:	in     al,dx
  425fb5:	mov    al,0xe8
  425fb7:	mov    dl,0x9b
  425fb9:	sbb    ebp,edi
  425fbb:	cmp    ecx,DWORD PTR [edi-0x77]
  425fbe:	test   BYTE PTR [ebp+0x0],al
	...
  425fd4:	mov    WORD PTR [eax+eax*1+0x6f8f3483],cs
  425fdb:	bound  eax,QWORD PTR [edi]
  425fdd:	push   eax
  425fde:	clc    
  425fdf:	xor    edx,ebx
  425fe1:	add    ecx,DWORD PTR [edx+0x46dc644f]
  425fe7:	cld    
  425fe8:	iret   
  425fe9:	adc    DWORD PTR [ecx-0xf38a028],ecx
  425fef:	mov    DWORD PTR [ecx],edx
  425ff1:	and    al,0x11
  425ff3:	jne    0x425ff5
  425ff5:	push   cs
  425ff6:	rol    DWORD PTR ds:0x3afc32df,0x1
  425ffd:	sub    BYTE PTR [ebp+0x3c],dh
  426000:	dec    BYTE PTR [esi-0x6e0ba2c7]
  426006:	das    
  426007:	cmp    eax,0xa08c1c
  42600c:	inc    ebx
  42600d:	jmp    0x892f:0x40b50069
  426014:	repnz lea ecx,[ebp+ecx*1+0x12]
  426019:	mov    DWORD PTR [ebx-0x41],edi
  42601c:	xor    DWORD PTR ds:0xf7d5447f,0x6f055a8c
  426026:	adc    ah,dh
  426028:	ss shl eax,0xff
  42602c:	loopne 0x425fd8
  42602e:	cwde   
  42602f:	(bad)  
  426030:	imul   eax,DWORD PTR [esi-0xa22857f],0x8a0d
	...
  42604a:	add    BYTE PTR [eax],al
  42604c:	shl    BYTE PTR [eax+0x530e8ec],cl
  426052:	mov    ecx,0x90c2c250
  426057:	mov    dl,dh
  426059:	xor    BYTE PTR [eax+esi*8],cl
  42605c:	popf   
  42605d:	inc    DWORD PTR [edi*8+0x73c475aa]
  426064:	lds    esp,FWORD PTR ds:0xb0c0fcce
  42606a:	out    dx,al
  42606b:	aas    
  42606c:	mov    ch,0x6b
  42606e:	les    esi,FWORD PTR [ebx-0x4f]
  426071:	mov    eax,0x3ab7e8ff
  426076:	rcr    BYTE PTR [ebp-0x22],0x2f
  42607a:	ret    0xb4e
  42607d:	sub    dh,BYTE PTR ds:[eax]
  426080:	pop    ebp
  426081:	arpl   bx,bp
  426083:	cld    
  426084:	bound  ebp,QWORD PTR [esp+eax*8+0x73]
  426088:	mov    ebx,0xa9244871
  42608d:	imul   ecx,DWORD PTR [edi*8-0x2f7beca],0xfd043136
  426098:	ss leave 
  42609a:	out    dx,eax
  42609b:	push   DWORD PTR [edi]
  42609d:	nop
  42609e:	mov    edi,ebp
  4260a0:	sub    cl,BYTE PTR [eax]
  4260a2:	mov    dl,0xfb
  4260a4:	sub    eax,0xe401ff00
  4260a9:	add    eax,0x93878e65
  4260ae:	mov    dh,0xc3
	...
  4260c4:	sbb    eax,0xd9406e9a
  4260c9:	lahf   
  4260ca:	pop    esi
  4260cb:	xchg   esi,eax
  4260cc:	xor    edx,DWORD PTR [esi-0x10f45ff]
  4260d2:	loop   0x426153
  4260d4:	sub    al,BYTE PTR [ebp+0x6f1fabe2]
  4260da:	rcl    BYTE PTR [ebp+ecx*8+0x71bd5ef3],cl
  4260e1:	pop    ebp
  4260e2:	and    dl,al
  4260e4:	mov    dl,0x8f
  4260e6:	adc    al,0x89
  4260e8:	into   
  4260e9:	adc    al,dh
  4260eb:	sti    
  4260ec:	gs gs pop esp
  4260ef:	rcr    DWORD PTR ds:[edi-0x5e],0xe
  4260f4:	mov    ecx,0xa030bec2
  4260f9:	test   cl,ah
  4260fb:	stos   DWORD PTR es:[edi],eax
  4260fc:	scas   eax,DWORD PTR es:[edi]
  4260fd:	mov    ebx,0x543a03e8
  426102:	icebp  
  426103:	fdiv   DWORD PTR [ebp-0x72]
  426106:	gs pop esi
  426108:	cmp    dh,0xe9
  42610b:	sub    DWORD PTR [edi+0x79891662],esi
  426111:	out    0xdb,eax
  426113:	add    eax,0xc365fe68
  426118:	mov    cl,0x13
  42611a:	pusha  
  42611b:	add    esi,DWORD PTR [ebp-0x38794d71]
  426121:	out    0x51,eax
  426123:	loopne 0x4260dd
  426125:	(bad)  
  426126:	cmp    bh,BYTE PTR [edi+0x0]
	...
  426139:	add    BYTE PTR [eax],al
  42613b:	add    BYTE PTR [edx],al
  42613d:	add    DWORD PTR [eax],0xffffffb4
  426140:	sub    eax,0xf3fa1853
  426145:	xchg   DWORD PTR [edi+0x40a002dc],eax
  42614b:	jmp    0x6436b27f
  426150:	fst    DWORD PTR [edi-0x82c9eb1]
  426156:	lea    ebp,[edx+eiz*1+0x3be4664e]
  42615d:	push   ecx
  42615e:	hlt    
  42615f:	cdq    
  426160:	and    ebx,eax
  426162:	sti    
  426163:	pop    ss
  426164:	jae    0x4261a4
  426166:	jne    0x42618e
  426168:	xor    bh,BYTE PTR [ecx-0x4]
  42616b:	in     al,0xbd
  42616d:	(bad)  
  42616e:	dec    edi
  42616f:	fs ins BYTE PTR es:[edi],dx
  426171:	sti    
  426172:	push   eax
  426173:	into   
  426174:	lods   al,BYTE PTR ds:[esi]
  426175:	xchg   ebx,edi
  426177:	cmp    al,0xb5
  426179:	cld    
  42617a:	xor    edi,DWORD PTR [esi+0x3dc110ff]
  426180:	iret   
  426181:	push   es
  426182:	inc    esi
  426183:	loope  0x426106
  426185:	push   edx
  426186:	cld    
  426187:	sbb    al,0xa7
  426189:	adc    BYTE PTR [ecx+ecx*8-0x47],al
  42618d:	cli    
  42618e:	xor    edi,eax
  426190:	out    0xb3,eax
  426192:	sti    
  426193:	es jno 0x426192
  426196:	adc    eax,0xbd80d5
  42619b:	jle    0x426139
  42619d:	mov    ebp,eax
  42619f:	fild   WORD PTR [eax]
	...
  4261b1:	add    BYTE PTR [eax],al
  4261b3:	add    BYTE PTR [ebp-0x4],bh
  4261b6:	sti    
  4261b7:	cmp    DWORD PTR [eax+0x47ba20e6],edi
  4261bd:	sub    ah,0x72
  4261c0:	outs   dx,BYTE PTR ds:[esi]
  4261c1:	cld    
  4261c2:	jne    0x426205
  4261c4:	cmp    ecx,ebp
  4261c6:	or     eax,0x33fc264e
  4261cb:	add    bl,dh
  4261cd:	test   BYTE PTR [ebx+0x12],0xc
  4261d1:	xchg   ecx,eax
  4261d2:	std    
  4261d3:	jne    0x426225
  4261d5:	sbb    eax,esi
  4261d7:	adc    al,0xe3
  4261d9:	and    BYTE PTR [edx],dh
  4261db:	shl    dl,0xad
  4261de:	ret    
  4261df:	ret    0x9124
  4261e2:	dec    edi
  4261e3:	mov    esi,DWORD PTR [eax+0x4f10e814]
  4261e9:	jle    0x426248
  4261eb:	adc    al,0x2b
  4261ed:	jle    0x42626c
  4261ef:	adc    BYTE PTR [edi-0x6efa9633],ah
  4261f5:	inc    esi
  4261f6:	clc    
  4261f7:	push   eax
  4261f8:	dec    edx
  4261f9:	sbb    ebp,edx
  4261fb:	or     eax,0xf88121d3
  426200:	fst    DWORD PTR [edi+0xb898b38]
  426206:	xor    DWORD PTR [esi-0x3c],eax
  426209:	jp     0x426251
  42620b:	cld    
  42620c:	into   
  42620d:	dec    esi
  42620e:	sbb    BYTE PTR [ebp+0x7d83869c],cl
  426214:	cld    
  426215:	xchg   ebp,eax
  426216:	test   BYTE PTR [ecx+0x0],0x0
	...
  426229:	add    BYTE PTR [eax],al
  42622b:	add    cl,al
  42622d:	pop    ss
  42622e:	adc    ebx,0xf83e7b9c
  426234:	and    al,0x50
  426236:	cld    
  426237:	test   BYTE PTR [ebp-0x6d],0x6f
  42623b:	add    al,0x19
  42623d:	shr    DWORD PTR [esi+0x15],1
  426240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426241:	xchg   ebx,eax
  426242:	push   ecx
  426243:	push   edi
  426244:	pop    es
  426245:	(bad)  
  426246:	jecxz  0x4262c7
  426248:	xchg   ecx,eax
  426249:	and    ebp,edi
  42624b:	test   BYTE PTR [edi+edx*4],bl
  42624e:	mov    ch,0x32
  426250:	pushf  
  426251:	rcr    DWORD PTR [ecx-0x37],0x8f
  426255:	jge    0x426295
  426257:	lock mov ch,0x6f
  42625a:	dec    ecx
  42625b:	or     BYTE PTR [esi],bh
  42625d:	xor    edx,DWORD PTR [esi+eax*4+0x7d7d02f3]
  426264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426265:	jg     0x426298
  426267:	adc    al,0x5
  426269:	out    0x9a,eax
  42626b:	in     eax,0x84
  42626d:	jno    0x4262b5
  42626f:	or     BYTE PTR [esi],bh
  426271:	inc    ebp
  426272:	cld    
  426273:	mov    BYTE PTR ds:0x8350b4c9,al
  426279:	imul   ecx,DWORD PTR [ebp-0x7cef7604],0x20b0bf
  426283:	and    esp,0x2e5034e5
  426289:	lods   eax,DWORD PTR ds:[esi]
  42628a:	xchg   edi,eax
  42628b:	cmp    eax,eax
  42628d:	in     eax,dx
  42628e:	xchg   ecx,eax
  42628f:	add    DWORD PTR [eax],0x0
	...
  4262a2:	add    BYTE PTR [eax],al
  4262a4:	cmc    
  4262a5:	pop    ecx
  4262a6:	xor    ecx,DWORD PTR [ecx+0x74dcf66a]
  4262ac:	lods   eax,DWORD PTR ds:[esi]
  4262ad:	imul   ebx,DWORD PTR [esi-0x203194fe],0x7dd4ca13
  4262b7:	xlat   BYTE PTR ds:[ebx]
  4262b8:	cmp    BYTE PTR [ecx],dh
  4262ba:	sbb    DWORD PTR [eax+0x30],eax
  4262bd:	cmp    al,0x8
  4262bf:	or     ebx,DWORD PTR [edi]
  4262c1:	mov    ds:0xf6d11291,al
  4262c6:	aas    
  4262c7:	add    BYTE PTR [esi],dh
  4262c9:	inc    ecx
  4262ca:	xchg   edx,eax
  4262cb:	call   0x55781d7d
  4262d0:	popf   
  4262d1:	sar    dl,1
  4262d3:	cld    
  4262d4:	mov    cl,dh
  4262d6:	leave  
  4262d7:	jb     0x426279
  4262d9:	sahf   
  4262da:	(bad)  
  4262db:	cld    
  4262dc:	add    ebp,ecx
  4262de:	out    0x88,eax
  4262e0:	jnp    0x426350
  4262e2:	mov    ebp,0x25901ae7
  4262e7:	add    esi,DWORD PTR [ebp-0x551851fa]
  4262ed:	or     cl,ch
  4262ef:	xchg   BYTE PTR [edx],dl
  4262f1:	test   ch,ah
  4262f3:	push   ebx
  4262f4:	dec    ebx
  4262f5:	out    0xf1,al
  4262f7:	xor    al,0x4d
  4262f9:	not    esi
  4262fb:	nop
  4262fc:	cmp    DWORD PTR [esi+0x588c3229],edi
  426302:	daa    
  426303:	cld    
  426304:	sub    ah,BYTE PTR [esi+ebp*2-0x60]
	...
  42631c:	sub    eax,0xe84f155
  426321:	mov    al,ds:0x8b6f7cb6
  426326:	mov    ah,0x60
  426329:	push   cs
  42632a:	add    dl,BYTE PTR [ecx+0x47113b1]
  426330:	mov    ch,0x8f
  426332:	call   0xb93e:0x1ff677e
  426339:	cli    
  42633a:	loop   0x4262c3
  42633c:	and    al,BYTE PTR [ebp+ebx*2+0x5b037fcd]
  426343:	sbb    DWORD PTR [edi-0x79],eax
  426346:	pop    esi
  426347:	inc    esi
  426348:	mov    ebp,0x45942cb6
  42634d:	ins    BYTE PTR es:[edi],dx
  42634e:	lds    cx,DWORD PTR es:[edi-0x7056d99a]
  426356:	aas    
  426357:	add    al,0xa8
  426359:	test   BYTE PTR [ebp+0x14fa797c],bl
  42635f:	xchg   esp,eax
  426360:	xchg   edx,eax
  426361:	or     ah,dh
  426363:	nop
  426364:	xchg   ecx,eax
  426365:	adc    ebp,DWORD PTR [edx-0x139a18e9]
  42636b:	jle    0x426364
  42636d:	neg    DWORD PTR [ecx]
  42636f:	cmp    DWORD PTR [ebp+0x45e50119],ecx
  426375:	sti    
  426376:	jg     0x4263e9
  426378:	mov    bl,0x7e
  42637a:	inc    ecx
  42637b:	jb     0x426348
  42637d:	imul   DWORD PTR [edi]
  42637f:	(bad)  
	...
  426394:	dec    esi
  426395:	or     BYTE PTR [ecx+esi*8+0x66],al
  426399:	dec    ebp
  42639a:	cld    
  42639b:	bound  eax,QWORD PTR [ebx-0x3ed6d079]
  4263a1:	int3   
  4263a2:	jmp    FWORD PTR [ebx+0x31761126]
  4263a8:	sub    DWORD PTR [ebp-0xc],ecx
  4263ab:	push   0xfffffff7
  4263ad:	mov    WORD PTR [edi+0x39],?
  4263b0:	mov    dh,0xc2
  4263b2:	push   ebp
  4263b3:	sbb    ebx,eax
  4263b5:	xchg   DWORD PTR [edi+0x55b72abc],eax
  4263bb:	frstor [edx+0x26b48995]
  4263c1:	adc    DWORD PTR [esi-0xb],eax
  4263c4:	out    dx,al
  4263c5:	dec    esp
  4263c6:	or     al,0x7e
  4263c8:	mov    ebp,0xabb2a07d
  4263cd:	xchg   DWORD PTR [edx-0x7e],esi
  4263d0:	pop    es
  4263d1:	cmp    bl,BYTE PTR [ebx+0x42]
  4263d4:	sbb    al,dl
  4263d6:	or     cl,ch
  4263d8:	sub    BYTE PTR [ebp-0x4],cl
  4263db:	call   0xbfc8618d
  4263e0:	popf   
  4263e1:	jmp    0x1163986d
  4263e6:	inc    esp
  4263e7:	fnsave [ecx]
  4263e9:	test   BYTE PTR [eax],cl
  4263eb:	pusha  
  4263ec:	loop   0x426379
  4263ee:	mov    DWORD PTR [esi],esi
  4263f0:	test   eax,0x64920229
  4263f5:	pop    esi
  4263f6:	xchg   DWORD PTR [ebp+0x0],eax
	...
  42640c:	push   cs
  42640d:	push   ebx
  42640e:	or     BYTE PTR [edx-0x35],ah
  426411:	mov    eax,DWORD PTR [edi-0x3512e400]
  426417:	sub    DWORD PTR [eax],0x4
  42641a:	cmp    edx,0x6a7597eb
  426420:	pop    esp
  426421:	les    edx,FWORD PTR [eax-0x75]
  426424:	xchg   edx,eax
  426425:	sbb    esi,eax
  426427:	or     edi,ebx
  426429:	or     BYTE PTR [eax+0x669570c0],al
  42642f:	add    eax,0x50f446e9
  426434:	and    dl,BYTE PTR ds:0x87b0c01
  42643a:	cmp    eax,0x8b559821
  426440:	dec    edx
  426441:	in     eax,0x2a
  426443:	dec    ebp
  426444:	shl    dl,0x46
  426447:	hlt    
  426448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426449:	inc    edx
  42644a:	mov    al,cl
  42644c:	out    dx,al
  42644d:	inc    edi
  42644e:	clc    
  42644f:	push   0x1c
  426451:	or     dh,BYTE PTR [esi+0xc]
  426454:	or     BYTE PTR [ebp+edi*8-0x3e20fb8a],dl
  42645b:	mov    BYTE PTR [ecx],ah
  42645d:	add    eax,0x4ab4c689
  426462:	or     bh,bh
  426464:	fist   DWORD PTR [eax]
  426466:	mov    esp,0x95a974
  42646b:	lea    esp,[ecx+0x6a4c1f]
	...
  426481:	add    BYTE PTR [eax],al
  426483:	add    cl,dl
  426485:	(bad)  
  426487:	hlt    
  426488:	pushf  
  426489:	or     BYTE PTR [esi],dh
  42648b:	jmp    ecx
  42648d:	enter  0x4011,0x9c
  426491:	pop    es
  426492:	mov    esp,0x770d8174
  426497:	cld    
  426498:	xchg   ecx,eax
  426499:	xchg   edi,eax
  42649a:	or     eax,0x4e0982ff
  42649f:	sub    BYTE PTR [ebp-0x58d406df],dh
  4264a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264a6:	add    al,0xb0
  4264a8:	mov    ah,0x3f
  4264aa:	mov    edi,0xbf3f7531
  4264af:	push   edx
  4264b0:	adc    bh,BYTE PTR ds:[edi-0x1d]
  4264b4:	ins    DWORD PTR es:[edi],dx
  4264b5:	gs fwait
  4264b7:	arpl   WORD PTR [esi],ax
  4264b9:	jle    0x426464
  4264bb:	cld    
  4264bc:	imul   dl
  4264be:	jg     0x426538
  4264c0:	mov    ebp,0xb94076e7
  4264c5:	inc    eax
  4264c6:	xor    ecx,DWORD PTR [ecx-0x7efec4bc]
  4264cc:	cmp    eax,0x9f0815d2
  4264d1:	in     al,0x27
  4264d3:	out    0x15,eax
  4264d5:	out    0xff,al
  4264d7:	dec    DWORD PTR [edi-0x2e847efe]
  4264dd:	(bad)  
  4264de:	daa    
  4264df:	call   0xfcccfe65
  4264e4:	arpl   WORD PTR [ebp-0x3e],bp
  4264e7:	dec    edi
	...
  4264fc:	(bad)  
  4264fd:	and    al,0x2b
  4264ff:	mov    eax,DWORD PTR [ecx+0x59e7cfd2]
  426505:	out    0x8a,al
  426507:	cld    
  426508:	mov    WORD PTR [edi],ds
  42650a:	mov    DWORD PTR [edi-0x402f019e],edi
  426510:	jne    0x4264f1
  426512:	push   edx
  426513:	call   edx
  426515:	in     eax,0xd0
  426517:	cld    
  426518:	jb     0x4264db
  42651a:	jnp    0x42655f
  42651c:	cdq    
  42651d:	mov    ds:0x6ac33134,al
  426522:	dec    eax
  426523:	and    al,0xd9
  426525:	cwde   
  426526:	ja     0x42659b
  426528:	rcl    DWORD PTR [eax-0x70268c89],1
  42652e:	aad    0x7a
  426530:	lods   al,BYTE PTR es:[esi]
  426532:	fstp   DWORD PTR [ebx-0x726d0d16]
  426538:	rcr    BYTE PTR ss:[eax+ecx*2-0x27],1
  42653d:	xchg   ebx,eax
  42653e:	xacquire xchg DWORD PTR [eax+edx*4],esi
  426542:	jmp    0x1a05d54a
  426547:	jg     0x42653f
  426549:	stos   DWORD PTR es:[edi],eax
  42654a:	int    0x9b
  42654c:	inc    ecx
  42654d:	icebp  
  42654e:	bound  ecx,QWORD PTR [ebp+0x1dd5d036]
  426554:	push   eax
  426555:	jl     0x426564
  426557:	clc    
  426558:	cmp    eax,0x5af0054c
  42655d:	pop    ss
  42655e:	in     al,0x8c
	...
  426574:	cmp    DWORD PTR [ecx-0x4535185b],ebp
  42657a:	sub    ecx,DWORD PTR [esi]
  42657c:	test   DWORD PTR [edx],ecx
  42657e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42657f:	out    0xca,eax
  426581:	imul   edx,esp,0x125904d0
  426587:	xchg   ebx,eax
  426588:	int    0xdd
  42658a:	pushf  
  42658b:	inc    edx
  42658c:	xor    bh,BYTE PTR [ebp+eax*8-0xd]
  426590:	mov    ebp,0x2def7bcd
  426595:	je     0x42655c
  426597:	idiv   DWORD PTR ds:0xb110f300
  42659d:	out    0x45,eax
  42659f:	fs loop 0x426598
  4265a2:	ins    DWORD PTR es:[edi],dx
  4265a3:	ret    
  4265a4:	mov    bx,dx
  4265a7:	inc    edi
  4265a8:	cdq    
  4265a9:	lahf   
  4265aa:	les    bx,DWORD PTR [edi-0x3e65abbb]
  4265b1:	jnp    0x4265c0
  4265b3:	clc    
  4265b4:	sar    BYTE PTR [edx],cl
  4265b6:	(bad)  [ecx+esi*4-0x62d2fefc]
  4265bd:	call   0xdafb:0xf3518ae8
  4265c4:	jbe    0x426583
  4265c6:	je     0x42658d
  4265c8:	xchg   BYTE PTR [ebx-0x5dd2566c],al
  4265ce:	sti    
  4265cf:	adc    eax,0x67e8a28d
  4265d4:	xchg   ebx,esi
  4265d6:	sti    
  4265d7:	ins    BYTE PTR es:[edi],dx
	...
  4265ec:	cli    
  4265ed:	stos   DWORD PTR es:[edi],eax
  4265ee:	sbb    al,0x81
  4265f0:	xor    bl,dl
  4265f2:	sti    
  4265f3:	outs   dx,BYTE PTR ds:[esi]
  4265f4:	(bad)  
  4265f6:	pop    ebx
  4265f7:	(bad)  
  4265f8:	lea    ecx,[eax]
  4265fa:	out    0xbc,al
  4265fc:	jne    0x42665f
  4265fe:	xchg   DWORD PTR [ebp+0x37],eax
  426601:	jmp    0xfa4f:0x8fb6e74c
  426608:	or     eax,0xe370535c
  42660d:	out    dx,eax
  42660e:	mov    DWORD PTR [edx+edx*2-0x60c6a1f3],edx
  426615:	pop    ecx
  426616:	hlt    
  426617:	jo     0x4265e4
  426619:	retf   
  42661a:	mov    DWORD PTR [esi+ecx*2-0x2c2a1f3],edi
  426621:	into   
  426622:	je     0x4265c3
  426624:	add    DWORD PTR [esi+edx*4],eax
  426627:	jmp    0x1c1f5e2
  42662c:	mov    ah,0x75
  42662e:	adc    ch,BYTE PTR [edx+0x3e]
  426631:	(bad)  
  426632:	or     esp,DWORD PTR [ecx+edi*1-0xa]
  426636:	sti    
  426637:	jmp    0x6c4ee76b
  42663c:	je     0x42663d
  42663e:	call   0xfc38c61d
  426643:	ret    0x8b3
  426646:	dec    esi
  426647:	add    ah,al
  426649:	je     0x42668d
  42664b:	add    al,0x27
  42664d:	jae    0x4265da
  42664f:	add    DWORD PTR [eax],eax
	...
  426661:	add    BYTE PTR [eax],al
  426663:	add    BYTE PTR [ecx+edx*4-0x571077f],bl
  42666a:	pop    eax
  42666c:	and    al,0x4f
  42666e:	mov    ah,0x8d
  426670:	fst    DWORD PTR [edi+0x4b]
  426673:	(bad)  
  426674:	leave  
  426675:	sbb    ecx,DWORD PTR [ebx-0x77]
  426678:	mov    eax,ds:0xbc558257
  42667d:	jb     0x4266d5
  42667f:	mov    eax,0xffd2b344
  426684:	jecxz  0x42669a
  426686:	inc    edi
  426687:	lea    edx,[ecx-0x2c000dbd]
  42668d:	adc    ebx,DWORD PTR [eax]
  42668f:	sbb    eax,0xbd8708f3
  426694:	mov    al,ds:0x9bfffd05
  426699:	dec    esi
  42669a:	call   0xd3b2b3
  42669f:	lea    ebp,[ecx-0x1c000269]
  4266a5:	adc    esp,DWORD PTR [edi-0x5d]
  4266a8:	or     al,0x91
  4266aa:	add    WORD PTR [edi-0x53b2792f],sp
  4266b1:	adc    esp,DWORD PTR [eax-0x61]
  4266b4:	sbb    al,0x91
  4266b6:	add    edi,0xe8470a41
  4266bc:	jns    0x4266e9
  4266be:	fs js  0x42669a
  4266c1:	nop
  4266c2:	add    BYTE PTR [ebp-0xdbca7],cl
	...
  4266dc:	sar    DWORD PTR [ebp-0x3f2600b0],cl
  4266e2:	adc    al,BYTE PTR [eax-0x24]
  4266e5:	or     eax,0x50b50cc0
  4266ea:	add    eax,0x2fd6788b
  4266ef:	mov    DWORD PTR [eax-0x2],esi
  4266f2:	jp     0x42674b
  4266f4:	mov    ecx,0xb42bb5de
  4266f9:	out    0xd2,al
  4266fb:	cmc    
  4266fc:	fdivr  QWORD PTR [ebx-0x4b418d70]
  426702:	pushf  
  426703:	stos   DWORD PTR es:[edi],eax
  426704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426705:	adc    eax,0x1700fc87
  42670a:	cwde   
  42670b:	mov    ds:0x558705a5,eax
  426710:	lea    ebp,[edi+ebp*8-0x4]
  426714:	jb     0x42674e
  426716:	shl    dh,0x82
  426719:	call   0xfb6f671d
  42671e:	mov    ds:0x975ae086,eax
  426723:	mov    ds:0x86ffe617,eax
  426728:	lock sbb al,BYTE PTR [ebx-0x3e18a686]
  42672f:	inc    edx
  426730:	cmp    ah,dh
  426732:	or     BYTE PTR [ebx],al
  426734:	sub    ecx,DWORD PTR ds:[eax+ebp*8+0x5801d0b6]
  42673c:	sub    al,0x2b
  42673e:	mov    al,0x86
	...
  426754:	mov    al,ds:0x972cc9e
  426759:	in     eax,0x79
  42675b:	ds mov bh,0xe6
  42675e:	dec    DWORD PTR [eax-0x26e20da0]
  426764:	mov    eax,ds:0x3cd8287f
  426769:	jnp    0x42671e
  42676b:	ss pusha 
  42676d:	xchg   esi,eax
  42676e:	test   BYTE PTR [ebp-0x176f],0x2e
  426775:	(bad)  
  426776:	sub    al,0xfc
  426778:	cmp    eax,0x199be54f
  42677d:	mov    ds:0xcf3903e8,al
  426782:	fidivr DWORD PTR [edi-0x5d]
  426785:	xchg   ecx,eax
  426786:	jmp    0xadb7a38e
  42678b:	add    eax,0xf61002e
  426790:	popf   
  426791:	or     DWORD PTR ds:0x957ce360,ebp
  426797:	adc    bl,al
  426799:	push   es
  42679a:	adc    eax,0x649c1ca8
  42679f:	inc    ecx
  4267a0:	lods   eax,DWORD PTR ds:[esi]
  4267a1:	pop    ecx
  4267a2:	cmp    DWORD PTR [ecx+0x43db5ba7],ecx
  4267a8:	mov    ch,0xe
  4267aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267ab:	clc    
  4267ac:	aaa    
  4267ad:	sar    ch,1
  4267af:	stc    
  4267b0:	popa   
  4267b1:	dec    ebp
  4267b2:	jno    0x426831
  4267b4:	div    edi
  4267b6:	retw   0x0
	...
  4267ca:	add    BYTE PTR [eax],al
  4267cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267cd:	mov    dh,0xa4
  4267cf:	xchg   edi,eax
  4267d0:	(bad)  
  4267d1:	rcl    DWORD PTR [esi],1
  4267d3:	xchg   edx,eax
  4267d4:	sub    eax,0xf7cb3d4d
  4267d9:	div    edx
  4267db:	jle    0x4267d1
  4267dd:	nop
  4267de:	jmp    0xea5c55e6
  4267e3:	add    esi,DWORD PTR [ebp+0x1bbe6682]
  4267e9:	repz jmp 0x6cdde565
  4267ef:	psubsw mm4,mm7
  4267f2:	int    0xf8
  4267f4:	add    ebx,esi
  4267f6:	les    eax,FWORD PTR gs:[esi+0x3fef8f91]
  4267fd:	dec    ebx
  4267fe:	icebp  
  4267ff:	xor    edi,DWORD PTR [ecx*2-0x2f47eb00]
  426806:	push   eax
  426807:	out    dx,al
  426808:	retf   
  426809:	inc    esi
  42680a:	adc    ch,BYTE PTR [ecx]
  42680c:	mov    ecx,0x3dedc510
  426811:	dec    esi
  426812:	in     al,dx
  426813:	push   0xfffffff9
  426815:	sahf   
  426816:	mov    DWORD PTR [ecx+ecx*1],ebp
  426819:	push   es
  42681a:	pop    esp
  42681b:	icebp  
  42681c:	jmp    0x300bde27
  426821:	push   esi
  426822:	test   al,0xc1
  426824:	out    0x2f,al
  426826:	add    ecx,ebp
  426828:	sbb    esi,DWORD PTR [ebx]
  42682a:	or     al,0x70
  42682c:	lods   al,BYTE PTR ds:[esi]
  42682d:	repnz sti 
  42682f:	jmp    0x426834
	...
  426844:	shl    edi,0xff
  426847:	dec    edx
  426848:	mov    dh,0x8f
  42684a:	test   BYTE PTR [ecx-0x179ef283],ch
  426850:	mov    dh,0x8f
  426852:	xchg   DWORD PTR [esi+0x36e8c4e9],esp
  426858:	(bad)  
  42685a:	sti    
  42685b:	gs jbe 0x4267e1
  42685e:	test   DWORD PTR [esi+0x6a008fb7],esi
  426864:	or     edi,0xfffffffb
  426867:	push   0xffffffbb
  426869:	jmp    0x426899
  42686b:	int    0x4b
  42686d:	repz jne 0x4267f5
  426870:	mov    cl,0xcf
  426872:	call   0xfc3505f9
  426877:	pusha  
  426878:	jecxz  0x426849
  42687a:	test   DWORD PTR [ecx],ebp
  42687c:	sbb    eax,0xb6e8310a
  426881:	pop    DWORD PTR [edi+0x41070ea4]
  426887:	in     eax,dx
  426888:	and    DWORD PTR [edx],0x8fb6e881
  42688e:	sti    
  42688f:	add    BYTE PTR [ecx],ch
  426891:	ds push 0x14
  426894:	pop    ecx
  426895:	mov    cl,0x88
  426897:	push   ebx
  426898:	cmp    al,0x7
  42689a:	cmovl  eax,DWORD PTR [edx]
  42689d:	dec    esi
  42689e:	add    BYTE PTR [ebx+0x169f720],al
  4268a4:	data16 xrelease xchg BYTE PTR [ebp+0x0],al
	...
  4268b9:	add    BYTE PTR [eax],al
  4268bb:	add    BYTE PTR [eax-0x45],cl
  4268be:	call   0xfd4b5f92
  4268c3:	push   0xffffff9d
  4268c5:	xchg   edi,eax
  4268c6:	sbb    al,0x8d
  4268c8:	shl    DWORD PTR [ebx+0x4b],1
  4268cb:	push   0xffffff8c
  4268cd:	xchg   edi,eax
  4268ce:	add    BYTE PTR [edx-0x72],ch
  4268d1:	jbe    0x426897
  4268d3:	call   0x3f7c77
  4268d8:	pop    es
  4268d9:	and    al,0x7f
  4268db:	fistp  DWORD PTR [ebx-0x73ff218f]
  4268e1:	lea    ebp,[eax-0x68]
  4268e4:	jbe    0x426873
  4268e6:	add    bh,bh
  4268e8:	and    dl,BYTE PTR ds:0x8d4d28e6
  4268ee:	add    DWORD PTR [ebp-0x1c],0xc
  4268f2:	hlt    
  4268f3:	add    DWORD PTR [ecx-0x7],ebx
  4268f6:	mov    bl,dh
  4268f8:	in     al,0xe5
  4268fa:	out    0x0,al
  4268fc:	dec    esp
  4268fd:	jbe    0x42693d
  4268ff:	clc    
  426900:	imul   DWORD PTR [ecx+ecx*4+0x3a766c4b]
  426907:	adc    BYTE PTR [ecx+0x1f046ecb],dl
  42690d:	add    ebp,ecx
  42690f:	add    edi,DWORD PTR [ecx-0x65]
  426912:	sub    al,0xe8
  426914:	mov    esi,0x1bfffd1f
  426919:	inc    edx
  42691a:	mov    ebx,0x1090b585
  42691f:	cmp    al,0x0
	...
  426931:	add    BYTE PTR [eax],al
  426933:	add    BYTE PTR [edi-0x732e30cd],cl
  426939:	icebp  
  42693a:	xchg   esp,eax
  42693b:	add    BYTE PTR [edi],0x7c
  42693e:	aam    0xc
  426940:	sub    ah,BYTE PTR [edi+0x3d53c6cf]
  426946:	mov    eax,0x857d9a70
  42694b:	xchg   BYTE PTR [eax-0x12],dh
  42694e:	js     0x426902
  426950:	mov    ecx,ebx
  426952:	cmp    ah,0xcd
  426955:	popf   
  426956:	push   DWORD PTR gs:[edx+0x7389055c]
  42695d:	arpl   WORD PTR [eax],di
  42695f:	les    ecx,FWORD PTR [ebp-0x6500970c]
  426965:	gs mov edx,0x8cbb922a
  42696b:	jb     0x426901
  42696d:	jge    0x426977
  42696f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426970:	cs adc eax,0xe689b298
  426976:	push   DWORD PTR [eax]
  426978:	jne    0x426920
  42697a:	iret   
  42697b:	cmc    
  42697c:	repz int 0xbd
  42697f:	jnp    0x42697f
  426981:	ins    DWORD PTR es:[edi],dx
  426982:	inc    eax
  426983:	or     BYTE PTR [esi],ch
  426985:	scas   al,BYTE PTR es:[edi]
  426986:	add    BYTE PTR [ecx+0x4663c],cl
  42698c:	mov    ch,0x38
  42698e:	sub    ecx,DWORD PTR [ecx+0x195f4e7b]
  426994:	mov    ah,0xe6
  426996:	jbe    0x4269e2
	...
  4269ac:	cmc    
  4269ad:	jl     0x426969
  4269af:	cmp    ah,0xce
  4269b2:	not    BYTE PTR [ebp+0x30]
  4269b5:	sub    esp,DWORD PTR [eax-0xbdf519]
  4269bb:	call   FWORD PTR [esi]
  4269bd:	(bad)  
  4269be:	icebp  
  4269bf:	js     0x426a30
  4269c1:	out    dx,eax
  4269c2:	adc    DWORD PTR [edx],ebp
  4269c4:	push   ds
  4269c5:	(bad)  
  4269c9:	jnp    0x42698e
  4269cb:	jp     0x426a34
  4269cd:	sub    DWORD PTR [ebx],0x40
  4269d0:	call   0x66cfce62
  4269d5:	xor    edx,0xf
  4269d8:	or     eax,0xd264fce7
  4269dd:	out    dx,eax
  4269de:	ins    BYTE PTR es:[edi],dx
  4269df:	les    eax,FWORD PTR [ebx-0x80]
  4269e2:	ins    BYTE PTR es:[edi],dx
  4269e3:	aaa    
  4269e4:	aad    0xe6
  4269e6:	arpl   WORD PTR [edx-0x46],bp
  4269e9:	out    dx,eax
  4269ea:	popw   ds
  4269ec:	ror    DWORD PTR [edi+0x1b813fc2],0x1d
  4269f3:	lods   al,BYTE PTR ds:[esi]
  4269f4:	in     eax,0xe5
  4269f6:	mov    dl,0x3f
  4269f8:	lea    ebx,[ebx]
  4269fa:	and    eax,0xb555359c
  4269ff:	int3   
  426a00:	int    0x54
  426a02:	xchg   ebp,eax
  426a03:	cmc    
  426a04:	fist   DWORD PTR cs:[ebp+eax*4-0x6beb1087]
  426a0c:	pop    edx
  426a0d:	(bad)  
  426a0e:	repz test BYTE PTR [eax],al
	...
  426a21:	add    BYTE PTR [eax],al
  426a23:	add    BYTE PTR [ecx+0x1b],ch
  426a26:	adc    eax,0xa1552d48
  426a2b:	jns    0x426a1c
  426a2d:	shl    DWORD PTR [eax+0x2f],cl
  426a30:	or     DWORD PTR ds:0x77e44fbd,ebx
  426a36:	push   edi
  426a37:	and    dh,bh
  426a39:	(bad)  
  426a3a:	mov    edi,0x6040eacb
  426a3f:	aaa    
  426a40:	and    eax,0x338fad19
  426a45:	gs and eax,0xd7a77b
  426a4b:	das    
  426a4c:	fisub  DWORD PTR [edi]
  426a4e:	add    al,BYTE PTR [ecx+0x20]
  426a51:	xor    al,BYTE PTR [edx]
  426a53:	jmp    0x69573d8d
  426a58:	mov    edx,0x7ae601ec
  426a5d:	inc    edi
  426a5e:	std    
  426a5f:	push   cs
  426a60:	cmp    ah,ch
  426a62:	jne    0x426a89
  426a64:	dec    ecx
  426a65:	retf   
  426a66:	or     eax,0xe84539fe
  426a6b:	pop    ds
  426a6c:	loop   0x426a59
  426a6e:	sti    
  426a6f:	out    dx,al
  426a70:	ret    
  426a71:	fucomip st,st(0)
  426a73:	mov    bh,0xc3
  426a75:	jmp    0x426a72
  426a77:	fidiv  WORD PTR [ebx-0x3c501711]
  426a7d:	jmp    0x426a7a
  426a7f:	adc    dl,al
  426a81:	ret    
  426a82:	or     esp,DWORD PTR [esi+0x76]
  426a85:	dec    ebx
  426a86:	pop    edx
  426a87:	and    al,BYTE PTR [eax]
	...
  426a99:	add    BYTE PTR [eax],al
  426a9b:	add    BYTE PTR [esi-0x30],bl
  426a9e:	or     cl,ch
  426aa0:	retf   
  426aa1:	sbb    ch,ch
  426aa3:	push   0x32
  426aa5:	out    0x7f,al
  426aa7:	xchg   ebp,eax
  426aa8:	sahf   
  426aa9:	aas    
  426aaa:	push   ebp
  426aab:	aaa    
  426aac:	rcr    BYTE PTR [eax],1
  426aae:	cli    
  426aaf:	xchg   esi,eax
  426ab0:	mov    esp,DWORD PTR [edx]
  426ab2:	movaps XMMWORD PTR [ecx+0x52cd4516],xmm7
  426ab9:	pop    ss
  426aba:	inc    esp
  426abb:	in     eax,0xed
  426abd:	add    al,BYTE PTR [edx]
  426abf:	jmp    0x1a01fb7a
  426ac4:	cmp    BYTE PTR [ecx-0x7009045c],al
  426aca:	call   0xfc313aa7
  426acf:	bound  esp,QWORD PTR [esi]
  426ad1:	lahf   
  426ad2:	in     eax,dx
  426ad3:	adc    al,BYTE PTR [edx+0x61]
  426ad6:	push   ecx
  426ad7:	add    BYTE PTR [ecx-0x45],cl
  426ada:	xor    eax,eax
  426adc:	test   BYTE PTR ds:0x6ee3fff9,al
  426ae2:	mov    ebx,0x31bebb75
  426ae7:	ror    BYTE PTR [ebx+0x52],0xe8
  426aeb:	(bad)  
  426aed:	adc    edi,ebp
  426aef:	test   ah,cl
  426af1:	popf   
  426af2:	adc    ecx,DWORD PTR [ebx-0x7f7711e5]
  426af8:	mov    WORD PTR [ecx-0x2dbc0000],ss
  426afe:	and    al,0x9
	...
  426b14:	int3   
  426b15:	mov    eax,ds:0xe0ac15fd
  426b1a:	cmp    eax,DWORD PTR [eax]
  426b1c:	pop    ecx
  426b1d:	push   ebx
  426b1e:	outs   dx,DWORD PTR ds:[esi]
  426b1f:	adc    eax,0x12b487e3
  426b24:	mov    WORD PTR [ebx-0x5047bb7d],ss
  426b2a:	call   0xd68055
  426b2f:	mov    ebx,DWORD PTR [ebp+ebp*4-0x11]
  426b33:	je     0x426b50
  426b35:	lods   eax,DWORD PTR ds:[esi]
  426b36:	out    dx,eax
  426b37:	nop/reserved BYTE PTR [edi]
  426b3a:	sti    
  426b3b:	call   FWORD PTR [esi+ebx*1+0xe37e8c6]
  426b42:	cld    
  426b43:	call   DWORD PTR [ecx]
  426b45:	fcomp  DWORD PTR [edi]
  426b47:	and    al,0xac
  426b49:	pop    ecx
  426b4a:	aas    
  426b4b:	and    al,0x57
  426b4d:	xchg   ecx,eax
  426b4e:	sub    DWORD PTR [eax+edi*2-0x4b],0xffffffe8
  426b53:	ret    
  426b54:	jne    0x426b68
  426b56:	std    
  426b57:	cmp    ebx,DWORD PTR [ecx]
  426b59:	call   0x7f26bb6f
  426b5e:	pop    es
  426b5f:	jmp    ebx
  426b61:	adc    al,0x78
  426b63:	and    al,0xb5
  426b65:	call   0xbf88:0xb7470d08
  426b6c:	mov    eax,ds:0xd94346de
  426b71:	xchg   esi,eax
  426b72:	add    eax,0x3cf6b500
  426b77:	outs   dx,BYTE PTR ds:[esi]
	...
  426b8c:	mov    ecx,0xb5ae91cd
  426b91:	idiv   bh
  426b93:	xchg   BYTE PTR [ecx+0x728917d2],dl
  426b99:	cli    
  426b9a:	addr16 dec eax
  426b9c:	lahf   
  426b9d:	idiv   edi
  426b9f:	xor    ebp,0xffffffe5
  426ba2:	sbb    DWORD PTR [edx-0x7700094b],0xffffffbb
  426ba9:	stc    
  426baa:	(bad)  [ebx]
  426bac:	lods   eax,DWORD PTR ds:[esi]
  426bad:	dec    ebx
  426bae:	ret    
  426baf:	pop    es
  426bb0:	gs mov esi,0xf6b59d2c
  426bb6:	cmp    DWORD PTR [edi+0x438c5d40],0xffffffd9
  426bbd:	in     al,0x7f
  426bbf:	jnp    0x426b92
  426bc1:	int3   
  426bc2:	push   DWORD PTR [ebp-0x44]
  426bc5:	popa   
  426bc6:	mov    BYTE PTR [ebx],0x2e
  426bc9:	jbe    0x426b5a
  426bcb:	(bad)  
  426bcc:	xchg   edx,eax
  426bcd:	mul    bh
  426bcf:	xchg   DWORD PTR [esi-0x7db0000a],esp
  426bd5:	jecxz  0x426c26
  426bd7:	adc    ebp,esi
  426bd9:	test   BYTE PTR [eax-0x75251641],0x44
  426be0:	mov    cl,0x61
  426be2:	xchg   DWORD PTR [edi-0x4c],edi
  426be5:	idiv   bh
  426be7:	mov    cl,dh
  426be9:	ficomp DWORD PTR [edi]
  426beb:	push   0xffffffb4
  426bed:	mov    DWORD PTR [eax+ebp*4+0x0],ebp
	...
  426c01:	add    BYTE PTR [eax],al
  426c03:	add    BYTE PTR [ebp+0x3603e88f],ch
  426c09:	iret   
  426c0a:	loopne 0x426c25
  426c0c:	dec    ebp
  426c0d:	cmp    BYTE PTR [esi],0x81
  426c10:	xor    DWORD PTR [ebx],edx
  426c12:	sub    dh,bh
  426c14:	int3   
  426c15:	in     eax,dx
  426c16:	lods   eax,DWORD PTR ds:[esi]
  426c17:	daa    
  426c18:	retf   
  426c19:	movsx  esp,BYTE PTR [edi]
  426c1c:	ret    
  426c1d:	xchg   edx,eax
  426c1e:	mov    bh,0xb6
  426c20:	sbb    eax,0xd5f8419a
  426c25:	(bad)
  426c29:	xchg   ebx,eax
  426c2a:	and    eax,edi
  426c2c:	(bad)  
  426c2d:	test   al,ch
  426c2f:	sub    DWORD PTR [esi-0x4d],0xfffffff3
  426c33:	or     BYTE PTR [esi-0x7d],ah
  426c36:	outs   dx,BYTE PTR ds:[esi]
  426c37:	dec    eax
  426c38:	sub    eax,0x3ee511dd
  426c3d:	(bad)
  426c41:	jnp    0x426c08
  426c43:	sbb    ecx,DWORD PTR [ebp-0x57d7d22b]
  426c49:	mov    fs,WORD PTR [esi-0x38]
  426c4c:	xchg   esi,eax
  426c4d:	xchg   DWORD PTR [ecx],edx
  426c4f:	(bad)  
  426c50:	in     eax,dx
  426c51:	jns    0x426c38
  426c53:	adc    BYTE PTR [ecx],bh
  426c55:	aas    
  426c56:	ret    0xa181
  426c59:	pop    ss
  426c5a:	sbb    ecx,DWORD PTR [eax]
  426c5c:	jle    0xb841d87d
  426c62:	call   0x1e129d6a
  426c67:	pop    es
	...
  426c7c:	jnp    0x426cd2
  426c7e:	lds    ebx,FWORD PTR [eax]
  426c80:	jp     0x426c20
  426c82:	scas   al,BYTE PTR es:[edi]
  426c83:	cmp    al,0x11
  426c85:	mov    ah,0xf2
  426c87:	div    DWORD PTR [ecx-0x29934bea]
  426c8d:	pop    es
  426c8e:	jmp    0x39ed:0x522c03
  426c95:	jecxz  0x426cc5
  426c97:	in     al,dx
  426c98:	mov    DWORD PTR [eax],edx
  426c9a:	stc    
  426c9b:	add    BYTE PTR [edx-0x55],al
  426c9e:	sti    
  426c9f:	hlt    
  426ca0:	add    al,BYTE PTR [ecx+0x53e1e940]
  426ca6:	and    al,0xed
  426ca8:	jmp    0x426cb9
  426caa:	enter  0xb98d,0x61
  426cae:	sub    edx,DWORD PTR [edi-0x6f008703]
  426cb4:	sahf   
  426cb5:	jb     0x426cad
  426cb7:	cs xor al,0xf
  426cba:	rcr    DWORD PTR [ebp+ebx*4+0x76da5340],0xf2
  426cc2:	push   edi
  426cc3:	adc    esi,DWORD PTR [esp+ebp*8]
  426cc6:	test   BYTE PTR [ecx],ch
  426cc8:	loop   0x426c62
  426cca:	dec    edi
  426ccb:	sahf   
  426ccc:	rcl    BYTE PTR [eax-0x1715eea8],1
  426cd2:	sti    
  426cd3:	div    BYTE PTR ds:0xf6dbb47e
  426cd9:	jmp    0x17fb:0x8b8d2d88
	...
  426cf4:	dec    ecx
  426cf5:	rol    BYTE PTR [edi],cl
  426cf7:	(bad)  
  426cf8:	xor    eax,0xb9abe844
  426cfd:	in     al,dx
  426cfe:	sti    
  426cff:	jb     0x426d6e
  426d01:	mov    es,WORD PTR ds:0x8fb755
  426d07:	sbb    DWORD PTR [edi*2-0x15892454],esi
  426d0e:	xchg   BYTE PTR [esi],ch
  426d10:	lods   eax,DWORD PTR ds:[esi]
  426d11:	sbb    BYTE PTR [ecx+0x8fb779],al
  426d17:	add    DWORD PTR [ecx+0x63],edi
  426d1a:	pop    ss
  426d1b:	jmp    0x5858a6
  426d20:	cmp    al,0x84
  426d22:	inc    eax
  426d23:	add    cl,dl
  426d25:	dec    esi
  426d26:	or     al,0x85
  426d28:	shr    BYTE PTR [ecx-0x4],cl
  426d2b:	push   DWORD PTR [edi]
  426d2d:	call   0x50c1:0x93504789
  426d34:	fild   DWORD PTR [ecx-0x71a3ed54]
  426d3a:	pop    ebp
  426d3b:	pop    esi
  426d3c:	pop    ecx
  426d3d:	retf   
  426d3e:	mov    ch,ah
  426d40:	pop    ecx
  426d41:	push   ebx
  426d42:	dec    esi
  426d43:	mov    ebp,DWORD PTR [eax+0xd]
  426d46:	call   0xd08aa3
  426d4b:	push   ebx
  426d4c:	cmovnp edx,DWORD PTR [ebp+0x38]
  426d50:	stc    
  426d51:	xor    DWORD PTR [edx+ecx*1-0x65],0xe80be1
	...
  426d69:	add    BYTE PTR [eax],al
  426d6b:	add    BYTE PTR [edi-0x480002a3],bh
  426d71:	xchg   ebp,eax
  426d72:	push   eax
  426d73:	jmp    DWORD PTR [ecx+0x7e]
  426d76:	call   0xd0e0d5
  426d7b:	mov    ecx,esp
  426d7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d7e:	icebp  
  426d7f:	je     0x426db9
  426d81:	sbb    edi,DWORD PTR [edi]
  426d83:	or     al,0x83
  426d85:	add    BYTE PTR [edi-0x3962558],dh
  426d8b:	call   0x3ed147
  426d90:	not    BYTE PTR [esi-0x33a38279]
  426d96:	jecxz  0x426db8
  426d98:	pop    esp
  426d99:	imul   edi,esp,0xa4171956
  426d9f:	(bad)  
  426da0:	pop    ebx
  426da1:	imul   ecx,DWORD PTR [ebx-0x75],0x4586c453
  426da8:	cmp    BYTE PTR [ebp-0x4a151d],0x7a
  426daf:	cld    
  426db0:	xor    edx,DWORD PTR ss:0x7c0f365d
  426db7:	jae    0x426d73
  426db9:	imul   edi,ecx,0xcbc3e13
  426dbf:	push   ecx
  426dc0:	dec    edx
  426dc1:	out    0x7,eax
  426dc3:	std    
  426dc4:	test   al,0xe
  426dc6:	sbb    al,BYTE PTR [eax-0x4b]
  426dc9:	jne    0x426e47
  426dcb:	(bad)  
  426dcc:	test   eax,0xd789f4
	...
  426de1:	add    BYTE PTR [eax],al
  426de3:	add    BYTE PTR [edx],ch
  426de5:	les    edx,FWORD PTR [ebx]
  426de7:	call   0xfcbd4b0e
  426dec:	cmp    DWORD PTR [esi],0x7d
  426def:	or     DWORD PTR [edx],edx
  426df1:	mov    ds:0xfdf689da,al
  426df6:	dec    esp
  426df7:	shl    DWORD PTR [ebp+0x988d8f6],0x76
  426dfe:	jo     0x426e4b
  426e00:	jmp    0x426e3d
  426e02:	or     BYTE PTR [eax],dl
  426e04:	xchg   BYTE PTR [ebp+0x21],ch
  426e07:	je     0x426dd0
  426e09:	add    BYTE PTR ss:[ebp+0x61],dl
  426e0d:	sbb    DWORD PTR [edi+0x7d],edi
  426e10:	shl    DWORD PTR [esi+esi*8],0x66
  426e14:	ret    
  426e15:	lock add al,0x74
  426e18:	pop    ecx
  426e19:	cmp    al,0xfe
  426e1b:	mov    bh,BYTE PTR [eax]
  426e1d:	ss fsub st,st(7)
  426e20:	popa   
  426e21:	sar    DWORD PTR [edx-0x4],1
  426e24:	stos   BYTE PTR es:[edi],al
  426e25:	inc    eax
  426e26:	adc    BYTE PTR [ecx+0x7f5d17a],cl
  426e2c:	add    eax,0x1f4f4f2a
  426e31:	out    dx,eax
  426e32:	xlat   BYTE PTR ds:[ebx]
  426e33:	mov    BYTE PTR [edx-0x32],bh
  426e36:	ins    DWORD PTR es:[edi],dx
  426e37:	aaa    
  426e38:	mov    ch,0x8f
  426e3a:	jmp    0xdaa5a8c6
  426e3f:	jmp    0x785788f9
  426e44:	add    bh,al
  426e46:	bound  ebp,QWORD PTR [esi+0x0]
	...
  426e59:	add    BYTE PTR [eax],al
  426e5b:	add    BYTE PTR [ecx-0x18],ah
  426e5e:	je     0x426e28
  426e60:	mov    dl,0x3f
  426e62:	jp     0x426e59
  426e64:	xchg   esi,eax
  426e65:	idiv   DWORD PTR [ecx+0x64e84aa1]
  426e6b:	inc    ebx
  426e6c:	(bad)  
  426e6d:	ins    BYTE PTR es:[edi],dx
  426e6e:	data16 add BYTE PTR [ebp-0x631f2c71],ch
  426e75:	mov    ?,WORD PTR [ecx-0x40688876]
  426e7b:	add    cl,BYTE PTR [ebx+0x197d43f7]
  426e81:	call   0x12e933f4
  426e86:	sub    dh,bh
  426e88:	jb     0x426eff
  426e8a:	jmp    0x8fc1f70d
  426e8f:	pop    es
  426e90:	or     al,0xa6
  426e92:	imul   edi,ebp,0x3c9c8fca
  426e98:	jecxz  0x426e2a
  426e9a:	call   0x855d1596
  426e9f:	mov    bh,0xa5
  426ea1:	iret   
  426ea2:	adc    DWORD PTR ds:0x7df2e7e0,edi
  426ea8:	inc    eax
  426ea9:	fwait
  426eaa:	pop    esi
  426eab:	inc    esi
  426eac:	shl    DWORD PTR [eax-0xf],0xd3
  426eb0:	mov    ecx,0xbaea39bb
  426eb5:	inc    edi
  426eb6:	pop    esi
  426eb7:	dec    ebp
  426eb8:	xchg   edx,eax
  426eb9:	adc    BYTE PTR [edx],dl
  426ebb:	add    al,0xb5
  426ebd:	or     ebp,DWORD PTR [edx+0xf8]
	...
  426ed3:	add    BYTE PTR [edx+0x1f10241a],ch
  426ed9:	nop
  426eda:	add    BYTE PTR [esi-0x1799707d],dh
  426ee0:	push   0xf8a7abef
  426ee5:	jecxz  0x426f42
  426ee7:	inc    edx
  426ee8:	(bad)  
  426ee9:	rol    BYTE PTR [ecx+ebp*8],1
  426eec:	sbb    DWORD PTR [eax],0xffffffed
  426eef:	push   0xffffffe5
  426ef1:	or     BYTE PTR [edi+0x1f],0x80
  426ef5:	outs   dx,DWORD PTR ds:[esi]
  426ef6:	add    dh,dl
  426ef8:	jbe    0x426ee1
  426efa:	arpl   cx,cx
  426efc:	mov    eax,ds:0x5581004f
  426f01:	dec    ebp
  426f02:	sti    
  426f03:	data16 sub al,0xbf
  426f06:	das    
  426f07:	push   edi
  426f08:	in     al,dx
  426f09:	lds    esi,FWORD PTR [ecx+edx*8+0x3d]
  426f0d:	nop
  426f0e:	push   edx
  426f0f:	mov    edx,0xe9fd16a1
  426f14:	mov    dh,0x8f
  426f16:	xchg   edx,ebp
  426f18:	call   0xd19c6a5c
  426f1d:	out    0xfb,al
  426f1f:	jmp    0x26a8ff51
  426f24:	in     al,0xe3
  426f26:	nop
  426f27:	add    DWORD PTR [esi-0x4b9dff71],esi
  426f2d:	cmp    eax,0x97490e4f
  426f32:	add    ecx,ebp
  426f34:	mov    dh,0x18
  426f36:	add    BYTE PTR [eax+eax*1+0x0],ch
	...
  426f4a:	add    BYTE PTR [eax],al
  426f4c:	add    ch,bl
  426f4e:	push   ecx
  426f4f:	and    DWORD PTR [esi-0x1a16bf84],0x766c10e3
  426f59:	popa   
  426f5a:	cmp    eax,0x50fa7b6c
  426f5f:	(bad)  
  426f60:	ret    
  426f61:	mov    ds:0x79b9290f,eax
  426f66:	pop    es
  426f67:	add    ah,dl
  426f69:	in     eax,dx
  426f6a:	add    BYTE PTR [ebp-0x80],0xf
  426f6e:	call   0x6594fe83
  426f73:	mov    ecx,ebx
  426f75:	mov    BYTE PTR [di+0x50],al
  426f79:	pop    ss
  426f7a:	add    al,0x8b
  426f7c:	push   eax
  426f7d:	adc    eax,0x2df9ec6f
  426f82:	lahf   
  426f83:	push   0x3c185c
  426f88:	mov    esp,0x9c91fd2e
  426f8d:	xchg   edx,eax
  426f8e:	add    BYTE PTR [eax],al
  426f90:	xlat   BYTE PTR ds:[ebx]
  426f91:	int    0xf7
  426f93:	mov    edx,DWORD PTR [edx+eax*8-0x4]
  426f97:	push   ecx
  426f98:	inc    esp
  426f99:	ret    
  426f9a:	pop    ebp
  426f9b:	mov    ebx,edi
  426f9d:	mov    edx,0xe81769c3
  426fa3:	and    eax,0xffffff8a
  426fa6:	push   ecx
  426fa7:	push   esi
  426fa8:	cmp    ecx,DWORD PTR [esi+edi*1-0x1]
  426fac:	sbb    al,0x7a
  426fae:	dec    esp
  426faf:	inc    DWORD PTR [eax]
	...
  426fc1:	add    BYTE PTR [eax],al
  426fc3:	add    bl,al
  426fc5:	arpl   WORD PTR [eax+0x6f4799d8],cx
  426fcb:	popa   
  426fcc:	or     ebp,0x7dd350e3
  426fd2:	cmp    al,0x13
  426fd4:	sbb    al,0x92
  426fd6:	data16 or BYTE PTR [ebx+eiz*2],ah
  426fda:	outs   dx,BYTE PTR ds:[esi]
  426fdb:	or     BYTE PTR [edx],ch
  426fdd:	sbb    DWORD PTR [edi],edi
  426fdf:	call   0x138aebb7
  426fe4:	sbb    al,0x92
  426fe6:	add    DWORD PTR [ebp-0x44],0xb
  426fea:	mov    esp,0x1169474
  426fef:	(bad)  
  426ff0:	loope  0x427055
  426ff2:	dec    edx
  426ff3:	xor    DWORD PTR [ebp-0x5e76eb36],0x44
  426ffa:	icebp  
  426ffb:	out    0x50,eax
  426ffd:	adc    al,0xa2
  426fff:	push   eax
  427000:	pop    eax
  427001:	es xchg ebp,eax
  427003:	out    0xb5,eax
  427005:	idiv   bh
  427007:	xor    BYTE PTR [ebp-0x64],0xb
  42700b:	data16 lods al,BYTE PTR ss:[esi]
  42700e:	jl     0x42700c
  427010:	call   0x6a84b1ff
  427015:	clc    
  427016:	mov    BYTE PTR [edx+0x4d],al
  427019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42701a:	ja     0x42702e
  42701c:	cmc    
  42701d:	leave  
  42701e:	mov    edi,0x76e3d2ff
  427023:	inc    ecx
  427025:	out    dx,al
  427026:	mov    al,BYTE PTR [eax]
	...
  42703c:	out    0x75,al
  42703e:	aam    0x7
  427040:	xchg   BYTE PTR [ecx-0x29],dl
  427043:	pop    ebp
  427044:	ds mov edx,0xf2f7c6db
  42704a:	call   DWORD PTR [edx+0x2e]
  42704d:	mov    ds:0x5bb388d5,eax
  427052:	leave  
  427053:	sti    
  427054:	fs cld 
  427056:	jbe    0x4270a7
  427058:	popf   
  427059:	jae    0x42709f
  42705b:	jae    0x427016
  42705d:	jns    0x427040
  42705f:	sti    
  427060:	mov    ch,0x61
  427062:	(bad)  
  427063:	push   ebp
  427064:	repnz or BYTE PTR es:[ecx-0x3fb28590],cl
  42706c:	mov    BYTE PTR [ecx+0x68],dh
  42706f:	jle    0x42703a
  427071:	jmp    0x31d2:0x9d2fffb
  427078:	out    dx,al
  427079:	add    eax,0xc87d1277
  42707e:	mov    edi,0xe19037ff
  427083:	jp     0x4270ab
  427085:	fs xchg ecx,eax
  427087:	adc    esp,DWORD PTR [ecx]
  427089:	xchg   edi,eax
  42708a:	pop    esi
  42708b:	dec    edx
  42708c:	call   0xebf8:0xb503bfa3
  427093:	rcr    BYTE PTR [edx-0x768519dd],cl
  427099:	or     ebp,DWORD PTR [edx-0x1a87e810]
  42709f:	add    al,0x0
	...
  4270b1:	add    BYTE PTR [eax],al
  4270b3:	add    BYTE PTR [ebp+0x3f526e8f],dh
  4270b9:	adc    cl,BYTE PTR [esi-0x7e1b9688]
  4270bf:	retf   
  4270c0:	push   ds
  4270c1:	in     al,0x8a
  4270c3:	mov    BYTE PTR [edi],dh
  4270c5:	repz test BYTE PTR [edx+0x51],bh
  4270c9:	aas    
  4270ca:	jp     0x4270dc
  4270cc:	jno    0x42704e
  4270ce:	sub    DWORD PTR [esi+ebp*1],eax
  4270d1:	pop    edx
  4270d2:	jne    0x42708f
  4270d4:	cli    
  4270d5:	mov    gs,ecx
  4270d7:	add    ebx,DWORD PTR ds:0x297a4d2d
  4270dd:	adc    ch,BYTE PTR [ebp+0x5f]
  4270e0:	sbb    eax,0x8cd34ae4
  4270e5:	(bad)  
  4270e6:	outs   dx,BYTE PTR ds:[esi]
  4270e7:	inc    ecx
  4270e8:	adc    BYTE PTR [edx],0x65
  4270eb:	pmulhuw mm6,QWORD PTR [bp+si]
  4270ef:	rol    DWORD PTR [ecx],cl
  4270f1:	jp     0x4270c4
  4270f3:	push   ss
  4270f4:	jne    0x427085
  4270f6:	ins    BYTE PTR es:[edi],dx
  4270f7:	inc    ebx
  4270f8:	or     WORD PTR [edi+0xe0a3e04],0x7e
  427100:	loope  0x4270e5
  427102:	mov    ecx,0x9d79d9d2
  427107:	adc    al,0x75
  427109:	(bad)  
  42710a:	ins    BYTE PTR es:[edi],dx
  42710b:	adc    dh,0xe7
  42710e:	add    dh,dh
  427110:	cmp    al,0x54
  427112:	call   0xfc252bb1
  427117:	out    0x0,al
	...
  427129:	add    BYTE PTR [eax],al
  42712b:	add    BYTE PTR [edx-0x46ab0469],ah
  427131:	cmp    al,0xe8
  427133:	mov    ch,0x17
  427135:	jecxz  0x427132
  427137:	gs icebp 
  427139:	pop    ebp
  42713a:	sbb    al,0x1
  42713c:	push   edx
  42713d:	xchg   ebx,eax
  42713e:	jne    0x427124
  427140:	ss call 0x77e9ae4c
  427146:	adc    BYTE PTR [esi],al
  427148:	mov    cl,0x8f
  42714a:	sti    
  42714b:	cld    
  42714c:	jb     0x4270e0
  42714e:	inc    eax
  42714f:	jmp    0x262c4140
  427154:	fsubr  st(3),st
  427156:	sti    
  427157:	pop    ecx
  427158:	mov    dh,0xf8
  42715a:	(bad)  
  42715b:	mov    edx,0xb05744f6
  427160:	repz xchg esi,eax
  427162:	add    BYTE PTR [eax+esi*1],bl
  427165:	test   DWORD PTR [ecx-0x41d6683],0x533d09e9
  42716f:	pop    esi
  427170:	ficom  DWORD PTR [ebx]
  427172:	shr    DWORD PTR [edx+0x597616b6],cl
  427178:	mov    edi,esp
  42717a:	loop   0x427165
  42717c:	mov    dh,0xb
  42717e:	shr    esi,0x8a
  427181:	cld    
  427182:	add    cl,ch
  427184:	mov    dh,0x10
  427186:	jle    0x427169
  427188:	mov    dh,0xc9
  42718a:	inc    ebp
  42718b:	es mov ecx,0x1e1a5e
	...
  4271a1:	add    BYTE PTR [eax],al
  4271a3:	add    dl,bl
  4271a5:	xchg   edx,eax
  4271a6:	xchg   DWORD PTR [edx+edi*4+0x5c1575e4],edx
  4271ad:	pop    ebp
  4271ae:	lock add BYTE PTR [ebp+ebx*2+0x16cbfffd],ah
  4271b6:	aas    
  4271b7:	call   FWORD PTR [ecx+0x22]
  4271ba:	in     al,dx
  4271bb:	call   0x3de1f5
  4271c0:	xchg   ebx,esi
  4271c2:	mov    BYTE PTR [ebp-0x80],bh
  4271c5:	mov    edi,0x767c75fc
  4271ca:	xor    DWORD PTR [eax],ecx
  4271cc:	imul   esp,DWORD PTR [edi-0x78],0xfffffff0
  4271d0:	or     DWORD PTR [edx],esp
  4271d2:	in     al,dx
  4271d3:	call   0x3de285
  4271d8:	adc    DWORD PTR [ecx+0x6f],esp
  4271db:	push   ecx
  4271dc:	hlt    
  4271dd:	jecxz  0x4271dd
  4271df:	call   FWORD PTR [esi+esi*8-0x65]
  4271e3:	outs   dx,DWORD PTR ds:[esi]
  4271e4:	pushf  
  4271e5:	mov    eax,DWORD PTR [edi-0x397cb7b]
  4271eb:	push   DWORD PTR [ecx+edx*8]
  4271ee:	dec    edi
  4271ef:	add    BYTE PTR [esi+edi*4-0x78],bl
  4271f3:	iret   
  4271f4:	(bad)  
  4271f5:	push   eax
  4271f6:	jecxz  0x4271fd
  4271f8:	popa   
  4271f9:	mov    es,WORD PTR [eax]
  4271fb:	test   DWORD PTR [edx+esi*8],ecx
  4271fe:	and    ecx,DWORD PTR [ebp-0x28957]
  427204:	mov    edi,DWORD PTR [ebp+0x75fc]
	...
  42721a:	add    BYTE PTR [eax],al
  42721c:	adc    al,0x23
  42721e:	out    dx,al
  42721f:	add    DWORD PTR [esi+ecx*4],ecx
  427222:	call   0xd0628a
  427227:	test   ah,bl
  427229:	repnz or edi,edi
  42722c:	inc    ecx
  42722d:	jle    0x427284
  42722f:	mov    ecx,DWORD PTR [ecx-0x76]
  427232:	push   edx
  427233:	call   0x3eda9b
  427238:	fs and ebp,edi
  42723b:	push   esi
  42723c:	mov    ch,0x90
  42723e:	fiadd  DWORD PTR [edx+ebx*8]
  427241:	nop
  427242:	lea    eax,[edx-0x2e]
  427245:	sub    dl,bl
  427247:	pop    eax
  427248:	cld    
  427249:	mov    ch,0x3
  42724b:	add    BYTE PTR [eax],bh
  42724d:	loop   0x427239
  42724f:	sbb    eax,0xdd93c32e
  427254:	div    dh
  427256:	shl    BYTE PTR cs:[eax],0x20
  42725a:	icebp  
  42725b:	adc    DWORD PTR [esi],ebp
  42725d:	in     al,0x97
  42725f:	(bad)  
  427261:	idiv   BYTE PTR [edx+esi*1]
  427264:	or     esi,ebx
  427266:	mov    edi,0x377f7780
  42726b:	mov    edi,0xc7802307
  427270:	jp     0x4272a8
  427272:	rcl    BYTE PTR [edx+0x3e],1
  427275:	jnp    0x427297
  427277:	or     al,0x36
  427279:	pop    ds
  42727a:	je     0x4272ac
  42727c:	jle    0x427220
  42727e:	xchg   edi,esi
	...
  427294:	sahf   
  427295:	or     eax,0xf7398404
  42729a:	(bad)  
  42729b:	(bad)  
  42729c:	ds hlt 
  42729e:	xchg   ebx,eax
  42729f:	(bad)  
  4272a1:	imul   BYTE PTR [esi]
  4272a3:	shl    bl,0x1d
  4272a6:	inc    edi
  4272a7:	jne    0x42727d
  4272a9:	pop    ebp
  4272aa:	adc    DWORD PTR [eax-0x76ffc9f5],ebx
  4272b0:	daa    
  4272b1:	adc    BYTE PTR [edx],0x74
  4272b4:	scas   eax,DWORD PTR es:[edi]
  4272b5:	ss jg  0x42727d
  4272b8:	fisttp QWORD PTR [ebp+0x3e017145]
  4272be:	pop    es
  4272bf:	mov    DWORD PTR ds:0xb6276dce,eax
  4272c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272c6:	xchg   edi,esi
  4272c8:	push   0x5dc4ce8f
  4272cd:	(bad)  
  4272ce:	shl    DWORD PTR [ebp+0x3a6c24a],1
  4272d4:	int    0xae
  4272d6:	jecxz  0x42734e
  4272d8:	ror    DWORD PTR [ebx],1
  4272da:	sub    dh,al
  4272dc:	mov    edx,DWORD PTR [edi*4-0x16b31f69]
  4272e3:	jbe    0x42729c
  4272e5:	add    ecx,DWORD PTR [ebx+eax*8]
  4272e8:	mov    dl,0x15
  4272ea:	fucomi st,st(2)
  4272ec:	mov    al,ds:0x3d30e6b7
  4272f1:	shl    DWORD PTR [esi],0x4
  4272f4:	and    DWORD PTR [eax+0xd336],edi
	...
  42730a:	add    BYTE PTR [eax],al
  42730c:	in     eax,0x3c
  42730e:	jo     0x427335
  427310:	cmp    eax,0xa776e541
  427315:	xchg   ebx,eax
  427316:	fadd   st,st(3)
  427318:	jp     0x427327
  42731a:	sbb    al,0x18
  42731c:	jo     0x427334
  42731e:	sub    al,0xc
  427320:	xor    al,BYTE PTR [ecx-0x13]
  427323:	mov    WORD PTR [eax],es
  427325:	and    BYTE PTR [eax-0x2b],0xc6
  427329:	push   ss
  42732a:	sub    al,0x1c
  42732c:	cmp    al,BYTE PTR [ecx-0x37]
  42732f:	mov    eax,gs
  427331:	stos   DWORD PTR es:[edi],eax
  427332:	outs   dx,BYTE PTR ds:[esi]
  427333:	ds loopne 0x427376
  427336:	adc    al,0xdb
  427338:	je     0x4272c5
  42733a:	jmp    0xcf21b10c
  42733f:	ins    DWORD PTR es:[edi],dx
  427340:	ror    BYTE PTR [esp+edx*1-0x16b3ff64],cl
  427347:	into   
  427348:	sbb    DWORD PTR [ecx-0x1f],ebx
  42734b:	sbb    al,0x8f
  42734e:	inc    edx
  42734f:	adc    ch,dh
  427351:	jl     0x4272fc
  427353:	add    eax,DWORD PTR [eax]
  427355:	pop    ecx
  427356:	add    ch,ah
  427358:	mov    ds,WORD PTR [edx+eax*1+0x2e]
  42735c:	imul   esp,ebx,0x72
  42735f:	stc    
  427360:	aas    
  427361:	dec    edx
  427362:	adc    al,0x11
  427364:	clc    
  427365:	push   ebp
  427366:	add    cl,ch
  427368:	arpl   WORD PTR [edx+0x18],bx
  42736b:	add    ecx,ebx
  42736d:	mov    ebx,edi
  42736f:	push   es
	...
  427384:	aas    
  427385:	pop    edx
  427386:	and    al,0x64
  427388:	push   eax
  427389:	pop    esp
  42738a:	add    bl,BYTE PTR [edi-0x112613b2]
  427390:	sub    dh,bh
  427392:	pushf  
  427393:	(bad)  
  427394:	je     0x427375
  427396:	xchg   cl,ah
  427398:	and    bl,BYTE PTR [edi]
  42739a:	jne    0x4273c8
  42739c:	sub    al,0x82
  42739e:	cwde   
  42739f:	scas   eax,DWORD PTR es:[edi]
  4273a0:	je     0x427381
  4273a2:	xchg   BYTE PTR [ecx+0x6c28d69c],dh
  4273a8:	ins    DWORD PTR es:[edi],dx
  4273a9:	mov    ds,eax
  4273ab:	push   0xffffffbe
  4273ad:	(bad)  
  4273ae:	jne    0x427397
  4273b0:	xor    eax,0x5a3628f6
  4273b5:	loop   0x4273ee
  4273b7:	mov    eax,ds:0x9685b465
  4273bc:	dec    edx
  4273bd:	lea    ecx,[esi-0x7f]
  4273c0:	xchg   esi,eax
  4273c1:	xchg   ebp,eax
  4273c2:	sti    
  4273c3:	xchg   BYTE PTR [esi+0x749f989a],dl
  4273c9:	(bad)  
  4273cb:	out    0x2d,al
  4273cd:	int3   
  4273ce:	addr16 mov al,ds:0x1de1
  4273d2:	cdq    
  4273d3:	inc    edi
  4273d4:	hlt    
  4273d5:	fsubrp st(3),st
  4273d7:	mov    cl,0x23
  4273d9:	fdiv   st(3),st
  4273db:	pusha  
  4273dc:	loop   0x4273d9
  4273de:	fisubr DWORD PTR [edx+0x5a3cb6]
  4273e4:	(bad)  
  4273e6:	mov    ah,ch
	...
  4273fc:	sbb    eax,0x14b855c2
  427401:	in     eax,dx
  427402:	inc    eax
  427403:	add    BYTE PTR [ebx-0x6bba7dbd],ah
  427409:	imul   esp,DWORD PTR [ecx+0x10],0xffffffc3
  42740d:	mov    BYTE PTR fs:[ebp-0x2c],dh
  427411:	pop    esi
  427412:	mov    ebx,0xfb5c580f
  427417:	(bad)  
  427418:	fadd   QWORD PTR [edi]
  42741a:	aas    
  42741b:	adc    BYTE PTR [edi+0x5b],cl
  42741e:	xor    BYTE PTR [ebx+edi*8+0xf],dh
  427422:	hlt    
  427423:	inc    esi
  427424:	sub    BYTE PTR [ecx-0x2007077f],ah
  42742a:	adc    DWORD PTR es:[esp+esi*8-0x29e88f92],0xf
  427433:	cmp    ecx,0x57
  427436:	sti    
  427437:	cmp    cl,0x8b
  42743a:	add    BYTE PTR [ebp-0x72af7427],cl
  427440:	leave  
  427441:	push   edi
  427442:	dec    ebx
  427443:	jmp    FWORD PTR [ecx+0x47e8527b]
  427449:	xchg   DWORD PTR [eax],eax
  42744b:	add    cl,bl
  42744d:	push   edx
  42744e:	outs   dx,BYTE PTR ds:[esi]
  42744f:	push   eax
  427450:	call   0xe992:0x5c10406b
  427457:	dec    eax
  427458:	scas   eax,DWORD PTR es:[edi]
  427459:	int3   
  42745a:	mov    esp,0xfbcf2280
  42745f:	push   esi
	...
  427474:	ret    
  427475:	lea    esp,[edx+edx*1+0x34e893dc]
  42747c:	xchg   edx,eax
  42747d:	arpl   sp,di
  42747f:	xor    dh,BYTE PTR [edi+0xf]
  427482:	hlt    
  427483:	push   DWORD PTR [ebp-0x3f76e744]
  427489:	pusha  
  42748a:	push   ebp
  42748b:	inc    eax
  42748c:	mov    ch,0xc1
  42748e:	aas    
  42748f:	daa    
  427490:	mov    ebp,0x810407fc
  427495:	hlt    
  427496:	je     0x42750b
  427498:	mov    ebp,0xf91274f0
  42749d:	fnstcw WORD PTR [edi-0x33571f01]
  4274a3:	cld    
  4274a4:	rcl    BYTE PTR [ecx+edx*1+0x40],0xb5
  4274a9:	sub    eax,0x5c6ed87c
  4274ae:	std    
  4274af:	add    BYTE PTR [eax-0x48],0xdb
  4274b3:	jae    0x42745a
  4274b5:	in     eax,0xed
  4274b7:	pop    ss
  4274b8:	mov    dl,0x64
  4274ba:	or     edi,ebp
  4274bc:	and    bh,dl
  4274be:	outs   dx,BYTE PTR ds:[esi]
  4274bf:	jb     0x427472
  4274c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274c2:	outs   dx,DWORD PTR ds:[esi]
  4274c3:	push   edx
  4274c4:	popf   
  4274c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274c6:	cmp    eax,0xd4e6a9c1
  4274cb:	push   eax
  4274cc:	loopne 0x42752f
  4274ce:	dec    ebp
  4274cf:	xor    BYTE PTR [eax-0x4d8dae6e],dl
  4274d5:	fdivr  DWORD PTR [edi]
  4274d7:	out    0x0,al
	...
  4274e9:	add    BYTE PTR [eax],al
  4274eb:	add    cl,al
  4274ed:	out    0xff,eax
  4274ef:	(bad)  
  4274f0:	fst    QWORD PTR [edx+0x4e]
  4274f3:	inc    eax
  4274f4:	mov    ch,0xfd
  4274f6:	sbb    DWORD PTR [edi+eax*8-0x639fb5a],esp
  4274fd:	sar    dl,cl
  4274ff:	dec    DWORD PTR [ebp-0x9220c3d]
  427505:	out    0xf8,al
  427507:	sbb    eax,esp
  427509:	jnp    0x4274e7
  42750b:	(bad)  
  42750c:	xor    dh,bl
  42750e:	(bad)  
  42750f:	cld    
  427510:	ror    BYTE PTR [edi-0x708aeba3],0x86
  427517:	clc    
  427518:	clc    
  427519:	push   eax
  42751a:	jmp    0x65cf6b4d
  42751f:	aas    
  427520:	or     bl,ch
  427522:	jmp    0x1b9e24a5
  427527:	(bad)  
  427528:	cli    
  427529:	mov    eax,ds:0x65fe2f29
  42752e:	aad    0x7e
  427530:	(bad)  
  427531:	push   edi
  427532:	inc    ebx
  427533:	(bad)  
  427534:	loop   0x4274cd
  427536:	std    
  427537:	test   DWORD PTR [ecx-0x4afba0ed],ebp
  42753d:	(bad)
  427541:	bound  edx,QWORD PTR ds:0x6c8c2fda
  427547:	or     BYTE PTR [ebp+0x2ab1e98f],dh
  42754d:	mov    esi,0x3a6
	...
  427562:	add    BYTE PTR [eax],al
  427564:	popf   
  427565:	mov    ch,ch
  427567:	jb     0x42750a
  427569:	adc    ebp,DWORD PTR [edx-0x1600cefe]
  42756f:	add    esi,DWORD PTR [ebp-0xaadb1d2]
  427575:	(bad)  
  427576:	outs   dx,BYTE PTR ds:[esi]
  427577:	add    ch,bh
  427579:	mov    ebp,0xa22c0426
  42757e:	inc    ebp
  42757f:	push   ss
  427580:	cmc    
  427581:	(bad)  
  427582:	adc    bl,dh
  427584:	xchg   ebp,eax
  427585:	push   es
  427586:	push   es
  427587:	test   DWORD PTR [ecx-0x6e],esp
  42758a:	sbb    eax,0x3c8ff552
  42758f:	jae    0x427518
  427591:	arpl   WORD PTR [ebx-0x6422b53a],bp
  427597:	jle    0x4275e3
  427599:	cwde   
  42759a:	jl     0x427593
  42759c:	fild   QWORD PTR [ecx+0x0]
  42759f:	loop   0x4275ae
  4275a1:	(bad)  ds:0x4f84f5
  4275a7:	data16 jl 0x4275b1
  4275aa:	icebp  
  4275ab:	and    bl,BYTE PTR [edi+eax*1+0x4fa8e52e]
  4275b2:	add    ch,dl
  4275b4:	fld    TBYTE PTR [ecx+0x0]
  4275b7:	sahf   
  4275b8:	(bad)  
  4275ba:	add    al,BYTE PTR [ebx+0x2f015a79]
  4275c0:	cld    
  4275c1:	nop
  4275c2:	push   0x6991fc26
  4275c7:	add    BYTE PTR ss:[eax],al
	...
  4275da:	add    BYTE PTR [eax],al
  4275dc:	stc    
  4275dd:	fcmovnb st,st(5)
  4275df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275e0:	fmul   st,st(6)
  4275e2:	call   0xfc1cc273
  4275e7:	fs jbe 0x42764a
  4275ea:	or     ch,BYTE PTR [edi]
  4275ec:	cli    
  4275ed:	scas   eax,DWORD PTR es:[edi]
  4275ee:	psubsb mm3,QWORD PTR [ebx-0x51]
  4275f2:	ret    0xdaad
  4275f5:	mov    BYTE PTR [ecx],al
  4275f7:	add    al,ah
  4275f9:	inc    ecx
  4275fa:	jmpw   0x1423
  4275fe:	je     0x4275bf
  427600:	jo     0x4275dd
  427602:	cli    
  427603:	mov    esp,0xce00696c
  427608:	ret    0xda63
  42760b:	sub    bh,BYTE PTR [ecx+0x7abed5dc]
  427611:	push   edi
  427612:	fisubr DWORD PTR [edx]
  427614:	mov    ecx,0x85415a3c
  427619:	mov    ebp,0x7de5e93f
  42761e:	lods   al,BYTE PTR ds:[esi]
  42761f:	sti    
  427620:	jbe    0x4275fd
  427622:	mov    DWORD PTR ds:0x325d889d,ebp
  427628:	jle    0x4275fa
  42762a:	push   ebp
  42762b:	add    bh,al
  42762d:	outs   dx,DWORD PTR ds:[esi]
  42762e:	sub    ah,0x48
  427631:	les    edx,FWORD PTR [ebp-0x75]
  427634:	jno    0x427641
  427636:	cmovo  ebx,DWORD PTR [eax+edi*4]
  42763a:	imul   eax,DWORD PTR [edi+eiz*4],0x8d5c4b
	...
  427651:	add    BYTE PTR [eax],al
  427653:	add    BYTE PTR [ecx+0x6b],dl
  427656:	dec    ebx
  427657:	lea    esp,[ecx+0x63]
  42765a:	dec    ebx
  42765b:	push   0x1d
  42765d:	les    eax,FWORD PTR [edx-0x2a9f8783]
  427663:	test   esp,ecx
  427665:	xlat   BYTE PTR ds:[ebx]
  427666:	or     ecx,DWORD PTR [ebx-0x36819ce7]
  42766c:	and    dh,dl
  42766e:	jecxz  0x42761a
  427670:	call   0x1cd7:0x8c84fc60
  427677:	lea    esp,[ecx]
  427679:	imul   ecx,DWORD PTR [ebx-0x73],0x11
  42767d:	addr16 dec ebx
  42767f:	push   0xffffffe1
  427681:	ret    
  427682:	cmp    BYTE PTR [ebp-0x48],0x5f
  427686:	aad    0x85
  427688:	(bad)  
  42768a:	or     al,0x83
  42768c:	sbb    DWORD PTR [edi-0x5],esp
  42768f:	jae    0x427636
  427691:	pop    ebx
  427692:	push   esi
  427693:	clc    
  427694:	xchg   DWORD PTR [ecx],ebp
  427696:	xor    al,al
  427698:	ja     0x42762e
  42769a:	mov    al,0x1
  42769c:	fstp   TBYTE PTR [ebp-0x3eb036a8]
  4276a2:	xchg   BYTE PTR [eax+esi*4+0x5b],ch
  4276a6:	jp     0x427694
  4276a8:	mov    al,0x8e
  4276aa:	add    BYTE PTR [eax],al
  4276ac:	iret   
  4276ad:	mov    ch,0x88
  4276af:	xor    eax,0x4084fc
  4276b4:	mov    ds:0x68fda4,eax
	...
  4276c9:	add    BYTE PTR [eax],al
  4276cb:	add    BYTE PTR [ebp-0x4abfae98],dh
  4276d1:	ins    DWORD PTR es:[edi],dx
  4276d2:	inc    edi
  4276d3:	xchg   BYTE PTR [eax-0x4abfae90],al
  4276d9:	pop    edi
  4276da:	sub    bl,BYTE PTR [ebx+edx*1+0x3fd04a5]
  4276e1:	mov    gs,WORD PTR [eax]
  4276e3:	push   ebp
  4276e4:	(bad)  
  4276e5:	aam    0x51
  4276e7:	inc    eax
  4276e8:	mov    ch,0x21
  4276ea:	jno    0x4276fe
  4276ec:	fidivr DWORD PTR gs:[edi-0x44bc801]
  4276f3:	push   esp
  4276f4:	add    bh,BYTE PTR [edx+0x7f]
  4276f7:	cmp    dl,BYTE PTR [ebp-0x52]
  4276fa:	(bad)  
  4276fb:	push   DWORD PTR [ebp-0x4b57760f]
  427701:	call   0xfc40fa05
  427706:	cmp    BYTE PTR [esi+0x36],ah
  427709:	in     eax,dx
  42770a:	push   DWORD PTR [ebx-0x7c]
  42770d:	push   cs
  42770e:	(bad)  
  42770f:	mov    al,BYTE PTR [eax+0x18]
  427712:	enter  0x3fe7,0x80
  427716:	jo     0x427714
  427718:	dec    edi
  427719:	daa    
  42771a:	jnp    0x42778e
  42771c:	(bad)  
  42771d:	call   DWORD PTR [edi+0x6c]
  427720:	popf   
  427721:	jmp    0x116b:0xdca2506b
  427728:	cmc    
  427729:	out    0x80,al
  42772b:	inc    ebx
  42772c:	mov    ch,0xe4
  42772e:	iret   
  42772f:	push   eax
	...
  427744:	pop    ds
  427745:	call   0x7727b9ca
  42774a:	ja     0x427711
  42774c:	in     eax,0xbe
  42774e:	mov    eax,ds:0xd9e6b5e5
  427753:	inc    eax
  427754:	cmp    BYTE PTR [eax+ecx*2+0x30904d57],ah
  42775b:	pop    esp
  42775c:	pop    ecx
  42775d:	(bad)  [edi]
  42775f:	enter  0x633f,0x3d
  427763:	int3   
  427764:	push   edx
  427765:	call   0x812c:0x66416f81
  42776c:	(bad)  
  42776d:	lahf   
  42776e:	and    DWORD PTR [ebp+eiz*8-0x19],ebx
  427772:	jb     0x4277e3
  427774:	aas    
  427775:	push   ebx
  427776:	adc    eax,0x6e67777d
  42777b:	inc    esi
  42777c:	xor    edx,DWORD PTR [ebx-0x33]
  42777f:	add    BYTE PTR [edi-0x7936d599],0x8d
  427786:	jmp    0xe4472c8e
  42778b:	shr    BYTE PTR [edi],cl
  42778d:	push   ebx
  42778e:	and    eax,0xe98f31d4
  427793:	add    esi,DWORD PTR ds:0x5c2305
  427799:	repz jmp 0x9612ada2
  42779f:	adc    eax,0x3997334
  4277a4:	pop    edi
  4277a5:	xchg   ebx,eax
  4277a6:	pop    esp
  4277a7:	leave  
	...
  4277bc:	push   edx
  4277bd:	aas    
  4277be:	pop    DWORD PTR [edi]
  4277c0:	or     ah,BYTE PTR fs:[ebp-0x6017fdb9]
  4277c7:	gs stos BYTE PTR es:[edi],al
  4277c9:	fsub   DWORD PTR [esi+0x46]
  4277cc:	mov    dh,0xd8
  4277ce:	xor    al,0xf8
  4277d0:	daa    
  4277d1:	lds    ecx,FWORD PTR [edi-0x3a]
  4277d4:	aas    
  4277d5:	bound  edi,QWORD PTR [ebp-0x3d466d35]
  4277db:	outs   dx,BYTE PTR ds:[esi]
  4277dc:	and    DWORD PTR [ebp+0x2a],0x214c0781
  4277e3:	pop    esp
  4277e4:	test   eax,esi
  4277e6:	add    BYTE PTR [esi+0x354605db],dh
  4277ec:	mov    DWORD PTR [esi+0x1],esp
  4277ef:	(bad)  
  4277f1:	aas    
  4277f2:	lea    esp,[ebp*8+0x45605348]
  4277f9:	pop    esp
  4277fa:	sti    
  4277fb:	hlt    
  4277fc:	jb     0x427786
  4277fe:	inc    eax
  4277ff:	jmp    0xecb89031
  427804:	scas   eax,DWORD PTR es:[edi]
  427805:	rcl    BYTE PTR [eax+0x64],cl
  427808:	sub    eax,0x9888e85c
  42780d:	fdivr  st,st(3)
  42780f:	push   edx
  427810:	mov    ah,0x9d
  427812:	shl    BYTE PTR [ebp+0x76],0x5c
  427816:	pcmpgtb mm7,mm5
  427819:	inc    ebx
  42781a:	push   eax
  42781b:	pop    esp
  42781c:	in     eax,dx
  42781d:	mov    ebx,0x7250
	...
  427832:	add    BYTE PTR [eax],al
  427834:	jae    0x427826
  427836:	imul   eax,DWORD PTR [esi+esi*4-0x71],0x7fe22985
  42783e:	in     ax,0x35
  427841:	dec    ebp
  427842:	jo     0x4277fd
  427844:	cld    
  427845:	mov    ecx,DWORD PTR [ebp-0x72b7ed5c]
  42784b:	lods   al,BYTE PTR ds:[esi]
  42784c:	bound  ecx,QWORD PTR [eax-0x77]
  42784f:	lods   al,BYTE PTR ds:[esi]
  427850:	(bad)  
  427851:	out    dx,eax
  427852:	iret   
  427853:	or     al,0xb6
  427855:	(bad)  
  427856:	data16 mov cl,0x35
  427859:	bound  esp,QWORD PTR [ecx+edx*4-0x111c9bf2]
  427860:	adc    BYTE PTR [ecx+0x49],ch
  427863:	je     0x427807
  427865:	lahf   
  427866:	pop    eax
  427867:	rcr    DWORD PTR [ebp+0x6fd6fbec],1
  42786d:	dec    ecx
  42786e:	lea    edx,[ebp+eiz*2+0x3f]
  427872:	call   0xfcaf4d77
  427877:	jmp    ecx
  427879:	into   
  42787a:	xor    ecx,DWORD PTR [ecx-0x39773867]
  427880:	aad    0xce
  427882:	inc    ebx
  427883:	mov    ecx,esi
  427885:	xlat   BYTE PTR ds:[ebx]
  427886:	les    eax,FWORD PTR [ebp-0x54]
  427889:	mov    es,WORD PTR [eax]
  42788b:	add    BYTE PTR [esp+eiz*2+0x6e],bl
  42788f:	je     0x427872
  427891:	into   
  427892:	lahf   
  427893:	push   eax
  427894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427895:	adc    al,0x59
  427897:	lea    eax,[eax]
	...
  4278a9:	add    BYTE PTR [eax],al
  4278ab:	add    cl,dh
  4278ad:	xchg   ebp,edi
  4278af:	jmp    DWORD PTR [ebx-0x6d102acd]
  4278b5:	fs push edx
  4278b7:	pop    ecx
  4278b8:	mov    DWORD PTR [ebx+0x7d],ecx
  4278bb:	cmp    eax,0x7d8790e6
  4278c0:	pop    eax
  4278c1:	lds    ecx,FWORD PTR [eax+0x7e563f1f]
  4278c7:	add    al,0x73
  4278c9:	fs cld 
  4278cb:	push   eax
  4278cc:	xor    al,0x93
  4278ce:	add    BYTE PTR [eax],al
  4278d0:	pop    esp
  4278d1:	xor    esp,ecx
  4278d3:	in     al,0xcc
  4278d5:	xchg   edx,eax
  4278d6:	jg     0x427898
  4278d8:	cmp    BYTE PTR [edx-0x6cbf9a7f],cl
  4278de:	data16 add al,0x51
  4278e1:	into   
  4278e2:	addr16 push eax
  4278e4:	ss (bad) 
  4278e6:	push   ecx
  4278e7:	lea    ecx,[ecx-0x79]
  4278ea:	std    
  4278eb:	push   DWORD PTR [ebx-0x46b41c3e]
  4278f1:	mov    eax,DWORD PTR [eax]
  4278f3:	sbb    ebx,0xffffff87
  4278f6:	dec    edx
  4278f7:	jne    0x42795e
  4278f9:	arpl   WORD PTR [esi],di
  4278fb:	je     0x427970
  4278fd:	adc    eax,0x8b5756c
  427902:	int    0x5d
  427904:	fisubr WORD PTR [ecx+0x42]
  427907:	ja     0x427975
  427909:	sub    ebx,edx
  42790b:	mov    BYTE PTR [ecx+0x67],ah
  42790e:	pop    ebx
  42790f:	pop    edi
	...
  427924:	mov    ebp,0xb50ffe8
  427929:	es repz pop es
  42792c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42792d:	sar    DWORD PTR [edx+0x72],1
  427930:	pop    ecx
  427931:	pop    edi
  427932:	retf   0x5dfb
  427935:	inc    edi
  427936:	pop    edi
  427937:	inc    DWORD PTR [edx+0x6c]
  42793a:	aas    
  42793b:	or     al,0x31
  42793d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42793e:	(bad)  
  42793f:	push   DWORD PTR [ebp+0x39fed679]
  427945:	mov    ds:0xdb224f78,eax
  42794a:	arpl   WORD PTR [eax-0x50a8bf90],cx
  427950:	sbb    al,0x36
  427952:	ins    BYTE PTR es:[edi],dx
  427953:	mov    BYTE PTR ds:0x2ce3c26b,al
  427959:	mov    ebx,0x47a3e767
  42795e:	(bad)  
  42795f:	push   DWORD PTR [esi]
  427961:	xchg   esi,eax
  427962:	ins    BYTE PTR es:[edi],dx
  427963:	or     al,0x31
  427965:	mov    edi,0xfdb5fffe
  42796a:	fld    DWORD PTR [esi]
  42796c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42796d:	call   0x826e:0x7d6cc578
  427974:	out    0xec,eax
  427976:	cmp    al,0xb5
  427979:	call   0x5bb0e37d
  42797e:	jmp    0xaae6:0x2d7f0de3
  427985:	(bad)  
  427987:	dec    ebx
	...
  42799c:	xor    BYTE PTR [edi+eax*2+0x57],ah
  4279a0:	lea    edx,[eax-0x2a6e9dea]
  4279a6:	push   ss
  4279a7:	push   esi
  4279a8:	xor    esi,DWORD PTR [ebx]
  4279aa:	loope  0x4279da
  4279ac:	test   BYTE PTR [ebp-0x2a85b39d],al
  4279b2:	jmp    0x6eca7935
  4279b7:	shl    DWORD PTR [esi+0x9],0xfe
  4279bb:	jnp    0x4279f8
  4279bd:	pop    ebx
  4279be:	mov    ecx,0x6d856081
  4279c3:	lods   al,BYTE PTR ds:[esi]
  4279c4:	push   edx
  4279c5:	aad    0xe9
  4279c7:	or     DWORD PTR [eax+0x117fe28f],0xffffff90
  4279ce:	jmp    0x7196a5d6
  4279d3:	add    BYTE PTR [edx],bh
  4279d5:	push   ebx
  4279d6:	mov    DWORD PTR [ecx-0x5b927ad7],eax
  4279dc:	and    dl,ch
  4279de:	jmp    0xf2d25366
  4279e3:	jg     0x427a0e
  4279e5:	nop
  4279e6:	jmp    0x6176b5ee
  4279eb:	cld    
  4279ec:	aaa    
  4279ed:	mov    ecx,0x902d7fda
  4279f2:	jmp    0xe9dbaefa
  4279f7:	cli    
  4279f8:	ss adc ch,dl
  4279fb:	add    esi,DWORD PTR [ebp+0x6b2210]
	...
  427a11:	add    BYTE PTR [eax],al
  427a13:	add    BYTE PTR [edx+0x41],ch
  427a16:	outs   dx,BYTE PTR ds:[esi]
  427a17:	aas    
  427a18:	fisub  DWORD PTR [ebp+0xac96a0c]
  427a1e:	sub    dh,al
  427a20:	xchg   ebx,eax
  427a21:	add    ah,BYTE PTR [ebp+0x423f655f]
  427a27:	sub    al,0xbd
  427a29:	(bad)  
  427a2d:	das    
  427a2e:	add    esi,edi
  427a30:	paddq  mm5,mm0
  427a33:	push   cs
  427a34:	call   edx
  427a36:	sti    
  427a37:	inc    eax
  427a38:	or     BYTE PTR [edi],0xf9
  427a3b:	ficomp WORD PTR [edx+0x69a78732]
  427a41:	or     DWORD PTR [esi-0x33],ecx
  427a44:	faddp  st(2),st
  427a46:	jecxz  0x427a0f
  427a48:	fist   WORD PTR [eax]
  427a4a:	shl    DWORD PTR ds:0xb976072e,0xe3
  427a51:	pop    ecx
  427a52:	loopne 0x427a6a
  427a54:	xchg   DWORD PTR [ecx],ecx
  427a56:	inc    esi
  427a57:	shl    DWORD PTR [esi+0x13],0x39
  427a5b:	icebp  
  427a5c:	mov    dh,0x8f
  427a5e:	lea    ebx,[esi+edx*1-0x25]
  427a62:	sti    
  427a63:	mov    ds,esi
  427a65:	sub    ebx,ebp
  427a67:	xchg   DWORD PTR [edi+0x33edc50f],ebx
  427a6d:	fdiv   st(3),st
  427a6f:	std    
  427a70:	ret    
  427a71:	push   es
  427a72:	retf   
  427a73:	sbb    BYTE PTR [ecx+ecx*2+0x51fc],bl
	...
  427a8a:	add    BYTE PTR [eax],al
  427a8c:	inc    ebx
  427a8d:	jmp    0x427a89
  427a8f:	pop    esi
  427a90:	mov    dl,BYTE PTR [esi*2+0x8513bf5]
  427a97:	loopne 0x427b14
  427a99:	push   ecx
  427a9a:	or     BYTE PTR [edx-0x75],dh
  427a9d:	xchg   edi,eax
  427a9e:	inc    ebp
  427a9f:	inc    ecx
  427aa0:	out    dx,eax
  427aa1:	or     eax,0xd34f3633
  427aa6:	out    0xdd,eax
  427aa8:	dec    edi
  427aa9:	popa   
  427aaa:	cld    
  427aab:	adc    ebp,ebp
  427aad:	sar    edx,cl
  427aaf:	push   ds
  427ab0:	xor    esi,DWORD PTR [ecx-0x4]
  427ab3:	jmp    0x633acbfb
  427ab8:	int    0xdf
  427aba:	call   0xfdd1b0bf
  427abf:	dec    DWORD PTR [ebx+0x52]
  427ac2:	ds cld 
  427ac4:	dec    edx
  427ac5:	ret    0xc2c2
  427ac8:	nop
  427ac9:	(bad)  
  427aca:	dec    edi
  427acb:	mov    ebp,DWORD PTR [eax+0x55]
  427ace:	ds or  al,0x1d
  427ad1:	cmp    BYTE PTR [ebx],al
  427ad3:	add    cl,BYTE PTR [edi+ecx*4+0x784c8355]
  427ada:	push   eax
  427adb:	push   DWORD PTR [ecx+0x748586d3]
  427ae1:	imul   edi,esp,0xffffffff
  427ae4:	mov    esp,0xc2e8f254
  427ae9:	inc    eax
  427aea:	std    
  427aeb:	jmp    ecx
  427aed:	dec    ebx
  427aee:	outs   dx,DWORD PTR ds:[esi]
  427aef:	add    BYTE PTR [bx+si],al
	...
  427b02:	add    BYTE PTR [eax],al
  427b04:	and    dl,cl
  427b06:	inc    DWORD PTR [ecx]
  427b08:	mov    al,ds:0x24858718
  427b0d:	imul   edi,esp,0xffffffff
  427b10:	int3   
  427b11:	xor    ebx,DWORD PTR [eax-0x2]
  427b14:	stos   DWORD PTR es:[edi],eax
  427b15:	push   0x52184582
  427b1a:	mov    ebx,0x55bc4874
  427b1f:	push   eax
  427b20:	fwait
  427b21:	xor    BYTE PTR [edx+edx*1+0x5c],0x8f
  427b26:	mov    DWORD PTR [edi+0x18],ecx
  427b29:	push   esp
  427b2a:	ror    DWORD PTR [ebp-0x34ff291d],cl
  427b30:	test   BYTE PTR [ebp+edi*8-0x43f05402],ah
  427b37:	je     0x427b3b
  427b39:	push   esp
  427b3a:	inc    esp
  427b3b:	or     al,0xcf
  427b3d:	nop
  427b3e:	push   ecx
  427b3f:	push   DWORD PTR [ecx]
  427b41:	fisttp DWORD PTR [ebx-0x1]
  427b44:	rcr    DWORD PTR [edx],0x16
  427b47:	inc    eax
  427b48:	mov    ch,0xe8
  427b4a:	test   bl,al
  427b4c:	test   eax,0xb20bc8e7
  427b51:	push   ebx
  427b52:	repz out 0x8e,eax
  427b55:	shr    DWORD PTR [ecx-0x4],1
  427b58:	add    edi,esi
  427b5a:	jno    0x427ba0
  427b5c:	mov    cl,0xe7
  427b5e:	jmp    0x427b6b
  427b60:	inc    eax
  427b61:	arpl   WORD PTR [edi-0x6],sp
  427b64:	mov    dh,BYTE PTR [ecx+0xe7cf]
	...
  427b7a:	add    BYTE PTR [eax],al
  427b7c:	ins    DWORD PTR es:[edi],dx
  427b7d:	mov    ebp,0x28c6fc69
  427b82:	leave  
  427b83:	(bad)  
  427b84:	ja     0x427b66
  427b86:	call   DWORD PTR [edx+0x3e]
  427b89:	les    eax,FWORD PTR [ebx+eiz*8+0x4b53675d]
  427b90:	mov    bh,0xe8
  427b92:	call   DWORD PTR [ebp-0x21]
  427b95:	cdq    
  427b96:	jae    0x427c0b
  427b98:	xchg   ecx,eax
  427b99:	mov    ah,0xc7
  427b9b:	out    0x77,eax
  427b9d:	add    al,0x69
  427b9f:	cld    
  427ba0:	sub    dh,BYTE PTR cs:[ebx+0x4b]
  427ba4:	fldenv [eax-0x338e7931]
  427baa:	div    DWORD PTR [eax]
  427bac:	cmc    
  427bad:	ja     0x427b83
  427baf:	imul   edx,esp,0xd9434178
  427bb5:	mov    WORD PTR [edx+ecx*4],ds
  427bb8:	jne    0x427ba2
  427bba:	jbe    0x427c17
  427bbc:	(bad)  [eax-0x732ebc89]
  427bc2:	ja     0x427c07
  427bc4:	cdq    
  427bc5:	sub    BYTE PTR [ecx+0x12],0x81
  427bc9:	mov    ch,0xbf
  427bcb:	(bad)  
  427bcc:	cmp    DWORD PTR [eax-0x7b09216],ebp
  427bd2:	jb     0x427c47
  427bd4:	cdq    
  427bd5:	(bad)  
  427bd6:	(bad)  
  427bd8:	ror    BYTE PTR [eax],cl
  427bda:	push   es
  427bdb:	push   0x1fae03c1
	...
  427bf4:	lods   eax,DWORD PTR ds:[esi]
  427bf5:	or     BYTE PTR [esi-0x51fd32e1],ah
  427bfb:	pop    ds
  427bfc:	std    
  427bfd:	push   es
  427bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bff:	pop    ds
  427c00:	rol    DWORD PTR [edx],0xae
  427c03:	pop    ds
  427c04:	mov    cl,0x6
  427c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c07:	pop    ds
  427c08:	fld    DWORD PTR [edx]
  427c0a:	cs and ch,bh
  427c0d:	aas    
  427c0e:	ins    BYTE PTR es:[edi],dx
  427c0f:	mov    eax,0xc0aa73d6
  427c14:	(bad)  
  427c15:	stos   DWORD PTR es:[edi],eax
  427c16:	in     eax,0x3
  427c18:	mov    ch,0x8f
  427c1a:	stos   BYTE PTR es:[edi],al
  427c1b:	rcl    BYTE PTR [esi-0x4afc175d],0x8f
  427c22:	stos   BYTE PTR es:[edi],al
  427c23:	rcl    BYTE PTR [esi-0x4afc1861],0x8f
  427c2a:	xchg   ecx,eax
  427c2b:	mov    ah,BYTE PTR [ebp-0x2f]
  427c2e:	call   0x96c0:0x6440787b
  427c35:	inc    ebx
  427c36:	cmp    esp,edx
  427c38:	sbb    cl,BYTE PTR [ebp-0x65]
  427c3b:	sub    WORD PTR [ebx],cx
  427c3e:	stos   BYTE PTR es:[edi],al
  427c3f:	lock les eax,FWORD PTR [edx]
  427c42:	and    BYTE PTR cs:[ebp+0x3f],ch
  427c46:	pop    esp
  427c47:	mov    eax,0xc07073d6
  427c4c:	(bad)  
  427c4d:	scas   eax,DWORD PTR es:[edi]
  427c4e:	push   ecx
  427c4f:	out    dx,al
  427c50:	in     eax,0xd0
  427c52:	push   edx
  427c53:	outs   dx,BYTE PTR ds:[esi]
  427c54:	cmc    
  427c55:	(bad)  
  427c56:	aad    0x11
	...
  427c6c:	cmp    al,0x4c
  427c6e:	or     eax,0xf1433c14
  427c73:	jl     0x427c58
  427c75:	add    eax,0x7bbaad01
  427c7a:	xchg   DWORD PTR [edx+ecx*8+0x4fc70209],ebx
  427c81:	in     eax,dx
  427c82:	pop    ebp
  427c83:	sub    eax,ecx
  427c85:	rcl    BYTE PTR [edx+eiz*2+0x5d],1
  427c89:	paddsw mm0,QWORD PTR [ebp+0x74533a87]
  427c90:	je     0x427c66
  427c92:	push   eax
  427c93:	ins    BYTE PTR es:[edi],dx
  427c94:	je     0x427c72
  427c96:	push   eax
  427c97:	xor    DWORD PTR [esi+esi*1-0x2be42418],0xfffffffb
  427c9f:	sbb    bh,dh
  427ca1:	cdq    
  427ca2:	pop    ebp
  427ca3:	fstp   QWORD PTR [ebp+eax*2+0xb]
  427ca7:	sub    al,0x6c
  427ca9:	fmul   QWORD PTR [ebp-0x17c7e6ac]
  427caf:	mov    al,ds:0x53fbd3d7
  427cb4:	sub    eax,DWORD PTR ds:0xe86ebd7e
  427cba:	cwde   
  427cbb:	retf   0xd3db
  427cbe:	xchg   DWORD PTR [esi-0x148b48cb],ebp
  427cc4:	mov    edi,0x756450cf
  427cc9:	lock push eax
  427ccb:	add    edi,DWORD PTR [ecx+0x130065]
	...
  427ce1:	add    BYTE PTR [eax],al
  427ce3:	add    BYTE PTR [eax-0x65e3cc19],dh
  427ce9:	sar    DWORD PTR [edi-0x53],cl
  427cec:	stos   BYTE PTR es:[edi],al
  427ced:	ds call 0xfc15154e
  427cf3:	(bad)  
  427cf4:	lock ss leave 
  427cf7:	sub    ah,ch
  427cf9:	push   es
  427cfa:	in     eax,dx
  427cfb:	push   0x62
  427cfd:	cwde   
  427cfe:	dec    edi
  427cff:	mov    bh,0x3
  427d01:	push   0x8c0c0004
  427d06:	add    BYTE PTR [ebx+0x103e5574],cl
  427d0c:	dec    edi
  427d0d:	lods   al,BYTE PTR ds:[esi]
  427d0e:	add    BYTE PTR [ebx+0x8668bbb],al
  427d14:	xchg   ebx,eax
  427d15:	lahf   
  427d16:	sub    dh,dl
  427d18:	jl     0x7e72931b
  427d1e:	inc    eax
  427d1f:	add    BYTE PTR [edi],dl
  427d21:	pop    ebx
  427d22:	sbb    BYTE PTR [ebp-0x58],0x4f
  427d26:	fdiv   DWORD PTR [ebp-0x65]
  427d29:	add    eax,0x92f6e9
  427d2f:	add    BYTE PTR [ebx-0x7600f841],ah
  427d35:	fisttp DWORD PTR [edx]
  427d37:	inc    eax
  427d38:	mov    ecx,gs
  427d3a:	and    ebx,DWORD PTR [esi-0x46]
  427d3d:	inc    esi
  427d3e:	ds int3 
  427d40:	not    BYTE PTR [ebx+0x3899c650]
  427d46:	cli    
  427d47:	inc    BYTE PTR [eax]
	...
  427d59:	add    BYTE PTR [eax],al
  427d5b:	add    BYTE PTR [ecx+0x4c4015e3],cl
  427d61:	dec    edx
  427d62:	outs   dx,BYTE PTR ds:[esi]
  427d63:	int3   
  427d64:	fisttp WORD PTR [edi+0x7]
  427d67:	mov    ecx,esi
  427d69:	xor    edi,DWORD PTR [ebp+0x933c00]
  427d6f:	and    BYTE PTR [ecx+0x2f75009f],0x46
  427d76:	ds in  al,0xcc
  427d79:	(bad)  
  427d7b:	jne    0x427d25
  427d7d:	xor    al,0x6e
  427d7f:	or     BYTE PTR [ebx-0x23ea4362],ah
  427d85:	xchg   ebx,eax
  427d86:	jmp    0x140110a0
  427d8b:	lea    ebx,[ecx-0x79]
  427d8e:	imul   ecx,DWORD PTR [eax],0x726508b5
  427d94:	mov    ebp,0xeae3eb2f
  427d99:	jmp    0x427e16
  427d9b:	adc    dh,BYTE PTR [ebp-0x48]
  427d9e:	jp     0x427d5f
  427da0:	pusha  
  427da1:	loopne 0x427e07
  427da3:	adc    ah,BYTE PTR [ebp-0x76004017]
  427da9:	fwait
  427daa:	add    DWORD PTR [eax],eax
  427dac:	mov    ch,0x23
  427dae:	pop    ds
  427daf:	mov    esi,DWORD PTR [eax-0x4c]
  427db2:	iret   
  427db3:	out    0x6b,eax
  427db5:	cmp    BYTE PTR [eax+eax*1],al
  427db8:	sahf   
  427db9:	mov    ?,WORD PTR [ecx+0x5a]
  427dbc:	cdq    
  427dbd:	xor    ecx,DWORD PTR [ecx+0x73]
	...
  427dd4:	mov    ch,0xea
  427dd7:	repz repz (bad)
  427ddc:	adc    BYTE PTR [edi-0x7c7039b],dh
  427de2:	jmp    0x73ff:0x697b739f
  427de9:	arpl   WORD PTR [eax-0x19],si
  427dec:	sub    dl,bl
  427dee:	gs cld 
  427df0:	xor    eax,0xe1ff698b
  427df5:	mov    dl,0x78
  427df7:	inc    edx
  427df8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427df9:	std    
  427dfa:	das    
  427dfb:	call   0xfca8711a
  427e00:	das    
  427e01:	jae    0x427e6c
  427e03:	pop    esp
  427e04:	fild   DWORD PTR [ecx-0x47363ec9]
  427e0a:	retf   0x1988
  427e0d:	cmp    DWORD PTR [ebx-0x9],ebx
  427e10:	ss sbb al,0x2c
  427e13:	sub    DWORD PTR [ecx-0x24],0x3166fcf7
  427e1a:	add    ah,BYTE PTR [edi+eiz*4+0x6b03a98f]
  427e21:	rol    WORD PTR [ebx+0x78e951d8],1
  427e28:	jmp    0x6b7:0xa17836cd
  427e2f:	outs   dx,BYTE PTR ds:[esi]
  427e30:	loope  0x427dff
  427e32:	imul   bx,cx,0xff9d
  427e36:	ins    DWORD PTR es:[edi],dx
  427e37:	add    eax,DWORD PTR [eax]
	...
  427e49:	add    BYTE PTR [eax],al
  427e4b:	add    BYTE PTR [edi-0x40871671],dh
  427e51:	daa    
  427e52:	inc    esp
  427e53:	rol    dl,0x38
  427e56:	sub    DWORD PTR [ebx],ebx
  427e58:	cs and ecx,0x30
  427e5c:	jp     0x427de5
  427e5e:	fwait
  427e5f:	(bad)  
  427e61:	adc    eax,0x8fb50211
  427e66:	in     ax,0xc6
  427e69:	mov    ?,WORD PTR [ecx+edx*1+0x3c]
  427e6d:	push   esi
  427e6e:	fldcw  WORD PTR [edx]
  427e70:	std    
  427e71:	xchg   ebx,eax
  427e72:	pop    ebp
  427e73:	push   cs
  427e74:	sub    al,0x56
  427e76:	add    eax,0xb8b6b18d
  427e7b:	add    eax,0xc95e8fb5
  427e80:	mov    edx,0xb4d8a888
  427e85:	push   ss
  427e86:	repnz xchg al,bl
  427e89:	stos   DWORD PTR es:[edi],eax
  427e8a:	mov    dl,0x13
  427e8c:	ss ss call 0x2c5b3396
  427e93:	or     al,0x7b
  427e95:	push   esi
  427e96:	in     eax,0x4
  427e98:	sti    
  427e99:	(bad)  
  427e9b:	(bad)  
  427e9c:	xor    ah,BYTE PTR [ebx+0x60]
  427e9f:	enter  0xabd6,0x82
  427ea3:	stc    
  427ea4:	dec    esi
  427ea5:	mov    ds:0x43180429,al
  427eaa:	add    cl,dl
  427eac:	and    eax,0xb52451
	...
  427ec1:	add    BYTE PTR [eax],al
  427ec3:	add    BYTE PTR [edi-0x6846ebbf],dl
  427ec9:	inc    eax
  427eca:	and    al,0x5
  427ecc:	and    al,0x51
  427ece:	and    al,0xad
  427ed0:	push   edi
  427ed1:	sub    eax,0xffffffd4
  427ed4:	push   esp
  427ed5:	retf   
  427ed6:	sti    
  427ed7:	lahf   
  427ed8:	cs push ecx
  427eda:	and    al,0xd6
  427edc:	push   edi
  427edd:	fild   WORD PTR [edi-0x9daa102]
  427ee3:	cs push esi
  427ee5:	pop    ss
  427ee6:	icebp  
  427ee7:	push   0x57
  427ee9:	retf   
  427eea:	or     esp,DWORD PTR [ebp+0x25]
  427eed:	into   
  427eee:	sti    
  427eef:	jmp    0xfa66c72a
  427ef4:	mov    dh,0x9a
  427ef6:	test   BYTE PTR [eax-0x48],bl
  427ef9:	pop    DWORD PTR [eax]
  427efb:	xchg   edx,eax
  427efc:	cld    
  427efd:	je     0x427efe
  427eff:	mov    ebx,0xe93feb0e
  427f04:	and    eax,0x490d2450
  427f09:	rol    BYTE PTR [edx-0x1b],cl
  427f0c:	mov    dh,0xca
  427f0e:	xor    eax,ecx
  427f10:	(bad)  
  427f11:	(bad)  
  427f13:	into   
  427f14:	inc    ebp
  427f15:	pop    eax
  427f16:	and    al,0x15
  427f18:	sub    BYTE PTR ds:0x168d0545,dl
  427f1e:	add    al,0x43
  427f20:	mov    eax,0x864ce85f
  427f25:	retf   
  427f26:	sti    
  427f27:	jo     0x427f29
	...
  427f39:	add    BYTE PTR [eax],al
  427f3b:	add    BYTE PTR [edx+0x70],bh
  427f3e:	sub    BYTE PTR [edx+0x6c],dh
  427f41:	pushf  
  427f42:	mov    DWORD PTR ds:0x278787dd,ebp
  427f48:	sub    eax,0xa500d77f
  427f4d:	aam    0x1f
  427f4f:	cmp    al,0xf5
  427f51:	or     esp,DWORD PTR [eax]
  427f53:	and    BYTE PTR [ebx],bl
  427f55:	adc    al,0xa5
  427f57:	add    BYTE PTR [eax+edx*4],bl
  427f5a:	xchg   DWORD PTR [eax+esi*4+0x73],eax
  427f5e:	push   eax
  427f5f:	call   0x42ed6d
  427f64:	pusha  
  427f65:	push   eax
  427f66:	or     al,0x84
  427f68:	popa   
  427f69:	nop
  427f6a:	add    BYTE PTR [eax],al
  427f6c:	push   es
  427f6d:	jae    0x427f6c
  427f6f:	aaa    
  427f70:	test   BYTE PTR [edi+0x1d8bffcd],dl
  427f76:	hlt    
  427f77:	cmp    eax,DWORD PTR [edi-0x2a99ed1c]
  427f7d:	nop
  427f7e:	je     0x427f8e
  427f80:	fwait
  427f81:	in     al,0x1f
  427f83:	xor    al,0xcb
  427f85:	loop   0x427fa6
  427f87:	xor    al,0x63
  427f89:	aaa    
  427f8a:	cmc    
  427f8b:	fimul  DWORD PTR [edi+ecx*4+0x6b56e855]
  427f92:	std    
  427f93:	dec    DWORD PTR [ebx+0x17201fe2]
  427f99:	rcr    DWORD PTR [edi],cl
  427f9b:	sub    BYTE PTR [edi+0xe0e03b],bh
	...
  427fb1:	add    BYTE PTR [eax],al
  427fb3:	add    BYTE PTR [edx+0x31],bl
  427fb6:	add    BYTE PTR [eax+eax*8-0x35],0x38
  427fbb:	ret    
  427fbc:	add    BYTE PTR [ecx],cl
  427fbe:	mov    ah,0x0
  427fc0:	jl     0x427f51
  427fc2:	add    BYTE PTR [ecx-0x17e38870],cl
  427fc8:	pop    edi
  427fc9:	imul   edi,ebp,0xffffffff
  427fcc:	xlat   BYTE PTR ds:[ebx]
  427fcd:	imul   edi,DWORD PTR [eax],0xfffffffb
  427fd0:	mov    al,ds:0x704487a9
  427fd5:	retf   
  427fd6:	dec    ebx
  427fd7:	push   edi
  427fd8:	mov    ch,0x21
  427fda:	fldenv [ebx]
  427fdc:	aad    0xf1
  427fde:	or     DWORD PTR [eax-0x4b],edx
  427fe1:	mov    eax,0xccc0fcff
  427fe6:	repnz aas 
  427fe8:	mov    ch,0x3b
  427fea:	inc    esp
  427feb:	jae    0x427f9c
  427fed:	sub    eax,0x75be07c9
  427ff2:	fcom   DWORD PTR [eax]
  427ff4:	xchg   ebx,eax
  427ff5:	outs   dx,DWORD PTR ds:[esi]
  427ff6:	cld    
  427ff7:	jae    0x427fbc
  427ff9:	popa   
  427ffa:	fsub   DWORD PTR [ebx]
  427ffc:	mov    eax,ds:0xa923d859
  428001:	sub    BYTE PTR [eax-0x6f],ch
  428004:	(bad)  
  428005:	mov    eax,0x8add54ff
  42800a:	pop    ebp
  42800b:	std    
  42800c:	retf   0xd879
  42800f:	and    ebx,DWORD PTR [ebp-0x44079460]
  428015:	test   eax,0x7361
	...
  42802a:	add    BYTE PTR [eax],al
  42802c:	(bad)  
  42802e:	jcxz   0x427fdf
  428031:	call   0xe827:0xdd29fc61
  428038:	jle    0x427fc7
  42803a:	pop    esi
  42803b:	cld    
  42803c:	ds cld 
  42803e:	and    esi,DWORD PTR [eax]
  428040:	cmp    al,0xf2
  428042:	test   DWORD PTR [eax-0x78e76307],0x458cccf3
  42804c:	shl    DWORD PTR ds:0x88e1fc57,1
  428052:	sub    eax,0x573d9546
  428057:	jae    0x427ff6
  428059:	xor    eax,0x8bb507da
  42805e:	repnz addr16 mov ch,0xe8
  428062:	(bad)  
  428063:	(bad)  
  428064:	std    
  428065:	mov    gs,ecx
  428067:	and    esi,DWORD PTR [ebp+0x811918f]
  42806d:	leave  
  42806e:	xchg   edx,eax
  42806f:	mov    dh,BYTE PTR [edi-0x65]
  428072:	rcr    dh,1
  428074:	scas   al,BYTE PTR es:[edi]
  428075:	call   0xbfd:0xeaedf27
  42807c:	mov    ch,0x43
  42807e:	(bad)  
  42807f:	mov    WORD PTR [eax-0x59],?
  428082:	out    0xc9,al
  428084:	mov    ds:0x8760b962,al
  428089:	xchg   edi,eax
  42808a:	push   ecx
  42808b:	inc    esi
  42808c:	in     eax,dx
  42808d:	enter  0x252,0x0
	...
  4280a1:	add    BYTE PTR [eax],al
  4280a3:	add    BYTE PTR [ebx+0x6f],ch
  4280a6:	pop    esi
  4280a7:	(bad)  
  4280a8:	mov    dl,0x14
  4280aa:	sub    dl,bh
  4280ac:	mov    ah,0x18
  4280ae:	add    cl,BYTE PTR [ecx+0x76]
  4280b1:	jae    0x428090
  4280b3:	add    dh,BYTE PTR [ebp+0x42ebe98f]
  4280b9:	jmp    0xa3fa8464
  4280be:	dec    ebp
  4280bf:	cmc    
  4280c0:	repnz (bad) 
  4280c2:	pop    esi
  4280c3:	(bad)  
  4280c4:	(bad)  
  4280c5:	mov    ds:0x14fdc1aa,eax
  4280ca:	or     eax,0xe9a474be
  4280cf:	or     DWORD PTR [esi],0x74
  4280d2:	(bad)  
  4280d3:	add    eax,DWORD PTR [ecx]
  4280d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280d6:	jmp    0x7dd1:0xd17fd6d6
  4280dd:	retf   0x83da
  4280e0:	jo     0x4280ab
  4280e2:	pop    ebp
  4280e3:	adc    DWORD PTR [edx+0x28],ecx
  4280e6:	lods   al,BYTE PTR ds:[esi]
  4280e7:	ret    
  4280e8:	bound  esi,QWORD PTR [esi]
  4280ea:	mov    ebx,0xe354732c
  4280ef:	pop    es
  4280f0:	mov    ch,0xc
  4280f2:	add    DWORD PTR [ebp-0x63],ecx
  4280f5:	mov    ds:0x7acd4100,eax
  4280fa:	add    cl,ch
  4280fc:	fistp  DWORD PTR [ebp-0x370904dc]
  428102:	out    0x5d,al
  428104:	ins    BYTE PTR es:[edi],dx
  428105:	sbb    ch,ch
  428107:	push   0x0
	...
  428119:	add    BYTE PTR [eax],al
  42811b:	add    BYTE PTR [ebp-0x12ecb068],ah
  428121:	bound  eax,QWORD PTR [edi-0x36a5e5f]
  428127:	ja     0x428193
  428129:	pop    ss
  42812a:	inc    esi
  42812b:	loope  0x4281a8
  42812d:	xchg   edx,eax
  42812e:	add    ecx,ebp
  428130:	mov    dh,0x8f
  428132:	mov    DWORD PTR [edi-0x2203f346],esp
  428138:	mov    ecx,0xa8fde8bf
  42813e:	jg     0x428182
  428140:	lods   eax,DWORD PTR ds:[esi]
  428141:	inc    ecx
  428142:	pop    ss
  428143:	push   0xbd0037b2
  428148:	mov    dh,0x3c
  42814a:	prefetcht0 BYTE PTR [esi+0x36]
  42814e:	add    BYTE PTR [edx-0x16999bf9],dh
  428154:	inc    ecx
  428155:	push   0xc
  428157:	add    DWORD PTR [eax],edi
  428159:	or     eax,0xa10fe901
  42815e:	lea    ebp,[edx-0x58769c05]
  428164:	ret    0x54b7
  428167:	or     bl,ch
  428169:	retf   
  42816a:	out    0xe3,eax
  42816c:	and    eax,0x41380c5a
  428171:	mov    al,0xe2
  428173:	lods   eax,DWORD PTR ds:[esi]
  428174:	adc    ecx,esp
  428176:	mov    DWORD PTR [edi],ebp
  428178:	mov    ecx,0xba54c10c
  42817d:	jge    0x42813f
	...
  428193:	add    BYTE PTR [ebp+0x5cfffb67],al
  428199:	pop    ds
  42819a:	inc    esi
  42819b:	adc    al,0xac
  42819d:	push   ss
  42819e:	std    
  42819f:	psubusw mm6,mm7
  4281a2:	sti    
  4281a3:	dec    DWORD PTR [esp+esi*4+0x20]
  4281a7:	add    BYTE PTR [esp+ecx*1],bl
  4281aa:	std    
  4281ab:	jne    0x4281c1
  4281ad:	xor    al,0x8c
  4281af:	into   
  4281b0:	xor    ebp,DWORD PTR [ecx+0x54]
  4281b3:	mov    edx,ecx
  4281b5:	ret    
  4281b6:	xchg   BYTE PTR [ebp-0x70],al
  4281b9:	cld    
  4281ba:	xchg   BYTE PTR [ebp-0x74],al
  4281bd:	cld    
  4281be:	imul   ebp,DWORD PTR ds:0xc703e793,0x26849
  4281c8:	fmul   QWORD PTR [ebx-0x3863ea03]
  4281ce:	cmp    eax,DWORD PTR [eax]
  4281d0:	dec    edi
  4281d1:	fs cli 
  4281d3:	je     0x4281cd
  4281d5:	stos   BYTE PTR es:[edi],al
  4281d6:	aas    
  4281d7:	cld    
  4281d8:	or     bl,BYTE PTR [ecx-0x3738280]
  4281de:	outs   dx,BYTE PTR ds:[esi]
  4281df:	jnp    0x428230
  4281e1:	scas   eax,DWORD PTR es:[edi]
  4281e2:	test   DWORD PTR [ecx+ebx*1],0xb44683f8
  4281e9:	and    BYTE PTR [esi+0x20],al
  4281ec:	ins    BYTE PTR es:[edi],dx
  4281ed:	mov    ebx,0x138cfffa
  4281f2:	std    
  4281f3:	jne    0x428199
  4281f5:	cmp    eax,DWORD PTR [esi+ecx*8+0x0]
	...
  428209:	add    BYTE PTR [eax],al
  42820b:	add    BYTE PTR [ebx+0x60468265],dl
  428211:	sbb    bh,BYTE PTR [edi]
  428213:	adc    cl,ah
  428215:	(bad)  
  428217:	adc    DWORD PTR [ebp+0x5c0ffc65],0xb58b06dc
  428221:	imul   edx,DWORD PTR [eax],0xffffff83
  428224:	ins    BYTE PTR es:[edi],dx
  428225:	pop    ebp
  428226:	add    al,BYTE PTR [edi+0x458794eb]
  42822c:	popf   
  42822d:	bound  eax,QWORD PTR [eax]
  42822f:	std    
  428230:	shl    BYTE PTR [eax-0x98e4099],0x5d
  428237:	mov    BYTE PTR [ebp+0x34],bl
  42823a:	cmp    DWORD PTR [ebx-0x75],esi
  42823d:	mov    es,WORD PTR [ecx-0x4b5b4ac8]
  428243:	imul   eax,eax,0xd07d415
  428249:	arpl   WORD PTR [eax-0x4],dx
  42824c:	adc    ch,BYTE PTR [esp+eax*2]
  42824f:	jae    0x42821a
  428251:	xchg   esi,eax
  428252:	xor    DWORD PTR [edi],0x8715bcb5
  428258:	pop    ebx
  428259:	pushf  
  42825a:	xchg   DWORD PTR [ebp-0x5b],eax
  42825d:	popa   
  42825e:	push   ss
  42825f:	std    
  428260:	pusha  
  428261:	mov    al,0x67
  428263:	sbb    al,0xf1
  428265:	push   ebp
  428266:	pop    ebp
  428267:	xchg   BYTE PTR [ebx-0x18],dh
  42826a:	inc    ebp
  42826b:	inc    ebp
  42826c:	lods   eax,DWORD PTR ds:[esi]
  42826d:	mov    eax,0xba68
	...
  428282:	add    BYTE PTR [eax],al
  428284:	xor    eax,0xb2444ffc
  428289:	sub    ebp,DWORD PTR [ebx]
  42828b:	std    
  42828c:	mov    edx,0xb17a816d
  428291:	mov    ecx,0x9dd6830c
  428296:	pop    ebp
  428297:	cld    
  428298:	jnp    0x428288
  42829a:	idiv   edi
  42829c:	lea    eax,[edi+0x5c]
  42829f:	cld    
  4282a0:	xchg   edx,eax
  4282a1:	sub    BYTE PTR [eax-0x29],ch
  4282a4:	mov    WORD PTR [esi-0x5572afa4],?
  4282aa:	push   edi
  4282ab:	std    
  4282ac:	jp     0x42823d
  4282ae:	shl    esi,1
  4282b0:	(bad)
  4282b3:	mov    dh,al
  4282b5:	dec    edi
  4282b6:	cdq    
  4282b7:	add    bh,ah
  4282b9:	fsub   DWORD PTR [edi+0x6e5cb50f]
  4282bf:	outs   dx,DWORD PTR ds:[esi]
  4282c0:	xor    eax,0x5e80c1ab
  4282c5:	inc    ebx
  4282c6:	pop    esi
  4282c7:	(bad)  
  4282c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282c9:	bound  edx,QWORD PTR [ebx]
  4282cb:	mov    ch,0x39
  4282cd:	jg     0x42833d
  4282cf:	mov    dl,0xc6
  4282d2:	(bad)  [eax-0x296d6c89]
  4282d8:	mov    edx,0x2d5c9f12
  4282dd:	enter  0xd774,0xd6
  4282e1:	push   ebx
  4282e2:	jo     0x4282a3
  4282e4:	(bad)  
  4282e5:	outs   dx,DWORD PTR ds:[esi]
  4282e6:	sub    edi,0x0
	...
  4282fc:	add    dh,al
  4282fe:	push   0xffffff87
  428300:	cmp    dl,BYTE PTR [esi-0x704b0293]
  428306:	jmp    0x41d9fa93
  42830b:	loope  0x4282f4
  42830d:	lds    ecx,FWORD PTR [edx-0x75]
  428310:	jbe    0x42837d
  428312:	repnz mov al,bh
  428315:	pop    esi
  428316:	push   ecx
  428317:	retf   0x8f9a
  42831a:	jmp    0xd1adf9a9
  42831f:	stos   DWORD PTR es:[edi],eax
  428320:	mov    ebx,0x2aebfc41
  428325:	jne    0x428310
  428327:	add    ebp,DWORD PTR [eax-0x1d0e3265]
  42832d:	(bad)  
  42832e:	out    0xd6,ax
  428331:	fwait
  428332:	jmp    0xe9d222a1
  428337:	add    ebx,DWORD PTR [ebp-0x6e]
  42833a:	add    dh,ah
  42833c:	cmp    cl,BYTE PTR [edi]
  42833e:	add    ch,cl
  428340:	mov    dh,0xe
  428342:	gs or  eax,0xd72ec569
  428348:	ja     0x428315
  42834a:	inc    esp
  42834b:	or     eax,0x5538c4af
  428350:	xchg   ebp,eax
  428351:	inc    ebx
  428352:	jne    0x428387
  428354:	inc    edx
  428355:	pop    ecx
  428356:	and    al,0x41
  428358:	xor    bh,BYTE PTR [esi]
  42835a:	add    al,0xe9
  42835c:	jb     0x4282e3
  42835e:	lea    esp,ds:0x0
	...
  428374:	xchg   ebp,eax
  428375:	dec    edi
  428376:	lea    esp,ds:0x48e86bd5
  42837c:	into   
  42837d:	pop    DWORD PTR [eax]
  42837f:	ins    DWORD PTR es:[edi],dx
  428380:	jns    0x4283c2
  428382:	xor    bl,BYTE PTR [ebp+esi*8+0x70]
  428386:	xor    BYTE PTR [ecx],bl
  428388:	mov    eax,ds:0xb6e977b3
  42838d:	ret    0xcd74
  428390:	into   
  428391:	mov    bh,0xf
  428393:	jo     0x4283f4
  428395:	ret    
  428396:	sti    
  428397:	fst    st(2)
  428399:	jg     0x428396
  42839b:	hlt    
  42839c:	jbe    0x42833c
  42839e:	inc    eax
  42839f:	jmp    0xfd66d4d7
  4283a4:	sub    DWORD PTR [ecx+0x24],edx
  4283a7:	fnstenv ds:0x39ec7505
  4283ad:	inc    ecx
  4283ae:	and    al,0xdd
  4283b0:	push   ebx
  4283b1:	xor    BYTE PTR [eax+0x929aad],al
  4283b7:	pushf  
  4283b8:	mov    bh,0xcd
  4283ba:	inc    esp
  4283bb:	lds    edi,FWORD PTR [edi+ecx*4-0x5a6f4019]
  4283c2:	lea    ecx,[ebp+0x5877ba]
  4283c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4283c9:	dec    ebp
  4283ca:	(bad)  
  4283cb:	dec    DWORD PTR [ebx+0x61ac2f15]
  4283d1:	sar    bl,1
  4283d3:	mov    WORD PTR [bx+si-0x6000],ss
	...
  4283ec:	scas   eax,DWORD PTR es:[edi]
  4283ed:	adc    al,0xc5
  4283ef:	push   eax
  4283f0:	mov    ebx,edi
  4283f2:	add    edi,edi
  4283f4:	and    dh,BYTE PTR [edx+0x6fe88d1f]
  4283fa:	and    BYTE PTR [eax+0x64],bl
  4283fd:	jmp    0xfffc:0x250bffd6
  428404:	dec    esp
  428405:	adc    BYTE PTR [ecx+0x6a],dl
  428408:	or     edx,DWORD PTR ds:0xdf5b50c5
  42840e:	add    edi,edi
  428410:	bound  esi,QWORD PTR [edx+0x6fc88d25]
  428416:	sub    BYTE PTR [eax+0x34],bl
  428419:	push   cs
  42841a:	xlat   BYTE PTR ds:[ebx]
  42841b:	(bad)  
  42841c:	cmp    edi,ebp
  42841e:	imul   edi,edi,0xff4b5187
  428424:	add    DWORD PTR [eax+0x558fd6fd],ebx
  42842a:	cld    
  42842b:	mov    edi,0x40865c
  428430:	and    ebp,DWORD PTR [ecx+0xe]
  428433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428434:	fmulp  st(7),st
  428436:	sti    
  428437:	jg     0x428421
  428439:	mov    ds:0x43cb000a,eax
  42843e:	jp     0x428440
  428440:	fmul   QWORD PTR [edi+0x37d47589]
  428446:	adc    dh,cl
  428448:	mov    ebp,DWORD PTR [ecx+0x38]
  42844b:	ret    
  42844c:	push   ecx
  42844d:	xchg   ebp,eax
  42844e:	push   edx
  42844f:	call   0x428454
	...
  428464:	sbb    DWORD PTR [esp+edi*8-0x1],0x7342ddb5
  42846c:	push   cs
  42846d:	cs dec edi
  42846f:	sahf   
  428470:	sub    eax,0x1fffc26b
  428475:	mov    ebx,0x909fd26
  42847a:	lock mov cl,dh
  42847d:	or     ah,ch
  42847f:	out    0xa9,eax
  428481:	ins    BYTE PTR es:[edi],dx
  428482:	add    al,0x0
  428484:	adc    al,0x11
  428486:	aaa    
  428487:	inc    eax
  428488:	mov    ch,0xd9
  42848a:	rol    BYTE PTR ds:0xf7bfd0bd,1
  428490:	push   ebx
  428491:	retf   0x979f
  428494:	imul   esi,DWORD PTR [esi+0x4],0xffffff81
  428498:	fnstenv [edx+0x6115fff7]
  42849e:	ss inc eax
  4284a0:	mov    ch,0x35
  4284a2:	loopne 0x4284a9
  4284a4:	aad    0xb8
  4284a6:	sahf   
  4284a7:	xchg   edi,eax
  4284a8:	add    esi,DWORD PTR [esi+0x4]
  4284ab:	xchg   DWORD PTR [ecx-0x56],edi
  4284ae:	repz sahf 
  4284b0:	sub    eax,0x3fffc5eb
  4284b5:	jne    0x4284d7
  4284b7:	js     0x4284e5
  4284b9:	ins    DWORD PTR es:[edi],dx
  4284ba:	dec    BYTE PTR [edi]
  4284bc:	push   esp
  4284bd:	popa   
  4284be:	ss inc eax
  4284c0:	mov    ch,0x3d
  4284c2:	enter  0x6923,0x3f
  4284c6:	enter  0x5,0x0
	...
  4284da:	add    BYTE PTR [eax],al
  4284dc:	leave  
  4284dd:	pop    ss
  4284de:	jge    0x4284bd
  4284e0:	jbe    0x42849a
  4284e2:	mov    WORD PTR [ebx-0x67],cs
  4284e5:	call   0x8cf5d070
  4284ea:	ins    DWORD PTR es:[edi],dx
  4284eb:	pop    ds
  4284ec:	ret    0x1c04
  4284ef:	js     0x42851f
  4284f1:	sub    eax,0x8fb58020
  4284f6:	jmp    0xdf2221fe
  4284fb:	add    esi,DWORD PTR [ebp-0x3ae069f2]
  428501:	(bad)  
  428502:	xchg   ebp,eax
  428503:	or     dl,BYTE PTR [eax-0x6d0c32c5]
  428509:	ss cs pop ecx
  42850c:	sbb    DWORD PTR [edx-0xe],0xa99d4eee
  428513:	add    ebx,DWORD PTR [esp+ecx*4-0x5e]
  428517:	or     DWORD PTR [eax-0x9ae16b2],0x6b
  42851e:	icebp  
  42851f:	jmp    esi
  428521:	pop    edx
  428522:	pop    esi
  428523:	mov    edi,0xc66e2b96
  428528:	mov    edx,0xf68ce918
  42852d:	imul   eax,DWORD PTR [ecx-0x73],0xffffffef
  428531:	fwait
  428532:	adc    cl,BYTE PTR [ebx-0x60033ecd]
  428538:	les    ecx,FWORD PTR [edi-0x17]
  42853b:	mov    WORD PTR [edi+0xcd8197],fs
	...
  428551:	add    BYTE PTR [eax],al
  428553:	add    BYTE PTR [edx],cl
  428555:	ret    0x1c8a
  428558:	hlt    
  428559:	cmp    ebp,edi
  42855b:	mov    cl,0x12
  42855d:	sub    DWORD PTR [ecx+0x58],edi
  428560:	add    DWORD PTR [esi+0x169bcfa6],eax
  428566:	jp     0x42850a
  428568:	dec    edx
  428569:	loope  0x428511
  42856b:	add    ebx,DWORD PTR [ecx+edi*4+0x11]
  42856f:	pop    ecx
  428570:	mov    bp,sp
  428573:	imul   esi,DWORD PTR [esi],0xffffffba
  428576:	dec    ebx
  428577:	pop    eax
  428578:	cmp    eax,0x3de00d4b
  42857d:	xchg   esp,eax
  42857e:	popa   
  42857f:	cmp    DWORD PTR [ebp-0x71],esi
  428582:	add    BYTE PTR [eax-0x6],ah
  428585:	xchg   ebx,eax
  428586:	or     al,0x96
  428588:	or     eax,0x76fbac9e
  42858d:	ror    DWORD PTR [ebp+eiz*4+0xe84fc2],0xb8
  428595:	pop    DWORD PTR [eax]
  428597:	bound  edx,QWORD PTR [edx+0x6d]
  42859a:	adc    al,0xa6
  42859c:	dec    esp
  42859d:	push   0xcf4b0487
  4285a2:	adc    cl,ch
  4285a4:	dec    ebx
  4285a5:	sbb    ch,ch
  4285a7:	add    ebp,esi
  4285a9:	sar    edx,0xe6
  4285ac:	xor    eax,0x13297501
  4285b1:	xor    dl,0x10
  4285b4:	test   BYTE PTR [ecx+0xee74],dl
	...
  4285ca:	add    BYTE PTR [eax],al
  4285cc:	mov    cl,0x3c
  4285ce:	or     al,0x3d
  4285d0:	dec    edi
  4285d1:	sub    DWORD PTR [eax],eax
  4285d3:	jmp    0x3d3e758e
  4285d8:	inc    ecx
  4285d9:	les    esi,FWORD PTR [ebp-0x23]
  4285dc:	mov    edi,DWORD PTR ds:0x3d24a608
  4285e2:	adc    eax,0x7608b929
  4285e7:	stc    
  4285e8:	sub    DWORD PTR [esi],edi
  4285ea:	or     al,0x5c
  4285ec:	hlt    
  4285ed:	cwde   
  4285ee:	push   eax
  4285ef:	je     0x4285e5
  4285f1:	pushf  
  4285f2:	push   eax
  4285f3:	pop    ss
  4285f4:	push   0x3d
  4285f6:	or     BYTE PTR [edx+0x6c50a869],bh
  4285fc:	mov    al,bl
  4285fe:	pop    edx
  4285ff:	push   0xffffff89
  428601:	ret    
  428602:	jne    0x4285ea
  428604:	sbb    eax,0xe46925c4
  428609:	add    BYTE PTR [eax],0xac
  42860c:	je     0x4285aa
  42860e:	add    BYTE PTR [eax],al
  428610:	sub    DWORD PTR [esi],edx
  428612:	call   0xfdce82ff
  428617:	dec    DWORD PTR [eax+0x4b]
  42861a:	outs   dx,DWORD PTR ds:[esi]
  42861b:	inc    eax
  42861c:	dec    edx
  42861d:	popf   
  42861e:	repnz cmp DWORD PTR [ecx-0x44],ecx
  428622:	outs   dx,DWORD PTR ds:[esi]
  428623:	pop    ds
  428624:	xchg   ebp,eax
  428625:	fild   WORD PTR [edi]
  428627:	je     0x4285cf
  428629:	mov    ah,0xfb
  42862b:	call   FWORD PTR [esp+ebp*8+0x75fc]
	...
  428642:	add    BYTE PTR [eax],al
  428644:	ins    BYTE PTR es:[edi],dx
  428645:	pop    ecx
  428646:	outs   dx,BYTE PTR ds:[esi]
  428647:	or     al,0x83
  428649:	fild   WORD PTR [ebx]
  42864b:	call   FWORD PTR [ecx-0x18]
  42864e:	push   cs
  42864f:	inc    eax
  428650:	pop    esp
  428651:	adc    ebp,DWORD PTR [edi+0x10]
  428654:	in     eax,0xdf
  428656:	pop    es
  428657:	lea    ebx,[ecx-0x7672b43d]
  42865d:	mov    edi,0xdf83564b
  428662:	add    esi,DWORD PTR [ebx]
  428664:	add    eax,0x3fcf234
  428669:	pop    ecx
  42866a:	pop    ebp
  42866b:	add    DWORD PTR [ecx+ebx*2],0x6e
  42866f:	pop    es
  428670:	rcr    DWORD PTR [eax+0x1e],0xa8
  428674:	sub    esp,ecx
  428676:	sti    
  428677:	pop    esp
  428678:	dec    esi
  428679:	mov    al,0xfb
  42867b:	push   esp
  42867c:	xchg   edi,eax
  42867d:	sub    BYTE PTR [eax-0x17f2db1c],al
  428683:	sub    al,0xaa
  428685:	xor    edx,DWORD PTR [ecx]
  428687:	add    DWORD PTR [ebx-0x73f80a7],eax
  42868d:	fidiv  WORD PTR [eax]
  42868f:	div    BYTE PTR [esi-0x47bb788d]
  428695:	xchg   edi,eax
  428696:	xor    esi,DWORD PTR [ebp-0x30]
  428699:	fimul  WORD PTR [esi]
  42869b:	push   esi
  42869c:	mov    ch,0x6
  42869e:	push   ebx
  42869f:	adc    ah,BYTE PTR [ebp-0x48]
  4286a2:	mov    edi,0x37237ff
  4286a7:	lds    eax,FWORD PTR [eax]
	...
  4286b9:	add    BYTE PTR [eax],al
  4286bb:	add    BYTE PTR [ecx-0x76],bh
  4286be:	or     al,0x28
  4286c0:	mov    ch,0xb6
  4286c2:	(bad)  
  4286c3:	call   0xc12f4ae
  4286c8:	add    eax,0xa3f5aca1
  4286cd:	sahf   
  4286ce:	sbb    al,0x74
  4286d0:	sar    DWORD PTR [ebx+ecx*8+0x1c24cc23],1
  4286d7:	adc    BYTE PTR [ecx],al
  4286d9:	mov    bh,0xe7
  4286db:	inc    DWORD PTR [edx+0x1fc9fa9]
  4286e1:	int    0xf7
  4286e3:	cld    
  4286e4:	jmp    0xe13f7ebd
  4286e9:	rcl    BYTE PTR [edx+edx*1-0x17],0xc3
  4286ee:	mov    edi,0x205d2dff
  4286f3:	adc    BYTE PTR [eiz*2+0x6d381420],bh
  4286fa:	and    BYTE PTR [eax],ah
  4286fc:	in     eax,0x2b
  4286fe:	shl    BYTE PTR [ebx],0x95
  428701:	cwde   
  428702:	stos   BYTE PTR es:[edi],al
  428703:	cld    
  428704:	test   al,0xb0
  428706:	adc    bh,al
  428708:	sbb    eax,0x22fc58a2
  42870d:	sub    bl,BYTE PTR [esp+edi*8-0x60]
  428711:	les    eax,FWORD PTR [edx+0x68b0d943]
  428717:	add    BYTE PTR [esi],bh
  428719:	ins    BYTE PTR es:[edi],dx
  42871a:	or     ch,bh
  42871c:	mov    BYTE PTR [eax+0x7254],dh
	...
  428732:	add    BYTE PTR [eax],al
  428734:	mov    eax,ds:0x850fcb45
  428739:	sub    eax,0x8fea07cb
  42873e:	cld    
  42873f:	jae    0x428708
  428741:	dec    edi
  428742:	jmp    0xb4f7b4fc
  428747:	inc    ecx
  428748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428749:	(bad)  
  42874a:	mov    ah,0x88
  42874c:	ficom  WORD PTR [edx]
  42874e:	dec    esi
  42874f:	pop    esp
  428750:	xor    eax,0xd2ae0dac
  428755:	sub    al,0xe9
  428757:	push   esp
  428758:	mov    cl,0x13
  42875a:	sub    dl,al
  42875c:	daa    
  42875d:	sbb    DWORD PTR [ebx],0xffffffea
  428760:	fimul  DWORD PTR [esi+eiz*4]
  428763:	pop    ds
  428764:	test   eax,0x6079c78
  428769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42876a:	mov    bl,0xb3
  42876c:	mov    DWORD PTR [ecx+ebx*4+0x668fc2ed],esp
  428773:	inc    eax
  428774:	scas   al,BYTE PTR es:[edi]
  428775:	(bad)  
  428776:	lods   eax,DWORD PTR ds:[esi]
  428777:	pop    ds
  428778:	mov    ebp,0xb503e967
  42877d:	stos   BYTE PTR es:[edi],al
  42877e:	push   ss
  42877f:	push   ebp
  428780:	out    0x8b,eax
  428782:	cmp    DWORD PTR [esi+esi*4-0x3b],ebp
  428786:	rcl    DWORD PTR [ebx+ecx*4+0x43],cl
  42878a:	add    eax,0x73c6f0
  42878f:	rcl    BYTE PTR [esi-0x2d09ca61],1
  428795:	(bad)
	...
  4287a9:	add    BYTE PTR [eax],al
  4287ab:	add    BYTE PTR [ebp-0x42],dl
  4287ae:	xor    eax,0x1dbecd20
  4287b3:	and    BYTE PTR [ebp+0x180c14be],bh
  4287b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4287ba:	inc    ebp
  4287bb:	out    dx,al
  4287bc:	ror    BYTE PTR [edi-0x602930a0],cl
  4287c2:	jo     0x428793
  4287c4:	(bad)  
  4287c5:	mov    ds:0x6fd6bf6c,eax
  4287ca:	add    BYTE PTR [ecx],bl
  4287cc:	cmp    dl,BYTE PTR [edx+0x24]
  4287cf:	leave  
  4287d0:	es fs sti 
  4287d3:	fsubr  QWORD PTR [esi-0x67ae3680]
  4287d9:	mov    bh,0xfb
  4287db:	push   esi
  4287dc:	xor    eax,0xc2d4fbc6
  4287e1:	or     BYTE PTR [ebp+0xd],al
  4287e4:	mov    cl,0xa8
  4287e6:	push   DWORD PTR [ecx-0x5]
  4287e9:	mov    ebx,edi
  4287eb:	mov    esp,0xd575bcae
  4287f0:	add    DWORD PTR [edx+0x10],eax
  4287f3:	mov    ecx,0x1e084209
  4287f8:	mov    esp,DWORD PTR [ecx]
  4287fa:	push   ss
  4287fb:	test   eax,0x4875db6
  428800:	inc    ebx
  428801:	iret   
  428802:	adc    al,0xe9
  428804:	inc    ebp
  428805:	arpl   WORD PTR [edi+0x528b9a75],ax
  42880b:	mul    BYTE PTR [eax+0x1d]
  42880e:	push   ss
  42880f:	test   eax,0x0
	...
  428824:	mov    dh,0x6
  428826:	(bad)  
  428828:	cli    
  428829:	mov    ebx,0xfd2ddefa
  42882e:	je     0x42883d
  428830:	push   cs
  428831:	cld    
  428832:	sub    BYTE PTR [edi-0x39ad428e],0x3c
  428839:	icebp  
  42883a:	push   cs
  42883b:	sub    DWORD PTR [ecx-0x793b2359],esi
  428841:	mov    ebx,0x4086b17f
  428846:	add    eax,0xfbaa9191
  42884b:	sahf   
  42884c:	pop    esi
  42884d:	mov    esp,0x7d0b4515
  428852:	add    BYTE PTR [esi],ch
  428854:	inc    edi
  428855:	or     al,al
  428857:	add    bh,dl
  428859:	push   ebp
  42885a:	(bad)  
  42885b:	jmp    DWORD PTR [ecx+0x58e8e73c]
  428861:	pusha  
  428862:	std    
  428863:	call   DWORD PTR [eax+0x53]
  428866:	outs   dx,DWORD PTR ds:[esi]
  428867:	sub    DWORD PTR [edi-0x37bacdad],edi
  42886d:	in     al,0x21
  42886f:	cmp    DWORD PTR [ecx],esp
  428871:	shl    DWORD PTR [ebp+0x1d],0xa5
  428875:	(bad)  
  428876:	pcmpeqb mm2,mm4
  428879:	add    BYTE PTR [edi+edi*8+0x1],cl
  42887d:	lds    eax,FWORD PTR [esi+0x6e619445]
  428883:	adc    bl,bl
  428885:	(bad)  
  428886:	pop    es
  428887:	call   0x42888c
	...
  42889c:	gs pop ecx
  42889e:	cld    
  42889f:	dec    DWORD PTR [edi]
  4288a1:	dec    esp
  4288a2:	cld    
  4288a3:	jne    0x428848
  4288a5:	(bad)  
  4288a6:	cld    
  4288a7:	and    eax,0x3bb6f8
  4288ac:	pop    ecx
  4288ad:	push   edx
  4288ae:	or     eax,DWORD PTR [eax]
  4288b0:	and    DWORD PTR ds:0xfcb456e7,edi
  4288b6:	cld    
  4288b7:	(bad)  
  4288b8:	pop    ebx
  4288b9:	cmp    eax,0x50d00c6e
  4288be:	outs   dx,DWORD PTR ds:[esi]
  4288bf:	sub    ecx,edx
  4288c1:	push   esi
  4288c2:	outs   dx,DWORD PTR ds:[esi]
  4288c3:	and    eax,0x850ff6d7
  4288c8:	push   cs
  4288c9:	in     al,0x1d
  4288cb:	lea    edx,[edx-0x2ef77755]
  4288d1:	jnp    0x428942
  4288d3:	adc    eax,0x6a0fd76b
  4288d8:	sbb    eax,0xa9524b00
  4288dd:	mov    DWORD PTR [ebx],0xfc5911e8
  4288e3:	push   DWORD PTR [ebp-0x7f03b8d7]
  4288e9:	mov    dh,0x4e
  4288eb:	jb     0x428896
  4288ed:	adc    eax,0x3d630fd9
  4288f2:	fadd   DWORD PTR [edi]
  4288f4:	repnz fiadd DWORD PTR [ebx-0x4e598aee]
  4288fb:	pop    edx
  4288fc:	div    DWORD PTR [ebp+0x52ff]
	...
  428912:	add    BYTE PTR [eax],al
  428914:	cs dec edx
  428916:	push   edi
  428917:	std    
  428918:	shl    DWORD PTR [ebx+0x4e],cl
  42891b:	xor    ebp,0xffffffe1
  42891e:	in     al,dx
  42891f:	cld    
  428920:	dec    eax
  428921:	fiadd  DWORD PTR [eax+0x5e0ad42]
  428927:	std    
  428928:	sub    BYTE PTR [ebp-0x56e30023],dh
  42892e:	push   edi
  42892f:	enter  0x72ab,0x4e
  428933:	sbb    BYTE PTR [ebp-0xffb2766],0xa1
  42893a:	sub    BYTE PTR [eax+0x5affe8a0],cl
  428940:	ja     0x42891b
  428942:	call   DWORD PTR [edx+0x2e]
  428945:	lea    edx,[edi-0x33]
  428948:	jae    0x42890d
  42894a:	push   ecx
  42894b:	xor    DWORD PTR [ebp+0x45],0xffffffc5
  42894f:	push   ebp
  428950:	or     dh,dl
  428952:	test   ch,bl
  428954:	imul   BYTE PTR [eax+0xca8fcb8]
  42895a:	repz aas 
  42895c:	mov    ch,0x2d
  42895e:	rol    DWORD PTR [edi],cl
  428960:	dec    ebp
  428961:	(bad)  
  428962:	pusha  
  428963:	cld    
  428964:	cmp    ah,BYTE PTR [esi]
  428966:	dec    esp
  428967:	cld    
  428968:	test   eax,0xddbfdce2
  42896d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42896e:	add    bl,BYTE PTR [eax+0x4269003]
  428974:	xor    al,0x38
  428976:	cmc    
  428977:	add    al,BYTE PTR [eax]
	...
  428989:	add    BYTE PTR [eax],al
  42898b:	add    BYTE PTR [esi-0x4543a176],al
  428991:	push   cs
  428992:	adc    DWORD PTR [eax],ecx
  428994:	mov    ch,0x43
  428996:	jmp    0x428a14
  428998:	mov    edx,0xbac77073
  42899d:	bound  esi,QWORD PTR [edx-0x9]
  4289a0:	push   ds
  4289a1:	sahf   
  4289a2:	sub    DWORD PTR [eax+eax*4],eax
  4289a5:	pop    ecx
  4289a6:	les    edx,FWORD PTR [eax-0x69]
  4289a9:	iret   
  4289aa:	hlt    
  4289ab:	ret    
  4289ac:	shl    BYTE PTR [edx-0x4537ae2b],cl
  4289b2:	gs inc esp
  4289b4:	inc    esi
  4289b5:	mov    BYTE PTR [esi-0x40],ch
  4289b8:	xchg   esi,eax
  4289b9:	xchg   DWORD PTR [ecx-0x68],edx
  4289bc:	mov    al,ds:0xd75132ba
  4289c1:	aaa    
  4289c2:	aam    0xc3
  4289c4:	mov    ds:0x98518db2,al
  4289c9:	mov    edx,0x89064465
  4289ce:	pop    esi
  4289cf:	rcl    dh,0x87
  4289d2:	add    DWORD PTR [eax-0x70],esi
  4289d5:	mov    edx,0xbd75102
  4289da:	aad    0xc3
  4289dc:	jb     0x428a41
  4289de:	pop    esi
  4289df:	pusha  
  4289e0:	xor    eax,0xe602dd3c
  4289e5:	mov    ds:0x93c6ce66,al
  4289ea:	push   esp
  4289eb:	repz pop edx
  4289ed:	jl     0x4289c2
  4289ef:	push   ecx
	...
  428a04:	dec    ecx
  428a05:	adc    ebp,DWORD PTR [edx+0x3506bad7]
  428a0b:	hlt    
  428a0c:	push   edx
  428a0d:	inc    ecx
  428a0e:	retf   
  428a0f:	push   eax
  428a10:	xor    DWORD PTR [eax+eax*1-0x4a],ebx
  428a14:	rol    DWORD PTR [ebx],cl
  428a16:	push   ss
  428a17:	sub    DWORD PTR [ecx-0x666a78a2],edi
  428a1d:	dec    ebp
  428a1e:	or     al,0x68
  428a20:	jb     0x4289a8
  428a22:	add    ecx,ebp
  428a24:	mov    dh,0x61
  428a26:	mov    edx,0x8fb8e9
  428a2b:	push   ds
  428a2c:	scas   al,BYTE PTR es:[edi]
  428a2d:	jg     0x428a9d
  428a2f:	add    BYTE PTR [edi],ch
  428a31:	mov    ebx,0xb221e175
  428a36:	retf   
  428a37:	jp     0x4289bd
  428a39:	mov    ebx,0xb9e6e47f
  428a3e:	outs   dx,DWORD PTR ds:[esi]
  428a3f:	add    eax,0x6a103d64
  428a44:	adc    edi,DWORD PTR [esi-0x459ab106]
  428a4a:	mov    WORD PTR [edx+eiz*2-0x44],gs
  428a4e:	sti    
  428a4f:	ds push cs
  428a51:	or     eax,DWORD PTR [ecx-0x17]
  428a54:	mov    dh,0x6
  428a56:	shl    DWORD PTR [edx-0x1f],cl
  428a59:	add    eax,0xbc041d86
  428a5e:	sti    
  428a5f:	adc    esp,edi
  428a61:	jns    0x428a63
  428a63:	jmp    0xa887029f
	...
  428a7c:	cmp    al,0x4e
  428a7e:	jne    0x428a44
  428a80:	pop    esi
  428a81:	rol    DWORD PTR [ecx],0xe9
  428a84:	mov    dh,0x4
  428a86:	jo     0x428a69
  428a88:	sub    al,0x27
  428a8a:	(bad)  
  428a8b:	pop    ebx
  428a8c:	jae    0x428a1f
  428a8e:	pop    eax
  428a8f:	rcr    DWORD PTR [ebx-0x2c],1
  428a92:	add    cl,ch
  428a94:	iret   
  428a95:	dec    ebp
  428a96:	or     BYTE PTR [edx],dl
  428a98:	jbe    0x428a27
  428a9a:	jne    0x428aa4
  428a9c:	xor    ebx,eax
  428a9e:	add    DWORD PTR [eax],eax
  428aa0:	dec    esp
  428aa1:	lea    esp,[edx+0x39]
  428aa4:	sbb    ah,dl
  428aa6:	adc    al,0xf
  428aa8:	stos   DWORD PTR es:[edi],eax
  428aa9:	xchg   ecx,eax
  428aaa:	mov    DWORD PTR [ebp+0x0],ecx
  428aad:	std    
  428aae:	add    BYTE PTR [ecx],0xa1
  428ab1:	int3   
  428ab2:	or     DWORD PTR [eax-0x31],edx
  428ab5:	pop    ebx
  428ab6:	pop    edi
  428ab7:	repz and cl,BYTE PTR [ecx-0x55]
  428abb:	add    DWORD PTR [edi],esi
  428abd:	mov    gs,WORD PTR [esi]
  428abf:	rcl    bl,0xe9
  428ac2:	ret    0xe0c2
  428ac5:	mov    WORD PTR [edi-0x75],cs
  428ac8:	xor    BYTE PTR [ebx],dl
  428aca:	call   0xcf57d7
  428acf:	push   esi
  428ad0:	sbb    ecx,DWORD PTR [edx]
  428ad2:	test   BYTE PTR [ecx],0xdc
  428ad5:	mov    WORD PTR [ecx+0x655057f0],cs
  428adb:	cmp    eax,DWORD PTR [ecx+eiz*8+0x31ff]
	...
  428af2:	add    BYTE PTR [eax],al
  428af4:	mov    WORD PTR [esp+eiz*2+0xf],ss
  428af8:	sub    ecx,DWORD PTR [ebp+0x4b]
  428afb:	jmp    FWORD PTR [ecx-0x4c]
  428afe:	xchg   BYTE PTR [esi-0x6a],dl
  428b01:	(bad)  
  428b02:	jecxz  0x428b2f
  428b04:	mov    edi,0x9c6afc49
  428b09:	xchg   ebp,eax
  428b0a:	clc    
  428b0b:	push   edi
  428b0c:	lahf   
  428b0d:	dec    esi
  428b0e:	dec    ebx
  428b0f:	call   0x400616
  428b14:	and    al,0x44
  428b16:	cli    
  428b17:	call   FWORD PTR [edi+ecx*1+0x46]
  428b1b:	or     BYTE PTR [esi+edx*8+0x1],cl
  428b1f:	data16 aad 0xab
  428b22:	xchg   BYTE PTR [esi+0x48],bh
  428b25:	in     al,0xc4
  428b27:	push   es
  428b28:	cwde   
  428b29:	rcl    BYTE PTR [ebp+0x45],cl
  428b2c:	mov    ch,0xce
  428b2e:	test   ebp,eax
  428b30:	mov    ch,0xa6
  428b32:	jle    0x428bae
  428b34:	test   eax,0x3222d3a6
  428b39:	add    DWORD PTR [eax],0xffffff81
  428b3c:	push   eax
  428b3d:	dec    BYTE PTR [ebp-0x4]
  428b40:	and    ah,BYTE PTR [esi-0xfe27d80]
  428b46:	dec    edx
  428b47:	cld    
  428b48:	sbb    eax,0xb5000ae6
  428b4d:	pop    esp
  428b4e:	inc    DWORD PTR [ecx]
  428b50:	mov    ch,0xa6
  428b52:	add    BYTE PTR [edx-0x3b4f003],0x0
	...
  428b69:	add    BYTE PTR [eax],al
  428b6b:	add    ch,bl
  428b6d:	aaa    
  428b6e:	or     al,BYTE PTR [eax]
  428b70:	mov    ch,0x76
  428b72:	add    al,0x5d
  428b74:	sub    edi,0x41
  428b77:	pop    es
  428b78:	mov    ch,0xfb
  428b7a:	jbe    0x428b67
  428b7c:	xor    al,0x4a
  428b7e:	jmp    0x428b80
  428b80:	mov    ch,0xa6
  428b82:	scas   al,BYTE PTR es:[edi]
  428b83:	push   ebp
  428b84:	xor    al,0x5f
  428b86:	inc    DWORD PTR [ecx]
  428b88:	mov    ch,0xa6
  428b8a:	shr    DWORD PTR [ebp+0x40],1
  428b8d:	and    eax,0x7ea8fff7
  428b92:	dec    edx
  428b93:	mov    BYTE PTR [ebp-0x210c3fd0],ah
  428b99:	rcr    BYTE PTR [di+0x36],cl
  428b9d:	adc    al,0xf8
  428b9f:	(bad)  
  428ba0:	aas    
  428ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ba2:	jl     0x428be6
  428ba4:	jge    0x428bc3
  428ba6:	es std 
  428ba8:	add    cl,al
  428baa:	jle    0x428b4e
  428bac:	pop    ebp
  428bad:	mov    bh,0x4d
  428baf:	cld    
  428bb0:	mov    ch,0x2b
  428bb2:	mov    bh,ah
  428bb4:	arpl   WORD PTR [esi-0x702f18b3],sp
  428bba:	and    al,BYTE PTR [esi*4+0x3fa9e529]
  428bc1:	inc    ebp
  428bc2:	sar    DWORD PTR [edi+0x37],1
  428bc5:	test   al,0xcb
  428bc7:	dec    ebp
  428bc8:	cmp    DWORD PTR [eax-0x48cd3ba2],ebp
  428bce:	push   0xcf
	...
  428be3:	add    BYTE PTR [edx],ah
  428be5:	dec    esp
  428be6:	sub    BYTE PTR [esi+0x4ccb3c77],dh
  428bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428bed:	xchg   DWORD PTR [edi+eax*8+0x22],esi
  428bf1:	pusha  
  428bf2:	xor    edi,DWORD PTR [edi+0x2f]
  428bf5:	lods   al,BYTE PTR ds:[esi]
  428bf6:	xchg   ebp,eax
  428bf7:	dec    ebp
  428bf8:	add    edi,ecx
  428bfa:	and    al,0x54
  428bfc:	cli    
  428bfd:	nop
  428bfe:	jmp    0x7b716906
  428c03:	dec    ebp
  428c04:	jmp    0xb11a3614
  428c09:	dec    ebp
  428c0a:	scas   al,BYTE PTR es:[edi]
  428c0b:	(bad)  
  428c0c:	out    0x3d,al
  428c0e:	xchg   DWORD PTR [ecx],edx
  428c10:	cmc    
  428c11:	push   ebp
  428c12:	mov    esi,0xe98bf43a
  428c17:	js     0x428c11
  428c19:	stos   BYTE PTR es:[edi],al
  428c1a:	push   ebx
  428c1b:	mov    bh,0x2d
  428c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c1e:	pushaw 
  428c20:	mov    esi,0xffa50a
  428c25:	or     esi,DWORD PTR [edi-0x34a4d3f1]
  428c2b:	pop    ss
  428c2c:	add    BYTE PTR [ebx],cl
  428c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c2f:	sti    
  428c30:	fnstsw WORD PTR [edx+0x5efa44e6]
  428c36:	mov    dh,0x78
  428c38:	ins    DWORD PTR es:[edi],dx
  428c39:	or     BYTE PTR [ebp-0x253b6da9],ah
  428c3f:	add    esi,DWORD PTR [ebp-0x5b45afc]
  428c45:	sub    DWORD PTR [eax],eax
  428c47:	test   eax,0x0
	...
  428c5c:	icebp  
  428c5d:	inc    ecx
  428c5e:	or     al,0xee
  428c60:	or     DWORD PTR [esi-0x7add0305],0x40
  428c67:	jmp    0x17b7829f
  428c6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c6d:	into   
  428c6e:	mov    BYTE PTR [eax+ebp*8],bl
  428c71:	jge    0x428cc0
  428c73:	cmc    
  428c74:	or     BYTE PTR [ebp-0x4c9c88f5],dl
  428c7a:	xchg   DWORD PTR [ecx+eiz*1],ebp
  428c7d:	or     BYTE PTR [ebp-0x2c],dl
  428c80:	es data16 adc al,0xf1
  428c84:	adc    BYTE PTR [ecx-0x5],0x69
  428c88:	sti    
  428c89:	mov    dl,0x4
  428c8b:	sbb    al,0xad
  428c8d:	int    0x45
  428c8f:	mov    ?,WORD PTR [esi-0x4acbc88a]
  428c95:	inc    ecx
  428c96:	fld    TBYTE PTR [ebx+esi*8-0x43]
  428c9a:	push   eax
  428c9b:	jbe    0x428ca8
  428c9d:	mov    esi,0xb2daf4fb
  428ca2:	jne    0x428c95
  428ca4:	and    DWORD PTR [ecx-0x4a0907a4],0x76adcfa
  428cae:	shl    BYTE PTR [esi-0x2e5bd97],1
  428cb4:	sub    eax,0xa1d1e8c8
  428cb9:	mov    ch,0xfb
  428cbb:	xchg   esi,eax
  428cbc:	push   eax
  428cbd:	into   
  428cbe:	mov    esi,0xdd
	...
  428cd3:	add    BYTE PTR [esi-0x456caca3],dh
  428cd9:	or     BYTE PTR [ecx-0x57],dh
  428cdc:	pop    ecx
  428cdd:	mov    ah,0x72
  428cdf:	sub    esi,ebx
  428ce1:	xor    cl,dh
  428ce3:	psubsw mm6,QWORD PTR [ebx+0x58bc0072]
  428cea:	push   edi
  428ceb:	icebp  
  428cec:	push   0x49
  428cee:	cld    
  428cef:	ss mov ah,0xfd
  428cf2:	jmp    0x8b04:0xc5354bfe
  428cf9:	fsubrp st(0),st
  428cfb:	pop    edi
  428cfc:	mov    cl,BYTE PTR [eax+edx*2-0x39]
  428d00:	push   ebx
  428d01:	ror    DWORD PTR [ecx-0x2661b3c0],1
  428d07:	push   esi
  428d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d09:	call   0xb80e1611
  428d0e:	les    eax,FWORD PTR [edi+0x10]
  428d11:	rol    DWORD PTR [esi+0x33d90c40],0x8a
  428d18:	fmul   QWORD PTR [ebx+0x39004787]
  428d1e:	pop    esp
  428d1f:	sbb    al,0x95
  428d21:	call   0x700e1641
  428d26:	sbb    DWORD PTR [edi+0x4],0x1
  428d2a:	mov    BYTE PTR [edi+0xc],0x4a
  428d2e:	cld    
  428d2f:	adc    eax,0x3bbe38
  428d34:	jns    0x428d16
  428d36:	daa    
  428d37:	mov    eax,0x0
	...
  428d4c:	and    al,0x8c
  428d4e:	add    BYTE PTR [eax],al
  428d50:	outs   dx,DWORD PTR fs:[esi]
  428d52:	sar    bh,cl
  428d54:	imul   esi,DWORD PTR [edx],0x74
  428d57:	and    al,0xa
  428d59:	xor    al,0x5c
  428d5b:	sub    dl,ah
  428d5d:	rcl    BYTE PTR [edi],1
  428d5f:	add    ebx,edx
  428d61:	rcr    BYTE PTR [ebx],1
  428d63:	cmp    cl,BYTE PTR [eax+edx*4-0x1b2c7500]
  428d6a:	rcl    BYTE PTR [edi+0x7],0x43
  428d6e:	jecxz  0x428d83
  428d70:	pushf  
  428d71:	nop
  428d72:	add    dh,dh
  428d74:	mov    ch,0xe2
  428d76:	sbb    ecx,DWORD PTR [eax]
  428d78:	mov    ah,0x1a
  428d7a:	add    dl,BYTE PTR [ebp+0x5d]
  428d7d:	ins    BYTE PTR es:[edi],dx
  428d7e:	push   esp
  428d7f:	std    
  428d80:	push   0x41
  428d82:	aas    
  428d83:	pop    esp
  428d84:	ja     0x428d28
  428d86:	call   DWORD PTR [edx+0x2e]
  428d89:	mov    dl,0xb4
  428d8b:	dec    esi
  428d8c:	ss inc ebx
  428d8e:	dec    eax
  428d8f:	push   DWORD PTR [edi]
  428d91:	push   ebp
  428d92:	clc    
  428d93:	(bad)  
  428d94:	call   0x2f828c7e
  428d99:	data16 add al,0x76
  428d9c:	xchg   BYTE PTR [ecx+0x41bd447b],bl
  428da2:	mov    eax,0x77b230fb
  428da7:	mov    BYTE PTR [ebx+0x6d362ab9],dh
  428dad:	mov    esi,0x19d1
	...
  428dc2:	add    BYTE PTR [eax],al
  428dc4:	cmp    al,0x73
  428dc6:	dec    esp
  428dc7:	mov    BYTE PTR [ebp-0x5e],dh
  428dca:	add    al,BYTE PTR [ebx-0x3]
  428dcd:	or     eax,0xcf2fd19
  428dd2:	jnp    0x428dd9
  428dd4:	imul   ecx,DWORD PTR ss:[edi+ebx*2+0x76],0x1
  428dda:	test   al,0x7
  428ddc:	addr16 (bad) 
  428ddf:	xor    eax,0x13cb5438
  428de4:	retf   0xfbdb
  428de7:	les    edi,FWORD PTR [ebx-0x4ac08216]
  428ded:	dec    esi
  428dee:	test   bh,ch
  428df0:	mov    bl,0x4a
  428df2:	mov    cl,0xe7
  428df4:	cs jns 0x428e40
  428df7:	cld    
  428df8:	mov    ds:0xf08843e4,al
  428dfd:	or     al,BYTE PTR fs:[ebp-0x3f]
  428e01:	(bad)  
  428e02:	xchg   edi,eax
  428e03:	call   0x59a:0xe79304ed
  428e0a:	in     al,0x4a
  428e0c:	jns    0x428dc1
  428e0e:	xchg   edx,eax
  428e0f:	sti    
  428e10:	jns    0x428e5d
  428e12:	in     eax,dx
  428e13:	repz aas 
  428e15:	push   eax
  428e16:	jmp    0xf4029876
  428e1b:	dec    ecx
  428e1c:	jno    0x428da9
  428e1e:	mov    ebp,0x438f9278
  428e23:	cmp    esi,DWORD PTR [ebp+0x5d]
  428e26:	outs   dx,BYTE PTR ds:[esi]
  428e27:	pop    eax
	...
  428e3c:	repz and eax,0xbf965be5
  428e42:	retf   
  428e43:	dec    ecx
  428e44:	aaa    
  428e45:	sar    BYTE PTR ds:0xe53035f5,1
  428e4b:	add    esi,DWORD PTR [eax+esi*1]
  428e4e:	loope  0x428e53
  428e50:	lock (bad) 
  428e52:	sbb    eax,0x708fd27e
  428e57:	mov    edi,0x84e5a70e
  428e5c:	xchg   edi,eax
  428e5d:	mov    bl,0xe9
  428e5f:	test   BYTE PTR [edi-0x4d],bh
  428e62:	jmp    0x6e71f518
  428e67:	sar    DWORD PTR [esi-0x498119fc],0x8f
  428e6e:	jmp    0xe17dbc76
  428e73:	mov    bl,0xda
  428e75:	sbb    eax,0xbc94a53
  428e7a:	sub    dl,al
  428e7c:	mov    es,WORD PTR [esi]
  428e7e:	in     al,0xdd
  428e80:	mov    dh,0x4
  428e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e83:	inc    edi
  428e84:	add    al,BYTE PTR [edi]
  428e86:	stos   DWORD PTR es:[edi],eax
  428e87:	idiv   DWORD PTR [edi]
  428e89:	mov    ebp,DWORD PTR [eax-0x4c]
  428e8c:	mov    eax,ds:0xa4a5009c
  428e91:	jb     0x428e93
  428e93:	bound  esi,QWORD PTR [esi+eax*4-0x79]
  428e97:	div    DWORD PTR [ecx]
  428e99:	into   
  428e9a:	or     al,0x6c
  428e9c:	jge    0x428ecf
  428e9e:	inc    eax
  428e9f:	pusha  
	...
  428eb4:	je     0x428e3c
  428eb6:	test   DWORD PTR [eax],esp
  428eb8:	test   DWORD PTR [esi-0x6bf61750],ecx
  428ebe:	xchg   DWORD PTR [edx+edi*8-0xe930ef9],esp
  428ec5:	ds adc al,0xee
  428ec8:	fs mov es,ebx
  428ecb:	jmp    0xe98396d2
  428ed0:	fmulp  st(2),st
  428ed2:	jmp    0x428eab
  428ed4:	in     eax,dx
  428ed5:	pop    esp
  428ed6:	call   0xfbf71c86
  428edb:	sti    
  428edc:	jbe    0x428f32
  428ede:	leave  
  428edf:	stos   BYTE PTR es:[edi],al
  428ee0:	push   ebx
  428ee1:	pop    es
  428ee2:	in     eax,dx
  428ee3:	push   0xffffff82
  428ee5:	xchg   DWORD PTR es:[ecx*1+0x693e525f],ebx
  428eed:	mov    ebx,DWORD PTR [edi+0x46096d9e]
  428ef3:	xchg   ecx,eax
  428ef4:	jnp    0x428ee8
  428ef6:	or     ebx,DWORD PTR [edi+0x69]
  428ef9:	mov    cl,0xfb
  428efb:	jmp    0x6a4adc69
  428f00:	out    dx,al
  428f01:	test   DWORD PTR [ecx],eax
  428f03:	out    0x30,al
  428f05:	or     al,0x2
  428f07:	jmp    0x81a89fc2
  428f0c:	mov    dh,0x80
  428f0e:	shr    BYTE PTR [ebx+edi*8+0x15],0xa8
  428f13:	sbb    al,0x41
  428f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f17:	pop    esp
	...
  428f2c:	jae    0x428f17
  428f2e:	data16 add BYTE PTR [ebp+edi*8-0x71effc1d],bl
  428f36:	add    BYTE PTR [ebx+0x45c5b8c8],al
  428f3c:	jecxz  0x428eca
  428f3e:	mov    ecx,0x8d9cff
  428f43:	jmp    FWORD PTR [ecx]
  428f45:	mov    ecx,0x54a44588
  428f4a:	lahf   
  428f4b:	aad    0xc2
  428f4d:	inc    edi
  428f4e:	or     al,0xb6
  428f50:	and    DWORD PTR [eax-0x7a],ecx
  428f53:	je     0x428f26
  428f55:	and    al,0x82
  428f57:	push   es
  428f58:	leave  
  428f59:	dec    esp
  428f5a:	or     al,0x84
  428f5c:	and    BYTE PTR [esi-0x31390000],cl
  428f62:	repz (bad) 
  428f64:	loopne 0x428f9c
  428f66:	mov    ds:0x82f30c03,eax
  428f6b:	pop    es
  428f6c:	mov    BYTE PTR [eax-0xd418bbd],bl
  428f72:	outs   dx,BYTE PTR ds:[esi]
  428f73:	xor    DWORD PTR [ebx-0x7e],esp
  428f76:	std    
  428f77:	adc    eax,0x3bbebc
  428f7c:	xchg   edi,eax
  428f7d:	mov    cl,0xc
  428f7f:	mov    bh,0x1c
  428f81:	outs   dx,BYTE PTR ds:[esi]
  428f82:	rcl    DWORD PTR [eax+0x23],0xbf
  428f86:	add    edx,DWORD PTR ds:0xe898bcc
  428f8c:	dec    DWORD PTR [ebp+0x65]
  428f8f:	mov    DWORD PTR [eax],eax
	...
  428fa1:	add    BYTE PTR [eax],al
  428fa3:	add    ch,bl
  428fa5:	push   ebp
  428fa6:	adc    edi,edi
  428fa8:	sub    cl,BYTE PTR [edx+0xe]
  428fab:	push   eax
  428fac:	stc    
  428fad:	int3   
  428fae:	sti    
  428faf:	jmp    0xb4c9:0xff3549d4
  428fb6:	push   cs
  428fb7:	inc    eax
  428fb8:	int3   
  428fb9:	or     al,0x77
  428fbb:	push   DWORD PTR [ebp-0x4de1345a]
  428fc1:	cdq    
  428fc2:	inc    ebx
  428fc3:	jb     0x428f7e
  428fc5:	dec    ecx
  428fc6:	or     bh,ch
  428fc8:	enter  0xee1a,0x3f
  428fcc:	mov    ch,0x25
  428fce:	inc    eax
  428fcf:	or     edi,DWORD PTR [eax]
  428fd1:	ror    WORD PTR [edx],1
  428fd4:	mov    dl,al
  428fd6:	push   edi
  428fd7:	jmp    0x428f6c
  428fd9:	nop
  428fda:	inc    ebx
  428fdb:	adc    bl,0xa6
  428fde:	jle    0x429004
  428fe0:	mov    ch,0x80
  428fe2:	sar    esp,0x35
  428fe5:	or     eax,DWORD PTR [ebx+0x3]
  428fe8:	mov    dl,0x24
  428fea:	(bad)  
  428feb:	cld    
  428fec:	pop    edx
  428fed:	mov    ecx,0x692d7278
  428ff2:	ror    DWORD PTR [ebx],0xb1
  428ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ff6:	(bad)  
  428ff7:	jmp    FWORD PTR [esi]
  428ff9:	test   al,0x80
  428ffb:	mov    edi,0x7d797ac1
  429000:	in     eax,0x2d
  429002:	mov    ds:0x571782df,al
  429007:	push   eax
	...
  42901c:	test   DWORD PTR [esp+eax*1-0x18],ebx
  429020:	jle    0x4290a1
  429022:	add    al,0x0
  429024:	cmp    al,0x69
  429026:	push   esp
  429027:	xor    ch,0x92
  42902a:	(bad)  
  42902b:	push   ds
  42902c:	mov    edx,0xf689053d
  429031:	and    ah,BYTE PTR [esi]
  429033:	jbe    0x428ff3
  429035:	sub    eax,0x46efe732
  42903a:	inc    edx
  42903b:	cld    
  42903c:	cmp    dh,ah
  42903e:	(bad)  
  42903f:	adc    esp,DWORD PTR [esi+0x53bf80ef]
  429045:	into   
  429046:	fld    QWORD PTR [eax-0x394d7077]
  42904c:	dec    ecx
  42904d:	mov    BYTE PTR [eax+0x5d32ed0a],ch
  429053:	pop    edx
  429054:	int3   
  429055:	sbb    al,0xcc
  429057:	mov    bl,0x1
  429059:	inc    ebx
  42905a:	inc    edx
  42905b:	or     eax,0x33cb90d
  429060:	mov    ch,0xb7
  429062:	iret   
  429063:	int3   
  429064:	xchg   edx,eax
  429065:	scas   eax,DWORD PTR es:[edi]
  429066:	pusha  
  429067:	mov    ebp,0xd02a14ca
  42906c:	mov    ah,0x70
  42906e:	loop   0x428ff2
  429070:	jo     0x429006
  429072:	adc    bh,BYTE PTR [eax+0x7a7324be]
  429078:	not    DWORD PTR [edi+0x1aaebb6e]
  42907e:	stos   BYTE PTR es:[edi],al
  42907f:	sti    
	...
  429094:	sub    eax,0x3d47612c
  429099:	push   edi
  42909a:	loope  0x42905f
  42909c:	(bad)  
  42909e:	dec    ecx
  42909f:	ja     0x42906a
  4290a1:	xchg   ebx,eax
  4290a2:	cmp    DWORD PTR [ebp+ebp*2-0x43],ebx
  4290a6:	rol    DWORD PTR [ebp+0x36],cl
  4290a9:	rcl    BYTE PTR [ebp+0x16],1
  4290ac:	lahf   
  4290ad:	das    
  4290ae:	je     0x42906f
  4290b0:	dec    edx
  4290b1:	inc    eax
  4290b2:	outs   dx,BYTE PTR ds:[esi]
  4290b3:	mov    ebp,0xe4a93ab2
  4290b8:	mov    ch,0x95
  4290ba:	sbb    DWORD PTR [ebp-0x59],eax
  4290bd:	pop    ebx
  4290be:	sti    
  4290bf:	ret    
  4290c0:	add    bl,BYTE PTR [edx]
  4290c2:	and    edi,esp
  4290c4:	sub    eax,0x923afed8
  4290c9:	adc    ah,BYTE PTR [esi+0x749db5f8]
  4290cf:	(bad)
  4290d3:	cld    
  4290d4:	xchg   bx,ax
  4290d6:	add    BYTE PTR [ecx],bh
  4290d8:	mov    dh,0xb8
  4290da:	push   es
  4290db:	pop    esp
  4290dc:	or     al,BYTE PTR [edi]
  4290de:	jmp    0xfbedfe66
  4290e3:	sbb    esi,DWORD PTR [ecx+0x4b]
  4290e6:	pop    edx
  4290e7:	mov    dl,0xef
  4290e9:	ror    BYTE PTR [eax],1
  4290eb:	jmp    0x91ab1b7c
  4290f0:	jo     0x429141
  4290f2:	add    BYTE PTR [ecx+0xc],dl
  4290f5:	sbb    eax,0xe902
	...
  42910a:	add    BYTE PTR [eax],al
  42910c:	xor    eax,0x35e9fc31
  429111:	xor    eax,esp
  429113:	jmp    0x724ae315
  429118:	inc    edx
  429119:	into   
  42911a:	aaa    
  42911b:	mov    eax,ds:0x277f9b6a
  429120:	mov    cl,0x8f
  429122:	add    BYTE PTR [edx+0x79],dh
  429125:	xchg   esi,eax
  429126:	(bad)  
  429127:	in     eax,0xde
  429129:	adc    eax,0xa5a41d46
  42912e:	mov    DWORD PTR [edx+edx*4+0x17],esi
  429132:	or     DWORD PTR [edx-0x1],esi
  429135:	xchg   ebp,eax
  429136:	mov    DWORD PTR [ecx+ecx*4],ebp
  429139:	adc    edx,ecx
  42913b:	out    0xb2,al
  42913d:	add    eax,0x68b6e901
  429142:	jne    0x4290e5
  429144:	sub    DWORD PTR [edi],ecx
  429146:	sub    ecx,0xe9878fb6
  42914c:	in     eax,dx
  42914d:	mov    ds:0x91e6ea60,eax
  429152:	ret    0x602c
  429155:	scas   al,BYTE PTR es:[edi]
  429156:	jnp    0x429174
  429158:	pop    eax
  429159:	xchg   edx,eax
  42915a:	outs   dx,DWORD PTR ds:[esi]
  42915b:	xor    al,0xe8
  42915d:	jecxz  0x4291dc
  42915f:	xchg   BYTE PTR [ebp+0x4a],ch
  429162:	mov    edx,0xd82cfc00
  429167:	jle    0x429167
  429169:	push   edx
  42916a:	das    
  42916b:	mov    esi,0x8b0bdd4b
	...
  429184:	xchg   ecx,eax
  429185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429186:	jecxz  0x429122
  429188:	push   0x54
  42918a:	cld    
  42918b:	test   DWORD PTR [ebp+ebx*8+0x13688b38],ecx
  429192:	sub    al,0x85
  429194:	out    0xd2,eax
  429196:	adc    bh,bh
  429198:	pusha  
  429199:	adc    ebx,DWORD PTR [edi+edi*8]
  42919c:	popa   
  42919d:	mov    eax,ds:0x49984588
  4291a2:	jl     0x429192
  4291a4:	ficom  DWORD PTR [ebx+0x7e]
  4291a7:	shl    BYTE PTR [ecx],0x71
  4291aa:	mov    DWORD PTR [edx+ebx*8-0x20],ebx
  4291ae:	jle    0x42918b
  4291b0:	dec    edx
  4291b1:	mov    al,ds:0xd0fa74fc
  4291b6:	cld    
  4291b7:	jne    0x429235
  4291b9:	sub    BYTE PTR [esi],bh
  4291bb:	or     al,0xc4
  4291bd:	int3   
  4291be:	in     eax,dx
  4291bf:	dec    BYTE PTR [ebx+0x2b]
  4291c2:	mov    ebx,0x3e535175
  4291c7:	out    0x67,eax
  4291c9:	xor    edi,DWORD PTR [ebx+0x7d]
  4291cc:	jae    0x429166
  4291ce:	je     0x4291df
  4291d0:	xchg   edi,eax
  4291d1:	out    0xd7,al
  4291d3:	inc    esi
  4291d4:	xchg   ebp,eax
  4291d5:	out    0xd7,al
  4291d7:	mov    edx,ecx
  4291d9:	inc    edi
  4291da:	loop   0x429253
  4291dc:	pop    ebx
  4291dd:	push   ecx
  4291de:	cld    
  4291df:	mov    esp,ecx
  4291e1:	dec    ebx
  4291e2:	xor    al,BYTE PTR [ebp+0x38]
  4291e5:	out    0x3,eax
  4291e7:	add    DWORD PTR [eax],0x0
	...
  4291fa:	add    BYTE PTR [eax],al
  4291fc:	leave  
  4291fd:	dec    edi
  4291fe:	cld    
  4291ff:	mov    al,0xd
  429201:	jle    0x429211
  429203:	push   DWORD PTR [ebp-0x5819db85]
  429209:	sbb    eax,0xf6a6fc40
  42920e:	(bad)  
  42920f:	shr    BYTE PTR [esi],0x94
  429212:	sub    al,0x80
  429214:	and    BYTE PTR [edx],0x3f
  429217:	xor    ebp,esi
  429219:	push   cs
  42921a:	das    
  42921b:	mov    dh,BYTE PTR [esi+esi*4-0x1c4af4bb]
  429222:	mov    ch,bl
  429224:	ss push edx
  429226:	rol    BYTE PTR [eax+0x51045b10],1
  42922c:	or     ecx,DWORD PTR [esi]
  42922e:	aas    
  42922f:	jb     0x4291da
  429231:	cmp    ecx,ecx
  429233:	sti    
  429234:	in     eax,0x4e
  429236:	xchg   esp,eax
  429237:	or     al,0xb5
  429239:	mov    dh,0x83
  42923b:	mov    edi,0xff2c3ab2
  429240:	jp     0x4291f8
  429242:	nop
  429243:	inc    edx
  429244:	jno    0x42922c
  429246:	daa    
  429247:	cmp    ch,al
  429249:	mov    dh,0xff
  42924b:	xor    BYTE PTR [ebp-0x5b],0x88
  42924f:	aam    0xb5
  429251:	mov    dh,0xff
  429253:	xchg   eax,edi
  429255:	mov    ch,0x90
  429257:	inc    edx
  429258:	or     eax,0x41429106
  42925d:	data16 sub al,0x98
	...
  429274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429275:	mov    dh,0xff
  429277:	xor    ch,0xb4
  42927a:	mov    BYTE PTR [ecx-0x7700494b],bl
  429280:	jo     0x429288
  429282:	mov    eax,DWORD PTR [edx+0x1]
  429285:	aaa    
  429286:	inc    esp
  429287:	call   DWORD PTR [ebx]
  429289:	in     eax,0x3e
  42928b:	and    ch,0xfc
  42928e:	mov    BYTE PTR [edi-0x7995704e],bh
  429294:	cli    
  429295:	stos   DWORD PTR es:[edi],eax
  429296:	jmp    0x91514d50
  42929b:	add    ebp,eax
  42929d:	or     ebp,edx
  42929f:	mov    edx,0x402d1a6b
  4292a4:	push   0xffffffb7
  4292a6:	and    DWORD PTR ds:0x436c8fb5,edx
  4292ac:	inc    edi
  4292ad:	cmp    ebp,DWORD PTR [edx-0x48]
  4292b0:	repnz mov dh,0xd3
  4292b3:	das    
  4292b4:	mov    eax,0x375b6eab
  4292b9:	(bad)  
  4292ba:	fst    st(2)
  4292bc:	cmp    eax,0xa58e392d
  4292c1:	call   0x8ff7a6af
  4292c6:	(bad)  
  4292c7:	cmp    edi,DWORD PTR [edi]
  4292c9:	pop    ebp
  4292ca:	xor    esp,edx
  4292cc:	mov    ecx,0xe8d32251
  4292d1:	sbb    al,0xad
  4292d3:	aas    
  4292d4:	jmp    0x0:0x1447b7
	...
  4292eb:	add    BYTE PTR [ebp-0x18bc9371],dh
  4292f1:	jb     0x4292d9
  4292f3:	mov    eax,0x3b84776a
  4292f8:	mov    ds:0xb6c10154,eax
  4292fd:	adc    al,0xf3
  4292ff:	mov    bh,0x66
  429301:	ja     0x4292f9
  429303:	cmc    
  429304:	add    bl,BYTE PTR [ecx]
  429306:	pop    ebp
  429307:	cmp    BYTE PTR [edi],dh
  429309:	rcl    BYTE PTR [edi+ecx*1-0x75],1
  42930d:	shl    BYTE PTR ds:[edi+0x420cb7b2],cl
  429314:	and    DWORD PTR [ebx+0x3ea9c771],ebp
  42931a:	sar    ebx,1
  42931c:	push   ds
  42931d:	stos   BYTE PTR es:[edi],al
  42931e:	add    BYTE PTR [esi+0x19fc4e3a],dh
  429324:	shl    DWORD PTR [esi+0x11],1
  429327:	jmp    0xeec0a2e2
  42932c:	mov    dh,0x1e
  42932e:	adc    DWORD PTR [edx+esi*8-0x5a],esp
  429332:	push   eax
  429333:	sbb    DWORD PTR [ebp-0x65],0xeb33e900
  42933a:	or     esp,DWORD PTR [ebp-0x7]
  42933d:	stos   DWORD PTR es:[edi],eax
  42933e:	sti    
  42933f:	jbe    0x429371
  429341:	es cld 
  429343:	jmp    0xacd02552
  429348:	jp     0x4293a4
  42934a:	call   0xd2575c
  42934f:	arpl   WORD PTR [eax],ax
	...
  429361:	add    BYTE PTR [eax],al
  429363:	add    BYTE PTR [edx-0x65],dh
  429366:	out    0xf8,eax
  429368:	cmp    DWORD PTR ds:0x9162e9fc,esp
  42936e:	lea    esp,[edx+edx*8-0x5a2e17a6]
  429375:	pop    DWORD PTR [eax]
  429377:	sti    
  429378:	test   BYTE PTR [ebx+0x5a],0xc2
  42937c:	out    dx,eax
  42937d:	ror    BYTE PTR [eax],1
  42937f:	jmp    0x6b2fab0f
  429384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429385:	xchg   esi,eax
  429386:	dec    edi
  429387:	mov    bh,0x7d
  429389:	pop    edi
  42938a:	sti    
  42938b:	sahf   
  42938c:	jge    0x4293c6
  42938e:	call   DWORD PTR [ebp-0x16976ce0]
  429394:	mov    dh,0x8f
  429396:	sub    dh,0xb
  429399:	xchg   esi,eax
  42939a:	xchg   ecx,eax
  42939c:	das    
  42939d:	and    eax,0xa67370f8
  4293a2:	sti    
  4293a3:	cld    
  4293a4:	add    BYTE PTR es:[eax-0x17],0x2f
  4293a9:	dec    ebp
  4293aa:	hlt    
  4293ab:	add    BYTE PTR [edi+0xf74fc66],cl
  4293b1:	mov    esi,0xbe484586
  4293b6:	jecxz  0x4293fa
  4293b8:	jmp    0x4cc6944a
  4293bd:	loope  0x429400
  4293bf:	dec    ecx
  4293c1:	addr16 cld 
  4293c3:	adc    eax,0x40841c
	...
  4293dc:	add    eax,0xe574f7e9
  4293e1:	dec    esi
  4293e2:	outs   dx,BYTE PTR ds:[esi]
  4293e3:	cld    
  4293e4:	push   ebx
  4293e5:	sbb    eax,0x33939c12
  4293eb:	jge    0x429431
  4293ed:	loop   0x4293f1
  4293ef:	(bad)  
  4293f0:	fldenv [ebp-0x4]
  4293f3:	adc    eax,0x4082dc
  4293f8:	(bad)
  4293fb:	je     0x429380
  4293fd:	adc    al,0x77
  4293ff:	hlt    
  429400:	repz loopne 0x429405
  429403:	dec    DWORD PTR [ecx+0x61]
  429406:	cld    
  429407:	adc    eax,0x4082dc
  42940c:	jle    0x42945b
  42940e:	pop    esp
  42940f:	pop    esi
  429410:	ja     0x429468
  429412:	ror    DWORD PTR [eax],0x5c
  429415:	sbb    al,0x41
  429417:	and    bh,dl
  429419:	mov    eax,ds:0x8d0c12d3
  42941e:	add    DWORD PTR [ebp+0x60],0xffffffa6
  429422:	jbe    0x429420
  429424:	enter  0xfd91,0x75
  429428:	inc    eax
  429429:	imul   edx,ebp,0x5598c9ff
  42942f:	push   edi
  429430:	out    0x97,al
  429432:	std    
  429433:	jne    0x429449
  429435:	imul   ecx,DWORD PTR [esi],0xbfa4b5dc
  42943b:	jmp    FWORD PTR ds:0x384074
	...
  429451:	add    BYTE PTR [eax],al
  429453:	add    dl,dh
  429455:	push   0x6c
  429457:	cld    
  429458:	xchg   BYTE PTR [esi-0x517f032c],dl
  42945e:	daa    
  42945f:	sub    al,0x0
  429461:	cli    
  429462:	cmp    edi,esp
  429464:	xor    dl,0x86
  429467:	xlat   BYTE PTR ds:[ebx]
  429468:	repnz loopne 0x4293f2
  42946b:	xor    dh,ch
  42946d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42946e:	mov    edi,0x3c9b9dff
  429473:	jae    0x429425
  429475:	adc    DWORD PTR [edx-0x1ff2d09],edi
  42947b:	jp     0x42943e
  42947d:	stos   BYTE PTR es:[edi],al
  42947e:	push   es
  42947f:	add    DWORD PTR [eax+0x22],0x31b0733b
  429486:	mov    ecx,0x8660b2f3
  42948b:	rcr    BYTE PTR [esi+0x2e54d22b],0x47
  429492:	cmp    edx,DWORD PTR [edx]
  429494:	adc    eax,ecx
  429496:	mov    edi,0x274e3fff
  42949b:	xor    esi,eax
  42949d:	jbe    0x429463
  42949f:	rcl    BYTE PTR [ebp-0x338cbccd],1
  4294a5:	sbb    BYTE PTR [ebx],cl
  4294a7:	mov    esi,0x11c23b7c
  4294ac:	shl    DWORD PTR ds:0x11053e45,cl
  4294b2:	lea    eax,[edi]
  4294b4:	pop    edx
  4294b5:	retf   
  4294b6:	lahf   
  4294b7:	push   cs
	...
  4294cc:	cmc    
  4294cd:	mov    dh,0x7e
  4294cf:	div    DWORD PTR [esi+0x3d80e42a]
  4294d5:	mov    dl,0xb3
  4294d7:	sbb    esi,DWORD PTR [esi]
  4294d9:	(bad)  
  4294da:	loope  0x4294dd
  4294dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4294dd:	xchg   edx,eax
  4294de:	and    esi,eax
  4294e0:	mov    edx,0x783df72a
  4294e5:	jg     0x429546
  4294e7:	int    0xaa
  4294e9:	xadd   DWORD PTR [ecx],ebx
  4294ec:	xchg   ecx,eax
  4294ed:	int3   
  4294ee:	test   DWORD PTR [ebx+0x69],0xb507a749
  4294f5:	adc    al,0x26
  4294f7:	call   0x1276afaa
  4294fc:	cmp    dl,BYTE PTR [edi-0x1b]
  4294ff:	nop
  429500:	js     0x42948d
  429502:	(bad)  
  429503:	xor    eax,0x8e14ef9
  429508:	mov    ch,0x8f
  42950a:	jmp    0xe4649609
  42950f:	mov    WORD PTR [edx-0x7d],ds
  429512:	jle    0x4294fa
  429514:	cmp    edx,DWORD PTR [edi-0x23]
  429517:	mov    dh,BYTE PTR [ebx-0x69]
  42951a:	push   ss
  42951b:	push   edx
  42951c:	in     eax,dx
  42951d:	aad    0xd5
  42951f:	adc    al,0x13
  429521:	imul   ebx,DWORD PTR [eax],0xc351b9b9
  429527:	cld    
  429528:	or     edx,DWORD PTR [edx-0x2ecbf743]
  42952e:	out    0x2a,eax
	...
  429544:	cdq    
  429545:	sbb    DWORD PTR [edx-0x2aaf87ed],ebx
  42954b:	add    al,0xb5
  42954d:	(bad)
  429551:	mov    edx,0xb43dd858
  429556:	data16 daa 
  429558:	push   0x11
  42955a:	dec    BYTE PTR [esi]
  42955c:	mov    bh,0x8f
  42955e:	jmp    0x755d7e35
  429563:	sysenter 
  429565:	es add ch,dl
  429568:	mov    dh,0x3c
  42956a:	mov    DWORD PTR [ebp+0x60759b52],ebx
  429570:	cmp    al,0x4d
  429572:	and    BYTE PTR [ecx+esi*4],bl
  429575:	(bad)  
  429576:	mov    al,ds:0x3d3469e9
  42957b:	jmp    0x3b432537
  429580:	popa   
  429581:	sbb    bl,BYTE PTR [ebx+0xd]
  429584:	in     al,0xa3
  429586:	adc    eax,0x4fa489
  42958b:	sbb    bh,BYTE PTR [eax-0x4e8df7df]
  429591:	sbb    DWORD PTR [ebp-0x3b],eax
  429594:	into   
  429595:	aas    
  429596:	call   0xfbe70bbe
  42959b:	fs jno 0x4295c0
  42959e:	inc    esi
  42959f:	jb     0x429521
  4295a1:	scas   al,BYTE PTR es:[edi]
  4295a2:	jb     0x429600
  4295a4:	mov    BYTE PTR [ebx+0x717f],ah
	...
  4295ba:	add    BYTE PTR [eax],al
  4295bc:	mov    edx,0x41de1a22
  4295c1:	dec    ebx
  4295c2:	or     BYTE PTR [edx-0xf],ch
  4295c5:	push   ds
  4295c6:	je     0x4295ac
  4295c8:	xor    eax,0xc6dc589e
  4295cd:	sbb    al,BYTE PTR [ebp+0x5]
  4295d0:	sar    DWORD PTR [edi],0xfb
  4295d3:	mov    ebp,0x4de8969a
  4295d8:	cmc    
  4295d9:	mov    ds:0x1aa942fb,eax
  4295de:	inc    ebp
  4295df:	add    eax,0x9dfb3fa1
  4295e4:	pop    edx
  4295e5:	xchg   esi,eax
  4295e6:	xchg   DWORD PTR [edi],esp
  4295e8:	cdq    
  4295e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4295ea:	std    
  4295eb:	push   ss
  4295ec:	mov    al,ds:0xaa95c112
  4295f1:	inc    eax
  4295f2:	lea    eax,[eax]
  4295f4:	and    BYTE PTR [esi+0x7a2c500f],ch
  4295fa:	loop   0x429644
  4295fc:	dec    ebx
  4295fd:	arpl   WORD PTR [esi+ebx*2+0x7c],bx
  429601:	xchg   edx,eax
  429602:	pop    ecx
  429603:	mov    eax,DWORD PTR [ecx]
  429605:	(bad)
  429608:	sbb    al,0x17
  42960a:	inc    eax
  42960b:	and    al,0x10
  42960d:	mov    esp,0x15058b54
  429612:	jne    0x429618
  429614:	xchg   DWORD PTR [edi+eax*4+0x45179d14],edx
  42961b:	or     BYTE PTR [ecx+0x3b7b8e],bl
	...
  429631:	add    BYTE PTR [eax],al
  429633:	add    BYTE PTR ds:0xa68d08e0,bl
  429639:	xchg   edi,eax
  42963a:	dec    esi
  42963b:	call   0x400e87
  429640:	aaa    
  429641:	nop
  429642:	rcl    BYTE PTR cs:[eax+0x52],0x6f
  429647:	(bad)  
  429649:	rol    DWORD PTR [ebx],cl
  42964b:	mov    edx,DWORD PTR [ebx-0x311f446d]
  429651:	shl    ebx,0x16
  429654:	xor    eax,0x7a5ffc64
  429659:	dec    edi
  42965a:	(bad)  
  42965b:	jmp    DWORD PTR [edi]
  42965d:	int    0x1f
  42965f:	add    al,0xc7
  429661:	rol    BYTE PTR [ebx],1
  429663:	jae    0x429602
  429665:	mov    ebx,0x52844182
  42966a:	fild   DWORD PTR [edx]
  42966c:	sub    al,0x16
  42966e:	imul   eax,DWORD PTR [esp+esi*8],0x68
  429672:	jecxz  0x429672
  429674:	retf   
  429675:	ret    0x4c1
  429678:	pop    esp
  429679:	mov    ebx,0xdacbf188
  42967e:	jmp    edi
  429680:	mov    ch,0x14
  429682:	daa    
  429683:	std    
  429684:	pop    edx
  429685:	cmp    ah,BYTE PTR [ebp-0x5ac64afd]
  42968b:	pop    es
  42968c:	mov    ch,0x4
  42968e:	inc    ecx
  42968f:	mov    cl,ch
  429691:	rol    BYTE PTR [ebx],cl
  429693:	push   esi
  429694:	into   
  429695:	mov    BYTE PTR [edi+0x54],bl
	...
  4296ab:	add    BYTE PTR [esi],bh
  4296ad:	mov    al,0x8b
  4296af:	inc    esp
  4296b0:	mov    ebp,0x305f4441
  4296b5:	inc    esi
  4296b6:	add    BYTE PTR [ecx+0x54b9ab],cl
  4296bc:	hlt    
  4296bd:	xchg   ecx,eax
  4296be:	push   ebp
  4296bf:	jno    0x42967f
  4296c1:	xor    ecx,edx
  4296c3:	pop    edi
  4296c4:	addr16 into 
  4296c6:	scas   al,BYTE PTR es:[edi]
  4296c7:	jmp    0x16e8cc7
  4296cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296cd:	test   BYTE PTR [eax+0x36b561bf],0x4c
  4296d4:	lods   eax,DWORD PTR ds:[esi]
  4296d5:	xor    DWORD PTR [edi-0x5aeab1f9],esi
  4296db:	push   esp
  4296dc:	fst    QWORD PTR [edi+0x2c]
  4296df:	std    
  4296e0:	retf   0xd685
  4296e3:	sar    DWORD PTR [ecx-0x6ebc754a],0xaa
  4296ea:	cli    
  4296eb:	ds mov ebp,0xf48714c9
  4296f1:	sahf   
  4296f2:	stos   BYTE PTR es:[edi],al
  4296f3:	mov    edi,0x8acfe515
  4296f8:	and    al,0xab
  4296fa:	daa    
  4296fb:	sbb    BYTE PTR [ebp+0x775d374c],0xaa
  429702:	call   DWORD PTR [edx+0x2e]
  429705:	dec    edx
  429706:	sub    ebx,0xffffffa5
  429709:	inc    ebx
  42970a:	shr    edi,0x5
  42970d:	nop
  42970e:	and    dl,BYTE PTR [ecx]
	...
  429724:	stc    
  429725:	sub    DWORD PTR [ecx+0x194a2e03],0xe99152d4
  42972f:	add    esi,DWORD PTR [ebp+0x3dd126d6]
  429735:	mov    bl,0x98
  429737:	aam    0x2f
  429739:	dec    edx
  42973a:	icebp  
  42973b:	sar    DWORD PTR [ecx],cl
  42973d:	sbb    ah,cl
  42973f:	cmp    al,bh
  429741:	aaa    
  429742:	clc    
  429743:	ret    
  429744:	sub    bl,BYTE PTR [ecx]
  429746:	and    eax,0xd5522d3c
  42974b:	lods   eax,DWORD PTR ds:[esi]
  42974c:	sbb    cl,BYTE PTR [ebx+0x795383e9]
  429752:	push   ecx
  429753:	test   BYTE PTR [eax],ah
  429755:	pop    es
  429756:	jmp    0xf8a6:0x236df384
  42975d:	cmp    eax,0x16182c19
  429762:	jmp    0xe613896a
  429767:	add    eax,DWORD PTR [esi+0x778e8618]
  42976d:	xchg   edi,eax
  42976e:	data16 daa 
  429770:	mov    esi,0x5cd31b40
  429775:	xchg   edi,eax
  429776:	ins    BYTE PTR es:[edi],dx
  429777:	mov    al,0xbe
  429779:	inc    edi
  42977a:	add    DWORD PTR [ebx+esi*8],0xb1f66aa4
  429781:	sub    dh,BYTE PTR [bx+si+0x6915]
  429786:	fdiv   QWORD PTR [edi]
	...
  42979c:	and    BYTE PTR [edi+0x5e],al
  42979f:	shl    BYTE PTR [edx+0x788e235],0xa8
  4297a6:	sahf   
  4297a7:	sub    edx,DWORD PTR [edx-0x42c5c433]
  4297ad:	retf   0xbc00
  4297b0:	jb     0x4297ca
  4297b2:	inc    esi
  4297b3:	loope  0x4297d5
  4297b5:	mov    cl,BYTE PTR [ebp-0x17b74164]
  4297bb:	aaa    
  4297bc:	cmc    
  4297bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4297be:	sti    
  4297bf:	shl    bh,cl
  4297c1:	sbb    eax,0xa7756236
  4297c6:	jmp    FWORD PTR ds:0x72be7829
  4297cc:	(bad)  
  4297ce:	mul    DWORD PTR [edx-0x7d]
  4297d1:	xchg   ebx,eax
  4297d2:	stos   DWORD PTR es:[edi],eax
  4297d3:	je     0x4297c3
  4297d5:	(bad)  
  4297d6:	jne    0x4297c9
  4297d8:	xor    ecx,DWORD PTR [ebp-0x2]
  4297db:	cmp    ah,bl
  4297dd:	sbb    eax,0x37aad60c
  4297e2:	adc    ch,BYTE PTR [ecx]
  4297e4:	mov    ecx,0x716c593a
  4297e9:	push   ds
  4297ea:	sbb    DWORD PTR [edi],edi
  4297ec:	add    dl,BYTE PTR [esi]
  4297ee:	js     0x4297d8
  4297f0:	leave  
  4297f1:	(bad)
  4297f5:	pop    ecx
  4297f6:	jge    0x42979d
  4297f8:	sub    al,0xca
  4297fa:	data16 mov al,ds:0x325a4401
	...
  429814:	outs   dx,BYTE PTR ds:[esi]
  429815:	ror    BYTE PTR [eax],1
  429817:	jmp    0xf64571d9
  42981c:	inc    esp
  42981d:	push   esp
  42981e:	add    DWORD PTR [eax-0x58007567],ebp
  429824:	mov    BYTE PTR [edi-0x5c13fcad],dh
  42982a:	jb     0x429829
  42982c:	in     eax,dx
  42982d:	jge    0x4297ff
  42982f:	sti    
  429830:	jbe    0x4297d4
  429832:	xchg   BYTE PTR [edi-0x1e46e73a],ch
  429838:	mov    bh,0x8f
  42983a:	add    BYTE PTR [eax],al
  42983c:	pop    es
  42983d:	fcomp  DWORD PTR [edi]
  42983f:	or     BYTE PTR ds:0x8c010814,al
  429845:	mov    cs,WORD PTR [ecx-0x770f73ba]
  42984b:	dec    esp
  42984c:	js     0x4297d8
  42984e:	sbb    DWORD PTR [eax+0x8d64],0xffffffd7
  429855:	int    0xb
  429857:	data16 aad 0x13
  42985a:	or     al,0x1
  42985c:	pop    esp
  42985d:	mov    ?,ebp
  42985f:	jbe    0x4298c9
  429861:	addr16 push cs
  429863:	sub    BYTE PTR [ebp-0x32],bl
  429866:	sti    
  429867:	push   esi
  429868:	and    edx,DWORD PTR [ecx-0x7423eb14]
  42986e:	jg     0x429830
  429870:	mov    BYTE PTR [ebp-0x41b3ccaf],al
  429876:	arpl   WORD PTR ds:0x0,dx
	...
  42988c:	push   ds
  42988d:	mov    es,WORD PTR [eax]
  42988f:	push   edi
  429890:	mov    ah,0xcf
  429892:	pop    ds
  429893:	and    al,cl
  429895:	xchg   ebx,eax
  429896:	std    
  429897:	adc    eax,0x409298
  42989c:	test   DWORD PTR [edi-0x6db7ea03],0x4f670040
  4298a6:	pop    esp
  4298a7:	ret    0x8dd0
  4298aa:	dec    edi
  4298ab:	mov    edx,DWORD PTR [eax+0xb]
  4298ae:	call   0x550047cf
  4298b3:	mov    edi,DWORD PTR [esi]
  4298b5:	hlt    
  4298b6:	cld    
  4298b7:	(bad)  
  4298b8:	mov    edx,0x17d88991
  4298bd:	data16 cld 
  4298bf:	adc    eax,0x407aec
  4298c4:	daa    
  4298c5:	iret   
  4298c6:	or     ecx,DWORD PTR [ebx-0xf8d14b]
  4298cc:	xchg   edx,eax
  4298cd:	mov    bh,0x8
  4298cf:	mov    ch,0x35
  4298d1:	(bad)  
  4298d2:	(bad)  
  4298d3:	push   DWORD PTR [ebp+0x2c13b161]
  4298d9:	in     al,dx
  4298da:	xor    eax,DWORD PTR [esi+0x12385ef8]
  4298e0:	popf   
  4298e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298e2:	mov    edi,0x27ec31ff
  4298e7:	dec    edi
  4298e8:	pop    edx
  4298e9:	add    al,0x34
  4298eb:	cld    
  4298ec:	test   al,0x86
  4298ee:	adc    al,0x40
	...
  429904:	mov    ch,0x33
  429906:	aas    
  429907:	or     al,0x39
  429909:	jno    0x42990a
  42990b:	push   DWORD PTR [ebp+0x2d7a8510]
  429911:	mov    ch,0xaa
  429913:	sbb    bh,BYTE PTR [esi]
  429915:	inc    ecx
  429916:	adc    al,0x29
  429918:	arpl   WORD PTR [edi-0x724afffc],si
  42991e:	xchg   edx,eax
  42991f:	add    esi,DWORD PTR [esi+esi*4-0x41760101]
  429926:	add    eax,0xb8b8115b
  42992b:	out    dx,eax
  42992c:	mov    ah,0x7b
  42992e:	xor    al,ch
  429930:	add    ecx,0x6a
  429933:	inc    edx
  429934:	in     eax,dx
  429935:	xor    eax,0xa2620a3c
  42993a:	stos   DWORD PTR es:[edi],eax
  42993b:	adc    ch,BYTE PTR [ebp+0x6e]
  42993e:	mov    al,0xe
  429940:	jge    0x4299b0
  429942:	mov    al,0x1f
  429944:	ss (bad) 
  429946:	cli    
  429947:	jae    0x4298e4
  429949:	pop    esi
  42994a:	mov    al,0x18
  42994c:	ins    DWORD PTR es:[edi],dx
  42994d:	mov    ds:0x2fdee8ef,eax
  429952:	mov    ecx,0xb8f9ee7
  429957:	sbb    DWORD PTR [edx-0x12ea2a6f],0x1b
  42995e:	sti    
  42995f:	retf   
  429960:	push   es
  429961:	xchg   ebp,eax
  429962:	mov    eax,ds:0xa516adb0
  429967:	das    
	...
  42997c:	cmp    esp,DWORD PTR [edx]
  42997e:	cmp    DWORD PTR [ebx],ebp
  429980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429981:	push   ss
  429982:	xchg   ebp,eax
  429983:	das    
  429984:	cmp    esp,DWORD PTR [edx]
  429986:	inc    ecx
  429987:	sub    edi,DWORD PTR [ebp+0x4d2fc516]
  42998d:	mov    DWORD PTR [eax-0x47],esi
  429990:	dec    edx
  429991:	push   ss
  429992:	mov    ch,0x27
  429994:	aas    
  429995:	dec    edx
  429996:	add    esp,edx
  429998:	dec    ecx
  429999:	jp     0x429988
  42999b:	adc    ch,dh
  42999d:	(bad)  
  42999e:	fs inc esp
  4299a0:	(bad)  
  4299a1:	push   ecx
  4299a2:	jg     0x4299d7
  4299a4:	xor    DWORD PTR [edx],ebx
  4299a6:	in     eax,dx
  4299a7:	ss (bad) 
  4299a9:	mov    ebx,0xf722c3fd
  4299ae:	jmp    0x5d924eb6
  4299b3:	sbb    al,0x9f
  4299b5:	lea    ebx,[eax+eax*8+0x12]
  4299b9:	aas    
  4299ba:	ret    0xfeb0
  4299bd:	lahf   
  4299be:	aam    0x37
  4299c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4299c1:	dec    edi
  4299c2:	jmp    0xaad1f69a
  4299c7:	adc    ch,ch
  4299c9:	jp     0x4299f4
  4299cb:	add    al,0x2c
  4299cd:	dec    edx
  4299ce:	xchg   ebp,eax
  4299cf:	jmp    0x8f54:0x801b377
  4299d6:	jmp    0x798cd7ae
  4299db:	jmp    0x0:0x3719b777
	...
  4299f2:	add    BYTE PTR [eax],al
  4299f4:	inc    edi
  4299f5:	mov    bl,0x0
  4299f7:	jbe    0x429a5e
  4299f9:	mov    bh,0x66
  4299fb:	jmp    0x673ebbe3
  429a00:	lds    esi,FWORD PTR [ebx+0x3cb6a914]
  429a06:	pop    edx
  429a07:	mov    dl,0x1
  429a09:	rcl    BYTE PTR [ebp+0x62],1
  429a0c:	ror    BYTE PTR [ebp-0x79],cl
  429a0f:	lods   al,BYTE PTR ds:[esi]
  429a10:	mov    edx,0xb6e9a16a
  429a15:	(bad)  
  429a16:	dec    edi
  429a17:	sahf   
  429a18:	and    cl,BYTE PTR [edx+0x66]
  429a1b:	jmp    0x685d:0x9dc16889
  429a22:	rcl    DWORD PTR [ebp-0x17a9959a],0xb6
  429a29:	(bad)  
  429a2a:	je     0x4299f5
  429a2c:	pop    edi
  429a2d:	fidiv  WORD PTR [edx+ebx*8+0x4f]
  429a31:	fimul  WORD PTR [ebx]
  429a33:	fs into 
  429a35:	sahf   
  429a36:	sti    
  429a37:	jmp    0xe13eec2f
  429a3c:	mov    ah,0x8f
  429a3e:	add    BYTE PTR [ebx],bl
  429a40:	jl     0x4299e9
  429a42:	sub    eax,0x29b5aa6
  429a47:	jmp    0x4299ff
  429a49:	(bad)  
  429a4a:	out    0xda,eax
  429a4c:	enter  0xfc51,0xea
  429a50:	mov    ah,0x8f
  429a52:	add    dl,dl
  429a54:	iret   
  429a55:	rol    DWORD PTR [ebp-0x4b],cl
	...
  429a6c:	pop    esi
  429a6d:	sahf   
  429a6e:	sti    
  429a6f:	jmp    0x2d062911
  429a74:	popf   
  429a75:	hlt    
  429a76:	add    cl,ch
  429a78:	mov    dh,0xa8
  429a7a:	add    ebp,DWORD PTR [esi-0x166064ee]
  429a80:	mov    dh,0x8f
  429a82:	scas   eax,DWORD PTR es:[edi]
  429a83:	add    ch,cl
  429a85:	arpl   WORD PTR [esi],cx
  429a87:	mov    ah,0xde
  429a89:	sar    bl,cl
  429a8b:	mov    ah,BYTE PTR [ecx+ecx*1]
  429a8e:	aas    
  429a8f:	or     BYTE PTR [ebp+0x1c],ah
  429a92:	add    DWORD PTR [si+0x6f92],ecx
  429a97:	dec    eax
  429a98:	daa    
  429a99:	push   ss
  429a9a:	add    DWORD PTR fs:[edx+edx*4-0x1297b2c7],ebx
  429aa2:	ss mov ecx,ebx
  429aa5:	test   al,0x8d
  429aa7:	lea    edx,fs:[edx+0x6ba58100]
  429aae:	add    BYTE PTR [eax],al
  429ab0:	pop    esp
  429ab1:	jmp    0x429ad9
  429ab3:	test   bh,dh
  429ab5:	out    dx,al
  429ab6:	push   es
  429ab7:	push   0xffffffb2
  429ab9:	ret    
  429aba:	cld    
  429abb:	adc    eax,0x407f94
  429ac0:	hlt    
  429ac1:	mov    esi,DWORD PTR [ecx+ebx*1-0x1]
  429ac5:	push   ecx
  429ac6:	add    BYTE PTR [esi+0x9124],0x95
  429acd:	sbb    eax,0x15f
	...
  429ae2:	add    BYTE PTR [eax],al
  429ae4:	sbb    al,0x92
  429ae6:	add    DWORD PTR [esi+0x9288],0xffffffa7
  429aed:	(bad)  
  429aef:	jmp    0x429af8
  429af1:	pop    es
  429af2:	aas    
  429af3:	or     BYTE PTR [edi-0x7576f82b],dl
  429af9:	jmp    0x64be:0x90cfffa
  429b00:	fst    QWORD PTR [ecx-0x9ad7700]
  429b06:	cli    
  429b07:	dec    esp
  429b09:	push   es
  429b0a:	aas    
  429b0b:	or     al,0x9b
  429b0d:	mov    eax,0xb0b5c2c2
  429b12:	call   DWORD PTR [edx+0x3e]
  429b15:	sbb    al,0xce
  429b17:	push   eax
  429b18:	imul   edi,DWORD PTR [ebp-0x77],0x7a
  429b1c:	mov    eax,ds:0xb27e2f21
  429b21:	test   al,0x1
  429b23:	add    BYTE PTR [ebp-0x5d80f05e],dh
  429b29:	scas   al,BYTE PTR es:[edi]
  429b2a:	add    DWORD PTR [eax],eax
  429b2c:	mov    ch,0xc2
  429b2e:	pop    es
  429b2f:	jg     0x429ac3
  429b31:	stos   DWORD PTR es:[edi],eax
  429b32:	add    DWORD PTR [eax],eax
  429b34:	mov    ch,0xc3
  429b36:	retf   
  429b37:	imul   esi,DWORD PTR [edi+0x7a07aa55],0xf51357c4
  429b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b42:	mov    bh,dl
  429b44:	scas   al,BYTE PTR es:[edi]
  429b45:	dec    esp
  429b46:	scas   eax,DWORD PTR es:[edi]
  429b47:	inc    BYTE PTR [eax]
	...
  429b59:	add    BYTE PTR [eax],al
  429b5b:	add    BYTE PTR [edx-0x59],ah
  429b5e:	stos   DWORD PTR es:[edi],eax
  429b5f:	cmp    al,0xaa
  429b61:	inc    ebp
  429b62:	ret    0x400f
  429b65:	in     al,dx
  429b66:	xor    ecx,DWORD PTR [edi-0x21]
  429b69:	adc    al,BYTE PTR ds:0x2017ab5
  429b6f:	mov    edi,0xbf08b755
  429b74:	test   ecx,edi
  429b76:	test   eax,0x7242a1e
  429b7b:	std    
  429b7c:	enter  0x18be,0x40
  429b80:	mov    ch,0x33
  429b82:	inc    esp
  429b83:	jae    0x429b2e
  429b85:	sub    DWORD PTR [ecx-0x7c424805],esi
  429b8b:	push   ss
  429b8c:	mov    ah,0xa6
  429b8e:	inc    DWORD PTR [eax+0xd08da78]
  429b94:	cmp    DWORD PTR [esi+0x2fb50004],esi
  429b9a:	mov    gs,WORD PTR [edi-0x4c]
  429b9d:	(bad)
  429ba1:	in     al,0x3c
  429ba3:	adc    al,0xc0
  429ba5:	in     al,0xaa
  429ba7:	jg     0x429b38
  429ba9:	inc    ebx
  429baa:	hlt    
  429bab:	ret    
  429bac:	ret    0x89cf
  429baf:	adc    al,0xac
  429bb1:	rcr    BYTE PTR [ecx],1
  429bb3:	xor    esp,DWORD PTR [edi]
  429bb5:	mov    BYTE PTR [eax-0x2f],ah
  429bb8:	scas   al,BYTE PTR es:[edi]
  429bb9:	sub    ecx,ecx
  429bbb:	xor    ah,BYTE PTR [edi]
  429bbd:	mov    BYTE PTR [edx+0x5b],ah
	...
  429bd4:	adc    BYTE PTR [ecx],dl
  429bd6:	fst    QWORD PTR [ebx]
  429bd8:	xchg   edx,eax
  429bd9:	and    eax,DWORD PTR [esi]
  429bdb:	sahf   
  429bdc:	mov    bl,BYTE PTR [esi+0x29]
  429bdf:	jg     0x429c51
  429be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429be2:	ja     0x429bba
  429be4:	jp     0x429b82
  429be6:	cmp    bh,BYTE PTR [ecx+0x447a8cce]
  429bec:	cli    
  429bed:	pushf  
  429bee:	mov    ah,0x17
  429bf0:	pusha  
  429bf1:	and    dh,cl
  429bf3:	sbb    edx,edi
  429bf5:	popf   
  429bf6:	sbb    dh,BYTE PTR [ebx]
  429bf8:	add    ah,BYTE PTR [edi-0x704afbb1]
  429bfe:	or     bh,BYTE PTR [ecx-0x4836356]
  429c04:	push   edx
  429c05:	inc    ebx
  429c06:	sti    
  429c07:	xor    dh,BYTE PTR [ecx]
  429c09:	push   es
  429c0a:	lods   eax,DWORD PTR ds:[esi]
  429c0b:	or     esi,DWORD PTR [eax+ebx*4]
  429c0e:	loope  0x429c12
  429c10:	xor    BYTE PTR [esi-0x18],bh
  429c13:	add    esi,DWORD PTR [ebp+0x1220658c]
  429c19:	pushf  
  429c1a:	jmp    0xdad3a9a5
  429c1f:	xchg   DWORD PTR [edi+ecx*4-0x17],eax
  429c23:	add    esi,DWORD PTR [eax+ebx*4]
  429c26:	out    0xb7,al
  429c28:	imul   edx,DWORD PTR [eax],0x23bdb201
  429c2e:	push   ebp
  429c2f:	pop    esp
  429c30:	and    edx,DWORD PTR [esi+0x22b1a07f]
  429c36:	inc    esp
  429c37:	fadd   QWORD PTR [eax]
	...
  429c49:	add    BYTE PTR [eax],al
  429c4b:	add    BYTE PTR [ecx-0x64],bl
  429c4e:	sti    
  429c4f:	jmp    0x4b801956
  429c54:	mov    dh,0x8f
  429c56:	add    ch,bh
  429c58:	mov    esp,0xb6e99f58
  429c5d:	(bad)  
  429c5e:	je     0x429c26
  429c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c61:	sti    
  429c62:	add    cl,ch
  429c64:	mov    dh,0x23
  429c66:	sub    BYTE PTR [esp+ecx*1],ah
  429c69:	fwait
  429c6a:	sti    
  429c6b:	jmp    0xb72bcbbd
  429c70:	mov    cl,0x8f
  429c72:	add    BYTE PTR [edx+0x65],ah
  429c75:	xchg   ebx,eax
  429c76:	callw  0x3792
  429c7a:	imul   ebp,ecx,0xe9159c8b
  429c80:	int    0x4f
  429c82:	add    BYTE PTR [ecx+0x26fc41be],bl
  429c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c89:	pop    es
  429c8a:	inc    esi
  429c8b:	add    edx,edx
  429c8d:	xor    eax,0x7b0d16fc
  429c92:	dec    edi
  429c93:	add    ch,bh
  429c95:	fwait
  429c96:	sti    
  429c97:	push   es
  429c98:	inc    ebp
  429c99:	cli    
  429c9a:	add    cl,ch
  429c9c:	mov    dh,0x1e
  429c9e:	or     DWORD PTR [ebx-0x1104da4a],eax
  429ca4:	pop    ebp
  429ca5:	xchg   ebx,eax
  429ca6:	out    0xc,eax
  429ca8:	or     bh,bl
  429caa:	add    cl,ch
  429cac:	mov    dh,0x1e
  429cae:	pop    ds
  429caf:	inc    ebx
	...
  429cc4:	mov    cl,0x25
  429cc6:	cli    
  429cc7:	ret    0x55d7
  429cca:	lahf   
  429ccb:	add    BYTE PTR [edi+ecx*4],cl
  429cce:	add    BYTE PTR [ebp+0x11],dh
  429cd1:	daa    
  429cd2:	pop    ebx
  429cd3:	lock fmul QWORD PTR [esi-0x6f538a03]
  429cda:	mov    ch,0xc0
  429cdc:	pushf  
  429cdd:	sti    
  429cde:	adc    DWORD PTR [ecx],eax
  429ce0:	fmul   QWORD PTR [esi+0x5fd475fd]
  429ce6:	aam    0x5f
  429ce8:	xchg   edx,eax
  429ce9:	int3   
  429cea:	ret    0xd0c2
  429ced:	mov    ?,WORD PTR [edi]
  429cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429cf0:	pushf  
  429cf1:	mov    es,WORD PTR [eax]
  429cf3:	nop/reserved BYTE PTR [esi-0x5]
  429cf7:	dec    DWORD PTR [ecx+ebp*4-0x7173ff66]
  429cfe:	jmp    0xfb774e84
  429d03:	call   FWORD PTR [edx+eiz*8-0x6cc6c26a]
  429d0a:	add    BYTE PTR [eax],al
  429d0c:	adc    DWORD PTR [edx],0xffffffcf
  429d0f:	add    BYTE PTR [esi+ecx*4+0x37],bl
  429d13:	mov    eax,ds:0x75008e5c
  429d18:	ret    0x561c
  429d1b:	or     BYTE PTR [esi-0x73],al
  429d1e:	std    
  429d1f:	jne    0x429d6d
  429d21:	cld    
  429d22:	sti    
  429d23:	push   edx
  429d24:	mov    ds:0x150082,eax
	...
  429d39:	add    BYTE PTR [eax],al
  429d3b:	add    BYTE PTR [esi+ecx*4],cl
  429d3e:	push   eax
  429d3f:	call   0x3f09cf
  429d44:	(bad)  
  429d45:	and    dh,BYTE PTR [esi]
  429d47:	mov    ds:0xf008e1c,al
  429d4c:	cdq    
  429d4d:	mov    al,ds:0x1b13fffc
  429d52:	ds or  al,0xeb
  429d55:	int    0x1f
  429d57:	add    BYTE PTR [ebp-0x76fffa58],dh
  429d5d:	sub    ah,BYTE PTR [edi+0x1f]
  429d60:	add    eax,0x3be8ffa8
  429d65:	and    eax,0xa261062c
  429d6a:	add    BYTE PTR [esi-0x3cf1694],cl
  429d70:	ss in  eax,dx
  429d72:	push   cs
  429d73:	jle    0x429d7c
  429d75:	and    eax,0xa241132c
  429d7a:	test   al,bh
  429d7c:	test   al,0xb9
  429d7e:	xor    BYTE PTR ds:0x3a3110ba,0x57
  429d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d86:	(bad)  
  429d87:	(bad)  
  429d88:	mov    edx,0xa2fd042b
  429d8d:	sub    ah,BYTE PTR [edi+0x7f]
  429d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d92:	jmp    esi
  429d94:	out    0x39,al
  429d96:	xor    ah,bh
  429d98:	enter  0x4,0x0
  429d9c:	mov    ch,0xb9
  429d9e:	sub    ch,0x0
	...
  429db1:	add    BYTE PTR [eax],al
  429db3:	add    BYTE PTR [ebx+0x52],bh
  429db6:	xor    dh,ah
  429db8:	mov    bl,0x59
  429dba:	xor    ah,bh
  429dbc:	sub    al,0x62
  429dbe:	xor    bh,bh
  429dc0:	bound  ebp,QWORD PTR [ebp+eiz*2-0x4d58a501]
  429dc7:	es ds hlt 
  429dca:	sti    
  429dcb:	mov    ch,dh
  429dcd:	retf   0xff56
  429dd0:	inc    edx
  429dd1:	test   al,0xff
  429dd3:	or     al,0x31
  429dd5:	fidiv  DWORD PTR [eax]
  429dd7:	cld    
  429dd8:	xor    dl,ah
  429dda:	(bad)  
  429ddb:	push   DWORD PTR [ebp-0x4128c759]
  429de1:	data16 loop 0x429dd3
  429de4:	mov    ch,0x8f
  429de6:	jmp    0xd9a253ee
  429deb:	add    al,0xb5
  429ded:	mov    BYTE PTR [edx+0xc8b0d44],bl
  429df3:	imul   edi,edx,0x37fee998
  429df9:	test   BYTE PTR [edx-0x56fb16d1],bh
  429dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e00:	aaa    
  429e01:	rcr    dl,1
  429e03:	xchg   DWORD PTR [ebx+0x582fa298],esi
  429e09:	push   esp
  429e0a:	test   al,0xff
  429e0c:	aaa    
  429e0d:	test   eax,0x98c12f93
  429e12:	adc    al,0xe4
  429e14:	mov    ecx,0x99f122
	...
  429e29:	add    BYTE PTR [eax],al
  429e2b:	add    BYTE PTR ds:0xa92e8ba7,ch
  429e31:	cwde   
  429e32:	sbb    al,0x7b
  429e34:	mov    cs,WORD PTR [esi+edi*2]
  429e37:	rol    BYTE PTR ds:0x3d346e42,1
  429e3d:	push   ecx
  429e3e:	stc    
  429e3f:	(bad)  
  429e40:	lds    ebx,FWORD PTR [eax+0x3186b160]
  429e46:	adc    BYTE PTR [edx+ebp*4-0x72],ch
  429e4a:	jmp    0x33a88752
  429e4f:	leave  
  429e50:	mov    dl,0x8e
  429e52:	mov    ebp,0xd9522c14
  429e57:	jp     0x429e48
  429e59:	mov    ebp,DWORD PTR [esi+0x56]
  429e5c:	pop    edx
  429e5d:	dec    esp
  429e5e:	push   ds
  429e5f:	das    
  429e60:	dec    ecx
  429e61:	or     al,0x8d
  429e63:	sti    
  429e64:	inc    eax
  429e65:	mov    eax,ds:0x23b6fba4
  429e6a:	rcr    BYTE PTR [ecx-0xd6dbecd],cl
  429e70:	or     eax,0xcf3600a7
  429e75:	fwait
  429e76:	sti    
  429e77:	add    dl,BYTE PTR [edi]
  429e79:	pop    es
  429e7a:	xor    ecx,0x70008fb9
  429e80:	std    
  429e81:	fwait
  429e82:	aaa    
  429e83:	scas   al,BYTE PTR es:[edi]
  429e84:	cmp    eax,0xcd4c898d
  429e89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e8a:	adc    BYTE PTR [esi],bl
  429e8c:	out    0xd7,eax
  429e8e:	xchg   DWORD PTR [edi+0x0],ebp
	...
  429ea4:	into   
  429ea5:	and    al,0x50
  429ea7:	jmp    0xa9f62962
  429eac:	pop    ecx
  429ead:	dec    ebp
  429eae:	in     al,0x72
  429eb0:	clc    
  429eb1:	xchg   DWORD PTR [edi+0x5e06b52c],eax
  429eb7:	loope  0x429efa
  429eb9:	adc    BYTE PTR [ecx],al
  429ebb:	call   0x2fca2e76
  429ec0:	leave  
  429ec1:	or     BYTE PTR [esi-0x27],cl
  429ec4:	sub    DWORD PTR [edi],ecx
  429ec6:	add    eax,0x378fb6e8
  429ecb:	mov    ds,WORD PTR [ebx-0x491484ed]
  429ed1:	(bad)
  429ed5:	pcmpgtd mm3,QWORD PTR [ecx-0x4c]
  429ed9:	sbb    eax,DWORD PTR [ebx+eax*8]
  429edc:	mov    cl,0xa8
  429ede:	add    bh,BYTE PTR [edi]
  429ee0:	not    DWORD PTR [edx-0x187c0c8c]
  429ee6:	add    DWORD PTR [edx-0x60],esp
  429ee9:	scas   al,BYTE PTR es:[edi]
  429eea:	and    ebx,DWORD PTR [ecx-0x3b76704a]
  429ef0:	mov    dl,0xf
  429ef2:	or     ax,0x2356
  429ef6:	add    al,0x83
  429ef8:	mov    ecx,0xf71702a8
  429efd:	push   esi
  429efe:	je     0x429f00
  429f00:	es mov esi,0x54a704ab
  429f06:	jecxz  0x429f13
	...
  429f1c:	cmp    al,0x93
  429f1e:	add    BYTE PTR [ecx+0x65807b29],cl
  429f24:	in     al,0x93
  429f26:	outs   dx,DWORD PTR ds:[esi]
  429f27:	add    al,0x66
  429f29:	xchg   edx,eax
  429f2a:	jmp    0xb938135
  429f2f:	je     0x429f47
  429f31:	mov    esp,0x556702ab
  429f36:	jecxz  0x429f27
  429f38:	fwait
  429f39:	mov    eax,DWORD PTR [eax]
  429f3b:	mov    edx,DWORD PTR [edx-0x2f4f0285]
  429f41:	xchg   ecx,eax
  429f42:	add    BYTE PTR [eax],al
  429f44:	dec    ecx
  429f45:	mov    esi,0x8b6cfff3
  429f4a:	sti    
  429f4b:	dec    esp
  429f4d:	clc    
  429f4e:	pop    edi
  429f4f:	pop    ecx
  429f50:	xor    al,0xd1
  429f52:	ret    
  429f53:	add    BYTE PTR [edi+edx*1+0x63d18bf3],bl
  429f5a:	add    al,0x22
  429f5d:	sbb    esi,DWORD PTR [esi-0x4]
  429f60:	pcmpgtb mm0,QWORD PTR [edi+esi*2]
  429f64:	mov    al,0xf9
  429f66:	jmp    0x429fbf
  429f68:	jmp    0x429fe8
  429f6a:	aam    0x14
  429f6c:	dec    esp
  429f6d:	xchg   edx,eax
  429f6e:	mov    ds:0x40928c00,eax
  429f73:	je     0x429f35
  429f75:	sub    bh,bl
  429f77:	call   FWORD PTR [ebx+ecx*4+0x42afd089]
  429f7e:	cmp    cl,dl
	...
  429f94:	and    BYTE PTR [ebx-0x5d],bh
  429f97:	add    BYTE PTR [esi+ecx*4-0x80],bl
  429f9b:	jne    0x429fe9
  429f9d:	mov    ebx,0x7cb515fc
  429fa2:	adc    DWORD PTR [eax-0x4b],eax
  429fa5:	sub    eax,DWORD PTR [ebx+esi*2-0x48]
  429fa9:	pop    ds
  429faa:	ret    
  429fab:	sti    
  429fac:	ds nop
  429fae:	cmp    esp,0xffffffa9
  429fb1:	retf   
  429fb2:	aam    0xe7
  429fb4:	call   0x5e429fa9
  429fb9:	push   0x33ce20b8
  429fbe:	cmp    BYTE PTR [ebx-0x58],dh
  429fc1:	push   edx
  429fc2:	add    al,0x55
  429fc4:	cli    
  429fc5:	call   0xfe99:0xa87512ff
  429fcc:	pop    esp
  429fcd:	test   al,0xcf
  429fcf:	mov    BYTE PTR [edx],al
  429fd1:	ror    BYTE PTR [ebp+0x44e4daf6],1
  429fd7:	inc    edx
  429fd8:	int    0xa6
  429fda:	(bad)  
  429fdb:	push   DWORD PTR [ebp+0x6088c401]
  429fe1:	hlt    
  429fe2:	sbb    al,0x41
  429fe5:	ret    
  429fe6:	sar    ah,1
  429fe8:	enter  0x13fa,0x40
  429fec:	mov    ch,0x2b
  429fee:	aas    
  429fef:	jae    0x429fb2
  429ff1:	and    ebp,DWORD PTR [ebx+esi*2]
  429ff4:	scas   eax,DWORD PTR es:[edi]
  429ff5:	loope  0x42a043
  429ff7:	jae    0x429ff9
	...
  42a009:	add    BYTE PTR [eax],al
  42a00b:	add    BYTE PTR [ebx-0x4d1c3dcc],bh
  42a011:	mov    edx,0x3ae086fd
  42a016:	inc    esp
  42a017:	inc    edx
  42a018:	jge    0x429fc2
  42a01a:	(bad)  
  42a01b:	push   DWORD PTR [ebp-0x3c17d7df]
  42a021:	daa    
  42a022:	stos   BYTE PTR es:[edi],al
  42a023:	pop    es
  42a024:	mov    ah,0x26
  42a026:	(bad)  
  42a027:	jmp    ecx
  42a029:	mov    bl,0x99
  42a02b:	(bad)  
  42a02c:	fmul   QWORD PTR [edi+0x624a99e9]
  42a032:	ds sbb esi,ebx
  42a035:	xchg   esi,eax
  42a036:	adc    ch,BYTE PTR [edi+esi*1]
  42a039:	xchg   ebp,eax
  42a03a:	fiadd  DWORD PTR [edi+0x3e98e81]
  42a040:	ds dec ebx
  42a042:	push   ecx
  42a043:	ror    DWORD PTR [ecx-0x21a45334],cl
  42a049:	(bad)
  42a04d:	jnp    0x42a038
  42a04f:	pcmpeqw mm1,QWORD PTR [edi+0xbb14464]
  42a056:	sbb    eax,0xda8fb505
  42a05b:	jb     0x429fec
  42a05d:	jg     0x42a051
  42a05f:	jb     0x42a0d8
  42a061:	sub    DWORD PTR [eax-0x6e774dd9],0xffffff87
  42a068:	pop    edi
  42a069:	xchg   edi,eax
  42a06a:	call   0x917f3a1f
  42a06f:	jecxz  0x42a071
	...
  42a081:	add    BYTE PTR [eax],al
  42a083:	add    BYTE PTR [ebp-0x71],bh
  42a086:	jmp    0xed5e42e6
  42a08b:	jle    0x42a04a
  42a08d:	test   al,0xed
  42a08f:	jle    0x42a088
  42a091:	jg     0x42a061
  42a093:	shr    BYTE PTR [edx-0x7c],0x32
  42a097:	sub    al,0x2d
  42a099:	dec    edx
  42a09a:	in     eax,0xde
  42a09c:	not    ebx
  42a09e:	test   al,0x23
  42a0a0:	ret    0x9a84
  42a0a3:	inc    esp
  42a0a4:	mov    ebp,0x2c074e97
  42a0a9:	adc    ah,cl
  42a0ab:	xchg   bh,bh
  42a0ad:	lahf   
  42a0ae:	jmp    0x9a836162
  42a0b3:	fwait
  42a0b4:	dec    ebx
  42a0b5:	(bad)
  42a0b9:	mov    es,WORD PTR [eax]
  42a0bb:	jmp    0x42a073
  42a0bd:	(bad)  
  42a0be:	out    0xdb,eax
  42a0c0:	test   BYTE PTR [ecx+0x8],dl
  42a0c3:	in     eax,dx
  42a0c4:	sbb    bh,BYTE PTR [ecx+0x4f]
  42a0c7:	mov    dh,0x1e
  42a0c9:	out    dx,al
  42a0ca:	add    cl,ch
  42a0cc:	mov    dh,0x27
  42a0ce:	(bad)  
  42a0cf:	jmp    0x9de:0x7cfb8fb6
  42a0d6:	inc    esi
  42a0d7:	push   ecx
  42a0d8:	or     DWORD PTR [ebx-0x35640a8b],edx
  42a0de:	call   0xfbd684a6
  42a0e3:	push   0x5d
  42a0e5:	test   al,0x0
  42a0e7:	push   ebp
	...
  42a0fc:	(bad)  
  42a0fd:	ds push ebx
  42a0ff:	inc    ecx
  42a100:	xchg   esi,eax
  42a101:	xchg   esp,eax
  42a102:	sti    
  42a103:	jmp    0xe9412c56
  42a108:	mov    dh,0xa6
  42a10a:	push   cs
  42a10b:	mov    bh,0xf5
  42a10d:	mov    eax,DWORD PTR [eax+0x3d]
  42a110:	lods   al,BYTE PTR ds:[esi]
  42a111:	ds push ebx
  42a113:	inc    ecx
  42a114:	jno    0x42a0aa
  42a116:	sti    
  42a117:	jmp    0xe9412d4a
  42a11c:	mov    dh,0x92
  42a11e:	jne    0x42a0b1
  42a120:	cmp    eax,0xde39a851
  42a125:	sbb    eax,0xaaf472fc
  42a12a:	out    dx,eax
  42a12b:	or     edi,0xffffff93
  42a12e:	jg     0x42a124
  42a130:	mov    esi,0x6bdf6f92
  42a135:	cmp    al,0x68
  42a137:	lea    esi,[esi-0x7d2eff71]
  42a13d:	xchg   ecx,eax
  42a13e:	add    cl,ch
  42a140:	fwait
  42a141:	xor    dl,0xa4
  42a144:	outs   dx,BYTE PTR ds:[esi]
  42a145:	xor    DWORD PTR [eax+eax*1+0x51],0xffffffba
  42a14a:	push   esp
  42a14b:	push   0x8f39
  42a150:	je     0x42a0e2
  42a152:	(bad)  
  42a153:	call   FWORD PTR [esi+eiz*2+0x6e]
  42a157:	clc    
  42a158:	ror    edi,0xa3
  42a15b:	push   eax
  42a15c:	mov    ds:0x8bf7df,eax
	...
  42a171:	add    BYTE PTR [eax],al
  42a173:	add    BYTE PTR [edx-0x3c05488a],cl
  42a179:	gs cmc 
  42a17b:	inc    ebp
  42a17c:	and    al,0x8c
  42a17e:	je     0x42a19d
  42a180:	aas    
  42a181:	mov    esi,0x8f0ca063
  42a186:	add    BYTE PTR [eax+0x1c],ch
  42a189:	lea    eax,[eax]
  42a18b:	add    BYTE PTR [ebx],dl
  42a18d:	jecxz  0x42a182
  42a18f:	(bad)  
  42a190:	fnstenv [ebx]
  42a192:	dec    ebx
  42a193:	call   FWORD PTR [ecx+0x67]
  42a196:	mov    dh,al
  42a198:	hlt    
  42a199:	push   es
  42a19a:	cli    
  42a19b:	push   ebx
  42a19d:	pusha  
  42a19e:	ds or  ah,cl
  42a1a1:	xchg   esi,eax
  42a1a2:	sti    
  42a1a3:	call   FWORD PTR [eax-0x31ff9650]
  42a1a9:	dec    esi
  42a1aa:	mov    dh,cl
  42a1ac:	and    al,0x6f
  42a1ae:	inc    esi
  42a1af:	add    ah,cl
  42a1b1:	xchg   edi,eax
  42a1b2:	mov    ah,0x4d
  42a1b4:	mov    eax,0xefc0b497
  42a1b9:	dec    esi
  42a1ba:	ficom  DWORD PTR [eax]
  42a1bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1bd:	push   esi
  42a1be:	dec    edx
  42a1bf:	push   0x8ca6
  42a1c4:	and    esp,ebx
  42a1c6:	idiv   edi
  42a1c8:	imul   eax,edx,0xc79c400e
  42a1ce:	pop    ebp
  42a1cf:	pop    ebx
  42a1d0:	lds    ecx,FWORD PTR [ecx+0xb]
  42a1d3:	add    BYTE PTR [ebp+0x2ffb32],dh
	...
  42a1e9:	add    BYTE PTR [eax],al
  42a1eb:	add    BYTE PTR [ebx-0x1efc001b],cl
  42a1f1:	test   DWORD PTR [ecx+esi*2],ebx
  42a1f4:	dec    edi
  42a1f5:	push   edx
  42a1f6:	sub    DWORD PTR [ebx-0x76f22b8b],eax
  42a1fc:	shl    al,0x48
  42a1ff:	inc    eax
  42a200:	mov    ch,0x99
  42a202:	jo     0x42a282
  42a204:	mov    ecx,0xaaffffa7
  42a209:	xor    DWORD PTR [edi-0x1],esi
  42a20c:	mov    ch,0xa8
  42a20e:	(bad)  
  42a20f:	mov    esi,0xbefcb815
  42a214:	not    BYTE PTR [eax-0x173e0426]
  42a21a:	push   ebp
  42a21c:	mov    eax,0xb54051d8
  42a221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a222:	stos   DWORD PTR es:[edi],eax
  42a223:	aaa    
  42a224:	or     eax,0xfafd1a68
  42a229:	and    edi,DWORD PTR [edi]
  42a22b:	jae    0x42a1cf
  42a22d:	sub    eax,0x23b123bb
  42a232:	aas    
  42a233:	jae    0x42a1cb
  42a235:	sbb    eax,0x64fa77f2
  42a23a:	add    al,0x89
  42a23c:	cmp    al,0xa8
  42a23e:	(bad)  
  42a23f:	push   DWORD PTR [ebp-0x4f7708e1]
  42a245:	jo     0x42a290
  42a247:	inc    eax
  42a248:	mov    ch,0x2d
  42a24a:	jbe    0x42a24f
  42a24c:	mov    ah,0xa6
  42a24e:	inc    DWORD PTR [esi+0x0]
	...
  42a264:	std    
  42a265:	mov    ds:0xe4f5bff4,al
  42a26a:	sti    
  42a26b:	jmp    edi
  42a26d:	out    0x1c,al
  42a26f:	not    BYTE PTR [edx-0xaed6034]
  42a275:	(bad)
  42a279:	pop    edi
  42a27a:	xor    eax,esp
  42a27c:	jp     0x42a20b
  42a27e:	fstp   st(1)
  42a280:	pop    edx
  42a281:	xchg   edi,eax
  42a282:	inc    eax
  42a283:	sub    DWORD PTR [ecx+0xc],ebp
  42a286:	sub    ch,BYTE PTR [edi+0x48c1ee97]
  42a28c:	cmc    
  42a28d:	(bad)  
  42a28e:	pop    esi
  42a28f:	mov    bh,0x96
  42a291:	mov    esp,DWORD PTR [eax+0x7b]
  42a294:	dec    edx
  42a295:	nop
  42a296:	jmp    0xc58ece9e
  42a29b:	sti    
  42a29c:	sub    eax,0x75489183
  42a2a1:	(bad)  
  42a2a2:	pusha  
  42a2a3:	xor    BYTE PTR [esi-0x1bfc1672],0xcf
  42a2aa:	test   eax,0xf28fb245
  42a2af:	fld    QWORD PTR [edx]
  42a2b1:	jl     0x42a25c
  42a2b3:	add    eax,DWORD PTR [ebx]
  42a2b5:	mov    ebx,DWORD PTR [ecx]
  42a2b7:	dec    esi
  42a2b8:	jne    0x42a249
  42a2ba:	in     eax,0xd2
  42a2bc:	pusha  
  42a2bd:	cmp    BYTE PTR [ebp-0x3f],bl
  42a2c0:	fcmovbe st,st(6)
  42a2c2:	shl    BYTE PTR [esi],0xe9
  42a2c5:	or     ebp,DWORD PTR [edx+0xb0]
	...
  42a2db:	add    BYTE PTR [esi-0x551fe1fc],bl
  42a2e1:	pop    esp
  42a2e2:	mov    ebx,0xd41af0eb
  42a2e7:	int    0x60
  42a2e9:	cmp    esi,edx
  42a2eb:	dec    edx
  42a2ec:	add    BYTE PTR [eax],ch
  42a2ee:	mov    edx,0xe2a8bac3
  42a2f3:	cs mov cl,0x90
  42a2f6:	sub    al,dh
  42a2f8:	or     eax,0xa003edce
  42a2fd:	jp     0x42a318
  42a2ff:	adc    dh,ch
  42a301:	pop    DWORD PTR [eax]
  42a303:	pop    ds
  42a304:	popw   es
  42a306:	stc    
  42a307:	outs   dx,BYTE PTR ds:[esi]
  42a308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a309:	(bad)  
  42a30a:	adc    eax,0xf856b6a9
  42a30f:	aam    0xb5
  42a311:	cmp    DWORD PTR [edx-0x42],edx
  42a314:	iret   
  42a315:	mov    ebx,0xb5ce292f
  42a31a:	pop    ebx
  42a31b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a31c:	outs   dx,DWORD PTR ds:[esi]
  42a31d:	xchg   ebx,eax
  42a31e:	and    eax,0x4fc641
  42a323:	aas    
  42a324:	mov    ah,0x5f
  42a326:	shr    BYTE PTR [edx-0x578b744a],cl
  42a32c:	sahf   
  42a32d:	cs jmp 0xc14f3552
  42a333:	popf   
  42a334:	push   ds
  42a335:	xchg   ebx,eax
  42a336:	adc    eax,0x4fc4b9
  42a33b:	jb     0x42a359
  42a33d:	sbb    bl,bl
  42a33f:	stos   BYTE PTR es:[edi],al
	...
  42a354:	mov    dh,0x58
  42a356:	and    ebp,0x74008fb9
  42a35c:	mov    ecx,0x791a523e
  42a361:	inc    eax
  42a362:	push   eax
  42a363:	cmp    DWORD PTR [esi],eax
  42a365:	mov    bh,0xba
  42a367:	inc    ecx
  42a368:	jp     0x42a3b9
  42a36a:	add    cl,al
  42a36c:	mov    WORD PTR [edx-0x30183905],ds
  42a372:	pop    edx
  42a373:	sub    esi,ebp
  42a375:	into   
  42a376:	data16 in al,dx
  42a378:	fwait
  42a379:	jge    0x42a39f
  42a37b:	fcomi  st,st(6)
  42a37d:	(bad)  
  42a37e:	cs test eax,0x99259377
  42a384:	stos   BYTE PTR es:[edi],al
  42a385:	dec    edi
  42a386:	add    BYTE PTR [edi+0x2ad2bfb5],bl
  42a38c:	mov    cl,0x93
  42a38e:	push   edx
  42a38f:	add    BYTE PTR [eax+0x4511e34a],ah
  42a395:	mov    ch,0xfc
  42a397:	test   BYTE PTR [edi+edi*1+0x41],bl
  42a39b:	jmp    DWORD PTR [ecx+0x63]
  42a39e:	adc    DWORD PTR [eax-0x74],eax
  42a3a1:	or     al,BYTE PTR [edi]
  42a3a3:	js     0x42a360
  42a3a5:	push   ecx
  42a3a6:	sti    
  42a3a7:	cmp    ch,bl
  42a3a9:	xchg   dl,bh
  42a3ab:	call   FWORD PTR [eax+eax*2+0x25]
  42a3af:	mov    ebx,ebp
  42a3b1:	mov    bh,dl
  42a3b3:	dec    DWORD PTR [eax+edx*1-0xb]
  42a3b7:	je     0x42a3b9
	...
  42a3c9:	add    BYTE PTR [eax],al
  42a3cb:	add    BYTE PTR [ebp+ebx*2-0x6177ea04],bh
  42a3d2:	inc    eax
  42a3d3:	add    cl,dl
  42a3d5:	shr    BYTE PTR [esi+0x15],cl
  42a3d8:	jmp    DWORD PTR [edx+0x4b]
  42a3db:	push   eax
  42a3dc:	pminub mm7,QWORD PTR [ebp-0x4ae2498]
  42a3e3:	out    0x53,eax
  42a3e5:	mov    ebp,0x8257fffc
  42a3ea:	mov    ebx,0xc609df5e
  42a3ef:	pop    esi
  42a3f0:	fist   WORD PTR [esp+edi*8+0x25]
  42a3f4:	dec    eax
  42a3f5:	mov    al,ds:0x378f0040
  42a3fa:	pop    ds
  42a3fb:	add    al,0xdc
  42a3fd:	xor    al,BYTE PTR ds:[ebx-0x1009088]
  42a404:	mov    al,ds:0xa0f67e81
  42a409:	gs cmc 
  42a40b:	add    eax,0x40dccc
  42a410:	sar    BYTE PTR [esi],1
  42a412:	push   ds
  42a413:	call   0x404f88
  42a418:	push   eax
  42a419:	shr    DWORD PTR [edi+0x1c],cl
  42a41c:	mov    ch,0xd7
  42a41e:	lods   al,BYTE PTR ds:[esi]
  42a41f:	fdivr  st(6),st
  42a421:	js     0x42a49b
  42a423:	jg     0x42a3da
  42a425:	ja     0x42a426
  42a427:	jmp    FWORD PTR [esi+esi*4]
  42a42a:	adc    BYTE PTR [edi-0x3ed9f3],bl
	...
  42a444:	aas    
  42a445:	clc    
  42a446:	add    bh,bh
  42a448:	cmp    BYTE PTR [eax+0x76],0x45
  42a44c:	popf   
  42a44d:	mov    edx,0xf20b0000
  42a452:	mov    al,0x23
  42a454:	mov    ebp,0x99732445
  42a459:	jo     0x42a47f
  42a45b:	jae    0x42a3ee
  42a45d:	jo     0x42a483
  42a45f:	jae    0x42a3fa
  42a461:	pusha  
  42a462:	int    0xfc
  42a464:	mov    al,ds:0xb54011c4
  42a469:	add    DWORD PTR ds:0x260c4d54,ebp
  42a46f:	cld    
  42a470:	xor    dh,cl
  42a472:	cmp    eax,0x14ba8b5c
  42a477:	add    BYTE PTR [ebx-0x52dc4eff],cl
  42a47d:	and    eax,0x60d97324
  42a482:	and    al,0x73
  42a484:	shl    DWORD PTR [eax+0x24],1
  42a487:	jae    0x42a462
  42a489:	nop
  42a48a:	retf   0xa0fc
  42a48d:	pop    esp
  42a48e:	adc    BYTE PTR [eax-0x4b],al
  42a491:	icebp  
  42a492:	daa    
  42a493:	push   esp
  42a494:	fucom  st(3)
  42a496:	and    eax,0x3d00e2fc
  42a49b:	pop    esp
  42a49c:	jnp    0x42a4d8
  42a49e:	verw   WORD PTR [eax-0xf]
  42a4a2:	adc    edx,DWORD PTR [ebp+0x3e]
  42a4a5:	ret    
  42a4a6:	cld    
  42a4a7:	push   esp
	...
  42a4bc:	ret    0x1c8e
  42a4bf:	or     al,0xb8
  42a4c1:	add    esi,esi
  42a4c3:	and    al,0x27
  42a4c5:	mov    al,ds:0xe5beae92
  42a4ca:	mov    cl,BYTE PTR [esi]
  42a4cc:	and    DWORD PTR [ecx+ebp*1+0x12882c04],0x728cfc1c
  42a4d7:	and    al,0x3d
  42a4d9:	push   ebp
  42a4da:	or     al,dh
  42a4dc:	fist   WORD PTR [ecx-0x3]
  42a4df:	add    esp,esi
  42a4e1:	sbb    BYTE PTR [ebp-0x33],cl
  42a4e4:	cmp    eax,0x69cce203
  42a4e9:	add    esi,edx
  42a4eb:	and    al,0xe7
  42a4ed:	mov    ds:0x8caaae42,eax
  42a4f2:	mov    ah,0xf7
  42a4f4:	call   0xa6668185
  42a4f9:	iret   
  42a4fa:	jmp    0x1227ef77
  42a4ff:	add    al,0x38
  42a501:	lea    ebx,[edx]
  42a503:	js     0x42a4fe
  42a505:	in     al,dx
  42a506:	mov    bl,0xc6
  42a508:	hlt    
  42a509:	mov    ds:0xf7da99e9,eax
  42a50e:	xor    DWORD PTR [ebp+esi*2-0x70d7ee71],ebp
  42a515:	mov    gs,ecx
  42a517:	js     0x42a4a0
  42a519:	xchg   edi,eax
  42a51a:	mov    dh,0x48
  42a51c:	retf   0xa1aa
  42a51f:	inc    edx
	...
  42a534:	jne    0x42a4c5
  42a536:	push   esp
  42a537:	aad    0x31
  42a539:	nop
  42a53a:	mov    dl,0xc7
  42a53c:	jmp    0x29a2:0x16f9cae5
  42a543:	add    al,0x9d
  42a545:	stos   BYTE PTR es:[edi],al
  42a546:	add    DWORD PTR [edx+0x75],0xcf3c008f
  42a54d:	je     0x42a529
  42a54f:	in     al,0xb6
  42a551:	pop    DWORD PTR [ecx+ebp*4-0x37665e3]
  42a558:	adc    ch,BYTE PTR [ebx+0x3f]
  42a55b:	jmp    0xaffb375c
  42a560:	jp     0x42a4ee
  42a562:	add    BYTE PTR [esi],bl
  42a564:	(bad)  
  42a565:	mov    eax,ds:0x8c76dbac
  42a56a:	mov    BYTE PTR [edx*8+0x49a14519],dl
  42a571:	je     0x42a5d8
  42a573:	or     dh,BYTE PTR [eax-0x15b7271]
  42a579:	fdiv   st(3),st
  42a57b:	fdivr  QWORD PTR [edx-0x46139689]
  42a581:	(bad)
  42a585:	call   0xcc87:0x4f79292f
  42a58c:	sahf   
  42a58d:	mov    edi,0x941c62d7
  42a592:	mov    DWORD PTR [edi],eax
  42a594:	xor    bl,cl
  42a596:	cld    
  42a597:	push   ds
	...
  42a5ac:	or     cl,BYTE PTR [ecx+edi*1-0x9]
  42a5b0:	(bad)  
  42a5b1:	and    al,al
  42a5b3:	add    DWORD PTR [edi+0x70e90209],edx
  42a5b9:	xchg   esp,eax
  42a5ba:	add    BYTE PTR [ebx+0x7e88f7be],dl
  42a5c0:	repz mov esp,ebx
  42a5c3:	jne    0x42a61a
  42a5c5:	(bad)  
  42a5c6:	sti    
  42a5c7:	push   0x4d
  42a5c9:	mov    BYTE PTR [eax],al
  42a5cb:	jb     0x42a5ca
  42a5cd:	xchg   ebx,eax
  42a5ce:	sti    
  42a5cf:	sbb    DWORD PTR [ecx-0x4917e2ea],ebx
  42a5d5:	jbe    0x42a5da
  42a5d7:	add    bh,bl
  42a5d9:	iret   
  42a5da:	cmp    eax,ebx
  42a5dc:	inc    edi
  42a5dd:	aaa    
  42a5de:	jecxz  0x42a563
  42a5e0:	xchg   ecx,eax
  42a5e1:	scas   eax,DWORD PTR es:[edi]
  42a5e2:	cld    
  42a5e3:	mov    ebx,DWORD PTR [ecx-0x33df7e65]
  42a5e9:	mov    bh,0x82
  42a5eb:	jge    0x42a58a
  42a5ed:	(bad)  
  42a5ee:	mov    esi,0x73d9c04
  42a5f3:	push   0x4026c4
  42a5f8:	inc    esp
  42a5f9:	outs   dx,BYTE PTR ds:[esi]
  42a5fa:	jbe    0x42a5fd
  42a5fc:	pushf  
  42a5fd:	adc    bl,BYTE PTR [esi-0x4]
  42a600:	pushf  
  42a601:	sbb    bh,BYTE PTR [esi]
  42a603:	or     BYTE PTR [ebx],dl
  42a605:	pop    edi
  42a606:	jecxz  0x42a61d
  42a608:	jle    0x42a59e
  42a60a:	add    BYTE PTR [ecx+0xee8b319],cl
	...
  42a624:	iret   
  42a625:	sar    DWORD PTR [ebx],cl
  42a627:	ret    
  42a628:	xlat   BYTE PTR ds:[ebx]
  42a629:	aaa    
  42a62a:	jecxz  0x42a5f3
  42a62c:	or     DWORD PTR [ebx-0x526c006d],esi
  42a632:	or     BYTE PTR [ebp-0x80],0xad
  42a636:	mov    BYTE PTR [ebp-0x8],al
  42a639:	mov    dh,0x46
  42a63b:	jge    0x42a68a
  42a63d:	(bad)  
  42a63e:	mov    esi,0x73d1c04
  42a643:	push   0x402634
  42a648:	mov    ah,0x91
  42a64a:	ja     0x42a64d
  42a64c:	or     al,0x12
  42a64e:	pop    esi
  42a64f:	cld    
  42a650:	sbb    al,0x1a
  42a652:	or     BYTE PTR ds:[ebx],al
  42a655:	pop    esi
  42a656:	jecxz  0x42a6a1
  42a658:	ficom  WORD PTR [ebx-0x48367700]
  42a65e:	call   0x3c167571
  42a663:	ret    
  42a664:	mov    ch,0xed
  42a666:	mov    ds:0x28b3fae7,eax
  42a66b:	xchg   edi,eax
  42a66c:	ficom  DWORD PTR [ecx+0x21]
  42a66f:	add    BYTE PTR [eax+0x7088214c],0x5c
  42a676:	sub    al,0xe
  42a678:	inc    eax
  42a679:	ja     0x42a67a
  42a67b:	shl    DWORD PTR [ecx+0x1d67ad78],0xd1
  42a682:	cdq    
  42a683:	inc    eax
  42a684:	mov    ch,0x10
  42a686:	dec    ecx
  42a687:	jnp    0x42a689
	...
  42a699:	add    BYTE PTR [eax],al
  42a69b:	add    BYTE PTR [eax+edi*2+0x45a9728c],dh
  42a6a2:	and    BYTE PTR [esi+0x54ba0d10],al
  42a6a8:	loop   0x42a653
  42a6aa:	mov    ecx,0x8cb33054
  42a6af:	dec    edi
  42a6b0:	cmp    eax,DWORD PTR cs:[edi]
  42a6b3:	std    
  42a6b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a6b5:	loopne 0x42a678
  42a6b7:	push   cs
  42a6b8:	mov    ah,0x78
  42a6ba:	xchg   BYTE PTR [edx+0x59],al
  42a6bd:	cmc    
  42a6be:	retf   
  42a6bf:	sti    
  42a6c0:	pop    edx
  42a6c1:	(bad)  
  42a6c3:	xor    BYTE PTR [ebp+0x38],dh
  42a6c6:	inc    esp
  42a6c7:	mov    al,dl
  42a6c9:	shr    BYTE PTR [edx-0x3c102269],1
  42a6cf:	jecxz  0x42a707
  42a6d1:	inc    ebx
  42a6d2:	sbb    edi,esp
  42a6d4:	out    0xa9,al
  42a6d6:	lea    esi,[edx-0x47]
  42a6d9:	pop    ebp
  42a6da:	dec    eax
  42a6db:	or     al,0x38
  42a6dd:	add    BYTE PTR ds:0x184db500,al
  42a6e3:	or     al,0x39
  42a6e5:	cli    
  42a6e6:	add    al,0x0
  42a6e8:	mov    ch,0xe
  42a6ea:	xlat   BYTE PTR ds:[ebx]
  42a6eb:	push   esp
  42a6ec:	imul   edi,DWORD PTR [ecx-0xe],0x4f
  42a6f0:	mov    ds:0x3404298f,eax
  42a6f5:	push   ebx
  42a6f6:	in     eax,dx
  42a6f7:	test   eax,0xa961d43d
  42a6fc:	cmp    edx,DWORD PTR [ecx+0x8d43]
	...
  42a712:	add    BYTE PTR [eax],al
  42a714:	ja     0x42a731
  42a716:	dec    ebx
  42a717:	mov    edi,DWORD PTR [eax-0x73]
  42a71a:	inc    ebx
  42a71b:	lea    esi,[edi+0x1f]
  42a71e:	dec    ebx
  42a71f:	mov    edi,DWORD PTR [eax-0x6d]
  42a722:	inc    ebx
  42a723:	lea    esi,[edi+0x23]
  42a726:	or     ecx,DWORD PTR [ebx-0x39916e08]
  42a72c:	dec    esi
  42a72d:	pop    ss
  42a72e:	sub    ecx,DWORD PTR [esp+ebp*1]
  42a731:	ror    DWORD PTR [ecx-0x76],cl
  42a734:	lock lahf 
  42a736:	outs   dx,BYTE PTR ds:[esi]
  42a737:	(bad)  
  42a738:	push   esi
  42a739:	pop    ss
  42a73a:	and    edi,eax
  42a73c:	cmp    eax,0xf88a41d3
  42a741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a742:	pop    esi
  42a743:	(bad)  
  42a744:	dec    esi
  42a745:	pop    ss
  42a746:	stos   DWORD PTR es:[edi],eax
  42a747:	(bad)  
  42a748:	fcom   DWORD PTR [esp+eiz*4]
  42a74b:	push   ebx
  42a74c:	rcl    BYTE PTR [esi],1
  42a74e:	stos   DWORD PTR es:[edi],eax
  42a74f:	jecxz  0x42a729
  42a751:	adc    al,0xa4
  42a753:	push   edi
  42a754:	rcl    BYTE PTR [esi],1
  42a756:	stos   DWORD PTR es:[edi],eax
  42a757:	in     eax,0xd8
  42a759:	adc    al,0xa4
  42a75b:	pop    ebx
  42a75c:	rcl    BYTE PTR [esi],1
  42a75e:	stos   DWORD PTR es:[edi],eax
  42a75f:	out    0xd8,eax
  42a761:	adc    al,0xa4
  42a763:	pop    edi
  42a764:	rcl    BYTE PTR [esi],1
  42a766:	stos   DWORD PTR es:[edi],eax
  42a767:	jmp    0x43e6bc04
  42a76c:	nop
  42a76d:	push   ss
  42a76e:	stos   DWORD PTR es:[edi],eax
  42a76f:	jmp    0x42a79e
  42a771:	shl    DWORD PTR ds:0x6ebb708a,cl
  42a777:	mov    BYTE PTR [eax],0x0
	...
  42a78a:	add    BYTE PTR [eax],al
  42a78c:	sub    al,ch
  42a78e:	and    dl,BYTE PTR [edi+0x2f000cb9]
  42a794:	out    0xe2,al
  42a796:	push   eax
  42a797:	sub    dh,cl
  42a799:	cwde   
  42a79a:	push   eax
  42a79b:	out    0xec,al
  42a79d:	pushf  
  42a79e:	movaps XMMWORD PTR [ecx-0x283e3f42],xmm6
  42a7a5:	add    al,0x2
  42a7a7:	jmp    0x53433820
  42a7ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a7ad:	test   DWORD PTR [eax+0x36],0x91e388f6
  42a7b4:	push   ds
  42a7b5:	mov    bh,bl
  42a7b7:	push   0xc
  42a7b9:	test   DWORD PTR [eax],eax
  42a7bb:	adc    edi,DWORD PTR [ecx-0x340ebaea]
  42a7c1:	mov    eax,0x89a365e8
  42a7c6:	sti    
  42a7c7:	pusha  
  42a7c8:	ins    BYTE PTR es:[edi],dx
  42a7c9:	ins    BYTE PTR es:[edi],dx
  42a7ca:	out    0xf7,eax
  42a7cc:	addr16 dec eax
  42a7ce:	inc    eax
  42a7cf:	stos   BYTE PTR es:[edi],al
  42a7d0:	ds in  eax,dx
  42a7d2:	call   0x98af1485
  42a7d7:	outs   dx,BYTE PTR ds:[esi]
  42a7d8:	call   0x878b:0xd2b47f8b
  42a7df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a7e0:	xchg   edx,eax
  42a7e1:	jo     0x42a7c7
  42a7e3:	sar    BYTE PTR [ecx-0x491a4171],cl
  42a7e9:	cmc    
  42a7ea:	or     al,0xd1
  42a7ec:	outs   dx,BYTE PTR ds:[esi]
  42a7ed:	add    eax,DWORD PTR [eax-0x17]
	...
  42a804:	sahf   
  42a805:	es ja  0x42a7f0
  42a808:	mov    dh,0xe
  42a80a:	gs sub eax,0xf14516b1
  42a810:	sar    DWORD PTR [eax-0x76df7618],cl
  42a816:	sti    
  42a817:	pusha  
  42a818:	in     al,dx
  42a819:	imul   esp,edi,0xffffffdf
  42a81c:	pop    es
  42a81d:	dec    eax
  42a81e:	inc    eax
  42a81f:	add    bh,bl
  42a821:	adc    al,0x5e
  42a823:	call   0x9921fefb
  42a828:	or     ebp,DWORD PTR [ecx-0x57e67c04]
  42a82e:	cld    
  42a82f:	mov    esp,DWORD PTR [ecx+0x57a8e3b7]
  42a835:	xchg   edx,eax
  42a836:	add    dl,al
  42a838:	ror    BYTE PTR [ebx+0x7b740c66],1
  42a83e:	je     0x42a883
  42a840:	fdiv   QWORD PTR [ebx-0x742284a3]
  42a846:	and    DWORD PTR [ebp+0x8],0xdc75fd8c
  42a84d:	test   al,0x6e
  42a84f:	or     al,0x27
  42a851:	pop    eax
  42a852:	add    edi,edi
  42a854:	mov    WORD PTR [ebx-0x6c72ec73],?
  42a85a:	jg     0x42a81c
  42a85c:	les    ebx,FWORD PTR [edx+0x14704d89]
  42a862:	cli    
  42a863:	xor    BYTE PTR [ecx+0xeafbb7],0x0
	...
  42a87a:	add    BYTE PTR [eax],al
  42a87c:	pop    edi
  42a87d:	adc    al,0x3e
  42a87f:	in     al,0x37
  42a881:	xchg   ebp,eax
  42a882:	xor    eax,eax
  42a884:	sbb    al,0xd2
  42a886:	mov    BYTE PTR [ebp+0x4],ah
  42a889:	into   
  42a88a:	ds in  al,0xe4
  42a88d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a88e:	cld    
  42a88f:	dec    edi
  42a891:	pop    edi
  42a892:	idiv   edi
  42a894:	(bad)  
  42a895:	push   edi
  42a896:	fucomip st,st(0)
  42a898:	and    ebp,DWORD PTR [edx]
  42a89a:	cli    
  42a89b:	dec    DWORD PTR [esi+0x5869fb82]
  42a8a1:	cmp    edx,DWORD PTR [ebx]
  42a8a3:	ja     0x42a904
  42a8a5:	xchg   ebx,eax
  42a8a6:	call   0xceffb8
  42a8ab:	xor    esi,DWORD PTR [ebp+0x1972e4a6]
  42a8b1:	repnz sar DWORD PTR [ebx],0xb6
  42a8b5:	mov    edx,0x5c7db50a
  42a8ba:	nop
  42a8bb:	dec    ebx
  42a8bc:	mov    ah,0x60
  42a8be:	or     dh,BYTE PTR [ebp-0x7d5a918b]
  42a8c4:	cmc    
  42a8c5:	in     al,0xe1
  42a8c7:	imul   esi,DWORD PTR [edi-0x22c75d3b],0x6488f9e9
  42a8d1:	mov    ah,0x1
  42a8d3:	repnz cmp al,0xc4
  42a8d6:	sub    ah,bh
  42a8d8:	inc    esp
  42a8d9:	mov    al,0xb2
  42a8db:	cld    
  42a8dc:	test   al,0xc4
  42a8de:	out    dx,eax
  42a8df:	aas    
	...
  42a8f4:	mov    ch,0xeb
  42a8f6:	inc    esp
  42a8f7:	jae    0x42a8b1
  42a8f9:	imul   edx,DWORD PTR ds:0x810d2086,0x891da14a
  42a903:	lds    ecx,FWORD PTR [esi-0xa402f9d]
  42a909:	cmp    DWORD PTR [ecx-0x3406629e],ecx
  42a90f:	sti    
  42a910:	or     BYTE PTR [ecx+0x3f],0xe7
  42a914:	test   DWORD PTR [edx+0x6276fffe],eax
  42a91a:	out    dx,eax
  42a91b:	addr16 mov ebp,0x5affc05d
  42a921:	adc    BYTE PTR [esi-0x3c0ea502],dl
  42a927:	(bad)  
  42a929:	retf   0x7a89
  42a92c:	mov    ebp,0xb5fba3f9
  42a931:	icebp  
  42a932:	scas   eax,DWORD PTR es:[edi]
  42a933:	cmp    esi,DWORD PTR [esi]
  42a935:	hlt    
  42a936:	push   es
  42a937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a938:	mov    ch,0x8f
  42a93a:	jmp    0x65d95e42
  42a93f:	jle    0x42a963
  42a941:	xchg   cl,ch
  42a943:	mov    BYTE PTR [esi],bh
  42a945:	cdq    
  42a946:	dec    ecx
  42a947:	add    al,0xb5
  42a949:	(bad)  
  42a94a:	jo     0x42a90b
  42a94c:	mov    edx,0x390d1e0c
  42a951:	adc    ebp,ecx
  42a953:	add    esi,DWORD PTR [ebp+0xf8c1a]
	...
  42a969:	add    BYTE PTR [eax],al
  42a96b:	add    BYTE PTR [eax+ebp*2+0x14b2be70],dh
  42a972:	std    
  42a973:	add    ch,al
  42a975:	data16 out dx,al
  42a977:	inc    ebx
  42a978:	xchg   ebp,eax
  42a979:	push   edx
  42a97a:	pop    esi
  42a97b:	mov    bh,0xbc
  42a97d:	mov    ebx,0x899d120e
  42a982:	jo     0x42a922
  42a984:	scas   al,BYTE PTR es:[edi]
  42a985:	sbb    dl,BYTE PTR [esp+esi*8]
  42a988:	mov    ch,0x68
  42a98a:	pusha  
  42a98b:	mov    esi,0x3de1192
  42a990:	and    esp,ebx
  42a992:	outs   dx,BYTE PTR ds:[esi]
  42a993:	mov    al,0xb6
  42a995:	adc    BYTE PTR [edi+0x5ccd270b],cl
  42a99b:	cdq    
  42a99c:	mov    bl,BYTE PTR [edi-0x6e]
  42a99f:	mov    cl,BYTE PTR [edi]
  42a9a1:	mov    al,ds:0x9096a666
  42a9a6:	pop    esi
  42a9a7:	mov    dh,0x96
  42a9a9:	leave  
  42a9aa:	xchg   edx,eax
  42a9ab:	nop
  42a9ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a9ad:	xchg   esp,eax
  42a9ae:	call   0x8486:0xc39805b7
  42a9b5:	cld    
  42a9b6:	or     al,0x83
  42a9b8:	push   esp
  42a9b9:	test   edx,ebx
  42a9bb:	add    esi,DWORD PTR [ebp+0x7a00d690]
  42a9c1:	leave  
  42a9c2:	xchg   esp,eax
  42a9c3:	or     eax,edi
  42a9c5:	popf   
  42a9c6:	add    BYTE PTR [esi+esi*8+0x0],ch
  42a9ca:	add    eax,0xafbe6f2
  42a9cf:	jb     0x42a9d1
	...
  42a9e1:	add    BYTE PTR [eax],al
  42a9e3:	add    BYTE PTR [ebx-0x67],cl
  42a9e6:	sub    ebx,esp
  42a9e8:	sub    eax,0x2f16ffc7
  42a9ed:	mov    DWORD PTR [edi+0x4584068c],0xff51dd0d
  42a9f7:	mov    eax,ds:0x6aa476ba
  42a9fc:	jmp    0x42a986
  42a9fe:	sti    
  42a9ff:	cmp    DWORD PTR [edi+0x711a0d76],esi
  42aa05:	les    edi,FWORD PTR [edi+0x7f6d1472]
  42aa0b:	and    al,0xbd
  42aa0d:	sub    DWORD PTR [esi],0xffffffa9
  42aa10:	mov    eax,ds:0xb6e876a9
  42aa15:	push   ecx
  42aa16:	or     al,0xe9
  42aa18:	adc    BYTE PTR [ecx-0x2fd98e98],ah
  42aa1e:	add    cl,al
  42aa20:	jmp    0x2f75:0x3be901fd
  42aa27:	ret    0xe930
  42aa2a:	cld    
  42aa2b:	bound  esi,QWORD PTR [edi-0x38]
  42aa2e:	xchg   DWORD PTR ds:0x2488d469,ecx
  42aa34:	(bad)  
  42aa35:	test   BYTE PTR [eax+0x11],0xb9
  42aa39:	mov    edi,0xdf47e900
  42aa3e:	sti    
  42aa3f:	hlt    
  42aa40:	mov    esi,0x60c51582
  42aa45:	les    eax,FWORD PTR [eax]
  42aa47:	jo     0x42aa49
	...
  42aa59:	add    BYTE PTR [eax],al
  42aa5b:	add    BYTE PTR [esp+eiz*2+0x37],dh
  42aa5f:	sub    al,BYTE PTR [ebp-0x19]
  42aa62:	push   ebx
  42aa63:	mov    bh,0x9e
  42aa65:	repnz fld DWORD PTR [eax]
  42aa68:	repnz test al,0x88
  42aa6b:	enter  0x56c5,0xd7
  42aa6f:	cmp    edx,DWORD PTR [edi+0x4f532a1f]
  42aa75:	mov    BYTE PTR ds:[ebp-0x44],dl
  42aa79:	mov    bl,0xd9
  42aa7b:	inc    bl
  42aa7d:	test   al,0x7f
  42aa7f:	sar    BYTE PTR [eax],0x82
  42aa82:	push   eax
  42aa83:	push   edi
  42aa84:	ret    
  42aa85:	push   ds
  42aa86:	xlat   BYTE PTR ds:[ebx]
  42aa87:	dec    DWORD PTR [ecx+0x475fcb0]
  42aa8d:	test   eax,0x4fde580e
  42aa92:	sti    
  42aa93:	test   ah,0x84
  42aa96:	mov    ebx,0x3e17f4f7
  42aa9b:	out    0x3,eax
  42aa9d:	pop    ds
  42aa9e:	xlat   BYTE PTR ds:[ebx]
  42aa9f:	call   0x4072ae
  42aaa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aaa5:	inc    esi
  42aaa6:	in     al,0x75
  42aaa8:	jmp    0xccc2a5e4
  42aaad:	(bad)  
  42aaae:	push   ecx
  42aaaf:	(bad)  
  42aab0:	jns    0x42aa5d
  42aab2:	cld    
  42aab3:	jne    0x42aa49
  42aab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aab6:	push   cs
  42aab7:	test   BYTE PTR [esi-0x1e7704b1],ch
  42aabd:	stos   DWORD PTR es:[edi],eax
  42aabe:	or     BYTE PTR [ebp+0x0],0x0
	...
  42aad2:	add    BYTE PTR [eax],al
  42aad4:	inc    eax
  42aad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aad6:	mov    BYTE PTR [ebp+0x3c],al
  42aad9:	mov    dl,0x6
  42aadb:	xor    ebx,DWORD PTR [edi+ecx*2-0x40]
  42aadf:	mov    edi,DWORD PTR [ecx+0x4d80b3]
  42aae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aae6:	xor    al,al
  42aae8:	xor    al,0x39
  42aaea:	jb     0x42aaed
  42aaec:	pop    esp
  42aaed:	int    0xff
  42aaef:	inc    DWORD PTR [esi-0x4a079c79]
  42aaf5:	(bad)  {k2}
  42aafa:	popf   
  42aafb:	dec    BYTE PTR [edx-0x2]
  42aafe:	sbb    al,0x80
  42ab00:	fadd   st,st(4)
  42ab02:	dec    DWORD PTR [eax-0x3afd830e]
  42ab08:	sar    DWORD PTR ss:[edi-0x78],1
  42ab0c:	in     eax,0xf3
  42ab0e:	adc    DWORD PTR [ebx-0x6c],esi
  42ab11:	cmc    
  42ab12:	xchg   edi,eax
  42ab13:	add    eax,ecx
  42ab15:	and    bh,BYTE PTR [edx-0x6f0ff600]
  42ab1b:	xlat   BYTE PTR ds:[ebx]
  42ab1c:	ss dec ebx
  42ab1e:	push   DWORD PTR [ebx+0x64]
  42ab21:	std    
  42ab22:	ror    DWORD PTR [ebx],0xb6
  42ab25:	mov    cl,0xaf
  42ab27:	cld    
  42ab28:	mov    BYTE PTR [eax-0x74],dh
  42ab2b:	inc    edx
  42ab2c:	aad    0xf3
  42ab2e:	inc    esp
  42ab2f:	jae    0x42aab6
  42ab31:	std    
  42ab32:	test   BYTE PTR [eax],0xfa
  42ab35:	in     eax,dx
  42ab36:	mov    esi,0xf
	...
  42ab4b:	add    BYTE PTR [esi-0x2ebd78d7],dh
  42ab51:	push   DWORD PTR [ebx+0x7a762edb]
  42ab57:	mov    edi,0x4979141
  42ab5c:	fdiv   DWORD PTR [ecx]
  42ab5e:	sbb    edi,edi
  42ab60:	stos   BYTE PTR es:[edi],al
  42ab61:	sbb    eax,0xf57a00fb
  42ab66:	inc    esp
  42ab67:	add    DWORD PTR ds:0x92df8b1a,eax
  42ab6d:	mov    ebx,0x84758308
  42ab72:	in     eax,0x88
  42ab74:	lock or al,0x87
  42ab77:	(bad)  
  42ab78:	aaa    
  42ab79:	xor    eax,0xcf88100
  42ab7e:	add    cl,ch
  42ab80:	test   DWORD PTR [edi+0x76c64266],ecx
  42ab86:	add    BYTE PTR [ebp+0x545283ef],0x53
  42ab8d:	jne    0x42ab6b
  42ab8f:	aam    0xa
  42ab91:	iret   
  42ab92:	es (bad) 
  42ab94:	xlat   BYTE PTR ds:[ebx]
  42ab95:	ja     0x42abfd
  42ab97:	(bad)  
  42ab98:	ds xor bh,0x43
  42ab9c:	sbb    bl,BYTE PTR [edi-0x4f]
  42ab9f:	add    dh,BYTE PTR [ebp-0x70fc0eb3]
  42aba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aba6:	xchg   ecx,eax
  42aba7:	sub    esp,DWORD PTR [eax+0x382be9ce]
  42abad:	pop    es
  42abae:	jmp    0x42abb6
	...
  42abc3:	add    ah,al
  42abc5:	data16 jno 0x42ab7f
  42abc8:	sbb    DWORD PTR [eax],ebx
  42abca:	pushf  
  42abcb:	pop    ss
  42abcc:	sub    eax,0x468cb5d0
  42abd1:	xchg   edi,eax
  42abd2:	imul   eax,DWORD PTR [esi*4+0x68351e8f],0xb25766df
  42abdd:	or     ebp,ecx
  42abdf:	add    esi,DWORD PTR [ebp+0x3fc2539b]
  42abe5:	mov    ebx,0x67478aef
  42abea:	outs   dx,BYTE PTR ds:[esi]
  42abeb:	add    DWORD PTR [esi+ecx*2+0x3d],edi
  42abef:	fidivr WORD PTR [edi]
  42abf1:	(bad)
  42abf5:	lahf   
  42abf6:	out    0x42,al
  42abf8:	cmp    ecx,ebx
  42abfa:	mov    ebp,0xd0701f8a
  42abff:	clc    
  42ac00:	push   es
  42ac01:	test   al,0x5e
  42ac03:	scas   al,BYTE PTR es:[edi]
  42ac04:	mov    dl,0xc4
  42ac06:	(bad)  [esi+0x81414bb]
  42ac0c:	xor    ah,BYTE PTR [eax+0x6c33af00]
  42ac12:	add    DWORD PTR [edx-0xb],ebp
  42ac15:	mov    WORD PTR [edi+0x29],?
  42ac18:	bound  edi,QWORD PTR [eax-0x26]
  42ac1b:	push   0xfffffff4
  42ac1d:	pushf  
  42ac1e:	out    0x21,eax
  42ac20:	imul   eax,DWORD PTR [ecx+0x40],0xe8ee392a
  42ac27:	das    
	...
  42ac3c:	add    ebp,DWORD PTR [eax+eax*1+0x6a]
  42ac40:	jae    0x42abc7
  42ac42:	sti    
  42ac43:	arpl   WORD PTR [ebx+0x6c],si
  42ac46:	call   0xfbc4fae9
  42ac4b:	sub    ebp,DWORD PTR [esi-0x55a7871]
  42ac51:	mov    BYTE PTR [ebx],cl
  42ac53:	inc    esi
  42ac54:	push   edx
  42ac55:	lods   eax,DWORD PTR ds:[esi]
  42ac56:	or     al,0xb9
  42ac58:	faddp  st(0),st
  42ac5a:	rol    DWORD PTR [edi],cl
  42ac5c:	popf   
  42ac5d:	dec    edi
  42ac5e:	sti    
  42ac5f:	jne    0x42ac3b
  42ac61:	mov    al,ch
  42ac63:	lahf   
  42ac64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac65:	cmp    bl,0x2a
  42ac68:	jne    0x42abf7
  42ac6a:	sbb    dh,al
  42ac6c:	test   BYTE PTR [eax-0x7f0f230a],0xc2
  42ac73:	in     al,dx
  42ac74:	retf   0x3f63
  42ac77:	jmp    0xe9842e3b
  42ac7c:	cmp    WORD PTR [esi+0x8f6dd53],0x84b6
  42ac85:	test   al,0xd2
  42ac87:	sub    dh,BYTE PTR [ecx-0x58eaea7e]
  42ac8d:	rol    BYTE PTR [eax],0x64
  42ac90:	icebp  
  42ac91:	cld    
  42ac92:	push   cs
  42ac93:	push   0x59
  42ac95:	test   al,0x0
  42ac97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac98:	jno    0x42ac3a
  42ac9a:	test   DWORD PTR [eax],0xc6fb4a39
	...
  42acb4:	int3   
  42acb5:	outs   dx,DWORD PTR ds:[esi]
  42acb6:	or     dh,bh
  42acb8:	popf   
  42acb9:	mov    eax,ecx
  42acbb:	mov    edx,DWORD PTR [edx+0xf]
  42acbe:	mov    ebx,0x4d14b174
  42acc3:	add    al,0x25
  42acc5:	adc    BYTE PTR [eax],cl
  42acc7:	dec    ecx
  42acc8:	jno    0x42ac54
  42acca:	push   eax
  42accb:	call   0x3cf7e4
  42acd0:	out    0x81,eax
  42acd2:	dec    ebx
  42acd3:	call   0x3d3354
  42acd8:	jmp    0x42ad2b
  42acda:	jecxz  0x42accf
  42acdc:	ret    0xfc99
  42acdf:	xor    edx,0xffffff8b
  42ace2:	and    DWORD PTR [esi+0x10],0x9755c18c
  42ace9:	mov    bh,0x80
  42aceb:	in     al,dx
  42acec:	call   0xd370afd
  42acf1:	or     eax,0x320cf85e
  42acf6:	push   esp
  42acf7:	mov    esp,esp
  42acf9:	mov    bl,0x95
  42acfb:	(bad)  
  42acfc:	fistp  DWORD PTR [eax-0x6dae0f78]
  42ad02:	outs   dx,DWORD PTR ds:[esi]
  42ad03:	dec    edx
  42ad04:	xchg   BYTE PTR [ebx+0x63],ah
  42ad07:	sbb    BYTE PTR [ecx+0x4b],dh
  42ad0a:	sti    
  42ad0b:	imul   ebp,ebp,0xa6d5e331
  42ad11:	mov    al,BYTE PTR [eax]
  42ad13:	test   DWORD PTR [edi+ebx*1],ecx
  42ad16:	sub    cl,BYTE PTR [ebx+0x0]
	...
  42ad2c:	loope  0x42acb9
  42ad2e:	add    DWORD PTR [esi],0x17
  42ad31:	push   eax
  42ad32:	pop    es
  42ad33:	mov    edx,edx
  42ad35:	(bad)
  42ad39:	or     al,0x45
  42ad3b:	or     al,0xb5
  42ad3d:	icebp  
  42ad3e:	cli    
  42ad3f:	imul   esi,DWORD PTR [ecx-0x768d723a],0xb7f7c02e
  42ad49:	push   0xaf3cffff
  42ad4e:	hlt    
  42ad4f:	out    0xdc,eax
  42ad51:	cmp    al,0x4
  42ad53:	add    BYTE PTR [esi],ch
  42ad55:	inc    edi
  42ad56:	jmp    0x42acde
  42ad58:	stos   BYTE PTR es:[edi],al
  42ad59:	add    DWORD PTR [eax],ebx
  42ad5b:	call   0x8369ec1c
  42ad60:	arpl   di,cx
  42ad62:	adc    ch,BYTE PTR [ecx+0x41]
  42ad65:	mov    BYTE PTR ss:[edx+0x41],dh
  42ad69:	loope  0x42ad0c
  42ad6b:	cld    
  42ad6c:	xor    al,dh
  42ad6e:	xchg   ah,al
  42ad70:	mov    cl,BYTE PTR [esi]
  42ad72:	dec    esp
  42ad73:	shl    DWORD PTR [ecx-0x73005698],0x68
  42ad7a:	test   eax,0xa96a9cff
  42ad7f:	dec    DWORD PTR [ebx]
  42ad81:	and    eax,0x5c021bdb
  42ad86:	inc    edi
  42ad87:	adc    DWORD PTR [ebp+0x68],esi
  42ad8a:	xchg   BYTE PTR [ebx-0x67],cl
  42ad8d:	ins    BYTE PTR es:[edi],dx
  42ad8e:	mov    WORD PTR [esi],?
	...
  42ada4:	mov    cl,0x39
  42ada6:	dec    esp
  42ada7:	xor    ch,0x85
  42adaa:	push   0xffffffbf
  42adac:	test   DWORD PTR [eax+0x553e52ff],0xb9a5eb81
  42adb6:	stos   BYTE PTR es:[edi],al
  42adb7:	mov    BYTE PTR [eax-0x4ac00b70],cl
  42adbd:	jns    0x42adf7
  42adbf:	push   eax
  42adc0:	inc    eax
  42adc1:	stos   DWORD PTR es:[edi],eax
  42adc2:	sbb    al,0x4f
  42adc4:	push   es
  42adc5:	rol    DWORD PTR [eax],cl
  42adc7:	push   ecx
  42adc8:	push   es
  42adc9:	nop
  42adca:	ss adc eax,0xb7718827
  42add0:	xchg   ecx,eax
  42add1:	out    0xe8,eax
  42add3:	add    esi,DWORD PTR [ebp+0x372e8a0f]
  42add9:	dec    edi
  42adda:	cld    
  42addb:	mov    al,0xe1
  42addd:	or     bh,BYTE PTR [edi+edx*8-0x7516303e]
  42ade4:	js     0x4a3ade9
  42adea:	imul   BYTE PTR [ecx-0x441c164a]
  42adf0:	pop    edx
  42adf1:	dec    edi
  42adf2:	cwde   
  42adf3:	push   ss
  42adf4:	dec    ecx
  42adf5:	or     al,0xa4
  42adf7:	adc    esi,edx
  42adf9:	or     al,0xac
  42adfb:	pminsw mm4,mm2
  42adfe:	iret   
  42adff:	add    BYTE PTR [edx+eiz*8-0x7458eb6a],al
  42ae06:	sub    cl,BYTE PTR [edi+0x0]
	...
  42ae1c:	sub    bh,BYTE PTR [esi+0x3b]
  42ae1f:	jg     0x42ae7b
  42ae21:	add    al,0xef
  42ae23:	adc    al,0x87
  42ae25:	adc    DWORD PTR [edx],0x2d
  42ae28:	xor    eax,0x890319fc
  42ae2d:	mov    al,BYTE PTR [edx]
  42ae2f:	mov    edi,0xb7c12b2
  42ae34:	pop    ecx
  42ae35:	add    DWORD PTR [edi],esp
  42ae37:	sub    DWORD PTR [esi-0x1ceb5bab],esi
  42ae3d:	jl     0x42ae9b
  42ae3f:	sbb    al,0xd9
  42ae41:	cmp    cl,BYTE PTR gs:[edx-0x46cc8189]
  42ae48:	repz push eax
  42ae4a:	loope  0x42ae4f
  42ae4c:	data16 or al,0x55
  42ae4f:	loopne 0x42ae7f
  42ae51:	adc    ch,cl
  42ae53:	xor    esi,DWORD PTR [edi+ecx*4-0x1c9a1700]
  42ae5a:	push   ebx
  42ae5b:	cli    
  42ae5c:	test   BYTE PTR [ecx],0x8d
  42ae5f:	dec    ebp
  42ae60:	ret    
  42ae61:	jnp    0x42ae5e
  42ae63:	cmp    BYTE PTR [ecx-0x33],cl
  42ae66:	data16 int 0x46
  42ae69:	mov    edi,0xe1938ed7
  42ae6e:	movaps XMMWORD PTR [ecx+0x45f4c010],xmm6
  42ae75:	or     BYTE PTR ds:0xbd6555,dh
  42ae7b:	pop    esp
  42ae7c:	jecxz  0x42aeae
  42ae7e:	std    
  42ae7f:	data16 add BYTE PTR [eax],al
	...
  42ae92:	add    BYTE PTR [eax],al
  42ae94:	ror    esp,0xfb
  42ae97:	aaa    
  42ae98:	cmp    eax,0x76f878ba
  42ae9d:	jge    0x42ae85
  42ae9f:	push   es
  42aea0:	cmp    dl,BYTE PTR [edx]
  42aea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aea3:	inc    esp
  42aea4:	mov    eax,ds:0x233e507b
  42aea9:	inc    ebp
  42aeaa:	pop    gs
  42aeac:	mov    dh,0x8
  42aeae:	test   DWORD PTR [ebp-0x46048435],eax
  42aeb4:	shl    DWORD PTR [ecx+0x7cf6fac4],0x84
  42aebb:	sub    DWORD PTR [edx],edi
  42aebd:	mov    ebx,0x7962648d
  42aec2:	sti    
  42aec3:	push   es
  42aec4:	inc    esi
  42aec5:	jl     0x42ae99
  42aec7:	xchg   ebx,eax
  42aec8:	push   edx
  42aec9:	or     al,BYTE PTR [ebp+0x45]
  42aecc:	or     al,BYTE PTR es:[ebp-0x48434bb]
  42aed3:	cmp    esi,eax
  42aed5:	arpl   WORD PTR [ebp+0x62532da9],ax
  42aedb:	push   0x24
  42aedd:	cmp    eax,0x7bd25477
  42aee2:	jne    0x42aee4
  42aee4:	jo     0x42af4a
  42aee6:	mov    ebx,0x7472566
  42aeeb:	(bad)  
  42aeec:	(bad)  
  42aeee:	dec    ebx
  42aeef:	dec    DWORD PTR [ecx-0x73bfe9fc]
  42aef5:	pop    es
  42aef6:	mov    ebx,0x75
	...
  42af0b:	add    BYTE PTR [eax-0x6915051b],bl
  42af11:	sbb    cl,BYTE PTR [ebx]
  42af13:	jmp    FWORD PTR [ecx+0x1a14e31f]
  42af19:	mov    eax,ds:0xfdd25ffc
  42af1e:	rcr    BYTE PTR [ebx-0x21],0xc6
  42af22:	outs   dx,DWORD PTR ds:[esi]
  42af23:	leave  
  42af24:	push   cs
  42af25:	xchg   DWORD PTR [eax],eax
  42af27:	push   ebp
  42af28:	out    0xaf,eax
  42af2a:	jp     0x42af18
  42af2c:	push   eax
  42af2d:	xchg   ebx,eax
  42af2e:	add    BYTE PTR [eax],al
  42af30:	(bad)  
  42af32:	push   esp
  42af33:	push   0x3c
  42af35:	mov    eax,ds:0xaac7086e
  42af3a:	xchg   BYTE PTR [ebp-0x14],cl
  42af3d:	inc    edx
  42af3e:	jecxz  0x42af73
  42af40:	leave  
  42af41:	mov    eax,ds:0xa05931fc
  42af46:	xor    DWORD PTR gs:[ecx-0x5c],ecx
  42af4a:	mov    edx,0x2a260ce8
  42af4f:	inc    ebp
  42af50:	stos   BYTE PTR es:[edi],al
  42af51:	fs cld 
  42af53:	xor    edx,ebp
  42af55:	fs mov ebx,0xc87188a
  42af5b:	xor    BYTE PTR [eax-0x71],cl
  42af5e:	clc    
  42af5f:	inc    eax
  42af60:	pop    edi
  42af61:	mov    edi,edi
  42af63:	push   cs
  42af64:	sbb    cl,cl
  42af66:	cmp    al,BYTE PTR [ebx-0x148e882b]
  42af6c:	xchg   ebp,eax
  42af6d:	push   ds
  42af6e:	or     esi,DWORD PTR [eax+eax*1+0x0]
	...
  42af82:	add    BYTE PTR [eax],al
  42af84:	mov    ch,0x8b
  42af86:	(bad)  
  42af88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af89:	fisttp DWORD PTR [eax+0xe54bbe7]
  42af8f:	xchg   BYTE PTR [eax+0x61],dh
  42af92:	adc    esp,edi
  42af94:	stos   BYTE PTR es:[edi],al
  42af95:	push   ecx
  42af96:	cmp    bl,BYTE PTR [esi]
  42af98:	mov    ch,0x68
  42af9a:	popf   
  42af9b:	ud0    eax,DWORD PTR [ebx]
  42af9e:	cdq    
  42af9f:	out    dx,eax
  42afa0:	inc    eax
  42afa1:	hlt    
  42afa2:	pop    ss
  42afa3:	std    
  42afa4:	mov    ah,BYTE PTR [edx]
  42afa6:	pop    ss
  42afa7:	pop    es
  42afa8:	xlat   BYTE PTR ds:[ebx]
  42afa9:	push   0xac430cff
  42afae:	clc    
  42afaf:	sub    BYTE PTR [edx-0x7b],bh
  42afb2:	jecxz  0x42affb
  42afb4:	loope  0x42b02a
  42afb6:	mov    bh,0x72
  42afb8:	ret    
  42afb9:	shl    BYTE PTR [edi-0x62970a77],0x4
  42afc0:	pop    esi
  42afc1:	jb     0x42b00a
  42afc3:	addr16 aas 
  42afc5:	sub    edi,edi
  42afc7:	imul   edi,DWORD PTR [ebx+0x7288af29],0xa8e712fe
  42afd1:	push   cs
  42afd2:	adc    esp,edi
  42afd4:	cmp    BYTE PTR [ebp-0x76],ah
  42afd7:	imul   ecx,ebp,0x25428015
  42afdd:	cmp    DWORD PTR [esi],ecx
  42afdf:	adc    ah,BYTE PTR ds:0x6bffbf83
  42afe5:	inc    edx
  42afe6:	stos   BYTE PTR es:[edi],al
  42afe7:	mov    BYTE PTR [eax],0x0
	...
  42affa:	add    BYTE PTR [eax],al
  42affc:	idiv   DWORD PTR [eax-0x1]
  42afff:	push   edx
  42b000:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42b002:	and    bl,0xed
  42b005:	adc    eax,0xe8255b8
  42b00a:	add    al,0x68
  42b00c:	mov    ch,0x4
  42b00e:	ficom  DWORD PTR [esi]
  42b010:	int    0x8f
  42b012:	ins    BYTE PTR es:[edi],dx
  42b013:	das    
  42b014:	sar    BYTE PTR [edx+0x6e],1
  42b017:	sbb    al,0x37
  42b019:	ins    DWORD PTR es:[edi],dx
  42b01a:	pop    esp
  42b01b:	add    eax,0x1c1c6675
  42b020:	add    BYTE PTR [edx-0x3d],bl
  42b023:	adc    DWORD PTR [esi],esi
  42b025:	dec    edi
  42b026:	xor    eax,0xb2811cd0
  42b02b:	neg    DWORD PTR [esi]
  42b02d:	mov    eax,ds:0x7b050429
  42b032:	cld    
  42b033:	jnp    0x42afd9
  42b035:	iret   
  42b036:	jmp    0xf7a277b7
  42b03b:	ret    
  42b03c:	xor    BYTE PTR ds:0x7a7af561,0x16
  42b043:	adc    DWORD PTR [edi+0x6ac59c8b],esp
  42b049:	jns    0x42afe6
  42b04b:	push   ecx
  42b04c:	mov    ah,0x90
  42b04e:	jmp    0x51cbfc56
  42b053:	and    DWORD PTR [eax],ecx
  42b055:	jns    0x42b0b1
  42b057:	mov    ch,0x49
  42b059:	(bad)  
  42b05a:	in     eax,0x2e
  42b05c:	cmc    
  42b05d:	(bad)
	...
  42b071:	add    BYTE PTR [eax],al
  42b073:	add    BYTE PTR [ebp+0x52],bh
  42b076:	mov    ebp,0xd678721
  42b07b:	mov    ecx,0x43f67a2a
  42b080:	sbb    ecx,0x742dac8c
  42b086:	les    eax,FWORD PTR [ebp-0x4a]
  42b089:	(bad)  
  42b08a:	mov    ah,0x7e
  42b08c:	sahf   
  42b08d:	mov    bl,0x65
  42b08f:	or     DWORD PTR [esi],0x67
  42b092:	in     eax,0x3
  42b094:	mov    ch,0xde
  42b096:	mov    dh,0x2c
  42b098:	test   DWORD PTR [edx-0x2c],edi
  42b09b:	(bad)  
  42b09c:	mov    ebx,0x26e900cf
  42b0a1:	jnp    0x42b0b8
  42b0a3:	popa   
  42b0a4:	jecxz  0x42b05f
  42b0a6:	add    BYTE PTR [ebx-0x4a],dl
  42b0a9:	out    0x1,eax
  42b0ab:	push   ebp
  42b0ac:	out    dx,eax
  42b0ad:	mov    al,ds:0x7c92d4e8
  42b0b2:	sti    
  42b0b3:	pusha  
  42b0b4:	repz in eax,0x37
  42b0b7:	stos   BYTE PTR es:[edi],al
  42b0b8:	dec    ebx
  42b0b9:	xchg   ecx,eax
  42b0ba:	das    
  42b0bb:	test   eax,0xe9f57276
  42b0c0:	mov    dh,0x8f
  42b0c2:	push   edx
  42b0c3:	sbb    bl,BYTE PTR [edx]
  42b0c5:	into   
  42b0c6:	test   BYTE PTR [ecx],bh
  42b0c8:	xor    DWORD PTR [eax+0x70a5cb08],esi
  42b0ce:	mov    al,ds:0x8d7ba4b5
  42b0d3:	push   esp
  42b0d4:	xor    al,0x78
  42b0d6:	sti    
  42b0d7:	xchg   BYTE PTR [eax],al
	...
  42b0e9:	add    BYTE PTR [eax],al
  42b0eb:	add    dh,cl
  42b0ed:	xor    eax,0x8cb6e959
  42b0f2:	mov    gs,eax
  42b0f4:	mov    dh,0x8f
  42b0f6:	data16 aad 0x26
  42b0f9:	loopne 0x42b088
  42b0fb:	fdivr  QWORD PTR [edx+0x10]
  42b0fe:	enter  0xae5e,0x6c
  42b102:	mov    bl,0x57
  42b104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b105:	or     eax,0x84bcfc0
  42b10a:	ret    0x4e99
  42b10d:	or     edx,edx
  42b10f:	stos   BYTE PTR es:[edi],al
  42b110:	mov    dh,0x4
  42b112:	test   DWORD PTR [ebp-0x6604844d],esi
  42b118:	mov    esi,0xa527a61c
  42b11d:	or     eax,0x3883eec0
  42b122:	sub    ch,BYTE PTR ss:[ebx]
  42b125:	xchg   edx,eax
  42b126:	das    
  42b127:	sub    DWORD PTR [edx+edx*1-0x7b],ecx
  42b12b:	add    BYTE PTR [eax],bh
  42b12d:	mov    bh,ah
  42b12f:	push   DWORD PTR [ebp-0x52]
  42b132:	cli    
  42b133:	dec    esp
  42b135:	stc    
  42b136:	jle    0x42b0c6
  42b138:	out    0x88,eax
  42b13a:	cld    
  42b13b:	mov    BYTE PTR [ebx+edx*2+0xed67542],dh
  42b142:	jle    0x42b1c0
  42b144:	jmp    0xeb93add1
  42b149:	jbe    0x42b0de
  42b14b:	adc    ebx,esp
  42b14d:	xchg   ebx,eax
  42b14e:	xchg   DWORD PTR [ebp+0x0],eax
	...
  42b164:	call   0xbd42ae07
  42b169:	mov    BYTE PTR [esi],cl
  42b16b:	cld    
  42b16c:	jle    0x42b1ba
  42b16e:	sti    
  42b16f:	mov    cl,ah
  42b171:	and    esp,ebx
  42b173:	mov    eax,ds:0x84fc8949
  42b178:	dec    esp
  42b179:	pop    ss
  42b17a:	pop    ecx
  42b17b:	push   edi
  42b17c:	fst    DWORD PTR [esi]
  42b17e:	jecxz  0x42b138
  42b180:	add    eax,0x44000094
  42b185:	push   edi
  42b186:	mov    bl,0xff
  42b188:	jmp    0x42b17e
  42b18a:	sar    BYTE PTR cs:[esi+0x4c],1
  42b18e:	sti    
  42b18f:	mov    edx,0x9384
  42b194:	jns    0x4ccbbdc8
  42b19a:	sti    
  42b19b:	inc    BYTE PTR [edx-0x48c587f2]
  42b1a1:	shr    BYTE PTR [esi+0x30],1
  42b1a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b1a5:	inc    esi
  42b1a6:	imul   ecx,DWORD PTR [ebp-0x770173b0],0x51
  42b1ad:	sbb    al,0xfc
  42b1af:	jne    0x42b1dd
  42b1b1:	movd   DWORD PTR [ecx+ebp*4-0x78],mm7
  42b1b6:	cld    
  42b1b7:	push   eax
  42b1b8:	mov    ch,0xc
  42b1ba:	add    al,0x8b
  42b1bc:	jo     0x42b1b0
  42b1be:	mov    ah,0x8a
  42b1c0:	js     0x42b160
  42b1c2:	mov    ah,0xe7
  42b1c4:	jp     0x42b186
  42b1c6:	add    al,0x0
	...
  42b1dc:	xchg   BYTE PTR [ecx+0x24f80bd8],al
  42b1e2:	(bad)  
  42b1e3:	cld    
  42b1e4:	jmp    0x42b192
  42b1e6:	inc    ebx
  42b1e7:	jae    0x42b1d8
  42b1e9:	mov    eax,0x4e51720b
  42b1ee:	adc    dl,BYTE PTR [edx-0x4b]
  42b1f1:	data16 into 
  42b1f3:	mov    edi,0xc27fb213
  42b1f8:	and    DWORD PTR [eax+0x41],eax
  42b1fb:	add    esi,DWORD PTR [ebp+0x4eb7793]
  42b201:	call   0xd5db:0x6c3e54b2
  42b208:	imul   BYTE PTR [eax-0x32]
  42b20b:	fsub   st,st(6)
  42b20d:	mov    ecx,0xaab4059c
  42b212:	add    al,0x51
  42b214:	not    BYTE PTR ds:[edi]
  42b217:	popa   
  42b218:	adc    ch,BYTE PTR [ecx-0x1]
  42b21b:	push   eax
  42b21c:	push   es
  42b21d:	xchg   ecx,eax
  42b21e:	nop
  42b21f:	(bad)  
  42b220:	hlt    
  42b221:	push   0xedf887ae
  42b226:	pop    ss
  42b227:	push   ecx
  42b228:	adc    ch,BYTE PTR [ecx-0x1]
  42b22b:	aaa    
  42b22c:	loopne 0x42b20b
  42b22e:	cwde   
  42b22f:	pop    es
  42b230:	jg     0x42b1db
  42b232:	cwde   
  42b233:	add    esp,esi
  42b235:	test   al,0x16
  42b237:	add    dh,ah
  42b239:	test   al,0xbf
  42b23b:	pop    esp
  42b23c:	and    DWORD PTR [ecx],0x3c
  42b23f:	rol    BYTE PTR [eax],0x0
	...
  42b252:	add    BYTE PTR [eax],al
  42b254:	xor    cl,0x1b
  42b257:	jle    0x42b27a
  42b259:	nop
  42b25a:	cmp    DWORD PTR [ebx],eax
  42b25c:	mov    ch,0x8f
  42b25e:	mov    dh,0xb5
  42b260:	imul   ebp,ecx,0xc03780e9
  42b266:	or     cl,BYTE PTR [esi]
  42b268:	icebp  
  42b269:	fist   WORD PTR [ecx-0x54e4d1e]
  42b26f:	sbb    dh,BYTE PTR [ebx+0x5a]
  42b272:	repz or eax,0x4b51fd2f
  42b278:	sbb    edx,DWORD PTR [eax-0x1222fc17]
  42b27e:	xchg   edx,eax
  42b27f:	or     eax,0x4daec1c1
  42b284:	mov    ebx,0x3f83e976
  42b289:	or     al,0xf9
  42b28b:	or     al,0xa9
  42b28d:	jbe    0x42b2a8
  42b28f:	jg     0x42b288
  42b291:	pop    ss
  42b292:	sbb    DWORD PTR [ebp-0xec26367],esi
  42b298:	ror    BYTE PTR [edi-0x2cf8bb94],cl
  42b29e:	adc    DWORD PTR [eax],ebx
  42b2a0:	xor    DWORD PTR [esi-0x17],0xc
  42b2a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b2a5:	mov    edi,eax
  42b2a7:	ret    
  42b2a8:	jb     0x42b2ad
  42b2aa:	sub    al,0x10
  42b2ac:	cli    
  42b2ad:	jmp    0x3a54c9a
  42b2b2:	sub    al,0x6c
  42b2b4:	jmp    0x0:0x8f60de
	...
  42b2cb:	add    BYTE PTR [esi+0x76],cl
  42b2ce:	cld    
  42b2cf:	scas   eax,DWORD PTR es:[edi]
  42b2d0:	mov    edx,0x286e9cf
  42b2d5:	cld    
  42b2d6:	clc    
  42b2d7:	jle    0x42b310
  42b2d9:	mov    edi,0xdf310d4a
  42b2de:	je     0x42b277
  42b2e0:	cs addr16 mov al,0x55
  42b2e4:	and    dh,BYTE PTR [esi+0x0]
  42b2e7:	inc    edx
  42b2e8:	mov    bh,0xc1
  42b2ea:	shl    BYTE PTR [ebp+0x79],0x2
  42b2ee:	or     esp,DWORD PTR [edi]
  42b2f0:	je     0x42b2e8
  42b2f2:	mul    esp
  42b2f4:	and    al,0x2b
  42b2f6:	sub    DWORD PTR cs:[eax-0x2c],ecx
  42b2fa:	push   edi
  42b2fb:	and    BYTE PTR [esi+eiz*1+0x1],dh
  42b2ff:	adc    al,al
  42b301:	jae    0x42b338
  42b303:	rcl    DWORD PTR [ecx-0x5dfeff31],0x45
  42b30a:	cli    
  42b30b:	out    dx,al
  42b30c:	in     eax,0x35
  42b30e:	lahf   
  42b30f:	and    DWORD PTR [eax-0xd75ff31],ebx
  42b315:	push   edx
  42b316:	aas    
  42b317:	jmp    0x2b1e8571
  42b31c:	mov    ecx,0xca72554e
  42b321:	paddsb mm0,QWORD PTR ds:0x62e0ca1e
  42b328:	pop    ebx
  42b329:	lea    ecx,[ecx+0x4d07dd1c]
  42b32f:	cmc    
	...
  42b344:	bswap  edx
  42b346:	call   0x89c7f6bd
  42b34b:	and    al,0xd5
  42b34d:	bswap  eax
  42b34f:	call   0x101f7d47
  42b354:	lock rcr esp,1
  42b357:	retf   0xe7c
  42b35a:	inc    ebp
  42b35b:	jno    0x42b31b
  42b35d:	fcmovb st,st(1)
  42b35f:	outs   dx,DWORD PTR ds:[esi]
  42b360:	ror    DWORD PTR [ebp-0x42],0xf5
  42b364:	mov    dh,0xe0
  42b366:	xchg   DWORD PTR [ebp+0x35],ecx
  42b369:	imul   edx,DWORD PTR [edx+ebp*2],0x6a006513
  42b370:	inc    ebx
  42b371:	mov    DWORD PTR [eax],ecx
  42b373:	add    BYTE PTR [edx+0x3c],cl
  42b376:	mov    BYTE PTR [ebp+0x24],bh
  42b379:	retf   
  42b37a:	dec    DWORD PTR ds:[esi+ebx*1]
  42b37e:	sbb    al,0x8b
  42b380:	pop    ebx
  42b381:	jne    0x42b303
  42b383:	gs aam 0x90
  42b386:	jg     0x42b348
  42b388:	sub    BYTE PTR [ebp-0x78],bh
  42b38b:	dec    edi
  42b38c:	adc    al,0xf8
  42b38e:	outs   dx,BYTE PTR ds:[esi]
  42b38f:	clc    
  42b390:	pop    esp
  42b391:	inc    esp
  42b392:	sub    bh,BYTE PTR [ebx]
  42b394:	push   0xb445fc78
  42b399:	dec    ecx
  42b39a:	ds clc 
  42b39c:	pop    esi
  42b39d:	xchg   ebx,eax
  42b39e:	mov    BYTE PTR [ebp-0x14],dh
  42b3a1:	stc    
  42b3a2:	dec    esi
  42b3a3:	hlt    
  42b3a4:	pop    edi
  42b3a5:	test   DWORD PTR [edi],eax
  42b3a7:	sldt   WORD PTR [eax]
	...
  42b3ba:	add    BYTE PTR [eax],al
  42b3bc:	dec    esi
  42b3bd:	jbe    0x42b3b9
  42b3bf:	dec    esp
  42b3c1:	cmc    
  42b3c2:	add    eax,0xc778483
  42b3c7:	sub    BYTE PTR [ecx-0x75],0x0
  42b3cb:	add    BYTE PTR [edi+0xb0fef4e],dh
  42b3d1:	cwde   
  42b3d2:	sti    
  42b3d3:	call   FWORD PTR [ebp+esi*8+0x3719044d]
  42b3da:	pop    es
  42b3db:	nop/reserved BYTE PTR [ecx-0x5e730005]
  42b3e2:	mov    edx,0xc0905c00
  42b3e7:	psubusb mm1,mm4
  42b3ea:	sti    
  42b3eb:	dec    DWORD PTR [eax+edx*1+0x76]
  42b3ef:	dec    DWORD PTR [esp+eax*1+0x7]
  42b3f3:	neg    DWORD PTR ds:0x1c00008b
  42b3f9:	jns    0x42b47a
  42b3fb:	mov    cl,0x4c
  42b3fd:	nop
  42b3fe:	add    BYTE PTR [ebx-0x1e7a484b],cl
  42b404:	mov    ch,0x66
  42b406:	(bad)  
  42b407:	jg     0x42b3aa
  42b409:	imul   eax,DWORD PTR [esi],0xc2012542
  42b40f:	or     ebp,DWORD PTR [ebp+0x32]
  42b412:	mov    bh,0x47
  42b414:	mov    DWORD PTR [ebx-0x49],esp
  42b417:	inc    edi
  42b418:	adc    DWORD PTR [edi-0x7e],0xdb1ab9e7
  42b41f:	add    BYTE PTR [eax],0x0
	...
  42b432:	add    BYTE PTR [eax],al
  42b434:	or     eax,0x36148b6e
  42b439:	mov    ?,esp
  42b43b:	or     al,0x30
  42b43d:	loop   0x42b443
  42b43f:	add    BYTE PTR [ebp+0x76dcc4c7],dh
  42b445:	retfw  0xbd45
  42b449:	sti    
  42b44a:	lea    eax,[edx-0x77709f19]
  42b450:	jp     0x42b4c8
  42b452:	jp     0x42b4a0
  42b454:	mov    eax,ds:0xfa88cc51
  42b459:	jo     0x42b4d5
  42b45b:	dec    edx
  42b45c:	lods   eax,DWORD PTR ds:[esi]
  42b45d:	pop    esi
  42b45e:	aam    0x88
  42b460:	test   BYTE PTR [ebx+edi*2-0x23b232b8],0x88
  42b468:	neg    BYTE PTR [eax+0x7a]
  42b46b:	dec    eax
  42b46c:	mov    eax,ds:0xf689e41d
  42b471:	nop
  42b472:	cmp    BYTE PTR [edi-0x41f18f00],0xb5
  42b479:	js     0x42b47a
  42b47b:	jmp    eax
  42b47d:	jl     0x42b442
  42b47f:	(bad)  
  42b480:	jmp    0xb600c42a
  42b485:	dec    eax
  42b486:	(bad)  
  42b487:	dec    ecx
  42b489:	cmp    eax,0x8fbd407a
  42b48e:	outs   dx,BYTE PTR ds:[esi]
  42b48f:	mov    esi,0x86f306ae
  42b494:	cmp    al,0x84
  42b496:	fucom  st(4)
	...
  42b4ac:	xor    eax,0xd391f576
  42b4b1:	push   cs
  42b4b2:	daa    
  42b4b3:	por    mm3,mm1
  42b4b6:	fst    DWORD PTR [eax+0x7899e0bb]
  42b4bc:	js     0x42b441
  42b4be:	cdq    
  42b4bf:	(bad)  
  42b4c0:	or     DWORD PTR [eax+0x1b],ebp
  42b4c3:	pop    esp
  42b4c4:	add    DWORD PTR [ebx+0x6e],esi
  42b4c7:	mov    BYTE PTR [edx-0x4074d6f4],dh
  42b4cd:	jp     0x42b472
  42b4cf:	(bad)  
  42b4d0:	jmp    0x23a6:0x6683e972
  42b4d7:	rcr    cl,0x90
  42b4da:	pop    esi
  42b4db:	add    DWORD PTR [edx-0x3afa0a34],ebx
  42b4e1:	push   cs
  42b4e2:	adc    BYTE PTR fs:[esi-0x47fb997e],ch
  42b4e9:	jb     0x42b4bd
  42b4eb:	test   BYTE PTR [edi],ch
  42b4ed:	jae    0x42b4d8
  42b4ef:	mov    ?,WORD PTR [ecx-0x8345642]
  42b4f5:	jg     0x42b52b
  42b4f7:	add    eax,0xa9294fe4
  42b4fc:	lock dec eax
  42b4fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b4ff:	clc    
  42b500:	mov    al,al
  42b502:	test   eax,0x6edc881d
  42b507:	sbb    bl,bh
  42b509:	arpl   WORD PTR [ecx],si
  42b50b:	push   DWORD PTR [edx+0x72]
  42b50e:	ss mov dl,0x0
	...
  42b521:	add    BYTE PTR [eax],al
  42b523:	add    BYTE PTR [ecx],al
  42b525:	pop    es
  42b526:	add    al,0xfc
  42b528:	sub    eax,0x1a7f29ca
  42b52d:	cld    
  42b52e:	add    dh,ch
  42b530:	push   0x4af0e932
  42b535:	jb     0x42b532
  42b537:	shl    DWORD PTR [esi+0x1ef9008f],1
  42b53d:	adc    BYTE PTR [ebp-0x17],0xb6
  42b541:	fisttp WORD PTR [ebp+0x2a6ac2ac]
  42b547:	aas    
  42b548:	mov    ecx,0x72a4898f
  42b54d:	or     eax,0xfddbdc0
  42b552:	jge    0x42b591
  42b554:	or     DWORD PTR [ecx],ecx
  42b556:	inc    ebp
  42b557:	adc    esp,edi
  42b559:	cmovno esp,ebp
  42b55c:	mov    dh,0x8f
  42b55e:	out    0xea,eax
  42b560:	jno    0x42b52f
  42b562:	call   0xf9519ec9
  42b567:	icebp  
  42b568:	fisttp QWORD PTR [edi]
  42b56a:	xor    ebp,esp
  42b56c:	mov    dh,0x8f
  42b56e:	aaa    
  42b56f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b570:	stos   BYTE PTR es:[edi],al
  42b571:	add    DWORD PTR [ebx-0x48e353f],0x6a
  42b578:	jbe    0x42b504
  42b57a:	push   eax
  42b57b:	jb     0x42b524
  42b57d:	pminsw mm4,mm1
  42b580:	push   eax
  42b581:	xchg   ecx,eax
  42b582:	jmpw   0x10af
  42b586:	xchg   DWORD PTR [esi+0x0],esp
	...
  42b59c:	pop    ds
  42b59d:	(bad)  
  42b59e:	loopne 0x42b610
  42b5a0:	pop    ebx
  42b5a1:	ins    DWORD PTR es:[edi],dx
  42b5a2:	call   0xfbb674b6
  42b5a7:	test   BYTE PTR gs:[ebx-0x7046b37c],0x0
  42b5af:	sahf   
  42b5b0:	sub    ebp,DWORD PTR [ebp-0x79]
  42b5b3:	mov    edi,0xe9697250
  42b5b8:	into   
  42b5b9:	cmp    dl,0x0
  42b5bc:	cmp    ecx,DWORD PTR [eax-0xeb43f81]
  42b5c2:	mov    WORD PTR [ebx],es
  42b5c4:	pop    esp
  42b5c5:	(bad)  
  42b5c6:	std    
  42b5c7:	jne    0x42b5f9
  42b5c9:	hlt    
  42b5ca:	aad    0x6a
  42b5cc:	dec    esi
  42b5cd:	adc    edi,ebx
  42b5cf:	out    0xd6,eax
  42b5d1:	mov    esp,edi
  42b5d3:	jmp    DWORD PTR [eax+0x5840ccc]
  42b5d9:	mov    WORD PTR [eax],es
  42b5db:	add    BYTE PTR [ebx+0x1],bh
  42b5de:	fisttp WORD PTR [ebx+0x69ff12c2]
  42b5e4:	sbb    al,0x95
  42b5e6:	(bad)  
  42b5e8:	fild   DWORD PTR [edi-0xef43f81]
  42b5ee:	pusha  
  42b5ef:	add    ecx,DWORD PTR [ecx*4-0xc27a077]
  42b5f6:	inc    esp
  42b5f7:	or     BYTE PTR [ebp+0x31],dl
  42b5fa:	out    dx,eax
  42b5fb:	test   DWORD PTR [edi+0x500805],edx
	...
  42b611:	add    BYTE PTR [eax],al
  42b613:	add    bl,bl
  42b615:	bound  ebp,QWORD PTR [edi+0x12]
  42b618:	sbb    al,0x8d
  42b61a:	mov    eax,ebx
  42b61c:	push   ecx
  42b61d:	mov    ds:0x4e49377d,eax
  42b622:	retf   
  42b623:	push   eax
  42b624:	pop    sp
  42b626:	jecxz  0x42b681
  42b628:	or     BYTE PTR [ecx-0x44367404],0x80
  42b62f:	gs push 0x504d838b
  42b635:	cmp    cl,BYTE PTR [eax-0x44b19d38]
  42b63b:	add    BYTE PTR ds:0x9ce8c34f,dl
  42b641:	xchg   esi,eax
  42b642:	std    
  42b643:	call   DWORD PTR [eax]
  42b645:	int3   
  42b646:	or     al,0x85
  42b648:	mov    ch,0x1a
  42b64a:	add    al,0x0
  42b64c:	mov    ch,0xd3
  42b64e:	xchg   ecx,eax
  42b64f:	mov    edi,0xfd19a24d
  42b654:	pop    edx
  42b655:	std    
  42b656:	xchg   ecx,eax
  42b657:	fistp  QWORD PTR [esi]
  42b659:	fwait
  42b65a:	and    ch,al
  42b65c:	lock std 
  42b65e:	add    al,0xc6
  42b660:	clc    
  42b661:	aad    0x4
  42b663:	xchg   eax,eax
  42b665:	fidivr DWORD PTR [edi-0x3]
  42b668:	shr    DWORD PTR [ecx-0x7f],0x22
  42b66c:	mov    bh,0x66
  42b66e:	dec    DWORD PTR [eax+0xb0ce5b6]
  42b674:	stos   BYTE PTR es:[edi],al
  42b675:	in     al,0xe6
  42b677:	add    DWORD PTR [eax],eax
	...
  42b689:	add    BYTE PTR [eax],al
  42b68b:	add    BYTE PTR [ebp+0x142c666],dh
  42b691:	push   ecx
  42b692:	jp     0x42b6a2
  42b694:	mov    bh,0x66
  42b696:	dec    DWORD PTR [eax-0x41f59592]
  42b69c:	mov    ch,0x66
  42b69e:	call   FWORD PTR [edi]
  42b6a0:	mov    edx,0xe2fe15ea
  42b6a5:	gs jle 0x42b69f
  42b6a8:	test   eax,0xb4e77d61
  42b6ad:	push   bp
  42b6b0:	hlt    
  42b6b1:	repnz and dx,0x66
  42b6b6:	(bad)  
  42b6b7:	jmp    FWORD PTR [edi]
  42b6b9:	test   eax,0xcc7583ec
  42b6be:	cld    
  42b6bf:	hlt    
  42b6c0:	je     0x42b73b
  42b6c2:	out    dx,eax
  42b6c3:	jmp    DWORD PTR [edx-0x4bc40f54]
  42b6c9:	jge    0x42b64b
  42b6cb:	(bad)  
  42b6cc:	mov    ah,0x78
  42b6ce:	push   esp
  42b6d0:	je     0x42b74b
  42b6d2:	(bad)  
  42b6d4:	adc    BYTE PTR [eax-0x6ec1800e],0xe9
  42b6db:	add    esi,DWORD PTR ds:0xb80396ed
  42b6e1:	adc    al,0x93
  42b6e3:	add    esi,DWORD PTR [ebp-0x7fcf071]
  42b6e9:	sbb    al,0x34
  42b6eb:	push   ebp
  42b6ec:	dec    esp
  42b6ed:	outs   dx,DWORD PTR ds:[esi]
  42b6ee:	jb     0x42b70b
	...
  42b704:	pop    es
  42b705:	(bad)  
  42b706:	jmp    0x51a2e30e
  42b70b:	cmp    cl,BYTE PTR [ecx]
  42b70d:	outs   dx,BYTE PTR ds:[esi]
  42b70e:	pop    edx
  42b70f:	(bad)  
  42b710:	mov    dh,0xe2
  42b712:	out    0x99,al
  42b714:	mov    ah,0xce
  42b716:	pop    esp
  42b717:	jge    0x42b71d
  42b719:	xchg   ecx,eax
  42b71a:	jmp    0x99c64622
  42b71f:	cdq    
  42b720:	adc    bl,BYTE PTR [esp+edi*2]
  42b723:	fwait
  42b724:	or     DWORD PTR [edi+0x2a],ebp
  42b727:	cmp    dl,0x6e
  42b72a:	adc    DWORD PTR [esp+eax*2],edi
  42b72d:	outs   dx,BYTE PTR ds:[esi]
  42b72e:	sbb    al,BYTE PTR [eax+0x69639f32]
  42b734:	jmp    0x7c91:0xe182e96e
  42b73b:	lods   eax,DWORD PTR ds:[esi]
  42b73c:	das    
  42b73d:	and    eax,0x6ed106a9
  42b742:	xor    DWORD PTR [esi-0x36],ecx
  42b745:	outs   dx,BYTE PTR ds:[esi]
  42b746:	jmp    0xe2650466
  42b74b:	add    eax,0x551152f
  42b750:	mov    cl,0x6e
  42b752:	cmp    DWORD PTR [ecx+0x70],edi
  42b755:	mov    edi,0x6f05a0be
  42b75a:	cmp    al,0x10
  42b75c:	add    BYTE PTR [edi-0x2c],ch
  42b75f:	(bad)  
  42b760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b761:	iret   
  42b762:	add    cl,ch
  42b764:	inc    esi
  42b765:	clc    
  42b766:	or     BYTE PTR [ecx],dl
	...
  42b77c:	cld    
  42b77d:	pop    esp
  42b77e:	call   0xfbae6495
  42b783:	gs stc 
  42b785:	loope  0x42b796
  42b787:	sub    ch,BYTE PTR fs:[esi]
  42b78a:	call   0xfbaf750c
  42b78f:	jb     0x42b752
  42b791:	adc    edx,esi
  42b793:	hlt    
  42b794:	sahf   
  42b795:	jne    0x42b788
  42b797:	ja     0x42b749
  42b799:	imul   ecx,DWORD PTR [ebp+0x3576f6f4],0x55
  42b7a0:	mov    bl,0x6b
  42b7a2:	jmp    0xd26c8f
  42b7a7:	push   0xffffffb0
  42b7a9:	(bad)  
  42b7aa:	jne    0x42b79e
  42b7ac:	stos   DWORD PTR es:[edi],eax
  42b7ad:	and    DWORD PTR [edi+eax*2-0x7e479450],esp
  42b7b4:	mov    ecx,0x141008f
  42b7b9:	pop    ds
  42b7ba:	sti    
  42b7bb:	mov    dl,BYTE PTR cs:[ecx]
  42b7be:	push   0x506bb026
  42b7c3:	jb     0x42b778
  42b7c5:	ja     0x42b766
  42b7c7:	fs push 0xfffffff6
  42b7ca:	sti    
  42b7cb:	push   cs
  42b7cc:	mov    eax,0xde7cfbde
  42b7d1:	sbb    BYTE PTR [ebp-0x49442a3],al
  42b7d7:	cdq    
  42b7d8:	scas   al,BYTE PTR es:[edi]
  42b7d9:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b7db:	out    dx,eax
  42b7dc:	mov    ecx,0xf6c011
	...
  42b7f1:	add    BYTE PTR [eax],al
  42b7f3:	add    BYTE PTR [ebx+0x2e],cl
  42b7f6:	test   BYTE PTR [ecx-0x56d069bd],ch
  42b7fc:	dec    eax
  42b7fd:	push   ss
  42b7fe:	test   DWORD PTR [ebp-0x46],ebp
  42b801:	imul   edi,ebx,0x0
  42b804:	xor    eax,0x9cfffa83
  42b809:	out    0x7e,al
  42b80b:	scas   al,BYTE PTR es:[edi]
  42b80c:	inc    esi
  42b80d:	xchg   esp,eax
  42b80e:	cld    
  42b80f:	(bad)  
  42b810:	mov    WORD PTR [ecx-0x6766b6c0],ss
  42b816:	lds    eax,FWORD PTR [ebp+0x4f]
  42b819:	xchg   edx,eax
  42b81a:	mov    DWORD PTR [ebx],eax
  42b81c:	fisttp WORD PTR [eax+0x50015007]
  42b822:	pop    es
  42b823:	push   eax
  42b824:	loope  0x42b83b
  42b826:	mov    esi,DWORD PTR [ebx]
  42b828:	sbb    al,0x89
  42b82a:	push   edx
  42b82b:	mov    eax,ds:0xc084915c
  42b830:	arpl   bp,bp
  42b832:	jg     0x42b835
  42b834:	dec    esp
  42b835:	xchg   ecx,eax
  42b836:	xor    edi,edi
  42b838:	mov    eax,ds:0x83feefe5
  42b83d:	xchg   ebx,eax
  42b83e:	xor    dh,dh
  42b840:	xchg   esi,eax
  42b841:	sub    al,0x2e
  42b843:	nop
  42b844:	test   BYTE PTR [edx-0x50],dl
  42b847:	(bad)  
  42b848:	shr    DWORD PTR [edx],cl
  42b84a:	add    cl,0x18
  42b84d:	adc    ch,bh
  42b84f:	adc    BYTE PTR [esi],bh
  42b851:	xor    DWORD PTR [eax],0xffffffc0
  42b854:	sub    ch,dl
  42b856:	cli    
  42b857:	mov    WORD PTR [eax],es
	...
  42b869:	add    BYTE PTR [eax],al
  42b86b:	add    BYTE PTR [ecx],ah
  42b86d:	mov    ch,0x4a
  42b86f:	push   0xffffffdd
  42b871:	cmp    eax,DWORD PTR [esi-0x36baf73]
  42b877:	push   DWORD PTR [ecx+edx*4+0x0]
  42b87b:	add    BYTE PTR [ecx+eiz*1+0x4b],bl
  42b87f:	(bad)  
  42b880:	sbb    DWORD PTR [ecx-0x6f330001],edi
  42b886:	add    DWORD PTR [ebp-0x10],0x14
  42b88a:	(bad)  
  42b88b:	call   DWORD PTR [ebx-0x4aefa37a]
  42b891:	mov    dh,0x4
  42b893:	test   DWORD PTR [ebp-0x3d],esi
  42b896:	dec    edx
  42b897:	(bad)  
  42b898:	lock cs push esp
  42b89b:	(bad)  
  42b89c:	clc    
  42b89d:	push   cs
  42b89e:	push   esp
  42b89f:	push   ebx
  42b8a0:	loop   0x42b895
  42b8a2:	mov    esp,esi
  42b8a4:	cmp    DWORD PTR ds:0x8b7a50ff,0xffffffe0
  42b8ab:	sti    
  42b8ac:	enter  0x14ce,0x40
  42b8b0:	mov    ch,0x5
  42b8b2:	jns    0x42b890
  42b8b4:	cmp    BYTE PTR [esi],dh
  42b8b6:	cmove  esp,eax
  42b8b9:	call   DWORD PTR cs:0x3f4691
  42b8c0:	ss in  al,0x8
  42b8c3:	jne    0x42b866
  42b8c5:	pop    ds
  42b8c6:	jp     0x42b8d0
  42b8c8:	stos   BYTE PTR es:[edi],al
  42b8c9:	cli    
  42b8ca:	add    eax,0xe776b501
  42b8cf:	or     al,0x0
	...
  42b8e1:	add    BYTE PTR [eax],al
  42b8e3:	add    BYTE PTR [ecx],dl
  42b8e5:	(bad)  
  42b8e8:	outs   dx,BYTE PTR ds:[esi]
  42b8e9:	outs   dx,BYTE PTR ds:[esi]
  42b8ea:	add    cl,BYTE PTR [ebp+0x5d]
  42b8ed:	xchg   ecx,eax
  42b8ee:	int3   
  42b8ef:	or     edi,DWORD PTR [edx]
  42b8f1:	fadd   QWORD PTR [eax+eax*1]
  42b8f4:	mov    ch,0xf1
  42b8f6:	or     DWORD PTR [eax],0xc2df232e
  42b8fc:	jo     0x42b8af
  42b8fe:	add    eax,0x483fb687
  42b903:	hlt    
  42b904:	mov    dh,0x9e
  42b906:	cmp    DWORD PTR [ebp-0x17],0x49
  42b90a:	push   cs
  42b90b:	jg     0x42b90b
  42b90d:	xchg   edx,eax
  42b90e:	(bad)  
  42b90f:	sti    
  42b910:	ds xor esp,edi
  42b913:	or     eax,DWORD PTR [edx]
  42b915:	or     DWORD PTR ss:[eax-0x4b],ebp
  42b919:	jbe    0x42b91a
  42b91b:	aas    
  42b91c:	gs (bad) 
  42b91e:	loop   0x42b99a
  42b920:	cmc    
  42b921:	sbb    al,0x3c
  42b923:	fcomp  DWORD PTR [ebp-0x4afc289e]
  42b929:	push   ss
  42b92a:	mov    eax,ds:0x6c6fe88c
  42b92f:	int3   
  42b930:	mov    esi,0xb5037813
  42b935:	(bad)  
  42b936:	pop    esi
  42b937:	pusha  
  42b938:	imul   ebx,DWORD PTR [edi+0x63f08ca9],0x813a188e
  42b942:	data16 std 
  42b944:	mov    bh,0xdd
  42b946:	repz add BYTE PTR ds:[eax],al
	...
  42b95a:	add    BYTE PTR [eax],al
  42b95c:	jb     0x42b941
  42b95e:	out    dx,eax
  42b95f:	stc    
  42b960:	hlt    
  42b961:	xchg   ebx,eax
  42b962:	call   0x9ff973df
  42b967:	push   es
  42b968:	jae    0x42b979
  42b96a:	outs   dx,BYTE PTR ds:[esi]
  42b96b:	or     edx,edx
  42b96d:	jno    0x42b9ed
  42b96f:	or     al,0x28
  42b971:	shr    ebx,1
  42b973:	mov    WORD PTR [eax+0x63],?
  42b976:	ins    BYTE PTR es:[edi],dx
  42b977:	inc    ebp
  42b978:	and    ebp,DWORD PTR [ebx-0x24]
  42b97b:	not    edx
  42b97d:	pop    eax
  42b97e:	adc    DWORD PTR [ecx+0x22],edx
  42b981:	fwait
  42b982:	pop    esp
  42b983:	les    edi,FWORD PTR [ebx*8+0x1e00eb89]
  42b98a:	xor    eax,DWORD PTR [edx]
  42b98c:	pushw  0xffb4
  42b98f:	out    0x2c,eax
  42b991:	aad    0x4d
  42b993:	jmp    0x42b9a0
  42b995:	pop    esp
  42b996:	sbb    eax,DWORD PTR [edx]
  42b998:	cmp    eax,0x708c09dd
  42b99d:	pop    ds
  42b99e:	pop    esi
  42b99f:	push   eax
  42b9a0:	add    DWORD PTR [edi+0x37788c1e],ebx
  42b9a6:	jo     0x42ba20
  42b9a8:	sbb    DWORD PTR [ecx],ebx
  42b9aa:	add    BYTE PTR [edx+ecx*1+0x3d455da9],ah
  42b9b1:	xchg   esp,eax
  42b9b2:	cmp    DWORD PTR [ebp+ebp*4-0x1c],eax
  42b9b6:	add    al,0x22
  42b9b8:	jo     0x42b99e
  42b9ba:	push   es
  42b9bb:	sub    dh,BYTE PTR fs:[eax]
  42b9be:	call   0x42baa2
	...
  42b9d3:	add    dh,al
  42b9d5:	pop    DWORD PTR [eax]
  42b9d7:	ror    ah,cl
  42b9d9:	test   al,0x5d
  42b9db:	mov    ch,0x2
  42b9dd:	fld    DWORD PTR [edi+0x67d0f526]
  42b9e3:	mov    al,ds:0xe1731c99
  42b9e8:	pop    esi
  42b9e9:	icebp  
  42b9ea:	(bad)  
  42b9eb:	lahf   
  42b9ec:	mov    ah,0x14
  42b9ee:	rcr    BYTE PTR ds:0xcd4b12da,0x29
  42b9f5:	push   eax
  42b9f6:	addr16 test eax,0x28056ab1
  42b9fc:	ds (bad) 
  42b9fe:	cmp    al,0x3
  42ba00:	mov    eax,ds:0xe6494d1c
  42ba05:	mov    edi,0x6502b3e8
  42ba0a:	sti    
  42ba0b:	push   edx
  42ba0c:	mov    al,0x12
  42ba0e:	jge    0x42b9f1
  42ba10:	xor    esp,edx
  42ba12:	call   0x45fb6b79
  42ba17:	push   ebp
  42ba18:	mov    dh,0xd4
  42ba1a:	call   0x8be4489
  42ba1f:	out    0x39,al
  42ba21:	xchg   edx,eax
  42ba22:	cld    
  42ba23:	cs mov ah,0x77
  42ba26:	dec    eax
  42ba27:	es ins BYTE PTR es:[edi],dx
  42ba29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ba2a:	xchg   DWORD PTR [esi-0x19338856],esp
  42ba30:	mov    dh,0x8f
  42ba32:	data16 icebp 
  42ba34:	sub    edx,esp
  42ba36:	mov    al,ds:0x0
	...
  42ba4b:	add    BYTE PTR [edx*1-0x275bc3a9],ch
  42ba52:	int3   
  42ba53:	dec    bl
  42ba55:	adc    al,0x3f
  42ba57:	cmp    BYTE PTR [edi],al
  42ba59:	push   ebx
  42ba5a:	je     0x42ba61
  42ba5c:	fdivr  DWORD PTR [ebx+ebp*8]
  42ba60:	mov    edi,0x74a07518
  42ba65:	inc    BYTE PTR [esi]
  42ba67:	add    BYTE PTR [esp+edi*2+0x33d18d19],cl
  42ba6e:	call   0xd055fa
  42ba73:	inc    ebx
  42ba75:	stos   DWORD PTR es:[edi],eax
  42ba76:	add    DWORD PTR [edi-0x78],0x75
  42ba7a:	xchg   ebp,eax
  42ba7b:	subps  xmm1,XMMWORD PTR [ebp+0x16545f89]
  42ba82:	push   edi
  42ba83:	cmp    al,0x4b
  42ba85:	loop   0x42ba43
  42ba87:	call   0x39167a
  42ba8c:	cmovge esi,DWORD PTR [ebx]
  42ba8f:	inc    edi
  42ba90:	or     BYTE PTR [eax+eax*8+0x56f024f7],cl
  42ba97:	pop    ebx
  42ba98:	adc    eax,0x71000453
  42ba9d:	sbb    al,0xec
  42ba9f:	cmp    DWORD PTR [eax-0x3c],0x4b
  42baa3:	push   esi
  42baa4:	arpl   WORD PTR [edi*2+0x40d79708],bx
  42baab:	test   esp,ebx
  42baad:	jg     0x42ba33
  42baaf:	inc    edx
	...
  42bac4:	push   ds
  42bac5:	lea    eax,[eax]
  42bac7:	or     DWORD PTR [ebx-0x4b],0x0
  42bacb:	seto   BYTE PTR [edx+edi*8+0xf4dcff]
  42bad3:	add    ah,bl
  42bad5:	jl     0x42bb3f
  42bad7:	hlt    
  42bad8:	mov    ch,0x2b
  42bada:	(bad)  
  42badb:	inc    DWORD PTR [ebp-0x2227a535]
  42bae1:	jecxz  0x42bad1
  42bae3:	add    BYTE PTR [ebp-0x4a2b9d0b],dh
  42bae9:	in     eax,dx
  42baea:	out    dx,eax
  42baeb:	xchg   DWORD PTR [eax+0x7e],esi
  42baee:	dec    edi
  42baef:	xchg   DWORD PTR [ebx-0x4a37b6c8],eax
  42baf5:	fisttp WORD PTR [ecx-0x34]
  42baf8:	sub    al,0xcb
  42bafa:	aam    0xe8
  42bafc:	xor    BYTE PTR [edi-0x6],cl
  42baff:	sti    
  42bb00:	cmp    DWORD PTR [esi],esi
  42bb02:	or     eax,DWORD PTR [edi+ecx*4-0x39000089]
  42bb09:	ss mov edx,esi
  42bb0c:	add    DWORD PTR [edx+0x7f],ecx
  42bb0f:	cmp    dh,BYTE PTR [ebp+0x3540038b]
  42bb15:	mov    BYTE PTR ds:0x4575e900,al
  42bb1b:	out    0x64,eax
  42bb1d:	push   ebx
  42bb1e:	add    al,0x0
  42bb20:	mov    ch,0xf6
  42bb22:	jge    0x42bb29
  42bb24:	std    
  42bb25:	cmc    
  42bb26:	int3   
  42bb27:	cli    
	...
  42bb3c:	cmc    
  42bb3d:	jno    0x42bac7
  42bb3f:	iret   
  42bb40:	mov    ah,0x76
  42bb42:	inc    ecx
  42bb44:	js     0x42bb33
  42bb46:	add    al,0xe7
  42bb48:	in     eax,0xfb
  42bb4a:	dec    ecx
  42bb4b:	enter  0xa60d,0xed
  42bb4f:	cli    
  42bb50:	sbb    ch,bh
  42bb52:	dec    ecx
  42bb53:	in     al,0x38
  42bb55:	mov    dh,0xb
  42bb57:	test   BYTE PTR [eax+0x77],bl
  42bb5a:	(bad)  
  42bb5b:	inc    DWORD PTR [edx]
  42bb5d:	sub    DWORD PTR [ebx],ecx
  42bb5f:	xchg   eax,eax
  42bb61:	and    dl,BYTE PTR [ecx]
  42bb63:	inc    eax
  42bb64:	mov    ch,0x8f
  42bb66:	and    dh,BYTE PTR [edi-0x43]
  42bb69:	mov    esp,0x9c85d61a
  42bb6e:	sub    DWORD PTR [ebx-0x315890e],ecx
  42bb74:	into   
  42bb75:	ins    DWORD PTR es:[di],dx
  42bb77:	les    eax,FWORD PTR [eax+0x7c]
  42bb7a:	ins    BYTE PTR es:[edi],dx
  42bb7b:	dec    ecx
  42bb7c:	in     eax,dx
  42bb7d:	jbe    0x42bbc8
  42bb7f:	in     eax,dx
  42bb80:	mov    edi,0x38dc5e67
  42bb85:	dec    ebx
  42bb86:	pop    esp
  42bb87:	ret    0xe59c
  42bb8a:	call   0xc3c7092
  42bb8f:	push   0xffffff9b
  42bb91:	adc    al,0x24
  42bb93:	hlt    
  42bb94:	in     eax,0x66
  42bb96:	cmp    ch,BYTE PTR [eax]
  42bb98:	xor    cl,bh
  42bb9a:	adc    esp,ebp
  42bb9c:	popa   
  42bb9d:	and    dh,BYTE PTR [ebx+0xfe]
	...
  42bbb3:	add    BYTE PTR [ecx*8+0x676d82c9],ch
  42bbba:	xacquire xchg DWORD PTR [edi],ecx
  42bbbd:	xchg   ecx,eax
  42bbbe:	jmp    0xffed96c6
  42bbc3:	add    DWORD PTR [eax],ebp
  42bbc5:	int    0xb1
  42bbc7:	push   ebx
  42bbc8:	dec    esi
  42bbc9:	fisttp QWORD PTR [ebp-0xb989802]
  42bbcf:	out    0x4d,eax
  42bbd1:	sub    esi,DWORD PTR [edi]
  42bbd3:	std    
  42bbd4:	sbb    DWORD PTR ds:[eax+ebp*8],esp
  42bbd8:	mov    dl,0x67
  42bbda:	bound  ecx,QWORD PTR [esi]
  42bbdc:	xor    DWORD PTR [edx+0x1ab503e8],esp
  42bbe2:	stos   BYTE PTR es:[edi],al
  42bbe3:	sub    ecx,edx
  42bbe5:	dec    edx
  42bbe6:	push   cs
  42bbe7:	ret    
  42bbe8:	mov    BYTE PTR [eax+esi*2-0xe84fea0],cl
  42bbef:	jmp    0x42bc69
  42bbf1:	pop    ecx
  42bbf2:	add    BYTE PTR [edi],dh
  42bbf4:	sti    
  42bbf5:	sbb    BYTE PTR [ebp+0x35],al
  42bbf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bbf9:	dec    edi
  42bbfa:	mov    esp,eax
  42bbfc:	fisubr WORD PTR [eax+0xbb31545]
  42bc02:	jmp    edi
  42bc04:	mov    dh,0x8f
  42bc06:	mov    DWORD PTR [edx+eiz*8-0x44f6ba58],esp
  42bc0d:	adc    esp,ecx
  42bc0f:	jmp    0x7cca4bca
  42bc14:	retf   0x450e
  42bc17:	stc    
	...
  42bc2c:	xor    al,0xa3
  42bc2e:	mov    al,0xe9
  42bc30:	mov    ecx,0xb6e9ad0b
  42bc35:	pop    DWORD PTR [edi+0x80d66ed]
  42bc3b:	gs jle 0x42bbd8
  42bc3e:	test   BYTE PTR [ecx-0x5ff704f],cl
  42bc44:	sub    DWORD PTR [esi+0x8],0x9db6e6d
  42bc4b:	es aas 
  42bc4d:	xchg   ebx,eax
  42bc4e:	cmp    BYTE PTR [ecx+0x6e],ch
  42bc51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc52:	jne    0x42bbee
  42bc54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc55:	dec    edi
  42bc56:	mov    DWORD PTR [edx*2-0x347aba58],ebp
  42bc5d:	(bad)  
  42bc5e:	xchg   DWORD PTR [ecx+ebp*2],esi
  42bc61:	adc    al,0x4
  42bc63:	push   0xfd00a734
  42bc68:	jp     0x42bc78
  42bc6a:	add    BYTE PTR [ecx-0xf],ch
  42bc6d:	(bad)  
  42bc6e:	je     0x42bc8c
  42bc70:	cmp    al,0xd4
  42bc72:	lock jb 0x42bc4a
  42bc75:	and    BYTE PTR [eax-0x31],dl
  42bc78:	icebp  
  42bc79:	retf   
  42bc7a:	test   al,0xe
  42bc7c:	fistp  WORD PTR [eax]
  42bc7e:	inc    ebp
  42bc7f:	add    BYTE PTR [eax],ah
  42bc81:	fs adc eax,0xd1de74
  42bc87:	lea    edx,[ecx+0x3a]
  42bc8a:	mov    DWORD PTR [ebp+0x6c],eax
  42bc8d:	sbb    bl,BYTE PTR [ebp-0x4c]
	...
  42bca4:	gs out 0xb8,al
  42bca7:	(bad)  
  42bca8:	sbb    DWORD PTR [esi-0x5],ecx
  42bcab:	dec    esp
  42bcad:	xchg   ecx,eax
  42bcae:	call   0xf7a82258
  42bcb3:	mov    edx,DWORD PTR [ecx]
  42bcb5:	jp     0x42bc3b
  42bcb7:	ror    BYTE PTR [ecx-0x59],0x83
  42bcbb:	inc    ebp
  42bcbc:	mov    al,ds:0xc04589cb
  42bcc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bcc2:	inc    ebp
  42bcc3:	in     al,0xe
  42bcc5:	xor    eax,0x9408db85
  42bcca:	add    DWORD PTR [ebp+0x78],0x4b
  42bcce:	add    al,0x3
  42bcd0:	mov    edx,0x4c4583ce
  42bcd5:	fs xor al,0xb0
  42bcd8:	inc    ebx
  42bcd9:	jle    0x42bd4f
  42bcdb:	adc    cl,ah
  42bcdd:	mov    eax,DWORD PTR [ebx-0x83ed3b3]
  42bce3:	xor    al,0xd
  42bce5:	sbb    BYTE PTR [ebp-0xc],cl
  42bce8:	dec    edi
  42bce9:	pop    eax
  42bcea:	push   ecx
  42bceb:	call   0x39171e
  42bcf0:	pop    edi
  42bcf1:	dec    ecx
  42bcf2:	mov    DWORD PTR [ebp+0x24],ebx
  42bcf5:	sbb    BYTE PTR [ebp+0x8],bh
  42bcf8:	ret    
  42bcf9:	int    0xec
  42bcfb:	mov    ecx,DWORD PTR [ecx+0x3c45335f]
  42bd01:	xchg   esp,eax
  42bd02:	jp     0x42bd38
  42bd04:	xchg   ebx,eax
  42bd05:	arpl   di,si
  42bd07:	cmp    eax,DWORD PTR [eax]
	...
  42bd19:	add    BYTE PTR [eax],al
  42bd1b:	add    BYTE PTR [ebx-0x47],ah
  42bd1e:	jne    0x42bd2a
  42bd20:	mov    ch,0xbd
  42bd22:	jb     0x42bd18
  42bd24:	sbb    eax,0xafac6f9
  42bd29:	ret    0x851b
  42bd2c:	ficomp WORD PTR [ebx]
  42bd2e:	or     bl,bh
  42bd30:	and    BYTE PTR [edx-0x4b038b19],0xfc
  42bd37:	and    DWORD PTR [eax-0x16ba777e],ecx
  42bd3d:	fild   WORD PTR [esp+0x2c]
  42bd41:	push   ds
  42bd42:	daa    
  42bd43:	ret    0x8178
  42bd46:	inc    BYTE PTR [esi+0x7d889270]
  42bd4c:	fnstsw WORD PTR [esi+0x72]
  42bd4f:	leave  
  42bd50:	mov    ebx,0x9545835d
  42bd55:	icebp  
  42bd56:	jp     0x42bd48
  42bd58:	popf   
  42bd59:	ror    ch,0xfa
  42bd5c:	mov    ds:0x8dc871f3,al
  42bd61:	retf   0xfadf
  42bd64:	xchg   edx,eax
  42bd65:	lock inc ecx
  42bd67:	neg    DWORD PTR [esi+0x6d758860]
  42bd6d:	ds push edi
  42bd6f:	jecxz  0x42bdec
  42bd71:	sbb    eax,0x9512c032
  42bd76:	pop    ebx
  42bd77:	leave  
  42bd78:	ja     0x42bdec
  42bd7a:	call   DWORD PTR [esi+ebp*1+0x12]
  42bd7e:	test   esp,ebp
	...
  42bd94:	xchg   ebp,eax
  42bd95:	outs   dx,BYTE PTR ds:[esi]
  42bd96:	(bad)  
  42bd97:	push   DWORD PTR [esi]
  42bd99:	mov    edi,esp
  42bd9b:	add    dh,ah
  42bd9d:	test   BYTE PTR [edi+0x68],cl
  42bda0:	xchg   ebp,eax
  42bda1:	add    eax,0xb3730043
  42bda6:	out    dx,eax
  42bda7:	sti    
  42bda8:	xor    bh,BYTE PTR [ebx]
  42bdaa:	fwait
  42bdab:	push   cs
  42bdac:	jne    0x42bd3d
  42bdae:	jmp    0xa6879f57
  42bdb3:	add    esi,DWORD PTR [edx]
  42bdb5:	call   0x4160:0x8fd2db11
  42bdbc:	add    eax,0x1a084110
  42bdc1:	call   0x75e5:0x677a026e
  42bdc8:	mov    ds:0x66f3a4a8,al
  42bdcd:	mov    ch,0x1b
  42bdcf:	inc    edx
  42bdd0:	mov    ecx,0x321b958e
  42bdd5:	ret    0xfae1
  42bdd8:	bound  edx,QWORD PTR [ebx+0x64b9425c]
  42bdde:	jbe    0x42bdeb
  42bde0:	xchg   edx,eax
  42bde1:	fs cdq 
  42bde3:	jmp    0x42be3a
  42bde5:	xor    edx,esi
  42bde7:	cli    
  42bde8:	cmp    BYTE PTR [eax+0x70],dl
  42bdeb:	xor    cl,BYTE PTR gs:[edx-0x705abef0]
  42bdf2:	fld    DWORD PTR [esi-0x731a9fe8]
	...
  42be0c:	or     BYTE PTR [eax+0x56],bh
  42be0f:	ret    0xc532
  42be12:	icebp  
  42be13:	imul   edx,ebp,0x42
  42be16:	es add al,0x7e
  42be19:	jge    0x42bda0
  42be1b:	adc    eax,0x465e8ff5
  42be20:	cmc    
  42be21:	or     al,0xa9
  42be23:	or     bh,BYTE PTR [ecx]
  42be25:	dec    ecx
  42be26:	call   0xea3a732e
  42be2b:	add    esi,DWORD PTR [ebp-0x1f08fe81]
  42be31:	(bad)
  42be35:	lds    ebp,FWORD PTR [ebp+0x7276eb]
  42be3b:	jmp    0x9d8fc8f6
  42be40:	xor    ebp,ebp
  42be42:	enter  0x31e9,0xd5
  42be46:	sar    BYTE PTR [eax-0x533da7d5],0x4a
  42be4d:	nop
  42be4e:	mov    DWORD PTR [edx+ecx*2-0x3b03e88],esp
  42be55:	data16 test BYTE PTR [ecx],ch
  42be58:	scas   eax,DWORD PTR es:[edi]
  42be59:	or     edx,DWORD PTR [esi-0x16704918]
  42be5f:	data16 mov cl,0x8f
  42be62:	add    BYTE PTR [ebx+0x548dc6bb],dl
  42be68:	aam    0x5e
  42be6a:	sti    
  42be6b:	push   ss
  42be6c:	fimul  WORD PTR [edx+ecx*2]
  42be6f:	jmp    0x42be74
	...
  42be84:	mov    dh,0xa
  42be86:	lock adc DWORD PTR [ebx],esp
  42be89:	cmp    edx,edi
  42be8b:	inc    BYTE PTR [ebx+0x20ea6f8b]
  42be91:	bound  ebx,QWORD PTR [edx+0x5c]
  42be94:	xor    al,0x51
  42be96:	add    ecx,ebp
  42be98:	mov    dh,0xe9
  42be9a:	adc    al,0x39
  42be9c:	or     edx,DWORD PTR [eax+0x66c59c8d]
  42bea2:	sti    
  42bea3:	into   
  42bea4:	xor    BYTE PTR [edi-0x5],dl
  42bea7:	rcr    DWORD PTR [esi],1
  42bea9:	xor    edi,edx
  42beab:	mov    esi,0x497a4ffa
  42beb0:	cmp    BYTE PTR [esi-0x2],ah
  42beb3:	xor    ecx,ebp
  42beb5:	adc    al,0xb5
  42beb7:	jge    0x42bf18
  42beb9:	data16 sti 
  42bebb:	popa   
  42bebc:	and    al,0x8f
  42bebe:	add    cl,ch
  42bec0:	pop    esi
  42bec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bec2:	lods   eax,DWORD PTR ds:[esi]
  42bec3:	mov    cs,WORD PTR [esp+edx*1-0x7b]
  42bec7:	add    BYTE PTR [eax],al
  42bec9:	addr16 idiv edi
  42becc:	pushf  
  42becd:	adc    al,0xbe
  42becf:	push   eax
  42bed0:	aaa    
  42bed1:	mov    cl,0x7b
  42bed3:	call   FWORD PTR [edi]
  42bed5:	icebp  
  42bed6:	adc    ecx,DWORD PTR [ebp-0x2e0bf]
  42bedc:	jnp    0x42bf01
  42bede:	mov    eax,0xe88e1c00
  42bee3:	push   ds
  42bee4:	mov    DWORD PTR [eax-0x9],ebp
  42bee7:	lea    eax,[eax]
	...
  42bef9:	add    BYTE PTR [eax],al
  42befb:	add    BYTE PTR [ecx-0x44000861],dl
  42bf01:	mov    ebx,0x3a77c683
  42bf06:	lea    eax,[ebp-0x89920]
  42bf0c:	sbb    al,0x67
  42bf0e:	jne    0x42bf18
  42bf10:	dec    ecx
  42bf11:	loop   0x42beef
  42bf13:	cli    
  42bf14:	stos   DWORD PTR es:[edi],eax
  42bf15:	push   0x6d2e850
  42bf1a:	idiv   bh
  42bf1c:	push   ecx
  42bf1d:	dec    ebx
  42bf1e:	pop    es
  42bf1f:	xchg   ebp,eax
  42bf20:	mov    WORD PTR [edi],cs
  42bf22:	shl    BYTE PTR [ebp-0x6b],0x9c
  42bf26:	shl    BYTE PTR [esi+0x15],0xe1
  42bf2a:	fdiv   st(2),st
  42bf2c:	fwait
  42bf2d:	push   0x8d8deeb9
  42bf32:	add    BYTE PTR [ebp-0x1090df],cl
  42bf38:	jnp    0x42bf89
  42bf3a:	add    BYTE PTR [eax],al
  42bf3c:	int3   
  42bf3d:	aam    0x75
  42bf3f:	stc    
  42bf40:	pop    es
  42bf41:	mov    ds:0xc548be8,al
  42bf46:	jmp    0xc8f9e57
  42bf4b:	push   ecx
  42bf4c:	pushf  
  42bf4d:	or     BYTE PTR [ebp-0x68],bh
  42bf50:	jg     0x42bf9f
  42bf52:	call   0x2074bf
  42bf57:	push   DWORD PTR [ecx]
  42bf59:	aaa    
  42bf5a:	imul   edi,DWORD PTR [esi],0x30
  42bf5d:	fadd   QWORD PTR [ebx-0x6]
	...
  42bf74:	cmp    ah,dl
  42bf76:	xor    al,0xf2
  42bf78:	aas    
  42bf79:	mov    bl,0x2b
  42bf7b:	cwde   
  42bf7c:	sbb    eax,0x22faa386
  42bf81:	xor    DWORD PTR [ecx+eax*8+0x10f9f5b1],eax
  42bf88:	xchg   eax,ecx
  42bf8a:	xor    al,0xc0
  42bf8c:	xchg   ebx,eax
  42bf8d:	out    dx,eax
  42bf8e:	(bad)  
  42bf8f:	out    0x36,eax
  42bf91:	test   eax,0x2c2cfbf8
  42bf96:	out    dx,eax
  42bf97:	mov    cx,0x3aeb
  42bf9b:	lock test DWORD PTR [ebx+edi*8-0x74],ecx
  42bfa0:	cmp    BYTE PTR [ebx],bl
  42bfa2:	stc    
  42bfa3:	sti    
  42bfa4:	fisub  DWORD PTR [esi]
  42bfa6:	add    BYTE PTR [ebp-0x407830f],0x65
  42bfad:	mov    cs,edx
  42bfaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bfb0:	mov    ch,0x76
  42bfb2:	out    0x7c,eax
  42bfb4:	shl    BYTE PTR [ecx-0xd],0xe9
  42bfb8:	dec    ebx
  42bfb9:	pop    eax
  42bfba:	repz sti 
  42bfbc:	aas    
  42bfbd:	imul   esi,DWORD PTR [ebx],0x388b2921
  42bfc3:	sub    eax,0x40335b21
  42bfc8:	or     DWORD PTR [ebx+0x33],ebp
  42bfcb:	pop    edx
  42bfcc:	add    DWORD PTR [ebx+0x31],ebp
  42bfcf:	xlat   BYTE PTR ds:[ebx]
  42bfd0:	mov    ds,WORD PTR [ecx-0x52]
  42bfd3:	add    al,0x8e
  42bfd5:	pop    esp
  42bfd6:	scas   al,BYTE PTR es:[edi]
  42bfd7:	inc    BYTE PTR [eax]
	...
  42bfe9:	add    BYTE PTR [eax],al
  42bfeb:	add    BYTE PTR [edi+0x70],bl
  42bfee:	scas   al,BYTE PTR es:[edi]
  42bfef:	call   FWORD PTR [edi+0x74]
  42bff2:	scas   al,BYTE PTR es:[edi]
  42bff3:	add    edx,edi
  42bff5:	(bad)  
  42bff6:	outs   dx,BYTE PTR ds:[esi]
  42bff7:	jno    0x42bfa6
  42bff9:	pusha  
  42bffa:	adc    ecx,DWORD PTR [eax]
  42bffc:	dec    esi
  42bffd:	fabs   
  42bfff:	dec    esi
  42c000:	dec    esi
  42c001:	jp     0x42c018
  42c003:	adc    dh,ch
  42c005:	(bad)  
  42c006:	sbb    DWORD PTR [ebx],esi
  42c008:	jne    0x42c01e
  42c00a:	stos   BYTE PTR es:[edi],al
  42c00b:	in     al,dx
  42c00c:	mov    BYTE PTR [edx+0x72],bl
  42c00f:	div    DWORD PTR [ecx]
  42c011:	dec    edi
  42c012:	cmc    
  42c013:	sub    al,0xae
  42c015:	and    DWORD PTR [esi],esp
  42c017:	or     DWORD PTR ds:0x7d1bd58f,0xffffff90
  42c01e:	ins    DWORD PTR es:[edi],dx
  42c01f:	add    dh,BYTE PTR [edi+ecx*4+0xbae4be9]
  42c026:	je     0x42c02c
  42c028:	mov    ch,0x8f
  42c02a:	mov    cl,0x6f
  42c02c:	repnz (bad) 
  42c02e:	mov    esp,0x31d26a0b
  42c033:	add    eax,0x51ac9f7
  42c038:	xor    eax,0xbf70e764
  42c03d:	adc    ch,BYTE PTR [edi+esi*4-0x9fbce23]
  42c044:	mov    esi,0xbe810113
  42c049:	fldenv [ebx-0x77]
  42c04c:	sub    BYTE PTR [ecx+eax*1],bl
  42c04f:	sti    
	...
  42c064:	xchg   ecx,eax
  42c065:	pop    esi
  42c066:	jmp    0x9d40:0xdb88008a
  42c06d:	xchg   ecx,eax
  42c06e:	jmp    0x3203:0xe990b780
  42c075:	jecxz  0x42c054
  42c077:	mov    al,dl
  42c079:	xchg   DWORD PTR [eax+0x40],esi
  42c07c:	lods   eax,DWORD PTR ds:[esi]
  42c07d:	adc    al,0xb3
  42c07f:	jl     0x42c03b
  42c081:	mov    edi,0xe3c5b600
  42c086:	push   cs
  42c087:	sub    DWORD PTR [ecx+0x486cf016],edi
  42c08d:	mov    ecx,DWORD PTR [edx+0x8fb691]
  42c093:	fs cmc 
  42c095:	aas    
  42c096:	push   eax
  42c097:	add    eax,DWORD PTR [edi+0x40a4b167]
  42c09d:	pop    ebx
  42c09e:	xchg   DWORD PTR [ecx+ecx*1],ebp
  42c0a1:	fbld   TBYTE PTR [ebp-0x77]
  42c0a4:	mov    dh,0x8
  42c0a6:	dec    ebp
  42c0a7:	xchg   ecx,eax
  42c0a8:	mov    DWORD PTR [esi],edx
  42c0aa:	enter  0x752f,0x43
  42c0ae:	add    BYTE PTR [eax+0x75],dh
  42c0b1:	cmp    ebp,eax
  42c0b3:	and    edx,ebp
  42c0b5:	pop    ecx
  42c0b6:	sti    
  42c0b7:	test   BYTE PTR gs:[edx-0x70499b7b],0x0
  42c0bf:	ins    BYTE PTR es:[edi],dx
  42c0c0:	gs inc ebx
  42c0c2:	call   0xfb9ccb1c
  42c0c7:	inc    eax
	...
  42c0dc:	sbb    edx,DWORD PTR [eax-0x64b31700]
  42c0e2:	pop    ebx
  42c0e3:	mov    dh,0x3d
  42c0e5:	adc    eax,0x5ac3165c
  42c0ea:	jmpw   0x1b54
  42c0ee:	adc    eax,0xcfa899
  42c0f3:	push   0x72
  42c0f5:	mov    ecx,DWORD PTR [ebp-0x4a78594]
  42c0fb:	out    dx,al
  42c0fc:	cs adc al,0x6c
  42c0ff:	out    0xa0,al
  42c101:	pop    edx
  42c102:	lea    esp,[ebp+ebp*8+0x5a]
  42c106:	sti    
  42c107:	(bad)  
  42c108:	loope  0x42c0ff
  42c10a:	add    dh,cl
  42c10c:	adc    ecx,DWORD PTR [ecx+ecx*4-0x848cf00]
  42c113:	push   DWORD PTR [ebx]
  42c115:	outs   dx,BYTE PTR fs:[esi]
  42c117:	or     BYTE PTR [ebx],bl
  42c119:	fidiv  WORD PTR [eax-0x1]
  42c11c:	adc    esp,DWORD PTR [ebx+edi*8+0x0]
  42c120:	dec    esp
  42c121:	xchg   edx,eax
  42c122:	not    DWORD PTR ds:0x408eac
  42c128:	fistp  WORD PTR [ebx+0x1]
  42c12b:	psubusw mm4,QWORD PTR [edx+0x1033fff7]
  42c132:	mov    ebp,0xf764b370
  42c137:	add    BYTE PTR [ebx],dl
  42c139:	fsub   QWORD PTR [edi+edi*8]
  42c13c:	xchg   ebx,eax
  42c13d:	lea    eax,fs:[ebp+0x0]
	...
  42c154:	fcomp  DWORD PTR [edx-0x9]
  42c157:	dec    DWORD PTR [edx+ebp*2+0x46]
  42c15b:	xchg   esp,eax
  42c15c:	bound  esp,QWORD PTR [ecx+ebp*8+0x13]
  42c160:	jae    0x42c1c6
  42c162:	test   esi,0xe9006b49
  42c168:	out    0x62,al
  42c16a:	idiv   edi
  42c16c:	dec    edx
  42c16d:	arpl   WORD PTR [ebp+0x8],si
  42c170:	dec    ebx
  42c171:	arpl   WORD PTR ds:0xd1de74,dx
  42c177:	push   eax
  42c178:	out    dx,eax
  42c179:	push   ecx
  42c17a:	or     edi,0xffffffb4
  42c17d:	mov    cl,0xf4
  42c17f:	push   DWORD PTR [ebx-0x208a3ff1]
  42c185:	adc    al,0x45
  42c187:	aam    0xc4
  42c189:	cs in  al,0xfe
  42c18c:	mov    ds:0x9385f808,eax
  42c191:	out    dx,al
  42c192:	fldl2t 
  42c194:	fsub   QWORD PTR [edx-0x9]
  42c197:	jmp    DWORD PTR [ecx]
  42c199:	out    dx,al
  42c19a:	aam    0xe8
  42c19c:	mov    ch,0x52
  42c19e:	loopne 0x42c19a
  42c1a0:	sub    dl,0x42
  42c1a3:	clc    
  42c1a4:	mov    ah,0xe9
  42c1a6:	js     0x42c1c8
  42c1a8:	xchg   esp,eax
  42c1a9:	cwde   
  42c1aa:	and    eax,0xb2f3c866
  42c1af:	mov    esp,0x58f42e63
  42c1b4:	dec    ebp
  42c1b5:	fisubr DWORD PTR [ecx+0xfb]
	...
  42c1cb:	add    BYTE PTR [edx-0x1e],dl
  42c1ce:	jo     0x42c1ec
  42c1d0:	fild   WORD PTR [edi-0x78]
  42c1d3:	ret    
  42c1d4:	cs std 
  42c1d6:	out    0x65,al
  42c1d8:	jae    0x42c1ef
  42c1da:	hlt    
  42c1db:	test   ebp,esi
  42c1dd:	arpl   WORD PTR [esi+eax*4],ax
  42c1e0:	jae    0x42c229
  42c1e2:	xor    esi,DWORD PTR [edi]
  42c1e4:	test   eax,0xa0c07b72
  42c1e9:	push   0xffffff80
  42c1eb:	dec    ebp
  42c1ec:	or     eax,0xd93f8857
  42c1f1:	jns    0x42c1e8
  42c1f3:	mov    DWORD PTR [eax-0x7e3cc766],eax
  42c1f9:	pop    esp
  42c1fa:	pop    ebp
  42c1fb:	cmp    DWORD PTR [ebp+0x76872e22],ebp
  42c201:	push   esi
  42c202:	cmp    bl,al
  42c204:	imul   edx,DWORD PTR [eax-0x562c6a6],0xebb36619
  42c20e:	stos   BYTE PTR es:[edi],al
  42c20f:	in     al,0xc9
  42c211:	test   esp,esi
  42c213:	pop    eax
  42c214:	int    0xb
  42c216:	test   eax,0x7095bafb
  42c21b:	xor    BYTE PTR [esi],bh
  42c21d:	mov    ah,0xf4
  42c21f:	outs   dx,DWORD PTR ds:[esi]
  42c220:	fdecstp 
  42c222:	add    DWORD PTR [ebp-0x6f],0x6699e6f6
  42c229:	(bad)  
  42c22a:	jecxz  0x42c21f
  42c22c:	adc    dl,BYTE PTR [ecx+edi*8-0x22]
	...
  42c244:	(bad)  [eax]
  42c246:	es cmp dl,cl
  42c249:	push   esp
  42c24a:	push   ebp
  42c24b:	push   eax
  42c24c:	xor    eax,0x677e997
  42c251:	jmp    0xf3b3:0x932080da
  42c258:	pop    esi
  42c259:	mov    bh,0xc1
  42c25b:	inc    eax
  42c25c:	adc    ebx,DWORD PTR [edx+eiz*4-0xd]
  42c260:	loop   0x42c205
  42c262:	outs   dx,BYTE PTR ds:[esi]
  42c263:	retf   0xae5
  42c266:	sub    al,0xe0
  42c268:	in     eax,0x67
  42c26a:	(bad)  
  42c26b:	mov    dh,0x3f
  42c26d:	pop    esp
  42c26e:	enterw 0x98c1,0xa2
  42c273:	jb     0x42c24f
  42c275:	nop
  42c276:	test   eax,0x7de21e54
  42c27b:	sbb    DWORD PTR [eax+0x6d05cf73],0xb58c2e67
  42c285:	(bad)  
  42c286:	pop    esi
  42c287:	dec    ecx
  42c288:	sbb    DWORD PTR [esi-0x3021b81c],edx
  42c28e:	jmp    0xb49f820b
  42c293:	(bad)  
  42c295:	arpl   WORD PTR ds:0xc40fdef2,bp
  42c29b:	fbstp  TBYTE PTR [ebp-0x7f790f98]
  42c2a1:	push   edi
  42c2a2:	leave  
  42c2a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c2a4:	jno    0x42c2e2
  42c2a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c2a7:	add    eax,DWORD PTR [eax]
	...
  42c2b9:	add    BYTE PTR [eax],al
  42c2bb:	add    BYTE PTR ds:0x40f312da,dh
  42c2c1:	sub    DWORD PTR [ecx+0x6f],0xffffffcd
  42c2c5:	nop
  42c2c6:	je     0x42c2d1
  42c2c8:	sub    dl,bh
  42c2ca:	add    cl,al
  42c2cc:	mov    dh,0xde
  42c2ce:	or     dh,bh
  42c2d0:	in     eax,dx
  42c2d1:	push   edi
  42c2d2:	and    BYTE PTR [ebp-0x4b],bl
  42c2d5:	jb     0x42c2d9
  42c2d7:	imul   eax,DWORD PTR ds:0xad5c015f,0x7ed14dda
  42c2e1:	popa   
  42c2e2:	inc    ebp
  42c2e3:	shr    DWORD PTR [esi-0x7a],0x84
  42c2e7:	call   0xa7fb:0x62008fb1
  42c2ee:	ret    0x5a24
  42c2f1:	pop    ebx
  42c2f2:	test   BYTE PTR [ecx-0x9997633],ch
  42c2f8:	xor    eax,0x6131b4dd
  42c2fd:	or     DWORD PTR [ecx-0x3cecb872],ebp
  42c303:	sbb    DWORD PTR [ebx+0x2f22e78e],edx
  42c309:	aad    0xf8
  42c30b:	fldcw  WORD PTR [edx-0x2d05045e]
  42c311:	addr16 or al,0x92
  42c314:	add    al,0x57
  42c316:	xchg   DWORD PTR [ecx],edi
  42c318:	mov    esp,eax
  42c31a:	lock ins BYTE PTR es:[edi],dx
  42c31c:	call   0xb947a7
	...
  42c331:	add    BYTE PTR [eax],al
  42c333:	add    BYTE PTR [ecx-0x905ff71],dh
  42c339:	cwde   
  42c33a:	aas    
  42c33b:	adc    DWORD PTR [edi-0x67],ebp
  42c33e:	xchg   ch,ah
  42c340:	(bad)  
  42c341:	psubw  mm0,QWORD PTR [edi]
  42c344:	pop    esp
  42c345:	(bad)  
  42c346:	ret    0xa6ed
  42c349:	xchg   ecx,eax
  42c34a:	out    0xf0,eax
  42c34c:	ss pop ecx
  42c34e:	daa    
  42c34f:	pushf  
  42c350:	mov    edx,0x96f9044d
  42c355:	iret   
  42c356:	aaa    
  42c357:	add    BYTE PTR [edi+0x76],bl
  42c35a:	push   0xffffffe3
  42c35c:	(bad)  
  42c35d:	mov    cl,0x7b
  42c35f:	jnp    0x42c3cd
  42c361:	mov    es,WORD PTR [edi]
  42c363:	test   DWORD PTR [ebx],esi
  42c365:	xchg   ebx,eax
  42c366:	add    BYTE PTR [eax],al
  42c368:	out    0x8b,al
  42c36a:	lea    edi,[ebp+0x24]
  42c36d:	retf   
  42c36e:	call   0xf7a2f89f
  42c373:	mov    edx,DWORD PTR [ebx-0x3d]
  42c376:	bound  ecx,QWORD PTR [ecx]
  42c378:	xchg   esp,eax
  42c379:	cmp    edi,DWORD PTR [ecx-0x769fd556]
  42c37f:	inc    ebp
  42c380:	sbb    al,0x14
  42c382:	jge    0x42c374
  42c384:	dec    esp
  42c385:	pop    DWORD PTR [esp+eax*2-0x7cff71a3]
  42c38c:	mov    cl,0x3b
  42c38e:	add    BYTE PTR [esi+0x3b1b4c],bh
  42c394:	and    BYTE PTR [eax+0x15],0xa4
	...
  42c3ac:	push   cs
  42c3ad:	into   
  42c3ae:	add    BYTE PTR [esi+0x7d],ah
  42c3b1:	pop    edi
  42c3b2:	ret    0xc43
  42c3b5:	call   0xcd63843f
  42c3ba:	or     DWORD PTR ds:0x3b1970,0xffffff91
  42c3c1:	push   ss
  42c3c2:	je     0x42c3fb
  42c3c4:	sbb    edx,DWORD PTR [edi]
  42c3c6:	rcl    BYTE PTR [ecx+0x74],0xce
  42c3ca:	mov    ds:0xc0127bfe,al
  42c3cf:	je     0x42c397
  42c3d1:	nop
  42c3d2:	scas   eax,DWORD PTR es:[edi]
  42c3d3:	adc    eax,0x3b19a8
  42c3d8:	fist   WORD PTR [ecx+ecx*4]
  42c3db:	inc    ebp
  42c3dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c3dd:	adc    cl,dl
  42c3df:	je     0x42c397
  42c3e1:	in     eax,0x7b
  42c3e3:	cmp    al,0xb5
  42c3e5:	xor    BYTE PTR [edi],bl
  42c3e7:	outs   dx,DWORD PTR ds:[esi]
  42c3e8:	mov    dl,0xe
  42c3ea:	pop    ds
  42c3eb:	push   esi
  42c3ec:	sbb    esp,eax
  42c3ee:	sbb    BYTE PTR [eax-0x46],cl
  42c3f1:	mov    eax,ds:0x266ffc13
  42c3f6:	inc    DWORD PTR [eax-0x22]
  42c3f9:	lods   al,BYTE PTR ds:[esi]
  42c3fa:	jb     0x42c3de
  42c3fc:	jmp    0x42c46f
  42c3fe:	adc    ch,BYTE PTR [edi+eiz*4+0x6fb04a6]
  42c405:	outs   dx,DWORD PTR ds:[esi]
  42c406:	jl     0x42c447
  42c408:	test   eax,0xbe804cc
  42c40d:	push   eax
  42c40f:	sti    
	...
  42c424:	ds dec edi
  42c426:	cmp    bl,0xb2
  42c429:	jmp    0x3c5d:0x66b500b3
  42c430:	repz cwde 
  42c432:	jnp    0x42c3b9
  42c434:	push   ebp
  42c435:	stc    
  42c436:	out    dx,eax
  42c437:	sti    
  42c438:	iret   
  42c439:	dec    di
  42c43b:	sti    
  42c43c:	mov    al,ds:0xb5401696
  42c441:	in     eax,0xc3
  42c443:	or     al,0x38
  42c445:	hlt    
  42c446:	(bad)  
  42c448:	and    ah,dl
  42c44a:	dec    edi
  42c44b:	data16 mov ch,0xe9
  42c44e:	je     0x42c45c
  42c450:	cmp    al,0xfc
  42c452:	fdivp  st(2),st
  42c454:	or     bh,BYTE PTR [edx-0x3e529010]
  42c45a:	adc    dh,BYTE PTR [eax-0x60]
  42c45d:	es (bad) 
  42c45f:	jle    0x42c44e
  42c461:	addr16 jb 0x42c4dc
  42c464:	pop    edi
  42c465:	inc    eax
  42c466:	jp     0x42c41d
  42c468:	jno    0x42c40d
  42c46a:	lock sti 
  42c46c:	jge    0x42c43c
  42c46e:	jnp    0x42c418
  42c470:	ror    BYTE PTR [edi+0xaac5d22],cl
  42c476:	push   esp
  42c477:	movsx  ebx,BYTE PTR [eax+0x12]
  42c47b:	dec    ebx
  42c47c:	int    0xd9
  42c47e:	inc    ecx
  42c47f:	lock scas al,BYTE PTR es:[edi]
  42c481:	or     al,0x84
  42c483:	fbstp  TBYTE PTR [ebp+0xdb9404]
	...
  42c499:	add    BYTE PTR [eax],al
  42c49b:	add    BYTE PTR [edx],bh
  42c49d:	(bad)  
  42c49e:	fldcw  WORD PTR [ebx+0x3a9c8c9]
  42c4a4:	cmp    bl,BYTE PTR [edi-0xe]
  42c4a7:	dec    eax
  42c4a8:	add    BYTE PTR [esp+eiz*2-0x2e],ch
  42c4ac:	scas   al,BYTE PTR es:[edi]
  42c4ad:	sar    DWORD PTR [ecx-0x1b1d9377],cl
  42c4b3:	lods   al,BYTE PTR ds:[esi]
  42c4b4:	in     eax,dx
  42c4b5:	add    eax,0xd2670429
  42c4ba:	rol    DWORD PTR ds:0x896491e9,0xb9
  42c4c1:	pop    eax
  42c4c2:	stos   BYTE PTR es:[edi],al
  42c4c3:	out    dx,eax
  42c4c4:	dec    esi
  42c4c5:	loop   0x42c460
  42c4c7:	push   esi
  42c4c8:	sti    
  42c4c9:	mov    esi,0x12305739
  42c4ce:	and    eax,0x39583ef1
  42c4d3:	xor    esi,ebp
  42c4d5:	or     eax,DWORD PTR [eax+eiz*8+0x2f]
  42c4d9:	pop    eax
  42c4da:	jp     0x42c4e4
  42c4dc:	fwait
  42c4dd:	(bad)  
  42c4de:	loop   0x42c477
  42c4e0:	cmc    
  42c4e1:	mov    edi,0xbfbac466
  42c4e6:	push   ecx
  42c4e7:	popf   
  42c4e8:	aam    0x58
  42c4ea:	pop    edx
  42c4eb:	cmp    ecx,0xffffffa6
  42c4ee:	popa   
  42c4ef:	dec    ecx
  42c4f0:	mov    dl,0xc0
  42c4f2:	inc    ecx
  42c4f3:	add    eax,0xef425932
  42c4f8:	pusha  
  42c4f9:	addr16 push ecx
  42c4fb:	in     eax,dx
  42c4fc:	and    ebx,DWORD PTR [ecx+0x0]
  42c4ff:	add    BYTE PTR ss:[eax],al
	...
  42c512:	add    BYTE PTR [eax],al
  42c514:	retf   0xf0e1
  42c517:	inc    ecx
  42c518:	enter  0xfa18,0x26
  42c51c:	xor    edx,ebx
  42c51e:	pop    es
  42c51f:	jmp    0x8cc25861
  42c524:	into   
  42c525:	pop    ebx
  42c526:	sti    
  42c527:	xchg   esp,eax
  42c528:	xchg   edx,eax
  42c529:	push   0x5b9b2bdb
  42c52e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c530:	mov    ss,WORD PTR [ecx+0x6807b875]
  42c536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c537:	sti    
  42c538:	mov    ds:0x2a9845b,eax
  42c53d:	mov    WORD PTR [edi+0x2c],?
  42c540:	xchg   ecx,eax
  42c541:	push   esi
  42c542:	cmc    
  42c543:	sub    al,0x89
  42c545:	xor    BYTE PTR [esp+ebp*8+0x37],0xdf
  42c54a:	cmp    al,0xe8
  42c54c:	in     eax,dx
  42c54d:	mov    BYTE PTR [edi+0x78d6912a],al
  42c553:	in     eax,dx
  42c554:	mov    dh,0xdc
  42c556:	or     bl,BYTE PTR [edx]
  42c558:	jno    0x42c5d4
  42c55a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c55c:	pop    ebx
  42c55d:	or     al,0xc0
  42c55f:	adc    eax,0x914dd6ad
  42c564:	mov    dl,0x5a
  42c566:	jne    0x42c4f9
  42c568:	scas   eax,DWORD PTR es:[edi]
  42c569:	callw  0x28c1
  42c56d:	pop    ebx
  42c56e:	sti    
  42c56f:	jb     0x42c5de
  42c571:	push   edi
  42c572:	pop    ebx
  42c573:	pop    ss
  42c574:	outs   dx,BYTE PTR ds:[esi]
  42c575:	dec    eax
  42c576:	mov    esi,0xe5
	...
  42c58b:	add    BYTE PTR [esi-0x70aa7844],dh
  42c591:	int3   
  42c592:	sbb    BYTE PTR [edx-0x1e],ch
  42c595:	jnp    0x42c5e6
  42c597:	mov    edi,0xa4879f7f
  42c59c:	ret    0xe
  42c59f:	add    BYTE PTR [ebx+0x10],cl
  42c5a2:	jl     0x42c5aa
  42c5a4:	mov    ds:0xcc011e33,eax
  42c5a9:	xchg   edx,eax
  42c5aa:	cmp    BYTE PTR [esi],0xb9
  42c5ad:	push   esi
  42c5ae:	test   BYTE PTR [ebx*8+0xa8a0092],bl
  42c5b5:	mov    WORD PTR [eax+0x7d55dcfa],es
  42c5bb:	adc    BYTE PTR [ebp-0x497fff6e],bl
  42c5c1:	mov    ds:0x8b9b8707,eax
  42c5c6:	add    BYTE PTR [eax],al
  42c5c8:	pop    ss
  42c5c9:	rcr    BYTE PTR [eax],1
  42c5cb:	mov    edx,DWORD PTR [ebp-0x25722c5f]
  42c5d1:	fs jecxz 0x42c5db
  42c5d4:	or     al,0xa4
  42c5d6:	and    eax,0x48cf8a75
  42c5db:	cmp    edx,DWORD PTR [ebx*8-0x6de0090b]
  42c5e2:	pop    es
  42c5e3:	test   DWORD PTR [ebx-0x75],edi
  42c5e6:	add    BYTE PTR [eax],al
  42c5e8:	int3   
  42c5e9:	imul   esi,DWORD PTR [eax],0xc09f5875
  42c5ef:	jmp    0x42c5f1
	...
  42c601:	add    BYTE PTR [eax],al
  42c603:	add    BYTE PTR [ecx-0x2b],bh
  42c606:	inc    ebp
  42c607:	cld    
  42c608:	jl     0x42c66e
  42c60a:	jne    0x42c614
  42c60c:	aam    0xbe
  42c60e:	cld    
  42c60f:	(bad)  
  42c610:	fldenv [esi+0x0]
  42c613:	call   0x3a0f46
  42c618:	(bad)  
  42c619:	arpl   WORD PTR [ecx],ax
  42c61b:	seto   BYTE PTR [ecx+0x0]
  42c61f:	add    BYTE PTR [edi+eiz*4],bl
  42c622:	inc    ebp
  42c623:	adc    BYTE PTR [ebx],al
  42c625:	ud1    eax,DWORD PTR [eax]
  42c628:	or     al,0x92
  42c62a:	or     DWORD PTR [ebp-0x4b],0x6c
  42c62e:	jp     0x42c634
  42c630:	hlt    
  42c631:	lock cld 
  42c633:	xchg   BYTE PTR [ebp+0x64],ch
  42c636:	sbb    cl,bh
  42c638:	mov    dh,0x23
  42c63a:	adc    edx,DWORD PTR [ebx-0x7c]
  42c63d:	shl    BYTE PTR [ecx-0x42],1
  42c640:	shl    DWORD PTR [edi+esi*2-0x121d32bb],cl
  42c647:	je     0x42c5f6
  42c649:	jmp    0x42c60f
  42c64b:	or     esi,DWORD PTR [ecx]
  42c64d:	ret    
  42c64e:	add    al,0x0
  42c650:	mov    ch,0x1d
  42c652:	js     0x42c62c
  42c654:	popf   
  42c655:	scas   eax,DWORD PTR es:[edi]
  42c656:	dec    ecx
  42c657:	add    BYTE PTR [ebp+0x2e1c53e1],dh
  42c65d:	cmp    DWORD PTR [eax-0x28],edi
  42c660:	ds sub al,0xb
  42c663:	xchg   DWORD PTR [ebp+0x186bdb],esi
	...
  42c679:	add    BYTE PTR [eax],al
  42c67b:	add    BYTE PTR [ebx+0x2e1842e2],al
  42c681:	addr16 js 0x42c64c
  42c684:	sahf   
  42c685:	hlt    
  42c686:	jns    0x42c6d4
  42c688:	les    ecx,FWORD PTR [eax+ebx*1-0x10]
  42c68c:	sub    al,0xa4
  42c68e:	clc    
  42c68f:	mov    eax,esp
  42c691:	push   ss
  42c692:	js     0x42c709
  42c694:	lods   eax,DWORD PTR ds:[esi]
  42c695:	mov    bl,0x3c
  42c697:	add    DWORD PTR [ebp-0x5],ebx
  42c69a:	mov    esi,0xbfeb42fa
  42c69f:	je     0x42c669
  42c6a1:	icebp  
  42c6a2:	lds    eax,FWORD PTR [edi-0xf8d961b]
  42c6a8:	adc    al,BYTE PTR ss:[ecx]
  42c6ab:	outs   dx,DWORD PTR ds:[esi]
  42c6ac:	(bad)  
  42c6ad:	aad    0x72
  42c6af:	hlt    
  42c6b0:	sub    BYTE PTR [ebp+0x6b404ffe],ah
  42c6b6:	xor    BYTE PTR [eax+0x1d],dl
  42c6b9:	nop
  42c6ba:	das    
  42c6bb:	ret    0x54ff
  42c6be:	dec    esi
  42c6bf:	adc    al,BYTE PTR [edi-0x16c1a17c]
  42c6c5:	add    ah,BYTE PTR [ebx-0x22fd7aff]
  42c6cb:	xor    ch,cl
  42c6cd:	inc    ebp
  42c6ce:	sub    ch,ch
  42c6d0:	faddp  st(0),st
  42c6d2:	xor    dh,BYTE PTR [esi-0x33]
  42c6d5:	mov    ebp,0x7d79162a
  42c6da:	test   eax,0xed4b4203
  42c6df:	in     al,dx
	...
  42c6f4:	inc    eax
  42c6f5:	push   edi
  42c6f6:	add    DWORD PTR [esi+0x74],esp
  42c6f9:	push   ebp
  42c6fa:	or     bh,BYTE PTR [eax-0x10]
  42c6fd:	jae    0x42c76f
  42c6ff:	sub    edi,DWORD PTR [edx]
  42c701:	retf   0x78e1
  42c704:	mov    ch,0x2
  42c706:	jge    0x42c715
  42c708:	mov    es,WORD PTR [edx]
  42c70a:	ins    DWORD PTR es:[edi],dx
  42c70b:	sub    ecx,DWORD PTR [esi-0x510ce133]
  42c711:	adc    DWORD PTR [edi-0x66ab8116],esi
  42c717:	add    eax,0xbd2eb60e
  42c71c:	sub    esi,DWORD PTR [edi-0x17]
  42c71f:	xor    eax,0xebb46875
  42c724:	loopne 0x42c77d
  42c726:	shl    DWORD PTR [ecx],0x74
  42c729:	push   ebp
  42c72a:	stos   BYTE PTR es:[edi],al
  42c72b:	fistp  WORD PTR [ebx-0x46]
  42c72e:	outs   dx,BYTE PTR ds:[esi]
  42c72f:	fadd   st,st(2)
  42c731:	arpl   WORD PTR ds:0x5e87f07f,di
  42c737:	add    al,0x82
  42c739:	mov    ebp,0x8b9715e
  42c73e:	repz push edx
  42c740:	and    cl,BYTE PTR [ecx+edx*1+0x68]
  42c744:	xor    ecx,edi
  42c746:	add    cl,ch
  42c748:	xchg   ecx,eax
  42c749:	ret    0xc2f8
  42c74c:	dec    esi
  42c74d:	mov    esi,0x5173fc66
  42c752:	inc    ebp
  42c753:	pop    esi
  42c754:	mov    cl,0x67
  42c756:	push   cs
  42c757:	sub    eax,DWORD PTR [eax]
	...
  42c769:	add    BYTE PTR [eax],al
  42c76b:	add    bh,bl
  42c76d:	push   edi
  42c76e:	xchg   DWORD PTR [ecx],esi
  42c770:	xor    al,0x3c
  42c772:	or     ebp,DWORD PTR [ebp+0x2c]
  42c775:	pop    DWORD PTR [eax]
  42c777:	jmp    0x694f99d7
  42c77c:	pop    esp
  42c77d:	pop    eax
  42c77e:	add    BYTE PTR [esi+ebx*4+0x4c7420ed],dh
  42c785:	aaa    
  42c786:	pop    eax
  42c787:	adc    edi,edi
  42c789:	sub    ebx,edi
  42c78b:	push   ss
  42c78c:	sub    al,0xcd
  42c78e:	call   0xd978564c
  42c793:	pop    es
  42c794:	mov    cs,WORD PTR [eax+eax*8]
  42c797:	jne    0x42c745
  42c799:	xchg   BYTE PTR [ebx-0x783f9554],dh
  42c79f:	es loope 0x42c78b
  42c7a2:	xor    BYTE PTR [esi-0x4],al
  42c7a5:	fsubr  QWORD PTR [eax-0x5d99b2f]
  42c7ab:	(bad)  
  42c7ac:	repz fmul QWORD PTR [edx+eiz*2]
  42c7b0:	pop    esi
  42c7b1:	mov    ecx,0xd74f6c59
  42c7b6:	(bad)  
  42c7b7:	stc    
  42c7b8:	dec    edi
  42c7b9:	or     ecx,DWORD PTR [ebp-0x4f]
  42c7bc:	mov    bl,0x4a
  42c7be:	jg     0x42c780
  42c7c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c7c1:	ror    BYTE PTR [ebp+0x404a432],0xfe
  42c7c8:	loope  0x42c789
  42c7ca:	mov    DWORD PTR [eiz*1+0x51557],ebp
	...
  42c7e1:	add    BYTE PTR [eax],al
  42c7e3:	add    bh,al
  42c7e5:	iret   
  42c7e6:	add    BYTE PTR [eax],al
  42c7e8:	(bad)  
  42c7e9:	adc    cl,BYTE PTR [edi+edx*2]
  42c7ec:	mov    edi,ecx
  42c7ee:	test   al,0x50
  42c7f0:	scas   eax,DWORD PTR es:[edi]
  42c7f1:	adc    ax,0xe24c
  42c7f5:	into   
  42c7f6:	add    BYTE PTR [ebx+0x9825749],cl
  42c7fc:	mov    ebp,ecx
  42c7fe:	jecxz  0x42c801
  42c800:	loop   0x42c78b
  42c802:	push   es
  42c803:	mov    edx,DWORD PTR [ecx]
  42c805:	arpl   WORD PTR [ebx-0x3c],di
  42c808:	call   0xccd44c3
  42c80d:	(bad)
  42c811:	jno    0x42c7db
  42c813:	push   ecx
  42c814:	idiv   BYTE PTR [edi+0x53]
  42c817:	(bad)  
  42c818:	adc    DWORD PTR [esi+0x1],esp
  42c81b:	call   0x391441
  42c820:	pop    ss
  42c821:	inc    edi
  42c822:	test   ebx,ebx
  42c824:	mov    ecx,DWORD PTR [edi]
  42c826:	pop    esi
  42c827:	(bad)  
  42c828:	mov    ebx,0x9b458265
  42c82d:	enter  0x5b56,0xd5
  42c831:	dec    esp
  42c832:	or     BYTE PTR [eax],al
  42c834:	and    ecx,edx
  42c836:	in     al,dx
  42c837:	sub    DWORD PTR [eax+0x7b],0x4b
  42c83b:	push   esi
  42c83c:	ret    
  42c83d:	aam    0xf0
  42c83f:	push   0x62
  42c841:	rcl    edx,cl
  42c843:	pop    edx
  42c844:	aad    0xe2
  42c846:	hlt    
  42c847:	mov    eax,DWORD PTR [eax]
	...
  42c859:	add    BYTE PTR [eax],al
  42c85b:	add    BYTE PTR ds:0x7b72eaa4,cl
  42c861:	shl    DWORD PTR [eax],cl
  42c863:	cmp    ecx,DWORD PTR [esi]
  42c865:	fstp   DWORD PTR [ecx]
  42c867:	cmp    eax,DWORD PTR [ecx-0x4deb90a1]
  42c86d:	aam    0x7d
  42c86f:	adc    BYTE PTR [edx-0x4afb872e],dh
  42c875:	jae    0x42c886
  42c877:	sub    DWORD PTR [eax-0x233dfb04],esp
  42c87d:	jae    0x42c86f
  42c87f:	outs   dx,DWORD PTR ds:[esi]
  42c880:	adc    al,0x16
  42c882:	mov    edi,0xff6726e9
  42c887:	push   DWORD PTR [esi]
  42c889:	daa    
  42c88a:	inc    BYTE PTR [esi-0x3d1582fd]
  42c890:	jo     0x42c843
  42c892:	add    al,0x89
  42c894:	cmp    BYTE PTR [eax+0x3be17d77],0xf8
  42c89b:	push   edx
  42c89c:	ss test al,0xfe
  42c89f:	dec    edi
  42c8a0:	int    0x3f
  42c8a2:	mov    edi,0x3beed2fa
  42c8a7:	clc    
  42c8a8:	fisubr WORD PTR [ebx-0x7c]
  42c8ab:	gs mov ebp,0x41fb7a67
  42c8b1:	sbb    eax,0x67ad7d84
  42c8b6:	imul   edx,DWORD PTR [eax],0x38
  42c8b9:	sub    al,0xeb
  42c8bb:	push   eax
  42c8bc:	xor    BYTE PTR [edi+eiz*8],ah
  42c8bf:	push   eax
	...
  42c8d4:	(bad)  
  42c8d5:	retf   0xfbe6
  42c8d8:	xchg   edx,eax
  42c8d9:	out    dx,al
  42c8da:	arpl   sp,si
  42c8dc:	xor    BYTE PTR [edx+0x6b],ah
  42c8df:	xor    DWORD PTR [esi],esi
  42c8e1:	in     al,dx
  42c8e2:	in     al,dx
  42c8e3:	add    BYTE PTR [edx-0x4afed216],ch
  42c8e9:	data16 jl 0x42c961
  42c8ec:	mov    ebp,0x5f43ab3
  42c8f1:	fdivr  QWORD PTR [edx]
  42c8f3:	clc    
  42c8f4:	add    eax,0x52107412
  42c8f9:	xchg   esp,eax
  42c8fa:	clc    
  42c8fb:	push   ecx
  42c8fc:	dec    edx
  42c8fd:	pushf  
  42c8fe:	hlt    
  42c8ff:	call   0xe8e758a2
  42c904:	ds or  al,0xa9
  42c907:	clc    
  42c908:	ss js  0x42c8f3
  42c90b:	add    esi,DWORD PTR [ebp+0x1af00c04]
  42c911:	lea    ebp,[esi+0x6e]
  42c914:	lods   eax,DWORD PTR ds:[esi]
  42c915:	jmp    0x87e82f80
  42c91a:	loop   0x42c99a
  42c91c:	push   edi
  42c91d:	nop
  42c91e:	jmp    0x6f3e5626
  42c923:	inc    ebx
  42c924:	mov    ch,0x50
  42c926:	aam    0xf3
  42c928:	fnsave [ebx+edi*1]
  42c92b:	call   0xea93d61e
  42c930:	push   0x30c3f68d
  42c935:	push   eax
  42c936:	jmp    0x0:0x7b
	...
  42c949:	add    BYTE PTR [eax],al
  42c94b:	add    ah,bl
  42c94d:	(bad)
  42c951:	retf   0xf8dd
  42c954:	inc    ebx
  42c955:	outs   dx,DWORD PTR ds:[esi]
  42c956:	jmp    0x9e477e5e
  42c95b:	cmovo  ebx,DWORD PTR [ebx-0x73d0e3d5]
  42c962:	out    0x29,al
  42c964:	mov    ds:0x36f7fdd3,al
  42c969:	inc    ebx
  42c96a:	jmp    0x2a477e72
  42c96f:	fcmovnbe st,st(4)
  42c971:	adc    bl,ch
  42c973:	out    0x2c,eax
  42c975:	retf   0x80f9
  42c978:	jne    0x42c8fa
  42c97a:	gs stos BYTE PTR es:[edi],al
  42c97c:	mov    ch,0x8f
  42c97e:	jmp    0x56937169
  42c983:	adc    al,0x5
  42c985:	push   ecx
  42c986:	fdiv   QWORD PTR [edi]
  42c988:	(bad)  
  42c989:	iret   
  42c98a:	jmp    0xcf8109
  42c98f:	sub    al,0xa1
  42c991:	rol    ah,1
  42c993:	fstp   QWORD PTR [ebx-0x26]
  42c996:	hlt    
  42c997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c998:	les    edx,FWORD PTR [edi+0x50]
  42c99b:	sahf   
  42c99c:	(bad)
  42c9a0:	mov    cl,0x8
  42c9a2:	inc    edx
  42c9a3:	in     eax,0x9f
  42c9a5:	enter  0xd214,0x5e
  42c9a9:	rol    ah,1
  42c9ab:	in     eax,dx
  42c9ac:	imul   ecx,DWORD PTR [eax],0xd947
	...
  42c9c2:	add    BYTE PTR [eax],al
  42c9c4:	mov    bh,0x47
  42c9c6:	xchg   edi,esp
  42c9c8:	jg     0x42c9a4
  42c9ca:	adc    dl,ch
  42c9cc:	cmp    BYTE PTR [eax+0x44],dl
  42c9cf:	push   ebp
  42c9d0:	mov    BYTE PTR [edi+0x7da2fcfb],bh
  42c9d6:	inc    eax
  42c9d7:	jmp    0x464f1513
  42c9dc:	data16 jg 0x42c9c7
  42c9df:	inc    ebx
  42c9e0:	sbb    edx,DWORD PTR [ebp-0x5]
  42c9e3:	pusha  
  42c9e4:	inc    esi
  42c9e5:	jg     0x42c970
  42c9e7:	mov    dl,0xb2
  42c9e9:	dec    ebp
  42c9ea:	inc    ebp
  42c9eb:	es mov al,0x68
  42c9ee:	pop    ebx
  42c9ef:	push   0x1c
  42c9f1:	dec    eax
  42c9f2:	add    BYTE PTR [ebx+ecx*8+0x1b620216],bl
  42c9f9:	xchg   esp,eax
  42c9fa:	xchg   DWORD PTR [edx-0x6907893a],esi
  42ca00:	mov    bh,0x57
  42ca02:	push   ecx
  42ca03:	add    esi,esi
  42ca05:	or     bh,dl
  42ca07:	out    dx,al
  42ca08:	add    ebp,edx
  42ca0a:	clc    
  42ca0b:	ins    BYTE PTR es:[edi],dx
  42ca0c:	jbe    0x42c9d2
  42ca0e:	cmp    esi,DWORD PTR [esi]
  42ca10:	out    dx,al
  42ca11:	addr16 call 0xd2c8c0
  42ca17:	pusha  
  42ca18:	cmc    
  42ca19:	inc    ebx
  42ca1a:	xchg   DWORD PTR [eax],eax
  42ca1c:	je     0x42c9e8
  42ca1e:	pop    ebp
  42ca1f:	sbb    bh,al
  42ca21:	xchg   ecx,eax
  42ca22:	xor    DWORD PTR [ebp+0x68],0xffffffc8
  42ca26:	dec    esp
  42ca27:	cmp    BYTE PTR [eax],al
	...
  42ca39:	add    BYTE PTR [eax],al
  42ca3b:	add    BYTE PTR [ebp+0x6b],cl
  42ca3e:	out    0xbd,al
  42ca40:	adc    dh,BYTE PTR [esi]
  42ca42:	test   al,al
  42ca44:	enter  0x8398,0x6
  42ca48:	pop    ds
  42ca49:	xchg   edx,eax
  42ca4a:	dec    edi
  42ca4b:	dec    ecx
  42ca4d:	cmp    edx,DWORD PTR [eax-0x1]
  42ca50:	stc    
  42ca51:	xchg   BYTE PTR [esi],cl
  42ca53:	inc    eax
  42ca54:	sbb    al,0x92
  42ca56:	xor    ecx,DWORD PTR [ebx+0xcc4121a]
  42ca5c:	pop    edx
  42ca5d:	dec    edi
  42ca5e:	dec    BYTE PTR [ecx]
  42ca60:	dec    ebx
  42ca61:	int3   
  42ca62:	xor    edi,edi
  42ca64:	or     DWORD PTR [ebx],edi
  42ca66:	call   0xf7780cf2
  42ca6b:	mov    bl,BYTE PTR [ecx]
  42ca6d:	ss push edi
  42ca6f:	pop    esi
  42ca70:	pop    ss
  42ca71:	or     al,0xba
  42ca73:	adc    al,0xdc
  42ca75:	fild   WORD PTR [ebx+0x20665fec]
  42ca7b:	push   ebx
  42ca7c:	sub    al,BYTE PTR [edx-0x48b8a840]
  42ca82:	or     BYTE PTR [ecx+0x45896e59],cl
  42ca88:	mov    ah,0x7b
  42ca8a:	aas    
  42ca8b:	sbb    al,0x83
  42ca8d:	int3   
  42ca8e:	retf   
  42ca8f:	add    DWORD PTR [edx+edx*4-0x363fba77],ecx
  42ca96:	outs   dx,DWORD PTR ds:[esi]
  42ca97:	sbb    BYTE PTR [edi-0x58cc1341],bl
  42ca9d:	xor    eax,0x86e
	...
  42cab2:	add    BYTE PTR [eax],al
  42cab4:	pop    es
  42cab5:	fimul  WORD PTR [edx+ebp*2]
  42cab8:	fs fucomi st,st(0)
  42cabb:	mov    bh,0xb5
  42cabd:	push   esp
  42cabe:	in     eax,0xfb
  42cac0:	cmp    eax,edi
  42cac2:	hlt    
  42cac3:	cmp    DWORD PTR [edx],0x37
  42cac6:	(bad)  
  42cac7:	call   DWORD PTR [edx-0x7a]
  42caca:	cld    
  42cacb:	xchg   bl,ah
  42cacd:	xor    al,0x59
  42cacf:	adc    dl,ch
  42cad1:	push   eax
  42cad2:	lahf   
  42cad3:	in     al,dx
  42cad4:	cmp    dh,ch
  42cad6:	jg     0x42ca98
  42cad8:	ret    0x77b4
  42cadb:	add    DWORD PTR [ebp-0x36bd87c8],esi
  42cae1:	push   edi
  42cae2:	inc    edx
  42cae3:	lock aam 0x73
  42cae6:	lock xchg DWORD PTR [ebx+0x68],esi
  42caea:	jbe    0x42cb31
  42caec:	or     DWORD PTR [ecx-0x454dfd14],edi
  42caf2:	int    0x0
  42caf4:	mov    ch,0x38
  42caf6:	js     0x42caf7
  42caf8:	aaa    
  42caf9:	mov    al,0xfa
  42cafb:	or     dh,BYTE PTR [edi]
  42cafd:	enter  0x4,0xb5
  42cb01:	mov    eax,ds:0xbdaafc3b
  42cb06:	jge    0x42cb08
  42cb08:	mov    ch,0x38
  42cb0a:	hlt    
  42cb0b:	mov    dl,0x7e
  42cb0d:	cmp    al,0xed
  42cb0f:	shr    DWORD PTR [ecx-0x2b7fadfc],0x3b
  42cb16:	hlt    
  42cb17:	mov    cl,0x0
	...
  42cb29:	add    BYTE PTR [eax],al
  42cb2b:	add    BYTE PTR [esi+eiz*4-0x39],bh
  42cb2f:	pop    ss
  42cb30:	jl     0x42caec
  42cb32:	fucomip st,st(0)
  42cb34:	ss js  0x42cb5b
  42cb37:	or     esp,DWORD PTR [edx-0x80]
  42cb3a:	ja     0x42cb89
  42cb3c:	xchg   ebp,eax
  42cb3d:	mov    edx,0x29030aec
  42cb42:	add    al,0x7f
  42cb45:	add    BYTE PTR [eax+0x6],al
  42cb48:	add    BYTE PTR [eax-0x5c191ad1],dl
  42cb4e:	ins    BYTE PTR es:[edi],dx
  42cb4f:	inc    eax
  42cb50:	mov    bh,0x4c
  42cb52:	pop    edx
  42cb53:	adc    al,0x30
  42cb55:	retf   
  42cb56:	rcl    DWORD PTR [ebx+0x4d],1
  42cb59:	aad    0x5a
  42cb5b:	in     al,0x4e
  42cb5d:	adc    ecx,eax
  42cb5f:	add    cl,cl
  42cb61:	jg     0x42cbc1
  42cb63:	dec    esi
  42cb64:	lods   eax,DWORD PTR ds:[esi]
  42cb65:	sbb    bl,BYTE PTR [eax+esi*8]
  42cb68:	in     al,0x1a
  42cb6a:	xor    al,0xf4
  42cb6c:	test   BYTE PTR [esp+edx*1-0x1c],cl
  42cb70:	xor    bl,BYTE PTR [ecx+0x39]
  42cb73:	in     eax,0xa8
  42cb75:	inc    edi
  42cb76:	pop    esi
  42cb77:	sbb    DWORD PTR ds:[eax],edi
  42cb7a:	xor    edi,esp
  42cb7c:	push   cs
  42cb7d:	dec    ebp
  42cb7e:	gs ret 
  42cb80:	adc    DWORD PTR [eax+0x4d193e72],0x903debf4
  42cb8a:	imul   eax,DWORD PTR [ebx],0xa66f37b5
	...
  42cba4:	out    dx,eax
  42cba5:	dec    esp
  42cba6:	pop    esi
  42cba7:	lods   ax,WORD PTR ds:[esi]
  42cba9:	sbb    dh,ah
  42cbab:	sbb    dh,BYTE PTR [eax+0x4b]
  42cbae:	out    0xcb,al
  42cbb0:	push   edx
  42cbb1:	retf   0xfd3d
  42cbb4:	mov    edi,0xbee4cc10
  42cbb9:	dec    esp
  42cbba:	data16 ror WORD PTR [edi-0x7b51d265],0x6e
  42cbc3:	cmp    al,0xb1
  42cbc5:	mov    bh,0x0
  42cbc7:	out    0xb5,al
  42cbc9:	pop    DWORD PTR [ecx]
  42cbcb:	jmp    0x42cc21
  42cbcd:	dec    ebp
  42cbce:	add    bh,BYTE PTR [eax+0x6d]
  42cbd1:	adc    bl,BYTE PTR [esi]
  42cbd3:	outs   dx,DWORD PTR ds:[esi]
  42cbd4:	lods   al,BYTE PTR ds:[esi]
  42cbd5:	dec    esp
  42cbd6:	add    BYTE PTR [edx+edx*4+0x48],bh
  42cbda:	jne    0x42cbd5
  42cbdc:	fisttp QWORD PTR [edi-0x707faeb1]
  42cbe2:	add    cl,ch
  42cbe4:	pop    esi
  42cbe5:	ds sbb esi,edx
  42cbe8:	push   esi
  42cbe9:	fsub   st(0),st
  42cbeb:	sub    edx,DWORD PTR [ecx+ecx*2]
  42cbee:	sti    
  42cbef:	(bad)  
  42cbf0:	in     al,dx
  42cbf1:	aas    
  42cbf2:	call   0xfb8bdffa
  42cbf7:	mov    edi,0x650b8eaf
  42cbfc:	ror    BYTE PTR [edi+0x6f9ee900],0xdb
  42cc03:	sub    dh,BYTE PTR [ecx+0x4d1548]
	...
  42cc19:	add    BYTE PTR [eax],al
  42cc1b:	add    BYTE PTR [ebx],ch
  42cc1d:	mov    WORD PTR [eax],es
  42cc1f:	xor    DWORD PTR [eax+0x34],0xd14286fb
  42cc26:	or     al,0x72
  42cc28:	ja     0x42cbc1
  42cc2a:	mov    DWORD PTR [edx*1+0x60ddf8cc],ebp
  42cc31:	mov    bh,0x87
  42cc33:	jmp    0x8451:0xdb0c473b
  42cc3a:	inc    ebp
  42cc3b:	push   ebp
  42cc3c:	jle    0x42cc29
  42cc3e:	xchg   DWORD PTR [edx-0x163ebf4e],esp
  42cc44:	mov    dh,0x8f
  42cc46:	and    BYTE PTR [ebp-0x1a07338e],dh
  42cc4c:	pop    esp
  42cc4d:	mov    dl,dh
  42cc4f:	sub    BYTE PTR [eax-0x3b8dc93d],dh
  42cc55:	mov    ebx,ebx
  42cc57:	stos   BYTE PTR es:[edi],al
  42cc58:	mov    dh,0x4a
  42cc5a:	ret    
  42cc5b:	push   edi
  42cc5c:	shl    DWORD PTR [esi+0x3f],0xe9
  42cc60:	mov    fs,WORD PTR [esi+0x2eba00bc]
  42cc66:	test   al,al
  42cc68:	add    BYTE PTR [edi+esi*8+0x33],dh
  42cc6c:	pop    ss
  42cc6d:	mov    eax,ds:0x8f4fdf38
  42cc72:	sti    
  42cc73:	or     al,0x98
  42cc75:	dec    esi
  42cc76:	cmp    eax,DWORD PTR [eax]
  42cc78:	scas   eax,DWORD PTR es:[edi]
  42cc79:	test   bh,dh
  42cc7b:	adc    eax,0x3b4598
	...
  42cc94:	xlat   BYTE PTR ds:[ebx]
  42cc95:	xchg   ecx,eax
  42cc96:	jnp    0x42cc5c
  42cc98:	dec    eax
  42cc99:	xchg   esp,eax
  42cc9a:	add    eax,0xd22b3c
  42cc9f:	mov    ecx,DWORD PTR [ecx-0x4afc7c65]
  42cca5:	fdivr  st,st(4)
  42cca7:	add    esi,esp
  42cca9:	adc    DWORD PTR [ebp-0x4],edi
  42ccac:	sbb    dl,ah
  42ccae:	cwde   
  42ccaf:	push   0x3b4dec
  42ccb4:	sub    ecx,DWORD PTR [eax-0x59]
  42ccb7:	adc    bl,ah
  42ccb9:	xchg   ebx,eax
  42ccba:	test   DWORD PTR [ebp+0x24],0x8fe8451a
  42ccc1:	xlat   BYTE PTR ds:[ebx]
  42ccc2:	in     al,dx
  42ccc3:	sbb    BYTE PTR [edi-0x2a],al
  42ccc6:	sbb    al,0xf
  42ccc8:	pop    esi
  42ccc9:	sahf   
  42ccca:	idiv   bh
  42cccc:	mov    esp,DWORD PTR [ecx+0x33113bc0]
  42ccd2:	push   edi
  42ccd3:	sbb    ecx,DWORD PTR [eax+edx*8+0x5c17d8ef]
  42ccda:	mov    edx,0x8388dc04
  42ccdf:	lock mov ebp,eax
  42cce2:	or     al,ch
  42cce4:	(bad)  
  42cce5:	sub    dh,dh
  42cce7:	(bad)  
  42cce8:	fucomi st,st(0)
  42ccea:	adc    al,ch
  42ccec:	inc    esi
  42cced:	sub    dh,dh
  42ccef:	push   DWORD PTR [ebp-0x72e3a65f]
  42ccf5:	push   ss
  42ccf6:	fwait
  42ccf7:	cli    
	...
  42cd0c:	xchg   edx,eax
  42cd0d:	xchg   ecx,eax
  42cd0e:	pop    ecx
  42cd0f:	sub    al,0x9d
  42cd11:	out    dx,al
  42cd12:	call   0x8d30:0x584182fa
  42cd19:	es fwait
  42cd1b:	cli    
  42cd1c:	jb     0x42cd4f
  42cd1e:	push   esi
  42cd1f:	xor    al,0x5d
  42cd21:	jle    0x42ccc3
  42cd23:	cli    
  42cd24:	bound  ebp,QWORD PTR [ebp+0x62304056]
  42cd2a:	pop    eax
  42cd2b:	or     eax,0x3ce74a52
  42cd30:	or     DWORD PTR [edx],ecx
  42cd32:	loope  0x42cd86
  42cd34:	dec    ebp
  42cd35:	dec    edx
  42cd36:	fwait
  42cd37:	cli    
  42cd38:	cmp    bl,BYTE PTR [edx+0x3cabfbc5]
  42cd3e:	out    0x2c,eax
  42cd40:	imul   ebp,DWORD PTR [edx],0x30abfbe1
  42cd46:	out    0x24,eax
  42cd48:	pop    ecx
  42cd49:	sbb    ah,cl
  42cd4b:	sti    
  42cd4c:	mov    ebp,DWORD PTR [eax-0x19]
  42cd4f:	sbb    al,0x49
  42cd51:	retf   0xbfe1
  42cd54:	push   0xffffffad
  42cd56:	fadd   QWORD PTR [ebp+0x51f943fa]
  42cd5c:	ds jmp 0x3610bfcf
  42cd62:	push   ebx
  42cd63:	and    al,0xb1
  42cd65:	mov    ch,0xee
  42cd67:	sbb    ch,cl
  42cd69:	test   eax,0xd2fbe1
  42cd6e:	push   edx
  42cd6f:	cmc    
	...
  42cd84:	imul   ebp,DWORD PTR [ecx],0xffffffe6
  42cd87:	clc    
  42cd88:	inc    BYTE PTR [ecx-0x73d1aa1f]
  42cd8e:	test   esp,esp
  42cd90:	lods   eax,DWORD PTR ds:[esi]
  42cd91:	nop
  42cd92:	outs   dx,BYTE PTR ds:[esi]
  42cd93:	inc    edi
  42cd94:	mov    ebp,0xf2400d0c
  42cd99:	loope  0x42cd55
  42cd9b:	loopne 0x42cdc2
  42cd9d:	xchg   esp,eax
  42cd9e:	pop    esp
  42cd9f:	pop    eax
  42cda0:	fld    DWORD PTR [edi-0x701eefef]
  42cda6:	jmp    0x6ddc4332
  42cdab:	xor    BYTE PTR [edi+ecx*4-0x4d75eb17],0xaa
  42cdb3:	inc    edi
  42cdb4:	xchg   ecx,eax
  42cdb5:	mov    ds:0xec2d02e9,eax
  42cdba:	or     eax,0x5cec52f5
  42cdbf:	loopne 0x42ce0f
  42cdc1:	adc    eax,0xd40f10b9
  42cdc6:	add    eax,0x2d09aff5
  42cdcb:	or     BYTE PTR [ecx-0x7acae924],ah
  42cdd1:	loope  0x42cd75
  42cdd3:	not    BYTE PTR [esi-0x5d]
  42cdd6:	sub    DWORD PTR [edi+eax*4],eax
  42cdd9:	push   ss
  42cdda:	sub    eax,0x4737b928
  42cddf:	pushf  
  42cde0:	cmovns eax,eax
  42cde3:	aas    
  42cde4:	shl    DWORD PTR [edi+0x87ea],1
	...
  42cdfa:	add    BYTE PTR [eax],al
  42cdfc:	mov    edi,0x6a03e98e
  42ce01:	fdiv   st(7),st
  42ce03:	add    al,0x82
  42ce05:	fsub   QWORD PTR [edx+0x57]
  42ce08:	xchg   ecx,eax
  42ce09:	jecxz  0x42ce65
  42ce0b:	push   edi
  42ce0c:	cdq    
  42ce0d:	fist   DWORD PTR [edx+0x57]
  42ce10:	xchg   ecx,eax
  42ce11:	or     DWORD PTR [edx-0xa],0xfffffff6
  42ce15:	mov    ds:0xd43c03a9,al
  42ce1a:	add    eax,0x4c8a28
  42ce1f:	out    0x32,al
  42ce21:	mov    al,ds:0x10b6e901
  42ce26:	inc    ebp
  42ce27:	icebp  
  42ce28:	cmp    DWORD PTR [edi-0x70615e80],ecx
  42ce2e:	mov    edx,0xcffd05
  42ce33:	xchg   ebp,eax
  42ce34:	mov    ebx,0xf67efc05
  42ce39:	(bad)  
  42ce3a:	das    
  42ce3b:	xor    BYTE PTR [esi],dh
  42ce3d:	retf   
  42ce3e:	and    al,0xab
  42ce40:	mov    al,0xd8
  42ce42:	or     edx,DWORD PTR [edi+esi*2-0x2a]
  42ce46:	or     eax,0xe9808fb1
  42ce4c:	cmp    DWORD PTR [esi+0x0],edx
  42ce4f:	faddp  st(5),st
  42ce51:	adc    edx,DWORD PTR [ecx+0x3a]
  42ce54:	jb     0x42ce15
  42ce56:	or     BYTE PTR [ecx+0x79],dl
  42ce59:	mov    DWORD PTR [eax-0x17],0x2524c363
	...
  42ce74:	add    DWORD PTR [esp+esi*2+0x5],0x79
  42ce79:	inc    esp
  42ce7a:	adc    eax,0x882c59
  42ce7f:	jb     0x42ce8a
  42ce81:	sub    bh,0xe6
  42ce84:	xor    bh,ch
  42ce86:	(bad)  
  42ce87:	call   0x745a8042
  42ce8c:	xchg   ebp,eax
  42ce8d:	jae    0x42ced7
  42ce8f:	and    DWORD PTR [ecx],edx
  42ce91:	dec    edx
  42ce92:	fwait
  42ce93:	jbe    0x42ce6f
  42ce95:	mov    dh,0x0
  42ce97:	jmp    0x66a8be52
  42ce9c:	ds dec esp
  42ce9e:	push   eax
  42ce9f:	mov    bh,0x3
  42cea1:	mov    ds:0x8f76fcac,al
  42cea6:	repz and ax,0x24cb
  42ceab:	add    BYTE PTR [esp+eax*4],al
  42ceae:	call   0xf7ab3293
  42ceb3:	mov    eax,DWORD PTR [ecx]
  42ceb5:	xchg   esp,eax
  42ceb6:	add    DWORD PTR [edi],0xffffffa5
  42ceb9:	mov    esp,DWORD PTR [eax]
  42cebb:	jbe    0x42ce45
  42cebd:	data16 jo 0x42cedc
  42cec0:	adc    eax,ebx
  42cec2:	and    al,0x48
  42cec4:	pop    esp
  42cec5:	and    BYTE PTR [esp+0x78],al
  42cec9:	sub    eax,0xffffffa2
  42cecc:	in     eax,0x65
  42cece:	test   DWORD PTR [ebx-0x3f7a6028],0x634a02
	...
  42ceec:	pop    esp
  42ceed:	xchg   ebx,eax
  42ceee:	mov    al,ds:0x7466536a
  42cef3:	and    al,0xb8
  42cef5:	jge    0x42ceee
  42cef7:	adc    eax,0x3b4830
  42cefc:	sbb    edi,0x24
  42ceff:	sbb    al,0x64
  42cf01:	lock mov cl,0xfe
  42cf04:	add    ebx,DWORD PTR [edx]
  42cf06:	(bad)  
  42cf07:	(bad)  
  42cf08:	jl     0x42cf7d
  42cf0a:	div    DWORD PTR [eax-0x48]
  42cf0d:	or     BYTE PTR [ebx+0x56],0x53
  42cf11:	dec    eax
  42cf12:	mov    ds:0x7b8bcc15,eax
  42cf17:	clc    
  42cf18:	or     eax,0x71532ae8
  42cf1d:	into   
  42cf1e:	and    al,0x2c
  42cf20:	lods   al,BYTE PTR ds:[esi]
  42cf21:	and    BYTE PTR [esp-0x1c],al
  42cf25:	sub    BYTE PTR [eax+0x13],0xc
  42cf29:	xchg   ebx,eax
  42cf2a:	and    BYTE PTR [esi+0x1b],dl
  42cf2d:	iret   
  42cf2e:	and    al,0x3c
  42cf30:	fcom   DWORD PTR [edx-0x799b0000]
  42cf36:	and    al,0x34
  42cf38:	mov    ch,0xdd
  42cf3a:	clc    
  42cf3b:	mov    edi,0x7efef8a8
  42cf40:	int    0x37
  42cf42:	pop    eax
  42cf43:	push   es
  42cf44:	xor    al,0x5
  42cf46:	and    esp,DWORD PTR [eax]
  42cf48:	in     eax,dx
  42cf49:	cmp    bh,bh
  42cf4b:	jmp    FWORD PTR [ecx]
  42cf4d:	out    dx,al
  42cf4e:	xor    al,0xfb
	...
  42cf64:	rcr    al,0xf8
  42cf67:	aas    
  42cf68:	mov    ch,0xa5
  42cf6a:	push   ebx
  42cf6b:	and    al,0xd1
  42cf6d:	popf   
  42cf6e:	clc    
  42cf6f:	lahf   
  42cf70:	test   al,0xf8
  42cf72:	(bad)  
  42cf73:	cli    
  42cf74:	add    DWORD PTR [ebp-0x9],edx
  42cf77:	cli    
  42cf78:	test   al,0xd8
  42cf7a:	clc    
  42cf7b:	aas    
  42cf7c:	mov    ch,0x3e
  42cf7e:	inc    edx
  42cf7f:	and    al,0xc6
  42cf81:	mov    eax,0x3ac6245b
  42cf86:	or     al,0x7e
  42cf88:	ss data16 (bad) 
  42cf8c:	pop    edx
  42cf8d:	in     al,0x28
  42cf8f:	xor    al,0x5d
  42cf91:	jp     0x42cf29
  42cf93:	cli    
  42cf94:	dec    edx
  42cf95:	dec    ebp
  42cf96:	pop    eax
  42cf97:	and    al,0x7d
  42cf99:	pusha  
  42cf9a:	pop    ss
  42cf9b:	mov    dh,0x3b
  42cf9d:	std    
  42cf9e:	cmp    al,0x5a
  42cfa0:	out    0xf8,al
  42cfa2:	cmp    BYTE PTR [edi+0x4becb10],al
  42cfa8:	mov    ch,0x25
  42cfaa:	pop    eax
  42cfab:	and    al,0xe1
  42cfad:	adc    BYTE PTR [ebx],ah
  42cfaf:	mov    dh,0x13
  42cfb1:	adc    eax,0x50d174dd
  42cfb6:	out    0x1c,eax
  42cfb8:	aas    
  42cfb9:	(bad)  
  42cfba:	frstor [esi-0x67]
  42cfbd:	scas   eax,DWORD PTR es:[edi]
  42cfbe:	push   ebp
  42cfbf:	or     BYTE PTR [eax+0x34],al
  42cfc2:	and    esi,DWORD PTR [eax]
  42cfc4:	lea    ecx,[edi+0xd251]
	...
  42cfda:	add    BYTE PTR [eax],al
  42cfdc:	aas    
  42cfdd:	inc    esi
  42cfde:	pop    edx
  42cfdf:	mov    edi,DWORD PTR [ecx+0x6b]
  42cfe2:	cmc    
  42cfe3:	call   0x6a408957
  42cfe8:	retf   0xad12
  42cfeb:	daa    
  42cfec:	xchg   ebp,eax
  42cfed:	fild   QWORD PTR [esi+0x48]
  42cff0:	xchg   ecx,eax
  42cff1:	outs   dx,DWORD PTR ds:[esi]
  42cff2:	call   0x6dd:0x2af1cdeb
  42cff9:	pop    ss
  42cffa:	lods   eax,DWORD PTR ds:[esi]
  42cffb:	daa    
  42cffc:	int    0x37
  42cffe:	setnp  BYTE PTR [edi-0x26b7a1bb]
  42d005:	imul   esp,DWORD PTR [esi-0x24],0xffffff8e
  42d009:	mov    esp,0x897e10c1
  42d00e:	es push esi
  42d010:	int3   
  42d011:	sbb    BYTE PTR [ebp-0x1aed32d9],ch
  42d017:	fwait
  42d018:	lods   al,BYTE PTR ds:[esi]
  42d019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d01a:	pop    ebp
  42d01b:	neg    DWORD PTR [edi-0x80]
  42d01e:	(bad)  
  42d020:	out    0xa1,al
  42d022:	sub    DWORD PTR [eiz*8-0x56d7dae8],eax
  42d029:	inc    esp
  42d02a:	std    
  42d02b:	fwait
  42d02c:	dec    ebp
  42d02d:	cli    
  42d02e:	imul   eax,DWORD PTR [ebx],0x282d18b5
  42d034:	fxch   st(4)
  42d036:	out    dx,al
  42d037:	fistp  DWORD PTR [ebx-0x26a091a4]
  42d03d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d03e:	xchg   ecx,eax
  42d03f:	mov    BYTE PTR [eax],0x0
	...
  42d052:	add    BYTE PTR [eax],al
  42d054:	pop    esp
  42d055:	inc    esi
  42d056:	xchg   edx,eax
  42d057:	mov    ?,WORD PTR [ecx+0x6b]
  42d05a:	in     eax,dx
  42d05b:	xor    edi,DWORD PTR [eax]
  42d05d:	int3   
  42d05e:	int    0xfb
  42d060:	jb     0x42d074
  42d062:	and    eax,0xdfc128
  42d067:	pop    ds
  42d068:	loope  0x42d080
  42d06a:	mov    WORD PTR [esi+0x9],gs
  42d06d:	or     eax,0xbafc22f8
  42d072:	adc    DWORD PTR [eax-0x5a],0x48
  42d076:	sti    
  42d077:	push   esi
  42d078:	mov    ecx,DWORD PTR [esp+ebp*8]
  42d07b:	mov    eax,0x7052d487
  42d080:	mov    ecx,0x7970d774
  42d085:	xchg   edi,eax
  42d086:	sti    
  42d087:	mov    eax,0xe17048ba
  42d08c:	sahf   
  42d08d:	mov    BYTE PTR [eax-0x17],bl
  42d090:	mov    dh,0x12
  42d092:	jae    0x42d079
  42d094:	out    0x16,al
  42d096:	add    dl,BYTE PTR [esi]
  42d098:	mov    eax,eax
  42d09a:	push   cs
  42d09b:	test   eax,0x54516b6
  42d0a0:	xor    ecx,edx
  42d0a2:	cld    
  42d0a3:	cdq    
  42d0a4:	shl    BYTE PTR [edi],0x24
  42d0a7:	icebp  
  42d0a8:	mov    cs,WORD PTR [eax-0x79]
  42d0ab:	out    0x3d,eax
  42d0ad:	sar    ah,cl
  42d0af:	jno    0x42d10e
  42d0b1:	(bad)  
  42d0b2:	cmp    edi,edi
  42d0b4:	jmp    0x0:0x3a4fa5
	...
  42d0cb:	add    BYTE PTR [esi-0xf0f9149],al
  42d0d1:	(bad)  
  42d0d2:	dec    edi
  42d0d3:	sbb    bl,BYTE PTR [esi-0x66]
  42d0d6:	and    al,0xda
  42d0d8:	test   BYTE PTR [edi+0x7cbd2e89],0xbf
  42d0df:	xor    eax,0x9200ffb5
  42d0e4:	mov    al,0x48
  42d0e6:	xor    dl,BYTE PTR [ecx-0x6905f938]
  42d0ec:	stos   DWORD PTR es:[edi],eax
  42d0ed:	dec    edi
  42d0ee:	pop    edx
  42d0ef:	xor    bh,al
  42d0f1:	add    edx,DWORD PTR [ebp+0x0]
  42d0f4:	xchg   DWORD PTR [edi],esi
  42d0f6:	push   ecx
  42d0f7:	push   ebx
  42d0f8:	mov    esi,ecx
  42d0fa:	cld    
  42d0fb:	push   eax
  42d0fc:	pop    ecx
  42d0fd:	or     BYTE PTR [eax],0xe8
  42d100:	cmp    DWORD PTR [esi+esi*8],0xffffffff
  42d104:	addr16 (bad) 
  42d106:	or     al,0x89
  42d108:	int    0x84
  42d10a:	test   eax,eax
  42d10c:	icebp  
  42d10d:	inc    ebx
  42d10e:	sub    eax,0x7a4577c0
  42d113:	jge    0x42d18d
  42d115:	mov    ch,BYTE PTR [esi+0xa]
  42d118:	dec    edi
  42d119:	out    0x8,al
  42d11b:	xor    ch,BYTE PTR [edi+0x43]
  42d11e:	sub    al,al
  42d120:	test   DWORD PTR [edx+0x124cc02b],0x8d24104d
  42d12a:	mov    al,0x1
  42d12c:	aad    0x49
  42d12e:	or     al,0x0
	...
  42d144:	inc    ecx
  42d145:	adc    ch,ah
  42d147:	xor    DWORD PTR [eax-0x7713849d],0x7a
  42d14e:	dec    esi
  42d14f:	mov    ebp,DWORD PTR [ebp+0x7e]
  42d152:	lea    ebx,[esi+0x54]
  42d155:	mov    ch,0x0
  42d157:	mov    ecx,DWORD PTR [edi]
  42d159:	adc    al,0x74
  42d15b:	and    al,0xb4
  42d15d:	xor    edi,esi
  42d15f:	adc    BYTE PTR [ebx+0x66],ch
  42d162:	test   al,al
  42d164:	loopne 0x42d135
  42d166:	div    DWORD PTR [ebx+0x50]
  42d169:	adc    dh,BYTE PTR [ebx+0xc]
  42d16c:	sti    
  42d16d:	cdq    
  42d16e:	call   0xf7a91237
  42d173:	test   BYTE PTR [ebx+edx*8+0x11],bl
  42d177:	mov    edi,DWORD PTR [edi+0x717fe897]
  42d17d:	gs test esi,0xf2074b5
  42d184:	mov    ah,0xac
  42d186:	mov    edi,0x3af2b875
  42d18b:	and    al,0xa6
  42d18d:	cmp    BYTE PTR [edx+0x57b5c13f],cl
  42d193:	sub    BYTE PTR [ebp+0x490bdaad],dh
  42d199:	jns    0x42d1ca
  42d19b:	call   0xfc19197a
  42d1a0:	xor    eax,0xb50f1b5d
  42d1a5:	pop    ebx
  42d1a6:	or     BYTE PTR [edi+0x0],al
	...
  42d1bc:	dec    ecx
  42d1bd:	xchg   esp,eax
  42d1be:	lock jle 0x42d1b4
  42d1c1:	xor    BYTE PTR [ecx],dh
  42d1c3:	call   0xfc1c96f5
  42d1c8:	ds jmp 0x42d1d1
  42d1cb:	call   0xfc18f21c
  42d1d0:	cli    
  42d1d1:	add    cl,BYTE PTR [edi-0x1f5211ff]
  42d1d7:	pop    ebp
  42d1d8:	ja     0x42d206
  42d1da:	dec    DWORD PTR [edx]
  42d1dc:	dec    ebx
  42d1dd:	idiv   edx
  42d1df:	dec    edi
  42d1e0:	lea    edi,[ecx-0xe]
  42d1e3:	cli    
  42d1e4:	jb     0x42d193
  42d1e6:	inc    ebx
  42d1e7:	and    al,0xbd
  42d1e9:	scas   eax,DWORD PTR es:[edi]
  42d1ea:	add    al,0x87
  42d1ec:	stc    
  42d1ed:	xchg   esp,eax
  42d1ee:	or     dl,al
  42d1f0:	mov    ch,0x37
  42d1f2:	adc    al,0xc0
  42d1f4:	mov    WORD PTR [edi],?
  42d1f6:	or     BYTE PTR [ebp+0x7f675],dl
  42d1fc:	cs je  0x42d21f
  42d1ff:	add    al,0x4d
  42d201:	jl     0x42d26f
  42d203:	sti    
  42d204:	xor    cl,al
  42d206:	(bad)  
  42d207:	mov    ebp,0x44d138b1
  42d20c:	(bad)  [edi+0x168702ed]
  42d212:	cwde   
  42d213:	shl    DWORD PTR [edi-0x4abb9b8d],0xbb
  42d21a:	jecxz  0x42d24d
  42d21c:	or     eax,0xda41a2
	...
  42d231:	add    BYTE PTR [eax],al
  42d233:	add    dh,bh
  42d235:	adc    eax,0x8b333aa3
  42d23a:	jmp    0xe612f947
  42d23f:	test   ch,cl
  42d241:	mov    ds,ebp
  42d243:	pop    es
  42d244:	ins    DWORD PTR es:[edi],dx
  42d245:	mov    ebx,0x4df514e6
  42d24a:	xchg   ecx,eax
  42d24b:	lock or BYTE PTR [edi-0x2f],bl
  42d24f:	(bad)  
  42d250:	std    
  42d251:	popf   
  42d252:	daa    
  42d253:	mov    ah,0x3d
  42d255:	dec    esi
  42d256:	xchg   esp,eax
  42d257:	mov    WORD PTR [ecx+0x34dc4d0d],fs
  42d25d:	xor    al,0xbd
  42d25f:	jmp    DWORD PTR [edx+0x3231b641]
  42d265:	aas    
  42d266:	jmp    0xb5ec:0x668bf791
  42d26d:	fsub   DWORD PTR [eax+0x50]
  42d270:	fldenv [ebx-0x450d0483]
  42d276:	iret   
  42d277:	ins    DWORD PTR es:[edi],dx
  42d278:	iret   
  42d279:	in     al,0x2a
  42d27b:	inc    eax
  42d27c:	xchg   ecx,eax
  42d27d:	fild   WORD PTR [ebx]
  42d280:	mov    ch,0x8f
  42d282:	stos   BYTE PTR es:[edi],al
  42d283:	aas    
  42d284:	xchg   ecx,eax
  42d285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d286:	sbb    DWORD PTR [edi-0x4b],ecx
  42d289:	(bad)  
  42d28a:	mov    esi,0x2e9bd0fa
  42d28f:	sar    ecx,0x6b
  42d292:	fisttp QWORD PTR ds:0xc0e98fb5
	...
  42d2ac:	jns    0x42d319
  42d2ae:	add    cl,dl
  42d2b0:	xchg   esi,eax
  42d2b1:	sub    DWORD PTR [eax],eax
  42d2b3:	jmp    0x45ca5ec9
  42d2b8:	aad    0xa3
  42d2ba:	xchg   DWORD PTR ds:0xb2699bd5,esp
  42d2c0:	xchg   esi,eax
  42d2c1:	sub    DWORD PTR [eax],eax
  42d2c3:	jmp    0xe1678ea5
  42d2c8:	(bad)  
  42d2c9:	dec    edi
  42d2ca:	pusha  
  42d2cb:	xchg   ebx,eax
  42d2cc:	mov    dh,0x8f
  42d2ce:	jg     0x42d2dd
  42d2d0:	xchg   ebp,eax
  42d2d1:	imul   eax,DWORD PTR [eax],0x60
  42d2d4:	mov    ds:0xbd50186b,al
  42d2d9:	mov    es,WORD PTR [eax]
  42d2db:	jmp    0xf1679f1b
  42d2e0:	xchg   BYTE PTR [edi],dh
  42d2e2:	sub    esi,DWORD PTR ds:0x298544dc
  42d2e8:	push   0xffffff92
  42d2ea:	push   eax
  42d2eb:	push   ecx
  42d2ec:	paddw  mm7,mm1
  42d2ef:	ss xor ebx,eax
  42d2f2:	and    al,0xd1
  42d2f4:	mov    dh,0xba
  42d2f6:	push   es
  42d2f7:	popa   
  42d2f8:	push   ds
  42d2f9:	jp     0x42d2fb
  42d2fb:	jmp    0xe944799f
  42d300:	mov    dh,0xf
  42d302:	jp     0x42d2e9
  42d304:	mov    dh,0x94
  42d306:	test   DWORD PTR [esi+esi*4-0x71],ecx
  42d30a:	add    BYTE PTR [edx+ecx*1+0x6c],ch
  42d30e:	inc    eax
  42d30f:	das    
	...
  42d324:	stos   BYTE PTR es:[edi],al
  42d325:	imul   ecx,DWORD PTR [edi],0xffffffe9
  42d328:	dec    esi
  42d329:	lods   al,BYTE PTR ds:[esi]
  42d32a:	adc    esi,esp
  42d32c:	sub    BYTE PTR [ecx+0x37127200],0x85
  42d333:	out    0x63,al
  42d335:	inc    esp
  42d336:	test   BYTE PTR [ecx+0x87a5e5],ch
  42d33c:	mov    BYTE PTR [edi+0x4c],ch
  42d33f:	xor    DWORD PTR [ebx+esi*2+0x0],0xf
  42d344:	mov    ecx,edi
  42d346:	and    al,0x13
  42d348:	mov    edi,fs
  42d34a:	and    al,0x13
  42d34c:	or     al,0x89
  42d34e:	xchg   esp,eax
  42d34f:	shl    BYTE PTR [ebx],0x12
  42d352:	rcl    BYTE PTR [eax+0x34],0xc2
  42d356:	adc    bh,bh
  42d358:	xor    esi,DWORD PTR [ebp+0x6fb08d00]
  42d35e:	inc    esp
  42d35f:	call   0x390ec6
  42d364:	pop    esp
  42d365:	out    0x24,eax
  42d367:	adc    ecx,esp
  42d369:	fdivp  st(7),st
  42d36b:	mov    cl,BYTE PTR [edi-0x23ff42ce]
  42d371:	mov    ecx,DWORD PTR [ebp-0x5544744]
  42d377:	dec    esp
  42d379:	add    BYTE PTR [esp+0x8e14],al
  42d380:	inc    esp
  42d381:	or     al,BYTE PTR [eax+0x0]
  42d384:	hlt    
  42d385:	xchg   DWORD PTR [ecx],edx
  42d387:	inc    DWORD PTR [eax]
	...
  42d399:	add    BYTE PTR [eax],al
  42d39b:	add    bl,dl
  42d39d:	xor    ax,0xf10c
  42d3a1:	rol    BYTE PTR [eax],cl
  42d3a3:	lea    ebx,[eax]
  42d3a5:	jo     0x42d403
  42d3a7:	add    bl,BYTE PTR [ebx+edx*4-0x2c87bb77]
  42d3ae:	lea    eax,[eax+ebp*2-0x61]
  42d3b2:	push   eax
  42d3b3:	(bad)  
  42d3b4:	call   0x190a0857
  42d3b9:	lahf   
  42d3ba:	xor    al,0xf4
  42d3bc:	add    dl,ah
  42d3be:	add    al,ch
  42d3c0:	int    0xe9
  42d3c2:	(bad)  
  42d3c3:	jmp    esi
  42d3c5:	xchg   ebx,eax
  42d3c6:	mov    BYTE PTR [ebp+esi*4-0x74],al
  42d3ca:	jmp    0x42d38e
  42d3cc:	stc    
  42d3cd:	xchg   esp,eax
  42d3ce:	adc    al,0xbc
  42d3d0:	mov    ebp,0xe2e80468
  42d3d5:	pop    eax
  42d3d6:	sar    bl,cl
  42d3d8:	push   ds
  42d3d9:	mov    al,ds:0x5b6915d3
  42d3de:	aas    
  42d3df:	add    BYTE PTR [esi],ch
  42d3e1:	xchg   DWORD PTR [eax*4-0x78f75b04],ecx
  42d3e8:	in     eax,0x51
  42d3ea:	mov    ah,0x81
  42d3ec:	jmp    FWORD PTR [eax]
  42d3ee:	xor    esp,DWORD PTR [edx]
  42d3f0:	mov    al,0x3e
  42d3f2:	dec    BYTE PTR [eax+0x35d2407b]
  42d3f8:	mov    ecx,0x30003e23
  42d3fd:	jne    0x42d41f
  42d3ff:	sub    BYTE PTR [eax],al
	...
  42d411:	add    BYTE PTR [eax],al
  42d413:	add    BYTE PTR [ebp*8-0xabfbfe6],ch
  42d41a:	sbb    ah,BYTE PTR [eiz*2-0x76dbb44d]
  42d421:	jne    0x42d45e
  42d423:	and    al,0x89
  42d425:	mov    esp,0x76b54089
  42d42a:	cmp    esp,DWORD PTR [eiz*8-0x26bb45d8]
  42d431:	inc    esp
  42d432:	retf   
  42d433:	mov    dh,ch
  42d435:	sub    bh,ah
  42d437:	sbb    ebx,DWORD PTR [esi+0x28]
  42d43a:	inc    DWORD PTR [edi-0x3d11b30f]
  42d440:	stc    
  42d441:	push   esp
  42d442:	sbb    edi,DWORD PTR [ebp+edi*8-0x18]
  42d446:	(bad)  
  42d447:	jg     0x42d43a
  42d449:	push   esp
  42d44a:	out    dx,al
  42d44b:	(bad)  
  42d44c:	aas    
  42d44d:	mov    esp,0x692e1c1b
  42d452:	push   eax
  42d453:	add    al,0x2e
  42d455:	(bad)  
  42d456:	sub    eax,0xdadfa920
  42d45b:	ud1    ebx,DWORD PTR [esi+eiz*1+0x4]
  42d460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d462:	mov    ecx,0x48f7af2
  42d467:	add    dh,BYTE PTR [edi+ecx*4-0x16cefb17]
  42d46e:	mov    dl,0xd5
  42d470:	push   ds
  42d471:	fimul  WORD PTR [ebx]
  42d473:	cmp    DWORD PTR [edx],esi
  42d475:	xor    al,0x44
  42d477:	rol    DWORD PTR [eax],0x0
	...
  42d48a:	add    BYTE PTR [eax],al
  42d48c:	addr16 out 0x6e,al
  42d48f:	rcl    DWORD PTR [ebx-0x52a99b71],cl
  42d495:	daa    
  42d496:	jae    0x42d49d
  42d498:	(bad)  
  42d499:	cmp    eax,0x8b99407b
  42d49e:	call   0xf1fe8c5f
  42d4a3:	inc    ebx
  42d4a4:	mov    ch,0xc3
  42d4a6:	jecxz  0x42d4d5
  42d4a8:	int    0x8d
  42d4aa:	fwait
  42d4ab:	(bad)  
  42d4ac:	into   
  42d4ad:	(bad)  [esi-0x42]
  42d4b0:	outs   dx,DWORD PTR ds:[esi]
  42d4b1:	push   ecx
  42d4b2:	in     eax,dx
  42d4b3:	add    ebp,DWORD PTR [eax+0xa]
  42d4b6:	cmp    eax,0x6ee66433
  42d4bb:	fstp   TBYTE PTR [ebx]
  42d4bd:	or     cl,ch
  42d4bf:	add    dh,BYTE PTR [ebp-0x61b89e71]
  42d4c5:	or     ah,BYTE PTR [ecx+0x3]
  42d4c8:	mov    ah,0x8f
  42d4ca:	jmp    0x6480d55a
  42d4cf:	mov    dl,0x1
  42d4d1:	(bad)  
  42d4d2:	pop    esi
  42d4d3:	inc    edi
  42d4d4:	lods   eax,DWORD PTR ds:[esi]
  42d4d5:	push   0xcb2c311a
  42d4da:	add    DWORD PTR [ebx-0x2a6c77f8],ecx
  42d4e0:	lock cmp al,0x0
  42d4e3:	out    0x30,al
  42d4e5:	ret    
  42d4e6:	sti    
  42d4e7:	arpl   WORD PTR [ebp-0x71],sp
  42d4ea:	add    BYTE PTR [ebx+ebp*2],bh
  42d4ed:	mov    DWORD PTR [edx+0x2c],esi
	...
  42d503:	add    BYTE PTR [ebx+0x16],ah
  42d506:	sbb    al,0xe8
  42d508:	cs pushf 
  42d50a:	add    ah,BYTE PTR [ecx+0x4a]
  42d50d:	nop
  42d50e:	or     edi,DWORD PTR [edi-0x46]
  42d511:	xchg   ecx,eax
  42d512:	or     esi,DWORD PTR [edi+0x64]
  42d515:	cmp    eax,0x37d362c9
  42d51a:	or     eax,0xe9009001
  42d520:	cmp    al,0x8c
  42d522:	add    ebx,ebx
  42d524:	mov    dl,0x85
  42d526:	mov    dh,ah
  42d528:	sar    DWORD PTR [eax],0x4d
  42d52b:	loope  0x42d598
  42d52d:	push   ecx
  42d52e:	pop    edx
  42d52f:	and    bh,BYTE PTR [edi]
  42d531:	retf   
  42d532:	sti    
  42d533:	jno    0x42d573
  42d535:	nop
  42d536:	add    ecx,ebp
  42d538:	mov    dh,0x15
  42d53a:	dec    ebp
  42d53b:	outs   dx,DWORD PTR ds:[esi]
  42d53c:	or     BYTE PTR cs:[ecx],al
  42d53f:	call   0x309e64fa
  42d544:	hlt    
  42d545:	xchg   ebx,eax
  42d546:	add    BYTE PTR [esi+0x202f372d],bh
  42d54c:	cmp    edi,DWORD PTR [eax]
  42d54e:	je     0x42d558
  42d550:	in     al,0xe1
  42d552:	xchg   DWORD PTR [ebx],edi
  42d554:	fnstsw WORD PTR [edi]
  42d556:	xchg   ch,bl
  42d558:	mov    al,ds:0xa1055c15
  42d55d:	push   0x14
  42d55f:	add    dh,dh
  42d561:	pop    es
  42d562:	adc    dl,ah
  42d564:	bnd jae 0x42d57b
  42d567:	pushf  
	...
  42d57c:	mov    ah,0x6c
  42d57e:	leave  
  42d57f:	test   eax,0xe3c2f1
  42d584:	sbb    dh,BYTE PTR [edi+0x57]
  42d587:	ret    0x9064
  42d58a:	push   ebp
  42d58b:	mov    edi,DWORD PTR [eax-0x30f7baf9]
  42d591:	xor    al,0xc
  42d593:	sbb    ecx,0xffffff8f
  42d596:	add    BYTE PTR [edi],cl
  42d598:	shl    dh,cl
  42d59a:	(bad)  
  42d59b:	dec    DWORD PTR [ebp+eax*4-0x73]
  42d59f:	push   ebp
  42d5a0:	fs jns 0x42d5c6
  42d5a3:	retf   0xbcd3
  42d5a6:	stc    
  42d5a7:	push   0x1f
  42d5a9:	inc    esi
  42d5aa:	inc    ebp
  42d5ab:	dec    DWORD PTR [edi+ecx*1]
  42d5ae:	dec    ebp
  42d5af:	clc    
  42d5b0:	stos   BYTE PTR es:[edi],al
  42d5b1:	adc    al,0x7d
  42d5b3:	or     al,0x1c
  42d5b5:	(bad)  
  42d5b6:	or     eax,0xf791008a
  42d5bb:	dec    ebp
  42d5bc:	sbb    BYTE PTR [esi+0x45],bl
  42d5bf:	call   DWORD PTR [edx+eax*2-0x6dddfc1e]
  42d5c6:	add    BYTE PTR [ecx-0x66],al
  42d5c9:	(bad)  
  42d5ca:	fimul  WORD PTR [edi]
  42d5cc:	mov    ds:0x3d8bf8ce,al
  42d5d1:	push   edx
  42d5d2:	loop   0x42d5d6
  42d5d4:	inc    esi
  42d5d5:	lods   eax,DWORD PTR ds:[esi]
  42d5d6:	ror    BYTE PTR [edx-0x49f86fe4],0x1
  42d5dd:	dec    ebx
  42d5de:	jnp    0x42d5c1
	...
  42d5f4:	iret   
  42d5f5:	mov    esp,0x87fdc1ea
  42d5fa:	shr    esi,0x90
  42d5fd:	cmp    dh,al
  42d5ff:	mov    bl,BYTE PTR [edx]
  42d601:	push   esp
  42d602:	add    BYTE PTR [eax-0x74],0x12
  42d606:	mov    edi,0xf7e11c03
  42d60b:	add    DWORD PTR [ecx+edx*8],eax
  42d60e:	cmc    
  42d60f:	jbe    0x42d5c6
  42d611:	cmp    esi,edi
  42d613:	mov    cl,0xe8
  42d615:	sahf   
  42d616:	sbb    esi,0xffffffc2
  42d619:	addr16 loop 0x42d61a
  42d61c:	jne    0x42d5be
  42d61e:	push   es
  42d61f:	pop    es
  42d620:	outs   dx,DWORD PTR ds:[esi]
  42d621:	scas   eax,DWORD PTR es:[edi]
  42d622:	jne    0x42d5e4
  42d624:	das    
  42d625:	jmp    0x16fabd28
  42d62a:	adc    BYTE PTR [eax+0x720559c8],al
  42d630:	mov    dl,0x31
  42d632:	cdq    
  42d633:	dec    ebp
  42d634:	aas    
  42d635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d636:	in     al,0x3b
  42d638:	aas    
  42d639:	sar    BYTE PTR [edi-0x25d78a7a],0xfe
  42d640:	gs inc esp
  42d642:	jg     0x42d6c1
  42d644:	lds    ebp,FWORD PTR [eax]
  42d646:	push   ebx
  42d647:	and    edx,eax
  42d649:	fcmovbe st,st(2)
  42d64b:	bound  edi,QWORD PTR [ecx+ebx*2]
  42d64e:	(bad)  
  42d64f:	mov    cl,0x88
  42d651:	sbb    edi,esi
  42d653:	mov    cl,0xe7
  42d655:	pop    ecx
  42d656:	cdq    
  42d657:	leave  
	...
  42d66c:	pop    ebx
  42d66d:	mov    edi,0xbf50fe4f
  42d672:	das    
  42d673:	add    al,0x5b
  42d675:	scas   eax,DWORD PTR es:[edi]
  42d676:	aaa    
  42d677:	add    dh,BYTE PTR [esi]
  42d679:	jmp    0xc0e7bd74
  42d67e:	out    0x85,eax
  42d680:	push   0xb45877e3
  42d685:	mov    al,0x2f
  42d687:	(bad)  
  42d688:	xor    dh,cl
  42d68a:	add    DWORD PTR [edi+0x75],edi
  42d68d:	sub    al,0x82
  42d68f:	jge    0x42d64a
  42d691:	sub    dh,bh
  42d693:	sbb    ch,0x81
  42d696:	into   
  42d697:	sti    
  42d698:	cli    
  42d699:	or     ch,BYTE PTR [edx]
  42d69b:	daa    
  42d69c:	clc    
  42d69d:	(bad)  
  42d69e:	icebp  
  42d69f:	mov    esp,0x38e98b4b
  42d6a4:	cmp    ch,BYTE PTR [ebx]
  42d6a6:	data16 fild QWORD PTR [ecx-0x4e7f4d22]
  42d6ad:	nop
  42d6ae:	outs   dx,BYTE PTR ds:[esi]
  42d6af:	dec    eax
  42d6b0:	mov    ebp,0xf87c2006
  42d6b5:	inc    ebx
  42d6b6:	scas   al,BYTE PTR es:[edi]
  42d6b7:	ret    0xeae
  42d6ba:	cmp    al,BYTE PTR [ebx]
  42d6bc:	mov    ch,0x8f
  42d6be:	cmp    edx,DWORD PTR ds:0xdb77e47
  42d6c4:	pop    esi
  42d6c5:	mov    esi,0x136c1623
  42d6ca:	mov    al,ds:0x440fea57
	...
  42d6e3:	add    BYTE PTR [ebp-0x47a811fb],dh
  42d6e9:	push   cs
  42d6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d6eb:	push   es
  42d6ec:	adc    dl,BYTE PTR [eax+0x64747f26]
  42d6f2:	in     eax,0x40
  42d6f4:	xchg   BYTE PTR [esi+0x4f499ea],al
  42d6fa:	popa   
  42d6fb:	scas   eax,DWORD PTR es:[edi]
  42d6fc:	xor    ecx,edi
  42d6fe:	jmp    0xb0c2cadf
  42d703:	mov    ah,bh
  42d705:	ret    0x83ec
  42d708:	fdiv   QWORD PTR [edx+0x64]
  42d70b:	inc    ebx
  42d70c:	sbb    cl,BYTE PTR [edx+0x47cfc355]
  42d712:	pop    es
  42d713:	mov    esp,0xc6d75a82
  42d718:	cmp    DWORD PTR [eax-0x23],ecx
  42d71b:	or     BYTE PTR [edi+0x39],dh
  42d71e:	and    BYTE PTR [ecx+eax*1-0x5d],bh
  42d722:	inc    ecx
  42d723:	inc    esi
  42d724:	sub    dh,BYTE PTR [esi]
  42d726:	in     eax,0x4f
  42d728:	dec    edi
  42d729:	adc    eax,DWORD PTR [eax]
  42d72b:	aas    
  42d72c:	std    
  42d72d:	rol    BYTE PTR [esi+0x45127e9c],1
  42d733:	and    BYTE PTR [ebx],cl
  42d735:	jecxz  0x42d730
  42d737:	sub    DWORD PTR [esi-0x52fe44c6],edx
  42d73d:	xchg   ecx,eax
  42d73e:	shl    DWORD PTR [ebx-0x4e],0x41
  42d742:	mov    BYTE PTR [edx+edi*2+0x29c112],ch
	...
  42d759:	add    BYTE PTR [eax],al
  42d75b:	add    BYTE PTR [esi-0x72],dl
  42d75e:	push   es
  42d75f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d760:	imul   edx,DWORD PTR [eax-0x22],0xfe2876e5
  42d767:	bnd jo 0x42d772
  42d76a:	dec    ebp
  42d76b:	ffreep st(3)
  42d76d:	(bad)  
  42d76f:	sbb    bh,dh
  42d771:	pop    es
  42d772:	inc    ebp
  42d773:	int3   
  42d774:	cmp    ecx,DWORD PTR [edx+0x7a]
  42d777:	fsubr  QWORD PTR [ecx+0x7a73f4c2]
  42d77d:	mov    bh,ah
  42d77f:	mov    dh,0x73
  42d781:	inc    ebx
  42d782:	mov    bh,ah
  42d784:	cmp    eax,DWORD PTR [edi+0x75]
  42d787:	jmp    0x1e095803
  42d78c:	loopne 0x42d70e
  42d78e:	(bad)  
  42d790:	xor    cl,cl
  42d792:	sti    
  42d793:	mov    es,WORD PTR ds:0xd2c87d6
  42d799:	jno    0x42d7e0
  42d79b:	icebp  
  42d79c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d79d:	loopne 0x42d768
  42d79f:	stos   DWORD PTR es:[edi],eax
  42d7a0:	fidivr WORD PTR [eax]
  42d7a2:	push   ebp
  42d7a3:	(bad)  
  42d7a4:	out    0x11,al
  42d7a6:	add    dh,BYTE PTR [ecx-0x49]
  42d7a9:	mov    eax,0xa35ce8f6
  42d7ae:	lea    ebp,[eax+0x5cf170b7]
  42d7b4:	lock xor al,0x86
  42d7b7:	add    BYTE PTR [eax-0x1cafd57a],cl
  42d7bd:	mov    ah,0x10
  42d7bf:	inc    eax
	...
  42d7d4:	push   ebp
  42d7d5:	loope  0x42d7cb
  42d7d7:	pop    esi
  42d7d8:	fild   WORD PTR [ebp-0x1f67db8c]
  42d7de:	pop    es
  42d7df:	push   edi
  42d7e0:	mov    ds:0x3a0824e0,eax
  42d7e5:	pop    edi
  42d7e6:	adc    eax,0xcc6a4c
  42d7eb:	sbb    DWORD PTR [eax+0x63478c38],0x12
  42d7f2:	shl    BYTE PTR [esi+edx*2-0x46],0x4c
  42d7f7:	xor    BYTE PTR [ebx-0x63],ah
  42d7fa:	or     al,0x30
  42d7fc:	test   dh,dl
  42d7fe:	out    dx,al
  42d7ff:	ret    0x8c58
  42d802:	push   ebp
  42d803:	mov    esi,DWORD PTR [eax-0x7e]
  42d806:	dec    ebx
  42d807:	xor    edx,DWORD PTR [ebp-0x7f]
  42d80a:	dec    edi
  42d80b:	mov    cl,ah
  42d80d:	dec    eax
  42d80e:	mov    BYTE PTR [ebp+0x62],cl
  42d811:	mov    cl,0x89
  42d813:	mov    BYTE PTR [ebx+edx*4],cl
  42d816:	add    BYTE PTR [eax],al
  42d818:	xchg   edi,eax
  42d819:	arpl   WORD PTR [edx+0x8c1d00],si
  42d81f:	mov    BYTE PTR [edx],dl
  42d821:	sar    DWORD PTR [esi],cl
  42d823:	out    0xf5,ax
  42d826:	imul   esi,edi,0xfa836357
  42d82c:	jecxz  0x42d84f
  42d82e:	dec    ebp
  42d82f:	jmp    DWORD PTR [edi+0x7e]
  42d832:	or     BYTE PTR [edx+0x16852ad0],cl
	...
  42d84c:	fdivrp st(5),st
  42d84e:	dec    DWORD PTR [edx+edx*2+0x38]
  42d852:	mov    cl,0x4d
  42d854:	bound  esi,QWORD PTR [ebp-0x1f4afee4]
  42d85a:	dec    ecx
  42d85b:	sti    
  42d85c:	cmp    eax,0xb4147727
  42d861:	cmp    eax,0x92a24d95
  42d866:	inc    ecx
  42d867:	or     al,0x20
  42d869:	and    eax,0x299245c5
  42d86e:	inc    ebp
  42d86f:	dec    ebx
  42d870:	add    BYTE PTR [esi+0x2b],bh
  42d873:	pop    edx
  42d874:	fidivr WORD PTR [edi-0x42]
  42d877:	or     BYTE PTR [ebp-0x4afefef0],dh
  42d87d:	sub    dl,cl
  42d87f:	je     0x42d812
  42d881:	inc    eax
  42d882:	jle    0x42d844
  42d884:	mov    ecx,0xe915ca18
  42d889:	push   esi
  42d88a:	aas    
  42d88b:	add    BYTE PTR [esi],dh
  42d88d:	ins    DWORD PTR es:[edi],dx
  42d88e:	add    BYTE PTR [esi-0x1a8d74f],bh
  42d894:	mov    ch,0x28
  42d896:	(bad)  
  42d897:	jle    0x42d90e
  42d899:	and    eax,0x8ca9fb2f
  42d89e:	add    bl,bh
  42d8a0:	sar    BYTE PTR [edx+esi*8+0x3f],0xb5
  42d8a5:	test   eax,0x24f70cc3
  42d8aa:	inc    DWORD PTR [esi+0xdca9bd]
	...
  42d8c4:	add    DWORD PTR [edx+0x3c],0x4fbfa475
  42d8cb:	add    al,0x2c
  42d8cd:	jns    0x42d8cb
  42d8cf:	mov    esi,0x4bfa987
  42d8d4:	and    DWORD PTR [eax],0x34
  42d8d7:	sti    
  42d8d8:	loop   0x42d88f
  42d8da:	mov    esi,0xdca9ad87
  42d8df:	add    BYTE PTR [ecx+0x4f],cl
  42d8e2:	cmp    al,0x74
  42d8e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d8e5:	(bad)  
  42d8e6:	data16 fadd st(2),st
  42d8e9:	ret    0x11e6
  42d8ec:	cmc    
  42d8ed:	push   edx
  42d8ee:	pop    esi
  42d8ef:	mov    ebp,0xd9414d3a
  42d8f4:	scas   eax,DWORD PTR es:[edi]
  42d8f5:	ss inc edx
  42d8f7:	fidivr DWORD PTR [edi+0x33fbb936]
  42d8fd:	dec    ecx
  42d8fe:	xor    dl,BYTE PTR [ebx-0x47]
  42d901:	or     ah,BYTE PTR [ebx]
  42d903:	jp     0x42d96c
  42d905:	daa    
  42d906:	or     eax,0xe367ecf
  42d90b:	cli    
  42d90c:	sti    
  42d90d:	dec    edi
  42d90e:	in     eax,dx
  42d90f:	xor    eax,0x2c01453a
  42d914:	imul   esi,DWORD PTR [esi],0x52b49302
  42d91a:	fs aad 0xe0
  42d91d:	xchg   edx,eax
  42d91e:	mov    dh,0xc3
  42d920:	adc    cl,BYTE PTR [edx]
  42d922:	loope  0x42d8a6
  42d924:	pop    esp
  42d925:	(bad)  
  42d926:	pop    ebp
  42d927:	adc    BYTE PTR [eax],al
	...
  42d939:	add    BYTE PTR [eax],al
  42d93b:	add    ah,ch
  42d93d:	mov    ebx,0x9ec13b03
  42d942:	and    BYTE PTR [eax-0x3b],bl
  42d945:	enter  0xda54,0x32
  42d949:	pop    ebp
  42d94a:	outs   dx,BYTE PTR ds:[esi]
  42d94b:	mov    ebp,0xa2d1523a
  42d950:	pop    ds
  42d951:	ss mov dl,0xd9
  42d954:	lds    ebp,FWORD PTR [ecx-0x57f42717]
  42d95a:	call   0xae4d3f94
  42d95f:	fsub   st(1),st
  42d961:	xor    dl,BYTE PTR [edx+0x193632cd]
  42d967:	cld    
  42d968:	xor    eax,DWORD PTR [ebp-0x7e]
  42d96b:	push   esp
  42d96c:	mov    ecx,0xea79a20a
  42d971:	add    BYTE PTR es:[ebp-0x1b],ah
  42d975:	cmp    ebx,edi
  42d977:	or     dl,0xb4
  42d97a:	shr    ch,0x85
  42d97d:	push   cs
  42d97e:	shl    BYTE PTR [edx-0x8],cl
  42d981:	es sti 
  42d983:	push   edx
  42d984:	cmp    BYTE PTR [ecx],0x87
  42d987:	daa    
  42d988:	je     0x42d997
  42d98a:	dec    esp
  42d98b:	or     eax,0x97090cad
  42d990:	ffreep st(6)
  42d992:	push   ebx
  42d993:	bound  ebp,QWORD PTR [ecx-0x44]
  42d996:	push   cs
  42d997:	mov    al,ds:0xea6693e3
  42d99c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d99d:	inc    ebp
  42d99e:	lea    esp,[edi+0x0]
	...
  42d9b4:	mov    ah,0xd6
  42d9b6:	repz sbb BYTE PTR [esi+0x30],dh
  42d9ba:	inc    BYTE PTR [ecx]
  42d9bc:	push   0xffffffab
  42d9be:	(bad)  
  42d9bf:	mov    ecx,0xeb420324
  42d9c4:	pop    DWORD PTR [eax-0xf]
  42d9c7:	sub    BYTE PTR [ecx+0x35],bl
  42d9ca:	dec    ebx
  42d9cb:	add    DWORD PTR [esi],esp
  42d9cd:	(bad)  
  42d9ce:	stc    
  42d9cf:	out    0xbd,al
  42d9d1:	aaa    
  42d9d2:	test   esi,ebx
  42d9d4:	loop   0x42d972
  42d9d6:	xchg   DWORD PTR ds:0x45e883dd,ebp
  42d9dc:	clc    
  42d9dd:	cmp    bl,bh
  42d9df:	ins    BYTE PTR es:[edi],dx
  42d9e0:	idiv   BYTE PTR [ebx+0x6bda720a]
  42d9e6:	adc    BYTE PTR [edi+ecx*2-0x44],ch
  42d9ea:	(bad)  
  42d9eb:	pop    edi
  42d9ec:	mov    bh,0xc
  42d9ee:	ret    
  42d9ef:	xchg   edx,eax
  42d9f0:	(bad)  
  42d9f1:	loope  0x42d9db
  42d9f3:	push   ebx
  42d9f4:	daa    
  42d9f5:	cmp    bh,bl
  42d9f7:	(bad)  
  42d9f9:	fcomp  DWORD PTR [edx-0x55]
  42d9fc:	out    dx,al
  42d9fd:	xor    al,0x55
  42d9ff:	add    BYTE PTR [edi+0x61],ah
  42da02:	or     DWORD PTR [eax],0x4f
  42da05:	pop    ecx
  42da06:	add    BYTE PTR [edi+esi*8+0x79],dh
  42da0a:	je     0x42da21
  42da0c:	pop    edi
  42da0d:	pop    ecx
  42da0e:	sti    
  42da0f:	jae    0x42d9e1
  42da11:	sahf   
  42da12:	rcr    BYTE PTR [esi-0x71],0x7b
  42da16:	dec    esi
  42da17:	mov    eax,DWORD PTR [eax]
	...
  42da29:	add    BYTE PTR [eax],al
  42da2b:	add    BYTE PTR [esi],al
  42da2d:	pop    ecx
  42da2e:	pop    es
  42da2f:	(bad)  
  42da30:	sti    
  42da31:	inc    ebx
  42da32:	push   edi
  42da33:	jmp    0x42d9cf
  42da35:	inc    ebx
  42da36:	jo     0x42da40
  42da38:	daa    
  42da39:	div    esi
  42da3b:	jo     0x42d9dd
  42da3d:	mov    bh,0xbe
  42da3f:	mov    esp,DWORD PTR [edx-0x240421a8]
  42da45:	inc    ebx
  42da46:	jecxz  0x42da53
  42da48:	sqrtps xmm0,XMMWORD PTR [esi+edx*2]
  42da4c:	xlat   BYTE PTR ds:[ebx]
  42da4d:	repnz out 0x5b,eax
  42da50:	mov    DWORD PTR [ebx-0x9],0xbb624db0
  42da57:	push   esi
  42da58:	inc    ebx
  42da59:	mov    bh,0x7c
  42da5b:	and    al,0x58
  42da5d:	mov    bh,0xf1
  42da5f:	test   DWORD PTR [ebx-0x26],ebx
  42da62:	add    al,0x33
  42da64:	or     al,0x54
  42da66:	dec    ebp
  42da67:	mov    eax,DWORD PTR [ebp+ecx*1-0x17]
  42da6b:	add    BYTE PTR [eax-0x408bb660],dl
  42da71:	jb     0x42dae7
  42da73:	adc    ah,ch
  42da75:	fild   WORD PTR [ebx]
  42da77:	dec    ecx
  42da78:	loope  0x42dacc
  42da7a:	dec    edx
  42da7b:	call   0x3a20dd
  42da80:	neg    DWORD PTR [edx-0x72d8ff9e]
  42da86:	bound  eax,QWORD PTR [ecx]
  42da88:	ret    0xbfb4
  42da8b:	mov    esi,DWORD PTR [ebp+0xb3dbf0]
	...
  42daa1:	add    BYTE PTR [eax],al
  42daa3:	add    cl,ch
  42daa5:	add    al,0xc7
  42daa7:	out    0x95,eax
  42daa9:	or     eax,0xe52e0854
  42daae:	(bad)  
  42daaf:	jo     0x42da6a
  42dab1:	mov    cl,0xbe
  42dab3:	call   0xfc0a9bf4
  42dab8:	into   
  42dab9:	cmp    dh,BYTE PTR ds:0x7a29f57f
  42dabf:	sar    DWORD PTR [esi],cl
  42dac1:	imul   ebx,esp,0xfffffffc
  42dac4:	scas   eax,DWORD PTR es:[edi]
  42dac5:	ret    0x87c7
  42dac8:	jp     0x42dab4
  42daca:	sub    BYTE PTR [esi+0x27a28b1],bh
  42dad0:	ds in  eax,dx
  42dad2:	sbb    cl,BYTE PTR [eax]
  42dad4:	std    
  42dad5:	lock dec edi
  42dad7:	(bad)  
  42dad8:	mov    al,gs:0x7f8d512f
  42dade:	xchg   esp,eax
  42dadf:	cli    
  42dae0:	jb     0x42da90
  42dae2:	int3   
  42dae3:	test   DWORD PTR [edx+0x1d],ebp
  42dae6:	out    0xfa,al
  42dae8:	jmp    0x1c9ce31
  42daed:	dec    ebp
  42daee:	xrelease xchg BYTE PTR [edx-0x3e174152],al
  42daf5:	and    esi,eax
  42daf7:	sti    
  42daf8:	cmp    cl,ch
  42dafa:	dec    edx
  42dafb:	push   es
  42dafc:	xor    BYTE PTR [esi+0x4b],cl
  42daff:	(bad)  
  42db00:	cmp    eax,0x1ec37a26
  42db05:	xor    DWORD PTR [esi],ebp
  42db07:	call   0x42db0c
	...
  42db1c:	bound  edi,QWORD PTR [ecx-0x17190437]
  42db22:	and    eax,0x3028bdbe
  42db27:	xchg   DWORD PTR [ecx],ebx
  42db29:	cwde   
  42db2a:	xor    ebp,DWORD PTR [edi]
  42db2c:	fimul  WORD PTR [edi-0x4d5ad720]
  42db32:	jmp    0x3deb:0x6087787e
  42db39:	fsub   st,st(5)
  42db3b:	jl     0x42dbba
  42db3d:	xchg   DWORD PTR [ecx],edi
  42db3f:	add    al,0xd2
  42db41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db42:	adc    esi,DWORD PTR [ebx]
  42db44:	cmp    dh,BYTE PTR [ebp+0x6d]
  42db47:	hlt    
  42db48:	mov    cl,BYTE PTR [edi-0x218dc8ea]
  42db4e:	bound  edx,QWORD PTR [eax-0x5b]
  42db51:	xor    dl,ah
  42db53:	test   DWORD PTR [ebx],0xb5c840a8
  42db59:	(bad)
  42db5d:	aas    
  42db5e:	(bad)  
  42db5f:	(bad)  
  42db60:	pop    ds
  42db61:	bound  ebp,QWORD PTR [ecx+eax*2-0x4c]
  42db65:	fild   WORD PTR [ecx+0x30]
  42db68:	inc    ebp
  42db69:	xor    DWORD PTR [edx],ebp
  42db6b:	jl     0x42db65
  42db6d:	xor    ebx,esi
  42db6f:	mov    BYTE PTR [ecx],0x92
  42db72:	mov    dh,0x36
  42db74:	pop    es
  42db75:	loopne 0x42db89
  42db77:	push   eax
  42db78:	lds    esi,FWORD PTR [edx]
  42db7a:	xchg   esp,eax
  42db7b:	div    ebx
  42db7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db7e:	adc    al,cl
	...
  42db94:	mov    ch,0x8f
  42db96:	cli    
  42db97:	mov    cl,0x8a
  42db99:	dec    ecx
  42db9a:	jge    0x42db93
  42db9c:	dec    edi
  42db9d:	mov    esp,0xffe5daed
  42dba2:	loop   0x42db6d
  42dba4:	mov    ecx,DWORD PTR [edi-0x32]
  42dba7:	repnz cmp eax,esp
  42dbaa:	aad    0x7d
  42dbac:	jo     0x42db35
  42dbae:	popa   
  42dbaf:	call   0x7d33e499
  42dbb4:	push   0xb93c709f
  42dbb9:	or     BYTE PTR [eax],al
  42dbbb:	cmp    DWORD PTR [ecx],ecx
  42dbbd:	loop   0x42dbbf
  42dbbf:	push   cs
  42dbc0:	iret   
  42dbc1:	fcmove st,st(1)
  42dbc3:	stos   DWORD PTR es:[edi],eax
  42dbc4:	std    
  42dbc5:	xor    DWORD PTR [esi-0x17786ad3],eax
  42dbcb:	push   0x64fb3650
  42dbd0:	stc    
  42dbd1:	mov    bh,0x4
  42dbd3:	mov    ebx,0x190a29f6
  42dbd8:	cld    
  42dbd9:	mov    edx,0xbafde524
  42dbde:	and    al,0xdd
  42dbe0:	(bad)  
  42dbe2:	sti    
  42dbe3:	data16 in al,dx
  42dbe5:	lock pop es
  42dbe7:	jmp    0x6b2ee4cf
  42dbec:	lea    eax,[edi+eax*4-0x783d6148]
  42dbf3:	loopne 0x42dbd9
  42dbf5:	fadd   QWORD PTR [edi+0x41]
	...
  42dc0b:	add    BYTE PTR [edi+edi*8-0x42f60ebe],cl
  42dc12:	xor    al,0x2
  42dc14:	dec    eax
  42dc15:	test   DWORD PTR [ebx-0x411983c7],ebp
  42dc1b:	ror    BYTE PTR [eax-0x17ea8af9],cl
  42dc21:	mov    esi,0x3bf26004
  42dc26:	or     edx,DWORD PTR [esi+0x4]
  42dc29:	jl     0x42dc2a
  42dc2b:	clc    
  42dc2c:	mov    ecx,0xf26918bc
  42dc31:	xchg   DWORD PTR [eax],eax
  42dc33:	pusha  
  42dc34:	xchg   edx,eax
  42dc35:	aaa    
  42dc36:	je     0x42dc29
  42dc38:	mov    ecx,0xf37020cc
  42dc3d:	xchg   edi,esp
  42dc3f:	out    dx,eax
  42dc40:	scas   eax,DWORD PTR es:[edi]
  42dc41:	mov    edx,0x6f856208
  42dc46:	xchg   DWORD PTR [eax],eax
  42dc48:	aad    0x37
  42dc4a:	and    bl,BYTE PTR [ebp+0x48]
  42dc4d:	cmp    BYTE PTR [esi+0x5d8c085f],ah
  42dc53:	or     BYTE PTR [ebx+0x22],dl
  42dc56:	mov    edi,0x828bcc10
  42dc5b:	inc    edi
  42dc5c:	aam    0x88
  42dc5e:	add    DWORD PTR [ebp-0x1],esi
  42dc61:	mov    bl,0x45
  42dc63:	or     BYTE PTR [edi],dh
  42dc65:	and    eax,0xba344d82
  42dc6a:	cmp    al,0x8
  42dc6c:	daa    
  42dc6d:	pop    DWORD PTR [edx+0x8]
	...
  42dc83:	add    BYTE PTR [esi+esi*1+0x41],dl
  42dc87:	inc    eax
  42dc88:	pop    es
  42dc89:	push   eax
  42dc8a:	push   0xfffffff6
  42dc8c:	iret   
  42dc8d:	sar    esp,0x3
  42dc90:	pop    ecx
  42dc91:	dec    eax
  42dc92:	xor    eax,ebx
  42dc94:	mov    ss,WORD PTR [eax-0x1d]
  42dc97:	push   esp
  42dc98:	mov    al,0x89
  42dc9a:	jne    0x42dcc4
  42dc9c:	daa    
  42dc9d:	jb     0x42dca7
  42dc9f:	jmp    0x42dd12
  42dca1:	mov    bl,0x4d
  42dca3:	clc    
  42dca4:	lahf   
  42dca5:	hlt    
  42dca6:	loop   0x42dcb4
  42dca8:	jp     0x42dc5d
  42dcaa:	adc    BYTE PTR [esi+0x5],ah
  42dcad:	aas    
  42dcae:	jp     0x42dc76
  42dcb0:	pop    esi
  42dcb1:	or     eax,eax
  42dcb3:	add    al,BYTE PTR [edi+0x4ff06a4d]
  42dcb9:	sar    esp,0x3
  42dcbc:	or     DWORD PTR [eax+0x33],ecx
  42dcbf:	ret    
  42dcc0:	into   
  42dcc1:	out    0xe2,eax
  42dcc3:	sub    BYTE PTR [eax],al
  42dcc5:	xor    BYTE PTR [esp-0x29],dh
  42dcc9:	jno    0x42dcd3
  42dccb:	jmp    0x42dc84
  42dccd:	mov    ah,0x4d
  42dccf:	clc    
  42dcd0:	pop    ds
  42dcd1:	hlt    
  42dcd2:	loop   0x42dcde
  42dcd4:	mov    ch,0xad
  42dcd6:	hlt    
  42dcd7:	mov    bl,cl
  42dcd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dcda:	mov    edx,0xffe63604
  42dcdf:	ss hlt 
  42dce1:	jae    0x42dcb1
  42dce3:	inc    DWORD PTR [ecx+0x44fefa]
	...
  42dcf9:	add    BYTE PTR [eax],al
  42dcfb:	add    BYTE PTR [ecx],al
  42dcfd:	cmp    eax,0xc9146ebe
  42dd02:	and    dl,BYTE PTR [edi-0x4]
  42dd05:	jecxz  0x42dd06
  42dd07:	inc    DWORD PTR [eax-0x2e7e2753]
  42dd0d:	lds    eax,FWORD PTR [eax+eax*1]
  42dd10:	mov    ch,0x95
  42dd12:	sub    dl,BYTE PTR [ebx-0x2e]
  42dd15:	cmp    dh,bl
  42dd17:	xchg   ch,cl
  42dd19:	or     eax,0x26b518f3
  42dd1e:	repnz mov dl,0xf5
  42dd21:	mov    esi,0x385df441
  42dd26:	dec    ebx
  42dd27:	add    esp,DWORD PTR [ebp+0x38]
  42dd2a:	fsub   QWORD PTR [esi+esi*4]
  42dd2d:	cmp    bh,bh
  42dd2f:	cs jle 0x42dd91
  42dd32:	push   es
  42dd33:	mov    edi,0x45ba2308
  42dd38:	cmp    DWORD PTR [ebx],0xb1b5ffff
  42dd3e:	inc    ecx
  42dd3f:	hlt    
  42dd40:	mov    ebp,0xc273ef53
  42dd45:	sar    dh,0x73
  42dd48:	mov    esi,0xb5fbc85b
  42dd4d:	cmp    BYTE PTR [esi-0x38],bh
  42dd50:	lods   eax,DWORD PTR ds:[esi]
  42dd51:	lahf   
  42dd52:	inc    ecx
  42dd53:	hlt    
  42dd54:	inc    eax
  42dd55:	mov    ah,0x64
  42dd57:	sti    
  42dd58:	dec    edx
  42dd59:	es das 
  42dd5b:	sti    
  42dd5c:	enter  0x7c4c,0x5d
	...
  42dd74:	dec    ecx
  42dd75:	nop
  42dd76:	jo     0x42dda0
  42dd78:	and    eax,0x3cdc3c19
  42dd7d:	int    0xcd
  42dd7f:	mov    esi,0xc6cab038
  42dd84:	push   ds
  42dd85:	ins    BYTE PTR es:[edi],dx
  42dd86:	jmp    0xd471928e
  42dd8b:	add    esp,DWORD PTR [ecx-0xa7f1631]
  42dd91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd92:	loop   0x42dda5
  42dd94:	cmc    
  42dd95:	cmp    BYTE PTR [ebx+0x6e8fb501],dh
  42dd9b:	adc    BYTE PTR [ecx],bh
  42dd9d:	test   BYTE PTR [ecx],ch
  42dd9f:	add    al,0x86
  42dda1:	sbb    al,0x64
  42dda3:	pop    edi
  42dda4:	fisubr WORD PTR [esi]
  42dda6:	xor    BYTE PTR [ebx],0x40
  42dda9:	aad    0xa5
  42ddab:	xor    ecx,esi
  42ddad:	inc    ebp
  42ddae:	ins    BYTE PTR es:[edi],dx
  42ddaf:	ret    
  42ddb0:	scas   al,BYTE PTR es:[edi]
  42ddb1:	add    al,0xa7
  42ddb3:	jnp    0x42de15
  42ddb5:	sub    DWORD PTR [edi],ebx
  42ddb7:	mov    bl,0x29
  42ddb9:	jae    0x42de29
  42ddbb:	ss mov cl,0x1a
  42ddbe:	ins    BYTE PTR es:[edi],dx
  42ddbf:	pop    ebx
  42ddc0:	sahf   
  42ddc1:	cs dec edx
  42ddc3:	or     dh,BYTE PTR [esp+ebp*4-0x14]
  42ddc7:	sbb    dh,BYTE PTR [eax+ebx*1-0x5c]
  42ddcb:	shl    DWORD PTR [edx],cl
  42ddcd:	sahf   
  42ddce:	pop    esi
  42ddcf:	sbb    BYTE PTR [ecx],0x2f
  42ddd2:	sub    al,dh
  42ddd4:	ret    0xa450
	...
  42ddeb:	add    BYTE PTR [edx+0x59407050],bl
  42ddf1:	sbb    ch,BYTE PTR [edi+ecx*8+0x7ce72fe2]
  42ddf8:	lock jmp 0x42de77
  42ddfb:	aaa    
  42ddfc:	inc    esi
  42ddfd:	aam    0x65
  42ddff:	add    esi,DWORD PTR [ebp-0xd36ff71]
  42de05:	xchg   esp,eax
  42de06:	mov    BYTE PTR [edi+eax*2-0x55c1becb],cl
  42de0d:	adc    al,0x74
  42de0f:	fdivrp st(0),st
  42de11:	sub    DWORD PTR [eax+0x64],edx
  42de14:	loop   0x42de59
  42de16:	push   eax
  42de17:	into   
  42de18:	dec    ebx
  42de19:	adc    al,0xc0
  42de1b:	mul    BYTE PTR [ebx-0x2dfef02c]
  42de21:	sahf   
  42de22:	je     0x42de25
  42de24:	jl     0x42de00
  42de26:	add    al,0x62
  42de28:	jp     0x42ddd1
  42de2a:	sti    
  42de2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42de2c:	clc    
  42de2d:	rcr    DWORD PTR gs:[edx+ebp*8],0x74
  42de32:	shl    DWORD PTR [eax-0x5e],0x33
  42de36:	xchg   esi,ebx
  42de38:	pop    ebp
  42de39:	adc    al,0x74
  42de3b:	xchg   al,bh
  42de3d:	sub    DWORD PTR [edi],esi
  42de3f:	test   al,0x72
  42de41:	xchg   ebp,eax
  42de42:	daa    
  42de43:	test   al,0x3e
  42de45:	aam    0xe8
  42de47:	xor    BYTE PTR [edi+edx*1-0x354105ab],0xf6
  42de4f:	aam    0x0
	...
  42de61:	add    BYTE PTR [eax],al
  42de63:	add    BYTE PTR [edi-0x5605a29b],ch
  42de69:	adc    eax,edi
  42de6b:	dec    edi
  42de6c:	jo     0x42de97
  42de6e:	dec    edi
  42de6f:	inc    esi
  42de70:	mov    ds:0xb6a91491,al
  42de75:	adc    al,0xf8
  42de77:	repnz ins DWORD PTR es:[edi],dx
  42de79:	cdq    
  42de7a:	test   ah,ch
  42de7c:	jno    0x42dea7
  42de7e:	sti    
  42de7f:	mov    esi,0xf9e48379
  42de84:	test   BYTE PTR [edi+0x1fddba53],0xfb
  42de8b:	hlt    
  42de8c:	push   cs
  42de8d:	popf   
  42de8e:	inc    eax
  42de8f:	add    BYTE PTR [eax+ebx*4-0x15],bl
  42de93:	(bad)  
  42de95:	outs   dx,DWORD PTR ds:[esi]
  42de96:	idiv   edi
  42de98:	dec    ebx
  42de99:	test   al,0x7d
  42de9b:	or     BYTE PTR [ebx-0x24],cl
  42de9e:	sbb    al,0x56
  42dea0:	sbb    edi,DWORD PTR [esi]
  42dea2:	xlat   BYTE PTR ds:[ebx]
  42dea3:	adc    ah,bl
  42dea5:	xchg   ebx,eax
  42dea6:	mov    DWORD PTR [ebp+0x4c],eax
  42dea9:	cwde   
  42deaa:	mov    ebx,0xf77af875
  42deaf:	adc    eax,0x3b2154
  42deb4:	in     eax,0x2c
  42deb6:	idiv   bh
  42deb8:	dec    ebx
  42deb9:	jmp    0x42deff
  42debb:	sti    
  42debc:	or     eax,0x585d39cb
  42dec1:	and    edi,DWORD PTR [edi+0x71]
  42dec4:	fst    QWORD PTR [eax+0x8b00]
	...
  42deda:	add    BYTE PTR [eax],al
  42dedc:	xchg   ecx,eax
  42dedd:	daa    
  42dede:	mov    BYTE PTR [ebp+0x6c],al
  42dee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dee2:	inc    ebp
  42dee3:	fsubr  st(7),st
  42dee5:	ins    DWORD PTR es:[edi],dx
  42dee6:	aam    0x89
  42dee8:	ror    DWORD PTR [ecx+ecx*4],0x45
  42deec:	jl     0x42de95
  42deee:	inc    ebp
  42deef:	loopne 0x42dee8
  42def1:	ins    DWORD PTR es:[edi],dx
  42def2:	fadd   st,st(7)
  42def4:	popa   
  42def5:	sbb    BYTE PTR [ecx],al
  42def7:	add    BYTE PTR [eax+edx*4-0x5abfba77],bl
  42defe:	inc    ebp
  42deff:	pushf  
  42df00:	pop    esp
  42df01:	push   ebx
  42df02:	xor    eax,0xcfdb6c
  42df07:	mov    DWORD PTR [ecx],ebp
  42df09:	or     BYTE PTR [ecx+0x1553385d],cl
  42df0f:	mov    WORD PTR [ebp-0x30],ds
  42df12:	add    BYTE PTR [eax-0x74fea9e7],al
  42df18:	mov    DWORD PTR [esp+edx*1+0x40],ebx
  42df1c:	mov    ch,0x36
  42df1e:	dec    edx
  42df1f:	jge    0x42df49
  42df21:	repz mov edx,0xaafb4050
  42df27:	push   eax
  42df28:	dec    edx
  42df29:	inc    ebx
  42df2a:	fisttp WORD PTR [edi]
  42df2c:	cmc    
  42df2d:	ss jp  0x42def0
  42df30:	rcl    BYTE PTR [ecx],0x2d
  42df33:	sti    
  42df34:	enter  0x13e2,0x40
  42df38:	mov    ch,0x9f
  42df3a:	dec    ecx
  42df3b:	hlt    
  42df3c:	fsub   QWORD PTR [ebx-0x50]
  42df3f:	jne    0x42df41
	...
  42df51:	add    BYTE PTR [eax],al
  42df53:	add    BYTE PTR [eax-0x760f9e81],dh
  42df59:	and    al,0x52
  42df5b:	sti    
  42df5c:	and    dh,0xbe
  42df5f:	jne    0x42df72
  42df61:	mov    WORD PTR [edi+0x3f45f515],?
  42df67:	add    BYTE PTR [esi],bh
  42df69:	jnp    0x42df77
  42df6b:	dec    edi
  42df6c:	cmp    BYTE PTR [ebx-0x38],bh
  42df6f:	call   0xfc01e333
  42df74:	xchg   BYTE PTR [eax+0x36386805],dl
  42df7a:	(bad)  
  42df7b:	dec    edx
  42df7d:	and    cl,BYTE PTR [ebx]
  42df7f:	mov    BYTE PTR [eax-0x3e],ah
  42df82:	mov    edi,0xa09b7dd3
  42df87:	jne    0x42df4d
  42df89:	ds add eax,0x2221d52
  42df8f:	add    BYTE PTR [ebp-0x65f3c63f],dh
  42df95:	and    al,0xa7
  42df97:	pmaddwd mm7,QWORD PTR [eax]
  42df9a:	mov    al,BYTE PTR [ebp-0x43]
  42df9d:	ds add al,0x8d
  42dfa0:	lock jl 0x42df4f
  42dfa3:	jecxz  0x42e01e
  42dfa5:	jp     0x42df66
  42dfa7:	sti    
  42dfa8:	call   0x6e9cfd3c
  42dfad:	test   DWORD PTR [ecx],edi
  42dfaf:	adc    al,0xf5
  42dfb1:	(bad)
  42dfb5:	nop
  42dfb6:	fimul  DWORD PTR [eax+0x0]
	...
  42dfcc:	es nop
  42dfce:	jmp    0x120f6bd6
  42dfd3:	cmp    DWORD PTR [ebp+0x7c169417],ebp
  42dfd9:	int3   
  42dfda:	add    eax,0x2c51b938
  42dfdf:	pop    ss
  42dfe0:	mov    ah,0xc1
  42dfe2:	ficomp DWORD PTR [eax]
  42dfe4:	icebp  
  42dfe5:	jg     0x42e010
  42dfe7:	add    al,0x2c
  42dfe9:	aad    0xd5
  42dfeb:	sti    
  42dfec:	jno    0x42e06c
  42dfee:	cmp    eax,0x342a7a12
  42dff3:	test   al,0xfe
  42dff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dff6:	rcr    DWORD PTR [ecx-0x2],0x84
  42dffa:	test   eax,0x6e8f7513
  42dfff:	dec    eax
  42e000:	mov    ebp,0x9506cbe
  42e005:	cmp    BYTE PTR [eax-0x41],dh
  42e008:	fisubr WORD PTR [edx]
  42e00a:	ss pop edx
  42e00c:	pop    ebx
  42e00d:	add    DWORD PTR [edx-0x6dd546c8],0xffffffc2
  42e014:	dec    eax
  42e015:	and    edi,DWORD PTR [edx-0x25]
  42e018:	mov    ds:0x3c5a294f,al
  42e01d:	aam    0xa1
  42e01f:	ret    0x3fc0
  42e022:	stc    
  42e023:	inc    ebx
  42e024:	mov    ch,0x67
  42e026:	mov    ah,0x16
  42e028:	and    DWORD PTR [edx+0x3408c2b6],ebx
  42e02e:	inc    edx
  42e02f:	cmp    BYTE PTR [eax],al
	...
  42e041:	add    BYTE PTR [eax],al
  42e043:	add    BYTE PTR [ebp+0x75183ac1],bl
  42e049:	jg     0x42e04b
  42e04b:	test   eax,0xc34fdab6
  42e050:	(bad)  
  42e051:	es jne 0x42e049
  42e054:	ds int3 
  42e056:	pushf  
  42e057:	push   ds
  42e058:	jg     0x42e0c1
  42e05a:	pop    ebp
  42e05b:	jne    0x42dffa
  42e05d:	and    BYTE PTR [esi-0x1b],0xec
  42e061:	mov    bh,0x13
  42e063:	jmp    0x26b2:0x74fb8fb6
  42e06a:	adc    eax,0xcfa301
  42e06f:	bound  edi,QWORD PTR [ebp-0x69]
  42e072:	callw  0xbcb1
  42e076:	aam    0xd1
  42e078:	mov    ch,0x2b
  42e07a:	sti    
  42e07b:	(bad)  
  42e07c:	and    BYTE PTR [esi],0x35
  42e07f:	cmp    eax,0xc6006a14
  42e084:	mov    ds:0xb929111b,al
  42e089:	xor    al,BYTE PTR [edx-0x41]
  42e08c:	jb     0x42e0b1
  42e08e:	add    al,0x35
  42e090:	nop
  42e091:	push   0x94a2955d
  42e096:	cmp    DWORD PTR [ecx+ebp*1],edi
  42e099:	mov    ds:0xa3f43a0a,eax
  42e09e:	lock mov cs,WORD PTR [edx-0x5d79adc5]
  42e0a5:	dec    edi
  42e0a6:	adc    BYTE PTR [ecx],ch
	...
  42e0bc:	mov    ecx,0xed248dda
  42e0c1:	adc    ebx,eax
  42e0c3:	cmp    DWORD PTR [ebp-0x249904d5],0xbdd15295
  42e0cd:	sub    bl,bh
  42e0cf:	jmp    0x4e4f8449
  42e0d4:	stos   BYTE PTR es:[edi],al
  42e0d5:	aaa    
  42e0d6:	ltr    WORD PTR [ebp+ecx*4+0x62]
  42e0db:	add    DWORD PTR [ecx],edx
  42e0dd:	fld    st(4)
  42e0df:	mov    ecx,ebx
  42e0e1:	sti    
  42e0e2:	fdivp  st(3),st
  42e0e4:	mov    ds:0x9c75f74e,eax
  42e0e9:	vunpckhps ymm4,ymm1,YMMWORD PTR [eax+0x1a004083]
  42e0f1:	push   eax
  42e0f2:	adc    eax,0xcd4cd8
  42e0f7:	mov    bl,BYTE PTR [ecx]
  42e0f9:	in     al,dx
  42e0fa:	push   esi
  42e0fb:	pop    esi
  42e0fc:	pop    ss
  42e0fd:	push   esi
  42e0fe:	mov    edx,0x44e74c0c
  42e103:	hlt    
  42e104:	adc    al,0x61
  42e106:	xlat   BYTE PTR ds:[ebx]
  42e107:	cmp    DWORD PTR [ecx-0x21],esi
  42e10a:	je     0x42e111
  42e10c:	aad    0xc8
  42e10e:	lock je 0x42e123
  42e111:	(bad)  
  42e112:	div    DWORD PTR [ebp-0x14]
  42e115:	dec    edi
  42e116:	jne    0x42e104
  42e118:	stos   BYTE PTR es:[edi],al
  42e119:	dec    esi
  42e11a:	adc    eax,0xccdcc0
  42e11f:	push   ebx
	...
  42e134:	xchg   ecx,eax
  42e135:	fld    st(4)
  42e137:	mov    ebx,DWORD PTR [ebx]
  42e139:	cmc    
  42e13a:	call   0x4356:0x4b5013fb
  42e141:	bound  ecx,QWORD PTR [edi+edi*8]
  42e144:	f2xm1  
  42e146:	or     al,BYTE PTR [eax-0x24]
  42e149:	adc    eax,eax
  42e14b:	jne    0x42e1ca
  42e14d:	adc    al,0x5d
  42e14f:	sti    
  42e150:	daa    
  42e151:	mov    ch,0xee
  42e153:	add    eax,0x3b46fc
  42e158:	cwde   
  42e159:	ret    
  42e15a:	sbb    DWORD PTR [eax+edi*4-0x65],0x4e
  42e15f:	push   edi
  42e160:	daa    
  42e161:	imul   esp,DWORD PTR [esp+edx*1],0xe8514ab5
  42e168:	mov    WORD PTR [ebx],es
  42e16a:	sar    ebx,0x31
  42e16d:	jbe    0x42e1a2
  42e16f:	inc    ebp
  42e170:	cmp    BYTE PTR [ecx+0x33],ch
  42e173:	inc    ecx
  42e174:	jp     0x42e1a1
  42e176:	sub    ebx,ebx
  42e178:	div    BYTE PTR [esi]
  42e17a:	rcl    BYTE PTR ds:0x3f273d,0x2e
  42e181:	xchg   BYTE PTR [edx-0x3ae1e0e],al
  42e187:	pop    ecx
  42e188:	mov    ecx,0xf565ed03
  42e18d:	or     DWORD PTR [edi-0x44d7eeaf],esp
  42e193:	xchg   ebx,esi
  42e195:	xchg   BYTE PTR cs:[ebx],al
	...
  42e1ac:	lock sbb cl,BYTE PTR ds:[ecx+0x10293a72]
  42e1b4:	xor    BYTE PTR [eax+0x10],dh
  42e1b7:	push   eax
  42e1b8:	ss stc 
  42e1ba:	or     edx,DWORD PTR [ebx+0x1d]
  42e1bd:	fsub   DWORD PTR [edi-0x6]
  42e1c0:	or     bl,BYTE PTR [ebp+0x2ffb0842]
  42e1c6:	add    al,0xe7
  42e1c8:	lods   eax,DWORD PTR ds:[esi]
  42e1c9:	mov    DWORD PTR [edi-0x5],ecx
  42e1cc:	enter  0x134a,0x40
  42e1d0:	mov    ch,0xd1
  42e1d2:	pop    edx
  42e1d3:	push   edi
  42e1d4:	neg    DWORD PTR ds:0x46b0f1ff
  42e1da:	aad    0x3f
  42e1dc:	mov    ch,0x32
  42e1de:	push   ebp
  42e1df:	xchg   DWORD PTR [ecx+0x5a],eax
  42e1e2:	pop    es
  42e1e3:	je     0x42e17b
  42e1e5:	dec    BYTE PTR [edx-0x775f444b]
  42e1eb:	shr    BYTE PTR [ecx],0x43
  42e1ee:	mov    edx,0x42901935
  42e1f3:	inc    ebx
  42e1f4:	mov    ch,0x26
  42e1f6:	hlt    
  42e1f7:	mov    eax,esp
  42e1f9:	iret   
  42e1fa:	jmp    0xdfdf5787
  42e1ff:	cli    
  42e200:	sbb    cl,BYTE PTR [esp+edi*4-0x56b02df8]
  42e207:	stos   BYTE PTR es:[edi],al
  42e208:	mov    dl,0x26
  42e20a:	mov    ebp,0x2abdbee7
  42e20f:	sbb    DWORD PTR [eax],eax
	...
  42e221:	add    BYTE PTR [eax],al
  42e223:	add    BYTE PTR [ebp-0xfc5685],dl
  42e229:	push   ecx
  42e22a:	icebp  
  42e22b:	add    eax,DWORD PTR [eax]
  42e22d:	sbb    eax,DWORD PTR ds:0x335fb8b6
  42e233:	inc    ebx
  42e234:	mov    ch,0x8b
  42e236:	fwait
  42e237:	push   esi
  42e238:	cmp    ah,BYTE PTR [ebp+0x378637f1]
  42e23e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e23f:	js     0x42e270
  42e241:	daa    
  42e242:	les    esp,FWORD PTR gs:[ecx-0x71071d8b]
  42e249:	inc    esi
  42e24a:	es add al,0x1e
  42e24d:	jge    0x42e2b0
  42e24f:	adc    al,0x75
  42e251:	(bad)  
  42e252:	pop    esi
  42e253:	mov    bl,0x30
  42e255:	push   ds
  42e256:	cmp    eax,0xe5a5ca20
  42e25b:	cmp    BYTE PTR [esi-0xaebd3e3],ah
  42e261:	fwait
  42e262:	loopne 0x42e222
  42e264:	pusha  
  42e265:	xchg   ebx,eax
  42e266:	mov    ds:0x29802118,al
  42e26b:	add    al,0x32
  42e26d:	into   
  42e26e:	loope  0x42e235
  42e270:	mov    bh,0x90
  42e272:	jle    0x42e284
  42e274:	into   
  42e275:	pushf  
  42e276:	fnstcw WORD PTR [esi-0x40ed6cb8]
  42e27c:	mov    al,ds:0xf6dd005b
  42e281:	(bad)  
  42e282:	pop    ebx
  42e283:	unpcklps xmm4,xmm6
  42e286:	or     ebp,ecx
	...
  42e29c:	push   0xf737308c
  42e2a1:	pop    DWORD PTR [edi+edi*4]
  42e2a4:	aas    
  42e2a5:	fwait
  42e2a6:	and    al,0xe1
  42e2a8:	ret    0xe871
  42e2ab:	cmp    eax,0x65fb2a0a
  42e2b0:	jbe    0x42e24d
  42e2b2:	sbb    eax,0xdbba6d36
  42e2b7:	stos   BYTE PTR es:[edi],al
  42e2b8:	mov    dh,0x2a
  42e2ba:	adc    eax,0xcfc971
  42e2bf:	fs jbe 0x42e25d
  42e2c2:	or     eax,0x758b86d2
  42e2c7:	loope  0x42e339
  42e2c9:	pop    DWORD PTR [ecx]
  42e2cb:	jb     0x42e2c3
  42e2cd:	xchg   edi,eax
  42e2ce:	out    0xe6,eax
  42e2d0:	loopne 0x42e2fc
  42e2d2:	adc    eax,0xcfcaed
  42e2d7:	(bad)  
  42e2d8:	hlt    
  42e2d9:	mov    al,BYTE PTR [eax]
  42e2db:	fistp  QWORD PTR [edx-0x4ed52da1]
  42e2e1:	mov    edx,DWORD PTR [edx+0x62]
  42e2e4:	int    0x6b
  42e2e6:	or     BYTE PTR [ebp+0x13],dl
  42e2e9:	cs mov ch,0x7d
  42e2ec:	inc    ebx
  42e2ed:	sub    al,BYTE PTR [ecx+ebp*4-0x3047b43]
  42e2f4:	mov    ds:0x29e93f4a,al
  42e2f9:	jl     0x42e283
  42e2fb:	clc    
  42e2fc:	jbe    0x42e28d
  42e2fe:	test   DWORD PTR [ecx+0x0],ebp
	...
  42e314:	popf   
  42e315:	xchg   esp,eax
  42e316:	aaa    
  42e317:	sbb    DWORD PTR [ebp-0x4e58f764],edi
  42e31d:	nop
  42e31e:	xchg   DWORD PTR [eax],eax
  42e320:	mov    WORD PTR [ebx-0x1b5df81d],ss
  42e326:	adc    al,0x18
  42e328:	nop
  42e329:	rol    DWORD PTR [eax],1
  42e32b:	pop    esi
  42e32c:	pop    esi
  42e32d:	cwde   
  42e32e:	add    dh,dh
  42e330:	xchg   ecx,eax
  42e331:	and    ecx,edx
  42e333:	inc    ebx
  42e334:	mov    WORD PTR [ebp+0x2d708b4e],cs
  42e33a:	pop    es
  42e33b:	je     0x42e2fc
  42e33d:	rep ins DWORD PTR es:[edi],dx
  42e33f:	mov    ah,0xfa
  42e341:	loop   0x42e2c6
  42e343:	rol    BYTE PTR [eax-0x79],0xf7
  42e347:	xor    eax,0x3b4478
  42e34c:	fwait
  42e34d:	jl     0x42e2d7
  42e34f:	adc    DWORD PTR [ecx+edx*4],ecx
  42e352:	test   eax,eax
  42e354:	inc    eax
  42e355:	xchg   edi,eax
  42e356:	xor    esi,DWORD PTR [eax+0x54]
  42e359:	pop    esi
  42e35a:	add    eax,0xe3cb9c33
  42e35f:	or     esp,DWORD PTR [edx]
  42e361:	in     al,0x73
  42e363:	and    al,0x48
  42e365:	in     al,0x14
  42e367:	fmul   DWORD PTR [edi]
  42e369:	rol    DWORD PTR [eax],1
  42e36b:	pop    esi
  42e36c:	ficom  WORD PTR [ebx-0xb58ab00]
  42e372:	in     eax,dx
  42e373:	add    eax,0x3b3dbc
	...
  42e38c:	and    al,al
  42e38e:	sbb    DWORD PTR [ebp+0x14],0xffffffbb
  42e392:	je     0x42e403
  42e394:	in     al,0x1f
  42e396:	scas   eax,DWORD PTR es:[edi]
  42e397:	(bad)  
  42e398:	cmp    ecx,DWORD PTR ds:0xe28274c0
  42e39e:	xor    al,0x6c
  42e3a0:	cmp    edx,eax
  42e3a2:	add    bh,bh
  42e3a4:	loope  0x42e3be
  42e3a6:	adc    DWORD PTR [eax-0x34],eax
  42e3a9:	pop    ss
  42e3aa:	lock test DWORD PTR [ebp-0x71abccfc],esi
  42e3b1:	je     0x42e3bb
  42e3b3:	jne    0x42e427
  42e3b5:	mov    ecx,0x1ab50c3a
  42e3ba:	or     al,0x66
  42e3bc:	lds    ebp,FWORD PTR [ebx-0x3bfaf3bb]
  42e3c2:	inc    edx
  42e3c3:	or     al,0x5
  42e3c5:	mov    edi,0xc59ba9c6
  42e3ca:	cmp    BYTE PTR [ebp-0x5b],0x36
  42e3ce:	xor    ebp,DWORD PTR ds:0x835d5e2
  42e3d4:	add    BYTE PTR [ebx-0x35],0x10
  42e3d8:	cmc    
  42e3d9:	sub    DWORD PTR ss:[eax],eax
  42e3dc:	jb     0x42e3c2
  42e3de:	push   es
  42e3df:	xchg   DWORD PTR [ebp+0x50],ebp
  42e3e2:	adc    ecx,DWORD PTR [edi+0x62]
  42e3e5:	and    esi,DWORD PTR [ebx-0x4bc90aec]
  42e3eb:	fsubr  DWORD PTR [esi+0xfb5476]
	...
  42e401:	add    BYTE PTR [eax],al
  42e403:	add    bl,al
  42e405:	cs aas 
  42e407:	mov    ebx,edi
  42e409:	sub    bh,BYTE PTR [ebp+edx*1+0x3f4665]
  42e410:	xchg   edx,eax
  42e411:	jmp    0x2c8024d4
  42e416:	test   al,0xd
  42e418:	and    al,bl
  42e41a:	adc    al,0xfb
  42e41c:	mov    al,ds:0xa8fb5232
  42e421:	or     eax,DWORD PTR cs:[eax-0x4b]
  42e425:	je     0x42e482
  42e427:	pop    ebp
  42e428:	neg    DWORD PTR [ecx]
  42e42a:	call   DWORD PTR [esi+ebp*1+0x52]
  42e42e:	scas   al,BYTE PTR es:[edi]
  42e42f:	add    eax,0x4304a5
  42e434:	mov    cl,0x89
  42e436:	mov    ebx,DWORD PTR [ebp-0x53]
  42e439:	(bad)  
  42e43a:	cmp    esi,DWORD PTR [eax]
  42e43c:	gs aaa 
  42e43e:	dec    ecx
  42e43f:	ja     0x42e410
  42e441:	and    ebp,DWORD PTR [ebp-0x3c]
  42e444:	inc    ecx
  42e445:	lods   al,BYTE PTR ds:[esi]
  42e446:	mov    dh,cl
  42e448:	dec    esi
  42e449:	inc    esp
  42e44a:	es add al,0xbe
  42e44d:	jns    0x42e4c0
  42e44f:	adc    eax,0xb45e8ff5
  42e454:	xor    BYTE PTR [edx],bl
  42e456:	cmc    
  42e457:	push   eax
  42e458:	jmp    0xd323:0x530edc1
  42e45f:	sbb    ecx,DWORD PTR [esi+0x7bafd9a]
  42e465:	or     BYTE PTR [edx+0x32],0x0
	...
  42e479:	add    BYTE PTR [eax],al
  42e47b:	add    BYTE PTR [ecx+0x7e07bc22],dh
  42e481:	jge    0x42e4b4
  42e483:	adc    al,0xf5
  42e485:	(bad)  
  42e486:	cmp    bp,ax
  42e489:	(bad)  
  42e48a:	mov    ch,0xe8
  42e48c:	pop    es
  42e48d:	and    ebx,DWORD PTR [ebx+0x2d7d5e0b]
  42e493:	adc    al,0xf5
  42e495:	(bad)  
  42e496:	jg     0x42e49b
  42e498:	dec    esi
  42e499:	call   0x56dd:0xb63d8ee1
  42e4a0:	ds jge 0x42e498
  42e4a3:	pcmpeqw mm1,QWORD PTR [edi+0x4fc2dbfa]
  42e4aa:	xchg   edx,eax
  42e4ab:	mov    edx,0x8d2997a7
  42e4b0:	ja     0x42e435
  42e4b2:	ficom  DWORD PTR [eax]
  42e4b4:	in     eax,0x7f
  42e4b6:	sub    DWORD PTR [esi+ebp*2],eax
  42e4b9:	mov    ch,0xe7
  42e4bb:	shl    DWORD PTR [edi-0x5750de70],0x22
  42e4c2:	xor    al,0x14
  42e4c4:	out    dx,al
  42e4c5:	pushf  
  42e4c6:	add    ch,ah
  42e4c8:	and    DWORD PTR [esi],0x15
  42e4cb:	int    0xb2
  42e4cd:	iret   
  42e4ce:	add    BYTE PTR [edi+0x7a],al
  42e4d1:	les    edi,FWORD PTR [esi-0x78434913]
  42e4d7:	test   DWORD PTR [ebx],edi
  42e4d9:	jo     0x81d29bc7
  42e4df:	xchg   ebp,eax
	...
  42e4f4:	push   ss
  42e4f5:	mov    WORD PTR [eax],es
  42e4f7:	jmp    0xa9c8a307
  42e4fc:	fidivr DWORD PTR [ebx+0x66]
  42e4ff:	jmp    0x39580c0a
  42e504:	ror    bh,0x0
  42e507:	sbb    al,0xbb
  42e509:	nop
  42e50a:	add    cl,ch
  42e50c:	mov    edi,0xb6e9f30b
  42e511:	(bad)  
  42e512:	lea    esp,[esi-0x3e]
  42e515:	nop
  42e516:	add    cl,ch
  42e518:	inc    ebx
  42e519:	xor    ch,al
  42e51b:	mov    edi,0x5c00900a
  42e520:	in     eax,0x81
  42e522:	mul    DWORD PTR [esi]
  42e524:	pop    ds
  42e525:	aaa    
  42e526:	mov    edi,cs
  42e528:	mov    dh,0x8f
  42e52a:	add    eax,0x8fb17b
  42e52f:	xor    DWORD PTR [edx+0x2de966bf],0xffffff9c
  42e536:	sub    BYTE PTR [edx-0x2],0x25
  42e53a:	call   0xfb68177a
  42e53f:	mul    BYTE PTR fs:[ebp+ebx*1+0x68bef772]
  42e547:	jns    0x42e530
  42e549:	popa   
  42e54a:	add    BYTE PTR [edx+ecx*4+0x7f],ah
  42e54e:	std    
  42e54f:	into   
  42e550:	cmp    al,0xbf
  42e552:	call   0xf6ab5357
  42e557:	inc    DWORD PTR [eax]
	...
  42e569:	add    BYTE PTR [eax],al
  42e56b:	add    BYTE PTR [ecx+0x4b],bl
  42e56e:	pop    es
  42e56f:	xchg   ebp,eax
  42e570:	sbb    al,0xf
  42e572:	shl    BYTE PTR [ebp-0x2b],0x1a
  42e576:	mov    ebx,0x10a26566
  42e57b:	std    
  42e57c:	xor    ebp,eax
  42e57e:	mov    eax,0x8dddee
  42e583:	lea    ebx,[ecx+0x29]
  42e586:	repnz push DWORD PTR [ebx]
  42e589:	dec    ebp
  42e58a:	add    BYTE PTR [eax],al
  42e58c:	(bad)  
  42e58e:	jne    0x42e589
  42e590:	int    0x8
  42e592:	test   DWORD PTR [eax],ebx
  42e594:	adc    esp,edi
  42e596:	not    BYTE PTR [eax-0x7c]
  42e599:	or     cl,BYTE PTR [ecx+0x37]
  42e59c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e59d:	repz add BYTE PTR [ecx+0x4461e6e2],dh
  42e5a4:	push   edx
  42e5a5:	mov    edi,0x7224458d
  42e5aa:	add    BYTE PTR [eax-0x4d],dl
  42e5ad:	nop
  42e5ae:	push   eax
  42e5af:	push   ss
  42e5b0:	sbb    al,0x8d
  42e5b2:	jnp    0x42e578
  42e5b4:	sub    al,0x6e
  42e5b7:	or     al,0xe1
  42e5b9:	mov    al,ds:0xe6b3ff18
  42e5be:	mov    BYTE PTR [ebp-0xc],dh
  42e5c1:	adc    al,0x45
  42e5c3:	mov    al,0xb3
  42e5c5:	nop
  42e5c6:	pop    eax
  42e5c7:	adc    DWORD PTR [ecx*4-0x42d3ba73],ecx
  42e5ce:	lea    eax,[ebp+0x0]
	...
  42e5e1:	add    BYTE PTR [eax],al
  42e5e3:	add    BYTE PTR [ebx+edi*4+0x62],dh
  42e5e7:	add    BYTE PTR [ecx+edi*4],dh
  42e5ea:	add    DWORD PTR [eax+0xc],0xa
  42e5ee:	test   DWORD PTR [eax],edx
  42e5f0:	icebp  
  42e5f1:	out    0xf6,eax
  42e5f3:	push   eax
  42e5f4:	mov    ch,0x4e
  42e5f6:	cmp    al,0x9e
  42e5f8:	mov    ch,0x36
  42e5fa:	jp     0x42e5bc
  42e5fc:	xor    BYTE PTR [edx],0xf5
  42e5ff:	mov    edi,0x102d25de
  42e604:	cmp    BYTE PTR [esp+esi*4+0x50],dh
  42e608:	xchg   BYTE PTR [esi-0x5e],cl
  42e60b:	mov    ds:0xe826e9db,eax
  42e610:	mov    dh,0x36
  42e612:	(bad)  
  42e613:	cli    
  42e614:	inc    edx
  42e615:	sub    bh,BYTE PTR [eax+0x3f24e515]
  42e61b:	add    BYTE PTR [eax],dh
  42e61d:	imul   DWORD PTR [edx]
  42e61f:	nop    DWORD PTR [edi]
  42e622:	mov    eax,0x8f43aa2f
  42e627:	adc    ebp,esi
  42e629:	ss mov edi,gs
  42e62c:	lea    ebx,[eax-0x424aff9c]
  42e632:	int3   
  42e633:	mov    al,0xb4
  42e635:	fcomp  DWORD PTR [ebx-0x37]
  42e638:	jbe    0x42e615
  42e63a:	mov    ebp,esp
  42e63c:	shl    BYTE PTR ss:[edi+0x4e96617f],cl
  42e643:	push   ebx
  42e644:	fbstp  TBYTE PTR [edi]
  42e646:	mov    eax,0x15
	...
  42e65b:	add    cl,ah
  42e65d:	inc    edi
  42e65e:	aas    
  42e65f:	add    BYTE PTR ds:0xa7880a6a,al
  42e665:	idiv   dh
  42e667:	cli    
  42e668:	add    BYTE PTR [edx],0xd8
  42e66b:	aas    
  42e66c:	mov    ch,0xad
  42e66e:	repnz retf 
  42e670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e671:	idiv   dh
  42e673:	cli    
  42e674:	or     bl,BYTE PTR [ebp-0x9390c16]
  42e67a:	(bad)  
  42e67b:	out    0x78,al
  42e67d:	stos   DWORD PTR es:[edi],eax
  42e67e:	mov    edi,0x6e8f8674
  42e683:	inc    eax
  42e684:	fnstcw WORD PTR [edi+0x1e]
  42e687:	add    DWORD PTR [ebp-0x77fbd9c0],eax
  42e68d:	pop    edx
  42e68e:	data16 cmp cl,dl
  42e691:	jnp    0x42e658
  42e693:	xor    DWORD PTR [edi-0x5528bf12],ebx
  42e699:	(bad)  
  42e69a:	aas    
  42e69b:	add    eax,0x18059ade
  42e6a0:	mov    al,0x7b
  42e6a2:	call   0x11fa9baa
  42e6a7:	xlat   BYTE PTR ds:[ebx]
  42e6a8:	mov    cl,BYTE PTR [edi+0x1fc6ba81]
  42e6ae:	mov    cl,BYTE PTR [ebx+0x43a2a7a8]
  42e6b4:	mov    ch,0x7
  42e6b6:	push   0xe98fb5e0
  42e6bb:	mov    dh,0xe8
  42e6bd:	mov    ds:0x438a,eax
	...
  42e6d2:	add    BYTE PTR [eax],al
  42e6d4:	mov    ch,0x1e
  42e6d6:	cmp    ch,BYTE PTR [edx]
  42e6d8:	mov    ch,0xa9
  42e6da:	jmp    0xad507508
  42e6df:	fild   QWORD PTR [edx-0x531b541]
  42e6e5:	pop    ss
  42e6e6:	inc    edx
  42e6e7:	xor    DWORD PTR [ebx+eiz*2],ebx
  42e6ea:	xor    BYTE PTR [ecx-0x701d408b],al
  42e6f0:	jne    0x42e6b0
  42e6f2:	pop    esi
  42e6f3:	mov    eax,ds:0x8abc52f8
  42e6f8:	popa   
  42e6f9:	adc    DWORD PTR ds:0xe98fb58c,ecx
  42e6ff:	dec    ebp
  42e700:	out    0x1e,al
  42e702:	xchg   esp,eax
  42e703:	or     esi,DWORD PTR [edx]
  42e705:	sbb    BYTE PTR [ecx],dl
  42e707:	iret   
  42e708:	lds    ecx,FWORD PTR [edi+0x506606e9]
  42e70e:	add    BYTE PTR [eax+0x74],ah
  42e711:	and    ebp,DWORD PTR [eax+0x4214b3e8]
  42e717:	call   0x24d076d2
  42e71c:	dec    ecx
  42e71d:	sar    bl,0x5c
  42e720:	mov    cl,0x1a
  42e722:	adc    eax,0xcfa5e9
  42e727:	ins    BYTE PTR es:[edi],dx
  42e728:	mul    BYTE PTR [ebx+0xcb7532c]
  42e72e:	inc    ebx
  42e72f:	sbb    DWORD PTR [ecx+0x2db1751a],ecx
  42e735:	sar    DWORD PTR [ecx+edi*1],cl
	...
  42e74c:	ror    DWORD PTR ds:[esp+ebp*2+0x3d],cl
  42e751:	cwde   
  42e752:	sti    
  42e753:	xchg   esi,eax
  42e754:	or     ebp,DWORD PTR [eax]
  42e756:	nop
  42e757:	mov    eax,0x6c8d1b03
  42e75c:	out    dx,al
  42e75d:	sbb    bh,bl
  42e75f:	jle    0x42e767
  42e761:	sub    cl,bl
  42e763:	shl    BYTE PTR [esi+0x6224888f],0x36
  42e76a:	add    al,0x2f
  42e76c:	cmc    
  42e76d:	sbb    al,BYTE PTR [eax]
  42e76f:	imul   ecx,ebp,0x8562001a
  42e775:	(bad)  
  42e776:	adc    DWORD PTR [ecx+0x3f49a3b6],ebp
  42e77c:	cmc    
  42e77d:	and    edx,DWORD PTR [eax]
  42e77f:	mov    ah,0xf7
  42e781:	sbb    dh,BYTE PTR [ebx-0x1b]
  42e784:	sub    eax,DWORD PTR [ecx+0xb]
  42e787:	jbe    0x42e780
  42e789:	mov    ecx,DWORD PTR [ebx]
  42e78b:	pop    esi
  42e78c:	inc    DWORD PTR [edi-0x6959f63f]
  42e792:	shl    esi,0xd3
  42e795:	xchg   esi,eax
  42e796:	push   eax
  42e797:	fmulp  st(3),st
  42e799:	pop    esi
  42e79a:	add    al,0x0
  42e79c:	(bad)  
  42e79e:	ud2    
  42e7a0:	ffree  st(2)
  42e7a2:	div    DWORD PTR [edi+0x14]
  42e7a5:	in     eax,0x74
  42e7a7:	or     BYTE PTR [ebx],cl
  42e7a9:	mov    ss,WORD PTR [ebp+edx*1-0x24]
  42e7ad:	xchg   ebx,eax
  42e7ae:	test   eax,eax
	...
  42e7c4:	pusha  
  42e7c5:	and    BYTE PTR [edx+0x64],0xeb
  42e7c9:	imul   ecx,DWORD PTR [edi+edi*8],0x1
  42e7cd:	inc    edx
  42e7ce:	or     al,BYTE PTR [eax-0x24]
  42e7d1:	pushf  
  42e7d2:	ror    BYTE PTR [edi],0x50
  42e7d5:	mov    ds:0xe9cc0000,eax
  42e7da:	xchg   ebp,edi
  42e7dc:	or     esp,esp
  42e7de:	add    eax,0xffffffb0
  42e7e1:	jge    0x42e766
  42e7e3:	inc    edi
  42e7e4:	int3   
  42e7e5:	adc    BYTE PTR [bp+di-0x2f],dl
  42e7e9:	lea    eax,[ecx]
  42e7eb:	add    ah,cl
  42e7ed:	shr    eax,0x5b
  42e7f0:	add    ah,dh
  42e7f2:	idiv   bh
  42e7f4:	mov    ds:0x2bd6f795,eax
  42e7f9:	ins    DWORD PTR es:[edi],dx
  42e7fa:	or     BYTE PTR [edx+0x8],ch
  42e7fd:	jecxz  0x42e86d
  42e7ff:	or     BYTE PTR [ebx],bl
  42e801:	stos   DWORD PTR es:[edi],eax
  42e802:	mov    BYTE PTR [ecx],al
  42e804:	pushf  
  42e805:	xchg   ecx,eax
  42e806:	not    DWORD PTR ds:0x407ec8
  42e80c:	adc    DWORD PTR [esp+esi*2+0x38],edx
  42e810:	test   cl,ch
  42e812:	cli    
  42e813:	call   FWORD PTR [esp+eiz*8+0x6e]
  42e817:	or     al,0xab
  42e819:	mov    eax,ss
  42e81b:	adc    cl,BYTE PTR [ecx+edx*4]
  42e81e:	test   eax,eax
  42e820:	xor    DWORD PTR [edx+0x114c4783],eax
  42e826:	mov    eax,0x24
	...
  42e83b:	add    BYTE PTR [ebp-0x4b0000d9],dh
  42e841:	add    ebx,DWORD PTR [ecx]
  42e843:	xchg   BYTE PTR [eax-0x6b],bh
  42e846:	test   eax,0x82269f58
  42e84b:	mov    bl,0xa1
  42e84d:	daa    
  42e84e:	(bad)  
  42e84f:	call   FWORD PTR [edx]
  42e851:	in     eax,0xb3
  42e853:	adc    eax,0x3f1825
  42e858:	sbb    eax,0xb5005de1
  42e85d:	mov    cl,0x3a
  42e85f:	or     al,0x2
  42e861:	addr16 loopne 0x42e863
  42e864:	repnz es aas 
  42e867:	jne    0x42e809
  42e869:	jns    0x42e7ec
  42e86b:	sar    BYTE PTR [ecx-0x2eba7c8a],0x76
  42e872:	mov    ch,0x15
  42e874:	inc    ecx
  42e875:	sbb    edi,DWORD PTR [edi]
  42e877:	add    BYTE PTR [edi+0x34],bl
  42e87a:	add    BYTE PTR [ebp-0x27],0x56
  42e87e:	mov    ch,0xb3
  42e880:	popa   
  42e881:	daa    
  42e882:	(bad)  
  42e883:	push   DWORD PTR [edx-0xaebf4c5]
  42e889:	sub    DWORD PTR es:[ebx],ecx
  42e88c:	rdtsc  
  42e88e:	add    BYTE PTR [ebp-0x6f],0x76
  42e892:	mov    ch,0xb3
  42e894:	jmp    0x8b42e7c0
  42e899:	and    ecx,DWORD PTR [edi]
  42e89b:	adc    al,0xf5
  42e89d:	outs   dx,DWORD PTR es:[esi]
  42e89f:	add    DWORD PTR [eax],eax
	...
  42e8b1:	add    BYTE PTR [eax],al
  42e8b3:	add    dl,bl
  42e8b5:	in     al,dx
  42e8b6:	lds    edi,FWORD PTR [esi-0x78b5d943]
  42e8bc:	pop    ecx
  42e8bd:	test   eax,0xd236f89b
  42e8c2:	adc    ecx,DWORD PTR [edi+0x3]
  42e8c5:	mov    dl,0xb1
  42e8c7:	xchg   ebx,edi
  42e8c9:	(bad)  
  42e8ca:	std    
  42e8cb:	dec    esp
  42e8cc:	jbe    0x42e85d
  42e8ce:	fld    QWORD PTR [ebx]
  42e8d0:	mov    ch,0x8f
  42e8d2:	adc    ch,BYTE PTR ds:0xdf9d06a1
  42e8d8:	ret    0x2be
  42e8db:	push   cs
  42e8dc:	mov    ch,0x83
  42e8de:	test   eax,0xe24f3803
  42e8e3:	jg     0x42e924
  42e8e5:	(bad)
  42e8e9:	aad    0xfd
  42e8eb:	jle    0x42e96a
  42e8ed:	jae    0x42e8c1
  42e8ef:	lds    esi,FWORD PTR [ebp-0x7ebc1671]
  42e8f5:	xchg   edx,eax
  42e8f6:	pop    esp
  42e8f7:	xor    bh,BYTE PTR [ecx-0x508113d8]
  42e8fd:	adc    BYTE PTR [edx-0x16b21818],ah
  42e903:	add    esi,DWORD PTR [ebp+0x3a46357f]
  42e909:	jp     0x42e980
  42e90b:	sbb    BYTE PTR [ebp-0x71],dh
  42e90e:	xor    al,BYTE PTR [edi-0x7ec67d0b]
  42e914:	jno    0x42e989
  42e916:	in     eax,dx
  42e917:	push   ebx
	...
  42e92c:	scas   al,BYTE PTR es:[edi]
  42e92d:	aas    
  42e92e:	ins    BYTE PTR es:[edi],dx
  42e92f:	les    edi,FWORD PTR [esi+0x7588a904]
  42e935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e936:	les    edi,FWORD PTR [esi-0x9]
  42e939:	and    DWORD PTR [esi-0x3c],0xffffffa9
  42e93d:	mov    edi,0x84b11962
  42e942:	test   eax,0xdd503803
  42e947:	push   ebp
  42e948:	xor    dl,dl
  42e94a:	cmc    
  42e94b:	pop    edx
  42e94c:	repnz dec edi
  42e94e:	in     eax,dx
  42e94f:	push   ebx
  42e950:	cmp    ah,dl
  42e952:	add    eax,0x1b0510
  42e957:	sbb    ch,BYTE PTR [eax+edx*2]
  42e95a:	or     edx,DWORD PTR [ecx+edi*2+0x33]
  42e95e:	(bad)  
  42e95f:	fidiv  DWORD PTR [esi+0x14]
  42e962:	rcl    BYTE PTR [ebp-0x28de9c4],0xbb
  42e969:	(bad)  
  42e96a:	sti    
  42e96b:	xchg   ebp,eax
  42e96c:	sbb    cl,BYTE PTR [ebx+0x32492687]
  42e972:	std    
  42e973:	(bad)  
  42e974:	adc    eax,DWORD PTR [bp+si]
  42e977:	mul    dl
  42e979:	jae    0x42e987
  42e97b:	pusha  
  42e97c:	jge    0x42e9f1
  42e97e:	adc    al,0x72
  42e980:	jl     0x42e905
  42e982:	mov    DWORD PTR ds:0xfcfb730d,esp
  42e988:	call   0x7450:0x3de94083
  42e98f:	repnz add BYTE PTR [eax],al
	...
  42e9a2:	add    BYTE PTR [eax],al
  42e9a4:	xchg   BYTE PTR [esp+eax*2],cl
  42e9a7:	add    eax,0x80e8bfbd
  42e9ac:	pop    eax
  42e9ad:	pop    DWORD PTR [eax]
  42e9af:	push   cs
  42e9b0:	fild   WORD PTR [bx+si]
  42e9b3:	inc    edx
  42e9b4:	dec    edx
  42e9b5:	xor    al,0x5d
  42e9b7:	stos   BYTE PTR es:[edi],al
  42e9b8:	pop    ebp
  42e9b9:	adc    ch,ah
  42e9bb:	push   0x1a
  42e9bd:	or     BYTE PTR [edi+0x37],0xe
  42e9c1:	imul   edi,ebx,0x72
  42e9c4:	pop    ax
  42e9c6:	jge    0x42e9b9
  42e9c8:	jmp    0x8f:0x590153d1
  42e9cf:	jmp    0x744b8e1b
  42e9d4:	in     eax,0x1b
  42e9d6:	call   0xd22a7b
  42e9db:	pusha  
  42e9dc:	in     eax,dx
  42e9dd:	and    esi,DWORD PTR [edi]
  42e9df:	es mov bh,0x13
  42e9e2:	mov    al,0x0
  42e9e4:	pop    ebp
  42e9e5:	mov    es,WORD PTR [eax]
  42e9e7:	mov    ebx,DWORD PTR [ecx]
  42e9e9:	jmp    0xa47a:0x8d7bf87a
  42e9f0:	pop    ebp
  42e9f1:	mov    es,WORD PTR [eax]
  42e9f3:	push   0x4b
  42e9f5:	and    ebp,ecx
  42e9f7:	pop    ecx
  42e9f8:	stos   DWORD PTR es:[edi],eax
  42e9f9:	jecxz  0x42ea2d
  42e9fb:	xlat   BYTE PTR ds:[ebx]
  42e9fc:	push   ebx
  42e9fd:	pop    es
  42e9fe:	xchg   ebp,eax
  42e9ff:	add    DWORD PTR [esi+ecx*4],ebx
  42ea02:	dec    edi
  42ea03:	push   0x38
  42ea05:	fnsave [eax+ecx*1+0x0]
	...
  42ea19:	add    BYTE PTR [eax],al
  42ea1b:	add    BYTE PTR [ecx+0x4989f8bf],dl
  42ea21:	jmp    0xeb00:0x8ed682e7
  42ea28:	mov    esi,0xbcfc459a
  42ea2d:	sti    
  42ea2e:	push   edx
  42ea2f:	shl    dl,0xdf
  42ea32:	mov    BYTE PTR [ebp+0x8],al
  42ea35:	sub    al,0xbe
  42ea37:	addps  xmm5,XMMWORD PTR [ebp+0x1]
  42ea3b:	add    ah,cl
  42ea3d:	cwde   
  42ea3e:	inc    ebp
  42ea3f:	clc    
  42ea40:	mov    esp,0xdc00987b
  42ea45:	(bad)  
  42ea46:	call   0xf720418c
  42ea4b:	mov    edx,DWORD PTR [edx+edx*1]
  42ea4e:	test   DWORD PTR [edi],0x15b48
  42ea54:	pushf  
  42ea55:	adc    al,0x7d
  42ea57:	clc    
  42ea58:	ins    BYTE PTR es:[edi],dx
  42ea59:	nop
  42ea5a:	jp     0x42ea9a
  42ea5c:	lea    ecx,[ebp-0x14367500]
  42ea62:	dec    esi
  42ea63:	call   0x398e36
  42ea68:	sbb    DWORD PTR [edi+eax*1-0x72],edx
  42ea6c:	mov    cl,0x8c
  42ea6e:	add    BYTE PTR [eax],al
  42ea70:	mov    ch,0xa5
  42ea72:	sub    ecx,DWORD PTR [eax]
  42ea74:	mov    ch,0x42
  42ea76:	repnz push ecx
  42ea78:	pop    ebp
  42ea79:	leave  
  42ea7a:	push   es
  42ea7b:	add    BYTE PTR [ebp+0x75c4b2],dh
	...
  42ea91:	add    BYTE PTR [eax],al
  42ea93:	add    dl,al
  42ea95:	adc    eax,0x62c8fbb9
  42ea9a:	pushf  
  42ea9b:	lock push ss
  42ea9d:	jno    0x42ea50
  42ea9f:	push   ebx
  42eaa0:	dec    ebp
  42eaa1:	jge    0x42eb08
  42eaa3:	cli    
  42eaa4:	cmp    ch,BYTE PTR [esi+0x27cae9c6]
  42eaaa:	(bad)  
  42eaab:	jmp    FWORD PTR [edx]
  42eaad:	pushf  
  42eaae:	mov    bl,0x87
  42eab0:	js     0x42eacc
  42eab2:	xchg   edi,eax
  42eab3:	sub    dh,ch
  42eab5:	and    BYTE PTR [eax+0x581e88fb],dh
  42eabb:	call   0xfbf3dcfb
  42eac0:	cs je  0x42ea73
  42eac3:	addr16 cmc 
  42eac5:	xor    al,BYTE PTR [edx-0x68c59640]
  42eacb:	lea    edx,[esi]
  42eacd:	push   ecx
  42eace:	mov    al,0x89
  42ead0:	js     0x42eaf0
  42ead2:	add    al,0x60
  42ead5:	sub    ebx,DWORD PTR ds:0x6b4d73fa
  42eadb:	lea    ebp,[ebx+0x1e]
  42eade:	push   esp
  42eadf:	sti    
  42eae0:	test   al,0xd2
  42eae2:	adc    eax,0xc9adb540
  42eae7:	call   0x4210d1
  42eaec:	imul   edi,DWORD PTR ds:[eax+0x7c3efb89],0x45
  42eaf4:	cdq    
  42eaf5:	scas   eax,DWORD PTR es:[edi]
  42eaf6:	dec    ecx
  42eaf7:	sub    al,0x0
	...
  42eb09:	add    BYTE PTR [eax],al
  42eb0b:	add    BYTE PTR [esi],bh
  42eb0d:	jae    0x42eb0b
  42eb0f:	mov    bl,dh
  42eb11:	(bad)  
  42eb12:	sbb    DWORD PTR [edx+esi*1-0x354fa467],ebx
  42eb19:	cmp    eax,0x471365a
  42eb1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb1f:	stos   DWORD PTR es:[edi],eax
  42eb20:	cli    
  42eb21:	push   es
  42eb22:	ret    
  42eb23:	jecxz  0x42eb52
  42eb25:	rol    DWORD PTR ds:0x3264077b,1
  42eb2b:	push   ss
  42eb2c:	and    DWORD PTR [ebp-0x57],edi
  42eb2f:	add    ebx,DWORD PTR [edx-0x7ece1fe8]
  42eb35:	mov    ds:0xc0e658c7,al
  42eb3a:	mov    edx,0xf88bc8b0
  42eb3f:	inc    ebx
  42eb40:	mov    ch,0x6
  42eb42:	stos   DWORD PTR es:[edi],eax
  42eb43:	out    dx,eax
  42eb44:	jmp    0x42eb96
  42eb46:	je     0x42eb5a
  42eb48:	xchg   BYTE PTR [edi],ah
  42eb4a:	fwait
  42eb4b:	prefetcht1 BYTE PTR fs:[edx-0x1d139a65]
  42eb53:	scas   eax,DWORD PTR es:[edi]
  42eb54:	fwait
  42eb55:	sbb    DWORD PTR [ecx-0x65],eax
  42eb58:	jle    0x42eb72
  42eb5a:	pop    ebx
  42eb5b:	lock out dx,eax
  42eb5d:	sbb    DWORD PTR [ebp+0x748f7512],0xe6049d4e
  42eb67:	jmp    0x8780:0x8107a2f7
  42eb6e:	sbb    BYTE PTR [eax+eax*1+0x0],dl
	...
  42eb82:	add    BYTE PTR [eax],al
  42eb84:	into   
  42eb85:	cmp    DWORD PTR [ebp+0x15],0xc4648f75
  42eb8c:	inc    ecx
  42eb8d:	jl     0x42ebf7
  42eb8f:	xor    DWORD PTR [ebp-0x4afc176e],edi
  42eb95:	fwait
  42eb96:	out    dx,eax
  42eb97:	scas   al,BYTE PTR es:[edi]
  42eb98:	rcl    BYTE PTR [esi],cl
  42eb9a:	aam    0xc3
  42eb9c:	stos   DWORD PTR es:[edi],eax
  42eb9d:	iret   
  42eb9e:	add    cl,ch
  42eba0:	adc    DWORD PTR [edi+0x39],ebx
  42eba3:	mov    dl,0xcd
  42eba5:	ins    BYTE PTR es:[edi],dx
  42eba6:	xchg   edi,esp
  42eba8:	mov    edx,0x53d152c6
  42ebad:	pop    esp
  42ebae:	ds jmp 0xe1437b82
  42ebb4:	mov    dh,0x27
  42ebb6:	lds    edi,FWORD PTR [esi+0x29848fb6]
  42ebbc:	pushf  
  42ebbd:	mov    fs,WORD PTR [esi-0x17]
  42ebc0:	cs sbb al,0x9e
  42ebc3:	das    
  42ebc4:	sbb    ch,BYTE PTR [esi+0x672e1200]
  42ebca:	sti    
  42ebcb:	mov    dh,0x1e
  42ebcd:	sub    BYTE PTR [esi-0x173c9de9],bl
  42ebd3:	or     edx,DWORD PTR [edi-0x94504e7]
  42ebd9:	iret   
  42ebda:	out    0xd8,eax
  42ebdc:	dec    ebx
  42ebdd:	popf   
  42ebde:	hlt    
  42ebdf:	add    esp,ebp
  42ebe1:	cmc    
  42ebe2:	stc    
  42ebe3:	out    dx,al
  42ebe4:	arpl   WORD PTR [edi],sp
  42ebe6:	retf   
  42ebe7:	mov    eax,DWORD PTR [eax]
	...
  42ebf9:	add    BYTE PTR [eax],al
  42ebfb:	add    BYTE PTR [eax+0x1b],dl
  42ebfe:	jg     0x42ebb1
  42ec00:	dec    ebx
  42ec01:	mov    ebx,0xd630325a
  42ec06:	add    ebp,ecx
  42ec08:	lea    ecx,[esi]
  42ec0a:	in     al,dx
  42ec0b:	sbb    BYTE PTR [eax-0x7793ac3a],cl
  42ec11:	xchg   DWORD PTR [ebx+0x60],edx
  42ec14:	test   DWORD PTR [edi],edx
  42ec16:	sti    
  42ec17:	aam    0x52
  42ec19:	test   DWORD PTR [eax-0x17],eax
  42ec1c:	(bad)  
  42ec1d:	cmp    eax,0xa2d93f39
  42ec22:	je     0x42ec86
  42ec24:	clc    
  42ec25:	arpl   WORD PTR [edi],si
  42ec27:	stos   BYTE PTR es:[edi],al
  42ec28:	loop   0x42ebce
  42ec2a:	mov    DWORD PTR [eax],eax
  42ec2c:	(bad)  
  42ec2e:	ins    DWORD PTR es:[edi],dx
  42ec2f:	ss sbb ecx,ebp
  42ec32:	xor    al,0x8b
  42ec34:	loop   0x42ec4d
  42ec36:	sub    dl,dl
  42ec38:	add    ebx,DWORD PTR [ebp+0x2c]
  42ec3b:	mov    DWORD PTR [edx+0x1e],eax
  42ec3e:	(bad)  
  42ec40:	mov    BYTE PTR [ecx-0x1728cfb2],dl
  42ec46:	cmp    BYTE PTR [edi+0x54],bl
  42ec49:	pop    esi
  42ec4a:	sub    bh,bh
  42ec4c:	sbb    DWORD PTR [esi+0x394c400a],0xf249083e
  42ec56:	mov    al,BYTE PTR [esp+ebx*2]
  42ec59:	popa   
  42ec5a:	adc    bh,bh
  42ec5c:	adc    esi,esp
  42ec5e:	add    BYTE PTR [ebp+0x0],0x0
	...
  42ec72:	add    BYTE PTR [eax],al
  42ec74:	cwde   
  42ec75:	sub    DWORD PTR [ecx+0x2c],eax
  42ec78:	dec    esi
  42ec79:	fdiv   st,st(6)
  42ec7b:	jne    0x42ec41
  42ec7d:	stc    
  42ec7e:	and    eax,0x57931b89
  42ec83:	add    al,0xa5
  42ec85:	lds    ecx,FWORD PTR [eax]
  42ec87:	mov    esp,DWORD PTR [edx+0x1e]
  42ec8a:	(bad)  
  42ec8b:	shl    bl,0x90
  42ec8e:	sub    BYTE PTR ds:[esi+0x7c],ah
  42ec92:	push   eax
  42ec93:	jmp    DWORD PTR [ecx+0x13]
  42ec96:	not    BYTE PTR ds:0x407d98
  42ec9c:	pop    edi
  42ec9d:	inc    edi
  42ec9e:	or     al,0xff
  42eca0:	mov    eax,ds:0x2815f6e3
  42eca5:	add    DWORD PTR [eax+0x0],0x9e3924c
  42ecac:	mov    ds:0xbeac14e4,eax
  42ecb1:	rol    DWORD PTR [eax],1
  42ecb3:	xor    cl,BYTE PTR [esp+eax*8]
  42ecb6:	push   ebx
  42ecb7:	leave  
  42ecb8:	mov    ch,0xe8
  42ecba:	pop    es
  42ecbb:	add    BYTE PTR [eax],al
  42ecbd:	mov    dl,0xa0
  42ecbf:	jg     0x42ec52
  42ecc1:	aaa    
  42ecc2:	push   eax
  42ecc3:	push   ebx
  42ecc4:	jae    0x42ed32
  42ecc6:	lods   eax,DWORD PTR ds:[esi]
  42ecc7:	add    BYTE PTR [edx-0xaf18ccc],dl
  42eccd:	es js  0x42ecc8
  42ecd0:	xor    ch,ah
  42ecd2:	test   BYTE PTR [edi+0x2c],0xec
  42ecd6:	scas   al,BYTE PTR es:[edi]
  42ecd7:	sti    
	...
  42ecec:	enter  0xe02,0x40
  42ecf0:	mov    ch,0x79
  42ecf2:	leave  
  42ecf3:	mov    DWORD PTR [eax],eax
  42ecf5:	iret   
  42ecf6:	out    0x59,eax
  42ecf8:	mov    esp,ebx
  42ecfa:	sub    eax,DWORD PTR [edi-0x3f7fd108]
  42ed00:	mov    cl,0xaf
  42ed02:	inc    ebx
  42ed03:	hlt    
  42ed04:	sub    al,0x4c
  42ed06:	test   DWORD PTR [esi+0xf193ef3],0x406e340
  42ed10:	test   DWORD PTR [ebp+0x3422f433],eax
  42ed16:	push   ebx
  42ed17:	adc    dh,BYTE PTR [ebp+0x26]
  42ed1a:	add    ah,0xc1
  42ed1d:	mov    ds:0xb17275c4,eax
  42ed22:	inc    edx
  42ed23:	xor    BYTE PTR [esi+0x787ffc63],dh
  42ed29:	and    bh,bh
  42ed2b:	je     0x42ecee
  42ed2d:	jns    0x42ece6
  42ed2f:	mov    DWORD PTR [ebp+0x2c0437af],edi
  42ed35:	pop    edi
  42ed36:	cld    
  42ed37:	out    0x8e,al
  42ed39:	mov    eax,ds:0x52fc84f7
  42ed3e:	add    BYTE PTR [edi-0x7e306e1e],al
  42ed44:	mov    edi,0xb510718f
  42ed49:	(bad)  
  42ed4a:	pop    ss
  42ed4b:	(bad)  
  42ed4d:	iret   
  42ed4e:	in     eax,dx
  42ed4f:	sbb    DWORD PTR [eax],eax
	...
  42ed61:	add    BYTE PTR [eax],al
  42ed63:	add    BYTE PTR [eax-0x22149f4a],dh
  42ed69:	(bad)  
  42ed6a:	in     eax,dx
  42ed6b:	xor    DWORD PTR [ebp+0x3dfc0106],ebp
  42ed71:	(bad)  
  42ed72:	in     eax,dx
  42ed73:	cwde   
  42ed74:	mov    cl,0x10
  42ed76:	or     esp,edi
  42ed78:	or     BYTE PTR [edx-0x54],0xac
  42ed7c:	mov    ah,0x14
  42ed7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed7f:	stos   DWORD PTR es:[edi],eax
  42ed80:	cmp    cl,dl
  42ed82:	push   ecx
  42ed83:	xor    al,0x87
  42ed86:	fld    QWORD PTR [eax+0x45fe7c22]
  42ed8c:	mov    DWORD PTR [ecx+0x1fc8ac6c],esp
  42ed92:	xor    dl,BYTE PTR [esi]
  42ed94:	sbb    DWORD PTR [ecx-0x35c4fc57],eax
  42ed9a:	and    cl,BYTE PTR [edx+eiz*8+0x46]
  42ed9e:	daa    
  42ed9f:	sti    
  42eda0:	xor    bh,BYTE PTR [ebx+0x2baa9f5e]
  42eda6:	adc    DWORD PTR [eax+0x6e7f11],eax
  42edac:	xor    cl,BYTE PTR [edi]
  42edae:	pop    ecx
  42edaf:	add    dh,BYTE PTR [ebp+0x717a9b8f]
  42edb5:	imul   ebx,ebp,0x78
  42edb8:	ret    0x3a53
  42edbb:	jge    0x42ee2e
  42edbd:	imul   esi,ebp,0xffffff86
  42edc0:	call   DWORD PTR [ebx]
  42edc2:	cmp    ebx,DWORD PTR [esi]
  42edc4:	mov    ch,0x2
  42edc6:	and    eax,0xe0
	...
  42eddb:	add    dl,cl
  42eddd:	mov    edi,0x79de064f
  42ede2:	fst    DWORD PTR [esi*2-0x4f0bff71]
  42ede9:	mov    es,WORD PTR [eax]
  42edeb:	jmp    0xa1c27482
  42edf0:	mov    al,0x88
  42edf2:	test   DWORD PTR [eax-0x47],ecx
  42edf5:	pop    DWORD PTR [eax]
  42edf7:	push   0xffffffd5
  42edf9:	imul   ecx,DWORD PTR [eax],0xffffffe9
  42edfc:	stos   DWORD PTR es:[edi],eax
  42edfd:	ror    DWORD PTR [ebp+eax*1+0x6ca78795],cl
  42ee04:	cli    
  42ee05:	xchg   DWORD PTR [eax+0x76],edx
  42ee08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee09:	jmp    0x42ee18
  42ee0b:	sub    DWORD PTR [ecx+0x34093f0a],edi
  42ee11:	push   eax
  42ee12:	je     0x42ee1f
  42ee14:	repnz retf 0x6c24
  42ee18:	sub    BYTE PTR [edi+edx*1+0x6d2806b8],bl
  42ee1f:	mov    BYTE PTR [edi],cl
  42ee21:	pop    ss
  42ee22:	xchg   DWORD PTR [ecx-0x2e],eax
  42ee25:	push   edx
  42ee26:	and    al,0x60
  42ee28:	cmc    
  42ee29:	imul   ecx,DWORD PTR [esp+eiz*2],0xe
  42ee2d:	popf   
  42ee2e:	or     ah,BYTE PTR [edi+0x31]
  42ee31:	(bad)  
  42ee32:	push   cs
  42ee33:	jmp    0x95ca7d8b
  42ee38:	or     cl,BYTE PTR [ebx+0x54e1f7f]
  42ee3e:	aas    
  42ee3f:	icebp  
	...
  42ee54:	xchg   BYTE PTR [esi],dl
  42ee56:	adc    eax,0xcfab4d
  42ee5b:	ins    BYTE PTR es:[edi],dx
  42ee5c:	pop    esi
  42ee5d:	pushf  
  42ee5e:	mov    WORD PTR [edx-0x170127e2],ds
  42ee64:	mov    dh,0xb
  42ee66:	rcl    BYTE PTR [ebp-0x23],0xac
  42ee6a:	add    BYTE PTR [edx],bh
  42ee6c:	dec    ecx
  42ee6d:	sti    
  42ee6e:	(bad)  
  42ee6f:	call   0x102fa2a
  42ee74:	cwde   
  42ee75:	sbb    esi,esi
  42ee77:	je     0x42ee31
  42ee79:	pop    ss
  42ee7a:	dec    esi
  42ee7b:	push   0xffffffd8
  42ee7d:	je     0x42ee7f
  42ee7f:	push   0xffffffbe
  42ee81:	in     eax,0x2a
  42ee83:	call   0x439288
  42ee88:	mov    ds:0x62f7f0a0,eax
  42ee8d:	sub    esi,0x978e3a81
  42ee93:	and    al,0x8c
  42ee95:	or     edi,DWORD PTR [esi+0x79e380]
  42ee9b:	push   edi
  42ee9c:	xor    al,0xff
  42ee9e:	lahf   
  42ee9f:	(bad)  
  42eea0:	adc    esi,esp
  42eea2:	cmp    eax,0xb5e613ff
  42eea7:	and    BYTE PTR [ebx],0x7c
  42eeaa:	add    bl,ch
  42eeac:	repnz lds edx,FWORD PTR [esi-0x75]
  42eeb0:	stc    
  42eeb1:	(bad)  
  42eeb2:	mov    ebx,0x24cae753
  42eeb7:	or     BYTE PTR [eax],al
	...
  42eec9:	add    BYTE PTR [eax],al
  42eecb:	add    ah,ah
  42eecd:	sbb    dh,dh
  42eecf:	inc    DWORD PTR [ebx-0x71a444e7]
  42eed5:	adc    bh,bl
  42eed7:	push   edx
  42eed8:	cli    
  42eed9:	nop
  42eeda:	lock push edi
  42eedc:	mov    eax,ds:0xc35308c8
  42eee1:	jg     0x42ee87
  42eee3:	adc    cl,BYTE PTR [esi+ecx*4-0x73]
  42eee7:	jle    0x42eeed
  42eee9:	in     eax,0x2e
  42eeeb:	call   0x399d46
  42eef0:	add    ebx,DWORD PTR [edi+0x30]
  42eef3:	call   0x399d16
  42eef8:	data16 jnp 0x42ef53
  42eefb:	(bad)  
  42eefc:	fisttp DWORD PTR [ebp-0x4c4ab7c1]
  42ef02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef03:	jg     0x42ef00
  42ef05:	xchg   DWORD PTR [ecx+0x6489cd32],ebp
  42ef0b:	cli    
  42ef0c:	sar    BYTE PTR [ebp+0x21f357fc],cl
  42ef12:	inc    DWORD PTR [ecx+0x6d]
  42ef15:	pop    ebx
  42ef16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef17:	dec    edi
  42ef18:	mov    edx,0xf50e5312
  42ef1d:	es dec eax
  42ef1f:	pop    edx
  42ef20:	push   cs
  42ef21:	out    0x4a,al
  42ef23:	xchg   DWORD PTR [ecx-0x4b536758],edx
  42ef29:	dec    DWORD PTR es:[esi-0x15]
  42ef2d:	jns    0x42efac
  42ef2f:	jge    0x42ef31
	...
  42ef41:	add    BYTE PTR [eax],al
  42ef43:	add    BYTE PTR [ebp+0x358701ad],bh
  42ef49:	mov    bh,0xff
  42ef4b:	push   DWORD PTR [ebp-0x776328b]
  42ef51:	scas   al,BYTE PTR es:[edi]
  42ef52:	mov    esi,0x44276a45
  42ef57:	(bad)  
  42ef58:	clc    
  42ef59:	(bad)  
  42ef5a:	push   esp
  42ef5b:	xchg   DWORD PTR [edx-0x41],esp
  42ef5e:	in     al,dx
  42ef5f:	cld    
  42ef60:	push   edx
  42ef61:	push   edx
  42ef62:	add    al,0xba
  42ef65:	mov    ds:0x26b50053,al
  42ef6a:	jge    0x42efb1
  42ef6c:	push   ecx
  42ef6d:	jg     0x42ef2a
  42ef6f:	pop    eax
  42ef70:	xor    dh,BYTE PTR [edx+0x7d]
  42ef73:	lock ss jns 0x42ef79
  42ef77:	jne    0x42ef32
  42ef79:	or     al,0xf
  42ef7b:	out    0xb2,eax
  42ef7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef7f:	adc    ecx,DWORD PTR [eax+0x6d1c1d2b]
  42ef85:	lea    eax,[edx]
  42ef87:	das    
  42ef88:	cmc    
  42ef89:	div    BYTE PTR [ecx+0x45]
  42ef8c:	push   ecx
  42ef8d:	nop
  42ef8e:	dec    edi
  42ef8f:	add    al,0x85
  42ef91:	adc    ah,dh
  42ef93:	push   ebx
  42ef94:	(bad)  
  42ef95:	iret   
  42ef96:	jmp    0x43c6e91f
  42ef9b:	jnp    0x42effd
  42ef9d:	jmp    0x42efd1
  42ef9f:	cmp    cl,BYTE PTR [ecx+0x75]
  42efa2:	cwd    
  42efa4:	mov    al,ds:0x1e2f9a
	...
  42efb9:	add    BYTE PTR [eax],al
  42efbb:	add    BYTE PTR [ebp+0x659f2402],ah
  42efc1:	add    ch,BYTE PTR [eax+ebx*2]
  42efc4:	add    eax,0xc737f411
  42efc9:	iret   
  42efca:	jmp    0x7ec66953
  42efcf:	add    DWORD PTR [edx],esi
  42efd1:	retf   0x7a8c
  42efd4:	clc    
  42efd5:	out    0x2,eax
  42efd7:	jge    0x42efc9
  42efd9:	sbb    dl,BYTE PTR [esi]
  42efdb:	test   eax,0xc3032c08
  42efe0:	jne    0x42ef69
  42efe2:	je     0x42f012
  42efe4:	sub    DWORD PTR [ecx+0x27173e70],0x105e4e77
  42efee:	dec    edx
  42efef:	cs pop ebp
  42eff1:	add    ch,BYTE PTR [edi+ebx*2+0x4027fdd]
  42eff8:	mov    ch,0x4
  42effa:	and    ebx,DWORD PTR [ebx-0x57d5495d]
  42f000:	xor    DWORD PTR [edi-0x64],ecx
  42f003:	call   0xa3e6f28b
  42f008:	test   DWORD PTR [edx+ebx*1],eax
  42f00b:	fwait
  42f00c:	loopne 0x42f020
  42f00e:	or     ch,BYTE PTR [eax-0x3fca65d8]
  42f014:	js     0x42f059
  42f016:	push   ecx
  42f017:	sub    esi,DWORD PTR [ebp-0x71]
  42f01a:	add    BYTE PTR [ecx],al
  42f01c:	push   cs
  42f01d:	mov    ebp,0xeefb
	...
  42f032:	add    BYTE PTR [eax],al
  42f034:	dec    ebp
  42f035:	retf   0x69fb
  42f038:	pushf  
  42f039:	adc    al,0xff
  42f03b:	in     eax,dx
  42f03c:	xor    al,0xcf
  42f03e:	sti    
  42f03f:	(bad)  
  42f040:	sbb    ah,BYTE PTR [ecx-0x40]
  42f043:	cs jae 0x42effe
  42f046:	leave  
  42f047:	stos   DWORD PTR es:[edi],eax
  42f048:	ror    DWORD PTR [edi],1
  42f04a:	dec    esi
  42f04b:	ins    BYTE PTR es:[edi],dx
  42f04c:	je     0x42f07d
  42f04e:	push   eax
  42f04f:	bound  edx,QWORD PTR [edx]
  42f051:	daa    
  42f052:	or     al,0xac
  42f054:	adc    dl,BYTE PTR [edi+eiz*8]
  42f057:	lds    esi,FWORD PTR [esi]
  42f059:	lea    ecx,[ecx+ebp*8]
  42f05c:	in     eax,0xab
  42f05e:	sti    
  42f05f:	sbb    al,0x51
  42f061:	sbb    eax,0xc4399d45
  42f066:	push   ebx
  42f067:	xchg   BYTE PTR [edx+0x16],bl
  42f06a:	fsub   DWORD PTR [ebp+0x7e]
  42f06d:	fwait
  42f06e:	test   BYTE PTR [ecx+edi*4-0x71],al
  42f072:	add    BYTE PTR [edx+0x4a],ah
  42f075:	stc    
  42f076:	xchg   esi,eax
  42f077:	jmp    0xeea98032
  42f07c:	in     eax,dx
  42f07d:	mov    eax,es
  42f07f:	mov    cl,0x3e
  42f081:	stc    
  42f082:	jle    0x42f0d2
  42f084:	adc    bl,BYTE PTR [edi-0x5]
  42f087:	mov    esp,0xa1b51c4a
  42f08c:	adc    BYTE PTR [ebx],cl
  42f08e:	sti    
  42f08f:	ret    
  42f090:	mov    dh,0xf7
  42f092:	cli    
  42f093:	test   al,0xb6
  42f095:	pop    DWORD PTR [edi+0x9c]
	...
  42f0ab:	add    BYTE PTR [edx],ch
  42f0ad:	push   ss
  42f0ae:	ret    
  42f0af:	jo     0x42f0e5
  42f0b1:	js     0x42f0ad
  42f0b3:	push   ss
  42f0b4:	pop    edx
  42f0b5:	sbb    eax,0xf7816145
  42f0ba:	cmp    al,BYTE PTR [eax]
  42f0bc:	push   esp
  42f0bd:	test   DWORD PTR ss:[esp+ebx*8-0x3cf0c941],0x54488850
  42f0c9:	mov    edi,0xa0048305
  42f0ce:	jne    0x42f0d6
  42f0d0:	iret   
  42f0d1:	rcr    DWORD PTR [ebp-0x77],cl
  42f0d4:	xchg   ecx,eax
  42f0d5:	mov    DWORD PTR [ebp-0x8c95b7b],ecx
  42f0db:	jmp    FWORD PTR [eax+ecx*4+0x2bac8845]
  42f0e2:	pop    ebx
  42f0e3:	pop    edi
  42f0e4:	or     esi,DWORD PTR [esi]
  42f0e6:	test   al,al
  42f0e8:	sbb    BYTE PTR [esi+0x36f4858d],0xf7
  42f0ef:	(bad)  
  42f0f0:	in     al,dx
  42f0f1:	mov    BYTE PTR [ebp-0x40],al
  42f0f4:	fmul   QWORD PTR [eax+0x352a5885]
  42f0fa:	not    DWORD PTR [eax+0x24]
  42f0fd:	push   esi
  42f0fe:	cmp    al,BYTE PTR [eax]
  42f100:	pushf  
  42f101:	xchg   DWORD PTR [ebp-0x8c9f5a8],eax
  42f107:	push   eax
  42f108:	or     eax,eax
  42f10a:	clc    
  42f10b:	lea    esp,[ecx]
  42f10d:	inc    esi
  42f10e:	push   0x30
	...
  42f123:	add    BYTE PTR [ecx+0x1c560092],al
  42f129:	sub    ch,BYTE PTR [edx-0x72ca14a1]
  42f12f:	mov    ebp,0xfff73414
  42f134:	(bad)  
  42f135:	(bad)  
  42f137:	or     al,0xe
  42f139:	xchg   edx,eax
  42f13a:	add    BYTE PTR [ebx+0x650a01],cl
  42f140:	test   eax,0xc450e04f
  42f145:	push   eax
  42f146:	cld    
  42f147:	push   DWORD PTR [ebp-0x168a875b]
  42f14d:	mov    ah,0x40
  42f14f:	int3   
  42f150:	pop    ebp
  42f151:	adc    BYTE PTR [edi],bh
  42f153:	add    BYTE PTR ds:0x2fb4d4b,bl
  42f159:	jb     0x42f119
  42f15b:	jmp    0xfbe7ef08
  42f160:	mov    BYTE PTR [ecx-0x7c267e68],al
  42f166:	sti    
  42f167:	jmp    edx
  42f169:	enter  0xfb4d,0xc0
  42f16d:	and    al,0xe
  42f16f:	inc    eax
  42f170:	mov    ch,0x81
  42f172:	xor    ecx,DWORD PTR [eax]
  42f174:	cmp    al,0xb3
  42f176:	cwde   
  42f177:	xchg   DWORD PTR [ebx-0x4b6f8bbb],edi
  42f17d:	clc    
  42f17e:	dec    BYTE PTR [eax+ecx*1+0x20301c23]
  42f185:	idiv   esi
  42f187:	add    BYTE PTR gs:[eax],al
	...
  42f19a:	add    BYTE PTR [eax],al
  42f19c:	mov    ecx,0xfe2c9cbe
  42f1a1:	sbb    eax,0xc7584a5
  42f1a6:	cld    
  42f1a7:	sub    eax,0xa92075
  42f1ac:	mov    ch,0xf6
  42f1ae:	ja     0x42f1b2
  42f1b0:	jp     0x42f1b6
  42f1b2:	test   DWORD PTR [esi-0x88cb],0xf83379b5
  42f1bc:	bound  esi,QWORD PTR [ebx+eax*2-0x10]
  42f1c0:	dec    ebp
  42f1c1:	push   0x58
  42f1c3:	add    BYTE PTR [ebp+0x6b74c47a],dh
  42f1c9:	into   
  42f1ca:	sub    esi,eax
  42f1cc:	cs cmp al,0xab
  42f1cf:	call   0xfbe502fa
  42f1d4:	out    0x8f,al
  42f1d6:	ds jnp 0x42f249
  42f1d9:	neg    ebp
  42f1db:	shr    BYTE PTR [esi-0x4afbb2e3],0x8f
  42f1e2:	pop    esp
  42f1e3:	addr16 mov eax,ds:0x209
  42f1e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f1e8:	sbb    eax,0xfea64ff9
  42f1ed:	sbb    BYTE PTR [ebx+esi*4+0x7f5c8e93],ah
  42f1f4:	jo     0x42f203
  42f1f6:	loop   0x42f19c
  42f1f8:	test   DWORD PTR [eax],ebx
  42f1fa:	and    al,0xb0
  42f1fc:	call   0x0:0x9bc152
	...
  42f213:	add    BYTE PTR [ecx-0x2b],dl
  42f216:	call   0xfe4b2c1e
  42f21b:	test   al,0x41
  42f21d:	mov    ebp,DWORD PTR [esi-0x4]
  42f220:	cmp    edx,DWORD PTR [eax-0x2b]
  42f223:	jp     0x42f27d
  42f225:	(bad)  
  42f226:	in     eax,dx
  42f227:	mov    eax,ds:0xf880eb83
  42f22d:	pop    es
  42f22e:	call   0xb5bc:0x1610198
  42f235:	(bad)
  42f239:	xchg   ebp,eax
  42f23a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f23b:	add    esi,DWORD PTR [ebp-0x47d05938]
  42f241:	(bad)  
  42f242:	adc    eax,edi
  42f244:	add    DWORD PTR [edx+0x64d91a16],esp
  42f24a:	push   ecx
  42f24b:	scas   eax,DWORD PTR es:[edi]
  42f24c:	sub    ecx,DWORD PTR [edi-0x7cdc1717]
  42f252:	imul   edx
  42f254:	add    bl,BYTE PTR [ebp+edx*8+0x2b18e7f6]
  42f25b:	fwait
  42f25c:	jle    0x42f265
  42f25e:	cmp    ah,BYTE PTR [esp+ebp*1+0x1d310052]
  42f265:	mov    bh,0x87
  42f267:	daa    
  42f268:	dec    esi
  42f269:	or     bh,ah
  42f26b:	es push ecx
  42f26d:	pop    esp
  42f26e:	push   0x8fb680
  42f273:	(bad)  
  42f275:	div    BYTE PTR [esi]
  42f277:	pop    edx
	...
  42f28c:	pop    eax
  42f28d:	or     BYTE PTR [edi-0x6f],cl
  42f290:	pop    DWORD PTR ds:[eax]
  42f293:	jmp    0xc82b3e9d
  42f298:	test   DWORD PTR [ecx],ecx
  42f29a:	sti    
  42f29b:	es mov bl,0x7
  42f29e:	add    ecx,ebp
  42f2a0:	mov    dh,0x8f
  42f2a2:	sti    
  42f2a3:	push   ss
  42f2a4:	adc    DWORD PTR [edi-0x63],edx
  42f2a7:	xlat   BYTE PTR ds:[ebx]
  42f2a8:	push   ss
  42f2a9:	pusha  
  42f2aa:	call   0xfb4c26da
  42f2af:	(bad)  
  42f2b0:	lods   al,BYTE PTR ds:[esi]
  42f2b1:	jmp    edi
  42f2b3:	add    esi,DWORD PTR [ecx+ecx*1]
  42f2b6:	sti    
  42f2b7:	bound  ebp,QWORD PTR [edi+0x42b17508]
  42f2bd:	pop    ebp
  42f2be:	or     BYTE PTR [edx+0x31],dh
  42f2c1:	adc    BYTE PTR [ecx],al
  42f2c3:	jmp    0x45c0ea7e
  42f2c8:	mov    cl,0x8f
  42f2ca:	das    
  42f2cb:	test   eax,0xe8f88d3a
  42f2d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2d1:	and    eax,eax
  42f2d3:	push   ds
  42f2d4:	ret    0xbdd8
  42f2d7:	in     eax,dx
  42f2d8:	mov    dh,0x71
  42f2da:	adc    al,0x81
  42f2dc:	pusha  
  42f2dd:	mov    dh,0x0
  42f2df:	jmp    0xe5860f8a
  42f2e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f2e5:	push   es
  42f2e6:	adc    eax,0xcb5cbd
  42f2eb:	push   0x7d
  42f2ed:	pushf  
  42f2ee:	test   DWORD PTR [eax],eax
	...
  42f304:	pushf  
  42f305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f306:	push   DWORD PTR [ecx]
  42f308:	mov    WORD PTR [esi+edi*4],?
  42f30b:	add    BYTE PTR [edi+ecx*4+0x7],cl
  42f30f:	mov    bh,0x5b
  42f311:	or     ecx,DWORD PTR [edx+0x55]
  42f314:	cmovo  ecx,DWORD PTR [esi+0x66]
  42f318:	pop    ss
  42f319:	fdiv   DWORD PTR [ebx+0x54]
  42f31c:	xchg   edi,eax
  42f31d:	pop    edi
  42f31e:	and    al,0x10
  42f320:	xchg   edi,eax
  42f321:	pushf  
  42f322:	pop    esi
  42f323:	cmp    DWORD PTR [ebp+0xc00018f],ebx
  42f329:	test   al,0x45
  42f32b:	push   0xd
  42f32d:	aaa    
  42f32e:	and    bl,BYTE PTR [ebx+eiz*8+0x2d]
  42f332:	xor    eax,0xffffff97
  42f335:	sub    BYTE PTR [eax+edi*1-0x6b],dh
  42f339:	std    
  42f33a:	js     0x42f36a
  42f33c:	push   ecx
  42f33d:	push   eax
  42f33e:	add    al,0x83
  42f340:	addr16 xchg edi,eax
  42f342:	adc    BYTE PTR [ebp-0x2f],dh
  42f345:	sbb    ebx,edi
  42f347:	test   BYTE PTR [ebx+eiz*4],cl
  42f34a:	jae    0x4a5865c
  42f350:	int3   
  42f351:	and    BYTE PTR [edi],bh
  42f353:	sbb    ah,ch
  42f355:	cs adc eax,0x4eaa54
  42f35b:	or     DWORD PTR [eax-0x66],0xffffff85
  42f35f:	shr    BYTE PTR [eax+0x5f8345a8],0x96
  42f366:	xor    ebp,DWORD PTR [esi]
	...
  42f37c:	add    BYTE PTR [edi+0x4e],0xe8
  42f380:	fimul  DWORD PTR [edx+0x6593fff6]
  42f386:	aas    
  42f387:	cs iret 
  42f389:	inc    eax
  42f38a:	pop    esi
  42f38b:	cmp    ebx,DWORD PTR [ecx-0x4a74ab5e]
  42f391:	xor    al,0xe3
  42f393:	(bad)  
  42f395:	out    dx,eax
  42f396:	sub    BYTE PTR [ecx],bh
  42f398:	xor    al,0xf2
  42f39a:	add    eax,DWORD PTR [eax]
  42f39c:	mov    ch,0x43
  42f39e:	dec    eax
  42f39f:	data16 mov bh,0x50
  42f3a2:	retf   0x3257
  42f3a5:	mov    ecx,0xabeef08a
  42f3aa:	adc    edi,DWORD PTR [eax]
  42f3ac:	(bad)  
  42f3ae:	and    BYTE PTR [edx],ch
  42f3b0:	sub    BYTE PTR [edx+0x3],al
  42f3b3:	jg     0x42f343
  42f3b5:	hlt    
  42f3b6:	cli    
  42f3b7:	je     0x42f361
  42f3b9:	jge    0x42f3bd
  42f3bb:	test   ebp,esi
  42f3bd:	xor    esi,0x7e
  42f3c0:	cmc    
  42f3c1:	out    dx,eax
  42f3c2:	sub    al,0x10
  42f3c4:	test   DWORD PTR [ebx+0x46],ebp
  42f3c7:	sbb    al,BYTE PTR [ebp-0x34ac0d0f]
  42f3cd:	mov    eax,0xf3f17f04
  42f3d2:	add    eax,0x7f420249
  42f3d8:	idiv   bh
  42f3da:	fld    TBYTE PTR [ecx]
  42f3dc:	inc    ecx
  42f3dd:	and    esi,DWORD PTR [esi]
  42f3df:	call   0x42f3e4
	...
  42f3f4:	and    BYTE PTR [esi+ebx*4-0x5],0xe7
  42f3f9:	ss ds pop ebp
  42f3fc:	push   cs
  42f3fd:	xor    eax,0x1f0b0008
  42f402:	out    0x9b,eax
  42f404:	fwait
  42f405:	and    dl,BYTE PTR [ecx+eax*1-0x62]
  42f409:	daa    
  42f40a:	lea    ecx,ds:0x453211
  42f410:	jmp    0x42f457
  42f412:	mov    edi,0x18303053
  42f417:	and    BYTE PTR [esi],bh
  42f419:	cmp    al,0x47
  42f41b:	fcomi  st,st(6)
  42f41d:	(bad)
  42f421:	adc    eax,0xb3e6dd17
  42f426:	in     eax,0x16
  42f428:	mov    eax,0xc0a14b0c
  42f42d:	popf   
  42f42e:	test   eax,0xf1980382
  42f433:	add    esi,DWORD PTR [ebp+0x1d1628c4]
  42f439:	mov    ebp,0xcd8f4129
  42f43e:	in     al,dx
  42f43f:	add    ecx,DWORD PTR [edi+ecx*8-0x704af410]
  42f446:	out    0xc8,al
  42f448:	sbb    bh,bh
  42f44a:	pop    ebp
  42f44b:	setno  al
  42f44e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f44f:	add    esp,DWORD PTR [edi+0x60]
  42f452:	mov    dh,0xa0
  42f454:	retf   0x6bcf
  42f457:	retf   
	...
  42f46c:	imul   esi,DWORD PTR [ecx-0x178d08a2],0xfe3a0425
  42f476:	gs loope 0x42f458
  42f479:	and    esp,0x43
  42f47c:	xor    al,0xd2
  42f47e:	loopne 0x42f48b
  42f480:	mov    ch,0x8f
  42f482:	inc    dl
  42f484:	push   ebx
  42f485:	dec    ebp
  42f487:	cmovl  ecx,edi
  42f48a:	loopne 0x42f497
  42f48c:	mov    ch,0x8f
  42f48e:	out    0xc5,al
  42f490:	xor    al,BYTE PTR [edi]
  42f492:	sbb    al,0xf1
  42f494:	cmc    
  42f495:	jbe    0x42f447
  42f497:	or     ebp,DWORD PTR [ebp-0x29e1671]
  42f49d:	call   0xeadff8c7
  42f4a2:	pop    esi
  42f4a3:	mov    eax,ds:0x17a9137e
  42f4a8:	aad    0x14
  42f4aa:	add    BYTE PTR [edx+ebx*4-0x6016c11c],dh
  42f4b1:	add    al,0x8
  42f4b3:	icebp  
  42f4b4:	mov    dh,0x8f
  42f4b6:	sti    
  42f4b7:	in     al,0x92
  42f4b9:	in     al,0x3e
  42f4bb:	jmp    0x2e8bbf79
  42f4c0:	icebp  
  42f4c1:	(bad)  
  42f4c2:	je     0x42f4b3
  42f4c4:	xor    DWORD PTR [ebx+0x24],edx
  42f4c7:	in     eax,dx
  42f4c8:	das    
  42f4c9:	mov    WORD PTR [edi-0x419a8ad2],es
  42f4cf:	in     eax,0x0
	...
  42f4e1:	add    BYTE PTR [eax],al
  42f4e3:	add    BYTE PTR [esi+0x7946642e],dh
  42f4e9:	(bad)  
  42f4ea:	push   ebx
  42f4eb:	jb     0x42f52b
  42f4ed:	adc    al,al
  42f4ef:	popf   
  42f4f0:	ja     0x42f502
  42f4f2:	adc    eax,0xc7f5a1
  42f4f7:	jb     0x42f4e7
  42f4f9:	jne    0x42f4c4
  42f4fb:	icebp  
  42f4fc:	scas   al,BYTE PTR es:[edi]
  42f4fd:	pop    DWORD PTR [eax]
  42f4ff:	fs inc edx
  42f501:	sahf   
  42f502:	clc    
  42f503:	test   BYTE PTR [edx+0x4],0x7f
  42f507:	and    BYTE PTR [edx-0x7e],al
  42f50a:	or     DWORD PTR [eax+0x8],ebp
  42f50d:	xchg   edi,eax
  42f50e:	or     cl,ch
  42f510:	mov    dh,0x54
  42f512:	jne    0x42f4ef
  42f514:	out    dx,al
  42f515:	push   DWORD PTR [ebx-0x1d]
  42f518:	das    
  42f519:	aam    0x68
  42f51b:	mov    al,0xa9
  42f51d:	xchg   edi,eax
  42f51e:	add    cl,ch
  42f520:	call   0xf6d13d6e
  42f525:	(bad)
  42f529:	or     bh,bl
  42f52b:	jo     0x42f4c1
  42f52d:	jae    0x42f50a
  42f52f:	sub    bh,BYTE PTR [ecx-0x3355a497]
  42f535:	push   cs
  42f536:	in     al,dx
  42f537:	add    BYTE PTR [edi-0x3020b396],bl
  42f53d:	mov    ecx,DWORD PTR [ebx-0x1]
  42f540:	xchg   ecx,eax
  42f541:	outs   dx,DWORD PTR ds:[esi]
  42f542:	or     al,BYTE PTR [eax+0x5c]
  42f545:	adc    bh,BYTE PTR [ebp+0x8]
	...
  42f55c:	fist   DWORD PTR [esi-0x6cb3287c]
  42f562:	add    BYTE PTR [ebx+0xf009769],al
  42f568:	shl    al,1
  42f56a:	(bad)  
  42f56b:	dec    DWORD PTR [edx+edx*1+0x7d]
  42f56f:	adc    BYTE PTR [esi+edx*4-0x7c],cl
  42f573:	ret    
  42f574:	sbb    al,0x93
  42f576:	add    bh,bh
  42f578:	popa   
  42f579:	fwait
  42f57a:	call   0xf769d049
  42f57f:	test   esp,ecx
  42f581:	test   al,0x10
  42f583:	push   DWORD PTR [ecx]
  42f585:	fwait
  42f586:	call   0xf769b088
  42f58b:	test   esp,ecx
  42f58d:	xchg   esi,eax
  42f58e:	test   BYTE PTR [edi-0x9ff6cf4],ah
  42f594:	and    edi,edi
  42f596:	call   DWORD PTR [ebp+0x43]
  42f599:	lahf   
  42f59a:	push   es
  42f59b:	lea    edx,[ecx*4+0x1fcc0004]
  42f5a2:	mov    al,0x6
  42f5a4:	aam    0x92
  42f5a6:	add    bl,ch
  42f5a8:	aad    0x1f
  42f5aa:	js     0x42f5b0
  42f5ac:	dec    ecx
  42f5ad:	bound  eax,QWORD PTR [esp+eax*1]
  42f5b0:	int3   
  42f5b1:	xchg   edx,eax
  42f5b2:	jnp    0x42f631
  42f5b4:	mov    WORD PTR [edx+0x13884583],ss
  42f5ba:	inc    ebp
  42f5bb:	or     dl,al
  42f5bd:	pushf  
  42f5be:	mov    dl,0x0
	...
  42f5d4:	mov    ss,WORD PTR [edx-0x3c4ac700]
  42f5da:	hlt    
  42f5db:	outs   dx,BYTE PTR ds:[esi]
  42f5dc:	mov    cl,0xe5
  42f5de:	push   ecx
  42f5df:	push   ebp
  42f5e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5e1:	std    
  42f5e2:	push   ecx
  42f5e3:	add    ch,BYTE PTR [edx+0x77ffb9bd]
  42f5e9:	mov    edi,0xf8b503ff
  42f5ee:	aad    0xc0
  42f5f0:	jmp    0x42f5fc
  42f5f2:	out    0xc0,al
  42f5f4:	rcr    DWORD PTR [edi-0x11f5f4fe],cl
  42f5fa:	xor    edi,edi
  42f5fc:	jae    0x42f646
  42f5fe:	xor    ch,al
  42f600:	(bad)  
  42f601:	jno    0x42f5a0
  42f603:	sti    
  42f604:	stos   BYTE PTR es:[edi],al
  42f605:	jge    0x42f60c
  42f607:	dec    edi
  42f608:	xor    al,BYTE PTR [ebx+0x7]
  42f60b:	push   ebx
  42f60d:	daa    
  42f60e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f60f:	lods   al,BYTE PTR ds:[esi]
  42f610:	aas    
  42f611:	scas   al,BYTE PTR es:[edi]
  42f612:	call   0x9b10:0xa5feb462
  42f619:	iret   
  42f61a:	add    al,0xb
  42f61c:	inc    edx
  42f61d:	out    0x33,al
  42f61f:	(bad)  
  42f620:	sti    
  42f621:	daa    
  42f622:	xor    ch,al
  42f624:	and    dh,BYTE PTR [edx-0x63]
  42f627:	sti    
  42f628:	ret    0x5c5
  42f62b:	data16 mov ch,0x1d
  42f62e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f62f:	pop    esp
  42f630:	dec    esi
  42f631:	clc    
  42f632:	inc    BYTE PTR [ebp+esi*8+0x19f5a]
	...
  42f649:	add    BYTE PTR [eax],al
  42f64b:	add    BYTE PTR [eax-0x10],dh
  42f64e:	in     eax,0x5c
  42f650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f651:	pop    ebx
  42f652:	js     0x42f60b
  42f654:	jno    0x42f683
  42f656:	inc    ecx
  42f657:	add    BYTE PTR [esi+0x45],ah
  42f65a:	rep stos DWORD PTR es:[edi],eax
  42f65c:	(bad)  
  42f65d:	mov    dh,0x4
  42f65f:	pop    ebx
  42f660:	or     edx,edx
  42f662:	add    al,0x4f
  42f664:	mov    ds:0xab6ffc90,al
  42f669:	dec    edi
  42f66a:	jmp    0xf914e6a7
  42f66f:	add    esp,esi
  42f671:	adc    cl,BYTE PTR [ebx]
  42f673:	or     BYTE PTR [edx+0x34eb0ba8],bl
  42f679:	mov    ebp,fs
  42f67b:	add    esi,DWORD PTR [ebp-0x4e71c56c]
  42f681:	mov    ebp,ecx
  42f683:	add    eax,DWORD PTR [ecx+edx*4]
  42f686:	sub    dh,BYTE PTR [esi+eax*1]
  42f689:	clc    
  42f68a:	mov    ds:0xe2054f79,al
  42f68f:	push   esp
  42f690:	aaa    
  42f691:	mov    ebp,fs
  42f693:	add    esi,DWORD PTR [ebp+0x4d34e879]
  42f699:	(bad)  
  42f69a:	into   
  42f69b:	add    esi,DWORD PTR [ebp+0x17290a]
  42f6a1:	gs es xor eax,0x4142545e
  42f6a8:	mov    ch,0x5c
  42f6aa:	sbb    dh,bh
  42f6ac:	push   esi
  42f6ad:	mov    ds:0x3a9,al
	...
  42f6c2:	add    BYTE PTR [eax],al
  42f6c4:	mov    al,BYTE PTR [ebx+0x7bfe0bc5]
  42f6ca:	fistp  DWORD PTR [ecx+eax*4+0x22abf1ab]
  42f6d1:	add    esi,edx
  42f6d3:	pushf  
  42f6d4:	xor    al,dl
  42f6d6:	je     0x42f6e2
  42f6d8:	xchg   DWORD PTR [eax],ebx
  42f6da:	fldcw  WORD PTR [ebx-0x6325faef]
  42f6e0:	outs   dx,DWORD PTR ds:[esi]
  42f6e1:	pop    esp
  42f6e2:	shl    dh,cl
  42f6e4:	push   ds
  42f6e5:	mov    ds:0xd15e0429,al
  42f6ea:	in     al,dx
  42f6eb:	add    ecx,ebp
  42f6ed:	mov    esi,0xbae9d85
  42f6f2:	add    BYTE PTR [ecx+0x1652c4c2],ch
  42f6f8:	add    BYTE PTR [ebx+ebx*8+0x2a],dl
  42f6fc:	mov    cl,0x60
  42f6fe:	sti    
  42f6ff:	hlt    
  42f700:	sbb    dl,BYTE PTR [esi+0x7b29e940]
  42f706:	and    al,0xdd
  42f708:	dec    esi
  42f709:	jl     0x42f708
  42f70b:	xchg   BYTE PTR [ecx],bl
  42f70d:	or     al,0xf0
  42f70f:	fs dec eax
  42f711:	jnp    0x42f730
  42f713:	sbb    DWORD PTR [ebx+0x356efb08],0x711afb99
  42f71d:	jno    0x42f6a8
  42f71f:	addr16 mov edx,0x90e9008b
  42f725:	push   ss
  42f726:	and    bh,0x0
	...
  42f739:	add    BYTE PTR [eax],al
  42f73b:	add    BYTE PTR [esi-0x50aeff71],ch
  42f741:	or     ebx,edi
  42f743:	ds jmp 0x24c80c51
  42f749:	les    eax,FWORD PTR [eax]
  42f74b:	mov    fs,eax
  42f74d:	or     BYTE PTR ds:0xc420d9,ah
  42f753:	mov    ah,0x3d
  42f755:	repz push ecx
  42f757:	push   ss
  42f758:	mov    ds:0x694fb9b,eax
  42f75d:	or     DWORD PTR [ebp-0xb],esi
  42f760:	sbb    DWORD PTR [edx+0x8],edi
  42f763:	(bad)  
  42f764:	call   0xb6ec0a28
  42f769:	or     al,0xf0
  42f76b:	fs dec eax
  42f76d:	mov    DWORD PTR [ebx],edx
  42f76f:	shl    edx,1
  42f771:	and    edi,edx
  42f773:	fidiv  WORD PTR ds:0x98e773cf
  42f779:	mov    ss,WORD PTR [edx-0x32]
  42f77c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f77d:	xchg   ebx,eax
  42f77e:	sti    
  42f77f:	add    BYTE PTR [ecx-0x6d],bh
  42f782:	call   0xf76a699d
  42f787:	mov    ebx,DWORD PTR [edx-0x3a]
  42f78a:	pop    ebp
  42f78b:	ret    0x8f7c
  42f78e:	push   ebp
  42f78f:	mov    eax,DWORD PTR [eax-0x42]
  42f792:	xor    DWORD PTR [ebp-0x78],0xffffffbe
  42f796:	div    DWORD PTR [ebp+0x7c]
  42f799:	adc    bh,BYTE PTR [ebp+0xc]
  42f79c:	xor    esp,DWORD PTR [ecx+0xff1c]
	...
  42f7b2:	add    BYTE PTR [eax],al
  42f7b4:	jns    0x42f7bd
  42f7b6:	push   ecx
  42f7b7:	jmp    FWORD PTR [ecx-0x1]
  42f7ba:	dec    ebp
  42f7bb:	jmp    FWORD PTR [ecx-0x69]
  42f7be:	not    DWORD PTR ds:0x3b00dc
  42f7c4:	in     eax,0x50
  42f7c6:	sbb    al,0x85
  42f7c8:	pushf  
  42f7c9:	mov    al,ds:0x9fea8540
  42f7ce:	cmp    al,0xe8
  42f7d0:	fs push 0xfffffff6
  42f7d3:	dec    eax
  42f7d5:	retf   
  42f7d6:	jae    0x42f80b
  42f7d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f7d9:	fisttp QWORD PTR [ecx+0x33]
  42f7dc:	(bad)  
  42f7dd:	adc    dh,ch
  42f7df:	je     0x42f796
  42f7e1:	loop   0x42f83e
  42f7e3:	adc    BYTE PTR [edi],bh
  42f7e5:	jecxz  0x42f768
  42f7e7:	add    al,0xd3
  42f7e9:	adc    al,0x45
  42f7eb:	and    bh,ah
  42f7ed:	shr    BYTE PTR [ecx+0x3],1
  42f7f0:	xchg   ebp,eax
  42f7f1:	mov    al,ds:0x260d6a20
  42f7f6:	jne    0x42f818
  42f7f8:	repz xchg edx,eax
  42f7fa:	xlat   BYTE PTR ds:[ebx]
  42f7fb:	add    al,0xe3
  42f7fd:	lahf   
  42f7fe:	or     al,ch
  42f800:	mov    eax,ds:0x8ffff728
  42f805:	bnd jae 0x42f828
  42f808:	imul   edi,DWORD PTR [esi],0xb3b58b53
  42f80e:	clc    
  42f80f:	pop    edx
  42f810:	arpl   WORD PTR [ebx-0x5c4ae33e],si
  42f816:	mov    ebp,esp
	...
  42f82c:	or     eax,DWORD PTR [edx+0x10]
  42f82f:	adc    al,0xaa
  42f831:	ret    
  42f832:	hlt    
  42f833:	cli    
  42f834:	sub    ch,ah
  42f836:	xchg   ebp,eax
  42f837:	jne    0x42f7e6
  42f839:	sub    eax,esi
  42f83b:	sbb    ebp,DWORD PTR [ebx-0x7a78fb48]
  42f841:	jae    0x42f7d4
  42f843:	js     0x42f81d
  42f845:	adc    dh,ch
  42f847:	sahf   
  42f848:	jnp    0x42f853
  42f84a:	jnp    0x42f80c
  42f84c:	jmp    0xe1357835
  42f851:	out    dx,al
  42f852:	xchg   ebp,eax
  42f853:	jne    0x42f802
  42f855:	adc    BYTE PTR [ebx-0x6],dh
  42f858:	pop    edx
  42f859:	imul   ebp,DWORD PTR [edx+0x30f8df0a],0x95ecc0fb
  42f863:	jne    0x42f812
  42f865:	push   eax
  42f866:	xor    edi,ebp
  42f868:	cmp    cl,BYTE PTR [ecx-0x76]
  42f86b:	ret    0x2393
  42f86e:	lds    edx,FWORD PTR [eax]
  42f870:	mov    ch,0x23
  42f872:	mov    ch,ah
  42f874:	xchg   BYTE PTR [edx],bl
  42f876:	mov    dh,BYTE PTR [ebp-0x3f]
  42f879:	inc    ecx
  42f87a:	xchg   esi,eax
  42f87b:	jne    0x42f852
  42f87d:	jge    0x42f897
  42f87f:	or     al,0xa
  42f881:	and    esi,ebx
  42f883:	cli    
  42f884:	mov    BYTE PTR [eax],al
  42f886:	xor    ebx,edi
  42f888:	sub    al,0x2d
  42f88b:	sti    
  42f88c:	push   0x159600
	...
  42f8a1:	add    BYTE PTR [eax],al
  42f8a3:	add    cl,bl
  42f8a5:	loop   0x42f8e5
  42f8a7:	add    BYTE PTR [ebx+ebp*1],ch
  42f8aa:	repz test ch,dh
  42f8ad:	mov    ds,WORD PTR [esp+eax*2+0x38]
  42f8b1:	stc    
  42f8b2:	push   esp
  42f8b3:	cmp    ebp,ebx
  42f8b5:	inc    ebx
  42f8b6:	xchg   DWORD PTR [edx+0x10a90abe],ebx
  42f8bc:	addr16 push ss
  42f8be:	sti    
  42f8bf:	aam    0x8b
  42f8c1:	or     esi,DWORD PTR [ebx+0x14c4ff10]
  42f8c7:	hlt    
  42f8c8:	adc    edx,DWORD PTR [edi+0x5e]
  42f8cb:	add    BYTE PTR [esi+0x17],bh
  42f8ce:	sub    al,0xe4
  42f8d0:	retf   
  42f8d1:	leave  
  42f8d2:	push   ss
  42f8d3:	add    eax,0x2dc97b3c
  42f8d8:	mov    ch,0x0
  42f8da:	adc    al,0xe4
  42f8dc:	jg     0x42f95a
  42f8de:	mov    ds:0xf17b6e00,al
  42f8e3:	stos   DWORD PTR es:[edi],eax
  42f8e4:	pop    edx
  42f8e5:	add    al,0x72
  42f8e7:	cdq    
  42f8e8:	mov    ds:0xe1e3f4b4,al
  42f8ed:	fmul   DWORD PTR [ebp-0x1b]
  42f8f0:	rol    DWORD PTR [edi],cl
  42f8f2:	pop    edx
  42f8f3:	imul   eax,DWORD PTR [eax]
  42f8f6:	cld    
  42f8f7:	(bad)  
  42f8f8:	test   al,0x4f
  42f8fa:	jmp    0xe9ebbad5
  42f8ff:	add    ebp,DWORD PTR [eax+0x4b29519e]
  42f905:	add    dh,BYTE PTR [edx]
  42f907:	add    BYTE PTR [eax],0x0
	...
  42f91a:	add    BYTE PTR [eax],al
  42f91c:	cmc    
  42f91d:	jnp    0x42f900
  42f91f:	cwde   
  42f920:	mov    al,ds:0x109c1197
  42f925:	add    DWORD PTR [edx],ebx
  42f927:	lea    esi,[eax-0x5d]
  42f92a:	mov    dl,0x39
  42f92c:	push   0x62
  42f92e:	daa    
  42f92f:	clc    
  42f930:	cli    
  42f931:	pop    ebx
  42f932:	outs   dx,BYTE PTR ds:[esi]
  42f933:	test   al,0x84
  42f935:	pop    esi
  42f936:	xchg   esi,eax
  42f937:	xor    DWORD PTR [edx],esi
  42f939:	mov    ebx,0xc0e8fd00
  42f93e:	add    BYTE PTR [ecx-0x16bff7aa],al
  42f944:	sub    eax,0x9eb7fbbd
  42f949:	inc    ebx
  42f94a:	xchg   DWORD PTR [ecx],ebp
  42f94c:	mov    ecx,0xfe623304
  42f951:	add    al,0xd2
  42f953:	push   0xffffffd3
  42f955:	pop    es
  42f956:	add    BYTE PTR [edx+0x46],dh
  42f959:	or     dl,bh
  42f95b:	cmp    eax,0x35f20b91
  42f960:	xchg   ebp,eax
  42f961:	adc    eax,DWORD PTR [ebp-0x5b]
  42f964:	(bad)  
  42f965:	imul   eax,DWORD PTR [eax],0xfb97bb9e
  42f96b:	mov    edx,0xf474d003
  42f970:	sbb    eax,0x75720c7a
  42f975:	add    al,0x75
  42f977:	jge    0x42f997
  42f979:	sahf   
  42f97a:	add    cl,ch
  42f97c:	mov    dh,0x4
  42f97e:	jne    0x42f9ed
	...
  42f994:	das    
  42f995:	dec    edx
  42f996:	clc    
  42f997:	data16 add al,0x8
  42f99a:	inc    ebp
  42f99b:	popa   
  42f99c:	mov    WORD PTR [eax-0x37],ds
  42f99f:	sub    ebp,DWORD PTR [esi+0x1262558f]
  42f9a5:	sub    ah,0xb5
  42f9a8:	jmp    0x3b37810a
  42f9ad:	xchg   ecx,eax
  42f9ae:	inc    eax
  42f9af:	jmp    0xc23b0299
  42f9b4:	data16 or BYTE PTR [eax-0x17],al
  42f9b8:	sub    eax,0x52a4c3bc
  42f9bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f9be:	add    cl,ch
  42f9c0:	mov    dh,0x4
  42f9c2:	rol    BYTE PTR [ecx+0x400852],cl
  42f9c8:	fsub   QWORD PTR [esi]
  42f9ca:	das    
  42f9cb:	mov    edx,DWORD PTR [edi+eiz*1+0x7d068ce]
  42f9d2:	inc    eax
  42f9d3:	add    bl,cl
  42f9d5:	iret   
  42f9d6:	xchg   DWORD PTR [ebp-0x14],eax
  42f9d9:	pop    ss
  42f9da:	into   
  42f9db:	xor    esp,edx
  42f9dd:	adc    DWORD PTR [ebp-0x18],eax
  42f9e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9e1:	cmp    DWORD PTR [edi],eax
  42f9e3:	test   BYTE PTR [edi-0x4affff76],bl
  42f9e9:	mov    al,ds:0xea100ff0
  42f9ee:	(bad)  
  42f9ef:	dec    DWORD PTR [edx+ebx*8-0xdeff040]
  42f9f6:	(bad)  
  42f9f7:	inc    DWORD PTR [eax]
	...
  42fa09:	add    BYTE PTR [eax],al
  42fa0b:	add    BYTE PTR [eax+ecx*1+0x8ccf445],bl
  42fa12:	inc    ebp
  42fa13:	cld    
  42fa14:	mov    esp,0x15f8750c
  42fa19:	mov    eax,ds:0xf7189fc
  42fa1e:	not    ebx
  42fa20:	rcl    ebx,1
  42fa22:	push   es
  42fa23:	test   DWORD PTR [esi-0x6c],ecx
  42fa26:	add    BYTE PTR [eax],al
  42fa28:	xlat   BYTE PTR ds:[ebx]
  42fa29:	push   eax
  42fa2a:	hlt    
  42fa2b:	cmp    esp,DWORD PTR [edx+0x5cf78496]
  42fa31:	xchg   ebx,eax
  42fa32:	add    BYTE PTR [ecx],bh
  42fa34:	popa   
  42fa35:	daa    
  42fa36:	pop    es
  42fa37:	test   BYTE PTR [edx-0x6d],bh
  42fa3a:	add    BYTE PTR [eax],al
  42fa3c:	test   cl,cl
  42fa3e:	(bad)  
  42fa3f:	(bad)  
  42fa40:	jmp    0x42fa4c
  42fa42:	fdivr  DWORD PTR [ebx]
  42fa44:	retf   0x8496
  42fa47:	fisttp WORD PTR [ebx+edx*4]
  42fa4a:	add    BYTE PTR [ebx-0x25],dl
  42fa4d:	mov    al,ds:0x2721fff4
  42fa52:	not    DWORD PTR [ebp-0x4b]
  42fa55:	cwde   
  42fa56:	add    eax,0x74dbdf80
  42fa5c:	icebp  
  42fa5d:	jle    0x42fa2a
  42fa5f:	mov    WORD PTR [esi+0x38],gs
  42fa62:	xchg   edx,eax
  42fa63:	xor    esp,edx
  42fa65:	jnp    0x42fa6a
  42fa67:	sti    
  42fa68:	shl    BYTE PTR [ecx+esi*8],0x3f
  42fa6c:	mov    ch,0x6b
  42fa6e:	mov    edi,0x74
	...
  42fa83:	add    BYTE PTR [esi+0x71c37fb6],bh
  42fa89:	mov    eax,ds:0xd047fc11
  42fa8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa8f:	adc    eax,0x66433f1e
  42fa94:	(bad)
  42fa97:	push   edx
  42fa98:	xor    BYTE PTR [ebx+0x3e8d50bc],ch
  42fa9e:	ins    DWORD PTR es:[edi],dx
  42fa9f:	cli    
  42faa0:	xchg   edx,eax
  42faa1:	imul   esp,DWORD PTR [eax],0x8cd9b5fc
  42faa7:	dec    edi
  42faa8:	lea    ecx,[esi+0x6d]
  42faab:	cli    
  42faac:	jp     0x42fa8d
  42faae:	paddb  mm0,mm2
  42fab1:	imul   ecx,DWORD PTR [eax+eax*1+0x4587e8b5],0x5d
  42fab9:	cwde   
  42faba:	iret   
  42fabb:	cli    
  42fabc:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fabe:	sub    bh,bl
  42fac0:	test   al,0x84
  42fac2:	in     eax,dx
  42fac3:	aas    
  42fac4:	mov    ch,0x73
  42fac6:	mov    edi,0x119fcb75
  42facb:	clc    
  42facc:	rcl    edi,0x8b
  42facf:	jne    0x42fb3e
  42fad1:	(bad)  
  42fad2:	adc    esp,ebp
  42fad4:	mov    ds:0x8d102690,eax
  42fad9:	in     al,0x82
  42fadb:	inc    eax
  42fadc:	mov    ch,0x5b
  42fade:	inc    eax
  42fadf:	mov    esp,0x6c118f65
  42fae4:	daa    
  42fae5:	std    
  42fae6:	sbb    DWORD PTR [edx+0x0],ecx
	...
  42fafc:	js     0x42fb35
  42fafe:	jle    0x42fac3
  42fb00:	cdq    
  42fb01:	(bad)  
  42fb02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb03:	add    BYTE PTR ds:0xb503e993,al
  42fb09:	or     ah,BYTE PTR [ebx+ebx*2-0x732b30a6]
  42fb10:	pop    ecx
  42fb11:	xchg   esp,eax
  42fb12:	sbb    eax,0x4e37788a
  42fb17:	les    ebp,FWORD PTR [ecx+0x2ca82c0c]
  42fb1d:	dec    ebx
  42fb1e:	in     al,dx
  42fb1f:	scas   eax,DWORD PTR es:[edi]
  42fb20:	mov    esi,0xf8879153
  42fb25:	aaa    
  42fb26:	sbb    DWORD PTR [edi-0x6ae72810],eax
  42fb2c:	sub    al,bh
  42fb2e:	mov    cl,0xf
  42fb30:	lods   eax,DWORD PTR ds:[esi]
  42fb31:	cld    
  42fb32:	adc    ebp,DWORD PTR [eax+edi*1-0x72c09230]
  42fb39:	test   dh,ch
  42fb3b:	mov    BYTE PTR [ebp-0x52cc6da1],ch
  42fb41:	push   es
  42fb42:	adc    al,0x9c
  42fb44:	pop    edx
  42fb45:	mov    gs,WORD PTR [esi-0x24]
  42fb48:	add    al,0x66
  42fb4a:	mov    dh,0xca
  42fb4c:	add    al,0xc1
  42fb4e:	xchg   edi,eax
  42fb4f:	xor    al,BYTE PTR ds:0x3bf011fd
  42fb55:	push   ebx
  42fb56:	popa   
  42fb57:	test   eax,0x3529c24b
  42fb5c:	fistp  WORD PTR [eax+0x20]
  42fb5f:	ret    0x0
	...
  42fb72:	add    BYTE PTR [eax],al
  42fb74:	lods   eax,DWORD PTR ds:[esi]
  42fb75:	(bad)  
  42fb76:	mov    ah,0x88
  42fb78:	and    DWORD PTR [edi],ecx
  42fb7a:	push   ebp
  42fb7b:	add    BYTE PTR [ebx],ch
  42fb7d:	std    
  42fb7e:	call   0xa782b3
  42fb83:	shl    DWORD PTR [edi+0x3be9008e],0x13
  42fb8a:	cld    
  42fb8b:	and    al,0x20
  42fb8d:	stc    
  42fb8e:	dec    edi
  42fb8f:	push   ds
  42fb90:	mov    dl,0x87
  42fb92:	sti    
  42fb93:	cld    
  42fb94:	(bad)  
  42fb95:	mov    ds:0xd83de940,eax
  42fb9a:	test   BYTE PTR [edx],ah
  42fb9c:	ret    
  42fb9d:	mov    ah,0x2f
  42fb9f:	inc    BYTE PTR ds:0x8d3ffaff
  42fba5:	pop    esi
  42fba6:	inc    eax
  42fba7:	jmp    0x38ab05e9
  42fbac:	jno    0x42fb3d
  42fbae:	lea    esp,[edx+ebp*1-0x5]
  42fbb2:	cli    
  42fbb3:	(bad)  
  42fbb4:	xchg   BYTE PTR [edi+edi*4],dl
  42fbb7:	shl    DWORD PTR [ebp+edi*2-0x6],0xc6
  42fbbc:	sub    edx,eax
  42fbbe:	jae    0x42fb9b
  42fbc0:	xor    eax,0x342e0bd1
  42fbc5:	stc    
  42fbc6:	inc    edi
  42fbc7:	cmp    ecx,DWORD PTR [esi-0x54]
  42fbca:	rol    BYTE PTR [esi-0x3d],0x64
  42fbce:	leave  
  42fbcf:	stos   DWORD PTR es:[edi],eax
  42fbd0:	cmp    ah,0x65
  42fbd3:	xchg   esi,eax
  42fbd4:	mov    dl,0x71
  42fbd6:	xchg   DWORD PTR [esi+0x0],esp
	...
  42fbe9:	add    BYTE PTR [eax],al
  42fbeb:	add    dh,al
  42fbed:	pop    esi
  42fbee:	inc    eax
  42fbef:	jmp    0x7297e611
  42fbf4:	sbb    cl,BYTE PTR [esi]
  42fbf6:	in     al,dx
  42fbf7:	lea    ebx,[ecx-0x4]
  42fbfa:	cli    
  42fbfb:	pop    ss
  42fbfc:	mov    al,ds:0xb6e88c67
  42fc01:	(bad)  
  42fc02:	dec    edi
  42fc03:	push   ecx
  42fc04:	test   al,0x21
  42fc06:	cli    
  42fc07:	push   esi
  42fc08:	and    DWORD PTR [edx-0x70890764],esp
  42fc0e:	mov    DWORD PTR [eax],eax
  42fc10:	pop    edi
  42fc11:	cld    
  42fc12:	jns    0x42fc0c
  42fc14:	jecxz  0x42fba3
  42fc16:	push   DWORD PTR [ecx]
  42fc18:	int3   
  42fc19:	sub    DWORD PTR [edi],edi
  42fc1b:	add    bl,BYTE PTR [eax+edx*4]
  42fc1e:	sub    esi,esi
  42fc20:	dec    edx
  42fc21:	adc    eax,0xa83c8445
  42fc26:	adc    DWORD PTR [ecx+0x5ce87c94],ebx
  42fc2c:	bound  esp,QWORD PTR [edx]
  42fc2e:	test   DWORD PTR [ebp-0xaf83e7],0x40147809
  42fc38:	int3   
  42fc39:	or     BYTE PTR [ebx],bh
  42fc3b:	or     BYTE PTR [edi],al
  42fc3d:	cmp    dh,BYTE PTR [edi+edx*8+0x66]
  42fc41:	xchg   edx,eax
  42fc42:	lea    eax,[ebp+0x58]
  42fc45:	ret    
  42fc46:	push   0x847b4512
  42fc4b:	call   0x397a17
	...
  42fc64:	and    DWORD PTR [ecx-0x7c],ecx
  42fc67:	push   eax
  42fc68:	retf   0x199
  42fc6b:	mov    edi,0x3b35f4
  42fc70:	stos   DWORD PTR es:[edi],eax
  42fc71:	push   ds
  42fc72:	adc    eax,0x4f8d0c
  42fc77:	mov    edi,ecx
  42fc79:	(bad)  
  42fc7a:	xor    eax,esi
  42fc7c:	cwde   
  42fc7d:	jo     0x42fce1
  42fc7f:	add    DWORD PTR [ecx],edx
  42fc81:	dec    ecx
  42fc82:	test   BYTE PTR [eax-0x3c],dl
  42fc85:	icebp  
  42fc86:	and    bh,BYTE PTR [eax+0x54]
  42fc89:	pop    ss
  42fc8a:	adc    DWORD PTR [esi+0x458d1ee2],ebx
  42fc90:	fadd   st,st(3)
  42fc92:	dec    esi
  42fc93:	push   edi
  42fc94:	sar    eax,cl
  42fc96:	xchg   edx,eax
  42fc97:	adc    DWORD PTR [edi+ecx*4],ecx
  42fc9a:	mov    DWORD PTR [ebx-0x4b],eax
  42fc9d:	cld    
  42fc9e:	leave  
  42fc9f:	shr    DWORD PTR [ecx+0x38011a6e],0x2c
  42fca6:	adc    DWORD PTR [eax-0x73],0xffffff86
  42fcaa:	bound  edi,QWORD PTR [eax+0x3d]
  42fcad:	push   ecx
  42fcae:	sahf   
  42fcaf:	popf   
  42fcb0:	adc    ebp,DWORD PTR [edx+0x39314581]
  42fcb6:	pop    ss
  42fcb7:	sub    BYTE PTR [ecx+edi*4],ah
  42fcba:	add    edx,DWORD PTR [edx-0x71]
  42fcbd:	in     al,dx
  42fcbe:	xor    eax,0xb703f252
  42fcc3:	push   cs
  42fcc4:	jne    0x42fcae
  42fcc6:	jnp    0x42fcc7
	...
  42fcdc:	lahf   
  42fcdd:	mov    dl,0xff
  42fcdf:	cmp    DWORD PTR [ecx+0x1],0xffffff8e
  42fce3:	sti    
  42fce4:	imul   esp,DWORD PTR [edx],0x39
  42fce7:	data16 mov bh,0xb8
  42fcea:	(bad)  
  42fceb:	adc    eax,0x3ef6e1
  42fcf0:	jle    0x42fd1c
  42fcf2:	inc    BYTE PTR [ebx-0x4723603]
  42fcf8:	cmp    al,0xa5
  42fcfa:	hlt    
  42fcfb:	add    al,0xcd
  42fcfd:	out    0xfe,eax
  42fcff:	inc    DWORD PTR [ebx]
  42fd01:	jo     0x42fd45
  42fd03:	sbb    BYTE PTR [ebx-0x4d],bh
  42fd06:	mov    eax,DWORD PTR [eax]
  42fd08:	mov    bh,bl
  42fd0a:	add    dl,BYTE PTR [esi*8-0x7eba8418]
  42fd11:	(bad)  
  42fd13:	or     edi,DWORD PTR [ecx]
  42fd15:	xchg   esi,eax
  42fd16:	add    eax,0xd07db500
  42fd1b:	scas   eax,DWORD PTR es:[edi]
  42fd1c:	lds    ebp,FWORD PTR [eax-0x675299fc]
  42fd22:	jge    0x42fd93
  42fd24:	cdq    
  42fd25:	outs   dx,DWORD PTR ds:[esi]
  42fd26:	adc    ch,BYTE PTR [eax]
  42fd28:	dec    edx
  42fd29:	(bad)  
  42fd2a:	cmp    bl,BYTE PTR ds:0x97d3fabb
  42fd30:	sub    al,0x4e
  42fd32:	add    eax,0x9e060693
  42fd37:	fistp  QWORD PTR [edx+0x60]
  42fd3a:	inc    edx
  42fd3b:	sbb    BYTE PTR [ecx],ch
  42fd3d:	or     BYTE PTR [esi+0xd3],ah
	...
  42fd53:	add    BYTE PTR [edi],bl
  42fd55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd56:	dec    ecx
  42fd57:	repz ror BYTE PTR [edi-0x5b7e3612],cl
  42fd5e:	mov    ecx,0xa60c6739
  42fd63:	jecxz  0x42fdcf
  42fd65:	or     al,0xac
  42fd67:	xchg   ebx,eax
  42fd68:	test   edx,edi
  42fd6a:	xchg   ebx,eax
  42fd6b:	xchg   edi,eax
  42fd6c:	fnsave [edi]
  42fd6e:	rol    DWORD PTR [ebx],0xb5
  42fd71:	out    0xe6,al
  42fd73:	(bad)  
  42fd74:	sbb    bh,dl
  42fd76:	jnp    0x42fd0f
  42fd78:	cmp    al,0x4e
  42fd7a:	int    0x39
  42fd7c:	into   
  42fd7d:	mov    ds:0x8f82f5c1,eax
  42fd82:	and    BYTE PTR ds:0xf76d8a99,dl
  42fd88:	mov    ch,0x8f
  42fd8a:	jmp    0x4b42f60b
  42fd8f:	jge    0x42fd85
  42fd91:	mov    DWORD PTR [ebx-0x3d],eax
  42fd94:	lea    ecx,[ebp-0x7732ba9f]
  42fd9a:	jae    0x42fd60
  42fd9c:	mov    esi,0x2de02628
  42fda1:	dec    ebp
  42fda2:	aad    0x5b
  42fda4:	jp     0x42fe23
  42fda6:	jmp    0x42fd2c
  42fda8:	push   ebp
  42fda9:	cld    
  42fdaa:	les    esi,FWORD PTR gs:[ecx-0x56ba8fa2]
  42fdb1:	out    0xde,eax
  42fdb3:	ja     0x42fe14
  42fdb5:	stc    
  42fdb6:	jmp    FWORD PTR [eax+0x0]
	...
  42fdc9:	add    BYTE PTR [eax],al
  42fdcb:	add    dl,al
  42fdcd:	xchg   DWORD PTR [ecx],eax
  42fdcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fdd0:	repnz add BYTE PTR [ecx],al
  42fdd3:	idiv   BYTE PTR [ebx]
  42fdd5:	fdiv   st(7),st
  42fdd7:	call   0xf6000892
  42fddc:	ds cmc 
  42fdde:	cli    
  42fddf:	daa    
  42fde0:	jb     0x42fde2
  42fde2:	add    BYTE PTR [ecx+0x22],dl
  42fde5:	sbb    edx,edi
  42fde7:	ds mov ebx,0x6381689f
  42fded:	mov    ecx,0xbb705c00
  42fdf2:	push   eax
  42fdf3:	adc    esi,ebx
  42fdf5:	sbb    al,0xfa
  42fdf7:	push   ds
  42fdf8:	jp     0x42fe3c
  42fdfa:	xchg   edx,eax
  42fdfb:	adc    al,0x44
  42fdfd:	cmc    
  42fdfe:	out    0xea,eax
  42fe00:	fdivr  st,st(0)
  42fe02:	cli    
  42fe03:	jb     0x42fe3e
  42fe05:	out    dx,al
  42fe06:	add    cl,ch
  42fe08:	mov    dh,0x6
  42fe0a:	aas    
  42fe0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe0c:	jg     0x42fdf3
  42fe0e:	add    cl,ch
  42fe10:	mov    dh,0x10
  42fe12:	ret    0xb6af
  42fe15:	pop    DWORD PTR [eax+0x30]
  42fe18:	mov    ds:0xb7eb67f6,al
  42fe1d:	pop    DWORD PTR [eax]
  42fe1f:	pop    esp
  42fe20:	xor    ebp,DWORD PTR [edx+0x5f45c6fc]
  42fe26:	lea    ebp,[edx]
  42fe28:	loope  0x42fe89
  42fe2a:	call   0xfb3907ea
  42fe2f:	inc    ebx
	...
  42fe44:	mov    dh,0xa
  42fe46:	inc    ebp
  42fe47:	ins    DWORD PTR es:[edi],dx
  42fe48:	(bad)  
  42fe49:	addr16 push ds
  42fe4b:	pop    eax
  42fe4c:	push   cs
  42fe4d:	cwde   
  42fe4e:	call   0xfb38e0c9
  42fe53:	pop    esp
  42fe54:	repz adc edx,DWORD PTR [eax+0x0]
  42fe58:	pop    ds
  42fe59:	pop    ds
  42fe5a:	dec    edi
  42fe5b:	push   0x3b35c4
  42fe60:	retf   
  42fe61:	add    DWORD PTR [ebx-0x766c63ef],edx
  42fe67:	sub    DWORD PTR [ebp+ecx*4+0x0],0x0
  42fe6c:	xchg   edi,eax
  42fe6d:	mov    BYTE PTR [esi],0x84
  42fe70:	pop    ss
  42fe71:	push   ds
  42fe72:	idiv   edi
  42fe74:	arpl   WORD PTR [edi],bx
  42fe76:	adc    eax,0x4c0004
  42fe7b:	mov    ebx,esp
  42fe7d:	retf   
  42fe7e:	in     eax,dx
  42fe7f:	je     0x42fed6
  42fe81:	mov    dh,0xf7
  42fe83:	adc    eax,0x3afc70
  42fe88:	test   DWORD PTR [ebx],edx
  42fe8a:	push   esp
  42fe8b:	add    DWORD PTR [esp+ecx*4],ecx
  42fe8e:	xor    eax,edi
  42fe90:	push   eax
  42fe91:	fsub   QWORD PTR [ecx+eax*1+0x36]
  42fe95:	lea    ecx,[esi-0x1]
  42fe98:	add    DWORD PTR [eax+edx*1],ebp
  42fe9b:	inc    eax
  42fe9c:	int3   
  42fe9d:	je     0x42ff1a
  42fe9f:	pop    esp
  42fea0:	fisttp QWORD PTR [ebx-0x5f6cc500]
  42fea6:	adc    edx,DWORD PTR [eax+0x0]
	...
  42feb9:	add    BYTE PTR [eax],al
  42febb:	add    bl,bl
  42febd:	pop    ebx
  42febe:	push   esp
  42febf:	add    esp,ecx
  42fec1:	mov    esi,edi
  42fec3:	adc    eax,0x3afc68
  42fec8:	adc    eax,0x8c015813
  42fecd:	xchg   ebx,eax
  42fece:	xor    eax,edi
  42fed0:	loopne 0x42fe59
  42fed2:	mov    esi,0x4e8d4745
  42fed7:	push   edi
  42fed8:	pop    ebx
  42fed9:	stc    
  42feda:	rcl    BYTE PTR [ebx],cl
  42fedc:	int3   
  42fedd:	mov    eax,DWORD PTR [edx+0x56a75745]
  42fee3:	leave  
  42fee4:	mov    ch,0x2a
  42fee6:	or     BYTE PTR [eax],al
  42fee8:	push   es
  42fee9:	jb     0x42fedc
  42feeb:	mov    ebx,0x5204a8c5
  42fef0:	cs jns 0x42ff6a
  42fef3:	inc    edx
  42fef4:	mov    cl,0x95
  42fef6:	mov    eax,eax
  42fef8:	shr    ecx,0x2e
  42fefb:	sti    
  42fefc:	data16 add BYTE PTR [edx+0xc],0x2e
  42ff01:	xchg   esp,eax
  42ff02:	les    ecx,FWORD PTR [esi]
  42ff04:	jne    0x42feee
  42ff06:	xchg   eax,eax
  42ff08:	mov    eax,ds:0xafb2ee9
  42ff0d:	add    BYTE PTR [edx+0x4],0x36
  42ff11:	push   ecx
  42ff12:	mov    esi,DWORD PTR [edx+edi*4+0x18]
  42ff16:	mov    dl,BYTE PTR ds:0x3ed855
  42ff1c:	cs daa 
  42ff1e:	repz test BYTE PTR [eax],al
	...
  42ff31:	add    BYTE PTR [eax],al
  42ff33:	add    ch,dh
  42ff35:	sbb    al,0xfe
  42ff37:	dec    edi
  42ff38:	repnz mov ch,0x77
  42ff3b:	inc    edx
  42ff3c:	lds    ebp,FWORD PTR [ebx-0x3c]
  42ff3f:	je     0x42fefb
  42ff41:	sbb    BYTE PTR [edx+0x3edafd15],cl
  42ff47:	add    BYTE PTR [esi],bh
  42ff49:	out    0x87,eax
  42ff4b:	rol    BYTE PTR [ecx-0x17],0x2e
  42ff4f:	sti    
  42ff50:	jmp    0x12e8:0xa5240b68
  42ff57:	jns    0x42ff97
  42ff59:	data16 daa 
  42ff5b:	add    DWORD PTR [ebp+0x29c087e8],esi
  42ff61:	cld    
  42ff62:	cs sti 
  42ff64:	arpl   WORD PTR [ebp+eax*1-0x7c24b00],bx
  42ff6b:	(bad)  [ebp+0x3b8704a8]
  42ff71:	pop    DWORD PTR [ebp+0x5]
  42ff74:	mov    ch,0x8f
  42ff76:	fs ret 
  42ff78:	jmp    0x7ad2390f
  42ff7d:	or     ah,BYTE PTR [ebx+0x37]
  42ff80:	mov    ah,0x8f
  42ff82:	jmp    0xe2be750f
  42ff87:	xor    ecx,DWORD PTR [esi-0x64]
  42ff8a:	xchg   ecx,eax
  42ff8b:	repz mov cl,BYTE PTR [edi-0x6f2a7aa2]
  42ff92:	jmp    0xd5122f9a
  42ff97:	add    al,BYTE PTR [eax]
	...
  42ffa9:	add    BYTE PTR [eax],al
  42ffab:	add    BYTE PTR [ebp+0x377a39f6],al
  42ffb1:	psubsb mm0,QWORD PTR [ebx]
  42ffb4:	mov    ch,0xc
  42ffb6:	sub    DWORD PTR [edi],edx
  42ffb8:	mov    ebx,0xe33e969
  42ffbd:	pushf  
  42ffbe:	sbb    ecx,esi
  42ffc0:	retf   0xec8f
  42ffc3:	add    DWORD PTR [edi+ecx*4+0x69ab17e9],esi
  42ffca:	jmp    0xf7acb4e8
  42ffcf:	mov    fs,WORD PTR [edi]
  42ffd1:	pop    es
  42ffd2:	call   0xdc39b4da
  42ffd7:	scas   eax,DWORD PTR es:[edi]
  42ffd8:	stos   BYTE PTR es:[edi],al
  42ffd9:	dec    edi
  42ffda:	jmp    0xe8b5f763
  42ffdf:	add    esi,DWORD PTR [ebp-0x4a826919]
  42ffe5:	pop    DWORD PTR [edx+0x2e]
  42ffe8:	(bad)
  42ffed:	inc    edi
  42ffee:	stc    
  42ffef:	dec    ecx
  42fff0:	xor    eax,0x3903e990
  42fff5:	sar    BYTE PTR [edi+edx*1],1
  42fff8:	xor    eax,0xb5080574
  42fffd:	pusha  
  42fffe:	add    dh,ah
  430000:	add    dh,BYTE PTR ds:0x893caf52
  430006:	mov    dl,0x99
  430008:	xchg   edi,eax
  430009:	fild   DWORD PTR [edi+0x575770fd]
  43000f:	aad    0x0
	...
  430021:	add    BYTE PTR [eax],al
  430023:	add    dh,dl
  430025:	gs push edi
  430027:	int    0xd7
  430029:	cmp    DWORD PTR [edx],0x1b81d5c5
  43002f:	mov    ebp,0x6d4b80db
  430034:	(bad)  
  430035:	sub    eax,DWORD PTR [eax]
  430037:	jmp    0x6d4f7af2
  43003c:	(bad)  
  43003d:	sub    al,BYTE PTR [eax]
  43003f:	jmp    0x1a477afa
  430044:	icebp  
  430045:	in     al,dx
  430046:	std    
  430047:	popa   
  430048:	test   DWORD PTR [edi],0xbc3ddb41
  43004e:	test   BYTE PTR [eax-0x69],bl
  430051:	pop    DWORD PTR [eax]
  430053:	jmp    0x58c783fb
  430058:	xchg   esp,eax
  430059:	pop    DWORD PTR [eax]
  43005b:	jmp    0x29728c03
  430060:	dec    esp
  430061:	test   BYTE PTR [ebp+0x114e692b],0x2
  430068:	into   
  430069:	adc    BYTE PTR [ecx+0x8fb149],dl
  43006f:	je     0x430043
  430071:	adc    BYTE PTR [ecx+0x8fb148],dl
  430077:	je     0x430033
  430079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43007a:	rcl    dl,0xb4
  43007d:	or     al,0xbe
  43007f:	jno    0x430078
  430081:	lahf   
  430082:	das    
  430083:	test   eax,0x55015e32
	...
  43009c:	mov    dh,0x4f
  43009e:	test   BYTE PTR [eax],al
  4300a0:	mov    ebp,0x1f037491
  4300a5:	cmp    edx,edi
  4300a7:	sub    DWORD PTR [ebp+0xf037487],0x39
  4300ae:	adc    BYTE PTR [ebp+edi*4-0x20fc9105],al
  4300b5:	cmp    BYTE PTR [esp+eax*4],al
  4300b8:	lods   eax,DWORD PTR ds:[esi]
  4300b9:	add    BYTE PTR [edi+0x3],ch
  4300bc:	iret   
  4300bd:	cmp    BYTE PTR [eax],cl
  4300bf:	ret    0x9048
  4300c2:	push   ebp
  4300c3:	mov    eax,DWORD PTR [eax+0xf]
  4300c6:	in     al,0xf8
  4300c8:	fst    QWORD PTR [esp+edx*8]
  4300cb:	add    BYTE PTR [eax+edx*4+0x4b],cl
  4300cf:	(bad)  
  4300d0:	cmp    eax,eax
  4300d2:	or     al,BYTE PTR [eax+0x1c]
  4300d5:	shl    bh,0x15
  4300d8:	pop    eax
  4300d9:	std    
  4300da:	cmp    al,BYTE PTR [eax]
  4300dc:	cdq    
  4300dd:	shl    BYTE PTR [ebx+0x65],1
  4300e0:	mov    eax,ds:0x2d0424b4
  4300e5:	xchg   esi,eax
  4300e6:	lea    edx,fs:[eax-0x14]
  4300ea:	jb     0x43013d
  4300ec:	test   BYTE PTR [ebp+0x47f9ff50],0x14
  4300f3:	inc    eax
  4300f4:	fmul   QWORD PTR [eax+eax*8]
  4300f7:	je     0x430109
  4300f9:	(bad)  
  4300fb:	and    al,0xd8
  4300fd:	mov    cl,0x75
  4300ff:	inc    ebp
	...
  430114:	inc    esi
  430115:	nop
  430116:	lea    eax,[eax+edi*8-0xd]
  43011a:	dec    edx
  43011b:	push   0x292fb951
  430120:	mov    ah,0xb6
  430122:	xchg   edx,eax
  430123:	(bad)  
  430124:	rcl    DWORD PTR [esp+ecx*2+0x6efd88d],cl
  43012b:	lea    esi,[ebp-0x728c1f54]
  430131:	jmp    0x75c4:0x649afa74
  430138:	aam    0x98
  43013a:	dec    ebx
  43013b:	push   0xe804a66a
  430140:	sub    DWORD PTR [esi],edi
  430142:	xchg   ebx,edi
  430144:	xor    DWORD PTR [ecx],ebp
  430146:	adc    BYTE PTR [ecx],cl
  430148:	ss in  al,0xce
  43014b:	shl    esi,1
  43014d:	call   0x8eefe84c
  430152:	add    al,0x87
  430154:	jbe    0x430177
  430156:	mov    ?,ebp
  430158:	push   edx
  430159:	jb     0x430186
  43015b:	xchg   DWORD PTR [eax-0x64],edx
  43015e:	ret    
  43015f:	mov    esi,0x14ee8b9
  430164:	jbe    0x4301e4
  430166:	inc    eax
  430167:	and    al,0xb9
  430169:	test   eax,0x2939cc02
  43016e:	inc    DWORD PTR [esi+0x50d9f484]
  430174:	sar    DWORD PTR [edi-0xc],1
  430177:	xchg   BYTE PTR [eax],al
	...
  430189:	add    BYTE PTR [eax],al
  43018b:	add    BYTE PTR [eax+edi*8-0x27],ah
  43018f:	push   eax
  430190:	(bad)  [edi+0x34]
  430193:	add    al,0x2e
  430195:	push   0xe8b50130
  43019a:	les    eax,FWORD PTR [esi*4+0x36ec7a3b]
  4301a1:	lea    ebp,[edi+eax*4]
  4301a4:	hlt    
  4301a5:	push   ebx
  4301a6:	cmp    DWORD PTR [edi+ecx*2-0x2eb28428],ebp
  4301ad:	arpl   WORD PTR [esp],si
  4301b0:	imul   edi,DWORD PTR [bx+di],0xffffffec
  4301b4:	outs   dx,DWORD PTR fs:[esi]
  4301b6:	inc    ecx
  4301b7:	call   0x75329189
  4301bc:	scas   eax,DWORD PTR es:[edi]
  4301bd:	repnz dec esi
  4301bf:	push   es
  4301c0:	sti    
  4301c1:	repnz cwde 
  4301c3:	das    
  4301c4:	mov    ah,0x8f
  4301c6:	jmp    0xdddec255
  4301cb:	inc    ebx
  4301cc:	mov    ch,0x65
  4301ce:	jmp    0xdda6a25d
  4301d3:	inc    ebx
  4301d4:	mov    ch,0xc
  4301d6:	test   eax,0x745fb30f
  4301db:	inc    eax
  4301dc:	pop    ebp
  4301dd:	pop    edi
  4301de:	xchg   ecx,eax
  4301df:	addr16 out 0x8f,eax
  4301e2:	jmp    0x329c24a3
  4301e7:	jg     0x43024d
  4301e9:	push   es
  4301ea:	sub    esi,esp
  4301ec:	dec    edi
  4301ed:	aas    
  4301ee:	in     eax,0x4
	...
  430204:	mov    ch,0x8f
  430206:	pop    esi
  430207:	jnp    0x4301be
  430209:	nop
  43020a:	jmp    0xcda8e612
  43020f:	jle    0x43023c
  430211:	mov    esi,0x281d2c37
  430216:	fild   DWORD PTR [ebx]
  430218:	mov    ch,0xc
  43021a:	sub    DWORD PTR [edi],ecx
  43021c:	test   eax,0xbedfbcf2
  430221:	pop    edi
  430222:	outs   dx,BYTE PTR ds:[esi]
  430223:	ret    0x2e1d
  430226:	fs mov esi,edi
  430229:	push   ecx
  43022a:	mov    eax,ebp
  43022c:	mov    cl,0x8f
  43022e:	and    cl,BYTE PTR [edi]
  430230:	cdq    
  430231:	sub    DWORD PTR [esi-0x3c],0xffffffee
  430235:	jp     0x430204
  430237:	neg    edi
  430239:	jp     0x430200
  43023b:	imul   DWORD PTR [eax-0x19]
  43023e:	lods   al,BYTE PTR ds:[esi]
  43023f:	pop    eax
  430240:	into   
  430241:	icebp  
  430242:	es test edx,0x2a62005a
  430249:	jb     0x43022f
  43024b:	icebp  
  43024c:	cmp    BYTE PTR [esp+ecx*1+0x6a],cl
  430250:	dec    ebp
  430251:	xchg   esp,eax
  430252:	dec    edi
  430253:	aaa    
  430254:	in     al,0x70
  430256:	clc    
  430257:	aam    0x9c
  430259:	or     eax,0x8fb6e86f
  43025e:	or     ebp,DWORD PTR [edi+0x7d]
  430261:	nop
  430262:	add    cl,ch
  430264:	xor    eax,edi
  430266:	cli    
  430267:	out    0x0,al
	...
  430279:	add    BYTE PTR [eax],al
  43027b:	add    BYTE PTR ds:0xb6e901a1,dh
  430281:	hlt    
  430282:	je     0x430275
  430284:	cmp    eax,0xf6f4389b
  430289:	pop    DWORD PTR [edi+0xaf4e291]
  43028f:	gs xchg edx,eax
  430291:	mov    es,WORD PTR [eax]
  430293:	jmp    0xd56746d1
  430298:	cmp    eax,0x8adcfb5d
  43029d:	fwait
  43029e:	inc    eax
  43029f:	jmp    0xadcbdd05
  4302a4:	adc    al,BYTE PTR [ecx-0xed51646]
  4302aa:	cli    
  4302ab:	ins    BYTE PTR es:[edi],dx
  4302ac:	stc    
  4302ad:	jne    0x4302d3
  4302af:	mov    bh,0xe1
  4302b1:	pop    esp
  4302b2:	sti    
  4302b3:	(bad)  
  4302b5:	fwait
  4302b6:	inc    eax
  4302b7:	jmp    0xd9bbd246
  4302bc:	les    eax,FWORD PTR [eax+0x53]
  4302bf:	cs stos BYTE PTR es:[edi],al
  4302c1:	xchg   ebx,edi
  4302c3:	cld    
  4302c4:	jbe    0x430261
  4302c6:	inc    eax
  4302c7:	jmp    0xfd67563b
  4302cc:	jns    0x430286
  4302ce:	pop    esp
  4302cf:	(bad)
  4302d2:	fadd   QWORD PTR [eax]
  4302d4:	jge    0x430259
  4302d6:	xlat   BYTE PTR ds:[ebx]
  4302d7:	inc    ebx
  4302d8:	fadd   QWORD PTR [edi]
  4302da:	mov    al,0x4
  4302dc:	int    0x8c
  4302de:	add    bh,bh
	...
  4302f4:	jl     0x430281
  4302f6:	add    DWORD PTR [eax],eax
  4302f8:	pushf  
  4302f9:	mov    edi,0x7a475f7
  4302fe:	adc    eax,0x4ca134
  430303:	mov    esp,DWORD PTR [ebx+ecx*1-0xd]
  430307:	dec    DWORD PTR [ebx-0x63ff0790]
  43030d:	mov    WORD PTR [esi+0x53],cs
  430310:	mov    ds:0x605c1506,eax
  430315:	dec    esp
  430316:	add    BYTE PTR [ecx+0x390aefa0],cl
  43031c:	test   al,0xef
  43031e:	push   cs
  43031f:	je     0x430373
  430321:	pop    es
  430322:	adc    eax,0x4c6088
  430327:	push   0xfffaf0dc
  43032c:	scas   eax,DWORD PTR es:[edi]
  43032d:	mov    esi,0x75475f7
  430332:	adc    eax,0x4c6040
  430337:	sbb    DWORD PTR [ecx],0xfffffff8
  43033a:	clc    
  43033b:	seto   BYTE PTR [ecx]
  43033e:	add    BYTE PTR [eax],al
  430340:	or     al,0x1e
  430342:	inc    esp
  430343:	and    al,0x1c
  430345:	mov    eax,DWORD PTR [edi]
  430347:	test   DWORD PTR [esi],esi
  430349:	mov    WORD PTR [eax],es
  43034b:	add    dl,al
  43034d:	mov    al,0x24
  43034f:	adc    ah,bl
  430351:	jg     0x430398
  430353:	push   ebx
  430354:	and    eax,DWORD PTR [edi]
  430356:	adc    eax,0x24
	...
  43036b:	add    cl,dh
  43036d:	dec    ebx
  43036e:	add    BYTE PTR [ebx+0xfee71cc],cl
  430374:	mov    ch,0x62
  430376:	pop    esi
  430377:	add    BYTE PTR [ebp-0x66bb8e1a],dh
  43037d:	out    dx,al
  43037e:	cs dec edi
  430380:	vcmpps k2,xmm6,xmm2,0x3e
  430387:	adc    eax,0xc079e675
  43038c:	ret    0x7d7c
  43038f:	add    BYTE PTR [ebp-0x5dffe708],dh
  430395:	dec    esp
  430396:	cld    
  430397:	cli    
  430398:	and    DWORD PTR [ebp-0x62f60528],edx
  43039e:	loopne 0x430407
  4303a0:	mov    ch,0xb8
  4303a2:	add    al,0x0
  4303a4:	jmp    0x4303cb
  4303a6:	icebp  
  4303a7:	addr16 mov eax,ds:0x4b8
  4303ab:	out    0xe3,eax
  4303ad:	or     eax,0xf8c52440
  4303b2:	idiv   bh
  4303b4:	bound  ecx,QWORD PTR [ebp+0x12752f00]
  4303ba:	stc    
  4303bb:	dec    esi
  4303bc:	jmp    0x4b8:0xa19bf115
  4303c3:	jg     0x430402
  4303c5:	data16 adc BYTE PTR [edi-0x31],cl
  4303c9:	clc    
  4303ca:	icebp  
  4303cb:	mov    dl,0xf5
  4303cd:	sub    BYTE PTR [edi],dl
  4303cf:	adc    DWORD PTR [eax],eax
	...
  4303e1:	add    BYTE PTR [eax],al
  4303e3:	add    BYTE PTR [eax+edi*8-0xf570502],dh
  4303ea:	adc    DWORD PTR ds:0x3ee521,0xb2f3941e
  4303f4:	in     eax,0xb7
  4303f6:	pushf  
  4303f7:	adc    BYTE PTR [edi*1+0x65aa1bdb],ch
  4303fe:	lds    esp,FWORD PTR [esi-0x4b]
  430401:	(bad)  
  430402:	and    dl,BYTE PTR [ecx]
  430404:	mov    ebp,0x9adfa518
  430409:	sar    bh,1
  43040b:	repz push edx
  43040d:	ja     0x430439
  43040f:	inc    ebx
  430410:	mov    ch,0x1c
  430412:	lods   eax,DWORD PTR ds:[esi]
  430413:	fist   WORD PTR [esi-0x69206ae8]
  430419:	sbb    BYTE PTR [ebp+0x41f78adf],ah
  43041f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430420:	scas   al,BYTE PTR es:[edi]
  430421:	out    dx,al
  430422:	int    0xf7
  430424:	scas   eax,DWORD PTR es:[edi]
  430425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430426:	popa   
  430427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430428:	loop   0x4303b9
  43042a:	shl    al,cl
  43042c:	mov    edx,0x8e042984
  430431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430432:	cmp    eax,0xba8fcaa7
  430437:	lock outs dx,BYTE PTR ds:[esi]
  430439:	sub    DWORD PTR [ecx],0xf64dde04
  43043f:	ret    
  430440:	or     bl,BYTE PTR [ebx]
  430442:	mov    WORD PTR [eax],gs
  430444:	sub    edx,DWORD PTR [edi+0x30e9]
	...
  43045a:	add    BYTE PTR [eax],al
  43045c:	cmp    bh,bl
  43045e:	gs xchg edi,eax
  430460:	shl    ebp,1
  430462:	jecxz  0x430437
  430464:	fs push edx
  430466:	jmp    0x9200cb6a
  43046b:	neg    BYTE PTR ds:0x757f71ed
  430471:	arpl   sp,ax
  430473:	sbb    DWORD PTR [ebp-0x7a9853e4],esi
  430479:	ja     0x4304e7
  43047b:	cmp    al,0xe6
  43047d:	mov    eax,0xed460541
  430482:	dec    ecx
  430483:	xchg   BYTE PTR [eax+0x2940747f],cl
  430489:	out    dx,al
  43048a:	mov    bl,0xf7
  43048c:	jmp    DWORD PTR [ebx+0x0]
  43048f:	loope  0x430457
  430491:	jmp    0x1200:0xade22514
  430498:	jecxz  0x430482
  43049a:	je     0x430495
  43049c:	cmp    esp,DWORD PTR [esp+ecx*1+0x16]
  4304a0:	lds    edx,FWORD PTR [edi-0x7d190b05]
  4304a6:	inc    eax
  4304a7:	jmp    0xe94f31b5
  4304ac:	xor    BYTE PTR [eax+esi*1+0x48f771f],dl
  4304b3:	jne    0x430460
  4304b5:	cmc    
  4304b6:	les    eax,FWORD PTR [ecx-0x567c16cd]
  4304bc:	lds    edx,FWORD PTR [ecx+0xa92f]
	...
  4304d2:	add    BYTE PTR [eax],al
  4304d4:	icebp  
  4304d5:	sub    eax,0xb339e904
  4304da:	push   eax
  4304db:	(bad)  
  4304dd:	(bad)  
  4304de:	push   ebp
  4304df:	jb     0x4304fe
  4304e1:	loop   0x4304e7
  4304e3:	stc    
  4304e4:	dec    eax
  4304e5:	lods   eax,DWORD PTR ds:[esi]
  4304e6:	add    ch,ah
  4304e8:	mov    al,ds:0xbaf57514
  4304ed:	scas   al,BYTE PTR es:[edi]
  4304ee:	call   0xfb2cd63c
  4304f3:	ins    DWORD PTR es:[edi],dx
  4304f4:	jno    0x43055a
  4304f6:	sbb    dl,dl
  4304f8:	cmp    DWORD PTR [ebp-0x25],0x2a
  4304fc:	mov    cl,0x62
  4304fe:	adc    BYTE PTR [esi-0x4e],bh
  430501:	jg     0x43048a
  430503:	and    al,0x45
  430505:	jmp    0x66fd:0x234ee174
  43050c:	xor    ch,dh
  43050e:	divps  xmm6,XMMWORD PTR [edx+0x26dcfb83]
  430515:	aas    
  430516:	sti    
  430517:	aam    0xe
  430519:	jmp    0x3a:0xde640014
  430520:	and    dh,BYTE PTR [esi-0x41f3ef46]
  430526:	sub    esp,0xffffffaa
  430529:	in     al,dx
  43052a:	sub    dl,dh
  43052c:	pop    ds
  43052d:	xchg   ecx,eax
  43052e:	add    al,0x56
  430530:	addr16 pushf 
  430532:	or     al,0x74
  430534:	in     eax,dx
  430535:	or     BYTE PTR [edx-0x68],dl
	...
  43054c:	ret    0x8412
  43054f:	ror    BYTE PTR [eax-0x8],0x31
  430553:	xor    eax,0x3b333c
  430558:	cmp    eax,esp
  43055a:	cmc    
  43055b:	jne    0x4304e9
  43055d:	addr16 dec ebp
  43055f:	adc    al,0x93
  430561:	popf   
  430562:	or     al,ch
  430564:	repz adc al,0xf7
  430567:	push   DWORD PTR [edi-0x20]
  43056a:	cmc    
  43056b:	jne    0x4304f5
  43056d:	adc    esi,DWORD PTR [ebp+0x10]
  430570:	stos   BYTE PTR es:[edi],al
  430571:	adc    dh,BYTE PTR [ebp+0x8]
  430574:	inc    ebx
  430575:	std    
  430576:	push   edx
  430577:	adc    al,0xcc
  430579:	xchg   ebx,eax
  43057a:	push   esi
  43057b:	pop    ebp
  43057c:	push   ds
  43057d:	loopne 0x430579
  43057f:	push   esp
  430580:	out    0x4,eax
  430582:	out    dx,al
  430583:	add    eax,0x3b3a7c
  430588:	dec    eax
  430589:	mov    edx,0x9c707583
  43058e:	and    eax,ebp
  430590:	push   0xd8fff678
  430595:	shl    BYTE PTR [ebx+0x18],1
  430598:	pop    es
  430599:	(bad)  [edx-0x21]
  43059c:	fist   WORD PTR [ebx-0x626cef8b]
  4305a2:	adc    BYTE PTR [ebx+0x75f5fc51],cl
  4305a8:	mov    ch,0xee
  4305aa:	xchg   esi,eax
  4305ab:	sub    DWORD PTR [eax],edx
  4305ad:	pop    ebp
  4305ae:	test   bh,ah
	...
  4305c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4305c5:	push   ebp
  4305c6:	or     dl,BYTE PTR [edx+eax*1]
  4305c9:	and    ebp,edi
  4305cb:	push   ecx
  4305cc:	cli    
  4305cd:	sub    dh,bh
  4305cf:	cli    
  4305d0:	enter  0xeb8e,0x3f
  4305d4:	mov    ch,0xd4
  4305d6:	and    DWORD PTR [esi-0x78d6093b],edi
  4305dc:	leave  
  4305dd:	mov    edi,edx
  4305df:	das    
  4305e0:	jmp    0x43061a
  4305e2:	inc    DWORD PTR [ebx]
  4305e4:	arpl   WORD PTR [ecx+0xa],sp
  4305e7:	or     al,0x49
  4305e9:	xlat   BYTE PTR ds:[ebx]
  4305ea:	xchg   esi,eax
  4305eb:	retf   0xe422
  4305ee:	jle    0x430574
  4305f0:	jne    0x430657
  4305f2:	out    0x36,eax
  4305f4:	loopne 0x43063e
  4305f6:	pop    edi
  4305f7:	aas    
  4305f8:	mov    ch,0x43
  4305fa:	adc    al,0xfb
  4305fc:	and    cl,ch
  4305fe:	mov    DWORD PTR [ebp-0x57],ecx
  430601:	fprem  
  430603:	pop    es
  430604:	popf   
  430605:	(bad)  
  430606:	jg     0x430603
  430608:	cmp    BYTE PTR [esi-0x32ff04ed],0x7d
  43060f:	jne    0x4305d6
  430611:	cmp    BYTE PTR [edi+0x75],0xbd
  430615:	xor    DWORD PTR [ecx],ebx
  430617:	dec    eax
  430618:	leave  
  430619:	mov    eax,0x36f85a04
  43061e:	adc    al,0x0
  430620:	call   0xb1357692
  430625:	sub    BYTE PTR [ecx+0x3f],bl
	...
  43063c:	mov    ch,0xf4
  43063e:	fadd   DWORD PTR [esi+0x20f2c8c0]
  430644:	sbb    eax,0x2afa9771
  430649:	nop
  43064a:	ins    DWORD PTR es:[edi],dx
  43064b:	inc    esp
  43064c:	test   eax,0xa5391e87
  430651:	retf   0x3a5
  430654:	mov    BYTE PTR [edi+0x4a],bh
  430657:	stc    
  430658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430659:	push   ss
  43065a:	mov    ah,0x1b
  43065c:	(bad)  
  43065d:	fs icebp 
  43065f:	imul   ebx,DWORD PTR [eax],0xffffffec
  430662:	xor    DWORD PTR [ebx-0x6d58126],eax
  430668:	ret    0x9bea
  43066b:	pop    ss
  43066c:	xchg   edx,ebp
  43066e:	xchg   ebx,eax
  43066f:	pmaxub mm4,QWORD PTR [ecx+eiz*8-0x7e]
  430674:	test   al,0xbb
  430676:	cmc    
  430677:	ret    
  430678:	retf   0xa44c
  43067b:	inc    ebp
  43067c:	test   eax,0xc98e948f
  430681:	loope  0x43066e
  430683:	xor    eax,DWORD PTR [edi+0x707e94e]
  430689:	pop    ss
  43068a:	pop    esp
  43068b:	adc    al,0x29
  43068d:	mov    cl,0xd1
  43068f:	inc    edx
  430690:	inc    esi
  430691:	jmp    0x63b88e67
  430696:	icebp  
  430697:	rcr    BYTE PTR ds:[edi-0x5e],0xc6
  43069c:	and    BYTE PTR [ebx-0x27],0x82
	...
  4306b4:	add    BYTE PTR [esi+ebx*2+0x33eacad0],al
  4306bb:	or     al,0x5d
  4306bd:	inc    ebx
  4306be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4306bf:	sbb    BYTE PTR [esi-0xa],0xf5
  4306c3:	and    al,0x87
  4306c6:	xchg   edx,eax
  4306c7:	clc    
  4306c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4306c9:	inc    ecx
  4306ca:	mov    bh,al
  4306cc:	mov    esi,0x3e0bfbea
  4306d1:	test   ch,cl
  4306d3:	sbb    ch,dh
  4306d5:	pop    DWORD PTR [eax]
  4306d7:	pop    ss
  4306d8:	adc    al,0x2c
  4306da:	adc    al,0xe9
  4306dc:	or     eax,0xad5fec11
  4306e1:	lahf   
  4306e2:	shr    BYTE PTR [edx+0x625293b6],cl
  4306e8:	or     eax,0x99087496
  4306ed:	fst    QWORD PTR [ecx-0x3fecc8b9]
  4306f3:	mov    ch,0x9e
  4306f5:	mov    ds:0xaa57b935,al
  4306fa:	add    BYTE PTR [esi+eax*8+0x33f974e6],dh
  430701:	pop    esp
  430702:	adc    al,0x1e
  430704:	fst    QWORD PTR [ecx-0x19ad1d18]
  43070a:	cli    
  43070b:	add    ah,BYTE PTR [esi+0x37dd74e6]
  430711:	adc    BYTE PTR fs:[edi-0x9f79bc9],dl
	...
  43072c:	retf   0x1443
  43072f:	test   eax,0xab5d45b6
  430734:	leave  
  430735:	(bad)  
  430736:	push   ebp
  430737:	jb     0x43075e
  430739:	fiadd  WORD PTR [ecx+ebx*1]
  43073c:	out    dx,eax
  43073d:	test   al,0x0
  43073f:	in     eax,0x6c
  430741:	adc    dh,BYTE PTR [ebp-0xb]
  430744:	mov    dh,BYTE PTR [eax-0x19e08618]
  43074a:	cli    
  43074b:	ins    DWORD PTR es:[edi],dx
  43074c:	stc    
  43074d:	arpl   WORD PTR [eax],bx
  43074f:	repnz mov ds:0xb92adb5f,eax
  430755:	bound  edx,QWORD PTR [eax]
  430757:	sahf   
  430758:	bound  ebx,QWORD PTR [ecx-0x1b52db79]
  43075e:	je     0x430741
  430760:	(bad)  
  430762:	test   BYTE PTR [eax],0x3b
  430765:	pavgw  mm2,QWORD PTR [eax]
  430768:	mov    ebx,0x31ff0ee0
  43076d:	jge    0x4307bd
  43076f:	jmp    DWORD PTR [ecx]
  430771:	xchg   ebp,eax
  430772:	not    DWORD PTR ds:0x408150
  430778:	pop    edx
  430779:	retf   0x10bc
  43077c:	sbb    al,0xc2
  43077e:	sub    esp,0xd6309062
  430784:	dec    edi
  430785:	lea    eax,[esi+edx*2]
  430788:	xchg   eax,esp
  43078a:	or     dh,BYTE PTR [ebp+edi*4+0x7b]
  43078e:	bound  edx,QWORD PTR [esi+0x0]
	...
  4307a4:	call   0x3385:0x40c0840e
  4307ab:	xor    eax,0x3b703c
  4307b0:	xor    DWORD PTR [ebp-0x9],edi
  4307b3:	jne    0x430775
  4307b5:	sbb    ecx,DWORD PTR [ebp+0x18]
  4307b8:	mov    ebx,0x3be806e0
  4307bd:	imul   esi,edi,0xffffffff
  4307c0:	mov    bh,0x82
  4307c2:	div    DWORD PTR [ebp-0x7c]
  4307c5:	pcmpeqw mm2,QWORD PTR [edx+eiz*8]
  4307c9:	push   cs
  4307ca:	jne    0x4307d8
  4307cc:	jnp    0x4307af
  4307ce:	add    bh,bh
  4307d0:	xchg   ecx,eax
  4307d1:	pushf  
  4307d2:	adc    al,0x40
  4307d4:	pushf  
  4307d5:	out    dx,al
  4307d6:	pop    ebx
  4307d7:	ret    0x8c60
  4307da:	push   ebp
  4307db:	mov    ebp,DWORD PTR [eax+0x66]
  4307de:	add    eax,0xfad35230
  4307e3:	add    eax,edx
  4307e5:	sbb    dh,BYTE PTR [ebp+0x10]
  4307e8:	shr    BYTE PTR [eax+ebp*8-0x8f11ddf],0x84
  4307f0:	mov    ch,0x36
  4307f2:	repz pop ss
  4307f4:	mov    es,ebx
  4307f6:	out    dx,al
  4307f7:	(bad)  
  4307f9:	div    cl
  4307fb:	(bad)  
  4307fe:	adc    al,BYTE PTR [edi+0x757fbe80]
  430804:	mov    ecx,0xf7390e
	...
  430819:	add    BYTE PTR [eax],al
  43081b:	add    BYTE PTR [edx],ah
  43081d:	jno    0x43088b
  43081f:	nop    ebx
  430822:	push   ss
  430823:	sti    
  430824:	mov    dl,ch
  430826:	fdivr  st,st(2)
  430828:	or     dl,0x7f
  43082b:	jne    0x4307da
  43082d:	push   ecx
  43082e:	adc    bh,BYTE PTR [eax]
  430830:	mov    eax,ds:0x9059ff36
  430835:	mov    ah,0x13
  430837:	add    BYTE PTR [esi+0x750f66f3],ch
  43083d:	div    cl
  43083f:	add    DWORD PTR ds:0xb53dc7bd,ebx
  430845:	mov    ch,0x3c
  430847:	add    eax,0xffbee26d
  43084c:	dec    ecx
  43084d:	clc    
  43084e:	mov    dh,0x71
  430850:	jb     0x430886
  430852:	(bad)  
  430853:	mov    esi,0x13d2f3ee
  430858:	cmc    
  430859:	clc    
  43085a:	icebp  
  43085b:	add    DWORD PTR [ebp+0x24],ebx
  43085e:	int3   
  43085f:	cmp    eax,0x52739b5
  430864:	stc    
  430865:	in     al,0xbe
  430867:	inc    DWORD PTR [ebx-0x753fe8df]
  43086d:	or     DWORD PTR [ecx],ebp
  43086f:	pop    ss
  430870:	in     al,dx
  430871:	mov    edx,0x7208bf04
  430876:	jo     0x4308f7
  430878:	pop    ecx
  430879:	xchg   ecx,eax
  43087a:	jb     0x430881
  43087c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43087d:	(bad)  
  43087e:	mov    ebx,0xc3
	...
  430893:	add    BYTE PTR [edx-0x6d],bl
  430896:	xor    ecx,DWORD PTR [ebx+0x2e1d97c8]
  43089c:	pop    ebp
  43089d:	or     DWORD PTR [esi+edi*2+0x3e],esi
  4308a1:	or     al,0xa9
  4308a3:	clc    
  4308a4:	xchg   ecx,eax
  4308a5:	or     al,0x73
  4308a7:	clc    
  4308a8:	aad    0x1a
  4308aa:	sub    ecx,DWORD PTR [eax]
  4308ac:	sbb    eax,0x1e7f6a04
  4308b1:	or     eax,0x79c1f829
  4308b6:	adc    esi,edx
  4308b8:	inc    ecx
  4308b9:	push   ebp
  4308ba:	xor    ebp,edx
  4308bc:	adc    ah,BYTE PTR [edi+0x18fe7e5e]
  4308c2:	lods   al,BYTE PTR ds:[esi]
  4308c3:	pop    edi
  4308c4:	sub    BYTE PTR [ebp+0x21],cl
  4308c7:	aam    0xdb
  4308c9:	nop
  4308ca:	fwait
  4308cb:	jle    0x43088d
  4308cd:	mov    ds:0x44e2c3d5,eax
  4308d2:	xor    BYTE PTR [edx-0x4f],al
  4308d5:	(bad)  
  4308d6:	mov    ah,0x8a
  4308d8:	loope  0x4308ec
  4308da:	add    eax,0xd98cc72c
  4308df:	push   ebp
  4308e0:	or     BYTE PTR [edi+0x5d33d5ed],0xf1
  4308e7:	neg    esp
  4308e9:	mul    DWORD PTR [eax+ebx*4+0x4464e6af]
  4308f0:	sub    DWORD PTR [ebp-0x4ede8a94],ebp
  4308f6:	outs   dx,BYTE PTR ds:[esi]
  4308f7:	lds    eax,FWORD PTR [eax]
	...
  430909:	add    BYTE PTR [eax],al
  43090b:	add    BYTE PTR [esi-0x7180de09],dh
  430911:	out    0x63,al
  430913:	inc    ebx
  430914:	or     DWORD PTR [ebp+0x4f],edi
  430917:	sub    al,0xe7
  430919:	adc    al,0x2c
  43091b:	pop    esp
  43091c:	add    al,0xf8
  43091e:	(bad)  
  43091f:	mov    edx,0x60fae93c
  430924:	ins    DWORD PTR es:[edi],dx
  430925:	retf   0x2c8c
  430928:	stc    
  430929:	aas    
  43092a:	out    0xe8,eax
  43092c:	push   0xa2c114e9
  430931:	dec    edi
  430932:	add    BYTE PTR [edi],ch
  430934:	lock and eax,0xd5de904
  43093a:	in     al,dx
  43093b:	push   0xffffffa2
  43093d:	lahf   
  43093e:	repnz in al,dx
  430940:	out    0xc1,al
  430942:	ds jmp 0xdcca4b02
  430948:	scas   al,BYTE PTR es:[edi]
  430949:	pop    ebx
  43094a:	das    
  43094b:	push   ecx
  43094c:	xchg   ebx,eax
  43094d:	sti    
  43094e:	stc    
  43094f:	push   esi
  430950:	xor    cl,bh
  430952:	jae    0x430957
  430954:	sub    al,0xe1
  430956:	jae    0x430967
  430958:	ss test eax,0xe99b430
  43095e:	inc    edx
  43095f:	loope  0x4309bf
  430961:	in     al,0xf9
  430963:	arpl   WORD PTR cs:[eax+eax*8],cx
  430967:	popf   
  430968:	mov    ebp,0x25b7306d
  43096d:	push   esp
  43096e:	sar    BYTE PTR [eax+0x0],1
	...
  430984:	pop    esi
  430985:	das    
  430986:	xchg   BYTE PTR [edi],cl
  430988:	inc    ebx
  430989:	sbb    BYTE PTR [ebp+0x21],al
  43098c:	and    eax,0x1f99d04c
  430991:	(bad)  
  430992:	push   edx
  430993:	test   dl,0xa3
  430996:	adc    eax,0xc949b6a9
  43099b:	stos   DWORD PTR es:[edi],eax
  43099c:	lods   eax,DWORD PTR ds:[esi]
  43099d:	(bad)  
  43099e:	push   ebp
  43099f:	jb     0x4309a6
  4309a1:	gs in  al,dx
  4309a3:	sbb    DWORD PTR [ebx],eax
  4309a5:	mov    esi,DWORD PTR [eax]
  4309a7:	mov    bh,0x74
  4309a9:	in     eax,0xfe
  4309ab:	call   FWORD PTR [edx-0x57f78aea]
  4309b1:	sahf   
  4309b2:	call   0xf7a91264
  4309b7:	test   BYTE PTR [eax+ebp*8],cl
  4309ba:	and    al,0x85
  4309bc:	cmp    ch,al
  4309be:	and    BYTE PTR [ebx+0x2175a172],al
  4309c4:	xlat   BYTE PTR ds:[ebx]
  4309c5:	int    0x2
  4309c7:	call   0x3a6fc3
  4309cc:	leave  
  4309cd:	dec    ebx
  4309ce:	je     0x4309e5
  4309d0:	(bad)  
  4309d1:	fwait
  4309d2:	dec    esi
  4309d3:	(bad)  
  4309d4:	sar    DWORD PTR [ebx],1
  4309d6:	push   ecx
  4309d7:	call   0x39239e
  4309dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4309dd:	int3   
  4309de:	ror    BYTE PTR [ebp-0x14afbea7],cl
  4309e4:	sbb    eax,0x15f5bb
	...
  4309f9:	add    BYTE PTR [eax],al
  4309fb:	add    BYTE PTR [eax+0x52004087],cl
  430a01:	pop    edx
  430a02:	mov    edx,0x81bddc04
  430a07:	in     al,dx
  430a08:	pop    ebp
  430a09:	pop    edi
  430a0a:	and    al,0x2
  430a0c:	int3   
  430a0d:	nop
  430a0e:	dec    esi
  430a0f:	lea    edi,[ecx+0x6b]
  430a12:	std    
  430a13:	push   DWORD PTR [ebx-0x23eff68d]
  430a19:	nop
  430a1a:	lea    eax,[ebp-0x89b48]
  430a20:	sbb    al,0xf7
  430a22:	arpl   di,di
  430a24:	imul   edi,DWORD PTR [eax-0x42],0xffffffae
  430a28:	pushf  
  430a29:	nop
  430a2a:	test   al,al
  430a2c:	in     eax,0x75
  430a2e:	add    DWORD PTR [eax],eax
  430a30:	mov    WORD PTR [edi],ss
  430a32:	mov    esi,0x4a8775
  430a37:	add    BYTE PTR [ebp+0x7c74c7b6],dh
  430a3d:	mov    BYTE PTR [edi+eiz*8-0xf],al
  430a41:	xor    al,0xff
  430a43:	push   ebp
  430a45:	lahf   
  430a46:	repz clc 
  430a48:	pop    ebp
  430a49:	sub    al,0x18
  430a4b:	add    BYTE PTR [ebp+0x72e81850],dh
  430a51:	xchg   ecx,eax
  430a52:	add    al,0x0
  430a54:	in     eax,0x80
  430a56:	loop   0x430a52
  430a58:	or     BYTE PTR [esi],0x10
  430a5b:	stos   BYTE PTR es:[edi],al
  430a5c:	mov    ch,0xf6
  430a5e:	add    al,0x0
	...
  430a71:	add    BYTE PTR [eax],al
  430a73:	add    cl,al
  430a75:	xor    DWORD PTR [edx+0x6c860945],ecx
  430a7b:	inc    ebp
  430a7c:	push   edi
  430a7d:	pop    esp
  430a7e:	jl     0x430ae2
  430a80:	ss repz push edx
  430a83:	add    BYTE PTR [ecx-0x16ba7619],ah
  430a89:	and    eax,0x850a62e9
  430a8e:	ins    BYTE PTR es:[edi],dx
  430a8f:	outs   dx,BYTE PTR ds:[esi]
  430a90:	push   ebx
  430a91:	idiv   dh
  430a93:	xor    ebp,0x21
  430a96:	mov    ecx,0x4604b4b0
  430a9b:	mov    edi,0x816b7180
  430aa0:	ror    DWORD PTR [ebp-0x1],1
  430aa3:	push   DWORD PTR [ebp+0x9157c24]
  430aa9:	call   0x86830a6c
  430aae:	mov    al,BYTE PTR [ebp-0x37]
  430ab1:	and    eax,0xddc14544
  430ab6:	(bad)  
  430ab7:	push   DWORD PTR [ebp-0x3e6feb1f]
  430abd:	cmp    bh,bh
  430abf:	test   BYTE PTR [ebp+0x5d],dh
  430ac2:	add    al,BYTE PTR [edi-0x3ef16f8d]
  430ac8:	mov    bl,BYTE PTR [ecx]
  430aca:	and    al,0x7c
  430acc:	cmp    al,0x4d
  430ace:	int3   
  430acf:	mov    eax,edi
  430ad1:	mov    edi,0xeff04238
  430ad6:	out    0x8c,eax
	...
  430aec:	call   0xe554c4e1
  430af1:	sub    BYTE PTR [ecx],0x4
  430af4:	xor    BYTE PTR [ebp-0x67],cl
  430af7:	aam    0x52
  430af9:	push   edx
  430afa:	dec    ecx
  430afb:	jnp    0x430b4b
  430afd:	sbb    DWORD PTR [ebp*2+0x7af50d38],esp
  430b04:	ds jecxz 0x430b3f
  430b07:	jnp    0x430aa9
  430b09:	jae    0x430ae3
  430b0b:	ret    
  430b0c:	xor    dl,BYTE PTR [esi]
  430b0e:	sbb    BYTE PTR fs:[esi],ch
  430b11:	jecxz  0x430b84
  430b13:	out    dx,eax
  430b14:	(bad)  
  430b15:	int3   
  430b16:	pop    edi
  430b17:	ror    DWORD PTR [ecx],0x76
  430b1a:	clc    
  430b1b:	mov    BYTE PTR [eax-0x11],bh
  430b1e:	mov    eax,0xbf97708e
  430b23:	out    dx,al
  430b24:	call   FWORD PTR [edi-0x6fb614bf]
  430b2a:	jmp    0xe5110908
  430b2f:	add    eax,DWORD PTR [eax-0x2e78baea]
  430b35:	jg     0x430ac9
  430b37:	in     eax,dx
  430b38:	xchg   ebp,eax
  430b39:	jne    0x430b24
  430b3b:	ror    edi,1
  430b3d:	jl     0x430af8
  430b3f:	adc    DWORD PTR [ebp-0x71],esi
  430b42:	inc    ax
  430b44:	mov    cl,0x75
  430b46:	enter  0x54db,0x18
  430b4a:	stos   DWORD PTR es:[edi],eax
  430b4b:	add    al,0x40
  430b4d:	dec    esp
  430b4e:	stc    
  430b4f:	rol    DWORD PTR [eax],cl
	...
  430b61:	add    BYTE PTR [eax],al
  430b63:	add    BYTE PTR [ecx+ecx*4+0x0],dh
  430b67:	call   0xefe3cc7a
  430b6c:	pop    ds
  430b6d:	outs   dx,BYTE PTR ds:[esi]
  430b6e:	xchg   DWORD PTR [ecx+ecx*1],ebp
  430b71:	outs   dx,BYTE PTR ds:[esi]
  430b72:	mov    DWORD PTR [edi],esp
  430b74:	mov    ah,0x6d
  430b76:	xchg   DWORD PTR [ebx+ecx*1],ebp
  430b79:	outs   dx,BYTE PTR ds:[esi]
  430b7a:	mov    DWORD PTR [edi],esp
  430b7c:	mov    dh,0x14
  430b7e:	inc    ebp
  430b7f:	lds    eax,FWORD PTR [esi-0x1378f816]
  430b85:	out    0xba,al
  430b87:	mov    dh,0xdf
  430b89:	pop    DWORD PTR [eax]
  430b8b:	neg    BYTE PTR fs:[ebx+0xe]
  430b8f:	jb     0x430c0e
  430b91:	out    0x36,al
  430b93:	scas   al,BYTE PTR es:[edi]
  430b94:	mov    edi,0x5739cb4e
  430b99:	pop    ss
  430b9a:	dec    edx
  430b9b:	loopne 0x430b6b
  430b9d:	das    
  430b9e:	mov    BYTE PTR [edi+0x7d4514af],al
  430ba4:	push   es
  430ba5:	jmp    0xa984:0xe69c4c3e
  430bac:	or     dl,BYTE PTR [edi+eax*4-0x3465754c]
  430bb3:	out    dx,al
  430bb4:	not    esp
  430bb6:	dec    edi
  430bb7:	iret   
  430bb8:	xor    DWORD PTR [ebp+0x7],edx
  430bbb:	inc    ecx
  430bbc:	xor    DWORD PTR [edi],edx
  430bbe:	cli    
  430bbf:	inc    esi
  430bc0:	cmp    eax,0x5e99fc4c
  430bc5:	or     ah,BYTE PTR [edi+esi*1+0x0]
	...
  430bdc:	pop    edi
  430bdd:	or     al,0xc0
  430bdf:	mov    ch,0xc1
  430be1:	test   al,0x7d
  430be3:	and    eax,0x9c4294e6
  430be8:	inc    edx
  430be9:	ins    DWORD PTR es:[edi],dx
  430bea:	mov    DWORD PTR [edi+0x615ef7ad],edx
  430bf0:	cmp    al,0xe6
  430bf2:	mov    WORD PTR [eax],es
  430bf4:	popa   
  430bf5:	pop    ecx
  430bf6:	push   eax
  430bf7:	push   0x8d14
  430bfc:	mov    ah,0xed
  430bfe:	xchg   ebp,eax
  430bff:	dec    BYTE PTR [ebx-0xf3f7c39]
  430c05:	jl     0x430c82
  430c07:	jge    0x430c71
  430c09:	pushf  
  430c0a:	push   0x5
  430c0c:	repnz or al,BYTE PTR [esi+0x3]
  430c10:	lea    edi,[ebp+0x65e43fe2]
  430c16:	test   ecx,0xec81d11f
  430c1c:	int    0x77
  430c1e:	pop    eax
  430c1f:	add    cl,BYTE PTR [ebp+ecx*4+0x4b]
  430c23:	push   esi
  430c24:	xchg   ebx,eax
  430c25:	and    al,BYTE PTR [ecx+eax*1]
  430c28:	pop    esp
  430c29:	lea    ecx,[ebx-0x73]
  430c2c:	shl    DWORD PTR [edi],1
  430c2e:	std    
  430c2f:	jmp    FWORD PTR [ebx]
  430c31:	mov    esp,0x913b0064
  430c36:	or     BYTE PTR [ecx],dl
  430c38:	fmul   QWORD PTR [ebx+0x7dbc3d83]
  430c3e:	inc    eax
	...
  430c53:	add    BYTE PTR [ebp-0x237a0ce0],dl
  430c59:	fisttp WORD PTR [ecx]
  430c5b:	lea    ebx,[ecx+0x6bfffd37]
  430c61:	mov    esp,0x73c0758b
  430c66:	or     BYTE PTR [edi+0x7a],dh
  430c69:	data16 test al,al
  430c6c:	and    DWORD PTR [edx+0x20590c62],ecx
  430c72:	iret   
  430c73:	push   0xffffffcc
  430c75:	mov    esp,0x4f5fd7f5
  430c7a:	or     al,0xff
  430c7c:	shr    DWORD PTR [edx+ecx*1+0x40],0xb5
  430c81:	test   BYTE PTR [ebx+0xb9163f0],0xfc
  430c88:	(bad)  
  430c89:	ss (bad) 
  430c8b:	mov    eax,0xfffef7b6
  430c90:	fidiv  WORD PTR [edi-0x1cdf7332]
  430c96:	pop    es
  430c97:	dec    ebp
  430c98:	je     0x430c58
  430c9a:	dec    ecx
  430c9b:	jb     0x430c28
  430c9d:	sar    DWORD PTR [edx-0x40],0x8
  430ca1:	jmp    0x430c8f
  430ca3:	or     ebp,DWORD PTR [esi]
  430ca5:	sub    ch,ch
  430ca7:	inc    DWORD PTR [edx]
  430ca9:	retf   0x7f4f
  430cac:	jno    0x430ca0
  430cae:	add    DWORD PTR [ebp+0x5d],0x9858386
  430cb5:	xor    edi,DWORD PTR [eax-0x5]
	...
  430ccc:	in     eax,0x7c
  430cce:	add    cl,BYTE PTR [ecx+0x15782ee8]
  430cd4:	gs in  eax,0xbe
  430cd7:	push   DWORD PTR [esi]
  430cd9:	ss jmp 0x430ced
  430cdc:	inc    eax
  430cdd:	jae    0x430c82
  430cdf:	std    
  430ce0:	sub    ah,BYTE PTR [ecx-0x31]
  430ce3:	xchg   BYTE PTR [eax+0x5e],bh
  430ce6:	xor    BYTE PTR [ebp+0x15],0xe
  430cea:	xchg   esi,eax
  430ceb:	jb     0x430d00
  430ced:	imul   edi,DWORD PTR [ebx-0x40],0xbecf380
  430cf4:	xor    BYTE PTR [ebx],dh
  430cf6:	pop    edi
  430cf7:	data16 mov ch,0x26
  430cfa:	js     0x430ccf
  430cfc:	ss mov dl,0x3
  430cff:	lea    esi,[eax-0x4e]
  430d02:	iret   
  430d03:	mov    WORD PTR [eax-0x4e],?
  430d06:	iret   
  430d07:	mov    WORD PTR [eax+0x72],?
  430d0a:	iret   
  430d0b:	mov    WORD PTR [eax-0x71],?
  430d0e:	pop    ebp
  430d0f:	rcl    DWORD PTR [eax-0x20],cl
  430d12:	sbb    DWORD PTR [esi],ecx
  430d14:	or     eax,0x3003a97e
  430d19:	iret   
  430d1a:	xchg   ebx,eax
  430d1b:	jmp    ebx
  430d1d:	in     eax,0xd
  430d1f:	and    dh,BYTE PTR [edx]
  430d21:	push   ebp
  430d22:	xor    eax,0x7f17f08c
  430d27:	add    esi,DWORD PTR [eax-0x24bd9671]
  430d2d:	imul   ecx,DWORD PTR [bp+0x0],0x0
	...
  430d42:	add    BYTE PTR [eax],al
  430d44:	sub    eax,0xd4556890
  430d49:	dec    ebp
  430d4a:	inc    edi
  430d4b:	jbe    0x430d31
  430d4d:	aas    
  430d4e:	shr    DWORD PTR [edi],0x9d
  430d51:	nop
  430d52:	jmp    0x2c4e72e1
  430d57:	ins    BYTE PTR es:[edi],dx
  430d58:	bound  ecx,QWORD PTR [ebp+edi*4-0x75]
  430d5c:	lock mov ebx,0x81b5d85b
  430d62:	jo     0x430d3d
  430d64:	inc    edx
  430d65:	adc    eax,0xa2b7f1be
  430d6a:	xchg   edx,eax
  430d6b:	ins    DWORD PTR es:[edi],dx
  430d6c:	ss nop
  430d6e:	jmp    0x91164776
  430d73:	push   0x37
  430d75:	fidivr WORD PTR [ecx-0x75]
  430d78:	sbb    eax,0xa0f07215
  430d7d:	aad    0xe1
  430d7f:	add    al,0x54
  430d81:	xor    al,0x3f
  430d83:	ret    
  430d84:	or     cl,BYTE PTR [eax]
  430d86:	mov    ds:0x2f305504,al
  430d8b:	ret    
  430d8c:	cli    
  430d8d:	or     ebp,DWORD PTR [edx-0x13a8c2ef]
  430d93:	jbe    0x430d55
  430d95:	and    ebx,eax
  430d97:	ret    
  430d98:	loop   0x430e0e
  430d9a:	add    BYTE PTR [eax+0x1a],ah
  430d9d:	xchg   ecx,eax
  430d9e:	mov    DWORD PTR [esi-0x53788e42],esi
  430da4:	bound  edx,QWORD PTR [esi]
  430da6:	xor    eax,0xad
	...
  430dbb:	add    BYTE PTR [eax+0x298f004f],dh
  430dc1:	push   ebx
  430dc2:	or     al,0x87
  430dc4:	aas    
  430dc5:	push   esp
  430dc6:	hlt    
  430dc7:	(bad)  
  430dc8:	cmp    DWORD PTR [edx+0xa],edx
  430dcb:	xchg   DWORD PTR [edi],ebp
  430dcd:	push   esp
  430dce:	call   0x10953762
  430dd3:	fisub  WORD PTR [ebx+0x52]
  430dd6:	or     al,0x39
  430dd8:	add    ah,BYTE PTR [ebp-0x2c]
  430ddb:	cmp    cl,BYTE PTR [edx]
  430ddd:	ret    0x9e0a
  430de0:	cmp    ecx,DWORD PTR [edx+0x22bbb0ff]
  430de6:	inc    ebx
  430de7:	div    DWORD PTR [edi]
  430de9:	ror    DWORD PTR [ebx],cl
  430deb:	sbb    edx,ebp
  430ded:	fs in  al,dx
  430def:	sbb    ah,dl
  430df1:	ror    DWORD PTR [edx],0x76
  430df4:	adc    ecx,DWORD PTR [esi+0x3fb2ad7f]
  430dfa:	or     edx,DWORD PTR [esi+0x3]
  430dfd:	mov    bl,bh
  430dff:	sbb    al,0xd1
  430e01:	fidivr WORD PTR [ebp-0x793e55c7]
  430e07:	and    al,0xa9
  430e09:	pop    esi
  430e0a:	(bad)  
  430e0b:	in     eax,dx
  430e0c:	sub    eax,0x2d81d464
  430e11:	fs cli 
  430e13:	outs   dx,BYTE PTR ds:[esi]
  430e14:	cmp    eax,0x3551ec64
  430e19:	fs cli 
  430e1b:	pop    esi
  430e1c:	sub    eax,0x41e064
	...
  430e31:	add    BYTE PTR [eax],al
  430e33:	add    ch,bh
  430e35:	(bad)  
  430e36:	cli    
  430e37:	dec    esi
  430e38:	aas    
  430e39:	push   esp
  430e3a:	or     BYTE PTR [eax],al
  430e3c:	gs jp  0x430dc2
  430e3f:	mov    DWORD PTR [ebx-0x3c],0xde8ec951
  430e46:	cli    
  430e47:	push   edx
  430e48:	sub    ebp,ecx
  430e4a:	rol    BYTE PTR [esi],0xdd
  430e4d:	imul   esp,DWORD PTR [edx-0x7c9a5d99],0x4080682d
  430e57:	add    BYTE PTR [edi-0x62b977c6],cl
  430e5d:	es add bh,bl
  430e60:	dec    edi
  430e61:	xchg   ecx,eax
  430e62:	cmp    BYTE PTR ds:0x3b449c,bl
  430e68:	or     DWORD PTR [ecx-0x63b600b1],ebp
  430e6e:	sbb    eax,0xfacf42f0
  430e73:	je     0x430eef
  430e75:	imul   edx,DWORD PTR [ebx],0x84638266
  430e7b:	shr    BYTE PTR [eax+0x281d8994],0x46
  430e82:	cmp    eax,DWORD PTR [eax]
  430e84:	or     bl,ch
  430e86:	jmp    0x1357:0x1939fde
  430e8d:	lea    ebp,[edx+edx*1-0x5ea16c74]
  430e94:	dec    esi
  430e95:	dec    esi
  430e96:	cmp    eax,DWORD PTR [eax]
	...
  430eac:	mov    edx,0x44023e08
  430eb1:	add    ebx,DWORD PTR [edi-0x2]
  430eb4:	mov    ds:0x64043e0b,eax
  430eb9:	xchg   al,dh
  430ebb:	(bad)  
  430ebd:	xchg   ebx,eax
  430ebe:	jne    0x430ee8
  430ec0:	dec    ebx
  430ec1:	fs aad 0x38
  430ec4:	add    DWORD PTR [ecx-0x2a],esp
  430ec7:	inc    ebx
  430ec8:	mov    ch,0xe6
  430eca:	jmp    0xdbe2ebe0
  430ecf:	stc    
  430ed0:	jmp    0x135f:0xb074446a
  430ed7:	hlt    
  430ed8:	sti    
  430ed9:	sub    edi,edi
  430edb:	sar    DWORD PTR [eax-0x4ac0ad6a],0xe7
  430ee2:	retf   
  430ee3:	cli    
  430ee4:	test   al,0x4a
  430ee6:	push   cs
  430ee7:	inc    eax
  430ee8:	mov    ch,0xc
  430eea:	sahf   
  430eeb:	add    cl,BYTE PTR [eax+0x3c61ff29]
  430ef1:	sub    al,0xfa
  430ef3:	out    0x54,eax
  430ef5:	adc    eax,0x2c2cfb75
  430efa:	cld    
  430efb:	cli    
  430efc:	test   al,0x52
  430efe:	cmovo  esi,DWORD PTR [ebp+0x2c61d355]
  430f05:	mov    ah,0x9
  430f07:	push   edi
  430f08:	jbe    0x430ea5
  430f0a:	mov    esp,ebp
  430f0c:	shl    BYTE PTR ss:[esi-0x7f],cl
	...
  430f24:	pop    ecx
  430f25:	cmp    al,BYTE PTR [ecx]
  430f27:	add    BYTE PTR [ebp+0x5a52ca79],dh
  430f2d:	mov    ebx,0xe6f510da
  430f32:	das    
  430f33:	xlat   BYTE PTR ds:[ebx]
  430f34:	cmp    al,0xaa
  430f36:	and    BYTE PTR [esi+edi*2],dh
  430f39:	sub    edx,ebp
  430f3b:	add    al,BYTE PTR [esi-0x48c899da]
  430f41:	out    0xfe,al
  430f43:	addr16 movntq (bad),mm7
  430f45:	out    0xfe,eax
  430f47:	dec    DWORD PTR [edi-0x32ca8c22]
  430f4d:	cld    
  430f4e:	mov    edi,0x20b1fbff
  430f53:	and    BYTE PTR [edi-0x4afc1671],dh
  430f59:	fdivr  st(3),st
  430f5b:	out    0xa8,eax
  430f5d:	dec    edi
  430f5e:	jmp    0x4edafceb
  430f63:	out    dx,eax
  430f64:	add    cl,BYTE PTR [edx]
  430f66:	ins    DWORD PTR es:[edi],dx
  430f67:	pop    ds
  430f68:	inc    ebp
  430f69:	(bad)
  430f6d:	inc    eax
  430f6e:	xchg   esi,eax
  430f6f:	jmp    0x430f07
  430f71:	outs   dx,DWORD PTR ds:[esi]
  430f72:	jmp    0xea18897a
  430f77:	add    ch,BYTE PTR [ebx+edi*1]
  430f7a:	lds    esp,FWORD PTR [edi]
  430f7c:	mov    esi,0xf510bd81
  430f81:	(bad)  
  430f82:	fs inc ebx
  430f84:	and    BYTE PTR [esi+0x74],bh
  430f87:	jg     0x430f89
	...
  430f99:	add    BYTE PTR [eax],al
  430f9b:	add    cl,bl
  430f9d:	(bad)  
  430f9e:	call   0xf282c4a6
  430fa3:	or     eax,0x3a97f29
  430fa8:	cmp    al,0x54
  430faa:	or     eax,0x6f980d0c
  430faf:	les    edi,FWORD PTR [edx+0xc]
  430fb2:	sub    eax,0xca3fd328
  430fb7:	sbb    DWORD PTR [ecx+0x7e],ebx
  430fba:	sub    DWORD PTR [eax+esi*1],eax
  430fbd:	fs add eax,0xe8fc22bc
  430fc3:	add    esi,DWORD PTR [ebp+0x4fde1be7]
  430fc9:	fld    TBYTE PTR [ebp+0x4a]
  430fcc:	ja     0x431022
  430fce:	lds    esp,FWORD PTR [edi]
  430fd0:	mov    ah,0xd2
  430fd2:	sub    al,0x28
  430fd4:	(bad)  [esi+0x8b503e9]
  430fda:	sub    eax,0x1d08d128
  430fdf:	sub    ch,ah
  430fe1:	pop    es
  430fe2:	add    BYTE PTR ds:0xd8986dd,dl
  430fe8:	fnstsw WORD PTR [edi-0x79]
  430feb:	mov    ch,0xda
  430fed:	jg     0x43101e
  430fef:	sub    ecx,esi
  430ff1:	leave  
  430ff2:	fild   QWORD PTR [ebp+edi*8-0x52]
  430ff6:	xor    al,0xde
  430ff8:	xor    ch,BYTE PTR [ecx+0x1]
  430ffb:	jmp    0x58722b6
	...
  431014:	mov    ebp,0x3be842d5
  431019:	push   esp
  43101a:	and    al,0xd5
  43101c:	mov    al,ds:0x40ee340c
  431021:	push   ebx
  431022:	and    al,0xee
  431024:	lea    ecx,ds:[ebx]
  431027:	pop    edi
  431028:	stc    
  431029:	ins    DWORD PTR es:[edi],dx
  43102a:	jg     0x431055
  43102c:	jo     0x43109e
  43102e:	mov    DWORD PTR [ebp-0x5a728426],ebp
  431034:	sar    BYTE PTR [ebx+0x50],cl
  431037:	das    
  431038:	jge    0x430fe8
  43103a:	adc    ecx,ebp
  43103c:	pop    es
  43103d:	test   DWORD PTR [eax-0x8],esp
  431040:	jbe    0x43101c
  431042:	inc    edx
  431043:	xor    DWORD PTR [esi-0x491641ed],esi
  431049:	(bad)
  43104d:	and    BYTE PTR [eax],al
  43104f:	jmp    0x654e580a
  431054:	adc    ecx,DWORD PTR [edi-0x7af11700]
  43105a:	test   BYTE PTR [esi+esi*4-0x71],dl
  43105e:	add    BYTE PTR [ecx],dh
  431060:	mov    dh,0x14
  431062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431063:	jmp    0x2e05a01e
  431068:	fisttp QWORD PTR [ebp+eax*1+0x43cdb159]
  43106f:	add    al,dh
  431071:	pop    DWORD PTR [eax]
  431073:	test   BYTE PTR [ebp+ecx*4-0x7c],cl
  431077:	out    0x0,al
	...
  431089:	add    BYTE PTR [eax],al
  43108b:	add    BYTE PTR [esi+ecx*4],bl
  43108e:	add    BYTE PTR [eax+0x11],ch
  431091:	xchg   ebx,eax
  431092:	add    BYTE PTR [eax],al
  431094:	mov    DWORD PTR [edx],edx
  431096:	and    al,0x94
  431098:	or     al,0x8e
  43109a:	add    BYTE PTR [eax+0x2f],dl
  43109d:	ror    DWORD PTR [ecx+0x53],0x2f
  4310a1:	cmove  esp,DWORD PTR [esp+esi*4]
  4310a5:	ret    
  4310a6:	cmc    
  4310a7:	adc    eax,0x408358
  4310ac:	popa   
  4310ad:	dec    esi
  4310ae:	pop    es
  4310af:	test   BYTE PTR [edi-0x72],dl
  4310b2:	add    BYTE PTR [eax],al
  4310b4:	fisttp WORD PTR [ebp+0x5e]
  4310b7:	mov    DWORD PTR [eax-0x4e],edx
  4310ba:	cwde   
  4310bb:	add    bl,BYTE PTR [ebp+ecx*4-0x28f7b73]
  4310c2:	(bad)  
  4310c3:	dec    DWORD PTR [ebp+edi*4+0x78a415f5]
  4310ca:	inc    eax
  4310cb:	add    BYTE PTR ds:0x4e301ec9,dl
  4310d1:	dec    edx
  4310d2:	lea    eax,[eax+esi*4-0x59]
  4310d6:	call   0xf7a20784
  4310db:	test   DWORD PTR [eax+ebx*8],ebx
  4310de:	pop    eax
  4310df:	push   eax
  4310e0:	or     DWORD PTR [eax],ecx
  4310e2:	and    al,0x94
  4310e4:	dec    esp
  4310e5:	lea    eax,[eax]
  4310e7:	push   eax
  4310e8:	sbb    eax,DWORD PTR [ecx-0x6c63ee54]
  4310ee:	test   eax,eax
	...
  431104:	add    esi,0x9da0db7e
  43110a:	cmp    bl,0x4d
  43110d:	loope  0x43113b
  43110f:	lea    esi,[ebp-0x49c3915b]
  431115:	cmp    DWORD PTR [ecx],0xca79c2
  43111b:	adc    BYTE PTR [esi],cl
  43111d:	pop    ss
  43111e:	dec    ecx
  43111f:	inc    esp
  431120:	fpatan 
  431122:	add    ah,bh
  431124:	mov    ds:0xb023c830,eax
  431129:	in     eax,0x5b
  43112b:	or     esi,ebx
  43112d:	xor    ah,BYTE PTR [ebx]
  43112f:	or     eax,0xfad14fb7
  431134:	jmp    0xfde3:0x99444649
  43113b:	sub    eax,0xfad33ff5
  431140:	shl    BYTE PTR [ecx-0x476ebbba],cl
  431146:	cs out 0xb8,eax
  431149:	test   al,0xc8
  43114b:	and    ebp,DWORD PTR [ebx-0x61408f3a]
  431151:	pop    ebx
  431152:	xor    eax,0x233238d7
  431157:	inc    eax
  431158:	add    eax,0xd923c864
  43115d:	not    bl
  43115f:	mov    ecx,?
  431161:	retf   0x5016
  431164:	mov    al,bl
  431166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431167:	adc    DWORD PTR [eax],eax
	...
  431179:	add    BYTE PTR [eax],al
  43117b:	add    ch,dh
  43117d:	out    0x81,al
  43117f:	rol    BYTE PTR [ecx],0xdb
  431182:	jnp    0x4311c8
  431184:	cdq    
  431185:	jle    0x4311fe
  431187:	inc    edx
  431188:	mov    bh,0x6d
  43118a:	ret    
  43118b:	and    esp,DWORD PTR [ecx+0x2e01c95f]
  431191:	mov    dl,0x28
  431193:	inc    eax
  431194:	cmp    al,0xa8
  431196:	cli    
  431197:	xchg   cl,dh
  431199:	xchg   edx,eax
  43119a:	enter  0xfb88,0x8f
  43119e:	repz jge 0x431192
  4311a1:	mov    bl,0xeb
  4311a3:	std    
  4311a4:	jbe    0x431159
  4311a6:	in     al,0x7c
  4311a8:	jns    0x43115d
  4311aa:	stc    
  4311ab:	jnp    0x431224
  4311ad:	mov    es,eax
  4311af:	mov    edi,0x6f477d6
  4311b4:	ror    DWORD PTR [edi],0x61
  4311b7:	leave  
  4311b8:	mov    ch,0xd9
  4311ba:	and    al,0x28
  4311bc:	scas   al,BYTE PTR es:[edi]
  4311bd:	fsubr  DWORD PTR [edi+eiz*1+0x27dd0fa5]
  4311c4:	mov    esi,0x6485e275
  4311c9:	(bad)  [ecx+0x70]
  4311cc:	xor    eax,0xb5280d5b
  4311d1:	add    al,0xa4
  4311d3:	sti    
  4311d4:	cmp    ecx,DWORD PTR [ebx+0xd]
  4311d7:	sbb    BYTE PTR [edi+eax*4],bh
  4311da:	mov    ah,0xfa
  4311dc:	mov    edi,0x1fcd62
	...
  4311f1:	add    BYTE PTR [eax],al
  4311f3:	add    ch,cl
  4311f5:	arpl   WORD PTR [esi+0x71],sp
  4311f8:	scas   al,BYTE PTR es:[edi]
  4311f9:	or     ebp,DWORD PTR [edx]
  4311fb:	ror    BYTE PTR [ebx+edi*1],1
  4311fe:	pop    esi
  4311ff:	data16 add dl,dl
  431202:	in     al,dx
  431203:	add    eax,DWORD PTR [eax]
  431205:	or     ecx,DWORD PTR ds:0x65d89984
  43120b:	pop    edi
  43120c:	leave  
  43120d:	inc    edx
  43120e:	xchg   ebx,eax
  43120f:	fcomp  DWORD PTR [eax]
  431211:	mov    BYTE PTR [esi],dl
  431213:	dec    ebx
  431214:	fisttp WORD PTR [edx]
  431216:	mov    bl,0x81
  431218:	stc    
  431219:	stos   DWORD PTR es:[edi],eax
  43121a:	cmc    
  43121b:	jl     0x431226
  43121d:	lods   al,BYTE PTR ds:[esi]
  43121e:	in     eax,dx
  43121f:	jl     0x431222
  431221:	lods   al,BYTE PTR ds:[esi]
  431222:	or     DWORD PTR [ebp-0x7],edi
  431225:	stos   DWORD PTR es:[edi],eax
  431226:	add    eax,0xabf947
  43122b:	add    DWORD PTR [ecx-0x29],esi
  43122e:	cli    
  43122f:	jmp    0xa79a0a12
  431234:	retf   0x4c0e
  431237:	(bad)
  43123a:	rcr    BYTE PTR ds:0xc5440e2b,0xd6
  431241:	(bad)  
  431242:	mov    edi,0x20b31d70
  431247:	ret    0x5c77
  43124a:	or     eax,0x7f7b6918
  43124f:	outs   dx,DWORD PTR ds:[esi]
  431250:	xchg   edx,eax
  431251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431252:	rcl    BYTE PTR [eax-0x64],0xd5
  431256:	cli    
  431257:	jmp    0x43125c
	...
  43126c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43126d:	iret   
  43126e:	mov    ebp,ss
  431270:	xchg   edx,eax
  431271:	jl     0x43121a
  431273:	(bad)  
  431274:	aas    
  431275:	cs ret 0x92ad
  431279:	jnp    0x43127c
  43127b:	push   ecx
  43127c:	xchg   DWORD PTR [esi-0x20b1c905],edx
  431282:	mov    BYTE PTR [ebp+0x1a377f9a],dh
  431288:	mov    edx,0xb6e81b12
  43128d:	pop    DWORD PTR [edi+0x40806af4]
  431293:	jmp    0x6a8364b7
  431298:	or     DWORD PTR [eax+0xb],edi
  43129b:	or     dl,BYTE PTR gs:[eax+0x56c5e900]
  4312a2:	add    cl,ch
  4312a4:	mov    dh,0x8a
  4312a6:	test   ch,dl
  4312a8:	mov    dh,0x8f
  4312aa:	add    BYTE PTR [edx+0x60],ch
  4312ad:	push   edx
  4312ae:	add    esi,esp
  4312b0:	cmp    eax,0xb6e8ffb5
  4312b5:	out    0xfc,eax
  4312b7:	add    bh,ch
  4312b9:	idiv   DWORD PTR gs:[eax+ebx*2]
  4312bd:	loopne 0x4312c6
  4312bf:	neg    DWORD PTR [edx+0x4c0180a3]
  4312c5:	xchg   edx,eax
  4312c6:	jecxz  0x4312d2
  4312c8:	iret   
  4312c9:	in     al,0xfe
  4312cb:	dec    ecx
  4312cd:	fnstcw WORD PTR [ecx+0x7e]
	...
  4312e4:	aam    0x8b
  4312e6:	pop    es
  4312e7:	test   BYTE PTR [edx+edx*4+0x0],cl
  4312eb:	add    BYTE PTR [edi+0x52],bl
  4312ee:	bound  eax,QWORD PTR [esi]
  4312f0:	mov    edx,0x4c244454
  4312f5:	ret    
  4312f6:	mov    edi,DWORD PTR [eax+edi*8+0x73]
  4312fa:	jmp    0x4312a7
  4312fc:	es pop ecx
  4312fe:	jbe    0x431310
  431300:	xchg   DWORD PTR [ebp+0x6d04781],edi
  431306:	shl    BYTE PTR [ecx+eax*2+0x59],0x47
  43130b:	adc    BYTE PTR [edi+0x63],cl
  43130e:	adc    BYTE PTR [ebp-0xe],dh
  431311:	jmp    0x43138c
  431313:	cmp    dh,bl
  431315:	(bad)  
  431316:	adc    cl,BYTE PTR [edx-0x1ce51e0]
  43131c:	or     BYTE PTR [esi-0x281a7bcf],ch
  431322:	sub    DWORD PTR [ebx+0x4628cdc],eax
  431328:	pop    esp
  431329:	adc    BYTE PTR [esp+0x77],al
  43132d:	cmp    ah,BYTE PTR [ecx]
  43132f:	xor    DWORD PTR [ebp+0x3a227584],0x12
  431336:	cmp    BYTE PTR [edi],dl
  431338:	or     DWORD PTR [ebp-0x5e57b37e],eax
  43133e:	test   BYTE PTR [eax+edi*4-0x5f],0x84
  431343:	leave  
  431344:	mov    ch,0x33
  431346:	adc    al,0x7f
	...
  43135c:	jne    0x43134d
  43135e:	fmul   DWORD PTR [edi]
  431360:	add    eax,0x9223c85c
  431365:	jbe    0x4313d4
  431367:	iret   
  431368:	and    eax,DWORD PTR ss:[eax]
  43136b:	xchg   edx,eax
  43136d:	out    dx,al
  43136e:	cmp    ebx,0x86e243c0
  431374:	jnp    0x431364
  431376:	in     al,0x88
  431378:	jno    0x43133c
  43137a:	sbb    al,BYTE PTR [edi-0x4585985]
  431380:	mov    ch,0xe6
  431382:	(bad)  
  431383:	ss std 
  431385:	lock xor eax,0x36c8e4f2
  43138b:	xchg   DWORD PTR [ebx+0x22],edi
  43138e:	ja     0x4313dc
  431390:	sar    DWORD PTR [edi+eiz*4-0x5],1
  431394:	repnz out 0xfe,al
  431397:	popa   
  431398:	cmp    al,0x2b
  43139a:	and    ebp,DWORD PTR [ebx]
  43139c:	sahf   
  43139d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43139e:	cmc    
  43139f:	add    al,0x53
  4313a1:	pop    edi
  4313a2:	enter  0xa223,0xc0
  4313a6:	pop    es
  4313a7:	lea    esi,[ecx-0x7e]
  4313aa:	xor    al,0x50
  4313ac:	ret    0x231a
  4313af:	sub    BYTE PTR [eax],ch
  4313b1:	sub    esp,DWORD PTR [ebx]
  4313b3:	sub    BYTE PTR [ebp-0x55063729],bl
  4313b9:	arpl   WORD PTR [esp+esi*2-0x47],ax
  4313bd:	test   al,cl
  4313bf:	and    eax,DWORD PTR [eax]
	...
  4313d1:	add    BYTE PTR [eax],al
  4313d3:	add    BYTE PTR [ecx+eiz*2-0x23c7f80e],bh
  4313da:	sti    
  4313db:	test   BYTE PTR [edi-0x7d049424],al
  4313e1:	pop    edx
  4313e2:	and    edx,DWORD PTR [eax]
  4313e4:	lea    ecx,[edi-0x2b907d4d]
  4313ea:	adc    eax,0xc18ed349
  4313ef:	or     ah,dh
  4313f1:	aam    0xc9
  4313f3:	js     0x43145a
  4313f5:	cwde   
  4313f6:	mov    dh,0xf7
  4313f8:	std    
  4313f9:	push   es
  4313fa:	sbb    eax,0xd396a528
  4313ff:	in     eax,dx
  431400:	mov    eax,DWORD PTR [edx]
  431402:	or     ecx,DWORD PTR [eax]
  431404:	mov    edx,0xa813ed58
  431409:	scas   al,BYTE PTR es:[edi]
  43140a:	outs   dx,BYTE PTR ds:[esi]
  43140b:	add    BYTE PTR [eax],dh
  43140d:	iret   
  43140e:	sbb    al,0x9
  431410:	fwait
  431411:	mov    esp,DWORD PTR [esi+0x43]
  431414:	mov    cl,0x3f
  431416:	xor    bh,0xd6
  431419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43141a:	ins    BYTE PTR es:[edi],dx
  43141b:	out    dx,eax
  43141c:	(bad)  
  43141d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43141e:	sub    DWORD PTR [edi-0x79962aa4],0x6ded5af5
  431428:	jns    0x4313d5
  43142a:	jmp    FWORD PTR [ecx+esi*2-0x55]
  43142e:	stc    
  43142f:	js     0x4314aa
  431431:	stos   DWORD PTR es:[edi],eax
  431432:	stc    
  431433:	sbb    BYTE PTR [edx],0x87
  431436:	inc    BYTE PTR ds:0x0
	...
  43144c:	push   ecx
  43144d:	leave  
  43144e:	cmc    
  43144f:	dec    eax
  431450:	addr16 out 0xba,eax
  431453:	cmp    BYTE PTR [edi-0x32fe412d],0xc9
  43145a:	test   al,0x6c
  43145c:	scas   al,BYTE PTR es:[edi]
  43145d:	pop    es
  43145e:	sbb    DWORD PTR [eax],ebp
  431460:	call   0xf9ac:0x17aa05c
  431467:	sub    bh,BYTE PTR [edi-0x108141af]
  43146d:	mov    esp,DWORD PTR [esi-0x18]
  431470:	mov    dh,0x73
  431472:	add    BYTE PTR [edi+edx*8+0xa],bh
  431476:	jmp    DWORD PTR [ebx-0xa]
  431479:	pop    ebx
  43147a:	pop    ss
  43147b:	push   ebx
  43147c:	leave  
  43147d:	push   edx
  43147e:	shl    cl,0x86
  431481:	(bad)  
  431482:	jae    0x431491
  431484:	rol    DWORD PTR [esp+edi*2],0x5
  431488:	mov    ecx,0xdf2061e7
  43148d:	(bad)  
  43148e:	test   BYTE PTR [ecx+0x2dfa8f45],ch
  431494:	xchg   ebp,eax
  431495:	jp     0x431492
  431497:	and    eax,0x2d877f95
  43149c:	aad    0x7f
  43149e:	jg     0x43144a
  4314a0:	sub    DWORD PTR [edx-0x5d1ceafe],ebx
  4314a6:	xlat   BYTE PTR ds:[ebx]
  4314a7:	aaa    
  4314a8:	jns    0x431459
  4314aa:	add    DWORD PTR [edi+0x6c08699e],0x0
	...
  4314c4:	cmc    
  4314c5:	scas   al,BYTE PTR es:[edi]
  4314c6:	sbb    BYTE PTR [ecx],bl
  4314c8:	jmp    0x5c08:0x9ec57c03
  4314cf:	or     eax,0xc02de798
  4314d4:	pop    esp
  4314d5:	(bad)  
  4314d6:	xchg   BYTE PTR [ebp-0x6378503e],ch
  4314dc:	fiadd  WORD PTR [ecx-0x77]
  4314df:	call   0x3fc2e852
  4314e4:	pop    esi
  4314e5:	or     al,BYTE PTR [ebp+ecx*1-0x53]
  4314e9:	ss pop edx
  4314eb:	xchg   edx,eax
  4314ec:	cmp    ebp,esp
  4314ee:	pop    esp
  4314ef:	sub    esi,DWORD PTR [ebp+0xd72558f]
  4314f5:	push   ebx
  4314f6:	in     al,dx
  4314f7:	cdq    
  4314f8:	mov    eax,DWORD PTR [eax+0x66]
  4314fb:	stc    
  4314fc:	js     0x4314d0
  4314fe:	push   ecx
  4314ff:	add    BYTE PTR [ebx+0x5c165080],bh
  431505:	mov    ?,WORD PTR [ebx-0x3c]
  431508:	cwde   
  431509:	push   edi
  43150a:	inc    ebp
  43150b:	test   al,0x1c
  43150d:	push   eax
  43150e:	inc    DWORD PTR [eax]
  431510:	and    ecx,edi
  431512:	mov    ds:0x8e5c40,al
  431517:	jmp    DWORD PTR [ecx+0x1e]
  43151a:	adc    DWORD PTR [eax+0x4c],eax
  43151d:	xadd   BYTE PTR [edi+edi*4+0x52],dh
  431522:	inc    ebp
  431523:	mov    ah,0xc7
  431525:	pop    ss
  431526:	stos   DWORD PTR es:[edi],eax
  431527:	sldt   WORD PTR [eax]
	...
  43153a:	add    BYTE PTR [eax],al
  43153c:	cmp    BYTE PTR [ebx+0x14],cl
  43153f:	shl    DWORD PTR [edx+eax*4-0x7b],0xc0
  431544:	rcl    DWORD PTR [eax-0x1fb40685],1
  43154a:	std    
  43154b:	xor    dl,BYTE PTR [ebp-0x55]
  43154e:	dec    ebp
  43154f:	hlt    
  431550:	aaa    
  431551:	mov    DWORD PTR [ecx+0x47539045],ecx
  431557:	add    DWORD PTR [ecx-0x74af3d31],ebx
  43155d:	jg     0x4314f3
  43155f:	adc    cl,ah
  431561:	mov    edi,DWORD PTR [eax+0x8e5bff]
  431567:	cmp    edx,DWORD PTR [ecx]
  431569:	dec    edx
  43156a:	lea    esi,[ebp+0x5c]
  43156d:	add    eax,0x45a99cf7
  431573:	fadd   QWORD PTR [edx]
  431575:	push   ebx
  431576:	aas    
  431577:	add    eax,0x734
  43157c:	int3   
  43157d:	xor    eax,0x658b6587
  431582:	lea    esi,[ebp-0x34]
  431585:	and    al,0x96
  431587:	add    BYTE PTR [ebp+ecx*4+0x3b582e8],bl
  43158e:	data16 sti 
  431590:	cs test eax,0x36f88ccf
  431596:	iret   
  431597:	mov    bh,0xb7
  431599:	out    0xfe,al
  43159b:	jg     0x43152a
  43159d:	and    esp,edx
  43159f:	inc    DWORD PTR [eax]
	...
  4315b1:	add    BYTE PTR [eax],al
  4315b3:	add    BYTE PTR [edx+0x6e],bh
  4315b6:	xor    BYTE PTR [eax],dl
  4315b8:	enter  0x4a6,0x66
  4315bc:	add    eax,0x6202c160
  4315c1:	adc    edx,ebx
  4315c3:	dec    ecx
  4315c4:	sub    eax,0x6bfafdaa
  4315c9:	cmp    eax,0x126d86b9
  4315ce:	dec    esi
  4315cf:	(bad)  
  4315d0:	out    0x19,al
  4315d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4315d3:	std    
  4315d4:	cmp    ah,bh
  4315d6:	(bad)  
  4315d7:	ss add al,0x72
  4315da:	stc    
  4315db:	mov    WORD PTR [ebp-0x552ed30f],es
  4315e1:	out    dx,al
  4315e2:	loopne 0x43156c
  4315e4:	jp     0x431598
  4315e6:	loopne 0x431570
  4315e8:	jp     0x4315c2
  4315ea:	enter  0xfc56,0x25
  4315ee:	retf   
  4315ef:	xchg   BYTE PTR [ecx],dl
  4315f1:	pushaw 
  4315f3:	clc    
  4315f4:	xor    al,0x53
  4315f6:	xor    BYTE PTR [ecx],al
  4315f8:	mov    ch,0xe6
  4315fa:	rcl    DWORD PTR [ecx-0x7e],cl
  4315fd:	jne    0x431643
  4315ff:	das    
  431600:	(bad)  
  431601:	outs   dx,DWORD PTR ds:[esi]
  431602:	enter  0x6d23,0x33
  431606:	call   0x9d40972e
  43160b:	das    
  43160c:	cmc    
  43160d:	pop    edi
  43160e:	enter  0x6923,0x6b
  431612:	call   0x9d50733a
  431617:	mov    DWORD PTR [eax],eax
	...
  431629:	add    BYTE PTR [eax],al
  43162b:	add    BYTE PTR [ecx],dl
  43162d:	nop
  43162e:	int    0xe3
  431630:	fcmovne st,st(7)
  431632:	imul   ebp,eax,0xffffffd6
  431635:	imul   edi,DWORD PTR [esi],0x77
  431638:	and    DWORD PTR [ecx+edx*8-0x46540e86],ebp
  43163f:	pushf  
  431640:	popf   
  431641:	adc    eax,0x27e6a3e
  431646:	cmp    eax,0xe98f3120
  43164b:	add    ebp,DWORD PTR ds:0xb503e8f0
  431651:	enter  0x2024,0x9d
  431655:	mov    edi,DWORD PTR [ecx-0x3d]
  431658:	pop    edx
  431659:	pop    es
  43165a:	sub    eax,0x2506f520
  43165f:	and    cl,dh
  431661:	out    0x93,eax
  431663:	fistp  QWORD PTR [edi]
  431665:	shl    BYTE PTR [ebx-0x51],1
  431668:	xchg   ecx,eax
  431669:	and    ebp,ecx
  43166b:	add    esi,DWORD PTR [ebp-0x4afcb6e9]
  431671:	(bad)  
  431672:	xchg   ecx,eax
  431673:	aas    
  431674:	cdq    
  431675:	rcl    BYTE PTR [ecx+0x5c3ef77c],1
  43167b:	mov    edi,0x5c1993d6
  431680:	pop    eax
  431681:	or     al,0xe9
  431683:	add    edi,DWORD PTR [ecx]
  431685:	iret   
  431686:	sti    
  431687:	or     eax,0x7fc50b28
  43168c:	mov    ch,0x8f
  43168e:	jmp    0x431766
	...
  4316a3:	add    BYTE PTR [ecx],bh
  4316a5:	dec    ebx
  4316a6:	add    eax,0x79e78528
  4316ab:	test   BYTE PTR [ebp-0x41bc9a71],dh
  4316b1:	or     ebp,DWORD PTR [ecx+0x6e8fb502]
  4316b7:	es ins DWORD PTR es:[edi],dx
  4316b9:	jl     0x4316bb
  4316bb:	test   eax,0x54402b6
  4316c0:	jno    0x4316da
  4316c2:	inc    esp
  4316c3:	int    0xd6
  4316c5:	sbb    al,0x44
  4316c7:	lds    esi,FWORD PTR [edx+0x18]
  4316ca:	inc    esp
  4316cb:	int    0xba
  4316cd:	sbb    al,0x44
  4316cf:	lds    edx,FWORD PTR [esi-0x5132bbe8]
  4316d5:	sbb    al,0x44
  4316d7:	(bad)
  4316da:	inc    esp
  4316db:	int    0xaa
  4316dd:	rol    BYTE PTR [ebx-0x3b],cl
  4316e0:	mov    edx,0xb1298be3
  4316e5:	rol    BYTE PTR [ebx+0x5],cl
  4316e8:	mov    ebp,0xb6e9face
  4316ed:	push   ss
  4316ee:	inc    esp
  4316ef:	add    eax,0xe98731bd
  4316f4:	int    0x3
  4316f6:	and    al,0xa1
  4316f8:	mov    ecx,0x61c1008f
  4316fd:	xor    edi,ebx
  4316ff:	scas   al,BYTE PTR es:[edi]
  431700:	loopne 0x43176d
  431702:	and    al,0x2d
  431704:	and    al,0x9e
  431706:	push   0x9d
	...
  43171b:	add    BYTE PTR [edx+0x6a96004f],ch
  431721:	sbb    BYTE PTR [ebp+eax*8+0x52],al
  431725:	xchg   BYTE PTR [edi-0x2a750a],bh
  43172b:	call   0xcdc733e6
  431730:	outs   dx,BYTE PTR ds:[esi]
  431731:	pop    DWORD PTR [eax]
  431733:	jmp    0xd9f2f3e
  431738:	(bad)
  43173b:	jb     0x4317a6
  43173d:	xchg   bh,ch
  43173f:	fnsave [ebx-0x6fabbea]
  431745:	adc    eax,0xdf410008
  43174a:	push   ds
  43174b:	adc    BYTE PTR [esi],bl
  43174d:	loop   0x4317b3
  43174f:	xor    BYTE PTR [edx],bl
  431751:	ss je  0x431778
  431754:	dec    eax
  431755:	loop   0x43174c
  431757:	push   ecx
  431758:	ins    BYTE PTR es:[edi],dx
  431759:	xadd   BYTE PTR [eax+ebx*4+0x4b],dh
  43175e:	pop    esp
  43175f:	and    al,0x9c
  431761:	fdivr  st(5),st
  431763:	adc    eax,0x40a158
  431768:	pop    es
  431769:	rcr    BYTE PTR [esi],1
  43176b:	adc    BYTE PTR ds:0x47181ed0,al
  431771:	push   ecx
  431772:	pop    es
  431773:	test   ah,bl
  431775:	xchg   ebx,eax
  431776:	add    BYTE PTR [eax],al
  431778:	out    0xca,eax
  43177a:	mov    edx,DWORD PTR [eax+edi*4-0x19]
  43177e:	dec    esp
  43177f:	lea    eax,[eax]
	...
  431791:	add    BYTE PTR [eax],al
  431793:	add    BYTE PTR [eax-0x9adc791],bl
  431799:	xchg   esp,eax
  43179a:	push   0x93bb10
  43179f:	push   eax
  4317a0:	add    esp,ebx
  4317a2:	or     al,BYTE PTR [ebp-0x7cae40f4]
  4317a8:	loopne 0x431819
  4317aa:	ins    BYTE PTR es:[edi],dx
  4317ab:	add    ecx,ecx
  4317ad:	fild   WORD PTR [ecx-0x7c8207bc]
  4317b3:	or     bh,bl
  4317b5:	loop   0x431742
  4317b7:	push   esp
  4317b8:	clc    
  4317b9:	mov    ecx,0x57a4534c
  4317be:	mov    WORD PTR [eax+0xc],es
  4317c1:	loop   0x4317b8
  4317c3:	push   ecx
  4317c4:	fmul   QWORD PTR [esi]
  4317c6:	shl    BYTE PTR [ebp+0x33],0xec
  4317ca:	jns    0x431848
  4317cc:	mov    eax,0xe07502c3
  4317d1:	dec    eax
  4317d2:	inc    esp
  4317d3:	and    al,0xb5
  4317d5:	loopne 0x4317fc
  4317d7:	mov    edi,0x38dcc449
  4317dc:	lods   eax,DWORD PTR ds:[esi]
  4317dd:	or     al,0xf2
  4317df:	dec    edi
  4317e0:	cs hlt 
  4317e2:	sbb    bl,BYTE PTR [eax]
  4317e4:	cs enter 0xc87d,0xb2
  4317e9:	dec    edi
  4317ea:	in     al,dx
  4317eb:	ins    BYTE PTR es:[edi],dx
  4317ec:	stos   DWORD PTR es:[edi],eax
  4317ed:	jbe    0x431867
  4317ef:	inc    esp
  4317f0:	fldenv [esi]
  4317f2:	iret   
  4317f3:	cli    
  4317f4:	shl    dh,0xd
  4317f7:	inc    eax
	...
  43180c:	mov    ch,0x31
  43180e:	mov    ebx,0xf741c123
  431813:	dec    edi
  431814:	sub    BYTE PTR [eax],0xf7
  431817:	xchg   cl,dh
  431819:	fiadd  DWORD PTR [esi]
  43181b:	xchg   DWORD PTR [ebp-0x42ae9dda],edi
  431821:	cmp    eax,eax
  431823:	and    eax,ecx
  431825:	mov    eax,0xca91447f
  43182a:	cli    
  43182b:	cli    
  43182c:	add    DWORD PTR [ebx+0xd300b18],edx
  431832:	(bad)  
  431833:	sti    
  431834:	inc    edx
  431835:	cmp    al,0xf0
  431837:	and    edi,DWORD PTR [ebp-0x32]
  43183a:	add    al,0x7e
  43183c:	mov    ch,0xb6
  43183e:	jno    0x4318b4
  431840:	rcl    esi,1
  431842:	push   esi
  431843:	pop    es
  431844:	pop    edi
  431845:	sub    eax,0xda798965
  43184a:	push   ss
  43184b:	xchg   ebx,esi
  43184d:	cmc    
  43184e:	mov    edi,0x78b6d523
  431853:	inc    eax
  431854:	mov    ch,0x1e
  431856:	out    dx,al
  431857:	fs cli 
  431859:	inc    ebp
  43185a:	add    al,0x69
  43185d:	or     bh,BYTE PTR [eax+0x44]
  431860:	xchg   ecx,eax
  431861:	(bad)  
  431862:	adc    DWORD PTR [ecx-0x53],edi
  431865:	sbb    dh,BYTE PTR [ebp-0x469e3ae1]
  43186b:	fs outs dx,DWORD PTR fs:[esi]
  43186e:	fs inc esp
	...
  431884:	inc    eax
  431885:	cwde   
  431886:	retf   
  431887:	add    BYTE PTR [ecx+0x73],0xd9
  43188b:	fs scas al,BYTE PTR es:[edi]
  43188d:	and    ebp,DWORD PTR [ecx]
  43188f:	pop    ecx
  431890:	mov    bl,0x7e
  431892:	sub    DWORD PTR [eax+0x3cf14375],eax
  431898:	stc    
  431899:	jae    0x431874
  43189b:	add    dh,BYTE PTR [ebp+0x976e98f]
  4318a1:	je     0x43186c
  4318a3:	pop    ebx
  4318a4:	mov    ds:0x3a650232,al
  4318a9:	pop    ebx
  4318aa:	(bad)
  4318ad:	pop    eax
  4318ae:	int    0xc7
  4318b0:	cmp    edx,DWORD PTR [ebx-0x3b]
  4318b3:	sar    DWORD PTR [ecx],cl
  4318b5:	imul   ebp,eax,0xfffffffb
  4318b8:	sub    eax,0x300c056b
  4318bd:	call   0xcce5191d
  4318c2:	mov    ebp,0xd0d033d7
  4318c7:	jns    0x431889
  4318c9:	int    0xb9
  4318cb:	js     0x43190a
  4318cd:	adc    dh,BYTE PTR [edx+0x25188fef]
  4318d3:	and    ch,ah
  4318d5:	sbb    ah,bl
  4318d7:	mov    bh,0xc4
  4318d9:	dec    edi
  4318da:	jmp    0xabd18f59
  4318df:	cld    
  4318e0:	mov    ch,0x19
  4318e2:	and    eax,0x2a176520
  4318e7:	inc    DWORD PTR [eax]
	...
  4318f9:	add    BYTE PTR [eax],al
  4318fb:	add    BYTE PTR [eax],bh
  4318fd:	push   ebx
  4318fe:	(bad)
  431901:	push   esp
  431902:	add    bh,ch
  431904:	ins    BYTE PTR es:[edi],dx
  431905:	push   ebx
  431906:	and    al,0x1
  431908:	imul   edx,DWORD PTR [eax+0x3],0x55010f6
  43190f:	mov    ecx,0xa5244351
  431914:	dec    ebx
  431915:	push   0xe151ba08
  43191a:	or     bh,BYTE PTR [edi+0x1]
  43191d:	xchg   ebx,eax
  43191e:	jmp    DWORD PTR [eax]
  431920:	sar    ebp,0x42
  431923:	out    dx,eax
  431924:	xchg   dh,al
  431926:	jae    0x43192d
  431928:	xchg   ebp,eax
  431929:	pop    edx
  43192a:	sti    
  43192b:	aas    
  43192c:	test   eax,0x86e64301
  431931:	xchg   esi,eax
  431932:	mov    dl,0xae
  431934:	nop
  431935:	(bad)  
  431936:	jae    0x4318fd
  431938:	xchg   edx,eax
  431939:	retf   0x99bd
  43193c:	sbb    esi,ebx
  43193e:	xchg   BYTE PTR [ebp+0x2d7f8b9a],bl
  431944:	rcr    BYTE PTR [esp+esi*2],cl
  431947:	lds    ebp,FWORD PTR [esi]
  431949:	mov    bl,0x42
  43194b:	push   ebp
  43194c:	xlat   BYTE PTR ds:[ebx]
  43194d:	(bad)  
  43194e:	mov    WORD PTR [ebp-0x73],ss
  431951:	arpl   ax,bp
  431953:	pop    ss
  431954:	inc    ebp
  431955:	leave  
  431956:	cli    
  431957:	pop    esp
  431958:	ins    DWORD PTR es:[edi],dx
  431959:	outs   dx,DWORD PTR ds:[esi]
  43195a:	pusha  
  43195b:	rcr    DWORD PTR [ebx+edi*1+0xbefa],1
	...
  431972:	add    BYTE PTR [eax],al
  431974:	sub    dl,BYTE PTR [ebp+0x8]
  431977:	pusha  
  431978:	xor    DWORD PTR [edx],edx
  43197a:	ret    
  43197b:	push   cs
  43197c:	mul    DWORD PTR [ecx-0x79]
  43197f:	mov    esp,?
  431981:	or     al,0x4
  431983:	jmp    0x6b2f2be5
  431988:	test   DWORD PTR [edi+0x52],ebp
  43198b:	cmp    cl,BYTE PTR ss:[ebp-0x311fff24]
  431992:	cli    
  431993:	xor    al,BYTE PTR [edx-0x23fb0a45]
  431999:	mov    fs,WORD PTR [edx-0x1]
  43199c:	ret    0x752e
  43199f:	or     BYTE PTR [esi],al
  4319a1:	xchg   esp,eax
  4319a2:	not    DWORD PTR ds:0x3ac74c
  4319a8:	push   ebp
  4319a9:	fdiv   st,st(6)
  4319ab:	and    DWORD PTR [esp+edx*4+0x74],0x23
  4319b0:	inc    edi
  4319b1:	fdiv   st,st(6)
  4319b3:	pop    edi
  4319b4:	sbb    bl,BYTE PTR [edx+edi*4+0x4]
  4319b8:	pushf  
  4319b9:	adc    DWORD PTR [ebp-0x1c],edi
  4319bc:	mov    fs,edx
  4319be:	out    dx,eax
  4319bf:	lea    edx,[ecx+0x2e]
  4319c2:	push   eax
  4319c3:	jmp    DWORD PTR [ecx-0x63bfec06]
  4319c9:	pop    ds
  4319ca:	inc    ebp
  4319cb:	loopne 0x431a19
  4319cd:	sub    eax,0xce608415
  4319d2:	cli    
  4319d3:	imul   ecx,DWORD PTR [ebp+0x565108],0x0
	...
  4319e9:	add    BYTE PTR [eax],al
  4319eb:	add    cl,bl
  4319ed:	fcomp  st(2)
  4319ef:	push   eax
  4319f0:	pop    ebx
  4319f1:	test   DWORD PTR [ebp-0x1c78fe40],eax
  4319f7:	mov    cl,0x7b
  4319f9:	loop   0x431a19
  4319fb:	add    al,0x6b
  4319fd:	(bad)  
  4319fe:	and    dl,BYTE PTR [ecx]
  431a00:	pushf  
  431a01:	xchg   ebx,eax
  431a02:	mul    DWORD PTR ds:0x3ac40c
  431a08:	sti    
  431a09:	loope  0x431a29
  431a0b:	add    al,0x76
  431a0d:	xchg   ebx,eax
  431a0e:	push   0xfabe1c00
  431a13:	(bad)  
  431a14:	and    DWORD PTR [esi+0x11],ecx
  431a17:	inc    eax
  431a18:	or     al,0x17
  431a1a:	shl    BYTE PTR [ebp+esi*4-0x53],0xae
  431a1f:	cli    
  431a20:	mov    al,ds:0xb53ff4f8
  431a25:	mov    BYTE PTR [edi+eiz*8],al
  431a28:	mov    bh,0x6
  431a2a:	aas    
  431a2b:	mov    esi,0x86b7b8b9
  431a30:	fldcw  WORD PTR [eax+ecx*8]
  431a33:	or     esi,DWORD PTR [esp+eiz*2]
  431a36:	pop    es
  431a37:	(bad)  
  431a38:	fidiv  DWORD PTR [edi+0x673e52b8]
  431a3e:	adc    bh,bl
  431a40:	xchg   BYTE PTR [edi+0x59],ch
  431a43:	add    BYTE PTR [ebp-0xa80dff4],ah
  431a49:	fwait
  431a4a:	mov    ah,0xfa
  431a4c:	sub    BYTE PTR [edi+0x858f],ch
	...
  431a62:	add    BYTE PTR [eax],al
  431a64:	lods   eax,DWORD PTR ds:[esi]
  431a65:	jl     0x431ac5
  431a67:	sti    
  431a68:	add    eax,0x9b4f749f
  431a6d:	stos   BYTE PTR es:[edi],al
  431a6e:	mov    al,al
  431a70:	or     esi,esi
  431a72:	mov    DWORD PTR [edx-0x4f],esi
  431a75:	fnstsw ax
  431a77:	ud2    
  431a79:	scas   al,BYTE PTR es:[edi]
  431a7a:	mov    DWORD PTR [edx-0x57],eax
  431a7d:	leave  
  431a7e:	adc    DWORD PTR [eax-0x2a8cbc0],edi
  431a84:	push   0xffffffba
  431a86:	gs jle 0x431a88
  431a89:	mov    dh,0xfe
  431a8b:	test   BYTE PTR [ebp+0x63],dh
  431a8e:	es inc ebx
  431a90:	mov    fs,WORD PTR [eax-0xc]
  431a93:	ins    DWORD PTR es:[edi],dx
  431a94:	push   eax
  431a95:	dec    ebp
  431a96:	sub    al,0x59
  431a98:	in     al,0xd1
  431a9a:	adc    cl,BYTE PTR [eax+ebx*2]
  431a9d:	jbe    0x431aa3
  431a9f:	sti    
  431aa0:	enter  0xf226,0x3f
  431aa4:	mov    ch,0x1
  431aa6:	cmp    al,0x17
  431aa8:	cmc    
  431aa9:	(bad)  
  431aaa:	fs popw ds
  431aad:	or     eax,0x696e06a9
  431ab2:	mov    al,ds:0xd68fbd46
  431ab7:	inc    ebx
  431ab8:	jne    0x431a6e
  431aba:	jnp    0x431b1d
  431abc:	xor    DWORD PTR [ebx-0xf],0x72977c8c
  431ac3:	fcom   DWORD PTR [esi+0x35e97]
	...
  431ad9:	add    BYTE PTR [eax],al
  431adb:	add    dh,bl
  431add:	pop    edi
  431ade:	icebp  
  431adf:	adc    BYTE PTR [edi],ah
  431ae1:	rcl    BYTE PTR [ecx+0x3c],1
  431ae4:	stos   BYTE PTR es:[edi],al
  431ae5:	iret   
  431ae6:	gs fs iret 
  431ae9:	or     al,0x29
  431aeb:	push   es
  431aec:	add    ebx,DWORD PTR [eax+0x737159e9]
  431af2:	in     eax,0x2
  431af4:	pop    es
  431af5:	adc    eax,0xcbb74938
  431afa:	call   0x92b9:0xeb3ca2c3
  431b01:	mov    ah,0x9d
  431b03:	popa   
  431b04:	mov    ss,WORD PTR [ebx+ebp*1]
  431b07:	ret    0x9348
  431b0a:	jmp    0x6e0156c8
  431b0f:	shl    BYTE PTR [esi+0x4157e2d0],cl
  431b15:	dec    edi
  431b16:	jmp    0xe38697a1
  431b1b:	mov    WORD PTR [ebp+esi*1+0x1ac560e8],?
  431b22:	sub    ecx,DWORD PTR [ebx*2-0x4afc1759]
  431b29:	shl    DWORD PTR [eax+ebp*1],0xad
  431b2d:	mov    gs,WORD PTR [edx+0x291a8909]
  431b33:	add    al,0xa9
  431b35:	xchg   ecx,eax
  431b36:	add    BYTE PTR [edi],bl
  431b38:	cdq    
  431b39:	add    esi,DWORD PTR [edi-0x51]
  431b3c:	xchg   ebp,eax
  431b3d:	adc    dl,al
  431b3f:	inc    edi
	...
  431b54:	jae    0x431ae9
  431b56:	add    BYTE PTR [edx+0x2],dh
  431b59:	ins    BYTE PTR es:[edi],dx
  431b5a:	add    al,0x3a
  431b5c:	dec    edi
  431b5d:	mov    al,0xf9
  431b5f:	mov    edi,0xa984c495
  431b64:	loop   0x431aef
  431b66:	sti    
  431b67:	cmc    
  431b68:	call   0xfac5:0xd79fe89b
  431b6f:	bound  ebx,QWORD PTR [esi-0x3e2228ee]
  431b75:	pop    eax
  431b76:	sti    
  431b77:	hlt    
  431b78:	cs cwde 
  431b7a:	inc    eax
  431b7b:	jmp    0x5c5367b9
  431b80:	mov    edx,0xb6e90412
  431b85:	(bad)  
  431b86:	lea    esi,[esi+0x30e85fc2]
  431b8c:	mov    cl,cl
  431b8e:	cli    
  431b8f:	idiv   BYTE PTR gs:[ebx]
  431b92:	or     esi,DWORD PTR [edx+0x6d]
  431b95:	xchg   edi,eax
  431b96:	xchg   edi,ebp
  431b98:	aas    
  431b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431b9a:	adc    DWORD PTR [esi],0xe8b0977d
  431ba0:	adc    DWORD PTR [eax+0x3e3b114f],ebx
  431ba6:	cli    
  431ba7:	dec    cl
  431ba9:	iret   
  431baa:	pop    ecx
  431bab:	xchg   edx,eax
  431bac:	lock mov eax,DWORD PTR [eax]
  431baf:	xor    esp,ecx
  431bb1:	lahf   
  431bb2:	ret    0xf695
  431bb5:	pop    esp
  431bb6:	xchg   ebp,ecx
	...
  431bcc:	lods   al,BYTE PTR ss:[esi]
  431bce:	imul   DWORD PTR [edx-0x3b]
  431bd1:	imul   ebp,DWORD PTR [edi],0xffffffa9
  431bd4:	push   es
  431bd5:	popa   
  431bd6:	xchg   DWORD PTR [eax],eax
  431bd8:	std    
  431bd9:	adc    al,0x44
  431bdb:	and    al,0x8
  431bdd:	adc    al,0x44
  431bdf:	and    al,0x4
  431be1:	adc    al,0x44
  431be3:	and    al,0xf0
  431be5:	adc    eax,DWORD PTR [esp+0x4]
  431be9:	sbb    bh,BYTE PTR [esi]
  431beb:	add    al,0xcb
  431bed:	adc    al,0x44
  431bef:	and    al,0x8
  431bf1:	mov    ebx,0x930c0bb2
  431bf6:	mov    eax,0x92db70
  431bfb:	(bad)  
  431bfc:	cwde   
  431bfd:	ja     0x431c0f
  431bff:	sbb    al,0x51
  431c01:	retf   
  431c02:	cli    
  431c03:	mov    al,ch
  431c05:	outs   dx,BYTE PTR ds:[esi]
  431c06:	adc    al,0xe8
  431c08:	(bad)  
  431c09:	cld    
  431c0a:	clc    
  431c0b:	inc    DWORD PTR [edi+0x70]
  431c0e:	rcl    BYTE PTR [edx],1
  431c10:	sbb    al,0x93
  431c12:	push   eax
  431c13:	jmp    FWORD PTR [ecx-0x33bc2261]
  431c19:	gs iret 
  431c1b:	mov    ebx,0x8b9e
  431c20:	mul    DWORD PTR [ebp+0x19984e83]
  431c26:	add    DWORD PTR [ebp+0x52186e58],ecx
  431c2c:	mov    bl,0xfb
  431c2e:	inc    BYTE PTR [ebx+0x0]
	...
  431c44:	fsubr  st(7),st
  431c46:	das    
  431c47:	jmp    FWORD PTR [eax]
  431c49:	outs   dx,BYTE PTR ds:[esi]
  431c4a:	sbb    al,0x8d
  431c4c:	dec    eax
  431c4d:	outs   dx,BYTE PTR ds:[esi]
  431c4e:	adc    BYTE PTR [ebp-0x76e391e0],cl
  431c54:	sbb    BYTE PTR [esi+0x1c],ch
  431c57:	call   0x38f16f
  431c5c:	add    al,0x24
  431c5e:	add    eax,DWORD PTR [eax]
  431c60:	pop    esp
  431c61:	sub    dh,BYTE PTR [eax+0x17]
  431c64:	mov    ch,0xb8
  431c66:	(bad)  
  431c67:	out    0x8d,eax
  431c69:	jle    0x431cc5
  431c6b:	sti    
  431c6c:	in     eax,0xcd
  431c6e:	pop    ss
  431c6f:	or     al,0x10
  431c71:	jns    0x431c77
  431c73:	sti    
  431c74:	add    al,cl
  431c76:	cmp    eax,0xba956374
  431c7b:	push   esi
  431c7c:	cs adc eax,eax
  431c7f:	mov    esi,0xc354416b
  431c84:	mov    bl,0xb8
  431c86:	pop    DWORD PTR [eax-0x4b]
  431c89:	adc    bh,ch
  431c8b:	(bad)  
  431c8c:	cli    
  431c8d:	mov    bh,0x59
  431c8f:	jb     0x431c4a
  431c91:	in     eax,dx
  431c92:	add    al,0x10
  431c94:	cmp    BYTE PTR [eax+0x4],bh
  431c97:	call   0xfb9fdee2
  431c9c:	jnp    0x431d17
  431c9e:	mov    ch,0x86
  431ca0:	les    esi,FWORD PTR [edi]
  431ca2:	fisttp QWORD PTR [ebx]
  431ca4:	mov    ch,0xe4
  431ca6:	clc    
  431ca7:	push   edx
	...
  431cbc:	xchg   BYTE PTR [ebp+0x1c],dl
  431cbf:	jp     0x431c6e
  431cc1:	push   es
  431cc2:	hlt    
  431cc3:	xchg   bl,bh
  431cc5:	stos   BYTE PTR es:[edi],al
  431cc6:	pop    ecx
  431cc7:	xor    al,0x6d
  431cc9:	dec    edi
  431cca:	fdiv   DWORD PTR [ebp-0x5d]
  431ccd:	jbe    0x431c91
  431ccf:	sbb    edi,DWORD PTR ss:[edi-0x5a0d1530]
  431cd6:	aad    0x3
  431cd8:	popf   
  431cd9:	adc    eax,0x3a82f9d9
  431cde:	in     eax,0x3
  431ce0:	mov    ch,0x39
  431ce2:	in     eax,0x7
  431ce4:	mov    ch,0x24
  431ce6:	ds push edx
  431ce8:	ds enter 0x7a7d,0xb1
  431ced:	mov    dh,0xb1
  431cef:	xchg   cl,bl
  431cf1:	(bad)  
  431cf2:	or     eax,0x6ea1c910
  431cf7:	(bad)  
  431cf8:	mov    dh,0xc4
  431cfa:	sbb    al,0x9c
  431cfc:	dec    ebp
  431cfd:	push   ecx
  431cfe:	dec    edi
  431cff:	pop    esi
  431d00:	sbb    DWORD PTR ds:[ebx],ebp
  431d03:	or     BYTE PTR [edx-0x79fb7e95],dh
  431d09:	sbb    BYTE PTR [ebx-0x55e06994],ah
  431d0f:	pop    ebp
  431d10:	jle    0x431d77
  431d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d13:	or     BYTE PTR [ebp-0x293f91a0],dh
  431d19:	xchg   edi,eax
  431d1a:	cmp    ecx,DWORD PTR [ecx+0xc2b8904]
	...
  431d34:	mov    dh,BYTE PTR [eax+0x69]
  431d37:	fidivr WORD PTR [esi-0x78090a71]
  431d3d:	sbb    BYTE PTR [esi-0x77],ch
  431d40:	ja     0x431ccd
  431d42:	push   0x18
  431d44:	sbb    eax,0xccd9f2b8
  431d49:	les    esp,FWORD PTR [ecx-0x2868b0e8]
  431d4f:	ins    BYTE PTR es:[edi],dx
  431d50:	pop    esi
  431d51:	pusha  
  431d52:	pop    esi
  431d53:	dec    esi
  431d54:	int    0x3e
  431d56:	pop    ecx
  431d57:	pop    ebp
  431d58:	scas   al,BYTE PTR es:[edi]
  431d59:	gs sahf 
  431d5b:	inc    ecx
  431d5c:	mov    cl,0x8f
  431d5e:	fwait
  431d5f:	mov    BYTE PTR [edi+esi*4-0x3b61a35b],ah
  431d66:	sbb    cl,al
  431d68:	(bad)  
  431d69:	xchg   edi,eax
  431d6a:	call   0x1a0d246
  431d6f:	addr16 cld 
  431d71:	lds    ecx,FWORD PTR [ecx]
  431d73:	mov    DWORD PTR [edi+0x65],esi
  431d76:	daa    
  431d77:	or     BYTE PTR [ebp-0x4afcf4c9],dh
  431d7d:	pop    DWORD PTR [eax]
  431d7f:	cmp    DWORD PTR [esi],0x20e93edd
  431d85:	leave  
  431d86:	adc    al,0x35
  431d88:	dec    ebx
  431d89:	test   BYTE PTR [eax],al
  431d8b:	push   0xfffffff2
  431d8d:	xchg   ebx,eax
  431d8e:	push   edx
  431d8f:	shl    esp,0xc5
  431d92:	cli    
  431d93:	jmp    0x1d01eec5
	...
  431dac:	cmp    al,0xb3
  431dae:	jle    0x431d7d
  431db0:	ficom  WORD PTR [ebx+edx*2+0x76]
  431db4:	nop
  431db5:	mov    es,WORD PTR [eax]
  431db7:	jmp    0x3f43481d
  431dbc:	jo     0x431d58
  431dbe:	push   eax
  431dbf:	div    esi
  431dc1:	ret    
  431dc2:	jge    0x431d71
  431dc4:	mov    dl,0x12
  431dc6:	inc    edx
  431dc7:	in     eax,0x46
  431dc9:	pop    ss
  431dca:	cmp    dl,BYTE PTR [ecx+0x7efa0b9e]
  431dd0:	cmp    eax,0xf860084a
  431dd5:	inc    edi
  431dd6:	lea    esp,[edi+0x36]
  431dd9:	pop    DWORD PTR [eax]
  431ddb:	jmp    0x8b05c9e6
  431de0:	imul   ecx,eax,0x6bcce965
  431de6:	lea    esp,[esi+edi*2+0x6bf3e85f]
  431ded:	leave  
  431dee:	cli    
  431def:	rcr    esi,cl
  431df1:	adc    al,0x4d
  431df3:	adc    DWORD PTR [ebx],esi
  431df5:	push   cs
  431df6:	nop
  431df7:	jmp    0x1194adb2
  431dfc:	xlat   BYTE PTR ds:[ebx]
  431dfd:	int    0xfa
  431dff:	push   ds
  431e00:	sub    edi,eax
  431e02:	cli    
  431e03:	jmp    0x624447be
  431e08:	icebp  
  431e09:	mov    bh,0xc3
  431e0b:	add    BYTE PTR [eax+0x65],dl
  431e0e:	test   DWORD PTR [edi],0x0
	...
  431e24:	mov    ds:0xd7016286,eax
  431e29:	dec    ebx
  431e2a:	shl    ebx,0x7c
  431e2d:	aaa    
  431e2e:	mov    ch,0x54
  431e30:	pop    edx
  431e31:	addr16 pop es
  431e33:	mov    bh,0x1c
  431e35:	xchg   ebx,eax
  431e36:	mov    ebx,0x12dd289
  431e3b:	add    BYTE PTR [ebp+esi*4-0x1],cl
  431e3f:	mov    ah,BYTE PTR [ebx+0x34]
  431e42:	mov    eax,ds:0x7676a54
  431e47:	mov    bh,0x44
  431e49:	mov    dl,0xff
  431e4b:	mov    dl,BYTE PTR [ebx+0x4d]
  431e4e:	fist   DWORD PTR [eax]
  431e50:	and    al,0x3a
  431e52:	push   esp
  431e53:	(bad)  
  431e54:	sub    edx,DWORD PTR [edi+0x4a17c0af]
  431e5a:	push   edi
  431e5b:	mov    DWORD PTR [edx-0x23fffecf],edx
  431e61:	adc    DWORD PTR [esi+0x44a255b],edi
  431e67:	add    cl,al
  431e69:	adc    ch,ah
  431e6b:	push   ecx
  431e6c:	ret    
  431e6d:	es out 0x1,al
  431e70:	fmul   QWORD PTR [esi-0x62395b1]
  431e76:	cmc    
  431e77:	adc    eax,0x3ac0fc
  431e7c:	dec    edi
  431e7d:	dec    edi
  431e7e:	or     al,0x8d
  431e80:	(bad)  
  431e81:	retf   0x6a4a
  431e84:	test   al,0x13
  431e86:	xor    ebx,DWORD PTR [edi+0x0]
	...
  431e99:	add    BYTE PTR [eax],al
  431e9b:	add    BYTE PTR [ecx],bl
  431e9d:	sar    esi,cl
  431e9f:	mov    dl,bl
  431ea1:	xor    ebx,ebp
  431ea3:	sub    al,0xdb
  431ea5:	add    WORD PTR [esi+0x8bd0],0xffb5
  431ead:	sub    eax,0xf8a34c19
  431eb2:	dec    BYTE PTR [eax+0xfed0cf6]
  431eb8:	cmp    BYTE PTR [edx],ch
  431eba:	dec    esp
  431ebb:	add    BYTE PTR [ebp+0x368caeb8],dh
  431ec1:	cmp    BYTE PTR [eax+eax*1],al
  431ec4:	mov    ch,0x88
  431ec6:	push   edi
  431ec7:	rcr    ebp,cl
  431ec9:	mov    dh,0x3
  431ecb:	add    BYTE PTR [ebp-0x4a277ed5],dh
  431ed1:	mov    eax,0x35404ffe
  431ed6:	outs   dx,DWORD PTR ds:[esi]
  431ed7:	add    BYTE PTR [ebp+0xafaaeb8],dh
  431edd:	xor    eax,0x3a1a183b
  431ee2:	arpl   di,di
  431ee4:	adc    bh,BYTE PTR [eax-0x4aee7d79]
  431eea:	(bad)  
  431eeb:	jmp    DWORD PTR [ebp+0x2b]
  431eee:	sbb    esp,0x4ffeb8b4
  431ef4:	ds or  eax,0xb8b4e067
  431efa:	(bad)  
  431efb:	cli    
  431efc:	sub    esi,DWORD PTR [eax+0x0]
	...
  431f12:	add    BYTE PTR [eax],al
  431f14:	mov    ch,0x63
  431f16:	add    DWORD PTR [eax],0x4ffeb8bb
  431f1c:	cmp    BYTE PTR [edx],ch
  431f1e:	push   edi
  431f1f:	inc    edx
  431f21:	mov    bh,0xae
  431f23:	out    0x8b,eax
  431f25:	mov    dh,0xfe
  431f27:	inc    DWORD PTR [eax+0x31]
  431f2a:	jmp    0x431f2d
  431f2c:	mov    ch,0xb6
  431f2e:	scas   al,BYTE PTR es:[edi]
  431f2f:	xchg   BYTE PTR [esi+0x4f],dh
  431f32:	jle    0x431f32
  431f34:	call   0xe990:0x92fb95b7
  431f3b:	add    edx,DWORD PTR [ebx]
  431f3d:	(bad)  
  431f3e:	outs   dx,BYTE PTR ds:[esi]
  431f3f:	inc    edx
  431f40:	(bad)  
  431f41:	aam    0xb5
  431f43:	pop    ecx
  431f44:	jle    0x431ed7
  431f46:	push   edx
  431f47:	inc    ebx
  431f48:	je     0x431efa
  431f4a:	fmul   DWORD PTR [eax+esi*8+0x3a048ec3]
  431f51:	leave  
  431f52:	add    BYTE PTR [ebp+0x9e9c1ea],bl
  431f58:	push   es
  431f59:	shr    ch,1
  431f5b:	mov    esi,0x8570614e
  431f60:	push   edi
  431f61:	(bad)
  431f65:	or     ch,ch
  431f67:	or     esi,DWORD PTR [ebp+0x1385708f]
  431f6d:	(bad)
  431f71:	int    0x9f
  431f73:	inc    ebp
  431f74:	adc    BYTE PTR [edi*1+0x20],0x0
	...
  431f8c:	mov    ebp,0x70873a59
  431f91:	mov    edi,DWORD PTR [ecx]
  431f93:	out    dx,al
  431f94:	mov    esi,0x6ecd6460
  431f99:	adc    al,0xa2
  431f9b:	ins    BYTE PTR es:[edi],dx
  431f9c:	shl    BYTE PTR [ebx-0x7e],0x59
  431fa0:	xor    cl,BYTE PTR [ebx-0x3]
  431fa3:	mov    WORD PTR [eax-0x253c24ad],fs
  431fa9:	pop    ss
  431faa:	inc    ax
  431fac:	mov    ch,0x8f
  431fae:	jmp    0x6455daa0
  431fb3:	test   BYTE PTR [ebp+0x29b3e98f],dh
  431fb9:	or     eax,0x8fb50421
  431fbe:	cdq    
  431fbf:	pop    eax
  431fc0:	xchg   BYTE PTR [edi],dh
  431fc2:	out    0x2,eax
  431fc4:	mov    ch,0x8f
  431fc6:	add    BYTE PTR [edx+ebx*1+0x20],ah
  431fca:	add    cl,ch
  431fcc:	mov    dh,0x5f
  431fce:	lea    ebp,[edx-0x37]
  431fd1:	pop    DWORD PTR [eax]
  431fd3:	jmp    0x6b15e51e
  431fd8:	cmc    
  431fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431fda:	push   0x8fb7e5
  431fdf:	je     0x431fcb
  431fe1:	adc    DWORD PTR [ecx],eax
  431fe3:	jmp    0x3ad07f9e
  431fe8:	popf   
  431fe9:	mov    es,WORD PTR [eax]
  431feb:	jmp    0xb1c0e050
	...
  432004:	in     eax,dx
  432005:	mov    bh,0x22
  432007:	cmp    eax,0x6c86c4df
  43200c:	or     al,0x8e
  43200e:	add    cl,ch
  432010:	aas    
  432011:	inc    eax
  432012:	in     al,dx
  432013:	jmp    0xa3b:0xf1668fb6
  43201a:	mov    ds:0x508fb6e8,al
  43201f:	pop    esp
  432020:	cmp    DWORD PTR [ebx+0x5fb6e8fe],ebp
  432026:	sti    
  432027:	mov    dh,0x39
  432029:	retf   
  43202a:	or     eax,DWORD PTR [ecx]
  43202c:	mov    ch,0x8e
  43202e:	add    cl,ch
  432030:	cmp    ecx,DWORD PTR [edx]
  432032:	scas   al,BYTE PTR es:[edi]
  432033:	call   0x6c93afee
  432038:	dec    ecx
  432039:	(bad)  
  43203a:	(bad)  
  43203b:	call   0x6a4349f6
  432040:	jle    0x432006
  432042:	out    0x53,eax
  432044:	or     esi,eax
  432046:	cli    
  432047:	jb     0x43208c
  432049:	aad    0x0
  43204b:	jmp    0xe1c23706
  432050:	mov    ah,0x8f
  432052:	add    BYTE PTR [eax],al
  432054:	xchg   BYTE PTR [ebx-0x6e257a73],cl
  43205a:	add    BYTE PTR [eax],al
  43205c:	cmp    al,0x16
  43205e:	jnp    0x432060
  432060:	call   0x7b7f:0xd3500093
  432067:	les    eax,FWORD PTR [eax]
	...
  432079:	add    BYTE PTR [eax],al
  43207b:	add    BYTE PTR [eax-0x73ff0155],dl
  432081:	xchg   ebx,eax
  432082:	lea    eax,[ebp+0x91ae]
  432088:	dec    esp
  432089:	push   ss
  43208a:	stos   DWORD PTR es:[edi],eax
  43208b:	adc    al,0x5a
  43208d:	xchg   ebx,eax
  43208e:	add    BYTE PTR [edx+0x4c],ch
  432091:	adc    al,0xc8
  432093:	push   DWORD PTR [ebp+esi*8+0xb53fe52]
  43209a:	test   edx,ebp
  43209c:	dec    ebp
  43209d:	xchg   ebx,eax
  43209e:	add    BYTE PTR [edi-0x7e],bl
  4320a1:	or     al,0x7b
  4320a3:	sbb    al,0x14
  4320a5:	xchg   ebx,eax
  4320a6:	add    BYTE PTR [ebp+0x5e],bl
  4320a9:	nop
  4320aa:	add    BYTE PTR [ebp-0x59],dl
  4320ad:	daa    
  4320ae:	sub    esp,0x9414
  4320b4:	lahf   
  4320b5:	lock idiv esi
  4320b8:	push   ebx
  4320b9:	add    BYTE PTR [di],al
  4320bc:	jl     0x432051
  4320be:	add    BYTE PTR [eax],al
  4320c0:	mov    esp,0x42f88508
  4320c5:	addr16 imul eax
  4320c8:	sub    BYTE PTR [edi-0x9],bh
  4320cb:	dec    DWORD PTR [edi-0x28]
  4320ce:	push   es
  4320cf:	add    al,bl
  4320d1:	ret    
  4320d2:	adc    DWORD PTR [ebp-0x10],0x41084d09
  4320d9:	adc    al,bh
  4320db:	(bad)  
  4320dc:	arpl   WORD PTR [esi-0x18],sp
  4320df:	add    BYTE PTR fs:[eax],al
	...
  4320f2:	add    BYTE PTR [eax],al
  4320f4:	mov    ch,0x6b
  4320f6:	push   ebx
  4320f7:	sti    
  4320f8:	jl     0x432164
  4320fa:	or     al,0x0
  4320fc:	add    BYTE PTR [edx+0x68],al
  4320ff:	jg     0x43209a
  432101:	push   eax
  432102:	test   esp,ebp
  432104:	xor    DWORD PTR [esi+0x5beafffe],ebp
  43210a:	cwde   
  43210b:	and    al,0xa5
  43210d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43210e:	(bad)  
  43210f:	dec    DWORD PTR [ebp+0x7afa7e72]
  432115:	sub    eax,esp
  432117:	and    edi,DWORD PTR [ebp-0x6e7b7858]
  43211d:	(bad)  
  43211e:	(bad)  
  43211f:	push   DWORD PTR [ebp-0x6ebb77e8]
  432125:	mov    ah,0x66
  432127:	out    0x76,al
  432129:	lods   eax,DWORD PTR ds:[esi]
  43212a:	push   ecx
  43212b:	xchg   eax,edi
  43212d:	rcr    BYTE PTR [eax-0x1574b16],0x8c
  432134:	icebp  
  432135:	mov    WORD PTR [eax+ebp*8],cs
  432138:	aad    0xf3
  43213a:	push   ecx
  43213b:	sti    
  43213c:	mov    al,BYTE PTR [ecx+0x60]
  43213f:	pop    ebp
  432140:	div    DWORD PTR [ebx-0x73967902]
  432146:	add    BYTE PTR [edi+0x6b],cl
  432149:	pop    ebx
  43214a:	mov    cl,BYTE PTR [esi-0x1801574c]
  432150:	mov    ebx,0xc6fb51e2
  432155:	add    DWORD PTR [esi],edx
  432157:	mov    edi,0x0
	...
  43216c:	jno    0x43210a
  43216e:	scas   eax,DWORD PTR es:[edi]
  43216f:	dec    esi
  432170:	pop    edi
  432171:	fsubr  QWORD PTR [edi+ecx*2+0x201ac3e2]
  432178:	xchg   BYTE PTR [ecx-0x28c6eaad],bl
  43217e:	mov    esi,0x268f8fff
  432183:	aad    0x84
  432185:	or     al,0xed
  432187:	adc    edi,DWORD PTR [ebp+0x58]
  43218a:	push   edx
  43218b:	iret   
  43218c:	mov    bh,0x10
  43218e:	push   ecx
  43218f:	out    dx,eax
  432190:	sub    DWORD PTR [edi+0x71],esp
  432193:	cld    
  432194:	sbb    BYTE PTR [eax-0x5c2930c6],cl
  43219a:	fs jle 0x4321f4
  43219d:	(bad)
  4321a1:	mov    esp,0x4fa4c7fb
  4321a6:	jmp    0xc9b71335
  4321ab:	mov    WORD PTR [esi],?
  4321ad:	out    dx,al
  4321ae:	out    0x3,eax
  4321b0:	mov    ch,0x10
  4321b2:	sub    eax,0x9b8f2507
  4321b7:	mov    edx,0x11e98c18
  4321bc:	jne    0x432167
  4321be:	icebp  
  4321bf:	mov    ecx,edi
  4321c1:	jae    0x4321b0
  4321c3:	mov    al,0xe4
  4321c5:	or     dl,BYTE PTR [edx-0x16704b6e]
  4321cb:	imul   ecx,DWORD PTR [esi+0x67],0xffffffca
  4321cf:	push   ebp
	...
  4321e4:	fcmovu st,st(0)
  4321e6:	std    
  4321e7:	inc    eax
  4321e8:	mov    eax,ds:0x90b1164b
  4321ed:	mov    ds:0x440fb41b,eax
  4321f2:	add    eax,0xa2607a24
  4321f7:	out    dx,eax
  4321f8:	ss lahf 
  4321fa:	sub    DWORD PTR [edx+eax*8],eax
  4321fd:	rcl    BYTE PTR [edx],1
  4321ff:	push   cs
  432200:	inc    eax
  432201:	mov    ecx,ds
  432203:	sbb    ecx,DWORD PTR [esp+edi*4-0x489c0304]
  43220a:	aam    0xd6
  43220c:	lea    eax,[edi]
  43220e:	add    al,dl
  432210:	fcom   QWORD PTR [ebx+edi*8-0x725c550b]
  432217:	outs   dx,BYTE PTR ds:[esi]
  432218:	or     DWORD PTR [esi-0x45f91700],0x14
  43221f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432220:	mov    al,ds:0x7562007c
  432225:	jo     0x432247
  432227:	jo     0x432249
  432229:	retf   0xe900
  43222c:	mov    dh,0x3c
  43222e:	(bad)  
  43222f:	in     eax,0x26
  432231:	mov    ds,WORD PTR [edx-0x6e]
  432234:	hlt    
  432235:	mov    eax,DWORD PTR [eax]
  432237:	fcomi  st,st(6)
  432239:	mov    ah,0xf2
  43223b:	jb     0x4322aa
  43223d:	jo     0x432243
  43223f:	mov    edx,0x3bb00b20
  432244:	mov    dh,0x8f
  432246:	add    BYTE PTR [ecx],dl
	...
  43225c:	shl    DWORD PTR [esi-0x5],0xfe
  432260:	(bad)
  432263:	sub    ch,BYTE PTR [ebp+0x68]
  432266:	dec    edi
  432267:	call   0x43e8:0x3952a05c
  43226e:	and    al,0x9
  432270:	add    al,0x4d
  432272:	sti    
  432273:	cld    
  432274:	mov    dl,0x9e
  432276:	inc    eax
  432277:	jmp    0xdfbd1f49
  43227c:	cmp    ecx,DWORD PTR [ebx-0x46a1fed0]
  432282:	jae    0x432272
  432284:	xor    eax,0xbe2c13b7
  432289:	pop    es
  43228a:	sbb    DWORD PTR [ecx-0x49],ebx
  43228d:	pop    ecx
  43228e:	push   edi
  43228f:	stos   DWORD PTR es:[edi],eax
  432290:	cli    
  432291:	mov    ebx,0xc05da930
  432296:	push   esp
  432297:	bound  edx,QWORD PTR [edx+0x4c]
  43229a:	das    
  43229b:	add    BYTE PTR [edi],dl
  43229d:	xchg   edi,eax
  43229e:	mov    ebx,0x4d06fc7d
  4322a3:	or     al,0x34
  4322a5:	pusha  
  4322a6:	sub    bh,bh
  4322a8:	pop    ebx
  4322a9:	xchg   edi,eax
  4322aa:	mov    ebx,0xc09ed07d
  4322af:	jmp    0x432259
  4322b1:	dec    BYTE PTR [ecx-0x1]
  4322b4:	xchg   ecx,eax
  4322b5:	mov    edi,0xc9fb5050
  4322ba:	push   es
  4322bb:	push   ebx
  4322bc:	sti    
  4322bd:	leave  
  4322be:	add    bh,bh
	...
  4322d4:	cmp    DWORD PTR [ebx],0x989c4011
  4322da:	mov    ebx,0x5d95f07e
  4322df:	adc    BYTE PTR [edx-0x6c],bl
  4322e2:	lea    ecx,[esp+ebx*2]
  4322e5:	xchg   edi,eax
  4322e6:	pop    ecx
  4322e7:	call   DWORD PTR [eax-0x44]
  4322ea:	xor    DWORD PTR [ebp+0x6c],eax
  4322ed:	loop   0x4322bb
  4322ef:	mov    BYTE PTR [ebp-0x8],dl
  4322f2:	pop    ebx
  4322f3:	ret    0x8f48
  4322f6:	push   ebp
  4322f7:	mov    edi,DWORD PTR [eax+0x22104507]
  4322fd:	in     al,dx
  4322fe:	add    BYTE PTR fs:[ebx-0x27],bl
  432302:	push   es
  432303:	xor    esp,DWORD PTR [edx+0x5f]
  432306:	jne    0x432310
  432308:	hlt    
  432309:	cmp    eax,0x3afbfff7
  43230e:	clc    
  43230f:	test   ebx,edi
  432311:	fdivp  st(6),st
  432313:	xor    cl,BYTE PTR [ebx+ebx*2+0x32]
  432317:	inc    edi
  432318:	mov    bl,0x5b
  43231a:	adc    al,0x75
  43231c:	pop    edx
  43231d:	pop    edi
  43231e:	xor    eax,0xffffff91
  432321:	push   ebp
  432322:	je     0x432313
  432324:	xchg   eax,ecx
  432326:	or     dl,BYTE PTR [ebx-0x4b]
  432329:	jns    0x43237a
  43232b:	jne    0x4322e6
  43232d:	pop    ebx
  43232e:	scas   eax,DWORD PTR es:[edi]
  43232f:	cli    
  432330:	loop   0x4322ed
  432332:	mul    bh
  432334:	popa   
  432335:	cmp    DWORD PTR [edi-0x5],ecx
	...
  43234c:	mov    fs,ebp
  43234e:	xlat   BYTE PTR ds:[ebx]
  43234f:	add    eax,0x74f51063
  432354:	ret    
  432355:	xor    DWORD PTR [ebx],edx
  432357:	ror    dh,0xbd
  43235a:	jns    0x4323a1
  43235c:	leave  
  43235d:	sub    eax,DWORD PTR [esp+esi*2-0x49]
  432361:	das    
  432362:	in     al,dx
  432363:	xchg   BYTE PTR [ebx-0x13],bh
  432366:	lods   eax,DWORD PTR ds:[esi]
  432367:	pop    ecx
  432368:	clc    
  432369:	data16 hlt 
  43236b:	(bad)  
  43236c:	jmp    0x99c2839e
  432371:	in     al,0x81
  432373:	mov    DWORD PTR gs:[eax-0x4b04794b],ebp
  43237a:	xchg   ebx,edi
  43237c:	ret    0x6c32
  43237f:	add    BYTE PTR [ebp+0x5d6581a8],dh
  432385:	test   al,0xb1
  432387:	gs popf 
  432389:	in     eax,dx
  43238a:	inc    ebp
  43238b:	inc    ebp
  43238c:	inc    ebp
  43238d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43238e:	(bad)  
  43238f:	push   DWORD PTR [ebp+0x2eebb12f]
  432395:	stos   BYTE PTR es:[edi],al
  432396:	add    DWORD PTR [ebp+0x3d],eax
  432399:	loopne 0x43240b
  43239b:	add    eax,0xc082a8b5
  4323a0:	mov    al,ds:0x294579c0
  4323a5:	cmp    eax,0xb3f1e841
  4323aa:	(bad)  
  4323ab:	call   DWORD PTR [edx]
  4323ad:	jae    0x432407
  4323af:	sti    
	...
  4323c4:	js     0x4323be
  4323c6:	sbb    ebx,DWORD PTR [ebp+0x11]
  4323c9:	(bad)  
  4323ca:	shl    BYTE PTR [eax+0x7f21a602],1
  4323d0:	js     0x432391
  4323d2:	pop    edi
  4323d3:	enter  0x75ee,0xa2
  4323d7:	shl    BYTE PTR [ecx+0x32600406],1
  4323dd:	xchg   ecx,eax
  4323de:	outs   dx,BYTE PTR ds:[esi]
  4323df:	ror    dl,0xb
  4323e2:	and    eax,0xd525bd05
  4323e7:	mov    ah,0x31
  4323e9:	push   ebx
  4323ea:	jmp    0xc4b7:0xf3ba6afb
  4323f1:	dec    edi
  4323f2:	jmp    0x64cf957d
  4323f7:	inc    ebx
  4323f8:	sub    BYTE PTR [ecx+0x59ec86e],cl
  4323fe:	sub    ebx,DWORD PTR [ebx+0x34]
  432401:	xchg   esp,eax
  432402:	jmp    0x2d8eb20a
  432407:	push   ds
  432408:	mov    bh,BYTE PTR [ecx+0x53324fab]
  43240e:	sbb    eax,0xab756a06
  432413:	pop    es
  432414:	jmp    0x670b2dea
  432419:	add    eax,0x535e0783
  43241e:	stc    
  43241f:	add    esi,eax
  432421:	stos   DWORD PTR es:[edi],eax
  432422:	out    0xb0,eax
  432424:	inc    edx
  432425:	ja     0x432493
  432427:	push   edi
	...
  43243c:	scas   al,BYTE PTR es:[edi]
  43243d:	or     ebx,DWORD PTR [esi+0x51]
  432440:	ds mov ecx,0xccfdb13d
  432446:	cmp    bh,BYTE PTR [ebp+0x25]
  432449:	add    eax,0x92c85ca2
  43244e:	jmp    0x35135556
  432453:	icebp  
  432454:	inc    ecx
  432455:	push   ecx
  432456:	add    cl,ah
  432458:	inc    esi
  432459:	mov    cl,0xc9
  43245b:	in     eax,0xb6
  43245d:	pop    DWORD PTR [ebp-0x78751157]
  432463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432464:	jo     0x43242b
  432466:	out    0x26,eax
  432468:	mov    dh,0x8f
  43246a:	add    BYTE PTR [ebp+0x79],ah
  43246d:	inc    edx
  43246e:	add    eax,0x5a4f76ba
  432473:	stos   BYTE PTR es:[edi],al
  432474:	test   al,0xcf
  432476:	pop    ecx
  432477:	stos   BYTE PTR es:[edi],al
  432478:	add    dl,BYTE PTR [edx]
  43247a:	in     al,dx
  43247b:	sbb    BYTE PTR [eax],cl
  43247d:	pop    edi
  43247e:	push   ebx
  43247f:	je     0x432473
  432481:	mov    ah,0x4f
  432483:	push   ecx
  432484:	outs   dx,DWORD PTR ds:[esi]
  432485:	pop    ds
  432486:	cli    
  432487:	push   esi
  432488:	sub    BYTE PTR [eax-0x4a4fa8d2],bh
  43248e:	jae    0x432495
  432490:	sbb    BYTE PTR [ebx-0x4],bl
  432493:	push   0x0
  432495:	(bad)  
  432496:	jl     0x432495
  432498:	push   0x681be890
  43249d:	mov    dh,0xfa
  43249f:	loop   0x4324a1
	...
  4324b1:	add    BYTE PTR [eax],al
  4324b3:	add    ah,ch
  4324b5:	inc    ebx
  4324b6:	add    esi,DWORD PTR [eax-0x37]
  4324b9:	push   es
  4324ba:	jo     0x4324a9
  4324bc:	jmp    0x7d5aa980
  4324c1:	xchg   esi,eax
  4324c2:	mov    edi,eax
  4324c4:	fist   WORD PTR [ebp+0x4]
  4324c7:	adc    DWORD PTR [edi+0x31f6fab5],eax
  4324cd:	xor    eax,0x9273e804
  4324d2:	sti    
  4324d3:	pop    ds
  4324d4:	fxch   st(3)
  4324d6:	outs   dx,BYTE PTR ds:[esi]
  4324d7:	fild   WORD PTR [ebp-0x561318a3]
  4324dd:	int    0xe6
  4324df:	loope  0x43253e
  4324e1:	mov    al,0xba
  4324e3:	add    bh,bl
  4324e5:	pop    ebp
  4324e6:	div    DWORD PTR [ebx]
  4324e8:	pop    esp
  4324e9:	call   FWORD PTR [eax+0x5b]
  4324ec:	push   ebp
  4324ed:	push   ebx
  4324ee:	add    DWORD PTR [ecx+0x18],0x3b
  4324f2:	or     DWORD PTR [ebx-0x46],edx
  4324f5:	test   BYTE PTR [ebx-0x7a5d3737],0xc0
  4324fc:	enter  0x636e,0xc0
  432500:	add    al,0x3b
  432502:	clc    
  432503:	push   edi
  432504:	mov    ebp,0x5274025b
  432509:	pop    edi
  43250a:	xor    eax,0x59
  43250d:	push   esi
  43250e:	jne    0x432514
  432510:	dec    BYTE PTR [ebx-0x1d]
  432513:	daa    
  432514:	cli    
  432515:	rcl    DWORD PTR [eax+0x0],cl
	...
  43252b:	add    BYTE PTR [ebx+edx*4-0x1a0b387d],bl
  432532:	xchg   esi,edi
  432534:	repz clc 
  432536:	test   al,bl
  432538:	add    al,0xc6
  43253a:	imul   edi,esi,0xebbb34d3
  432540:	xchg   edx,eax
  432541:	aad    0xfa
  432543:	addr16 jmp 0xe853:0x5f000092
  43254b:	inc    ebx
  43254c:	in     eax,0x60
  43254e:	neg    DWORD PTR [edi+0x22]
  432551:	in     al,0xb9
  432553:	push   ebp
  432554:	xlat   BYTE PTR ds:[ebx]
  432555:	push   esi
  432556:	push   ecx
  432557:	push   ebx
  432558:	cmp    ebx,DWORD PTR [edi+esi*8+0x7d399733]
  43255f:	cld    
  432560:	add    eax,0x17dfee1
  432565:	xor    al,0xfe
  432567:	add    cl,BYTE PTR [ebx]
  432569:	scas   al,BYTE PTR es:[edi]
  43256a:	jns    0x4325e4
  43256c:	mov    esp,0xb5196e8b
  432571:	push   edx
  432572:	or     BYTE PTR [edi-0xb],bh
  432575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432576:	scas   al,BYTE PTR es:[edi]
  432577:	cli    
  432578:	mov    al,ds:0x691549c0
  43257d:	fidivr WORD PTR [esi-0x1ac801]
  432583:	test   ch,dh
  432585:	jnp    0x432586
  432587:	cli    
  432588:	jo     0x432576
  43258a:	mov    esi,0x5b0fa7e
  43258f:	pop    edx
	...
  4325a4:	mov    cl,0x9c
  4325a6:	das    
  4325a7:	xchg   DWORD PTR [eax+0x4],edi
  4325aa:	stos   DWORD PTR es:[edi],eax
  4325ab:	push   esi
  4325ac:	in     al,dx
  4325ad:	jmp    0x5160:0x41680007
  4325b4:	xchg   bp,ax
  4325b6:	psubq  mm0,QWORD PTR [esi-0x468282df]
  4325bd:	outs   dx,DWORD PTR ds:[esi]
  4325be:	retf   0x3303
  4325c1:	test   BYTE PTR [edi+0x2],dh
  4325c4:	mov    dh,0x65
  4325c6:	loop   0x432646
  4325c8:	sbb    eax,0xbc72049d
  4325cd:	loop   0x4325bd
  4325cf:	jle    0x432646
  4325d1:	mov    WORD PTR [edx+edi*8+0x1549b100],?
  4325d8:	jmp    0x3842e4bb
  4325dd:	add    BYTE PTR fs:[ebp-0x501e48b],al
  4325e4:	lock pushf 
  4325e6:	mov    edi,0x5e07a7e
  4325eb:	pop    edx
  4325ec:	mov    cl,0xc
  4325ee:	cs xchg eax,edi
  4325f1:	mov    ah,0xa9
  4325f3:	push   esi
  4325f4:	jl     0x432660
  4325f6:	or     BYTE PTR [eax],al
  4325f8:	jmp    0x432617
  4325fa:	jbe    0x4325f4
  4325fc:	sub    BYTE PTR [edi-0x3fc40fd6],cl
  432602:	cmp    BYTE PTR [esp+edx*4-0x4a],bl
  432606:	ror    DWORD PTR [esi+0x0],1
	...
  432619:	add    BYTE PTR [eax],al
  43261b:	add    BYTE PTR [edx-0x572f1949],ah
  432621:	adc    ch,BYTE PTR [edx+0x5da76627]
  432627:	dec    esi
  432628:	push   cs
  432629:	mov    dh,0x65
  43262b:	dec    ebx
  43262c:	add    esi,DWORD PTR [ebx]
  43262e:	in     eax,0x12
  432630:	cmc    
  432631:	test   eax,0x4ef512e5
  432636:	cmp    ch,BYTE PTR [esi+0x282d0a2b]
  43263c:	lods   eax,DWORD PTR ds:[esi]
  43263d:	or     bl,BYTE PTR ds:0x290aa928
  432643:	or     BYTE PTR [edx],bh
  432645:	dec    eax
  432646:	in     eax,0xa
  432648:	hlt    
  432649:	cmp    esp,esi
  43264b:	adc    dh,ch
  43264d:	ror    ebp,1
  43264f:	inc    ebx
  432650:	cmp    ch,BYTE PTR [edi+0x2a73c362]
  432656:	jmp    0xa7759636
  43265b:	add    ebx,DWORD PTR [ebx]
  43265d:	js     0x4326a9
  43265f:	shl    DWORD PTR [esi+0x335bf8b4],cl
  432665:	xchg   eax,ebp
  432667:	add    ecx,DWORD PTR [edx]
  432669:	int3   
  43266a:	fadd   QWORD PTR [edx+0x3a]
  43266d:	dec    esp
  43266e:	add    eax,0xcd443200
  432673:	sti    
  432674:	add    al,0x9
  432676:	xchg   ebp,eax
  432677:	daa    
  432678:	mov    ebp,0x7582dab4
  43267d:	mov    BYTE PTR [ecx+0x82],bh
	...
  432693:	add    BYTE PTR [eax+ecx*4+0x11],dh
  432697:	rcl    BYTE PTR [ebx-0x4b],1
  43269a:	call   0xcef622
  43269f:	jmp    0xf64162b4
  4326a4:	(bad)  
  4326a5:	hlt    
  4326a6:	push   esp
  4326a7:	jb     0x43263e
  4326a9:	xor    al,0xec
  4326ab:	stc    
  4326ac:	pusha  
  4326ad:	push   cs
  4326ae:	lock bound esp,QWORD PTR [ebx-0x6f]
  4326b2:	push   ebx
  4326b3:	(bad)  
  4326b4:	jmp    0xc92c:0xbd35ff8c
  4326bb:	add    DWORD PTR [ecx+0x41],ebp
  4326be:	jno    0x432677
  4326c0:	jo     0x4326cd
  4326c2:	rcr    dh,0x32
  4326c5:	sbb    eax,DWORD PTR [eax]
  4326c7:	jmp    0xe5853382
  4326cc:	and    eax,0xfa60d766
  4326d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4326d2:	mov    BYTE PTR [edi*2+0xed5b76],ch
  4326d9:	aas    
  4326da:	mov    DWORD PTR [ecx+edi*2],ebx
  4326dd:	lods   al,BYTE PTR ds:[esi]
  4326de:	std    
  4326df:	mov    ecx,0xea3b0c8d
  4326e4:	jmp    0x4326a2
  4326e6:	mov    ah,al
  4326e8:	add    dh,BYTE PTR [edi+0x5d]
  4326eb:	pop    ecx
  4326ec:	jnp    0x43275a
  4326ee:	xchg   edi,ebp
  4326f0:	and    ecx,DWORD PTR [edi+edi*8-0x20]
  4326f4:	jl     0x432696
  4326f6:	push   eax
  4326f7:	je     0x4326f9
	...
  432709:	add    BYTE PTR [eax],al
  43270b:	add    BYTE PTR [eax-0x74],bh
  43270e:	push   eax
  43270f:	and    BYTE PTR ds:[eax+0x12],0xa9
  432714:	mov    dh,0x34
  432716:	(bad)  
  432717:	fnsave [ebx]
  432719:	iret   
  43271a:	jae    0x4326e1
  43271c:	add    DWORD PTR [ebx-0x4],ecx
  43271f:	jb     0x432793
  432721:	mov    eax,0x7cb12a7e
  432726:	inc    ebp
  432727:	sbb    DWORD PTR [ebp-0x5cff7924],eax
  43272d:	ss (bad) 
  43272f:	call   0x3a6a93
  432734:	ror    BYTE PTR [ebx+0x75],1
  432737:	sbb    edx,edi
  432739:	cmc    
  43273a:	dec    BYTE PTR [edx+0x38bad75d]
  432740:	pop    ds
  432741:	mov    ah,BYTE PTR [edx+0x38]
  432744:	int    0xfa
  432746:	dec    edx
  432747:	mov    DWORD PTR [edx-0x37ea0879],edi
  43274d:	mov    ebp,0x4c9f003a
  432752:	or     al,0xff
  432754:	rcl    DWORD PTR [edi-0x7d],1
  432757:	jge    0x43276d
  432759:	aaa    
  43275a:	inc    ebp
  43275b:	hlt    
  43275c:	pop    edi
  43275d:	int    0xf2
  43275f:	cmp    bh,dl
  432761:	retf   0x7bfe
  432764:	pop    ebx
  432765:	aaa    
  432766:	inc    esi
  432767:	add    al,0xb7
  432769:	js     0x4327a3
  43276b:	call   0x3c0788
	...
  432784:	mov    WORD PTR [ecx+0x78aa5f53],ss
  43278a:	mov    edx,0x4536cc04
  43278f:	cld    
  432790:	and    DWORD PTR [edi+0x78],ecx
  432793:	stos   DWORD PTR es:[edi],eax
  432794:	xchg   BYTE PTR [edi-0x70cb17b2],cl
  43279a:	add    BYTE PTR [eax],al
  43279c:	div    DWORD PTR [ebp-0x80]
  43279f:	jl     0x432761
  4327a1:	xchg   DWORD PTR [eax],eax
  4327a3:	push   esi
  4327a4:	and    edi,DWORD PTR [eax]
  4327a6:	clc    
  4327a7:	mov    edi,DWORD PTR [ebp+0x42e802da]
  4327ad:	aaa    
  4327ae:	idiv   edi
  4327b0:	in     eax,0xcb
  4327b2:	dec    BYTE PTR [edx-0x2e9a96e]
  4327b8:	mov    ch,0x99
  4327ba:	dec    esp
  4327bb:	test   BYTE PTR [ebp+0x1c],dh
  4327be:	add    ebp,DWORD PTR [esi]
  4327c0:	jne    0x432760
  4327c2:	sbb    al,BYTE PTR [edi+0x66bdacfb]
  4327c8:	ins    BYTE PTR es:[edi],dx
  4327c9:	add    DWORD PTR [edi-0x72],edx
  4327cc:	lds    esp,FWORD PTR [edx+0x54f58446]
  4327d2:	pop    eax
  4327d3:	xchg   DWORD PTR [ebx-0x54],edi
  4327d6:	jns    0x432799
  4327d8:	mov    gs,eax
  4327da:	or     edi,edi
  4327dc:	mov    al,0x4e
  4327de:	or     al,0x41
  4327e0:	push   0xffffff98
  4327e2:	jge    0x43282e
  4327e4:	mov    cl,0xf1
  4327e6:	lock dec ebx
	...
  4327fc:	stos   DWORD PTR es:[edi],eax
  4327fd:	push   0xd4f17f04
  432802:	mov    es,WORD PTR [ecx]
  432804:	xchg   edx,eax
  432805:	dec    edx
  432806:	inc    edx
  432807:	add    al,0xb5
  432809:	jnp    0x432886
  43280b:	in     al,dx
  43280c:	ss or  eax,0x9c2851c4
  432812:	inc    eax
  432813:	call   0x41ce45
  432818:	ds fs cld 
  43281b:	gs mov ah,0x2d
  43281e:	ds call 0xfb8a4a4e
  432824:	adc    eax,DWORD PTR [eax-0x54afbbe]
  43282a:	lods   eax,DWORD PTR ds:[esi]
  43282b:	xchg   BYTE PTR [ebp-0x4d17aad3],bl
  432831:	xor    BYTE PTR [edi-0x5],al
  432834:	cmp    al,0xe1
  432836:	cli    
  432837:	xchg   BYTE PTR [esi+0x60],dh
  43283a:	xchg   edi,eax
  43283b:	cld    
  43283c:	cmp    BYTE PTR [ecx-0x80],0xc0
  432840:	add    ebp,ebx
  432842:	fyl2x  
  432844:	lods   eax,DWORD PTR ds:[esi]
  432845:	(bad)  
  432846:	out    0x16,al
  432848:	shl    DWORD PTR [edi-0x4e],cl
  43284b:	mov    cl,0x5f
  43284d:	pushf  
  43284e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43284f:	icebp  
  432850:	call   0xe7ff:0xc140668f
  432857:	stos   BYTE PTR es:[edi],al
  432858:	in     al,dx
  432859:	into   
  43285a:	xchg   ebx,eax
  43285b:	jle    0x4328ae
  43285d:	pusha  
  43285e:	pop    esi
  43285f:	mov    ecx,0x0
	...
  432874:	mov    dl,0x26
  432876:	sub    DWORD PTR [edx+esi*1],ecx
  432879:	(bad)  
  43287a:	dec    ebx
  43287b:	xchg   DWORD PTR [esi-0x7b491691],ebp
  432881:	push   es
  432882:	mov    cl,0x41
  432884:	jo     0x432838
  432886:	call   0xed68955a
  43288b:	js     0x432813
  43288d:	xchg   ebx,eax
  43288e:	ins    BYTE PTR es:[edi],dx
  43288f:	(bad)  
  432890:	sahf   
  432891:	pop    ecx
  432892:	sbb    DWORD PTR [ebx-0x60],ecx
  432895:	pop    ebx
  432896:	rol    ebx,cl
  432898:	repnz or al,0xad
  43289b:	div    DWORD PTR [ecx]
  43289d:	iret   
  43289e:	adc    al,0x1b
  4328a0:	xchg   DWORD PTR [esi],eax
  4328a2:	sbb    al,0xfc
  4328a4:	shl    BYTE PTR [edx-0x74],cl
  4328a7:	dec    edx
  4328a8:	into   
  4328a9:	or     eax,0x14be0581
  4328ae:	test   eax,0xbd3bf57f
  4328b3:	or     esi,DWORD PTR [eax-0x7d]
  4328b6:	hlt    
  4328b7:	neg    BYTE PTR [eax]
  4328b9:	mov    WORD PTR [edx+eax*8-0x32],?
  4328bd:	pop    edi
  4328be:	ins    BYTE PTR es:[edi],dx
  4328bf:	(bad)  
  4328c0:	mov    esi,0xeef0525f
  4328c5:	cdq    
  4328c6:	test   eax,0xf4cc1203
  4328cb:	inc    ecx
  4328cc:	lock mov al,0xe7
  4328cf:	cli    
  4328d0:	inc    edi
  4328d1:	dec    ecx
  4328d2:	add    BYTE PTR [ecx],cl
  4328d4:	xchg   edi,eax
  4328d5:	js     0x432916
  4328d7:	or     DWORD PTR [eax],eax
	...
  4328e9:	add    BYTE PTR [eax],al
  4328eb:	add    BYTE PTR [ebp+0x62a48087],al
  4328f1:	mov    cl,0x73
  4328f3:	in     eax,0x54
  4328f5:	or     BYTE PTR [edi],bh
  4328f7:	leave  
  4328f8:	hlt    
  4328f9:	dec    edx
  4328fa:	sti    
  4328fb:	call   0xbdbe5b54
  432900:	mov    dh,0x3b
  432902:	pop    edx
  432903:	xchg   ebx,eax
  432904:	inc    esi
  432905:	add    al,0x73
  432907:	int    0xbd
  432909:	jo     0x43292f
  43290b:	xchg   edi,eax
  43290c:	data16 mov dh,0x14
  43290f:	cmp    eax,0x6a007127
  432914:	jne    0x432899
  432916:	test   DWORD PTR [ecx+0x62526605],ebp
  43291c:	add    cl,BYTE PTR [ecx-0x4b8c1918]
  432922:	cli    
  432923:	push   0x71
  432925:	mov    cl,0x9
  432927:	push   esp
  432928:	jno    0x432935
  43292a:	shl    BYTE PTR [eax*8-0x40aba89],0x81
  432932:	data16 stc 
  432934:	imul   ecx,DWORD PTR [esp+0x39],0x62
  432939:	jo     0x43295f
  43293b:	cmp    DWORD PTR [edx+ebx*4+0x4c],edi
  43293f:	fcomip st,st(6)
  432941:	mov    al,0x7d
  432943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432944:	mov    ebp,0xb67644ce
  432949:	test   BYTE PTR [ebx+0x392dc526],dh
  43294f:	stos   BYTE PTR es:[edi],al
	...
  432964:	mov    edx,0x7a690a3b
  432969:	test   BYTE PTR [eax],al
  43296b:	fcomp  QWORD PTR [edx-0x3d5576d2]
  432971:	int    0x44
  432973:	add    bl,dh
  432975:	mov    WORD PTR [edx+0x51e5c345],es
  43297b:	leave  
  43297c:	into   
  43297d:	mov    bl,0xfa
  43297f:	push   0xffffff9c
  432981:	or     DWORD PTR [esi-0x75],0xffffffcd
  432985:	xor    al,BYTE PTR [esi]
  432987:	lea    ebp,[eax-0x73]
  43298a:	add    DWORD PTR [esi+0x48],0xffffffd3
  43298e:	mov    edx,0x334d5f38
  432993:	ror    esi,1
  432995:	mov    bl,0x8b
  432997:	dec    edx
  432998:	je     0x432994
  43299a:	loop   0x4329b4
  43299c:	mov    ebp,0x1eebf746
  4329a1:	call   0xff08:0xc05c84c0
  4329a8:	ror    BYTE PTR [edi-0x2cf7b17d],cl
  4329ae:	(bad)  
  4329af:	cmp    ah,dh
  4329b1:	inc    esi
  4329b2:	data16 (bad) 
  4329b4:	repz in eax,0xb9
  4329b7:	push   ebp
  4329b8:	xchg   DWORD PTR [eax-0x7d],ebx
  4329bb:	dec    ebp
  4329bc:	adc    al,0xb
  4329be:	in     al,dx
  4329bf:	sub    bh,cl
  4329c1:	dec    BYTE PTR [ebx-0x55ac0bab]
	...
  4329db:	add    ah,cl
  4329dd:	mov    ebp,DWORD PTR [ebx]
  4329df:	fild   DWORD PTR ds:0xef7dfee6
  4329e5:	call   0x84d:0x32da8bf7
  4329ec:	push   ecx
  4329ed:	lock std 
  4329ef:	pop    es
  4329f0:	push   ecx
  4329f1:	loope  0x4329d9
  4329f3:	call   0x43bcfc
  4329f8:	xchg   BYTE PTR [edi-0x1d0fba75],bh
  4329fe:	mov    eax,DWORD PTR [ebp-0x4b]
  432a01:	pusha  
  432a02:	scas   eax,DWORD PTR es:[edi]
  432a03:	cli    
  432a04:	test   al,0xe4
  432a06:	lock aas 
  432a08:	mov    ch,0x39
  432a0a:	cmp    ecx,DWORD PTR [eax+edi*1]
  432a0d:	jns    0x4329d6
  432a0f:	or     eax,0x384039f6
  432a14:	scas   al,BYTE PTR es:[edi]
  432a15:	push   ds
  432a16:	sti    
  432a17:	jnp    0x432a93
  432a19:	cmp    dh,BYTE PTR [edi]
  432a1b:	sti    
  432a1c:	add    dl,dl
  432a1e:	xor    eax,0x7bb8b1be
  432a23:	mov    edi,0x2eb4875e
  432a28:	outs   dx,BYTE PTR ds:[esi]
  432a29:	push   cs
  432a2a:	push   es
  432a2b:	pop    edx
  432a2c:	mov    ecx,0x3a2f1a2e
  432a31:	xor    al,BYTE PTR [ecx]
  432a33:	leavew 
  432a35:	dec    ebx
  432a36:	mov    ebx,0x4368bd02
  432a3b:	je     0x432a16
  432a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432a3e:	inc    ecx
  432a3f:	adc    eax,0x0
	...
  432a54:	sub    DWORD PTR [esi-0xac80042],0x6cf584f7
  432a5e:	cmc    
  432a5f:	ds test BYTE PTR ss:[ebx],0x37
  432a64:	pop    ebx
  432a65:	mov    esp,0xf136dcc2
  432a6a:	inc    edx
  432a6b:	pop    ebx
  432a6c:	mov    ?,edx
  432a6e:	(bad)  
  432a6f:	jmp    FWORD PTR [esi]
  432a71:	cli    
  432a72:	push   esi
  432a73:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432a75:	jmp    0x621b:0x84b9500c
  432a7c:	mov    WORD PTR [eax-0x69448adc],cs
  432a82:	or     eax,0xe5ac8150
  432a87:	sub    eax,0xf984867c
  432a8c:	ror    DWORD PTR [edi-0x1a500a2a],0x57
  432a93:	inc    esi
  432a94:	je     0x432afd
  432a96:	mov    ebp,0x5923bafd
  432a9b:	test   BYTE PTR [ebx+eax*4+0x4d7570f2],cl
  432aa2:	adc    dh,BYTE PTR es:[ebp-0x2e]
  432aa6:	call   0x93ef:0xbea13bae
  432aad:	xlat   BYTE PTR ds:[ebx]
  432aae:	int    0x53
  432ab0:	(bad)  
  432ab1:	sbb    ebp,esi
  432ab3:	add    al,0x8b
  432ab5:	jg     0x432b18
  432ab7:	lock add BYTE PTR [eax],al
	...
  432aca:	add    BYTE PTR [eax],al
  432acc:	mov    ah,0x4f
  432ace:	call   0xe842:0xa34e46d0
  432ad5:	sbb    cl,BYTE PTR ds:0x669bf07b
  432adb:	pop    eax
  432adc:	fstp   QWORD PTR [esp+edx*4]
  432adf:	sub    ebx,DWORD PTR ds:0x1e46e1c4
  432ae5:	sbb    ah,BYTE PTR [eax+edi*8]
  432ae8:	xor    ebx,DWORD PTR [ecx+eiz*8+0x78]
  432aec:	push   0xe3ec0bb
  432af1:	scas   al,BYTE PTR es:[edi]
  432af2:	rcr    ecx,0xa6
  432af5:	sbb    al,0x24
  432af7:	pop    eax
  432af8:	gs sbb al,0x2c
  432afb:	sub    al,0x85
  432afd:	scas   al,BYTE PTR es:[edi]
  432afe:	shr    DWORD PTR [edi-0x7d16b03c],cl
  432b04:	stc    
  432b05:	call   0x7b3c:0x8fad41b0
  432b0c:	loope  0x432b1d
  432b0e:	jge    0x432b57
  432b10:	mov    ah,0x8f
  432b12:	jmp    0x345f92c4
  432b17:	(bad)  
  432b18:	mov    esp,0xe75ffad
  432b1d:	jecxz  0x432b12
  432b1f:	outs   dx,BYTE PTR ds:[esi]
  432b20:	repz jl 0x432ae3
  432b23:	test   eax,0x51f4231d
  432b28:	loopne 0x432b79
  432b2a:	add    cl,ch
  432b2c:	or     eax,0x4f0813
	...
  432b41:	add    BYTE PTR [eax],al
  432b43:	add    bl,dh
  432b45:	test   al,0x4f
  432b47:	inc    esi
  432b48:	test   DWORD PTR [ecx-0x534956f3],ebp
  432b4e:	mov    edx,0x812ed99
  432b53:	das    
  432b54:	repz test al,0x4f
  432b57:	jb     0x432af9
  432b59:	mov    bh,0x2c
  432b5b:	test   al,0xb6
  432b5d:	(bad)  
  432b5e:	mov    ebx,0x6cd61d
  432b63:	mul    BYTE PTR gs:[ebx]
  432b66:	cmp    al,0x93
  432b68:	inc    esi
  432b69:	sbb    al,0x85
  432b6b:	gs lock test al,0xfa
  432b6f:	cdq    
  432b70:	scas   eax,DWORD PTR es:[edi]
  432b71:	shl    edi,1
  432b73:	aad    0xf1
  432b75:	lods   al,BYTE PTR ds:[esi]
  432b76:	cli    
  432b77:	ins    DWORD PTR es:[edi],dx
  432b78:	jns    0x432b9d
  432b7a:	sub    BYTE PTR [edx-0x25],dh
  432b7d:	mov    bh,0xa6
  432b7f:	sub    BYTE PTR [ecx-0x1a567b71],bh
  432b85:	mov    eax,DWORD PTR [edi+0x3fc261af]
  432b8b:	jmp    0xe92d1246
  432b90:	mov    dh,0x8f
  432b92:	lea    esp,[ebp+esi*4-0x57]
  432b96:	cli    
  432b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432b98:	mov    ds:0x1e29008f,eax
  432b9d:	and    al,0xf9
  432b9f:	pop    ecx
  432ba0:	mov    dh,0xb4
  432ba2:	xor    eax,0x32c503
	...
  432bbb:	add    BYTE PTR [ebx-0x1dafeaae],ah
  432bc1:	sar    dl,1
  432bc3:	imul   ecx,DWORD PTR [ebp+eiz*1+0x531a8485],0x536350f7
  432bce:	adc    eax,0xfad0a24c
  432bd3:	and    al,0xbb
  432bd6:	mov    eax,DWORD PTR [ebp-0x20]
  432bd9:	dec    ebx
  432bda:	cdq    
  432bdb:	inc    eax
  432bdc:	mov    WORD PTR [eax-0x6f721147],ss
  432be2:	add    BYTE PTR [ebp-0x9701f],cl
  432be8:	fwait
  432be9:	ins    DWORD PTR es:[edi],dx
  432bea:	add    BYTE PTR [eax],al
  432bec:	or     al,0xe9
  432bee:	jae    0x432be9
  432bf0:	jle    0x432c42
  432bf2:	push   edi
  432bf3:	pop    esi
  432bf4:	xchg   ebp,eax
  432bf5:	dec    esi
  432bf6:	cmp    BYTE PTR ds:0x3b75b4,0x4c
  432bfd:	fnsave [ebx]
  432bff:	push   esi
  432c00:	jp     0x432b95
  432c02:	xlat   BYTE PTR ds:[ebx]
  432c03:	inc    ebx
  432c04:	sbb    al,0xfa
  432c06:	cmc    
  432c07:	adc    eax,0x3aa170
  432c0c:	mov    WORD PTR [ebp-0x6c302118],ss
  432c12:	add    BYTE PTR [ebp+0x13],dh
  432c15:	dec    eax
  432c16:	adc    bh,bh
  432c18:	sti    
  432c19:	push   edx
  432c1a:	test   al,al
  432c1c:	shl    BYTE PTR [ebp+0x2579],0x0
	...
  432c33:	add    al,ch
  432c35:	jno    0x432c72
  432c37:	add    ah,bl
  432c39:	imul   eax,DWORD PTR ds:0xfacf3ae8,0x1552a200
  432c43:	lods   al,BYTE PTR ds:[esi]
  432c44:	fmulp  st(7),st
  432c46:	cli    
  432c47:	pop    ebp
  432c48:	mov    ch,0x3e
  432c4a:	dec    ebx
  432c4b:	loopne 0x432cc3
  432c4d:	mov    dh,0x3f
  432c4f:	test   ax,0x89fe
  432c53:	sti    
  432c54:	mov    edx,0x29faaf2c
  432c59:	(bad)  
  432c5b:	cli    
  432c5c:	rol    BYTE PTR [edx+ebp*8+0x3b35b53f],0xc
  432c64:	mov    ds:0xf5bfe851,al
  432c69:	jbe    0x432c66
  432c6b:	jmp    edi
  432c6d:	sub    eax,0xf8ab4be2
  432c72:	(bad)  
  432c73:	cs jne 0x432c7a
  432c76:	fisttp QWORD PTR [eax-0x77256905]
  432c7c:	repz mov ds:0xfa3013d8,al
  432c82:	std    
  432c83:	dec    edi
  432c84:	sub    bl,dh
  432c86:	imul   BYTE PTR [esi]
  432c88:	pusha  
  432c89:	jmp    0x2b7f5703
  432c8e:	sti    
  432c8f:	cli    
  432c90:	cmp    cx,WORD PTR ss:[edi+ecx*8]
  432c95:	mov    ah,0xdc
  432c97:	cmp    BYTE PTR [eax],al
	...
  432ca9:	add    BYTE PTR [eax],al
  432cab:	add    BYTE PTR [edx+0x380bcabf],ah
  432cb1:	bnd jmp 0x20be5d06
  432cb7:	push   eax
  432cb8:	sbb    ah,dh
  432cba:	sub    al,BYTE PTR [edi]
  432cbc:	inc    eax
  432cbd:	jnp    0x432cdf
  432cbf:	push   ebp
  432cc0:	fstp   DWORD PTR gs:[eax]
  432cc3:	push   eax
  432cc4:	stos   DWORD PTR es:[edi],eax
  432cc5:	js     0x432ccb
  432cc7:	bound  ebp,QWORD PTR [esi]
  432cc9:	jb     0x432ce8
  432ccb:	jg     0x432cc6
  432ccd:	mov    ah,0xa8
  432ccf:	mov    BYTE PTR [ebx-0x68],dh
  432cd2:	add    esi,DWORD PTR ss:[edi+0x571f1d8f]
  432cd9:	push   0x8446ef0a
  432cde:	call   DWORD PTR [ebx]
  432ce0:	cmp    BYTE PTR [ebx-0x12],dl
  432ce3:	shl    DWORD PTR [ecx],cl
  432ce5:	push   edx
  432ce6:	int    0xd3
  432ce8:	mov    edi,0xf68f02be
  432ced:	jbe    0x432d55
  432cef:	dec    eax
  432cf0:	mov    ecx,0xb2add6b6
  432cf5:	sbb    al,0xab
  432cf7:	out    0x1,eax
  432cf9:	inc    eax
  432cfa:	pop    edx
  432cfb:	sbb    ebp,esp
  432cfd:	sub    DWORD PTR [ecx-0x232bf5fd],0xcb4c42f6
  432d07:	mov    edi,?
  432d09:	arpl   WORD PTR [esi+0x5e450246],bx
  432d0f:	icebp  
	...
  432d24:	inc    BYTE PTR [ecx-0x7c24fc57]
  432d2a:	je     0x432cf7
  432d2c:	mov    dl,0x3f
  432d2e:	ins    BYTE PTR es:[edi],dx
  432d2f:	retf   0x3fb5
  432d32:	sub    ecx,DWORD PTR [edx]
  432d34:	mov    ch,0xaa
  432d36:	xor    ecx,DWORD PTR [edi-0x3c24c060]
  432d3c:	cmp    cl,BYTE PTR ds:0xe971025
  432d42:	jb     0x432d27
  432d44:	sub    bh,BYTE PTR [eax]
  432d46:	in     eax,0xb7
  432d48:	scas   al,BYTE PTR es:[edi]
  432d49:	sbb    al,0x2a
  432d4b:	and    BYTE PTR [ebp+0x6519231c],al
  432d51:	stos   BYTE PTR es:[edi],al
  432d52:	mov    ebx,0x231cbd2e
  432d57:	sbb    DWORD PTR [ebx-0x15bce671],ebx
  432d5d:	xor    BYTE PTR [esi-0x36],ch
  432d60:	ror    BYTE PTR [esi],cl
  432d62:	add    BYTE PTR [ebp+0x27892dba],ch
  432d68:	shr    BYTE PTR ds:0xa9dd267f,0x68
  432d6f:	stc    
  432d70:	or     al,BYTE PTR [eax+0x59dd2e8d]
  432d76:	lea    esp,[edi]
  432d78:	mov    ds:0xc9cfb3f,al
  432d7d:	adc    DWORD PTR [ebx-0x4b],eax
  432d80:	cmp    edx,esp
  432d82:	or     ebp,DWORD PTR [ecx-0x3c]
  432d85:	test   eax,0xdce5
	...
  432d9a:	add    BYTE PTR [eax],al
  432d9c:	inc    ebp
  432d9d:	dec    esi
  432d9e:	pop    ss
  432d9f:	shl    DWORD PTR [esi+0x3b3afb3f],cl
  432da5:	aam    0xb
  432da7:	sbb    dh,cl
  432da9:	dec    edx
  432daa:	bound  esp,QWORD PTR [eax+0x6c]
  432dad:	jb     0x432e06
  432daf:	sub    ah,BYTE PTR [ebx+0x3f]
  432db2:	add    WORD PTR [ebx],sp
  432db5:	test   eax,0xa4a66251
  432dba:	adc    al,0x99
  432dbc:	mov    esp,0x6c72004f
  432dc1:	cdq    
  432dc2:	xchg   esp,edi
  432dc4:	cmp    BYTE PTR [edi+0x40],0xe9
  432dc8:	pop    edi
  432dca:	push   ss
  432dcb:	sub    DWORD PTR ds:0xf1ca1256,esp
  432dd1:	sub    al,al
  432dd3:	loope  0x432e35
  432dd5:	jge    0x432e27
  432dd7:	call   DWORD PTR fs:[eax+0x1a88ee50]
  432dde:	inc    edx
  432ddf:	xor    esp,eax
  432de1:	fsubr  QWORD PTR [edi]
  432de3:	push   0x7d
  432de5:	xchg   ebx,esi
  432de7:	mov    bh,0xa8
  432de9:	popf   
  432dea:	push   ds
  432deb:	fldenv [esp+ebx*8-0x243bffff]
  432df2:	outs   dx,BYTE PTR ds:[esi]
  432df3:	sub    DWORD PTR [edi+0x7b],ebx
  432df6:	adc    eax,0xaf99a75
  432dfb:	lea    ebx,[edx+0x8d509b]
	...
  432e11:	add    BYTE PTR [eax],al
  432e13:	add    BYTE PTR [ebx+0xfff4ab7],cl
  432e19:	test   BYTE PTR [ecx-0x518021ba],0x4e
  432e20:	iret   
  432e21:	idiv   BYTE PTR [edi-0x3bec3b20]
  432e27:	or     al,0xba
  432e29:	call   0xeb2e:0xd71566c1
  432e30:	outs   dx,BYTE PTR ds:[esi]
  432e31:	cli    
  432e32:	dec    BYTE PTR [edx+ecx*2+0x5b8d5090]
  432e39:	mov    BYTE PTR [eax-0x1],dl
  432e3c:	iret   
  432e3d:	cmc    
  432e3e:	add    DWORD PTR [esi-0x72],0x8f4eae7f
  432e45:	idiv   BYTE PTR [edi-0x3bec9b20]
  432e4b:	or     al,0x7a
  432e4d:	fwait
  432e4e:	shl    DWORD PTR [esi-0x2b],0xd6
  432e52:	sbb    bl,BYTE PTR [esi+0x77]
  432e55:	push   ebx
  432e56:	dec    esi
  432e57:	mov    ebp,DWORD PTR [eax]
  432e59:	mov    al,0x2
  432e5b:	mov    ebx,DWORD PTR [edx-0x39]
  432e5e:	or     esi,0x84fec3b3
  432e64:	mov    eax,fs
  432e66:	add    eax,DWORD PTR [ebx+0xee34ee3]
  432e6c:	ss xchg edx,eax
  432e6e:	push   eax
  432e6f:	call   0x3c0f89
  432e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432e75:	fs test edi,edi
	...
  432e8c:	push   0xb53de883
  432e91:	dec    eax
  432e92:	ds sti 
  432e94:	cmp    esi,esi
  432e96:	mov    dl,0x2
  432e98:	cs mov eax,0x85f2ca8b
  432e9e:	or     al,0x7f
  432ea0:	jmp    0xb2f9:0x3805b2e0
  432ea7:	add    DWORD PTR [edx-0x2d15a002],eax
  432ead:	or     BYTE PTR [edx+eax*1-0x357448a1],cl
  432eb4:	ret    0xdfa5
  432eb7:	cs cmc 
  432eb9:	outs   dx,DWORD PTR ds:[esi]
  432eba:	inc    edx
  432ebb:	add    al,0xb5
  432ebd:	jnp    0x432e4c
  432ebf:	in     al,dx
  432ec0:	add    al,0x86
  432ec2:	(bad)  
  432ec3:	clc    
  432ec4:	cmp    BYTE PTR [edi],bl
  432ec6:	mov    dl,0x3
  432ec8:	out    0x78,eax
  432eca:	sub    al,0x3c
  432ecc:	cmp    BYTE PTR [esi-0x4d],al
  432ecf:	adc    ebx,DWORD PTR [edi]
  432ed1:	mov    ecx,0xcfff67d8
  432ed6:	(bad)  
  432ed7:	dec    DWORD PTR [ecx+edi*4]
  432eda:	es ds cmc 
  432edd:	mov    eax,0x5df087fe
  432ee2:	sub    al,0xf
  432ee4:	or     edx,ecx
  432ee6:	mov    esp,0xacb8f768
  432eeb:	call   FWORD PTR [edx+0x37]
  432eee:	test   al,0xff
	...
  432f04:	dec    edx
  432f05:	xor    al,0x3f
  432f07:	or     ebp,DWORD PTR [eax]
  432f09:	in     al,dx
  432f0a:	aas    
  432f0b:	cmp    BYTE PTR [eax-0x428b0073],0x21
  432f12:	or     DWORD PTR [esi-0x4c],esp
  432f15:	xor    DWORD PTR [ecx-0x5],edx
  432f18:	lds    esi,FWORD PTR [edx]
  432f1a:	ret    0x7afa
  432f1d:	(bad)  
  432f1e:	mov    al,0x43
  432f20:	cmp    BYTE PTR [esi-0x3025fcad],bl
  432f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432f27:	xlat   BYTE PTR ds:[ebx]
  432f28:	cwde   
  432f29:	(bad)  
  432f2a:	aas    
  432f2b:	add    al,0x67
  432f2d:	aaa    
  432f2e:	aas    
  432f2f:	lods   eax,DWORD PTR ds:[esi]
  432f30:	mov    al,0x8f
  432f32:	dec    edi
  432f33:	add    al,0x53
  432f35:	(bad)  
  432f36:	mov    dl,0x19
  432f38:	cdq    
  432f39:	sub    BYTE PTR [ecx],0x4
  432f3c:	xor    ch,BYTE PTR [eax-0x68b7c095]
  432f42:	outs   dx,BYTE PTR ds:[esi]
  432f43:	push   es
  432f44:	push   ebx
  432f45:	nop
  432f46:	pop    esi
  432f47:	dec    esi
  432f48:	mov    esi,0x5e475e7f
  432f4d:	rcr    BYTE PTR [edx],cl
  432f4f:	mov    esp,DWORD PTR [ebp-0x5717c4ee]
  432f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432f56:	call   0x1b3575e
  432f5b:	add    al,0xad
  432f5d:	(bad)
  432f61:	cmp    DWORD PTR [ebx+0x3f],ebx
  432f64:	cmp    al,0xd
  432f66:	or     eax,0x2
	...
  432f7b:	add    BYTE PTR [ebp+0x44648f],dh
  432f81:	xchg   esp,eax
  432f82:	iret   
  432f83:	or     ebp,DWORD PTR [esi+0x7c]
  432f86:	or     eax,0xf78ff516
  432f8b:	inc    ebx
  432f8c:	call   edx
  432f8e:	js     0x432f95
  432f90:	call   edx
  432f92:	mov    edx,0xed6bc93e
  432f97:	mov    al,BYTE PTR [ebp-0x5a]
  432f9a:	pushf  
  432f9b:	out    0xae,eax
  432f9d:	mov    bh,0xfa
  432f9f:	jecxz  0x432fe0
  432fa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432fa2:	mov    ch,0x43
  432fa4:	test   BYTE PTR [ecx+eax*8+0x8f7590],0x60
  432fac:	sti    
  432fad:	or     DWORD PTR [ecx+0x90d567],0x241141e9
  432fb7:	jmp    0x432f6f
  432fb9:	(bad)
  432fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432fbe:	cli    
  432fbf:	jmp    0xab9d00f3
  432fc4:	mov    esi,0xa172528f
  432fc9:	mov    bh,0xe
  432fcb:	jmp    0x2635bf86
  432fd0:	int    0x8d
  432fd2:	add    DWORD PTR ds:0x53e841bb,ebx
  432fd8:	sbb    al,0xa8
  432fda:	cli    
  432fdb:	bound  edi,QWORD PTR [eax+0x49]
  432fde:	mov    esi,0xe5
	...
  432ff3:	add    BYTE PTR [esi-0x4b324e56],dh
  432ff9:	pop    DWORD PTR [eax]
  432ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432ffc:	mov    al,0x67
  432ffe:	lea    ebp,[ecx]
  433000:	mov    ecx,0xdb038eb7
  433005:	test   al,0x86
  433007:	aaa    
  433008:	loope  0x432fb9
  43300a:	and    BYTE PTR [esi-0x35],bl
  43300d:	inc    ecx
  43300e:	repnz sub bh,BYTE PTR [ecx-0x5d3cefe5]
  433015:	adc    al,BYTE PTR [ebx+0x8fb9e5]
  43301b:	mov    ds:0x77e79f3f,eax
  433020:	jmp    0x432fca
  433022:	cli    
  433023:	aaa    
  433024:	mul    DWORD PTR [ebp+0x4c3fd16e]
  43302a:	and    al,0xf1
  43302c:	cmp    eax,0x37e773d0
  433031:	rol    BYTE PTR [ebx],1
  433033:	mov    ecx,0x145125
  433038:	(bad)
  43303c:	sub    esi,DWORD PTR [edi+0xa]
  43303f:	call   0x3a957e
  433044:	ss jge 0x432fca
  433047:	lock jbe 0x43305e
  43304a:	aas    
  43304b:	adc    al,0xe4
  43304d:	add    BYTE PTR [edi-0x68e71401],ch
  433053:	sub    BYTE PTR [esi],cl
  433055:	xchg   ecx,eax
  433056:	add    BYTE PTR [esi+0x0],bl
	...
  433069:	add    BYTE PTR [eax],al
  43306b:	add    BYTE PTR [esi],bl
  43306d:	cwde   
  43306e:	add    BYTE PTR [esi-0x3d],dl
  433071:	bound  esi,QWORD PTR [esp-0x4]
  433075:	pop    ss
  433076:	icebp  
  433077:	jmp    DWORD PTR [eax-0x7317f549]
  43307d:	lods   eax,DWORD PTR ds:[esi]
  43307e:	cmc    
  43307f:	inc    DWORD PTR [edi+0x63]
  433082:	test   edi,edi
  433084:	stos   BYTE PTR es:[edi],al
  433085:	xchg   dh,ch
  433087:	xchg   ah,dh
  433089:	mov    es,WORD PTR [eax]
  43308b:	add    BYTE PTR [esi+0x2b850cdc],bl
  433091:	call   0xb81bbb9e
  433096:	push   es
  433097:	(bad)  
  433098:	rol    BYTE PTR [edi-0x61b287d],cl
  43309e:	mov    dl,0xff
  4330a0:	jmp    0x4330b8
  4330a2:	mov    edi,0x84e4a5f
  4330a7:	add    BYTE PTR [edi],bh
  4330a9:	mov    edx,0x87c074f5
  4330ae:	xor    ecx,0xffffffab
  4330b1:	out    0x1e,eax
  4330b3:	adc    al,0xab
  4330b5:	out    0x1e,eax
  4330b7:	adc    al,0xf4
  4330b9:	sbb    ebx,DWORD PTR [esi]
  4330bb:	call   FWORD PTR [ebx-0x87a27ea]
  4330c1:	in     eax,0x33
  4330c3:	div    BYTE PTR [ebp+0x3afdec34]
  4330c9:	mov    dh,0x0
  4330cb:	je     0x4330ae
  4330cd:	add    eax,0xba8a
	...
  4330e2:	add    BYTE PTR [eax],al
  4330e4:	fnstcw WORD PTR [eax+0x7436fffe]
  4330ea:	sbb    BYTE PTR [ebx+0x2e],dl
  4330ed:	ins    BYTE PTR es:[edi],dx
  4330ee:	sub    al,0xfb
  4330f0:	dec    ebx
  4330f1:	lods   eax,DWORD PTR ds:[esi]
  4330f2:	cmp    eax,DWORD PTR [ebp-0x78f4c612]
  4330f8:	jno    0x43308c
  4330fa:	sbb    BYTE PTR [edi-0x17bacf1a],al
  433100:	ror    DWORD PTR [esi],1
  433102:	cmp    al,0xfb
  433104:	and    BYTE PTR [ecx],0x45
  433107:	call   0xfb7f54fc
  43310c:	jp     0x4330a2
  43310e:	mov    DWORD PTR [edi+0xaf86e],edi
  433114:	pusha  
  433115:	and    DWORD PTR [ebx],ebp
  433117:	push   ecx
  433118:	fs mov DWORD PTR fs:[ebp-0x57],esi
  43311d:	pop    ebp
  43311e:	mov    ecx,edi
  433120:	stos   DWORD PTR es:[edi],eax
  433121:	xor    ah,bh
  433123:	std    
  433124:	stos   BYTE PTR es:[edi],al
  433125:	mov    ecx,0x1d2088fd
  43312a:	or     al,0x84
  43312c:	sub    DWORD PTR [ecx+0x4338fffe],edi
  433132:	or     al,0x8a
  433134:	xor    DWORD PTR [ecx+0x722efffe],edi
  43313a:	daa    
  43313b:	pop    esi
  43313c:	jnp    0x433190
  43313e:	cmp    al,0x84
  433140:	jne    0x433126
  433142:	add    DWORD PTR [edi+0x7d],edi
  433145:	bound  ebp,QWORD PTR [eax]
  433147:	jge    0x433149
	...
  433159:	add    BYTE PTR [eax],al
  43315b:	add    BYTE PTR [eax],dh
  43315d:	sub    ch,bl
  43315f:	std    
  433160:	pop    edx
  433161:	mov    ecx,0x8fb18389
  433166:	call   0x7083e66e
  43316b:	into   
  43316c:	dec    edx
  43316d:	sbb    DWORD PTR [edi+ecx*1+0x3c52fe4d],ebp
  433174:	cs pop ss
  433176:	inc    edx
  433177:	out    0x28,eax
  433179:	mov    ds:0x97b57be8,eax
  43317e:	jmp    0xd9e31386
  433183:	into   
  433184:	and    dl,BYTE PTR [edi]
  433186:	sub    al,0x8
  433188:	jp     0x4331a0
  43318a:	cmp    al,0xc
  43318c:	or     eax,0xfe3b9ab9
  433191:	push   ss
  433192:	dec    esp
  433193:	cmp    BYTE PTR [edi-0x171f865e],al
  433199:	mov    ds:0xb7ee8ee8,al
  43319e:	add    dl,ah
  4331a0:	fbld   TBYTE PTR [edx+0x66bac15f]
  4331a6:	stos   DWORD PTR es:[edi],eax
  4331a7:	mov    al,0xa8
  4331a9:	mov    ds:0x4d3a3c13,al
  4331ae:	in     eax,0x2b
  4331b0:	sbb    ecx,0xffffff89
  4331b3:	cmp    esi,DWORD PTR [edx]
  4331b5:	and    eax,0x812f03f1
  4331ba:	outs   dx,BYTE PTR ds:[esi]
  4331bb:	jnp    0x433196
  4331bd:	(bad)  
  4331be:	jmp    0x4331c6
	...
  4331d3:	add    BYTE PTR [edx],dh
  4331d5:	sbb    al,0xe1
  4331d7:	mov    ?,eax
  4331d9:	xchg   ebx,eax
  4331da:	push   ecx
  4331db:	imul   eax,DWORD PTR [edi-0x5e],0x59
  4331df:	(bad)  
  4331e0:	clc    
  4331e1:	xchg   edi,eax
  4331e2:	scas   al,BYTE PTR es:[edi]
  4331e3:	lods   al,BYTE PTR cs:[esi]
  4331e5:	cmp    DWORD PTR [edx-0x4f],ecx
  4331e8:	mov    edx,0x6fe138b7
  4331ed:	mov    ds:0xcd6dd999,al
  4331f2:	jmp    eax
  4331f4:	mov    dh,0x3c
  4331f6:	xchg   DWORD PTR ds:0xbf0bb33a,edi
  4331fc:	cmp    ebx,DWORD PTR [eax+edx*1]
  4331ff:	mov    dh,0x33
  433201:	test   al,0xf1
  433203:	outs   dx,BYTE PTR ds:[esi]
  433204:	dec    ecx
  433205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433206:	cli    
  433207:	jmp    0xfdc04ac5
  43320c:	pop    edx
  43320d:	sub    eax,0x415cf785
  433212:	xchg   DWORD PTR [esi],ebp
  433214:	leave  
  433215:	icebp  
  433216:	cld    
  433217:	out    dx,al
  433218:	iret   
  433219:	or     eax,eax
  43321b:	pop    ebp
  43321c:	push   ebp
  43321d:	(bad)  
  43321f:	lock mov dh,0x8f
  433222:	aaa    
  433223:	fldcw  WORD PTR ds:0xb6eb2c16
  433229:	(bad)  
  43322a:	or     esi,DWORD PTR [ecx+eiz*4]
  43322d:	push   edx
  43322e:	lea    esp,[esi-0x36]
  433231:	nop
  433232:	add    cl,ch
  433234:	add    DWORD PTR [edi],edx
  433236:	dec    ebp
  433237:	lods   eax,DWORD PTR ds:[esi]
	...
  43324c:	inc    ecx
  43324d:	dec    esp
  43324e:	adc    BYTE PTR [ecx-0x6105239e],dl
  433254:	xor    eax,DWORD PTR [esp+ecx*1+0x64]
  433258:	aaa    
  433259:	imul   edi,esi,0xffffffe8
  43325c:	mov    dh,0x8
  43325e:	cmp    BYTE PTR [eax+0x75],dh
  433261:	cdq    
  433262:	xchg   BYTE PTR [ecx+ecx*8],ah
  433265:	mov    bh,0x38
  433267:	aas    
  433268:	fbld   TBYTE PTR [edx+edi*8+0x4508caf4]
  43326f:	stc    
  433270:	fiadd  WORD PTR [ecx]
  433272:	mov    ch,0x5e
  433274:	mov    edi,0x2b514508
  433279:	push   ebx
  43327a:	hlt    
  43327b:	mov    bh,0xaf
  43327d:	pop    edi
  43327e:	sti    
  43327f:	add    BYTE PTR [ecx],ch
  433281:	xchg   ebp,eax
  433282:	call   0xf7a7ec83
  433287:	pop    ebx
  433288:	test   DWORD PTR [eax-0x76f600b2],0x754475f7
  433292:	in     eax,dx
  433293:	and    eax,0x5e5765a3
  433298:	xchg   ebp,eax
  433299:	dec    edx
  43329a:	or     al,0x0
  43329c:	imul   edx,DWORD PTR [edx],0xbf4f51ec
  4332a2:	xor    DWORD PTR [ebp+0x24],0x9815f5be
  4332a9:	jp     0x4332eb
  4332ab:	add    BYTE PTR [ebp+0x80f6cf],dl
	...
  4332c1:	add    BYTE PTR [eax],al
  4332c3:	add    bl,dl
  4332c5:	mov    eax,DWORD PTR [ebx-0x7b609732]
  4332cb:	push   ds
  4332cc:	mov    BYTE PTR [edx+0x74],al
  4332cf:	sub    al,0xb7
  4332d1:	pop    esi
  4332d2:	adc    edi,0x58
  4332d5:	inc    edx
  4332d6:	je     0x4332ef
  4332d8:	add    WORD PTR [ebx+ebx*8-0x41fa5468],0x7ed8
  4332e2:	pop    es
  4332e3:	mov    esi,0x75b9b2f7
  4332e8:	fcmove st,st(2)
  4332ea:	xor    al,BYTE PTR [edx+edi*4]
  4332ed:	icebp  
  4332ee:	out    0x80,eax
  4332f0:	xchg   BYTE PTR [esp+esi*2+0x1911dd0a],cl
  4332f7:	inc    esi
  4332f8:	sbb    BYTE PTR [ebx+0x75],al
  4332fb:	(bad)  
  4332fc:	pop    edi
  4332fd:	push   ebp
  4332fe:	test   ecx,ecx
  433300:	mov    BYTE PTR [ebx+0x9104581],ah
  433306:	xor    al,0x1
  433308:	or     al,0xa6
  43330a:	cmp    esi,DWORD PTR [ebp-0x4b]
  43330d:	add    ch,bh
  43330f:	dec    esp
  433310:	mov    ebp,0xec8000ba
  433315:	dec    ecx
  433316:	fidiv  WORD PTR [esi+ecx*1+0x33]
  43331a:	mov    al,0x0
  43331c:	mov    ah,0xcc
  43331e:	loopne 0x433371
  433320:	push   edx
  433321:	mov    ebx,0xb6f50eb6
  433326:	jns    0x4332e8
	...
  43333c:	enter  0xd09f,0xfa
  433340:	mov    al,ds:0xb5401502
  433345:	lea    eax,[edx]
  433347:	daa    
  433348:	repz sbb al,0xc3
  43334b:	or     ebp,DWORD PTR [edi+esi*4]
  43334e:	mov    eax,edx
  433350:	push   cs
  433351:	mov    ah,0xf3
  433353:	mov    edi,0xbe45fd73
  433358:	mov    ebp,0x1186c9b6
  43335d:	xor    eax,0x61663c23
  433362:	stos   BYTE PTR es:[edi],al
  433363:	cmp    edx,DWORD PTR [edx+0x38d6f559]
  433369:	jae    0x4333ab
  43336b:	dec    edi
  43336c:	test   ecx,esp
  43336e:	or     DWORD PTR [eax-0x3d],edx
  433371:	jbe    0x433377
  433373:	das    
  433374:	cmc    
  433375:	jne    0x4332fc
  433377:	les    edi,FWORD PTR [ecx+0x2cd7ba1f]
  43337d:	imul   esi,DWORD PTR [eax],0xffffff89
  433380:	jo     0x43337c
  433382:	add    DWORD PTR [ebp+0x79],0xaa4ed559
  433389:	pushf  
  43338a:	push   es
  43338b:	mov    DWORD PTR [eax],esp
  43338d:	cmc    
  43338e:	aaa    
  43338f:	adc    eax,0xffbebc25
  433394:	cmp    ecx,ebp
  433396:	test   eax,0x298fc702
  43339b:	sub    dl,BYTE PTR [ebx-0x70]
  43339e:	jmp    0x4333a6
	...
  4333b3:	add    BYTE PTR [ebx],dl
  4333b5:	cmp    BYTE PTR [ebx+0x4b27ec2b],0x38
  4333bc:	outs   dx,BYTE PTR ds:[esi]
  4333bd:	and    eax,0xb7f88c1d
  4333c2:	push   eax
  4333c3:	xor    eax,ebp
  4333c5:	popf   
  4333c6:	xor    DWORD PTR [edx-0x50d9a549],ecx
  4333cc:	push   0xffffffab
  4333ce:	repnz mov eax,?
  4333d1:	lahf   
  4333d2:	push   0xde248ffb
  4333d7:	cmp    BYTE PTR [eax+0x1abe09a3],al
  4333dd:	pop    ecx
  4333de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4333df:	das    
  4333e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4333e1:	lods   al,BYTE PTR ds:[esi]
  4333e2:	ins    DWORD PTR es:[edi],dx
  4333e3:	mov    esi,0x2fa40b1e
  4333e8:	inc    eax
  4333e9:	sbb    al,0xe1
  4333eb:	add    bh,BYTE PTR [eax]
  4333ed:	push   edi
  4333ee:	call   0xe56877ed
  4333f3:	repnz cmp ch,BYTE PTR [ebx+0x36c42beb]
  4333fa:	retf   
  4333fb:	aaa    
  4333fc:	cmp    al,0x56
  4333fe:	in     eax,dx
  4333ff:	cli    
  433400:	and    esp,DWORD PTR ds:0xa7a736f0
  433406:	cli    
  433407:	sahf   
  433408:	int3   
  433409:	sahf   
  43340a:	mov    ebp,0x9d24ce65
  43340f:	les    edi,FWORD PTR [edi-0x2d2b66dc]
  433415:	xor    cl,BYTE PTR [edx]
  433417:	add    BYTE PTR ss:[eax],al
	...
  43342a:	add    BYTE PTR [eax],al
  43342c:	scas   al,BYTE PTR es:[edi]
  43342d:	sahf   
  43342e:	adc    edi,DWORD PTR [eax]
  433430:	xor    dl,BYTE PTR [ebp-0x13]
  433433:	mov    dh,al
  433435:	mov    ds:0xca2b179,eax
  43343a:	add    BYTE PTR ds:0x815090c1,ch
  433440:	jl     0x433473
  433442:	cli    
  433443:	cs push cx
  433446:	add    al,0x27
  433448:	mov    cl,0x6a
  43344a:	xchg   DWORD PTR [edi-0x19e3e98e],ebp
  433450:	aas    
  433451:	push   esp
  433452:	hlt    
  433453:	test   eax,0xc7085131
  433458:	das    
  433459:	push   esp
  43345a:	fmul   st(7),st
  43345c:	inc    ecx
  43345d:	push   ecx
  43345e:	or     al,0x62
  433460:	je     0x433430
  433462:	jle    0x433475
  433464:	mov    dh,0x23
  433466:	or     dh,BYTE PTR [ecx-0x48776cf6]
  43346c:	mov    eax,0x6b2705b6
  433471:	mov    dh,bh
  433473:	adc    DWORD PTR [ebp-0x4e10be2f],esi
  433479:	fild   WORD PTR [eax]
  43347b:	xchg   esi,eax
  43347c:	out    dx,eax
  43347d:	(bad)  
  43347e:	mov    ebp,0x8744b6e5
  433483:	aad    0x37
  433485:	stos   DWORD PTR es:[edi],eax
  433486:	(bad)  
  433489:	inc    eax
  43348a:	sti    
  43348b:	pop    esp
  43348c:	ror    DWORD PTR [esi*2+0xd9],0x0
	...
  4334a4:	out    0xc4,eax
  4334a6:	cs (bad) 
  4334a8:	mov    ?,WORD PTR [esi+0x13a3bef9]
  4334ae:	sar    BYTE PTR ds:0xb5451514,0x3f
  4334b5:	dec    esp
  4334b6:	clc    
  4334b7:	adc    ebx,edx
  4334b9:	dec    esp
  4334ba:	mov    ch,bh
  4334bc:	mov    cl,0x9a
  4334be:	je     0x43345d
  4334c0:	jmp    0x433444
  4334c2:	test   dl,bh
  4334c4:	jbe    0x433463
  4334c6:	xor    eax,0x36ed4f00
  4334cb:	cmp    ah,dl
  4334cd:	xchg   edx,eax
  4334ce:	je     0x433507
  4334d0:	lods   al,BYTE PTR ds:[esi]
  4334d1:	adc    al,cl
  4334d3:	push   DWORD PTR [ebx+edx*4]
  4334d6:	dec    ebp
  4334d7:	(bad)  
  4334d8:	sbb    ecx,DWORD PTR [edx]
  4334da:	lock cmp ebx,edi
  4334dd:	in     al,dx
  4334de:	and    ch,BYTE PTR [eax+0x5c]
  4334e1:	xchg   ecx,eax
  4334e2:	adc    BYTE PTR [eax],al
  4334e4:	das    
  4334e5:	ret    0xff50
  4334e8:	add    DWORD PTR [ecx],0x104c400b
  4334ee:	shl    BYTE PTR [ebp+0x6c],0xcb
  4334f2:	(bad)  
  4334f3:	jmp    0x8343c591
  4334f8:	test   BYTE PTR [ebp-0x18],ah
  4334fb:	add    al,BYTE PTR [edi]
  4334fd:	arpl   di,si
  4334ff:	mov    eax,esp
  433501:	retf   0x63e2
  433504:	xor    ah,BYTE PTR [ebx-0x9]
  433507:	inc    DWORD PTR [eax]
	...
  433519:	add    BYTE PTR [eax],al
  43351b:	add    BYTE PTR [ecx+0x325be860],ah
  433521:	arpl   di,si
  433523:	call   DWORD PTR [ecx+0x3253e86c]
  433529:	arpl   di,si
  43352b:	mov    edx,DWORD PTR [ebx-0x3d]
  43352e:	pop    eax
  43352f:	pop    ebx
  433530:	inc    ebp
  433531:	push   edx
  433532:	add    al,0x0
  433534:	mov    dl,0x6
  433536:	lock cmp BYTE PTR [edx-0x6dfe8c69],0x13
  43353e:	ss das 
  433540:	mov    eax,ds:0xb573e90
  433545:	loopne 0x433565
  433547:	or     al,0xa2
  433549:	bound  edx,QWORD PTR ds:0xfad0bf8c
  43354f:	test   BYTE PTR [ebp*8-0x554a75eb],cl
  433556:	hlt    
  433557:	xor    DWORD PTR [ebp-0x7e],0x10
  43355b:	cmp    al,0xd5
  43355d:	call   0x3bfa:0x98ac3c0e
  433564:	rcr    BYTE PTR [esi+eax*1-0x55d34c4],0x3b
  43356c:	sar    BYTE PTR [ebx+0x41b4affa],cl
  433572:	(bad)  
  433573:	sub    eax,0x440e475
  433578:	mov    ch,0xe3
  43357a:	xchg   esp,ebp
  43357c:	ss inc edx
  43357e:	adc    al,0x2f
	...
  433594:	ins    BYTE PTR es:[edi],dx
  433595:	add    eax,0xf33cfaf0
  43359a:	sub    cl,BYTE PTR [eax+0x7d876cf8]
  4335a0:	inc    ebp
  4335a1:	pop    ds
  4335a2:	ret    
  4335a3:	idiv   DWORD PTR [ebx+ebp*8+0x6]
  4335a7:	or     edi,DWORD PTR [ebx]
  4335a9:	mov    esp,0xe4b5fffd
  4335ae:	daa    
  4335af:	(bad)  
  4335b0:	out    0x5f,eax
  4335b2:	test   DWORD PTR [ecx+eiz*1+0x22],0xc5d18005
  4335ba:	hlt    
  4335bb:	je     0x43357a
  4335bd:	lods   eax,DWORD PTR ds:[esi]
  4335be:	shl    ebx,0xc
  4335c1:	mov    ds:0x2bb5fffd,eax
  4335c6:	jmp    0x4335e2
  4335c8:	aas    
  4335c9:	lods   al,BYTE PTR ds:[esi]
  4335ca:	repnz cmp edi,DWORD PTR [edx-0x4aff9dcd]
  4335d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4335d2:	xchg   DWORD PTR [ebp-0x1f],eax
  4335d5:	fdivr  QWORD PTR [ecx+0x3e638f3]
  4335db:	test   edi,eax
  4335dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4335de:	(bad)  
  4335df:	jmp    FWORD PTR [esi]
  4335e1:	(bad)  
  4335e2:	sbb    al,0xc
  4335e4:	xchg   edx,eax
  4335e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4335e6:	push   0x6490acb6
  4335eb:	mov    edi,0xf31590cf
  4335f0:	and    ebx,DWORD PTR [edx-0x49c8fb17]
  4335f6:	call   0x4335fe
	...
  43360b:	add    BYTE PTR [ebp-0x401b4ef1],dh
  433611:	adc    al,0x98
  433613:	add    esi,DWORD PTR [ebp+0x288fd18f]
  433619:	push   eax
  43361a:	jmp    0xb292eac8
  43361f:	sub    esp,DWORD PTR [ebx+0x3934499a]
  433625:	shl    cl,1
  433627:	jg     0x43364b
  433629:	nop
  43362a:	jmp    0x3398ad32
  43362f:	add    ebx,DWORD PTR [esi+ebx*8-0x18]
  433633:	add    esi,DWORD PTR [ebp-0x7c2b14db]
  433639:	mov    ds:0x39d0c92,al
  43363e:	fs ret 
  433640:	sub    dh,BYTE PTR [ebx-0x64e1cb10]
  433646:	ins    BYTE PTR es:[edi],dx
  433647:	inc    ebx
  433648:	mov    eax,ds:0xcbe2388
  43364d:	xchg   ecx,eax
  43364e:	add    BYTE PTR [edi+0x3de98fb5],cl
  433654:	js     0x4335f0
  433656:	call   0xda987d5d
  43365b:	add    esp,DWORD PTR [edi]
  43365d:	fcom   DWORD PTR [ecx+eax*4+0x75]
  433661:	(bad)  
  433662:	push   cs
  433663:	cmp    esp,DWORD PTR [edi-0x7e]
  433666:	ret    0x31f8
  433669:	lock mov eax,ds:0x5d2c7
  43366f:	sub    al,0x0
	...
  433681:	add    BYTE PTR [eax],al
  433683:	add    BYTE PTR [ecx-0x462ebbf4],al
  433689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43368a:	in     al,0xa7
  43368c:	xchg   BYTE PTR [esi-0x6e93567d],dl
  433692:	cli    
  433693:	sub    al,0xe6
  433695:	(bad)  
  433697:	mov    ?,WORD PTR [ebp-0x796d2ed7]
  43369d:	test   DWORD PTR [edx-0x7fee39dc],esi
  4336a3:	popa   
  4336a4:	xor    al,0x4f
  4336a6:	add    BYTE PTR [edx+0x5d4d5743],al
  4336ac:	cmp    al,0x48
  4336ae:	sbb    ah,0xa4
  4336b1:	(bad)  
  4336b2:	jne    0x433655
  4336b4:	pop    edx
  4336b5:	mov    esi,DWORD PTR [ebp+eiz*4+0x52]
  4336b9:	xchg   esp,eax
  4336ba:	je     0x433665
  4336bc:	dec    edx
  4336bd:	xchg   DWORD PTR [ebp+edi*8+0x62],esi
  4336c1:	jo     0x433738
  4336c3:	add    al,0xca
  4336c5:	push   esp
  4336c6:	or     BYTE PTR [edx],al
  4336c8:	out    dx,al
  4336c9:	sbb    bh,al
  4336cb:	in     al,dx
  4336cc:	cld    
  4336cd:	js     0x433735
  4336cf:	in     al,0x4e
  4336d1:	test   BYTE PTR [ecx+ebp*4-0x11bbf34a],0xb9
  4336d9:	aas    
  4336da:	sti    
  4336db:	fcomp  QWORD PTR [edx+0x3de9408a]
  4336e1:	iret   
  4336e2:	je     0x4336c8
  4336e4:	mov    edx,DWORD PTR [eax+edi*8+0x6a]
	...
  4336fc:	in     al,dx
  4336fd:	test   eax,0x77b2af04
  433702:	and    dl,dl
  433704:	out    dx,al
  433705:	adc    eax,DWORD PTR [edx]
  433707:	(bad)  
  433708:	cmc    
  433709:	mov    eax,ds:0x96b1e587
  43370e:	inc    esp
  43370f:	add    ah,dh
  433711:	sbb    BYTE PTR [ebp-0x10],bh
  433714:	fwait
  433715:	sbb    al,0x7d
  433717:	lock (bad) 
  433719:	fiadd  WORD PTR [edx]
  43371b:	cmovle edx,DWORD PTR [eax-0xa]
  43371f:	call   DWORD PTR [ebx]
  433721:	rol    BYTE PTR [ecx-0x4245abbb],0x3
  433728:	fstp   DWORD PTR [ebx-0x6eb136ab]
  43372e:	add    BYTE PTR [esi+0x27],dl
  433731:	pop    ebp
  433732:	dec    edi
  433733:	xor    ebx,DWORD PTR [edx+eiz*4-0xb]
  433737:	cmp    eax,ebx
  433739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43373a:	or     cl,BYTE PTR [edi]
  43373c:	sbb    al,BYTE PTR [esi]
  43373e:	add    BYTE PTR [eax],al
  433740:	mov    edx,es
  433742:	or     DWORD PTR [eax+edi*4-0x7d],0xd530c82
  43374a:	stc    
  43374b:	and    BYTE PTR [ecx+0x5c04be87],cl
  433751:	mov    edx,0x6bdc67e1
  433756:	xor    BYTE PTR [ebx+0x56],dh
  433759:	or     eax,0x88082df9
  43375e:	cmp    cl,0x0
	...
  433771:	add    BYTE PTR [eax],al
  433773:	add    BYTE PTR [edx-0x28],ah
  433776:	push   ss
  433777:	adc    ch,0xd3
  43377a:	imul   eax,DWORD PTR ds:0x77396b9c,0xa551101e
  433784:	mov    WORD PTR [edx+0x5],gs
  433787:	ja     0x4337a2
  433789:	or     eax,0x87895ff9
  43378e:	cmp    cl,0x86
  433791:	(bad)  
  433792:	aaa    
  433793:	mov    bh,BYTE PTR ds:0x5c04e254
  433799:	ins    BYTE PTR es:[edi],dx
  43379a:	pop    es
  43379b:	xor    BYTE PTR [ebp+0x430af6bc],0xe6
  4337a2:	sub    eax,0x8c635c7
  4337a7:	xor    dh,0x96
  4337aa:	add    al,0xd6
  4337ac:	xor    eax,0x230af6e0
  4337b1:	in     eax,0x2d
  4337b3:	(bad)  
  4337b4:	xor    eax,0x77800905
  4337b9:	mov    dh,0x48
  4337bb:	add    al,0xe5
  4337bd:	retf   
  4337be:	add    al,0xd1
  4337c0:	sub    eax,0x2d00f46a
  4337c5:	jp     0x4337bb
  4337c7:	std    
  4337c8:	aaa    
  4337c9:	out    0x1,al
  4337cb:	out    0xb6,eax
  4337cd:	add    BYTE PTR cs:[eax],dh
  4337d0:	cli    
  4337d1:	in     ax,dx
  4337d3:	jnp    0x4337a6
  4337d5:	call   0x0:0x7dff
	...
  4337ec:	out    dx,al
  4337ed:	cmp    DWORD PTR [ecx],esi
  4337ef:	sti    
  4337f0:	push   cs
  4337f1:	loop   0x43383b
  4337f3:	add    al,0xbb
  4337f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4337f6:	sar    BYTE PTR [ebp+0x447ba6ad],1
  4337fc:	cdq    
  4337fd:	sahf   
  4337fe:	fwait
  4337ff:	mov    edi,0x73d8e6b6
  433804:	mov    eax,ds:0x3b5f6e4e
  433809:	jno    0x433888
  43380b:	lock cmp BYTE PTR [eax-0x5d5ef48],al
  433812:	loop   0x43381f
  433814:	and    al,BYTE PTR [edx]
  433816:	jecxz  0x433823
  433818:	or     eax,0x12fb2fcd
  43381d:	sbb    eax,0xd5b7e746
  433822:	ds pop edx
  433824:	imul   DWORD PTR [ebp-0x70d1ab02]
  43382a:	aad    0x84
  43382c:	loope  0x4337b8
  43382e:	data16 scas al,BYTE PTR es:[edi]
  433830:	mov    edx,0xde025b93
  433835:	and    ecx,edi
  433837:	xor    al,al
  433839:	and    edx,edi
  43383b:	ret    
  43383c:	rol    BYTE PTR [esi],cl
  43383e:	and    al,0x30
  433840:	rcl    BYTE PTR [edx-0x7141599a],cl
  433846:	pop    esi
  433847:	(bad)  
  433848:	mov    dl,0x4
  43384a:	xor    al,0x0
  43384c:	add    bh,BYTE PTR [esi]
  43384e:	ins    BYTE PTR es:[edi],dx
  43384f:	test   DWORD PTR [eax],0x0
	...
  433861:	add    BYTE PTR [eax],al
  433863:	add    BYTE PTR [edx+0x2218240a],dh
  433869:	jno    0x433854
  43386b:	jl     0x4338ea
  43386d:	aas    
  43386e:	jo     0x43383e
  433870:	mov    bl,BYTE PTR [ebx-0x5d]
  433873:	mov    ah,0xf9
  433875:	inc    edx
  433876:	fs scas al,BYTE PTR es:[edi]
  433878:	mov    ch,BYTE PTR [eax-0x68832b34]
  43387e:	ins    DWORD PTR es:[edi],dx
  43387f:	sub    esp,DWORD PTR [edx-0x1ed1e23f]
  433885:	dec    esp
  433886:	push   cs
  433887:	iret   
  433888:	mov    edx,0x1eaf81c
  43388d:	cmp    BYTE PTR [ebp-0x26eb2c42],0x2
  433894:	ror    DWORD PTR [esi+0x66],0xae
  433898:	mov    dl,0x91
  43389a:	mov    ch,0xc2
  43389c:	adc    DWORD PTR [eiz*1-0x6c693747],0x2f
  4338a4:	jp     0x43383c
  4338a6:	fwait
  4338a7:	adc    ebx,DWORD PTR [esi]
  4338a9:	jge    0x433908
  4338ab:	adc    al,0x75
  4338ad:	(bad)  
  4338ae:	ins    BYTE PTR es:[edi],dx
  4338af:	inc    ebx
  4338b0:	mov    BYTE PTR [eax+0x100ec66e],cl
  4338b6:	add    BYTE PTR [ebp+0x6c745db9],dh
  4338bc:	jns    0x4338f2
  4338be:	clc    
  4338bf:	and    al,BYTE PTR [ebx+0x711aaf25]
  4338c5:	cmp    bl,BYTE PTR [edx+0x32]
	...
  4338dc:	mov    al,ds:0x37e90fd5
  4338e1:	adc    eax,0xa00dea10
  4338e6:	xchg   BYTE PTR [ecx+ebx*4],ah
  4338e9:	push   cs
  4338ea:	dec    ebp
  4338eb:	fstp   st(7)
  4338ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4338ee:	mov    al,bh
  4338f0:	lahf   
  4338f1:	mov    dl,0x8c
  4338f3:	in     eax,dx
  4338f4:	ret    
  4338f5:	push   cs
  4338f6:	out    dx,eax
  4338f7:	loop   0x4338f7
  4338f9:	fsub   QWORD PTR es:[ebx-0x5d]
  4338fd:	push   ss
  4338fe:	stc    
  4338ff:	leave  
  433900:	bound  ecx,QWORD PTR [eax+eax*4+0xb1a9080]
  433907:	imul   ebx,eax,0x37e37b84
  43390d:	popf   
  43390e:	std    
  43390f:	stc    
  433910:	mov    dl,0x8
  433912:	je     0x433990
  433914:	lods   eax,DWORD PTR ds:[esi]
  433915:	push   ebp
  433916:	inc    edx
  433917:	and    ah,BYTE PTR [ecx-0x70951fdb]
  43391d:	xchg   ebp,eax
  43391e:	jo     0x4338b6
  433920:	ss adc al,0x10
  433923:	jmp    0xbcc2b632
  433928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433929:	nop
  43392a:	je     0x433911
  43392c:	aaa    
  43392d:	adc    al,0x10
  43392f:	jmp    0x43392e
  433931:	add    DWORD PTR [edi-0x18a9213c],0xffffffed
  433938:	scas   eax,DWORD PTR es:[edi]
  433939:	xor    al,0xf4
  43393b:	(bad)  
  43393c:	in     al,dx
  43393d:	popf   
  43393e:	add    al,BYTE PTR ds:[eax]
	...
  433951:	add    BYTE PTR [eax],al
  433953:	add    BYTE PTR [esi+0x1000450e],dh
  433959:	sbb    DWORD PTR [ebp+0x14],ecx
  43395c:	out    0x50,eax
  43395e:	mov    DWORD PTR [ecx],eax
  433960:	mov    bh,0x86
  433962:	lea    ecx,[ebx+ebp*8]
  433965:	push   cs
  433966:	pop    esp
  433967:	add    ebx,ebp
  433969:	pop    ss
  43396a:	sti    
  43396b:	cmp    edi,DWORD PTR [edi+edx*8-0x1a2ac3fe]
  433972:	std    
  433973:	cmp    edi,ecx
  433975:	in     al,0xf9
  433977:	inc    edx
  433978:	out    0x74,eax
  43397a:	add    DWORD PTR [ebp-0x20],0xffffffb8
  43397e:	ror    DWORD PTR [ecx-0x1644e72c],0x72
  433985:	idiv   di
  433988:	icebp  
  433989:	sbb    ah,ch
  43398b:	push   ecx
  43398c:	in     eax,dx
  43398d:	mov    ebp,0x7bc1ff4d
  433992:	not    DWORD PTR ds:0x4081c0
  433998:	pop    es
  433999:	fadd   DWORD PTR [edx]
  43399b:	mov    ecx,edx
  43399d:	arpl   WORD PTR [ebx+0x3c109845],ax
  4339a3:	push   es
  4339a4:	inc    edi
  4339a5:	pop    esi
  4339a6:	imul   edi,DWORD PTR [eax+0x2f],0x1a
  4339aa:	mov    edi,0x64c0922b
  4339af:	or     ah,BYTE PTR [edx]
  4339b1:	adc    ax,0x6278
  4339b5:	sar    edx,1
  4339b7:	add    BYTE PTR [eax],0x0
	...
  4339ca:	add    BYTE PTR [eax],al
  4339cc:	mov    al,ds:0x88458794
  4339d1:	pop    es
  4339d2:	shl    BYTE PTR [ebp+0x51],0x14
  4339d6:	jge    0x4339d4
  4339d8:	not    DWORD PTR [ecx+0x19d845f7]
  4339de:	pop    ebp
  4339df:	cld    
  4339e0:	pop    es
  4339e1:	inc    ebx
  4339e2:	jnp    0x4339df
  4339e4:	mov    ch,0xa7
  4339e6:	mov    dl,0x4b
  4339e8:	add    BYTE PTR ss:[ecx],0x75
  4339ec:	mov    eax,0x810ced26
  4339f1:	call   0x2c407f6b
  4339f6:	mov    bh,0x0
  4339f8:	mov    esi,0x3530b57f
  4339fd:	imul   eax,DWORD PTR [edx],0x36
  433a00:	pusha  
  433a01:	adc    esp,0x1433e251
  433a07:	sti    
  433a08:	shl    BYTE PTR [edx],0x11
  433a0b:	inc    eax
  433a0c:	mov    ch,0x23
  433a0e:	inc    esp
  433a0f:	jne    0x4339ba
  433a11:	sub    DWORD PTR [ebx-0x4d229505],0x12e563fb
  433a1b:	dec    esp
  433a1c:	retf   
  433a1d:	data16 add al,0x29
  433a20:	or     BYTE PTR [ebx+0x29ad7d77],ah
  433a26:	dec    eax
  433a27:	or     al,0xb6
  433a29:	add    DWORD PTR [eax],0xffffffe7
  433a2c:	mov    dh,0x21
  433a2e:	mov    bl,0xfb
	...
  433a44:	into   
  433a45:	sbb    eax,0x31de85ae
  433a4a:	ret    
  433a4b:	or     ebx,edx
  433a4d:	test   BYTE PTR [edi],dh
  433a4f:	mov    esi,0x86d1a6c1
  433a54:	pop    ecx
  433a55:	sub    DWORD PTR [eax],esp
  433a57:	adc    BYTE PTR [esi],al
  433a59:	aad    0x2b
  433a5b:	jne    0x433a1e
  433a5d:	xor    ebx,esi
  433a5f:	jae    0x433a08
  433a61:	out    0xfe,al
  433a63:	cli    
  433a64:	arpl   WORD PTR [ebp-0x4d],dx
  433a67:	cvttps2pi mm4,xmm3
  433a6a:	sub    bh,bl
  433a6c:	arpl   WORD PTR [ecx],si
  433a6e:	mov    ebx,0xac8f3c0b
  433a73:	xor    esi,DWORD PTR [edx]
  433a75:	dec    edx
  433a76:	icebp  
  433a77:	jle    0x433a62
  433a79:	xchg   DWORD PTR [esi+0x4c],ebx
  433a7c:	sub    al,0x32
  433a7e:	adc    eax,0x6683f4e9
  433a83:	popa   
  433a84:	mov    ch,0x8f
  433a86:	jmp    0x7445ae5f
  433a8b:	aaa    
  433a8c:	or     eax,0xee2d9832
  433a91:	add    eax,0xcf302c2c
  433a96:	jmp    0xe9d26b22
  433a9b:	add    esi,DWORD PTR [edx]
  433a9d:	adc    bl,cl
  433a9f:	call   0xd581579b
  433aa4:	jnp    0x433a3a
  433aa6:	xor    edx,DWORD PTR [eax+eax*1]
	...
  433ab9:	add    BYTE PTR [eax],al
  433abb:	add    BYTE PTR [esi+0x75106579],bh
  433ac1:	(bad)  
  433ac2:	fs inc ebx
  433ac4:	sub    BYTE PTR [ecx+ebp*2],ah
  433ac7:	out    dx,eax
  433ac8:	jecxz  0x433b1f
  433aca:	adc    al,0xa6
  433acc:	cmp    eax,DWORD PTR [ebp-0x6f]
  433acf:	add    BYTE PTR [edx+0x4b],dh
  433ad2:	mov    esi,0x6e670932
  433ad7:	(bad)  
  433ad8:	mov    es,WORD PTR [edi]
  433ada:	mov    ds:0xed1c7386,al
  433adf:	jle    0x433ad2
  433ae1:	jp     0x433acb
  433ae3:	call   0xff1dd2e1
  433ae8:	add    eax,0x3a0bf505
  433aed:	ret    0x4b40
  433af0:	aam    0x91
  433af2:	dec    ecx
  433af3:	sbb    cl,al
  433af5:	push   ds
  433af6:	out    dx,eax
  433af7:	aad    0xe5
  433af9:	mov    fs,WORD PTR [esi]
  433afb:	rcr    DWORD PTR [edx-0x21],cl
  433afe:	inc    edi
  433b00:	mov    BYTE PTR [esi-0x701d5382],dl
  433b06:	jb     0x433b06
  433b08:	fstp   DWORD PTR [esp+edi*8]
  433b0b:	daa    
  433b0c:	mov    edx,0x63162076
  433b11:	jg     0x433b56
  433b13:	pop    esp
  433b14:	mov    edx,0x3f115076
  433b19:	xor    edx,edi
  433b1b:	inc    BYTE PTR [edx]
  433b1d:	adc    al,0xfc
  433b1f:	bound  eax,QWORD PTR [eax]
	...
  433b31:	add    BYTE PTR [eax],al
  433b33:	add    bl,dh
  433b35:	mov    ah,BYTE PTR [edi]
  433b37:	stc    
  433b38:	repnz popf 
  433b3a:	es fs cdq 
  433b3d:	xchg   edx,eax
  433b3e:	in     eax,dx
  433b3f:	jo     0x433b65
  433b41:	xchg   edi,edi
  433b43:	fdiv   DWORD PTR [eax-0x39d0bec]
  433b49:	sahf   
  433b4a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  433b4c:	into   
  433b4d:	adc    al,0x5b
  433b4f:	mov    esi,0x625a968e
  433b54:	hlt    
  433b55:	xchg   BYTE PTR [edx+0x12],bl
  433b58:	lock ror DWORD PTR [edi],1
  433b5b:	jmp    0x392f44e5
  433b60:	mov    al,BYTE PTR [eax-0x79]
  433b63:	fmul   QWORD PTR [edx-0x7c]
  433b66:	inc    eax
  433b67:	jmp    0xf5b7d0d3
  433b6c:	fistp  QWORD PTR [ebp+0x97ef4fa]
  433b72:	clc    
  433b73:	jbe    0x433b5c
  433b75:	or     al,0xfb
  433b77:	out    dx,eax
  433b78:	pop    ss
  433b79:	or     eax,eax
  433b7b:	out    0x13,eax
  433b7d:	sub    al,0x3b
  433b7f:	pop    esi
  433b80:	and    al,0x8a
  433b82:	sti    
  433b83:	cld    
  433b84:	push   cs
  433b85:	add    DWORD PTR [eax-0x17],0x73cf35
  433b8c:	sub    dh,cl
  433b8e:	dec    edx
  433b8f:	mov    DWORD PTR [ecx],ebx
  433b91:	xchg   esi,eax
  433b92:	cmc    
  433b93:	(bad)  
  433b94:	aad    0xd0
  433b96:	test   BYTE PTR [ebp+0x0],0x0
	...
  433ba9:	add    BYTE PTR [eax],al
  433bab:	add    BYTE PTR [eax-0x5a],bl
  433bae:	cld    
  433baf:	test   ah,bl
  433bb1:	fistp  QWORD PTR [eax+ebp*8]
  433bb4:	mov    ebp,ebx
  433bb6:	clc    
  433bb7:	call   DWORD PTR [edi+0x28db8543]
  433bbd:	popf   
  433bbe:	dec    ebp
  433bbf:	dec    DWORD PTR [ecx-0x1517b666]
  433bc5:	jmp    0x75f5:0xa536fff8
  433bcc:	adc    BYTE PTR [ebp+0x15],ah
  433bcf:	js     0x433bc0
  433bd1:	int    0xfa
  433bd3:	dec    BYTE PTR [ecx-0x2c3f7c6d]
  433bd9:	(bad)  
  433bda:	mov    edi,0x17b214fe
  433bdf:	(bad)  
  433be0:	shl    BYTE PTR [eax-0x74bbda02],0x83
  433be7:	inc    ebp
  433be8:	add    BYTE PTR [edi],dl
  433bea:	jno    0x433bed
  433bec:	je     0x433c2b
  433bee:	ds (bad) 
  433bf0:	push   ebx
  433bf1:	adc    bh,BYTE PTR [ebx+0x7566a6eb]
  433bf7:	or     al,0x17
  433bf9:	dec    esi
  433bfa:	call   0xf7a9171f
  433bff:	pop    edi
  433c00:	rol    al,cl
  433c02:	mov    edx,0x8b558d84
  433c08:	xor    BYTE PTR [esp+ebp*8],cl
  433c0b:	adc    BYTE PTR [ebp-0x73],bl
  433c0e:	add    BYTE PTR [ebx+0x0],dl
	...
  433c21:	add    BYTE PTR [eax],al
  433c23:	add    BYTE PTR [edx],ch
  433c25:	mov    esi,0x5ce70664
  433c2a:	pop    eax
  433c2b:	(bad)  
  433c2c:	mov    ch,0xe3
  433c2e:	sub    DWORD PTR [eax],eax
  433c30:	mov    ebx,gs
  433c32:	test   BYTE PTR [edx],0x33
  433c35:	and    bh,bh
  433c37:	push   DWORD PTR [ebp+0x28a396f6]
  433c3d:	out    0xfe,eax
  433c3f:	xchg   BYTE PTR [ebx],al
  433c41:	dec    edi
  433c42:	imul   ecx,DWORD PTR [ebx+ebp*1+0x6a],0xffffff80
  433c47:	shr    BYTE PTR [eax-0x4cbd8812],0x2c
  433c4e:	idiv   DWORD PTR [edi+0xc]
  433c51:	(bad)  
  433c52:	stos   BYTE PTR es:[edi],al
  433c53:	add    eax,0x7bfc9035
  433c58:	lods   eax,DWORD PTR ds:[esi]
  433c59:	es sub al,0xd
  433c5c:	jp     0x433c03
  433c5e:	mov    esi,0x2ecde1e6
  433c63:	jmp    DWORD PTR [ecx-0x62]
  433c66:	jno    0x433cc5
  433c68:	lods   eax,DWORD PTR ds:[esi]
  433c69:	pop    eax
  433c6a:	aam    0x8c
  433c6c:	and    BYTE PTR [edi-0x162d04db],dh
  433c72:	jp     0x433c64
  433c74:	retf   
  433c75:	leave  
  433c76:	sub    bh,bh
  433c78:	ret    0xfea6
  433c7b:	out    0x7f,eax
  433c7d:	or     DWORD PTR [ecx],ebp
  433c7f:	sti    
  433c80:	ds (bad) 
  433c82:	jp     0x433c5b
  433c84:	and    DWORD PTR [ebx+0x359c],ebp
	...
  433c9a:	add    BYTE PTR [eax],al
  433c9c:	push   es
  433c9d:	repnz or bh,BYTE PTR [eax-0x3a]
  433ca1:	data16 add al,0x87
  433ca4:	lea    ebp,[ebx]
  433ca6:	sub    DWORD PTR [edx+edx*8+0x75],esi
  433caa:	jmpw   0xe32e
  433cae:	(bad)  
  433caf:	es jbe 0x433d22
  433cb2:	sbb    al,0xa7
  433cb4:	stc    
  433cb5:	and    BYTE PTR [ecx],ch
  433cb7:	xchg   eax,edi
  433cb9:	(bad)  
  433cba:	cmc    
  433cbb:	rol    BYTE PTR [edi],0x7
  433cbe:	call   0x520b1894
  433cc3:	sbb    al,0x2a
  433cc5:	dec    ebx
  433cc6:	dec    ebx
  433cc7:	sub    DWORD PTR [edx],esi
  433cc9:	inc    edx
  433cca:	fnstcw WORD PTR [edx-0x4c]
  433ccd:	leave  
  433cce:	mov    ds:0x413cb42c,eax
  433cd3:	das    
  433cd4:	mov    ss,WORD PTR [ecx-0x6b8f81d7]
  433cda:	ror    ecx,0x8b
  433cdd:	(bad)  
  433cde:	es clc 
  433ce0:	sbb    ah,al
  433ce2:	out    0x45,eax
  433ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433ce5:	(bad)  
  433ce6:	adc    eax,eax
  433ce8:	(bad)  
  433ce9:	mov    ebp,eax
  433ceb:	sar    DWORD PTR [ebx],1
  433ced:	sahf   
  433cee:	and    DWORD PTR [edx],eax
  433cf0:	inc    ebp
  433cf1:	add    ch,BYTE PTR [ecx-0x6c7696fd]
  433cf7:	sbb    eax,DWORD PTR ds:0x3a28e330
  433cfd:	leave  
  433cfe:	cmp    al,BYTE PTR [esi+0x0]
	...
  433d11:	add    BYTE PTR [eax],al
  433d13:	add    BYTE PTR [ecx+0x7544168f],dh
  433d19:	push   es
  433d1a:	sub    ah,dl
  433d1c:	or     edx,DWORD PTR [eax-0x71ed63d9]
  433d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433d23:	shl    DWORD PTR [ebx],1
  433d25:	sahf   
  433d26:	gs test eax,0x8349302
  433d2c:	push   es
  433d2d:	cli    
  433d2e:	in     eax,0x76
  433d30:	pop    ds
  433d31:	in     al,0xf
  433d33:	and    BYTE PTR [edi],ah
  433d35:	shl    bh,1
  433d37:	sub    BYTE PTR [esi],al
  433d39:	xchg   esp,eax
  433d3a:	jg     0x433d77
  433d3c:	(bad)  
  433d3d:	lea    eax,[ebx-0xaafc638]
  433d43:	dec    eax
  433d45:	dec    edi
  433d46:	add    DWORD PTR [edi],edx
  433d48:	clc    
  433d49:	cmc    
  433d4a:	call   FWORD PTR [ebx+0x2c]
  433d4d:	lahf   
  433d4e:	shr    DWORD PTR [edi-0x16ff6c7a],0xb6
  433d55:	ja     0x433dad
  433d57:	in     eax,0x9d
  433d59:	mov    dh,BYTE PTR [ecx+0x534e7ce8]
  433d5f:	jb     0x433ce8
  433d61:	push   ss
  433d62:	inc    ebx
  433d63:	cdq    
  433d64:	(bad)  
  433d65:	loope  0x433ddb
  433d67:	push   cs
  433d68:	jno    0x433d41
  433d6a:	jae    0x433d5e
  433d6c:	dec    eax
  433d6d:	lea    ecx,[ebp-0x1b090d59]
  433d73:	xchg   edi,eax
  433d74:	test   BYTE PTR [esi+0x9efb],0x0
	...
  433d8b:	add    BYTE PTR [edx],dl
  433d8d:	ja     0x433d16
  433d8f:	(bad)  
  433d90:	fmul   QWORD PTR [edx-0x6cacd67c]
  433d96:	sub    DWORD PTR cs:[ecx+0x6afc1c5],ebx
  433d9d:	(bad)  
  433d9e:	cli    
  433d9f:	jmp    0x725cb45a
  433da4:	cmc    
  433da5:	mov    dl,0xc
  433da7:	push   ebx
  433da8:	mov    al,0x1c
  433daa:	dec    ebx
  433dab:	stc    
  433dac:	push   ecx
  433dad:	shl    DWORD PTR [esi+eiz*4+0xb],1
  433db1:	(bad)  
  433db3:	call   0xf02bcd6e
  433db8:	ret    0xfa89
  433dbb:	mov    dh,0x65
  433dbd:	mov    dl,0x10
  433dbf:	pop    esp
  433dc0:	push   ebx
  433dc1:	loop   0x433dbc
  433dc3:	sbb    eax,0x16f99e95
  433dc8:	mov    ch,0x77
  433dca:	dec    ebx
  433dcb:	(bad)  
  433dcd:	mov    dh,dl
  433dcf:	mov    cl,0xbe
  433dd1:	dec    edi
  433dd2:	repnz add BYTE PTR [esi+edx*2+0x58],dl
  433dd7:	ret    0x9284
  433dda:	dec    esi
  433ddb:	mov    ebp,ebp
  433ddd:	or     bh,BYTE PTR [edi]
  433ddf:	push   eax
  433de0:	xchg   esp,eax
  433de1:	dec    ebx
  433de2:	dec    edi
  433de3:	jne    0x433d92
  433de5:	sub    esp,edi
  433de7:	mov    WORD PTR [edx+0x5e],?
  433dea:	(bad)  
  433deb:	call   0xff3d9062
	...
  433e04:	arpl   WORD PTR [esi-0x4bbcd91e],cx
  433e0a:	cmc    
  433e0b:	test   DWORD PTR [eax+eax*2-0x5523ce02],ecx
  433e12:	and    bh,al
  433e14:	push   edx
  433e15:	(bad)  
  433e16:	sti    
  433e17:	dec    DWORD PTR [edx+edx*4]
  433e1a:	cmc    
  433e1b:	je     0x433e0d
  433e1d:	mov    eax,ds:0xb5507e8b
  433e22:	je     0x433e48
  433e24:	or     al,0xb5
  433e26:	ins    DWORD PTR es:[edi],dx
  433e27:	add    al,0xa4
  433e29:	(bad)  
  433e2a:	sub    eax,0xd8bcfbfe
  433e2f:	sbb    ebx,DWORD PTR [esi+edi*4-0x2fc5a028]
  433e36:	or     BYTE PTR [eax],al
  433e38:	mov    ds:0xcfe8f80a,eax
  433e3d:	jns    0x433e37
  433e3f:	jmp    FWORD PTR [edi+0x1c07bdd3]
  433e45:	pop    es
  433e46:	inc    ecx
  433e47:	add    BYTE PTR [ebp+0x4d],al
  433e4a:	dec    esi
  433e4b:	mov    DWORD PTR [ebx-0x37b876a5],edx
  433e51:	int3   
  433e52:	cmp    eax,0x8f9c60
  433e57:	add    BYTE PTR ds:0xd3c7624e,ah
  433e5d:	arpl   WORD PTR ds:0xfe76b500,ax
  433e63:	xchg   BYTE PTR [edx-0x42],dh
  433e66:	cmp    eax,0x52
	...
  433e7b:	add    BYTE PTR [esi],ch
  433e7d:	or     BYTE PTR [esi],dl
  433e7f:	lgs    esi,FWORD PTR [esi-0x2]
  433e83:	icebp  
  433e84:	stc    
  433e85:	pop    edx
  433e86:	test   BYTE PTR [eax],0xe1
  433e89:	je     0x433e57
  433e8b:	out    0x32,eax
  433e8d:	push   ebp
  433e8e:	and    al,0xfb
  433e90:	cs mov ch,0xc3
  433e93:	mov    ebp,0x722376b9
  433e98:	loope  0x433e4f
  433e9a:	sti    
  433e9b:	mov    edi,0xe7fe3730
  433ea0:	mov    esi,0xfafb242c
  433ea5:	jl     0x433f25
  433ea7:	dec    ebx
  433ea8:	jne    0x433f20
  433eaa:	aas    
  433eab:	jg     0x433e50
  433ead:	jle    0x433ead
  433eaf:	push   edx
  433eb0:	cs scas eax,DWORD PTR es:[edi]
  433eb2:	mov    al,0x35
  433eb4:	ds dec esi
  433eb6:	push   cs
  433eb7:	test   edi,esp
  433eb9:	and    al,BYTE PTR [esi]
  433ebb:	xchg   DWORD PTR [ebx+0x2e],edi
  433ebe:	ja     0x433f0a
  433ec0:	popa   
  433ec1:	sub    dh,cl
  433ec3:	push   eax
  433ec4:	fstp   st(2)
  433ec6:	es sti 
  433ec8:	jmp    0xad7b:0x6957bc41
  433ecf:	sbb    eax,0x86ccb52c
  433ed4:	or     BYTE PTR [edx-0x7dbe3685],0x79
  433edb:	inc    ebx
  433edc:	popf   
  433edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433ede:	jno    0x433f5a
	...
  433ef4:	popa   
  433ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433ef6:	and    esi,DWORD PTR [ebx-0x47]
  433ef9:	dec    esi
  433efa:	leave  
  433efb:	xor    DWORD PTR [ebx+0x29c07a3d],ebp
  433f01:	nop
  433f02:	jmp    0x433f77
  433f04:	mov    ah,0xec
  433f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433f07:	repnz push edx
  433f09:	in     al,dx
  433f0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433f0b:	iret   
  433f0c:	xor    edi,DWORD PTR [ebx+0x39]
  433f0f:	jns    0x433f09
  433f11:	xchg   edi,eax
  433f12:	push   ss
  433f13:	jns    0x433f71
  433f15:	in     eax,0x6c
  433f17:	mov    cl,0xd2
  433f19:	enter  0x26,0xe1
  433f1d:	xchg   ebp,eax
  433f1e:	pop    esp
  433f1f:	jno    0x433f66
  433f21:	(bad)  
  433f22:	out    0x3,eax
  433f24:	fimul  DWORD PTR ds:0x94c803b8
  433f2a:	xchg   edi,eax
  433f2b:	add    ebx,DWORD PTR [edx+edx*4-0x18]
  433f2f:	add    esi,DWORD PTR [ebp+0x2c13ad18]
  433f35:	shr    bh,cl
  433f37:	js     0x433fb1
  433f39:	mov    ds:0xe4ed789a,eax
  433f3e:	sub    ch,BYTE PTR [edi+0x1c2a18ba]
  433f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433f45:	les    ebx,FWORD PTR [ecx]
  433f47:	and    eax,0xdca245be
  433f4c:	mov    ebp,DWORD PTR [esi-0x75]
  433f4f:	scas   eax,DWORD PTR es:[edi]
  433f50:	lods   eax,DWORD PTR ds:[esi]
  433f51:	adc    BYTE PTR [ecx],al
  433f53:	or     DWORD PTR [esi+0x40612],ebp
	...
  433f69:	add    BYTE PTR [eax],al
  433f6b:	add    BYTE PTR [ebp-0x4d411771],dh
  433f71:	mov    eax,0x8b607aef
  433f76:	ins    DWORD PTR es:[edi],dx
  433f77:	cmp    ch,BYTE PTR [esi-0x4afc7aed]
  433f7d:	(bad)  
  433f7e:	pop    esi
  433f7f:	mov    ebp,0xb01fd77a
  433f84:	dec    edx
  433f85:	xlat   BYTE PTR ds:[ebx]
  433f86:	das    
  433f87:	cmc    
  433f88:	xor    DWORD PTR [ebx],ebx
  433f8a:	call   0x10bf492
  433f8f:	das    
  433f90:	jns    0x433f28
  433f92:	test   BYTE PTR [ebx-0x4a],dh
  433f95:	pop    DWORD PTR [eax]
  433f97:	rol    BYTE PTR ds:[ecx+ecx*1],1
  433f9b:	sahf   
  433f9c:	arpl   WORD PTR [ebx-0x5ebd0307],bx
  433fa2:	inc    eax
  433fa3:	jmp    0x705814a5
  433fa8:	mov    ss,WORD PTR [edx]
  433faa:	inc    esp
  433fab:	(bad)  
  433fad:	aam    0x8
  433faf:	push   0xffffffaa
  433fb1:	fwait
  433fb2:	test   DWORD PTR [edx+0x66f9abbe],ebp
  433fb8:	xchg   ecx,eax
  433fb9:	adc    eax,ecx
  433fbb:	out    dx,al
  433fbc:	rcr    BYTE PTR [edi],cl
  433fbe:	add    ecx,ebp
  433fc0:	mov    dh,0xf1
  433fc2:	call   FWORD PTR [ebx+0x18]
  433fc5:	fild   QWORD PTR [eax-0x6b]
  433fc8:	ret    
  433fc9:	iret   
  433fca:	add    BYTE PTR [esi],bh
  433fcc:	popa   
  433fcd:	(bad)
	...
  433fe1:	add    BYTE PTR [eax],al
  433fe3:	add    BYTE PTR [ebx],bl
  433fe5:	mov    edx,edi
  433fe7:	fs jbe 0x433fed
  433fea:	ja     0x434012
  433fec:	gs xchg edi,eax
  433fee:	test   DWORD PTR [edi-0x1e917a02],esp
  433ff4:	lea    ebx,[esi+0x730a9c85]
  433ffa:	(bad)  
  433ffc:	rol    DWORD PTR [esi-0x15ddd67b],1
  434002:	jge    0x433f92
  434004:	jmp    0x434e:0x9a6c878a
  43400b:	cmp    DWORD PTR [edi+ecx*4-0x545c1700],ebp
  434012:	test   DWORD PTR [edi],ebp
  434014:	sbb    eax,0xd3f95412
  434019:	dec    esp
  43401a:	jne    0x43401c
  43401c:	fisubr WORD PTR [ebp+0x61270c69]
  434022:	push   es
  434023:	(bad)  
  434024:	out    dx,eax
  434025:	fwait
  434026:	call   0xf5f0c666
  43402b:	test   BYTE PTR [edi+eiz*1+0x2f],cl
  43402f:	push   0xffffff9c
  434031:	pop    ds
  434032:	inc    edi
  434033:	adc    BYTE PTR [esp+ebp*4],dh
  434036:	pop    es
  434037:	push   DWORD PTR [ebx]
  434039:	sbb    dh,dh
  43403b:	wbinvd 
  43403d:	jbe    0x434036
  43403f:	push   ebx
  434041:	sbb    bh,BYTE PTR [edi]
  434043:	push   eax
  434044:	fild   QWORD PTR [ebx+0x7dff]
	...
  43405a:	add    BYTE PTR [eax],al
  43405c:	push   esi
  43405d:	adc    ecx,edi
  43405f:	add    eax,0x45819751
  434064:	dec    eax
  434065:	jae    0x434099
  434067:	mov    eax,0x8e3c
  43406c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43406d:	push   ebp
  43406e:	push   edx
  43406f:	sbb    cl,BYTE PTR [ebp+ebp*4+0x49525fc0]
  434076:	leave  
  434077:	ret    0x8e0c
  43407a:	sub    al,al
  43407c:	ja     0x434026
  43407e:	push   ebx
  43407f:	mov    eax,eax
  434081:	inc    esp
  434082:	dec    ebx
  434083:	push   edi
  434084:	out    dx,eax
  434085:	int    0x8b
  434087:	dec    esi
  434088:	cld    
  434089:	aam    0xfe
  43408b:	mov    bh,0x61
  43408d:	push   ebx
  43408e:	cli    
  43408f:	out    0x0,eax
  434091:	mov    al,0xf5
  434093:	jmp    FWORD PTR [edi]
  434095:	into   
  434096:	mov    ecx,DWORD PTR [esi+0x938c]
  43409c:	or     al,0xb6
  43409e:	idiv   ch
  4340a0:	shr    DWORD PTR [ecx+eax*4-0x2c9f1fbb],cl
  4340a7:	div    BYTE PTR [ebp+0x2c00f4bb]
  4340ad:	mov    dl,0x8
  4340af:	mov    DWORD PTR [ebx+0x68],ebx
  4340b2:	lea    ebx,[edx-0x37]
  4340b5:	(bad)  
  4340b6:	mov    edi,0xdd5e2117
  4340bb:	pop    esp
  4340bc:	lods   eax,DWORD PTR ds:[esi]
  4340bd:	ret    0x65fb
	...
  4340d4:	mov    al,0x31
  4340d6:	cdq    
  4340d7:	pop    es
  4340d8:	inc    eax
  4340d9:	mov    cl,0xb4
  4340db:	dec    edi
  4340dc:	cmp    BYTE PTR [ecx+0x2473e7d4],bh
  4340e2:	and    bl,bh
  4340e4:	ss wbinvd 
  4340e7:	je     0x43409f
  4340e9:	(bad)  
  4340ea:	mov    edi,0xf4bc636f
  4340ef:	std    
  4340f0:	jmp    0x55ddce65
  4340f5:	ja     0x4340f5
  4340f7:	push   edx
  4340f9:	std    
  4340fa:	inc    edi
  4340fb:	push   edi
  4340fc:	in     al,dx
  4340fd:	inc    ebx
  4340fe:	inc    esp
  4340ff:	or     al,0xb5
  434101:	inc    ecx
  434102:	mov    edi,ecx
  434104:	dec    ebp
  434105:	data16 (bad) 
  434107:	push   DWORD PTR [ebp-0x42dc3e40]
  43410d:	ja     0x4340a1
  43410f:	add    DWORD PTR [edx+0x1b5b94ce],ecx
  434115:	mov    dl,0x8a
  434117:	ret    
  434118:	jb     0x4340ce
  43411a:	add    DWORD PTR [eax],eax
  43411c:	arpl   WORD PTR [ecx+0x71fa1396],sp
  434122:	push   esi
  434123:	lea    esi,[ebp+0x76]
  434126:	es pop esp
  434128:	xchg   ecx,eax
  434129:	mov    BYTE PTR [eax],ah
  43412b:	lea    esp,[edx]
  43412d:	out    0xfd,eax
  43412f:	push   DWORD PTR [ebp-0x2502ba72]
  434135:	(bad)  
  434136:	loop   0x4340c7
	...
  43414c:	inc    esi
  43414d:	scas   eax,DWORD PTR es:[edi]
  43414e:	iret   
  43414f:	inc    esp
  434150:	enter  0xd388,0x49
  434154:	mov    dh,0x3f
  434156:	pop    ebp
  434157:	les    edi,FWORD PTR [edx+0x3bb7a6ea]
  43415d:	jnp    0x434178
  43415f:	mov    bl,0x33
  434161:	(bad)  
  434163:	mov    ah,0x4
  434165:	loope  0x434126
  434167:	push   esp
  434168:	scas   al,BYTE PTR es:[edi]
  434169:	mov    BYTE PTR [ebx+0x6ea0008d],ah
  43416f:	adc    al,0x3c
  434171:	add    dl,BYTE PTR [esp+ebp*1+0x218a9822]
  434178:	xor    cl,BYTE PTR [edx]
  43417a:	lock mov bh,al
  43417d:	xchg   DWORD PTR [ebp+0x1a],esp
  434180:	loope  0x434164
  434182:	fs enter 0x9292,0x5c
  434187:	rol    esi,0xdf
  43418a:	outs   dx,BYTE PTR ds:[esi]
  43418b:	adc    eax,0x21bf195d
  434190:	dec    esi
  434191:	adc    ebp,DWORD PTR [eax]
  434193:	cwde   
  434194:	or     BYTE PTR [eax-0x3bcde02b],0x42
  43419b:	xchg   edi,eax
  43419c:	mov    esi,0xc4cff514
  4341a1:	iret   
  4341a2:	out    0xb8,eax
  4341a4:	pop    ds
  4341a5:	popa   
  4341a6:	out    0x9e,eax
  4341a8:	push   ds
  4341a9:	mov    BYTE PTR [ebp-0x1caf68e5],bl
  4341af:	fld    QWORD PTR [eax]
	...
  4341c1:	add    BYTE PTR [eax],al
  4341c3:	add    BYTE PTR [edx-0x7c0c6278],ch
  4341c9:	push   eax
  4341ca:	out    0xb8,al
  4341cc:	jmp    DWORD PTR [eax-0x19]
  4341cf:	sahf   
  4341d0:	jmp    0x150:0x570ba513
  4341d7:	out    dx,al
  4341d8:	mov    bl,0x91
  4341da:	jge    0x434201
  4341dc:	(bad)  [eax]
  4341de:	ret    0x7ceb
  4341e1:	mov    WORD PTR [eax],es
  4341e3:	adc    ch,al
  4341e5:	push   ss
  4341e6:	jns    0x4341d9
  4341e8:	mov    fs,bp
  4341eb:	icebp  
  4341ec:	xchg   ebp,eax
  4341ed:	cld    
  4341ee:	adc    al,0xd1
  4341f0:	adc    ebx,edi
  4341f2:	cli    
  4341f3:	mov    esi,0xa02e4781
  4341f8:	jg     0x4341c6
  4341fa:	cld    
  4341fb:	pusha  
  4341fc:	ins    DWORD PTR es:[edi],dx
  4341fd:	mov    ds:0x9a912e87,eax
  434202:	xchg   esp,eax
  434203:	test   eax,0xa055e975
  434208:	clc    
  434209:	xchg   ebx,eax
  43420a:	add    BYTE PTR [eax+ebp*1],dh
  43420d:	je     0x43425f
  43420f:	sbb    ch,BYTE PTR [edi]
  434211:	loop   0x43427b
  434213:	int    0xb2
  434215:	pop    DWORD PTR [eax]
  434217:	add    esi,DWORD PTR [ecx-0x633ecb76]
  43421d:	mov    BYTE PTR [eax],0x1a
  434220:	nop
  434221:	sbb    BYTE PTR [ebp+ebx*2-0x6b],bl
  434225:	pushf  
  434226:	ins    BYTE PTR es:[edi],dx
  434227:	sti    
	...
  43423c:	jbe    0x4341c5
  43423e:	xchg   DWORD PTR [ecx+0x59],ebx
  434241:	jbe    0x43424d
  434243:	ins    DWORD PTR es:[edi],dx
  434244:	jnp    0x4341d5
  434246:	add    cl,ch
  434248:	cmp    ebp,eax
  43424a:	mov    ah,0xd9
  43424c:	test   BYTE PTR [esi-0x129e68b1],0xff
  434253:	mov    ecx,0x261cfcd5
  434258:	mov    esp,0xb6e900b7
  43425d:	mov    dh,BYTE PTR [ecx+eiz*8-0x2b]
  434261:	bound  eax,QWORD PTR [eax+eax*1-0x627b6064]
  434268:	fcom   QWORD PTR [edx+0x3c425300]
  43426e:	add    DWORD PTR fs:[edi],edi
  434271:	mov    al,0x73
  434273:	sbb    al,0xdb
  434275:	sub    BYTE PTR [edx],al
  434277:	inc    DWORD PTR [ebx]
  434279:	sbb    ecx,eax
  43427b:	(bad)  
  43427d:	push   cs
  43427e:	add    DWORD PTR [eax],eax
  434280:	int3   
  434281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434282:	jae    0x4342a0
  434284:	jnp    0x43420e
  434286:	mov    dh,0x10
  434288:	fmul   QWORD PTR [ebx+0x199476f5]
  43428e:	cmp    al,0x7c
  434290:	adc    BYTE PTR [edx-0x6],0x88
  434294:	stc    
  434295:	(bad)  
  434296:	cmc    
  434297:	xlat   BYTE PTR ds:[ebx]
  434298:	cmc    
  434299:	sbb    cl,cl
  43429b:	pavgw  mm1,QWORD PTR [ebp+0x8]
  43429f:	test   DWORD PTR [eax],0x0
	...
  4342b1:	add    BYTE PTR [eax],al
  4342b3:	add    BYTE PTR [ebp+0x53],al
  4342b6:	mov    DWORD PTR [esi+0x64],ecx
  4342b9:	push   ds
  4342ba:	or     BYTE PTR [ebx+0x9749244],al
  4342c0:	iret   
  4342c1:	mov    bl,0x14
  4342c3:	jne    0x434342
  4342c5:	cmp    BYTE PTR [edx],bl
  4342c7:	jmp    0x43430d
  4342c9:	adc    edx,DWORD PTR [edi+0x20]
  4342cc:	call   0x43b0:0x5e87
  4342d2:	pusha  
  4342d3:	mov    DWORD PTR [edx],edx
  4342d5:	xchg   esp,eax
  4342d6:	add    eax,0x59462b7
  4342db:	scas   eax,DWORD PTR es:[edi]
  4342dc:	push   edx
  4342dd:	mov    es,WORD PTR ds:0x7a04cdaf
  4342e3:	loop   0x4342f8
  4342e5:	xchg   ecx,eax
  4342e6:	mov    edx,0x5092d4c1
  4342eb:	inc    ebx
  4342ed:	sbb    bh,BYTE PTR [esp+ecx*1-0x4b]
  4342f1:	aas    
  4342f2:	lea    eax,[edx-0x5f]
  4342f5:	out    dx,eax
  4342f6:	mov    edx,0x9891ae0f
  4342fb:	std    
  4342fc:	cmp    eax,0xbd751b3d
  434301:	jge    0x43429c
  434303:	adc    ebx,edx
  434305:	cli    
  434306:	in     eax,dx
  434307:	dec    esi
  434308:	imul   ebp,DWORD PTR [ebp-0x67],0x7
  43430c:	retf   0x6a7a
  43430f:	adc    BYTE PTR [ebp+0x78],dh
  434312:	lea    eax,[ebp-0x47]
  434315:	mov    al,ds:0x743d
	...
  43432a:	add    BYTE PTR [eax],al
  43432c:	mov    ecx,0xc1751591
  434331:	pushf  
  434332:	sub    al,0xb8
  434334:	(bad)  
  434335:	cmp    al,0x1b
  434337:	cmp    eax,edi
  434339:	push   edx
  43433a:	xchg   edx,eax
  43433b:	or     BYTE PTR [edx-0x5f04ff5c],dl
  434341:	loop   0x434330
  434343:	aas    
  434344:	mov    ch,0xf1
  434346:	enter  0xdafb,0xb4
  43434a:	mov    ch,0xc8
  43434c:	ja     0x4343bd
  43434e:	(bad)  
  43434f:	push   esp
  434350:	adc    eax,DWORD PTR ds:[ebp-0x188f214]
  434357:	push   DWORD PTR [esi]
  434359:	je     0x434365
  43435b:	sti    
  43435c:	ret    0x80f2
  43435f:	add    BYTE PTR [ebp-0x56baeb8a],dh
  434365:	js     0x4342f8
  434367:	inc    ebp
  434368:	cmp    DWORD PTR [edi-0x6f],eax
  43436b:	test   DWORD PTR [ebp-0x7a04e533],ecx
  434371:	lds    ebx,FWORD PTR [eax+0x1a33fa0b]
  434377:	xor    BYTE PTR [ebp-0x588c018a],0x8f
  43437e:	and    bh,al
  434380:	add    bl,BYTE PTR [ebx+0x503803a7]
  434386:	pushf  
  434387:	repz jnp 0x4343e1
  43438a:	or     ebp,DWORD PTR [ebx+eax*1]
  43438d:	nop
  43438e:	out    0x3,eax
	...
  4343a4:	out    dx,al
  4343a5:	call   0x2efe:0x8fa2f5eb
  4343ac:	push   edi
  4343ad:	adc    BYTE PTR ds:0xe384cfbb,ch
  4343b3:	add    al,BYTE PTR [eax-0x47]
  4343b6:	dec    ebp
  4343b7:	or     BYTE PTR [eax],dh
  4343b9:	or     esi,DWORD PTR [ebx*1-0x70c77b42]
  4343c0:	clc    
  4343c1:	outs   dx,DWORD PTR ds:[esi]
  4343c2:	sbb    BYTE PTR [esi-0x10],al
  4343c5:	xchg   esp,eax
  4343c6:	call   0xb22d6cf6
  4343cb:	sbb    eax,0x875c9213
  4343d0:	jmp    0x434356
  4343d2:	mov    ds:0x2512e51d,eax
  4343d7:	sub    ch,ah
  4343d9:	ja     0x4343e1
  4343db:	mov    edx,0xb67f847c
  4343e0:	aam    0x10
  4343e2:	inc    ebp
  4343e3:	mov    esp,0xf57b846f
  4343e8:	jmp    0x2a37422e
  4343ed:	or     cl,BYTE PTR [eax]
  4343ef:	sbb    eax,0x8eb8844e
  4343f4:	lock outs dx,DWORD PTR ds:[esi]
  4343f6:	mov    eax,0xeb94f845
  4343fb:	sub    esi,ebp
  4343fd:	jmp    0x91de614b
  434402:	je     0x43438b
  434404:	add    DWORD PTR [ebx+edi*1+0x1d],0x0
	...
  43441c:	test   DWORD PTR [edx],edx
  43441e:	add    DWORD PTR [esi+eax*8+0x4cffe8df],ebp
  434425:	xchg   dl,bh
  434427:	adc    al,BYTE PTR [edx]
  434429:	jmp    0x151:0x63fa6c1c
  434430:	mov    edi,0xcb0efadd
  434435:	retf   0xe814
  434438:	inc    edx
  434439:	xchg   ebx,eax
  43443a:	ret    0xb1a4
  43443d:	mov    eax,ecx
  43443f:	lods   al,BYTE PTR ds:[esi]
  434440:	mov    edx,0xb6e90095
  434445:	ins    BYTE PTR es:[edi],dx
  434446:	push   es
  434447:	scas   eax,DWORD PTR es:[edi]
  434448:	repz cwde 
  43444a:	jmp    DWORD PTR [ebp-0x16fc7805]
  434450:	mov    dh,0x8f
  434452:	xchg   BYTE PTR [ecx+ebp*4],ah
  434455:	or     eax,DWORD PTR [esp+esi*8+0x5c]
  434459:	(bad)  
  43445a:	mov    esp,DWORD PTR [eax*8-0xad37421]
  434461:	ffreep st(2)
  434463:	and    al,0xa5
  434465:	mov    edx,es
  434467:	sub    al,0xbb
  434469:	(bad)
  43446d:	mov    edx,edi
  43446f:	bound  esi,QWORD PTR [ebx-0x79]
  434472:	jle    0x43441d
  434474:	mov    edx,0xf52c8bdf
  434479:	(bad)  
  43447b:	hlt    
  43447c:	scas   al,BYTE PTR es:[edi]
  43447d:	ja     0x4344a1
  43447f:	ret    0x0
	...
  434492:	add    BYTE PTR [eax],al
  434494:	mov    eax,0x3aa02e86
  434499:	push   eax
  43449a:	or     bh,BYTE PTR [edi+esi*8+0xa]
  43449e:	shl    BYTE PTR [eax],0xf4
  4344a1:	lahf   
  4344a2:	add    BYTE PTR [ebp+ebp*1-0x39c27f8c],bh
  4344a9:	mov    eax,DWORD PTR [eax]
  4344ab:	add    BYTE PTR [eax+eax*2],bl
  4344ae:	push   eax
  4344af:	mov    ebp,DWORD PTR [ecx-0x69]
  4344b2:	dec    ebp
  4344b3:	push   esi
  4344b4:	je     0x43444c
  4344b6:	or     bh,bh
  4344b8:	jecxz  0x434519
  4344ba:	leave  
  4344bb:	cmp    al,0x1e
  4344bd:	xchg   esp,eax
  4344be:	xchg   esp,eax
  4344bf:	rcr    edi,0xc7
  4344c2:	dec    ecx
  4344c3:	push   0xd
  4344c5:	adc    al,BYTE PTR [ebx+edi*8+0x2c]
  4344c9:	sbb    bh,dh
  4344cb:	mov    DWORD PTR [ecx],esp
  4344cd:	scas   eax,DWORD PTR es:[edi]
  4344ce:	call   0xf5e84b00
  4344d3:	test   BYTE PTR [ebx+edx*4-0x7121bd7c],cl
  4344da:	add    BYTE PTR [eax],bh
  4344dc:	jno    0x434480
  4344de:	add    eax,0x899584
  4344e3:	add    bl,dl
  4344e5:	loopne 0x43452a
  4344e7:	sti    
  4344e8:	out    dx,eax
  4344e9:	cmp    ecx,DWORD PTR [ebp-0xa57f77b]
  4344ef:	(bad)  
  4344f0:	mov    esp,0x622a02b3
  4344f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4344f6:	test   al,al
	...
  43450c:	jae    0x434510
  43450e:	push   ss
  43450f:	add    bl,BYTE PTR [esi+ecx*4-0x5d2649fb]
  434516:	loope  0x434522
  434518:	aam    0x63
  43451a:	xchg   esi,eax
  43451b:	add    eax,0xfff5a7e8
  434520:	push   0x69c33367
  434525:	pushf  
  434526:	sub    eax,eax
  434528:	fcmovnb st,st(3)
  43452a:	adc    eax,eax
  43452c:	jns    0x4344bc
  43452e:	(bad)  
  43452f:	(bad)  
  434530:	shl    esi,cl
  434532:	add    edi,edi
  434534:	dec    esp
  434535:	mov    ?,ecx
  434537:	(bad)  
  434538:	mov    ch,0x69
  43453a:	dec    edi
  43453b:	sar    BYTE PTR [ebx+ebp*1],0x1a
  43453f:	data16 mov bh,0xfb
  434542:	mov    edi,0x261a85e3
  434547:	mov    bh,cl
  434549:	mov    edx,0x60f58415
  43454e:	jp     0x43452b
  434550:	mov    ah,0x78
  434552:	(bad)  
  434553:	popa   
  434554:	mov    esp,0xa5751a23
  434559:	call   0x774d2e61
  43455e:	(bad)  
  43455f:	(bad)  
  434560:	cmp    ah,dh
  434562:	call   DWORD PTR [ebx-0x18e87f1f]
  434568:	cmc    
  434569:	and    al,0xac
  43456b:	add    eax,DWORD PTR [eax+0x2b]
  43456e:	cmp    dl,BYTE PTR [eax+0x0]
	...
  434581:	add    BYTE PTR [eax],al
  434583:	add    BYTE PTR [esi],bh
  434585:	push   0xffffff86
  434587:	pop    ebp
  434588:	retf   0x7b5f
  43458b:	sub    DWORD PTR [ebx-0x3d3f85a8],edi
  434591:	jmp    0x7d7e:0x76b5014d
  434598:	jns    0x434606
  43459a:	pop    es
  43459b:	test   DWORD PTR [ebx+0x78],edx
  43459e:	(bad)  
  43459f:	dec    DWORD PTR [ebx+0x10124ac]
  4345a5:	xchg   DWORD PTR [edi],edi
  4345a7:	inc    ebp
  4345a8:	cmp    eax,0xb5fffe7a
  4345ad:	xor    ecx,eax
  4345af:	mov    ebx,0xfffe76b7
  4345b4:	pop    esi
  4345b5:	jns    0x4345f6
  4345b7:	inc    ebp
  4345b8:	sbb    eax,0xb5fffe75
  4345bd:	xor    ecx,eax
  4345bf:	mov    ebx,0xfffe76aa
  4345c4:	mov    edx,0x77c0998f
  4345c9:	fsubr  DWORD PTR [esi-0x30]
  4345cc:	into   
  4345cd:	popf   
  4345ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4345cf:	add    edi,DWORD PTR [ebx+eiz*8]
  4345d2:	das    
  4345d3:	or     dh,BYTE PTR [ecx]
  4345d5:	sahf   
  4345d6:	call   0xb01afade
  4345db:	(bad)  
  4345dc:	ins    BYTE PTR es:[edi],dx
  4345dd:	xlat   BYTE PTR ds:[ebx]
  4345de:	loop   0x434560
  4345e0:	jb     0x434570
  4345e2:	out    0x3,eax
  4345e4:	xor    al,BYTE PTR [ebx]
  4345e6:	lock mov dh,0x0
	...
  4345f9:	add    BYTE PTR [eax],al
  4345fb:	add    BYTE PTR [eax-0x667f9361],bl
  434601:	adc    BYTE PTR [ebx],0x1a
  434604:	test   DWORD PTR [edi-0x2c],esi
  434607:	in     al,dx
  434608:	in     al,dx
  434609:	sub    BYTE PTR [ebx+eax*2-0x52],0xb
  43460e:	mov    cl,0x4
  434610:	mov    ch,0x8f
  434612:	jge    0x4345f7
  434614:	pop    eax
  434615:	xchg   edi,eax
  434616:	jmp    0xbe04:0x275992cf
  43461d:	pop    ecx
  43461e:	jno    0x4345df
  434620:	loop   0x4345e6
  434622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434623:	or     DWORD PTR [ecx],edi
  434625:	sub    eax,0x3
  434628:	mov    ch,0xf5
  43462a:	fidivr DWORD PTR [edx-0x520fe8ec]
  434630:	stos   BYTE PTR es:[edi],al
  434631:	adc    ah,BYTE PTR [ebp-0x8]
  434634:	pop    DWORD PTR [eax-0x688a7a55]
  43463a:	nop
  43463b:	push   ds
  43463c:	mov    ch,0x8f
  43463e:	out    0x8c,eax
  434640:	clc    
  434641:	xchg   edi,eax
  434642:	ss scas al,BYTE PTR es:[edi]
  434644:	mov    ch,0x12
  434646:	and    eax,0x78780512
  43464b:	in     al,dx
  43464c:	pop    esp
  43464d:	and    BYTE PTR [esp+eax*2-0x52],0xb
  434652:	add    esp,ebp
  434654:	mov    bh,0x8f
  434656:	add    BYTE PTR [ecx+0x6d0a7e03],dh
  43465c:	popf   
  43465d:	pop    DWORD PTR [eax]
  43465f:	jmp    0x434664
	...
  434674:	lods   eax,DWORD PTR ds:[esi]
  434675:	cmp    eax,0xd0685f44
  43467a:	mov    esp,DWORD PTR [ebp+eiz*1+0x79]
  43467e:	cli    
  43467f:	inc    esi
  434680:	imul   ebp,DWORD PTR [eax-0x34],0x8584bf11
  434687:	sub    DWORD PTR [ebx+ecx*1-0x70491621],edi
  43468e:	or     DWORD PTR [edi+0x42],ebx
  434691:	jle    0x43461c
  434693:	jge    0x43468f
  434695:	fwait
  434696:	cmc    
  434697:	push   ss
  434698:	int3   
  434699:	adc    al,BYTE PTR [ecx+eiz*1+0x21]
  43469d:	ror    DWORD PTR [ebp+0x74],1
  4346a0:	bound  ebx,QWORD PTR [ebx-0x2042010b]
  4346a6:	xchg   DWORD PTR [esi+edi*2-0x25eaeb7c],edx
  4346ad:	mov    edi,0xfb766c00
  4346b2:	pop    es
  4346b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4346b4:	sti    
  4346b5:	jl     0x4346bc
  4346b7:	shr    BYTE PTR [edi],0x90
  4346ba:	add    cl,ch
  4346bc:	or     BYTE PTR [ebp-0x7a],0x2c
  4346c0:	icebp  
  4346c1:	(bad)  
  4346c2:	mov    ebp,0xb28aa035
  4346c7:	mov    ds:0x718bcc41,eax
  4346cc:	outs   dx,DWORD PTR ds:[esi]
  4346cd:	xlat   BYTE PTR ds:[ebx]
  4346ce:	add    al,0x1d
  4346d0:	mov    dl,BYTE PTR [esi]
  4346d2:	inc    ecx
  4346d3:	std    
  4346d4:	pop    ecx
  4346d5:	ds je  0x434675
	...
  4346ec:	int3   
  4346ed:	cmp    eax,0xedb09381
  4346f2:	fld    DWORD PTR [eax]
  4346f4:	adc    bh,BYTE PTR [esi]
  4346f6:	out    dx,eax
  4346f7:	add    al,0xdb
  4346f9:	or     eax,0x6b71ffc2
  4346fe:	adc    BYTE PTR [eax+0x5c],al
  434701:	lods   al,BYTE PTR ds:[esi]
  434702:	pop    ebp
  434703:	call   FWORD PTR [ebx+eax*4-0x9]
  434707:	jo     0x4346bd
  434709:	stos   DWORD PTR es:[edi],eax
  43470a:	out    dx,al
  43470b:	push   edi
  43470c:	mov    dl,BYTE PTR [edi+0x5be44587]
  434712:	mov    ebx,0x43d11275
  434717:	test   DWORD PTR ds:0x9f66dbac,0xa3750f5a
  434721:	or     DWORD PTR [ecx+0x18],ebx
  434724:	test   DWORD PTR [edx],edi
  434726:	(bad)  
  434727:	jmp    0x2d2f:0x87c0bcb
  43472e:	dec    BYTE PTR [ecx+edx*1+0x1ce850cf]
  434735:	imul   edi,eax,0xffffffff
  434738:	push   eax
  434739:	shl    BYTE PTR [ecx+ecx*2+0x36],cl
  43473d:	outs   dx,DWORD PTR ds:[esi]
  43473e:	fs or  bl,bl
  434741:	dec    esp
  434742:	and    dl,dh
  434744:	(bad)  
  434745:	xchg   ebx,eax
  434746:	cmc    
  434747:	(bad)  
  434748:	inc    ebp
  434749:	push   eax
  43474a:	sar    BYTE PTR [ebx],cl
  43474c:	pop    edi
  43474d:	and    BYTE PTR [eax],al
  43474f:	mov    BYTE PTR [eax],0x0
	...
  434762:	add    BYTE PTR [eax],al
  434764:	ror    DWORD PTR [esi+0x2881eaff],1
  43476a:	cld    
  43476b:	pop    eax
  43476c:	repnz or al,0x9
  43476f:	push   0xffffffa0
  434771:	pop    es
  434772:	dec    esp
  434773:	mov    ah,0x1f
  434775:	aam    0x4
  434777:	push   ecx
  434778:	mov    esp,0x1a5768ab
  43477d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43477e:	cmp    DWORD PTR [ebp-0x4b],0xb765af70
  434785:	fstp   TBYTE PTR [edi+0x222105bf]
  43478b:	and    ebx,DWORD PTR [ebx-0x3]
  43478e:	add    al,0xc8
  434791:	push   edi
  434792:	adc    esi,DWORD PTR [ebp+0x6d]
  434795:	adc    ah,dh
  434797:	push   edx
  434798:	inc    ebx
  434799:	cmc    
  43479a:	into   
  43479b:	mov    edi,0xc8b73eda
  4347a0:	imul   DWORD PTR [ebx-0x2]
  4347a3:	shl    DWORD PTR [eax-0x1f],0x3
  4347a7:	cmp    BYTE PTR [eax-0x2a7afe43],al
  4347ad:	jbe    0x4347ad
  4347af:	call   FWORD PTR [ebx+0x3ebfbff1]
  4347b5:	inc    ebx
  4347b6:	bound  ebp,QWORD PTR ss:[esi+ebp*1]
  4347ba:	add    BYTE PTR [ebx],cl
  4347bc:	inc    ebx
  4347bd:	xor    eax,DWORD PTR [ecx+0x48]
  4347c0:	ret    0x44ec
  4347c3:	add    eax,0xac668b5
	...
  4347dc:	cmp    DWORD PTR [edx+0x1],ebx
  4347df:	add    BYTE PTR [ebp-0x4f775c0],dh
  4347e5:	sub    cl,BYTE PTR [ebx]
  4347e7:	add    ebx,esp
  4347e9:	test   BYTE PTR [ecx],al
  4347eb:	add    BYTE PTR [ebp-0x4aff81d0],dh
  4347f1:	push   0xf065458d
  4347f6:	shr    BYTE PTR [ebx+0x5054b438],0x30
  4347fd:	in     al,dx
  4347fe:	loope  0x4347fa
  434800:	call   0x25c:0x9252ae3e
  434807:	adc    dh,ch
  434809:	add    ax,0x8fb2
  43480e:	ins    BYTE PTR es:[edi],dx
  43480f:	cmp    esi,DWORD PTR [ecx-0x7771871]
  434815:	sub    edi,DWORD PTR [eax]
  434817:	mov    DWORD PTR [eax],esi
  434819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43481a:	mov    edx,DWORD PTR [esi]
  43481c:	pop    esi
  43481d:	loopne 0x434839
  43481f:	pop    ss
  434820:	shl    BYTE PTR [edi-0x2b],0xc3
  434824:	push   edx
  434825:	adc    al,0xa8
  434827:	push   es
  434828:	xor    BYTE PTR [esi],bh
  43482a:	in     al,0x3
  43482c:	mov    ch,0xf5
  43482e:	pop    ax
  434830:	mov    DWORD PTR [ebx+ebx*2+0x16],edi
  434834:	(bad)  
  434835:	cmc    
  434836:	pusha  
  434837:	sbb    bh,0x7c
  43483a:	dec    ebx
  43483b:	push   ss
  43483c:	test   al,0x8b
  43483e:	jo     0x4348b8
	...
  434854:	jno    0x4348d2
  434856:	cmp    edx,DWORD PTR [esi]
  434858:	cmp    al,0x1b
  43485a:	clc    
  43485b:	push   ss
  43485c:	push   cs
  43485d:	jge    0x4348bc
  43485f:	push   eax
  434860:	sar    DWORD PTR [ebx+eiz*1+0x16],1
  434864:	or     eax,0xee15cebf
  434869:	push   es
  43486a:	lods   eax,DWORD PTR ds:[esi]
  43486b:	sub    ebp,DWORD PTR [edx+0x77]
  43486e:	or     eax,DWORD PTR [esi]
  434870:	cmp    DWORD PTR [edx],ecx
  434872:	in     al,dx
  434873:	add    esi,DWORD PTR [ebp-0x4bfc1919]
  434879:	(bad)  
  43487a:	jge    0x434887
  43487c:	into   
  43487d:	ret    0x2dbf
  434880:	or     BYTE PTR [edi-0x5eb1101e],0x27
  434887:	add    al,0x3a
  434889:	ja     0x43489a
  43488b:	sbb    DWORD PTR [eax],esp
  43488d:	xchg   DWORD PTR [ecx-0x2f715841],esp
  434893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434894:	mov    dh,0x8f
  434896:	out    0x14,eax
  434898:	or     BYTE PTR [eax+0x1],dh
  43489b:	bound  edi,QWORD PTR [edx]
  43489d:	xchg   esp,eax
  43489e:	dec    ebp
  43489f:	scas   al,BYTE PTR es:[edi]
  4348a0:	xor    dh,BYTE PTR [ebx+edx*2-0x6f]
  4348a4:	xor    al,BYTE PTR [edx+edi*8+0x77349e]
  4348ab:	out    0xeb,al
  4348ad:	lods   al,BYTE PTR ds:[esi]
  4348ae:	add    al,0xe9
  4348b0:	mov    dh,0x14
  4348b2:	inc    esp
  4348b3:	xchg   ecx,eax
  4348b4:	xor    al,0xca
  4348b6:	in     al,dx
  4348b7:	jle    0x4348b9
	...
  4348c9:	add    BYTE PTR [eax],al
  4348cb:	add    BYTE PTR [edx+ecx*1],dh
  4348ce:	and    DWORD PTR [edi-0x60],esi
  4348d1:	js     0x4348cd
  4348d3:	pusha  
  4348d4:	or     cl,BYTE PTR [eax+ecx*4-0x3c]
  4348d8:	add    BYTE PTR [esi],0x5c
  4348db:	inc    ebp
  4348dc:	lock adc dl,BYTE PTR ds:0xff78c057
  4348e3:	call   0x7ccad89e
  4348e8:	sbb    DWORD PTR [esi-0x6],esi
  4348eb:	ds adc bl,BYTE PTR ds:0xe878a037
  4348f3:	lfs    ecx,FWORD PTR [edi-0x6bd5da00]
  4348fa:	mov    esp,DWORD PTR [ebp+eiz*8+0x75]
  4348fe:	cli    
  4348ff:	push   ss
  434900:	cdq    
  434901:	pop    ds
  434902:	and    ecx,DWORD PTR [edi]
  434904:	enter  0xc113,0x7d
  434908:	fmulp  st(4),st
  43490a:	push   0x8fa9fe
  43490f:	sahf   
  434910:	mov    eax,ds:0xd3ee0902
  434915:	xchg   edi,eax
  434916:	adc    ch,BYTE PTR [ecx]
  434918:	mov    cl,0x12
  43491a:	shr    esi,0x38
  43491d:	dec    ebp
  43491e:	(bad)  
  43491f:	call   0xc1b7bfda
  434924:	cmp    edx,DWORD PTR ds:0xa4720015
  43492a:	cmc    
  43492b:	(bad)  
  43492c:	fldenv [ebx+0x80]
	...
  434942:	add    BYTE PTR [eax],al
  434944:	pushf  
  434945:	(bad)
  434949:	mov    eax,ds:0x944c84f5
  43494e:	test   BYTE PTR [ecx-0x72ff70a2],ah
  434954:	cdq    
  434955:	mov    ds:0x72d98d50,eax
  43495a:	idiv   edi
  43495c:	xor    edi,DWORD PTR [edi]
  43495e:	dec    ebx
  43495f:	push   0xa3d3
  434964:	stos   DWORD PTR es:[edi],eax
  434965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434966:	jae    0x434950
  434968:	shr    DWORD PTR [ecx-0x6],cl
  43496b:	adc    eax,0xf0818f0c
  434970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434971:	or     esi,ecx
  434973:	cmp    ecx,DWORD PTR [edi+0xf888693]
  434979:	pop    DWORD PTR [eax]
  43497b:	xor    DWORD PTR [edx+0x7c],0x7
  43497f:	or     BYTE PTR [ecx+edx*4+0x0],0x0
  434984:	cli    
  434985:	pop    es
  434986:	test   BYTE PTR [ebx+edx*8],ch
  434989:	mov    ds:0xfa1566f5,eax
  43498e:	adc    al,0xfc
  434990:	shl    DWORD PTR [ebx-0x6edf7afb],cl
  434996:	add    BYTE PTR [eax],al
  434998:	cmp    dl,BYTE PTR [eax]
  43499a:	stc    
  43499b:	add    bl,BYTE PTR [ecx-0x6c]
  43499e:	add    DWORD PTR [ebp-0xa5d2c],0xff30fa07
	...
  4349bc:	rcr    DWORD PTR [esi+0x126a1be1],cl
  4349c2:	stc    
  4349c3:	pop    ss
  4349c4:	or     DWORD PTR [ebx+0x64],ebp
  4349c7:	adc    BYTE PTR [ebp-0x5dcb780d],dh
  4349cd:	dec    ecx
  4349ce:	push   cs
  4349cf:	lea    ebp,[eax]
  4349d1:	je     0x4349dd
  4349d3:	sti    
  4349d4:	xchg   edx,eax
  4349d5:	pusha  
  4349d6:	andnps xmm1,XMMWORD PTR [ebx-0x4d3f77bf]
  4349dd:	repz in eax,0xfd
  4349e0:	jp     0x434a4a
  4349e2:	jle    0x434a5f
  4349e4:	mov    bh,0x68
  4349e6:	inc    DWORD PTR [eax+ecx*8-0x2400019a]
  4349ed:	pop    edi
  4349ee:	out    dx,eax
  4349ef:	or     dh,BYTE PTR [eax]
  4349f1:	pop    esp
  4349f2:	add    al,0x0
  4349f4:	mov    ch,0x4f
  4349f6:	mov    cl,0xe3
  4349f8:	shl    BYTE PTR [esi],0xf
  4349fb:	jne    0x434a42
  4349fd:	fild   DWORD PTR [edi+0xdf13a2c]
  434a03:	push   eax
  434a04:	inc    eax
  434a05:	repz js 0x434a05
  434a08:	sub    ah,cl
  434a0a:	mov    ah,0xe7
  434a0c:	loop   0x434a51
  434a0e:	adc    bl,bh
  434a10:	xchg   ebx,eax
  434a11:	in     eax,0x4f
  434a13:	xchg   esp,eax
  434a14:	adc    BYTE PTR [ecx+0x7480130d],bh
  434a1a:	jge    0x4349b9
  434a1c:	push   ecx
  434a1d:	stos   DWORD PTR es:[edi],eax
  434a1e:	or     eax,0xfb
	...
  434a33:	add    BYTE PTR [ebx+edx*1],ch
  434a36:	ins    DWORD PTR es:[edi],dx
  434a37:	std    
  434a38:	repnz cwde 
  434a3a:	jns    0x434a81
  434a3c:	in     eax,0xee
  434a3e:	(bad)  
  434a3f:	jecxz  0x434a8e
  434a41:	call   0x3f84a4a
  434a46:	mov    BYTE PTR [edx+edx*8],ch
  434a49:	js     0x434a5a
  434a4b:	dec    edi
  434a4c:	gs cmp ecx,0xfe28ab4f
  434a53:	or     al,BYTE PTR [ebx]
  434a55:	(bad)
  434a59:	push   esp
  434a5a:	in     al,dx
  434a5b:	mov    ebx,0x3dc13bf
  434a60:	mov    ch,0x8f
  434a62:	pop    ds
  434a63:	mov    esp,0x32fb626
  434a68:	cmp    BYTE PTR [edi],bh
  434a6a:	jmp    0xb24fff72
  434a6f:	stc    
  434a70:	scas   eax,DWORD PTR es:[edi]
  434a71:	or     DWORD PTR [eax+0xd8fb504],eax
  434a77:	sti    
  434a78:	or     dh,dl
  434a7a:	jo     0x434a04
  434a7c:	cdq    
  434a7d:	js     0x434a12
  434a7f:	adc    bl,bl
  434a81:	lahf   
  434a82:	pop    esp
  434a83:	retf   0xdfb6
  434a86:	je     0x434a10
  434a88:	mov    DWORD PTR [eax+0x7b],edi
  434a8b:	adc    ah,ch
  434a8d:	push   eax
  434a8e:	sub    eax,0xe78fa114
  434a93:	add    ecx,DWORD PTR [ebp+0x45]
  434a96:	mov    esp,0x11
	...
  434aab:	add    BYTE PTR [esi],ch
  434aad:	out    0xf3,al
  434aaf:	sbb    al,0x11
  434ab1:	nop
  434ab2:	out    0x3,eax
  434ab4:	cmp    edx,ecx
  434ab6:	jecxz  0x434a3f
  434ab8:	cmc    
  434ab9:	mov    BYTE PTR [ebx-0x6a],ch
  434abc:	mov    ch,0x8f
  434abe:	out    0x2,eax
  434ac0:	inc    edi
  434ac1:	push   eax
  434ac2:	gs mov ebx,0x238b4b7
  434ac8:	das    
  434ac9:	repz call 0x6d22ffd2
  434acf:	ret    0xdeb1
  434ad2:	or     BYTE PTR fs:[ecx+0x7c],0xb
  434ad7:	adc    al,BYTE PTR [edi+eiz*2+0x78ccb75e]
  434ade:	and    al,BYTE PTR [edi-0xafedc50]
  434ae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434ae5:	je     0x434ae8
  434ae7:	pop    esp
  434ae8:	push   cs
  434ae9:	xchg   esp,eax
  434aea:	sub    eax,0xcccb32a9
  434aef:	cmp    BYTE PTR [ecx-0x38],ah
  434af2:	xchg   DWORD PTR [esi*8-0x3a8a7bf6],ebp
  434af9:	je     0x434af5
  434afb:	sbb    DWORD PTR [edx+eiz*4+0x7876d4d4],esp
  434b02:	test   DWORD PTR [ecx-0x17d7ed4c],ebp
  434b08:	mov    dh,0x8f
  434b0a:	cs mov ebx,0x24867e88
	...
  434b24:	cmc    
  434b25:	rol    dl,0x1d
  434b28:	push   0xd8a3b285
  434b2d:	retf   
  434b2e:	mov    eax,DWORD PTR [ecx+0x7e]
  434b31:	rol    BYTE PTR [esi*8-0x2abeeebf],1
  434b38:	jno    0x434b88
  434b3a:	je     0x434bb1
  434b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434b3d:	cmp    DWORD PTR [ecx-0x2616449d],eax
  434b43:	push   eax
  434b44:	les    ecx,FWORD PTR [edi-0x385e1700]
  434b4a:	adc    BYTE PTR [eax+0x46f0ca9f],bh
  434b50:	sub    DWORD PTR [eax+0x7515648b],esp
  434b56:	cli    
  434b57:	ss dec ecx
  434b59:	jo     0x434b85
  434b5b:	xchg   ebp,eax
  434b5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434b5d:	je     0x434bc2
  434b5f:	push   0xffffff82
  434b61:	stos   DWORD PTR es:[edi],eax
  434b62:	stc    
  434b63:	push   ds
  434b64:	les    ebx,FWORD PTR [ebx+esi*2+0x45425fe5]
  434b6b:	push   cs
  434b6c:	les    esi,FWORD PTR [eax+ecx*4+0x0]
  434b70:	xchg   ecx,eax
  434b71:	arpl   di,si
  434b73:	dec    ebx
  434b75:	sahf   
  434b76:	jae    0x434b44
  434b78:	retf   
  434b79:	and    BYTE PTR [edx],0x16
  434b7c:	or     al,0x8c
  434b7e:	loope  0x434baf
  434b80:	pop    ds
  434b81:	mov    eax,ds:0xe01a0f02
	...
  434b9a:	add    BYTE PTR [eax],al
  434b9c:	mov    WORD PTR ds:0xfaf257fc,ss
  434ba2:	sub    DWORD PTR [ebx+edi*2],0xffffffa0
  434ba6:	cmc    
  434ba7:	push   0xffffff90
  434ba9:	idiv   BYTE PTR ds:0x83f69c04
  434baf:	xor    BYTE PTR [ebx-0x60],cl
  434bb2:	cmc    
  434bb3:	push   eax
  434bb4:	and    ecx,DWORD PTR [esi-0x16]
  434bb7:	adc    BYTE PTR [ebx+edx*4+0x0],bl
  434bbb:	call   0x3b87ee
  434bc0:	mov    dh,0x73
  434bc2:	push   ebx
  434bc3:	data16 (bad) 
  434bc5:	mov    ss,WORD PTR ds:0x798d1f83
  434bcb:	jge    0x434c05
  434bcd:	mov    al,ds:0x70d1895e
  434bd2:	idiv   edi
  434bd4:	fwait
  434bd5:	sbb    eax,0x929c6855
  434bda:	add    BYTE PTR [eax],al
  434bdc:	cdq    
  434bdd:	or     eax,0x9f6bfd15
  434be2:	bound  eax,QWORD PTR [eax]
  434be4:	sub    al,0xa0
  434be6:	adc    edx,DWORD PTR [eax-0x1e]
  434be9:	push   edx
  434bea:	cli    
  434beb:	gs xchg edi,eax
  434bed:	or     eax,0x9fcbff2d
  434bf2:	pop    esi
  434bf3:	mov    DWORD PTR [ecx+0x7e],esp
  434bf6:	std    
  434bf7:	dec    ebx
  434bf9:	(bad)  
  434bfa:	lods   eax,DWORD PTR ds:[esi]
  434bfb:	shl    BYTE PTR [ebp+0xc41e9],0x0
	...
  434c12:	add    BYTE PTR [eax],al
  434c14:	sub    ah,bl
  434c16:	icebp  
  434c17:	cld    
  434c18:	ror    BYTE PTR [ebp-0x5f16ba8a],cl
  434c1e:	lock daa 
  434c20:	ret    
  434c21:	jge    0x434c9b
  434c23:	inc    ebp
  434c24:	leave  
  434c25:	jmp    0xe506472f
  434c2a:	scas   al,BYTE PTR es:[edi]
  434c2b:	add    BYTE PTR [ebp+0x36bfcf68],dh
  434c31:	(bad)  [eax]
  434c33:	adc    ebp,DWORD PTR [edx+0x364844fb]
  434c39:	dec    eax
  434c3a:	add    DWORD PTR [edi+0x75],edi
  434c3d:	cmp    BYTE PTR [ebp+0x45],0x65
  434c41:	jg     0x434bf4
  434c43:	sar    ebx,cl
  434c45:	xchg   ecx,eax
  434c46:	stc    
  434c47:	mov    dl,0x38
  434c49:	pop    esp
  434c4a:	or     edi,ebx
  434c4c:	push   0x6f
  434c4e:	leave  
  434c4f:	fucomi st,st(0)
  434c51:	jge    0x434c5e
  434c53:	jne    0x434cba
  434c55:	rol    DWORD PTR [edi+0xa0d522c],cl
  434c5b:	push   eax
  434c5c:	ds stos DWORD PTR es:[edi],eax
  434c5e:	cmp    BYTE PTR [esi-0x4b],ah
  434c61:	push   ecx
  434c62:	aas    
  434c63:	push   eax
  434c64:	sub    BYTE PTR [ebx+ebp*8+0x4f],ch
  434c68:	xor    dl,BYTE PTR [ebx+0x1a]
  434c6b:	sti    
  434c6c:	shr    BYTE PTR [eax],0xf4
  434c6f:	aas    
  434c70:	mov    ch,0xe9
  434c72:	(bad)  
  434c73:	jmp    0x434c8f
  434c75:	push   ebp
  434c76:	cmp    BYTE PTR [edx+0x0],0x0
	...
  434c89:	add    BYTE PTR [eax],al
  434c8b:	add    BYTE PTR [ebp-0x7f050198],dh
  434c91:	les    edi,FWORD PTR [edi-0x7b]
  434c94:	test   eax,0xdfb09be
  434c99:	(bad)  
  434c9a:	(bad)  
  434c9c:	repnz mov gs,WORD PTR [ebx+0x44]
  434ca0:	mov    esi,0xb504500b
  434ca5:	(bad)  
  434ca6:	pop    esi
  434ca7:	cdq    
  434ca8:	jmp    0x6d04:0x6513a503
  434caf:	loopne 0x434c80
  434cb1:	jne    0x434cae
  434cb3:	mov    bl,0x93
  434cb5:	pop    edx
  434cb6:	xchg   edi,eax
  434cb7:	dec    ebx
  434cb8:	mov    esi,0xda03e875
  434cbd:	dec    ebp
  434cbe:	cmp    BYTE PTR [ecx+0xf37bcb1],al
  434cc4:	sub    BYTE PTR [ebx+edx*8-0x8],ah
  434cc8:	call   0x4350:0xca04279b
  434ccf:	add    BYTE PTR [esi+0x7fdf6d3c],bh
  434cd5:	jne    0x434c8a
  434cd7:	int3   
  434cd8:	jmp    0xa3db8230
  434cdd:	inc    esi
  434cde:	or     bh,BYTE PTR [ebp-0x42]
  434ce1:	pop    es
  434ce2:	sub    eax,DWORD PTR [edx]
  434ce4:	xlat   BYTE PTR ds:[ebx]
  434ce5:	adc    BYTE PTR [ebp-0x21],dl
  434ce8:	pop    edi
  434ce9:	jne    0x434c76
  434ceb:	idiv   BYTE PTR [edi+0xda91a]
	...
  434d01:	add    BYTE PTR [eax],al
  434d03:	add    BYTE PTR [eax+edx*1-0x77],bh
  434d07:	add    bh,BYTE PTR [edi]
  434d09:	dec    edi
  434d0a:	addr16 nop
  434d0c:	pop    esi
  434d0d:	popf   
  434d0e:	pop    edi
  434d0f:	mov    esi,0x99edfc33
  434d14:	mov    edx,0x1fd76d02
  434d19:	jne    0x434d6e
  434d1b:	sbb    ch,BYTE PTR [edi+0x132fcd10]
  434d21:	cld    
  434d22:	test   al,0x99
  434d24:	mov    dh,0x2
  434d26:	ins    DWORD PTR es:[edi],dx
  434d27:	sar    edi,cl
  434d29:	je     0x434d2c
  434d2b:	ss inc ecx
  434d2d:	add    al,0x4a
  434d2f:	in     eax,0x29
  434d31:	ins    DWORD PTR es:[edi],dx
  434d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434d33:	mov    ebx,0xeb6778b8
  434d38:	xor    eax,0xab162b03
  434d3d:	js     0x434d8f
  434d3f:	pop    esp
  434d40:	adc    al,dl
  434d42:	cli    
  434d43:	cwde   
  434d44:	scas   al,BYTE PTR es:[edi]
  434d45:	pop    ss
  434d46:	dec    edi
  434d47:	push   DWORD PTR [eax+0x350d7478]
  434d4d:	add    edx,DWORD PTR [ebp+0x5078c0ec]
  434d53:	cmp    dh,BYTE PTR [ecx+edx*2-0x54fc9af]
  434d5a:	call   0x12f7f035
  434d5f:	sub    DWORD PTR [ecx-0x22060094],edi
  434d65:	or     al,0x44
  434d67:	int    0x0
	...
  434d79:	add    BYTE PTR [eax],al
  434d7b:	add    BYTE PTR [edi+eax*2+0x7e],ah
  434d7f:	mov    cl,0xa8
  434d81:	mov    BYTE PTR [ebx+0x210aeea8],dl
  434d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434d88:	mov    eax,0xb7a87e78
  434d8d:	push   es
  434d8e:	mov    ebp,?
  434d90:	test   al,0x78
  434d92:	cli    
  434d93:	bound  edx,QWORD PTR [edx]
  434d95:	mov    WORD PTR [edi-0x589a68c],es
  434d9b:	jle    0x434d59
  434d9d:	ret    0x60e8
  434da0:	mov    edx,0xc06efa93
  434da5:	les    ecx,FWORD PTR [ebp-0x46]
  434da8:	stos   DWORD PTR es:[edi],eax
  434da9:	or     dl,BYTE PTR ds:0x5178b05f
  434daf:	mov    edx,0xf4d09aa9
  434db4:	div    BYTE PTR [ebx-0x7b]
  434db7:	add    ah,bl
  434db9:	jb     0x434d42
  434dbb:	or     eax,eax
  434dbd:	xor    ch,0x8b
  434dc0:	cmp    DWORD PTR [eax+ebp*8-0xa7a455d],edx
  434dc7:	jmp    0x434dab
  434dc9:	push   cs
  434dca:	stc    
  434dcb:	dec    DWORD PTR [ecx-0x76]
  434dce:	mov    esi,0xe190bb45
  434dd3:	add    edx,DWORD PTR [esp-0xd]
  434dd7:	push   edi
  434dd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434dda:	dec    edi
  434ddb:	inc    bl
  434ddd:	div    BYTE PTR [ebx-0x18]
	...
  434df4:	mov    ch,0x9c
  434df6:	add    BYTE PTR [eax],al
  434df8:	pushf  
  434df9:	int    0x43
  434dfb:	neg    DWORD PTR [ebp-0x73ff106a]
  434e01:	(bad)
  434e05:	adc    BYTE PTR [edi],dh
  434e07:	pop    ss
  434e08:	cli    
  434e09:	idiv   BYTE PTR [esi]
  434e0b:	add    cl,cl
  434e0d:	jb     0x434e73
  434e0f:	adc    BYTE PTR [ecx],dl
  434e11:	dec    ebp
  434e12:	add    dl,BYTE PTR [eax+0x74]
  434e15:	(bad)  [edx-0x2]
  434e18:	and    ebx,DWORD PTR [eax-0x780d7707]
  434e1e:	add    esi,0xfe1e3e44
  434e24:	inc    ebx
  434e25:	clc    
  434e26:	lock mov DWORD PTR [ecx+0x33fe79bb],ebp
  434e2d:	je     0x434ead
  434e2f:	test   BYTE PTR [edi+ecx*4+0x0],cl
  434e33:	(bad)  
  434e34:	cmp    DWORD PTR [edi-0x6c34a9b7],ebp
  434e3a:	lock not BYTE PTR [ebx-0x70077e7d]
  434e41:	cmp    edi,0x74
  434e44:	mov    ch,0x2d
  434e46:	jnp    0x434e8d
  434e48:	mov    ebp,0xe5457b38
  434e4d:	sbb    BYTE PTR [esi],dl
  434e4f:	cld    
  434e50:	fdiv   DWORD PTR [edx-0x677f78f4]
  434e56:	js     0x434e50
	...
  434e6c:	cmp    al,0x24
  434e6e:	xor    ch,al
  434e70:	retf   0xc42
  434e73:	sti    
  434e74:	ss xchg edx,eax
  434e76:	or     al,0x74
  434e78:	inc    eax
  434e79:	xor    dl,BYTE PTR [esi]
  434e7b:	or     eax,0x870c81a5
  434e80:	jo     0x434e0a
  434e82:	or     al,0xb7
  434e85:	sbb    BYTE PTR [ecx-0xa0c45ae],dh
  434e8b:	out    0x66,eax
  434e8d:	jp     0x434e95
  434e8f:	sti    
  434e90:	ds jo  0x434e15
  434e93:	sti    
  434e94:	mov    ah,0xdb
  434e96:	stc    
  434e97:	cli    
  434e98:	and    BYTE PTR ds:0x50bd5d7a,dh
  434e9e:	mov    ebx,0x7a498b23
  434ea3:	jne    0x434f0e
  434ea5:	pusha  
  434ea6:	sbb    al,0x25
  434ea8:	jnp    0x434ee3
  434eaa:	cmp    bl,0x72
  434ead:	push   ecx
  434eae:	jp     0x434f07
  434eb0:	push   0x29
  434eb2:	push   es
  434eb3:	jg     0x434f17
  434eb5:	mov    cl,BYTE PTR [bx+0x73]
  434eb9:	mov    ds:0xae5e0009,eax
  434ebe:	jns    0x434eba
  434ec0:	pop    ebp
  434ec1:	cmp    al,0xe3
  434ec3:	stc    
  434ec4:	inc    edx
  434ec5:	std    
  434ec6:	adc    al,0x7f
  434ec8:	cmp    edi,ecx
  434eca:	pop    DWORD PTR [ecx]
  434ecc:	sti    
  434ecd:	stos   BYTE PTR es:[edi],al
  434ece:	or     eax,0x5
	...
  434ee3:	add    BYTE PTR [esi],bl
  434ee5:	(bad)  
  434ee6:	sbb    DWORD PTR [edx+0xaeb3b1a],esi
  434eec:	push   ds
  434eed:	jb     0x434ecc
  434eef:	and    eax,DWORD PTR [edx-0x4d6eb527]
  434ef5:	addr16 mov ds:0xfe11,al
  434ef9:	jno    0x434f62
  434efb:	or     al,0xb4
  434efd:	cld    
  434efe:	fidivr WORD PTR [esi-0x70]
  434f01:	xchg   DWORD PTR [ecx+0x21adec1b],edx
  434f07:	or     ebx,edx
  434f09:	and    BYTE PTR [esi+0xc],0xde
  434f0d:	sti    
  434f0e:	jmp    0xe9bdc754
  434f13:	push   ds
  434f14:	retf   0xa509
  434f17:	push   cs
  434f18:	int    0x5
  434f1a:	lds    ecx,FWORD PTR [ecx]
  434f1c:	mov    esi,0x9d2b7d71
  434f21:	pop    ebp
  434f22:	cwde   
  434f23:	or     DWORD PTR [esi-0x1ef0d2fa],ebp
  434f29:	mov    gs,edx
  434f2b:	sbb    BYTE PTR [edi+esi*2-0x2d],0xa
  434f30:	xor    eax,0xbe03d2f3
  434f35:	or     edx,DWORD PTR [ebx-0x448e81f4]
  434f3b:	nop
  434f3c:	pop    edx
  434f3d:	jno    0x434f7c
  434f3f:	adc    ebx,ebx
  434f41:	jo     0x434eee
  434f43:	nop
  434f44:	mov    dl,0x67
  434f46:	repnz adc DWORD PTR [eax],eax
	...
  434f59:	add    BYTE PTR [eax],al
  434f5b:	add    BYTE PTR [esi+0x71],bl
  434f5e:	gs inc ebx
  434f60:	scas   al,BYTE PTR es:[edi]
  434f61:	sbb    ch,BYTE PTR [eax-0x7488d7e4]
  434f67:	or     ah,al
  434f69:	add    al,0x94
  434f6b:	xchg   BYTE PTR [ecx-0x50],dl
  434f6e:	data16 mov BYTE PTR [esi+0x3fd0170],ch
  434f75:	jg     0x434fbb
  434f77:	aad    0xb0
  434f79:	add    al,BYTE PTR [ebp+eiz*2+0x66]
  434f7d:	add    al,0x44
  434f7f:	inc    ebp
  434f80:	data16 jbe 0x434ff7
  434f83:	in     eax,0x77
  434f85:	retf   0xf9fc
  434f88:	mov    dh,0x8f
  434f8a:	add    BYTE PTR [ebp+0x411475ff],bh
  434f90:	add    eax,0x766c00b1
  434f95:	sti    
  434f96:	or     ebp,DWORD PTR [edx-0x52]
  434f99:	je     0x434f81
  434f9b:	out    0xaf,al
  434f9d:	call   0x6e7:0x70f6f70c
  434fa4:	push   ebx
  434fa5:	retf   0x60e8
  434fa8:	cmc    
  434fa9:	js     0x43500e
  434fab:	jb     0x434fa2
  434fad:	outs   dx,BYTE PTR ds:[esi]
  434fae:	out    0xe7,al
  434fb0:	xor    ebp,ebx
  434fb2:	clc    
  434fb3:	jmp    0x60a68043
  434fb8:	jne    0x435038
  434fba:	xchg   DWORD PTR [ecx+ebp*4],ebp
  434fbd:	or     BYTE PTR [esp+edx*8+0x0],al
	...
  434fd1:	add    BYTE PTR [eax],al
  434fd3:	add    BYTE PTR [ebx],bh
  434fd5:	mov    BYTE PTR [ebx-0x6205ad4],cl
  434fdb:	push   esp
  434fdc:	mov    DWORD PTR [esi+0x44],ecx
  434fdf:	mov    ebp,0x8c667b9
  434fe4:	scas   eax,DWORD PTR es:[edi]
  434fe5:	je     0x435015
  434fe7:	mov    al,ds:0x540a4f35
  434fec:	test   BYTE PTR [eax],0xc0
  434fef:	mov    al,0xfb
  434ff1:	lahf   
  434ff2:	add    BYTE PTR [eax+ebx*8],dh
  434ff5:	arpl   WORD PTR [eax+0x8f8185],ax
  434ffb:	jmp    0x9f5901
  435000:	inc    esp
  435001:	ds dec edi
  435003:	push   ebx
  435004:	and    al,0xd7
  435006:	or     bh,bh
  435008:	stos   DWORD PTR es:[edi],eax
  435009:	pop    edx
  43500a:	leave  
  43500b:	cmp    al,0x1e
  43500d:	ja     0x434f9d
  43500f:	sar    DWORD PTR [edi+0x136a4e9d],0xf9
  435016:	inc    ebx
  435017:	in     al,0x4c
  435019:	repz icebp 
  43501b:	mov    DWORD PTR [ecx],ebp
  43501d:	cwde   
  43501e:	call   0xf5c8fcf4
  435023:	test   ah,cl
  435025:	add    BYTE PTR [edi],al
  435027:	xor    bl,BYTE PTR [esp+edx*4-0x7423fe62]
  43502e:	cmp    BYTE PTR [ebp-0x69],0x8b
  435032:	je     0x435048
  435034:	or     BYTE PTR [bp+0x6a],0x0
	...
  435049:	add    BYTE PTR [eax],al
  43504b:	add    ch,bl
  43504d:	clc    
  43504e:	inc    ebx
  43504f:	sti    
  435050:	or     al,0x94
  435052:	stos   BYTE PTR es:[edi],al
  435053:	and    BYTE PTR [edx+0x41c08486],bh
  435059:	xchg   esp,eax
  43505a:	loope  0x43503b
  43505c:	pop    ss
  43505d:	daa    
  43505e:	fisttp WORD PTR [ebx-0x5b123]
  435064:	fwait
  435065:	xchg   ebx,eax
  435066:	adc    ecx,0xb108d4d
  43506c:	pop    esi
  43506d:	in     al,dx
  43506e:	iret   
  43506f:	cmp    DWORD PTR [esi-0x6d],0xd28c00f5
  435076:	fist   WORD PTR [eax]
  435078:	xchg   DWORD PTR [edx-0x2dab1741],esp
  43507e:	fimul  DWORD PTR [eax]
  435080:	push   edi
  435081:	aad    0x48
  435083:	(bad)  
  435084:	xchg   ecx,eax
  435085:	adc    BYTE PTR [edx+0x3d],0x3a
  435089:	xchg   ebx,eax
  43508a:	add    BYTE PTR [eax],al
  43508c:	mov    ch,0x75
  43508e:	add    DWORD PTR [ebp+esi*4-0x4a9a0188],0xf08cfd82
  435099:	adc    DWORD PTR [esi-0x5eeed17a],ebp
  43509f:	pop    ds
  4350a0:	sub    edi,esi
  4350a2:	jns    0x435064
  4350a4:	test   eax,0x1e457bee
  4350a9:	loope  0x435124
  4350ab:	xor    eax,0xfb08c701
	...
  4350c4:	xor    DWORD PTR [ecx-0x884f677],edi
  4350ca:	pop    es
  4350cb:	sti    
  4350cc:	mov    ch,0x78
  4350ce:	(bad)  
  4350cf:	jns    0x4350dc
  4350d1:	ror    BYTE PTR [ebx+0x72bdeafa],1
  4350d7:	inc    ebp
  4350d8:	in     eax,0x28
  4350da:	aad    0xfa
  4350dc:	and    BYTE PTR ds:0x87018573,0x8
  4350e3:	sti    
  4350e4:	gs out dx,eax
  4350e6:	sub    bh,0xc2
  4350e9:	dec    ebx
  4350ea:	sub    dl,BYTE PTR ds:0xc07b7875
  4350f0:	sub    DWORD PTR [edi+0x40],edi
  4350f3:	inc    ebp
  4350f4:	mov    ds:0x2e2f1d01,al
  4350f9:	retf   
  4350fa:	adc    al,0xe7
  4350fc:	lods   al,BYTE PTR ds:[esi]
  4350fd:	stc    
  4350fe:	add    BYTE PTR [ebx],0xb7
  435101:	int3   
  435102:	sti    
  435103:	xchg   BYTE PTR [ebx],al
  435105:	jge    0x4350ce
  435107:	repnz or BYTE PTR [edx],ch
  43510a:	push   ss
  43510b:	push   cs
  43510c:	cs mov dh,0xec
  43510f:	gs mov ecx,0x50444f9
  435115:	int3   
  435116:	mov    edi,0x8f9005e2
  43511b:	popf   
  43511c:	out    dx,eax
  43511d:	ins    DWORD PTR es:[edi],dx
  43511e:	fwait
  43511f:	pop    es
  435120:	enter  0x935f,0xf1
  435124:	xchg   edx,eax
  435125:	test   DWORD PTR [edi],esp
  435127:	add    al,0x0
	...
  435139:	add    BYTE PTR [eax],al
  43513b:	add    BYTE PTR [edx+0x353efc66],cl
  435141:	in     al,dx
  435142:	jb     0x4350ee
  435144:	hlt    
  435145:	shr    DWORD PTR [esi+0x5],cl
  435148:	mov    esi,0xb504bf14
  43514d:	(bad)  
  43514e:	int    0xf3
  435150:	sub    esp,edx
  435152:	aaa    
  435153:	call   0x857a:0xf152de12
  43515a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43515b:	add    eax,DWORD PTR [edx-0x7660bad]
  435161:	vhaddpd xmm7,xmm7,XMMWORD PTR [eax+0x3f]
  435166:	jecxz  0x4351b5
  435168:	jo     0x4351dd
  43516a:	mov    al,ds:0xe83736f6
  43516f:	add    esi,DWORD PTR [ebp-0xb036c29]
  435175:	rcr    DWORD PTR [edx],cl
  435177:	stos   DWORD PTR es:[edi],eax
  435178:	(bad)  [edx-0x18]
  43517b:	add    esi,DWORD PTR [ebp-0x32cc52e4]
  435181:	adc    ecx,ecx
  435183:	add    eax,0x7cf819ae
  435188:	and    BYTE PTR [eax+0x67],ah
  43518b:	push   es
  43518c:	sahf   
  43518d:	in     al,0xcc
  43518f:	push   es
  435190:	and    BYTE PTR [esi+ecx*2-0x56],bh
  435194:	in     al,0xc0
  435196:	mov    edi,0xcb6d8ce4
  43519b:	jp     0x43521a
  43519d:	adc    ebx,eax
  43519f:	add    al,0x0
	...
  4351b5:	(bad)  
  4351b6:	ins    BYTE PTR es:[edi],dx
  4351b7:	sar    BYTE PTR [edx+0x756400bf],0x7d
  4351be:	push   ecx
  4351bf:	ror    DWORD PTR [ecx-0x20590572],0xe2
  4351c6:	lock jb 0x435187
  4351c9:	push   ss
  4351ca:	jl     0x435155
  4351cc:	scas   al,BYTE PTR es:[edi]
  4351cd:	ret    
  4351ce:	sbb    eax,0xf9ecbb8f
  4351d3:	xchg   BYTE PTR ds:0x311c8599,ah
  4351d9:	dec    edi
  4351da:	inc    esp
  4351db:	jle    0x43523c
  4351dd:	js     0x43518c
  4351df:	jmp    0x5194e19a
  4351e4:	call   0x8fa24b84
  4351e9:	shr    ah,cl
  4351eb:	bound  ebx,QWORD PTR [ebp-0x6b]
  4351ee:	jge    0x435211
  4351f0:	mov    ah,0xbf
  4351f2:	mov    ds:0x17e8de4b,ax
  4351f8:	mov    ebp,0xbe62fa68
  4351fd:	in     al,dx
  4351fe:	stc    
  4351ff:	call   0x9d3ce749
  435204:	xchg   esi,eax
  435205:	ja     0x43527c
  435207:	enter  0x68b8,0x86
  43520b:	pushf  
  43520c:	xchg   esi,eax
  43520d:	ja     0x43521d
  43520f:	retf   0x68b8
  435212:	jle    0x43521a
  435214:	mov    bl,0x98
  435216:	test   BYTE PTR [edi+0x0],cl
	...
  43522c:	mov    ebx,0xb36afa68
  435231:	mov    ?,WORD PTR [ebp+eiz*8-0x20]
  435235:	shl    ch,cl
  435237:	jmp    0x3f392558
  43523c:	pop    ebx
  43523d:	(bad)
  435240:	mov    ch,0x8f
  435242:	bound  esp,QWORD PTR [edx+0x42]
  435245:	jae    0x4352aa
  435247:	add    BYTE PTR ds:0x998bcc2d,al
  43524d:	mov    cl,BYTE PTR [ebx+0x43e84c7d]
  435253:	aam    0x74
  435255:	mov    dl,0x15
  435257:	(bad)  
  435258:	adc    esp,esi
  43525a:	lock xor DWORD PTR [edx],0xffffff92
  43525e:	add    eax,0xf5936684
  435263:	dec    DWORD PTR [edx+0x330cc78b]
  435269:	xchg   edx,eax
  43526a:	cmc    
  43526b:	jne    0x4352ad
  43526d:	or     DWORD PTR [esi+edx*2-0x31],edx
  435271:	mov    esi,DWORD PTR [eax-0x3]
  435274:	xchg   ebx,eax
  435275:	xchg   edx,eax
  435276:	jns    0x435270
  435278:	or     eax,0x6456021d
  43527d:	popa   
  43527e:	and    esi,edi
  435280:	arpl   WORD PTR [esi-0x6d9b7cfb],ax
  435286:	jae    0x43528e
  435288:	retf   0xef2c
  43528b:	pop    ebx
  43528c:	xchg   DWORD PTR [edi+0x45be],ecx
	...
  4352a2:	add    BYTE PTR [eax],al
  4352a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4352a5:	xchg   ebx,eax
  4352a6:	call   0xf5d9014e
  4352ab:	adc    BYTE PTR [ecx],0x97
  4352ae:	push   DWORD PTR [eax+edx*2+0x13]
  4352b2:	jl     0x4352ab
  4352b4:	push   es
  4352b5:	sbb    al,0x90
  4352b7:	jmp    FWORD PTR [ecx]
  4352b9:	test   ch,dh
  4352bb:	jne    0x435278
  4352bd:	add    eax,0x5ac453f7
  4352c2:	std    
  4352c3:	jmp    DWORD PTR [ebx+0x90fc0ea]
  4352c9:	aam    0xe1
  4352cb:	test   cl,bl
  4352cd:	call   0x97bbd6be
  4352d2:	jns    0x4352c0
  4352d4:	mov    ch,0x8c
  4352d6:	scas   eax,DWORD PTR es:[edi]
  4352d7:	push   ecx
  4352d8:	jmp    0xff4c:0xf87f0385
  4352df:	mov    cl,dh
  4352e1:	xchg   esp,eax
  4352e2:	in     al,dx
  4352e3:	or     dh,BYTE PTR [edi]
  4352e5:	into   
  4352e6:	std    
  4352e7:	push   DWORD PTR [ebp-0x42dc4635]
  4352ed:	test   al,0x1c
  4352ef:	popa   
  4352f0:	xlat   BYTE PTR ds:[ebx]
  4352f1:	or     al,BYTE PTR ds:0x7a727584
  4352f7:	pop    ecx
  4352f8:	mov    ah,0x78
  4352fa:	(bad)  
  4352fb:	cs jne 0x4352b7
  4352fe:	jne    0x435344
  435300:	fst    DWORD PTR [edi+eax*8+0x44]
  435304:	shl    DWORD PTR [ecx+0x7c],0x3c
	...
  43531c:	mov    ah,0x78
  43531e:	inc    BYTE PTR [esi+0x3ff04cb8]
  435324:	mov    ch,0xdd
  435326:	mov    dl,0xf
  435328:	bound  ecx,QWORD PTR [esi+0x5]
  43532b:	sti    
  43532c:	leave  
  43532d:	imul   DWORD PTR [edi+eiz*8-0x4fb4f2a]
  435334:	ds test eax,0x98917476
  43533a:	(bad)  
  43533b:	repnz mov dl,0xf4
  43533e:	fild   DWORD PTR [eax]
  435340:	mov    ch,0x78
  435342:	jle    0x4353c1
  435344:	sar    DWORD PTR [eax-0x76],0x9
  435348:	arpl   WORD PTR [ecx-0x5732f876],ax
  43534e:	pushf  
  43534f:	stc    
  435350:	mov    edx,0xb500177f
  435355:	js     0x4353d0
  435357:	inc    ebp
  435358:	mov    ebp,0xa3634d90
  43535d:	jns    0x4353d7
  43535f:	inc    esp
  435360:	ror    DWORD PTR [edi-0x4c096efd],1
  435366:	repz push ebx
  435368:	cmp    al,0xeb
  43536a:	or     ebx,DWORD PTR [ecx*4+0x7e024967]
  435371:	adc    ebp,DWORD PTR [eax-0x17d5c6ed]
  435377:	add    esi,DWORD PTR [ebp-0x72d7d3e4]
  43537d:	mov    edi,0x78aa
	...
  435392:	add    BYTE PTR [eax],al
  435394:	xchg   ecx,eax
  435395:	scas   eax,DWORD PTR es:[edi]
  435396:	pop    DWORD PTR [ebx-0x27]
  435399:	imul   ebx,DWORD PTR [ebx-0x404c0171],0xd3b3ee8c
  4353a3:	push   esp
  4353a4:	xor    dl,BYTE PTR [edi-0x56]
  4353a7:	dec    eax
  4353a8:	fldenv [ebx-0x4c897319]
  4353ae:	mov    bl,0x8c
  4353b0:	sahf   
  4353b1:	mov    bl,0x27
  4353b3:	in     al,dx
  4353b4:	push   0x390361f6
  4353b9:	dec    edi
  4353ba:	jmp    0x435343
  4353bc:	mov    ecx,DWORD PTR [edi+0x516703e7]
  4353c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4353c3:	daa    
  4353c4:	stos   BYTE PTR es:[edi],al
  4353c5:	pop    DWORD PTR [edx-0x29]
  4353c8:	xchg   DWORD PTR [esp+ebp*4],ebx
  4353cb:	daa    
  4353cc:	mov    eax,ds:0xa527ac18
  4353d1:	sbb    BYTE PTR [edi+eiz*1+0x6f6b77c1],ch
  4353d8:	iret   
  4353d9:	imul   ebp,DWORD PTR [edi-0xc],0x669c6283
  4353e0:	addr16 push 0x37
  4353e3:	(bad)  
  4353e4:	outs   dx,BYTE PTR ds:[esi]
  4353e5:	mov    bl,0xc7
  4353e7:	push   ebx
  4353e8:	pop    es
  4353e9:	imul   esi,DWORD PTR [edi+eiz*1-0x1f],0x9129009c
  4353f1:	xor    BYTE PTR [ebp-0x12],0xb7
  4353f5:	adc    eax,ecx
  4353f7:	pop    ebp
	...
  43540c:	aad    0x64
  43540e:	jne    0x435415
  435410:	mov    eax,ds:0xbd0d7d1a
  435415:	ja     0x43547b
  435417:	cmp    eax,0xa98564b7
  43541c:	jmp    0xc27f:0x9d2df996
  435423:	sub    eax,0xf9ff948d
  435428:	mov    bh,0x64
  43542a:	inc    ebp
  43542b:	int    0xa6
  43542d:	fs jne 0x4353f5
  435430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435431:	sbb    cl,BYTE PTR [ebp-0x33]
  435434:	mov    dh,BYTE PTR [edi+0x3d]
  435437:	add    dh,BYTE PTR [edi-0xc86799c]
  43543d:	pop    esp
  43543e:	je     0x435474
  435440:	ss in  eax,0x24
  435443:	out    0xb6,al
  435445:	jecxz  0x435456
  435447:	outs   dx,BYTE PTR ds:[esi]
  435448:	mov    ds:0x7a7238b3,al
  43544d:	mov    bl,0x38
  43544f:	pop    esi
  435450:	xor    BYTE PTR [ebx-0x366abee0],0xfa
  435457:	dec    esi
  435458:	and    eax,0xdef924dd
  43545d:	or     ah,BYTE PTR [edi+0x3f]
  435460:	mov    bh,0x1a
  435462:	jne    0x435471
  435464:	mov    ebp,0xb4c81977
  435469:	fs cli 
  43546b:	popf   
  43546c:	call   0x0:0x93e8af
	...
  435483:	add    BYTE PTR [edx+0x65],bh
  435486:	cli    
  435487:	bound  edi,QWORD PTR [edx-0x4d]
  43548a:	and    al,0xa9
  43548c:	sub    ebp,ecx
  43548e:	and    al,0x0
  435490:	sub    BYTE PTR [ecx+0x129b1443],0xc4
  435497:	(bad)  
  435498:	stos   DWORD PTR es:[edi],eax
  435499:	mov    cs,WORD PTR [ebx-0x177b8f8c]
  43549f:	hlt    
  4354a0:	cld    
  4354a1:	(bad)  
  4354a2:	cmc    
  4354a3:	mov    al,0x9d
  4354a5:	jnp    0x4354aa
  4354a7:	(bad)  
  4354a8:	loopne 0x435461
  4354aa:	sbb    al,ch
  4354ac:	jae    0x4354a1
  4354ae:	idiv   bh
  4354b0:	outs   dx,BYTE PTR ds:[esi]
  4354b1:	dec    esp
  4354b2:	push   edi
  4354b3:	pop    esi
  4354b4:	xchg   edi,eax
  4354b5:	sbb    ah,ch
  4354b7:	pop    ebp
  4354b8:	push   cs
  4354b9:	add    DWORD PTR [eax],0x55
  4354bc:	xlat   BYTE PTR ds:[ebx]
  4354bd:	pop    edi
  4354be:	jnp    0x4354a4
  4354c0:	adc    al,0xc
  4354c2:	out    0x84,al
  4354c4:	pop    esp
  4354c5:	mov    WORD PTR [eax],es
  4354c7:	push   ebx
  4354c8:	add    dh,0x29
  4354cb:	fstp   TBYTE PTR [edi-0x7]
  4354ce:	cmc    
  4354cf:	mov    ebp,DWORD PTR [esi+ecx*4+0x7bcf046e]
  4354d6:	mov    dh,0xd6
  4354d8:	stos   DWORD PTR es:[edi],eax
  4354d9:	mov    cs,WORD PTR [ecx+0x6a]
  4354dc:	mov    ecx,DWORD PTR [esi-0x287af792]
  4354e2:	and    al,0x2c
  4354e4:	dec    edi
  4354e5:	je     0x43548d
  4354e7:	(bad)  
	...
  4354fc:	imul   ecx,DWORD PTR [esi-0x719495b7],0x6e
  435503:	or     al,0x65
  435505:	xlat   BYTE PTR ds:[ebx]
  435506:	and    al,0x34
  435508:	dec    edi
  435509:	je     0x4354a1
  43550b:	(bad)  
  43550c:	stos   DWORD PTR es:[edi],eax
  43550d:	mov    es,WORD PTR [ecx+0x24e755f0]
  435513:	xor    ch,dl
  435515:	(bad)  
  435516:	and    al,0x20
  435518:	fisttp DWORD PTR [edi]
  43551a:	popa   
  43551b:	add    DWORD PTR [ebp+0x5938fe76],esi
  435521:	push   edx
  435522:	or     edi,DWORD PTR es:[ecx]
  435525:	push   es
  435526:	(bad)  
  435527:	push   DWORD PTR [ebp+0x390af551]
  43552d:	cs (bad) 
  43552f:	push   DWORD PTR [ebp+0x9085b20]
  435535:	add    DWORD PTR gs:[ecx+edx*8-0x80],esi
  43553a:	push   DWORD PTR [ebx-0x27]
  43553d:	xchg   esp,eax
  43553e:	in     al,dx
  43553f:	and    edi,DWORD PTR [esi-0x727a0188]
  435545:	inc    eax
  435546:	cmp    BYTE PTR [ecx],al
  435548:	mov    ch,0x78
  43554a:	mov    eax,DWORD PTR [ebx-0x67]
  43554d:	xchg   esp,eax
  43554e:	push   esp
  43554f:	mov    ecx,edi
  435551:	mov    WORD PTR [eax+ebp*8],?
  435554:	xchg   edx,eax
  435555:	jg     0x435555
  435557:	cli    
  435558:	xor    DWORD PTR ds:[edi+0x3d5c997b],eax
  43555f:	test   DWORD PTR [eax],0x0
	...
  435571:	add    BYTE PTR [eax],al
  435573:	add    BYTE PTR [edx-0x4afef114],ch
  435579:	js     0x43557c
  43557b:	je     0x43554e
  43557d:	inc    eax
  43557e:	mov    ebx,DWORD PTR [ebx-0x27]
  435581:	cmp    bh,0x73
  435584:	ror    DWORD PTR [esi+eiz*8-0x42],1
  435588:	(bad)  
  435589:	js     0x435589
  43558b:	xchg   BYTE PTR [ecx-0x6680d774],al
  435591:	xchg   esp,eax
  435592:	sbb    al,0x0
  435594:	repz sub al,0x22
  435597:	or     esi,DWORD PTR [ebp+0x310af7f3]
  43559d:	xchg   ch,bh
  43559f:	push   DWORD PTR [ebp+0x2e35f851]
  4355a5:	scas   al,BYTE PTR es:[edi]
  4355a6:	mov    al,BYTE PTR [edi-0x71]
  4355a9:	(bad)  
  4355aa:	out    0xf8,al
  4355ac:	dec    ebx
  4355ad:	dec    edi
  4355ae:	in     al,0x6d
  4355b0:	mov    ebx,DWORD PTR [eax]
  4355b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4355b3:	daa    
  4355b4:	popf   
  4355b5:	sbb    BYTE PTR [edi+eiz*1-0x73763537],ah
  4355bc:	ss stos DWORD PTR es:[edi],eax
  4355be:	ins    DWORD PTR es:[edi],dx
  4355bf:	add    esi,DWORD PTR [ebp+0x5a86898f]
  4355c5:	fcmovnu st,st(5)
  4355c7:	imul   ecx,esp,0x300f19ce
  4355cd:	psubsb mm0,QWORD PTR [ebx]
  4355d0:	mov    ch,0xed
  4355d2:	pop    esi
  4355d3:	mov    dh,dl
  4355d5:	adc    ebp,eax
  4355d7:	add    eax,DWORD PTR [eax]
	...
  4355e9:	add    BYTE PTR [eax],al
  4355eb:	add    BYTE PTR [ebp-0x193b9313],dh
  4355f1:	lea    eax,[ecx+0x3d]
  4355f4:	mul    BYTE PTR [edi-0x34d78ec4]
  4355fa:	add    ebx,DWORD PTR [ebp+eiz*8-0x13]
  4355fe:	stos   BYTE PTR es:[edi],al
  4355ff:	dec    eax
  435600:	xchg   ecx,eax
  435601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435602:	fisubr DWORD PTR [ecx]
  435604:	sub    al,0xcb
  435606:	retf   
  435607:	aas    
  435608:	ds jl  0x43561e
  43560b:	adc    dh,BYTE PTR [ebp-0x71]
  43560e:	jo     0x435658
  435610:	shl    DWORD PTR [ebx+0x7fd9486e],1
  435616:	pop    ss
  435617:	lea    esi,[esi-0x55]
  43561a:	and    edi,edi
  43561c:	test   eax,0xb543f5db
  435621:	adc    al,0xac
  435623:	daa    
  435624:	leave  
  435625:	sbb    BYTE PTR [edi+eiz*1+0x27a44e71],ch
  43562c:	test   DWORD PTR [esi+0x77b503e7],ecx
  435632:	jl     0x43566e
  435634:	fbld   TBYTE PTR [ebp+0x1]
  435637:	ins    DWORD PTR es:[edi],dx
  435638:	icebp  
  435639:	loope  0x435660
  43563b:	repnz push edx
  43563d:	stos   DWORD PTR es:[edi],eax
  43563e:	sbb    al,0x9b
  435640:	mov    edx,0xaac54d0e
  435645:	ret    0x2f85
  435648:	leave  
  435649:	stos   BYTE PTR es:[edi],al
  43564a:	dec    esp
  43564b:	lss    ebp,FWORD PTR [edx+0x4d]
  43564f:	int    0x0
	...
  435661:	add    BYTE PTR [eax],al
  435663:	add    dl,dl
  435665:	mov    dh,0x5c
  435667:	(bad)
  43566a:	in     eax,dx
  43566b:	imul   dl
  43566d:	stos   DWORD PTR es:[edi],eax
  43566e:	sbb    dl,al
  435670:	(bad)  
  435671:	mov    eax,0x51ad0d5c
  435676:	inc    ebp
  435677:	add    eax,0x2df98eb2
  43567c:	int    0x87
  43567e:	test   DWORD PTR ds:0x24ffab9d,esp
  435684:	popf   
  435685:	jg     0x435686
  435687:	sbb    al,0x8d
  435689:	jnp    0x435688
  43568b:	mov    cl,0x99
  43568d:	retf   
  43568e:	and    al,0xd1
  435690:	ret    
  435691:	in     eax,0x4b
  435693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435694:	dec    ebx
  435695:	push   0xffffff81
  435697:	sbb    eax,0x1d00988d
  43569c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43569d:	push   0x77d2c575
  4356a2:	push   0x11
  4356a4:	sub    ebp,DWORD PTR [edx-0x79]
  4356a7:	mov    eax,ds:0x9230630f
  4356ac:	sbb    esp,ecx
  4356ae:	and    al,0xcd
  4356b0:	push   ds
  4356b1:	adc    eax,0x140b6747
  4356b6:	jne    0x4356bd
  4356b8:	lds    esi,FWORD PTR [edi+0x2d]
  4356bb:	mov    dh,0xf8
  4356bd:	imul   edi,edx,0xe8af9ad5
  4356c3:	add    dl,dh
  4356c5:	(bad)  
  4356c6:	idiv   bh
	...
  4356dc:	mov    ds:0x742824dc,eax
  4356e1:	out    0x42,eax
  4356e3:	(bad)  
  4356e4:	mov    ds:0xec246e65,eax
  4356e9:	js     0x435751
  4356eb:	dec    edx
  4356ec:	mov    ds:0x565e5765,al
  4356f1:	push   ecx
  4356f2:	push   ebx
  4356f3:	mov    edi,DWORD PTR [ecx-0x63fb4511]
  4356f9:	mov    DWORD PTR [ecx-0xd92f014],0x4992183
  435703:	mov    ebx,esi
  435705:	fiadd  WORD PTR [edi]
  435707:	push   0xffffff9d
  435709:	js     0x435720
  43570b:	(bad)  
  43570c:	arpl   WORD PTR [edx-0x1d],sp
  43570f:	add    bl,BYTE PTR [esi-0x5e1a7cb5]
  435715:	push   ecx
  435716:	(bad)  
  435717:	dec    ecx
  435719:	push   ss
  43571a:	out    0x83,al
  43571c:	js     0x435781
  43571e:	jnp    0x43579d
  435720:	push   esp
  435721:	mov    WORD PTR [ecx+0x62988ec2],es
  435727:	add    BYTE PTR [ebx*2+0x7623fffd],ah
  43572e:	cld    
  43572f:	xor    DWORD PTR [esi+edx*1],ecx
  435732:	in     eax,0x5d
  435734:	pop    esi
  435735:	xchg   edi,eax
  435736:	add    bh,bh
  435738:	sub    BYTE PTR [esp+eax*1+0x6290c652],ch
  43573f:	add    DWORD PTR [eax],eax
	...
  435751:	add    BYTE PTR [eax],al
  435753:	add    BYTE PTR [esi+ecx*8],dh
  435756:	cld    
  435757:	jmp    DWORD PTR [ebx-0x6c0001af]
  43575d:	out    0x24,eax
  43575f:	add    al,0x3e
  435761:	test   BYTE PTR [eax],0x6a
  435764:	mov    ch,0x77
  435766:	out    0x2d,al
  435768:	icebp  
  435769:	aam    0xfb
  43576b:	mov    ebp,0x875376b1
  435770:	shl    esi,1
  435772:	lock and esi,DWORD PTR [edi-0x79b1018a]
  435779:	cmp    DWORD PTR [edi+0x7c],0x875577bd
  435780:	mov    edi,0xaafb59dd
  435785:	hlt    
  435786:	add    DWORD PTR cs:[ebp-0x4ebd7688],esi
  43578d:	adc    dh,BYTE PTR [edi]
  43578f:	sbb    BYTE PTR [edx-0x4afedd14],dh
  435795:	js     0x4357eb
  435797:	push   eax
  435798:	xchg   edx,eax
  435799:	cmp    al,0x86
  43579b:	push   cs
  43579c:	cmc    
  43579d:	js     0x435720
  43579f:	div    DWORD PTR [ecx+esi*2+0x78b59083]
  4357a6:	(bad)  
  4357a7:	cli    
  4357a8:	jmp    0xc5f6:0x51748b6c
  4357af:	cli    
  4357b0:	dec    ebp
  4357b1:	aaa    
  4357b2:	ss cli 
  4357b4:	pop    edx
  4357b5:	cmc    
  4357b6:	mov    ebp,0xa
	...
  4357cb:	add    BYTE PTR [ecx],bh
  4357cd:	xor    edi,esi
  4357cf:	push   DWORD PTR [ebp+0x40db82db]
  4357d5:	add    bh,ch
  4357d7:	dec    edi
  4357d8:	dec    ebp
  4357d9:	outs   dx,DWORD PTR ds:[esi]
  4357da:	sub    BYTE PTR [eax],al
  4357dc:	mov    ch,0xec
  4357de:	mov    ebp,0x73099473
  4357e3:	in     al,0xd
  4357e5:	sub    esp,eax
  4357e7:	cli    
  4357e8:	sbb    ch,dh
  4357ea:	in     eax,dx
  4357eb:	ss push es
  4357ed:	pop    ebp
  4357ee:	dec    ebx
  4357ef:	push   edx
  4357f0:	cmp    BYTE PTR [eax+0x6301df6c],dl
  4357f6:	pop    ebx
  4357f7:	push   ebx
  4357f8:	gs ja  0x435879
  4357fb:	and    ebp,edi
  4357fd:	bound  esp,QWORD PTR [ebp-0x3d]
  435800:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435802:	xchg   esi,eax
  435803:	cld    
  435804:	imul   ebp,DWORD PTR [ebx+0x6d],0x60bfe546
  43580b:	pop    esi
  43580c:	lds    ebx,FWORD PTR [eax]
  43580e:	(bad)  
  43580f:	idiv   DWORD PTR ds:0x1eeb1fc5
  435815:	xchg   BYTE PTR [edx],bl
  435817:	cld    
  435818:	ss push eax
  43581a:	pushf  
  43581b:	sbb    ch,BYTE PTR [esi-0x14212464]
  435821:	(bad)  
  435822:	je     0x4357aa
  435824:	jle    0x43588a
  435826:	sti    
  435827:	sti    
  435828:	jmp    0x3f78:0x2f3ad14
  43582f:	sbb    al,BYTE PTR [eax]
	...
  435841:	add    BYTE PTR [eax],al
  435843:	add    BYTE PTR [esi+0x7e417062],cl
  435849:	adc    al,0x25
  43584b:	hlt    
  43584c:	xchg   edx,eax
  43584d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43584e:	cli    
  43584f:	cli    
  435850:	outs   dx,DWORD PTR ds:[esi]
  435851:	mov    ecx,0x61fc45bf
  435856:	ret    
  435857:	mov    ecx,ebp
  435859:	imul   edx,eax,0x35
  43585c:	popf   
  43585d:	popa   
  43585e:	mov    bl,0xef
  435860:	xchg   ebp,eax
  435861:	mul    ebx
  435863:	add    al,0xb5
  435865:	(bad)  
  435866:	je     0x4357e9
  435868:	pop    esi
  435869:	fs fwait
  43586b:	sti    
  43586c:	jmp    0xa37c:0x2e001b62
  435873:	adc    eax,0x392f8f75
  435878:	and    ecx,DWORD PTR [edi-0x1659fc19]
  43587e:	add    BYTE PTR [edi-0x4eff998c],ch
  435884:	ins    DWORD PTR es:[edi],dx
  435885:	data16 jne 0x43584c
  435888:	xor    ecx,ebx
  43588a:	or     BYTE PTR [edx],bl
  43588c:	pop    es
  43588d:	loope  0x435887
  43588f:	jmp    0x4358f5
  435891:	xchg   DWORD PTR [ebp+0x29],edi
  435894:	out    dx,eax
  435895:	sar    DWORD PTR [ebp+0x2e],1
  435898:	mov    cl,0xbe
  43589a:	call   0xfaa8e367
  43589f:	(bad)  
  4358a0:	leave  
  4358a1:	cwde   
  4358a2:	in     eax,dx
  4358a3:	mov    ah,0xb5
  4358a5:	pop    ss
  4358a6:	pop    esp
  4358a7:	add    BYTE PTR es:[eax],al
	...
  4358ba:	add    BYTE PTR [eax],al
  4358bc:	rcr    BYTE PTR [eax-0x429c179a],cl
  4358c2:	mov    ebp,DWORD PTR [ebp+ecx*4+0x64]
  4358c6:	cli    
  4358c7:	push   cs
  4358c8:	add    ecx,edx
  4358ca:	dec    ebp
  4358cb:	push   es
  4358cc:	les    edi,FWORD PTR [edi-0x1f4956f3]
  4358d2:	clc    
  4358d3:	leave  
  4358d4:	mov    edi,0xceee4404
  4358d9:	ret    0x5cf9
  4358dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4358dd:	ror    BYTE PTR [ebp+0x3a],1
  4358e0:	out    0x12,eax
  4358e2:	test   BYTE PTR [ebp+0x39fa666d],dh
  4358e8:	pop    ecx
  4358e9:	fistp  QWORD PTR ds:0xc10ab6e9
  4358ef:	out    dx,al
  4358f0:	inc    ebp
  4358f1:	int3   
  4358f2:	stc    
  4358f3:	pop    ds
  4358f4:	popa   
  4358f5:	sbb    eax,0xc74faf49
  4358fa:	xchg   BYTE PTR [esi+edi*1],ch
  4358fd:	(bad)  
  4358fe:	push   ebp
  4358ff:	mov    al,0x70
  435901:	lea    eax,[eax]
  435903:	xor    DWORD PTR [eax-0x28],0x90668ef9
  43590a:	mov    esi,0x498d1000
  43590f:	push   0xc
  435911:	call   0xd3e8:0xca1c6ad1
  435918:	aam    0x64
  43591a:	test   DWORD PTR [edx+0x4bac1cf],0x0
	...
  435934:	or     al,0x75
  435936:	les    edi,FWORD PTR ds:0x4bc658a
  43593c:	fdivr  QWORD PTR [ecx-0x202797b3]
  435942:	inc    eax
  435943:	add    BYTE PTR [esi],al
  435945:	lea    ebp,[edx]
  435947:	fisttp DWORD PTR [ebx+0x1c109c7f]
  43594d:	lea    eax,[ecx+0x6e6551f8]
  435953:	xor    al,0x1
  435955:	adc    ch,BYTE PTR ds:0xccac90
  43595b:	push   esi
  43595c:	ss mov ecx,fs
  43595f:	adc    eax,DWORD PTR [edx+0x65]
  435962:	adc    eax,0xcc7c8c
  435967:	test   esp,ebx
  435969:	lock std 
  43596b:	dec    edi
  43596c:	fwait
  43596d:	nop
  43596e:	mov    al,ds:0x4e8bcc10
  435973:	push   edi
  435974:	pop    ebx
  435975:	push   eax
  435976:	xor    eax,0xffffffe1
  435979:	pop    ebp
  43597a:	jne    0x435960
  43597c:	lods   al,BYTE PTR ds:[esi]
  43597d:	mov    esi,0x907b01a9
  435982:	cwde   
  435983:	adc    BYTE PTR [ebx+ecx*4+0x11ab5d56],cl
  43598a:	mov    ebx,0x8f1e5b
  43598f:	jmp    DWORD PTR [eax-0x59adfb51]
  435995:	mov    WORD PTR [edx+0x0],fs
	...
  4359ac:	mov    ch,0xe
  4359ae:	push   esp
  4359af:	imul   BYTE PTR [edx]
  4359b1:	adc    ebx,eax
  4359b3:	add    esi,DWORD PTR [ebp-0x4edb8ef7]
  4359b9:	test   BYTE PTR [edx+0x0],ch
  4359bc:	lahf   
  4359bd:	jbe    0x4359a5
  4359bf:	cmp    eax,0xbdf7f10f
  4359c4:	mov    ecx,0x9874b76
  4359c9:	imul   eax
  4359cb:	pop    ds
  4359cc:	mov    ecx,0x8251fe76
  4359d1:	ret    
  4359d2:	test   eax,0xf7c8dedd
  4359d7:	xchg   bh,bl
  4359d9:	mov    ebp,0x98d2ca1a
  4359de:	stc    
  4359df:	lods   eax,DWORD PTR ds:[esi]
  4359e0:	mov    ah,0x76
  4359e2:	(bad)  
  4359e3:	gs test eax,0x28006c26
  4359e9:	sti    
  4359ea:	aad    0x7e
  4359ec:	jge    0x435974
  4359ee:	in     al,dx
  4359ef:	aas    
  4359f0:	(bad)  [esi+0x177584f7]
  4359f6:	adc    eax,DWORD PTR [edi-0x679a068d]
  4359fc:	ins    DWORD PTR es:[edi],dx
  4359fd:	sub    bh,dh
  4359ff:	mov    WORD PTR [eax],?
  435a01:	jns    0x4359f4
  435a03:	cli    
  435a04:	sbb    BYTE PTR [ecx+0x3e9befec],0xf9
  435a0b:	test   BYTE PTR [ebp+0x76],dh
  435a0e:	mov    edi,DWORD PTR [edi+0x0]
	...
  435a24:	xor    DWORD PTR [ecx],ebp
  435a26:	imul   ecx,DWORD PTR [ecx],0xffffffa6
  435a29:	sub    BYTE PTR [eax-0x77],ah
  435a2c:	xor    cl,bh
  435a2e:	repnz cli 
  435a30:	push   edx
  435a31:	loopne 0x435a1a
  435a33:	add    BYTE PTR [ebp+0x57848368],dh
  435a39:	nop
  435a3a:	sahf   
  435a3b:	clc    
  435a3c:	aas    
  435a3d:	push   esi
  435a3e:	call   0x1d0bcf46
  435a43:	sti    
  435a44:	xchg   edx,eax
  435a45:	pop    ebx
  435a46:	adc    eax,0x6d0cb544
  435a4b:	rcr    DWORD PTR [ecx],cl
  435a4d:	pop    edi
  435a4e:	jnp    0x435aa3
  435a50:	push   cs
  435a51:	test   ebx,ebx
  435a53:	adc    dh,BYTE PTR [ebp-0x71]
  435a56:	data16 jbe 0x435a06
  435a59:	nop
  435a5a:	fstp   DWORD PTR [edi]
  435a5c:	xor    dl,bh
  435a5e:	jecxz  0x435ac1
  435a60:	jb     0x4359f9
  435a62:	out    0x6f,eax
  435a64:	ret    0x4abf
  435a67:	push   cs
  435a68:	loope  0x4359eb
  435a6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435a6b:	add    ebx,edx
  435a6d:	push   ds
  435a6e:	cwde   
  435a6f:	clc    
  435a70:	inc    edi
  435a71:	xchg   ebx,eax
  435a72:	fs jle 0x435a6f
  435a75:	pop    esp
  435a76:	sub    edi,eax
  435a78:	jb     0x435ae1
  435a7a:	in     al,dx
  435a7b:	and    DWORD PTR [ebp+0x40070e8f],esi
  435a81:	adc    al,0x38
  435a83:	imul   BYTE PTR [edi+0xebb85e]
	...
  435a99:	add    BYTE PTR [eax],al
  435a9b:	add    BYTE PTR ds:0xfff801d3,dl
  435aa1:	mov    ebp,0x8fb6c530
  435aa6:	pushf  
  435aa7:	mov    WORD PTR [esi-0x1a04fbee],ds
  435aad:	shl    BYTE PTR [esi],0x4e
  435ab0:	sub    bl,ah
  435ab2:	add    ecx,DWORD PTR [ebx*2+0x6ff666b5]
  435ab9:	or     ah,BYTE PTR [edx-0x3ded1a14]
  435abf:	div    DWORD PTR [esi]
  435ac1:	dec    edi
  435ac2:	xor    al,0x1a
  435ac4:	pop    ebp
  435ac5:	push   cs
  435ac6:	add    edi,ebx
  435ac8:	mov    dh,0x8f
  435aca:	lods   eax,DWORD PTR ds:[esi]
  435acb:	call   0xf16824fd
  435ad0:	dec    esi
  435ad1:	call   0xaa86:0xb82a9f7d
  435ad8:	mov    ss,WORD PTR [esi]
  435ada:	in     al,0x2c
  435adc:	not    DWORD PTR [ecx+0x74ffbb00]
  435ae2:	call   0xd61278
  435ae7:	jmp    0xe601ea32
  435aec:	mov    dh,0x67
  435aee:	push   0xffffffee
  435af0:	mov    dh,0x8f
  435af2:	mov    al,0xe8
  435af4:	hlt    
  435af5:	xchg   ecx,eax
  435af6:	add    BYTE PTR [edx],bl
  435af8:	icebp  
  435af9:	popf   
  435afa:	(bad)  
  435afb:	loopne 0x435ab6
  435afd:	sbb    eax,0xe905
	...
  435b12:	add    BYTE PTR [eax],al
  435b14:	js     0x435af4
  435b16:	pop    es
  435b17:	jmp    0x435b1f
  435b19:	(bad)  
  435b1a:	mov    esi,0x85c4b6ed
  435b1f:	cmp    eax,0xb8f97236
  435b24:	aaa    
  435b25:	fisttp DWORD PTR [eax]
  435b27:	call   0x62951d33
  435b2c:	(bad)  
  435b2d:	push   ss
  435b2e:	lock xchg esi,eax
  435b30:	mov    ds:0xec12c0ab,al
  435b35:	fdivr  QWORD PTR [edx-0x1b]
  435b38:	mov    dh,0xe2
  435b3a:	and    BYTE PTR [ecx-0x1605a2aa],al
  435b40:	mov    gs,WORD PTR ds:0x1483e743
  435b46:	rcl    DWORD PTR [ebp-0x40],0x14
  435b4a:	stc    
  435b4b:	shr    ecx,0xc2
  435b4e:	stc    
  435b4f:	into   
  435b50:	dec    edi
  435b51:	pop    ebx
  435b52:	das    
  435b53:	add    BYTE PTR [esp+ecx*1],cl
  435b56:	inc    eax
  435b57:	add    al,0xd9
  435b59:	push   eax
  435b5a:	outs   dx,BYTE PTR ds:[esi]
  435b5b:	(bad)  
  435b5c:	xlat   BYTE PTR ds:[ebx]
  435b5d:	loop   0x435b63
  435b5f:	call   0x392953
  435b64:	enter  0x6e50,0xca
  435b68:	pcmpgtd mm7,QWORD PTR [edi]
  435b6b:	cmp    ecx,eax
  435b6d:	mov    ebp,DWORD PTR [esi+0x11]
  435b70:	xor    ebp,DWORD PTR [ebp+0x5d1affb1]
  435b76:	loop   0x435b56
	...
  435b8c:	stos   BYTE PTR es:[edi],al
  435b8d:	test   DWORD PTR fs:[edi+0x47],0x837208d8
  435b95:	and    BYTE PTR [ecx],al
  435b97:	pop    edi
  435b98:	repnz mov ecx,0x4f31e581
  435b9e:	(bad)  
  435b9f:	jmp    FWORD PTR [ecx]
  435ba1:	or     ah,dh
  435ba3:	and    DWORD PTR [eax-0x33000578],0x47d981c1
  435bad:	rol    DWORD PTR [esi+edx*2],1
  435bb0:	pop    ecx
  435bb1:	push   eax
  435bb2:	pop    es
  435bb3:	test   BYTE PTR [ecx-0x70],ch
  435bb6:	add    BYTE PTR [eax],al
  435bb8:	inc    edi
  435bb9:	ror    BYTE PTR [ebx+esi*1],0xe5
  435bbd:	bswap  esp
  435bbf:	prefetcht0 BYTE PTR [ecx]
  435bc2:	cli    
  435bc3:	dec    DWORD PTR [ecx+ecx*1-0x5ed8f7c6]
  435bca:	stc    
  435bcb:	dec    ebp
  435bcc:	test   BYTE PTR [ecx],dl
  435bce:	mov    edx,0xf3df5604
  435bd3:	test   ebp,edx
  435bd5:	in     al,dx
  435bd6:	outs   dx,BYTE PTR ds:[esi]
  435bd7:	push   0xffffffb4
  435bd9:	imul   esp,DWORD PTR [esi],0x46
  435bdc:	xchg   edx,eax
  435bdd:	bound  eax,QWORD PTR [ebp+0x1fbab5c0]
  435be3:	xchg   esi,ebp
  435be5:	jb     0x435ba4
  435be7:	jmp    DWORD PTR [esi-0x1e]
  435bea:	inc    esp
  435beb:	add    BYTE PTR [esi],dh
  435bed:	(bad)  
  435bee:	or     BYTE PTR [eax],al
	...
  435c04:	ss (bad) 
  435c06:	adc    al,0x0
  435c08:	jp     0x435bb0
  435c0a:	or     al,0x0
  435c0c:	sub    BYTE PTR [esi+0x6275c204],ah
  435c12:	dec    DWORD PTR [eax-0x10769583]
  435c18:	push   cs
  435c19:	push   0xdc30f231
  435c1e:	jo     0x435c5e
  435c20:	inc    eax
  435c21:	repz cld 
  435c23:	cld    
  435c24:	or     ah,ch
  435c26:	push   esp
  435c27:	mov    ax,0xe0e
  435c2b:	sbb    al,0xfb
  435c2d:	hlt    
  435c2e:	cmp    BYTE PTR [edi-0x72b2a997],0x30
  435c35:	mov    esi,0x15e2faf1
  435c3a:	mov    ecx,edi
  435c3c:	int    0xf5
  435c3e:	(bad)  
  435c3f:	cli    
  435c40:	sar    ah,cl
  435c42:	sbb    BYTE PTR [esi-0x4f],0x66
  435c46:	out    0xa3,al
  435c48:	fild   QWORD PTR [ebx+esi*8+0x8f9f584]
  435c4f:	push   eax
  435c50:	mov    dl,0x64
  435c52:	mov    esi,0xae68f50d
  435c57:	add    BYTE PTR [esi+0xf01896f],cl
  435c5d:	push   0x3992c989
  435c62:	xor    al,al
  435c64:	jmp    0x435c63
  435c66:	(bad)  
  435c67:	mov    ebp,0x0
	...
  435c7c:	mov    ecx,0xac7f5c68
  435c81:	(bad)  
  435c82:	div    DWORD PTR [ebx+0x3e44db5]
  435c88:	xlat   BYTE PTR ds:[ebx]
  435c89:	push   cs
  435c8a:	loope  0x435c8b
  435c8c:	adc    dl,BYTE PTR [ecx-0x3ba5005b]
  435c92:	outs   dx,BYTE PTR ds:[esi]
  435c93:	out    0x35,eax
  435c95:	ins    BYTE PTR es:[edi],dx
  435c96:	nop
  435c97:	add    DWORD PTR [ebp+0x3a4e168f],esi
  435c9d:	pusha  
  435c9e:	pop    edi
  435c9f:	ds test eax,0x87f4f00e
  435ca5:	push   es
  435ca6:	stos   BYTE PTR es:[edi],al
  435ca7:	jmp    0x435cd4
  435ca9:	pop    eax
  435caa:	xchg   edx,eax
  435cab:	hlt    
  435cac:	xor    eax,ecx
  435cae:	mov    al,BYTE PTR [edx+0x3e75b1d]
  435cb4:	mov    ch,0x8a
  435cb6:	(bad)  
  435cb7:	int    0xb5
  435cb9:	(bad)  
  435cba:	out    0x80,eax
  435cbc:	cdq    
  435cbd:	pop    ebx
  435cbe:	call   0xe8a6ee43
  435cc3:	xchg   dh,cl
  435cc5:	shr    DWORD PTR [esi-0x33],1
  435cc8:	mov    ds:0x4481e35e,eax
  435ccd:	nop
  435cce:	out    0x3,eax
  435cd0:	mov    cl,BYTE PTR [edi+0x71]
  435cd3:	ds int 0x98
  435cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435cd7:	idiv   DWORD PTR [edi-0x4afd79ef]
  435cdd:	(bad)  
  435cde:	and    bh,BYTE PTR [esi]
	...
  435cf4:	lds    edx,FWORD PTR [eax+0x8b503e7]
  435cfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435cfb:	jmp    0x435d11
  435cfd:	setne  bl
  435d00:	mov    ds:0xb5866489,al
  435d05:	(bad)  
  435d06:	out    0x88,eax
  435d08:	stc    
  435d09:	outs   dx,DWORD PTR ds:[si]
  435d0b:	inc    esi
  435d0c:	add    DWORD PTR [esi],0x12aebd01
  435d12:	retf   
  435d13:	add    DWORD PTR [edx+0x62],edx
  435d16:	sti    
  435d17:	out    0x3c,al
  435d19:	sbb    cl,BYTE PTR [edx]
  435d1b:	outs   dx,DWORD PTR ds:[esi]
  435d1c:	stc    
  435d1d:	nop
  435d1e:	add    cl,ch
  435d20:	jecxz  0x435d74
  435d22:	mov    WORD PTR [edx*2+0x2cd1c311],?
  435d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435d2a:	cli    
  435d2b:	mov    esi,0xb27e42ca
  435d30:	inc    esi
  435d31:	test   DWORD PTR [esi+edx*1+0x6c008fb0],eax
  435d38:	add    al,BYTE PTR [ebp-0x704e317c]
  435d3e:	add    dl,bl
  435d40:	daa    
  435d41:	test   DWORD PTR [ecx+0x5128fa6],esi
  435d47:	lods   al,BYTE PTR ds:[esi]
  435d48:	popa   
  435d49:	retf   0xe940
  435d4c:	xor    eax,0x6745923
  435d51:	push   ebp
  435d52:	jmp    0xfa99f613
  435d57:	jb     0x435d59
	...
  435d69:	add    BYTE PTR [eax],al
  435d6b:	add    bh,bh
  435d6d:	adc    BYTE PTR [ebp+ecx*2+0x6a],dh
  435d71:	mov    BYTE PTR [eax+0x41],dl
  435d74:	sahf   
  435d75:	jp     0x435d77
  435d77:	jmp    0x6d4d77a9
  435d7c:	std    
  435d7d:	pop    ecx
  435d7e:	cli    
  435d7f:	jmp    0x36c14b03
  435d84:	lahf   
  435d85:	jmp    0x5a139e54
  435d8a:	cli    
  435d8b:	jmp    0x713c21c3
  435d90:	or     al,0x6c
  435d92:	xchg   BYTE PTR [ebx],ch
  435d94:	ror    BYTE PTR [eax+0x6e],cl
  435d97:	cmc    
  435d98:	mov    bh,0x1c
  435d9a:	or     DWORD PTR [eax],eax
  435d9c:	pop    ds
  435d9d:	imul   eax,DWORD PTR [esp+esi*2],0xffffff98
  435da1:	adc    bh,cl
  435da3:	or     eax,0xc0798600
  435da8:	mov    gs,WORD PTR [edx-0x25778d47]
  435dae:	icebp  
  435daf:	sub    edx,DWORD PTR [esi+0x44]
  435db2:	idiv   DWORD PTR [ebx]
  435db4:	psraw  mm3,QWORD PTR [eax]
  435db7:	lea    edx,[ecx+edx*4-0x727034cf]
  435dbe:	pop    esi
  435dbf:	xor    DWORD PTR [esi+ecx*4+0x10f20873],0x39
  435dc7:	or     al,BYTE PTR [ecx-0x603e7e6f]
  435dcd:	dec    esp
  435dce:	cld    
  435dcf:	mov    al,BYTE PTR [eax]
	...
  435de1:	add    BYTE PTR [eax],al
  435de3:	add    cl,bl
  435de5:	pop    edi
  435de6:	lea    ecx,[ecx+ebx*4]
  435de9:	nop
  435dea:	add    BYTE PTR [eax],al
  435dec:	or     al,0x10
  435dee:	jne    0x435de4
  435df0:	test   edi,eax
  435df2:	clc    
  435df3:	call   0x3a304c
  435df8:	nop
  435df9:	dec    esp
  435dfa:	outs   dx,BYTE PTR ds:[esi]
  435dfb:	push   eax
  435dfc:	xchg   ecx,eax
  435dfd:	pop    ebp
  435dfe:	outs   dx,BYTE PTR ds:[esi]
  435dff:	pop    ss
  435e00:	pop    ebx
  435e01:	xlat   BYTE PTR ds:[ebx]
  435e02:	in     al,dx
  435e03:	mov    edx,DWORD PTR [ebx-0x75d53dcc]
  435e09:	pop    ebp
  435e0a:	or     DWORD PTR [ebp-0x80],0xffffffd9
  435e0e:	push   esp
  435e0f:	cld    
  435e10:	inc    ebp
  435e11:	nop
  435e12:	pop    DWORD PTR [ebp-0x74cc1f64]
  435e18:	adc    DWORD PTR [ecx-0x7d],ebp
  435e1b:	dec    ebp
  435e1c:	or     BYTE PTR [edi],0xfe
  435e1f:	sbb    BYTE PTR [edi],0xa5
  435e22:	add    BYTE PTR [ebx+edx*4-0x27],dh
  435e26:	sub    eax,ebp
  435e28:	mov    ch,0xa5
  435e2a:	sbb    bh,dl
  435e2c:	call   0xe633:0xccfc4889
  435e33:	or     dh,BYTE PTR [edi]
  435e35:	(bad)  
  435e36:	out    dx,al
  435e37:	cli    
  435e38:	and    ch,0x70
  435e3b:	cld    
  435e3c:	jp     0x435e77
  435e3e:	mov    ebx,ecx
  435e40:	jae    0x435eb3
  435e42:	lock mov bh,0x3a
  435e45:	data16 (bad) 
  435e47:	inc    DWORD PTR [eax]
	...
  435e59:	add    BYTE PTR [eax],al
  435e5b:	add    BYTE PTR [esi+ebp*8+0x4],cl
  435e5f:	add    BYTE PTR [ebp+0x40fc41ed],dh
  435e65:	sar    eax,cl
  435e67:	out    0xe2,eax
  435e69:	mov    dl,0xee
  435e6b:	cli    
  435e6c:	dec    esi
  435e6d:	dec    edi
  435e6e:	add    BYTE PTR [ebx-0x3af7128e],dh
  435e74:	jno    0x435e0c
  435e76:	inc    esp
  435e77:	add    BYTE PTR [eax],dh
  435e79:	es jns 0x435e93
  435e7c:	cs mov bl,0xfc
  435e7f:	dec    esi
  435e80:	cs and al,dh
  435e83:	iret   
  435e84:	cmp    DWORD PTR [esi],esp
  435e86:	jb     0x435e93
  435e88:	ds mov bl,0xf4
  435e8b:	xchg   BYTE PTR [eax+0x72],dh
  435e8e:	leave  
  435e8f:	inc    esp
  435e90:	std    
  435e91:	mov    ah,0x4
  435e93:	add    BYTE PTR [ebp+0x3661fddf],dh
  435e99:	mov    ecx,0xedb27516
  435e9e:	inc    ecx
  435e9f:	lock cs sti 
  435ea2:	stc    
  435ea3:	ret    0xce78
  435ea6:	cwde   
  435ea7:	dec    edx
  435ea9:	gs ja  0x435eac
  435eac:	cs and ebx,edx
  435eaf:	xchg   dh,dh
  435eb1:	int    0xf9
  435eb3:	inc    ebx
  435eb4:	mov    bl,0x90
  435eb6:	and    al,BYTE PTR [ebp-0xf1b980f]
  435ebc:	stc    
  435ebd:	pop    edi
  435ebe:	pop    edi
  435ebf:	inc    edi
	...
  435ed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435ed5:	enter  0x46ce,0x91
  435ed9:	xchg   DWORD PTR [ebp+0x73],esp
  435edc:	(bad)  
  435edd:	push   edi
  435ede:	sti    
  435edf:	fdiv   QWORD PTR [edi+0x2febad4e]
  435ee5:	nop
  435ee6:	out    0x3,eax
  435ee8:	cmp    cl,ch
  435eea:	jecxz  0x435f68
  435eec:	jmp    0xa42a2f4c
  435ef1:	push   ebp
  435ef2:	shr    DWORD PTR [ecx+0x32],cl
  435ef5:	int    0xcf
  435ef7:	fdivr  QWORD PTR [ecx-0x4afca6e9]
  435efd:	(bad)  
  435efe:	sbb    dl,BYTE PTR [edx-0x16]
  435f01:	dec    eax
  435f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435f03:	sti    
  435f04:	cmp    bh,BYTE PTR [esi+ebx*2+0x3063b3df]
  435f0b:	push   ebp
  435f0c:	xchg   DWORD PTR [esi+0x7d71366e],edi
  435f12:	daa    
  435f13:	add    al,0xca
  435f15:	dec    edi
  435f16:	mov    ds:0x748fe946,al
  435f1b:	outs   dx,BYTE PTR ds:[esi]
  435f1c:	loopne 0x435f48
  435f1e:	dec    edi
  435f1f:	pushf  
  435f20:	pop    ebx
  435f21:	out    dx,al
  435f22:	ds pop ebp
  435f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435f25:	push   esi
  435f26:	cmc    
  435f27:	sti    
  435f28:	sbb    BYTE PTR ds:0x567ad7ad,al
  435f2e:	xor    al,BYTE PTR [ecx+ebx*2-0x97b179d]
  435f35:	sbb    DWORD PTR [esi+eax*2+0x0],0x0
	...
  435f4a:	add    BYTE PTR [eax],al
  435f4c:	loope  0x435f0d
  435f4e:	dec    edi
  435f4f:	xor    eax,0x873b556d
  435f54:	add    bl,ch
  435f56:	add    bl,bl
  435f58:	cmp    ebx,ebx
  435f5a:	in     al,dx
  435f5b:	inc    ecx
  435f5c:	int3   
  435f5d:	mov    bh,0xfa
  435f5f:	es pop esi
  435f61:	add    al,0x1
  435f63:	jmp    0xe8d7c81e
  435f68:	mov    dh,0x8f
  435f6a:	mov    esp,DWORD PTR [edx+ebp*2-0x1bc7173a]
  435f71:	pop    ecx
  435f72:	cli    
  435f73:	gs jbe 0x435f58
  435f76:	push   cs
  435f77:	add    esp,DWORD PTR fs:[ecx+ebp*8-0xa]
  435f7c:	or     bl,BYTE PTR [edx-0x6]
  435f7f:	mov    eax,ds:0xe9fa5641
  435f84:	and    eax,0xd6b6e8ff
  435f8a:	arpl   cx,bx
  435f8c:	mov    ecx,0xe1b94404
  435f91:	addr16 icebp 
  435f93:	push   ss
  435f94:	push   ebx
  435f95:	pop    ecx
  435f96:	test   DWORD PTR [ecx+0x348b84bc],ebp
  435f9c:	sub    DWORD PTR [esi-0x2b],ebp
  435f9f:	sbb    ebx,DWORD PTR ds:[ecx-0x18]
  435fa3:	fidivr WORD PTR [ecx-0x42fcff71]
  435fa9:	add    al,0x44
  435fab:	mov    ch,0x69
  435fad:	add    al,0x44
  435faf:	test   eax,0x0
	...
  435fc4:	popa   
  435fc5:	pop    edx
  435fc6:	shr    DWORD PTR [edx-0x13],cl
  435fc9:	mov    eax,ebp
  435fcb:	shr    DWORD PTR [edx+ebx*2-0x6],cl
  435fcf:	pusha  
  435fd0:	jl     0x435fe5
  435fd2:	mov    WORD PTR [edx+eiz*8-0x4689973b],gs
  435fd9:	pop    DWORD PTR [eax]
  435fdb:	inc    ecx
  435fdc:	ret    0xfabd
  435fdf:	dec    esi
  435fe0:	dec    esi
  435fe1:	data16 mov BYTE PTR [eax],al
  435fe4:	or     DWORD PTR [edx],edi
  435fe6:	test   esi,esi
  435fe8:	ror    DWORD PTR ds:0x91cc00bf,cl
  435fee:	sbb    DWORD PTR [ebp-0x18],0xee3318b9
  435ff5:	fdivr  DWORD PTR [edx-0x7aa534a7]
  435ffb:	rcl    BYTE PTR [ebx-0x63ff54f8],cl
  436001:	xchg   ecx,eax
  436002:	stc    
  436003:	fld    QWORD PTR [edi+esi*4]
  436006:	add    DWORD PTR [ebx+0xfe9aa82],ecx
  43600c:	ud2    
  43600e:	cli    
  43600f:	call   FWORD PTR [eax+edx*1+0x40]
  436013:	sbb    ch,ah
  436015:	xbegin 0xfa9c619b
  43601b:	je     0x435fcb
  43601d:	mov    ecx,0x37998d14
  436022:	dec    edx
  436023:	lea    ebx,[ebx+0xff5087]
	...
  436039:	add    BYTE PTR [eax],al
  43603b:	add    BYTE PTR [ecx-0x43],ch
  43603e:	push   cs
  43603f:	inc    eax
  436040:	dec    esp
  436041:	adc    bh,BYTE PTR [esi+0x7550990c]
  436047:	or     esp,DWORD PTR [edi+0x1b89bcc7]
  43604d:	dec    ebx
  43604e:	inc    ebp
  43604f:	or     ecx,DWORD PTR ds:0x1b8b3c3a
  436055:	stos   BYTE PTR es:[edi],al
  436056:	inc    ebx
  436057:	mov    esp,0x4d81900b
  43605c:	sar    BYTE PTR [ecx-0x38],0x81
  436060:	test   DWORD PTR [eax],edx
  436062:	xor    al,0x9
  436064:	(bad)  
  436066:	es cmp ecx,esi
  436069:	push   0x51671c6b
  43606e:	and    eax,DWORD PTR [ebp-0x4b]
  436071:	mov    esi,0xdf6c1857
  436076:	repnz clc 
  436078:	pop    esi
  436079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43607a:	add    eax,0xe61bc250
  43607f:	push   edx
  436080:	mov    edx,0xf5123a33
  436085:	data16 jg 0x43604b
  436088:	mov    ecx,0xcc580600
  43608d:	sub    esi,edx
  43608f:	es jge 0x4360e3
  436092:	out    0x28,al
  436094:	clc    
  436095:	jle    0x436115
  436097:	inc    esp
  436098:	lea    ebp,[esi+0x7f]
  43609b:	ret    0x519d
  43609e:	out    0x6d,eax
	...
  4360b4:	cs out 0x70,al
  4360b7:	pop    es
  4360b8:	mov    ch,0xdb
  4360ba:	inc    edx
  4360bb:	(bad)  
  4360bc:	lock sub dl,BYTE PTR [ebp+0x66]
  4360c0:	mov    ebp,0x617c79d1
  4360c5:	jmp    0x436108
  4360c7:	call   0xfa827f29
  4360cc:	dec    edx
  4360cd:	jecxz  0x436093
  4360cf:	je     0x436064
  4360d1:	adc    eax,0x544de872
  4360d6:	inc    eax
  4360d7:	cli    
  4360d8:	xor    cl,BYTE PTR [edi-0x19]
  4360db:	stc    
  4360dc:	sub    ch,BYTE PTR ds:0xa8cee853
  4360e2:	jmp    0x3c50:0x465e8ffa
  4360e9:	stos   DWORD PTR es:[edi],eax
  4360ea:	clc    
  4360eb:	mov    WORD PTR [eax-0x36],?
  4360ee:	push   esp
  4360ef:	call   0xfb2e0920
  4360f4:	cs (bad) 
  4360f6:	xor    ecx,0xd8d76e68
  4360fc:	jmp    0x43608c
  4360fe:	(bad)  
  4360ff:	in     eax,dx
  436100:	cmp    ebx,edx
  436102:	dec    edi
  436103:	jns    0x436176
  436105:	pop    ebx
  436106:	mov    edx,0xe78f265b
  43610b:	add    ebx,ebp
  43610d:	cmp    ebx,DWORD PTR [ebx+0x6dbcbfed]
  436113:	int3   
  436114:	rcr    BYTE PTR [ebx-0x57],cl
  436117:	in     eax,dx
	...
  43612c:	scas   eax,DWORD PTR es:[edi]
  43612d:	add    eax,0xfc92f3b5
  436132:	mov    ecx,0x3f0c9fed
  436137:	ja     0x4360e7
  436139:	add    al,0x9d
  43613b:	fistp  WORD PTR [edx-0x70124df8]
  436141:	sbb    BYTE PTR [ebx+0x4],dh
  436144:	mov    ch,0x8f
  436146:	push   cs
  436147:	cli    
  436148:	sub    ebp,ebx
  43614a:	add    ebx,esp
  43614c:	in     eax,dx
  43614d:	mov    ecx,0x4f9bece9
  436152:	inc    ebx
  436153:	dec    esi
  436154:	or     cl,BYTE PTR [ecx-0x5a]
  436157:	pop    es
  436158:	mov    ch,0xbc
  43615a:	pop    esi
  43615b:	fbstp  TBYTE PTR ds:0xb5018464
  436161:	(bad)  
  436162:	sbb    DWORD PTR [edi+0x6623dc6b],eax
  436168:	mov    edx,0xef77e796
  43616d:	add    al,0x75
  43616f:	arpl   WORD PTR [eax],bp
  436171:	push   ebx
  436172:	mov    ds:0x9aa9f7db,eax
  436177:	in     al,dx
  436178:	fwait
  436179:	in     al,dx
  43617a:	fwait
  43617b:	add    edx,DWORD PTR [edx+0x7a038bec]
  436181:	add    al,0x2d
  436183:	clc    
  436184:	jb     0x4361ed
  436186:	setae  bh
  436189:	push   edx
  43618a:	add    DWORD PTR [ebp-0xa],ebp
  43618d:	ficom  WORD PTR [ebx]
  43618f:	outs   dx,BYTE PTR ds:[esi]
	...
  4361a4:	arpl   WORD PTR [ebx-0x7a],dx
  4361a7:	das    
  4361a8:	rcr    ebx,1
  4361aa:	hlt    
  4361ab:	shl    DWORD PTR [esi-0x49da9741],cl
  4361b1:	pop    DWORD PTR [eax]
  4361b3:	inc    ecx
  4361b4:	lods   al,BYTE PTR ds:[esi]
  4361b5:	cmc    
  4361b6:	cli    
  4361b7:	inc    esi
  4361b8:	rcr    ebx,1
  4361ba:	hlt    
  4361bb:	push   ecx
  4361bc:	dec    edi
  4361bd:	sar    dl,1
  4361bf:	ss add eax,0x98a86e68
  4361c5:	push   ebp
  4361c6:	pop    ebx
  4361c7:	xor    BYTE PTR [ebp-0x45],dh
  4361ca:	test   DWORD PTR ds:0x68f96e35,ecx
  4361d0:	jb     0x4361d8
  4361d2:	add    al,0xe9
  4361d4:	mov    dh,0xc2
  4361d6:	push   edx
  4361d7:	sahf   
  4361d8:	add    ecx,edi
  4361da:	and    al,0xd5
  4361dc:	lds    ebx,FWORD PTR [ebp+0x51]
  4361df:	pusha  
  4361e0:	jmp    0xfabd:0xb00118ab
  4361e7:	out    0x35,al
  4361e9:	adc    cl,BYTE PTR [edx]
  4361eb:	sub    edx,DWORD PTR gs:[edx-0x6]
  4361ef:	jmp    0xcf9b3862
  4361f4:	pop    esi
  4361f5:	or     ecx,ebx
  4361f7:	jo     0x4361e6
  4361f9:	stos   DWORD PTR es:[edi],eax
  4361fa:	sbb    BYTE PTR [eax-0x13],dh
  4361fd:	stos   DWORD PTR es:[edi],eax
  4361fe:	adc    BYTE PTR [edi-0x2c8c7e06],bh
  436204:	push   cs
  436205:	retf   
  436206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  43621c:	push   cs
  43621d:	shr    BYTE PTR ds:0xe89287c2,0xf
  436224:	js     0x43627c
  436226:	cli    
  436227:	push   0xffffffcd
  436229:	stos   DWORD PTR es:[edi],eax
  43622a:	sbb    BYTE PTR [eax],al
  43622c:	(bad)  
  43622e:	push   ebp
  43622f:	and    al,0x14
  436231:	xor    DWORD PTR [ebx-0xa],ecx
  436234:	pop    ds
  436235:	mov    WORD PTR [ebx+0x13],?
  436238:	xor    al,0xba
  43623a:	cs (bad) 
  43623c:	pop    ebx
  43623d:	fdiv   DWORD PTR [ebp+0x24]
  436240:	lods   al,BYTE PTR ds:[esi]
  436241:	xor    edx,DWORD PTR [edx]
  436243:	dec    ebp
  436244:	push   0x66
  436246:	jnp    0x436213
  436248:	fnsave [eax]
  43624a:	xor    esi,esi
  43624c:	(bad)
  436250:	fs imul edi,edx,0xdb0a9cff
  436257:	std    
  436258:	div    DWORD PTR [edi-0x12]
  43625b:	ret    
  43625c:	nop
  43625d:	loope  0x436261
  43625f:	call   0x43eeca
  436264:	pop    ds
  436265:	imul   esi,ebx,0xbb5f99eb
  43626b:	inc    eax
  43626c:	add    DWORD PTR [ebx+ecx*4-0x177a8f8c],ebx
  436273:	mov    dh,0xe8
  436275:	imul   ax
  436278:	jbe    0x4362f7
  43627a:	add    BYTE PTR [eax],al
  43627c:	out    0x16,eax
  43627e:	jnp    0x43624b
	...
  436294:	mov    WORD PTR [ebx],?
  436296:	sar    BYTE PTR [edx+ebp*2+0x66],cl
  43629a:	xor    ebx,DWORD PTR [eax+esi*4+0x7b]
  43629e:	je     0x4362b3
  4362a0:	leave  
  4362a1:	nop
  4362a2:	and    al,0x10
  4362a4:	pushf  
  4362a5:	mov    cl,0xff
  4362a7:	imul   esp,DWORD PTR [eax],0xb05c87c5
  4362ad:	sub    eax,0xffffff87
  4362b0:	loop   0x436317
  4362b2:	test   DWORD PTR [ebp-0x17eb5040],0xfa4fadb5
  4362bc:	or     ah,BYTE PTR [edx-0x520ad0ba]
  4362c2:	jns    0x4362a8
  4362c4:	pop    eax
  4362c5:	and    al,0xfa
  4362c7:	push   DWORD PTR [edx+0x1b]
  4362ca:	sahf   
  4362cb:	aad    0x76
  4362cd:	add    ax,0x9e72
  4362d1:	adc    BYTE PTR [edi+0x2f],cl
  4362d4:	ficomp DWORD PTR [ecx]
  4362d6:	dec    edi
  4362d7:	push   ebx
  4362d8:	pop    ebp
  4362d9:	mov    esp,0x19b53d92
  4362de:	dec    edi
  4362df:	sti    
  4362e0:	test   al,0x82
  4362e2:	adc    DWORD PTR [eax-0x4b],eax
  4362e5:	fucomp st(5)
  4362e7:	ss stos BYTE PTR es:[edi],al
  4362e9:	adc    al,BYTE PTR [edi]
  4362eb:	push   0xfffe353d
  4362f0:	or     ebp,DWORD PTR [edx+0x26c7d010]
  4362f6:	inc    BYTE PTR [eax+eax*1+0x0]
	...
  436309:	add    BYTE PTR [eax],al
  43630b:	add    BYTE PTR [ebp-0xe],dh
  43630e:	cmc    
  43630f:	push   edx
  436310:	jecxz  0x436293
  436312:	adc    al,cl
  436314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436315:	es (bad) 
  436317:	push   ecx
  436318:	jp     0x436355
  43631a:	mov    esi,0x4766f50d
  43631f:	pop    edx
  436320:	jbe    0x43631d
  436322:	jp     0x43630f
  436324:	cmp    dh,BYTE PTR ss:0x7197cf52
  43632b:	je     0x436392
  43632d:	sahf   
  43632e:	fcomp  QWORD PTR [edx-0x70]
  436331:	inc    ecx
  436332:	call   0x5ca22c31
  436337:	add    BYTE PTR [ebp-0x74],cl
  43633a:	push   cs
  43633b:	cli    
  43633c:	xor    bh,BYTE PTR [eax-0x80]
  43633f:	mov    edi,0x44733ea1
  436344:	add    eax,0xa1e9378f
  436349:	xchg   DWORD PTR [edx+0x1e67bd6f],ebx
  43634f:	adc    DWORD PTR [edi],ecx
  436351:	push   eax
  436352:	les    eax,FWORD PTR gs:[esi-0x453c4976]
  436359:	fs out 0x34,al
  43635c:	cmc    
  43635d:	inc    ebp
  43635e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43635f:	add    BYTE PTR [ebp+0x63d85eba],dh
  436365:	imul   esp,DWORD PTR [eax-0x7d],0xffffffce
  436369:	mov    edx,0xb9b503e5
  43636e:	mov    ebp,0x54
	...
  436383:	add    BYTE PTR [eax],bh
  436385:	fild   DWORD PTR [ebx]
  436387:	sbb    al,0x5d
  436389:	addr16 loope 0x4363aa
  43638c:	mov    esi,0x18c26f4f
  436391:	loop   0x4363f3
  436393:	inc    eax
  436394:	rcr    DWORD PTR [ebx-0x7c268fa4],1
  43639a:	mov    edi,0x1a74b7db
  43639f:	jmp    0x540f37e5
  4363a4:	in     eax,0x37
  4363a6:	pop    esp
  4363a7:	jmp    0xc4afb32b
  4363ac:	push   es
  4363ad:	mov    DWORD PTR [esi+0x60],esp
  4363b0:	cdq    
  4363b1:	fwait
  4363b2:	out    0x76,eax
  4363b4:	div    BYTE PTR [ebx-0x69]
  4363b7:	jp     0x4363af
  4363b9:	jae    0x4363b2
  4363bb:	jbe    0x4363b3
  4363bd:	jae    0x4363ae
  4363bf:	jp     0x4363b7
  4363c1:	jae    0x4363b2
  4363c3:	jl     0x436439
  4363c5:	loopne 0x436423
  4363c7:	aas    
  4363c8:	cdq    
  4363c9:	lahf   
  4363ca:	stos   BYTE PTR es:[edi],al
  4363cb:	aas    
  4363cc:	xchg   ecx,eax
  4363cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4363ce:	in     al,0x3
  4363d0:	mov    ch,0x8f
  4363d2:	add    BYTE PTR [esi-0x17df8c16],ch
  4363d8:	mov    dh,0x8f
  4363da:	add    BYTE PTR [esi-0x14db8c26],ch
  4363e0:	mov    dh,0x8f
  4363e2:	add    BYTE PTR [ecx-0x7104d6ee],al
	...
  4363fc:	ins    BYTE PTR es:[edi],dx
  4363fd:	push   ss
  4363fe:	in     al,0x24
  436400:	lock jecxz 0x436388
  436403:	lea    esi,[edi]
  436405:	cmp    ecx,DWORD PTR [ecx]
  436407:	jmp    0x4363bf
  436409:	(bad)  
  43640a:	mov    esp,DWORD PTR [esi+ecx*8+0x4b]
  43640e:	cli    
  43640f:	data16 xchg BYTE PTR [edi],dh
  436412:	xor    al,0x5e
  436414:	fisttp QWORD PTR [ecx-0x7b]
  436417:	sub    DWORD PTR [edx-0x6a],ebx
  43641a:	mov    ebx,DWORD PTR [esi+ecx*8+0x4b]
  43641e:	cli    
  43641f:	inc    esi
  436420:	fiadd  WORD PTR [ebx+0x21]
  436423:	jmp    0x9d01bcde
  436428:	sub    DWORD PTR [ebx],edi
  43642a:	jle    0x436469
  43642c:	mov    edx,0xb7252de
  436431:	cwde   
  436432:	test   edi,esp
  436434:	in     eax,0x18
  436436:	dec    esp
  436437:	sbb    eax,0xb808dc03
  43643c:	(bad)  
  43643d:	ret    
  43643e:	or     al,0x72
  436440:	push   0xb693f9b4
  436445:	mov    ch,0xff
  436447:	sahf   
  436448:	out    dx,eax
  436449:	jmp    0x43643b
  43644b:	out    dx,al
  43644c:	pop    es
  43644d:	loopne 0x4363d2
  43644f:	test   eax,0xe9dc1362
  436454:	mov    dh,0x8f
  436456:	test   edi,ebp
  436458:	int    0xdb
  43645a:	clc    
  43645b:	cmp    BYTE PTR [esi+0xcdb],bh
	...
  436471:	add    BYTE PTR [eax],al
  436473:	add    ah,ah
  436475:	mov    eax,DWORD PTR [esi+0x71351c40]
  43647b:	or     dl,cl
  43647d:	ss dec edx
  43647f:	sub    BYTE PTR [ecx+0x34850753],bl
  436485:	xchg   ebx,eax
  436486:	add    BYTE PTR [eax],al
  436488:	xchg   eax,edx
  43648a:	clc    
  43648b:	mov    edx,DWORD PTR [edi+eax*8]
  43648e:	push   esp
  43648f:	call   0x6a644e52
  436494:	adc    dl,ah
  436496:	cmc    
  436497:	xchg   ecx,eax
  436498:	and    BYTE PTR [ebx+0x53590000],dl
  43649e:	jne    0x436517
  4364a0:	in     eax,dx
  4364a1:	into   
  4364a2:	cld    
  4364a3:	cmp    DWORD PTR [ecx],ecx
  4364a5:	push   0x70
  4364a7:	bound  ebp,QWORD PTR [edi+0x7045835a]
  4364ad:	retf   0x375
  4364b0:	ror    BYTE PTR [esi],1
  4364b2:	div    DWORD PTR [eax+ecx*1-0x18]
  4364b6:	inc    eax
  4364b7:	push   edi
  4364b8:	repz sahf 
  4364ba:	js     0x4364cf
  4364bc:	pop    esp
  4364bd:	xchg   ecx,eax
  4364be:	add    eax,0x68
  4364c1:	jle    0x436510
  4364c3:	push   0xffffff8c
  4364c5:	adc    al,dl
  4364c7:	jmp    DWORD PTR [ebx+edx*1-0x375c01e5]
  4364ce:	icebp  
  4364cf:	test   DWORD PTR [ebx+0x418b20bf],esi
  4364d5:	popf   
  4364d6:	dec    ebp
  4364d7:	add    DWORD PTR [eax],0x0
	...
  4364ea:	add    BYTE PTR [eax],al
  4364ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4364ed:	xor    al,0xe2
  4364ef:	xchg   edx,eax
  4364f0:	jns    0x436525
  4364f2:	test   DWORD PTR [esp+ecx*4-0x5e74ef41],0xe4c0299f
  4364fd:	mov    ebx,0x36b54086
  436502:	ds call 0xfb25f8cb
  436508:	loop   0x436568
  43650a:	test   eax,0xe30e3339
  43650f:	inc    esp
  436510:	sub    DWORD PTR [edx-0x5c903c0],esi
  436516:	cmp    eax,0x701e7037
  43651b:	lahf   
  43651c:	ds mov esp,?
  43651f:	xchg   BYTE PTR [eax+0x2a],dh
  436522:	ja     0x43652b
  436524:	xor    BYTE PTR [esp+ebx*8+0x5515654d],al
  43652b:	sub    BYTE PTR [esi],bh
  43652d:	je     0x43651b
  43652f:	xchg   BYTE PTR [ebp-0x52af1e5a],bh
  436535:	mov    ebp,0x3d2e0c70
  43653a:	dec    esp
  43653b:	sti    
  43653c:	gs inc edx
  43653e:	jecxz  0x4365b4
  436540:	mov    ecx,0xb465fbb1
  436545:	fnsave [eax+0x8]
  436548:	arpl   bp,dx
  43654a:	dec    ebp
  43654b:	push   esp
  43654c:	cmp    BYTE PTR [esi-0xe],dh
  43654f:	add    DWORD PTR [eax],0x0
	...
  436562:	add    BYTE PTR [eax],al
  436564:	fld    DWORD PTR [ebp+0x3a2fae2]
  43656a:	test   BYTE PTR [esi+0x4fe30cb3],0xed
  436571:	shr    DWORD PTR [eax+0x10],0x3e
  436575:	cmp    al,0x4b
  436577:	data16 mov ch,0x4
  43657a:	jecxz  0x4365cb
  43657c:	test   eax,0x1374bdbb
  436581:	push   eax
  436582:	cmp    ecx,DWORD PTR [eax]
  436584:	jmp    0x4365a5
  436586:	ja     0x436586
  436588:	xor    DWORD PTR [ebx],ebp
  43658a:	not    BYTE PTR [eax+0x2]
  43658d:	nop
  43658e:	loop   0x4365fd
  436590:	mov    ecx,0xf554dae0
  436595:	adc    ch,BYTE PTR [eax-0x18e70991]
  43659b:	jbe    0x436586
  43659d:	lahf   
  43659e:	sbb    BYTE PTR [edx-0x4b],bl
  4365a1:	dec    esp
  4365a2:	xor    eax,DWORD PTR [eax]
  4365a4:	jp     0x4365f2
  4365a6:	sbb    BYTE PTR [eax+edi*1],cl
  4365a9:	dec    edi
  4365aa:	xor    eax,0xfbc21e07
  4365af:	js     0x436532
  4365b1:	inc    ebx
  4365b2:	xor    esp,ebp
  4365b4:	sbb    DWORD PTR [ebx-0x3e002ea2],0x4d54dbf7
  4365be:	and    ebp,0x3b
  4365c1:	rcl    bh,cl
  4365c3:	js     0x436577
  4365c5:	fbstp  TBYTE PTR [edx+0x53]
	...
  4365dc:	lods   eax,DWORD PTR ds:[esi]
  4365dd:	sbb    bh,ah
  4365df:	dec    esp
  4365e0:	faddp  st(1),st
  4365e2:	out    dx,eax
  4365e3:	push   eax
  4365e4:	into   
  4365e5:	fisub  WORD PTR [ebx+0x25c30a7e]
  4365eb:	in     eax,0x49
  4365ed:	xchg   edi,eax
  4365ee:	pop    esi
  4365ef:	add    DWORD PTR [edx+0x4c],ebp
  4365f2:	cwde   
  4365f3:	cmp    ecx,DWORD PTR [esi]
  4365f5:	jmp    0x4ee7:0xa068ba9e
  4365fc:	cmp    bh,BYTE PTR [ecx+ebp*2]
  4365ff:	fmul   DWORD PTR [esi]
  436601:	xchg   ecx,eax
  436602:	out    0x3,eax
  436604:	add    ah,dl
  436606:	mov    dl,0x5b
  436608:	sbb    eax,0xd03a81a
  43660d:	call   0x37f8aa6b
  436612:	shr    DWORD PTR [ecx+0x6f],1
  436615:	dec    ebx
  436616:	outs   dx,DWORD PTR ds:[esi]
  436617:	hlt    
  436618:	fwait
  436619:	add    WORD PTR [edx+0x5e849665],si
  436620:	mov    cl,0x8f
  436622:	add    BYTE PTR [edx],bh
  436624:	in     al,0x18
  436626:	pop    esp
  436627:	(bad)  
  436629:	nop
  43662a:	push   edx
  43662b:	(bad)  
  43662c:	out    0x9b,al
  43662e:	sub    DWORD PTR [ecx-0x107a4f35],0xffffffab
  436635:	(bad)  
  436637:	sbb    BYTE PTR [ecx+esi*4-0x24e7e102],al
  43663e:	adc    al,0x64
	...
  436654:	test   bl,0x50
  436657:	adc    ecx,esp
  436659:	adc    eax,0x776ee941
  43665e:	mov    ch,BYTE PTR [ecx]
  436660:	mov    ecx,0x1310eb37
  436665:	inc    esi
  436666:	xchg   BYTE PTR [ecx-0x448abd63],al
  43666c:	arpl   bx,dx
  43666e:	cld    
  43666f:	sbb    DWORD PTR [edx+0x13],ebp
  436672:	cdq    
  436673:	outs   dx,DWORD PTR ds:[esi]
  436674:	rol    DWORD PTR [ebp+0x51],1
  436677:	je     0x43660c
  436679:	call   DWORD PTR [eax+0x5e]
  43667c:	pop    ebx
  43667d:	inc    edi
  43667e:	xchg   BYTE PTR [edi],bh
  436680:	cmp    eax,0x6a4c255
  436685:	iret   
  436686:	add    cl,ch
  436688:	mov    dh,0x4e
  43668a:	test   BYTE PTR [ecx-0x70],ah
  43668d:	inc    ebp
  43668e:	cli    
  43668f:	shl    DWORD PTR [edi-0x76beff71],1
  436695:	dec    ebx
  436696:	cli    
  436697:	es or  eax,0xe61e518e
  43669d:	xchg   edi,eax
  43669e:	test   DWORD PTR [esi+ecx*4-0x6e46f6ef],ebp
  4366a5:	fisttp WORD PTR [eax]
  4366a7:	add    bh,ah
  4366a9:	dec    esp
  4366aa:	push   eax
  4366ab:	dec    DWORD PTR [esi+eax*2-0x1e]
  4366af:	xchg   ebp,eax
  4366b0:	mov    dh,BYTE PTR [edi+esi*8]
  4366b3:	mov    ebp,DWORD PTR [ecx]
  4366b5:	xor    dh,BYTE PTR [esi]
  4366b7:	add    al,0x0
	...
  4366c9:	add    BYTE PTR [eax],al
  4366cb:	add    BYTE PTR [edi-0x202710ad],dh
  4366d1:	push   ebx
  4366d2:	push   ebx
  4366d3:	mov    db2,ebx
  4366d6:	loop   0x436750
  4366d8:	neg    DWORD PTR cs:[bx-0x26]
  4366dd:	mov    al,bh
  4366df:	ret    
  4366e0:	rcr    DWORD PTR [edx],0xe6
  4366e3:	cmp    eax,0xcfff9ae
  4366e9:	or     DWORD PTR [esi+0x57],0xffff9397
  4366f0:	sbb    al,0x81
  4366f2:	mov    ecx,DWORD PTR [ebp-0x8cf70]
  4366f8:	mov    ebp,0x670c752e
  4366fd:	arpl   WORD PTR [ebx+0x4a2ec206],ax
  436703:	adc    al,0x51
  436705:	push   ebx
  436706:	outs   dx,BYTE PTR ds:[esi]
  436707:	push   es
  436708:	dec    edi
  436709:	mov    eax,0x4767000c
  43670e:	lea    eax,[ebp-0x8cfb0]
  436714:	cld    
  436715:	mov    ebx,0x2e948300
  43671a:	loop   0x4366b2
  43671c:	mov    ebp,0x5189f72d
  436721:	cdq    
  436722:	add    DWORD PTR [esi],0x848d203f
  436728:	retf   0xf72c
  43672b:	push   ecx
  43672c:	(bad)  
  43672e:	sbb    BYTE PTR [esi+0x0],dl
	...
  436741:	add    BYTE PTR [eax],al
  436743:	add    BYTE PTR [ebx-0x4acceb7d],ch
  436749:	mov    eax,ds:0x3401bf87
  43674e:	lea    edi,[ebp+ecx*8-0x63]
  436752:	icebp  
  436753:	mov    WORD PTR [eax],?
  436755:	mov    bl,0xde
  436757:	cli    
  436758:	bound  esp,QWORD PTR [edi]
  43675a:	aaa    
  43675b:	jg     0x4367ca
  43675d:	cmp    ah,dh
  43675f:	bound  edx,QWORD PTR [eax+esi*1-0x710f7721]
  436766:	mov    DWORD PTR [ecx],eax
  436768:	out    0xb3,al
  43676a:	nop
  43676b:	cmp    DWORD PTR [ecx],0x5a
  43676e:	fist   WORD PTR [eax+0x32]
  436771:	mov    WORD PTR [eax],es
  436773:	push   edx
  436774:	sub    ah,BYTE PTR [edi-0x740a7b08]
  43677a:	repnz mov WORD PTR [eax],?
  43677d:	mov    bl,0xd9
  43677f:	cli    
  436780:	adc    al,BYTE PTR [edi+0x29fd7f35]
  436786:	out    0x3a,al
  436788:	aam    0x20
  43678a:	fild   WORD PTR [esi-0x72f85203]
  436790:	adc    BYTE PTR [edx],0x35
  436793:	sti    
  436794:	pusha  
  436795:	data16 cmp bl,bh
  436798:	test   DWORD PTR [esi-0x77],esp
  43679b:	mov    edi,0x64833261
  4367a0:	shl    DWORD PTR [esi],1
  4367a2:	mov    eax,DWORD PTR [ecx]
  4367a4:	cmp    ah,bh
  4367a6:	aad    0x50
	...
  4367bc:	ret    0xf26b
  4367bf:	push   ecx
  4367c0:	mov    edx,0x7584ee06
  4367c5:	or     al,BYTE PTR [edx]
  4367c7:	jg     0x4367d9
  4367c9:	iret   
  4367ca:	std    
  4367cb:	lfs    ebx,FWORD PTR gs:[eax-0x7c]
  4367d0:	std    
  4367d1:	into   
  4367d2:	mov    DWORD PTR [eax],esp
  4367d4:	xchg   edx,eax
  4367d5:	(bad)  
  4367d6:	and    ch,BYTE PTR [ebp+0x1a]
  4367d9:	sbb    edx,DWORD PTR [ebp+0x6937eaeb]
  4367df:	and    al,0x7e
  4367e1:	dec    eax
  4367e2:	pop    edi
  4367e3:	cmp    ch,cl
  4367e5:	pop    es
  4367e6:	aam    0x52
  4367e8:	cmc    
  4367e9:	(bad)  
  4367ea:	fs loop 0x436828
  4367ed:	aas    
  4367ee:	jecxz  0x436838
  4367f0:	data16 adc dl,BYTE PTR [esi]
  4367f3:	adc    bh,cl
  4367f5:	pop    edi
  4367f6:	addr16 pop edi
  4367f8:	dec    ebp
  4367f9:	(bad)  
  4367fa:	outs   dx,BYTE PTR ds:[esi]
  4367fb:	int3   
  4367fc:	(bad)  
  4367fd:	mov    WORD PTR [edi+ecx*2+0x4d],fs
  436801:	or     al,0x4d
  436803:	adc    BYTE PTR [ebp+0x7046f2e1],dh
  436809:	fwait
  43680a:	outs   dx,BYTE PTR ds:[esi]
  43680b:	push   edi
  43680c:	aad    0xdd
  43680e:	sbb    cl,ah
  436810:	mov    eax,ds:0x89e1184b
  436815:	xchg   edi,eax
  436816:	je     0x43685f
  436818:	xor    edi,ebx
  43681a:	call   0xf6:0x93a1fe1a
	...
  436831:	add    BYTE PTR [eax],al
  436833:	add    BYTE PTR [edx+0x3bbc5e8f],bh
  436839:	push   ecx
  43683a:	nop
  43683b:	jg     0x4367cd
  43683d:	dec    ecx
  43683e:	jnp    0x4367c5
  436840:	imul   BYTE PTR [edx+0x37a95772]
  436846:	(bad)  
  436847:	pop    ds
  436848:	iret   
  436849:	inc    edi
  43684a:	arpl   WORD PTR [edi-0x53],dx
  43684d:	aaa    
  43684e:	out    dx,al
  43684f:	pop    ds
  436850:	mov    edi,0xb6ebbb47
  436855:	mov    ecx,DWORD PTR [ecx-0x1f]
  436858:	(bad)  
  43685a:	sahf   
  43685b:	retf   0xa468
  43685e:	out    0x36,eax
  436860:	cmp    dh,BYTE PTR [ecx+eax*1]
  436863:	push   0xe8ff13a5
  436868:	mov    dh,0xd6
  43686a:	push   edx
  43686b:	mov    esi,0xa98aa81e
  436870:	mov    dh,0xb7
  436872:	or     BYTE PTR [edi-0xf],ah
  436875:	(bad)
  436879:	dec    edx
  43687a:	cli    
  43687b:	jb     0x4367fe
  43687d:	jbe    0x436854
  43687f:	jo     0x43688b
  436881:	cmp    BYTE PTR [esi],dh
  436883:	cli    
  436884:	lds    ecx,FWORD PTR [ebx]
  436886:	cli    
  436887:	call   0xefc8f842
  43688c:	fcom   DWORD PTR [eax-0x1bd1c8b3]
  436892:	clc    
  436893:	(bad)  
  436894:	xchg   bh,cl
  436896:	sub    DWORD PTR [ecx+0x0],0x0
	...
  4368a9:	add    BYTE PTR [eax],al
  4368ab:	add    ch,al
  4368ad:	or     al,0xd7
  4368af:	call   0xe7c8f86a
  4368b4:	xor    edx,esp
  4368b6:	in     al,dx
  4368b7:	sbb    BYTE PTR [ebx-0x3951ad67],cl
  4368bd:	fwait
  4368be:	sub    DWORD PTR [ecx-0x173cf35b],0xffffffb6
  4368c5:	(bad)  
  4368c6:	out    0x4a,eax
  4368c8:	mov    bh,0x8f
  4368ca:	add    BYTE PTR [edx+0x7b],ah
  4368cd:	inc    ebx
  4368ce:	xchg   cl,dh
  4368d0:	cmp    ebx,esp
  4368d2:	hlt    
  4368d3:	sbb    ebp,DWORD PTR [ecx+0x33b1504a]
  4368d9:	pop    es
  4368da:	or     ah,BYTE PTR [ebx+edi*1-0x70]
  4368de:	add    cl,ch
  4368e0:	scas   eax,DWORD PTR es:[edi]
  4368e1:	in     al,0xf4
  4368e3:	out    dx,al
  4368e4:	cmp    cl,bl
  4368e6:	(bad)  
  4368e7:	call   0x4d8777a2
  4368ec:	inc    ecx
  4368ed:	mov    ?,WORD PTR [edx+0x919c00]
  4368f3:	add    BYTE PTR [edx+0x15],cl
  4368f6:	xchg   ebp,eax
  4368f7:	and    dl,0x2f
  4368fa:	not    DWORD PTR [edx+0x74]
  4368fd:	(bad)  
  4368fe:	sti    
  4368ff:	xor    al,0x8e
  436901:	xor    ch,0x51
  436904:	mov    BYTE PTR ds:0x198974ba,cl
  43690a:	pop    ebp
  43690b:	lock mov bh,0x3b
  43690e:	lea    eax,[ebp+0x0]
	...
  436924:	fdiv   QWORD PTR [eax]
  436926:	idiv   edi
  436928:	cmp    al,0x7b
  43692a:	jns    0x4368f4
  43692c:	arpl   WORD PTR [ecx],di
  43692e:	jecxz  0x43694f
  436930:	bound  esp,QWORD PTR [esi-0x77]
  436933:	inc    ebp
  436934:	ins    BYTE PTR es:[edi],dx
  436935:	sbb    al,BYTE PTR [ebp-0x4]
  436938:	(bad)  
  436939:	xchg   ebx,eax
  43693a:	dec    esi
  43693b:	lea    edi,[ecx+0x3fffd0b]
  436941:	sub    DWORD PTR [eax-0x10],0x5014a01f
  436948:	arpl   WORD PTR [esp+edx*1-0x7b],di
  43694c:	dec    esp
  43694d:	out    0x4,eax
  43694f:	xor    esp,DWORD PTR [ebx+0x3a]
  436952:	or     al,0x8d
  436954:	cdq    
  436955:	or     edi,ebp
  436957:	jmp    DWORD PTR [ebx]
  436959:	jnp    0x4369a4
  43695b:	adc    DWORD PTR [esi+eiz*2-0x1e],0xffffffba
  436960:	jecxz  0x4369c5
  436962:	test   DWORD PTR [ebx-0x729846cc],0xe8520de9
  43696c:	sbb    eax,0x84fff572
  436971:	jg     0x4369b8
  436973:	inc    eax
  436974:	fcomp  QWORD PTR [eax]
  436976:	retf   0x573b
  436979:	out    0xfa,eax
  43697b:	mov    dh,BYTE PTR [ebp-0x5ab37a7b]
  436981:	mov    dl,0x57
  436983:	clc    
  436984:	out    dx,al
  436985:	or     DWORD PTR [ecx],0x44
	...
  43699b:	add    BYTE PTR [ebp-0x6e],ch
  43699e:	int    0x73
  4369a0:	scas   eax,DWORD PTR es:[edi]
  4369a1:	push   esp
  4369a2:	sbb    eax,0x962c091a
  4369a7:	ja     0x4369e4
  4369a9:	idiv   ebp
  4369ab:	dec    ebp
  4369ac:	in     al,0x6
  4369ae:	xchg   ecx,eax
  4369af:	inc    esp
  4369b0:	xor    DWORD PTR [edi],eax
  4369b2:	xor    al,0xfb
  4369b4:	enter  0xee92,0x3f
  4369b8:	mov    ch,0xc1
  4369ba:	mov    esp,0xec8ef88c
  4369bf:	push   edi
  4369c0:	mov    WORD PTR [ebx+ebx*8],?
  4369c3:	jle    0x436a3e
  4369c5:	(bad)  [si+0x45]
  4369c9:	ret    0xe7cd
  4369cc:	outs   dx,BYTE PTR ds:[esi]
  4369cd:	jno    0x4369a9
  4369cf:	cli    
  4369d0:	loop   0x436a20
  4369d2:	leave  
  4369d3:	xor    eax,0xf97f5633
  4369d8:	sub    al,BYTE PTR [eax+ecx*1-0x2056781]
  4369df:	icebp  
  4369e0:	jo     0x4369e4
  4369e2:	add    BYTE PTR [esi+eax*8-0x30],dh
  4369e6:	dec    esi
  4369e7:	lea    eax,[eax-0x417ca0e]
  4369ed:	inc    ebp
  4369ee:	(bad)  
  4369f0:	sub    BYTE PTR [esp+ebx*8+0x4f],dh
  4369f4:	pop    ebp
  4369f5:	sbb    al,0xff
  4369f7:	xchg   ebp,eax
  4369f8:	(bad)  
  4369f9:	sahf   
  4369fa:	aam    0xfe
  4369fc:	cmp    eax,0xf56669
	...
  436a11:	add    BYTE PTR [eax],al
  436a13:	add    BYTE PTR [esi-0x23981024],dh
  436a19:	cmp    DWORD PTR [ecx+0x578f5d0d],eax
  436a1f:	add    bl,BYTE PTR ds:0x6ac56ea2
  436a25:	sbb    BYTE PTR [ebp+0x4cca9adf],ch
  436a2b:	fisubr WORD PTR [edi-0x492852c3]
  436a31:	mov    ebx,0x132469f6
  436a36:	mov    ebp,0x5d37eab3
  436a3b:	dec    BYTE PTR [edi+0x7d487544]
  436a41:	fisttp WORD PTR [edi-0x8b5842b]
  436a47:	imul   esp,DWORD PTR [ebp-0x70],0x24
  436a4b:	repnz sar BYTE PTR [edx],cl
  436a4e:	out    0xc9,eax
  436a50:	mov    bl,0xb7
  436a52:	adc    BYTE PTR [edx],al
  436a54:	ins    BYTE PTR es:[edi],dx
  436a55:	mov    al,ds:0x5053d37f
  436a5a:	xlat   BYTE PTR ds:[ebx]
  436a5b:	mov    dh,BYTE PTR [edi+ebx*8+0x6e]
  436a5f:	inc    edi
  436a60:	inc    ecx
  436a61:	aaa    
  436a62:	in     al,dx
  436a63:	fidivr WORD PTR [edi]
  436a65:	inc    esp
  436a66:	fiadd  DWORD PTR [edi+0x29]
  436a69:	xchg   edi,eax
  436a6a:	push   ebx
  436a6b:	adc    DWORD PTR [ebx+0x15774bf],edx
  436a71:	out    0xcf,eax
  436a73:	cmp    BYTE PTR [esi+0x8fb344],bh
	...
  436a89:	add    BYTE PTR [eax],al
  436a8b:	add    BYTE PTR [ecx+0x47],bh
  436a8e:	sbb    BYTE PTR [edi+eax*1-0x70],ch
  436a92:	int    0xf7
  436a94:	call   0x9cb7:0xa12ae73f
  436a9b:	add    DWORD PTR [edi-0x14150065],ebx
  436aa1:	jb     0x436a7e
  436aa3:	imul   esp,ebp,0xffffff8f
  436aa6:	iret   
  436aa7:	div    DWORD PTR [ebx]
  436aa9:	dec    ebp
  436aaa:	add    DWORD PTR [ecx],ebx
  436aac:	cmp    al,0xcb
  436aae:	cld    
  436aaf:	add    DWORD PTR [eax+ecx*2],0xbb2c66fa
  436ab6:	call   0x445066d5
  436abb:	push   ebp
  436abc:	cmp    al,0x8b
  436abe:	push   eax
  436abf:	dec    esi
  436ac0:	out    0x97,al
  436ac2:	test   DWORD PTR [edx+edx*4-0x1d93f6f6],ebp
  436ac9:	inc    ebx
  436aca:	dec    edi
  436acb:	cdq    
  436acc:	jno    0x436aae
  436ace:	adc    al,0x64
  436ad0:	jno    0x436a68
  436ad2:	test   BYTE PTR [ecx+0x72fa4660],dh
  436ad8:	repnz xor eax,DWORD PTR [esi+0x5046a6e1]
  436adf:	loope  0x436b1e
  436ae1:	xchg   ecx,eax
  436ae2:	push   edx
  436ae3:	push   es
  436ae4:	test   eax,0x7e9c8597
  436ae9:	lods   eax,DWORD PTR ds:[esi]
  436aea:	pop    ebx
  436aeb:	xchg   ecx,eax
  436aec:	pop    esi
  436aed:	cwde   
  436aee:	clc    
  436aef:	out    dx,al
	...
  436b04:	imul   esp,esi,0x26e425a
  436b0a:	push   esp
  436b0b:	jb     0x436b57
  436b0d:	adc    ch,ch
  436b0f:	gs mov dh,0x8f
  436b12:	add    BYTE PTR [edx],bh
  436b14:	jecxz  0x436af4
  436b16:	mov    edi,DWORD PTR [ebp*8-0x6202cd6]
  436b1d:	inc    ebp
  436b1e:	cli    
  436b1f:	cmp    al,0xa5
  436b21:	or     al,bl
  436b23:	sbb    DWORD PTR [edi+0x23745577],ebx
  436b29:	mov    edi,0x2ad99ef9
  436b2e:	push   0x584610ce
  436b33:	xor    BYTE PTR [edx],dh
  436b35:	add    edi,DWORD PTR [ebx+0x0]
  436b38:	in     eax,dx
  436b39:	pop    ss
  436b3a:	inc    ebp
  436b3b:	or     BYTE PTR [edi-0x6a],ah
  436b3e:	mov    edx,DWORD PTR [ebp-0x28]
  436b41:	add    BYTE PTR [ecx-0xa845129],0x91
  436b48:	inc    eax
  436b49:	mov    es,WORD PTR [eax]
  436b4b:	add    BYTE PTR [ecx+0x4e],dl
  436b4e:	jne    0x436b5a
  436b50:	pop    ss
  436b51:	fimul  DWORD PTR [eax+ebp*8]
  436b54:	xchg   BYTE PTR [esi-0x6ef8000b],bl
  436b5a:	sub    eax,eax
  436b5c:	cmp    eax,DWORD PTR [ecx+edx*2+0x96dec9]
  436b63:	push   ebp
  436b64:	pop    ss
  436b65:	xor    eax,DWORD PTR [ecx+0xec]
	...
  436b7b:	add    al,dl
  436b7d:	mov    es,WORD PTR [eax]
  436b7f:	add    BYTE PTR [edi],bh
  436b81:	jl     0x436bd0
  436b83:	mov    ecx,DWORD PTR [ecx-0x6a]
  436b86:	dec    ebp
  436b87:	mov    ecx,esp
  436b89:	jl     0x436bed
  436b8b:	imul   edx,DWORD PTR [esi+esi*1],0xffffff8d
  436b8f:	call   FWORD PTR [ebx+0x66]
  436b92:	dec    edi
  436b93:	push   esi
  436b94:	ss mov ah,0x87
  436b97:	inc    ebp
  436b98:	dec    eax
  436b99:	test   eax,ebp
  436b9b:	sbb    BYTE PTR [ebx+0x66],0xf7
  436b9f:	push   edi
  436ba0:	xor    BYTE PTR [ecx+0x5be18965],0x52
  436ba7:	call   0x3ad23b
  436bac:	ret    
  436bad:	jge    0x436c11
  436baf:	ins    BYTE PTR es:[edi],dx
  436bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436bb1:	shr    al,1
  436bb3:	pop    eax
  436bb4:	hlt    
  436bb5:	lods   al,BYTE PTR ds:[esi]
  436bb6:	cmc    
  436bb7:	call   FWORD PTR [ebx+0x7e]
  436bba:	dec    esi
  436bbb:	push   0xffffffa9
  436bbd:	adc    al,0x45
  436bbf:	fdiv   QWORD PTR [ebx+esi*1+0x59]
  436bc3:	push   DWORD PTR [ebp+0xe2ed619]
  436bc9:	pop    edi
  436bca:	cmp    esp,ebp
  436bcc:	sub    al,0x73
  436bce:	fmul   QWORD PTR [edx]
  436bd0:	inc    eax
  436bd1:	imul   edx,ebp,0x37
  436bd4:	jo     0x436b8f
  436bd6:	add    eax,0xfe378784
  436bdb:	jmp    FWORD PTR [ebx+ecx*2]
  436bde:	fimul  WORD PTR [eax+0x0]
	...
  436bf4:	pop    eax
  436bf5:	int3   
  436bf6:	sbb    ebx,DWORD PTR [ebp-0x63]
  436bf9:	arpl   WORD PTR [ebx],cx
  436bfb:	xchg   DWORD PTR [eax],eax
  436bfd:	iret   
  436bfe:	xchg   DWORD PTR [ecx+ebx*4-0x21],eax
  436c02:	jg     0x436c0b
  436c04:	mov    ch,0x36
  436c06:	lea    ebx,[ecx+ecx*4+0x40]
  436c0a:	cmp    eax,esi
  436c0c:	add    DWORD PTR [ebp+0x24305f6a],ecx
  436c12:	scas   al,BYTE PTR es:[edi]
  436c13:	push   edi
  436c14:	lea    ebp,[eax+edi*8]
  436c17:	cli    
  436c18:	jb     0x436bb4
  436c1a:	dec    edi
  436c1b:	lock imul esi,DWORD PTR ds:[esi+eiz*2],0x7c88edb1
  436c24:	adc    eax,0x5321799f
  436c29:	cmp    bh,BYTE PTR ds:0xddec3859
  436c2f:	xchg   BYTE PTR [edx+0x5f],ch
  436c32:	xor    DWORD PTR [eax],ecx
  436c34:	mov    ch,0x36
  436c36:	adc    edx,edi
  436c38:	xor    ah,ah
  436c3a:	fadd   QWORD PTR [esi+0x3ff452e8]
  436c40:	mov    ch,0x49
  436c42:	scas   eax,DWORD PTR es:[edi]
  436c43:	cmp    BYTE PTR [eax+0x4e],bh
  436c46:	dec    edx
  436c47:	jae    0x436c7f
  436c49:	inc    DWORD PTR [edx+edi*2]
  436c4c:	xchg   DWORD PTR [ebp-0x6feb7f3b],ebp
  436c52:	call   0x2153215a
  436c57:	add    DWORD PTR [eax],eax
	...
  436c69:	add    BYTE PTR [eax],al
  436c6b:	add    BYTE PTR [esp+ecx*1-0x5f],bh
  436c6f:	fnstenv [ebp-0x46]
  436c72:	or     BYTE PTR [ebp-0x65],bh
  436c75:	dec    ebp
  436c76:	cdq    
  436c77:	fld    TBYTE PTR ds:0xb95097cb
  436c7d:	jl     0x436c26
  436c7f:	out    dx,al
  436c80:	mov    cl,0x37
  436c82:	or     ebx,DWORD PTR [edi+edi*4]
  436c85:	inc    eax
  436c86:	jno    0x436cc8
  436c88:	loope  0x436c0e
  436c8a:	es dec edi
  436c8c:	not    BYTE PTR [eax+eiz*1]
  436c8f:	mov    ?,ecx
  436c91:	inc    edi
  436c92:	inc    eax
  436c93:	inc    edx
  436c94:	aad    0x41
  436c96:	inc    ebx
  436c97:	jg     0x436cf3
  436c99:	mov    ebx,0x57f988f8
  436c9e:	cwde   
  436c9f:	ss cli 
  436ca1:	fsubr  QWORD PTR [edx]
  436ca3:	push   eax
  436ca4:	mov    cl,0x12
  436ca6:	lods   eax,DWORD PTR ds:[esi]
  436ca7:	mov    bl,0xeb
  436ca9:	fistp  WORD PTR [edx]
  436cab:	lock push ss
  436cad:	lahf   
  436cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436caf:	add    ebp,edx
  436cb1:	inc    edi
  436cb2:	jmp    0x7d843307
  436cb7:	(bad)  
  436cb8:	xor    ecx,edx
  436cba:	das    
  436cbb:	jmp    0x436ce7
  436cbd:	mov    eax,ds:0xba4fd9f1
  436cc2:	sbb    ecx,DWORD PTR [ecx+edi*8-0x65101cc5]
  436cc9:	pushf  
  436cca:	daa    
  436ccb:	add    al,0x2e
  436ccd:	mov    edx,0xecbb
	...
  436ce2:	add    BYTE PTR [eax],al
  436ce4:	jbe    0x436c6d
  436ce6:	leave  
  436ce7:	fstp   DWORD PTR [eax-0x21708b4b]
  436ced:	inc    eax
  436cee:	mov    ebx,0x1376ad9
  436cf3:	sbb    BYTE PTR [edx],al
  436cf5:	inc    ebp
  436cf6:	cli    
  436cf7:	inc    ebx
  436cf8:	push   0xb9617412
  436cfd:	aaa    
  436cfe:	inc    ebx
  436cff:	cld    
  436d00:	or     eax,0x53c8645
  436d05:	or     DWORD PTR [ebp+ebp*4-0x40],ecx
  436d09:	push   eax
  436d0a:	mov    ecx,0xcf6dd5
  436d0f:	out    dx,al
  436d10:	xchg   edx,eax
  436d11:	pop    edi
  436d12:	mov    ss:0xb0c8cbbc,al
  436d18:	mov    ebp,DWORD PTR [ebx]
  436d1a:	jne    0x436d07
  436d1c:	sub    DWORD PTR [esi-0x7a],ecx
  436d1f:	aam    0xa6
  436d21:	int    0x4f
  436d23:	mov    ecx,0x5ce0c48d
  436d28:	and    bh,BYTE PTR [ebx-0x7]
  436d2b:	inc    esi
  436d2c:	jl     0x436d68
  436d2e:	je     0x436d7d
  436d30:	ins    BYTE PTR es:[edi],dx
  436d31:	les    ecx,FWORD PTR [eax]
  436d33:	cdq    
  436d34:	ins    DWORD PTR es:[edi],dx
  436d35:	cmp    ecx,0x86673016
  436d3b:	das    
  436d3c:	mov    DWORD PTR [ebx-0x4173e0de],ebp
  436d42:	(bad)  
  436d43:	cmc    
  436d44:	(bad)  
  436d45:	(bad)  
  436d46:	hlt    
  436d47:	add    DWORD PTR [eax],eax
	...
  436d59:	add    BYTE PTR [eax],al
  436d5b:	add    BYTE PTR [esi-0x7e],dl
  436d5e:	cli    
  436d5f:	push   es
  436d60:	jl     0x436d26
  436d62:	in     al,dx
  436d63:	jb     0x436d27
  436d65:	ror    DWORD PTR ds:0xd33ab6a9,cl
  436d6b:	out    dx,al
  436d6c:	repz aas 
  436d6e:	cli    
  436d6f:	mov    edi,0xdee8c45d
  436d74:	cmp    dh,BYTE PTR fs:[ebp+esi*4+0xd]
  436d79:	popa   
  436d7a:	cli    
  436d7b:	push   esp
  436d7c:	add    DWORD PTR [edx],edi
  436d7e:	rol    DWORD PTR [eax],cl
  436d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436d81:	jge    0x436d78
  436d83:	pop    edi
  436d84:	mov    dl,0x7c
  436d86:	mov    edx,0x8b539310
  436d8c:	inc    eax
  436d8d:	adc    ah,dh
  436d8f:	mov    eax,0x8b00930e
  436d94:	cdq    
  436d95:	xchg   DWORD PTR [esi-0x7d],ecx
  436d98:	sbb    al,0x77
  436d9a:	push   eax
  436d9b:	dec    ecx
  436d9d:	mov    ecx,DWORD PTR [ebx-0x8995b7b]
  436da3:	jmp    FWORD PTR [edx+ecx*1+0x1a34f44d]
  436daa:	or     dh,bh
  436dac:	push   ebx
  436dad:	mov    ebp,0x29480fb9
  436db2:	add    DWORD PTR [eax],eax
  436db4:	pushf  
  436db5:	adc    eax,0x58014885
  436dba:	not    DWORD PTR [eax-0xc]
  436dbd:	pop    edi
  436dbe:	sub    eax,0xff
	...
  436dd3:	add    bl,dh
  436dd5:	or     ebp,edx
  436dd7:	mov    DWORD PTR [ecx+0x62],ecx
  436dda:	test   esi,esi
  436ddc:	xchg   ebx,eax
  436ddd:	mov    esi,0x928c01c9
  436de2:	add    DWORD PTR [esi],0x510cd601
  436de8:	sub    dl,BYTE PTR [edi-0x76]
  436deb:	mov    ah,0x5c
  436ded:	xchg   edx,eax
  436dee:	add    BYTE PTR [ebp-0x4a7c7874],al
  436df4:	dec    ebp
  436df5:	xchg   edx,eax
  436df6:	add    BYTE PTR [ebx+0x8819619],cl
  436dfc:	shr    DWORD PTR [ebp+0x8],1
  436dff:	push   edx
  436e00:	sbb    al,0x57
  436e02:	push   ecx
  436e03:	sbb    al,0xc9
  436e05:	push   ebx
  436e06:	pop    es
  436e07:	test   DWORD PTR [ebx-0x4affff6c],ebp
  436e0d:	jns    0x436e38
  436e0f:	data16 fisttp DWORD PTR [edi-0x48]
  436e14:	jge    0x436e76
  436e16:	cmp    eax,0x85fd121c
  436e1b:	dec    esp
  436e1c:	mov    ebp,0xfb86d1d2
  436e21:	xchg   edi,eax
  436e22:	data16 or bl,BYTE PTR [ebp+0x20]
  436e26:	and    esp,DWORD PTR [ebx+esi*8]
  436e29:	sbb    al,0xd2
  436e2b:	je     0x436dea
  436e2d:	mov    cl,0x17
  436e2f:	inc    esp
  436e30:	(bad)  
  436e31:	push   0xbcfd8704
  436e36:	mov    ch,0x15
	...
  436e4c:	out    dx,al
  436e4d:	mov    esp,0x34f6f9a9
  436e52:	jp     0x436eaf
  436e54:	mov    ah,0x28
  436e56:	(bad)  
  436e57:	jle    0x436ea9
  436e59:	inc    eax
  436e5a:	(bad)  
  436e5b:	sbb    ch,BYTE PTR gs:[edi+ecx*2+0x24cf0dbc]
  436e63:	sbb    al,0xa2
  436e65:	into   
  436e66:	test   DWORD PTR [ecx+ebp*4-0x3f],eax
  436e6a:	or     al,0x8d
  436e6c:	call   0x63ca9cdf
  436e71:	sbb    DWORD PTR [esi],ebp
  436e73:	sti    
  436e74:	and    al,0xe3
  436e76:	add    al,0x0
  436e78:	mov    ch,0xab
  436e7a:	les    esi,FWORD PTR [eax+eax*8-0x3f]
  436e7e:	dec    edi
  436e7f:	fcomp  DWORD PTR [ebp-0x7b]
  436e82:	daa    
  436e83:	sti    
  436e84:	bound  esi,QWORD PTR [eax+0x2b4efc3f]
  436e8a:	jg     0x436ef0
  436e8c:	push   ecx
  436e8d:	daa    
  436e8e:	push   0x6dbc3868
  436e93:	push   edi
  436e94:	dec    ebp
  436e95:	cmp    al,0xf7
  436e97:	cli    
  436e98:	cmp    dl,BYTE PTR [eax+0x8c1406e]
  436e9e:	lock mov BYTE PTR [ecx+0x48b362f],al
  436ea5:	loop   0x436ede
  436ea7:	xlat   BYTE PTR ds:[ebx]
  436ea8:	inc    ebp
  436ea9:	and    al,0xe8
  436eab:	add    esi,DWORD PTR [ebp+0x50a812]
	...
  436ec1:	add    BYTE PTR [eax],al
  436ec3:	add    BYTE PTR [eax+0x1ae43d08],bh
  436ec9:	jmp    0x74345ca
  436ece:	sub    eax,0x6693dbdc
  436ed3:	pusha  
  436ed4:	in     eax,dx
  436ed5:	(bad)  
  436ed6:	std    
  436ed7:	ins    BYTE PTR es:[edi],dx
  436ed8:	xor    BYTE PTR [ebx],al
  436eda:	cmp    bh,dl
  436edc:	fistp  QWORD PTR [eax+eiz*1]
  436edf:	in     al,dx
  436ee0:	pop    es
  436ee1:	cdq    
  436ee2:	jp     0x436eba
  436ee4:	xor    eax,ebx
  436ee6:	outs   dx,DWORD PTR ds:[esi]
  436ee7:	mov    ch,BYTE PTR [ecx+0x3b]
  436eea:	pop    edi
  436eeb:	inc    eax
  436eec:	rcl    DWORD PTR [edx],0x5a
  436eef:	pushf  
  436ef0:	fmulp  st(4),st
  436ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436ef3:	add    edi,DWORD PTR [esi+0x708058d3]
  436ef9:	mov    WORD PTR [ebx-0x13afe44c],fs
  436eff:	mov    ecx,?
  436f01:	pop    ebx
  436f02:	outs   dx,DWORD PTR ds:[esi]
  436f03:	add    esi,DWORD PTR [eax]
  436f05:	dec    edi
  436f06:	mov    esp,0xf011170a
  436f0b:	add    eax,DWORD PTR [ecx]
  436f0d:	xchg   ebx,eax
  436f0e:	pusha  
  436f0f:	pop    ebx
  436f10:	aas    
  436f11:	iret   
  436f12:	out    0x2d,eax
  436f14:	sti    
  436f15:	fisub  WORD PTR [eax+eax*4-0xe]
  436f19:	cmp    al,0xb
  436f1b:	(bad)  
  436f1c:	jmp    0x4727:0xe50bad0a
  436f23:	pop    ds
  436f24:	dec    edi
  436f25:	cmp    al,0x1
  436f27:	push   0x0
	...
  436f39:	add    BYTE PTR [eax],al
  436f3b:	add    BYTE PTR [edx],al
  436f3d:	mov    al,ds:0x156274f9
  436f42:	icebp  
  436f43:	out    0x60,al
  436f45:	cmp    DWORD PTR [ecx+eiz*8+0x0],esi
  436f49:	popa   
  436f4a:	test   bh,bl
  436f4c:	mov    BYTE PTR ds:0x6535b230,bh
  436f52:	or     ch,BYTE PTR [ebp-0x6e]
  436f55:	cmp    al,0xfa
  436f57:	jmp    0x3ccf1cf8
  436f5c:	adc    eax,0x9922ee4
  436f61:	aad    0x15
  436f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436f64:	or     BYTE PTR ds:0xd332957c,dl
  436f6a:	or     BYTE PTR [ecx],bh
  436f6c:	xor    al,0x51
  436f6e:	or     DWORD PTR [esi],esi
  436f70:	sub    al,0x4e
  436f72:	push   ecx
  436f73:	jb     0x436f07
  436f75:	mov    ebp,eax
  436f77:	dec    edx
  436f78:	in     eax,dx
  436f79:	cmp    dl,bh
  436f7b:	ins    DWORD PTR es:[edi],dx
  436f7c:	stc    
  436f7d:	mov    edi,0xb1f46efe
  436f82:	outs   dx,DWORD PTR ds:[esi]
  436f83:	je     0x436f87
  436f85:	xor    al,0x59
  436f87:	push   ecx
  436f88:	aad    0xa2
  436f8a:	stc    
  436f8b:	push   esi
  436f8c:	cmp    dl,ah
  436f8e:	or     BYTE PTR [ecx-0x663ced37],bh
  436f94:	cmp    eax,0x37510cd4
  436f99:	aaa    
  436f9a:	cli    
  436f9b:	ss xor eax,0xeb74fb
	...
  436fb1:	add    BYTE PTR [eax],al
  436fb3:	add    BYTE PTR [eax-0x6],ah
  436fb6:	cwd    
  436fb8:	cmp    eax,esp
  436fba:	in     al,0xc1
  436fbc:	pop    esi
  436fbd:	cmp    dl,BYTE PTR [edi]
  436fbf:	push   ss
  436fc0:	mov    BYTE PTR [esp+eax*2],cl
  436fc3:	loope  0x436f6b
  436fc5:	fiadd  WORD PTR [ebp-0x7e7c5e00]
  436fcb:	inc    ebp
  436fcc:	pop    eax
  436fcd:	daa    
  436fce:	popa   
  436fcf:	cld    
  436fd0:	dec    ebx
  436fd1:	fs jle 0x436f94
  436fd4:	rcl    BYTE PTR [eax-0x85f3c0a],0x6d
  436fdb:	push   cs
  436fdc:	or     ecx,edx
  436fde:	or     BYTE PTR [ebx-0x37850827],cl
  436fe4:	jmp    0x43700c
  436fe6:	jae    0x437004
  436fe8:	cli    
  436fe9:	arpl   di,si
  436feb:	jne    0x436ff1
  436fed:	daa    
  436fee:	mov    dl,0x35
  436ff0:	dec    edx
  436ff1:	xor    DWORD PTR fs:[ebp+0x3c],0xffffff84
  436ff6:	push   ecx
  436ff7:	mov    esp,DWORD PTR [ecx-0x53f77e79]
  436ffd:	fs push ecx
  436fff:	or     BYTE PTR [edi+0x3c],dl
  437002:	push   eax
  437003:	call   FWORD PTR [ebx+ecx*4+0x469ac029]
  43700a:	mov    esp,0x8169dc08
  43700f:	in     al,dx
  437010:	dec    ebp
  437011:	xor    dl,BYTE PTR [edx+0x298ecc02]
  437017:	rol    BYTE PTR [eax],0x0
	...
  43702a:	add    BYTE PTR [eax],al
  43702c:	aam    0x7a
  43702e:	or     BYTE PTR [ebx-0x65],dl
  437031:	test   eax,0x116356b9
  437036:	mov    ch,0x74
  437038:	jmp    0x43709d
  43703a:	test   edi,0x8e762661
  437040:	pop    esp
  437041:	mov    ?,WORD PTR [ecx-0x40]
  437044:	sub    esp,DWORD PTR [esi]
  437046:	xchg   DWORD PTR [edx],ebx
  437048:	retf   
  437049:	arpl   WORD PTR [ecx+eiz*2-0x17],sp
  43704d:	leave  
  43704e:	rcr    BYTE PTR [eax-0x3c],1
  437051:	mov    edx,0xa1b5ff13
  437056:	mov    cl,al
  437058:	add    eax,0x52737adc
  43705d:	xchg   ecx,eax
  43705e:	aam    0x4f
  437060:	push   cs
  437061:	daa    
  437062:	(bad)  
  437063:	push   DWORD PTR ds:0x386b92b3
  437069:	sub    esi,ecx
  43706b:	xchg   dh,dh
  43706d:	pop    edi
  43706e:	adc    DWORD PTR [edx],0xffffffb5
  437071:	sub    BYTE PTR [ebx],dl
  437073:	sti    
  437074:	fsubp  st(1),st
  437076:	std    
  437077:	xor    esp,0x27
  43707a:	(bad)  
  43707b:	push   DWORD PTR [esi]
  43707d:	push   eax
  43707e:	into   
  43707f:	or     dh,BYTE PTR [ecx]
  437081:	adc    BYTE PTR ds:0x62ceb500,al
  437087:	lea    eax,[eax+0x70892cf4]
  43708d:	and    al,0xdd
  43708f:	inc    edx
	...
  4370a4:	iret   
  4370a5:	sbb    esi,ecx
  4370a7:	mov    WORD PTR [eax+0x20],?
  4370aa:	xor    eax,0x7f81b466
  4370af:	test   BYTE PTR [ecx+0x11],cl
  4370b2:	into   
  4370b3:	cli    
  4370b4:	gs xchg ebp,eax
  4370b6:	jnp    0x437114
  4370b8:	mov    ebp,0xbaf44fae
  4370bd:	bound  ebp,QWORD PTR [edx]
  4370bf:	adc    ch,dh
  4370c1:	mov    DWORD PTR es:[edi+0x44814320],edi
  4370c8:	test   eax,0x738736f7
  4370cd:	test   DWORD PTR [eax-0x38207284],0x1326b517
  4370d7:	sti    
  4370d8:	mov    fs,WORD PTR [esi]
  4370da:	add    edi,0x7a
  4370dd:	mov    al,0x47
  4370df:	lock ss nop
  4370e2:	pop    ds
  4370e3:	shl    ecx,cl
  4370e5:	lahf   
  4370e6:	(bad)  
  4370e7:	sti    
  4370e8:	xor    ebx,edx
  4370ea:	pop    ss
  4370eb:	cmp    eax,DWORD PTR ds:0xa733f539
  4370f1:	iret   
  4370f2:	out    0x86,eax
  4370f4:	jbe    0x437082
  4370f6:	lea    esi,[ecx]
  4370f8:	xor    bl,al
  4370fa:	pop    ebx
  4370fb:	sub    al,0x4d
  4370fd:	sub    dl,cl
  4370ff:	shr    BYTE PTR [edi],cl
  437101:	add    eax,0x37717caa
  437106:	ins    DWORD PTR es:[edi],dx
  437107:	dec    eax
	...
  43711c:	or     eax,0x29b42d07
  437121:	adc    edi,DWORD PTR [ecx+edx*8]
  437124:	(bad)  
  437126:	jno    0x437170
  437128:	loope  0x437134
  43712a:	and    eax,0x93d32dcc
  43712f:	xor    BYTE PTR [ecx],0xac
  437132:	lods   al,BYTE PTR ds:[esi]
  437133:	shr    bh,cl
  437135:	fbstp  TBYTE PTR [eax+eax*2+0x5]
  437139:	push   ecx
  43713a:	and    eax,0xe78fb9ac
  43713f:	add    esi,esi
  437141:	rol    BYTE PTR [edi-0x18704afc],cl
  437147:	retf   0x3371
  43714a:	out    0x3,al
  43714c:	mov    ch,0x8f
  43714e:	jg     0x437155
  437150:	lods   al,BYTE PTR ds:[esi]
  437151:	cmp    BYTE PTR [ebx+0x7e],ch
  437154:	adc    DWORD PTR [edi+edx*1],ebp
  437157:	(bad)
  43715b:	add    cl,BYTE PTR [eax+0x4f]
  43715e:	addr16 ret 
  437160:	push   ss
  437161:	sub    BYTE PTR [ebx-0x5cc7702b],dl
  437167:	xor    edx,esp
  437169:	inc    esi
  43716a:	es pop es
  43716c:	mov    ch,0xe2
  43716e:	add    BYTE PTR [edx+0x5a],ah
  437171:	paddsw mm3,QWORD PTR [ebp-0x48]
  437175:	pop    DWORD PTR [eax]
  437177:	mov    edx,0xb466dcac
  43717c:	xor    eax,0xb180c3
	...
  437191:	add    BYTE PTR [eax],al
  437193:	add    BYTE PTR [esi-0x4b],bh
  437196:	pop    ss
  437197:	push   cs
  437198:	addr16 imul edx,ebp,0x514ecb9a
  43719f:	ins    BYTE PTR es:[edi],dx
  4371a0:	and    eax,0x64f6fbc0
  4371a5:	add    bh,bh
  4371a7:	call   0x6b2c8162
  4371ac:	das    
  4371ad:	cmp    dl,bh
  4371af:	push   0xfffffff1
  4371b1:	xor    al,0xa
  4371b3:	ins    DWORD PTR es:[edi],dx
  4371b4:	mov    ch,0x39
  4371b6:	cli    
  4371b7:	jmp    0x6d4d6a7d
  4371bc:	mov    ebp,0x81e9fa39
  4371c1:	dec    ebp
  4371c2:	push   ecx
  4371c3:	mov    dh,0x2
  4371c5:	cmp    BYTE PTR [edi],cl
  4371c7:	sub    DWORD PTR [ecx-0x4746bbfa],edi
  4371cd:	clc    
  4371ce:	or     DWORD PTR [ebp+0x9],esp
  4371d1:	pop    DWORD PTR [eax]
  4371d3:	jmp    0xccf4f50
  4371d8:	std    
  4371d9:	fucomip st,st(0)
  4371db:	jmp    0xc7ec:0x72fa34df
  4371e2:	stc    
  4371e3:	cld    
  4371e4:	push   es
  4371e5:	xor    eax,0x77ab7514
  4371ea:	add    BYTE PTR [edx],ah
  4371ec:	jo     0x437178
  4371ee:	test   BYTE PTR [ecx],dh
  4371f0:	mov    dh,0x8f
  4371f2:	add    BYTE PTR [edx+0x4d4c04e1],bh
	...
  43720c:	mov    BYTE PTR [esp+ecx*2],0x0
  437210:	cld    
  437211:	xor    ch,0xd0
  437214:	sbb    DWORD PTR [edi+eax*1-0x7b],ecx
  437218:	clc    
  437219:	xchg   edx,eax
  43721a:	add    BYTE PTR [eax],al
  43721c:	xlat   BYTE PTR ds:[ebx]
  43721d:	into   
  43721e:	loopne 0x4371ab
  437220:	fs mov dh,0x54
  437223:	fcomp  DWORD PTR [esi]
  437225:	mov    dh,0x54
  437227:	int3   
  437228:	push   ds
  437229:	add    DWORD PTR [edi+0x5160a45d],0x64
  437230:	(bad)  [ebx+0x7]
  437233:	test   DWORD PTR [edi],esi
  437235:	xchg   edx,eax
  437236:	add    BYTE PTR [eax],al
  437238:	xlat   BYTE PTR ds:[ebx]
  437239:	into   
  43723a:	loopne 0x4371c7
  43723c:	adc    al,0xb6
  43723e:	push   esp
  43723f:	aam    0xee
  437241:	mov    dh,0x54
  437243:	rcr    dh,0xd5
  437246:	adc    BYTE PTR [ebx+0x3],dl
  437249:	(bad)  
  43724b:	jmp    FWORD PTR [ecx+0x4f]
  43724e:	dec    edx
  43724f:	jmp    FWORD PTR [ebp+0x13c08383]
  437255:	push   cs
  437256:	dec    ebp
  437257:	add    DWORD PTR [ebx+edx*4],ecx
  43725a:	jns    0x4372d9
  43725c:	sbb    al,0x8f
  43725e:	add    eax,0x91d685
  437263:	add    BYTE PTR [edi-0x33],ah
  437266:	aam    0x8b
  437268:	aam    0xb5
  43726a:	push   esp
  43726b:	call   0x4445fe
	...
  437284:	cld    
  437285:	xchg   edx,eax
  437286:	push   eax
  437287:	call   FWORD PTR [ebp-0x2c3f7c7d]
  43728d:	or     eax,0x929c011a
  437292:	add    DWORD PTR [ebp+0x4],0x698d01b4
  437299:	cli    
  43729a:	dec    ebx
  43729b:	push   ebx
  43729c:	mov    ch,0xf8
  43729e:	rcl    BYTE PTR [eax-0x27],1
  4372a1:	stos   DWORD PTR es:[edi],eax
  4372a2:	mov    ebp,0xff27300a
  4372a7:	push   DWORD PTR [ebp+0x2ee842c1]
  4372ad:	xor    BYTE PTR [ebx+0x54],bh
  4372b0:	xchg   ecx,eax
  4372b1:	sbb    dh,BYTE PTR ds:0x2d80e0fb
  4372b7:	sti    
  4372b8:	add    al,0xe5
  4372ba:	cmp    BYTE PTR [edi-0x2a5c56],0x52
  4372c1:	sub    BYTE PTR [ebp+0x44],bh
  4372c4:	imul   edi,DWORD PTR [edi+0x307cf02a],0x28658201
  4372ce:	(bad)  
  4372cf:	(bad)  
  4372d0:	cmp    al,0x3
  4372d2:	loop   0x43725a
  4372d4:	js     0x43731a
  4372d6:	xor    BYTE PTR [ebx-0x4c],0x2c
  4372da:	jge    0x437338
  4372dc:	and    DWORD PTR [edi-0x513dfbd6],ebx
  4372e2:	imul   edi,edi,0xa
  4372e5:	sub    BYTE PTR [ebp+0x5c],bh
	...
  4372fc:	adc    ecx,eax
  4372fe:	dec    edx
  4372ff:	or     BYTE PTR [esi+0xe2de07b],dh
  437305:	mov    cl,0x1
  437307:	sub    eax,0x2fff28cb
  43730c:	imul   ecx,DWORD PTR [ebx+0x36],0x41b14875
  437313:	or     BYTE PTR [edi+0x68],bl
  437316:	xor    al,0xfb
  437318:	mov    al,ds:0xb53fed8c
  43731d:	stos   DWORD PTR es:[edi],eax
  43731e:	les    esi,FWORD PTR [ebx+0x58]
  437321:	mov    ebp,0xef360851
  437326:	leave  
  437327:	mov    eax,?
  437329:	(bad)  
  43732a:	pop    edi
  43732b:	fdiv   QWORD PTR [edi-0x69]
  43732e:	pop    ecx
  43732f:	iret   
  437330:	xor    BYTE PTR [eax+0x3f],bl
  437333:	pop    ss
  437334:	cmp    cl,ch
  437336:	fistp  WORD PTR [ecx-0xb]
  437339:	fild   WORD PTR [edx-0x7]
  43733c:	or     ah,BYTE PTR [ecx+0x503003a7]
  437342:	mov    esp,0xdfbd6e0a
  437347:	xor    BYTE PTR [edx+0x35],0x8e
  43734b:	add    ecx,DWORD PTR [ebp+0x12]
  43734e:	repz int 0x5f
  437351:	or     DWORD PTR [eax],edx
  437353:	mov    DWORD PTR [edi-0x44],ecx
  437356:	fnstenv [esi]
  437358:	retf   0x347
  43735b:	xor    ecx,0x781037
	...
  437371:	add    BYTE PTR [eax],al
  437373:	add    BYTE PTR [ebp+0xa79f335],bl
  437379:	(bad)  
  43737b:	mov    ah,0xd8
  43737d:	xor    eax,0xbc0b87e3
  437382:	not    DWORD PTR [edx]
  437384:	cmc    
  437385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437386:	dec    edi
  437387:	jle    0x43735b
  437389:	(bad)  
  43738a:	daa    
  43738b:	cmp    DWORD PTR [ecx+0x37],0x359c4bd0
  437392:	mov    ebx,0x5f3b71ce
  437397:	dec    eax
  437398:	jmp    0xbb2398ad
  43739d:	js     0x4373c8
  43739f:	or     BYTE PTR [esi-0x2030f3ef],ch
  4373a5:	xor    al,0xd7
  4373a7:	stos   BYTE PTR es:[edi],al
  4373a8:	cmp    ecx,ebx
  4373aa:	mov    ecx,esi
  4373ac:	inc    esp
  4373ad:	xchg   DWORD PTR [esi-0x5],ebp
  4373b0:	jb     0x4373e6
  4373b2:	sbb    esp,ebp
  4373b4:	mov    edi,0x2f7900ca
  4373b9:	int3   
  4373ba:	fsub   QWORD PTR [edx-0xb]
  4373bd:	aas    
  4373be:	jle    0x43736c
  4373c0:	call   0x2db2:0x9bf13588
  4373c7:	push   esi
  4373c8:	cmp    DWORD PTR [ecx],0xffffff86
  4373cb:	pushf  
  4373cc:	jp     0x4373db
  4373ce:	adc    BYTE PTR [ecx-0x1eb0c737],bl
  4373d4:	dec    ebx
  4373d6:	call   0x43743d
	...
  4373eb:	add    BYTE PTR [esi-0x3c],ch
  4373ee:	stc    
  4373ef:	cwde   
  4373f0:	outs   dx,BYTE PTR ds:[esi]
  4373f1:	or     eax,0x8cdf3d44
  4373f6:	push   eax
  4373f7:	push   ds
  4373f8:	mov    eax,ds:0x82ac8587
  4373fd:	cmp    DWORD PTR [ecx+esi*1-0x31],esi
  437401:	mov    WORD PTR [eax+0x6],ss
  437404:	mov    DWORD PTR [edi+0xd56a485],edx
  43740a:	or     DWORD PTR [ecx+0x6208df03],ebx
  437410:	jge    0x437445
  437412:	xchg   cl,dh
  437414:	out    0x38,al
  437416:	push   eax
  437417:	icebp  
  437418:	popf   
  437419:	sar    eax,cl
  43741b:	inc    ebx
  43741c:	int    0xd7
  43741e:	call   0xfa7c5579
  437423:	(bad)  
  437424:	push   0x5f
  437426:	cli    
  437427:	aam    0xb2
  437429:	test   BYTE PTR [eax-0x17],al
  43742c:	mov    eax,ds:0xf4a055d9
  437431:	fiadd  DWORD PTR [ebp-0x3ad7c96b]
  437437:	call   0x3f9103f2
  43743c:	mov    BYTE PTR [edi-0x70890990],ah
  437442:	push   0x3a3a5c00
  437447:	add    BYTE PTR [edi+eiz*4],ah
  43744a:	data16 (bad) 
  43744c:	sub    edi,DWORD PTR [ecx+0x89f1]
	...
  437462:	add    BYTE PTR [eax],al
  437464:	cdq    
  437465:	das    
  437466:	test   edi,edi
  437468:	stos   DWORD PTR es:[edi],eax
  437469:	or     edx,DWORD PTR [edi+0x1]
  43746c:	mov    WORD PTR [edi-0x24e6a79e],cs
  437472:	rcr    BYTE PTR [eax-0xc],1
  437475:	aas    
  437476:	ud0    edi,ebx
  437479:	aad    0x57
  43747b:	lea    eax,[ecx+0x2b]
  43747e:	push   edx
  43747f:	call   0x3ab111
  437484:	xlat   BYTE PTR ds:[ebx]
  437485:	mov    WORD PTR [ecx+0x65],?
  437488:	ror    BYTE PTR [ebx-0x4de2317f],0x4c
  43748f:	ror    BYTE PTR ds:0x6850f57c,1
  437495:	or     bh,BYTE PTR [edx+0x124d10f]
  43749b:	add    BYTE PTR [eax+edi*4-0x2],cl
  43749f:	mov    WORD PTR [ecx+0x47],ds
  4374a2:	push   ecx
  4374a3:	push   edi
  4374a4:	sbb    edi,DWORD PTR [edi+0x20]
  4374a7:	test   DWORD PTR [esp+esi*1-0x7b],ecx
  4374ab:	or     eax,0x6a008f0d
  4374b0:	(bad)  
  4374b1:	mov    dl,0xb4
  4374b3:	jo     0x4374b0
  4374b5:	inc    ebx
  4374b6:	neg    DWORD PTR [eax-0x1c]
  4374b9:	out    0xf,al
  4374bb:	(bad)  
  4374bc:	cmp    edi,DWORD PTR [eax+0x3657f844]
  4374c2:	dec    edx
  4374c3:	dec    ebp
  4374c5:	(bad)  
  4374c6:	out    0xd7,eax
	...
  4374dc:	int3   
  4374dd:	mov    es,WORD PTR [eax]
  4374df:	lea    esp,[ecx-0x4aafb3d1]
  4374e5:	sbb    DWORD PTR [edi],ebp
  4374e7:	adc    al,0x30
  4374e9:	jmp    0x293df9ea
  4374ee:	(bad)  
  4374ef:	jmp    FWORD PTR [esi]
  4374f1:	ins    BYTE PTR es:[edi],dx
  4374f2:	loopne 0x43747a
  4374f4:	mov    ebp,0x7f032ab
  4374f9:	xchg   ecx,eax
  4374fa:	test   BYTE PTR [edx],dl
  4374fc:	cmc    
  4374fd:	sub    BYTE PTR [esi],ch
  4374ff:	sti    
  437500:	les    ebp,FWORD PTR [ebx+0x3380abd]
  437506:	(bad)  
  437507:	push   DWORD PTR [ebp-0x4b04bd96]
  43750d:	cmp    DWORD PTR [esp+eax*2-0x7b84e786],edx
  437514:	in     eax,0x79
  437516:	int3   
  437517:	cli    
  437518:	add    eax,0x3057124f
  43751d:	stos   DWORD PTR es:[edi],eax
  43751e:	cmc    
  43751f:	cli    
  437520:	pop    edx
  437521:	xchg   ecx,eax
  437522:	aad    0x25
  437524:	mov    dl,0x9a
  437526:	int3   
  437527:	pop    eax
  437528:	in     al,dx
  437529:	stos   DWORD PTR es:[edi],eax
  43752a:	mov    ebp,0x42bdc879
  43752f:	lock iret 
  437531:	or     al,0x29
  437533:	lea    ecx,[eax+0x384f2f90]
  437539:	fstp   TBYTE PTR ds:0x332922fa
  43753f:	data16 add BYTE PTR [eax],al
	...
  437552:	add    BYTE PTR [eax],al
  437554:	mov    ch,0xbd
  437556:	lods   eax,DWORD PTR ds:[esi]
  437557:	dec    ebp
  437558:	cmp    al,0x7b
  43755a:	fadd   QWORD PTR [esi+0x50c578bd]
  437560:	mov    cl,0xa3
  437562:	les    esi,FWORD PTR [esi+edi*4-0x22]
  437566:	inc    esp
  437567:	lea    edi,[eax]
  437569:	push   0x97eafac6
  43756e:	lds    edx,FWORD PTR [ecx+eiz*2]
  437571:	(bad)  
  437572:	test   BYTE PTR [ebx-0x4b],0xc
  437576:	test   al,0x50
  437578:	mov    ds:0xcf446d04,eax
  43757d:	xor    DWORD PTR [ebx-0x7cb8bdcc],ecx
  437583:	jns    0x4375ee
  437585:	cmp    edx,DWORD PTR [eax+0x7331c7b0]
  43758b:	sub    BYTE PTR [edx-0x44],0xcb
  43758f:	push   ss
  437590:	jne    0x43753a
  437592:	fistp  QWORD PTR [ecx-0x26]
  437595:	(bad)  
  437596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437597:	js     0x43759a
  437599:	cmp    al,0x40
  43759b:	les    esp,FWORD PTR [edi-0x4720b4cf]
  4375a1:	or     al,0x40
  4375a3:	dec    esi
  4375a4:	add    DWORD PTR [ebx-0x454a339a],ecx
  4375aa:	jecxz  0x437575
  4375ac:	icebp  
  4375ad:	xor    al,dh
  4375af:	sub    BYTE PTR [esi-0x7f],bl
  4375b2:	imul   ebx,DWORD PTR [edi+0x5e],0x7f1b31
	...
  4375c9:	add    BYTE PTR [eax],al
  4375cb:	add    cl,bh
  4375cd:	aas    
  4375ce:	pop    edi
  4375cf:	cld    
  4375d0:	cli    
  4375d1:	xor    BYTE PTR [ecx+0x7b33bfb],bh
  4375d7:	jg     0x4375ca
  4375d9:	and    ebp,DWORD PTR [edi-0x4]
  4375dc:	xor    BYTE PTR [eax],0x99
  4375df:	sti    
  4375e0:	xor    ecx,ebx
  4375e2:	out    dx,eax
  4375e3:	jle    0x43759f
  4375e5:	(bad)  
  4375e7:	xor    al,0xc5
  4375e9:	or     ch,BYTE PTR [eax+0x5f37797e]
  4375ef:	sti    
  4375f0:	mov    edi,0xffcaf70b
  4375f5:	xor    BYTE PTR [eax],bl
  4375f7:	retf   
  4375f8:	xchg   DWORD PTR gs:[esi+0x2],ebp
  4375fc:	xchg   BYTE PTR [eax],dh
  4375fe:	add    DWORD PTR [ecx],ebx
  437600:	jmp    0x80f8d20e
  437605:	fcomp  QWORD PTR [eax-0x6f]
  437608:	shl    BYTE PTR [esi],1
  43760a:	cli    
  43760b:	sahf   
  43760c:	lahf   
  43760d:	aad    0x55
  43760f:	mov    al,ds:0x89e8dff3
  437614:	leave  
  437615:	ss cli 
  437617:	lds    edi,FWORD PTR [edx-0x46ecf55e]
  43761d:	daa    
  43761e:	div    DWORD PTR [ebx+0x7f]
  437621:	xor    eax,0x356f0fe9
  437626:	cli    
  437627:	push   edx
  437628:	cwde   
  437629:	sub    BYTE PTR [ebx-0x16ca80ab],cl
  43762f:	loop   0x437631
	...
  437641:	add    BYTE PTR [eax],al
  437643:	add    BYTE PTR [edx+0x35],dh
  437646:	cli    
  437647:	inc    ecx
  437648:	(bad)  
  437649:	and    bh,dl
  43764b:	inc    esi
  43764c:	fmul   DWORD PTR [esi+0x35801ce8]
  437652:	cli    
  437653:	nop
  437654:	jae    0x437633
  437656:	test   DWORD PTR [ecx],esi
  437658:	xor    eax,0x5fd07542
  43765d:	std    
  43765e:	inc    BYTE PTR [esi-0x378b0fcb]
  437664:	xor    edi,DWORD PTR [eax]
  437666:	xor    DWORD PTR [ebp+eax*2-0x4f544e7b],edx
  43766d:	mov    al,0xf8
  43766f:	add    DWORD PTR [edx-0x200e8276],0xc30101ba
  437679:	xor    bh,ah
  43767b:	out    0xcc,al
  43767d:	lock call 0xd32d76
  437683:	ss lock mov al,0x21
  437687:	jmp    0x9bfdec
  43768c:	ror    DWORD PTR [edx+0x50],cl
  43768f:	xor    ebp,DWORD PTR [edx]
  437691:	or     dh,0x74
  437694:	call   0xc682:0x7a0aaf36
  43769b:	je     0x43766f
  43769d:	call   0x573:0x981583c0
  4376a4:	mov    dh,0x89
  4376a6:	pop    eax
  4376a7:	jmp    0x4376a9
	...
  4376b9:	add    BYTE PTR [eax],al
  4376bb:	add    bl,cl
  4376bd:	or     bh,cl
  4376bf:	sub    edi,DWORD PTR [ecx-0x45ef1ce0]
  4376c5:	adc    al,0xf9
  4376c7:	cmp    DWORD PTR [ebx-0x69099cc2],ebp
  4376cd:	sub    BYTE PTR [edi+0x6c021c9],ch
  4376d3:	rcr    BYTE PTR [edi],1
  4376d5:	push   esi
  4376d6:	cld    
  4376d7:	push   cs
  4376d8:	sub    ebp,DWORD PTR [esi]
  4376da:	jnp    0x4376d5
  4376dc:	pushf  
  4376dd:	(bad)
  4376e1:	jmp    0x437750
  4376e3:	add    ebx,edi
  4376e5:	jmp    0x4376e7
  4376e7:	test   al,0x5e
  4376e9:	(bad)  
  4376eb:	div    BYTE PTR [edx+0x6469fb4c]
  4376f1:	jnp    0x43767a
  4376f3:	aaa    
  4376f4:	adc    dl,BYTE PTR [ebx+ecx*2-0x73]
  4376f8:	adc    al,0x44
  4376fa:	push   eax
  4376fb:	push   edi
  4376fc:	iret   
  4376fd:	pop    edx
  4376fe:	add    BYTE PTR [edi+0x2],dh
  437701:	test   dh,ch
  437703:	xor    dl,bh
  437705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437706:	inc    ecx
  437707:	push   DWORD PTR [edi-0x7bb7e77]
  43770d:	and    al,BYTE PTR [esp+eax*1+0x3c30870d]
  437714:	add    eax,0xb58438c0
  437719:	loope  0x437764
  43771b:	adc    al,0xb7
  43771d:	clc    
  43771e:	add    DWORD PTR [ecx],ecx
	...
  437734:	jnp    0x43775a
  437736:	stc    
  437737:	mov    ecx,0x65baff5
  43773c:	mov    ch,ch
  43773e:	enter  0x778c,0x37
  437742:	jp     0x43771a
  437744:	stos   BYTE PTR es:[edi],al
  437745:	mov    dh,0xbd
  437747:	or     ch,BYTE PTR [ecx]
  437749:	cli    
  43774a:	add    al,0xf0
  43774c:	jl     0x437707
  43774e:	(bad)  
  43774f:	cli    
  437750:	inc    edx
  437751:	or     edx,DWORD PTR ds:0x7d224fce
  437757:	ror    DWORD PTR [esi+eiz*4],0xce
  43775b:	xchg   BYTE PTR [edi-0x53],dh
  43775e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43775f:	push   ss
  437760:	jne    0x4377da
  437762:	(bad)  
  437764:	in     al,0x78
  437766:	sub    BYTE PTR [edx-0x12],bl
  437769:	jp     0x437764
  43776b:	call   FWORD PTR [ecx+ebp*1]
  43776e:	daa    
  43776f:	aaa    
  437770:	je     0x4377bb
  437772:	add    eax,0x3479752f
  437777:	(bad)  
  437778:	shl    DWORD PTR ds:0x29a9027c,1
  43777e:	dec    edx
  43777f:	push   es
  437780:	xchg   ecx,eax
  437781:	and    al,0x2
  437783:	(bad)  
  437784:	loopne 0x4377c4
  437786:	adc    eax,0x8e79eec0
  43778b:	or     ah,bl
  43778d:	mov    bl,0x50
  43778f:	add    DWORD PTR [esi+0x31],ecx
  437792:	jl     0x437795
  437794:	jns    0x43777e
  437796:	push   ebx
  437797:	or     DWORD PTR [eax],eax
	...
  4377a9:	add    BYTE PTR [eax],al
  4377ab:	add    cl,dh
  4377ad:	dec    edi
  4377ae:	push   ecx
  4377af:	add    eax,0x6dd4e173
  4377b4:	and    al,0xe1
  4377b6:	aam    0x73
  4377b8:	jl     0x437749
  4377ba:	addr16 push es
  4377bc:	outs   dx,DWORD PTR ds:[esi]
  4377bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4377be:	xor    esi,edi
  4377c0:	inc    esp
  4377c1:	push   eax
  4377c2:	pop    edi
  4377c3:	mov    dh,0xdb
  4377c5:	pop    esi
  4377c6:	bsf    eax,DWORD PTR [ecx-0x7d23e528]
  4377cd:	cs mov ebx,0x3c4f36c7
  4377d3:	pop    es
  4377d4:	ja     0x4377f0
  4377d6:	mov    ds:0xe20fb4db,al
  4377db:	and    eax,0xb219449
  4377e0:	fisub  DWORD PTR [eax-0x5d2df467]
  4377e6:	mov    ebx,0xaf79ec7a
  4377eb:	sub    DWORD PTR [ebp-0x8dd0a6e],0x18
  4377f2:	mov    ds:0xe219bbdb,al
  4377f7:	pop    es
  4377f8:	in     eax,0xa1
  4377fa:	lock pop es
  4377fc:	int3   
  4377fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4377fe:	in     al,0x3d
  437800:	ret    0xd620
  437803:	aam    0x3b
  437805:	push   esi
  437806:	inc    esp
  437808:	sti    
  437809:	daa    
  43780a:	in     al,dx
  43780b:	push   ecx
  43780c:	mov    bh,0x18
  43780e:	and    bl,BYTE PTR [ebx]
	...
  437824:	jbe    0x43785f
  437826:	out    0x12,al
  437828:	jne    0x4377f8
  43782a:	mov    es,edx
  43782c:	add    DWORD PTR [ecx],ebx
  43782e:	adc    al,0x83
  437830:	pop    esi
  437831:	fs mov dh,0x2d
  437834:	xor    ah,BYTE PTR [eax]
  437836:	pop    edi
  437837:	inc    ecx
  437838:	lods   eax,DWORD PTR ds:[esi]
  437839:	les    esp,FWORD PTR [eax+0x41]
  43783c:	cmp    eax,0xb17adc39
  437841:	daa    
  437842:	outs   dx,DWORD PTR ds:[esi]
  437843:	mov    esi,0xf600dc12
  437848:	sti    
  437849:	sub    DWORD PTR [esi+0x74463411],eax
  43784f:	sti    
  437850:	sti    
  437851:	sar    eax,cl
  437853:	das    
  437854:	ss daa 
  437856:	adc    DWORD PTR [esi-0x1e],ebx
  437859:	jge    0x43781b
  43785b:	cs rol esp,cl
  43785e:	(bad)  
  43785f:	stos   DWORD PTR es:[edi],eax
  437860:	out    dx,al
  437861:	sub    al,0x27
  437863:	mov    edx,0xe90cac36
  437868:	popa   
  437869:	mov    ds:0x2d1e71fc,eax
  43786e:	cli    
  43786f:	jmp    0x99790bd9
  437874:	fs dec esp
  437876:	xchg   BYTE PTR [ecx+esi*8],ah
  437879:	lods   eax,DWORD PTR ds:[esi]
  43787a:	arpl   bp,bx
  43787c:	mov    dh,0x1a
  43787e:	xor    eax,0xfcd2c1f2
  437883:	sti    
  437884:	mov    bh,0x16
  437886:	inc    esp
  437887:	jne    0x437889
	...
  437899:	add    BYTE PTR [eax],al
  43789b:	add    BYTE PTR [edi],dh
  43789d:	stos   DWORD PTR es:[edi],eax
  43789e:	cld    
  43789f:	jmp    0xb4c9018c
  4378a4:	mov    dl,BYTE PTR ds:0x4eaf5d44
  4378aa:	mov    WORD PTR ds:0x4ff937a8,ss
  4378b0:	jae    0x4378db
  4378b2:	test   BYTE PTR [ecx],ch
  4378b4:	add    eax,0x62a4f995
  4378b9:	adc    eax,0xd2afe544
  4378be:	cld    
  4378bf:	mov    ebx,0xf5742951
  4378c4:	mov    al,ds:0x73336737
  4378c9:	sub    edx,edi
  4378cb:	pushf  
  4378cc:	outs   dx,BYTE PTR ds:[esi]
  4378cd:	adc    eax,0x347762f9
  4378d2:	fld    QWORD PTR [eax]
  4378d4:	adc    BYTE PTR [edx-0x9],dl
  4378d7:	push   0x12
  4378d9:	stos   DWORD PTR es:[edi],eax
  4378da:	inc    esp
  4378db:	cld    
  4378dc:	cdq    
  4378dd:	mov    edi,0xc4b458cc
  4378e2:	or     edi,edi
  4378e4:	sbb    edi,DWORD PTR [esi-0x36]
  4378e7:	mov    eax,0x39a994
  4378ec:	xchg   edi,eax
  4378ed:	jmp    0x437921
  4378ef:	cli    
  4378f0:	fld    TBYTE PTR [ebp+eax*8+0x39]
  4378f4:	rcl    DWORD PTR [edi+0x51],1
  4378f7:	setno  BYTE PTR [esp+edi*8+0x50]
  4378fc:	push   edi
  4378fd:	in     eax,dx
  4378fe:	dec    ecx
  4378ff:	push   edx
	...
  437914:	mov    esi,0xdc00c2cb
  437919:	(bad)
  43791d:	push   ebp
  43791e:	test   DWORD PTR [ebx-0x17b0c4f0],0xfff681ee
  437928:	cmp    ebx,ebx
  43792a:	cld    
  43792b:	call   0x39fec6
  437930:	pop    ss
  437931:	imul   ecx,DWORD PTR [ebx+ebp*1],0xffffffd1
  437935:	sub    edi,ebx
  437937:	ret    0x6a9f
  43793a:	clc    
  43793b:	jmp    0x3acd90
  437940:	lahf   
  437941:	out    0x63,al
  437943:	or     BYTE PTR [edi],dl
  437945:	dec    edi
  437946:	push   esp
  437947:	test   al,0x5d
  437949:	fild   DWORD PTR [edi]
  43794b:	rol    DWORD PTR [ebx+ebx*4],1
  43794e:	and    BYTE PTR [ebx+0x2e342e4],al
  437954:	mov    ebp,0xaa75444b
  437959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43795a:	std    
  43795b:	mov    WORD PTR [esi+ebp*1+0x3b],es
  43795f:	add    BYTE PTR [ebp-0x4a078109],dh
  437965:	aaa    
  437966:	(bad)  
  437967:	jmp    DWORD PTR [edi-0x9ff6b91]
  43796d:	mov    ch,0x2
  43796f:	add    BYTE PTR [eax-0x4abfa9c3],ch
  437975:	cmp    dh,cl
  437977:	add    BYTE PTR gs:[eax],al
	...
  43798a:	add    BYTE PTR [eax],al
  43798c:	mov    ah,0xbe
  43798e:	add    al,0x66
  437990:	mov    ch,0x62
  437992:	ret    
  437993:	adc    al,0x6d
  437995:	sub    BYTE PTR [esi],bh
  437997:	add    BYTE PTR [eax],dh
  437999:	stc    
  43799a:	dec    edx
  43799b:	add    eax,0xc0103a94
  4379a0:	imul   BYTE PTR [eax+0x7b2cbefe]
  4379a6:	cld    
  4379a7:	inc    edi
  4379a8:	ins    DWORD PTR es:[edi],dx
  4379a9:	fs cmc 
  4379ab:	jle    0x437948
  4379ad:	cmp    BYTE PTR [ecx-0x26c74e9f],al
  4379b3:	inc    eax
  4379b4:	ss xor eax,ebp
  4379b7:	jg     0x437a31
  4379b9:	shl    BYTE PTR [ebx+0x4b38b53e],1
  4379bf:	xor    eax,0xdafd6a02
  4379c4:	idiv   BYTE PTR [eax]
  4379c6:	sub    eax,0xefd4c0fb
  4379cb:	aas    
  4379cc:	mov    ch,0xb8
  4379ce:	add    ch,BYTE PTR [eax-0x20a95]
  4379d4:	or     BYTE PTR [edx],ch
  4379d6:	(bad)  
  4379d7:	jne    0x437a53
  4379d9:	fld    st(4)
  4379db:	xor    DWORD PTR [ebp-0x14],0xfffffff3
  4379df:	jle    0x437971
  4379e1:	sbb    al,0xa4
  4379e3:	ds mov ch,0x38
  4379e6:	mov    esp,0x409a0d04
  4379eb:	add    BYTE PTR [edi+ecx*4+0xc4ba],dh
	...
  437a02:	add    BYTE PTR [eax],al
  437a04:	mov    eax,ds:0xb543f5fb
  437a09:	retf   0xbd5e
  437a0c:	sti    
  437a0d:	rcr    BYTE PTR [esi-0x2d],0x3b
  437a11:	shr    edi,1
  437a13:	cmp    edi,DWORD PTR [ebp-0x5d]
  437a16:	fdivr  QWORD PTR [eax+0x74]
  437a19:	xchg   ebx,eax
  437a1a:	ins    BYTE PTR es:[edi],dx
  437a1b:	ret    
  437a1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437a1d:	xchg   edx,eax
  437a1e:	xchg   edi,eax
  437a1f:	les    ebp,FWORD PTR [ecx-0x4abc0889]
  437a25:	push   ss
  437a26:	adc    cl,BYTE PTR [ecx+0x2de0a304]
  437a2c:	mov    ch,0xc1
  437a2e:	retf   0x8119
  437a31:	jg     0x437a5a
  437a33:	add    al,0x8f
  437a35:	dec    esi
  437a36:	adc    eax,0x16bfce8f
  437a3b:	pop    edx
  437a3c:	xor    bl,BYTE PTR [edi]
  437a3e:	pop    edi
  437a3f:	dec    edx
  437a40:	mov    ebp,0x415b2fd7
  437a45:	int3   
  437a46:	(bad)  
  437a47:	dec    edi
  437a48:	mov    esi,0xfa889329
  437a4d:	mov    ds:0x3572f5e3,eax
  437a52:	add    dl,BYTE PTR [ecx-0x21496bd4]
  437a58:	fisttp QWORD PTR [eax-0x2dcc0c04]
  437a5e:	fucomip st,st(6)
  437a60:	push   ebx
  437a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437a62:	repz dec ebx
  437a64:	add    BYTE PTR [eax+0x4922],al
	...
  437a7a:	add    BYTE PTR [eax],al
  437a7c:	adc    DWORD PTR [edi+eiz*2-0x1ccb4afc],0xe72bf9ca
  437a87:	sub    DWORD PTR [edx+0x29],0xffffff93
  437a8b:	push   esi
  437a8c:	repnz sub BYTE PTR [ecx],al
  437a8f:	mov    esp,0x2e33261a
  437a94:	lods   al,BYTE PTR ds:[esi]
  437a95:	mov    edi,0x12b6a910
  437a9a:	rcl    DWORD PTR [edx+edi*4+0x72021a16],0xda
  437aa2:	stc    
  437aa3:	xchg   esp,eax
  437aa4:	ret    0x7424
  437aa7:	icebp  
  437aa8:	neg    DWORD PTR [ebp-0x7]
  437aab:	aam    0x8a
  437aad:	jg     0x437aef
  437aaf:	jmp    0xd31c9722
  437ab4:	imul   BYTE PTR [eax-0x1b]
  437ab7:	pop    ss
  437ab8:	cmp    cl,BYTE PTR [edi+0x580bc22d]
  437abe:	cmp    BYTE PTR [eiz*4-0x729de663],dh
  437ac5:	xchg   edi,eax
  437ac6:	or     DWORD PTR [edi-0x3e],edi
  437ac9:	jle    0x437af8
  437acb:	cdq    
  437acc:	cmp    DWORD PTR [ebx-0x6],ecx
  437acf:	jmp    0xc2030a8a
  437ad4:	mov    esi,0xbe7c0478
  437ad9:	cs ds jmp 0xe58edb59
	...
  437af4:	sub    BYTE PTR [esi],0x88
  437af7:	out    0x26,eax
  437af9:	nop
  437afa:	pop    ecx
  437afb:	daa    
  437afc:	or     dl,BYTE PTR [edi-0x41]
  437aff:	icebp  
  437b00:	mov    dh,0xc2
  437b02:	test   DWORD PTR [ebp-0x1eaeeeff],eax
  437b08:	and    eax,0xecb0f9d2
  437b0d:	mov    ds:0x28506a44,eax
  437b12:	outs   dx,BYTE PTR ds:[esi]
  437b13:	in     eax,0xe8
  437b15:	mov    ds:0x2bfd2610,al
  437b1a:	adc    eax,0x8c5c00
  437b1f:	jmp    0x437b7c
  437b21:	push   ebp
  437b22:	inc    ebp
  437b23:	cld    
  437b24:	jl     0x437ab2
  437b26:	add    BYTE PTR [eax],al
  437b28:	xlat   BYTE PTR ds:[ebx]
  437b29:	int3   
  437b2a:	add    al,0x8b
  437b2c:	sub    eax,ebp
  437b2e:	test   al,al
  437b30:	sub    BYTE PTR [esi+0x62],ch
  437b33:	add    cl,dl
  437b35:	mov    edi,0x7a6b51fc
  437b3a:	cli    
  437b3b:	dec    edi
  437b3c:	mov    bl,0x87
  437b3e:	inc    esp
  437b3f:	adc    BYTE PTR [esp+ecx*4+0x79],cl
  437b43:	clc    
  437b44:	or     eax,0x89390367
  437b49:	call   0x53f28bbb
  437b4e:	jecxz  0x437b5c
  437b50:	sahf   
  437b51:	push   ebx
  437b52:	jecxz  0x437b5c
  437b54:	xchg   edi,eax
  437b55:	xchg   ebx,eax
  437b56:	in     eax,dx
  437b57:	rol    BYTE PTR [eax],1
	...
  437b69:	add    BYTE PTR [eax],al
  437b6b:	add    BYTE PTR [ebp-0x6a],dl
  437b6e:	mov    al,0x1
  437b70:	xchg   edx,eax
  437b71:	push   esp
  437b72:	mov    ebx,0x7adf6755
  437b77:	in     al,dx
  437b78:	rol    dl,1
  437b7a:	dec    esi
  437b7b:	lea    ecx,[ecx+0x1274e1e7]
  437b81:	dec    esi
  437b82:	idiv   edi
  437b84:	test   eax,0x23c6817f
  437b89:	pusha  
  437b8a:	or     al,ch
  437b8c:	cmp    BYTE PTR [edx-0x9],dl
  437b8f:	call   FWORD PTR [eax]
  437b91:	dec    esp
  437b92:	outs   dx,BYTE PTR ds:[esi]
  437b93:	(bad)  
  437b95:	pop    edx
  437b96:	loop   0x437c13
  437b98:	and    edx,DWORD PTR [ecx-0x9]
  437b9b:	test   BYTE PTR [eax+ebp*2+0x4],bl
  437b9f:	mov    bl,0x9d
  437ba1:	hlt    
  437ba2:	sti    
  437ba3:	xor    edi,esi
  437ba5:	push   ss
  437ba6:	inc    ebp
  437ba7:	hlt    
  437ba8:	mov    ch,0xd0
  437baa:	sahf   
  437bab:	stc    
  437bac:	jb     0x437b84
  437bae:	pop    esi
  437baf:	xchg   BYTE PTR [esi-0xe],dh
  437bb2:	(bad)  
  437bb3:	mov    ebp,0x418b38ad
  437bb8:	test   eax,0x514c108
  437bbd:	dec    ebx
  437bbe:	add    BYTE PTR ds:[esi+0x2c018578],al
  437bc5:	out    dx,eax
  437bc6:	add    DWORD PTR [ecx-0x3e72cf0d],ecx
  437bcc:	neg    dh
  437bce:	pop    eax
  437bcf:	xchg   DWORD PTR [eax],eax
	...
  437be1:	add    BYTE PTR [eax],al
  437be3:	add    BYTE PTR ds:0xe338c0ea,ah
  437be9:	sahf   
  437bea:	push   cs
  437beb:	xchg   DWORD PTR [ebx+0x34],esi
  437bee:	shl    DWORD PTR [ebx],0x4d
  437bf1:	ss adc eax,eax
  437bf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437bf5:	js     0x437bfb
  437bf7:	inc    ebx
  437bf8:	mov    esi,0xfaeb3286
  437bfd:	(bad)  
  437bfe:	or     al,ch
  437c00:	not    BYTE PTR [ecx-0x8c90542]
  437c06:	or     DWORD PTR [edx-0x1e],edx
  437c09:	cmp    ebx,DWORD PTR [esi+0xd]
  437c0c:	jne    0x437c46
  437c0e:	popa   
  437c0f:	pop    edx
  437c10:	test   BYTE PTR [edi+0x93e5253],0x8b
  437c17:	inc    ecx
  437c18:	mov    cl,0x68
  437c1a:	test   DWORD PTR [ebx-0x6f],eax
  437c1d:	sub    al,0xc1
  437c1f:	adc    al,0x59
  437c21:	sub    bh,BYTE PTR [esi]
  437c23:	add    dh,ah
  437c25:	icebp  
  437c26:	neg    BYTE PTR [ecx-0x53]
  437c29:	sbb    edx,DWORD PTR [edx+0x55]
  437c2c:	out    0xb,al
  437c2e:	neg    DWORD PTR [ecx]
  437c30:	or     esi,esp
  437c32:	pop    eax
  437c33:	xchg   ebx,esi
  437c35:	(bad)  
  437c36:	jmp    0x437bc4
  437c38:	adc    DWORD PTR [edx],0xa27a7c1c
  437c3e:	(bad)  
  437c3f:	sub    eax,0x7c1426b5
  437c44:	outs   dx,DWORD PTR ds:[esi]
  437c45:	jl     0x437c5e
  437c47:	adc    eax,0x0
	...
  437c5c:	cmc    
  437c5d:	(bad)  
  437c5e:	fs ret 
  437c60:	xor    ecx,ebp
  437c62:	jmp    0x437c9a
  437c64:	ret    
  437c65:	es hlt 
  437c67:	jnp    0x437cb8
  437c69:	jl     0x437c92
  437c6b:	adc    eax,0x496e8ff5
  437c70:	mov    cl,0x12
  437c72:	int3   
  437c73:	jnp    0x437ca7
  437c75:	cmp    ebx,esp
  437c77:	mov    WORD PTR [esi+0x3d0f70e7],?
  437c7d:	shl    BYTE PTR [esp+edi*8+0x602ca1cc],cl
  437c84:	cmp    al,0x85
  437c86:	pop    esi
  437c87:	int3   
  437c88:	cmc    
  437c89:	das    
  437c8a:	out    0x82,al
  437c8c:	hlt    
  437c8d:	mov    cl,bh
  437c8f:	xchg   eax,edx
  437c91:	and    eax,0x9aee61d3
  437c96:	add    ecx,DWORD PTR [esi+ebp*8]
  437c99:	jnp    0x437c2e
  437c9b:	adc    dh,BYTE PTR [ebp-0x71]
  437c9e:	sbb    DWORD PTR [ebx+0x7c],ebx
  437ca1:	push   edx
  437ca2:	sbb    eax,0x18bfde8b
  437ca7:	push   ebx
  437ca8:	cmp    dh,cl
  437caa:	repz push ebp
  437cac:	sbb    BYTE PTR gs:0x4b7bbfbc,ah
  437cb3:	adc    dh,ch
  437cb5:	(bad)  
  437cb6:	(bad)  
  437cb7:	(bad)  
  437cb9:	(bad)  
  437cba:	out    dx,eax
  437cbb:	push   cs
  437cbc:	cmp    BYTE PTR [esi],dl
  437cbe:	call   0x437cc6
	...
  437cd3:	add    BYTE PTR [ebp-0x5aebff9a],dh
  437cd9:	cwde   
  437cda:	test   BYTE PTR [ecx+esi*4-0x71],ah
  437cde:	add    BYTE PTR [edx-0x4e],dh
  437ce1:	adc    dh,BYTE PTR [edx-0x1b]
  437ce4:	and    eax,0xb6ed8b99
  437ce9:	pop    DWORD PTR [eax]
  437ceb:	pusha  
  437cec:	lods   al,BYTE PTR ds:[esi]
  437ced:	and    ebp,ecx
  437cef:	add    eax,0x65fa274f
  437cf4:	jno    0x437c97
  437cf6:	imul   ebx,DWORD PTR [edx-0x4b067464],0xffffffa6
  437cfd:	sub    BYTE PTR [ebp+esi*8+0x3],dh
  437d01:	pushf  
  437d02:	or     BYTE PTR [edx-0x5db8405],bh
  437d08:	jbe    0x437c99
  437d0a:	test   DWORD PTR [ecx],ebx
  437d0c:	cs ss jne 0x437cc9
  437d10:	and    esp,eax
  437d12:	adc    al,0x75
  437d14:	sbb    al,0xab
  437d16:	(bad)  
  437d17:	cdq    
  437d18:	sub    BYTE PTR [si-0x2b],dh
  437d1c:	fsubr  QWORD PTR [eax]
  437d1e:	push   ebx
  437d1f:	push   ebx
  437d20:	inc    edx
  437d21:	sub    dl,BYTE PTR [eiz*4+0x6c00cfa4]
  437d28:	neg    BYTE PTR [ebx+0x7fcdce24]
  437d2e:	or     eax,0x52bfb929
  437d33:	mov    esi,0x291057bd
	...
  437d4c:	mov    ecx,0xf6d4f9c1
  437d51:	xchg   edx,eax
  437d52:	inc    eax
  437d53:	jmp    0x14c91787
  437d58:	cmc    
  437d59:	dec    edi
  437d5a:	loopne 0x437d47
  437d5c:	pop    esi
  437d5d:	inc    edx
  437d5e:	sub    BYTE PTR [edi+0x142d6b],cl
  437d64:	daa    
  437d65:	mov    es,WORD PTR [ecx+0x91a184d]
  437d6b:	mov    DWORD PTR [eax+0xb],edx
  437d6e:	test   DWORD PTR [edi],0xbc14e4a2
  437d74:	jle    0x437d46
  437d76:	add    BYTE PTR [ebx-0x78b1a73],dh
  437d7c:	or     ecx,DWORD PTR [eax-0x6fe3ed54]
  437d82:	push   esi
  437d83:	mov    cl,BYTE PTR [edi+0x7cc2c7c9]
  437d89:	nop
  437d8a:	dec    edi
  437d8b:	push   ebx
  437d8c:	xlat   BYTE PTR ds:[ebx]
  437d8d:	outs   dx,DWORD PTR ds:[esi]
  437d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437d8f:	adc    bl,BYTE PTR [eax+edx*4]
  437d92:	push   ebx
  437d93:	push   edi
  437d94:	leave  
  437d95:	bound  ecx,QWORD PTR [edi+edx*2]
  437d98:	fwait
  437d99:	inc    ecx
  437d9a:	test   DWORD PTR [esi+0x14],0xe815f5bd
  437da1:	jle    0x437de3
  437da3:	add    BYTE PTR [edi-0x21],bl
  437da6:	mov    edi,0xff94f044
  437dab:	cmp    dl,bh
  437dad:	pop    ecx
  437dae:	xor    BYTE PTR [ebx+0x0],cl
	...
  437dc4:	adc    bh,BYTE PTR [ecx]
  437dc6:	lds    eax,FWORD PTR [ebx+0x36acb14]
  437dcc:	retfw  
  437dce:	pop    eax
  437dcf:	mov    ebx,DWORD PTR [edx+0x76ff6297]
  437dd5:	nop
  437dd6:	mov    ecx,DWORD PTR [eax*2+0x1ff50c0]
  437ddd:	or     BYTE PTR [edi],0x40
  437de0:	fmul   QWORD PTR [edx+edi*4]
  437de3:	jne    0x437dba
  437de5:	push   cs
  437de6:	lds    eax,FWORD PTR [eax-0x29]
  437de9:	xor    DWORD PTR [edi+edx*8+0x27],ebp
  437ded:	mov    WORD PTR [esi+0xd54b544],?
  437df3:	add    BYTE PTR [edx],al
  437df5:	adc    dl,al
  437df7:	cli    
  437df8:	repz and BYTE PTR [ebp-0x5],dl
  437dfc:	rcl    ah,0xe
  437dff:	inc    eax
  437e00:	mov    ch,0xae
  437e02:	dec    eax
  437e03:	and    al,0xba
  437e05:	xchg   ecx,eax
  437e06:	pop    ecx
  437e07:	push   edi
  437e08:	fdiv   QWORD PTR [ebp+0x51]
  437e0b:	xchg   DWORD PTR [ecx-0x448c4f48],ecx
  437e11:	cmp    dh,bh
  437e13:	dec    esi
  437e14:	add    ebx,edx
  437e16:	mov    dh,BYTE PTR [ebp+edx*1+0x4dfabbcc]
  437e1d:	outs   dx,BYTE PTR cs:[esi]
  437e1f:	cli    
  437e20:	push   edx
  437e21:	pop    edx
  437e22:	xor    DWORD PTR [esi+edi*1],ecx
  437e25:	hlt    
  437e26:	xchg   edx,edi
	...
  437e3c:	enter  0x7f20,0xf2
  437e40:	xchg   BYTE PTR [edi],cl
  437e42:	push   cs
  437e43:	sti    
  437e44:	cmp    al,0xfc
  437e46:	mov    cl,0xe7
  437e48:	test   BYTE PTR [esi-0x44],cl
  437e4b:	cli    
  437e4c:	out    0x6d,al
  437e4e:	test   DWORD PTR [ebp+ebx*1+0x4e],eax
  437e52:	shl    DWORD PTR [ebx-0x5d],0x19
  437e56:	xor    ecx,DWORD PTR [eiz*2+0x25e7c2ad]
  437e5d:	pop    es
  437e5e:	mov    ebp,0x8b1c8ffa
  437e63:	test   BYTE PTR [edi-0x7a0542c7],al
  437e69:	mov    DWORD PTR gs:[ebp+ebx*1-0x4a],esi
  437e6e:	(bad)  
  437e71:	cmp    cl,BYTE PTR [edx+edi*8]
  437e74:	shl    BYTE PTR [ebx-0x52578643],cl
  437e7a:	ret    
  437e7b:	dec    edi
  437e7c:	dec    ebp
  437e7d:	(bad)  
  437e7e:	jg     0x437e5b
  437e80:	jnp    0x437e11
  437e82:	ins    BYTE PTR es:[edi],dx
  437e83:	xchg   BYTE PTR [edx+0x26],cl
  437e86:	xchg   ebx,eax
  437e87:	mov    esp,0x3a237fa
  437e8c:	lahf   
  437e8d:	and    ch,BYTE PTR [ebp-0x3d]
  437e90:	scas   eax,DWORD PTR es:[edi]
  437e91:	cld    
  437e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437e93:	stc    
  437e94:	push   ebx
  437e95:	pushf  
  437e96:	loopne 0x437e88
  437e98:	dec    edx
  437e99:	test   eax,0x262a8660
  437e9e:	arpl   WORD PTR [eax+eax*1+0x0],di
	...
  437eb1:	add    BYTE PTR [eax],al
  437eb3:	add    BYTE PTR [ecx],ch
  437eb5:	or     al,0x80
  437eb7:	mov    eax,0xbcb8226f
  437ebc:	ror    DWORD PTR [ebx-0x9],0x43
  437ec0:	mov    ch,0xb5
  437ec2:	jmp    0x43ab:0xa02fe18e
  437ec9:	xchg   ecx,eax
  437eca:	xor    bh,BYTE PTR [edx+esi*1-0x63b213c]
  437ed1:	and    ebp,ecx
  437ed3:	add    esi,DWORD PTR [ebp+0x6c180e8f]
  437ed9:	xor    ecx,ebp
  437edb:	add    esi,DWORD PTR [ebp+0x21636514]
  437ee1:	and    al,BYTE PTR [ebx]
  437ee3:	mov    eax,edx
  437ee5:	iret   
  437ee6:	mov    al,0x36
  437ee8:	or     ebx,DWORD PTR [ebp+0x27]
  437eeb:	stos   BYTE PTR es:[edi],al
  437eec:	jmp    0x3a47667f
  437ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437ef2:	fist   DWORD PTR [ebx-0x2]
  437ef5:	fisttp DWORD PTR [ecx+0x2e382f79]
  437efc:	rol    esi,0x5c
  437eff:	cmp    DWORD PTR [ebp+0x37],eax
  437f02:	call   0x67655e19
  437f07:	sar    BYTE PTR [esi+0xeb1010e],0x95
  437f0e:	test   BYTE PTR [edi-0x47],cl
  437f11:	pop    DWORD PTR [eax]
  437f13:	jb     0x437f0b
  437f15:	ror    DWORD PTR [ebx+0x64],1
	...
  437f2b:	add    BYTE PTR [ecx+0x1a],dl
  437f2e:	cli    
  437f2f:	xchg   esi,eax
  437f30:	add    DWORD PTR [ebx],edx
  437f32:	test   BYTE PTR [ecx+0x60],bh
  437f35:	es cli 
  437f37:	sbb    DWORD PTR [ecx+0x61],ecx
  437f3a:	add    BYTE PTR [edi+0x4e],bh
  437f3d:	or     al,0xc1
  437f3f:	out    0xa,al
  437f41:	mov    eax,ds:0x70b6e900
  437f46:	aad    0xba
  437f48:	into   
  437f49:	(bad)  
  437f4b:	jmp    0xba432906
  437f50:	add    edi,DWORD PTR [eax+0x4fb6e900]
  437f56:	mov    WORD PTR [ecx+eax*2+0x28],gs
  437f5a:	cli    
  437f5b:	ds jmp 0xa13c9385
  437f61:	iret   
  437f62:	add    BYTE PTR [edx+0x9],ah
  437f65:	mov    ds:0x868426fa,al
  437f6a:	stc    
  437f6b:	hlt    
  437f6c:	(bad)  
  437f6d:	nop
  437f6e:	inc    eax
  437f6f:	jmp    0x949498a7
  437f74:	xchg   BYTE PTR [esp+eax*2],ah
  437f77:	add    eax,0x11fca430
  437f7c:	mov    edx,0x8a7b008f
  437f81:	sub    DWORD PTR [edi],edi
  437f83:	bound  edi,QWORD PTR [ebx+edx*4+0x2375744d]
  437f8a:	push   ecx
  437f8b:	ss cs pushf 
  437f8e:	clc    
  437f8f:	aas    
	...
  437fa4:	cs jl  0x437fe3
  437fa7:	sti    
  437fa8:	jbe    0x437f39
  437faa:	add    DWORD PTR [eax],0xc
  437fad:	jno    0x437fb6
  437faf:	(bad)  
  437fb0:	cdq    
  437fb1:	nop
  437fb2:	(bad)  
  437fb3:	cmp    BYTE PTR [ecx+0x54036de7],al
  437fb9:	mov    DWORD PTR [ecx],0x2c801356
  437fbf:	adc    bl,ah
  437fc1:	mov    ecx,DWORD PTR [esi-0x1]
  437fc4:	test   eax,0x8c400c4c
  437fc9:	and    al,0x5d
  437fcb:	or     ebx,DWORD PTR [ecx-0x137a7478]
  437fd1:	jecxz  0x437fc9
  437fd3:	jmp    FWORD PTR [ebx+esi*8-0x19eddb6c]
  437fda:	div    BYTE PTR [ebp+0x14]
  437fdd:	cmc    
  437fde:	test   DWORD PTR [eax],ebp
  437fe0:	adc    ah,dh
  437fe2:	mov    eax,0x8c5dee
  437fe7:	(bad)  
  437fe8:	fldcw  WORD PTR [esp+edi*8-0x5b10c01]
  437fef:	call   FWORD PTR [ebx+edx*8]
  437ff2:	jae    0x437fed
  437ff4:	(bad)  
  437ff5:	iret   
  437ff6:	add    DWORD PTR [edi+0x32],ebx
  437ff9:	rol    edi,0xc2
  437ffc:	inc    esp
  437ffd:	mov    WORD PTR [ebx-0x75],ss
  438000:	ror    BYTE PTR [ebx],0xe6
  438003:	rcl    BYTE PTR [esp+ecx*4],1
  438006:	add    BYTE PTR [ebx+0x0],dl
	...
  438019:	add    BYTE PTR [eax],al
  43801b:	add    BYTE PTR [edx-0x43],ch
  43801e:	mov    esi,DWORD PTR [ebp-0x91888]
  438024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438025:	bound  esp,QWORD PTR [esi+0x147303ff]
  43802b:	pop    ebx
  43802c:	pop    ds
  43802d:	pop    ss
  43802e:	test   DWORD PTR [esi+0x13],eax
  438031:	out    0xf6,al
  438033:	push   eax
  438034:	xchg   BYTE PTR [ebx+0xab5758b],cl
  43803a:	test   bh,al
  43803c:	loop   0x43808b
  43803e:	xchg   edx,eax
  43803f:	or     ebx,ebx
  438041:	dec    eax
  438042:	jp     0x438003
  438044:	push   ebx
  438045:	inc    ebx
  438046:	(bad)  
  438047:	shl    DWORD PTR [ebp-0x32],0x9c
  43804b:	xlat   BYTE PTR ds:[ebx]
  43804c:	jbe    0x438084
  43804e:	add    DWORD PTR [ecx+ebp*1+0x5fab7ed],0x1
  438056:	inc    edx
  438057:	sti    
  438058:	test   al,0x6
  43805a:	jp     0x43801b
  43805c:	mov    dl,0xa3
  43805e:	les    eax,FWORD PTR [ebx+0x2f071c75]
  438064:	jne    0x437ffd
  438066:	test   DWORD PTR [ecx+edi*1+0x30fab7a2],eax
  43806d:	mov    ah,0x88
  43806f:	idiv   BYTE PTR [edx-0x4a]
  438072:	push   esp
  438073:	sti    
  438074:	enter  0x1374,0x40
  438078:	mov    ch,0xb1
  43807a:	jno    0x4380f5
  43807c:	(bad)  
  43807d:	into   
  43807e:	mov    bh,0x65
	...
  438094:	lods   eax,DWORD PTR ds:[esi]
  438095:	mov    ds:0xc0edd429,eax
  43809a:	adc    BYTE PTR ds:0xf27d664a,cl
  4380a0:	xchg   BYTE PTR [edi-0x5e1d04f3],bh
  4380a6:	mov    esi,0x79fc404f
  4380ab:	out    0x5c,eax
  4380ad:	sbb    al,0xb8
  4380af:	cli    
  4380b0:	jl     0x438091
  4380b2:	test   bh,dh
  4380b4:	sbb    ah,BYTE PTR [esi]
  4380b6:	jp     0x43812a
  4380b8:	mov    ah,0x28
  4380ba:	inc    BYTE PTR [esi-0x7b7d070e]
  4380c0:	xor    DWORD PTR [edx],esp
  4380c2:	mov    ecx,0x748f65fa
  4380c7:	jle    0x4380ff
  4380c9:	sbb    ebx,ebx
  4380cb:	mov    eax,0xb9be277a
  4380d0:	loope  0x4380f0
  4380d2:	gs ret 
  4380d4:	scas   eax,DWORD PTR es:[edi]
  4380d5:	adc    esp,DWORD PTR [ecx]
  4380d7:	add    esi,DWORD PTR [ebp-0x79819371]
  4380dd:	es mov bl,0xb8
  4380e0:	jb     0x4380ee
  4380e2:	gs jg  0x4380a2
  4380e5:	push   ds
  4380e6:	mov    ds:0x2784ae53,eax
  4380eb:	adc    esi,ebp
  4380ed:	(bad)  
  4380ee:	pushw  ds
  4380f0:	test   eax,0xa53e608f
  4380f5:	adc    al,BYTE PTR [eax+0xb8]
	...
  43810b:	add    BYTE PTR [edi-0x4afd25ed],bh
  438111:	(bad)  
  438112:	inc    si
  438114:	jge    0x438134
  438116:	pop    ebp
  438117:	jle    0x4380f3
  438119:	arpl   WORD PTR es:[eax-0x789af2fe],di
  438120:	arpl   WORD PTR [esi],bx
  438122:	push   ebx
  438123:	push   ebx
  438124:	xor    BYTE PTR [esp+eiz*2],dl
  438127:	mov    edx,0xab981e5f
  43812c:	xor    bl,BYTE PTR ds:0x4f31b83d
  438132:	jecxz  0x4381b3
  438134:	add    DWORD PTR [edi+0xfcd03e7],ecx
  43813a:	call   0xe6ed3642
  43813f:	sub    eax,0x3e7b62a
  438144:	mov    ch,0xf
  438146:	pop    ebp
  438147:	jle    0x43817f
  438149:	sbb    BYTE PTR [ebx],al
  43814b:	mov    eax,0xbba50c82
  438150:	adc    bl,BYTE PTR [edi+0x193cd600]
  438156:	test   DWORD PTR [ecx],ebp
  438158:	lods   eax,DWORD PTR ds:[esi]
  438159:	adc    ebx,DWORD PTR [ecx-0x74704917]
  43815f:	and    al,0x29
  438161:	into   
  438162:	mov    ebx,DWORD PTR [ebp+edx*1+0x6c]
  438166:	aad    0xc1
  438168:	pop    edi
  438169:	jns    0x438165
  43816b:	(bad)  
  43816c:	xor    eax,0x4874de
	...
  438181:	add    BYTE PTR [eax],al
  438183:	add    BYTE PTR [esi],bh
  438185:	mov    ds:0x950362e4,eax
  43818a:	inc    ebx
  43818b:	rol    DWORD PTR [ebp+0x61247dc2],0x1d
  438192:	jae    0x4381cc
  438194:	out    0x87,eax
  438196:	jg     0x43812f
  438198:	mov    ecx,0xcbe9a08f
  43819d:	ror    BYTE PTR [ebx-0x3eed48d1],1
  4381a3:	cmc    
  4381a4:	hlt    
  4381a5:	daa    
  4381a6:	in     eax,0xcf
  4381a8:	dec    eax
  4381a9:	sbb    al,BYTE PTR [esi+0x751a3471]
  4381af:	push   ds
  4381b0:	xor    al,0x1f
  4381b2:	js     0x4381a0
  4381b4:	pushf  
  4381b5:	sar    cl,0xfc
  4381b8:	or     BYTE PTR [ebx+0x5537e940],0xfa
  4381bf:	push   edx
  4381c0:	mov    esi,0xf46c51c1
  4381c5:	pop    ss
  4381c6:	push   ecx
  4381c7:	inc    ecx
  4381c8:	std    
  4381c9:	jns    0x4381c5
  4381cb:	cs ds dec edi
  4381ce:	je     0x438195
  4381d0:	add    al,0x8b
  4381d3:	fs inc ebp
  4381d5:	sbb    al,0xfa
  4381d7:	push   ss
  4381d8:	push   ecx
  4381d9:	hlt    
  4381da:	test   eax,0x4416620e
  4381df:	add    BYTE PTR [esp+ecx*1],al
  4381e2:	sub    cl,BYTE PTR [ecx+0x1aaec89]
	...
  4381fc:	or     esp,DWORD PTR [eax-0x8]
  4381ff:	jmp    ecx
  438201:	push   eax
  438202:	or     al,0x40
  438204:	fcom   QWORD PTR [ecx]
  438206:	dec    ebp
  438207:	clc    
  438208:	or     ebx,DWORD PTR [ebp+0x7d874d2]
  43820e:	test   DWORD PTR [ebp+eax*1-0x1baf091a],eax
  438215:	mov    ds:0x120bfe1b,al
  43821a:	jge    0x438210
  43821c:	int3   
  43821d:	pop    edi
  43821e:	and    cl,BYTE PTR [ebp-0x4a1e246f]
  438224:	mov    edx,0x118df6e5
  438229:	sub    eax,0xc04bffef
  43822e:	cmc    
  43822f:	jne    0x43826d
  438231:	in     eax,0x14
  438233:	dec    eax
  438234:	ins    DWORD PTR es:[edi],dx
  438235:	rol    BYTE PTR [eax],1
  438237:	test   DWORD PTR [ebp+edx*4-0x7d],ebx
  43823b:	std    
  43823c:	or     ah,dh
  43823e:	imul   bl
  438240:	pop    esp
  438241:	int    0xe8
  438243:	pop    edx
  438245:	in     eax,0xf6
  438247:	jmp    0x438298
  438249:	pop    es
  43824a:	inc    ebp
  43824b:	clc    
  43824c:	hlt    
  43824d:	or     DWORD PTR [eax],ebx
  43824f:	(bad)  
  438250:	jmp    0x438237
  438252:	je     0x438244
  438254:	sti    
  438255:	jg     0x43829b
  438257:	adc    DWORD PTR [eax+edx*4],ebx
  43825a:	mov    bh,0xee
  43825c:	dec    ebp
  43825d:	nop
  43825e:	add    BYTE PTR [ebp+0x0],cl
	...
  438274:	ror    DWORD PTR [edi*8-0x6252401],1
  43827b:	call   FWORD PTR [ebx+ecx*8+0x73]
  43827f:	stc    
  438280:	mov    ch,0xb1
  438282:	inc    eax
  438283:	hlt    
  438284:	push   cs
  438285:	and    bh,BYTE PTR [ebp-0x17]
  438288:	mov    ah,0x26
  43828a:	dec    BYTE PTR [eax+esi*1+0x2fab8c2]
  438291:	ins    BYTE PTR es:[edi],dx
  438292:	std    
  438293:	push   DWORD PTR [ebp-0x11]
  438296:	xor    cl,bh
  438298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438299:	out    0x53,al
  43829b:	pop    edx
  43829c:	mov    ds,edi
  43829e:	mov    esi,0x875bb503
  4382a3:	jmp    0x4382db
  4382a5:	ficom  DWORD PTR [edx+eax*8]
  4382a8:	js     0x4382fe
  4382aa:	inc    BYTE PTR [ebp+esi*8+0x6b4f3361]
  4382b1:	jge    0x438234
  4382b3:	js     0x438262
  4382b5:	scas   eax,DWORD PTR es:[edi]
  4382b6:	cmp    esp,esi
  4382b8:	sub    al,BYTE PTR ds:[edi-0x3b4b5abc]
  4382bf:	jae    0x4382d8
  4382c1:	scas   al,BYTE PTR es:[edi]
  4382c2:	sub    edi,eax
  4382c4:	stos   BYTE PTR es:[edi],al
  4382c5:	ret    0x453
  4382c8:	ds jmp 0x438285
  4382cb:	inc    esp
  4382cc:	mov    ch,BYTE PTR [ecx]
  4382ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4382cf:	int    0xaa
  4382d1:	mov    ds:0x4b7d7eb3,al
  4382d6:	xor    BYTE PTR [ebx+0x0],al
	...
  4382e9:	add    BYTE PTR [eax],al
  4382eb:	add    BYTE PTR [eax-0x14],al
  4382ee:	mov    ch,0x4f
  4382f0:	fucomip st,st(0)
  4382f2:	daa    
  4382f3:	sbb    cl,BYTE PTR [ebx]
  4382f5:	dec    edi
  4382f6:	mov    ch,0xfa
  4382f8:	ror    BYTE PTR [eax+0x10],0x40
  4382fc:	mov    ch,0xab
  4382fe:	les    esi,FWORD PTR [ebx-0x79]
  438301:	ds (bad) 
  438303:	jle    0x43837b
  438305:	pop    esi
  438306:	dec    edi
  438307:	sti    
  438308:	rcr    BYTE PTR [eax+0x4a],0x66
  43830c:	xor    dl,BYTE PTR [eax+0x7d8d0f22]
  438312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438313:	add    edi,DWORD PTR [eax]
  438315:	push   eax
  438316:	pushf  
  438317:	push   esp
  438319:	aam    0xa
  43831b:	add    eax,DWORD PTR [eax-0x2b]
  43831e:	call   DWORD PTR [ebx+0xe]
  438321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438322:	jmp    FWORD PTR [ecx]
  438324:	lahf   
  438325:	sar    DWORD PTR [ebp-0x4c],0xff
  438329:	test   BYTE PTR [edi+0x678f7511],al
  43832f:	ss out dx,al
  438331:	(bad)  
  438332:	push   esp
  438333:	add    bh,dh
  438335:	aam    0xd1
  438337:	add    ebx,DWORD PTR [edx+0x52]
  43833a:	clc    
  43833b:	mov    ah,0x81
  43833d:	and    edi,DWORD PTR ds:0x1eb96f87
  438343:	mov    bh,BYTE PTR [ecx+0x19]
  438346:	mov    eax,ds:0x5ec264c0
  43834b:	mov    ecx,0x66f203b
	...
  438364:	icebp  
  438365:	inc    ecx
  438366:	daa    
  438367:	add    al,0x6
  438369:	ret    0x6e7f
  43836c:	jmp    0x7e340e8b
  438371:	pop    eax
  438372:	cmp    BYTE PTR [ebx+0x67],dl
  438375:	into   
  438376:	out    0x2e,eax
  438378:	mov    bh,0x8
  43837a:	xor    DWORD PTR [ebx+0x67],edx
  43837d:	into   
  43837e:	out    0x80,eax
  438380:	jne    0x438315
  438382:	mov    dx,0x9dc2
  438386:	dec    ebp
  438387:	push   esp
  438388:	dec    DWORD PTR [esi-0x43]
  43838b:	mov    BYTE PTR [esi-0x40],cl
  43838e:	mov    dh,0x4d
  438390:	cmp    ah,BYTE PTR [ebx+esi*8+0x305e63f0]
  438397:	clc    
  438398:	push   ebx
  438399:	mov    eax,ds:0xd32dd100
  43839e:	or     BYTE PTR [edx-0xa],ch
  4383a1:	test   DWORD PTR [edi],esi
  4383a3:	rcr    DWORD PTR [edx-0x62],0x6b
  4383a7:	jo     0x438427
  4383a9:	sbb    ecx,DWORD PTR [ecx-0x3f65880f]
  4383af:	stc    
  4383b0:	or     eax,0x3d176f48
  4383b5:	push   eax
  4383b6:	sub    WORD PTR ds:0xcea966bd,dx
  4383bd:	(bad)  
  4383be:	xor    cl,ch
  4383c0:	mov    dh,0xbf
  4383c2:	dec    ebp
  4383c3:	push   ebx
  4383c4:	es adc eax,0x3d14
	...
  4383da:	add    BYTE PTR [eax],al
  4383dc:	retf   
  4383dd:	iret   
  4383de:	add    BYTE PTR [edx+0x9],ah
  4383e1:	popa   
  4383e2:	cmc    
  4383e3:	push   ebp
  4383e4:	jbe    0x4383ee
  4383e6:	pop    esp
  4383e7:	(bad)
  4383ea:	jae    0x4383e5
  4383ec:	inc    ebx
  4383ed:	mov    ds:0x91ef6a08,eax
  4383f2:	test   DWORD PTR [edi],ecx
  4383f4:	popa   
  4383f5:	mov    cl,0xae
  4383f7:	push   esi
  4383f8:	repz (bad) 
  4383fa:	push   ecx
  4383fb:	sahf   
  4383fc:	fistp  WORD PTR [ebx]
  4383fe:	jmp    0xfa5943cf
  438403:	fs jns 0x4383a3
  438406:	adc    esi,DWORD PTR [eax-0x79]
  438409:	sbb    dh,dl
  43840b:	jle    0x4383f9
  43840d:	sbb    ecx,DWORD PTR [ecx+0x4410ad2f]
  438413:	ins    DWORD PTR es:[edi],dx
  438414:	cmp    cl,BYTE PTR [edi+0x11]
  438417:	and    bh,ah
  438419:	mov    ebp,DWORD PTR [esi+0x37]
  43841c:	loop   0x4383f1
  43841e:	or     al,0x10
  438420:	in     al,dx
  438421:	sbb    esi,DWORD PTR [ecx+eiz*8-0x3a]
  438425:	(bad)  
  438426:	in     eax,0x0
  438428:	inc    edx
  438429:	and    edi,DWORD PTR [edx+0x4c9a47eb]
  43842f:	or     ah,dh
  438431:	mov    eax,0x21e3fff7
  438436:	mov    edx,0xc7c9f25f
  43843b:	ret    0x8d24
  43843e:	lahf   
  43843f:	push   esp
	...
  438454:	fcmovbe st,st(0)
  438456:	add    BYTE PTR [ebp-0x38f3a824],al
  43845c:	sbb    ecx,ecx
  43845e:	mov    ecx,0x63d60c43
  438463:	inc    ecx
  438464:	or     al,0xfa
  438466:	push   es
  438467:	mov    eax,ds:0x3b374c
  43846c:	sbb    ecx,DWORD PTR [eax-0x6c703ca4]
  438472:	inc    eax
  438473:	push   0xffffff8d
  438475:	xchg   ebx,eax
  438476:	cdq    
  438477:	pop    eax
  438478:	pop    ds
  438479:	rol    BYTE PTR [eax],cl
  43847b:	mov    eax,ds:0x3b357c
  438480:	das    
  438481:	jne    0x43843c
  438483:	inc    ebx
  438484:	int3   
  438485:	mov    bl,0x79
  438487:	adc    eax,0x789993dc
  43848c:	pop    edi
  43848d:	rol    DWORD PTR [eax],1
  43848f:	mov    eax,ds:0x407804
  438494:	out    dx,eax
  438495:	xchg   esp,eax
  438496:	mov    edx,0x89b39c43
  43849b:	adc    eax,0x989993dc
  4384a0:	dec    edi
  4384a1:	rol    DWORD PTR [eax],1
  4384a3:	mov    eax,ds:0x4077d8
  4384a8:	push   DWORD PTR [edx+edi*4-0x664ca3bd]
  4384af:	adc    eax,0xb8998c0c
  4384b4:	mov    ch,0x65
  4384b6:	inc    edx
	...
  4384cb:	add    BYTE PTR [edx+ecx*1],dl
  4384ce:	sbb    DWORD PTR [eax-0x4b],eax
  4384d1:	add    eax,0x26f6beb6
  4384d6:	and    DWORD PTR gs:[eax+0xd9efde6],0x65
  4384de:	inc    edx
  4384df:	add    BYTE PTR [esi+ebx*4+0x18],dl
  4384e3:	inc    eax
  4384e4:	mov    ch,0xc5
  4384e6:	xchg   ebp,eax
  4384e7:	mov    esi,0xbf652676
  4384ec:	test   al,0xe6
  4384ee:	std    
  4384ef:	sahf   
  4384f0:	or     eax,0x54004265
  4384f5:	push   cs
  4384f6:	sbb    DWORD PTR [eax-0x4b],eax
  4384f9:	(bad)
  4384fc:	jbe    0x438524
  4384fe:	gs mov eax,eax
  438501:	data16 add al,0x9f
  438504:	mov    ebp,0x140043f2
  438509:	cli    
  43850a:	adc    DWORD PTR [eax-0x4b],eax
  43850d:	add    eax,0x2676c3dd
  438512:	pop    edi
  438513:	das    
  438514:	stos   DWORD PTR es:[edi],eax
  438515:	data16 add al,0x9f
  438518:	jge    0x438504
  43851a:	inc    ebx
  43851b:	add    BYTE PTR [ebp+ebx*1+0x18],dl
  43851f:	inc    eax
  438520:	mov    ch,0xc9
  438522:	cmp    al,0xc4
  438524:	imul   BYTE PTR [eax]
  438526:	pop    edi
  438527:	out    dx,eax
  438528:	shr    BYTE PTR [eax+0x4],0x9f
  43852c:	in     eax,dx
  43852d:	in     al,dx
  43852e:	inc    ebx
	...
  438543:	add    BYTE PTR [ebp+ebp*1+0x18],dl
  438547:	inc    eax
  438548:	mov    ch,0xc9
  43854a:	sbb    al,0xc4
  43854c:	imul   BYTE PTR [eax]
  43854e:	pop    edi
  43854f:	jmp    0x438519
  438551:	push   0x8fed9f04
  438556:	sub    eax,DWORD PTR [ebp-0x4b]
  438559:	lock pop ss
  43855b:	pop    ss
  43855c:	cmc    
  43855d:	pop    DWORD PTR [esi-0x182c8984]
  438563:	(bad)  
  438564:	cli    
  438565:	jnp    0x43850e
  438567:	add    esp,DWORD PTR [edx]
  438569:	clc    
  43856a:	and    eax,DWORD PTR [ebp-0x4b]
  43856d:	lock aas 
  43856f:	adc    eax,0x5c868f75
  438574:	not    dl
  438576:	out    0x62,eax
  438578:	mov    bh,BYTE PTR [ebx-0x59]
  43857b:	add    edi,DWORD PTR [edx]
  43857d:	fsubr  DWORD PTR [ebx]
  43857f:	inc    ebp
  438580:	mov    ch,0xf0
  438582:	mov    edi,0x468f7516
  438587:	mov    esp,0x62e7d2f6
  43858c:	jb     0x438609
  43858e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43858f:	add    edx,DWORD PTR [edx+0x38]
  438592:	and    al,0x45
  438594:	mov    ch,0xf0
  438596:	adc    ebx,DWORD PTR [eax]
  438598:	jne    0x438529
  43859a:	xchg   BYTE PTR [ebx+0x62e7d2f6],bl
  4385a0:	sahf   
  4385a1:	jl     0x4385ca
  4385a3:	add    al,0x2a
  4385a5:	sbb    BYTE PTR [esp+eax*2+0x0],ch
	...
  4385bc:	mov    ch,0xf0
  4385be:	adc    ebx,DWORD PTR [eax]
  4385c0:	jne    0x438551
  4385c2:	xchg   bl,bh
  4385c4:	jns    0x438598
  4385c6:	out    0x62,eax
  4385c8:	idiv   BYTE PTR [ebx+0x27]
  4385cb:	add    al,0x42
  4385cd:	ja     0x438573
  4385cf:	inc    esp
  4385d0:	mov    ch,0xf0
  4385d2:	xlat   BYTE PTR ds:[ebx]
  4385d3:	pop    ss
  4385d4:	cmc    
  4385d5:	pop    DWORD PTR [esi-0x25]
  4385d8:	jno    0x4385ac
  4385da:	out    0x62,eax
  4385dc:	retf   0x277b
  4385df:	add    al,0x1a
  4385e1:	push   edi
  4385e2:	add    BYTE PTR [ecx+edi*8-0x3d526071],ch
  4385e9:	iret   
  4385ea:	add    BYTE PTR [edx-0x16c1b362],cl
  4385f0:	xlat   BYTE PTR ds:[ebx]
  4385f1:	outs   dx,BYTE PTR ds:[esi]
  4385f2:	adc    al,0xa9
  4385f4:	mov    dh,0xf6
  4385f6:	pop    eax
  4385f7:	and    al,0xf1
  4385f9:	(bad)  
  4385fa:	lahf   
  4385fb:	add    eax,0x8a00cfaa
  438600:	sahf   
  438601:	dec    esp
  438602:	ds jmp 0xa958889f
  438608:	mov    dh,0xf6
  43860a:	js     0x438638
  43860c:	jns    0x43859d
  43860e:	lahf   
  43860f:	in     eax,dx
  438610:	ret    0xcf
  438613:	dec    edx
  438614:	mov    cs,WORD PTR [ebx+0x3e]
  438617:	jmp    0xa957fcb3
  43861c:	mov    dh,0xf6
  43861e:	cwde   
  43861f:	and    al,0x0
	...
  438631:	add    BYTE PTR [eax],al
  438633:	add    BYTE PTR [ecx-0x71],dh
  438636:	lahf   
  438637:	mov    ebp,0x4a00cfca
  43863c:	mov    cs,WORD PTR [ebx+0x3e]
  43863f:	jmp    0x2958189d
  438644:	mov    cl,0xf6
  438646:	mov    eax,0x9f8f76ac
  43864b:	icebp  
  43864c:	mov    ds:0x18a00cf,al
  438651:	dec    ebx
  438652:	ds jmp 0x2951c4a9
  438658:	mov    ecx,0xf6a4d8f4
  43865d:	(bad)  
  43865e:	lahf   
  43865f:	icebp  
  438660:	retf   0xcf
  438663:	dec    edx
  438664:	cmp    DWORD PTR [esi+edi*1-0x17],ecx
  438668:	sbb    DWORD PTR [ecx+0x14],edi
  43866b:	sub    DWORD PTR [ecx+0x5100f8f4],esi
  438671:	rol    DWORD PTR [eax],1
  438673:	mov    eax,ds:0x4077f8
  438678:	call   DWORD PTR [ebx]
  43867a:	rol    BYTE PTR [ebx+0x5c],0xac
  43867e:	pop    ecx
  43867f:	adc    eax,0x1899910c
  438684:	xchg   edx,eax
  438685:	rol    BYTE PTR [eax],1
  438687:	mov    eax,ds:0x40778c
  43868c:	aas    
  43868d:	xor    al,0xc0
  43868f:	inc    ebx
  438690:	dec    esp
  438691:	lods   al,BYTE PTR ds:[esi]
  438692:	icebp  
  438693:	adc    ecx,DWORD PTR [ecx+edx*4]
  438696:	cdq    
  438697:	cmp    BYTE PTR [eax],al
	...
  4386a9:	add    BYTE PTR [eax],al
  4386ab:	add    dl,ah
  4386ad:	rol    BYTE PTR [eax],1
  4386af:	mov    eax,ds:0x4077ec
  4386b4:	outs   dx,DWORD PTR ds:[esi]
  4386b5:	push   ebx
  4386b6:	mov    esi,0xc5ac0c43
  4386bb:	adc    al,0x5c
  4386bd:	xchg   ecx,eax
  4386be:	cdq    
  4386bf:	pop    eax
  4386c0:	rcl    al,cl
  4386c2:	add    BYTE PTR [ecx+0x408200],ah
  4386c8:	outs   dx,DWORD PTR ds:[esi]
  4386c9:	jae    0x438689
  4386cb:	inc    ebx
  4386cc:	fsubr  QWORD PTR [ebx-0x6ee3ec1b]
  4386d2:	cdq    
  4386d3:	js     0x4386e7
  4386d5:	rol    BYTE PTR [eax],cl
  4386d7:	mov    eax,ds:0x407d18
  4386dc:	aas    
  4386dd:	cdq    
  4386de:	mov    edi,0xd9abdc43
  4386e3:	adc    al,0x8c
  4386e5:	mov    ebx,DWORD PTR [ecx+0xd21298]
  4386eb:	mov    eax,ds:0x407c38
  4386f0:	aas    
  4386f1:	mov    eax,0xab8c43bf
  4386f6:	popf   
  4386f7:	adc    al,0xcc
  4386f9:	mov    ebx,DWORD PTR [ecx+0x3ee4b5b8]
  4386ff:	add    BYTE PTR [edx+ebx*4+0xd],dl
  438703:	inc    eax
  438704:	mov    ch,0x80
  438706:	in     al,dx
  438707:	addr16 fucomp st(1)
  43870a:	add    BYTE PTR ds:[esi],dl
  43870d:	out    dx,al
  43870e:	ret    
  43870f:	add    BYTE PTR ds:[eax],al
	...
  438722:	add    BYTE PTR [eax],al
  438724:	mov    ch,0xe
  438726:	add    edi,ebp
  438728:	bound  ebp,QWORD PTR [ebp-0x5dfcb142]
  43872e:	clc    
  43872f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438731:	out    0xfd,al
  438733:	cmp    DWORD PTR [si+0x3d],esi
  438738:	jmp    0x3da4:0x1567d3cd
  43873f:	add    BYTE PTR [edx+0x76c1c609],cl
  438745:	es stos DWORD PTR es:[edi],eax
  438747:	ror    DWORD PTR [ebp-0x4ac08446],1
  43874d:	fstp   QWORD PTR [esi-0x19]
  438750:	sti    
  438751:	call   0xe278253
  438756:	jb     0x4386e1
  438758:	jne    0x438780
  43875a:	push   ebx
  43875b:	lahf   
  43875c:	std    
  43875d:	imul   edi,DWORD PTR [esi],0x0
  438760:	bnd jae 0x438778
  438763:	mov    esp,0x52fde63b
  438768:	push   ss
  438769:	push   ds
  43876a:	lds    edi,FWORD PTR [esi]
  43876c:	mov    ch,0x35
  43876e:	shl    DWORD PTR [ebp-0x48],cl
  438771:	into   
  438772:	int3   
  438773:	shl    DWORD PTR [esi+0x26],0x61
  438777:	pop    ss
  438778:	cli    
  438779:	push   0xd204e804
  43877e:	stos   DWORD PTR es:[edi],eax
  43877f:	cli    
  438780:	aas    
  438781:	add    DWORD PTR [ecx-0x5473de2a],ecx
  438787:	xor    al,0x0
	...
  438799:	add    BYTE PTR [eax],al
  43879b:	add    ch,dl
  43879d:	(bad)
  4387a1:	push   es
  4387a2:	mov    ds:0xaa7fc9ad,eax
  4387a7:	inc    ecx
  4387a8:	mov    ch,0x12
  4387aa:	aad    0x3
  4387ac:	jbe    0x43877d
  4387ae:	out    0xac,eax
  4387b0:	rcr    DWORD PTR [edi],0xa2
  4387b3:	inc    ecx
  4387b4:	mov    ch,0x12
  4387b6:	mov    ebp,0xe7cf74a3
  4387bb:	fwait
  4387bc:	sbb    ebx,ecx
  4387be:	popa   
  4387bf:	lods   eax,DWORD PTR ds:[esi]
  4387c0:	cld    
  4387c1:	add    eax,0x1a124927
  4387c6:	lods   al,BYTE PTR ds:[esi]
  4387c7:	out    0xb6,eax
  4387c9:	nop
  4387ca:	mov    cl,0x78
  4387cc:	inc    ebp
  4387cd:	dec    ebx
  4387ce:	jmp    0xb737:0xe7d02cbb
  4387d5:	mov    ecx,0x11d5b73f
  4387da:	sub    edi,DWORD PTR [ecx-0xc]
  4387dd:	mov    cl,0x25
  4387df:	or     BYTE PTR [ebp-0x46b99346],dh
  4387e5:	mov    edi,0x80e51712
  4387ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4387eb:	add    edi,DWORD PTR [edx]
  4387ed:	sbb    BYTE PTR [ebp-0x53],ch
  4387f0:	add    DWORD PTR [ebx-0x7899499c],0x9053065e
  4387fa:	pop    esi
  4387fb:	mov    esi,0xc46e7fdf
	...
  438814:	jg     0x438864
  438816:	gs mov edx,0x2f667b46
  43881c:	xchg   ecx,eax
  43881d:	mov    esp,edi
  43881f:	aaa    
  438820:	mov    al,0x12
  438822:	cmp    al,0xe8
  438824:	mov    dh,0xc0
  438826:	mov    edx,0x7e3516
  43882b:	sub    DWORD PTR [ecx-0x7b05edd6],esi
  438831:	or     eax,eax
  438833:	shl    dl,cl
  438835:	imul   eax,DWORD PTR [esp+eiz*2],0x4f
  438839:	test   DWORD PTR [ebx+0x163a41ab],edx
  43883f:	test   eax,0x860ebf03
  438844:	xchg   ebp,eax
  438845:	aam    0xbe
  438847:	in     eax,0xb6
  438849:	or     al,0xc8
  43884b:	std    
  43884c:	ret    0x7c92
  43884f:	lds    edi,FWORD PTR [edx+0x9f4748f]
  438855:	sahf   
  438856:	and    al,0xe5
  438858:	out    0x16,eax
  43885a:	adc    al,0x3d
  43885c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43885d:	iret   
  43885e:	add    BYTE PTR [edx-0x57],al
  438861:	(bad)  
  438862:	into   
  438863:	jb     0x4388dc
  438865:	imul   eax,DWORD PTR [ebp+eax*1-0x43],0x43e6c80c
  43886d:	aam    0xf1
  43886f:	adc    DWORD PTR [ebp-0x3b4273b1],ebp
  438875:	push   ss
  438876:	push   ds
  438877:	sub    eax,DWORD PTR [eax]
	...
  438889:	add    BYTE PTR [eax],al
  43888b:	add    ah,dh
  43888d:	lea    eax,[eax]
  43888f:	mov    esp,0xb74e268d
  438894:	add    eax,0x36914e39
  438899:	adc    bh,dl
  43889b:	jmp    0x83929a6c
  4388a0:	mov    bh,0xa7
  4388a2:	add    cl,ch
  4388a4:	mov    dh,0xcf
  4388a6:	stc    
  4388a7:	pop    esp
  4388a8:	fst    DWORD PTR [esp+edx*1]
  4388ab:	sbb    DWORD PTR [ebx+0x16200cf],ebp
  4388b1:	xchg   ecx,eax
  4388b2:	cli    
  4388b3:	into   
  4388b4:	test   DWORD PTR [ebp+0x37],ebx
  4388b7:	add    BYTE PTR [ecx-0x4ae491e9],dl
  4388bd:	(bad)  
  4388be:	adc    BYTE PTR [edx+ecx*4-0x46],dh
  4388c2:	mov    eax,DWORD PTR [ebp+0x7c]
  4388c5:	mov    ebp,0xe69c75f5
  4388ca:	je     0x4388d8
  4388cc:	retf   0x14e4
  4388cf:	cmp    al,0x8e
  4388d1:	int    0x0
  4388d3:	test   DWORD PTR [eax+eiz*2-0x6],ecx
  4388d7:	mov    dl,0x8d
  4388d9:	mov    edi,0x7a1c15f5
  4388de:	inc    eax
  4388df:	add    ah,bl
  4388e1:	loopne 0x4388e3
  4388e3:	je     0x438939
  4388e5:	out    0x74,al
  4388e7:	or     BYTE PTR [esi+edx*1],al
  4388ea:	sbb    eax,0x82c5f3fe
  4388ef:	ret    
	...
  438904:	pop    es
  438905:	enter  0xcba,0x4c
  438909:	rol    BYTE PTR [ecx+0x4dbc1dec],0x33
  438910:	repz mov esp,0xbe1f6a4d
  438916:	bound  eax,QWORD PTR [ecx]
  438918:	hlt    
  438919:	mov    WORD PTR [eax],es
  43891b:	add    BYTE PTR [esp+eiz*8+0x7eb30874],cl
  438922:	xor    BYTE PTR [edx],dl
  438924:	pop    esp
  438925:	lea    eax,[edi-0xdf5ebba]
  43892b:	(bad)  
  43892c:	js     0x43898a
  43892e:	mov    ecx,DWORD PTR [ebp-0x4c]
  438931:	mov    edx,0x3509ff50
  438936:	or     al,0x40
  438938:	int3   
  438939:	btr    DWORD PTR [esp+esi*2+0x22],0x7d
  43893f:	cld    
  438940:	imul   edi,DWORD PTR [eax+0x3eb54581],0x7db9417d
  43894a:	mov    ebp,0xe79fb174
  43894f:	out    0xe6,al
  438951:	mov    esp,0x16b56800
  438956:	(bad)  
  438957:	inc    DWORD PTR ds:0x7914a57a
  43895d:	pop    ss
  43895e:	add    BYTE PTR ds:[eax+ebp*1],bh
  438962:	jmp    0x438926
  438964:	add    DWORD PTR [edi],esi
  438966:	dec    edi
  438967:	lea    eax,[eax]
	...
  438979:	add    BYTE PTR [eax],al
  43897b:	add    al,dh
  43897d:	cs push ebp
  43897f:	sti    
  438980:	add    esp,DWORD PTR [ebx]
  438982:	dec    esi
  438983:	sti    
  438984:	jmp    0x4389a4
  438986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438987:	adc    al,0xa1
  438989:	xor    al,0x3e
  43898b:	add    BYTE PTR [eax],bh
  43898d:	out    0x29,al
  43898f:	or     al,0x2e
  438991:	jecxz  0x438988
  438993:	ss sti 
  438995:	sub    dh,BYTE PTR [ecx]
  438997:	add    al,0x5
  438999:	daa    
  43899a:	fwait
  43899b:	sbb    ch,cl
  43899d:	es jle 0x43899f
  4389a0:	cmp    dh,cl
  4389a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4389a3:	xor    DWORD PTR [edx],esi
  4389a5:	cmp    eax,esi
  4389a7:	adc    BYTE PTR [ebp+0x26],dh
  4389aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4389ab:	jno    0x43895a
  4389ad:	popa   
  4389ae:	adc    al,al
  4389b0:	(bad)  
  4389b1:	out    0xfd,al
  4389b3:	sub    eax,0xbdbcd0f5
  4389b8:	mov    cl,0x26
  4389ba:	push   eax
  4389bb:	xchg   DWORD PTR ds:0xf584ffad,eax
  4389c1:	xchg   ecx,eax
  4389c2:	mul    DWORD PTR [edi-0x4b]
  4389c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4389c6:	std    
  4389c7:	call   FWORD PTR [edi+0x26]
  4389ca:	dec    esi
  4389cb:	sti    
  4389cc:	enter  0x147e,0x40
  4389d0:	mov    ch,0x8f
  4389d2:	outs   dx,BYTE PTR ds:[esi]
  4389d3:	xor    bh,BYTE PTR [ebp-0x49cf2df6]
  4389d9:	mov    ecx,0x7cf50fd2
  4389de:	daa    
  4389df:	add    al,0x0
	...
  4389f1:	add    BYTE PTR [eax],al
  4389f3:	add    BYTE PTR [edi+0x4c],bl
  4389f6:	sbb    eax,0xcc119e7d
  4389fb:	adc    al,0xb1
  4389fd:	(bad)  
  4389fe:	out    0x54,eax
  438a00:	pop    es
  438a01:	addr16 pop esp
  438a03:	jg     0x43898f
  438a05:	or     esp,DWORD PTR [ebx-0x6e87fd57]
  438a0b:	add    al,0xb5
  438a0d:	(bad)  
  438a0e:	xchg   edx,eax
  438a0f:	(bad)  
  438a11:	mov    ds:0xcced0427,al
  438a16:	jl     0x438a1c
  438a18:	mov    ch,0x8f
  438a1a:	repnz pop ss
  438a1c:	call   0xd0f7:0xad2f7305
  438a23:	lods   al,BYTE PTR ds:[esi]
  438a24:	pop    ecx
  438a25:	(bad)  
  438a27:	sbb    esi,ebp
  438a29:	pop    esi
  438a2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438a2b:	add    ebx,ebp
  438a2d:	(bad)  [ecx+0x44]
  438a30:	mov    ch,0x4a
  438a32:	in     al,0x2
  438a34:	mov    ch,0x8f
  438a36:	je     0x438a9f
  438a38:	sub    cl,BYTE PTR ds:0x4912a93b
  438a3e:	in     eax,0xa9
  438a40:	pop    ds
  438a41:	adc    esp,DWORD PTR [esp+edx*1]
  438a44:	call   0x231a:0xce302307
  438a4b:	push   esp
  438a4c:	cmp    BYTE PTR ds:0xeffad18,dl
  438a52:	mov    eax,0xf9b81a8
  438a57:	add    eax,DWORD PTR [eax]
	...
  438a69:	add    BYTE PTR [eax],al
  438a6b:	add    dh,ah
  438a6d:	or     al,0xfb
  438a6f:	jle    0x438a9b
  438a71:	test   BYTE PTR [eax],al
  438a73:	leave  
  438a74:	ror    BYTE PTR [edi-0x704e9698],0x0
  438a7b:	push   ebx
  438a7c:	mov    dh,0x75
  438a7e:	add    BYTE PTR [ebx-0x4a],dl
  438a81:	ja     0x438a83
  438a83:	jmp    0x553d5a3e
  438a88:	mov    ebp,0xc8f91409
  438a8d:	dec    edi
  438a8e:	add    BYTE PTR [edx+0x5e],ch
  438a91:	or     DWORD PTR [ebx+ebx*8-0xc],esi
  438a95:	adc    bl,bh
  438a97:	mov    eax,ds:0x1b008fb6
  438a9c:	daa    
  438a9d:	mov    esp,0x66ff3ec0
  438aa2:	(bad)  
  438aa3:	stos   DWORD PTR es:[edi],eax
  438aa4:	jle    0x438ab4
  438aa6:	dec    edx
  438aa7:	mov    gs,WORD PTR [ebx-0x46d6f131]
  438aad:	aas    
  438aae:	add    BYTE PTR [edx-0x7a7a9cb4],dl
  438ab4:	aaa    
  438ab5:	cli    
  438ab6:	adc    ch,ah
  438ab8:	mov    dh,0x8f
  438aba:	dec    ebp
  438abb:	mov    edi,0x59841ce5
  438ac0:	sbb    DWORD PTR [ecx],ecx
  438ac2:	cli    
  438ac3:	mov    ecx,0xe901019e
  438ac8:	mov    dh,0xa
  438aca:	adc    al,0x41
  438acc:	enter  0x4f,0xb1
	...
  438ae4:	adc    eax,DWORD PTR [ebx]
  438ae6:	add    ecx,ebp
  438ae8:	mov    dh,0x82
  438aea:	push   ebx
  438aeb:	cli    
  438aec:	div    BYTE PTR fs:[edx+0x23]
  438af0:	pop    ebx
  438af1:	or     DWORD PTR [ecx-0x6f],edx
  438af4:	jbe    0x438b50
  438af6:	inc    eax
  438af7:	jmp    0xa9ce7a9a
  438afc:	mov    dh,0x46
  438afe:	add    eax,0x91dd00
  438b03:	lea    ebp,[ecx-0x140002c6]
  438b09:	sub    BYTE PTR [eax],dl
  438b0b:	or     eax,0xc47b35ca
  438b10:	enter  0xf210,0xff
  438b14:	pusha  
  438b15:	jmp    0xf084:0x887cc782
  438b1c:	out    0x35,eax
  438b1e:	not    DWORD PTR [eax+0x7b]
  438b21:	mov    edi,0x3dcae808
  438b26:	std    
  438b27:	call   DWORD PTR [ecx]
  438b29:	aam    0x6d
  438b2b:	psadbw mm2,QWORD PTR [ebx+0x368475f5]
  438b32:	adc    eax,0x518d4c
  438b37:	test   DWORD PTR [edi+edi*4+0x5],ecx
  438b3b:	inc    esi
  438b3c:	(bad)  
  438b3e:	pop    esi
  438b3f:	jb     0x438b4a
  438b41:	add    bh,BYTE PTR [edx-0x38a735a1]
  438b47:	ret    0x0
	...
  438b5a:	add    BYTE PTR [eax],al
  438b5c:	push   eax
  438b5d:	xchg   ecx,eax
  438b5e:	mov    al,0x1
  438b60:	aaa    
  438b61:	aas    
  438b62:	test   eax,eax
  438b64:	jo     0x438afc
  438b66:	pop    esi
  438b67:	adc    DWORD PTR [ebp+eiz*8+0x7e5b1974],0x41
  438b6f:	add    dh,BYTE PTR [edx+0x10]
  438b72:	leave  
  438b73:	je     0x438b9d
  438b75:	adc    bh,cl
  438b77:	cs popa 
  438b79:	or     ah,BYTE PTR [eax-0x7d]
  438b7c:	fs or  eax,0x21074fa
  438b82:	mov    edx,0xba00df40
  438b87:	ret    
  438b88:	dec    edi
  438b89:	pusha  
  438b8a:	sub    DWORD PTR [ebp+esi*4-0x26],0x436251f1
  438b92:	lock (bad) 
  438b94:	bnd jmp 0x438bc0
  438b97:	pcmpeqw mm6,mm6
  438b9a:	jbe    0x438b8b
  438b9c:	cmp    BYTE PTR ds:0x42ffe31,cl
  438ba2:	repz mov dl,0xbb
  438ba5:	jns    0x438b4c
  438ba7:	pop    ebx
  438ba8:	inc    ecx
  438ba9:	add    BYTE PTR [edi-0x9],bh
  438bac:	xchg   edx,eax
  438bad:	push   0xffffffff
  438baf:	popa   
  438bb0:	xor    BYTE PTR [edi],dh
  438bb2:	xor    DWORD PTR [esi+edi*1],ebp
  438bb5:	into   
  438bb6:	out    dx,al
  438bb7:	mov    edi,0x17b5500
  438bbc:	mov    ds:0xde5eb,al
	...
  438bd1:	add    BYTE PTR [eax],al
  438bd3:	add    ch,dh
  438bd5:	idiv   BYTE PTR [esi-0x9]
  438bd8:	xchg   edx,eax
  438bd9:	stos   DWORD PTR es:[edi],eax
  438bda:	mul    DWORD PTR [ebp-0x4b]
  438bdd:	ret    
  438bde:	mov    eax,ds:0x3e07f114
  438be3:	add    BYTE PTR [eax],dh
  438be5:	ss xchg edi,eax
  438be7:	std    
  438be8:	sbb    ah,dh
  438bea:	sub    DWORD PTR [ebx],ecx
  438bec:	shl    DWORD PTR [ebx-0x5e],cl
  438bef:	jae    0x438b9e
  438bf1:	pushf  
  438bf2:	jnp    0x438c2d
  438bf4:	ss xor al,0x0
  438bf7:	out    0x10,eax
  438bf9:	sub    DWORD PTR ds:0x784beb5b,eax
  438bff:	mov    esi,0xfff9b8de
  438c04:	loope  0x438c77
  438c06:	xchg   ecx,eax
  438c07:	jle    0x438c22
  438c09:	dec    esi
  438c0a:	test   bl,ch
  438c0c:	(bad)  
  438c0d:	repnz std 
  438c0f:	dec    DWORD PTR [ebx-0x63dfe9d3]
  438c15:	inc    BYTE PTR ss:[esi+0x78ba8f0c]
  438c1c:	jbe    0x438bd1
  438c1e:	not    DWORD PTR [ebx+0xd]
  438c21:	sbb    BYTE PTR ds:0x2811ffa8,bl
  438c27:	das    
  438c28:	imul   ebx,DWORD PTR [edx],0x6c
  438c2b:	fistp  QWORD PTR [edx-0x7afc186f]
  438c31:	sbb    ch,BYTE PTR [edi+ebx*8+0xfea5fae]
	...
  438c4c:	jne    0x438bec
  438c4e:	daa    
  438c4f:	add    al,0x32
  438c51:	jmp    DWORD PTR [esi-0x5a]
  438c54:	mov    edi,0x36774782
  438c59:	mov    bl,0xb
  438c5b:	add    dh,BYTE PTR [ebp-0x50243071]
  438c61:	or     edi,DWORD PTR [ebx-0x67a9d80]
  438c67:	jbe    0x438c9f
  438c69:	mov    ah,0xeb
  438c6b:	add    DWORD PTR [ebp+0x384d378f],esi
  438c71:	push   esp
  438c72:	ret    
  438c73:	adc    esp,ebp
  438c75:	neg    DWORD PTR ds:0x650b79af
  438c7b:	(bad)  
  438c7c:	out    0xaa,al
  438c7e:	jns    0x438c00
  438c80:	xchg   esi,eax
  438c81:	lahf   
  438c82:	in     eax,0x3
  438c84:	mov    ch,0x9f
  438c86:	sti    
  438c87:	clc    
  438c88:	sub    DWORD PTR [ebx+eax*8-0x5],ebx
  438c8c:	pop    edx
  438c8d:	sbb    BYTE PTR [ebx-0x5b],ah
  438c90:	dec    edi
  438c91:	imul   ebp
  438c93:	jbe    0x438c8b
  438c95:	mov    bl,0xdf
  438c97:	push   ebx
  438c98:	dec    ebp
  438c99:	xchg   esp,eax
  438c9a:	in     eax,dx
  438c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438c9c:	das    
  438c9d:	sbb    eax,0x8dbae06c
  438ca2:	out    0x3,eax
  438ca4:	test   DWORD PTR [ecx+0x0],esp
  438ca7:	ss stos BYTE PTR es:[edi],al
  438ca9:	push   edi
  438caa:	pop    gs
  438cac:	mov    dh,0x14
  438cae:	rcr    DWORD PTR [eax+eax*1+0x0],0x0
	...
  438cc2:	add    BYTE PTR [eax],al
  438cc4:	imul   esp,DWORD PTR [eax-0x7],0x40a0c2f4
  438ccb:	jmp    0xe9449c6e
  438cd0:	mov    dh,0x5e
  438cd2:	stc    
  438cd3:	fmul   QWORD PTR [esi-0x63]
  438cd6:	inc    eax
  438cd7:	jmp    0x957934d
  438cdc:	(bad)  
  438cdd:	dec    edi
  438cde:	add    BYTE PTR [ecx+edi*8+0x65],ah
  438ce2:	or     DWORD PTR [esi+esi*8+0x68],edi
  438ce6:	test   esp,eax
  438ce8:	jnp    0x438d34
  438cea:	push   esp
  438ceb:	bound  esp,QWORD PTR [edx]
  438ced:	pusha  
  438cee:	dec    ebp
  438cef:	aaa    
  438cf0:	sub    bl,BYTE PTR [esp+edi*8+0x18]
  438cf4:	iret   
  438cf5:	nop
  438cf6:	jmpw   0x1053
  438cfa:	or     BYTE PTR [eax-0x25],ah
  438cfd:	or     edx,DWORD PTR [ecx-0x52]
  438d00:	ret    
  438d01:	imul   edx,DWORD PTR [eax],0x29
  438d04:	mov    cl,0x14
  438d06:	rcl    DWORD PTR [esi+ebp*4],0x77
  438d0a:	or     bl,ch
  438d0c:	mov    dh,0x8f
  438d0e:	push   ecx
  438d0f:	pop    esp
  438d10:	mov    bl,0x97
  438d12:	push   eax
  438d13:	xchg   BYTE PTR [ebx+0x1af48b9b],bl
  438d19:	repnz fsubr st,st(1)
  438d1c:	mov    dh,0x8f
  438d1e:	test   DWORD PTR [ecx+0x327f092d],edx
  438d24:	adc    DWORD PTR [ecx+0x5ef5],ecx
	...
  438d3a:	add    BYTE PTR [eax],al
  438d3c:	xchg   edx,eax
  438d3d:	jg     0x438d31
  438d3f:	sub    dh,BYTE PTR [edi-0x24959a7c]
  438d45:	xchg   edi,eax
  438d46:	(bad)  
  438d47:	jmp    FWORD PTR [eax+0xc]
  438d4a:	jnp    0x438dc9
  438d4c:	and    al,0x90
  438d4e:	jae    0x438daf
  438d50:	mov    edi,edx
  438d52:	je     0x438d5b
  438d54:	bswap  esi
  438d56:	pop    edi
  438d57:	mov    DWORD PTR [ebx],ebx
  438d59:	daa    
  438d5a:	dec    edx
  438d5b:	shl    DWORD PTR [edi+0x2aff3a81],1
  438d61:	(bad)  
  438d63:	inc    edi
  438d64:	fdivr  QWORD PTR [eax-0x6138b507]
  438d6a:	inc    eax
  438d6b:	cmp    eax,0x8cd8
  438d70:	pop    edi
  438d71:	icebp  
  438d72:	sub    cl,cl
  438d74:	cmp    al,BYTE PTR [ebp+0x4b474705]
  438d7a:	jnp    0x438d74
  438d7c:	into   
  438d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438d7e:	sub    al,0x83
  438d80:	popa   
  438d81:	fwait
  438d82:	cli    
  438d83:	je     0x438d3f
  438d85:	(bad)  
  438d86:	call   0xf7732d0a
  438d8b:	mov    ebx,DWORD PTR [edi+edx*1-0x10]
  438d8f:	je     0x438e0e
  438d91:	mov    ch,0x4
  438d93:	add    DWORD PTR [ebp+ecx*4+0x753564d],ebx
  438d9a:	mov    esi,0x8393cc11
  438d9f:	rol    BYTE PTR [eax],0x0
	...
  438db2:	add    BYTE PTR [eax],al
  438db4:	cdq    
  438db5:	nop
  438db6:	jns    0x438d83
  438db8:	inc    ebx
  438db9:	(bad)  
  438dba:	call   0xf772dede
  438dbf:	mov    ecx,DWORD PTR [edi]
  438dc1:	cmp    ebx,edi
  438dc3:	adc    BYTE PTR [ebp*1-0x2deaa4a8],0x1
  438dcb:	add    BYTE PTR [ecx],cl
  438dcd:	sbb    ah,dh
  438dcf:	push   ecx
  438dd0:	std    
  438dd1:	adc    DWORD PTR [ebp-0x4],esp
  438dd4:	mov    ch,0xf6
  438dd6:	nop
  438dd7:	dec    esp
  438dd8:	sub    eax,0x9f012c48
  438ddd:	neg    BYTE PTR [esi+0x477fad74]
  438de3:	clc    
  438de4:	test   ecx,eax
  438de6:	neg    DWORD PTR [ebx-0x5b]
  438de9:	inc    BYTE PTR ss:[ebp+esi*8-0x70ae02d5]
  438df1:	repnz nop
  438df3:	inc    esp
  438df4:	stc    
  438df5:	inc    esi
  438df6:	xchg   ecx,eax
  438df7:	inc    esp
  438df8:	mov    ebp,0xb9749f46
  438dfd:	adc    DWORD PTR [edi],0xfffffff8
  438e00:	int    0xed
  438e02:	std    
  438e03:	push   DWORD PTR [ebp+0x37feab20]
  438e09:	scas   eax,DWORD PTR es:[edi]
  438e0a:	popf   
  438e0b:	jle    0x438dda
  438e0d:	cli    
  438e0e:	sbb    BYTE PTR ds:0x740cb37c,al
  438e14:	mov    cl,0x75
  438e16:	sub    ah,bh
	...
  438e2c:	mov    ch,0x6d
  438e2e:	dec    eax
  438e2f:	cld    
  438e30:	jl     0x438e66
  438e32:	push   es
  438e33:	add    BYTE PTR [eax],cl
  438e35:	jle    0x438de0
  438e37:	push   edx
  438e38:	sub    BYTE PTR [ebx-0x3c6db008],bh
  438e3e:	hlt    
  438e3f:	jle    0x438ebb
  438e41:	xor    DWORD PTR [edi+0x49cb174],ebx
  438e47:	sti    
  438e48:	add    bh,ch
  438e4a:	sahf   
  438e4b:	xor    DWORD PTR [edx+0x3],esi
  438e4e:	ss adc ch,dh
  438e51:	neg    BYTE PTR [esi+0xf363831]
  438e57:	inc    esp
  438e58:	fsubr  st,st(2)
  438e5a:	sahf   
  438e5b:	adc    al,0x91
  438e5d:	out    0x3d,al
  438e5f:	add    BYTE PTR [esi],bh
  438e61:	(bad)
  438e65:	int    0xf7
  438e67:	add    esp,eax
  438e69:	adc    al,0x44
  438e6b:	xor    al,0x82
  438e6d:	mov    esp,0x5a38362e
  438e72:	inc    ebx
  438e73:	xor    al,0x72
  438e75:	jne    0x438e5c
  438e77:	ss push 0x5c
  438e7a:	xor    bl,BYTE PTR [eax]
  438e7c:	mov    ebp,0xb503e947
  438e81:	(bad)  
  438e83:	mov    WORD PTR [ecx+0xb],?
  438e86:	sbb    edi,eax
  438e88:	ret    0xa79f
  438e8b:	add    edi,DWORD PTR [eax]
  438e8d:	iret   
  438e8e:	xchg   esp,eax
  438e8f:	call   0x438e94
	...
  438ea4:	out    dx,eax
  438ea5:	sbb    edi,0xfaa369a2
  438eab:	pop    ss
  438eac:	lds    ebx,FWORD PTR [edx+esi*8+0x17]
  438eb0:	ror    DWORD PTR [eax],0x75
  438eb3:	lahf   
  438eb4:	iret   
  438eb5:	mov    eax,ds:0x8f82f447
  438eba:	les    eax,FWORD PTR fs:[ecx-0x73]
  438ebe:	xchg   esi,eax
  438ebf:	add    ebp,DWORD PTR [esi-0x3e5e3483]
  438ec5:	ret    
  438ec6:	xlat   BYTE PTR ds:[ebx]
  438ec7:	inc    ebx
  438ec8:	mov    ch,0x19
  438eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438ecb:	cmp    eax,0x3dbd26c
  438ed0:	call   0x9ec94aef
  438ed5:	xchg   esp,eax
  438ed6:	dec    di
  438ed8:	jge    0x438ee1
  438eda:	aaa    
  438edb:	cmp    dh,BYTE PTR [edx]
  438edd:	mov    ebp,0x8fb2f42f
  438ee2:	pop    esp
  438ee3:	inc    edi
  438ee4:	imul   esp,DWORD PTR [eax-0x4a],0xf506f3bc
  438eeb:	cvttps2pi mm4,QWORD PTR [ebp+0x0]
  438eef:	jne    0x438e79
  438ef1:	or     dh,BYTE PTR [ecx+eiz*8+0x15]
  438ef5:	ret    0x3ff9
  438ef8:	cmp    al,BYTE PTR [edi+0x74]
  438efb:	mov    dl,0x29
  438efd:	dec    esp
  438efe:	cld    
  438eff:	adc    bh,al
  438f01:	jnp    0x438f06
  438f03:	pusha  
  438f04:	jmp    0x0:0x6e607
	...
  438f1b:	add    BYTE PTR [eax],bh
  438f1d:	inc    edi
  438f1e:	add    eax,0x3882f002
  438f23:	inc    ecx
  438f24:	sti    
  438f25:	popf   
  438f26:	cli    
  438f27:	cs ds dec esp
  438f2a:	hlt    
  438f2b:	loop   0x438f26
  438f2d:	sub    BYTE PTR [esp+ebp*2],0x6a
  438f31:	add    edx,DWORD PTR [eax-0x47]
  438f34:	adc    eax,0x15ba0c7c
  438f39:	jl     0x438f43
  438f3b:	push   es
  438f3c:	cld    
  438f3d:	or     ebx,edx
  438f3f:	fs icebp 
  438f41:	jnp    0x438f53
  438f43:	bound  edi,QWORD PTR [edx-0x61]
  438f46:	test   DWORD PTR [edx+eiz*1+0x7b720918],ebx
  438f4d:	add    ecx,DWORD PTR [eax+0x8ee1924]
  438f53:	(bad)  
  438f54:	retf   
  438f55:	sti    
  438f56:	call   0xfa4c3906
  438f5b:	(bad)  
  438f5c:	jge    0x438f67
  438f5e:	adc    al,0xfd
  438f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438f61:	mov    BYTE PTR [eax],0x62
  438f64:	sti    
  438f65:	pop    es
  438f66:	pop    ebx
  438f67:	adc    bh,BYTE PTR [esi+0x44]
  438f6a:	or     eax,0xc0b6c9e9
  438f6f:	cmp    ecx,eax
  438f71:	pop    edi
  438f72:	push   eax
  438f73:	xchg   esi,eax
  438f74:	retf   0x18ab
  438f77:	mov    cs,WORD PTR [ecx+ecx*1-0x46bffec]
  438f7e:	cmp    DWORD PTR [eax],eax
	...
  438f94:	fucomi st,st(0)
  438f96:	sbb    al,0xd3
  438f99:	inc    ebx
  438f9a:	adc    al,0xdb
  438f9c:	fcmove st,st(3)
  438f9e:	not    BYTE PTR ds:0x39fb98
  438fa4:	(bad)  
  438fa5:	retf   
  438fa6:	push   edx
  438fa7:	ret    0x9220
  438faa:	dec    esi
  438fab:	mov    ecx,DWORD PTR [ebp-0x55100029]
  438fb1:	push   edx
  438fb2:	add    al,ch
  438fb4:	(bad)  
  438fb5:	xchg   edx,eax
  438fb6:	cmc    
  438fb7:	call   edx
  438fb9:	dec    esi
  438fba:	and    al,0x8
  438fbc:	sbb    eax,0xa455fe9e
  438fc1:	mov    ch,0x11
  438fc3:	(bad)  
  438fc4:	fwait
  438fc5:	adc    eax,eax
  438fc7:	pop    esi
  438fc8:	sahf   
  438fc9:	mov    es,WORD PTR [eax]
  438fcb:	push   ebp
  438fcc:	push   edi
  438fcd:	ss sub esp,0x90e8
  438fd4:	aas    
  438fd5:	enter  0x8b4d,0xc4
  438fd9:	adc    edi,esi
  438fdb:	sub    al,0xeb
  438fdd:	or     edx,DWORD PTR [ebp+0x7f91cc00]
  438fe3:	(bad)  
  438fe4:	cmp    al,0x98
  438fe6:	add    BYTE PTR [eax],al
  438fe8:	fwait
  438fe9:	push   ss
  438fea:	mov    DWORD PTR [eax],eax
  438fec:	pushf  
  438fed:	xchg   ecx,eax
  438fee:	sbb    DWORD PTR [ebp-0x5c],0x8974d318
  438ff5:	xchg   esi,eax
  438ff6:	lods   eax,DWORD PTR ds:[esi]
  438ff7:	add    eax,DWORD PTR [eax]
	...
  439009:	add    BYTE PTR [eax],al
  43900b:	add    BYTE PTR [edi],bl
  43900d:	and    al,0xfc
  43900f:	jae    0x438fa2
  439011:	adc    dh,dl
  439013:	pop    ss
  439014:	mov    eax,ds:0x887581a6
  439019:	into   
  43901a:	test   al,bh
  43901c:	mov    ch,0x1c
  43901e:	call   0x38ff:0xfdf6b1fa
  439025:	push   cs
  439026:	sbb    DWORD PTR [ebx],ecx
  439028:	cs push ds
  43902a:	xchg   cl,cl
  43902c:	inc    eax
  43902d:	je     0x438fcb
  43902f:	stc    
  439030:	dec    edx
  439031:	jbe    0x438fdf
  439033:	ins    BYTE PTR es:[edi],dx
  439034:	int3   
  439035:	ins    DWORD PTR es:[edi],dx
  439036:	cdq    
  439037:	jg     0x4390b4
  439039:	not    BYTE PTR [ecx]
  43903b:	push   eax
  43903c:	ret    0x4324
  43903f:	(bad)  
  439040:	cmp    DWORD PTR [esi],esp
  439042:	mov    dl,0x36
  439044:	in     eax,dx
  439045:	dec    eax
  439046:	dec    ecx
  439047:	push   0xfffdf6ed
  43904c:	sbb    eax,0xaf9f6a5
  439051:	jb     0x438fe7
  439053:	test   BYTE PTR [ebx],cl
  439055:	and    ebp,edi
  439057:	out    0x65,eax
  439059:	neg    BYTE PTR [edx-0x3e495906]
  43905f:	add    ebp,esp
  439061:	fs inc esp
  439063:	add    BYTE PTR [ebx+0x7f],bl
  439066:	inc    edx
  439067:	dec    eax
  439068:	into   
  439069:	clc    
  43906a:	into   
  43906b:	icebp  
  43906c:	cmp    BYTE PTR ds:0x1c12,al
	...
  439082:	add    BYTE PTR [eax],al
  439084:	(bad)  
  439085:	cmc    
  439086:	sbb    BYTE PTR [ebx+ebx*2],cl
  439089:	jg     0x4390a6
  43908b:	adc    al,0xcd
  43908d:	scas   al,BYTE PTR es:[edi]
  43908e:	cmc    
  43908f:	stc    
  439090:	mov    dl,0x6f
  439092:	inc    ebx
  439093:	adc    BYTE PTR [eax],dh
  439095:	sbb    DWORD PTR ss:[ecx],edx
  439098:	cs hlt 
  43909a:	daa    
  43909b:	add    DWORD PTR [esi],ebp
  43909d:	xor    al,0x9b
  43909f:	shufps xmm6,XMMWORD PTR [esi],0x3b
  4390a3:	pop    edx
  4390a4:	out    dx,al
  4390a5:	das    
  4390a6:	rol    BYTE PTR [edi],0xb5
  4390a9:	(bad)  
  4390aa:	outs   dx,BYTE PTR ds:[esi]
  4390ab:	loopne 0x43909b
  4390ad:	popf   
  4390ae:	daa    
  4390af:	add    al,0x38
  4390b1:	call   0x101676d1
  4390b6:	call   0x225645be
  4390bb:	dec    esp
  4390bc:	ror    DWORD PTR [edi+0x5fa99f16],cl
  4390c2:	fld    DWORD PTR [ebx-0x4b]
  4390c5:	sbb    BYTE PTR ds:0xf3cbc20c,ah
  4390cb:	stos   DWORD PTR es:[edi],eax
  4390cc:	pop    ds
  4390cd:	loopne 0x439128
  4390cf:	sahf   
  4390d0:	add    BYTE PTR [ebx*8+0x33047a0b],0x82
  4390d8:	not    BYTE PTR [edx+0x7a1fefcd]
  4390de:	jmp    0x439070
  4390e0:	je     0x43907f
  4390e2:	xchg   edi,eax
  4390e3:	sahf   
  4390e4:	out    0xf,eax
  4390e6:	and    al,0xf
	...
  4390fc:	cmp    cl,ch
  4390fe:	push   cs
  4390ff:	push   esi
  439100:	imul   ebx,DWORD PTR [edx-0x4f],0x36
  439104:	cmp    bh,bh
  439106:	adc    dl,BYTE PTR ds:0xab1118c5
  43910c:	sub    BYTE PTR [ecx+0x4c339e01],0xd7
  439113:	mov    ah,BYTE PTR [ecx-0x4abc26ad]
  439119:	push   ss
  43911a:	mov    ds:0x2b1854f3,al
  43911f:	clc    
  439120:	push   esp
  439121:	push   ss
  439122:	and    bh,al
  439124:	xor    ebp,DWORD PTR [ebx-0x9]
  439127:	add    ebx,edx
  439129:	iret   
  43912a:	aas    
  43912b:	test   BYTE PTR [edx+0x2c25e803],ah
  439131:	dec    ebx
  439132:	ror    DWORD PTR [esi+0x640057ef],cl
  439138:	repz push edi
  43913a:	dec    ebp
  43913b:	sbb    DWORD PTR [eax],esp
  43913d:	fsubr  QWORD PTR ds:0x62b3cfa9
  439143:	jo     0x4390f9
  439145:	push   es
  439146:	jae    0x439141
  439148:	xor    eax,0x403712d1
  43914d:	fsub   QWORD PTR [esi-0x2b]
  439150:	mov    WORD PTR [edi+0x5e4ba67d],cs
  439156:	stc    
  439157:	fadd   QWORD PTR [esi+0x35e9409d]
  43915d:	iret   
  43915e:	and    al,0xc6
	...
  439174:	js     0x4391da
  439176:	push   ebp
  439177:	sub    ch,bl
  439179:	or     dh,BYTE PTR [edx*8-0x49ff3cde]
  439180:	int3   
  439181:	nop
  439182:	stc    
  439183:	mov    ebp,0xdbe59f12
  439188:	cmp    eax,0x3de5245f
  43918d:	(bad)  
  43918e:	call   0xfa4a3c4b
  439193:	ins    DWORD PTR es:[edi],dx
  439194:	icebp  
  439195:	jle    0x43919c
  439197:	xchg   ebx,eax
  439198:	mov    ch,0x5e
  43919a:	stc    
  43919b:	aas    
  43919c:	cmp    al,0xfb
  43919e:	or     DWORD PTR [esi],0xffffffca
  4391a1:	in     eax,dx
  4391a2:	pop    ecx
  4391a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4391a4:	hlt    
  4391a5:	mov    al,BYTE PTR [eax]
  4391a7:	xchg   esp,eax
  4391a8:	cmp    eax,0x290d7df7
  4391ad:	sub    ah,0xd5
  4391b0:	test   DWORD PTR [ebp+0x51],ebx
  4391b3:	out    0xa3,al
  4391b5:	xchg   ebx,eax
  4391b6:	test   ebx,ebx
  4391b8:	push   ecx
  4391b9:	jnp    0x4391c3
  4391bb:	pusha  
  4391bc:	ret    0x24ab
  4391bf:	pusha  
  4391c0:	repnz stos DWORD PTR es:[edi],eax
  4391c2:	sbb    BYTE PTR [eax],al
  4391c4:	jae    0x4391bf
  4391c6:	ins    DWORD PTR es:[edi],dx
  4391c7:	adc    al,0xdc
  4391c9:	mov    eax,DWORD PTR [ecx+0x74819d8]
  4391cf:	test   BYTE PTR [edi],dl
  4391d1:	pop    DWORD PTR [eax]
  4391d3:	add    BYTE PTR [ebx+0x84c5b],al
	...
  4391e9:	add    BYTE PTR [eax],al
  4391eb:	add    cl,ah
  4391ed:	dec    edx
  4391ee:	and    al,0x18
  4391f0:	lods   al,BYTE PTR ds:[esi]
  4391f1:	and    al,0x6e
  4391f3:	and    al,0x68
  4391f5:	xchg   ebx,eax
  4391f6:	lods   eax,DWORD PTR ds:[esi]
  4391f7:	inc    ebp
  4391f8:	pusha  
  4391f9:	mov    eax,0xfe3cc0fa
  4391fe:	add    al,cl
  439200:	lods   al,BYTE PTR ds:[esi]
  439201:	mov    ch,0x0
  439203:	push   0x8ed8
  439208:	jmp    DWORD PTR [edx]
  43920a:	adc    eax,0x4e28e8
  43920f:	test   esp,ebx
  439211:	cdq    
  439212:	add    al,0x33
  439214:	out    0x37,eax
  439216:	push   esi
  439217:	mov    ecx,DWORD PTR [eax-0x16]
  43921a:	adc    DWORD PTR [ebx+0x4d752374],eax
  439220:	xchg   edi,eax
  439221:	fxch   st(5)
  439223:	adc    al,0x4c
  439225:	mov    fs,WORD PTR [edx-0x10]
  439228:	aas    
  439229:	adc    eax,0x22f02456
  43922e:	ror    BYTE PTR [ebx+0x4014a601],1
  439234:	int3   
  439235:	nop
  439236:	add    BYTE PTR [eax],al
  439238:	int3   
  439239:	xchg   ebp,eax
  43923a:	push   eax
  43923b:	push   0xffffffcc
  43923d:	mov    cl,0xf5
  43923f:	xlat   BYTE PTR ds:[ebx]
  439240:	ret    
  439241:	fwait
  439242:	or     al,0x8b
  439244:	sub    dl,ch
  439246:	sbb    edi,edi
  439248:	pop    ecx
  439249:	xchg   ebx,eax
  43924a:	or     DWORD PTR [eax+edi*4+0x3],0x69e2
	...
  439262:	add    BYTE PTR [eax],al
  439264:	mov    ch,0xd9
  439266:	xchg   ebp,eax
  439267:	cli    
  439268:	movntq QWORD PTR [ebp-0x75112e8d],mm2
  43926f:	xlat   BYTE PTR ds:[ebx]
  439270:	xchg   edx,eax
  439271:	sbb    eax,esp
  439273:	cli    
  439274:	mov    bh,BYTE PTR [edx]
  439276:	mov    cs,WORD PTR [edi+0xf]
  439279:	inc    edi
  43927a:	xchg   esi,eax
  43927b:	jae    0x43924e
  43927d:	mov    dl,BYTE PTR [ebp-0x7f16a12e]
  439283:	icebp  
  439284:	loope  0x43927a
  439286:	mov    WORD PTR [ecx],es
  439288:	add    dh,BYTE PTR [ecx+0x7dfebe89]
  43928e:	lahf   
  43928f:	pop    esp
  439290:	ja     0x439291
  439292:	std    
  439293:	push   esp
  439294:	or     esi,DWORD PTR ds:[ecx+edx*2]
  439298:	jmp    0x3c6e:0xb88d0b8c
  43929f:	call   0xfad9f6c9
  4392a4:	ds sub al,0x6
  4392a7:	xchg   edx,edi
  4392a9:	inc    esi
  4392aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4392ab:	arpl   WORD PTR [edx],sp
  4392ad:	dec    edx
  4392ae:	xchg   ebp,eax
  4392af:	test   ch,dh
  4392b1:	cmp    edi,edi
  4392b3:	mov    bh,0xa
  4392b5:	mov    edx,0x960e0004
  4392ba:	sub    al,BYTE PTR [esi]
  4392bc:	sub    BYTE PTR [esi+edx*4],ch
  4392bf:	push   edi
  4392c0:	fnsave [ecx+0x6deaf997]
  4392c6:	inc    edi
  4392c7:	or     BYTE PTR [eax],al
	...
  4392d9:	add    BYTE PTR [eax],al
  4392db:	add    BYTE PTR [esi],ch
  4392dd:	stos   BYTE PTR es:[edi],al
  4392de:	xor    al,0xe8
  4392e0:	jbe    0x4392e3
  4392e2:	xchg   edi,eax
  4392e3:	cli    
  4392e4:	cmp    BYTE PTR [edi-0x6f2fcf1],dh
  4392ea:	xchg   esi,eax
  4392eb:	inc    edx
  4392ed:	lea    eax,[edx]
  4392ef:	das    
  4392f0:	cmc    
  4392f1:	pop    DWORD PTR [edx-0x33]
  4392f4:	jo     0x439281
  4392f6:	out    0x30,eax
  4392f8:	xor    dh,bl
  4392fa:	cmp    eax,0x369018de
  4392ff:	fwait
  439300:	rcr    DWORD PTR [edi-0x27],0x43
  439304:	mov    ch,0x14
  439306:	adc    eax,0xe3cc0a08
  43930b:	sub    eax,0x1f12d3
  439310:	in     al,0xf7
  439312:	xor    edi,ecx
  439314:	ins    BYTE PTR es:[edi],dx
  439315:	add    BYTE PTR [ebp-0x3d],ah
  439318:	loop   0x4392b7
  43931a:	ins    BYTE PTR es:[edi],dx
  43931b:	mov    ch,0xe9
  43931d:	mov    cl,BYTE PTR [ebp-0x5]
  439320:	loope  0x439371
  439322:	out    0x88,eax
  439324:	stc    
  439325:	xchg   ebx,eax
  439326:	pop    ss
  439327:	lods   al,BYTE PTR ds:[esi]
  439328:	loop   0x4392fe
  43932a:	jno    0x4392c6
  43932c:	cmp    ecx,edi
  43932e:	repz idiv BYTE PTR [edx-0x40eef23f]
  439335:	pminub mm0,QWORD PTR [esi*4+0x62d6df7a]
  43933d:	imul   esp,DWORD PTR [eax+0x46],0x0
	...
  439354:	out    0xf4,eax
  439356:	std    
  439357:	mov    bl,dl
  439359:	mov    ecx,0xb1869164
  43935e:	pop    ebp
  43935f:	or     DWORD PTR [ecx],edi
  439361:	(bad)  
  439362:	mov    bl,0xeb
  439364:	jp     0x43936c
  439366:	fcom   DWORD PTR [eax]
  439368:	(bad)  
  439369:	adc    eax,0x63504aa
  43936e:	nop
  43936f:	(bad)  
  439371:	movups XMMWORD PTR [ebx],xmm7
  439374:	pusha  
  439375:	xchg   esi,eax
  439376:	outs   dx,BYTE PTR ds:[esi]
  439377:	leave  
  439378:	ficomp DWORD PTR [edx]
  43937a:	lock add esi,DWORD PTR [ebp-0x7824ff0c]
  439381:	or     cl,bh
  439383:	bound  eax,QWORD PTR [eax+ebp*8]
  439386:	sbb    eax,esi
  439388:	mov    dh,0x8f
  43938a:	pop    ecx
  43938b:	shr    BYTE PTR [edx+0x2e4fc7ae],cl
  439391:	xchg   edi,eax
  439392:	test   DWORD PTR [ecx+ebp*4],esp
  439395:	adc    al,0xc1
  439397:	cmp    eax,0x13390fbc
  43939c:	mov    edx,0xb6318095
  4393a1:	(bad)  
  4393a2:	jae    0x439389
  4393a4:	popa   
  4393a5:	aas    
  4393a6:	out    0xef,al
  4393a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4393a9:	out    0x9,eax
  4393ab:	sahf   
  4393ac:	dec    esp
  4393ad:	cli    
  4393ae:	bound  esp,QWORD PTR [eax-0x8]
  4393b1:	mov    bh,0x5b
  4393b3:	stos   DWORD PTR es:[edi],eax
  4393b4:	test   eax,0x72538f
	...
  4393c9:	add    BYTE PTR [eax],al
  4393cb:	add    BYTE PTR ds:0x3681e47e,bl
  4393d1:	jmp    0x439357
  4393d3:	in     eax,dx
  4393d4:	mov    dh,0x8f
  4393d6:	dec    ebp
  4393d7:	bound  eax,QWORD PTR [edx-0x42157a79]
  4393dd:	inc    edx
  4393de:	dec    ecx
  4393df:	lods   eax,DWORD PTR ds:[esi]
  4393e0:	in     al,0x7e
  4393e2:	retf   0x8356
  4393e5:	stc    
  4393e6:	stc    
  4393e7:	jmp    0xbdcaf6a2
  4393ec:	repnz mov ds:0x8eeab587,al
  4393f2:	(bad)  
  4393f4:	lock add BYTE PTR [ebx-0x5d],0xd4
  4393f9:	mov    dh,0x9d
  4393fc:	or     eax,0x94bffe75
  439401:	or     BYTE PTR [ebp-0x33],cl
  439404:	fimul  WORD PTR [ecx+0x7173a1b2]
  43940a:	test   DWORD PTR [eax],eax
  43940c:	sbb    al,0x57
  43940e:	pop    esi
  43940f:	sar    DWORD PTR [ebx+ecx*4+0x16940b5e],0x76
  439417:	and    al,0xe4
  439419:	mov    al,0x87
  43941b:	dec    esp
  43941c:	sar    ch,0xbe
  43941f:	inc    esp
  439420:	mov    al,0xf7
  439422:	jbe    0x439424
  439424:	mov    WORD PTR [ecx+0x257571e8],ss
  43942a:	test   DWORD PTR [ecx+0x3b0defe0],0x0
	...
  439444:	push   edx
  439445:	xchg   DWORD PTR [ebx+eax*2+0x5000928e],eax
  43944c:	je     0x43940a
  43944e:	into   
  43944f:	(bad)  
  439450:	sbb    ecx,DWORD PTR [ebx]
  439452:	sti    
  439453:	mov    WORD PTR [ebx+edi*8+0x4d8c8b5f],fs
  43945a:	dec    edi
  43945b:	call   0x40be3d
  439460:	lds    edi,FWORD PTR [esi-0x2f88efdc]
  439466:	push   es
  439467:	test   BYTE PTR [esi-0x6c],ch
  43946a:	add    BYTE PTR [eax],al
  43946c:	pushf  
  43946d:	sub    edi,DWORD PTR [ecx]
  43946f:	(bad)  
  439470:	call   0xe203:0xb074f717
  439477:	out    dx,al
  439478:	loope  0x439492
  43947a:	test   DWORD PTR [ebx+0xfa200f],0xc07afd50
  439484:	adc    BYTE PTR [ebx],ch
  439486:	cld    
  439487:	xor    cl,ah
  439489:	adc    eax,0xc21d0443
  43948e:	cmc    
  43948f:	je     0x439491
  439491:	cli    
  439492:	test   eax,0x57fe4603
  439497:	call   0xf9ff3a51
  43949c:	fidiv  DWORD PTR [ebx-0x43]
  43949f:	or     bh,BYTE PTR [ecx]
  4394a1:	mov    ds:0x81b5fffe,al
  4394a6:	add    al,0xb
	...
  4394bc:	or     ch,BYTE PTR [eax]
  4394be:	inc    edx
  4394bf:	sub    eax,0xfffeecbb
  4394c4:	sub    DWORD PTR [edi+0x4c],ecx
  4394c7:	je     0x439490
  4394c9:	fst    QWORD PTR [eax]
  4394cb:	and    al,0xc9
  4394cd:	jno    0x439507
  4394cf:	and    al,0xc1
  4394d1:	into   
  4394d2:	inc    esi
  4394d3:	out    0x90,al
  4394d5:	(bad)  
  4394d6:	stos   DWORD PTR es:[edi],eax
  4394d7:	les    esi,FWORD PTR [esi+eiz*8-0x74f67903]
  4394de:	hlt    
  4394df:	gs mov ch,0x50
  4394e2:	add    ecx,DWORD PTR [ebp+0x4feacaf9]
  4394e8:	ds sbb eax,0x245af5ad
  4394ee:	xchg   edx,eax
  4394ef:	xor    DWORD PTR [ebp-0x5d],0xfffffff8
  4394f3:	jg     0x4394c6
  4394f5:	retf   0x502
  4394f8:	sar    dh,0x2b
  4394fb:	call   0xfad55930
  439500:	dec    esi
  439501:	fdivr  QWORD PTR [ebp+0x7b]
  439504:	fld    DWORD PTR ds:0x44b374fa
  43950a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43950b:	aad    0xfb
  43950d:	gs xchg ecx,eax
  43950f:	out    0x66,eax
  439511:	push   edx
  439512:	xchg   edi,eax
  439513:	cli    
  439514:	ss inc ebx
  439516:	fimul  DWORD PTR [edi]
  439518:	or     ah,BYTE PTR [eax+0x7f]
  43951b:	add    BYTE PTR [ebp+0x127e6],dh
	...
  439531:	add    BYTE PTR [eax],al
  439533:	add    dl,bh
  439535:	jecxz  0x439548
  439537:	adc    DWORD PTR [ebp-0x71],esi
  43953a:	out    0x33,eax
  43953c:	out    dx,al
  43953d:	mov    ds:0x8fa2f26f,al
  439542:	jge    0x439547
  439544:	sub    BYTE PTR [esp+eax*8],dl
  439547:	outs   dx,DWORD PTR ds:[esi]
  439548:	sar    ah,cl
  43954a:	out    0x33,eax
  43954c:	pop    ebp
  43954d:	or     dh,BYTE PTR [ecx+0x22e78dce]
  439553:	idiv   DWORD PTR [esp+edi*8+0x1fd6805c]
  43955a:	call   0xcfa34a62
  43955f:	push   eax
  439560:	mov    eax,0x5a7fd2fd
  439565:	mov    WORD PTR [ebx+0x48],fs
  439568:	mov    ah,0x8f
  43956a:	out    0x29,eax
  43956c:	mov    ah,0xa
  43956e:	pop    esp
  43956f:	fistp  QWORD PTR [esi-0x71]
  439572:	out    0x3,eax
  439574:	lea    esp,[ebx+0x136f9668]
  43957a:	test   al,0x6
  43957c:	xor    DWORD PTR [ebp-0x34afc18],esi
  439582:	cld    
  439583:	ffreep st(6)
  439585:	dec    edi
  439586:	out    0x80,eax
  439588:	adc    cl,BYTE PTR [esp+ebx*2-0x49736ec1]
  43958f:	mov    edx,0x6cb5b8a
  439594:	scas   al,BYTE PTR es:[edi]
  439595:	adc    dl,BYTE PTR [ecx+0x3]
	...
  4395ac:	mov    ch,0x8f
  4395ae:	int    0xf
  4395b0:	cmp    BYTE PTR [ebx-0x187517fd],al
  4395b6:	mov    BYTE PTR [edx+0x7f5cfc1c],bl
  4395bc:	(bad)  
  4395bd:	pop    es
  4395be:	out    0x3,al
  4395c0:	mov    ch,0x5f
  4395c2:	int    0xff
  4395c4:	sbb    al,BYTE PTR [eax+eax*1-0x7b06e2bb]
  4395cb:	sub    edx,eax
  4395cd:	test   DWORD PTR [ebp-0x7af559d1],eax
  4395d3:	lds    edi,FWORD PTR [edx]
  4395d5:	cli    
  4395d6:	stc    
  4395d7:	jmp    0x682bf582
  4395dc:	sbb    eax,0xf66cf9fb
  4395e1:	jg     0x439646
  4395e3:	xchg   ebx,eax
  4395e4:	sbb    BYTE PTR [ecx+0x52],0x64
  4395e8:	jp     0x43959d
  4395ea:	dec    esp
  4395eb:	call   0xbb9b:0x3913f6e6
  4395f2:	add    BYTE PTR [edx+0x75],ch
  4395f5:	xchg   DWORD PTR [ebx+0x10b956d],ecx
  4395fb:	jmp    0xd889eb6
  439600:	ror    DWORD PTR [eax*2-0x74b47efb],0x2d
  439608:	xchg   ebp,eax
  439609:	inc    edi
  43960a:	push   eax
  43960b:	sbb    ah,BYTE PTR [esp+ecx*1+0xcd85]
	...
  439622:	add    BYTE PTR [eax],al
  439624:	out    dx,al
  439625:	cld    
  439626:	stc    
  439627:	jmp    0xcdb89ed2
  43962c:	mov    ds:0xb6f9d7e7,al
  439631:	pop    DWORD PTR [ebx+0x68ada5a9]
  439637:	jno    0x43967d
  439639:	sti    
  43963a:	stc    
  43963b:	jbe    0x4395e2
  43963d:	mov    bl,0x1c
  43963f:	outs   dx,BYTE PTR ds:[esi]
  439640:	and    cl,bl
  439642:	push   cs
  439643:	test   eax,0x574f6b6
  439648:	sbb    eax,0x27293412
  43964d:	mov    ebx,0xf6634e00
  439652:	je     0x439654
  439654:	mov    eax,0xdad6f6fb
  439659:	dec    edi
  43965a:	and    al,0xf
  43965c:	or     eax,0xf45349c0
  439661:	(bad)  
  439662:	adc    BYTE PTR [eax],al
  439664:	fsub   QWORD PTR [ebx]
  439666:	adc    eax,0x4ee864
  43966b:	add    BYTE PTR [eax-0x25],0x6
  43966f:	add    DWORD PTR [ecx],ebp
  439671:	(bad)  
  439672:	cmc    
  439673:	mov    ah,0xf8
  439675:	mov    dh,0xfa
  439677:	dec    esp
  439679:	adc    DWORD PTR [esi+0x24],edi
  43967c:	ror    BYTE PTR [esi+0x4aa30000],0x1d
  439683:	cld    
  439684:	pushf  
  439685:	mov    es,WORD PTR [eax]
  439687:	mov    DWORD PTR [eax],eax
	...
  439699:	add    BYTE PTR [eax],al
  43969b:	add    al,bl
  43969d:	out    dx,eax
  43969e:	sub    DWORD PTR [ebp+0x5029efc8],ecx
  4396a4:	or     DWORD PTR [edx-0x45a4e3dc],0x24
  4396ab:	cmp    al,0x9e
  4396ad:	dec    edi
  4396ae:	cmp    al,BYTE PTR [eax]
  4396b0:	dec    ebx
  4396b1:	mov    edx,0x4fc94024
  4396b6:	cmp    al,BYTE PTR [eax]
  4396b8:	sbb    edi,DWORD PTR [edx+0x4ff44424]
  4396be:	cmp    al,BYTE PTR [eax]
  4396c0:	or     edi,DWORD PTR [edx+0x4fc04824]
  4396c6:	cmp    al,BYTE PTR [eax]
  4396c8:	sbb    edi,DWORD PTR [edx-0x45f0b3dc]
  4396ce:	cmp    al,BYTE PTR [eax]
  4396d0:	or     edi,DWORD PTR [edx-0x455bafdc]
  4396d6:	cmp    al,BYTE PTR [eax]
  4396d8:	fstp   TBYTE PTR [edx-0x45a1abdc]
  4396de:	cmp    al,BYTE PTR [eax]
  4396e0:	mov    ch,0x50
  4396e2:	retf   
  4396e3:	adc    ecx,DWORD PTR fs:[ecx+0x27]
  4396e7:	add    DWORD PTR [eax],edi
  4396e9:	ins    BYTE PTR es:[edi],dx
  4396ea:	fsincos 
  4396ec:	mov    ch,0xe8
  4396ee:	std    
  4396ef:	out    0x65,eax
  4396f1:	xchg   sp,ax
  4396f3:	cli    
  4396f4:	or     eax,DWORD PTR ds:[esi]
  4396f7:	xchg   DWORD PTR [ecx-0x34],esp
  4396fa:	in     eax,dx
  4396fb:	out    0xbe,eax
  4396fd:	sahf   
  4396fe:	xchg   edx,eax
  4396ff:	cli    
	...
  439714:	cs sbb al,0xda
  439717:	adc    ebx,ebp
  439719:	cmc    
  43971a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43971b:	cld    
  43971c:	retf   0xa614
  43971f:	pop    ebx
  439720:	test   al,0xfa
  439722:	lea    ebx,[edx+0x5b]
  439725:	xor    eax,0x943e56be
  43972a:	xor    bh,BYTE PTR [esi-0x78c7194f]
  439730:	xchg   ecx,eax
  439731:	push   0xe6b737a0
  439736:	std    
  439737:	dec    esi
  439738:	jmp    0x439795
  43973a:	pop    ss
  43973b:	mov    eax,0xfa9ba89d
  439740:	cmp    BYTE PTR [esi+0x2f],0x8
  439744:	adc    esp,DWORD PTR [esi+0x9]
  439747:	dec    esp
  439748:	mov    ch,0x30
  43974a:	dec    eax
  43974b:	sti    
  43974c:	mov    ch,0x1
  43974e:	or     BYTE PTR [ecx-0x7302194c],0xf6
  439755:	(bad)  
  439756:	jl     0x43979c
  439758:	pop    ebp
  439759:	ret    0x748d
  43975c:	pop    ebp
  43975d:	mov    DWORD PTR [ecx+0x3e],edi
  439760:	out    dx,eax
  439761:	push   ds
  439762:	std    
  439763:	loop   0x43979d
  439765:	cmp    BYTE PTR [ecx-0x9],0x3c
  439769:	in     al,dx
  43976a:	test   DWORD PTR [esi+0x2a],edi
  43976d:	nop
  43976e:	bound  ebx,QWORD PTR [ecx]
  439770:	fld    DWORD PTR [ecx]
  439772:	out    0x4,eax
  439774:	scas   al,BYTE PTR es:[edi]
  439775:	adc    ecx,ebx
  439777:	add    al,0x0
	...
  439789:	add    BYTE PTR [eax],al
  43978b:	add    BYTE PTR [ebp-0x44844071],dh
  439791:	(bad)  
  439792:	out    0x92,eax
  439794:	leave  
  439795:	mov    ebx,DWORD PTR [edi+eax*2]
  439798:	mov    ch,0xf8
  43979a:	fdiv   QWORD PTR [ebx-0x2f18b040]
  4397a0:	call   0xcc477f34
  4397a5:	dec    esi
  4397a6:	call   0xffa44cae
  4397ab:	add    DWORD PTR [ebx],0xdd3b0afa
  4397b1:	push   ecx
  4397b2:	push   ss
  4397b3:	xchg   edx,eax
  4397b4:	mov    edi,0xb9bc350a
  4397b9:	clc    
  4397ba:	repnz fwait
  4397bc:	test   eax,0x3992eb15
  4397c1:	adc    dh,BYTE PTR [eax+edx*4-0x7ec80761]
  4397c8:	and    esp,ebx
  4397ca:	mov    bx,0xe78f
  4397ce:	popf   
  4397cf:	push   es
  4397d0:	(bad)  
  4397d1:	clc    
  4397d2:	outs   dx,DWORD PTR ds:[esi]
  4397d3:	dec    eax
  4397d4:	jg     0x4397e9
  4397d6:	test   al,0x17
  4397d8:	rol    DWORD PTR [edi+eiz*8],cl
  4397db:	xchg   edx,eax
  4397dc:	jmp    0x515bf6bc
  4397e1:	mov    bl,0xe8
  4397e3:	add    ah,BYTE PTR [edi]
  4397e5:	iret   
  4397e6:	xchg   edx,eax
  4397e7:	stos   DWORD PTR es:[edi],eax
  4397e8:	ret    
  4397e9:	iret   
  4397ea:	fs ds mov ecx,0x33a8ac
	...
  439801:	add    BYTE PTR [eax],al
  439803:	add    dh,ah
  439805:	aas    
  439806:	jmp    0x7a1b21a6
  43980b:	xchg   edx,eax
  43980c:	sub    DWORD PTR [edx+0x53ae9500],eax
  439812:	cli    
  439813:	sub    DWORD PTR [ecx+0x7166fbf9],0xb6e8ffe6
  43981d:	or     al,BYTE PTR [ecx+eiz*1+0x27f9f525]
  439824:	mov    dh,0x8f
  439826:	inc    eax
  439827:	mov    al,0x9d
  439829:	idiv   BYTE PTR [eax]
  43982b:	lods   al,BYTE PTR ds:[esi]
  43982c:	and    al,0x85
  43982e:	test   BYTE PTR [ecx],ch
  439830:	mov    dh,0x8f
  439832:	add    bl,al
  439834:	mov    dh,0x71
  439836:	add    BYTE PTR [ebp+ebp*2-0x9],dh
  43983a:	push   eax
  43983b:	(bad)  
  43983d:	out    dx,eax
  43983e:	and    al,0x1
  439840:	and    eax,0x3ea435f5
  439845:	test   DWORD PTR [ebx+0x8fb651],eax
  43984b:	jb     0x4397f2
  43984d:	imul   DWORD PTR [eax-0x47]
  439850:	int    0x8f
  439852:	add    BYTE PTR [ebx-0x26bbfb43],al
  439858:	jmp    0x2b07b444
  43985d:	cli    
  43985e:	test   BYTE PTR [ecx+0x6a6298ad],ch
  439864:	mov    edx,0x3c03ff
	...
  439879:	add    BYTE PTR [eax],al
  43987b:	add    BYTE PTR [ebx+0x2324b18a],cl
  439881:	bound  ecx,QWORD PTR [ebx+0x5def1514]
  439887:	xchg   esi,eax
  439888:	inc    edi
  439889:	cli    
  43988a:	test   DWORD PTR [ecx+eiz*2-0x12],eax
  43988e:	(bad)  
  43988f:	fidiv  DWORD PTR [esi+0x13]
  439892:	rcr    DWORD PTR ds:0x24b28aab,0x2d
  439899:	dec    edi
  43989a:	dec    eax
  43989b:	add    BYTE PTR [eax-0xb],al
  43989e:	inc    ecx
  43989f:	dec    eax
  4398a0:	inc    ecx
  4398a1:	mov    edi,0x92ab45be
  4398a6:	loope  0x4398f6
  4398a8:	mov    dl,0xc
  4398aa:	jge    0x43989e
  4398ac:	adc    BYTE PTR [esi+0x4b518d3d],bl
  4398b2:	loope  0x439905
  4398b4:	je     0x4398d6
  4398b6:	imul   DWORD PTR [edx-0x18]
  4398b9:	xchg   esp,eax
  4398ba:	or     bh,bh
  4398bc:	add    ebx,ebx
  4398be:	iret   
  4398bf:	inc    ebx
  4398c0:	or     al,0x20
  4398c2:	adc    eax,0x530e6c
  4398c7:	mov    ebp,DWORD PTR [esi+ecx*1+0x740574f0]
  4398ce:	inc    esp
  4398cf:	in     al,dx
  4398d0:	inc    esi
  4398d1:	xchg   ebx,eax
  4398d2:	dec    esi
  4398d3:	mov    edx,ecx
  4398d5:	jae    0x4398d0
  4398d7:	adc    eax,DWORD PTR [bp+0x3b]
  4398db:	add    BYTE PTR [ebx+edx*4],ah
  4398de:	add    BYTE PTR [edx],al
	...
  4398f4:	int3   
  4398f5:	jne    0x439973
  4398f7:	mov    eax,0xe8044a15
  4398fc:	add    al,0x14
  4398fe:	idiv   edi
  439900:	adc    bl,dl
  439902:	je     0x43990a
  439904:	loop   0x439919
  439906:	ret    0x6a13
  439909:	pop    ds
  43990a:	div    DWORD PTR [ebp+0x48]
  43990d:	sbb    bh,BYTE PTR [edx+0x7a1f7a13]
  439913:	jge    0x439950
  439915:	xchg   edx,eax
  439916:	add    eax,0xf7209c84
  43991b:	call   edi
  43991d:	popf   
  43991e:	clc    
  43991f:	call   0x40ad1e
  439924:	int3   
  439925:	test   ebp,esi
  439927:	add    BYTE PTR [ebp-0x490e0a6d],dh
  43992d:	out    0x0,eax
  43992f:	test   DWORD PTR [edi-0x25056ef2],edi
  439935:	arpl   WORD PTR [edx],dx
  439937:	mov    eax,0xfa96e21d
  43993c:	sub    ah,BYTE PTR [ebp+0x14]
  43993f:	push   eax
  439940:	or     eax,0x1afa77a8
  439945:	cmp    DWORD PTR [esi-0x6fa15979],edx
  43994b:	xchg   bl,dh
  43994d:	dec    edi
  43994e:	ins    BYTE PTR es:[edi],dx
  43994f:	loop   0x439953
  439951:	dec    ebp
  439952:	das    
  439953:	das    
  439954:	cmc    
  439955:	xor    BYTE PTR [edi+0xbd],dh
	...
  43996b:	add    BYTE PTR [ecx-0x2678cd18],bh
  439971:	push   0x36867399
  439976:	cmp    DWORD PTR [esi-0x52],esp
  439979:	arpl   WORD PTR [edx],dx
  43997b:	int3   
  43997c:	ins    DWORD PTR es:[edi],dx
  43997d:	nop
  43997e:	jge    0x439977
  439980:	retf   
  439981:	test   BYTE PTR [esp+esi*2-0x53],bh
  439985:	imul   esp,DWORD PTR [edx],0x8feb5fc
  43998b:	add    DWORD PTR [edi],ebx
  43998d:	jmp    0x11090dbe
  439992:	out    dx,al
  439993:	mov    ebx,?
  439995:	loop   0x4399c4
  439997:	lea    ebx,[eax]
  439999:	shl    DWORD PTR [ebp-0x42],cl
  43999c:	popf   
  43999d:	out    0xa2,al
  43999f:	cli    
  4399a0:	mov    dl,BYTE PTR [edx+ecx*1+0x18]
  4399a4:	jmp    0x4a6:0xa773f7cd
  4399ab:	push   eax
  4399ac:	or     ch,BYTE PTR [edi+ecx*1-0xc]
  4399b0:	sub    bl,BYTE PTR ds:[ebp-0x5d6fa410]
  4399b7:	(bad)  
  4399b8:	jmp    0x4399bc
  4399ba:	and    bh,BYTE PTR [edx]
  4399bc:	in     eax,0x2
  4399be:	adc    eax,0x7fd1338c
  4399c3:	mov    ds:0x8f82f554,al
  4399c8:	shl    edi,0x6c
  4399cb:	dec    ecx
  4399cc:	add    ebp,esi
  4399ce:	cld    
  4399cf:	xchg   edi,eax
	...
  4399e4:	cmp    DWORD PTR [ebx+0x5b],esi
  4399e7:	(bad)
  4399eb:	sbb    ebp,edx
  4399ed:	pop    eax
  4399ee:	dec    edi
  4399ef:	mov    ebx,0x8352f312
  4399f4:	neg    BYTE PTR [edi-0x7b60739a]
  4399fa:	ins    BYTE PTR es:[edi],dx
  4399fb:	push   esi
  4399fc:	cli    
  4399fd:	hlt    
  4399fe:	out    0x7a,eax
  439a00:	neg    DWORD PTR [edi-0x43]
  439a03:	add    al,0x5d
  439a05:	adc    DWORD PTR [bp+di-0x4b],eax
  439a09:	hlt    
  439a0a:	cld    
  439a0b:	imul   eax,ebp,0x4f
  439a0e:	out    0x7c,eax
  439a10:	jns    0x439999
  439a12:	ins    BYTE PTR es:[edi],dx
  439a13:	les    edi,FWORD PTR [edi-0x4afb90f5]
  439a19:	pop    DWORD PTR [edx]
  439a1b:	stc    
  439a1c:	stos   BYTE PTR es:[edi],al
  439a1d:	mov    al,ds:0x3cf003a7
  439a22:	call   0xdcbe4f2a
  439a27:	mov    gs,WORD PTR [ecx]
  439a29:	mov    dl,ah
  439a2b:	clc    
  439a2c:	pop    edx
  439a2d:	mov    eax,ds:0x6b120427
  439a32:	fild   WORD PTR [ebx]
  439a34:	or     dh,BYTE PTR [ebx-0x21]
  439a37:	add    ecx,DWORD PTR [ecx]
  439a39:	jns    0x439a88
  439a3b:	sub    al,0x13
  439a3d:	mov    BYTE PTR [edx+0xdd9ad8],bh
  439a43:	sub    dh,BYTE PTR [ecx+0x3d13f8]
	...
  439a59:	add    BYTE PTR [eax],al
  439a5b:	add    BYTE PTR [edi-0x4c],ah
  439a5e:	add    BYTE PTR [edx+0x2e],dh
  439a61:	or     edi,edx
  439a63:	adc    eax,0x251c0c84
  439a68:	inc    ebx
  439a69:	mov    ah,0x0
  439a6b:	add    ecx,DWORD PTR [ecx+0x3]
  439a6e:	inc    ebx
  439a6f:	in     eax,dx
  439a70:	xchg   BYTE PTR [edx],al
  439a72:	inc    edx
  439a73:	in     eax,0xe6
  439a75:	clc    
  439a76:	int    0x62
  439a78:	mov    al,0x6d
  439a7a:	ss pusha 
  439a7c:	mov    ebx,0x35fdc274
  439a81:	push   ecx
  439a82:	adc    al,0xb7
  439a84:	xabort 0xcd
  439a87:	bound  edi,QWORD PTR [ebp-0x79]
  439a8a:	jge    0x439ab1
  439a8c:	push   cs
  439a8d:	outs   dx,BYTE PTR ds:[esi]
  439a8e:	jge    0x439a56
  439a90:	mov    edx,0xa6a6878f
  439a95:	jnp    0x439aba
  439a97:	imul   edi,DWORD PTR [ebx-0x2c4aff69],0x9ca67d6d
  439aa1:	(bad)  
  439aa2:	je     0x439aa5
  439aa4:	mov    ah,BYTE PTR [edi+0x17]
  439aa7:	sub    DWORD PTR [edi+ecx*4+0x68],esi
  439aab:	jmp    0x11442266
  439ab0:	xor    DWORD PTR [esi+0x333de900],eax
  439ab6:	jne    0x439aa5
  439ab8:	push   es
  439ab9:	nop
  439aba:	in     eax,0xd9
  439abc:	jmp    0x439aa5
  439abe:	dec    ecx
  439abf:	sti    
	...
  439ad4:	sub    dh,dh
  439ad6:	stc    
  439ad7:	push   esp
  439ad8:	xchg   ecx,eax
  439ad9:	jmp    0x439b52
  439adb:	jl     0x439b15
  439add:	imul   BYTE PTR [esi]
  439adf:	test   eax,0x5555d0
  439ae4:	inc    ebp
  439ae5:	into   
  439ae6:	std    
  439ae7:	dec    ecx
  439ae9:	js     0x439ad0
  439aeb:	cmp    DWORD PTR [eax+0x4],0x7b
  439aef:	in     al,dx
  439af0:	mov    al,ds:0xc6574ec0
  439af5:	lea    ebp,[eax+0x21]
  439af8:	dec    ecx
  439af9:	ret    
  439afa:	ins    DWORD PTR es:[edi],dx
  439afb:	call   0x3b8381
  439b00:	aad    0x47
  439b02:	and    al,0x1c
  439b04:	leave  
  439b05:	retf   
  439b06:	je     0x439b0e
  439b08:	fcom   QWORD PTR [esi]
  439b0a:	add    DWORD PTR [si],ebx
  439b0d:	(bad)  
  439b0e:	(bad)  
  439b10:	xchg   ebx,eax
  439b11:	cli    
  439b12:	jne    0x439b25
  439b14:	dec    esp
  439b15:	(bad)  
  439b16:	push   eax
  439b17:	dec    DWORD PTR [ecx]
  439b19:	ja     0x439b26
  439b1b:	inc    eax
  439b1c:	sbb    al,0x17
  439b1e:	je     0x439b3c
  439b20:	jb     0x439b26
  439b22:	jle    0x439ae4
  439b24:	add    ecx,DWORD PTR [ebx]
  439b26:	inc    edx
  439b27:	add    esp,ebx
  439b29:	mov    fs,edi
  439b2b:	daa    
  439b2c:	fisttp QWORD PTR [esi-0x14bf7500]
  439b32:	or     DWORD PTR [ebp-0x17f214e8],ecx
	...
  439b4c:	sbb    ecx,DWORD PTR [eax]
  439b4e:	std    
  439b4f:	call   DWORD PTR [ebp+0x47]
  439b52:	and    al,0xc
  439b54:	dec    edi
  439b55:	add    esi,edi
  439b57:	cmovs  esp,DWORD PTR [edi-0x7]
  439b5b:	call   FWORD PTR [edi+ecx*1-0x7183dba2]
  439b62:	bound  edx,QWORD PTR [eax+0x1]
  439b65:	dec    eax
  439b66:	and    al,0x28
  439b68:	push   es
  439b69:	mov    WORD PTR [eax-0x18],ss
  439b6c:	into   
  439b6d:	push   ecx
  439b6e:	stc    
  439b6f:	push   DWORD PTR [ebp-0x2adbf693]
  439b75:	ror    DWORD PTR gs:[ebx],0x36
  439b79:	dec    esp
  439b7a:	call   0x6ff548a
  439b7f:	sti    
  439b80:	mov    ds:0xc773f339,al
  439b85:	test   al,0x4
  439b87:	jg     0x439be6
  439b89:	enter  0x6d12,0x3e
  439b8d:	fnstcw WORD PTR [edx+0x4b]
  439b90:	xchg   ecx,eax
  439b91:	(bad)  
  439b92:	iret   
  439b93:	(bad)  
  439b94:	das    
  439b95:	jmp    0x887:0x68654f7a
  439b9c:	stos   BYTE PTR es:[edi],al
  439b9d:	in     al,dx
  439b9e:	ja     0x439b5d
  439ba0:	push   ds
  439ba1:	sar    BYTE PTR [edx+0x4f],cl
  439ba4:	bound  ebp,QWORD PTR [eax-0x79]
  439ba7:	add    al,0xa2
  439ba9:	in     al,0x1
  439bab:	leave  
  439bac:	push   ds
  439bad:	(bad)  
  439bae:	jp     0x439bff
	...
  439bc4:	sub    ch,BYTE PTR [eax-0x79]
  439bc7:	add    al,0x8a
  439bc9:	stc    
  439bca:	add    DWORD PTR [ecx+0x311ad31],ebp
  439bd0:	mov    ebp,0xe2e3ee7
  439bd5:	dec    ebp
  439bd6:	add    al,0xc0
  439bd8:	aad    0xeb
  439bda:	jne    0x439bdc
  439bdc:	es out 0x43,eax
  439bdf:	out    0xfa,eax
  439be1:	imul   edi,DWORD PTR [ebp-0x579b628c],0x74
  439be8:	cdq    
  439be9:	test   eax,0xe7952441
  439bee:	std    
  439bef:	push   DWORD PTR [ebp+0x3e080df1]
  439bf5:	jb     0x439bf0
  439bf7:	cli    
  439bf8:	sub    ch,bl
  439bfa:	jp     0x439c57
  439bfc:	ror    DWORD PTR [edi-0x7f063dd],1
  439c02:	fimul  DWORD PTR [ebx-0x1bf4b3c7]
  439c08:	repnz out 0xa0,eax
  439c0b:	mov    DWORD PTR [edi-0xf],edi
  439c0e:	outs   dx,BYTE PTR ds:[esi]
  439c0f:	inc    eax
  439c10:	cdq    
  439c11:	or     edi,0x31
  439c14:	(bad)  
  439c15:	icebp  
  439c16:	mov    dl,0x79
  439c18:	imul   BYTE PTR [ebx+0x314d33d7]
  439c1e:	nop
  439c1f:	mov    ecx,DWORD PTR [edi+0xb]
  439c22:	test   al,0xfb
  439c24:	xor    eax,eax
  439c26:	xchg   edx,eax
  439c27:	mov    eax,DWORD PTR [eax]
	...
  439c39:	add    BYTE PTR [eax],al
  439c3b:	add    BYTE PTR [edi],bh
  439c3d:	add    esp,DWORD PTR [eax+eiz*8]
  439c40:	mov    ds:0xdc598f5f,al
  439c45:	icebp  
  439c46:	jp     0x439cc7
  439c48:	add    cl,BYTE PTR [ebx]
  439c4a:	(bad)  
  439c4b:	adc    BYTE PTR [esi+0x4],dh
  439c4e:	in     al,dx
  439c4f:	ffreep st(2)
  439c51:	or     ah,BYTE PTR [ebx+0x10]
  439c54:	int3   
  439c55:	add    al,0x57
  439c57:	xchg   DWORD PTR [esi-0x64fbf855],edx
  439c5d:	pop    edi
  439c5e:	pop    esp
  439c5f:	inc    eax
  439c60:	shl    DWORD PTR [edi-0x187afc33],1
  439c66:	gs pop ecx
  439c68:	jmp    0xed65:0xaec066f0
  439c6f:	js     0x439ce7
  439c71:	stos   DWORD PTR es:[edi],eax
  439c72:	fbstp  TBYTE PTR [ecx]
  439c74:	gs lock hlt 
  439c77:	aaa    
  439c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439c79:	dec    edi
  439c7a:	out    0x86,eax
  439c7c:	test   BYTE PTR [ebx-0x506ebfa4],0x97
  439c83:	fwait
  439c84:	adc    esi,ebx
  439c86:	cli    
  439c87:	mov    ch,BYTE PTR [ebx]
  439c89:	retf   0xb300
  439c8c:	fistp  QWORD PTR [edx-0x39]
  439c8f:	call   0x683f:0xe710c03e
  439c96:	xor    BYTE PTR [ecx+esi*4-0x71],dl
  439c9a:	stc    
  439c9b:	sbb    al,0x7d
  439c9d:	sar    DWORD PTR ds:0xe9,cl
	...
  439cb3:	add    BYTE PTR [edi],ch
  439cb5:	fwait
  439cb6:	rcr    bl,1
  439cb8:	test   BYTE PTR [edi-0x704e14c5],0x0
  439cbf:	out    0xe2,al
  439cc1:	jns    0x439cbc
  439cc3:	scas   al,BYTE PTR es:[edi]
  439cc4:	das    
  439cc5:	cmc    
  439cc6:	je     0x439c95
  439cc8:	pop    edx
  439cc9:	call   0xf58317a9
  439cce:	sub    eax,0x55558fa9
  439cd3:	bound  edx,QWORD PTR ds:0xb6edbe53
  439cd9:	pop    edx
  439cda:	test   DWORD PTR [ebp+0x1a44e433],ecx
  439ce0:	out    0x5c,eax
  439ce2:	stc    
  439ce3:	hlt    
  439ce4:	and    al,BYTE PTR [ebx]
  439ce6:	pop    esp
  439ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439ce8:	aas    
  439ce9:	jnp    0x439cf3
  439ceb:	jb     0x439d13
  439ced:	call   0xf572fba8
  439cf2:	jge    0x439cb8
  439cf4:	lock mov WORD PTR cs:[edx+edi*1+0xcf3e840],gs
  439cfd:	idiv   cl
  439cff:	bound  ecx,QWORD PTR [esi]
  439d01:	pop    es
  439d02:	pop    esp
  439d03:	loope  0x439d3a
  439d05:	fnstenv [ebx+0x6]
  439d08:	dec    esp
  439d09:	dec    ebx
  439d0a:	mov    esp,0x412fe3b9
  439d0f:	add    ebp,esp
  439d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439d12:	cli    
  439d13:	push   cs
  439d14:	cmp    al,bl
  439d16:	mov    eax,DWORD PTR [eax]
	...
  439d2c:	xor    DWORD PTR [ebx],ebx
  439d2e:	loop   0x439d30
  439d30:	jno    0x439d4b
  439d32:	neg    DWORD PTR [edi+0x4a]
  439d35:	ins    DWORD PTR es:[edi],dx
  439d36:	mov    edx,0x1d4d55b
  439d3b:	add    BYTE PTR [edi],al
  439d3d:	lahf   
  439d3e:	cld    
  439d3f:	xor    ecx,0xffffffe7
  439d42:	stc    
  439d43:	test   BYTE PTR [edx-0x80],ah
  439d46:	das    
  439d47:	(bad)  
  439d48:	out    0xc1,eax
  439d4a:	mov    WORD PTR [ebp+0x1c],es
  439d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439d4e:	mov    ecx,DWORD PTR [edi+0x1a]
  439d51:	or     al,0x96
  439d53:	out    dx,al
  439d54:	sub    ebx,DWORD PTR [ecx]
  439d56:	test   eax,eax
  439d58:	mov    eax,ds:0x638b5fe4
  439d5d:	mov    cl,0x31
  439d5f:	inc    ebp
  439d60:	cs lahf 
  439d62:	add    ah,BYTE PTR [esi-0x29]
  439d65:	push   eax
  439d66:	cli    
  439d67:	gs scas al,BYTE PTR es:[di]
  439d6a:	hlt    
  439d6b:	je     0x439d56
  439d6d:	sbb    BYTE PTR [ebp+0xc],al
  439d70:	lahf   
  439d71:	shl    BYTE PTR [ebx],1
  439d73:	cmp    DWORD PTR [ecx],esp
  439d75:	out    0x6b,eax
  439d77:	shl    BYTE PTR [edi+0x618d3401],cl
  439d7d:	push   edi
  439d7e:	dec    ecx
  439d7f:	push   0xffffffd6
  439d81:	mov    esp,0x66687d8b
  439d86:	inc    esp
  439d87:	or     dl,dl
  439d89:	scas   al,BYTE PTR es:[edi]
  439d8a:	add    eax,0xfc9e6500
  439d8f:	call   0x439d94
	...
  439da4:	mov    ebx,fs
  439da6:	idiv   edi
  439da8:	push   ecx
  439da9:	shr    DWORD PTR [ebp+0x12],cl
  439dac:	push   edi
  439dad:	scas   al,BYTE PTR es:[edi]
  439dae:	cld    
  439daf:	xor    ecx,DWORD PTR [esi+0x21ffeb00]
  439db5:	jmp    0x439d98
  439db7:	mov    bh,0xb5
  439db9:	rol    DWORD PTR [edi-0x6cbd206],cl
  439dbf:	cli    
  439dc0:	sub    cl,ah
  439dc2:	xchg   ebp,eax
  439dc3:	fstp   TBYTE PTR [edx+0x8588ee]
  439dc9:	not    BYTE PTR [esi-0x77026590]
  439dcf:	dec    esi
  439dd0:	popf   
  439dd1:	es stc 
  439dd3:	stc    
  439dd4:	mov    cl,BYTE PTR [edx-0x39e61755]
  439dda:	mov    dl,bh
  439ddc:	jecxz  0x439e4f
  439dde:	mov    es,WORD PTR [ebx+ebp*2-0x4a82861b]
  439de5:	clc    
  439de6:	std    
  439de7:	test   ebx,ecx
  439de9:	jl     0x439d9e
  439deb:	jae    0x439dc6
  439ded:	test   ebx,edx
  439def:	enter  0x3586,0x7e
  439df3:	cmc    
  439df4:	test   DWORD PTR [ebx-0x8147a0d],eax
  439dfa:	jge    0x439df1
  439dfc:	mov    ebp,0x2f7ff984
  439e01:	mov    al,0x9
  439e03:	add    bl,BYTE PTR [edi+0xc184f4]
	...
  439e19:	add    BYTE PTR [eax],al
  439e1b:	add    BYTE PTR [edi-0x3c79cc7b],dh
  439e21:	dec    ebx
  439e22:	sub    edx,eax
  439e24:	xor    eax,0xa572f671
  439e29:	(bad)  
  439e2a:	clc    
  439e2b:	mov    ecx,0x39eb6e7
  439e30:	xchg   ebx,eax
  439e31:	stc    
  439e32:	mov    ebx,0xcd3f3661
  439e37:	out    0x9b,al
  439e39:	jnp    0x439e66
  439e3b:	mov    ebx,0x72faa135
  439e40:	(bad)
  439e43:	mov    ecx,0xa2288ee7
  439e48:	mov    dh,0x75
  439e4a:	out    0xbd,al
  439e4c:	push   esp
  439e4d:	adc    al,BYTE PTR [ecx]
  439e4f:	rcl    bl,1
  439e51:	test   BYTE PTR [ebp+ebp*1+0x4e],bl
  439e55:	adc    bh,bh
  439e57:	std    
  439e58:	daa    
  439e59:	test   BYTE PTR [ecx+0x28c25cf8],al
  439e5f:	mov    ds:0xbde675b6,al
  439e64:	adc    al,0x11
  439e66:	shr    DWORD PTR [edi],1
  439e68:	mov    esi,0x9a3eb124
  439e6d:	and    ch,BYTE PTR [edi]
  439e6f:	sub    BYTE PTR [eax+0x64],0xe6
  439e73:	cmp    BYTE PTR [edi-0x71],0x49
  439e77:	jge    0x439e2b
  439e79:	sbb    BYTE PTR [ebx-0x92f00d9],ah
  439e7f:	mov    esp,0x0
	...
  439e94:	rcl    BYTE PTR [edi+0x47ba7d41],1
  439e9a:	inc    ecx
  439e9b:	ret    
  439e9c:	xor    edx,eax
  439e9e:	adc    esi,DWORD PTR [eax]
  439ea0:	cmp    ebx,DWORD PTR [edx+0x5dc6bd6b]
  439ea6:	(bad)  
  439ea7:	ret    
  439ea8:	mov    dl,0xe6
  439eaa:	aam    0x10
  439eac:	mov    al,0x79
  439eae:	in     eax,0x2b
  439eb0:	sbb    dl,BYTE PTR [ebx+0x62d38d67]
  439eb6:	call   0x59e405fc
  439ebb:	fwait
  439ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439ebd:	punpcklwd mm1,mm5
  439ec0:	jg     0x439e48
  439ec2:	mov    esi,0xda75b08d
  439ec7:	inc    ebp
  439ec8:	std    
  439ec9:	jne    0x439eb1
  439ecb:	xchg   esp,eax
  439ecc:	push   esp
  439ecd:	adc    BYTE PTR [edx-0x2c],cl
  439ed0:	scas   eax,DWORD PTR es:[edi]
  439ed1:	and    al,0x1
  439ed3:	aas    
  439ed4:	ja     0x439eeb
  439ed6:	pop    es
  439ed7:	imul   eax,DWORD PTR [eax-0x43],0xd8350b7b
  439ede:	je     0x439eca
  439ee0:	aaa    
  439ee1:	aad    0xff
  439ee3:	in     eax,0x6b
  439ee5:	(bad)  
  439ee6:	test   al,0xeb
  439ee8:	ret    0x6791
  439eeb:	xor    BYTE PTR [edx],dh
  439eed:	jmp    0x170487f2
  439ef2:	or     dl,BYTE PTR [edi-0x7c3f4289]
	...
  439f0c:	mov    gs,WORD PTR [esi-0x79]
  439f0f:	out    dx,al
  439f10:	fisubr WORD PTR [esi+eax*4]
  439f13:	sub    ch,al
  439f15:	in     al,dx
  439f16:	cmp    eax,0xab790d
  439f1b:	jmp    0xe4b68bf6
  439f20:	fwait
  439f21:	call   0x1ba0a49a
  439f26:	js     0x439f41
  439f28:	xor    ah,BYTE PTR [eax+0x24]
  439f2b:	fnstsw WORD PTR [ebx]
  439f2d:	popa   
  439f2e:	add    al,0x91
  439f30:	sbb    ch,dh
  439f32:	sti    
  439f33:	sahf   
  439f34:	fwait
  439f35:	adc    al,cl
  439f37:	sbb    eax,0x82001fb5
  439f3c:	mov    ah,0xbd
  439f3e:	shr    BYTE PTR [ebx-0x179813d2],0x37
  439f45:	iret   
  439f46:	adc    BYTE PTR [ecx+0x6efb24b9],al
  439f4c:	data16 (bad) 
  439f4e:	mov    ebp,0xf9df8fbf
  439f53:	xlat   BYTE PTR ds:[ebx]
  439f54:	(bad)  
  439f55:	test   DWORD PTR [ecx-0xd16cf19],0xff9412a5
  439f5f:	call   FWORD PTR [ebx+0xc4f79ea]
  439f65:	nop
  439f66:	je     0x439f6e
  439f68:	cmp    cl,BYTE PTR [eax]
  439f6a:	outs   dx,BYTE PTR ds:[esi]
  439f6b:	push   cs
  439f6c:	mov    ds:0xc68315,al
	...
  439f81:	add    BYTE PTR [eax],al
  439f83:	add    dl,dh
  439f85:	int    0xfd
  439f87:	dec    DWORD PTR [ecx]
  439f89:	imul   esp,ebp,0x8118a883
  439f8f:	in     al,dx
  439f90:	nop
  439f91:	out    0xf9,al
  439f93:	dec    DWORD PTR [edi-0x43]
  439f96:	sub    eax,eax
  439f98:	dec    ebx
  439f99:	dec    edi
  439f9a:	mov    edi,DWORD PTR [eax+ebp*2-0x41]
  439f9e:	sbb    cl,0xb4
  439fa1:	push   0xc193fdde
  439fa6:	mov    ecx,0x29efd8c7
  439fab:	cld    
  439fac:	adc    dl,BYTE PTR [eax+eax*1-0x77]
  439fb0:	fsubr  st,st(7)
  439fb2:	jns    0x439fb4
  439fb4:	pop    esp
  439fb5:	pop    DWORD PTR [edi-0x5f0477c]
  439fbb:	dec    DWORD PTR [esi+eiz*2+0x7d]
  439fbf:	and    al,0xd4
  439fc1:	xchg   ebx,eax
  439fc2:	add    BYTE PTR [eax],al
  439fc4:	sbb    edx,DWORD PTR [eax]
  439fc6:	push   ds
  439fc7:	mov    WORD PTR [edi+ecx*4+0x0],cs
  439fcb:	add    BYTE PTR [ebp-0x71],cl
  439fce:	add    BYTE PTR [ebx+0x182e3d7],cl
  439fd4:	mov    eax,ds:0x91570898
  439fd9:	lahf   
  439fda:	and    al,0x1c
  439fdc:	mov    esi,0xde044a68
  439fe1:	popf   
  439fe2:	mov    esi,0xf9f8b844
  439fe7:	inc    BYTE PTR [eax]
	...
  439ff9:	add    BYTE PTR [eax],al
  439ffb:	add    BYTE PTR [ebx+ebp*8],bh
  439ffe:	jge    0x439fc0
  43a000:	mov    ch,0xf1
  43a002:	jns    0x43a080
  43a004:	mov    bh,0xf8
  43a006:	std    
  43a007:	mov    WORD PTR [ecx-0x64],?
  43a00a:	call   0x183bef5e
  43a00f:	add    edx,ebx
  43a011:	sub    al,0xda
  43a013:	and    ebx,ebp
  43a015:	std    
  43a016:	leave  
  43a017:	dec    edx
  43a019:	pop    edi
  43a01a:	inc    eax
  43a01b:	and    al,0xa5
  43a01d:	pop    ebp
  43a01e:	inc    eax
  43a01f:	and    al,0x9d
  43a021:	ins    DWORD PTR es:[edi],dx
  43a022:	cld    
  43a023:	xchg   ah,bh
  43a025:	cld    
  43a026:	jbe    0x43a06e
  43a028:	mov    ecx,0xa586d491
  43a02d:	and    BYTE PTR [ebp+0x2be19b0c],0xe8
  43a034:	retfw  
  43a036:	cmp    edx,0x36
  43a039:	je     0x43a01b
  43a03b:	(bad)  
  43a03d:	stc    
  43a03e:	jns    0x43a080
  43a040:	mov    bh,0xf8
  43a042:	std    
  43a043:	jg     0x439ff7
  43a045:	clc    
  43a046:	jb     0x43a0c3
  43a048:	xchg   ecx,eax
  43a049:	pushf  
  43a04a:	dec    esp
  43a04b:	mov    eax,ds:0x74fdf8b5
  43a050:	mov    ah,0xb8
  43a052:	pushf  
  43a053:	cwde   
  43a054:	inc    edi
  43a055:	cmp    al,BYTE PTR [ebp-0x4223f674]
  43a05b:	inc    DWORD PTR [edx-0x8]
  43a05e:	inc    ebp
  43a05f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  43a074:	mov    ch,0xf8
  43a076:	std    
  43a077:	out    0x3d,eax
  43a079:	push   es
  43a07a:	test   dl,bh
  43a07c:	cmp    BYTE PTR [ecx+ebx*8-0x2074bdb],ch
  43a083:	out    0x5d,eax
  43a085:	inc    ebp
  43a086:	test   dl,bh
  43a088:	adc    ch,al
  43a08a:	add    DWORD PTR [ebp-0x23f4708f],ecx
  43a090:	jmp    DWORD PTR [edx+0x3]
  43a093:	lock push 0x16
  43a096:	sub    esi,DWORD PTR [ebx]
  43a098:	inc    eax
  43a099:	push   ebx
  43a09a:	add    edx,esp
  43a09c:	jp     0x43a0ba
  43a09e:	lods   al,BYTE PTR ds:[esi]
  43a09f:	fistp  WORD PTR [edx+0x1a3f4f3f]
  43a0a5:	jmp    0x873a20dc
  43a0aa:	fs ret 
  43a0ac:	mov    edi,0xcc4a2604
  43a0b1:	(bad)  
  43a0b2:	out    0x3,eax
  43a0b4:	xor    dl,cl
  43a0b6:	sub    DWORD PTR [ebx],eax
  43a0b8:	mov    ch,0x4f
  43a0ba:	mov    al,ds:0x7d15ac0e
  43a0bf:	sti    
  43a0c0:	ss mov esi,0x639e3f74
  43a0c6:	xlat   BYTE PTR ds:[ebx]
  43a0c7:	js     0x43a0bf
  43a0c9:	mov    bl,0xc3
  43a0cb:	fdiv   st,st(6)
  43a0cd:	mov    bl,0xff
  43a0cf:	or     BYTE PTR [ecx],0x9c
  43a0d2:	outs   dx,BYTE PTR ds:[esi]
  43a0d3:	fcom   st(6)
  43a0d5:	mov    ebx,DWORD PTR [esi+0x52]
	...
  43a0ec:	pop    edx
  43a0ed:	push   ebp
  43a0ee:	popf   
  43a0ef:	sub    BYTE PTR [edi+0x14],0xa8
  43a0f3:	clc    
  43a0f4:	mov    esp,0x321434e8
  43a0f9:	push   esp
  43a0fa:	or     ebx,DWORD PTR [eax]
  43a0fc:	dec    esi
  43a0fd:	arpl   bx,bx
  43a0ff:	mov    fs,esi
  43a101:	mov    bl,0xcb
  43a103:	mov    gs,WORD PTR [eax+edi*8-0x2b]
  43a107:	dec    ebp
  43a108:	cmp    al,0xe9
  43a10a:	imul   eax,DWORD PTR [esi+eiz*4-0x6e],0xffffffa1
  43a10f:	enter  0x98d6,0xe8
  43a113:	and    BYTE PTR [esi-0x3d942c4d],0x9a
  43a11a:	add    BYTE PTR [edi+0x36],dh
  43a11d:	out    0x74,al
  43a11f:	lds    ebp,FWORD PTR [edx+0x34f409f7]
  43a125:	out    0x80,al
  43a127:	fst    st(2)
  43a129:	xchg   esp,eax
  43a12a:	add    dh,ah
  43a12c:	cmp    ch,BYTE PTR [edi+edi*8-0x18]
  43a130:	mov    dh,0xf6
  43a132:	mov    eax,ds:0xf28fb6e9
  43a137:	lea    eax,gs:[ebx]
  43a13a:	add    ecx,ebp
  43a13c:	mov    dh,0x8e
  43a13e:	je     0x43a11f
  43a140:	xor    esp,DWORD PTR ds:0x8fb98125
  43a146:	add    cl,ch
  43a148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a149:	adc    ah,BYTE PTR [ecx-0x18]
  43a14c:	mov    dh,0x8f
  43a14e:	repnz add BYTE PTR gs:[eax],al
	...
  43a162:	add    BYTE PTR [eax],al
  43a164:	fld    QWORD PTR [ebx]
  43a166:	add    ecx,ebp
  43a168:	mov    dh,0xaf
  43a16a:	je     0x43a15b
  43a16c:	xor    esp,DWORD PTR [eiz*1+0x8fb945]
  43a173:	jmp    0xe88cb41f
  43a178:	mov    dh,0x8f
  43a17a:	mov    ecx,0x8faee9
  43a17f:	ret    0xe57f
  43a182:	je     0x43a189
  43a184:	rcr    DWORD PTR [edx],0x85
  43a187:	or     eax,0xe9f9e895
  43a18c:	xchg   BYTE PTR [ebx],bl
  43a18e:	inc    ebp
  43a18f:	or     eax,0x258b5861
  43a194:	popf   
  43a195:	pop    ebx
  43a196:	call   0xfa29af5b
  43a19b:	loop   0x43a20f
  43a19d:	lods   al,BYTE PTR ds:[esi]
  43a19e:	adc    dh,ah
  43a1a0:	cmp    eax,0xb6e8ff8b
  43a1a5:	adc    DWORD PTR [ebp+0x0],eax
  43a1a8:	lock les ebx,FWORD PTR ds:0x3c94207f
  43a1af:	sbb    ebx,DWORD PTR [ebx]
  43a1b1:	pop    ss
  43a1b2:	or     eax,0x3c8c1c01
  43a1b7:	sbb    ecx,DWORD PTR [ebx]
  43a1b9:	adc    dl,dl
  43a1bb:	add    BYTE PTR [esp+ecx*4],cl
  43a1be:	jns    0x43a23c
  43a1c0:	rol    BYTE PTR [ebx+0x6a500f00],0xf9
  43a1c7:	inc    DWORD PTR [eax]
	...
  43a1d9:	add    BYTE PTR [eax],al
  43a1db:	add    ah,cl
  43a1dd:	sbb    BYTE PTR [eax],al
  43a1df:	push   edi
  43a1e0:	dec    ecx
  43a1e1:	sbb    BYTE PTR [esi],bl
  43a1e3:	sbb    al,0xdf
  43a1e5:	mov    eax,DWORD PTR [eax]
  43a1e7:	push   ecx
  43a1e8:	push   edi
  43a1e9:	not    BYTE PTR ds:[eax-0x30]
  43a1ed:	sbb    bh,BYTE PTR [esi]
  43a1ef:	and    al,0xbc
  43a1f1:	push   ss
  43a1f2:	mov    edx,0x1511fd79
  43a1f7:	int3   
  43a1f8:	mov    eax,ds:0x5f3cf9d3
  43a1fd:	mov    edx,0x188b0000
  43a202:	rol    DWORD PTR [eax],1
  43a204:	pushf  
  43a205:	xchg   ebx,eax
  43a206:	cmc    
  43a207:	jne    0x43a271
  43a209:	add    BYTE PTR [esi+0x24],bh
  43a20c:	xor    al,0x8c
  43a20e:	add    BYTE PTR [eax],al
  43a210:	mov    esp,0xf6104514
  43a215:	mov    dl,0xe8
  43a217:	out    dx,al
  43a218:	adc    eax,0xc85f712
  43a21d:	add    DWORD PTR [esp+edi*1+0x33f7111b],0xc084cc1c
  43a228:	imul   ecx,DWORD PTR [esi],0xffffffa9
  43a22b:	add    BYTE PTR [ebx+edx*4-0x7f],cl
  43a22f:	mov    esp,0xfffa1370
  43a234:	mov    ch,0xf8
  43a236:	mov    WORD PTR [ebx+0x46cd1],es
  43a23c:	mov    ch,0x29
  43a23e:	inc    edi
  43a23f:	add    BYTE PTR gs:[eax],al
	...
  43a252:	add    BYTE PTR [eax],al
  43a254:	mov    ah,0x5f
  43a256:	nop
  43a257:	and    edi,DWORD PTR [ecx]
  43a259:	stc    
  43a25a:	std    
  43a25b:	(bad)  
  43a25c:	cmp    al,0x45
  43a25e:	sub    BYTE PTR [eax-0x7702074b],cl
  43a264:	sub    DWORD PTR [ebp-0x70d0070],ecx
  43a26a:	into   
  43a26b:	xchg   dl,bh
  43a26d:	push   eax
  43a26e:	popf   
  43a26f:	xor    esi,DWORD PTR [ebp+0x30ef8cf8]
  43a275:	lahf   
  43a276:	clc    
  43a277:	imul   edi,DWORD PTR [esi],0xb9468cf7
  43a27d:	loope  0x43a244
  43a27f:	sbb    ecx,DWORD PTR [eax+0x2]
  43a282:	lea    eax,[esi-0x5b]
  43a285:	popa   
  43a286:	std    
  43a287:	push   ecx
  43a288:	mov    dl,0x28
  43a28a:	push   es
  43a28b:	sti    
  43a28c:	jecxz  0x43a2fe
  43a28e:	enter  0xc623,0x80
  43a292:	pop    ecx
  43a293:	push   es
  43a294:	fwait
  43a295:	in     eax,0xd7
  43a297:	out    0x6a,eax
  43a299:	icebp  
  43a29a:	jg     0x43a296
  43a29c:	xor    eax,0xb50b2174
  43a2a1:	inc    esp
  43a2a2:	(bad)  
  43a2a5:	in     al,dx
  43a2a6:	jge    0x43a31e
  43a2a8:	mov    ebp,0x383ff2f8
  43a2ad:	lods   al,BYTE PTR ds:[esi]
  43a2ae:	sub    BYTE PTR [eax+0x4d],al
  43a2b1:	cdq    
  43a2b2:	mov    esp,0x3d6b5af9
  43a2b7:	or     al,BYTE PTR [eax]
	...
  43a2c9:	add    BYTE PTR [eax],al
  43a2cb:	add    BYTE PTR [edx+0x6d],al
  43a2ce:	jp     0x43a2ca
  43a2d0:	dec    edx
  43a2d1:	shr    DWORD PTR [edx],1
  43a2d3:	data16 mov ch,0x8f
  43a2d6:	je     0x43a2a7
  43a2d8:	xchg   esi,eax
  43a2d9:	dec    ebx
  43a2da:	(bad)  
  43a2db:	(bad)  
  43a2dc:	push   0xffffffe5
  43a2de:	xchg   edx,eax
  43a2df:	jmp    0xd806f617
  43a2e4:	push   0xffffffd7
  43a2e6:	out    0x3,eax
  43a2e8:	mov    ch,0x6d
  43a2ea:	into   
  43a2eb:	dec    ebx
  43a2ec:	mov    edi,0xe278a91e
  43a2f1:	mov    DWORD PTR [edi+0x5090e284],esp
  43a2f7:	(bad)  
  43a2f8:	jmp    ebp
  43a2fa:	pop    edx
  43a2fb:	fcomp  st(2)
  43a2fd:	or     eax,0x11ef81df
  43a302:	iret   
  43a303:	pop    es
  43a304:	mov    ch,0xe6
  43a306:	jnp    0x43a32f
  43a308:	xor    eax,0xbe03e78f
  43a30d:	(bad)  
  43a30e:	imul   eax,DWORD PTR es:[esi-0x66],0x29
  43a313:	sbb    BYTE PTR [edi+0x45],0x6d
  43a317:	inc    esp
  43a318:	arpl   WORD PTR [edx],bx
  43a31a:	add    eax,0xe79470de
  43a31f:	jns    0x43a317
  43a321:	stos   DWORD PTR es:[edi],eax
  43a322:	jecxz  0x43a326
  43a324:	pop    es
  43a325:	sbb    ecx,edi
  43a327:	inc    edi
  43a328:	mov    ah,0x23
  43a32a:	add    bl,0x92
  43a32d:	popa   
  43a32e:	jmp    0x43a40c
	...
  43a343:	add    BYTE PTR [edx+0x7f81de41],dl
  43a349:	sbb    DWORD PTR [edx-0x1873c722],ebp
  43a34f:	aam    0x6f
  43a351:	pop    esp
  43a352:	or     edx,DWORD PTR [eax]
  43a354:	jmp    0x3be5:0x703e36d
  43a35b:	sub    ch,al
  43a35d:	int    0x21
  43a35f:	or     al,0xb4
  43a361:	test   DWORD PTR [eax],0xf9e6ed26
  43a367:	gs stc 
  43a369:	pusha  
  43a36a:	pop    es
  43a36b:	(bad)  
  43a36d:	popf   
  43a36e:	inc    edx
  43a36f:	in     eax,0xcf
  43a371:	iret   
  43a372:	icebp  
  43a373:	mov    cl,0x8
  43a375:	and    ecx,DWORD PTR [ecx]
  43a377:	jmp    0x6b30b179
  43a37c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a37d:	xchg   esp,eax
  43a37e:	push   edx
  43a37f:	push   ss
  43a380:	mov    eax,ds:0x8a761e88
  43a385:	jmp    0x547b80fd
  43a38a:	clc    
  43a38b:	data16 jp 0x43a3e9
  43a38e:	or     BYTE PTR [eax-0x4],dh
  43a391:	call   0xe1eb8efc
  43a396:	mov    ecx,esp
  43a398:	data16 cmp al,0x87
  43a39b:	mov    esp,0x1fbcec62
  43a3a0:	push   edx
  43a3a1:	jmp    0x2befd9f3
  43a3a6:	pop    gs
	...
  43a3bc:	mov    dh,0xc
  43a3be:	inc    esi
  43a3bf:	leave  
  43a3c0:	xchg   eax,ebp
  43a3c2:	xor    DWORD PTR [eax],0xffffffad
  43a3c5:	mov    al,ds:0xccaaa85
  43a3ca:	adc    edx,edx
  43a3cc:	jge    0x43a3c2
  43a3ce:	je     0x43a390
  43a3d0:	sub    eax,0x3fe373de
  43a3d5:	cmp    edi,esp
  43a3d7:	mov    al,0x66
  43a3d9:	mov    WORD PTR [ebp-0x1b],gs
  43a3dc:	das    
  43a3dd:	hlt    
  43a3de:	in     eax,0xf7
  43a3e0:	das    
  43a3e1:	push   esp
  43a3e2:	add    al,0x22
  43a3e4:	mov    esp,ds
  43a3e6:	ins    DWORD PTR es:[edi],dx
  43a3e7:	out    dx,eax
  43a3e8:	cmp    DWORD PTR [ebx-0xc],ecx
  43a3eb:	pusha  
  43a3ec:	jge    0x43a3ca
  43a3ee:	inc    ecx
  43a3ef:	add    bh,cl
  43a3f1:	push   eax
  43a3f2:	add    eax,0xcade753b
  43a3f7:	test   DWORD PTR [edx],ecx
  43a3f9:	out    0x5a,eax
  43a3fb:	add    DWORD PTR ds:0x4cfffa78,0xc98b34de
  43a405:	addr16 test dh,dh
  43a408:	aaa    
  43a409:	mov    esi,0xa3304d82
  43a40e:	dec    eax
  43a40f:	or     BYTE PTR [esi],bl
  43a411:	jl     0x43a3d1
  43a413:	inc    ebp
  43a414:	and    edx,DWORD PTR [eax+0x33e9ff49]
  43a41a:	or     al,0x40
  43a41c:	or     al,0x16
  43a41e:	inc    ebp
  43a41f:	sldt   WORD PTR [eax]
	...
  43a432:	add    BYTE PTR [eax],al
  43a434:	repz ror eax,0xc2
  43a438:	in     al,0x8f
  43a43a:	xchg   DWORD PTR [eax-0x28],ecx
  43a43d:	or     al,cl
  43a43f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a440:	fmul   DWORD PTR [edi-0x67db7700]
  43a446:	mov    esi,0xe18ae345
  43a44b:	ficom  WORD PTR [ecx-0x35]
  43a44e:	add    BYTE PTR [ebx-0x74],ch
  43a451:	xchg   esp,eax
  43a452:	push   eax
  43a453:	lea    ebx,[edi]
  43a455:	test   al,ch
  43a457:	out    dx,al
  43a458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a459:	test   BYTE PTR gs:[esp+ebx*8+0x4f8bbeda],0xaf
  43a462:	xor    eax,0x3055d47
  43a468:	jae    0x14e0e4f9
  43a46e:	cmp    esp,DWORD PTR [eax]
  43a470:	or     BYTE PTR [ebx],bl
  43a472:	add    DWORD PTR [ebp+0x5c],0x17
  43a476:	add    BYTE PTR [ebx+0x46890f99],cl
  43a47c:	mov    ch,0xf4
  43a47e:	add    ah,BYTE PTR [edx-0x77020747]
  43a484:	repz loopne 0x43a4ef
  43a487:	mov    edx,0xfad279e6
  43a48c:	mov    al,ds:0xb5400f14
  43a491:	in     eax,0x58
  43a493:	cs cmp dh,cl
  43a496:	(bad)  [ebx]
	...
  43a4ac:	stos   DWORD PTR es:[edi],eax
  43a4ad:	(bad)  
  43a4ae:	or     al,0xb2
  43a4b0:	jae    0x43a485
  43a4b2:	or     al,0xb2
  43a4b4:	jae    0x43a482
  43a4b6:	add    bl,al
  43a4b8:	out    0x6,al
  43a4ba:	je     0x43a4ac
  43a4bc:	lahf   
  43a4bd:	mov    esp,0xc8d1737c
  43a4c2:	call   0xc8874e94
  43a4c7:	sub    eax,0x147d28d3
  43a4cc:	mov    edx,ebx
  43a4ce:	mov    ebp,0x10b537ff
  43a4d3:	test   ebp,esi
  43a4d5:	mov    esp,0x33230b18
  43a4da:	and    al,BYTE PTR [ebx-0x72]
  43a4dd:	push   eax
  43a4de:	out    dx,al
  43a4df:	leave  
  43a4e0:	aas    
  43a4e1:	add    esp,DWORD PTR [edx]
  43a4e3:	cmp    BYTE PTR [edi-0x55e80f1a],0x42
  43a4ea:	inc    esi
  43a4eb:	stc    
  43a4ec:	ja     0x43a54e
  43a4ee:	shl    BYTE PTR [ebx],cl
  43a4f0:	sahf   
  43a4f1:	(bad)  
  43a4f2:	sar    edx,cl
  43a4f4:	enter  0xea4,0x40
  43a4f8:	mov    ch,0x29
  43a4fa:	mov    BYTE PTR [esi+0x8b6ee],bh
  43a500:	aas    
  43a501:	xor    ah,BYTE PTR [ebx]
  43a503:	or     ecx,DWORD PTR [ebx-0x50]
  43a506:	jp     0x43a4c7
  43a508:	stos   BYTE PTR es:[edi],al
  43a509:	(bad)  
  43a50a:	cdq    
  43a50b:	inc    ebx
  43a50c:	mov    edi,0x9ade19
	...
  43a521:	add    BYTE PTR [eax],al
  43a523:	add    BYTE PTR [edi-0x1e],ah
  43a526:	pop    edi
  43a527:	aad    0x99
  43a529:	jbe    0x43a4cb
  43a52b:	pop    ss
  43a52c:	sar    DWORD PTR [ebx-0x3e],cl
  43a52f:	not    DWORD PTR [esi-0x7a389381]
  43a535:	test   eax,0x53a97d17
  43a53a:	rol    ebx,1
  43a53c:	cmp    cl,BYTE PTR ds:0x90620fac
  43a542:	mov    es,WORD PTR [eax+0x33]
  43a545:	cmp    ecx,ebx
  43a547:	pop    es
  43a548:	xchg   DWORD PTR [esi-0x4b],esi
  43a54b:	jbe    0x77cc2667
  43a551:	xchg   edi,eax
  43a552:	push   cs
  43a553:	inc    esp
  43a554:	mov    esi,0x3a07fb14
  43a559:	xchg   ecx,eax
  43a55a:	out    0x52,al
  43a55c:	sti    
  43a55d:	into   
  43a55e:	push   ds
  43a55f:	push   ebx
  43a560:	pusha  
  43a561:	xchg   esi,eax
  43a562:	ins    BYTE PTR es:[edi],dx
  43a563:	leave  
  43a564:	mov    esi,0xb8453f3d
  43a569:	loope  0x43a5b5
  43a56b:	push   0x87279fd8
  43a570:	adc    bl,BYTE PTR [ebx-0x16]
  43a573:	jl     0x43a5f4
  43a575:	xchg   edi,eax
  43a576:	pop    esi
  43a577:	cld    
  43a578:	mov    edx,0x660f2a76
  43a57d:	neg    DWORD PTR [eax]
  43a57f:	or     ebp,DWORD PTR [edi+0x68ddbae1]
  43a585:	mov    edi,fs
  43a587:	mov    BYTE PTR [eax],al
	...
  43a599:	add    BYTE PTR [eax],al
  43a59b:	add    dh,dh
  43a59d:	stos   DWORD PTR es:[edi],eax
  43a59e:	jecxz  0x43a5d8
  43a5a0:	hlt    
  43a5a1:	xchg   edi,eax
  43a5a2:	jbe    0x43a5b6
  43a5a4:	cmp    al,0x4f
  43a5a6:	out    dx,eax
  43a5a7:	call   0x9f4439f6
  43a5ac:	data16 adc al,0x70
  43a5af:	in     eax,0xe
  43a5b1:	ror    BYTE PTR [eax],cl
  43a5b3:	out    0xee,eax
  43a5b5:	inc    esi
  43a5b6:	mov    esi,0xc008b6e5
  43a5bb:	bound  ecx,QWORD PTR [eax]
  43a5bd:	shl    dh,1
  43a5bf:	stc    
  43a5c0:	xchg   ebp,eax
  43a5c1:	pop    DWORD PTR [eax]
  43a5c3:	(bad)  
  43a5c4:	mov    ecx,0xe072be88
  43a5c9:	pandn  mm5,mm1
  43a5cc:	mov    edi,0xd0a8f9e0
  43a5d1:	nop
  43a5d2:	add    eax,0x8e878b8
  43a5d7:	test   al,0x93
  43a5d9:	mov    BYTE PTR ds:0x853b7aab,al
  43a5df:	jge    0x43a5e3
  43a5e1:	or     bl,cl
  43a5e3:	jb     0x43a5a7
  43a5e5:	test   ecx,0x3be58e7e
  43a5eb:	sub    al,0xeb
  43a5ed:	mov    eax,ds:0xb0b7f550
  43a5f2:	rcl    BYTE PTR [eax-0x4b],0x8e
  43a5f6:	add    cl,ch
  43a5f8:	add    al,0x3e
  43a5fa:	test   esp,edx
  43a5fc:	scas   al,BYTE PTR es:[edi]
  43a5fd:	imul   eax,DWORD PTR [esi],0xb0
	...
  43a613:	add    BYTE PTR [ebx],ch
  43a615:	repnz in eax,dx
  43a617:	mov    WORD PTR [edx+0x4a],es
  43a61a:	add    al,0x51
  43a61c:	sbb    al,0xe6
  43a61e:	stc    
  43a61f:	xor    bl,BYTE PTR ss:[eax+ecx*1+0x60]
  43a624:	test   DWORD PTR [ebp+eax*4-0x6608414e],0x87e62e1e
  43a62f:	scas   eax,DWORD PTR es:[edi]
  43a630:	scas   al,BYTE PTR es:[edi]
  43a631:	xchg   esp,eax
  43a632:	mov    cl,0xa2
  43a634:	mov    dl,0x8
  43a636:	rol    BYTE PTR [eax],1
  43a638:	fnsave [ecx+0x1]
  43a63b:	sar    DWORD PTR [ebp-0x7300476d],0x8c
  43a642:	add    BYTE PTR [ebx],ah
  43a644:	pushf  
  43a645:	nop
  43a646:	iret   
  43a647:	in     ax,0xbe
  43a64a:	add    eax,0x9d1430f
  43a64f:	mov    ebx,DWORD PTR ds:0xaf08e34b
  43a655:	cmp    eax,eax
  43a657:	loope  0x43a69d
  43a659:	xchg   ecx,eax
  43a65a:	iret   
  43a65b:	lds    di,DWORD PTR [esi-0x2e3cf0f7]
  43a662:	or     ecx,DWORD PTR [ebx+0x8e34b1d]
  43a668:	(bad)  
  43a669:	cmp    eax,eax
  43a66b:	loope  0x43a691
  43a66d:	xchg   ecx,eax
  43a66e:	iret   
  43a66f:	xchg   bp,ax
  43a671:	mov    esi,0xd1830f0b
  43a676:	or     eax,0x8b
	...
  43a68b:	add    BYTE PTR ds:0xff08e34b,ch
  43a691:	cmp    eax,eax
  43a693:	loope  0x43a6a9
  43a695:	xchg   ecx,eax
  43a696:	iret   
  43a697:	xchg   bp,ax
  43a699:	mov    esi,0xd1530f0d
  43a69e:	jnp    0x926f251
  43a6a4:	scas   eax,DWORD PTR es:[edi]
  43a6a5:	cmp    eax,eax
  43a6a7:	loope  0x43a67d
  43a6a9:	nop
  43a6aa:	iret   
  43a6ab:	inc    bp
  43a6ad:	mov    esi,0xd1430f0f
  43a6b2:	adc    DWORD PTR [ebx+0x8e34b9d],ecx
  43a6b8:	scas   eax,DWORD PTR es:[edi]
  43a6b9:	cmp    eax,eax
  43a6bb:	loope  0x43a661
  43a6bd:	mov    cs,edi
  43a6bf:	and    ax,0x11c1
  43a6c3:	lgs    edi,FWORD PTR ds:0x982e15ca
  43a6ca:	inc    esp
  43a6cb:	in     eax,0xbd
  43a6cd:	leave  
  43a6ce:	dec    ebp
  43a6cf:	rcl    BYTE PTR [ecx+eiz*8+0x701bd10a],0xcf
  43a6d7:	adc    eax,0x1bcaa5aa
  43a6dc:	ds push esp
  43a6de:	or     BYTE PTR [edi+0x76b2884],al
  43a6e4:	xchg   esi,eax
  43a6e5:	sbb    BYTE PTR [esi],bh
  43a6e7:	loopne 0x43a696
  43a6e9:	icebp  
  43a6ea:	dec    esi
  43a6eb:	popa   
  43a6ec:	cmp    al,0x7f
  43a6ee:	sbb    BYTE PTR [ebp+0x0],al
	...
  43a704:	outs   dx,BYTE PTR ds:[esi]
  43a705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a706:	daa    
  43a707:	xchg   eax,eax
  43a709:	mov    eax,0x71dc06eb
  43a70e:	jae    0x43a6fe
  43a710:	pop    eax
  43a711:	bound  ecx,QWORD PTR [ebx]
  43a713:	call   0xfabba622
  43a718:	cs jl  0x43a72f
  43a71b:	mov    DWORD PTR [ebx+0x1d03cb71],esi
  43a721:	sti    
  43a722:	jbe    0x43a71e
  43a724:	or     ah,BYTE PTR [eax-0x42]
  43a727:	add    ebp,DWORD PTR [esi]
  43a729:	mov    dl,0x2c
  43a72b:	call   0xfabb1622
  43a730:	cmp    al,0x2f
  43a732:	xchg   DWORD PTR es:[eax-0x20],esp
  43a736:	fadd   DWORD PTR [esi+0x5cdd26fb]
  43a73c:	idiv   DWORD PTR [ebp+edi*8-0x32bac1ac]
  43a743:	push   ecx
  43a744:	cmp    BYTE PTR [esi+eax*1],dh
  43a747:	push   eax
  43a748:	dec    edi
  43a749:	lock js 0x43a7c0
  43a74c:	lods   eax,DWORD PTR ds:[esi]
  43a74d:	fldcw  WORD PTR [edi-0x6]
  43a750:	enter  0x8b8f,0x13
  43a754:	cmc    
  43a755:	(bad)  
  43a756:	fs inc esp
  43a758:	es popf 
  43a75a:	adc    ch,bh
  43a75c:	mov    dl,0xe7
  43a75e:	mov    ebp,0x6ede9144
  43a763:	je     0x43a796
  43a765:	in     eax,0x73
  43a767:	and    DWORD PTR [eax],eax
	...
  43a779:	add    BYTE PTR [eax],al
  43a77b:	add    BYTE PTR [edx],al
  43a77d:	pop    ebp
  43a77e:	jecxz  0x43a783
  43a780:	add    DWORD PTR [eax+0x3f6ebf5c],esi
  43a786:	dec    ebp
  43a787:	add    BYTE PTR [esi+0x64],ch
  43a78a:	jmp    0x43a779
  43a78c:	scas   al,BYTE PTR es:[edi]
  43a78d:	ficomp WORD PTR [esp+ecx*1+0x5e]
  43a791:	test   BYTE PTR [edi+0x13],ah
  43a794:	cmc    
  43a795:	(bad)  
  43a796:	ins    BYTE PTR es:[edi],dx
  43a797:	inc    ebx
  43a798:	rol    DWORD PTR [edi-0x69f593ef],0xb1
  43a79f:	js     0x43a72c
  43a7a1:	in     eax,0xaa
  43a7a3:	out    dx,al
  43a7a4:	mov    edx,0xb843fcde
  43a7a9:	dec    edi
  43a7aa:	out    0x8c,eax
  43a7ac:	hlt    
  43a7ad:	cmp    al,0xa0
  43a7af:	inc    ebp
  43a7b0:	mov    dl,0x8f
  43a7b2:	xor    al,0x8d
  43a7b4:	push   ds
  43a7b5:	adc    dl,BYTE PTR [edi+edx*1+0x78b64667]
  43a7bc:	addr16 imul ebp,ebx,0xd557a178
  43a7c3:	ret    
  43a7c4:	repnz or BYTE PTR [eax-0x7c],bl
  43a7c8:	repnz fstp QWORD PTR [esi]
  43a7cb:	je     0x43a833
  43a7cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a7ce:	fs mov esi,0x40b13ed6
  43a7d4:	jns    0x43a7c9
  43a7d6:	jecxz  0x43a7db
  43a7d8:	mov    ch,0x8f
  43a7da:	cmp    cl,BYTE PTR [esi]
  43a7dc:	int    0x7f
  43a7de:	add    BYTE PTR [ecx+0x0],ch
	...
  43a7f4:	mov    dh,0xf6
  43a7f6:	adc    al,0x62
  43a7f8:	jae    0x43a7e7
  43a7fa:	xor    eax,0xff62beac
  43a7ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a800:	cmp    edx,DWORD PTR [esp+eiz*8-0x47]
  43a804:	test   dl,bl
  43a806:	adc    edi,ebp
  43a808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a809:	dec    edi
  43a80a:	add    BYTE PTR [esi+esi*8+0x63],ch
  43a80e:	call   0xc0c7a5aa
  43a813:	(bad)  [esi-0x23]
  43a816:	xchg   BYTE PTR [esi],ah
  43a818:	lea    esi,[edi]
  43a81a:	(bad)  
  43a81b:	stos   DWORD PTR es:[edi],eax
  43a81c:	mov    ch,0x8f
  43a81e:	push   ebx
  43a81f:	jb     0x43a7ee
  43a821:	pop    ebp
  43a822:	in     al,dx
  43a823:	icebp  
  43a824:	xchg   DWORD PTR [esp+eax*2],ecx
  43a827:	shr    DWORD PTR [ecx-0x52],1
  43a82a:	aad    0x1a
  43a82c:	pop    edi
  43a82d:	jge    0x43a828
  43a82f:	aam    0x4a
  43a831:	add    BYTE PTR [eax-0x17],0x66
  43a835:	ficom  DWORD PTR [ebx]
  43a837:	cmp    eax,0x6c004fc9
  43a83c:	jno    0x43a8a1
  43a83e:	adc    ch,BYTE PTR [esp+esi*8-0x1c]
  43a842:	push   eax
  43a843:	add    edx,ecx
  43a845:	jne    0x43a840
  43a847:	mov    fs,WORD PTR [ebx+esi*2+0x12b12910]
  43a84e:	shl    esp,0x2
  43a851:	stos   DWORD PTR es:[edi],eax
  43a852:	rol    BYTE PTR [edx+0x7d440bed],0x0
	...
  43a869:	add    BYTE PTR [eax],al
  43a86b:	add    BYTE PTR [ecx],cl
  43a86d:	fidiv  DWORD PTR [ebx-0xf]
  43a870:	stos   DWORD PTR es:[edi],eax
  43a871:	push   ebx
  43a872:	call   0xd35f5f
  43a877:	mov    edx,0xebf4539b
  43a87c:	mov    dh,0x8f
  43a87e:	add    BYTE PTR [eax],al
  43a880:	jae    0x43a900
  43a882:	js     0x43a894
  43a884:	or     al,0x91
  43a886:	add    eax,0xfffffff8
  43a889:	mov    bl,0x49
  43a88b:	push   ebx
  43a88c:	dec    edi
  43a88d:	pop    es
  43a88e:	inc    ebp
  43a88f:	call   0x763a6a00
  43a894:	aam    0x64
  43a896:	adc    al,0x7c
  43a898:	pushf  
  43a899:	sar    cl,1
  43a89b:	test   ah,bl
  43a89d:	fild   WORD PTR ds:0x98069ff
  43a8a3:	inc    eax
  43a8a4:	mov    WORD PTR [edi],cs
  43a8a6:	mov    edx,0x1218e75
  43a8ab:	(bad)  
  43a8ac:	jmp    0x1c599f09
  43a8b1:	jle    0x43a8f3
  43a8b3:	add    dh,ah
  43a8b5:	push   ecx
  43a8b6:	push   edx
  43a8b7:	leave  
  43a8b8:	push   cs
  43a8b9:	fdiv   st(1),st
  43a8bb:	push   esp
  43a8bc:	xlat   BYTE PTR ds:[ebx]
  43a8bd:	je     0x43a90f
  43a8bf:	push   ecx
  43a8c0:	scas   eax,DWORD PTR es:[edi]
  43a8c1:	push   es
  43a8c2:	inc    ebp
  43a8c3:	clc    
  43a8c4:	pushf  
  43a8c5:	jmp    0xa14712cb
  43a8ca:	sar    edi,1
  43a8cc:	or     DWORD PTR [ecx+ecx*1+0x40],edi
	...
  43a8e3:	add    BYTE PTR [edi+ecx*1],bl
  43a8e6:	mov    edx,0xfa0c980f
  43a8eb:	dec    DWORD PTR [ecx*8-0x7f63c27e]
  43a8f2:	inc    eax
  43a8f3:	add    BYTE PTR [ecx-0x60af0a31],al
  43a8f9:	shl    BYTE PTR [ebx+0x19],0x83
  43a8fd:	fcomip st,st(1)
  43a8ff:	dec    DWORD PTR [ebx+0xf]
  43a902:	mov    edx,0x14650e75
  43a907:	adc    bh,bl
  43a909:	iret   
  43a90a:	stc    
  43a90b:	xor    BYTE PTR [ebp+0x5a74f73e],0x71
  43a912:	sar    bl,0x8e
  43a915:	test   eax,0x3e6b5fe9
  43a91a:	mov    ebx,0x86a4bb01
  43a91f:	out    dx,eax
  43a920:	out    dx,al
  43a921:	xchg   ebp,eax
  43a922:	jmp    0x726fe175
  43a927:	dec    edi
  43a928:	mov    ds:0xf517204,al
  43a92d:	loopne 0x43a9a1
  43a92f:	je     0x43a8be
  43a931:	mov    cl,BYTE PTR [edx-0x7c]
  43a934:	jne    0x43a993
  43a936:	aaa    
  43a937:	sti    
  43a938:	retf   
  43a939:	(bad)  [ecx]
  43a93b:	jo     0x43a8e2
  43a93d:	sub    dh,bh
  43a93f:	ss jbe 0x43a9a7
  43a942:	and    eax,DWORD PTR [esi+0x713faeb5]
	...
  43a95c:	(bad)  
  43a95d:	jmp    0x9931690d
  43a962:	jae    0x43a995
  43a964:	push   edx
  43a965:	in     al,0xe5
  43a967:	pmaddwd mm5,mm0
  43a96a:	cmp    BYTE PTR [edi-0x773e37],bh
  43a970:	jns    0x43a95a
  43a972:	sbb    eax,0x95b500
  43a977:	scas   eax,DWORD PTR es:[edi]
  43a978:	mov    ah,0xfd
  43a97a:	push   es
  43a97b:	cmp    eax,0xfffdb8b5
  43a980:	mov    edi,0xb6be851d
  43a985:	mov    ds:0x12b31f6c,al
  43a98a:	je     0x43a9e5
  43a98c:	add    ah,ah
  43a98e:	jne    0x43a98a
  43a990:	mov    al,ds:0xb5400f28
  43a995:	mov    DWORD PTR [esi+0x308f8ebe],eax
  43a99b:	inc    ecx
  43a99c:	mov    DWORD PTR [esi],eax
  43a99e:	dec    esp
  43a99f:	rcr    DWORD PTR [ebx+0x74],cl
  43a9a2:	push   ebx
  43a9a3:	add    al,0x5d
  43a9a5:	jecxz  0x43a941
  43a9a7:	ret    
  43a9a8:	retf   0xdcd9
  43a9ab:	xchg   edi,eax
  43a9ac:	mov    al,0x4f
  43a9ae:	out    0x7e,eax
  43a9b0:	cli    
  43a9b1:	arpl   WORD PTR [edi],ax
  43a9b3:	in     al,dx
  43a9b4:	fimul  DWORD PTR [edx]
  43a9b6:	test   al,0x3
  43a9b8:	add    eax,0xb06ffcdb
  43a9bd:	dec    edi
  43a9be:	out    0x7e,eax
	...
  43a9d4:	pop    edx
  43a9d5:	arpl   di,si
  43a9d7:	xchg   BYTE PTR [ecx],al
  43a9d9:	fdivr  QWORD PTR [eax+0x17da8fe9]
  43a9df:	jg     0x43aa23
  43a9e1:	fs jecxz 0x43aa15
  43a9e4:	jne    0x43a9ae
  43a9e6:	es xor ecx,0x4004e7db
  43a9ed:	iret   
  43a9ee:	mov    al,0x40
  43a9f0:	or     DWORD PTR [edi],eax
  43a9f2:	int3   
  43a9f3:	or     BYTE PTR [esi+0x37],0x39
  43a9f7:	xor    DWORD PTR [esi+ebx*4-0x2f],edi
  43a9fb:	fnstsw WORD PTR ds:0x7738c34c
  43aa01:	fs fucomp st(1)
  43aa04:	test   BYTE PTR [ebp*1-0x55c07b54],0xe
  43aa0c:	test   DWORD PTR [ecx-0x2c5dfbd9],eax
  43aa12:	jmp    0x43aa50
  43aa14:	jno    0x43aa3d
  43aa16:	sub    al,0x4
  43aa18:	mov    ch,0x8f
  43aa1a:	pop    esp
  43aa1b:	mov    esi,0x78350c52
  43aa20:	mov    ebp,0xfbefef64
  43aa25:	add    al,0x1
  43aa27:	and    al,0xc1
  43aa29:	or     al,0x54
  43aa2b:	jge    0x43aa31
  43aa2d:	dec    edx
  43aa2e:	stc    
  43aa2f:	fdivr  QWORD PTR [edx-0x491697c3]
  43aa35:	pop    DWORD PTR [edi+edi*4]
	...
  43aa4c:	add    BYTE PTR [eax+0x4f],al
  43aa4f:	mov    bh,0x41
  43aa51:	adc    esp,0xffffffdb
  43aa54:	neg    cl
  43aa56:	test   BYTE PTR [ecx],ch
  43aa58:	retf   0x37b3
  43aa5b:	mov    esp,0xc31063c6
  43aa60:	(bad)  
  43aa61:	or     al,BYTE PTR [ebp+edx*1-0x7a]
  43aa65:	(bad)  
  43aa66:	jae    0x43aa61
  43aa68:	push   cs
  43aa69:	sub    eax,0xf2091704
  43aa6e:	adc    BYTE PTR [esi],cl
  43aa70:	fwait
  43aa71:	jmp    0x8b3a66fb
  43aa76:	inc    eax
  43aa77:	jmp    0x7d3d697d
  43aa7c:	fcmovbe st,st(5)
  43aa7e:	shl    BYTE PTR [edx+0x2b],cl
  43aa81:	fucom  st(5)
  43aa83:	jmp    0x43aa30
  43aa85:	iret   
  43aa86:	pop    edx
  43aa87:	mov    al,0xf3
  43aa89:	test   BYTE PTR [eax],al
  43aa8b:	cmp    al,0xd2
  43aa8d:	in     al,0x52
  43aa8f:	sbb    cl,bh
  43aa91:	or     eax,DWORD PTR [ebp+esi*8-0x6f]
  43aa95:	bound  ecx,QWORD PTR [esp+esi*1]
  43aa98:	mov    ds:0xee173d4,al
  43aa9d:	mov    eax,ds:0x3fb12989
  43aaa2:	call   0xfa1f54c5
  43aaa7:	push   0x6d
  43aaa9:	test   ch,ah
  43aaab:	std    
  43aaac:	xchg   DWORD PTR [ebx+0xc],esp
  43aaaf:	mov    es,WORD PTR [eax]
	...
  43aac1:	add    BYTE PTR [eax],al
  43aac3:	add    BYTE PTR [ecx+edx*4],cl
  43aac6:	push   0x3a0cd000
  43aacb:	add    BYTE PTR [ebx+edi*1+0x5c69f360],bl
  43aad2:	jp     0x43aa98
  43aad4:	or     al,0xaa
  43aad6:	mov    esi,0x745cb77e
  43aadb:	sbb    BYTE PTR [edi-0x3a],ah
  43aade:	or     eax,0xf57cf1ff
  43aae3:	jne    0x43aacd
  43aae5:	xor    al,0x29
  43aae7:	(bad)  
  43aae8:	jnp    0x43ab46
  43aaea:	div    BYTE PTR [ebp-0x38]
  43aaed:	pop    ecx
  43aaee:	jmp    0xf6cb9ddb
  43aaf3:	call   DWORD PTR [edi]
  43aaf5:	inc    esi
  43aaf6:	push   edi
  43aaf7:	pop    ebp
  43aaf8:	into   
  43aaf9:	ja     0x43aafb
  43aafb:	push   ebp
  43aafc:	daa    
  43aafd:	jo     0x43ab79
  43aaff:	in     al,dx
  43ab00:	xor    al,0xb5
  43ab02:	sub    bh,bh
  43ab04:	xor    al,0xc0
  43ab06:	xchg   BYTE PTR [eax-0x74],al
  43ab09:	pop    ebx
  43ab0a:	jl     0x43aafc
  43ab0c:	jnp    0x43ab85
  43ab0e:	cmp    al,0x11
  43ab10:	sbb    al,0x8c
  43ab12:	xchg   DWORD PTR [ebp+0x60],eax
  43ab15:	test   eax,0x47d00fbd
  43ab1a:	stc    
  43ab1b:	dec    DWORD PTR [ecx+eax*8+0x4f]
  43ab1f:	mov    esi,DWORD PTR [ecx+0x5c400b57]
  43ab25:	mov    ah,0x59
  43ab27:	pop    DWORD PTR [eax]
	...
  43ab39:	add    BYTE PTR [eax],al
  43ab3b:	add    BYTE PTR [ebx+edx*4-0x4bdd00b0],cl
  43ab42:	jno    0x43aad3
  43ab44:	fcom   QWORD PTR [ebx+0x596075f5]
  43ab4a:	sar    edi,1
  43ab4c:	bound  ebx,QWORD PTR [ebx+0x44]
  43ab4f:	in     al,dx
  43ab50:	pop    ss
  43ab51:	cmp    eax,0x55b58406
  43ab56:	std    
  43ab57:	push   DWORD PTR [ebp+0x390a46bd]
  43ab5d:	pop    ebp
  43ab5e:	std    
  43ab5f:	push   DWORD PTR [ebp-0x428b927f]
  43ab65:	jae    0x43ab2f
  43ab67:	test   DWORD PTR [ebp-0x1d080f91],0x60bf8894
  43ab71:	in     eax,0x7c
  43ab73:	jl     0x43ab42
  43ab75:	retf   
  43ab76:	rcr    DWORD PTR [ecx-0x7a],0xa6
  43ab7a:	xlat   BYTE PTR ds:[ebx]
  43ab7b:	popa   
  43ab7c:	sub    al,0x2b
  43ab7e:	push   0xffffff8c
  43ab80:	jo     0x43abf0
  43ab82:	(bad)  
  43ab83:	dec    edi
  43ab84:	mov    dl,0xb4
  43ab86:	int    0x11
  43ab88:	cmc    
  43ab89:	call   0x69f4f808
  43ab8e:	inc    ecx
  43ab8f:	or     ebp,DWORD PTR [esp+edi*8]
  43ab92:	test   DWORD PTR [eax-0x34d5b6f0],ecx
  43ab98:	add    dl,ch
  43ab9a:	or     BYTE PTR [ecx+eax*4+0x5c],0xc8
  43ab9f:	fild   DWORD PTR [eax]
	...
  43abb1:	add    BYTE PTR [eax],al
  43abb3:	add    ch,ah
  43abb5:	arpl   ax,cx
  43abb7:	xchg   edi,eax
  43abb8:	add    eax,0x2f7c872
  43abbd:	stc    
  43abbe:	jbe    0x43ab97
  43abc0:	mov    esi,0xb1002228
  43abc5:	call   0xe8f8b8c7
  43abca:	std    
  43abcb:	add    esp,ebp
  43abcd:	popf   
  43abce:	xlat   BYTE PTR ds:[ebx]
  43abcf:	push   edx
  43abd0:	in     al,0x75
  43abd2:	outs   dx,DWORD PTR ds:[esi]
  43abd3:	je     0x43ab82
  43abd5:	adc    eax,0xa8c57412
  43abda:	add    al,0x85
  43abdc:	cmc    
  43abdd:	pushf  
  43abde:	push   ss
  43abdf:	sti    
  43abe0:	test   al,0x8f
  43abe2:	xchg   DWORD PTR [ebp-0x1f],edi
  43abe5:	iret   
  43abe6:	cmc    
  43abe7:	ret    
  43abe8:	adc    dl,dh
  43abea:	mov    ecx,0x8ab38171
  43abef:	pop    edx
  43abf0:	cmp    ecx,DWORD PTR [ebp-0x75]
  43abf3:	jnp    0x43ac66
  43abf5:	ffreep st(0)
  43abf7:	out    dx,al
  43abf8:	jmp    0x6ad7:0x6170e95b
  43abff:	xlat   BYTE PTR ds:[ebx]
  43ac00:	into   
  43ac01:	(bad)  
  43ac02:	fdiv   QWORD PTR [edi-0x21]
  43ac05:	jl     0x43abea
  43ac07:	adc    al,0x75
  43ac09:	(bad)  
  43ac0a:	mov    cl,0xcc
  43ac0c:	xor    ecx,DWORD PTR [ebp+0x57]
  43ac0f:	shr    ebp,1
  43ac11:	shr    edi,1
  43ac13:	add    esi,DWORD PTR [edx]
  43ac15:	dec    esi
  43ac16:	jecxz  0x43abf0
	...
  43ac2c:	cmp    edx,DWORD PTR [edi+eiz*1+0x648ff516]
  43ac33:	inc    esp
  43ac34:	es xchg ebx,eax
  43ac36:	mov    bh,0x70
  43ac38:	xchg   DWORD PTR [edx],ecx
  43ac3a:	loop   0x43abc2
  43ac3c:	push   edx
  43ac3d:	pop    ebx
  43ac3e:	out    0xd3,al
  43ac40:	(bad)  
  43ac41:	mov    esi,0xe7e7137d
  43ac46:	push   ss
  43ac47:	or     BYTE PTR [edi-0x2a],bh
  43ac4a:	call   0xf17f:0x40b0944
  43ac51:	jg     0x43abea
  43ac53:	frstor [edx-0x2b]
  43ac56:	pop    esp
  43ac57:	adc    al,0x5e
  43ac59:	pop    esp
  43ac5a:	jmp    0x43accc
  43ac5c:	leave  
  43ac5d:	xchg   DWORD PTR ds:0x37c4e04,edi
  43ac63:	adc    eax,0x436c8ff5
  43ac68:	mov    BYTE PTR [ebx-0x30368ee9],0x0
  43ac6f:	fcomi  st,st(6)
  43ac71:	aad    0x86
  43ac73:	and    al,0xc9
  43ac75:	out    dx,al
  43ac76:	(bad)  
  43ac77:	fnstenv [esi+0x33]
  43ac7a:	mov    esi,0x853cb6ed
  43ac7f:	test   DWORD PTR [edi],esi
  43ac81:	jmp    0x1e52:0x8fb6ea70
  43ac88:	jp     0x43ac95
  43ac8a:	std    
  43ac8b:	jg     0x43acf2
  43ac8d:	fst    DWORD PTR [eax+0x76]
	...
  43aca4:	jecxz  0x43ac33
  43aca6:	stc    
  43aca7:	aam    0xe2
  43aca9:	jp     0x43aceb
  43acab:	jmp    0x6040b80b
  43acb0:	inc    ebp
  43acb1:	fst    DWORD PTR [eax-0x47]
  43acb4:	out    dx,al
  43acb5:	add    eax,0x1ab6a98a
  43acba:	ins    DWORD PTR es:[edi],dx
  43acbb:	jmp    0x43ac73
  43acbd:	(bad)  
  43acbe:	mov    esi,DWORD PTR [esi+eax*2-0x27]
  43acc2:	stc    
  43acc3:	ss push cs
  43acc5:	adc    al,dh
  43acc7:	sub    al,0x25
  43acc9:	push   esi
  43acca:	(bad)  
  43accb:	cmc    
  43accc:	test   DWORD PTR [edi],esi
  43acce:	sub    DWORD PTR [ecx],0xffffff84
  43acd1:	or     DWORD PTR [ebx-0x626d994],0xaed660e
  43acdb:	jmp    0x29c83c96
  43ace0:	push   0xffffff91
  43ace2:	mov    al,0xe8
  43ace4:	or     ebx,edx
  43ace6:	das    
  43ace7:	sub    DWORD PTR [edi+0x7de90512],ebx
  43aced:	push   cs
  43acee:	in     eax,dx
  43acef:	push   0xe90368d5
  43acf4:	mov    dh,0x44
  43acf6:	push   ecx
  43acf7:	pop    esp
  43acf8:	sub    al,0x21
  43acfa:	cld    
  43acfb:	add    BYTE PTR [ebx+0x65],dh
  43acfe:	dec    ecx
  43acff:	push   0x3954a8
  43ad04:	hlt    
  43ad05:	pusha  
  43ad06:	(bad)  
	...
  43ad1c:	push   ebx
  43ad1d:	or     BYTE PTR [edx-0x6cb77f1],bh
  43ad23:	call   FWORD PTR [eax+edx*1]
  43ad26:	test   DWORD PTR [eax+0x50f66520],esi
  43ad2c:	popa   
  43ad2d:	push   es
  43ad2e:	scas   al,BYTE PTR es:[edi]
  43ad2f:	std    
  43ad30:	xor    esp,DWORD PTR [ebp+0x49]
  43ad33:	dec    DWORD PTR [ecx]
  43ad35:	aad    0x14
  43ad37:	inc    eax
  43ad38:	fmul   QWORD PTR [edi]
  43ad3a:	test   DWORD PTR [eax+0x50f66450],esi
  43ad40:	push   ebx
  43ad41:	(bad)  
  43ad42:	add    DWORD PTR [ebp-0x439e26e7],ecx
  43ad48:	push   ebx
  43ad49:	retf   
  43ad4a:	stc    
  43ad4b:	dec    edi
  43ad4c:	je     0x43ad95
  43ad4e:	lock std 
  43ad50:	jae    0x43ad62
  43ad52:	mov    esi,0xf6641f10
  43ad57:	(bad)  
  43ad59:	stc    
  43ad5a:	stc    
  43ad5b:	dec    DWORD PTR [eax+eax*8+0xfa475f6]
  43ad62:	test   DWORD PTR [ecx+esi*4-0x4baf099c],esi
  43ad69:	call   0x64f7ad4e
  43ad6e:	je     0x43ad78
  43ad70:	push   es
  43ad71:	inc    esp
  43ad72:	loope  0x43ad4f
  43ad74:	pop    esi
  43ad75:	(bad)  
  43ad76:	test   BYTE PTR [edi+eax*8+0x4c897dd4],0x90
  43ad7e:	add    BYTE PTR [ebp+0x0],cl
	...
  43ad94:	leave  
  43ad95:	sbb    al,0xfd
  43ad97:	push   DWORD PTR [ebx-0x40]
  43ad9a:	popa   
  43ad9b:	fdiv   QWORD PTR [ebp-0x4293]
  43ada1:	mov    bl,0x4
  43ada3:	add    BYTE PTR [ebp+0x2f93b05b],dh
  43ada9:	adc    eax,0x16ace76b
  43adae:	jno    0x43adaa
  43adb0:	jl     0x43ae31
  43adb2:	jge    0x43adab
  43adb4:	sbb    ch,BYTE PTR [edx+eiz*8-0x2184699]
  43adbb:	(bad)  
  43adbc:	cmp    BYTE PTR [ebx-0x4f],ah
  43adbf:	cld    
  43adc0:	add    al,BYTE PTR ds:0x5d0967ce
  43adc6:	mov    ebp,0x61baf3ff
  43adcb:	adc    BYTE PTR [ebp-0x1a],dh
  43adce:	mov    ch,0x3c
  43add0:	mov    bh,0xe7
  43add2:	std    
  43add3:	jmp    DWORD PTR [edx+0x25]
  43add6:	fadd   DWORD PTR [ebx-0x7a]
  43add9:	xor    eax,0x15094480
  43adde:	into   
  43addf:	cli    
  43ade0:	test   al,0x16
  43ade2:	adc    al,0x40
  43ade4:	mov    ch,0x69
  43ade6:	inc    ecx
  43ade7:	or     esp,esi
  43ade9:	test   al,0xe3
  43adeb:	mov    al,dh
  43aded:	dec    esp
  43adee:	ror    BYTE PTR [eax+edi*8+0x2852cd64],cl
  43adf5:	fs xchg ecx,eax
  43adf7:	cmc    
	...
  43ae0c:	xchg   edx,eax
  43ae0d:	jb     0x43addc
  43ae0f:	mov    WORD PTR [eax],?
  43ae11:	xor    eax,0x1982fa70
  43ae16:	inc    ebx
  43ae17:	inc    esp
  43ae18:	cmp    DWORD PTR ds:0xa9b5fffe,esp
  43ae1e:	enter  0xb4e7,0xe8
  43ae22:	std    
  43ae23:	dec    DWORD PTR [ebp-0xf]
  43ae26:	jo     0x43ae22
  43ae28:	pop    edx
  43ae29:	nop
  43ae2a:	fimul  DWORD PTR [ebx+ebp*4-0x31]
  43ae2e:	ror    BYTE PTR [ebx+edx*2-0x7e],cl
  43ae32:	xchg   DWORD PTR fs:[esi],eax
  43ae35:	aad    0xca
  43ae37:	ins    DWORD PTR es:[edi],dx
  43ae38:	jmp    0xf5d3:0x316e02e7
  43ae3f:	inc    ebx
  43ae40:	(bad)  
  43ae41:	mov    al,ss:0x148fb642
  43ae47:	jns    0x43ae57
  43ae49:	adc    DWORD PTR [esp+eax*4-0x2a187047],edx
  43ae50:	addr16 gs neg ecx
  43ae54:	add    bh,BYTE PTR [esi]
  43ae56:	pop    esi
  43ae57:	ins    BYTE PTR es:[edi],dx
  43ae58:	(bad)  
  43ae59:	jl     0x43ae72
  43ae5b:	push   ss
  43ae5c:	jne    0x43aded
  43ae5e:	dec    ax
  43ae60:	mov    esi,0xe2fbf50f
  43ae65:	pop    ebx
  43ae66:	mov    bl,0x80
  43ae68:	pop    ecx
  43ae69:	and    edi,0xfffffff7
  43ae6c:	xchg   edi,eax
  43ae6d:	or     al,0x5b
  43ae6f:	clc    
	...
  43ae84:	stos   DWORD PTR es:[edi],eax
  43ae85:	rcr    ah,cl
  43ae87:	(bad)  
  43ae88:	cmp    ecx,ebx
  43ae8a:	aas    
  43ae8b:	mov    ds:0x7b42d1ac,eax
  43ae90:	stc    
  43ae91:	shl    DWORD PTR [esp+eax*2+0x2c],cl
  43ae95:	jle    0x43ae31
  43ae97:	ins    BYTE PTR es:[edi],dx
  43ae98:	sub    DWORD PTR [edi+edi*1+0x22d498cd],eax
  43ae9f:	jns    0x43ae43
  43aea1:	or     BYTE PTR [ebp-0x6326ce01],bl
  43aea7:	mov    ebx,0xab00cfd3
  43aeac:	jp     0x43ae80
  43aeae:	out    0xfc,eax
  43aeb0:	and    al,0x4c
  43aeb2:	out    dx,eax
  43aeb3:	mov    ebx,0xa10081e6
  43aeb8:	imul   esp,ebp,0xffffff8b
  43aebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aebc:	pop    edx
  43aebd:	inc    edx
  43aebe:	push   0x8fb6b0
  43aec3:	ror    BYTE PTR [edi+0x3],cl
  43aec6:	inc    esp
  43aec7:	in     eax,0x66
  43aec9:	push   0xffffffc6
  43aecb:	jmp    0x9a2c3e86
  43aed0:	mov    esi,0xa672f9d5
  43aed5:	or     esi,ebx
  43aed7:	cmp    eax,0xdd440989
  43aedc:	add    dl,ch
  43aede:	dec    ecx
  43aedf:	mul    DWORD PTR [eax-0x7adb782b]
  43aee5:	or     eax,ecx
  43aee7:	push   ss
	...
  43aefc:	add    DWORD PTR [eax-0x18],eax
  43aeff:	dec    ebx
  43af00:	mov    bh,0xd5
  43af02:	stc    
  43af03:	xchg   edx,eax
  43af04:	push   ds
  43af05:	add    edi,DWORD PTR [ecx+ebp*2-0x7e062aa4]
  43af0c:	sbb    eax,DWORD PTR [ebx-0x2e039106]
  43af12:	mov    WORD PTR [edi+eiz*1-0x28],gs
  43af16:	stc    
  43af17:	pop    esi
  43af18:	out    0x8,al
  43af1a:	inc    esp
  43af1b:	in     eax,0x9d
  43af1d:	dec    esp
  43af1e:	cld    
  43af1f:	bound  edi,QWORD PTR [eax-0x16]
  43af22:	sbb    DWORD PTR [ebx],edx
  43af24:	mov    ecx,0x2f41858f
  43af29:	push   esp
  43af2a:	cld    
  43af2b:	ins    BYTE PTR es:[edi],dx
  43af2c:	adc    DWORD PTR [ebp-0x36],ebx
  43af2f:	imul   ecx,DWORD PTR [ebx-0x468dff77],0xffd4108
  43af39:	shr    BYTE PTR [ebp-0x8],cl
  43af3c:	adc    DWORD PTR [esi-0x2a487418],ebx
  43af42:	stc    
  43af43:	add    BYTE PTR [ebx+0x35],dl
  43af46:	push   ebp
  43af47:	add    DWORD PTR [edx+0x65],ebp
  43af4a:	jp     0x43afb1
  43af4c:	push   0x5178688e
  43af51:	lea    eax,[eax]
  43af53:	(bad)  
  43af54:	loope  0x43af61
  43af56:	hlt    
  43af57:	jmp    FWORD PTR [ebx-0x4e]
  43af5a:	stc    
  43af5b:	dec    edi
  43af5c:	imul   edi,DWORD PTR [edi+0x50],0x16
	...
  43af74:	mov    WORD PTR [ebx+0xa284581],cs
  43af7a:	mov    esi,0x63bdcc0c
  43af7f:	add    dl,BYTE PTR [ebp-0x1872fe38]
  43af85:	(bad)  
  43af86:	pop    eax
  43af87:	mov    DWORD PTR [edi+0x40ece1d7],ebp
  43af8d:	test   BYTE PTR gs:[ebx+0x5e5667d1],0x55
  43af95:	dec    edx
  43af96:	add    DWORD PTR [eax],eax
  43af98:	cmp    ebx,esi
  43af9a:	add    eax,0xf68bd6e8
  43af9f:	push   DWORD PTR [esi-0x3dff9d85]
  43afa5:	fs adc al,0x50
  43afa8:	ror    ah,cl
  43afaa:	stc    
  43afab:	adc    BYTE PTR [eax+0x5756bad7],0xdf
  43afb2:	sbb    eax,0x36155708
  43afb7:	lea    esp,[edx-0x34]
  43afba:	dec    ecx
  43afbb:	mov    dl,BYTE PTR [edx-0x5c]
  43afbe:	dec    esi
  43afbf:	call   0x443c32
  43afc4:	inc    edx
  43afc5:	xor    al,0xe9
  43afc7:	add    dl,bl
  43afc9:	fs sub al,al
  43afcc:	dec    edx
  43afcd:	dec    edx
  43afce:	std    
  43afcf:	push   DWORD PTR [ebp-0x1b1484ed]
  43afd5:	pop    ss
  43afd6:	jnp    0x43afd9
	...
  43afec:	data16 test BYTE PTR ds:[eax],al
  43aff0:	mov    ch,0xe6
  43aff2:	rcl    BYTE PTR [edx+0x62],cl
  43aff5:	push   ebx
  43aff6:	cmc    
  43aff7:	mov    eax,?
  43aff9:	ficom  WORD PTR [ebp-0x40]
  43affc:	ret    0xfde6
  43afff:	xor    DWORD PTR [ebp+0x3a],0x32
  43b003:	sti    
  43b004:	enter  0x7aba,0xc1
  43b008:	cmp    bh,BYTE PTR [ebx]
  43b00a:	ins    BYTE PTR es:[edi],dx
  43b00b:	cli    
  43b00c:	test   al,0xda
  43b00e:	push   ebp
  43b00f:	leave  
  43b010:	mov    ch,0xe6
  43b012:	std    
  43b013:	cli    
  43b014:	test   al,0x1e
  43b016:	jnp    0x43b00f
  43b018:	or     eax,0x12f9fd54
  43b01d:	pop    ebp
  43b01e:	inc    DWORD PTR [esi+0x7f7ade78]
  43b024:	xor    eax,0x62fffde7
  43b029:	push   cs
  43b02a:	bound  ecx,QWORD PTR [edx]
  43b02c:	mov    ch,0xe6
  43b02e:	xor    al,al
  43b030:	xor    BYTE PTR [ecx-0xa],dl
  43b033:	call   0xedf7:0xc8c978f5
  43b03a:	std    
  43b03b:	push   esp
  43b03c:	cmp    al,BYTE PTR ds:[edx+0x7b1585eb]
  43b043:	xlat   BYTE PTR ds:[ebx]
  43b044:	mov    dl,0xf0
  43b046:	inc    edx
  43b047:	inc    edi
  43b048:	arpl   WORD PTR [ecx],bx
  43b04a:	jnp    0x43b03c
  43b04c:	sub    eax,eax
  43b04e:	mov    ch,0x74
	...
  43b064:	mov    edi,0xffbc076
  43b069:	push   edx
  43b06a:	stc    
  43b06b:	shl    eax,0x7c
  43b06e:	aad    0x65
  43b070:	mov    ch,0x8f
  43b072:	and    dh,al
  43b074:	mov    ds,WORD PTR ds:0x901853a5
  43b07a:	dec    DWORD PTR [esi]
  43b07c:	xchg   esi,eax
  43b07d:	into   
  43b07e:	or     bh,BYTE PTR [esi-0x4c]
  43b081:	sbb    ch,BYTE PTR [eax-0x7d]
  43b084:	mov    ch,0x8f
  43b086:	out    0x78,eax
  43b088:	icebp  
  43b089:	fistp  WORD PTR [eax-0x15641e96]
  43b08f:	out    dx,eax
  43b090:	mov    edx,0x4afa87b7
  43b095:	iret   
  43b096:	outs   dx,BYTE PTR ds:[esi]
  43b097:	ins    BYTE PTR es:[edi],dx
  43b098:	cmp    edi,ecx
  43b09a:	pop    ebx
  43b09b:	pminsw mm4,QWORD PTR [esi-0x41]
  43b09f:	shr    DWORD PTR [edi],1
  43b0a1:	iret   
  43b0a2:	ret    0x27e
  43b0a5:	sbb    esp,ebx
  43b0a7:	fnsave [ebp-0x55965ce6]
  43b0ad:	sbb    DWORD PTR [edi-0x15e533a3],esp
  43b0b3:	jl     0x43b03f
  43b0b5:	psubsw mm0,QWORD PTR [ebx]
  43b0b8:	mov    ch,0x1c
  43b0ba:	and    eax,0x1d1c65f8
  43b0bf:	cld    
  43b0c0:	test   esi,ecx
  43b0c2:	cld    
  43b0c3:	sti    
  43b0c4:	jp     0x43b0df
  43b0c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b0c7:	pop    esp
	...
  43b0dc:	add    BYTE PTR [edi+eiz*8-0xc2fcefd],bl
  43b0e3:	push   es
  43b0e4:	into   
  43b0e5:	inc    esp
  43b0e6:	repz jl 0x43b0dd
  43b0e9:	into   
  43b0ea:	aam    0xfb
  43b0ec:	jae    0x43b0a5
  43b0ee:	out    dx,eax
  43b0ef:	add    esi,DWORD PTR [ebp-0x4510b571]
  43b0f5:	adc    al,0x28
  43b0f7:	stc    
  43b0f8:	dec    edi
  43b0f9:	ror    BYTE PTR [edi+0x6b],cl
  43b0fc:	lahf   
  43b0fd:	int3   
  43b0fe:	add    BYTE PTR [esi],dh
  43b100:	clc    
  43b101:	push   cs
  43b102:	das    
  43b103:	sub    DWORD PTR [eax+ebp*2+0x55],edi
  43b107:	xor    bl,dh
  43b109:	xchg   esi,eax
  43b10a:	add    BYTE PTR [ecx+eax*1+0x90d7dbb],dh
  43b111:	dec    esi
  43b112:	in     al,dx
  43b113:	in     eax,dx
  43b114:	mov    DWORD PTR [eax+0x51],esp
  43b117:	push   es
  43b118:	pop    edx
  43b119:	call   0x8310:0x53e1f985
  43b120:	mov    dh,0x1c
  43b122:	pop    ebp
  43b123:	lds    edx,FWORD PTR [esi-0x221b6849]
  43b129:	leave  
  43b12a:	xchg   DWORD PTR ds:0xa9839b95,esp
  43b130:	dec    ebx
  43b131:	xchg   esi,eax
  43b132:	jge    0x43b0d5
  43b134:	popf   
  43b135:	mov    bh,0xd5
  43b137:	jmp    0x3fcf40f2
  43b13c:	sar    DWORD PTR [esi-0x2b],0x1e
	...
  43b154:	cdq    
  43b155:	push   0x24
  43b157:	aad    0x9d
  43b159:	mov    ds:0xcdf6fba4,eax
  43b15e:	or     dl,BYTE PTR [edi+0x43]
  43b161:	xchg   esi,eax
  43b162:	dec    eax
  43b163:	sbb    eax,0xfe7357a2
  43b168:	cmp    eax,edx
  43b16a:	sbb    BYTE PTR [edx-0x4c],dh
  43b16d:	xchg   BYTE PTR [ebp+eax*8-0x52],al
  43b171:	ds fs jbe 0x43b140
  43b175:	cdq    
  43b176:	test   DWORD PTR [ecx+ebp*4],esp
  43b179:	aaa    
  43b17a:	(bad)  
  43b17b:	jmp    0xcc2c4136
  43b180:	mov    bl,0xc9
  43b182:	stc    
  43b183:	ins    DWORD PTR es:[edi],dx
  43b184:	jbe    0x43b1c8
  43b186:	push   eax
  43b187:	adc    BYTE PTR [edi-0x23ff6c68],bh
  43b18d:	dec    eax
  43b18e:	cmp    eax,0x256c7c24
  43b193:	or     edx,0xffffffc8
  43b196:	add    BYTE PTR [esi],0x87
  43b199:	or     eax,0x7b2f181e
  43b19e:	cmc    
  43b19f:	je     0x43b219
  43b1a1:	vpminsw xmm0,xmm3,XMMWORD PTR [edi+esi*1-0x43637b0a]
  43b1aa:	sub    al,0xff
  43b1ac:	jmp    0x7c893475
  43b1b1:	jmp    0x918fb279
  43b1b6:	call   0x43b1e6
	...
  43b1cb:	add    BYTE PTR [ecx+0x37],ch
  43b1ce:	test   BYTE PTR [esp+ebx*1-0x5b17e740],0x35
  43b1d6:	idiv   bh
  43b1d8:	mul    BYTE PTR [ebx-0x6847bb75]
  43b1de:	push   eax
  43b1df:	push   esi
  43b1e0:	repz sahf 
  43b1e2:	dec    esp
  43b1e3:	push   ss
  43b1e4:	int3   
  43b1e5:	xchg   ebx,eax
  43b1e6:	sub    ebx,ebx
  43b1e8:	(bad)  
  43b1e9:	dec    edi
  43b1ea:	add    eax,0x1434ab43
  43b1ef:	lods   al,BYTE PTR ds:[esi]
  43b1f0:	push   cs
  43b1f1:	sar    ecx,1
  43b1f3:	imul   ecx,DWORD PTR [ecx+ebp*2],0x35238253
  43b1fa:	jp     0x43b260
  43b1fc:	clc    
  43b1fd:	pushf  
  43b1fe:	add    BYTE PTR [ebx+0x15739337],al
  43b204:	dec    esp
  43b205:	mov    dh,0x1
  43b207:	add    bl,cl
  43b209:	cwde   
  43b20a:	cmc    
  43b20b:	je     0x43b205
  43b20d:	mov    al,ds:0xa3b874f5
  43b212:	call   0xf67a37af
  43b217:	jmp    0x43b1ce
  43b219:	scas   eax,DWORD PTR es:[edi]
  43b21a:	js     0x43b28f
  43b21c:	fnstcw WORD PTR [esi+0x55a8d955]
  43b222:	popa   
  43b223:	xchg   BYTE PTR [ecx],ch
  43b225:	xchg   ebx,eax
  43b226:	clc    
  43b227:	cli    
  43b228:	jecxz  0x43b278
  43b22a:	outs   dx,DWORD PTR ds:[esi]
  43b22b:	stc    
  43b22c:	nop
  43b22d:	jge    0x43b1f9
  43b22f:	out    0x0,eax
	...
  43b241:	add    BYTE PTR [eax],al
  43b243:	add    BYTE PTR [edx+0x30fa6774],bl
  43b249:	and    bl,BYTE PTR [edx]
  43b24b:	adc    al,0x8d
  43b24d:	xor    DWORD PTR ds:0x3d3172fa,ecx
  43b253:	pop    edx
  43b254:	or     esi,edx
  43b256:	jbe    0x43b23c
  43b258:	add    BYTE PTR [ecx-0x8],bh
  43b25b:	inc    DWORD PTR [eax]
  43b25d:	cs ja  0x43b257
  43b260:	inc    eax
  43b261:	inc    ebp
  43b262:	cmc    
  43b263:	out    0x18,eax
  43b265:	mov    bl,0x62
  43b267:	cli    
  43b268:	xor    BYTE PTR [ebp+0xc],ah
  43b26b:	call   0xfaa69580
  43b270:	inc    eax
  43b271:	jne    0x43b28f
  43b273:	push   eax
  43b274:	sub    ch,bl
  43b276:	popf   
  43b277:	or     eax,0x7a76b675
  43b27c:	mov    cl,0x3b
  43b27e:	bound  esi,QWORD PTR [ebx-0x46]
  43b281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b282:	popa   
  43b283:	adc    al,0xf5
  43b285:	(bad)  
  43b286:	mov    ebp,0x3d8c63ff
  43b28b:	or     al,BYTE PTR [ebx-0x52]
  43b28e:	mov    esp,0xef6fbd73
  43b293:	or     edi,DWORD PTR [eax]
  43b295:	or     BYTE PTR [edi+eiz*8],0xb6
  43b299:	cmp    esi,DWORD PTR [edi-0xf10cff9]
  43b29f:	add    eax,DWORD PTR [edi+0x3e4456f6]
  43b2a5:	(bad)  
  43b2a6:	mov    eax,0xff
	...
  43b2bb:	add    BYTE PTR [eax+ebx*1-0x2c],ah
  43b2bf:	pop    ds
  43b2c0:	lods   eax,DWORD PTR ds:[esi]
  43b2c1:	push   ss
  43b2c2:	cli    
  43b2c3:	mul    BYTE PTR [edi+0x40]
  43b2c6:	out    0xf6,al
  43b2c8:	addr16 push eax
  43b2ca:	call   0xeadfb849
  43b2cf:	xchg   esi,eax
  43b2d0:	je     0x43b2e7
  43b2d2:	push   ss
  43b2d3:	out    dx,eax
  43b2d4:	mov    bl,0x16
  43b2d6:	mov    eax,ds:0x9ad0c3fb
  43b2db:	pop    es
  43b2dc:	fcmovbe st,st(7)
  43b2de:	fidiv  WORD PTR ds:0xcd184daf
  43b2e4:	jae    0x43b2c1
  43b2e6:	mov    ch,0x66
  43b2e8:	out    0x73,al
  43b2ea:	fstp   TBYTE PTR [edi+eiz*4-0x36]
  43b2ee:	aam    0xb7
  43b2f0:	les    ecx,FWORD PTR [edi-0x19]
  43b2f3:	xor    BYTE PTR [esi-0x64],0xfe
  43b2f7:	add    edx,ecx
  43b2f9:	jb     0x43b2e2
  43b2fb:	mov    bl,0xb5
  43b2fd:	imul   esp,DWORD PTR [ebp+0x5e643afc],0xda608558
  43b307:	lods   eax,DWORD PTR ds:[esi]
  43b308:	jge    0x43b298
  43b30a:	pop    bx
  43b30c:	call   0x3b58:0x6c143361
  43b313:	std    
  43b314:	loopne 0x43b2e5
  43b316:	rcr    BYTE PTR [ebp+0x76e7cb0a],0x92
  43b31d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b31e:	mov    es,WORD PTR [ecx]
	...
  43b334:	sub    BYTE PTR [eax-0x21],al
  43b337:	js     0x43b2f3
  43b339:	push   cs
  43b33a:	add    eax,0x1a5dea6c
  43b33f:	jns    0x43b35e
  43b341:	and    cl,ch
  43b343:	add    esi,DWORD PTR [ebp-0x4eeefee4]
  43b349:	pop    edx
  43b34a:	stc    
  43b34b:	aam    0x2a
  43b34d:	popf   
  43b34e:	inc    eax
  43b34f:	jmp    0x64500391
  43b354:	jno    0x43b394
  43b356:	push   cs
  43b357:	push   esi
  43b358:	mov    ds:0x80415092,eax
  43b35d:	enter  0x46fb,0x1e
  43b361:	push   esp
  43b362:	clc    
  43b363:	jb     0x43b3c0
  43b365:	xchg   edx,eax
  43b366:	xchg   DWORD PTR [edx+ebx*1+0x22d4f95a],ebp
  43b36d:	pushf  
  43b36e:	inc    eax
  43b36f:	jmp    0xea3bfea9
  43b374:	std    
  43b375:	pop    ebx
  43b376:	or     BYTE PTR [esi-0x6b039c15],bh
  43b37c:	mov    ebx,0xb905634a
  43b381:	aaa    
  43b382:	xor    BYTE PTR [esi+esi*4-0x71],dh
  43b386:	in     ax,dx
  43b388:	jle    0x43b33c
  43b38a:	aad    0x33
  43b38c:	rol    ebp,cl
  43b38e:	cs test eax,0x19ba89dd
  43b394:	dec    edx
  43b395:	retf   0x3ff9
	...
  43b3ac:	jle    0xb2bfcf0a
  43b3b2:	rol    DWORD PTR [ebx-0x567b3a68],0xa
  43b3b9:	jae    0x43b340
  43b3bb:	sub    al,0x9d
  43b3bd:	adc    DWORD PTR [ecx+esi*4-0x73],edx
  43b3c1:	pop    ebx
  43b3c2:	or     BYTE PTR [esi],bh
  43b3c4:	repz mov cl,0xad
  43b3c7:	arpl   WORD PTR [eax-0x1d567b3b],dx
  43b3cd:	sahf   
  43b3ce:	test   DWORD PTR [ecx+ebp*8],ebx
  43b3d1:	pop    esp
  43b3d2:	data16 add al,dl
  43b3d5:	aad    0x8c
  43b3d7:	push   ebp
  43b3d8:	in     al,0x65
  43b3da:	leave  
  43b3db:	mov    ecx,0xd883334a
  43b3e0:	pop    ebx
  43b3e1:	mov    ecx,0x314ae8f1
  43b3e6:	cld    
  43b3e7:	inc    DWORD PTR [esi+0x4f]
  43b3ea:	push   esi
  43b3eb:	pop    ebx
  43b3ec:	push   0xffffff86
  43b3ee:	mov    ebx,0x50de9c04
  43b3f3:	push   ebp
  43b3f4:	daa    
  43b3f5:	loope  0x43b414
  43b3f7:	sbb    BYTE PTR [edx-0x24],al
  43b3fa:	cmp    al,0x19
  43b3fd:	mov    esp,0xb9155621
  43b402:	sbb    eax,0xa499db10
  43b407:	adc    cl,BYTE PTR [ebp+ecx*4-0x7f]
  43b40b:	inc    ebp
  43b40c:	pusha  
  43b40d:	js     0x43b44c
  43b40f:	or     BYTE PTR [eax],al
	...
  43b421:	add    BYTE PTR [eax],al
  43b423:	add    BYTE PTR [edx+0x77],al
  43b426:	mov    esi,0xff6d7044
  43b42b:	mov    ebx,fs
  43b42d:	enter  0x682,0x2f
  43b431:	inc    esi
  43b432:	ins    DWORD PTR es:[edi],dx
  43b433:	and    al,0x60
  43b435:	dec    edx
  43b436:	mov    ecx,0xf9b98874
  43b43b:	dec    edi
  43b43c:	pop    ebx
  43b43d:	(bad)  
  43b43e:	leave  
  43b43f:	adc    bl,ah
  43b441:	xchg   ebx,eax
  43b442:	cmp    eax,DWORD PTR [edx]
  43b444:	sbb    eax,0x1d75008d
  43b449:	mov    ds:0x77e0ffd1,eax
  43b44e:	adc    bh,bh
  43b450:	icebp  
  43b451:	clc    
  43b452:	or     eax,DWORD PTR [eax+0x1c]
  43b455:	sbb    edi,DWORD PTR [ebx+0x5ccd7b5b]
  43b45b:	pop    ecx
  43b45c:	jne    0x43b4af
  43b45e:	or     DWORD PTR [eax],eax
  43b460:	mov    ch,0x2d
  43b462:	(bad)  
  43b463:	jmp    FWORD PTR [edi-0x458e038f]
  43b469:	clc    
  43b46a:	enter  0x9523,0xb4
  43b46e:	push   0xffffffbb
  43b470:	imul   eax,DWORD PTR [ecx-0x9],0xffffffab
  43b474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b475:	jbe    0x43b47b
  43b477:	cs cmc 
  43b479:	pop    ebp
  43b47a:	ds cli 
  43b47c:	sub    DWORD PTR [ecx-0x9],0xffffffbf
  43b480:	(bad)  
  43b481:	idiv   ch
  43b483:	jle    0x43b458
  43b485:	mov    dh,0xe5
  43b487:	mov    edi,0x0
	...
  43b49c:	mov    ch,0xb6
  43b49e:	std    
  43b49f:	out    0x7e,eax
  43b4a1:	mov    bl,BYTE PTR [edi-0x6]
  43b4a4:	xchg   BYTE PTR ds:[edi-0x76bcfe0f],al
  43b4ab:	sbb    al,0xf1
  43b4ad:	enter  0xffbd,0xc
  43b4b1:	scas   eax,DWORD PTR es:[edi]
  43b4b2:	pop    esi
  43b4b3:	jae    0x43b44e
  43b4b5:	(bad)  
  43b4b6:	mov    bh,0xfa
  43b4b8:	xchg   BYTE PTR [eax+ecx*8],ch
  43b4bb:	and    esp,DWORD PTR [ebp+0x5aff7e1e]
  43b4c1:	mov    dh,0x8c
  43b4c3:	jns    0x43b456
  43b4c5:	xor    ebx,esi
  43b4c7:	aas    
  43b4c8:	fbstp  TBYTE PTR [esi+0x6efb87b6]
  43b4ce:	pop    ebp
  43b4cf:	adc    al,0xe5
  43b4d1:	sar    BYTE PTR [ebp+0x28723fff],0x38
  43b4d8:	ss repnz cmc 
  43b4db:	test   ah,ch
  43b4dd:	mov    DWORD PTR [esi+0xc8b3661],esi
  43b4e3:	add    BYTE PTR [ebx+0x70b20d71],cl
  43b4e9:	scas   eax,DWORD PTR es:[edi]
  43b4ea:	out    0x86,eax
  43b4ec:	push   0xf5e9ef8f
  43b4f1:	lods   al,BYTE PTR ds:[esi]
  43b4f2:	out    dx,eax
  43b4f3:	jmp    0x9b2682b3
  43b4f8:	rcl    BYTE PTR [edi+0x13cd0452],cl
  43b4fe:	cmp    eax,0x61
	...
  43b513:	add    bh,bl
  43b515:	push   ss
  43b516:	and    al,0x28
  43b518:	cdq    
  43b519:	adc    al,0xa9
  43b51b:	imul   edx,DWORD PTR [edi],0x2
  43b51e:	push   0x62
  43b520:	jb     0x43b580
  43b522:	mov    edx,0x9197eb62
  43b527:	(bad)  
  43b528:	(bad)  
  43b529:	jg     0x43b591
  43b52b:	inc    edi
  43b52c:	mov    esi,0xfaf9d357
  43b531:	cmp    edx,esi
  43b533:	jmp    0x43b54f
  43b535:	nop
  43b536:	out    0x3,eax
  43b538:	sbb    edx,DWORD PTR [eax+0x5fa1629a]
  43b53e:	rol    ebx,1
  43b540:	adc    BYTE PTR [edx],0x2c
  43b543:	setb   BYTE PTR [ecx+eax*4+0x5e51dc8c]
  43b54b:	fist   WORD PTR [esi+0x5a4a5e77]
  43b551:	stc    
  43b552:	pop    ss
  43b553:	bound  ebx,QWORD PTR [edi+0x1b]
  43b556:	pushf  
  43b557:	daa    
  43b558:	test   eax,0xefeb9962
  43b55d:	(bad)  [ebp-0x187032fd]
  43b563:	or     esi,DWORD PTR [ebp+0x2f32f7b7]
  43b569:	(bad)  
  43b56a:	imul   eax,DWORD PTR [esi+eiz*4-0x72],0xffffff96
  43b56f:	add    ecx,DWORD PTR [eax+edx*4]
  43b572:	ret    0x1f61
  43b575:	pop    esi
  43b576:	iret   
  43b577:	sbb    eax,DWORD PTR [eax]
	...
  43b589:	add    BYTE PTR [eax],al
  43b58b:	add    BYTE PTR [ecx],dl
  43b58d:	lds    eax,FWORD PTR [eax]
  43b58f:	mov    dh,0x30
  43b591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b592:	add    al,al
  43b594:	imul   ecx,eax,0xe3fa6f9
  43b59a:	lock xchg ecx,eax
  43b59c:	call   0x8d2daf67
  43b5a1:	push   edx
  43b5a2:	and    al,0xe1
  43b5a4:	mov    bh,0x3b
  43b5a6:	add    bl,BYTE PTR [edi]
  43b5a8:	dec    ecx
  43b5a9:	stos   BYTE PTR es:[edi],al
  43b5aa:	cld    
  43b5ab:	jl     0x43b601
  43b5ad:	or     eax,0x927317c3
  43b5b2:	add    BYTE PTR [edx-0x11],ah
  43b5b5:	mov    es,ecx
  43b5b7:	out    dx,eax
  43b5b8:	mov    dl,0x1f
  43b5ba:	inc    ecx
  43b5bb:	jmp    0xe3b8bbfb
  43b5c0:	cmp    DWORD PTR [esi-0x7199b1b0],ecx
  43b5c6:	jge    0x43b597
  43b5c8:	scas   al,BYTE PTR es:[edi]
  43b5c9:	(bad)  
  43b5ca:	stc    
  43b5cb:	mov    bh,0xc2
  43b5cd:	retf   0xad13
  43b5d0:	add    DWORD PTR [esi-0x48189e00],0xca14def9
  43b5da:	push   ebx
  43b5db:	jb     0x43b5c2
  43b5dd:	pop    edi
  43b5de:	push   edx
  43b5df:	fimul  DWORD PTR [ecx+eiz*2]
  43b5e2:	push   edx
  43b5e3:	mov    bh,0x50
  43b5e5:	lds    edx,FWORD PTR [ebx-0x61]
  43b5e8:	sbb    al,0x2c
  43b5ea:	stc    
  43b5eb:	xchg   edi,eax
  43b5ec:	aad    0x9b
  43b5ee:	pushf  
  43b5ef:	fild   WORD PTR [eax]
	...
  43b601:	add    BYTE PTR [eax],al
  43b603:	add    BYTE PTR [esi-0x3a],dh
  43b606:	ss daa 
  43b608:	pop    ebp
  43b609:	lea    edi,[ebx]
  43b60b:	add    BYTE PTR [esi-0x42aa7f70],dh
  43b611:	jne    0x43b5d3
  43b613:	ret    0x62c2
  43b616:	push   0x861dd9
  43b61b:	add    BYTE PTR [ebx+ecx*2+0x3a1c4011],al
  43b622:	cli    
  43b623:	aaa    
  43b624:	inc    edx
  43b625:	das    
  43b626:	cmp    al,0x7
  43b629:	xor    BYTE PTR [esp+eax*1-0x22],dh
  43b62d:	push   ecx
  43b62e:	loop   0x43b649
  43b630:	scas   eax,DWORD PTR es:[edi]
  43b631:	xor    BYTE PTR [esp+ecx*1+0x43],dh
  43b635:	mov    ebp,0x8b8c1341
  43b63a:	sbb    eax,0xde319767
  43b640:	leave  
  43b641:	xchg   esp,eax
  43b642:	dec    ebp
  43b643:	jmp    FWORD PTR [ebx+edx*4-0x2f583fd6]
  43b64a:	push   edi
  43b64b:	leave  
  43b64c:	mov    ds,WORD PTR [edx+0x65618d00]
  43b652:	push   eax
  43b653:	push   esi
  43b654:	push   0x7
  43b656:	push   eax
  43b657:	push   esi
  43b658:	push   0xfffffffc
  43b65a:	dec    esi
  43b65b:	(bad)  
  43b65c:	cmp    al,0x95
  43b65e:	xchg   DWORD PTR [ebp-0x60],eax
  43b661:	adc    al,0xff
  43b663:	push   esi
  43b664:	ret    
  43b665:	add    BYTE PTR [edx],al
  43b667:	push   ebx
	...
  43b67c:	sar    DWORD PTR [ebp-0x6eb3ecc3],cl
  43b682:	aaa    
  43b683:	jne    0x43b6e5
  43b685:	fmulp  st(2),st
  43b687:	cmp    DWORD PTR [ecx+0x65],ecx
  43b68a:	ins    DWORD PTR es:[edi],dx
  43b68b:	into   
  43b68c:	sub    al,BYTE PTR [edi]
  43b68e:	add    eax,DWORD PTR fs:[esi-0x74]
  43b692:	dec    esi
  43b693:	push   esi
  43b694:	es xchg ebx,eax
  43b696:	cmc    
  43b697:	jne    0x43b6d9
  43b699:	gs adc al,0x88
  43b69c:	push   0xffffffd1
  43b69e:	stc    
  43b69f:	test   BYTE PTR [ecx+ebx*1],cl
  43b6a2:	inc    ebp
  43b6a3:	cld    
  43b6a4:	mov    BYTE PTR [ebx-0x794af77f],dl
  43b6aa:	pop    ecx
  43b6ab:	push   eax
  43b6ac:	lods   eax,DWORD PTR ds:[esi]
  43b6ad:	shl    DWORD PTR [eax-0x7341977a],1
  43b6b3:	inc    eax
  43b6b4:	mov    ebp,0x51e70346
  43b6b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b6ba:	test   ebx,ebp
  43b6bc:	add    ebp,DWORD PTR ss:[ecx]
  43b6bf:	jg     0x43b651
  43b6c1:	jmp    0x5210:0x843e4f04
  43b6c8:	cmp    BYTE PTR [edx-0x34],bh
  43b6cb:	or     ch,BYTE PTR [edx]
  43b6cd:	out    0xb2,eax
  43b6cf:	repnz sti 
  43b6d1:	mov    cl,0x53
  43b6d3:	gs mov ah,0xd9
  43b6d6:	dec    ebp
  43b6d7:	mov    gs:0x65dbc72b,eax
  43b6dd:	das    
  43b6de:	xlat   BYTE PTR ds:[ebx]
  43b6df:	repz add BYTE PTR [eax],al
	...
  43b6f2:	add    BYTE PTR [eax],al
  43b6f4:	int    0x10
  43b6f6:	xor    edi,esp
  43b6f8:	mov    dl,0x41
  43b6fa:	inc    ebp
  43b6fb:	out    0xae,eax
  43b6fd:	push   esi
  43b6fe:	pop    edx
  43b6ff:	cli    
  43b700:	sbb    edi,DWORD PTR [edx]
  43b702:	pop    esp
  43b703:	pop    es
  43b704:	daa    
  43b705:	jmp    0x2be8f590
  43b70a:	inc    esp
  43b70b:	je     0x43b6bd
  43b70d:	xchg   edi,eax
  43b70e:	(bad)  
  43b70f:	sti    
  43b710:	mov    gs,WORD PTR [esi+edi*2-0x38c03641]
  43b717:	sti    
  43b718:	and    eax,DWORD PTR ds:[esi]
  43b71b:	(bad)  
  43b71c:	repnz out 0xad,al
  43b71f:	cli    
  43b720:	enter  0xee4a,0x3f
  43b724:	mov    ch,0x41
  43b726:	ror    DWORD PTR [edi],0x3c
  43b729:	jmp    0x43b788
  43b72b:	xchg   dl,dh
  43b72d:	(bad)  
  43b72e:	mov    WORD PTR [ecx+eiz*2+0x63],es
  43b732:	shr    DWORD PTR [edi],0xe5
  43b735:	(bad)  
  43b736:	loop   0x43b730
  43b738:	pop    esi
  43b739:	mov    eax,ds:0xfcbe0427
  43b73e:	jmp    0xf37f320e
  43b743:	adc    BYTE PTR [edx],0x9a
  43b746:	cmp    ecx,DWORD PTR [eax]
  43b748:	loop   0x43b719
  43b74a:	into   
  43b74b:	div    DWORD PTR [ebx]
  43b74d:	mov    WORD PTR [ecx-0x75],cs
  43b750:	and    BYTE PTR [ebp-0x474afc18],0xf0
  43b757:	mov    al,BYTE PTR [eax]
	...
  43b769:	add    BYTE PTR [eax],al
  43b76b:	add    BYTE PTR [edi-0x317c91d3],dh
  43b771:	mov    fs,edi
  43b773:	add    edx,DWORD PTR [edi+0x16]
  43b776:	and    eax,0xd7503368
  43b77b:	push   esi
  43b77c:	jmp    0xc6cf:0xa3f62f11
  43b783:	inc    esp
  43b784:	sub    eax,0xa4e96f52
  43b789:	adc    dh,BYTE PTR [ebp+0x280f053f]
  43b78f:	pop    es
  43b790:	add    eax,0x6c8ae836
  43b795:	mov    eax,0xc39c31dd
  43b79a:	outs   dx,BYTE PTR ds:[esi]
  43b79b:	push   ebx
  43b79c:	cmp    DWORD PTR [edx-0x3024f84c],edi
  43b7a2:	sar    DWORD PTR ds:[ebx],0x83
  43b7a6:	pop    esi
  43b7a7:	cmp    eax,0x3f55292
  43b7ac:	mov    ch,0x15
  43b7ae:	inc    eax
  43b7af:	imul   ebp,ebp,0xffffffe7
  43b7b2:	adc    bl,BYTE PTR [esi+0x3b]
  43b7b5:	dec    ebp
  43b7b6:	or     ecx,DWORD PTR [eax+0x55d03c1a]
  43b7bc:	push   edx
  43b7bd:	nop
  43b7be:	jae    0x43b7e7
  43b7c0:	xor    cl,BYTE PTR [ebp+0x0]
  43b7c3:	in     eax,0x2f
  43b7c5:	adc    DWORD PTR [eax],0xfffffff6
  43b7c8:	jg     0x43b763
  43b7ca:	ror    BYTE PTR [edx],0xfa
  43b7cd:	mov    edx,0xa97d
	...
  43b7e2:	add    BYTE PTR [eax],al
  43b7e4:	sub    DWORD PTR [ebx-0x7],edx
  43b7e7:	pop    esp
  43b7e8:	jge    0x43b7f3
  43b7ea:	inc    esp
  43b7eb:	loope  0x43b81a
  43b7ed:	ret    
  43b7ee:	cli    
  43b7ef:	jns    0x43b832
  43b7f1:	nop
  43b7f2:	add    cl,ch
  43b7f4:	sahf   
  43b7f5:	cwde   
  43b7f6:	mov    esi,0xbe0c60b7
  43b7fb:	push   cs
  43b7fc:	cmp    ebx,DWORD PTR [edx-0x39]
  43b7ff:	stos   DWORD PTR es:[edi],eax
  43b800:	ror    DWORD PTR [edi+0xf657253],0xed
  43b807:	sbb    DWORD PTR [edx+0x233a008f],edi
  43b80d:	or     bl,cl
  43b80f:	push   ds
  43b810:	cmp    al,0xca
  43b812:	call   0xfa0c0f06
  43b817:	sysenter 
  43b819:	mov    ebx,0x934de03
  43b81e:	add    ecx,ebp
  43b820:	mov    dh,0x37
  43b822:	pop    ebp
  43b823:	in     al,0xb6
  43b825:	(bad)  
  43b826:	mov    ebp,DWORD PTR [esi+eiz*1-0x43]
  43b82a:	stc    
  43b82b:	dec    esi
  43b82c:	pop    edx
  43b82e:	dec    ecx
  43b82f:	das    
  43b830:	cmp    dl,BYTE PTR [edx]
  43b832:	idiv   DWORD PTR [esi]
  43b834:	call   0x8fb99fb
  43b839:	ret    
  43b83a:	stc    
  43b83b:	bound  esi,QWORD PTR [edx+edx*4+0x7d]
  43b83f:	sub    eax,0x95c10cc5
  43b844:	mov    ch,0x42
  43b846:	rol    ch,0x0
	...
  43b859:	add    BYTE PTR [eax],al
  43b85b:	add    BYTE PTR [ecx+0x38ea48fe],dh
  43b861:	bound  eax,QWORD PTR [ebx]
  43b863:	add    BYTE PTR [esi+ecx*4-0x79],bl
  43b867:	jne    0x43b8b1
  43b869:	lods   al,BYTE PTR ds:[esi]
  43b86a:	xor    cl,dh
  43b86c:	pop    ebx
  43b86d:	or     edi,DWORD PTR [eax+eax*1+0x4c]
  43b871:	mov    ds,WORD PTR [esi-0x7b]
  43b874:	fidivr DWORD PTR gs:[edx+ecx*4+0x24]
  43b879:	fs enter 0x580,0x8d
  43b87e:	ins    DWORD PTR es:[edi],dx
  43b87f:	je     0x43b818
  43b881:	stc    
  43b882:	add    DWORD PTR [ebp-0xcc577],ecx
  43b888:	dec    ebx
  43b889:	std    
  43b88a:	mov    WORD PTR [ebp-0x997a4],cs
  43b890:	popf   
  43b891:	adc    BYTE PTR [eax+ecx*1-0x170a1e97],bh
  43b898:	dec    edx
  43b899:	push   0x4e50fff6
  43b89e:	ins    DWORD PTR es:[edi],dx
  43b89f:	push   esp
  43b8a0:	push   edi
  43b8a1:	stc    
  43b8a2:	cmc    
  43b8a3:	cmp    esi,DWORD PTR [edx]
  43b8a5:	fisttp DWORD PTR [ebx+ecx*4-0x61]
  43b8a9:	mov    ebx,0x4de7d8ee
  43b8ae:	mov    WORD PTR [ebx-0x1e],cs
  43b8b1:	outs   dx,BYTE PTR ds:[esi]
  43b8b2:	mov    edi,0x6d4df83
  43b8b7:	mov    bh,0xa7
  43b8b9:	pop    esp
  43b8ba:	fcomp  DWORD PTR [ebx]
  43b8bc:	aad    0xf
  43b8be:	mov    esp,0x4
	...
  43b8d3:	add    BYTE PTR [esi+0x12],bl
  43b8d6:	xchg   ebp,eax
  43b8d7:	nop
  43b8d8:	mul    BYTE PTR [ebx-0xa]
  43b8db:	push   edx
  43b8dc:	pop    ds
  43b8dd:	dec    ebp
  43b8de:	std    
  43b8df:	dec    edi
  43b8e0:	scas   eax,DWORD PTR es:[edi]
  43b8e1:	push   esi
  43b8e2:	arpl   WORD PTR ds:0xfec965f4,ax
  43b8e8:	fwait
  43b8e9:	pop    ss
  43b8ea:	rol    BYTE PTR [ebp-0x74e72709],cl
  43b8f0:	mov    ch,0xf3
  43b8f2:	add    eax,0xbd8e9d87
  43b8f7:	adc    BYTE PTR [ebp+0x3dee88b6],dh
  43b8fd:	in     al,dx
  43b8fe:	or     al,ch
  43b900:	int    0xa1
  43b902:	pop    esp
  43b903:	cli    
  43b904:	das    
  43b905:	in     al,dx
  43b906:	or     bh,ah
  43b908:	mov    bh,0xa4
  43b90a:	inc    esp
  43b90b:	pop    edx
  43b90c:	mov    ecx,DWORD PTR [ebp+0x4b]
  43b90f:	mov    ebp,0x86b0b6b9
  43b914:	or     DWORD PTR [eax],edi
  43b916:	push   0xfdb6b4f3
  43b91b:	dec    esi
  43b91c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b91e:	or     BYTE PTR [edi-0x28b1198a],al
  43b924:	arpl   bp,bx
  43b926:	cmp    eax,0xee6e4052
  43b92b:	push   ds
  43b92c:	repnz mov cl,0x8f
  43b92f:	aas    
  43b930:	mov    dh,0x35
  43b932:	ins    BYTE PTR es:[edi],dx
  43b933:	jmp    FWORD PTR ds:0xa3894
	...
  43b949:	add    BYTE PTR [eax],al
  43b94b:	add    BYTE PTR [ecx],bh
  43b94d:	mov    edi,0x7eb50003
  43b952:	int3   
  43b953:	jae    0x43b9d4
  43b955:	outs   dx,BYTE PTR ds:[esi]
  43b956:	int3   
  43b957:	jae    0x43b8eb
  43b959:	outs   dx,BYTE PTR ds:[esi]
  43b95a:	int3   
  43b95b:	jae    0x43b91e
  43b95d:	xor    eax,0xaa212b6c
  43b962:	adc    eax,eax
  43b964:	mov    WORD PTR [edi+0x3],ds
  43b967:	add    BYTE PTR [ebp+0x3e07bf2d],dh
  43b96d:	mov    dh,0x56
  43b96f:	scas   eax,DWORD PTR es:[edi]
  43b970:	cmp    eax,0x2efffdb7
  43b975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b976:	ins    BYTE PTR es:[edi],dx
  43b977:	push   ebp
  43b978:	je     0x43b9ea
  43b97a:	push   ebp
  43b97b:	call   0x42c48d7
  43b980:	mov    ch,0xc0
  43b982:	xchg   esp,eax
  43b983:	or     edi,DWORD PTR [edx]
  43b985:	int3   
  43b986:	call   DWORD PTR [ecx+0x6d0ac05c]
  43b98c:	or     DWORD PTR [esi-0x2bcdfc19],0xf
  43b993:	dec    ecx
  43b994:	pop    esp
  43b995:	shl    edx,0xe1
  43b998:	mov    ebx,0xf4d5cbc7
  43b99d:	mov    dh,0x9c
  43b99f:	jg     0x43b9d0
  43b9a1:	shr    BYTE PTR [esi+0x53],0x3b
  43b9a5:	dec    esp
  43b9a6:	not    DWORD PTR [esi]
  43b9a8:	jmp    0x43b9bf
  43b9aa:	push   ebp
  43b9ab:	pop    eax
  43b9ac:	retf   
  43b9ad:	mov    ebp,0x193c
	...
  43b9c2:	add    BYTE PTR [eax],al
  43b9c4:	push   es
  43b9c5:	out    0xde,eax
  43b9c7:	inc    ebx
  43b9c8:	or     esp,0x1f
  43b9cb:	or     eax,DWORD PTR [esi-0x6c]
  43b9ce:	push   es
  43b9cf:	inc    ebx
  43b9d0:	out    0xe5,eax
  43b9d2:	xor    eax,0x665cfdff
  43b9d7:	inc    ebx
  43b9d8:	mov    dh,0x5f
  43b9da:	(bad)  
  43b9db:	dec    esi
  43b9dc:	push   eax
  43b9dd:	mov    WORD PTR [edi+0x2c],?
  43b9e0:	in     eax,0xc0
  43b9e2:	or     BYTE PTR [esi-0x308df626],0x2c
  43b9e9:	adc    al,0x2d
  43b9eb:	or     al,0x32
  43b9ed:	xchg   DWORD PTR [esi+0x39],ebx
  43b9f0:	call   0x4009:0xb503f72e
  43b9f7:	imul   edi,DWORD PTR ds:0x8d5a52e6,0x29
  43b9fe:	call   0x25be6f06
  43ba03:	shl    BYTE PTR [ecx-0x64a46af8],1
  43ba09:	xchg   esi,eax
  43ba0a:	add    BYTE PTR [edx-0xa],ch
  43ba0d:	push   0xffffff87
  43ba0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ba10:	push   cs
  43ba11:	outs   dx,BYTE PTR ds:[esi]
  43ba12:	stc    
  43ba13:	xchg   ecx,eax
  43ba14:	lock pop DWORD PTR [eax]
  43ba17:	jmp    0x1754ce49
  43ba1c:	(bad)  
  43ba1d:	mov    ecx,0x6441b951
  43ba22:	lock jo 0x43ba92
  43ba25:	ret    
  43ba26:	stc    
  43ba27:	aam    0x0
	...
  43ba39:	add    BYTE PTR [eax],al
  43ba3b:	add    BYTE PTR [esi],al
  43ba3d:	mov    eax,ds:0xcfa3e940
  43ba42:	jge    0x43ba69
  43ba44:	mov    edx,0xced54408
  43ba49:	push   ecx
  43ba4a:	add    al,0x5f
  43ba4c:	pop    ss
  43ba4d:	or     BYTE PTR [ecx+eax*8+0x28],al
  43ba51:	cmp    ebp,0x430ba153
  43ba57:	icebp  
  43ba58:	inc    esi
  43ba59:	or     BYTE PTR [ecx+ecx*8+0x2e],dh
  43ba5d:	push   esp
  43ba5e:	in     al,0xc1
  43ba60:	xchg   BYTE PTR [edx+edi*8],dl
  43ba63:	scas   al,BYTE PTR es:[edi]
  43ba64:	xor    eax,0x31de73ff
  43ba69:	mov    edx,0x35af1a06
  43ba6e:	jmp    DWORD PTR [ecx+0x77]
  43ba71:	or     ecx,DWORD PTR [ecx+ebx*4+0x61]
  43ba75:	sbb    al,BYTE PTR [ebx+0x1fb56c86]
  43ba7b:	jle    0x43ba6f
  43ba7d:	mov    BYTE PTR [ebp+0x740b552c],0x79
  43ba84:	and    DWORD PTR [eax-0x78],esp
  43ba87:	data16 or al,0x16
  43ba8a:	leave  
  43ba8b:	fs out dx,al
  43ba8d:	inc    esi
  43ba8e:	adc    BYTE PTR [edx+0x5a],ah
  43ba91:	fiadd  WORD PTR [ebp-0x7d52ded1]
  43ba97:	add    bl,dh
  43ba99:	pop    eax
  43ba9a:	sbb    BYTE PTR [ebp-0x70],0xb
  43ba9e:	jge    0x43ba94
	...
  43bab4:	ret    
  43bab5:	(bad)  
  43bab6:	in     eax,0x8b
  43bab8:	sbb    DWORD PTR [esi-0x7e],esp
  43babb:	dec    ebp
  43babc:	rcl    BYTE PTR [eax*2-0x15f4ab18],0x3b
  43bac4:	adc    al,0xbe
  43bac6:	jne    0x43ba65
  43bac8:	ret    
  43bac9:	mov    eax,ds:0x654bdfe8
  43bace:	not    BYTE PTR [esi-0x5c]
  43bad1:	jp     0x43bac1
  43bad3:	std    
  43bad4:	inc    ebx
  43bad5:	cmp    eax,0xb3d7ef6
  43bada:	inc    ebp
  43badb:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43badd:	std    
  43bade:	cmc    
  43badf:	lea    ebx,[ecx+0x3fff69d]
  43bae5:	or     DWORD PTR [ebp+0xc],eax
  43bae8:	xchg   ebp,eax
  43bae9:	in     eax,0xf1
  43baeb:	mov    ecx,ecx
  43baed:	xchg   DWORD PTR [ecx-0x3fecbf83],eax
  43baf3:	jmp    0x43bae9
  43baf5:	sbb    BYTE PTR [edi+edi*8+0xc7d0b23],al
  43bafc:	mov    edx,0xcc047714
  43bb01:	int3   
  43bb02:	add    ebp,DWORD PTR [edx-0x33]
  43bb05:	stos   DWORD PTR es:[edi],eax
  43bb06:	std    
  43bb07:	push   esi
  43bb08:	xor    al,0x75
  43bb0a:	leave  
  43bb0b:	std    
  43bb0c:	xor    esp,DWORD PTR [eax-0x1]
  43bb0f:	add    ecx,ecx
  43bb11:	mov    edi,0xc3b60163
  43bb16:	mov    WORD PTR [edi+0x0],es
	...
  43bb29:	add    BYTE PTR [eax],al
  43bb2b:	add    BYTE PTR [edx-0x10e41dff],bl
  43bb31:	gs imul al
  43bb34:	sbb    eax,0xb5fffc83
  43bb39:	int3   
  43bb3a:	xchg   BYTE PTR [edx-0x55],al
  43bb3d:	sub    DWORD PTR [edx+0x4029cdfb],edi
  43bb43:	sub    al,0x82
  43bb45:	in     al,dx
  43bb46:	push   ebp
  43bb47:	mov    al,bh
  43bb49:	mov    dl,0xca
  43bb4b:	mov    bl,0x3e
  43bb4d:	in     al,dx
  43bb4e:	dec    ecx
  43bb4f:	xchg   dh,dh
  43bb51:	mov    dh,0x50
  43bb53:	xlat   BYTE PTR ds:[ebx]
  43bb54:	mov    esi,0x79452466
  43bb59:	sub    al,BYTE PTR [edi+eax*2-0x3e]
  43bb5d:	gs or  al,0xf3
  43bb60:	ins    BYTE PTR es:[edi],dx
  43bb61:	mov    dl,0x46
  43bb63:	inc    dx
  43bb65:	int3   
  43bb66:	mov    al,0x8c
  43bb68:	and    bh,dl
  43bb6a:	push   edi
  43bb6b:	cli    
  43bb6c:	xor    bl,BYTE PTR [ecx]
  43bb6e:	test   DWORD PTR [edi-0x38e2894f],edi
  43bb74:	(bad)
  43bb78:	jmp    0x43bb5e
  43bb7a:	push   ecx
  43bb7b:	xchg   BYTE PTR ds:0xb8744a34,al
  43bb81:	aad    0xcf
  43bb83:	out    dx,eax
  43bb84:	or     eax,0xfafc4991
  43bb89:	iret   
  43bb8a:	sub    al,0xfa
  43bb8c:	repnz in eax,dx
  43bb8e:	test   DWORD PTR [eax+eax*1+0x0],eax
	...
  43bba2:	add    BYTE PTR [eax],al
  43bba4:	mov    ebp,0x3871c41
  43bba9:	pop    ds
  43bbaa:	or     eax,0x87a6b50b
  43bbaf:	xlat   BYTE PTR ds:[ebx]
  43bbb0:	fstp   st(1)
  43bbb2:	xor    dl,bh
  43bbb4:	retf   0xd015
  43bbb7:	out    dx,eax
  43bbb8:	int    0xb0
  43bbba:	dec    edx
  43bbbb:	cld    
  43bbbc:	mov    edx,0xbce63d30
  43bbc1:	cdq    
  43bbc2:	push   ecx
  43bbc3:	je     0x43bb82
  43bbc5:	(bad)  
  43bbc6:	dec    edi
  43bbc7:	xor    ebp,DWORD PTR [ebx-0x348a544]
  43bbcd:	pop    eax
  43bbce:	and    BYTE PTR [edx-0x46],al
  43bbd1:	(bad)  
  43bbd2:	mov    ah,0x8a
  43bbd4:	sahf   
  43bbd5:	push   cs
  43bbd6:	push   esp
  43bbd7:	cmp    al,0xb5
  43bbd9:	(bad)  
  43bbda:	out    0xb2,eax
  43bbdc:	in     al,0x64
  43bbde:	pop    esi
  43bbdf:	fnstcw WORD PTR [edx-0x4874c7f8]
  43bbe5:	mov    esp,0x8fb57457
  43bbea:	out    0x88,eax
  43bbec:	add    esp,eax
  43bbee:	jge    0x43bbf0
  43bbf0:	in     eax,dx
  43bbf1:	or     BYTE PTR [edx],bl
  43bbf3:	ins    BYTE PTR es:[edi],dx
  43bbf4:	mov    ds:0x36570200,al
  43bbf9:	iret   
  43bbfa:	jmp    0x3a03:0xe78e677f
  43bc01:	call   0x4d:0x8feaed93
	...
  43bc1c:	xor    BYTE PTR [edx-0x2d],dl
  43bc1f:	jmp    0x43bbb7
  43bc21:	or     BYTE PTR [eax],ch
  43bc23:	add    al,0x65
  43bc25:	mov    esp,0x8af682b6
  43bc2a:	ins    BYTE PTR es:[edi],dx
  43bc2b:	inc    ebx
  43bc2c:	xchg   BYTE PTR [edi+0x5228014d],dl
  43bc32:	mov    ebx,0x28085eeb
  43bc37:	add    al,0x85
  43bc39:	mov    esp,0x8af682b6
  43bc3e:	fs inc ebx
  43bc40:	scas   eax,DWORD PTR es:[edi]
  43bc41:	adc    bh,BYTE PTR [eax+0x3]
  43bc44:	mov    ch,0x8f
  43bc46:	pop    esp
  43bc47:	add    BYTE PTR [esi+0x725682bc],0xa7
  43bc4e:	mov    ds:0xbbbca6,eax
  43bc53:	ins    DWORD PTR es:[edi],dx
  43bc54:	test   BYTE PTR [ebp-0x704ea77c],0x0
  43bc5b:	iret   
  43bc5c:	aaa    
  43bc5d:	cld    
  43bc5e:	xor    al,0x5e
  43bc60:	add    esi,DWORD PTR [esi+0xfbadbfe]
  43bc66:	mov    esp,0xf9b5e211
  43bc6b:	(bad)  
  43bc6c:	mov    ebx,0x9b52c123
  43bc71:	sub    eax,0xb6c2747d
  43bc76:	stc    
  43bc77:	cs pop ebx
  43bc79:	inc    esp
  43bc7a:	adc    eax,0x840c6693
  43bc7f:	fld    QWORD PTR [eax]
	...
  43bc91:	add    BYTE PTR [eax],al
  43bc93:	add    BYTE PTR [ebx],al
  43bc95:	mov    dh,0xf9
  43bc97:	mov    ecx,0xa9791f5e
  43bc9c:	mov    dh,0xb6
  43bc9e:	int    0x6a
  43bca0:	add    BYTE PTR [esi-0x4c3de0f],0xfa
  43bca7:	sub    DWORD PTR [edi-0x55d6d044],ebx
  43bcad:	cli    
  43bcae:	or     DWORD PTR [ebp-0x13],ebp
  43bcb1:	pop    DWORD PTR [eax]
  43bcb3:	jmp    0x69c94ae5
  43bcb8:	inc    ecx
  43bcb9:	nop
  43bcba:	add    cl,ch
  43bcbc:	xor    ecx,DWORD PTR [esp+esi*8+0x70]
  43bcc0:	cli    
  43bcc1:	mov    dl,0x85
  43bcc3:	icebp  
  43bcc4:	mov    ecx,0xe1de453
  43bcc9:	jnp    0x43bccb
  43bccb:	pusha  
  43bccc:	cli    
  43bccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bcce:	xor    DWORD PTR [eax-0x17d8ec48],0xffffffb6
  43bcd5:	(bad)  
  43bcd6:	stc    
  43bcd7:	pop    eax
  43bcd8:	dec    ecx
  43bcd9:	pop    DWORD PTR [eax]
  43bcdb:	jmp    0x1280913
  43bce0:	popf   
  43bce1:	add    esp,edx
  43bce3:	xor    al,0x7b
  43bce5:	popa   
  43bce6:	imul   cl
  43bce8:	xchg   ecx,eax
  43bce9:	lea    eax,[eax]
  43bceb:	add    BYTE PTR [edi],dl
  43bced:	mov    ebp,0x8f1cb0f6
  43bcf2:	add    BYTE PTR [eax],al
  43bcf4:	or     ebx,ebp
  43bcf6:	mov    esp,0x6a
	...
  43bd0b:	add    bl,al
  43bd0d:	sti    
  43bd0e:	or     dh,0xf4
  43bd11:	xchg   esi,eax
  43bd12:	stos   BYTE PTR es:[edi],al
  43bd13:	(bad)  
  43bd14:	sti    
  43bd15:	(bad)  
  43bd17:	movups xmm3,XMMWORD PTR [ecx+edi*8-0x1]
  43bd1c:	pop    esp
  43bd1d:	test   al,0x4
  43bd1f:	lea    edx,[ecx]
  43bd21:	dec    edx
  43bd22:	dec    ecx
  43bd23:	lea    edx,[ecx]
  43bd25:	push   ss
  43bd26:	dec    edx
  43bd27:	jmp    DWORD PTR [ecx-0x2e]
  43bd2a:	cmovo  ebx,DWORD PTR [edi+eax*1-0x1]
  43bd2f:	xor    cl,0x67
  43bd32:	idiv   bh
  43bd34:	mov    ebx,0x50c07993
  43bd39:	movsx  ecx,BYTE PTR [esp+ecx*2]
  43bd3d:	adc    DWORD PTR [ebp-0x99ce5d4],eax
  43bd43:	call   0x3a8d38
  43bd48:	xchg   BYTE PTR [edi+0x52],ah
  43bd4b:	(bad)  
  43bd4c:	fstp   DWORD PTR [ebx]
  43bd4e:	lea    eax,[ebp-0x99bf8]
  43bd54:	in     al,0xb7
  43bd56:	cmp    eax,0x7d0e3bff
  43bd5b:	mov    eax,0xb28492dc
  43bd60:	fmul   QWORD PTR [ebp+0x15998000]
  43bd66:	cli    
  43bd67:	push   cs
  43bd68:	push   ebx
  43bd69:	out    0xf9,al
  43bd6b:	push   DWORD PTR [ebp+0xd710a8]
	...
  43bd81:	add    BYTE PTR [eax],al
  43bd83:	add    BYTE PTR [edi-0x58],bl
  43bd86:	ror    BYTE PTR [eax+esi*2-0x320676e8],0xa9
  43bd8e:	mov    dl,bh
  43bd90:	mov    dl,0x34
  43bd92:	jp     0x43bdc3
  43bd94:	stos   DWORD PTR es:[edi],eax
  43bd95:	sub    dl,BYTE PTR [edi+ecx*2+0x30]
  43bd99:	jmp    0xe598a587
  43bd9e:	push   esp
  43bd9f:	cli    
  43bda0:	ret    0xc318
  43bda3:	mov    dh,0x1f
  43bda5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bda6:	mov    bh,0x8
  43bda8:	sub    ebx,DWORD PTR [edi+0x3db5fffe]
  43bdae:	ds jle 0x43be0e
  43bdb1:	retf   
  43bdb2:	leave  
  43bdb3:	push   ecx
  43bdb4:	sahf   
  43bdb5:	fs leave 
  43bdb7:	dec    ebp
  43bdb8:	mov    fs,WORD PTR [ecx+ecx*8+0x3c]
  43bdbc:	mov    fs,WORD PTR [ecx+ecx*8+0x38]
  43bdc0:	ss (bad) 
  43bdc2:	mov    bl,0x73
  43bdc4:	scas   al,BYTE PTR es:[edi]
  43bdc5:	int    0x3f
  43bdc7:	jae    0x43bd9d
  43bdc9:	fnstsw WORD PTR [edi]
  43bdcb:	je     0x43bda5
  43bdcd:	cmp    eax,0xa73e07ba
  43bdd2:	stos   DWORD PTR es:[edi],eax
  43bdd3:	cli    
  43bdd4:	gs xor edi,esi
  43bdd7:	push   DWORD PTR [ebp+0x1a5528de]
  43bddd:	ficomp DWORD PTR [ecx+0x45]
  43bde0:	xor    eax,0x81fe8b64
  43bde5:	jb     0x43be60
  43bde7:	inc    esp
	...
  43bdfc:	lods   eax,DWORD PTR ds:[esi]
  43bdfd:	cmp    eax,0x372e5204
  43be02:	mov    BYTE PTR [eax],al
  43be04:	mov    ch,0xa6
  43be06:	push   ebp
  43be07:	loopne 0x43bd8c
  43be09:	jmp    0x8fe8a45b
  43be0e:	outs   dx,BYTE PTR ds:[esi]
  43be0f:	leave  
  43be10:	mov    dl,0x61
  43be12:	inc    sp
  43be14:	mov    edx,0xd28c250a
  43be19:	xlat   BYTE PTR ds:[ebx]
  43be1a:	xchg   ecx,eax
  43be1b:	push   ebx
  43be1c:	mov    edi,0xcd86c7a4
  43be21:	xor    esi,ebx
  43be23:	cld    
  43be24:	fcmovnb st,st(5)
  43be26:	cld    
  43be27:	cli    
  43be28:	xor    ah,BYTE PTR [edx+0x77]
  43be2b:	pop    edi
  43be2c:	mov    ds:0x9f53c510,eax
  43be31:	inc    edx
  43be32:	push   edi
  43be33:	mov    edx,0x86df423b
  43be38:	je     0x43bdc1
  43be3a:	aas    
  43be3b:	sti    
  43be3c:	xchg   BYTE PTR [eax+0x54dcb342],bh
  43be42:	xor    BYTE PTR [esi-0x4a],al
  43be45:	(bad)  
  43be46:	pushf  
  43be47:	jle    0x43bea7
  43be49:	or     al,0x44
  43be4b:	dec    esp
  43be4c:	xor    eax,0xb506dbab
  43be51:	(bad)  
  43be52:	mov    cl,0xdd
  43be54:	push   edx
  43be55:	es out 0x80,eax
  43be58:	div    BYTE PTR [ebx-0x9]
  43be5b:	pop    ebx
  43be5c:	dec    esp
  43be5d:	push   es
  43be5e:	add    edx,DWORD PTR [ebx+0x0]
	...
  43be71:	add    BYTE PTR [eax],al
  43be73:	add    BYTE PTR [ebx],dh
  43be75:	inc    edx
  43be76:	out    dx,eax
  43be77:	jle    0x43be2d
  43be79:	add    al,0xa0
  43be7b:	pop    es
  43be7c:	cmp    al,0x4b
  43be7e:	ret    
  43be7f:	(bad)  
  43be80:	cmp    eax,DWORD PTR [edi-0x11]
  43be83:	xchg   BYTE PTR [edx-0x6d],dh
  43be86:	fidivr DWORD PTR [esi+edi*2+0x73]
  43be8a:	idiv   DWORD PTR [ebp+0x72]
  43be8d:	mov    esp,DWORD PTR [esi-0x1d]
  43be90:	mov    edx,0xd6bf6f8f
  43be95:	mov    ds:0x7c1bb6d,eax
  43be9a:	add    DWORD PTR ds:0xdf85a29d,esp
  43bea0:	arpl   WORD PTR [eax+0x10],di
  43bea3:	jo     0x43be97
  43bea5:	imul   ebx,DWORD PTR [eax],0x64
  43bea8:	xchg   ecx,eax
  43bea9:	cmp    al,0x2
  43beab:	bound  esi,QWORD PTR [ecx-0x397200cf]
  43beb1:	mov    ah,0x72
  43beb3:	in     eax,dx
  43beb4:	xor    eax,0xeed244c
  43beb9:	add    eax,0x610776fc
  43bebe:	call   0xf9f7c91e
  43bec3:	je     0x43be47
  43bec5:	jae    0x43becf
  43bec7:	push   ecx
  43bec8:	sbb    eax,0xa356fa08
  43becd:	iret   
  43bece:	pop    edx
  43becf:	bound  ecx,QWORD PTR ds:0xb6edbe54
  43bed5:	pop    esp
  43bed6:	test   DWORD PTR [ebp+0x0],ecx
	...
  43bee9:	add    BYTE PTR [eax],al
  43beeb:	add    BYTE PTR [ecx],ch
  43beed:	inc    esi
  43beee:	push   edx
  43beef:	sahf   
  43bef0:	jmp    0x43beb0
  43bef2:	test   DWORD PTR [esi+0x31b7a7ba],esp
  43bef8:	pop    es
  43bef9:	mov    edx,0x36ba9685
  43befe:	arpl   WORD PTR ds:0xdd5b04b6,dx
  43bf04:	or     edi,DWORD PTR [edx+0x77404d13]
  43bf0a:	add    BYTE PTR [edx-0x44],dh
  43bf0d:	or     al,0xc1
  43bf0f:	jge    0x43bf32
  43bf11:	push   cs
  43bf12:	jae    0x43bef9
  43bf14:	cmp    edi,DWORD PTR [ecx+0x0]
  43bf17:	pop    ebp
  43bf18:	mov    al,0xba
  43bf1a:	inc    ebx
  43bf1b:	fnstsw WORD PTR [eax]
  43bf1d:	rol    DWORD PTR [ecx+eiz*1],1
  43bf20:	loop   0x43bec6
  43bf22:	dec    ebp
  43bf23:	into   
  43bf24:	or     ch,bl
  43bf26:	push   cs
  43bf27:	add    ah,cl
  43bf29:	mov    edi,DWORD PTR [edi+0x7d]
  43bf2c:	xor    BYTE PTR [esi+0x0],cl
  43bf2f:	add    ah,bl
  43bf31:	fadd   DWORD PTR [edx]
  43bf33:	mov    eax,ecx
  43bf35:	mov    bl,0x84
  43bf37:	leave  
  43bf38:	mov    eax,0x270182c7
  43bf3d:	mov    al,ds:0x8f340862
  43bf42:	hlt    
  43bf43:	std    
  43bf44:	xor    esi,DWORD PTR ds:0x5b47085c
  43bf4a:	test   dh,dh
  43bf4c:	test   al,0x6e
  43bf4e:	bound  eax,QWORD PTR [eax]
	...
  43bf64:	retf   0x69d3
  43bf67:	loopne 0x43bf37
  43bf69:	mov    eax,DWORD PTR [edi-0x21ddae2]
  43bf6f:	mov    dh,BYTE PTR [ebx-0x72]
  43bf72:	push   0xf9ba9c00
  43bf77:	out    0xd4,eax
  43bf79:	jae    0x43bf71
  43bf7b:	dec    DWORD PTR [eax]
  43bf7d:	dec    esp
  43bf7e:	je     0x43bf92
  43bf80:	dec    edx
  43bf81:	pop    edx
  43bf82:	icebp  
  43bf83:	repz mov eax,ds:0x28db8460
  43bf89:	mov    edx,0x74e70382
  43bf8e:	arpl   WORD PTR [ecx],ax
  43bf90:	mov    bl,0xbb
  43bf92:	push   esi
  43bf93:	pop    esi
  43bf94:	pop    es
  43bf95:	jns    0x43bf52
  43bf97:	add    al,0x4c
  43bf99:	std    
  43bf9a:	sub    ah,0xcf
  43bf9d:	das    
  43bf9e:	add    eax,0x4f636f53
  43bfa3:	push   edi
  43bfa4:	xchg   edi,eax
  43bfa5:	bound  ecx,QWORD PTR [eax-0x467cefa3]
  43bfab:	je     0x43bfc6
  43bfad:	cmp    DWORD PTR [esp+esi*8-0x1c],eax
  43bfb1:	add    edi,0xdbddb5fd
  43bfb7:	add    BYTE PTR [ebx+ebp*2],ch
  43bfba:	dec    esp
  43bfbb:	lods   eax,DWORD PTR gs:[esi]
  43bfbd:	cmp    eax,edx
  43bfbf:	repz test ecx,esp
  43bfc2:	add    DWORD PTR [esi-0x4c],esp
  43bfc5:	cdq    
  43bfc6:	mov    bl,0x86
	...
  43bfdc:	js     0x43bf8e
  43bfde:	mov    ah,0x4e
  43bfe0:	xchg   BYTE PTR [eax],ah
  43bfe2:	test   ch,al
  43bfe4:	rcl    DWORD PTR [edi*2-0x2dde7109],cl
  43bfeb:	(bad)  
  43bfec:	int    0x4e
  43bfee:	aas    
  43bfef:	cld    
  43bff0:	mov    edx,0x3db833f8
  43bff5:	(bad)  
  43bff7:	jmp    DWORD PTR [edx+0x34c27c38]
  43bffd:	jmp    0xa6f8f567
  43c002:	mov    bl,0xfa
  43c004:	retf   
  43c005:	pop    esi
  43c006:	mov    eax,0x76a6b50c
  43c00b:	inc    esp
  43c00c:	and    DWORD PTR [edx-0x714186bd],0xbce90ba9
  43c016:	jl     0x43c06a
  43c018:	in     eax,0x31
  43c01a:	cmp    esp,edi
  43c01c:	ficomp DWORD PTR [edi+0x29d3fa4f]
  43c022:	inc    ebp
  43c023:	adc    edi,eax
  43c025:	int3   
  43c026:	jl     0x43c065
  43c028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c029:	loope  0x43c06f
  43c02b:	jae    0x43bfe3
  43c02d:	push   ebx
  43c02e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c02f:	sub    edi,DWORD PTR [edx]
  43c031:	xor    eax,0xfe778d01
  43c036:	add    BYTE PTR [ebx+0x1627b5bd],dh
  43c03c:	in     al,dx
  43c03d:	sbb    DWORD PTR ds:0xc8,esp
	...
  43c053:	add    BYTE PTR [edi+ecx*4+0x2bad9e2],al
  43c05a:	and    bh,ah
  43c05c:	adc    dl,dl
  43c05e:	fmul   QWORD PTR [edi-0x1]
  43c061:	or     bl,dl
  43c063:	pop    esp
  43c064:	gs faddp st(2),st
  43c067:	dec    edi
  43c068:	cmp    ecx,DWORD PTR [ebx-0x45]
  43c06b:	scas   eax,DWORD PTR es:[edi]
  43c06c:	mov    WORD PTR [eax-0x60],ds
  43c06f:	inc    edx
  43c070:	mov    edx,0xce7b148f
  43c075:	adc    BYTE PTR [esp+ecx*2+0x7bfba353],cl
  43c07c:	jbe    0x43c0e9
  43c07e:	sti    
  43c07f:	adc    dh,ch
  43c081:	pusha  
  43c082:	add    DWORD PTR [ebp+0x76],edi
  43c085:	imul   esp,eax,0x12
  43c088:	mov    bl,BYTE PTR [ebp+0x3f]
  43c08b:	mov    ah,0xb1
  43c08d:	(bad)  
  43c08e:	out    0xb6,eax
  43c090:	adc    al,0x7
  43c092:	and    al,0x28
  43c094:	mov    edx,0xbf27abcd
  43c099:	(bad)  
  43c09a:	jo     0x43c04c
  43c09c:	(bad)  
  43c09d:	lahf   
  43c09e:	pusha  
  43c09f:	mov    al,0xd6
  43c0a1:	fwait
  43c0a2:	and    eax,ecx
  43c0a4:	(bad)  
  43c0a5:	test   bh,ah
  43c0a7:	jp     0x43c09a
  43c0a9:	xchg   DWORD PTR [esi+0x7],ebp
  43c0ac:	pop    ebp
  43c0ad:	push   ebp
  43c0ae:	xlat   BYTE PTR ds:[ebx]
  43c0af:	add    esi,DWORD PTR [ebp+0x36ff280b]
  43c0b5:	psubsb mm0,QWORD PTR [ebx]
	...
  43c0cc:	mov    ch,0x29
  43c0ce:	call   0xac4672ac
  43c0d3:	daa    
  43c0d4:	lea    ebx,[edi+0x5e]
  43c0d7:	leave  
  43c0d8:	scas   al,BYTE PTR es:[edi]
  43c0d9:	sub    edi,esp
  43c0db:	fnstenv [edx]
  43c0dd:	es jecxz 0x43c13b
  43c0e0:	pop    ecx
  43c0e1:	mov    BYTE PTR [eax],0xf7
  43c0e4:	jae    0x43c0f3
  43c0e6:	icebp  
  43c0e7:	or     DWORD PTR fs:[ecx-0x7046057c],0x0
  43c0ef:	push   ecx
  43c0f0:	mov    DWORD PTR [ebp-0x7e8c1700],eax
  43c0f6:	call   0xf9f7bb74
  43c0fb:	jb     0x43c17b
  43c0fd:	xor    eax,0x8705e8f9
  43c102:	call   0xf9fd67b5
  43c107:	bound  esi,QWORD PTR [ebx-0x53]
  43c10a:	es jb  0x43c10d
  43c10d:	and    al,0x85
  43c10f:	scas   al,BYTE PTR es:[edi]
  43c110:	outs   dx,BYTE PTR ds:[esi]
  43c111:	sbb    cl,bl
  43c113:	xchg   edi,eax
  43c114:	jae    0x43c144
  43c116:	jge    0x43c0a9
  43c118:	mov    dl,0x88
  43c11a:	jle    0x43c0c3
  43c11c:	mov    dh,0x8f
  43c11e:	add    BYTE PTR [ebx+esi*2-0x71],ch
  43c122:	push   eax
  43c123:	jbe    0x43c0c2
  43c125:	(bad)  
  43c126:	movaps XMMWORD PTR [ecx+0x339a0a7],xmm6
  43c12d:	mov    dh,0x2d
  43c12f:	sub    DWORD PTR [eax],eax
	...
  43c141:	add    BYTE PTR [eax],al
  43c143:	add    BYTE PTR [ecx],cl
  43c145:	aaa    
  43c146:	and    al,0xf5
  43c148:	jbe    0x43c17c
  43c14a:	clc    
  43c14b:	dec    esi
  43c14c:	pop    ebp
  43c14d:	mov    eax,ds:0x869aadfa
  43c152:	cmp    BYTE PTR [ebp-0x1a02796e],0x34
  43c159:	and    bh,cl
  43c15b:	cs jmp 0x43c105
  43c15e:	mov    ah,0xe9
  43c160:	mov    dh,0x8f
  43c162:	sub    eax,0xffbb3729
  43c167:	in     eax,0xc2
  43c169:	out    0x0,eax
  43c16b:	jmp    0x90cc26
  43c170:	add    BYTE PTR [ebx+0x80c7182],ah
  43c176:	lock je 0x43c188
  43c179:	push   cs
  43c17a:	shr    BYTE PTR [ecx+edi*2],0xfc
  43c17e:	std    
  43c17f:	out    0xde,eax
  43c181:	arpl   di,si
  43c183:	push   DWORD PTR [edx+0x10]
  43c186:	loop   0x43c18c
  43c188:	sbb    ebx,DWORD PTR [edx+esi*8]
  43c18b:	mov    DWORD PTR [eax+0x67],ebp
  43c18e:	sbb    BYTE PTR [ebp+0x38fdd817],al
  43c194:	or     bl,dl
  43c196:	cs sub edx,0xffffff8e
  43c19a:	je     0x43c1ce
  43c19c:	jb     0x43c126
  43c19e:	jl     0x43c1c4
  43c1a0:	(bad)  
  43c1a1:	(bad)  [edx]
  43c1a3:	mov    edx,DWORD PTR [eax+0xf1467]
	...
  43c1b9:	add    BYTE PTR [eax],al
  43c1bb:	add    BYTE PTR [ebx+0x64],ah
  43c1be:	cli    
  43c1bf:	ret    0x8ee9
  43c1c2:	add    al,0xa0
  43c1c4:	pushf  
  43c1c5:	fist   DWORD PTR [edx]
  43c1c7:	adc    WORD PTR [ebp+0x6d],ax
  43c1cb:	sbb    edi,DWORD PTR [esi-0x7bdb8ace]
  43c1d1:	xor    DWORD PTR ds:0x9b569024,edi
  43c1d7:	bnd jmp 0xb0c04421
  43c1dd:	mov    ds:0x8961c084,eax
  43c1e2:	mov    esi,0xb1c044
  43c1e7:	mov    ecx,DWORD PTR [edx-0x77db92c9]
  43c1ed:	push   esi
  43c1ee:	add    al,0xd0
  43c1f0:	mov    eax,DWORD PTR [edi+ebx*2-0x1]
  43c1f4:	and    BYTE PTR [edx+0x1f],ch
  43c1f7:	sub    BYTE PTR [eax],0x6a
  43c1fa:	push   es
  43c1fb:	add    BYTE PTR [ebp+0x7e621b13],dh
  43c201:	add    al,0x22
  43c203:	pop    ds
  43c204:	ret    0x3324
  43c207:	stc    
  43c208:	sub    dh,BYTE PTR [ecx-0x2726bc88]
  43c20e:	js     0x43c25c
  43c210:	lds    ebp,FWORD PTR [edi]
  43c212:	std    
  43c213:	xchg   BYTE PTR [eax-0x4c],bh
  43c216:	js     0x43c263
  43c218:	sar    DWORD PTR [esi+esi*2-0x5358baf9],1
  43c21f:	pop    ecx
	...
  43c234:	pop    esi
  43c235:	sub    eax,0xd7f75c62
  43c23a:	std    
  43c23b:	out    0xf9,eax
  43c23d:	loopne 0x43c28b
  43c23f:	cli    
  43c240:	loop   0x43c2b5
  43c242:	sub    BYTE PTR [eax],dl
  43c244:	int    0x35
  43c246:	dec    esi
  43c247:	cld    
  43c248:	rcl    ch,cl
  43c24a:	cmp    eax,0x777ad0e6
  43c24f:	jmp    0x43c2b5
  43c251:	jne    0x43c2ca
  43c253:	xlat   BYTE PTR ds:[ebx]
  43c254:	imul   eax,DWORD PTR cs:[eax],0xb
  43c258:	push   0xffffffa7
  43c25a:	push   ebp
  43c25b:	xchg   DWORD PTR [edi+0x31],ebx
  43c25e:	dec    esp
  43c25f:	xchg   eax,edi
  43c261:	cmp    al,BYTE PTR [ecx+0x10ab20bf]
  43c267:	rcr    BYTE PTR [esi-0x3a984b54],0xa5
  43c26e:	std    
  43c26f:	dec    DWORD PTR [ebp+0x7afc4ec1]
  43c275:	sub    al,0x3d
  43c277:	jae    0x43c23c
  43c279:	fdiv   st(6),st
  43c27b:	cli    
  43c27c:	loopne 0x43c2f0
  43c27e:	push   ebp
  43c27f:	cmp    DWORD PTR [ebx],0x5d864c7a
  43c285:	dec    esi
  43c286:	jmp    FWORD PTR [esi]
  43c288:	push   edx
  43c289:	nop
  43c28a:	ins    BYTE PTR es:[edi],dx
  43c28b:	dec    esp
  43c28c:	ror    DWORD PTR [ebx+0x5b5b43d6],0x5e
  43c293:	add    BYTE PTR [edx],dh
  43c295:	adc    BYTE PTR [eax+0x2],bh
	...
  43c2ac:	mov    ch,0x8f
  43c2ae:	cdq    
  43c2af:	mov    bl,0x3d
  43c2b1:	dec    ebx
  43c2b2:	sti    
  43c2b3:	ja     0x43c32e
  43c2b5:	xor    DWORD PTR [ecx],0x13
  43c2b8:	mov    al,ds:0x3bb5e78f
  43c2bd:	ror    edi,0x4f
  43c2c0:	push   eax
  43c2c1:	mov    dl,0xda
  43c2c3:	add    BYTE PTR [edx+0x3c],0xc
  43c2c7:	dec    ebx
  43c2c8:	retf   
  43c2c9:	add    al,0x1d
  43c2cb:	cld    
  43c2cc:	pop    eax
  43c2cd:	mov    WORD PTR [esi+0x45],fs
  43c2d0:	mov    dl,0x54
  43c2d2:	iret   
  43c2d3:	cdq    
  43c2d4:	xor    al,0xb1
  43c2d6:	mov    dl,0x4b
  43c2d8:	popa   
  43c2d9:	mov    bl,0x5e
  43c2db:	mov    cl,0xc2
  43c2dd:	pop    ecx
  43c2de:	or     eax,0xab046d18
  43c2e3:	pop    esp
  43c2e4:	xchg   edx,eax
  43c2e5:	loope  0x43c278
  43c2e7:	dec    ebx
  43c2e8:	rcl    BYTE PTR ss:[eax+edi*8],1
  43c2ec:	cmp    ecx,DWORD PTR [eax-0x3fcdfaf3]
  43c2f2:	jp     0x43c2e8
  43c2f4:	ror    edi,cl
  43c2f6:	jle    0x43c2fe
  43c2f8:	xor    cl,al
  43c2fa:	or     DWORD PTR [ebx-0x7da3915],ebp
  43c300:	mov    bl,BYTE PTR [ebx+0x6e]
  43c303:	pop    eax
  43c304:	in     eax,0x4
  43c306:	call   0xb1cbac89
  43c30b:	mov    dl,0x3b
  43c30d:	not    DWORD PTR [edi+0x5]
	...
  43c324:	mov    ch,0x8f
  43c326:	xchg   edx,eax
  43c327:	fnsave [esi+0x24640057]
  43c32d:	mov    ah,0xe8
  43c32f:	add    ebp,DWORD PTR [esi+esi*4]
  43c332:	stc    
  43c333:	ins    DWORD PTR es:[edi],dx
  43c334:	icebp  
  43c335:	cmp    al,0x33
  43c337:	push   0x6c
  43c339:	mov    ah,0x0
  43c33b:	popf   
  43c33c:	lahf   
  43c33d:	push   cs
  43c33e:	jl     0x43c34d
  43c340:	mov    ecx,0x7e9a08b
  43c345:	outs   dx,BYTE PTR ds:[esi]
  43c346:	stc    
  43c347:	je     0x43c3c3
  43c349:	test   al,0xb1
  43c34b:	stc    
  43c34c:	ins    DWORD PTR es:[edi],dx
  43c34d:	mov    ch,0x85
  43c34f:	stc    
  43c350:	xor    eax,0x8a0174be
  43c355:	dec    ebx
  43c356:	cld    
  43c357:	jb     0x43c396
  43c359:	mov    BYTE PTR [ecx+0x62],dl
  43c35c:	les    ebp,FWORD PTR [eax-0x4a83820b]
  43c362:	test   BYTE PTR [ecx-0x2ead79fb],ch
  43c368:	xor    DWORD PTR [eax-0x303f4905],esp
  43c36e:	pop    ecx
  43c36f:	seto   dl
  43c372:	add    al,0xe9
  43c374:	dec    ebx
  43c375:	dec    ebx
  43c376:	cld    
  43c377:	jo     0x43c374
  43c379:	mov    eax,DWORD PTR [edi-0x1a70d926]
  43c37f:	jg     0x43c3b4
  43c381:	scas   eax,DWORD PTR es:[edi]
  43c382:	cli    
  43c383:	cmp    DWORD PTR [esi],esp
  43c385:	nop
  43c386:	add    cl,ch
	...
  43c39c:	sbb    eax,0x7ee12443
  43c3a1:	jg     0x43c416
  43c3a3:	jmp    0xc147f95e
  43c3a8:	out    dx,al
  43c3a9:	add    ch,BYTE PTR [edi+ebx*2-0x193eed11]
  43c3b0:	add    eax,0xb6e5beef
  43c3b5:	inc    ecx
  43c3b6:	or     DWORD PTR [eax],eax
  43c3b8:	jmp    0xb528:0x4b081dde
  43c3bf:	mov    bl,0x54
  43c3c1:	xchg   esp,eax
  43c3c2:	add    BYTE PTR [eax],al
  43c3c4:	xlat   BYTE PTR ds:[ebx]
  43c3c5:	test   eax,0x9128c984
  43c3ca:	add    DWORD PTR [ecx],0x10f59426
  43c3d0:	iret   
  43c3d1:	jno    0x43c3d3
  43c3d3:	xor    ebx,esp
  43c3d5:	stc    
  43c3d6:	pop    edi
  43c3d7:	mov    DWORD PTR [eax+0xc0111c5],ebx
  43c3dd:	xchg   ebx,eax
  43c3de:	push   esi
  43c3df:	ret    0x9308
  43c3e2:	push   ebx
  43c3e3:	mov    edx,DWORD PTR [eax]
  43c3e5:	adc    esp,esi
  43c3e7:	clc    
  43c3e8:	sbb    al,0x93
  43c3ea:	add    BYTE PTR [ebx-0x36],dl
  43c3ed:	loopne 0x43c37b
  43c3ef:	inc    ebp
  43c3f0:	xor    al,0xe4
  43c3f2:	mov    edi,0xe8940745
  43c3f7:	cmp    al,0xe5
  43c3f9:	pop    eax
  43c3fa:	test   BYTE PTR [ebp+0x16e167a9],0x0
	...
  43c411:	add    BYTE PTR [eax],al
  43c413:	add    BYTE PTR [eax+0x7983f659],dh
  43c419:	pop    edi
  43c41a:	stc    
  43c41b:	mov    dh,dl
  43c41d:	push   eax
  43c41e:	inc    esp
  43c41f:	int3   
  43c420:	int3   
  43c421:	sub    al,0x39
  43c423:	add    BYTE PTR [edx+ebx*8],dh
  43c426:	into   
  43c427:	inc    BYTE PTR [ebx+0x2c]
  43c42a:	pop    esp
  43c42b:	or     BYTE PTR [ecx],ah
  43c42d:	adc    eax,0x928c0112
  43c432:	xchg   DWORD PTR [ebp+0x2c],eax
  43c435:	es jp  0x43c440
  43c438:	popf   
  43c439:	xchg   edx,eax
  43c43a:	add    dh,al
  43c43c:	pop    ecx
  43c43d:	inc    esi
  43c43e:	stc    
  43c43f:	(bad)  
  43c440:	pop    ecx
  43c441:	pop    esi
  43c442:	and    BYTE PTR [eax-0x4b],dl
  43c445:	clc    
  43c446:	std    
  43c447:	mov    al,bh
  43c449:	je     0x43c4c0
  43c44b:	inc    esp
  43c44c:	pop    ebp
  43c44d:	and    DWORD PTR [ecx+0x7ca82ee7],edi
  43c453:	inc    esp
  43c454:	popa   
  43c455:	xor    esp,ecx
  43c457:	inc    BYTE PTR [ecx-0x4]
  43c45a:	add    ch,BYTE PTR [eax-0x7bb20cc4]
  43c460:	dec    ebx
  43c461:	add    al,0xc5
  43c463:	mov    eax,?
  43c465:	pushf  
  43c466:	mov    ah,0x8c
  43c468:	js     0x43c4da
  43c46a:	mov    ah,0x67
  43c46c:	mov    ebp,0x8dfffdc8
  43c471:	lods   eax,DWORD PTR ds:[esi]
  43c472:	dec    eax
  43c473:	call   FWORD PTR [edx]
  43c475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c476:	iret   
  43c477:	add    eax,DWORD PTR [eax]
	...
  43c489:	add    BYTE PTR [eax],al
  43c48b:	add    dl,bh
  43c48d:	repnz pop ecx
  43c48f:	add    esi,DWORD PTR [ebp-0x57050248]
  43c495:	aam    0xea
  43c497:	aas    
  43c498:	mov    ch,0x3b
  43c49a:	cmp    eax,0xba4bc874
  43c49f:	mov    DWORD PTR [ebp-0x1df8302b],0x751105c2
  43c4a9:	mov    eax,0x33c2bf7a
  43c4ae:	pop    edx
  43c4af:	add    BYTE PTR [ebp-0x2e8bb748],dh
  43c4b5:	call   FWORD PTR [edx]
  43c4b7:	sti    
  43c4b8:	mov    edx,0xa9447d04
  43c4bd:	into   
  43c4be:	(bad)  
  43c4bf:	aas    
  43c4c0:	stos   BYTE PTR es:[edi],al
  43c4c1:	xchg   DWORD PTR [ebp+eiz*2+0x53],ebx
  43c4c5:	sub    eax,0xac758348
  43c4ca:	in     eax,0x61
  43c4cc:	ss (bad) 
  43c4ce:	std    
  43c4cf:	or     dh,BYTE PTR [ecx]
  43c4d1:	nop
  43c4d2:	and    eax,0x168fb502
  43c4d7:	inc    esp
  43c4d8:	adc    al,0x17
  43c4da:	jmp    0x43c51d
  43c4dc:	stc    
  43c4dd:	test   al,0xe8
  43c4df:	pop    edx
  43c4e0:	es (bad) 
  43c4e2:	out    0x3,eax
  43c4e4:	fild   DWORD PTR [ebx-0x54b055b1]
  43c4ea:	xor    bh,BYTE PTR [esi+0x12]
  43c4ed:	and    al,0xd2
  43c4ef:	jl     0x43c4f1
	...
  43c501:	add    BYTE PTR [eax],al
  43c503:	add    cl,bh
  43c505:	mov    ds:0x9ca591f2,eax
  43c50a:	push   ecx
  43c50b:	mov    edx,0x7cb8423f
  43c510:	and    bh,BYTE PTR [eax-0x52d36187]
  43c516:	outs   dx,BYTE PTR ds:[esi]
  43c517:	push   ebx
  43c518:	sbb    edx,DWORD PTR [edx-0x59ceae4a]
  43c51e:	loop   0x43c59f
  43c520:	cmp    cl,BYTE PTR [edi+0x2b3203e7]
  43c526:	mov    ebx,0xe7a9793e
  43c52b:	cmp    bh,0x23
  43c52e:	(bad)  
  43c52f:	jp     0x43c4e8
  43c531:	sbb    bl,BYTE PTR ds:0xc2448528
  43c537:	mov    ah,0x92
  43c539:	adc    ch,BYTE PTR [eax+0x6635b9d1]
  43c53f:	leave  
  43c540:	out    dx,al
  43c541:	lods   al,BYTE PTR ds:[esi]
  43c542:	fisubr DWORD PTR [edi+0xa]
  43c545:	adc    al,0xa8
  43c547:	shl    DWORD PTR [ebp-0x40261ce8],1
  43c54d:	inc    esp
  43c54e:	xchg   edx,eax
  43c54f:	mov    ah,0xe6
  43c551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c552:	scas   eax,DWORD PTR es:[edi]
  43c553:	jmp    0xa9f9:0x7ca7ad6a
  43c55a:	outs   dx,BYTE PTR ds:[esi]
  43c55b:	ror    DWORD PTR [edx-0x5ec1ff64],0xe4
  43c562:	adc    dh,al
  43c564:	mov    dh,0x8f
  43c566:	bound  esp,QWORD PTR [edx]
	...
  43c57c:	sar    DWORD PTR [edx],1
  43c57e:	dec    eax
  43c57f:	mov    eax,ds:0xe90022a1
  43c584:	nop
  43c585:	gs fcom st(6)
  43c588:	mov    al,0x35
  43c58a:	jp     0x43c600
  43c58c:	xor    al,0x96
  43c58e:	stc    
  43c58f:	repnz xor al,BYTE PTR ds:[eax]
  43c593:	cdq    
  43c594:	out    dx,al
  43c595:	sub    BYTE PTR [ebp+0x4315b6e9],al
  43c59b:	cmc    
  43c59c:	aaa    
  43c59d:	ror    BYTE PTR [ecx+edx*1],1
  43c5a0:	lock icebp 
  43c5a2:	cli    
  43c5a3:	push   ss
  43c5a4:	adc    ecx,edi
  43c5a6:	mov    ebp,0x841708e1
  43c5ab:	cmc    
  43c5ac:	jnp    0x43c557
  43c5ae:	stc    
  43c5af:	xchg   DWORD PTR [ecx+0x7bf60b0b],ebx
  43c5b5:	test   eax,0xa90d4c8b
  43c5ba:	stc    
  43c5bb:	out    0x7f,al
  43c5bd:	into   
  43c5be:	call   0xf9e9ddc9
  43c5c3:	ins    DWORD PTR es:[edi],dx
  43c5c4:	jbe    0x43c5e9
  43c5c6:	dec    edi
  43c5c7:	aaa    
  43c5c8:	mov    edi,ebp
  43c5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c5cb:	(bad)  
  43c5cc:	jnp    0x43c5de
  43c5ce:	shl    DWORD PTR [esp+ebx*8],0x14
  43c5d2:	add    eax,DWORD PTR [ebx-0x48]
  43c5d5:	adc    al,0xcb
  43c5d7:	scas   al,BYTE PTR es:[edi]
  43c5d8:	(bad)  
  43c5d9:	mov    dh,0xe0
  43c5db:	jmp    0x64cf5596
	...
  43c5f4:	ret    0xf9a8
  43c5f7:	xchg   esi,eax
  43c5f8:	data16 jp 0x43c5d0
  43c5fb:	sub    edi,0x3b00faed
  43c601:	sub    edi,DWORD PTR [ecx-0x515d858c]
  43c607:	test   DWORD PTR [eax-0x2b0009ae],ebx
  43c60d:	jmp    0x43c67c
  43c60f:	add    eax,0x7514470f
  43c614:	xchg   ebx,eax
  43c615:	mov    ds:0x525a9dae,al
  43c61a:	idiv   bh
  43c61c:	jb     0x43c672
  43c61e:	mov    edx,0xd31a6b08
  43c623:	mov    edx,DWORD PTR [ecx]
  43c625:	aas    
  43c626:	pop    edi
  43c627:	mov    DWORD PTR [ebp+ebp*2+0x44],esp
  43c62b:	sti    
  43c62c:	pop    ebp
  43c62d:	es inc esp
  43c62f:	call   0x8a1dadfb
  43c634:	pop    esp
  43c635:	es inc esp
  43c637:	lock inc edx
  43c639:	es stc 
  43c63b:	gs xchg ebp,eax
  43c63d:	xchg   ebx,eax
  43c63e:	cmp    edi,0x2b
  43c641:	sub    ecx,DWORD PTR [eax+eax*1+0x7818f0c]
  43c648:	cdq    
  43c649:	out    0xd1,eax
  43c64b:	push   ecx
  43c64c:	and    edx,DWORD PTR [edx+0x49]
  43c64f:	sub    BYTE PTR [ecx+0x72147453],dl
  43c655:	adc    BYTE PTR [ebp-0x28],bh
	...
  43c66c:	or     esp,DWORD PTR [ebp-0x71473f73]
  43c672:	jae    0x43c67c
  43c674:	lods   al,BYTE PTR ds:[si]
  43c676:	arpl   WORD PTR [eax],ax
  43c678:	ret    
  43c679:	push   esp
  43c67a:	dec    ecx
  43c67b:	sub    al,0x57
  43c67d:	jmp    0x7448:0x93420fed
  43c684:	retf   0x74e6
  43c687:	push   ecx
  43c688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c689:	mov    eax,ds:0x1cb545be
  43c68e:	out    dx,al
  43c68f:	jmp    FWORD PTR [edx+0xf0858b8]
  43c695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c696:	cmp    al,0x44
  43c698:	xchg   ecx,eax
  43c699:	mov    dl,0xfd
  43c69b:	push   DWORD PTR [ebp+0x41747180]
  43c6a1:	adc    BYTE PTR [ecx],bl
  43c6a3:	iret   
  43c6a4:	xor    DWORD PTR [ecx],0x77
  43c6a7:	inc    esp
  43c6a8:	test   DWORD PTR [ecx+0x2e02ff8c],edi
  43c6ae:	cmp    cl,BYTE PTR [edi-0x21]
  43c6b1:	int3   
  43c6b2:	test   al,0x8c
  43c6b4:	loopne 0x43c6fe
  43c6b6:	pop    esp
  43c6b7:	mov    ecx,0x58436b7e
  43c6bc:	in     al,dx
  43c6bd:	cmp    eax,DWORD PTR [ecx+edi*2-0x5d]
  43c6c1:	jns    0x43c68c
  43c6c3:	jecxz  0x43c6f3
  43c6c5:	sti    
  43c6c6:	dec    ebp
  43c6c7:	or     al,BYTE PTR [edx]
  43c6c9:	mov    eax,0xe7fa86ad
  43c6ce:	jb     0x43c714
	...
  43c6e4:	stc    
  43c6e5:	out    0x55,eax
  43c6e7:	inc    eax
  43c6e8:	or     edx,DWORD PTR [edx-0x7b6779bd]
  43c6ee:	test   BYTE PTR [edi+ecx*1-0x48],bh
  43c6f2:	leave  
  43c6f3:	pop    es
  43c6f4:	ds mov cl,0xd7
  43c6f7:	jmp    FWORD PTR [ebx-0x4f]
  43c6fa:	lods   eax,DWORD PTR ds:[esi]
  43c6fb:	xor    ebp,DWORD PTR [esi]
  43c6fd:	imul   edi,esp,0xfffffff9
  43c700:	js     0x43c6d6
  43c702:	add    BYTE PTR [ebp+ebx*8-0x4d],0x80
  43c707:	inc    esp
  43c708:	aad    0xb5
  43c70a:	add    BYTE PTR [ecx+eiz*8-0x61],0x7d
  43c70f:	jl     0x43c6f2
  43c711:	mov    ebx,0xfb047df4
  43c716:	inc    esp
  43c717:	cli    
  43c718:	cs (bad) 
  43c71a:	sub    al,0x30
  43c71c:	xor    edi,ecx
  43c71e:	adc    edi,edx
  43c720:	cmp    ebx,DWORD PTR [eax-0x67fabac9]
  43c726:	data16 fiadd WORD PTR [esi+0x2a806e90]
  43c72d:	(bad)  
  43c72e:	out    0x3,eax
  43c730:	cmp    al,0xd
  43c732:	enter  0xb502,0x8f
  43c736:	pop    esi
  43c737:	inc    eax
  43c738:	je     0x43c747
  43c73a:	and    BYTE PTR [ebx],al
  43c73c:	mov    ch,0x8f
  43c73e:	call   0xe7d3b89e
  43c743:	add    esi,DWORD PTR [ecx]
  43c745:	rcl    bl,1
  43c747:	jmp    0x43c74c
	...
  43c75c:	scas   eax,DWORD PTR es:[edi]
  43c75d:	loope  0x43c7c5
  43c75f:	or     esi,DWORD PTR [edi+ecx*4+0x4c3b78e7]
  43c766:	call   0x5c5a7c6e
  43c76b:	and    BYTE PTR [edx+0x3f03e78e],0xd
  43c772:	loopne 0x43c776
  43c774:	mov    ch,0x8f
  43c776:	pop    esi
  43c777:	mov    dh,0xf6
  43c779:	xor    eax,0x8f3ba9e3
  43c77e:	ins    BYTE PTR es:[edi],dx
  43c77f:	inc    ebx
  43c780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c781:	sub    dl,0x8d
  43c784:	arpl   WORD PTR [eax-0x18],bp
  43c787:	add    esi,DWORD PTR [ebp+0x2dfba814]
  43c78d:	adc    al,0x97
  43c78f:	in     al,0xb5
  43c791:	(bad)  
  43c792:	out    0x41,eax
  43c794:	jae    0x43c7fd
  43c796:	call   0xa9507c9e
  43c79b:	or     BYTE PTR [ebx+0x22],bh
  43c79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c79f:	test   BYTE PTR [ecx-0x5c],bl
  43c7a2:	call   0x795d5f
  43c7a7:	in     eax,0x25
  43c7a9:	push   esp
  43c7aa:	test   al,0x19
  43c7ac:	and    al,0x54
  43c7ae:	mov    ah,0x39
  43c7b0:	jbe    0x43c735
  43c7b2:	dec    esp
  43c7b3:	div    DWORD PTR [esi-0x58]
  43c7b6:	jle    0x43c765
  43c7b8:	lds    ebx,FWORD PTR [edx]
  43c7ba:	inc    esp
  43c7bb:	push   ebp
  43c7bc:	mov    DWORD PTR [edx],esi
  43c7be:	arpl   WORD PTR [ebx],dx
	...
  43c7d4:	lds    eax,FWORD PTR [edi-0x18]
  43c7d7:	jnp    0x43c794
  43c7d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c7da:	stc    
  43c7db:	fs dec esp
  43c7dd:	aam    0xe8
  43c7df:	sbb    al,0xdd
  43c7e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c7e2:	stc    
  43c7e3:	(bad)  
  43c7e4:	xchg   esp,eax
  43c7e5:	inc    ecx
  43c7e6:	(bad)  
  43c7e7:	sub    edi,DWORD PTR [ebp+0x3bbe528f]
  43c7ed:	mov    eax,0xe6604e2d
  43c7f2:	pop    esp
  43c7f3:	call   0xe1b757ae
  43c7f8:	outs   dx,DWORD PTR ds:[esi]
  43c7f9:	cmp    eax,0x83f79e51
  43c7fe:	or     al,0xd8
  43c800:	jbe    0x43c7aa
  43c802:	mov    BYTE PTR [edi+0x55],ch
  43c805:	pop    DWORD PTR [eax]
  43c807:	jmp    0xedb7953f
  43c80c:	and    al,ch
  43c80e:	in     eax,0xeb
  43c810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c811:	(bad)  
  43c812:	pop    ecx
  43c813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c814:	jae    0x43c859
  43c816:	test   DWORD PTR ds:0x9a2cb43a,ecx
  43c81c:	cmp    eax,eax
  43c81e:	test   DWORD PTR [edx-0x4f],ebp
  43c821:	mov    es,WORD PTR [eax]
  43c823:	jmp    0x73201b51
  43c828:	cmp    edx,DWORD PTR [edi+edi*8-0x78c24918]
  43c82f:	and    al,0x8d
  43c831:	sbb    edi,DWORD PTR [esi+0x0]
  43c834:	mov    al,0x92
	...
  43c84a:	add    BYTE PTR [eax],al
  43c84c:	stos   DWORD PTR es:[edi],eax
  43c84d:	mov    al,ds:0xe75550ef
  43c852:	rol    edi,1
  43c854:	cdq    
  43c855:	jae    0x43c857
  43c857:	add    ah,cl
  43c859:	mov    eax,DWORD PTR [edi+0x14524445]
  43c85f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c860:	scas   al,BYTE PTR es:[edi]
  43c861:	sar    ecx,cl
  43c863:	mov    cl,cl
  43c865:	arpl   WORD PTR [eax],di
  43c867:	mov    bl,0xd4
  43c869:	mov    WORD PTR [eax],es
  43c86b:	add    BYTE PTR [ebx-0x63fe87e7],ah
  43c871:	xchg   ebx,eax
  43c872:	add    DWORD PTR [ebx+0x8ca8],0x8bf1c007
  43c87c:	enter  0xc013,0x45
  43c880:	add    dl,BYTE PTR [ebx+0xf83f683]
  43c886:	dec    esi
  43c887:	add    DWORD PTR [ebx+edx*4-0x7f],ecx
  43c88b:	inc    esi
  43c88c:	inc    esp
  43c88d:	sbb    BYTE PTR [edx-0x60a928c],bh
  43c893:	dec    edi
  43c894:	xchg   ebx,eax
  43c895:	xchg   eax,edx
  43c897:	adc    cl,BYTE PTR [ebx+edx*4]
  43c89a:	add    eax,0x23
  43c89d:	(bad)  
  43c89f:	add    DWORD PTR [ebx+edx*4],ebx
  43c8a2:	mov    esi,0xbe92b145
  43c8a7:	inc    ebp
  43c8a8:	mov    bl,0x92
  43c8aa:	add    eax,0xc05259b6
  43c8af:	loopne 0x43c8b1
	...
  43c8c1:	add    BYTE PTR [eax],al
  43c8c3:	add    BYTE PTR [edi],bl
  43c8c5:	push   ss
  43c8c6:	inc    esi
  43c8c7:	add    eax,0xec4513b0
  43c8cc:	mov    DWORD PTR [edx+0x6],ebx
  43c8cf:	test   BYTE PTR [eax],bl
  43c8d1:	mov    WORD PTR [eax],es
  43c8d3:	add    BYTE PTR [ebp-0x4ebf8853],dh
  43c8d9:	jo     0x43c893
  43c8db:	or     ebp,DWORD PTR [ebp+0x63]
  43c8de:	pop    ss
  43c8df:	lea    edi,[ebx+0x7c]
  43c8e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c8e3:	jle    0x43c872
  43c8e5:	lds    ebp,FWORD PTR [edx+eax*1]
  43c8e8:	xor    BYTE PTR [edi-0x38],ch
  43c8eb:	popa   
  43c8ec:	ss mov cl,0x3
  43c8ef:	jne    0x43c8a9
  43c8f1:	pop    ds
  43c8f2:	shl    ebx,0x9e
  43c8f5:	mov    ah,0x84
  43c8f7:	fs test eax,0xa17c84b8
  43c8fd:	mov    eax,0xb8288410
  43c902:	std    
  43c903:	(bad)  
  43c904:	mov    edx,0x2e13c665
  43c909:	jle    0x43c91f
  43c90b:	xchg   DWORD PTR [eax+ebp*8+0x3ce8fad3],edi
  43c912:	aas    
  43c913:	push   edx
  43c914:	lds    esi,FWORD PTR [esp+eax*2]
  43c917:	jae    0x43c8c8
  43c919:	cmp    DWORD PTR [ecx-0x3e894a11],esp
  43c91f:	stc    
  43c920:	mov    ah,0x41
  43c922:	mov    ch,0xfa
  43c924:	mov    al,ds:0x40116c
	...
  43c939:	add    BYTE PTR [eax],al
  43c93b:	add    BYTE PTR [ebp-0x4add42e1],dh
  43c941:	mov    eax,0xc4b2c0fc
  43c946:	mov    cl,0x51
  43c948:	ds jo  0x43c9c8
  43c94b:	call   0x419710
  43c950:	mov    eax,ds:0xabe884dc
  43c955:	mov    ch,0x81
  43c957:	mov    ecx,0x7efdb8b5
  43c95c:	or     al,0xc4
  43c95e:	mov    cl,0x39
  43c960:	cs (bad) 
  43c962:	sub    al,0x30
  43c964:	mov    edi,0xd0723dd
  43c969:	aas    
  43c96a:	mov    edi,0xcaa5ebc2
  43c96f:	aam    0xd2
  43c971:	sub    eax,0xa5cf40be
  43c976:	jbe    0x43c957
  43c978:	mov    ch,0x8f
  43c97a:	out    0x40,eax
  43c97c:	test   eax,0xbac3d5d3
  43c981:	mov    eax,0x6cf3fed1
  43c986:	out    0x3,eax
  43c988:	sub    DWORD PTR [ebp-0x7028382c],edi
  43c98e:	out    0xc1,eax
  43c990:	lods   al,BYTE PTR ds:[esi]
  43c991:	bound  ebp,QWORD PTR [ecx]
  43c993:	jmp    0x9376f2a
  43c998:	enter  0xca3e,0x3
  43c99c:	mov    ch,0x1a
  43c99e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c99f:	add    DWORD PTR [eax],0x0
	...
  43c9b2:	add    BYTE PTR [eax],al
  43c9b4:	stc    
  43c9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c9b6:	out    0xb6,eax
  43c9b8:	mov    esi,0xb541a4cd
  43c9bd:	push   ss
  43c9be:	lods   eax,DWORD PTR ds:[esi]
  43c9bf:	xor    ebx,DWORD PTR [ebx-0x6f]
  43c9c2:	dec    ecx
  43c9c3:	(bad)  
  43c9c4:	pop    ecx
  43c9c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c9c6:	lods   al,BYTE PTR ds:[esi]
  43c9c7:	inc    eax
  43c9c8:	shl    BYTE PTR [edx],cl
  43c9ca:	cmp    al,BYTE PTR ds:0x40da11be
  43c9d0:	aas    
  43c9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c9d2:	addr16 mov esi,0x139c9239
  43c9d8:	cmp    cl,BYTE PTR [esi-0x11]
  43c9db:	xchg   BYTE PTR [edx+0x1c],ch
  43c9de:	aam    0x48
  43c9e0:	je     0x43c975
  43c9e2:	retf   0x1ae8
  43c9e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c9e6:	push   cs
  43c9e7:	out    dx,al
  43c9e8:	xchg   edx,eax
  43c9e9:	and    bh,cl
  43c9eb:	add    al,BYTE PTR [ecx-0xb95ff8b]
  43c9f1:	xor    al,0x0
  43c9f3:	je     0x43c997
  43c9f5:	mov    bh,0x60
  43c9f7:	mov    al,0xb2
  43c9f9:	test   eax,0x900d6a85
  43c9fe:	add    cl,ch
  43ca00:	das    
  43ca01:	push   esp
  43ca02:	clc    
  43ca03:	push   0xffffffcd
  43ca05:	or     al,0x1
  43ca07:	shr    BYTE PTR [ebp+0x3df1430c],cl
  43ca0d:	in     eax,0x74
  43ca0f:	in     al,0x2f
  43ca11:	push   esp
  43ca12:	lock pusha 
  43ca14:	jmp    0x43c9ae
  43ca16:	push   eax
  43ca17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  43ca2c:	int3   
  43ca2d:	ror    DWORD PTR [esi],cl
  43ca2f:	sub    DWORD PTR [ecx+0x2e9143a8],esi
  43ca35:	dec    ebx
  43ca36:	clc    
  43ca37:	shl    BYTE PTR [edi],cl
  43ca39:	cmp    al,0xff
  43ca3b:	call   0x6bc262f6
  43ca40:	retf   
  43ca41:	test   eax,0xacbe62f9
  43ca46:	dec    ebp
  43ca47:	call   0xdd3d5a02
  43ca4c:	sahf   
  43ca4d:	test   eax,0x4fc78d13
  43ca52:	add    BYTE PTR [esi+0x2ac73d80],dh
  43ca58:	jl     0x43ca67
  43ca5a:	in     eax,dx
  43ca5b:	push   0xffffff85
  43ca5d:	jl     0x43cab1
  43ca5f:	xchg   esi,eax
  43ca60:	aas    
  43ca61:	pushf  
  43ca62:	test   DWORD PTR [edx-0x213ef55a],ebp
  43ca68:	xor    dh,BYTE PTR [eax+eax*1+0x3da1b6e9]
  43ca6f:	add    BYTE PTR [eax-0x46f07b68],dh
  43ca75:	pop    DWORD PTR [eax]
  43ca77:	arpl   si,si
  43ca79:	xchg   BYTE PTR [ebp+0x0],bh
  43ca7c:	inc    ecx
  43ca7d:	push   0x13c4fdf9
  43ca82:	inc    ebp
  43ca83:	call   FWORD PTR [ecx+0xc01360c]
  43ca89:	nop
  43ca8a:	push   eax
  43ca8b:	mov    DWORD PTR [ecx+0x15f65f],esp
	...
  43caa1:	add    BYTE PTR [eax],al
  43caa3:	add    BYTE PTR [eax],dh
  43caa5:	jle    0x43cae7
  43caa7:	add    BYTE PTR [edi+0x25],cl
  43caaa:	push   ecx
  43caab:	add    esp,ecx
  43caad:	pop    DWORD PTR [eax]
  43caaf:	punpckldq mm5,DWORD PTR [esi]
  43cab2:	stc    
  43cab3:	(bad)  
  43cab4:	fcomp  QWORD PTR [eax]
  43cab6:	jg     0x43cb0c
  43cab8:	int    0x8f
  43caba:	add    BYTE PTR [ebx+0x34826399],cl
  43cac0:	and    al,0x14
  43cac2:	jne    0x43cab8
  43cac4:	adc    DWORD PTR [ebp+0x6d],ebx
  43cac7:	dec    esp
  43cac8:	pop    ss
  43cac9:	int    0x1
  43cacb:	test   DWORD PTR [ebx+ebx*8+0x44],ecx
  43cacf:	push   0xffffff9c
  43cad1:	mov    edi,0x812c15f6
  43cad6:	inc    eax
  43cad7:	add    BYTE PTR [ecx],dl
  43cad9:	dec    edi
  43cada:	je     0x43cb14
  43cadc:	pop    ss
  43cadd:	int    0x69
  43cadf:	mov    DWORD PTR [ecx],esp
  43cae1:	pop    edi
  43cae2:	test   al,al
  43cae4:	xor    BYTE PTR [ebp+0x165c7682],0x45
  43caeb:	hlt    
  43caec:	iret   
  43caed:	dec    esi
  43caee:	maskmovq mm3,(bad)
  43caef:	neg    DWORD PTR [edx-0x73dc117b]
  43caf5:	clc    
  43caf6:	or     eax,0x508b128d
  43cafb:	lea    ecx,[edi]
  43cafd:	mov    DWORD PTR [eax-0x1],edx
  43cb00:	xor    DWORD PTR [ebx+0xe1c400f],edi
  43cb06:	mov    esi,0xc
	...
  43cb1b:	add    BYTE PTR [ebp-0x528bc2cd],dh
  43cb21:	cs enter 0xcdfa,0xf2
  43cb26:	(bad)  
  43cb27:	jae    0x43cace
  43cb29:	mov    eax,ds:0xf42ef7c1
  43cb2e:	xor    eax,0x5013236
  43cb33:	add    BYTE PTR [ebp-0x591970ba],dh
  43cb39:	sbb    eax,0xf32eefb1
  43cb3e:	xchg   esi,eax
  43cb40:	int    0xe6
  43cb42:	dec    ebx
  43cb43:	cli    
  43cb44:	rcr    BYTE PTR ds:0xf93007c2,cl
  43cb4a:	mov    eax,0x10533606
  43cb4f:	add    BYTE PTR [ebp-0xf],ah
  43cb52:	adc    esp,ecx
  43cb54:	(bad)  
  43cb55:	js     0x43cb5b
  43cb57:	xchg   DWORD PTR [eax],esp
  43cb59:	std    
  43cb5a:	sub    al,0x38
  43cb5c:	ins    DWORD PTR es:[edi],dx
  43cb5d:	stc    
  43cb5e:	cmp    eax,DWORD PTR [esi-0x2a3ce]
  43cb64:	mov    ch,0x1d
  43cb66:	leave  
  43cb67:	div    DWORD PTR [esi]
  43cb69:	int3   
  43cb6a:	test   edi,edi
  43cb6c:	das    
  43cb6d:	jae    0x43cbab
  43cb6f:	xor    al,BYTE PTR ss:[eax-0x3b4a0003]
  43cb76:	add    ch,al
  43cb78:	(bad)  
  43cb79:	mov    eax,0xc362fffd
  43cb7e:	sub    edx,edi
	...
  43cb94:	shl    BYTE PTR [esi+ecx*1],0x40
  43cb98:	mov    ch,0x3d
  43cb9a:	add    bl,dh
  43cb9c:	ins    DWORD PTR es:[edi],dx
  43cb9d:	xor    eax,edi
  43cb9f:	adc    DWORD PTR [esi+0x2fc0df78],ebx
  43cba5:	lock add BYTE PTR [eax-0x492a70e4],al
  43cbac:	mov    ebx,0xb5905316
  43cbb1:	(bad)  
  43cbb2:	out    0x80,eax
  43cbb4:	pop    edx
  43cbb5:	mov    esi,DWORD PTR [edi+0x2c2552b]
  43cbbb:	cmp    eax,0x1b73cf36
  43cbc0:	jb     0x43cb64
  43cbc2:	cmp    al,BYTE PTR [ebp+esi*4+0x372be78f]
  43cbc9:	lahf   
  43cbca:	loop   0x43cc08
  43cbcc:	ss iret 
  43cbce:	push   ebx
  43cbcf:	or     al,0x86
  43cbd1:	push   ss
  43cbd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cbd3:	sub    eax,edx
  43cbd5:	mov    esp,edi
  43cbd7:	add    ebp,DWORD PTR [esi+0x41]
  43cbda:	mov    al,0x40
  43cbdc:	fdiv   st,st(6)
  43cbdf:	push   ecx
  43cbe0:	jge    0x43cbf4
  43cbe2:	adc    BYTE PTR [ebx],al
  43cbe4:	mov    ch,0x8f
  43cbe6:	xor    eax,edi
  43cbe8:	add    al,0x13
  43cbea:	pop    ebx
  43cbeb:	xlat   BYTE PTR ds:[ebx]
  43cbec:	mov    ch,0x8f
  43cbee:	out    0xd0,eax
  43cbf0:	cmp    ecx,DWORD PTR [edx-0x6fd5009a]
  43cbf6:	adc    eax,DWORD PTR ds:0x0
	...
  43cc0c:	cmp    al,BYTE PTR [edi+edx*2+0x2917ae8a]
  43cc13:	ret    0xf8cb
  43cc16:	lsl    esi,WORD PTR [ebp+0xb2bf58f]
  43cc1d:	cmp    BYTE PTR gs:[edi-0x2494e944],dh
  43cc24:	mov    ch,0x8f
  43cc26:	out    0xa8,eax
  43cc28:	ins    DWORD PTR es:[edi],dx
  43cc29:	sbb    al,0x3f
  43cc2b:	jl     0x43cc87
  43cc2d:	mov    ds:0x3d0bdd42,eax
  43cc32:	xchg   edx,eax
  43cc33:	mov    BYTE PTR [ecx+0x76df003f],al
  43cc39:	mov    eax,ds:0x915c122e
  43cc3e:	mov    ebp,DWORD PTR [edi-0x42]
  43cc41:	mov    es,WORD PTR [eax]
  43cc43:	jmp    0x794c5ac1
  43cc48:	mul    BYTE PTR [eax+0x73fb94e]
  43cc4e:	popa   
  43cc4f:	call   0x5fcb5c0a
  43cc54:	pop    edx
  43cc55:	nop
  43cc56:	add    cl,ch
  43cc58:	mov    ecx,0x43e166bd
  43cc5d:	nop    eax
  43cc60:	mov    dh,0x8f
  43cc62:	dec    ebp
  43cc63:	cmp    DWORD PTR [esi+0x2df166bd],ebx
  43cc69:	mov    eax,db5
  43cc6c:	mov    dh,0x8f
  43cc6e:	dec    ebp
  43cc6f:	sbb    DWORD PTR [eax],eax
	...
  43cc81:	add    BYTE PTR [eax],al
  43cc83:	add    BYTE PTR [esi-0x2a5a8243],cl
  43cc89:	sub    dl,BYTE PTR [ecx+eiz*2]
  43cc8c:	pop    ds
  43cc8d:	pop    ecx
  43cc8e:	(bad)  
  43cc8f:	call   0x2285844a
  43cc94:	out    dx,al
  43cc95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cc96:	push   eax
  43cc97:	ins    BYTE PTR es:[edi],dx
  43cc98:	ja     0x43cc26
  43cc9a:	call   0xf9e97152
  43cc9f:	bound  ecx,QWORD PTR [eax+esi*8+0x12b1290e]
  43cca6:	cmp    DWORD PTR [ebp+0x19008fb9],0xffffffbe
  43ccad:	mov    ebp,0x8f21678b
  43ccb2:	add    cl,ch
  43ccb4:	xchg   BYTE PTR [edi],dl
  43ccb6:	fwait
  43ccb7:	mov    ch,0xb9
  43ccb9:	pop    DWORD PTR [eax]
  43ccbb:	pusha  
  43ccbc:	aas    
  43ccbd:	cmp    bh,bh
  43ccbf:	call   0xdee37a
  43ccc4:	adc    BYTE PTR [ebx+0x3c830000],cl
  43ccca:	add    BYTE PTR [eax+ebp*4-0x69],0x87
  43cccf:	xchg   BYTE PTR [edx+ecx*4+0xda10000],cl
  43ccd6:	mov    es,WORD PTR [ecx]
  43ccd8:	or     al,0x8c
  43ccda:	push   eax
  43ccdb:	mov    DWORD PTR [edx+0x1c00010b],esp
  43cce1:	adc    ebx,DWORD PTR [eax+0x8c1d84]
  43cce7:	inc    DWORD PTR [eax]
	...
  43ccf9:	add    BYTE PTR [eax],al
  43ccfb:	add    BYTE PTR [ebx+0x27c682c4],ch
  43cd01:	dec    edx
  43cd02:	std    
  43cd03:	dec    DWORD PTR [ebx+0x11]
  43cd06:	stc    
  43cd07:	call   0x4458fb
  43cd0c:	or     ah,al
  43cd0e:	sbb    eax,0xffefcd08
  43cd13:	push   esi
  43cd14:	hlt    
  43cd15:	dec    edx
  43cd16:	loope  0x43cd15
  43cd18:	repz adc BYTE PTR [edi-0x65ff1a1],bh
  43cd1f:	push   edx
  43cd20:	call   0x908b:0x9bc6fdf1
  43cd27:	inc    eax
  43cd28:	pushf  
  43cd29:	or     BYTE PTR [edi+0x938d08],ch
  43cd2f:	pop    ebx
  43cd30:	pop    ss
  43cd31:	mov    DWORD PTR [ebx-0x7e6e5737],eax
  43cd37:	add    DWORD PTR [esi+0xf10f594],esp
  43cd3d:	push   ecx
  43cd3e:	std    
  43cd3f:	dec    edx
  43cd40:	jns    0x43cdab
  43cd42:	cmp    BYTE PTR [edi+0x94c4],bl
  43cd48:	mov    bh,BYTE PTR [ecx-0x7f]
  43cd4b:	xchg   DWORD PTR [eax],ebp
  43cd4d:	xchg   esp,eax
  43cd4e:	add    BYTE PTR [eax],al
  43cd50:	mov    ch,0x33
  43cd52:	stc    
  43cd53:	xchg   edi,eax
  43cd54:	add    DWORD PTR ss:[esp+esi*2],0xe7ed21b2
  43cd5c:	xor    DWORD PTR [edi+0x36],esi
  43cd5f:	cli    
	...
  43cd74:	mul    BYTE PTR [ecx-0x574ba86a]
  43cd7a:	std    
  43cd7b:	ins    DWORD PTR es:[edi],dx
  43cd7c:	pop    ss
  43cd7d:	and    dh,al
  43cd7f:	lahf   
  43cd80:	(bad)  
  43cd81:	call   0xc5765a83
  43cd86:	add    al,0x0
  43cd88:	mov    ch,0xd8
  43cd8a:	ror    DWORD PTR ss:[edx],1
  43cd8d:	pop    esi
  43cd8e:	leave  
  43cd8f:	add    BYTE PTR [ebp+0xd5725a8],dh
  43cd95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cd96:	aaa    
  43cd97:	xchg   BYTE PTR [edx],bh
  43cd99:	or     eax,0x2bb50005
  43cd9e:	inc    esp
  43cd9f:	jae    0x43cd5b
  43cda1:	pop    eax
  43cda2:	aaa    
  43cda3:	adc    al,0xf5
  43cda5:	call   0xac:0x3641ffbd
  43cdac:	mov    ch,0xa8
  43cdae:	int    0xfa
  43cdb0:	jmp    0x43cddd
  43cdb2:	jg     0x43cd47
  43cdb4:	mov    ah,0xa8
  43cdb6:	std    
  43cdb7:	dec    edi
  43cdb8:	mov    dl,0x6
  43cdba:	cmp    BYTE PTR [edx-0x257eb],dh
  43cdc0:	(bad)  
  43cdc1:	ret    0xfc25
  43cdc4:	call   0xc43b:0xe1023f66
  43cdcb:	(bad)  
  43cdcc:	out    dx,eax
  43cdcd:	jmp    0x77d5549b
  43cdd2:	int    0x8c
  43cdd4:	xor    ah,ah
  43cdd6:	(bad)  
  43cdd7:	inc    DWORD PTR [eax]
	...
  43cde9:	add    BYTE PTR [eax],al
  43cdeb:	add    BYTE PTR [ebp+0x6a443e78],dh
  43cdf1:	(bad)  
  43cdf2:	out    0x8a,eax
  43cdf4:	stc    
  43cdf5:	xchg   edi,eax
  43cdf6:	pop    edx
  43cdf7:	movups XMMWORD PTR [ecx-0x21cbfc59],xmm0
  43cdfe:	scas   eax,DWORD PTR es:[edi]
  43cdff:	add    dh,BYTE PTR [ebp+0x4239428f]
  43ce05:	sahf   
  43ce06:	mov    dl,0xd2
  43ce08:	xor    edx,esi
  43ce0a:	aas    
  43ce0b:	sub    BYTE PTR cs:[esi+0x236a802a],bl
  43ce12:	test   eax,0xe8372f8c
  43ce17:	add    esi,DWORD PTR [ebp-0x79b581b0]
  43ce1d:	inc    ebp
  43ce1e:	pop    esp
  43ce1f:	jno    0x43ce87
  43ce21:	nop
  43ce22:	out    0x3,eax
  43ce24:	or     eax,0xff370278
  43ce29:	adc    ch,BYTE PTR [eax]
  43ce2b:	mov    al,0x9b
  43ce2d:	or     al,0xa7
  43ce2f:	(bad)  
  43ce30:	jp     0x43cdd0
  43ce32:	cld    
  43ce33:	inc    edi
  43ce34:	lds    ecx,FWORD PTR [edi-0x19]
  43ce37:	mov    WORD PTR [edi],?
  43ce39:	aaa    
  43ce3a:	call   0xda4e8342
  43ce3f:	mov    ch,BYTE PTR [esi+0x5e70c310]
  43ce45:	nop
  43ce46:	out    0x3,eax
  43ce48:	mov    esi,0xb5031015
  43ce4d:	(bad)
	...
  43ce61:	add    BYTE PTR [eax],al
  43ce63:	add    BYTE PTR [ecx-0x7e],bh
  43ce66:	daa    
  43ce67:	add    al,0x77
  43ce69:	push   ebx
  43ce6a:	call   0x8f3c:0x1c9cff02
  43ce71:	cmp    DWORD PTR [ebx],0x15
  43ce74:	cmc    
  43ce75:	(bad)  
  43ce76:	ins    DWORD PTR es:[edi],dx
  43ce77:	mov    esi,0xcea6c77f
  43ce7c:	xor    ebp,DWORD PTR [eax+eax*1-0x7a776596]
  43ce83:	and    al,0xb9
  43ce85:	inc    ecx
  43ce86:	push   ecx
  43ce87:	jb     0x43cea7
  43ce89:	lea    edi,[ebp+0x29]
  43ce8c:	les    esp,FWORD PTR [eax+0x7d8df2d9]
  43ce92:	clc    
  43ce93:	pop    esp
  43ce94:	xor    DWORD PTR [ecx-0x1],ebx
  43ce97:	call   0xa5060e52
  43ce9c:	jge    0x43ce3a
  43ce9e:	jle    0x43cece
  43cea0:	xor    cl,BYTE PTR [eax]
  43cea2:	inc    esp
  43cea3:	xor    eax,0xfba483ed
  43cea8:	neg    BYTE PTR [esi+ebp*1-0x7dbd0e9]
  43ceaf:	ror    BYTE PTR [ecx-0x491700bc],1
  43ceb5:	and    DWORD PTR [edx+0x72],ebp
  43ceb8:	cmp    DWORD PTR [ecx-0x1],eax
  43cebb:	call   0x3948d976
  43cec0:	inc    ecx
  43cec1:	xchg   ebp,eax
  43cec2:	and    DWORD PTR [eax],0x1a
  43cec5:	dec    edi
  43cec6:	aaa    
  43cec7:	xor    al,0x0
	...
  43ced9:	add    BYTE PTR [eax],al
  43cedb:	add    BYTE PTR [ecx-0xf8ddfdd],dh
  43cee1:	mov    WORD PTR [ebp-0x58],?
  43cee4:	ret    
  43cee5:	mov    al,ds:0x7d76f2d8
  43ceea:	mov    edi,0xc01ca553
  43ceef:	in     eax,0xe6
  43cef1:	inc    ecx
  43cef2:	stc    
  43cef3:	fadd   QWORD PTR [edx+0x37e9407e]
  43cef9:	ror    BYTE PTR [esp+ebp*2],1
  43cefc:	stc    
  43cefd:	and    ebx,DWORD PTR [edi]
  43ceff:	jb     0x43cf37
  43cf01:	inc    eax
  43cf02:	(bad)  
  43cf03:	call   0x5978e3be
  43cf08:	fstp   DWORD PTR [edi-0x3d]
  43cf0b:	add    BYTE PTR [ebx],bh
  43cf0d:	or     BYTE PTR fs:[ebp+0x34],0x8
  43cf12:	jnp    0x43cf68
  43cf14:	pop    ebp
  43cf15:	nop
  43cf16:	add    BYTE PTR [ebx-0x3a05f790],al
  43cf1c:	adc    DWORD PTR [ebp+0x0],esp
  43cf1f:	mov    edi,ebp
  43cf21:	fisttp QWORD PTR [eax-0x55671b8b]
  43cf27:	pop    eax
  43cf28:	pop    ebp
  43cf29:	nop
  43cf2a:	add    BYTE PTR [edx-0x25],dh
  43cf2d:	adc    edi,DWORD PTR [ebp-0x1]
  43cf30:	dec    esp
  43cf31:	in     al,dx
  43cf32:	dec    BYTE PTR [edx-0x2d29419]
  43cf38:	(bad)  [esi+esi*8+0x75]
  43cf3c:	shl    BYTE PTR [esp+edx*1-0x54],0x0
	...
  43cf51:	add    BYTE PTR [eax],al
  43cf53:	add    BYTE PTR [esi],bl
  43cf55:	sar    cl,1
  43cf57:	mov    DWORD PTR [ecx+0x65],esp
  43cf5a:	push   esi
  43cf5b:	pop    esi
  43cf5c:	aad    0x51
  43cf5e:	std    
  43cf5f:	jmp    DWORD PTR [ecx]
  43cf61:	or     esi,esp
  43cf63:	sub    DWORD PTR [eax+0x53564aaf],0x68
  43cf6a:	mov    dl,0x72
  43cf6c:	(bad)  [edx+eax*4-0x28]
  43cf70:	gs mov bh,0xe9
  43cf73:	test   edi,esi
  43cf75:	fdivp  st(6),st
  43cf77:	xor    DWORD PTR [ebx+ebp*2],ebx
  43cf7a:	add    BYTE PTR [eax],0xdc
  43cf7d:	(bad)  
  43cf7e:	jns    0x43cffd
  43cf80:	fmul   QWORD PTR [edi+0x59d07b81]
  43cf86:	inc    esp
  43cf87:	call   FWORD PTR [eax+eiz*8+0x37d18d07]
  43cf8e:	loope  0x43cf49
  43cf90:	push   0xd18df665
  43cf95:	aaa    
  43cf96:	mov    BYTE PTR [ebp-0x4b],al
  43cf99:	cwde   
  43cf9a:	xchg   BYTE PTR [ebp+edi*4+0x9],al
  43cf9e:	mov    cl,0xf
  43cfa0:	cs pop ecx
  43cfa2:	add    DWORD PTR [eax],0x5825a8b5
  43cfa8:	xchg   ecx,eax
  43cfa9:	and    dh,BYTE PTR [edx]
  43cfab:	test   BYTE PTR [edx-0x55],ch
  43cfae:	(bad)  
  43cfaf:	jle    0x43cf89
  43cfb1:	xor    ch,bh
  43cfb3:	mov    al,bl
  43cfb5:	inc    esp
  43cfb6:	xchg   dh,bh
	...
  43cfcc:	mov    bh,0xeb
  43cfce:	xor    eax,0xb049b565
  43cfd3:	sbb    eax,DWORD PTR [edx-0x24]
  43cfd6:	adc    eax,0x32c4c0fb
  43cfdb:	je     0x43cfa2
  43cfdd:	popa   
  43cfde:	mov    al,0xb
  43cfe0:	sbb    eax,0x22f978f2
  43cfe5:	push   ds
  43cfe6:	sub    eax,0x18052384
  43cfeb:	xchg   DWORD PTR [eax+0x1dd986b0],edx
  43cff1:	call   0x2d46ca29
  43cff6:	cmp    eax,0xc072b173
  43cffb:	cli    
  43cffc:	mov    ah,0x90
  43cffe:	fwait
  43cfff:	ret    
  43d000:	jmp    0xb925:0xe55c87a9
  43d007:	neg    DWORD PTR [ebp+0x48f3c1b9]
  43d00d:	add    al,0x34
  43d00f:	frstor cs:[esi+0x1a]
  43d013:	cld    
  43d014:	ret    0x2c75
  43d017:	cmp    edx,ebx
  43d019:	(bad)  [ebx]
  43d01b:	test   eax,edi
  43d01d:	loope  0x43cff2
  43d01f:	pop    ecx
  43d020:	push   cs
  43d021:	lock ds pop ss
  43d024:	mov    ch,0x8f
  43d026:	cmp    al,0x89
  43d028:	mov    cs,WORD PTR [esi]
  43d02a:	mov    WORD PTR [eax],cs
  43d02c:	adc    dh,BYTE PTR ds:0x493
	...
  43d042:	add    BYTE PTR [eax],al
  43d044:	cli    
  43d045:	inc    edx
  43d046:	pop    esi
  43d047:	mov    bh,0xba
  43d049:	push   es
  43d04a:	mov    al,ds:0xe8ff3789
  43d04f:	add    esi,DWORD PTR [ebp+0x33302d08]
  43d055:	dec    esi
  43d056:	fisttp WORD PTR [edx+0x284f97f9]
  43d05c:	pop    ecx
  43d05d:	call   0x34bb:0x2312805a
  43d064:	ror    DWORD PTR [ebx-0x7f4d08a2],0xa7
  43d06b:	add    edx,ebx
  43d06d:	(bad)  
  43d06e:	ins    BYTE PTR es:[edi],dx
  43d06f:	mov    edi,0x1bd3f26
  43d074:	cs ret 0x3c66
  43d078:	mov    ch,0x24
  43d07a:	(bad)  
  43d07b:	and    BYTE PTR [ebx-0x4e511875],0x6
  43d082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d083:	mov    bl,0xf
  43d085:	and    al,0xdb
  43d087:	mov    dl,al
  43d089:	xchg   DWORD PTR [eax-0x41],esi
  43d08c:	add    ah,BYTE PTR ds:0xa37986e7
  43d092:	xchg   edi,eax
  43d093:	test   eax,0xf71298e8
  43d098:	loopne 0x43d028
  43d09a:	out    0x3,eax
  43d09c:	pusha  
  43d09d:	xchg   ecx,eax
  43d09e:	data16 (bad) 
  43d0a0:	into   
  43d0a1:	cdq    
  43d0a2:	mov    esi,0x28c89a09
  43d0a7:	stc    
	...
  43d0bc:	cmc    
  43d0bd:	and    esp,esi
  43d0bf:	mov    ch,BYTE PTR [ecx-0x65]
  43d0c2:	push   ss
  43d0c3:	mov    DWORD PTR [ecx],edx
  43d0c5:	mov    BYTE PTR [eax],al
  43d0c7:	ror    esi,0x95
  43d0ca:	stc    
  43d0cb:	scas   al,BYTE PTR es:[edi]
  43d0cc:	sub    eax,0x7c46fc54
  43d0d1:	enter  0xf1be,0xb6
  43d0d5:	inc    edx
  43d0d6:	test   DWORD PTR [ebp+0x3a40a535],eax
  43d0dc:	jae    0x43d0f0
  43d0de:	icebp  
  43d0df:	jb     0x43d119
  43d0e1:	mov    ecx,esi
  43d0e3:	mov    eax,ds:0x278bcfcd
  43d0e8:	mov    ebx,0x3416bf78
  43d0ed:	fstp   DWORD PTR [eax]
  43d0ef:	mov    ecx,0x5e71b08e
  43d0f4:	mov    DWORD PTR [ecx+eax*8],ecx
  43d0f7:	fisttp QWORD PTR [ecx+0x6b]
  43d0fa:	rol    BYTE PTR [eax+0x25],0x90
  43d0fe:	add    cl,ch
  43d100:	xor    ebx,DWORD PTR [eax+eax*8]
  43d103:	jb     0x43d0f5
  43d105:	mov    al,0xf2
  43d107:	mov    cl,0xe1
  43d109:	xchg   ebp,eax
  43d10a:	bound  ebp,QWORD PTR [edx+0x6b]
  43d10d:	mov    ecx,0x6cc66100
  43d112:	add    cl,ch
  43d114:	(bad)
  43d118:	mov    dh,0x23
  43d11a:	or     al,0x87
  43d11c:	call   DWORD PTR [ebx-0x20]
  43d11f:	jnp    0x43d121
	...
  43d131:	add    BYTE PTR [eax],al
  43d133:	add    BYTE PTR [esi+0x2e],bl
  43d136:	aaa    
  43d137:	lods   al,BYTE PTR ds:[esi]
  43d138:	xchg   esi,eax
  43d139:	sbb    eax,0x1c358fce
  43d13e:	hlt    
  43d13f:	jmp    0x20a65656
  43d144:	in     al,dx
  43d145:	pushf  
  43d146:	outs   dx,BYTE PTR ds:[esi]
  43d147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d148:	pop    ds
  43d149:	pop    eax
  43d14a:	dec    ebx
  43d14b:	fisttp QWORD PTR [esi]
  43d14d:	(bad)  
  43d14e:	test   DWORD PTR [ecx+eax*8+0xb],ecx
  43d152:	add    BYTE PTR [eax],0x58
  43d155:	xchg   edx,eax
  43d156:	add    BYTE PTR [eax],al
  43d158:	int3   
  43d159:	inc    ebp
  43d15a:	inc    esp
  43d15b:	sti    
  43d15c:	pushf  
  43d15d:	inc    esi
  43d15e:	inc    esp
  43d15f:	stc    
  43d160:	lea    ebx,[ebp+0x14]
  43d163:	lock popf 
  43d165:	int3   
  43d166:	stc    
  43d167:	test   BYTE PTR [esp+ecx*4-0x6d],bl
  43d16b:	inc    ebp
  43d16c:	es jnp 0x43d171
  43d16f:	jno    0x43d1a4
  43d171:	pop    esp
  43d172:	sbb    al,0x9
  43d175:	dec    ecx
  43d176:	push   es
  43d177:	test   bh,bl
  43d179:	xchg   ebx,eax
  43d17a:	add    BYTE PTR [eax],al
  43d17c:	rol    esi,1
  43d17e:	rcl    DWORD PTR [eax-0x29],0x60
  43d182:	loope  0x43d12e
  43d184:	jns    0x43d1e3
  43d186:	test   BYTE PTR [ebp-0x74ca1464],0xec
  43d18d:	clc    
  43d18e:	out    dx,eax
  43d18f:	cmp    BYTE PTR [edi-0x5f],cl
  43d192:	jns    0x43d211
  43d194:	not    BYTE PTR [ebx+0x7d8b]
	...
  43d1aa:	add    BYTE PTR [eax],al
  43d1ac:	(bad)  
  43d1ae:	adc    eax,0xe1c11c6a
  43d1b3:	adc    eax,0xe8f65d68
  43d1b8:	mov    esi,0x87fff768
  43d1bd:	pop    eax
  43d1be:	mov    BYTE PTR [esi+0x18],al
  43d1c1:	je     0x43d1e8
  43d1c3:	jno    0x43d178
  43d1c5:	pop    esp
  43d1c6:	add    DWORD PTR [ebp-0x49],0xdd6a0278
  43d1cd:	shl    cl,0xf9
  43d1d0:	outs   dx,DWORD PTR ds:[esi]
  43d1d1:	pop    ebp
  43d1d2:	test   BYTE PTR [eax+0x7d826b19],0xe4
  43d1d9:	js     0x43d1fd
  43d1db:	xor    BYTE PTR [ecx+0x69],0xf9
  43d1df:	jae    0x43d196
  43d1e1:	mov    eax,DWORD PTR [ecx-0x508b468a]
  43d1e7:	sbb    cl,BYTE PTR [edi-0x59]
  43d1ea:	add    BYTE PTR [ebp+esi*2+0x22],0x3a
  43d1ef:	out    0xe6,eax
  43d1f1:	pop    ecx
  43d1f2:	sub    eax,0xb1e939fa
  43d1f7:	or     ch,BYTE PTR [esi]
  43d1f9:	loop   0x43d210
  43d1fb:	repz add eax,0x75832ef6
  43d201:	jne    0x43d20b
  43d203:	ret    0x1f8
  43d206:	add    eax,0x9100c6fb
  43d20b:	jecxz  0x43d27d
  43d20d:	push   ss
  43d20e:	shl    bh,cl
	...
  43d224:	inc    edx
  43d225:	add    eax,0xa435fa31
  43d22a:	sub    edi,edi
  43d22c:	out    0x9b,al
  43d22e:	add    BYTE PTR [edx-0x257d7],0xe5
  43d235:	cmp    eax,0xe8a7ac18
  43d23a:	std    
  43d23b:	jg     0x43d1f5
  43d23d:	push   ecx
  43d23e:	std    
  43d23f:	jae    0x43d1fb
  43d241:	sbb    BYTE PTR [ecx+ebp*8],al
  43d244:	cmp    al,0xa9
  43d246:	std    
  43d247:	push   DWORD PTR ds:0xabff2ce4
  43d24d:	and    al,0x28
  43d24f:	stc    
  43d250:	adc    dh,BYTE PTR [esi-0x80]
  43d253:	sbb    BYTE PTR [ebp+0x65fffda7],0x2f
  43d25a:	enter  0xfa07,0xb3
  43d25e:	popa   
  43d25f:	or     eax,0x4480a875
  43d264:	std    
  43d265:	sub    ecx,DWORD PTR [esi-0x2574ba1]
  43d26b:	dec    edi
  43d26c:	cs nop
  43d26e:	(bad)  
  43d26f:	sbb    al,0xd7
  43d271:	sbb    ebx,edx
  43d273:	xor    DWORD PTR [ecx],esi
  43d275:	ror    BYTE PTR [edi-0x16],1
  43d278:	cmp    esp,DWORD PTR [eax-0x6d7dc5c2]
  43d27e:	neg    BYTE PTR [ebp-0x5093be4e]
  43d284:	push   0xffffffa7
  43d286:	lgs    eax,FWORD PTR [eax]
	...
  43d299:	add    BYTE PTR [eax],al
  43d29b:	add    BYTE PTR [edi-0x5c38a06a],bl
  43d2a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d2a2:	aad    0x2c
  43d2a4:	mov    WORD PTR [esi+0xab6ca70],ss
  43d2aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d2ab:	sbb    al,0x29
  43d2ad:	and    BYTE PTR [edx+0xd679331],cl
  43d2b3:	add    eax,DWORD PTR [eax+0x4c]
  43d2b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d2b7:	jge    0x43d32c
  43d2b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d2ba:	push   ebp
  43d2bb:	mov    dh,0x5f
  43d2bd:	xchg   esi,eax
  43d2be:	pop    edi
  43d2bf:	(bad)  
  43d2c0:	arpl   WORD PTR [ebx],cx
  43d2c2:	sub    BYTE PTR [eax-0x5764ef57],bh
  43d2c8:	mov    ch,0x8f
  43d2ca:	out    0x93,eax
  43d2cc:	mov    ch,0x8f
  43d2ce:	out    0xb1,eax
  43d2d0:	lods   eax,DWORD PTR ds:[esi]
  43d2d1:	bound  esp,QWORD PTR [edi]
  43d2d3:	jge    0x43d2d0
  43d2d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d2d6:	out    0xb7,al
  43d2d8:	das    
  43d2d9:	xchg   esi,eax
  43d2da:	xor    dh,BYTE PTR [edi+0x5fd496ba]
  43d2e0:	test   al,0x4f
  43d2e2:	out    0x7d,eax
  43d2e4:	jns    0x43d280
  43d2e6:	mov    edx,0x25c863d1
  43d2eb:	or     BYTE PTR [ebp+0x7b205e3c],dh
  43d2f1:	mov    ds:0x1241d9af,eax
  43d2f6:	nop
  43d2f7:	add    dh,BYTE PTR [ebp+0x69e008f]
  43d2fd:	rol    BYTE PTR [ebx-0x12],1
	...
  43d314:	mov    dh,0x8
  43d316:	inc    esp
  43d317:	fld    DWORD PTR [ebp-0x9045b85]
  43d31d:	xchg   ebp,eax
  43d31e:	cs test eax,0x10f84b3f
  43d324:	xor    BYTE PTR [edx],dh
  43d326:	(bad)  
  43d327:	call   0xe8ce5be2
  43d32c:	mov    bh,0x8f
  43d32e:	add    BYTE PTR [eax+0x7b],ah
  43d331:	mov    eax,ds:0x90567285
  43d336:	add    cl,ch
  43d338:	mov    ecx,0x4372f412
  43d33d:	lea    ecx,[ebx-0x17ba7ed2]
  43d343:	int3   
  43d344:	inc    edx
  43d345:	call   0x6c87:0x89f66cf9
  43d34c:	mov    dh,0x8f
  43d34e:	add    BYTE PTR [edi+0x7b],bh
  43d351:	mov    edi,edi
  43d353:	repz pop edx
  43d355:	push   cs
  43d356:	ret    
  43d357:	push   0x1e
  43d359:	xchg   ecx,eax
  43d35a:	cs out dx,al
  43d35c:	retf   
  43d35d:	xlat   BYTE PTR ds:[ebx]
  43d35e:	add    cl,ch
  43d360:	mov    dh,0xa1
  43d362:	inc    ebx
  43d363:	fnsave [eax+0x1ed3641b]
  43d369:	add    al,0x44
  43d36b:	or     DWORD PTR ds:0x62dcf945,0x99e9407f
  43d375:	dec    ebx
  43d376:	clc    
  43d377:	push   0x0
	...
  43d389:	add    BYTE PTR [eax],al
  43d38b:	add    BYTE PTR [edx-0x78],bh
  43d38e:	mov    esi,DWORD PTR [edx+0x56]
  43d391:	nop
  43d392:	add    cl,ch
  43d394:	sahf   
  43d395:	and    ebp,DWORD PTR [ebp+0xe]
  43d398:	lds    ebx,FWORD PTR [ecx+0x64ec0073]
  43d39e:	dec    esp
  43d39f:	clc    
  43d3a0:	pop    edi
  43d3a1:	cmc    
  43d3a2:	in     eax,dx
  43d3a3:	cmp    bl,ch
  43d3a5:	jp     0x43d353
  43d3a7:	adc    cl,BYTE PTR [ecx+edx*4]
  43d3aa:	or     DWORD PTR [ebx+0x8a5c],0x458b8b66
  43d3b4:	and    al,0xbc
  43d3b6:	sub    al,al
  43d3b8:	hlt    
  43d3b9:	mov    edi,0x67bffe6
  43d3be:	mov    edx,0xf6807e
  43d3c3:	(bad)  
  43d3c4:	shl    DWORD PTR [ebx],1
  43d3c6:	or     dh,0x74
  43d3c9:	cs jo  0x43d3cb
  43d3cc:	pop    ebx
  43d3cd:	pop    es
  43d3ce:	mov    edx,0x444a9074
  43d3d3:	dec    DWORD PTR [ebp+0x2bf07465]
  43d3d9:	jbe    0x43d37f
  43d3db:	adc    bl,BYTE PTR [ebx+ecx*4-0x7439b01f]
  43d3e2:	add    edi,0x8fe155d7
  43d3e8:	pop    ebp
  43d3e9:	test   BYTE PTR gs:[esp+ebx*4+0xeb22d7],0x0
	...
  43d402:	add    BYTE PTR [eax],al
  43d404:	mov    cl,0x18
  43d406:	dec    esp
  43d407:	or     bh,dl
  43d409:	pop    ebx
  43d40a:	(bad)  
  43d40b:	mul    BYTE PTR [eax+edx*4-0x44e395d1]
  43d412:	loope  0x43d431
  43d414:	outs   dx,BYTE PTR ds:[esi]
  43d415:	test   BYTE PTR gs:[esp+ecx*8+0x51c5fdd7],0x65
  43d41e:	add    BYTE PTR [ebx+0x7e378c5b],cl
  43d424:	adc    cl,ah
  43d426:	dec    BYTE PTR [eax-0x3dfe034b]
  43d42c:	jo     0x43d3b3
  43d42e:	add    eax,DWORD PTR [edi-0x79807188]
  43d434:	push   ebp
  43d435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d436:	std    
  43d437:	dec    ebp
  43d439:	jl     0x43d3e9
  43d43b:	cli    
  43d43c:	fisub  DWORD PTR [eax+eax*8+0x383b36f7]
  43d443:	aaa    
  43d444:	retf   0x2c6a
  43d447:	xchg   BYTE PTR [eax-0x42],bh
  43d44a:	jle    0x43d490
  43d44c:	sar    DWORD PTR [ebp-0x1b],0x7e
  43d450:	sbb    DWORD PTR [eax+0x24bafffd],ebp
  43d456:	(bad)  
  43d457:	cli    
  43d458:	mov    ds:0xa5742ada,al
  43d45d:	loop   0x43d477
  43d45f:	lods   al,BYTE PTR ds:[esi]
  43d460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d461:	push   0xf2088004
  43d466:	std    
  43d467:	jae    0x43d469
	...
  43d479:	add    BYTE PTR [eax],al
  43d47b:	add    BYTE PTR [ebp-0x72f837d3],ch
  43d481:	xchg   esi,eax
  43d482:	lods   eax,DWORD PTR ds:[esi]
  43d483:	cli    
  43d484:	jb     0x43d4a5
  43d486:	enter  0xafa,0x73
  43d48a:	cmp    edi,DWORD PTR [ebp-0x685753]
  43d490:	pop    ebx
  43d491:	pop    ecx
  43d492:	lea    eax,[eax]
  43d494:	mov    ch,0xa8
  43d496:	sub    dl,BYTE PTR [eiz*2+0x4bffbd97]
  43d49d:	popa   
  43d49e:	push   es
  43d49f:	rol    BYTE PTR [edx+0x61],0x3e
  43d4a3:	mov    bh,0xc7
  43d4a5:	test   esi,esp
  43d4a7:	popf   
  43d4a8:	idiv   bl
  43d4aa:	jbe    0x43d497
  43d4ac:	ss inc ebp
  43d4ae:	and    eax,0xf6ad0980
  43d4b3:	call   DWORD PTR [edx]
  43d4b5:	nop
  43d4b6:	mov    dh,0xd5
  43d4b8:	addr16 daa 
  43d4ba:	jg     0x43d4a5
  43d4bc:	add    dl,BYTE PTR [ebx+0x7cff2c5e]
  43d4c2:	jecxz  0x43d4d8
  43d4c4:	jne    0x43d455
  43d4c6:	je     0x43d47f
  43d4c8:	xchg   esi,eax
  43d4c9:	aaa    
  43d4ca:	bswap  edi
  43d4cc:	and    al,0x93
  43d4ce:	bnd jns 0x43d472
  43d4d1:	(bad)  
  43d4d3:	ret    
  43d4d4:	rol    BYTE PTR [ebx],cl
  43d4d6:	ins    BYTE PTR es:[edi],dx
  43d4d7:	call   0x42b64be
  43d4dc:	gs xchg edx,eax
  43d4de:	mov    ecx,0x81
	...
  43d4f3:	add    BYTE PTR [esi],dl
  43d4f5:	ins    BYTE PTR es:[edi],dx
  43d4f6:	xchg   ebx,eax
  43d4f7:	add    al,0xb5
  43d4f9:	(bad)  
  43d4fa:	out    0x99,eax
  43d4fc:	stos   BYTE PTR es:[edi],al
  43d4fd:	sub    al,ch
  43d4ff:	lock bound eax,QWORD PTR [esp+edx*2]
  43d503:	call   0x42b6462
  43d508:	cmp    al,0xd3
  43d50a:	retf   
  43d50b:	imul   ecx,DWORD PTR [edx-0x6fe4186e],0xffffffb2
  43d512:	xchg   edx,eax
  43d513:	sub    eax,0x1fd9010
  43d518:	mov    ds:0x969074cf,al
  43d51d:	mov    edi,0xa7b503e7
  43d522:	xchg   DWORD PTR [ebp+0x5f],ecx
  43d525:	xchg   edx,eax
  43d526:	pop    esp
  43d527:	enter  0x3796,0x70
  43d52b:	mov    BYTE PTR [esi-0x4afc181d],dl
  43d531:	or     BYTE PTR [edi+eiz*8-0x185bfb62],ch
  43d538:	sar    BYTE PTR [edi],cl
  43d53a:	jo     0x43d5ac
  43d53c:	(bad)  
  43d53d:	jecxz  0x43d526
  43d53f:	add    esi,DWORD PTR [ebp+0x12b50108]
  43d545:	jbe    0x43d540
  43d547:	pop    ss
  43d548:	mov    WORD PTR [ebx+0x50],?
  43d54b:	push   esi
  43d54d:	xchg   ecx,eax
  43d54e:	addr16 icebp 
  43d550:	or     DWORD PTR [esi+0x24],0xffffffd5
  43d554:	sbb    al,0x92
  43d556:	dec    ecx
  43d557:	push   cs
	...
  43d56c:	test   BYTE PTR [ecx],dl
  43d56e:	(bad)  
  43d56f:	cmc    
  43d570:	dec    esp
  43d571:	or     BYTE PTR [ebx+0x664ddaa5],0xe9
  43d578:	push   es
  43d579:	xchg   ebp,eax
  43d57a:	int    0xba
  43d57c:	jbe    0x43d58f
  43d57e:	(bad)  
  43d57f:	cmc    
  43d580:	dec    edi
  43d581:	dec    esi
  43d582:	and    al,0x39
  43d584:	ds dec esi
  43d586:	and    al,0x3d
  43d588:	loope  0x43d58c
  43d58a:	inc    ebp
  43d58b:	add    eax,0x40ea7c5
  43d590:	fcom   DWORD PTR [ebp+0x59a857d]
  43d596:	add    cl,ch
  43d598:	mov    dh,0x8f
  43d59a:	jge    0x43d521
  43d59c:	call   0x8b8f:0xb6e90001
  43d5a3:	gs call 0x873f:0xb6e8ff21
  43d5ab:	or     eax,0x6dc1795d
  43d5b0:	push   edx
  43d5b1:	add    eax,0x73b6e900
  43d5b6:	mov    DWORD PTR [ecx],ebp
  43d5b8:	mov    cl,0x94
  43d5ba:	rol    BYTE PTR [ecx],cl
  43d5bc:	scas   eax,DWORD PTR es:[edi]
  43d5bd:	xchg   ecx,eax
  43d5be:	stc    
  43d5bf:	jmp    0x8168e28f
  43d5c4:	mov    bh,0x8f
  43d5c6:	add    bl,al
  43d5c8:	mov    dh,0x3f
  43d5ca:	stc    
  43d5cb:	cmp    dh,BYTE PTR [ebx+0x250c]
	...
  43d5e1:	add    BYTE PTR [eax],al
  43d5e3:	add    BYTE PTR [eax-0x5affff74],ch
  43d5e9:	or     edi,DWORD PTR [edx+0x1]
  43d5ec:	or     al,0x8d
  43d5ee:	mov    eax,DWORD PTR [eax+edi*4-0x59]
  43d5f2:	mov    BYTE PTR [edi+0x8d98],al
  43d5f8:	xchg   ecx,eax
  43d5f9:	enter  0x201d,0x8f
  43d5fd:	dec    eax
  43d5fe:	add    eax,0x145b89
  43d603:	add    ah,bl
  43d605:	adc    DWORD PTR [ebp+0x24],edi
  43d608:	pop    esp
  43d609:	lea    eax,[eax]
  43d60b:	add    BYTE PTR [ebx],bh
  43d60d:	push   ss
  43d60e:	jle    0x43d59c
  43d610:	fisttp QWORD PTR [eax+eax*1-0x9a41518]
  43d617:	jmp    DWORD PTR [esi-0x6d]
  43d61a:	loope  0x43d643
  43d61c:	in     eax,dx
  43d61d:	data16 test BYTE PTR [ebp-0x38f320a4],0x9c
  43d625:	nop
  43d626:	add    DWORD PTR [eax-0x74],0x13
  43d62a:	jno    0x43d630
  43d62c:	pop    ss
  43d62d:	pop    esp
  43d62e:	loop   0x43d632
  43d630:	(bad)  
  43d631:	pop    esi
  43d632:	mov    WORD PTR [eax+edi*2-0x3c],es
  43d636:	loope  0x43d5c5
  43d638:	test   eax,0x4c84f664
  43d63d:	fiadd  WORD PTR [edx]
  43d63f:	mov    ebx,DWORD PTR [ebx]
  43d641:	jae    0x43d6c1
  43d643:	(bad)  
  43d644:	xor    esp,DWORD PTR [ebp+edi*2-0x40]
	...
  43d65c:	imul   edx,DWORD PTR [esi+0x61],0x8b3660
  43d663:	xor    esp,DWORD PTR [edi]
  43d665:	mov    eax,0x8abc878c
  43d66a:	add    BYTE PTR [eax],al
  43d66c:	cld    
  43d66d:	xchg   esp,eax
  43d66e:	scas   eax,DWORD PTR es:[edi]
  43d66f:	xchg   DWORD PTR [ebp-0x4afffc82],esi
  43d675:	(bad)  
  43d676:	es adc al,0xc5
  43d679:	mov    bh,0xbd
  43d67b:	push   DWORD PTR [edi]
  43d67d:	dec    esi
  43d67e:	and    eax,0x39bc773
  43d683:	add    DWORD PTR [ebp-0x45f9565a],esi
  43d689:	xor    BYTE PTR [ebp+0x37],dh
  43d68c:	mov    ah,0xa6
  43d68e:	std    
  43d68f:	ss hlt 
  43d691:	repz adc al,0x53
  43d694:	(bad)  [ebx]
  43d696:	xor    al,0xfa
  43d698:	jmp    0xe17e:0x7d23c01a
  43d69f:	mov    ah,0xda
  43d6a1:	cwde   
  43d6a2:	sbb    dh,BYTE PTR [esi+0x1f7d323e]
  43d6a8:	mov    ah,0xa6
  43d6aa:	std    
  43d6ab:	xor    dl,BYTE PTR ss:[esi]
  43d6ae:	add    al,0x0
  43d6b0:	mov    ch,0xa9
  43d6b2:	jns    0x43d6ec
  43d6b4:	mov    ah,0x78
  43d6b6:	std    
  43d6b7:	xchg   BYTE PTR [edx],dh
  43d6b9:	mov    ch,0x3
  43d6bb:	add    BYTE PTR [ebp+0x743c91],dh
	...
  43d6d1:	add    BYTE PTR [eax],al
  43d6d3:	add    BYTE PTR [eax-0x438cbd7f],ch
  43d6d9:	icebp  
  43d6da:	ds out 0x7a,eax
  43d6dd:	sub    ah,BYTE PTR [esi]
  43d6df:	cli    
  43d6e0:	mov    cs,WORD PTR [eax]
  43d6e2:	jbe    0x43d73f
  43d6e4:	ror    DWORD PTR [eax+0x54f9b1f6],1
  43d6ea:	or     eax,0xf5fe3187
  43d6ef:	add    BYTE PTR [ebp-0x1e411588],dh
  43d6f5:	jnp    0x43d6e3
  43d6f7:	inc    edi
  43d6f8:	mov    ebp,0xf1fa0d84
  43d6fd:	(bad)  
  43d6fe:	or     edx,DWORD PTR [esi*1-0x4eebfbf4]
  43d705:	add    DWORD PTR [eax+0x1c],ecx
  43d708:	sbb    al,0x90
  43d70a:	out    0x3,eax
  43d70c:	mov    esi,0xb2dfab45
  43d711:	sbb    dh,BYTE PTR [ebx-0x7e]
  43d714:	mov    dl,0x90
  43d716:	out    0x3,eax
  43d718:	retf   0xda82
  43d71b:	jg     0x43d6fd
  43d71d:	(bad)  
  43d71e:	out    0x3,eax
  43d720:	xor    ah,dl
  43d722:	ret    
  43d723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d724:	push   0xffffff8e
  43d726:	cdq    
  43d727:	sti    
  43d728:	out    dx,eax
  43d729:	add    eax,0x93c12ae4
  43d72e:	fld    st(3)
  43d730:	loop   0x43d745
  43d732:	daa    
  43d733:	cli    
  43d734:	xor    DWORD PTR [esi-0x19],eax
  43d737:	add    eax,DWORD PTR [eax]
	...
  43d749:	add    BYTE PTR [eax],al
  43d74b:	add    BYTE PTR [ebp+0x4edfa385],dh
  43d751:	xchg   edi,eax
  43d752:	pop    ebx
  43d753:	cmc    
  43d754:	jge    0x43d781
  43d756:	add    edi,DWORD PTR [eax-0x46]
  43d759:	mov    fs,edi
  43d75b:	clc    
  43d75c:	dec    ecx
  43d75d:	dec    edi
  43d75e:	arpl   WORD PTR [edi+edi*4+0x14],ax
  43d762:	fs add al,0xb5
  43d765:	(bad)  
  43d766:	into   
  43d767:	clc    
  43d768:	jmp    0xe78f:0xb5846a1a
  43d76f:	sbb    ebx,DWORD PTR [edx+0x7a]
  43d772:	mov    ds:0xc3133129,al
  43d777:	xor    edi,DWORD PTR [edx-0x72]
  43d77a:	out    0xd3,eax
  43d77c:	cmp    ebx,DWORD PTR [ebp+0x7f]
  43d77f:	arpl   WORD PTR [ebx-0x73],ax
  43d782:	sub    ch,0x23
  43d785:	add    al,0x89
  43d787:	xor    dh,dh
  43d789:	mov    bl,0x0
  43d78b:	cmc    
  43d78c:	mov    bh,0x3
  43d78e:	push   edx
  43d78f:	mov    al,0x32
  43d791:	mov    dl,0x80
  43d793:	jmp    0x744d674e
  43d798:	icebp  
  43d799:	adc    al,al
  43d79b:	fcom   QWORD PTR [ebp+0x15]
  43d79e:	add    al,cl
  43d7a0:	inc    esi
  43d7a1:	xchg   ebx,eax
  43d7a2:	add    cl,ch
  43d7a4:	stos   DWORD PTR es:[edi],eax
  43d7a5:	sbb    ah,BYTE PTR [eiz*2-0x670671e6]
  43d7ac:	mov    ebx,DWORD PTR [edx]
  43d7ae:	and    al,0x31
	...
  43d7c4:	mov    cl,0x8f
  43d7c6:	add    BYTE PTR [eax-0x4606a77f],bh
  43d7cc:	inc    ah
  43d7ce:	mov    ebp,0x8c1b0f97
  43d7d3:	lds    esi,FWORD PTR [esi]
  43d7d5:	xchg   ebx,eax
  43d7d6:	add    cl,ch
  43d7d8:	pop    es
  43d7d9:	sbb    ecx,DWORD PTR [ebp+eax*8-0x16067176]
  43d7e0:	out    0x75,eax
  43d7e2:	ins    BYTE PTR es:[edi],dx
  43d7e3:	and    eax,0xd985899c
  43d7e8:	sar    DWORD PTR [esp+esi*2-0x11],1
  43d7ec:	cmp    DWORD PTR [eax-0x7b],ebp
  43d7ef:	scas   al,BYTE PTR es:[edi]
  43d7f0:	into   
  43d7f1:	dec    ecx
  43d7f2:	hlt    
  43d7f3:	into   
  43d7f4:	fnsave [eax+edx*8-0x7c]
  43d7f8:	int    0x89
  43d7fa:	repnz and eax,0xe5ff0995
  43d800:	adc    ah,BYTE PTR ds:0xdddaefa
  43d806:	mov    ebp,0xf98d02cd
  43d80b:	jmp    0xa9d770c6
  43d810:	repnz dec esp
  43d812:	or     DWORD PTR [ebp-0x37],esp
  43d815:	xchg   cl,bh
  43d817:	add    BYTE PTR [ebx],bh
  43d819:	mov    eax,0xc7c246d
  43d81e:	xlat   BYTE PTR ds:[ebx]
  43d81f:	call   0x3a8092
  43d824:	mov    ds:0xef31ab,eax
	...
  43d839:	add    BYTE PTR [eax],al
  43d83b:	add    bl,bl
  43d83d:	mov    bh,0xe8
  43d83f:	outs   dx,DWORD PTR ds:[esi]
  43d840:	fidiv  DWORD PTR [edi+0x6d108df6]
  43d846:	push   ecx
  43d847:	call   0x3ad65e
  43d84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d84d:	jge    0x43d7e8
  43d84f:	adc    cl,BYTE PTR [ecx+edx*4-0x75]
  43d853:	test   al,al
  43d855:	inc    ebx
  43d856:	add    BYTE PTR [eax],al
  43d858:	sbb    al,0x61
  43d85a:	not    dh
  43d85c:	(bad)  
  43d85e:	sbb    eax,0x910d8c
  43d863:	(bad)  
  43d864:	pusha  
  43d865:	ins    BYTE PTR es:[edi],dx
  43d866:	test   DWORD PTR [ecx],eax
  43d868:	fcom   QWORD PTR [eax-0x6ef370e4]
  43d86e:	call   0xf6f993ce
  43d873:	mov    ecx,DWORD PTR [ecx]
  43d875:	ror    DWORD PTR [ebx],1
  43d877:	inc    eax
  43d878:	fdivr  QWORD PTR [ecx+0x55]
  43d87b:	and    al,0x80
  43d87d:	aas    
  43d87e:	(bad)  
  43d87f:	(bad)  
  43d880:	pusha  
  43d881:	outs   dx,DWORD PTR ds:[esi]
  43d882:	dec    ebp
  43d883:	push   DWORD PTR [ebx+0x7a]
  43d886:	push   ebp
  43d887:	and    al,0xec
  43d889:	aas    
  43d88a:	(bad)  
  43d88b:	(bad)  
  43d88c:	loopne 0x43d8fd
  43d88e:	dec    ecx
  43d88f:	inc    DWORD PTR [ebx+0x6]
  43d892:	ds and al,0x64
  43d895:	test   al,0xc0
  43d897:	ds pop ebx
  43d899:	mov    ah,0x8c
  43d89b:	inc    esp
  43d89c:	jo     0x43d90e
  43d89e:	dec    ecx
  43d89f:	inc    DWORD PTR [eax]
	...
  43d8b1:	add    BYTE PTR [eax],al
  43d8b3:	add    BYTE PTR [edx+0x6],al
  43d8b6:	jle    0x43d8dc
  43d8b8:	mov    ch,0xe6
  43d8ba:	add    al,0x0
  43d8bc:	mov    ch,0xe
  43d8be:	mov    edx,0x771562df
  43d8c3:	inc    ebx
  43d8c4:	xchg   ecx,eax
  43d8c5:	scas   al,BYTE PTR es:[edi]
  43d8c6:	sbb    al,0x2d
  43d8c8:	push   es
  43d8c9:	add    eax,0xa1eb5a22
  43d8ce:	jne    0x43d8b4
  43d8d0:	loopne 0x43d88b
  43d8d2:	iret   
  43d8d3:	xchg   BYTE PTR [ecx-0x9],cl
  43d8d6:	sbb    BYTE PTR [ebx],dl
  43d8d8:	mov    bh,0x76
  43d8da:	std    
  43d8db:	jle    0x43d955
  43d8dd:	fisub  WORD PTR [ecx]
  43d8df:	dec    esi
  43d8e0:	mov    ecx,DWORD PTR [eax-0x44e9aba]
  43d8e6:	jg     0x43d8d3
  43d8e8:	adc    ch,al
  43d8ea:	and    DWORD PTR [edi+0xa],ecx
  43d8ed:	inc    ebx
  43d8ee:	cmc    
  43d8ef:	gs mov ebx,0x3fa4154e
  43d8f5:	stos   DWORD PTR es:[edi],eax
  43d8f6:	and    DWORD PTR [eax+edi*1-0x1505d86e],ecx
  43d8fd:	inc    ebp
  43d8fe:	and    dh,BYTE PTR [ecx+esi*4-0x6b]
  43d902:	scas   eax,DWORD PTR es:[edi]
  43d903:	pop    ss
  43d904:	int    0x8b
  43d906:	jo     0x43d904
  43d908:	shl    al,cl
  43d90a:	xor    al,0x84
  43d90c:	ret    
  43d90d:	add    DWORD PTR [edi-0x279bf82],edi
  43d913:	jae    0x43d8ba
  43d915:	ins    DWORD PTR es:[edi],dx
  43d916:	mov    al,0xf
	...
  43d92c:	mov    dl,0xec
  43d92e:	or     al,0xfb
  43d930:	rcr    al,0xd
  43d933:	inc    eax
  43d934:	mov    ch,0xfb
  43d936:	cmp    eax,0xb049e173
  43d93b:	adc    eax,DWORD PTR [eax-0x44]
  43d93e:	sub    al,0x65
  43d940:	mov    ah,0xce
  43d942:	add    al,0x68
  43d944:	mov    ch,0x8f
  43d946:	out    0x3,eax
  43d948:	jne    0x43d8d5
  43d94a:	adc    al,0xc
  43d94c:	pop    ebp
  43d94d:	push   eax
  43d94e:	mov    ecx,0xa7146f28
  43d953:	mov    al,0xcb
  43d955:	mov    bl,ah
  43d957:	adc    ebp,DWORD PTR [edx+0x4a82e7cf]
  43d95d:	loopne 0x43d95a
  43d95f:	dec    BYTE PTR [ecx-0x4afc18be]
  43d965:	add    al,0xeb
  43d967:	and    eax,0x9f5e0ffb
  43d96c:	mov    al,ds:0x392e1615
  43d971:	aad    0x4f
  43d973:	sbb    esi,DWORD PTR [edx+eiz*2]
  43d976:	inc    esp
  43d977:	xor    edx,DWORD PTR es:[edx-0x67]
  43d97b:	retf   0x4dfd
  43d97e:	fild   DWORD PTR [ebx]
  43d980:	pusha  
  43d981:	push   ss
  43d982:	cmp    edx,esp
  43d984:	gs cmc 
  43d986:	out    0x6b,eax
  43d988:	jg     0x43d94f
  43d98a:	lock add ebx,ebp
  43d98d:	pop    ebx
  43d98e:	push   eax
  43d98f:	sub    BYTE PTR [eax],al
	...
  43d9a1:	add    BYTE PTR [eax],al
  43d9a3:	add    bh,ch
  43d9a5:	dec    eax
  43d9a6:	inc    DWORD PTR [ecx]
  43d9a8:	mov    ch,0x8f
  43d9aa:	outs   dx,BYTE PTR ds:[esi]
  43d9ab:	push   esp
  43d9ac:	out    0x6d,eax
  43d9ae:	jo     0x43d970
  43d9b0:	retf   0xe7f5
  43d9b3:	jp     0x43d9aa
  43d9b5:	sbb    BYTE PTR [edi+eiz*1+0x27a043da],dl
  43d9bc:	mov    edi,0xf801b0be
  43d9c1:	xchg   DWORD PTR ds:0xcbdcba04,edi
  43d9c7:	pushf  
  43d9c8:	mov    dl,0xb2
  43d9ca:	out    0x3,eax
  43d9cc:	add    al,0xe0
  43d9ce:	iret   
  43d9cf:	add    eax,0xe900900f
  43d9d4:	mov    ch,0x8e
  43d9d6:	or     eax,0x218b516
  43d9db:	jo     0x43da48
  43d9dd:	mov    es,edi
  43d9df:	stos   BYTE PTR es:[edi],al
  43d9e0:	in     al,dx
  43d9e1:	into   
  43d9e2:	and    al,0xf9
  43d9e4:	pop    ebp
  43d9e5:	into   
  43d9e6:	and    al,0xe1
  43d9e8:	adc    DWORD PTR [edi-0x31220c92],ebx
  43d9ee:	and    al,0xed
  43d9f0:	pop    ebp
  43d9f1:	into   
  43d9f2:	and    al,0xed
  43d9f4:	sbb    DWORD PTR [ebx+0x7179a92d],edx
  43d9fa:	(bad)  
  43d9fb:	sbb    ecx,esi
  43d9fd:	dec    esp
  43d9fe:	adc    cl,ch
  43da00:	add    edx,DWORD PTR [ecx]
  43da02:	in     al,dx
  43da03:	push   0xffffffcd
  43da05:	mov    edx,0xb74d
	...
  43da1a:	add    BYTE PTR [eax],al
  43da1c:	icebp  
  43da1d:	sbb    al,BYTE PTR [ebx+0x1d]
  43da20:	add    DWORD PTR [ebx],ebx
  43da22:	inc    ebx
  43da23:	inc    ebp
  43da24:	jmp    0xe1891d43
  43da29:	adc    BYTE PTR [ebx-0x1f],al
  43da2c:	mov    ebp,ebx
  43da2e:	fcom   QWORD PTR [ecx]
  43da30:	add    eax,0x351efb62
  43da35:	dec    edx
  43da36:	or     DWORD PTR [ebp-0x6e],ebp
  43da39:	mov    bh,cl
  43da3b:	jmp    0x7250ad9d
  43da40:	test   eax,0x4de57812
  43da45:	dec    ebp
  43da46:	test   edx,edi
  43da48:	pop    esp
  43da49:	mov    bh,BYTE PTR [ecx]
  43da4b:	add    eax,0xec8046e1
  43da50:	mov    dh,0x8f
  43da52:	aaa    
  43da53:	and    al,0xe9
  43da55:	cli    
  43da56:	push   ss
  43da57:	pop    esi
  43da58:	stos   BYTE PTR es:[edi],al
  43da59:	enter  0xbd73,0x64
  43da5d:	call   0xf1fa:0xc3d900f9
  43da64:	push   ebx
  43da65:	cmp    ah,ch
  43da67:	adc    ebx,DWORD PTR [ebp+0x5d]
  43da6a:	dec    edi
  43da6b:	call   0x3a8e89
  43da70:	daa    
  43da71:	(bad)
  43da75:	int3   
  43da76:	push   es
  43da77:	test   cl,dl
  43da79:	mov    WORD PTR [eax],es
  43da7b:	add    bh,dl
  43da7d:	retf   
  43da7e:	xor    bl,0x0
	...
  43da91:	add    BYTE PTR [eax],al
  43da93:	add    BYTE PTR [ebp+0x4a],dh
  43da96:	loope  0x43db0a
  43da98:	push   esi
  43da99:	cmp    al,0x4
  43da9b:	cmp    DWORD PTR [ecx-0x57],ecx
  43da9e:	imul   edx,DWORD PTR [ebx],0xffffffd3
  43daa1:	cmp    ecx,esp
  43daa3:	add    ebx,esi
  43daa5:	mov    bl,0x74
  43daa7:	in     al,0x2f
  43daa9:	into   
  43daaa:	dec    ecx
  43daab:	push   esi
  43daac:	je     0x43db02
  43daae:	idiv   bh
  43dab0:	jae    0x43da59
  43dab2:	sti    
  43dab3:	xor    esp,ecx
  43dab5:	or     BYTE PTR [edx-0x40f8078c],bh
  43dabb:	mov    ecx,edi
  43dabd:	jne    0x43db03
  43dabf:	loopne 0x43daff
  43dac1:	xchg   edi,eax
  43dac2:	ins    DWORD PTR es:[edi],dx
  43dac3:	add    eax,0x72d53a15
  43dac8:	out    dx,eax
  43dac9:	mov    bl,0x74
  43dacb:	loopne 0x43daac
  43dacd:	mov    esi,0x9f9075f6
  43dad2:	mov    edi,0x26a53a50
  43dad7:	call   ebx
  43dad9:	lods   al,BYTE PTR ds:[esi]
  43dada:	loop   0x43dade
  43dadc:	push   cs
  43dadd:	int    0x7d
  43dadf:	ror    BYTE PTR [eax+0x77],0x82
  43dae3:	mov    DWORD PTR [edi-0x60],0x21744538
  43daea:	adc    esi,DWORD PTR [edi-0x4b]
  43daed:	jnp    0x43dacb
  43daef:	je     0x43da7a
  43daf1:	in     al,0xf1
  43daf3:	cli    
  43daf4:	and    BYTE PTR [edi],ch
  43daf6:	add    esi,ebp
	...
  43db0c:	xchg   edx,eax
  43db0d:	ret    
  43db0e:	cmp    BYTE PTR [esi],cl
  43db10:	je     0x43dab8
  43db12:	mov    dh,0xe7
  43db14:	mov    ebx,0x8efa1d39
  43db19:	je     0x43daee
  43db1b:	mov    edi,0xd983639
  43db20:	ds mov ebx,0xa27584f4
  43db26:	add    eax,0x8111ad7f
  43db2b:	inc    edi
  43db2c:	mov    ecx,0x5e005509
  43db31:	inc    edi
  43db32:	mov    bh,BYTE PTR [ecx+esi*4-0x15]
  43db36:	xchg   edi,eax
  43db37:	repz dec ebp
  43db39:	or     BYTE PTR [edi],bl
  43db3b:	cli    
  43db3c:	xor    dh,ch
  43db3e:	lahf   
  43db3f:	lgs    ebp,FWORD PTR [edx-0xc]
  43db43:	lods   eax,DWORD PTR gs:[esi]
  43db45:	in     eax,dx
  43db46:	inc    esi
  43db47:	dec    edi
  43db48:	sbb    cl,BYTE PTR [ebx-0x13]
  43db4b:	cli    
  43db4c:	test   al,0x3a
  43db4e:	idiv   DWORD PTR [edi]
  43db50:	mov    ch,0xf5
  43db52:	dec    eax
  43db53:	or     ebp,DWORD PTR [esi]
  43db55:	sbb    eax,DWORD PTR ds:0xb4aa708d
  43db5b:	dec    edi
  43db5c:	test   DWORD PTR [esi+0x25],eax
  43db5f:	cmp    eax,0x5a1da30d
  43db64:	cmp    DWORD PTR ds:0x76a9bd4c,0xffffffb8
  43db6b:	xchg   cl,ah
  43db6d:	div    BYTE PTR [eax]
  43db6f:	pop    ss
	...
  43db84:	mov    bh,0x76
  43db86:	std    
  43db87:	dec    esi
  43db88:	imul   esp,DWORD PTR [ecx],0x1e
  43db8b:	je     0x43db36
  43db8d:	(bad)  
  43db8e:	je     0x43db18
  43db90:	sahf   
  43db91:	test   edx,ebx
  43db93:	and    ch,BYTE PTR [edi-0x654c2003]
  43db99:	outs   dx,DWORD PTR ds:[esi]
  43db9a:	xchg   esi,eax
  43db9b:	and    BYTE PTR [edi-0x7b7748e5],bl
  43dba1:	xchg   edi,eax
  43dba2:	arpl   WORD PTR [edx-0x76],cx
  43dba5:	xchg   edi,esp
  43dba7:	test   eax,0x12e7c603
  43dbac:	xor    DWORD PTR [ebp-0x19],eax
  43dbaf:	add    esi,DWORD PTR [ebp+0x6e102c12]
  43dbb5:	ret    
  43dbb6:	xchg   edx,eax
  43dbb7:	mov    BYTE PTR [edi-0x3],bl
  43dbba:	clc    
  43dbbb:	nop
  43dbbc:	xor    DWORD PTR [esp+eax*4+0x22],esi
  43dbc0:	dec    edi
  43dbc1:	loopne 0x43dc3d
  43dbc3:	clc    
  43dbc4:	(bad)  
  43dbc5:	mov    ds:0x50380427,al
  43dbca:	repz or ch,bh
  43dbcd:	(bad)  
  43dbce:	out    0x3,eax
  43dbd0:	xor    edx,edi
  43dbd2:	int    0x6
  43dbd4:	xchg   ebx,eax
  43dbd5:	mov    ?,WORD PTR [edi-0x58704afd]
  43dbdb:	nop
  43dbdc:	xor    DWORD PTR [esp+eax*2+0x22],esi
  43dbe0:	pavgb  mm5,QWORD PTR [eax+ecx*8-0x42]
  43dbe5:	ja     0x43dc49
  43dbe7:	aaa    
	...
  43dbfc:	add    DWORD PTR [edi+0x7864363],eax
  43dc02:	jne    0x43dbcc
  43dc04:	out    0xdf,al
  43dc06:	and    ah,BYTE PTR fs:[ecx-0x4a]
  43dc0a:	adc    bl,BYTE PTR [eax+0xfa414b2]
  43dc10:	test   DWORD PTR [edi-0x68],esi
  43dc13:	and    edi,ecx
  43dc15:	xchg   BYTE PTR [ebx+0x43],ah
  43dc18:	inc    esi
  43dc19:	out    dx,eax
  43dc1a:	add    BYTE PTR [edx+0x15],ch
  43dc1d:	cmp    ecx,0x74
  43dc20:	retf   
  43dc21:	add    eax,0xfbd4e17c
  43dc26:	and    esi,DWORD PTR [esi]
  43dc28:	ins    BYTE PTR es:[edi],dx
  43dc29:	adc    eax,DWORD PTR [ebx-0x23]
  43dc2c:	imul   ecx,DWORD PTR [ecx-0x642a228d],0x8676db20
  43dc36:	test   BYTE PTR [ecx+0x2c8b96d8],ch
  43dc3c:	popf   
  43dc3d:	(bad)  
  43dc3e:	push   eax
  43dc3f:	sbb    DWORD PTR [edx],ebp
  43dc41:	jecxz  0x43dc4f
  43dc43:	xchg   ecx,eax
  43dc44:	cmp    al,0x61
  43dc46:	sti    
  43dc47:	sahf   
  43dc48:	cmp    eax,0x95c67446
  43dc4d:	sti    
  43dc4e:	or     al,0x8e
  43dc50:	bound  eax,QWORD PTR [esi+0xe]
  43dc53:	sub    DWORD PTR [ecx-0x6a12b3fa],edi
  43dc59:	loopne 0x43dc9c
  43dc5b:	jbe    0x43dca7
  43dc5d:	push   edx
  43dc5e:	or     eax,0x29
	...
  43dc73:	add    BYTE PTR [ecx-0x3f223ff4],dh
  43dc79:	icebp  
  43dc7a:	jge    0x43dc9b
  43dc7c:	mov    cl,0x9a
  43dc7e:	xor    DWORD PTR [ebp+edx*8-0xda30677],0xffffff99
  43dc86:	call   0xf9c7a778
  43dc8b:	jns    0x43dc43
  43dc8d:	outs   dx,BYTE PTR ds:[esi]
  43dc8e:	push   es
  43dc8f:	fs cli 
  43dc91:	cdq    
  43dc92:	call   0xf9c79cc8
  43dc97:	(bad)  [esi-0x17]
  43dc9a:	pop    edx
  43dc9b:	ret    0x447f
  43dc9e:	or     al,0xe9
  43dca0:	sub    ecx,DWORD PTR ds:0x9aa568ec
  43dca6:	(bad)  
  43dca7:	(bad)  
  43dca8:	fcom   QWORD PTR [ecx-0x613374b2]
  43dcae:	lods   eax,DWORD PTR ds:[esi]
  43dcaf:	inc    ebp
  43dcb0:	fcom   DWORD PTR [edx]
  43dcb2:	mov    ecx,0xc1027bad
  43dcb8:	daa    
  43dcb9:	push   esi
  43dcba:	add    DWORD PTR [ebx+0xc441aa5],ecx
  43dcc0:	pop    ss
  43dcc1:	pop    edx
  43dcc2:	adc    eax,0x1996dc1
  43dcc7:	rol    DWORD PTR ds:0xd18d054e,0x9f
  43dcce:	xchg   DWORD PTR [ebp-0x950b8],eax
  43dcd4:	(bad)  ds:0xfef1
	...
  43dcea:	add    BYTE PTR [eax],al
  43dcec:	sbb    esi,DWORD PTR [eax-0x50eb7a42]
  43dcf2:	idiv   bh
  43dcf4:	dec    ebp
  43dcf5:	xchg   ecx,eax
  43dcf6:	add    BYTE PTR [eax],al
  43dcf8:	adc    ecx,DWORD PTR [esi]
  43dcfa:	stc    
  43dcfb:	(bad)  
  43dcfc:	cmp    esi,DWORD PTR [eax-0x6ea30003]
  43dd02:	call   0xf6f45240
  43dd07:	pop    esi
  43dd08:	adc    eax,0x710001cb
  43dd0d:	adc    al,0xe5
  43dd0f:	xor    DWORD PTR [eax-0x58],0x50
  43dd13:	or     DWORD PTR [ecx],0xffffff95
  43dd16:	add    BYTE PTR [ebx+0x62],dl
  43dd19:	dec    eax
  43dd1a:	ins    DWORD PTR es:[edi],dx
  43dd1b:	xchg   DWORD PTR gs:[ebp+0xd],eax
  43dd1f:	xor    DWORD PTR [edi-0x30],0x280c9ff6
  43dd26:	push   ebx
  43dd27:	mov    ecx,DWORD PTR [ecx-0x67]
  43dd2a:	add    DWORD PTR [edi],0x8d0d5067
  43dd30:	sbb    BYTE PTR [ecx-0x5a4a74f7],cl
  43dd36:	and    eax,0x2093ff9d
  43dd3b:	xor    ebp,0x2
  43dd3e:	lds    eax,FWORD PTR [esi+0x138e01b2]
  43dd44:	mov    dh,0x86
  43dd46:	xchg   DWORD PTR [ecx-0x53],ebx
  43dd49:	jmp    0x43dd87
  43dd4b:	jae    0x43dd17
  43dd4d:	ins    DWORD PTR es:[edi],dx
  43dd4e:	xchg   edi,eax
  43dd4f:	or     eax,DWORD PTR [eax]
	...
  43dd61:	add    BYTE PTR [eax],al
  43dd63:	add    BYTE PTR [esi],bh
  43dd65:	cmp    DWORD PTR [ebp-0x703a3aa4],eax
  43dd6b:	jns    0x43dd32
  43dd6d:	dec    esi
  43dd6e:	mov    esp,0x854d92fa
  43dd73:	pop    esp
  43dd74:	mov    eax,ds:0x2e07a001
  43dd79:	mov    bl,0x10
  43dd7b:	xchg   ebx,ebp
  43dd7d:	outs   dx,BYTE PTR ds:[esi]
  43dd7e:	mov    WORD PTR [ecx],es
  43dd80:	jp     0x43dd36
  43dd82:	or     BYTE PTR [eax],al
  43dd84:	mov    ch,0x78
  43dd86:	std    
  43dd87:	mov    BYTE PTR [ebx],al
  43dd89:	imul   eax,DWORD PTR [esi-0xbc8c9fe],0x0
  43dd90:	std    
  43dd91:	bound  ecx,QWORD PTR [ebp+0x0]
  43dd94:	pop    esi
  43dd95:	js     0x43dd66
  43dd97:	mov    edi,0x86b59ce2
  43dd9c:	push   eax
  43dd9d:	xchg   ebx,eax
  43dd9e:	lgs    eax,FWORD PTR ds:[ebx-0x7a]
  43dda3:	jmp    0x43dddb
  43dda5:	rcl    BYTE PTR [eax],cl
  43dda7:	dec    edi
  43dda8:	and    ah,BYTE PTR [ebx-0x13]
  43ddab:	mov    WORD PTR [eax-0x26],?
  43ddae:	int    0xd6
  43ddb0:	gs (bad) 
  43ddb2:	mov    edi,0x19233cf3
  43ddb7:	out    0xed,eax
  43ddb9:	(bad)  
  43ddba:	sbb    edx,edi
  43ddbc:	xor    DWORD PTR [esi-0x710df569],esi
  43ddc2:	pushf  
  43ddc3:	pop    ss
  43ddc4:	shl    BYTE PTR [edi+0x3d],cl
  43ddc7:	and    DWORD PTR [eax],eax
	...
  43ddd9:	add    BYTE PTR [eax],al
  43dddb:	add    bh,bl
  43dddd:	sbb    BYTE PTR [esi],ah
  43dddf:	mov    ebx,0x3db50ed
  43dde4:	into   
  43dde5:	stc    
  43dde6:	add    ebx,DWORD PTR [edi]
  43dde8:	inc    ecx
  43dde9:	jnp    0x43dde5
  43ddeb:	cwde   
  43ddec:	scas   al,BYTE PTR es:[edi]
  43dded:	test   BYTE PTR [ebx+ecx*1-0x33],bh
  43ddf1:	int    0xea
  43ddf3:	push   ds
  43ddf4:	scas   eax,DWORD PTR es:[edi]
  43ddf5:	push   ss
  43ddf6:	mov    edi,0xa70d8e2a
  43ddfb:	cwde   
  43ddfc:	mov    cl,0x16
  43ddfe:	call   0x27e00085
  43de03:	xchg   edx,eax
  43de04:	xlat   BYTE PTR ds:[ebx]
  43de05:	push   cs
  43de06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43de07:	rcl    DWORD PTR [ebx-0x454c9175],cl
  43de0d:	adc    al,0x2b
  43de0f:	add    ah,BYTE PTR [ebp+0x7a8ad816]
  43de15:	mov    bh,0xad
  43de17:	mov    bh,al
  43de19:	fwait
  43de1a:	inc    sp
  43de1c:	mov    dl,0xc6
  43de1e:	popf   
  43de1f:	xchg   esi,eax
  43de20:	mov    bl,0xd9
  43de22:	pop    esi
  43de23:	xchg   ebx,eax
  43de24:	mov    edx,0x58da788e
  43de29:	loop   0x43de1c
  43de2b:	add    DWORD PTR [edx-0x52d59b1],edx
  43de31:	jbe    0x43de05
  43de33:	mov    bh,BYTE PTR [edx-0x4d184c3a]
  43de39:	cld    
  43de3a:	jmp    0x24:0x688b7a8a
	...
  43de51:	add    BYTE PTR [eax],al
  43de53:	add    BYTE PTR [edx],bl
  43de55:	and    edi,0xffffff93
  43de58:	int    0xd3
  43de5a:	or     edx,DWORD PTR [eax]
  43de5c:	adc    DWORD PTR [esi+ebp*2+0x8bd6cf],0xf9859041
  43de67:	cs cmp eax,0x74457343
  43de6d:	xchg   esi,eax
  43de6e:	add    BYTE PTR [edi+ebp*1-0xf9db089],dh
  43de75:	xchg   esi,eax
  43de76:	dec    ebp
  43de77:	mov    dh,0x3d
  43de79:	inc    ebx
  43de7a:	je     0x43de0f
  43de7c:	aaa    
  43de7d:	inc    ebx
  43de7e:	(bad)  
  43de7f:	cwde   
  43de80:	mov    ?,WORD PTR [edx+0x998f4d6]
  43de86:	clc    
  43de87:	pusha  
  43de88:	push   ebp
  43de89:	xchg   BYTE PTR [ebx-0xd25b21a],al
  43de8f:	daa    
  43de90:	lods   eax,DWORD PTR ds:[esi]
  43de91:	nop
  43de92:	mov    esi,DWORD PTR [edi]
  43de94:	mov    eax,ds:0x2bce39fe
  43de99:	mov    ch,al
  43de9b:	out    0xcc,eax
  43de9d:	cmp    ecx,0x72
  43dea0:	mov    eax,ds:0x5e3df90b
  43dea5:	test   DWORD PTR [edx],esi
  43dea7:	bound  edi,QWORD PTR [ebx-0x76]
  43deaa:	stc    
  43deab:	sbb    al,0xb9
  43dead:	ja     0x43deed
  43deaf:	lahf   
  43deb0:	rol    BYTE PTR [ebp+0x9951cf9],0x42
  43deb7:	fld    QWORD PTR [eax]
	...
  43dec9:	add    BYTE PTR [eax],al
  43decb:	add    BYTE PTR [ecx+0x72700900],dh
  43ded1:	mov    dl,BYTE PTR [ecx+0x6c]
  43ded4:	jp     0x43de60
  43ded6:	call   0xf9ca949d
  43dedb:	push   ss
  43dedc:	cmp    al,0x5a
  43dede:	call   0xf9c7cbda
  43dee3:	push   0xffffffbc
  43dee5:	(bad)  
  43dee6:	jae    0x43decb
  43dee8:	int    0xa4
  43deea:	test   DWORD PTR [edi+0x42c8be],esp
  43def0:	add    BYTE PTR [edx],bl
  43def2:	or     edi,edi
  43def4:	dec    ecx
  43def5:	mov    ds:0xa2a5f7e1,al
  43defa:	div    BYTE PTR [ebx]
  43defc:	pushf  
  43defd:	inc    esp
  43defe:	push   edx
  43deff:	leave  
  43df00:	sahf   
  43df01:	xchg   edi,eax
  43df02:	add    bh,bh
  43df04:	or     ah,BYTE PTR [ebx-0x504bf78c]
  43df0a:	cld    
  43df0b:	inc    ebx
  43df0d:	sbb    BYTE PTR [edi+0xc],al
  43df10:	inc    edi
  43df11:	dec    edx
  43df12:	cmc    
  43df13:	(bad)  
  43df14:	fcom   DWORD PTR [ebp-0x6ded7500]
  43df1a:	mov    esi,0x8e9444
  43df1f:	jmp    0x43df91
  43df21:	cmp    ecx,DWORD PTR [esi-0x1]
  43df24:	or     BYTE PTR [eax+0xd],bh
  43df27:	xor    eax,DWORD PTR [ebx-0x77db925c]
  43df2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43df2e:	ins    DWORD PTR es:[edi],dx
  43df2f:	and    al,0x0
	...
  43df41:	add    BYTE PTR [eax],al
  43df43:	add    BYTE PTR [eax-0x4b],ch
  43df46:	sbb    bh,bh
  43df48:	inc    ebx
  43df49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43df4a:	xor    al,0x9
  43df4d:	fwait
  43df4e:	ins    DWORD PTR es:[edi],dx
  43df4f:	sbb    BYTE PTR [ebx],ah
  43df51:	sbb    DWORD PTR ds:0xf664440c,ebx
  43df57:	inc    DWORD PTR [ebx+0x18]
  43df5a:	icebp  
  43df5b:	test   DWORD PTR [ebx+0x19],eax
  43df5e:	or     BYTE PTR [ebp-0x74fbe6f9],al
  43df64:	call   0x56cb:0xc703879f
  43df6b:	pop    esi
  43df6c:	push   cs
  43df6d:	xchg   ecx,eax
  43df6e:	add    BYTE PTR [ebp-0x69],dl
  43df71:	mov    al,0x80
  43df73:	in     al,dx
  43df74:	and    BYTE PTR [esi+0x498a0000],cl
  43df7a:	add    eax,0xb345b501
  43df7f:	push   edx
  43df80:	ds push esp
  43df82:	add    eax,0xfdfc310b
  43df87:	push   DWORD PTR [ebp-0x1579c27b]
  43df8d:	into   
  43df8e:	arpl   cx,di
  43df90:	repnz mov cl,0x88
  43df93:	out    dx,eax
  43df94:	xor    BYTE PTR [ecx+0x771e7991],ah
  43df9a:	std    
  43df9b:	jmp    DWORD PTR [ebp-0xb]
  43df9e:	(bad)  
  43dfa0:	inc    esi
  43dfa1:	adc    al,0x88
  43dfa3:	inc    ecx
  43dfa4:	mov    cl,0xdf
  43dfa6:	std    
  43dfa7:	inc    DWORD PTR [eax]
	...
  43dfb9:	add    BYTE PTR [eax],al
  43dfbb:	add    BYTE PTR [ecx-0x6fa86d8a],dh
  43dfc1:	jns    0x43dfd8
  43dfc3:	out    dx,eax
  43dfc4:	mov    dl,0xef
  43dfc6:	ret    
  43dfc7:	add    edx,esi
  43dfc9:	xor    eax,0xfdb1448b
  43dfce:	ds out 0xb9,al
  43dfd1:	in     eax,dx
  43dfd2:	or     al,0x37
  43dfd4:	ret    
  43dfd5:	fucomi st,st(6)
  43dfd7:	xchg   ch,bh
  43dfd9:	jb     0x43dfbd
  43dfdb:	(bad)  
  43dfdc:	mov    esi,0xa97508b3
  43dfe1:	inc    ecx
  43dfe2:	les    eax,FWORD PTR [ebx]
  43dfe4:	mov    ch,0x76
  43dfe6:	pop    es
  43dfe7:	add    al,ah
  43dfe9:	xchg   BYTE PTR [edx+0x45fdb51f],al
  43dfef:	out    0xfd,eax
  43dff1:	sbb    BYTE PTR ds:0x8f3638fa,dl
  43dff7:	fcomp  DWORD PTR [esi+0x57]
  43dffa:	and    BYTE PTR [ecx],0xb5
  43dffd:	std    
  43dffe:	int3   
  43dfff:	add    eax,DWORD PTR [edx+0x37]
  43e002:	add    al,0x0
  43e004:	mov    ebp,0x36048976
  43e009:	pop    DWORD PTR [edi]
  43e00b:	add    al,0x1a
  43e00d:	xchg   ecx,eax
  43e00e:	push   0x57801f25
  43e013:	sbb    edi,DWORD PTR ds:0xb2ee3d7
  43e019:	or     eax,0x493a0409
  43e01e:	outs   dx,BYTE PTR ds:[esi]
  43e01f:	dec    ebx
	...
  43e034:	adc    dh,BYTE PTR [edi+0x13ef1b31]
  43e03a:	aaa    
  43e03b:	and    esp,0xa6ae6af9
  43e041:	cmc    
  43e042:	out    dx,eax
  43e043:	sbb    ah,BYTE PTR [ecx-0x2d38c649]
  43e049:	xor    ah,0xa7
  43e04c:	mov    eax,0xea8ee7cf
  43e051:	adc    eax,0x4f30079c
  43e056:	loop   0x43e0d7
  43e058:	les    edx,FWORD PTR [eax+0x3803e7]
  43e05e:	cld    
  43e05f:	inc    edx
  43e060:	mov    ah,0xbf
  43e062:	out    0x3,eax
  43e064:	mov    ch,0xa
  43e066:	loop   0x43dff6
  43e068:	std    
  43e069:	xchg   edi,eax
  43e06a:	pusha  
  43e06b:	retf   
  43e06c:	mov    ds:0xed8ef20a,al
  43e071:	fwait
  43e072:	jo     0x43e03f
  43e074:	sahf   
  43e075:	ret    0x8ea7
  43e078:	jg     0x43e0e5
  43e07a:	inc    esp
  43e07b:	xchg   DWORD PTR [edi+0x3bbf1b8f],ebp
  43e081:	xlat   BYTE PTR ds:[ebx]
  43e082:	out    dx,eax
  43e083:	mov    gs,WORD PTR [edx+edx*1+0x5753f3a7]
  43e08a:	pop    esp
  43e08b:	nop
  43e08c:	mov    esi,0x5a182c08
  43e091:	pop    ecx
  43e092:	xchg   edx,eax
  43e093:	sbb    BYTE PTR [edi],bh
  43e095:	or     eax,DWORD PTR [eax]
  43e097:	adc    al,0x0
	...
  43e0a9:	add    BYTE PTR [eax],al
  43e0ab:	add    BYTE PTR [ebp-0x55213fed],bh
  43e0b1:	dec    edx
  43e0b2:	add    cl,ch
  43e0b4:	mov    dh,0x16
  43e0b6:	or     DWORD PTR [ebx+eax*2-0x5d],ebp
  43e0ba:	test   edi,ebp
  43e0bc:	mov    ebx,0x3be1873e
  43e0c1:	retf   0x7004
  43e0c4:	out    dx,al
  43e0c5:	xchg   edx,eax
  43e0c6:	test   DWORD PTR [esi-0x1eb7f752],ebp
  43e0cc:	inc    ebx
  43e0cd:	retf   0x600c
  43e0d0:	dec    BYTE PTR [edx+0x14aeb185]
  43e0d6:	(bad)  
  43e0d7:	xchg   ebp,eax
  43e0d8:	loopne 0x43e0b9
  43e0da:	mov    esp,DWORD PTR [esi+0x297ddfc6]
  43e0e0:	(bad)  
  43e0e1:	into   
  43e0e2:	stc    
  43e0e3:	fdiv   st(2),st
  43e0e5:	mov    al,ds:0x5333e940
  43e0ea:	or     al,0x62
  43e0ec:	jne    0x43e168
  43e0ee:	jmp    esi
  43e0f0:	cmp    ecx,ebx
  43e0f2:	or     BYTE PTR [edx-0xc],dh
  43e0f5:	jbe    0x43e173
  43e0f7:	fdivr  QWORD PTR [ecx+edi*2+0x7a12d185]
  43e0fe:	jae    0x43e179
  43e100:	cmp    BYTE PTR [ebp-0x7046fbec],bh
  43e106:	mov    al,ds:0x7e0125e9
  43e10b:	test   eax,0x2a8bcea9
	...
  43e124:	or     esi,0xad59228b
  43e12a:	rcl    BYTE PTR [ecx-0x6906ca75],0x35
  43e131:	ds je  0x43e13c
  43e134:	sbb    edi,DWORD PTR [esi+0x67]
  43e137:	add    BYTE PTR [eax+0x43],ah
  43e13a:	loope  0x43e0e3
  43e13c:	jg     0x43e0e4
  43e13e:	test   BYTE PTR [ebx-0x75067dd7],0x27
  43e145:	outs   dx,BYTE PTR ds:[esi]
  43e146:	ins    DWORD PTR es:[edi],dx
  43e147:	inc    ebp
  43e148:	sar    esi,cl
  43e14a:	in     eax,dx
  43e14b:	(bad)  
  43e14c:	jnp    0x43e0e6
  43e14e:	std    
  43e14f:	call   FWORD PTR [edx+edx*4]
  43e152:	cmp    edi,0xffffffe0
  43e155:	xchg   BYTE PTR [ecx-0x735b7829],al
  43e15b:	test   eax,eax
  43e15d:	cdq    
  43e15e:	idiv   bh
  43e160:	je     0x43e19c
  43e162:	and    al,0xff
  43e164:	fwait
  43e165:	cwde   
  43e166:	je     0x43e178
  43e168:	dec    edi
  43e169:	fsubp  st(5),st
  43e16b:	(bad)  
  43e16c:	mov    ebx,0x618cf998
  43e171:	lahf   
  43e172:	idiv   edi
  43e174:	mov    ebx,0xbb24efab
  43e179:	cwde   
  43e17a:	test   bh,bh
  43e17c:	inc    eax
  43e17d:	xchg   DWORD PTR [ecx-0x735ce829],eax
  43e183:	test   DWORD PTR [eax+0xfff697],esp
	...
  43e199:	add    BYTE PTR [eax],al
  43e19b:	add    BYTE PTR [edx+eiz*2+0xc7bff24],al
  43e1a2:	inc    esp
  43e1a3:	adc    al,0x15
  43e1a5:	jns    0x43e129
  43e1a7:	(bad)  
  43e1a8:	ja     0x43e133
  43e1aa:	dec    ecx
  43e1ab:	call   0x40a1ea
  43e1b0:	jg     0x43e183
  43e1b2:	push   esi
  43e1b3:	pop    esi
  43e1b4:	(bad)  
  43e1b5:	enter  0x10bb,0x5c
  43e1b9:	aas    
  43e1ba:	arpl   WORD PTR [esp+eax*2],ax
  43e1bd:	push   ss
  43e1be:	into   
  43e1bf:	std    
  43e1c0:	cmp    edi,esi
  43e1c2:	mov    ecx,0x846db574
  43e1c7:	pop    ds
  43e1c8:	mov    ch,0xf1
  43e1ca:	or     eax,0xf39b7e6
  43e1cf:	test   BYTE PTR [ebx-0x7d],al
  43e1d2:	iret   
  43e1d3:	gs jmp 0xe13eee69
  43e1d9:	dec    esi
  43e1da:	das    
  43e1db:	ds mov ch,0xf5
  43e1de:	jmp    0xbb88:0xfd26c76b
  43e1e5:	jmp    0x43e224
  43e1e7:	jae    0x43e18a
  43e1e9:	icebp  
  43e1ea:	shl    DWORD PTR [ebx],0xad
  43e1ed:	lods   eax,DWORD PTR ds:[esi]
  43e1ee:	mov    ebp,0xfd66c513
  43e1f3:	(bad)  
  43e1f4:	ds ins DWORD PTR es:[edi],dx
  43e1f6:	xchg   BYTE PTR [edi-0x37],al
  43e1f9:	icebp  
  43e1fa:	aas    
  43e1fb:	out    0xb3,al
  43e1fd:	ss and eax,0x6b
	...
  43e213:	add    BYTE PTR [edx],al
  43e215:	pushf  
  43e216:	sbb    BYTE PTR [ecx-0x23],dl
  43e219:	or     al,0x30
  43e21b:	cld    
  43e21c:	retf   0x3d59
  43e21f:	pop    ecx
  43e220:	imul   DWORD PTR [edx-0x3]
  43e223:	push   esp
  43e224:	mov    edi,DWORD PTR cs:[esi-0x15]
  43e228:	int    0x67
  43e22a:	std    
  43e22b:	inc    DWORD PTR [ebx]
  43e22d:	repnz push cs
  43e22f:	push   edx
  43e230:	outs   dx,BYTE PTR cs:[esi]
  43e232:	jg     0x43e225
  43e234:	stos   BYTE PTR es:[edi],al
  43e235:	repnz inc edx
  43e237:	call   DWORD PTR [edx+0x65428866]
  43e23d:	mov    esi,DWORD PTR [edx+edi*8]
  43e240:	and    ah,BYTE PTR [esi+0x2]
  43e243:	xor    DWORD PTR [ebp+0x66],0xfffffffd
  43e247:	(bad)  
  43e248:	ds stos DWORD PTR es:[edi],eax
  43e24a:	or     BYTE PTR [edi+0x55],bh
  43e24d:	mov    WORD PTR [si-0x4f],es
  43e251:	(bad)  
  43e252:	sbb    al,0xf5
  43e254:	pop    es
  43e255:	out    0x8f,al
  43e257:	outs   dx,DWORD PTR ds:[esi]
  43e258:	addr16 jp 0x43e1ed
  43e25b:	mov    ebx,DWORD PTR [edx+0x12]
  43e25e:	xchg   ecx,eax
  43e25f:	pop    es
  43e260:	cmp    DWORD PTR [ebx],esi
  43e262:	out    0x3,eax
  43e264:	mov    ch,0x10
  43e266:	cld    
  43e267:	or     esi,DWORD PTR [ebp-0x5ee8d2fd]
  43e26d:	xchg   DWORD PTR [esi+0x61],esp
  43e270:	sbb    bh,BYTE PTR [ebp+0x62]
  43e273:	pop    ss
  43e274:	sbb    cl,BYTE PTR [ebx]
  43e276:	fs sub al,0x0
	...
  43e289:	add    BYTE PTR [eax],al
  43e28b:	add    BYTE PTR [esp+edi*2],cl
  43e28e:	push   edx
  43e28f:	sub    al,0xa0
  43e291:	mov    bl,0x4a
  43e293:	pop    ss
  43e294:	cmp    DWORD PTR [ebx+edi*4+0x6],edi
  43e298:	xor    ah,BYTE PTR [esi+ebp*2+0x46]
  43e29c:	inc    ecx
  43e29d:	adc    bh,BYTE PTR [edi]
  43e29f:	push   ss
  43e2a0:	out    dx,eax
  43e2a1:	jnp    0x43e2e2
  43e2a3:	(bad)  
  43e2a4:	cdq    
  43e2a5:	jl     0x43e2c9
  43e2a7:	aas    
  43e2a8:	xor    DWORD PTR [edi+0x19],esp
  43e2ab:	pop    ss
  43e2ac:	iret   
  43e2ad:	xchg   edx,eax
  43e2ae:	out    0x3,eax
  43e2b0:	mov    ch,0x12
  43e2b2:	or     dl,BYTE PTR [eax-0x74e5f751]
  43e2b8:	in     al,dx
  43e2b9:	or     DWORD PTR [esp+ebp*1-0x54],esp
  43e2bd:	jnp    0x43e2b1
  43e2bf:	sub    esp,ebp
  43e2c1:	mov    ah,0xea
  43e2c3:	push   ss
  43e2c4:	cmp    edx,edx
  43e2c6:	sti    
  43e2c7:	fidiv  DWORD PTR [edi+0x5]
  43e2ca:	and    al,BYTE PTR [ebx-0x76c89fae]
  43e2d0:	hlt    
  43e2d1:	mov    edi,0x80018937
  43e2d6:	test   BYTE PTR [ebx-0x6e],0xfc
  43e2da:	lea    edx,[esi]
  43e2dc:	outs   dx,DWORD PTR ds:[esi]
  43e2dd:	adc    al,0x0
  43e2df:	test   eax,0xd966ab3a
  43e2e4:	sub    eax,0x2e3920d1
  43e2e9:	dec    esi
  43e2ea:	push   eax
  43e2eb:	sahf   
  43e2ec:	inc    ebp
  43e2ed:	fist   WORD PTR [edx]
  43e2ef:	sub    DWORD PTR [eax],eax
	...
  43e301:	add    BYTE PTR [eax],al
  43e303:	add    BYTE PTR [ecx+0x35ddc4fa],dh
  43e309:	cmp    esi,DWORD PTR [ebx-0x1d]
  43e30c:	or     al,0x8f
  43e30e:	call   0xf9bfc616
  43e313:	ins    BYTE PTR es:[edi],dx
  43e314:	jbe    0x43e314
  43e316:	add    ebp,DWORD PTR [edx+0x16]
  43e319:	jnp    0x43e301
  43e31b:	jmp    0x43e324
  43e31d:	cmp    eax,DWORD PTR [ebx-0x7870bdd7]
  43e323:	sbb    esi,ebx
  43e325:	mov    BYTE PTR [ebp-0x34],bh
  43e328:	mov    edx,0x48ef738f
  43e32d:	jae    0x43e3a4
  43e32f:	pop    ss
  43e330:	int    0x75
  43e332:	sub    eax,0xc7d92329
  43e337:	sub    ebp,DWORD PTR [esi+0x7235cc8f]
  43e33d:	inc    esi
  43e33e:	int3   
  43e33f:	sub    eax,0xbccc467a
  43e344:	aas    
  43e345:	addr16 dec edi
  43e347:	(bad)  
  43e348:	clc    
  43e349:	xchg   esi,eax
  43e34a:	test   DWORD PTR [edi+0x6bfff4ba],ebx
  43e350:	jne    0x43e3c7
  43e352:	push   eax
  43e353:	sahf   
  43e354:	popa   
  43e355:	jne    0x43e325
  43e357:	push   0xffffffe2
  43e359:	mov    bh,BYTE PTR [ebp-0x1f]
  43e35c:	mov    dh,0x4
  43e35e:	or     ch,dh
  43e360:	add    ah,dl
  43e362:	stc    
  43e363:	bound  esi,QWORD PTR [edx-0x6e]
  43e366:	xchg   eax,ebp
	...
  43e37c:	cmp    al,BYTE PTR gs:[ebp-0x45bd9700]
  43e383:	mov    ecx,edx
  43e385:	ja     0x43e309
  43e387:	inc    esi
  43e388:	test   BYTE PTR [ebx],ch
  43e38a:	dec    ebx
  43e38b:	(bad)  
  43e38c:	cmp    al,0x10
  43e38e:	mov    ebp,0x12bb3b08
  43e393:	rol    bh,0x9a
  43e396:	pop    esp
  43e397:	ret    
  43e398:	mov    DWORD PTR [eax],ecx
  43e39a:	in     eax,0x51
  43e39c:	jg     0x43e3c7
  43e39e:	dec    esi
  43e39f:	mov    esi,DWORD PTR [edx+edx*1]
  43e3a2:	inc    esp
  43e3a3:	cld    
  43e3a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e3a5:	sahf   
  43e3a6:	dec    ecx
  43e3a7:	(bad)  
  43e3a8:	fst    DWORD PTR [edi-0x71f30007]
  43e3ae:	call   0xf6e87758
  43e3b3:	mov    edx,DWORD PTR [ecx-0x5e]
  43e3b6:	jp     0x43e37c
  43e3b8:	sbb    cl,bh
  43e3ba:	mov    ecx,0x4c12b875
  43e3bf:	cld    
  43e3c0:	sbb    eax,0xb3ff8ba6
  43e3c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e3c6:	jp     0x43e38c
  43e3c8:	fdivr  st,st(0)
  43e3ca:	mov    ecx,0x54070875
  43e3cf:	cld    
  43e3d0:	addr16 push edx
  43e3d2:	add    DWORD PTR [edi-0x63],ebx
  43e3d5:	lods   eax,DWORD PTR ds:[esi]
  43e3d6:	add    DWORD PTR [ebx],ecx
  43e3d8:	pop    DWORD PTR [ecx-0x78]
  43e3db:	adc    DWORD PTR [edi],eax
  43e3dd:	pop    es
  43e3de:	in     al,0x5d
	...
  43e3f4:	(bad)
  43e3f8:	push   ebx
  43e3f9:	inc    ebx
  43e3fa:	mov    esi,0x8d9c02
  43e3ff:	add    BYTE PTR [edi+0x8],al
  43e402:	in     al,0x5d
  43e404:	dec    edi
  43e405:	rol    ebp,1
  43e407:	int3   
  43e408:	pusha  
  43e409:	rol    ebp,1
  43e40b:	int3   
  43e40c:	mov    ch,0xbb
  43e40e:	xchg   ebx,ebp
  43e410:	in     al,0xb5
  43e412:	stos   BYTE PTR es:[edi],al
  43e413:	push   edx
  43e414:	cs dec edi
  43e416:	add    BYTE PTR [ecx+esi*2-0x2],0xe
  43e41b:	dec    edi
  43e41c:	jb     0x43e3ca
  43e41e:	sbb    bh,bh
  43e420:	bound  esp,QWORD PTR [edi-0x3]
  43e423:	out    0xf0,eax
  43e425:	xor    DWORD PTR [edx+edi*8],edx
  43e428:	lods   al,BYTE PTR ds:[esi]
  43e42a:	sbb    BYTE PTR [esi+0x71],bh
  43e42d:	imul   ecx,DWORD PTR [eax-0x75d8c728],0xa
  43e434:	sub    ah,al
  43e436:	sbb    BYTE PTR [eax+0x1d],dl
  43e439:	aaa    
  43e43a:	adc    al,0xfa
  43e43c:	sub    ch,dh
  43e43e:	ret    0x36fb
  43e441:	xor    edi,ecx
  43e443:	xchg   BYTE PTR [eax+ebp*4],al
  43e446:	pop    ds
  43e447:	pop    es
  43e448:	mov    esi,0x80bf7acc
  43e44d:	jno    0x43e3d1
  43e44f:	inc    esp
  43e450:	add    DWORD PTR [edi],esi
  43e452:	and    eax,0x14d1fa11
  43e457:	xchg   BYTE PTR [eax],al
	...
  43e469:	add    BYTE PTR [eax],al
  43e46b:	add    BYTE PTR [eax-0x4e3c7f46],al
  43e471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e472:	push   ds
  43e473:	stmxcsr DWORD PTR [edi+0x4a60bf7a]
  43e47a:	or     BYTE PTR [ecx+edx*8+0x37],0x25
  43e47f:	stc    
  43e480:	retf   
  43e481:	mov    eax,ds:0x72f97e14
  43e486:	jp     0x43e447
  43e488:	inc    eax
  43e489:	pop    edx
  43e48a:	mov    BYTE PTR [ecx+esi*4-0x3],dl
  43e48e:	ret    0xa07
  43e491:	test   al,0x1f
  43e493:	pop    ss
  43e494:	mov    dh,0x95
  43e496:	mov    bl,0x88
  43e498:	les    ecx,FWORD PTR [edi-0x256680c2]
  43e49e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e49f:	jg     0x43e482
  43e4a1:	xchg   DWORD PTR [edx],esi
  43e4a3:	mov    dl,0x77
  43e4a5:	(bad)  
  43e4a6:	out    0x3,eax
  43e4a8:	mov    ch,0x8f
  43e4aa:	push   ds
  43e4ab:	jg     0x43e506
  43e4ad:	fisub  DWORD PTR [esi+0x1c4b7e40]
  43e4b3:	jg     0x43e503
  43e4b5:	or     al,0xbb
  43e4b7:	add    dl,ch
  43e4b9:	loope  0x43e4f5
  43e4bb:	jg     0x43e507
  43e4bd:	or     ah,BYTE PTR [eax+edx*1]
  43e4c0:	xor    edi,DWORD PTR [esi+0x37]
  43e4c3:	dec    ebx
  43e4c4:	stc    
  43e4c5:	jnp    0x43e4ae
  43e4c7:	add    esi,DWORD PTR [ebp+0x2c578f8f]
  43e4cd:	js     0x43e549
  43e4cf:	jg     0x43e4d1
	...
  43e4e1:	add    BYTE PTR [eax],al
  43e4e3:	add    dl,dh
  43e4e5:	add    ebp,DWORD PTR [eax+edx*1]
  43e4e8:	cmp    eax,0x3208a30c
  43e4ed:	push   edi
  43e4ee:	jo     0x43e4a9
  43e4f0:	or     dl,BYTE PTR [edx]
  43e4f2:	xor    BYTE PTR [ecx+0xfa40abc],bl
  43e4f8:	outs   dx,DWORD PTR gs:[si]
  43e4fb:	adc    bh,bh
  43e4fd:	ja     0x43e565
  43e4ff:	dec    eax
  43e500:	mov    dh,0x4
  43e502:	das    
  43e503:	jg     0x43e576
  43e505:	jnp    0x43e557
  43e507:	add    ebx,DWORD PTR [ecx]
  43e509:	dec    ebp
  43e50a:	(bad)  
  43e50c:	xor    DWORD PTR [edi+0x28],0x3f84ba24
  43e513:	mov    ebp,edi
  43e515:	add    edx,esp
  43e517:	sub    BYTE PTR [ecx+0x7b],0xb5
  43e51b:	sbb    eax,DWORD PTR [ecx+edi*2+0x2]
  43e51f:	adc    esi,DWORD PTR [ebx]
  43e521:	dec    esp
  43e522:	jecxz  0x43e5a2
  43e524:	jb     0x43e531
  43e526:	add    BYTE PTR [edx+esi*4-0xcbaf6e9],ch
  43e52d:	xchg   BYTE PTR [edi],al
  43e52f:	cmp    al,0xc1
  43e531:	dec    edi
  43e532:	loopne 0x43e52d
  43e534:	mov    ebx,DWORD PTR [edi-0x7d]
  43e537:	mov    al,ds:0x248b891d
  43e53c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e53d:	(bad)  
  43e53e:	call   0xf9bdac60
  43e543:	push   0xfffffff2
  43e545:	xchg   edx,eax
  43e546:	test   DWORD PTR [ecx+0x0],esp
	...
  43e55c:	jecxz  0x43e529
  43e55e:	cld    
  43e55f:	push   eax
  43e560:	mov    bh,0x2b
  43e562:	mov    esi,0xf8dc5001
  43e567:	test   al,0x96
  43e569:	sahf   
  43e56a:	add    eax,0x73482db1
  43e56f:	fbstp  TBYTE PTR ds:0xd118fcc4
  43e575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e576:	cli    
  43e577:	jle    0x43e540
  43e579:	cmc    
  43e57a:	(bad)  
  43e57b:	in     eax,dx
  43e57c:	mov    ds:0xc524854e,eax
  43e581:	pop    ss
  43e582:	pop    es
  43e583:	lods   al,BYTE PTR ds:[esi]
  43e584:	mov    esi,0xb4d4c70b
  43e589:	add    al,0x53
  43e58b:	push   ebp
  43e58c:	dec    eax
  43e58d:	outs   dx,DWORD PTR ds:[esi]
  43e58e:	pop    ss
  43e58f:	dec    edi
  43e590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e591:	jns    0x43e610
  43e593:	sub    eax,0x72c80eba
  43e598:	std    
  43e599:	jp     0x43e532
  43e59b:	sub    BYTE PTR [esi-0x515bf872],dl
  43e5a1:	or     eax,edi
  43e5a3:	pushf  
  43e5a4:	mov    ah,0x4
  43e5a6:	inc    ebx
  43e5a7:	sbb    eax,0x14fb6f06
  43e5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e5ad:	jns    0x43e62c
  43e5af:	and    eax,0xc80eb2
  43e5b4:	daa    
  43e5b5:	dec    eax
  43e5b6:	cmc    
  43e5b7:	cdq    
  43e5b8:	fnsave [edx-0x75aef6f7]
  43e5be:	test   cl,cl
	...
  43e5d4:	and    DWORD PTR [esi-0x74],ebx
  43e5d7:	dec    ebp
  43e5d8:	cwde   
  43e5d9:	inc    edx
  43e5da:	loope  0x43e5bd
  43e5dc:	imul   esp,DWORD PTR [eax+0xc548bf6],0xbb1104bd
  43e5e6:	je     0x43e609
  43e5e8:	out    0x4e,eax
  43e5ea:	cmc    
  43e5eb:	cdq    
  43e5ec:	out    0xbb,eax
  43e5ee:	add    BYTE PTR [ebp+0x54],0x5b
  43e5f2:	out    dx,eax
  43e5f3:	or     ebx,DWORD PTR [edi]
  43e5f5:	rcr    bl,cl
  43e5f7:	sbb    BYTE PTR [edi+0x3d],al
  43e5fa:	icebp  
  43e5fb:	pop    edi
  43e5fc:	lds    ebx,FWORD PTR [ebx+0x57]
  43e5ff:	mov    DWORD PTR [edi+eax*4-0x7f],edi
  43e603:	rol    DWORD PTR [edi+0x5f5de4f4],0xf4
  43e60a:	inc    esp
  43e60b:	or     bl,cl
  43e60d:	inc    ecx
  43e60e:	mov    esi,0x920c00
  43e613:	add    BYTE PTR [ebx+0x4b],dl
  43e616:	std    
  43e617:	call   FWORD PTR [edx+edx*4]
  43e61a:	add    BYTE PTR [ebx-0x1a7ddb23],cl
  43e620:	dec    ecx
  43e621:	retf   
  43e622:	(bad)
  43e625:	iret   
  43e626:	(bad)
  43e629:	iret   
  43e62a:	(bad)
  43e62d:	iret   
  43e62e:	kandw  k6,k6,k3
  43e632:	in     eax,0x83
  43e634:	cwde   
  43e635:	addr16 dec edx
  43e637:	mov    eax,DWORD PTR [eax]
	...
  43e649:	add    BYTE PTR [eax],al
  43e64b:	add    cl,bh
  43e64d:	jne    0x43e69e
  43e64f:	push   edi
  43e650:	inc    edi
  43e651:	push   es
  43e652:	add    DWORD PTR [ebx],esi
  43e654:	mov    ch,0x96
  43e656:	call   0x7a52:0xb43e60fd
  43e65d:	and    al,0x11
  43e65f:	cli    
  43e660:	stos   BYTE PTR es:[edi],al
  43e661:	addr16 std 
  43e663:	mov    BYTE PTR [eax],ch
  43e665:	jg     0x43e6dd
  43e667:	je     0x43e5fa
  43e669:	lock xchg ecx,eax
  43e66b:	out    0x9d,eax
  43e66d:	adc    ecx,edi
  43e66f:	dec    DWORD PTR [edx+0x381341ea]
  43e675:	daa    
  43e676:	xchg   ecx,eax
  43e677:	push   es
  43e678:	fisub  DWORD PTR [ebx+edx*8-0x53e75941]
  43e67f:	xchg   BYTE PTR [eax-0x6c],dl
  43e682:	inc    ebx
  43e683:	dec    esi
  43e684:	or     cl,BYTE PTR [edi+0xc]
  43e687:	cmp    DWORD PTR [ebp+0x36f57c66],esi
  43e68d:	and    esi,ebp
  43e68f:	xchg   BYTE PTR [ebp+0x0],ch
  43e692:	stos   DWORD PTR es:[edi],eax
  43e693:	fld    TBYTE PTR [esp+ebx*4]
  43e696:	and    al,0x84
  43e698:	cmp    bl,BYTE PTR [esi-0x1842920e]
  43e69e:	or     al,0xfa
  43e6a0:	sub    ah,BYTE PTR [edi-0x3]
  43e6a3:	outs   dx,BYTE PTR ds:[esi]
  43e6a4:	lods   eax,DWORD PTR ds:[esi]
  43e6a5:	out    dx,eax
  43e6a6:	stos   BYTE PTR es:[edi],al
  43e6a7:	repz sub al,0x64
  43e6aa:	add    eax,0x15f0a86
  43e6af:	add    al,0x0
	...
  43e6c1:	add    BYTE PTR [eax],al
  43e6c3:	add    BYTE PTR [ebp-0x70ff649a],dh
  43e6c9:	data16 adc BYTE PTR [ebx*4+0x37ffc4a5],dl
  43e6d1:	mov    ds:0xb27088f9,eax
  43e6d6:	cmp    BYTE PTR [edi-0x372b0797],0x1f
  43e6dd:	imul   edi,ebp,0xffffffff
  43e6e0:	mov    ch,0x8f
  43e6e2:	fiadd  WORD PTR [ecx-0x41]
  43e6e5:	or     al,0x13
  43e6e7:	add    esi,DWORD PTR [ebp-0x3939a171]
  43e6ed:	add    ebp,ebp
  43e6ef:	int3   
  43e6f0:	add    BYTE PTR [esi+eiz*2-0x188b55d8],0x1c
  43e6f8:	mov    bl,0x1f
  43e6fa:	pop    esi
  43e6fb:	scas   al,BYTE PTR es:[edi]
  43e6fc:	jle    0x43e706
  43e6fe:	je     0x43e70b
  43e700:	cmp    ebx,edx
  43e702:	sar    DWORD PTR [ebx-0x7],cl
  43e705:	jg     0x43e775
  43e707:	xchg   ecx,eax
  43e708:	bound  ecx,QWORD PTR [eax]
  43e70a:	sub    al,0x18
  43e70c:	xor    eax,0xb507e751
  43e711:	(bad)  
  43e712:	xor    ax,0xb96a
  43e716:	test   eax,0xebfcac92
  43e71b:	retf   0xfd6a
  43e71e:	fistp  QWORD PTR [ecx+edi*8+0x63]
  43e722:	jo     0x43e6bd
  43e724:	pop    edx
  43e725:	push   0x7ce1
	...
  43e73a:	add    BYTE PTR [eax],al
  43e73c:	jmp    0x4b0547a4
  43e741:	or     BYTE PTR [esp],ah
  43e744:	cmp    eax,DWORD PTR [eax+0x81e98ce]
  43e74a:	scas   al,BYTE PTR es:[edi]
  43e74b:	jmp    0x43e6ee
  43e74d:	jg     0x43e70d
  43e74f:	cmp    eax,0x44644cc3
  43e754:	mov    al,ds:0x35fbda9e
  43e759:	jbe    0x43e73e
  43e75b:	pop    es
  43e75c:	mov    ch,0x8f
  43e75e:	fld    DWORD PTR [esi]
  43e760:	inc    edx
  43e761:	mov    esp,ebx
  43e763:	add    esi,DWORD PTR [ebp+0xcdae568]
  43e769:	or     BYTE PTR [edi+edi*8-0x1eff3dc5],ah
  43e770:	cmp    al,0x74
  43e772:	push   edx
  43e773:	xchg   edi,eax
  43e774:	push   es
  43e775:	fucomip st,st(0)
  43e777:	cmp    eax,0x6af973e4
  43e77c:	ins    DWORD PTR es:[edi],dx
  43e77d:	mov    al,ds:0xff1c2983
  43e782:	test   DWORD PTR [edx+eax*8+0x67f54309],esi
  43e789:	lds    edx,FWORD PTR [eax+0x72]
  43e78c:	ins    BYTE PTR es:[edi],dx
  43e78d:	mov    eax,DWORD PTR [ebp+0x500a8aa1]
  43e793:	in     eax,0x49
  43e795:	jbe    0x43e765
  43e797:	push   0xfffffff2
  43e799:	xor    BYTE PTR ds:0x8bdc1daa,0x2a
	...
  43e7b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e7b5:	or     eax,eax
  43e7b7:	dec    edi
  43e7b8:	lea    ecx,[edx]
  43e7ba:	dec    ebx
  43e7bb:	lds    ebp,FWORD PTR [esi]
  43e7bd:	repz cmp al,0xf1
  43e7c0:	es cld 
  43e7c2:	adc    ebp,DWORD PTR [ecx+0x2a]
  43e7c5:	mov    edi,edi
  43e7c7:	and    DWORD PTR [ecx+ecx*4],ebp
  43e7ca:	and    BYTE PTR ds:0x14047549,0xba
  43e7d1:	(bad)  
  43e7d3:	loope  0x43e78c
  43e7d5:	lea    esi,[edi+eiz*8+0x3d]
  43e7d9:	xor    edi,DWORD PTR [ecx-0x5c]
  43e7dc:	iret   
  43e7dd:	test   DWORD PTR [edi-0x2e7e8716],edx
  43e7e3:	pusha  
  43e7e4:	in     eax,dx
  43e7e5:	outs   dx,BYTE PTR ds:[esi]
  43e7e6:	add    eax,0xe8db91ab
  43e7eb:	fcomp  QWORD PTR [edx+ecx*1]
  43e7ee:	inc    ebx
  43e7ef:	popa   
  43e7f0:	icebp  
  43e7f1:	retf   
  43e7f2:	lock out 0x34,al
  43e7f5:	lods   eax,DWORD PTR ds:[esi]
  43e7f6:	stc    
  43e7f7:	dec    esi
  43e7f8:	ret    
  43e7f9:	std    
  43e7fa:	or     al,0x0
  43e7fc:	addr16 dec edi
  43e7fe:	in     eax,dx
  43e7ff:	cmp    DWORD PTR [ecx],edx
  43e801:	xchg   ebx,eax
  43e802:	push   es
  43e803:	add    BYTE PTR [eax],0x82
  43e806:	idiv   bh
  43e808:	push   edi
  43e809:	aaa    
  43e80a:	cmc    
  43e80b:	push   edx
  43e80c:	es (bad) 
  43e80e:	cmc    
  43e80f:	adc    eax,0x3aa1c0
  43e814:	push   edi
  43e815:	inc    edi
  43e816:	fisttp QWORD PTR [ebx+0x0]
	...
  43e82c:	imul   edx,DWORD PTR [esi+0x21a4c47a],0xa8275b57
  43e836:	pop    esp
  43e837:	ret    
  43e838:	cmp    ebp,esi
  43e83a:	in     eax,0x83
  43e83c:	nop
  43e83d:	imul   ecx,DWORD PTR [edx-0x75],0x574f73f1
  43e844:	pop    es
  43e845:	add    eax,DWORD PTR ds:0xfb155a33
  43e84b:	push   ebp
  43e84c:	stos   BYTE PTR es:[edi],al
  43e84d:	cmp    al,0x4a
  43e84f:	(bad)  
  43e850:	cdq    
  43e851:	xchg   edi,eax
  43e852:	idiv   bh
  43e854:	dec    esp
  43e855:	mov    es,WORD PTR [edi+0x74f62475]
  43e85b:	in     al,0xd5
  43e85d:	sbb    ah,cl
  43e85f:	call   0x3d29ac
  43e864:	iret   
  43e865:	(bad)  
  43e866:	or     eax,0x2170c85
  43e86b:	pop    edi
  43e86c:	loop   0x43e8ce
  43e86e:	mov    ecx,0x82284e33
  43e873:	in     eax,0xc1
  43e875:	ror    BYTE PTR [esi+0x53],1
  43e878:	xor    al,0x28
  43e87a:	cmp    al,0x0
  43e87c:	sbb    al,0xf
  43e87e:	mov    ebp,0x88a38708
  43e883:	pop    ebp
  43e884:	shl    dh,0x54
  43e887:	loopne 0x43e83e
  43e889:	jecxz  0x43e8b9
  43e88b:	jb     0x43e854
  43e88d:	push   esi
  43e88e:	cmc    
  43e88f:	add    BYTE PTR [eax],0x0
	...
  43e8a2:	add    BYTE PTR [eax],al
  43e8a4:	out    dx,al
  43e8a5:	enter  0xff0b,0xe2
  43e8a9:	xor    al,0xf5
  43e8ab:	mov    BYTE PTR [eax-0x4c],bh
  43e8ae:	jne    0x43e904
  43e8b0:	int    0xec
  43e8b2:	push   cs
  43e8b3:	addr16 mov cl,0x64
  43e8b6:	std    
  43e8b7:	dec    DWORD PTR [edi+0x67]
  43e8ba:	xchg   edi,eax
  43e8bb:	(bad)  
  43e8bc:	mov    ebx,0xf6dae572
  43e8c1:	data16 add bl,0xb9
  43e8c5:	inc    ecx
  43e8c7:	sti    
  43e8c8:	cmp    BYTE PTR [edi-0x50194c68],ah
  43e8ce:	inc    esi
  43e8cf:	add    esi,DWORD PTR [ebp+0x7b36fd66]
  43e8d5:	jp     0x43e85b
  43e8d7:	clc    
  43e8d8:	mov    ch,0x66
  43e8da:	std    
  43e8db:	xchg   al,dh
  43e8dd:	push   edx
  43e8de:	(bad)  
  43e8df:	sbb    ebp,DWORD PTR [esi+0x597efc36]
  43e8e5:	addr16 std 
  43e8e7:	dec    DWORD PTR [esi+0x55]
  43e8ea:	jp     0x43e934
  43e8ec:	mov    ch,0xed
  43e8ee:	stos   BYTE PTR es:[edi],al
  43e8ef:	fstp   TBYTE PTR [esi]
  43e8f1:	mov    esp,0x1ae0860c
  43e8f6:	js     0x43e944
  43e8f8:	inc    ebp
  43e8f9:	inc    dl
  43e8fb:	repz xor al,0x25
  43e8fe:	std    
  43e8ff:	add    esi,DWORD PTR [ebp-0x4a2f7f9a]
  43e905:	dec    ebp
  43e906:	cmp    ebp,DWORD PTR [ebp+0x0]
	...
  43e919:	add    BYTE PTR [eax],al
  43e91b:	add    BYTE PTR [ebx+0x5370179],dh
  43e921:	jno    0x43e918
  43e923:	mov    BYTE PTR [eax-0xe],bh
  43e926:	jbe    0x43e99c
  43e928:	add    eax,0x2c054e90
  43e92d:	fisttp DWORD PTR [ebx+0x7a]
  43e930:	imul   edi,DWORD PTR [edi+0x5e],0xa405128e
  43e937:	and    esi,DWORD PTR [ebx]
  43e939:	jge    0x43e949
  43e93b:	xchg   edi,eax
  43e93c:	into   
  43e93d:	add    al,0x2e
  43e93f:	call   0x3e42689d
  43e944:	stos   DWORD PTR es:[edi],eax
  43e945:	dec    eax
  43e946:	fs inc ebx
  43e948:	pop    eax
  43e949:	sahf   
  43e94a:	call   0xb507:0xe37735fb
  43e951:	(bad)  
  43e952:	cdq    
  43e953:	add    al,0x6a
  43e955:	mov    esp,ebx
  43e957:	add    esi,DWORD PTR [ebp+0x7cd8e564]
  43e95d:	add    al,0xa4
  43e95f:	push   DWORD PTR [ebx]
  43e961:	ret    0x99df
  43e964:	xchg   edx,eax
  43e965:	fst    DWORD PTR [ecx+0x1b67e5b3]
  43e96b:	enter  0x7082,0x66
  43e96f:	inc    eax
  43e970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e971:	or     ah,BYTE PTR [edi+0x3404e591]
  43e977:	or     BYTE PTR [ebx],dh
  43e979:	retf   0xb6f3
  43e97c:	lock fild QWORD PTR [esi-0x3f]
	...
  43e994:	mov    dl,0x4
  43e996:	pop    ds
  43e997:	call   0xb527c8d7
  43e99c:	dec    edi
  43e99d:	pop    ebp
  43e99e:	inc    ax
  43e9a0:	mov    dl,0xb4
  43e9a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e9a3:	xchg   ecx,eax
  43e9a4:	loope  0x43e9a8
  43e9a6:	or     DWORD PTR es:[ecx],edi
  43e9a9:	dec    edi
  43e9aa:	or     eax,edx
  43e9ac:	xor    eax,edx
  43e9ae:	cmp    DWORD PTR [edx+eiz*4-0x5e4c104d],0xffffff9a
  43e9b6:	add    BYTE PTR [ecx+0x3d],ch
  43e9b9:	mov    bh,bh
  43e9bb:	and    DWORD PTR [esi+eax*4],esp
  43e9be:	and    ch,0xfe
  43e9c1:	jno    0x43e9c6
  43e9c3:	aam    0xb7
  43e9c5:	(bad)  
  43e9c7:	loope  0x43e984
  43e9c9:	mov    WORD PTR [edi+eiz*8+0x35],?
  43e9cd:	xor    BYTE PTR [ecx+0x24],bh
  43e9d0:	ret    0x9785
  43e9d3:	jmp    0x6bf4:0x60d18174
  43e9da:	add    eax,0xe8db482b
  43e9df:	pushf  
  43e9e0:	ror    BYTE PTR [eax],1
  43e9e2:	inc    ebx
  43e9e3:	and    eax,ebp
  43e9e5:	retf   0xe6f0
  43e9e8:	cmp    BYTE PTR [ebp-0x1e41f107],dh
  43e9ee:	or     al,0x72
  43e9f0:	pop    esp
  43e9f1:	arpl   WORD PTR [edi],si
  43e9f3:	lods   al,BYTE PTR ds:[esi]
  43e9f4:	ret    0x7e99
  43e9f7:	aad    0x0
	...
  43ea09:	add    BYTE PTR [eax],al
  43ea0b:	add    BYTE PTR [edi+0x3c62f969],bh
  43ea11:	fwait
  43ea12:	test   DWORD PTR [ebp*4-0x50169924],edi
  43ea19:	sbb    DWORD PTR [esi+esi*4],0x7b
  43ea1d:	outs   dx,DWORD PTR ds:[esi]
  43ea1e:	xchg   BYTE PTR [edx*4-0x1c2eb4eb],ah
  43ea25:	pop    esi
  43ea26:	jge    0x43e9cd
  43ea28:	pop    esi
  43ea29:	xchg   esi,eax
  43ea2a:	iret   
  43ea2b:	out    0xd2,al
  43ea2d:	sbb    edi,edx
  43ea2f:	scas   al,BYTE PTR es:[edi]
  43ea30:	mov    edi,0x20f17315
  43ea35:	outs   dx,DWORD PTR ds:[esi]
  43ea36:	push   eax
  43ea37:	cmp    DWORD PTR [esi],eax
  43ea39:	shr    eax,0x65
  43ea3c:	add    ebp,DWORD PTR [edi-0x7]
  43ea3f:	push   0xffffffea
  43ea41:	add    BYTE PTR [ebx-0x7b95b400],0x74
  43ea48:	call   0x4997:0xe18df699
  43ea4f:	mov    edx,DWORD PTR [ebx-0x12]
  43ea52:	(bad)  
  43ea53:	call   0x3a8728
  43ea58:	(bad)  
  43ea59:	scas   al,BYTE PTR es:[edi]
  43ea5a:	std    
  43ea5b:	test   BYTE PTR [ecx+ebp*2-0x6685a37c],bl
  43ea62:	test   BYTE PTR [ebp-0x74af68d7],0x93
  43ea69:	in     eax,dx
  43ea6a:	(bad)  
  43ea6b:	call   0x3a87a8
	...
  43ea84:	pop    edi
  43ea85:	scas   al,BYTE PTR es:[edi]
  43ea86:	std    
  43ea87:	test   BYTE PTR [ecx+ebp*2-0x6665bb7c],cl
  43ea8e:	idiv   BYTE PTR [ecx]
  43ea90:	popa   
  43ea91:	xchg   esi,eax
  43ea92:	push   es
  43ea93:	test   DWORD PTR [edi+0x29fff698],eax
  43ea99:	and    ch,dl
  43ea9b:	push   edx
  43ea9c:	daa    
  43ea9d:	rol    BYTE PTR [edx-0xd824b32],cl
  43eaa3:	call   FWORD PTR [ebx+0x1104bd14]
  43eaa9:	aam    0x6
  43eaab:	test   DWORD PTR [edi-0x26000967],ebp
  43eab1:	cs cmc 
  43eab3:	push   eax
  43eab4:	xlat   BYTE PTR ds:[ebx]
  43eab5:	rol    BYTE PTR [edx-0xcfb7b32],1
  43eabb:	call   FWORD PTR [ebx]
  43eabd:	adc    al,0xbd
  43eabf:	add    al,0xe1
  43eac1:	rol    DWORD PTR [esi],cl
  43eac3:	test   DWORD PTR [edi-0x68],edx
  43eac6:	idiv   bh
  43eac8:	iret   
  43eac9:	push   ss
  43eaca:	cmc    
  43eacb:	add    DWORD PTR [ebx-0x13],ecx
  43eace:	add    dh,bh
  43ead0:	mov    ch,0x5
  43ead2:	pop    es
  43ead3:	xchg   BYTE PTR [eax+0x14c7b18],cl
  43ead9:	mov    BYTE PTR [ebx+0x1c868250],dh
  43eadf:	stc    
  43eae0:	iret   
  43eae1:	js     0x43eae0
  43eae3:	jle    0x43ead6
  43eae5:	inc    ebx
  43eae6:	jp     0x43eaa7
	...
  43eafc:	mov    dl,0xfb
  43eafe:	push   ds
  43eaff:	cld    
  43eb00:	cli    
  43eb01:	int3   
  43eb02:	jno    0x43eb58
  43eb04:	icebp  
  43eb05:	sub    DWORD PTR [edx+eax*8+0x3e],edi
  43eb09:	mov    ds,WORD PTR [ecx+esi*1]
  43eb0c:	(bad)  
  43eb0e:	pop    es
  43eb0f:	jle    0x43eb02
  43eb11:	jae    0x43eb8d
  43eb13:	mov    edi,0xfc36fbc2
  43eb18:	retf   0x7dbc
  43eb1b:	jl     0x43eade
  43eb1d:	daa    
  43eb1e:	mov    esp,0x7a7db301
  43eb23:	shl    BYTE PTR [eax-0xf79f87a],0xba
  43eb2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43eb2b:	pop    ecx
  43eb2c:	mov    ch,BYTE PTR cs:[ebx+0x440c9086]
  43eb33:	retf   
  43eb34:	or     DWORD PTR [esp+edi*2],0xf50c3eeb
  43eb3b:	dec    esi
  43eb3c:	jmp    0x43eb1f
  43eb3e:	mov    cl,BYTE PTR [ebx]
  43eb40:	loop   0x43eb23
  43eb42:	aas    
  43eb43:	xchg   BYTE PTR [esi+esi*2+0x51],ch
  43eb47:	ret    0xf1c5
  43eb4a:	sub    al,al
  43eb4c:	dec    ebp
  43eb4d:	inc    edi
  43eb4e:	jbe    0x43ebcc
  43eb50:	lods   eax,DWORD PTR ds:[esi]
  43eb51:	stc    
  43eb52:	and    al,0x1a
  43eb54:	cmp    al,0x81
  43eb56:	clc    
  43eb57:	xchg   BYTE PTR [ebp+0x4e],ch
  43eb5a:	push   ecx
  43eb5b:	fidivr DWORD PTR [eax+0x20668f]
	...
  43eb71:	add    BYTE PTR [eax],al
  43eb73:	add    BYTE PTR [edi-0x3d728f24],ch
  43eb79:	sbb    BYTE PTR [esp+edi*8],dl
  43eb7c:	mov    edi,0xa3faa23b
  43eb81:	je     0x43eb85
  43eb83:	xor    edi,0x2b
  43eb86:	loop   0x43eb8b
  43eb88:	mov    ch,0x4e
  43eb8a:	jg     0x43eb86
  43eb8c:	cmp    eax,0xf57cd3ea
  43eb91:	sbb    BYTE PTR [ecx-0x8],ah
  43eb94:	dec    esi
  43eb95:	push   0x8d1284ee
  43eb9a:	pusha  
  43eb9b:	lds    esi,FWORD PTR [edx+0xef82818]
  43eba1:	pusha  
  43eba2:	in     al,dx
  43eba3:	inc    edx
  43eba4:	iret   
  43eba5:	cwde   
  43eba6:	call   0xb119:0x2892db42
  43ebad:	adc    BYTE PTR [edi-0x38],al
  43ebb0:	inc    ebx
  43ebb1:	outs   dx,BYTE PTR ds:[esi]
  43ebb2:	add    al,BYTE PTR ds:0xc570cdec
  43ebb8:	mov    dh,0x16
  43ebba:	(bad)  [ecx+ecx*1+0x6e371b51]
  43ebc1:	pop    ebx
  43ebc2:	xor    esi,DWORD PTR [edi]
  43ebc4:	outs   dx,BYTE PTR ds:[esi]
  43ebc5:	pop    ebx
  43ebc6:	sub    esi,DWORD PTR [edi]
  43ebc8:	jle    0x43ec25
  43ebca:	pushf  
  43ebcb:	jl     0x43eb6b
  43ebcd:	adc    bl,bh
  43ebcf:	mov    ?,ebx
  43ebd1:	lds    edi,FWORD PTR [edx]
  43ebd3:	jnp    0x43eb5f
  43ebd5:	mov    al,ds:0xd3da
	...
  43ebea:	add    BYTE PTR [eax],al
  43ebec:	mov    ebp,DWORD PTR [eax+0x1ab091da]
  43ebf2:	and    ch,BYTE PTR [edx-0x1]
  43ebf5:	int    0x1e
  43ebf7:	jnp    0x43ec4a
  43ebf9:	retf   0x7ba6
  43ebfc:	hlt    
  43ebfd:	mov    DWORD PTR [eax],0x85d408ea
  43ec03:	pop    ds
  43ec04:	or     eax,0xbe354a9d
  43ec09:	mov    esi,0xdc683630
  43ec0e:	dec    esi
  43ec0f:	aas    
  43ec10:	leave  
  43ec11:	xchg   edx,eax
  43ec12:	ss jmp 0xde08d8ce
  43ec18:	xor    eax,0x37e4742c
  43ec1d:	push   ebp
  43ec1e:	stc    
  43ec1f:	sub    cl,0x1a
  43ec22:	inc    ebx
  43ec23:	jne    0x43ec6e
  43ec25:	adc    eax,0x567e1942
  43ec2a:	call   0xf9adadd8
  43ec2f:	push   0x75
  43ec31:	nop
  43ec32:	sub    DWORD PTR [ecx],0x45
  43ec35:	xchg   ebx,eax
  43ec36:	jge    0x43ec6a
  43ec38:	mov    dl,0x75
  43ec3a:	or     ch,BYTE PTR [eax+0x3c]
  43ec3d:	pusha  
  43ec3e:	push   eax
  43ec3f:	mov    ds:0xe46d6db1,al
  43ec44:	outs   dx,DWORD PTR ds:[esi]
  43ec45:	pop    es
  43ec46:	stc    
  43ec47:	es mov dl,0x15
  43ec4a:	inc    edx
  43ec4b:	fldcw  WORD PTR ds:0xb88cdc
	...
  43ec61:	add    BYTE PTR [eax],al
  43ec63:	add    BYTE PTR [edi],ch
  43ec65:	pop    ecx
  43ec66:	call   0xf9a99dbc
  43ec6b:	push   0xfffffff5
  43ec6d:	mov    es,WORD PTR [ebx+0x7e6a2529]
  43ec73:	and    dh,BYTE PTR [edx-0x246bdef]
  43ec79:	ret    
  43ec7a:	nop
  43ec7b:	cmp    edi,esi
  43ec7d:	pop    eax
  43ec7e:	call   0xf9a9ab0c
  43ec83:	push   0xffffffaa
  43ec85:	mov    es,WORD PTR [ebx+0x7e6a32a9]
  43ec8b:	add    BYTE PTR [edi],ah
  43ec8d:	xchg   edx,eax
  43ec8e:	mov    WORD PTR [ebp-0x18],es
  43ec91:	push   ds
  43ec92:	add    BYTE PTR [esi+0x4c],0xe6
  43ec96:	(bad)  
  43ec97:	call   0x3a8370
  43ec9c:	iret   
  43ec9d:	stos   BYTE PTR es:[edi],al
  43ec9e:	std    
  43ec9f:	test   BYTE PTR [ebx+ebx*1-0x6],bl
  43eca3:	adc    BYTE PTR [edi-0x6e],0x82
  43eca7:	inc    esi
  43eca8:	cld    
  43eca9:	out    0x4c,eax
  43ecab:	cwde   
  43ecac:	mov    ebp,0xce8c7e6
  43ecb1:	xchg   edi,eax
  43ecb2:	idiv   bh
  43ecb4:	lahf   
  43ecb5:	stos   BYTE PTR es:[edi],al
  43ecb6:	std    
  43ecb7:	test   BYTE PTR [ebx+ebx*1-0x6],cl
  43ecbb:	add    bh,0x91
  43ecbe:	add    BYTE PTR [esi-0x34],0xe8
  43ecc2:	push   esp
  43ecc3:	pushf  
  43ecc4:	cs out 0xc7,al
  43ecc7:	call   0x43eccc
	...
  43ecdc:	inc    esp
  43ecdd:	xchg   edi,eax
  43ecde:	idiv   bh
  43ece0:	dec    edi
  43ece1:	stos   BYTE PTR es:[edi],al
  43ece2:	std    
  43ece3:	test   BYTE PTR [edx+ebx*1-0x6e687d06],bl
  43ecea:	add    BYTE PTR [ebp+0x70],0x39
  43ecee:	dec    ecx
  43ecef:	(bad)  
  43ecf0:	stc    
  43ecf1:	mov    ds:0x91d291e1,al
  43ecf6:	test   BYTE PTR [ebx+0x4d8c3e5a],0xec
  43ecfd:	and    eax,DWORD PTR [edx-0xe223b32]
  43ed03:	call   DWORD PTR [ebx+0x190cbd10]
  43ed09:	iret   
  43ed0a:	ins    DWORD PTR es:[edi],dx
  43ed0b:	add    ecx,DWORD PTR [edi]
  43ed0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ed0e:	test   BYTE PTR [ebx+0x558c43ca],0x90
  43ed15:	sbb    eax,0x50b5ce82
  43ed1a:	xchg   edi,esi
  43ed1c:	bound  ebx,QWORD PTR [ecx+0x7f]
  43ed1f:	ret    
  43ed20:	mov    cl,0xfb
  43ed22:	inc    esp
  43ed23:	jae    0x43ecdb
  43ed25:	cmc    
  43ed26:	aaa    
  43ed27:	cli    
  43ed28:	ds mov ebx,0x3cf08c08
  43ed2e:	jne    0x43ed74
  43ed30:	adc    ebp,ebx
  43ed32:	mov    edx,0x32dd842f
  43ed37:	mov    BYTE PTR [eax+0x1d551cd0],ch
  43ed3d:	sbb    DWORD PTR [ebx],eax
  43ed3f:	jle    0x43ed41
	...
  43ed51:	add    BYTE PTR [eax],al
  43ed53:	add    cl,dh
  43ed55:	jnp    0x43edd1
  43ed57:	mov    edi,0xc6807589
  43ed5c:	or     ch,ch
  43ed5e:	test   eax,0x50b330fb
  43ed63:	dec    edi
  43ed64:	cs cmp cl,ch
  43ed67:	xchg   BYTE PTR [ebx],al
  43ed69:	fild   QWORD PTR [ecx+0x4d433cab]
  43ed6f:	out    0xfc,eax
  43ed71:	rol    BYTE PTR [ebx],0xfa
  43ed74:	ss mov esp,0x23f58500
  43ed7a:	add    BYTE PTR [edi-0x2],bh
  43ed7d:	mov    al,ds:0xcb854177
  43ed82:	mov    cl,0xb7
  43ed84:	fnsave fs:[edx]
  43ed87:	out    0x74,eax
  43ed89:	add    BYTE PTR [ebx],0xfa
  43ed8c:	ss mov ebx,0x3758500
  43ed92:	add    BYTE PTR [edi+0x6e],bh
  43ed95:	xchg   edx,eax
  43ed96:	ja     0x43edd9
  43ed98:	(bad)  
  43ed9b:	mov    ebx,0xe732ede7
  43eda0:	dec    esp
  43eda1:	bound  eax,QWORD PTR [edx+edi*8]
  43eda4:	ss nop
  43eda6:	stos   DWORD PTR es:[edi],eax
  43eda7:	(bad)  
  43eda8:	cmp    DWORD PTR [eax+0x53],edx
  43edab:	add    edx,ebp
  43edad:	push   esp
  43edae:	shl    BYTE PTR [esi-0x7],cl
  43edb1:	dec    edi
  43edb2:	aaa    
  43edb3:	jns    0x43eda9
  43edb5:	lahf   
  43edb6:	outs   dx,BYTE PTR ds:[esi]
  43edb7:	xor    eax,0x0
	...
  43edcc:	pop    edx
  43edcd:	push   DWORD PTR [ecx-0x54f2b0fc]
  43edd3:	(bad)  
  43edd4:	cmp    DWORD PTR [eax+0x33],edx
  43edd7:	add    DWORD PTR [edx+0x7478a254],edi
  43eddd:	lahf   
  43edde:	ins    BYTE PTR es:[edi],dx
  43eddf:	mov    dh,0xf6
  43ede1:	mov    esi,0xe71a355e
  43ede6:	xchg   edx,eax
  43ede7:	add    al,0x1f
  43ede9:	or     eax,0x5039ffab
  43edee:	repz add BYTE PTR [edx+0x74787254],cl
  43edf5:	lahf   
  43edf6:	pop    esp
  43edf7:	scas   al,BYTE PTR es:[edi]
  43edf8:	repnz mov ebp,0x4eda356e
  43edfe:	push   edx
  43edff:	add    al,0xef
  43ee01:	or     al,0x2b
  43ee03:	(bad)  
  43ee04:	cmp    DWORD PTR [eax-0x2d],edx
  43ee07:	add    BYTE PTR [edx+0x54],bl
  43ee0a:	inc    edx
  43ee0b:	jbe    0x43ee86
  43ee0d:	imul   edx,DWORD PTR [edi+0x5e9f7478],0x35
  43ee14:	fidiv  DWORD PTR [esi]
  43ee16:	xor    al,BYTE PTR [edi+edi*4]
  43ee19:	or     al,0x2b
  43ee1b:	(bad)  
  43ee1c:	cmp    DWORD PTR [edi-0x6d],ecx
  43ee1f:	add    BYTE PTR [edx],ch
  43ee21:	push   ebp
  43ee22:	adc    bh,BYTE PTR [eax-0xf]
  43ee25:	imul   esp,DWORD PTR [eax-0x7a],0xffffff92
  43ee29:	adc    al,0x84
  43ee2b:	dec    edi
  43ee2c:	cmp    eax,0x7a03da
	...
  43ee41:	add    BYTE PTR [eax],al
  43ee43:	add    BYTE PTR [ecx],cl
  43ee45:	ins    BYTE PTR es:[edi],dx
  43ee46:	add    BYTE PTR [ebp+ecx*8-0x6b],ch
  43ee4a:	sub    DWORD PTR [esi+esi*4],0xffffff8f
  43ee4e:	add    BYTE PTR [edx-0x4],dh
  43ee51:	jg     0x43edd6
  43ee53:	test   eax,0x2485a8ed
  43ee58:	mov    ebp,0xa95af7a2
  43ee5d:	pop    ss
  43ee5e:	sbb    al,0xee
  43ee60:	inc    ecx
  43ee61:	in     al,0xfc
  43ee63:	shl    BYTE PTR [edx+0x2cb54b10],cl
  43ee69:	data16 je 0x43ee74
  43ee6c:	sub    al,0x50
  43ee6e:	je     0x43ee74
  43ee70:	inc    edx
  43ee71:	mov    esp,0x9f8772fc
  43ee76:	dec    esi
  43ee77:	bound  edi,QWORD PTR [edi-0x75]
  43ee7a:	push   eax
  43ee7b:	bound  ebp,QWORD PTR [edi-0x6d]
  43ee7e:	dec    edi
  43ee7f:	sbb    esi,DWORD PTR [esi-0x5e5a82c2]
  43ee85:	mov    ds:0x6a7d7543,al
  43ee8a:	jle    0x43ee2e
  43ee8c:	mov    dh,0xb1
  43ee8e:	jnp    0x43eef5
  43ee90:	inc    eax
  43ee91:	in     al,0xfc
  43ee93:	fs or  bl,ah
  43ee96:	jae    0x43ef02
  43ee98:	xor    al,0x87
  43ee9a:	add    ch,dl
  43ee9c:	adc    al,BYTE PTR [bp+di-0x7f]
  43eea0:	inc    edx
  43eea1:	in     al,0x1c
  43eea3:	add    bh,dh
  43eea5:	stc    
  43eea6:	(bad)  
  43eea7:	popa   
	...
  43eebc:	shr    ecx,0x7b
  43eebf:	sub    eax,0x721fe3b1
  43eec4:	cld    
  43eec5:	arpl   WORD PTR [ebp-0x121951],ax
  43eecb:	outs   dx,DWORD PTR ds:[esi]
  43eecc:	or     eax,eax
  43eece:	dec    edi
  43eecf:	mov    bh,0x8e
  43eed1:	push   edx
  43eed2:	xor    DWORD PTR [eax],eax
  43eed4:	pushf  
  43eed5:	xchg   ebx,eax
  43eed6:	jnp    0x43ee9c
  43eed8:	pusha  
  43eed9:	sbb    al,al
  43eedb:	jne    0x43ee6e
  43eedd:	adc    al,0x3d
  43eedf:	cld    
  43eee0:	mov    bh,0x8e
  43eee2:	jnp    0x43eeaf
  43eee4:	pop    ebx
  43eee5:	push   cs
  43eee6:	jne    0x43eea0
  43eee8:	pop    esp
  43eee9:	jmp    0xb04d7210
  43eeee:	add    BYTE PTR [esi-0x50],dh
  43eef1:	push   ss
  43eef2:	dec    ebp
  43eef3:	sbb    bh,al
  43eef5:	fdiv   DWORD PTR [eax]
  43eef7:	mov    ebx,DWORD PTR [edx-0x28adb051]
  43eefd:	enter  0x5004,0x9d
  43ef01:	xchg   edx,eax
  43ef02:	leave  
  43ef03:	and    DWORD PTR [eax-0x7d],0x2b
  43ef07:	leave  
  43ef08:	pop    ss
  43ef09:	pop    edx
  43ef0a:	ins    DWORD PTR es:[edi],dx
  43ef0b:	push   es
  43ef0c:	call   DWORD PTR [edx+0x33]
  43ef0f:	enter  0x8ec0,0x7b
  43ef13:	retf   
  43ef14:	cmp    edx,DWORD PTR [esi]
  43ef16:	cmp    eax,0x235a87b8
  43ef1b:	iret   
  43ef1c:	or     eax,0xebfcc0
	...
  43ef31:	add    BYTE PTR [eax],al
  43ef33:	add    BYTE PTR [esi+edx*1],dl
  43ef36:	dec    ebp
  43ef37:	mov    eax,0x8bfcc7dd
  43ef3c:	sahf   
  43ef3d:	pop    ss
  43ef3e:	ror    DWORD PTR [edi],cl
  43ef40:	push   ecx
  43ef41:	push   ebx
  43ef42:	stc    
  43ef43:	dec    esp
  43ef45:	pop    ss
  43ef46:	ror    BYTE PTR [edi],0x60
  43ef49:	mov    bh,0xf9
  43ef4b:	(bad)  
  43ef4c:	fdiv   QWORD PTR [ebx-0x10aa03c3]
  43ef52:	hlt    
  43ef53:	je     0x43ef06
  43ef55:	push   ss
  43ef56:	cmp    eax,0xf9f435fc
  43ef5b:	push   ecx
  43ef5c:	ins    BYTE PTR es:[edi],dx
  43ef5d:	adc    eax,0x28b5303e
  43ef62:	push   edi
  43ef63:	call   0x412d54
  43ef68:	ss mov ah,0x11
  43ef6b:	jge    0x43efe7
  43ef6d:	gs add eax,0x438c7408
  43ef74:	jns    0x43ef07
  43ef76:	push   es
  43ef77:	test   DWORD PTR [edx+0x7a7d0341],edx
  43ef7d:	inc    ebp
  43ef7e:	cmp    DWORD PTR [ebx+0x1d],0x78
  43ef82:	adc    BYTE PTR [edx-0x287aa],al
  43ef88:	ds mov dh,0x34
  43ef8b:	mov    edi,eax
  43ef8d:	sub    BYTE PTR [ebp-0x7b],cl
  43ef90:	jae    0x43efe2
  43ef92:	or     esi,edx
  43ef94:	cmp    dh,BYTE PTR ds:0xc483
	...
  43efaa:	add    BYTE PTR [eax],al
  43efac:	mov    ecx,0xb774c4f3
  43efb1:	loope  0x43ef92
  43efb3:	test   DWORD PTR [ebx+0x48],edi
  43efb6:	mov    dl,BYTE PTR [ebx+0x1d]
  43efb9:	stos   BYTE PTR es:[edi],al
  43efba:	mov    ecx,edx
  43efbc:	sbb    eax,0xaf9f1e4
  43efc1:	stc    
  43efc2:	enter  0x3804,0x38
  43efc6:	js     0x43efc6
  43efc8:	das    
  43efc9:	adc    eax,0x76e57b83
  43efce:	jb     0x43f04a
  43efd0:	lods   al,BYTE PTR ds:[esi]
  43efd1:	inc    ebx
  43efd2:	test   eax,0x79f9c073
  43efd7:	mov    al,0xb5
  43efd9:	cmp    ebx,DWORD PTR [eax]
  43efdb:	mov    edi,DWORD PTR [eax-0x4]
  43efde:	push   ebx
  43efdf:	test   DWORD PTR [ebx+0x68],esi
  43efe2:	mov    edx,cs
  43efe4:	int    0xdb
  43efe6:	idiv   cl
  43efe8:	mov    edx,0x3804c8f8
  43efed:	nop
  43efee:	daa    
  43efef:	js     0x43ef9c
  43eff1:	sbb    bh,BYTE PTR [edx]
  43eff3:	cmp    ebx,DWORD PTR [esi]
  43eff5:	sub    al,0x9c
  43eff7:	push   ds
  43eff8:	sbb    bl,ah
  43effa:	aas    
  43effb:	add    al,0x6
  43effd:	jge    0x43f06d
  43efff:	dec    edx
  43f000:	lds    edx,FWORD PTR [edx]
  43f002:	lods   al,BYTE PTR ds:[esi]
  43f003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f004:	repnz sbb BYTE PTR [ecx],ah
  43f007:	in     al,dx
  43f008:	and    ebx,DWORD PTR [esi-0x16]
  43f00b:	add    bl,dh
  43f00d:	dec    ebx
  43f00e:	jmp    0x43ef96
	...
  43f024:	jne    0x43f002
  43f026:	in     eax,0x8c
  43f028:	jl     0x43efd1
  43f02a:	push   esp
  43f02b:	call   0x7eaa7316
  43f030:	pop    ebp
  43f031:	nop
  43f032:	cmp    al,0x19
  43f034:	xor    dh,cl
  43f036:	test   DWORD PTR [esi-0x72ea941a],0xfa2f786f
  43f040:	sub    al,0x65
  43f042:	data16 (bad) 
  43f044:	mov    cl,0xa
  43f046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f047:	ja     0x43f06c
  43f049:	sbb    dh,BYTE PTR [edx+0x144f9e3a]
  43f04f:	xor    bh,BYTE PTR [esi]
  43f051:	retf   
  43f052:	xchg   ebx,eax
  43f053:	push   ebx
  43f054:	xor    dh,cl
  43f056:	mov    bh,0x8c
  43f058:	out    dx,eax
  43f059:	ja     0x43effe
  43f05b:	idiv   ah
  43f05d:	fs data16 (bad) 
  43f060:	mov    ecx,0x7e8cfc78
  43f065:	outs   dx,BYTE PTR ds:[si]
  43f067:	pop    ecx
  43f068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f069:	stc    
  43f06a:	call   0xb602a5dc
  43f06f:	pop    ecx
  43f070:	fucomp st(2)
  43f072:	stc    
  43f073:	add    esi,DWORD PTR [ebp+0x36172310]
  43f079:	push   eax
  43f07a:	add    BYTE PTR [ebp+0x62d90ab0],bh
  43f080:	sti    
  43f081:	pop    ebx
  43f082:	test   DWORD PTR [esi+ebp*4+0xf14418],esi
	...
  43f099:	add    BYTE PTR [eax],al
  43f09b:	add    BYTE PTR [edx-0x26e2bcf4],bh
  43f0a1:	sar    BYTE PTR [eax-0x677c722],1
  43f0a7:	push   es
  43f0a8:	mov    ch,0xb
  43f0aa:	aad    0xee
  43f0ac:	cmp    eax,DWORD PTR [ebx]
  43f0ae:	add    cl,ch
  43f0b0:	mov    dh,0xe2
  43f0b2:	jnp    0x43f07d
  43f0b4:	mov    dh,0xdb
  43f0b6:	outs   dx,DWORD PTR ds:[esi]
  43f0b7:	jb     0x43f0ed
  43f0b9:	and    eax,DWORD PTR [ebp-0x76572dc]
  43f0bf:	pop    edx
  43f0c0:	lds    ecx,FWORD PTR [edx]
  43f0c2:	push   ebx
  43f0c3:	or     DWORD PTR [ebx-0x75],edi
  43f0c6:	adc    ecx,ebp
  43f0c8:	cmp    eax,ebp
  43f0ca:	hlt    
  43f0cb:	shl    BYTE PTR [esi+0x36bd430c],cl
  43f0d1:	call   0x83eedad2
  43f0d6:	test   DWORD PTR [esi*4-0x7b1799f9],ebp
  43f0dd:	mov    edi,0xbfe12f85
  43f0e2:	push   edx
  43f0e3:	cmp    DWORD PTR [edx+0x37e900a1],0xf964144b
  43f0ed:	(bad)  
  43f0ef:	imul   ebp,esi,0x6d6e8365
  43f0f5:	mov    ecx,0x8f92e47d
  43f0fa:	jb     0x43f10d
  43f0fc:	cs call 0x4453f6
	...
  43f112:	add    BYTE PTR [eax],al
  43f114:	test   BYTE PTR [edi+0xa86b785],ch
  43f11a:	inc    edx
  43f11b:	add    al,dl
  43f11d:	mov    esp,0x8c128b49
  43f122:	dec    edx
  43f123:	push   eax
  43f124:	cmp    DWORD PTR [edx],0x7b
  43f127:	les    ecx,FWORD PTR [esi+eiz*4-0x3d5f8b41]
  43f12e:	jnp    0x43f0fb
  43f130:	ret    
  43f131:	rol    DWORD PTR [ebx-0x22e9983d],0x5d
  43f138:	fistp  WORD PTR [eax]
  43f13a:	shl    DWORD PTR [ebp+0x79],cl
  43f13d:	push   cs
  43f13e:	jne    0x43f148
  43f140:	mov    ebx,ds
  43f142:	add    eax,0xb197018b
  43f147:	push   ss
  43f148:	pop    esp
  43f149:	pop    DWORD PTR [eax]
  43f14b:	lea    ecx,[ecx]
  43f14d:	add    bl,ch
  43f14f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f150:	out    0xd7,eax
  43f152:	or     al,0x85
  43f154:	or     al,0xdb
  43f156:	add    ecx,DWORD PTR [ebx+0x4d837789]
  43f15c:	fs adc al,0x10
  43f15f:	mov    DWORD PTR [edi+edx*4+0x4dd75e57],eax
  43f166:	push   ebx
  43f167:	mov    edi,ecx
  43f169:	out    dx,eax
  43f16a:	mov    ebx,0xcc5360cc
  43f16f:	int3   
  43f170:	push   eax
  43f171:	push   ebx
  43f172:	int3   
  43f173:	int3   
  43f174:	fst    DWORD PTR [esi]
  43f176:	in     al,dx
  43f177:	mov    eax,DWORD PTR [eax]
	...
  43f189:	add    BYTE PTR [eax],al
  43f18b:	add    cl,bl
  43f18d:	mov    bh,0x83
  43f18f:	dec    ebp
  43f190:	cld    
  43f191:	adc    eax,0x169c1c4d
  43f196:	cmp    eax,0x45169d18
  43f19b:	adc    al,0xce
  43f19d:	push   ss
  43f19e:	dec    ebp
  43f19f:	adc    BYTE PTR [esi+edx*1],ch
  43f1a2:	cmp    eax,0x62c11d0c
  43f1a7:	add    BYTE PTR [ebp-0x42bc79d8],dh
  43f1ad:	shl    BYTE PTR [edx],1
  43f1af:	cmc    
  43f1b0:	retf   0x7ec9
  43f1b3:	les    edx,FWORD PTR [ebp-0x4adf40fd]
  43f1b9:	add    eax,DWORD PTR [esi+0x78ee0bec]
  43f1bf:	or     BYTE PTR [eax],dh
  43f1c1:	cmp    BYTE PTR [eax+0x8],0x30
  43f1c5:	sub    dl,BYTE PTR [edi+0x1b6f85a]
  43f1cb:	add    BYTE PTR [esi],bh
  43f1cd:	sub    dh,BYTE PTR [ebp-0x7b]
  43f1d0:	sti    
  43f1d1:	or     al,0x67
  43f1d3:	add    BYTE PTR [edi],cl
  43f1d5:	jns    0x43f23e
  43f1d7:	add    BYTE PTR [edi],cl
  43f1d9:	jns    0x43f242
  43f1db:	add    BYTE PTR [edx+ebp*1],bh
  43f1de:	push   ebp
  43f1df:	data16 mov ch,0xdb
  43f1e2:	xchg   edx,eax
  43f1e3:	fdiv   DWORD PTR [ebp+0x284dfd78]
  43f1e9:	repnz test BYTE PTR [eax],al
  43f1ec:	mov    ch,0x78
  43f1ee:	dec    ebp
  43f1ef:	test   DWORD PTR [eax],eax
	...
  43f201:	add    BYTE PTR [eax],al
  43f203:	add    BYTE PTR [ebx-0x21],dh
  43f206:	dec    edx
  43f207:	pop    esp
  43f208:	jp     0x43f1b4
  43f20a:	push   esp
  43f20b:	add    BYTE PTR [ebp+0x7bc0fd78],dh
  43f211:	jl     0x43f217
  43f213:	add    BYTE PTR [ebp+0x1fcee578],dh
  43f219:	add    ebx,edi
  43f21b:	test   ebp,ebp
  43f21d:	inc    esp
  43f21e:	mov    ebp,0x8257f97d
  43f223:	(bad)  
  43f224:	mov    edx,0x2c97c4c4
  43f229:	stos   BYTE PTR es:[edi],al
  43f22a:	xchg   DWORD PTR fs:[ebx-0x6c],esp
  43f22e:	xchg   DWORD PTR [edi+0x4be9393],edi
  43f234:	mov    ch,0x8f
  43f236:	xor    edx,eax
  43f238:	icebp  
  43f239:	push   edx
  43f23a:	sub    edx,eax
  43f23c:	jmp    0xe1ccae93
  43f241:	mov    eax,0xcbd775e
  43f246:	cmp    DWORD PTR [edi-0x53],esi
  43f249:	adc    al,0xa1
  43f24b:	cdq    
  43f24c:	pop    edi
  43f24d:	les    esp,FWORD PTR ds:0xa114b508
  43f253:	arpl   WORD PTR [eax-0x44897437],si
  43f259:	daa    
  43f25a:	jnp    0x43f259
  43f25c:	pushf  
  43f25d:	popa   
  43f25e:	mov    cl,0x5e
  43f260:	push   ebx
  43f261:	mov    edi,fs
  43f263:	mov    bh,ah
  43f265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f266:	call   0x0:0x88
	...
  43f279:	add    BYTE PTR [eax],al
  43f27b:	add    bh,bh
  43f27d:	mov    ds:0x617cfa68,eax
  43f282:	out    0x3,eax
  43f284:	out    0x8b,al
  43f286:	fs std 
  43f288:	loope  0x43f20a
  43f28a:	outs   dx,BYTE PTR ds:[esi]
  43f28b:	inc    ebp
  43f28c:	add    eax,0xd8582915
  43f291:	dec    edi
  43f292:	call   0xed47517
  43f297:	ret    0x90c6
  43f29a:	dec    ah
  43f29c:	(bad)  
  43f29d:	xchg   esp,eax
  43f29e:	sbb    bh,BYTE PTR [ecx+ebx*1-0x70034d9f]
  43f2a5:	ret    0x7a5
  43f2a8:	mov    ch,0x14
  43f2aa:	jno    0x43f25f
  43f2ac:	mov    ch,0x8f
  43f2ae:	out    0x0,eax
  43f2b0:	das    
  43f2b1:	xor    al,0xe7
  43f2b3:	add    esi,DWORD PTR [ebp-0x4a548eec]
  43f2b9:	(bad)  
  43f2ba:	out    0x69,eax
  43f2bc:	mov    ch,0xf5
  43f2be:	out    0x8e,eax
  43f2c0:	jno    0x43f340
  43f2c2:	add    bh,al
  43f2c4:	mov    bh,0xcd
  43f2c6:	pop    eax
  43f2c7:	add    esi,DWORD PTR [ecx-0x7795ff17]
  43f2cd:	ret    
  43f2ce:	add    BYTE PTR [edx+0x70],ch
  43f2d1:	mov    edi,0xe9b6c2ff
  43f2d6:	add    BYTE PTR [edx+0x60],ch
  43f2d9:	mov    ebx,0x48307400
  43f2de:	add    cl,ch
	...
  43f2f4:	mov    dh,0xd0
  43f2f6:	mov    ebx,DWORD PTR [edi+0x36]
  43f2f9:	pop    DWORD PTR [eax]
  43f2fb:	jmp    0x1205fe04
  43f300:	lds    ebx,FWORD PTR [ecx-0x7]
  43f303:	push   ds
  43f304:	sub    eax,0x35292d57
  43f309:	dec    ebx
  43f30a:	and    BYTE PTR [edi+edi*2-0x6a],ah
  43f30e:	xchg   esp,eax
  43f30f:	sub    ecx,esp
  43f311:	clc    
  43f312:	xchg   BYTE PTR [edi-0x72adf6ea],ah
  43f318:	cmp    eax,0x748c5a20
  43f31d:	mov    eax,DWORD PTR [eax]
  43f31f:	mov    ch,0x6d
  43f321:	push   ebx
  43f322:	int3   
  43f323:	lods   eax,DWORD PTR ds:[esi]
  43f324:	ins    DWORD PTR es:[edi],dx
  43f325:	push   ebx
  43f326:	int3   
  43f327:	cmp    al,0x42
  43f329:	jae    0x43f2b0
  43f32b:	and    al,0xb9
  43f32d:	or     cl,BYTE PTR [ebx-0x27]
  43f330:	cmp    esi,DWORD PTR [ebx+0x8]
  43f333:	push   ss
  43f334:	and    BYTE PTR [esi-0x79],0xf1
  43f338:	inc    ebx
  43f339:	int3   
  43f33a:	or     al,0x60
  43f33c:	jmp    0x32316b49
  43f341:	cwde   
  43f342:	test   DWORD PTR [edi],esi
  43f344:	imul   esp,DWORD PTR [edx-0x6d],0x8fb9b1
  43f34b:	bound  esi,QWORD PTR [edi-0x2d]
  43f34e:	or     eax,0x479200
  43f353:	add    BYTE PTR [ecx+edx*1],cl
  43f356:	inc    esi
  43f357:	xor    BYTE PTR [eax],al
	...
  43f369:	add    BYTE PTR [eax],al
  43f36b:	add    bl,dl
  43f36d:	mov    ebx,0x73c2514a
  43f372:	out    dx,al
  43f373:	xor    ecx,esp
  43f375:	mov    edi,DWORD PTR [ebx-0x3c]
  43f378:	loopne 0x43f388
  43f37a:	shl    BYTE PTR [esp+edx*8+0x8],0xc8
  43f37f:	call   FWORD PTR [ebx]
  43f381:	adc    ebp,ebx
  43f383:	pop    ebp
  43f384:	(bad)  
  43f385:	adc    BYTE PTR [esi],bh
  43f387:	xor    BYTE PTR [ecx-0x42],cl
  43f38a:	cld    
  43f38b:	push   edx
  43f38c:	pop    ss
  43f38d:	dec    edx
  43f38e:	call   0xf79ee2bc
  43f393:	adc    eax,0xffffff8f
  43f396:	jge    0x43f358
  43f398:	inc    eax
  43f399:	nop
  43f39a:	jnp    0x43f36b
  43f39c:	stos   DWORD PTR es:[edi],eax
  43f39d:	outs   dx,BYTE PTR ds:[esi]
  43f39e:	push   es
  43f39f:	cmp    DWORD PTR [ecx],0x8f4b5067
  43f3a5:	pop    edi
  43f3a6:	ins    DWORD PTR es:[edi],dx
  43f3a7:	add    eax,0xfff6fcbb
  43f3ac:	imul   ecx,DWORD PTR [eax],0x3d
  43f3af:	cld    
  43f3b0:	dec    esp
  43f3b1:	push   cs
  43f3b2:	ds xor bh,ah
  43f3b5:	dec    eax
  43f3b6:	call   0xf79e725c
  43f3bb:	and    DWORD PTR [eax],0x5f
  43f3be:	jle    0x43f380
  43f3c0:	loopne 0x43f358
  43f3c2:	jnp    0x43f393
  43f3c4:	jnp    0x43f3d4
  43f3c6:	ds xor cl,cl
  43f3c9:	xbegin 0xe88c8b20
  43f3cf:	mov    DWORD PTR [eax],eax
	...
  43f3e1:	add    BYTE PTR [eax],al
  43f3e3:	add    BYTE PTR [esi+0x5a],ch
  43f3e6:	test   DWORD PTR [ebx-0x3f81a0b0],0xcf7b96c0
  43f3f0:	mov    ch,0x5
  43f3f2:	mov    al,BYTE PTR [edx-0x3b]
  43f3f5:	mov    ebx,0xe167fc50
  43f3fa:	(bad)  
  43f3fb:	call   0xfa3ace84
  43f400:	ss sub eax,0x64f582f9
  43f406:	add    BYTE PTR [ebp-0xe],bh
  43f409:	cmc    
  43f40a:	jmp    0x3e1a:0x70be301e
  43f411:	out    dx,eax
  43f412:	add    DWORD PTR [eax],0x433c68b5
  43f418:	rcr    DWORD PTR [ebx],0x7
  43f41b:	xor    ebp,0x24
  43f41e:	push   es
  43f41f:	jge    0x43f3ce
  43f421:	je     0x43f48c
  43f423:	push   es
  43f424:	mov    al,ss:0xf5b87405
  43f42a:	pushf  
  43f42b:	stc    
  43f42c:	call   0x8a18:0x9143887d
  43f433:	inc    edx
  43f434:	(bad)
  43f437:	call   0xfa3b4e64
  43f43c:	ss mov ah,0xf9
  43f43f:	xor    BYTE PTR [ebp-0x24],0x2
  43f443:	jge    0x43f4bf
  43f445:	ins    DWORD PTR es:[edi],dx
  43f446:	mov    eax,DWORD PTR [edx+0x0]
	...
  43f459:	add    BYTE PTR [eax],al
  43f45b:	add    BYTE PTR [ebp+0x6fc41e3],ah
  43f461:	cwde   
  43f462:	mov    ecx,edx
  43f464:	pop    ebp
  43f465:	(bad)  
  43f466:	repnz stc 
  43f468:	dec    edx
  43f469:	repnz push ecx
  43f46b:	clc    
  43f46c:	ss sub al,0x0
  43f46f:	xor    DWORD PTR [ebp-0x5c],0xfffffff9
  43f473:	jl     0x43f477
  43f475:	and    eax,0x2d3017eb
  43f47a:	imul   edx,DWORD PTR [ebx],0xf83c8f2e
  43f480:	loopne 0x43f487
  43f482:	jae    0x43f488
  43f484:	mov    ch,0x8f
  43f486:	sbb    ecx,DWORD PTR [esi]
  43f488:	pop    es
  43f489:	push   edx
  43f48a:	fild   QWORD PTR [esi-0x4a]
  43f48d:	push   ds
  43f48e:	pusha  
  43f48f:	stc    
  43f490:	cld    
  43f491:	pop    ebp
  43f492:	ins    BYTE PTR es:[edi],dx
  43f493:	aas    
  43f494:	icebp  
  43f495:	mov    esi,0xaa5425e
  43f49a:	cdq    
  43f49b:	in     al,dx
  43f49c:	ja     0x43f4ff
  43f49e:	(bad)  
  43f49f:	stc    
  43f4a0:	pop    eax
  43f4a1:	push   ebx
  43f4a2:	jecxz  0x43f522
  43f4a4:	cmc    
  43f4a5:	loop   0x43f493
  43f4a7:	test   ah,bh
  43f4a9:	pop    ebp
  43f4aa:	ds sub al,0x38
  43f4ad:	int3   
  43f4ae:	inc    ebx
  43f4af:	test   edx,eax
  43f4b1:	pop    ebp
  43f4b2:	mov    bl,0x23
  43f4b4:	ss pop ebp
  43f4b6:	mov    esp,0xee4fd817
  43f4bb:	mov    DWORD PTR ds:0x3e790,edi
	...
  43f4d1:	add    BYTE PTR [eax],al
  43f4d3:	add    BYTE PTR [esi],ah
  43f4d5:	mov    dh,bl
  43f4d7:	xor    DWORD PTR [ecx],0x103e790
  43f4dd:	mov    dl,BYTE PTR [ecx]
  43f4df:	lds    ebp,FWORD PTR [ebp+0x22b8ece2]
  43f4e5:	pop    ebp
  43f4e6:	cli    
  43f4e7:	clc    
  43f4e8:	cmp    dh,dl
  43f4ea:	mov    bh,0x86
  43f4ec:	(bad)  
  43f4ed:	pop    ebx
  43f4ee:	cwde   
  43f4ef:	mov    WORD PTR [edi+0x68],gs
  43f4f2:	jmp    0x43f4e9
  43f4f4:	pop    esp
  43f4f5:	pop    ebp
  43f4f6:	mov    di,0x12b9
  43f4fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f4fb:	outs   dx,DWORD PTR ds:[esi]
  43f4fc:	mov    dh,0x10
  43f4fe:	call   0x3946:0x6ea858f8
  43f505:	adc    eax,eax
  43f507:	clc    
  43f508:	test   eax,0x2d6c00af
  43f50d:	loope  0x43f52b
  43f50f:	cli    
  43f510:	mul    BYTE PTR [edx-0x7049b676]
  43f516:	add    BYTE PTR [ecx+eax*8],dl
  43f519:	mov    ds:0x8fb64d82,al
  43f51e:	add    BYTE PTR ds:0xf1bd61b3,dl
  43f524:	mov    edx,DWORD PTR [eax+0x56ed60b9]
  43f52a:	stc    
  43f52b:	bound  esi,QWORD PTR [edi+ebx*4-0x75]
  43f52f:	adc    al,0xe1
  43f531:	int    0x85
  43f533:	aaa    
  43f534:	into   
  43f535:	mov    ebp,0x5eef
	...
  43f54a:	add    BYTE PTR [eax],al
  43f54c:	int    0x12
  43f54e:	pop    ebx
  43f54f:	push   ecx
  43f550:	xor    DWORD PTR [esp+eax*1+0x64],edx
  43f554:	mul    bl
  43f556:	add    ebp,DWORD PTR [edx-0x13]
  43f559:	push   esi
  43f55a:	in     eax,0xd8
  43f55c:	xor    edx,DWORD PTR [edi+0x73]
  43f55f:	in     al,0xe9
  43f561:	stc    
  43f562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f563:	jmp    0xecb8851e
  43f568:	pop    ebp
  43f569:	add    al,0xf9
  43f56b:	push   ds
  43f56c:	lea    edx,[edx]
  43f56e:	inc    ebx
  43f56f:	loope  0x43f528
  43f571:	ja     0x43f4fe
  43f573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f574:	jle    0x43f535
  43f576:	test   DWORD PTR [edi+0x11ca12c6],ebp
  43f57c:	popf   
  43f57d:	ins    BYTE PTR es:[edi],dx
  43f57e:	stc    
  43f57f:	div    BYTE PTR [esi]
  43f581:	push   ebx
  43f582:	add    al,0x64
  43f584:	jbe    0x43f569
  43f586:	std    
  43f587:	imul   esi,DWORD PTR [edx+0x56],0x12bd2485
  43f58e:	push   ebx
  43f58f:	stc    
  43f590:	xchg   DWORD PTR [ebp+edi*8+0x6e],edx
  43f594:	popa   
  43f595:	pop    DWORD PTR [eax]
  43f597:	add    BYTE PTR [ecx+eax*4-0x7a],cl
  43f59b:	fcomp  QWORD PTR [eax+edx*4]
  43f59e:	add    BYTE PTR [ebx-0x2e847aa1],al
  43f5a4:	or     al,0xb
  43f5a6:	sbb    BYTE PTR [ecx+0x45838fe4],cl
  43f5ac:	push   esp
  43f5ad:	or     BYTE PTR [ebp+0x8],al
	...
  43f5c4:	xchg   ebp,eax
  43f5c5:	xchg   ecx,eax
  43f5c6:	stc    
  43f5c7:	add    bh,al
  43f5c9:	or     BYTE PTR [edi+0x556e875f],bh
  43f5cf:	ret    
  43f5d0:	and    BYTE PTR [edi-0x34],al
  43f5d3:	int3   
  43f5d4:	leave  
  43f5d5:	or     ah,ch
  43f5d7:	and    DWORD PTR [eax+0x7f],0xffffff83
  43f5db:	inc    ebp
  43f5dc:	in     al,0xa0
  43f5de:	retf   0x989
  43f5e1:	fs xor eax,edx
  43f5e4:	jmp    0x46867b73
  43f5e9:	or     ch,bl
  43f5eb:	pop    ebp
  43f5ec:	mov    es,WORD PTR [edi+0x24275600]
  43f5f2:	loopne 0x43f5f4
  43f5f4:	pushf  
  43f5f5:	(bad)  
  43f5f6:	xor    esi,edx
  43f5f8:	imul   edx,DWORD PTR [ebx+0x62d39ab8],0x71075ef7
  43f602:	push   ebp
  43f603:	ret    0x8f90
  43f606:	xor    DWORD PTR [esi],edx
  43f608:	sub    DWORD PTR [ebx+0x62b39cb8],edx
  43f60e:	neg    DWORD PTR [esi-0x19]
  43f611:	jo     0x43f668
  43f613:	ret    0x8f50
  43f616:	dec    ebx
  43f617:	mov    esi,DWORD PTR [ecx]
  43f619:	jg     0x43f64e
  43f61b:	(bad)  
  43f61d:	test   DWORD PTR [ebx+0x33],edx
  43f620:	sbb    al,0xc5
  43f622:	and    ebp,0xffffffb5
  43f625:	mov    ds:0xcbe,eax
	...
  43f63a:	add    BYTE PTR [eax],al
  43f63c:	mov    ch,0xed
  43f63e:	inc    eax
  43f63f:	or     al,0x2c
  43f641:	stos   DWORD PTR es:[edi],eax
  43f642:	adc    al,0x87
  43f644:	xchg   ebx,eax
  43f645:	inc    esp
  43f646:	ss xchg edx,eax
  43f648:	xor    DWORD PTR [ecx-0x3],ebp
  43f64b:	jmp    DWORD PTR [edi-0x21f795c3]
  43f651:	adc    bh,BYTE PTR [ebp+0x0]
  43f654:	mov    ch,0x68
  43f656:	imul   ecx,DWORD PTR [edi],0xffffffcc
  43f659:	fcmovb st,st(5)
  43f65b:	add    BYTE PTR [ebp+0x2e077068],dh
  43f661:	jecxz  0x43f6e0
  43f663:	add    BYTE PTR [ebp-0x3eb57398],dh
  43f669:	jns    0x43f5f0
  43f66b:	jp     0x43f61a
  43f66d:	adc    eax,0x65ea85bd
  43f672:	inc    ebx
  43f673:	js     0x43f61b
  43f675:	xor    dh,BYTE PTR [ecx+0x35]
  43f678:	in     eax,0x36
  43f67a:	or     esi,DWORD PTR [ecx-0x47]
  43f67d:	jge    0x43f65a
  43f67f:	jb     0x43f626
  43f681:	(bad)
  43f685:	push   0xedbd73fd
  43f68a:	dec    ebx
  43f68b:	js     0x43f643
  43f68d:	or     DWORD PTR [edx+edx*2+0x1473e5c1],0xb07b69b5
  43f698:	mov    ah,0x68
  43f69a:	std    
  43f69b:	jl     0x43f6a0
  43f69d:	jno    0x43f69c
  43f69f:	or     BYTE PTR [eax],al
	...
  43f6b1:	add    BYTE PTR [eax],al
  43f6b3:	add    BYTE PTR [eax],dh
  43f6b5:	in     eax,dx
  43f6b6:	std    
  43f6b7:	push   DWORD PTR [ebp+0x3e7c3bdd]
  43f6bd:	xor    dh,BYTE PTR [ebp-0x7d]
  43f6c0:	jne    0x43f6a5
  43f6c2:	add    eax,0xf28f6c83
  43f6c7:	jg     0x43f703
  43f6c9:	(bad)  
  43f6ca:	out    0x3,eax
  43f6cc:	or     al,0x8f
  43f6ce:	daa    
  43f6cf:	add    al,0xb5
  43f6d1:	adc    al,0xa7
  43f6d3:	ins    DWORD PTR es:[edi],dx
  43f6d4:	stos   BYTE PTR es:[edi],al
  43f6d5:	fucomp st(3)
  43f6d7:	cmp    ah,bh
  43f6d9:	fucomp st(6)
  43f6db:	mov    BYTE PTR [edi-0x530a9329],ch
  43f6e1:	adc    esp,DWORD PTR [ecx+0x3]
  43f6e4:	mov    ch,0x8f
  43f6e6:	outs   dx,BYTE PTR ds:[esi]
  43f6e7:	jle    0x43f6de
  43f6e9:	mov    fs,edi
  43f6eb:	add    ecx,DWORD PTR [eax]
  43f6ed:	aam    0x27
  43f6ef:	mov    DWORD PTR [edi],ebp
  43f6f1:	push   ebx
  43f6f2:	out    0x3,eax
  43f6f4:	mov    ch,0x7e
  43f6f6:	xor    DWORD PTR [eax+0x38],eax
  43f6f9:	add    DWORD PTR [ebx],esi
  43f6fb:	add    al,0xb5
  43f6fd:	(bad)  
  43f6fe:	std    
  43f6ff:	add    esi,DWORD PTR [edx-0x41]
  43f702:	adc    eax,0xe7073787
  43f707:	add    esi,DWORD PTR [ebp-0x7a1ab041]
  43f70d:	(bad)  
  43f70e:	out    0x80,eax
  43f710:	stc    
  43f711:	and    BYTE PTR [esp+eax*8-0x54],0x14
  43f716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f717:	add    al,BYTE PTR [eax]
	...
  43f729:	add    BYTE PTR [eax],al
  43f72b:	add    BYTE PTR [ebp+0x30066e8f],dh
  43f731:	add    bh,BYTE PTR [ebx+0x4]
  43f734:	mov    ch,0x8f
  43f736:	pop    esi
  43f737:	jle    0x43f78a
  43f739:	nop
  43f73a:	out    0x3,eax
  43f73c:	in     al,0xbe
  43f73e:	outs   dx,BYTE PTR ds:[esi]
  43f73f:	xchg   BYTE PTR [ecx],bh
  43f741:	nop
  43f742:	out    0x3,eax
  43f744:	repz mov edi,0x53f8d30a
  43f74a:	xlat   BYTE PTR ds:[ebx]
  43f74b:	cmp    BYTE PTR [ecx+ecx*4+0x64],dh
  43f74f:	cmp    al,0x6a
  43f751:	pop    ecx
  43f752:	add    cl,ch
  43f754:	sub    eax,0xb6292d7e
  43f759:	aad    0x40
  43f75b:	jo     0x43f75d
  43f75d:	xchg   esp,eax
  43f75e:	xchg   DWORD PTR [edi-0x47],ebx
  43f761:	mov    BYTE PTR [edx+0x2d],al
  43f764:	mov    ss,ebp
  43f766:	js     0x43f758
  43f768:	js     0x43f745
  43f76a:	test   DWORD PTR [edi+0x6e],ebp
  43f76d:	nop
  43f76e:	add    cl,ch
  43f770:	stos   DWORD PTR es:[edi],eax
  43f771:	dec    edi
  43f772:	or     DWORD PTR [ebp+0x2e],ebp
  43f775:	nop
  43f776:	add    cl,ch
  43f778:	xor    eax,0xb6e9c816
  43f77d:	pop    DWORD PTR [eax]
  43f77f:	adc    al,0x80
  43f781:	(bad)  
  43f783:	in     eax,0xb9
  43f785:	adc    ebx,edi
  43f787:	jmp    0x2fc98742
  43f78c:	rcl    DWORD PTR [edx],1
  43f78e:	dec    edx
  43f78f:	fld    DWORD PTR [eax]
	...
  43f7a1:	add    BYTE PTR [eax],al
  43f7a3:	add    BYTE PTR [ecx+ebx*2-0x74],bl
  43f7a7:	pop    ds
  43f7a8:	mov    ch,0xc9
  43f7aa:	xchg   DWORD PTR [eiz*8-0x2106b4f0],esp
  43f7b1:	mov    ecx,0x10b6e915
  43f7b6:	inc    ebx
  43f7b7:	loope  0x43f7fc
  43f7b9:	dec    edi
  43f7ba:	js     0x43f798
  43f7bc:	xor    eax,0x22e91cd6
  43f7c1:	pop    ecx
  43f7c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f7c4:	mov    esi,0xa936f954
  43f7c9:	adc    bl,BYTE PTR [edx-0x2f]
  43f7cc:	in     eax,0x4f
  43f7ce:	test   DWORD PTR [edx],esp
  43f7d0:	fst    st(4)
  43f7d2:	hlt    
  43f7d3:	jb     0x43f853
  43f7d5:	cmp    BYTE PTR [edi-0x7a17f718],0x9f
  43f7dc:	push   es
  43f7dd:	adc    DWORD PTR [ebx+0x0],eax
  43f7e0:	ins    BYTE PTR es:[edi],dx
  43f7e1:	jle    0x43f821
  43f7e3:	ins    BYTE PTR es:[edi],dx
  43f7e4:	out    0x99,eax
  43f7e6:	adc    BYTE PTR [edi+0x3c],dl
  43f7e9:	mov    ebp,0x8c1f99e8
  43f7ee:	add    BYTE PTR [ecx],ch
  43f7f0:	sbb    dl,BYTE PTR [ebx]
  43f7f2:	add    BYTE PTR [eax],al
  43f7f4:	pop    esp
  43f7f5:	(bad)  [ebp-0x10]
  43f7f8:	aad    0xc5
  43f7fa:	jo     0x43f815
  43f7fc:	ret    0x7
  43f7ff:	add    BYTE PTR [ecx+edi*2],bl
  43f802:	push   ebp
  43f803:	hlt    
  43f804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f805:	(bad)  
  43f806:	or     BYTE PTR [ecx],al
	...
  43f81c:	leave  
  43f81d:	pop    edi
  43f81e:	jnp    0x43f818
  43f820:	or     eax,0x5c8573e0
  43f825:	(bad)  
  43f826:	jb     0x43f813
  43f828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f829:	fdivr  DWORD PTR [esi]
  43f82b:	or     BYTE PTR [ecx-0x68f792ad],dl
  43f831:	int    0x78
  43f833:	or     ebp,DWORD PTR [edx+0x676674df]
  43f839:	fst    QWORD PTR [ebx+edi*1]
  43f83c:	fs loope 0x43f839
  43f83f:	mov    ah,BYTE PTR [eax+eiz*4-0x40]
  43f843:	test   DWORD PTR [ebx-0x29],ebx
  43f846:	push   cs
  43f847:	jmp    0x43f828
  43f849:	push   cs
  43f84a:	inc    ecx
  43f84b:	add    BYTE PTR [edi-0x4b],dl
  43f84e:	add    al,0x8a
  43f850:	sar    BYTE PTR [ebx-0x7d],0x4e
  43f854:	mov    ebx,ds
  43f856:	adc    al,0x8
  43f858:	pop    esp
  43f859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f85a:	mov    edi,0x3ed6fb72
  43f85f:	adc    BYTE PTR [edi],dl
  43f861:	shl    BYTE PTR [eax+0x57],cl
  43f864:	outs   dx,DWORD PTR ds:[esi]
  43f865:	inc    esi
  43f866:	stc    
  43f867:	jge    0x43f88d
  43f869:	ret    
  43f86a:	dec    ecx
  43f86b:	adc    DWORD PTR [ebp-0x3317a6e2],esi
  43f871:	cmp    ebp,edi
  43f873:	call   FWORD PTR [esi+ecx*8+0x68b50084]
  43f87a:	jl     0x43f8be
  43f87c:	in     eax,0x3f
  43f87e:	pop    DWORD PTR [eax+eax*1+0x0]
	...
  43f891:	add    BYTE PTR [eax],al
  43f893:	add    BYTE PTR [ebp-0x2cd90298],dh
  43f899:	pusha  
  43f89a:	sbb    al,0x7a
  43f89c:	mov    eax,ds:0xb4106f67
  43f8a1:	mov    esi,0x60b8ff08
  43f8a6:	add    al,0x7b
  43f8a8:	xor    edx,ebp
  43f8aa:	outs   dx,DWORD PTR ds:[esi]
  43f8ab:	adc    al,0xb5
  43f8ad:	xchg   BYTE PTR gs:[eax+0x23],dl
  43f8b1:	push   ds
  43f8b2:	out    dx,al
  43f8b3:	test   DWORD PTR [eax+0x24],esi
  43f8b6:	dec    esi
  43f8b7:	push   ebp
  43f8b8:	jae    0x43f89b
  43f8ba:	call   0xfda8f01a
  43f8bf:	pop    eax
  43f8c0:	pop    esi
  43f8c1:	cmp    DWORD PTR [ebp+0x500c2e5a],edi
  43f8c7:	mov    esi,0x554e68c1
  43f8cc:	ss and esi,ebp
  43f8cf:	pop    edx
  43f8d0:	cs add al,0x50
  43f8d3:	mov    esi,0xccb968a9
  43f8d8:	add    DWORD PTR [ebp-0x5b063347],ebx
  43f8de:	mov    ecx,0x7a13f1cc
  43f8e3:	in     al,dx
  43f8e4:	sbb    ax,0x7b7a
  43f8e8:	mov    ebp,0xaa83ca59
  43f8ed:	sbb    edi,esp
  43f8ef:	pop    eax
  43f8f0:	xor    BYTE PTR [ecx],ch
  43f8f2:	mov    edx,DWORD PTR [ebp-0x8]
  43f8f5:	stos   BYTE PTR es:[edi],al
  43f8f6:	add    DWORD PTR [eax],eax
	...
  43f90c:	jmp    0x43f89d
  43f90e:	outs   dx,BYTE PTR ds:[esi]
  43f90f:	mov    edx,0x3e78f95
  43f914:	ss pop ebp
  43f916:	pushf  
  43f917:	std    
  43f918:	das    
  43f919:	int    0x6d
  43f91b:	push   ecx
  43f91c:	or     al,0xbb
  43f91e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f91f:	lds    esi,FWORD PTR [ecx+0x35896e8f]
  43f925:	(bad)  
  43f926:	out    0x3,eax
  43f928:	mov    al,0xd
  43f92a:	arpl   WORD PTR [ebx],ax
  43f92c:	mov    ch,0x8f
  43f92e:	pop    esp
  43f92f:	adc    eax,0x4aef582
  43f934:	mov    ch,0x8f
  43f936:	pop    esp
  43f937:	std    
  43f938:	xor    ebp,eax
  43f93a:	push   edi
  43f93b:	sub    eax,0x53bdb7f
  43f940:	ds mov bh,0x52
  43f943:	jge    0x43f90c
  43f945:	sar    DWORD PTR ds:0xcb7c1c04,0xd0
  43f94c:	ror    BYTE PTR [edi+0x12bdc866],1
  43f952:	sbb    DWORD PTR [ebp*4-0x4afc16b2],edi
  43f959:	(bad)  
  43f95a:	out    0x76,eax
  43f95c:	mov    edx,0x85082904
  43f961:	addr16 pop es
  43f963:	and    dh,BYTE PTR [ebp-0x4aa1e671]
  43f969:	dec    esi
  43f96a:	and    DWORD PTR [esi*4+0x3e78f],edi
	...
  43f981:	add    BYTE PTR [eax],al
  43f983:	add    ah,cl
  43f985:	jnp    0x43f982
  43f987:	rol    BYTE PTR [eax-0x52379971],1
  43f98d:	mov    ch,0x22
  43f98f:	mov    DWORD PTR [ebp-0x4afc1870],edx
  43f995:	(bad)  
  43f996:	out    0x3,eax
  43f998:	cld    
  43f999:	or     BYTE PTR [eax],al
  43f99b:	sub    ch,al
  43f99d:	mov    eax,0x43b6e5be
  43f9a2:	int3   
  43f9a3:	xor    eax,0x2dcc4475
  43f9a8:	jne    0x43f9ee
  43f9aa:	int3   
  43f9ab:	mov    esp,0xfd7f63f9
  43f9b0:	jb     0x43fa08
  43f9b2:	stc    
  43f9b3:	jmp    0x7295bbb9
  43f9b8:	imul   ebx,DWORD PTR ds:0x8fb6e905,0xffffff8b
  43f9bf:	sub    al,0x4d
  43f9c1:	pop    edx
  43f9c2:	stc    
  43f9c3:	out    0x41,al
  43f9c5:	xor    DWORD PTR [ebp+0x3eb412c],eax
  43f9cb:	cmp    BYTE PTR [edx+0x25cff400],bh
  43f9d1:	push   edi
  43f9d2:	dec    esi
  43f9d3:	cli    
  43f9d4:	stc    
  43f9d5:	or     al,0x83
  43f9d7:	or     DWORD PTR [edi+edx*2],esp
  43f9da:	stc    
  43f9db:	shr    DWORD PTR [ecx-0x57],0x0
  43f9df:	jmp    0xadc150ad
  43f9e4:	or     cl,BYTE PTR [esi]
  43f9e6:	add    ebp,0x0
	...
  43f9f9:	add    BYTE PTR [eax],al
  43f9fb:	add    BYTE PTR ds:0xedd2f957,al
  43fa01:	xchg   BYTE PTR [edi+ebx*2+0x19008fb9],al
  43fa08:	push   0x10
  43fa0a:	hlt    
  43fa0b:	jg     0x43f9f2
  43fa0d:	push   esi
  43fa0e:	push   eax
  43fa0f:	or     DWORD PTR [ecx+0x516ef964],0x31318565
  43fa19:	dec    esp
  43fa1a:	or     dl,dh
  43fa1c:	hlt    
  43fa1d:	or     al,0x43
  43fa1f:	dec    ebp
  43fa20:	mov    ch,0xb
  43fa22:	xchg   edx,eax
  43fa23:	call   0xc989de
  43fa28:	or     DWORD PTR [ebp-0x481c0009],ebp
  43fa2e:	dec    esi
  43fa2f:	push   eax
  43fa30:	ds aad 0x7d
  43fa33:	hlt    
  43fa34:	loop   0x43fa95
  43fa36:	not    DWORD PTR [eax-0x25]
  43fa39:	int    0xdc
  43fa3b:	add    DWORD PTR [eax+edx*4-0x51af1800],ecx
  43fa42:	add    BYTE PTR [eax],al
  43fa44:	fisttp WORD PTR [esp+edx*1-0x7b]
  43fa48:	pushf  
  43fa49:	fdiv   st(3),st
  43fa4b:	and    BYTE PTR [edi+0x6885835f],0x5f
  43fa52:	idiv   edi
  43fa54:	icebp  
  43fa55:	xchg   ebp,eax
  43fa56:	cld    
  43fa57:	push   ecx
  43fa58:	ror    DWORD PTR [esi],0xf4
  43fa5b:	(bad)  
  43fa5c:	arpl   WORD PTR [eax+ebp*8+0x7d],sp
	...
  43fa74:	jno    0x43fada
  43fa76:	test   DWORD PTR [ebx-0x3f8278a8],0xcb7b90e8
  43fa80:	arpl   ax,bx
  43fa82:	jge    0x43faa8
  43fa84:	arpl   WORD PTR [edi+esi*8-0x73],sp
  43fa88:	test   eax,0x818d4a6f
  43fa8d:	push   edi
  43fa8e:	idiv   bh
  43fa90:	and    esi,DWORD PTR [ebx]
  43fa92:	out    0xed,al
  43fa94:	and    esp,DWORD PTR [ebx+edi*2-0x3c]
  43fa98:	fadd   DWORD PTR [esi]
  43fa9a:	shl    BYTE PTR [edi+ebx*8+0x10],0xc3
  43fa9f:	call   DWORD PTR [ecx-0x3a]
  43faa2:	lock push eax
  43faa4:	push   edi
  43faa5:	push   es
  43faa6:	and    al,0xff
  43faa8:	arpl   WORD PTR [ebp+eax*4-0x73],sp
  43faac:	push   0x64fff765
  43fab1:	inc    esp
  43fab2:	in     al,dx
  43fab3:	push   DWORD PTR [ebp-0x463b8243]
  43fab9:	jmp    0x43fa7f
  43fabb:	je     0x43fa73
  43fabd:	in     eax,0xb5
  43fabf:	stc    
  43fac0:	cs in  al,dx
  43fac2:	sub    cl,bh
  43fac4:	call   0x7ff8:0x854b7f9a
  43facb:	mov    eax,DWORD PTR [ecx-0x72061655]
  43fad1:	test   eax,0xe67af9e0
  43fad6:	enter  0x4,0x0
	...
  43faea:	add    BYTE PTR [eax],al
  43faec:	cmp    BYTE PTR [ecx-0x61c80288],ch
  43faf2:	jmp    0xea91337c
  43faf7:	stc    
  43faf8:	pop    edx
  43faf9:	in     al,dx
  43fafa:	push   edi
  43fafb:	lock out 0xb3,eax
  43fafe:	jg     0x43faf4
  43fb00:	dec    ebx
  43fb01:	push   0xffffffea
  43fb03:	call   0xfa2e3ebc
  43fb08:	ss and eax,0xbcf58301
  43fb0e:	std    
  43fb0f:	jl     0x43fb0f
  43fb11:	dec    ecx
  43fb12:	add    BYTE PTR [ebx+0x29],0x79
  43fb16:	jne    0x43fa9b
  43fb18:	rcr    DWORD PTR [ecx],1
  43fb1a:	jmp    0xafa:0xf1b440f9
  43fb21:	sub    dl,ch
  43fb23:	ficom  WORD PTR [ecx]
  43fb25:	bnd jmp 0x88a8eca8
  43fb2b:	shr    BYTE PTR [ecx+0x65],0x7e
  43fb2f:	(bad)
  43fb32:	mov    BYTE PTR [edx+eiz*8],ah
  43fb35:	shr    edx,1
  43fb37:	mov    ebp,DWORD PTR [eax]
  43fb39:	dec    ebp
  43fb3a:	jmp    0xc18b:0x7f77d2f9
  43fb41:	(bad)  
  43fb42:	popa   
  43fb43:	out    dx,al
  43fb44:	mov    esp,0xbce0b767
  43fb49:	push   edx
  43fb4a:	data16 (bad) 
  43fb4c:	mov    ecx,0x77270c
	...
  43fb61:	add    BYTE PTR [eax],al
  43fb63:	add    BYTE PTR [eax+0x38ee2e0d],ch
  43fb69:	or     al,0x3
  43fb6b:	out    dx,eax
  43fb6c:	pushf  
  43fb6d:	push   edx
  43fb6e:	fs pop eax
  43fb70:	lea    edi,[ebp+0x5181805c]
  43fb76:	and    ch,dh
  43fb78:	lea    esp,[eax+0xe7cee0c]
  43fb7e:	sub    eax,DWORD PTR [edi]
  43fb80:	ss dec edi
  43fb82:	xchg   ebx,eax
  43fb83:	add    ch,al
  43fb85:	inc    esi
  43fb86:	add    bh,BYTE PTR [edx-0xa]
  43fb89:	push   edi
  43fb8a:	mov    esi,0xf2528988
  43fb8f:	in     eax,dx
  43fb90:	(bad)  
  43fb91:	jl     0x43fbf1
  43fb93:	inc    eax
  43fb94:	dec    ecx
  43fb95:	xchg   esi,eax
  43fb96:	je     0x43fbcc
  43fb98:	cmp    al,0x52
  43fb9a:	fidiv  DWORD PTR [edi-0x4d]
  43fb9d:	cwde   
  43fb9e:	push   esp
  43fb9f:	clc    
  43fba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fba1:	mov    WORD PTR [eax],ss
  43fba3:	outs   dx,DWORD PTR ds:[esi]
  43fba4:	and    eax,0x4aa8ecdb
  43fba9:	push   edx
  43fbaa:	mov    edx,0xb0c30ed
  43fbaf:	in     eax,dx
  43fbb0:	or     al,0x52
  43fbb2:	pop    esp
  43fbb3:	xchg   edi,eax
  43fbb4:	xchg   ecx,eax
  43fbb5:	push   edx
  43fbb6:	mov    ds:0x6c0473ed,al
  43fbbb:	clc    
  43fbbc:	call   DWORD PTR [ecx-0x6e]
  43fbbf:	(bad)  
  43fbc1:	bound  ecx,QWORD PTR [edx-0x14b49713]
  43fbc7:	xchg   BYTE PTR [eax],al
	...
  43fbd9:	add    BYTE PTR [eax],al
  43fbdb:	add    ch,dh
  43fbdd:	(bad)  
  43fbdf:	xor    al,0x51
  43fbe2:	add    BYTE PTR [edx+edi*1-0x1d],ah
  43fbe6:	stc    
  43fbe7:	outs   dx,BYTE PTR ds:[esi]
  43fbe8:	fdivr  DWORD PTR [esi+0x588d6c85]
  43fbee:	stc    
  43fbef:	pop    esi
  43fbf0:	cmp    al,BYTE PTR [esi]
  43fbf2:	hlt    
  43fbf3:	push   edi
  43fbf4:	mov    al,ds:0x9521e857
  43fbf9:	push   edi
  43fbfa:	stc    
  43fbfb:	push   0x6d
  43fbfd:	mov    WORD PTR [ebx+0x7e531d29],es
  43fc03:	and    ah,BYTE PTR [eax-0x660a44f7]
  43fc09:	push   edi
  43fc0a:	stc    
  43fc0b:	adc    BYTE PTR [ecx+edx*2],ah
  43fc0e:	stc    
  43fc0f:	jmp    0x16680111
  43fc14:	pusha  
  43fc15:	push   edi
  43fc16:	dec    edi
  43fc17:	pop    esp
  43fc18:	inc    edx
  43fc19:	pop    esp
  43fc1a:	cli    
  43fc1b:	push   es
  43fc1c:	push   eax
  43fc1d:	ret    0x9e8
  43fc20:	jp     0x43fc79
  43fc22:	stc    
  43fc23:	bound  eax,QWORD PTR [edi+0xb]
  43fc26:	enter  0x7d6a,0x88
  43fc2a:	add    eax,0xe4ccbfb7
  43fc2f:	push   esp
  43fc30:	mov    ah,0xd2
  43fc32:	(bad)
  43fc35:	cld    
  43fc36:	and    ecx,esi
  43fc38:	sbb    DWORD PTR [edi+0x51],edx
  43fc3b:	pop    ds
  43fc3c:	mov    ecx,eax
  43fc3e:	mov    esp,DWORD PTR [eax+eax*1+0x0]
	...
  43fc52:	add    BYTE PTR [eax],al
  43fc54:	and    dl,BYTE PTR [esi-0x7]
  43fc57:	mov    dh,0x66
  43fc59:	or     BYTE PTR [ebx-0x73],bh
  43fc5c:	out    dx,al
  43fc5d:	std    
  43fc5e:	sub    ebp,ecx
  43fc60:	mov    dh,0xd2
  43fc62:	(bad)  
  43fc63:	cmc    
  43fc64:	xor    edx,DWORD PTR [eax+0x74]
  43fc67:	jmp    0xac33:0x62f94b35
  43fc6e:	stc    
  43fc6f:	add    BYTE PTR [ebx],bh
  43fc71:	test   DWORD PTR fs:[ebp+0x58],ecx
  43fc75:	mov    ebp,0x62508d85
  43fc7a:	idiv   edi
  43fc7c:	xor    al,0x4c
  43fc7e:	jecxz  0x43fc7f
  43fc80:	pop    ebx
  43fc81:	pinsrw mm0,WORD PTR [ecx+edx*2],0x4c
  43fc86:	je     0x43fc8b
  43fc88:	pop    ds
  43fc89:	sbb    bh,dh
  43fc8b:	mov    edx,DWORD PTR [ecx]
  43fc8d:	test   eax,0xd1fbfff7
  43fc92:	dec    ebp
  43fc93:	lock rol DWORD PTR ds:[ebp-0x89c350c],1
  43fc9b:	call   0x3b33f4
  43fca0:	cmovns eax,DWORD PTR [eax*4-0x7d042734]
  43fca8:	xchg   edi,eax
  43fca9:	arpl   WORD PTR [ebp-0x7c433fbb],ax
  43fcaf:	test   DWORD PTR [eax+0x63],esi
  43fcb2:	idiv   edi
  43fcb4:	leave  
  43fcb5:	shl    esp,1
  43fcb7:	inc    BYTE PTR [eax]
	...
  43fcc9:	add    BYTE PTR [eax],al
  43fccb:	add    BYTE PTR [ebx+0x64],cl
  43fcce:	call   0xf7a7b3fc
  43fcd3:	adc    DWORD PTR [eax],0xffffff8f
  43fcd6:	jge    0x43fc98
  43fcd8:	loopne 0x43fc62
  43fcda:	jnp    0x43fca7
  43fcdc:	or     edx,eax
  43fcde:	jge    0x43fd04
  43fce0:	sti    
  43fce1:	arpl   di,si
  43fce3:	(bad)  
  43fce4:	jmp    0x89d14650
  43fce9:	pop    edi
  43fcea:	idiv   bh
  43fcec:	dec    ebx
  43fced:	xor    eax,DWORD PTR [edx]
  43fcef:	jmp    0x43fd4c
  43fcf1:	fs jnp 0x43fcb8
  43fcf4:	adc    BYTE PTR [edi],cl
  43fcf6:	shl    BYTE PTR [edi+ecx*1+0x9],0xc3
  43fcfb:	push   DWORD PTR [ebp+0x38fc4fed]
  43fd01:	stos   DWORD PTR es:[edi],eax
  43fd02:	call   0x21272b57
  43fd07:	stc    
  43fd08:	fcmovbe st,st(0)
  43fd0a:	ja     0x43fc97
  43fd0c:	leave  
  43fd0d:	xlat   BYTE PTR ds:[ebx]
  43fd0e:	in     eax,0xf9
  43fd10:	cmp    al,0xbb
  43fd12:	sbb    cl,bh
  43fd14:	ret    0x7be8
  43fd17:	mov    ebx,0xf9e5b185
  43fd1c:	popf   
  43fd1d:	test   edx,ebx
  43fd1f:	stc    
  43fd20:	stos   BYTE PTR es:[edi],al
  43fd21:	mov    edx,0x793804c0
  43fd26:	jo     0x43fd25
  43fd28:	aaa    
  43fd29:	and    ch,0x85
  43fd2c:	clc    
  43fd2d:	test   BYTE PTR [ecx],dh
  43fd2f:	mov    DWORD PTR [eax],0x0
	...
  43fd41:	add    BYTE PTR [eax],al
  43fd43:	add    dh,cl
  43fd45:	mov    bl,0x18
  43fd47:	stc    
  43fd48:	xor    BYTE PTR [esi+0x6f],0xe
  43fd4c:	mov    esi,0x72f934bb
  43fd51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fd52:	outs   dx,DWORD PTR ds:[esi]
  43fd53:	push   es
  43fd54:	lods   al,BYTE PTR ds:[esi]
  43fd55:	sbb    ebp,ecx
  43fd57:	jae    0x43fd11
  43fd59:	dec    edi
  43fd5a:	push   0xaa33e1f0
  43fd5f:	xchg   edi,eax
  43fd60:	push   edx
  43fd61:	inc    esi
  43fd62:	out    0x85,al
  43fd64:	xor    BYTE PTR [ebp-0x1a],dl
  43fd67:	stc    
  43fd68:	inc    edx
  43fd69:	les    edi,FWORD PTR [eax]
  43fd6b:	cld    
  43fd6c:	in     al,0xbb
  43fd6e:	js     0x43fd64
  43fd70:	xor    esp,DWORD PTR [esi-0x1a]
  43fd73:	call   0xfa2a50a4
  43fd78:	ss std 
  43fd7a:	clc    
  43fd7b:	xor    ch,0x84
  43fd7e:	add    DWORD PTR [ebp-0x2],edi
  43fd81:	add    eax,0xec09537a
  43fd86:	inc    eax
  43fd87:	cld    
  43fd88:	gs (bad) 
  43fd8a:	outs   dx,BYTE PTR ds:[esi]
  43fd8b:	adc    cl,0x4e
  43fd8e:	call   0xece9:0x9b1d3eea
  43fd95:	dec    esi
  43fd96:	pusha  
  43fd97:	nop
  43fd98:	pop    ecx
  43fd99:	dec    esi
  43fd9a:	sub    dl,0x32
  43fd9d:	or     eax,0x4ecceb0f
  43fda2:	jg     0x43fd62
  43fda4:	ror    DWORD PTR [esi+0x6a],cl
  43fda7:	xchg   BYTE PTR [eax],al
	...
  43fdb9:	add    BYTE PTR [eax],al
  43fdbb:	add    cl,bh
  43fdbd:	xchg   ebx,eax
  43fdbe:	ins    BYTE PTR es:[edi],dx
  43fdbf:	ret    
  43fdc0:	inc    ecx
  43fdc1:	xchg   edx,eax
  43fdc2:	mov    si,0x1aac
  43fdc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fdc7:	out    0x30,eax
  43fdc9:	adc    al,0x3
  43fdcb:	jmp    0x43fd69
  43fdcd:	dec    esi
  43fdce:	je     0x43fd60
  43fdd0:	loope  0x43fe20
  43fdd2:	cmp    ch,dl
  43fdd4:	cmp    bl,BYTE PTR [ebx+eax*8]
  43fdd7:	jmp    0x432e:0x78954e8c
  43fdde:	and    edx,ebp
  43fde0:	jl     0x43fdfa
  43fde2:	pop    esp
  43fde3:	jae    0x43fe51
  43fde5:	dec    esi
  43fde6:	adc    bl,bl
  43fde8:	mov    ds:0xe0ea0a39,eax
  43fded:	push   ebx
  43fdee:	jmp    0x43fd70
  43fdf0:	jne    0x43fdb5
  43fdf2:	out    0x86,al
  43fdf4:	js     0x43fe44
  43fdf6:	pop    esi
  43fdf7:	nop
  43fdf8:	(bad)  [esi-0x16]
  43fdfb:	jmp    0xe98f0a38
  43fe00:	cmp    al,0x4e
  43fe02:	outs   dx,BYTE PTR ds:[esi]
  43fe03:	jg     0x43fdaa
  43fe05:	dec    esi
  43fe06:	shr    cl,cl
  43fe08:	xor    BYTE PTR [ecx-0x1a],bl
  43fe0b:	mov    eax,0xe94f14b0
  43fe10:	sbb    al,0x4e
  43fe12:	(bad)  
  43fe13:	repz mov ds:0xca62009e,eax
  43fe19:	xor    esi,DWORD PTR [ecx-0x1b]
  43fe1c:	ror    DWORD PTR [esi],1
  43fe1e:	outs   dx,BYTE PTR ds:[esi]
  43fe1f:	out    dx,eax
	...
  43fe34:	rcl    DWORD PTR [esi+0x35],0xc0
  43fe38:	outs   dx,DWORD PTR gs:[esi]
  43fe3a:	test   DWORD PTR [ebp+edx*4+0x48],ebp
  43fe3e:	stc    
  43fe3f:	mov    fs,WORD PTR [eax+0x1a]
  43fe42:	adc    BYTE PTR [esi+0x185047cc],al
  43fe48:	fsub   QWORD PTR [ecx]
  43fe4a:	or     BYTE PTR [esi-0x24],dh
  43fe4d:	inc    edi
  43fe4e:	jge    0x43fdf5
  43fe50:	shl    esi,0x5a
  43fe53:	sbb    dh,cl
  43fe55:	jecxz  0x43fddc
  43fe57:	inc    esp
  43fe58:	cli    
  43fe59:	or     al,BYTE PTR [ebp-0x7a9a37cf]
  43fe5f:	aaa    
  43fe60:	mov    al,0x20
  43fe62:	jo     0x43feaa
  43fe64:	mov    WORD PTR [edi+0x25],es
  43fe67:	push   ds
  43fe68:	shl    BYTE PTR [eax],0x68
  43fe6b:	ss pushf 
  43fe6d:	inc    edi
  43fe6e:	push   0x8fb939
  43fe73:	xchg   ebx,eax
  43fe74:	mov    bh,0xdc
  43fe76:	xchg   DWORD PTR [ebp+ebx*4+0x46],edi
  43fe7a:	stc    
  43fe7b:	push   ss
  43fe7c:	out    dx,al
  43fe7d:	and    BYTE PTR [eax+0xe],al
  43fe80:	dec    esp
  43fe81:	inc    edi
  43fe82:	xchg   DWORD PTR [ebp+ebp*8+0x46],ebp
  43fe86:	stc    
  43fe87:	dec    bh
  43fe89:	add    BYTE PTR [eax-0xa],ah
  43fe8c:	pop    ebp
  43fe8d:	inc    edi
  43fe8e:	xchg   DWORD PTR [edx+esi*2+0x4dc14b15],ebx
  43fe95:	mov    eax,ds:0xbe18
	...
  43feaa:	add    BYTE PTR [eax],al
  43feac:	jns    0x43fe3d
  43feae:	test   DWORD PTR [ecx+0x640c5431],esi
  43feb4:	icebp  
  43feb5:	ret    
  43feb6:	adc    eax,DWORD PTR [eax]
  43feb8:	xor    eax,0x1c000075
  43febd:	(bad)  
  43febe:	lods   eax,DWORD PTR ds:[esi]
  43febf:	hlt    
  43fec0:	inc    edx
  43fec1:	cmp    bh,dh
  43fec3:	mov    eax,DWORD PTR [edi-0x1c]
  43fec6:	jmp    0x43fe6d
  43fec8:	and    al,0x84
  43feca:	in     eax,dx
  43fecb:	call   DWORD PTR [ebx-0x28]
  43fece:	push   esi
  43fecf:	mov    ebx,DWORD PTR [edi]
  43fed1:	fadd   QWORD PTR [ebx-0x33ad6e1b]
  43fed7:	int3   
  43fed8:	and    BYTE PTR ds:0x520cccc,al
  43fede:	int3   
  43fedf:	int3   
  43fee0:	test   eax,0x4083ecca
  43fee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fee6:	dec    esi
  43fee7:	mov    ebx,ecx
  43fee9:	inc    esp
  43feea:	sub    al,0xc0
  43feec:	xlat   BYTE PTR ds:[ebx]
  43feed:	inc    ebx
  43feee:	je     0x43ff1d
  43fef0:	imul   edi,ecx,0x7
  43fef3:	add    BYTE PTR [eax+edx*4+0x43b87d85],cl
  43fefa:	popf   
  43fefb:	mov    DWORD PTR [ecx+0x38],ebx
  43fefe:	add    DWORD PTR [ebp-0x40],0x1c083dcb
  43ff05:	clc    
  43ff06:	clc    
  43ff07:	dec    DWORD PTR [eax+edx*4+0x68a85585]
  43ff0e:	jbe    0x43ff0b
	...
  43ff24:	ret    
  43ff25:	aaa    
  43ff26:	jnp    0x43feec
  43ff28:	pop    eax
  43ff29:	xlat   BYTE PTR ds:[ebx]
  43ff2a:	push   esi
  43ff2b:	mov    ebp,DWORD PTR [ecx+0x5c08bad5]
  43ff31:	retf   
  43ff32:	inc    ebp
  43ff33:	or     BYTE PTR ds:0x4cfff8f8,ch
  43ff39:	nop
  43ff3a:	sub    edx,edx
  43ff3c:	fs mov al,0xf3
  43ff3f:	call   DWORD PTR [ebx]
  43ff41:	adc    ah,al
  43ff43:	add    al,0xb5
  43ff45:	test   BYTE PTR [ebp-0x1d],dh
  43ff48:	cmp    al,0xfb
  43ff4b:	(bad)  
  43ff4c:	out    dx,al
  43ff4d:	add    DWORD PTR [eax-0x4805fe34],edi
  43ff53:	int3   
  43ff54:	stc    
  43ff55:	stos   BYTE PTR es:[edi],al
  43ff56:	jne    0x43ff44
  43ff58:	imul   esi,DWORD PTR [ecx+0x2c30086f],0x6f
  43ff5f:	or     BYTE PTR [eax+0x74],al
  43ff62:	xchg   BYTE PTR [edx-0x78],bl
  43ff65:	clc    
  43ff66:	(bad)  
  43ff67:	push   DWORD PTR [esi]
  43ff69:	fsubr  st(4),st
  43ff6b:	add    BYTE PTR [ebp-0x448c02ca],dh
  43ff71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ff72:	fmul   QWORD PTR [edx-0x7a1e3b31]
  43ff78:	jnp    0x43ff80
  43ff7a:	jbe    0x43ffc6
  43ff7c:	cdq    
  43ff7d:	ror    DWORD PTR [edx+0x14],0x5
  43ff81:	or     dl,ah
  43ff83:	into   
  43ff84:	add    ecx,DWORD PTR [edi-0x3]
  43ff87:	clc    
	...
  43ff9c:	enter  0xc23c,0x3d
  43ffa0:	mov    ch,0xb5
  43ffa2:	rcl    BYTE PTR [eax],0xc6
  43ffa5:	js     0x43ffe9
  43ffa7:	pop    ebx
  43ffa8:	ja     0x43ffe7
  43ffaa:	std    
  43ffab:	retf   
  43ffac:	jno    0x43ff5b
  43ffae:	mov    eax,0xb88569cc
  43ffb3:	int3   
  43ffb4:	cmp    DWORD PTR [ebp-0x48],0x760c79cc
  43ffbb:	in     al,dx
  43ffbc:	ss dec ebp
  43ffbe:	icebp  
  43ffbf:	push   eax
  43ffc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ffc1:	xchg   ecx,eax
  43ffc2:	sub    edi,DWORD PTR [ebx-0x53]
  43ffc5:	(bad)  
  43ffc6:	test   DWORD PTR [edx-0x7abe210e],0x14bf1c58
  43ffd0:	mov    ch,0x8f
  43ffd2:	cmp    DWORD PTR [ebx-0x5a],edi
  43ffd5:	xchg   edi,eax
  43ffd6:	push   ds
  43ffd7:	out    dx,eax
  43ffd8:	mov    eax,ds:0x953d5e97
  43ffdd:	xchg   esi,eax
  43ffde:	and    DWORD PTR [eax-0x5a],esp
  43ffe1:	pushf  
  43ffe2:	and    DWORD PTR [ebx+ebp*1+0x6ce6ba4b],ebp
  43ffe9:	push   ss
  43ffea:	int3   
  43ffeb:	dec    eax
  43ffec:	inc    ebx
  43ffed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ffee:	out    0x2c,eax
  43fff0:	aas    
  43fff1:	xor    bh,ah
  43fff3:	add    esi,DWORD PTR [ebp-0x22b21e3d]
  43fff9:	lods   al,BYTE PTR ds:[esi]
  43fffa:	(bad)  
  43fffb:	out    0xdc,al
  43fffd:	sbb    al,0x1c
  43ffff:	or     al,0x0
	...
  440011:	add    BYTE PTR [eax],al
  440013:	add    BYTE PTR [edx+0x1c],ch
  440016:	sbb    al,0xf0
  440018:	sbb    DWORD PTR [esp],0xffffffe8
  44001c:	gs aaa 
  44001e:	and    esi,ecx
  440020:	mov    esp,0xa9bf664a
  440025:	adc    al,0x27
  440027:	outs   dx,DWORD PTR ds:[esi]
  440028:	mov    esi,0xac8c9fe9
  44002d:	dec    edx
  44002e:	push   edx
  44002f:	inc    esi
  440030:	cmp    BYTE PTR [esp+ebp*4],dh
  440033:	rol    ecx,0x8f
  440036:	xchg   esi,eax
  440037:	pop    ebx
  440038:	gs (bad) 
  44003a:	out    0x3,eax
  44003c:	adc    edx,DWORD PTR [ecx-0x58591966]
  440042:	or     al,BYTE PTR [edx-0x4b]
  440045:	push   ss
  440046:	aas    
  440047:	cmp    BYTE PTR [ecx-0x65],0xde
  44004b:	(bad)  
  44004c:	loope  0x44001c
  44004e:	jg     0x440053
  440050:	cmc    
  440051:	(bad)  
  440052:	out    0x59,eax
  440054:	pop    edx
  440055:	loope  0x440059
  440057:	adc    BYTE PTR [ebp+0x3003a66a],ch
  44005d:	fadd   QWORD PTR [eax]
  44005f:	std    
  440060:	mov    esp,0x7f60f8de
  440065:	fild   WORD PTR [ebp+0x4d12c134]
  44006b:	xor    eax,0x6a14deac
  440070:	cmc    
  440071:	call   0x7058:0xd49fea87
	...
  44008c:	pushf  
  44008d:	scas   eax,DWORD PTR es:[edi]
  44008e:	xchg   DWORD PTR [edx-0x6b],eax
  440091:	adc    cl,BYTE PTR [ebp+0x8fb9a1]
  440097:	repnz cmp DWORD PTR [esi+0x48803a17],edi
  44009e:	adc    edi,ebp
  4400a0:	icebp  
  4400a1:	mov    eax,DWORD PTR [eax]
  4400a3:	push   0xfffffff5
  4400a5:	xchg   esi,eax
  4400a6:	push   ebp
  4400a7:	das    
  4400a8:	or     DWORD PTR [edi],esp
  4400aa:	stc    
  4400ab:	xchg   al,bl
  4400ad:	out    0x85,eax
  4400af:	test   BYTE PTR [edx+0x9],dh
  4400b2:	adc    al,0xe9
  4400b4:	cmp    eax,0x4c600cce
  4400b9:	xlat   BYTE PTR ds:[ebx]
  4400ba:	xor    eax,0x8598252e
  4400bf:	outs   dx,DWORD PTR ds:[esi]
  4400c0:	sub    eax,0x1fe90090
  4400c5:	cwde   
  4400c6:	test   DWORD PTR [esi+eax*8-0x1d42367e],ebx
  4400cd:	dec    esi
  4400ce:	jmp    esi
  4400d0:	mov    dh,0x8f
  4400d2:	add    BYTE PTR [edx+0x3],ah
  4400d5:	sbb    BYTE PTR [eax],al
  4400d7:	jmp    0xf024cb92
  4400dc:	xor    eax,0xbc94fe38
  4400e1:	retf   0xebe8
  4400e4:	rcl    BYTE PTR [ebp+edi*2+0x12bcb701],cl
  4400eb:	add    BYTE PTR [ebx+0xfff98c],ah
	...
  440101:	add    BYTE PTR [eax],al
  440103:	add    BYTE PTR [ebp+ecx*4-0x1d],bl
  440107:	push   cs
  440108:	xchg   ebx,eax
  440109:	mov    edx,?
  44010b:	dec    DWORD PTR [ebp+ecx*4-0x1d]
  44010f:	push   es
  440110:	arpl   WORD PTR [esi-0x72e3ffff],cx
  440116:	add    DWORD PTR [esi+0x8ca0],0xffffff95
  44011d:	mov    bh,0x70
  44011f:	mov    DWORD PTR [edi-0x15],esi
  440122:	cmp    DWORD PTR [ebx+0x78],0x97743bc4
  440129:	ret    0x8c
  44012c:	or     al,0x8d
  44012e:	or     DWORD PTR [ebx+0x8c54],0x89308a67
  440138:	dec    edi
  440139:	clc    
  44013a:	(bad)  
  44013b:	dec    esp
  44013d:	(bad)  
  44013e:	mov    esi,0xc4778d
  440143:	add    ah,bl
  440145:	cmc    
  440146:	add    al,BYTE PTR [eax]
  440148:	int3   
  440149:	mov    ebx,gs
  44014b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44014c:	push   edi
  44014d:	test   BYTE PTR [eax-0x77],cl
  440150:	daa    
  440151:	dec    ebp
  440152:	add    BYTE PTR [eax],al
  440154:	pushf  
  440155:	(bad)  
  440156:	dec    eax
  440157:	dec    esp
  440158:	mov    edi,0xd08b8132
  44015d:	mov    WORD PTR [eax],es
  44015f:	add    BYTE PTR ds:0x48b18b8,al
  440165:	rol    DWORD PTR [eax],0x0
	...
  44017c:	mov    WORD PTR [edi],cs
  44017e:	icebp  
  44017f:	or     al,0x41
  440181:	loop   0x4401b6
  440183:	xlat   BYTE PTR ds:[ebx]
  440184:	push   ecx
  440185:	out    0xbf,al
  440187:	and    DWORD PTR [esp+ecx*4+0x37b50000],0xfffffffd
  44018f:	push   DWORD PTR [ebp-0x4a678a53]
  440195:	ss std 
  440197:	xchg   dh,bh
  440199:	push   cs
  44019a:	js     0x44012c
  44019c:	and    DWORD PTR [esi],esi
  44019e:	std    
  44019f:	jmp    FWORD PTR [eiz*1+0x163d8561]
  4401a6:	add    al,0x0
  4401a8:	mov    ch,0xbf
  4401aa:	mov    DWORD PTR [eax-0x7b02c94b],eax
  4401b0:	inc    ebp
  4401b1:	adc    al,BYTE PTR [eax+eax*1]
  4401b4:	mov    ch,0xbd
  4401b6:	dec    edi
  4401b7:	cld    
  4401b8:	cmp    al,0xe5
  4401ba:	mov    BYTE PTR [eax],al
  4401bc:	mov    ch,0x36
  4401be:	adc    cl,dh
  4401c0:	mov    dh,0xae
  4401c2:	mov    esp,0xf236b500
  4401c7:	(bad)
  4401cb:	push   DWORD PTR [esi]
  4401cd:	idiv   ebp
  4401cf:	or     al,0x2
  4401d1:	scas   eax,DWORD PTR es:[edi]
  4401d2:	pop    ecx
  4401d3:	or     BYTE PTR [edi*2+0x72668744],bh
  4401da:	mov    ebx,DWORD PTR [eax-0x2ca2b]
	...
  4401f4:	pop    esi
  4401f5:	scas   eax,DWORD PTR es:[edi]
  4401f6:	pushf  
  4401f7:	in     al,0xb5
  4401f9:	cmp    ch,bh
  4401fb:	pop    ecx
  4401fc:	out    0x78,al
  4401fe:	cmp    eax,0xc2fc9885
  440203:	adc    al,0xb5
  440205:	mov    ecx,0xb20808db
  44020a:	sbb    ecx,edx
  44020c:	add    dh,bl
  44020e:	mov    DWORD PTR [ebx],edx
  440210:	popf   
  440211:	popf   
  440212:	inc    ecx
  440213:	add    BYTE PTR [edi],cl
  440215:	inc    ecx
  440216:	mov    WORD PTR [ebp-0x67],cs
  440219:	(bad)
  44021d:	shl    edi,cl
  44021f:	imul   edi,DWORD PTR [ebp+0x3203a7bc],0xffffffd3
  440226:	mov    edi,0x8d8b9090
  44022b:	aam    0xe5
  44022d:	sbb    BYTE PTR [esi+0x2f],bh
  440230:	cmp    cl,BYTE PTR [eax+0x37ad5f60]
  440236:	push   ebx
  440238:	xor    al,BYTE PTR [edi+0x6e]
  44023b:	shl    eax,cl
  44023d:	ds push esp
  44023f:	adc    edi,DWORD PTR [eax]
  440241:	int    0xdf
  440243:	retf   0xd7d8
  440246:	fild   WORD PTR [ebx]
  440248:	mov    ch,0x8f
  44024a:	sar    BYTE PTR [edx],1
  44024c:	or     al,0x47
  44024e:	mov    edx,0xdc466436
  440253:	(bad)  
  440254:	fst    st(2)
  440256:	out    0x86,eax
	...
  44026c:	stc    
  44026d:	xchg   edi,eax
  44026e:	ds (bad) 
  440270:	mul    ebp
  440272:	cmp    cl,BYTE PTR [edi-0x85a1b2a]
  440278:	ficomp DWORD PTR [edx-0x65]
  44027b:	iret   
  44027c:	add    DWORD PTR [ebx+esi*4-0x31],edx
  440280:	stc    
  440281:	push   ebx
  440282:	stos   DWORD PTR es:[edi],eax
  440283:	iret   
  440284:	icebp  
  440285:	push   ebx
  440286:	sbb    al,0x8f
  440288:	leave  
  440289:	sbb    ah,BYTE PTR [eax+edx*1]
  44028c:	cmp    ah,dl
  44028e:	out    dx,eax
  44028f:	xor    edx,DWORD PTR [ebx]
  440291:	nop
  440292:	int    0x3
  440294:	sbb    edx,DWORD PTR [eax+0x4443ebb8]
  44029a:	dec    edx
  44029b:	loop   0x44028b
  44029d:	push   ecx
  44029e:	out    dx,eax
  44029f:	add    edi,DWORD PTR [ecx+0x53]
  4402a2:	sub    ecx,edi
  4402a4:	jno    0x4402f9
  4402a6:	add    BYTE PTR [ebx+ebp*1+0x43964d33],bl
  4402ad:	retf   0x2e08
  4402b0:	mov    dh,0x8f
  4402b2:	add    cl,ch
  4402b4:	mov    dh,0xc
  4402b6:	(bad)  
  4402b7:	cs scas eax,DWORD PTR es:[edi]
  4402b9:	pop    DWORD PTR [eax]
  4402bb:	jmp    0xeb211276
  4402c0:	not    DWORD PTR [eax+0x2]
  4402c3:	jmp    0x6944927e
  4402c8:	pop    ebx
  4402c9:	inc    esi
  4402ca:	ret    0xb6e8
  4402cd:	pop    DWORD PTR [eax]
  4402cf:	jmp    0x4402d4
	...
  4402e4:	jmp    0xb6ea17ab
  4402e9:	pop    DWORD PTR [eax]
  4402eb:	jmp    0xea445326
  4402f0:	mov    dh,0x8f
  4402f2:	add    BYTE PTR [esi-0x1606b941],ch
  4402f8:	mov    dh,0xea
  4402fa:	mov    ebp,0x748af3bf
  4402ff:	(bad)  
  440301:	inc    ebp
  440302:	stc    
  440303:	jmp    0xea0552be
  440308:	mov    ecx,0x9be9008f
  44030d:	add    al,0xf2
  44030f:	stos   DWORD PTR es:[edi],eax
  440310:	sar    DWORD PTR [ebx-0x704951f4],0x0
  440317:	jmp    0xeb445312
  44031c:	mov    dh,0x8f
  44031e:	add    BYTE PTR [eax+edi*2],cl
  440321:	push   esp
  440322:	int3   
  440323:	xor    eax,0x2dcc5485
  440328:	test   DWORD PTR [esp+ecx*8+0x1a],edx
  44032c:	jno    0x44033f
  44032e:	stc    
  44032f:	aad    0xa6
  440331:	ret    0xf9
  440334:	repz out 0x23,eax
  440337:	push   ebx
  440338:	sub    dh,BYTE PTR [ebx-0x4a58ccf8]
  44033e:	stc    
  44033f:	push   edx
  440340:	mov    ds:0x1fdf113c,eax
  440345:	xchg   ecx,eax
  440346:	xor    eax,0x0
	...
  440359:	add    BYTE PTR [eax],al
  44035b:	add    bh,cl
  44035d:	push   edi
  44035e:	or     al,0x85
  440360:	mov    edx,0xc3570cdc
  440365:	cmp    al,0xb9
  440367:	adc    bl,BYTE PTR [ecx+edx*4]
  44036a:	add    esi,0x22
  44036d:	test   BYTE PTR [ebx-0x7e72dd77],bh
  440373:	ds inc edx
  440375:	test   BYTE PTR [ebx-0x33aa9f34],bh
  44037b:	int3   
  44037c:	push   eax
  44037d:	push   ebp
  44037e:	int3   
  44037f:	int3   
  440380:	fst    DWORD PTR [edx]
  440382:	in     al,dx
  440383:	mov    ecx,ecx
  440385:	cmp    edi,DWORD PTR [esp+ebp*8-0x14]
  440389:	xchg   BYTE PTR [edi-0x73],cl
  44038c:	fldenv [ebx+0x50]
  44038f:	lea    edi,[ecx+0x2845855b]
  440395:	push   ss
  440396:	inc    ebp
  440397:	cld    
  440398:	wrmsr  
  44039a:	call   0xf77446d0
  44039f:	mov    edx,DWORD PTR [ecx-0x273b8461]
  4403a5:	or     eax,0x13d374c1
  4403aa:	cmp    eax,0x745059fc
  4403af:	sbb    BYTE PTR [edi+0x7d],dl
  4403b2:	clc    
  4403b3:	push   edi
  4403b4:	into   
  4403b5:	adc    cl,BYTE PTR [ebp-0xc]
  4403b8:	outs   dx,BYTE PTR ds:[esi]
  4403b9:	adc    ecx,DWORD PTR [ebp-0x10]
  4403bc:	imul   edi,DWORD PTR [edx+0x50],0x51
	...
  4403d4:	mov    ch,0xdd
  4403d6:	repnz das 
  4403d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4403d9:	idiv   ah
  4403db:	test   BYTE PTR [ebp-0x7d06ab22],cl
  4403e1:	test   DWORD PTR [eax+0x5a],eax
  4403e4:	sar    DWORD PTR cs:[edx],cl
  4403e7:	mov    ebp,0xccc9a281
  4403ec:	jns    0x440468
  4403ee:	leave  
  4403ef:	int3   
  4403f0:	jno    0x440464
  4403f2:	leave  
  4403f3:	int3   
  4403f4:	imul   eax,DWORD PTR [ebx],0xfce4ec8c
  4403fa:	mov    esi,DWORD PTR [ebx-0x47]
  4403fd:	or     DWORD PTR [ebp-0x7cbd0779],edi
  440403:	repnz rol DWORD PTR [edi],0x8c
  440407:	or     bh,BYTE PTR [eax]
  440409:	outs   dx,DWORD PTR ds:[esi]
  44040a:	push   ecx
  44040b:	and    eax,0x4ff8833e
  440410:	xor    BYTE PTR [ebx-0x20],ch
  440413:	push   eax
  440414:	cs jae 0x44040b
  440417:	dec    ebp
  440418:	gs xchg ecx,ebx
  44041b:	adc    eax,ecx
  44041d:	push   0xf638003d
  440422:	push   esi
  440423:	adc    dl,bh
  440425:	(bad)  
  440426:	in     eax,dx
  440427:	or     al,0x75
  440429:	ss jle 0x440424
  44042c:	xchg   ebx,eax
  44042d:	mov    ds:0xbef52cfe,eax
  440432:	inc    edx
  440433:	add    al,0x2e
  440435:	jae    0x440417
  440437:	pop    edx
	...
  44044c:	or     edi,DWORD PTR ds:[edi]
  44044f:	mov    ebp,0xcccff9f9
  440454:	icebp  
  440455:	icebp  
  440456:	iret   
  440457:	int3   
  440458:	jmp    0x53089ff
  44045d:	fwait
  44045e:	test   DWORD PTR [ebx-0x47],esi
  440461:	(bad)  
  440462:	push   ss
  440463:	les    edi,FWORD PTR [edx]
  440465:	int    0x5b
  440467:	mov    DWORD PTR [edi-0x4074e744],esp
  44046d:	or     al,0x20
  44046f:	pop    eax
  440470:	rcl    BYTE PTR [esi],1
  440472:	pushf  
  440473:	div    edx
  440475:	adc    al,0xa4
  440477:	(bad)  
  440479:	push   ss
  44047a:	lods   al,BYTE PTR ds:[esi]
  44047b:	repz add al,ah
  44047e:	cwde   
  44047f:	faddp  st(6),st
  440481:	xor    ebp,0x43
  440484:	mov    ch,0xc
  440486:	daa    
  440487:	pop    ecx
  440488:	lds    eax,FWORD PTR [edx-0x4]
  44048b:	repz ror edi,0xe7
  44048f:	or     BYTE PTR [ebp+0x6a],0x7c
  440493:	add    DWORD PTR [eax-0x4eb98fb1],edx
  440499:	push   ss
  44049a:	lods   al,BYTE PTR ds:[esi]
  44049b:	fisttp WORD PTR [edi+0x68410416]
  4404a1:	push   esp
  4404a2:	mov    bl,0xcf
  4404a4:	icebp  
  4404a5:	push   ebx
  4404a6:	stos   DWORD PTR es:[edi],eax
  4404a7:	iret   
  4404a8:	jmp    0x21cf4100
  4404ad:	btc    DWORD PTR [ebx],ecx
	...
  4404c4:	addr16 push ss
  4404c6:	cmp    al,0x10
  4404c8:	fs jle 0x440485
  4404cb:	sub    ch,0x42
  4404ce:	leavew 
  4404d0:	in     al,dx
  4404d1:	xchg   BYTE PTR [edx-0xee989a9],dh
  4404d7:	sbb    ch,ah
  4404d9:	mov    ebx,0x13da69da
  4404de:	sub    al,0xe0
  4404e0:	fidivr DWORD PTR gs:[eax]
  4404e3:	lea    ecx,[esi+0x47]
  4404e6:	jo     0x440548
  4404e8:	rol    DWORD PTR [edx-0x2c],0xb
  4404ec:	stos   DWORD PTR es:[edi],eax
  4404ed:	iret   
  4404ee:	add    cl,ch
  4404f0:	inc    ecx
  4404f1:	into   
  4404f2:	clc    
  4404f3:	push   0xffffff8e
  4404f5:	dec    eax
  4404f6:	jae    0x440501
  4404f8:	xchg   BYTE PTR cs:[eax],dl
  4404fb:	cli    
  4404fc:	test   BYTE PTR [edi+0x4f3d3ef9],0x74
  440503:	clc    
  440504:	imul   esp,DWORD PTR [eax-0x79],0xffffffaf
  440508:	mov    edx,0x5b317de8
  44050d:	(bad)  
  44050e:	(bad)  
  44050f:	ss mov al,0xc
  440512:	jecxz  0x4404a0
  440514:	ja     0x440522
  440516:	inc    ebx
  440517:	and    DWORD PTR [edi],ebp
  440519:	fdivp  st(4),st
  44051b:	mov    esi,0xb4e30c98
  440520:	ja     0x440575
  440522:	int3   
  440523:	sbb    eax,0x35cc537a
	...
  44053c:	jb     0x440591
  44053e:	int3   
  44053f:	sub    eax,0x9ccc536a
  440544:	aas    
  440545:	xor    edx,DWORD PTR [edx+0x62]
  440548:	lea    edx,[ebx+0x5734bb2d]
  44054e:	stc    
  44054f:	add    edi,DWORD PTR fs:[ebx+0xb0b61fe]
  440556:	dec    ebx
  440557:	icebp  
  440558:	xor    eax,0xfd3d002a
  44055d:	enter  0xf374,0x6f
  440561:	mov    esi,0x8fb7702e
  440566:	add    cl,ch
  440568:	fisttp QWORD PTR [ecx-0x70491749]
  44056e:	add    BYTE PTR [edx+0x6cc774b7],dl
  440574:	pop    es
  440575:	mov    ebx,0xd63c3822
  44057a:	adc    BYTE PTR [eax],al
  44057c:	dec    ecx
  44057d:	retf   0x5014
  440580:	popf   
  440581:	jge    0x44057a
  440583:	adc    eax,0x393f94
  440588:	pop    ds
  440589:	div    DWORD PTR fs:[ebp-0x55]
  44058d:	fs or  eax,0xcd9f10
  440593:	mov    DWORD PTR [edx-0x77],esp
  440596:	jnp    0x440560
  440598:	sti    
  440599:	adc    DWORD PTR [ebp-0x3d],0x5d564d7f
	...
  4405b4:	iret   
  4405b5:	pop    edi
  4405b6:	int3   
  4405b7:	int3   
  4405b8:	push   ecx
  4405b9:	sbb    ah,ch
  4405bb:	push   esi
  4405bc:	inc    ebx
  4405bd:	sbb    BYTE PTR [ebp+0xc],dh
  4405c0:	iret   
  4405c1:	push   ecx
  4405c2:	test   DWORD PTR [ebp-0x74ec1845],0x74c00a63
  4405cc:	push   ebp
  4405cd:	jge    0x4405c6
  4405cf:	adc    eax,0x393d8c
  4405d4:	call   FWORD PTR [edx+0x4f]
  4405d7:	push   0x1c
  4405d9:	fs or  eax,0xcebb1c
  4405df:	adc    DWORD PTR [eax-0x6b],0x57
  4405e3:	mov    edx,DWORD PTR [edx-0x7d]
  4405e6:	push   ebp
  4405e7:	ret    
  4405e8:	rcl    DWORD PTR [esi],1
  4405ea:	in     al,dx
  4405eb:	mov    ebp,DWORD PTR [ecx-0x4378461]
  4405f1:	or     ecx,eax
  4405f3:	je     0x440604
  4405f5:	sbb    BYTE PTR [ecx],bh
  4405f7:	add    al,0xc9
  4405f9:	dec    esi
  4405fa:	int3   
  4405fb:	int3   
  4405fc:	dec    eax
  4405fd:	push   ecx
  4405fe:	int3   
  4405ff:	int3   
  440600:	sub    BYTE PTR [ecx-0x34],dl
  440603:	int3   
  440604:	or     BYTE PTR [ecx-0x34],dl
  440607:	int3   
  440608:	mov    ch,0x83
  44060a:	xchg   esp,ebp
  44060c:	ds ins BYTE PTR es:[edi],dx
  44060e:	or     al,0xc1
  440610:	mov    ch,0xd6
  440612:	idiv   BYTE PTR [esi*4+0x43ce9]
	...
  440629:	add    BYTE PTR [eax],al
  44062b:	add    BYTE PTR [ebp+0x7200405c],dh
  440631:	jbe    0x44063f
  440633:	push   eax
  440634:	mov    edi,0xf5c0fcf5
  440639:	xor    bl,BYTE PTR [ebp-0x3bc909ea]
  44063f:	inc    eax
  440640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440641:	inc    esi
  440642:	clc    
  440643:	cmp    al,0xb5
  440645:	jno    0x440684
  440647:	adc    al,0x5
  440649:	cs inc eax
  44064b:	add    BYTE PTR [edx-0xa],bh
  44064e:	hlt    
  44064f:	lahf   
  440650:	into   
  440651:	cmc    
  440652:	cld    
  440653:	shl    ch,0x8a
  440656:	add    al,0x0
  440658:	mov    ch,0x36
  44065a:	cmp    bh,BYTE PTR [esi-0x3336c947]
  440660:	jns    0x440604
  440662:	leave  
  440663:	int3   
  440664:	jno    0x4406e0
  440666:	leave  
  440667:	int3   
  440668:	imul   esi,DWORD PTR [edx-0x37],0x882501cc
  44066f:	pop    ecx
  440670:	leave  
  440671:	sbb    BYTE PTR [eax],dh
  440673:	call   0x487220
  440678:	cs in  eax,0xf0
  44067b:	test   BYTE PTR [edx+0x46],bh
  44067e:	add    ah,0xb1
  440681:	popf   
  440682:	aam    0x72
  440684:	mov    bh,0xbd
  440686:	aam    0x83
  440688:	add    edi,DWORD PTR [edx+0x2c]
  44068b:	test   DWORD PTR [esi+0x66],esi
  44068e:	mov    cl,BYTE PTR [ecx+0x0]
	...
  4406a1:	add    BYTE PTR [eax],al
  4406a3:	add    BYTE PTR [ecx-0x32b0cb68],bh
  4406a9:	mov    ?,WORD PTR [ebx-0x17704abb]
  4406af:	push   edx
  4406b0:	ror    DWORD PTR [esi-0x47340bea],0xf3
  4406b7:	sub    al,0x44
  4406b9:	lahf   
  4406ba:	data16 shr BYTE PTR [ecx+0x27eff676],0x96
  4406c2:	pop    esi
  4406c3:	aaa    
  4406c4:	mov    ebp,0xfcf41608
  4406c9:	fisub  DWORD PTR [esi]
  4406cb:	enter  0x4c69,0x2b
  4406cf:	enter  0x4c81,0xbc
  4406d3:	mov    ds,WORD PTR [ecx-0x52aea11a]
  4406d9:	adc    al,0x39
  4406db:	or     esi,DWORD PTR [ecx]
  4406dd:	push   edx
  4406de:	out    0x3,eax
  4406e0:	mov    ch,0xa
  4406e2:	test   eax,0xda5037f7
  4406e7:	jg     0x44070d
  4406e9:	nop
  4406ea:	out    0x3,eax
  4406ec:	add    al,0xb
  4406ee:	lahf   
  4406ef:	call   ecx
  4406f1:	ds mov ebp,0xa12994f
  4406f7:	inc    ecx
  4406f8:	leave  
  4406f9:	jbe    0x440761
  4406fb:	fcomi  st,st(2)
  4406fd:	ret    
  4406fe:	lds    eax,FWORD PTR [esi-0x78424d4]
  440704:	test   eax,0x4f823e
	...
  440719:	add    BYTE PTR [eax],al
  44071b:	add    BYTE PTR [ebp-0x5eab1dee],bh
  440721:	mov    ds:0x922bda68,al
  440726:	out    0x3,eax
  440728:	or     DWORD PTR [edx+0x3eff9c2a],0xdc5fdac2
  440732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440733:	push   edx
  440735:	or     DWORD PTR [eax],eax
  440737:	sub    DWORD PTR [ecx-0x53ca3fee],edi
  44073d:	adc    al,0x4a
  44073f:	int    0xa6
  440741:	adc    al,0x42
  440743:	rol    DWORD PTR [esi+0xa6acf38],1
  440749:	mov    BYTE PTR [ebp+0x3e13bd37],al
  44074f:	sub    eax,0xec745034
  440754:	inc    ebx
  440755:	leave  
  440756:	and    al,0x19
  440758:	cmp    dl,cl
  44075a:	sub    BYTE PTR [ecx],bl
  44075c:	jle    0x4407ac
  44075e:	jge    0x44078d
  440760:	scas   al,BYTE PTR es:[edi]
  440761:	adc    al,0x52
  440763:	std    
  440764:	inc    ebx
  440765:	jge    0x4407a7
  440767:	ins    BYTE PTR es:[edi],dx
  440768:	jbe    0x44072d
  44076a:	or     esp,DWORD PTR [edx-0x14]
  44076d:	jae    0x4407bf
  44076f:	jb     0x440765
  440771:	addr16 push eax
  440773:	sub    DWORD PTR ds:[esp+eax*8+0x1ce13be1],edi
  44077b:	(bad)  
  44077c:	clc    
  44077d:	ja     0x440702
  44077f:	sub    DWORD PTR [eax],eax
	...
  440791:	add    BYTE PTR [eax],al
  440793:	add    dl,ch
  440795:	mov    al,BYTE PTR [ebp-0x7a204d51]
  44079b:	scas   eax,DWORD PTR es:[edi]
  44079c:	sahf   
  44079d:	(bad)  
  44079f:	cmp    BYTE PTR [ebx],bh
  4407a1:	push   ebx
  4407a2:	or     BYTE PTR [edx-0x7c],dh
  4407a5:	fwait
  4407a6:	test   DWORD PTR [edi-0x32b5eb22],esp
  4407ac:	loopne 0x44078d
  4407ae:	stc    
  4407af:	sbb    BYTE PTR [ebx],bh
  4407b1:	push   ebx
  4407b2:	or     BYTE PTR [edx],bl
  4407b4:	icebp  
  4407b5:	mov    ebx,0x22bc58f9
  4407ba:	shl    BYTE PTR [esi],0xf4
  4407bd:	rcr    BYTE PTR [ecx+ebp*8],1
  4407c0:	mov    dh,0x8f
  4407c2:	add    BYTE PTR [eax],al
  4407c4:	ror    bl,cl
  4407c6:	jnp    0x4407a8
  4407c8:	xor    DWORD PTR [esi+0x19dc04ba],eax
  4407ce:	idiv   bh
  4407d0:	adc    ebx,DWORD PTR [eax+0x56]
  4407d3:	pop    ebp
  4407d4:	push   cs
  4407d5:	pop    DWORD PTR [eax]
  4407d7:	int3   
  4407d8:	and    BYTE PTR [edi-0x34],al
  4407db:	int3   
  4407dc:	push   edi
  4407dd:	rol    DWORD PTR [edi+edx*2],1
  4407e0:	push   edi
  4407e1:	pop    ebx
  4407e2:	xor    edi,ecx
  4407e4:	mov    edx,0x19f98393
  4407e9:	push   edi
  4407ea:	ins    DWORD PTR es:[edi],dx
  4407eb:	add    al,0x6f
  4407ed:	push   ecx
  4407ee:	push   edi
  4407ef:	ret    
  4407f0:	ja     0x440842
  4407f2:	add    DWORD PTR [esi-0x78],0x56fe0c
	...
  440809:	add    BYTE PTR [eax],al
  44080b:	add    BYTE PTR [esp+eax*4-0x18],cl
  44080f:	lods   eax,DWORD PTR ds:[esi]
  440810:	pop    esp
  440811:	xchg   ecx,eax
  440812:	add    BYTE PTR [ebx+0x41844522],cl
  440818:	xchg   esp,eax
  440819:	adc    al,0xc4
  44081b:	or     al,0xdf
  44081d:	pop    ebx
  44081e:	stc    
  44081f:	je     0x4407ac
  440821:	or     al,0x4e
  440823:	xor    BYTE PTR [ebx-0x7c],cl
  440826:	dec    edx
  440827:	call   0x449f94
  44082c:	pop    ebp
  44082d:	xchg   edi,eax
  44082e:	stc    
  44082f:	jge    0x440885
  440831:	or     bh,BYTE PTR [esi]
  440833:	xor    bh,dl
  440835:	dec    esi
  440836:	push   edi
  440837:	ret    
  440838:	iret   
  440839:	pop    ebx
  44083a:	cli    
  44083b:	je     0x44085f
  44083d:	or     al,0x3e
  44083f:	xor    BYTE PTR [ebx-0x7c],cl
  440842:	push   eax
  440843:	call   0x44774c
  440848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440849:	into   
  44084a:	xor    BYTE PTR [ecx],al
  44084c:	mov    dl,0x90
  44084e:	jbe    0x440858
  440850:	mov    ch,0xb1
  440852:	rcr    BYTE PTR [ecx-0xa],0x1a
  440856:	ror    esp,0xe9
  440859:	add    al,cl
  44085b:	int3   
  44085c:	add    ebx,ebp
  44085e:	ror    ah,0xf9
  440861:	fwait
  440862:	mov    ebp,esp
  440864:	test   BYTE PTR [ecx+0x7c89598b],bl
  44086a:	test   DWORD PTR [ebx-0x2f],ebx
  44086d:	and    edx,edi
  44086f:	test   BYTE PTR [eax],al
	...
  440881:	add    BYTE PTR [eax],al
  440883:	add    dl,cl
  440885:	mov    cl,0x32
  440887:	cld    
  440888:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  44088a:	sbb    BYTE PTR ds:0x418c3a42,ah
  440890:	and    edx,eax
  440892:	dec    eax
  440893:	sub    al,0x38
  440895:	fimul  DWORD PTR [esi+esi*8]
  440898:	mov    ds:0xa525d8ad,eax
  44089d:	jno    0x440861
  44089f:	outs   dx,BYTE PTR ds:[esi]
  4408a0:	lock rol DWORD PTR [eax+0x38],0xe6
  4408a5:	mov    bl,0x1
  4408a7:	sbb    ah,ah
  4408a9:	mul    ah
  4408ab:	and    dh,ch
  4408ad:	es std 
  4408af:	test   BYTE PTR [edx],cl
  4408b1:	jmp    0x44083e
  4408b3:	inc    ecx
  4408b4:	icebp  
  4408b5:	(bad)  
  4408b6:	aaa    
  4408b7:	jo     0x440845
  4408b9:	or     eax,0x42717d61
  4408be:	es pop ecx
  4408c0:	icebp  
  4408c1:	stos   DWORD PTR es:[edi],eax
  4408c2:	add    DWORD PTR [eax+0x25],edx
  4408c5:	xor    eax,0xa9433f90
  4408ca:	out    0xfe,al
  4408cc:	jg     0x440937
  4408ce:	push   ebx
  4408cf:	add    al,0xde
  4408d1:	imul   ebp,esp,0x4b66e7fe
  4408d7:	bound  ebp,QWORD PTR [edi+eiz*1]
  4408da:	dec    edx
  4408db:	out    0x2e,eax
  4408dd:	(bad)  
  4408de:	xor    al,BYTE PTR [eax+edi*1+0x60]
  4408e2:	ins    BYTE PTR es:[edi],dx
  4408e3:	or     BYTE PTR [edx+0x1f],ah
  4408e6:	loop   0x440876
	...
  4408fc:	ret    0x663d
  4408ff:	in     eax,dx
  440900:	sti    
  440901:	js     0x4408a9
  440903:	push   edx
  440904:	mov    ecx,0xebeba668
  440909:	and    BYTE PTR [edi-0x17f9a8b6],0x50
  440910:	ror    BYTE PTR [edi+0x10b48b96],cl
  440916:	pop    ds
  440917:	add    BYTE PTR [ebp-0x4a6b9474],dh
  44091d:	(bad)  
  44091e:	out    0x8a,eax
  440920:	pop    esp
  440921:	ret    
  440922:	out    0x36,al
  440924:	and    DWORD PTR [edi],eax
  440926:	test   eax,0x5e780c03
  44092b:	aam    0x8d
  44092d:	sub    DWORD PTR [ecx-0x29],ebp
  440930:	pushf  
  440931:	xchg   ecx,eax
  440932:	stos   BYTE PTR es:[edi],al
  440933:	dec    edi
  440934:	cmp    bl,dl
  440936:	ror    DWORD PTR [edx+0x3f90444],cl
  44093c:	mov    ch,0xc
  44093e:	repz std 
  440940:	stc    
  440941:	xor    eax,0x6e651e6
  440946:	xchg   edx,eax
  440947:	addr16 xor bl,bl
  44094a:	out    dx,eax
  44094b:	mov    ch,ah
  44094d:	xlat   BYTE PTR ds:[ebx]
  44094e:	(bad)  
  44094f:	lods   eax,DWORD PTR ds:[esi]
  440950:	lods   al,BYTE PTR ds:[esi]
  440951:	add    ebx,ebp
  440953:	repnz cmp edx,ebx
  440956:	scas   eax,DWORD PTR es:[edi]
  440957:	mov    dl,0x55
  440959:	mov    ebx,DWORD PTR [ecx+0x48]
  44095c:	mov    al,0x90
  44095e:	(bad)  
  44095f:	les    eax,FWORD PTR [eax]
	...
  440971:	add    BYTE PTR [eax],al
  440973:	add    BYTE PTR [eax+0x748c9bd2],bl
  440979:	(bad)  
  44097a:	fs into 
  44097c:	mov    eax,ds:0x726200df
  440981:	mov    DWORD PTR [ebp+0x4114de9e],0x43fdba21
  44098b:	stc    
  44098c:	mov    ah,0x14
  44098e:	pop    ecx
  44098f:	sub    DWORD PTR [esi+0x2e],eax
  440992:	test   DWORD PTR [esi],ebx
  440994:	jne    0x440a02
  440996:	ret    0xb20a
  440999:	jecxz  0x440920
  44099b:	lds    edx,FWORD PTR ss:[edx]
  44099e:	inc    ecx
  44099f:	and    DWORD PTR [ebx-0x69d7fbec],eax
  4409a5:	sub    DWORD PTR [edx+0x70],esp
  4409a8:	shr    BYTE PTR [ebx+0x14792e85],cl
  4409ae:	inc    ecx
  4409af:	sub    eax,0x21141263
  4409b4:	loop   0x4409be
  4409b6:	mov    ah,0xdf
  4409b8:	mov    dh,0x8f
  4409ba:	test   DWORD PTR [esi+0x3a],esp
  4409bd:	popf   
  4409be:	add    cl,ch
  4409c0:	das    
  4409c1:	enter  0xea74,0x6e
  4409c5:	jns    0x440a44
  4409c7:	pusha  
  4409c8:	mov    bh,0xa9
  4409ca:	add    al,0x64
  4409cc:	jbe    0x44098c
  4409ce:	mov    al,0x68
  4409d0:	jmp    0x440995
  4409d2:	add    ch,al
  4409d4:	mov    dh,0x8f
  4409d6:	ins    DWORD PTR es:[edi],dx
  4409d7:	cmc    
	...
  4409ec:	aas    
  4409ed:	mov    al,ds:0x3a6ac37d
  4409f2:	or     ch,BYTE PTR [edi+ebp*2+0x35]
  4409f6:	stc    
  4409f7:	cs das 
  4409f9:	adc    al,al
  4409fb:	push   DWORD PTR [esi-0x5d517a71]
  440a01:	test   BYTE PTR [edi+0x7114e39a],bh
  440a07:	xchg   ebp,eax
  440a08:	mov    bh,0xc0
  440a0a:	ins    BYTE PTR es:[edi],dx
  440a0b:	add    bh,dh
  440a0d:	sti    
  440a0e:	push   0x2e
  440a10:	pop    es
  440a11:	push   esp
  440a12:	sbb    ecx,0xffffff8d
  440a15:	push   ebp
  440a16:	cli    
  440a17:	add    BYTE PTR [esi+ecx*4],cl
  440a1a:	outs   dx,BYTE PTR ds:[esi]
  440a1b:	add    eax,0xfff98d57
  440a20:	sbb    al,0x7
  440a22:	aas    
  440a23:	cmp    BYTE PTR [edi],cl
  440a25:	cld    
  440a26:	dec    edx
  440a27:	push   eax
  440a28:	hlt    
  440a29:	cmp    edi,DWORD PTR [eax]
  440a2b:	add    ah,bl
  440a2d:	push   cs
  440a2e:	les    ecx,FWORD PTR [eax]
  440a30:	fild   WORD PTR [ebx]
  440a32:	push   esi
  440a33:	mov    DWORD PTR [ebx-0x33fff1ad],ecx
  440a39:	jbe    0x4409be
  440a3b:	in     eax,0x79
  440a3d:	push   eax
  440a3e:	test   DWORD PTR [esi+0x8cde],edx
  440a44:	out    0x4f,eax
  440a46:	imul   esp,DWORD PTR ds:0xc6795df7,0xffffff9e
  440a4d:	mov    es,WORD PTR [eax]
	...
  440a63:	add    BYTE PTR [edi-0x5d0eccbb],al
  440a69:	pop    DWORD PTR [ebx+0x38d317f1]
  440a6f:	add    eax,esp
  440a71:	imul   ecx,DWORD PTR [ecx-0x18],0xa1cc
  440a78:	(bad)  
  440a7a:	or     BYTE PTR [ecx],al
  440a7c:	and    edx,DWORD PTR [esi+ecx*1+0x0]
  440a80:	pop    esp
  440a81:	adc    DWORD PTR [ebx-0x75],0xfffffff1
  440a85:	cmp    BYTE PTR [ebx-0x13f7be34],0x51
  440a8c:	inc    edx
  440a8d:	or     BYTE PTR [ebp+0x8],ch
  440a90:	(bad)  
  440a91:	jns    0x440a9f
  440a93:	sbb    DWORD PTR [esi+edx*2-0x144a38b1],0xffffffd0
  440a9b:	stc    
  440a9c:	cmp    ah,BYTE PTR [edi]
  440a9e:	std    
  440a9f:	cmp    dh,BYTE PTR [edx]
  440aa1:	xchg   edx,eax
  440aa2:	add    al,0x0
  440aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440aa5:	and    eax,0xae214386
  440aaa:	cmp    dh,BYTE PTR [esi+esi*1+0x3f]
  440aae:	(bad)  
  440aaf:	jo     0x440a58
  440ab1:	mov    ebp,0x58a4e8d3
  440ab6:	aam    0xf9
  440ab8:	imul   edx,DWORD PTR cs:[eax-0x7d],0xa87959f5
  440ac0:	mov    ch,0x26
  440ac2:	std    
  440ac3:	(bad)  
  440ac4:	jo     0x440a90
  440ac6:	xchg   DWORD PTR [edx+0x0],ecx
	...
  440ad9:	add    BYTE PTR [eax],al
  440adb:	add    BYTE PTR [ecx+0x2efc3aad],al
  440ae1:	mov    eax,ds:0x9a7bc168
  440ae6:	add    al,0x0
  440ae8:	mov    ch,0x26
  440aea:	add    BYTE PTR [esp+esi*4],0x9a
  440aee:	add    BYTE PTR ds:0x251594e5,dh
  440af4:	test   DWORD PTR [edi+0x703c742b],edi
  440afa:	push   0xfc3e6c83
  440aff:	test   BYTE PTR [ebx],al
  440b01:	(bad)  
  440b02:	dec    esi
  440b04:	sahf   
  440b05:	and    al,0x10
  440b07:	into   
  440b08:	pop    ds
  440b09:	daa    
  440b0a:	sub    BYTE PTR [edi-0x17d50b1b],bh
  440b10:	cmp    al,0x9f
  440b12:	add    al,0x0
  440b14:	add    BYTE PTR ds:[ecx-0x7b],ah
  440b18:	stos   DWORD PTR es:[edi],eax
  440b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440b1a:	mov    ecx,0x30f02c10
  440b1f:	call   0xfa1875e0
  440b24:	ds (bad) 
  440b26:	stc    
  440b27:	add    bl,0x9f
  440b2a:	out    0x4f,eax
  440b2c:	clc    
  440b2d:	add    al,0xa1
  440b2f:	aaa    
  440b30:	xor    cl,ah
  440b32:	jnp    0x440abc
  440b34:	ja     0x440ba1
  440b36:	into   
  440b37:	mov    dl,0xde
  440b39:	xchg   ecx,eax
  440b3a:	call   0x17b8c042
  440b3f:	add    al,0x0
	...
  440b51:	add    BYTE PTR [eax],al
  440b53:	add    BYTE PTR [ebx+0xcd3eab6],bl
  440b59:	adc    dh,BYTE PTR [eax+0x2104b44c]
  440b5f:	or     al,0x0
  440b61:	dec    edi
  440b62:	mov    esi,0x3d4fc806
  440b67:	add    al,0x83
  440b69:	fistp  WORD PTR [ecx]
  440b6b:	fcomp  QWORD PTR [ebx+0x76]
  440b6e:	out    0x3,eax
  440b70:	cmp    cl,cl
  440b72:	inc    ebx
  440b73:	jg     0x440b14
  440b75:	or     al,0xa3
  440b77:	hlt    
  440b78:	cmp    ecx,ecx
  440b7a:	inc    ebx
  440b7b:	fdiv   st(3),st
  440b7d:	xor    ebx,DWORD PTR [edx+0x66a138d3]
  440b83:	dec    esi
  440b84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440b85:	(bad)  
  440b86:	fimul  DWORD PTR [eax-0x2c7dc909]
  440b8c:	or     al,0x83
  440b8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440b8f:	xor    bh,BYTE PTR [eax]
  440b91:	sub    eax,0xcd30c714
  440b96:	fisttp DWORD PTR [eax-0x34a7438b]
  440b9c:	aaa    
  440b9d:	cld    
  440b9e:	lock add esi,DWORD PTR [ebp-0x4afc1871]
  440ba5:	adc    cl,BYTE PTR [edi+0x8]
  440ba8:	out    0xd1,al
  440baa:	outs   dx,BYTE PTR ds:[esi]
  440bab:	inc    edx
  440bac:	or     DWORD PTR ds:0xab44c30,ecx
  440bb2:	add    BYTE PTR [edi+0x42c034ae],ch
	...
  440bcc:	mov    ebx,0x8f72c064
  440bd1:	mov    ds:0x46a3e866,eax
  440bd6:	dec    esi
  440bd7:	mov    ecx,0xd017277c
  440bdc:	mov    dh,0x8f
  440bde:	test   DWORD PTR [edi+0x6a3a0c8a],ebp
  440be4:	in     eax,dx
  440be5:	lahf   
  440be6:	xchg   DWORD PTR [edi-0xd88d836],ebp
  440bec:	out    0x38,eax
  440bee:	test   edi,esi
  440bf0:	mov    ds:0x928374f,eax
  440bf5:	fmul   DWORD PTR [ecx]
  440bf7:	jl     0x440bef
  440bf9:	fnstcw WORD PTR [ebp-0x57]
  440bfc:	mov    eax,0xf224e30c
  440c01:	or     al,0x42
  440c03:	dec    ebp
  440c04:	(bad)
  440c09:	mov    ecx,0xb8086433
  440c0e:	add    DWORD PTR [edx+0x74],esi
  440c11:	ja     0x440c10
  440c13:	mov    dl,0xe3
  440c15:	xor    eax,0x8f58a02e
  440c1a:	and    eax,0x52c6e6ab
  440c1f:	xchg   ecx,eax
  440c20:	arpl   WORD PTR [edi+0x0],si
  440c23:	jmp    0x62b0ee4b
  440c28:	les    esi,FWORD PTR [esp+eax*8+0x5ce211d9]
  440c2f:	push   ecx
	...
  440c44:	mov    ds:0x35ef93c,eax
  440c49:	xchg   edx,eax
  440c4a:	jge    0x440c1d
  440c4c:	xchg   BYTE PTR [esi],dh
  440c4e:	or     ah,BYTE PTR [ebp-0x27]
  440c51:	cmp    cl,bh
  440c53:	add    bl,dh
  440c55:	cmp    DWORD PTR [eax+0x924c01],0x5527d75e
  440c5f:	ret    
  440c60:	mov    al,0xf6
  440c62:	retf   
  440c63:	int3   
  440c64:	xor    dh,0xcb
  440c67:	int3   
  440c68:	nop
  440c69:	test   bl,0xcc
  440c6c:	stc    
  440c6d:	mov    ah,0xec
  440c6f:	push   ebx
  440c70:	push   0xffffffb5
  440c72:	ins    DWORD PTR es:[edi],dx
  440c73:	or     BYTE PTR [ebx+0x5],cl
  440c76:	stc    
  440c77:	dec    DWORD PTR [edx+edx*4]
  440c7a:	cmp    edi,0xffffff97
  440c7d:	enter  0x3d74,0x1a
  440c81:	mov    eax,DWORD PTR [eax]
  440c83:	add    BYTE PTR [edi+0x6c],ch
  440c86:	cmp    esi,0xffffffe4
  440c89:	paddb  mm7,mm7
  440c8c:	jecxz  0x440c41
  440c8e:	ds je  0x440c52
  440c91:	mov    ecx,edi
  440c93:	(bad)  
  440c94:	(bad)  
  440c96:	add    al,BYTE PTR [ebx+0xf008fa1]
  440c9c:	dec    eax
  440c9d:	jae    0x440c99
  440c9f:	(bad)  
  440ca0:	fmul   QWORD PTR [eax+eax*8]
  440ca3:	addps  xmm1,xmm0
  440ca6:	cli    
  440ca7:	inc    DWORD PTR [eax]
	...
  440cb9:	add    BYTE PTR [eax],al
  440cbb:	add    ah,cl
  440cbd:	or     bh,al
  440cbf:	add    ebx,DWORD PTR [esi-0x2bb97c51]
  440cc5:	mov    dl,0x46
  440cc7:	pop    eax
  440cc8:	daa    
  440cc9:	jp     0x440d37
  440ccb:	mov    esp,DWORD PTR [edx+0x17e0cb9d]
  440cd1:	sar    BYTE PTR [eax],cl
  440cd3:	bswap  edx
  440cd5:	iret   
  440cd6:	or     DWORD PTR [edx],eax
  440cd8:	scas   eax,DWORD PTR es:[edi]
  440cd9:	push   eax
  440cda:	sbb    eax,DWORD PTR [esi+0x48]
  440cdd:	mov    ah,0x46
  440cdf:	inc    esp
  440ce0:	mov    ch,0x89
  440ce2:	retf   0xb85
  440ce5:	out    0x75,eax
  440ce7:	inc    edx
  440ce8:	std    
  440ce9:	inc    esp
  440cea:	jl     0x440cf0
  440cec:	hlt    
  440ced:	dec    esp
  440cee:	jbe    0x440cf4
  440cf0:	fbstp  TBYTE PTR [ecx+0x14966c3e]
  440cf6:	adc    DWORD PTR [ebp-0x4f00191d],eax
  440cfc:	mov    ecx,0xed4a7c00
  440d01:	mov    cl,0x36
  440d03:	inc    esp
  440d04:	fwait
  440d05:	mov    cl,0x4e
  440d07:	ins    BYTE PTR es:[edi],dx
  440d08:	xchg   ebx,eax
  440d09:	mov    edi,0x67384610
  440d0e:	pop    eax
  440d0f:	sbb    DWORD PTR [esi],ebp
  440d11:	in     eax,dx
  440d12:	pop    eax
  440d13:	test   DWORD PTR [ebx-0xe],ebp
  440d16:	sbb    ecx,eax
  440d18:	xor    al,0x61
  440d1a:	pop    es
  440d1b:	inc    DWORD PTR [edx]
  440d1d:	daa    
  440d1e:	or     al,0xc6
	...
  440d34:	sub    BYTE PTR [ebx],0x2d
  440d37:	push   edx
  440d38:	fisttp QWORD PTR [esi]
  440d3a:	or     DWORD PTR [eax],eax
  440d3c:	mov    ch,0xa9
  440d3e:	ror    DWORD PTR [eax],0x2c
  440d41:	ins    DWORD PTR es:[edi],dx
  440d42:	fs jge 0x440da0
  440d45:	mov    BYTE PTR [ebx],0x9
  440d48:	aaa    
  440d49:	mov    ebp,?
  440d4b:	push   DWORD PTR [ebp+0x514a7b84]
  440d51:	mov    WORD PTR [ebx],ds
  440d53:	dec    edx
  440d54:	inc    ebp
  440d55:	mov    cl,0x77
  440d57:	mov    al,ds:0x85fd26cb
  440d5c:	xrelease xchg BYTE PTR [ebx-0x46],bh
  440d60:	pop    ecx
  440d61:	pop    esp
  440d62:	std    
  440d63:	jmp    FWORD PTR [edx+0x3c62b675]
  440d69:	push   edx
  440d6a:	cmp    BYTE PTR [ebp-0x68070dd],al
  440d70:	xor    BYTE PTR [esi+ebp*2],0x91
  440d74:	push   ebp
  440d75:	popf   
  440d76:	out    0x3,eax
  440d78:	mov    eax,ds:0xa3075f90
  440d7d:	mov    fs,WORD PTR [ecx-0x5d]
  440d80:	(bad)  
  440d81:	(bad)  
  440d82:	out    0x0,eax
  440d84:	daa    
  440d85:	dec    edi
  440d86:	loop   0x440d21
  440d88:	and    eax,0xb5439d3f
  440d8d:	lods   eax,DWORD PTR ds:[esi]
  440d8e:	call   0xe35b3502
  440d93:	add    esi,DWORD PTR [ebp+0x796b02]
	...
  440da9:	add    BYTE PTR [eax],al
  440dab:	add    BYTE PTR [ebp-0x75],cl
  440dae:	out    0x3,eax
  440db0:	stos   BYTE PTR es:[edi],al
  440db1:	dec    esi
  440db2:	add    dl,al
  440db4:	mov    ch,0x8f
  440db6:	aas    
  440db7:	add    ebx,DWORD PTR [edx]
  440db9:	xor    al,0xe7
  440dbb:	imul   ecx,eax,0xbdff7647
  440dc1:	cld    
  440dc2:	scas   eax,DWORD PTR es:[edi]
  440dc3:	inc    DWORD PTR [esi+ecx*1-0x29]
  440dc7:	cmp    al,0x75
  440dc9:	(bad)  
  440dca:	mov    esi,0xb7fcbc01
  440dcf:	(bad)
  440dd2:	repnz xchg ebp,eax
  440dd4:	arpl   WORD PTR [edi],di
  440dd6:	xor    BYTE PTR [ebp+esi*4-0x53],al
  440dda:	call   0xe04b454e
  440ddf:	add    esi,DWORD PTR [ebp-0x588f96f8]
  440de5:	(bad)  
  440de6:	out    0x12,eax
  440de8:	repnz cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  440deb:	or     eax,0x3f0f037
  440df0:	mov    ch,0x6
  440df2:	sub    DWORD PTR [esp+ebp*4+0x1b],esp
  440df6:	test   al,0x1d
  440df8:	idiv   DWORD PTR [ebx+0xd806200]
  440dfe:	dec    edx
  440dff:	cmc    
  440e00:	mov    edi,0xb6e9800d
  440e05:	(bad)  
  440e06:	jno    0x440dbe
  440e08:	aaa    
  440e09:	cmp    edi,ebp
  440e0b:	fisub  DWORD PTR [edi+eax*8+0xa787]
	...
  440e22:	add    BYTE PTR [eax],al
  440e24:	(bad)  
  440e25:	xor    bl,BYTE PTR [ebx-0x2b]
  440e28:	(bad)  
  440e2a:	ins    BYTE PTR es:[edi],dx
  440e2b:	jb     0x440db8
  440e2d:	mov    DWORD PTR [ebp+0x420c9ea7],0x44014bf1
  440e37:	jmp    0x440ded
  440e39:	inc    esp
  440e3a:	fnsave [edx+0x7b]
  440e3d:	retf   
  440e3e:	sub    eax,0x54cdd62a
  440e43:	(bad)  
  440e44:	fstp   TBYTE PTR [ebx-0x79]
  440e47:	scas   eax,DWORD PTR es:[edi]
  440e48:	fimul  WORD PTR [eax-0x6b8e1a4f]
  440e4e:	(bad)  
  440e4f:	(bad)  
  440e50:	retf   
  440e51:	iret   
  440e52:	bound  esp,QWORD PTR [eax-0x43]
  440e55:	(bad)  [ecx]
  440e57:	sahf   
  440e58:	js     0x440dfd
  440e5a:	test   DWORD PTR [edi],ebp
  440e5c:	mov    ecx,0x5b2d520c
  440e61:	or     al,BYTE PTR [ebx+eiz*1]
  440e64:	cli    
  440e65:	lds    esp,FWORD PTR [eax-0x7e]
  440e68:	mov    ecx,0x7de9008f
  440e6d:	add    bh,ah
  440e6f:	push   0xffffffb6
  440e71:	pop    DWORD PTR [eax]
  440e73:	call   0x3fc9b1e8
  440e78:	mov    cl,0x34
  440e7a:	push   ebx
  440e7b:	or     eax,0xae58c53e
  440e80:	clc    
  440e81:	scas   eax,DWORD PTR es:[edi]
  440e82:	add    cl,ch
  440e84:	mov    dh,0x8f
  440e86:	or     DWORD PTR [eax],eax
	...
  440e9c:	loop   0x440e2e
  440e9e:	add    DWORD PTR [esi-0x1c],0xd20fdffe
  440ea5:	js     0x440ea0
  440ea7:	xor    bl,BYTE PTR [ebp+0x6d]
  440eaa:	ds push esp
  440eac:	add    eax,0x39eb48cd
  440eb1:	mov    ch,0x4e
  440eb3:	ins    BYTE PTR es:[edi],dx
  440eb4:	xlat   BYTE PTR ds:[ebx]
  440eb5:	int3   
  440eb6:	cmp    BYTE PTR [edx-0x717c6fb0],cl
  440ebc:	sub    al,0x3c
  440ebe:	stc    
  440ebf:	jmp    edi
  440ec1:	mov    esp,0x8e5c16a4
  440ec6:	sub    edi,edi
  440ec8:	jb     0x440e7d
  440eca:	cmp    al,0x4a
  440ecc:	(bad)  
  440ecd:	mov    esp,0x8e4c16a0
  440ed2:	or     DWORD PTR [esi-0x6c35c],0xffffff94
  440ed9:	mov    cl,BYTE PTR [ecx]
  440edb:	add    DWORD PTR [edx+0xc000dee],ebx
  440ee1:	xor    DWORD PTR [edi-0x6374bd40],ebp
  440ee7:	xchg   BYTE PTR [eax-0x72],ah
  440eea:	add    BYTE PTR [eax],al
  440eec:	xchg   DWORD PTR [ecx-0x71f3e964],esi
  440ef2:	test   DWORD PTR [edx+eiz*2-0x23ffff49],eax
  440ef9:	sahf   
  440efa:	retf   0x272b
  440efd:	xchg   BYTE PTR [esi+0xa0],al
	...
  440f13:	add    BYTE PTR [edx],al
  440f15:	mov    es,WORD PTR [eax]
  440f17:	pshufw mm1,QWORD PTR [ebp-0x9],0x4e
  440f1c:	cmp    BYTE PTR [eax-0x5085fe0e],0x7d
  440f23:	dec    ebx
  440f25:	or     esi,eax
  440f27:	std    
  440f28:	mov    ch,0x19
  440f2a:	retf   
  440f2b:	test   ebx,edi
  440f2d:	bound  eax,QWORD PTR [ecx+0x78221dc7]
  440f33:	inc    edx
  440f34:	frstor ds:0xf5b7e5be
  440f3a:	mov    esp,0x5732e385
  440f3f:	add    dh,cl
  440f41:	ja     0x440f71
  440f43:	push   eax
  440f44:	jecxz  0x440f24
  440f46:	or     esi,DWORD PTR [edx]
  440f48:	mov    ch,0x26
  440f4a:	js     0x440f8e
  440f4c:	fldcw  WORD PTR [ebp+0x57797d0a]
  440f52:	jbe    0x440f96
  440f54:	stc    
  440f55:	fisubr WORD PTR [ebx-0x8]
  440f58:	push   edx
  440f59:	jp     0x440fd2
  440f5b:	or     dh,BYTE PTR [esi]
  440f5d:	add    ch,ch
  440f5f:	push   DWORD PTR [ebx+0x3afb6fa3]
  440f65:	xchg   edx,eax
  440f66:	sub    ebx,DWORD PTR [edx-0x1a]
  440f69:	data16 daa 
  440f6b:	pop    ebx
  440f6c:	imul   BYTE PTR [ebp+0x7f2e6c42]
  440f72:	jg     0x440f6c
  440f74:	mov    bh,0xb4
  440f76:	add    dh,BYTE PTR [edi+0x0]
	...
  440f8c:	mov    bh,0x26
  440f8e:	std    
  440f8f:	push   DWORD PTR [esi]
  440f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440f92:	stc    
  440f93:	add    ebp,DWORD PTR [ecx+edi*4]
  440f96:	xchg   ecx,eax
  440f97:	adc    dh,BYTE PTR [ebp+0x3e3b5226]
  440f9d:	jno    0x440fcf
  440f9f:	add    DWORD PTR [edi],0xffffffdf
  440fa2:	add    eax,DWORD PTR [ebp-0x3a00718d]
  440fa8:	into   
  440fa9:	and    al,0x10
  440fab:	(bad)  
  440fac:	lea    di,[esi-0x23679bb0]
  440fb3:	loop   0x440f3d
  440fb5:	(bad)  
  440fb6:	out    0x3,eax
  440fb8:	xor    dl,bl
  440fba:	or     edi,DWORD PTR [ecx-0x11]
  440fbd:	or     al,0xab
  440fbf:	repz xor ebx,ecx
  440fc2:	sub    ebx,esp
  440fc4:	div    DWORD PTR [edi]
  440fc6:	or     ah,0x30
  440fc9:	mov    DWORD PTR [esi-0x28383546],esi
  440fcf:	sub    al,0xbc
  440fd1:	sbb    ch,BYTE PTR [eax-0x57fd17d3]
  440fd7:	add    esi,ebx
  440fd9:	dec    esp
  440fda:	lea    dx,ds:0xb503e799
  440fe1:	mov    ebx,0xd407790f
  440fe6:	ins    BYTE PTR es:[edi],dx
  440fe7:	mov    cl,0xdd
  440fe9:	mov    BYTE PTR [esi+0x3d],ch
  440fec:	lea    ecx,[ebp+ebx*1+0xd8]
	...
  441003:	add    BYTE PTR [ebx+0x7d],cl
  441006:	and    BYTE PTR [ecx-0x4b],bl
  441009:	fs and eax,0xfd9ea33
  44100f:	ins    BYTE PTR es:[edi],dx
  441010:	out    0x8f,al
  441012:	out    0x78,eax
  441014:	xchg   DWORD PTR [ebx+0x4ba00d5e],esp
  44101a:	xlat   BYTE PTR ds:[ebx]
  44101b:	jp     0x440fa4
  44101d:	ror    DWORD PTR [edi],cl
  44101f:	int3   
  441020:	add    al,0x30
  441022:	bnd ja 0x440fdc
  441025:	or     al,0x6f
  441027:	repz add al,BYTE PTR [ecx+0x2ffc646b]
  44102e:	fisubr DWORD PTR [ebx]
  441030:	pop    DWORD PTR [esi+eiz*4]
  441033:	das    
  441034:	mov    cs,WORD PTR [ebx+ebx*4-0x48]
  441038:	icebp  
  441039:	inc    edx
  44103a:	mov    bl,0xb8
  44103c:	jmp    0x1fcbb83
  441041:	inc    ebx
  441042:	add    BYTE PTR [edx+ecx*2],bl
  441045:	and    ecx,DWORD PTR [ebp+0x17]
  441048:	inc    edx
  441049:	mov    esp,0x302a3e08
  44104e:	stc    
  44104f:	jmp    0x633d250a
  441054:	out    dx,eax
  441055:	mov    ds:0x2eb7907f,eax
  44105a:	stc    
  44105b:	jmp    0x7fc98463
  441060:	jno    0x44102c
  441062:	div    DWORD PTR [esi+0x7e]
  441065:	adc    eax,0xf54a
	...
  44107a:	add    BYTE PTR [eax],al
  44107c:	cmp    DWORD PTR [edi],esp
  44107e:	add    ch,al
  441080:	mov    dh,0x8f
  441082:	ins    DWORD PTR es:[edi],dx
  441083:	repz cmp ebp,DWORD PTR [ebx+0x136fe90c]
  44108a:	sub    al,0xeb
  44108c:	mov    dh,0x8f
  44108e:	xor    DWORD PTR [eax],0x5e
  441091:	adc    edx,edx
  441093:	jmp    0x44104b
  441095:	(bad)  
  441096:	sub    eax,0xfd273229
  44109b:	mov    edx,0xb1421481
  4410a0:	mov    ebx,0xe77258d9
  4410a5:	mov    ebx,0x5cba9785
  4410aa:	loopne 0x44110e
  4410ac:	fbld   TBYTE PTR [edi+0x9]
  4410af:	aas    
  4410b0:	fstp   QWORD PTR [esi-0x73064602]
  4410b6:	inc    edx
  4410b7:	popf   
  4410b8:	mov    ebx,ecx
  4410ba:	inc    esp
  4410bb:	retf   0x14f0
  4410be:	push   edx
  4410bf:	sub    DWORD PTR [eax-0x2f],edi
  4410c2:	dec    eax
  4410c3:	inc    edi
  4410c4:	jb     0x441059
  4410c6:	aas    
  4410c7:	dec    edi
  4410c8:	push   0x9c627693
  4410cd:	mov    ebx,0x7fa2001d
  4410d2:	adc    DWORD PTR [esi-0x64],0x2a
  4410d6:	mov    al,0x4
  4410d8:	xchg   esi,eax
  4410d9:	scas   al,BYTE PTR es:[edi]
  4410da:	inc    esi
  4410db:	dec    eax
  4410dc:	push   edi
  4410dd:	pusha  
  4410de:	inc    esp
  4410df:	data16 add BYTE PTR [eax],al
	...
  4410f2:	add    BYTE PTR [eax],al
  4410f4:	inc    edi
  4410f5:	fsubr  DWORD PTR [esi+eiz*2+0x25]
  4410f9:	xchg   edi,eax
  4410fa:	inc    edx
  4410fb:	mov    edx,edx
  4410fd:	mov    bl,0x83
  4410ff:	push   esi
  441100:	mov    esp,0x8cfffa1a
  441105:	xchg   edx,eax
  441106:	or     DWORD PTR [esi-0x4c],0x15644eac
  44110d:	fldenv [eax-0x7b]
  441110:	dec    esp
  441111:	fiadd  WORD PTR [edx+0x3b]
  441114:	add    dl,BYTE PTR [ebx]
  441116:	add    BYTE PTR [eax],al
  441118:	pop    esp
  441119:	lds    edi,FWORD PTR [edx]
  44111b:	mov    ebp,DWORD PTR [edx]
  44111d:	mov    BYTE PTR [ebx-0x2f729fb2],0x81
  441124:	add    eax,0x5cfff991
  441129:	popf   
  44112a:	leave  
  44112b:	ja     0x441179
  44112d:	bound  ecx,QWORD PTR [esi-0x18]
  441130:	and    al,0x9b
  441132:	add    BYTE PTR [eax],al
  441134:	iret   
  441135:	out    dx,al
  441136:	pop    es
  441137:	mov    DWORD PTR [edx-0x4e],ebx
  44113a:	jnp    0x441134
  44113c:	sbb    ecx,eax
  44113e:	push   ss
  44113f:	cmp    DWORD PTR [edx+0xc0000aa],edx
  441145:	fimul  WORD PTR [ebx]
  441147:	xor    DWORD PTR [ebp+edx*4+0x6097116d],0x6c
  44114f:	sub    ebp,DWORD PTR [edx]
  441151:	ret    0xfa79
  441154:	or     al,0x22
  441156:	stc    
  441157:	inc    DWORD PTR [eax]
	...
  441169:	add    BYTE PTR [eax],al
  44116b:	add    BYTE PTR [edx-0x4a817e6c],cl
  441171:	fdivr  DWORD PTR [ebx+0x42]
  441174:	pop    ebp
  441175:	mov    ecx,0xbaabfdcc
  44117a:	push   ecx
  44117b:	call   edx
  44117d:	aaa    
  44117e:	push   es
  44117f:	inc    edx
  441180:	push   ebp
  441181:	xor    eax,0x38b46480
  441186:	std    
  441187:	popa   
  441188:	outs   dx,BYTE PTR cs:[esi]
  44118a:	pop    eax
  44118b:	(bad)  
  44118c:	fisub  WORD PTR [eax+eiz*2-0x7b]
  441190:	repz xchg edx,eax
  441192:	jnp    0x4411de
  441194:	sub    DWORD PTR [ebp-0x4ad132e5],edx
  44119a:	mov    al,ds:0x7236b512
  44119f:	jl     0x44115e
  4411a1:	mov    ds:0x4dfd427a,eax
  4411a6:	nop
  4411a7:	(bad)  
  4411a8:	lods   eax,DWORD PTR cs:[esi]
  4411aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4411ab:	adc    dh,BYTE PTR [ebp-0x4678a0ca]
  4411b1:	jmp    0x2559ac31
  4411b6:	std    
  4411b7:	jmp    FWORD PTR [esi]
  4411b9:	int    0x6c
  4411bb:	adc    dh,BYTE PTR [ebp+0x32fd1136]
  4411c1:	cmp    ebp,ebx
  4411c3:	or     BYTE PTR [ebx],cl
  4411c5:	ja     0x441152
  4411c7:	(bad)  
  4411c8:	cmp    dh,BYTE PTR [edi]
  4411ca:	std    
  4411cb:	(bad)  
  4411cc:	push   eax
  4411cd:	xlat   BYTE PTR ds:[ebx]
  4411ce:	out    dx,al
  4411cf:	inc    DWORD PTR [eax]
	...
  4411e1:	add    BYTE PTR [eax],al
  4411e3:	add    BYTE PTR [edx],ch
  4411e5:	ss (bad) 
  4411e7:	nop
  4411e8:	and    eax,0x93003cf1
  4411ed:	aaa    
  4411ee:	popa   
  4411ef:	xchg   edx,eax
  4411f0:	sub    eax,0x38fffd33
  4411f5:	mov    ebx,0x36b9986e
  4411fa:	std    
  4411fb:	jle    0x4411f1
  4411fd:	(bad)  
  4411fe:	loop   0x4411c8
  441200:	mov    ch,0x8f
  441202:	lahf   
  441203:	add    ebp,edx
  441205:	sub    al,0xe7
  441207:	popa   
  441208:	test   al,0x57
  44120a:	push   esi
  44120b:	clc    
  44120c:	lods   eax,DWORD PTR ds:[esi]
  44120d:	in     al,0xaf
  44120f:	clc    
  441210:	add    al,0xf
  441212:	mov    bh,0x3b
  441214:	jne    0x4411a5
  441216:	mov    esi,0x97e4adf6
  44121b:	ret    0x94d3
  44121e:	repnz xchg ecx,eax
  441220:	xor    esp,DWORD PTR [eax]
  441222:	xor    BYTE PTR [ebp+esi*4-0x4b],al
  441226:	call   0xe05b4992
  44122b:	add    esi,DWORD PTR [ebp-0x589896e8]
  441231:	(bad)  
  441232:	out    0x1c,eax
  441234:	dec    eax
  441235:	pusha  
  441236:	mov    al,ds:0xd0ef370a
  44123b:	add    esi,DWORD PTR [ebp-0x43b456e8]
  441241:	add    ebp,DWORD PTR [eax]
  441243:	jl     0x4412bd
  441245:	js     0x44127e
  441247:	add    al,BYTE PTR [eax]
	...
  441259:	add    BYTE PTR [eax],al
  44125b:	add    BYTE PTR [edi],al
  44125d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44125e:	retw   
  441260:	pop    edi
  441261:	push   ss
  441262:	test   eax,0xefda3a4b
  441267:	jbe    0x44125b
  441269:	(bad)
  44126d:	sbb    BYTE PTR [ecx-0x65bb7fa9],dl
  441273:	or     DWORD PTR [eax],edi
  441275:	aad    0xaf
  441277:	jl     0x4412f8
  441279:	(bad)  
  44127a:	pop    esi
  44127b:	sub    ecx,ebp
  44127d:	inc    eax
  44127e:	pop    es
  44127f:	jl     0x4412f0
  441281:	addr16 repnz xchg ecx,eax
  441284:	cmp    DWORD PTR [esi-0x1b],0x704a14
  44128b:	scas   eax,DWORD PTR es:[edi]
  44128c:	rcl    BYTE PTR [edx],cl
  44128e:	dec    edx
  44128f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441290:	jg     0x441263
  441292:	dec    eax
  441293:	test   BYTE PTR [ebx-0x6d],0x3f
  441297:	or     bl,BYTE PTR [edi]
  441299:	adc    dl,BYTE PTR [edx+0x29]
  44129c:	adc    DWORD PTR [esp+eax*1],0x33
  4412a0:	loop   0x441280
  4412a2:	inc    ecx
  4412a3:	push   ebp
  4412a4:	dec    esi
  4412a5:	(bad)  [eax+0x72]
  4412a8:	fwait
  4412a9:	shl    DWORD PTR [edx+0x60],cl
  4412ac:	mov    ch,0xd5
  4412ae:	mov    ch,0xe8
  4412b0:	mov    dh,0x8f
  4412b2:	add    BYTE PTR [esi+0x5a73a7eb],ah
  4412b8:	mov    al,0xc5
  4412ba:	ins    BYTE PTR es:[edi],dx
  4412bb:	push   0xffffffec
  4412bd:	xchg   edi,eax
  4412be:	add    BYTE PTR [edx+0x0],ah
	...
  4412d1:	add    BYTE PTR [eax],al
  4412d3:	add    bl,bl
  4412d5:	mov    ebx,0x8ff12fc1
  4412da:	add    cl,ch
  4412dc:	mov    dh,0x50
  4412de:	inc    edx
  4412df:	or     DWORD PTR [edi-0x7c16ff71],esi
  4412e5:	pavgw  mm4,QWORD PTR [edx+edi*2+0x29]
  4412ea:	test   DWORD PTR [edi-0x2e31f16e],esi
  4412f0:	arpl   WORD PTR [edx+ecx*2],dx
  4412f3:	adc    DWORD PTR [esi-0x58141aaf],esi
  4412f9:	push   edx
  4412fa:	jmpw   0xfcad
  4412fe:	dec    edi
  4412ff:	cwde   
  441300:	nop
  441301:	aaa    
  441302:	daa    
  441303:	cli    
  441304:	mov    dh,0x8f
  441306:	test   DWORD PTR [edi+0x6a3a148a],esi
  44130c:	cmc    
  44130d:	jg     0x441296
  44130f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441310:	fidiv  DWORD PTR [edi]
  441312:	xchg   DWORD PTR [edx+esi*8],edx
  441315:	sub    BYTE PTR [ebp+0x720df200],al
  44131b:	adc    BYTE PTR [edx+eiz*1],bl
  44131e:	jle    0x4412cd
  441320:	or     DWORD PTR [edx-0x9],edx
  441323:	pop    edi
  441324:	sub    bh,BYTE PTR [esi-0x40]
  441327:	pop    ebx
  441328:	jns    0x441378
  44132a:	jnp    0x4413aa
  44132c:	test   BYTE PTR [ebx-0x71a07bf9],dl
  441332:	add    BYTE PTR [eax],al
  441334:	push   edi
  441335:	ins    BYTE PTR es:[edi],dx
  441336:	ins    BYTE PTR es:[edi],dx
  441337:	mov    eax,DWORD PTR [eax]
	...
  441349:	add    BYTE PTR [eax],al
  44134b:	add    BYTE PTR [edx-0x3bbb7d65],cl
  441351:	push   ecx
  441352:	adc    DWORD PTR [esi-0x6c2d4],0x57
  441359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44135a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44135b:	push   ss
  44135c:	pushf  
  44135d:	mov    gs,WORD PTR [ebx]
  44135f:	push   DWORD PTR [edx+0x17513cac]
  441365:	mov    ebp,0x8e8c1698
  44136a:	or     DWORD PTR [esi-0x6c304],0x4
  441371:	sub    eax,DWORD PTR [ebx]
  441373:	add    edx,ebp
  441375:	out    dx,al
  441376:	or     eax,0xaf218c00
  44137b:	rol    BYTE PTR [edx-0x1f69636d],1
  441381:	mov    es,WORD PTR [eax]
  441383:	add    cl,bl
  441385:	stos   BYTE PTR es:[edi],al
  441386:	mov    ss,WORD PTR [esp+ecx*2-0x1d74ff72]
  44138d:	mov    dl,0xe
  44138f:	add    BYTE PTR [ebp+eax*4-0x45],bl
  441393:	cmp    edx,edx
  441395:	out    dx,al
  441396:	or     eax,0x27bf4c00
  44139b:	mov    ebp,DWORD PTR [edx+0x72]
  44139e:	jge    0x441369
  4413a0:	push   esp
  4413a1:	sub    DWORD PTR [esi+eax*2-0x4101bf4b],eax
  4413a8:	push   cs
  4413a9:	ss push cs
  4413ab:	sar    BYTE PTR [esi],0xa
  4413ae:	push   ecx
  4413af:	data16 add BYTE PTR [eax],al
	...
  4413c2:	add    BYTE PTR [eax],al
  4413c4:	mov    ch,0x3d
  4413c6:	mov    ah,0x4e
  4413c8:	gs or  dl,ch
  4413cb:	xchg   bh,al
  4413cd:	cmp    ch,bh
  4413cf:	test   BYTE PTR [ebx-0x3c],bh
  4413d2:	ja     0x44140e
  4413d4:	ss hlt 
  4413d6:	xrelease xchg BYTE PTR [ebx+0x64],bh
  4413da:	fsubr  st(6),st
  4413dc:	loope  0x441436
  4413de:	ret    
  4413df:	test   ebx,eax
  4413e1:	aaa    
  4413e2:	and    ebp,DWORD PTR [edx+ecx*8+0x79]
  4413e6:	push   eax
  4413e7:	jge    0x441425
  4413e9:	dec    eax
  4413ea:	std    
  4413eb:	out    0x63,al
  4413ed:	stc    
  4413ee:	ret    0xb4f9
  4413f1:	rcr    BYTE PTR [eax-0x7],1
  4413f4:	sti    
  4413f5:	xor    BYTE PTR [ebp+0x5a],0xd
  4413f9:	adc    bh,al
  4413fb:	cld    
  4413fc:	call   0x4937:0x1d7a7f1a
  441403:	inc    edx
  441404:	sbb    DWORD PTR ds:[eax-0x7b],0x4476defb
  44140c:	mov    bh,0xb9
  44140e:	ja     0x44139a
  441410:	adc    eax,0x3efffd29
  441415:	mov    eax,ds:0x36b512a0
  44141a:	adc    cl,bh
  44141c:	shr    DWORD PTR [edi-0x36c1b9f8],cl
  441422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441423:	adc    dh,BYTE PTR [ebp+0x8a7836]
	...
  441439:	add    BYTE PTR [eax],al
  44143b:	add    BYTE PTR ds:0x2dfffd49,bl
  441441:	xor    ebp,esi
  441443:	(bad)  
  441444:	push   eax
  441445:	nop
  441446:	inc    edi
  441447:	out    dx,al
  441448:	sub    ch,BYTE PTR [ecx]
  44144a:	jmp    0x3767:0xe8b1f58d
  441451:	add    al,0xe7
  441453:	add    esi,DWORD PTR [ebp+0x217e6b1a]
  441459:	nop
  44145a:	out    0x3,eax
  44145c:	cmp    ch,BYTE PTR [edx-0x44888781]
  441462:	pop    esi
  441463:	mov    esp,0x51e52770
  441468:	mov    dh,0xe6
  44146a:	in     al,0x3
  44146c:	mov    ch,0x8f
  44146e:	inc    si
  441470:	test   eax,0x9756093
  441475:	and    bh,0x3
  441478:	inc    esi
  441479:	push   0x6e
  44147b:	sub    eax,0x4b951261
  441480:	mov    ah,0x14
  441482:	sbb    DWORD PTR [eax+esi*4],ecx
  441485:	push   esi
  441486:	mov    es,WORD PTR [ecx]
  441488:	fcom   DWORD PTR [esi+0x36]
  44148b:	sbb    DWORD PTR [ebx-0x41],esp
  44148e:	cmp    BYTE PTR [esi],ch
  441490:	lea    eax,[esi-0x28]
  441493:	add    esi,DWORD PTR [ebp+0x30583114]
  441499:	imul   esp,DWORD PTR [esi-0x41],0x282116a5
	...
  4414b4:	lea    esp,[esi+0x73]
  4414b7:	les    ebp,FWORD PTR [esp+edx*1-0x7]
  4414bb:	adc    BYTE PTR [ebp+0x66],dh
  4414be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4414bf:	repz std 
  4414c1:	cwde   
  4414c2:	jl     0x441487
  4414c4:	inc    esp
  4414c6:	retw   
  4414c8:	push   ebx
  4414c9:	retf   
  4414ca:	or     BYTE PTR es:[edi],0xef
  4414ce:	rol    BYTE PTR [ebx],1
  4414d0:	mov    ch,0x8f
  4414d2:	add    BYTE PTR [ebp-0x72aded52],bh
  4414d8:	mov    bl,0x59
  4414da:	js     0x4414ca
  4414dc:	lods   eax,DWORD PTR ds:[esi]
  4414dd:	aad    0x38
  4414df:	jmp    0xb15f:0xd9fe325c
  4414e6:	add    dl,al
  4414e8:	hlt    
  4414e9:	mov    esi,0x18ee9f4f
  4414ee:	das    
  4414ef:	jmp    0x858627aa
  4414f4:	jge    0x44155b
  4414f6:	jge    0x44151d
  4414f8:	out    0x10,al
  4414fa:	inc    edx
  4414fb:	inc    ebp
  4414fc:	sbb    DWORD PTR [ecx],edi
  4414fe:	in     eax,dx
  4414ff:	fdivrp st(6),st
  441501:	adc    DWORD PTR [edx],ecx
  441503:	push   0xffffff98
  441505:	jg     0x441507
  441507:	fidivr WORD PTR [edx]
  441509:	mov    al,0xfa
  44150b:	(bad)  
  44150c:	test   ch,0x5a
  44150f:	jb     0x44150b
  441511:	rcr    DWORD PTR [ebx-0x56],0xe5
  441515:	pop    edx
  441516:	int3   
  441517:	popf   
	...
  44152c:	test   DWORD PTR [esp+ecx*8-0x4b],edx
  441530:	test   DWORD PTR [esp+ecx*8-0x53],edx
  441534:	test   DWORD PTR [esp+ecx*8+0x3c],edx
  441538:	sub    dh,BYTE PTR [eax*4+0x2dc1c11c]
  44153f:	jg     0x4414cb
  441541:	pop    ecx
  441542:	je     0x44154f
  441544:	xor    ah,BYTE PTR [edi+0x1c]
  441547:	mov    dl,0x6c
  441549:	pushf  
  44154a:	push   ebp
  44154b:	pusha  
  44154c:	test   eax,0xc2d88783
  441551:	push   cs
  441552:	outs   dx,DWORD PTR ds:[esi]
  441553:	icebp  
  441554:	xor    DWORD PTR [edi-0x67fe9de8],esi
  44155a:	xor    eax,0x7d918d37
  44155f:	add    dh,bh
  441561:	mov    WORD PTR [ecx-0x77ffc3af],es
  441567:	xor    BYTE PTR [ecx-0x6d],cl
  44156a:	add    BYTE PTR [ecx+0x470142c],cl
  441570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441571:	pop    ebx
  441572:	or     al,0x89
  441574:	cmp    al,0x33
  441576:	xor    BYTE PTR [eax+0x4],0x14
  44157a:	jo     0x4415b8
  44157c:	fcmovne st,st(3)
  44157e:	adc    al,0x0
  441580:	pushf  
  441581:	mov    eax,DWORD PTR [eax]
  441583:	mov    DWORD PTR [edi+esi*2-0x7f],eax
  441587:	dec    eax
  441588:	sbb    al,0x14
  44158a:	dec    eax
  44158b:	dec    esp
  44158c:	fwait
  44158d:	or     eax,eax
  44158f:	sbb    eax,DWORD PTR [eax]
	...
  4415a1:	add    BYTE PTR [eax],al
  4415a3:	add    ah,bl
  4415a5:	xchg   edx,eax
  4415a6:	stc    
  4415a7:	dec    esp
  4415a9:	xchg   edx,eax
  4415aa:	mov    edi,0x860880
  4415af:	add    BYTE PTR [ebx],al
  4415b1:	push   edx
  4415b2:	idiv   edi
  4415b4:	iret   
  4415b5:	push   edx
  4415b6:	push   esi
  4415b7:	pop    ebp
  4415b8:	push   cs
  4415b9:	pop    DWORD PTR [eax]
  4415bb:	mov    eax,0xfff75202
  4415c0:	ret    0xbab0
  4415c3:	add    al,0x9c
  4415c5:	push   esi
  4415c6:	int3   
  4415c7:	int3   
  4415c8:	push   eax
  4415c9:	push   esi
  4415ca:	int3   
  4415cb:	int3   
  4415cc:	fst    DWORD PTR [esi]
  4415ce:	in     al,dx
  4415cf:	mov    esi,DWORD PTR [ecx+0x77d22b93]
  4415d5:	push   esp
  4415d6:	je     0x4415f2
  4415d8:	pop    es
  4415d9:	int3   
  4415da:	sbb    al,0x3b
  4415dc:	dec    esi
  4415dd:	pop    esi
  4415de:	or     edx,DWORD PTR [ecx-0x2b]
  4415e1:	ret    0x8928
  4415e4:	sub    al,0x36
  4415e6:	adc    BYTE PTR [eax-0x44],0xf3
  4415ea:	push   ebp
  4415eb:	push   DWORD PTR [ebp+0x775bbebd]
  4415f1:	sub    al,0xfd
  4415f3:	mov    bh,0x4b
  4415f5:	int    0xbe
  4415f7:	stc    
  4415f8:	loopne 0x441674
  4415fa:	add    DWORD PTR [eax],eax
  4415fc:	imul   eax,DWORD PTR [ebx],0x33eec8a
  441602:	add    eax,0x315f3051
  441607:	je     0x441609
	...
  441619:	add    BYTE PTR [eax],al
  44161b:	add    BYTE PTR [esi],ch
  44161d:	out    dx,eax
  44161e:	sbb    BYTE PTR [ebx+0x4d30041a],al
  441624:	imul   esi,DWORD PTR [ecx+0x26300c38],0x35
  44162b:	add    al,dh
  44162d:	jno    0x4415e5
  44162f:	fimul  DWORD PTR [esi]
  441631:	cs mov bl,dl
  441634:	hlt    
  441635:	and    BYTE PTR [edx],al
  441637:	cmp    eax,0x7af42e36
  44163c:	mov    dh,0xb9
  44163e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44163f:	or     DWORD PTR [eax],esi
  441641:	inc    esi
  441642:	cmp    BYTE PTR [edx],dl
  441644:	ss push esi
  441646:	or     al,0x7c
  441648:	mov    al,0xb9
  44164a:	mov    esi,0x5f344309
  44164f:	push   ebp
  441650:	std    
  441651:	fnstsw WORD PTR [esi+0x5996b2f9]
  441657:	mov    esi,0x418c36bd
  44165c:	jmp    0xb9b8db0c
  441661:	aas    
  441662:	cmp    BYTE PTR [ecx+ecx*1],ah
  441665:	push   ds
  441666:	dec    ebp
  441667:	test   esp,esi
  441669:	mov    WORD PTR ds:[edi-0x27],es
  44166d:	xchg   BYTE PTR [edi+0xc6c2ecf],bh
  441673:	jge    0x4416ee
  441675:	das    
  441676:	enter  0xa141,0x8f
  44167a:	out    0x3,eax
  44167c:	mov    ch,0x8f
  44167e:	mov    eax,0x8a
	...
  441693:	add    ah,bh
  441695:	xchg   edi,eax
  441696:	pusha  
  441697:	cmp    DWORD PTR [ecx+0x4cc0af37],ebx
  44169d:	and    eax,0xc2dc5ca1
  4416a2:	and    eax,0x30e7b50c
  4416a7:	shr    DWORD PTR [eiz*1-0x6794a176],0xe7
  4416af:	iret   
  4416b0:	icebp  
  4416b1:	push   ebx
  4416b2:	sub    edx,eax
  4416b4:	jmp    0x21d0d30c
  4416b9:	sbb    DWORD PTR [ebx+edx*1-0x2e19f88],esp
  4416c0:	inc    ecx
  4416c1:	xchg   ebp,eax
  4416c2:	arpl   WORD PTR [esi-0x418704b],ax
  4416c8:	retf   0x699a
  4416cb:	test   BYTE PTR [esi+0x7b],ch
  4416ce:	pop    ds
  4416cf:	aaa    
  4416d0:	pop    ebp
  4416d1:	mov    ebp,0x68ad366e
  4416d6:	(bad)  
  4416d7:	aaa    
  4416d8:	mov    esp,0x33e42118
  4416dd:	(bad)  
  4416de:	(bad)  
  4416e0:	add    DWORD PTR [esp+eiz*8+0x3c6b5cfa],ebx
  4416e7:	or     eax,0xc0a8e80f
  4416ec:	lods   al,BYTE PTR ds:[esi]
  4416ed:	and    al,0x3e
  4416ef:	pop    edi
  4416f0:	arpl   WORD PTR [edi-0x19],di
  4416f3:	mov    edi,gs
  4416f5:	ja     0x441731
  4416f7:	sub    al,0x0
	...
  441709:	add    BYTE PTR [eax],al
  44170b:	add    BYTE PTR [ecx+0x1303e788],al
  441711:	(bad)  
  441712:	sbb    cl,al
  441714:	sbb    BYTE PTR gs:[edi-0x7c],bh
  441718:	jno    0x4416ad
  44171a:	add    BYTE PTR [edx+0xe0ca031],dh
  441720:	xlat   BYTE PTR ds:[ebx]
  441721:	out    0xfb,eax
  441723:	data16 jne 0x44174c
  441726:	push   ebp
  441727:	mov    esp,0x62007f70
  44172c:	jmp    0x4416c1
  44172e:	dec    esi
  44172f:	pusha  
  441730:	hlt    
  441731:	adc    DWORD PTR [edx+0x70],0xffffffd5
  441735:	pop    ebx
  441736:	call   0xf96a8d24
  44173b:	bound  ecx,QWORD PTR [esi]
  44173d:	adc    ch,dl
  44173f:	mov    ch,0xc2
  441741:	or     al,BYTE PTR [edx-0x2f]
  441744:	xor    ecx,ebx
  441746:	and    al,0xb6
  441748:	xchg   BYTE PTR [esi],ah
  44174a:	iret   
  44174b:	push   0xfffffffa
  44174d:	xchg   esi,eax
  44174e:	shl    DWORD PTR [edi-0x16ff7056],0xb6
  441755:	(bad)  
  441756:	pop    edx
  441757:	jb     0x44174a
  441759:	mov    ecx,0x8fc62b5b
  44175e:	mov    eax,0xf9262af3
  441763:	inc    edx
  441764:	push   esp
  441765:	in     eax,0xf
  441767:	jmp    0xaf106a56
  44176c:	jns    0x441741
  44176e:	add    bl,dh
	...
  441784:	jbe    0x441715
  441786:	shr    DWORD PTR [ecx],0x5d
  441789:	mov    WORD PTR [eax],es
  44178b:	jmp    0x19846646
  441790:	mov    ecx,0x73e94081
  441795:	rcr    BYTE PTR [eax-0x14],1
  441798:	mov    dh,0x8f
  44179a:	add    BYTE PTR [edx+0x3ccc5485],ch
  4417a0:	ds xor al,0x4f
  4417a3:	aaa    
  4417a4:	ds mov ch,0x1c
  4417a7:	add    BYTE PTR [edi],cl
  4417a9:	bound  esi,QWORD PTR [eax+eax*1]
  4417ac:	mov    ds:0x7775f816,eax
  4417b1:	push   ss
  4417b2:	inc    esi
  4417b3:	and    al,0xd7
  4417b5:	mov    esi,0x8f4db820
  4417ba:	add    BYTE PTR [eax],al
  4417bc:	lahf   
  4417bd:	jmp    0x441741
  4417bf:	dec    ebx
  4417c0:	mov    ah,0x75
  4417c2:	stc    
  4417c3:	dec    edi
  4417c4:	or     eax,0x9083c9e2
  4417c9:	jg     0x44174c
  4417cb:	inc    esi
  4417cc:	inc    eax
  4417cd:	sbb    al,al
  4417cf:	jne    0x4417e8
  4417d1:	ret    0x1b8
  4417d4:	sbb    al,0x8f
  4417d6:	add    BYTE PTR [esi-0x59],bl
  4417d9:	clc    
  4417da:	push   esp
  4417db:	ret    
  4417dc:	dec    DWORD PTR [esi+0x31]
  4417df:	inc    esi
  4417e0:	hlt    
  4417e1:	or     ecx,DWORD PTR [bp+di+0x2b2a]
  4417e6:	mov    bl,0x1
	...
  4417fc:	or     al,0x8f
  4417fe:	add    bl,dl
  441800:	scas   al,BYTE PTR es:[edi]
  441801:	adc    al,0x3e
  441803:	xor    BYTE PTR [ebp-0x37],dl
  441806:	sub    al,0x89
  441808:	inc    edx
  441809:	aaa    
  44180a:	and    al,0x7b
  44180c:	fcom   QWORD PTR ds:0xe397283e
  441812:	imul   ebp,DWORD PTR [eax],0x8b0cd557
  441818:	and    BYTE PTR [edi],0x49
  44181b:	sub    eax,DWORD PTR [esp+edi*4]
  44181e:	dec    edx
  44181f:	call   0x3d3690
  441824:	pop    ss
  441825:	int    0x28
  441827:	adc    DWORD PTR [eax-0x6e],0xffffff81
  44182b:	inc    esi
  44182c:	mov    cl,al
  44182e:	mov    edi,0x8e7c46
  441833:	add    BYTE PTR [ebp-0x144011c8],dh
  441839:	lods   eax,DWORD PTR ds:[esi]
  44183a:	test   al,0x5b
  44183c:	jbe    0x44187b
  44183e:	inc    ebx
  44183f:	xor    BYTE PTR [ebx+ebp*2],ch
  441842:	shl    BYTE PTR ds:0x8708227a,0xe8
  441849:	mov    ah,0x86
  44184b:	shr    DWORD PTR [esi],0xdd
  44184e:	or     BYTE PTR [ebp+0x51fd7d03],al
  441854:	test   eax,ebp
  441856:	in     eax,0xc8
  441858:	in     al,0xe6
  44185a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44185b:	and    al,BYTE PTR [esi+0x84fd38]
	...
  441871:	add    BYTE PTR [eax],al
  441873:	add    al,ch
  441875:	fs jle 0x44183c
  441878:	ror    DWORD PTR [ebp-0x522e8b45],0x3e
  44187f:	or     al,0x2e
  441881:	(bad)  
  441883:	push   eax
  441884:	into   
  441885:	imul   ecx,DWORD PTR [ebp+0x4f],0xffee2c1d
  44188c:	or     ch,BYTE PTR [ebp+0x74362853]
  441892:	or     DWORD PTR [edi-0x78a61785],eax
  441898:	mov    ecx,DWORD PTR [esi+ebp*8-0x41]
  44189c:	mov    ebp,DWORD PTR [ebp-0x6309a458]
  4418a2:	inc    edx
  4418a3:	sub    BYTE PTR [edx+esi*2-0x7784c90c],dh
  4418aa:	xor    DWORD PTR [ecx],eax
  4418ac:	repnz imul esi,esp,0xfd37c2ff
  4418b3:	test   BYTE PTR [ebx-0x6c],ah
  4418b6:	test   edi,0xcf003426
  4418bc:	cmp    al,0x79
  4418be:	lock pop eax
  4418c0:	out    0x8f,al
  4418c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4418c3:	pop    esi
  4418c4:	xor    BYTE PTR [ebx],ch
  4418c6:	cmp    al,0xc1
  4418c8:	adc    DWORD PTR [esp+edi*1-0x77],0xc241599
  4418d0:	add    BYTE PTR [edi+esi*4],dh
  4418d3:	push   esp
  4418d4:	ss push eax
  4418d6:	jmp    0x0:0x87
	...
  4418e9:	add    BYTE PTR [eax],al
  4418eb:	add    BYTE PTR [edi],ch
  4418ed:	jge    0x4418d6
  4418ef:	add    esi,DWORD PTR [eax]
  4418f1:	test   al,0xcb
  4418f3:	xchg   BYTE PTR [ecx+edx*4+0x6b],bl
  4418f7:	jno    0x4418a1
  4418f9:	(bad)  
  4418fa:	out    0x80,eax
  4418fc:	int    0x93
  4418fe:	out    0xc,eax
  441900:	xor    edi,esi
  441902:	cmc    
  441903:	add    esi,DWORD PTR [ebp-0x39fc00f4]
  441909:	xchg   ebp,eax
  44190a:	data16 cmp al,0xb9
  44190d:	(bad)  
  44190e:	loop   0x441896
  441910:	inc    ebx
  441911:	jge    0x4418fa
  441913:	add    esp,DWORD PTR [eax-0x48c911a0]
  441919:	dec    eax
  44191a:	loop   0x44192b
  44191c:	mov    ch,0x8f
  44191e:	out    0x88,eax
  441920:	jge    0x4418b5
  441922:	pop    esi
  441923:	adc    al,0x3a
  441925:	ror    DWORD PTR [edi],cl
  441927:	mov    DWORD PTR [ebp+0x7f],ebp
  44192a:	outs   dx,BYTE PTR ds:[esi]
  44192b:	inc    esp
  44192c:	mov    ecx,0xad5d5ebc
  441931:	push   ss
  441932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441933:	mov    edi,0x88b7cb3a
  441938:	mov    ah,0xb9
  44193a:	outs   dx,BYTE PTR ds:[esi]
  44193b:	xor    al,0x91
  44193d:	push   ss
  44193e:	and    al,0xb4
  441940:	xor    bh,BYTE PTR [ebx+0x2f6e8acf]
  441946:	stos   BYTE PTR es:[edi],al
  441947:	inc    esi
  441948:	fisttp QWORD PTR [edi+0xcb503e7]
  44194e:	add    BYTE PTR [ecx+0x0],dh
	...
  441964:	enter  0x8196,0xc9
  441968:	(bad)  
  441969:	pop    DWORD PTR [eax]
  44196b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44196c:	xchg   edx,eax
  44196d:	or     eax,0x8ff5de1c
  441972:	test   DWORD PTR [esi],ebp
  441974:	mov    ecx,0xac14c00c
  441979:	dec    esi
  44197a:	add    ebp,esi
  44197c:	mov    dh,0x8f
  44197e:	add    BYTE PTR [eax-0x16ff6f0e],dl
  441984:	xor    eax,0x54fa1025
  441989:	mov    ds:0x96b6657b,eax
  44198e:	test   dl,dh
  441990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441991:	pop    DWORD PTR [eax]
  441993:	out    0xc0,al
  441995:	and    edx,edi
  441997:	pushf  
  441998:	add    cl,BYTE PTR [edx]
  44199a:	retf   0x161a
  44199d:	popa   
  44199e:	jge    0x4419c7
  4419a0:	mov    esi,0xb5315308
  4419a5:	inc    edi
  4419a6:	jge    0x4419d7
  4419a8:	(bad)  
  4419a9:	mov    cl,0xda
  4419ab:	pop    ds
  4419ac:	jno    0x441945
  4419ae:	(bad)  
  4419af:	xchg   esp,eax
  4419b0:	adc    BYTE PTR [ecx-0x70c2090b],ah
  4419b6:	add    BYTE PTR [eax+ecx*1-0x496cff56],dl
  4419bd:	test   eax,0x7e511100
  4419c2:	add    cl,ch
  4419c4:	aas    
  4419c5:	into   
  4419c6:	sbb    BYTE PTR [ebx+0x0],al
	...
  4419dc:	mov    ah,0x14
  4419de:	dec    ebx
  4419df:	aad    0x97
  4419e1:	or     BYTE PTR [ebx-0x33],bl
  4419e4:	inc    edx
  4419e5:	mov    esi,0x37633818
  4419ea:	xchg   esi,esi
  4419ec:	mov    dh,0x8f
  4419ee:	test   DWORD PTR [eax],eax
  4419f0:	cdq    
  4419f1:	jecxz  0x441a1d
  4419f3:	(bad)  ds:0x6a3318d3
  4419f9:	push   ebx
  4419fa:	inc    DWORD PTR [eax]
  4419fc:	mov    WORD PTR [ebx-0x7b221700],ss
  441a02:	add    BYTE PTR [eax],al
  441a04:	pop    es
  441a05:	shl    DWORD PTR [eax],cl
  441a07:	(bad)  
  441a08:	fild   DWORD PTR [ebx-0x6c740000]
  441a0e:	jge    0x4419d0
  441a10:	js     0x4419a4
  441a12:	mov    edi,0xf6da2c40
  441a17:	jmp    ebx
  441a19:	loope  0x441a59
  441a1b:	or     BYTE PTR [ebp-0x76],cl
  441a1e:	test   BYTE PTR [ecx+0xf00934c],dl
  441a24:	sub    dl,BYTE PTR [edi-0x47]
  441a27:	loopne 0x441a7d
  441a29:	push   cs
  441a2a:	ret    
  441a2b:	shl    ebp,0x8b
  441a2e:	sti    
  441a2f:	sar    BYTE PTR [edi],0x45
  441a32:	mov    cl,0x1f
  441a34:	sbb    al,0x93
  441a36:	add    bh,dh
  441a38:	in     eax,dx
  441a39:	adc    dl,cl
  441a3b:	jne    0x441aa8
  441a3d:	push   cs
  441a3e:	retf   
  441a3f:	add    BYTE PTR [eax],0x0
	...
  441a52:	add    BYTE PTR [eax],al
  441a54:	scas   al,BYTE PTR es:[edi]
  441a55:	mov    al,BYTE PTR [eax+0xa6f04fa]
  441a5b:	mov    ebx,DWORD PTR [ecx-0x75]
  441a5e:	adc    DWORD PTR [ebp-0x5c],0x52
  441a62:	inc    eax
  441a63:	sbb    BYTE PTR [eax+eiz*2],dl
  441a66:	inc    eax
  441a67:	add    ch,al
  441a69:	loope  0x441a7a
  441a6b:	add    ah,bl
  441a6d:	or     eax,0xee8d243f
  441a72:	add    ecx,DWORD PTR [ebx+0xfd91627]
  441a78:	pop    edi
  441a79:	call   0xe7f99d81
  441a7e:	add    al,0x83
  441a80:	cmc    
  441a81:	ret    
  441a82:	cli    
  441a83:	xchg   BYTE PTR [edx-0x74],ch
  441a86:	jp     0x441a87
  441a88:	mov    dl,0x28
  441a8a:	std    
  441a8b:	gs mov ch,0xf9
  441a8e:	mov    ds:0x4d2b566,al
  441a93:	xchg   DWORD PTR [edx],eax
  441a95:	sbb    eax,0x28e3dea5
  441a9a:	std    
  441a9b:	test   al,bh
  441a9d:	xor    BYTE PTR [edx-0x561882ad],cl
  441aa3:	or     BYTE PTR [edx-0x48227e07],al
  441aa9:	test   eax,0x6d3c07ca
  441aae:	sbb    al,0x87
  441ab0:	hlt    
  441ab1:	fmul   DWORD PTR [ebx-0xd2e59e7]
  441ab7:	icebp  
	...
  441acc:	pop    esp
  441acd:	or     ecx,DWORD PTR ds:0xcc81b500
  441ad3:	jb     0x441b4d
  441ad5:	mov    cl,0x50
  441ad7:	clc    
  441ad8:	dec    esp
  441ad9:	mov    bh,0xd
  441adb:	add    BYTE PTR [ebp-0xdf7af5f],dh
  441ae1:	jmp    0xe8ec32fa
  441ae6:	cld    
  441ae7:	test   BYTE PTR [eax-0x5a785390],al
  441aed:	sub    ch,bh
  441aef:	jl     0x441afc
  441af1:	sbb    BYTE PTR [edx],dh
  441af3:	push   ds
  441af4:	or     esi,DWORD PTR ss:[ecx-0x28535600]
  441afb:	adc    BYTE PTR [ebp-0x484df9d8],dh
  441b01:	and    eax,0x7e2efc41
  441b06:	shl    al,cl
  441b08:	ja     0x441a99
  441b0a:	retw   0x8bd
  441b0e:	xor    al,0xbc
  441b10:	enter  0x6645,0xba
  441b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441b15:	mov    eax,ds:0x7f5c8ba9
  441b1a:	addr16 mov ebp,0x48648cbd
  441b20:	lds    ecx,FWORD PTR [edi-0x6f9f4f19]
  441b26:	mov    DWORD PTR [esi*4-0x9730d5d],0x44a287
	...
  441b41:	add    BYTE PTR [eax],al
  441b43:	add    BYTE PTR [ebp-0x4abbe389],ch
  441b49:	es retf 0xb513
  441b4d:	(bad)  
  441b4e:	outs   dx,BYTE PTR ds:[esi]
  441b4f:	inc    ecx
  441b50:	xchg   ebp,eax
  441b51:	adc    ah,BYTE PTR [edi-0x61f74cd0]
  441b57:	ret    
  441b58:	pop    edx
  441b59:	mov    BYTE PTR [esi-0x5d],ah
  441b5c:	pop    edx
  441b5d:	or     bh,ch
  441b5f:	mov    al,0xf4
  441b61:	jg     0x441b4a
  441b63:	add    eax,0x19db8fb5
  441b68:	sub    eax,0x50c33bbb
  441b6d:	mov    ch,cl
  441b6f:	add    eax,0x8c4bc33e
  441b74:	mov    gs,WORD PTR [edx]
  441b76:	pop    esi
  441b77:	inc    ecx
  441b78:	mov    ebp,0xe7ab97c1
  441b7d:	test   edi,esp
  441b7f:	add    edi,DWORD PTR [eax]
  441b81:	ret    
  441b82:	pop    ds
  441b83:	mov    esi,DWORD PTR [edi+esi*2-0x2a]
  441b87:	(bad)  
  441b89:	and    eax,0x1cfb0122
  441b8e:	out    0x3,eax
  441b90:	fcom   DWORD PTR [edx-0x5f6a459a]
  441b96:	add    bl,cl
  441b98:	cmp    DWORD PTR [ecx+0x13ade9fc],ebx
  441b9e:	push   eax
  441b9f:	stc    
  441ba0:	mov    dh,0x8f
  441ba2:	or     DWORD PTR [edi-0x2ab4e950],edx
	...
  441bbc:	xor    DWORD PTR [edx-0x33],ecx
  441bbf:	leave  
  441bc0:	jo     0x441b5c
  441bc2:	ret    0x3ff1
  441bc5:	sar    al,0xea
  441bc8:	mov    ds,WORD PTR [edx+0x39eb09fa]
  441bce:	test   DWORD PTR [esi],esp
  441bd0:	xchg   ecx,eax
  441bd1:	adc    eax,eax
  441bd3:	sbb    eax,0xe55814b8
  441bd8:	inc    ebp
  441bd9:	into   
  441bda:	adc    cl,ch
  441bdc:	mov    eax,0x8f15008f
  441be1:	adc    al,0x5b
  441be3:	xchg   ebp,eax
  441be4:	inc    ecx
  441be5:	push   edx
  441be6:	test   DWORD PTR [edx-0x57f7cb89],ebx
  441bec:	adc    BYTE PTR [edi-0x41],bh
  441bef:	cmp    BYTE PTR [esi-0x6c8bfb4b],0x2b
  441bf6:	mov    BYTE PTR [ebx+edx*1+0x2e475307],ch
  441bfd:	mov    eax,0x77ed62e9
  441c02:	push   eax
  441c03:	cwde   
  441c04:	pop    esi
  441c05:	fst    QWORD PTR [edx]
  441c07:	jmp    0x31972ec2
  441c0c:	das    
  441c0d:	into   
  441c0e:	sbb    dl,bh
  441c10:	stc    
  441c11:	imul   esi,edx,0xf91ab52e
  441c17:	jmp    0x6a474ed2
  441c1c:	cmp    al,0x7f
  441c1e:	ins    DWORD PTR es:[edi],dx
  441c1f:	retf   
	...
  441c34:	xor    DWORD PTR [eax-0x7923ff04],ebx
  441c3a:	test   ah,bl
  441c3c:	fisttp DWORD PTR [edi-0x6d5df100]
  441c42:	test   DWORD PTR [ebp-0x38],0xfcd3c607
  441c49:	sar    BYTE PTR [ebx-0x3a],1
  441c4c:	les    ecx,FWORD PTR [edx]
  441c4e:	dec    ebp
  441c4f:	clc    
  441c50:	iret   
  441c51:	aaa    
  441c52:	jnp    0x441c52
  441c54:	mov    esp,0xe38bd65d
  441c59:	xor    edi,DWORD PTR [esi-0x40]
  441c5c:	loopne 0x441be7
  441c5e:	or     ebx,0xd
  441c61:	cmc    
  441c62:	test   BYTE PTR [eax],0x8c
  441c65:	pop    DWORD PTR [ecx+0x47068448]
  441c6b:	and    BYTE PTR [edi],al
  441c6d:	dec    edi
  441c6e:	mov    ecx,0x390c94e8
  441c73:	or     al,0x23
  441c75:	pop    ebx
  441c76:	adc    BYTE PTR [eax],al
  441c78:	pop    esi
  441c79:	pop    DWORD PTR [eax]
  441c7b:	je     0x441c07
  441c7d:	pop    es
  441c7e:	push   ebp
  441c7f:	in     al,dx
  441c80:	or     eax,0x4e6a07e7
  441c85:	or     BYTE PTR [ebp-0x14],cl
  441c88:	les    edi,FWORD PTR [eax+0x77138be5]
  441c8e:	dec    edx
  441c8f:	push   eax
  441c90:	hlt    
  441c91:	(bad)  
  441c92:	or     eax,0x4d064c00
  441c97:	clc    
	...
  441cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441cad:	pop    edx
  441cae:	sbb    BYTE PTR [ebx],dh
  441cb0:	xlat   BYTE PTR ds:[ebx]
  441cb1:	push   ds
  441cb2:	out    dx,eax
  441cb3:	(bad)  
  441cb4:	adc    ebx,DWORD PTR [ebx]
  441cb6:	stc    
  441cb7:	dec    DWORD PTR [edx+ebp*8]
  441cba:	adc    BYTE PTR ds:[ebx+ebx*1],bl
  441cbe:	stc    
  441cbf:	jmp    DWORD PTR [eax]
  441cc1:	je     0x441d3e
  441cc3:	(bad)  
  441cc4:	mov    ch,0x18
  441cc6:	cs push ds
  441cc8:	ss or  al,0xb1
  441ccb:	add    dl,al
  441ccd:	lods   al,BYTE PTR ds:[esi]
  441cce:	push   edx
  441ccf:	or     DWORD PTR [ebp-0x484dfdd8],esi
  441cd5:	and    DWORD PTR [eax-0x4],ecx
  441cd8:	cs jnp 0x441ca8
  441cdb:	loopne 0x441d54
  441cdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441cde:	mov    ebx,0xbc643c08
  441ce3:	std    
  441ce4:	jmp    0x85ea:0x4710b3a5
  441ceb:	inc    ecx
  441cec:	aad    0x9f
  441cee:	push   edx
  441cef:	inc    eax
  441cf0:	xor    al,ch
  441cf2:	sub    ch,bh
  441cf4:	sub    eax,0xf2f11080
  441cf9:	cmp    ch,bh
  441cfb:	std    
  441cfc:	xchg   edx,eax
  441cfd:	sub    BYTE PTR [ecx],ch
  441cff:	sbb    bh,BYTE PTR ds:0x8ebfa85b
  441d05:	xor    BYTE PTR [edi],ah
  441d07:	(bad)  
  441d08:	sub    DWORD PTR [ebx-0x58],edi
  441d0b:	mov    BYTE PTR [eax],dl
  441d0d:	add    al,0x86
  441d0f:	push   ecx
	...
  441d24:	int    0x77
  441d26:	dec    esi
  441d27:	call   0x4159ac
  441d2c:	cmp    DWORD PTR cs:[edi+eax*4-0x2b126f06],0xffffff86
  441d35:	ret    0xaa6
  441d38:	cs jmp 0x44b9a01a
  441d3e:	cli    
  441d3f:	shl    BYTE PTR [ebp+0x38],0xfd
  441d43:	push   DWORD PTR [ebp-0x47fe45d8]
  441d49:	sub    ch,bh
  441d4b:	jmp    DWORD PTR [edx]
  441d4d:	icebp  
  441d4e:	or     al,0x0
  441d50:	mov    ecx,0xbc03e78f
  441d55:	adc    esi,DWORD PTR [edx+0x3]
  441d58:	mov    ch,0x8f
  441d5a:	pop    esi
  441d5b:	ds jne 0x441d64
  441d5e:	pushf  
  441d5f:	mov    bh,0x3a
  441d61:	aam    0xfb
  441d63:	stc    
  441d64:	sub    esp,DWORD PTR [ecx+0x8228ae4]
  441d6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441d6b:	scas   eax,DWORD PTR es:[edi]
  441d6c:	ss dec edi
  441d6e:	fidivr DWORD PTR [edi+0x60]
  441d71:	(bad)  
  441d72:	out    0x3,eax
  441d74:	xor    dl,cl
  441d76:	pop    es
  441d77:	jg     0x441d73
  441d79:	mov    ds:0x7f728911,al
  441d7e:	pusha  
  441d7f:	inc    edi
  441d80:	mov    DWORD PTR [ebx],edx
  441d82:	mov    al,0x30
  441d84:	loope  0x441d8a
  441d86:	adc    ah,ah
	...
  441d9c:	cmp    esi,eax
  441d9e:	fucomi st,st(0)
  441da0:	in     eax,dx
  441da1:	iret   
  441da2:	pop    esi
  441da3:	push   edx
  441da4:	lods   eax,DWORD PTR ds:[esi]
  441da5:	push   es
  441da6:	xor    al,0xa0
  441da8:	mov    BYTE PTR [ecx-0x22],dl
  441dab:	leave  
  441dac:	pop    es
  441dad:	xchg   ebx,eax
  441dae:	mov    esi,0xa505914e
  441db3:	mov    DWORD PTR [esi],eax
  441db5:	sbb    BYTE PTR [edi],dl
  441db7:	mov    esi,esi
  441db9:	inc    ebx
  441dba:	out    0x3e,al
  441dbc:	pop    ecx
  441dbd:	mov    esi,0x6a23ac17
  441dc2:	out    0x3,eax
  441dc4:	cmp    bl,dl
  441dc6:	pop    ebx
  441dc7:	mov    esi,esp
  441dc9:	pop    ss
  441dca:	data16 shl BYTE PTR [ecx-0x4aec55e0],0x8d
  441dd2:	out    0x3,eax
  441dd4:	test   eax,0x214f6e75
  441dd9:	add    eax,0xc938bba4
  441dde:	add    cl,dl
  441de0:	test   BYTE PTR [edi+0x7d20414f],bh
  441de6:	add    cl,ch
  441de8:	cmp    eax,0xc070f8bd
  441ded:	ja     0x441d74
  441def:	lods   al,BYTE PTR ds:[esi]
  441df0:	dec    edx
  441df1:	jno    0x441e36
  441df3:	or     eax,0xae273fb4
  441df8:	jbe    0x441e0a
  441dfa:	push   ebx
  441dfb:	add    DWORD PTR [edi+edx*4],esi
  441dfe:	inc    eax
  441dff:	jmp    0x441e04
	...
  441e14:	mov    cl,0xc
  441e16:	push   esp
  441e17:	fbstp  TBYTE PTR [esi+0x712ec18f]
  441e1d:	pop    DWORD PTR [eax]
  441e1f:	jmp    0xef456cda
  441e24:	mov    dh,0x8f
  441e26:	add    dh,dl
  441e28:	icebp  
  441e29:	jg     0x441e2b
  441e2b:	icebp  
  441e2c:	mov    dh,0x8f
  441e2e:	or     DWORD PTR [ebp+0x21],esp
  441e31:	nop
  441e32:	add    cl,ch
  441e34:	xor    eax,0xb9e9fc94
  441e39:	adc    esi,DWORD PTR [eax]
  441e3b:	div    DWORD PTR [esi+0x3ba92d8f]
  441e41:	rol    BYTE PTR [eax],1
  441e43:	out    0x8,al
  441e45:	mov    WORD PTR [eax],ss
  441e47:	sub    DWORD PTR [esi],edi
  441e49:	int3   
  441e4a:	hlt    
  441e4b:	jb     0x441df6
  441e4d:	outs   dx,DWORD PTR ds:[esi]
  441e4e:	xchg   DWORD PTR [edx*1+0x57fdc00c],ebp
  441e55:	adc    ecx,DWORD PTR [eax-0x33]
  441e58:	aas    
  441e59:	(bad)  
  441e5a:	aam    0x6c
  441e5c:	jg     0x441e01
  441e5e:	adc    DWORD PTR [edx-0x7],esi
  441e61:	iret   
  441e62:	xor    eax,0x9ab56a1
  441e67:	bound  eax,QWORD PTR [ebx+0x59008643]
  441e6d:	clc    
  441e6e:	xchg   DWORD PTR [esi+eiz*1],eax
  441e71:	jecxz  0x441eb1
  441e73:	inc    eax
  441e74:	xchg   edi,eax
  441e75:	leave  
  441e76:	clc    
  441e77:	add    DWORD PTR [eax],0x0
	...
  441e8a:	add    BYTE PTR [eax],al
  441e8c:	popa   
  441e8d:	clc    
  441e8e:	push   DWORD PTR [ebx+0x4]
  441e91:	pop    es
  441e92:	cmp    eax,0xfc5917f4
  441e97:	jb     0x441efc
  441e99:	jmp    0x441ed9
  441e9b:	adc    ah,bl
  441e9d:	lea    eax,[eax]
  441e9f:	add    BYTE PTR [eax-0x75],ch
  441ea2:	or     DWORD PTR [ebp-0x18],0xf
  441ea6:	dec    ebp
  441ea7:	clc    
  441ea8:	push   edi
  441ea9:	pop    ebx
  441eaa:	sbb    BYTE PTR [ecx+0x2e],dl
  441ead:	mov    esp,0x8bcf95e8
  441eb2:	add    BYTE PTR [ebx+0x4780eb89],cl
  441eb8:	les    ebx,FWORD PTR [eax-0x374a0bc3]
  441ebe:	cld    
  441ebf:	add    ecx,DWORD PTR [edi+ecx*1+0x75]
  441ec3:	in     al,0x8c
  441ec5:	xchg   esp,eax
  441ec6:	dec    ebp
  441ec7:	clc    
  441ec8:	xchg   ebx,eax
  441ec9:	or     BYTE PTR [ebp-0x1c6c63f3],ch
  441ecf:	push   cs
  441ed0:	pop    es
  441ed1:	retf   
  441ed2:	and    BYTE PTR [ebp-0x3900a7b4],al
  441ed8:	int3   
  441ed9:	jg     0x441edb
  441edb:	add    BYTE PTR [ebx+edx*4-0x41],bl
  441edf:	inc    edi
  441ee0:	pushf  
  441ee1:	mov    eax,DWORD PTR [eax]
  441ee3:	add    BYTE PTR [edx+ecx*2-0x1],cl
  441ee7:	push   es
  441ee8:	dec    esp
  441ee9:	xchg   ebx,eax
  441eea:	add    bh,dh
  441eec:	fwait
  441eed:	jnp    0x441eef
  441eef:	adc    BYTE PTR [eax],al
	...
  441f01:	add    BYTE PTR [eax],al
  441f03:	add    BYTE PTR [ebx+edx*4+0x7],bl
  441f07:	test   ah,al
  441f09:	mov    eax,DWORD PTR [eax]
  441f0b:	add    BYTE PTR [ebp-0x4a03d057],dh
  441f11:	xor    eax,0x28b87f81
  441f16:	std    
  441f17:	sub    al,0xf5
  441f19:	mov    ds:0x2db52428,eax
  441f1e:	ja     0x441f2c
  441f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441f21:	call   0xa24562a1
  441f26:	inc    ebp
  441f27:	and    BYTE PTR [esp+eiz*8],ch
  441f2a:	mov    al,ds:0xe3f4f583
  441f2f:	test   BYTE PTR [ebp+0x4c],bh
  441f32:	jl     0x441f7f
  441f34:	add    DWORD PTR [ebx+edi*4+0x3da1ca74],esp
  441f3b:	inc    eax
  441f3c:	sahf   
  441f3d:	lock aam 0x6c
  441f40:	ret    0x57b1
  441f43:	aam    0x3f
  441f45:	fs test al,0x88
  441f48:	mov    ecx,0x7541ae22
  441f4d:	mov    cl,0x58
  441f4f:	clc    
  441f50:	ss ret 
  441f52:	test   al,0x0
  441f54:	and    DWORD PTR [ecx],esp
  441f56:	jp     0x441f9b
  441f58:	test   eax,0x27fc4791
  441f5d:	sahf   
  441f5e:	mov    dh,0x41
  441f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441f61:	sub    BYTE PTR [ebx],al
  441f63:	add    BYTE PTR [ebp+0x851574],dh
	...
  441f79:	add    BYTE PTR [eax],al
  441f7b:	add    al,dh
  441f7d:	cld    
  441f7e:	jns    0x441fd3
  441f80:	jge    0x441f33
  441f82:	inc    esi
  441f83:	sbb    BYTE PTR [ebx+ebx*2],al
  441f86:	push   esp
  441f87:	call   0x4159dc
  441f8c:	cs jnp 0x441f3b
  441f8f:	xchg   edx,esi
  441f91:	inc    eax
  441f92:	jp     0x441fd7
  441f94:	dec    ecx
  441f95:	dec    edi
  441f96:	dec    eax
  441f97:	cld    
  441f98:	mov    dh,0x8f
  441f9a:	aaa    
  441f9b:	xchg   BYTE PTR [esi-0x198318d5],bh
  441fa1:	pop    ss
  441fa2:	loop   0x441f2c
  441fa4:	mov    dh,0x84
  441fa6:	out    0x3,eax
  441fa8:	adc    BYTE PTR [ebp+0xcd54a6e],al
  441fae:	daa    
  441faf:	aaa    
  441fb0:	mov    ah,0x4e
  441fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441fb3:	out    0x12,eax
  441fb5:	push   ss
  441fb6:	out    0x3,eax
  441fb8:	hlt    
  441fb9:	(bad)  
  441fba:	out    dx,eax
  441fbb:	add    esi,DWORD PTR [ebp-0x5ab5ed71]
  441fc1:	(bad)  
  441fc2:	in     eax,0x3
  441fc4:	mov    ch,0x9b
  441fc6:	int3   
  441fc7:	xchg   bh,ch
  441fc9:	jle    0x442041
  441fcb:	fld    TBYTE PTR [edi]
  441fcd:	cli    
  441fce:	out    0x3,al
  441fd0:	mov    ch,0x8f
  441fd2:	data16 xor cl,dl
  441fd5:	mov    ds,edx
  441fd7:	xchg   edx,edi
  441fd9:	and    bh,0x3
  441fdc:	lods   al,BYTE PTR ds:[esi]
  441fdd:	fucom  st(4)
  441fdf:	mov    al,0x0
	...
  441ff1:	add    BYTE PTR [eax],al
  441ff3:	add    BYTE PTR [esi+0x13],ch
  441ff6:	pop    esi
  441ff7:	ret    0x3080
  441ffa:	and    eax,0x70887785
  441fff:	push   edi
  442000:	popf   
  442001:	xchg   ecx,eax
  442002:	lahf   
  442003:	test   DWORD PTR [edi-0x432dca80],ebx
  442009:	fcomp  QWORD PTR [ecx]
  44200b:	or     al,0xc0
  44200d:	xacquire xchg BYTE PTR ss:[eax-0x374e65e7],cl
  442015:	cmp    dh,dl
  442017:	mov    ecx,0x86c7cd38
  44201c:	jne    0x441fba
  44201e:	fnstcw WORD PTR [esp+ebp*8+0x7f]
  442022:	test   al,0xab
  442024:	mov    dl,0x10
  442026:	add    BYTE PTR [eax-0x42b7f34a],cl
  44202c:	leave  
  44202d:	mov    esi,0x5ffb2e20
  442032:	(bad)  
  442033:	call   0xe9aaafee
  442038:	ror    BYTE PTR [edi-0x2db1169a],1
  44203e:	push   cs
  44203f:	jmp    0xf18f2afa
  442044:	cdq    
  442045:	sar    al,0x60
  442048:	jl     0x4420c1
  44204a:	xchg   DWORD PTR [eax-0xdfeaffa],ebp
  442050:	mov    dh,0x8f
  442052:	add    BYTE PTR [eax],dl
  442054:	mov    ch,0x83
  442056:	add    cl,ch
	...
  44206c:	cmp    DWORD PTR [edx],ebx
  44206e:	and    BYTE PTR [edx+0x57b93d0],bl
  442074:	mov    ecx,0xdaa28486
  442079:	adc    al,0xf9
  44207b:	out    0x4c,al
  44207d:	adc    eax,0xb1a9cfa
  442082:	retf   0x16ba
  442085:	push   esi
  442086:	jge    0x44202f
  442088:	mov    esi,0xb9d1530d
  44208d:	aaa    
  44208e:	jge    0x44205f
  442090:	xchg   esi,eax
  442091:	mov    ds:0xa6172da,al
  442096:	mov    ebp,0x7f7f56a8
  44209b:	enter  0x16b6,0x0
  44209f:	jmp    0xaac96855
  4420a4:	ja     0x4420cd
  4420a6:	or     BYTE PTR [eax-0x16dc78a9],ch
  4420ac:	and    eax,0x77ea008f
  4420b1:	or     cl,BYTE PTR [ebx+0x0]
  4420b4:	fs push ecx
  4420b6:	jecxz  0x4420d0
  4420b8:	dec    edi
  4420b9:	dec    ebx
  4420ba:	add    DWORD PTR [edi+0x64],0xf303999
  4420c1:	inc    ebx
  4420c2:	sub    esi,esi
  4420c4:	xchg   ebx,eax
  4420c5:	xchg   DWORD PTR [edx],eax
  4420c7:	add    BYTE PTR [eax+edx*4+0x7b],cl
  4420cb:	jg     0x4420e5
  4420cd:	nop
  4420ce:	pop    es
  4420cf:	test   BYTE PTR [eax],al
	...
  4420e1:	add    BYTE PTR [eax],al
  4420e3:	add    BYTE PTR [edx],bh
  4420e5:	adc    edi,ecx
  4420e7:	inc    DWORD PTR [esi]
  4420e9:	nop
  4420ea:	bound  eax,QWORD PTR [eax]
  4420ec:	push   es
  4420ed:	nop
  4420ee:	call   0xcfd6a0
  4420f3:	mov    esp,DWORD PTR [ecx]
  4420f5:	sbb    BYTE PTR [edx+0x3a98b447],al
  4420fb:	xor    BYTE PTR [edi-0x1c380743],al
  442101:	adc    bh,cl
  442103:	(bad)  
  442104:	fmul   QWORD PTR [edx]
  442106:	jne    0x442114
  442108:	ror    DWORD PTR [esi-0x7018237c],1
  44210e:	add    BYTE PTR [ebx+0xeff1449],al
  442114:	push   eax
  442115:	cmp    al,BYTE PTR [ebx]
  442117:	add    ah,cl
  442119:	adc    BYTE PTR [edi+0x4],dh
  44211c:	int3   
  44211d:	pop    ebx
  44211e:	adc    al,0x8b
  442120:	pop    edx
  442121:	psubusw mm0,QWORD PTR [edi]
  442124:	outs   dx,DWORD PTR ds:[esi]
  442125:	mul    DWORD PTR [edx]
  442127:	icebp  
  442128:	push   ebx
  442129:	mov    edx,DWORD PTR [edx]
  44212b:	add    BYTE PTR [edi+ecx*4-0x7068a51f],cl
  442132:	add    BYTE PTR [ebx+0x2a6b8f5a],al
  442138:	daa    
  442139:	mov    al,BYTE PTR [ebp+0x8f8c9b]
  44213f:	add    BYTE PTR [ebp-0x4a03d05b],dh
  442145:	xor    DWORD PTR [ecx+0x9f],eax
	...
  44215b:	add    BYTE PTR [esi+0x2308fd28],ch
  442161:	daa    
  442162:	stos   BYTE PTR es:[edi],al
  442163:	dec    ebx
  442164:	push   ecx
  442165:	scas   al,BYTE PTR es:[edi]
  442166:	mov    edx,0x7d6755cd
  44216b:	ret    0x9fad
  44216e:	push   edi
  44216f:	clc    
  442170:	mov    dh,0xd0
  442172:	jge    0x44216e
  442174:	mov    dh,0x36
  442176:	retf   
  442177:	test   esi,edi
  442179:	push   edi
  44217a:	xchg   ebp,eax
  44217b:	test   esi,esi
  44217d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44217e:	mov    ds:0xfdc937ff,eax
  442183:	xchg   BYTE PTR [edx-0x490781dc],al
  442189:	fst    DWORD PTR [ecx-0x7]
  44218c:	fldenv [ebx+0x2876398c]
  442192:	(bad)  
  442193:	in     eax,0xb7
  442195:	popa   
  442196:	add    DWORD PTR [ebx],ecx
  442198:	mov    ch,0x28
  44219a:	std    
  44219b:	jl     0x442170
  44219d:	and    eax,0x28aff99c
  4421a2:	std    
  4421a3:	test   dl,bh
  4421a5:	nop
  4421a6:	jne    0x442199
  4421a8:	retf   0x7e21
  4421ab:	jnp    0x44215e
  4421ad:	and    al,dl
  4421af:	add    DWORD PTR [esi+0x28fffd28],esp
  4421b5:	(bad)  
  4421b6:	ret    
  4421b7:	in     eax,0xb7
  4421b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4421ba:	fwait
  4421bb:	std    
  4421bc:	lea    ecx,[ecx+0xfff5]
	...
  4421d2:	add    BYTE PTR [eax],al
  4421d4:	call   0xd21:0x7bfe95e7
  4421db:	add    BYTE PTR [ebp-0x491581d8],dh
  4421e1:	(bad)  
  4421e2:	nop
  4421e3:	shl    DWORD PTR [ebx-0x9851871],cl
  4421e9:	xchg   DWORD PTR [edx+0x1477cd43],ebp
  4421ef:	inc    esp
  4421f0:	mov    ch,0x4a
  4421f2:	jmp    0x58c4:0xe78fb510
  4421f9:	lea    esp,[esi-0x63]
  4421fc:	dec    eax
  4421fd:	daa    
  4421fe:	xor    al,0xf9
  442200:	inc    edx
  442201:	adc    ch,BYTE PTR [esi-0x43]
  442204:	mov    eax,0x23dae230
  442209:	ds sub BYTE PTR ds:[edi],0x6f
  44220e:	(bad)  
  44220f:	loope  0x4421b2
  442211:	xchg   esp,eax
  442212:	inc    ebx
  442213:	add    ebp,DWORD PTR [ebx+ecx*1+0x1212f93e]
  44221a:	loop   0x442291
  44221c:	or     edx,DWORD PTR [ecx]
  44221e:	pushf  
  44221f:	scas   eax,DWORD PTR es:[edi]
  442220:	cmp    BYTE PTR [ecx+0x36],al
  442223:	mov    ds:0xfb210ebb,eax
  442228:	cmp    edi,DWORD PTR [edi+ecx*1+0x90e0d02]
  44222f:	jecxz  0x442281
  442231:	xor    DWORD PTR [esi-0x46],ebp
  442234:	xor    BYTE PTR [esi-0xe],cl
  442237:	rol    DWORD PTR [eax],cl
	...
  442249:	add    BYTE PTR [eax],al
  44224b:	add    BYTE PTR [esi-0x4afd0dee],dl
  442251:	push   eax
  442252:	add    BYTE PTR [ebx],dl
  442254:	mov    BYTE PTR [eax-0xe],dl
  442257:	xchg   BYTE PTR [eax-0x1f5225eb],ah
  44225d:	xor    al,0x16
  44225f:	mov    dh,0x28
  442261:	xchg   ebx,eax
  442262:	fild   DWORD PTR ds:0xc527c93a
  442268:	mov    ah,0x81
  44226a:	out    0x3,eax
  44226c:	mov    ch,0x80
  44226e:	add    BYTE PTR [ebp+0x3],ch
  442271:	mov    al,BYTE PTR [eax]
  442273:	jmp    0xe94db1f1
  442278:	mov    dh,0x8f
  44227a:	test   DWORD PTR [esi],esp
  44227c:	stc    
  44227d:	or     BYTE PTR [ebx-0x63],al
  442280:	xor    dl,BYTE PTR [eax+0x9]
  442283:	gs mov cl,0x8d
  442286:	add    cl,ch
  442288:	ffree  st(4)
  44228a:	cld    
  44228b:	ret    0x9e77
  44228e:	add    esp,DWORD PTR [edx+0x76]
  442291:	or     DWORD PTR [ebx+0x75],ecx
  442294:	mov    esp,0x7622f0c4
  442299:	sahf   
  44229a:	add    esi,DWORD PTR [edx-0xa]
  44229d:	or     BYTE PTR [ebx+0x5d],al
  4422a0:	xor    dl,BYTE PTR [eax+0x9]
  4422a3:	gs aaa 
  4422a5:	mov    al,BYTE PTR [eax]
  4422a7:	jmp    0x7338e749
  4422ac:	push   0x17
  4422ae:	test   DWORD PTR [eax+eax*1+0x0],ebp
	...
  4422c1:	add    BYTE PTR [eax],al
  4422c3:	add    BYTE PTR [esi],ch
  4422c5:	ror    DWORD PTR [esi-0x67],0x1e
  4422c9:	(bad)  
  4422ca:	and    eax,0x430ab6e9
  4422cf:	adc    eax,0xc0f8ccb6
  4422d4:	jae    0x4422e9
  4422d6:	daa    
  4422d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4422d8:	adc    DWORD PTR es:[ecx+edx*1+0x5c],eax
  4422dd:	mov    esp,0x83fd6af8
  4422e2:	daa    
  4422e3:	scas   al,BYTE PTR es:[edi]
  4422e4:	jbe    0x44230e
  4422e6:	repnz loopne 0x44229f
  4422e9:	(bad)  
  4422ea:	jge    0x4422d3
  4422ec:	mov    eax,0xda6c22a3
  4422f1:	imul   eax,DWORD PTR [eax],0x6a
  4422f4:	fist   DWORD PTR [ebx]
  4422f6:	add    dh,bl
  4422f8:	cmp    dl,BYTE PTR [eax+0x6]
  4422fb:	add    BYTE PTR [esp+ecx*4-0x1c6149f9],cl
  442302:	inc    esp
  442303:	cld    
  442304:	pop    ss
  442305:	ror    edx,cl
  442307:	loopne 0x4422d7
  442309:	push   cs
  44230a:	mov    esi,0xf8ba0508
  44230f:	add    esi,DWORD PTR [edi+ecx*1-0xa]
  442313:	push   cs
  442314:	into   
  442315:	inc    ecx
  442316:	or     ebx,0xffffffcf
  442319:	in     eax,dx
  44231a:	push   ss
  44231b:	rol    DWORD PTR [edi-0x77],0x79
  44231f:	rcr    DWORD PTR [ebp-0x73],0x0
  442323:	add    bh,dl
  442325:	dec    edi
  442326:	or     DWORD PTR [edi+0x0],0x0
	...
  442339:	add    BYTE PTR [eax],al
  44233b:	add    BYTE PTR [esp+ecx*2-0x2838fa1d],ch
  442342:	jp     0x442324
  442344:	xor    ecx,DWORD PTR [edi]
  442346:	(bad)  [edi]
  442348:	pop    esp
  442349:	ud1    eax,DWORD PTR [ecx*8-0x7d7cfc09]
  442351:	adc    bh,BYTE PTR [edx+0x7f]
  442354:	cld    
  442355:	cmp    ecx,0x3f951cff
  44235b:	fs xchg ebp,eax
  44235d:	push   ebx
  44235e:	pop    esp
  44235f:	jnp    0xd4441585
  442365:	psubb  mm3,QWORD PTR [esi]
  442368:	ror    DWORD PTR [edx],cl
  44236a:	sub    edi,ecx
  44236c:	mov    bl,0xe3
  44236e:	mov    esi,0x8c4447
  442373:	add    ah,bl
  442375:	dec    edx
  442376:	call   DWORD PTR [eax]
  442378:	fmul   QWORD PTR [ebx+0x74238b00]
  44237e:	xor    ecx,DWORD PTR [edi+0x70]
  442381:	pop    eax
  442382:	dec    edx
  442383:	jmp    0x442324
  442385:	mov    BYTE PTR [ecx+0x0],al
  442388:	mov    ch,0x79
  44238a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44238b:	std    
  44238c:	daa    
  44238d:	fwait
  44238e:	cmp    DWORD PTR [ebx-0x67],0x5183f5f9
  442395:	add    ch,bh
  442397:	(bad)  
  442398:	mov    edx,0xf0f9028e
  44239d:	cmp    al,0x79
  44239f:	retf   0x0
	...
  4423b2:	add    BYTE PTR [eax],al
  4423b4:	sbb    WORD PTR [edx+0x7d],ax
  4423b8:	jnp    0x4423bb
  4423ba:	jl     0x44240f
  4423bc:	ins    DWORD PTR es:[edi],dx
  4423bd:	cli    
  4423be:	les    edi,FWORD PTR [ebp+0x63]
  4423c1:	cli    
  4423c2:	xor    bl,dl
  4423c4:	cs mov esi,0xf50a091c
  4423ca:	aas    
  4423cb:	adc    BYTE PTR [edi+0x6e8504b8],0x7a
  4423d2:	mov    ds:0x387fd301,eax
  4423d7:	inc    ecx
  4423d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4423d9:	ins    DWORD PTR es:[edi],dx
  4423da:	cmp    eax,0x15363e68
  4423df:	mov    edi,0xea81fa0e
  4423e4:	mov    dh,0x91
  4423e6:	xor    eax,0x6c89875c
  4423eb:	or     eax,0x36fcf8b5
  4423f0:	jp     0x4423c2
  4423f2:	xor    DWORD PTR ds:0xa477fe0e,ebx
  4423f8:	cdq    
  4423f9:	clc    
  4423fa:	cld    
  4423fb:	push   DWORD PTR [ebp-0x4d97b28f]
  442401:	gs clc 
  442403:	push   edx
  442404:	xor    eax,0x86003cdb
  442409:	stos   BYTE PTR es:[edi],al
  44240a:	push   ds
  44240b:	xchg   DWORD PTR [ecx+0x35],esp
  44240e:	sub    eax,0xec107af9
  442413:	inc    eax
  442414:	dec    ebp
  442415:	(bad)  
  442416:	push   ebp
  442417:	mov    ds:0x0,al
	...
  44242c:	ds push ss
  44242e:	pop    ss
  44242f:	add    DWORD PTR [ebp+0x113a648f],esi
  442435:	sbb    eax,ebp
  442437:	jl     0x44242d
  442439:	pop    ebx
  44243a:	je     0x4423ce
  44243c:	test   DWORD PTR [ecx+0x1cfb03e7],edx
  442442:	sub    dl,BYTE PTR [eax-0x1b]
  442445:	pusha  
  442446:	mov    ds:0xe78fb403,al
  44244b:	add    ebx,ebx
  44244d:	mov    ds:0x5fe5426c,al
  442452:	std    
  442453:	add    ecx,DWORD PTR [ebp+0x68]
  442456:	aad    0x3
  442458:	mov    ch,0x1a
  44245a:	sbb    al,0xac
  44245c:	rcl    bl,1
  44245e:	fidivr WORD PTR [esi+esi*8-0x19]
  442462:	imul   eax,ebx,0xffffffac
  442465:	adc    al,0x44
  442467:	sti    
  442468:	cmp    cl,BYTE PTR [esi]
  44246a:	jo     0x4424ae
  44246c:	popf   
  44246d:	(bad)  
  44246e:	loope  0x442485
  442470:	mov    ch,0x8f
  442472:	out    0x7e,eax
  442474:	je     0x4424e9
  442476:	out    0x42,al
  442478:	xchg   ebp,eax
  442479:	enter  0x1baa,0xbc
  44247d:	adc    al,BYTE PTR [esi+0x4]
  442480:	mov    ch,0x8f
  442482:	pop    esi
  442483:	cmp    ch,BYTE PTR [ecx+0x47]
  442486:	call   0x36d3d98e
  44248b:	mov    ds:0x3bab5e38,eax
	...
  4424a4:	enter  0x5dd2,0xf7
  4424a8:	arpl   WORD PTR [edx],bx
  4424aa:	sub    ah,al
  4424ac:	int    0x96
  4424ae:	bnd jno 0x4424a6
  4424b1:	pop    ss
  4424b2:	lods   al,BYTE PTR ds:[esi]
  4424b3:	scas   eax,DWORD PTR es:[edi]
  4424b4:	adc    ch,0xff
  4424b7:	jle    0x442488
  4424b9:	mov    bh,BYTE PTR [ebx-0x13]
  4424bc:	mov    bh,0x98
  4424be:	test   BYTE PTR [esi-0x1106f24f],dh
  4424c4:	and    al,0xe
  4424c6:	cli    
  4424c7:	and    al,0x4d
  4424c9:	adc    ecx,edx
  4424cb:	mov    edx,0x1d491351
  4424d0:	sti    
  4424d1:	mov    al,dl
  4424d3:	icebp  
  4424d4:	mov    cl,0xe7
  4424d6:	mov    bh,0xe8
  4424d8:	mov    dh,0x8f
  4424da:	add    BYTE PTR [edx+0x35491351],bl
  4424e0:	out    dx,al
  4424e1:	pusha  
  4424e2:	clc    
  4424e3:	xor    DWORD PTR [eax+0x4c],edx
  4424e6:	test   ebp,esp
  4424e8:	aaa    
  4424e9:	adc    edi,DWORD PTR [edi+0x99839a8]
  4424ef:	aas    
  4424f0:	jns    0x442507
  4424f2:	dec    ebx
  4424f3:	jne    0x44254d
  4424f5:	iret   
  4424f6:	jo     0x4424a0
  4424f8:	ror    BYTE PTR [edi+edi*4-0x7f],0xa1
  4424fd:	adc    al,0x43
  4424ff:	cmp    eax,0xf9f88ad7
  442504:	loope  0x4424ab
  442506:	mov    edi,0x40
	...
  44251b:	add    BYTE PTR [ecx],ah
  44251d:	cwde   
  44251e:	mov    dl,0x20
  442520:	add    bl,dh
  442522:	and    al,0x38
  442524:	nop
  442525:	push   esi
  442526:	push   0x49538fc7
  44252b:	mov    ecx,0x40684f4d
  442530:	mov    eax,0xa3e9f90c
  442535:	jbe    0x4424bc
  442537:	sub    dh,dh
  442539:	test   DWORD PTR [edi],0x7ccf64e6
  44253f:	sub    DWORD PTR [ebx+0x4f00f0c2],esi
  442545:	add    BYTE PTR [esi+0x90dc9b],al
  44254b:	add    BYTE PTR [edi-0x4c],cl
  44254e:	cld    
  44254f:	add    bl,bl
  442551:	mov    WORD PTR [ecx+0x8],cs
  442554:	pushf  
  442555:	nop
  442556:	pop    es
  442557:	mov    dh,0x9e
  442559:	aaa    
  44255a:	inc    ebp
  44255b:	cld    
  44255c:	pop    ss
  44255d:	inc    edi
  44255e:	retf   
  44255f:	loopne 0x442578
  442561:	(bad)  
  442562:	hlt    
  442563:	inc    edx
  442564:	pop    ds
  442565:	iret   
  442566:	pop    es
  442567:	add    edx,DWORD PTR [edi+eax*1-0x51]
  44256b:	lds    ecx,FWORD PTR [edi]
  44256d:	sar    ecx,1
  44256f:	mov    BYTE PTR [ecx-0x310fccc5],ah
  442575:	loope  0x4424f9
  442577:	inc    edi
  442578:	les    eax,FWORD PTR [esi]
  44257a:	scas   eax,DWORD PTR es:[edi]
  44257b:	int    0x1f
  44257d:	sub    esp,DWORD PTR [ebx]
  44257f:	icebp  
	...
  442594:	rcl    eax,1
  442596:	push   es
  442597:	test   BYTE PTR [ebp+0x5b00008f],cl
  44259d:	jg     0x4425eb
  44259f:	inc    edi
  4425a0:	mov    edx,0x2c83bb8a
  4425a5:	xchg   ebx,eax
  4425a6:	jnp    0x442568
  4425a8:	pop    ds
  4425a9:	shl    edx,1
  4425ab:	add    ah,BYTE PTR [ebp+0x5189e4c5]
  4425b1:	cmp    al,0x7b
  4425b3:	out    dx,al
  4425b4:	push   cs
  4425b5:	sub    DWORD PTR [ebp+0x5e901c00],ebx
  4425bb:	or     DWORD PTR [ecx+0x3e],0x9
  4425bf:	jb     0xa891a70a
  4425c5:	mov    ebp,0x931d8d3f
  4425ca:	xor    esi,eax
  4425cc:	dec    edi
  4425cd:	jmp    0x79fa2555
  4425d2:	and    bh,ah
  4425d4:	mov    ch,0xed
  4425d6:	js     0x4425b7
  4425d8:	mov    edx,0x308fcf6
  4425dd:	clc    
  4425de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4425df:	dec    ebx
  4425e0:	shl    DWORD PTR [eax-0x49],0xcd
  4425e4:	aad    0x70
  4425e6:	xor    bl,ah
  4425e8:	div    DWORD PTR [ebp-0x46]
  4425eb:	or     BYTE PTR [esi-0x49c08930],dh
  4425f1:	outs   dx,DWORD PTR ds:[esi]
  4425f2:	dec    edi
  4425f3:	clc    
  4425f4:	fsubp  st(0),st
  4425f6:	sub    eax,0xd7
	...
  44260b:	add    BYTE PTR [esi-0x22],ah
  44260e:	je     0x4425cd
  442610:	ss fprem 
  442613:	jl     0x44268a
  442615:	idiv   BYTE PTR [ebx+0x43]
  442618:	cmp    DWORD PTR [eax],0x342afd95
  44261e:	mov    eax,ds:0x3d1e6af9
  442623:	mov    esi,esp
  442625:	stc    
  442626:	in     eax,0xef
  442628:	out    0xd1,al
  44262a:	jge    0x4426a7
  44262c:	push   ecx
  44262d:	stc    
  44262e:	icebp  
  44262f:	sub    DWORD PTR [ecx],0xfffffff2
  442632:	cld    
  442633:	push   DWORD PTR [edx-0x17070136]
  442639:	jl     0x4426b0
  44263b:	retf   0x5906
  44263e:	jne    0x44268b
  442640:	or     DWORD PTR [edi],esi
  442642:	jle    0x442606
  442644:	lods   eax,DWORD PTR ds:[esi]
  442645:	cmc    
  442646:	les    ecx,FWORD PTR [ebx+0x537bf174]
  44264c:	or     eax,0xec6eb48e
  442651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442652:	xchg   ebp,eax
  442653:	test   esi,esi
  442655:	jne    0x4425fb
  442657:	jns    0x44268f
  442659:	mov    ecx,0x8f7886f5
  44265e:	sbb    eax,ebp
  442660:	rcl    BYTE PTR [edx+0xadcad5f],1
  442666:	adc    bl,bl
  442668:	sbb    ecx,DWORD PTR [edi+0x3767b17]
  44266e:	sub    al,BYTE PTR [ecx+0x0]
	...
  442681:	add    BYTE PTR [eax],al
  442683:	add    cl,dl
  442685:	(bad)  
  442686:	out    0x3,eax
  442688:	mov    ch,0x16
  44268a:	mov    ds:0x5dd2b81b,al
  44268f:	aas    
  442690:	sbb    DWORD PTR [edi-0x281fdbd6],ecx
  442696:	jmp    0xe7d19619
  44269b:	add    ebx,DWORD PTR [eax]
  44269d:	(bad)  
  44269e:	rol    DWORD PTR [ebx],cl
  4426a0:	or     DWORD PTR [esi+ebp*2-0x1a096ec0],ebp
  4426a7:	js     0x4426a3
  4426a9:	(bad)  
  4426aa:	pop    esi
  4426ab:	ss or  eax,0xd7b01c0b
  4426b1:	sbb    BYTE PTR [ebx],ch
  4426b3:	aaa    
  4426b4:	in     eax,0xa
  4426b6:	and    bl,BYTE PTR [eax+eiz*8]
  4426b9:	mov    WORD PTR [ebx+0x5dfbe603],ds
  4426bf:	(bad)  ds:[esi+0x5282242a]
  4426c6:	maskmovq mm0,mm0
  4426c9:	lods   al,BYTE PTR ds:[esi]
  4426ca:	jno    0x442672
  4426cc:	cmp    al,0xe
  4426ce:	stos   BYTE PTR es:[edi],al
  4426cf:	or     BYTE PTR [ebx+edx*1+0xa2afd98],bh
  4426d6:	rol    DWORD PTR [edx+0x3e57f5c],0xb5
  4426dd:	(bad)  
  4426de:	fidivr DWORD PTR [edi+0x40]
  4426e1:	xchg   ecx,eax
  4426e2:	out    0x3,eax
  4426e4:	ds adc dh,bh
	...
  4426fb:	add    BYTE PTR [ebp-0x3c9bff71],dh
  442701:	jnp    0x44268a
  442703:	call   0x74907779
  442708:	cmp    edi,edi
  44270a:	std    
  44270b:	call   0xbec980c6
  442710:	xchg   esi,eax
  442711:	push   ss
  442712:	inc    ecx
  442713:	mov    ch,0x66
  442715:	pop    edx
  442716:	shr    ecx,0xc9
  442719:	or     ecx,edi
  44271b:	jmp    0x79853d84
  442720:	data16 jno 0x442722
  442723:	add    BYTE PTR [ebx+0x35e900b9],dh
  442729:	aam    0x17
  44272b:	jo     0x44270f
  44272d:	out    0x82,eax
  44272f:	test   eax,0xd4bb0ea0
  442734:	pop    eax
  442735:	pop    es
  442736:	test   DWORD PTR [esi],ebx
  442738:	lods   eax,DWORD PTR ds:[esi]
  442739:	adc    al,0x49
  44273b:	dec    ebp
  44273c:	(bad)  
  44273d:	pop    esi
  44273e:	push   eax
  44273f:	sub    BYTE PTR fs:[eax],al
  442742:	(bad)  
  442743:	call   0x2ecf80fe
  442748:	stc    
  442749:	pop    edi
  44274a:	dec    edi
  44274b:	jb     0x4426f5
  44274d:	outs   dx,DWORD PTR ds:[esi]
  44274e:	shr    ecx,0x58
  442751:	or     ecx,edi
  442753:	jmp    0x19a87625
  442758:	ret    0x4963
  44275b:	stc    
  44275c:	in     al,0x71
  44275e:	inc    BYTE PTR [eax+0x0]
	...
  442774:	cld    
  442775:	mov    dh,0x0
  442777:	jmp    0x705bfbb1
  44277c:	jmp    0x1c0e:0x282982e7
  442783:	pop    esp
  442784:	push   eax
  442785:	pop    es
  442786:	jge    0x442754
  442788:	or     cl,BYTE PTR [edi+0x35290085]
  44278e:	mov    edi,0x8cdf07
  442793:	add    BYTE PTR [ebx],dl
  442795:	mov    DWORD PTR [ebp+0x6],ebp
  442798:	fmul   QWORD PTR [edi+edi*4+0x8ce807]
  44279f:	add    BYTE PTR [edi-0x50],cl
  4427a2:	cld    
  4427a3:	push   es
  4427a4:	mov    ds:0x8dac7d79,eax
  4427aa:	stc    
  4427ab:	(bad)  
  4427ac:	fdivr  QWORD PTR [esi+0x5198b5d]
  4427b2:	test   BYTE PTR [ebp-0x4c],cl
  4427b5:	xchg   BYTE PTR [ebp-0x10],cl
  4427b8:	adc    eax,0xe18b0ccc
  4427bd:	cmp    eax,DWORD PTR [ecx-0x1f3dd8f8]
  4427c3:	mov    esp,ebx
  4427c5:	mov    ds:0x5d805583,eax
  4427ca:	adc    DWORD PTR [eax-0x68],0xb45f815c
  4427d1:	test   BYTE PTR [edi+0x3c],ch
  4427d4:	je     0x442819
  4427d6:	sub    BYTE PTR [eax],al
	...
  4427ec:	pop    esp
  4427ed:	xchg   DWORD PTR ds:0xc5ce708,edi
  4427f3:	mov    esp,DWORD PTR [ebx+eiz*4-0x787ba07d]
  4427fa:	outs   dx,DWORD PTR ds:[esi]
  4427fb:	cmp    al,0xd5
  4427fd:	pop    ecx
  4427fe:	call   0x40cb948e
  442803:	add    al,0xcf
  442805:	dec    eax
  442806:	or     BYTE PTR [ebx+0x4d820703],al
  44280c:	lods   al,BYTE PTR ds:[esi]
  44280d:	test   DWORD PTR [ebp-0x8],ecx
  442810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442811:	leave  
  442812:	cld    
  442813:	setns  BYTE PTR [eax-0x3]
  442817:	push   DWORD PTR [ebp-0x67e440a]
  44281d:	cld    
  44281e:	cld    
  44281f:	dec    DWORD PTR [edx]
  442821:	push   ecx
  442822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442823:	stc    
  442824:	or     al,0x6b
  442826:	cli    
  442827:	(bad)  
  442828:	cli    
  442829:	ins    BYTE PTR es:[edi],dx
  44282a:	xor    al,0x54
  44282c:	sub    eax,0xb5fffcf7
  442831:	lds    ebx,FWORD PTR [ebp+0x8b23ac1]
  442837:	add    BYTE PTR [ebp-0x4a00030a],dh
  44283d:	cs loopne 0x4427fc
  442840:	ds mov esi,0x7d714178
  442846:	stc    
  442847:	xchg   DWORD PTR [esi],ebp
  442849:	scas   al,BYTE PTR es:[edi]
  44284a:	mov    esi,0x6ae5bde7
  44284f:	mov    DWORD PTR [eax],0x0
	...
  442861:	add    BYTE PTR [eax],al
  442863:	add    BYTE PTR [esp+esi*4],bh
  442866:	cwde   
  442867:	xor    eax,0x85435f73
  44286c:	call   0x80e5:0xb5fc1f7a
  442873:	mov    edi,0x8fcf8b0
  442878:	dec    ebx
  442879:	sti    
  44287a:	popf   
  44287b:	dec    ebx
  44287c:	jns    0x4428f0
  44287e:	into   
  44287f:	int    0x55
  442881:	jb     0x4428d0
  442883:	push   esp
  442884:	idiv   DWORD PTR [ecx-0x3a]
  442887:	or     BYTE PTR [esi+0x5aff5bd0],dh
  44288d:	stc    
  44288e:	cld    
  44288f:	int3   
  442890:	push   ebp
  442891:	jb     0x4428e0
  442893:	dec    esp
  442894:	cmp    al,0xa4
  442896:	pushf  
  442897:	dec    eax
  442898:	xchg   esi,eax
  442899:	cmp    DWORD PTR [ecx-0x338dcbfc],ecx
  44289f:	mov    edi,0xb20df11c
  4428a4:	cld    
  4428a5:	(bad)  
  4428a6:	jo     0x4428f1
  4428a8:	sub    ebx,ecx
  4428aa:	sub    DWORD PTR [ebx],ebx
  4428ac:	pop    edx
  4428ad:	or     al,0x27
  4428af:	adc    edi,DWORD PTR [ecx]
  4428b1:	shl    dh,1
  4428b3:	add    esi,DWORD PTR [ebp+0x36133737]
  4428b9:	dec    eax
  4428ba:	out    0x3,eax
  4428bc:	mov    ch,0x1a
  4428be:	pop    ds
  4428bf:	(bad)
  4428c2:	pusha  
  4428c3:	push   ecx
  4428c4:	add    DWORD PTR [edi+0xcd59],edx
	...
  4428da:	add    BYTE PTR [eax],al
  4428dc:	cmp    dl,BYTE PTR [ebp+0x3]
  4428df:	adc    esp,DWORD PTR [edi]
  4428e1:	fsub   st,st(5)
  4428e3:	push   eax
  4428e4:	fstp   DWORD PTR [eax]
  4428e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4428e7:	mov    edi,0x3e7910d
  4428ec:	mov    ch,0xe2
  4428ee:	push   es
  4428ef:	(bad)  
  4428f0:	outs   dx,BYTE PTR ds:[esi]
  4428f1:	jmp    0x442891
  4428f3:	out    0x71,al
  4428f5:	loop   0x4428f5
  4428f7:	mov    ?,esi
  4428f9:	sti    
  4428fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4428fb:	lods   al,BYTE PTR ds:[esi]
  4428fc:	lds    edx,FWORD PTR [edx+0x1a6d8ea8]
  442902:	sub    dl,BYTE PTR [eax+0x38]
  442905:	mov    ebx,DWORD PTR [edi+0x12]
  442908:	inc    edi
  442909:	push   esp
  44290a:	fwait
  44290b:	mov    esi,?
  44290d:	sti    
  44290e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44290f:	stos   DWORD PTR es:[edi],eax
  442910:	lods   eax,DWORD PTR ds:[esi]
  442911:	xchg   esi,eax
  442912:	jns    0x4428d7
  442914:	jo     0x4428e5
  442916:	in     eax,dx
  442917:	leave  
  442918:	out    0x65,eax
  44291a:	mov    cs,WORD PTR [ecx]
  44291c:	cs sub ah,bh
  44291f:	add    esi,DWORD PTR [ebp+0x5120668f]
  442925:	(bad)  
  442926:	fiadd  DWORD PTR [edi+0x3e78caa]
  44292c:	lods   al,BYTE PTR ds:[esi]
  44292d:	cmp    eax,0xe26f8ee5
  442932:	dec    DWORD PTR [eax+0x6edc5a43]
  442938:	test   DWORD PTR [ebx],eax
  44293a:	ds jmp 0x0:0x24b2985e
	...
  442952:	add    BYTE PTR [eax],al
  442954:	sub    DWORD PTR [edx-0x1c],edx
  442957:	out    0x6c,al
  442959:	into   
  44295a:	cld    
  44295b:	and    BYTE PTR [esi+0x6],ch
  44295e:	stc    
  44295f:	jmp    0x7323fe1a
  442964:	gs jmp 0x4429e3
  442967:	das    
  442968:	mov    esi,0x7e31530e
  44296d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44296e:	mov    ebp,0xb1980e3a
  442973:	lods   al,BYTE PTR ds:[esi]
  442974:	hlt    
  442975:	add    eax,eax
  442977:	bound  esp,QWORD PTR [edi+0x53]
  44297a:	test   ebp,esp
  44297c:	xor    DWORD PTR [esi],ecx
  44297e:	inc    ebx
  44297f:	std    
  442980:	div    dh
  442982:	pop    es
  442983:	out    dx,al
  442984:	pop    esp
  442985:	iret   
  442986:	cld    
  442987:	stos   DWORD PTR es:[edi],eax
  442988:	pop    edx
  442989:	mov    ebx,0x971876c2
  44298e:	mov    dl,0x34
  442990:	bound  ecx,QWORD PTR [ebx]
  442992:	inc    ebx
  442993:	aad    0x60
  442995:	jmp    0x4429bb
  442997:	fdivr  DWORD PTR [esi]
  442999:	pop    ss
  44299a:	(bad)  
  44299b:	repnz mov dh,0x8f
  44299e:	test   DWORD PTR [ecx-0x11f8128a],esi
  4429a4:	fmul   st(4),st
  4429a6:	(bad)  
  4429a7:	gs jge 0x442945
  4429aa:	add    cl,ch
  4429ac:	and    ebx,ebp
  4429ae:	and    al,0x98
  4429b0:	cs pop ecx
  4429b2:	in     al,0x72
  4429b4:	imul   eax,DWORD PTR [ebp-0x19],0xf9
	...
  4429cb:	add    BYTE PTR [edi],bh
  4429cd:	push   edi
  4429ce:	inc    eax
  4429cf:	gs jno 0x442953
  4429d2:	add    eax,0x11971300
  4429d7:	add    BYTE PTR [ecx+edx*4-0x1f],cl
  4429db:	cmp    ah,BYTE PTR [eax]
  4429dd:	xchg   ecx,eax
  4429de:	add    BYTE PTR [eax-0x38f26304],ch
  4429e4:	xchg   ebx,eax
  4429e5:	xlat   BYTE PTR ds:[ebx]
  4429e6:	adc    al,BYTE PTR [eax]
  4429e8:	or     al,0x30
  4429ea:	idiv   edi
  4429ec:	imul   edx,esi,0xfffffffe
  4429ef:	or     bl,BYTE PTR [ecx+edx*4]
  4429f2:	add    cl,ch
  4429f4:	lods   eax,DWORD PTR ds:[esi]
  4429f5:	xchg   edi,eax
  4429f6:	add    BYTE PTR [eax],al
  4429f8:	and    al,0x4c
  4429fa:	je     0x442a0b
  4429fc:	push   edi
  4429fd:	dec    esp
  4429fe:	or     bh,al
  442a00:	sbb    al,0x9
  442a02:	adc    DWORD PTR [ebp+0xc],esi
  442a05:	xchg   ecx,eax
  442a06:	loope  0x442a10
  442a08:	rcl    BYTE PTR [eax-0x2c8df100],1
  442a0e:	jp     0x4429f1
  442a10:	jmp    0x442a2b
  442a12:	inc    edi
  442a13:	dec    eax
  442a14:	xchg   ebx,eax
  442a15:	xchg   esi,eax
  442a16:	or     eax,0x8390cc00
  442a1b:	inc    edi
  442a1c:	push   esp
  442a1d:	or     eax,0xe35374c0
  442a22:	call   0xa458ef9a
  442a27:	and    al,0x8c
  442a29:	nop
  442a2a:	add    BYTE PTR [eax],al
  442a2c:	pop    ds
  442a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442a2e:	cld    
	...
  442a43:	add    BYTE PTR [ebx+0xc],ch
  442a46:	cmp    DWORD PTR [esp+ecx*4],eax
  442a49:	nop
  442a4a:	pop    es
  442a4b:	mov    dh,0x8e
  442a4d:	das    
  442a4e:	inc    ebp
  442a4f:	cld    
  442a50:	xlat   BYTE PTR ds:[ebx]
  442a51:	fmulp  st(2),st
  442a53:	loopne 0x4429f3
  442a55:	or     bh,BYTE PTR [esi-0x7421af8]
  442a5b:	add    esi,DWORD PTR [ebx+eiz*8+0x6f]
  442a5f:	dec    eax
  442a60:	mov    ch,0xa8
  442a62:	mov    esi,0x5caefa85
  442a67:	inc    DWORD PTR [edx-0xa]
  442a6a:	cld    
  442a6b:	int3   
  442a6c:	push   ebp
  442a6d:	loope  0x4429fc
  442a6f:	dec    eax
  442a70:	(bad)  
  442a71:	cmp    esi,edi
  442a73:	inc    eax
  442a74:	jne    0x442a9f
  442a76:	lods   al,BYTE PTR ds:[esi]
  442a77:	push   DWORD PTR [ebx]
  442a79:	mov    dl,0xfc
  442a7b:	call   FWORD PTR [edx]
  442a7d:	adc    DWORD PTR [eax+0x40],0x15c56d3c
  442a84:	mov    ch,0xf6
  442a86:	mov    DWORD PTR [ecx],0xfffcf6ab
  442a8c:	cs xor eax,0xf6b4b835
  442a92:	cld    
  442a93:	inc    DWORD PTR [esi]
  442a95:	push   esi
  442a96:	inc    ebp
  442a97:	sbb    eax,0x85c580f6
  442a9c:	jb     0x442ae4
  442a9e:	mov    WORD PTR [edi*1-0x23403a8f],es
  442aa5:	in     eax,dx
  442aa6:	lss    eax,FWORD PTR [eax]
	...
  442ab9:	add    BYTE PTR [eax],al
  442abb:	add    ah,ch
  442abd:	jle    0x442b01
  442abf:	hlt    
  442ac0:	jle    0x442a76
  442ac2:	pop    ss
  442ac3:	inc    eax
  442ac4:	inc    ebp
  442ac5:	jbe    0x442ae1
  442ac7:	cld    
  442ac8:	mov    ch,0xe1
  442aca:	or     bh,0xb6
  442acd:	clc    
  442ace:	cld    
  442acf:	or     BYTE PTR [ebx-0x9],ah
  442ad2:	cdq    
  442ad3:	dec    ebx
  442ad4:	xchg   ecx,eax
  442ad5:	outs   dx,BYTE PTR ds:[esi]
  442ad6:	retf   0x95cd
  442ad9:	outs   dx,BYTE PTR ds:[esi]
  442ada:	dec    ecx
  442adb:	pop    eax
  442adc:	div    DWORD PTR [ebp-0x3e]
  442adf:	or     BYTE PTR [esi+0x72ff5c30],dh
  442ae5:	stc    
  442ae6:	cld    
  442ae7:	int3   
  442ae8:	push   ebp
  442ae9:	outs   dx,BYTE PTR ds:[esi]
  442aea:	dec    ecx
  442aeb:	push   eax
  442aec:	sub    al,0x90
  442aee:	cmp    al,0x9c
  442af0:	in     eax,dx
  442af1:	scas   al,BYTE PTR es:[edi]
  442af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442af3:	mov    edi,DWORD PTR [ecx+0xacc5e10]
  442af9:	stc    
  442afa:	fimul  WORD PTR [esi]
  442afc:	pop    es
  442afd:	fldcw  WORD PTR [edi+0x49]
  442b00:	inc    ecx
  442b01:	(bad)  
  442b02:	test   eax,0x77387217
  442b07:	(bad)  
  442b09:	inc    eax
  442b0a:	out    0x3,eax
  442b0c:	mov    ch,0x16
  442b0e:	das    
  442b0f:	lds    edx,FWORD PTR [edx]
  442b11:	cwde   
  442b12:	jo     0x442b65
  442b14:	jmp    0x3311c4ab
  442b19:	push   ebp
  442b1a:	inc    ebx
  442b1b:	cmova  ebx,eax
  442b1e:	in     eax,0x50
	...
  442b34:	adc    DWORD PTR [ecx],ebx
  442b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442b37:	mov    edi,0x3e7912d
  442b3c:	mov    ch,0xde
  442b3e:	inc    esi
  442b3f:	mov    ebp,DWORD PTR [esi-0x15]
  442b42:	scas   al,BYTE PTR es:[edi]
  442b43:	loop   0x442b5e
  442b45:	fisttp WORD PTR [esi]
  442b47:	mov    edi,DWORD PTR [esi-0x5]
  442b4a:	daa    
  442b4b:	lods   eax,DWORD PTR ds:[esi]
  442b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442b4d:	mov    gs,WORD PTR [eax]
  442b4f:	mov    ebp,ebp
  442b51:	push   ss
  442b52:	stos   BYTE PTR es:[edi],al
  442b53:	xor    esi,DWORD PTR [eax]
  442b55:	mov    WORD PTR [edi+0xf],gs
  442b58:	addr16 push esp
  442b5a:	sbb    ecx,DWORD PTR [ebp-0x53d8040a]
  442b60:	lods   eax,DWORD PTR ds:[esi]
  442b61:	xchg   edx,eax
  442b62:	cdq    
  442b63:	ret    
  442b64:	cwde   
  442b65:	iret   
  442b66:	sbb    eax,0x665a07c6
  442b6b:	and    BYTE PTR [ecx-0x3d782571],cl
  442b71:	mov    fs,edi
  442b73:	add    ebp,DWORD PTR [ecx+edi*1-0x2180751b]
  442b7a:	dec    eax
  442b7c:	aas    
  442b7d:	push   esi
  442b7e:	fsubr  QWORD PTR [esi-0x15c1fbfb]
  442b84:	push   ds
  442b85:	cwde   
  442b86:	mov    dl,0xa4
  442b88:	inc    ecx
  442b89:	dec    esi
  442b8a:	in     al,0xe6
  442b8c:	loopne 0x442b58
  442b8e:	cld    
  442b8f:	mov    al,ds:0xe9f902de
  442b94:	mov    dh,0xd4
  442b96:	fbstp  TBYTE PTR [edx+0x0]
	...
  442ba9:	add    BYTE PTR [eax],al
  442bab:	add    BYTE PTR [ebp-0x41508315],al
  442bb1:	or     dl,BYTE PTR [ebx+0x71]
  442bb4:	outs   dx,BYTE PTR ds:[esi]
  442bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442bb6:	mov    ebp,0xb1984e3a
  442bbb:	lods   al,BYTE PTR ds:[esi]
  442bbc:	push   eax
  442bbd:	add    al,0xc0
  442bbf:	bound  edi,QWORD PTR [ebx+0x5f]
  442bc2:	test   ebp,esp
  442bc4:	cmp    DWORD PTR [edx],ecx
  442bc6:	inc    ebx
  442bc7:	cmp    eax,0xee07f6f1
  442bcc:	mov    bh,cl
  442bce:	cld    
  442bcf:	stos   DWORD PTR es:[edi],eax
  442bd0:	adc    bh,BYTE PTR [edx+eax*8-0x4d67b34a]
  442bd7:	mov    ah,0xf5
  442bd9:	or     eax,DWORD PTR [ebx+0x15]
  442bdc:	pop    es
  442bdd:	in     al,dx
  442bde:	and    al,0x18
  442be0:	mov    cl,0x18
  442be2:	(bad)  
  442be3:	repnz mov dh,0x8f
  442be6:	test   DWORD PTR [ecx],esi
  442be8:	icebp  
  442be9:	jmp    0xc94d19f5
  442bee:	(bad)  
  442bef:	gs jb  0x442b8d
  442bf2:	add    cl,ch
  442bf4:	addr16 jmp 0x442c1b
  442bf7:	fsubr  DWORD PTR [esi]
  442bf9:	push   ebp
  442bfa:	in     al,0x91
  442bfc:	stc    
  442bfd:	jnp    0x442c08
  442bff:	(bad)
  442c04:	sbb    DWORD PTR [ecx-0x7433ff8d],0x8d5e58e1
  442c0e:	add    BYTE PTR [ebx+0x0],cl
	...
  442c24:	adc    al,0x93
  442c26:	scas   al,BYTE PTR es:[edi]
  442c27:	ror    BYTE PTR ds:0x2c831035,0x93
  442c2e:	or     DWORD PTR [edi-0x68],0x1b483f14
  442c35:	mov    ecx,DWORD PTR [edi]
  442c37:	add    BYTE PTR [ebp+ecx*4-0x7d],cl
  442c3b:	inc    edi
  442c3c:	test   BYTE PTR [eax],cl
  442c3e:	shl    BYTE PTR [esp+ebx*8-0x1a],0xe8
  442c43:	jae    0x442c43
  442c45:	pcmpeqw mm7,mm4
  442c48:	or     al,0x94
  442c4a:	test   BYTE PTR [eax+0xf008d0e],dl
  442c50:	sub    cl,BYTE PTR [esi+0x16604df7]
  442c56:	(bad)  
  442c57:	shr    DWORD PTR [ebp+ecx*2+0x7b],cl
  442c5b:	mov    BYTE PTR [esi+edx*1],0x4d
  442c5f:	clc    
  442c60:	fild   WORD PTR [ebx+esi*1+0x77]
  442c64:	adc    al,0x9f
  442c66:	(bad)  
  442c67:	mov    eax,DWORD PTR [ebx+0x55]
  442c6a:	mov    eax,0x8ccc01
  442c6f:	sar    DWORD PTR [esi+esi*8-0x3000b717],cl
  442c76:	clc    
  442c77:	inc    esi
  442c78:	sbb    BYTE PTR [eax-0x1d],al
  442c7b:	add    DWORD PTR [ebx-0x29],eax
  442c7e:	adc    al,BYTE PTR [eax]
  442c80:	pushf  
  442c81:	retf   
  442c82:	(bad)  
  442c83:	pop    ss
  442c84:	pushf  
  442c85:	mov    WORD PTR [eax],es
  442c87:	add    DWORD PTR [eax],0x0
	...
  442c9a:	add    BYTE PTR [eax],al
  442c9c:	adc    DWORD PTR ds:0x53080f00,ebx
  442ca2:	cli    
  442ca3:	call   FWORD PTR [edi+edx*1-0x724a1fbb]
  442caa:	dec    ecx
  442cab:	lock cs test eax,0xc0743548
  442cb2:	inc    ebp
  442cb3:	and    eax,0xf4427f74
  442cb8:	scas   al,BYTE PTR es:[edi]
  442cb9:	mov    cl,0xf0
  442cbb:	jno    0x442c6d
  442cbd:	jne    0x442d1b
  442cbf:	sar    BYTE PTR [esi-0x3d00030a],0x6b
  442cc6:	pop    ecx
  442cc7:	dec    DWORD PTR [edx-0xa]
  442cca:	xchg   DWORD PTR [ecx-0x7b],ecx
  442ccd:	fnstsw WORD PTR [ebp-0x4222558e]
  442cd3:	test   DWORD PTR [edx-0x22b6ffc6],eax
  442cd9:	outs   dx,DWORD PTR ds:[esi]
  442cda:	inc    edx
  442cdb:	hlt    
  442cdc:	into   
  442cdd:	cs test al,0x5
  442ce0:	cs cmp ecx,edx
  442ce3:	and    al,0xfd
  442ce5:	hlt    
  442ce6:	dec    ebx
  442ce7:	xor    BYTE PTR [esi],bh
  442ce9:	xor    edx,DWORD PTR [ecx-0x77458f79]
  442cef:	dec    ecx
  442cf0:	jne    0x442d71
  442cf2:	dec    edx
  442cf3:	fsubr  QWORD PTR [esi+0x3e1313b7]
  442cf9:	mov    bh,0xa8
  442cfb:	or     ch,BYTE PTR [esi]
  442cfd:	and    esp,DWORD PTR [ebp+0x25]
	...
  442d13:	add    ch,ch
  442d15:	jl     0x442d5b
  442d17:	inc    eax
  442d18:	cmp    al,0x33
  442d1a:	mov    cl,0x87
  442d1c:	jo     0x442cd8
  442d1e:	xchg   BYTE PTR [ebx-0x37],al
  442d21:	ins    BYTE PTR es:[edi],dx
  442d22:	dec    edx
  442d23:	lock jle 0x442cdd
  442d26:	adc    eax,DWORD PTR [ebx]
  442d28:	ds test al,0x86
  442d2b:	inc    ebx
  442d2c:	mov    eax,ds:0xf087c4d2
  442d31:	clc    
  442d32:	or     BYTE PTR [ebx+0x79],0x90
  442d36:	push   cs
  442d37:	int3   
  442d38:	cmp    BYTE PTR [ebp-0x31],dl
  442d3b:	(bad)  
  442d3c:	cld    
  442d3d:	dec    edi
  442d3e:	pop    esi
  442d3f:	dec    ecx
  442d40:	imul   ebp,DWORD PTR [ebx+0x4d32ac1c],0xeabdaf9b
  442d4a:	in     eax,0x88
  442d4c:	repnz (bad) 
  442d4e:	pop    esi
  442d4f:	dec    ecx
  442d50:	mov    DWORD PTR [edx],ecx
  442d52:	fild   DWORD PTR [eax+esi*1]
  442d55:	push   ebp
  442d56:	(bad)  
  442d57:	mov    WORD PTR [ebp+0x41499a4f],?
  442d5d:	or     DWORD PTR [esp+ebp*4],ebp
  442d60:	(bad)  
  442d61:	jmp    0x442dc8
  442d63:	sbb    esi,ebp
  442d65:	(bad)  
  442d66:	repnz sub ah,0x90
  442d6a:	out    0x3,eax
  442d6c:	hlt    
  442d6d:	xchg   esi,eax
  442d6e:	fild   DWORD PTR [ebx]
  442d70:	mov    ch,0x8f
  442d72:	adc    al,0x1b
  442d75:	jmp    esi
  442d77:	xchg   BYTE PTR [eax],al
	...
  442d89:	add    BYTE PTR [eax],al
  442d8b:	add    BYTE PTR [esi+0x310ae6ff],cl
  442d91:	or     al,ch
  442d93:	add    esi,DWORD PTR [ebp+0x33aba40a]
  442d99:	dec    edi
  442d9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442d9b:	mov    edi,DWORD PTR [ebp-0x1ab6c5b1]
  442da1:	or     BYTE PTR [ebx+ebp*4+0x3d396f4],ch
  442da8:	mov    ch,0x8f
  442daa:	adc    ah,dh
  442dac:	sar    esi,cl
  442dae:	out    0x86,al
  442db0:	dec    esp
  442db1:	xchg   edi,esp
  442db3:	or     bh,BYTE PTR [ecx]
  442db5:	inc    eax
  442db6:	out    0x3,eax
  442db8:	mov    ch,0x12
  442dba:	add    esp,esp
  442dbc:	and    DWORD PTR [esi-0x702edf94],esi
  442dc2:	add    BYTE PTR [edx-0x44],ch
  442dc5:	sti    
  442dc6:	(bad)  
  442dc7:	fstp   QWORD PTR [edx]
  442dc9:	dec    edi
  442dca:	(bad)  
  442dcb:	call   0xebf6b686
  442dd0:	das    
  442dd1:	dec    edx
  442dd2:	cld    
  442dd3:	bound  ebp,QWORD PTR [esp+ecx*8-0x21]
  442dd7:	sub    esi,DWORD PTR [edx]
  442dd9:	rol    DWORD PTR [edi],1
  442ddb:	jo     0x442d82
  442ddd:	idiv   esp
  442ddf:	mov    al,ds:0x3b1ff933
  442de4:	pop    ds
  442de5:	adc    al,0x43
  442de7:	leave  
  442de8:	dec    ebx
  442de9:	push   ecx
  442dea:	lock jb 0x442dea
  442ded:	xchg   edi,edi
  442def:	daa    
	...
  442e04:	inc    ebp
  442e05:	std    
  442e06:	inc    ecx
  442e07:	cmc    
  442e08:	xor    DWORD PTR [edx-0x20],edx
  442e0b:	fs jbe 0x442d91
  442e0e:	daa    
  442e0f:	jb     0x442e8e
  442e11:	out    0x84,eax
  442e13:	push   ss
  442e14:	sub    DWORD PTR [esi+0x25],ecx
  442e17:	mov    eax,ds:0xe910783b
  442e1c:	loope  0x442e6b
  442e1e:	je     0x442e0e
  442e20:	pop    esi
  442e21:	int    0x1
  442e23:	jmp    0x414722de
  442e28:	arpl   WORD PTR [ecx+0x4a2be900],bx
  442e2e:	or     BYTE PTR [edx-0x5b],dh
  442e31:	test   DWORD PTR [esi+0x3f14eea6],0x10783bf9
  442e3b:	jmp    0x7134806b
  442e40:	jne    0x442e31
  442e42:	test   BYTE PTR [edx],ch
  442e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442e45:	pushf  
  442e46:	and    ebp,ecx
  442e48:	pop    ds
  442e49:	pop    DWORD PTR [eax]
  442e4b:	(bad)  
  442e4c:	jmp    0x442e8b
  442e4e:	fild   WORD PTR [eax]
  442e50:	mov    WORD PTR [esi-0x2c187447],ss
  442e56:	loopne 0x442e60
  442e58:	or     eax,0x8cff0034
  442e5d:	xchg   ecx,eax
  442e5e:	mov    ecx,0xb99484e0
  442e63:	mov    eax,DWORD PTR [edi-0x2f]
  442e66:	loopne 0x442e80
	...
  442e7c:	(bad)  
  442e7d:	shl    BYTE PTR [edx],cl
  442e7f:	inc    edi
  442e80:	test   BYTE PTR [ebp-0x745e74f4],cl
  442e86:	mov    edi,0x6df95440
  442e8b:	inc    eax
  442e8c:	dec    esp
  442e8d:	sub    al,0x54
  442e8f:	xor    eax,DWORD PTR [edi-0x1d]
  442e92:	out    dx,al
  442e93:	(bad)  
  442e94:	arpl   sp,di
  442e96:	clc    
  442e97:	call   FWORD PTR [esp+edx*1+0x77]
  442e9b:	or     BYTE PTR [eax+ecx*4-0x7c],cl
  442e9f:	mov    cs,WORD PTR [ecx+edx*4+0x0]
  442ea3:	cmp    DWORD PTR [ebx-0x6ff106fd],0xf
  442eaa:	add    BYTE PTR [eax],al
  442eac:	or     al,0x14
  442eae:	mul    BYTE PTR [eax]
  442eb0:	pop    ds
  442eb1:	repz jnp 0x442f31
  442eb4:	cwde   
  442eb5:	xchg   ebx,eax
  442eb6:	pop    es
  442eb7:	test   BYTE PTR [edi+0x1b000093],al
  442ebd:	pop    edi
  442ebe:	cli    
  442ebf:	(bad)  
  442ec0:	sbb    DWORD PTR ds:0x33cfce83,esp
  442ec6:	cmp    al,BYTE PTR [ebx+0x55818b92]
  442ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442ecd:	xchg   edx,eax
  442ece:	fadd   DWORD PTR [ebx-0x21950c76]
  442ed4:	xlat   BYTE PTR ds:[ebx]
  442ed5:	mov    bh,0x1c
  442ed7:	je     0x442ed9
  442ed9:	or     al,0x45
  442edb:	or     BYTE PTR [ebp+0x183dad],dh
	...
  442ef1:	add    BYTE PTR [eax],al
  442ef3:	add    BYTE PTR [ebp+0x7a003d23],bl
  442ef9:	in     eax,dx
  442efa:	icebp  
  442efb:	jmp    FWORD PTR [edx+0x36018be6]
  442f01:	(bad)  
  442f02:	test   BYTE PTR [eax],0x33
  442f05:	(bad)  
  442f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442f07:	stc    
  442f08:	xchg   edx,eax
  442f09:	cs xchg edi,eax
  442f0b:	stc    
  442f0c:	mov    bl,ch
  442f0e:	ss push ebp
  442f10:	loop   0x442f83
  442f12:	call   0xf884:0xfcee775b
  442f19:	dec    BYTE PTR [ebx+0x457f5d4b]
  442f1f:	or     al,0x2e
  442f21:	mov    bl,0x94
  442f23:	xchg   ebp,eax
  442f25:	jno    0x442f51
  442f27:	cld    
  442f28:	cmp    al,0xbe
  442f2a:	hlt    
  442f2b:	xchg   ch,ah
  442f2d:	repnz test DWORD PTR [ecx-0x7f],esi
  442f31:	les    eax,FWORD PTR [ebp+0x5cc17d59]
  442f37:	(bad)  
  442f38:	xor    ah,dh
  442f3a:	cld    
  442f3b:	pop    eax
  442f3c:	adc    esi,DWORD PTR ds:[edx]
  442f3f:	mov    esi,0xd4d3e6ad
  442f44:	out    0x84,al
  442f46:	rol    BYTE PTR [ecx],0xb1
  442f49:	out    0xfc,al
  442f4b:	push   edx
  442f4d:	xor    dh,BYTE PTR [ebp-0x319fd01]
  442f53:	in     al,0xb2
  442f55:	mov    ch,0x3a
  442f57:	fadd   DWORD PTR [eax]
	...
  442f69:	add    BYTE PTR [eax],al
  442f6b:	add    al,dh
  442f6d:	push   esp
  442f6e:	cwde   
  442f6f:	stc    
  442f70:	xor    eax,DWORD PTR ds:0x864e7085
  442f77:	dec    eax
  442f78:	test   eax,0x3cf04271
  442f7d:	(bad)  
  442f7e:	test   DWORD PTR [esi+eiz*2-0x5ab49005],0x39ffb706
  442f89:	jl     0x442f4a
  442f8b:	add    edi,DWORD PTR [edx]
  442f8d:	pop    ebx
  442f8e:	mov    edi,0x74bc248a
  442f93:	std    
  442f94:	cmp    DWORD PTR [ebp+0x7],ecx
  442f97:	fdivr  st(2),st
  442f99:	lahf   
  442f9a:	jae    0x442f6a
  442f9c:	cmp    DWORD PTR [ebx+0x7cae9c66],edx
  442fa2:	or     DWORD PTR [ebx-0x1ac6983],eax
  442fa8:	stc    
  442fa9:	jl     0x442f86
  442fab:	jmp    esi
  442fad:	scas   al,BYTE PTR es:[edi]
  442fae:	outs   dx,BYTE PTR ds:[esi]
  442faf:	inc    ecx
  442fb0:	push   ebp
  442fb1:	pop    es
  442fb2:	sbb    al,0xc
  442fb4:	dec    ebp
  442fb5:	(bad)  
  442fb6:	ret    
  442fb7:	xchg   edi,eax
  442fb8:	pop    esp
  442fb9:	adc    eax,0xd2a910a7
  442fbe:	jmp    0xe73f7ab8
  442fc3:	xor    eax,0x979337e8
  442fc8:	cmp    al,0xfb
  442fca:	sub    DWORD PTR [ebx+0xca55d16],ecx
	...
  442fe4:	mov    ch,0x6
  442fe6:	hlt    
  442fe7:	or     edi,DWORD PTR [eax]
  442fe9:	push   ebp
  442fea:	xchg   edi,eax
  442feb:	jmp    0x443061
  442fed:	xchg   ebx,eax
  442fee:	pop    esi
  442fef:	cmp    DWORD PTR ds:0xbf3c1a7,edx
  442ff5:	push   ebp
  442ff6:	out    dx,eax
  442ff7:	add    al,0x5f
  442ff9:	mov    ds:0xe9936e8,eax
  442ffe:	retf   0xb50b
  443001:	or     BYTE PTR [ebx+esi*4-0x449b3f9f],ch
  443008:	imul   ebp,DWORD PTR [eax+eax*1+0x9fc26a],0x858ac29a
  443013:	mov    edi,0x14114b2
  443018:	into   
  443019:	retf   
  44301a:	dec    ebp
  44301b:	mov    ecx,0xe903b20e
  443020:	mov    dh,0xf4
  443022:	or     BYTE PTR [edx-0xd],dh
  443025:	mov    eax,DWORD PTR [ebp-0x3a4c616a]
  44302b:	cwde   
  44302c:	in     al,0xe7
  44302e:	push   es
  44302f:	int3   
  443030:	mov    dh,0x8f
  443032:	xchg   DWORD PTR [esi],ebp
  443034:	mov    DWORD PTR [ecx],edx
  443036:	inc    edx
  443037:	sbb    DWORD PTR [esi],ebp
  443039:	nop
  44303a:	jge    0x44300d
  44303c:	xchg   DWORD PTR [esi+0xc],edi
  44303f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443040:	cmc    
  443041:	xchg   DWORD PTR [eax],eax
  443043:	jmp    0xc1c1bffe
	...
  44305c:	mov    eax,0xf5ae017e
  443061:	xchg   DWORD PTR [eax],eax
  443063:	call   0x36c9c01e
  443068:	mov    ch,0x0
  44306a:	xlat   BYTE PTR ds:[ebx]
  44306b:	add    dh,BYTE PTR [eax-0x54]
  44306e:	into   
  44306f:	push   0x11
  443071:	dec    edi
  443072:	jge    0x443005
  443074:	mov    edi,0xb7ab9388
  443079:	inc    esi
  44307a:	or     BYTE PTR [ebx],dh
  44307c:	cmp    cl,bl
  44307e:	jg     0x443069
  443080:	mov    dh,0x8f
  443082:	std    
  443083:	xchg   edi,eax
  443084:	mov    bh,0x60
  443086:	cmp    al,0x6a
  443088:	lods   eax,DWORD PTR ds:[esi]
  443089:	(bad)  
  44308b:	outs   dx,DWORD PTR ds:[esi]
  44308c:	shr    BYTE PTR [ebx-0x1bca128d],1
  443092:	jae    0x44307b
  443094:	aaa    
  443095:	jbe    0x4430a3
  443097:	add    al,bl
  443099:	sahf   
  44309a:	adc    DWORD PTR [ebx-0x3f82c9e7],ecx
  4430a0:	ror    DWORD PTR [esi],cl
  4430a2:	lahf   
  4430a3:	(bad)  
  4430a4:	mov    ds:0x545b5621,eax
  4430a9:	adc    eax,0xc1a3fff7
  4430ae:	and    ebp,0x1
  4430b1:	rol    BYTE PTR [edi],1
  4430b3:	add    BYTE PTR [edi],dl
  4430b5:	push   eax
  4430b6:	fcomp  DWORD PTR [esi+0x57]
  4430b9:	ret    0xe583
  4430bc:	inc    ecx
  4430bd:	iret   
  4430be:	pop    es
	...
  4430d3:	add    ah,ah
  4430d5:	and    dh,bh
  4430d7:	jmp    DWORD PTR [ebx-0xe1a7c3d]
  4430dd:	int    0x7
  4430df:	add    BYTE PTR [ebx],ah
  4430e1:	out    0x3b,eax
  4430e3:	add    BYTE PTR [edx-0x18],ah
  4430e6:	cmp    eax,DWORD PTR [eax]
  4430e8:	adc    cl,dh
  4430ea:	cmp    eax,DWORD PTR [eax]
  4430ec:	pop    esp
  4430ed:	repz cmp eax,DWORD PTR [eax]
  4430f0:	test   eax,0x1f003bf1
  4430f5:	repnz cmp eax,DWORD PTR [eax]
  4430f8:	cmp    bl,dh
  4430fa:	cmp    eax,DWORD PTR [eax]
  4430fc:	(bad)  
  4430fd:	jecxz  0x44313a
  4430ff:	add    BYTE PTR [eax],ah
  443101:	in     al,0x3b
  443103:	add    ch,cl
  443105:	fdivr  QWORD PTR [ebx]
  443107:	add    BYTE PTR [edx-0x23],ah
  44310a:	cmp    eax,DWORD PTR [eax]
  44310c:	sbb    edi,ebx
  44310e:	cmp    eax,DWORD PTR [eax]
  443110:	adc    eax,0x44003bdf
  443115:	fidivr WORD PTR [ebx]
  443117:	add    BYTE PTR [ecx-0x20],cl
  44311a:	cmp    eax,DWORD PTR [eax]
  44311c:	xlat   BYTE PTR ds:[ebx]
  44311d:	fidivr WORD PTR [ebx]
  44311f:	add    BYTE PTR [ebx-0x4affc422],cl
  443125:	cmc    
  443126:	enter  0xb53c,0x47
  44312a:	sar    BYTE PTR [esi*4-0x4ac333c8],1
  443131:	cmp    cl,ah
  443133:	cmp    al,0xb5
  443135:	jo     0x44310c
  443137:	cmp    al,0x0
	...
  443149:	add    BYTE PTR [eax],al
  44314b:	add    BYTE PTR [ebp-0x4ac32ab3],dh
  443151:	sub    al,bl
  443153:	cmp    al,0xb5
  443155:	jne    0x44312e
  443157:	cmp    al,0xb5
  443159:	aas    
  44315a:	sar    DWORD PTR [esi*4-0x4ac32ef5],1
  443161:	rcl    ecx,cl
  443163:	cmp    al,0xb5
  443165:	lods   eax,DWORD PTR ds:[esi]
  443166:	sar    DWORD PTR [esi*4-0x4ac32e76],1
  44316d:	sub    edx,ebx
  44316f:	cmp    al,0xb5
  443171:	jae    0x443141
  443173:	cmp    al,0xb5
  443175:	push   0x12b53ccf
  44317a:	iret   
  44317b:	cmp    al,0xb5
  44317d:	or     ecx,edi
  44317f:	cmp    al,0xb5
  443181:	inc    edx
  443182:	ror    esp,0x71
  443185:	sub    al,cl
  443187:	int3   
  443188:	imul   ebx,DWORD PTR [ebx+0x6debec87],0x1830080a
  443192:	or     DWORD PTR [ebx],edi
  443194:	cs mov al,0xf8
  443197:	xor    BYTE PTR [ebp-0x66],0xca
  44319b:	test   BYTE PTR [ebx-0x5e38862e],al
  4431a1:	loope  0x44312a
  4431a3:	inc    eax
  4431a4:	jmp    0xafb8ef1c
  4431a9:	xchg   esi,eax
  4431aa:	xchg   DWORD PTR [edx-0x23],eax
  4431ad:	xchg   esi,eax
  4431ae:	xchg   ebx,eax
  4431af:	iret   
	...
  4431c4:	ss (bad) 
  4431c6:	sub    ecx,DWORD PTR [ebx]
  4431c8:	cmp    BYTE PTR [ecx-0x5],cl
  4431cb:	mov    BYTE PTR [edi-0x59],ah
  4431ce:	pop    esi
  4431cf:	cmp    eax,0x94b55e99
  4431d4:	add    eax,0xf40b2b0c
  4431d9:	push   eax
  4431da:	fild   DWORD PTR [ebx]
  4431dc:	mov    ch,0x8f
  4431de:	out    0xd0,eax
  4431e0:	adc    bl,BYTE PTR [ecx-0x74]
  4431e3:	shl    DWORD PTR [ecx-0x436aa071],0xf7
  4431ea:	sbb    DWORD PTR ds:0x3eacd5e,esi
  4431f0:	add    esp,0xc479c71a
  4431f6:	xor    al,bh
  4431f8:	jno    0x4431be
  4431fa:	sub    al,bh
  4431fc:	imul   eax,esp,0xba1889b
  443202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443203:	or     esi,DWORD PTR [eax]
  443205:	mov    BYTE PTR [ebp+edi*4+0x9],ch
  443209:	mov    ds:0xaa5396e,eax
  44320e:	daa    
  44320f:	lock add BYTE PTR [ebx],cl
  443212:	xor    al,0x0
  443214:	sti    
  443215:	pop    edi
  443216:	ret    0xe0b5
  443219:	retf   
  44321a:	jmp    0x39f4:0x240b1830
  443221:	pop    ebp
  443222:	(bad)  [eax+esi*1]
  443225:	dec    eax
  443226:	add    esi,DWORD PTR [esi]
	...
  44323c:	cmp    BYTE PTR [eax-0x39],ah
  44323f:	xor    al,0x3c
  443241:	loop   0x4432a8
  443243:	enter  0x54c1,0xa6
  443247:	sar    cl,0xc3
  44324a:	mov    dl,0xc0
  44324c:	icebp  
  44324d:	ret    
  44324e:	stos   BYTE PTR es:[edi],al
  44324f:	shr    cl,0xc3
  443252:	call   FWORD PTR [ebx]
  443254:	xchg   edx,eax
  443255:	jecxz  0x4431db
  443257:	sbb    al,0x9
  443259:	or     al,0x3f
  44325b:	stc    
  44325c:	sub    eax,0x7a0273d0
  443261:	bound  ebx,QWORD PTR [eax]
  443263:	bound  esi,QWORD PTR [eax-0x539db16d]
  443269:	fwait
  44326a:	dec    esi
  44326b:	jb     0x443209
  44326d:	lahf   
  44326e:	dec    esi
  44326f:	jb     0x44320d
  443271:	or     DWORD PTR [esi-0x68],0x27
  443275:	loopne 0x4432f3
  443277:	and    eax,0x72bd59cd
  44327c:	ins    BYTE PTR es:[edi],dx
  44327d:	lahf   
  44327e:	sub    eax,0x7336ea3b
  443283:	in     al,dx
  443284:	and    DWORD PTR [ecx+0x14],0xffffff95
  443288:	mov    ebp,0xe406c874
  44328d:	xor    al,0x85
  44328f:	xchg   esp,eax
  443290:	mov    es,WORD PTR [ebp+eax*4-0x68]
  443294:	mov    ds:0x8aa48546,al
  443299:	inc    esi
  44329a:	test   DWORD PTR [eax],ebp
  44329c:	popa   
  44329d:	inc    esp
  44329e:	stc    
  44329f:	mov    ecx,0x0
	...
  4432b4:	xor    ecx,ebx
  4432b6:	sysenter 
  4432b8:	jp     0x44327d
  4432ba:	retf   
  4432bb:	popf   
  4432bc:	sub    al,bl
  4432be:	retf   
  4432bf:	mov    ch,0x22
  4432c1:	ret    
  4432c2:	retf   
  4432c3:	lods   eax,DWORD PTR ds:[esi]
  4432c4:	sbb    al,bl
  4432c6:	retf   
  4432c7:	sbb    al,0xd2
  4432c9:	jecxz  0x44324f
  4432cb:	and    al,0x49
  4432cd:	jae    0x443347
  4432cf:	stc    
  4432d0:	mov    dh,0xc
  4432d2:	dec    ebx
  4432d3:	in     eax,dx
  4432d4:	mov    ebx,0xeb381c5f
  4432d9:	jnp    0x4432e1
  4432db:	bound  esi,QWORD PTR [esi-0x7d]
  4432de:	stc    
  4432df:	add    BYTE PTR [ecx*1-0x3146f73c],bh
  4432e6:	add    BYTE PTR [eax+0x0],0x21
  4432ea:	rol    BYTE PTR [ebx-0x78405b0],1
  4432f0:	fwait
  4432f1:	xchg   edi,eax
  4432f2:	dec    DWORD PTR [edx]
  4432f4:	int3   
  4432f5:	or     eax,0xcd29ffc2
  4432fa:	sub    dl,dl
  4432fc:	sbb    ebp,ecx
  4432fe:	retf   
  4432ff:	int3   
  443300:	test   al,0x36
  443302:	int3   
  443303:	int3   
  443304:	mov    BYTE PTR [esi],dh
  443306:	int3   
  443307:	int3   
  443308:	xor    dh,BYTE PTR [ebp-0x16]
  44330b:	imul   DWORD PTR [edi+eax*1+0xef174ee]
  443312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443313:	and    al,0xcc
  443315:	xchg   ecx,eax
	...
  44332a:	add    BYTE PTR [eax],al
  44332c:	ror    bl,cl
  44332e:	cli    
  44332f:	jae    0x4432d6
  443331:	xchg   edx,eax
  443332:	scas   al,BYTE PTR es:[edi]
  443333:	adc    DWORD PTR [edi+0x41],ebx
  443336:	jns    0x44331a
  443338:	fwait
  443339:	xchg   edx,eax
  44333a:	add    BYTE PTR [eax],al
  44333c:	fstp   QWORD PTR [eax]
  44333e:	or     BYTE PTR [ebx],dh
  443340:	nop
  443341:	js     0x4432eb
  443343:	and    cl,ah
  443345:	mov    edi,DWORD PTR [ecx]
  443347:	dec    esi
  443348:	loope  0x443377
  44334a:	dec    ebx
  44334b:	push   edi
  44334c:	fbld   TBYTE PTR [ecx]
  44334e:	and    BYTE PTR [edi],cl
  443350:	fdivrp st(2),st
  443352:	cli    
  443353:	dec    DWORD PTR [esp+esi*2-0xa]
  443357:	shr    DWORD PTR [ebx-0x73],0x83
  44335b:	dec    DWORD PTR [edi-0x6e]
  44335e:	adc    eax,0x1d
  443361:	push   ss
  443362:	adc    BYTE PTR [ebx+0x8e2d174],cl
  443368:	int    0x2a
  44336a:	test   DWORD PTR [eax],0x7efce6b5
  443370:	pop    ss
  443371:	push   es
  443372:	add    al,0x0
  443374:	mov    ch,0x81
  443376:	clc    
  443377:	xchg   edx,eax
  443378:	dec    ebp
  443379:	int    0x3c
  44337b:	add    dh,al
  44337d:	shr    BYTE PTR [ecx-0x58],cl
  443380:	fbld   TBYTE PTR [esi-0x58227afc]
  443386:	fwait
  443387:	sbb    dh,al
  443389:	cli    
  44338a:	imul   ebp,DWORD PTR [eax+0x22fd2697],0x0
	...
  4433a4:	jmp    0x81d2:0xa6fffce6
  4433ab:	test   al,0x8b
  4433ad:	es std 
  4433af:	sub    al,0x64
  4433b1:	loop   0x44342e
  4433b3:	mov    esi,0x22f44ef4
  4433b8:	ret    0xfce6
  4433bb:	jmp    FWORD PTR [esi]
  4433bd:	jmp    0x443340
  4433bf:	test   al,0xdb
  4433c1:	es std 
  4433c3:	test   BYTE PTR [edi+0x34089ba7],cl
  4433c9:	mov    DWORD PTR [edi-0x2c194b00],ecx
  4433cf:	add    esi,DWORD PTR [eax]
  4433d1:	dec    esi
  4433d2:	fidivr DWORD PTR [edi]
  4433d4:	mov    ch,0x71
  4433d6:	stos   BYTE PTR es:[edi],al
  4433d7:	mov    edi,0x3d38e8e
  4433dc:	sbb    BYTE PTR [esi],bl
  4433de:	jecxz  0x44341f
  4433e0:	mov    ch,0x67
  4433e2:	mov    ds:0xfce6b5f9,eax
  4433e7:	sub    al,0xb9
  4433e9:	push   ebx
  4433ea:	push   ebp
  4433eb:	sub    dh,ch
  4433ed:	out    0xd3,al
  4433ef:	ds mov ebp,0x5fbfad71
  4433f5:	(bad)  
  4433f6:	jnp    0x4433d0
  4433f8:	je     0x443389
  4433fa:	mov    ?,ebx
  4433fc:	mov    ebx,0xb50399f0
  443401:	(bad)
  443405:	(bad)  
  443406:	out    0x3,eax
	...
  44341c:	cmp    BYTE PTR [ebx+0x4fd75b5c],bl
  443422:	out    0xd4,eax
  443424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443425:	adc    bh,BYTE PTR [edi]
  443427:	(bad)  
  443429:	(bad)  
  44342a:	pop    esi
  44342b:	stos   DWORD PTR es:[edi],eax
  44342c:	inc    edx
  44342d:	call   0x12eb0930
  443432:	(bad)  
  443433:	in     eax,0xb2
  443435:	(bad)  
  443436:	or     al,0x91
  443438:	mov    ch,0x8f
  44343a:	out    0xd4,eax
  44343c:	(bad)  
  44343d:	or     cl,BYTE PTR [edi-0x970651f]
  443443:	xor    al,cl
  443445:	or     BYTE PTR ds:0x49eddc2,ah
  44344b:	xchg   ecx,eax
  44344c:	mov    ch,0x8f
  44344e:	out    0x7c,eax
  443450:	mov    cl,0xa
  443452:	dec    edi
  443453:	jmp    0xada2c44a
  443458:	push   0xffffffe7
  44345a:	fiadd  WORD PTR [edx+0x3e6f380]
  443460:	mov    ch,0xbe
  443462:	jecxz  0x4434d2
  443464:	pop    ebp
  443465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443467:	add    esi,DWORD PTR [eax]
  443469:	(bad)  
  44346a:	daa    
  44346b:	pushf  
  44346c:	popf   
  44346d:	mov    esi,0xae4d70eb
  443472:	daa    
  443473:	add    al,0xf2
  443475:	in     eax,dx
  443476:	rol    DWORD PTR [esi*4+0x4608168f],1
  44347d:	sub    BYTE PTR [ecx],dl
  44347f:	inc    esp
	...
  443494:	mov    ch,0xbe
  443496:	sub    ah,dh
  443498:	cmp    eax,esp
  44349a:	jmp    DWORD PTR [edi-0x6e7a5fd1]
  4434a0:	js     0x44348f
  4434a2:	pop    es
  4434a3:	push   0xe8fff917
  4434a8:	mov    dh,0xc
  4434aa:	adc    al,0x7c
  4434ac:	mov    DWORD PTR [ebp-0x2ac616c0],ebp
  4434b2:	clc    
  4434b3:	jmp    0xd571c46e
  4434b8:	test   DWORD PTR [edi],esp
  4434ba:	sub    DWORD PTR es:[ecx+0x1ea8d80c],esi
  4434c1:	cwde   
  4434c2:	sub    eax,0x1e2785fd
  4434c7:	test   eax,0xe9f9aeb6
  4434cc:	mov    dh,0x8f
  4434ce:	sub    eax,0x2a282df5
  4434d3:	test   eax,0xd54fa4b6
  4434d8:	dec    edi
  4434d9:	xor    DWORD PTR [edi-0x6523ebf],edi
  4434df:	jmp    0xedc9c49a
  4434e4:	sub    eax,0xb6a92228
  4434e9:	or     al,0xd6
  4434eb:	sub    BYTE PTR [esi-0x79],cl
  4434ee:	jg     0x4434fa
  4434f0:	xor    cl,BYTE PTR [edi-0x71781700]
  4434f6:	fwait
  4434f7:	push   ecx
	...
  44350c:	outs   dx,DWORD PTR ds:[esi]
  44350d:	mov    dl,0x0
  44350f:	bound  ebx,QWORD PTR [edi+0x32]
  443512:	in     eax,0xd1
  443514:	mov    ds,WORD PTR [bp+di-0x6b6f]
  443519:	mov    dl,0x0
  44351b:	push   0xe8fff814
  443520:	mov    dh,0xa4
  443522:	add    al,0x74
  443524:	(bad)  
  443525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443526:	inc    eax
  443527:	add    BYTE PTR [ebp+ecx*1-0x47],cl
  44352b:	and    BYTE PTR [edi+0x4b],cl
  44352e:	clc    
  44352f:	xor    DWORD PTR [edx-0x12],0xffffff83
  443533:	rcl    bh,1
  443535:	es mov ecx,0xe2cb3cea
  44353b:	or     BYTE PTR [ebp+0x1c00f730],bl
  443541:	mov    es,WORD PTR [ebx+0x1e56a914]
  443547:	inc    eax
  443548:	or     al,0xb
  44354a:	(bad)  
  44354c:	sbb    al,0x8e
  44354e:	add    BYTE PTR [ebx],dh
  443550:	call   0xcc6eddd3
  443555:	mov    eax,DWORD PTR [ebx+0x1815cdd8]
  44355b:	xor    ebp,eax
  44355d:	jle    0x443507
  44355f:	and    bl,BYTE PTR [esi+ecx*4]
  443562:	sbb    eax,0x8dccff
  443567:	xor    edi,eax
  443569:	push   es
  44356a:	test   al,0x2e
  44356c:	sbb    al,0x8e
  44356e:	sub    edx,DWORD PTR [ecx+0x0]
	...
  443581:	add    BYTE PTR [eax],al
  443583:	add    BYTE PTR [eax+0x74c1ba75],al
  443589:	(bad)  
  44358a:	sbb    eax,0x8dccff
  44358f:	mov    ebx,DWORD PTR [eax+0x5c26a808]
  443595:	lea    eax,[ebx+0x815cdda]
  44359b:	sub    DWORD PTR [edi-0x63ffffff],0xf49cfcde
  4435a5:	(bad)  
  4435a6:	cmp    BYTE PTR [eax],al
  4435a8:	pop    ss
  4435a9:	daa    
  4435aa:	mov    ecx,0xfcdeb4eb
  4435af:	pushf  
  4435b0:	inc    esp
  4435b1:	out    dx,al
  4435b2:	cmp    BYTE PTR [eax],al
  4435b4:	mov    ch,0x67
  4435b6:	sahf   
  4435b7:	stc    
  4435b8:	mov    ch,0xe6
  4435ba:	cld    
  4435bb:	sub    al,0xb1
  4435bd:	push   ebx
  4435be:	pop    esp
  4435bf:	sub    dh,ch
  4435c1:	out    0x3b,al
  4435c3:	or     DWORD PTR [eax],esi
  4435c5:	cmp    ecx,DWORD PTR [ecx-0x7599bd07]
  4435cb:	add    al,0xc7
  4435cd:	mov    dh,0x77
  4435cf:	shl    ah,cl
  4435d1:	sbb    al,0xfe
  4435d3:	test   BYTE PTR [edx],ch
  4435d5:	(bad)  
  4435d6:	std    
  4435d7:	jl     0x4435cd
  4435d9:	jmp    0x7ef4:0x19f4f877
  4435e0:	sbb    dh,BYTE PTR [edx+0x4]
  4435e3:	add    BYTE PTR [ebp+0xbad06d],dh
	...
  4435f9:	add    BYTE PTR [eax],al
  4435fb:	add    BYTE PTR [ebp-0x37],cl
  4435fe:	cmp    al,0x0
  443600:	cs dec edi
  443602:	mov    ebp,0x9f67bde5
  443607:	stc    
  443608:	mov    ch,0xe6
  44360a:	cld    
  44360b:	sub    al,0xa1
  44360d:	arpl   WORD PTR [esi+eiz*1+0x75],bx
  443611:	out    0x77,al
  443613:	fdiv   st,st(4)
  443615:	pop    ebp
  443616:	in     al,dx
  443617:	sub    al,0x89
  443619:	pop    ebx
  44361a:	pop    esp
  44361b:	push   ds
  44361c:	jne    0x443604
  44361e:	loope  0x443618
  443620:	mov    ch,0xe6
  443622:	cld    
  443623:	sub    al,0xf1
  443625:	imul   ebx,DWORD PTR [edx+ebp*1-0xb],0xffffffe6
  44362a:	jg     0x443616
  44362c:	mov    ecx,0x20c1782c
  443631:	mov    dl,0x2b
  443633:	push   ebp
  443634:	cmp    al,bh
  443636:	adc    BYTE PTR [esi],dl
  443638:	and    eax,0xc60f52e9
  44363d:	xchg   esi,eax
  44363e:	jge    0x44361e
  443640:	jp     0x4435d1
  443642:	out    0x3,eax
  443644:	mov    ch,0xce
  443646:	into   
  443647:	sti    
  443648:	cdq    
  443649:	mov    edi,DWORD PTR [ebx+ebx*2-0x3d]
  44364d:	dec    edi
  44364e:	out    0x42,eax
  443650:	out    dx,eax
  443651:	jp     0x44361d
  443653:	xchg   esp,eax
  443654:	gs push ecx
  443656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443657:	mov    edi,0x791bc379
  44365c:	push   ecx
  44365d:	add    al,0x1c
	...
  443673:	add    BYTE PTR [esi],dh
  443675:	(bad)  
  443676:	sbb    eax,DWORD PTR [esi]
  443678:	loopne 0x443649
  44367a:	cmp    eax,edx
  44367c:	mov    ecx,0xc5365e8f
  443681:	add    al,0x24
  443683:	cld    
  443684:	adc    ch,BYTE PTR [edx+0x520c8c84]
  44368a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44368b:	dec    DWORD PTR [edx]
  44368d:	les    esp,FWORD PTR [ebx-0x7f]
  443690:	sub    DWORD PTR [edi-0x6ebdfc19],ecx
  443696:	call   0x6c9deb9e
  44369b:	daa    
  44369c:	xchg   ecx,eax
  44369d:	(bad)  
  44369e:	push   ss
  44369f:	xchg   esi,eax
  4436a0:	push   edi
  4436a1:	push   es
  4436a2:	pop    ss
  4436a3:	xor    ebp,0xc616b08a
  4436a9:	add    DWORD PTR [ebp+0x7b],esp
  4436ac:	mov    dl,0x8f
  4436ae:	out    0x4a,eax
  4436b0:	lahf   
  4436b1:	(bad)  
  4436b2:	out    0x3,eax
  4436b4:	mov    cl,bh
  4436b6:	mov    BYTE PTR [edx-0x1b],bh
  4436b9:	adc    ah,BYTE PTR [edi]
  4436bb:	pop    es
  4436bc:	repnz fs sbb al,0x7e
  4436c0:	and    ebp,DWORD PTR [ebp+ebx*8+0x3]
  4436c4:	mov    ch,0x28
  4436c6:	(bad)  
  4436c7:	add    esi,DWORD PTR [ebp-0x2ed89371]
  4436cd:	pop    DWORD PTR [eax]
  4436cf:	mov    edx,0xb9877228
  4436d4:	xor    eax,0x3003d0
	...
  4436e9:	add    BYTE PTR [eax],al
  4436eb:	add    ah,al
  4436ed:	loop   0x4436a6
  4436ef:	call   0x4f44c6aa
  4436f4:	loopne 0x443763
  4436f6:	xchg   esp,eax
  4436f7:	in     eax,0xb6
  4436f9:	(bad)  
  4436fa:	sub    eax,0xac6dd0a9
  4436ff:	xlat   BYTE PTR ds:[ebx]
  443700:	mov    dh,0x8f
  443702:	xchg   DWORD PTR [ebx-0x1f],ebp
  443705:	add    DWORD PTR [eax],0xb06db9e9
  44370b:	push   DWORD PTR [esi-0x6e947871]
  443711:	add    DWORD PTR [eax],0xcc2ccce9
  443717:	popf   
  443718:	pop    ebp
  443719:	fmul   st(3),st
  44371b:	mov    ch,0x4d
  44371d:	fmul   st(3),st
  44371f:	lods   eax,DWORD PTR ds:[esi]
  443720:	dec    ebp
  443721:	fmul   st(3),st
  443723:	sbb    al,0x82
  443725:	sti    
  443726:	dec    esi
  443727:	bound  eax,QWORD PTR [ecx-0x4916ebc1]
  44372d:	pop    esp
  44372e:	push   edx
  44372f:	jb     0x4436f5
  443731:	xchg   edi,eax
  443732:	test   DWORD PTR [ebp-0x77],esi
  443735:	dec    ebx
  443736:	add    eax,0xc1ab6e9
  44373b:	call   DWORD PTR [ecx+0x4a]
  44373e:	cld    
  44373f:	add    cl,BYTE PTR [ebx]
  443741:	cdq    
  443742:	mov    DWORD PTR [eax-0x53ff7047],ecx
  443748:	in     eax,0x13
  44374a:	mov    ah,0x71
  44374c:	fst    DWORD PTR [eax+eax*1+0xe9]
	...
  443763:	add    BYTE PTR [ebx],ch
  443765:	or     al,0x88
  443767:	mov    ch,0xa3
  443769:	out    dx,al
  44376a:	clc    
  44376b:	fiadd  WORD PTR [edi]
  44376d:	test   BYTE PTR [ecx+0x1c418b00],dh
  443773:	lahf   
  443774:	xor    bl,ch
  443776:	retf   
  443777:	jb     0x4437de
  443779:	jg     0x443793
  44377b:	mov    ah,al
  44377d:	xchg   ecx,eax
  44377e:	pop    eax
  44377f:	adc    al,0x5c
  443781:	xchg   edx,eax
  443782:	xor    DWORD PTR [esp+eiz*8+0x4c0003b6],0xffffffdc
  44378a:	mov    WORD PTR [esi],es
  44378c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44378d:	(bad)  
  44378f:	call   DWORD PTR [ebx-0x3f74c66c]
  443795:	push   0x5c
  443797:	or     ecx,DWORD PTR [edx+edx*4-0x7d]
  44379b:	push   ebp
  44379c:	or     cl,ch
  44379e:	scas   eax,DWORD PTR es:[edi]
  44379f:	adc    al,0xb3
  4437a1:	jmp    0xb0c75455
  4437a6:	xor    edx,ebx
  4437a8:	mov    esi,0x97136d53
  4437ad:	lahf   
  4437ae:	cld    
  4437af:	mov    bl,BYTE PTR [eax+0x1c145894]
  4437b5:	xchg   edx,eax
  4437b6:	xor    bl,BYTE PTR [edx+edx*1+0xc0014ba]
  4437bd:	and    BYTE PTR [esi],0x8b
  4437c0:	xor    edx,ebp
  4437c2:	xor    DWORD PTR [esp+ebp*2+0x3b6],0x0
	...
  4437d9:	add    BYTE PTR [eax],al
  4437db:	add    ah,cl
  4437dd:	ins    BYTE PTR es:[edi],dx
  4437de:	nop
  4437df:	push   eax
  4437e0:	loopne 0x443773
  4437e2:	add    BYTE PTR [ebx-0x763e6a73],cl
  4437e8:	add    edx,ebp
  4437ea:	xor    ecx,edx
  4437ec:	or     dl,BYTE PTR [ebx+eax*4]
  4437ef:	dec    ebp
  4437f0:	mov    BYTE PTR [ebx-0x74],ch
  4437f3:	mov    al,0x78
  4437f5:	out    dx,al
  4437f6:	clc    
  4437f7:	jmp    FWORD PTR [edx-0x42]
  4437fa:	and    ebp,0xffffffb5
  4437fd:	and    eax,edx
  4437ff:	test   DWORD PTR [eax],eax
  443801:	fwait
  443802:	jp     0x44384f
  443804:	mov    ebp,0x3d947c34
  443809:	or     edi,edx
  44380b:	inc    DWORD PTR [edx-0x271c85fe]
  443811:	mov    ecx,0x53259c7c
  443816:	sti    
  443817:	jmp    FWORD PTR [edx-0x53]
  44381a:	sub    eax,DWORD PTR [ebp-0x333c5ba8]
  443820:	imul   ecx,DWORD PTR [ebx],0x2381ccb8
  443826:	mov    eax,0xb83b79cc
  44382b:	int3   
  44382c:	jno    0x4437ba
  44382e:	jnp    0x44381c
  443830:	ss sub ebx,esp
  443833:	test   BYTE PTR [edx+edi*8+0x61cc8533],al
  44383a:	xor    eax,0x9cac2c08
  44383f:	test   DWORD PTR [eax],eax
	...
  443851:	add    BYTE PTR [eax],al
  443853:	add    ah,al
  443855:	outs   dx,DWORD PTR ds:[esi]
  443856:	sub    esp,ebx
  443858:	mov    BYTE PTR ds:[eax],al
  44385b:	push   edx
  44385c:	cmp    al,0x84
  44385e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44385f:	test   DWORD PTR [esi+ebp*8+0x2f],esp
  443863:	test   DWORD PTR [esi+eax*8-0x2d],edi
  443867:	(bad)  
  443868:	cmp    al,0x2c
  44386a:	cdq    
  44386b:	or     DWORD PTR [edx],esp
  44386d:	test   al,0x7b
  44386f:	(bad)  
  443870:	hlt    
  443871:	pop    eax
  443872:	hlt    
  443873:	add    al,0xef
  443875:	outs   dx,DWORD PTR ds:[esi]
  443876:	jl     0x4438b4
  443878:	mov    esi,0x3d86fcf6
  44387d:	aaa    
  44387e:	cld    
  44387f:	inc    edx
  443881:	outs   dx,DWORD PTR ds:[esi]
  443882:	jl     0x4438c8
  443884:	scas   al,BYTE PTR es:[edi]
  443885:	idiv   ah
  443887:	xchg   BYTE PTR ds:0xaafcaf8f,bh
  44388d:	in     al,dx
  44388e:	outs   dx,DWORD PTR ds:[esi]
  44388f:	jl     0x443882
  443891:	cwde   
  443892:	out    0x3,eax
  443894:	xor    dl,BYTE PTR [edi]
  443896:	mov    bh,0xfc
  443898:	xchg   edx,eax
  443899:	in     al,dx
  44389a:	outs   dx,DWORD PTR ds:[esi]
  44389b:	jl     0x44387e
  44389d:	cwde   
  44389e:	out    0x3,eax
  4438a0:	cmp    dl,BYTE PTR [edi]
  4438a2:	(bad)  
  4438a3:	cld    
  4438a4:	jp     0x443892
  4438a6:	pop    ebp
  4438a7:	jl     0x4438b2
  4438a9:	test   bh,ah
  4438ab:	add    esi,DWORD PTR [eax]
  4438ad:	add    ebp,DWORD PTR [edi+0x27]
  4438b0:	mov    eax,0x73d4e78f
  4438b5:	jne    0x443917
  4438b7:	aaa    
	...
  4438cc:	inc    eax
  4438cd:	xchg   ecx,eax
  4438ce:	outs   dx,BYTE PTR ds:[esi]
  4438cf:	jnp    0x4438b2
  4438d1:	and    edi,0x3
  4438d4:	nop
  4438d5:	in     eax,0x27
  4438d7:	jnp    0x4438b7
  4438d9:	(bad)  
  4438da:	pop    edi
  4438db:	push   es
  4438dc:	xor    DWORD PTR [esi],edx
  4438de:	sbb    al,0x8c
  4438e0:	stos   BYTE PTR es:[edi],al
  4438e1:	out    0xdb,al
  4438e3:	add    eax,0x76e28fb5
  4438e8:	or     DWORD PTR [esi+0x33e03e7],0x6f
  4438ef:	daa    
  4438f0:	mov    al,0x8f
  4438f2:	out    0x7a,eax
  4438f4:	data16 jecxz 0x443923
  4438f7:	xabort 0xeb
  4438fa:	out    0xdc,al
  4438fc:	add    edx,DWORD PTR [eax-0x47985d3]
  443902:	outs   dx,DWORD PTR ds:[esi]
  443903:	ss in  eax,0xfe
  443906:	pop    ebp
  443907:	ss loope 0x443921
  44390a:	clc    
  44390b:	clc    
  44390c:	add    eax,0xbc05565b
  443911:	and    al,0xab
  443913:	jl     0x4438d8
  443915:	dec    esi
  443916:	add    dl,dh
  443918:	std    
  443919:	push   0xd931a702
  44391e:	xchg   BYTE PTR [esi+edi*1+0x29ad876e],bl
  443925:	jmp    0x6241:0x693ebc35
  44392c:	mov    ebx,0x661f3
	...
  443941:	add    BYTE PTR [eax],al
  443943:	add    BYTE PTR [edx],cl
  443945:	pop    eax
  443946:	cmp    al,0xf2
  443948:	mov    dh,0x8f
  44394a:	sub    eax,0x7bc06eff
  44394f:	jecxz  0x443942
  443951:	stc    
  443952:	and    al,0xde
  443954:	out    dx,al
  443955:	data16 loopne 0x4439ca
  443958:	test   DWORD PTR [eax],esp
  44395a:	or     DWORD PTR [esi-0x6102e393],ebx
  443960:	dec    edx
  443961:	cmp    cl,cl
  443963:	call   0xe9567136
  443968:	mov    dh,0x14
  44396a:	dec    ebx
  44396b:	xchg   ebp,eax
  44396c:	xor    al,0xd3
  44396e:	jae    0x443949
  443970:	sub    esp,DWORD PTR [eax]
  443972:	push   esp
  443973:	js     0x44392c
  443975:	in     al,dx
  443976:	shr    dh,cl
  443978:	mov    eax,eax
  44397a:	(bad)  
  44397b:	js     0x4439fa
  44397d:	jge    0x44397f
  44397f:	jmp    0x7340a013
  443984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443985:	out    0x7c,eax
  443987:	and    al,0x25
  443989:	xchg   esp,eax
  44398a:	stc    
  44398b:	and    al,0x1d
  44398d:	pop    edi
  44398e:	mov    WORD PTR [ebx+eax*2-0x67],fs
  443992:	test   BYTE PTR ds:0x6c008fb1,ch
  443998:	ins    DWORD PTR es:[edi],dx
  443999:	addr16 cmp al,0xe2
  44399c:	mov    dh,0x8f
  44399e:	test   DWORD PTR [edx+edi*1+0x5f006253],ebx
  4439a5:	push   edi
  4439a6:	dec    eax
  4439a7:	cmp    al,0x0
	...
  4439b9:	add    BYTE PTR [eax],al
  4439bb:	add    bh,al
  4439bd:	mov    es,WORD PTR [eax]
  4439bf:	add    BYTE PTR [ecx+0x5f],dl
  4439c2:	dec    eax
  4439c3:	cmp    al,0x97
  4439c5:	mov    es,WORD PTR [eax]
  4439c7:	jne    0x443976
  4439c9:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4439cb:	and    al,0x8c
  4439cd:	mov    es,WORD PTR [eax]
  4439cf:	add    BYTE PTR [edi],cl
  4439d1:	push   es
  4439d2:	cli    
  4439d3:	dec    eax
  4439d4:	cmp    cl,BYTE PTR ds:0x1d080032
  4439da:	pop    esi
  4439db:	sbb    DWORD PTR [eax],0xffffffac
  4439de:	or     ecx,DWORD PTR ss:[esi+ecx*4+0x1163b9fa]
  4439e6:	add    BYTE PTR [eax],al
  4439e8:	cli    
  4439e9:	xchg   esp,eax
  4439ea:	xchg   esp,eax
  4439eb:	dec    eax
  4439ec:	shl    dh,0xf8
  4439ef:	call   edi
  4439f1:	sub    BYTE PTR [esi+0x1],bl
  4439f4:	jae    0x443a03
  4439f6:	out    0x2,al
  4439f8:	fstp   DWORD PTR [edi+esi*2]
  4439fb:	mov    bh,0xc7
  4439fd:	lahf   
  4439fe:	cld    
  4439ff:	test   DWORD PTR [esi],ebx
  443a01:	call   0xb707:0x7e18965
  443a08:	adc    ebp,DWORD PTR [ebx+0x75]
  443a0b:	hlt    
  443a0c:	cdq    
  443a0d:	adc    DWORD PTR [esp+edx*2-0x69],esi
  443a11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443a12:	lock lea ebp,[eax+0x66]
  443a16:	pop    esp
  443a17:	or     ebx,DWORD PTR [esi+ecx*4]
  443a1a:	test   DWORD PTR [ebx+0x8e0c],ebx
	...
  443a34:	xchg   edi,eax
  443a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443a36:	cld    
  443a37:	call   ecx
  443a39:	add    edi,DWORD PTR [ebx-0x12]
  443a3c:	fsubr  DWORD PTR [edx+0x6d]
  443a3f:	loopne 0x4439d8
  443a41:	test   al,0xe8
  443a43:	jg     0x4439fa
  443a45:	xchg   ecx,eax
  443a46:	icebp  
  443a47:	mov    al,0x51
  443a49:	ins    DWORD PTR es:[edi],dx
  443a4a:	dec    DWORD PTR [edx+0x34ff5d41]
  443a50:	mov    edi,0xdf84ec23
  443a55:	mov    WORD PTR [ecx+0x286eae85],fs
  443a5b:	fdivr  DWORD PTR [edx-0x4d7b0eb7]
  443a61:	pop    ecx
  443a62:	mov    edi,?
  443a64:	bound  ecx,QWORD PTR [edi-0x15]
  443a67:	call   DWORD PTR [edx-0x75ed83ef]
  443a6d:	and    al,0x89
  443a6f:	test   DWORD PTR [eax],eax
  443a71:	jecxz  0x443ae9
  443a73:	jae    0x443a0a
  443a75:	jl     0x4439f9
  443a77:	jae    0x443aaa
  443a79:	outs   dx,BYTE PTR ds:[esi]
  443a7a:	or     ah,ch
  443a7c:	ss ret 0x45fd
  443a80:	sub    al,0x4c
  443a82:	cwde   
  443a83:	jae    0x443ac8
  443a85:	mov    ds:0xd43e5522,al
  443a8a:	and    BYTE PTR [ebp-0x3347dc87],bh
  443a90:	jno    0x443acd
  443a92:	mov    eax,0x778c69cc
  443a97:	in     al,dx
	...
  443aac:	ss sub esi,esp
  443aaf:	dec    esp
  443ab0:	sub    DWORD PTR [ecx-0x30d10889],0xfffffff2
  443ab7:	mov    al,0x72
  443ab9:	hlt    
  443aba:	iret   
  443abb:	int    0xfa
  443abd:	mov    bl,0x8c
  443abf:	stc    
  443ac0:	or     dl,BYTE PTR [edx]
  443ac2:	add    DWORD PTR [edi+0x46716678],0xffffffb2
  443ac9:	jae    0x443ad9
  443acb:	add    al,0x38
  443acd:	aaa    
  443ace:	or     DWORD PTR [eax],ecx
  443ad0:	sub    al,0x90
  443ad2:	ins    DWORD PTR es:[edi],dx
  443ad3:	add    al,0xb5
  443ad5:	(bad)  
  443ad6:	ins    BYTE PTR es:[edi],dx
  443ad7:	adc    al,0xd8
  443ad9:	and    BYTE PTR [edx-0x7b],dl
  443adc:	mov    ch,0x8f
  443ade:	sar    DWORD PTR [edx+0x71],0x8
  443ae2:	jmp    0x6fdd2365
  443ae7:	je     0x443a9e
  443ae9:	(bad)  
  443aea:	out    0x80,eax
  443aec:	je     0x443a7f
  443aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443aef:	jp     0x443b1f
  443af1:	in     al,dx
  443af2:	ins    DWORD PTR es:[edi],dx
  443af3:	pop    es
  443af4:	lods   eax,DWORD PTR ds:[esi]
  443af5:	push   ss
  443af6:	mov    esp,0x174a308f
  443afb:	jns    0x443b4d
  443afd:	adc    al,0xac
  443aff:	xchg   DWORD PTR [eax+eiz*1-0x4137be22],edi
  443b06:	jnp    0x443b07
  443b08:	ror    esp,0x7a
  443b0b:	sbb    eax,0xf96bc1a8
	...
  443b24:	aam    0x8e
  443b26:	jnp    0x443ba4
  443b28:	loope  0x443abf
  443b2a:	out    0x3,eax
  443b2c:	push   eax
  443b2d:	mov    eax,0x81c9c36c
  443b32:	push   cs
  443b33:	aas    
  443b34:	dec    ebp
  443b35:	arpl   di,bp
  443b37:	sbb    eax,0x762133c
  443b3c:	mov    bl,0x8f
  443b3e:	out    0x1d,eax
  443b40:	sub    al,0x10
  443b42:	imul   edi,ecx,0x2a
  443b45:	call   0xe5e629d7
  443b4a:	in     al,dx
  443b4b:	add    al,0xb2
  443b4d:	jno    0x443ae1
  443b4f:	jl     0x443b46
  443b51:	xchg   esp,eax
  443b52:	out    0x3,eax
  443b54:	adc    BYTE PTR [eax-0x2ccb7af7],dl
  443b5a:	in     al,dx
  443b5b:	add    esi,DWORD PTR [ebp+0x6f9b009c]
  443b61:	dec    esp
  443b62:	clc    
  443b63:	fs sbb eax,0x5ca0065c
  443b69:	pop    DWORD PTR [eax]
  443b6b:	jmp    0x4241b4d3
  443b70:	loopne 0x443b14
  443b72:	mov    ebp,0x220ccd4
  443b77:	jmp    0xb8cfcb32
  443b7c:	xor    esi,edx
  443b7e:	pop    es
  443b7f:	jo     0x443b32
  443b81:	out    0xf8,eax
  443b83:	jmp    0x6b3fb2ab
	...
  443b9c:	jecxz  0x443b81
  443b9e:	add    ebx,DWORD PTR [esi]
  443ba0:	jecxz  0x443b7d
  443ba2:	jb     0x443c0d
  443ba4:	(bad)  [ecx+0x55]
  443ba7:	bound  ebp,QWORD PTR [ebx]
  443ba9:	dec    ebx
  443baa:	mov    ebp,0xcbd44a35
  443baf:	sub    eax,0x9ccbd442
  443bb4:	in     eax,dx
  443bb5:	repz jl 0x443bb5
  443bb8:	push   ebx
  443bb9:	push   esp
  443bba:	push   edx
  443bbb:	jb     0x443ba8
  443bbd:	cwde   
  443bbe:	mov    cl,0x3f
  443bc0:	mov    bl,0xb4
  443bc2:	into   
  443bc3:	ds inc edx
  443bc5:	ffreep st(0)
  443bc7:	and    al,0xc5
  443bc9:	call   0xf7b02c6
  443bce:	pop    ebx
  443bcf:	mov    ch,0x24
  443bd1:	dec    esi
  443bd2:	add    DWORD PTR [esi-0x16fc2104],ebp
  443bd8:	mov    dh,0x8f
  443bda:	add    edx,0x1c
  443bdd:	fwait
  443bde:	mov    bh,0x73
  443be0:	mov    cl,0x8f
  443be2:	add    BYTE PTR [esi-0x17032104],ch
  443be8:	mov    dh,0x8f
  443bea:	add    DWORD PTR [eax],0x3b
  443bed:	or     DWORD PTR [eax+0x931135],0xffffff83
  443bf4:	and    bl,BYTE PTR [edx+0x62e1893f]
  443bfa:	cmp    DWORD PTR [ebp-0x7c],0xfff926
	...
  443c11:	add    BYTE PTR [eax],al
  443c13:	add    ah,cl
  443c15:	xchg   edx,eax
  443c16:	cmp    edi,0x57
  443c19:	nop
  443c1a:	lock mov db2,ebx
  443c1e:	xor    DWORD PTR [ebp-0x80],0xffffff8e
  443c22:	retf   
  443c23:	mov    DWORD PTR [ecx],eax
  443c25:	outs   dx,DWORD PTR ds:[esi]
  443c26:	cmp    DWORD PTR [ebp-0x10],0xa7fc4d14
  443c2d:	cmp    esi,DWORD PTR [ebp+0x8]
  443c30:	xchg   edi,eax
  443c31:	imul   eax,DWORD PTR [edi],0x97c384
  443c37:	add    BYTE PTR [edi-0x39],ah
  443c3a:	lock psubsw mm7,QWORD PTR [eax]
  443c3e:	add    BYTE PTR [eax],al
  443c40:	mov    edi,?
  443c42:	mov    ds:0x928c24,eax
  443c47:	add    BYTE PTR [ebx+0x29],bl
  443c4a:	mov    esp,0x94dab0
  443c4f:	add    bh,ah
  443c51:	sbb    bh,BYTE PTR [esi+edx*1+0x10b2924c]
  443c58:	pop    esp
  443c59:	xchg   edx,eax
  443c5a:	add    BYTE PTR [ebx],ch
  443c5c:	add    esp,DWORD PTR [ebp-0x7d66813e]
  443c62:	scas   eax,DWORD PTR es:[edi]
  443c63:	mov    ah,0xbc
  443c65:	out    0x2,al
  443c67:	add    BYTE PTR [eax+edi*8],bl
  443c6a:	adc    esi,0x72
  443c6d:	fimul  DWORD PTR ds:[ebx+0x95e93e4]
  443c74:	pushf  
  443c75:	sub    cl,BYTE PTR [esi]
	...
  443c8b:	add    BYTE PTR [ebp+0x2db20df8],dh
  443c91:	inc    eax
  443c92:	pop    ss
  443c93:	add    BYTE PTR [ebp+0x2d13cd61],dh
  443c99:	les    edx,FWORD PTR [ebx]
  443c9b:	stc    
  443c9c:	jne    0x443c62
  443c9e:	or     eax,0x179f4db2
  443ca3:	add    BYTE PTR [ebp+0x2e13c561],dh
  443ca9:	sub    BYTE PTR ds:0x89e7b188,al
  443caf:	nop
  443cb0:	or     esi,ebx
  443cb2:	cld    
  443cb3:	inc    DWORD PTR [eax+ecx*8]
  443cb6:	mov    ecx,0xfcf7baff
  443cbb:	dec    BYTE PTR [edx]
  443cbd:	ret    
  443cbe:	sub    al,dh
  443cc0:	adc    ecx,DWORD PTR [edx-0xf0e7491]
  443cc6:	ins    BYTE PTR es:[edi],dx
  443cc7:	bound  ebp,QWORD PTR [edi+eax*2]
  443cca:	mov    ch,0x12
  443ccc:	mov    ch,0xf6
  443cce:	mov    DWORD PTR [ebx-0x6f],esi
  443cd1:	xchg   edx,eax
  443cd2:	adc    DWORD PTR [edx+0x2e],esp
  443cd5:	inc    ebx
  443cd6:	lods   eax,DWORD PTR ds:[esi]
  443cd7:	jl     0x443c88
  443cd9:	idiv   ah
  443cdb:	popa   
  443cdc:	xchg   BYTE PTR [ecx-0x60baf919],bl
  443ce2:	pop    ss
  443ce3:	add    BYTE PTR [ebp-0x7d8b007],dh
  443ce9:	ret    0x8884
  443cec:	adc    ebp,esp
  443cee:	cld    
  443cef:	inc    DWORD PTR [eax]
	...
  443d01:	add    BYTE PTR [eax],al
  443d03:	add    BYTE PTR [edx+0x42f8e76b],bh
  443d09:	into   
  443d0a:	fs cmpxchg esi,esi
  443d0e:	cld    
  443d0f:	sub    BYTE PTR [ebx],0xee
  443d12:	add    ch,0xb4
  443d15:	idiv   ah
  443d17:	xor    al,0xa8
  443d19:	(bad)  
  443d1a:	xchg   ebx,eax
  443d1b:	adc    DWORD PTR [ecx],esi
  443d1d:	cmp    ah,bh
  443d1f:	add    esi,DWORD PTR [ebp+0x45905a94]
  443d25:	data16 fld QWORD PTR [ebx]
  443d28:	mov    ch,0x24
  443d2a:	xlat   BYTE PTR ds:[ebx]
  443d2b:	add    esi,DWORD PTR [ebp+0x3a7ace8f]
  443d31:	push   ebx
  443d32:	outs   dx,DWORD PTR ds:[esi]
  443d33:	lea    edi,ds:0xb503d124
  443d39:	test   al,0x32
  443d3b:	add    cl,BYTE PTR [ebp-0x6c]
  443d3e:	xchg   edx,eax
  443d3f:	cwde   
  443d40:	add    eax,0xb503dd64
  443d45:	push   ss
  443d46:	mov    ah,0x6f
  443d48:	push   edi
  443d49:	rol    BYTE PTR [ebp+ecx*4+0x6d],0x97
  443d4e:	jo     0x443d17
  443d50:	xchg   esi,eax
  443d51:	ins    DWORD PTR es:[edi],dx
  443d52:	loopne 0x443ce7
  443d54:	ins    DWORD PTR es:[edi],dx
  443d55:	jge    0x443d3e
  443d57:	add    edi,DWORD PTR [eax]
  443d59:	aas    
  443d5a:	sti    
  443d5b:	lea    esi,ds:0xb503f127
  443d61:	pop    ss
  443d62:	jmp    0x443d76
  443d64:	xor    BYTE PTR [edx+0x3],cl
  443d67:	add    eax,DWORD PTR [eax]
	...
  443d79:	add    BYTE PTR [eax],al
  443d7b:	add    ch,bl
  443d7d:	jnp    0x443ded
  443d7f:	cld    
  443d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443d81:	sbb    BYTE PTR [edi+0x2fff3b0b],ch
  443d87:	sbb    dh,BYTE PTR [ebp-0x53e7a071]
  443d8d:	sbb    BYTE PTR [edi-0x41],dh
  443d90:	(bad)  
  443d91:	(bad)  
  443d92:	out    0x8c,eax
  443d94:	into   
  443d95:	repz out 0xdb,eax
  443d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443d99:	push   ds
  443d9a:	imul   DWORD PTR ds:0x70966d7b
  443da0:	xor    BYTE PTR [edx-0x41],dl
  443da3:	mov    cs,WORD PTR [ecx+0x3fb90099]
  443da9:	(bad)  
  443daa:	mov    ebx,0x858fb6d7
  443daf:	cmp    al,0x35
  443db1:	jno    0x443d3a
  443db3:	popa   
  443db4:	dec    esi
  443db5:	add    DWORD PTR [eax],0x628499e9
  443dbb:	bound  eax,QWORD PTR [edx+0x1f]
  443dbe:	jl     0x443db3
  443dc0:	mov    dh,0x8f
  443dc2:	bound  ebx,QWORD PTR [edx+0x35880a5d]
  443dc8:	int3   
  443dc9:	pop    DWORD PTR [eax]
  443dcb:	pop    es
  443dcc:	scas   al,BYTE PTR es:[edi]
  443dcd:	daa    
  443dce:	mov    eax,0xfd8fb6ff
  443dd3:	stos   DWORD PTR es:[edi],eax
  443dd4:	dec    esi
  443dd5:	or     al,0x88
  443dd7:	xchg   ebp,eax
  443dd8:	lods   al,BYTE PTR ds:[esi]
  443dd9:	pop    DWORD PTR [eax]
  443ddb:	add    ch,BYTE PTR [eax+0xc]
  443dde:	push   ebx
  443ddf:	inc    ebp
	...
  443df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443df5:	push   ds
  443df6:	mov    BYTE PTR [edi-0x40],bh
  443df9:	pop    DWORD PTR [eax]
  443dfb:	jbe    0x443dc3
  443dfd:	pop    DWORD PTR [eax]
  443dff:	jmp    0xb4cb18d5
  443e04:	push   ds
  443e05:	or     eax,0x8fac5d88
  443e0a:	add    dl,dl
  443e0c:	in     eax,0x65
  443e0e:	popa   
  443e0f:	fidivr WORD PTR ds:0xb6f3bc00
  443e15:	pop    DWORD PTR [edi-0x32921d6c]
  443e1b:	or     edi,DWORD PTR [ecx]
  443e1d:	pop    eax
  443e1e:	or     BYTE PTR [eax+0x7b],ah
  443e21:	out    dx,eax
  443e22:	popa   
  443e23:	lock inc esi
  443e25:	sub    BYTE PTR [edx],dl
  443e27:	jmp    0xfd944ae2
  443e2c:	cmp    al,0x10
  443e2e:	mov    eax,0x888fb6f7
  443e33:	add    BYTE PTR [eax+0x7c],cl
  443e36:	add    DWORD PTR [ebp-0x8],0xffffff8c
  443e3a:	pop    eax
  443e3b:	adc    al,0x97
  443e3d:	jecxz  0x443e4b
  443e3f:	mov    edx,esp
  443e41:	xchg   ebx,eax
  443e42:	adc    BYTE PTR [eax+0x7995],0x84
  443e49:	xchg   DWORD PTR [edi],eax
  443e4b:	mov    ecx,DWORD PTR [edi+ecx*8+0x160c000d]
  443e52:	jne    0x443e40
  443e54:	or     eax,0xb10cc7
	...
  443e69:	add    BYTE PTR [eax],al
  443e6b:	add    BYTE PTR [ecx+edi*4],cl
  443e6e:	ret    0x4f66
  443e71:	jae    0x443df6
  443e73:	dec    ebp
  443e74:	add    BYTE PTR fs:[edx+ecx*1+0x7c],dl
  443e79:	adc    al,0x90
  443e7b:	mov    esp,0x8b008eca
  443e80:	or     DWORD PTR [ebx+0x5e],esp
  443e83:	mov    DWORD PTR [esp],esp
  443e86:	push   cs
  443e87:	add    ah,cl
  443e89:	jne    0x443e9d
  443e8b:	data16 daa 
  443e8d:	and    al,0xbc
  443e8f:	or     bl,BYTE PTR [esi+ecx*4-0x16042ca2]
  443e96:	add    DWORD PTR [eax+0x7a14],edi
  443e9c:	lahf   
  443e9d:	mov    edi,0xd01489f0
  443ea2:	or     eax,0x88158c00
  443ea7:	mov    esp,0x83008e5a
  443eac:	sahf   
  443ead:	adc    BYTE PTR [ebx-0x7],bh
  443eb0:	push   edx
  443eb1:	in     al,0x54
  443eb3:	mov    DWORD PTR [ecx+0x72],ecx
  443eb6:	pop    esi
  443eb7:	shr    DWORD PTR [esi+0x15],cl
  443eba:	dec    eax
  443ebb:	or     ch,al
  443ebd:	xlat   BYTE PTR ds:[ebx]
  443ebe:	fsub   QWORD PTR [esi-0x4b]
  443ec1:	out    dx,eax
  443ec2:	mov    WORD PTR [eax-0x7b030755],?
  443ec8:	in     eax,0xc4
  443eca:	xchg   BYTE PTR [eax-0x34593],al
	...
  443ee4:	cmp    eax,0x788513f4
  443ee9:	int3   
  443eea:	add    ebx,DWORD PTR [eax-0x3f]
  443eed:	pop    ebp
  443eee:	cmc    
  443eef:	adc    edi,DWORD PTR [edi]
  443ef1:	push   0xf8b512bc
  443ef6:	test   DWORD PTR [eax-0x53],ecx
  443ef9:	jo     0x443f0c
  443efb:	or     DWORD PTR [esi],ebp
  443efd:	dec    eax
  443efe:	mov    ecx,0x85f8b512
  443f03:	jnp    0x443ede
  443f05:	not    ah
  443f07:	adc    esp,DWORD PTR [eax+ecx*8]
  443f0a:	es (bad) 
  443f0c:	push   ebx
  443f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443f0e:	push   0x7d
  443f10:	test   DWORD PTR [ebp-0x74],0xfce20990
  443f17:	call   FWORD PTR [ebx+0x6f]
  443f1a:	mov    ch,0xb8
  443f1c:	mov    ds:0x5e6fcf8,eax
  443f21:	cmc    
  443f22:	cld    
  443f23:	call   DWORD PTR [ebx]
  443f25:	xchg   BYTE PTR [edi+0x62],bl
  443f28:	lods   al,BYTE PTR ds:[esi]
  443f29:	inc    esi
  443f2a:	mov    ch,0x12
  443f2c:	mov    ch,0xf6
  443f2e:	jge    0x443eef
  443f30:	mov    bh,0x7f
  443f32:	xor    eax,0xb9f78afe
  443f37:	adc    BYTE PTR [ebp+0x7f7cfcf6],dh
  443f3d:	fisttp QWORD PTR [ecx]
  443f3f:	mov    esp,ecx
  443f41:	idiv   esp
  443f43:	(bad)  
  443f44:	mov    edx,0xbe85a1
	...
  443f59:	add    BYTE PTR [eax],al
  443f5b:	add    BYTE PTR [edi+0x5c24fcf6],ch
  443f61:	nop
  443f62:	jo     0x443f33
  443f64:	dec    edx
  443f65:	adc    eax,0x8fa7c06f
  443f6a:	out    0x38,eax
  443f6c:	ins    BYTE PTR es:[edi],dx
  443f6d:	bound  eax,QWORD PTR [edx+0xd]
  443f70:	add    al,0x0
  443f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443f73:	or     dh,BYTE PTR [ebp+0x1ed7708f]
  443f79:	push   0xffffff96
  443f7b:	bound  edi,QWORD PTR [eax]
  443f7d:	pop    eax
  443f7e:	fisttp WORD PTR [edx+0xb08eb76]
  443f84:	and    eax,0xb503f128
  443f89:	adc    al,0x37
  443f8b:	sbb    BYTE PTR [ebx],bh
  443f8d:	adc    BYTE PTR [edi+0x16],cl
  443f90:	mov    ch,0x8f
  443f92:	outs   dx,DWORD PTR ds:[esi]
  443f93:	or     dl,al
  443f95:	adc    al,0x24
  443f97:	push   0x88db38ea
  443f9c:	pop    ebp
  443f9d:	jnp    0x443ffd
  443f9f:	int3   
  443fa0:	mov    dl,0x15
  443fa2:	ja     0x443f5f
  443fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443fa5:	(bad)  
  443fa6:	out    0x8b,eax
  443fa8:	mov    eax,ds:0x1945e90
  443fad:	jp     0x443f96
  443faf:	add    esi,DWORD PTR [eax]
  443fb1:	arpl   WORD PTR [ebx+0x3],dx
  443fb4:	or     eax,0xd314787c
  443fb9:	aad    0xc8
  443fbb:	push   eax
  443fbc:	mov    WORD PTR [esp+ebx*4],ss
  443fbf:	jnp    0x443fc1
	...
  443fd1:	add    BYTE PTR [eax],al
  443fd3:	add    BYTE PTR [esi],ch
  443fd5:	cmp    ebp,ebp
  443fd7:	jae    0x444013
  443fd9:	call   FWORD PTR [edx+0x16]
  443fdc:	mov    ch,0x8f
  443fde:	pop    esi
  443fdf:	xlat   BYTE PTR ds:[ebx]
  443fe0:	jle    0x44404b
  443fe2:	pusha  
  443fe3:	mov    esp,0x3e7793d
  443fe8:	pop    eax
  443fe9:	scas   eax,DWORD PTR es:[edi]
  443fea:	or     DWORD PTR [eax-0x1d0030d3],0x1a628fb6
  443ff4:	ror    BYTE PTR [edx],1
  443ff6:	mov    BYTE PTR [ebp+0x47008fa8],ah
  443ffc:	mov    esi,0xb6ffb827
  444001:	(bad)  
  444002:	std    
  444003:	sbb    edi,DWORD PTR [ecx-0x377a77f8]
  444009:	pop    DWORD PTR [eax]
  44400b:	jb     0x44404b
  44400d:	and    edx,DWORD PTR [edx]
  44400f:	jmp    0xad02a2ca
  444014:	xor    eax,0x15270ad8
  444019:	or     DWORD PTR [ebx-0x73],edx
  44401c:	adc    bl,dl
  44401e:	frstor [edx-0x12]
  444021:	xchg   DWORD PTR [edi+0x76d8d24],eax
  444027:	pop    ecx
  444028:	cs jge 0x44402b
  44402b:	jmp    0x63587f6d
  444030:	ss daa 
  444032:	adc    ch,cl
  444034:	mov    dh,0x17
  444036:	add    al,0xf8
	...
  44404c:	cmp    eax,0xeee8e44c
  444051:	jnp    0x443fd8
  444053:	shr    DWORD PTR [edx-0x5f6f6ff7],1
  444059:	pop    DWORD PTR [eax]
  44405b:	jb     0x4440db
  44405d:	xchg   edi,eax
  44405e:	mov    ch,dl
  444060:	mov    ecx,0xc8759014
  444065:	pop    DWORD PTR [eax]
  444067:	bound  ebx,QWORD PTR [ebx-0x553f0115]
  44406d:	cs adc bl,dl
  444070:	cld    
  444071:	jno    0x444040
  444073:	push   es
  444074:	xor    eax,0x2660ed1e
  444079:	sbb    al,0x12
  44407b:	add    BYTE PTR [ebx+edx*4+0x5e],bl
  44407f:	mov    esp,esi
  444081:	sbb    cl,BYTE PTR [esi]
  444083:	add    BYTE PTR [edx+ebp*2+0x21],cl
  444087:	add    DWORD PTR [ebx+edx*4+0x5e],ecx
  44408b:	sar    DWORD PTR [esi-0xe],cl
  44408e:	add    DWORD PTR [eax+0x8214],edx
  444094:	iret   
  444095:	push   esp
  444096:	sti    
  444097:	call   0x44d4d9
  44409c:	sub    esp,DWORD PTR [edx]
  44409e:	mov    dh,al
  4440a0:	es xchg ebx,eax
  4440a2:	add    BYTE PTR [ebx],ch
  4440a4:	gs or  eax,0xb97f845
  4440aa:	mov    esp,0x33931c16
  4440af:	iret   
	...
  4440c4:	stos   BYTE PTR es:[edi],al
  4440c5:	repnz pop es
  4440c7:	mov    bh,0x7c
  4440c9:	dec    edi
  4440ca:	add    al,BYTE PTR [eax]
  4440cc:	or     al,0xc
  4440ce:	dec    ebp
  4440cf:	in     al,dx
  4440d0:	ret    0xda46
  4440d3:	mov    esp,DWORD PTR [ebx+ecx*4-0xdcfba7f]
  4440da:	add    DWORD PTR [eax+0x81a4],edx
  4440e0:	inc    edi
  4440e1:	ret    
  4440e2:	or     al,0x8a
  4440e4:	pop    esp
  4440e5:	sbb    ecx,DWORD PTR [esi]
  4440e7:	add    ah,cl
  4440e9:	or     al,BYTE PTR [ecx+edx*1]
  4440ec:	push   edi
  4440ed:	rcr    ah,1
  4440ef:	add    DWORD PTR [esi+ecx*4-0x7d],edx
  4440f3:	js     0x444075
  4440f5:	or     eax,0x4160848
  4440fa:	mov    cl,0x16
  4440fc:	mov    WORD PTR [edx+0xd8b1488],ss
  444102:	nop
  444103:	mov    esp,0x8b009282
  444108:	mov    ch,0x3
  44410a:	popa   
  44410b:	jmp    edx
  44410d:	in     al,0xb3
  44410f:	adc    BYTE PTR [edi+0x5accdea2],bl
  444115:	popa   
  444116:	(bad)  
  444117:	div    DWORD PTR [eax]
  444119:	cld    
  44411a:	or     dh,al
  44411c:	sub    al,0x38
  44411e:	mov    eax,0x89e8b512
  444123:	push   ebx
  444124:	dec    ecx
  444125:	push   esi
  444126:	mov    edi,DWORD PTR [eax+0x0]
	...
  44413c:	std    
  44413d:	(bad)  
  44413f:	dec    DWORD PTR [esi-0x78]
  444142:	fiadd  WORD PTR [ebp+ebp*2-0x4afff4d4]
  444149:	push   esi
  44414a:	push   ecx
  44414b:	loope  0x44417b
  44414d:	jo     0x444100
  44414f:	adc    dh,BYTE PTR [ebp+0x4d06dee8]
  444155:	jo     0x444166
  444157:	add    BYTE PTR [ebp+0x2cf7c7e9],dh
  44415d:	jo     0x444110
  44415f:	adc    dh,BYTE PTR [ebp+0x318889e8]
  444165:	mov    esi,0x2a36fffc
  44416a:	jo     0x4441e9
  44416c:	fsub   st(6),st
  44416e:	not    BYTE PTR [esi+0x2c]
  444171:	sub    DWORD PTR [eax+0x62],0xffffffe6
  444175:	dec    ecx
  444176:	mov    cl,BYTE PTR [eax-0x43]
  444179:	pop    edi
  44417a:	shl    bl,0x5b
  44417d:	out    dx,eax
  44417e:	mov    WORD PTR [eax-0x7b03175d],?
  444184:	add    eax,0x6d808abb
  444189:	(bad)  
  44418c:	sub    eax,0xf08513eb
  444191:	push   edx
  444192:	add    al,0x58
  444194:	test   eax,0xa6fb6e8f
  444199:	or     DWORD PTR [edi-0x44],esi
  44419c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44419d:	(bad)  
  44419e:	out    0x8e,eax
	...
  4441b4:	in     eax,dx
  4441b5:	xchg   DWORD PTR [edi+0xf],ebx
  4441b8:	mov    esp,0xc7b75708
  4441bd:	(bad)  
  4441be:	out    0x8e,eax
  4441c0:	fsubp  st(3),st
  4441c2:	out    0xdb,eax
  4441c4:	(bad)  
  4441c5:	push   ds
  4441c6:	xlat   BYTE PTR ds:[ebx]
  4441c7:	sub    eax,0x69b6767b
  4441cc:	enter  0xd1d1,0x8b
  4441d0:	and    eax,0xb503f91c
  4441d5:	jne    0x444237
  4441d7:	mov    esp,0x3e7866d
  4441dc:	adc    BYTE PTR [ecx+0x76035541],al
  4441e2:	loopne 0x444177
  4441e4:	pop    ebp
  4441e5:	xchg   bh,ah
  4441e7:	add    edx,DWORD PTR [eax+0x3d8ae9ce]
  4441ed:	sbb    al,0xf1
  4441ef:	add    esi,DWORD PTR [ebp-0x378fdbf8]
  4441f5:	rcr    DWORD PTR [edi-0x11],0xde
  4441f9:	adc    dh,BYTE PTR [eax+0x6d16bcef]
  4441ff:	add    al,0xb5
  444201:	(bad)
  444205:	nop
  444206:	out    0x3,eax
  444208:	mov    ch,0xe8
  44420a:	add    BYTE PTR ds:0xbae962da,bh
  444210:	mov    bh,0x8f
  444212:	out    0x3,eax
  444214:	hlt    
  444215:	push   edx
  444216:	dec    edi
  444217:	add    eax,0x0
	...
  44422c:	mov    ch,0x8f
  44422e:	out    0x6c,eax
  444230:	mov    ecx,0xb503e216
  444235:	pop    DWORD PTR [eax]
  444237:	cs pop edx
  444239:	in     al,0x3
  44423b:	jmp    0xacc1d1f6
  444240:	push   es
  444241:	xchg   esp,eax
  444242:	daa    
  444243:	mov    esp,0x3583870e
  444248:	sti    
  444249:	(bad)  
  44424a:	clc    
  44424b:	scas   al,BYTE PTR es:[edi]
  44424c:	mov    WORD PTR [ebx-0x7b],es
  44424f:	or     al,0x82
  444251:	sbb    ecx,esp
  444253:	sub    eax,0x9ccbcbed
  444258:	sub    ebx,ebp
  44425a:	dec    esi
  44425b:	bound  edx,QWORD PTR [edx]
  44425d:	xchg   esp,eax
  44425e:	test   DWORD PTR [edi+0x2],esi
  444261:	add    DWORD PTR [eax],0xf99169e9
  444267:	xlat   BYTE PTR ds:[ebx]
  444268:	mov    ebp,0xb79250d6
  44426d:	pop    DWORD PTR [eax]
  44426f:	jmp    0x3f4926a5
  444274:	pop    es
  444275:	outs   dx,BYTE PTR ds:[esi]
  444276:	test   DWORD PTR [ecx+0x62ddcb14],ebx
  44427c:	cld    
  44427d:	jg     0x444206
  44427f:	sub    al,0x8d
  444281:	jno    0x44428a
  444283:	ja     0x4442c3
  444285:	add    DWORD PTR [eax],0x84129e9
  44428b:	arpl   WORD PTR [edi+edx*1],si
  44428e:	adc    ch,cl
	...
  4442a4:	mov    dh,0x7
  4442a6:	add    al,0xd8
  4442a8:	mov    bh,0x39
  4442aa:	adc    al,0x63
  4442ac:	inc    esp
  4442ad:	and    al,0x12
  4442af:	jmp    0xfdbe556a
  4442b4:	cmp    DWORD PTR [ecx+0x8],ecx
  4442b7:	jb     0x4442bc
  4442b9:	fadd   DWORD PTR [edi-0x6ded5203]
  4442bf:	(bad)  
  4442c0:	les    ecx,FWORD PTR [edi-0x46630000]
  4442c6:	or     al,0xb1
  4442c8:	jl     0x444277
  4442ca:	ret    0xbf66
  4442cd:	data16 jnp 0x444292
  4442d0:	leave  
  4442d1:	add    eax,0x8f8abc8e
  4442d6:	add    BYTE PTR [esi+0x5],ah
  4442d9:	adc    DWORD PTR [eax-0x1c7073ea],edi
  4442df:	adc    edi,DWORD PTR [edx]
  4442e1:	inc    esp
  4442e2:	loopne 0x44434a
  4442e4:	adc    DWORD PTR gs:[eax+0x7b8f4c16],edi
  4442eb:	ror    DWORD PTR [ecx+0x6],0x86
  4442ef:	mov    esp,0x8b008f6a
  4442f4:	cdq    
  4442f5:	xchg   DWORD PTR [ebx+0x8a208e],eax
  4442fb:	add    BYTE PTR [esi+ecx*1-0x367df40f],dl
  444302:	pop    esi
  444303:	mov    ecx,DWORD PTR [edx+edi*4-0x35]
  444307:	loop   0x444309
	...
  444319:	add    BYTE PTR [eax],al
  44431b:	add    BYTE PTR [edi-0x3676f32f],ah
  444321:	push   edi
  444322:	pop    esi
  444323:	or     DWORD PTR [edx+0x1b],ebp
  444326:	push   cs
  444327:	add    BYTE PTR [esi+eax*1],bl
  44432a:	dec    esi
  44432b:	or     BYTE PTR [esi+0xc16b859],al
  444331:	(bad)
  444335:	xchg   ebx,eax
  444336:	push   esi
  444337:	adc    al,0x66
  444339:	or     DWORD PTR [ecx-0x7c7133ea],esi
  44433f:	jle    0x444339
  444341:	add    eax,0xd0570846
  444346:	hlt    
  444347:	mov    al,cl
  444349:	xchg   ecx,eax
  44434a:	adc    DWORD PTR [esi+0x8a20],0xffffffb5
  444351:	out    0xd2,eax
  444353:	adc    esp,DWORD PTR [eax+ebx*8+0x26]
  444357:	(bad)  
  444358:	adc    esi,DWORD PTR [esi+0x6c]
  44435b:	jge    0x4443d4
  44435d:	mov    ds:0xba59928b,eax
  444362:	cld    
  444363:	call   FWORD PTR [ebx]
  444365:	jo     0x4443e1
  444367:	mov    eax,0xe4fce8a3
  44436c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44436d:	adc    cl,BYTE PTR [esi-0x20]
  444370:	adc    esi,eax
  444372:	jp     0x44432c
  444374:	retf   
  444375:	call   0xebb8c076
  44437a:	mov    ecx,DWORD PTR [edx-0x33ddf]
	...
  444394:	sub    ecx,DWORD PTR cs:0xaac4385
  44439b:	add    BYTE PTR [ebp+0x36fc3d65],dh
  4443a1:	out    dx,eax
  4443a2:	add    BYTE PTR [edx-0x1d],bh
  4443a5:	dec    edx
  4443a6:	test   eax,edx
  4443a8:	fwait
  4443a9:	adc    eax,0xbc7b855f
  4443ae:	mov    eax,DWORD PTR [ebx+0x21]
  4443b1:	push   edx
  4443b2:	or     edx,DWORD PTR [edx-0x345a3]
  4443b8:	or     BYTE PTR ds:[esi+eax*4],0x33
  4443bd:	jo     0x4443ca
  4443bf:	add    BYTE PTR [ebp-0x4bf106a0],dh
  4443c5:	mov    ds:0x3f4b8610,al
  4443ca:	or     eax,DWORD PTR [eax]
  4443cc:	mov    ch,0x5d
  4443ce:	repz adc ebp,DWORD PTR [esi]
  4443d1:	stos   BYTE PTR es:[edi],al
  4443d2:	or     al,0x85
  4443d4:	jo     0x44443a
  4443d6:	test   DWORD PTR [edx+eax*8],edx
  4443d9:	ins    DWORD PTR es:[edi],dx
  4443da:	mov    edi,DWORD PTR [ebx+eiz*4-0x3dfc1871]
  4443e1:	cmp    esi,ebx
  4443e3:	mov    ah,0xa5
  4443e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4443e6:	sbb    eax,0x65e881dd
  4443eb:	inc    ecx
  4443ec:	mov    eax,ds:0xc7b75907
  4443f1:	(bad)  
  4443f2:	out    0xdd,eax
  4443f4:	xor    edx,DWORD PTR [edx]
  4443f6:	outs   dx,DWORD PTR ds:[esi]
  4443f7:	or     eax,0x0
	...
  44440c:	mov    ch,0x8f
  44440e:	adc    dl,BYTE PTR ds:[edi]
  444411:	mov    ebp,0x11bbdd06
  444416:	pop    edi
  444417:	or     eax,0x44668fb5
  44441c:	mov    ecx,0xc7b75906
  444421:	(bad)  
  444422:	out    0x32,eax
  444424:	pop    esp
  444425:	xchg   edi,eax
  444426:	jl     0x44443b
  444428:	lods   al,BYTE PTR ds:[esi]
  444429:	or     DWORD PTR [ecx+0x3],edx
  44442c:	mov    ch,0x8f
  44442e:	pop    esi
  44442f:	test   DWORD PTR [ecx],ecx
  444431:	and    bh,0x3
  444434:	rcl    dh,0xeb
  444437:	cmc    
  444438:	aam    0x88
  44443a:	cdq    
  44443b:	(bad)  
  44443c:	ror    DWORD PTR [edi+eiz*1+0x4],1
  444440:	mov    esp,0x9f8e6b20
  444445:	test   edi,esp
  444447:	add    edx,DWORD PTR [edi+0x1de9704]
  44444d:	out    dx,al
  44444e:	pop    ebp
  44444f:	(bad)  
  444450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444451:	jno    0x444443
  444453:	lea    edi,ds:0xac03e782
  444459:	and    DWORD PTR [ecx-0x44],esi
  44445c:	(bad)  
  44445d:	(bad)  
  44445e:	out    0x88,eax
  444460:	xchg   DWORD PTR [edi-0x274de791],eax
  444466:	and    BYTE PTR [eax],dl
  444468:	lods   al,BYTE PTR ds:[esi]
  444469:	and    DWORD PTR [eax],eax
  44446b:	push   edi
  44446c:	push   cs
  44446d:	jle    0x44446f
  44446f:	jmp    0x444474
	...
  444484:	cmp    eax,0xf3721446
  444489:	nop
  44448a:	mov    ch,bh
  44448c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44448d:	adc    dl,BYTE PTR [edx+0x8fc395]
  444493:	cwde   
  444494:	shl    DWORD PTR [ecx-0x17fa303a],0xb4
  44449b:	call   0xe844d456
  4444a0:	push   0x42b7d7c
  4444a5:	outs   dx,BYTE PTR ds:[esi]
  4444a6:	xchg   DWORD PTR [edi+0x41],ebp
  4444a9:	jge    0x4444ab
  4444ab:	jmp    0x41df
  4444b0:	mov    dh,0x8f
  4444b2:	in     eax,0xcb
  4444b4:	mov    cl,0x1d
  4444b6:	and    ebp,0x87009875
  4444bc:	sub    eax,0xbc778203
  4444c1:	pop    DWORD PTR [eax]
  4444c3:	xchg   ebp,esp
  4444c5:	mov    ecx,0x1730f061
  4444ca:	adc    ch,cl
  4444cc:	mov    dh,0x5a
  4444ce:	mov    edi,0xbc053fea
  4444d3:	div    DWORD PTR [esi-0x223e0271]
  4444d9:	push   esp
  4444da:	adc    dh,ch
  4444dc:	xor    bh,BYTE PTR [ecx]
  4444de:	stc    
  4444df:	mov    dh,0x89
  4444e1:	adc    cl,BYTE PTR [ebx-0x1f]
  4444e4:	inc    DWORD PTR [edx+edx*4]
  4444e7:	jge    0x4444e9
	...
  4444f9:	add    BYTE PTR [eax],al
  4444fb:	add    BYTE PTR [esi-0x478dff71],dh
  444501:	out    0x4a,eax
  444503:	xchg   ecx,eax
  444504:	imul   edx,esi,0x50bd1c84
  44450a:	mov    eax,DWORD PTR [eax]
  44450c:	add    BYTE PTR [ecx+eax*1],0x0
  444510:	int3   
  444511:	push   es
  444512:	mov    esi,0xf75408e8
  444517:	(bad)  
  444518:	mov    ebx,0xf9e583b6
  44451d:	dec    esi
  44451e:	int3   
  44451f:	int3   
  444520:	mov    BYTE PTR [eax-0x34],dl
  444523:	int3   
  444524:	jno    0x44452e
  444526:	in     al,dx
  444527:	sub    eax,0xffffff82
  44452a:	dec    ebx
  44452b:	mov    ebx,DWORD PTR [ecx-0x75]
  44452e:	sub    ecx,ecx
  444530:	inc    edx
  444531:	les    esi,FWORD PTR [ecx]
  444533:	mov    BYTE PTR [eax*4+0x576b0000],bh
  44453a:	mov    bl,0x0
  44453c:	mov    WORD PTR [ebx-0x48f6f81d],ss
  444542:	sbb    al,0x0
  444544:	xlat   BYTE PTR ds:[ebx]
  444545:	int    0xec
  444547:	mov    ebp,esp
  444549:	test   BYTE PTR ds:0xaf8c4c00,0x14
  444550:	or     BYTE PTR es:[eax+0x937298],dh
  444557:	jb     0xc5856f03
  44455d:	shr    ah,1
  44455f:	mov    eax,DWORD PTR [eax]
	...
  444571:	add    BYTE PTR [eax],al
  444573:	add    ah,al
  444575:	pop    ds
  444576:	push   cs
  444577:	add    BYTE PTR [esp+edx*2],bl
  44457a:	dec    ebp
  44457b:	cld    
  44457c:	xchg   ecx,eax
  44457d:	cmp    eax,0x8c108507
  444582:	add    BYTE PTR [eax],al
  444584:	or     ebx,DWORD PTR [edx]
  444586:	jl     0x44453b
  444588:	push   ds
  444589:	and    eax,0x931c0010
  44458e:	and    edx,edi
  444590:	pop    ss
  444591:	xchg   ebp,eax
  444592:	jbe    0x4445e8
  444594:	or     ebx,DWORD PTR [edx]
  444596:	xor    al,0xb3
  444598:	mov    ch,0x86
  44459a:	jns    0x44456e
  44459c:	push   ebx
  44459d:	sbb    DWORD PTR [edx-0x7b],esp
  4445a0:	ins    DWORD PTR es:[edi],dx
  4445a1:	loopne 0x444589
  4445a3:	push   es
  4445a4:	inc    ebp
  4445a5:	push   ecx
  4445a6:	push   ss
  4445a7:	add    BYTE PTR [ebp+0xd98b6ed],dh
  4445ad:	mov    edi,0x192efffc
  4445b2:	adc    DWORD PTR [eax+0x406dd799],ecx
  4445b8:	leave  
  4445b9:	in     eax,dx
  4445ba:	mov    dh,0x98
  4445bc:	ins    BYTE PTR es:[edi],dx
  4445bd:	fdivp  st(4),st
  4445bf:	jmp    FWORD PTR [esi]
  4445c1:	and    BYTE PTR [ecx],dl
  4445c3:	test   DWORD PTR ds:0xa41c74e1,eax
  4445c9:	jno    0x44455f
  4445cb:	mov    esp,0xf8fce8a3
  4445d0:	cmc    
  4445d1:	aam    0x79
  4445d3:	pop    ebx
  4445d4:	lods   eax,DWORD PTR ds:[esi]
  4445d5:	aaa    
  4445d6:	adc    al,0x26
	...
  4445ec:	jg     0x4445f4
  4445ee:	push   edx
  4445ef:	jmp    0x5fdb:0xf02af438
  4445f6:	mov    ah,0xb8
  4445f8:	ret    
  4445f9:	call   0x6ea2afa
  4445fe:	jp     0x444614
  444600:	push   es
  444601:	push   cs
  444602:	push   edx
  444603:	(bad)  
  444605:	fisttp WORD PTR [eax+edi*4-0x303175d]
  44460c:	add    ebp,DWORD PTR [edi+0x75]
  44460f:	mov    esp,0x84fce8c3
  444614:	jo     0x44462a
  444616:	sub    cl,BYTE PTR [eax-0x341ab]
  44461c:	ret    0xba6a
  44461f:	clc    
  444620:	or     ah,BYTE PTR ds:0x8f3eb0fe
  444626:	in     eax,0x7
  444628:	mov    ch,0x8f
  44462a:	outs   dx,BYTE PTR ds:[esi]
  44462b:	jnp    0x44465e
  44462d:	jge    0x444616
  44462f:	add    esp,DWORD PTR [ebx]
  444631:	jg     0x44461a
  444633:	add    esi,DWORD PTR [ebp-0xcd16556]
  444639:	test   DWORD PTR [ecx+0x46],ebp
  44463c:	rcl    ebp,cl
  44463e:	out    0x2,al
  444640:	add    al,0x22
  444642:	out    0x7,eax
  444644:	mov    ch,0x8f
  444646:	leave  
  444647:	jle    0x444630
  444649:	ins    BYTE PTR es:[edi],dx
  44464a:	ss cmp BYTE PTR gs:[eax-0x21],cl
  44464f:	jmp    0x444654
	...
  444664:	mov    bl,0xff
  444666:	mov    ds,WORD PTR [ecx]
  444668:	mov    ch,0x8f
  44466a:	repnz mov ecx,0x3d1183d
  444670:	mov    ch,0x8
  444672:	xchg   edi,eax
  444673:	pop    ss
  444674:	cmp    eax,0xf572d874
  444679:	jnp    0x44466d
  44467b:	mov    ecx,0x3f1171d
  444680:	mov    ch,0x8
  444682:	lahf   
  444683:	pop    ss
  444684:	xor    BYTE PTR [eax-0x21],al
  444687:	jnp    0x44464a
  444689:	jle    0x4446f9
  44468b:	xchg   ebx,eax
  44468c:	sbb    DWORD PTR [esi-0x19],edi
  44468f:	add    ecx,DWORD PTR [eax+edx*2-0x25]
  444693:	mov    ah,0xa5
  444695:	test   eax,0xe671e91d
  44469a:	jae    0x44465c
  44469c:	sbb    bh,0x39
  44469f:	jnp    0x4446de
  4446a1:	adc    al,0xf9
  4446a3:	add    esi,DWORD PTR [ebp+0x5db4606d]
  4446a9:	jle    0x444692
  4446ab:	add    edi,DWORD PTR [edi+0x38]
  4446ae:	outs   dx,BYTE PTR ds:[esi]
  4446af:	outs   dx,BYTE PTR ds:[si]
  4446b1:	sar    bh,1
  4446b3:	in     eax,0x4c
  4446b5:	sbb    dh,al
  4446b7:	and    edi,ecx
  4446b9:	aam    0x9
  4446bb:	pop    esi
  4446bc:	sbb    eax,0xb6e5021b
  4446c1:	(bad)  
  4446c2:	mov    ch,0xf9
  4446c4:	mov    dh,0x8f
  4446c6:	add    dl,al
	...
  4446dc:	jo     0x4446ea
  4446de:	push   ebx
  4446df:	sbb    DWORD PTR [eax+0x40],0x5991c208
  4446e6:	pop    edi
  4446e7:	out    0xd,al
  4446e9:	cld    
  4446ea:	mov    ch,0xe5
  4446ec:	mov    edx,0xe270008f
  4446f1:	in     al,0x61
  4446f3:	cmp    bl,BYTE PTR [ebx]
  4446f5:	or     ecx,DWORD PTR [eax-0x1f]
  4446f8:	pushf  
  4446f9:	lea    edx,[eax+0x8fbf91]
  4446ff:	neg    BYTE PTR [edi+esi*8-0x49]
  444703:	xlat   BYTE PTR ds:[ebx]
  444704:	mov    dh,0x8f
  444706:	test   DWORD PTR [ecx-0x27e3f85e],ebx
  44470c:	add    eax,0x3cf61450
  444711:	div    DWORD PTR [esi-0x7a704909]
  444717:	mov    eax,ds:0xe1500ac2
  44471c:	fidiv  WORD PTR [ebx+0xf]
  44471f:	jb     0x444762
  444721:	adc    edx,DWORD PTR [edx]
  444723:	jmp    0xf99f51de
  444728:	lds    ecx,FWORD PTR [edi+0x14]
  44472b:	cmp    BYTE PTR [ecx-0x1fb03953],ch
  444731:	jmp    0xe354:0x8a12c84
  444738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444739:	or     al,0x90
  44473b:	lea    edi,[edi+ecx*4+0x0]
	...
  444752:	add    BYTE PTR [eax],al
  444754:	push   0x58
  444756:	cwde   
  444757:	mov    eax,0xeb008fea
  44475c:	out    0xe5,eax
  44475e:	adc    DWORD PTR [esi+eax*4+0xc00048c],0xffffffe6
  444766:	retf   
  444767:	loop   0x444723
  444769:	fmul   DWORD PTR [eax+0x8feab8]
  44476f:	add    eax,ecx
  444771:	arpl   WORD PTR [ecx+0x767088],ax
  444777:	add    BYTE PTR [edi-0x7c],al
  44477a:	mov    ch,0xa8
  44477c:	sahf   
  44477d:	retf   
  44477e:	clc    
  44477f:	mov    ch,BYTE PTR [ecx+0x5c5d815f]
  444785:	or     eax,0x749674d3
  44478a:	xor    al,0xbd
  44478c:	or     al,0x14
  44478e:	cmp    DWORD PTR [eax],eax
  444790:	pop    ss
  444791:	push   edi
  444792:	mov    esp,0xb78f8c16
  444797:	adc    BYTE PTR [edi+ecx*4-0x5c38d500],bl
  44479e:	(bad)  
  44479f:	jle    0x4447bd
  4447a1:	jmp    0x3c6f4629
  4447a6:	fisttp WORD PTR [ebx+0x95ed724]
  4447ac:	add    al,0x27
  4447ae:	push   cs
  4447af:	add    BYTE PTR [eax+edx*4-0x52],cl
  4447b3:	cwde   
  4447b4:	hlt    
  4447b5:	js     0x4447b7
	...
  4447cb:	add    bh,al
  4447cd:	out    0xc,al
  4447cf:	mov    BYTE PTR [eax-0x5a],ah
  4447d2:	test   DWORD PTR [eax+0x68],0x1598ae90
  4447d9:	jp     0x4447db
  4447db:	add    BYTE PTR [edi-0x4a74feed],ah
  4447e1:	inc    eax
  4447e2:	sbb    BYTE PTR [eax-0x678a4e3f],cl
  4447e8:	pop    ecx
  4447e9:	mov    bl,0xfc
  4447eb:	call   DWORD PTR [edx]
  4447ed:	test   eax,0x8ea5af18
  4447f2:	xor    eax,0x7512e662
  4447f7:	dec    ebx
  4447f8:	add    eax,0xe504c05c
  4447fd:	mov    bh,BYTE PTR [ebx-0x50]
  444800:	sub    eax,0xcefffcd3
  444805:	mov    ah,0xe2
  444807:	int3   
  444808:	rol    DWORD PTR [edx-0x44f25005],cl
  44480e:	cld    
  44480f:	push   DWORD PTR [esi+0x1887b2d]
  444815:	mov    ebx,0x5f6ffffc
  44481a:	xlat   BYTE PTR ds:[ebx]
  44481b:	sti    
  44481c:	xor    al,0x6e
  44481e:	add    al,0xff
  444820:	stos   BYTE PTR es:[edi],al
  444821:	call   0xfaf64f13
  444826:	lods   eax,DWORD PTR ds:[esi]
  444827:	lock in eax,dx
  444829:	sub    ch,bh
  44482b:	in     al,0xc1
  44482d:	pop    ebp
  44482e:	ss mov edi,0x0
	...
  444844:	pushf  
  444845:	loope  0x444840
  444847:	mov    cl,0x44
  444849:	cwde   
  44484a:	mov    ebx,0xbf5db53f
  44484f:	or     eax,edx
  444851:	cmp    eax,esi
  444853:	scas   al,BYTE PTR es:[edi]
  444854:	mov    bh,0x6d
  444856:	jl     0x444814
  444858:	retf   
  444859:	call   0xe909fd5a
  44485e:	cld    
  44485f:	call   FWORD PTR [esi+0x457b7b71]
  444865:	sbb    eax,0x6dd57a36
  44486a:	xlat   BYTE PTR ds:[ebx]
  44486b:	or     ebp,DWORD PTR [edx+0x632f9a8f]
  444871:	imul   ebp,DWORD PTR [esi+0x56],0x7ac4be97
  444878:	ins    DWORD PTR es:[edi],dx
  444879:	xchg   DWORD PTR [ecx-0x3],eax
  44487c:	sub    dl,BYTE PTR [edi]
  44487e:	fld    DWORD PTR [ebx]
  444880:	mov    ch,0x82
  444882:	jno    0x44480f
  444884:	dec    ebp
  444885:	jns    0x44486e
  444887:	add    edi,DWORD PTR [eax]
  444889:	aas    
  44488a:	sar    DWORD PTR [ebx-0x67],cl
  44488d:	and    BYTE PTR [edx+0x2f06c6c3],0x18
  444894:	mov    esp,0xc7ac6f19
  444899:	(bad)  
  44489a:	out    0x7a,eax
  44489c:	test   DWORD PTR [edi+0x6c20f6f],eax
  4448a2:	push   edi
  4448a3:	scas   eax,DWORD PTR es:[edi]
  4448a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4448a5:	(bad)  
  4448a6:	out    0x6e,eax
	...
  4448bc:	jne    0x444939
  4448be:	cmp    BYTE PTR [ebx],dl
  4448c0:	xchg   ebx,eax
  4448c1:	(bad)
  4448c4:	pushf  
  4448c5:	add    eax,0x3c3e73ac
  4448ca:	fnsave [ebx+0x3a]
  4448cd:	add    BYTE PTR [ebx+0x6e8fb515],cl
  4448d3:	fmul   DWORD PTR [esi+0x4dab706a]
  4448d9:	jp     0x4448c2
  4448db:	add    ebx,DWORD PTR [eax-0x512fa189]
  4448e1:	imul   ebp,DWORD PTR [esi+0xf],0x62366a20
  4448e8:	xlat   BYTE PTR ds:[ebx]
  4448e9:	xchg   BYTE PTR [edi-0x55],ch
  4448ec:	(bad)  
  4448ed:	(bad)  
  4448ee:	out    0x2,eax
  4448f0:	ins    BYTE PTR es:[edi],dx
  4448f1:	pop    es
  4448f2:	outs   dx,DWORD PTR ds:[esi]
  4448f3:	scas   eax,DWORD PTR es:[edi]
  4448f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4448f5:	(bad)  
  4448f6:	out    0x7a,eax
  4448f8:	mov    DWORD PTR [edx],ebx
  4448fa:	add    BYTE PTR [ecx+0x62009177],bh
  444900:	mov    DWORD PTR gs:[ebx-0x7ef2cf1a],eax
  444907:	fcomp  QWORD PTR [eax+0x6bfd24d6]
  44490d:	push   0xab1294c
  444912:	mov    BYTE PTR [ebp+0x7f008fab],al
  444918:	mov    eax,ds:0x9de9008f
  44491d:	fidiv  WORD PTR [edi+ebx*4]
	...
  444934:	clc    
  444935:	push   es
  444936:	push   edi
  444937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444938:	pusha  
  444939:	(bad)  
  44493a:	popa   
  44493b:	jb     0x4449a4
  44493d:	ins    DWORD PTR es:[edi],dx
  44493e:	int    0x8f
  444940:	pop    esp
  444941:	inc    edi
  444942:	or     BYTE PTR [edi],al
  444944:	fisub  WORD PTR [eax]
  444946:	mov    eax,0x98fb6df
  44494b:	aaa    
  44494c:	cmp    DWORD PTR [eax],ebx
  44494e:	adc    ch,cl
  444950:	mov    dh,0xa
  444952:	jo     0x444929
  444954:	ds jae 0x444986
  444957:	data16 jns 0x4449d6
  44495a:	or     DWORD PTR [edi-0x16ede7c7],edx
  444960:	mov    dh,0xa
  444962:	jo     0x444959
  444964:	sbb    eax,0xa5710848
  444969:	test   DWORD PTR [ebp+0x7d4561],eax
  44496f:	jmp    0x78589985
  444974:	mov    eax,ds:0x58fc5a9
  444979:	jmp    0xe912:0x17417061
  444980:	mov    dh,0x4
  444982:	push   esp
  444983:	shl    dh,cl
  444985:	or     bl,BYTE PTR [ebx+0x0]
  444988:	inc    esp
  444989:	push   ebp
  44498a:	nop
  44498b:	mov    esp,0xe9008c62
  444990:	pop    esi
  444991:	popa   
  444992:	idiv   edi
  444994:	xor    dl,BYTE PTR [edi-0x75]
	...
  4449ab:	add    BYTE PTR [eax],ah
  4449ad:	mov    WORD PTR [eax],es
  4449af:	outs   dx,WORD PTR ds:[esi]
  4449b1:	outs   dx,BYTE PTR ds:[esi]
  4449b2:	pop    esi
  4449b3:	or     DWORD PTR [esp-0x70f3fff2],ebx
  4449ba:	(bad)  
  4449bb:	pop    edi
  4449bc:	ficom  DWORD PTR [eax+ecx*4-0x44]
  4449c0:	loop   0x44494d
  4449c2:	add    BYTE PTR [ebx-0x69],bl
  4449c5:	imul   edx,DWORD PTR [ebp-0x3d],0xcccc9018
  4449cc:	sub    BYTE PTR [eax-0x6fe73334],dl
  4449d2:	int3   
  4449d3:	int3   
  4449d4:	xchg   bl,ah
  4449d6:	mov    eax,0xc09f3fff
  4449db:	lea    ecx,[edx-0x8]
  4449de:	(bad)  
  4449df:	(bad)  
  4449e0:	fcom   QWORD PTR [eax+0x41]
  4449e3:	add    BYTE PTR [edx+0x4e],al
  4449e6:	stc    
  4449e7:	jae    0x4449bb
  4449e9:	jmp    0xc6e08369
  4449ee:	ds inc eax
  4449f0:	pop    ds
  4449f1:	push   edx
  4449f2:	add    al,0xd1
  4449f4:	test   BYTE PTR [edi],0xf8
  4449f7:	pop    ds
  4449f8:	push   0x69
  4449fa:	pop    esi
  4449fb:	cmp    DWORD PTR [edx],0xfffffffb
  4449fe:	(bad)  
  4449ff:	call   FWORD PTR [ebx+edx*4+0x1072346d]
  444a06:	mov    dh,0xbc
  444a08:	mov    WORD PTR [ebx-0x56af0000],ss
  444a0e:	pop    esi
  444a0f:	add    DWORD PTR [eax],0x0
	...
  444a22:	add    BYTE PTR [eax],al
  444a24:	or     cl,BYTE PTR [ebx-0x474b0000]
  444a2a:	cld    
  444a2b:	jb     0x4449c2
  444a2d:	pusha  
  444a2e:	sbb    eax,0x79b8b500
  444a33:	mov    ah,BYTE PTR [ecx+0x25fffcb7]
  444a39:	pop    ds
  444a3a:	xor    BYTE PTR [edi],0xb5
  444a3d:	inc    ebx
  444a3e:	sti    
  444a3f:	aas    
  444a40:	ss clc 
  444a42:	(bad)  
  444a43:	cmp    dh,BYTE PTR [ebp-0x5e000349]
  444a49:	aad    0x30
  444a4b:	shl    dh,0x20
  444a4e:	add    eax,DWORD PTR [eax]
  444a50:	mov    ch,0xb8
  444a52:	inc    ecx
  444a53:	int3   
  444a54:	stc    
  444a55:	cld    
  444a56:	aaa    
  444a57:	int3   
  444a58:	icebp  
  444a59:	leave  
  444a5a:	cmp    al,0x52
  444a5c:	or     BYTE PTR cs:[ecx+0x3ec1b4e2],al
  444a63:	inc    esi
  444a64:	add    al,0x20
  444a66:	add    eax,eax
  444a68:	cmp    BYTE PTR [ebx],cl
  444a6a:	in     eax,0xef
  444a6c:	add    al,0x11
  444a6e:	(bad)  
  444a6f:	mov    esp,0xcc380501
  444a74:	stc    
  444a75:	cld    
  444a76:	aaa    
  444a77:	int3   
  444a78:	icebp  
  444a79:	xor    DWORD PTR [esp+edi*4-0x5d],edi
  444a7d:	mov    eax,0x2f364cfc
  444a82:	adc    al,0x73
  444a84:	loop   0x444a43
  444a86:	scas   al,BYTE PTR es:[edi]
  444a87:	cwde   
	...
  444a9c:	pop    ebp
  444a9d:	into   
  444a9e:	cld    
  444a9f:	jmp    FWORD PTR [esi]
  444aa1:	or     BYTE PTR [ecx],cl
  444aa3:	test   ebp,edi
  444aa5:	shl    BYTE PTR [esp+ebx*1-0x5c],0x8d
  444aaa:	les    edx,FWORD PTR [ebx]
  444aac:	mov    dl,0x4e
  444aae:	mov    WORD PTR [edi-0x7b03475d],?
  444ab4:	std    
  444ab5:	(bad)  
  444ab6:	sti    
  444ab7:	jle    0x444abe
  444ab9:	cwde   
  444aba:	outs   dx,DWORD PTR ds:[esi]
  444abb:	or     BYTE PTR [edx-0x77f05932],dh
  444ac1:	fadd   DWORD PTR [eax-0x26f8c284]
  444ac7:	add    esi,DWORD PTR [ebp-0x585790e8]
  444acd:	(bad)  
  444ace:	out    0xce,eax
  444ad0:	stc    
  444ad1:	adc    eax,esi
  444ad3:	sti    
  444ad4:	scas   al,BYTE PTR es:[edi]
  444ad5:	jbe    0x444b45
  444ad7:	shl    DWORD PTR [edx+0x3b102f1a],cl
  444add:	daa    
  444ade:	(bad)  
  444adf:	adc    DWORD PTR [ebp-0x44f8a071],esi
  444ae5:	sahf   
  444ae6:	jns    0x444a7b
  444ae8:	inc    edx
  444ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444aea:	out    0x3,eax
  444aec:	cld    
  444aed:	dec    esi
  444aee:	fild   DWORD PTR [esi+0x3d10b35]
  444af4:	mov    ch,0xc7
  444af6:	or     BYTE PTR [ebp+0x45],bh
  444af9:	pop    es
  444afa:	icebp  
  444afb:	add    esi,DWORD PTR [ebp+0x37a66a]
	...
  444b11:	add    BYTE PTR [eax],al
  444b13:	add    cl,ch
  444b15:	ficomp DWORD PTR [edx-0x4d24fec9]
  444b1b:	aaa    
  444b1c:	stc    
  444b1d:	fisubr DWORD PTR [edx+0x5ddaf137]
  444b23:	jnp    0x444b1e
  444b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444b26:	out    0x3,eax
  444b28:	add    BYTE PTR [ecx],dl
  444b2a:	pusha  
  444b2b:	sti    
  444b2c:	sub    al,0x72
  444b2e:	jmp    0xb503:0xf9083db1
  444b35:	sbb    BYTE PTR [edi-0x10a7c7f1],dh
  444b3b:	jnp    0x444ae6
  444b3d:	sahf   
  444b3e:	cmp    al,bl
  444b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444b41:	sbb    BYTE PTR [eax],al
  444b43:	mov    eax,ds:0xe15012aa
  444b48:	outs   dx,DWORD PTR ds:[esi]
  444b49:	call   DWORD PTR [edi+0x8fc460]
  444b4f:	adc    al,dh
  444b51:	adc    bh,al
  444b53:	xchg   edi,eax
  444b54:	rcl    BYTE PTR [edx],0x48
  444b57:	loope  0x444b2c
  444b59:	pop    edi
  444b5a:	adc    al,0x73
  444b5c:	or     BYTE PTR ds:[edx],dl
  444b5f:	jmp    0xd860631a
  444b64:	iret   
  444b65:	dec    edi
  444b66:	adc    al,0xba
  444b68:	icebp  
  444b69:	xor    DWORD PTR [edi+0xa25971],eax
  444b6f:	jmp    0x6313
  444b74:	mov    dh,0x8f
  444b76:	push   ebp
  444b77:	stos   BYTE PTR es:[edi],al
	...
  444b8c:	int    0xdb
  444b8e:	retf   
  444b8f:	mov    ch,0xcd
  444b91:	fcmovne st,st(3)
  444b93:	lods   eax,DWORD PTR ds:[esi]
  444b94:	mov    ebp,0x781ccbdb
  444b99:	mov    ebx,0xe470174c
  444b9e:	test   BYTE PTR [ebx-0x6106e277],bl
  444ba4:	dec    esp
  444ba5:	dec    edx
  444ba6:	jnp    0x444b89
  444ba8:	mov    dh,0x43
  444baa:	bound  edx,QWORD PTR ds:[ecx]
  444bad:	mov    eax,ds:0x14c91985
  444bb2:	sbb    al,0xd8
  444bb4:	dec    ebp
  444bb5:	dec    edi
  444bb6:	adc    al,0x62
  444bb8:	loope  0x444b4e
  444bba:	push   ecx
  444bbb:	bound  esp,QWORD PTR [ecx-0x9cd7a60]
  444bc1:	mov    ah,0x7
  444bc3:	jno    0x444b62
  444bc5:	lahf   
  444bc6:	stc    
  444bc7:	test   eax,0xf57812aa
  444bcc:	adc    DWORD PTR [eax+0x8],esp
  444bcf:	add    BYTE PTR [esi],al
  444bd1:	mov    ebp,esi
  444bd3:	rol    DWORD PTR [eax+ecx*8],1
  444bd6:	ud0    ecx,DWORD PTR [esp+ebx*4-0x7d]
  444bdb:	js     0x444b65
  444bdd:	dec    ebx
  444bde:	push   eax
  444bdf:	or     bh,ah
  444be1:	mov    ch,bh
  444be3:	ror    DWORD PTR [ebp+0x50880868],1
  444be9:	lahf   
  444bea:	test   DWORD PTR [eax+0x48],0xdb7dd7
	...
  444c01:	add    BYTE PTR [eax],al
  444c03:	add    al,cl
  444c05:	jo     0x444b8c
  444c07:	fwait
  444c08:	dec    esp
  444c09:	nop
  444c0a:	add    BYTE PTR [eax],al
  444c0c:	xlat   BYTE PTR ds:[ebx]
  444c0d:	or     ecx,DWORD PTR ds:0x43c84c8b
  444c13:	mov    DWORD PTR [ecx-0x35],esi
  444c16:	sbb    BYTE PTR [esi],0xa4
  444c19:	xchg   esp,eax
  444c1a:	or     DWORD PTR [ebx+0x40f7cbe1],ecx
  444c20:	or     dh,cl
  444c22:	jge    0x444bff
  444c24:	leave  
  444c25:	xor    DWORD PTR [esi+0x5b],edx
  444c28:	mov    eax,ds:0x99cccc52
  444c2d:	dec    edx
  444c2e:	in     al,dx
  444c2f:	xor    DWORD PTR [eax],0x70
  444c32:	dec    esi
  444c33:	(bad)  
  444c34:	leave  
  444c35:	xor    eax,0x9154c92b
  444c3a:	add    BYTE PTR [eax],al
  444c3c:	int3   
  444c3d:	stos   BYTE PTR es:[edi],al
  444c3e:	into   
  444c3f:	(bad)  
  444c40:	call   0xc8cfab16
  444c45:	jl     0x444c27
  444c47:	iretw  
  444c49:	inc    eax
  444c4a:	pop    esi
  444c4b:	add    edi,DWORD PTR [edx]
  444c4d:	(bad)  
  444c4e:	scas   eax,DWORD PTR es:[edi]
  444c4f:	into   
  444c50:	mov    edx,0xfc454c46
  444c55:	into   
  444c56:	jnp    0x444c50
  444c58:	xchg   ebx,eax
  444c59:	mov    ecx,0x6ab533dc
  444c5e:	jp     0x444c35
  444c60:	or     eax,0xe1b0f795
  444c65:	dec    ecx
  444c66:	add    eax,DWORD PTR [ebx+0x0]
	...
  444c7c:	addr16 add eax,0xfd42090f
  444c82:	leave  
  444c83:	fistp  QWORD PTR [esi]
  444c85:	jno    0x444c44
  444c87:	popa   
  444c88:	cmp    al,0xfd
  444c8a:	leave  
  444c8b:	fisttp WORD PTR [ebp-0x17]
  444c8e:	data16 stc 
  444c90:	pop    edx
  444c91:	sbb    esi,DWORD PTR [esi+0x4]
  444c94:	or     dh,bl
  444c96:	sub    ebp,ebp
  444c98:	retf   
  444c99:	je     0x444c62
  444c9b:	test   BYTE PTR [eax+0x2c],bl
  444c9e:	inc    esp
  444c9f:	int3   
  444ca0:	imul   ebp,DWORD PTR [esp+edi*2],0xf5cd36ec
  444ca7:	test   BYTE PTR [eax-0x40],dh
  444caa:	int    0x50
  444cac:	cs jno 0x444d24
  444caf:	inc    eax
  444cb0:	lods   eax,DWORD PTR ds:[esi]
  444cb1:	sub    eax,0xc13e0bd4
  444cb6:	jge    0x444c7f
  444cb8:	or     al,dh
  444cba:	cmp    al,0x87
  444cbc:	push   0xf94b7ad0
  444cc1:	stc    
  444cc2:	jns    0x444d14
  444cc4:	leave  
  444cc5:	mov    eax,0xb8b5fffc
  444cca:	cld    
  444ccb:	sar    BYTE PTR [ebx],0x85
  444cce:	adc    BYTE PTR [eax],al
  444cd0:	mov    ch,0xe3
  444cd2:	(bad)  
  444cd3:	push   DWORD PTR [ebp-0x7c85b1cd]
  444cd9:	call   0x1de8:0xb93a3c7d
	...
  444cf4:	mov    edx,0xb513d43a
  444cf9:	mov    eax,0x90059275
  444cfe:	sti    
  444cff:	add    esi,DWORD PTR [ebp-0x6719ce8]
  444d05:	xchg   esi,eax
  444d06:	out    0x3,eax
  444d08:	cmp    dl,BYTE PTR [ebx+ecx*2+0x3e]
  444d0c:	xor    DWORD PTR [edi-0x61],edi
  444d0f:	lgs    ecx,FWORD PTR [edi-0x49928519]
  444d16:	jmp    0x6075d04d
  444d1b:	shl    BYTE PTR ds:0xf62aa78d,1
  444d21:	(bad)  
  444d22:	call   0xb50f:0xb709d839
  444d29:	(bad)  
  444d2a:	in     eax,0xe8
  444d2c:	sti    
  444d2d:	push   cs
  444d2e:	add    BYTE PTR [edx],al
  444d30:	mov    esi,0xfa7aa894
  444d35:	mov    ch,0xe4
  444d37:	xor    dh,ch
  444d39:	leave  
  444d3a:	pusha  
  444d3b:	aam    0xc6
  444d3d:	(bad)  
  444d3e:	out    0x7a,eax
  444d40:	inc    edi
  444d41:	pop    edi
  444d42:	repz add esi,DWORD PTR [ebp+0x718d6b18]
  444d49:	xchg   esi,eax
  444d4a:	out    0x3,eax
  444d4c:	inc    ebx
  444d4d:	nop
  444d4e:	out    0x3,eax
  444d50:	mov    ch,0x31
  444d52:	jo     0x444d63
  444d54:	xor    al,0xd1
  444d56:	push   0xfffffffd
	...
  444d6c:	mov    ah,BYTE PTR [ebx-0x354afc19]
  444d72:	jo     0x444d0f
  444d74:	(bad)  
  444d75:	(bad)  
  444d76:	out    0x80,eax
  444d78:	add    BYTE PTR [ebx-0x22],al
  444d7b:	test   BYTE PTR ds:0x92016653,0x11
  444d82:	push   ebx
  444d83:	or     eax,0xa5668fb5
  444d88:	mov    gs:0xc9b6e900,eax
  444d8e:	je     0x444dcb
  444d90:	sub    DWORD PTR [ebp-0x4],edx
  444d93:	jb     0x444d1a
  444d95:	xchg   ecx,eax
  444d96:	xchg   DWORD PTR [ebx-0x467deb66],esi
  444d9c:	ret    0x8f
  444d9f:	jo     0x444d50
  444da1:	or     DWORD PTR [ebp+0x7cc2e921],eax
  444da7:	inc    edx
  444da8:	mov    cl,0x4b
  444daa:	setp   bh
  444dad:	int    0xe7
  444daf:	xchg   ecx,eax
  444db0:	or     eax,0x37b2f8c7
  444db5:	aam    0x3
  444db7:	push   0xffffffcf
  444db9:	enter  0x67b,0xcf
  444dbd:	dec    esp
  444dbe:	clc    
  444dbf:	pusha  
  444dc0:	jne    0x444d83
  444dc2:	in     al,0xee
  444dc4:	mov    ebp,0xb6e923f3
  444dc9:	pop    DWORD PTR [eax]
  444dcb:	bound  esi,QWORD PTR [eax+0xe9145f]
	...
  444de1:	add    BYTE PTR [eax],al
  444de3:	add    BYTE PTR [esi-0x129073ee],dh
  444de9:	xchg   ebx,eax
  444dea:	add    cl,ch
  444dec:	popf   
  444ded:	and    eax,0x8fb6e260
  444df2:	dec    eax
  444df3:	pusha  
  444df4:	mov    ebx,DWORD PTR [edi+0x14]
  444df7:	jmp    0x72437fb2
  444dfc:	mov    ebx,0xec498a10
  444e01:	enter  0xc1f8,0xb8
  444e05:	mov    ah,0xf8
  444e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444e08:	pop    esp
  444e09:	or     eax,0x8fb6f260
  444e0e:	jge    0x444db3
  444e10:	pop    eax
  444e11:	enter  0x3592,0xa5
  444e15:	pop    DWORD PTR [eax]
  444e17:	add    BYTE PTR [edi+0x41],al
  444e1a:	push   esp
  444e1b:	adc    al,0xcc
  444e1d:	mov    WORD PTR [ecx+0x3d81a9c],es
  444e23:	add    BYTE PTR [ebp+ecx*4-0x735fab72],bl
  444e2a:	add    BYTE PTR [ebx+0xce00a],cl
  444e30:	pushf  
  444e31:	inc    ebp
  444e32:	test   BYTE PTR [esi-0x738a8],cl
  444e38:	jb     0x444e81
  444e3a:	adc    al,0x87
  444e3c:	jb     0x444dcd
  444e3e:	adc    al,0x9f
  444e40:	xlat   BYTE PTR ds:[ebx]
  444e41:	add    cl,dh
  444e43:	data16 aad 0x9f
  444e46:	xchg   DWORD PTR [edx+0x0],ecx
	...
  444e5c:	loopne 0x444def
  444e5e:	pop    eax
  444e5f:	adc    al,0x4c
  444e61:	mov    WORD PTR [edx+0xcd4628c],es
  444e67:	add    BYTE PTR [edi+ecx*1-0x3c],bl
  444e6b:	add    al,0x76
  444e6d:	pop    ebp
  444e6e:	pop    es
  444e6f:	mov    dh,0x9e
  444e71:	mov    esi,0x5cf20efb
  444e76:	or     DWORD PTR [ebp+0x24],0x32
  444e7a:	mov    edx,0x50c2a088
  444e7f:	adc    al,0xc
  444e81:	mov    WORD PTR [edi],es
  444e83:	mov    bh,0x4d
  444e85:	jmp    0x895e:0x8e935481
  444e8c:	mov    al,ds:0x8a88fa12
  444e91:	lods   al,BYTE PTR ds:[esi]
  444e92:	add    eax,DWORD PTR [eax]
  444e94:	fmul   st(4),st
  444e96:	bound  eax,QWORD PTR [ecx]
  444e98:	push   edi
  444e99:	mov    al,BYTE PTR [ecx-0x759bebb3]
  444e9f:	in     al,dx
  444ea0:	cmp    esi,DWORD PTR [ebx]
  444ea2:	jnp    0x444e68
  444ea4:	mov    ch,0xba
  444ea6:	jg     0x444e62
  444ea8:	gs ret 0xfffc
  444eac:	mov    bh,0xc1
  444eae:	jno    0x444eee
  444eb0:	mov    edx,0x43f96448
  444eb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444eb6:	adc    BYTE PTR [eax],al
  444eb8:	mov    ch,0x31
  444eba:	jnp    0x444f10
  444ebc:	leave  
  444ebd:	mov    eax,0x84fc
	...
  444ed2:	add    BYTE PTR [eax],al
  444ed4:	inc    ebx
  444ed5:	fincstp 
  444ed7:	call   DWORD PTR [edx+0x3c07b232]
  444edd:	cmp    eax,0xb8ae5c7b
  444ee2:	cld    
  444ee3:	test   BYTE PTR [ebx+0x61],dh
  444ee6:	and    al,0xeb
  444ee8:	jb     0x444f68
  444eea:	js     0x444f47
  444eec:	imul   esp,DWORD PTR [ebx+ecx*4+0x3c],0xe7fcb8ae
  444ef4:	and    al,0xa4
  444ef6:	fs stc 
  444ef8:	repnz add DWORD PTR [eax-0x1d],edi
  444efc:	call   0x7210807a
  444f01:	jge    0x444f34
  444f03:	int3   
  444f04:	imul   esi,DWORD PTR [ebp+0x31],0x782701cc
  444f0b:	lock ds das 
  444f0e:	add    DWORD PTR ds:0x8a8fb8b5,eax
  444f14:	inc    ecx
  444f15:	mov    ecx,0xd06bfffc
  444f1a:	or     cl,ch
  444f1c:	or     dl,dh
  444f1e:	mov    BYTE PTR [edx-0x33e33],al
  444f24:	sub    BYTE PTR [edi],dh
  444f26:	mov    WORD PTR [edi],es
  444f28:	mov    ch,0xb8
  444f2a:	mov    dh,0xe7
  444f2c:	in     al,dx
  444f2d:	push   es
  444f2e:	pop    ebp
  444f2f:	stc    
  444f30:	xor    BYTE PTR [eax-0x704feb97],dl
  444f36:	out    0xb3,eax
	...
  444f4c:	fcmovbe st,st(4)
  444f4e:	xchg   ebx,eax
  444f4f:	arpl   sp,cx
  444f51:	adc    ah,BYTE PTR [ebx-0x185e02f0]
  444f57:	add    esi,DWORD PTR [ebp-0x56f1a46]
  444f5d:	(bad)  
  444f5e:	loop   0x444ef9
  444f60:	cmp    eax,0xa2c426a3
  444f65:	sub    al,0x66
  444f67:	mov    al,ds:0x3ed452f
  444f6c:	mov    ch,0x8f
  444f6e:	fsub   st(4),st
  444f70:	mov    ebp,0xc1ff76fd
  444f75:	dec    edi
  444f76:	out    0xe9,eax
  444f78:	stc    
  444f79:	add    edx,DWORD PTR [ecx-0x1e]
  444f7c:	mov    eax,0xe603e78f
  444f81:	xchg   edx,ebx
  444f83:	cdq    
  444f84:	sub    eax,0x5ac3a6a9
  444f89:	sub    al,0x66
  444f8b:	mov    al,ds:0x3dd453f
  444f90:	mov    ch,0x8f
  444f92:	xchg   esp,eax
  444f93:	push   ss
  444f94:	lods   al,BYTE PTR ds:[esi]
  444f95:	std    
  444f96:	push   esi
  444f97:	std    
  444f98:	jns    0x444fe9
  444f9a:	out    0xe9,eax
  444f9c:	mov    cl,0x3
  444f9e:	pop    ecx
  444f9f:	loop   0x444f51
  444fa1:	(bad)  
  444fa2:	out    0x3,eax
  444fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444fa5:	jg     0x44500d
  444fa7:	imul   esi,DWORD PTR [ecx-0x71f920ee],0xffffffff
  444fae:	arpl   di,cx
	...
  444fc4:	retf   0xe8a0
  444fc7:	xchg   ecx,eax
  444fc8:	dec    ebp
  444fc9:	popf   
  444fca:	out    0x3,eax
  444fcc:	pop    edi
  444fcd:	shr    BYTE PTR [esi],cl
  444fcf:	xchg   ecx,eax
  444fd0:	or     DWORD PTR [edi+0x0],0xa819b1d8
  444fd7:	xlat   BYTE PTR ds:[ebx]
  444fd8:	mov    dh,0x8f
  444fda:	pop    edx
  444fdb:	stos   BYTE PTR es:[edi],al
  444fdc:	xor    esi,DWORD PTR [edi-0x79fd9403]
  444fe2:	psubsb mm4,QWORD PTR [edi+esi*8]
  444fe6:	adc    ecx,ebp
  444fe8:	mov    dh,0x69
  444fea:	mov    ebp,0x8bc44e6a
  444fef:	sub    eax,0x66ff9679
  444ff4:	pop    esi
  444ff5:	mov    ds:0x474e900,al
  444ffa:	int3   
  444ffb:	xor    eax,0x2dcbd3ea
  445000:	add    dl,ah
  445002:	retf   
  445003:	mov    esp,0xa484b43b
  445008:	scas   al,BYTE PTR es:[edi]
  445009:	or     cl,BYTE PTR [eax-0x73a837b]
  44500f:	push   0x11
  445011:	cdq    
  445012:	jp     0x444fd4
  445014:	and    ebx,DWORD PTR [edi-0x7b]
  445017:	mov    ah,0x6a
  445019:	das    
  44501a:	test   DWORD PTR [edi],edi
  44501c:	dec    esp
  44501d:	aam    0xdd
  44501f:	jb     0x44509f
  445021:	lea    esp,[edx-0x20]
  445024:	mov    BYTE PTR [edi],0x12
  445027:	jmp    0x44502c
	...
  44503c:	mov    dh,0x96
  44503e:	mov    dl,0x61
  445040:	push   ds
  445041:	mov    ds:0x6043e900,al
  445046:	adc    al,0x61
  445048:	sub    dl,BYTE PTR [esi-0x361c8f7]
  44504e:	adc    ecx,ebp
  445050:	mov    dh,0xc6
  445052:	aas    
  445053:	cmc    
  445054:	inc    ecx
  445055:	pop    eax
  445056:	adc    al,0x62
  445058:	inc    ecx
  445059:	lea    ecx,[eax-0x6ff3f813]
  44505f:	add    BYTE PTR [eax],dh
  445061:	retf   0xfff8
  445064:	xor    ecx,esp
  445066:	or     al,0xb1
  445068:	or     al,0x73
  44506a:	ret    0x3f66
  44506d:	inc    edx
  44506e:	or     DWORD PTR [ebp-0x24],0xb
  445072:	mov    edx,0xbc3b45f3
  445077:	push   ss
  445078:	fcom   QWORD PTR [eax-0x491faa7d]
  44507e:	xor    DWORD PTR [eax-0x7368c],0x16302d2
  445088:	xor    al,0x82
  44508a:	repz call DWORD PTR [ebx]
  44508d:	or     eax,esp
  44508f:	add    al,0x71
  445091:	dec    ebx
  445092:	pop    esi
  445093:	mov    ecx,DWORD PTR [ecx-0x44]
  445096:	pop    esi
  445097:	sar    esi,cl
  445099:	or     bh,BYTE PTR [ecx-0x43ebeafd]
  44509f:	push   ss
	...
  4450b4:	mov    WORD PTR [eax-0x4973b27d],ss
  4450ba:	add    DWORD PTR [eax-0x7361c],edx
  4450c0:	xlat   BYTE PTR ds:[ebx]
  4450c1:	cld    
  4450c2:	add    al,0x6a
  4450c4:	dec    ebp
  4450c5:	cmp    BYTE PTR [edx+0x7b2eb3fb],ch
  4450cb:	les    ebx,FWORD PTR [eax+0x5]
  4450ce:	mov    esp,0xcc5fa0cc
  4450d3:	int3   
  4450d4:	sbb    BYTE PTR [edi-0x34],0xcc
  4450d8:	loopne 0x445139
  4450da:	int3   
  4450db:	int3   
  4450dc:	dec    ecx
  4450dd:	adc    ebp,esp
  4450df:	mov    ebx,DWORD PTR [ecx-0x68]
  4450e2:	push   ebp
  4450e3:	jmp    0x3bb320
  4450e8:	pusha  
  4450e9:	push   esp
  4450ea:	int3   
  4450eb:	int3   
  4450ec:	mov    ch,0x83
  4450ee:	mov    ebp,esp
  4450f0:	mov    DWORD PTR fs:[ebx-0x745b5aa5],ecx
  4450f7:	jae    0x4450b6
  4450f9:	cmp    DWORD PTR [edi-0x3494a7c],ebx
  4450ff:	dec    DWORD PTR [edx-0x4a043e13]
  445105:	mov    dh,0xfc
  445107:	call   DWORD PTR [ebx-0x77]
  44510a:	mov    edi,DWORD PTR [edx]
  44510c:	ss popf 
  44510e:	xor    dh,bh
  445110:	dec    ecx
  445111:	scas   al,BYTE PTR es:[edi]
  445112:	fs repnz mov esp,0x87600c
	...
  445129:	add    BYTE PTR [eax],al
  44512b:	add    dl,bh
  44512d:	aam    0x89
  44512f:	or     ch,0xad
  445132:	cld    
  445133:	inc    DWORD PTR ds:0x9afc1811
  445139:	sub    cl,BYTE PTR [edx-0x3422676]
  44513f:	jmp    esp
  445141:	push   eax
  445142:	sub    al,0xfc
  445144:	adc    BYTE PTR [edx-0x7c],0xc4
  445148:	lods   eax,DWORD PTR ds:[esi]
  445149:	cmp    eax,0x8294e847
  44514e:	pusha  
  44514f:	stc    
  445150:	arpl   WORD PTR ds:[ebp-0x74474aee],sp
  445157:	mov    cl,BYTE PTR [ecx]
  445159:	ret    
  44515a:	cld    
  44515b:	push   DWORD PTR [esi]
  44515d:	ja     0x44516a
  44515f:	jge    0x4451d5
  445161:	scas   eax,DWORD PTR es:[edi]
  445162:	cmp    eax,0x6677b6e6
  445167:	std    
  445168:	sub    eax,0xff3558f4
  44516d:	cmp    DWORD PTR [eax],ecx
  44516f:	in     eax,0xb6
  445171:	sub    ecx,esp
  445173:	add    ch,BYTE PTR [esi]
  445175:	test   al,0x8a
  445177:	cmp    eax,0x421e8fb1
  44517c:	test   BYTE PTR [esi+0xcbec96e],ah
  445182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445183:	fsub   DWORD PTR [esi+0x65f84c16]
  445189:	pop    esi
  44518a:	pop    ss
  44518b:	mov    dh,0xda
  44518d:	add    BYTE PTR [ecx+0x5f],bh
	...
  4451a3:	add    ah,ch
  4451a5:	push   cs
  4451a6:	stos   DWORD PTR es:[edi],eax
  4451a7:	hlt    
  4451a8:	fist   DWORD PTR [ebx-0x18]
  4451ab:	add    esi,DWORD PTR [ebp-0x4a739ef2]
  4451b1:	(bad)  
  4451b2:	out    0x7,eax
  4451b4:	mov    esp,0xb5045c0b
  4451b9:	(bad)  
  4451ba:	into   
  4451bb:	dec    ecx
  4451bc:	lods   al,BYTE PTR ds:[esi]
  4451bd:	or     edx,DWORD PTR [esp+eax*1-0x4b]
  4451c1:	(bad)  
  4451c2:	outs   dx,BYTE PTR ds:[esi]
  4451c3:	mov    gs,WORD PTR [ecx-0x67]
  4451c6:	out    0x3,eax
  4451c8:	cmp    BYTE PTR [ebx+edx*8-0x70],al
  4451cc:	add    al,0x8c
  4451ce:	pop    bp
  4451d0:	mov    esi,0x31e5b541
  4451d5:	int    0xc8
  4451d7:	xor    dl,BYTE PTR [ebp+0x14f79916]
  4451dd:	cdq    
  4451de:	imul   ebx,DWORD PTR [edi+eax*8+0x270ee78f],0x62f66f21
  4451e9:	ret    0xc65d
  4451ec:	mov    dl,0x17
  4451ee:	add    eax,DWORD PTR ds:0xef3494c
  4451f4:	pop    es
  4451f5:	and    DWORD PTR [eax-0xa],edx
  4451f8:	inc    edx
  4451f9:	ret    0xc65d
  4451fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4451fd:	push   ss
  4451fe:	mov    cl,0xb
  445200:	cmp    eax,0x378aefa3
  445205:	add    eax,DWORD PTR [eax]
  445207:	fild   WORD PTR [eax]
	...
  445219:	add    BYTE PTR [eax],al
  44521b:	add    BYTE PTR [esi+0x22a7f98f],dh
  445221:	icebp  
  445222:	movlps QWORD PTR [ecx+0x37d3cd2d],xmm0
  445229:	iret   
  44522a:	in     al,dx
  44522b:	pusha  
  44522c:	cmp    BYTE PTR [ebx],al
  44522e:	adc    ch,cl
  445230:	mov    dh,0x2d
  445232:	xchg   DWORD PTR [edi+0x4e],ebx
  445235:	popf   
  445236:	add    cl,ch
  445238:	pop    edi
  445239:	xchg   esp,eax
  44523a:	bound  ebx,QWORD PTR [edx+0x57072d54]
  445240:	ds popf 
  445242:	add    cl,ch
  445244:	aaa    
  445245:	add    bh,ch
  445247:	outs   dx,DWORD PTR ds:[esi]
  445248:	cmp    BYTE PTR [ebx],al
  44524a:	adc    ch,cl
  44524c:	mov    dh,0xc
  44524e:	inc    ebx
  44524f:	lea    ebp,[edi]
  445251:	adc    eax,0x8fb6f228
  445256:	test   DWORD PTR [edi-0x56],edx
  445259:	mov    WORD PTR [eax],es
  44525b:	jmp    0x1883a3d6
  445260:	ja     0x4452b5
  445262:	call   0xf90b3704
  445267:	ins    BYTE PTR es:[edi],dx
  445268:	xor    BYTE PTR [eax],bl
  44526a:	pop    es
  44526b:	jmp    0x5fcfb226
  445270:	add    dl,BYTE PTR [eax+0xc29e900]
  445276:	ret    0xdb51
  445279:	mov    ebx,0xcc3736f8
  44527e:	adc    eax,DWORD PTR [eax+0x0]
	...
  445291:	add    BYTE PTR [eax],al
  445293:	add    BYTE PTR [eax+edx*4],ch
  445296:	add    cl,ch
  445298:	aas    
  445299:	push   ss
  44529a:	mov    esp,0x858fb6f7
  44529f:	xchg   esp,eax
  4452a0:	dec    edx
  4452a1:	push   ss
  4452a2:	inc    ecx
  4452a3:	jmp    0x4452dc
  4452a5:	mov    ecx,0xff3a000a
  4452aa:	pop    esi
  4452ab:	mov    ecx,esp
  4452ad:	stos   BYTE PTR es:[edi],al
  4452ae:	retf   
  4452af:	loop   0x445248
  4452b1:	ror    BYTE PTR [esi+eiz*2],cl
  4452b4:	adc    eax,0x1c16b83b
  4452b9:	lea    eax,[edi]
  4452bb:	mov    dh,0x8a
  4452bd:	and    ecx,DWORD PTR [esi]
  4452bf:	add    BYTE PTR [eax+ebx*1],cl
  4452c2:	dec    esi
  4452c3:	or     BYTE PTR [edi+ecx*4-0x385d00f7],dl
  4452ca:	pop    es
  4452cb:	mov    dh,0x8a
  4452cd:	and    al,0xe
  4452cf:	add    ah,cl
  4452d1:	pop    ss
  4452d2:	inc    esi
  4452d3:	adc    al,0x57
  4452d5:	stc    
  4452d6:	add    BYTE PTR [eax-0x697c4348],cl
  4452dc:	push   0x2bfff8b9
  4452e1:	retf   0xb10c
  4452e4:	mov    esp,0x4f66c276
  4452e9:	xor    edi,DWORD PTR [ebx-0x3e]
  4452ec:	das    
  4452ed:	adc    eax,0x8c82bc8e
  4452f2:	add    BYTE PTR [esi+0x15],ah
  4452f5:	or     bh,BYTE PTR [eax+0x16]
	...
  44530b:	add    BYTE PTR [esp+ecx*4+0x7f7213e3],bl
  445312:	loopne 0x44537a
  445314:	xchg   ebp,eax
  445315:	or     bh,BYTE PTR [eax+0x7b8c8c16]
  44531b:	rcr    DWORD PTR [edi+0x15],0x86
  44531f:	mov    esp,0x68008c82
  445324:	and    al,0xd4
  445326:	cmp    BYTE PTR [eax],al
  445328:	je     0x44538e
  44532a:	cmp    eax,DWORD PTR [eax+0x5c]
  44532d:	pop    ss
  44532e:	mov    esi,0xf7583ce8
  445333:	push   DWORD PTR [ebp+0x2e084835]
  445339:	js     0x4453a7
  44533b:	inc    edx
  44533c:	sbb    eax,0x2a835b89
  445341:	cmp    al,BYTE PTR [eax*4-0x8e87205]
  445348:	sbb    dh,BYTE PTR [ecx+0x3d6e59bb]
  44534e:	bound  ebx,QWORD PTR [ebx-0xa]
  445351:	icebp  
  445352:	dec    eax
  445353:	int3   
  445354:	icebp  
  445355:	add    BYTE PTR [edi+0xca32eec],0x4d
  44535c:	ds imul esi,esp,0x50
  445360:	ds iret 
  445362:	cmp    eax,0x5e37c5e9
  445367:	stc    
  445368:	fidiv  DWORD PTR [ebp-0x49318304]
  44536e:	shr    DWORD PTR [eax+eax*1],1
	...
  445381:	add    BYTE PTR [eax],al
  445383:	add    BYTE PTR [esi],bh
  445385:	imul   edx,DWORD PTR [eax],0x9
  445388:	or     eax,esi
  44538a:	inc    ebp
  44538c:	xor    al,0x1f
  44538e:	dec    esi
  44538f:	stc    
  445390:	mov    ch,0xa8
  445392:	into   
  445393:	add    DWORD PTR [eax+eiz*1],esi
  445396:	dec    esi
  445397:	stc    
  445398:	mov    ch,0xa8
  44539a:	push   esi
  44539c:	xor    al,0x2e
  44539e:	dec    esi
  44539f:	stc    
  4453a0:	mov    ch,0xa8
  4453a2:	into   
  4453a3:	add    DWORD PTR [esi+ecx*2],esi
  4453a6:	dec    esi
  4453a7:	stc    
  4453a8:	mov    ch,0xa8
  4453aa:	xchg   ecx,eax
  4453ac:	je     0x4453f7
  4453ae:	in     eax,dx
  4453af:	pop    eax
  4453b0:	mov    esi,0x775ab867
  4453b5:	lods   eax,DWORD PTR ds:[esi]
  4453b6:	cld    
  4453b7:	push   ecx
  4453b8:	cs cld 
  4453ba:	or     BYTE PTR [ebx-0x74f8fb9d],al
  4453c0:	sti    
  4453c1:	(bad)
  4453c5:	pop    edx
  4453c6:	mov    esp,0x668fb141
  4453cb:	pop    eax
  4453cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4453cd:	inc    edx
  4453ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4453cf:	xchg   BYTE PTR [eax],cl
  4453d1:	inc    esp
  4453d2:	aad    0x8e
  4453d4:	push   ecx
  4453d5:	je     0x4453be
  4453d7:	add    esi,DWORD PTR [ebp-0x486a1d71]
  4453dd:	xchg   edx,eax
  4453de:	pop    ds
  4453df:	lds    edx,FWORD PTR [ecx]
  4453e1:	mov    eax,0x1107d12d
  4453e6:	loopne 0x44543d
	...
  4453fc:	cld    
  4453fd:	(bad)  
  4453fe:	out    0xd5,eax
  445400:	mov    ah,0x10
  445402:	rcl    BYTE PTR [ebp-0x14],0x8f
  445406:	out    0x9b,eax
  445408:	pop    edx
  445409:	psrad  mm0,QWORD PTR [ebx+0x6ea7b6e4]
  445410:	lods   al,BYTE PTR ds:[esi]
  445411:	or     ah,BYTE PTR [ebp-0x316c2abb]
  445417:	inc    ebp
  445418:	enter  0x38d5,0x45
  44541c:	aad    0x9f
  44541e:	xor    cl,BYTE PTR [edi]
  445420:	cli    
  445421:	pop    edx
  445422:	sub    al,0x46
  445424:	ror    DWORD PTR [edi-0x5b9aa098],0xe7
  44542b:	add    ebp,DWORD PTR [ecx+edx*1-0x704afb6b]
  445432:	das    
  445433:	stos   DWORD PTR es:[edi],eax
  445434:	pop    edx
  445435:	sub    eax,0xd06852c1
  44543a:	dec    esp
  44543b:	(bad)  
  44543e:	jecxz  0x4453c4
  445440:	nop
  445441:	push   ebx
  445443:	add    esi,DWORD PTR [ebp-0x4afb6209]
  445449:	(bad)  
  44544a:	ins    BYTE PTR es:[edi],dx
  44544b:	loopne 0x4453e3
  44544d:	pop    DWORD PTR [eax]
  44544f:	out    0x44,al
  445451:	mov    eax,ds:0x1be22fd
  445456:	push   edx
  445457:	call   0x33411b0f
  44545c:	scas   al,BYTE PTR es:[edi]
  44545d:	add    DWORD PTR [edx-0x15],edx
	...
  445474:	mov    bl,0xc6
  445476:	cld    
  445477:	and    bh,BYTE PTR [esi-0x4c15adff]
  44547d:	(bad)  
  44547e:	cld    
  44547f:	xor    ch,BYTE PTR [esi-0x4c12adff]
  445485:	(bad)  
  445486:	cld    
  445487:	and    bh,BYTE PTR [esi-0x4c13adff]
  44548d:	(bad)  
  44548e:	cld    
  44548f:	mov    dl,0xaf
  445491:	add    DWORD PTR [edx-0x11],edx
  445494:	mov    bl,0xc6
  445496:	cld    
  445497:	mov    ds:0xee5201bf,al
  44549c:	mov    bl,0xc6
  44549e:	cld    
  44549f:	mov    dl,0xaf
  4454a1:	add    DWORD PTR [edx-0x1f],edx
  4454a4:	mov    bl,0xc6
  4454a6:	cld    
  4454a7:	mov    ds:0xf05201bf,al
  4454ac:	mov    bl,0xc6
  4454ae:	cld    
  4454af:	mov    dl,0xaf
  4454b1:	add    DWORD PTR [edx-0x1d],edx
  4454b4:	mov    bl,0xc6
  4454b6:	cld    
  4454b7:	mov    ds:0xf25201bf,al
  4454bc:	mov    bl,0xc4
  4454be:	cld    
  4454bf:	mov    dl,0xaf
  4454c1:	add    DWORD PTR [edx-0x1b],edx
  4454c4:	mov    bl,0xc4
  4454c6:	cld    
  4454c7:	mov    ds:0xf45201bf,al
  4454cc:	mov    bl,0xc4
  4454ce:	cld    
  4454cf:	xor    ch,BYTE PTR [edi-0x4c18adff]
  4454d5:	(bad)  
  4454d6:	cld    
  4454d7:	and    al,BYTE PTR [eax]
	...
  4454e9:	add    BYTE PTR [eax],al
  4454eb:	add    BYTE PTR [edi+0x63005201],bh
  4454f1:	xchg   esi,eax
  4454f2:	icebp  
  4454f3:	add    esp,DWORD PTR [esi-0x757c0e6b]
  4454f9:	rol    BYTE PTR [eax+0xf],0xd9
  4454fd:	loope  0x4454f6
  4454ff:	call   DWORD PTR [ebx+0x5b806918]
  445505:	adc    edi,ebp
  445507:	loope  0x445496
  445509:	sub    al,BYTE PTR [edi]
  44550b:	imul   ebp,esi,0xb3ff0089
  445511:	xchg   ebp,eax
  445512:	ret    0x9db8
  445515:	adc    bh,bh
  445517:	jg     0x445534
  445519:	das    
  44551a:	mov    ecx,0xcaabf3ea
  44551f:	nop    DWORD PTR [eax-0x9]
  445523:	add    edx,DWORD PTR [esi]
  445525:	push   edi
  445526:	inc    ebp
  445527:	or     al,0x13
  445529:	ds xor edi,edi
  44552c:	add    edx,DWORD PTR [edi+0x7d]
  44552f:	fninit 
  445531:	cmp    al,0xc9
  445533:	add    ah,cl
  445535:	nop
  445536:	jnp    0x445533
  445538:	cld    
  445539:	xchg   DWORD PTR [edx-0x6b],edi
  44553c:	fcom   QWORD PTR [eax+0x511f8b00]
  445542:	call   0x1cf3a64b
  445547:	add    bl,dl
  445549:	push   ds
  44554a:	push   cs
  44554b:	add    edx,DWORD PTR [esi-0x7a]
  44554e:	scas   al,BYTE PTR es:[edi]
  44554f:	push   esi
	...
  445564:	popf   
  445565:	xchg   ebx,eax
  445566:	icebp  
  445567:	add    esp,DWORD PTR [esi-0x7a]
  44556a:	scas   al,BYTE PTR es:[edi]
  44556b:	push   esi
  44556c:	mov    ss,WORD PTR [ebx-0x79a9fc0f]
  445572:	scas   al,BYTE PTR es:[edi]
  445573:	push   esi
  445574:	lahf   
  445575:	xchg   ebx,eax
  445576:	icebp  
  445577:	add    eax,esi
  445579:	xchg   BYTE PTR [esi+0x3aab556],ch
  44557f:	div    DWORD PTR [esi+0x3b20770]
  445585:	lods   al,BYTE PTR ds:[esi]
  445586:	add    esi,edi
  445588:	mov    dh,0x80
  44558a:	pop    es
  44558b:	mov    dl,0x3
  44558d:	lods   eax,DWORD PTR ds:[esi]
  44558e:	add    esi,edi
  445590:	mov    dh,0x70
  445592:	pop    es
  445593:	mov    dl,0xe3
  445595:	lods   eax,DWORD PTR ds:[esi]
  445596:	add    esi,edi
  445598:	mov    dh,0x80
  44559a:	pop    es
  44559b:	mov    dl,0xe3
  44559d:	scas   al,BYTE PTR es:[edi]
  44559e:	add    esi,edi
  4455a0:	mov    dh,0x70
  4455a2:	pop    es
  4455a3:	mov    dl,0x83
  4455a5:	mov    edi,0x80b6f703
  4455aa:	pop    es
  4455ab:	mov    dl,0x83
  4455ad:	mov    al,0x3
  4455af:	div    DWORD PTR [esi+0x63b20770]
  4455b5:	rol    DWORD PTR [ebx],0xf7
  4455b8:	mov    dh,0x0
  4455ba:	or     BYTE PTR [edx-0x8fc4d9d],dh
  4455c0:	mov    dh,0xf0
  4455c2:	pop    es
  4455c3:	mov    dl,0x83
  4455c5:	ret    
  4455c6:	add    esi,edi
	...
  4455dc:	mov    dh,0x0
  4455de:	or     BYTE PTR [edx-0x8fc4b7d],dh
  4455e4:	mov    dh,0xf0
  4455e6:	pop    es
  4455e7:	mov    dl,0x63
  4455e9:	lds    eax,FWORD PTR [ebx]
  4455eb:	div    DWORD PTR [esi-0x5a1a7c00]
  4455f1:	test   eax,0xb97b7d55
  4455f6:	les    ecx,FWORD PTR [eax]
  4455f8:	xor    BYTE PTR [ebp+0x34a2f957],bh
  4455fe:	cmp    al,0x74
  445600:	scas   al,BYTE PTR es:[edi]
  445601:	mov    cl,0x8e
  445603:	add    dh,BYTE PTR [esi-0x72034110]
  445609:	nop
  44560a:	scas   al,BYTE PTR es:[edi]
  44560b:	into   
  44560c:	xchg   eax,edi
  44560e:	xlat   BYTE PTR ds:[ebx]
  44560f:	xor    DWORD PTR [edi+ecx*1-0x59cd9da6],0xffffffd9
  445617:	jmp    0x8f5c:0x58e78b78
  44561e:	sub    eax,0xea0fca9b
  445623:	add    DWORD PTR [ebx+esi*4+0x27],0x6d
  445628:	mov    esp,0xb5083528
  44562d:	mov    edx,0x7430419
  445632:	sub    bh,BYTE PTR [ecx-0x47094f8d]
  445638:	mov    cl,0xd0
  44563a:	popf   
  44563b:	mov    dh,0x60
  44563d:	mov    edi,fs
  44563f:	inc    edi
	...
  445654:	jmp    0x21d0f224
  445659:	bound  ebx,QWORD PTR [esi-0x32]
  44565c:	mov    edx,0xb3d0d914
  445661:	push   es
  445662:	sub    al,0xc
  445664:	xor    BYTE PTR [ebp-0x1d],dl
  445667:	sub    bh,ch
  445669:	add    eax,0x90c18bf7
  44566e:	daa    
  44566f:	(bad)  
  445670:	addr16 ret 0xb918
  445674:	sbb    esp,ecx
  445676:	sbb    ecx,DWORD PTR [ebx+0x81c06e1]
  44567c:	ss leave 
  44567e:	sbb    cl,BYTE PTR [ecx]
  445680:	cmp    BYTE PTR [ebp-0x11],dl
  445683:	mov    BYTE PTR [edx-0x71],dh
  445686:	test   eax,0x204fb504
  44568b:	shl    DWORD PTR [ebx+0x7148a65c],1
  445691:	retf   
  445692:	stos   BYTE PTR es:[edi],al
  445693:	dec    eax
  445694:	imul   ecx,ebx,0x60621bff
  44569a:	dec    ebp
  44569b:	push   0x1d
  44569d:	je     0x445624
  44569f:	mov    ebp,0xad8577a2
  4456a4:	call   0x9613:0x8eab857b
  4456ab:	pop    ebp
  4456ac:	mov    cl,0x8f
  4456ae:	add    BYTE PTR [edx],al
  4456b0:	not    BYTE PTR [esi+edi*1]
  4456b3:	cmc    
  4456b4:	das    
  4456b5:	popa   
  4456b6:	jl     0x44566d
	...
  4456cc:	mov    bh,0xfa
  4456ce:	in     al,0xeb
  4456d0:	jg     0x4456cb
  4456d2:	fdiv   st(1),st
  4456d4:	scas   eax,DWORD PTR es:[edi]
  4456d5:	xlat   BYTE PTR ds:[ebx]
  4456d6:	xchg   ch,bh
  4456d8:	call   0x8f:0xb9797e14
  4456df:	bound  ebp,QWORD PTR [edi+0x3e]
  4456e2:	xor    eax,0x85bbfd21
  4456e7:	and    DWORD PTR [eax],ebp
  4456e9:	pop    ebx
  4456ea:	and    al,0xd1
  4456ec:	aas    
  4456ed:	sub    DWORD PTR [eax],edi
  4456ef:	pusha  
  4456f0:	in     eax,0x6d
  4456f2:	add    al,0x72
  4456f4:	or     al,0x26
  4456f6:	mov    ebx,DWORD PTR [ebp-0x5c]
  4456f9:	pop    DWORD PTR [edi-0x7a906aab]
  4456ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445700:	jnp    0x4456d9
  445702:	jl     0x4456cd
  445704:	mov    bh,0x12
  445706:	inc    esp
  445707:	add    eax,0x53e12e5
  44570c:	pushf  
  44570d:	(bad)  
  44570e:	(bad)  
  44570f:	call   0x272ccbca
  445714:	mov    bh,0x6c
  445716:	jmp    0x44578a
  445718:	hlt    
  445719:	inc    ecx
  44571a:	xchg   DWORD PTR ds:0x98fd9bd5,ebp
  445720:	cmp    DWORD PTR [esp+0x0],eax
  445724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445725:	xchg   edx,eax
  445726:	scas   eax,DWORD PTR es:[edi]
  445727:	pop    ds
  445728:	and    eax,0x9b101d01
  44572d:	or     bl,BYTE PTR [eax+edi*1+0x0]
	...
  445741:	add    BYTE PTR [eax],al
  445743:	add    BYTE PTR [ebx],bl
  445745:	or     al,0x5c
  445747:	and    al,0x88
  445749:	push   es
  44574a:	jb     0x44578c
  44574c:	pop    es
  44574d:	test   eax,0x869eb1c
  445752:	inc    ecx
  445753:	add    BYTE PTR [edi+0x68b70745],bh
  445759:	shl    BYTE PTR [ebx],cl
  44575b:	int    0x4b
  44575d:	cmp    esp,eax
  44575f:	add    BYTE PTR [ebp+ecx*4+0x79],bl
  445763:	jmp    0x54b:0xfff98d5c
  44576a:	aam    0x0
  44576c:	dec    esp
  44576d:	lea    eax,[edi]
  44576f:	mov    bh,0x60
  445771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445772:	idiv   DWORD PTR [ebx]
  445774:	(bad)  
  445776:	aad    0x8b
  445778:	push   eax
  445779:	cdq    
  44577a:	add    al,0xf
  44577c:	jecxz  0x445736
  44577e:	stc    
  44577f:	cmp    ah,BYTE PTR [eax-0x67]
  445782:	adc    BYTE PTR [ebp-0x55],dh
  445785:	or     edx,DWORD PTR [esp]
  445788:	xchg   edi,ebx
  44578a:	sbb    al,0x4
  44578c:	xchg   edi,edx
  44578e:	sbb    al,0x20
  445790:	fistp  WORD PTR [ebp-0x7d]
  445793:	inc    esp
  445794:	mov    al,0xbf
  445796:	mov    dl,0xf8
  445798:	cli    
  445799:	(bad)  
  44579a:	test   DWORD PTR [ebp+0x1089b58],0xb4858cdc
  4457a4:	int3   
  4457a5:	test   cl,bh
  4457a7:	inc    DWORD PTR [eax]
	...
  4457b9:	add    BYTE PTR [eax],al
  4457bb:	add    ah,cl
  4457bd:	pop    es
  4457be:	add    al,0x32
  4457c0:	fistp  QWORD PTR [eax-0x454a8ace]
  4457c6:	xchg   DWORD PTR [edi+eiz*8-0x4e],eax
  4457ca:	cmove  ebx,edi
  4457cd:	stos   BYTE PTR es:[edi],al
  4457ce:	leave  
  4457cf:	add    BYTE PTR [esi],dh
  4457d1:	in     al,0xb
  4457d3:	jae    0x445771
  4457d5:	or     eax,0xb2777ccd
  4457da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4457db:	stc    
  4457dc:	and    BYTE PTR [esi+0x25b372fc],0x3e
  4457e3:	(bad)  
  4457e4:	jne    0x445834
  4457e6:	hlt    
  4457e7:	sub    esi,DWORD PTR [ebp+eiz*1-0x55cfffd2]
  4457ee:	push   ss
  4457ef:	test   ecx,ebx
  4457f1:	xchg   edx,eax
  4457f2:	and    al,0x25
  4457f4:	jp     0x4457b9
  4457f6:	(bad)  
  4457f7:	dec    BYTE PTR [edx-0x5a]
  4457fa:	ror    DWORD PTR [ebx+0x2e],1
  4457fd:	cli    
  4457fe:	sbb    BYTE PTR [eax],bh
  445800:	cs cli 
  445802:	sbb    BYTE PTR [esi+ebp*8],bl
  445805:	ror    DWORD PTR gs:[esi+edi*1],cl
  445809:	and    bl,BYTE PTR [ecx]
  44580b:	or     BYTE PTR [esi],ch
  44580d:	or     al,0xbd
  44580f:	test   BYTE PTR [ecx-0x2e],bh
  445812:	add    BYTE PTR [ebp+0x4a65caa9],al
  445818:	or     ch,BYTE PTR [ecx-0x759e7aad]
  44581e:	cld    
  44581f:	xchg   BYTE PTR [eax],al
	...
  445831:	add    BYTE PTR [eax],al
  445833:	add    BYTE PTR [ecx-0x6e],dh
  445836:	clc    
  445837:	xchg   BYTE PTR [edi+0x56],bh
  44583a:	pop    ss
  44583b:	mov    ebp,0x7487bb68
  445840:	cdq    
  445841:	stos   BYTE PTR es:[edi],al
  445842:	(bad)  
  445843:	out    dx,eax
  445844:	sub    al,0x82
  445846:	and    BYTE PTR [eax],cl
  445848:	ret    0xb139
  44584b:	aaa    
  44584c:	retf   0xd72c
  44584f:	aas    
  445850:	sub    al,0x8f
  445852:	inc    ebx
  445853:	and    BYTE PTR [ecx-0x65e00cfc],ch
  445859:	jno    0x4457ed
  44585b:	push   esp
  44585c:	lods   al,BYTE PTR ds:[esi]
  44585d:	or     esi,DWORD PTR [ebx]
  44585f:	and    ch,bl
  445861:	into   
  445862:	sub    ah,BYTE PTR [eax]
  445864:	mov    ecx,0xb503e891
  445869:	or     BYTE PTR ds:0xc35c31d4,bl
  44586f:	sbb    edi,DWORD PTR [eax]
  445871:	push   esp
  445872:	or     edi,eax
  445874:	xor    DWORD PTR [edx-0x2d],edx
  445877:	sbb    BYTE PTR [ebp+0x2888e537],cl
  44587d:	adc    esp,DWORD PTR [ebx]
  44587f:	pop    ds
  445880:	or     BYTE PTR [esi-0x5e],dl
  445883:	mov    dh,0x19
  445885:	shr    DWORD PTR [edx],cl
  445887:	inc    edi
  445888:	add    esp,0x8ff286e6
  44588e:	out    0x86,eax
  445890:	cli    
  445891:	(bad)  
  445892:	out    0x86,eax
  445894:	repnz (bad) 
  445896:	out    0x86,eax
	...
  4458ac:	jp     0x44583d
  4458ae:	out    0x3,eax
  4458b0:	mov    ch,0x8f
  4458b2:	call   0xe6d40dba
  4458b7:	add    esi,DWORD PTR [ebp-0x4afc1d71]
  4458bd:	(bad)  
  4458be:	loop   0x4458c3
  4458c0:	mov    ch,0x8f
  4458c2:	retf   0xb503
  4458c5:	(bad)  
  4458c6:	and    al,BYTE PTR [esi*4-0x4afba571]
  4458cd:	(bad)  
  4458ce:	rol    BYTE PTR [esi*4-0x4afa3571],cl
  4458d5:	pop    edx
  4458d7:	pop    es
  4458d8:	mov    ch,0x8f
  4458da:	mov    edx,0x8fb50b
  4458df:	mov    dh,0xb6
  4458e1:	pop    DWORD PTR [eax]
  4458e3:	scas   al,BYTE PTR es:[edi]
  4458e4:	(bad)  
  4458e5:	mov    dh,0xf8
  4458e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4458e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4458e9:	pop    DWORD PTR [eax]
  4458eb:	sahf   
  4458ec:	xchg   BYTE PTR [esi-0x6ff96908],dh
  4458f2:	add    BYTE PTR [esi-0x790748fa],cl
  4458f8:	push   es
  4458f9:	mov    ch,0xf8
  4458fb:	jle    0x4458e3
  4458fd:	nop
  4458fe:	add    BYTE PTR [esi-0x1a],dh
  445901:	mov    BYTE PTR [eax],al
  445903:	outs   dx,BYTE PTR ds:[esi]
  445904:	out    0x98,al
  445906:	add    BYTE PTR [esi-0x1a],ah
  445909:	js     0x44590b
  44590b:	pop    esi
  44590c:	push   es
  44590d:	cmp    DWORD PTR [eax],eax
  44590f:	push   esi
	...
  445924:	push   es
  445925:	mov    ecx,0xb9064dff
  44592a:	inc    BYTE PTR [ebp+0x6]
  44592d:	mov    ecx,0xb8e63dfc
  445932:	add    BYTE PTR [esi],dh
  445934:	out    0xb8,al
  445936:	or     BYTE PTR [esi],ch
  445938:	out    0xb8,al
  44593a:	sbb    BYTE PTR [esi],ah
  44593c:	out    0xb8,al
  44593e:	cmp    BYTE PTR [esi],bl
  445940:	xchg   BYTE PTR [eax-0x4779e988],bh
  445946:	clc    
  445947:	mov    dh,0x5c
  445949:	popa   
  44594a:	dec    ebp
  44594b:	xor    ah,BYTE PTR gs:[ebx+0x3b93fd3f]
  445952:	and    al,0x91
  445954:	mov    edi,DWORD PTR [ecx]
  445956:	sbb    al,0x62
  445958:	aas    
  445959:	xchg   edx,eax
  44595a:	test   edi,ebp
  44595c:	mov    bl,0xdf
  44595e:	jl     0x445933
  445960:	repz or al,0x44
  445963:	or     eax,0x5540e95
  445968:	fisttp QWORD PTR [edx]
  44596a:	ins    BYTE PTR es:[edi],dx
  44596b:	add    BYTE PTR [eax-0x13b17c01],ch
  445971:	xor    al,0x56
  445973:	or     al,0xb7
  445975:	push   esp
  445976:	out    dx,eax
  445977:	(bad)  
  445979:	push   esp
  44597a:	jns    0x445965
  44597c:	int    0x8a
  44597e:	add    BYTE PTR [eax],al
  445980:	lahf   
  445981:	jbe    0x445904
  445983:	pop    esp
  445984:	js     0x44590b
  445986:	sub    DWORD PTR [eax+eax*1+0x0],0x0
	...
  44599a:	add    BYTE PTR [eax],al
  44599c:	js     0x445937
  44599e:	or     DWORD PTR [eax+ebp*2-0x3f],0x34e04783
  4459a6:	inc    edi
  4459a7:	push   eax
  4459a8:	adc    eax,0x15081ccd
  4459ad:	cmc    
  4459ae:	sbb    al,0xc
  4459b0:	push   esp
  4459b1:	mov    WORD PTR [eax],es
  4459b3:	add    BYTE PTR [esi+esi*1+0x47],bl
  4459b7:	push   esp
  4459b8:	scas   eax,DWORD PTR es:[edi]
  4459b9:	xor    BYTE PTR [eax-0x77],cl
  4459bc:	pop    eax
  4459bd:	ins    DWORD PTR es:[edi],dx
  4459be:	mov    eax,0x914c01
  4459c3:	mov    esp,DWORD PTR [ebx]
  4459c5:	jmp    0x34593a95
  4459ca:	inc    esp
  4459cb:	and    al,0x58
  4459cd:	ss aas 
  4459cf:	sub    bh,al
  4459d1:	shr    DWORD PTR [eax],1
  4459d3:	mov    ebp,DWORD PTR [ebx-0x63]
  4459d6:	add    DWORD PTR [eax+edi*8-0x64],0xa0f84c81
  4459de:	adc    DWORD PTR [eax+ebp*8-0x78],0x35f46f83
  4459e6:	push   edi
  4459e7:	cmp    al,0x97
  4459e9:	fcomp  QWORD PTR [esp+ebp*1]
  4459ec:	xchg   edi,eax
  4459ed:	hlt    
  4459ee:	sbb    al,0x14
  4459f0:	xlat   BYTE PTR ds:[ebx]
  4459f1:	push   ecx
  4459f2:	outs   dx,DWORD PTR ds:[esi]
  4459f3:	and    bl,BYTE PTR [edi+0x50]
  4459f6:	add    ebp,DWORD PTR [ebx]
  4459f8:	mov    ch,0xec
  4459fa:	mov    ecx,DWORD PTR [esi*4+0x24fca6]
	...
  445a11:	add    BYTE PTR [eax],al
  445a13:	add    ah,dh
  445a15:	cmp    edx,eax
  445a17:	and    esi,DWORD PTR [ecx-0x27a5807]
  445a1d:	mov    ecx,0x540fed3c
  445a22:	fsub   DWORD PTR [ebx]
  445a24:	cdq    
  445a25:	aas    
  445a26:	fsub   DWORD PTR [ebx]
  445a28:	leave  
  445a29:	and    esp,ebp
  445a2b:	lock jae 0x4459d7
  445a2e:	cld    
  445a2f:	push   DWORD PTR [ebp+0x752cf49a]
  445a35:	inc    eax
  445a36:	push   es
  445a37:	inc    edx
  445a38:	add    DWORD PTR ds:[ebx+0x6419bdbd],eax
  445a3f:	add    eax,0x855c118d
  445a44:	stc    
  445a45:	adc    BYTE PTR [eax],0x7d
  445a48:	mov    al,0xe6
  445a4a:	cmp    al,0x3d
  445a4c:	mov    ch,0xa8
  445a4e:	inc    DWORD PTR [ebx-0x357d4]
  445a54:	loop   0x445a37
  445a56:	lods   al,BYTE PTR ds:[esi]
  445a57:	dec    esp
  445a58:	in     al,0x18
  445a5a:	imul   eax,DWORD PTR [ebp+0x347d82b1],0x1ffca699
  445a64:	mov    ch,0xb
  445a66:	jo     0x445abe
  445a68:	out    0x76,al
  445a6a:	fadd   DWORD PTR [ebx-0x1a]
  445a6d:	call   DWORD PTR [ebp+0x62c7a134]
  445a74:	mov    esi,DWORD PTR [ebx]
  445a76:	shl    BYTE PTR [edi],cl
	...
  445a8c:	xor    al,0x8f
  445a8e:	fidiv  WORD PTR [ebx-0x70]
  445a91:	or     dl,dl
  445a93:	das    
  445a94:	xor    al,0xc0
  445a96:	aad    0x69
  445a98:	nop
  445a99:	(bad)  
  445a9a:	xor    bh,dl
  445a9c:	call   0xe28f:0xb503e7f7
  445aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445aa4:	and    ah,BYTE PTR [edi-0x7c2a7b22]
  445aaa:	dec    bx
  445aac:	mov    bh,0x3a
  445aae:	rcr    DWORD PTR [eax+0xb],1
  445ab1:	(bad)  
  445ab2:	out    0x83,eax
  445ab4:	mov    ch,0x3a
  445ab6:	in     eax,0x5c
  445ab8:	test   eax,0x72c3ebcc
  445abd:	dec    edi
  445abe:	out    0x5,eax
  445ac0:	mov    ch,0x8f
  445ac2:	out    0x5c,eax
  445ac4:	mov    ebx,0x5ac3e3ca
  445ac9:	dec    edi
  445aca:	out    0x4,eax
  445acc:	mov    ch,0x8f
  445ace:	out    0xad,eax
  445ad0:	jecxz  0x445b28
  445ad2:	minps  xmm6,XMMWORD PTR [eax+eiz*1]
  445ad6:	addr16 dec esp
  445ad8:	lods   al,BYTE PTR ds:[esi]
  445ad9:	cmp    dh,ah
  445adb:	adc    al,0x75
  445add:	sub    cl,BYTE PTR [ebp+edi*2-0xcd9ef90]
  445ae4:	jno    0x445a96
  445ae6:	fstp   QWORD PTR [ebx+0x30]
  445ae9:	pushf  
  445aea:	or     edi,DWORD PTR [ebp+0x1]
  445aed:	ins    BYTE PTR es:[edi],dx
  445aee:	out    dx,eax
  445aef:	and    al,0x0
	...
  445b01:	add    BYTE PTR [eax],al
  445b03:	add    BYTE PTR [esi+0x7],ah
  445b06:	jmp    0x445b7a
  445b08:	cmp    eax,esp
  445b0a:	cld    
  445b0b:	das    
  445b0c:	push   0xa6436aa5
  445b11:	cwde   
  445b12:	sub    BYTE PTR [ebx-0x3b],bl
  445b15:	in     eax,0xcf
  445b17:	iret   
  445b18:	(bad)  
  445b19:	lahf   
  445b1a:	fimul  DWORD PTR [ecx+0x3e78b7b]
  445b20:	retf   0xc33b
  445b23:	test   DWORD PTR [ebp+0x3dffffcb],0x79e9008f
  445b2d:	fistp  QWORD PTR [esi-0x37f3162d]
  445b33:	xchg   ecx,eax
  445b34:	loope  0x445abd
  445b36:	test   ch,bl
  445b38:	mov    ecx,0x5069008f
  445b3d:	mov    BYTE PTR [esp+ecx*1-0x41],dh
  445b41:	fisubr DWORD PTR [eax+ebx*8+0x4c]
  445b45:	stos   BYTE PTR es:[edi],al
  445b46:	sub    al,0xa9
  445b48:	frstpm(287 only) 
  445b4a:	test   DWORD PTR [edx-0x45f00acf],esp
  445b50:	sbb    DWORD PTR [ebp-0x80b8c18],ecx
  445b56:	(bad)  
  445b57:	call   0x8a11eb12
  445b5c:	pop    ecx
  445b5d:	ins    BYTE PTR es:[edi],dx
  445b5e:	xlat   BYTE PTR ds:[ebx]
  445b5f:	retf   0xc4fd
  445b62:	jmp    0xcd:0x540ac6ea
	...
  445b79:	add    BYTE PTR [eax],al
  445b7b:	add    BYTE PTR [esi+0x63def532],cl
  445b81:	test   DWORD PTR ds:0x85e55b29,ebp
  445b87:	xor    dh,BYTE PTR [ecx]
  445b89:	hlt    
  445b8a:	(bad)  
  445b8d:	mov    eax,gs
  445b8f:	bound  ebx,QWORD PTR ds:0x7572046e
  445b95:	outs   dx,BYTE PTR ds:[esi]
  445b96:	or     al,0xa
  445b98:	mov    WORD PTR [esp+eax*1],cs
  445b9b:	pop    eax
  445b9c:	mov    esi,0x4143bedf
  445ba1:	or     al,0xcc
  445ba3:	shl    edx,cl
  445ba5:	(bad)  
  445ba6:	jmp    0x3ae6:0xfe7e973
  445bad:	loope  0x445bae
  445baf:	call   0x1236b6a
  445bb4:	or     ebx,edx
  445bb6:	pop    ebp
  445bb7:	cmp    dl,ch
  445bb9:	fimul  WORD PTR [ecx]
  445bbb:	mov    dh,BYTE PTR [ebp-0x46993f62]
  445bc1:	xor    eax,0xbe1f80c3
  445bc6:	retf   
  445bc7:	loopne 0x445bb0
  445bc9:	push   ebp
  445bca:	or     ch,0x44
  445bcd:	mov    eax,DWORD PTR [eax]
  445bcf:	add    ah,cl
  445bd1:	jl     0x445bb3
  445bd3:	dec    eax
  445bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445bd5:	fs sbb eax,ebp
  445bd8:	das    
  445bd9:	das    
  445bda:	sti    
  445bdb:	iret   
  445bdc:	test   DWORD PTR [ebp+0x7481],0x0
	...
  445bf2:	add    BYTE PTR [eax],al
  445bf4:	mov    al,0x6f
  445bf6:	add    edi,0xffffff87
  445bf9:	leave  
  445bfa:	sbb    al,0x28
  445bfc:	xchg   edi,eax
  445bfd:	dec    edi
  445bfe:	pop    es
  445bff:	and    BYTE PTR [eax],0x8d
  445c02:	add    BYTE PTR [eax],al
  445c04:	pop    ss
  445c05:	icebp  
  445c06:	sbb    al,0x18
  445c08:	pop    es
  445c09:	pop    edx
  445c0a:	and    esi,edx
  445c0c:	pop    ds
  445c0d:	push   esp
  445c0e:	sti    
  445c0f:	mov    DWORD PTR [edx-0x2d7600cb],edx
  445c15:	mov    al,BYTE PTR [edx-0x41f1a1aa]
  445c1b:	add    esp,esp
  445c1d:	leave  
  445c1e:	stc    
  445c1f:	xchg   DWORD PTR [ebx],esp
  445c21:	(bad)  
  445c22:	jnp    0x445beb
  445c24:	dec    edi
  445c25:	pop    esi
  445c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445c27:	mov    edx,DWORD PTR [eax]
  445c29:	imul   ebp,DWORD PTR [ecx+ebp*8],0xfff7426c
  445c30:	iret   
  445c31:	inc    esi
  445c32:	stc    
  445c33:	je     0x445bfe
  445c35:	cmp    DWORD PTR [esp+0x4],0xffffffd9
  445c3a:	scas   eax,DWORD PTR es:[edi]
  445c3b:	dec    edi
  445c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445c3d:	lock sbb al,0x18
  445c40:	mov    ch,0x2c
  445c42:	add    bh,BYTE PTR [ebp+0xc]
  445c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445c46:	je     0x445c89
  445c48:	mov    ah,0x3e
  445c4a:	ret    0x32fd
  445c4d:	jmp    0xa64d:0xa2fa7cfd
  445c54:	or     al,0x8f
  445c56:	dec    ebx
  445c57:	stc    
	...
  445c6c:	repnz push ds
  445c6e:	les    ecx,FWORD PTR [eax]
  445c70:	xor    BYTE PTR [ecx+0x1eb5ffff],ah
  445c76:	std    
  445c77:	push   DWORD PTR [ebp+0x7de02fa6]
  445c7d:	test   DWORD PTR [ecx-0x3],eax
  445c80:	hlt    
  445c81:	cmp    eax,0x2dad23b8
  445c86:	or     BYTE PTR [esi-0x34],bh
  445c89:	cmp    al,0x4a
  445c8b:	stc    
  445c8c:	mov    dl,0x5e
  445c8e:	les    ecx,FWORD PTR [eax]
  445c90:	xor    BYTE PTR [esi+edi*8],al
  445c93:	push   DWORD PTR [ebp-0x4a0002a2]
  445c99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445c9a:	das    
  445c9b:	loopne 0x445c9a
  445c9d:	lds    eax,FWORD PTR [ecx-0x3]
  445ca0:	je     0x445cdf
  445ca2:	mov    eax,0x82db123
  445ca7:	jle    0x445c35
  445ca9:	fisttp WORD PTR [ebx-0x7]
  445cac:	jb     0x445ceb
  445cae:	cmp    al,0x85
  445cb0:	icebp  
  445cb1:	mov    bl,BYTE PTR [eax]
  445cb3:	icebp  
  445cb4:	jl     0x445ce3
  445cb6:	fsub   DWORD PTR [ebx]
  445cb8:	popf   
  445cb9:	popf   
  445cba:	or     DWORD PTR ds:[edi],esi
  445cbd:	push   0xa5b5fffe
  445cc2:	ss jge 0x445c86
  445cc5:	adc    BYTE PTR [eax+eax*1],0xc0
  445cc9:	mov    dl,BYTE PTR [edi]
  445ccb:	mov    edi,0x79178fb6
	...
  445ce4:	jno    0x445d51
  445ce6:	dec    DWORD PTR [eax]
  445ce8:	bound  edi,QWORD PTR [ecx]
  445cea:	xchg   DWORD PTR [eax],ebx
  445cec:	pop    edx
  445ced:	mov    esp,0x64047942
  445cf2:	cmc    
  445cf3:	pop    eax
  445cf4:	addr16 je 0x445d1f
  445cf7:	(bad)  
  445cf8:	jo     0x445d5e
  445cfa:	sub    BYTE PTR [ecx+0x51],dl
  445cfd:	add    al,0xf2
  445cff:	sbb    bl,ah
  445d01:	mov    ds:0x6b71792e,eax
  445d06:	pop    ss
  445d07:	or     ebp,ebp
  445d09:	cmp    BYTE PTR [ebx],al
  445d0b:	add    DWORD PTR [ecx+0x6b],esp
  445d0e:	adc    eax,DWORD PTR [ecx]
  445d10:	lds    esp,FWORD PTR [ebx-0x48]
  445d13:	sbb    ch,bh
  445d15:	add    esp,DWORD PTR [ebx]
  445d17:	sub    BYTE PTR [ebp-0x732a578c],bl
  445d1d:	fs test al,0x50
  445d20:	pop    ecx
  445d21:	sbb    ebx,DWORD PTR [ebx]
  445d23:	sub    ch,ch
  445d25:	sbb    ch,BYTE PTR [ebx]
  445d27:	sub    ch,ah
  445d29:	push   0xffffffa8
  445d2b:	aad    0xbc
  445d2d:	jp     0x445cd7
  445d2f:	push   eax
  445d30:	pop    ecx
  445d31:	sbb    edi,DWORD PTR [edx+0x18]
  445d34:	fwait
  445d35:	mov    ebx,0x7b8500d2
  445d3a:	js     0x445db4
  445d3c:	icebp  
  445d3d:	jae    0x445d0e
  445d3f:	or     BYTE PTR [edx],dh
  445d41:	es out dx,eax
  445d43:	sbb    BYTE PTR [edx],ch
  445d45:	mov    ds:0x7882,eax
	...
  445d5a:	add    BYTE PTR [eax],al
  445d5c:	fs jnp 0x445db4
  445d5f:	js     0x445dce
  445d61:	mov    ds:0x73c97882,eax
  445d66:	adc    ebx,DWORD PTR [ebx-0x45]
  445d69:	lods   eax,DWORD PTR ds:[esi]
  445d6a:	cmp    DWORD PTR [eax+edi*1-0x51],ecx
  445d6e:	jmp    ebp
  445d70:	popa   
  445d71:	cwde   
  445d72:	push   0x24
  445d74:	lods   eax,DWORD PTR ds:[esi]
  445d75:	mov    ah,0x8
  445d77:	xchg   edi,eax
  445d78:	shl    BYTE PTR [ebx+0x9],cl
  445d7b:	sahf   
  445d7c:	xchg   ebp,eax
  445d7d:	cwde   
  445d7e:	push   0xffffff85
  445d80:	rcl    BYTE PTR [ebx-0x679371f7],cl
  445d86:	jmp    0x248feabb
  445d8b:	icebp  
  445d8c:	pop    ebp
  445d8d:	scas   al,BYTE PTR es:[edi]
  445d8e:	mov    dh,ah
  445d90:	(bad)
  445d93:	in     al,dx
  445d94:	xchg   edi,eax
  445d95:	and    BYTE PTR [esi],cl
  445d97:	test   BYTE PTR [edx+eiz*4],0x8
  445d9b:	dec    edi
  445d9c:	scas   eax,DWORD PTR es:[edi]
  445d9d:	sub    al,0xc2
  445d9f:	in     eax,dx
  445da0:	fistp  QWORD PTR [ebx+0x6f746af9]
  445da6:	or     edx,edx
  445da8:	jbe    0x445d42
  445daa:	aad    0xc9
  445dac:	mov    esi,0xefe6e028
  445db1:	retf   0xe584
  445db4:	cmp    ebx,DWORD PTR [eax+0x38aeb5b2]
  445dba:	(bad)  
  445dbb:	rol    BYTE PTR [ecx],cl
  445dbd:	adc    al,0xc0
  445dbf:	sbb    al,0x0
	...
  445dd1:	add    BYTE PTR [eax],al
  445dd3:	add    BYTE PTR [eax+0x30f9e7ed],cl
  445dd9:	data16 jl 0x445da9
  445ddc:	xchg   BYTE PTR [edi-0x7047227e],dl
  445de2:	add    BYTE PTR [eax-0x9eb8d96],dh
  445de8:	inc    eax
  445de9:	mov    dh,0xe
  445deb:	jmp    0x445da3
  445ded:	pop    DWORD PTR [ebp+0xfb5f839]
  445df3:	and    DWORD PTR [ecx-0x69],0x8fb94984
  445dfa:	add    BYTE PTR [eax],al
  445dfc:	fbstp  TBYTE PTR [ebx]
  445dfe:	pop    es
  445dff:	je     0x445e69
  445e01:	test   eax,0xc853c1cb
  445e06:	ror    BYTE PTR [edi],0x62
  445e09:	push   ebx
  445e0a:	and    ebp,eax
  445e0c:	jmp    DWORD PTR [ebp-0x2ad3ff83]
  445e12:	clc    
  445e13:	add    bl,ch
  445e15:	stos   BYTE PTR es:[edi],al
  445e16:	retf   
  445e17:	rcr    DWORD PTR [edi-0x1188dfa8],0xa8
  445e1e:	data16 cmc 
  445e20:	adc    ecx,eax
  445e22:	ss or  edx,0xffffff8f
  445e26:	pop    es
  445e27:	repz loop 0x445e3e
  445e2a:	mov    ebp,0xbf4ce320
  445e2f:	mov    esp,DWORD PTR [eax+0x270f0c6f]
  445e35:	dec    edx
  445e36:	pop    es
  445e37:	jle    0x445e39
	...
  445e49:	add    BYTE PTR [eax],al
  445e4b:	add    ah,dh
  445e4d:	test   al,0x77
  445e4f:	aad    0x47
  445e51:	scas   al,BYTE PTR es:[edi]
  445e52:	jnp    0x445e63
  445e54:	dec    edx
  445e55:	sbb    ax,0xd
  445e59:	dec    ebp
  445e5a:	adc    BYTE PTR [ebx],ch
  445e5c:	jne    0x445e08
  445e5e:	leavew 
  445e60:	add    al,0xa1
  445e62:	pop    es
  445e63:	test   al,dh
  445e65:	nop
  445e66:	add    BYTE PTR [eax],al
  445e68:	rdtsc  
  445e6a:	pop    es
  445e6b:	je     0x445e38
  445e6d:	test   al,0xcb
  445e6f:	rol    DWORD PTR [ebx-0x7df03f39],0x54
  445e76:	and    ebp,eax
  445e78:	outs   dx,DWORD PTR ds:[esi]
  445e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445e7a:	jge    0x445e7c
  445e7c:	mov    esp,0xf502f8d4
  445e81:	sub    esi,DWORD PTR [esp-0x50]
  445e85:	sub    al,0xbf
  445e87:	sub    esi,DWORD PTR [ebp-0x71d7e706]
  445e8d:	jns    0x445e85
  445e8f:	jge    0x445ead
  445e91:	mov    bh,0xfc
  445e93:	jmp    FWORD PTR [esi]
  445e95:	popa   
  445e96:	jp     0x445e89
  445e98:	mov    gs,WORD PTR [ecx-0x7e]
  445e9b:	out    0xb6,eax
  445e9d:	xor    bh,bh
  445e9f:	xchg   DWORD PTR [edx+0x2cfebf20],esi
  445ea5:	in     eax,0x2
  445ea7:	jge    0x445e9c
  445ea9:	mov    ecx,0x2eb44174
  445eae:	scas   al,BYTE PTR es:[edi]
  445eaf:	std    
	...
  445ec4:	aaa    
  445ec5:	jle    0x445ec9
  445ec7:	in     eax,dx
  445ec8:	pop    ecx
  445ec9:	and    cl,cl
  445ecb:	and    ecx,ecx
  445ecd:	xor    DWORD PTR [ecx+0x188fbd23],esp
  445ed3:	stc    
  445ed4:	jmp    0x4b39:0xb54770b5
  445edb:	jmp    DWORD PTR [ecx-0x2]
  445ede:	add    al,0x7c
  445ee0:	cdq    
  445ee1:	mov    ss,eax
  445ee3:	lods   eax,DWORD PTR ds:[esi]
  445ee4:	jp     0x445f07
  445ee6:	cmp    al,BYTE PTR [esi-0x2aac646]
  445eec:	xor    bh,BYTE PTR [esi-0x3]
  445eef:	xchg   edx,edi
  445ef1:	mov    eax,0x39b64174
  445ef6:	aas    
  445ef7:	add    al,0xa6
  445ef9:	inc    eax
  445efa:	jnp    0x445f58
  445efc:	shr    DWORD PTR [esi+0x1d920055],1
  445f02:	inc    edi
  445f03:	test   DWORD PTR [edx+0x3808c43e],ecx
  445f09:	or     al,0x4
  445f0b:	add    BYTE PTR [ebp-0x3df69bc7],dh
  445f11:	or     DWORD PTR ds:0x288feb09,edi
  445f17:	and    eax,0xe3e712b1
  445f1c:	cdq    
  445f1d:	(bad)  
  445f1e:	out    0x3d,al
  445f20:	cmp    BYTE PTR [ebx-0x5286a4a2],dl
  445f26:	inc    ecx
  445f27:	dec    ecx
	...
  445f3c:	cmp    BYTE PTR [esi+ecx*4-0x7eed523c],ch
  445f43:	add    al,0xb5
  445f45:	(bad)  
  445f46:	fs mov sp,0x369c
  445f4b:	inc    ebx
  445f4c:	lods   al,BYTE PTR ds:[esi]
  445f4d:	sub    eax,0x12a92528
  445f52:	out    0xe3,eax
  445f54:	ror    DWORD PTR [edi-0x64293fa2],1
  445f5a:	out    0x3c,al
  445f5c:	cmp    BYTE PTR [ebx-0x535da491],dl
  445f62:	icebp  
  445f63:	dec    eax
  445f64:	cmp    BYTE PTR [ebp+ebx*2+0xb53303c],ch
  445f6b:	adc    ah,ah
  445f6d:	lds    ebp,FWORD PTR [ebp-0x31]
  445f70:	xchg   esi,eax
  445f71:	addr16 push cs
  445f73:	inc    ebp
  445f74:	mov    esp,0xb5038511
  445f79:	(bad)  
  445f7a:	out    0x3c,al
  445f7c:	inc    eax
  445f7d:	sub    eax,DWORD PTR [ebx]
  445f7f:	adc    al,0xb5
  445f81:	and    al,BYTE PTR [edi]
  445f83:	sbb    eax,0xcb78f72
  445f88:	jp     0x445fac
  445f8a:	aas    
  445f8b:	sbb    eax,0x7c429f72
  445f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445f91:	ja     0x445f29
  445f93:	pop    esp
  445f94:	jmp    DWORD PTR [esi-0x48]
  445f97:	shl    eax,1
  445f99:	jbe    0x445f33
  445f9b:	push   esp
  445f9c:	pop    ecx
  445f9d:	pop    ss
  445f9e:	jb     0x445fbc
	...
  445fb4:	mov    BYTE PTR [edi+0x53f028ff],dh
  445fba:	and    al,0xb9
  445fbc:	mov    ecx,0xb81171d7
  445fc1:	and    esp,DWORD PTR [edx*1+0x58249fb0]
  445fc8:	mov    cl,0xd7
  445fca:	xor    al,0x38
  445fcc:	fs jne 0x445ff4
  445fcf:	sbb    cl,ch
  445fd1:	repz test BYTE PTR [ebp-0x5a7a9866],dh
  445fd8:	rcr    BYTE PTR [edi+0x35],cl
  445fdb:	sbb    BYTE PTR [eax*4-0xc76c7db],al
  445fe2:	test   BYTE PTR [esi],dl
  445fe4:	mov    ecx,0xb9f9e4bc
  445fe9:	lahf   
  445fea:	and    al,0x18
  445fec:	mov    ecx,0xa1f171da
  445ff1:	(bad)  
  445ff3:	inc    ebp
  445ff4:	jns    0x445f96
  445ff6:	and    al,0xfa
  445ff8:	outs   dx,BYTE PTR ds:[esi]
  445ff9:	shr    esp,1
  445ffb:	inc    ebp
  445ffc:	imul   esp,DWORD PTR [ebx],0x4b5e1524
  446002:	and    al,0xf1
  446004:	jns    0x446079
  446006:	cli    
  446007:	(bad)  
  446008:	jp     0x445fec
  44600a:	imul   DWORD PTR [esi]
  44600c:	imul   BYTE PTR [edx-0x70491c4a]
  446012:	add    dl,dl
  446014:	popf   
  446015:	neg    DWORD PTR [edi]
  446017:	cmp    eax,0x0
	...
  44602c:	lods   eax,DWORD PTR ds:[esi]
  44602d:	loope  0x44602e
  44602f:	call   0xf2faefea
  446034:	mov    dh,0x8f
  446036:	add    BYTE PTR [edx+0x36f3e18d],dl
  44603c:	jbe    0x445fe8
  44603e:	mov    dh,0xf3
  446040:	mov    dh,0x8f
  446042:	add    BYTE PTR [eax],al
  446044:	daa    
  446045:	mov    ds:0x82707483,eax
  44604a:	mov    cl,0xfc
  44604c:	retf   
  44604d:	into   
  44604e:	clc    
  44604f:	mov    ecx,0x8e86
  446054:	pop    es
  446055:	xchg   esp,eax
  446056:	add    DWORD PTR [eax+esi*4-0x5],0x7d
  44605b:	leave  
  44605c:	jo     0x445feb
  44605e:	or     DWORD PTR [eax+0x44],0xc51c4025
  446065:	mov    ds:0x98cf00e3,eax
  44606a:	inc    eax
  44606b:	rcr    BYTE PTR [edi-0x72],0xfa
  44606f:	je     0x44608f
  446071:	and    eax,0x8a508bd5
  446076:	pop    eax
  446077:	mov    esp,edi
  446079:	es push eax
  44607b:	sbb    al,0xdd
  44607d:	dec    esp
  44607e:	sti    
  44607f:	sub    ch,BYTE PTR [ebp-0x18fc26ac]
  446085:	jp     0x446008
  446087:	js     0x446091
  446089:	sub    edx,DWORD PTR [edx+0x3c]
  44608c:	push   edi
  44608d:	test   WORD PTR [eax+eax*1+0x0],bx
	...
  4460a2:	add    BYTE PTR [eax],al
  4460a4:	lock mov cl,0x31
  4460a7:	pop    esp
  4460a8:	mov    al,0x9f
  4460aa:	ins    DWORD PTR es:[edi],dx
  4460ab:	adc    al,0xc7
  4460ad:	sbb    DWORD PTR ds:[eax],0x55
  4460b1:	repnz sbb al,0x14
  4460b4:	fistp  QWORD PTR [ebx+eax*4]
  4460b7:	pop    eax
  4460b8:	ror    BYTE PTR [ebx+eiz*8],1
  4460bb:	or     ecx,ebp
  4460bd:	icebp  
  4460be:	sbb    al,0x14
  4460c0:	adc    eax,0x9c01b37d
  4460c5:	lea    eax,[eax]
  4460c7:	shr    DWORD PTR [edi],cl
  4460c9:	out    0x7b,al
  4460cb:	cmp    eax,0x3b53cc
  4460d0:	mov    ch,0xb4
  4460d2:	iret   
  4460d3:	pop    es
  4460d4:	mov    edx,0x30943e5
  4460d9:	cld    
  4460da:	icebp  
  4460db:	jo     0x4460b3
  4460dd:	std    
  4460de:	jnp    0x446146
  4460e0:	lods   eax,DWORD PTR ds:[esi]
  4460e1:	sub    eax,0xddc123a1
  4460e6:	and    dh,BYTE PTR [edx-0x51]
  4460e9:	jge    0x44610d
  4460eb:	jge    0x446163
  4460ed:	sahf   
  4460ee:	jnp    0x446148
  4460f0:	mov    ecx,0x4624f74d
  4460f5:	inc    edx
  4460f6:	and    edi,DWORD PTR [ebp+0x7b]
  4460f9:	sahf   
  4460fa:	jnp    0x44616c
  4460fc:	mov    cl,0x1d
  4460fe:	mov    eax,ds:0x219dc523
  446103:	jb     0x4460bd
  446105:	lea    esp,[ecx]
  446107:	jg     0x446109
	...
  446119:	add    BYTE PTR [eax],al
  44611b:	add    dh,dh
  44611d:	mov    bh,0x3
  44611f:	add    BYTE PTR [ebp+0x1e0fa51f],dh
  446125:	mov    ah,0x15
  446127:	cmc    
  446128:	add    bh,BYTE PTR [edx-0x7c]
  44612b:	shl    DWORD PTR [edi+esi*4+0xf2cfffc],0xed
  446133:	jl     0x44612e
  446135:	mul    BYTE PTR [edi+0x55]
  446138:	mov    BYTE PTR [eax],bl
  44613a:	mov    ds:0x37e2f1bc,al
  44613f:	int3   
  446140:	jmp    0x210993f
  446145:	ins    BYTE PTR es:[edi],dx
  446146:	ja     0x446134
  446148:	ss jmp 0x446112
  44614b:	test   BYTE PTR [eax-0x3a],ch
  44614e:	xadd   BYTE PTR [edx+0x74853c21],ch
  446155:	neg    DWORD PTR [eax+edx*1-0x42]
  446159:	imul   DWORD PTR [ecx+0x4b8ff886]
  44615f:	jnp    0x446157
  446161:	imul   DWORD PTR [edi-0x41]
  446164:	pop    esi
  446165:	push   ss
  446166:	sub    al,0x94
  446168:	xor    dl,BYTE PTR [edx+0x53]
  44616b:	jnp    0x446163
  44616d:	out    0x6f,eax
  44616f:	mov    edi,0x4424163e
  446174:	mov    al,ds:0xee7919cf
  446179:	fwait
  44617a:	fs xor ch,cl
  44617d:	test   DWORD PTR [esi-0x2],ecx
	...
  446194:	das    
  446195:	add    al,0xe7
  446197:	add    esi,DWORD PTR [ebp-0x46731d71]
  44619d:	push   eax
  44619e:	rol    DWORD PTR [ecx+edi*8+0x5a],0x8b
  4461a3:	ja     0x44618e
  4461a5:	pop    edx
  4461a6:	add    esp,0xffffffe9
  4461a9:	int    0xb4
  4461ab:	push   ebp
  4461ac:	xor    BYTE PTR [edx],ah
  4461ae:	iret   
  4461af:	js     0x446160
  4461b1:	push   ss
  4461b2:	mov    ah,0x47
  4461b4:	pop    ebp
  4461b5:	cwde   
  4461b6:	out    0x3,eax
  4461b8:	mov    ch,0xff
  4461ba:	mov    BYTE PTR [eax+0x4435289],al
  4461c0:	xchg   BYTE PTR [ecx-0x72027f51],dl
  4461c6:	jbe    0x446219
  4461c8:	cmp    dl,BYTE PTR [edx+0x3]
  4461cb:	or     ebp,edi
  4461cd:	and    ah,ah
  4461cf:	jp     0x446247
  4461d1:	stos   DWORD PTR es:[edi],eax
  4461d2:	ins    DWORD PTR es:[edi],dx
  4461d3:	cmp    esi,DWORD PTR [esi]
  4461d5:	iret   
  4461d6:	push   ebx
  4461d7:	sbb    edi,DWORD PTR [eax]
  4461d9:	push   edx
  4461da:	sti    
  4461db:	js     0x446182
  4461dd:	shl    BYTE PTR [ebx],1
  4461df:	hlt    
  4461e0:	or     BYTE PTR [esi+0x5a3003e7],0xd7
  4461e7:	jp     0x4461a4
  4461e9:	adc    al,BYTE PTR [eax]
  4461eb:	jmp    0x60546e9a
  4461f0:	pushf  
  4461f1:	and    al,0x0
  4461f3:	in     eax,dx
  4461f4:	push   ecx
  4461f5:	rol    BYTE PTR [ecx],1
  4461f7:	call   0x4461fc
	...
  44620c:	mov    dh,0x8f
  44620e:	add    dl,bl
  446210:	test   BYTE PTR [ecx-0x7b],0x84
  446214:	pop    ebx
  446215:	in     al,0x4c
  446217:	inc    edx
  446218:	mov    bh,0x8f
  44621a:	add    cl,ch
  44621c:	mov    ebp,0x88e471e4
  446221:	and    al,0x7c
  446223:	or     al,0x15
  446225:	nop
  446226:	jae    0x446214
  446228:	jne    0x446286
  44622a:	fcomp  st(3)
  44622c:	in     eax,0x5c
  44622e:	(bad)
  446231:	push   cs
  446232:	pop    ebx
  446233:	dec    ebp
  446234:	sub    al,0xa7
  446236:	clc    
  446237:	jmp    0x6d0a6ef2
  44623c:	adc    dh,BYTE PTR [ebx+0x0]
  44623f:	out    0x39,al
  446241:	sbb    al,0x4b
  446243:	test   DWORD PTR [ebp-0x11c0db2b],esi
  446249:	cmp    BYTE PTR [edi],0x6a
  44624c:	jg     0x4461e6
  44624e:	jb     0x446256
  446250:	lea    esp,[edx]
  446252:	or     BYTE PTR [esp+eax*8+0x29],ah
  446256:	or     eax,0x31b686c
  44625b:	push   0x7e
  44625d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44625e:	ins    BYTE PTR es:[edi],dx
  44625f:	jecxz  0x44627e
  446261:	dec    eax
  446262:	jge    0x446285
  446264:	jns    0x4462af
  446266:	test   esp,ecx
  446268:	aam    0xe3
  44626a:	sub    al,0xa9
  44626c:	pop    ds
  44626d:	push   cs
  44626e:	inc    ebx
  44626f:	outs   dx,DWORD PTR ds:[esi]
	...
  446284:	dec    ecx
  446285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446286:	clc    
  446287:	jmp    0x4c0f42
  44628c:	inc    ecx
  44628d:	aaa    
  44628e:	and    al,0x0
  446290:	pushf  
  446291:	xchg   edx,eax
  446292:	add    BYTE PTR [eax+0x54c16fa],dl
  446298:	sbb    dl,bh
  44629a:	sti    
  44629b:	dec    ebx
  44629c:	mov    DWORD PTR [esi],ebp
  44629e:	jnp    0x446260
  4462a0:	sahf   
  4462a1:	clc    
  4462a2:	or     DWORD PTR [ecx+ebx*4+0xe],0xdc92f87b
  4462aa:	loope  0x446237
  4462ac:	cdq    
  4462ad:	jnp    0x4462da
  4462af:	rcr    cl,0x3d
  4462b2:	je     0x4462e0
  4462b4:	mov    edx,0x4c473c0e
  4462b9:	ficomp WORD PTR [eax]
  4462bb:	(bad)  
  4462bd:	jg     0x4462fe
  4462bf:	movntps XMMWORD PTR [edi-0x17287bbb],xmm7
  4462c6:	adc    al,0x66
  4462c8:	aad    0x97
  4462ca:	inc    esi
  4462cb:	btc    DWORD PTR [edi+0x3f],edi
  4462cf:	data16 repz xlat BYTE PTR ds:[ebx]
  4462d2:	inc    ebp
  4462d3:	test   BYTE PTR [edi+0x408d00e8],dl
  4462d9:	mov    edi,0x4c17407c
  4462de:	push   0xffffffd4
  4462e0:	xchg   DWORD PTR [ecx+0x7b],ebx
  4462e3:	call   0x3b8604
	...
  4462fc:	mov    bl,0x52
  4462fe:	je     0x446336
  446300:	inc    esp
  446301:	fimul  WORD PTR [ebx]
  446303:	(bad)  
  446304:	sbb    DWORD PTR [esi+0x60],eax
  446307:	dec    ebp
  446308:	sbb    al,0x92
  44630a:	mov    edi,0x452bac45
  44630f:	inc    eax
  446310:	int3   
  446311:	adc    al,BYTE PTR [ebp-0x1c]
  446314:	out    0xa1,eax
  446316:	mov    al,0xe0
  446318:	mov    ch,0x6c
  44631a:	(bad)  
  44631b:	call   DWORD PTR [ecx-0x4afffd46]
  446321:	pop    ds
  446322:	enter  0x6ddb,0x97
  446326:	iret   
  446327:	aas    
  446328:	mov    ch,0x8b
  44632a:	add    bh,dh
  44632c:	mov    ds:0x914345b7,al
  446331:	mov    bh,0x3
  446333:	add    BYTE PTR [ebp-0xf7aefff],dh
  446339:	call   0xe3c7:0xee61438b
  446340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446341:	mov    dh,0xfc
  446343:	(bad)  
  446344:	cmp    al,0x6c
  446346:	and    al,0x85
  446348:	add    bl,al
  44634a:	mov    DWORD PTR [esi],ecx
  44634c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44634d:	test   BYTE PTR [ebx-0x37dfa2bd],0xf3
  446354:	cmp    al,0xf4
  446356:	dec    esp
  446357:	test   eax,edi
  446359:	cmp    dh,BYTE PTR [ebp-0x1]
  44635c:	inc    edx
  44635d:	mov    bh,0xfc
  44635f:	int3   
	...
  446374:	push   ebp
  446375:	and    al,bl
  446377:	out    0x3e,eax
  446379:	dec    edi
  44637a:	nop
  44637b:	dec    eax
  44637c:	sub    dh,BYTE PTR [eax]
  44637e:	rcl    bl,0x2c
  446381:	in     al,dx
  446382:	push   esp
  446383:	xchg   DWORD PTR [eax+0x5a],ebp
  446386:	cmp    dl,0xb4
  446389:	sti    
  44638a:	add    eax,0xfcb9613b
  44638f:	dec    DWORD PTR [esi]
  446391:	mov    cl,0x81
  446393:	cli    
  446394:	mov    bh,0x23
  446396:	or     bh,BYTE PTR [ebx]
  446398:	test   DWORD PTR [eax+0x39bafffc],edi
  44639e:	sub    edi,edi
  4463a0:	loop   0x446358
  4463a2:	mov    DWORD PTR [ebx-0x47],edx
  4463a5:	(bad)  
  4463a6:	jo     0x44637f
  4463a8:	loop   0x446362
  4463aa:	loopne 0x44633a
  4463ac:	jb     0x44633d
  4463ae:	pop    esi
  4463af:	mov    edi,0x383418e6
  4463b4:	xor    BYTE PTR [ebx-0x49],dl
  4463b7:	lea    esp,[esi]
  4463b9:	lods   al,BYTE PTR ds:[esi]
  4463ba:	ins    BYTE PTR es:[edi],dx
  4463bb:	inc    ebp
  4463bc:	rcl    ecx,cl
  4463be:	pop    esi
  4463bf:	(bad)  
  4463c0:	mov    bl,0x94
  4463c2:	jb     0x4463c7
  4463c4:	xor    bh,dl
  4463c6:	fst    QWORD PTR [ecx+0xe]
  4463c9:	call   0x8b09:0x8fbac7a1
  4463d0:	test   BYTE PTR [ecx-0x7a031182],0x6e
  4463d7:	mov    DWORD PTR [eax],0x0
	...
  4463e9:	add    BYTE PTR [eax],al
  4463eb:	add    BYTE PTR [edx-0x6c],ah
  4463ee:	xor    al,BYTE PTR [eax+esi*1]
  4463f1:	push   edx
  4463f2:	xchg   DWORD PTR ds:0xbdb1975,eax
  4463f8:	sub    eax,0xfe8cf752
  4463fd:	ret    
  4463fe:	ror    BYTE PTR [ecx+esi*4-0x9753669],0x81
  446406:	ds push cs
  446408:	mov    dh,dl
  44640a:	sub    bh,al
  44640c:	ret    0xc12f
  44640f:	mov    bh,BYTE PTR [esi-0x7f]
  446412:	pop    esi
  446413:	dec    ebp
  446414:	fcomp  st(1)
  446416:	pop    ebp
  446417:	dec    ecx
  446418:	xor    BYTE PTR [edx],ah
  44641a:	pop    ds
  44641b:	jle    0x44642f
  44641d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44641e:	out    0x3,al
  446420:	clc    
  446421:	mov    al,0x5d
  446423:	iret   
  446424:	push   es
  446425:	sar    cl,0x8c
  446428:	outs   dx,BYTE PTR ds:[esi]
  446429:	mov    bh,0x6f
  44642b:	(bad)  
  44642c:	cli    
  44642d:	adc    DWORD PTR [ebx+0x8fb596],esi
  446433:	jmp    0x5d3506ee
  446438:	(bad)
  44643b:	fs test eax,0xb6e99518
  446441:	pop    DWORD PTR [eax]
  446443:	add    ah,BYTE PTR [edi+0x6a]
  446446:	mov    esi,0xf820bf60
  44644b:	je     0x4463ce
  44644d:	test   al,0xb7
  44644f:	call   0x446454
	...
  446464:	mov    dh,0x8f
  446466:	add    BYTE PTR [edx-0x4eb4f32a],bl
  44646c:	xor    esp,ebx
  44646e:	jae    0x446464
  446470:	inc    ebx
  446471:	in     al,dx
  446472:	and    ebp,ecx
  446474:	mov    dh,0x8f
  446476:	add    BYTE PTR [eax+0x14bf0ece],bh
  44647c:	mov    ebx,0xc2fdc00e
  446481:	push   ss
  446482:	push   eax
  446483:	jle    0x4464d6
  446485:	sar    ah,cl
  446487:	cwde   
  446488:	das    
  446489:	aas    
  44648a:	clc    
  44648b:	sub    BYTE PTR [ebp-0x499ebd30],0x8f
  446492:	add    cl,ch
  446494:	xor    DWORD PTR [edi-0x10],ecx
  446497:	jmp    0x446457
  446499:	test   al,0xf8
  44649b:	jmp    0xad439256
  4464a0:	adc    ebp,edi
  4464a2:	jb     0x44647b
  4464a4:	sub    DWORD PTR [esi-0x14],eax
  4464a7:	out    0x3a,al
  4464a9:	int    0xff
  4464ab:	call   0x198f7166
  4464b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4464b1:	loopne 0x4464c1
  4464b3:	jb     0x4464a8
  4464b5:	xchg   esi,eax
  4464b6:	or     DWORD PTR [esi-0x5e],ebx
  4464b9:	aas    
  4464ba:	xor    eax,0x8298baac
  4464bf:	add    BYTE PTR [eax],dl
  4464c1:	push   eax
  4464c2:	idiv   edi
  4464c4:	addr16 fld st(4)
  4464c7:	and    eax,DWORD PTR [eax]
	...
  4464d9:	add    BYTE PTR [eax],al
  4464db:	add    BYTE PTR [ecx+0x66],ah
  4464de:	xor    DWORD PTR [ebp-0x70],0xcbd06da3
  4464e5:	or     bh,dl
  4464e7:	(bad)  
  4464e8:	jmp    0x44654c
  4464ea:	adc    DWORD PTR [ebp-0x20],0x18
  4464ee:	retf   0xd475
  4464f1:	adc    eax,0xc125fc45
  4464f6:	in     al,dx
  4464f7:	mov    ecx,DWORD PTR [ebp+0x16]
  4464fa:	cmp    eax,0xc0c117e8
  4464ff:	lea    edx,[eax+0x67cb8316]
  446505:	pop    eax
  446506:	add    DWORD PTR [ebp+0x24],0x8cfff923
  44650d:	mov    ?,ebx
  44650f:	sar    BYTE PTR [edi],1
  446511:	imul   esi,DWORD PTR [ebx],0x55
  446514:	dec    eax
  446515:	ficom  WORD PTR ds:0x9cc7608d
  44651b:	nop
  44651c:	pop    ebx
  44651d:	sbb    DWORD PTR [esi],esi
  44651f:	sub    edx,DWORD PTR [ebx]
  446521:	sbb    al,al
  446523:	jle    0x44656d
  446525:	sar    BYTE PTR [ecx],1
  446527:	adc    DWORD PTR [edx-0x58400473],0xffffffc8
  44652e:	in     al,0x72
  446530:	not    DWORD PTR [esi]
  446532:	ins    DWORD PTR es:[edi],dx
  446533:	les    esp,FWORD PTR [edi+0x518bd0c8]
  446539:	xchg   esi,eax
  44653a:	mov    bh,0x1
  44653c:	or     al,0x8e
  44653e:	add    bl,dl
	...
  446554:	jae    0x4464e4
  446556:	iret   
  446557:	mov    DWORD PTR [ecx+0x3a],ebx
  44655a:	adc    DWORD PTR [ebp+0x74],0xb501f80e
  446561:	add    eax,DWORD PTR ds:0xfddbff7f
  446567:	push   DWORD PTR [ebp-0x1282fa83]
  44656d:	mov    ch,0xb7
  44656f:	pop    es
  446570:	xor    al,0x9e
  446572:	int3   
  446573:	std    
  446574:	fidiv  DWORD PTR [edi-0x1dc19a53]
  44657a:	test   DWORD PTR [ebx-0x5f],esi
  44657d:	sbb    eax,0x28b18803
  446582:	xchg   BYTE PTR [edx],cl
  446584:	das    
  446585:	imul   eax,DWORD PTR [eax-0x78],0xfffffff9
  446589:	inc    edi
  44658a:	add    al,0x85
  44658c:	mov    bl,0x1d
  44658e:	shl    bh,1
  446590:	into   
  446591:	out    dx,al
  446592:	inc    ebx
  446593:	div    DWORD PTR [edi+0x1bcfd82f]
  446599:	and    cl,cl
  44659b:	(bad)  
  44659c:	mov    bh,0xff
  44659e:	sahf   
  44659f:	stc    
  4465a0:	cmp    dl,0x85
  4465a3:	inc    ebx
  4465a4:	jge    0x4465d2
  4465a6:	cmp    eax,0xdfbccc74
  4465ab:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4465ad:	add    al,0xa3
  4465af:	xchg   BYTE PTR [eax],cl
  4465b1:	lds    eax,FWORD PTR [ebp-0x3816b2ad]
  4465b7:	sldt   WORD PTR [eax]
	...
  4465ca:	add    BYTE PTR [eax],al
  4465cc:	cmc    
  4465cd:	push   ds
  4465ce:	loopne 0x4465de
  4465d0:	ds hlt 
  4465d2:	or     al,0x87
  4465d4:	mov    cl,0x34
  4465d6:	xchg   BYTE PTR [ebx+0x5d],al
  4465d9:	cs fdivr st,st(3)
  4465dc:	inc    eax
  4465dd:	fwait
  4465de:	xchg   DWORD PTR [eax],eax
  4465e0:	mov    ch,0xb6
  4465e2:	cld    
  4465e3:	test   BYTE PTR [eax-0x3e],bh
  4465e6:	add    ecx,DWORD PTR [eax]
  4465e8:	cs in  al,dx
  4465ea:	adc    al,0x55
  4465ec:	jb     0x44657d
  4465ee:	jo     0x446603
  4465f0:	fmul   st,st(7)
  4465f2:	mov    eax,0x2643168a
  4465f7:	ficomp DWORD PTR [ebp-0x19]
  4465fa:	out    0x3,eax
  4465fc:	mov    ch,0x8f
  4465fe:	mov    eax,ds:0x2642d68a
  446603:	mov    bl,ah
  446605:	cmp    bl,BYTE PTR [esi+0x2f]
  446608:	pop    edx
  446609:	mov    bl,0x16
  44660b:	add    DWORD PTR [ebp+0xac8888f],esi
  446611:	dec    ebp
  446612:	out    0xf0,eax
  446614:	not    DWORD PTR [esi]
  446616:	sub    al,0x40
  446618:	xor    cl,BYTE PTR [ebx]
  44661a:	(bad)  
  44661b:	aas    
  44661c:	lods   al,BYTE PTR ds:[esi]
  44661d:	mov    al,ds:0xa2898f6f
  446622:	mov    ecx,0x8efa3a3d
  446627:	aas    
  446628:	pushf  
  446629:	mov    al,ds:0xa2699f5f
  44662e:	mov    eax,ds:0x3d
	...
  446643:	add    BYTE PTR [edx],dh
  446645:	fidiv  DWORD PTR [esi+0x5fa07c3f]
  44664b:	jg     0x4466b6
  44664d:	mov    ds:0x13d73d89,al
  446652:	pop    esp
  446653:	cmp    al,0x6e
  446655:	mov    al,ds:0x122ea679
  44665a:	cmp    DWORD PTR [edi],0x5c
  44665d:	mov    al,ds:0xd72e9000
  446662:	arpl   WORD PTR ds:0x876b294c,di
  446668:	jns    0x44660c
  44666a:	push   ecx
  44666b:	cmp    eax,0x448413d7
  446670:	mov    al,cs:0xf23ea641
  446676:	jp     0x4466b7
  446678:	sbb    al,0xa0
  44667a:	call   DWORD PTR [eax+ebp*1+0xc]
  44667e:	lock sub al,0xd0
  446681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446682:	test   BYTE PTR [edx+esi*4-0x3dee7cf8],ch
  446689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44668a:	clc    
  44668b:	fs repnz mov eax,ecx
  44668f:	fs jmp 0xb64b5f39
  446695:	(bad)  
  446696:	(bad)  
  446697:	call   0xf53872cb
  44669c:	cdq    
  44669d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44669e:	test   BYTE PTR [ecx+0x34e03792],ch
  4466a4:	icebp  
  4466a5:	lahf   
  4466a6:	xchg   DWORD PTR [eax+eax*1+0x0],esp
	...
  4466ba:	add    BYTE PTR [eax],al
  4466bc:	call   0x47c:0x79d6f8a4
  4466c3:	sti    
  4466c4:	jbe    0x446665
  4466c6:	test   DWORD PTR [esi*8-0x4e2e3494],esi
  4466cd:	pop    DWORD PTR [eax]
  4466cf:	jmp    0xaec943c3
  4466d4:	imul   edx,DWORD PTR [esp+ebp*8],0x44
  4466d8:	fimul  WORD PTR [eax-0x7]
  4466db:	sahf   
  4466dc:	ror    ebx,0xcb
  4466df:	shr    BYTE PTR [ebx-0x46d53fad],cl
  4466e5:	and    bh,ch
  4466e7:	stos   BYTE PTR es:[edi],al
  4466e8:	mov    dh,0x8f
  4466ea:	out    0xa3,eax
  4466ec:	mov    eax,0x9962008f
  4466f1:	inc    ecx
  4466f2:	test   DWORD PTR [ebx+0x4d],edi
  4466f5:	fidiv  WORD PTR [ebx-0x2]
  4466f8:	xor    esp,DWORD PTR [edx+0x1465fa73]
  4466fe:	stc    
  4466ff:	arpl   WORD PTR [edi-0x319eefeb],bx
  446705:	dec    ecx
  446706:	mov    BYTE PTR [eax],al
  446708:	or     eax,0xea8539d3
  44670d:	in     eax,0xe9
  44670f:	pop    ebx
  446710:	inc    edx
  446711:	push   eax
  446712:	int3   
  446713:	int3   
  446714:	mov    al,0x4e
  446716:	int3   
  446717:	int3   
  446718:	ror    BYTE PTR [esi-0x34],0xcc
  44671c:	ror    BYTE PTR [esi-0x34],1
  44671f:	int3   
	...
  446734:	xchg   edi,eax
  446735:	pop    ebx
  446736:	dec    ebp
  446737:	mov    esi,eax
  446739:	rol    BYTE PTR [ebx-0x7c3c1bab],0xf8
  446740:	neg    DWORD PTR [eax+0x6e]
  446743:	outs   dx,BYTE PTR ds:[esi]
  446744:	push   edi
  446745:	int    0x4
  446747:	(bad)  
  446748:	fmul   DWORD PTR [eax+0x5799894b]
  44674e:	dec    esi
  44674f:	jmp    0x446720
  446751:	pop    es
  446752:	inc    ecx
  446753:	add    BYTE PTR [edi-0x20],dl
  446756:	hlt    
  446757:	mov    esp,DWORD PTR [esi-0x62]
  44675a:	out    dx,eax
  44675b:	ja     0x446717
  44675d:	or     BYTE PTR [esp+0x928c],ah
  446764:	pop    ss
  446765:	leave  
  446766:	or     al,0x53
  446768:	stos   BYTE PTR es:[edi],al
  446769:	(bad)  
  44676a:	not    DWORD PTR [ebp-0x74]
  44676d:	adc    eax,0x54190cc4
  446772:	jbe    0x446776
  446774:	pop    ss
  446775:	cmp    bh,bl
  446777:	je     0x446709
  446779:	popf   
  44677a:	out    dx,eax
  44677b:	jbe    0x4467b8
  44677d:	push   cs
  44677e:	inc    ebp
  44677f:	or     al,0xe7
  446781:	rol    BYTE PTR [eax],0x8b
  446784:	fisttp QWORD PTR [esi]
  446786:	mov    edi,0x17df433b
  44678b:	test   DWORD PTR [ebp-0x7874ec21],eax
  446791:	scas   al,BYTE PTR es:[edi]
  446792:	(bad)  
  446793:	nop
  446794:	mov    ch,0x32
  446796:	sbb    al,0x86
	...
  4467ac:	leave  
  4467ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4467ae:	test   BYTE PTR [esp+esi*4],bl
  4467b1:	out    0x84,al
  4467b3:	adc    BYTE PTR [ebp+0x33],dh
  4467b6:	cs jae 0x4467de
  4467b9:	xor    edi,eax
  4467bb:	or     edi,DWORD PTR [esi]
  4467bd:	add    eax,DWORD PTR ds:0x3ab10c25
  4467c3:	jno    0x44681e
  4467c5:	fcompp 
  4467c7:	pop    eax
  4467c8:	cs mov edx,edi
  4467cb:	mov    esp,0xcc487c01
  4467d0:	stc    
  4467d1:	arpl   WORD PTR [eax-0x34],cx
  4467d4:	icebp  
  4467d5:	imul   ecx,DWORD PTR [eax-0x34],0xffffffe9
  4467d9:	xor    BYTE PTR ds:0x839c3e53,dh
  4467df:	in     al,dx
  4467e0:	mov    ch,0xa7
  4467e2:	cld    
  4467e3:	jmp    DWORD PTR [esi+0x21]
  4467e6:	fadd   DWORD PTR [edi]
  4467e8:	bound  esi,QWORD PTR [ecx]
  4467ea:	mov    eax,0xafe2380b
  4467ef:	daa    
  4467f0:	xor    dh,dl
  4467f2:	test   al,0x23
  4467f4:	mov    ds:0xf511c4c4,al
  4467f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4467fa:	stos   BYTE PTR es:[edi],al
  4467fb:	call   FWORD PTR [edi+eiz*4]
  4467fe:	stos   BYTE PTR es:[edi],al
  4467ff:	call   FWORD PTR [edi+eiz*4]
  446802:	stos   BYTE PTR es:[edi],al
  446803:	(bad)  
  446804:	jnp    0x4467ad
  446806:	push   cs
  446807:	add    BYTE PTR [ebp+0x73eb24a6],dh
  44680d:	push   cs
  44680e:	ss jge 0x446811
	...
  446821:	add    BYTE PTR [eax],al
  446823:	add    BYTE PTR [ecx-0x45],dh
  446826:	aad    0x54
  446828:	cs adc al,0xd8
  44682b:	mov    esp,0xfb03203
  446830:	cmp    BYTE PTR ds:0x903601af,ah
  446836:	in     al,0xf
  446838:	mov    ch,0x22
  44683a:	add    al,0x3b
  44683c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44683d:	inc    edi
  44683e:	stc    
  44683f:	ret    
  446840:	xor    ah,BYTE PTR [edi]
  446842:	out    0xad,eax
  446844:	sub    ah,BYTE PTR [edi]
  446846:	out    0xad,eax
  446848:	and    ah,BYTE PTR [edi]
  44684a:	out    0x42,eax
  44684c:	mov    ch,0x85
  44684e:	out    0x3,eax
  446850:	mov    ch,0xa7
  446852:	ins    DWORD PTR es:[edi],dx
  446853:	cmp    DWORD PTR [ebx*4+0x3da93f65],ecx
  44685a:	mov    edx,0xb3b331de
  44685f:	inc    esi
  446860:	jo     0x4467fe
  446862:	in     al,0xb5
  446864:	out    0x4c,al
  446866:	repnz push 0xffffffdf
  446869:	nop
  44686a:	inc    BYTE PTR [ecx+0x76]
  44686d:	mov    ds:0x8fb503e6,eax
  446872:	pusha  
  446873:	fmul   st,st(6)
  446875:	push   es
  446876:	fs cmp al,0x2e
  446879:	stc    
  44687a:	out    0x3,al
  44687c:	mov    ch,0x8f
  44687e:	pop    esi
  44687f:	inc    ecx
  446880:	fcom   st(0)
  446882:	adc    eax,0x26a5a456
  446887:	test   DWORD PTR [eax],eax
	...
  446899:	add    BYTE PTR [eax],al
  44689b:	add    BYTE PTR [ebp+0x301b3287],bl
  4468a1:	push   edx
  4468a2:	iret   
  4468a3:	mov    esi,?
  4468a5:	adc    DWORD PTR [edi],0xffffffd3
  4468a8:	in     al,0x40
  4468aa:	outs   dx,BYTE PTR ds:[esi]
  4468ab:	inc    ecx
  4468ac:	(bad)  
  4468ad:	into   
  4468ae:	cwde   
  4468af:	cmp    DWORD PTR [eax+edx*1-0x55],edi
  4468b3:	adc    al,0x5a
  4468b5:	std    
  4468b6:	out    0x3,eax
  4468b8:	mov    ch,0x8
  4468ba:	sbb    al,0x1c
  4468bc:	jb     0x446865
  4468be:	jmp    0xd4e02b
  4468c3:	stos   BYTE PTR es:[edi],al
  4468c4:	inc    eax
  4468c5:	lahf   
  4468c6:	push   ecx
  4468c7:	sbb    ah,BYTE PTR [ebx-0x69]
  4468ca:	push   edx
  4468cb:	std    
  4468cc:	cmp    ebx,edx
  4468ce:	or     esp,DWORD PTR [ecx+esi*8+0x19]
  4468d2:	or     al,0x62
  4468d4:	add    cl,BYTE PTR [ebp+eax*4-0x1825c7e1]
  4468db:	int    0xdc
  4468dd:	xchg   esi,eax
  4468de:	clc    
  4468df:	jb     0x44693b
  4468e1:	test   BYTE PTR [ecx-0x66],dl
  4468e4:	out    0x96,al
  4468e6:	push   edx
  4468e7:	aad    0x31
  4468e9:	ror    DWORD PTR [ebx],cl
  4468eb:	ins    BYTE PTR es:[edi],dx
  4468ec:	jns    0x446907
  4468ee:	or     al,0x72
  4468f0:	jmp    0xe7da:0x4026858b
  4468f7:	mov    eax,ds:0x72f896ac
  4468fc:	cli    
  4468fd:	adc    DWORD PTR [ecx-0x69],0x0
	...
  446911:	add    BYTE PTR [eax],al
  446913:	add    BYTE PTR [edi],al
  446915:	xchg   edi,eax
  446916:	push   edx
  446917:	fnstsw WORD PTR [ecx]
  446919:	ror    DWORD PTR [ebx],cl
  44691b:	fs jno 0x446937
  44691e:	or     al,0x72
  446920:	repz mov eax,DWORD PTR [ebp-0x182ed652]
  446927:	add    eax,0x12f898ef
  44692c:	loopne 0x44694b
  44692e:	adc    eax,0x358b8bea
  446933:	lahf   
  446934:	popa   
  446935:	jg     0x4468bc
  446937:	sbb    al,0xb1
  446939:	cmp    eax,0x3ecc1b4d
  44693e:	adc    al,0x6a
  446940:	ret    0x838b
  446943:	test   eax,0x9a34b23c
  446948:	and    eax,0xc12bfd76
  44694d:	fs pop ebx
  44694f:	add    BYTE PTR [eax+eiz*8],dh
  446952:	or     eax,0x4e7b918b
  446957:	push   ebx
  446958:	lods   al,BYTE PTR ds:[esi]
  446959:	pop    eax
  44695a:	dec    ebp
  44695b:	adc    al,0xdf
  44695d:	pop    edx
  44695e:	or     al,0x85
  446960:	mov    eax,ds
  446962:	loopne 0x44694f
  446964:	dec    edi
  446965:	adc    al,BYTE PTR [ecx+0x0]
  446968:	mov    bh,0xe2
  44696a:	or     BYTE PTR [ebx],bh
  44696c:	jp     0x44694e
  44696e:	or     BYTE PTR [ebx+0x574e7769],cl
  446974:	cmp    eax,0x144d58
	...
  446989:	add    BYTE PTR [eax],al
  44698b:	add    BYTE PTR [edi-0x237af3a6],bl
  446991:	xlat   BYTE PTR ds:[ebx]
  446992:	loope  0x4469cf
  446994:	jnp    0x446975
  446996:	xor    DWORD PTR [ebx-0x387c80bf],ecx
  44699c:	push   eax
  44699d:	mov    ah,0x83
  44699f:	retf   
  4469a0:	test   DWORD PTR [edi+0x42],0x75f4189
  4469a7:	mov    dh,0x0
  4469a9:	mov    cs,WORD PTR [eax-0x517828ab]
  4469af:	adc    BYTE PTR [edx+ecx*4-0x7],dl
  4469b3:	push   cs
  4469b4:	and    al,cl
  4469b6:	add    ecx,DWORD PTR [eax-0xfb2fa44]
  4469bc:	fcom   QWORD PTR [eax]
  4469be:	retf   0x7d75
  4469c1:	xchg   esi,eax
  4469c2:	out    dx,eax
  4469c3:	movups xmm3,xmm5
  4469c6:	idiv   edi
  4469c8:	pop    ebx
  4469c9:	push   es
  4469ca:	jmp    0x4469b5
  4469cc:	int3   
  4469cd:	(bad)  
  4469ce:	idiv   edi
  4469d0:	lahf   
  4469d1:	xlat   BYTE PTR ds:[ebx]
  4469d2:	or     BYTE PTR [ebx],bh
  4469d4:	and    ebx,esi
  4469d6:	sbb    eax,0x41078feb
  4469db:	add    BYTE PTR [ebp-0x51f04833],dh
  4469e1:	or     ch,BYTE PTR [edx+0x1c6b2e16]
  4469e7:	push   edx
  4469e8:	add    bh,BYTE PTR [ecx+0x31]
  4469eb:	push   ebx
  4469ec:	test   eax,0xc4025
	...
  446a01:	add    BYTE PTR [eax],al
  446a03:	add    BYTE PTR [eax],dh
  446a05:	call   0x39c350b9
  446a0a:	scas   al,BYTE PTR es:[edi]
  446a0b:	sbb    BYTE PTR [esi-0x5b],cl
  446a0e:	xchg   DWORD PTR [edi-0x4b],eax
  446a11:	lea    esi,[edi+0x30f33e0f]
  446a17:	xor    eax,0x850dda1d
  446a1c:	push   0x6450cab0
  446a21:	popa   
  446a22:	iret   
  446a23:	adc    esi,DWORD PTR [esi]
  446a25:	je     0x446a2f
  446a27:	xor    ebp,0xfffffffb
  446a2a:	sbb    al,BYTE PTR [ebp+0x53857c70]
  446a30:	in     eax,dx
  446a31:	sub    al,0x46
  446a33:	test   edx,esp
  446a35:	int3   
  446a36:	inc    ebp
  446a37:	and    eax,0x7c33cce5
  446a3c:	mov    cs,ebp
  446a3e:	cmp    DWORD PTR [ebp-0x58],ebp
  446a41:	sub    eax,0x343cf3c7
  446a46:	xchg   DWORD PTR [eax-0x3e],edi
  446a49:	mov    al,0x31
  446a4b:	xchg   ecx,edi
  446a4d:	sub    bh,ch
  446a4f:	clc    
  446a50:	mov    dl,0xc2
  446a52:	ret    
  446a53:	xchg   al,bh
  446a55:	ret    0xd5f5
  446a58:	es nop
  446a5a:	test   DWORD PTR [ebx-0x63],edi
  446a5d:	push   ds
  446a5e:	mov    al,0xf
  446a60:	cmp    al,0x84
  446a62:	cmp    bh,ah
  446a64:	sbb    al,0xe9
  446a66:	xor    ecx,edi
	...
  446a7c:	mov    esi,0xa7b2bd8f
  446a81:	add    al,0x2c
  446a83:	xor    BYTE PTR [edx],bh
  446a85:	cld    
  446a86:	arpl   WORD PTR [ebx-0x73766693],di
  446a8c:	dec    ecx
  446a8d:	or     esp,edi
  446a8f:	ss pop esp
  446a91:	cdq    
  446a92:	daa    
  446a93:	(bad)  
  446a94:	(bad)  
  446a95:	mov    ds:0x89d83ead,eax
  446a9a:	pop    esi
  446a9b:	fdivr  DWORD PTR [esi]
  446a9d:	add    eax,0x1b3213dc
  446aa2:	pop    edi
  446aa3:	sub    al,0xef
  446aa5:	cdq    
  446aa6:	push   ecx
  446aa7:	xor    BYTE PTR ss:[ebx],ah
  446aaa:	test   DWORD PTR [edx+0x2b65a376],0x2fa4081a
  446ab4:	mov    esp,0xc35ea07
  446ab9:	cdq    
  446aba:	pop    ebp
  446abb:	(bad)  
  446abc:	sbb    BYTE PTR ss:[edx],ah
  446abf:	ss cld 
  446ac1:	add    al,0x63
  446ac3:	xor    BYTE PTR [ebp+0x32361198],0x43
  446aca:	or     ecx,DWORD PTR [esi+esi*2+0x30596d97]
  446ad1:	cwde   
  446ad2:	clts   
  446ad4:	iret   
  446ad5:	cwde   
  446ad6:	icebp  
  446ad7:	inc    esi
  446ad8:	stc    
  446ad9:	retf   
  446ada:	xchg   ebp,eax
  446adb:	int    0x65
  446add:	add    al,0x3b
  446adf:	loopne 0x446ae1
	...
  446af1:	add    BYTE PTR [eax],al
  446af3:	add    BYTE PTR [edx-0x391fdcfc],ch
  446af9:	add    al,0x23
  446afb:	loopne 0x446abf
  446afd:	inc    edx
  446afe:	xor    eax,0x4f3ef3d4
  446b03:	pusha  
  446b04:	or     al,0x4d
  446b06:	out    0x9f,eax
  446b08:	lea    esp,[edx+0x0]
  446b0b:	jmp    0x8844fac6
  446b10:	jne    0x446aea
  446b12:	cmp    al,0xe9
  446b14:	test   esp,ecx
  446b16:	xchg   BYTE PTR ds:0x60649055,ah
  446b1c:	mov    bl,BYTE PTR [eax+0x12b6e9f8]
  446b22:	inc    esp
  446b23:	int    0x66
  446b25:	adc    ebx,DWORD PTR [eax-0xf]
  446b28:	cmp    eax,0x45c5244b
  446b2d:	add    DWORD PTR [ebp-0x5e54507],0x85630567
  446b37:	mov    ch,0x12
  446b39:	pop    esp
  446b3a:	jge    0x446b8f
  446b3c:	jecxz  0x446b61
  446b3e:	add    al,0x12
  446b40:	out    0x1d,eax
  446b42:	sub    dh,BYTE PTR [ebp+eiz*1+0x1e]
  446b46:	mov    ebx,DWORD PTR [ebp-0x1d7a807b]
  446b4c:	aas    
  446b4d:	inc    edi
  446b4e:	or     al,0x6a
  446b50:	cmp    al,0x8c
  446b52:	add    BYTE PTR [edx+esi*2+0xe7ff27],bl
	...
  446b69:	add    BYTE PTR [eax],al
  446b6b:	add    BYTE PTR [esi-0x41557a71],dh
  446b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446b73:	in     eax,0xb6
  446b75:	(bad)  
  446b76:	mov    bh,0xe8
  446b78:	mov    dh,0x8f
  446b7a:	add    BYTE PTR [edx-0xc],dh
  446b7d:	(bad)
  446b81:	pop    DWORD PTR [eax]
  446b83:	add    cl,BYTE PTR [ecx+0x33]
  446b86:	mov    esp,ebp
  446b88:	mov    dh,0x8f
  446b8a:	add    cl,ch
  446b8c:	xor    eax,0x833617cc
  446b91:	cmp    al,0xbd
  446b93:	bound  edi,QWORD PTR [edx+0x73]
  446b96:	add    al,0x0
  446b98:	pop    ebx
  446b99:	sar    ah,cl
  446b9b:	add    eax,0xb800939c
  446ba0:	popf   
  446ba1:	xchg   ebx,eax
  446ba2:	add    BYTE PTR [eax],al
  446ba4:	enter  0x83a0,0x44
  446ba8:	push   0x6448838b
  446bad:	mov    al,ds:0x5840e8c0
  446bb2:	idiv   edi
  446bb4:	test   eax,0x33186808
  446bb9:	jecxz  0x446bbf
  446bbb:	dec    DWORD PTR [ebx+eax*4-0x9]
  446bbf:	jo     0x446c29
  446bc1:	imul   esi,DWORD PTR [esi],0xffffffff
  446bc4:	rcr    DWORD PTR [ebx+0x7b],cl
  446bc7:	les    eax,FWORD PTR [eax-0x42]
  446bca:	add    DWORD PTR [eax+edi*4-0x7d],0xffffff83
  446bcf:	push   esp
	...
  446be4:	mov    eax,0x4402817b
  446be9:	nop
  446bea:	add    BYTE PTR [eax],al
  446bec:	or     al,0x50
  446bee:	dec    ebp
  446bef:	mov    esp,DWORD PTR [eax-0x49]
  446bf2:	add    BYTE PTR [ebx+0x1c695cb5],cl
  446bf8:	shl    ecx,cl
  446bfa:	adc    bh,bh
  446bfc:	sbb    eax,0xd315e0ab
  446c01:	pop    ebx
  446c02:	test   DWORD PTR [ebx-0x3daa7168],0x564d92d8
  446c0c:	cmp    eax,eax
  446c0e:	sub    edx,0xf
  446c11:	push   ebx
  446c12:	sub    ebx,ebx
  446c14:	cmovno ebp,DWORD PTR [ebx]
  446c17:	idiv   bh
  446c19:	pop    ebx
  446c1a:	not    ecx
  446c1c:	ja     0x446be0
  446c1e:	push   esi
  446c1f:	pop    ebp
  446c20:	pop    edi
  446c21:	push   ss
  446c22:	loop   0x446baf
  446c24:	mov    ch,0xb7
  446c26:	js     0x446be7
  446c28:	push   gs
  446c2a:	adc    al,0x1
  446c2c:	mov    cl,0xa8
  446c2e:	cld    
  446c2f:	sub    al,0x75
  446c31:	cdq    
  446c32:	dec    ecx
  446c33:	sub    eax,0x2d52997c
  446c38:	and    ch,0x25
  446c3b:	push   ebx
  446c3c:	cs cld 
  446c3e:	rcl    BYTE PTR [ecx+0xa],1
  446c41:	add    DWORD PTR [esi+eiz*2],0xffffffb5
  446c45:	nop
  446c46:	mov    ecx,0x6f
	...
  446c5b:	add    dh,dh
  446c5d:	test   al,0xd3
  446c5f:	out    0x22,eax
  446c61:	mov    ds:0x76f2fffc,eax
  446c66:	leave  
  446c67:	pop    edx
  446c68:	jbe    0x446cdd
  446c6a:	jns    0x446cd8
  446c6c:	cdq    
  446c6d:	mov    al,0xd2
  446c6f:	dec    esi
  446c70:	cmp    dh,BYTE PTR [eax+eiz*8+0x2dfc1d13]
  446c77:	stc    
  446c78:	sub    ch,BYTE PTR [ecx]
  446c7a:	dec    eax
  446c7b:	or     al,0x80
  446c7d:	push   0xfffffffc
  446c7f:	(bad)  
  446c80:	out    dx,al
  446c81:	pop    ebx
  446c82:	inc    eax
  446c83:	int3   
  446c84:	add    DWORD PTR [eax+eax*2-0x34],esp
  446c88:	stc    
  446c89:	xor    BYTE PTR ds:0x81542e53,ch
  446c8f:	in     al,dx
  446c90:	popf   
  446c91:	and    edi,eax
  446c93:	pop    es
  446c94:	xchg   BYTE PTR [ecx],ah
  446c96:	iret   
  446c97:	adc    eax,DWORD PTR [ebx-0x59f84ecf]
  446c9d:	mov    eax,0x66b384d5
  446ca2:	xbegin 0xf40bda5d
  446ca8:	mov    ah,0xa8
  446caa:	cld    
  446cab:	push   DWORD PTR [eax]
  446cad:	and    DWORD PTR ds:0xe18ebd7d,ecx
  446cb3:	mov    bh,0xb9
  446cb5:	or     BYTE PTR [ecx],ch
  446cb7:	or     BYTE PTR [eax-0x22ffea3a],ch
  446cbd:	xchg   esp,eax
  446cbe:	xor    eax,DWORD PTR [eax]
	...
  446cd4:	xor    BYTE PTR [esi-0xd],al
  446cd7:	jle    0x446cc0
  446cd9:	xchg   esi,esp
  446cdb:	inc    edx
  446cdc:	fadd   DWORD PTR [ebx-0x7c19cd13]
  446ce2:	pop    esi
  446ce3:	enter  0x9daa,0x26
  446ce7:	or     bh,dl
  446ce9:	test   BYTE PTR [ebp+edx*1+0x6a],ah
  446ced:	xchg   ebp,eax
  446cee:	out    0x80,al
  446cf0:	out    dx,al
  446cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446cf2:	pop    edi
  446cf3:	mov    esi,0x1e095e
  446cf8:	cmp    cl,BYTE PTR [ebx-0x71]
  446cfb:	jle    0x446cf3
  446cfd:	ja     0x446d5f
  446cff:	enter  0x114e,0x6e
  446d03:	xor    ecx,eax
  446d05:	das    
  446d06:	dec    esi
  446d07:	or     DWORD PTR [esi],edi
  446d09:	stc    
  446d0a:	out    0x3,al
  446d0c:	mov    ch,0x8f
  446d0e:	fs pop ss
  446d10:	mov    BYTE PTR [eax],cl
  446d12:	fwait
  446d13:	cdq    
  446d14:	rol    DWORD PTR [edx],0xab
  446d17:	cdq    
  446d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446d19:	push   es
  446d1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446d1b:	xor    esi,DWORD PTR [eax]
  446d1d:	nop
  446d1e:	pusha  
  446d1f:	enter  0xb0a,0x20
  446d23:	mov    bh,0xa6
  446d25:	or     BYTE PTR [edx],bh
  446d27:	sbb    edi,DWORD PTR [ebp-0x8cde66c]
  446d2d:	dec    edx
  446d2e:	adc    al,BYTE PTR [esi+esi*1]
  446d31:	ror    BYTE PTR [edx+0x6e505def],1
  446d37:	enter  0x0,0x0
	...
  446d4b:	add    dl,cl
  446d4d:	or     BYTE PTR [edi],bl
  446d4f:	xchg   ch,cl
  446d51:	xchg   ebp,eax
  446d52:	(bad)  
  446d53:	jnp    0x446dc9
  446d55:	(bad)  
  446d57:	out    dx,al
  446d58:	mov    bh,0x1b
  446d5a:	and    BYTE PTR [edx-0x41],dh
  446d5d:	adc    bh,al
  446d5f:	fild   QWORD PTR [ebp-0x75]
  446d62:	test   DWORD PTR [edi],esp
  446d64:	lods   eax,DWORD PTR ds:[esi]
  446d65:	xchg   edx,eax
  446d66:	leave  
  446d67:	sbb    dh,BYTE PTR [ebp-0x4ae306a9]
  446d6d:	or     cl,BYTE PTR [edx-0x13]
  446d70:	or     DWORD PTR [edx+0x8],eax
  446d73:	jmp    0x40c5:0xf30c62f5
  446d7a:	or     al,0x72
  446d7c:	jp     0x446d1e
  446d7e:	pop    eax
  446d7f:	aas    
  446d80:	js     0x446d8d
  446d82:	jecxz  0x446db8
  446d84:	clc    
  446d85:	into   
  446d86:	inc    edx
  446d87:	xchg   ebp,eax
  446d88:	mov    cl,0x8f
  446d8a:	add    cl,ch
  446d8c:	mov    cl,0xc8
  446d8e:	test   BYTE PTR [ecx+eiz*4],ah
  446d91:	adc    al,0x38
  446d93:	or     cl,BYTE PTR [eax]
  446d95:	sub    eax,esp
  446d97:	hlt    
  446d98:	pop    edi
  446d99:	adc    edi,DWORD PTR [ebx]
  446d9b:	(bad)
  446d9e:	add    cl,ch
  446da0:	bound  esi,QWORD PTR [eax+ebp*2-0x4b]
  446da4:	fist   DWORD PTR [edx+0x0]
  446da7:	inc    ecx
  446da8:	dec    eax
  446da9:	xchg   ebx,eax
  446daa:	clc    
  446dab:	jmp    0x644838e9
	...
  446dc4:	jno    0x446de1
  446dc6:	or     DWORD PTR [edx+0x42],esp
  446dc9:	test   BYTE PTR [esi-0x18],ah
  446dcc:	out    0x96,eax
  446dce:	adc    al,ch
  446dd0:	fwait
  446dd1:	push   edx
  446dd2:	add    BYTE PTR [edx+0x7d],ch
  446dd5:	xchg   DWORD PTR [ebp-0x5758355c],eax
  446ddb:	shld   DWORD PTR [esi+0x7c210084],edx,0x31
  446de3:	pop    eax
  446de4:	fcomp  st(3)
  446de6:	or     DWORD PTR [ebx+0x574a9821],ecx
  446dec:	push   edi
  446ded:	cmp    al,BYTE PTR [ebx-0x9e37b38]
  446df3:	dec    DWORD PTR [ebx+0x17143d14]
  446df9:	shl    al,cl
  446dfb:	mov    esp,edx
  446dfd:	pop    DWORD PTR [ebx-0x998e0fa]
  446e03:	je     0x446d8c
  446e05:	adc    al,0x46
  446e07:	add    al,0x8f
  446e09:	push   eax
  446e0a:	sub    ecx,DWORD PTR [esp+eax*4]
  446e0d:	pusha  
  446e0e:	dec    ebp
  446e0f:	or     al,0xe7
  446e11:	rol    BYTE PTR [ebx+ecx*4],1
  446e14:	mov    ds:0x7fcefb93,al
  446e19:	xchg   ebx,eax
  446e1a:	xor    bh,bh
  446e1c:	mov    eax,ds:0xcc45838f
  446e21:	adc    ecx,DWORD PTR [eax+0x8]
  446e24:	(bad)  
  446e25:	aaa    
  446e26:	call   0x446e75
	...
  446e3b:	add    dl,cl
  446e3d:	pop    edi
  446e3e:	idiv   DWORD PTR [edx-0x8a036]
  446e44:	aad    0xbc
  446e46:	add    al,0xf
  446e48:	nop
  446e49:	mov    bh,0xf7
  446e4b:	dec    DWORD PTR [ebx+0x5d084513]
  446e51:	mov    eax,0xeb64cb83
  446e56:	idiv   bh
  446e58:	retf   
  446e59:	jne    0x446e79
  446e5b:	dec    ebx
  446e5d:	pop    edi
  446e5e:	mul    DWORD PTR ds:0x40791c
  446e64:	fwait
  446e65:	test   eax,0x8f1c1664
  446e6a:	int3   
  446e6b:	int3   
  446e6c:	mov    ch,0xd1
  446e6e:	(bad)  
  446e6f:	dec    esp
  446e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446e71:	cmp    DWORD PTR [esp+eax*2-0x67],0x48bffbb4
  446e79:	mov    esp,0xc46984c7
  446e7e:	or     al,0xf1
  446e80:	fstp   QWORD PTR [ecx-0x577282b5]
  446e86:	jnp    0x446ecc
  446e88:	rcr    DWORD PTR [ebx+edi*2+0x7598d954],1
  446e8f:	inc    esp
  446e90:	shl    DWORD PTR [ebp+esi*8-0x3e4aef41],1
  446e97:	test   cl,ah
  446e99:	mov    WORD PTR [ecx+esi*8],cs
  446e9c:	pop    ebp
  446e9d:	rol    DWORD PTR [ebp+0x7d],1
	...
  446eb4:	pop    ebp
  446eb5:	test   al,0x7b
  446eb7:	inc    esp
  446eb8:	cdq    
  446eb9:	mov    WORD PTR [ebx+0x54],?
  446ebc:	xchg   ecx,eax
  446ebd:	nop
  446ebe:	cmc    
  446ebf:	mov    edi,0x4c75a0e8
  446ec4:	xchg   ecx,eax
  446ec5:	mov    al,ds:0xb4994475
  446eca:	in     eax,dx
  446ecb:	int    0x42
  446ecd:	pop    ss
  446ece:	jne    0x446ea8
  446ed0:	cs fs call 0x755bb0e6
  446ed7:	int    0x1e
  446ed9:	out    0x75,eax
  446edb:	fdivr  DWORD PTR [esi]
  446edd:	in     al,0xe0
  446edf:	pop    ss
  446ee0:	cs aam 0xe0
  446ee3:	adc    ebp,DWORD PTR [esi]
  446ee5:	in     al,dx
  446ee6:	loopne 0x446ef7
  446ee8:	in     al,0x3c
  446eea:	push   ebx
  446eeb:	xlat   BYTE PTR ds:[ebx]
  446eec:	in     al,0x3d
  446eee:	push   ebx
  446eef:	fsubr  DWORD PTR [esi+0x2f3b77d]
  446ef5:	push   edi
  446ef6:	jne    0x446ee8
  446ef8:	jmp    0x2f06:0xcee78b8e
  446eff:	jnp    0x446f7a
  446f01:	imul   ebp,edi,0x36
  446f04:	xlat   BYTE PTR ds:[ebx]
  446f05:	lea    edi,[eax]
  446f07:	mov    dl,0xbc
  446f09:	push   esi
  446f0a:	fwait
  446f0b:	out    0xa6,eax
  446f0d:	sbb    ch,bh
  446f0f:	mov    cl,0xb5
  446f11:	push   esi
  446f12:	stos   DWORD PTR es:[edi],eax
  446f13:	out    0xaa,eax
  446f15:	sbb    eax,ebp
  446f17:	mov    ebp,0x0
	...
  446f2c:	loope  0x446eeb
  446f2e:	ins    DWORD PTR es:[edi],dx
  446f2f:	inc    ebp
  446f30:	cld    
  446f31:	sbb    ah,dl
  446f33:	mov    ebx,DWORD PTR ss:[ecx-0x6f7c7d52]
  446f3a:	cs into 
  446f3c:	in     eax,dx
  446f3d:	int    0xd6
  446f3f:	add    esi,DWORD PTR [eax]
  446f41:	xchg   ecx,eax
  446f42:	adc    edi,DWORD PTR [ebx-0x6f]
  446f45:	(bad)  
  446f47:	fstp   TBYTE PTR [ecx-0x6f]
  446f4a:	out    0x62,al
  446f4c:	test   eax,ecx
  446f4e:	and    eax,0xab833204
  446f53:	cmp    esp,DWORD PTR [eax+0x6d18608f]
  446f59:	enter  0x425,0x3a
  446f5d:	jae    0x446f0a
  446f5f:	cmp    ecx,DWORD PTR [eax+0x2f8708f]
  446f65:	enter  0x425,0x32
  446f69:	push   ebx
  446f6a:	sub    edi,DWORD PTR [ebx]
  446f6c:	lock vphaddwd ymm4,XMMWORD PTR [edi+0x2b22c22e]
  446f76:	arpl   WORD PTR [eax],ax
  446f78:	stc    
  446f79:	(bad)  
  446f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446f7b:	add    edx,DWORD PTR [edi-0x2941bfd]
  446f81:	dec    esp
  446f82:	out    0xa5,eax
  446f84:	mov    eax,DWORD PTR cs:[eax]
  446f87:	jge    0x446f47
  446f89:	push   edx
  446f8a:	add    bh,al
  446f8c:	jb     0x446ffa
  446f8e:	mov    al,0x31
	...
  446fa4:	not    DWORD PTR [eax-0x1b2a929e]
  446faa:	(bad)  
  446fab:	stos   BYTE PTR es:[edi],al
  446fac:	mov    dh,0xf3
  446fae:	mov    ah,ah
  446fb0:	xchg   esi,eax
  446fb1:	(bad)  
  446fb2:	cmp    al,0xe9
  446fb4:	dec    edi
  446fb5:	dec    esp
  446fb6:	add    BYTE PTR [edx+0x6a],cl
  446fb9:	(bad)  
  446fba:	cmp    al,0xe9
  446fbc:	aas    
  446fbd:	dec    esp
  446fbe:	add    al,0x4a
  446fc0:	inc    bh
  446fc2:	cmp    al,0xe9
  446fc4:	sub    ecx,DWORD PTR [ebp+0x8]
  446fc7:	mov    cl,ch
  446fc9:	(bad)  
  446fca:	cmp    al,0xe9
  446fcc:	sbb    eax,0xe0cde00d
  446fd1:	xchg   esi,eax
  446fd2:	shr    ah,0x96
  446fd5:	enter  0xe93c,0xb7
  446fd9:	(bad)  
  446fda:	(bad)  
  446fdb:	call   0x2b0c27f7
  446fe0:	mov    ecx,0x74aedbf2
  446fe5:	nop
  446fe6:	shl    esp,0x6
  446fe9:	iret   
  446fea:	cmp    al,0xe9
  446fec:	pop    edi
  446fed:	mov    WORD PTR [eax],es
  446fef:	test   eax,0xaed48cf8
  446ff4:	je     0x446f86
  446ff6:	(bad)  
  446ff7:	call   0x2de3ffb2
  446ffc:	icebp  
  446ffd:	push   edx
  446ffe:	add    BYTE PTR [eax+0x3a],ah
  447001:	mov    bh,0xfb
  447003:	data16 fdiv st,st(0)
  447006:	inc    edi
  447007:	sub    DWORD PTR [eax],eax
	...
  447019:	add    BYTE PTR [eax],al
  44701b:	add    ah,dh
  44701d:	pop    DWORD PTR [edi-0x76c7a94]
  447023:	dec    esi
  447024:	das    
  447025:	nop
  447026:	stc    
  447027:	add    cl,ch
  447029:	push   edi
  44702a:	or     DWORD PTR [eax+0xc],eax
  44702d:	hlt    
  44702e:	or     al,0x4e
  447030:	dec    esp
  447031:	mov    edi,?
  447033:	adc    eax,0x407ca4
  447038:	inc    esp
  447039:	xchg   ebp,eax
  44703a:	cld    
  44703b:	dec    DWORD PTR [edx+eiz*2-0x342203f3]
  447042:	clc    
  447043:	dec    edi
  447044:	ret    
  447045:	js     0x446fd7
  447047:	adc    DWORD PTR [esp+ecx*4],ebx
  44704a:	rol    ebx,0x90
  44704d:	dec    edi
  44704e:	int3   
  44704f:	int3   
  447050:	sbb    dl,BYTE PTR [edi]
  447052:	inc    esp
  447053:	and    al,0x88
  447055:	mov    BYTE PTR [eax+0x4508c475],bh
  44705b:	and    al,0x9c
  44705d:	or     BYTE PTR ds:0xc6809024,bh
  447063:	imul   DWORD PTR [ebp+0x8]
  447066:	(bad)  [ebx-0x8ff8828]
  44706c:	cmp    eax,0x4f8bf108
  447071:	les    ebx,FWORD PTR [esp-0x74]
  447075:	or     cl,cl
  447077:	mov    ebx,DWORD PTR [edx]
  447079:	les    ebx,FWORD PTR [esp+0x5c]
  44707d:	nop
  44707e:	(bad)  
  44707f:	jmp    0x447081
	...
  447091:	add    BYTE PTR [eax],al
  447093:	add    BYTE PTR [ebx-0x5f7436f8],cl
  447099:	ja     0x4470a3
  44709b:	mov    ebp,DWORD PTR [eax-0x6774f389]
  4470a1:	ja     0x4470a3
  4470a3:	shl    DWORD PTR ds:0x36d1cde2,1
  4470a9:	loop   0x447083
  4470ab:	or     esp,ebp
  4470ad:	inc    ebp
  4470ae:	hlt    
  4470af:	idiv   DWORD PTR [edi+0x7]
  4470b2:	icebp  
  4470b3:	div    DWORD PTR [ebp+0x3e13e05c]
  4470b9:	mov    cl,0x78
  4470bb:	inc    esp
  4470bc:	shr    DWORD PTR [eax+0x2d],1
  4470bf:	loop   0x447077
  4470c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4470c2:	mov    cl,0x9
  4470c4:	mov    esi,0x6a0be02c
  4470c9:	jo     0x44707d
  4470cb:	or     BYTE PTR [esi+0x6b07e03c],ch
  4470d1:	jg     0x447089
  4470d3:	and    al,0x71
  4470d5:	pop    esp
  4470d6:	adc    al,0x15
  4470d8:	imul   edx,DWORD PTR [eax+edx*1+0x2d],0x23c061ee
  4470e0:	lods   eax,DWORD PTR ds:[esi]
  4470e1:	jno    0x4470b3
  4470e3:	and    ebp,DWORD PTR [ecx-0x720eb673]
  4470e9:	stc    
  4470ea:	dec    ecx
  4470eb:	add    BYTE PTR [esi],bh
  4470ed:	inc    edx
  4470ee:	js     0x4470bd
  4470f0:	cs dec edi
  4470f2:	js     0x4470bc
  4470f4:	cs ds retf 
  4470f7:	mov    ebp,0x0
	...
  44710c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44710d:	js     0x44713f
  44710f:	int3   
  447110:	jns    0x4470bb
  447112:	int    0xb4
  447114:	in     eax,0x38
  447116:	sar    bh,0x8f
  447119:	jno    0x4470ea
  44711b:	dec    esi
  44711c:	cs test al,0x3c
  44711f:	cmp    eax,0x23b901b5
  447124:	mov    cl,0xff
  447126:	mov    bh,0x7
  447128:	sub    al,0xb9
  44712a:	add    BYTE PTR [edi+0x4ed16cde],al
  447130:	in     eax,0xb0
  447132:	lds    ebx,FWORD PTR [edx-0x24]
  447135:	mov    cl,0x3e
  447137:	add    al,0xb5
  447139:	add    eax,0x2c01bd4d
  44713e:	cmp    esp,ecx
  447140:	stc    
  447141:	mov    gs,WORD PTR ds:0x265af138
  447147:	cmp    cl,ch
  447149:	pop    edx
  44714a:	arpl   WORD PTR [ebx],bp
  44714c:	data16 sbb dh,BYTE PTR [esi]
  44714f:	jg     0x4471cf
  447151:	xchg   edi,eax
  447152:	cmp    DWORD PTR [ecx-0x5e167098],0xffb590c3
  44715c:	mov    eax,ds:0x3046854f
  447161:	rcr    ch,1
  447163:	push   es
  447164:	and    dl,BYTE PTR [eax]
  447166:	loop   0x44713b
  447168:	ja     0x4470f9
  44716a:	jmp    0x3c064f1f
  44716f:	ins    DWORD PTR es:[edi],dx
	...
  447184:	mov    al,0x90
  447186:	jmp    0xb20cc88e
  44718b:	or     ebp,DWORD PTR [ebx+eiz*1-0x148c80d4]
  447192:	sub    bh,BYTE PTR [eax]
  447194:	jns    0x4471f2
  447196:	scas   al,BYTE PTR es:[edi]
  447197:	aaa    
  447198:	jno    0x4471f6
  44719a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44719b:	aaa    
  44719c:	imul   ebx,DWORD PTR [ebx+eiz*2+0x2a],0x7eb618e6
  4471a4:	not    BYTE PTR [edi-0x6f41448e]
  4471aa:	mov    cl,0xfa
  4471ac:	inc    ebp
  4471ad:	iret   
  4471ae:	aad    0xd6
  4471b0:	add    al,0x9d
  4471b2:	outs   dx,BYTE PTR ds:[esi]
  4471b3:	mov    ah,0xb4
  4471b5:	sar    BYTE PTR [ebx-0xe2bd02e],0xb
  4471bc:	xchg   BYTE PTR ss:[eax],bl
  4471bf:	pmulhrsw mm2,mm6
  4471c3:	jle    0x4471c2
  4471c5:	fwait
  4471c6:	ret    0xd32c
  4471c9:	xchg   esi,eax
  4471ca:	jb     0x447197
  4471cc:	mov    dl,0x90
  4471ce:	add    BYTE PTR [eax-0x1c8c7bdd],dl
  4471d4:	lock or eax,ecx
  4471d7:	adc    DWORD PTR [edx],edx
  4471d9:	pop    edi
  4471da:	jae    0x44722d
  4471dc:	and    ecx,DWORD PTR [ebp+0x58]
  4471df:	mov    bh,0x3
  4471e1:	jmp    0xbfc8:0xf50ec3c3
	...
  4471fc:	sti    
  4471fd:	mov    eax,fs
  4471ff:	push   ebp
  447200:	mov    dh,0x8f
  447202:	add    BYTE PTR [edx+0x15],ch
  447205:	mov    DWORD PTR [ecx],eax
  447207:	outs   dx,DWORD PTR ds:[esi]
  447208:	mov    dh,0x8f
  44720a:	inc    eax
  44720b:	jmp    0x1ea6e714
  447210:	pop    DWORD PTR [esi+0x3766c5a]
  447216:	ss (bad) 
  447218:	cmc    
  447219:	xchg   esp,eax
  44721a:	sub    ebp,DWORD PTR [edi]
  44721c:	out    0xde,al
  44721e:	call   0xf8cb017c
  447223:	nop
  447224:	adc    DWORD PTR [ecx],0x138b75c1
  44722a:	inc    ecx
  44722b:	or     eax,0xd61877f6
  447230:	add    DWORD PTR [ebx],ecx
  447232:	loope  0x44721c
  447234:	cmc    
  447235:	shl    ah,1
  447237:	iret   
  447238:	fadd   QWORD PTR [esi+0x1399d2f8]
  44723e:	ds int 0xf8
  447241:	(bad)  
  447242:	mov    ebp,ecx
  447244:	imul   edx,DWORD PTR [ebp+0x36],0xc08fb6e4
  44724b:	div    BYTE PTR [edx]
  44724d:	dec    esp
  44724e:	mov    WORD PTR [eax-0x7ea1ed10],gs
  447254:	hlt    
  447255:	shl    ah,1
  447257:	(bad)  
  447258:	pushf  
  447259:	xchg   al,bh
  44725b:	add    bh,bh
  44725d:	iret   
  44725e:	call   0x4472dd
	...
  447273:	add    BYTE PTR [eax+edx*4+0x0],cl
  447277:	ret    
  447278:	xchg   edi,eax
  447279:	dec    edi
  44727a:	and    al,0x8
  44727c:	xchg   edi,eax
  44727d:	inc    edi
  44727e:	and    al,0x10
  447280:	daa    
  447281:	enter  0x4c7d,0xb0
  447285:	xchg   DWORD PTR [ebx+0x9],esi
  447288:	xchg   edi,eax
  447289:	dec    edi
  44728a:	and    al,0x4
  44728c:	arpl   WORD PTR [eax+0x630c10b6],si
  447292:	icebp  
  447293:	loope  0x44721c
  447295:	fstp   TBYTE PTR [ebp+0x44]
  447298:	ror    BYTE PTR [ebx-0x604f9b0f],0xf5
  44729f:	xlat   BYTE PTR ds:[ebx]
  4472a0:	addr16 dec edi
  4472a2:	and    al,0x8
  4472a4:	ret    
  4472a5:	mov    al,0xf5
  4472a7:	rol    BYTE PTR [edi],cl
  4472a9:	rcl    BYTE PTR [eax],cl
  4472ab:	add    BYTE PTR [edx*8+0x2bcc4373],dh
  4472b2:	stc    
  4472b3:	xor    eax,0x8fcc
  4472b8:	pop    ss
  4472b9:	push   eax
  4472ba:	and    al,0x10
  4472bc:	adc    eax,0x29102428
  4472c1:	and    esp,DWORD PTR [eax+edx*1]
  4472c4:	(bad)  
  4472c5:	mov    bl,0x45
  4472c7:	push   esi
  4472c8:	shr    esi,cl
  4472ca:	cmp    al,0xc0
  4472cc:	fist   WORD PTR [ebx-0x7b87bad9]
  4472d2:	ret    
  4472d3:	push   eax
  4472d4:	add    eax,0xffe02a
	...
  4472e9:	add    BYTE PTR [eax],al
  4472eb:	add    BYTE PTR [ecx+0x18457dbb],dh
  4472f1:	rol    BYTE PTR [ebx-0x4],1
  4472f4:	sbb    bh,BYTE PTR [eax+0x49e5fff9]
  4472fa:	lock lea esi,[ebp+0x16642cbb]
  447301:	jns    0x447307
  447303:	add    BYTE PTR [ebp+0x454b7535],dh
  447309:	xchg   ebp,eax
  44730a:	jnp    0x447317
  44730c:	mov    ch,0x78
  44730e:	add    al,0x0
  447310:	mov    WORD PTR [ecx-0x281a637],ds
  447316:	push   ss
  447317:	pop    ebx
  447318:	test   BYTE PTR [ebp-0x1297068c],dh
  44731e:	psubw  mm0,QWORD PTR [eax-0x5a8cd67c]
  447325:	shl    DWORD PTR [esi-0x3bc05f5],1
  44732b:	addr16 cmc 
  44732d:	dec    ebp
  44732e:	mov    ebp,0x443452ff
  447333:	cmp    eax,0xf5aca0b5
  447338:	fisubr DWORD PTR [ecx+0x43adc47c]
  44733e:	cmp    eax,0xe7890f9
  447343:	inc    eax
  447344:	mov    ch,0xfd
  447346:	cmp    eax,0xcc2125bd
  44734b:	jno    0x447343
  44734d:	js     0x4472e7
  44734f:	sahf   
	...
  447364:	mov    ch,0x78
  447366:	add    al,0x0
  447368:	add    eax,0xc523c0fe
  44736d:	call   FWORD PTR [eax-0x670c5add]
  447373:	and    esp,DWORD PTR [ebp-0x14b2e373]
  447379:	test   eax,0xff7d437b
  44737e:	mov    eax,ds:0xc1ee05e7
  447383:	sti    
  447384:	jb     0x447339
  447386:	sub    cl,bh
  447388:	bound  ecx,QWORD PTR [edi-0x2bcdd862]
  44738e:	mov    eax,ds:0x67ff679
  447393:	arpl   WORD PTR [ebp+0x3e98f],si
  447399:	push   ss
  44739a:	sub    eax,0xe518d134
  44739f:	add    esi,DWORD PTR [ebp-0x72331671]
  4473a5:	jmp    0x4eb6b0bc
  4473aa:	pop    edi
  4473ab:	loope  0x447347
  4473ad:	mov    eax,ds:0x5b0103a9
  4473b2:	mov    ebx,0xfdd331cd
  4473b7:	or     edi,DWORD PTR [eax+0x300bb54f]
  4473bd:	(bad)  
  4473bf:	(bad)  
  4473c2:	add    eax,0x2f5d9814
  4473c7:	xor    eax,0x0
	...
  4473dc:	cmp    BYTE PTR [edi+0x73],ah
  4473df:	rcl    BYTE PTR [esi+0x38350e9b],0x5e
  4473e6:	add    eax,ebp
  4473e8:	xor    DWORD PTR [edi+0x63],edx
  4473eb:	enter  0xa396,0x72
  4473ef:	rcl    BYTE PTR [esi-0x293f8d61],1
  4473f5:	fwait
  4473f6:	sbb    BYTE PTR ds:0x1a19657a,bl
  4473fc:	jb     0x447466
  4473fe:	repz cmp al,0x26
  447401:	test   bh,cl
  447403:	xor    bh,BYTE PTR [eax]
  447405:	adc    bh,0x9f
  447408:	(bad)  
  447409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44740a:	bound  edi,QWORD PTR [ebx]
  44740c:	cmp    ah,dl
  44740e:	add    eax,0xeb728410
  447413:	push   esp
  447414:	jecxz  0x4473af
  447416:	add    dl,dh
  447418:	jp     0x4473c7
  44741a:	adc    BYTE PTR [esi],dh
  44741c:	popa   
  44741d:	sti    
  44741e:	jmp    ecx
  447420:	sbb    ch,BYTE PTR [ebp-0x2a47e8fc]
  447426:	xor    edi,DWORD PTR [ebx+0x32574dcf]
  44742c:	neg    DWORD PTR [edi-0x796c7900]
  447432:	clc    
  447433:	jmp    0x914503ee
  447438:	rol    DWORD PTR [esi-0x70491608],cl
  44743e:	add    BYTE PTR [edi+0x0],ah
	...
  447451:	add    BYTE PTR [eax],al
  447453:	add    bl,dl
  447455:	xchg   al,bh
  447457:	adc    eax,DWORD PTR [esp+ecx*8+0x0]
  44745b:	pop    ss
  44745c:	inc    esp
  44745d:	int3   
  44745e:	add    cl,ch
  447460:	mov    dh,0x8f
  447462:	add    BYTE PTR [esi-0x2d],al
  447465:	xchg   al,bh
  447467:	dec    eax
  447468:	popf   
  447469:	enter  0x4c00,0x9d
  44746d:	enter  0xe900,0xb6
  447471:	pop    DWORD PTR [eax]
  447473:	es xchg ebx,eax
  447475:	xchg   al,bh
  447477:	test   BYTE PTR [ebp-0x627fff38],bl
  44747d:	enter  0xe900,0xb6
  447481:	pop    DWORD PTR [eax]
  447483:	push   es
  447484:	xchg   ebx,eax
  447485:	xchg   al,bh
  447487:	loope  0x447463
  447489:	enter  0xd500,0xd2
  44748d:	enter  0xe900,0xb6
  447491:	pop    DWORD PTR [eax]
  447493:	out    0xd0,al
  447495:	xchg   al,bh
  447497:	and    al,0xdc
  447499:	enter  0x2000,0xdc
  44749d:	enter  0xe900,0xb6
  4474a1:	pop    DWORD PTR [eax]
  4474a3:	add    BYTE PTR [ebx-0x4e],dh
  4474a6:	stc    
  4474a7:	dec    DWORD PTR [edx-0x4b]
  4474aa:	aaa    
  4474ab:	add    BYTE PTR [esi-0x4b],al
  4474ae:	aaa    
  4474af:	add    BYTE PTR [esp+ecx*4+0x0],cl
  4474b3:	add    BYTE PTR [ebx],dl
  4474b5:	mov    dl,0xf9
  4474b7:	inc    DWORD PTR [eax]
	...
  4474c9:	add    BYTE PTR [eax],al
  4474cb:	add    cl,bl
  4474cd:	mov    ch,0x37
  4474cf:	add    ch,dl
  4474d1:	mov    ch,0x37
  4474d3:	add    BYTE PTR [esp+ecx*4+0x0],cl
  4474d7:	add    BYTE PTR [ebx],dh
  4474d9:	mov    dl,0xf9
  4474db:	jmp    ebp
  4474dd:	mov    ch,0x37
  4474df:	add    cl,dl
  4474e1:	mov    ch,0x37
  4474e3:	add    BYTE PTR [esp+ecx*4],cl
  4474e6:	add    BYTE PTR [eax],al
  4474e8:	xchg   ebx,eax
  4474e9:	mov    dl,0xf9
  4474eb:	jmp    esi
  4474ed:	mov    ah,0x37
  4474ef:	add    dl,dh
  4474f1:	mov    ah,0x37
  4474f3:	add    BYTE PTR [esp+ecx*4],cl
  4474f6:	add    BYTE PTR [eax],al
  4474f8:	jae    0x4474ac
  4474fa:	stc    
  4474fb:	call   DWORD PTR [eax]
  4474fd:	mov    ch,0x37
  4474ff:	add    BYTE PTR [esp+esi*4-0x7433ffc9],bh
  447506:	add    BYTE PTR [eax],al
  447508:	xchg   ebx,eax
  447509:	mov    dl,0xf9
  44750b:	(bad)  
  44750c:	mov    esp,0xb80037bb
  447511:	mov    ebx,0x8bcc0037
  447516:	add    BYTE PTR [eax],al
  447518:	mov    bl,0xb2
  44751a:	stc    
  44751b:	inc    DWORD PTR [esp+esi*4]
  44751e:	aaa    
  44751f:	add    al,dh
  447521:	mov    bl,0x37
  447523:	add    BYTE PTR [ebx+edx*4-0x536d0000],cl
  44752a:	stc    
  44752b:	inc    DWORD PTR [edx+0x40c0]
	...
  447541:	add    BYTE PTR [eax],al
  447543:	add    BYTE PTR [ebp-0x4abfce96],dh
  447549:	js     0x44754f
  44754b:	add    BYTE PTR [ebp+0x72f91d4d],dh
  447551:	scas   al,BYTE PTR es:[edi]
  447552:	adc    al,0x3f
  447554:	mov    ch,0xb1
  447556:	adc    al,0x3f
  447558:	mov    ch,0x78
  44755a:	add    al,0x0
  44755c:	mov    ch,0x2d
  44755e:	sbb    eax,0x202e52f9
  447563:	aas    
  447564:	mov    ch,0x31
  447566:	and    BYTE PTR [edi],bh
  447568:	mov    ch,0x78
  44756a:	add    al,0x0
  44756c:	mov    ch,0xd
  44756e:	sbb    eax,0x24a232f9
  447573:	aas    
  447574:	mov    ch,0x8d
  447576:	and    al,0x3f
  447578:	mov    ch,0x78
  44757a:	add    al,0x0
  44757c:	mov    ch,0xed
  44757e:	sbb    al,0xf9
  447580:	adc    ah,BYTE PTR [edi+edi*2+0x7f37b540]
  447587:	inc    eax
  447588:	mov    ch,0x78
  44758a:	add    al,0x0
  44758c:	mov    ch,0xcd
  44758e:	sbb    al,0xf9
  447590:	repnz retf 0x4088
  447594:	mov    ch,0xc6
  447596:	mov    BYTE PTR [eax-0x4b],al
  447599:	js     0x44759f
  44759b:	add    BYTE PTR [ebp-0x4afffb88],dh
  4475a1:	js     0x4475a7
  4475a3:	add    BYTE PTR [ebp+0xec8143],dh
	...
  4475b9:	add    BYTE PTR [eax],al
  4475bb:	add    BYTE PTR [edx+0x674f16ef],bl
  4475c1:	es sbb al,0x80
  4475c4:	lds    edi,FWORD PTR [eax+0x4]
  4475c7:	pusha  
  4475c8:	les    edi,FWORD PTR [eax+0x4]
  4475cb:	pop    esp
  4475cc:	les    edi,FWORD PTR [eax+0x4]
  4475cf:	pop    eax
  4475d0:	les    ecx,FWORD PTR [edi-0x5f16fc17]
  4475d6:	jmp    0xe9e586de
  4475db:	add    esp,DWORD PTR [ecx]
  4475dd:	mov    al,ds:0xa02d03e9
  4475e2:	jmp    0xe9e4aeea
  4475e7:	add    esi,ebp
  4475e9:	mov    al,ds:0xa0a103e9
  4475ee:	jmp    0xe9e512f6
  4475f3:	add    ecx,DWORD PTR [ecx-0xefc1660]
  4475f9:	mov    al,ds:0xa0c103e9
  4475fe:	jmp    0xe9e54306
  447603:	add    ebp,edx
  447605:	test   eax,0xa0d503e9
  44760a:	jmp    0xe9e53712
  44760f:	add    edi,DWORD PTR [ebp-0x56fc1660]
  447615:	mov    al,ds:0xa0d103e9
  44761a:	jmp    0xe9e4d722
  44761f:	add    eax,DWORD PTR [eax]
	...
  447631:	add    BYTE PTR [eax],al
  447633:	add    BYTE PTR [ebp-0x60],ch
  447636:	jmp    0xe9e4ef3e
  44763b:	add    esi,DWORD PTR [ebp-0x1efc1660]
  447641:	sahf   
  447642:	jmp    0xe9e3534a
  447647:	add    ecx,ecx
  447649:	sahf   
  44764a:	jmp    0xe9e52752
  44764f:	add    eax,DWORD PTR [ecx-0x72fc1660]
  447655:	mov    al,ds:0x9ed903e9
  44765a:	jmp    0xe50b62
  44765f:	jmp    0xe955da1a
  447664:	mov    dh,0x67
  447666:	adc    ecx,ebp
  447668:	mov    dh,0x5b
  44766a:	adc    ecx,ebp
  44766c:	mov    dh,0x6b
  44766e:	adc    ecx,ebp
  447670:	mov    dh,0xa3
  447672:	adc    ecx,ebp
  447674:	mov    dh,0x31
  447676:	adc    ch,cl
  447678:	mov    dh,0x8b
  44767a:	adc    ecx,ebp
  44767c:	mov    dh,0x4f
  44767e:	adc    ecx,ebp
  447680:	mov    dh,0x43
  447682:	adc    ecx,ebp
  447684:	mov    dh,0x47
  447686:	adc    ecx,ebp
  447688:	mov    dh,0x3b
  44768a:	adc    ecx,ebp
  44768c:	mov    dh,0x4b
  44768e:	adc    ecx,ebp
  447690:	mov    dh,0x83
  447692:	adc    ecx,ebp
  447694:	mov    dh,0x11
  447696:	adc    ch,cl
	...
  4476ac:	mov    dh,0x6b
  4476ae:	adc    ecx,ebp
  4476b0:	mov    dh,0x2f
  4476b2:	adc    ecx,ebp
  4476b4:	mov    dh,0x23
  4476b6:	adc    ecx,ebp
  4476b8:	mov    dh,0x27
  4476ba:	adc    ecx,ebp
  4476bc:	mov    dh,0x1b
  4476be:	adc    ecx,ebp
  4476c0:	mov    dh,0x2b
  4476c2:	adc    ecx,ebp
  4476c4:	mov    dh,0x63
  4476c6:	adc    ecx,ebp
  4476c8:	mov    dh,0xf1
  4476ca:	adc    ecx,ebp
  4476cc:	mov    dh,0x4b
  4476ce:	adc    ecx,ebp
  4476d0:	mov    dh,0xf
  4476d2:	adc    ecx,ebp
  4476d4:	mov    dh,0x3
  4476d6:	adc    ecx,ebp
  4476d8:	mov    dh,0x7
  4476da:	adc    ecx,ebp
  4476dc:	mov    dh,0xfb
  4476de:	adc    cl,ch
  4476e0:	mov    dh,0xb
  4476e2:	adc    ecx,ebp
  4476e4:	mov    dh,0x43
  4476e6:	adc    ecx,ebp
  4476e8:	mov    dh,0xd1
  4476ea:	adc    DWORD PTR [eax],eax
  4476ec:	pushf  
  4476ed:	nop
  4476ee:	pushf  
  4476ef:	adc    BYTE PTR [eax+edx*4-0x6f73eef0],bl
  4476f6:	add    al,0x11
  4476f8:	mov    WORD PTR [eax-0x6f63eef8],ss
  4476fe:	cld    
  4476ff:	adc    BYTE PTR [eax+edx*4-0x6f73ef00],bl
  447706:	hlt    
  447707:	adc    BYTE PTR [eax+edx*4-0x6fa3ef08],cl
  44770e:	in     al,dx
  44770f:	adc    BYTE PTR [eax],al
	...
  447721:	add    BYTE PTR [eax],al
  447723:	add    BYTE PTR [eax+edx*4-0x44],bl
  447727:	adc    BYTE PTR [eax+edx*4-0x40],cl
  44772b:	adc    BYTE PTR [eax+edx*4-0x4c],cl
  44772f:	adc    BYTE PTR [eax+edx*4-0x48],bl
  447733:	adc    BYTE PTR [eax+edx*4-0x54],bl
  447737:	adc    BYTE PTR [eax+edx*4-0x50],cl
  44773b:	adc    BYTE PTR [eax+edx*4-0x5c],cl
  44773f:	adc    BYTE PTR [eax+edx*4],bl
  447742:	test   al,0x10
  447744:	sbb    al,0x90
  447746:	xor    BYTE PTR [eax],dl
  447748:	or     al,0x90
  44774a:	and    al,0x10
  44774c:	or     al,0x90
  44774e:	sub    BYTE PTR [eax],dl
  447750:	sbb    al,0x90
  447752:	sbb    al,0x10
  447754:	sbb    al,0x90
  447756:	and    BYTE PTR [eax],dl
  447758:	or     al,0x90
  44775a:	adc    al,0x10
  44775c:	or     al,0x90
  44775e:	sbb    BYTE PTR [eax],dl
  447760:	fmul   QWORD PTR [edi-0x7023eff4]
  447766:	adc    BYTE PTR [eax],dl
  447768:	int3   
  447769:	pop    DWORD PTR [eax+edx*1]
  44776c:	int3   
  44776d:	(bad)
  447771:	(bad)  
  447772:	cld    
  447773:	paddusb mm1,QWORD PTR [edi+0x76b51000]
  44777a:	add    al,0xfc
  44777c:	stos   BYTE PTR es:[edi],al
  44777d:	jbe    0x447783
  44777f:	clc    
  447780:	ret    0x478
  447783:	hlt    
  447784:	mov    edx,0xf00478
	...
  447799:	add    BYTE PTR [eax],al
  44779b:	add    BYTE PTR [edx-0x5513fb88],dh
  4477a1:	js     0x4477a7
  4477a3:	or     ah,BYTE PTR [eax+edi*2+0x78bad404]
  4477aa:	add    al,0xaa
  4477ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4477ad:	js     0x4477b3
  4477af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4477b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4477b1:	js     0x4477b7
  4477b3:	mov    ecx,0xec0478ca
  4477b8:	ret    0x478
  4477bb:	inc    esp
  4477bd:	js     0x4477c3
  4477bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4477c0:	les    edi,FWORD PTR [eax+0x4]
  4477c3:	int3   
  4477c4:	ret    0x478
  4477c7:	sub    DWORD PTR [ebp-0x4d3ffb88],esp
  4477cd:	js     0x4477d3
  4477cf:	mov    esp,0xb80478aa
  4477d4:	ret    0x478
  4477d7:	mov    ah,0xba
  4477d9:	js     0x4477df
  4477db:	mov    ah,0xb2
  4477dd:	js     0x4477e3
  4477df:	mov    al,0xaa
  4477e1:	js     0x4477e7
  4477e3:	lods   al,BYTE PTR ds:[esi]
  4477e4:	ret    0x478
  4477e7:	test   al,0xba
  4477e9:	js     0x4477ef
  4477eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4477ec:	mov    dl,0x78
  4477ee:	add    al,0xa0
  4477f0:	stos   BYTE PTR es:[edi],al
  4477f1:	js     0x4477f7
  4477f3:	pushf  
  4477f4:	ret    0x478
  4477f7:	cwde   
  4477f8:	mov    edx,0xb2940478
  4477fd:	js     0x447803
  4477ff:	nop
	...
  447814:	stos   BYTE PTR es:[edi],al
  447815:	js     0x44781b
  447817:	mov    edx,es
  447819:	(bad)
  44781d:	xchg   ebx,eax
  44781e:	jmp    0xe9d7b126
  447823:	add    esi,DWORD PTR ds:0x3103e993
  447829:	xchg   ebx,eax
  44782a:	jmp    0xe9d7a532
  44782f:	add    ecx,DWORD PTR [eax-0x68fc166e]
  447835:	mov    al,ds:0xa08103e9
  44783a:	jmp    0xe9d6f442
  44783f:	add    esp,ebp
  447841:	xchg   edx,eax
  447842:	jmp    0xe9d7614a
  447847:	add    edi,ebp
  447849:	xchg   edx,eax
  44784a:	jmp    0xe9d76952
  44784f:	add    esi,ebp
  447851:	xchg   edx,eax
  447852:	jmp    0xe9d7115a
  447857:	add    ecx,DWORD PTR [ebp-0x7efc166e]
  44785d:	xchg   edx,eax
  44785e:	jmp    0xe9d6fd66
  447863:	add    ecx,DWORD PTR [ecx-0x22fc166e]
  447869:	xchg   edx,eax
  44786a:	jmp    0xe9e4f772
  44786f:	add    esp,ebp
  447871:	xchg   edx,eax
  447872:	jmp    0xe9d7417a
  447877:	add    eax,DWORD PTR [eax]
	...
  447889:	add    BYTE PTR [eax],al
  44788b:	add    ch,bl
  44788d:	xchg   edx,eax
  44788e:	jmp    0xe9d74996
  447893:	add    edx,ebp
  447895:	xchg   edx,eax
  447896:	jmp    0xe9d7119e
  44789b:	add    ecx,ebp
  44789d:	xchg   edx,eax
  44789e:	jmp    0xe9d739a6
  4478a3:	add    eax,ebp
  4478a5:	xchg   edx,eax
  4478a6:	add    cl,ch
  4478a8:	mov    dh,0x93
  4478aa:	pop    es
  4478ab:	jmp    0xe955bd66
  4478b0:	mov    dh,0x8b
  4478b2:	pop    es
  4478b3:	jmp    0xe94c086e
  4478b8:	mov    dh,0x83
  4478ba:	pop    es
  4478bb:	jmp    0xe94c0076
  4478c0:	mov    dh,0x7b
  4478c2:	pop    es
  4478c3:	jmp    0xe955447e
  4478c8:	mov    dh,0xdf
  4478ca:	adc    cl,ch
  4478cc:	mov    dh,0xc3
  4478ce:	adc    cl,ch
  4478d0:	mov    dh,0xd7
  4478d2:	adc    cl,ch
  4478d4:	mov    dh,0x6f
  4478d6:	pop    es
  4478d7:	jmp    0xe94bdc92
  4478dc:	mov    dh,0x67
  4478de:	pop    es
  4478df:	jmp    0xe94bd49a
  4478e4:	mov    dh,0x5b
  4478e6:	pop    es
  4478e7:	jmp    0xe94c0ca2
  4478ec:	mov    dh,0x57
  4478ee:	pop    es
  4478ef:	jmp    0x4478f4
	...
  447904:	mov    dh,0x4b
  447906:	pop    es
  447907:	jmp    0xe94bc8c2
  44790c:	mov    dh,0x43
  44790e:	pop    es
  44790f:	jmp    0xe94bc0ca
  447914:	mov    dh,0x3b
  447916:	pop    es
  447917:	jmp    0xe94bb4d2
  44791c:	mov    dh,0x3f
  44791e:	pop    es
  44791f:	jmp    0xe94bacda
  447924:	mov    dh,0x37
  447926:	pop    es
  447927:	jmp    0xe94ba4e2
  44792c:	mov    dh,0x2f
  44792e:	pop    es
  44792f:	jmp    0x4b9cea
  447934:	fmul   QWORD PTR [eax+ebx*4-0x1f7333f2]
  44793b:	push   cs
  44793c:	int3   
  44793d:	mov    esp,ss
  44793f:	push   cs
  447940:	fmul   QWORD PTR [eax+ebx*8-0x337323f2]
  447947:	push   cs
  447948:	int3   
  447949:	mov    eax,ss
  44794b:	push   cs
  44794c:	int3   
  44794d:	mov    esp,es
  44794f:	push   cs
  447950:	pushf  
  447951:	mov    eax,cs
  447953:	push   cs
  447954:	pushf  
  447955:	mov    WORD PTR [esi+ecx*1+0xecd8c8c],?
  44795c:	mov    WORD PTR [ecx+edx*8-0x4e7363f2],cs
  447963:	setl   BYTE PTR [esp+ebx*2+0xe]
	...
  44797b:	add    BYTE PTR [esp+ecx*4-0x7373f07e],cl
  447982:	jbe    0x447993
  447984:	pop    esp
  447985:	mov    WORD PTR [ebp+0x438c5c0e],?
  44798b:	cmovl  ecx,DWORD PTR [esp+eiz*2+0x448c4c0f]
  447993:	push   cs
  447994:	pop    esp
  447995:	mov    WORD PTR [ecx+0x3c8c5c0f],ss
  44799b:	push   cs
  44799c:	dec    esp
  44799d:	mov    WORD PTR [eax+0xe],es
  4479a0:	dec    esp
  4479a1:	mov    WORD PTR [eax+0xe],es
  4479a4:	sbb    al,0x8c
  4479a6:	push   0x2c8c1c0e
  4479ab:	push   cs
  4479ac:	or     al,0x8c
  4479ae:	and    BYTE PTR [esi],cl
  4479b0:	or     al,0x8c
  4479b2:	adc    al,0xe
  4479b4:	sbb    al,0x8c
  4479b6:	sbb    BYTE PTR [esi],cl
  4479b8:	sbb    al,0x8c
  4479ba:	or     al,0xe
  4479bc:	or     al,0x8c
  4479be:	sbb    eax,0x476b50f
  4479c3:	and    edx,eax
  4479c5:	jbe    0x4479cb
  4479c7:	sbb    BYTE PTR [ebx-0x4cebfb8a],bh
  4479cd:	jbe    0x4479d3
  4479cf:	xchg   dl,al
  4479d1:	jbe    0x4479d7
  4479d3:	mov    esp,0x4f0476aa
  4479d8:	lods   eax,DWORD PTR ds:[esi]
  4479d9:	jbe    0x4479df
  4479db:	test   eax,0x2604769d
	...
  4479f4:	pushf  
  4479f5:	jbe    0x4479fb
  4479f7:	js     0x4479c5
  4479f9:	push   0x68ccda04
  4479fe:	add    al,0x2f
  447a00:	mov    edi,0xa8f40468
  447a05:	push   0x68c0f004
  447a0a:	add    al,0xec
  447a0c:	mov    eax,0xb0e80468
  447a11:	push   0x68a8e404
  447a16:	add    al,0xe0
  447a18:	shr    BYTE PTR [eax+0x4],0xdc
  447a1c:	mov    eax,0xb0d80468
  447a21:	push   0x68ab1004
  447a26:	add    al,0xc
  447a28:	ret    
  447a29:	push   0x68bac204
  447a2e:	add    al,0xc8
  447a30:	mov    al,0x68
  447a32:	add    al,0xc0
  447a34:	test   al,0x68
  447a36:	add    al,0xbc
  447a38:	shr    BYTE PTR [eax+0x4],0xb8
  447a3c:	mov    eax,0xb0b40468
  447a41:	push   0x68ab7a04
  447a46:	add    al,0xac
  447a48:	shr    BYTE PTR [eax+0x4],0xed
  447a4c:	mov    al,ds:0xc703e98f
  447a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447a52:	jmp    0xe9d1cf5a
  447a57:	add    eax,DWORD PTR [eax]
	...
  447a69:	add    BYTE PTR [eax],al
  447a6b:	add    BYTE PTR [ecx-0x73],dl
  447a6e:	jmp    0xe9e41376
  447a73:	add    ecx,DWORD PTR [ebx+0x4503e99f]
  447a79:	(bad)  
  447a7a:	jmp    0xe9d1bb82
  447a7f:	add    edi,DWORD PTR ds:0x3903e98d
  447a85:	(bad)  
  447a86:	jmp    0xe9d1af8e
  447a8b:	add    esi,DWORD PTR [ecx]
  447a8d:	(bad)  
  447a8e:	jmp    0xe9e3d796
  447a93:	add    esi,DWORD PTR [esi-0x61]
  447a96:	jmp    0xe9e3f59e
  447a9b:	add    ecx,DWORD PTR [edi+ebx*4-0x7312fc17]
  447aa2:	jmp    0xe9d163aa
  447aa7:	add    edi,DWORD PTR [edi]
  447aa9:	mov    gs,ecx
  447aab:	add    edx,DWORD PTR [ecx]
  447aad:	(bad)  
  447aae:	jmp    0xe9d187b6
  447ab3:	add    ecx,DWORD PTR [ecx]
  447ab5:	(bad)  
  447ab6:	jmp    0xe9d17fbe
  447abb:	add    eax,DWORD PTR [ecx]
  447abd:	(bad)  
  447abe:	jmp    0xe9d291c6
  447ac3:	add    edi,ecx
  447ac5:	mov    ecx,gs
  447ac7:	add    ebx,DWORD PTR [edi]
  447ac9:	mov    gs,ecx
  447acb:	add    esp,ecx
  447acd:	mov    ecx,gs
  447acf:	add    eax,DWORD PTR [eax]
	...
  447ae1:	add    BYTE PTR [eax],al
  447ae3:	add    ch,ch
  447ae5:	mov    ecx,gs
  447ae7:	add    esi,DWORD PTR [ebx]
  447ae9:	mov    gs,ecx
  447aeb:	add    edx,ebp
  447aed:	mov    WORD PTR [eax],es
  447aef:	jmp    0xe94a16aa
  447af4:	mov    dh,0x97
  447af6:	add    eax,0x5a3b6e9
  447afb:	jmp    0xe94a1ab6
  447b00:	mov    dh,0x8b
  447b02:	add    eax,0x587b6e9
  447b07:	jmp    0xe94a0ec2
  447b0c:	mov    dh,0x12
  447b0e:	or     eax,0x57bb6e9
  447b13:	jmp    0xe949f2ce
  447b18:	mov    dh,0x83
  447b1a:	add    eax,0x57fb6e9
  447b1f:	jmp    0xe949e6da
  447b24:	mov    dh,0x67
  447b26:	add    eax,0x573b6e9
  447b2b:	jmp    0xe94b22e6
  447b30:	mov    dh,0xb3
  447b32:	push   es
  447b33:	jmp    0xe94b2aee
  447b38:	mov    dh,0x9b
  447b3a:	push   es
  447b3b:	jmp    0xe94c34f6
  447b40:	mov    dh,0xc5
  447b42:	pop    es
  447b43:	jmp    0xe94c3cfe
	...
  447b5c:	mov    dh,0xad
  447b5e:	pop    es
  447b5f:	jmp    0xe949cb1a
  447b64:	mov    dh,0x3b
  447b66:	add    eax,0x537b6e9
  447b6b:	jmp    0xe949bf26
  447b70:	mov    dh,0x3f
  447b72:	add    eax,0x52bb6e9
  447b77:	jmp    0x49a332
  447b7c:	or     al,0x91
  447b7e:	pushf  
  447b7f:	or     al,0xc
  447b81:	xchg   ecx,eax
  447b82:	mov    al,0xc
  447b84:	sbb    al,0x91
  447b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447b87:	or     al,0x1c
  447b89:	xchg   ecx,eax
  447b8a:	test   al,0xc
  447b8c:	or     al,0x91
  447b8e:	pushf  
  447b8f:	or     al,0xc
  447b91:	xchg   ecx,eax
  447b92:	mov    al,ds:0x9490dc0c
  447b97:	or     al,0xdc
  447b99:	nop
  447b9a:	repnz push cs
  447b9c:	int3   
  447b9d:	nop
  447b9e:	out    0xe,al
  447ba0:	int3   
  447ba1:	nop
  447ba2:	mov    ah,0x15
  447ba4:	fcom   QWORD PTR [eax-0x6f23f122]
  447baa:	int    0x15
  447bac:	int3   
  447bad:	nop
  447bae:	(bad)  
  447baf:	push   cs
  447bb0:	int3   
  447bb1:	nop
  447bb2:	fimul  DWORD PTR [esi]
  447bb4:	pushf  
  447bb5:	nop
  447bb6:	into   
  447bb7:	push   cs
  447bb8:	pushf  
  447bb9:	nop
  447bba:	ror    BYTE PTR [esi],cl
  447bbc:	mov    WORD PTR [eax+0xec6],ss
	...
  447bd2:	add    BYTE PTR [eax],al
  447bd4:	mov    WORD PTR [eax-0x6f63f3a0],ss
  447bda:	push   esp
  447bdb:	or     al,0x9c
  447bdd:	nop
  447bde:	pop    eax
  447bdf:	or     al,0x8c
  447be1:	nop
  447be2:	dec    esp
  447be3:	or     al,0x8c
  447be5:	nop
  447be6:	push   eax
  447be7:	or     al,0x5c
  447be9:	nop
  447bea:	inc    esp
  447beb:	or     al,0x5c
  447bed:	nop
  447bee:	dec    eax
  447bef:	or     al,0x4c
  447bf1:	nop
  447bf2:	cmp    al,0xc
  447bf4:	dec    esp
  447bf5:	nop
  447bf6:	inc    eax
  447bf7:	or     al,0x5c
  447bf9:	nop
  447bfa:	xor    al,0xc
  447bfc:	pop    esp
  447bfd:	nop
  447bfe:	cmp    BYTE PTR [esp+ecx*2],cl
  447c01:	nop
  447c02:	sub    al,0xc
  447c04:	dec    esp
  447c05:	nop
  447c06:	xor    BYTE PTR [esi*4-0x46d3fb9a],cl
  447c0d:	data16 add al,0x28
  447c10:	mov    cl,0x66
  447c12:	add    al,0x24
  447c14:	test   eax,0xc1200466
  447c19:	data16 add al,0x1c
  447c1c:	mov    ecx,0xb1180466
  447c21:	data16 add al,0x14
  447c24:	test   eax,0xc1100466
  447c29:	data16 add al,0xc
  447c2c:	mov    ecx,0xb1080466
  447c31:	data16 add al,0x4
  447c34:	test   eax,0x466
	...
  447c49:	add    BYTE PTR [eax],al
  447c4b:	add    cl,al
  447c4d:	data16 add al,0xfc
  447c50:	mov    esi,0xaef80466
  447c55:	data16 add al,0xf4
  447c58:	scas   al,BYTE PTR es:[edi]
  447c59:	data16 add al,0xf0
  447c5c:	mov    esi,0xbeec0468
  447c61:	push   0x68aee804
  447c66:	add    al,0xe4
  447c68:	scas   al,BYTE PTR es:[edi]
  447c69:	push   0x68bee004
  447c6e:	add    al,0xdc
  447c70:	mov    esi,0xaed80468
  447c75:	push   0x68aed404
  447c7a:	add    al,0xd0
  447c7c:	mov    esi,0xbecc0468
  447c81:	push   0x68aec804
  447c86:	add    al,0xc4
  447c88:	scas   al,BYTE PTR es:[edi]
  447c89:	push   0x68bec004
  447c8e:	add    al,0xbc
  447c90:	mov    esi,0xaeb80468
  447c95:	(bad)
  447c99:	xchg   ecx,ebp
  447c9b:	add    edi,edx
  447c9d:	xchg   cl,ch
  447c9f:	add    esi,esi
  447ca1:	xchg   cl,ch
  447ca3:	add    ecx,DWORD PTR [ebp-0x79]
  447ca6:	jmp    0xe9cbcdae
  447cab:	add    edx,DWORD PTR [ebp-0x79]
  447cae:	jmp    0x447cb6
	...
  447cc3:	add    BYTE PTR [edi],bh
  447cc5:	mov    al,ds:0xa0a603e9
  447cca:	jmp    0xe9e595d2
  447ccf:	add    eax,DWORD PTR [ebp-0x79]
  447cd2:	jmp    0xe9cbb5da
  447cd7:	add    ebp,DWORD PTR ds:0x4103e987
  447cdd:	xchg   ecx,ebp
  447cdf:	add    esi,DWORD PTR ds:0x4903e987
  447ce5:	xchg   cl,ch
  447ce7:	add    edx,edi
  447ce9:	mov    ecx,gs
  447ceb:	add    ebx,ebx
  447ced:	mov    ecx,gs
  447cef:	add    esp,DWORD PTR ds:0x1903e987
  447cf5:	xchg   ecx,ebp
  447cf7:	add    ecx,DWORD PTR ds:0x1103e987
  447cfd:	xchg   ecx,ebp
  447cff:	add    eax,DWORD PTR [ebp-0x7a]
  447d02:	jmp    0xe9cad60a
  447d07:	add    edi,DWORD PTR [edx]
  447d09:	mov    ebp,ecx
  447d0b:	add    esi,DWORD PTR [esi]
  447d0d:	mov    ebp,ecx
  447d0f:	add    esi,edx
  447d11:	mov    ebp,ecx
  447d13:	add    ebp,esi
  447d15:	mov    ebp,ecx
  447d17:	add    edi,DWORD PTR ds:0x4103e986
  447d1d:	xchg   cl,ch
  447d1f:	add    esp,DWORD PTR ds:0xb6e90086
  447d25:	or     ecx,DWORD PTR [ecx+ebp*8]
	...
  447d3c:	mov    dh,0x7
  447d3e:	or     al,0xe9
  447d40:	mov    dh,0x13
  447d42:	or     al,0xe9
  447d44:	mov    dh,0xf
  447d46:	or     al,0xe9
  447d48:	mov    dh,0xfb
  447d4a:	or     ebp,ecx
  447d4c:	mov    dh,0xf7
  447d4e:	or     ebp,ecx
  447d50:	mov    dh,0x3
  447d52:	or     al,0xe9
  447d54:	mov    dh,0xaf
  447d56:	or     ebp,ecx
  447d58:	mov    dh,0x9b
  447d5a:	or     ebp,ecx
  447d5c:	mov    dh,0x97
  447d5e:	or     ebp,ecx
  447d60:	mov    dh,0xa3
  447d62:	or     ebp,ecx
  447d64:	mov    dh,0x9f
  447d66:	or     ebp,ecx
  447d68:	mov    dh,0x8b
  447d6a:	or     ebp,ecx
  447d6c:	mov    dh,0x87
  447d6e:	or     ebp,ecx
  447d70:	mov    dh,0x93
  447d72:	or     ebp,ecx
  447d74:	mov    dh,0x8f
  447d76:	or     ebp,ecx
  447d78:	mov    dh,0x7b
  447d7a:	or     ebp,ecx
  447d7c:	mov    dh,0x77
  447d7e:	or     ebp,ecx
  447d80:	mov    dh,0x83
  447d82:	or     ebp,ecx
  447d84:	mov    dh,0x7f
  447d86:	or     ebp,ecx
  447d88:	mov    dh,0x6b
  447d8a:	or     ebp,ecx
  447d8c:	mov    dh,0x67
  447d8e:	or     ebp,ecx
  447d90:	mov    dh,0x73
  447d92:	or     ebp,ecx
  447d94:	mov    dh,0x7f
  447d96:	or     ebp,ecx
  447d98:	mov    dh,0x6b
  447d9a:	or     ebp,ecx
  447d9c:	mov    dh,0x67
  447d9e:	or     ebp,ecx
	...
  447db4:	mov    dh,0x63
  447db6:	or     ebp,ecx
  447db8:	mov    dh,0xd2
  447dba:	or     ebp,ecx
  447dbc:	mov    dh,0x4b
  447dbe:	or     ebp,ecx
  447dc0:	mov    dh,0xbd
  447dc2:	add    eax,0x268d4c00
  447dc7:	or     eax,0xad08d5c
  447dcc:	pop    esp
  447dcd:	(bad)  
  447dce:	les    ecx,FWORD PTR [edx]
  447dd0:	dec    esp
  447dd1:	(bad)  
  447dd2:	enter  0x4c0a,0x8d
  447dd6:	lods   al,BYTE PTR ds:[esi]
  447dd7:	or     bl,BYTE PTR [ecx*4-0x72e3f4e3]
  447dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447ddf:	or     cl,BYTE PTR [ecx*4-0x72f3ee98]
  447de6:	pushf  
  447de7:	or     bl,BYTE PTR [ecx*4-0x72e3f560]
  447dee:	xchg   esp,eax
  447def:	or     cl,BYTE PTR [ecx*4-0x72f3f568]
  447df6:	mov    WORD PTR [edx],cs
  447df8:	fmul   QWORD PTR [eax+edx*4-0x7b7323f6]
  447dff:	or     cl,ah
  447e01:	mov    WORD PTR [eax+0x7c8ccc0a],cs
  447e07:	or     bl,ah
  447e09:	mov    WORD PTR [eax-0x7b7323f6],es
  447e0f:	or     cl,ah
  447e11:	mov    esp,fs
  447e13:	push   cs
  447e14:	int3   
  447e15:	mov    WORD PTR [edx+ecx*1+0x0],gs
	...
  447e29:	add    BYTE PTR [eax],al
  447e2b:	add    BYTE PTR [esp+ecx*4-0x7363f590],bl
  447e32:	or     cl,BYTE PTR fs:[esp+ecx*4-0x7373f598]
  447e3a:	pop    esp
  447e3b:	or     bl,BYTE PTR [esp+ecx*4-0x7363f5a0]
  447e42:	push   esp
  447e43:	or     cl,BYTE PTR [esp+ecx*4-0x7373f5a8]
  447e4a:	dec    esp
  447e4b:	or     bl,BYTE PTR [esp+ecx*4+0x50]
  447e4f:	or     dh,BYTE PTR [ebp-0x50b3fb9a]
  447e55:	data16 add al,0x48
  447e58:	scas   eax,DWORD PTR es:[edi]
  447e59:	data16 add al,0xd7
  447e5c:	ret    
  447e5d:	data16 add al,0x50
  447e60:	mov    edi,0xaf4c0466
  447e65:	data16 add al,0x48
  447e68:	scas   eax,DWORD PTR es:[edi]
  447e69:	data16 add al,0x44
  447e6c:	mov    edi,0xbf400466
  447e71:	data16 add al,0x3c
  447e74:	scas   eax,DWORD PTR es:[edi]
  447e75:	data16 add al,0x38
  447e78:	scas   eax,DWORD PTR es:[edi]
  447e79:	data16 add al,0x34
  447e7c:	mov    edi,0xbf200466
  447e81:	data16 add al,0x1c
  447e84:	scas   eax,DWORD PTR es:[edi]
  447e85:	data16 add al,0x18
  447e88:	scas   eax,DWORD PTR es:[edi]
  447e89:	data16 add al,0x14
  447e8c:	mov    edi,0x100466
	...
  447ea1:	add    BYTE PTR [eax],al
  447ea3:	add    BYTE PTR [edi-0x50f3fb9a],bh
  447ea9:	data16 add al,0xa7
  447eac:	scas   al,BYTE PTR es:[edi]
  447ead:	data16 add al,0x4
  447eb0:	mov    edi,0xbf000466
  447eb5:	data16 add al,0xfc
  447eb8:	lods   al,BYTE PTR ds:[esi]
  447eb9:	data16 add al,0xf8
  447ebc:	lods   al,BYTE PTR ds:[esi]
  447ebd:	data16 add al,0xf4
  447ec0:	mov    esp,0xbcf00468
  447ec5:	push   0x68acec04
  447eca:	add    al,0xe8
  447ecc:	lods   al,BYTE PTR ds:[esi]
  447ecd:	push   0x68bce404
  447ed2:	add    al,0xe0
  447ed4:	mov    esp,0xacdc0468
  447ed9:	push   0x8facd804
  447ede:	jmp    0xe9ce07e6
  447ee3:	add    eax,DWORD PTR [ebp+0x7103e989]
  447ee9:	mov    ecx,ebp
  447eeb:	add    edx,edx
  447eed:	mov    ch,cl
  447eef:	add    edi,DWORD PTR [ecx-0x77]
  447ef2:	jmp    0xe9cdf3fa
  447ef7:	add    eax,DWORD PTR [ecx]
  447ef9:	mov    ecx,ebp
  447efb:	add    edi,ebp
  447efd:	mov    cl,ch
  447eff:	add    ebp,DWORD PTR [ecx-0x77]
  447f02:	jmp    0xe9cde40a
  447f07:	add    eax,DWORD PTR [eax]
	...
  447f19:	add    BYTE PTR [eax],al
  447f1b:	add    BYTE PTR [ecx-0x77],dl
  447f1e:	jmp    0xe9cdcc26
  447f23:	add    ebx,DWORD PTR [ecx-0x77]
  447f26:	jmp    0xe9cf882e
  447f2b:	add    esp,DWORD PTR [ecx]
  447f2d:	mov    ecx,ebp
  447f2f:	add    ebx,DWORD PTR ds:0x4903e989
  447f35:	mov    ecx,ebp
  447f37:	add    eax,DWORD PTR [ebp-0x77]
  447f3a:	jmp    0xe9cdb042
  447f3f:	add    ebp,DWORD PTR ds:0x3903e989
  447f45:	mov    ecx,ebp
  447f47:	add    esi,DWORD PTR ds:0x4103e989
  447f4d:	mov    cl,ch
  447f4f:	add    edi,DWORD PTR ds:0x2903e988
  447f55:	mov    ecx,ebp
  447f57:	add    esp,DWORD PTR ds:0x1103e989
  447f5d:	mov    ecx,ebp
  447f5f:	add    ecx,DWORD PTR ds:0x8303e989
  447f65:	mov    ch,cl
  447f67:	add    edx,DWORD PTR ds:0xb6e90089
  447f6d:	ror    DWORD PTR [ecx],cl
  447f6f:	jmp    0xe94e572a
  447f74:	mov    dh,0xdb
  447f76:	or     ecx,ebp
  447f78:	mov    dh,0xdf
  447f7a:	or     ecx,ebp
  447f7c:	mov    dh,0xc3
  447f7e:	or     ecx,ebp
	...
  447f94:	mov    dh,0xc7
  447f96:	or     ecx,ebp
  447f98:	mov    dh,0xcb
  447f9a:	or     ecx,ebp
  447f9c:	mov    dh,0xcf
  447f9e:	or     ecx,ebp
  447fa0:	mov    dh,0xb3
  447fa2:	or     ecx,ebp
  447fa4:	mov    dh,0xb7
  447fa6:	or     ecx,ebp
  447fa8:	mov    dh,0xbb
  447faa:	or     ecx,ebp
  447fac:	mov    dh,0x19
  447fae:	or     al,0xe9
  447fb0:	mov    dh,0x1d
  447fb2:	or     al,0xe9
  447fb4:	mov    dh,0x21
  447fb6:	or     al,0xe9
  447fb8:	mov    dh,0x5
  447fba:	or     al,0xe9
  447fbc:	mov    dh,0xbe
  447fbe:	or     ecx,ebp
  447fc0:	mov    dh,0xd
  447fc2:	or     al,0xe9
  447fc4:	mov    dh,0x11
  447fc6:	or     al,0xe9
  447fc8:	mov    dh,0xf5
  447fca:	or     ebp,ecx
  447fcc:	mov    dh,0xae
  447fce:	or     ecx,ebp
  447fd0:	mov    dh,0xb2
  447fd2:	or     ecx,ebp
  447fd4:	mov    dh,0x1
  447fd6:	or     al,0xe9
  447fd8:	mov    dh,0x9a
  447fda:	or     ecx,ebp
  447fdc:	mov    dh,0xe9
  447fde:	or     ebp,ecx
  447fe0:	mov    dh,0xed
  447fe2:	or     ebp,ecx
  447fe4:	mov    dh,0xf1
  447fe6:	or     ebp,ecx
  447fe8:	mov    dh,0xd5
  447fea:	or     ebp,ecx
  447fec:	mov    dh,0x7f
  447fee:	or     ecx,ebp
  447ff0:	mov    dh,0x63
  447ff2:	or     ecx,ebp
  447ff4:	mov    dh,0x67
  447ff6:	or     DWORD PTR [eax],eax
	...
  44800c:	pushf  
  44800d:	xchg   ecx,eax
  44800e:	inc    esi
  44800f:	or     ebx,DWORD PTR [ecx+edx*4-0x6e73f711]
  448016:	repz or BYTE PTR [ecx+edx*4-0x6ea3f719],cl
  44801e:	jmp    0x448028
  448020:	pop    esp
  448021:	xchg   ecx,eax
  448022:	fisttp WORD PTR [eax]
  448024:	dec    esp
  448025:	xchg   ecx,eax
  448026:	jecxz  0x448030
  448028:	dec    esp
  448029:	xchg   ecx,eax
  44802a:	xor    cl,BYTE PTR [ebx]
  44802c:	pop    esp
  44802d:	xchg   ecx,eax
  44802e:	or     ebx,DWORD PTR es:[ecx+edx*4-0x31]
  448033:	or     BYTE PTR [ecx+edx*4-0x2d],cl
  448037:	or     BYTE PTR [ecx+edx*4-0x39],cl
  44803b:	or     BYTE PTR [ecx+edx*4],bl
  44803e:	retf   
  44803f:	or     BYTE PTR [ecx+edx*4],bl
  448042:	sbb    cl,BYTE PTR [ebx]
  448044:	or     al,0x91
  448046:	push   cs
  448047:	or     ecx,DWORD PTR [ecx+edx*4]
  44804a:	adc    cl,BYTE PTR [ebx]
  44804c:	sbb    al,0x91
  44804e:	push   es
  44804f:	or     ebx,DWORD PTR [ecx+edx*4]
  448052:	scas   eax,DWORD PTR es:[edi]
  448053:	or     BYTE PTR [ecx+edx*4],cl
  448056:	mov    bl,0x8
  448058:	or     al,0x91
  44805a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44805b:	or     ah,bl
  44805d:	nop
  44805e:	stos   DWORD PTR es:[edi],eax
  44805f:	or     ah,bl
  448061:	nop
  448062:	lahf   
  448063:	or     ah,cl
  448065:	nop
  448066:	mov    ds:0xf290cc08,eax
  44806b:	or     bl,ah
  44806d:	nop
  44806e:	fwait
  44806f:	or     BYTE PTR [eax],al
	...
  448081:	add    BYTE PTR [eax],al
  448083:	add    ah,bl
  448085:	nop
  448086:	(bad)
  44808a:	xchg   ebx,eax
  44808b:	or     ah,cl
  44808d:	nop
  44808e:	xchg   DWORD PTR [eax],ecx
  448090:	pushf  
  448091:	nop
  448092:	mov    ecx,DWORD PTR [eax]
  448094:	pushf  
  448095:	nop
  448096:	jg     0x4480a0
  448098:	mov    ch,0x66
  44809a:	add    al,0x83
  44809c:	lods   eax,DWORD PTR ds:[esi]
  44809d:	data16 add al,0x7f
  4480a0:	mov    ebp,0xbd7b0466
  4480a5:	data16 add al,0x77
  4480a8:	lods   eax,DWORD PTR ds:[esi]
  4480a9:	data16 add al,0x73
  4480ac:	lods   eax,DWORD PTR ds:[esi]
  4480ad:	data16 add al,0xc2
  4480b0:	mov    edi,0xbfbe0466
  4480b5:	data16 add al,0xba
  4480b8:	scas   eax,DWORD PTR es:[edi]
  4480b9:	data16 add al,0xb6
  4480bc:	scas   eax,DWORD PTR es:[edi]
  4480bd:	data16 add al,0xb2
  4480c0:	mov    edi,0xbfae0466
  4480c5:	data16 add al,0xaa
  4480c8:	scas   eax,DWORD PTR es:[edi]
  4480c9:	data16 add al,0xa6
  4480cc:	scas   eax,DWORD PTR es:[edi]
  4480cd:	data16 add al,0xa2
  4480d0:	mov    edi,0xbf9e0466
  4480d5:	data16 add al,0x9a
  4480d8:	scas   eax,DWORD PTR es:[edi]
  4480d9:	data16 add al,0x96
  4480dc:	scas   eax,DWORD PTR es:[edi]
  4480dd:	data16 add al,0x92
  4480e0:	mov    edi,0xbf8e0466
  4480e5:	data16 add al,0x8a
	...
  4480fc:	scas   eax,DWORD PTR es:[edi]
  4480fd:	data16 add al,0x86
  448100:	scas   eax,DWORD PTR es:[edi]
  448101:	data16 add al,0x82
  448104:	mov    edi,0xbf7e0466
  448109:	data16 add al,0x7a
  44810c:	scas   eax,DWORD PTR es:[edi]
  44810d:	data16 add al,0x76
  448110:	scas   eax,DWORD PTR es:[edi]
  448111:	data16 add al,0x72
  448114:	mov    edi,0xbf6e0466
  448119:	data16 add al,0x6a
  44811c:	scas   eax,DWORD PTR es:[edi]
  44811d:	data16 add al,0x66
  448120:	scas   eax,DWORD PTR es:[edi]
  448121:	data16 add al,0x62
  448124:	mov    edi,0xb03e98f
  448129:	xchg   cl,ch
  44812b:	add    edi,edi
  44812d:	test   ecx,ebp
  44812f:	add    eax,DWORD PTR [ebx]
  448131:	xchg   cl,ch
  448133:	add    esp,edi
  448135:	test   ecx,ebp
  448137:	add    edi,ebx
  448139:	test   ecx,ebp
  44813b:	add    ebp,edi
  44813d:	test   ecx,ebp
  44813f:	add    esi,ebx
  448141:	test   ecx,ebp
  448143:	add    esi,edi
  448145:	test   ecx,ebp
  448147:	add    ebp,DWORD PTR [ebx-0x60fc167b]
  44814d:	test   ecx,ebp
  44814f:	add    esp,DWORD PTR [ebx-0x78fc167b]
  448155:	test   ecx,ebp
  448157:	add    ebx,DWORD PTR [ebx-0x70fc167b]
  44815d:	test   ecx,ebp
  44815f:	add    eax,DWORD PTR [eax]
	...
  448171:	add    BYTE PTR [eax],al
  448173:	add    BYTE PTR [ebx-0x28fc167b],dl
  448179:	test   ecx,ebp
  44817b:	add    ecx,ebx
  44817d:	test   ecx,ebp
  44817f:	add    edi,DWORD PTR [edi-0x3cfc167b]
  448185:	test   ecx,ebp
  448187:	add    esp,DWORD PTR [edi-0x44fc167b]
  44818d:	test   ecx,ebp
  44818f:	add    ebp,DWORD PTR [edi-0x4cfc167b]
  448195:	test   ecx,ebp
  448197:	add    esi,DWORD PTR [edi-0x14fc167b]
  44819d:	mov    cl,ch
  44819f:	add    ebx,edi
  4481a1:	mov    cl,ch
  4481a3:	add    esp,ebx
  4481a5:	mov    cl,ch
  4481a7:	add    eax,edi
  4481a9:	mov    cl,ch
  4481ab:	add    ebx,ebx
  4481ad:	mov    cl,ch
  4481af:	add    ecx,edi
  4481b1:	mov    BYTE PTR [eax],al
  4481b3:	jmp    0xe94eeb6e
  4481b8:	mov    dh,0x6d
  4481ba:	or     ch,cl
  4481bc:	mov    dh,0x51
  4481be:	or     ch,cl
  4481c0:	mov    dh,0x55
  4481c2:	or     ch,cl
  4481c4:	mov    dh,0x59
  4481c6:	or     ch,cl
  4481c8:	mov    dh,0x5d
  4481ca:	or     ch,cl
  4481cc:	mov    dh,0x41
  4481ce:	or     ch,cl
  4481d0:	mov    dh,0x45
  4481d2:	or     ch,cl
  4481d4:	mov    dh,0x49
  4481d6:	or     ch,cl
	...
  4481ec:	mov    dh,0x4d
  4481ee:	or     ch,cl
  4481f0:	mov    dh,0x31
  4481f2:	or     ch,cl
  4481f4:	mov    dh,0x35
  4481f6:	or     ch,cl
  4481f8:	mov    dh,0x39
  4481fa:	or     ch,cl
  4481fc:	mov    dh,0x3d
  4481fe:	or     ch,cl
  448200:	mov    dh,0x21
  448202:	or     ch,cl
  448204:	mov    dh,0x25
  448206:	or     ch,cl
  448208:	mov    dh,0x29
  44820a:	or     ch,cl
  44820c:	mov    dh,0x2d
  44820e:	or     ch,cl
  448210:	mov    dh,0x11
  448212:	or     ch,cl
  448214:	mov    dh,0x15
  448216:	or     ch,cl
  448218:	mov    dh,0x19
  44821a:	or     ch,cl
  44821c:	mov    dh,0x1d
  44821e:	or     ch,cl
  448220:	mov    dh,0x1
  448222:	or     ch,cl
  448224:	mov    dh,0x5
  448226:	or     ch,cl
  448228:	mov    dh,0x9
  44822a:	or     ch,cl
  44822c:	mov    dh,0xd
  44822e:	or     ch,cl
  448230:	mov    dh,0xf1
  448232:	or     ecx,ebp
  448234:	mov    dh,0xf5
  448236:	or     ecx,ebp
  448238:	mov    dh,0xf9
  44823a:	or     ecx,ebp
  44823c:	mov    dh,0xfd
  44823e:	or     DWORD PTR [eax],eax
  448240:	fmul   QWORD PTR [ebp-0x7233f69a]
  448246:	push   0x9
  448248:	int3   
  448249:	lea    ebx,[esi+0x9]
  44824c:	pushf  
  44824d:	lea    esp,[edx+0x9]
	...
  448264:	pushf  
  448265:	lea    edx,[esi+0x9]
  448268:	mov    WORD PTR [ebp-0x7273f6a6],cs
  44826e:	dec    esi
  44826f:	or     DWORD PTR [ebp+ecx*4-0x7263f6ae],ebx
  448276:	inc    esi
  448277:	or     DWORD PTR [ebp+ecx*4-0x7273f6b6],ecx
  44827e:	or     DWORD PTR ds:[ebp+ecx*4+0x42],ebx
  448283:	or     DWORD PTR [ebp+ecx*4+0x36],ebx
  448287:	or     DWORD PTR [ebp+ecx*4+0x3a],ecx
  44828b:	or     DWORD PTR [ebp+ecx*4+0x2e],ecx
  44828f:	or     DWORD PTR [ebp+ecx*4+0x32],ebx
  448293:	or     DWORD PTR [ebp+ecx*4+0x26],ebx
  448297:	or     DWORD PTR [ebp+ecx*4+0x2a],ecx
  44829b:	or     DWORD PTR [ebp+ecx*4+0x1e],ecx
  44829f:	or     DWORD PTR [ecx*4-0x72e3f6de],ebx
  4482a6:	push   ss
  4482a7:	or     DWORD PTR [ecx*4-0x72f3f6e6],ecx
  4482ae:	push   cs
  4482af:	or     DWORD PTR [ecx*4-0x72e3f6ee],ebx
  4482b6:	push   es
  4482b7:	or     DWORD PTR [ecx*4-0x72f3f6f6],ecx
  4482be:	dec    BYTE PTR [eax]
  4482c0:	fmul   QWORD PTR [edx+eax*1-0x97323f7]
  4482c7:	or     BYTE PTR [eax],al
	...
  4482d9:	add    BYTE PTR [eax],al
  4482db:	add    ah,cl
  4482dd:	mov    edx,?
  4482df:	or     BYTE PTR [ebp-0x4209fb9a],dh
  4482e5:	data16 add al,0xf2
  4482e8:	mov    ebp,0xadee0466
  4482ed:	data16 add al,0xea
  4482f0:	lods   eax,DWORD PTR ds:[esi]
  4482f1:	data16 add al,0xe6
  4482f4:	mov    ebp,0xbde20466
  4482f9:	data16 add al,0xde
  4482fc:	lods   eax,DWORD PTR ds:[esi]
  4482fd:	data16 add al,0xda
  448300:	lods   eax,DWORD PTR ds:[esi]
  448301:	data16 add al,0xd6
  448304:	mov    ebp,0xbdd20466
  448309:	data16 add al,0xce
  44830c:	lods   eax,DWORD PTR ds:[esi]
  44830d:	data16 add al,0xca
  448310:	lods   eax,DWORD PTR ds:[esi]
  448311:	data16 add al,0xc6
  448314:	mov    ebp,0xbdc20466
  448319:	data16 add al,0xbe
  44831c:	lods   eax,DWORD PTR ds:[esi]
  44831d:	data16 add al,0xba
  448320:	lods   eax,DWORD PTR ds:[esi]
  448321:	data16 add al,0xb6
  448324:	mov    ebp,0xbdb20466
  448329:	data16 add al,0xae
  44832c:	lods   eax,DWORD PTR ds:[esi]
  44832d:	data16 add al,0xaa
  448330:	lods   eax,DWORD PTR ds:[esi]
  448331:	data16 add al,0xa6
  448334:	mov    ebp,0xbda20466
  448339:	data16 add al,0x9e
  44833c:	lods   eax,DWORD PTR ds:[esi]
  44833d:	data16 add al,0x9a
	...
  448354:	lods   eax,DWORD PTR ds:[esi]
  448355:	data16 add al,0x96
  448358:	mov    ebp,0xbd920466
  44835d:	data16 add al,0x8e
  448360:	lods   eax,DWORD PTR ds:[esi]
  448361:	data16 add al,0x8a
  448364:	lods   eax,DWORD PTR ds:[esi]
  448365:	data16 add al,0x86
  448368:	mov    ebp,0xbd820466
  44836d:	(bad)
  448371:	xchg   ecx,ebp
  448373:	add    ebx,DWORD PTR [edi-0x79]
  448376:	jmp    0xe9cbce7e
  44837b:	add    eax,DWORD PTR [edi-0x79]
  44837e:	jmp    0xe9cbd686
  448383:	add    ecx,DWORD PTR [edi-0x79]
  448386:	jmp    0xe9dc9e8e
  44838b:	add    edx,DWORD PTR [edi]
  44838d:	cwde   
  44838e:	jmp    0xe9dc8696
  448393:	add    edi,edi
  448395:	xchg   edi,eax
  448396:	jmp    0xe9dc6e9e
  44839b:	add    esp,edi
  44839d:	xchg   edi,eax
  44839e:	jmp    0xe9dc76a6
  4483a3:	add    ebp,edi
  4483a5:	xchg   edi,eax
  4483a6:	jmp    0xe9dc7eae
  4483ab:	add    esi,edi
  4483ad:	xchg   edi,eax
  4483ae:	jmp    0xe9dc26b6
  4483b3:	add    ebx,DWORD PTR [edi+0x3e997]
	...
  4483c9:	add    BYTE PTR [eax],al
  4483cb:	add    BYTE PTR [ebx-0x78fc1669],cl
  4483d1:	xchg   edi,eax
  4483d2:	jmp    0xe9dc16da
  4483d7:	add    ecx,DWORD PTR [edi-0x24fc1669]
  4483dd:	xchg   edi,eax
  4483de:	jmp    0xe9dc5ae6
  4483e3:	add    eax,ebx
  4483e5:	xchg   edi,eax
  4483e6:	jmp    0xe9dc42ee
  4483eb:	add    ebp,DWORD PTR [ebx-0x58fc1669]
  4483f1:	xchg   edi,eax
  4483f2:	jmp    0xe9dc36fa
  4483f7:	add    ecx,esp
  4483f9:	xchg   esi,eax
  4483fa:	add    cl,ch
  4483fc:	mov    dh,0xb4
  4483fe:	(bad)  
  4483ff:	call   0xe94d15ba
  448404:	mov    dh,0x6d
  448406:	add    cl,ch
  448408:	mov    dh,0x69
  44840a:	add    cl,ch
  44840c:	mov    dh,0x65
  44840e:	add    cl,ch
  448410:	mov    dh,0x61
  448412:	add    cl,ch
  448414:	mov    dh,0x7d
  448416:	add    cl,ch
  448418:	mov    dh,0x79
  44841a:	add    cl,ch
  44841c:	mov    dh,0x75
  44841e:	add    cl,ch
  448420:	mov    dh,0x71
  448422:	add    cl,ch
  448424:	mov    dh,0x4d
  448426:	add    cl,ch
  448428:	mov    dh,0x49
  44842a:	add    cl,ch
  44842c:	mov    dh,0x45
  44842e:	add    cl,ch
	...
  448444:	mov    dh,0x41
  448446:	add    cl,ch
  448448:	mov    dh,0x5d
  44844a:	add    cl,ch
  44844c:	mov    dh,0x59
  44844e:	add    cl,ch
  448450:	mov    dh,0x55
  448452:	add    cl,ch
  448454:	mov    dh,0x51
  448456:	add    cl,ch
  448458:	mov    dh,0x2d
  44845a:	add    cl,ch
  44845c:	mov    dh,0x29
  44845e:	add    cl,ch
  448460:	mov    dh,0x25
  448462:	add    cl,ch
  448464:	mov    dh,0x21
  448466:	add    cl,ch
  448468:	mov    dh,0x3d
  44846a:	add    cl,ch
  44846c:	mov    dh,0xf4
  44846e:	std    
  44846f:	call   0xe942752a
  448474:	mov    dh,0xcc
  448476:	std    
  448477:	call   0xe9424d32
  44847c:	mov    dh,0xc4
  44847e:	std    
  44847f:	call   0xe942453a
  448484:	mov    dh,0xdc
  448486:	std    
  448487:	dec    DWORD PTR [edx+edx*4]
  44848a:	sbb    al,0x5
  44848c:	or     al,0x92
  44848e:	mov    al,BYTE PTR [edi]
  448490:	fcom   QWORD PTR [ecx-0x6e23f882]
  448496:	add    BYTE PTR [edi],0xcc
  448499:	xchg   ecx,eax
  44849a:	jbe    0x4484a3
  44849c:	int3   
  44849d:	xchg   ecx,eax
  44849e:	sub    eax,0x3191dc05
  4484a3:	add    eax,0x52591dc
	...
  4484bc:	int3   
  4484bd:	xchg   ecx,eax
  4484be:	sub    DWORD PTR ds:0x76a91cc,eax
  4484c4:	pushf  
  4484c5:	xchg   ecx,eax
  4484c6:	pop    esi
  4484c7:	pop    es
  4484c8:	pushf  
  4484c9:	xchg   ecx,eax
  4484ca:	bound  eax,QWORD PTR [edi]
  4484cc:	mov    WORD PTR [ecx-0x6e73f8aa],ss
  4484d2:	pop    edx
  4484d3:	pop    es
  4484d4:	pushf  
  4484d5:	xchg   ecx,eax
  4484d6:	dec    esi
  4484d7:	pop    es
  4484d8:	pushf  
  4484d9:	xchg   ecx,eax
  4484da:	push   edx
  4484db:	pop    es
  4484dc:	mov    WORD PTR [ecx-0x6e73f8ba],ss
  4484e2:	std    
  4484e3:	add    al,0x5c
  4484e5:	xchg   ecx,eax
  4484e6:	add    DWORD PTR ds:0x4f5915c,eax
  4484ec:	dec    esp
  4484ed:	xchg   ecx,eax
  4484ee:	ss pop es
  4484f0:	dec    esp
  4484f1:	xchg   ecx,eax
  4484f2:	cmp    al,BYTE PTR [edi]
  4484f4:	pop    esp
  4484f5:	xchg   ecx,eax
  4484f6:	cs pop es
  4484f8:	pop    esp
  4484f9:	xchg   ecx,eax
  4484fa:	xor    al,BYTE PTR [edi]
  4484fc:	dec    esp
  4484fd:	xchg   ecx,eax
  4484fe:	es pop es
  448500:	dec    esp
  448501:	xchg   ecx,eax
  448502:	sub    al,BYTE PTR [edi]
  448504:	sbb    al,0x91
  448506:	push   ds
  448507:	pop    es
  448508:	sbb    al,0x91
  44850a:	and    al,BYTE PTR [edi]
  44850c:	or     al,0x91
  44850e:	push   ss
  44850f:	pop    es
  448510:	or     al,0x91
  448512:	sbb    al,BYTE PTR [edi]
  448514:	mov    ch,0x76
  448516:	add    al,0x16
  448518:	mov    dl,0x76
  44851a:	add    al,0x12
  44851c:	mov    edx,0xe0476
	...
  448531:	add    BYTE PTR [eax],al
  448533:	add    BYTE PTR [edx-0x45f5fb8a],dh
  448539:	jbe    0x44853f
  44853b:	push   es
  44853c:	mov    dl,0x76
  44853e:	add    al,0x2
  448540:	mov    edx,0xb3fe0476
  448545:	jbe    0x44854b
  448547:	cli    
  448548:	mov    ebx,0xb3f60476
  44854d:	jbe    0x448553
  44854f:	repnz mov ebx,0xb3ee0476
  448555:	jbe    0x44855b
  448557:	jmp    0x76b3:0xe60476bb
  44855e:	add    al,0xe2
  448560:	mov    ebx,0xb3de0476
  448565:	jbe    0x44856b
  448567:	fidivr DWORD PTR [ebx-0x4c29fb8a]
  44856d:	jbe    0x448573
  44856f:	sar    BYTE PTR [ebx-0x4c31fb8a],cl
  448575:	jbe    0x44857b
  448577:	test   DWORD PTR [ecx-0x4e7efb8a],edi
  44857d:	jbe    0x448583
  44857f:	jge    0x44853a
  448581:	jbe    0x448587
  448583:	mov    esi,0xba0476b3
  448588:	mov    ebx,0xb3b60476
  44858d:	jbe    0x448593
  44858f:	mov    dl,0xbb
  448591:	jbe    0x448597
  448593:	scas   al,BYTE PTR es:[edi]
  448594:	mov    bl,0x76
  448596:	add    al,0xaa
	...
  4485ac:	mov    ebx,0xb3a60476
  4485b1:	jbe    0x4485b7
  4485b3:	mov    ds:0x3e98fbb,al
  4485b8:	cmp    edx,DWORD PTR [ebp-0x6ad0fc17]
  4485be:	jmp    0xe9d9a8c6
  4485c3:	add    esp,DWORD PTR [edi]
  4485c5:	xchg   ebp,eax
  4485c6:	jmp    0xe9d9b0ce
  4485cb:	add    edi,DWORD PTR [edi]
  4485cd:	xchg   ebp,eax
  4485ce:	jmp    0xe9d9b8d6
  4485d3:	add    esi,DWORD PTR [edi]
  4485d5:	xchg   ebp,eax
  4485d6:	jmp    0xe9d9e0de
  4485db:	add    ecx,DWORD PTR [edi-0x6b]
  4485de:	jmp    0xe9d9c8e6
  4485e3:	add    eax,DWORD PTR [edi-0x6b]
  4485e6:	jmp    0xe9d9d0ee
  4485eb:	add    ebx,DWORD PTR [edi]
  4485ed:	xchg   edx,eax
  4485ee:	jmp    0xe9d698f6
  4485f3:	add    edx,DWORD PTR [edi]
  4485f5:	xchg   edx,eax
  4485f6:	jmp    0xe9d680fe
  4485fb:	add    ebp,edi
  4485fd:	xchg   ecx,eax
  4485fe:	jmp    0xe9d66906
  448603:	add    esp,edi
  448605:	xchg   ecx,eax
  448606:	jmp    0xe9d6710e
  44860b:	add    edi,DWORD PTR [eax+0x3e993]
	...
  448621:	add    BYTE PTR [eax],al
  448623:	add    BYTE PTR [ebx+edx*4-0x709ffc17],dh
  44862a:	jmp    0xe9d3e232
  44862f:	add    ecx,DWORD PTR [edi-0x7cfc166f]
  448635:	xchg   ecx,eax
  448636:	jmp    0xe9d60d3e
  44863b:	add    ecx,DWORD PTR [ebx-0x20fc166f]
  448641:	xchg   ecx,eax
  448642:	add    cl,ch
  448644:	mov    dh,0xb1
  448646:	(bad)  
  448647:	call   0xe9433402
  44864c:	mov    dh,0x89
  44864e:	(bad)  
  44864f:	call   0xe9430c0a
  448654:	mov    dh,0x81
  448656:	(bad)  
  448657:	call   0xe9430412
  44865c:	mov    dh,0x99
  44865e:	(bad)  
  44865f:	call   0xe9431c1a
  448664:	mov    dh,0x91
  448666:	(bad)  
  448667:	call   0xe9431422
  44866c:	mov    dh,0x69
  44866e:	(bad)  
  44866f:	call   0xe942ec2a
  448674:	mov    dh,0x61
  448676:	(bad)  
  448677:	call   0xe942e432
  44867c:	mov    dh,0x79
  44867e:	(bad)  
  44867f:	call   0xe942fc3a
  448684:	mov    dh,0x71
  448686:	(bad)  
  448687:	call   0x44868c
	...
  44869c:	mov    dh,0x6d
  44869e:	(bad)  
  44869f:	call   0xe942d05a
  4486a4:	mov    dh,0x45
  4486a6:	(bad)  
  4486a7:	call   0xe942c862
  4486ac:	mov    dh,0x3d
  4486ae:	(bad)  
  4486af:	call   0xe942e06a
  4486b4:	mov    dh,0x55
  4486b6:	(bad)  
  4486b7:	call   0xe942d872
  4486bc:	mov    dh,0x4d
  4486be:	(bad)  
  4486bf:	call   0xe942b07a
  4486c4:	mov    dh,0x25
  4486c6:	(bad)  
  4486c7:	call   0xe942a882
  4486cc:	mov    dh,0x1d
  4486ce:	(bad)  
  4486cf:	dec    DWORD PTR [esi+ecx*4-0x5a]
  4486d3:	add    eax,0x5aa8e1c
  4486d8:	sbb    al,0x8e
  4486da:	sahf   
  4486db:	add    eax,0x5a28e0c
  4486e0:	or     al,0x8e
  4486e2:	xchg   esi,eax
  4486e3:	add    eax,0x59a8e1c
  4486e8:	sbb    al,0x8e
  4486ea:	mov    es,WORD PTR ds:0x5928e0c
  4486f0:	or     al,0x8e
  4486f2:	xchg   BYTE PTR ds:0x58a8ddc,al
  4486f8:	fmul   QWORD PTR [ebp-0x7233fa82]
  4486fe:	add    BYTE PTR ds:0x0,0x0
	...
  448711:	add    BYTE PTR [eax],al
  448713:	add    ah,cl
  448715:	lea    esi,[esi+0x5]
  448718:	fmul   QWORD PTR [ebp-0x7223fa86]
  44871e:	outs   dx,BYTE PTR ds:[esi]
  44871f:	add    eax,0x5728dcc
  448724:	int3   
  448725:	lea    esp,[esi+0x5]
  448728:	pushf  
  448729:	lea    ebp,[edx+0x5]
  44872c:	pushf  
  44872d:	lea    ebx,[esi+0x5]
  448730:	mov    WORD PTR [ebp-0x7273fa9e],cs
  448736:	push   esi
  448737:	add    eax,0x55a8d9c
  44873c:	pushf  
  44873d:	lea    ecx,[esi+0x5]
  448740:	mov    WORD PTR [ebp-0x7273faae],cs
  448746:	inc    esi
  448747:	add    eax,0x54a8d5c
  44874c:	pop    esp
  44874d:	lea    edi,[esi]
  44874f:	add    eax,0x5428d4c
  448754:	dec    esp
  448755:	lea    esi,[esi]
  448757:	add    eax,0x53a8d5c
  44875c:	mov    ch,0x76
  44875e:	add    al,0x36
  448760:	mov    eax,0xb0320476
  448765:	jbe    0x44876b
  448767:	cs mov eax,0xb02a0476
  44876d:	jbe    0x448773
  44876f:	es mov eax,0xb0220476
  448775:	jbe    0x44877b
  448777:	push   ds
	...
  44878c:	mov    eax,0xb01a0476
  448791:	jbe    0x448797
  448793:	push   ss
  448794:	mov    eax,0xb0120476
  448799:	jbe    0x44879f
  44879b:	push   cs
  44879c:	mov    eax,0xb00a0476
  4487a1:	jbe    0x4487a7
  4487a3:	push   es
  4487a4:	mov    eax,0xb0020476
  4487a9:	jbe    0x4487af
  4487ab:	(bad)  
  4487ac:	mov    ecx,0xb1fa0476
  4487b1:	jbe    0x4487b7
  4487b3:	idiv   BYTE PTR [ecx-0x4e0dfb8a]
  4487b9:	jbe    0x4487bf
  4487bb:	out    dx,al
  4487bc:	mov    ecx,0xb1ea0476
  4487c1:	jbe    0x4487c7
  4487c3:	out    0xb9,al
  4487c5:	jbe    0x4487cb
  4487c7:	loop   0x44877a
  4487c9:	jbe    0x4487cf
  4487cb:	fidivr WORD PTR [ecx-0x4e25fb8a]
  4487d1:	jbe    0x4487d7
  4487d3:	(bad)  
  4487d4:	mov    ecx,0xb1d20476
  4487d9:	jbe    0x4487df
  4487db:	into   
  4487dc:	mov    ecx,0xb1ca0476
  4487e1:	jbe    0x4487e7
  4487e3:	(bad)  
  4487e4:	mov    ecx,0xb1c20476
  4487e9:	(bad)
  4487ed:	xchg   ebx,eax
  4487ee:	jmp    0x4487f6
	...
  448803:	add    BYTE PTR [edi],cl
  448805:	xchg   ebx,eax
  448806:	jmp    0xe9d7930e
  44880b:	add    eax,DWORD PTR [edi]
  44880d:	xchg   ebx,eax
  44880e:	jmp    0xe9d7eb16
  448813:	add    ebx,DWORD PTR [edi-0x6d]
  448816:	jmp    0xe9d7e31e
  44881b:	add    edx,DWORD PTR [edi-0x6d]
  44881e:	jmp    0xe9d7bb26
  448823:	add    ebp,DWORD PTR [edi]
  448825:	xchg   ebx,eax
  448826:	jmp    0xe9d7b32e
  44882b:	add    esp,DWORD PTR [edi]
  44882d:	xchg   ebx,eax
  44882e:	jmp    0xe9d7cb36
  448833:	add    edi,DWORD PTR [edi]
  448835:	xchg   ebx,eax
  448836:	jmp    0xe9d7c33e
  44883b:	add    esi,DWORD PTR [edi]
  44883d:	xchg   ebx,eax
  44883e:	jmp    0xe9d7db46
  448843:	add    ecx,DWORD PTR [edi-0x6d]
  448846:	jmp    0xe9d7d34e
  44884b:	add    eax,DWORD PTR [edi-0x6d]
  44884e:	jmp    0xe9d0ab56
  448853:	add    ebx,DWORD PTR [edi]
  448855:	mov    ecx,gs
  448857:	add    ebx,DWORD PTR [ebx]
  448859:	mov    ecx,gs
  44885b:	add    edx,DWORD PTR [edi]
  44885d:	mov    ecx,gs
  44885f:	add    esi,ebx
  448861:	mov    ebp,ecx
  448863:	add    ebp,edi
  448865:	mov    ebp,ecx
  448867:	add    eax,DWORD PTR [eax]
	...
  448879:	add    BYTE PTR [eax],al
  44887b:	add    bl,ch
  44887d:	mov    ebp,ecx
  44887f:	add    esp,edi
  448881:	mov    ebp,ecx
  448883:	add    eax,DWORD PTR [ebx]
  448885:	mov    ecx,gs
  448887:	add    edi,edi
  448889:	mov    eax,DWORD PTR [eax]
  44888b:	jmp    0xe9415646
  448890:	mov    dh,0xd1
  448892:	cld    
  448893:	call   0xe9412e4e
  448898:	mov    dh,0xa9
  44889a:	cld    
  44889b:	call   0xe9412656
  4488a0:	mov    dh,0xa1
  4488a2:	cld    
  4488a3:	call   0xe9413e5e
  4488a8:	mov    dh,0xb9
  4488aa:	cld    
  4488ab:	call   0xe9413666
  4488b0:	mov    dh,0xb1
  4488b2:	cld    
  4488b3:	call   0xe9410e6e
  4488b8:	mov    dh,0x89
  4488ba:	cld    
  4488bb:	call   0xe9410676
  4488c0:	mov    dh,0x81
  4488c2:	cld    
  4488c3:	call   0xe9411e7e
  4488c8:	mov    dh,0x99
  4488ca:	cld    
  4488cb:	call   0xe9411686
  4488d0:	mov    dh,0x91
  4488d2:	cld    
  4488d3:	call   0xe948ee8e
  4488d8:	mov    dh,0x69
  4488da:	add    al,0xe9
  4488dc:	mov    dh,0x5d
  4488de:	add    al,0xe9
	...
  4488f4:	mov    dh,0x61
  4488f6:	add    al,0xe9
  4488f8:	mov    dh,0x75
  4488fa:	add    al,0xe9
  4488fc:	mov    dh,0x79
  4488fe:	add    al,0xe9
  448900:	mov    dh,0x6d
  448902:	add    al,0xe9
  448904:	mov    dh,0x71
  448906:	add    al,0xe9
  448908:	mov    dh,0x45
  44890a:	add    al,0xe9
  44890c:	mov    dh,0x49
  44890e:	add    al,0xe9
  448910:	mov    dh,0x3d
  448912:	add    al,0xe9
  448914:	mov    dh,0x41
  448916:	add    al,0x0
  448918:	pop    esp
  448919:	xchg   edx,eax
  44891a:	mov    BYTE PTR [ebx],0x5c
  44891d:	xchg   edx,eax
  44891e:	pop    ss
  44891f:	add    DWORD PTR [edx+edx*4+0x1b],ecx
  448923:	add    DWORD PTR [edx+edx*4+0xf],ecx
  448927:	add    DWORD PTR [edx+edx*4+0x13],ebx
  44892b:	add    DWORD PTR [edx+edx*4+0x6],ebx
  44892f:	add    DWORD PTR [edx+edx*4+0x32],ecx
  448933:	add    DWORD PTR [edx+edx*4+0x3b],ecx
  448937:	add    DWORD PTR [edx+edx*4],ebx
  44893a:	add    eax,DWORD PTR [ecx]
  44893c:	sbb    al,0x92
  44893e:	test   DWORD PTR [eax],0xfb920c
  448944:	or     al,0x92
  448946:	out    dx,eax
  448947:	add    BYTE PTR [edx+edx*4],bl
  44894a:	repz add BYTE PTR [edx+edx*4],bl
  44894e:	out    0x0,al
  448950:	or     al,0x92
  448952:	jmp    0x448954
  448954:	or     al,0x92
  448956:	fild   WORD PTR [eax]
	...
  44896c:	fcom   QWORD PTR [ecx-0x6e23ff1d]
  448972:	xlat   BYTE PTR ds:[ebx]
  448973:	add    ah,cl
  448975:	xchg   ecx,eax
  448976:	fild   DWORD PTR [eax]
  448978:	int3   
  448979:	xchg   ecx,eax
  44897a:	iret   
  44897b:	add    ah,bl
  44897d:	xchg   ecx,eax
  44897e:	rol    DWORD PTR [eax],cl
  448980:	fcom   QWORD PTR [ecx-0x6e33ff3a]
  448986:	retf   
  448987:	add    ah,cl
  448989:	xchg   ecx,eax
  44898a:	mov    edi,0xc3919c00
  44898f:	add    BYTE PTR [ecx+edx*4-0x6e73ff49],bl
  448996:	mov    ebx,0xaf918c00
  44899b:	add    BYTE PTR [ecx+edx*4-0x6e63ff4d],bl
  4489a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4489a3:	add    BYTE PTR [ebp-0x4a54fb8a],dh
  4489a9:	jbe    0x4489af
  4489ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4489ac:	mov    ch,0x76
  4489ae:	add    al,0xa3
  4489b0:	mov    ch,0x76
  4489b2:	add    al,0x5a
  4489b4:	(bad)  
  4489b5:	in     al,0x32
  4489b7:	mov    eax,esi
  4489b9:	pop    ecx
  4489ba:	retf   0x9742
  4489bd:	jbe    0x44898a
  4489bf:	inc    edx
  4489c0:	mov    bh,0x96
  4489c2:	cld    
  4489c3:	push   DWORD PTR [ebp-0x6afdb6cb]
  4489c9:	jbe    0x4489cf
  4489cb:	add    BYTE PTR [esi],dh
  4489cd:	int3   
  4489ce:	das    
  4489cf:	inc    eax
	...
  4489e4:	mov    al,ds:0xbb42cb6d
  4489e9:	mov    dh,0xfc
  4489eb:	push   DWORD PTR [ebp-0x3de2b70f]
  4489f1:	les    ecx,FWORD PTR [ebx]
  4489f3:	mov    esi,DWORD PTR [ecx+0x36fffef4]
  4489f9:	aaa    
  4489fa:	add    cl,bh
  4489fc:	in     eax,0xf9
  4489fe:	sti    
  4489ff:	clc    
  448a00:	imul   esi,DWORD PTR [edi+eax*4+0x42],0x29494196
  448a08:	add    DWORD PTR [eax+0x4df17d55],0x61
  448a0f:	mov    esi,0x42cb76bd
  448a14:	scas   eax,DWORD PTR es:[edi]
  448a15:	jbe    0x448a1b
  448a17:	add    BYTE PTR [ebp-0x55e2b70f],dh
  448a1d:	cld    
  448a1e:	inc    ebx
  448a1f:	(bad)  
  448a20:	fnstenv [ebp+0xfb50003]
  448a26:	inc    esp
  448a27:	add    BYTE PTR [ebp-0x5d31d28a],dh
  448a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448a2e:	test   BYTE PTR [edx-0x41],al
  448a31:	(bad)  
  448a35:	fcmovnu st,st(5)
  448a37:	xchg   bh,dh
  448a39:	mov    eax,ebp
  448a3b:	xchg   BYTE PTR [edx-0xff8736f],al
  448a41:	retf   0x7e3
  448a44:	xor    bh,BYTE PTR [edx+0xc4e7]
	...
  448a5a:	add    BYTE PTR [eax],al
  448a5c:	or     BYTE PTR [edx-0x70480c18],0xd9
  448a63:	add    esi,DWORD PTR [ebp+0x4993e612]
  448a69:	fs imul eax,esp,0xffffffb6
  448a6d:	fs mov edx,0xaca31c5
  448a73:	adc    DWORD PTR [edi-0x31],esp
  448a76:	call   0xa8eb94ff
  448a7b:	in     al,dx
  448a7c:	and    DWORD PTR [edi],edx
  448a7e:	and    eax,0x6b50581a
  448a83:	jg     0x448a3c
  448a85:	scas   eax,DWORD PTR es:[edi]
  448a86:	sbb    eax,0x3ca8823
  448a8b:	add    edi,DWORD PTR [eax]
  448a8d:	retf   0x10ca
  448a90:	inc    edi
  448a91:	iret   
  448a92:	jmp    0x448a18
  448a94:	adc    cl,BYTE PTR [eax+esi*2-0xaef44b9]
  448a9b:	adc    eax,0x84e3dab6
  448aa0:	pop    edi
  448aa1:	cdq    
  448aa2:	jmp    0xa555441d
  448aa7:	sbb    eax,0x7f6b50b1
  448aac:	mov    bh,0xaf
  448aae:	int    0x7
  448ab0:	cmp    dl,cl
  448ab2:	repz pop es
  448ab4:	jo     0x448ac5
  448ab6:	mov    ebp,0xdddcc509
  448abb:	test   bh,dh
  448abd:	test   DWORD PTR [eax],eax
  448abf:	jmp    0x448ac1
	...
  448ad1:	add    BYTE PTR [eax],al
  448ad3:	add    BYTE PTR [ecx+0x6b],dh
  448ad6:	arpl   WORD PTR [esi],bp
  448ad8:	mov    ah,0x68
  448ada:	mov    WORD PTR [eax+ebp*4+0x39ca3d62],gs
  448ae1:	into   
  448ae2:	and    ebp,ebx
  448ae4:	jno    0x448b4e
  448ae6:	ds retf 0xe479
  448aea:	cmp    eax,0x8424b0ca
  448aef:	jl     0x448aa9
  448af1:	jg     0x448b60
  448af3:	out    dx,eax
  448af4:	dec    esi
  448af5:	inc    edi
  448af6:	clc    
  448af7:	out    dx,al
  448af8:	mov    ch,0x24
  448afa:	jmp    0xd43e2c
  448aff:	stos   BYTE PTR es:[edi],al
  448b00:	cmp    esi,esp
  448b02:	add    bh,cl
  448b04:	ret    
  448b05:	mov    ch,al
  448b07:	mov    ds:0xc6f868b5,eax
  448b0c:	jae    0x448a92
  448b0e:	ret    
  448b0f:	shl    ebp,1
  448b11:	popa   
  448b12:	clc    
  448b13:	jmp    0xfaba6f09
  448b18:	jbe    0x448af8
  448b1a:	(bad)  
  448b1b:	nop
  448b1c:	shl    DWORD PTR [ecx-0x8],1
  448b1f:	jmp    0xca82f31d
  448b24:	icebp  
  448b25:	jecxz  0x448b9c
  448b27:	jmp    0x448abf
  448b29:	jecxz  0x448b28
  448b2b:	imul   esi,DWORD PTR [ebx-0x7c],0xce39a9fd
  448b32:	and    ebp,edx
  448b34:	icebp  
  448b35:	jecxz  0x448bac
  448b37:	jmp    0x448b39
	...
  448b49:	add    BYTE PTR [eax],al
  448b4b:	add    BYTE PTR [esi-0x22],dh
  448b4e:	std    
  448b4f:	imul   esi,DWORD PTR [ebx-0x7c],0xe6392a09
  448b56:	add    cl,BYTE PTR [ecx]
  448b58:	inc    edx
  448b59:	mov    es,WORD PTR [ebx-0x3c71265c]
  448b5f:	add    BYTE PTR [edi],bl
  448b61:	retf   0x315
  448b64:	iret   
  448b65:	jbe    0x448bdf
  448b67:	jmp    ebx
  448b69:	(bad)  
  448b6a:	stc    
  448b6b:	inc    ebp
  448b6c:	mov    edi,0x6f7d754c
  448b71:	into   
  448b72:	jae    0x448b96
  448b74:	fcmovne st,st(1)
  448b76:	idiv   BYTE PTR [edi]
  448b78:	mov    WORD PTR [esi-0x54e60100],cs
  448b7e:	jge    0x448bc5
  448b80:	jg     0x448c01
  448b82:	mov    dl,0x8
  448b84:	ror    DWORD PTR [edx+0xb4c038a],1
  448b8a:	mov    eax,0xc13d6304
  448b8f:	inc    ebp
  448b90:	pop    esi
  448b91:	scas   al,BYTE PTR es:[edi]
  448b92:	add    BYTE PTR [eax],al
  448b94:	dec    esp
  448b95:	dec    ebp
  448b96:	stc    
  448b97:	inc    ebp
  448b98:	scas   eax,DWORD PTR es:[edi]
  448b99:	dec    esi
  448b9a:	jne    0x448c19
  448b9c:	iret   
  448b9d:	retf   
  448b9e:	jae    0x448bc3
  448ba0:	repz xlat BYTE PTR ds:[ebx]
  448ba2:	adc    eax,0x80add9fe
  448ba7:	jge    0x448b57
  448ba9:	xchg   edx,eax
  448baa:	jae    0x448bb2
  448bac:	hlt    
  448bad:	sub    edi,esi
  448baf:	inc    DWORD PTR [eax]
	...
  448bc1:	add    BYTE PTR [eax],al
  448bc3:	add    BYTE PTR [ecx*2-0x6f10ba83],bl
  448bca:	mov    dl,0x8
  448bcc:	xchg   ecx,eax
  448bcd:	xchg   edi,eax
  448bce:	mov    al,BYTE PTR [ebx]
  448bd0:	fmul   QWORD PTR [eax+edi*4]
  448bd3:	add    al,0x33
  448bd5:	cmp    esi,DWORD PTR [ebp-0x851667d]
  448bdb:	ret    0xd863
  448bde:	adc    eax,0x80ad99fe
  448be3:	jge    0x448ba3
  448be5:	xchg   edx,eax
  448be6:	jae    0x448bee
  448be8:	fs loop 0x448be2
  448beb:	push   DWORD PTR [ebp-0x77b3c88]
  448bf1:	xchg   ebp,eax
  448bf2:	pop    es
  448bf3:	mov    dl,0xbd
  448bf5:	fisttp DWORD PTR [eax]
  448bf7:	mov    dh,BYTE PTR [esi-0x4e407c8a]
  448bfd:	cdq    
  448bfe:	int3   
  448bff:	mov    esp,0x20023436
  448c04:	or     DWORD PTR [ebp-0x14],ebx
  448c07:	repz add DWORD PTR [edx+0x55f07cf7],0x0
  448c0f:	mov    ebp,0xf8f68d5d
  448c14:	push   0xfffffff6
  448c16:	dec    ecx
  448c17:	sbb    eax,0x7a83b5b7
  448c1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448c1d:	ss jns 0x448c22
  448c20:	pop    ebp
  448c21:	das    
  448c22:	std    
  448c23:	push   DWORD PTR [ebp+0x428335]
	...
  448c39:	add    BYTE PTR [eax],al
  448c3b:	add    BYTE PTR [esi-0xf833c8c],dl
  448c41:	xchg   ebp,eax
  448c42:	or     BYTE PTR [ebp+0x323ac36],bh
  448c48:	div    ch
  448c4a:	sub    BYTE PTR ds:0xe7fe9b75,0xc8
  448c51:	ja     0x448c57
  448c53:	add    dh,dh
  448c55:	dec    esi
  448c56:	mov    ch,0xf9
  448c58:	or     ch,BYTE PTR [edx]
  448c5a:	ret    
  448c5b:	out    0x9f,eax
  448c5d:	add    bh,dh
  448c5f:	clc    
  448c60:	ss jl  0x448c6d
  448c63:	std    
  448c64:	imul   ebp,DWORD PTR [eax-0x14],0xf709eba7
  448c6b:	mov    esp,0xfffd46cd
  448c70:	mov    ch,0x35
  448c72:	add    DWORD PTR [edx-0x6a],0x75
  448c76:	ret    
  448c77:	jl     0x448cc1
  448c79:	(bad)  
  448c7a:	out    0x43,eax
  448c7c:	inc    esi
  448c7d:	mov    ch,BYTE PTR [edx+0x48]
  448c80:	cwde   
  448c81:	xchg   esi,eax
  448c82:	sub    al,BYTE PTR [edx-0x3d235309]
  448c88:	sub    ebx,esp
  448c8a:	out    0x13,eax
  448c8c:	mov    ebp,DWORD PTR es:[edx+0x48]
  448c90:	mov    eax,0xf822a8c
  448c95:	mov    cl,BYTE PTR [ecx]
  448c97:	jns    0x448c4f
  448c99:	or     al,0xa5
  448c9b:	and    dh,BYTE PTR [esi+0x486b4c]
	...
  448cb1:	add    BYTE PTR [eax],al
  448cb3:	add    BYTE PTR [eax-0x107cd56a],bl
  448cb9:	(bad)  
  448cbd:	ja     0x448c47
  448cbf:	std    
  448cc0:	pop    ebp
  448cc1:	pusha  
  448cc2:	sub    ebp,ebx
  448cc4:	ins    BYTE PTR es:[edi],dx
  448cc5:	(bad)
  448cc9:	pcmpgtw mm0,QWORD PTR [ebx]
  448ccc:	dec    edx
  448ccd:	(bad)  
  448ccf:	jmp    0x448cb7
  448cd1:	popa   
  448cd2:	xlat   BYTE PTR ds:[ebx]
  448cd3:	std    
  448cd4:	stc    
  448cd5:	push   cs
  448cd6:	dec    ebp
  448cd7:	add    esi,DWORD PTR [edx]
  448cd9:	fcmovnu st,st(7)
  448cdb:	jmp    0x448d4f
  448cdd:	popa   
  448cde:	mov    edi,0x350c61fd
  448ce3:	add    al,ch
  448ce5:	(bad)  
  448ce7:	jmp    0x448cb7
  448ce9:	popa   
  448cea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448ceb:	std    
  448cec:	dec    ecx
  448ced:	ja     0x448d35
  448cef:	add    al,0xb5
  448cf1:	(bad)
  448cf5:	pushf  
  448cf6:	sub    DWORD PTR [edi-0x49],esi
  448cf9:	ja     0x448d6d
  448cfb:	add    al,0xb5
  448cfd:	(bad)
  448d01:	(bad)  
  448d02:	leave  
  448d03:	jbe    0x448cbb
  448d05:	or     al,0x1
  448d07:	sub    al,0x94
  448d09:	mov    es,ebx
  448d0b:	push   0x72
  448d0d:	cmp    ch,0x29
  448d10:	hlt    
  448d11:	loop   0x448d88
  448d13:	jmp    0x448cbb
  448d15:	fist   DWORD PTR [eax]
  448d17:	inc    ecx
	...
  448d2c:	sub    eax,0x3c4ef85b
  448d31:	rcr    BYTE PTR [edx],cl
  448d33:	call   0xa4c80a33
  448d38:	aad    0x91
  448d3a:	ret    
  448d3b:	inc    ecx
  448d3c:	sbb    eax,0x3c2ef85b
  448d41:	rcr    BYTE PTR [edx],cl
  448d43:	call   0xa4c80a43
  448d48:	aad    0x93
  448d4a:	ret    
  448d4b:	push   0xfffffff2
  448d4d:	lods   al,BYTE PTR ds:[esi]
  448d4e:	inc    eax
  448d4f:	xchg   esp,eax
  448d50:	mov    al,0x67
  448d52:	dec    esi
  448d53:	jmp    0x6b081d0e
  448d58:	ficomp DWORD PTR [ebp+0x18]
  448d5b:	jl     0x448d18
  448d5d:	fdivr  QWORD PTR ds:0x841cb1ca
  448d63:	sub    al,0x94
  448d65:	xchg   edx,eax
  448d66:	ret    
  448d67:	shl    DWORD PTR [edi],1
  448d69:	pop    edx
  448d6a:	clc    
  448d6b:	(bad)  
  448d6c:	xor    eax,0xa3e90eda
  448d71:	xchg   ecx,eax
  448d72:	call   0xf89cb126
  448d77:	stos   BYTE PTR es:[edi],al
  448d78:	push   cs
  448d79:	test   eax,0x1cb6e900
  448d7e:	test   BYTE PTR [esp+eax*8],ch
  448d81:	iret   
  448d82:	ins    DWORD PTR es:[edi],dx
  448d83:	in     al,dx
  448d84:	xor    eax,0xf5e423d2
  448d89:	(bad)  [ebp-0x15]
  448d8c:	xchg   esi,eax
  448d8d:	loop   0x448d8c
  448d8f:	imul   eax,DWORD PTR [eax],0x0
	...
  448da1:	add    BYTE PTR [eax],al
  448da3:	add    BYTE PTR [ebx+0x7c],dh
  448da6:	std    
  448da7:	dec    DWORD PTR [edi]
  448da9:	adc    BYTE PTR [ebx+0x23],al
  448dac:	iret   
  448dad:	dec    edi
  448dae:	js     0x448e2d
  448db0:	fcom   QWORD PTR [ecx-0x5cbf98d]
  448db6:	cli    
  448db7:	call   FWORD PTR [ebx+0x4f]
  448dba:	loopne 0x448dbd
  448dbc:	int3   
  448dbd:	xchg   edx,eax
  448dbe:	add    bl,al
  448dc0:	inc    esp
  448dc1:	pop    ebx
  448dc2:	stc    
  448dc3:	(bad)  
  448dc4:	sti    
  448dc5:	dec    edi
  448dc6:	jne    0x448e45
  448dc8:	lahf   
  448dc9:	shl    BYTE PTR [ebx+0x6],cl
  448dcc:	add    al,0x6c
  448dce:	stc    
  448dcf:	dec    ebx
  448dd1:	dec    edi
  448dd2:	loopne 0x448e4f
  448dd4:	fstp   DWORD PTR [ebx-0x7]
  448dd7:	adc    DWORD PTR [ecx-0x51],0xfffffff7
  448ddb:	ret    0xde0f
  448dde:	neg    BYTE PTR [edi]
  448de0:	dec    eax
  448de1:	mov    al,ch
  448de3:	imul   edi,DWORD PTR [ecx+0x1183f95b],0xffffffaf
  448dea:	cld    
  448deb:	ret    0xf1c4
  448dee:	sti    
  448def:	dec    DWORD PTR [ebx-0x22]
  448df2:	inc    edx
  448df3:	and    ebx,DWORD PTR [esi+0x4f]
  448df6:	loopne 0x448db6
  448df8:	pop    eax
  448df9:	pop    edx
  448dfa:	stc    
  448dfb:	call   0x3de54e
  448e00:	lahf   
  448e01:	fcom   DWORD PTR [edx]
  448e03:	add    BYTE PTR [ecx+0x457d8e],al
	...
  448e19:	add    BYTE PTR [eax],al
  448e1b:	add    BYTE PTR [esi],dl
  448e1d:	xchg   ebx,eax
  448e1e:	inc    ebx
  448e1f:	and    ecx,DWORD PTR [edi+0x5f0315d0]
  448e25:	push   ss
  448e26:	jnp    0x448e3e
  448e28:	sbb    eax,0x70e802df
  448e2d:	pop    edx
  448e2e:	stc    
  448e2f:	dec    DWORD PTR [edi+0xe]
  448e32:	inc    ebx
  448e33:	sbb    dh,BYTE PTR [ebp+0x361d4167]
  448e39:	mov    bl,0x1f
  448e3b:	(bad)  
  448e3c:	imul   eax
  448e3e:	jns    0x448e3e
  448e40:	mov    edx,0x3be82e5c
  448e45:	in     al,0xfb
  448e47:	clc    
  448e48:	fnsave [ecx]
  448e4a:	stc    
  448e4b:	clc    
  448e4c:	ret    0x79e8
  448e4f:	adc    dh,BYTE PTR [ebp-0x77af8bd]
  448e55:	pusha  
  448e56:	std    
  448e57:	inc    edx
  448e58:	(bad)  
  448e59:	jmp    0xa9ffab9f
  448e5e:	jg     0x448eda
  448e60:	ret    
  448e61:	addr16 jno 0x448e66
  448e64:	popf   
  448e65:	push   ebx
  448e66:	sti    
  448e67:	clc    
  448e68:	mov    ch,BYTE PTR [edx+0x679f4287]
  448e6e:	inc    ecx
  448e6f:	sbb    eax,0xfe1f3436
  448e74:	ja     0x448e05
  448e76:	push   eax
  448e77:	cld    
  448e78:	push   0xffffff8e
  448e7a:	in     al,0x97
  448e7c:	popa   
  448e7d:	xchg   esi,eax
  448e7e:	sti    
  448e7f:	jl     0x448e81
	...
  448e91:	add    BYTE PTR [eax],al
  448e93:	add    al,bl
  448e95:	inc    esp
  448e96:	add    al,0x73
  448e98:	mov    esi,0xb41641f1
  448e9d:	xor    ebx,DWORD PTR [edi]
  448e9f:	jge    0x448e99
  448ea1:	mov    DWORD PTR [eax],eax
  448ea3:	mov    ebp,0xff12bc36
  448ea8:	test   eax,0x2a35ec6c
  448ead:	dec    esi
  448eae:	sti    
  448eaf:	mov    esp,0xff16ac2e
  448eb4:	jno    0x448e3f
  448eb6:	jg     0x448efa
  448eb8:	(bad)  
  448eb9:	push   0x2ad7e7bf
  448ebe:	sti    
  448ebf:	clc    
  448ec0:	or     eax,0xfdf80790
  448ec5:	pop    esp
  448ec6:	imul   edi,DWORD PTR [eax-0x39],0xffffff8e
  448eca:	lar    ebx,bp
  448ecd:	jbe    0x448e55
  448ecf:	cli    
  448ed0:	fst    QWORD PTR [eax+0x73]
  448ed3:	inc    eax
  448ed4:	ret    
  448ed5:	mov    ds,WORD PTR [edi+eiz*1]
  448ed8:	push   eax
  448ed9:	ror    dl,cl
  448edb:	add    eax,0xf8246808
  448ee0:	mov    ebp,0xa7786b5c
  448ee5:	xchg   ebp,eax
  448ee6:	xlat   BYTE PTR ds:[ebx]
  448ee7:	add    DWORD PTR [ebp-0x5205afa6],ebx
  448eed:	push   eax
  448eee:	inc    edx
  448eef:	repz test eax,0xf78e3f5c
  448ef5:	jns    0x448edf
  448ef7:	inc    eax
	...
  448f0c:	mov    al,0x10
  448f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448f0f:	mov    edx,DWORD PTR es:[ecx+0x42]
  448f13:	jecxz  0x448e9e
  448f15:	pop    esp
  448f16:	pop    ds
  448f17:	jmp    0x448eef
  448f19:	pop    ebx
  448f1a:	pop    ss
  448f1b:	cli    
  448f1c:	icebp  
  448f1d:	(bad)  
  448f1f:	add    bh,ch
  448f21:	xchg   ebp,eax
  448f22:	add    edx,edx
  448f24:	pop    esp
  448f25:	pop    esp
  448f26:	inc    ebp
  448f28:	xor    edx,edx
  448f2a:	jecxz  0x448f30
  448f2c:	div    BYTE PTR [eax-0x6e57bf96]
  448f32:	sub    ch,bl
  448f34:	std    
  448f35:	push   edi
  448f36:	(bad)  
  448f38:	push   edx
  448f39:	nop
  448f3a:	aad    0xf9
  448f3c:	sub    eax,0xb5124d10
  448f41:	loop   0x448f36
  448f43:	test   BYTE PTR [edi+0x3608ea89],bl
  448f49:	sub    ebp,edx
  448f4b:	add    esi,DWORD PTR [ebp-0x40cbfef0]
  448f51:	xchg   ebx,eax
  448f52:	pop    es
  448f53:	pop    edi
  448f54:	pop    ebx
  448f55:	pop    esp
  448f56:	clc    
  448f57:	jmp    0x9f3b896a
  448f5c:	in     al,dx
  448f5d:	sbb    al,BYTE PTR [esp+edx*1-0xc92a339]
  448f64:	cmp    ecx,ebx
  448f66:	or     ch,dl
  448f68:	lods   eax,DWORD PTR ds:[esi]
  448f69:	adc    BYTE PTR [ebp-0x7c704917],al
  448f6f:	hlt    
	...
  448f84:	mov    esp,0x3b5f075c
  448f89:	pop    esp
  448f8a:	clc    
  448f8b:	jmp    0x5f3b695e
  448f90:	lods   al,BYTE PTR ds:[esi]
  448f91:	sbb    al,0x84
  448f93:	aam    0xc4
  448f95:	pop    ecx
  448f96:	ins    DWORD PTR es:[edi],dx
  448f97:	stc    
  448f98:	cmp    esi,edx
  448f9a:	or     ch,dl
  448f9c:	lods   eax,DWORD PTR ds:[esi]
  448f9d:	push   cs
  448f9e:	gs jmp 0xc62d1f5a
  448fa4:	mov    WORD PTR [eax-0x8],ds
  448fa7:	sub    bh,BYTE PTR [eax]
  448fa9:	(bad)  
  448faa:	push   cs
  448fab:	jmp    0x5cc0:0x9c838c0b
  448fb2:	ins    DWORD PTR es:[edi],dx
  448fb3:	mov    bl,0x5e
  448fb5:	(bad)
  448fb8:	pop    esp
  448fb9:	sbb    al,0x84
  448fbb:	test   ah,al
  448fbd:	xchg   ebx,eax
  448fbe:	ins    DWORD PTR es:[edi],dx
  448fbf:	in     eax,dx
  448fc0:	cmp    esi,edx
  448fc2:	or     ch,dl
  448fc4:	fcmovnb st,st(7)
  448fc6:	call   0xf89ccc6c
  448fcb:	stos   BYTE PTR es:[edi],al
  448fcc:	xor    esi,edx
  448fce:	push   cs
  448fcf:	in     al,0xa3
  448fd1:	(bad)  
  448fd2:	call   0xf89cbeec
  448fd7:	stos   BYTE PTR es:[edi],al
  448fd8:	cmp    esi,edx
  448fda:	push   cs
  448fdb:	add    BYTE PTR [edx],cl
  448fdd:	jmp    0x74f5:0x89d18304
  448fe4:	mov    dh,0x6b
  448fe6:	push   ds
  448fe7:	inc    BYTE PTR [eax]
	...
  448ff9:	add    BYTE PTR [eax],al
  448ffb:	add    BYTE PTR [ebx+0x58],dl
  448ffe:	mov    ch,0x83
  449000:	sar    DWORD PTR [ebp+0x1],1
  449003:	jne    0x448ff7
  449005:	adc    edi,DWORD PTR [ebx+0xa]
  449008:	fucomip st,st(1)
  44900a:	sbb    BYTE PTR [ebx+0x7540a4b1],al
  449010:	loopne 0x449025
  449012:	jnp    0x449022
  449014:	fsub   st(2),st
  449016:	add    al,0xe8
  449018:	rcr    BYTE PTR [eax-0x7],1
  44901b:	dec    DWORD PTR [edi]
  44901d:	addr16 add bh,dh
  449020:	push   ebx
  449021:	push   edi
  449022:	mov    ch,0x8b
  449024:	pop    ecx
  449025:	jl     0x44901e
  449027:	inc    esp
  449028:	mov    edi,0x8e234314
  44902d:	push   ebx
  44902e:	loopne 0x44901e
  449030:	not    BYTE PTR [edi-0x7]
  449033:	call   0x3debc6
  449038:	pop    ds
  449039:	loop   0x44904d
  44903b:	add    al,0x51
  44903d:	nop
  44903e:	call   0xf99c6228
  449043:	ret    
  449044:	out    0x99,eax
  449046:	push   cs
  449047:	add    DWORD PTR [ecx],ebx
  449049:	mov    bl,0x75
  44904b:	inc    ebp
  44904c:	outs   dx,DWORD PTR ds:[esi]
  44904d:	xchg   ebx,eax
  44904e:	mov    ch,0xe8
  449050:	mov    eax,ds:0xa4fff95c
  449055:	jge    0x449044
  449057:	inc    DWORD PTR [ebx+0xe]
  44905a:	jnp    0x449072
  44905c:	dec    esp
  44905d:	jmp    0x457864
	...
  449072:	add    BYTE PTR [eax],al
  449074:	or     BYTE PTR [eax-0x7],bl
  449077:	call   FWORD PTR [edi+0xe]
  44907a:	jnp    0x449092
  44907c:	mov    ch,0x66
  44907e:	jno    0x449082
  449080:	or     eax,0x1af8fa00
  449085:	and    eax,0x65ab7a84
  44908a:	jno    0x44908e
  44908c:	sbb    eax,0x2f8fa14
  449091:	and    eax,0x6ca37a84
  449096:	jno    0x44909a
  449098:	ffree  st(7)
  44909a:	stc    
  44909b:	clc    
  44909c:	jmp    0x7173:0xcb7a8424
  4490a3:	add    cl,ch
  4490a5:	mov    ebx,0x24d2f8f9
  4490aa:	test   BYTE PTR [edx-0x5d],bh
  4490ad:	imul   ebp,DWORD PTR [esi+0x2],0xf8f9efcd
  4490b4:	mov    edx,0xcf428ba4
  4490b9:	addr16 inc ecx
  4490bb:	sbb    eax,0xfe232c36
  4490c0:	ja     0x449091
  4490c2:	mov    ch,0xf5
  4490c4:	call   0x7166:0xab7a83d2
  4490cb:	add    bl,BYTE PTR [ebp-0x7d0706ad]
  4490d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4490d2:	cmp    DWORD PTR [edx-0x5d],0x67
  4490d6:	jno    0x4490da
	...
  4490ec:	pop    ebp
  4490ed:	pop    es
  4490ee:	stc    
  4490ef:	clc    
  4490f0:	push   0xffffffa6
  4490f2:	cmp    DWORD PTR [edx-0x35],0x64
  4490f6:	jno    0x449107
  4490f8:	dec    ebp
  4490f9:	and    al,0xfa
  4490fb:	clc    
  4490fc:	push   edx
  4490fd:	out    0x79,al
  4490ff:	push   es
  449100:	mov    dh,0xda
  449102:	push   ecx
  449103:	call   0xf933fcf4
  449108:	jbe    0x44909a
  44910a:	push   0x78
  44910c:	(bad)  
  44910d:	mov    WORD PTR [esi+edi*8+0x12],cs
  449111:	fwait
  449112:	int3   
  449113:	neg    BYTE PTR ds:0xc7786b4d
  449119:	xchg   ebx,eax
  44911a:	xor    al,0x15
  44911c:	sbb    eax,0xdf6c3a6
  449121:	or     eax,0xdd000a2d
  449126:	imul   bl
  449128:	aam    0x5a
  44912a:	lahf   
  44912b:	div    BYTE PTR [ecx]
  44912d:	or     eax,0xe2b60e15
  449132:	out    0xeb,eax
  449134:	enter  0x875a,0xf6
  449138:	sbb    DWORD PTR ds:0xe2b70dfd,ecx
  44913e:	fsubr  st,st(3)
  449140:	mov    ch,0x55
  449142:	outs   dx,DWORD PTR ds:[esi]
  449143:	test   BYTE PTR [ecx-0x26],0xe3
  449147:	add    al,BYTE PTR [ecx-0x75]
  44914a:	push   ecx
  44914b:	add    ch,BYTE PTR [esi+0xc25758]
	...
  449161:	add    BYTE PTR [eax],al
  449163:	add    BYTE PTR [edx-0x6209b1a6],dl
  449169:	dec    esp
  44916a:	arpl   WORD PTR [eax-0x3d],ax
  44916d:	mov    fs,WORD PTR [edx+eiz*1+0x30ad310]
  449174:	dec    eax
  449175:	addr16 add dl,bh
  449178:	jge    0x4491d2
  44917a:	imul   edi,DWORD PTR [eax-0x59],0xffffff8f
  44917e:	xchg   esp,eax
  44917f:	std    
  449180:	pop    edx
  449181:	outs   dx,BYTE PTR ds:[esi]
  449182:	push   ss
  449183:	imul   BYTE PTR [ebp+0x4c]
  449186:	imul   edi,DWORD PTR [eax-0x39],0xffffff8e
  44918a:	mov    ebp,?
  44918c:	push   edx
  44918d:	inc    edx
  44918e:	(bad)  
  44918f:	cmc    
  449190:	dec    ebp
  449191:	dec    esp
  449192:	imul   edi,DWORD PTR [eax-0x59],0xffffff8d
  449196:	add    BYTE PTR [ecx+ebp*4+0x67],bh
  44919a:	ret    
  44919b:	lock inc eax
  44919d:	push   edi
  44919e:	test   BYTE PTR [edi+edi*4+0x5a],ah
  4491a2:	je     0x4491df
  4491a4:	sbb    DWORD PTR [esi],edx
  4491a6:	cmc    
  4491a7:	(bad)  
  4491a8:	sub    BYTE PTR [ebx],bl
  4491aa:	test   BYTE PTR [ebx+ebp*4+0x5a],cl
  4491ae:	ins    DWORD PTR es:[edi],dx
  4491af:	out    dx,eax
  4491b0:	push   ds
  4491b1:	sub    dh,ch
  4491b3:	mov    esi,0x34841b00
  4491b8:	mov    bl,0x93
  4491ba:	ins    DWORD PTR es:[edi],dx
  4491bb:	fmul   DWORD PTR [esi]
  4491bd:	idiv   ecx
  4491bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4491c0:	call   0xb638079f
  4491c5:	jecxz  0x4491ee
  4491c7:	add    DWORD PTR [eax],0x0
	...
  4491d9:	add    BYTE PTR [eax],al
  4491db:	add    BYTE PTR [esp+edx*2],bh
  4491de:	clc    
  4491df:	mov    ?,esp
  4491e1:	fidiv  DWORD PTR [ebp-0x21]
  4491e4:	rcr    esp,cl
  4491e6:	(bad)  
  4491e7:	nop
  4491e8:	xor    BYTE PTR [eax+edi*8+0x76],dl
  4491ec:	hlt    
  4491ed:	fidiv  DWORD PTR [ebp-0x29]
  4491f0:	mov    eax,0x2d5111dc
  4491f5:	pop    edi
  4491f6:	clc    
  4491f7:	pop    esi
  4491f8:	xor    al,0xda
  4491fa:	or     ch,dl
  4491fc:	adc    al,BYTE PTR [eax+ebp*8-0x7a75d2f]
  449203:	sub    ah,BYTE PTR [ecx-0x7fc10b1b]
  449209:	adc    al,0x8c
  44920b:	lods   al,BYTE PTR ds:[esi]
  44920c:	pushf  
  44920d:	push   esi
  44920e:	cmp    eax,0x23d2340a
  449213:	jmp    0x5860:0x20a46f75
  44921a:	test   BYTE PTR [eax+esi*4+0x4ee76d8f],dl
  449221:	shl    esp,0x0
  449224:	mov    ebx,0xc983b55c
  449229:	test   bh,dh
  44922b:	je     0x44927f
  44922d:	imul   edi,DWORD PTR [esi],0xfffffffc
  449230:	dec    ebx
  449231:	pop    esp
  449232:	mov    ch,0x83
  449234:	cdq    
  449235:	test   esi,esi
  449237:	je     0x44925a
  449239:	imul   esi,DWORD PTR [ecx],0xfffffff9
  44923c:	or     ebx,DWORD PTR [ebp+esi*2+0x7d]
	...
  449254:	push   ss
  449255:	nop
  449256:	or     DWORD PTR [edi+esi*2-0x1bffff75],eax
  44925d:	stos   DWORD PTR es:[edi],eax
  44925e:	hlt    
  44925f:	dec    DWORD PTR [ebx+0x50]
  449262:	jne    0x4492e1
  449264:	loop   0x4491f5
  449266:	jae    0x449285
  449268:	pop    edi
  449269:	(bad)  
  44926b:	xadd   DWORD PTR [edx+0x5c4516e8],eax
  449272:	stc    
  449273:	sub    DWORD PTR [ecx-0x658c0a77],0x63
  44927a:	push   es
  44927b:	cld    
  44927c:	dec    ebx
  44927d:	pop    ebx
  44927e:	mov    ch,0xe8
  449280:	fcomp  DWORD PTR [esi-0x7]
  449283:	dec    DWORD PTR [edi]
  449285:	adc    BYTE PTR [ebx+0x16],bh
  449288:	mov    al,ds:0x9ce802e5
  44928d:	pop    esi
  44928e:	stc    
  44928f:	dec    edi
  449291:	(bad)  
  449293:	push   ss
  449294:	xchg   ecx,eax
  449295:	in     eax,0x2
  449297:	call   0x3dea6c
  44929c:	fisttp WORD PTR [edi]
  44929e:	jnp    0x4492b6
  4492a0:	xchg   edx,eax
  4492a1:	in     eax,0x7
  4492a3:	call   0x3ded95
  4492a8:	(bad)  
  4492aa:	inc    BYTE PTR [edx]
  4492ac:	inc    eax
  4492ad:	test   eax,0x81b5dde8
  4492b2:	in     al,dx
  4492b3:	clc    
  4492b4:	jbe    0x44929f
  4492b6:	outs   dx,BYTE PTR ds:[esi]
  4492b7:	adc    al,BYTE PTR [eax]
	...
  4492c9:	add    BYTE PTR [eax],al
  4492cb:	add    BYTE PTR [edx-0x3782fb2d],bh
  4492d1:	push   0x14
  4492d3:	jae    0x449279
  4492d5:	nop
  4492d6:	mov    bh,0xf7
  4492d8:	cmp    ah,BYTE PTR [ebp+0x78]
  4492db:	jp     0x44929c
  4492dd:	imul   esi,DWORD PTR [eax+0xc],0xf8e8281d
  4492e4:	and    ch,BYTE PTR [ecx]
  4492e6:	aad    0xb5
  4492e8:	push   ds
  4492e9:	inc    ebp
  4492ea:	hlt    
  4492eb:	mov    esp,0xff06a33e
  4492f0:	jno    0x44927b
  4492f2:	jg     0x449336
  4492f4:	(bad)  
  4492f5:	imul   edi,DWORD PTR [edi-0xbdff119],0x1aab36f8
  4492ff:	add    BYTE PTR [eax+0x5b],ah
  449302:	fcom   QWORD PTR [eax+0x7cf3fcdd]
  449308:	pop    eax
  449309:	jb     0x44930a
  44930b:	or     BYTE PTR [eax],bh
  44930d:	enter  0xfffc,0xb5
  449311:	add    BYTE PTR [esp+esi*8+0x7cbfdcc2],al
  449318:	cmp    BYTE PTR [esi],bh
  44931a:	std    
  44931b:	jb     0x4492e5
  44931d:	mov    esi,0xb6aaf870
  449322:	jg     0x44939e
  449324:	scas   eax,DWORD PTR es:[edi]
  449325:	imul   eax,DWORD PTR [ebx],0x4673083
  44932b:	add    BYTE PTR [ebp+0xf8e713],bl
	...
  449341:	add    BYTE PTR [eax],al
  449343:	add    BYTE PTR [edx-0x54858056],cl
  449349:	push   0x488d1379
  44934e:	in     al,dx
  44934f:	clc    
  449350:	jb     0x4492e2
  449352:	push   0x71
  449354:	mov    bl,0x90
  449356:	out    0x88,al
  449358:	fmul   DWORD PTR [edi-0x48b2fc17]
  44935e:	adc    dh,bl
  449360:	dec    ebp
  449361:	push   ecx
  449362:	imul   esi,DWORD PTR [ecx-0x59],0xffffff90
  449366:	ins    BYTE PTR es:[edi],dx
  449367:	adc    al,0x4d
  449369:	into   
  44936a:	icebp  
  44936b:	repnz cmp eax,0x31fd6511
  449371:	fdivr  QWORD PTR [edx]
  449373:	fsub   st(0),st
  449375:	pop    eax
  449376:	xlat   BYTE PTR ds:[ebx]
  449377:	repnz popa 
  449379:	adc    DWORD PTR [ebp+0x1a],ecx
  44937c:	mov    cl,0xda
  44937e:	(bad)  
  449380:	les    ebx,FWORD PTR [eax-0x41]
  449383:	repnz dec ecx
  449385:	adc    DWORD PTR ds:0xd8dab61a,esi
  44938b:	fistp  DWORD PTR [ecx+0x71f2a757]
  449391:	shl    bl,cl
  449393:	push   es
  449394:	data16 lahf 
  449396:	xchg   ecx,eax
  449397:	adc    ch,al
  449399:	push   esp
  44939a:	pop    esi
  44939c:	pop    ecx
  44939d:	shr    bh,cl
  44939f:	or     DWORD PTR [esi+0x7e],eax
  4493a2:	xchg   ecx,eax
  4493a3:	inc    edx
  4493a5:	push   esp
  4493a6:	ja     0x44932e
	...
  4493bc:	aas    
  4493bd:	mov    edx,ebp
  4493bf:	js     0x449363
  4493c1:	addr16 loop 0x4493b2
  4493c4:	lods   eax,DWORD PTR ds:[esi]
  4493c5:	push   esp
  4493c6:	sub    eax,DWORD PTR [esi+0x72de7e2f]
  4493cc:	mov    ah,0x67
  4493ce:	push   ebp
  4493cf:	cli    
  4493d0:	popf   
  4493d1:	push   esp
  4493d2:	inc    ebx
  4493d3:	or     DWORD PTR [ebp-0x720dbba6],ebx
  4493d9:	push   eax
  4493da:	jae    0x449424
  4493dc:	stos   DWORD PTR es:[edi],eax
  4493dd:	mov    es,WORD PTR [eax]
  4493df:	lods   al,BYTE PTR ds:[esi]
  4493e0:	rcl    edx,cl
  4493e2:	cmp    eax,0xe912bb0a
  4493e7:	iret   
  4493e8:	pop    esi
  4493e9:	push   edi
  4493ea:	clc    
  4493eb:	push   0xffffffe5
  4493ed:	add    DWORD PTR [eax],0xd367c19c
  4493f3:	push   ss
  4493f4:	inc    edi
  4493f5:	push   edi
  4493f6:	test   BYTE PTR [eax+ecx*2+0x5e986d53],al
  4493fd:	inc    esi
  4493fe:	sti    
  4493ff:	test   BYTE PTR [ebx+edx*1-0x7c],0x6c
  449404:	int3   
  449405:	push   esp
  449406:	ins    DWORD PTR es:[edi],dx
  449407:	clc    
  449408:	push   cs
  449409:	sbb    esi,eax
  44940b:	fisub  WORD PTR [ebx+edx*8]
  44940e:	jne    0x4493f3
  449410:	mov    cl,0xe0
  449412:	cmp    al,cl
  449414:	dec    esp
  449415:	pop    edx
  449416:	clc    
  449417:	(bad)  
  449418:	lock shl BYTE PTR [ebp-0x29],cl
  44941c:	mov    eax,0xc111e0
	...
  449431:	add    BYTE PTR [eax],al
  449433:	add    BYTE PTR [ebp+0x5f],cl
  449436:	clc    
  449437:	scas   al,BYTE PTR es:[edi]
  449438:	cmp    cl,bl
  44943a:	or     ch,dl
  44943c:	arpl   WORD PTR [edx-0x18],si
  44943f:	dec    ecx
  449440:	rcl    DWORD PTR [esi-0x8],cl
  449443:	stos   BYTE PTR es:[edi],al
  449444:	xor    cl,bl
  449446:	push   cs
  449447:	jmp    0x56cc:0x74e8844b
  44944e:	clc    
  44944f:	push   0x52
  449451:	lea    eax,[ebx]
  449453:	cld    
  449454:	mov    edx,0xa4738a6b
  449459:	pop    eax
  44945a:	les    edx,FWORD PTR [ecx+0x30]
  44945d:	pop    ebp
  44945e:	clc    
  44945f:	pop    esi
  449460:	js     0x44946e
  449462:	ds repz mov bh,0xce
  449466:	and    ebp,DWORD PTR [edx-0x6]
  449469:	je     0x44946d
  44946b:	add    bh,bl
  44946d:	pusha  
  44946e:	inc    ebx
  44946f:	and    ebx,ebx
  449471:	retf   0xff6
  449474:	mov    WORD PTR [edi-0x52e60200],cs
  44947a:	cmp    BYTE PTR [ebp+0x7e],0x90
  44947e:	jae    0x449486
  449480:	(bad)  
  449481:	shr    dh,0xff
  449484:	ret    
  449485:	dec    esp
  449486:	jge    0x4494cd
  449488:	jg     0x44941a
  44948a:	mov    dl,0x8
  44948c:	rol    DWORD PTR [edi+0xc4c038a],0xb8
  449493:	add    al,0x43
  449495:	aas    
  449496:	rol    DWORD PTR [ebp+0x0],0x0
	...
  4494aa:	add    BYTE PTR [eax],al
  4494ac:	push   ds
  4494ad:	scas   eax,DWORD PTR es:[edi]
  4494ae:	add    BYTE PTR [eax],al
  4494b0:	sbb    al,0x4c
  4494b2:	stc    
  4494b3:	inc    ebp
  4494b4:	scas   eax,DWORD PTR es:[edi]
  4494b5:	pop    ebp
  4494b6:	inc    ebx
  4494b7:	and    cl,BYTE PTR [ecx+eiz*8-0x7a96f0ea]
  4494be:	call   0xf9a48af8
  4494c3:	ret    
  4494c4:	xchg   DWORD PTR [ecx-0x2a0a2efe],edx
  4494ca:	pop    edx
  4494cb:	push   es
  4494cc:	push   edi
  4494cd:	leave  
  4494ce:	adc    eax,0x8b568a0f
  4494d3:	add    al,0x52
  4494d5:	mov    eax,DWORD PTR [eax]
  4494d7:	or     DWORD PTR [ebx+ecx*4],0xfffffff9
  4494db:	rcl    BYTE PTR [edi-0x3f],1
  4494de:	add    dl,cl
  4494e0:	cmp    eax,0xf064ad6
  4494e5:	pusha  
  4494e6:	inc    ebx
  4494e7:	and    eax,DWORD PTR [edx-0x37]
  4494ea:	push   ss
  4494eb:	and    BYTE PTR [ecx-0x658af654],0x36
  4494f2:	idiv   cl
  4494f4:	add    esp,DWORD PTR [eax-0x4b]
  4494f7:	mov    esi,DWORD PTR [ebp+0x4b091d23]
  4494fd:	push   0x3701a428
  449502:	sub    BYTE PTR [ecx-0x55d79cf7],ah
  449508:	add    DWORD PTR [edi+0x28],ebp
  44950b:	test   eax,0x9286ae9
	...
  449524:	loope  0x44958c
  449526:	aad    0x3
  449528:	jnp    0x449555
  44952a:	add    al,0xff
  44952c:	das    
  44952d:	and    ebx,DWORD PTR ds:0x77700b09
  449533:	add    edi,DWORD PTR [ebx]
  449535:	gs add al,0x7d
  449538:	jne    0x4495a6
  44953a:	icebp  
  44953b:	iret   
  44953c:	jae    0x449561
  44953e:	add    al,0x0
  449540:	mul    BYTE PTR [eax+0x3e]
  449543:	sbb    eax,0x8022a32b
  449548:	mov    al,ds:0xb372f786
  44954d:	push   eax
  44954e:	lods   al,BYTE PTR ds:[esi]
  44954f:	not    BYTE PTR [edx]
  449551:	inc    ecx
  449552:	les    eax,FWORD PTR [eax+esi*2-0x4a4e087b]
  449559:	push   esp
  44955a:	xchg   esp,eax
  44955b:	jae    0x449518
  44955d:	pop    esp
  44955e:	mov    al,ds:0xa964af73
  449563:	jae    0x449508
  449565:	ins    BYTE PTR es:[edi],dx
  449566:	sahf   
  449567:	jae    0x449510
  449569:	xor    al,0x9f
  44956b:	jae    0x4494f8
  44956d:	cmp    al,0x9a
  44956f:	jae    0x449510
  449571:	inc    esp
  449572:	fwait
  449573:	jae    0x449508
  449575:	dec    esp
  449576:	cwde   
  449577:	jae    0x449510
  449579:	adc    al,0xa1
  44957b:	jae    0x449518
  44957d:	sbb    al,0x96
  44957f:	jae    0x449550
  449581:	and    dl,BYTE PTR [edi+0x1d8fc373]
  449587:	pusha  
	...
  44959c:	sub    DWORD PTR [esi+0x15],edi
  44959f:	popa   
  4495a0:	and    DWORD PTR [edx-0x79f6a1f3],eax
  4495a6:	add    eax,0xfd8a015f
  4495ab:	inc    BYTE PTR [esi]
  4495ad:	mov    ss,WORD PTR [edx+0x8]
  4495b0:	ja     0x44957d
  4495b2:	call   0xb0fcdbb
  4495b7:	jmp    DWORD PTR [eax+ecx*4]
  4495ba:	ins    BYTE PTR es:[edi],dx
  4495bb:	or     BYTE PTR [edi],ch
  4495bd:	(bad)  
  4495be:	jmp    0xed0b045
  4495c3:	aam    0x74
  4495c5:	retf   
  4495c6:	call   0xa5959dce
  4495cb:	and    bh,BYTE PTR [edi]
  4495cd:	retf   
  4495ce:	retf   
  4495cf:	cmp    DWORD PTR [edi-0x48872153],0x67
  4495d6:	mov    ds:0xab512dec,al
  4495db:	jp     0x449654
  4495dd:	lods   al,BYTE PTR ds:[esi]
  4495de:	out    0xb5,al
  4495e0:	mov    dl,0x2
  4495e2:	data16 jge 0x4495f7
  4495e5:	(bad)  
  4495e6:	jmp    0x6b959dee
  4495eb:	ret    
  4495ec:	mov    dh,0x50
  4495ee:	call   0x77ee:0xacafdc2
  4495f5:	lods   eax,DWORD PTR ds:[esi]
  4495f6:	imul   esi,DWORD PTR [eax-0x35],0xcd061480
  4495fd:	scas   al,BYTE PTR es:[edi]
  4495fe:	mov    al,ds:0xee
	...
  449613:	add    ch,bl
  449615:	dec    esp
  449616:	arpl   WORD PTR [eax-0x50],cx
  449619:	or     BYTE PTR [edi-0x5],0x3f
  44961d:	or     al,0x70
  44961f:	add    ebp,DWORD PTR [ebp-0x4afd1671]
  449625:	or     al,0x1
  449627:	test   eax,0xaad156ba
  44962c:	fwait
  44962d:	int    0x23
  44962f:	addr16 in eax,dx
  449631:	jno    0x4495b3
  449633:	(bad)  
  449635:	xchg   BYTE PTR [ebp-0x11],ch
  449638:	outs   dx,BYTE PTR ds:[esi]
  449639:	pop    edx
  44963a:	stc    
  44963b:	dec    esi
  44963c:	fwait
  44963d:	adc    ecx,DWORD PTR [esp+ebp*4-0xe517929]
  449644:	xor    eax,0x72e9870c
  449649:	push   eax
  44964a:	clc    
  44964b:	jmp    0x4053:0xedc0d2b6
  449652:	les    esp,FWORD PTR [esi]
  449654:	in     eax,dx
  449655:	jns    0x449657
  449657:	jmp    0xa4d02612
  44965c:	xchg   edi,eax
  44965d:	xchg   BYTE PTR [esi-0x486b4657],ch
  449663:	jmp    0xd8bc261e
  449668:	push   cs
  449669:	test   dh,ch
  44966b:	out    dx,al
  44966c:	sbb    bl,dl
  44966e:	jne    0x44966f
  449670:	mov    ecx,0x48d0fed5
  449675:	pop    eax
  449676:	clc    
  449677:	(bad)  
	...
  44968c:	hlt    
  44968d:	addr16 mov bl,0xd4
  449690:	sbb    BYTE PTR [edi-0x74],dl
  449693:	sub    al,0xaf
  449695:	push   eax
  449696:	cmp    eax,0x23cd340a
  44969b:	jmp    0x449692
  44969d:	dec    esi
  44969e:	shl    DWORD PTR ds:[esi+0x5de9008f],cl
  4496a5:	int    0x23
  4496a7:	out    dx,al
  4496a8:	and    BYTE PTR [eax+0x5021d401],dl
  4496ae:	clc    
  4496af:	jmp    0x12d150d
  4496b4:	and    bl,BYTE PTR [eax-0x7]
  4496b7:	dec    DWORD PTR [edi-0x20]
  4496ba:	adc    al,BYTE PTR [ecx]
  4496bc:	mov    cl,0xea
  4496be:	jne    0x44973d
  4496c0:	adc    BYTE PTR [edx+edi*2-0xfeefb9d],0xff
  4496c8:	sti    
  4496c9:	push   eax
  4496ca:	cmp    eax,eax
  4496cc:	pushf  
  4496cd:	xchg   ebx,eax
  4496ce:	add    BYTE PTR [edx+eax*2-0x36],bh
  4496d2:	mov    ch,0xc1
  4496d4:	out    0x97,al
  4496d6:	jg     0x449699
  4496d8:	rdpmc  
  4496da:	or     DWORD PTR [ebx+0xb734ea6],eax
  4496e0:	fistp  QWORD PTR [edx]
  4496e2:	clc    
  4496e3:	jae    0x4496f3
  4496e5:	imul   edx,DWORD PTR [esi-0x8],0xffffffbb
  4496e9:	cmp    al,0xb5
  4496eb:	and    DWORD PTR [esi+0x37734d],0x0
	...
  449702:	add    BYTE PTR [eax],al
  449704:	fistp  QWORD PTR [edx]
  449706:	div    BYTE PTR [edx+edx*2+0x6b]
  44970a:	inc    esi
  44970b:	clc    
  44970c:	cmp    edi,DWORD PTR [esi*4+0x73902583]
  449713:	push   es
  449714:	mov    ah,0xd4
  449716:	clc    
  449717:	call   FWORD PTR [ebx]
  449719:	push   eax
  44971a:	jne    0x449715
  44971c:	adc    al,dh
  44971e:	add    ch,al
  449720:	test   al,0x3b
  449722:	stc    
  449723:	call   FWORD PTR [edi+0x10]
  449726:	out    dx,eax
  449727:	pop    es
  449728:	rcl    DWORD PTR [ebp+0x3bf431e8],0xf9
  44972f:	ret    
  449730:	pop    edi
  449731:	cmp    DWORD PTR [ecx],ecx
  449733:	jne    0x449707
  449735:	push   0x22
  449737:	clc    
  449738:	sbb    edi,DWORD PTR [esi*4-0x6b94a18]
  44973f:	push   DWORD PTR [ebp-0x4be9c14f]
  449745:	jae    0x449768
  449747:	jge    0x4497c1
  449749:	pop    ecx
  44974a:	add    bh,BYTE PTR [ebp+0xa73f2]
  449750:	mov    ch,0x38
  449752:	add    al,0x85
  449754:	lock pop ecx
  449756:	cmc    
  449757:	mov    cl,0xf5
  449759:	aaa    
  44975a:	daa    
  44975b:	mov    ecx,0x790438b5
  449760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449761:	shl    BYTE PTR [esi],1
  449763:	repz mov bl,ch
  449766:	cmp    BYTE PTR [edx+0x0],0x0
	...
  44977a:	add    BYTE PTR [eax],al
  44977c:	stos   DWORD PTR es:[edi],eax
  44977d:	cmp    eax,0x888d2e66
  449782:	in     al,dx
  449783:	clc    
  449784:	jb     0x4497ff
  449786:	shl    BYTE PTR es:[ebp-0x6783fbc8],0xbf
  44978e:	sar    DWORD PTR [esi-0x4184cbb1],0x36
  449795:	xchg   edi,eax
  449796:	hlt    
  449797:	jl     0x4497e8
  449799:	outs   dx,BYTE PTR ds:[esi]
  44979a:	outs   dx,DWORD PTR ds:[esi]
  44979b:	add    eax,0x73fa8f36
  4497a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4497a1:	mov    al,ds:0x4532f0b4
  4497a6:	mov    eax,0x6f6d2f7c
  4497ab:	add    cl,BYTE PTR ds:0x1af8f3fc
  4497b1:	stc    
  4497b2:	aam    0xb0
  4497b4:	or     DWORD PTR [ebp-0x14],esp
  4497b7:	test   BYTE PTR [eax+0x42],dh
  4497ba:	std    
  4497bb:	inc    edx
  4497bc:	(bad)  
  4497bd:	mov    ecx,0xf9b71d41
  4497c2:	ret    
  4497c3:	inc    edx
  4497c4:	iret   
  4497c5:	cmp    BYTE PTR [eax+eax*1],al
  4497c8:	mov    ch,0xb1
  4497ca:	inc    ecx
  4497cb:	sbb    eax,0x44578fb2
  4497d0:	fimul  DWORD PTR [edx-0x704afbaa]
  4497d6:	push   cs
  4497d7:	or     ebx,ebp
  4497d9:	imul   ecx,DWORD PTR [esi-0x2ee4215],0x11
	...
  4497f3:	add    BYTE PTR [ecx+0x2f86e7c3],dh
  4497f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4497fa:	out    0x6f,eax
  4497fc:	mov    ebp,0xb411e510
  449801:	int3   
  449802:	jmp    0x4497e2
  449804:	(bad)  [edi]
  449806:	push   0xfffffff3
  449808:	lea    ecx,[ebp+0x2b]
  44980b:	sub    DWORD PTR [ebp-0x70],esi
  44980e:	jmp    0x70c89916
  449813:	(bad)  
  449814:	cmp    edi,DWORD PTR [edx]
  449816:	fidivr WORD PTR [ebx+esi*1+0x11]
  44981a:	dec    ecx
  44981b:	sti    
  44981c:	jmp    0xc6b5706a
  449821:	adc    BYTE PTR [ecx],ah
  449823:	cld    
  449824:	fild   QWORD PTR [edi+0x6a]
  449827:	in     eax,dx
  449828:	push   ecx
  449829:	shl    edx,0x86
  44982c:	inc    ebx
  44982d:	xchg   edx,eax
  44982e:	lea    edx,[ecx]
  449830:	dec    ebp
  449831:	jecxz  0x449829
  449833:	jmp    0xc2bd:0xee6b513d
  44983a:	loop   0x4497c2
  44983c:	and    ebx,DWORD PTR [eax-0x2cf2fe9b]
  449842:	(bad)  
  449843:	jmp    0x4d09:0x2bd2511d
  44984a:	iret   
  44984b:	jle    0x4498c4
  44984d:	test   eax,0x10a040e8
  449852:	and    eax,0x9f51fb27
  449857:	inc    eax
	...
  44986c:	retf   
  44986d:	pop    DWORD PTR [eax]
  44986f:	jmp    0x24d0282a
  449874:	call   0xb788:0xb029ae96
  44987b:	jmp    0xf8bc2836
  449880:	out    dx,al
  449881:	call   0xcc142772
  449886:	jne    0x449867
  449888:	mov    bh,0xc9
  44988a:	and    dl,BYTE PTR [ecx+0x76f83faf]
  449890:	jae    0x44981b
  449892:	shr    cl,0xb6
  449895:	(bad)  
  449896:	je     0x449894
  449898:	sbb    DWORD PTR [ebx],ecx
  44989a:	ret    0x9253
  44989d:	adc    eax,0x97916ac2
  4498a2:	adc    DWORD PTR [ebx+0x7d],0xffffffc1
  4498a6:	(bad)  
  4498a7:	push   eax
  4498a8:	cmp    DWORD PTR [esi],0xfffffff8
  4498ab:	ds jnp 0x4498e2
  4498ae:	fistp  QWORD PTR [edx]
  4498b0:	pop    edi
  4498b1:	inc    edi
  4498b2:	mov    WORD PTR [eax+esi*4+0x33ca3d4c],fs
  4498b9:	shl    DWORD PTR [ebx],1
  4498bb:	jmp    0x449938
  4498bd:	dec    edi
  4498be:	ds repz mov dh,0x8f
  4498c2:	add    cl,ch
  4498c4:	ret    
  4498c5:	shl    DWORD PTR [ebx],1
  4498c7:	test   BYTE PTR [esp+ecx*4],0x1
  4498cb:	mov    esp,0xe9f84c5f
	...
  4498e4:	lahf   
  4498e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4498e6:	call   0xf88babce
  4498eb:	push   0xffffff92
  4498ed:	mov    eax,ds:0xcb1154fd
  4498f2:	jne    0x4498f3
  4498f4:	mov    ch,0xc6
  4498f6:	add    al,dl
  4498f8:	retf   
  4498f9:	aaa    
  4498fa:	scas   al,BYTE PTR es:[edi]
  4498fb:	add    BYTE PTR [edx],bh
  4498fd:	ss stc 
  4498ff:	ret    
  449900:	icebp  
  449901:	dec    edi
  449902:	clc    
  449903:	(bad)  
  449904:	fdiv   QWORD PTR [ebx+0x500e8923]
  44990a:	fiadd  WORD PTR [eiz*2-0x1c1e8ab0]
  449911:	adc    ch,dh
  449913:	or     al,0xa9
  449915:	dec    edx
  449916:	jne    0x449911
  449918:	aam    0xb3
  44991a:	pop    es
  44991b:	call   0x3dda78
  449920:	pop    edi
  449921:	adc    eax,0x91a90fee
  449926:	call   0xf97dc3b4
  44992b:	ret    
  44992c:	add    al,0xb8
  44992e:	in     eax,0xff
  449930:	repz int3 
  449932:	inc    edx
  449933:	sbb    bl,BYTE PTR [ebp+0x5983158a]
  449939:	je     0x449931
  44993b:	ret    0x8acb
  44993e:	push   cs
  44993f:	add    BYTE PTR [edi+ecx*4+0x0],bl
  449943:	mov    ebx,DWORD PTR [ecx]
  449945:	je     0x449950
  449947:	mov    dh,0x0
	...
  449959:	add    BYTE PTR [eax],al
  44995b:	add    BYTE PTR [esi+ecx*4],cl
  44995e:	cmp    edi,DWORD PTR [edi+0x7f008f4c]
  449964:	dec    ebp
  449965:	addr16 cwde 
  449967:	repz mov ds:0x4a7d7538,eax
  44996d:	nop
  44996e:	jp     0x449997
  449970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449971:	in     al,0xf2
  449973:	push   DWORD PTR [ebx]
  449975:	push   esp
  449976:	cmp    eax,eax
  449978:	sbb    al,0x8f
  44997a:	add    BYTE PTR [esi+eax*1-0x3a],bh
  44997e:	mov    ch,0xc1
  449980:	push   es
  449981:	dec    ebx
  449982:	jg     0x449945
  449984:	lahf   
  449985:	sub    eax,0x5eb58309
  44998a:	out    dx,eax
  44998b:	jb     0x44993b
  44998d:	mov    ch,0xea
  44998f:	push   es
  449990:	cmp    DWORD PTR [edx],0x9eb2ddc
  449996:	jmp    0xede07757
  44999b:	clc    
  44999c:	loop   0x44994b
  44999e:	ss push ss
  4499a0:	mov    ah,0x7b
  4499a2:	sbb    eax,0xfe55787d
  4499a7:	mov    esp,0x67bf2
  4499ac:	mov    ch,0x38
  4499ae:	add    al,0x85
  4499b0:	jo     0x449a07
  4499b2:	stc    
  4499b3:	mov    cl,0xf5
  4499b5:	aaa    
  4499b6:	pop    ds
  4499b7:	mov    ecx,0x790438b5
  4499bc:	les    edx,FWORD PTR [eax]
  4499be:	cmp    ebp,ebp
	...
  4499d4:	call   0x6a31:0xab7a7cb1
  4499db:	dec    esi
  4499dc:	popf   
  4499dd:	in     al,0xe6
  4499df:	clc    
  4499e0:	xor    BYTE PTR [ebp+0x1e],0xc0
  4499e4:	mov    ch,0x38
  4499e6:	add    al,0x7c
  4499e8:	clc    
  4499e9:	mov    edi,0x3c5fbebd
  4499ee:	jnp    0x4499ae
  4499f0:	xlat   BYTE PTR ss:[ebx]
  4499f2:	clc    
  4499f3:	jl     0x449a54
  4499f5:	inc    esp
  4499f6:	add    bl,BYTE PTR [di-0x68]
  4499fa:	out    0xf8,al
  4499fc:	dec    edx
  4499fd:	jne    0x449a7b
  4499ff:	cmc    
  449a00:	mov    al,0x23
  449a02:	add    ch,al
  449a04:	pusha  
  449a05:	dec    ebx
  449a06:	loopne 0x449a00
  449a08:	div    BYTE PTR [ebp+eiz*8+0x7d68a009]
  449a0f:	div    BYTE PTR [ebp+0x1c7d04c4]
  449a15:	(bad)  
  449a16:	icebp  
  449a17:	push   0xf1aa37a7
  449a1c:	or     eax,0x883ab4a
  449a21:	call   0x67f2:0x4879fb4c
  449a28:	mov    bh,0x37
  449a2a:	jp     0x449a1d
  449a2c:	in     eax,dx
  449a2d:	dec    ecx
  449a2e:	stos   DWORD PTR es:[edi],eax
  449a2f:	fadd   QWORD PTR [ecx+0x3d]
  449a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449a33:	out    0x31,eax
  449a35:	aam    0x3
  449a37:	add    eax,0x0
	...
  449a4c:	jbe    0x449abc
  449a4e:	push   0x41
  449a50:	test   al,0x8d
  449a52:	stos   BYTE PTR es:[edi],al
  449a53:	mov    eax,0x8c125aee
  449a58:	mov    ecx,0xb503ea49
  449a5d:	(bad)
  449a61:	(bad)  
  449a62:	jge    0x449a03
  449a64:	mov    eax,ds:0xb5146e49
  449a69:	(bad)  
  449a6a:	mov    ebp,0xea49918a
  449a6f:	add    esi,DWORD PTR [ebp-0x4afc1671]
  449a75:	(bad)  
  449a76:	fwait
  449a77:	xchg   esi,eax
  449a78:	jns    0x449ac3
  449a7a:	and    dl,BYTE PTR [ebx]
  449a7c:	mov    ch,0x8f
  449a7e:	pop    ebp
  449a7f:	(bad)
  449a83:	add    esi,DWORD PTR [ebp-0x4afc1671]
  449a89:	(bad)
  449a8d:	dec    ecx
  449a8e:	jmp    0x418a:0x58fb513
  449a95:	dec    ecx
  449a96:	jmp    0xb503:0xe98fb503
  449a9d:	(bad)  
  449a9e:	xchg   ebp,eax
  449a9f:	mov    dl,0x29
  449aa1:	dec    ecx
  449aa2:	add    DWORD PTR [ecx+0x15008fc7],ecx
  449aa8:	das    
  449aa9:	dec    esp
  449aaa:	clc    
  449aab:	jmp    0xe9452a66
	...
  449ac4:	mov    dh,0x8f
  449ac6:	add    BYTE PTR [ebx+0x39f84c47],cl
  449acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449acd:	pop    DWORD PTR [eax]
  449acf:	sbb    eax,0xe9f84c3e
  449ad4:	mov    dh,0x8f
  449ad6:	add    cl,ch
  449ad8:	mov    dh,0x8f
  449ada:	add    BYTE PTR [ecx-0x4607b3d9],ch
  449ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449ae1:	pop    DWORD PTR [eax]
  449ae3:	in     eax,dx
  449ae4:	xor    BYTE PTR [eax+edi*8-0x17],cl
  449ae8:	mov    dh,0x8f
  449aea:	add    cl,ch
  449aec:	mov    dh,0x8f
  449aee:	add    BYTE PTR ds:0x71f84b65,al
  449af4:	mov    eax,0x2eb9008f
  449af9:	dec    ebx
  449afa:	clc    
  449afb:	jmp    0xe9452ab6
  449b00:	mov    dh,0x8f
  449b02:	add    ch,cl
  449b04:	inc    ebp
  449b05:	dec    ebx
  449b06:	clc    
  449b07:	test   DWORD PTR [esi+0x2db9008f],esp
  449b0d:	dec    ebx
  449b0e:	clc    
  449b0f:	jmp    0xe9452aca
  449b14:	mov    dh,0x8f
  449b16:	add    bh,bl
  449b18:	adc    BYTE PTR [ebx-0x8],cl
  449b1b:	sbb    eax,0xf5008fc5
  449b20:	ds dec ebx
  449b22:	clc    
  449b23:	jmp    0xe9452ade
	...
  449b3c:	mov    dh,0x8f
  449b3e:	add    BYTE PTR [ebx],bl
  449b40:	or     BYTE PTR [ebx-0x8],cl
  449b43:	add    BYTE PTR [esp+ebx*4+0x11200000],ah
  449b4a:	cmc    
  449b4b:	dec    DWORD PTR [esp+ecx*4]
  449b4e:	add    BYTE PTR [eax],al
  449b50:	or     al,0x8c
  449b52:	add    BYTE PTR [eax],al
  449b54:	out    dx,al
  449b55:	cli    
  449b56:	hlt    
  449b57:	jmp    FWORD PTR [eax+ebx*4+0x0]
  449b5b:	add    BYTE PTR [ebp+edx*1-0xb],cl
  449b5f:	dec    DWORD PTR [esp+ecx*4]
  449b62:	add    BYTE PTR [eax],al
  449b64:	fmul   QWORD PTR [ebx-0x4d60000]
  449b6a:	hlt    
  449b6b:	(bad)  
  449b6c:	call   0x5c449c0f
  449b71:	adc    eax,0x8bdcfff5
  449b76:	add    BYTE PTR [eax],al
  449b78:	fmul   QWORD PTR [ebx-0xb740000]
  449b7e:	hlt    
  449b7f:	(bad)  
  449b80:	clc    
  449b81:	sahf   
  449b82:	add    BYTE PTR [eax],al
  449b84:	lods   al,BYTE PTR ds:[esi]
  449b85:	sbb    esi,ebp
  449b87:	call   FWORD PTR [ebx+edx*4-0x6c740000]
  449b8e:	add    BYTE PTR [eax],al
  449b90:	mov    dl,0xfa
  449b92:	hlt    
  449b93:	(bad)  
  449b94:	call   0xd8449c34
  449b99:	push   cs
  449b9a:	cmc    
  449b9b:	dec    DWORD PTR [ebx+edx*4+0x0]
	...
  449bb2:	add    BYTE PTR [eax],al
  449bb4:	mov    WORD PTR [ebx-0x6a00000],ss
  449bba:	hlt    
  449bbb:	jmp    DWORD PTR [edx*4-0x6cb40000]
  449bc2:	add    BYTE PTR [eax],al
  449bc4:	dec    esp
  449bc5:	xchg   ebx,eax
  449bc6:	add    BYTE PTR [eax],al
  449bc8:	pop    esp
  449bc9:	xchg   ebx,eax
  449bca:	add    BYTE PTR [eax],al
  449bcc:	pop    esp
  449bcd:	xchg   ebx,eax
  449bce:	add    BYTE PTR [eax],al
  449bd0:	mov    ch,0x38
  449bd2:	add    al,0x0
  449bd4:	mov    ch,0xf0
  449bd6:	mov    esp,?
  449bd8:	xor    ah,BYTE PTR [ebp+0x3d2afc8e]
  449bde:	mov    ?,esp
  449be0:	and    ch,BYTE PTR [ecx-0x73]
  449be3:	cld    
  449be4:	sbb    cl,BYTE PTR ds:0xb912fc8d
  449bea:	mov    esp,?
  449bec:	or     cl,cl
  449bee:	mov    esp,?
  449bf0:	add    dl,BYTE PTR [ecx]
  449bf2:	(bad)  
  449bf3:	cld    
  449bf4:	cli    
  449bf5:	adc    al,0x8d
  449bf7:	cld    
  449bf8:	repnz dec BYTE PTR [esp+edi*8-0x372a716]
  449c00:	loop   0x449c06
  449c02:	(bad)  
  449c03:	cld    
  449c04:	fisubr DWORD PTR [esi]
  449c06:	mov    ah,0xfc
  449c08:	rcr    BYTE PTR [eax-0x4c],cl
  449c0b:	cld    
  449c0c:	retf   0xb454
  449c0f:	cld    
  449c10:	ret    0xb45e
  449c13:	cld    
  449c14:	mov    edx,0xfcaca4
	...
  449c29:	add    BYTE PTR [eax],al
  449c2b:	add    BYTE PTR [edx-0x55035360],dh
  449c31:	inc    esp
  449c32:	mov    ah,0xfc
  449c34:	mov    ds:0x9afcb3e4,al
  449c39:	shl    BYTE PTR [ebx-0x4c136d04],cl
  449c3f:	cld    
  449c40:	mov    dh,BYTE PTR [ebx+esi*4-0x4]
  449c44:	sbb    al,0xb3
  449c47:	cld    
  449c48:	jp     0x449c32
  449c4a:	mov    bl,0xfc
  449c4c:	jb     0x449c88
  449c4e:	mov    bl,0xfc
  449c50:	push   0x5e
  449c52:	mov    bl,0xfc
  449c54:	bound  ecx,QWORD PTR [ebx+esi*4-0x4cc9a504]
  449c5b:	cld    
  449c5c:	push   edx
  449c5d:	pop    ecx
  449c5f:	mov    dl,0x49
  449c61:	inc    esi
  449c62:	call   0x39b2:0x624641b2
  449c69:	inc    esi
  449c6a:	dec    eax
  449c6b:	xchg   ebp,eax
  449c6c:	xor    DWORD PTR [esi-0x16],eax
  449c6f:	add    esi,DWORD PTR [ebp+0x21ad1d8f]
  449c75:	inc    esi
  449c76:	dec    esp
  449c77:	lods   eax,DWORD PTR ds:[esi]
  449c78:	sbb    DWORD PTR [esi+0x5e],eax
  449c7b:	lods   eax,DWORD PTR ds:[esi]
  449c7c:	adc    DWORD PTR [esi+0x50],eax
  449c7f:	call   0x4601:0x9a364609
  449c86:	es call 0x45f1:0x9a0c45f9
  449c8e:	sahf   
  449c8f:	call   0x0:0x0
	...
  449ca2:	add    BYTE PTR [eax],al
  449ca4:	jmp    0xb54886ee
  449ca9:	(bad)  
  449caa:	adc    DWORD PTR [ecx-0x6733ba27],ebx
  449cb0:	rol    DWORD PTR [ebp+0x2e],1
  449cb3:	cdq    
  449cb4:	leave  
  449cb5:	inc    ebp
  449cb6:	mov    al,0x98
  449cb8:	rol    DWORD PTR [ebp-0x58],0x98
  449cbc:	mov    ecx,0xb198d245
  449cc1:	inc    ebp
  449cc2:	into   
  449cc3:	cwde   
  449cc4:	test   eax,0xa198d845
  449cc9:	inc    ebp
  449cca:	(bad)  
  449ccb:	cwde   
  449ccc:	cdq    
  449ccd:	inc    ebp
  449cce:	loop   0x449c68
  449cd0:	xchg   ecx,eax
  449cd1:	inc    ebp
  449cd2:	pusha  
  449cd3:	cwde   
  449cd4:	mov    DWORD PTR [ebp+0x5c],eax
  449cd7:	cwde   
  449cd8:	add    DWORD PTR [ebp-0x68],0x60457998
  449cdf:	cwde   
  449ce0:	jno    0x449d27
  449ce2:	mov    bl,BYTE PTR [eax+0x3ea4569]
  449ce8:	mov    ch,0x8f
  449cea:	add    BYTE PTR [edi-0x1607bbc7],ah
  449cf0:	mov    dh,0x8f
  449cf2:	add    bl,bh
  449cf4:	adc    eax,DWORD PTR [eax+edi*8-0x37]
  449cf8:	sbb    eax,DWORD PTR [eax+edi*8-0x39]
  449cfc:	adc    eax,DWORD PTR [eax+edi*8-0x31]
  449d00:	pop    ebx
  449d01:	inc    esp
  449d02:	clc    
  449d03:	fwait
  449d04:	push   ebx
  449d05:	inc    esp
  449d06:	clc    
  449d07:	mov    ds:0x0,eax
	...
  449d1c:	pop    ebx
  449d1d:	inc    esp
  449d1e:	clc    
  449d1f:	jns    0x449d74
  449d21:	inc    esp
  449d22:	clc    
  449d23:	imul   ebx,DWORD PTR [edx+0x44],0x445383f8
  449d2a:	clc    
  449d2b:	xchg   DWORD PTR [ebx+0x44],ebx
  449d2e:	clc    
  449d2f:	popf   
  449d30:	push   ebx
  449d31:	inc    esp
  449d32:	clc    
  449d33:	mov    ds:0xcff8441b,eax
  449d38:	adc    eax,DWORD PTR [eax+edi*8-0x41]
  449d3c:	sbb    eax,DWORD PTR [eax+edi*8-0x19]
  449d40:	adc    al,BYTE PTR [eax+edi*8+0xb]
  449d44:	sbb    eax,0x12dff844
  449d49:	inc    esp
  449d4a:	clc    
  449d4b:	daa    
  449d4c:	or     eax,0xd37f844
  449d51:	inc    esp
  449d52:	clc    
  449d53:	call   FWORD PTR [edx+0x43]
  449d56:	clc    
  449d57:	imul   edx,DWORD PTR [edx+0x43],0x435a6df8
  449d5e:	clc    
  449d5f:	push   ebp
  449d60:	push   edx
  449d61:	inc    ebx
  449d62:	clc    
  449d63:	cmp    DWORD PTR [edx+0x43],ebx
  449d66:	clc    
  449d67:	cmp    DWORD PTR [edx+0x43],edx
  449d6a:	clc    
  449d6b:	aas    
  449d6c:	pop    edx
  449d6d:	inc    ebx
  449d6e:	clc    
  449d6f:	inc    ebp
  449d70:	push   edx
  449d71:	inc    ebx
  449d72:	clc    
  449d73:	dec    edi
  449d74:	sbb    al,BYTE PTR [ebx-0x8]
  449d77:	add    BYTE PTR [edx-0x9],ah
  449d7a:	hlt    
  449d7b:	jmp    FWORD PTR [esi+0xfff4f6]
	...
  449d91:	add    BYTE PTR [eax],al
  449d93:	add    BYTE PTR [esi-0x9],ah
  449d96:	hlt    
  449d97:	jmp    FWORD PTR [eax]
  449d99:	div    esp
  449d9b:	(bad)  
  449d9c:	cmp    bh,dh
  449d9e:	hlt    
  449d9f:	jmp    FWORD PTR [eax]
  449da1:	div    esp
  449da3:	inc    esp
  449da5:	div    esp
  449da7:	(bad)  
  449da8:	call   0xcd44929d
  449dad:	div    esp
  449daf:	(bad)  
  449db0:	mov    edx,0x18fff4f7
  449db5:	in     al,dx
  449db6:	hlt    
  449db7:	call   FWORD PTR [esi]
  449db9:	div    ah
  449dbb:	dec    DWORD PTR [edx]
  449dbd:	div    ah
  449dbf:	jmp    DWORD PTR [esi-0x59000b07]
  449dc5:	stc    
  449dc6:	hlt    
  449dc7:	call   FWORD PTR [edx-0x33000b07]
  449dcd:	stc    
  449dce:	hlt    
  449dcf:	push   DWORD PTR [edx-0x7]
  449dd2:	hlt    
  449dd3:	dec    DWORD PTR [ecx+edi*8-0xc]
  449dd7:	push   DWORD PTR [eax-0x7]
  449dda:	hlt    
  449ddb:	(bad)  
  449ddc:	js     0x449dd7
  449dde:	hlt    
  449ddf:	dec    DWORD PTR [ecx+edi*8]
  449de2:	hlt    
  449de3:	(bad)  
  449de4:	cli    
  449de5:	clc    
  449de6:	hlt    
  449de7:	push   DWORD PTR [edx]
  449de9:	div    ah
  449deb:	push   DWORD PTR [eax]
  449ded:	div    ah
  449def:	call   DWORD PTR [eax+edi*8-0x789000c]
  449df6:	hlt    
  449df7:	inc    DWORD PTR [eax]
	...
  449e09:	add    BYTE PTR [eax],al
  449e0b:	add    dh,bl
  449e0d:	clc    
  449e0e:	hlt    
  449e0f:	push   DWORD PTR [esi-0x8]
  449e12:	hlt    
  449e13:	(bad)  
  449e14:	jp     0x449e0e
  449e16:	hlt    
  449e17:	push   DWORD PTR [ebp+0x72fca964]
  449e1d:	lods   eax,DWORD PTR ds:[esi]
  449e1e:	test   eax,0xa9b16afc
  449e23:	cld    
  449e24:	(bad)  
  449e25:	(bad)  
  449e26:	test   eax,0xa9775afc
  449e2b:	cld    
  449e2c:	push   edx
  449e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449e2e:	test   eax,0x96254afc
  449e33:	cld    
  449e34:	inc    edx
  449e35:	push   ecx
  449e36:	xchg   esi,eax
  449e37:	cld    
  449e38:	cmp    dh,ch
  449e3a:	xchg   ebp,eax
  449e3b:	cld    
  449e3c:	xor    ah,BYTE PTR [ecx-0x6a]
  449e3f:	cld    
  449e40:	sub    dl,BYTE PTR [edi-0x6a]
  449e43:	cld    
  449e44:	and    ch,BYTE PTR [ecx-0x6a]
  449e47:	cld    
  449e48:	sbb    al,BYTE PTR [ebp-0x62]
  449e4b:	cld    
  449e4c:	adc    bh,BYTE PTR [ecx]
  449e4e:	popf   
  449e4f:	cld    
  449e50:	or     dl,BYTE PTR [ebx-0x62]
  449e53:	cld    
  449e54:	add    al,BYTE PTR [ecx]
  449e56:	sahf   
  449e57:	cld    
  449e58:	cli    
  449e59:	push   ds
  449e5a:	sahf   
  449e5b:	cld    
  449e5c:	repnz les ebx,FWORD PTR [ebp-0x62531504]
  449e63:	cld    
  449e64:	loop   0x449e1a
  449e66:	popf   
  449e67:	cld    
  449e68:	fiadd  DWORD PTR [eax-0x312d0362]
  449e6e:	sahf   
  449e6f:	cld    
	...
  449e84:	retf   0x9eca
  449e87:	cld    
  449e88:	ret    0x9e80
  449e8b:	cld    
  449e8c:	mov    edx,0xb2fc9e5c
  449e91:	add    bl,BYTE PTR [esi-0x61d15504]
  449e97:	cld    
  449e98:	mov    ds:0x9afc9e3e,al
  449e9d:	mov    esi,0xc92fca2
  449ea2:	mov    ds:0x418f8afc,eax
  449ea7:	mov    ds:0xa22c4281,al
  449eac:	jns    0x449ef0
  449eae:	call   0x69a2:0x664271a2
  449eb5:	inc    edx
  449eb6:	jb     0x449e5a
  449eb8:	popa   
  449eb9:	inc    edx
  449eba:	mov    al,0xa2
  449ebc:	pop    ecx
  449ebd:	inc    edx
  449ebe:	les    esp,FWORD PTR [edx-0x5d71bdaf]
  449ec4:	dec    ecx
  449ec5:	inc    edx
  449ec6:	mov    dl,0xa2
  449ec8:	inc    ecx
  449ec9:	inc    edx
  449eca:	(bad)  
  449ecb:	mov    ds:0xa2f44239,al
  449ed0:	xor    DWORD PTR [edx-0x1e],eax
  449ed3:	mov    ds:0xa3024229,al
  449ed8:	and    DWORD PTR [edx+0x46],eax
  449edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449edc:	sbb    DWORD PTR [edx+0x4],eax
  449edf:	mov    ds:0xa31e4211,eax
  449ee4:	or     DWORD PTR [edx-0x70],eax
  449ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  449efc:	add    DWORD PTR [edx+0x6e],eax
  449eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449f00:	stc    
  449f01:	inc    ecx
  449f02:	push   0xffffffa4
  449f04:	icebp  
  449f05:	inc    ecx
  449f06:	inc    edx
  449f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449f08:	jmp    0xe1e8b94e
  449f0d:	inc    ecx
  449f0e:	sub    ah,BYTE PTR [ecx+ebx*8-0x2e5bfdbf]
  449f15:	inc    ecx
  449f16:	(bad)  
  449f17:	mov    ds:0x7f9e41c9,eax
  449f1c:	rol    DWORD PTR [ecx-0x78],0x7f
  449f20:	mov    ecx,0xb17fb041
  449f25:	inc    ecx
  449f26:	mov    edx,0x4041a97f
  449f2b:	jg     0x449ece
  449f2d:	inc    ecx
  449f2e:	push   edx
  449f2f:	jg     0x449eca
  449f31:	inc    ecx
  449f32:	add    DWORD PTR [ebp+0x12],edx
  449f35:	inc    esp
  449f36:	clc    
  449f37:	or     al,BYTE PTR [si-0x8]
  449f3b:	fld    QWORD PTR [ebx]
  449f3d:	inc    esp
  449f3e:	clc    
  449f3f:	retf   
  449f40:	sti    
  449f41:	inc    ebx
  449f42:	clc    
  449f43:	mov    ebx,0xa9f843f3
  449f48:	jmp    0x449f8d
  449f4a:	clc    
  449f4b:	std    
  449f4c:	jecxz  0x449f91
  449f4e:	clc    
  449f4f:	(bad)  
  449f51:	inc    ebx
  449f52:	clc    
  449f53:	fcmovnbe st,st(3)
  449f55:	inc    ebx
  449f56:	clc    
  449f57:	xor    ebx,ecx
  449f59:	inc    ebx
  449f5a:	clc    
  449f5b:	movnti DWORD PTR [ebx-0x8],eax
  449f5f:	aaa    
	...
  449f74:	mov    ebx,0xb323f843
  449f79:	inc    ebx
  449f7a:	clc    
  449f7b:	push   ebx
  449f7c:	stos   DWORD PTR es:[edi],eax
  449f7d:	inc    ebx
  449f7e:	clc    
  449f7f:	push   ebp
  449f80:	mov    ds:0x9b49f843,eax
  449f85:	inc    ebx
  449f86:	clc    
  449f87:	pop    ebp
  449f88:	xchg   ebx,eax
  449f89:	inc    ebx
  449f8a:	clc    
  449f8b:	mov    ch,0x88
  449f8d:	inc    ebx
  449f8e:	clc    
  449f8f:	add    DWORD PTR gs:[ebx-0x8],0x51
  449f94:	jnp    0x449fd9
  449f96:	clc    
  449f97:	cmp    DWORD PTR [ebx+0x43],esi
  449f9a:	clc    
  449f9b:	and    eax,0xa9f8436b
  449fa0:	or     eax,0xb6e9f844
  449fa5:	pop    DWORD PTR [eax]
  449fa7:	sti    
  449fa8:	xor    DWORD PTR [eax+edi*8-0x31],eax
  449fac:	sub    DWORD PTR [eax+edi*8-0xb],eax
  449fb0:	and    DWORD PTR [eax+edi*8-0x17],eax
  449fb4:	mov    dh,0x8f
  449fb6:	add    cl,ah
  449fb8:	mov    dh,0x8f
  449fba:	and    al,0xb6
  449fbd:	pop    DWORD PTR [eax+0x8c9200]
  449fc3:	or     BYTE PTR [esi-0x637fff74],0x8c
  449fca:	add    BYTE PTR [eax],al
  449fcc:	out    dx,al
  449fcd:	sbb    eax,0x1d9afff5
  449fd2:	cmc    
  449fd3:	jmp    DWORD PTR [ebp+ebx*1-0xb]
  449fd7:	inc    DWORD PTR [eax]
	...
  449fe9:	add    BYTE PTR [eax],al
  449feb:	add    BYTE PTR [esp+ecx*4+0x0],bl
  449fef:	add    BYTE PTR [ebx*1+0x1d60fff5],dl
  449ff6:	cmc    
  449ff7:	push   DWORD PTR [eax+0x6efff51c]
  449ffd:	sbb    eax,0x1e98fff5
  44a002:	cmc    
  44a003:	jmp    FWORD PTR [eax-0x51000ae2]
  44a009:	push   ds
  44a00a:	cmc    
  44a00b:	jmp    esp
  44a00d:	push   ds
  44a00e:	cmc    
  44a00f:	dec    eax
  44a011:	push   ds
  44a012:	cmc    
  44a013:	dec    esp
  44a015:	push   ds
  44a016:	cmc    
  44a017:	(bad)  
  44a018:	ficomp WORD PTR [esi]
  44a01a:	cmc    
  44a01b:	inc    DWORD PTR [edx+0x62fff51e]
  44a021:	push   ds
  44a022:	cmc    
  44a023:	dec    DWORD PTR [ebp+ebx*1+0x1d68fff5]
  44a02a:	cmc    
  44a02b:	jmp    DWORD PTR [ebp+ebx*1+0x1d9efff5]
  44a032:	cmc    
  44a033:	jmp    edx
  44a035:	sbb    eax,0x1db0fff5
  44a03a:	cmc    
  44a03b:	(bad)  
  44a03c:	fimul  DWORD PTR [ebx+0x1de28000]
  44a042:	cmc    
  44a043:	inc    esp
  44a045:	sbb    eax,0x1c1cfff5
  44a04a:	cmc    
  44a04b:	push   DWORD PTR [ebp+0xfc940c]
	...
  44a061:	add    BYTE PTR [eax],al
  44a063:	add    BYTE PTR [edx-0x5d036bff],ch
  44a069:	jmp    0x449ffe
  44a06b:	cld    
  44a06c:	call   0x429:0x92fc93cf
  44a073:	add    BYTE PTR [ebp-0x7d036e82],dh
  44a079:	sub    DWORD PTR [eax+eax*1],eax
  44a07c:	mov    ch,0x5e
  44a07e:	test   eax,0xa95172fc
  44a083:	cld    
  44a084:	push   0xffffffed
  44a086:	test   al,0xfc
  44a088:	bound  eax,QWORD PTR [edi]
  44a08a:	test   eax,0xa93d5afc
  44a08f:	cld    
  44a090:	push   edx
  44a091:	xchg   edi,eax
  44a092:	test   eax,0xa94f4afc
  44a097:	cld    
  44a098:	inc    edx
  44a099:	cmp    DWORD PTR [ecx-0x56d4c504],ebp
  44a09f:	cld    
  44a0a0:	xor    bl,BYTE PTR [edi-0x68d50356]
  44a0a6:	stos   BYTE PTR es:[edi],al
  44a0a7:	cld    
  44a0a8:	and    cl,ch
  44a0aa:	test   eax,0xa9cd1afc
  44a0af:	cld    
  44a0b0:	adc    al,BYTE PTR [ebp+0x730afca9]
  44a0b6:	test   eax,0xa8ff02fc
  44a0bb:	cld    
  44a0bc:	cli    
  44a0bd:	dec    edx
  44a0be:	test   eax,0xa958f2fc
  44a0c3:	cld    
  44a0c4:	jmp    0x0:0xfca828
	...
  44a0db:	add    dl,ah
  44a0dd:	inc    esp
  44a0de:	test   al,0xfc
  44a0e0:	ficomp DWORD PTR [esi-0x58]
  44a0e3:	cld    
  44a0e4:	sar    BYTE PTR [eax],cl
  44a0e6:	test   al,0xfc
  44a0e8:	retf   0xb068
  44a0eb:	cld    
  44a0ec:	ret    0x738f
  44a0ef:	test   al,0xb9
  44a0f1:	ds ss mov al,0xb1
  44a0f5:	add    BYTE PTR ds:[eax-0x5095c157],dh
  44a0fc:	mov    eax,ds:0x99af5c3e
  44a101:	ds inc eax
  44a103:	scas   eax,DWORD PTR es:[edi]
  44a104:	xchg   ecx,eax
  44a105:	ds ss scas eax,DWORD PTR es:[edi]
  44a108:	mov    DWORD PTR [esi],edi
  44a10a:	mov    ds:0x423e81af,al
  44a10f:	scas   eax,DWORD PTR es:[edi]
  44a110:	jns    0x44a150
  44a112:	inc    esi
  44a113:	scas   eax,DWORD PTR es:[edi]
  44a114:	jno    0x44a154
  44a116:	push   eax
  44a117:	scas   eax,DWORD PTR es:[edi]
  44a118:	imul   edi,DWORD PTR [esi],0x3e61aed8
  44a11e:	loopne 0x44a0ce
  44a120:	pop    ecx
  44a121:	ds lock scas al,BYTE PTR es:[edi]
  44a124:	push   ecx
  44a125:	mov    WORD PTR ds:[ebp-0x52b1c1b7],gs
  44a12c:	inc    ecx
  44a12d:	ds ins BYTE PTR es:[edi],dx
  44a12f:	lods   eax,DWORD PTR ds:[esi]
  44a130:	cmp    DWORD PTR [esi],edi
  44a132:	call   0x29ad:0x863e31ad
  44a139:	mov    ds:0xb63e21ad,al
  44a13f:	lods   eax,DWORD PTR ds:[esi]
	...
  44a154:	sbb    DWORD PTR [esi],edi
  44a156:	pushf  
  44a157:	scas   eax,DWORD PTR es:[edi]
  44a158:	adc    DWORD PTR [esi],edi
  44a15a:	push   esi
  44a15b:	test   al,0x9
  44a15d:	ds retf 0x1ad
  44a161:	ds out dx,al
  44a163:	test   eax,0xa9dc3df9
  44a168:	icebp  
  44a169:	cmp    eax,0x3de9a9cc
  44a16e:	aam    0xa3
  44a170:	loope  0x44a1af
  44a172:	call   0xe4827b22
  44a177:	stos   DWORD PTR es:[edi],eax
  44a178:	sar    DWORD PTR ds:0x3b190701,1
  44a17e:	clc    
  44a17f:	sub    edx,DWORD PTR [ecx]
  44a181:	cmp    edi,eax
  44a183:	cmp    DWORD PTR [ecx],ecx
  44a185:	cmp    edi,eax
  44a187:	pop    es
  44a188:	popa   
  44a189:	cmp    al,0xf8
  44a18b:	imul   ebx,DWORD PTR [ecx+0x3c],0xfffffff8
  44a18f:	ja     0x44a1e2
  44a191:	cmp    al,0xf8
  44a193:	dec    edi
  44a194:	dec    ecx
  44a195:	cmp    al,0xf8
  44a197:	xchg   edi,eax
  44a198:	arpl   WORD PTR [eax+edi*8],di
  44a19b:	mov    eax,ds:0x31f83c5b
  44a1a0:	push   ebx
  44a1a1:	cmp    al,0xf8
  44a1a3:	(bad)  
  44a1a4:	dec    ebx
  44a1a5:	cmp    al,0xf8
  44a1a7:	and    DWORD PTR [ebx],0x1b61f83c
  44a1ad:	cmp    al,0xf8
  44a1af:	rcl    DWORD PTR [eax],1
  44a1b1:	cmp    al,0xf8
  44a1b3:	ror    DWORD PTR [eax],1
  44a1b5:	cmp    al,0xf8
  44a1b7:	fwait
	...
  44a1cc:	and    BYTE PTR [eax+edi*8],bh
  44a1cf:	scas   eax,DWORD PTR es:[edi]
  44a1d0:	sbb    BYTE PTR [eax+edi*8],bh
  44a1d3:	cmc    
  44a1d4:	adc    BYTE PTR [eax+edi*8],bh
  44a1d7:	int    0x8
  44a1d9:	cmp    al,0xf8
  44a1db:	sti    
  44a1dc:	pusha  
  44a1dd:	cmp    al,0xf8
  44a1df:	jmp    0x44a239
  44a1e1:	cmp    al,0xf8
  44a1e3:	pop    es
  44a1e4:	push   eax
  44a1e5:	cmp    al,0xf8
  44a1e7:	and    DWORD PTR [eax+0x3c],ecx
  44a1ea:	clc    
  44a1eb:	xor    esp,DWORD PTR [eax+0x3c]
  44a1ee:	clc    
  44a1ef:	xor    eax,0x41f83c58
  44a1f4:	push   eax
  44a1f5:	cmp    al,0xf8
  44a1f7:	test   DWORD PTR [ecx+0x3c],ecx
  44a1fa:	clc    
  44a1fb:	mov    ecx,0xc1f83c1e
  44a200:	push   ds
  44a201:	cmp    al,0xf8
  44a203:	lahf   
  44a204:	or     eax,0xc00f83c
  44a209:	call   0xe793a202
  44a20e:	hlt    
  44a20f:	(bad)  
  44a210:	ds call 0xe7a7a20a
  44a216:	hlt    
  44a217:	call   DWORD PTR [esi-0x33000b1a]
  44a21d:	out    0xf4,al
  44a21f:	jmp    eax
  44a221:	out    0xf4,al
  44a223:	call   esi
  44a225:	out    0xf4,al
  44a227:	push   DWORD PTR [edx]
  44a229:	call   0xebb3a222
  44a22e:	hlt    
  44a22f:	inc    DWORD PTR [eax]
	...
  44a241:	add    BYTE PTR [eax],al
  44a243:	add    BYTE PTR [eax-0x15],dh
  44a246:	hlt    
  44a247:	call   DWORD PTR [edx-0x15]
  44a24a:	hlt    
  44a24b:	inc    DWORD PTR [eax-0x15]
  44a24e:	hlt    
  44a24f:	push   DWORD PTR [eax]
  44a251:	jmp    0x44a247
  44a253:	push   DWORD PTR [edx-0x15]
  44a256:	hlt    
  44a257:	push   DWORD PTR [edx-0x15]
  44a25a:	hlt    
  44a25b:	jmp    edx
  44a25d:	jmp    0x44a253
  44a25f:	dec    edx
  44a261:	call   0x90a1a25a
  44a266:	add    BYTE PTR [eax],al
  44a268:	mov    dl,0x18
  44a26a:	cmc    
  44a26b:	dec    DWORD PTR [eax+0x7afff518]
  44a271:	sbb    ch,dh
  44a273:	call   DWORD PTR [edx+0x46fff518]
  44a279:	sbb    ch,dh
  44a27b:	jmp    FWORD PTR [eax]
  44a27d:	sbb    ch,dh
  44a27f:	call   FWORD PTR [edx+0x18]
  44a282:	cmc    
  44a283:	push   esp
  44a285:	pop    ss
  44a286:	cmc    
  44a287:	(bad)  
  44a288:	ficom  WORD PTR [edi]
  44a28a:	cmc    
  44a28b:	call   DWORD PTR [eax]
  44a28d:	push   ds
  44a28e:	cmc    
  44a28f:	(bad)  
  44a290:	cli    
  44a291:	sbb    eax,0xf4b5fff5
  44a296:	xchg   ecx,eax
  44a297:	cld    
  44a298:	loop   0x44a2b7
  44a29a:	xchg   edx,eax
  44a29b:	cld    
  44a29c:	ficomp DWORD PTR ds:0xe1d2fc92
  44a2a2:	xchg   ecx,eax
  44a2a3:	cld    
  44a2a4:	retf   0x917f
  44a2a7:	cld    
	...
  44a2bc:	ret    0x91d3
  44a2bf:	cld    
  44a2c0:	mov    edx,0xb2fc9175
  44a2c5:	xor    DWORD PTR [ecx-0x6cdc5504],edx
  44a2cb:	cld    
  44a2cc:	mov    ds:0x9afc9137,al
  44a2d1:	dec    ebp
  44a2d2:	xchg   ecx,eax
  44a2d3:	cld    
  44a2d4:	xchg   edx,eax
  44a2d5:	sub    DWORD PTR [eax+eax*1],eax
  44a2d8:	mov    ch,0x91
  44a2da:	cld    
  44a2db:	push   DWORD PTR ds:0x35000457
  44a2e1:	stos   DWORD PTR es:[edi],eax
  44a2e2:	xchg   esp,edi
  44a2e4:	jb     0x44a33c
  44a2e6:	add    al,0x0
  44a2e8:	xor    eax,0x3500042d
  44a2ed:	lds    eax,FWORD PTR [edi+0x42a5afc]
  44a2f3:	add    BYTE PTR ds:0x4afc881f,dh
  44a2f9:	xor    eax,0x2742fc92
  44a2fe:	xchg   edx,eax
  44a2ff:	cld    
  44a300:	cmp    dl,BYTE PTR [edi+0x3432fc87]
  44a306:	add    al,0x0
  44a308:	xor    eax,0x22fc878b
  44a30d:	cmp    BYTE PTR [eax+eax*1],al
  44a310:	xor    eax,0x12fc8783
  44a315:	jge    0x44a29e
  44a317:	cld    
  44a318:	or     ch,BYTE PTR [ebx]
  44a31a:	add    al,0x0
  44a31c:	xor    eax,0x464
	...
  44a331:	add    BYTE PTR [eax],al
  44a333:	add    BYTE PTR ds:0xb503f790,dh
  44a339:	cmovle eax,DWORD PTR [esi*4-0x4afc05f1]
  44a341:	paddsb mm0,QWORD PTR [ebx]
  44a344:	mov    ch,0xf
  44a346:	xlat   BYTE PTR ds:[ebx]
  44a347:	add    esi,DWORD PTR [ebp-0x3670cff1]
  44a34d:	cmp    bh,BYTE PTR [edx]
  44a34f:	add    al,0xb5
  44a351:	por    mm0,QWORD PTR [ebx]
  44a354:	mov    ch,0xf
  44a356:	sti    
  44a357:	add    esi,DWORD PTR [ebp-0x4afc1af1]
  44a35d:	psubsw mm0,QWORD PTR [ebx]
  44a360:	mov    ch,0xf
  44a362:	out    dx,al
  44a363:	add    esi,DWORD PTR [ebp-0x4afc15f1]
  44a369:	(bad)  
  44a36a:	in     eax,dx
  44a36b:	call   0x3a81:0x9af03a89
  44a372:	bound  ebx,QWORD PTR [edx-0x6583c587]
  44a378:	jno    0x44a3b4
  44a37a:	jbe    0x44a316
  44a37c:	imul   edi,DWORD PTR [edx],0x3a619a86
  44a382:	js     0x44a31e
  44a384:	pop    ecx
  44a385:	cmp    al,BYTE PTR [edx+0x2c3a519a]
  44a38b:	call   0x3a41:0x9a1e3a49
  44a392:	adc    bl,BYTE PTR [edx-0x65f7c5c7]
	...
  44a3ac:	xor    DWORD PTR [edx],edi
  44a3ae:	push   cs
  44a3af:	call   0x3a21:0x9a103a29
  44a3b6:	jl     0x44a355
  44a3b8:	sbb    DWORD PTR [edx],edi
  44a3ba:	jmp    0x98f:0x918fb503
  44a3c1:	cmp    al,BYTE PTR [ecx]
  44a3c3:	cdq    
  44a3c4:	xor    bh,BYTE PTR [ebx]
  44a3c6:	clc    
  44a3c7:	scas   eax,DWORD PTR es:[edi]
  44a3c8:	sub    bh,BYTE PTR [ebx]
  44a3ca:	clc    
  44a3cb:	adc    eax,0x3f83b45
  44a3d0:	inc    ebp
  44a3d1:	cmp    edi,eax
  44a3d3:	jmp    0x44a407
  44a3d5:	cmp    edi,eax
  44a3d7:	fld    DWORD PTR [esi+0x3b]
  44a3da:	clc    
  44a3db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a3dc:	es cmp edi,eax
  44a3df:	lods   eax,DWORD PTR ds:[esi]
  44a3e0:	es cmp edi,eax
  44a3e3:	jmp    0xeb45339e
  44a3e8:	mov    ah,0xd0
  44a3ea:	pop    ebp
  44a3eb:	sbb    eax,0x1573d8fd
  44a3f0:	hlt    
  44a3f1:	test   eax,0x90070672
  44a3f6:	add    BYTE PTR [ecx],ah
  44a3f8:	mov    dh,0xcb
  44a3fa:	or     bl,BYTE PTR [bx+si]
  44a3fd:	lods   al,BYTE PTR ds:[esi]
  44a3fe:	ds sti 
  44a400:	adc    eax,0xb9ca00ad
  44a405:	int    0x69
  44a407:	std    
  44a408:	adc    eax,0xd5d469e4
  44a40d:	jecxz  0x44a476
  44a40f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  44a424:	shr    DWORD PTR [edx-0x530d37c4],cl
  44a42a:	dec    esp
  44a42b:	ror    ch,0xac
  44a42e:	add    BYTE PTR [edx-0x49],ch
  44a431:	into   
  44a432:	pop    ebp
  44a433:	mov    ch,0x9a
  44a435:	lods   al,BYTE PTR ds:[esi]
  44a436:	gs mov ecx,0xc464b080
  44a43c:	lock fsub DWORD PTR [ebp-0x74]
  44a440:	jecxz  0x44a3d1
  44a442:	add    BYTE PTR ds:0x9a67d3b1,al
  44a448:	loop   0x44a422
  44a44a:	ins    BYTE PTR es:[edi],dx
  44a44b:	test   dl,cl
  44a44d:	mov    al,0x65
  44a44f:	add    BYTE PTR [ecx+0x69],al
  44a452:	imul   eax,DWORD PTR [esi+0x25],0x355463b1
  44a459:	test   al,0x63
  44a45b:	add    BYTE PTR [ebp-0x70],cl
  44a45e:	fs jae 0x44a3f1
  44a461:	fst    QWORD PTR [ebp+0x6d]
  44a464:	mov    edx,ss
  44a466:	add    BYTE PTR [eax],al
  44a468:	xchg   esi,eax
  44a469:	mov    fs,WORD PTR [ebx+esi*2-0x80]
  44a46d:	fst    QWORD PTR [ebp+0x70]
  44a470:	jne    0x44a423
  44a472:	aaa    
  44a473:	add    BYTE PTR [esi-0x6e],bh
  44a476:	inc    edx
  44a477:	jb     0x44a4ea
  44a479:	scas   al,BYTE PTR es:[edi]
  44a47a:	inc    esp
  44a47b:	imul   ebp,DWORD PTR [esi-0x23],0x93d57257
  44a482:	cmp    DWORD PTR [ebx],eax
  44a484:	fdiv   DWORD PTR [eax+0x6457]
	...
  44a49a:	add    BYTE PTR [eax],al
  44a49c:	fsubr  DWORD PTR [edx-0x22528daa]
  44a4a2:	outs   dx,DWORD PTR ds:[esi]
  44a4a3:	push   edi
  44a4a4:	pushf  
  44a4a5:	mov    WORD PTR [edx+0x5],cs
  44a4a8:	mov    eax,0xb8726cdc
  44a4ad:	scas   al,BYTE PTR es:[edi]
  44a4ae:	push   0x57
  44a4b0:	mov    WORD PTR [ebx+eax*4+0x6caf2302],cs
  44a4b7:	push   esp
  44a4b8:	jno    0x44a461
  44a4ba:	jo     0x44a50c
  44a4bc:	ins    DWORD PTR es:[edi],dx
  44a4bd:	enter  0x5768,0x4c
  44a4c1:	mov    WORD PTR [ebx+0x2],es
  44a4c4:	and    ebp,DWORD PTR [edi-0x4ef1af94]
  44a4ca:	push   ebp
  44a4cb:	inc    ecx
  44a4cc:	jo     0x44a4a6
  44a4ce:	data16 gs (bad) 
  44a4d1:	fadd   QWORD PTR [eax]
  44a4d3:	add    BYTE PTR [eax],al
  44a4d5:	xchg   ebx,eax
  44a4d6:	inc    edx
  44a4d7:	imul   edi,DWORD PTR [eax],0xb5694caf
  44a4dd:	adc    esp,DWORD PTR [ecx+0x54]
  44a4e0:	mov    bl,BYTE PTR [edx]
  44a4e2:	pop    edi
  44a4e3:	pop    ebp
  44a4e4:	xchg   esp,eax
  44a4e5:	and    dh,BYTE PTR [esi]
  44a4e7:	addr16 cdq 
  44a4e9:	adc    ebp,DWORD PTR [eax]
  44a4eb:	addr16 nop
  44a4ed:	or     eax,DWORD PTR [eax+ecx*2]
  44a4f0:	mov    al,0xba
  44a4f2:	push   edx
  44a4f3:	je     0x44a55c
  44a4f5:	lds    ecx,FWORD PTR [edi+esi*2-0x7e]
  44a4f9:	es add al,0x5f
  44a4fc:	mov    ecx,0x745775
	...
  44a511:	add    BYTE PTR [eax],al
  44a513:	add    BYTE PTR [ebx-0x31],dh
  44a516:	push   0x507a7463
  44a51b:	outs   dx,BYTE PTR ds:[esi]
  44a51c:	pop    esp
  44a51d:	les    eax,FWORD PTR [edi+0x74]
  44a520:	pop    eax
  44a521:	jne    0x44a548
  44a523:	add    BYTE PTR [ebp+0x266bf771],dh
  44a529:	xchg   ebp,eax
  44a52a:	push   edx
  44a52b:	pop    ebp
  44a52c:	and    eax,0xb5004370
  44a531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a532:	add    eax,DWORD PTR [ecx+0x10]
  44a535:	popf   
  44a536:	inc    ecx
  44a537:	imul   esp,DWORD PTR [eax],0x116a639c
  44a53d:	imul   ebp,DWORD PTR gs:[edx+0x18],0xffffff96
  44a542:	cld    
  44a543:	push   eax
  44a544:	mov    dh,0x93
  44a546:	arpl   WORD PTR [eax+0xb],si
  44a549:	pusha  
  44a54a:	push   edi
  44a54b:	jno    0x44a547
  44a54d:	dec    esi
  44a54e:	rol    DWORD PTR ss:[bp+di+0x4],1
  44a553:	shl    BYTE PTR [ecx-0x2b94a205],cl
  44a559:	clc    
  44a55a:	and    eax,0x3cfdd067
  44a55f:	(bad)  
  44a560:	sti    
  44a561:	dec    edi
  44a562:	pusha  
  44a563:	arpl   WORD PTR [ebp-0x58c302f0],si
  44a569:	pop    DWORD PTR [edx+eiz*2+0x51b9aca1]
  44a570:	mov    WORD PTR [edx-0x2177af7c],?
  44a576:	jmp    0x44a57e
	...
  44a58b:	add    BYTE PTR [edx],cl
  44a58d:	mov    WORD PTR [esi-0x60446d9e],ss
  44a593:	fs xchg ebx,eax
  44a595:	loop   0x44a517
  44a597:	gs xchg esp,eax
  44a599:	mov    ds:0xa993447c,eax
  44a59e:	inc    esp
  44a59f:	popa   
  44a5a0:	popa   
  44a5a1:	pop    DWORD PTR [eax+0x0]
  44a5a4:	jo     0x44a552
  44a5a6:	push   ebp
  44a5a7:	aas    
  44a5a8:	lods   al,BYTE PTR ds:[si]
  44a5aa:	aaa    
  44a5ab:	push   eax
  44a5ac:	mov    ch,0x8f
  44a5ae:	ins    DWORD PTR es:[edi],dx
  44a5af:	add    ecx,DWORD PTR [eax+0x49633cc1]
  44a5b5:	lods   al,BYTE PTR ds:[esi]
  44a5b6:	daa    
  44a5b7:	imul   ecx,DWORD PTR [ecx-0x54],0x14
  44a5bb:	arpl   WORD PTR ds:0x146610c0,sp
  44a5c1:	fucomip st,st(1)
  44a5c3:	add    ecx,DWORD PTR [ebp+0x254f258f]
  44a5c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a5ca:	add    BYTE PTR [ecx-0xe],ah
  44a5cd:	mov    ebx,0xa5ea4c04
  44a5d2:	std    
  44a5d3:	addr16 push ss
  44a5d5:	nop
  44a5d6:	sbb    eax,DWORD PTR [eax+edi*4]
  44a5d9:	mov    ds:0xc7d650f6,eax
  44a5de:	enter  0xd165,0xa3
  44a5e2:	mov    esp,0xbb8bb003
  44a5e7:	pop    esi
  44a5e8:	enter  0xb4bc,0x5e
  44a5ec:	jmp    0xa36198
	...
  44a601:	add    BYTE PTR [eax],al
  44a603:	add    dl,ch
  44a605:	stos   DWORD PTR es:[edi],eax
  44a606:	jmp    0xd5a50e
  44a60b:	scas   al,BYTE PTR es:[edi]
  44a60c:	shr    BYTE PTR [eax-0x3c65379e],cl
  44a612:	mov    bl,BYTE PTR [di+0x8f]
  44a617:	jp     0x44a5cd
  44a619:	rcr    BYTE PTR [ebp-0x63],1
  44a61c:	retf   0x63ae
  44a61f:	xor    BYTE PTR [ebp-0x58],0x6d
  44a623:	xchg   edi,eax
  44a624:	jp     0x44a5b5
  44a626:	add    BYTE PTR [ebx],cl
  44a628:	mov    ah,0xce
  44a62a:	data16 sub BYTE PTR [edx-0x52],0x61
  44a62f:	jge    0x44a690
  44a631:	mov    ebp,0xae832a5d
  44a636:	ins    BYTE PTR es:[edi],dx
  44a637:	push   eax
  44a638:	pop    edx
  44a639:	(bad)  
  44a63a:	cmp    cl,BYTE PTR fs:[esp+edx*8+0x6c]
  44a63f:	inc    eax
  44a640:	push   esi
  44a641:	test   eax,0xc3b20000
  44a646:	pop    ebp
  44a647:	dec    eax
  44a648:	pop    edi
  44a649:	mov    dl,0x43
  44a64b:	cmp    ebx,DWORD PTR [eax-0x45]
  44a64e:	imul   ecx,DWORD PTR [edx+0x18],0x120c53a4
  44a655:	mov    esp,0x90170e69
  44a65a:	add    BYTE PTR [ebx+esi*4+0x18fe64ce],ch
  44a661:	aad    0x64
  44a663:	sbb    al,0x17
  44a665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a666:	or     al,BYTE PTR [bx+si]
	...
  44a679:	add    BYTE PTR [eax],al
  44a67b:	add    dl,ah
  44a67d:	pop    DWORD PTR [eax]
  44a67f:	xchg   DWORD PTR [ecx-0x220a9930],esi
  44a685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a686:	inc    ebx
  44a687:	fisttp DWORD PTR [ecx]
  44a689:	mov    esp,0xa3d9ca69
  44a68e:	push   ebx
  44a68f:	int3   
  44a690:	sar    DWORD PTR [ebx-0x702b4197],cl
  44a696:	add    BYTE PTR [eax],al
  44a698:	lods   eax,DWORD PTR ds:[esi]
  44a699:	mov    edi,DWORD PTR [eiz*2+0x656ca870]
  44a6a0:	pand   mm3,QWORD PTR [edi+0x74]
  44a6a4:	cmc    
  44a6a5:	lods   eax,DWORD PTR ds:[esi]
  44a6a6:	push   edi
  44a6a7:	ins    BYTE PTR es:[edi],dx
  44a6a8:	outs   dx,DWORD PTR ds:[esi]
  44a6a9:	test   al,0x55
  44a6ab:	je     0x44a6f2
  44a6ad:	mov    dl,0x6a
  44a6af:	add    BYTE PTR [ebx+ecx*4],ah
  44a6b2:	inc    ecx
  44a6b3:	gs sub al,dl
  44a6b6:	imul   esp,DWORD PTR [ecx+ecx*4-0x2c],0xaf2d4863
  44a6be:	pop    esp
  44a6bf:	ins    BYTE PTR es:[edi],dx
  44a6c0:	sub    DWORD PTR [edx+0x0],edi
  44a6c3:	add    BYTE PTR [ebx-0x74],bh
  44a6c6:	inc    edi
  44a6c7:	jne    0x44a742
  44a6c9:	(bad)  [edi+0x50]
  44a6cc:	jns    0x44a6ab
  44a6ce:	bound  ebp,QWORD PTR [edi+0x7e]
  44a6d1:	scas   al,BYTE PTR es:[edi]
  44a6d2:	push   edi
  44a6d3:	outs   dx,BYTE PTR ds:[esi]
  44a6d4:	jg     0x44a67c
  44a6d6:	xor    eax,0x6cb1896f
  44a6db:	gs jle 0x44a669
  44a6de:	and    eax,DWORD PTR [edx]
	...
  44a6f4:	mov    esp,DWORD PTR [esi-0x2802b194]
  44a6fa:	pop    edi
  44a6fb:	jbe    0x44a6b6
  44a6fd:	jl     0x44a76e
  44a6ff:	jae    0x44a6c9
  44a701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a702:	imul   ecx,DWORD PTR [ecx-0x4e],0xffffffa9
  44a706:	imul   eax,DWORD PTR [eax],0x65418af8
  44a70c:	mov    BYTE PTR [esi+0x63],dh
  44a70f:	jb     0x44a790
  44a711:	shr    DWORD PTR [ecx+0x6e],cl
  44a714:	leave  
  44a715:	ret    
  44a716:	push   ecx
  44a717:	add    ch,dh
  44a719:	nop
  44a71a:	xor    eax,0x6cab7972
  44a71f:	gs push ds
  44a721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a722:	imul   ebp,DWORD PTR [edi-0x4b],0x52
  44a726:	imul   edx,DWORD PTR [ebp+ebx*8+0x58],0x26d15f69
  44a72e:	add    al,0x80
  44a730:	mov    dh,0xe5
  44a732:	push   ebx
  44a733:	arpl   bx,cx
  44a735:	push   ss
  44a736:	dec    esi
  44a737:	imul   edx,DWORD PTR [esi-0x4a92b0b5],0x8c51ff9b
  44a741:	sbb    BYTE PTR [eax+0x73],dl
  44a744:	xchg   esp,eax
  44a745:	or     cl,BYTE PTR [edx+0x6e]
  44a748:	cwde   
  44a749:	or     ecx,DWORD PTR [ecx+0x78]
  44a74c:	mov    ch,0xd4
  44a74e:	dec    BYTE PTR [edi-0x79]
  44a751:	add    eax,0xb986635f
  44a756:	push   cs
  44a757:	add    BYTE PTR cs:[eax],al
	...
  44a76a:	add    BYTE PTR [eax],al
  44a76c:	jnp    0x44a77d
  44a76e:	dec    esi
  44a76f:	ins    DWORD PTR es:[edi],dx
  44a770:	popa   
  44a771:	jne    0x44a76f
  44a773:	xchg   edi,eax
  44a774:	mov    dh,0x76
  44a776:	dec    esi
  44a777:	imul   edx,DWORD PTR [esi-0x3d],0x98866d4d
  44a77e:	inc    edx
  44a77f:	arpl   WORD PTR [ebp+0x72],cx
  44a782:	cmp    DWORD PTR [eax],eax
  44a784:	mov    ch,0xb4
  44a786:	cld    
  44a787:	cmp    al,0x47
  44a789:	ret    
  44a78a:	arpl   WORD PTR [eax+ebx*1-0x63],si
  44a78e:	popa   
  44a78f:	imul   ebx,DWORD PTR [ecx],0x256c5fa1
  44a795:	push   esi
  44a796:	push   cs
  44a797:	dec    ebp
  44a798:	or     ecx,DWORD PTR [eax+0x321d6d4c]
  44a79e:	push   eax
  44a79f:	add    BYTE PTR [ebp+0x66bff7b],dh
  44a7a5:	cmp    eax,0x8b106c4e
  44a7aa:	inc    ebx
  44a7ab:	add    BYTE PTR [ebp-0x1fb50277],dh
  44a7b1:	(bad)  
  44a7b2:	int    0x57
  44a7b4:	fcmove st,st(5)
  44a7b6:	loopne 0x44a80f
  44a7b8:	(bad)  
  44a7b9:	fstp   TBYTE PTR [esi-0x435425c8]
  44a7bf:	inc    esp
  44a7c0:	fnsave [eax-0x7187fc45]
  44a7c6:	mov    cl,0x66
  44a7c8:	fidivr DWORD PTR [edi-0x5d5ea058]
  44a7ce:	retf   0x3
	...
  44a7e1:	add    BYTE PTR [eax],al
  44a7e3:	add    BYTE PTR [ebx],bl
  44a7e5:	mov    WORD PTR [edi-0x73446ca6],?
  44a7eb:	bound  ecx,QWORD PTR [ecx-0x5c996b20]
  44a7f1:	mov    eax,0x8fb54b9c
  44a7f6:	sub    al,BYTE PTR ds:0x6788ac73
  44a7fc:	gs mov ebp,0xbe56647e
  44a802:	jp     0x44a842
  44a804:	push   esi
  44a805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a806:	dec    esi
  44a807:	push   esi
  44a808:	push   0xffffff8f
  44a80a:	fld    DWORD PTR [edi]
  44a80c:	xchg   DWORD PTR [eax-0x4fb9a7a5],ebp
  44a812:	xor    eax,0x35a25b34
  44a817:	addr16 pusha 
  44a819:	mov    ebx,0x8fb54c1c
  44a81e:	ret    
  44a81f:	pop    es
  44a820:	pop    es
  44a821:	test   eax,0xb126583b
  44a826:	or     eax,0x6a41143
  44a82b:	div    BYTE PTR gs:[edi-0x7320fc17]
  44a832:	cs push esi
  44a834:	adc    bh,BYTE PTR [esp+eax*1+0xaa31334]
  44a83b:	or     BYTE PTR [bx+0x2400],bh
  44a840:	fisub  DWORD PTR [esi-0x70000499]
  44a846:	add    BYTE PTR [eax+eax*1+0x0],ch
	...
  44a859:	add    BYTE PTR [eax],al
  44a85b:	add    BYTE PTR [ebx+0xd573a3],bh
  44a861:	aad    0x65
  44a863:	(bad)  
  44a865:	loopne 0x44a867
  44a867:	and    al,0xb7
  44a869:	rcr    BYTE PTR [ebp-0x43],1
  44a86c:	stc    
  44a86d:	mov    esi,0xa5d3bb72
  44a872:	ins    BYTE PTR es:[edi],dx
  44a873:	popf   
  44a874:	mov    fs,WORD PTR [ecx-0x356d37a3]
  44a87a:	pop    esp
  44a87b:	jmp    0xa6476936
  44a880:	xchg   ebx,eax
  44a881:	mov    ebx,0xbb699053
  44a886:	pop    ebp
  44a887:	jl     0x44a84b
  44a889:	stos   BYTE PTR es:[edi],al
  44a88a:	mov    WORD PTR gs:[esi-0x6c66033c],?
  44a891:	mov    ebx,0xc85a873d
  44a896:	pop    esi
  44a897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a898:	(bad)  
  44a899:	mov    ds:0xb0b6e95d,eax
  44a89e:	cld    
  44a89f:	cmp    DWORD PTR [ebx+edi*4+0x3e],ecx
  44a8a3:	inc    eax
  44a8a4:	push   ebp
  44a8a5:	scas   al,BYTE PTR es:[edi]
  44a8a6:	push   eax
  44a8a7:	ds push 0x674c6ca5
  44a8ad:	into   
  44a8ae:	js     0x44a899
  44a8b0:	mov    dh,0xa9
  44a8b2:	cld    
  44a8b3:	sbb    DWORD PTR [esp+edi*4],ebx
  44a8b6:	ds inc eax
  44a8b8:	adc    eax,0x14104cad
  44a8bd:	lods   eax,DWORD PTR ds:[esi]
  44a8be:	add    ah,al
	...
  44a8d4:	lods   eax,DWORD PTR ds:[esi]
  44a8d5:	fidiv  WORD PTR [edx+0x0]
  44a8d8:	in     eax,dx
  44a8d9:	lods   al,BYTE PTR ds:[esi]
  44a8da:	add    BYTE PTR ds:0x260000ad,dl
  44a8e1:	mov    eax,DWORD PTR [ecx+0x65]
  44a8e4:	or     bl,0x5f
  44a8e7:	ins    BYTE PTR es:[edi],dx
  44a8e8:	ror    edx,0x6c
  44a8eb:	je     0x44a95b
  44a8ed:	aam    0x56
  44a8ef:	jne    0x44a871
  44a8f1:	test   al,0x65
  44a8f3:	push   edi
  44a8f4:	dec    esp
  44a8f5:	(bad)  
  44a8f6:	rol    BYTE PTR [ebx],0xe
  44a8f9:	test   al,0x57
  44a8fb:	fs adc dl,ah
  44a8fe:	fs gs dec esp
  44a901:	lea    ecx,[ecx+0x63df0f00]
  44a907:	popa   
  44a908:	jo     0x44a8b2
  44a90a:	inc    edx
  44a90b:	imul   ebp,DWORD PTR [eax-0x58],0x8c630051
  44a912:	inc    edx
  44a913:	ins    BYTE PTR es:[edi],dx
  44a914:	inc    ecx
  44a915:	fisubr WORD PTR [eax+0x46]
  44a918:	xor    eax,0x214263d1
  44a91d:	stos   DWORD PTR es:[edi],eax
  44a91e:	bound  esp,QWORD PTR [ebp+0x7e]
  44a921:	fld    QWORD PTR [eax]
  44a923:	add    ch,bh
  44a925:	mov    eax,DWORD PTR [ecx+0x65]
  44a928:	jo     0x44a8f4
  44a92a:	pop    edi
  44a92b:	ins    BYTE PTR es:[edi],dx
  44a92c:	xor    DWORD PTR [esi+0x5f],edi
  44a92f:	jp     0x44a9a2
  44a931:	(bad)  
  44a932:	js     0x44a934
  44a934:	jg     0x44a8bd
  44a936:	inc    ebp
  44a937:	add    BYTE PTR gs:[eax],al
	...
  44a94a:	add    BYTE PTR [eax],al
  44a94c:	jo     0x44a91d
  44a94e:	push   edi
  44a94f:	jae    0x44a9b1
  44a951:	(bad)  
  44a952:	data16 jb 0x44a9c0
  44a955:	fld    QWORD PTR [eax]
  44a957:	add    dh,bh
  44a959:	mov    eax,DWORD PTR [ecx+0x65]
  44a95c:	lock leave 
  44a95e:	pop    edi
  44a95f:	ins    BYTE PTR es:[edi],dx
  44a960:	icebp  
  44a961:	ja     0x44a9c2
  44a963:	ins    DWORD PTR es:[edi],dx
  44a964:	mov    cl,0x8b
  44a966:	rol    BYTE PTR [eax],cl
  44a968:	shl    BYTE PTR [esi-0x6d4a9a9c],1
  44a96e:	imul   eax,DWORD PTR [edx+0x1c],0xb5516933
  44a975:	sbb    bh,ch
  44a977:	inc    eax
  44a978:	adc    BYTE PTR [ebx],bh
  44a97a:	ds addr16 loope 0x44a901
  44a97e:	xor    eax,0x5231d36a
  44a983:	imul   edx,esp,0x52
  44a986:	push   ebp
  44a987:	imul   ecx,ebx,0xd44844e4
  44a98d:	dec    eax
  44a98e:	pusha  
  44a98f:	ins    BYTE PTR es:[edi],dx
  44a990:	shl    BYTE PTR [esi],1
  44a992:	add    al,0xce
  44a994:	mov    bh,0xfe
  44a996:	push   0x6914c55f
  44a99b:	aas    
  44a99c:	mov    eax,ds:0xb55d574a
  44a9a1:	xchg   ecx,eax
  44a9a2:	add    DWORD PTR [eax-0x68],ecx
  44a9a5:	pop    es
  44a9a6:	push   esp
  44a9a7:	inc    edx
  44a9a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a9a9:	or     ebp,DWORD PTR [ecx+0x0]
  44a9ac:	mov    ch,0xec
  44a9ae:	add    DWORD PTR [ecx+0x0],eax
	...
  44a9c1:	add    BYTE PTR [eax],al
  44a9c3:	add    BYTE PTR [eax-0x6d91cbe6],dl
  44a9c9:	add    eax,0xfe866d69
  44a9ce:	push   0x426655f
  44a9d3:	retf   
  44a9d4:	mov    bh,0xee
  44a9d6:	push   0x5265655f
  44a9db:	arpl   WORD PTR [edx+ebx*8+0x5f],dx
  44a9df:	add    BYTE PTR [ebp+0x4d43033f],dh
  44a9e5:	iret   
  44a9e6:	pop    eax
  44a9e7:	push   eax
  44a9e8:	inc    edi
  44a9e9:	fldenv [ecx+0x63]
  44a9ec:	inc    esi
  44a9ed:	jne    0x44a9eb
  44a9ef:	push   edi
  44a9f0:	mov    ecx,0xf0745f89
  44a9f5:	push   0x52
  44a9f7:	imul   esp,DWORD PTR [edi],0x115d2c90
  44a9fd:	mov    ch,0xe9
  44a9ff:	add    edi,DWORD PTR [ecx+edx*4]
  44aa02:	es addr16 add ebx,edx
  44aa06:	neg    BYTE PTR [esi+0x5]
  44aa09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44aa0a:	cmc    
  44aa0b:	or     bx,si
  44aa0e:	or     BYTE PTR [edi-0x2a],bl
  44aa11:	(bad)  
  44aa12:	jmp    0x1ad8c51a
  44aa17:	pusha  
  44aa18:	(bad)  
  44aa19:	mov    ah,0xd9
  44aa1b:	add    eax,ecx
  44aa1d:	xchg   ecx,eax
  44aa1e:	sahf   
  44aa1f:	leavew 
  44aa21:	fdivr  QWORD PTR [esi-0x43443999]
  44aa27:	inc    ebp
	...
  44aa3c:	fidivr DWORD PTR [ebx-0x4325c23c]
  44aa42:	mov    esp,0x648fb534
  44aa47:	add    al,0xe8
  44aa49:	mov    eax,ds:0xb4a962bc
  44aa4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44aa4f:	push   ebp
  44aa50:	xchg   esi,eax
  44aa51:	mov    ebp,0x8fb5348d
  44aa56:	push   ss
  44aa57:	or     BYTE PTR [eax+esi*4-0x80],ah
  44aa5b:	push   edi
  44aa5c:	ja     0x44aa1c
  44aa5e:	jnp    0x44aa9e
  44aa60:	xchg   BYTE PTR [ebx-0x449aa593],bh
  44aa66:	test   BYTE PTR [ebx+ecx*4],bh
  44aa69:	mov    ecx,0xa269607c
  44aa6e:	jmp    0x45d94676
  44aa73:	push   ecx
  44aa74:	dec    ecx
  44aa75:	mov    eax,ds:0xc641634a
  44aa7a:	jmp    0x2ed6f082
  44aa7f:	push   esp
  44aa80:	push   esi
  44aa81:	mov    ebp,0xbe16561c
  44aa86:	add    BYTE PTR ds:0xa8008fe0,bh
  44aa8c:	mov    bh,0xd0
  44aa8e:	pop    ebp
  44aa8f:	sbb    eax,0x1b72a2f4
  44aa94:	sbb    bh,BYTE PTR [edx-0x4718c694]
  44aa9a:	arpl   WORD PTR [esp+eiz*8],ax
  44aa9d:	mov    esp,0xd49
	...
  44aab2:	add    BYTE PTR [eax],al
  44aab4:	mov    cl,0x6d
  44aab6:	add    ah,BYTE PTR [esi]
  44aab8:	fisub  DWORD PTR [ebx-0x5df004b0]
  44aabe:	popa   
  44aabf:	cmc    
  44aac0:	fstp   TBYTE PTR [edi-0x492f298e]
  44aac6:	les    eax,FWORD PTR fs:[ebp-0x173f8d5d]
  44aacd:	mov    al,0x4f
  44aacf:	jmp    0xae47168a
  44aad4:	shl    DWORD PTR [ebx-0x5e7044b0],cl
  44aada:	popa   
  44aadb:	mov    ebp,0xbe72bf93
  44aae0:	cwde   
  44aae1:	mov    dh,0x64
  44aae3:	mov    edi,ds
  44aae5:	mov    ecx,0x25b6b66c
  44aaea:	add    al,0xbb
  44aaec:	xchg   ebx,eax
  44aaed:	mov    ebx,0xb265885d
  44aaf2:	inc    ebp
  44aaf3:	jl     0x44ab57
  44aaf5:	mov    dl,0x78
  44aaf7:	jmp    0xae47bcb2
  44aafc:	push   ebx
  44aafd:	mov    ds:0xb284814c,eax
  44ab02:	popa   
  44ab03:	dec    ebp
  44ab04:	jb     0x44aabe
  44ab06:	push   bp
  44ab08:	push   esp
  44ab09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ab0a:	ins    BYTE PTR es:[edi],dx
  44ab0b:	jmp    0x3a41c9c6
  44ab10:	push   esp
  44ab11:	mov    ds:0xc564004c,eax
  44ab16:	arpl   WORD PTR [ecx+0x0],sp
	...
  44ab29:	add    BYTE PTR [eax],al
  44ab2b:	add    al,bh
  44ab2d:	aam    0x69
  44ab2f:	outs   dx,BYTE PTR ds:[esi]
  44ab30:	call   0x8cb923e3
  44ab35:	xchg   ecx,eax
  44ab36:	inc    esp
  44ab37:	add    cl,bl
  44ab39:	scas   al,BYTE PTR es:[edi]
  44ab3a:	ins    BYTE PTR es:[edi],dx
  44ab3b:	push   eax
  44ab3c:	scas   al,BYTE PTR es:[edi]
  44ab3d:	enter  0x6555,0xaf
  44ab41:	les    edi,FWORD PTR [edi]
  44ab43:	mov    WORD PTR fs:[ecx-0x5134fe07],ss
  44ab4a:	ins    BYTE PTR es:[edi],dx
  44ab4b:	dec    eax
  44ab4c:	mov    ebp,0xb96c5cc9
  44ab51:	push   0x6a
  44ab53:	data16 arpl bx,ax
  44ab56:	imul   esp,DWORD PTR [ecx+0x78],0xffffffcc
  44ab5a:	imul   ebp,DWORD PTR [esi+0x5c],0x10033491
  44ab61:	retf   0x6457
  44ab64:	and    ah,cl
  44ab66:	push   esi
  44ab67:	jb     0x44abd6
  44ab69:	ret    
  44ab6a:	outs   dx,DWORD PTR ds:[esi]
  44ab6b:	inc    ecx
  44ab6c:	sbb    al,0x91
  44ab6e:	das    
  44ab6f:	add    DWORD PTR [edx-0x34],ebx
  44ab72:	push   0x64
  44ab74:	pop    edx
  44ab75:	int3   
  44ab76:	data16 jae 0x44abb1
  44ab79:	iret   
  44ab7a:	pop    edi
  44ab7b:	ins    BYTE PTR es:[edi],dx
  44ab7c:	cmp    DWORD PTR [edx+0x0],esp
  44ab7f:	add    dl,dh
  44ab81:	xchg   ebx,eax
  44ab82:	inc    edx
  44ab83:	imul   eax,DWORD PTR [edx+0x236c35cc],0x190063c6
  44ab8d:	xchg   esp,eax
  44ab8e:	inc    edx
  44ab8f:	imul   eax,DWORD PTR [eax],0x0
	...
  44aba1:	add    BYTE PTR [eax],al
  44aba3:	add    BYTE PTR [edx],dh
  44aba5:	int    0x4a
  44aba7:	gs fadd QWORD PTR fs:[edx+0x69]
  44abac:	sub    BYTE PTR [esi-0x6fa2ffaf],0x35
  44abb3:	jb     0x44ab6a
  44abb5:	fistp  DWORD PTR [ebp+0x74]
  44abb8:	pop    eax
  44abb9:	jb     0x44ac10
  44abbb:	outs   dx,BYTE PTR ds:[esi]
  44abbc:	push   eax
  44abbd:	fst    DWORD PTR [eax+0x69]
  44abc0:	daa    
  44abc1:	shl    BYTE PTR [ebx],1
  44abc3:	add    BYTE PTR [ebp+0x950f7ea],dh
  44abc9:	mov    al,BYTE PTR [ebx+0x63]
  44abcc:	and    DWORD PTR [eax+0x5f],edi
  44abcf:	je     0x44abed
  44abd1:	test   DWORD PTR [ecx+0x3d],esp
  44abd4:	sbb    dl,BYTE PTR [ebp-0x6bee96b1]
  44abda:	das    
  44abdb:	arpl   WORD PTR [esi],ax
  44abdd:	sub    dl,BYTE PTR [ebp+0x69]
  44abe0:	jecxz  0x44ac41
  44abe2:	pusha  
  44abe3:	add    BYTE PTR [ebp-0x2db5006a],dh
  44abe9:	and    al,0x61
  44abeb:	inc    edx
  44abec:	int3   
  44abed:	inc    edx
  44abee:	popa   
  44abef:	inc    ebx
  44abf0:	int    0xe5
  44abf2:	add    ecx,DWORD PTR [ecx]
  44abf4:	mov    cl,0xe8
  44abf6:	pusha  
  44abf7:	ins    DWORD PTR es:[edi],dx
  44abf8:	fadd   DWORD PTR [edx+0x41]
  44abfb:	jb     0x44abcd
  44abfd:	inc    esp
  44abfe:	dec    eax
  44abff:	add    BYTE PTR [ebp-0x63ae0823],dh
  44ac05:	call   0x451f51
	...
  44ac1a:	add    BYTE PTR [eax],al
  44ac1c:	xchg   esp,eax
  44ac1d:	jmp    0x5d61:0xa8a6e33
  44ac24:	mov    DWORD PTR [esi],esi
  44ac26:	add    al,0xcd
  44ac28:	mov    ah,0xfd
  44ac2a:	pusha  
  44ac2b:	je     0x44aca6
  44ac2d:	or     BYTE PTR [ebp+0x72],dl
  44ac30:	nop
  44ac31:	or     al,BYTE PTR [ebp+0x70]
  44ac34:	pop    eax
  44ac35:	add    eax,0xfdb70704
  44ac3a:	pusha  
  44ac3b:	je     0x44acae
  44ac3d:	lods   eax,DWORD PTR ds:[esi]
  44ac3e:	bound  esp,QWORD PTR [edi+0x56]
  44ac41:	(bad)
  44ac45:	mov    eax,ds:0xa0565250
  44ac4a:	jmp    0x3ad7aa52
  44ac4f:	dec    ebx
  44ac50:	dec    eax
  44ac51:	mov    ds:0xb9095744,eax
  44ac56:	inc    esp
  44ac57:	pop    edi
  44ac58:	add    DWORD PTR [ebx-0x4aeea4d9],edi
  44ac5e:	or     eax,0xe9b50e5b
  44ac63:	add    ebp,DWORD PTR ds:0x15f1e8e
  44ac69:	les    eax,FWORD PTR [eax]
  44ac6b:	push   edi
  44ac6c:	push   ss
  44ac6d:	(bad)  
  44ac6e:	neg    BYTE PTR [ecx+0x16]
  44ac71:	(bad)  [edi]
  44ac73:	(bad)  
  44ac74:	fcomp  QWORD PTR [ebp-0x471e9cfc]
  44ac7a:	(bad)  
  44ac7b:	pop    ecx
  44ac7c:	mov    ch,0x8f
  44ac7e:	jmp    0x0:0x5
	...
  44ac91:	add    BYTE PTR [eax],al
  44ac93:	add    ah,dh
  44ac95:	mov    ah,0xd5
  44ac97:	aaa    
  44ac98:	fsubr  QWORD PTR [esi-0x471ea838]
  44ac9e:	mov    esp,0x4e8fb55e
  44aca3:	push   es
  44aca4:	repnz sahf 
  44aca6:	stos   DWORD PTR es:[edi],eax
  44aca7:	bound  ebx,QWORD PTR [ecx-0x6e9d4343]
  44acad:	mov    edi,0x8fb555b5
  44acb2:	add    BYTE PTR [esi],0x74
  44acb5:	mov    ah,0x95
  44acb7:	xor    DWORD PTR [ebx+edi*4-0x2669a974],ebx
  44acbe:	mov    BYTE PTR [esi-0x6a],dl
  44acc1:	shl    DWORD PTR [esi+0x55],1
  44acc4:	addr16 mov edx,0xb45e4e8d
  44acca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44accb:	pop    eax
  44accc:	mov    cx,0x7d00
  44acd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44acd1:	mov    eax,0xc06a7f69
  44acd6:	add    BYTE PTR [ebp+0x555dd0b7],ch
  44acdc:	jo     0x44ac7c
  44acde:	jb     0x44ad3b
  44ace0:	bound  esi,QWORD PTR [ebp-0x46a6ca94]
  44ace6:	pop    ebp
  44ace7:	dec    eax
  44ace8:	adc    eax,0xaa600090
  44aced:	fistp  DWORD PTR [ebp+0x3d]
  44acf0:	in     eax,0xb7
  44acf2:	jb     0x44ad38
  44acf4:	push   ss
  44acf5:	mov    ah,0x50
  44acf7:	sbb    eax,DWORD PTR [eax]
	...
  44ad09:	add    BYTE PTR [eax],al
  44ad0b:	add    dh,ch
  44ad0d:	mov    eax,0xa2e51072
  44ad12:	add    BYTE PTR [esi+esi*4+0x6c],bl
  44ad16:	jb     0x44ad1c
  44ad18:	push   ss
  44ad19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ad1a:	pop    ebp
  44ad1b:	sbb    eax,0x85dba11
  44ad20:	aad    0x8f
  44ad22:	add    al,bl
  44ad24:	arpl   WORD PTR [edi+0x6cfa0569],di
  44ad2a:	push   0x67c3e8c8
  44ad2f:	lods   al,BYTE PTR ds:[esi]
  44ad30:	sti    
  44ad31:	mov    ebx,0xa2f8c06c
  44ad36:	ins    BYTE PTR es:[edi],dx
  44ad37:	les    esi,FWORD PTR [esi-0x756302b0]
  44ad3d:	mov    esp,0xbd7ac43f
  44ad42:	popa   
  44ad43:	lds    esi,FWORD PTR [ebx-0x52]
  44ad46:	add    BYTE PTR [ecx],ah
  44ad48:	sbb    bh,BYTE PTR [esi-0x5136659c]
  44ad4e:	ins    BYTE PTR es:[edi],dx
  44ad4f:	mov    bh,0x97
  44ad51:	mov    ebx,0x4fb68c6d
  44ad56:	std    
  44ad57:	mov    ah,0x5b
  44ad59:	mov    ecx,0xc8450065
  44ad5e:	push   edi
  44ad5f:	je     0x44ad92
  44ad61:	pop    esi
  44ad62:	outs   dx,WORD PTR ds:[esi]
  44ad64:	das    
  44ad65:	leave  
  44ad66:	gs jae 0x44ad35
  44ad69:	(bad)  
  44ad6a:	loopne 0x44ad6d
  44ad6c:	mov    ds:0x456cb0,eax
	...
  44ad81:	add    BYTE PTR [eax],al
  44ad83:	add    BYTE PTR [esp+ecx*8+0x6c],dl
  44ad87:	inc    ebx
  44ad88:	jnp    0x44ad39
  44ad8a:	arpl   WORD PTR [esp+esi*2-0x43],dx
  44ad8e:	arpl   WORD PTR [ecx+0x0],sp
  44ad91:	xchg   esp,eax
  44ad92:	call   0xe061:0x63bddf00
  44ad99:	scas   al,BYTE PTR es:[edi]
  44ad9a:	dec    ebx
  44ad9b:	jne    0x44ad7d
  44ad9d:	scas   al,BYTE PTR es:[edi]
  44ad9e:	js     0x44adf7
  44ada0:	pushf  
  44ada1:	(bad)  
  44ada2:	ret    
  44ada3:	add    al,0xc0
  44ada5:	(bad)  
  44ada6:	gs inc ecx
  44ada8:	mov    eax,0x8c6369c7
  44adad:	(bad)  
  44adae:	ret    0xd004
  44adb1:	(bad)  
  44adb2:	gs inc esi
  44adb4:	outs   dx,BYTE PTR ds:[esi]
  44adb5:	mov    al,0x63
  44adb7:	add    BYTE PTR [edx+0x6065418d],bh
  44adbd:	pop    esi
  44adbe:	outs   dx,DWORD PTR ds:[esi]
  44adbf:	jae    0x44ae31
  44adc1:	mov    al,0x6b
  44adc3:	inc    esp
  44adc4:	jno    0x44ad91
  44adc6:	push   edi
  44adc7:	jne    0x44ae41
  44adc9:	fst    DWORD PTR [ebx+0x49]
  44adcc:	sbb    BYTE PTR [edx+ebp*2+0x61b47167],dh
  44add3:	gs sbb al,0x8d
  44add6:	inc    esi
  44add7:	add    dl,BYTE PTR [ebx-0x50]
  44adda:	ins    BYTE PTR es:[edi],dx
  44addb:	push   eax
  44addc:	pop    esi
  44addd:	ret    0x6555
  44ade0:	das    
  44ade1:	mov    esi,0xb039694c
  44ade6:	add    BYTE PTR gs:[eax],al
	...
  44adf9:	add    BYTE PTR [eax],al
  44adfb:	add    BYTE PTR [ebp-0x7993ff0c],dh
  44ae01:	add    dl,BYTE PTR [edx+0x5d]
  44ae04:	pusha  
  44ae05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ae06:	add    BYTE PTR es:[ebp+0x51410276],dh
  44ae0d:	adc    DWORD PTR [edx+0x5f],esp
  44ae10:	dec    ecx
  44ae11:	or     esp,DWORD PTR [ecx+0x6b]
  44ae14:	(bad)  
  44ae15:	les    eax,FWORD PTR [ebp+0x4d]
  44ae18:	inc    ecx
  44ae19:	xlat   BYTE PTR ds:[ebx]
  44ae1a:	push   eax
  44ae1b:	jae    0x44ae63
  44ae1d:	jnp    0x44ae63
  44ae1f:	add    BYTE PTR [ebp+0x184101b8],dh
  44ae25:	imul   esi,DWORD PTR [ecx],0x6d
  44ae28:	adc    BYTE PTR [ebp+0x40],ah
  44ae2b:	arpl   WORD PTR [ebx],bx
  44ae2d:	fcom   DWORD PTR [ecx+0x6c]
  44ae30:	and    DWORD PTR [ebp+esi*1+0x5781144c],eax
  44ae37:	jae    0x44ae4d
  44ae39:	xchg   edx,eax
  44ae3a:	popa   
  44ae3b:	add    BYTE PTR [ebp+0x1040fcf0],dh
  44ae41:	add    DWORD PTR [eax+0x67],0xffffffe6
  44ae45:	jge    0x44ae7d
  44ae47:	outs   dx,BYTE PTR ds:[esi]
  44ae48:	rcl    BYTE PTR [ebx-0x6a2b8fcd],1
  44ae4e:	popa   
  44ae4f:	inc    ebx
  44ae50:	fld    QWORD PTR [ecx-0x6485f04]
  44ae56:	pusha  
  44ae57:	je     0x44ae3c
  44ae59:	pop    ecx
  44ae5a:	push   eax
  44ae5b:	jae    0x44ae2d
  44ae5d:	pop    ebx
  44ae5e:	xor    eax,0x6a
	...
  44ae73:	add    bl,dl
  44ae75:	jmp    0xead919cb
  44ae7a:	push   esp
  44ae7b:	imul   ebx,DWORD PTR [ebx-0x4984fbff],0x8b6353f1
  44ae85:	or     edx,DWORD PTR [ecx+0x74]
  44ae88:	cwde   
  44ae89:	(bad)  
  44ae8a:	mov    eax,ds:0xf48fb52e
  44ae8f:	add    al,0x76
  44ae91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ae92:	cdq    
  44ae93:	fs (bad) 
  44ae95:	mov    bl,0x9c
  44ae97:	push   ebp
  44ae98:	addr16 mov dh,0x7b
  44ae9b:	push   esi
  44ae9c:	pop    edi
  44ae9d:	mov    edx,0xbc69557c
  44aea2:	jne    0x44aef5
  44aea4:	push   edx
  44aea5:	mov    ecx,0x8f64527e
  44aeaa:	test   al,0x0
  44aeac:	popa   
  44aead:	mov    dl,0x5b
  44aeaf:	push   edi
  44aeb0:	pop    edx
  44aeb1:	mov    ecx,0xc3565048
  44aeb6:	inc    ecx
  44aeb7:	push   edx
  44aeb8:	push   ss
  44aeb9:	mov    cl,0x45
  44aebb:	add    al,0x9c
  44aebd:	xchg   edx,eax
  44aebe:	xor    BYTE PTR [esi+0x29],dl
  44aec1:	lods   eax,DWORD PTR ds:[esi]
  44aec2:	cmp    ebx,DWORD PTR [eax+0xc]
  44aec5:	mov    bl,0x42
  44aec7:	pop    edi
  44aec8:	sbb    ecx,ebx
  44aeca:	punpcklwd mm3,DWORD PTR [ebx]
  44aecd:	lods   eax,DWORD PTR ds:[esi]
  44aece:	add    al,0x5f
  44aed0:	setl   cl
  44aed3:	add    edx,DWORD PTR [eax+0x562092]
	...
  44aee9:	add    BYTE PTR [eax],al
  44aeeb:	add    cl,ch
  44aeed:	lods   al,BYTE PTR ds:[esi]
  44aeee:	sti    
  44aeef:	push   edi
  44aef0:	fdiv   QWORD PTR [edx-0x3426a0ee]
  44aef6:	add    al,0x61
  44aef8:	retf   
  44aef9:	lods   al,BYTE PTR ds:[esi]
  44aefa:	hlt    
  44aefb:	pop    esi
  44aefc:	fistp  WORD PTR [ebx-0x730efc17]
  44af02:	lds    edx,FWORD PTR [eax-0x37]
  44af05:	mov    eax,ds:0xb8c556ca
  44af0a:	test   al,0x3
  44af0c:	and    DWORD PTR [edi+edx*4-0x536464a6],ecx
  44af13:	bound  edx,QWORD PTR [ecx+0x7bbb00cd]
  44af19:	mov    dl,0x0
  44af1b:	inc    eax
  44af1c:	mov    ch,0xc1
  44af1e:	imul   ebx,DWORD PTR [ebx-0x729e5d86],0x8664b377
  44af28:	xchg   ebp,eax
  44af29:	pop    DWORD PTR [eax]
  44af2b:	jmp    0xa181:0x945dd4f2
  44af32:	pop    ebp
  44af33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44af34:	jg     0x44aeeb
  44af36:	pop    ebp
  44af37:	mov    ch,BYTE PTR [edx-0x48]
  44af3a:	jb     0x44afac
  44af3c:	mov    eax,ds:0xb7c5008f
  44af41:	rcr    BYTE PTR [ebp+0x55],1
  44af44:	cmp    BYTE PTR [ecx-0x4798bf92],0x66
  44af4b:	cmp    al,0x12
  44af4d:	mov    edx,0x1f6c
	...
  44af62:	add    BYTE PTR [eax],al
  44af64:	push   ss
  44af65:	mov    dh,0x69
  44af67:	dec    eax
  44af68:	pop    ss
  44af69:	mov    ah,0x5d
  44af6b:	push   ds
  44af6c:	mov    cl,0xe4
  44af6e:	cld    
  44af6f:	adc    al,0xf1
  44af71:	mov    ch,0x5d
  44af73:	or     BYTE PTR ds:0xde273275,dl
  44af79:	mov    ch,0x73
  44af7b:	sbb    eax,0x34fd4bb1
  44af80:	adc    DWORD PTR [esi+0x74d5085d],esi
  44af86:	xor    ch,BYTE PTR [edi]
  44af88:	add    ch,BYTE PTR [eax+0x59b6e96c]
  44af8e:	std    
  44af8f:	adc    al,0xe7
  44af91:	sahf   
  44af92:	cmp    eax,0x72b2fad7
  44af97:	stos   BYTE PTR es:[edi],al
  44af98:	in     al,0xae
  44af9a:	ins    BYTE PTR es:[edi],dx
  44af9b:	rcl    ch,0xc6
  44af9e:	fs mov edx,0x6cc493
  44afa4:	add    eax,0x67006abb
  44afa9:	gs inc esi
  44afab:	dec    esi
  44afac:	dec    ecx
  44afad:	pop    esi
  44afae:	and    eax,0x64c61232
  44afb3:	ins    BYTE PTR es:[edi],dx
  44afb4:	sbb    al,0x92
  44afb6:	in     eax,0x2
  44afb8:	dec    eax
  44afb9:	mov    ebx,0xaf356e53
  44afbe:	imul   esp,DWORD PTR [ecx+edi*1-0x6e],0xc51b0112
  44afc6:	ins    BYTE PTR es:[edi],dx
  44afc7:	inc    ebx
	...
  44afdc:	xor    cl,cl
  44afde:	jo     0x44b042
  44afe0:	xor    esi,DWORD PTR [ecx-0x4ee79b9a]
  44afe6:	ins    BYTE PTR es:[edi],dx
  44afe7:	popa   
  44afe8:	fcom   QWORD PTR [ecx+0x789b0136]
  44afee:	ins    BYTE PTR es:[edi],dx
  44afef:	dec    ebx
  44aff0:	imul   esp,DWORD PTR [esi+edx*2+0x6f],0x535c5dfd
  44aff8:	call   0x8caa1c67
  44affd:	xchg   ecx,eax
  44affe:	hlt    
  44afff:	add    bh,BYTE PTR [eax-0x3091a8a3]
  44b005:	pop    edi
  44b006:	push   edi
  44b007:	je     0x44afc2
  44b009:	mov    esi,0x6a9f7363
  44b00e:	popa   
  44b00f:	mov    WORD PTR gs:[ecx+0x739f001d],ss
  44b016:	push   edi
  44b017:	jb     0x44afb9
  44b019:	pusha  
  44b01a:	jno    0x44b081
  44b01c:	pop    esi
  44b01d:	int3   
  44b01e:	add    BYTE PTR [eax],al
  44b020:	jno    0x44afad
  44b022:	dec    ecx
  44b023:	jo     0x44afde
  44b025:	popa   
  44b026:	push   ecx
  44b027:	imul   esp,DWORD PTR [edx+0x6d],0x5cff7769
  44b02e:	push   edi
  44b02f:	je     0x44afe6
  44b031:	dec    edi
  44b032:	xor    ebp,DWORD PTR [edx-0x76]
  44b035:	ss add al,0x85
  44b038:	mov    ah,0xf5
  44b03a:	sub    BYTE PTR [eax+ecx*4-0x17],dh
  44b03e:	sub    BYTE PTR [esi+0x0],ch
	...
  44b051:	add    BYTE PTR [eax],al
  44b053:	add    BYTE PTR [edx+0x58],ch
  44b056:	arpl   WORD PTR es:[esi-0x6c95bb26],dx
  44b05d:	std    
  44b05e:	sub    eax,0x24fa946b
  44b063:	imul   ecx,DWORD PTR [ebx-0x4849fc1b],0x817428e9
  44b06d:	(bad)  
  44b06e:	sub    eax,0x400a5463
  44b073:	arpl   WORD PTR [esi+0x11],sp
  44b076:	xor    BYTE PTR [ecx+0x45],ch
  44b079:	ss add al,0x46
  44b07c:	mov    ch,0x79
  44b07e:	xor    BYTE PTR [ecx+0x46],ch
  44b081:	retf   
  44b082:	dec    eax
  44b083:	arpl   WORD PTR [esi-0x2f],ax
  44b086:	cmp    BYTE PTR [ecx+0x25],ch
  44b089:	aaa    
  44b08a:	add    al,0x28
  44b08c:	mov    bh,0x5d
  44b08e:	sub    al,0x63
  44b090:	adc    ebp,DWORD PTR [ebx+0x29]
  44b093:	ins    DWORD PTR es:[edi],dx
  44b094:	push   cs
  44b095:	arpl   WORD PTR [ebx],si
  44b097:	jo     0x44b083
  44b099:	ss add al,0x68
  44b09c:	mov    ah,0x75
  44b09e:	sub    DWORD PTR [ebp+eiz*8-0x78],esi
  44b0a2:	xor    ebx,DWORD PTR [ebp+0x10]
  44b0a5:	mov    ch,BYTE PTR [edi]
  44b0a7:	push   ecx
  44b0a8:	fsub   QWORD PTR [eax+eiz*1]
  44b0ab:	imul   esp,edx,0xe95f3889
  44b0b1:	jg     0x44b0e6
  44b0b3:	push   0xffffffb5
  44b0b5:	es add al,0x3d
	...
  44b0cc:	(bad)  
  44b0cd:	mov    ebx,DWORD PTR ds:0xb68fd074
  44b0d3:	sub    al,0xcf
  44b0d5:	stos   DWORD PTR es:[edi],eax
  44b0d6:	(bad)  
  44b0d7:	cmp    ch,al
  44b0d9:	fwait
  44b0da:	enter  0x9a37,0xb4
  44b0de:	mov    bh,0x5a
  44b0e0:	mov    ch,0x8f
  44b0e2:	scas   eax,DWORD PTR es:[edi]
  44b0e3:	add    esp,eax
  44b0e5:	mov    bl,0xc6
  44b0e7:	ss xchg esi,eax
  44b0e9:	mov    esp,0xb49931c0
  44b0ee:	scas   al,BYTE PTR es:[edi]
  44b0ef:	push   esi
  44b0f0:	sub    DWORD PTR [esi-0x4a73d36b],0x8e7b03e9
  44b0fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b0fb:	sub    BYTE PTR [ecx-0x45],ch
  44b0fe:	xor    DWORD PTR ds:0x4785ae56,0x3792a056
  44b108:	dec    esp
  44b109:	lahf   
  44b10a:	jmp    0x9ad5cc12
  44b10f:	sub    BYTE PTR [ecx-0x41],al
  44b112:	pop    ebx
  44b113:	xor    DWORD PTR [eax-0x56],esp
  44b116:	pop    edx
  44b117:	xor    eax,0x283fb664
  44b11c:	sbb    al,0x9b
  44b11e:	cmp    bh,BYTE PTR [eax]
  44b120:	or     bl,BYTE PTR [eax+edx*2+0x17900f31]
  44b127:	add    al,0xd8
  44b129:	popf   
  44b12a:	inc    esp
  44b12b:	and    ecx,DWORD PTR [ecx]
  44b12d:	lods   eax,DWORD PTR ds:[esi]
  44b12e:	sbb    eax,0x27
	...
  44b143:	add    BYTE PTR [eax],bl
  44b145:	mov    bh,0x15
  44b147:	xor    DWORD PTR ds:0xcf03e9bb,eax
  44b14d:	(bad)
  44b151:	sahf   
  44b152:	adc    eax,0xfbace431
  44b157:	pop    eax
  44b158:	mov    ch,0x8f
  44b15a:	scas   eax,DWORD PTR es:[edi]
  44b15b:	add    eax,0xfa00b305
  44b160:	mov    dl,dh
  44b162:	pop    ebp
  44b163:	cli    
  44b164:	add    edx,0x8fddcc5f
  44b16a:	add    cl,dh
  44b16c:	mov    al,0xd6
  44b16e:	popa   
  44b16f:	(bad)  [edx+ebp*4-0x3d1c2a8e]
  44b176:	fs mov dl,0xdb
  44b179:	call   0xac01:0x1eb6e94f
  44b180:	into   
  44b181:	stos   BYTE PTR es:[edi],al
  44b182:	ins    BYTE PTR es:[edi],dx
  44b183:	xchg   esi,eax
  44b184:	fbstp  TBYTE PTR [ebp-0x4b4269a4]
  44b18a:	cmp    eax,0x16fb6a1
  44b18f:	scas   al,BYTE PTR es:[edi]
  44b190:	fwait
  44b191:	fwait
  44b192:	inc    ebx
  44b193:	xchg   esp,eax
  44b194:	mov    al,ds:0x867b67b4
  44b199:	mov    eax,0x74b6e973
  44b19e:	add    DWORD PTR [esi-0x75b66465],ebp
  44b1a4:	test   DWORD PTR [ebp+0x5749],esi
	...
  44b1ba:	add    BYTE PTR [eax],al
  44b1bc:	(bad)  
  44b1bd:	mov    eax,0xcbb6a600
  44b1c2:	jb     0x44b20c
  44b1c4:	in     al,dx
  44b1c5:	retf   0x3e63
  44b1c8:	out    0x8f,eax
  44b1ca:	add    BYTE PTR [edi-0x4a],al
  44b1cd:	rcr    BYTE PTR [ebp+0x35],1
  44b1d0:	add    BYTE PTR [ebx-0x4925c28d],bl
  44b1d6:	inc    ebp
  44b1d7:	inc    esp
  44b1d8:	int    0xb1
  44b1da:	imul   ecx,DWORD PTR [edx],0xe1008fc8
  44b1e0:	mov    dh,0x64
  44b1e2:	push   0x67bbab08
  44b1e7:	push   ds
  44b1e8:	xchg   edx,eax
  44b1e9:	mov    dh,0x4f
  44b1eb:	add    BYTE PTR [esi+ecx*4+0x34],cl
  44b1ef:	add    BYTE PTR [edi-0x4e8da88d],cl
  44b1f5:	pop    ebx
  44b1f6:	jo     0x44b25d
  44b1f8:	dec    esi
  44b1f9:	mov    DWORD PTR [eax],0x3f8d8000
  44b1ff:	jae    0x44b1ff
  44b201:	push   0x71617455
  44b206:	jo     0x44b27c
  44b208:	add    eax,0x53019c8e
  44b20d:	imul   ebp,DWORD PTR [edi+edx*2+0x5],0x536f5c60
  44b215:	mov    edx,0x6cf17268
  44b21a:	pop    esp
  44b21b:	push   eax
  44b21c:	push   ds
  44b21d:	pop    edi
  44b21e:	push   ebp
  44b21f:	add    BYTE PTR gs:[eax],al
	...
  44b232:	add    BYTE PTR [eax],al
  44b234:	pop    ds
  44b235:	pop    ebx
  44b236:	aas    
  44b237:	fmul   QWORD PTR fs:[ebp+0x6913014d]
  44b23e:	ins    BYTE PTR es:[edi],dx
  44b23f:	dec    ebp
  44b240:	xor    DWORD PTR [ebx+0x65],ebx
  44b243:	popa   
  44b244:	xor    ebp,DWORD PTR [ecx+0x50]
  44b247:	outs   dx,DWORD PTR ds:[esi]
  44b248:	dec    edi
  44b249:	mov    ?,edi
  44b24b:	add    DWORD PTR [ecx],ebp
  44b24d:	ins    DWORD PTR es:[edi],dx
  44b24e:	jo     0x44b2a7
  44b250:	gs jno 0x44b2af
  44b253:	outs   dx,DWORD PTR ds:[esi]
  44b254:	arpl   WORD PTR [ebx+0x67fa6969],di
  44b25a:	gs add al,bh
  44b25d:	lea    eax,[ebp+0x65]
  44b260:	or     bh,BYTE PTR [eax+0x4b]
  44b263:	fistp  WORD PTR gs:[edi+edx*2+0x67]
  44b268:	add    DWORD PTR [ecx-0x72100000],edi
  44b26e:	inc    esi
  44b26f:	gs test al,0x76
  44b272:	push   edi
  44b273:	jae    0x44b226
  44b275:	int3   
  44b276:	push   edi
  44b277:	jo     0x44b22e
  44b279:	cmp    BYTE PTR [ecx],0x6e
  44b27c:	shl    BYTE PTR [esi],1
  44b27e:	add    al,0xd5
  44b280:	mov    ah,0x5f
  44b282:	xor    edx,DWORD PTR [ecx-0x34]
  44b285:	nop
  44b286:	sub    BYTE PTR [ecx-0x36],ch
  44b289:	ss add al,0x75
  44b28c:	mov    bh,0x85
  44b28e:	sub    DWORD PTR [edx-0x27],ebp
  44b291:	fld    TBYTE PTR [eax]
  44b293:	ins    DWORD PTR es:[edi],dx
  44b294:	(bad)  
  44b295:	push   edi
  44b296:	pop    ds
  44b297:	arpl   WORD PTR [eax],ax
	...
  44b2a9:	add    BYTE PTR [eax],al
  44b2ab:	add    BYTE PTR [ecx-0x659cceb1],cl
  44b2b1:	cmp    esi,DWORD PTR [eax]
  44b2b3:	push   ecx
  44b2b4:	mov    ch,0x70
  44b2b6:	add    cl,BYTE PTR [ebp-0x70]
  44b2b9:	fimul  DWORD PTR [esi+0x67]
  44b2bc:	mov    ds:0x65712752,eax
  44b2c1:	loope  0x44b2f5
  44b2c3:	add    BYTE PTR [ebp-0x6faffdbc],dh
  44b2c9:	or     ebp,DWORD PTR [ebx]
  44b2cb:	dec    ebx
  44b2cc:	pop    eax
  44b2cd:	add    eax,0xb525f33
  44b2d2:	cmp    eax,0x1e5b500
  44b2d7:	push   eax
  44b2d8:	push   eax
  44b2d9:	or     ebp,DWORD PTR [ebx]
  44b2db:	dec    ebx
  44b2dc:	pop    eax
  44b2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b2de:	xor    bl,BYTE PTR [edi+0x52]
  44b2e1:	or     ecx,DWORD PTR [edi+0x0]
  44b2e4:	mov    ch,0x32
  44b2e6:	std    
  44b2e7:	inc    eax
  44b2e8:	push   eax
  44b2e9:	mov    edx,0xd4166a3d
  44b2ee:	xor    esi,DWORD PTR [edx+ebx*1-0x3b]
  44b2f2:	cld    
  44b2f3:	xchg   ecx,eax
  44b2f4:	mov    ah,0x71
  44b2f6:	sub    DWORD PTR [edx+eax*1-0x40],esi
  44b2fa:	es and ah,BYTE PTR fs:[edx+0x50]
  44b2ff:	imul   ebx,DWORD PTR [ebx],0xb5004fca
  44b305:	(bad)  
  44b306:	jae    0x44b309
  44b308:	call   0xe687c0b7
  44b30d:	popf   
  44b30e:	sbb    ch,BYTE PTR [edi]
	...
  44b324:	fstp   TBYTE PTR [edi-0x704acd0a]
  44b32a:	icebp  
  44b32b:	add    al,0xf4
  44b32d:	stos   BYTE PTR es:[edi],al
  44b32e:	in     eax,dx
  44b32f:	inc    edx
  44b330:	repnz lahf 
  44b332:	cmc    
  44b333:	cmp    bl,bl
  44b335:	stos   BYTE PTR es:[edi],al
  44b336:	jmp    0xa6d3583e
  44b33b:	sub    cl,al
  44b33d:	int3   
  44b33e:	lds    esp,FWORD PTR [eax+eiz*4]
  44b341:	pushf  
  44b342:	popf   
  44b343:	cs lahf 
  44b345:	test   al,0xae
  44b347:	add    ecx,DWORD PTR [ecx-0x72]
  44b34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b34b:	sub    BYTE PTR [ecx-0x66d22f48],ah
  44b351:	mov    al,0xb6
  44b353:	dec    esp
  44b354:	lahf   
  44b355:	test   eax,0x8e9903b6
  44b35a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b35b:	sub    BYTE PTR [ecx+0x563188bf],al
  44b361:	mov    cl,0x95
  44b363:	add    esi,DWORD PTR ds:0x6928ba8d
  44b369:	int3   
  44b36a:	mov    BYTE PTR [ebx],dh
  44b36c:	popa   
  44b36d:	call   0x48c:0x8fb5287b
  44b374:	je     0x44b320
  44b376:	ins    DWORD PTR es:[edi],dx
  44b377:	push   eax
  44b378:	push   esi
  44b379:	pushf  
  44b37a:	pop    edx
  44b37b:	and    edx,DWORD PTR [edx+ebp*4+0x2e]
  44b37f:	add    al,0x51
  44b381:	xchg   ecx,eax
  44b382:	es daa 
  44b384:	and    edi,eax
  44b386:	inc    eax
  44b387:	add    BYTE PTR cs:[eax],al
	...
  44b39a:	add    BYTE PTR [eax],al
  44b39c:	sbb    DWORD PTR [edi-0x4ce9adca],ebp
  44b3a2:	sub    eax,0x90ea04
  44b3a7:	shl    BYTE PTR cs:[ebx-0x533bbbbb],cl
  44b3ae:	popa   
  44b3af:	push   cs
  44b3b0:	rcr    BYTE PTR [esi+0x0],cl
  44b3b3:	jge    0x44b36e
  44b3b5:	rcr    DWORD PTR [ebp+0xf],cl
  44b3b8:	add    BYTE PTR [edi-0x5f6ffa9a],dh
  44b3be:	push   eax
  44b3bf:	sti    
  44b3c0:	mov    DWORD PTR [edi+ecx*2+0x265b6e9],edi
  44b3c7:	sbb    DWORD PTR [edi-0x160a994a],eax
  44b3cd:	mov    dh,0x66
  44b3cf:	int    0x89
  44b3d1:	mov    al,ds:0xd2b95a00
  44b3d6:	jno    0x44b3b4
  44b3d8:	xlat   BYTE PTR ds:[ebx]
  44b3d9:	stos   DWORD PTR es:[edi],eax
  44b3da:	push   edx
  44b3db:	(bad)  
  44b3dc:	aad    0xa3
  44b3de:	add    BYTE PTR [eax],al
  44b3e0:	mov    bh,0xbf
  44b3e2:	addr16 mov edx,0xbb68c3ca
  44b3e8:	sar    DWORD PTR [esi-0x532463a4],cl
  44b3ee:	jae    0x44b378
  44b3f0:	shl    DWORD PTR [edx-0x4d4916b1],1
  44b3f6:	add    bh,BYTE PTR [ebx-0x77a2546d]
  44b3fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b3fd:	mov    dl,0x3c
  44b3ff:	stos   BYTE PTR es:[edi],al
	...
  44b414:	mov    dh,0x7d
  44b416:	add    DWORD PTR [esi-0x55c35c65],esp
  44b41c:	jae    0x44b3b5
  44b41e:	add    BYTE PTR [esi+esi*4],ch
  44b421:	(bad)  
  44b422:	pop    bp
  44b424:	xchg   edx,eax
  44b425:	lods   eax,DWORD PTR ds:[esi]
  44b426:	jae    0x44b46c
  44b428:	aam    0xa3
  44b42a:	push   edx
  44b42b:	dec    esp
  44b42c:	aam    0xa3
  44b42e:	add    BYTE PTR [eax],cl
  44b430:	mov    dh,0xd0
  44b432:	pop    ebp
  44b433:	add    al,bl
  44b435:	(bad)  
  44b436:	xor    eax,0x41921b00
  44b43b:	gs enter 0x70c6,0x64
  44b440:	in     eax,dx
  44b441:	push   edi
  44b442:	arpl   WORD PTR [edx-0x57],dx
  44b445:	jo     0x44b4b3
  44b447:	add    BYTE PTR [edx-0x6e],ah
  44b44a:	ss gs mov ebx,0xad506a6a
  44b451:	push   0x6a
  44b453:	je     0x44b4a1
  44b455:	xchg   edx,eax
  44b456:	mov    ch,0x0
  44b458:	cwde   
  44b459:	popa   
  44b45a:	push   edi
  44b45b:	ja     0x44b3f6
  44b45d:	addr16 popa 
  44b45f:	gs dec esp
  44b461:	xchg   edx,eax
  44b462:	repnz add BYTE PTR [edx],cl
  44b465:	imul   esp,DWORD PTR [esp+ebp*2+0x6e],0x1c745575
  44b46d:	xchg   edx,eax
  44b46e:	xchg   BYTE PTR [ecx],al
  44b470:	pop    ebx
  44b471:	jne    0x44b4df
  44b473:	push   edi
  44b474:	add    eax,0x6f5c6c
	...
  44b489:	add    BYTE PTR [eax],al
  44b48b:	add    BYTE PTR [ebx-0x2a],cl
  44b48e:	xor    eax,0x41919400
  44b493:	gs dec eax
  44b495:	lds    esi,FWORD PTR [eax+0x64]
  44b498:	sub    eax,0x3b526366
  44b49d:	ins    BYTE PTR es:[edi],dx
  44b49e:	add    BYTE PTR [eax],al
  44b4a0:	mov    al,ds:0x386e4392
  44b4a5:	ret    0x6957
  44b4a8:	inc    edx
  44b4a9:	data16 add BYTE PTR [eax],al
  44b4ac:	xor    eax,0x48654191
  44b4b1:	mov    edi,0x6e406568
  44b4b6:	push   ecx
  44b4b7:	imul   esp,DWORD PTR [edx+0x6f],0x919c7769
  44b4be:	cmp    eax,0x2158b502
  44b4c3:	popa   
  44b4c4:	or     al,0xba
  44b4c6:	xor    BYTE PTR [ebx+0x27],ah
  44b4c9:	push   0x28
  44b4cb:	pop    edi
  44b4cc:	push   es
  44b4cd:	pop    edx
  44b4ce:	cmp    eax,0xfcbdb500
  44b4d3:	inc    ebx
  44b4d4:	sbb    ch,dl
  44b4d6:	inc    edx
  44b4d7:	outs   dx,BYTE PTR ds:[esi]
  44b4d8:	adc    al,0x84
  44b4da:	and    DWORD PTR [eax-0x19],edx
  44b4dd:	lea    ebx,[edi]
  44b4df:	push   ecx
  44b4e0:	mov    ch,0x24
  44b4e2:	add    al,0x3d
  44b4e4:	aam    0x1a
  44b4e6:	and    BYTE PTR [ecx-0x34],dl
  44b4e9:	test   BYTE PTR [eax],ah
  44b4eb:	imul   ecx,edx,0x692e76
	...
  44b501:	add    BYTE PTR [eax],al
  44b503:	add    dh,dl
  44b505:	jge    0x44b503
  44b507:	aam    0xb5
  44b509:	jae    0x44b535
  44b50b:	fs call 0xb5b7df5c
  44b511:	sbb    eax,DWORD PTR [edi*1+0x51205294]
  44b518:	mov    esp,ds
  44b51a:	pop    ss
  44b51b:	imul   esp,DWORD PTR [edx-0x6996d20a],0xb74a03e7
  44b525:	clc    
  44b526:	and    BYTE PTR [ecx-0x74],ah
  44b529:	fldenv [edi]
  44b52b:	arpl   WORD PTR [edi+0x665f1fe9],ax
  44b531:	stc    
  44b532:	push   edx
  44b533:	add    BYTE PTR [ebp+0x4c47fdd0],dh
  44b539:	call   0x6a20:0xe3507424
  44b540:	dec    eax
  44b541:	fbld   TBYTE PTR [edi]
  44b543:	arpl   WORD PTR [eax+0x26],bx
  44b546:	add    al,0x98
  44b548:	mov    ch,0xf2
  44b54a:	and    BYTE PTR [edx+0x68],ah
  44b54d:	(bad)  
  44b54e:	and    eax,0x50a7f04d
  44b553:	sub    BYTE PTR [ecx],dl
  44b555:	rcr    BYTE PTR [ebx+0x2b],0x0
  44b559:	iret   
  44b55a:	jmp    0x25d3f662
  44b55f:	and    DWORD PTR [edi],edx
  44b561:	aam    0x45
  44b563:	and    esp,ebp
  44b565:	mov    eax,ds:0x273e
	...
  44b57a:	add    BYTE PTR [eax],al
  44b57c:	ret    0x188f
  44b57f:	add    eax,0x4915b2f4
  44b584:	(bad)  
  44b585:	lods   eax,DWORD PTR ds:[esi]
  44b586:	or     al,0x4d
  44b588:	loope  0x44b53c
  44b58a:	cld    
  44b58b:	inc    esi
  44b58c:	int3   
  44b58d:	mov    ds:0x8fb52ff7,al
  44b592:	xchg   ecx,eax
  44b593:	add    eax,0x3010a500
  44b598:	call   0xd065db44
  44b59d:	test   al,0xed
  44b59f:	sub    al,ch
  44b5a1:	pop    DWORD PTR [eax-0x404d86fd]
  44b5a7:	dec    eax
  44b5a8:	jno    0x44b570
  44b5aa:	stos   BYTE PTR es:[edi],al
  44b5ab:	sub    ebx,DWORD PTR [edx-0x74ac4255]
  44b5b1:	lods   al,BYTE PTR ds:[esi]
  44b5b2:	retf   0xb552
  44b5b5:	(bad)  
  44b5b6:	bound  eax,QWORD PTR [ebx]
  44b5b8:	jno    0x44b56c
  44b5ba:	(bad)  
  44b5bb:	push   edx
  44b5bc:	call   0x9bbf:0x842abdad
  44b5c3:	sub    dl,BYTE PTR [eax-0x78fc1632]
  44b5c9:	mov    fs,WORD PTR [esi+0x7cca6920]
  44b5cf:	sub    DWORD PTR [esi-0x40],esp
  44b5d2:	jne    0x44b5f8
  44b5d4:	dec    ecx
  44b5d5:	mov    dl,0xe9
  44b5d7:	add    edi,DWORD PTR [ebx-0x6a51ff72]
  44b5dd:	mov    ds:0x7d43,eax
	...
  44b5f2:	add    BYTE PTR [eax],al
  44b5f4:	xchg   ecx,eax
  44b5f5:	stos   BYTE PTR es:[edi],al
  44b5f6:	jae    0x44b62f
  44b5f8:	(bad)  
  44b5f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b5fa:	pop    ebp
  44b5fb:	ss mov cl,0x2b
  44b5fe:	add    edi,DWORD PTR [edx]
  44b600:	fisubr WORD PTR [esp+ebp*2+0x61bfd244]
  44b607:	cmp    edx,esi
  44b609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b60a:	pop    ebp
  44b60b:	xor    eax,0x2073a9aa
  44b610:	iret   
  44b611:	lods   eax,DWORD PTR ds:[esi]
  44b612:	addr16 push ss
  44b614:	mov    cl,0x20
  44b616:	add    edi,DWORD PTR ds:0x1263baab
  44b61c:	add    DWORD PTR [ecx-0x3956e390],ebp
  44b622:	pop    ebp
  44b623:	dec    DWORD PTR [ebx-0x49168732]
  44b629:	mov    esi,0xa3aa2601
  44b62e:	inc    ebp
  44b62f:	or     al,0x8f
  44b631:	sahf   
  44b632:	dec    ecx
  44b633:	cmc    
  44b634:	fwait
  44b635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b636:	push   edx
  44b637:	int3   
  44b638:	fldenv [ebx-0x364f5400]
  44b63e:	pop    ebp
  44b63f:	into   
  44b640:	iret   
  44b641:	lods   al,BYTE PTR ds:[esi]
  44b642:	ins    BYTE PTR es:[edi],dx
  44b643:	(bad)  
  44b644:	loopne 0x44b6a2
  44b646:	fs enter 0xacc9,0x3d
  44b64b:	shl    DWORD PTR [ebp-0x71],0x0
  44b64f:	mov    ds:0xb55dd0b7,al
  44b654:	jae    0x44b604
  44b656:	pushfw 
	...
  44b66c:	mov    dh,0x91
  44b66e:	add    ch,BYTE PTR [ebx+ecx*8-0x6d5f925b]
  44b675:	scas   al,BYTE PTR es:[edi]
  44b676:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  44b678:	mov    al,ds:0x2c0065a8
  44b67d:	push   0x8e406e5f
  44b682:	push   ds
  44b683:	add    bl,BYTE PTR [ebx]
  44b685:	pop    edi
  44b686:	arpl   WORD PTR [esi+0x15],bp
  44b689:	imul   esi,DWORD PTR [eax+0x75],0x7363d010
  44b690:	pop    es
  44b691:	pusha  
  44b692:	imul   esi,DWORD PTR [eax-0x74],0xd000928e
  44b699:	jp     0x44b6fd
  44b69b:	inc    esi
  44b69c:	into   
  44b69d:	outs   dx,BYTE PTR ds:[esi]
  44b69e:	imul   esp,DWORD PTR [ebp-0x54],0x61
  44b6a2:	imul   esp,DWORD PTR [ebx-0x33],0xd0009393
  44b6a9:	jp     0x44b70d
  44b6ab:	inc    esp
  44b6ac:	enter  0x5070,0x72
  44b6b0:	mov    ebx,0xc6005174
  44b6b5:	mov    es,WORD PTR [ecx+0x65]
  44b6b8:	rol    ah,0x73
  44b6bb:	bound  ecx,QWORD PTR [ecx+0x5c756a7a]
  44b6c1:	mov    ss,WORD PTR [edx+0x6c7a9f02]
  44b6c7:	dec    ebx
  44b6c8:	mov    cl,0x56
  44b6ca:	push   esi
  44b6cb:	outs   dx,DWORD PTR ds:[esi]
  44b6cc:	std    
  44b6cd:	arpl   WORD PTR [ebx+edx*2+0x0],bx
	...
  44b6e5:	ins    DWORD PTR es:[edi],dx
  44b6e6:	ins    BYTE PTR es:[edi],dx
  44b6e7:	gs or  al,0x8e
  44b6ea:	inc    esi
  44b6eb:	add    DWORD PTR [ebx+0x79],edx
  44b6ee:	ins    BYTE PTR es:[edi],dx
  44b6ef:	dec    ebp
  44b6f0:	add    DWORD PTR [eax+0x73],ebp
  44b6f3:	dec    ecx
  44b6f4:	inc    eax
  44b6f5:	jns    0x44b762
  44b6f7:	dec    ecx
  44b6f8:	push   eax
  44b6f9:	mov    ss,WORD PTR [ebp+0x2]
  44b6fc:	push   ds
  44b6fd:	jns    0x44b760
  44b6ff:	imul   ecx,DWORD PTR [edi+0x6a],0x65237263
  44b706:	push   0x64
  44b708:	mov    ch,0x11
  44b70a:	xor    DWORD PTR [ebx+0x50],ecx
  44b70d:	cmc    
  44b70e:	sub    al,0x5f
  44b710:	pop    edx
  44b711:	or     edx,DWORD PTR [ecx+0x0]
  44b714:	mov    ch,0xec
  44b716:	std    
  44b717:	dec    ebp
  44b718:	pop    eax
  44b719:	or     DWORD PTR [ebx],ebp
  44b71b:	ins    DWORD PTR es:[edi],dx
  44b71c:	inc    ecx
  44b71d:	adc    ebp,DWORD PTR [esi]
  44b71f:	cmp    eax,0x6d33c821
  44b724:	lock scas al,BYTE PTR es:[edi]
  44b726:	cmp    eax,0xfd6bb500
  44b72b:	inc    eax
  44b72c:	adc    bl,al
  44b72e:	dec    eax
  44b72f:	pop    edi
  44b730:	push   es
  44b731:	pop    ebx
  44b732:	inc    ebp
  44b733:	push   0x5
  44b735:	xor    BYTE PTR fs:[edi+0x13],al
  44b739:	leave  
  44b73a:	pop    ds
  44b73b:	add    BYTE PTR [ebp-0x23bc0367],dh
  44b741:	jne    0x44b76f
  44b743:	pop    edi
  44b744:	loope  0x44b6cb
  44b746:	and    al,0x4b
	...
  44b75c:	fdiv   DWORD PTR [ebp+0x33]
  44b75f:	pop    edi
  44b760:	rcl    BYTE PTR [ebx+0x32b50047],cl
  44b766:	add    cl,BYTE PTR [ebx-0x3a]
  44b769:	xchg   ecx,eax
  44b76a:	inc    edi
  44b76b:	pop    edi
  44b76c:	int3   
  44b76d:	sbb    dh,BYTE PTR [esi]
  44b76f:	imul   eax,edi,0xa96c317b
  44b775:	aas    
  44b776:	xor    al,0x6c
  44b778:	nop
  44b779:	jmp    0x45dd1d9f
  44b77e:	sub    BYTE PTR [ebp-0x4b],ch
  44b781:	mov    eax,0xda9840fd
  44b786:	inc    esi
  44b787:	addr16 fwait
  44b789:	push   edx
  44b78a:	pop    ds
  44b78b:	jno    0x44b742
  44b78d:	push   0x2
  44b78f:	dec    ebp
  44b790:	nop
  44b791:	loop   0x44b7d9
  44b793:	arpl   WORD PTR [bx+0x2685],cx
  44b798:	fs retf 
  44b79a:	xchg   BYTE PTR ds:0x3e9c054,ah
  44b7a0:	mov    DWORD PTR [esi+ebp*4-0x714ca0d4],ecx
  44b7a7:	cs ja  0x44b747
  44b7aa:	xchg   BYTE PTR [eax],ch
  44b7ac:	gs test al,0x80
  44b7af:	and    eax,0x4f68f41
  44b7b4:	add    DWORD PTR [ecx-0x550ddfb8],ebp
  44b7ba:	dec    eax
  44b7bb:	pop    ds
  44b7bc:	push   ss
  44b7bd:	shr    ecx,0x3
	...
  44b7d4:	mov    ds,WORD PTR ss:[esi]
  44b7d7:	and    DWORD PTR [ecx],ecx
  44b7d9:	les    ecx,FWORD PTR [esi+0x34]
  44b7dc:	in     al,0xa6
  44b7de:	inc    edi
  44b7df:	and    BYTE PTR [ecx+eiz*4],cl
  44b7e2:	jmp    0x1d019dea
  44b7e7:	push   edx
  44b7e8:	mov    al,ds:0xd91fcf5d
  44b7ed:	stos   DWORD PTR es:[edi],eax
  44b7ee:	jmp    0x26d3c2f6
  44b7f3:	and    ecx,esp
  44b7f5:	ret    
  44b7f6:	imul   BYTE PTR [edx]
  44b7f8:	(bad)  
  44b7f9:	test   eax,0xa8d72630
  44b7fe:	sti    
  44b7ff:	sub    dl,ah
  44b801:	mov    ds:0x8fcf2700,eax
  44b806:	out    dx,al
  44b807:	add    al,0x7a
  44b809:	test   eax,0xae922fd0
  44b80e:	lds    ebp,FWORD PTR [ebx+ebp*4]
  44b811:	mov    dl,0xba
  44b813:	and    BYTE PTR [eax-0x5e],bh
  44b816:	fld    TBYTE PTR [ecx+ecx*4]
  44b819:	xchg   esi,eax
  44b81a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b81b:	and    BYTE PTR [eax-0x7ad34454],bl
  44b821:	mov    ds:0x8fc4c600,eax
  44b826:	add    BYTE PTR [edi-0x4c],dh
  44b829:	retf   0x9d5d
  44b82c:	xchg   DWORD PTR [ebx+eiz*2+0x6cb0a494],ebp
  44b833:	nop
  44b834:	call   0x0:0x8a73ac
	...
  44b84b:	add    BYTE PTR [eax+esi*4-0x566c8290],al
  44b852:	cmp    al,0x88
  44b854:	xchg   edi,eax
  44b855:	stos   DWORD PTR es:[edi],eax
  44b856:	add    BYTE PTR [ebx-0x4a],bh
  44b859:	pop    edx
  44b85a:	addr16 jg 0x44b83d
  44b85d:	mov    dl,0x72
  44b85f:	pop    ebp
  44b860:	add    al,0x9c
  44b862:	jb     0x44b8b4
  44b864:	(bad)  [eax-0x5d2bb3ad]
  44b86a:	jb     0x44b8ac
  44b86c:	lds    ebx,FWORD PTR [esi-0x4b3bb3c4]
  44b872:	jb     0x44b8c4
  44b874:	leave  
  44b875:	fwait
  44b876:	addr16 cmp esp,ebp
  44b879:	test   al,0x53
  44b87b:	inc    esp
  44b87c:	xchg   esp,eax
  44b87d:	mov    ds:0x9ea51072,al
  44b882:	cmp    al,0x4
  44b884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b885:	mov    ah,0x72
  44b887:	add    BYTE PTR [ecx+0x1b679b],ah
  44b88d:	nop
  44b88e:	add    BYTE PTR [esi+esi*4],dh
  44b891:	rcr    BYTE PTR [ebp-0xb],1
  44b894:	in     eax,0xb2
  44b896:	arpl   sp,di
  44b898:	test   BYTE PTR [esi-0x4d0d0f94],ch
  44b89e:	jae    0x44b86a
  44b8a0:	in     al,0xae
  44b8a2:	jo     0x44b879
  44b8a4:	fldenv [ebp-0x5c2a37ad]
  44b8aa:	add    BYTE PTR [ebx+0x5dc4b7],dl
	...
  44b8c4:	dec    eax
  44b8c5:	shl    BYTE PTR [ebx+0x63],0x49
  44b8c9:	popa   
  44b8ca:	pop    edi
  44b8cb:	je     0x44b912
  44b8cd:	push   edi
  44b8ce:	arpl   WORD PTR [ebx-0x1],si
  44b8d1:	pusha  
  44b8d2:	pop    edi
  44b8d3:	jo     0x44b91d
  44b8d5:	ins    BYTE PTR es:[edi],dx
  44b8d6:	push   bx
  44b8d8:	sub    eax,0xfa006470
  44b8dd:	xchg   ecx,eax
  44b8de:	inc    ecx
  44b8df:	gs sub bh,cl
  44b8e2:	arpl   WORD PTR [esi+0x3b],bp
  44b8e5:	addr16 push 0x772553
  44b8eb:	add    BYTE PTR [edx+0x2572358b],bl
  44b8f1:	arpl   WORD PTR [esi+edx*2-0x7],bp
  44b8f5:	popa   
  44b8f6:	pop    edi
  44b8f7:	adc    ax,0x5fc1
  44b8fb:	addr16 bnd jb 0x44b96b
  44b8ff:	jne    0x44b8ef
  44b901:	jbe    0x44b954
  44b903:	add    BYTE PTR [ecx-0x6e],bl
  44b906:	xor    eax,0x6c5bf572
  44b90b:	inc    edi
  44b90c:	jmp    0xa5a9f670
  44b911:	mov    ebx,0x6ebd7257
  44b916:	add    BYTE PTR [eax],al
  44b918:	es xchg edx,eax
  44b91a:	xor    eax,0x6c5bc572
  44b91f:	dec    ecx
  44b920:	push   ecx
  44b921:	bound  ebp,QWORD PTR [ecx+0x72]
  44b924:	dec    eax
  44b925:	(bad)  
  44b926:	arpl   WORD PTR [ecx+0x0],di
	...
  44b939:	add    BYTE PTR [eax],al
  44b93b:	add    BYTE PTR [edx+edx*4-0x4f],cl
  44b93f:	add    BYTE PTR [edi+0x28706f61],cl
  44b945:	push   esi
  44b946:	arpl   WORD PTR [ebx+0x8],si
  44b949:	pusha  
  44b94a:	imul   edi,DWORD PTR [ecx+0x67],0xb5006f75
  44b951:	test   BYTE PTR [ebx],0x3d
  44b954:	xchg   DWORD PTR [edi],edi
  44b956:	xor    al,0x74
  44b958:	jno    0x44b99d
  44b95a:	xor    DWORD PTR [edi+eax*4+0x45],esi
  44b95e:	cmp    ecx,DWORD PTR [eax-0x6c]
  44b961:	fldcw  WORD PTR [ebx]
  44b963:	add    BYTE PTR [ebp+0x664702ad],dh
  44b969:	aad    0x16
  44b96b:	ins    BYTE PTR es:[edi],dx
  44b96c:	push   ecx
  44b96d:	loope  0x44b98c
  44b96f:	imul   esp,DWORD PTR [edx+0xe],0x28596751
  44b976:	add    al,0x6c
  44b978:	mov    ch,0xe9
  44b97a:	sbb    al,0x6a
  44b97c:	dec    ebx
  44b97d:	or     esi,DWORD PTR [edx]
  44b97f:	je     0x44b9e7
  44b981:	prefetcht1 BYTE PTR [edx+eiz*1-0x6]
  44b986:	daa    
  44b987:	outs   dx,BYTE PTR ds:[esi]
  44b988:	sbb    al,0xbd
  44b98a:	sub    ecx,DWORD PTR [ebp+0xc]
  44b98d:	retf   
  44b98e:	pop    ebx
  44b98f:	add    BYTE PTR [ebp+0x442fd25],dh
  44b995:	mov    esp,0xbfe66c1d
  44b99a:	sub    BYTE PTR [eax],al
  44b99c:	mov    ch,0x8f
  44b99e:	dec    BYTE PTR [ebp+0x0]
	...
  44b9b1:	add    BYTE PTR [eax],al
  44b9b3:	add    BYTE PTR [eax],dl
  44b9b5:	(bad)  
  44b9b6:	aas    
  44b9b7:	outs   dx,BYTE PTR ds:[esi]
  44b9b8:	fadd   st,st(7)
  44b9ba:	cmp    BYTE PTR [ebx-0x2],ah
  44b9bd:	and    DWORD PTR ds:0xfc5ddd43,0x2f
  44b9c4:	mov    bh,0x58
  44b9c6:	sub    DWORD PTR [ecx-0xa],esp
  44b9c9:	adc    ah,BYTE PTR [ebx]
  44b9cb:	ins    DWORD PTR es:[edi],dx
  44b9cc:	shl    BYTE PTR [ecx+0x29],1
  44b9cf:	ja     0x44b986
  44b9d1:	adc    edi,ebp
  44b9d3:	inc    esi
  44b9d4:	retf   
  44b9d5:	(bad)  
  44b9d6:	cmp    BYTE PTR [edi-0x6c],ah
  44b9d9:	sbb    ch,BYTE PTR [ecx]
  44b9db:	dec    ebp
  44b9dc:	lods   al,BYTE PTR ds:[esi]
  44b9dd:	(bad)  
  44b9de:	fidiv  DWORD PTR [edi]
  44b9e0:	xchg   esi,eax
  44b9e1:	mov    ds:0x9ba61bba,al
  44b9e6:	lds    esp,FWORD PTR [edx]
  44b9e8:	test   BYTE PTR [ebp-0x709bd464],ah
  44b9ee:	and    eax,0xc0a1c004
  44b9f3:	xor    eax,DWORD PTR [ecx+0x7d37c4cc]
  44b9f9:	scas   al,BYTE PTR es:[edi]
  44b9fa:	mov    edx,0x9bae851b
  44b9ff:	and    al,0x4e
  44ba01:	(bad)  
  44ba02:	pop    eax
  44ba03:	add    al,0x98
  44ba05:	mov    eax,ds:0xce493390
  44ba0a:	mov    dh,BYTE PTR [esi+eax*2]
  44ba0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ba0e:	jnp    0x44ba38
  44ba10:	and    BYTE PTR [edi+eax*4+0x75975637],0x5a
	...
  44ba2c:	mov    ch,0x8f
  44ba2e:	and    al,BYTE PTR [eax+ebp*8]
  44ba31:	mov    eax,ds:0xc2293460
  44ba36:	cmp    al,0x20
  44ba38:	push   ss
  44ba39:	scas   eax,DWORD PTR es:[edi]
  44ba3a:	pop    edx
  44ba3b:	sub    eax,edx
  44ba3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ba3e:	aaa    
  44ba3f:	cmp    BYTE PTR [esi],dl
  44ba41:	cwde   
  44ba42:	xor    eax,0x2a8f5004
  44ba47:	add    ah,BYTE PTR ss:[eax-0x551cb8cb]
  44ba4e:	dec    eax
  44ba4f:	cmp    dh,dl
  44ba51:	(bad)  
  44ba52:	or     BYTE PTR [edi],dh
  44ba54:	int    0x8f
  44ba56:	mov    cl,0x3
  44ba58:	cwde   
  44ba59:	mov    eax,ds:0xc7c93410
  44ba5e:	or     BYTE PTR [edi],dh
  44ba60:	(bad)  
  44ba62:	or     BYTE PTR [eax],bh
  44ba64:	loop   0x44b9f5
  44ba66:	pop    es
  44ba67:	push   es
  44ba68:	jmp    0x44ba14
  44ba6a:	add    BYTE PTR [esi],cl
  44ba6c:	mov    BYTE PTR [eax-0x3e2604a3],ah
  44ba72:	popa   
  44ba73:	aad    0xdd
  44ba75:	mov    al,0x3d
  44ba77:	loope  0x44baf8
  44ba79:	pop    DWORD PTR [eax]
  44ba7b:	enter  0xc5b8,0x5d
  44ba7f:	(bad)  
  44ba80:	ja     0x44ba21
  44ba82:	pop    ebp
  44ba83:	xlat   BYTE PTR ds:[ebx]
  44ba84:	ret    
  44ba85:	mov    al,0x79
  44ba87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ba88:	into   
  44ba89:	mov    esi,0xc5b8b700
  44ba8e:	pop    ebp
  44ba8f:	mov    BYTE PTR [eax],0x0
	...
  44baa2:	add    BYTE PTR [eax],al
  44baa4:	xor    DWORD PTR [eax-0x5c664094],0x6d
  44baab:	test   BYTE PTR [ebp-0x69],ch
  44baae:	dec    edi
  44baaf:	jmp    0x9e46d96a
  44bab4:	xchg   BYTE PTR [eax-0x5977669a],dh
  44baba:	arpl   WORD PTR [ebx+eax*4-0x2c79b35e],ax
  44bac1:	scas   al,BYTE PTR es:[edi]
  44bac2:	jmpw   0x7b7c
  44bac6:	add    DWORD PTR [esi],ebp
  44bac8:	ficomp DWORD PTR [ebx-0x3b32afad]
  44bace:	ins    DWORD PTR es:[edi],dx
  44bacf:	dec    ebx
  44bad0:	neg    BYTE PTR [esi-0x5e2bbe94]
  44bad6:	imul   edi,DWORD PTR ds:0xbd008fce,0x4c70c8b6
  44bae0:	xchg   edi,eax
  44bae1:	mov    ebx,0xb2923b68
  44bae6:	pop    esp
  44bae7:	cmp    eax,0xf5dac94
  44baec:	mov    cl,0xb7
  44baee:	add    DWORD PTR [esi],ebp
  44baf0:	call   0x6dc4:0x9d00539b
  44baf7:	add    BYTE PTR [esi-0x5b8b8c32],ch
  44bafd:	jo     0x44bb65
  44baff:	imul   esi,DWORD PTR [eax],0x216f3566
  44bb05:	jno    0x44bb73
	...
  44bb1b:	add    BYTE PTR [eax],bl
  44bb1d:	(bad)  
  44bb1e:	xor    eax,0x6c6df172
  44bb23:	gs dec esp
  44bb25:	pop    ebp
  44bb26:	imul   esp,DWORD PTR [ebx-0xf],0x3f41655b
  44bb2d:	mov    edx,0xb83e6565
  44bb32:	add    BYTE PTR [eax],al
  44bb34:	xchg   ebx,eax
  44bb35:	mov    es,WORD PTR [edi+ebp*2+0x2b]
  44bb39:	je     0x44bbae
  44bb3b:	jo     0x44bb59
  44bb3d:	pop    ebp
  44bb3e:	pop    edi
  44bb3f:	jbe    0x44bb86
  44bb41:	jae    0x44bba6
  44bb43:	addr16 inc ecx
  44bb45:	mov    ecx,0x6a216c57
  44bb4a:	push   ecx
  44bb4b:	add    bl,bl
  44bb4d:	mov    ?,WORD PTR [edi]
  44bb4f:	fs es pop edx
  44bb52:	gs je  0x44bba5
  44bb55:	outs   dx,DWORD PTR ds:[esi]
  44bb56:	pop    ebp
  44bb57:	sub    bh,BYTE PTR gs:[edi+0x77026966]
  44bb5e:	fs gs repz push 0x65
  44bb63:	add    ch,bl
  44bb65:	(bad)  
  44bb66:	push   edx
  44bb67:	inc    ecx
  44bb68:	int3   
  44bb69:	push   esi
  44bb6a:	and    eax,0x6467aa32
  44bb6f:	ins    BYTE PTR es:[edi],dx
  44bb70:	mov    WORD PTR [esi+0x6ecc003f],cs
  44bb76:	ins    BYTE PTR es:[edi],dx
  44bb77:	push   0x646a7692
  44bb7c:	xchg   edx,eax
  44bb7d:	jbe    0x44bbe3
  44bb7f:	add    BYTE PTR gs:[eax],al
	...
  44bb92:	add    BYTE PTR [eax],al
  44bb94:	mov    ch,BYTE PTR [esi+0x6b]
  44bb97:	gs mov ch,0x51
  44bb9a:	cld    
  44bb9b:	test   BYTE PTR [ebp-0x328bdca8],dh
  44bba1:	jbe    0x44bbc2
  44bba3:	imul   ecx,edx,0x1a
  44bba6:	pop    ds
  44bba7:	inc    edx
  44bba8:	pushf  
  44bba9:	mov    WORD PTR [edi],ds
  44bbab:	dec    ebp
  44bbac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bbad:	mov    ebx,DWORD PTR ds:0x38db551
  44bbb3:	dec    ebp
  44bbb4:	mov    eax,ds:0x856b3d36
  44bbb9:	jmp    0x4d03:0x86b50042
  44bbc0:	mov    esi,edx
  44bbc2:	cmp    al,0x6b
  44bbc4:	test   edx,esp
  44bbc6:	pop    eax
  44bbc7:	add    BYTE PTR [ebp+0x545003a3],dh
  44bbcd:	fcomp  QWORD PTR [ebx]
  44bbcf:	dec    esi
  44bbd0:	pop    eax
  44bbd1:	sti    
  44bbd2:	and    BYTE PTR [edx+0x50],dh
  44bbd5:	out    0x22,al
  44bbd7:	pop    ebp
  44bbd8:	pop    esi
  44bbd9:	cmc    
  44bbda:	pop    ss
  44bbdb:	pop    edi
  44bbdc:	inc    esi
  44bbdd:	adc    BYTE PTR [ecx+0x0],bl
  44bbe0:	mov    ch,0x98
  44bbe2:	add    dh,BYTE PTR [ecx+0x43]
  44bbe5:	add    ch,BYTE PTR ds:0x22102770
  44bbeb:	je     0x44bc00
  44bbed:	cli    
  44bbee:	add    ebp,DWORD PTR [ecx-0x4c]
  44bbf1:	mov    cl,0x2e
  44bbf3:	push   0x26
  44bbf5:	mov    bh,0x32
  44bbf7:	add    BYTE PTR [bx+si],al
	...
  44bc0a:	add    BYTE PTR [eax],al
  44bc0c:	and    esi,DWORD PTR [ebx-0x424ac0e2]
  44bc12:	cld    
  44bc13:	dec    edi
  44bc14:	adc    al,0x53
  44bc16:	adc    al,0x4b
  44bc18:	adc    al,0x5b
  44bc1a:	and    ebp,DWORD PTR [eax+0x6]
  44bc1d:	push   edi
  44bc1e:	sub    DWORD PTR [ebp+0x2],ebx
  44bc21:	daa    
  44bc22:	add    al,0x1f
  44bc24:	mov    ah,0x8f
  44bc26:	cmp    bh,BYTE PTR [eax]
  44bc28:	retf   
  44bc29:	int3   
  44bc2a:	add    al,0x34
  44bc2c:	inc    esi
  44bc2e:	ss add al,0xf4
  44bc31:	(bad)  
  44bc32:	cmp    DWORD PTR ds:0x1d27a7c9,esp
  44bc38:	iret   
  44bc39:	stos   DWORD PTR es:[edi],eax
  44bc3a:	sbb    al,0x2c
  44bc3c:	test   eax,0x9232ffaa
  44bc41:	mov    al,ds:0x8fb556f7
  44bc46:	sbb    DWORD PTR [eax*4-0x2de43252],eax
  44bc4d:	stos   DWORD PTR es:[edi],eax
  44bc4e:	lds    eax,FWORD PTR [ecx+0x6a]
  44bc51:	lods   al,BYTE PTR ds:[esi]
  44bc52:	ret    0x9132
  44bc55:	scas   al,BYTE PTR es:[edi]
  44bc56:	mov    edx,0xb68f641b
  44bc5b:	add    eax,DWORD PTR [ebp+0x7a1bb5ae]
  44bc61:	call   0x2499:0xbc5637b6
  44bc68:	js     0x44bc14
  44bc6a:	call   0x3:0xb48fb556
	...
  44bc81:	add    BYTE PTR [eax],al
  44bc83:	add    BYTE PTR [ebp-0x52],ah
  44bc86:	lea    ebx,[ebx]
  44bc88:	je     0x44bc34
  44bc8a:	jne    0x44bcd3
  44bc8c:	dec    ebx
  44bc8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bc8e:	outs   dx,DWORD PTR ds:[esi]
  44bc8f:	sub    bh,bh
  44bc91:	call   0x38e:0x9e16217c
  44bc98:	sbb    ecx,DWORD PTR [edi-0x44f6cdcc]
  44bc9e:	inc    edi
  44bc9f:	sub    DWORD PTR [eax],esp
  44bca1:	lods   eax,DWORD PTR ds:[esi]
  44bca2:	dec    eax
  44bca3:	xor    al,0x16
  44bca5:	iret   
  44bca6:	jmp    0x1ad35bae
  44bcab:	cmp    BYTE PTR [ebx],cl
  44bcad:	int    0x44
  44bcaf:	xor    al,0xff
  44bcb1:	mov    BYTE PTR [eax],0x28
  44bcb4:	mov    cl,0xa2
  44bcb6:	add    BYTE PTR [ecx],bl
  44bcb8:	cwde   
  44bcb9:	fwait
  44bcba:	push   0x52bca630
  44bcbf:	sub    eax,0xdf008fea
  44bcc4:	mov    cl,0xc2
  44bcc6:	ins    BYTE PTR es:[edi],dx
  44bcc7:	sbb    esp,edi
  44bcc9:	push   edx
  44bcca:	push   0x8ff1fb
  44bccf:	loopne 0x44bc8a
  44bcd1:	ret    0xfb6c
  44bcd4:	ja     0x44bc7a
  44bcd6:	jo     0x44bcf8
  44bcd8:	mov    cl,BYTE PTR [edi-0x3d4e0300]
  44bcde:	ins    BYTE PTR es:[edi],dx
  44bcdf:	(bad)  [edi-0x59]
  44bce2:	jb     0x44bca2
  44bce4:	mov    dh,0x86
  44bce6:	add    DWORD PTR [edx+0x0],edi
	...
  44bcfc:	retf   0x43a1
  44bcff:	rol    esp,1
  44bd01:	push   eax
  44bd02:	add    BYTE PTR [edx-0x4a],bl
  44bd05:	mov    edi,0xc2cebd61
  44bd0a:	imul   eax,eax,0xffffffa6
  44bd0d:	shl    DWORD PTR [edi-0x6a],0xa2
  44bd11:	mov    esi,0xbfb67e00
  44bd16:	popa   
  44bd17:	popf   
  44bd18:	scas   al,BYTE PTR es:[edi]
  44bd19:	mov    esp,0xa67d9866
  44bd1e:	ins    BYTE PTR es:[edi],dx
  44bd1f:	mov    WORD PTR [edi-0x61],fs
  44bd22:	popa   
  44bd23:	mov    bl,ch
  44bd25:	jl     0x44bd76
  44bd27:	jmp    0x9a45fde2
  44bd2c:	ficom  WORD PTR [ebx+0x5d]
  44bd2f:	push   ebp
  44bd30:	rol    BYTE PTR [ebx+0x7bd6375d],cl
  44bd36:	ins    DWORD PTR es:[edi],dx
  44bd37:	dec    esp
  44bd38:	loopne 0x44bcc9
  44bd3a:	add    BYTE PTR [edx+0x485cb9],bl
  44bd40:	enter  0x64b6,0x65
  44bd44:	test   al,0xb6
  44bd46:	cmp    eax,0x64a565
  44bd4b:	add    bh,al
  44bd4d:	xchg   ebx,eax
  44bd4e:	push   eax
  44bd4f:	popa   
  44bd50:	mov    eax,0x98733fab
  44bd55:	stos   BYTE PTR es:[edi],al
  44bd56:	gs mov di,0x69c7
  44bd5b:	jb     0x44bd02
  44bd5d:	add    BYTE PTR fs:[eax],al
	...
  44bd74:	(bad)  
  44bd75:	xchg   edx,eax
  44bd76:	push   eax
  44bd77:	popa   
  44bd78:	sub    BYTE PTR [ebx+0x56b86437],ch
  44bd7e:	js     0x44bdf4
  44bd80:	mov    ecx,0x36965ad
  44bd85:	lods   eax,DWORD PTR ds:[esi]
  44bd86:	push   ecx
  44bd87:	add    BYTE PTR [edi-0x35],cl
  44bd8a:	inc    esp
  44bd8b:	push   edi
  44bd8c:	pop    ebp
  44bd8d:	arpl   WORD PTR [edi],di
  44bd8f:	cs clc 
  44bd91:	scas   al,BYTE PTR es:[edi]
  44bd92:	add    BYTE PTR fs:[edx],cl
  44bd95:	xchg   ebx,eax
  44bd96:	xor    eax,0x57ae016f
  44bd9b:	outs   dx,BYTE PTR ds:[esi]
  44bd9c:	clc    
  44bd9d:	into   
  44bd9e:	pop    edi
  44bd9f:	outs   dx,BYTE PTR ds:[esi]
  44bda0:	stc    
  44bda1:	imul   ax,WORD PTR [ecx+0x3e],0x72b4
  44bda7:	push   edi
  44bda8:	fcom   QWORD PTR [edx-0x34f0ff4b]
  44bdae:	inc    ecx
  44bdaf:	sub    BYTE PTR gs:[ebp+0x69],dl
  44bdb3:	ins    BYTE PTR es:[edi],dx
  44bdb4:	sub    BYTE PTR [esi-0x39c2af9a],dh
  44bdba:	push   0x16929c57
  44bdbf:	add    DWORD PTR [edi],edi
  44bdc1:	stos   BYTE PTR es:[edi],al
  44bdc2:	arpl   WORD PTR [eax+eax*1+0x57],bp
  44bdc6:	js     0x44be2d
  44bdc8:	inc    esi
  44bdca:	ins    BYTE PTR es:[edi],dx
  44bdcb:	gs mov ch,0xcd
  44bdce:	cld    
  44bdcf:	dec    esp
  44bdd0:	in     eax,dx
  44bdd1:	mov    bl,0x40
  44bdd3:	dec    esp
  44bdd4:	(bad)  
  44bdd5:	or     dl,dh
  44bdd7:	arpl   WORD PTR [eax],ax
	...
  44bde9:	add    BYTE PTR [eax],al
  44bdeb:	add    cl,ah
  44bded:	pop    esp
  44bdee:	cld    
  44bdef:	sbb    DWORD PTR [ebp+0x8741fbd],esi
  44bdf5:	retf   0x6e1f
  44bdf8:	jmp    0x44bd91
  44bdfa:	pop    ss
  44bdfb:	arpl   ax,di
  44bdfd:	mov    al,0x4d
  44bdff:	add    BYTE PTR [ebp-0x37a2e037],dh
  44be05:	stos   BYTE PTR es:[edi],al
  44be06:	icebp  
  44be07:	sub    eax,0x6c209c8b
  44be0c:	mov    ch,0xa0
  44be0e:	cld    
  44be0f:	cmp    al,0x9a
  44be11:	lods   al,BYTE PTR ds:[esi]
  44be12:	and    ebp,DWORD PTR [ebp-0x72]
  44be15:	stos   DWORD PTR es:[edi],eax
  44be16:	pop    ds
  44be17:	imul   esi,DWORD PTR [ebx-0x16],0x1e
  44be1b:	arpl   WORD PTR [ebp-0x65c2fbf8],si
  44be21:	cmp    DWORD PTR [edx],esi
  44be23:	arpl   WORD PTR [esp+eiz*8+0x498b471e],dx
  44be2a:	xor    BYTE PTR [edi+0x63],bl
  44be2d:	fstp   DWORD PTR [esi]
  44be2f:	add    BYTE PTR [ebp+0x523d03d4],dh
  44be35:	and    edx,DWORD PTR [esi]
  44be37:	addr16 dec ebx
  44be39:	pop    ds
  44be3a:	xor    BYTE PTR [edi+0x54],ah
  44be3d:	sbb    al,0x1b
  44be3f:	jbe    0x44be91
  44be41:	clc    
  44be42:	add    eax,DWORD PTR [eax-0x4b]
  44be45:	cmp    DWORD PTR ds:0x301f4b47,edx
  44be4b:	addr16 adc al,0x1b
  44be4e:	sbb    esi,DWORD PTR [esi+0x0]
	...
  44be61:	add    BYTE PTR [eax],al
  44be63:	add    BYTE PTR [eax],dl
  44be65:	sub    bl,BYTE PTR [edi]
  44be67:	pop    ebp
  44be68:	sub    BYTE PTR [ecx-0x6fe38be6],cl
  44be6e:	jmp    0x2ad48a76
  44be73:	sbb    esi,edx
  44be75:	jge    0x44beb7
  44be77:	xor    BYTE PTR [edx],bl
  44be79:	outs   dx,DWORD PTR ds:[esi]
  44be7a:	xor    eax,0x2473031d
  44be7f:	sub    al,0xb5
  44be81:	(bad)  
  44be82:	icebp  
  44be83:	add    ebp,DWORD PTR [eax-0x6c2e5a5]
  44be89:	push   ebp
  44be8a:	cmp    ebx,DWORD PTR [ebx]
  44be8c:	into   
  44be8d:	pusha  
  44be8e:	adc    eax,0xfe7dda36
  44be93:	add    eax,edx
  44be95:	mov    ?,WORD PTR [edx]
  44be97:	xor    bl,dl
  44be99:	jbe    0x44be92
  44be9b:	and    dh,bh
  44be9d:	or     DWORD PTR [esi],0x30627419
  44bea3:	inc    eax
  44bea4:	fisttp DWORD PTR [edi-0x7e1ffb99]
  44beaa:	cld    
  44beab:	and    al,0xa1
  44bead:	jb     0x44be69
  44beaf:	das    
  44beb0:	mov    ds:0x7c18c872,eax
  44beb5:	jge    0x44be58
  44beb7:	inc    edx
  44beb8:	xchg   ecx,eax
  44beb9:	jl     0x44be86
  44bebb:	and    al,0x89
  44bebd:	(bad)
  44bec1:	jl     0x44be5d
  44bec3:	and    BYTE PTR [ecx+0x5f],ah
  44bec6:	mov    ebx,0x1a
	...
  44bedb:	add    BYTE PTR [ebp-0x7a],bl
  44bede:	stos   DWORD PTR es:[edi],eax
  44bedf:	pop    ss
  44bee0:	jp     0x44bf5f
  44bee2:	xchg   edx,eax
  44bee3:	and    BYTE PTR [ecx-0x71],cl
  44bee6:	xchg   BYTE PTR [edi],dl
  44bee8:	push   esi
  44bee9:	rcr    bl,0xd9
  44beec:	push   esi
  44beed:	jnp    0x44bf64
  44beef:	add    ecx,DWORD PTR [edi+ecx*4+0x6f1635aa]
  44bef6:	ins    DWORD PTR es:[edi],dx
  44bef7:	and    al,ch
  44bef9:	jl     0x44befb
  44befb:	test   dh,ah
  44befd:	ins    BYTE PTR es:[edi],dx
  44befe:	ins    BYTE PTR es:[edi],dx
  44beff:	adc    al,0x7b
  44bf02:	pop    ebp
  44bf03:	sub    esi,DWORD PTR [eax-0x3eb79a7d]
  44bf09:	pop    DWORD PTR [eax]
  44bf0b:	sbb    DWORD PTR [ecx-0x2fbb8d36],edi
  44bf11:	sbb    DWORD PTR [ebp+0x2a],0xffffffce
  44bf15:	js     0x44bf87
  44bf17:	dec    eax
  44bf18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bf19:	je     0x44bf7d
  44bf1b:	inc    ebp
  44bf1c:	xchg   esp,eax
  44bf1d:	push   ebx
  44bf1e:	inc    ebx
  44bf1f:	jmp    0x3a473dda
  44bf24:	xchg   esp,eax
  44bf25:	jnp    0x44bf84
  44bf27:	or     al,BYTE PTR [ebp-0x6bfc9daa]
  44bf2d:	push   0x6c
  44bf2f:	jmp    0x2d45b0ea
  44bf34:	aam    0x7b
  44bf36:	pop    ebp
  44bf37:	cmc    
  44bf38:	aad    0x56
  44bf3a:	bound  eax,QWORD PTR [ebx]
  44bf3c:	aam    0x6a
  44bf3e:	ins    BYTE PTR es:[edi],dx
  44bf3f:	jmp    0x44bf44
	...
  44bf54:	mov    dh,0xbd
  44bf56:	add    BYTE PTR [edx-0x2a9e8f38],ch
  44bf5c:	aad    0x53
  44bf5e:	inc    ebx
  44bf5f:	mov    esi,0xa601d2b6
  44bf64:	aad    0x83
  44bf66:	cmp    al,0xcc
  44bf68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bf69:	je     0x44bfce
  44bf6b:	les    esi,FWORD PTR [ebx+0x6c]
  44bf6e:	jo     0x44bf2a
  44bf70:	mov    dh,0xea
  44bf72:	add    BYTE PTR [ebp-0x62a2846b],ah
  44bf78:	xchg   ebp,eax
  44bf79:	push   ebx
  44bf7a:	inc    ebx
  44bf7b:	jmp    0xab455a36
  44bf80:	mov    eax,ds:0x8a7d4283
  44bf85:	pop    DWORD PTR [eax]
  44bf87:	add    BYTE PTR [ebp-0x6b],al
  44bf8a:	inc    esi
  44bf8b:	gs das 
  44bf8d:	mov    ebx,0xcb317269
  44bf92:	xor    eax,0x45951c00
  44bf97:	popa   
  44bf98:	repnz stos BYTE PTR es:[edi],al
  44bf9a:	cmp    al,0x43
  44bf9c:	pushf  
  44bf9d:	(bad)  
  44bf9e:	mov    al,ds:0x6caabf02
  44bfa3:	push   edx
  44bfa4:	icebp  
  44bfa5:	mov    ah,0x6c
  44bfa7:	push   edx
  44bfa8:	add    esp,DWORD PTR [esi-0x715f0000]
  44bfae:	inc    ecx
  44bfaf:	fs cmc 
  44bfb1:	dec    ebp
  44bfb2:	fs jne 0x44bf54
  44bfb5:	stos   DWORD PTR es:[edi],eax
	...
  44bfca:	add    BYTE PTR [eax],al
  44bfcc:	in     eax,0x91
  44bfce:	inc    ebp
  44bfcf:	mov    al,gs:0xa3655f5d
  44bfd5:	ret    
  44bfd6:	imul   esi,DWORD PTR [edx-0x60],0xe16766c8
  44bfdd:	mov    ebx,0x8f660000
  44bfe2:	inc    ecx
  44bfe3:	gs and bl,cl
  44bfe6:	aas    
  44bfe7:	inc    edx
  44bfe8:	mov    ch,0xbf
  44bfea:	add    BYTE PTR gs:[ecx-0xe8dca6d],dh
  44bff1:	lods   eax,DWORD PTR ds:[esi]
  44bff2:	ins    BYTE PTR es:[edi],dx
  44bff3:	gs push eax
  44bff5:	(bad)  
  44bff6:	ss push ebx
  44bff8:	icebp  
  44bff9:	mov    bl,0x6c
  44bffb:	imul   ecx,DWORD PTR [ebx],0x130000a9
  44c001:	retf   
  44c002:	aas    
  44c003:	xor    ebx,esi
  44c005:	call   0x8f5d2c6d
  44c00a:	mov    BYTE PTR [eax],al
  44c00c:	inc    edx
  44c00d:	lds    esp,FWORD PTR [ebx+0x65]
  44c010:	cmp    eax,0xb5725cab
  44c015:	bndldx (bad),[edx+0x4a]
  44c019:	clc    
  44c01a:	add    eax,DWORD PTR [edi+0x741719b5]
  44c020:	adc    al,0x15
  44c022:	sbb    BYTE PTR [esi+0xc],ch
  44c025:	adc    esp,DWORD PTR [edx]
  44c027:	imul   esi,DWORD PTR [ebp-0x19aefc16],0x6443b7
	...
  44c041:	add    BYTE PTR [eax],al
  44c043:	add    BYTE PTR [ecx],dl
  44c045:	addr16 pop ss
  44c047:	ins    DWORD PTR es:[edi],dx
  44c048:	push   es
  44c049:	int    0x19
  44c04b:	dec    ebp
  44c04c:	add    DWORD PTR [edi+0x1b],esp
  44c04f:	push   0xffffffda
  44c051:	mov    bh,0xfc
  44c053:	pop    ds
  44c054:	mov    ch,0xa1
  44c056:	dec    ebp
  44c057:	aas    
  44c058:	test   dh,0x17
  44c05b:	pop    edi
  44c05c:	loope  0x44c0b1
  44c05e:	aaa    
  44c05f:	jb     0x44c039
  44c061:	mov    ds:0xdeb50030,al
  44c066:	add    edx,DWORD PTR [ecx-0x1a]
  44c069:	mov    bh,0x37
  44c06b:	jb     0x44c03d
  44c06d:	or     ch,BYTE PTR [eax]
  44c06f:	dec    ebp
  44c070:	cwde   
  44c071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c072:	pop    ss
  44c073:	pop    ebp
  44c074:	mov    eax,ds:0xb52103f8
  44c079:	test   eax,0xa703f4d
  44c07e:	daa    
  44c07f:	imul   eax,DWORD PTR [ebx-0x658ed825],0xffffffe6
  44c086:	adc    al,0x43
  44c088:	mov    ebx,ebx
  44c08a:	sbb    DWORD PTR [esi+eax*4-0x8],esi
  44c08e:	add    esi,DWORD PTR [edx]
  44c090:	mov    ch,0x29
  44c092:	dec    ebp
  44c093:	aas    
  44c094:	jl     0x44c06f
  44c096:	sbb    al,0x74
  44c098:	push   ecx
  44c099:	clc    
  44c09a:	add    edx,DWORD PTR ds:0x3f4d21b5
  44c0a0:	jbe    0x44c031
  44c0a2:	lea    ebx,[eax]
  44c0a4:	pop    eax
  44c0a5:	je     0x44c043
  44c0a7:	xor    DWORD PTR [eax],eax
	...
  44c0b9:	add    BYTE PTR [eax],al
  44c0bb:	add    BYTE PTR [esi+0x79],dl
  44c0be:	xchg   ebp,eax
  44c0bf:	add    esi,DWORD PTR [edx-0x71]
  44c0c2:	scas   al,BYTE PTR es:[edi]
  44c0c3:	push   esp
  44c0c4:	repnz pop esp
  44c0c6:	test   BYTE PTR [ecx],bl
  44c0c8:	adc    DWORD PTR [eax+0x5d04039d],edx
  44c0ce:	test   al,0x55
  44c0d0:	push   ss
  44c0d1:	ins    DWORD PTR es:[edi],dx
  44c0d2:	outs   dx,DWORD PTR ds:[esi]
  44c0d3:	add    esp,esp
  44c0d5:	pop    esp
  44c0d6:	sbb    eax,DWORD PTR [edi-0x28]
  44c0d9:	mov    ebp,0x7c112007
  44c0de:	jmp    0x2ad45ae6
  44c0e3:	and    ebx,esp
  44c0e5:	and    DWORD PTR ds:0x2d72d921,0x21
  44c0ec:	mov    al,ds:0xd2303b72
  44c0f1:	jno    0x44c133
  44c0f3:	and    esi,edx
  44c0f5:	add    DWORD PTR [esi+edi*1],0xffffffdb
  44c0f9:	js     0x44c0ff
  44c0fb:	push   ebx
  44c0fc:	leave  
  44c0fd:	js     0x44c11a
  44c0ff:	and    DWORD PTR [ebp-0xffbcf71],esi
  44c105:	jb     0x44c102
  44c107:	das    
  44c108:	jl     0x44c189
  44c10a:	cld    
  44c10b:	adc    eax,0x2ffa8670
  44c110:	xchg   esi,eax
  44c111:	jp     0x44c12d
  44c113:	xor    BYTE PTR [ebp+edi*2-0x704ab13c],bl
  44c11a:	sti    
  44c11b:	add    eax,eax
  44c11d:	jb     0x44c0fa
  44c11f:	das    
	...
  44c134:	mov    eax,0x5632b67b
  44c139:	pop    esp
  44c13a:	mov    ch,0x16
  44c13c:	pop    ebx
  44c13d:	jb     0x44c128
  44c13f:	add    eax,esp
  44c141:	mov    es,WORD PTR [eax]
  44c143:	cdq    
  44c144:	cwde   
  44c145:	addr16 dec ecx
  44c147:	mov    esp,0x9d727686
  44c14c:	ja     0x44c1ba
  44c14e:	jb     0x44c0e5
  44c150:	and    DWORD PTR [bx-0x65],0xffffff95
  44c155:	pop    DWORD PTR [eax]
  44c157:	mov    ebp,0x7b5dcab6
  44c15c:	fimul  DWORD PTR [esi+eiz*2+0x74]
  44c160:	mov    ebp,0xca7b5dca
  44c165:	jo     0x44c1c5
  44c167:	adc    bh,0x68
  44c16a:	ins    BYTE PTR es:[edi],dx
  44c16b:	dec    esp
  44c16c:	(bad)  
  44c16d:	push   eax
  44c16e:	data16 cmp al,ch
  44c171:	jbe    0x44c1e5
  44c173:	dec    esp
  44c174:	mov    cl,0xac
  44c176:	add    BYTE PTR [edx],ch
  44c178:	xchg   esp,eax
  44c179:	jns    0x44c1e7
  44c17b:	sub    eax,0x50647fa4
  44c180:	xchg   esi,eax
  44c181:	push   0x6cf64c6c
  44c186:	jb     0x44c1bd
  44c188:	mov    al,0x6d
  44c18a:	imul   ecx,DWORD PTR [edx],0x2a5d8390
  44c190:	stos   BYTE PTR es:[edi],al
  44c191:	jne    0x44c1ff
  44c193:	or     al,0x89
  44c195:	add    DWORD PTR [eax],0xfffffff7
	...
  44c1ac:	mov    ecx,0x74213e5f
  44c1b1:	xchg   DWORD PTR [eax+0xe],esi
  44c1b4:	out    0x83,eax
  44c1b6:	inc    ebx
  44c1b7:	or     al,0xe7
  44c1b9:	adc    DWORD PTR [ebx-0xb],0xffffffab
  44c1bd:	jns    0x44c21c
  44c1bf:	lods   al,BYTE PTR ds:[esi]
  44c1c0:	fimul  WORD PTR [edi-0x3549be00]
  44c1c6:	jb     0x44c198
  44c1c8:	mov    BYTE PTR [ebx+0x79a6bf4d],0x67
  44c1cf:	add    BYTE PTR [eax],ch
  44c1d1:	scas   eax,DWORD PTR es:[edi]
  44c1d2:	push   ebp
  44c1d3:	je     0x44c1ed
  44c1d5:	mov    bl,0x6c
  44c1d7:	popa   
  44c1d8:	int3   
  44c1d9:	mov    esi,DWORD PTR ds:0x4c5c2552
  44c1df:	xor    ebp,esi
  44c1e1:	loope  0x44c246
  44c1e3:	ins    BYTE PTR es:[edi],dx
  44c1e4:	xor    BYTE PTR [ecx+ebx*4+0x6ca21500],cl
  44c1eb:	gs dec esi
  44c1ed:	popf   
  44c1ee:	arpl   WORD PTR [esi+ecx*2-0x50],si
  44c1f2:	push   edi
  44c1f3:	fs pop edx
  44c1f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c1f6:	fs mov WORD PTR gs:[ebx-0x48abffb1],ss
  44c1fe:	ins    BYTE PTR es:[edi],dx
  44c1ff:	jo     0x44c1ce
  44c201:	mov    dh,0x63
  44c203:	jb     0x44c21a
  44c205:	retf   
  44c206:	push   0x66
  44c208:	repz push edx
  44c20a:	add    BYTE PTR [eax],al
  44c20c:	or     eax,0x6e3f8c
	...
  44c221:	add    BYTE PTR [eax],al
  44c223:	add    BYTE PTR [eax-0x691995a],ch
  44c229:	mov    edi,0x9df26f35
  44c22e:	arpl   WORD PTR [ebx-0x78],sp
  44c231:	push   edx
  44c232:	add    BYTE PTR [eax],al
  44c234:	xor    cl,BYTE PTR [edi+edi*1+0x66a6a86e]
  44c23b:	outs   dx,BYTE PTR ds:[esi]
  44c23c:	test   eax,0xb97547bf
  44c241:	shr    DWORD PTR [edi+0x4f],0x2c
  44c245:	mov    bh,0x5f
  44c247:	outs   dx,DWORD PTR ds:[esi]
  44c248:	mov    dl,0x54
  44c24a:	add    BYTE PTR [eax],al
  44c24c:	jo     0x44c1d9
  44c24e:	aas    
  44c24f:	outs   dx,BYTE PTR ds:[esi]
  44c250:	or     BYTE PTR [esi-0x4906919a],ah
  44c256:	inc    ebp
  44c257:	gs call 0xb5b93318
  44c25d:	iret   
  44c25e:	or     al,0x6a
  44c260:	je     0x44c25a
  44c262:	add    edx,DWORD PTR [ecx-0x4b]
  44c265:	inc    eax
  44c266:	sub    BYTE PTR [ebp+eiz*2+0x35],dh
  44c26a:	xor    al,0x63
  44c26c:	dec    ebx
  44c26d:	sub    dl,BYTE PTR [edi]
  44c26f:	outs   dx,DWORD PTR ds:[esi]
  44c270:	dec    eax
  44c271:	retf   
  44c272:	xor    BYTE PTR [esp+esi*2-0x8],dh
  44c276:	add    ecx,DWORD PTR [esi-0x4b]
  44c279:	inc    eax
  44c27a:	sub    BYTE PTR [ebp+eax*2+0x37],dh
  44c27e:	sbb    BYTE PTR [edi+eax*1+0xc],ah
  44c282:	xor    esi,DWORD PTR [ebx+0x10]
  44c285:	mov    ah,BYTE PTR [edi]
  44c287:	dec    eax
	...
  44c29c:	sbb    BYTE PTR [eax],bl
  44c29e:	sbb    BYTE PTR [ebx+0x27],ah
  44c2a1:	mov    al,BYTE PTR [edx+0x0]
  44c2a4:	mov    ch,0x21
  44c2a6:	add    al,0x48
  44c2a8:	add    DWORD PTR [ebp+0x2c],esp
  44c2ab:	dec    ebp
  44c2ac:	sbb    BYTE PTR [edi+0x20],dl
  44c2af:	dec    esi
  44c2b0:	adc    BYTE PTR [eax+0x27],ch
  44c2b3:	arpl   si,sp
  44c2b5:	pop    esp
  44c2b6:	inc    ebx
  44c2b7:	add    BYTE PTR [ebp-0x2cb8fc9b],dh
  44c2bd:	mov    esp,0x53cb6e17
  44c2c2:	xor    BYTE PTR [ecx-0x3b],cl
  44c2c5:	dec    ebx
  44c2c6:	push   cs
  44c2c7:	aas    
  44c2c8:	mov    ch,0xa1
  44c2ca:	cld    
  44c2cb:	inc    esi
  44c2cc:	rcr    DWORD PTR [edi+edx*1+0x3093cb6e],cl
  44c2d3:	cmp    eax,0x633105a1
  44c2d8:	jge    0x44c271
  44c2da:	push   cs
  44c2db:	fs xchg ecx,eax
  44c2dd:	mov    edi,esp
  44c2df:	call   0xa98:0x740eafb5
  44c2e6:	push   cs
  44c2e7:	arpl   WORD PTR [ecx-0x69d14771],ax
  44c2ed:	and    eax,0xc07b8534
  44c2f3:	adc    al,0x5f
  44c2f5:	push   eax
  44c2f6:	jmp    0xb0d3d3fe
  44c2fb:	adc    eax,0x15bb6c69
	...
  44c314:	push   esi
  44c315:	jnp    0x44c2b1
  44c317:	push   ds
  44c318:	dec    ecx
  44c319:	push   edx
  44c31a:	mov    dh,0x14
  44c31c:	push   eax
  44c31d:	js     0x44c2a3
  44c31f:	inc    edx
  44c320:	mov    ch,0x8f
  44c322:	mov    ch,0x3
  44c324:	ins    DWORD PTR es:[edi],dx
  44c325:	jnp    0x44c2bc
  44c327:	xor    eax,DWORD PTR [eax]
  44c329:	imul   esi,DWORD PTR [edi+0x1f],0xfffffffb
  44c32d:	push   0x78
  44c32f:	cs push ss
  44c331:	sub    DWORD PTR [ebp+0x3e],0x3e94f1d
  44c338:	out    dx,al
  44c339:	(bad)  
  44c33a:	mov    eax,ds:0x3a80012f
  44c33f:	sub    DWORD PTR [edi],ecx
  44c341:	ins    BYTE PTR es:[edi],dx
  44c342:	cmp    ebp,DWORD PTR [ecx]
  44c344:	or     bh,BYTE PTR [ebx+0x44]
  44c347:	pop    ss
  44c348:	jmp    0xb5801497
  44c34d:	(bad)  
  44c34e:	jp     0x44c354
  44c350:	cli    
  44c351:	jne    0x44c380
  44c353:	sub    ebx,ecx
  44c355:	jne    0x44c39b
  44c357:	sbb    BYTE PTR [eax],al
  44c359:	imul   ebp,DWORD PTR ds:0x156ec137,0x19
  44c360:	rcl    BYTE PTR [eax+0x8],1
  44c363:	xor    cl,cl
  44c365:	jno    0x44c36f
  44c367:	daa    
  44c368:	cwde   
  44c369:	dec    esi
  44c36a:	jmp    0x30d50372
  44c36f:	xor    ch,BYTE PTR [ecx-0x69ce0496]
  44c375:	jnp    0x44c377
  44c377:	sbb    BYTE PTR [eax],al
	...
  44c389:	add    BYTE PTR [eax],al
  44c38b:	add    BYTE PTR [eax+esi*2+0x6472f072],ch
  44c392:	ins    BYTE PTR es:[edi],dx
  44c393:	enter  0x8179,0x61
  44c397:	ror    dl,1
  44c399:	fs (bad) 
  44c39b:	lds    ebx,FWORD PTR [ebp-0x4e76ff71]
  44c3a1:	dec    esp
  44c3a2:	mov    bp,0x758d
  44c3a6:	(bad)
  44c3ab:	enter  0x519a,0x69
  44c3af:	mov    ebp,0xa878509d
  44c3b4:	mov    dh,0x69
  44c3b6:	add    BYTE PTR [ecx-0x458f845e],dh
  44c3bc:	fnstsw WORD PTR [ecx+0x5c]
  44c3bf:	mov    ebx,0x8c6d74dd
  44c3c4:	retf   
  44c3c5:	jnp    0x44c416
  44c3c7:	jmp    0xae450f82
  44c3cc:	fnstsw WORD PTR [ebx+0x4d]
  44c3cf:	jnp    0x44c3ab
  44c3d1:	ret    0x4a61
  44c3d4:	shl    DWORD PTR [eax+0x3d],1
  44c3d7:	dec    edi
  44c3d8:	popf   
  44c3d9:	jne    0x44c454
  44c3db:	and    BYTE PTR [edi-0x4ec9988f],ah
  44c3e1:	cmp    eax,DWORD PTR [ecx]
  44c3e3:	xor    BYTE PTR [edi-0x58c4a285],ah
  44c3e9:	jo     0x44c457
  44c3eb:	sbb    bl,BYTE PTR [ebx+edi*2+0x3553]
	...
  44c402:	add    BYTE PTR [eax],al
  44c404:	nop
  44c405:	jnp    0x44c474
  44c407:	sbb    bh,dl
  44c409:	fs fs or eax,0x2636493
  44c410:	out    dx,al
  44c411:	pop    DWORD PTR [eax]
  44c413:	cmp    dh,BYTE PTR [ecx+0x20006c57]
  44c419:	mov    al,ds:0xbdb06437
  44c41e:	arpl   WORD PTR [ecx+0x11],si
  44c421:	mov    bh,0x65
  44c423:	je     0x44c3f9
  44c425:	mov    dh,0x57
  44c427:	fs icebp 
  44c429:	cdq    
  44c42a:	gs push edi
  44c42c:	or     al,0x90
  44c42e:	add    BYTE PTR gs:0xe656cbe,dl
  44c435:	mov    esi,0x9a0f7463
  44c43a:	push   edi
  44c43b:	arpl   WORD PTR [edi],ax
  44c43d:	(bad)  
  44c43e:	data16 ins BYTE PTR es:[edi],dx
  44c440:	sbb    eax,0x2a495190
  44c445:	push   ebx
  44c446:	dec    edx
  44c447:	inc    ebp
  44c448:	add    dh,bh
  44c44a:	arpl   WORD PTR [eax+ebp*1-0x70],bp
  44c44e:	dec    ecx
  44c44f:	dec    esp
  44c450:	popa   
  44c451:	dec    esp
  44c452:	push   ebx
  44c453:	push   esp
  44c454:	(bad)  
  44c455:	(bad)  [ecx]
  44c457:	fs dec eax
  44c459:	mov    bl,0x0
  44c45b:	add    BYTE PTR [ebx+0x10654a8e],bl
  44c461:	enter  0x6565,0xe
  44c465:	push   esi
  44c466:	arpl   WORD PTR [eax+eax*1+0x0],si
	...
  44c47a:	add    BYTE PTR [eax],al
  44c47c:	lds    edi,FWORD PTR [ebp-0x7073909e]
  44c482:	arpl   WORD PTR [eax],ax
  44c484:	call   0x36b7:0xc416caa
  44c48b:	jne    0x44c47f
  44c48d:	mov    ch,0x63
  44c48f:	jb     0x44c423
  44c491:	cdq    
  44c492:	arpl   WORD PTR [ebp+0x5c],sp
  44c495:	(bad)  
  44c496:	sti    
  44c497:	add    BYTE PTR [edx-0x60aa9356],ch
  44c49d:	stos   BYTE PTR es:[edi],al
  44c49e:	inc    bp
  44c4a0:	stos   BYTE PTR es:[edi],al
  44c4a1:	call   0x543f:0xaab5006b
  44c4a8:	je     0x44c472
  44c4aa:	dec    ebx
  44c4ab:	sub    eax,0x6c1fdae7
  44c4b0:	mov    eax,edi
  44c4b2:	add    edi,DWORD PTR [edx]
  44c4b4:	mov    ch,0xb1
  44c4b6:	pop    ds
  44c4b7:	je     0x44c52d
  44c4b9:	mov    WORD PTR [ebx],fs
  44c4bb:	jo     0x44c446
  44c4bd:	ror    DWORD PTR ds:0x1fcc746d,cl
  44c4c3:	outs   dx,BYTE PTR ds:[esi]
  44c4c4:	pop    eax
  44c4c5:	in     eax,0xc
  44c4c7:	arpl   WORD PTR [esi-0x8],sp
  44c4ca:	add    eax,DWORD PTR [edi-0x7b]
  44c4cd:	inc    eax
  44c4ce:	dec    eax
  44c4cf:	push   eax
  44c4d0:	je     0x44c4fa
  44c4d2:	dec    ebx
  44c4d3:	sub    bh,BYTE PTR [ecx+0x2c]
  44c4d6:	dec    eax
  44c4d7:	add    BYTE PTR [ebp+0x5859031a],dh
  44c4dd:	es push cs
  44c4df:	push   0x0
	...
  44c4f1:	add    BYTE PTR [eax],al
  44c4f3:	add    BYTE PTR [edx-0x8],cl
  44c4f6:	add    esp,esi
  44c4f8:	mov    ecx,0x166b1f0b
  44c4fd:	sub    DWORD PTR [ebx],ebx
  44c4ff:	add    BYTE PTR [ebp+0x106b089a],dh
  44c505:	adc    al,0xd
  44c507:	arpl   WORD PTR [ecx],cx
  44c509:	stc    
  44c50a:	add    esp,edi
  44c50c:	mov    cl,0x83
  44c50e:	push   ds
  44c50f:	imul   edx,DWORD PTR [esi],0x5c
  44c512:	or     al,0x0
  44c514:	mov    ch,0x5f
  44c516:	or     BYTE PTR [ecx-0x16],bl
  44c519:	xor    DWORD PTR fs:[edi-0x4b],esp
  44c51d:	jb     0x44c51b
  44c51f:	pop    eax
  44c520:	call   0xe2addd81
  44c525:	clc    
  44c526:	add    ebx,DWORD PTR [esi+esi*4-0x3e93f067]
  44c52d:	shl    DWORD PTR [ebx],0x0
  44c530:	mov    ch,0x8f
  44c532:	lea    eax,[edi]
  44c534:	into   
  44c535:	ins    BYTE PTR es:[edi],dx
  44c536:	add    al,0x2f
  44c538:	pushf  
  44c539:	jns    0x44c53f
  44c53b:	add    al,0xc1
  44c53d:	mov    WORD PTR [edx],ds
  44c53f:	sbb    BYTE PTR [ebx-0x4aebf392],dl
  44c545:	(bad)  
  44c546:	jne    0x44c54d
  44c548:	ins    BYTE PTR es:[edi],dx
  44c549:	jg     0x44c53f
  44c54b:	adc    eax,0x30086e96
  44c550:	xchg   ecx,eax
  44c551:	(bad)  
  44c552:	das    
  44c553:	add    al,0x5c
  44c555:	jns    0x44c531
  44c557:	xor    DWORD PTR [eax],eax
	...
  44c569:	add    BYTE PTR [eax],al
  44c56b:	add    BYTE PTR [edi+edi*2-0x25],ah
  44c56f:	sub    bl,BYTE PTR [edi+0x7b]
  44c572:	mov    edi,0x9e8ded03
  44c577:	sbb    DWORD PTR [eax+0x71],ecx
  44c57a:	mov    ecx,0xb5715a15
  44c57f:	sub    DWORD PTR [ebp+0x4e07418f],esi
  44c585:	ins    BYTE PTR es:[edi],dx
  44c586:	mov    WORD PTR [ecx*2+0x2403e97d],fs
  44c58d:	mov    WORD PTR [eax+0x74901825],cs
  44c593:	adc    al,0x27
  44c595:	ins    DWORD PTR es:[edi],dx
  44c596:	jnp    0x44c5af
  44c598:	iret   
  44c599:	imul   eax,DWORD PTR [ebp-0x78704ad1],0x7
  44c5a0:	clc    
  44c5a1:	push   0x6d
  44c5a3:	dec    ecx
  44c5a4:	sbb    dh,BYTE PTR [esp+eax*2+0x34]
  44c5a8:	or     al,0x77
  44c5aa:	inc    edi
  44c5ab:	sbb    dh,dl
  44c5ad:	jge    0x44c598
  44c5af:	add    esi,DWORD PTR [edx]
  44c5b1:	lea    edx,[esi]
  44c5b3:	sbb    ecx,ebp
  44c5b5:	jg     0x44c5eb
  44c5b7:	sbb    cl,dh
  44c5b9:	push   0x4b
  44c5bb:	sbb    esp,edx
  44c5bd:	pop    esp
  44c5be:	add    BYTE PTR ds:0x466668a7,bh
  44c5c4:	clc    
  44c5c5:	pop    DWORD PTR [eax]
  44c5c7:	add    DWORD PTR [ebp-0x13f293af],ebp
  44c5cd:	jne    0x44c63e
	...
  44c5e3:	add    bl,bl
  44c5e5:	imul   eax,DWORD PTR [eax],0xffffffa9
  44c5e8:	mov    eax,0x77fd5d4e
  44c5ed:	jl     0x44c661
  44c5ef:	sti    
  44c5f0:	fnsave [ebp+0x6c]
  44c5f3:	sbb    DWORD PTR [edi-0x59fb9c8a],esp
  44c5f9:	jb     0x44c5fb
  44c5fb:	cmp    ch,BYTE PTR [ebp-0x662e99a4]
  44c601:	jne    0x44c65f
  44c603:	lds    ebx,FWORD PTR [ebp-0x682ec295]
  44c609:	ins    BYTE PTR es:[edi],dx
  44c60a:	jo     0x44c5c9
  44c60c:	mov    DWORD PTR [esi+0x66],esi
  44c60f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c610:	mov    eax,ds:0xa4cc6c73
  44c615:	pop    DWORD PTR [eax]
  44c617:	test   BYTE PTR [ebp+0x7d9d5d52],ch
  44c61d:	jne    0x44c687
  44c61f:	mov    al,ah
  44c621:	imul   esp,DWORD PTR [esp+ecx*4-0x2e],0x4c
  44c626:	js     0x44c5b2
  44c628:	int    0x7f
  44c62a:	ins    BYTE PTR es:[edi],dx
  44c62b:	nop
  44c62c:	retf   
  44c62d:	jne    0x44c66d
  44c62f:	nop
  44c630:	loop   0x44c6ad
  44c632:	pop    ebp
  44c633:	jnp    0x44c5eb
  44c635:	add    DWORD PTR [bp-0x7833],ecx
  44c63a:	arpl   WORD PTR [ecx+eiz*4+0x7b],cx
  44c63e:	push   edi
  44c63f:	push   ecx
  44c640:	cwde   
  44c641:	jne    0x44c69f
  44c643:	inc    ebp
  44c644:	pushf  
  44c645:	jno    0x44c67a
  44c647:	jmp    0x44c64c
	...
  44c65c:	mov    dh,0x8f
  44c65e:	add    BYTE PTR [eax],al
  44c660:	dec    esp
  44c661:	mov    WORD PTR [eax],es
  44c663:	add    BYTE PTR [esp+ecx*4+0x0],bl
  44c667:	add    BYTE PTR [esp+ecx*4+0x0],bl
  44c66b:	add    BYTE PTR [esp+ecx*4+0x0],cl
  44c66f:	add    BYTE PTR [esp+ecx*4+0x0],cl
  44c673:	add    BYTE PTR [esp+ecx*4],bl
  44c676:	add    BYTE PTR [eax],al
  44c678:	sbb    al,0x8c
  44c67a:	add    BYTE PTR [eax],al
  44c67c:	or     al,0x8c
  44c67e:	add    BYTE PTR [eax],al
  44c680:	or     al,0x8c
  44c682:	add    BYTE PTR [eax],al
  44c684:	sbb    al,0x8c
  44c686:	add    BYTE PTR [eax],al
  44c688:	sbb    al,0x8c
  44c68a:	add    BYTE PTR [eax],al
  44c68c:	or     al,0x8c
  44c68e:	add    BYTE PTR [eax],al
  44c690:	or     al,0x8c
  44c692:	add    BYTE PTR [eax],al
  44c694:	fmul   QWORD PTR [ebx-0x74240000]
  44c69a:	add    BYTE PTR [eax],al
  44c69c:	int3   
  44c69d:	mov    eax,DWORD PTR [eax]
  44c69f:	add    ah,cl
  44c6a1:	mov    eax,DWORD PTR [eax]
  44c6a3:	add    ah,bl
  44c6a5:	mov    eax,DWORD PTR [eax]
  44c6a7:	add    ah,bl
  44c6a9:	mov    eax,DWORD PTR [eax]
  44c6ab:	add    ah,cl
  44c6ad:	mov    eax,DWORD PTR [eax]
  44c6af:	add    ah,cl
  44c6b1:	mov    eax,DWORD PTR [eax]
  44c6b3:	add    BYTE PTR [ebx+edx*4-0x6c640000],bl
  44c6ba:	add    BYTE PTR [eax],al
  44c6bc:	mov    WORD PTR [ebx+0x0],ss
	...
  44c6d2:	add    BYTE PTR [eax],al
  44c6d4:	mov    WORD PTR [ebx-0x6c640000],ss
  44c6da:	add    BYTE PTR [eax],al
  44c6dc:	pushf  
  44c6dd:	xchg   ebx,eax
  44c6de:	add    BYTE PTR [eax],al
  44c6e0:	mov    WORD PTR [ebx-0x6c740000],ss
  44c6e6:	add    BYTE PTR [eax],al
  44c6e8:	pop    esp
  44c6e9:	xchg   ebx,eax
  44c6ea:	add    BYTE PTR [eax],al
  44c6ec:	mov    ch,0xe8
  44c6ee:	add    eax,DWORD PTR [eax]
  44c6f0:	mov    ch,0xe8
  44c6f2:	add    eax,DWORD PTR [eax]
  44c6f4:	mov    ch,0xe8
  44c6f6:	add    eax,DWORD PTR [eax]
  44c6f8:	mov    ch,0xe8
  44c6fa:	add    eax,DWORD PTR [eax]
  44c6fc:	mov    ch,0xe8
  44c6fe:	add    eax,DWORD PTR [eax]
  44c700:	mov    ch,0xe8
  44c702:	add    eax,DWORD PTR [eax]
  44c704:	mov    ch,0xe8
  44c706:	add    eax,DWORD PTR [eax]
  44c708:	mov    ch,0xe8
  44c70a:	add    eax,DWORD PTR [eax]
  44c70c:	mov    ch,0xe8
  44c70e:	add    eax,DWORD PTR [eax]
  44c710:	mov    ch,0xe8
  44c712:	add    eax,DWORD PTR [eax]
  44c714:	mov    ch,0xe8
  44c716:	add    eax,DWORD PTR [eax]
  44c718:	mov    ch,0xe8
  44c71a:	add    eax,DWORD PTR [eax]
  44c71c:	mov    ch,0xe8
  44c71e:	add    eax,DWORD PTR [eax]
  44c720:	mov    ch,0xe8
  44c722:	add    eax,DWORD PTR [eax]
  44c724:	mov    ch,0xe8
  44c726:	add    eax,DWORD PTR [eax]
  44c728:	mov    ch,0xe8
  44c72a:	add    eax,DWORD PTR [eax]
  44c72c:	mov    ch,0xe8
  44c72e:	add    eax,DWORD PTR [eax]
  44c730:	mov    ch,0xe8
  44c732:	add    eax,DWORD PTR [eax]
  44c734:	mov    ch,0xe8
  44c736:	add    eax,DWORD PTR [eax]
	...
  44c74c:	mov    ch,0xe8
  44c74e:	add    eax,DWORD PTR [eax]
  44c750:	mov    ch,0xe8
  44c752:	add    eax,DWORD PTR [eax]
  44c754:	mov    ch,0xe8
  44c756:	add    eax,DWORD PTR [eax]
  44c758:	mov    ch,0xe8
  44c75a:	add    eax,DWORD PTR [eax]
  44c75c:	mov    ch,0xe8
  44c75e:	add    eax,DWORD PTR [eax]
  44c760:	mov    ch,0xe8
  44c762:	add    eax,DWORD PTR [eax]
  44c764:	mov    ch,0xe8
  44c766:	add    eax,DWORD PTR [eax]
  44c768:	mov    ch,0xe8
  44c76a:	add    eax,DWORD PTR [eax]
  44c76c:	mov    ch,0xe8
  44c76e:	add    eax,DWORD PTR [eax]
  44c770:	mov    ch,0xe8
  44c772:	add    eax,DWORD PTR [eax]
  44c774:	mov    ch,0xe8
  44c776:	add    eax,DWORD PTR [eax]
  44c778:	mov    ch,0x8f
  44c77a:	jmp    0xe9d47c82
  44c77f:	add    esi,DWORD PTR [ebp-0x4afc1671]
  44c785:	(bad)
  44c789:	(bad)
  44c78d:	(bad)
  44c791:	(bad)
  44c795:	(bad)
  44c799:	(bad)
  44c79d:	(bad)
  44c7a1:	(bad)
  44c7a5:	(bad)
  44c7a9:	(bad)
  44c7ad:	(bad)
	...
  44c7c1:	add    BYTE PTR [eax],al
  44c7c3:	add    BYTE PTR [ebp-0x4afc1671],dh
  44c7c9:	(bad)
  44c7cd:	(bad)
  44c7d1:	(bad)
  44c7d5:	(bad)
  44c7d9:	(bad)
  44c7dd:	(bad)
  44c7e1:	(bad)
  44c7e5:	(bad)
  44c7e9:	(bad)
  44c7ed:	(bad)
  44c7f1:	(bad)
  44c7f5:	(bad)  
  44c7f6:	adc    DWORD PTR [eax-0xb],eax
  44c7f9:	pop    DWORD PTR [ecx+0x41]
  44c7fc:	cmc    
  44c7fd:	(bad)
  44c801:	(bad)  
  44c802:	xlat   BYTE PTR ds:[ebx]
  44c803:	add    dh,BYTE PTR [ebp-0x4919ff71]
  44c809:	pop    DWORD PTR [eax]
  44c80b:	jno    0x44c7fb
  44c80d:	dec    edi
  44c80e:	add    BYTE PTR [ecx],bl
  44c810:	cli    
  44c811:	dec    edi
  44c812:	add    cl,ch
  44c814:	mov    dh,0x8f
  44c816:	add    bh,dh
  44c818:	mov    dh,0x8f
  44c81a:	add    dh,bl
  44c81c:	mov    dh,0x8f
  44c81e:	add    cl,ch
  44c820:	mov    dh,0x8f
  44c822:	add    BYTE PTR [ecx-0x16ffb00e],dl
	...
  44c83c:	mov    dh,0x8f
  44c83e:	add    dl,bl
  44c840:	mov    dh,0x8f
  44c842:	add    dh,ch
  44c844:	mov    dh,0x8f
  44c846:	add    cl,ch
  44c848:	mov    dh,0x8f
  44c84a:	add    al,ch
  44c84c:	mov    dh,0x8f
  44c84e:	add    BYTE PTR [edi],bl
  44c850:	push   edi
  44c851:	mov    ebp,0x381038bb
  44c856:	cmp    eax,0x8fb6e9
  44c85b:	leave  
  44c85c:	mov    ch,0xa
  44c85e:	sbb    ch,cl
  44c860:	mov    dh,0x8f
  44c862:	add    cl,ch
  44c864:	mov    dh,0x8f
  44c866:	add    cl,ch
  44c868:	mov    dh,0x8f
  44c86a:	add    cl,ch
  44c86c:	loop   0x44c86a
  44c86e:	imul   eax
  44c870:	inc    edx
  44c871:	clc    
  44c872:	idiv   esp
  44c874:	mov    dh,0x8f
  44c876:	add    dl,dh
  44c878:	mov    dh,0x8f
  44c87a:	add    BYTE PTR [ecx+0x2e008fb6],ch
  44c880:	mov    dl,0x8f
  44c882:	add    BYTE PTR [ecx-0x47],ch
  44c885:	pop    DWORD PTR [eax]
  44c887:	push   0xf1f7f74e
  44c88c:	mov    dh,0x8f
  44c88e:	add    cl,ah
  44c890:	mov    dh,0x8f
  44c892:	add    BYTE PTR [eax],al
  44c894:	jl     0x44c826
  44c896:	add    BYTE PTR [eax],al
  44c898:	or     edx,DWORD PTR [ecx-0x6f740000]
	...
  44c8b2:	add    BYTE PTR [eax],al
  44c8b4:	mov    WORD PTR [eax+0x705c0000],ss
  44c8ba:	cmc    
  44c8bb:	aas    
  44c8bc:	pop    esp
  44c8bd:	nop
  44c8be:	add    BYTE PTR [eax],al
  44c8c0:	dec    esp
  44c8c1:	nop
  44c8c2:	add    BYTE PTR [eax],al
  44c8c4:	dec    esp
  44c8c5:	enter  0x4002,0x5c
  44c8c9:	nop
  44c8ca:	add    BYTE PTR [eax],al
  44c8cc:	pop    esp
  44c8cd:	nop
  44c8ce:	add    BYTE PTR [eax],al
  44c8d0:	dec    esp
  44c8d1:	sbb    al,BYTE PTR [eax]
  44c8d3:	inc    eax
  44c8d4:	dec    esp
  44c8d5:	nop
  44c8d6:	add    BYTE PTR [eax],al
  44c8d8:	sbb    al,0x90
  44c8da:	add    BYTE PTR [eax],al
  44c8dc:	fdiv   QWORD PTR [edi+0xb]
  44c8df:	inc    eax
  44c8e0:	or     al,0x90
  44c8e2:	add    BYTE PTR [eax],al
  44c8e4:	or     al,0x90
  44c8e6:	add    BYTE PTR [eax],al
  44c8e8:	lods   al,BYTE PTR ds:[esi]
  44c8e9:	aam    0x8
  44c8eb:	inc    eax
  44c8ec:	sbb    al,0x90
  44c8ee:	add    BYTE PTR [eax],al
  44c8f0:	or     al,0x90
  44c8f2:	add    BYTE PTR [eax],al
  44c8f4:	lock or eax,DWORD PTR [esi]
  44c8f7:	inc    eax
  44c8f8:	fmul   QWORD PTR [edi-0x70240000]
  44c8fe:	add    BYTE PTR [eax+0x40117862],al
  44c904:	int3   
  44c905:	pop    DWORD PTR [eax]
  44c907:	add    ah,bl
  44c909:	pop    DWORD PTR [eax]
  44c90b:	and    BYTE PTR [eax+0x56],cl
  44c90e:	push   cs
  44c90f:	inc    eax
  44c910:	int3   
  44c911:	pop    DWORD PTR [eax]
  44c913:	add    ah,cl
  44c915:	sti    
  44c916:	mov    eax,0xc9
	...
  44c92b:	add    BYTE PTR [edi-0x63bfcbfb],dh
  44c931:	pop    DWORD PTR [eax]
  44c933:	mov    eax,ds:0xc9bf93b5
  44c938:	mov    esi,0xf549aea6
  44c93d:	enter  0x9993,0x40
  44c941:	jns    0x44c929
  44c943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c944:	push   eax
  44c945:	lods   al,BYTE PTR ds:[esi]
  44c946:	js     0x44c9ae
  44c948:	cmc    
  44c949:	cwde   
  44c94a:	cmp    bl,bh
  44c94c:	cwde   
  44c94d:	retf   
  44c94e:	test   BYTE PTR [ecx+0x7ca58ffa],0xf5
  44c955:	push   edi
  44c956:	jb     0x44c928
  44c958:	inc    eax
  44c959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c95a:	or     al,BYTE PTR [ebx]
  44c95c:	inc    eax
  44c95d:	mov    al,ds:0xcff59969
  44c962:	pop    ecx
  44c963:	lahf   
  44c964:	stc    
  44c965:	rol    DWORD PTR [ebx+0x7e682a0d],cl
  44c96b:	mov    dh,0x75
  44c96d:	jno    0x44c947
  44c96f:	rcl    BYTE PTR [ebx+0x2a],cl
  44c972:	call   0x75cc:0xbea0c246
  44c979:	stc    
  44c97a:	rcr    edi,0x41
  44c97d:	and    BYTE PTR [ebp-0x3a],bh
  44c980:	jb     0x44c9d0
  44c982:	ins    DWORD PTR es:[edi],dx
  44c983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c984:	je     0x44c94a
  44c986:	ja     0x44c9ec
  44c988:	pusha  
  44c989:	rcr    edx,1
  44c98b:	mov    ch,dl
  44c98d:	fsub   DWORD PTR [ebx+0x7b]
	...
  44c9a3:	add    BYTE PTR [edi+0x1c],dh
  44c9a6:	mov    al,0x89
  44c9a8:	add    esp,DWORD PTR [eax+0x6f]
  44c9ab:	hlt    
  44c9ac:	into   
  44c9ad:	retf   0x4e65
  44c9b0:	jbe    0x44c9b9
  44c9b2:	mov    ds:0x8eacd671,eax
  44c9b7:	es xchg edx,eax
  44c9b9:	ins    BYTE PTR es:[edi],dx
  44c9ba:	and    DWORD PTR [ecx],0x71
  44c9bd:	nop
  44c9be:	in     al,dx
  44c9bf:	adc    BYTE PTR [edi-0x71],bl
  44c9c2:	and    DWORD PTR [edx-0x46],ebp
  44c9c5:	out    dx,al
  44c9c6:	sbb    al,0xc0
  44c9c8:	test   al,0x53
  44c9ca:	add    ah,BYTE PTR [ecx-0x7a]
  44c9cd:	dec    BYTE PTR [esi]
  44c9cf:	lods   eax,DWORD PTR ds:[esi]
  44c9d0:	jae    0x44ca17
  44c9d2:	sub    DWORD PTR [esi+0x7d],0x54
  44c9d6:	jl     0x44c99f
  44c9d8:	jne    0x44c9fa
  44c9da:	loopne 0x44ca3d
  44c9dc:	dec    esp
  44c9dd:	das    
  44c9de:	shl    DWORD PTR [ecx+edx*2-0x3be113af],1
  44c9e5:	mov    ecx,DWORD PTR [ebx+eax*4+0x34]
  44c9e9:	test   BYTE PTR [edi-0x35],dl
  44c9ec:	repnz dec esp
  44c9ee:	xor    DWORD PTR [esi+0x59],eax
  44c9f1:	xor    bl,BYTE PTR [ebx-0x26]
  44c9f4:	add    esp,0x5e4f5581
  44c9fa:	sbb    al,0x61
  44c9fc:	push   edi
  44c9fd:	pop    esp
  44c9fe:	in     al,0xbe
  44ca00:	(bad)  
  44ca01:	mov    dh,0x72
  44ca03:	jns    0x44ca3d
  44ca05:	push   ebp
  44ca06:	xchg   esi,eax
  44ca07:	add    BYTE PTR ss:[eax],al
	...
  44ca1a:	add    BYTE PTR [eax],al
  44ca1c:	push   edi
  44ca1d:	dec    DWORD PTR [eax-0x1d]
  44ca20:	pop    edx
  44ca21:	arpl   WORD PTR [edi+eax*4],di
  44ca24:	lds    esi,FWORD PTR [eax-0x68]
  44ca27:	xchg   esi,eax
  44ca28:	xor    DWORD PTR [ebp+0x72],edx
  44ca2b:	mov    ebx,0x9a605cd7
  44ca30:	loope  0x44caa3
  44ca32:	inc    ebx
  44ca33:	outs   dx,BYTE PTR ds:[esi]
  44ca34:	jmp    0xb4c7:0x485906fd
  44ca3b:	mov    dh,0x62
  44ca3d:	imul   ebx,DWORD PTR [ebp+0xa2241ca],0xc95fd08e
  44ca47:	mov    edi,0x3e98497
  44ca4c:	mov    ch,0x8f
  44ca4e:	add    BYTE PTR [edx+esi*8],ah
  44ca51:	(bad)  
  44ca52:	les    ebx,FWORD PTR ds:0x35c4c57a
  44ca58:	jb     0x44ca5e
  44ca5a:	cmp    BYTE PTR [eax+0x4acf938b],bl
  44ca60:	(bad)  
  44ca61:	mov    ah,0xa
  44ca63:	sbb    DWORD PTR ss:[ecx],eax
  44ca66:	cmp    BYTE PTR [ebx-0x51283d56],ah
  44ca6c:	cmp    esp,DWORD PTR [eax]
  44ca6e:	(bad)  [bx+di]
  44ca71:	(bad)  
  44ca72:	aaa    
  44ca73:	sub    ch,BYTE PTR [ecx]
  44ca75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ca76:	pop    ebp
  44ca77:	add    BYTE PTR [edi],dl
  44ca79:	popa   
  44ca7a:	setbe  BYTE PTR [eax]
  44ca7d:	jmp    0x0:0xb937
	...
  44ca94:	mov    dl,0x9a
  44ca96:	jl     0x44cabe
  44ca98:	dec    esi
  44ca99:	push   eax
  44ca9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ca9b:	lods   al,BYTE PTR ds:[esi]
  44ca9c:	jmp    0x6a3e:0xe32937e6
  44caa3:	inc    ebp
  44caa4:	ror    BYTE PTR [ebp-0xc4f094b],cl
  44caaa:	aaa    
  44caab:	fimul  DWORD PTR ds:0x54234335
  44cab1:	fimul  WORD PTR [esi+edx*2-0x54c80fb5]
  44cab8:	sub    al,0xf6
  44caba:	(bad)  
  44cabb:	or     BYTE PTR ds:0x8ead6f8a,dh
  44cac1:	in     al,dx
  44cac2:	aaa    
  44cac3:	(bad)  
  44cac4:	jb     0x44cb28
  44cac6:	loope  0x44cae4
  44cac8:	cmc    
  44cac9:	lea    edi,ss:[ebx+ecx*2-0x2e]
  44cace:	aaa    
  44cacf:	jnp    0x44cac6
  44cad1:	dec    ebx
  44cad2:	cmp    ebx,esp
  44cad4:	call   0x3827:0x4f8f0cc4
  44cadb:	add    BYTE PTR [edx-0x4a6b5168],dl
  44cae1:	dec    esi
  44cae2:	stos   DWORD PTR es:[edi],eax
  44cae3:	push   ds
  44cae4:	cmp    eax,0xb83f93d0
  44cae9:	in     al,dx
  44caea:	shl    edx,0x10
  44caed:	push   esi
  44caee:	sub    al,0x31
  44caf0:	sub    eax,0x2d3f6e05
  44caf5:	mov    edi,0xc14f
	...
  44cb0a:	add    BYTE PTR [eax],al
  44cb0c:	inc    edx
  44cb0d:	arpl   WORD PTR [esp+edi*2+0x6e],ax
  44cb11:	push   ebp
  44cb12:	pop    eax
  44cb13:	aas    
  44cb14:	stos   DWORD PTR es:[edi],eax
  44cb15:	xor    DWORD PTR [ecx],ebp
  44cb17:	lea    ecx,[edx-0x767a7a9e]
  44cb1d:	adc    eax,0xe0b83f44
  44cb22:	mov    ds:0x206e95e9,al
  44cb27:	jmp    0x6801:0x3f1d6c03
  44cb2e:	xchg   esi,eax
  44cb2f:	in     al,0x30
  44cb31:	cwde   
  44cb32:	je     0x44cb7a
  44cb34:	sbb    al,0x37
  44cb36:	push   ebx
  44cb37:	ds out dx,eax
  44cb39:	xchg   esp,eax
  44cb3a:	add    cl,ah
  44cb3c:	mov    edi,0x538371bf
  44cb41:	xor    DWORD PTR [esi+0x3d],0xffffff9d
  44cb45:	push   ss
  44cb46:	cs sbb esi,eax
  44cb49:	lods   al,BYTE PTR ds:[esi]
  44cb4a:	and    eax,DWORD PTR [ebx-0x13]
  44cb4d:	retf   
  44cb4e:	stos   DWORD PTR es:[edi],eax
  44cb4f:	cmp    al,0xfd
  44cb51:	or     al,bh
  44cb53:	cmp    BYTE PTR [esi+0xcb891b9],cl
  44cb59:	pop    ss
  44cb5a:	sar    DWORD PTR [ebx],1
  44cb5c:	inc    eax
  44cb5d:	add    al,0x50
  44cb5f:	or     BYTE PTR [edi+0x5ae3df62],dh
  44cb65:	pop    edx
  44cb66:	hlt    
  44cb67:	cmp    dh,BYTE PTR [ebp+0x774277a8]
  44cb6d:	icebp  
  44cb6e:	inc    ebp
  44cb6f:	xchg   esi,eax
	...
  44cb84:	inc    eax
  44cb85:	stc    
  44cb86:	mov    edx,0xcf57f29
  44cb8b:	sbb    al,0xe7
  44cb8d:	test   BYTE PTR [ebx+0x7430a32d],bh
  44cb93:	push   ebp
  44cb94:	in     al,dx
  44cb95:	inc    esi
  44cb96:	jbe    0x44cb51
  44cb98:	jne    0x44cbd8
  44cb9a:	mov    edx,0x614737a2
  44cb9f:	mov    dl,0xc7
  44cba1:	mov    ch,BYTE PTR [ebx]
  44cba3:	scas   al,BYTE PTR es:[edi]
  44cba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cba5:	inc    ebp
  44cba6:	xor    DWORD PTR [ecx+0xf472ff9],ebx
  44cbac:	leave  
  44cbad:	ret    
  44cbae:	inc    esp
  44cbaf:	in     al,0xa0
  44cbb1:	ds enter 0x648,0x1f
  44cbb6:	mov    edi,0x3b659864
  44cbbb:	add    al,0x11
  44cbbd:	sub    DWORD PTR [edi-0x5b1e2f43],ebp
  44cbc3:	shr    DWORD PTR [ebx-0x20786a92],0x9d
  44cbca:	jae    0x44cc07
  44cbcc:	cli    
  44cbcd:	cwde   
  44cbce:	sbb    DWORD PTR ds:0x634996cd,0x88822b97
  44cbd8:	push   edx
  44cbd9:	out    dx,eax
  44cbda:	addr16 jp 0x44cba1
  44cbdd:	add    al,0xe0
  44cbdf:	fnstenv [edx]
  44cbe1:	pop    ss
  44cbe2:	mov    bl,0xc7
  44cbe4:	mov    cl,0x2b
  44cbe6:	push   edi
  44cbe7:	xlat   BYTE PTR ds:[ebx]
	...
  44cbfc:	scas   eax,DWORD PTR es:[edi]
  44cbfd:	call   0xe8f9cc05
  44cc02:	add    eax,DWORD PTR [eax]
  44cc04:	mov    ch,0x5
  44cc06:	dec    ebp
  44cc07:	pop    es
  44cc08:	dec    esp
  44cc09:	nop
  44cc0a:	jmp    0xe9d48112
  44cc0f:	add    esi,DWORD PTR [ebp-0x4afc1671]
  44cc15:	(bad)
  44cc19:	(bad)
  44cc1d:	(bad)  
  44cc1e:	std    
  44cc1f:	daa    
  44cc20:	jp     0x44cbb1
  44cc22:	jmp    0xe9d4812a
  44cc27:	add    esi,DWORD PTR [ebp-0x4afc1671]
  44cc2d:	(bad)  
  44cc2e:	clc    
  44cc2f:	mov    ch,0xdb
  44cc31:	(bad)
  44cc35:	(bad)
  44cc39:	(bad)
  44cc3d:	(bad)  
  44cc3e:	xchg   ecx,eax
  44cc3f:	mov    ch,0xbb
  44cc41:	(bad)
  44cc45:	(bad)
  44cc49:	(bad)
  44cc4d:	(bad)  
  44cc4e:	xchg   esi,eax
  44cc4f:	mov    ch,0x9b
  44cc51:	(bad)
  44cc55:	(bad)
  44cc59:	(bad)
  44cc5d:	(bad)  
  44cc5e:	cmp    eax,0xb5
	...
  44cc73:	add    BYTE PTR [ebx-0x71],bh
  44cc76:	jmp    0xe9d4817e
  44cc7b:	add    esi,DWORD PTR [ebp-0x4afc1671]
  44cc81:	(bad)  
  44cc82:	lock mov ds:0x3e98fdb,eax
  44cc88:	mov    ch,0x8f
  44cc8a:	jmp    0xe9d48192
  44cc8f:	add    esi,DWORD PTR [ebp-0x445bda71]
  44cc95:	pop    DWORD PTR [eax]
  44cc97:	jmp    0xe9455c52
  44cc9c:	mov    dh,0x8f
  44cc9e:	add    cl,ch
  44cca0:	mov    dh,0x8f
  44cca2:	add    BYTE PTR [ebp+0x16],ch
  44cca5:	mov    ch,0x0
  44cca7:	jmp    0xe9455c62
  44ccac:	mov    dh,0x8f
  44ccae:	add    cl,ch
  44ccb0:	mov    dh,0x8f
  44ccb2:	add    BYTE PTR [ebx],ah
  44ccb4:	push   ss
  44ccb5:	mov    ch,0x0
  44ccb7:	jmp    0xe9455c72
  44ccbc:	mov    dh,0x8f
  44ccbe:	add    cl,ch
  44ccc0:	mov    dh,0x8f
  44ccc2:	add    bl,dh
  44ccc4:	push   edi
  44ccc5:	mov    dh,0x0
  44ccc7:	jmp    0xe9455c82
  44cccc:	mov    dh,0x8f
  44ccce:	add    cl,ch
  44ccd0:	mov    dh,0x8f
  44ccd2:	add    BYTE PTR [esi-0x16ff49a9],bl
	...
  44ccec:	mov    dh,0x8f
  44ccee:	add    cl,ch
  44ccf0:	mov    dh,0x8f
  44ccf2:	add    cl,ch
  44ccf4:	mov    dh,0x8f
  44ccf6:	add    BYTE PTR [esi+0x10],dl
  44ccf9:	mov    dh,0x0
  44ccfb:	jmp    0xe9455cb6
  44cd00:	mov    dh,0x8f
  44cd02:	add    cl,ch
  44cd04:	mov    dh,0x8f
  44cd06:	add    BYTE PTR [esi+0x10],ch
  44cd09:	mov    dh,0x0
  44cd0b:	jmp    0xe9455cc6
  44cd10:	mov    dh,0x8f
  44cd12:	add    cl,ch
  44cd14:	mov    dh,0x8f
  44cd16:	add    BYTE PTR [ebx-0x16],dl
  44cd19:	mov    dl,0x0
  44cd1b:	jmp    0xe9455cd6
  44cd20:	mov    dh,0x8f
  44cd22:	add    BYTE PTR [eax],al
  44cd24:	or     al,0x91
  44cd26:	add    BYTE PTR [eax],al
  44cd28:	js     0x44ccee
  44cd2a:	xor    eax,0x90dc00
  44cd2f:	add    ah,bl
  44cd31:	nop
  44cd32:	add    BYTE PTR [eax],al
  44cd34:	int3   
  44cd35:	nop
  44cd36:	add    BYTE PTR [eax],al
  44cd38:	ret    0x35df
  44cd3b:	add    ah,bl
  44cd3d:	nop
  44cd3e:	add    BYTE PTR [eax],al
  44cd40:	fcom   QWORD PTR [eax-0x6f340000]
  44cd46:	add    BYTE PTR [eax],al
  44cd48:	and    al,0xe0
  44cd4a:	xor    eax,0x909c00
	...
  44cd63:	add    BYTE PTR [eax+edx*4-0x6f740000],bl
  44cd6a:	add    BYTE PTR [eax],al
  44cd6c:	mov    esp,0x9c0035df
  44cd71:	nop
  44cd72:	add    BYTE PTR [eax],al
  44cd74:	pushf  
  44cd75:	nop
  44cd76:	add    BYTE PTR [eax],al
  44cd78:	mov    WORD PTR [eax+0x49b90000],ss
  44cd7e:	add    BYTE PTR ss:[eax+edx*4+0x0],bl
  44cd83:	add    BYTE PTR [eax+edx*4+0x0],bl
  44cd87:	add    BYTE PTR [eax+edx*4+0x0],cl
  44cd8b:	add    BYTE PTR [ecx+0x49],cl
  44cd8e:	add    BYTE PTR ss:[eax+edx*4+0x0],bl
  44cd93:	add    BYTE PTR [eax+edx*4+0x0],bl
  44cd97:	add    BYTE PTR [eax+edx*4+0x0],cl
  44cd9b:	add    BYTE PTR [edi+0x1c003648],ah
  44cda1:	nop
  44cda2:	add    BYTE PTR [eax],al
  44cda4:	sbb    al,0x90
  44cda6:	add    BYTE PTR [eax],al
  44cda8:	or     al,0x90
  44cdaa:	add    BYTE PTR [eax],al
  44cdac:	mov    ebp,0xb5003648
  44cdb1:	out    0x3,al
  44cdb3:	add    BYTE PTR [ebp-0x4afffc1a],dh
  44cdb9:	out    0x3,al
  44cdbb:	add    BYTE PTR [ebp-0x4ac1b543],dh
  44cdc1:	out    0x3,al
  44cdc3:	add    BYTE PTR [ebp+0x3e6],dh
	...
  44cdd9:	add    BYTE PTR [eax],al
  44cddb:	add    BYTE PTR [ebp-0x4afffc1a],dh
  44cde1:	push   ebx
  44cde2:	dec    edx
  44cde3:	ds mov ch,0xe6
  44cde6:	add    eax,DWORD PTR [eax]
  44cde8:	mov    ch,0xe6
  44cdea:	add    eax,DWORD PTR [eax]
  44cdec:	mov    ch,0xe6
  44cdee:	add    eax,DWORD PTR [eax]
  44cdf0:	mov    ch,0x29
  44cdf2:	cmp    al,0x3e
  44cdf4:	mov    ch,0xe8
  44cdf6:	add    eax,DWORD PTR [eax]
  44cdf8:	mov    ch,0xe8
  44cdfa:	add    eax,DWORD PTR [eax]
  44cdfc:	mov    ch,0xe8
  44cdfe:	add    eax,DWORD PTR [eax]
  44ce00:	mov    ch,0x64
  44ce02:	cmp    edi,DWORD PTR [esi]
  44ce04:	mov    ch,0xe8
  44ce06:	add    eax,DWORD PTR [eax]
  44ce08:	mov    ch,0xe8
  44ce0a:	add    eax,DWORD PTR [eax]
  44ce0c:	mov    ch,0xe8
  44ce0e:	add    eax,DWORD PTR [eax]
  44ce10:	mov    ch,0x9b
  44ce12:	cmp    edi,DWORD PTR [esi]
  44ce14:	mov    ch,0xe8
  44ce16:	add    eax,DWORD PTR [eax]
  44ce18:	mov    ch,0xe8
  44ce1a:	add    eax,DWORD PTR [eax]
  44ce1c:	mov    ch,0xe8
  44ce1e:	add    eax,DWORD PTR [eax]
  44ce20:	mov    ch,0x8d
  44ce22:	cmp    edi,DWORD PTR [esi]
  44ce24:	mov    ch,0xe8
  44ce26:	add    eax,DWORD PTR [eax]
  44ce28:	mov    ch,0xe8
  44ce2a:	add    eax,DWORD PTR [eax]
  44ce2c:	mov    ch,0xe8
  44ce2e:	add    eax,DWORD PTR [eax]
  44ce30:	mov    ch,0x47
  44ce32:	cmp    edi,DWORD PTR [esi]
  44ce34:	mov    ch,0xe8
  44ce36:	add    eax,DWORD PTR [eax]
  44ce38:	mov    ch,0xe8
  44ce3a:	add    eax,DWORD PTR [eax]
  44ce3c:	mov    ch,0x8f
  44ce3e:	jmp    0x44ce46
	...
  44ce53:	add    BYTE PTR [ebp-0x2cc4ac71],dh
  44ce59:	(bad)
  44ce5d:	(bad)
  44ce61:	(bad)
  44ce65:	pop    esi
  44ce67:	cmp    eax,0x3e98fb3
  44ce6c:	mov    ch,0x8f
  44ce6e:	jmp    0xe9d48376
  44ce73:	add    esi,DWORD PTR [ebp-0x6cc22a71]
  44ce79:	(bad)
  44ce7d:	(bad)
  44ce81:	(bad)
  44ce85:	(bad)  
  44ce86:	xor    BYTE PTR [esi],bh
  44ce88:	(bad)
  44ce8d:	(bad)
  44ce91:	(bad)
  44ce95:	pop    DWORD PTR [edx]
  44ce97:	cmp    eax,0x3e98fd3
  44ce9c:	mov    ch,0x8f
  44ce9e:	jmp    0xe9d483a6
  44cea3:	add    esi,DWORD PTR [ebp-0x4f24d871]
  44cea9:	(bad)
  44cead:	(bad)
  44ceb1:	(bad)
  44ceb5:	(bad)  
  44ceb6:	pop    ss
  44ceb7:	fiadd  WORD PTR [eax]
	...
  44cec9:	add    BYTE PTR [eax],al
  44cecb:	add    BYTE PTR [eax-0x4afc1671],dl
  44ced1:	(bad)
  44ced5:	(bad)
  44ced9:	(bad)  
  44ceda:	aaa    
  44cedb:	fdivrp st(0),st
  44cedd:	pop    DWORD PTR [eax]
  44cedf:	jmp    0xe9455e9a
  44cee4:	mov    dh,0x8f
  44cee6:	add    cl,ch
  44cee8:	mov    dh,0x8f
  44ceea:	add    al,al
  44ceec:	lock mov bl,0x0
  44ceef:	jmp    0xe9455eaa
  44cef4:	mov    dh,0x8f
  44cef6:	add    cl,ch
  44cef8:	mov    dh,0x8f
  44cefa:	add    cl,ah
  44cefc:	adc    DWORD PTR [eax+eax*1+0x8fb6e9],esi
  44cf03:	jmp    0xe9455ebe
  44cf08:	mov    dh,0x8f
  44cf0a:	add    BYTE PTR [esi-0x16ff4c0f],dh
  44cf10:	mov    dh,0x8f
  44cf12:	add    cl,ch
  44cf14:	mov    dh,0x8f
  44cf16:	add    cl,ch
  44cf18:	mov    dh,0x8f
  44cf1a:	add    BYTE PTR [esi-0x6f],dl
  44cf1d:	mov    bl,0x0
  44cf1f:	jmp    0xe9455eda
  44cf24:	mov    dh,0x8f
  44cf26:	add    cl,ch
  44cf28:	mov    dh,0x8f
  44cf2a:	add    bl,dl
  44cf2c:	jb     0x44cee1
  44cf2e:	add    cl,ch
	...
  44cf44:	mov    dh,0x8f
  44cf46:	add    cl,ch
  44cf48:	mov    dh,0x8f
  44cf4a:	add    cl,ch
  44cf4c:	mov    dh,0x8f
  44cf4e:	add    BYTE PTR [ecx-0x16ff4db5],cl
  44cf54:	mov    dh,0x8f
  44cf56:	add    cl,ch
  44cf58:	mov    dh,0x8f
  44cf5a:	add    cl,ch
  44cf5c:	mov    dh,0x8f
  44cf5e:	add    BYTE PTR [ebx+0x2c],bh
  44cf61:	mov    dl,0x0
  44cf63:	jmp    0xe9455f1e
  44cf68:	mov    dh,0x8f
  44cf6a:	add    BYTE PTR [eax],al
  44cf6c:	dec    esp
  44cf6d:	lea    eax,[eax]
  44cf6f:	add    BYTE PTR [ebp+0x17],dl
  44cf72:	aaa    
  44cf73:	add    BYTE PTR [ecx*4-0x72f40000],bl
  44cf7a:	add    BYTE PTR [eax],al
  44cf7c:	or     al,0x8d
  44cf7e:	add    BYTE PTR [eax],al
  44cf80:	or     bl,BYTE PTR [ebx]
  44cf82:	aaa    
  44cf83:	add    BYTE PTR [ecx*4-0x72f40000],bl
  44cf8a:	add    BYTE PTR [eax],al
  44cf8c:	or     al,0x8d
  44cf8e:	add    BYTE PTR [eax],al
  44cf90:	in     al,dx
  44cf91:	sbb    dh,BYTE PTR [edi]
  44cf93:	add    ah,bl
  44cf95:	mov    WORD PTR [eax],es
  44cf97:	add    ah,cl
  44cf99:	mov    WORD PTR [eax],es
  44cf9b:	add    ah,cl
  44cf9d:	mov    WORD PTR [eax],es
  44cf9f:	add    BYTE PTR [ecx+ebx*1-0x7323ffc9],bl
	...
  44cfba:	add    BYTE PTR [eax],al
  44cfbc:	int3   
  44cfbd:	mov    WORD PTR [eax],es
  44cfbf:	add    ah,cl
  44cfc1:	mov    WORD PTR [eax],es
  44cfc3:	add    BYTE PTR [ebx+0x19],dl
  44cfc6:	aaa    
  44cfc7:	add    BYTE PTR [esp+ecx*4-0x73740000],bl
  44cfce:	add    BYTE PTR [eax],al
  44cfd0:	mov    WORD PTR [eax+eax*1+0x37191b00],cs
  44cfd7:	add    BYTE PTR [esp+ecx*4-0x73740000],bl
  44cfde:	add    BYTE PTR [eax],al
  44cfe0:	mov    WORD PTR [eax+eax*1+0x37190300],cs
  44cfe7:	add    BYTE PTR [esp+ecx*4+0x0],bl
  44cfeb:	add    BYTE PTR [esp+ecx*4+0x0],cl
  44cfef:	add    BYTE PTR [esp+ecx*4+0x0],cl
  44cff3:	add    BYTE PTR [esi+0x19],dh
  44cff6:	aaa    
  44cff7:	add    BYTE PTR [ebp-0x4afffc1a],dh
  44cffd:	out    0x3,al
  44cfff:	add    BYTE PTR [ebp-0x4afffc1a],dh
  44d005:	cmp    BYTE PTR [ebx+0x3f],ah
  44d008:	mov    ch,0xe6
  44d00a:	add    eax,DWORD PTR [eax]
  44d00c:	mov    ch,0xe6
  44d00e:	add    eax,DWORD PTR [eax]
  44d010:	mov    ch,0xe6
  44d012:	add    eax,DWORD PTR [eax]
  44d014:	mov    ch,0xb1
  44d016:	imul   edi,DWORD PTR [edi],0x3e6b5
  44d01c:	mov    ch,0xe6
  44d01e:	add    eax,DWORD PTR [eax]
	...
  44d034:	mov    ch,0xe6
  44d036:	add    eax,DWORD PTR [eax]
  44d038:	mov    ch,0xc9
  44d03a:	mov    bh,0x3f
  44d03c:	mov    ch,0xe6
  44d03e:	add    eax,DWORD PTR [eax]
  44d040:	mov    ch,0xe6
  44d042:	add    eax,DWORD PTR [eax]
  44d044:	mov    ch,0xe6
  44d046:	add    eax,DWORD PTR [eax]
  44d048:	mov    ch,0xf4
  44d04a:	add    edi,DWORD PTR [edi]
  44d04c:	mov    ch,0xe6
  44d04e:	add    eax,DWORD PTR [eax]
  44d050:	mov    ch,0xe6
  44d052:	add    eax,DWORD PTR [eax]
  44d054:	mov    ch,0xe6
  44d056:	add    eax,DWORD PTR [eax]
  44d058:	mov    ch,0x3
  44d05a:	add    al,0x3f
  44d05c:	mov    ch,0xf8
  44d05e:	add    eax,DWORD PTR [eax]
  44d060:	mov    ch,0xf8
  44d062:	add    eax,DWORD PTR [eax]
  44d064:	mov    ch,0xf8
  44d066:	add    eax,DWORD PTR [eax]
  44d068:	mov    ch,0x53
  44d06a:	cmc    
  44d06b:	ds mov ch,0xf8
  44d06e:	add    eax,DWORD PTR [eax]
  44d070:	mov    ch,0xf8
  44d072:	add    eax,DWORD PTR [eax]
  44d074:	mov    ch,0xf8
  44d076:	add    eax,DWORD PTR [eax]
  44d078:	mov    ch,0x0
  44d07a:	(bad)  
  44d07b:	ds mov ch,0xf8
  44d07e:	add    eax,DWORD PTR [eax]
  44d080:	mov    ch,0xf8
  44d082:	add    eax,DWORD PTR [eax]
  44d084:	mov    ch,0x8f
  44d086:	jmp    0x27d4858e
  44d08b:	stc    
  44d08c:	mov    ecx,DWORD PTR [edi-0x704afc17]
  44d092:	jmp    0xc5d4859a
  44d097:	pop    esi
	...
  44d0ac:	repz (bad) 
  44d0ae:	rcr    BYTE PTR [esi-0x15],cl
  44d0b1:	(bad)
  44d0b5:	(bad)  
  44d0b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d0b7:	adc    eax,0x15958f75
  44d0bc:	jne    0x44d04d
  44d0be:	test   DWORD PTR ds:0x15818f75,edx
  44d0c4:	jne    0x44d055
  44d0c6:	mov    DWORD PTR ds:0x15a18f75,edx
  44d0cc:	jne    0x44d05d
  44d0ce:	cdq    
  44d0cf:	adc    eax,0x15a18f75
  44d0d4:	jne    0x44d065
  44d0d6:	test   eax,0xa18f7515
  44d0db:	adc    eax,0x15998f75
  44d0e0:	jne    0x44d071
  44d0e2:	test   DWORD PTR ds:0x15718f75,edx
  44d0e8:	jne    0x44d079
  44d0ea:	pop    ecx
  44d0eb:	adc    eax,0x15718ff5
  44d0f0:	cmc    
  44d0f1:	(bad)
  44d0f5:	(bad)  
  44d0f6:	lods   eax,DWORD PTR ds:[esi]
  44d0f7:	adc    al,0xf5
  44d0f9:	(bad)  
  44d0fa:	xchg   ecx,eax
  44d0fb:	adc    al,0xf5
  44d0fd:	(bad)
  44d101:	(bad)  
  44d102:	mov    ch,0x14
  44d104:	cmc    
  44d105:	(bad)  
  44d106:	xchg   ebp,eax
  44d107:	adc    al,0xf5
  44d109:	(bad)
  44d10d:	(bad)  
  44d10e:	lods   eax,DWORD PTR ds:[esi]
  44d10f:	adc    al,0x0
	...
  44d121:	add    BYTE PTR [eax],al
  44d123:	add    ch,dh
  44d125:	pop    DWORD PTR [eax]
  44d127:	(bad)
  44d12a:	add    ch,al
  44d12c:	ror    DWORD PTR [edi+0x0],0xad
  44d130:	mov    esi,0xb6e9004f
  44d135:	pop    DWORD PTR [eax]
  44d137:	push   ecx
  44d138:	ret    0xae
  44d13b:	push   ebp
  44d13c:	mov    edx,0xb23900ae
  44d141:	scas   al,BYTE PTR es:[edi]
  44d142:	add    BYTE PTR [ebp-0x56],cl
  44d145:	scas   al,BYTE PTR es:[edi]
  44d146:	add    BYTE PTR [ecx-0x5e],al
  44d149:	scas   al,BYTE PTR es:[edi]
  44d14a:	add    BYTE PTR [ebp-0x66],al
  44d14d:	scas   al,BYTE PTR es:[edi]
  44d14e:	add    BYTE PTR [ecx],cl
  44d150:	xchg   edx,eax
  44d151:	scas   al,BYTE PTR es:[edi]
  44d152:	add    BYTE PTR ds:0x3100ae8a,bh
  44d158:	sub    BYTE PTR [esi-0x5185cb00],0x0
  44d15f:	sbb    DWORD PTR [edx-0x52],esi
  44d162:	add    BYTE PTR ds:0xe900ae6a,ch
  44d168:	mov    dh,0x8f
  44d16a:	add    cl,ch
  44d16c:	mov    dh,0x8f
  44d16e:	add    cl,ch
  44d170:	mov    dh,0x8f
  44d172:	add    cl,ch
  44d174:	mov    dh,0x8f
  44d176:	add    cl,ch
  44d178:	mov    dh,0x8f
  44d17a:	add    cl,ch
  44d17c:	mov    dh,0x8f
  44d17e:	add    cl,ch
  44d180:	mov    dh,0x8f
  44d182:	add    cl,ch
  44d184:	mov    dh,0x8f
  44d186:	add    cl,ch
	...
  44d19c:	mov    dh,0x8f
  44d19e:	add    cl,ch
  44d1a0:	mov    dh,0x8f
  44d1a2:	add    cl,ch
  44d1a4:	mov    dh,0x8f
  44d1a6:	add    cl,ch
  44d1a8:	mov    dh,0x8f
  44d1aa:	add    cl,ch
  44d1ac:	xchg   ch,ch
  44d1ae:	imul   ebp
  44d1b0:	mov    dh,0x8f
  44d1b2:	add    BYTE PTR [eax],al
  44d1b4:	in     al,0xd9
  44d1b6:	xchg   ebx,eax
  44d1b7:	cmp    esp,edi
  44d1b9:	fldcw  WORD PTR [ebx-0x3c265bc7]
  44d1bf:	cmp    DWORD PTR [ecx+ebx*8-0x249bc625],edi
  44d1c6:	repz cmp DWORD PTR [ecx+edx*2+0x0],ebx
  44d1cb:	add    BYTE PTR [ebx+edx*4-0x28c00000],bl
  44d1d2:	(bad)  
  44d1d4:	clc    
  44d1d5:	fincstp 
  44d1d7:	ds adc dl,bl
  44d1da:	(bad)  
  44d1db:	ds sbb dl,bl
  44d1de:	pop    es
  44d1df:	aas    
  44d1e0:	add    dl,bl
  44d1e2:	(bad)  
  44d1e4:	pushf  
  44d1e5:	fadd   DWORD PTR [ebx-0x74277bc1]
  44d1eb:	aas    
  44d1ec:	jl     0x44d1c6
  44d1ee:	xchg   ebx,eax
  44d1ef:	aas    
  44d1f0:	test   al,bl
  44d1f2:	fwait
  44d1f3:	aas    
  44d1f4:	dec    eax
  44d1f5:	(bad)  
  44d1f7:	aas    
  44d1f8:	fsub   QWORD PTR [eax-0x6ce80000]
	...
  44d212:	add    BYTE PTR [eax],al
  44d214:	mov    bl,al
  44d216:	ret    
  44d217:	xor    BYTE PTR [eax-0x77cf2c3d],cl
  44d21d:	ret    
  44d21e:	jecxz  0x44d250
  44d220:	js     0x44d1e5
  44d222:	repz xor BYTE PTR [eax-0x3d],ch
  44d226:	add    esi,DWORD PTR [ecx]
  44d228:	test   al,0xc3
  44d22a:	adc    esi,DWORD PTR [ecx]
  44d22c:	mov    bl,al
  44d22e:	and    esi,DWORD PTR [ecx]
  44d230:	mov    eax,0x883133c2
  44d235:	ret    
  44d236:	inc    ebx
  44d237:	xor    DWORD PTR [eax-0x3d],ecx
  44d23a:	push   ebx
  44d23b:	xor    DWORD PTR [eax-0x3d],ecx
  44d23e:	arpl   WORD PTR [ecx],si
  44d240:	mov    ch,0xe
  44d242:	int    0x73
  44d244:	les    esi,FWORD PTR [esi-0x33]
  44d247:	mov    esp,DWORD PTR [esi+ebp*2-0x595b5c33]
  44d24e:	int    0xbb
  44d250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d251:	mov    dh,0xcd
  44d253:	(bad)  
  44d254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d255:	mov    cl,ch
  44d257:	rol    DWORD PTR [edx+edx*8-0x257b1c34],cl
  44d25e:	int3   
  44d25f:	repz test dl,al
  44d262:	int3   
  44d263:	add    eax,DWORD PTR [edi-0x18ec3236]
  44d269:	repnz int 0x23
  44d26c:	out    0x9a,eax
  44d26e:	into   
  44d26f:	xor    esp,edi
  44d271:	loop   0x44d240
  44d273:	inc    ebx
  44d274:	out    0x8a,eax
  44d276:	into   
  44d277:	push   ebx
	...
  44d28c:	(bad)  
  44d28d:	push   edx
  44d28e:	into   
  44d28f:	arpl   di,ax
  44d291:	call   0x83ce:0x82c773ce
  44d298:	(bad)  
  44d299:	dec    edx
  44d29a:	int    0x93
  44d29c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d29d:	jb     0x44d26c
  44d29f:	mov    ds:0xb3cd5aa7,eax
  44d2a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d2a5:	mov    ds:0xaa7c3cd,al
  44d2aa:	into   
  44d2ab:	rol    DWORD PTR [edi-0x781c32ae],cl
  44d2b1:	pop    edx
  44d2b2:	int    0xf3
  44d2b4:	xchg   DWORD PTR [edx-0x33],eax
  44d2b7:	add    eax,DWORD PTR [esi-0x19ec3136]
  44d2bd:	hlt    
  44d2be:	into   
  44d2bf:	and    esp,esi
  44d2c1:	pushf  
  44d2c2:	iret   
  44d2c3:	xor    esp,esi
  44d2c5:	in     al,0xce
  44d2c7:	inc    ebx
  44d2c8:	out    0xc,al
  44d2ca:	iret   
  44d2cb:	push   ebx
  44d2cc:	(bad)  
  44d2cd:	(bad)  
  44d2ce:	mov    ebp,0x859f16d6
  44d2d3:	(bad)  
  44d2d4:	push   es
  44d2d5:	lahf   
  44d2d6:	(bad)  
  44d2d7:	(bad)  
  44d2d8:	ss lahf 
  44d2da:	push   ebp
  44d2db:	(bad)  
  44d2dc:	inc    esi
  44d2dd:	lahf   
  44d2de:	pop    ebp
  44d2df:	(bad)  
  44d2e0:	push   ss
  44d2e1:	lahf   
  44d2e2:	inc    ebp
  44d2e3:	(bad)  
  44d2e4:	es lahf 
  44d2e6:	sub    eax,0x159f76d6
  44d2eb:	(bad)  
  44d2ec:	data16 lahf 
  44d2ee:	mov    ebp,0xd5
	...
  44d303:	add    BYTE PTR [esi-0x61],dl
  44d306:	(bad)
  44d309:	lahf   
  44d30a:	int    0xd5
  44d30c:	mov    dh,0xa3
  44d30e:	aad    0xcf
  44d310:	(bad)  
  44d311:	mov    ds:0xa3d6cfdd,eax
  44d316:	add    eax,0xeda3e6d0
  44d31b:	iret   
  44d31c:	jbe    0x44d2c1
  44d31e:	adc    eax,0x3da366d0
  44d323:	rcl    BYTE PTR [esi-0x792ffa5d],1
  44d329:	mov    ds:0xa436d00d,eax
  44d32e:	push   ebp
  44d32f:	rol    BYTE PTR [esi-0x5c],1
  44d332:	pop    ebp
  44d333:	rcl    BYTE PTR [esi],1
  44d335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d336:	inc    ebp
  44d337:	shl    BYTE PTR [esi],1
  44d339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d33a:	sub    eax,0x95a3f6d0
  44d33f:	shl    dh,1
  44d341:	mov    ds:0xa3d6d03d,eax
  44d346:	inc    ebp
  44d347:	rol    dh,1
  44d349:	mov    ds:0xa4b6d04d,eax
  44d34e:	aad    0xce
  44d350:	(bad)  
  44d351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d352:	(bad)  
  44d354:	(bad)  
  44d355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d356:	add    eax,0xa4e6cf
  44d35b:	cmc    
  44d35c:	imul   ecx,DWORD PTR [esi+0x2d],0xffffff9d
  44d360:	cmp    DWORD PTR [esi],0x2d
  44d363:	lds    edi,FWORD PTR [ebx+0x6e]
  44d366:	sub    eax,0x8d
	...
  44d37b:	add    BYTE PTR [ebx+0x5e],dh
  44d37e:	sub    eax,0x2e0e6b95
  44d383:	pop    ebp
  44d384:	cmp    dh,0x2d
  44d387:	gs jp  0x44d3b8
  44d38a:	cs dec ebp
  44d38c:	jb     0x44d3ac
  44d38e:	cs xor eax,0x1d2dce6a
  44d394:	cmp    BYTE PTR [esi-0x11843ad3],0x2d
  44d39b:	int    0x73
  44d39d:	fisubr WORD PTR ds:0x2e8e6bd5
  44d3a3:	fld    QWORD PTR [esi+edi*2]
  44d3a6:	cs in  eax,0x4
  44d3a9:	scas   al,BYTE PTR es:[edi]
  44d3aa:	cs or  eax,0xf52e9e07
  44d3b0:	add    al,0x4e
  44d3b2:	cs sbb eax,0x452e3de7
  44d3b8:	out    0x6d,eax
  44d3ba:	cs or  eax,0x152e5de7
  44d3c0:	out    0xd,eax
  44d3c2:	das    
  44d3c3:	pop    ebp
  44d3c4:	add    al,0xfe
  44d3c6:	cs gs add al,0x2e
  44d3ca:	das    
  44d3cb:	dec    ebp
  44d3cc:	add    al,0x1e
  44d3ce:	das    
  44d3cf:	xor    eax,0x9d2ece04
  44d3d4:	in     al,0xbd
  44d3d6:	cs inc ebp
  44d3d8:	in     al,0xed
  44d3da:	cs dec ebp
  44d3dc:	in     al,0xdd
  44d3de:	cs push ebp
	...
  44d3f4:	in     al,0x8d
  44d3f6:	das    
  44d3f7:	fld    QWORD PTR [ebp-0x6fffd083]
  44d3fd:	shl    BYTE PTR [ebx],0x37
  44d400:	mov    al,0xbe
  44d402:	xor    esi,DWORD PTR [edi]
  44d404:	mov    al,ds:0x303743c0
  44d409:	rcl    BYTE PTR [ebx+0x37],0x70
  44d40d:	shl    BYTE PTR [ebx+0x37],0x30
  44d411:	shl    BYTE PTR [ebx+0x37],0x20
  44d415:	rol    BYTE PTR [ebx-0x6c3fefc9],0x37
  44d41c:	sar    BYTE PTR [edi-0x400fc85d],1
  44d422:	mov    bl,0x37
  44d424:	mov    al,ds:0xb037c3bf
  44d429:	mov    edi,0x7d5c37d3
  44d42e:	add    BYTE PTR [eax],al
  44d430:	mov    WORD PTR [ebx-0x25a00000],ss
  44d436:	cmp    BYTE PTR [bx+si+0x6fdb],cl
  44d43b:	cmp    BYTE PTR [eax-0x25],dh
  44d43e:	ja     0x44d478
  44d440:	cwde   
  44d441:	fstp   TBYTE PTR [edi+0x38]
  44d444:	nop
  44d445:	fild   DWORD PTR [edi-0x5423cbc8]
  44d44b:	cmp    BYTE PTR [ebx+ebx*8-0x4d],ch
  44d44f:	cmp    BYTE PTR [ebx+ebx*8-0x23b3c745],dl
  44d456:	and    edi,DWORD PTR [ecx]
	...
  44d46c:	test   al,0xda
  44d46e:	dec    edi
  44d46f:	cmp    DWORD PTR [eax-0x47c6a826],edx
  44d475:	ficomp DWORD PTR [edi+0x39]
  44d478:	mov    al,0xda
  44d47a:	addr16 cmp eax,ecx
  44d47d:	fld    TBYTE PTR [edi+0x39]
  44d480:	fmul   QWORD PTR [eax+edi*8]
  44d483:	(bad)  
  44d484:	cmp    BYTE PTR [eax+eax*1-0x3abd4b00],dl
  44d48b:	(bad)  
  44d48c:	in     al,dx
  44d48d:	repnz leave 
  44d48f:	pop    es
  44d490:	out    dx,eax
  44d491:	loop   0x44d45c
  44d493:	daa    
  44d494:	fistp  WORD PTR [edx-0x1520d036]
  44d49a:	leave  
  44d49b:	aas    
  44d49c:	iret   
  44d49d:	xor    cl,dl
  44d49f:	inc    edi
  44d4a0:	iret   
  44d4a1:	and    cl,dl
  44d4a3:	dec    edi
  44d4a4:	mov    edi,0xbf9bca22
  44d4a9:	push   esi
  44d4aa:	retf   0xafa3
  44d4ad:	dec    esi
  44d4ae:	retf   0xafab
  44d4b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d4b2:	retf   0x9fb3
  44d4b5:	dec    esi
  44d4b6:	retf   0x9fbb
  44d4b9:	jmp    0xffbf:0xfa91f7bf
  44d4c0:	mov    edx,edi
  44d4c2:	enter  0x8007,0xfa
  44d4c6:	enter  0x780f,0xea
  44d4ca:	enter  0xf017,0xfa
  44d4ce:	enter  0x1f,0x0
	...
  44d4e2:	add    BYTE PTR [eax],al
  44d4e4:	call   0xe06c9e83
  44d4e9:	call   0x37c8:0xead82fc9
  44d4f0:	sar    dl,1
  44d4f2:	enter  0xc83f,0xba
  44d4f6:	leave  
  44d4f7:	inc    edi
  44d4f8:	rol    BYTE PTR [esi-0x38],0xb3
  44d4fc:	mov    eax,0xb0bbc83e
  44d501:	ss leave 
  44d503:	ret    
  44d504:	test   al,0x1e
  44d506:	leave  
  44d507:	retf   
  44d508:	mov    al,ds:0x98d3c906
  44d50d:	dec    al
  44d50f:	fist   DWORD PTR [eax-0x74804206]
  44d515:	(bad)  
  44d516:	lds    edi,FWORD PTR gs:[edx]
  44d519:	test   eax,0xa8cac531
  44d51e:	push   ebp
  44d51f:	lds    ebp,FWORD PTR [edx-0x553aba5a]
  44d525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d526:	in     eax,0xc6
  44d528:	mov    edx,0xaac6e5a6
  44d52d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d52e:	aad    0xc6
  44d530:	stos   BYTE PTR es:[edi],al
  44d531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d532:	(bad)
  44d535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d536:	(bad)
  44d539:	out    0xe9,eax
  44d53b:	jae    0x44d5b7
  44d53d:	out    0x9,eax
  44d53f:	add    esi,DWORD PTR [ebp-0x4d2c2271]
  44d545:	lahf   
  44d546:	in     eax,dx
  44d547:	rol    DWORD PTR [eax],cl
	...
  44d559:	add    BYTE PTR [eax],al
  44d55b:	add    BYTE PTR [edx-0x602c3a61],dh
  44d561:	lahf   
  44d562:	pushf  
  44d563:	rol    DWORD PTR [ecx],cl
  44d565:	mov    al,ds:0x9fc9d376
  44d56a:	jns    0x44d540
  44d56c:	or     esp,DWORD PTR [eax-0x5e7d2b46]
  44d572:	dec    edi
  44d573:	ror    BYTE PTR [esi-0x5e],cl
  44d576:	ret    
  44d577:	shr    BYTE PTR [edx],cl
  44d579:	mov    ds:0x9c26d134,al
  44d57e:	fmul   st(6),st
  44d580:	jecxz  0x44d51e
  44d582:	pop    ss
  44d583:	iret   
  44d584:	ins    DWORD PTR es:[edi],dx
  44d585:	pushf  
  44d586:	jne    0x44d557
  44d588:	icebp  
  44d589:	pushf  
  44d58a:	mov    esi,0xbd9d9fcf
  44d58f:	int    0xbf
  44d591:	popf   
  44d592:	daa    
  44d593:	into   
  44d594:	mov    ds,WORD PTR [ebp-0x61d931f6]
  44d59a:	inc    ebx
  44d59b:	into   
  44d59c:	repz popf 
  44d59e:	mov    cs,esi
  44d5a0:	xlat   BYTE PTR ds:[ebx]
  44d5a1:	popf   
  44d5a2:	add    BYTE PTR [ebx-0x1bd11efd],al
  44d5a8:	stc    
  44d5a9:	sub    BYTE PTR [edi],0xbb
  44d5ac:	icebp  
  44d5ad:	js     0x44d5de
  44d5af:	popa   
  44d5b0:	call   0x7f2c0e47
  44d5b5:	jl     0x44d5ef
  44d5b7:	add    edi,DWORD PTR [ecx-0x49]
  44d5ba:	cmp    ch,bh
  44d5bc:	outs   dx,BYTE PTR ds:[esi]
  44d5bd:	popf   
  44d5be:	cmp    bh,bh
	...
  44d5d4:	outs   dx,BYTE PTR ds:[esi]
  44d5d5:	mov    ds:0x597ea138,eax
  44d5da:	cmp    BYTE PTR [ebx+0x4d383c7e],bl
  44d5e0:	jno    0x44d65e
  44d5e2:	cmp    esi,edi
  44d5e4:	outs   dx,DWORD PTR ds:[esi]
  44d5e5:	mov    dl,0x39
  44d5e7:	ret    0xc17f
  44d5ea:	cmp    eax,esp
  44d5ec:	jl     0x44d56f
  44d5ee:	cmp    ch,BYTE PTR [ebp-0x79c5b294]
  44d5f4:	ins    BYTE PTR es:[edi],dx
  44d5f5:	or     edi,DWORD PTR [ebx]
  44d5f7:	ds jg  0x44d5d3
  44d5fa:	cmp    cl,BYTE PTR [edi]
  44d5fc:	jg     0x44d5f8
  44d5fe:	cmp    dh,bl
  44d600:	ins    DWORD PTR es:[edi],dx
  44d601:	xchg   esp,eax
  44d602:	cmp    ebx,DWORD PTR [ecx]
  44d604:	ins    BYTE PTR es:[edi],dx
  44d605:	push   ecx
  44d606:	cmp    esp,DWORD PTR [edx]
  44d608:	cld    
  44d609:	mov    esi,0x9bfdc43b
  44d60e:	xor    al,0x21
  44d610:	in     eax,dx
  44d611:	jns    0x44d647
  44d613:	cmp    ch,ch
  44d615:	add    DWORD PTR ds:0x34ccfa52,esi
  44d61b:	out    0xf3,al
  44d61d:	jp     0x44d654
  44d61f:	cmp    edx,edi
  44d621:	jae    0x44d658
  44d623:	jae    0x44d618
  44d625:	(bad)  
  44d626:	xor    eax,0x3688fb9d
  44d62b:	inc    esp
  44d62c:	lock sub dh,BYTE PTR [edi]
  44d62f:	add    BYTE PTR ds:0xe73eeacc,dl
  44d635:	retf   0x3f17
	...
  44d64c:	mov    eax,ds:0xa23f48cc
  44d651:	int3   
  44d652:	test   eax,0xddcb763f
  44d657:	aas    
  44d658:	int3   
  44d659:	jno    0x44d652
  44d65b:	jmp    FWORD PTR [edx+edx*4-0x3e8f0000]
  44d662:	loope  0x44d694
  44d664:	enter  0xefc0,0x31
  44d668:	iret   
  44d669:	mov    esi,0xbea632c4
  44d66e:	xlat   BYTE PTR ds:[ebx]
  44d66f:	xor    dh,bh
  44d671:	mov    esi,0xbed732f2
  44d676:	add    DWORD PTR [ebx],esi
  44d678:	mov    al,al
  44d67a:	add    al,0x33
  44d67c:	data16 shl BYTE PTR [ebx+esi*1],0x1d
  44d681:	rol    BYTE PTR [ebp+0x33],0x33
  44d685:	shr    BYTE PTR [ebx+esi*1-0x2e],0xbf
  44d68a:	lea    esi,[ebx]
  44d68c:	jmp    0x44d64d
  44d68e:	mov    ds:0xaebf8e33,al
  44d693:	xor    ecx,DWORD PTR [esi]
  44d695:	popf   
  44d696:	enter  0x6433,0x9d
  44d69a:	jmp    0xc534:0x26a7b833
  44d6a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d6a2:	inc    esp
  44d6a3:	xor    al,0xa7
  44d6a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d6a6:	xchg   ecx,eax
  44d6a7:	xor    al,0x7a
  44d6a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d6aa:	(bad)  
  44d6ab:	xor    al,0x24
  44d6ad:	test   al,0xe6
  44d6af:	xor    al,0x0
	...
  44d6c1:	add    BYTE PTR [eax],al
  44d6c3:	add    dh,ah
  44d6c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d6c6:	sub    dh,BYTE PTR ds:0x355ea6be
  44d6cc:	jp     0x44d674
  44d6ce:	shl    DWORD PTR ds:0xdd3a1cb5,1
  44d6d4:	mov    al,ds:0xab0839fb
  44d6d9:	dec    ecx
  44d6da:	cmp    ah,BYTE PTR [edx+0x1d3ae0a3]
  44d6e0:	mov    bh,BYTE PTR [ecx-0x1f7db5c5]
  44d6e6:	cmp    al,cl
  44d6e8:	mov    dl,BYTE PTR [esi+0x337d4034]
  44d6ee:	cmp    al,0x51
  44d6f0:	in     eax,dx
  44d6f1:	(bad)  
  44d6f2:	cmp    esp,DWORD PTR [ecx-0x13]
  44d6f5:	js     0x44d72b
  44d6f7:	mov    edx,0xa834aedd
  44d6fc:	fcomp  QWORD PTR [ebp+0x35]
  44d6ff:	push   cs
  44d700:	iret   
  44d701:	xchg   edx,eax
  44d702:	ss and eax,0x5535e1cf
  44d708:	mov    edi,0xbe743614
  44d70d:	xor    DWORD PTR [edi],esi
  44d70f:	jle    0x44d6bf
  44d711:	outs   dx,BYTE PTR ds:[esi]
  44d712:	aaa    
  44d713:	nop
  44d714:	scas   al,BYTE PTR es:[edi]
  44d715:	pop    esp
  44d716:	aaa    
  44d717:	pushf  
  44d718:	sahf   
  44d719:	push   edx
  44d71a:	aaa    
  44d71b:	mov    edi,0xcd37a09e
  44d720:	mov    ?,WORD PTR [edx+0x37]
  44d723:	jecxz  0x44d6b3
  44d725:	loop   0x44d75d
  44d727:	repnz add BYTE PTR [eax],al
	...
  44d73a:	add    BYTE PTR [eax],al
  44d73c:	jle    0x44d728
  44d73e:	add    edi,DWORD PTR ss:[ecx-0xe]
  44d742:	aaa    
  44d743:	psllw  mm3,mm3
  44d746:	aaa    
  44d747:	and    al,0xe9
  44d749:	lahf   
  44d74a:	inc    eax
  44d74b:	(bad)  
  44d74d:	dec    ebx
  44d74e:	inc    eax
  44d74f:	sti    
  44d750:	fldln2 
  44d752:	inc    eax
  44d753:	dec    eax
  44d754:	shl    BYTE PTR [ecx+eax*2+0x4061c880],1
  44d75b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d75c:	ret    
  44d75d:	(bad)  
  44d75e:	pop    ebp
  44d75f:	inc    ecx
  44d760:	cmp    BYTE PTR [ebp-0x5afdbe4d],ah
  44d766:	mov    cl,0x41
  44d768:	or     al,0xa5
  44d76a:	jg     0x44d7ad
  44d76c:	scas   al,BYTE PTR es:[edi]
  44d76d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d76e:	fiadd  DWORD PTR [edx-0x76]
  44d771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d772:	rol    BYTE PTR [edx+0x75],0xa4
  44d776:	or     al,0x43
  44d778:	push   ecx
  44d779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d77a:	hlt    
  44d77b:	inc    edx
  44d77c:	dec    eax
  44d77d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d77e:	imul   eax,DWORD PTR [edx+0x33],0xffffffa4
  44d782:	mov    BYTE PTR [edx+0x67],al
  44d785:	mov    ds:0xa3784222,eax
  44d78a:	xor    DWORD PTR [edx-0x6f],eax
  44d78d:	mov    ds:0xa3a2423a,eax
  44d792:	jmp    0x96286a4a
  44d797:	add    al,0xb5
  44d799:	(bad)  
  44d79a:	jmp    0x44d7cf
  44d79c:	lods   eax,DWORD PTR ds:[esi]
  44d79d:	lahf   
  44d79e:	loopne 0x44d7d3
	...
  44d7b4:	mov    esp,0x33b09f
  44d7b9:	mov    al,ds:0x9fd93387
  44d7be:	call   0x3333:0x6a9fe833
  44d7c5:	mov    al,ds:0xa016335a
  44d7ca:	inc    eax
  44d7cb:	xor    ebx,DWORD PTR [eax+eiz*4]
  44d7ce:	xor    DWORD PTR [ebx],esi
  44d7d0:	mul    DWORD PTR [eax-0x5f18ccd4]
  44d7d6:	xor    al,0x33
  44d7d8:	inc    edx
  44d7d9:	mov    eax,ds:0xa14a3371
  44d7de:	xor    DWORD PTR [ebx],0x34e39dcf
  44d7e4:	ss lahf 
  44d7e6:	outs   dx,DWORD PTR ds:[esi]
  44d7e7:	xor    eax,0x77009f4b
  44d7ec:	shl    BYTE PTR [ecx],0x34
  44d7ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d7f0:	enter  0x33c9,0xb7
  44d7f4:	rcl    cl,0x33
  44d7f7:	mov    bh,0xa8
  44d7f9:	mov    ecx,0xc1a0b733
  44d7fe:	xor    eax,DWORD PTR [edi-0x68cc1658]
  44d804:	mov    al,ds:0x8aeb33f1
  44d809:	mov    ch,BYTE PTR [ecx+ebx*8]
  44d80c:	cmp    BYTE PTR [ebp+0x2c],0xcf
  44d810:	mov    ch,BYTE PTR [esi-0x4782efd4]
  44d816:	sub    al,0x14
	...
  44d82c:	in     eax,dx
  44d82d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d82e:	sub    al,0xba
  44d830:	loop   0x44d84a
  44d832:	sub    eax,0x2d06dd77
  44d837:	mov    bl,ch
  44d839:	sub    al,0x2d
  44d83b:	jnp    0x44d80a
  44d83d:	sbb    eax,0x21cd752d
  44d842:	sub    eax,0x2cc4bd23
  44d847:	hlt    
  44d848:	ret    
  44d849:	lods   eax,DWORD PTR ds:[esi]
  44d84a:	sub    eax,0x2d3fabb0
  44d84f:	mov    bl,0xa3
  44d851:	ins    BYTE PTR es:[edi],dx
  44d852:	sub    eax,0x2d62ab97
  44d857:	jb     0x44d7fb
  44d859:	(bad)  
  44d85a:	sub    eax,0x2e348a46
  44d85f:	xor    al,0x82
  44d861:	int3   
  44d862:	sub    eax,0x2ded8a12
  44d867:	xlat   BYTE PTR ds:[ebx]
  44d868:	sbb    esp,0x2d
  44d86b:	in     al,0xec
  44d86d:	xchg   esp,eax
  44d86e:	cs lock in al,dx
  44d871:	mov    cl,0x2e
  44d873:	adc    bh,bl
  44d875:	mov    eax,ds:0xa5e5002e
  44d87a:	dec    edx
  44d87b:	ss stos BYTE PTR es:[edi],al
  44d87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d87e:	pusha  
  44d87f:	ss jbe 0x44d827
  44d882:	jnp    0x44d8ba
  44d884:	xchg   esi,eax
  44d885:	test   al,0x90
  44d887:	ss jp  0x44d832
  44d88a:	xchg   esp,eax
  44d88b:	xchg   BYTE PTR ss:[eax+0x36a5],ch
	...
  44d8a2:	add    BYTE PTR [eax],al
  44d8a4:	xchg   BYTE PTR [eax-0x57e1c940],ch
  44d8aa:	iret   
  44d8ab:	ss sub eax,0x4236e1a8
  44d8b1:	test   al,0xf1
  44d8b3:	ss inc edx
  44d8b5:	test   al,0xfc
  44d8b7:	ss jmp 0x1da8:0xa9371ba6
  44d8bf:	aaa    
  44d8c0:	aad    0xa6
  44d8c2:	aaa    
  44d8c3:	aaa    
  44d8c4:	push   esp
  44d8c5:	test   al,0x4a
  44d8c7:	aaa    
  44d8c8:	push   ebx
  44d8c9:	test   al,0x63
  44d8cb:	aaa    
  44d8cc:	sub    DWORD PTR [eax-0x57afc89b],0xa8103783
  44d8d6:	lea    esi,[edi]
  44d8d8:	das    
  44d8d9:	test   al,0x9e
  44d8db:	aaa    
  44d8dc:	fsub   QWORD PTR [edi-0x5836c831]
  44d8e2:	sti    
  44d8e3:	aaa    
  44d8e4:	pop    ebx
  44d8e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d8e6:	push   cs
  44d8e7:	cmp    BYTE PTR [edi-0x5b],ch
  44d8ea:	xor    DWORD PTR [eax],edi
  44d8ec:	jb     0x44d893
  44d8ee:	pop    eax
  44d8ef:	cmp    BYTE PTR [ebx-0x5b],al
  44d8f2:	cwde   
  44d8f3:	cmp    BYTE PTR [ebp+0x6538e5a4],cl
  44d8f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d8fa:	adc    eax,0x25a2a539
  44d8ff:	cmp    DWORD PTR [eax-0x4ac63a5e],esi
  44d905:	shl    BYTE PTR ds:0xd,1
	...
  44d91b:	add    bh,bl
  44d91d:	mov    al,ds:0x29dfaa3a
  44d922:	cmp    ecx,DWORD PTR [esi+ecx*8]
  44d925:	push   ecx
  44d926:	cmp    edx,DWORD PTR [esi+ecx*8-0x3effc3ca]
  44d92d:	in     al,0x37
  44d92f:	mov    BYTE PTR [ecx-0x4cbcbee4],bh
  44d935:	xor    DWORD PTR [edi],0x0
  44d938:	mov    ch,0xf6
  44d93a:	inc    ebx
  44d93b:	jmp    edx
  44d93d:	inc    esi
  44d93e:	cld    
  44d93f:	push   DWORD PTR [ebp-0x7bd8d3a4]
  44d945:	add    DWORD PTR [esi],ebp
  44d947:	fwait
  44d948:	xchg   DWORD PTR [ebx+0x38866733],eax
  44d94e:	xor    esp,DWORD PTR [ecx-0x5ec7897a]
  44d954:	jmp    0xe361074a
  44d959:	jge    0x44d98a
  44d95b:	mov    gs,edx
  44d95d:	push   cs
  44d95e:	xor    BYTE PTR [ebp+0x71347de2],dh
  44d964:	int    0x39
  44d966:	xor    al,0x10
  44d968:	int3   
  44d969:	loop   0x44d99f
  44d96b:	dec    eax
  44d96c:	mov    esp,0xbc903533
  44d971:	push   edi
  44d972:	xor    eax,0x3586acdc
  44d977:	cld    
  44d978:	lods   al,BYTE PTR ds:[esi]
  44d979:	cmc    
  44d97a:	cmp    DWORD PTR [ebx],edx
  44d97c:	lahf   
  44d97d:	leave  
  44d97e:	cmp    DWORD PTR [esi],edi
	...
  44d994:	lahf   
  44d995:	adc    DWORD PTR [edx],edi
  44d997:	mov    edx,0xd53a9f8f
  44d99c:	(bad)  
  44d99d:	mov    eax,0x6a7e693a
  44d9a2:	cmp    ecx,DWORD PTR [ecx+0x3adb8f7e]
  44d9a8:	int    0xa3
  44d9aa:	sub    eax,DWORD PTR [eax+0x3f]
  44d9ad:	mov    ds:0xa2d940ec,eax
  44d9b2:	inc    edi
  44d9b3:	inc    ecx
  44d9b4:	push   ebx
  44d9b5:	mov    ds:0xa1c940ba,al
  44d9ba:	cmp    eax,0x89a1343e
  44d9bf:	cmp    eax,0x3d76a14d
  44d9c4:	inc    esi
  44d9c5:	mov    eax,ds:0xa1303d5c
  44d9ca:	mov    al,0x3d
  44d9cc:	cld    
  44d9cd:	mov    al,ds:0xa0fe3db6
  44d9d2:	jg     0x44da11
  44d9d4:	leave  
  44d9d5:	mov    al,ds:0xa0d13d74
  44d9da:	call   0xbae56a1d
  44d9df:	mov    esp,DWORD PTR ds:[eax-0x5f92c0d7]
  44d9e6:	scas   eax,DWORD PTR es:[edi]
  44d9e7:	or     DWORD PTR ds:[edi-0x60f4c13d],ebx
  44d9ee:	sar    DWORD PTR [esi],0x12
  44d9f1:	lahf   
  44d9f2:	into   
  44d9f3:	ds xor eax,0x3e669f
	...
  44da09:	add    BYTE PTR [eax],al
  44da0b:	add    BYTE PTR [ecx-0x61],al
  44da0e:	dec    edx
  44da0f:	ds mov ch,0x8f
  44da12:	jmp    0xca245c6a
  44da17:	add    al,0xb5
  44da19:	(bad)  
  44da1a:	loopne 0x44da4f
  44da1c:	cld    
  44da1d:	lahf   
  44da1e:	xchg   ecx,eax
  44da1f:	xor    ebx,DWORD PTR [ebx-0x60]
  44da22:	mov    bl,0x34
  44da24:	out    0xa0,eax
  44da26:	imul   esi,DWORD PTR [eax+eiz*2],0x25317ba1
  44da2d:	mov    ds:0xa26b312e,al
  44da32:	add    ah,ah
  44da34:	xchg   DWORD PTR [edx-0x67864cd],eax
  44da3a:	xor    ebp,DWORD PTR [ebx-0x8cc471c]
  44da40:	loop   0x44da4c
  44da42:	sub    eax,0x2ccbddaf
  44da47:	mov    dh,0xdd
  44da49:	mov    edx,0x8ccbf42c
  44da4e:	sub    eax,0x2db3c3df
  44da53:	test   bl,0x52
  44da56:	sub    eax,0x2d3cc20c
  44da5b:	and    BYTE PTR [edx-0x5d65d2a8],ch
  44da61:	jnp    0x44da91
  44da63:	add    ch,BYTE PTR [ebx-0x5c57d0f6]
  44da69:	mov    ch,0x2f
  44da6b:	mov    ebx,0xb32f3e89
	...
  44da84:	sub    bh,0x2f
  44da87:	test   DWORD PTR [eax+0x7eeb2fe2],ecx
  44da8d:	xchg   DWORD PTR [eax],edi
  44da8f:	cli    
  44da90:	out    dx,al
  44da91:	cdq    
  44da92:	cmp    BYTE PTR [ebp-0x4fc7b112],ch
  44da98:	fidivr WORD PTR [eax]
  44da9a:	cmp    ch,al
  44da9c:	fidiv  WORD PTR [eax+edi*1-0x48]
  44daa0:	into   
  44daa1:	popa   
  44daa2:	cmp    BYTE PTR [esi+ecx*8-0x3e9ec7a4],bh
  44daa9:	or     BYTE PTR [ecx],bh
  44daab:	push   esp
  44daac:	mov    ecx,0xb1483905
  44dab1:	xor    BYTE PTR [ecx],bh
  44dab3:	dec    ebp
  44dab4:	test   eax,0xa150392c
  44dab9:	push   ds
  44daba:	cmp    DWORD PTR [eax],esp
  44dabc:	cdq    
  44dabd:	into   
  44dabe:	cmp    BYTE PTR [eax],al
  44dac0:	mov    bh,0x9b
  44dac2:	cmc    
  44dac3:	cmp    BYTE PTR [ecx+ebx*4+0x5],al
  44dac7:	cmp    DWORD PTR [ecx-0x67],esi
  44daca:	cmp    edi,DWORD PTR [ecx]
  44dacc:	sbb    eax,0x8a395699
  44dad1:	call   0x3982:0x999d396d
  44dad8:	cdq    
  44dad9:	cdq    
  44dada:	mov    al,0x39
  44dadc:	push   eax
  44dadd:	cdq    
  44dade:	aad    0x39
  44dae0:	push   edx
  44dae1:	cdq    
  44dae2:	(bad)  
  44dae5:	cdq    
  44dae6:	inc    ecx
  44dae7:	cmp    al,BYTE PTR [eax]
	...
  44daf9:	add    BYTE PTR [eax],al
  44dafb:	add    dl,bl
  44dafd:	cdq    
  44dafe:	fs cmp al,ch
  44db01:	cdq    
  44db02:	xchg   DWORD PTR [edx],edi
  44db04:	jae    0x44da9e
  44db06:	cdq    
  44db07:	cmp    al,BYTE PTR [eax+ebx*4-0x67e7c53f]
  44db0e:	into   
  44db0f:	cmp    ch,BYTE PTR ds:0x293ae198
  44db15:	cwde   
  44db16:	in     eax,0x3a
  44db18:	xor    eax,0x963b0698
  44db1d:	cwde   
  44db1e:	jp     0x44db5b
  44db20:	push   edi
  44db21:	xchg   edi,eax
  44db22:	test   eax,0xdb97e83b
  44db27:	cmp    ebp,DWORD PTR [esi-0x55c3e763]
  44db2d:	popf   
  44db2e:	push   ds
  44db2f:	cmp    al,0xbc
  44db31:	dec    edi
  44db32:	aas    
  44db33:	cmp    al,0x4f
  44db35:	popf   
  44db36:	ins    DWORD PTR es:[edi],dx
  44db37:	cmp    al,0x17
  44db39:	popf   
  44db3a:	mov    al,ds:0xa99d363c
  44db3f:	cmp    al,0x1
  44db41:	popf   
  44db42:	mov    ebx,0xcc9ca13c
  44db47:	cmp    al,0xf5
  44db49:	pushf  
  44db4a:	loopne 0x44db88
  44db4c:	mov    ch,0x78
  44db4e:	aaa    
  44db4f:	clc    
  44db50:	cdq    
  44db51:	xlat   BYTE PTR ds:[ebx]
  44db52:	adc    DWORD PTR ss:[eax-0x77e2c90d],edx
  44db59:	sub    al,0x37
  44db5b:	dec    ebp
  44db5c:	add    BYTE PTR [ebx],0x37
  44db5f:	jo     0x44db61
	...
  44db71:	add    BYTE PTR [eax],al
  44db73:	add    BYTE PTR [eax+0x63],bh
  44db76:	ss xchg esp,eax
  44db78:	lock (bad) 
  44db7c:	call   0xe3721563
  44db81:	jg     0x44dbbd
  44db83:	inc    ebx
  44db84:	fistp  DWORD PTR [ecx+0x37d3873a]
  44db8a:	cmp    bh,BYTE PTR [edx-0x32c4cd35]
  44db90:	ret    
  44db91:	retf   
  44db92:	cmp    dh,ch
  44db94:	mov    ebx,0xb2323b8f
  44db99:	test   eax,0xadaa473b
  44db9e:	cmp    esp,DWORD PTR [edi-0x5e]
  44dba1:	xchg   ebp,eax
  44dba2:	cmp    eax,DWORD PTR [esi-0x5cc4c266]
  44dba8:	xchg   edx,eax
  44dba9:	inc    eax
  44dbaa:	cmp    ecx,ecx
  44dbac:	mov    dl,BYTE PTR [edx]
  44dbae:	cmp    al,0xe6
  44dbb0:	and    dh,0x63
  44dbb3:	(bad)  
  44dbb4:	mov    edx,0xb5fffd0a
  44dbb9:	fdiv   DWORD PTR [ebx]
  44dbbb:	daa    
  44dbbc:	in     eax,0x19
  44dbbe:	xor    al,0xcc
  44dbc0:	in     eax,0x68
  44dbc2:	sub    eax,0x2d3de487
  44dbc7:	xchg   ebx,eax
  44dbc8:	les    edx,FWORD PTR [ecx]
  44dbca:	cs sbb edi,eax
  44dbcd:	stos   DWORD PTR es:[edi],eax
  44dbce:	cs inc bh
  44dbd1:	cmc    
  44dbd2:	cs xor eax,esi
  44dbd5:	xor    eax,0x4e2f
	...
  44dbea:	add    BYTE PTR [eax],al
  44dbec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44dbed:	pop    DWORD PTR [edi-0x5f5f24ca]
  44dbf3:	ss mov al,ss:0xa0103775
  44dbfa:	push   ss
  44dbfb:	aaa    
  44dbfc:	imul   esp,DWORD PTR [eax-0x5fbbc8f4],0xffffffd0
  44dc03:	das    
  44dc04:	and    DWORD PTR [ebx-0x5c35d065],0xa3492f67
  44dc0e:	mov    ah,0x2f
  44dc10:	ret    
  44dc11:	mov    ds:0xa21a3145,al
  44dc16:	mov    esi,0xdca21c30
  44dc1b:	xor    ebp,ebx
  44dc1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44dc1e:	dec    edi
  44dc1f:	xor    bh,BYTE PTR [esi]
  44dc21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44dc22:	push   esp
  44dc23:	xor    DWORD PTR [esi],edi
  44dc25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44dc26:	mov    ds:0xf5a49b31,eax
  44dc2b:	xor    al,BYTE PTR [ecx+0x373335a4]
  44dc31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44dc32:	xor    bl,BYTE PTR [di]
  44dc35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44dc36:	cwde   
  44dc37:	xor    ah,ah
  44dc39:	mov    ds:0x97953bf9,eax
  44dc3e:	(bad)  
  44dc3f:	cmp    esp,DWORD PTR [ecx-0x69]
  44dc42:	pop    ecx
  44dc43:	cmp    esp,DWORD PTR [ecx]
  44dc45:	xchg   edi,eax
  44dc46:	dec    edx
  44dc47:	cmp    edx,edi
  44dc49:	xchg   esi,eax
  44dc4a:	jne    0x44dc87
  44dc4c:	mov    al,0x98
  44dc4e:	add    BYTE PTR ds:0x0,bh
	...
  44dc64:	(bad)  
  44dc65:	cwde   
  44dc66:	lods   eax,DWORD PTR ds:[esi]
  44dc67:	cmp    al,0xfc
  44dc69:	cwde   
  44dc6a:	fdivr  DWORD PTR [edx+esi*1]
  44dc6d:	cdq    
  44dc6e:	jns    0x44dcac
  44dc70:	sub    ebx,DWORD PTR [ecx-0x6a55c3c6]
  44dc76:	adc    edi,DWORD PTR [esi]
  44dc78:	rcl    BYTE PTR [ebp+0x52b8fe00],cl
  44dc7e:	cmp    bl,BYTE PTR [ecx-0x3bc5c850]
  44dc84:	test   al,0x73
  44dc86:	cmp    dl,BYTE PTR [ebx+0x623a62a0]
  44dc8c:	cwde   
  44dc8d:	sub    bh,BYTE PTR [ebx]
  44dc8f:	push   edx
  44dc90:	nop
  44dc91:	sbb    DWORD PTR [ebx],edi
  44dc93:	xor    DWORD PTR [eax-0x7ff7c53f],ecx
  44dc99:	repnz cmp al,bh
  44dc9c:	jnp    0x44dce4
  44dc9e:	cmp    ebp,DWORD PTR [edx-0xd]
  44dca1:	add    eax,0x54e8e33c
  44dca6:	xor    al,0x96
  44dca8:	(bad)  
  44dcaa:	xor    al,0x30
  44dcac:	fcomip st,st(5)
  44dcae:	ss and cl,ah
  44dcb1:	bound  esi,QWORD PTR [edi]
  44dcb3:	(bad)  
  44dcb4:	int3   
  44dcb5:	pop    DWORD PTR [eax]
  44dcb7:	jmp    0x6e3cb742
  44dcbc:	mov    cl,0x8f
  44dcbe:	add    BYTE PTR [edi-0x57],bl
  44dcc1:	fidiv  DWORD PTR [eax]
  44dcc3:	push   esi
  44dcc4:	mov    al,ds:0x5a2d0e
	...
  44dcd9:	add    BYTE PTR [eax],al
  44dcdb:	add    BYTE PTR [ebp-0x7422d344],ah
  44dce1:	dec    eax
  44dce2:	sub    eax,0x2e08a26a
  44dce7:	push   ecx
  44dce8:	call   0x2de2:0x92932dcf
  44dcef:	jbe    0x44dc7b
  44dcf1:	xchg   BYTE PTR [esi],ch
  44dcf3:	ret    0x6ae5
  44dcf6:	das    
  44dcf7:	in     al,0xe5
  44dcf9:	and    eax,0xc7e49c30
  44dcfe:	das    
  44dcff:	mov    al,ds:0x2c3925de
  44dd04:	shl    DWORD PTR [eax],1
  44dd06:	cmp    al,BYTE PTR [eax]
  44dd08:	(bad)  
  44dd09:	xchg   esi,eax
  44dd0a:	out    dx,eax
  44dd0b:	cmp    DWORD PTR [esi+0x523a1d99],ebp
  44dd11:	pushf  
  44dd12:	pop    ecx
  44dd13:	cmp    bh,BYTE PTR [ecx-0x64]
  44dd16:	jp     0x44dd52
  44dd18:	addr16 fwait
  44dd1a:	add    eax,0x199cb53b
  44dd1f:	cmp    ebp,DWORD PTR [ebx-0x65]
  44dd22:	sub    DWORD PTR [ebx],edi
  44dd24:	imul   ebx,DWORD PTR [ebx-0x64fac4c7],0x45
  44dd2b:	cmp    ebp,DWORD PTR [esi]
  44dd2d:	fwait
  44dd2e:	pop    ebp
  44dd2f:	cmp    eax,ecx
  44dd31:	fwait
  44dd32:	cmp    BYTE PTR [ebx],0x84
  44dd35:	pushf  
  44dd36:	xchg   edi,eax
  44dd37:	cmp    ecx,DWORD PTR [edi-0x65]
  44dd3a:	scas   al,BYTE PTR es:[edi]
  44dd3b:	cmp    ecx,DWORD PTR [ebx+ebx*4-0x38]
  44dd3f:	cmp    eax,DWORD PTR [eax]
	...
  44dd51:	add    BYTE PTR [eax],al
  44dd53:	add    BYTE PTR [ebx+ebx*4-0x28],bl
  44dd57:	cmp    edi,edi
  44dd59:	call   0x3f66:0x98793d46
  44dd60:	inc    eax
  44dd61:	xchg   edi,eax
  44dd62:	add    BYTE PTR [eax],al
  44dd64:	or     al,0x8e
  44dd66:	idiv   edi
  44dd68:	xor    al,0x8e
  44dd6a:	add    BYTE PTR [eax],al
  44dd6c:	mov    ch,0xa3
  44dd6e:	and    dh,BYTE PTR [eax]
  44dd70:	aam    0x9d
  44dd72:	cmp    DWORD PTR [eax],esi
  44dd74:	nop
  44dd75:	mov    ds:0x9dd3305a,eax
  44dd7a:	xor    BYTE PTR [eax],0x5b
  44dd7d:	sahf   
  44dd7e:	fwait
  44dd7f:	xor    BYTE PTR [eax],ah
  44dd81:	sahf   
  44dd82:	(bad)  
  44dd83:	xor    cl,bl
  44dd85:	pushf  
  44dd86:	or     eax,0xff9cba31
  44dd8b:	xor    esp,edx
  44dd8d:	mov    eax,ds:0xa40632d0
  44dd92:	inc    esi
  44dd93:	xor    al,0xb5
  44dd95:	int3   
  44dd96:	daa    
  44dd97:	xchg   cl,cl
  44dd99:	jae    0x44ddc1
  44dd9b:	rol    eax,1
  44dd9d:	push   ss
  44dd9e:	xor    ch,BYTE PTR [esi-0x2ece9e35]
  44dda4:	ret    
  44dda5:	inc    edx
  44dda6:	xor    BYTE PTR [ebp-0x21cfab56],bl
  44ddac:	mov    ds:0x9c6d348f,al
  44ddb1:	stos   DWORD PTR es:[edi],eax
  44ddb2:	cmp    cl,ch
  44ddb4:	pushf  
  44ddb5:	mov    ds:0xde3a,al
	...
  44ddca:	add    BYTE PTR [eax],al
  44ddcc:	mov    ecx,ds
  44ddce:	cmp    ebx,edi
  44ddd0:	mov    edx,fs
  44ddd2:	xor    eax,0x36177f22
  44ddd7:	cmp    bh,BYTE PTR [edi+0x31]
  44ddda:	ss push 0x9d355eef
  44dde0:	out    dx,eax
  44dde1:	pop    ss
  44dde2:	cmp    edx,ecx
  44dde4:	fistp  WORD PTR [ecx]
  44dde6:	cmp    esp,edx
  44dde8:	ffreep st(0)
  44ddea:	cmp    cl,BYTE PTR [ecx]
  44ddec:	into   
  44dded:	mov    ?,WORD PTR [ebx]
  44ddef:	cmp    dh,cl
  44ddf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ddf2:	cmp    ebx,DWORD PTR [edi-0x42]
  44ddf5:	cmp    bh,BYTE PTR [ebx]
  44ddf7:	popf   
  44ddf8:	mov    esi,0xb1173b61
  44ddfd:	mov    ?,WORD PTR [eax]
  44ddff:	pop    ebp
  44de00:	test   eax,0xa1ef3881
  44de05:	repnz cmp BYTE PTR [esi-0x31d0cd65],ah
  44de0c:	xchg   ebx,eax
  44de0d:	add    DWORD PTR [edi],ebp
  44de0f:	sbb    cl,BYTE PTR [edx-0x7dd0d136]
  44de15:	sbb    BYTE PTR [edi],ch
  44de17:	inc    esp
  44de18:	jp     0x44ddb0
  44de1a:	das    
  44de1b:	mov    bh,0xf2
  44de1d:	das    
  44de1e:	xor    al,dl
  44de20:	jmp    0x21d8:0xa213e98f
  44de27:	add    al,0xb5
  44de29:	(bad)
  44de2d:	lahf   
  44de2e:	in     al,0x33
	...
  44de44:	into   
  44de45:	lahf   
  44de46:	scas   al,BYTE PTR es:[edi]
  44de47:	xor    ebx,esi
  44de49:	lahf   
  44de4a:	shl    DWORD PTR [ebx],cl
  44de4c:	ss lahf 
  44de4e:	pop    ebx
  44de4f:	xor    al,0x2d
  44de51:	lahf   
  44de52:	dec    eax
  44de53:	xor    al,0xb7
  44de55:	sahf   
  44de56:	out    dx,al
  44de57:	xor    al,0xc7
  44de59:	sahf   
  44de5a:	leave  
  44de5b:	xor    al,0x92
  44de5d:	sahf   
  44de5e:	shl    BYTE PTR [esp+edi*8],cl
  44de61:	sahf   
  44de62:	lods   al,BYTE PTR ds:[esi]
  44de63:	xor    al,0xcb
  44de65:	sahf   
  44de66:	pop    eax
  44de67:	xor    eax,0x366e9e65
  44de6c:	mov    ch,0x8f
  44de6e:	jmp    0xb21d1096
  44de73:	add    esi,DWORD PTR [ebp+0x2735548f]
  44de79:	popf   
  44de7a:	jmp    0x1de1c5b1
  44de7f:	xor    BYTE PTR [ecx+0x3a2f61a3],ah
  44de85:	mov    ds:0xa2c52f7f,eax
  44de8a:	dec    edx
  44de8b:	xor    DWORD PTR [edx-0x5f],edi
  44de8e:	into   
  44de8f:	cmp    DWORD PTR cs:[eax-0x685bd177],esp
  44de96:	inc    ecx
  44de97:	cmp    eax,0x38369b8a
  44de9c:	lods   al,BYTE PTR ds:[esi]
  44de9d:	call   0x3646:0x985e3625
  44dea4:	mov    ch,0x8f
  44dea6:	jmp    0x44dede
	...
  44debb:	add    dl,al
  44debd:	xlat   BYTE PTR ds:[ebx]
  44debe:	lds    eax,FWORD PTR [ebx]
  44dec0:	mov    ch,0x8f
  44dec2:	add    BYTE PTR [esi-0x1c],al
  44dec5:	mov    ecx,0x8fda7a2c
  44deca:	sub    eax,0x2db4e59c
  44decf:	sahf   
  44ded0:	enter  0x2ed1,0x4f
  44ded4:	loopne 0x44df41
  44ded6:	das    
  44ded7:	addr16 into 
  44ded9:	out    0x38,eax
  44dedb:	fidivr DWORD PTR [ebx+ebx*2-0x384069c6]
  44dee2:	xor    al,0x92
  44dee4:	lods   eax,DWORD PTR ds:[esi]
  44dee5:	pop    DWORD PTR [eax]
  44dee7:	jmp    0xca3cb562
  44deec:	mov    dh,0x8f
  44deee:	add    al,ch
  44def0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44def1:	cmp    ebp,DWORD PTR [esi]
  44def3:	mov    dl,0xa0
  44def5:	aaa    
  44def6:	das    
  44def7:	scas   al,BYTE PTR es:[edi]
  44def8:	fwait
  44def9:	add    eax,0xae7e6039
  44defe:	cmp    edi,DWORD PTR [ecx+0x4935fe7f]
  44df04:	in     eax,dx
  44df05:	ret    0xe935
  44df08:	push   es
  44df09:	(bad)  
  44df0a:	neg    DWORD PTR ds:0x35008fb9
  44df10:	out    0xe8,al
  44df12:	sub    al,0x23
  44df14:	loop   0x44defd
  44df16:	sub    eax,0x2e4ed8e3
  44df1b:	outs   dx,DWORD PTR ds:[esi]
  44df1c:	rcl    eax,cl
  44df1e:	cs out dx,al
	...
  44df34:	leave  
  44df35:	inc    esp
  44df36:	das    
  44df37:	push   ecx
  44df38:	mov    al,ds:0xa9482fbe
  44df3d:	loopne 0x44df77
  44df3f:	mov    ebp,0xc839e29e
  44df44:	pushf  
  44df45:	pop    ebp
  44df46:	cmp    dl,BYTE PTR [ebp-0x71]
  44df49:	mov    ebx,0x3d8f913a
  44df4e:	aaa    
  44df4f:	add    ah,cl
  44df51:	repnz idiv bh
  44df54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44df55:	xchg   edx,eax
  44df56:	add    BYTE PTR [eax],al
  44df58:	mov    al,0xa2
  44df5a:	js     0x44df8c
  44df5c:	cwde   
  44df5d:	mov    ds:0x9c103080,al
  44df62:	mov    BYTE PTR [eax],dh
  44df64:	or     BYTE PTR [eax+edx*4-0x6763efd0],bl
  44df6b:	xor    BYTE PTR [eax],bl
  44df6d:	pushf  
  44df6e:	mov    al,ds:0xa89b3030
  44df73:	xor    BYTE PTR [eax],ch
  44df75:	fwait
  44df76:	mov    al,0x30
  44df78:	lock fwait
  44df7a:	mov    eax,0xc09bd830
  44df7f:	xor    BYTE PTR [eax-0x77cf3765],dl
  44df85:	fwait
  44df86:	shl    BYTE PTR [eax],1
  44df88:	nop
  44df89:	fdiv   DWORD PTR [eax]
  44df8c:	cwde   
  44df8d:	fwait
  44df8e:	loopne 0x44dfc0
  44df90:	mov    al,0x9b
  44df92:	call   0xf0e087c7
  44df97:	xor    BYTE PTR [eax],al
	...
  44dfa9:	add    BYTE PTR [eax],al
  44dfab:	add    BYTE PTR [eax],dh
  44dfad:	mov    ds:0xa21830f8,al
  44dfb2:	add    BYTE PTR [ecx],dh
  44dfb4:	adc    BYTE PTR [ecx-0x5ef7cef8],ah
  44dfba:	adc    BYTE PTR [ecx],dh
  44dfbc:	adc    BYTE PTR [ecx-0x5ee7cee8],ah
  44dfc2:	and    BYTE PTR [ecx],dh
  44dfc4:	mov    al,0xa2
  44dfc6:	sub    BYTE PTR [ecx],dh
  44dfc8:	test   al,0xa2
  44dfca:	xor    BYTE PTR [ecx],dh
  44dfcc:	lock mov al,ds:0xa0d83138
  44dfd2:	inc    eax
  44dfd3:	xor    DWORD PTR [eax-0x77ceb75e],edx
  44dfd9:	mov    ds:0x94b53150,al
  44dfde:	xor    ebx,DWORD PTR [eax-0x7c]
  44dfe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44dfe2:	xor    esp,DWORD PTR [eax-0x7c]
  44dfe5:	test   BYTE PTR [ebx],dh
  44dfe7:	push   0x70338484
  44dfec:	in     al,0xd2
  44dfee:	xor    bh,BYTE PTR [eax-0x1c]
  44dff1:	loop   0x44e025
  44dff3:	and    ah,0x62
  44dff6:	xor    cl,BYTE PTR [eax-0x6fcd9d1c]
  44dffc:	les    edx,FWORD PTR [edx+0x32]
  44dfff:	cwde   
  44e000:	(bad)  
  44e001:	fidiv  DWORD PTR [ecx]
  44e003:	sbb    bh,al
  44e005:	jmp    0x2832:0x8ac72031
  44e00c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e00d:	mov    dh,BYTE PTR [edx]
  44e00f:	xor    BYTE PTR [eax],al
	...
  44e021:	add    BYTE PTR [eax],al
  44e023:	add    BYTE PTR [edi-0x58c7ce26],ah
  44e029:	jmp    0x4832:0x2aa74031
  44e030:	xchg   DWORD PTR [edx],ebp
  44e032:	xor    dl,BYTE PTR [eax-0x79]
  44e035:	sbb    dh,BYTE PTR [edx]
  44e037:	pop    eax
  44e038:	xchg   DWORD PTR [edx],ebp
  44e03a:	xor    ah,BYTE PTR [eax-0x79]
  44e03d:	or     dh,BYTE PTR [edx]
  44e03f:	push   0x70320ae7
  44e044:	out    0x5a,eax
  44e046:	xor    DWORD PTR [eax-0x19],edi
  44e049:	push   0x2e
  44e04b:	and    bh,0x6a
  44e04e:	cs mov bh,al
  44e051:	push   0x2e
  44e053:	nop
  44e054:	(bad)  
  44e055:	pop    edx
  44e056:	cs cwde 
  44e058:	(bad)  
  44e059:	push   0x2e
  44e05b:	mov    al,ds:0xa82f0ac7
  44e060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e061:	or     ch,BYTE PTR [edi]
  44e063:	mov    al,0xa7
  44e065:	pop    edx
  44e066:	cs mov eax,0x365d8fa7
  44e06c:	cmc    
  44e06d:	mov    eax,ds:0xa1fd369d
  44e072:	popf   
  44e073:	ss in  eax,0xa1
  44e076:	or     al,0x37
  44e078:	sbb    BYTE PTR [edx-0x692ed2fd],0x77
  44e07f:	sub    eax,0x2e419a1d
  44e084:	pop    esi
  44e085:	cdq    
  44e086:	cmp    ch,BYTE PTR [esi]
	...
  44e09c:	ins    BYTE PTR es:[edi],dx
  44e09d:	cdq    
  44e09e:	push   edx
  44e09f:	cs (bad) 
  44e0a1:	cwde   
  44e0a2:	enter  0x262e,0x98
  44e0a6:	xchg   BYTE PTR [edi],ch
  44e0a8:	inc    esp
  44e0a9:	cwde   
  44e0aa:	push   ds
  44e0ab:	das    
  44e0ac:	ins    BYTE PTR es:[edi],dx
  44e0ad:	cwde   
  44e0ae:	ss das 
  44e0b0:	scas   al,BYTE PTR es:[edi]
  44e0b1:	xchg   ebx,eax
  44e0b2:	iret   
  44e0b3:	das    
  44e0b4:	mov    al,ds:0x32fa193
  44e0b9:	xchg   esp,eax
  44e0ba:	mov    cl,0x2f
  44e0bc:	fcom   QWORD PTR [ebx-0x6cd1cf9c]
  44e0c2:	jp     0x44e0f4
  44e0c4:	and    DWORD PTR [ebx-0x6c9acfab],edx
  44e0ca:	sbb    DWORD PTR [ecx],esi
  44e0cc:	mov    dh,0x95
  44e0ce:	enter  0x7e31,0x95
  44e0d2:	mov    WORD PTR [ecx],?
  44e0d4:	mov    dl,BYTE PTR [ebp-0x6a75ce74]
  44e0da:	jl     0x44e10d
  44e0dc:	call   0x4c95:0x8a324c95
  44e0e3:	xor    cl,BYTE PTR [edx-0x75cdb36b]
  44e0e9:	xchg   ebp,eax
  44e0ea:	pop    esp
  44e0eb:	xor    DWORD PTR [edx],edi
  44e0ed:	xchg   ebp,eax
  44e0ee:	ins    BYTE PTR es:[edi],dx
  44e0ef:	xor    DWORD PTR [edx],ebp
  44e0f1:	xchg   ebp,eax
  44e0f2:	inc    ecx
  44e0f3:	xor    esi,DWORD PTR [ebp-0x1916ff71]
  44e0f9:	aam    0xf7
  44e0fb:	add    eax,0x6c008fb9
	...
  44e114:	mov    ds:0x8fa13002,al
  44e119:	cmp    BYTE PTR [eax],0x4
  44e11c:	cdq    
  44e11d:	clc    
  44e11e:	cmp    BYTE PTR [ebp-0x72],cl
  44e121:	jmp    0x44e15b
  44e123:	cmc    
  44e124:	mov    DWORD PTR [edx],edi
  44e126:	cmp    ecx,DWORD PTR [ebp-0x1d]
  44e129:	mov    bl,0x3b
  44e12b:	mov    ebp,0xe9356de5
  44e130:	ss shl bh,cl
  44e133:	add    eax,0xc0008fb0
  44e138:	(bad)  
  44e139:	ss xor al,cl
  44e13c:	(bad)  
  44e13d:	outs   dx,BYTE PTR ds:[esi]
  44e13e:	xor    al,al
  44e140:	(bad)  
  44e141:	data16 xor BYTE PTR [eax-0x3fcfa13a],bh
  44e148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e149:	push   esi
  44e14a:	xor    BYTE PTR [eax-0x5a],ch
  44e14d:	push   cs
  44e14e:	xor    DWORD PTR [eax-0x5a],esp
  44e151:	push   es
  44e152:	xor    DWORD PTR [eax-0x5a],edi
  44e155:	(bad)  
  44e156:	xor    BYTE PTR [eax+0x4830f686],al
  44e15c:	xchg   BYTE PTR [esi],ch
  44e15e:	xor    DWORD PTR [eax-0x7a],eax
  44e161:	xor    DWORD PTR es:[eax],edi
  44e164:	xchg   BYTE PTR [esi],bl
  44e166:	xor    DWORD PTR [eax-0x1a],eax
  44e169:	push   ss
  44e16a:	xor    DWORD PTR [eax],ebp
  44e16c:	out    0xce,al
  44e16e:	xor    BYTE PTR [eax],ah
  44e170:	out    0xc6,al
  44e172:	xor    BYTE PTR [eax-0x3fcf411f],bh
	...
  44e18c:	leave  
  44e18d:	mov    dh,0x30
  44e18f:	enter  0xeec1,0x30
  44e193:	ror    cl,0xe6
  44e196:	xor    BYTE PTR [eax],al
  44e198:	cmp    eax,0xf530f39c
  44e19d:	fwait
  44e19e:	sti    
  44e19f:	xor    ch,bl
  44e1a1:	popf   
  44e1a2:	add    esi,DWORD PTR [ecx]
  44e1a4:	aad    0x9d
  44e1a6:	or     esi,DWORD PTR [ecx]
  44e1a8:	fstp   QWORD PTR [ebp-0x614aceed]
  44e1ae:	sbb    esi,DWORD PTR [ecx]
  44e1b0:	std    
  44e1b1:	popf   
  44e1b2:	and    esi,DWORD PTR [ecx]
  44e1b4:	cmc    
  44e1b5:	popf   
  44e1b6:	sub    esi,DWORD PTR [ecx]
  44e1b8:	std    
  44e1b9:	popf   
  44e1ba:	xor    esi,DWORD PTR [ecx]
  44e1bc:	jne    0x44e15b
  44e1be:	cmp    esi,DWORD PTR [ecx]
  44e1c0:	fstp   QWORD PTR [esi-0x612acebd]
  44e1c6:	dec    ebx
  44e1c7:	xor    DWORD PTR [ebp-0x63],ebx
  44e1ca:	push   ebx
  44e1cb:	xor    DWORD PTR [ebp-0x63],esi
  44e1ce:	pop    ebx
  44e1cf:	xor    DWORD PTR [ebp-0x63],edi
  44e1d2:	arpl   WORD PTR [ecx],si
  44e1d4:	jne    0x44e173
  44e1d6:	imul   esi,DWORD PTR [ecx],0x3d
  44e1d9:	popf   
  44e1da:	jae    0x44e20d
  44e1dc:	jne    0x44e17b
  44e1de:	jnp    0x44e211
  44e1e0:	pop    ecx
  44e1e1:	pushf  
  44e1e2:	div    DWORD PTR [edx]
  44e1e4:	adc    eax,0xfc338c9b
  44e1e9:	pushf  
  44e1ea:	lock xor edx,DWORD PTR [esp+ebx*4+0x3503]
	...
  44e202:	add    BYTE PTR [eax],al
  44e204:	dec    ebx
  44e205:	cdq    
  44e206:	cs xor eax,0x35699905
  44e20c:	ficomp WORD PTR [edx-0x67a6c9ef]
  44e212:	push   esi
  44e213:	mov    ss,WORD PTR ss:[ebp-0x68f5c918]
  44e21a:	stc    
  44e21b:	aaa    
  44e21c:	scas   al,BYTE PTR es:[edi]
  44e21d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e21e:	push   ebp
  44e21f:	cmp    ebp,DWORD PTR [esi-0x5c]
  44e222:	js     0x44e25f
  44e224:	mov    ch,0x3a
  44e226:	and    eax,0x2432be81
  44e22b:	xchg   esp,eax
  44e22c:	mov    esi,0xaea62502
  44e231:	pop    eax
  44e232:	and    al,0xb8
  44e234:	scas   al,BYTE PTR es:[edi]
  44e235:	sbb    ah,BYTE PTR ds:0x27b3a104
  44e23b:	adc    al,0x99
  44e23d:	mov    ?,WORD PTR [eax]
  44e23f:	sub    al,0x91
  44e241:	mov    eax,0xba893227
  44e246:	daa    
  44e247:	add    DWORD PTR fs:[eax+0xa79bd30],0xc1f01b28
  44e252:	es ds call 0xe0a209d5
  44e259:	(bad)  [esi]
  44e25b:	mov    bl,al
  44e25d:	std    
  44e25e:	es out 0xd0,eax
  44e261:	mov    DWORD PTR [edx],esi
  44e263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e264:	retf   
  44e265:	sti    
  44e266:	xor    eax,esp
	...
  44e27c:	ret    
  44e27d:	xor    eax,0x2aba0c31
  44e282:	xor    DWORD PTR [edx-0x4e],esp
  44e285:	xor    BYTE PTR fs:[esi-0x16c1956],dh
  44e28c:	bound  ecx,QWORD PTR [ebx]
  44e28e:	add    al,0x0
  44e290:	mov    ch,0xd7
  44e292:	xor    esp,DWORD PTR [edx]
  44e294:	test   DWORD PTR [edx+0x35853e33],edi
  44e29a:	xor    ecx,DWORD PTR [edx]
  44e29c:	test   dh,al
  44e29e:	xor    bl,BYTE PTR [ecx-0x7c]
  44e2a1:	add    BYTE PTR [ebx],dh
  44e2a3:	push   0xffffffe4
  44e2a5:	push   ecx
  44e2a6:	xor    dl,BYTE PTR [ebp+0x1132ace4]
  44e2ac:	out    0xfa,eax
  44e2ae:	sub    eax,0x858fe765
  44e2b3:	xor    dl,BYTE PTR [esi]
  44e2b5:	sahf   
  44e2b6:	fbstp  TBYTE PTR [edx]
  44e2b8:	xlat   BYTE PTR ds:[ebx]
  44e2b9:	pushf  
  44e2ba:	inc    esp
  44e2bb:	xor    esi,esi
  44e2bd:	pushf  
  44e2be:	fbstp  TBYTE PTR [edi]
  44e2c0:	rcr    BYTE PTR [ebx-0x6485c7d7],1
  44e2c6:	sbb    DWORD PTR [eax],edi
  44e2c8:	xchg   DWORD PTR [ebx-0x64aec7bf],ebx
  44e2ce:	cmp    edi,DWORD PTR [eax]
  44e2d0:	bound  ebx,QWORD PTR [ebx-0x63e1c78f]
  44e2d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e2d7:	cmp    al,bh
  44e2d9:	fwait
  44e2da:	mov    bl,0x38
  44e2dc:	aad    0x9b
  44e2de:	cwde   
  44e2df:	cmp    BYTE PTR [eax],al
	...
  44e2f1:	add    BYTE PTR [eax],al
  44e2f3:	add    dh,al
  44e2f5:	fwait
  44e2f6:	cmp    BYTE PTR [eax],0xb0
  44e2f9:	fwait
  44e2fa:	int3   
  44e2fb:	cmp    ah,dl
  44e2fd:	call   0x398b:0x9a46391e
  44e304:	mov    bl,0x99
  44e306:	add    dh,BYTE PTR [esi]
  44e308:	fstp   DWORD PTR [ecx-0x6625c9ee]
  44e30e:	stos   BYTE PTR es:[edi],al
  44e30f:	xor    eax,0x359499f4
  44e314:	out    0x99,al
  44e316:	shl    DWORD PTR ds:0x367399f2,0x18
  44e31d:	cdq    
  44e31e:	loop   0x44e356
  44e320:	out    dx,al
  44e321:	cwde   
  44e322:	cmp    DWORD PTR [edi],esi
  44e324:	(bad)  
  44e325:	xchg   edi,eax
  44e326:	loop   0x44e353
  44e328:	cmp    al,0x97
  44e32a:	sub    DWORD PTR [edx],ebp
  44e32c:	outs   dx,DWORD PTR ds:[esi]
  44e32d:	xchg   ebp,eax
  44e32e:	add    BYTE PTR [edx],ch
  44e330:	(bad)  
  44e331:	xchg   esp,eax
  44e332:	sub    ebp,DWORD PTR [ebx]
  44e334:	test   eax,0x9305393
  44e339:	xchg   ebx,eax
  44e33a:	lock xor BYTE PTR [ecx],bl
  44e33d:	xchg   ecx,eax
  44e33e:	add    BYTE PTR [edi],dh
  44e340:	ror    BYTE PTR [edi-0x2ea91700],cl
  44e346:	test   DWORD PTR [ecx+0x6d008fb6],0xc93134c6
  44e350:	leave  
  44e351:	xchg   ecx,eax
  44e352:	xor    ah,BYTE PTR [ebx-0x3c]
  44e355:	das    
  44e356:	xor    edi,DWORD PTR [esi+0x0]
	...
  44e36c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e36d:	xor    DWORD PTR [ebx],0xa
  44e370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e371:	xchg   esi,eax
  44e372:	xor    eax,DWORD PTR [eax-0x5a]
  44e375:	add    BYTE PTR [edi+eiz*4],dh
  44e378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e379:	(bad)  
  44e37a:	xor    eax,ebp
  44e37c:	xchg   DWORD PTR [edx-0x7f7866cd],esi
  44e382:	sub    al,0xf5
  44e384:	mov    cl,BYTE PTR [ecx+0x2c]
  44e387:	inc    BYTE PTR [edx-0x158cd3ae]
  44e38d:	and    ch,BYTE PTR ds:0x2cd2e24a
  44e393:	xchg   edi,eax
  44e394:	jmp    0x2d60:0xddb22d99
  44e39b:	jns    0x44e36a
  44e39d:	mov    dl,0x2d
  44e39f:	hlt    
  44e3a0:	sar    BYTE PTR [edi+0x2e],0xbe
  44e3a4:	enter  0x2e3b,0xce
  44e3a8:	rcl    BYTE PTR [esi-0x575409d1],0x2f
  44e3af:	adc    DWORD PTR [edx-0x5457d07c],esp
  44e3b5:	inc    esp
  44e3b6:	das    
  44e3b7:	pop    ecx
  44e3b8:	mov    ds:0x9ee82ffa,eax
  44e3bd:	test   al,0x38
  44e3bf:	cdq    
  44e3c0:	sahf   
  44e3c1:	inc    esi
  44e3c2:	cmp    BYTE PTR [esi-0x72],bh
  44e3c5:	or     BYTE PTR [ecx],bh
  44e3c7:	in     eax,0x89
  44e3c9:	outs   dx,DWORD PTR ds:[esi]
  44e3ca:	cmp    DWORD PTR [eax],eax
  44e3cc:	dec    ebx
  44e3cd:	jl     0x44e44c
  44e3cf:	cmp    DWORD PTR [eax],eax
	...
  44e3e1:	add    BYTE PTR [eax],al
  44e3e3:	add    BYTE PTR [ebx+0x83a127b],dh
  44e3e9:	jp     0x44e41c
  44e3eb:	cmp    edi,DWORD PTR [edx]
  44e3ed:	jp     0x44e442
  44e3ef:	cmp    ecx,DWORD PTR [ecx+0x33ba478]
  44e3f5:	jg     0x44e46f
  44e3f7:	cmp    al,0x3a
  44e3f9:	sbb    dl,0x3c
  44e3fc:	outs   dx,BYTE PTR ds:[esi]
  44e3fd:	jle    0x44e384
  44e3ff:	cmp    eax,0x3f7d7db6
  44e404:	xor    bh,BYTE PTR [ebp-0x2a]
  44e407:	aas    
  44e408:	and    DWORD PTR [ebp+0x0],edi
  44e40b:	add    ah,cl
  44e40d:	add    dh,bh
  44e40f:	dec    DWORD PTR [ebx+edx*4+0x0]
  44e413:	add    bh,bh
  44e415:	add    BYTE PTR [ebx+0x30],0xb1
  44e419:	and    DWORD PTR [esi+0x1f836930],0x31
  44e420:	mov    bl,0x81
  44e422:	stos   DWORD PTR es:[edi],eax
  44e423:	xor    DWORD PTR [ebx-0x80],esp
  44e426:	cmp    esi,DWORD PTR [edx]
  44e428:	mov    esi,0xf8328281
  44e42d:	and    DWORD PTR [ecx-0xa7e04ce],0x4f7f8c32
  44e437:	xor    ebp,DWORD PTR [ecx+0x7f]
  44e43a:	stos   BYTE PTR es:[edi],al
  44e43b:	xor    ebp,DWORD PTR [ebx]
  44e43d:	adc    cl,0x33
  44e440:	pop    ebp
  44e441:	xchg   BYTE PTR [eax],bl
  44e443:	xor    al,0x63
  44e445:	xchg   BYTE PTR [eax+0x34],dh
	...
  44e45c:	pop    ecx
  44e45d:	test   DWORD PTR [eax],esp
  44e45f:	xor    eax,0x35b68510
  44e464:	ret    0x1086
  44e467:	imul   eax,DWORD PTR ss:[ebp+esi*1+0x2df2b536],0x2e018349
  44e473:	int    0xeb
  44e475:	outs   dx,DWORD PTR ds:[esi]
  44e476:	cs dec ebx
  44e478:	loop   0x44e49f
  44e47a:	sub    eax,0x2da3ea7a
  44e47f:	pop    eax
  44e480:	ffree  st(6)
  44e482:	sub    dl,BYTE PTR [ebx-0x31]
  44e485:	inc    ecx
  44e486:	sub    esp,ebp
  44e488:	iret   
  44e489:	out    0x29,al
  44e48b:	and    BYTE PTR [esi-0x41c8d66f],bh
  44e491:	scas   al,BYTE PTR es:[edi]
  44e492:	sub    DWORD PTR [ecx-0xdd6e352],edx
  44e498:	scas   al,BYTE PTR es:[edi]
  44e499:	mov    dh,0x27
  44e49b:	inc    esp
  44e49c:	mov    eax,ds:0x99d82812
  44e4a1:	sbb    ebp,DWORD PTR [eax]
  44e4a3:	push   ebp
  44e4a4:	nop
  44e4a5:	cwde   
  44e4a6:	daa    
  44e4a7:	jb     0x44e431
  44e4a9:	clc    
  44e4aa:	es inc esp
  44e4ac:	sbb    BYTE PTR [edi],0x25
  44e4af:	add    BYTE PTR [ebp-0x4d01bc48],dh
  44e4b5:	xchg   ebx,eax
  44e4b6:	cld    
  44e4b7:	push   DWORD PTR [ebp-0x1a99d382]
  44e4bd:	or     eax,0xab33
	...
  44e4d2:	add    BYTE PTR [eax],al
  44e4d4:	out    0xf8,eax
  44e4d6:	xor    DWORD PTR [edi-0x6dd10237],edx
  44e4dc:	ror    cl,0x2d
  44e4df:	pop    esp
  44e4e0:	retf   0x2c78
  44e4e3:	rol    edx,1
  44e4e5:	ret    0x1a2b
  44e4e8:	lods   eax,DWORD PTR ds:[esi]
  44e4e9:	adc    ebp,DWORD PTR [ebx+ebx*2]
  44e4ec:	lods   al,BYTE PTR ds:[esi]
  44e4ed:	imul   ebp,DWORD PTR [edx],0x2a6e9cad
  44e4f3:	ficomp DWORD PTR [esi+ebx*1-0x70707dd6]
  44e4fa:	mov    dl,0x28
  44e4fc:	in     eax,0x88
  44e4fe:	js     0x44e528
  44e500:	and    ecx,DWORD PTR [ecx-0x76c0d7db]
  44e506:	xlat   BYTE PTR ds:[ebx]
  44e507:	das    
  44e508:	je     0x44e495
  44e50a:	pop    edx
  44e50b:	das    
  44e50c:	dec    DWORD PTR [ebx-0x7552d113]
  44e512:	mov    al,0x2e
  44e514:	jg     0x44e4a0
  44e516:	xor    ebp,DWORD PTR [esi]
  44e518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e519:	lea    ecx,[eax]
  44e51b:	sub    bh,BYTE PTR [esi-0x73]
  44e51e:	inc    ebx
  44e51f:	sub    bh,BYTE PTR [edi-0x73]
  44e522:	pop    esp
  44e523:	sub    ch,BYTE PTR [eax]
  44e525:	mov    fs,WORD PTR [edi+0x2a]
  44e528:	sbb    al,0x8e
  44e52a:	pushf  
  44e52b:	sub    dl,bl
  44e52d:	(bad)  
  44e52e:	into   
  44e52f:	sub    al,al
  44e531:	mov    WORD PTR [edx],fs
  44e533:	sub    eax,DWORD PTR [esp+ecx*4+0x2b4b]
	...
  44e54a:	add    BYTE PTR [eax],al
  44e54c:	inc    ebp
  44e54d:	mov    WORD PTR [edx+0x7d8cfb2b],?
  44e553:	sub    eax,esp
  44e555:	mov    ecx,gs
  44e557:	push   ebx
  44e558:	mov    ebx,0xb50459cc
  44e55d:	(bad)
  44e561:	jg     0x44e51a
  44e563:	xor    edi,edx
  44e565:	jg     0x44e578
  44e567:	xor    al,0xfe
  44e569:	jg     0x44e56d
  44e56b:	xor    al,0x4
  44e56d:	cmp    BYTE PTR [ebx+0x34],0x51
  44e571:	jg     0x44e506
  44e573:	xor    al,0x45
  44e575:	jg     0x44e504
  44e577:	xor    al,0x38
  44e579:	jg     0x44e5a8
  44e57b:	xor    al,0x55
  44e57d:	jg     0x44e5b5
  44e57f:	xor    al,0xc0
  44e581:	jle    0x44e582
  44e583:	xor    al,0x8f
  44e585:	jle    0x44e587
  44e587:	cld    
  44e588:	mov    eax,ds:0x89983182
  44e58d:	pop    es
  44e58e:	xor    ch,BYTE PTR [ecx]
  44e590:	adc    bh,0x31
  44e593:	das    
  44e594:	mov    bh,ah
  44e596:	xor    DWORD PTR [esi],esi
  44e598:	xor    BYTE PTR [edx-0x2f170fcf],0x32
  44e59f:	mov    ds:0x202d48e5,eax
  44e5a4:	in     al,0xb2
  44e5a6:	sub    eax,0x2f8fe4f3
  44e5ab:	rol    bh,1
  44e5ad:	js     0x44e5de
  44e5af:	cmp    eax,DWORD PTR [eax]
	...
  44e5c1:	add    BYTE PTR [eax],al
  44e5c3:	add    dh,al
  44e5c5:	xor    al,0x2f
  44e5c7:	pop    edx
  44e5c8:	(bad)  
  44e5c9:	loope  0x44e5fa
  44e5cb:	mov    ah,0xc7
  44e5cd:	mov    esi,0x55a10e2f
  44e5d2:	cmp    BYTE PTR [eax-0x62],bl
  44e5d5:	pop    ebx
  44e5d6:	cmp    DWORD PTR [edi+0xa39cb91],esi
  44e5dc:	mov    eax,DWORD PTR [edx-0x705f36c6]
  44e5e2:	xor    al,0x44
  44e5e4:	popf   
  44e5e5:	push   ss
  44e5e6:	xor    eax,0x34e69ac1
  44e5eb:	out    dx,al
  44e5ec:	lea    ebp,[ebx-0x7c223ccb]
  44e5f2:	xor    eax,0x3550ddc7
  44e5f7:	adc    eax,0x5b356acc
  44e5fc:	int    0x22
  44e5fe:	ss xor ch,bl
  44e601:	fnsave ds:0x35c0dd55
  44e607:	and    ecx,edi
  44e609:	das    
  44e60a:	ss js  0x44e5d9
  44e60d:	add    BYTE PTR [edi],dh
  44e60f:	dec    edx
  44e610:	pushf  
  44e611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e612:	aaa    
  44e613:	add    BYTE PTR ds:0x8c3f8876,dl
  44e619:	jne    0x44e615
  44e61b:	aas    
  44e61c:	dec    esp
  44e61d:	das    
  44e61e:	idiv   bh
  44e620:	lock mov es,WORD PTR [eax]
  44e623:	add    BYTE PTR [esi+0x7f],cl
  44e626:	adc    eax,0x30
	...
  44e63b:	add    BYTE PTR [esi+0x7f],ah
  44e63e:	inc    eax
  44e63f:	xor    al,cl
  44e641:	jle    0x44e60a
  44e643:	xor    BYTE PTR [esi],bl
  44e645:	test   BYTE PTR [edi],cl
  44e647:	xor    esp,edi
  44e649:	xor    DWORD PTR [edx],0x31
  44e64c:	test   BYTE PTR ds:[ebp+0x31],cl
  44e650:	lahf   
  44e651:	cmp    DWORD PTR [ebp+0x31],0xffffffce
  44e655:	or     DWORD PTR [edi+0x1784f733],0x34
  44e65c:	popf   
  44e65d:	jg     0x44e691
  44e65f:	xor    al,0xbc
  44e661:	jg     0x44e5f9
  44e663:	xor    al,0xfc
  44e665:	jg     0x44e666
  44e667:	xor    al,0x8
  44e669:	jp     0x44e697
  44e66b:	xor    eax,0x358f7a9c
  44e670:	fadd   QWORD PTR [eax+0x7db3363a]
  44e676:	dec    edi
  44e677:	mov    al,ss:0xa437317d
  44e67d:	adc    BYTE PTR [edi-0x3588f3c7],0x39
  44e684:	pusha  
  44e685:	jbe    0x44e677
  44e687:	cmp    DWORD PTR [esi+0x633a197c],ebx
  44e68d:	jl     0x44e6f0
  44e68f:	cmp    dl,BYTE PTR ds:0x863b307a
  44e695:	jb     0x44e628
  44e697:	cmp    al,0xbe
  44e699:	jb     0x44e6e8
  44e69b:	cmp    eax,0x3d927313
	...
  44e6b4:	mov    ch,0x28
  44e6b6:	and    BYTE PTR [eax-0xee07f50],bh
  44e6bc:	test   al,0xbc
  44e6be:	sub    DWORD PTR [eax-0x54d59e5d],ecx
  44e6c4:	fwait
  44e6c5:	dec    edx
  44e6c6:	sub    dl,dh
  44e6c8:	xchg   ebx,eax
  44e6c9:	in     eax,dx
  44e6ca:	sub    BYTE PTR [eax+0x29a38a],al
  44e6d0:	mov    ch,0xb8
  44e6d2:	jae    0x44e6d2
  44e6d4:	cmp    ah,BYTE PTR [eax-0x4]
  44e6d7:	push   DWORD PTR [ebp-0x1ac2cc40]
  44e6dd:	enter  0x7e33,0xe4
  44e6e1:	sub    ch,BYTE PTR ds:0x2d5be680
  44e6e7:	enter  0xe0c6,0x27
  44e6eb:	push   ebx
  44e6ec:	rcl    BYTE PTR [esi+0x27],0x74
  44e6f0:	enter  0x263a,0x94
  44e6f4:	rcl    BYTE PTR [edx],0x27
  44e6f7:	mov    esp,0xd52703a8
  44e6fc:	mov    al,ds:0xab0026e4
  44e701:	out    0x31,al
  44e703:	sbb    BYTE PTR [ebx-0x74b3ce43],ah
  44e709:	mov    ds:0xa6836c32,al
  44e70e:	xor    al,BYTE PTR [ebx+ecx*4-0x7c5fcec2]
  44e715:	xor    DWORD PTR gs:[eax+eax*1+0x0],edi
	...
  44e729:	add    BYTE PTR [eax],al
  44e72b:	add    bl,ch
  44e72d:	hlt    
  44e72e:	xor    ebx,edx
  44e730:	jecxz  0x44e71f
  44e732:	xor    esp,esi
  44e734:	jmp    0x44e6eb
  44e736:	xor    BYTE PTR [eax],bl
  44e738:	loop   0x44e740
  44e73a:	xor    DWORD PTR [edi],edi
  44e73c:	retf   0x31a9
  44e73f:	je     0x44e703
  44e741:	(bad)  
  44e742:	jge    0x44e774
  44e744:	ja     0x44e6c7
  44e746:	pop    eax
  44e747:	xor    BYTE PTR [ebp-0x33d40e79],ch
  44e74d:	xchg   edi,edi
  44e74f:	sub    ebx,DWORD PTR [ecx-0x5fd40379]
  44e755:	xchg   DWORD PTR [edx+0x25882c2b],esi
  44e75b:	sub    esi,DWORD PTR [ebp+0x272ae586]
  44e761:	xchg   DWORD PTR [ebx],eax
  44e763:	cs cwde 
  44e765:	test   DWORD PTR [eax+0x1786162d],edx
  44e76b:	sub    eax,0x2cb284e5
  44e770:	in     eax,0x8b
  44e772:	mov    eax,ds:0x2e8c2c27
  44e777:	daa    
  44e778:	cld    
  44e779:	mov    ebp,DWORD PTR [esi+eiz*1-0x5c]
  44e77d:	mov    edx,edx
  44e77f:	sub    DWORD PTR [edx-0x2cd9fb77],ebp
  44e785:	mov    DWORD PTR [ecx],esp
  44e787:	es je  0x44e713
  44e78a:	pop    ds
  44e78b:	es dec esp
  44e78d:	mov    ah,al
  44e78f:	add    BYTE PTR es:[eax],al
	...
  44e7a2:	add    BYTE PTR [eax],al
  44e7a4:	popf   
  44e7a5:	mov    BYTE PTR [edi+eiz*1],ch
  44e7a8:	test   DWORD PTR [eax-0x7703d867],0x88c827bf
  44e7b2:	jmp    0x120db2ba
  44e7b7:	add    al,0xb5
  44e7b9:	(bad)  
  44e7ba:	int3   
  44e7bb:	xor    esp,esi
  44e7bd:	jg     0x44e76e
  44e7bf:	xor    al,0xa8
  44e7c1:	jg     0x44e79e
  44e7c3:	xor    al,0xe2
  44e7c5:	jle    0x44e785
  44e7c7:	xor    al,0xf8
  44e7c9:	jle    0x44e7d4
  44e7cb:	xor    eax,0x5d007e2e
  44e7d0:	enter  0x31b1,0xc7
  44e7d4:	les    edi,FWORD PTR [edx+0x32]
  44e7d7:	mov    edx,0x7b3266c4
  44e7dc:	mov    DWORD PTR [eax],0xd8a72b33
  44e7e2:	xor    dl,BYTE PTR ds:0xa0338aa6
  44e7e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e7e9:	sbb    esi,DWORD PTR [ecx+eiz*2]
  44e7ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e7ed:	and    al,0x34
  44e7ef:	mov    eax,DWORD PTR [esi-0x6720d2ec]
  44e7f5:	je     0x44e826
  44e7f7:	pop    es
  44e7f8:	xchg   ecx,eax
  44e7f9:	mov    edi,DWORD PTR [eax]
  44e7fb:	mov    dl,0x8e
  44e7fd:	inc    ebx
  44e7fe:	cmp    al,BYTE PTR [edx-0x5dc40a21]
  44e804:	rcr    BYTE PTR [esp+esi*1-0x5d],cl
	...
  44e81c:	fisubr DWORD PTR [edi]
  44e81e:	xor    al,0x53
  44e820:	int    0xff
  44e822:	xor    al,0xad
  44e824:	fdivr  st,st(1)
  44e826:	ss loope 0x44e7fc
  44e829:	mov    esi,DWORD PTR [edi]
  44e82b:	pop    esi
  44e82c:	fimul  DWORD PTR [edi-0x36591700]
  44e832:	mul    DWORD PTR [ecx-0x4a]
  44e835:	pop    DWORD PTR [eax]
  44e837:	inc    esp
  44e838:	mov    eax,ds:0xa8293045
  44e83d:	dec    esi
  44e83e:	xor    DWORD PTR [eax+eiz*4],ebp
  44e841:	xor    DWORD PTR [bx+di],edi
  44e844:	mov    BYTE PTR ds:0xd3815332,dl
  44e84a:	xor    DWORD PTR [ebx-0x38cd6677],ecx
  44e850:	test   BYTE PTR [ebp-0x341adbcd],bh
  44e856:	sub    al,0xba
  44e858:	fisubr DWORD PTR [ebp-0x7fbcffd4]
  44e85e:	pop    ds
  44e85f:	ss pop edx
  44e861:	jne    0x44e8ba
  44e863:	ss push ebp
  44e865:	jne    0x44e895
  44e867:	cmp    ah,bl
  44e869:	jae    0x44e8d9
  44e86b:	cmp    BYTE PTR ds:0x3438867b,cl
  44e871:	jnp    0x44e813
  44e873:	cmp    BYTE PTR [edi],dh
  44e875:	jnp    0x44e837
  44e877:	cmp    BYTE PTR [edx-0xdc65186],dl
  44e87d:	jae    0x44e87f
  44e87f:	cmp    al,BYTE PTR [eax]
	...
  44e891:	add    BYTE PTR [eax],al
  44e893:	add    BYTE PTR [ebx+0x79],dl
  44e896:	pop    ds
  44e897:	cmp    al,BYTE PTR [ecx+edi*2+0x59]
  44e89b:	cmp    bh,BYTE PTR [ecx+edi*2]
  44e89e:	scas   al,BYTE PTR es:[edi]
  44e89f:	cmp    ch,BYTE PTR [esi+0x4e3af878]
  44e8a5:	jp     0x44e8ab
  44e8a7:	cmp    ebp,DWORD PTR [edx-0xc40987]
  44e8ad:	outs   dx,BYTE PTR ds:[esi]
  44e8ae:	sbb    eax,0x6477fb3c
  44e8b3:	mov    ds:0x823e856c,eax
  44e8b9:	ins    BYTE PTR es:[edi],dx
  44e8ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e8bb:	ds stos DWORD PTR es:[edi],eax
  44e8bd:	ins    BYTE PTR es:[edi],dx
  44e8be:	call   0x2b2ca01
  44e8c3:	aas    
  44e8c4:	cli    
  44e8c5:	imul   ebx,DWORD PTR [edi+edi*1],0xffffff9b
  44e8c9:	ins    BYTE PTR es:[edi],dx
  44e8ca:	add    BYTE PTR [eax],al
  44e8cc:	fdiv   QWORD PTR [edx-0xa]
  44e8cf:	call   FWORD PTR [eax]
  44e8d1:	mov    WORD PTR [eax],es
  44e8d3:	add    BYTE PTR [esi+0x6e30677b],dl
  44e8d9:	jnp    0x44e87a
  44e8db:	xor    BYTE PTR [ebp+0x4b31f582],bl
  44e8e1:	sub    DWORD PTR [eax-0x4d8003ce],0x264bb535
  44e8eb:	mov    edx,0x752592e3
  44e8f0:	jmp    0x2560:0xe2962533
  44e8f7:	loope  0x44e8f9
	...
  44e909:	add    BYTE PTR [eax],al
  44e90b:	add    dl,cl
  44e90d:	dec    ecx
  44e90e:	and    eax,0x2be3c2fb
  44e913:	sbb    BYTE PTR [ebp-0x429cdb57],bh
  44e919:	in     al,0x2b
  44e91b:	call   0x86ad:0xd52524ad
  44e922:	and    al,0x10
  44e924:	pushf  
  44e925:	xchg   esp,eax
  44e926:	sub    esp,DWORD PTR [esi]
  44e928:	pushf  
  44e929:	add    ch,BYTE PTR [ebx]
  44e92b:	bound  ecx,QWORD PTR [esp+edi*8+0x118c7d2a]
  44e932:	sub    al,0xbf
  44e934:	jl     0x44e8be
  44e936:	sub    ebp,edi
  44e938:	jl     0x44e8d7
  44e93a:	sub    esi,DWORD PTR [edi+ebp*8]
  44e93d:	clc    
  44e93e:	sub    DWORD PTR [ecx-0x11],edx
  44e941:	repz sub DWORD PTR [edx-0x21],esi
  44e945:	cmp    DWORD PTR [edx],ebp
  44e947:	xchg   esi,eax
  44e948:	fistp  WORD PTR [eax+0x2a]
  44e94b:	mov    dh,0xcf
  44e94d:	ins    DWORD PTR es:[edi],dx
  44e94e:	sub    dl,ch
  44e950:	iret   
  44e951:	retf   0xf829
  44e954:	mov    edi,0xbe1628c8
  44e959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e95a:	sub    DWORD PTR [ecx],esi
  44e95c:	scas   al,BYTE PTR es:[edi]
  44e95d:	ins    DWORD PTR es:[edi],dx
  44e95e:	sub    DWORD PTR [edi-0x52],edx
  44e961:	push   0x3d9e7229
  44e966:	sub    BYTE PTR [esi+ebx*4-0x7148d7b7],bl
  44e96d:	iret   
  44e96e:	sub    bh,dh
	...
  44e984:	mov    ?,WORD PTR [ecx-0x707edfe1]
  44e98a:	into   
  44e98b:	daa    
  44e98c:	ja     0x44e911
  44e98e:	and    eax,0xd842128
  44e993:	sub    BYTE PTR [ecx],bh
  44e995:	test   BYTE PTR [edi+0x27],ah
  44e998:	imul   eax,DWORD PTR [ecx+eiz*4+0x782b927],0x54833727
  44e9a3:	es dec eax
  44e9a5:	sbb    DWORD PTR [eax+0x63839026],0x26
  44e9ac:	mov    ch,0x85
  44e9ae:	fbld   TBYTE PTR ds:0x25ef85bf
  44e9b4:	cdq    
  44e9b5:	test   DWORD PTR ds:0x9a85f426,eax
  44e9bb:	and    eax,0x254b8611
  44e9c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e9c1:	test   BYTE PTR [eiz*1+0x24bb84d5],al
  44e9c8:	and    al,0x85
  44e9ca:	push   esi
  44e9cb:	and    al,0x72
  44e9cd:	test   DWORD PTR [esp],esi
  44e9d0:	mov    ch,0x8f
  44e9d2:	jmp    0x3e0a150a
  44e9d7:	add    esi,DWORD PTR [ebp-0x22cc0c71]
  44e9dd:	jg     0x44e982
  44e9df:	xor    esi,DWORD PTR [edx]
  44e9e1:	sub    BYTE PTR ds:0xea7f1b32,0x31
	...
  44e9fc:	fld    DWORD PTR [ecx-0x7e91e9df]
  44ea02:	xor    al,0x16
  44ea04:	es add al,0x16
  44ea08:	xchg   ebp,eax
  44ea09:	xor    ch,0x16
  44ea0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ea0d:	sbb    BYTE PTR [eax],0x17
  44ea10:	push   ebp
  44ea11:	xor    BYTE PTR [eax+0x17],0xe3
  44ea15:	add    BYTE PTR [eax],0x5
  44ea18:	lods   eax,DWORD PTR ds:[esi]
  44ea19:	push   ebp
  44ea1a:	sub    al,0x5d
  44ea1c:	popf   
  44ea1d:	lds    ebp,FWORD PTR [eax+eiz*8]
  44ea20:	popf   
  44ea21:	sub    BYTE PTR [esi],ch
  44ea23:	pop    esp
  44ea24:	int3   
  44ea25:	xchg   ebx,eax
  44ea26:	cs out dx,al
  44ea28:	iret   
  44ea29:	imul   ebp,DWORD PTR [edi],0x9
  44ea2c:	sar    edx,0x38
  44ea2f:	jecxz  0x44e9ea
  44ea31:	dec    esi
  44ea32:	cmp    DWORD PTR [eax+esi*4],edx
  44ea35:	adc    DWORD PTR [edx],edi
  44ea37:	pop    edi
  44ea38:	test   al,0x5
  44ea3a:	cmp    bl,BYTE PTR [eax+0x4a39e8a0]
  44ea40:	cwde   
  44ea41:	mov    esi,0x72d0e539
  44ea46:	cmp    dl,BYTE PTR [edi]
  44ea48:	retf   
  44ea49:	dec    ebp
  44ea4a:	cmp    bh,BYTE PTR [eax+0x173b6ec0]
  44ea50:	mov    edx,0xb3b63b7c
  44ea55:	dec    ecx
  44ea56:	cmp    ecx,DWORD PTR [ebx+0x6c3c01aa]
  44ea5c:	mov    ds:0x213bbf,al
	...
  44ea71:	add    BYTE PTR [eax],al
  44ea73:	add    BYTE PTR [edx-0x2d4acb67],bl
  44ea79:	std    
  44ea7a:	xor    al,0xe6
  44ea7c:	aad    0x64
  44ea7e:	xor    eax,0x3620d479
  44ea83:	addr16 aam 0xb8
  44ea86:	xor    eax,0x3690d5f4
  44ea8b:	(bad)  
  44ea8d:	sbb    esi,DWORD PTR [edi]
  44ea8f:	adc    edi,edx
  44ea91:	mov    edi,0x14d76836
  44ea96:	cmp    BYTE PTR [esi-0x69],dh
  44ea99:	shl    BYTE PTR [edi],1
  44ea9b:	retf   0x8f97
  44ea9e:	add    cl,ch
  44eaa0:	test   cl,0xf7
  44eaa3:	add    al,dl
  44eaa5:	mov    al,BYTE PTR [eax]
  44eaa7:	add    cl,ah
  44eaa9:	lahf   
  44eaaa:	xor    BYTE PTR [eax],dh
  44eaac:	retf   
  44eaad:	lahf   
  44eaae:	dec    esi
  44eaaf:	xor    BYTE PTR [ecx-0x60],bl
  44eab2:	lea    esi,[eax]
  44eab4:	push   ebp
  44eab5:	mov    al,ds:0x9f4c30be
  44eaba:	sbb    BYTE PTR [ecx],dh
  44eabc:	int3   
  44eabd:	pushf  
  44eabe:	les    esi,FWORD PTR [ecx]
  44eac0:	pop    esi
  44eac1:	pushf  
  44eac2:	loope  0x44eaf5
  44eac4:	sbb    BYTE PTR [edi+edi*8+0x329d7c31],bl
  44eacb:	xor    bl,dl
  44eacd:	cdq    
  44eace:	pop    ebx
  44eacf:	xor    bh,BYTE PTR [edi-0x63]
  44ead2:	jge    0x44eb06
  44ead4:	push   ds
  44ead5:	popf   
  44ead6:	shl    BYTE PTR [edx],1
	...
  44eaec:	or     al,0x9d
  44eaee:	push   DWORD PTR [edx]
  44eaf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44eaf1:	cdq    
  44eaf2:	loopne 0x44eb27
  44eaf4:	add    eax,0xb1342a9a
  44eaf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44eafa:	pop    edx
  44eafb:	xor    al,0x3b
  44eafd:	fwait
  44eafe:	test   eax,0x47a84734
  44eb03:	xor    eax,0x356fa875
  44eb08:	lds    esp,FWORD PTR [edi-0x5870ca67]
  44eb0e:	mov    ch,0x35
  44eb10:	out    dx,eax
  44eb11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44eb12:	icebp  
  44eb13:	xor    eax,0x3626a91d
  44eb18:	test   ax,0x3655
  44eb1c:	lahf   
  44eb1d:	test   al,0x94
  44eb1f:	ss jle 0x44eaca
  44eb22:	test   al,0x36
  44eb24:	ret    0xc3a8
  44eb27:	fsub   DWORD PTR ss:[ebp-0x581cc8fd]
  44eb2e:	and    DWORD PTR [edi],esi
  44eb30:	mov    ch,0xa8
  44eb32:	sbb    DWORD PTR [edx-0x56],eax
  44eb35:	push   eax
  44eb36:	sbb    DWORD PTR [edx-0x5e],esi
  44eb39:	cmp    al,0x19
  44eb3b:	stos   BYTE PTR es:[edi],al
  44eb3c:	mov    al,BYTE PTR [ecx+ebx*1-0x32]
  44eb40:	add    BYTE PTR [edx+ebx*1],0xfe
  44eb44:	mov    ah,al
  44eb46:	sbb    esi,DWORD PTR [esi]
  44eb48:	jge    0x44eaca
  44eb4a:	adc    al,0x5a
  44eb4c:	in     eax,dx
  44eb4d:	xor    eax,0x8f14
	...
  44eb62:	add    BYTE PTR [eax],al
  44eb64:	in     eax,dx
  44eb65:	push   ecx
  44eb66:	adc    al,0xcc
  44eb68:	(bad)  
  44eb6a:	adc    al,0xf0
  44eb6c:	fucom  st(6)
  44eb6e:	sbb    ah,BYTE PTR [eax]
  44eb70:	int3   
  44eb71:	cli    
  44eb72:	sbb    bl,BYTE PTR [eax-0x34]
  44eb75:	xchg   edx,eax
  44eb76:	sbb    edi,DWORD PTR [esp+edi*4+0x57]
  44eb7a:	sbb    ebp,DWORD PTR [ecx-0x19e48c44]
  44eb80:	lods   al,BYTE PTR ds:[esi]
  44eb81:	pop    ebx
  44eb82:	sbb    edi,esp
  44eb84:	lods   al,BYTE PTR ds:[esi]
  44eb85:	mov    ch,0x15
  44eb87:	push   es
  44eb88:	lahf   
  44eb89:	(bad)  
  44eb8a:	adc    eax,0x15a99f18
  44eb8f:	es (bad) 
  44eb91:	mov    ecx,0x348f6d15
  44eb96:	push   ss
  44eb97:	sar    BYTE PTR [edi-0x59],0x16
  44eb9b:	push   cs
  44eb9c:	jle    0x44eb73
  44eb9e:	adc    al,0x64
  44eba0:	out    dx,al
  44eba1:	ins    DWORD PTR es:[edi],dx
  44eba2:	adc    eax,0x17cae90a
  44eba7:	inc    ecx
  44eba8:	loope  0x44ebbe
  44ebaa:	sbb    BYTE PTR [esi-0x28],al
  44ebad:	sub    BYTE PTR [edi],dl
  44ebaf:	jnp    0x44eb81
  44ebb1:	sub    dl,BYTE PTR [edi]
  44ebb3:	mov    ecx,0x5116bac8
  44ebb8:	ret    
  44ebb9:	adc    DWORD PTR [edx],esp
  44ebbb:	gs mov ebx,0xb5225d8f
  44ebc1:	xor    bl,0x20
  44ebc4:	lds    eax,FWORD PTR [edx+0x20f2]
	...
  44ebda:	add    BYTE PTR [eax],al
  44ebdc:	xchg   ecx,eax
  44ebdd:	sbb    BYTE PTR [ebx],0x21
  44ebe0:	mov    ds:0x83212982,eax
  44ebe5:	adc    BYTE PTR [ecx+eiz*1],0x5f
  44ebe9:	xor    BYTE PTR ds:0x6b824121,0x20
  44ebf0:	and    DWORD PTR [edx-0x7e83dfa8],eax
  44ebf6:	mov    ah,0x20
  44ebf8:	mov    ch,0x8f
  44ebfa:	jmp    0x12068cb2
  44ebff:	add    al,0xb5
  44ec01:	(bad)
  44ec05:	jg     0x44ebe9
  44ec07:	adc    edx,edi
  44ec09:	jg     0x44ec61
  44ec0b:	adc    edx,DWORD PTR [ecx-0x30ed2a80]
  44ec11:	jle    0x44ec87
  44ec13:	adc    dh,dl
  44ec15:	jge    0x44ec8a
  44ec17:	pop    ss
  44ec18:	dec    edx
  44ec19:	jl     0x44ec56
  44ec1b:	pop    ss
  44ec1c:	(bad)  
  44ec1d:	jp     0x44ec85
  44ec1f:	push   ss
  44ec20:	dec    edi
  44ec21:	jnp    0x44ebfa
  44ec23:	sbb    DWORD PTR [ecx+0x72195d79],edx
  44ec29:	jp     0x44ec14
  44ec2b:	sbb    ch,ch
  44ec2d:	js     0x44ec9f
  44ec2f:	sbb    ah,dh
  44ec31:	xchg   DWORD PTR [ebp+0x5e87ae1b],edi
  44ec37:	sbb    ecx,DWORD PTR [ebx-0x78]
  44ec3a:	inc    ecx
  44ec3b:	sbb    ebp,DWORD PTR [edx-0x78]
  44ec3e:	sbb    eax,0x1b
	...
  44ec53:	add    bl,dl
  44ec55:	xchg   BYTE PTR [ecx+0x6486a01a],bh
  44ec5b:	sbb    dl,BYTE PTR [ebx-0x79]
  44ec5e:	add    BYTE PTR [edi+ebx*4],dl
  44ec61:	push   esi
  44ec62:	cmp    cl,BYTE PTR [edi-0x6cc5d368]
  44ec68:	iret   
  44ec69:	iret   
  44ec6a:	cmp    ch,BYTE PTR [edi+0x713c10cf]
  44ec70:	mov    esi,0x95493bfa
  44ec75:	inc    ecx
  44ec76:	xor    al,0x36
  44ec78:	xchg   esp,eax
  44ec79:	shl    BYTE PTR [esi],cl
  44ec7b:	shr    BYTE PTR [ebx-0x5db6c887],0x20
  44ec82:	cmp    BYTE PTR [edx+ebx*4-0x6916ff71],bh
  44ec89:	ret    0x19f7
  44ec8c:	mov    cl,0x8f
  44ec8e:	add    BYTE PTR [ecx+ecx*8-0x38e5cd96],dh
  44ec95:	in     eax,0x32
  44ec97:	pop    ss
  44ec98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ec99:	div    DWORD PTR [ebx]
  44ec9b:	iret   
  44ec9c:	mov    ds:0x9d3a2d0f,al
  44eca1:	loope  0x44eccf
  44eca3:	rcr    DWORD PTR [ebp-0x33b2d2b2],1
  44eca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ecaa:	cs xchg esp,eax
  44ecac:	ret    
  44ecad:	test   eax,0x4acbe92e
  44ecb2:	das    
  44ecb3:	mov    dl,0xc3
  44ecb5:	or     esi,DWORD PTR [eax]
  44ecb7:	je     0x44ecb9
	...
  44ecc9:	add    BYTE PTR [eax],al
  44eccb:	add    BYTE PTR [edx-0x5d9ccfe5],ch
  44ecd1:	repz das 
  44ecd3:	jp     0x44ec7f
  44ecd5:	cli    
  44ecd6:	das    
  44ecd7:	sub    BYTE PTR [edx-0x35f0d025],ah
  44ecdd:	ins    DWORD PTR es:[edi],dx
  44ecde:	cmp    BYTE PTR [edi+0x6e3831ce],bh
  44ece4:	sar    DWORD PTR [ebx-0x1d46f3c8],0x39
  44eceb:	add    BYTE PTR [ecx],dl
  44eced:	mov    ds:0xa64e3a28,eax
  44ecf2:	cmp    bl,BYTE PTR fs:[eax-0x23c5355b]
  44ecf9:	outs   dx,BYTE PTR ds:[esi]
  44ecfa:	jae    0x44ed39
  44ecfc:	pop    esp
  44ecfd:	outs   dx,DWORD PTR ds:[esi]
  44ecfe:	stos   BYTE PTR es:[edi],al
  44ecff:	cmp    eax,0x3eb56f1b
  44ed04:	cmc    
  44ed05:	mov    eax,ds:0xa1253f31
  44ed0a:	stc    
  44ed0b:	aas    
  44ed0c:	(bad)  
  44ed0e:	cmc    
  44ed0f:	dec    DWORD PTR [ebx+ecx*4-0x64540000]
  44ed16:	sbb    eax,0x7a9b9c30
  44ed1b:	xor    BYTE PTR ds:0x9031a1a3,ah
  44ed21:	mov    eax,ds:0xa12f32bc
  44ed26:	sbb    al,0x33
  44ed28:	and    BYTE PTR [edx-0x5e33cc9e],0x37
  44ed2f:	xor    al,0x0
	...
  44ed41:	add    BYTE PTR [eax],al
  44ed43:	add    BYTE PTR [ebp+0x3a349197],bh
  44ed49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ed4a:	cmp    dh,BYTE PTR ds:0x35bb97da
  44ed50:	xlat   BYTE PTR ds:[ebx]
  44ed51:	xchg   edi,eax
  44ed52:	pop    ecx
  44ed53:	xor    BYTE PTR ss:[ebp-0x5b02c91e],ah
  44ed5a:	mov    bh,0x37
  44ed5c:	hlt    
  44ed5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ed5e:	jne    0x44ed98
  44ed60:	popa   
  44ed61:	pushf  
  44ed62:	adc    eax,0xcc9c7939
  44ed67:	cmp    DWORD PTR [ebx-0x49c61665],ebp
  44ed6d:	cdq    
  44ed6e:	and    eax,0xb499393a
  44ed73:	cmp    dl,dh
  44ed75:	cwde   
  44ed76:	add    al,0x3b
  44ed78:	mov    ch,0x86
  44ed7a:	pop    ss
  44ed7b:	adc    bl,al
  44ed7d:	inc    esp
  44ed7e:	and    bh,cl
  44ed80:	rcr    dh,1
  44ed82:	adc    eax,0x1581cbaf
  44ed87:	adc    al,0xc2
  44ed89:	loop   0x44eda1
  44ed8b:	xchg   edx,eax
  44ed8c:	mov    edx,0xb50016a6
  44ed91:	test   al,0x83
  44ed93:	std    
  44ed94:	jmp    0xc3a:0xb5fffc6c
  44ed9b:	and    eax,0xe5133aa4
  44eda0:	test   BYTE PTR [edx+edx*1-0x62],dh
  44eda4:	xchg   DWORD PTR [edx+0x5d11],ecx
	...
  44edba:	add    BYTE PTR [eax],al
  44edbc:	xchg   ah,dl
  44edbe:	sbb    ch,dh
  44edc0:	sub    DWORD PTR [edi-0x7514c1f3],0x74e2d80e
  44edca:	sbb    dl,BYTE PTR [ecx-0x21]
  44edcd:	cmp    ebx,DWORD PTR [ecx]
  44edcf:	add    al,0xd9
  44edd1:	je     0x44edf3
  44edd3:	xchg   cl,dl
  44edd5:	and    BYTE PTR [ecx],ah
  44edd7:	out    dx,al
  44edd8:	leave  
  44edd9:	cmp    eax,0xdec00520
  44edde:	push   ss
  44eddf:	es mov eax,0xb0bd175e
  44ede5:	js     0x44edfe
  44ede7:	loop   0x44ed91
  44ede9:	xchg   ebp,eax
  44edea:	adc    eax,0x14e3a232
  44edef:	add    BYTE PTR [ebp+0x52fd73a8],dh
  44edf5:	add    al,0x4
  44edf7:	add    BYTE PTR [ebp-0x7bceec01],dh
  44edfd:	inc    esi
  44edfe:	adc    ebp,DWORD PTR [ebx-0x30ed8879]
  44ee04:	jmp    0x1d5cf798
  44ee09:	and    DWORD PTR [ebx],0x18
  44ee0c:	mov    bh,0x84
  44ee0e:	fcom   QWORD PTR [esi]
  44ee10:	rol    BYTE PTR [ebp-0x7ad1ea89],cl
  44ee16:	jg     0x44ee2c
  44ee18:	mov    BYTE PTR [esi-0x79c0eac0],al
  44ee1e:	loope  0x44ee3a
	...
  44ee34:	jne    0x44eeae
  44ee36:	jae    0x44ee52
  44ee38:	ins    BYTE PTR es:[edi],dx
  44ee39:	js     0x44ee6f
  44ee3b:	sbb    ah,BYTE PTR [edi+0x79]
  44ee3e:	pop    ebp
  44ee3f:	sbb    DWORD PTR [ecx],ebx
  44ee41:	jnp    0x44ee12
  44ee43:	pop    ds
  44ee44:	ret    
  44ee45:	jl     0x44ee68
  44ee47:	pop    ds
  44ee48:	aas    
  44ee49:	jl     0x44ee76
  44ee4b:	push   ds
  44ee4c:	jecxz  0x44eeca
  44ee4e:	rcr    BYTE PTR ds:0xa3e97ddb,0xb8
  44ee55:	mov    ebp,0x8fb50359
  44ee5a:	xor    al,0x14
  44ee5c:	ss sbb bl,0x12
  44ee60:	or     DWORD PTR [edi+0x21],edi
  44ee63:	adc    dl,BYTE PTR [ebx]
  44ee65:	or     BYTE PTR [ecx+0x11],0xde
  44ee69:	sub    BYTE PTR [edx],0x11
  44ee6c:	std    
  44ee6d:	or     BYTE PTR [eax+edx*1+0x181183c4],0x99
  44ee75:	test   ch,ah
  44ee77:	adc    al,0x4c
  44ee79:	test   DWORD PTR ds:0x2d857e14,esp
  44ee7f:	adc    al,0x8b
  44ee81:	test   DWORD PTR ds:0x52854814,edi
  44ee87:	adc    al,0xa4
  44ee89:	ja     0x44ee92
  44ee8b:	sbb    al,0xc7
  44ee8d:	ja     0x44eef3
  44ee8f:	sbb    ecx,DWORD PTR [edx]
  44ee91:	js     0x44ee93
  44ee93:	jecxz  0x44ee34
  44ee95:	sub    bh,BYTE PTR [ecx]
  44ee97:	push   edi
	...
  44eeac:	iret   
  44eead:	call   0xa81418eb
  44eeb2:	cmp    DWORD PTR [ecx],esp
  44eeb4:	mov    edi,0xbca93a67
  44eeb9:	cmp    ch,BYTE PTR ss:[ebp-0x54]
  44eebd:	icebp  
  44eebe:	cmp    dl,BYTE PTR [edi-0x54]
  44eec1:	add    BYTE PTR [ebx],bh
  44eec3:	push   ss
  44eec4:	pushf  
  44eec5:	fnstsw WORD PTR [edx]
  44eec7:	sti    
  44eec8:	popf   
  44eec9:	xchg   ebx,eax
  44eeca:	cmp    edi,DWORD PTR [ebp+ecx*8-0x355ec4b5]
  44eed1:	fidivr DWORD PTR [ebx]
  44eed3:	pop    ecx
  44eed4:	mov    ebp,0xbd8a3438
  44eed9:	add    eax,0x6cada835
  44eede:	xor    eax,0x35fbac25
  44eee3:	dec    eax
  44eee4:	lahf   
  44eee5:	and    BYTE PTR [edi],dh
  44eee7:	scas   al,BYTE PTR es:[edi]
  44eee8:	lahf   
  44eee9:	mov    ch,0x36
  44eeeb:	inc    ebp
  44eeec:	into   
  44eeed:	inc    ebp
  44eeee:	aaa    
  44eeef:	jge    0x44eebf
  44eef1:	add    eax,0xccbeb038
  44eef6:	aaa    
  44eef7:	jmp    0x3e3ca942
  44eefc:	mov    eax,0xa6e5008f
  44ef01:	jle    0x44ef33
  44ef03:	(bad)  
  44ef04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ef05:	adc    al,0x31
  44ef07:	mov    eax,fs:0xc9533123
  44ef0d:	sbb    DWORD PTR [ecx],esi
  44ef0f:	mov    al,BYTE PTR [eax]
	...
  44ef21:	add    BYTE PTR [eax],al
  44ef23:	add    cl,al
  44ef25:	out    0x30,eax
  44ef27:	mov    ecx,cs
  44ef29:	in     eax,dx
  44ef2a:	xor    BYTE PTR [esi+0x2830fbc1],bl
  44ef30:	test   eax,0x870030d1
  44ef35:	mov    ds:0xa3a930d0,eax
  44ef3a:	into   
  44ef3b:	xor    BYTE PTR [ebx+0x7530dca3],ah
  44ef41:	mov    ds:0xa3cf30ea,eax
  44ef46:	clc    
  44ef47:	xor    cl,al
  44ef49:	mov    ds:0xa30b30f6,eax
  44ef4e:	add    al,0x31
  44ef50:	or     eax,0x173112a3
  44ef55:	mov    ds:0xa2f93120,eax
  44ef5a:	push   ds
  44ef5b:	xor    ebx,esi
  44ef5d:	mov    ds:0xa325312c,al
  44ef62:	cmp    dh,BYTE PTR [ecx]
  44ef64:	lahf   
  44ef65:	mov    ds:0xa2913148,al
  44ef6a:	inc    esi
  44ef6b:	xor    DWORD PTR [ebx+0x7d3154a2],ebx
  44ef71:	mov    ds:0xa2673162,al
  44ef76:	jo     0x44efa9
  44ef78:	mov    DWORD PTR [edx-0x5d7cce92],esp
  44ef7e:	jl     0x44efb1
  44ef80:	adc    eax,0x2f318aa4
  44ef85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ef86:	cwde   
  44ef87:	xor    DWORD PTR [eax],eax
	...
  44ef99:	add    BYTE PTR [eax],al
  44ef9b:	add    BYTE PTR [ecx],ah
  44ef9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ef9e:	xchg   esi,eax
  44ef9f:	xor    ebx,ebp
  44efa1:	mov    ds:0xa3ed31a4,eax
  44efa6:	mov    dl,0x31
  44efa8:	mul    DWORD PTR [ebx-0x5ba6ce40]
  44efae:	mov    esi,0xcca45331
  44efb3:	xor    DWORD PTR [ebp-0x5c],eax
  44efb6:	fidiv  DWORD PTR [ecx]
  44efb8:	jmp    DWORD PTR [ebx-0x5c0ece18]
  44efbe:	out    0x31,al
  44efc0:	mov    ch,0x59
  44efc2:	or     al,0xfc
  44efc4:	test   BYTE PTR [edi-0x4278fdf3],ah
  44efca:	or     eax,0xde38710
  44efcf:	push   ss
  44efd0:	xchg   ecx,esp
  44efd2:	or     eax,0xe8fe724
  44efd7:	sub    ah,bh
  44efd9:	aad    0xd
  44efdb:	cmp    bh,ah
  44efdd:	fisttp DWORD PTR ds:0xde9e73e
  44efe3:	dec    esp
  44efe4:	(bad)  
  44efe5:	test   DWORD PTR ds:0xdedc752,0xe13c760
  44efef:	data16 (bad) 
  44eff1:	adc    DWORD PTR [esi],ecx
  44eff3:	je     0x44ef9c
  44eff5:	aas    
  44eff6:	or     eax,0xe25a77a
  44effb:	mov    BYTE PTR [edi+0x8e0e2b],ah
	...
  44f011:	add    BYTE PTR [eax],al
  44f013:	add    BYTE PTR [edi-0x7863f1c7],ah
  44f019:	pop    es
  44f01a:	cpuid  
  44f01c:	xchg   DWORD PTR ds:0x4387b00f,ebx
  44f022:	push   cs
  44f023:	mov    dh,0x87
  44f025:	inc    ecx
  44f026:	push   cs
  44f027:	(bad)  
  44f028:	out    0xed,eax
  44f02a:	push   cs
  44f02b:	shl    bh,1
  44f02d:	ror    BYTE PTR [esi],cl
  44f02f:	fucom  st(7)
  44f031:	sbb    eax,0x20e7ef0f
  44f036:	psubd  mm0,mm7
  44f039:	mov    bl,0xc
  44f03b:	add    eax,0x180cd6c6
  44f040:	mov    bh,0xc
  44f043:	and    al,dh
  44f045:	stc    
  44f046:	or     al,0x39
  44f048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f049:	jae    0x44f058
  44f04b:	inc    ebp
  44f04c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f04d:	(bad)  
  44f04e:	mov    eax,0x6b7eda14
  44f053:	adc    eax,0x15497e0f
  44f058:	mov    cl,0x83
  44f05a:	push   es
  44f05b:	adc    cl,bh
  44f05d:	cmp    DWORD PTR [edi+0x6e83320f],0x10
  44f064:	ins    BYTE PTR es:[edi],dx
  44f065:	cmp    DWORD PTR [eax+edx*1],0x27
  44f069:	or     ebp,0xe
  44f06c:	retf   
  44f06d:	test   BYTE PTR [ebx-0x497b74f2],ch
  44f073:	push   cs
  44f074:	dec    ebp
  44f075:	test   BYTE PTR [edi],ah
  44f077:	sldt   WORD PTR [eax]
	...
  44f08a:	add    BYTE PTR [eax],al
  44f08c:	sbb    eax,0xb0f0484
  44f091:	test   dl,al
  44f093:	adc    DWORD PTR [edx],edi
  44f095:	cmp    DWORD PTR [eax],0xfb813c12
  44f09b:	adc    edi,eax
  44f09d:	cmp    BYTE PTR [ebx+0x10],0x6e
  44f0a1:	xor    BYTE PTR [eax+0x10],0x45
  44f0a5:	or     BYTE PTR [edi+0x5b77a310],0x1c
  44f0ac:	div    BYTE PTR [esi-0x46]
  44f0af:	sbb    ecx,edi
  44f0b1:	jbe    0x44f094
  44f0b3:	sbb    dl,BYTE PTR [eax+edi*2+0x78091b29]
  44f0ba:	mov    eax,ds:0xbe778d1a
  44f0bf:	sbb    ch,BYTE PTR [eax]
  44f0c1:	jbe    0x44f126
  44f0c3:	sbb    eax,0x1ce6766c
  44f0c8:	jmp    0xb275:0x5b1d0974
  44f0cf:	sbb    al,0x9b
  44f0d1:	jne    0x44f0bb
  44f0d3:	pop    ss
  44f0d4:	push   esp
  44f0d5:	jl     0x44f073
  44f0d7:	pop    ss
  44f0d8:	push   es
  44f0d9:	jp     0x44f0db
  44f0db:	cmc    
  44f0dc:	int3   
  44f0dd:	clc    
  44f0de:	ss ror ebp,1
  44f0e1:	pop    ebp
  44f0e2:	aaa    
  44f0e3:	leave  
  44f0e4:	mov    ebp,0xbd8d3742
  44f0e9:	add    edi,DWORD PTR [eax]
  44f0eb:	xchg   ebp,eax
  44f0ec:	lods   eax,DWORD PTR ds:[esi]
  44f0ed:	shl    DWORD PTR [edi],cl
  44f0ef:	sbb    eax,0x0
	...
  44f104:	lods   eax,DWORD PTR ds:[esi]
  44f105:	jecxz  0x44f13e
  44f107:	and    eax,0xe9008f9d
  44f10c:	idiv   BYTE PTR [edx-0x70494e09]
  44f112:	add    dl,al
  44f114:	(bad)  
  44f115:	sub    BYTE PTR [eax],dh
  44f117:	nop
  44f118:	(bad)  
  44f119:	xor    DWORD PTR es:[ebp-0x39],esp
  44f11d:	jno    0x44f151
  44f11f:	call   0x21a0:0x633240a8
  44f126:	xor    edx,DWORD PTR [edi-0x58]
  44f129:	add    esi,DWORD PTR [ebx]
  44f12b:	sub    DWORD PTR [eax-0x3660cd4a],esp
  44f131:	push   esp
  44f132:	xor    edi,DWORD PTR [ebx]
  44f134:	shl    DWORD PTR [esp+ebp*1],0x88
  44f138:	(bad)
  44f13b:	shr    DWORD PTR [ebx-0x4e15d06a],cl
  44f141:	xchg   edx,eax
  44f142:	cmp    bl,BYTE PTR [ebx-0x51]
  44f145:	enter  0xf93a,0x9f
  44f149:	bound  edi,QWORD PTR [ebx]
  44f14b:	gs sahf 
  44f14d:	jmp    0x7035:0xf3cc313b
  44f154:	int3   
  44f155:	retf   0x9735
  44f158:	mov    esp,0xc0ee3693
  44f15d:	fs (bad) ss:[eax-0x5cfcc9b3]
  44f165:	ss add BYTE PTR ss:[eax],al
	...
  44f179:	add    BYTE PTR [eax],al
  44f17b:	add    BYTE PTR ds:0xc13e98a2,al
  44f181:	mov    eax,ds:0xa1473ebc
  44f186:	or     bh,BYTE PTR [edi]
  44f188:	jno    0x44f12b
  44f18a:	push   eax
  44f18b:	aas    
  44f18c:	outs   dx,DWORD PTR ds:[esi]
  44f18d:	mov    eax,ds:0xa17e3f5f
  44f192:	outs   dx,DWORD PTR ds:[esi]
  44f193:	aas    
  44f194:	xor    ah,BYTE PTR [eax+0x7c5c3fe1]
  44f19a:	cmc    
  44f19b:	call   eax
  44f19d:	xchg   ebx,eax
  44f19e:	add    BYTE PTR [eax],al
  44f1a0:	inc    ebp
  44f1a1:	pushf  
  44f1a2:	xor    BYTE PTR es:[esp+ebx*4-0x7d],dl
  44f1a7:	xor    BYTE PTR [edx+0x723097a3],cl
  44f1ad:	mov    ds:0xa3bd30aa,eax
  44f1b2:	sub    dh,BYTE PTR [ecx]
  44f1b4:	out    0xa2,eax
  44f1b6:	push   esp
  44f1b7:	xor    DWORD PTR [ebx+eiz*4],ebp
  44f1ba:	pushf  
  44f1bb:	xor    DWORD PTR [ebx-0x5e],ebp
  44f1be:	shl    DWORD PTR [ecx],cl
  44f1c0:	scas   al,BYTE PTR es:[edi]
  44f1c1:	mov    ds:0x9e193224,al
  44f1c6:	pop    ecx
  44f1c7:	xor    bh,BYTE PTR [ebx-0x63]
  44f1ca:	shl    DWORD PTR [edx],0x29
  44f1cd:	sahf   
  44f1ce:	fdiv   QWORD PTR [edx]
  44f1d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f1d1:	pushf  
  44f1d2:	push   ss
  44f1d3:	xor    al,0x93
  44f1d5:	lahf   
  44f1d6:	mov    cl,0x35
  44f1d8:	mov    dh,0x89
  44f1da:	xor    DWORD PTR [esi],esi
  44f1dc:	and    eax,0x36b18a
	...
  44f1f1:	add    BYTE PTR [eax],al
  44f1f3:	add    cl,cl
  44f1f5:	mov    BYTE PTR [ebx+0x37],dl
  44f1f8:	icebp  
  44f1f9:	xchg   dh,ch
  44f1fb:	aaa    
  44f1fc:	jp     0x44f199
  44f1fe:	daa    
  44f1ff:	cmp    dh,bl
  44f201:	xchg   ebx,eax
  44f202:	pop    edx
  44f203:	cmp    bl,al
  44f205:	xchg   ebx,eax
  44f206:	lea    edi,[eax]
  44f208:	mov    ch,0x19
  44f20a:	sbb    al,0xe
  44f20c:	int3   
  44f20d:	jg     0x44f224
  44f20f:	jo     0x44f1cd
  44f211:	cmp    eax,0x5fbca414
  44f216:	adc    al,0xbe
  44f218:	lods   al,BYTE PTR ds:[esi]
  44f219:	ss adc al,0xd
  44f21c:	scas   eax,DWORD PTR es:[edi]
  44f21d:	sub    al,0x19
  44f21f:	xchg   esi,eax
  44f220:	lahf   
  44f221:	mov    ebx,0x369b9418
  44f226:	or     eax,0xeaa93ae
  44f22b:	xor    BYTE PTR [edx-0x4afff13d],cl
  44f231:	test   al,0x63
  44f233:	std    
  44f234:	cmp    bl,BYTE PTR [ecx]
  44f236:	add    al,0x0
  44f238:	mov    ch,0xb0
  44f23a:	or     al,0x22
  44f23c:	in     al,0x1a
  44f23e:	or     eax,0x10ace7ce
  44f243:	pop    edx
  44f244:	loopne 0x44f27a
  44f246:	adc    BYTE PTR [ebx+0x6d1be1c8],ch
  44f24c:	int    0x45
  44f24e:	sbb    esi,edx
  44f250:	mov    ebp,0xbcad1438
  44f255:	rcr    BYTE PTR [ecx],cl
  44f257:	pop    esp
	...
  44f26c:	scas   eax,DWORD PTR es:[edi]
  44f26d:	pop    esp
  44f26e:	sbb    esp,ecx
  44f270:	scas   eax,DWORD PTR es:[edi]
  44f271:	mov    edi,0x449e3218
  44f276:	sbb    ecx,ebp
  44f278:	sahf   
  44f279:	aad    0x19
  44f27b:	inc    edx
  44f27c:	xchg   ecx,eax
  44f27d:	adc    ebx,DWORD PTR [ecx]
  44f27f:	test   BYTE PTR [ecx-0x7fc2f15b],0x6e
  44f286:	seta   BYTE PTR [eax+0x3e]
  44f28a:	pinsrw mm6,eax,0xf5
  44f28e:	comiss xmm5,xmm3
  44f291:	or     DWORD PTR [esi],0xe98fe262
  44f297:	push   ebx
  44f298:	cwde   
  44f299:	mov    dh,0x25
  44f29b:	add    al,0xb5
  44f29d:	(bad)  
  44f29e:	(bad)  
  44f29f:	adc    ebp,DWORD PTR [ebx+0x7f]
  44f2a2:	loopne 0x44f2b6
  44f2a4:	push   es
  44f2a5:	and    DWORD PTR [edx+0x13],0x11db808a
  44f2ac:	test   DWORD PTR [ecx-0x7e7fedc9],0x82b010dd
  44f2b6:	(bad)  
  44f2b7:	adc    BYTE PTR [edi-0x7e],ch
  44f2ba:	adc    BYTE PTR [eax],dl
  44f2bc:	aam    0x7b
  44f2be:	out    0xe,al
  44f2c0:	push   ebx
  44f2c1:	jl     0x44f2a2
  44f2c3:	or     eax,0xe857db2
  44f2c8:	jb     0x44f347
  44f2ca:	lds    ebx,FWORD PTR [ebx]
  44f2cc:	push   DWORD PTR [esi+0x6]
  44f2cf:	sbb    eax,DWORD PTR [eax]
	...
  44f2e1:	add    BYTE PTR [eax],al
  44f2e3:	add    BYTE PTR [edi+0x78],dh
  44f2e6:	fwait
  44f2e7:	sbb    bl,BYTE PTR [ebx+esi*2+0x74b21864]
  44f2ee:	sub    eax,0x4f73eb17
  44f2f3:	push   ss
  44f2f4:	mov    ch,0x8f
  44f2f6:	jmp    0xd9faf2fe
  44f2fb:	add    esi,DWORD PTR [ebp-0xeecf571]
  44f301:	sub    BYTE PTR [eax+0x11],0x4c
  44f305:	jnp    0x44f2f0
  44f307:	repz loope 0x44f2bf
  44f30a:	xor    DWORD PTR [esi*4+0x71130d8f],eax
  44f311:	xor    BYTE PTR [edx+0xe],0x51
  44f315:	jge    0x44f2f1
  44f317:	or     eax,0xcfd7ebb
  44f31c:	dec    esp
  44f31d:	ja     0x44f35f
  44f31f:	sbb    al,0x2f
  44f321:	js     0x44f323
  44f323:	js     0x44f2f3
  44f325:	inc    ecx
  44f326:	cmp    DWORD PTR [edi-0x41],esp
  44f329:	aad    0x39
  44f32b:	into   
  44f32c:	mov    esp,0xaf163a64
  44f331:	xor    al,0x3a
  44f333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f334:	lods   al,BYTE PTR ds:[esi]
  44f335:	fidivr DWORD PTR [edx]
  44f337:	cmp    DWORD PTR [edx+ebx*2+0x29d713b],ebx
  44f33e:	cmp    al,0xb1
  44f340:	int    0xc6
  44f342:	cmp    ebx,DWORD PTR [edi-0x7ac42733]
	...
  44f35c:	mov    ebp,0xbd5b3baa
  44f361:	pop    DWORD PTR [eax]
  44f363:	jmp    0xa3ca5fe
  44f368:	mov    cl,0x8f
  44f36a:	add    BYTE PTR [edx-0x59],bl
  44f36d:	xchg   ebx,eax
  44f36e:	xor    dl,BYTE PTR [edx]
  44f370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44f371:	xor    ch,BYTE PTR ds:0x2dfac38d
  44f377:	or     cl,bh
  44f379:	cmp    dh,BYTE PTR fs:[edx-0x43]
  44f37d:	pop    es
  44f37e:	xor    eax,0x3576c21b
  44f383:	jmp    0x8a3ca62e
  44f388:	mov    dh,0x8f
  44f38a:	add    BYTE PTR [eax-0x48cd0d5c],dl
  44f390:	stos   BYTE PTR es:[edi],al
  44f391:	push   cs
  44f392:	sub    eax,0x3b71cf77
  44f397:	(bad)
  44f39b:	int    0xc9
  44f39d:	outs   dx,DWORD PTR ds:[esi]
  44f39e:	aaa    
  44f39f:	or     eax,0xd3767c6
  44f3a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f3a5:	jg     0x44f3de
  44f3a7:	sbb    eax,0xd3777a6
  44f3ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f3ad:	dec    edi
  44f3ae:	aaa    
  44f3af:	add    BYTE PTR [eax-0x1fc0b760],cl
  44f3b5:	mov    al,ds:0xa0c83f50
  44f3ba:	pop    eax
  44f3bb:	aas    
  44f3bc:	mov    al,0xa0
  44f3be:	pusha  
  44f3bf:	aas    
	...
  44f3d4:	test   al,0xa0
  44f3d6:	push   0x70a0c03f
  44f3db:	aas    
  44f3dc:	test   al,0xa0
  44f3de:	js     0x44f41f
  44f3e0:	mov    al,0xa0
  44f3e2:	cmp    BYTE PTR [edi],0x8
  44f3e5:	mov    eax,ds:0xa0e03f88
  44f3ea:	nop
  44f3eb:	aas    
  44f3ec:	or     BYTE PTR [ecx-0x5f0fc068],ah
  44f3f2:	mov    al,ds:0xa0283f
  44f3f7:	add    BYTE PTR [eax+edx*8-0xc],bl
  44f3fb:	inc    DWORD PTR [eax+edx*4]
  44f3fe:	add    BYTE PTR [eax],al
  44f400:	dec    edx
  44f401:	fwait
  44f402:	cmp    eax,0x5a9b1e31
  44f407:	xor    DWORD PTR [esi],eax
  44f409:	fwait
  44f40a:	jp     0x44f43d
  44f40c:	mov    WORD PTR [edx-0x65cace6c],ds
  44f412:	mov    edi,0xd49adc31
  44f417:	xor    DWORD PTR [edx+ebx*4-0x65edce0c],esp
  44f41e:	push   cs
  44f41f:	xor    bh,bl
  44f421:	cdq    
  44f422:	aaa    
  44f423:	xor    al,BYTE PTR [edx-0x66]
  44f426:	dec    esi
  44f427:	xor    bh,BYTE PTR [edx]
  44f429:	call   0x3298:0x9d50326e
  44f430:	jns    0x44f3cf
  44f432:	ret    
  44f433:	xor    bl,BYTE PTR [esi]
  44f435:	call   0x0:0x32da
	...
  44f44c:	out    0x99,al
  44f44e:	cli    
  44f44f:	xor    dh,BYTE PTR [ebp-0x79e3f14a]
  44f455:	(bad)  
  44f456:	cmovge eax,DWORD PTR [esi-0x1990f0bd]
  44f45d:	jae    0x44f46e
  44f45f:	lahf   
  44f460:	out    0x86,al
  44f462:	adc    ecx,DWORD PTR [eax-0x34c571e]
  44f468:	call   0xcd5:0xb50003c5
  44f46f:	leave  
  44f470:	les    ecx,FWORD PTR [eax]
  44f472:	or     eax,0xe9cc762
  44f477:	adc    dh,al
  44f479:	(bad)  
  44f47a:	push   cs
  44f47b:	dec    ebp
  44f47c:	lods   eax,DWORD PTR ds:[esi]
  44f47d:	mov    eax,DWORD PTR [ecx+esi*2]
  44f480:	lods   eax,DWORD PTR ds:[esi]
  44f481:	das    
  44f482:	or     esi,DWORD PTR [eax-0x62]
  44f485:	mov    ebx,0xa8b50006
  44f48a:	jecxz  0x44f488
  44f48c:	push   edx
  44f48d:	jno    0x44f48b
  44f48f:	push   DWORD PTR [ebp-0x7b48f304]
  44f495:	imul   ecx,DWORD PTR [esi*2+0x5c0f9581],0xffffffe8
  44f49d:	sub    BYTE PTR [eax],bl
  44f49f:	sbb    eax,0x4919b9e3
  44f4a4:	jmp    0x44f498
  44f4a6:	sbb    DWORD PTR [ebx+eiz*8-0x326cf4c6],edi
  44f4ad:	xor    DWORD PTR [ebx],ecx
  44f4af:	lods   al,BYTE PTR ds:[esi]
	...
  44f4c4:	int    0xbf
  44f4c6:	push   es
  44f4c7:	xchg   ecx,eax
  44f4c8:	mov    esi,0xbebe0645
  44f4cd:	pop    ebx
  44f4ce:	pop    es
  44f4cf:	fnstenv [ecx-0x55cced21]
  44f4d5:	test   al,0xd3
  44f4d7:	cld    
  44f4d8:	loop   0x44f54e
  44f4da:	add    eax,DWORD PTR [eax]
  44f4dc:	mov    ch,0x8f
  44f4de:	sub    BYTE PTR [ebp*2+0x4d134980],dl
  44f4e5:	adc    ch,0x13
  44f4e8:	retf   
  44f4e9:	or     BYTE PTR [edi-0x548206ea],0x16
  44f4f0:	jge    0x44f56f
  44f4f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44f4f3:	push   ss
  44f4f4:	cmp    DWORD PTR [ebp-0x6e],0xc07d8316
  44f4fb:	push   ss
  44f4fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f4fd:	jge    0x44f495
  44f4ff:	push   ss
  44f500:	(bad)  
  44f501:	jge    0x44f4df
  44f503:	adc    al,0xbe
  44f505:	jle    0x44f4fb
  44f507:	adc    al,0x9e
  44f509:	jle    0x44f4cb
  44f50b:	adc    al,0xcb
  44f50d:	jle    0x44f4c5
  44f50f:	adc    al,0xae
  44f511:	jle    0x44f531
  44f513:	adc    eax,0x15127f05
  44f518:	fidivr DWORD PTR [esi-0x9]
  44f51b:	adc    al,0xe1
  44f51d:	jle    0x44f4fd
  44f51f:	adc    al,0x37
  44f521:	jle    0x44f535
  44f523:	sbb    BYTE PTR [ecx+0x18467b],al
	...
  44f539:	add    BYTE PTR [eax],al
  44f53b:	add    BYTE PTR [esi+0x7b],al
  44f53e:	pop    esp
  44f53f:	pop    ss
  44f540:	sbb    edi,DWORD PTR [esi+ecx*2+0x17]
  44f544:	sub    DWORD PTR [ebp+ebx*8+0x19],edi
  44f548:	mov    esi,0x1199379
  44f54d:	jns    0x44f598
  44f54f:	sbb    cl,BYTE PTR [ecx]
  44f551:	jns    0x44f56c
  44f553:	sbb    dl,BYTE PTR [ecx]
  44f555:	jns    0x44f540
  44f557:	sbb    BYTE PTR [ecx-0x5ee70686],bh
  44f55d:	jp     0x44f528
  44f55f:	sbb    cl,cl
  44f561:	jp     0x44f51c
  44f563:	sbb    BYTE PTR [ecx+0x7918a97a],dh
  44f569:	jp     0x44f56b
  44f56b:	cdq    
  44f56c:	mov    ebp,0xbd892f53
  44f571:	and    ebp,DWORD PTR [edi]
  44f573:	pop    ecx
  44f574:	lods   al,BYTE PTR ds:[esi]
  44f575:	xor    ebp,DWORD PTR [edi]
  44f577:	imul   ebp,DWORD PTR [ebp-0x6286cffd],0x9d893013
  44f581:	jecxz  0x44f5b2
  44f583:	jns    0x44f552
  44f585:	repz das 
  44f587:	test   eax,0x992fc3cd
  44f58c:	mov    ebp,0xbdc92fd3
  44f591:	mov    ds:0x8fad992f,eax
  44f596:	add    cl,ch
  44f598:	div    BYTE PTR [ebx-0x70494a09]
  44f59e:	add    cl,ch
	...
  44f5b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f5b5:	mov    esi,DWORD PTR [eax]
  44f5b7:	ffree  st(6)
  44f5b9:	xchg   edi,eax
  44f5ba:	xor    ch,cl
  44f5bc:	(bad)  
  44f5bd:	and    esi,DWORD PTR [ebx]
  44f5bf:	cmc    
  44f5c0:	leave  
  44f5c1:	add    esi,DWORD PTR [ecx*2-0x5acc1c3f]
  44f5c8:	test   eax,0xa13d33c3
  44f5cd:	mov    ds:0x83a95533,eax
  44f5d2:	sub    al,0xed
  44f5d4:	mov    ds:0xcd052c63,al
  44f5d9:	inc    ebx
  44f5da:	sub    al,0x9d
  44f5dc:	ret    0x2c23
  44f5df:	mov    ch,0xca
  44f5e1:	add    ebp,DWORD PTR ds:0x2ce3c24d
  44f5e7:	gs stos BYTE PTR es:[edi],al
  44f5e9:	ret    
  44f5ea:	sub    al,0x3d
  44f5ec:	mov    ds:0xaa152ca3,al
  44f5f1:	sub    DWORD PTR ds:0x2d63a3ed,0x0
  44f5f8:	clc    
  44f5f9:	cdq    
  44f5fa:	inc    esp
  44f5fb:	xor    eax,0x35649a48
  44f600:	push   0x68358499
  44f605:	cdq    
  44f606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f607:	xor    eax,0x35c49718
  44f60c:	or     BYTE PTR [edi-0x6917ca1c],dl
  44f612:	add    al,0x36
  44f614:	enter  0x249a,0x36
	...
  44f62c:	mov    eax,0xc8364499
  44f631:	cdq    
  44f632:	fs ss call 0xe87b7ad2
  44f639:	cdq    
  44f63a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f63b:	sbb    BYTE PTR ss:[edx-0x66b7c93c],bl
  44f642:	in     al,0x36
  44f644:	sub    BYTE PTR [ecx-0x6677c8fc],bl
  44f64a:	sub    BYTE PTR [edi],dh
  44f64c:	mov    BYTE PTR [ecx-0x66dfc8d0],bl
  44f652:	cmp    BYTE PTR [edi],dh
  44f654:	sub    BYTE PTR [ecx-0x676fc8c0],bl
  44f65a:	dec    eax
  44f65b:	aaa    
  44f65c:	or     BYTE PTR [ecx-0x66ffc8b0],bl
  44f662:	pop    eax
  44f663:	aaa    
  44f664:	or     BYTE PTR [ecx-0x668fc8a0],bl
  44f66a:	push   0x70990837
  44f66f:	aaa    
  44f670:	pusha  
  44f671:	cdq    
  44f672:	js     0x44f6ab
  44f674:	push   0x90378099
  44f679:	cwde   
  44f67a:	mov    BYTE PTR [edi],dh
  44f67c:	mov    BYTE PTR [eax-0x677fc870],bl
  44f682:	cwde   
  44f683:	aaa    
  44f684:	mov    ch,0x46
  44f686:	shld   edx,eax,0x4e
  44f68a:	shrd   DWORD PTR [edx+0xb40f76],ebp,0x0
	...
  44f6a2:	add    BYTE PTR [eax],al
  44f6a4:	mov    ds:0xaabc0f4e,al
  44f6a9:	pinsrw xmm4,WORD PTR [edx-0x7533f092],0xa6
  44f6b2:	add    eax,DWORD PTR [eax]
  44f6b4:	mov    ch,0xa6
  44f6b6:	add    eax,DWORD PTR [eax]
  44f6b8:	mov    ch,0xa6
  44f6ba:	add    eax,DWORD PTR [eax]
  44f6bc:	mov    ch,0xa6
  44f6be:	add    eax,DWORD PTR [eax]
  44f6c0:	mov    ch,0xb8
  44f6c2:	add    eax,DWORD PTR [eax]
  44f6c4:	mov    ch,0xb8
  44f6c6:	add    eax,DWORD PTR [eax]
  44f6c8:	mov    ch,0xb8
  44f6ca:	add    eax,DWORD PTR [eax]
  44f6cc:	mov    ch,0xb8
  44f6ce:	add    eax,DWORD PTR [eax]
  44f6d0:	mov    ch,0xb8
  44f6d2:	add    eax,DWORD PTR [eax]
  44f6d4:	mov    ch,0xb8
  44f6d6:	add    eax,DWORD PTR [eax]
  44f6d8:	mov    ch,0xb8
  44f6da:	add    eax,DWORD PTR [eax]
  44f6dc:	mov    ch,0xb8
  44f6de:	add    eax,DWORD PTR [eax]
  44f6e0:	mov    ch,0xb8
  44f6e2:	add    eax,DWORD PTR [eax]
  44f6e4:	mov    ch,0xb8
  44f6e6:	add    eax,DWORD PTR [eax]
  44f6e8:	mov    ch,0xb8
  44f6ea:	add    eax,DWORD PTR [eax]
  44f6ec:	mov    ch,0xb8
  44f6ee:	add    eax,DWORD PTR [eax]
  44f6f0:	mov    ch,0xb8
  44f6f2:	add    eax,DWORD PTR [eax]
  44f6f4:	mov    ch,0xb8
  44f6f6:	add    eax,DWORD PTR [eax]
  44f6f8:	mov    ch,0xb8
  44f6fa:	add    eax,DWORD PTR [eax]
  44f6fc:	mov    ch,0xb8
  44f6fe:	add    eax,DWORD PTR [eax]
  44f700:	mov    ch,0xb8
  44f702:	add    eax,DWORD PTR [eax]
  44f704:	mov    ch,0xb8
  44f706:	add    eax,DWORD PTR [eax]
	...
  44f71c:	mov    ch,0xb8
  44f71e:	add    eax,DWORD PTR [eax]
  44f720:	mov    ch,0xb8
  44f722:	add    eax,DWORD PTR [eax]
  44f724:	mov    ch,0x8f
  44f726:	jmp    0xe9d4ac2e
  44f72b:	add    esi,DWORD PTR [ebp-0x4afc1671]
  44f731:	(bad)
  44f735:	(bad)
  44f739:	(bad)
  44f73d:	(bad)
  44f741:	(bad)
  44f745:	(bad)
  44f749:	(bad)
  44f74d:	(bad)
  44f751:	(bad)
  44f755:	(bad)
  44f759:	(bad)
  44f75d:	(bad)
  44f761:	(bad)
  44f765:	(bad)
  44f769:	(bad)
  44f76d:	(bad)
  44f771:	(bad)
  44f775:	(bad)
  44f779:	(bad)
  44f77d:	(bad)
	...
  44f791:	add    BYTE PTR [eax],al
  44f793:	add    BYTE PTR [ebp-0x4afc1671],dh
  44f799:	(bad)
  44f79d:	(bad)
  44f7a1:	(bad)
  44f7a5:	(bad)
  44f7a9:	(bad)
  44f7ad:	(bad)
  44f7b1:	pop    DWORD PTR [eax]
  44f7b3:	jmp    0xe945876e
  44f7b8:	mov    dh,0x8f
  44f7ba:	add    cl,ch
  44f7bc:	mov    dh,0x8f
  44f7be:	add    cl,ch
  44f7c0:	mov    dh,0x8f
  44f7c2:	add    cl,ch
  44f7c4:	mov    dh,0x8f
  44f7c6:	add    cl,ch
  44f7c8:	mov    dh,0x8f
  44f7ca:	add    cl,ch
  44f7cc:	mov    dh,0x8f
  44f7ce:	add    cl,ch
  44f7d0:	mov    dh,0x8f
  44f7d2:	add    cl,ch
  44f7d4:	mov    dh,0x8f
  44f7d6:	add    cl,ch
  44f7d8:	mov    dh,0x8f
  44f7da:	add    cl,ch
  44f7dc:	mov    dh,0x8f
  44f7de:	add    cl,ch
  44f7e0:	mov    dh,0x8f
  44f7e2:	add    cl,ch
  44f7e4:	mov    dh,0x8f
  44f7e6:	add    cl,ch
  44f7e8:	mov    dh,0x8f
  44f7ea:	add    cl,ch
  44f7ec:	mov    dh,0x8f
  44f7ee:	add    cl,ch
  44f7f0:	mov    dh,0x8f
  44f7f2:	add    cl,ch
  44f7f4:	mov    dh,0x8f
  44f7f6:	add    cl,ch
	...
  44f80c:	mov    dh,0x8f
  44f80e:	add    cl,ch
  44f810:	mov    dh,0x8f
  44f812:	add    cl,ch
  44f814:	mov    dh,0x8f
  44f816:	add    cl,ch
  44f818:	mov    dh,0x8f
  44f81a:	add    cl,ch
  44f81c:	mov    dh,0x8f
  44f81e:	add    cl,ch
  44f820:	mov    dh,0x8f
  44f822:	add    cl,ch
  44f824:	mov    dh,0x8f
  44f826:	add    cl,ch
  44f828:	mov    dh,0x8f
  44f82a:	add    cl,ch
  44f82c:	mov    dh,0x8f
  44f82e:	add    cl,ch
  44f830:	mov    dh,0x8f
  44f832:	add    cl,ch
  44f834:	mov    dh,0x8f
  44f836:	add    cl,ch
  44f838:	mov    dh,0x8f
  44f83a:	add    cl,ch
  44f83c:	mov    dh,0x8f
  44f83e:	add    BYTE PTR [eax],al
  44f840:	sbb    al,0x91
  44f842:	add    BYTE PTR [eax],al
  44f844:	or     al,0x91
  44f846:	add    BYTE PTR [eax],al
  44f848:	or     al,0x91
  44f84a:	add    BYTE PTR [eax],al
  44f84c:	sbb    al,0x91
  44f84e:	add    BYTE PTR [eax],al
  44f850:	sbb    al,0x91
  44f852:	add    BYTE PTR [eax],al
  44f854:	or     al,0x91
  44f856:	add    BYTE PTR [eax],al
  44f858:	or     al,0x91
  44f85a:	add    BYTE PTR [eax],al
  44f85c:	fcom   QWORD PTR [eax-0x6f240000]
  44f862:	add    BYTE PTR [eax],al
  44f864:	int3   
  44f865:	nop
  44f866:	add    BYTE PTR [eax],al
  44f868:	int3   
  44f869:	nop
  44f86a:	add    BYTE PTR [eax],al
  44f86c:	fcom   QWORD PTR [eax+0x0]
	...
  44f882:	add    BYTE PTR [eax],al
  44f884:	fcom   QWORD PTR [eax-0x6f340000]
  44f88a:	add    BYTE PTR [eax],al
  44f88c:	int3   
  44f88d:	nop
  44f88e:	add    BYTE PTR [eax],al
  44f890:	pushf  
  44f891:	nop
  44f892:	add    BYTE PTR [eax],al
  44f894:	pushf  
  44f895:	nop
  44f896:	add    BYTE PTR [eax],al
  44f898:	mov    WORD PTR [eax-0x6f740000],ss
  44f89e:	add    BYTE PTR [eax],al
  44f8a0:	pushf  
  44f8a1:	nop
  44f8a2:	add    BYTE PTR [eax],al
  44f8a4:	pushf  
  44f8a5:	nop
  44f8a6:	add    BYTE PTR [eax],al
  44f8a8:	mov    WORD PTR [eax-0x6f740000],ss
  44f8ae:	add    BYTE PTR [eax],al
  44f8b0:	pop    esp
  44f8b1:	nop
  44f8b2:	add    BYTE PTR [eax],al
  44f8b4:	pop    esp
  44f8b5:	nop
  44f8b6:	add    BYTE PTR [eax],al
  44f8b8:	dec    esp
  44f8b9:	nop
  44f8ba:	add    BYTE PTR [eax],al
  44f8bc:	dec    esp
  44f8bd:	nop
  44f8be:	add    BYTE PTR [eax],al
  44f8c0:	pop    esp
  44f8c1:	nop
  44f8c2:	add    BYTE PTR [eax],al
  44f8c4:	pop    esp
  44f8c5:	nop
  44f8c6:	add    BYTE PTR [eax],al
  44f8c8:	dec    esp
  44f8c9:	nop
  44f8ca:	add    BYTE PTR [eax],al
  44f8cc:	mov    ch,0xb6
  44f8ce:	add    eax,DWORD PTR [eax]
  44f8d0:	mov    ch,0xb6
  44f8d2:	add    eax,DWORD PTR [eax]
  44f8d4:	mov    ch,0xb6
  44f8d6:	add    eax,DWORD PTR [eax]
  44f8d8:	mov    ch,0xb6
  44f8da:	add    eax,DWORD PTR [eax]
  44f8dc:	mov    ch,0xb6
  44f8de:	add    eax,DWORD PTR [eax]
  44f8e0:	mov    ch,0xb6
  44f8e2:	add    eax,DWORD PTR [eax]
  44f8e4:	mov    ch,0xb6
  44f8e6:	add    eax,DWORD PTR [eax]
	...
  44f8fc:	mov    ch,0xb6
  44f8fe:	add    eax,DWORD PTR [eax]
  44f900:	mov    ch,0xb6
  44f902:	add    eax,DWORD PTR [eax]
  44f904:	mov    ch,0xb6
  44f906:	add    eax,DWORD PTR [eax]
  44f908:	mov    ch,0xb6
  44f90a:	add    eax,DWORD PTR [eax]
  44f90c:	mov    ch,0xb6
  44f90e:	add    eax,DWORD PTR [eax]
  44f910:	mov    ch,0xb6
  44f912:	add    eax,DWORD PTR [eax]
  44f914:	mov    ch,0xb6
  44f916:	add    eax,DWORD PTR [eax]
  44f918:	mov    ch,0xb6
  44f91a:	add    eax,DWORD PTR [eax]
  44f91c:	mov    ch,0xb6
  44f91e:	add    eax,DWORD PTR [eax]
  44f920:	mov    ch,0xb6
  44f922:	add    eax,DWORD PTR [eax]
  44f924:	mov    ch,0xb8
  44f926:	add    eax,DWORD PTR [eax]
  44f928:	mov    ch,0xb8
  44f92a:	add    eax,DWORD PTR [eax]
  44f92c:	mov    ch,0xb8
  44f92e:	add    eax,DWORD PTR [eax]
  44f930:	mov    ch,0xb8
  44f932:	add    eax,DWORD PTR [eax]
  44f934:	mov    ch,0xb8
  44f936:	add    eax,DWORD PTR [eax]
  44f938:	mov    ch,0xb8
  44f93a:	add    eax,DWORD PTR [eax]
  44f93c:	mov    ch,0xb8
  44f93e:	add    eax,DWORD PTR [eax]
  44f940:	mov    ch,0xb8
  44f942:	add    eax,DWORD PTR [eax]
  44f944:	mov    ch,0xb8
  44f946:	add    eax,DWORD PTR [eax]
  44f948:	mov    ch,0xb8
  44f94a:	add    eax,DWORD PTR [eax]
  44f94c:	mov    ch,0xb8
  44f94e:	add    eax,DWORD PTR [eax]
  44f950:	mov    ch,0xb8
  44f952:	add    eax,DWORD PTR [eax]
  44f954:	mov    ch,0xb8
  44f956:	add    eax,DWORD PTR [eax]
  44f958:	mov    ch,0x8f
  44f95a:	jmp    0xe9d4ae62
  44f95f:	add    eax,DWORD PTR [eax]
	...
  44f971:	add    BYTE PTR [eax],al
  44f973:	add    BYTE PTR [ebp-0x4afc1671],dh
  44f979:	(bad)
  44f97d:	(bad)
  44f981:	(bad)
  44f985:	(bad)
  44f989:	(bad)
  44f98d:	(bad)
  44f991:	(bad)
  44f995:	(bad)
  44f999:	(bad)
  44f99d:	(bad)
  44f9a1:	(bad)
  44f9a5:	(bad)
  44f9a9:	(bad)
  44f9ad:	(bad)
  44f9b1:	(bad)
  44f9b5:	(bad)
  44f9b9:	(bad)
  44f9bd:	(bad)
  44f9c1:	(bad)
  44f9c5:	(bad)
  44f9c9:	(bad)
  44f9cd:	(bad)
  44f9d1:	(bad)
  44f9d5:	(bad)
	...
  44f9e9:	add    BYTE PTR [eax],al
  44f9eb:	add    BYTE PTR [ebp-0x4afc1671],dh
  44f9f1:	(bad)
  44f9f5:	(bad)
  44f9f9:	pop    DWORD PTR [eax]
  44f9fb:	jmp    0xe94589b6
  44fa00:	mov    dh,0x8f
  44fa02:	add    cl,ch
  44fa04:	mov    dh,0x8f
  44fa06:	add    cl,ch
  44fa08:	mov    dh,0x8f
  44fa0a:	add    cl,ch
  44fa0c:	mov    dh,0x8f
  44fa0e:	add    cl,ch
  44fa10:	mov    dh,0x8f
  44fa12:	add    cl,ch
  44fa14:	mov    dh,0x8f
  44fa16:	add    cl,ch
  44fa18:	mov    dh,0x8f
  44fa1a:	add    cl,ch
  44fa1c:	mov    dh,0x8f
  44fa1e:	add    cl,ch
  44fa20:	mov    dh,0x8f
  44fa22:	add    cl,ch
  44fa24:	mov    dh,0x8f
  44fa26:	add    cl,ch
  44fa28:	mov    dh,0x8f
  44fa2a:	add    cl,ch
  44fa2c:	mov    dh,0x8f
  44fa2e:	add    cl,ch
  44fa30:	mov    dh,0x8f
  44fa32:	add    cl,ch
  44fa34:	mov    dh,0x8f
  44fa36:	add    cl,ch
  44fa38:	mov    dh,0x8f
  44fa3a:	add    cl,ch
  44fa3c:	mov    dh,0x8f
  44fa3e:	add    cl,ch
  44fa40:	mov    dh,0x8f
  44fa42:	add    cl,ch
  44fa44:	mov    dh,0x8f
  44fa46:	add    cl,ch
  44fa48:	mov    dh,0x8f
  44fa4a:	add    cl,ch
  44fa4c:	mov    dh,0x8f
  44fa4e:	add    cl,ch
	...
  44fa64:	mov    dh,0x8f
  44fa66:	add    cl,ch
  44fa68:	mov    dh,0x8f
  44fa6a:	add    cl,ch
  44fa6c:	mov    dh,0x8f
  44fa6e:	add    cl,ch
  44fa70:	mov    dh,0x8f
  44fa72:	add    cl,ch
  44fa74:	mov    dh,0x8f
  44fa76:	add    cl,ch
  44fa78:	mov    dh,0x8f
  44fa7a:	add    cl,ch
  44fa7c:	mov    dh,0x8f
  44fa7e:	add    cl,ch
  44fa80:	mov    dh,0x8f
  44fa82:	add    cl,ch
  44fa84:	mov    dh,0x8f
  44fa86:	add    BYTE PTR [eax],al
  44fa88:	dec    esp
  44fa89:	lea    eax,[eax]
  44fa8b:	add    BYTE PTR [ebp+ecx*4+0x0],cl
  44fa8f:	add    BYTE PTR [ebp+ecx*4+0x0],bl
  44fa93:	add    BYTE PTR [ebp+ecx*4+0x0],bl
  44fa97:	add    BYTE PTR [ebp+ecx*4+0x0],cl
  44fa9b:	add    BYTE PTR [ebp+ecx*4+0x0],cl
  44fa9f:	add    BYTE PTR [ecx*4-0x72e40000],bl
  44faa6:	add    BYTE PTR [eax],al
  44faa8:	or     al,0x8d
  44faaa:	add    BYTE PTR [eax],al
  44faac:	or     al,0x8d
  44faae:	add    BYTE PTR [eax],al
  44fab0:	sbb    al,0x8d
  44fab2:	add    BYTE PTR [eax],al
  44fab4:	sbb    al,0x8d
  44fab6:	add    BYTE PTR [eax],al
  44fab8:	or     al,0x8d
  44faba:	add    BYTE PTR [eax],al
  44fabc:	or     al,0x8d
  44fabe:	add    BYTE PTR [eax],al
  44fac0:	fmul   QWORD PTR [eax+eax*1+0x8cdc00]
	...
  44fadb:	add    ah,cl
  44fadd:	mov    WORD PTR [eax],es
  44fadf:	add    ah,cl
  44fae1:	mov    WORD PTR [eax],es
  44fae3:	add    ah,bl
  44fae5:	mov    WORD PTR [eax],es
  44fae7:	add    ah,bl
  44fae9:	mov    WORD PTR [eax],es
  44faeb:	add    ah,cl
  44faed:	mov    WORD PTR [eax],es
  44faef:	add    ah,cl
  44faf1:	mov    WORD PTR [eax],es
  44faf3:	add    BYTE PTR [esp+ecx*4-0x73640000],bl
  44fafa:	add    BYTE PTR [eax],al
  44fafc:	mov    WORD PTR [eax+eax*1+0x8c8c00],cs
  44fb03:	add    BYTE PTR [esp+ecx*4-0x73640000],bl
  44fb0a:	add    BYTE PTR [eax],al
  44fb0c:	mov    WORD PTR [eax+eax*1+0x8c8c00],cs
  44fb13:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44fb19:	mov    dh,0x3
  44fb1b:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44fb21:	mov    dh,0x3
  44fb23:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44fb29:	mov    dh,0x3
  44fb2b:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44fb31:	mov    dh,0x3
  44fb33:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44fb39:	mov    dh,0x3
  44fb3b:	add    BYTE PTR [ebp+0x3b6],dh
	...
  44fb51:	add    BYTE PTR [eax],al
  44fb53:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44fb59:	mov    dh,0x3
  44fb5b:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44fb61:	mov    dh,0x3
  44fb63:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44fb69:	mov    dh,0x3
  44fb6b:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44fb71:	mov    dh,0x3
  44fb73:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44fb79:	mov    dh,0x3
  44fb7b:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44fb81:	mov    dh,0x3
  44fb83:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44fb89:	mov    eax,0xb8b50003
  44fb8e:	add    eax,DWORD PTR [eax]
  44fb90:	mov    ch,0xb8
  44fb92:	add    eax,DWORD PTR [eax]
  44fb94:	mov    ch,0xb8
  44fb96:	add    eax,DWORD PTR [eax]
  44fb98:	mov    ch,0xb8
  44fb9a:	add    eax,DWORD PTR [eax]
  44fb9c:	mov    ch,0xb8
  44fb9e:	add    eax,DWORD PTR [eax]
  44fba0:	mov    ch,0x8f
  44fba2:	jmp    0xe9d4b0aa
  44fba7:	add    esi,DWORD PTR [ebp-0x4afc1671]
  44fbad:	(bad)
  44fbb1:	(bad)
  44fbb5:	(bad)
	...
  44fbc9:	add    BYTE PTR [eax],al
  44fbcb:	add    BYTE PTR [ebp-0x4afc1671],dh
  44fbd1:	(bad)
  44fbd5:	(bad)
  44fbd9:	(bad)
  44fbdd:	(bad)
  44fbe1:	(bad)
  44fbe5:	(bad)
  44fbe9:	(bad)
  44fbed:	(bad)
  44fbf1:	(bad)
  44fbf5:	(bad)
  44fbf9:	(bad)
  44fbfd:	(bad)
  44fc01:	(bad)
  44fc05:	(bad)
  44fc09:	(bad)
  44fc0d:	(bad)
  44fc11:	(bad)
  44fc15:	(bad)
  44fc19:	(bad)
  44fc1d:	(bad)
  44fc21:	(bad)
  44fc25:	(bad)
  44fc29:	(bad)
  44fc2d:	pop    DWORD PTR [eax]
  44fc2f:	jmp    0x44fc34
	...
  44fc44:	mov    dh,0x8f
  44fc46:	add    cl,ch
  44fc48:	mov    dh,0x8f
  44fc4a:	add    cl,ch
  44fc4c:	mov    dh,0x8f
  44fc4e:	add    cl,ch
  44fc50:	mov    dh,0x8f
  44fc52:	add    cl,ch
  44fc54:	mov    dh,0x8f
  44fc56:	add    cl,ch
  44fc58:	mov    dh,0x8f
  44fc5a:	add    cl,ch
  44fc5c:	mov    dh,0x8f
  44fc5e:	add    cl,ch
  44fc60:	mov    dh,0x8f
  44fc62:	add    cl,ch
  44fc64:	mov    dh,0x8f
  44fc66:	add    cl,ch
  44fc68:	mov    dh,0x8f
  44fc6a:	add    cl,ch
  44fc6c:	mov    dh,0x8f
  44fc6e:	add    cl,ch
  44fc70:	mov    dh,0x8f
  44fc72:	add    cl,ch
  44fc74:	mov    dh,0x8f
  44fc76:	add    cl,ch
  44fc78:	mov    dh,0x8f
  44fc7a:	add    cl,ch
  44fc7c:	mov    dh,0x8f
  44fc7e:	add    cl,ch
  44fc80:	mov    dh,0x8f
  44fc82:	add    cl,ch
  44fc84:	mov    dh,0x8f
  44fc86:	add    cl,ch
  44fc88:	mov    dh,0x8f
  44fc8a:	add    cl,ch
  44fc8c:	mov    dh,0x8f
  44fc8e:	add    cl,ch
  44fc90:	mov    dh,0x8f
  44fc92:	add    cl,ch
  44fc94:	mov    dh,0x8f
  44fc96:	add    cl,ch
  44fc98:	mov    dh,0x8f
  44fc9a:	add    cl,ch
  44fc9c:	mov    dh,0x8f
  44fc9e:	add    cl,ch
  44fca0:	mov    dh,0x8f
  44fca2:	add    cl,ch
  44fca4:	mov    dh,0x8f
  44fca6:	add    cl,ch
	...
  44fcbc:	mov    dh,0x8f
  44fcbe:	add    cl,ch
  44fcc0:	mov    dh,0x8f
  44fcc2:	add    cl,ch
  44fcc4:	mov    dh,0x8f
  44fcc6:	add    cl,ch
  44fcc8:	mov    dh,0x8f
  44fcca:	add    cl,ch
  44fccc:	mov    dh,0x8f
  44fcce:	add    BYTE PTR [eax],al
  44fcd0:	mov    WORD PTR [ecx-0x6e640000],ss
  44fcd6:	add    BYTE PTR [eax],al
  44fcd8:	pushf  
  44fcd9:	xchg   ecx,eax
  44fcda:	add    BYTE PTR [eax],al
  44fcdc:	mov    WORD PTR [ecx-0x6e740000],ss
  44fce2:	add    BYTE PTR [eax],al
  44fce4:	pop    esp
  44fce5:	xchg   ecx,eax
  44fce6:	add    BYTE PTR [eax],al
  44fce8:	pop    esp
  44fce9:	xchg   ecx,eax
  44fcea:	add    BYTE PTR [eax],al
  44fcec:	dec    esp
  44fced:	xchg   ecx,eax
  44fcee:	add    BYTE PTR [eax],al
  44fcf0:	dec    esp
  44fcf1:	xchg   ecx,eax
  44fcf2:	add    BYTE PTR [eax],al
  44fcf4:	pop    esp
  44fcf5:	xchg   ecx,eax
  44fcf6:	add    BYTE PTR [eax],al
  44fcf8:	pop    esp
  44fcf9:	xchg   ecx,eax
  44fcfa:	add    BYTE PTR [eax],al
  44fcfc:	dec    esp
  44fcfd:	xchg   ecx,eax
  44fcfe:	add    BYTE PTR [eax],al
  44fd00:	dec    esp
  44fd01:	xchg   ecx,eax
  44fd02:	add    BYTE PTR [eax],al
  44fd04:	sbb    al,0x91
  44fd06:	add    BYTE PTR [eax],al
  44fd08:	sbb    al,0x91
  44fd0a:	add    BYTE PTR [eax],al
  44fd0c:	or     al,0x91
  44fd0e:	add    BYTE PTR [eax],al
  44fd10:	or     al,0x91
  44fd12:	add    BYTE PTR [eax],al
  44fd14:	sbb    al,0x91
  44fd16:	add    BYTE PTR [eax],al
  44fd18:	sbb    al,0x91
  44fd1a:	add    BYTE PTR [eax],al
  44fd1c:	or     al,0x91
	...
  44fd32:	add    BYTE PTR [eax],al
  44fd34:	or     al,0x91
  44fd36:	add    BYTE PTR [eax],al
  44fd38:	fcom   QWORD PTR [eax-0x6f240000]
  44fd3e:	add    BYTE PTR [eax],al
  44fd40:	int3   
  44fd41:	nop
  44fd42:	add    BYTE PTR [eax],al
  44fd44:	int3   
  44fd45:	nop
  44fd46:	add    BYTE PTR [eax],al
  44fd48:	fcom   QWORD PTR [eax-0x6f240000]
  44fd4e:	add    BYTE PTR [eax],al
  44fd50:	int3   
  44fd51:	nop
  44fd52:	add    BYTE PTR [eax],al
  44fd54:	int3   
  44fd55:	nop
  44fd56:	add    BYTE PTR [eax],al
  44fd58:	pushf  
  44fd59:	nop
  44fd5a:	add    BYTE PTR [eax],al
  44fd5c:	mov    ch,0xb6
  44fd5e:	add    eax,DWORD PTR [eax]
  44fd60:	mov    ch,0xb6
  44fd62:	add    eax,DWORD PTR [eax]
  44fd64:	mov    ch,0xb6
  44fd66:	add    eax,DWORD PTR [eax]
  44fd68:	mov    ch,0xb6
  44fd6a:	add    eax,DWORD PTR [eax]
  44fd6c:	mov    ch,0xb6
  44fd6e:	add    eax,DWORD PTR [eax]
  44fd70:	mov    ch,0xb6
  44fd72:	add    eax,DWORD PTR [eax]
  44fd74:	mov    ch,0xb6
  44fd76:	add    eax,DWORD PTR [eax]
  44fd78:	mov    ch,0xb6
  44fd7a:	add    eax,DWORD PTR [eax]
  44fd7c:	mov    ch,0xb6
  44fd7e:	add    eax,DWORD PTR [eax]
  44fd80:	mov    ch,0xb6
  44fd82:	add    eax,DWORD PTR [eax]
  44fd84:	mov    ch,0xb6
  44fd86:	add    eax,DWORD PTR [eax]
  44fd88:	mov    ch,0xb6
  44fd8a:	add    eax,DWORD PTR [eax]
  44fd8c:	mov    ch,0xb6
  44fd8e:	add    eax,DWORD PTR [eax]
  44fd90:	mov    ch,0xb6
  44fd92:	add    eax,DWORD PTR [eax]
  44fd94:	mov    ch,0xb6
  44fd96:	add    eax,DWORD PTR [eax]
	...
  44fdac:	mov    ch,0xb6
  44fdae:	add    eax,DWORD PTR [eax]
  44fdb0:	mov    ch,0xb6
  44fdb2:	add    eax,DWORD PTR [eax]
  44fdb4:	mov    ch,0xb6
  44fdb6:	add    eax,DWORD PTR [eax]
  44fdb8:	mov    ch,0xb6
  44fdba:	add    eax,DWORD PTR [eax]
  44fdbc:	mov    ch,0xb6
  44fdbe:	add    eax,DWORD PTR [eax]
  44fdc0:	mov    ch,0xb6
  44fdc2:	add    eax,DWORD PTR [eax]
  44fdc4:	mov    ch,0xb6
  44fdc6:	add    eax,DWORD PTR [eax]
  44fdc8:	mov    ch,0xb6
  44fdca:	add    eax,DWORD PTR [eax]
  44fdcc:	mov    ch,0xb6
  44fdce:	add    eax,DWORD PTR [eax]
  44fdd0:	mov    ch,0xb6
  44fdd2:	add    eax,DWORD PTR [eax]
  44fdd4:	mov    ch,0xb6
  44fdd6:	add    eax,DWORD PTR [eax]
  44fdd8:	mov    ch,0xb6
  44fdda:	add    eax,DWORD PTR [eax]
  44fddc:	mov    ch,0xb6
  44fdde:	add    eax,DWORD PTR [eax]
  44fde0:	mov    ch,0xb6
  44fde2:	add    eax,DWORD PTR [eax]
  44fde4:	mov    ch,0xb6
  44fde6:	add    eax,DWORD PTR [eax]
  44fde8:	mov    ch,0x8f
  44fdea:	jmp    0xe9d4b2f2
  44fdef:	add    esi,DWORD PTR [ebp-0x4afc1671]
  44fdf5:	(bad)
  44fdf9:	(bad)
  44fdfd:	(bad)
  44fe01:	(bad)
  44fe05:	(bad)
  44fe09:	(bad)
  44fe0d:	(bad)
	...
  44fe21:	add    BYTE PTR [eax],al
  44fe23:	add    BYTE PTR [ebp-0x4afc1671],dh
  44fe29:	(bad)
  44fe2d:	(bad)
  44fe31:	(bad)
  44fe35:	(bad)
  44fe39:	(bad)
  44fe3d:	(bad)
  44fe41:	(bad)
  44fe45:	(bad)
  44fe49:	(bad)
  44fe4d:	(bad)
  44fe51:	(bad)
  44fe55:	(bad)
  44fe59:	(bad)
  44fe5d:	(bad)
  44fe61:	(bad)
  44fe65:	(bad)
  44fe69:	(bad)
  44fe6d:	(bad)
  44fe71:	(bad)
  44fe75:	pop    DWORD PTR [eax]
  44fe77:	jmp    0xe9458e32
  44fe7c:	mov    dh,0x8f
  44fe7e:	add    cl,ch
  44fe80:	mov    dh,0x8f
  44fe82:	add    cl,ch
  44fe84:	mov    dh,0x8f
  44fe86:	add    cl,ch
	...
  44fe9c:	mov    dh,0x8f
  44fe9e:	add    cl,ch
  44fea0:	mov    dh,0x8f
  44fea2:	add    cl,ch
  44fea4:	mov    dh,0x8f
  44fea6:	add    cl,ch
  44fea8:	mov    dh,0x8f
  44feaa:	add    cl,ch
  44feac:	mov    dh,0x8f
  44feae:	add    cl,ch
  44feb0:	mov    dh,0x8f
  44feb2:	add    cl,ch
  44feb4:	mov    dh,0x8f
  44feb6:	add    cl,ch
  44feb8:	mov    dh,0x8f
  44feba:	add    cl,ch
  44febc:	mov    dh,0x8f
  44febe:	add    cl,ch
  44fec0:	mov    dh,0x8f
  44fec2:	add    cl,ch
  44fec4:	mov    dh,0x8f
  44fec6:	add    cl,ch
  44fec8:	mov    dh,0x8f
  44feca:	add    cl,ch
  44fecc:	mov    dh,0x8f
  44fece:	add    cl,ch
  44fed0:	mov    dh,0x8f
  44fed2:	add    cl,ch
  44fed4:	mov    dh,0x8f
  44fed6:	add    cl,ch
  44fed8:	mov    dh,0x8f
  44feda:	add    cl,ch
  44fedc:	mov    dh,0x8f
  44fede:	add    cl,ch
  44fee0:	mov    dh,0x8f
  44fee2:	add    cl,ch
  44fee4:	mov    dh,0x8f
  44fee6:	add    cl,ch
  44fee8:	mov    dh,0x8f
  44feea:	add    cl,ch
  44feec:	mov    dh,0x8f
  44feee:	add    cl,ch
  44fef0:	mov    dh,0x8f
  44fef2:	add    cl,ch
  44fef4:	mov    dh,0x8f
  44fef6:	add    cl,ch
  44fef8:	mov    dh,0x8f
  44fefa:	add    cl,ch
  44fefc:	mov    dh,0x8f
  44fefe:	add    cl,ch
	...
  44ff14:	mov    dh,0x8f
  44ff16:	add    BYTE PTR [eax],al
  44ff18:	fmul   QWORD PTR [ebp-0x72240000]
  44ff1e:	add    BYTE PTR [eax],al
  44ff20:	int3   
  44ff21:	lea    eax,[eax]
  44ff23:	add    ah,cl
  44ff25:	lea    eax,[eax]
  44ff27:	add    BYTE PTR [ebp+ecx*4-0x72640000],bl
  44ff2e:	add    BYTE PTR [eax],al
  44ff30:	mov    WORD PTR [ebp-0x72740000],cs
  44ff36:	add    BYTE PTR [eax],al
  44ff38:	pushf  
  44ff39:	lea    eax,[eax]
  44ff3b:	add    BYTE PTR [ebp+ecx*4-0x72740000],bl
  44ff42:	add    BYTE PTR [eax],al
  44ff44:	mov    WORD PTR [ebp-0x72a40000],cs
  44ff4a:	add    BYTE PTR [eax],al
  44ff4c:	pop    esp
  44ff4d:	lea    eax,[eax]
  44ff4f:	add    BYTE PTR [ebp+ecx*4+0x0],cl
  44ff53:	add    BYTE PTR [ebp+ecx*4+0x0],cl
  44ff57:	add    BYTE PTR [ebp+ecx*4+0x0],bl
  44ff5b:	add    BYTE PTR [ebp+ecx*4+0x0],bl
  44ff5f:	add    BYTE PTR [ebp+ecx*4+0x0],cl
  44ff63:	add    BYTE PTR [ebp+ecx*4+0x0],cl
  44ff67:	add    BYTE PTR [ecx*4-0x72e40000],bl
  44ff6e:	add    BYTE PTR [eax],al
  44ff70:	or     al,0x8d
  44ff72:	add    BYTE PTR [eax],al
  44ff74:	or     al,0x8d
	...
  44ff8a:	add    BYTE PTR [eax],al
  44ff8c:	sbb    al,0x8d
  44ff8e:	add    BYTE PTR [eax],al
  44ff90:	sbb    al,0x8d
  44ff92:	add    BYTE PTR [eax],al
  44ff94:	or     al,0x8d
  44ff96:	add    BYTE PTR [eax],al
  44ff98:	or     al,0x8d
  44ff9a:	add    BYTE PTR [eax],al
  44ff9c:	fmul   QWORD PTR [eax+eax*1+0x8cdc00]
  44ffa3:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44ffa9:	mov    dh,0x3
  44ffab:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44ffb1:	mov    dh,0x3
  44ffb3:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44ffb9:	mov    dh,0x3
  44ffbb:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44ffc1:	mov    dh,0x3
  44ffc3:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44ffc9:	mov    dh,0x3
  44ffcb:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44ffd1:	mov    dh,0x3
  44ffd3:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44ffd9:	mov    dh,0x3
  44ffdb:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44ffe1:	mov    dh,0x3
  44ffe3:	add    BYTE PTR [ebp-0x4afffc4a],dh
  44ffe9:	mov    dh,0x3
  44ffeb:	add    BYTE PTR [ebp+0x3b6],dh
	...
  450001:	add    BYTE PTR [eax],al
  450003:	add    BYTE PTR [ebp-0x4afffc4a],dh
  450009:	mov    dh,0x3
  45000b:	add    BYTE PTR [ebp-0x4afffc4a],dh
  450011:	mov    dh,0x3
  450013:	add    BYTE PTR [ebp-0x4afffc4a],dh
  450019:	mov    dh,0x3
  45001b:	add    BYTE PTR [ebp-0x4afffc4a],dh
  450021:	mov    dh,0x3
  450023:	add    BYTE PTR [ebp-0x4afffc4a],dh
  450029:	mov    dh,0x3
  45002b:	add    BYTE PTR [ebp-0x4afffc4a],dh
  450031:	(bad)
  450035:	(bad)
  450039:	(bad)
  45003d:	(bad)
  450041:	(bad)
  450045:	(bad)
  450049:	(bad)
  45004d:	(bad)
  450051:	(bad)
  450055:	(bad)
  450059:	(bad)
  45005d:	(bad)
  450061:	(bad)
  450065:	(bad)
	...
  450079:	add    BYTE PTR [eax],al
  45007b:	add    BYTE PTR [ebp-0x4afc1671],dh
  450081:	(bad)
  450085:	(bad)
  450089:	(bad)
  45008d:	(bad)
  450091:	(bad)
  450095:	(bad)
  450099:	(bad)
  45009d:	(bad)
  4500a1:	(bad)
  4500a5:	(bad)
  4500a9:	(bad)
  4500ad:	(bad)
  4500b1:	(bad)
  4500b5:	(bad)
  4500b9:	(bad)
  4500bd:	pop    DWORD PTR [eax]
  4500bf:	jmp    0xe945907a
  4500c4:	mov    dh,0x8f
  4500c6:	add    cl,ch
  4500c8:	mov    dh,0x8f
  4500ca:	add    cl,ch
  4500cc:	mov    dh,0x8f
  4500ce:	add    cl,ch
  4500d0:	mov    dh,0x8f
  4500d2:	add    cl,ch
  4500d4:	mov    dh,0x8f
  4500d6:	add    cl,ch
  4500d8:	mov    dh,0x8f
  4500da:	add    cl,ch
  4500dc:	mov    dh,0x8f
  4500de:	add    cl,ch
	...
  4500f4:	mov    dh,0x8f
  4500f6:	add    cl,ch
  4500f8:	mov    dh,0x8f
  4500fa:	add    cl,ch
  4500fc:	mov    dh,0x8f
  4500fe:	add    cl,ch
  450100:	mov    dh,0x8f
  450102:	add    cl,ch
  450104:	mov    dh,0x8f
  450106:	add    cl,ch
  450108:	mov    dh,0x8f
  45010a:	add    cl,ch
  45010c:	mov    dh,0x8f
  45010e:	add    cl,ch
  450110:	mov    dh,0x8f
  450112:	add    cl,ch
  450114:	mov    dh,0x8f
  450116:	add    cl,ch
  450118:	mov    dh,0x8f
  45011a:	add    cl,ch
  45011c:	mov    dh,0x8f
  45011e:	add    cl,ch
  450120:	mov    dh,0x8f
  450122:	add    cl,ch
  450124:	mov    dh,0x8f
  450126:	add    cl,ch
  450128:	mov    dh,0x8f
  45012a:	add    cl,ch
  45012c:	mov    dh,0x8f
  45012e:	add    cl,ch
  450130:	mov    dh,0x8f
  450132:	add    cl,ch
  450134:	mov    dh,0x8f
  450136:	add    cl,ch
  450138:	mov    dh,0x8f
  45013a:	add    cl,ch
  45013c:	mov    dh,0x8f
  45013e:	add    cl,ch
  450140:	mov    dh,0x8f
  450142:	add    cl,ch
  450144:	mov    dh,0x8f
  450146:	add    cl,ch
  450148:	mov    dh,0x8f
  45014a:	add    BYTE PTR [eax],al
  45014c:	sbb    al,0x92
  45014e:	add    BYTE PTR [eax],al
  450150:	or     al,0x92
  450152:	add    BYTE PTR [eax],al
  450154:	or     al,0x92
	...
  45016a:	add    BYTE PTR [eax],al
  45016c:	fcom   QWORD PTR [ecx-0x6e240000]
  450172:	add    BYTE PTR [eax],al
  450174:	int3   
  450175:	xchg   ecx,eax
  450176:	add    BYTE PTR [eax],al
  450178:	int3   
  450179:	xchg   ecx,eax
  45017a:	add    BYTE PTR [eax],al
  45017c:	fcom   QWORD PTR [ecx-0x6e240000]
  450182:	add    BYTE PTR [eax],al
  450184:	int3   
  450185:	xchg   ecx,eax
  450186:	add    BYTE PTR [eax],al
  450188:	int3   
  450189:	xchg   ecx,eax
  45018a:	add    BYTE PTR [eax],al
  45018c:	pushf  
  45018d:	xchg   ecx,eax
  45018e:	add    BYTE PTR [eax],al
  450190:	pushf  
  450191:	xchg   ecx,eax
  450192:	add    BYTE PTR [eax],al
  450194:	mov    WORD PTR [ecx-0x6e740000],ss
  45019a:	add    BYTE PTR [eax],al
  45019c:	pushf  
  45019d:	xchg   ecx,eax
  45019e:	add    BYTE PTR [eax],al
  4501a0:	pushf  
  4501a1:	xchg   ecx,eax
  4501a2:	add    BYTE PTR [eax],al
  4501a4:	mov    WORD PTR [ecx-0x6e740000],ss
  4501aa:	add    BYTE PTR [eax],al
  4501ac:	pop    esp
  4501ad:	xchg   ecx,eax
  4501ae:	add    BYTE PTR [eax],al
  4501b0:	pop    esp
  4501b1:	xchg   ecx,eax
  4501b2:	add    BYTE PTR [eax],al
  4501b4:	dec    esp
  4501b5:	xchg   ecx,eax
  4501b6:	add    BYTE PTR [eax],al
  4501b8:	dec    esp
  4501b9:	xchg   ecx,eax
  4501ba:	add    BYTE PTR [eax],al
  4501bc:	pop    esp
  4501bd:	xchg   ecx,eax
  4501be:	add    BYTE PTR [eax],al
  4501c0:	pop    esp
  4501c1:	xchg   ecx,eax
  4501c2:	add    BYTE PTR [eax],al
  4501c4:	dec    esp
  4501c5:	xchg   ecx,eax
  4501c6:	add    BYTE PTR [eax],al
  4501c8:	dec    esp
  4501c9:	xchg   ecx,eax
  4501ca:	add    BYTE PTR [eax],al
  4501cc:	sbb    al,0x91
	...
  4501e2:	add    BYTE PTR [eax],al
  4501e4:	sbb    al,0x91
  4501e6:	add    BYTE PTR [eax],al
  4501e8:	or     al,0x91
  4501ea:	add    BYTE PTR [eax],al
  4501ec:	mov    ch,0xa6
  4501ee:	add    eax,DWORD PTR [eax]
  4501f0:	mov    ch,0xa6
  4501f2:	add    eax,DWORD PTR [eax]
  4501f4:	mov    ch,0xa6
  4501f6:	add    eax,DWORD PTR [eax]
  4501f8:	mov    ch,0xa6
  4501fa:	add    eax,DWORD PTR [eax]
  4501fc:	mov    ch,0xa6
  4501fe:	add    eax,DWORD PTR [eax]
  450200:	mov    ch,0xa6
  450202:	add    eax,DWORD PTR [eax]
  450204:	mov    ch,0xa6
  450206:	add    eax,DWORD PTR [eax]
  450208:	mov    ch,0xa6
  45020a:	add    eax,DWORD PTR [eax]
  45020c:	mov    ch,0xa6
  45020e:	add    eax,DWORD PTR [eax]
  450210:	mov    ch,0xa6
  450212:	add    eax,DWORD PTR [eax]
  450214:	mov    ch,0xa6
  450216:	add    eax,DWORD PTR [eax]
  450218:	mov    ch,0xa6
  45021a:	add    eax,DWORD PTR [eax]
  45021c:	mov    ch,0xa6
  45021e:	add    eax,DWORD PTR [eax]
  450220:	mov    ch,0xa6
  450222:	add    eax,DWORD PTR [eax]
  450224:	mov    ch,0xa6
  450226:	add    eax,DWORD PTR [eax]
  450228:	mov    ch,0xa6
  45022a:	add    eax,DWORD PTR [eax]
  45022c:	mov    ch,0xa6
  45022e:	add    eax,DWORD PTR [eax]
  450230:	mov    ch,0xa6
  450232:	add    eax,DWORD PTR [eax]
  450234:	mov    ch,0xa6
  450236:	add    eax,DWORD PTR [eax]
  450238:	mov    ch,0xa6
  45023a:	add    eax,DWORD PTR [eax]
  45023c:	mov    ch,0xa6
  45023e:	add    eax,DWORD PTR [eax]
  450240:	mov    ch,0xa6
  450242:	add    eax,DWORD PTR [eax]
  450244:	mov    ch,0xa6
  450246:	add    eax,DWORD PTR [eax]
	...
  45025c:	mov    ch,0xa6
  45025e:	add    eax,DWORD PTR [eax]
  450260:	mov    ch,0xa6
  450262:	add    eax,DWORD PTR [eax]
  450264:	mov    ch,0xa6
  450266:	add    eax,DWORD PTR [eax]
  450268:	mov    ch,0xa6
  45026a:	add    eax,DWORD PTR [eax]
  45026c:	mov    ch,0xa6
  45026e:	add    eax,DWORD PTR [eax]
  450270:	mov    ch,0xa6
  450272:	add    eax,DWORD PTR [eax]
  450274:	mov    ch,0xa6
  450276:	add    eax,DWORD PTR [eax]
  450278:	mov    ch,0x8f
  45027a:	jmp    0xe9d4b782
  45027f:	add    esi,DWORD PTR [ebp-0x4afc1671]
  450285:	(bad)
  450289:	(bad)
  45028d:	(bad)
  450291:	(bad)
  450295:	(bad)
  450299:	(bad)
  45029d:	(bad)
  4502a1:	(bad)
  4502a5:	(bad)
  4502a9:	(bad)
  4502ad:	(bad)
  4502b1:	(bad)
  4502b5:	(bad)
  4502b9:	(bad)
  4502bd:	(bad)
	...
  4502d1:	add    BYTE PTR [eax],al
  4502d3:	add    BYTE PTR [ebp-0x4afc1671],dh
  4502d9:	(bad)
  4502dd:	(bad)
  4502e1:	(bad)
  4502e5:	(bad)
  4502e9:	(bad)
  4502ed:	(bad)
  4502f1:	(bad)
  4502f5:	(bad)
  4502f9:	(bad)
  4502fd:	(bad)
  450301:	(bad)
  450305:	pop    DWORD PTR [eax]
  450307:	jmp    0xe94592c2
  45030c:	mov    dh,0x8f
  45030e:	add    cl,ch
  450310:	mov    dh,0x8f
  450312:	add    cl,ch
  450314:	mov    dh,0x8f
  450316:	add    cl,ch
  450318:	mov    dh,0x8f
  45031a:	add    cl,ch
  45031c:	mov    dh,0x8f
  45031e:	add    cl,ch
  450320:	mov    dh,0x8f
  450322:	add    cl,ch
  450324:	mov    dh,0x8f
  450326:	add    cl,ch
  450328:	mov    dh,0x8f
  45032a:	add    cl,ch
  45032c:	mov    dh,0x8f
  45032e:	add    cl,ch
  450330:	mov    dh,0x8f
  450332:	add    cl,ch
  450334:	mov    dh,0x8f
  450336:	add    cl,ch
	...
  45034c:	mov    dh,0x8f
  45034e:	add    cl,ch
  450350:	mov    dh,0x8f
  450352:	add    cl,ch
  450354:	mov    dh,0x8f
  450356:	add    cl,ch
  450358:	mov    dh,0x8f
  45035a:	add    cl,ch
  45035c:	mov    dh,0x8f
  45035e:	add    cl,ch
  450360:	mov    dh,0x8f
  450362:	add    cl,ch
  450364:	mov    dh,0x8f
  450366:	add    cl,ch
  450368:	mov    dh,0x8f
  45036a:	add    cl,ch
  45036c:	mov    dh,0x8f
  45036e:	add    cl,ch
  450370:	mov    dh,0x8f
  450372:	add    cl,ch
  450374:	mov    dh,0x8f
  450376:	add    cl,ch
  450378:	mov    dh,0x8f
  45037a:	add    cl,ch
  45037c:	mov    dh,0x8f
  45037e:	add    cl,ch
  450380:	mov    dh,0x8f
  450382:	add    cl,ch
  450384:	mov    dh,0x8f
  450386:	add    cl,ch
  450388:	mov    dh,0x8f
  45038a:	add    cl,ch
  45038c:	mov    dh,0x8f
  45038e:	add    cl,ch
  450390:	mov    dh,0x8f
  450392:	add    BYTE PTR [eax],al
  450394:	dec    esp
  450395:	mov    es,WORD PTR [eax]
  450397:	add    BYTE PTR [esi+ecx*4+0x0],cl
  45039b:	add    BYTE PTR [esi+ecx*4],bl
  45039e:	add    BYTE PTR [eax],al
  4503a0:	sbb    al,0x8e
  4503a2:	add    BYTE PTR [eax],al
  4503a4:	or     al,0x8e
  4503a6:	add    BYTE PTR [eax],al
  4503a8:	or     al,0x8e
  4503aa:	add    BYTE PTR [eax],al
  4503ac:	sbb    al,0x8e
	...
  4503c2:	add    BYTE PTR [eax],al
  4503c4:	sbb    al,0x8e
  4503c6:	add    BYTE PTR [eax],al
  4503c8:	or     al,0x8e
  4503ca:	add    BYTE PTR [eax],al
  4503cc:	or     al,0x8e
  4503ce:	add    BYTE PTR [eax],al
  4503d0:	fmul   QWORD PTR [ebp-0x72240000]
  4503d6:	add    BYTE PTR [eax],al
  4503d8:	int3   
  4503d9:	lea    eax,[eax]
  4503db:	add    ah,cl
  4503dd:	lea    eax,[eax]
  4503df:	add    ah,bl
  4503e1:	lea    eax,[eax]
  4503e3:	add    ah,bl
  4503e5:	lea    eax,[eax]
  4503e7:	add    ah,cl
  4503e9:	lea    eax,[eax]
  4503eb:	add    ah,cl
  4503ed:	lea    eax,[eax]
  4503ef:	add    BYTE PTR [ebp+ecx*4-0x72640000],bl
  4503f6:	add    BYTE PTR [eax],al
  4503f8:	mov    WORD PTR [ebp-0x72740000],cs
  4503fe:	add    BYTE PTR [eax],al
  450400:	pushf  
  450401:	lea    eax,[eax]
  450403:	add    BYTE PTR [ebp+ecx*4-0x72740000],bl
  45040a:	add    BYTE PTR [eax],al
  45040c:	mov    WORD PTR [ebp-0x72a40000],cs
  450412:	add    BYTE PTR [eax],al
  450414:	pop    esp
  450415:	lea    eax,[eax]
  450417:	add    BYTE PTR [ebp+ecx*4+0x0],cl
  45041b:	add    BYTE PTR [ebp+ecx*4+0x0],cl
  45041f:	add    BYTE PTR [ebp-0x4afffc5a],dh
  450425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450426:	add    eax,DWORD PTR [eax]
	...
  45043c:	mov    ch,0xa6
  45043e:	add    eax,DWORD PTR [eax]
  450440:	mov    ch,0xa6
  450442:	add    eax,DWORD PTR [eax]
  450444:	mov    ch,0xa6
  450446:	add    eax,DWORD PTR [eax]
  450448:	mov    ch,0xa6
  45044a:	add    eax,DWORD PTR [eax]
  45044c:	mov    ch,0xa6
  45044e:	add    eax,DWORD PTR [eax]
  450450:	mov    ch,0xa6
  450452:	add    eax,DWORD PTR [eax]
  450454:	mov    ch,0xa6
  450456:	add    eax,DWORD PTR [eax]
  450458:	mov    ch,0xa6
  45045a:	add    eax,DWORD PTR [eax]
  45045c:	mov    ch,0xa6
  45045e:	add    eax,DWORD PTR [eax]
  450460:	mov    ch,0xa6
  450462:	add    eax,DWORD PTR [eax]
  450464:	mov    ch,0xa6
  450466:	add    eax,DWORD PTR [eax]
  450468:	mov    ch,0xa6
  45046a:	add    eax,DWORD PTR [eax]
  45046c:	mov    ch,0xa6
  45046e:	add    eax,DWORD PTR [eax]
  450470:	mov    ch,0xa6
  450472:	add    eax,DWORD PTR [eax]
  450474:	mov    ch,0x24
  450476:	aas    
  450477:	and    BYTE PTR gs:[edx+0x3f],ah
  45047b:	jbe    0x4504f7
  45047d:	(bad)  
  45047e:	pop    ss
  45047f:	jae    0x4504a1
  450481:	jnp    0x45044d
  450483:	lods   al,BYTE PTR ds:[esi]
  450484:	mov    BYTE PTR [ebp+0x5ed30df8],ah
  45048a:	fisttp DWORD PTR [eax+0x5f]
  45048d:	cmp    BYTE PTR [ebx+0x59],0xfc
  450491:	sub    eax,0xb08b0270
  450496:	out    dx,al
  450497:	sub    al,BYTE PTR [edx-0x4f]
  45049a:	mov    al,0xef
  45049c:	push   eax
  45049d:	xchg   edi,eax
  45049e:	cdq    
  45049f:	mov    bh,0x0
	...
  4504b1:	add    BYTE PTR [eax],al
  4504b3:	add    BYTE PTR [esi+0x4881fec2],dh
  4504b9:	mov    al,0x13
  4504bb:	out    dx,al
  4504bc:	std    
  4504bd:	pop    edx
  4504be:	xor    BYTE PTR [eax-0x3cd37071],dh
  4504c4:	jne    0x4504c6
  4504c6:	hlt    
  4504c7:	loopne 0x450459
  4504c9:	adc    dh,ch
  4504cb:	add    BYTE PTR [eax+eax*4-0x6f],dl
  4504cf:	div    cl
  4504d1:	iret   
  4504d2:	sti    
  4504d3:	mov    al,ds:0x38972165
  4504d8:	ja     0x45047d
  4504da:	enter  0x93ec,0x10
  4504de:	inc    edx
  4504df:	add    eax,0x10f86dba
  4504e4:	jp     0x4504c8
  4504e6:	retf   0xca01
  4504e9:	sub    BYTE PTR [eax],ch
  4504eb:	mov    bh,0xb2
  4504ed:	dec    edx
  4504ee:	push   0x7b
  4504f0:	mov    cl,BYTE PTR [esi]
  4504f2:	dec    esi
  4504f3:	pushf  
  4504f4:	sbb    DWORD PTR [ebx],ecx
  4504f6:	pop    edi
  4504f7:	das    
  4504f8:	lahf   
  4504f9:	pop    ds
  4504fa:	pop    edx
  4504fb:	repnz push 0xb250d7a7
  450501:	cmp    BYTE PTR [esi],0xa7
  450504:	bound  ecx,QWORD PTR [bp-0x2df9]
  450509:	xor    ch,BYTE PTR [edx+0x185918e4]
  45050f:	push   ecx
  450510:	cli    
  450511:	out    dx,eax
  450512:	mov    ch,0x9c
  450514:	or     DWORD PTR [ebp+0xbc8b],esp
	...
  45052a:	add    BYTE PTR [eax],al
  45052c:	(bad)  
  45052d:	pushf  
  45052e:	lods   eax,DWORD PTR cs:[esi]
  450530:	repnz xor al,0x58
  450533:	pushf  
  450534:	in     eax,0x4
  450536:	jno    0x4504c8
  450538:	aaa    
  450539:	dec    edx
  45053a:	jae    0x45052a
  45053c:	xor    ch,BYTE PTR [ecx-0x1488b8cc]
  450542:	mov    ds:0x8d2eb472,eax
  450547:	mov    al,0xab
  450549:	and    al,0x5e
  45054b:	xchg   edx,eax
  45054c:	xor    bl,BYTE PTR [eax+0x0]
  45054f:	cwde   
  450550:	scas   al,BYTE PTR es:[edi]
  450551:	or     eax,0x9ca203b8
  450556:	mov    dh,0x23
  450558:	dec    edx
  450559:	lds    edi,FWORD PTR [edi+edx*2]
  45055c:	test   BYTE PTR [ebp+0x33],bh
  45055f:	rol    BYTE PTR [edx],1
  450561:	mov    eax,ds:0x795ec0f1
  450566:	xlat   BYTE PTR ds:[ebx]
  450567:	push   0x8081923a
  45056c:	mov    eax,ds:0x62ee6cd7
  450571:	jnp    0x4505c2
  450573:	or     bl,BYTE PTR [ebx-0x64376adc]
  450579:	dec    ebx
  45057a:	rcl    eax,1
  45057c:	int    0x7
  45057e:	je     0x45058d
  450580:	adc    DWORD PTR [eax+esi*4+0x11],0xffffffde
  450585:	add    al,0x9b
  450587:	in     eax,dx
  450588:	mov    eax,ds:0xb5b64d43
  45058d:	xor    eax,0xb3f
	...
  4505a2:	add    BYTE PTR [eax],al
  4505a4:	pop    esp
  4505a5:	sub    bl,BYTE PTR [ecx]
  4505a7:	pop    ds
  4505a8:	mov    ebp,0x1f09cab6
  4505ad:	call   0x8c558572
  4505b2:	push   ss
  4505b3:	sbb    edx,DWORD PTR [ecx]
  4505b5:	ins    BYTE PTR es:[edi],dx
  4505b6:	xor    al,0x25
  4505b8:	inc    edi
  4505b9:	sbb    BYTE PTR [ecx+0x51],dh
  4505bc:	inc    esp
  4505bd:	or     eax,0xc8049182
  4505c2:	loopne 0x4505dd
  4505c4:	das    
  4505c5:	in     eax,0x80
  4505c7:	or     ah,bh
  4505c9:	cli    
  4505ca:	icebp  
  4505cb:	jle    0x4505a2
  4505cd:	cdq    
  4505ce:	in     eax,0xcb
  4505d0:	and    BYTE PTR [eax-0x35bee47e],dh
  4505d6:	sysexit 
  4505d8:	out    0x6a,al
  4505da:	nop
  4505db:	add    BYTE PTR [ebp+ecx*2-0x13],bh
  4505df:	xchg   edi,eax
  4505e0:	xor    esi,DWORD PTR [ecx+0x7f541563]
  4505e6:	and    ch,cl
  4505e8:	mov    al,ds:0xe517dd46
  4505ed:	imul   edi,DWORD PTR [edi+0x4],0xfffffffc
  4505f1:	lds    eax,FWORD PTR [edx-0x5]
  4505f4:	outs   dx,BYTE PTR ds:[esi]
  4505f5:	shl    DWORD PTR [edx+0x57ce738e],0x86
  4505fc:	cmp    BYTE PTR [ebx],cl
  4505fe:	xor    bh,BYTE PTR [edx-0x7d]
  450601:	jge    0x450633
  450603:	mov    dl,0x95
  450605:	jecxz  0x4505a1
  450607:	add    DWORD PTR [eax],0x0
	...
  45061a:	add    BYTE PTR [eax],al
  45061c:	mov    bl,0xfc
  45061e:	aad    0xe
  450620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450621:	imul   ecx,DWORD PTR [eax+0x59],0x60
  450625:	sbb    eax,0x63026aa
  45062a:	jmp    0xe287aa57
  45062f:	pop    esi
  450630:	mov    DWORD PTR ds:0x147c028d,0x7ad9b0f1
  45063a:	ror    DWORD PTR [ecx-0x54],1
  45063d:	add    DWORD PTR [esp+eiz*8],edi
  450640:	ret    0x4801
  450643:	cmc    
  450644:	pop    ecx
  450645:	(bad)  [edx]
  450647:	ins    DWORD PTR es:[edi],dx
  450648:	js     0x4506be
  45064a:	adc    DWORD PTR [esi+0x1a],eax
  45064d:	ja     0x4505fd
  45064f:	test   BYTE PTR [eax],bl
  450651:	add    bl,BYTE PTR [eax-0x7ead4a1f]
  450657:	ret    0x2b00
  45065a:	inc    edi
  45065b:	sub    edx,DWORD PTR [ecx+0x3c3a9f3b]
  450661:	mul    BYTE PTR [eax+0xa37e776]
  450667:	imul   esi,DWORD PTR [ebp-0x670a1c77],0x17
  45066e:	(bad)  
  45066f:	and    ebx,edi
  450671:	push   ebx
  450672:	inc    ebp
  450673:	nop
  450674:	xor    DWORD PTR [ebx+0x77f70346],0xda7c3162
  45067e:	xchg   ebx,eax
  45067f:	stc    
	...
  450694:	pop    esp
  450695:	je     0x450645
  450697:	inc    esp
  450698:	into   
  450699:	push   es
  45069a:	and    ebx,esi
  45069c:	push   edx
  45069d:	and    al,0xe
  45069f:	test   BYTE PTR [ecx-0x32ab3c15],cl
  4506a5:	pop    ebp
  4506a6:	or     eax,0xaa5282b9
  4506ab:	sub    BYTE PTR [edi+0x30993a31],al
  4506b1:	mov    ds:0xe7fd2403,al
  4506b6:	or     eax,0x5cff586
  4506bb:	sti    
  4506bc:	mov    esi,0xc70a116c
  4506c1:	mov    bl,0x83
  4506c3:	pop    ss
  4506c4:	inc    eax
  4506c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4506c6:	dec    ecx
  4506c7:	dec    edx
  4506c8:	call   0x811fe279
  4506cd:	lahf   
  4506ce:	outs   dx,BYTE PTR ds:[esi]
  4506cf:	or     esi,DWORD PTR [esi+eiz*1]
  4506d2:	cmp    BYTE PTR [edx+0xbd22f98],ah
  4506d8:	mov    edx,0x235ae00
  4506dd:	(bad)  
  4506de:	(bad)  
  4506df:	int3   
  4506e0:	icebp  
  4506e1:	ret    
  4506e2:	(bad)  
  4506e3:	int3   
  4506e4:	jmp    0x8211cbac
  4506e9:	ret    
  4506ea:	(bad)  
  4506eb:	int3   
  4506ec:	add    BYTE PTR [ecx],cl
  4506ee:	in     eax,0x51
  4506f0:	cs dec edx
  4506f2:	or     BYTE PTR [edx-0xb9f853],cl
	...
  45070c:	ds stos BYTE PTR es:[edi],al
  45070e:	push   ebp
  45070f:	ret    
  450710:	loopne 0x45071a
  450712:	in     eax,0x51
  450714:	jmp    0x450752
  450716:	xor    ecx,ecx
  450718:	adc    DWORD PTR [ecx],ecx
  45071a:	jb     0x45074c
  45071c:	ds sbb eax,0x73e38b04
  450722:	mov    eax,DWORD PTR [esi-0x53]
  450725:	push   es
  450726:	ds cld 
  450728:	cs adc eax,0xf8b8b20
  45072e:	cmp    BYTE PTR [ebx-0x3f],ch
  450731:	mov    WORD PTR [eax+0x21bee3f],es
  450737:	jmp    0x450785
  450739:	xor    al,0x56
  45073b:	mov    ebx,DWORD PTR [eax]
  45073d:	xor    al,bl
  45073f:	int3   
  450740:	or     BYTE PTR [eax],0xe5
  450743:	adc    DWORD PTR [ecx],0x6b
  450746:	mov    eax,DWORD PTR [ebp-0x53]
  450749:	push   es
  45074a:	ds loopne 0x45078b
  45074d:	inc    edx
  45074e:	loopne 0x4506db
  450750:	pusha  
  450751:	scas   eax,DWORD PTR es:[edi]
  450752:	add    edx,DWORD PTR [ecx-0x3f]
  450755:	push   es
  450756:	dec    esi
  450757:	in     al,0x2e
  450759:	dec    edx
  45075a:	fmul   QWORD PTR [ebx+0x4d03177d]
  450760:	mov    ebp,0x2ef84606
  450765:	cmp    bh,al
  450767:	mov    esi,DWORD PTR [edi+0x6b]
  45076a:	add    eax,DWORD PTR [ebp-0x43]
  45076d:	push   es
  45076e:	ds call 0x450774
	...
  450784:	ds inc edx
  450786:	clc    
  450787:	mov    esp,DWORD PTR [edi+ebp*2+0x3]
  45078b:	push   ebp
  45078c:	lods   eax,DWORD PTR ds:[esi]
  45078d:	push   es
  45078e:	dec    esi
  45078f:	lock ds dec ebp
  450792:	clc    
  450793:	mov    edi,ebp
  450795:	jae    0x45079a
  450797:	dec    ebp
  450798:	lods   eax,DWORD PTR ds:[esi]
  450799:	or     BYTE PTR [esi-0x4],al
  45079c:	jb     0x4507eb
  45079e:	in     al,dx
  45079f:	add    BYTE PTR [ebp-0x4314ff71],dh
  4507a5:	push   es
  4507a6:	dec    esi
  4507a7:	hlt    
  4507a8:	ss into 
  4507aa:	add    DWORD PTR [ecx+0x458b9be0],ecx
  4507b0:	ins    DWORD PTR es:[edi],dx
  4507b1:	pop    es
  4507b2:	inc    esi
  4507b3:	hlt    
  4507b4:	scas   al,BYTE PTR es:[edi]
  4507b5:	inc    edi
  4507b6:	sbb    BYTE PTR [ebx-0x13],dh
  4507b9:	push   es
  4507ba:	dec    esi
  4507bb:	lock mov es,WORD PTR cs:[ebx]
  4507bf:	inc    ebp
  4507c0:	mov    ebp,0xdfdc3e08
  4507c5:	sub    DWORD PTR [eax-0x54],0x8b004fb6
  4507cc:	call   0x862d5984
  4507d1:	nop
  4507d2:	add    BYTE PTR [eax],al
  4507d4:	ss int3 
  4507d6:	add    al,0x85
  4507d8:	cmc    
  4507d9:	sbb    al,0x1b
  4507db:	mov    eax,DWORD PTR [eax+0x1d458b9b]
  4507e1:	sub    DWORD PTR [edi+0x4608650c],0xffffffec
	...
  4507fc:	cs cmp eax,0x93708be4
  450802:	mov    eax,DWORD PTR [eax*2-0x21f7c271]
  450809:	test   BYTE PTR [ebx-0x3df11ab3],cl
  45080f:	add    al,0x2c
  450811:	inc    ebp
  450812:	lock jmp 0x45082e
  450815:	pop    edi
  450816:	ror    BYTE PTR [ebx-0x333ccb30],0xf1
  45081d:	ret    
  45081e:	(bad)  
  45081f:	int3   
  450820:	jmp    0x8211cce8
  450825:	ret    
  450826:	(bad)  
  450827:	int3   
  450828:	add    BYTE PTR [edi],al
  45082a:	in     eax,0x83
  45082c:	xchg   ecx,eax
  45082d:	ja     0x450817
  45082f:	add    eax,0x89f7929a
  450834:	clc    
  450835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  450836:	mov    eax,DWORD PTR [ebp-0x63]
  450839:	aas    
  45083a:	call   0xf7d78a68
  45083f:	xor    DWORD PTR [ecx-0x75],0xffffffa3
  450843:	push   esp
  450844:	jno    0x450894
  450846:	add    BYTE PTR [eax+0x29],ch
  450849:	mov    es,WORD PTR [eax+0x0]
  45084c:	cs inc esp
  45084e:	call   0x4cc162a4
  450853:	cld    
  450854:	test   BYTE PTR [edi+0x4e4958a3],0x0
  45085b:	push   0xffffffb5
  45085d:	and    eax,0x6800
	...
  450872:	add    BYTE PTR [eax],al
  450874:	imul   ecx,DWORD PTR [esi+0x7c320040],0x8f76fc58
  45087e:	mov    DWORD PTR [ebp+0xd],eax
  450881:	retf   0xfc3d
  450884:	mov    ch,0x8f
  450886:	add    BYTE PTR [eax],al
  450888:	push   ds
  450889:	mov    BYTE PTR [ebx-0x3cf1f6ab],cl
  45088f:	add    DWORD PTR [esp+edi*1],ebp
  450892:	hlt    
  450893:	cmp    DWORD PTR [eax-0x6d],0x8
  450897:	jae    0x45082d
  450899:	push   es
  45089a:	ds cld 
  45089c:	cmp    DWORD PTR ds:[ebp-0x74],0xffffffb6
  4508a1:	dec    edi
  4508a2:	add    BYTE PTR [ecx+0x2e],dl
  4508a5:	cmp    al,0xe8
  4508a7:	push   edx
  4508a8:	sar    BYTE PTR [ebx+0x4c],cl
  4508ab:	cld    
  4508ac:	jbe    0x45083d
  4508ae:	mov    ecx,DWORD PTR [ebp-0x3f]
  4508b1:	pop    es
  4508b2:	std    
  4508b3:	mov    WORD PTR [ecx-0x6d],fs
  4508b6:	inc    ebx
  4508b7:	add    BYTE PTR [esi+0x8e58bc0],bl
  4508bd:	int    0xc4
  4508bf:	int3   
  4508c0:	jno    0x450886
  4508c2:	(bad)  
  4508c3:	int3   
  4508c4:	imul   eax,esp,0xc481ccc4
  4508ca:	(bad)  
  4508cb:	int3   
  4508cc:	loopne 0x4508d2
  4508ce:	in     eax,0xa1
  4508d0:	inc    ebp
  4508d1:	xchg   esp,eax
  4508d2:	inc    ebx
  4508d3:	add    BYTE PTR [ebx+0x304104],bh
	...
  4508e9:	add    BYTE PTR [eax],al
  4508eb:	add    BYTE PTR [esi],bh
  4508ed:	inc    ebx
  4508ee:	or     BYTE PTR [esi],bh
  4508f0:	cmp    al,0x48
  4508f2:	or     BYTE PTR [ebp+0x76],bl
  4508f5:	(bad)  
  4508f6:	(bad)  
  4508f7:	int3   
  4508f8:	imul   eax,esp,0xc481ccc4
  4508fe:	(bad)  
  4508ff:	int3   
  450900:	loopne 0x450906
  450902:	in     eax,0x8b
  450904:	clc    
  450905:	adc    DWORD PTR [eax-0x75],0xffffffe8
  450909:	xchg   DWORD PTR [ecx-0x1],edx
  45090c:	enter  0xf43b,0x43
  450910:	mov    ch,0x32
  450912:	ret    
  450913:	int3   
  450914:	icebp  
  450915:	ret    
  450916:	(bad)  
  450917:	int3   
  450918:	jmp    0x211cde0
  45091d:	(bad)  
  45091e:	(bad)  
  45091f:	int3   
  450920:	pusha  
  450921:	add    al,0xe5
  450923:	adc    DWORD PTR [ecx],0xffffff88
  450926:	push   0x0
  450928:	(bad)  
  450929:	vpmadcswd ymm9,ymm4,ymm7,YMMWORD PTR [edi+0x0]
  450930:	shl    BYTE PTR [edi],0xf4
  450933:	inc    ebx
  450934:	mov    ch,0x6
  450936:	ds clc 
  450938:	dec    ebp
  450939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  45093a:	add    eax,DWORD PTR [eax-0x4b]
  45093d:	add    al,0x3e
  45093f:	clc    
  450940:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  450942:	mov    edx,0x8390c2ff
  450947:	les    ebp,FWORD PTR [ebp+0x3efc3e06]
  45094d:	inc    edx
  45094e:	adc    BYTE PTR [ecx+0x0],dl
	...
  450961:	add    BYTE PTR [eax],al
  450963:	add    BYTE PTR [esi],bh
  450965:	cmp    al,BYTE PTR [edx+edx*2]
  450968:	cs dec edx
  45096a:	or     BYTE PTR [eax-0x66],dl
  45096d:	cmp    dh,ah
  45096f:	mov    ebx,DWORD PTR [eax-0x1f333cce]
  450975:	add    al,0xe5
  450977:	push   ecx
  450978:	jp     0x4509c4
  45097a:	hlt    
  45097b:	add    BYTE PTR [ebp-0x4314ff71],dh
  450981:	add    al,0x3e
  450983:	cld    
  450984:	ss iret 
  450986:	add    DWORD PTR [ecx+0x4d8b93f8],ecx
  45098c:	pop    ecx
  45098d:	push   esp
  45098e:	inc    ebp
  45098f:	adc    dh,al
  450991:	jo     0x45091e
  450993:	push   ebp
  450994:	mov    ebp,0xb2fc4d8c
  450999:	fld    DWORD PTR [edx]
  45099b:	mov    ebp,eax
  45099d:	add    DWORD PTR [ebx],0x4d
  4509a0:	xor    DWORD PTR [eax-0x3211ee52],eax
  4509a6:	ins    BYTE PTR es:[edi],dx
  4509a7:	pop    es
  4509a8:	pop    ebp
  4509a9:	mov    es,WORD PTR [eax]
  4509ab:	add    BYTE PTR [ebp-0x1a15035c],dh
  4509b1:	pop    ebx
  4509b2:	ror    BYTE PTR [ebx-0x333ccdf0],0xf1
  4509b9:	ret    0xccc4
  4509bc:	jmp    0x211ce83
  4509c1:	ret    
  4509c2:	(bad)  
  4509c3:	int3   
  4509c4:	add    BYTE PTR [eiz*8+0xb9],0x0
	...
  4509dc:	mov    ebp,0x5100008f
  4509e1:	add    al,0xa
  4509e3:	mov    eax,eax
  4509e5:	fcomip st,st(4)
  4509e7:	inc    ebx
  4509e8:	mov    ch,0x32
  4509ea:	ret    
  4509eb:	int3   
  4509ec:	icebp  
  4509ed:	ret    0xccc4
  4509f0:	jmp    0x8211ceb7
  4509f5:	pop    esp
  4509f6:	(bad)  
  4509f7:	int3   
  4509f8:	add    BYTE PTR [ebx],bl
  4509fa:	in     al,0x83
  4509fc:	xchg   ecx,eax
  4509fd:	mov    al,ds:0x12ad458b
  450a02:	js     0x450a08
  450a04:	mov    ch,0x9e
  450a06:	jl     0x450990
  450a08:	mov    ch,0x8f
  450a0a:	add    BYTE PTR [ebx+0x518b97f0],cl
  450a10:	mov    cl,0x12
  450a12:	jmp    0x6155:0x897a8408
  450a19:	sbb    edi,DWORD PTR ds:0x8503608
  450a1f:	mov    eax,esi
  450a21:	jg     0x4509e2
  450a23:	inc    ebp
  450a24:	push   ecx
  450a25:	nop
  450a26:	add    BYTE PTR [eax],al
  450a28:	mov    ch,0x7a
  450a2a:	or     DWORD PTR [ebx-0x3e7c7410],ecx
  450a30:	mov    ah,0x18
  450a32:	inc    ebp
  450a33:	cld    
  450a34:	ds in  eax,0xf4
  450a37:	cmp    eax,DWORD PTR [eax+0x2e467383]
  450a3d:	aad    0xf4
  450a3f:	mov    eax,DWORD PTR [eax]
	...
  450a51:	add    BYTE PTR [eax],al
  450a53:	add    BYTE PTR [eax+0x7f],ch
  450a56:	pop    es
  450a57:	mov    bh,0xa9
  450a59:	rol    cl,1
  450a5b:	cli    
  450a5c:	mov    ecx,0x8803fa12
  450a61:	ror    DWORD PTR [ebx+0x451af945],0xf0
  450a68:	ret    0xc46
  450a6b:	inc    ecx
  450a6c:	xor    al,0x72
  450a6e:	test   DWORD PTR [edi],0x55898fb5
  450a74:	fstp   QWORD PTR [edx]
  450a76:	cmp    eax,0x4dd3e08
  450a7b:	add    edi,DWORD PTR [ebp+0x2ef84d1a]
  450a81:	xchg   esp,eax
  450a82:	adc    DWORD PTR [ebx],eax
  450a84:	jo     0x450a25
  450a86:	mov    ecx,DWORD PTR [ebp-0x43]
  450a89:	sbb    cl,BYTE PTR [ebp+0xc]
  450a8c:	mov    dh,0xa0
  450a8e:	mov    ecx,DWORD PTR [ebp-0x63]
  450a91:	sbb    ah,bh
  450a93:	or     DWORD PTR [esi-0x42aa74c8],ecx
  450a99:	sbb    bh,BYTE PTR ds:0xfcd1b608
  450a9f:	mov    al,bh
  450aa1:	xchg   edi,eax
  450aa2:	jmp    0xf7d38512
  450aa7:	mov    ebx,DWORD PTR [eax-0x14]
  450aaa:	ret    
  450aab:	int3   
  450aac:	add    BYTE PTR [ebx],bl
  450aae:	in     al,0x83
  450ab0:	push   ecx
  450ab1:	mov    bl,0x8b
  450ab3:	inc    ebp
  450ab4:	lods   eax,DWORD PTR ds:[esi]
  450ab5:	sbb    BYTE PTR ds:0xe4,bh
	...
  450acb:	add    BYTE PTR [esi],bh
  450acd:	(bad)  
  450acf:	mov    esp,eax
  450ad1:	jae    0x450ad6
  450ad3:	push   ecx
  450ad4:	sbb    DWORD PTR [eax],0xd42ee84d
  450ada:	call   0x54486a
  450adf:	add    BYTE PTR [ebp+0x36f04518],dh
  450ae5:	or     al,0xf1
  450ae7:	add    BYTE PTR [edx-0x4aff04ed],ch
  450aed:	(bad)  
  450aee:	mov    edx,DWORD PTR [ebp-0x43]
  450af1:	xchg   edx,eax
  450af2:	dec    ebp
  450af3:	lock sub al,0xe4
  450af6:	loopne 0x450a83
  450af8:	jo     0x450b69
  450afa:	cmp    DWORD PTR [eax-0x3b],0xffffff8f
  450afe:	pop    es
  450aff:	test   al,dl
  450b01:	mov    es,WORD PTR [eax]
  450b03:	add    BYTE PTR [edi-0x71],cl
  450b06:	push   0x0
  450b08:	cs fsubr st(0),st
  450b0b:	mov    ebp,DWORD PTR [eax-0x69]
  450b0e:	add    edx,DWORD PTR [ecx-0x47]
  450b11:	loope  0x450b0a
  450b13:	adc    eax,0x438b5d
  450b18:	sub    al,0xd4
  450b1a:	hlt    
  450b1b:	mov    edi,eax
  450b1d:	outs   dx,DWORD PTR ds:[esi]
  450b1e:	cmp    DWORD PTR [eax],0xffffffb5
  450b21:	add    ebx,DWORD PTR [edx]
  450b23:	mov    esi,eax
  450b25:	outs   dx,DWORD PTR ds:[esi]
  450b26:	mov    edx,DWORD PTR [ebp-0x53]
  450b29:	nop
  450b2a:	adc    DWORD PTR [ecx+0x458b83e8],ecx
	...
  450b44:	xchg   ebp,eax
  450b45:	sbb    DWORD PTR [ebp+0x8],eax
  450b48:	mov    dh,0xd7
  450b4a:	adc    BYTE PTR [ecx+0x17eb7be8],cl
  450b50:	ds jecxz 0x450b33
  450b53:	mov    esi,eax
  450b55:	xchg   edi,eax
  450b56:	add    eax,DWORD PTR [edx-0x3b]
  450b59:	push   ss
  450b5a:	cmp    eax,0xe0db2ef4
  450b5f:	mov    ebp,eax
  450b61:	xchg   edi,eax
  450b62:	add    edx,DWORD PTR [ecx]
  450b64:	cmp    al,0xe3
  450b66:	in     al,0xc7
  450b68:	clc    
  450b69:	xchg   DWORD PTR [eax],eax
  450b6b:	add    BYTE PTR [ebp+0x15458b8f],dh
  450b71:	adc    DWORD PTR [eax+0x10],edi
  450b74:	mov    ch,0x3
  450b76:	or     BYTE PTR [ebx+0x39836f70],cl
  450b7c:	mov    ch,0x3
  450b7e:	add    bh,al
  450b80:	js     0x450b09
  450b82:	add    DWORD PTR [eax],eax
  450b84:	mov    ch,0x8f
  450b86:	mov    edx,DWORD PTR [ebp+0x9]
  450b89:	adc    DWORD PTR [edx],edi
  450b8b:	add    BYTE PTR [ecx-0x16ba7412],al
  450b91:	sbb    BYTE PTR [eax],cl
  450b93:	adc    esp,0x3500008f
  450b99:	add    al,0x15
  450b9b:	mov    eax,DWORD PTR [eax-0x67fd747d]
  450ba1:	mov    edi,?
  450ba3:	dec    DWORD PTR [edx-0x21]
  450ba6:	mov    ecx,DWORD PTR [ebp+0x0]
	...
  450bb9:	add    BYTE PTR [eax],al
  450bbb:	add    cl,al
  450bbd:	fsubp  st(0),st
  450bbf:	mov    ch,0xb8
  450bc1:	mov    edi,?
  450bc3:	cmp    DWORD PTR [ecx-0x69],0xffffff89
  450bc7:	inc    ebp
  450bc8:	mov    DWORD PTR [eax+0x14],edi
  450bcb:	mov    ecx,DWORD PTR [eax]
  450bcd:	test   BYTE PTR [ebx+0x8da2e02],cl
  450bd3:	(bad)  
  450bd4:	jmp    0x3e970e70
  450bd9:	shl    ah,cl
  450bdb:	push   eax
  450bdc:	lea    esp,[esi*8-0x43ef8501]
  450be3:	or     BYTE PTR [edx+edx*8],bh
  450be6:	aam    0x8b
  450be8:	clc    
  450be9:	jnp    0x450b76
  450beb:	push   ebp
  450bec:	adc    DWORD PTR [esi],0x83f08b11
  450bf2:	add    eax,0xffffffb9
  450bf5:	push   ss
  450bf6:	cmp    eax,0xe4da3ef4
  450bfb:	xor    DWORD PTR [ebx+edx*4-0x77],0x4d
  450c00:	dec    ecx
  450c01:	js     0x450b92
  450c03:	mov    ecx,DWORD PTR [eax-0x3e3d7c91]
  450c09:	push   ss
  450c0a:	dec    ebp
  450c0b:	loopne 0x450c19
  450c0d:	popf   
  450c0e:	idiv   edi
  450c10:	sbb    bl,BYTE PTR [eax]
  450c12:	fstp   QWORD PTR [ebp-0xa]
  450c15:	pop    edx
  450c16:	(bad)  
  450c17:	int3   
  450c18:	pusha  
  450c19:	sbb    ah,ah
  450c1b:	adc    DWORD PTR [ecx],0xffffff97
  450c1e:	push   0xf0
	...
  450c33:	add    BYTE PTR [esi-0x3700ff31],dh
  450c39:	out    dx,eax
  450c3a:	hlt    
  450c3b:	inc    ebx
  450c3c:	mov    ch,0x16
  450c3e:	cmp    eax,0x38b4df8
  450c43:	inc    eax
  450c44:	mov    ch,0x18
  450c46:	cmp    eax,0x367765f8
  450c4b:	std    
  450c4c:	retf   0x838b
  450c4f:	les    ebp,FWORD PTR [ebp+0x2efc3d16]
  450c55:	ficom  DWORD PTR [eax]
  450c57:	push   ecx
  450c58:	ds in  eax,0x4
  450c5b:	push   edx
  450c5c:	ds aad 0x8
  450c5f:	push   eax
  450c60:	mov    ds:0x908bf4e5,al
  450c65:	in     eax,dx
  450c66:	ret    
  450c67:	int3   
  450c68:	sbb    DWORD PTR [esp+eax*8-0x34],0xa1e416e0
  450c70:	inc    ecx
  450c71:	mov    WORD PTR [ebx+0x0],es
  450c74:	jae    0x450c06
  450c76:	push   0xf443c88b
  450c7b:	inc    ebx
  450c7c:	mov    ch,0x18
  450c7e:	push   eax
  450c7f:	add    DWORD PTR [edi],esp
  450c81:	dec    edi
  450c82:	mov    BYTE PTR [eax-0x50],dl
  450c85:	in     al,dx
  450c86:	ret    
  450c87:	int3   
  450c88:	sbb    DWORD PTR [esp+eax*8-0x34],0x83e416e0
  450c90:	push   ecx
  450c91:	pushf  
  450c92:	mov    eax,ds:0xcf39b0
  450c97:	mov    eax,DWORD PTR [eax]
	...
  450ca9:	add    BYTE PTR [eax],al
  450cab:	add    BYTE PTR [edi],al
  450cad:	mov    edi,0xd03e3ec9
  450cb2:	xor    BYTE PTR [ebx+0x3ed21707],cl
  450cb8:	fadd   DWORD PTR cs:[ebx+ecx*4]
  450cbc:	out    0x18,eax
  450cbe:	inc    ebp
  450cbf:	hlt    
  450cc0:	ds aad 0xec
  450cc3:	mov    ebp,DWORD PTR [ebp-0x65]
  450cc6:	mov    DWORD PTR [ebp-0x3],ecx
  450cc9:	push   ss
  450cca:	dec    ebp
  450ccb:	clc    
  450ccc:	cmp    al,0xe5
  450cce:	hlt    
  450ccf:	mov    eax,0x8fb4
  450cd4:	cmp    BYTE PTR [eax+0x6c],dl
  450cd7:	inc    esp
  450cd8:	ss or  eax,0x934800f9
  450cde:	xor    eax,eax
  450ce0:	fmulp  st(3),st
  450ce2:	mov    ecx,DWORD PTR [ebp-0x43]
  450ce5:	push   ss
  450ce6:	push   ecx
  450ce7:	sbb    BYTE PTR [esi-0x1c],bh
  450cea:	or     BYTE PTR [ebp-0x34],dh
  450ced:	push   ss
  450cee:	cmp    eax,0x4dc3ef8
  450cf3:	mov    ebp,ebp
  450cf5:	stos   DWORD PTR es:[edi],eax
  450cf6:	mov    edx,DWORD PTR [ebp-0x63]
  450cf9:	push   ss
  450cfa:	cmp    eax,0x18cd3c10
  450cff:	mov    eax,0x8fb4
  450d04:	mov    fs,WORD PTR [edi+0x167d4d8b]
  450d0a:	adc    DWORD PTR [ecx+0x458b8808],ecx
	...
  450d24:	ins    DWORD PTR es:[edi],dx
  450d25:	(bad)  
  450d26:	cmp    eax,0x3393e8fc
  450d2b:	ror    BYTE PTR [esi-0x6d],0xeb
  450d2f:	mov    bl,0x86
  450d31:	dec    edi
  450d32:	mov    esp,ebp
  450d34:	call   0x7211d187
  450d39:	pop    ebx
  450d3a:	(bad)  
  450d3b:	int3   
  450d3c:	imul   ebx,DWORD PTR [ebx-0x3c],0xc45b01cc
  450d43:	int3   
  450d44:	adc    BYTE PTR [esi],0xe4
  450d47:	adc    DWORD PTR [ecx],0xffffffa7
  450d4a:	mov    edi,0x308f1d45
  450d4f:	add    BYTE PTR [ebp+0x7503fcf7],dh
  450d55:	(bad)  
  450d56:	mov    eax,ds:0xce019c
  450d5b:	push   eax
  450d5c:	or     eax,0xf2fff4de
  450d61:	or     eax,0xd43c08bc
  450d66:	in     al,dx
  450d67:	push   0x75
  450d69:	push   ss
  450d6a:	inc    ebp
  450d6b:	clc    
  450d6c:	test   BYTE PTR [esi],dl
  450d6e:	or     eax,0xcdd17c
  450d73:	mov    esi,DWORD PTR [edi-0x21]
  450d76:	push   eax
  450d77:	push   0xffffffb5
  450d79:	mov    cl,BYTE PTR [ebp-0xc]
  450d7c:	push   ss
  450d7d:	add    esi,ebp
  450d7f:	inc    ebx
  450d80:	mov    ch,0xc
  450d82:	xor    eax,0xcda974
	...
  450d9b:	add    BYTE PTR [eax],ch
  450d9d:	xchg   ecx,eax
  450d9e:	mov    eax,0x8fb502
  450da3:	jmp    0x450dc4
  450da5:	adc    eax,0xcfb60005
  450daa:	add    BYTE PTR [ecx+0x687ff0],cl
  450db0:	jg     0x450d3f
  450db2:	add    BYTE PTR [eax-0x4b],ch
  450db5:	mov    WORD PTR [eax+0x0],es
  450db8:	mov    ds:0x8ff6fc6c,eax
  450dbe:	add    edx,0x8cb5
  450dc4:	out    0x77,eax
  450dc6:	xchg   esi,eax
  450dc7:	dec    BYTE PTR [edx-0x77]
  450dca:	add    esp,0xffffffb1
  450dcd:	inc    edi
  450dce:	add    BYTE PTR [ebx],al
  450dd0:	cmc    
  450dd1:	(bad)  
  450dd2:	and    eax,0x8fb600
  450dd7:	mov    edi,DWORD PTR [eax-0x4abc0afd]
  450ddd:	mov    ah,0xc8
  450ddf:	mov    DWORD PTR [eax-0x4abc0bcd],ebp
  450de5:	adc    al,0xd
  450de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450de8:	or     ebp,ecx
  450dea:	add    BYTE PTR [edx+0x54],dl
  450ded:	add    al,0xf5
  450def:	inc    ebx
  450df0:	mov    ch,0xdf
  450df2:	mov    ecx,DWORD PTR [ebp-0x1b]
  450df5:	fsubp  st(0),st
  450df7:	popf   
  450df8:	jmp    0xf9c90585
  450dfd:	fwait
  450dfe:	mov    edx,DWORD PTR ds:0x0
	...
  450e14:	popa   
  450e15:	mov    eax,DWORD PTR [ebx+0x0]
  450e18:	mov    dh,0xe2
  450e1a:	or     BYTE PTR [ecx+0x558b7760],cl
  450e20:	int    0x88
  450e22:	loop   0x450daf
  450e24:	shr    dl,1
  450e26:	ret    
  450e27:	int3   
  450e28:	sbb    DWORD PTR [ebx-0x3c],0xe41500cc
  450e2f:	mov    edi,eax
  450e31:	xchg   edi,eax
  450e32:	cmp    eax,DWORD PTR [ebp-0x57]
  450e35:	cld    
  450e36:	dec    DWORD PTR [edx+0x5eb97f8]
  450e3c:	sahf   
  450e3d:	mov    WORD PTR [ebx-0x3c154ebb],cs
  450e43:	int3   
  450e44:	imul   ebx,DWORD PTR [ebx-0x3c],0xc45b81cc
  450e4b:	int3   
  450e4c:	add    BYTE PTR ds:0xbb5183e4,dl
  450e52:	mov    edi,0x208f5945
  450e57:	add    al,0xb5
  450e59:	adc    al,0x3d
  450e5b:	or     BYTE PTR [edx+edx*8],bh
  450e5e:	fmul   DWORD PTR [ebx+0x558b67f0]
  450e64:	lods   eax,DWORD PTR ds:[esi]
  450e65:	mov    WORD PTR [ecx+0x3c],ss
  450e68:	cmp    al,0xe2
  450e6a:	loopne 0x450df7
  450e6c:	jo     0x450edd
  450e6e:	pop    es
  450e6f:	mov    bh,0x6d
  450e71:	mov    ds:0x1a15558b,eax
  450e76:	cmp    al,0xa
	...
  450e8c:	lods   eax,DWORD PTR ds:[esi]
  450e8d:	push   ss
  450e8e:	cmp    eax,0xfca39de8
  450e93:	aas    
  450e94:	mov    ch,0x14
  450e96:	add    eax,0xcbf99c
  450e9b:	push   ecx
  450e9c:	fst    st(7)
  450e9e:	sti    
  450e9f:	(bad)  
  450ea0:	jmp    0xf0d2:0x2c08bc0b
  450ea7:	push   0x75
  450ea9:	test   DWORD PTR [eax],0x688fb530
  450eaf:	add    BYTE PTR [ebp-0x4a95ff6d],dl
  450eb5:	mov    BYTE PTR [ebp-0x10],cl
  450eb8:	sub    al,0xd2
  450eba:	fmul   QWORD PTR [ebx+0x428b7008]
  450ec0:	add    eax,esp
  450ec2:	mov    ecx,DWORD PTR [ebp-0x53]
  450ec5:	loopne 0x450e52
  450ec7:	push   ebp
  450ec8:	xchg   ecx,eax
  450ec9:	loop   0x450eb3
  450ecb:	rcl    DWORD PTR [eax+0x7183f787],0x94
  450ed2:	mov    edi,0x908945
  450ed7:	add    BYTE PTR [ebp-0x774f686],dh
  450edd:	jnp    0x450e62
  450edf:	shl    BYTE PTR [eax+ebx*1-0x2ad10bc3],0xe0
  450ee7:	mov    cr4,ecx
  450eea:	(bad)  
  450eeb:	cmp    al,ch
  450eed:	jnp    0x450f62
  450eef:	pop    ecx
	...
  450f04:	ds int 0xe8
  450f07:	cmp    DWORD PTR [ebp-0xf8bff65],0x1a
  450f0e:	inc    ebp
  450f0f:	call   0x56184a
  450f14:	mov    eax,ds:0xd558bc3
  450f19:	sbb    eax,DWORD PTR [edx+0x10]
  450f1c:	cs aad 0xe0
  450f1f:	mov    esp,DWORD PTR [ebx+eax*8-0x7b]
  450f23:	inc    esp
  450f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  450f25:	xchg   BYTE PTR [ebx-0x2d3ceab3],cl
  450f2b:	test   DWORD PTR [ebx+eax*8-0x692aaa75],0xdfa942a7
  450f36:	mov    eax,DWORD PTR [ebp-0x33]
  450f39:	sbb    al,BYTE PTR [ebp+0x8]
  450f3c:	mov    dh,0xd7
  450f3e:	or     al,0x51
  450f40:	ds fucomp st(0)
  450f43:	mov    esi,DWORD PTR [eax+0x6b]
  450f46:	add    eax,DWORD PTR [edx-0x4f]
  450f49:	fucomip st,st(0)
  450f4b:	push   ebp
  450f4c:	mov    eax,0x7983f786
  450f51:	xchg   ebx,eax
  450f52:	mov    ecx,DWORD PTR [ebp-0x63]
  450f55:	adc    al,cl
  450f57:	sub    BYTE PTR [esp+edx*8],ch
  450f5a:	call   0x4d5f574a
  450f5f:	in     al,0xe7
  450f61:	ja     0x450f69
  450f63:	cld    
  450f64:	mov    al,BYTE PTR [esi+0xc483]
	...
  450f7a:	add    BYTE PTR [eax],al
  450f7c:	mov    ecx,0xf5041cf7
  450f81:	(bad)  
  450f82:	mov    eax,ds:0xd2719c
  450f87:	push   eax
  450f88:	pop    ebp
  450f89:	sbb    bh,dl
  450f8b:	jmp    DWORD PTR [edx+0x12]
  450f8e:	mov    esp,0xd4cc2c08
  450f93:	adc    DWORD PTR [eax-0x4abc0bd9],0xffffff8f
  450f9a:	ins    DWORD PTR es:[edi],dx
  450f9b:	or     ch,BYTE PTR [esi]
  450f9d:	xchg   esp,eax
  450f9e:	nop
  450f9f:	cld    
  450fa0:	test   BYTE PTR [edi+0x6388ff51],0x83
  450fa7:	cmp    eax,0x43834d
  450fac:	mov    ch,0xfc
  450fae:	adc    al,0x6a
  450fb0:	jne    0x450fa9
  450fb2:	add    BYTE PTR [eax],dh
  450fb4:	mov    ch,0x8f
  450fb6:	mov    edx,DWORD PTR [ebp+0x9]
  450fb9:	loope  0x450f46
  450fbb:	inc    ebp
  450fbc:	adc    eax,0x6434481a
  450fc1:	xchg   BYTE PTR [ebp-0x10],cl
  450fc4:	push   ss
  450fc5:	sti    
  450fc6:	hlt    
  450fc7:	inc    ebx
  450fc8:	mov    ch,0x7a
  450fca:	or     eax,0xf7756a
  450fcf:	xor    BYTE PTR [ebp-0x2eaa7471],dh
  450fd5:	loopne 0x451041
  450fd7:	add    dl,cl
  450fd9:	fcomi  st,st(0)
  450fdb:	mov    ds:0x438349,eax
	...
  450ff4:	les    ebp,FWORD PTR ss:[esp+edi*8-0xa]
  450ff9:	pop    DWORD PTR [eax]
  450ffb:	jne    0x450fbd
  450ffd:	stc    
  450ffe:	inc    eax
  450fff:	push   0xbfb5
  451004:	cs retf 
  451006:	hlt    
  451007:	push   eax
  451008:	pop    ds
  451009:	nop
  45100a:	not    DWORD PTR [ebp-0x7b]
  45100d:	xor    DWORD PTR [esp+edi*8-0xa],ebp
  451011:	(bad)  
  451012:	mov    ecx,DWORD PTR [ebp-0x6f]
  451015:	pop    ss
  451016:	inc    ebp
  451017:	fdivr  DWORD PTR [esi]
  451019:	fcmovnu st,st(0)
  45101b:	mov    esi,eax
  45101d:	add    eax,DWORD PTR [bp+si-0x5f]
  451021:	push   ss
  451022:	cmp    eax,0xe0d32ee0
  451027:	mov    esp,esp
  451029:	fist   WORD PTR [edx-0x75]
  45102c:	lock imul edx,DWORD PTR [eax-0x75],0xffffffb0
  451031:	sti    
  451032:	hlt    
  451033:	inc    ebx
  451034:	mov    ch,0xde
  451036:	call   0xf7ca41cc
  45103b:	xor    ecx,0xffffff93
  45103e:	mov    edx,DWORD PTR [ebp+0x15]
  451041:	adc    DWORD PTR [edx+0x8fb5a4],edi
  451047:	add    BYTE PTR [ecx+0x15458bc6],cl
  45104d:	sbb    DWORD PTR [ebp-0x28],eax
  451050:	mov    dh,0x17
  451052:	mov    al,ds:0x898fb500
  451057:	dec    ebp
	...
  45106c:	loope  0x451086
  45106e:	dec    ebp
  45106f:	loopne 0x451085
  451071:	cld    
  451072:	hlt    
  451073:	inc    ebx
  451074:	mov    ch,0xb8
  451076:	inc    edx
  451077:	xor    al,0x16
  451079:	sub    al,0xf4
  45107b:	inc    ebx
  45107c:	mov    ch,0x18
  45107e:	add    eax,0xd0c9a4
  451083:	push   ecx
  451084:	cs fwait
  451086:	ins    BYTE PTR es:[edi],dx
  451087:	cld    
  451088:	jbe    0x451019
  45108a:	push   edx
  45108b:	mov    edi,eax
  45108d:	jae    0x4510df
  45108f:	call   0x3c9abd
  451094:	ss dec ebx
  451096:	add    al,0x8b
  451098:	call   0x95a9c0c
  45109d:	test   BYTE PTR [ebx+0x0],al
  4510a0:	mov    dh,0xde
  4510a2:	sub    BYTE PTR [ecx+0x43f43ba8],cl
  4510a8:	mov    ch,0x10
  4510aa:	xor    eax,0xd07198
  4510af:	add    al,ah
  4510b1:	mov    bl,0xa1
  4510b3:	je     0x451116
  4510b5:	rol    BYTE PTR [eax],1
  4510b7:	push   eax
  4510b8:	cs xchg edx,eax
  4510ba:	lods   al,BYTE PTR ds:[esi]
  4510bb:	cld    
  4510bc:	test   BYTE PTR [edi+0x1fa08b51],0xf4
  4510c3:	inc    ebx
  4510c4:	mov    ch,0xe1
  4510c6:	call   0xf7c94a40
  4510cb:	cmp    ecx,0xffffff92
  4510ce:	mov    eax,ds:0x74
	...
  4510e3:	add    BYTE PTR [ecx],ch
  4510e5:	rol    BYTE PTR [eax],1
  4510e7:	push   eax
  4510e8:	or     eax,0x1afff9cc
  4510ed:	adc    BYTE PTR [esp+eax*1+0x3468ef1e],bh
  4510f4:	mov    cl,0xcf
  4510f6:	add    BYTE PTR [ebx+0x43f423b0],cl
  4510fc:	mov    ch,0xde
  4510fe:	call   0xf7c8fd54
  451103:	xor    ecx,0xffffff96
  451106:	mov    DWORD PTR [ebp+0x9],eax
  451109:	sbb    BYTE PTR ds:0xcfd974,cl
  45110f:	push   edx
  451110:	ds retf 0x8be0
  451114:	mov    eax,0xb543f4fb
  451119:	nop
  45111a:	dec    eax
  45111b:	sub    BYTE PTR [eax+ebx*1+0xd],ah
  45111f:	nop
  451120:	mov    cl,0xcf
  451122:	add    BYTE PTR [edx-0x63],dl
  451125:	mov    bh,0xf4
  451127:	jmp    DWORD PTR [edx+0x540cbc0f]
  45112d:	and    ah,dh
  45112f:	inc    ebx
  451130:	mov    ch,0x8c
  451132:	lock stc 
  451134:	mov    dh,0x8f
  451136:	mov    ds:0xcf81bc,eax
  45113b:	(bad)  
  45113c:	call   0xf5af62c8
  451141:	cmc    
  451142:	dec    BYTE PTR [edx+0x43f443c0]
	...
  45115c:	mov    ch,0xdd
  45115e:	not    DWORD PTR [ebp-0x7f]
  451161:	js     0x451145
  451163:	sti    
  451164:	push   edx
  451165:	cmp    DWORD PTR [eax+0x8fb501],0xffffff8b
  45116c:	pop    eax
  45116d:	in     eax,0xc2
  45116f:	add    al,0xb5
  451171:	push   ebx
  451172:	(bad)  
  451173:	int3   
  451174:	add    DWORD PTR [esp+eax*8-0x34],edx
  451178:	adc    BYTE PTR [esi],0xe4
  45117b:	mov    edi,DWORD PTR [eax-0x69]
  45117e:	mov    eax,DWORD PTR [eax+0x19]
  451181:	in     eax,0xc3
  451183:	int3   
  451184:	add    DWORD PTR [esp+eax*8-0x34],edx
  451188:	pusha  
  451189:	push   ss
  45118a:	in     al,0x53
  45118c:	imul   ebx,edx,0xffffff8b
  45118f:	cmp    eax,0x438435
  451194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451196:	test   ah,bh
  451198:	jbe    0x451129
  45119a:	mov    esi,DWORD PTR ds:0x43835d
  4511a0:	jp     0x451183
  4511a2:	pop    ebx
  4511a3:	pop    ebp
  4511a4:	not    BYTE PTR [ebx-0x3c]
  4511a7:	int3   
  4511a8:	pusha  
  4511a9:	push   ss
  4511aa:	in     al,0x51
  4511ac:	dec    ebp
  4511ad:	retf   
  4511ae:	cld    
  4511af:	aas    
  4511b0:	mov    ch,0x30
  4511b2:	xchg   esp,eax
  4511b3:	cld    
  4511b4:	test   BYTE PTR [edi-0x78a617b0],0xf7
  4511bb:	push   DWORD PTR [esi]
  4511bd:	dec    ebx
  4511be:	or     BYTE PTR [ecx+0x0],cl
	...
  4511d4:	lock or DWORD PTR [ebx+0x6ae0bd4d],0x0
  4511dc:	ds pushf 
  4511de:	mov    eax,0x528ff6fc
  4511e3:	jmp    eax
  4511e5:	or     DWORD PTR [ebx-0x3bb0ef1b],0xffffffcc
  4511ec:	add    BYTE PTR [edi],dl
  4511ee:	in     al,0x83
  4511f0:	push   ecx
  4511f1:	stos   DWORD PTR es:[edi],eax
  4511f2:	mov    edi,0x8f5d45
  4511f7:	add    BYTE PTR [ebp-0x3223c2b6],dh
  4511fd:	pop    DWORD PTR [eax]
  4511ff:	add    BYTE PTR [edx-0x34],bh
  451202:	in     al,dx
  451203:	add    DWORD PTR [ebp+0x78c7008f],esi
  451209:	add    DWORD PTR [eax],0x0
  45120c:	mov    ch,0x8f
  45120e:	mov    edi,0x8f1945
  451213:	add    BYTE PTR [ebp+0x3c084516],dh
  451219:	xchg   esp,eax
  45121a:	nop
  45121b:	cld    
  45121c:	jbe    0x4511ad
  45121e:	call   0xf7c71ccc
  451223:	mov    eax,ds:0x438325
  451228:	cwde   
  451229:	xor    bh,0x0
  45122c:	mov    ch,0xfb
  45122e:	add    al,0xc7
  451230:	mov    eax,0xb543f427
  451235:	pop    DWORD PTR [eax]
	...
  45124b:	add    BYTE PTR [ebp-0x4f38f58a],dh
  451251:	daa    
  451252:	hlt    
  451253:	inc    ebx
  451254:	mov    ch,0x90
  451256:	add    BYTE PTR [eax],al
  451258:	mov    ch,0xe
  45125a:	xor    eax,0xcdb190
  45125f:	add    BYTE PTR [eax],ah
  451261:	xchg   esi,eax
  451262:	mov    edi,0x43843d05
  451267:	add    BYTE PTR [ebp+0x3600008f],dh
  45126d:	ret    
  45126e:	cwde   
  45126f:	cld    
  451270:	test   BYTE PTR [edi-0xa4f8b00],0x0
  451277:	jmp    DWORD PTR [eax-0x4abc0b11]
  45127d:	sub    al,0x90
  45127f:	cld    
  451280:	test   BYTE PTR [edi-0x7bbaf275],0x43
  451287:	add    BYTE PTR [ebx+edx*8],ch
  45128a:	call   0xf464bb1a
  45128f:	inc    ebx
  451290:	mov    ch,0x14
  451292:	cmp    eax,0x34cdb6e8
  451297:	mov    eax,esi
  451299:	ja     0x451226
  45129b:	dec    ebp
  45129c:	sbb    eax,0x297c0517
  4512a1:	int    0x0
  4512a3:	push   0x408b85
  4512a8:	sbb    bl,BYTE PTR [ebx-0x708903a0]
  4512ae:	mov    ds:0x9c,eax
	...
  4512c3:	add    BYTE PTR [ecx],cl
  4512c5:	int    0x0
  4512c7:	(bad)  
  4512c8:	mov    eax,0xb543f433
  4512cd:	cli    
  4512ce:	cld    
  4512cf:	aas    
  4512d0:	mov    ch,0xf7
  4512d2:	pusha  
  4512d3:	add    al,0x75
  4512d5:	(bad)  
  4512d6:	mov    edx,DWORD PTR ds:0x438441
  4512dc:	xchg   DWORD PTR [edi-0x3e],esi
  4512df:	not    edx
  4512e1:	add    BYTE PTR [ebx-0x57d3423c],0xfc
  4512e8:	jbe    0x451279
  4512ea:	not    DWORD PTR ds:0x43840d
  4512f0:	push   esi
  4512f1:	inc    edi
  4512f2:	hlt    
  4512f3:	inc    ebx
  4512f4:	mov    ch,0x2e
  4512f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4512f7:	cld    
  4512f8:	test   BYTE PTR [edi-0x7e9e17b0],0xf7
  4512ff:	push   DWORD PTR [esi]
  451301:	dec    ebx
  451302:	cld    
  451303:	mov    al,dh
  451305:	jg     0x451292
  451307:	dec    ebp
  451308:	test   esi,ebx
  45130a:	call   0xf7c58ee4
  45130f:	cmp    DWORD PTR [ecx-0x75],0xffffffa3
  451313:	xchg   esp,eax
  451314:	imul   ecx,esp,0x80088b00
  45131a:	push   edx
  45131b:	push   0xffffffb5
  45131d:	cs mov esp,?
  451320:	test   BYTE PTR [edi+0x7829e850],0xf7
  451327:	inc    DWORD PTR [eax]
	...
  451339:	add    BYTE PTR [eax],al
  45133b:	add    BYTE PTR [esi],dh
  45133d:	dec    ebx
  45133e:	add    al,0x8b
  451340:	call   0x15929cc4
  451345:	adc    al,0x4d
  451347:	cld    
  451348:	out    dx,al
  451349:	(bad)  
  45134b:	jae    0x4513cc
  45134d:	adc    al,0x3d
  45134f:	loopne 0x4512d6
  451351:	adc    al,0x45
  451353:	fsub   QWORD PTR [edi+esi*2-0x5a]
  451357:	sti    
  451358:	or     al,BYTE PTR [eax+0x2cadc483]
  45135e:	mov    al,ds:0x8b8f76fc
  451363:	adc    eax,0x438315
  451368:	xchg   DWORD PTR [esi],ebp
  45136a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45136b:	cld    
  45136c:	jbe    0x4512fd
  45136e:	add    eax,DWORD PTR [ebp-0x2f]
  451371:	fimul  WORD PTR [ebx+0x4383290d]
  451377:	add    BYTE PTR [esi-0x32ae0b2e],dh
  45137d:	push   edi
  45137e:	stc    
  45137f:	(bad)  
  451380:	mov    edx,0x3e0cbc0b
  451385:	in     eax,0xec
  451387:	add    eax,DWORD PTR [eax]
  451389:	pop    esp
  45138a:	add    edx,DWORD PTR [ebp-0x67]
  45138d:	or     DWORD PTR [ebp-0x1c],ecx
  451390:	cs aad 0xf4
  451393:	add    edi,eax
  451395:	pop    ebx
  451396:	mov    DWORD PTR [ebp-0x77],eax
  451399:	or     eax,DWORD PTR [ebp-0x20]
  45139c:	into   
  45139d:	mov    WORD PTR [eax+0xfc],fs
	...
  4513b3:	add    dh,dh
  4513b5:	(bad)
  4513b9:	imul   edx,DWORD PTR [esi+0x77f0c7],0x0
  4513c0:	mov    ch,0x8f
  4513c2:	jmp    0x4513cd
  4513c4:	cs in  eax,0xf8
  4513c7:	xor    DWORD PTR [edi-0x6c],0xffffff89
  4513cb:	push   ebp
  4513cc:	dec    ebp
  4513cd:	or     edi,DWORD PTR ds:0xf0d47ef8
  4513d3:	jae    0x451452
  4513d5:	or     al,BYTE PTR ds:0xd33194
  4513db:	add    edi,DWORD PTR [eax+0x77]
  4513de:	mov    edx,DWORD PTR [ecx]
  4513e0:	mov    dh,0xe4
  4513e2:	clc    
  4513e3:	mov    eax,ds:0x437c41
  4513e8:	mov    dh,0xd4
  4513ea:	clc    
  4513eb:	mov    DWORD PTR [ebp+0x34f8450a],esp
  4513f1:	push   ecx
  4513f2:	jmp    0x8bd4c8fa
  4513f7:	adc    eax,0x437c49
  4513fc:	mov    dh,0xe4
  4513fe:	clc    
  4513ff:	xor    ebp,DWORD PTR [edi+0x76fc8c30]
  451405:	pop    DWORD PTR [ebx]
  451407:	inc    ebp
  451408:	int    0x8
  45140a:	or     bl,ch
  45140c:	add    cl,BYTE PTR [ecx]
  45140e:	and    eax,0xd2c184
  451413:	mov    DWORD PTR [eax+0xf],edi
  451416:	hlt    
  451417:	inc    ebx
	...
  45142c:	mov    ch,0xc2
  45142e:	leave  
  45142f:	mov    eax,esp
  451431:	div    esp
  451433:	inc    ebx
  451434:	mov    ch,0xc2
  451436:	leave  
  451437:	mov    DWORD PTR [eax-0x4abc0bf5],edi
  45143d:	addr16 inc esi
  45143f:	test   DWORD PTR [edx-0x4df27a82],0x2c00437b
  451449:	int3   
  45144a:	clc    
  45144b:	mov    ecx,0x4092b5
  451450:	xor    al,0x68
  451452:	add    BYTE PTR [ebx],al
  451454:	mov    ch,0x8f
  451456:	mov    edx,DWORD PTR [ebp+0x5d]
  451459:	stos   BYTE PTR es:[edi],al
  45145a:	ror    DWORD PTR [ecx+0x43f407a8],1
  451460:	mov    ch,0x30
  451462:	mov    ah,bh
  451464:	test   BYTE PTR [edi+0x79b1e850],0xf7
  45146b:	push   DWORD PTR [esi]
  45146d:	push   ebx
  45146e:	cld    
  45146f:	mov    bh,BYTE PTR [eax-0x4abc0bdd]
  451475:	loopne 0x45145f
  451477:	aad    0x1f
  451479:	jle    0x451472
  45147b:	test   ebp,esi
  45147d:	add    edi,ebp
  45147f:	xor    dh,ch
  451481:	imul   ebp,DWORD PTR [edx],0xf413d88b
  451487:	inc    ebx
  451488:	mov    ch,0x12
  45148a:	mov    esp,0x98bc3604
  45148f:	cld    
	...
  4514a4:	jbe    0x451435
  4514a6:	add    BYTE PTR [esp+ebp*4+0x30],dh
  4514aa:	ins    BYTE PTR es:[edi],dx
  4514ab:	cld    
  4514ac:	jbe    0x45143d
  4514ae:	mov    DWORD PTR [ecx+ebx*4-0x6d],eax
  4514b2:	call   0xf7c2dd14
  4514b7:	mov    ebp,DWORD PTR [eax-0x4abc0bbd]
  4514bd:	loope  0x451482
  4514bf:	xor    esi,DWORD PTR [ebp+0x9]
  4514c2:	fstp   QWORD PTR [ebp+0x76]
  4514c5:	dec    esp
  4514c6:	(bad)  
  4514c7:	int3   
  4514c8:	mov    ch,0x8f
  4514ca:	add    BYTE PTR [eax],al
  4514cc:	mov    ch,0x8f
  4514ce:	add    BYTE PTR [eax],al
  4514d0:	mov    ch,0x8f
  4514d2:	add    BYTE PTR [eax],al
  4514d4:	mov    ch,0x8f
  4514d6:	add    BYTE PTR [eax],al
  4514d8:	mov    ch,0x8f
  4514da:	add    BYTE PTR [eax],al
  4514dc:	mov    ch,0x8f
  4514de:	add    BYTE PTR [eax],al
  4514e0:	mov    ch,0x8f
  4514e2:	add    BYTE PTR [eax],al
  4514e4:	mov    ch,0x8f
  4514e6:	add    BYTE PTR [eax],al
  4514e8:	mov    ch,0x8f
  4514ea:	add    BYTE PTR [eax],al
  4514ec:	mov    ch,0x8f
  4514ee:	add    BYTE PTR [eax],al
  4514f0:	mov    ch,0x8f
  4514f2:	add    BYTE PTR [eax],al
  4514f4:	mov    ch,0x8f
  4514f6:	add    BYTE PTR [eax],al
  4514f8:	mov    ch,0x8f
  4514fa:	add    BYTE PTR [eax],al
  4514fc:	mov    ch,0x8f
  4514fe:	add    BYTE PTR [eax],al
  451500:	mov    ch,0x8f
  451502:	add    BYTE PTR [eax],al
  451504:	mov    ch,0x8f
	...
  45151a:	add    BYTE PTR [eax],al
  45151c:	mov    ch,0x8f
  45151e:	add    BYTE PTR [eax],al
  451520:	mov    ch,0x8f
  451522:	add    BYTE PTR [eax],al
  451524:	mov    ch,0x8f
  451526:	add    BYTE PTR [eax],al
  451528:	mov    ch,0x8f
  45152a:	add    BYTE PTR [eax],al
  45152c:	mov    ch,0x8f
  45152e:	add    BYTE PTR [eax],al
  451530:	mov    ch,0x8f
  451532:	add    BYTE PTR [eax],al
  451534:	mov    ch,0x8f
  451536:	add    BYTE PTR [eax],al
  451538:	mov    ch,0x8f
  45153a:	add    BYTE PTR [eax],al
  45153c:	mov    ch,0x8f
  45153e:	add    BYTE PTR [eax],al
  451540:	mov    ch,0x8f
  451542:	add    BYTE PTR [eax],al
  451544:	mov    ch,0x8f
  451546:	add    BYTE PTR [eax],al
  451548:	mov    ch,0x8f
  45154a:	add    BYTE PTR [eax],al
  45154c:	mov    ch,0x8f
  45154e:	add    BYTE PTR [eax],al
  451550:	mov    ch,0x8f
  451552:	add    BYTE PTR [eax],al
  451554:	mov    ch,0x8f
  451556:	add    BYTE PTR [eax],al
  451558:	mov    ch,0x8f
  45155a:	add    BYTE PTR [eax],al
  45155c:	mov    ch,0x8f
  45155e:	add    BYTE PTR [eax],al
  451560:	mov    ch,0x8f
  451562:	add    BYTE PTR [eax],al
  451564:	mov    ch,0x8f
  451566:	add    BYTE PTR [eax],al
  451568:	mov    ch,0x8f
  45156a:	add    BYTE PTR [eax],al
  45156c:	mov    ch,0x8f
  45156e:	add    BYTE PTR [eax],al
  451570:	mov    ch,0x8f
  451572:	add    BYTE PTR [eax],al
  451574:	mov    ch,0x8f
  451576:	add    BYTE PTR [eax],al
  451578:	mov    ch,0x8f
  45157a:	add    BYTE PTR [eax],al
  45157c:	mov    ch,0x8f
	...
  451592:	add    BYTE PTR [eax],al
  451594:	mov    ch,0x8f
  451596:	add    BYTE PTR [eax],al
  451598:	mov    ch,0x8f
  45159a:	add    BYTE PTR [eax],al
  45159c:	add    BYTE PTR [eax+eax*1],al
  45159f:	add    BYTE PTR [ebp-0x62ffff71],dh
  4515a5:	pop    DWORD PTR [eax]
  4515a7:	add    BYTE PTR [ecx],ch
  4515a9:	mov    esp,0xbc493390
  4515ae:	cwde   
  4515af:	xor    ecx,DWORD PTR [ecx-0x44]
  4515b2:	mov    al,ds:0xa8bc5933
  4515b7:	xor    esi,DWORD PTR [ebp+0x1100037f]
  4515bd:	pop    DWORD PTR [eax]
  4515bf:	add    BYTE PTR [esi],dh
  4515c1:	mov    esi,0xbe0531eb
  4515c6:	cli    
  4515c7:	xor    edx,edi
  4515c9:	mov    ebp,0xbdc33208
  4515ce:	xor    esi,DWORD PTR [edx]
  4515d0:	stos   DWORD PTR es:[edi],eax
  4515d1:	mov    ebp,0xbd593248
  4515d6:	lea    esi,[edx]
  4515d8:	push   cs
  4515d9:	mov    ebp,0xbd0c32b1
  4515de:	cmp    eax,0x27bb7133
  4515e3:	xor    eax,0x3535ba90
  4515e8:	push   ecx
  4515e9:	mov    edx,0xa53a356d
  4515ee:	push   ds
  4515ef:	ss (bad) 
  4515f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4515f2:	cmp    esi,DWORD PTR [esi]
  4515f4:	in     al,dx
  4515f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4515f6:	dec    edi
  4515f7:	ss cli 
  4515f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4515fa:	ins    BYTE PTR es:[edi],dx
  4515fb:	ss pop es
  4515fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4515fe:	xchg   BYTE PTR [esi],dh
  451600:	and    al,0xa6
  451602:	cdq    
  451603:	add    BYTE PTR ss:[eax],al
	...
  451616:	add    BYTE PTR [eax],al
  451618:	and    ah,BYTE PTR [esi-0x59c2c95b]
  45161e:	and    DWORD PTR [edi],esi
  451620:	call   0xfda7:0x5e37e6a6
  451627:	aaa    
  451628:	mov    ebx,0x883810a7
  45162d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  45162e:	inc    esp
  45162f:	cmp    bh,bh
  451631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  451632:	bound  edi,QWORD PTR [eax]
  451634:	xor    BYTE PTR [eax-0x5803c74f],ch
  45163a:	mov    edi,0xdca87338
  45163f:	cmp    BYTE PTR [eax],bl
  451641:	test   al,0xeb
  451643:	cmp    BYTE PTR [esi],ah
  451645:	test   al,0xfa
  451647:	cmp    BYTE PTR [eax+ebp*4-0x5745c6f1],dh
  45164e:	and    eax,0x41a8ca39
  451653:	cmp    DWORD PTR [esi-0x58],edi
  451656:	pop    ecx
  451657:	cmp    DWORD PTR [esi+0x4d3971a8],edx
  45165d:	test   eax,0xa92939ae
  451662:	lds    edi,FWORD PTR [ecx]
  451664:	jmp    FWORD PTR [eax-0x563cc61e]
  45166a:	sub    BYTE PTR [edx],bh
  45166c:	mov    al,ds:0x7e3a41a9
  451671:	test   eax,0xa96b3a54
  451676:	imul   edi,DWORD PTR [edx],0x3a74a953
	...
  451690:	cmp    BYTE PTR [ecx-0x56b6c571],ch
  451696:	call   0x4c3a:0xa5a94a3a
  45169d:	test   eax,0xa9613aae
  4516a2:	ret    0x7d3a
  4516a5:	test   eax,0xa9673acd
  4516aa:	out    dx,eax
  4516ab:	cmp    bh,BYTE PTR [edi-0x57]
  4516ae:	es cmp ecx,ecx
  4516b1:	stos   BYTE PTR es:[edi],al
  4516b2:	xor    bh,BYTE PTR [ebx]
  4516b4:	mov    cl,0xaa
  4516b6:	cmp    di,WORD PTR [esi]
  4516b9:	stos   BYTE PTR es:[edi],al
  4516ba:	cwde   
  4516bb:	cmp    edx,DWORD PTR [ecx]
  4516bd:	stos   BYTE PTR es:[edi],al
  4516be:	mov    dh,0x3b
  4516c0:	jbe    0x45166c
  4516c2:	leave  
  4516c3:	cmp    esp,DWORD PTR [edx+ebp*4-0x27]
  4516c7:	cmp    edx,DWORD PTR [ecx-0x56]
  4516ca:	in     al,dx
  4516cb:	cmp    eax,DWORD PTR [eax-0x56]
  4516ce:	add    bh,BYTE PTR [esp+eiz*4]
  4516d1:	stos   DWORD PTR es:[edi],eax
  4516d2:	and    eax,0x36abe33c
  4516d7:	cmp    al,0x70
  4516d9:	stos   DWORD PTR es:[edi],eax
  4516da:	add    BYTE PTR [eax],al
  4516dc:	mov    ch,0x8f
  4516de:	add    BYTE PTR [eax],al
  4516e0:	mov    ch,0x8f
  4516e2:	add    BYTE PTR [eax],al
  4516e4:	mov    ch,0x8f
  4516e6:	add    BYTE PTR [eax],al
  4516e8:	mov    ch,0x8f
  4516ea:	add    BYTE PTR [eax],al
  4516ec:	mov    ch,0x8f
  4516ee:	add    BYTE PTR [eax],al
  4516f0:	mov    ch,0x8f
	...
  451706:	add    BYTE PTR [eax],al
  451708:	mov    ch,0x8f
  45170a:	add    BYTE PTR [eax],al
  45170c:	mov    ch,0x8f
  45170e:	add    BYTE PTR [eax],al
  451710:	mov    ch,0x8f
  451712:	add    BYTE PTR [eax],al
  451714:	mov    ch,0x8f
  451716:	add    BYTE PTR [eax],al
  451718:	mov    ch,0x8f
  45171a:	add    BYTE PTR [eax],al
  45171c:	mov    ch,0x8f
  45171e:	add    BYTE PTR [eax],al
  451720:	mov    ch,0x8f
  451722:	add    BYTE PTR [eax],al
  451724:	mov    ch,0x8f
  451726:	add    BYTE PTR [eax],al
  451728:	mov    ch,0x8f
  45172a:	add    BYTE PTR [eax],al
  45172c:	mov    ch,0x8f
  45172e:	add    BYTE PTR [eax],al
  451730:	mov    ch,0x8f
  451732:	add    BYTE PTR [eax],al
  451734:	mov    ch,0x8f
  451736:	add    BYTE PTR [eax],al
  451738:	mov    ch,0x8f
  45173a:	add    BYTE PTR [eax],al
  45173c:	mov    ch,0x8f
  45173e:	add    BYTE PTR [eax],al
  451740:	mov    ch,0x8f
  451742:	add    BYTE PTR [eax],al
  451744:	mov    ch,0x8f
  451746:	add    BYTE PTR [eax],al
  451748:	mov    ch,0x8f
  45174a:	add    BYTE PTR [eax],al
  45174c:	mov    ch,0x8f
  45174e:	add    BYTE PTR [eax],al
  451750:	mov    ch,0x8f
  451752:	add    BYTE PTR [eax],al
  451754:	mov    ch,0x8f
  451756:	add    BYTE PTR [eax],al
  451758:	mov    ch,0x8f
  45175a:	add    BYTE PTR [eax],al
  45175c:	mov    ch,0x8f
  45175e:	add    BYTE PTR [eax],al
  451760:	mov    ch,0x8f
  451762:	add    BYTE PTR [eax],al
  451764:	mov    ch,0x8f
  451766:	add    BYTE PTR [eax],al
  451768:	mov    ch,0x8f
	...
  45177e:	add    BYTE PTR [eax],al
  451780:	mov    ch,0x8f
  451782:	add    BYTE PTR [eax],al
  451784:	mov    ch,0x8f
  451786:	add    BYTE PTR [eax],al
  451788:	mov    ch,0x8f
  45178a:	add    BYTE PTR [eax],al
  45178c:	mov    ch,0x8f
  45178e:	add    BYTE PTR [eax],al
  451790:	mov    ch,0x8f
  451792:	add    BYTE PTR [eax],al
  451794:	mov    ch,0x8f
  451796:	add    BYTE PTR [eax],al
  451798:	mov    ch,0x8f
  45179a:	add    BYTE PTR [eax],al
  45179c:	mov    ch,0x8f
  45179e:	add    BYTE PTR [eax],al
  4517a0:	mov    ch,0x8f
  4517a2:	add    BYTE PTR [eax],al
  4517a4:	mov    ch,0x8f
  4517a6:	add    BYTE PTR [eax],al
  4517a8:	mov    ch,0x8f
  4517aa:	add    BYTE PTR [eax],al
  4517ac:	mov    ch,0x8f
  4517ae:	add    BYTE PTR [eax],al
  4517b0:	mov    ch,0x8f
  4517b2:	add    BYTE PTR [eax],al
  4517b4:	mov    ch,0x8f
  4517b6:	add    BYTE PTR [eax],al
  4517b8:	mov    ch,0x8f
  4517ba:	add    BYTE PTR [eax],al
  4517bc:	mov    ch,0x8f
  4517be:	add    BYTE PTR [eax],al
  4517c0:	mov    ch,0x8f
  4517c2:	add    BYTE PTR [eax],al
  4517c4:	mov    ch,0x8f
  4517c6:	add    BYTE PTR [eax],al
  4517c8:	mov    ch,0x8f
  4517ca:	add    BYTE PTR [eax],al
  4517cc:	mov    ch,0x8f
  4517ce:	add    BYTE PTR [eax],al
  4517d0:	mov    ch,0x8f
  4517d2:	add    BYTE PTR [eax],al
  4517d4:	mov    ch,0x8f
  4517d6:	add    BYTE PTR [eax],al
  4517d8:	mov    ch,0x8f
  4517da:	add    BYTE PTR [eax],al
  4517dc:	mov    ch,0x8f
  4517de:	add    BYTE PTR [eax],al
  4517e0:	mov    ch,0x8f
	...
  4517f6:	add    BYTE PTR [eax],al
  4517f8:	mov    ch,0x8f
  4517fa:	add    BYTE PTR [eax],al
  4517fc:	mov    ch,0x8f
  4517fe:	add    BYTE PTR [eax],al
  451800:	mov    ch,0x8f
  451802:	add    BYTE PTR [eax],al
  451804:	mov    ch,0x8f
  451806:	add    BYTE PTR [eax],al
  451808:	mov    ch,0x8f
  45180a:	add    BYTE PTR [eax],al
  45180c:	mov    ch,0x8f
  45180e:	add    BYTE PTR [eax],al
  451810:	mov    ch,0x8f
  451812:	add    BYTE PTR [eax],al
  451814:	mov    ch,0x8f
  451816:	add    BYTE PTR [eax],al
  451818:	mov    ch,0x8f
  45181a:	add    BYTE PTR [eax],al
  45181c:	mov    ch,0x8f
  45181e:	add    BYTE PTR [eax],al
  451820:	mov    ch,0x8f
  451822:	add    BYTE PTR [eax],al
  451824:	mov    ch,0x8f
  451826:	add    BYTE PTR [eax],al
  451828:	mov    ch,0x8f
  45182a:	add    BYTE PTR [eax],al
  45182c:	mov    ch,0x8f
  45182e:	add    BYTE PTR [eax],al
  451830:	mov    ch,0x8f
  451832:	add    BYTE PTR [eax],al
  451834:	mov    ch,0x8f
  451836:	add    BYTE PTR [eax],al
  451838:	mov    ch,0x8f
  45183a:	add    BYTE PTR [eax],al
  45183c:	mov    ch,0x8f
  45183e:	add    BYTE PTR [eax],al
  451840:	mov    ch,0x8f
  451842:	add    BYTE PTR [eax],al
  451844:	mov    ch,0x8f
  451846:	add    BYTE PTR [eax],al
  451848:	mov    ch,0x8f
  45184a:	add    BYTE PTR [eax],al
  45184c:	mov    ch,0x8f
  45184e:	add    BYTE PTR [eax],al
  451850:	mov    ch,0x8f
  451852:	add    BYTE PTR [eax],al
  451854:	mov    ch,0x8f
  451856:	add    BYTE PTR [eax],al
  451858:	mov    ch,0x8f
	...
  45186e:	add    BYTE PTR [eax],al
  451870:	mov    ch,0x8f
  451872:	add    BYTE PTR [eax],al
  451874:	mov    ch,0x8f
  451876:	add    BYTE PTR [eax],al
  451878:	mov    ch,0x8f
  45187a:	add    BYTE PTR [eax],al
  45187c:	mov    ch,0x8f
  45187e:	add    BYTE PTR [eax],al
  451880:	mov    ch,0x8f
  451882:	add    BYTE PTR [eax],al
  451884:	mov    ch,0x8f
  451886:	add    BYTE PTR [eax],al
  451888:	mov    ch,0x8f
  45188a:	add    BYTE PTR [eax],al
  45188c:	mov    ch,0x8f
  45188e:	add    BYTE PTR [eax],al
  451890:	mov    ch,0x8f
  451892:	add    BYTE PTR [eax],al
  451894:	mov    ch,0x8f
  451896:	add    BYTE PTR [eax],al
  451898:	mov    ch,0x8f
  45189a:	add    BYTE PTR [eax],al
  45189c:	mov    ch,0x8f
  45189e:	add    BYTE PTR [eax],al
  4518a0:	mov    ch,0x8f
  4518a2:	add    BYTE PTR [eax],al
  4518a4:	mov    ch,0x8f
  4518a6:	add    BYTE PTR [eax],al
  4518a8:	mov    ch,0x8f
  4518aa:	add    BYTE PTR [eax],al
  4518ac:	mov    ch,0x8f
  4518ae:	add    BYTE PTR [eax],al
  4518b0:	mov    ch,0x8f
  4518b2:	add    BYTE PTR [eax],al
  4518b4:	mov    ch,0x8f
  4518b6:	add    BYTE PTR [eax],al
  4518b8:	mov    ch,0x8f
  4518ba:	add    BYTE PTR [eax],al
  4518bc:	mov    ch,0x8f
  4518be:	add    BYTE PTR [eax],al
  4518c0:	mov    ch,0x8f
  4518c2:	add    BYTE PTR [eax],al
  4518c4:	mov    ch,0x8f
  4518c6:	add    BYTE PTR [eax],al
  4518c8:	mov    ch,0x8f
  4518ca:	add    BYTE PTR [eax],al
  4518cc:	mov    ch,0x8f
  4518ce:	add    BYTE PTR [eax],al
  4518d0:	mov    ch,0x8f
	...
  4518e6:	add    BYTE PTR [eax],al
  4518e8:	mov    ch,0x8f
  4518ea:	add    BYTE PTR [eax],al
  4518ec:	mov    ch,0x8f
  4518ee:	add    BYTE PTR [eax],al
  4518f0:	mov    ch,0x8f
  4518f2:	add    BYTE PTR [eax],al
  4518f4:	mov    ch,0x8f
  4518f6:	add    BYTE PTR [eax],al
  4518f8:	mov    ch,0x8f
  4518fa:	add    BYTE PTR [eax],al
  4518fc:	mov    ch,0x8f
  4518fe:	add    BYTE PTR [eax],al
  451900:	mov    ch,0x8f
  451902:	add    BYTE PTR [eax],al
  451904:	mov    ch,0x8f
  451906:	add    BYTE PTR [eax],al
  451908:	mov    ch,0x8f
  45190a:	add    BYTE PTR [eax],al
  45190c:	mov    ch,0x8f
  45190e:	add    BYTE PTR [eax],al
  451910:	mov    ch,0x8f
  451912:	add    BYTE PTR [eax],al
  451914:	mov    ch,0x8f
  451916:	add    BYTE PTR [eax],al
  451918:	mov    ch,0x8f
  45191a:	add    BYTE PTR [eax],al
  45191c:	mov    ch,0x8f
  45191e:	add    BYTE PTR [eax],al
  451920:	mov    ch,0x8f
  451922:	add    BYTE PTR [eax],al
  451924:	mov    ch,0x8f
  451926:	add    BYTE PTR [eax],al
  451928:	mov    ch,0x8f
  45192a:	add    BYTE PTR [eax],al
  45192c:	mov    ch,0x8f
  45192e:	add    BYTE PTR [eax],al
  451930:	mov    ch,0x8f
  451932:	add    BYTE PTR [eax],al
  451934:	mov    ch,0x8f
  451936:	add    BYTE PTR [eax],al
  451938:	mov    ch,0x8f
  45193a:	add    BYTE PTR [eax],al
  45193c:	mov    ch,0x8f
  45193e:	add    BYTE PTR [eax],al
  451940:	mov    ch,0x8f
  451942:	add    BYTE PTR [eax],al
  451944:	mov    ch,0x8f
  451946:	add    BYTE PTR [eax],al
  451948:	mov    ch,0x8f
	...
  45195e:	add    BYTE PTR [eax],al
  451960:	mov    ch,0x8f
  451962:	add    BYTE PTR [eax],al
  451964:	mov    ch,0x8f
  451966:	add    BYTE PTR [eax],al
  451968:	mov    ch,0x8f
  45196a:	add    BYTE PTR [eax],al
  45196c:	mov    ch,0x8f
  45196e:	add    BYTE PTR [eax],al
  451970:	mov    ch,0x8f
  451972:	add    BYTE PTR [eax],al
  451974:	mov    ch,0x8f
  451976:	add    BYTE PTR [eax],al
  451978:	mov    ch,0x8f
  45197a:	add    BYTE PTR [eax],al
  45197c:	mov    ch,0x8f
  45197e:	add    BYTE PTR [eax],al
  451980:	mov    ch,0x8f
  451982:	add    BYTE PTR [eax],al
  451984:	mov    ch,0x8f
  451986:	add    BYTE PTR [eax],al
  451988:	mov    ch,0x8f
  45198a:	add    BYTE PTR [eax],al
  45198c:	mov    ch,0x8f
  45198e:	add    BYTE PTR [eax],al
  451990:	mov    ch,0x8f
  451992:	add    BYTE PTR [eax],al
  451994:	mov    ch,0x8f
  451996:	add    BYTE PTR [eax],al
  451998:	mov    ch,0x8f
  45199a:	add    BYTE PTR [eax],al
  45199c:	mov    ch,0x8f
  45199e:	add    BYTE PTR [eax],al
  4519a0:	mov    ch,0x8f
  4519a2:	add    BYTE PTR [eax],al
  4519a4:	mov    ch,0x8f
  4519a6:	add    BYTE PTR [eax],al
  4519a8:	mov    ch,0x8f
  4519aa:	add    BYTE PTR [eax],al
  4519ac:	mov    ch,0x8f
  4519ae:	add    BYTE PTR [eax],al
  4519b0:	mov    ch,0x8f
  4519b2:	add    BYTE PTR [eax],al
  4519b4:	mov    ch,0x8f
  4519b6:	add    BYTE PTR [eax],al
  4519b8:	mov    ch,0x8f
  4519ba:	add    BYTE PTR [eax],al
  4519bc:	mov    ch,0x8f
  4519be:	add    BYTE PTR [eax],al
  4519c0:	mov    ch,0x8f
	...
  4519d6:	add    BYTE PTR [eax],al
  4519d8:	mov    ch,0x8f
  4519da:	add    BYTE PTR [eax],al
  4519dc:	mov    ch,0x8f
  4519de:	add    BYTE PTR [eax],al
  4519e0:	mov    ch,0x8f
  4519e2:	add    BYTE PTR [eax],al
  4519e4:	mov    ch,0x8f
  4519e6:	add    BYTE PTR [eax],al
  4519e8:	mov    ch,0x8f
  4519ea:	add    BYTE PTR [eax],al
  4519ec:	mov    ch,0x8f
  4519ee:	add    BYTE PTR [eax],al
  4519f0:	mov    ch,0x8f
  4519f2:	add    BYTE PTR [eax],al
  4519f4:	mov    ch,0x8f
  4519f6:	add    BYTE PTR [eax],al
  4519f8:	mov    ch,0x8f
  4519fa:	add    BYTE PTR [eax],al
  4519fc:	mov    ch,0x8f
  4519fe:	add    BYTE PTR [eax],al
  451a00:	mov    ch,0x8f
  451a02:	add    BYTE PTR [eax],al
  451a04:	mov    ch,0x8f
  451a06:	add    BYTE PTR [eax],al
  451a08:	mov    ch,0x8f
  451a0a:	add    BYTE PTR [eax],al
  451a0c:	mov    ch,0x8f
  451a0e:	add    BYTE PTR [eax],al
  451a10:	mov    ch,0x8f
  451a12:	add    BYTE PTR [eax],al
  451a14:	mov    ch,0x8f
  451a16:	add    BYTE PTR [eax],al
  451a18:	mov    ch,0x8f
  451a1a:	add    BYTE PTR [eax],al
  451a1c:	mov    ch,0x8f
  451a1e:	add    BYTE PTR [eax],al
  451a20:	mov    ch,0x8f
  451a22:	add    BYTE PTR [eax],al
  451a24:	mov    ch,0x8f
  451a26:	add    BYTE PTR [eax],al
  451a28:	mov    ch,0x8f
  451a2a:	add    BYTE PTR [eax],al
  451a2c:	mov    ch,0x8f
  451a2e:	add    BYTE PTR [eax],al
  451a30:	mov    ch,0x8f
  451a32:	add    BYTE PTR [eax],al
  451a34:	mov    ch,0x8f
  451a36:	add    BYTE PTR [eax],al
  451a38:	mov    ch,0x8f
	...
  451a4e:	add    BYTE PTR [eax],al
  451a50:	mov    ch,0x8f
  451a52:	add    BYTE PTR [eax],al
  451a54:	mov    ch,0x8f
  451a56:	add    BYTE PTR [eax],al
  451a58:	mov    ch,0x8f
  451a5a:	add    BYTE PTR [eax],al
  451a5c:	mov    ch,0x8f
  451a5e:	add    BYTE PTR [eax],al
  451a60:	mov    ch,0x8f
  451a62:	add    BYTE PTR [eax],al
  451a64:	mov    ch,0x8f
  451a66:	add    BYTE PTR [eax],al
  451a68:	or     ah,0x6a
  451a6b:	xchg   ebp,eax
  451a6c:	xlat   BYTE PTR ds:[ebx]
  451a6d:	int3   
  451a6e:	jns    0x451ab7
  451a70:	stc    
  451a71:	in     al,0x74
  451a73:	xchg   ebp,eax
  451a74:	fmul   QWORD PTR [ecx-0x4d]
  451a77:	aad    0x3
  451a79:	aas    
  451a7a:	adc    ah,BYTE PTR [esi]
  451a7c:	mov    eax,0x2eba4f58
  451a81:	mov    ebx,0xb47b595e
  451a86:	add    eax,0x2d3f0ef6
  451a8b:	mov    bh,0x7
  451a8d:	jne    0x451a7f
  451a8f:	lods   eax,DWORD PTR ds:[esi]
  451a90:	xor    DWORD PTR [edx+0xf1403b8],ebx
  451a96:	xchg   BYTE PTR [ebp+0x48f2100e],dl
  451a9c:	ins    BYTE PTR es:[edi],dx
  451a9d:	hlt    
  451a9e:	mov    bh,0x2a
  451aa0:	dec    ebp
  451aa1:	inc    ebx
  451aa2:	(bad)  
  451aa3:	xchg   edi,eax
  451aa4:	or     ah,BYTE PTR ds:0x5158542
  451aaa:	out    0x17,eax
  451aac:	clc    
  451aad:	ds push ebx
  451aaf:	shl    BYTE PTR [edx+0x65],0xd7
  451ab3:	jbe    0x451a93
  451ab5:	cld    
  451ab6:	inc    ebp
  451ab7:	hlt    
  451ab8:	and    DWORD PTR [ecx],ebp
  451aba:	imul   eax,DWORD PTR [edi+0x220901a8],0xb5611511
  451ac4:	arpl   WORD PTR [edx],ax
  451ac6:	cmp    DWORD PTR [edi-0x3f],ebp
  451ac9:	jg     0x451ad3
  451acb:	dec    ebp
  451acc:	cmp    DWORD PTR [ebx-0x67137e88],0xffffffa3
  451ad3:	mov    WORD PTR [edi-0x6c8fd209],es
  451ad9:	xor    al,BYTE PTR [edx+0x10d50ee8]
  451adf:	pop    ss
  451ae0:	fild   QWORD PTR [edi+0x75]
  451ae3:	xor    eax,0x65010c77
  451ae8:	inc    ebx
  451ae9:	and    DWORD PTR [edx-0x372a0ec2],esi
  451aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  451af0:	xor    al,0x99
  451af2:	mov    bl,0xea
  451af4:	bound  edi,QWORD PTR [ecx-0x23]
  451af7:	hlt    
  451af8:	mov    edi,0x915d4869
  451afd:	cwde   
  451afe:	aaa    
  451aff:	lea    ecx,[ecx-0x75b57a6b]
  451b05:	aaa    
  451b06:	mov    al,ds:0xc5cf55e9
  451b0b:	stos   DWORD PTR es:[edi],eax
  451b0c:	retf   0x6b3
  451b0f:	lods   al,BYTE PTR ds:[si]
  451b11:	jne    0x451b24
  451b13:	ins    DWORD PTR es:[edi],dx
  451b14:	xchg   DWORD PTR [ebx-0x72ec740],edx
  451b1a:	mov    DWORD PTR [edi-0x410538d6],edi
  451b20:	jp     0x451b59
  451b22:	rol    BYTE PTR [esi+esi*4-0xe],cl
  451b26:	sbb    DWORD PTR [ebx],esi
  451b28:	cmp    DWORD PTR [esi+esi*8-0xf],edi
  451b2c:	sub    DWORD PTR [eax+0x1e],ebx
  451b2f:	fild   WORD PTR [ecx-0x67efafc]
  451b35:	test   eax,0x7c0774bf
  451b3a:	sbb    al,0x57
  451b3c:	arpl   WORD PTR [esi-0x789e628e],bp
  451b42:	dec    ebx
  451b43:	shr    DWORD PTR [ecx-0x3],1
  451b46:	(bad)  
  451b47:	jae    0x451b6d
  451b49:	mov    esi,0x5b38b042
  451b4e:	xchg   edx,eax
  451b4f:	call   0x577:0x554c1104
  451b56:	bound  eax,QWORD PTR [edi+0x22]
  451b59:	lods   eax,DWORD PTR ds:[esi]
  451b5a:	ins    BYTE PTR es:[edi],dx
  451b5b:	sbb    esi,ecx
  451b5d:	sbb    eax,0x7be0cae1
  451b62:	scas   eax,DWORD PTR es:[edi]
  451b63:	rcr    BYTE PTR [esi-0xde1f4ba],0x61
  451b6a:	sub    edi,DWORD PTR [esp+eax*8]
  451b6d:	mov    bl,0x7e
  451b6f:	jno    0x451b19
  451b71:	mov    dl,0x89
  451b73:	sub    DWORD PTR [eax-0x2e],0xbbd0e0cf
  451b7a:	mov    dl,0x80
  451b7c:	jecxz  0x451b71
  451b7e:	pushf  
  451b7f:	icebp  
  451b80:	xchg   edi,eax
  451b81:	in     al,0xfd
  451b83:	in     eax,dx
  451b84:	loop   0x451b3d
  451b86:	out    0x82,eax
  451b88:	xor    dh,BYTE PTR [eax-0x34]
  451b8b:	pop    ss
  451b8c:	push   esp
  451b8d:	shr    DWORD PTR [eax+edx*4],1
  451b90:	xor    ch,cl
  451b92:	cli    
  451b93:	xchg   edi,eax
  451b94:	jmp    DWORD PTR [edx]
  451b96:	fs adc eax,0xcd201308
  451b9c:	ins    BYTE PTR es:[edi],dx
  451b9d:	aad    0xea
  451b9f:	pop    ss
  451ba0:	mov    eax,esp
  451ba2:	mov    BYTE PTR [eax+eiz*4],al
  451ba5:	push   esi
  451ba6:	inc    ebp
  451ba7:	sti    
  451ba8:	xor    dl,BYTE PTR [ecx-0x4b]
  451bab:	mov    ?,WORD PTR [edi]
  451bad:	dec    esp
  451bae:	pusha  
  451baf:	xchg   BYTE PTR [edi+ecx*4+0x36],dh
  451bb3:	jp     0x451b64
  451bb5:	push   ds
  451bb6:	xor    BYTE PTR [edx-0x7c629777],dh
  451bbc:	pop    edi
  451bbd:	lahf   
  451bbe:	loop   0x451bce
  451bc0:	mov    al,ah
  451bc2:	dec    edi
  451bc3:	pop    ecx
  451bc4:	dec    esp
  451bc5:	mov    ebp,0x95ac26ad
  451bca:	out    dx,eax
  451bcb:	sub    BYTE PTR [eax],bh
  451bcd:	shl    ebp,1
  451bcf:	pop    esi
  451bd0:	retf   
  451bd1:	xchg   esi,eax
  451bd2:	fwait
  451bd3:	add    ah,al
  451bd5:	xchg   esi,esi
  451bd7:	mov    al,0x5
  451bd9:	pop    ds
  451bda:	xlat   BYTE PTR ds:[ebx]
  451bdb:	dec    ecx
  451bdc:	and    BYTE PTR [edx-0x6d111bc4],dl
  451be2:	push   eax
  451be3:	cmc    
  451be4:	test   DWORD PTR [edx+0xd],edi
  451be7:	ins    DWORD PTR es:[edi],dx
  451be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  451be9:	out    0x16,eax
  451beb:	inc    esi
  451bec:	inc    esi
  451bed:	sbb    edi,DWORD PTR [edx-0x5f6fab7c]
  451bf3:	loope  0x451bee
  451bf5:	mov    DWORD PTR [esi+0x50af9cc2],0xa8defd2b
  451bff:	cmp    dh,BYTE PTR [eax+0x6b76a765]
  451c05:	fmul   QWORD PTR ds:0xfa21236b
  451c0b:	in     eax,0x90
  451c0d:	push   esp
  451c0e:	and    al,0x5a
  451c10:	jne    0x451be9
  451c12:	xchg   edi,eax
  451c13:	int3   
  451c14:	sbb    al,0xd5
  451c16:	add    al,0x42
  451c18:	push   ecx
  451c19:	mov    ds:0x90f3d936,al
  451c1e:	(bad)  
  451c1f:	stc    
  451c20:	jne    0x451ca0
  451c22:	dec    ebx
  451c23:	jnp    0x451c05
  451c25:	loope  0x451c08
  451c27:	out    0x85,eax
  451c29:	sbb    eax,0x40c53484
  451c2e:	pop    ebx
  451c2f:	push   0x4fbf1f4f
  451c34:	mov    esp,0x8b522f69
  451c39:	stc    
  451c3a:	sahf   
  451c3b:	lea    edi,[ebx+0x0]
  451c3e:	and    al,0xd8
  451c40:	inc    ecx
  451c41:	push   ds
  451c42:	mov    al,al
  451c44:	pop    ecx
  451c45:	push   ss
  451c46:	std    
  451c47:	or     ecx,esi
  451c49:	adc    cl,BYTE PTR [esi]
  451c4b:	xor    cl,BYTE PTR ds:0x7b51880
  451c51:	retf   0xf54d
  451c54:	push   es
  451c55:	pop    eax
  451c56:	fst    QWORD PTR [ebp+0x39]
  451c59:	mov    ebp,0xfbbf810c
  451c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  451c5f:	cmp    eax,0x70c51b9
  451c64:	push   0x7e
  451c66:	.byte 0x3a
  451c67:	.byte 0xb7
