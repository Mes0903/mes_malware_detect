
ed26d101e4713f9b5237b500a3a768a8e42fa02ab338c43a5f1fb4148b74e8b6.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	push   ecx
  401004:	mov    DWORD PTR [ebp-0x4],0x4
  40100b:	mov    eax,DWORD PTR [ebp-0x4]
  40100e:	add    eax,0x40dd98
  401013:	mov    ds:0x42c18c,eax
  401018:	mov    esp,ebp
  40101a:	pop    ebp
  40101b:	ret    
  40101c:	int3   
  40101d:	int3   
  40101e:	int3   
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	push   ecx
  401024:	mov    DWORD PTR [ebp-0x4],0x4
  40102b:	mov    eax,DWORD PTR [ebp-0x4]
  40102e:	add    eax,0x40dacc
  401033:	mov    ds:0x42c18c,eax
  401038:	mov    esp,ebp
  40103a:	pop    ebp
  40103b:	ret    
  40103c:	int3   
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	sub    esp,0xc
  401046:	mov    eax,DWORD PTR [ebp+0x8]
  401049:	mov    DWORD PTR [ebp-0x8],eax
  40104c:	mov    ecx,DWORD PTR [ebp+0xc]
  40104f:	mov    DWORD PTR [ebp-0xc],ecx
  401052:	mov    DWORD PTR [ebp-0x4],0x22b
  401059:	mov    edx,DWORD PTR [ebp-0x8]
  40105c:	cmp    edx,DWORD PTR [ebp-0xc]
  40105f:	jae    0x40106f
  401061:	mov    DWORD PTR [ebp-0x4],0x22b
  401068:	mov    eax,DWORD PTR [ebp-0x8]
  40106b:	jmp    0x401079
  40106d:	jmp    0x401079
  40106f:	mov    DWORD PTR [ebp-0x4],0x22b
  401076:	mov    eax,DWORD PTR [ebp-0xc]
  401079:	mov    esp,ebp
  40107b:	pop    ebp
  40107c:	ret    
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	sub    esp,0xc
  401086:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  40108d:	mov    DWORD PTR [ebp-0xc],0x3000
  401094:	mov    DWORD PTR [ebp-0x4],0x40
  40109b:	mov    eax,DWORD PTR [ebp-0x4]
  40109e:	push   eax
  40109f:	mov    ecx,DWORD PTR [ebp-0xc]
  4010a2:	push   ecx
  4010a3:	mov    edx,DWORD PTR [ebp+0x8]
  4010a6:	push   edx
  4010a7:	push   0x0
  4010a9:	push   0xffffffff
  4010ab:	call   DWORD PTR ds:0x42c100
  4010b1:	mov    esp,ebp
  4010b3:	pop    ebp
  4010b4:	ret    
  4010b5:	int3   
  4010b6:	int3   
  4010b7:	int3   
  4010b8:	int3   
  4010b9:	int3   
  4010ba:	int3   
  4010bb:	int3   
  4010bc:	int3   
  4010bd:	int3   
  4010be:	int3   
  4010bf:	int3   
  4010c0:	push   ebp
  4010c1:	mov    ebp,esp
  4010c3:	pop    ebp
  4010c4:	ret    
  4010c5:	int3   
  4010c6:	int3   
  4010c7:	int3   
  4010c8:	int3   
  4010c9:	int3   
  4010ca:	int3   
  4010cb:	int3   
  4010cc:	int3   
  4010cd:	int3   
  4010ce:	int3   
  4010cf:	int3   
  4010d0:	push   ebp
  4010d1:	mov    ebp,esp
  4010d3:	mov    eax,DWORD PTR [ebp+0x8]
  4010d6:	mov    eax,DWORD PTR [eax-0x4]
  4010d9:	pop    ebp
  4010da:	ret    
  4010db:	int3   
  4010dc:	int3   
  4010dd:	int3   
  4010de:	int3   
  4010df:	int3   
  4010e0:	push   ebp
  4010e1:	mov    ebp,esp
  4010e3:	mov    eax,ds:0x42c190
  4010e8:	mov    ecx,DWORD PTR ds:0x42c194
  4010ee:	movzx  eax,WORD PTR [ecx+eax*2]
  4010f2:	pop    ebp
  4010f3:	ret    
  4010f4:	int3   
  4010f5:	int3   
  4010f6:	int3   
  4010f7:	int3   
  4010f8:	int3   
  4010f9:	int3   
  4010fa:	int3   
  4010fb:	int3   
  4010fc:	int3   
  4010fd:	int3   
  4010fe:	int3   
  4010ff:	int3   
  401100:	push   ebp
  401101:	mov    ebp,esp
  401103:	mov    esp,ecx
  401105:	pop    ecx
  401106:	jmp    eax
  401108:	pop    ebp
  401109:	ret    
  40110a:	int3   
  40110b:	int3   
  40110c:	int3   
  40110d:	int3   
  40110e:	int3   
  40110f:	int3   
  401110:	push   ebp
  401111:	mov    ebp,esp
  401113:	sub    esp,0x38
  401116:	mov    DWORD PTR [ebp-0x8],0x11cb
  40111d:	mov    DWORD PTR [ebp-0x8],0xc83e
  401124:	mov    DWORD PTR [ebp-0x10],0x0
  40112b:	jmp    0x401136
  40112d:	mov    eax,DWORD PTR [ebp-0x10]
  401130:	add    eax,0x4
  401133:	mov    DWORD PTR [ebp-0x10],eax
  401136:	mov    ecx,DWORD PTR [ebp-0x10]
  401139:	cmp    ecx,DWORD PTR [ebp+0xc]
  40113c:	jae    0x401236
  401142:	mov    DWORD PTR [ebp-0x8],0xc83e
  401149:	mov    edx,DWORD PTR [ebp-0x10]
  40114c:	add    edx,0x94b
  401152:	mov    DWORD PTR [ebp-0x2c],edx
  401155:	mov    eax,DWORD PTR [ebp-0x2c]
  401158:	mov    DWORD PTR [ebp-0x28],eax
  40115b:	mov    ecx,DWORD PTR [ebp-0x28]
  40115e:	mov    DWORD PTR [ebp-0x24],ecx
  401161:	mov    DWORD PTR [ebp-0x8],0xc83e
  401168:	mov    edx,DWORD PTR [ebp-0x24]
  40116b:	mov    DWORD PTR [ebp-0x20],edx
  40116e:	mov    DWORD PTR [ebp-0x8],0xc83e
  401175:	cmp    DWORD PTR [ebp-0x10],0x0
  401179:	jne    0x4011e8
  40117b:	mov    DWORD PTR [ebp-0x38],0x42c000
  401182:	push   0x104
  401187:	push   0x42c198
  40118c:	call   DWORD PTR ds:0x42c104
  401192:	mov    eax,0x5c
  401197:	mov    ecx,DWORD PTR [ebp-0x38]
  40119a:	mov    WORD PTR [ecx],ax
  40119d:	mov    edx,0x73
  4011a2:	mov    eax,DWORD PTR [ebp-0x38]
  4011a5:	mov    WORD PTR [eax+0x2],dx
  4011a9:	mov    ecx,DWORD PTR [ebp-0x38]
  4011ac:	push   ecx
  4011ad:	push   0x42c198
  4011b2:	call   DWORD PTR ds:0x42c108
  4011b8:	push   0x0
  4011ba:	push   0x80
  4011bf:	push   0x3
  4011c1:	push   0x0
  4011c3:	push   0x3
  4011c5:	push   0x1
  4011c7:	push   0x42c198
  4011cc:	call   DWORD PTR ds:0x42c10c
  4011d2:	mov    DWORD PTR [ebp-0x4],eax
  4011d5:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  4011d9:	je     0x4011e1
  4011db:	cmp    DWORD PTR [ebp-0x4],0x0
  4011df:	jne    0x4011e8
  4011e1:	mov    eax,0x42
  4011e6:	jmp    0x401236
  4011e8:	mov    DWORD PTR [ebp-0x8],0xc83e
  4011ef:	mov    edx,DWORD PTR [ebp-0x20]
  4011f2:	mov    DWORD PTR [ebp-0x34],edx
  4011f5:	mov    DWORD PTR [ebp-0x8],0xc83e
  4011fc:	mov    eax,DWORD PTR [ebp-0x34]
  4011ff:	mov    DWORD PTR [ebp-0x18],eax
  401202:	mov    ecx,DWORD PTR [ebp-0x34]
  401205:	mov    DWORD PTR [ebp-0x14],ecx
  401208:	mov    edx,DWORD PTR [ebp-0x10]
  40120b:	mov    DWORD PTR [ebp-0x1c],edx
  40120e:	mov    eax,DWORD PTR [ebp+0x8]
  401211:	add    eax,DWORD PTR [ebp-0x10]
  401214:	mov    DWORD PTR [ebp-0x30],eax
  401217:	mov    ecx,DWORD PTR [ebp-0x30]
  40121a:	mov    edx,DWORD PTR [ecx]
  40121c:	add    edx,DWORD PTR [ebp-0x1c]
  40121f:	mov    eax,DWORD PTR [ebp-0x30]
  401222:	mov    DWORD PTR [eax],edx
  401224:	mov    ecx,DWORD PTR [ebp-0x30]
  401227:	mov    edx,DWORD PTR [ecx]
  401229:	xor    edx,DWORD PTR [ebp-0x14]
  40122c:	mov    eax,DWORD PTR [ebp-0x30]
  40122f:	mov    DWORD PTR [eax],edx
  401231:	jmp    0x40112d
  401236:	mov    esp,ebp
  401238:	pop    ebp
  401239:	ret    
  40123a:	int3   
  40123b:	int3   
  40123c:	int3   
  40123d:	int3   
  40123e:	int3   
  40123f:	int3   
  401240:	push   ebp
  401241:	mov    ebp,esp
  401243:	sub    esp,0x10
  401246:	cmp    DWORD PTR [ebp+0xc],0x1
  40124a:	jne    0x401254
  40124c:	mov    eax,ds:0x42c29c
  401251:	mov    DWORD PTR [ebp+0xc],eax
  401254:	mov    ecx,DWORD PTR [ebp+0x8]
  401257:	cmp    DWORD PTR [ecx+0x4],0x0
  40125b:	je     0x4012a4
  40125d:	mov    DWORD PTR [ebp-0x10],0x2a1
  401264:	mov    edx,DWORD PTR [ebp+0x8]
  401267:	mov    eax,DWORD PTR [edx+0x4]
  40126a:	sub    eax,0x8
  40126d:	shr    eax,1
  40126f:	mov    DWORD PTR [ebp-0xc],eax
  401272:	mov    ecx,DWORD PTR [ebp+0x8]
  401275:	add    ecx,0x8
  401278:	mov    DWORD PTR ds:0x42c194,ecx
  40127e:	mov    edx,DWORD PTR [ebp+0x8]
  401281:	push   edx
  401282:	mov    eax,DWORD PTR [ebp+0x10]
  401285:	push   eax
  401286:	mov    ecx,DWORD PTR [ebp+0xc]
  401289:	push   ecx
  40128a:	mov    edx,DWORD PTR [ebp-0xc]
  40128d:	push   edx
  40128e:	call   0x4012b0
  401293:	add    esp,0x10
  401296:	mov    eax,DWORD PTR [ebp+0x8]
  401299:	mov    ecx,DWORD PTR [ebp+0x8]
  40129c:	add    ecx,DWORD PTR [eax+0x4]
  40129f:	mov    DWORD PTR [ebp+0x8],ecx
  4012a2:	jmp    0x401254
  4012a4:	mov    esp,ebp
  4012a6:	pop    ebp
  4012a7:	ret    
  4012a8:	int3   
  4012a9:	int3   
  4012aa:	int3   
  4012ab:	int3   
  4012ac:	int3   
  4012ad:	int3   
  4012ae:	int3   
  4012af:	int3   
  4012b0:	push   ebp
  4012b1:	mov    ebp,esp
  4012b3:	sub    esp,0x10
  4012b6:	mov    DWORD PTR ds:0x42c190,0x0
  4012c0:	jmp    0x4012cf
  4012c2:	mov    eax,ds:0x42c190
  4012c7:	add    eax,0x1
  4012ca:	mov    ds:0x42c190,eax
  4012cf:	mov    ecx,DWORD PTR ds:0x42c190
  4012d5:	cmp    ecx,DWORD PTR [ebp+0x8]
  4012d8:	jae    0x401354
  4012da:	mov    edx,DWORD PTR ds:0x42c190
  4012e0:	mov    eax,ds:0x42c194
  4012e5:	movzx  ecx,WORD PTR [eax+edx*2]
  4012e9:	sar    ecx,0xc
  4012ec:	cmp    ecx,0x3
  4012ef:	jne    0x40134f
  4012f1:	mov    DWORD PTR [ebp-0x10],0xfff
  4012f8:	mov    DWORD PTR [ebp-0xc],0x3107
  4012ff:	mov    DWORD PTR [ebp-0xc],0x3107
  401306:	mov    edx,DWORD PTR ds:0x42c190
  40130c:	mov    eax,ds:0x42c194
  401311:	movzx  ecx,WORD PTR [eax+edx*2]
  401315:	and    ecx,DWORD PTR [ebp-0x10]
  401318:	add    ecx,0x2d23
  40131e:	mov    DWORD PTR [ebp-0x8],ecx
  401321:	mov    DWORD PTR [ebp-0xc],0x3107
  401328:	mov    edx,DWORD PTR [ebp+0x14]
  40132b:	mov    eax,DWORD PTR [ebp+0xc]
  40132e:	add    eax,DWORD PTR [edx]
  401330:	mov    ecx,DWORD PTR [ebp-0x8]
  401333:	mov    edx,DWORD PTR [eax+ecx*1-0x2d23]
  40133a:	add    edx,DWORD PTR [ebp+0x10]
  40133d:	mov    eax,DWORD PTR [ebp+0x14]
  401340:	mov    ecx,DWORD PTR [ebp+0xc]
  401343:	add    ecx,DWORD PTR [eax]
  401345:	mov    eax,DWORD PTR [ebp-0x8]
  401348:	mov    DWORD PTR [ecx+eax*1-0x2d23],edx
  40134f:	jmp    0x4012c2
  401354:	mov    esp,ebp
  401356:	pop    ebp
  401357:	ret    
  401358:	int3   
  401359:	int3   
  40135a:	int3   
  40135b:	int3   
  40135c:	int3   
  40135d:	int3   
  40135e:	int3   
  40135f:	int3   
  401360:	push   ebp
  401361:	mov    ebp,esp
  401363:	sub    esp,0x22c
  401369:	mov    DWORD PTR [ebp-0x220],0x7c
  401373:	mov    DWORD PTR [ebp-0x214],0x0
  40137d:	mov    DWORD PTR [ebp-0x228],0x0
  401387:	jmp    0x401398
  401389:	mov    eax,DWORD PTR [ebp-0x228]
  40138f:	add    eax,0x1
  401392:	mov    DWORD PTR [ebp-0x228],eax
  401398:	mov    ecx,DWORD PTR [ebp-0x228]
  40139e:	cmp    ecx,DWORD PTR [ebp+0x10]
  4013a1:	jge    0x4013dc
  4013a3:	mov    edx,DWORD PTR [ebp+0xc]
  4013a6:	add    edx,DWORD PTR [ebp-0x228]
  4013ac:	movzx  eax,BYTE PTR [edx]
  4013af:	mov    DWORD PTR [ebp-0x22c],eax
  4013b5:	mov    DWORD PTR [ebp-0x220],0x7c
  4013bf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013c2:	add    ecx,DWORD PTR [ebp-0x228]
  4013c8:	mov    dl,BYTE PTR [ebp-0x22c]
  4013ce:	mov    BYTE PTR [ecx],dl
  4013d0:	mov    DWORD PTR [ebp-0x220],0x33
  4013da:	jmp    0x401389
  4013dc:	mov    esp,ebp
  4013de:	pop    ebp
  4013df:	ret    
  4013e0:	push   ebp
  4013e1:	mov    ebp,esp
  4013e3:	pop    ebp
  4013e4:	ret    0x10
  4013e7:	int3   
  4013e8:	int3   
  4013e9:	int3   
  4013ea:	int3   
  4013eb:	int3   
  4013ec:	int3   
  4013ed:	int3   
  4013ee:	int3   
  4013ef:	int3   
  4013f0:	push   ebp
  4013f1:	mov    ebp,esp
  4013f3:	sub    esp,0xd0
  4013f9:	push   ebx
  4013fa:	push   esi
  4013fb:	push   edi
  4013fc:	mov    DWORD PTR ds:0x42c2a0,ebp
  401402:	pusha  
  401403:	mov    DWORD PTR [ebp-0x8c],0x0
  40140d:	mov    DWORD PTR [ebp-0xa0],0x80000002
  401417:	mov    eax,ds:0x42c114
  40141c:	mov    DWORD PTR [ebp-0xb8],eax
  401422:	mov    ecx,DWORD PTR ds:0x42c114
  401428:	mov    DWORD PTR [ebp-0xbc],ecx
  40142e:	mov    DWORD PTR [ebp-0xb0],0x42c030
  401438:	mov    edx,DWORD PTR [ebp-0xbc]
  40143e:	movzx  eax,BYTE PTR [edx]
  401441:	cmp    eax,0x8b
  401446:	je     0x40145d
  401448:	mov    ecx,DWORD PTR [ebp-0xbc]
  40144e:	movzx  edx,BYTE PTR [ecx]
  401451:	cmp    edx,0x55
  401454:	je     0x40145d
  401456:	xor    eax,eax
  401458:	jmp    0x401775
  40145d:	mov    eax,0x53
  401462:	mov    ecx,DWORD PTR [ebp-0xb0]
  401468:	mov    WORD PTR [ecx+0x4],ax
  40146c:	mov    edx,0x49
  401471:	mov    eax,DWORD PTR [ebp-0xb0]
  401477:	mov    WORD PTR [eax+0x6],dx
  40147b:	lea    ecx,[ebp-0xb4]
  401481:	push   ecx
  401482:	mov    edx,DWORD PTR [ebp-0xb0]
  401488:	push   edx
  401489:	push   0x80000000
  40148e:	call   DWORD PTR [ebp-0xb8]
  401494:	test   eax,eax
  401496:	je     0x40149d
  401498:	call   0x4013f0
  40149d:	call   0x401000
  4014a2:	mov    DWORD PTR [ebp-0x80],0x64
  4014a9:	mov    DWORD PTR [ebp-0x1c],0x28
  4014b0:	mov    DWORD PTR [ebp-0x8c],0x0
  4014ba:	mov    DWORD PTR [ebp-0x54],0x0
  4014c1:	mov    DWORD PTR [ebp-0x7c],0x1
  4014c8:	mov    DWORD PTR [ebp-0x14],0x0
  4014cf:	mov    DWORD PTR [ebp-0x80],0x64
  4014d6:	mov    DWORD PTR [ebp-0x1c],0x28
  4014dd:	mov    DWORD PTR [ebp-0x8c],0x0
  4014e7:	mov    DWORD PTR [ebp-0x54],0x0
  4014ee:	mov    DWORD PTR [ebp-0x7c],0x1
  4014f5:	mov    DWORD PTR [ebp-0x18],0x3
  4014fc:	mov    DWORD PTR [ebp-0x14],0x0
  401503:	mov    DWORD PTR [ebp-0x80],0x64
  40150a:	mov    DWORD PTR [ebp-0x1c],0x28
  401511:	mov    DWORD PTR [ebp-0x8c],0x0
  40151b:	mov    DWORD PTR [ebp-0x54],0x0
  401522:	mov    DWORD PTR [ebp-0x7c],0x1
  401529:	mov    DWORD PTR [ebp-0x18],0x3
  401530:	mov    eax,ds:0x42c18c
  401535:	push   eax
  401536:	call   0x4010d0
  40153b:	add    esp,0x4
  40153e:	mov    DWORD PTR [ebp-0x90],eax
  401544:	mov    ecx,DWORD PTR [ebp-0x90]
  40154a:	push   ecx
  40154b:	call   0x401080
  401550:	add    esp,0x4
  401553:	mov    DWORD PTR [ebp-0x88],eax
  401559:	mov    edx,DWORD PTR [ebp-0x90]
  40155f:	push   edx
  401560:	push   0x0
  401562:	mov    eax,DWORD PTR [ebp-0x88]
  401568:	push   eax
  401569:	call   0x4010c0
  40156e:	add    esp,0xc
  401571:	mov    ecx,DWORD PTR [ebp-0x90]
  401577:	mov    DWORD PTR [ebp-0x98],ecx
  40157d:	mov    edx,DWORD PTR [ebp-0x8c]
  401583:	cmp    edx,DWORD PTR [ebp-0x90]
  401589:	jae    0x4015f8
  40158b:	mov    eax,DWORD PTR [ebp-0x98]
  401591:	push   eax
  401592:	mov    ecx,DWORD PTR [ebp-0x80]
  401595:	push   ecx
  401596:	call   0x401040
  40159b:	add    esp,0x8
  40159e:	mov    DWORD PTR [ebp-0x9c],eax
  4015a4:	mov    edx,DWORD PTR [ebp-0x9c]
  4015aa:	push   edx
  4015ab:	mov    eax,ds:0x42c18c
  4015b0:	add    eax,DWORD PTR [ebp-0x54]
  4015b3:	push   eax
  4015b4:	mov    ecx,DWORD PTR [ebp-0x88]
  4015ba:	add    ecx,DWORD PTR [ebp-0x8c]
  4015c0:	push   ecx
  4015c1:	call   0x401360
  4015c6:	add    esp,0xc
  4015c9:	mov    edx,DWORD PTR [ebp-0x1c]
  4015cc:	add    edx,DWORD PTR [ebp-0x80]
  4015cf:	add    edx,DWORD PTR [ebp-0x54]
  4015d2:	mov    DWORD PTR [ebp-0x54],edx
  4015d5:	mov    eax,DWORD PTR [ebp-0x8c]
  4015db:	add    eax,DWORD PTR [ebp-0x80]
  4015de:	mov    DWORD PTR [ebp-0x8c],eax
  4015e4:	mov    ecx,DWORD PTR [ebp-0x98]
  4015ea:	sub    ecx,DWORD PTR [ebp-0x9c]
  4015f0:	mov    DWORD PTR [ebp-0x98],ecx
  4015f6:	jmp    0x40157d
  4015f8:	mov    edx,DWORD PTR [ebp-0x90]
  4015fe:	push   edx
  4015ff:	mov    eax,DWORD PTR [ebp-0x88]
  401605:	push   eax
  401606:	call   0x401110
  40160b:	add    esp,0x8
  40160e:	mov    DWORD PTR [ebp-0x54],0x0
  401615:	mov    DWORD PTR [ebp-0xc0],0x0
  40161f:	call   0x401020
  401624:	mov    ecx,DWORD PTR ds:0x42c18c
  40162a:	push   ecx
  40162b:	call   0x4010d0
  401630:	add    esp,0x4
  401633:	mov    DWORD PTR [ebp-0xc4],eax
  401639:	mov    edx,DWORD PTR [ebp-0xc4]
  40163f:	push   edx
  401640:	call   0x401080
  401645:	add    esp,0x4
  401648:	mov    DWORD PTR [ebp-0x50],eax
  40164b:	mov    eax,DWORD PTR [ebp-0xc4]
  401651:	push   eax
  401652:	push   0x0
  401654:	mov    ecx,DWORD PTR [ebp-0x50]
  401657:	push   ecx
  401658:	call   0x4010c0
  40165d:	add    esp,0xc
  401660:	mov    edx,DWORD PTR [ebp-0xc4]
  401666:	mov    DWORD PTR [ebp-0xcc],edx
  40166c:	mov    eax,DWORD PTR [ebp-0xc0]
  401672:	cmp    eax,DWORD PTR [ebp-0xc4]
  401678:	jae    0x4016e5
  40167a:	mov    ecx,DWORD PTR [ebp-0xcc]
  401680:	push   ecx
  401681:	mov    edx,DWORD PTR [ebp-0x80]
  401684:	push   edx
  401685:	call   0x401040
  40168a:	add    esp,0x8
  40168d:	mov    DWORD PTR [ebp-0xd0],eax
  401693:	mov    eax,DWORD PTR [ebp-0xd0]
  401699:	push   eax
  40169a:	mov    ecx,DWORD PTR ds:0x42c18c
  4016a0:	add    ecx,DWORD PTR [ebp-0x54]
  4016a3:	push   ecx
  4016a4:	mov    edx,DWORD PTR [ebp-0x50]
  4016a7:	add    edx,DWORD PTR [ebp-0xc0]
  4016ad:	push   edx
  4016ae:	call   0x401360
  4016b3:	add    esp,0xc
  4016b6:	mov    eax,DWORD PTR [ebp-0x1c]
  4016b9:	add    eax,DWORD PTR [ebp-0x80]
  4016bc:	add    eax,DWORD PTR [ebp-0x54]
  4016bf:	mov    DWORD PTR [ebp-0x54],eax
  4016c2:	mov    ecx,DWORD PTR [ebp-0xc0]
  4016c8:	add    ecx,DWORD PTR [ebp-0x80]
  4016cb:	mov    DWORD PTR [ebp-0xc0],ecx
  4016d1:	mov    edx,DWORD PTR [ebp-0xcc]
  4016d7:	sub    edx,DWORD PTR [ebp-0xd0]
  4016dd:	mov    DWORD PTR [ebp-0xcc],edx
  4016e3:	jmp    0x40166c
  4016e5:	mov    eax,DWORD PTR [ebp-0xc4]
  4016eb:	push   eax
  4016ec:	mov    ecx,DWORD PTR [ebp-0x50]
  4016ef:	push   ecx
  4016f0:	call   0x401110
  4016f5:	add    esp,0x8
  4016f8:	mov    edx,DWORD PTR [ebp-0x88]
  4016fe:	mov    eax,DWORD PTR [ebp-0x50]
  401701:	mov    DWORD PTR [edx],eax
  401703:	push   0x17000
  401708:	call   0x401080
  40170d:	add    esp,0x4
  401710:	mov    ds:0x42c29c,eax
  401715:	push   0x15500
  40171a:	mov    ecx,DWORD PTR [ebp-0x88]
  401720:	push   ecx
  401721:	mov    edx,DWORD PTR ds:0x42c29c
  401727:	add    edx,0x200
  40172d:	push   edx
  40172e:	call   0x401360
  401733:	add    esp,0xc
  401736:	mov    eax,ds:0x42c29c
  40173b:	sub    eax,0x400000
  401740:	mov    DWORD PTR [ebp-0xc],eax
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	push   ecx
  401747:	push   0x1
  401749:	mov    edx,DWORD PTR [ebp-0x50]
  40174c:	push   edx
  40174d:	call   0x401240
  401752:	add    esp,0xc
  401755:	popa   
  401756:	mov    eax,ds:0x42c2a0
  40175b:	mov    ecx,eax
  40175d:	xor    eax,eax
  40175f:	je     0x401762
  401761:	ret    
  401762:	mov    eax,ds:0x42c29c
  401767:	add    eax,0x15350
  40176c:	xor    edx,edx
  40176e:	dec    edx
  40176f:	jne    0x401100
  401775:	pop    edi
  401776:	pop    esi
  401777:	pop    ebx
  401778:	mov    esp,ebp
  40177a:	pop    ebp
  40177b:	ret    
	...
  40dacc:	add    BYTE PTR [edx],al
  40dace:	add    BYTE PTR [eax],al
  40dad0:	dec    ebx
  40dad1:	or     DWORD PTR [eax],eax
  40dad3:	add    BYTE PTR [ebx+0x9],dl
  40dad6:	add    BYTE PTR [eax],al
  40dad8:	xlat   BYTE PTR ds:[ebx]
  40dad9:	cmp    edx,DWORD PTR [eax-0x67c448ce]
  40dadf:	xor    dh,BYTE PTR [edi-0x18cd5fc5]
  40dae5:	cmp    ebp,DWORD PTR [eax+0x1494b32]
  40daeb:	add    BYTE PTR [ebx],bl
  40daed:	or     DWORD PTR [eax],eax
  40daef:	add    BYTE PTR [eax+0x33],ch
  40daf2:	dec    ebx
  40daf3:	cmp    ebx,DWORD PTR [ebx]
  40daf5:	xor    bl,BYTE PTR [edx+0x3b]
  40daf8:	add    al,0x32
  40dafa:	push   0x9331ed3b
  40daff:	cmp    esi,DWORD PTR [ebp-0x78c457ce]
  40db05:	xor    ch,ch
  40db07:	cmp    edx,DWORD PTR [eax+0x35]
  40db0a:	adc    DWORD PTR [edx+eiz*2],edi
  40db0d:	xor    eax,0x33ef3c9d
  40db12:	xchg   DWORD PTR [esi],edi
  40db14:	mov    esi,0xf3e9536
  40db19:	aaa    
  40db1a:	int    0x3e
  40db1c:	and    al,0x37
  40db1e:	jle    0x40db5f
  40db20:	enter  0x9b35,0x3f
  40db24:	loop   0x40db5b
  40db26:	scas   eax,DWORD PTR es:[edi]
  40db27:	aas    
  40db28:	les    esi,FWORD PTR ds:0x36193fcc
  40db2e:	out    0x3f,al
  40db30:	cli    
  40db31:	xor    eax,0x3ff9
	...
  40db5a:	add    BYTE PTR [eax],al
  40db5c:	in     al,dx
  40db5d:	xor    eax,0x594b0000
  40db62:	add    DWORD PTR [eax],eax
  40db64:	xchg   edi,eax
  40db65:	or     BYTE PTR [eax],al
  40db67:	add    BYTE PTR [esi+0x39],cl
  40db6a:	sbb    BYTE PTR [eax],dh
  40db6c:	retf   0x8738
  40db6f:	xor    BYTE PTR ds:0x1e314b38,cl
  40db75:	cmp    BYTE PTR [esi+0x31],ah
  40db78:	cmp    edi,DWORD PTR [eax]
  40db7a:	lea    esi,[ecx]
  40db7c:	out    0x37,eax
  40db7e:	stos   BYTE PTR es:[edi],al
  40db7f:	xor    DWORD PTR [ecx+0x4d31e137],ecx
  40db85:	cmp    edx,DWORD PTR [edi]
  40db87:	xor    dh,BYTE PTR [edi]
  40db89:	cmp    esp,DWORD PTR [ebx]
  40db8b:	xor    dl,BYTE PTR [edx+0x3b]
  40db8e:	inc    edx
  40db8f:	xor    dl,BYTE PTR [ebx]
  40db91:	cmp    edx,DWORD PTR [ecx+0x32]
  40db94:	adc    al,0x3b
  40db96:	pop    esi
  40db97:	xor    ah,dh
  40db99:	cmp    bh,BYTE PTR [ebp+0x32]
  40db9c:	leave  
  40db9d:	cmp    dl,BYTE PTR [edx+esi*1+0x32a73ac6]
  40dba4:	xchg   ebp,eax
  40dba5:	cmp    al,dl
  40dba7:	xor    bh,BYTE PTR [ebx+0x3a]
  40dbaa:	or     BYTE PTR [ebx],dh
  40dbac:	cmp    eax,0x6e33143a
  40dbb1:	cmp    BYTE PTR [edx],ch
  40dbb3:	xor    ecx,DWORD PTR [ecx-0x3ccc81c8]
  40dbb9:	cmp    BYTE PTR [ebp-0x54c715cd],dl
  40dbbf:	xor    eax,DWORD PTR [eax]
	...
  40dbe5:	add    BYTE PTR [eax],al
  40dbe7:	add    bh,bl
  40dbe9:	cmp    BYTE PTR [esi-0x31c6edcd],bh
  40dbef:	xor    edi,edi
  40dbf1:	cmp    ch,bl
  40dbf3:	xor    ebx,DWORD PTR [ecx+edi*1]
  40dbf6:	hlt    
  40dbf7:	xor    eax,DWORD PTR [ecx]
  40dbf9:	cmp    edi,edi
  40dbfb:	xor    eax,DWORD PTR [esi+0x3d]
  40dbfe:	or     DWORD PTR [eax*2+0x2934143d],esi
  40dc05:	cmp    eax,0x3d363428
  40dc0a:	xor    dh,BYTE PTR [esp+ecx*4]
  40dc0d:	cmp    eax,0x3dcd345a
  40dc12:	mov    WORD PTR [ecx+edi*4],?
  40dc15:	cmp    eax,0x3d8d349c
  40dc1a:	jmp    0x40dc50
  40dc1c:	ret    
  40dc1d:	cmp    eax,0x3e5d350c
  40dc22:	and    esi,DWORD PTR ds:0x35313e62
  40dc28:	bound  edi,QWORD PTR [esi]
  40dc2a:	inc    esp
  40dc2b:	xor    eax,0x355d3e0f
  40dc30:	sub    DWORD PTR [esi],edi
  40dc32:	jno    0x40dc69
  40dc34:	(bad)  
  40dc35:	mov    ?,WORD PTR ds:0x35a53edd
  40dc3c:	dec    ebx
  40dc3d:	or     DWORD PTR [eax],eax
  40dc3f:	add    BYTE PTR [ebx+0x9],cl
  40dc42:	add    BYTE PTR [eax],al
  40dc44:	dec    ebx
  40dc45:	or     DWORD PTR [eax],eax
  40dc47:	add    BYTE PTR [ebx+0x9],cl
	...
  40dc72:	add    BYTE PTR [eax],al
  40dc74:	dec    ebx
  40dc75:	or     DWORD PTR [eax],eax
  40dc77:	add    BYTE PTR [ebx+0x9],cl
  40dc7a:	add    BYTE PTR [eax],al
  40dc7c:	dec    ebx
  40dc7d:	or     DWORD PTR [eax],eax
  40dc7f:	add    BYTE PTR [ebx+0x9],cl
  40dc82:	add    BYTE PTR [eax],al
  40dc84:	dec    ebx
  40dc85:	or     DWORD PTR [eax],eax
  40dc87:	add    BYTE PTR [ebx+0x9],cl
  40dc8a:	add    BYTE PTR [eax],al
  40dc8c:	dec    ebx
  40dc8d:	or     DWORD PTR [eax],eax
  40dc8f:	add    BYTE PTR [ebx+0x9],cl
  40dc92:	add    BYTE PTR [eax],al
  40dc94:	dec    ebx
  40dc95:	or     DWORD PTR [eax],eax
  40dc97:	add    BYTE PTR [ebx+0x9],cl
  40dc9a:	add    BYTE PTR [eax],al
  40dc9c:	dec    ebx
  40dc9d:	or     DWORD PTR [eax],eax
  40dc9f:	add    BYTE PTR [ebx+0x9],cl
  40dca2:	add    BYTE PTR [eax],al
  40dca4:	dec    ebx
  40dca5:	or     DWORD PTR [eax],eax
  40dca7:	add    BYTE PTR [ebx+0x9],cl
  40dcaa:	add    BYTE PTR [eax],al
  40dcac:	dec    ebx
  40dcad:	or     DWORD PTR [eax],eax
  40dcaf:	add    BYTE PTR [ebx+0x9],cl
  40dcb2:	add    BYTE PTR [eax],al
  40dcb4:	dec    ebx
  40dcb5:	or     DWORD PTR [eax],eax
  40dcb7:	add    BYTE PTR [ebx+0x9],cl
  40dcba:	add    BYTE PTR [eax],al
  40dcbc:	dec    ebx
  40dcbd:	or     DWORD PTR [eax],eax
  40dcbf:	add    BYTE PTR [ebx+0x9],cl
  40dcc2:	add    BYTE PTR [eax],al
  40dcc4:	dec    ebx
  40dcc5:	or     DWORD PTR [eax],eax
  40dcc7:	add    BYTE PTR [ebx+0x9],cl
  40dcca:	add    BYTE PTR [eax],al
  40dccc:	dec    ebx
  40dccd:	or     DWORD PTR [eax],eax
  40dccf:	add    BYTE PTR [ebx+0x9],cl
  40dcd2:	add    BYTE PTR [eax],al
  40dcd4:	dec    ebx
  40dcd5:	or     DWORD PTR [eax],eax
	...
  40dcff:	add    BYTE PTR [ebx+0x9],cl
  40dd02:	add    BYTE PTR [eax],al
  40dd04:	dec    ebx
  40dd05:	or     DWORD PTR [eax],eax
  40dd07:	add    BYTE PTR [ebx+0x9],cl
  40dd0a:	add    BYTE PTR [eax],al
  40dd0c:	dec    ebx
  40dd0d:	or     DWORD PTR [eax],eax
  40dd0f:	add    BYTE PTR [ebx+0x9],cl
  40dd12:	add    BYTE PTR [eax],al
  40dd14:	dec    ebx
  40dd15:	or     DWORD PTR [eax],eax
  40dd17:	add    BYTE PTR [ebx+0x9],cl
  40dd1a:	add    BYTE PTR [eax],al
  40dd1c:	dec    ebx
  40dd1d:	or     DWORD PTR [eax],eax
  40dd1f:	add    BYTE PTR [ebx+0x9],cl
  40dd22:	add    BYTE PTR [eax],al
  40dd24:	dec    ebx
  40dd25:	or     DWORD PTR [eax],eax
  40dd27:	add    BYTE PTR [ebx+0x9],cl
  40dd2a:	add    BYTE PTR [eax],al
  40dd2c:	dec    ebx
  40dd2d:	or     DWORD PTR [eax],eax
  40dd2f:	add    BYTE PTR [ebx+0x9],cl
  40dd32:	add    BYTE PTR [eax],al
  40dd34:	dec    ebx
  40dd35:	or     DWORD PTR [eax],eax
  40dd37:	add    BYTE PTR [ebx+0x9],cl
  40dd3a:	add    BYTE PTR [eax],al
  40dd3c:	dec    ebx
  40dd3d:	or     DWORD PTR [eax],eax
  40dd3f:	add    BYTE PTR [ebx+0x9],cl
  40dd42:	add    BYTE PTR [eax],al
  40dd44:	dec    ebx
  40dd45:	or     DWORD PTR [eax],eax
  40dd47:	add    BYTE PTR [ebx+0x9],cl
  40dd4a:	add    BYTE PTR [eax],al
  40dd4c:	dec    ebx
  40dd4d:	or     DWORD PTR [eax],eax
  40dd4f:	add    BYTE PTR [ebx+0x9],cl
  40dd52:	add    BYTE PTR [eax],al
  40dd54:	dec    ebx
  40dd55:	or     DWORD PTR [eax],eax
  40dd57:	add    BYTE PTR [ebx+0x9],cl
  40dd5a:	add    BYTE PTR [eax],al
  40dd5c:	dec    ebx
  40dd5d:	or     DWORD PTR [eax],eax
  40dd5f:	add    BYTE PTR [ebx+0x9],cl
	...
  40dd8a:	add    BYTE PTR [eax],al
  40dd8c:	dec    ebx
  40dd8d:	or     DWORD PTR [eax],eax
  40dd8f:	add    BYTE PTR [ebx+0x9],cl
  40dd92:	add    BYTE PTR [eax],al
  40dd94:	dec    ebx
  40dd95:	or     DWORD PTR [eax],eax
  40dd97:	add    BYTE PTR [eax],al
  40dd99:	push   ebp
  40dd9a:	add    DWORD PTR [eax],eax
  40dd9c:	dec    ebx
  40dd9d:	pop    esi
  40dd9e:	inc    ecx
  40dd9f:	add    BYTE PTR [esp+ebp*2],al
  40dda2:	je     0x40ddf4
  40dda4:	sbb    DWORD PTR [esi+0x63],esp
  40dda7:	inc    ecx
  40dda8:	daa    
  40dda9:	ins    DWORD PTR es:[edi],dx
  40ddaa:	jb     0x40de11
  40ddac:	sbb    BYTE PTR [edx+0x0],bh
  40ddaf:	add    bh,bh
  40ddb1:	gs popa 
  40ddb3:	fs pop ss
  40ddb5:	pusha  
  40ddb6:	bound  esi,QWORD PTR [edx-0x16]
  40ddb9:	jp     0x40de34
  40ddbb:	inc    ebp
  40ddbc:	repz inc edi
  40ddbe:	add    BYTE PTR [eax],al
  40ddc0:	jmp    DWORD PTR [ebp+0x61]
  40ddc3:	fs pop ss
  40ddc5:	pusha  
  40ddc6:	bound  esi,QWORD PTR [edx-0x16]
  40ddc9:	jp     0x40de44
  40ddcb:	inc    ebp
  40ddcc:	rcr    DWORD PTR [ebp+0x0],cl
  40ddcf:	add    BYTE PTR [esp+ebp*2],al
  40ddd2:	je     0x40de21
  40ddd4:	mov    ah,0x6d
  40ddd6:	jne    0x40de44
  40ddd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddd9:	inc    ecx
  40ddda:	popa   
  40dddb:	outs   dx,BYTE PTR ds:[esi]
  40dddc:	scas   eax,DWORD PTR es:[edi]
  40dddd:	gs gs inc ecx
  40dde0:	dec    ebx
  40dde1:	or     DWORD PTR [eax],eax
  40dde3:	add    BYTE PTR [eax-0x689e9a85],cl
  40dde9:	ins    BYTE PTR es:[edi],dx
  40ddea:	inc    esi
  40ddeb:	imul   esp,DWORD PTR [edi-0x60ffbe94],0x6872747a
  40ddf5:	push   0x94b4174
  40ddfa:	add    BYTE PTR [eax],al
  40ddfc:	mov    WORD PTR [esp+esi*2+0x57],gs
	...
  40de28:	bound  esp,QWORD PTR [edi+0x64]
  40de2b:	outs   dx,DWORD PTR ds:[esi]
  40de2c:	pop    esp
  40de2d:	jp     0x40de73
  40de2f:	imul   ebx,DWORD PTR [ecx+0x6c],0x7b647463
  40de36:	jns    0x40de79
  40de38:	dec    ebx
  40de39:	or     DWORD PTR [eax],eax
  40de3b:	add    BYTE PTR [esp+ebp*2],cl
  40de3e:	je     0x40de8d
  40de40:	sub    al,0x6d
  40de42:	jne    0x40deb0
  40de44:	cs inc ecx
  40de46:	popa   
  40de47:	outs   dx,BYTE PTR ds:[esi]
  40de48:	daa    
  40de49:	gs gs push edi
  40de4c:	dec    ebx
  40de4d:	or     DWORD PTR [eax],eax
  40de4f:	add    BYTE PTR [edi+0xb],al
  40de52:	inc    eax
  40de53:	add    BYTE PTR [edi],bh
  40de55:	or     eax,DWORD PTR [eax+0x0]
  40de58:	or     eax,DWORD PTR [bx+si+0x0]
  40de5c:	aas    
  40de5d:	or     eax,DWORD PTR [eax+0x0]
  40de60:	adc    ecx,DWORD PTR [ebx]
  40de62:	inc    eax
  40de63:	add    BYTE PTR [edi],bl
  40de65:	or     eax,DWORD PTR [eax+0x0]
  40de68:	jmp    0x40de74
  40de6a:	inc    eax
  40de6b:	add    bl,ah
  40de6d:	or     al,BYTE PTR [eax+0x0]
  40de70:	add    al,0x6c
  40de72:	je     0x40dec4
  40de74:	fldenv [ebp+0x63]
  40de77:	inc    ecx
  40de78:	out    0x6c,eax
  40de7a:	jb     0x40dee1
  40de7c:	mov    eax,0x8f000078
  40de81:	fs popa 
  40de83:	xchg   DWORD PTR fs:[edx+0x62],esp
  40de87:	jb     0x40de33
  40de89:	ja     0x40df04
  40de8b:	inc    ebp
	...
  40deb4:	mov    ds:0xb000004a,eax
  40deb9:	outs   dx,BYTE PTR ds:[esi]
  40deba:	jb     0x40df2a
  40debc:	scas   al,BYTE PTR es:[edi]
  40debd:	xor    esi,DWORD PTR gs:[edx]
  40dec0:	pop    ebp
  40dec1:	ins    DWORD PTR es:[edi],dx
  40dec2:	ins    BYTE PTR es:[edi],dx
  40dec3:	ins    BYTE PTR es:[edi],dx
  40dec4:	dec    ebx
  40dec5:	or     DWORD PTR [eax],eax
  40dec7:	add    BYTE PTR [esi+0x78],ch
  40deca:	jbe    0x40df2f
  40decc:	jns    0x40df4b
  40dece:	cs fs pop edi
  40ded1:	add    BYTE PTR gs:[eax],al
  40ded4:	jbe    0x40df44
  40ded6:	ins    DWORD PTR es:[edi],dx
  40ded7:	jae    0x40df3f
  40ded9:	jge    0x40dedb
  40dedb:	add    BYTE PTR [esi+0x78],ah
  40dede:	jbe    0x40df43
  40dee0:	pop    ecx
  40dee1:	jge    0x40df11
  40dee3:	fs aaa 
  40dee5:	add    BYTE PTR gs:[eax],al
  40dee8:	outs   dx,BYTE PTR cs:[esi]
  40deea:	ins    DWORD PTR es:[edi],dx
  40deeb:	arpl   WORD PTR [ebx],di
  40deed:	jb     0x40deef
  40deef:	add    BYTE PTR ds:0x1e747262,dl
  40def5:	push   0x6c
  40def7:	inc    ecx
  40def8:	das    
  40def9:	outs   dx,DWORD PTR gs:[esi]
  40defb:	arpl   WORD PTR [ebx+0x9],cx
  40defe:	add    BYTE PTR [eax],al
  40df00:	cmc    
  40df01:	popa   
  40df02:	jb     0x40df78
  40df04:	(bad)  
  40df05:	imul   ebp,DWORD PTR [ecx+eax*2-0x11],0x4b636f64
  40df0d:	or     DWORD PTR [eax],eax
  40df0f:	add    BYTE PTR [esi],dl
  40df11:	arpl   WORD PTR [ebp+0x61],bp
  40df14:	fistp  DWORD PTR [edx+0x69]
  40df17:	add    BYTE PTR gs:[eax],al
	...
  40df3e:	add    BYTE PTR [eax],al
  40df40:	aam    0x43
  40df42:	inc    si
  40df44:	loop   0x40dfaa
  40df46:	gs add ch,dh
  40df49:	popa   
  40df4a:	jb     0x40dfc0
  40df4c:	mov    esi,0xb9506c6a
  40df51:	fs je  0x40dfb9
  40df54:	test   al,0x7d
  40df56:	add    BYTE PTR [eax],al
  40df58:	sub    DWORD PTR [esi+0x61],0x70
  40df5c:	mov    ah,BYTE PTR [ebp+0x6c]
  40df5f:	outs   dx,DWORD PTR ds:[esi]
  40df60:	test   al,0x9
  40df62:	add    BYTE PTR [eax],al
  40df64:	mov    al,ds:0xa66e726e
  40df69:	xor    esi,DWORD PTR gs:[edx]
  40df6c:	xor    eax,0x4b6c6c6d
  40df71:	or     DWORD PTR [eax],eax
  40df73:	add    BYTE PTR [esi+ebp*2+0x64795074],cl
  40df7a:	arpl   WORD PTR [ebp+0x58],sp
  40df7d:	js     0x40dfc7
  40df7f:	gs push 0x79
  40df82:	add    BYTE PTR [eax],al
  40df84:	dec    ebx
  40df85:	or     DWORD PTR [ecx+eax*1+0x4b],eax
  40df89:	lods   eax,DWORD PTR ds:[esi]
  40df8a:	pop    ecx
  40df8b:	nop
  40df8c:	dec    ebx
  40df8d:	fild   WORD PTR [ebx]
  40df8f:	add    BYTE PTR [ebx-0x1a],cl
  40df92:	add    eax,DWORD PTR [eax]
  40df94:	dec    ebx
  40df95:	repz sti 
  40df97:	add    BYTE PTR [ebx+0x3a],cl
  40df9a:	add    eax,DWORD PTR [eax]
  40df9c:	dec    ebx
  40df9d:	loop   0x40dfa2
  40df9f:	add    BYTE PTR [ebx+0x22],cl
  40dfa2:	add    al,0x0
	...
  40dfcc:	dec    ebx
  40dfcd:	loop   0x40dfd2
  40dfcf:	add    BYTE PTR [ebx-0x1e],cl
  40dfd2:	add    eax,DWORD PTR [eax]
  40dfd4:	dec    ebx
  40dfd5:	loop   0x40dfda
  40dfd7:	add    BYTE PTR [ebx-0x1e],cl
  40dfda:	add    eax,DWORD PTR [eax]
  40dfdc:	dec    ebx
  40dfdd:	loop   0x40dfe2
  40dfdf:	add    BYTE PTR [ebx-0x1e],cl
  40dfe2:	add    eax,DWORD PTR [eax]
  40dfe4:	dec    ebx
  40dfe5:	loop   0x40dfea
  40dfe7:	add    BYTE PTR [ebx-0x1e],cl
  40dfea:	add    eax,DWORD PTR [eax]
  40dfec:	dec    ebx
  40dfed:	bound  eax,QWORD PTR [eax+eax*1]
  40dff0:	dec    ebx
  40dff1:	in     al,dx
  40dff2:	sbb    bh,BYTE PTR [edx+0x9afe055]
  40dff8:	push   cs
  40dff9:	ret    0x1bb
  40dffc:	xchg   DWORD PTR [ebp+0x9a35425],esp
  40e002:	ja     0x40e024
  40e004:	fwait
  40e005:	out    dx,al
  40e006:	push   0x67
  40e008:	cdq    
  40e009:	shr    DWORD PTR [eax+0x20],0xa8
  40e00d:	shr    DWORD PTR [ecx+0x6e],0x9c
  40e011:	aam    0x23
  40e013:	bound  ebp,QWORD PTR [esi+0x0]
  40e016:	jbe    0x40e08d
  40e018:	ins    DWORD PTR es:[edi],dx
  40e019:	add    BYTE PTR [ebp+0x6e],ch
  40e01c:	sub    ebp,DWORD PTR [edx+ecx*2+0x6acd2b53]
  40e023:	outs   dx,BYTE PTR fs:[esi]
  40e025:	repnz or BYTE PTR ds:0x3cd0951,cl
  40e02c:	dec    ebx
  40e02d:	or     ecx,ebp
  40e02f:	add    eax,DWORD PTR [eax]
	...
  40e055:	add    BYTE PTR [eax],al
  40e057:	add    BYTE PTR [ebx+0x9],cl
  40e05a:	mov    ecx,0x9d094b40
  40e05f:	add    al,0x48
  40e061:	or     DWORD PTR [edi+0x71],esp
  40e064:	loopne 0x40e0a8
  40e066:	jmp    0xe94a2b6e
  40e06b:	add    ecx,DWORD PTR [ebx+0x9]
  40e06e:	or     DWORD PTR [esp+ecx*2],eax
  40e071:	or     dl,dh
  40e073:	add    al,0x49
  40e075:	aaa    
  40e076:	jmp    0xe94a2c74
  40e07b:	dec    ebp
  40e07c:	dec    ebx
  40e07d:	or     ecx,ebp
  40e07f:	add    ecx,DWORD PTR [ebx+0x9]
  40e082:	push   ebp
  40e083:	in     eax,dx
  40e084:	dec    ebx
  40e085:	or     ecx,ebp
  40e087:	adc    ecx,DWORD PTR [ebx+0x9]
  40e08a:	jmp    0xe94a2aa2
  40e08f:	add    ecx,DWORD PTR [ebx]
  40e091:	or     ecx,ebp
  40e093:	adc    ecx,DWORD PTR [ebx+0x9]
  40e096:	jmp    0xed4a2ba0
  40e09b:	add    ecx,DWORD PTR [ebx+0x9]
  40e09e:	jmp    0xed4a2ba6
  40e0a3:	add    ecx,DWORD PTR [ebx+0x9]
  40e0a6:	jmp    0xe94a2bae
  40e0ab:	jae    0x40e0f7
  40e0ad:	or     ecx,ebp
  40e0af:	add    eax,0xe982094b
  40e0b4:	dec    edx
  40e0b5:	or     ebx,ebp
  40e0b7:	add    ecx,DWORD PTR [ebx+0x9]
  40e0ba:	jmp    0x40e0c2
	...
  40e0e3:	add    BYTE PTR [ebx+0x9],bl
  40e0e6:	jmp    0xe94a2bfe
  40e0eb:	add    ebx,DWORD PTR [ebx+0x9]
  40e0ee:	jmp    0x4a2c06
  40e0f3:	jmp    0xd940ea40
  40e0f8:	dec    eax
  40e0f9:	or     DWORD PTR [eax],eax
  40e0fb:	jmp    0xe940ea48
  40e100:	dec    eax
  40e101:	or     DWORD PTR [eax],eax
  40e103:	in     eax,dx
  40e104:	sbb    DWORD PTR [eax],ecx
  40e106:	add    BYTE PTR [ecx],ah
  40e108:	dec    eax
  40e109:	or     DWORD PTR [eax],eax
  40e10b:	jmp    0xe940ea58
  40e110:	dec    eax
  40e111:	or     DWORD PTR [eax],eax
  40e113:	jmp    0xe940ea60
  40e118:	dec    eax
  40e119:	or     DWORD PTR [eax],eax
  40e11b:	jmp    0xe940ea68
  40e120:	dec    eax
  40e121:	or     DWORD PTR [eax],eax
  40e123:	jmp    0xe940ea70
  40e128:	dec    eax
  40e129:	or     DWORD PTR [eax],eax
  40e12b:	jmp    0xe940ea78
  40e130:	dec    eax
  40e131:	or     DWORD PTR [eax],eax
  40e133:	jmp    0xe940ea80
  40e138:	dec    eax
  40e139:	or     DWORD PTR [eax],eax
  40e13b:	jmp    0xe940ea88
  40e140:	dec    eax
  40e141:	or     DWORD PTR [eax],eax
  40e143:	jmp    0xe940ea90
	...
  40e170:	dec    eax
  40e171:	or     DWORD PTR [eax],eax
  40e173:	jmp    0xe940eac0
  40e178:	dec    eax
  40e179:	or     DWORD PTR [eax],eax
  40e17b:	jmp    0xe940eac8
  40e180:	dec    eax
  40e181:	or     DWORD PTR [eax],eax
  40e183:	shl    DWORD PTR [ecx+0xa],0x0
  40e187:	ins    DWORD PTR es:[edi],dx
  40e188:	dec    eax
  40e189:	or     DWORD PTR [eax],eax
  40e18b:	jmp    0xe940ead8
  40e190:	dec    eax
  40e191:	or     DWORD PTR [eax],eax
  40e193:	add    dl,ah
  40e195:	or     al,0x0
  40e197:	add    dl,ah
  40e199:	or     al,0x0
  40e19b:	add    dl,dh
  40e19d:	or     al,0x0
  40e19f:	add    dl,dh
  40e1a1:	or     al,0x0
  40e1a3:	add    ah,bh
  40e1a5:	pusha  
  40e1a6:	gs js  0x40e15f
  40e1a9:	or     al,0x0
  40e1ab:	add    BYTE PTR [ecx],ch
  40e1ad:	clc    
  40e1ae:	add    BYTE PTR [eax],al
  40e1b0:	mov    dl,0x1c
  40e1b2:	add    BYTE PTR [eax],al
  40e1b4:	mov    ds:0xa20000f2,al
  40e1b9:	push   es
  40e1ba:	add    BYTE PTR [eax],al
  40e1bc:	mov    dl,0xc
  40e1be:	add    BYTE PTR [eax],al
  40e1c0:	mov    dl,0xc
  40e1c2:	add    BYTE PTR [eax],al
  40e1c4:	mov    ds:0x4200000c,al
  40e1c9:	add    eax,0x774c6000
  40e1ce:	fs popa 
  40e1d0:	push   ss
  40e1d1:	ins    BYTE PTR es:[edi],dx
	...
  40e1fa:	add    BYTE PTR [eax],al
  40e1fc:	bound  ecx,QWORD PTR [ebx]
  40e1fe:	add    BYTE PTR [eax],al
  40e200:	bound  ebx,QWORD PTR [ecx+eax*1]
  40e203:	add    BYTE PTR [edx+0x6],dh
  40e206:	add    BYTE PTR [eax],al
  40e208:	jb     0x40e216
  40e20a:	add    DWORD PTR [eax],eax
  40e20c:	bound  ecx,QWORD PTR [eax+eax*1]
  40e20f:	add    BYTE PTR [edx+0xc],ah
  40e212:	add    BYTE PTR [eax],al
  40e214:	xor    cl,BYTE PTR [eax+eax*1]
  40e217:	add    BYTE PTR [edx+0x5],dh
  40e21a:	add    BYTE PTR [eax+0x1c],al
  40e21d:	push   eax
  40e21e:	popa   
  40e21f:	je     0x40e264
  40e221:	add    eax,0x4a7a0000
  40e226:	add    BYTE PTR [eax],al
  40e228:	xor    ch,BYTE PTR [ecx+eax*1]
  40e22b:	add    BYTE PTR [edx],ah
  40e22d:	inc    esi
  40e22e:	add    BYTE PTR [eax],al
  40e230:	and    al,BYTE PTR [esi]
  40e232:	add    DWORD PTR [eax],eax
  40e234:	dec    ebx
  40e235:	loop   0x40e23a
  40e237:	add    BYTE PTR [ebx-0x1e],cl
  40e23a:	add    eax,DWORD PTR [eax]
  40e23c:	dec    ebx
  40e23d:	loop   0x40e242
  40e23f:	add    BYTE PTR [ebx-0x5e],cl
  40e242:	add    eax,DWORD PTR [eax]
  40e244:	or     esp,edx
  40e246:	add    eax,DWORD PTR [eax]
  40e248:	dec    ebx
  40e249:	loop   0x40e24e
  40e24b:	add    BYTE PTR [ebx-0x1e],cl
  40e24e:	add    eax,DWORD PTR [eax]
  40e250:	dec    ebx
  40e251:	loop   0x40e256
  40e253:	add    BYTE PTR [ebx-0x53],cl
  40e256:	mov    esp,gs
  40e258:	xor    ecx,ebp
  40e25a:	adc    eax,DWORD PTR [eax+0x4b]
  40e25d:	or     dh,BYTE PTR [ebp+0x1]
	...
  40e288:	mov    dh,ch
  40e28a:	div    DWORD PTR [ebp+0x53]
  40e28d:	mov    WORD PTR [edx],es
  40e28f:	push   0x4b
  40e291:	or     bh,BYTE PTR [edx+ebx*8-0x3d331db5]
  40e298:	inc    edi
  40e299:	loop   0x40e2eb
  40e29b:	mov    esi,DWORD PTR [edi+0x49]
  40e29e:	sub    dl,BYTE PTR [eax]
  40e2a0:	or     esp,edx
  40e2a2:	sti    
  40e2a3:	jb     0x40e2ef
  40e2a5:	mov    ds:0xf9ee83f7,eax
  40e2aa:	add    esi,DWORD PTR [eax+edx*2+0x6b]
  40e2ae:	push   ecx
  40e2af:	or     al,dl
  40e2b1:	shl    esi,cl
  40e2b3:	jne    0x40e2f8
  40e2b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2b6:	push   edx
  40e2b7:	or     BYTE PTR [edx-0x61ffff5d],al
  40e2bd:	imul   ebp,eax,0xffffff83
  40e2c0:	pop    es
  40e2c1:	cdq    
  40e2c2:	ins    BYTE PTR es:[edi],dx
  40e2c3:	dec    edi
  40e2c4:	pop    ebx
  40e2c5:	and    BYTE PTR [eax+edi*8],al
  40e2c8:	mov    ecx,0x24ffc2e1
  40e2cd:	out    dx,al
  40e2ce:	pop    es
  40e2cf:	pop    DWORD PTR [esi+0x1745bf78]
  40e2d5:	or     ch,cl
  40e2d7:	add    ecx,DWORD PTR [ebx+0x9]
  40e2da:	jb     0x40e32d
  40e2dc:	push   ebx
  40e2dd:	cmp    bl,0x69
  40e2e0:	dec    ebx
  40e2e1:	out    dx,al
  40e2e2:	aam    0x13
  40e2e4:	hlt    
  40e2e5:	je     0x40e32c
  40e2e7:	div    DWORD PTR [esi-0xf]
  40e2ea:	ds jno 0x40e2ed
	...
  40e311:	add    BYTE PTR [eax],al
  40e313:	add    BYTE PTR [ebx-0x12],dl
  40e316:	fwait
  40e317:	movhlps xmm1,xmm4
  40e31a:	fld    QWORD PTR [ebx]
  40e31c:	jle    0x40e2a0
  40e31e:	adc    eax,0x91f20783
  40e323:	jge    0x40e380
  40e325:	dec    ecx
  40e326:	jmp    0x2a491d26
  40e32b:	test   DWORD PTR [esp+eax*2+0x94b0401],0xed0ebee9
  40e336:	jmp    0x624a2e3e
  40e33b:	push   ecx
  40e33c:	inc    ebx
  40e33d:	cmp    bl,0x88
  40e340:	push   es
  40e341:	icebp  
  40e342:	cmp    DWORD PTR [edx+0x49],ebp
  40e345:	out    dx,al
  40e346:	pop    esp
  40e347:	clc    
  40e348:	jl     0x40e3be
  40e34a:	shl    esi,1
  40e34c:	inc    BYTE PTR [eax]
  40e34e:	(bad)  
  40e34f:	push   ecx
  40e350:	push   edi
  40e351:	and    BYTE PTR [esp+edi*8],0x92
  40e355:	retf   
  40e356:	in     eax,dx
  40e357:	add    esi,esi
  40e359:	cmp    DWORD PTR [ebp+0x11f18f82],0xe9493bc2
  40e363:	sti    
  40e364:	mov    ecx,0x4f6aa08
  40e369:	inc    esp
  40e36a:	xchg   ecx,eax
  40e36b:	add    ecx,DWORD PTR [ebx+0x9]
  40e36e:	jmp    0xea2e6a31
  40e373:	add    ecx,DWORD PTR [ebx+0x9]
  40e376:	add    BYTE PTR [edx+0x0],ah
	...
  40e39d:	add    BYTE PTR [eax],al
  40e39f:	add    BYTE PTR [ebx+0x1],bh
  40e3a2:	mov    ebx,ebx
  40e3a4:	ret    
  40e3a5:	inc    ebx
  40e3a6:	clc    
  40e3a7:	mov    ecx,0xd4ff08a2
  40e3ac:	cld    
  40e3ad:	in     eax,dx
  40e3ae:	jne    0x40e401
  40e3b0:	cmc    
  40e3b1:	jae    0x40e3bb
  40e3b3:	dec    esi
  40e3b4:	call   0x87e1:0x40bcff15
  40e3bb:	ds fucomp st(5)
  40e3be:	push   eax
  40e3bf:	bound  edi,QWORD PTR [ebx+0x1]
  40e3c2:	mov    ebx,ebx
  40e3c4:	bound  ecx,QWORD PTR [ecx]
  40e3c6:	push   0xffffffe9
  40e3c8:	aad    0x73
  40e3ca:	cld    
  40e3cb:	push   ds
  40e3cc:	cmp    esi,ecx
  40e3ce:	call   FWORD PTR [eax+edx*2+0x10f552ee]
  40e3d5:	adc    BYTE PTR [ebp+0x1],0x49
  40e3d9:	push   esp
  40e3da:	or     al,0xc2
  40e3dc:	js     0x40e454
  40e3de:	push   es
  40e3df:	ret    0xbf88
  40e3e2:	ret    0x48e1
  40e3e5:	mov    cl,0x1
  40e3e7:	jmp    0xac09ed34
  40e3ec:	push   edi
  40e3ed:	or     DWORD PTR [ebp+0x62],edx
  40e3f0:	jae    0x40e37b
  40e3f2:	(bad)  
  40e3f3:	int    0xe7
  40e3f5:	sbb    eax,0xf1472911
  40e3fa:	jb     0x40e3e4
  40e3fc:	mov    ebp,ebp
  40e3fe:	(bad)  
  40e3ff:	cmp    al,0x37
  40e401:	out    dx,al
  40e402:	jne    0x40e3e5
	...
  40e42c:	pusha  
  40e42d:	jo     0x40e42e
  40e42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e430:	push   esi
  40e431:	add    eax,eax
  40e433:	adc    al,0x4b
  40e435:	ret    0xe5c2
  40e438:	dec    eax
  40e439:	adc    BYTE PTR [ebp-0x1f],0xc3
  40e43d:	pop    ss
  40e43e:	lea    eax,[eax]
  40e440:	pop    edi
  40e441:	icebp  
  40e442:	push   eax
  40e443:	call   FWORD PTR [edi]
  40e445:	sbb    edi,edi
  40e447:	jne    0x40e46f
  40e449:	div    BYTE PTR [ebp+0x8]
  40e44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e44d:	push   edi
  40e44e:	or     al,0x85
  40e450:	bound  ebp,QWORD PTR [ebp+0x13]
  40e453:	mov    ebp,DWORD PTR [edi+0x2453bf4]
  40e459:	pop    esp
  40e45a:	pop    es
  40e45b:	mov    eax,0x8e3
  40e460:	cdq    
  40e461:	jmp    0x40e48d
  40e463:	sar    BYTE PTR [ecx+0x7],0x2b
  40e467:	shr    BYTE PTR [ebx],0xc7
  40e46a:	or     al,0x0
  40e46c:	mov    edi,0x1e83ec81
  40e471:	icebp  
  40e472:	push   esi
  40e473:	push   0x40182f
  40e478:	pop    edx
  40e479:	ja     0x40e47c
  40e47b:	ret    
  40e47c:	inc    ebp
  40e47d:	mov    bh,BYTE PTR [ebp+0xc]
  40e480:	mov    ds:0x2783065c,al
  40e485:	add    BYTE PTR [eax],al
  40e487:	jne    0x40e436
  40e489:	and    eax,eax
  40e48b:	pop    esi
  40e48c:	imul   eax,edi,0xc
	...
  40e4b7:	add    BYTE PTR [ecx],ah
  40e4b9:	jae    0x40e4cb
  40e4bb:	add    BYTE PTR [edi],bl
  40e4bd:	push   DWORD PTR [edi+0x87201]
  40e4c3:	pop    esi
  40e4c4:	stos   DWORD PTR es:[edi],eax
  40e4c5:	retf   0xc
  40e4c8:	stc    
  40e4c9:	pop    edx
  40e4ca:	or     al,0xc7
  40e4cc:	das    
  40e4cd:	icebp  
  40e4ce:	add    BYTE PTR [eax],al
  40e4d0:	jb     0x40e4da
  40e4d2:	mov    edx,DWORD PTR [ebp+0x6a]
  40e4d5:	adc    DWORD PTR [edx],0x50f11f8d
  40e4db:	call   FWORD PTR [edi+0x15]
  40e4de:	push   esi
  40e4df:	dec    DWORD PTR [ebx+0xd]
  40e4e2:	or     al,0xff
  40e4e4:	cdq    
  40e4e5:	bnd jle 0x40e4a8
  40e4e8:	mov    dl,0xdb
  40e4ea:	sub    al,al
  40e4ec:	test   DWORD PTR [ecx+0x5f4b0cc1],edi
  40e4f2:	jbe    0x40e4f0
  40e4f4:	dec    ebx
  40e4f5:	cmc    
  40e4f6:	cld    
  40e4f7:	sub    cl,BYTE PTR [ebx]
  40e4f9:	(bad)  
  40e4fa:	retf   0x57c2
  40e4fd:	loop   0x40e487
  40e4ff:	inc    ebp
  40e500:	(bad)  
  40e501:	fdivrp st(3),st
  40e503:	sub    DWORD PTR [esi-0x4c3b910e],ecx
  40e509:	loopne 0x40e50e
  40e50b:	add    BYTE PTR [ebx-0x74],cl
  40e50e:	retf   0x4fc2
  40e511:	loop   0x40e561
  40e513:	mov    esp,edi
  40e515:	pusha  
  40e516:	mov    edi,0xf422dcf8
  40e51b:	push   0x0
	...
  40e544:	dec    edi
  40e545:	lock inc ebx
  40e547:	add    bl,al
  40e549:	pop    DWORD PTR [edx]
  40e54b:	ret    
  40e54c:	mov    ah,0x87
  40e54e:	add    ebp,DWORD PTR [edx+0x4b]
  40e551:	cwde   
  40e552:	add    BYTE PTR [edx+0x4b],ch
  40e555:	cwde   
  40e556:	add    BYTE PTR [eax+0x4b],ch
  40e559:	loop   0x40e55e
  40e55b:	adc    BYTE PTR [esp+esi*2-0x553517f5],0x4
  40e563:	add    dl,dl
  40e565:	and    al,0xf0
  40e567:	inc    eax
  40e568:	neg    ch
  40e56a:	mov    esp,0x5de243c2
  40e56f:	add    BYTE PTR [esi-0xcaf13e4],bh
  40e575:	loope  0x40e58a
  40e577:	add    BYTE PTR [ebx+0x65],cl
  40e57a:	mov    eax,edi
  40e57c:	fs call 0xf01c:0x84c50f3
  40e584:	xor    esp,DWORD PTR [edi-0x4a]
  40e587:	add    al,0x4b
  40e589:	(bad)  
  40e58a:	test   al,0x79
  40e58c:	inc    ebp
  40e58d:	jmp    0x49e:0x4d23f014
  40e594:	dec    ebx
  40e595:	push   ds
  40e596:	test   eax,0xe90209bd
  40e59b:	repnz sahf 
  40e59d:	icebp  
  40e59e:	pop    esp
  40e59f:	mov    DWORD PTR [ebx],edx
  40e5a1:	(bad)  [esi-0xd]
  40e5a4:	fwait
  40e5a5:	jmp    0x0:0xffd4
	...
  40e5d0:	in     al,0x18
  40e5d2:	push   esi
  40e5d3:	repz hlt 
  40e5d5:	xchg   ah,cl
  40e5d7:	jmp    0x40e624
  40e5d9:	je     0x40e560
  40e5db:	repz pop esi
  40e5dd:	in     eax,dx
  40e5de:	push   ecx
  40e5df:	cmp    esi,esp
  40e5e1:	or     ecx,ebp
  40e5e3:	stos   DWORD PTR es:[edi],eax
  40e5e4:	dec    edx
  40e5e5:	or     ecx,ebp
  40e5e7:	add    eax,DWORD PTR [edx]
  40e5e9:	enter  0x3f1,0x1e
  40e5ed:	jle    0x40e5fc
  40e5ef:	pop    esp
  40e5f0:	les    edx,FWORD PTR [edi]
  40e5f2:	test   eax,0xe877b303
  40e5f7:	(bad)  
  40e5f8:	lods   al,BYTE PTR ds:[esi]
  40e5f9:	pop    edi
  40e5fa:	jmp    0x40e659
  40e5fc:	dec    ebx
  40e5fd:	jmp    0xf2f4:0x9da4fb74
  40e604:	xchg   esp,eax
  40e605:	shr    BYTE PTR [ebx],0x8
  40e608:	dec    ebx
  40e609:	push   esp
  40e60a:	jb     0x40e5eb
  40e60c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e60e:	sti    
  40e60f:	inc    ebx
  40e610:	dec    ebx
  40e611:	icebp  
  40e612:	pop    ebx
  40e613:	add    eax,0x443ea88
  40e618:	loope  0x40e622
  40e61a:	(bad)  
  40e61b:	js     0x40e670
  40e61d:	loope  0x40e68d
  40e61f:	lock pop esp
  40e621:	jmp    0x1400:0x58ea000
  40e628:	int3   
  40e629:	fadd   QWORD PTR [ebx-0x3b9ecf53]
  40e62f:	sti    
  40e630:	mov    BYTE PTR [ecx],cl
  40e632:	clc    
  40e633:	sbb    eax,DWORD PTR [eax]
	...
  40e659:	add    BYTE PTR [eax],al
  40e65b:	add    BYTE PTR [esi-0x3a],cl
  40e65e:	dec    DWORD PTR [esi+0x2c8efdb3]
  40e664:	aaa    
  40e665:	ret    0x7d45
  40e668:	dec    eax
  40e669:	or     DWORD PTR [eax],eax
  40e66b:	jmp    0xf53fefe6
  40e670:	or     al,0xeb
  40e672:	jne    0x40e665
  40e674:	and    BYTE PTR [eax-0x3],ch
  40e677:	pop    esi
  40e678:	stc    
  40e679:	jge    0x40e6d0
  40e67b:	loope  0x40e6f2
  40e67d:	pop    ss
  40e67e:	call   esp
  40e680:	fsub   st(1),st
  40e682:	jne    0x40e6c5
  40e684:	fnstenv [ebx+0x8]
  40e687:	ds jbe 0x40e69b
  40e68a:	leave  
  40e68b:	sub    edx,eax
  40e68d:	jmp    0x612d48e6
  40e692:	add    dl,bh
  40e694:	or     BYTE PTR [ecx],cl
  40e696:	clc    
  40e697:	fwait
  40e698:	inc    edi
  40e699:	(bad)  
  40e69a:	inc    DWORD PTR [ebx-0x1e8a15b8]
  40e6a0:	nop
  40e6a1:	sahf   
  40e6a2:	inc    DWORD PTR [esi]
  40e6a4:	cdq    
  40e6a5:	mov    edi,0x5448e5c2
  40e6aa:	mov    eax,DWORD PTR ds:0x6a145415
  40e6b0:	pop    esi
  40e6b1:	or     DWORD PTR [ebp-0x13],esi
  40e6b4:	rol    esi,0x10
  40e6b7:	jmp    0xd6515a37
  40e6bc:	cld    
  40e6bd:	cld    
  40e6be:	(bad)  
  40e6bf:	push   esp
	...
  40e6e8:	outs   dx,DWORD PTR ds:[esi]
  40e6e9:	loope  0x40e6df
  40e6eb:	add    BYTE PTR [edi+0x378bfff7],cl
  40e6f1:	adc    DWORD PTR [ecx],esp
  40e6f3:	add    ch,BYTE PTR [ebx+0x370010c2]
  40e6f9:	ins    BYTE PTR es:[edi],dx
  40e6fa:	in     al,dx
  40e6fb:	xor    esi,0xffffffd9
  40e6fe:	push   DWORD PTR [ebp+0x2e]
  40e701:	inc    edi
  40e702:	add    al,0x8d
  40e704:	fst    DWORD PTR [bx+si-0x1]
  40e708:	push   edi
  40e709:	in     eax,0xe7
  40e70b:	ret    
  40e70c:	int    0xda
  40e70e:	dec    DWORD PTR [ebx+0x38830967]
  40e714:	and    ah,BYTE PTR [ecx+0x7]
  40e717:	mov    esp,DWORD PTR [edi-0x27]
  40e71a:	bswap  eax
  40e71c:	cdq    
  40e71d:	(bad)  
  40e71f:	sar    BYTE PTR [ebx],0xcf
  40e722:	or     BYTE PTR [eax],al
  40e724:	mov    bh,0x65
  40e726:	in     al,dx
  40e727:	and    DWORD PTR [esi],0xffffffd9
  40e72a:	push   DWORD PTR [ebp-0x22]
  40e72d:	inc    esi
  40e72e:	add    cl,BYTE PTR [ebp-0xaf2559]
  40e734:	xchg   edi,eax
  40e735:	in     al,0xe7
  40e737:	xchg   edi,eax
  40e738:	sbb    eax,0xf78bffda
  40e73d:	call   0x60f31fc4
  40e742:	or     BYTE PTR [edi],cl
  40e744:	adc    eax,0x6686fe50
  40e749:	mov    BYTE PTR [edx],0x2b
	...
  40e774:	jb     0x40e71a
  40e776:	ret    0xb208
  40e779:	aas    
  40e77a:	mov    ebp,esp
  40e77c:	and    ecx,edx
  40e77e:	cld    
  40e77f:	call   DWORD PTR [edi]
  40e781:	call   0x4f3fe8ef
  40e786:	call   DWORD PTR [eax-0x63]
  40e789:	pop    edi
  40e78a:	or     al,ch
  40e78c:	dec    ebx
  40e78d:	dec    esp
  40e78e:	icebp  
  40e78f:	jmp    FWORD PTR [ebx+ebp*2+0x46]
  40e793:	or     al,0xc8
  40e795:	or     al,BYTE PTR [esp+esi*2]
  40e798:	inc    ebp
  40e799:	idiv   DWORD PTR [ecx+0x5cb5445]
  40e79f:	sub    ecx,DWORD PTR [ebx+0x4b08c5a9]
  40e7a5:	and    eax,0x1cd0ec7d
  40e7aa:	adc    al,0x83
  40e7ac:	jno    0x40e7a0
  40e7ae:	jbe    0x40e7b4
  40e7b0:	add    dh,BYTE PTR [edi+edi*8-0x1ada01]
  40e7b7:	(bad)  
  40e7b8:	xchg   esi,eax
  40e7b9:	fcmovu st,st(3)
  40e7bb:	loopne 0x40e7d4
  40e7bd:	pop    edi
  40e7be:	lock or ecx,DWORD PTR [ebx]
  40e7c1:	(bad)  
  40e7c3:	mov    bl,BYTE PTR [esi+0x4b02c8e2]
  40e7c9:	repnz add eax,DWORD PTR [eax]
  40e7cc:	loopne 0x40e7ba
  40e7ce:	pop    ebp
  40e7cf:	add    esp,ebp
  40e7d1:	mov    esp,0xda5efeff
  40e7d6:	fist   DWORD PTR [ecx+0x0]
	...
  40e7fd:	add    BYTE PTR [eax],al
  40e7ff:	add    bh,bl
  40e801:	es lock leave 
  40e804:	or     esi,ebp
  40e806:	add    edx,DWORD PTR [ebp-0x40]
  40e809:	and    eax,0xa7c7c484
  40e80e:	jl     0x40e885
  40e810:	dec    edi
  40e811:	jl     0x40e816
  40e813:	lea    ecx,[esi]
  40e815:	(bad)  
  40e816:	push   edx
  40e817:	push   DWORD PTR [esi]
  40e819:	loop   0x40e874
  40e81b:	call   FWORD PTR [esi]
  40e81d:	fcmovu st,st(3)
  40e81f:	mov    al,ds:0xb03f176
  40e824:	mov    esp,DWORD PTR [ebp+0x9]
  40e827:	or     DWORD PTR [esi],0xfffffff6
  40e82a:	add    dh,BYTE PTR [ebp+0x4c]
  40e82d:	or     DWORD PTR [edx],edx
  40e82f:	les    ebx,FWORD PTR ds:0x4b00abd2
  40e835:	xchg   esp,eax
  40e836:	sub    al,0xf0
  40e838:	dec    eax
  40e839:	fld    DWORD PTR [eax]
  40e83b:	dec    ecx
  40e83c:	cmp    ebx,DWORD PTR [esi-0x66]
  40e83f:	lods   al,BYTE PTR ds:[esi]
  40e840:	dec    edx
  40e841:	or     ecx,ebp
  40e843:	add    esi,ebp
  40e845:	shr    DWORD PTR [ebx+0x623e4b00],1
  40e84b:	loopne 0x40e817
  40e84d:	int    0x21
  40e84f:	out    dx,eax
  40e850:	cmp    al,0xe7
  40e852:	cmp    bl,BYTE PTR [ebx]
  40e854:	adc    BYTE PTR [ecx+ebp*8+0x59],dh
  40e858:	dec    ebx
  40e859:	jae    0x40e846
  40e85b:	pop    ecx
  40e85c:	dec    ebx
  40e85d:	jae    0x40e849
  40e85f:	pop    ebx
  40e860:	dec    ebx
  40e861:	or     ecx,ebp
  40e863:	ret    
	...
  40e88c:	adc    al,0x5d
  40e88e:	in     eax,0xdb
  40e890:	test   DWORD PTR [ecx+ebp*8+0x654cd203],edi
  40e897:	inc    esp
  40e898:	ja     0x40e8d4
  40e89a:	pop    esi
  40e89b:	jns    0x40e8e0
  40e89d:	icebp  
  40e89e:	sbb    ch,dh
  40e8a0:	in     al,dx
  40e8a1:	out    0x26,al
  40e8a3:	dec    ecx
  40e8a4:	jecxz  0x40e8af
  40e8a6:	jmp    0x94d333ae
  40e8ab:	sti    
  40e8ac:	sar    ebx,0x63
  40e8af:	dec    ecx
  40e8b0:	sar    DWORD PTR [ecx],cl
  40e8b2:	rol    DWORD PTR [ebx-0x7f16f6b5],0xc6
  40e8b9:	popa   
  40e8ba:	push   ds
  40e8bb:	out    dx,eax
  40e8bc:	mov    ah,0x39
  40e8be:	push   ss
  40e8bf:	jns    0x40e904
  40e8c1:	out    0xbb,al
  40e8c3:	dec    ecx
  40e8c5:	add    DWORD PTR fs:[esi+edx*1],eax
  40e8c9:	or     ch,BYTE PTR [edx+0xe633da]
  40e8cf:	jl     0x40e871
  40e8d1:	xchg   esp,eax
  40e8d2:	test   DWORD PTR [ecx+0x75],esi
  40e8d5:	out    0xff,al
  40e8d7:	cmp    DWORD PTR [esp+ebx*2-0x4],ebp
  40e8db:	rcr    DWORD PTR [edi],1
  40e8dd:	out    0xff,al
  40e8df:	(bad)  
  40e8e0:	jno    0x40e888
  40e8e2:	je     0x40e8cf
  40e8e4:	and    DWORD PTR [edi+edi*8-0x60ea4c4],0x8b094895
  40e8ef:	stos   BYTE PTR es:[edi],al
	...
  40e918:	add    eax,edx
  40e91a:	ret    0x48e1
  40e91d:	cmp    al,0x8b
  40e91f:	xchg   ebp,eax
  40e920:	leave  
  40e921:	int3   
  40e922:	clc    
  40e923:	sahf   
  40e924:	mov    bl,0x15
  40e926:	call   0x270a86
  40e92b:	pusha  
  40e92c:	xchg   ebx,eax
  40e92d:	loope  0x40e8f6
  40e92f:	sub    al,0x1b
  40e931:	or     DWORD PTR [eax],eax
  40e933:	jmp    0xe5b6cf80
  40e938:	lock (bad) 
  40e93a:	std    
  40e93b:	outs   dx,BYTE PTR ds:[esi]
  40e93c:	cmc    
  40e93d:	xchg   ecx,eax
  40e93e:	push   ebp
  40e93f:	cmc    
  40e940:	cmp    ebx,0x992e969
  40e946:	(bad)  
  40e947:	(bad)  
  40e949:	in     eax,0x75
  40e94b:	push   ecx
  40e94c:	cmc    
  40e94d:	pop    ebx
  40e94e:	or     BYTE PTR [esi+0x63],al
  40e951:	adc    eax,0xd0449bff
  40e956:	ret    0x48e1
  40e959:	cmp    al,0x8b
  40e95b:	cmp    eax,0x2ef8ccc9
  40e960:	adc    esp,ecx
  40e962:	add    cl,ch
  40e964:	dec    eax
  40e965:	or     edi,eax
  40e967:	lods   al,BYTE PTR ds:[esi]
  40e968:	pushf  
  40e969:	or     BYTE PTR [eax],al
  40e96b:	jmp    0x967bb8
  40e970:	call   0x50f1:0xef8d1262
  40e977:	push   0xffffffa3
  40e979:	div    BYTE PTR [ebp-0x4]
	...
  40e9a4:	jne    0x40ea03
  40e9a6:	clc    
  40e9a7:	call   FWORD PTR [edi]
  40e9a9:	in     eax,0xfe
  40e9ab:	push   edx
  40e9ac:	jle    0x40ea0e
  40e9ae:	inc    ebp
  40e9af:	clc    
  40e9b0:	stos   DWORD PTR es:[edi],eax
  40e9b1:	retf   0x4
  40e9b4:	pop    ds
  40e9b5:	pusha  
  40e9b6:	in     al,dx
  40e9b7:	push   0x73
  40e9b9:	inc    bp
  40e9bb:	or     al,0x32
  40e9bd:	hlt    
  40e9be:	jne    0x40e9c8
  40e9c0:	mov    dh,BYTE PTR [ebx]
  40e9c2:	cld    
  40e9c3:	push   ebp
  40e9c5:	mov    al,ds:0x3c3208c2
  40e9ca:	mov    ebp,esp
  40e9cc:	pop    eax
  40e9cd:	adc    DWORD PTR [ebp-0xc6d9bb],ecx
  40e9d3:	jne    0x40e9ff
  40e9d5:	shr    DWORD PTR [edx],0xfc
  40e9d8:	(bad)
  40e9db:	ret    0x91a
  40e9de:	push   ebp
  40e9df:	mov    eax,esi
  40e9e1:	mov    bh,BYTE PTR [ebp+0xc]
  40e9e4:	repnz pop esp
  40e9e6:	adc    al,0x83
  40e9e8:	out    0xf8,eax
  40e9ea:	push   DWORD PTR [ebx-0x1c]
  40e9ed:	cmc    
  40e9ee:	jne    0x40ea00
  40e9f0:	xchg   ebp,eax
  40e9f1:	pop    esp
  40e9f2:	or     al,0xff
  40e9f4:	jmp    eax
  40e9f6:	out    0x9,eax
  40e9f8:	xchg   dh,dh
  40e9fa:	dec    ecx
  40e9fc:	and    BYTE PTR [ecx],cl
  40e9fe:	add    BYTE PTR [ebp+0x69],dl
  40ea01:	jmp    0xf5e36005
  40ea06:	jne    0x40ea10
	...
  40ea30:	pop    edx
  40ea31:	cdq    
  40ea32:	(bad)  
  40ea33:	call   DWORD PTR [ebp-0x76]
  40ea36:	jge    0x40ea48
  40ea38:	dec    ebx
  40ea39:	bnd ja 0x40ea50
  40ea3c:	enter  0xff95,0xff
  40ea40:	sbb    ah,bl
  40ea42:	in     al,dx
  40ea43:	jne    0x40ea80
  40ea45:	jecxz  0x40eabd
  40ea47:	or     al,0x8c
  40ea49:	gs sti 
  40ea4b:	out    0xbc,eax
  40ea4d:	repz in al,dx
  40ea4f:	call   DWORD PTR [edx+0x1fffffb0]
  40ea55:	push   edi
  40ea56:	fild   WORD PTR [ebx+0x7403edee]
  40ea5c:	push   ecx
  40ea5d:	shl    DWORD PTR [esi+0xc],cl
  40ea60:	jae    0x40ea3c
  40ea62:	xlat   BYTE PTR ds:[ebx]
  40ea63:	add    BYTE PTR [ebx-0x49],cl
  40ea66:	add    DWORD PTR [ebx],ebp
  40ea68:	mov    eax,DWORD PTR [edx]
  40ea6a:	in     eax,dx
  40ea6b:	jne    0x40eac4
  40ea6d:	mov    bl,0x76
  40ea6f:	or     BYTE PTR [ebx],dh
  40ea71:	aas    
  40ea72:	in     al,dx
  40ea73:	push   DWORD PTR [ecx+ebx*4]
  40ea76:	ror    DWORD PTR [eax],0x4b
  40ea79:	and    eax,0x14c8ec79
  40ea7e:	adc    al,0xff
  40ea80:	xchg   esi,eax
  40ea81:	fucomp st(4)
  40ea83:	jne    0x40eacc
  40ea85:	arpl   WORD PTR [esi+0x8],si
  40ea88:	and    esi,DWORD PTR [ebx-0x78fb0014]
  40ea8e:	std    
  40ea8f:	(bad)  
  40ea90:	jbe    0x40ea74
  40ea92:	in     al,dx
  40ea93:	jne    0x40ea95
	...
  40eab9:	add    BYTE PTR [eax],al
  40eabb:	add    BYTE PTR [edi+0x43],al
  40eabe:	jbe    0x40eac8
  40eac0:	jecxz  0x40eb28
  40eac2:	in     al,dx
  40eac3:	jmp    esp
  40eac5:	sub    cl,al
  40eac7:	or     al,0x4b
  40eac9:	test   DWORD PTR [eax-0x14],edi
  40eacc:	aam    0x9c
  40eace:	sti    
  40eacf:	out    0xcc,eax
  40ead1:	sbb    ebp,esp
  40ead3:	call   FWORD PTR [ebx]
  40ead5:	enter  0x67fb,0x13
  40ead9:	or     ecx,edx
  40eadb:	inc    edx
  40eadc:	dec    ebx
  40eadd:	in     al,0x94
  40eadf:	sti    
  40eae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eae1:	dec    edi
  40eae2:	push   ss
  40eae3:	in     al,dx
  40eae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eae5:	outs   dx,BYTE PTR ds:[esi]
  40eae6:	jmp    0x115201d7
  40eaeb:	pop    ds
  40eaec:	xchg   esp,eax
  40eaed:	jecxz  0x40eaed
  40eaef:	pop    eax
  40eaf0:	dec    ecx
  40eaf1:	xchg   esi,eax
  40eaf2:	lods   al,BYTE PTR ds:[esi]
  40eaf3:	call   DWORD PTR [esp+eiz*8]
  40eaf6:	je     0x40eaf3
  40eaf8:	fs pop ss
  40eafa:	out    0xeb,al
  40eafc:	je     0x40eb6c
  40eafe:	jmp    0x40eb78
  40eb00:	push   es
  40eb01:	stc    
  40eb02:	cmp    bl,ch
  40eb04:	ficom  WORD PTR [eax]
  40eb06:	shl    DWORD PTR [ecx],0x5c
  40eb09:	jecxz  0x40ead1
  40eb0b:	dec    esp
  40eb0c:	add    dh,0xed
  40eb0f:	add    esi,esi
  40eb11:	pop    ebp
  40eb13:	xchg   DWORD PTR [edi],ecx
  40eb15:	out    0xae,al
  40eb17:	jno    0x40eb6c
  40eb19:	icebp  
  40eb1a:	jecxz  0x40eb09
  40eb1c:	xor    al,0xe3
  40eb1e:	rol    BYTE PTR [eax+0x0],cl
	...
  40eb45:	add    BYTE PTR [eax],al
  40eb47:	add    BYTE PTR [edi],bh
  40eb49:	nop
  40eb4a:	sub    al,0xe8
  40eb4c:	enter  0xdd4c,0xfb
  40eb50:	mov    dl,0x9
  40eb52:	xchg   BYTE PTR [ecx+0x47],dh
  40eb55:	loop   0x40eb4b
  40eb57:	sti    
  40eb58:	and    al,0xf6
  40eb5a:	jo     0x40eb47
  40eb5c:	add    al,0xe3
  40eb5e:	hlt    
  40eb5f:	out    0xfc,eax
  40eb61:	pop    esp
  40eb62:	icebp  
  40eb63:	fist   DWORD PTR [eax]
  40eb65:	in     al,0x5e
  40eb67:	jmp    0x40eb55
  40eb69:	pop    esp
  40eb6a:	loope  0x40eb47
  40eb6c:	aas    
  40eb6d:	in     eax,0x4e
  40eb6f:	jmp    0x40eb41
  40eb71:	dec    esp
  40eb72:	inc    ebp
  40eb73:	mov    ebp,0x50e91209
  40eb78:	shl    ch,0x0
  40eb7b:	push   0xffffff8b
  40eb7d:	ffree  st(7)
  40eb7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb80:	lods   al,BYTE PTR ds:[esi]
  40eb81:	or     DWORD PTR [eax],eax
  40eb83:	jmp    0x1d867fd0
  40eb88:	pop    ss
  40eb89:	loop   0x40ec00
  40eb8b:	loope  0x40eb0d
  40eb8d:	cmp    eax,0x8c48e9d4
  40eb92:	rol    BYTE PTR [ecx-0xe8a1dcd],0x70
  40eb99:	in     eax,dx
  40eb9a:	stc    
  40eb9b:	div    BYTE PTR [ecx-0x70]
  40eb9e:	inc    ebp
  40eb9f:	icebp  
  40eba0:	jno    0x40ebfe
  40eba2:	cld    
  40eba3:	rol    DWORD PTR [ebx-0x4a],1
  40eba6:	add    cl,ch
  40eba8:	ins    DWORD PTR es:[edi],dx
  40eba9:	mov    ds:0xff74,al
	...
  40ebd2:	add    BYTE PTR [eax],al
  40ebd4:	jno    0x40ec32
  40ebd6:	clc    
  40ebd7:	cmp    ebp,edi
  40ebd9:	or     al,ch
  40ebdb:	cmp    BYTE PTR [edx+0x9],cl
  40ebde:	add    BYTE PTR [eax+0xb],dh
  40ebe1:	(bad)  
  40ebe3:	cmp    al,0x33
  40ebe5:	icebp  
  40ebe6:	or     DWORD PTR [edx+0x1cff0948],ebx
  40ebec:	aaa    
  40ebed:	jmp    0x2c8b:0xe221a2bb
  40ebf4:	sbb    edx,DWORD PTR [edx]
  40ebf6:	enter  0xf896,0x38
  40ebfa:	(bad)  
  40ebfb:	cld    
  40ebfc:	adc    dl,ch
  40ebfe:	push   0x7f
  40ec00:	and    edx,esp
  40ec02:	leave  
  40ec03:	stos   DWORD PTR es:[edi],eax
  40ec04:	add    al,0xe2
  40ec06:	push   esp
  40ec07:	bound  edx,QWORD PTR [esi+eax*4]
  40ec0a:	les    ebx,FWORD PTR [ecx+0x9]
  40ec0d:	dec    esp
  40ec0e:	hlt    
  40ec0f:	jmp    0x6440f55c
  40ec14:	mov    esp,ebp
  40ec16:	push   eax
  40ec17:	dec    esi
  40ec18:	pop    ebx
  40ec19:	adc    eax,ebp
  40ec1b:	add    BYTE PTR [ebx+edi*4+0x0],bh
  40ec1f:	add    BYTE PTR [edi-0x3a],ah
  40ec22:	js     0x40ec71
  40ec24:	jge    0x40ec7f
  40ec26:	or     al,ch
  40ec28:	in     al,dx
  40ec29:	hlt    
  40ec2a:	(bad)  
  40ec2b:	(bad)  
  40ec2c:	cmp    ecx,DWORD PTR [ecx-0x8]
  40ec2f:	or     edi,0xffffffed
  40ec32:	add    al,0x72
  40ec34:	mov    cs,WORD PTR [edx+0xf86d]
	...
  40ec5e:	add    BYTE PTR [eax],al
  40ec60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec61:	out    dx,al
  40ec62:	jne    0x40ec60
  40ec64:	cmp    al,BYTE PTR [ecx-0x1d5dff2e]
  40ec6a:	mov    edi,0x75eec074
  40ec6f:	clc    
  40ec70:	loop   0x40ecb5
  40ec72:	add    al,ch
  40ec74:	arpl   dx,sp
  40ec76:	(bad)  
  40ec77:	call   FWORD PTR [ebp-0x63]
  40ec7a:	not    eax
  40ec7c:	jmp    0x40ec9f
  40ec7e:	hlt    
  40ec7f:	push   edi
  40ec81:	lock call 0x4d9d1c
  40ec87:	jmp    0x40ecfd
  40ec89:	lock jne 0x40ec94
  40ec8c:	or     ah,BYTE PTR [ecx]
  40ec8e:	sti    
  40ec8f:	(bad)  
  40ec90:	in     eax,dx
  40ec91:	(bad)  
  40ec92:	mov    edi,0x9e0c9
  40ec97:	jmp    0x40ecbd
  40ec99:	(bad)  
  40ec9a:	mov    edi,0x9f0c9
  40ec9f:	push   0x30
  40eca1:	aas    
  40eca2:	cld    
  40eca3:	call   DWORD PTR [edi]
  40eca5:	in     eax,0xe7
  40eca7:	lock retf 0xfff2
  40ecab:	(bad)  
  40ecac:	aaa    
  40ecad:	aad    0x1
  40ecaf:	add    dl,dh
  40ecb1:	or     al,0x8d
  40ecb3:	inc    ebp
  40ecb4:	xchg   edx,eax
  40ecb5:	xor    eax,0xc4fa75ff
  40ecba:	sar    bl,cl
  40ecbc:	dec    ebx
  40ecbd:	aaa    
  40ecbe:	jmp    0x4834b46
  40ecc3:	je     0x40ecc5
	...
  40ece9:	add    BYTE PTR [eax],al
  40eceb:	add    BYTE PTR [ecx],bh
  40eced:	xlat   BYTE PTR ds:[ebx]
  40ecee:	mov    ebx,0x6f16863b
  40ecf3:	pop    es
  40ecf4:	add    esi,edx
  40ecf6:	add    eax,DWORD PTR [eax]
  40ecf8:	dec    ebx
  40ecf9:	dec    ebx
  40ecfa:	add    ch,BYTE PTR [ebx]
  40ecfc:	mov    edi,ebx
  40ecfe:	add    eax,0xc6198b2b
  40ed03:	add    al,0x4b
  40ed05:	popf   
  40ed06:	jl     0x40ecf4
  40ed08:	enter  0xec26,0x8d
  40ed0c:	push   cs
  40ed0d:	push   es
  40ed0e:	push   esp
  40ed0f:	call   DWORD PTR [esi]
  40ed11:	fcmovu st,st(3)
  40ed13:	dec    eax
  40ed14:	cwde   
  40ed15:	repnz add eax,DWORD PTR [ebp-0xe3a575]
  40ed1c:	(bad)  
  40ed1d:	(bad)  
  40ed1f:	fdiv   DWORD PTR [ebx-0x41]
  40ed22:	call   0xe8fafbb0
  40ed27:	jne    0x40ed88
  40ed29:	retf   0xd212
  40ed2c:	dec    ebx
  40ed2d:	repnz cld 
  40ed2f:	mov    edi,0x75e8b5d7
  40ed34:	push   edi
  40ed35:	xchg   edi,eax
  40ed36:	outs   dx,BYTE PTR ds:[esi]
  40ed37:	clc    
  40ed38:	fwait
  40ed39:	retf   0xb17
  40ed3c:	dec    ebx
  40ed3d:	bnd call 0xe8bb1cb8
  40ed43:	ror    DWORD PTR [ebx-0xe],1
  40ed46:	call   0xb2cb40c0
  40ed4b:	cli    
  40ed4c:	adc    al,0x87
  40ed4e:	mov    edx,0xc2
	...
  40ed77:	add    BYTE PTR [ebx-0xe],al
  40ed7a:	dec    esi
  40ed7b:	mov    esi,edi
  40ed7d:	jb     0x40ed3e
  40ed7f:	call   0x8e0db91c
  40ed84:	mov    cs,WORD PTR [ecx]
  40ed86:	gs push ebx
  40ed88:	in     al,dx
  40ed89:	push   ebp
  40ed8a:	icebp  
  40ed8b:	fninit 
  40ed8d:	mov    edx,0xc8c603e9
  40ed92:	fidivr WORD PTR [ebx-0x64]
  40ed95:	or     cl,ch
  40ed97:	add    ecx,esp
  40ed99:	push   ebp
  40ed9a:	icebp  
  40ed9b:	fcmovne st,st(7)
  40ed9d:	loopne 0x40edd5
  40ed9f:	call   0xe8763376
  40eda4:	fst    QWORD PTR ds:[ecx]
  40eda7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eda8:	call   0x6d0f:0xe4fce908
  40edaf:	xchg   DWORD PTR [ebx+0x9],ecx
  40edb2:	jmp    0x719fc31
  40edb7:	outs   dx,BYTE PTR ds:[esi]
  40edb8:	xchg   edi,eax
  40edb9:	lock sub ebx,edx
  40edbc:	dec    ebx
  40edbd:	or     DWORD PTR [edx-0x41],ebp
  40edc0:	inc    edi
  40edc1:	push   es
  40edc2:	jmp    0x394a08ca
  40edc7:	fsub   QWORD PTR [edx-0x2dfc16f8]
  40edcd:	inc    ebp
  40edce:	(bad)
  40edd1:	aam    0xc1
  40edd3:	xchg   edi,eax
  40edd4:	bound  ecx,QWORD PTR [eax]
  40edd6:	jmp    0xe445755d
  40eddb:	add    eax,DWORD PTR [eax]
	...
  40ee01:	add    BYTE PTR [eax],al
  40ee03:	add    BYTE PTR [ebx-0x7],cl
  40ee06:	call   0xe9bb215e
  40ee0b:	add    ecx,DWORD PTR [ebx-0x70]
  40ee0e:	sub    al,0xdc
  40ee10:	mov    eax,ds:0x37719e09
  40ee15:	fistp  WORD PTR [eax+esi*8]
  40ee18:	sbb    al,0x55
  40ee1a:	and    edi,0x8d91d99e
  40ee20:	and    cl,BYTE PTR [edx]
  40ee22:	jmp    0x36fda9
  40ee27:	pop    edi
  40ee28:	mov    ah,cl
  40ee2a:	push   esp
  40ee2c:	in     al,dx
  40ee2d:	icebp  
  40ee2e:	cmp    BYTE PTR gs:[edi+0x9],al
  40ee32:	call   esp
  40ee34:	loopne 0x40ee1c
  40ee36:	nop
  40ee37:	push   ebx
  40ee38:	in     al,0xde
  40ee3a:	push   0xffffffe1
  40ee3c:	jo     0x40ee71
  40ee3e:	sub    BYTE PTR [eax-0xe8a21b8],ch
  40ee44:	mov    al,ds:0xa436fcbd
  40ee49:	adc    bl,al
  40ee4b:	cs cmp dl,ch
  40ee4e:	call   FWORD PTR [eax+esi*4-0x53e2451a]
  40ee55:	fisub  WORD PTR [ebx]
  40ee57:	xor    DWORD PTR [esp+edx*2-0xee5f108],esp
  40ee5e:	(bad)  
  40ee5f:	jl     0x40edf1
  40ee61:	out    0xe0,al
  40ee63:	std    
  40ee64:	ins    DWORD PTR es:[edi],dx
  40ee65:	fisub  WORD PTR [ebx]
  40ee67:	adc    DWORD PTR [eax],eax
	...
  40ee8d:	add    BYTE PTR [eax],al
  40ee8f:	add    BYTE PTR [esp+edx*2-0x14],ah
  40ee93:	add    DWORD PTR [ecx+ecx*1+0x0],eax
  40ee97:	jmp    0xd2294301
  40ee9c:	pop    ebp
  40ee9d:	fdivp  st(7),st
  40ee9f:	jmp    0xc1494309
  40eea4:	jg     0x40ee86
  40eea6:	inc    esi
  40eea8:	ror    ecx,1
  40eeaa:	pop    ebx
  40eeab:	mov    al,0xa
  40eead:	add    eax,0xedc01c00
  40eeb2:	sub    DWORD PTR [edi+esi*1],0xffffffde
  40eeb6:	jae    0x40eea9
  40eeb8:	and    eax,0x4b910854
  40eebd:	mov    eax,0xc941e900
  40eec2:	leave  
  40eec3:	stos   DWORD PTR es:[edi],eax
  40eec4:	adc    al,0xde
  40eec6:	push   esp
  40eec7:	add    BYTE PTR [ecx-0x5ba744a],bl
  40eecd:	or     BYTE PTR [eax+0x5009f200],al
  40eed3:	push   0x22
  40eed5:	mov    ebp,0x9e2d0f2
  40eeda:	leave  
  40eedb:	ret    0x9ee
  40eede:	push   ebp
  40eedf:	mov    eax,DWORD PTR [esi+0x78bfc4f]
  40eee5:	loop   0x40ee71
  40eee7:	dec    ebp
  40eee8:	(bad)  
  40eee9:	jmp    0x2b02:0xbd73510e
  40eef0:	jb     0x40eecd
  40eef2:	stos   DWORD PTR es:[edi],eax
  40eef3:	pop    ecx
	...
  40ef1c:	and    ebp,esp
  40ef1e:	add    esi,ebx
  40ef20:	sbb    BYTE PTR [edi-0x37],al
  40ef23:	ret    0x99a
  40ef26:	push   ebp
  40ef27:	mov    eax,DWORD PTR [esi+0x4c]
  40ef2a:	push   edi
  40ef2b:	mov    eax,edi
  40ef2d:	aad    0xfb
  40ef2f:	mov    ecx,DWORD PTR [edi]
  40ef31:	loop   0x40eebd
  40ef33:	dec    ebp
  40ef34:	mov    ds:0xef302ea,al
  40ef39:	inc    edi
  40ef3a:	pop    esi
  40ef3b:	leave  
  40ef3c:	and    dh,dl
  40ef3e:	call   DWORD PTR [ecx+edi*8-0x40]
  40ef42:	push   esi
  40ef43:	push   edi
  40ef44:	fldcw  WORD PTR [ebp+0x8]
  40ef47:	cld    
  40ef48:	jmp    0xa26bff62
  40ef4d:	pop    edi
  40ef4e:	jge    0x40ef5c
  40ef50:	or     DWORD PTR [edx],0xa039a6f3
  40ef56:	jne    0x40ef59
  40ef58:	jb     0x40efa0
  40ef5a:	pop    esi
  40ef5b:	leave  
  40ef5c:	loopne 0x40ef3f
  40ef5e:	call   DWORD PTR [ecx+edi*4-0x3f]
  40ef62:	add    esp,0xffffffc6
  40ef65:	dec    ebx
  40ef66:	push   edi
  40ef67:	push   ebx
  40ef68:	dec    ebx
  40ef69:	or     al,BYTE PTR [edx]
  40ef6b:	add    DWORD PTR [ebx-0xe],ecx
  40ef6e:	in     al,0x75
  40ef70:	inc    ebx
  40ef71:	jp     0x40ef06
  40ef73:	inc    DWORD PTR [esp+ebx*2]
  40ef76:	jns    0x40eff5
  40ef78:	push   ebx
  40ef79:	sub    edi,DWORD PTR ds:0x41a192b
  40ef7f:	add    DWORD PTR [eax],eax
	...
  40efa5:	add    BYTE PTR [eax],al
  40efa7:	add    BYTE PTR [ebx-0xe],cl
  40efaa:	jnp    0x40efc0
  40efac:	and    DWORD PTR [edx+eax*8],edi
  40efaf:	loop   0x40ef93
  40efb1:	addr16 or BYTE PTR [si+0x78a3],cl
  40efb7:	jne    0x40eff8
  40efb9:	sub    al,0x3f
  40efbb:	dec    BYTE PTR [ebx-0x9]
  40efbe:	mov    edx,0x68a02b
  40efc3:	cmp    eax,ebx
  40efc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efc6:	in     al,0x0
  40efc8:	push   es
  40efc9:	and    al,0x7a
  40efcb:	add    al,0x5a
  40efcd:	repnz dec BYTE PTR ds:[esp+edi*1+0x4f]
  40efd3:	inc    cl
  40efd5:	out    0x29,al
  40efd7:	mov    BYTE PTR [edi-0x39],al
  40efda:	jns    0x40f021
  40efdc:	test   BYTE PTR [edx+0x0],bl
  40efdf:	cmp    cl,BYTE PTR [edx]
  40efe1:	xchg   edi,eax
  40efe2:	ss adc cl,bh
  40efe5:	out    dx,eax
  40efe6:	sbb    cl,cl
  40efe8:	ins    DWORD PTR es:[edi],dx
  40efe9:	scas   eax,DWORD PTR es:[edi]
  40efea:	outs   dx,BYTE PTR ds:[esi]
  40efeb:	aad    0x0
  40efed:	sbb    eax,DWORD PTR [esi-0x37]
  40eff0:	mov    esi,esp
  40eff2:	add    edx,DWORD PTR [ebp-0x40]
  40eff5:	sahf   
  40eff6:	add    ah,0x53
  40eff9:	dec    DWORD PTR [ebp+0x57]
  40effc:	inc    esp
  40effd:	adc    eax,0xeed15afc
  40f002:	jnp    0x40f049
  40f004:	ss push 0x8c30140
  40f00a:	sub    al,0xe8
	...
  40f034:	rcr    bh,1
  40f036:	es cmp eax,0xbce555d0
  40f03c:	mov    fs,ecx
  40f03e:	jmp    0x724a3b46
  40f043:	ss pop ebx
  40f045:	call   0xdec7d673
  40f04a:	out    0xad,al
  40f04c:	mov    ds,esi
  40f04e:	fisubr WORD PTR [ebp+0x4e712157]
  40f054:	in     al,0x8
  40f056:	mov    ah,0xe7
  40f058:	dec    esp
  40f059:	xchg   ebx,eax
  40f05a:	lods   al,BYTE PTR ds:[esi]
  40f05b:	out    0xc1,eax
  40f05d:	hlt    
  40f05e:	adc    BYTE PTR [esi+esi*2-0x25],bh
  40f062:	imul   BYTE PTR [ebp+0xf71de0e]
  40f068:	or     DWORD PTR [edi+edi*2],0x3e
  40f06c:	mov    bh,0x8e
  40f06e:	xchg   esp,eax
  40f06f:	in     al,0xc3
  40f071:	hlt    
  40f072:	loopne 0x40f0ed
  40f074:	(bad)  
  40f075:	fucomi st,st(3)
  40f077:	dec    esi
  40f078:	popf   
  40f079:	mov    ?,ebp
  40f07b:	sub    eax,eax
  40f07d:	inc    ebp
  40f07e:	adc    DWORD PTR [ebx],esi
  40f080:	aaa    
  40f081:	sbb    DWORD PTR [esi],eax
  40f083:	ds and esi,0x29
  40f087:	jns    0x40f08f
  40f089:	fisub  WORD PTR [ecx+0x0]
  40f08c:	rol    DWORD PTR [ebp-0x13],0x7a
  40f090:	or     BYTE PTR [edx],cl
  40f092:	inc    esi
  40f093:	inc    edx
  40f094:	add    dl,dl
  40f096:	stos   DWORD PTR es:[edi],eax
  40f097:	adc    BYTE PTR [eax],al
	...
  40f0bd:	add    BYTE PTR [eax],al
  40f0bf:	add    BYTE PTR [ebx+0x36],cl
  40f0c2:	(bad)  
  40f0c3:	lock retf 0xbdc4
  40f0c7:	loop   0x40f115
  40f0c9:	fistp  DWORD PTR [edx]
  40f0cb:	das    
  40f0cc:	and    BYTE PTR [ebp-0x25641fdc],cl
  40f0d2:	add    BYTE PTR [edi+eax*2],bh
  40f0d5:	icebp  
  40f0d6:	mov    ds:0x85094799,eax
  40f0db:	test   eax,0xe9969138
  40f0e0:	dec    eax
  40f0e1:	or     edi,edi
  40f0e3:	sbb    al,0x47
  40f0e5:	icebp  
  40f0e6:	das    
  40f0e7:	xchg   edi,eax
  40f0e8:	sub    bl,bl
  40f0ea:	mov    DWORD PTR [ebx+eiz*1],ebp
  40f0ed:	(bad)  [ebp+0x7d]
  40f0f0:	out    dx,eax
  40f0f1:	jno    0x40f0c2
  40f0f3:	jmp    0xf600ff40
  40f0f8:	imul   edx,DWORD PTR [eax+0x54e85945],0xdb7151f4
  40f102:	call   DWORD PTR [esi-0x3a]
  40f105:	inc    esp
  40f106:	clc    
  40f107:	dec    esi
  40f108:	jb     0x40f0df
  40f10a:	(bad)  
  40f10b:	mov    esp,0x3975daa0
  40f110:	scas   eax,DWORD PTR es:[edi]
  40f111:	(bad)  
  40f112:	(bad)  
  40f113:	ss test al,0xda
  40f116:	jne    0x40f145
  40f118:	lahf   
  40f119:	inc    ebx
  40f11a:	iret   
  40f11b:	jmp    0xedb6cb68
  40f120:	mov    al,0x17
  40f122:	iret   
  40f123:	jmp    0x40f128
	...
  40f14c:	dec    eax
  40f14d:	cmp    edi,edi
  40f14f:	xchg   esp,eax
  40f150:	cmp    al,0x8c
  40f152:	test   DWORD PTR [edi],edx
  40f154:	imul   ebx,edx,0xa47099ff
  40f15a:	(bad)  
  40f15b:	imul   BYTE PTR [ecx-0x26]
  40f15e:	jne    0x40f155
  40f160:	imul   edx,DWORD PTR [eax+edi*8+0x74],0xdefeebd3
  40f168:	imul   edi,DWORD PTR [ecx],0xda6ad7e8
  40f16e:	dec    esi
  40f170:	repz adc al,ch
  40f173:	add    BYTE PTR [ebp-0x43],dh
  40f176:	(bad)  
  40f177:	call   FWORD PTR [eax+0x4a35680d]
  40f17d:	inc    esp
  40f17e:	add    bh,bh
  40f180:	ja     0x40f18f
  40f182:	call   0x27da1a
  40f187:	or     ecx,DWORD PTR [edx]
  40f189:	out    0x75,eax
  40f18b:	hlt    
  40f18c:	mov    ebp,0x37fff840
  40f191:	or     eax,0xe6c883e8
  40f196:	jmp    DWORD PTR [ebx]
  40f198:	stos   BYTE PTR es:[edi],al
  40f199:	out    0x75,al
  40f19b:	clc    
  40f19c:	retf   0xfd9a
  40f19f:	call   FWORD PTR [ebp-0x19]
  40f1a2:	jne    0x40f1ac
  40f1a4:	jp     0x40f12f
  40f1a6:	idiv   edi
  40f1a8:	jge    0x40f135
  40f1aa:	ret    
  40f1ab:	pop    ebx
  40f1ac:	sub    eax,esp
  40f1ae:	or     BYTE PTR [eax],al
	...
  40f1d8:	xchg   edi,eax
  40f1d9:	mov    ch,ah
  40f1db:	xor    DWORD PTR [esi-0x4e],0x57
  40f1df:	mov    esp,edi
  40f1e1:	ror    DWORD PTR [edx],1
  40f1e3:	shl    dh,0xf
  40f1e6:	mov    DWORD PTR [eax],0x5a2
  40f1ec:	jns    0x40f1d4
  40f1ee:	cmp    DWORD PTR [ebp+0x4a],0x4
  40f1f2:	jne    0x40f1fb
  40f1f4:	clc    
  40f1f5:	add    eax,0xeaa20002
  40f1fa:	jae    0x7542cfcf
  40f200:	gs jnp 0x40f203
  40f203:	add    DWORD PTR [edx+0x5],esp
  40f206:	jmp    0x40f20a
  40f208:	mov    DWORD PTR [ebx+0x54bca81],edx
  40f20e:	add    al,BYTE PTR [eax]
  40f210:	out    dx,eax
  40f211:	inc    ecx
  40f212:	cld    
  40f213:	push   eax
  40f214:	dec    ebx
  40f215:	push   ds
  40f216:	outs   dx,BYTE PTR ds:[esi]
  40f217:	add    BYTE PTR [esp+esi*1+0x10],cl
  40f21b:	(bad)  
  40f21c:	mov    esi,0xcd0ebda
  40f221:	jecxz  0x40f226
  40f223:	or     ecx,DWORD PTR [ebx]
  40f225:	push   ss
  40f226:	jno    0x40f1b5
  40f228:	xchg   BYTE PTR [edx+0x5d4b6a34],bl
  40f22e:	inc    edi
  40f22f:	hlt    
  40f230:	jnp    0x40f22e
  40f232:	add    edi,edi
  40f234:	sahf   
  40f235:	shl    al,cl
  40f237:	jne    0x40f248
  40f239:	mov    ebx,DWORD PTR [ebp+0xcf]
	...
  40f263:	add    BYTE PTR [ebx-0x1e],cl
  40f266:	or     al,0xc0
  40f268:	jbe    0x40f290
  40f26a:	test   DWORD PTR [ebp-0xd],edi
  40f26d:	loop   0x40f2c6
  40f26f:	inc    esi
  40f270:	enter  0xd7e5,0x1
  40f274:	pop    esi
  40f275:	call   0xe2246ffe
  40f27a:	push   edi
  40f27b:	cmp    al,al
  40f27d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f27e:	fild   DWORD PTR [eax+0x7b]
  40f281:	dec    edx
  40f282:	inc    edx
  40f283:	std    
  40f284:	les    ecx,FWORD PTR [edi-0x73]
  40f287:	clc    
  40f288:	into   
  40f289:	lods   eax,DWORD PTR ds:[esi]
  40f28a:	fist   DWORD PTR [eax+0x1c]
  40f28d:	int3   
  40f28e:	add    ebp,DWORD PTR [edx+0x4b]
  40f291:	daa    
  40f292:	push   edi
  40f293:	adc    BYTE PTR [ebp+esi*2+0x27c6e8df],ah
  40f29a:	add    al,0x0
  40f29c:	inc    eax
  40f29d:	and    bl,BYTE PTR [eax+0xa]
  40f2a0:	hlt    
  40f2a1:	or     DWORD PTR [ecx],ebp
  40f2a3:	std    
  40f2a4:	test   BYTE PTR [edi],cl
  40f2a6:	sub    eax,0x8ce670ff
  40f2ab:	inc    ebp
  40f2ac:	pop    edi
  40f2ad:	jmp    0x40f272
  40f2af:	je     0x40f2f7
  40f2b1:	out    0x56,eax
  40f2b3:	clc    
  40f2b4:	aam    0x9
  40f2b6:	jmp    0xd215c99b
  40f2bb:	push   0xffffff84
  40f2bd:	or     ecx,ebp
  40f2bf:	mov    WORD PTR [esp+eax*1-0x7398a957],es
  40f2c6:	inc    esp
  40f2c7:	cld    
	...
  40f2f0:	dec    edx
  40f2f1:	pop    esp
  40f2f2:	xlat   BYTE PTR ds:[ebx]
  40f2f3:	mov    WORD PTR [esi+0x2c3428f1],cs
  40f2f9:	pop    esi
  40f2fa:	aad    0xe0
  40f2fc:	sahf   
  40f2fd:	stc    
  40f2fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2ff:	push   esi
  40f300:	dec    edi
  40f301:	fcom   DWORD PTR [esp+ecx*1]
  40f304:	and    ebp,DWORD PTR [edx]
  40f306:	xchg   esi,eax
  40f307:	loopne 0x40f315
  40f309:	cmp    BYTE PTR [eax+0x1c095fc5],ah
  40f30f:	(bad)  
  40f310:	out    dx,eax
  40f311:	mov    esp,edi
  40f313:	or     ecx,DWORD PTR [edx+0x9]
  40f316:	jmp    0x6e43699e
  40f31b:	push   ss
  40f31c:	sbb    al,0x22
  40f31e:	test   al,0x3
  40f320:	int3   
  40f321:	dec    ebp
  40f322:	icebp  
  40f323:	ins    DWORD PTR es:[edi],dx
  40f324:	dec    ebx
  40f325:	fcomp  st(4)
  40f327:	test   ebp,0x3ee0f95d
  40f32d:	add    eax,0xe1535646
  40f332:	xor    eax,0x20d7b4e1
  40f337:	lds    ebx,FWORD PTR [ebx+0x9]
  40f33a:	add    al,ah
  40f33c:	sar    BYTE PTR [eax+0x1e2e538],1
  40f342:	jmp    0x3fb3e4a
  40f347:	push   esp
  40f348:	aas    
  40f349:	mov    bl,BYTE PTR [ebx]
  40f34b:	adc    bl,cl
  40f34d:	mov    eax,ds:0xf9798205
  40f352:	xlat   BYTE PTR ds:[ebx]
  40f353:	repnz add BYTE PTR [eax],al
	...
  40f37a:	add    BYTE PTR [eax],al
  40f37c:	pop    ebx
  40f37d:	jmp    0x40f37f
  40f37f:	pop    es
  40f380:	sar    esp,0x84
  40f383:	mov    ecx,0xe70049e9
  40f388:	xchg   DWORD PTR [ebp-0x26],ebx
  40f38b:	stos   BYTE PTR es:[edi],al
  40f38c:	adc    al,BYTE PTR [esp+ebp*8+0x84dc03e]
  40f393:	(bad)  
  40f394:	inc    DWORD PTR [edx+0x44d1f57d]
  40f39a:	adc    dl,dh
  40f39c:	pop    es
  40f39d:	pop    esi
  40f39e:	sbb    BYTE PTR [edx-0x9],ah
  40f3a1:	enter  0xe1ea,0x3a
  40f3a5:	push   cs
  40f3a6:	and    eax,0x947a6
  40f3ab:	jb     0x40f3f0
  40f3ad:	mov    WORD PTR [eax],?
  40f3af:	or     BYTE PTR [esi-0x7354ccf7],al
  40f3b5:	jmp    0x40f39f
  40f3b7:	jle    0x40f370
  40f3b9:	ss leave 
  40f3bb:	stos   DWORD PTR es:[edi],eax
  40f3bc:	pop    ebx
  40f3bd:	or     DWORD PTR [ebp+0x62],edx
  40f3c0:	sti    
  40f3c1:	cmp    al,BYTE PTR [ebx+0x750950ec]
  40f3c7:	out    dx,al
  40f3c8:	add    eax,0x2793084d
  40f3cd:	dec    eax
  40f3ce:	add    BYTE PTR [edx+0x6a],ch
  40f3d1:	add    eax,0xce4dd400
  40f3d6:	inc    ebp
  40f3d7:	cmc    
  40f3d8:	repnz and DWORD PTR [ecx-0x17],eax
  40f3dc:	xchg   ebp,eax
  40f3dd:	pop    esp
  40f3de:	or     BYTE PTR [ecx+0x0],al
	...
  40f405:	add    BYTE PTR [eax],al
  40f407:	add    BYTE PTR [esp+eax*8+0x0],cl
  40f40b:	jmp    0x9d40a5e1
  40f410:	dec    esp
  40f411:	loope  0x40f448
  40f413:	sub    al,0x4f
  40f415:	or     DWORD PTR [ebx],eax
  40f417:	xor    DWORD PTR [eax],ecx
  40f419:	cmp    ch,al
  40f41b:	into   
  40f41c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f41d:	(bad)  
  40f41e:	inc    DWORD PTR [eax]
  40f420:	stc    
  40f421:	xchg   esp,eax
  40f422:	push   DWORD PTR [ebp+0x7a]
  40f425:	sbb    ebp,eax
  40f427:	aas    
  40f428:	daa    
  40f429:	or     eax,0x5dfff00
  40f42e:	push   ebx
  40f42f:	call   0x41ac5a
  40f434:	fxch   st(2)
  40f436:	pop    ebx
  40f437:	leave  
  40f438:	mov    al,ds:0xa9550002
  40f43d:	out    0x53,al
  40f43f:	add    DWORD PTR [edi+0x2d750005],0xffffffcf
  40f446:	inc    ebp
  40f447:	or     al,cl
  40f449:	and    DWORD PTR [ecx+0x0],eax
  40f44c:	mov    cl,0x69
  40f44e:	or     al,0x0
  40f450:	aas    
  40f451:	push   cs
  40f452:	mov    DWORD PTR [ebp+0x26],0x224128a0
  40f459:	mov    bh,0x75
  40f45b:	or     dl,cl
  40f45d:	loop   0x40f42b
  40f45f:	add    dl,dh
  40f461:	sbb    al,0xff
  40f464:	inc    DWORD PTR ds:0x9a6e1e8
  40f46a:	add    BYTE PTR [ebx],al
	...
  40f494:	mov    edx,0x79e8534a
  40f499:	mov    bl,0xff
  40f49b:	call   FWORD PTR [ecx-0x6e]
  40f49e:	push   DWORD PTR [ebp-0x16]
  40f4a1:	sbb    ch,al
  40f4a3:	jmp    0x40f50b
  40f4a5:	or     al,BYTE PTR [eax]
  40f4a7:	(bad)  
  40f4a8:	inc    DWORD PTR ds:0xc61ae853
  40f4ae:	add    BYTE PTR [eax],al
  40f4b0:	jne    0x40f4e3
  40f4b2:	or     al,ch
  40f4b4:	sbb    dh,BYTE PTR [ebx-0x34e60001]
  40f4ba:	pop    ebx
  40f4bb:	leave  
  40f4bc:	pusha  
  40f4bd:	add    al,BYTE PTR [eax]
  40f4bf:	push   ebp
  40f4c0:	dec    ebx
  40f4c1:	imul   ebp,edi,0xffffff83
  40f4c4:	pop    DWORD PTR [ebx]
  40f4c6:	ss push 0x3e146
  40f4cc:	arpl   WORD PTR [esi],bx
  40f4ce:	(bad)  
  40f4d0:	ins    BYTE PTR es:[edi],dx
  40f4d1:	push   0xa4c8fc48
  40f4d6:	cmp    al,0x29
  40f4d8:	or     ah,al
  40f4da:	add    esi,DWORD PTR [ebp+0x49]
  40f4dd:	mov    ebx,0xbbd6fef6
  40f4e2:	push   0x0
  40f4e4:	mov    cl,0xe2
  40f4e6:	fdiv   QWORD PTR [ebp+0x53]
  40f4e9:	cmp    BYTE PTR [edi+edi*8],al
  40f4ec:	pop    esi
  40f4ed:	sub    DWORD PTR [ebx],ebp
  40f4ef:	inc    ecx
  40f4f0:	dec    ebx
  40f4f1:	les    edi,FWORD PTR gs:[ecx-0x6d]
  40f4f5:	mov    ds:0xfc57,eax
	...
  40f51e:	add    BYTE PTR [eax],al
  40f520:	xor    esi,edi
  40f522:	fdivr  st,st(7)
  40f524:	adc    al,0xac
  40f526:	inc    edi
  40f527:	cld    
  40f528:	dec    ebx
  40f529:	loop   0x40f52e
  40f52b:	add    ah,al
  40f52d:	and    eax,0x774b412b
  40f532:	das    
  40f533:	mov    ebx,DWORD PTR [edi+edx*2+0x47]
  40f537:	or     BYTE PTR [esi],ah
  40f539:	pop    ebx
  40f53a:	pop    ebp
  40f53b:	jmp    esp
  40f53d:	cdq    
  40f53e:	inc    ecx
  40f53f:	add    al,0x56
  40f541:	pop    es
  40f542:	push   0x0
  40f544:	(bad)  
  40f545:	mov    al,ds:0x8963500b
  40f54a:	sub    al,BYTE PTR [ecx+0x4b]
  40f54d:	inc    ebx
  40f54e:	adc    ch,al
  40f550:	push   ds
  40f551:	dec    esp
  40f552:	(bad)  
  40f554:	inc    eax
  40f555:	and    bl,BYTE PTR [eax+0x5]
  40f558:	ret    0xdfa5
  40f55b:	jmp    0x40f5b0
  40f55d:	pop    edi
  40f55e:	lds    eax,FWORD PTR [eax+ecx*8]
  40f561:	or     esi,esp
  40f563:	add    ebx,DWORD PTR [esi]
  40f565:	ret    
  40f566:	jb     0x40f5af
  40f568:	(bad)  
  40f569:	xor    al,0x20
  40f56b:	ret    0x94f
  40f56e:	mov    ah,0x88
  40f570:	outs   dx,DWORD PTR ds:[esi]
  40f571:	cmp    BYTE PTR [edx+0x47],dh
  40f574:	inc    ebx
  40f575:	add    BYTE PTR [ecx],ch
  40f577:	pop    eax
  40f578:	inc    esi
  40f579:	mov    DWORD PTR [ecx+0x30fede03],esi
  40f57f:	add    al,0x4b
  40f581:	or     ecx,ebp
  40f583:	cmp    BYTE PTR [eax],al
	...
  40f5a9:	add    BYTE PTR [eax],al
  40f5ab:	add    BYTE PTR [edx-0x1efc1a39],al
  40f5b1:	or     BYTE PTR [ebx+0x4],al
  40f5b4:	mov    cl,0x8
  40f5b6:	inc    ebx
  40f5b7:	add    al,0xb1
  40f5b9:	or     DWORD PTR [ecx-0x7c],edx
  40f5bc:	dec    ebx
  40f5bd:	or     ecx,ebp
  40f5bf:	fdiv   QWORD PTR [esi+0x10e4c101]
  40f5c5:	or     ecx,ebp
  40f5c7:	mov    BYTE PTR [ebx],al
  40f5c9:	and    BYTE PTR [ecx+0x3a009f40],ch
  40f5cf:	in     al,dx
  40f5d0:	and    eax,0xc303e9c0
  40f5d5:	or     ecx,ebp
  40f5d7:	add    ecx,DWORD PTR [ebx+0x30]
  40f5da:	mov    al,0xc1
  40f5dc:	dec    edi
  40f5dd:	or     DWORD PTR [ecx+ecx*4],edx
  40f5e0:	fistp  QWORD PTR [edi+0x2c]
  40f5e3:	or     al,0x50
  40f5e5:	leave  
  40f5e6:	cmc    
  40f5e7:	push   es
  40f5e8:	retf   
  40f5e9:	adc    cl,ch
  40f5eb:	push   esi
  40f5ec:	inc    edx
  40f5ed:	xchg   ecx,eax
  40f5ee:	jmp    0x204a40f6
  40f5f3:	ror    DWORD PTR [edi+0x9],0x4e
  40f5f7:	push   esi
  40f5f8:	push   ebx
  40f5f9:	loope  0x40f636
  40f5fb:	enter  0x94b,0x6a
  40f5ff:	fld    TBYTE PTR [esp+ebx*2-0x70e1c00]
  40f606:	(bad)  
  40f607:	call   0x29d5fa54
  40f60c:	inc    edi
  40f60d:	fwait
  40f60e:	rcl    BYTE PTR [edx],0x0
	...
  40f635:	add    BYTE PTR [eax],al
  40f637:	add    BYTE PTR [ebp-0x6f],al
  40f63a:	add    cl,ch
  40f63c:	dec    eax
  40f63d:	or     ecx,ecx
  40f63f:	sub    eax,DWORD PTR [ecx+ecx*1+0x55]
  40f643:	jb     0x40f6a9
  40f645:	xchg   esp,eax
  40f647:	std    
  40f648:	jecxz  0x40f652
  40f64a:	push   0xffffffe9
  40f64c:	xchg   DWORD PTR [ebp+0x8],ebx
  40f64f:	add    DWORD PTR [ebx+0x45e900bf],edx
  40f655:	leave  
  40f656:	je     0x40f66b
  40f658:	pop    ss
  40f659:	cmp    eax,ebp
  40f65b:	mov    ah,BYTE PTR ds:0x8a60ffd3
  40f661:	aad    0x58
  40f663:	sbb    DWORD PTR [eax],edx
  40f665:	pop    ebp
  40f666:	cld    
  40f667:	mov    esi,0x79e8019a
  40f66c:	adc    al,0xa
  40f66e:	add    dl,ah
  40f670:	or     BYTE PTR [ebp+0xc],bl
  40f673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f674:	jp     0x40f64b
  40f676:	call   0x13e394
  40f67b:	ret    0xdf08
  40f67e:	add    esp,DWORD PTR [edx-0x76]
  40f681:	aad    0xc9
  40f683:	stos   DWORD PTR es:[edi],eax
  40f684:	dec    ebx
  40f685:	or     DWORD PTR [ebp+0x72],edx
  40f688:	jecxz  0x40f6c0
  40f68a:	mov    edx,DWORD PTR [ebx+edx*2]
  40f68d:	pop    edi
  40f68e:	adc    BYTE PTR [edx],bl
  40f690:	out    dx,eax
  40f691:	(bad)  
  40f692:	cli    
  40f693:	lock pop di
  40f696:	add    bl,dl
  40f698:	dec    eax
  40f699:	pop    edi
  40f69a:	add    eax,ebx
	...
  40f6c4:	dec    eax
  40f6c5:	pop    edi
  40f6c6:	add    eax,ecx
  40f6c8:	dec    eax
  40f6c9:	or     DWORD PTR [eax],eax
  40f6cb:	add    BYTE PTR [edx],ah
  40f6cd:	scas   al,BYTE PTR es:[edi]
  40f6ce:	jne    0x40f6d8
  40f6d0:	sbb    ah,BYTE PTR [edx]
  40f6d2:	retf   
  40f6d3:	add    BYTE PTR [edx-0x29bffc7b],dh
  40f6d9:	sbb    ch,BYTE PTR [edx+0x0]
  40f6dc:	rcr    dh,cl
  40f6de:	ins    BYTE PTR es:[edi],dx
  40f6df:	retf   
  40f6e0:	mov    ds:0x6e438906,al
  40f6e5:	add    BYTE PTR fs:[edx+0x72],ch
  40f6e9:	add    BYTE PTR fs:[edx+0x60],ch
  40f6ed:	fs add bh,bh
  40f6f0:	mov    cl,0xde
  40f6f2:	pop    esi
  40f6f3:	retf   
  40f6f4:	jb     0x40f6fc
  40f6f6:	or     eax,eax
  40f6f8:	(bad)  
  40f6f9:	push   ds
  40f6fa:	mov    DWORD PTR [ebx+0x66],eax
  40f6fd:	add    BYTE PTR fs:[edx+0x62],ch
  40f701:	add    BYTE PTR fs:[edx+0x36],ch
  40f705:	push   ss
  40f706:	call   0x46e05a
  40f70b:	mov    DWORD PTR [ecx+0x5],esp
  40f70e:	or     eax,eax
  40f710:	ja     0x40f73b
  40f712:	push   DWORD PTR [ebx+0x36]
  40f715:	fdivrp st(2),st
  40f717:	retf   0x632
  40f71a:	push   DWORD PTR [ebx]
  40f71c:	mov    edx,0x2200cae2
  40f721:	mov    DWORD PTR [ebx],0xffaeddff
  40f727:	jmp    0x40f729
	...
  40f74d:	add    BYTE PTR [eax],al
  40f74f:	add    BYTE PTR [edi],bl
  40f751:	scas   eax,DWORD PTR es:[edi]
  40f752:	xor    ebp,eax
  40f754:	scas   al,BYTE PTR es:[edi]
  40f755:	ret    
  40f756:	add    BYTE PTR [eax],al
  40f758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f759:	or     bh,bh
  40f75b:	call   FWORD PTR [ebp-0x51]
  40f75e:	sub    eax,eax
  40f760:	fwait
  40f761:	dec    edx
  40f762:	or     BYTE PTR [edi],cl
  40f764:	push   edi
  40f765:	(bad)  
  40f766:	pop    ebx
  40f767:	leave  
  40f768:	and    dh,bh
  40f76a:	call   DWORD PTR [ebx+ecx*2+0x67]
  40f76e:	out    0x53,eax
  40f770:	shl    BYTE PTR [ebx+ecx*1+0x4f4b7083],1
  40f777:	pop    ss
  40f778:	lods   al,BYTE PTR ds:[esi]
  40f779:	mov    cs,WORD PTR [ebx]
  40f77b:	call   0x441ed2
  40f780:	pushf  
  40f781:	mov    ?,edi
  40f783:	out    0xe6,eax
  40f785:	adc    eax,0xae8c0003
  40f78a:	jmp    0x40f732
  40f78c:	xchg   ecx,eax
  40f78d:	fild   WORD PTR [ebx]
  40f78f:	pop    ebx
  40f790:	xchg   edx,eax
  40f791:	sbb    eax,0x571fffff
  40f796:	out    0x81,eax
  40f798:	xchg   edi,edi
  40f79a:	jmp    0x32b25c9e
  40f79f:	sbb    DWORD PTR [esi],0x70
  40f7a2:	sub    eax,DWORD PTR [ecx+0x4b]
  40f7a5:	loopne 0x40f7f6
  40f7a7:	adc    eax,0x2833fc4c
  40f7ac:	mov    ah,dl
  40f7ae:	jmp    0x40f73a
  40f7b0:	inc    edx
  40f7b1:	rcr    cl,0xc7
	...
  40f7dc:	dec    esi
  40f7dd:	repnz sub eax,DWORD PTR [ecx+0x4b]
  40f7e1:	loop   0x40f7e6
  40f7e3:	add    BYTE PTR [ebx+0x63],cl
  40f7e6:	pop    ss
  40f7e7:	push   esp
  40f7e8:	jae    0x40f80b
  40f7ea:	add    al,0x0
  40f7ec:	lahf   
  40f7ed:	int    0xd8
  40f7ef:	xor    eax,0x42ba77
  40f7f4:	repz push es
  40f7f6:	(bad)  
  40f7f8:	cld    
  40f7f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7fa:	call   DWORD PTR [ebx+0x23]
  40f7fd:	and    DWORD PTR [eax+eax*1],eax
  40f800:	dec    ebx
  40f801:	loop   0x40f806
  40f803:	(bad)  
  40f804:	into   
  40f805:	push   edx
  40f806:	jmp    0xec33d50a
  40f80b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f80c:	fisttp DWORD PTR [ecx]
  40f80e:	data16 fnstcw WORD PTR [esi-0x3b16b27a]
  40f815:	sar    BYTE PTR [ecx+0x4ed9e1eb],1
  40f81b:	fld    st(6)
  40f81d:	inc    esi
  40f81e:	inc    ebp
  40f81f:	xor    al,0x23
  40f821:	xor    DWORD PTR [ecx],edx
  40f823:	inc    ebx
  40f824:	dec    ebx
  40f825:	popa   
  40f826:	jmp    0x40f82b
  40f828:	dec    ebx
  40f829:	mov    DWORD PTR [ecx+0x71],eax
  40f82c:	or     BYTE PTR [ecx],0xe9
  40f82f:	or     al,0x8b
  40f831:	add    BYTE PTR [ebp+edi*1+0x4a],ah
  40f835:	or     ecx,ebp
  40f837:	rol    dh,0xd5
  40f83a:	(bad)  
  40f83b:	fdiv   DWORD PTR [ecx+ecx*1-0x17]
  40f83f:	add    eax,DWORD PTR [eax]
	...
  40f865:	add    BYTE PTR [eax],al
  40f867:	add    BYTE PTR [ebx-0x38],cl
  40f86a:	fdiv   QWORD PTR fs:[eax+edx*8-0xa]
  40f86f:	fmul   DWORD PTR [ecx+ecx*1-0x17]
  40f873:	ins    DWORD PTR es:[edi],dx
  40f874:	dec    ebx
  40f875:	arpl   cx,bp
  40f877:	ins    DWORD PTR es:[edi],dx
  40f878:	dec    ebx
  40f879:	arpl   cx,bp
  40f87b:	xchg   dh,cl
  40f87d:	rol    dh,1
  40f87f:	fdivr  DWORD PTR [ecx+edi*1]
  40f882:	pop    esp
  40f883:	jle    0x40f8bc
  40f885:	loopne 0x40f84d
  40f887:	fcomp  DWORD PTR [ebx+0x34cf74d0]
  40f88d:	shl    BYTE PTR [esi-0x3e326928],1
  40f893:	add    BYTE PTR ss:[ecx],cl
  40f896:	jmp    0x644103a7
  40f89b:	hlt    
  40f89c:	dec    ebx
  40f89d:	or     ecx,ebp
  40f89f:	imul   esi,DWORD PTR [ebx+0x63042820],0x31
  40f8a6:	rol    DWORD PTR [edx+0x4b],1
  40f8a9:	loope  0x40f8a9
  40f8ab:	xlat   BYTE PTR ds:[ebx]
  40f8ac:	in     al,0xcf
  40f8ae:	add    dl,ah
  40f8b0:	or     BYTE PTR [eax],al
  40f8b2:	test   BYTE PTR [eax+0x48],bh
  40f8b5:	or     DWORD PTR [eax],eax
  40f8b7:	jb     0x40f851
  40f8b9:	jge    0x40f840
  40f8bb:	pop    ebp
  40f8bc:	mov    bl,0xcf
  40f8be:	(bad)  
  40f8bf:	mov    ecx,0x4dbce176
  40f8c4:	xchg   ebx,eax
  40f8c5:	iret   
  40f8c6:	or     ebp,DWORD PTR [ecx]
  40f8c8:	inc    ebx
  40f8c9:	test   edx,ebx
  40f8cb:	jmp    0x40f8d0
	...
  40f8f4:	dec    eax
  40f8f5:	or     DWORD PTR [ecx-0x205794],ecx
  40f8fb:	cs int 0x85
  40f8fe:	call   0x51106c19
  40f903:	xchg   ecx,eax
  40f904:	int3   
  40f905:	and    BYTE PTR [ecx-0x17],al
  40f908:	mov    ds:0x9cfee095,eax
  40f90d:	iret   
  40f90e:	push   0x800948eb
  40f913:	adc    DWORD PTR [ebx+0x50f6ffd3],edi
  40f919:	leave  
  40f91a:	pcmpgtw mm6,QWORD PTR [ebp-0x3616fff8]
  40f921:	rol    BYTE PTR [ecx],1
  40f923:	out    dx,al
  40f924:	(bad)  
  40f925:	ins    DWORD PTR es:[edi],dx
  40f926:	add    cl,ch
  40f928:	dec    eax
  40f929:	cmp    edi,edi
  40f92b:	xchg   esp,eax
  40f92c:	daa    
  40f92d:	(bad)  
  40f92f:	(bad)  
  40f930:	ja     0x40f900
  40f932:	mov    ch,0xb9
  40f934:	sub    al,0xcf
  40f936:	inc    ecx
  40f938:	push   ds
  40f939:	(bad)  
  40f93a:	jmp    FWORD PTR [esi-0x69177b3e]
  40f940:	hlt    
  40f941:	into   
  40f942:	push   eax
  40f943:	adc    DWORD PTR [ebx+0x15e94121],eax
  40f949:	xchg   ebp,eax
  40f94a:	loopne 0x40f9ca
  40f94c:	sbb    al,0xcf
  40f94e:	push   0xae000
  40f953:	cmp    BYTE PTR [edx+0xfffb3e],0x0
	...
  40f97e:	add    BYTE PTR [eax],al
  40f980:	push   ebp
  40f981:	add    al,al
  40f983:	je     0x40f9b3
  40f985:	mov    bh,BYTE PTR [ebp-0x498a18]
  40f98b:	add    DWORD PTR [ebx+esi*8-0x77d8afb1],ebx
  40f992:	cld    
  40f993:	out    dx,eax
  40f994:	add    eax,0xfae850b6
  40f999:	mov    ebp,0x81c20000
  40f99e:	test   esp,edi
  40f9a0:	add    eax,0x6550ffb6
  40f9a5:	js     0x40f993
  40f9a7:	out    dx,eax
  40f9a8:	gs mov dh,0xe8
  40f9ab:	iret   
  40f9ac:	pop    esi
  40f9ad:	mov    dh,0xff
  40f9af:	pop    eax
  40f9b0:	push   ebp
  40f9b1:	js     0x40f99b
  40f9b3:	out    dx,eax
  40f9b4:	inc    ebp
  40f9b5:	mov    dh,0x50
  40f9b7:	jmp    FWORD PTR [edi]
  40f9b9:	loope  0x40f9aa
  40f9bb:	jmp    DWORD PTR [ebp-0x1e]
  40f9be:	mov    esp,0xe8b755f4
  40f9c3:	sbb    DWORD PTR [edx-0x49],ebx
  40f9c6:	(bad)  
  40f9c7:	jmp    0x40fa0b
  40f9c9:	add    BYTE PTR [ebp-0x48ea04],0x50
  40f9d0:	or     al,BYTE PTR [edi]
  40f9d2:	leave  
  40f9d3:	add    BYTE PTR [edx],ah
  40f9d5:	dec    edx
  40f9d6:	push   eax
  40f9d7:	lea    ebx,[edi-0x1a00104a]
  40f9dd:	sbb    edi,edi
  40f9df:	mov    ch,0x6
  40f9e1:	out    0xff,eax
  40f9e3:	inc    DWORD PTR [eax]
	...
  40fa09:	add    BYTE PTR [eax],al
  40fa0b:	add    BYTE PTR [edx],cl
  40fa0d:	pop    ecx
  40fa0e:	hlt    
  40fa0f:	jmp    ebp
  40fa11:	loope  0x40fa05
  40fa13:	mul    ebp
  40fa15:	mov    dh,0xff
  40fa17:	mov    ch,0x4b
  40fa19:	and    dh,0xff
  40fa1c:	hlt    
  40fa1d:	xchg   esi,ebx
  40fa1f:	imul   esp
  40fa21:	xchg   dh,dl
  40fa23:	test   edi,ebx
  40fa25:	jle    0x40f9fd
  40fa27:	push   edx
  40fa29:	push   cs
  40fa2a:	aad    0xff
  40fa2c:	aam    0x5e
  40fa2e:	push   eax
  40fa2f:	cld    
  40fa30:	jecxz  0x40fa27
  40fa32:	leave  
  40fa33:	add    BYTE PTR [ebx-0x46],cl
  40fa36:	add    edi,edi
  40fa38:	imul   BYTE PTR [edi]
  40fa3a:	out    0xff,al
  40fa3c:	mov    ah,0x47
  40fa3e:	xor    esi,esp
  40fa40:	lods   al,BYTE PTR ds:[esi]
  40fa41:	inc    esi
  40fa42:	imul   eax,DWORD PTR [eax],0xefe754a4
  40fa48:	pushf  
  40fa49:	push   ss
  40fa4a:	jmp    0x40fa8f
  40fa4c:	lahf   
  40fa4d:	push   ds
  40fa4e:	(bad)  
  40fa4f:	(bad)  
  40fa50:	(bad)  
  40fa51:	sti    
  40fa52:	in     eax,0xff
  40fa54:	test   BYTE PTR [edi+0x67bb5d6],cl
  40fa5a:	(bad)  
  40fa5b:	jmp    DWORD PTR [ebx+0x11]
  40fa5e:	int3   
  40fa5f:	add    BYTE PTR [ebx+0x5d],cl
  40fa62:	ret    
  40fa63:	js     0x40fa75
  40fa65:	iret   
  40fa66:	(bad)  
  40fa67:	lock ins BYTE PTR es:[edi],dx
  40fa69:	(bad)  
  40fa6a:	aad    0xe8
  40fa6c:	hlt    
  40fa6d:	into   
  40fa6e:	aad    0xff
	...
  40fa98:	ret    0xec5c
  40fa9b:	out    dx,eax
  40fa9c:	inc    esp
  40fa9d:	lods   al,BYTE PTR ds:[esi]
  40fa9e:	aad    0xb5
  40faa0:	xor    eax,esp
  40faa2:	aad    0xff
  40faa4:	and    ebx,DWORD PTR [ebp+ecx*8-0x1]
  40faa8:	sub    al,0x80
  40faaa:	xor    al,0x28
  40faac:	mov    ah,dl
  40faae:	aam    0xb5
  40fab0:	daa    
  40fab1:	(bad)  
  40fab2:	aad    0xff
  40fab4:	and    esp,DWORD PTR [ecx-0x34]
  40fab7:	add    BYTE PTR [ebx+0x9],cl
  40faba:	bnd ret 
  40fabc:	jg     0x40faae
  40fabe:	jno    0x40fa47
  40fac0:	repz fcom QWORD PTR [esi+0x62d9c0d5]
  40fac7:	pop    ss
  40fac8:	fwait
  40fac9:	and    DWORD PTR [eax],ebp
  40facb:	add    al,0xd8
  40facd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40face:	jle    0x40fa5f
  40fad0:	out    0xdc,eax
  40fad2:	jbe    0x40faa9
  40fad4:	jecxz  0x40fb38
  40fad6:	mov    eax,ds:0x6c7e4b04
  40fadb:	loopne 0x40fa91
  40fadd:	int3   
  40fade:	pop    esi
  40fadf:	xor    al,0xbc
  40fae1:	xchg   esi,eax
  40fae2:	inc    ebp
  40fae3:	in     eax,0xb4
  40fae5:	int3   
  40fae6:	inc    ecx
  40fae7:	push   ebx
  40fae8:	or     BYTE PTR [ecx],0xe9
  40faeb:	jle    0x40fa78
  40faed:	push   ecx
  40faee:	mov    dl,0xd4
  40faf0:	(bad)  
  40faf1:	fld    QWORD PTR [esi-0x2b]
  40faf4:	xchg   esp,eax
  40faf5:	loope  0x40fb26
  40faf7:	out    0x8c,al
  40faf9:	int3   
  40fafa:	jo     0x40fb7b
	...
  40fb24:	jae    0x40fb02
  40fb26:	push   ds
  40fb27:	aad    0x7c
  40fb29:	xchg   esi,eax
  40fb2a:	add    ebp,esp
  40fb2c:	je     0x40fafa
  40fb2e:	add    DWORD PTR [esi],edx
  40fb30:	je     0x40fafe
  40fb32:	push   es
  40fb33:	mov    eax,ds:0x3a820ff
  40fb38:	pop    esp
  40fb39:	xchg   esi,eax
  40fb3a:	or     eax,0x1cc54e5
  40fb3f:	and    eax,DWORD PTR [ebx+0xb08e909]
  40fb45:	push   ebp
  40fb46:	add    cl,BYTE PTR [ecx-0x2b391f32]
  40fb4c:	xor    al,0x80
  40fb4e:	(bad)  [eax+0x4311356e]
  40fb54:	dec    ebx
  40fb55:	fadd   DWORD PTR [ebp+0xe4d6d4]
  40fb5b:	(bad)  
  40fb5c:	dec    ebx
  40fb5e:	call   0x49fc44
  40fb63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb64:	aad    0xd8
  40fb66:	out    dx,eax
  40fb67:	sahf   
  40fb68:	pop    ss
  40fb69:	loope  0x40fbc5
  40fb6b:	xchg   DWORD PTR [edi],ebx
  40fb6d:	int3   
  40fb6e:	call   DWORD PTR [esp+eiz*8-0x25]
  40fb72:	inc    DWORD PTR [esi+0x7eee3bf0]
  40fb78:	imul   DWORD PTR [ebx]
  40fb7a:	pop    esi
  40fb7b:	mov    al,ds:0x7d8b360b
  40fb80:	bound  eax,QWORD PTR [ecx]
  40fb82:	call   0xc91d9
  40fb87:	jb     0x40fb89
	...
  40fbad:	add    BYTE PTR [eax],al
  40fbaf:	add    al,bh
  40fbb1:	retf   
  40fbb2:	xor    eax,0x4a6087
  40fbb7:	pop    esi
  40fbb8:	dec    edx
  40fbb9:	int3   
  40fbba:	jne    0x40fbad
  40fbbc:	iret   
  40fbbd:	inc    esi
  40fbbe:	add    al,0x70
  40fbc0:	lods   eax,DWORD PTR ds:[esi]
  40fbc1:	popf   
  40fbc2:	sub    BYTE PTR [eax-0x1a3d3db8],ch
  40fbc8:	dec    eax
  40fbc9:	mov    edx,DWORD PTR ss:0xb6f8c4cb
  40fbd0:	mov    edi,0x48e9f845
  40fbd5:	or     DWORD PTR [eax],eax
  40fbd7:	push   0x15
  40fbd9:	add    DWORD PTR [eax],eax
  40fbdb:	jge    0x40fc37
  40fbdd:	retf   0xed75
  40fbe0:	ja     0x40fc37
  40fbe2:	or     BYTE PTR [ebx-0xcf91eb8],al
  40fbe8:	js     0x40fbb5
  40fbea:	mov    DWORD PTR [ebx+ebx*1],ebp
  40fbed:	fild   WORD PTR [edi]
  40fbef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbf0:	xchg   edx,eax
  40fbf1:	int    0x0
  40fbf3:	jmp    0xccc0540
  40fbf8:	jmp    0x32413d1e
  40fbfd:	lods   al,BYTE PTR ds:[esi]
  40fbfe:	adc    ecx,DWORD PTR [ebx+0x473bb967]
  40fc04:	xor    cl,BYTE PTR es:[ecx]
  40fc07:	(bad)  
  40fc08:	addr16 mov ebp,0x6f20001
  40fc0e:	jmp    0x40fc16
  40fc10:	jns    0x40fc08
  40fc12:	or     bh,bh
	...
  40fc3c:	push   edi
  40fc3d:	lods   al,BYTE PTR ds:[esi]
  40fc3e:	cmp    DWORD PTR [ebp-0x26],0x5
  40fc42:	jne    0x40fc4c
  40fc44:	int    0x30
  40fc46:	cld    
  40fc47:	call   0x40b2bc
  40fc4c:	imul   eax,DWORD PTR [eax-0x8],0x8c3ab5f
  40fc53:	add    BYTE PTR ds:0x5aae3d4c,al
  40fc59:	inc    esp
  40fc5a:	add    bl,ch
  40fc5c:	stos   BYTE PTR es:[edi],al
  40fc5d:	jnp    0xf67f06a2
  40fc63:	dec    DWORD PTR ds:0x5675feca
  40fc69:	mov    esi,0x444aae05
  40fc6e:	add    BYTE PTR [eax],al
  40fc70:	mov    ds:0x315f0006,al
  40fc75:	adc    BYTE PTR [ebx+0x6a10b5ec],cl
  40fc7b:	add    BYTE PTR [ebp+0x30],bl
  40fc7e:	or     al,ch
  40fc80:	and    eax,0xd9ffffbc
  40fc85:	mov    esp,0xae5a75ff
  40fc8a:	and    al,bh
  40fc8c:	bound  eax,QWORD PTR [esi]
  40fc8e:	cmp    eax,0x63
  40fc91:	xor    BYTE PTR [edi],cl
  40fc93:	push   edi
  40fc94:	mov    dl,0xf7
  40fc96:	and    DWORD PTR [ebp+0x3a],esi
  40fc99:	mov    edx,0xe14b778d
  40fc9e:	jle    0x40fc68
	...
  40fcc8:	cmp    BYTE PTR [edx+esi*1+0x44f94668],al
  40fccf:	add    BYTE PTR [eax+edi*4+0x6e],dh
  40fcd3:	enter  0xe04b,0xfe
  40fcd7:	mov    edi,0x40c9e497
  40fcdc:	dec    edi
  40fcdd:	loopne 0x40fd3c
  40fcdf:	pop    esp
  40fce0:	jno    0x40fcc2
  40fce2:	cmp    ch,al
  40fce4:	les    esp,FWORD PTR [edi-0x5fbffffd]
  40fcea:	push   edi
  40fceb:	add    eax,0xeb03e00d
  40fcf0:	dec    eax
  40fcf1:	mov    ds:0x887c000a,al
  40fcf6:	mov    dl,0xc6
  40fcf8:	dec    ebx
  40fcf9:	loopne 0x40fc81
  40fcfb:	clc    
  40fcfc:	dec    eax
  40fcfd:	stos   DWORD PTR es:[edi],eax
  40fcfe:	push   es
  40fcff:	mov    BYTE PTR [eax+eiz*8+0x7e],0xc7
  40fd04:	adc    eax,0x47c2bc93
  40fd09:	loopne 0x40fd43
  40fd0b:	mov    esi,DWORD PTR [edi-0x2f0338a2]
  40fd11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd12:	inc    DWORD PTR [ebx+ecx*2]
  40fd15:	mov    al,0x3
  40fd17:	add    bl,bh
  40fd19:	inc    edi
  40fd1a:	shl    ebp,0x84
  40fd1d:	and    bh,BYTE PTR [ebp+eax*2+0x7f]
  40fd21:	jmp    0xffcf:0x6c740c57
  40fd28:	mul    bh
  40fd2a:	fcomi  st,st(4)
	...
  40fd54:	pop    esi
  40fd55:	add    dl,dl
  40fd57:	call   esi
  40fd59:	scas   eax,DWORD PTR es:[edi]
  40fd5a:	shl    BYTE PTR [ebp+0x47],cl
  40fd5d:	rcl    DWORD PTR [edi-0x4],cl
  40fd60:	arpl   WORD PTR [edi+0x8],sp
  40fd63:	add    BYTE PTR [ebx+0x9],cl
  40fd66:	out    0x57,al
  40fd68:	aas    
  40fd69:	mov    dl,0x79
  40fd6b:	xlat   BYTE PTR ds:[ebx]
  40fd6c:	xor    al,0xc9
  40fd6e:	mov    al,ds:0x3a093fc6
  40fd73:	pop    esp
  40fd74:	and    edx,esi
  40fd76:	daa    
  40fd77:	add    al,0x33
  40fd79:	frstor [edi-0x56ebb4fc]
  40fd7f:	pop    eax
  40fd80:	cmp    DWORD PTR [ecx+edx*4+0x27f24d5c],edx
  40fd87:	add    al,0x98
  40fd89:	mov    cl,0xb1
  40fd8b:	retf   0x94b
  40fd8e:	dec    edx
  40fd8f:	jmp    0x40fdb4
  40fd91:	dec    edx
  40fd92:	jmp    0x72a005c3
  40fd97:	loopne 0x40fe0e
  40fd99:	pop    esp
  40fd9a:	push   ss
  40fd9b:	rcr    DWORD PTR [esi+0x11],1
  40fd9e:	sbb    DWORD PTR [edi+0x73e90a05],0x8dcc950
  40fda8:	sbb    al,0x64
  40fdaa:	mov    edi,0xe91189ba
  40fdaf:	jl     0x40fddf
  40fdb1:	adc    DWORD PTR [ecx+0x7d],edi
  40fdb4:	sbb    DWORD PTR [ecx+0x5772],0x0
	...
  40fddf:	add    BYTE PTR [edi-0xc],cl
  40fde2:	sub    al,dl
  40fde4:	ror    al,cl
  40fde6:	ror    DWORD PTR ss:[ecx+ebx*4-0x76245dc5],1
  40fdee:	out    0x3,al
  40fdf0:	mul    DWORD PTR [ecx]
  40fdf2:	mov    dh,0x34
  40fdf4:	arpl   WORD PTR [esi+0x144b042f],cx
  40fdfa:	sub    DWORD PTR [edi+0x4c],edx
  40fdfd:	push   0xcb9231a2
  40fe02:	icebp  
  40fe03:	add    eax,edx
  40fe05:	verw   WORD PTR [edx-0x7f]
  40fe09:	or     eax,0x9d717eb
  40fe0e:	add    cl,ch
  40fe10:	dec    eax
  40fe11:	push   0xcaf03f5b
  40fe16:	or     cl,ch
  40fe18:	jne    0x40fdae
  40fe1a:	in     al,dx
  40fe1b:	bound  ecx,QWORD PTR [ebp+0x74a90b11]
  40fe21:	push   cs
  40fe22:	add    BYTE PTR [ecx],0x4f
  40fe25:	or     DWORD PTR ds:[ecx+0x48],esi
  40fe29:	or     DWORD PTR [eax],eax
  40fe2b:	jmp    0xe945c8f1
  40fe30:	pop    edi
  40fe31:	fucomi st,st(3)
  40fe33:	test   al,0x0
  40fe36:	pop    esp
  40fe37:	sbb    eax,0xbe388944
  40fe3c:	jge    0x40fe4e
  40fe3e:	mov    edx,0x948e8
  40fe43:	xchg   edx,eax
	...
  40fe6c:	dec    ebp
  40fe6d:	add    DWORD PTR [eax],0xffffffe9
  40fe70:	dec    eax
  40fe71:	or     DWORD PTR [eax+0x69],eax
  40fe74:	push   eax
  40fe75:	or     DWORD PTR [ebp+0x4d],esi
  40fe78:	aas    
  40fe79:	retf   
  40fe7a:	leave  
  40fe7b:	sub    ecx,DWORD PTR [ecx+ecx*1+0x55]
  40fe7f:	bound  ecx,QWORD PTR [edi+ebx*2+0x4e27ba56]
  40fe86:	or     al,0xec
  40fe88:	dec    eax
  40fe89:	or     eax,0xa8d9e900
  40fe8e:	push   eax
  40fe8f:	inc    ecx
  40fe90:	(bad)  
  40fe91:	mov    esp,0xc1072eff
  40fe96:	mov    eax,DWORD PTR [ecx-0x1]
  40fe99:	cmp    eax,0x15357208
  40fe9e:	jmp    0x40fe8b
  40fea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fea1:	push   ecx
  40fea2:	or     esp,DWORD PTR [eax]
  40fea4:	cld    
  40fea5:	or     eax,0xc5840080
  40feaa:	je     0x40fea1
  40feac:	pop    ecx
  40fead:	xor    BYTE PTR [edx+eax*1-0x2],0x2
  40feb2:	sub    eax,eax
  40feb4:	mov    BYTE PTR [edi+0x430c75c9],cl
  40feba:	ret    
  40febb:	pop    ebx
  40febc:	je     0x40feb4
  40febe:	enter  0x2ac2,0xb
  40fec2:	push   ebx
  40fec3:	push   esi
  40fec4:	mov    ebx,0x32000011
  40fec9:	cmp    esi,DWORD PTR [ebx]
  40fecb:	shl    BYTE PTR [edx+0x1a],cl
  40fece:	fist   DWORD PTR [eax+0x0]
	...
  40fef8:	(bad)  
  40fef9:	cmp    eax,0x3db2b60f
  40fefe:	cmp    al,0x2b
  40ff00:	and    BYTE PTR [eax+0x6],0x90
  40ff04:	popa   
  40ff05:	retf   
  40ff06:	ds nop
  40ff08:	and    DWORD PTR [ecx],ebx
  40ff0a:	das    
  40ff0b:	nop
  40ff0c:	aas    
  40ff0d:	seto   BYTE PTR [ebx+0x439016b0]
  40ff14:	xchg   esi,eax
  40ff15:	sbb    dl,BYTE PTR [eax+0x3916e87c]
  40ff1b:	nop
  40ff1c:	mov    ch,0x11
  40ff1e:	add    al,0x4
  40ff20:	mov    cl,0x7a
  40ff22:	inc    ebx
  40ff23:	cmp    al,0xe3
  40ff25:	cmp    bh,BYTE PTR [ebx+ecx*1+0x56]
  40ff29:	repz (bad) 
  40ff2b:	jg     0x40fed9
  40ff2d:	es inc ecx
  40ff2f:	nop
  40ff30:	mov    cl,0x7a
  40ff32:	inc    ebx
  40ff33:	cmp    al,0x83
  40ff35:	cmp    bh,BYTE PTR [edx+ecx*1-0x6a]
  40ff39:	push   eax
  40ff3a:	nop
  40ff3b:	jg     0x40ffac
  40ff3d:	es inc edi
  40ff3f:	add    eax,DWORD PTR [edx+0x4a]
  40ff42:	rol    edx,0x6c
  40ff45:	test   al,0xb1
  40ff47:	ror    DWORD PTR [ebx-0x16],0x5
  40ff4b:	mov    ecx,DWORD PTR [ecx+0x73c1bbe7]
  40ff51:	mov    eax,0xfbc0903a
  40ff56:	jae    0x40ffb6
  40ff58:	lock repnz cmp BYTE PTR [ebx+0x0],cl
	...
  40ff84:	aaa    
  40ff85:	mov    ds:0x3b3f5636,eax
  40ff8a:	pop    eax
  40ff8b:	or     bl,bl
  40ff8d:	cmp    dl,BYTE PTR [eax+0x10]
  40ff90:	fld    TBYTE PTR [edx]
  40ff92:	inc    eax
  40ff93:	or     al,0xbb
  40ff95:	and    ch,BYTE PTR [ebx+0x346069e3]
  40ff9b:	nop
  40ff9c:	and    eax,DWORD PTR [edx]
  40ff9e:	iret   
  40ff9f:	dec    DWORD PTR [eax+eiz*2]
  40ffa2:	mov    cl,cl
  40ffa4:	test   DWORD PTR [eax-0x480c3e67],ebp
  40ffaa:	jae    0x40ffef
  40ffac:	jmp    0xdb9a7318
  40ffb1:	xor    al,ch
  40ffb3:	add    al,0xbb
  40ffb5:	xor    bl,ah
  40ffb7:	add    al,0xbb
  40ffb9:	push   cs
  40ffba:	scas   al,BYTE PTR es:[edi]
  40ffbb:	nop
  40ffbc:	shl    BYTE PTR [edx+0x73],0x5e
  40ffc0:	ins    BYTE PTR es:[edi],dx
  40ffc1:	sbb    edi,DWORD PTR [ebp+0x38b057c2]
  40ffc7:	mov    ebp,DWORD PTR [edi-0x4a1338d0]
  40ffcd:	data16 into 
  40ffcf:	push   ebx
  40ffd0:	pusha  
  40ffd1:	sti    
  40ffd2:	jg     0x410019
  40ffd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffd5:	jg     0x410032
  40ffd7:	and    dh,BYTE PTR [edx+0x71]
  40ffda:	add    edi,edi
  40ffdc:	pop    esi
  40ffdd:	mov    edi,0x484b411c
  40ffe2:	es (bad) 
  40ffe4:	dec    ebx
  40ffe5:	mov    al,0xfa
  40ffe7:	mov    edi,0x0
	...
  410010:	test   BYTE PTR [eax],0xcb
  410013:	into   
  410014:	(bad)  
  410015:	sbb    BYTE PTR [esi],bl
  410017:	pop    eax
  410018:	aas    
  410019:	xor    ebp,edx
  41001b:	pop    ecx
  41001c:	dec    ebx
  41001d:	(bad)  
  41001e:	xchg   esp,eax
  41001f:	sti    
  410020:	pop    ebp
  410021:	cmp    eax,DWORD PTR ds:0xe9cf3fdb
  410027:	add    eax,DWORD PTR [eax-0x37]
  41002a:	jl     0x410030
  41002c:	mov    ah,al
  41002e:	je     0x40ffff
  410030:	xor    esi,DWORD PTR [ebp+0x104b04ac]
  410036:	ret    0xc7fd
  410039:	into   
  41003a:	jmp    0x64d74b42
  41003f:	rcr    DWORD PTR ds:0xa334c6c5,1
  410045:	or     eax,0xb14b03e8
  41004a:	xchg   ebx,eax
  41004b:	enter  0x94b,0xe2
  41004f:	ret    
  410050:	dec    esp
  410051:	lea    edx,[ebp+0x4]
  410054:	dec    ebx
  410055:	or     esp,ebx
  410057:	pop    es
  410058:	dec    edx
  410059:	or     ecx,ebp
  41005b:	cld    
  41005c:	int    0x6a
  41005e:	jmp    0xe9704b66
  410063:	jle    0x410033
  410065:	mov    eax,0x59cccd7f
  41006a:	or     DWORD PTR [ebp+0x7ee9098f],0xcd67b8c6
	...
  41009c:	mov    ah,0x59
  41009e:	push   ecx
  41009f:	inc    esp
  4100a0:	lods   eax,DWORD PTR ds:[esi]
  4100a1:	les    edx,FWORD PTR [esi-0x7]
  4100a4:	in     al,0x3e
  4100a6:	in     eax,dx
  4100a7:	pop    ebx
  4100a8:	repz icebp 
  4100aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100ab:	add    eax,esi
  4100ad:	mov    ?,WORD PTR [edx]
  4100af:	into   
  4100b0:	mov    esp,es
  4100b2:	add    BYTE PTR [ecx+0x2ef6e2a0],bl
  4100b8:	mov    es,esp
  4100ba:	jne    0x4100ad
  4100bc:	cmp    BYTE PTR [ecx-0x3b81e9dc],dh
  4100c2:	jmp    0x4100aa
  4100c4:	xchg   edi,eax
  4100c5:	or     BYTE PTR ds:[esp+eax*8-0x48],bl
  4100ca:	inc    BYTE PTR [esi]
  4100cc:	xchg   BYTE PTR [ecx-0x18],bl
  4100cf:	ds jne 0x410096
  4100d2:	jmp    DWORD PTR [eax-0x34]
  4100d5:	mov    ah,0xfe
  4100d7:	out    dx,al
  4100d8:	comiss xmm0,DWORD PTR [eax]
  4100db:	push   ebx
  4100dc:	dec    edi
  4100dd:	das    
  4100de:	add    dl,BYTE PTR [ebx+0x47]
  4100e1:	das    
  4100e2:	add    eax,DWORD PTR [ecx+0x4f]
  4100e5:	or     DWORD PTR [eax],eax
  4100e7:	test   eax,0xc7ec7e0f
  4100ec:	pop    es
  4100ed:	(bad)  
  4100ee:	call   0x4a0cc0
  4100f3:	pusha  
  4100f4:	(bad)  
  4100f5:	rol    DWORD PTR [eax+0x35],0xef
  4100f9:	ret    0xf975
  4100fc:	pop    es
  4100fd:	ds or  al,0x9e
	...
  410128:	xchg   ebp,eax
  410129:	shr    eax,0xc7
  41012c:	push   es
  41012d:	(bad)  
  41012e:	jmp    DWORD PTR [edx-0x50]
  410131:	ret    
  410132:	jne    0x4100b5
  410134:	lock faddp st(3),st
  410137:	jmp    0xfd1c1184
  41013c:	ret    
  41013d:	ret    0x7db5
  410140:	mov    es,ebx
  410142:	call   DWORD PTR [ecx+0x45]
  410145:	int    0x0
  410147:	jmp    0x582d7ecb
  41014c:	xchg   edi,eax
  41014d:	ret    
  41014e:	call   0x47b74
  410153:	add    BYTE PTR [ecx],bl
  410155:	leave  
  410156:	pop    ebx
  410157:	leave  
  410158:	pusha  
  410159:	(bad)  
  41015a:	call   DWORD PTR [ecx+ebp*8-0x1d]
  41015e:	add    esp,0xffffd63e
  410164:	mov    cl,0xd4
  410166:	jne    0x410174
  410168:	dec    ebp
  410169:	pop    ebx
  41016a:	or     BYTE PTR [eax-0x70],ch
  41016d:	push   ds
  41016e:	inc    ecx
  41016f:	add    BYTE PTR [ebp+0x1b],cl
  410172:	aaa    
  410173:	sub    DWORD PTR [ebx+0x57b9e807],esp
  410179:	iret   
  41017a:	dec    DWORD PTR [ebx]
  41017c:	jb     0x410143
  41017e:	test   dl,bl
  410180:	xor    al,BYTE PTR [edi]
  410182:	add    BYTE PTR [ebx],ch
  410184:	or     DWORD PTR [ecx-0x7b],eax
  410187:	out    dx,eax
  410188:	or     al,0xcf
  41018a:	call   DWORD PTR [eax+0x0]
	...
  4101b1:	add    BYTE PTR [eax],al
  4101b3:	add    BYTE PTR [edx+0x32000109],cl
  4101b9:	(bad)  
  4101bb:	ret    
  4101bc:	and    al,BYTE PTR [edi]
  4101be:	or     eax,eax
  4101c0:	sbb    eax,0xf200bd43
  4101c5:	push   es
  4101c6:	cmp    eax,0x6f304
  4101cb:	pcmpgtw mm3,QWORD PTR [ebx+0x41e20000]
  4101d2:	inc    ebp
  4101d3:	cld    
  4101d4:	and    ah,ch
  4101d6:	mov    edx,0x8dcecde9
  4101db:	test   DWORD PTR [ebp+0x32ffffcf],edi
  4101e1:	in     eax,0x4f
  4101e3:	std    
  4101e4:	cmp    eax,0xb7c00bce
  4101e9:	stos   BYTE PTR es:[edi],al
  4101ea:	addr16 test al,0x5a
  4101ed:	dec    esp
  4101ee:	add    BYTE PTR [ebp-0x121d9],cl
  4101f4:	dec    ebx
  4101f5:	pop    ebx
  4101f6:	xor    al,0xe8
  4101f8:	mov    bl,0x5d
  4101fa:	retf   
  4101fb:	call   DWORD PTR [ebp+eax*4-0x405cb005]
  410202:	sar    edi,1
  410204:	test   BYTE PTR [edi-0x5],al
  410207:	(bad)  
  410208:	mul    BYTE PTR [edi-0x159b7a88]
  41020e:	retf   0x1bff
  410211:	sbb    BYTE PTR [edx+0x341b64f5],bh
  410217:	inc    DWORD PTR [eax]
	...
  41023d:	add    BYTE PTR [eax],al
  41023f:	add    dh,dl
  410241:	adc    esi,DWORD PTR [eax+ebp*8]
  410244:	in     eax,dx
  410245:	push   ss
  410246:	retf   
  410247:	inc    DWORD PTR [eax-0x10]
  41024a:	dec    edi
  41024b:	push   ebx
  41024c:	inc    esp
  41024d:	inc    ebp
  41024e:	(bad)  
  41024f:	call   0xc0b70
  410254:	ret    0xcbf4
  410257:	sub    DWORD PTR [esi-0x768bfc58],0x2d
  41025e:	inc    eax
  41025f:	hlt    
  410260:	jnp    0x410235
  410262:	push   eax
  410263:	cld    
  410264:	and    ebx,DWORD PTR [edx]
  410266:	rol    BYTE PTR [eax],0x4b
  410269:	sub    eax,0x7b3978c3
  41026e:	push   eax
  41026f:	hlt    
  410270:	rep lods eax,DWORD PTR ds:[esi]
  410272:	mov    BYTE PTR [eax],0x4b
  410275:	mov    bh,0xc3
  410277:	je     0x41029e
  410279:	add    bl,cl
  41027b:	jne    0x410260
  41027d:	xchg   DWORD PTR ds:0x7e92dcf2,eax
  410283:	fdiv   DWORD PTR [ebx-0x75]
  410286:	push   eax
  410287:	clc    
  410288:	js     0x4102aa
  41028a:	fsubr  QWORD PTR [ecx+edi*4]
  41028d:	cmp    cl,dl
  41028f:	push   DWORD PTR [esi]
  410291:	cmp    al,0xdb
  410293:	out    0x89,al
  410295:	or     cl,ch
  410297:	add    eax,eax
  410299:	dec    ebx
  41029a:	in     eax,dx
  41029b:	retf   0xc11e
  41029e:	add    si,WORD PTR [ebx+0xca58cf]
	...
  4102c9:	add    BYTE PTR [eax],al
  4102cb:	add    BYTE PTR [ecx+eax*8-0xd5c3844],dl
  4102d2:	dec    edi
  4102d3:	retf   0x8d84
  4102d6:	sub    ch,BYTE PTR [esi]
  4102d8:	xchg   edx,eax
  4102d9:	(bad)  
  4102da:	loope  0x4102df
  4102dc:	push   ds
  4102dd:	mov    ss,WORD PTR ds:0xf143c032
  4102e3:	fidivr WORD PTR [edx]
  4102e5:	pop    edx
  4102e6:	add    al,BYTE PTR [ecx]
  4102e8:	ror    DWORD PTR [ecx-0x18],1
  4102eb:	jnp    0x410339
  4102ed:	dec    edx
  4102ee:	imul   ecx,DWORD PTR [edx],0x29f43c4b
  4102f4:	xchg   esp,eax
  4102f5:	dec    eax
  4102f6:	imul   ecx,DWORD PTR [edx],0x8303356b
  4102fc:	je     0x41030c
  4102fe:	pop    ebp
  4102ff:	(bad)  
  410301:	add    bl,dh
  410303:	dec    edi
  410304:	sub    ecx,DWORD PTR [edx-0x1b6704ea]
  41030a:	bound  eax,QWORD PTR [edi+0x43]
  41030d:	sar    BYTE PTR [esp+edi*8],0x24
  410311:	xchg   DWORD PTR [ebx-0x4e73b4fc],ebp
  410317:	add    al,0x75
  410319:	call   0xc0744b86
  41031e:	leave  
  41031f:	dec    edi
  410320:	push   esi
  410321:	mov    DWORD PTR ds:0x1d0ee40c,ebx
  410327:	cli    
  410328:	pop    esp
  410329:	cmp    eax,0x3541c8d1
  41032e:	out    dx,al
  41032f:	add    DWORD PTR [eax],0x0
	...
  410356:	add    BYTE PTR [eax],al
  410358:	dec    edi
  410359:	add    DWORD PTR [esi-0x5],edi
  41035c:	aas    
  41035d:	or     BYTE PTR [eax],al
  41035f:	scas   eax,DWORD PTR es:[edi]
  410360:	or     eax,DWORD PTR [ecx]
  410362:	(bad)  
  410363:	jmp    0xec2c0eff
  410368:	(bad)  
  410369:	int    0x5f
  41036b:	xor    BYTE PTR [ebp+0x1fbc0005],cl
  410371:	lods   eax,DWORD PTR ds:[esi]
  410372:	and    DWORD PTR ds:0x4835cab,0xffffffdc
  410379:	out    dx,eax
  41037a:	inc    eax
  41037b:	jmp    0x6a5338c8
  410380:	inc    esp
  410381:	loop   0x4103b1
  410383:	test   al,0x48
  410385:	or     DWORD PTR [eax+esi*8-0x39],esi
  410389:	inc    al
  41038b:	iret   
  41038c:	or     DWORD PTR [ecx],ecx
  41038e:	add    BYTE PTR [ebx+ecx*2-0x6e4d400c],bl
  410395:	retf   
  410396:	or     cl,ch
  410398:	das    
  410399:	in     al,0xc7
  41039b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41039c:	adc    al,0x9
  41039e:	add    cl,ch
  4103a0:	dec    eax
  4103a1:	mov    es,WORD PTR [ebp-0xf]
  4103a4:	js     0x410366
  4103a6:	jne    0x410399
  4103a8:	mov    cs,WORD PTR [ecx]
  4103aa:	push   esp
  4103ac:	cmc    
  4103ad:	out    dx,al
  4103ae:	inc    eax
  4103af:	jmp    0x32b583d3
  4103b4:	div    DWORD PTR [esi]
  4103b6:	ret    0x48e9
  4103b9:	xchg   esp,eax
  4103ba:	shr    BYTE PTR [eax+eax*1+0x0],1
	...
  4103e2:	add    BYTE PTR [eax],al
  4103e4:	inc    ebp
  4103e5:	mov    ch,0x50
  4103e7:	inc    ebx
  4103e8:	daa    
  4103e9:	pop    ebx
  4103ea:	call   esp
  4103ec:	or     edi,ebp
  4103ee:	inc    eax
  4103ef:	jmp    0xd0b583e3
  4103f4:	or     eax,DWORD PTR [esi-0x1c]
  4103f7:	call   0x8e410d44
  4103fc:	test   ecx,eax
  4103fe:	pop    DWORD PTR [eax]
  410400:	pop    ds
  410401:	(bad)  
  410403:	jne    0x41044b
  410405:	inc    ecx
  410406:	inc    ebp
  410407:	in     al,dx
  410408:	xor    DWORD PTR [edi+0xc],eax
  41040b:	add    BYTE PTR [esi+0x1245c6c2],bh
  410411:	push   es
  410412:	add    BYTE PTR [eax],al
  410414:	mov    dl,0xdc
  410416:	pop    es
  410417:	(bad)  
  410418:	out    dx,eax
  410419:	fild   DWORD PTR [eax]
  41041b:	add    BYTE PTR [edx+0x78006a0b],ah
  410421:	or     ebp,DWORD PTR [edx+0x10]
  410424:	idiv   esi
  410426:	jecxz  0x410478
  410428:	mov    BYTE PTR [ebx],cl
  41042a:	push   DWORD PTR [ebp+0x3e]
  41042d:	rcl    DWORD PTR ds:0x4a94d9,1
  410433:	or     esi,DWORD PTR [edx]
  410435:	push   eax
  410436:	add    DWORD PTR [ebx-0xf],eax
  410439:	inc    esi
  41043a:	hlt    
  41043b:	add    BYTE PTR [esi+0x4e75fec3],bh
  410441:	loop   0x4103dd
  410443:	shl    DWORD PTR [edx],0xb
  410446:	mov    eax,ebx
	...
  410470:	fld    DWORD PTR [ebx-0xfddf73e]
  410476:	mov    ch,ah
  410478:	and    eax,0x9ee80859
  41047d:	les    eax,FWORD PTR [eax]
  41047f:	add    BYTE PTR [edx-0xb],dh
  410482:	out    0xa0,eax
  410484:	repnz (bad) 
  410486:	call   DWORD PTR [eax+0x5]
  410489:	pop    ecx
  41048a:	or     BYTE PTR [eax+0x1a],dl
  41048d:	rol    DWORD PTR gs:[eax],0xf2
  410491:	repnz enter 0xeec2,0xa
  410496:	push   ebp
  410497:	mov    edx,esi
  410499:	mov    al,ah
  41049b:	cld    
  41049c:	and    DWORD PTR [edx-0x4fb4f783],ecx
  4104a2:	push   eax
  4104a3:	pop    es
  4104a4:	and    BYTE PTR [eax+0x2b],dh
  4104a7:	leave  
  4104a8:	or     DWORD PTR [ebp+0x1aa02b03],ebp
  4104ae:	add    al,0x6a
  4104b0:	dec    ebx
  4104b1:	or     al,BYTE PTR [edx+ebp*2]
  4104b4:	dec    ebx
  4104b5:	or     al,bh
  4104b7:	push   DWORD PTR [esi]
  4104b9:	mov    eax,0xb0310059
  4104be:	fcmovnb st,st(4)
  4104c0:	mov    dh,BYTE PTR [eax-0x2b74f4fd]
  4104c6:	adc    cl,BYTE PTR [ecx+0x75c74406]
  4104cc:	xchg   DWORD PTR [eax+0x2e],ebx
  4104cf:	lock jl 0x4104c9
  4104d2:	cli    
  4104d3:	mov    edi,0x0
	...
  4104fc:	inc    DWORD PTR [ebx]
  4104fe:	jnp    0x4104d8
  410500:	loope  0x4104b1
  410502:	pop    ecx
  410503:	add    BYTE PTR [ebp+edx*4-0x39],ah
  410507:	push   ebx
  410508:	icebp  
  410509:	push   ss
  41050a:	(bad)  
  41050b:	jne    0x410550
  41050d:	mov    al,BYTE PTR [ebx]
  41050f:	push   0x4b
  410511:	sbb    BYTE PTR [ebp-0x3f],ch
  410514:	dec    ebx
  410515:	mov    al,0xfa
  410517:	mov    edi,0xe832a8b6
  41051c:	push   edx
  41051d:	rol    dh,0xff
  410520:	pusha  
  410521:	retf   
  410522:	jp     0x4104e7
  410524:	cmp    BYTE PTR [ecx-0x3f],0x4
  410528:	dec    ebx
  410529:	std    
  41052a:	jp     0x410518
  41052c:	enter  0xd763,0x50
  410530:	js     0x410553
  410532:	xor    dl,BYTE PTR [edi-0x63]
  410535:	cmp    eax,DWORD PTR [eax+0xc]
  410538:	into   
  410539:	daa    
  41053a:	add    DWORD PTR [eax],0x4b
  41053d:	mov    al,0x78
  41053f:	adc    al,0x6
  410541:	or     ecx,ebp
  410543:	add    ecx,DWORD PTR [ebx+0x9]
  410546:	jb     0x4104f3
  410548:	rcl    al,1
  41054a:	test   al,0xdb
  41054c:	dec    ebp
  41054d:	nop
  41054e:	and    al,0xd8
  410550:	sar    BYTE PTR [ebx],0xf1
  410553:	add    al,dl
  410555:	(bad)  
  410556:	out    0x83,al
  410558:	enter  0xb6a9,0x1a
  41055c:	mov    al,0x89
  41055e:	jb     0x41056b
	...
  410588:	cmp    DWORD PTR [edi],ecx
  41058a:	jmp    0x4b03:0xe948e3ca
  410591:	repnz sub DWORD PTR [edx],eax
  410594:	xchg   ebx,eax
  410595:	mov    ebp,0x55c2d7a4
  41059a:	add    DWORD PTR [ecx-0x2],edi
  41059d:	mov    eax,0xea4bfd26
  4105a2:	stos   DWORD PTR es:[edi],eax
  4105a3:	pop    esi
  4105a4:	mov    WORD PTR [esi-0x1b],es
  4105a7:	jl     0x410549
  4105a9:	retf   
  4105aa:	push   ss
  4105ab:	mov    esi,0xa71f110d
  4105b0:	mov    eax,ds:0x473d2ea0
  4105b5:	aaa    
  4105b6:	mov    ch,0x11
  4105b8:	cmp    edi,DWORD PTR [esi+0x3744d77c]
  4105be:	icebp  
  4105bf:	js     0x410547
  4105c1:	mov    ecx,0x95edb99
  4105c6:	jmp    0xedc434ce
  4105cb:	add    ecx,DWORD PTR [ebx+0x9]
  4105ce:	jb     0x410617
  4105d0:	cmp    edi,DWORD PTR [eax+0x5f74268c]
  4105d6:	xor    BYTE PTR [ecx],ch
  4105d8:	jae    0x4105ac
  4105da:	stos   DWORD PTR es:[edi],eax
  4105db:	clc    
  4105dc:	add    al,0x56
  4105de:	jb     0x4105b8
  4105e0:	enter  0xc5,0xb5
  4105e4:	and    eax,0x381a5054
  4105e9:	push   edi
  4105ea:	mov    ebx,DWORD PTR [eax+eax*1]
	...
  410611:	add    BYTE PTR [eax],al
  410613:	add    bl,ah
  410615:	(bad)  
  410616:	jge    0x410609
  410618:	arpl   WORD PTR [esi+0x10],ax
  41061b:	pusha  
  41061c:	adc    al,0xbd
  41061e:	mov    esp,esi
  410620:	push   ebx
  410621:	pop    esp
  410622:	add    al,0x72
  410624:	jle    0x410637
  410626:	mov    edx,DWORD PTR [esi]
  410628:	ret    
  410629:	(bad)  
  41062a:	stc    
  41062b:	mov    edx,0xbafae882
  410630:	or     BYTE PTR [esi+0x6510ee84],0x6a
  410637:	ss dec edx
  410639:	add    eax,ecx
  41063b:	sub    DWORD PTR [esi-0x7d9d3cf9],edx
  410641:	clc    
  410642:	clc    
  410643:	or     dl,BYTE PTR [edi-0x4930708]
  410649:	adc    edx,DWORD PTR [esi+0x7e]
  41064c:	mov    dh,0xb1
  41064e:	add    edx,DWORD PTR [edi-0xa3d3694]
  410654:	dec    ebx
  410655:	(bad)  [ebx+0x23c03a21]
  41065b:	adc    edi,DWORD PTR [edx]
  41065d:	ror    BYTE PTR [ebp+0x70df565d],0xc9
  410664:	or     BYTE PTR fs:[esi-0xf],cl
  410668:	or     edx,ecx
  41066a:	adc    edx,ebp
  41066c:	repnz (bad) 
  41066e:	cli    
  41066f:	mov    edx,0x1af8e800
  410674:	pop    ss
  410675:	mov    ds,WORD PTR [esi+edi*8+0x0]
	...
  4106a0:	test   dl,0xbd
  4106a3:	test   al,0x4b
  4106a5:	pop    ebx
  4106a6:	or     al,0xa8
  4106a8:	or     edx,DWORD PTR [ebx]
  4106aa:	add    eax,DWORD PTR [eax]
  4106ac:	stos   DWORD PTR es:[edi],eax
  4106ad:	inc    eax
  4106ae:	stc    
  4106af:	xor    ecx,DWORD PTR [eax]
  4106b1:	jmp    0x32f93ab0
  4106b6:	test   BYTE PTR [edi],al
  4106b8:	ins    DWORD PTR es:[edi],dx
  4106b9:	mov    ch,0x7b
  4106bb:	cmc    
  4106bc:	icebp  
  4106bd:	std    
  4106be:	xadd   DWORD PTR [edx+0x69c302bc],esi
  4106c5:	shl    DWORD PTR [ebx],1
  4106c7:	stc    
  4106c8:	add    eax,edx
  4106ca:	xor    edi,ecx
  4106cc:	aas    
  4106cd:	sub    al,0x17
  4106cf:	sub    ah,ah
  4106d1:	cmp    al,0x47
  4106d3:	add    edx,DWORD PTR [ecx+edi*4-0x40]
  4106d7:	ret    0x88e
  4106da:	ror    BYTE PTR [ebx+0x23fb192a],1
  4106e0:	sub    BYTE PTR [ecx],bl
  4106e2:	sti    
  4106e3:	lea    ebp,[esi]
  4106e5:	mov    ch,0x12
  4106e7:	inc    esi
  4106e8:	xor    bl,BYTE PTR [ebp-0x3995b1fd]
  4106ee:	rcl    DWORD PTR [ecx],0x71
  4106f1:	or     DWORD PTR [ebx+0x23cf71fa],0x8dcf71f9
  4106fb:	pushf  
  4106fc:	dec    ebp
  4106fd:	or     BYTE PTR [ebp+0x5e093f46],dl
  410703:	sbb    al,0x0
	...
  410729:	add    BYTE PTR [eax],al
  41072b:	add    BYTE PTR [ebx],ah
  41072d:	leave  
  41072e:	push   ss
  41072f:	add    ebx,DWORD PTR [ebx]
  410731:	inc    ecx
  410732:	stc    
  410733:	xor    ecx,DWORD PTR [eax-0x17]
  410736:	cli    
  410737:	xor    ecx,DWORD PTR [eax+0x33]
  41073a:	test   BYTE PTR [edi],al
  41073c:	pop    edx
  41073d:	sub    BYTE PTR cs:[ecx+0x21],0xfd
  410742:	pop    ds
  410743:	shl    edx,0xe
  410746:	add    eax,ebx
  410748:	cdq    
  410749:	jp     0x41077e
  41074b:	stc    
  41074c:	dec    ebx
  41074d:	bsf    esi,DWORD PTR [ebx]
  410750:	adc    bl,BYTE PTR [esi-0x68]
  410753:	pop    ss
  410754:	mov    ah,0x7b
  410756:	dec    eax
  410757:	mov    ecx,DWORD PTR [eax+0x12]
  41075a:	call   0x6e6111f
  41075f:	rol    al,1
  410761:	js     0x41075a
  410763:	cli    
  410764:	sub    BYTE PTR [esi-0x9],ah
  410767:	cli    
  410768:	into   
  410769:	sub    al,0x13
  41076b:	mov    cl,0x70
  41076d:	xchg   ebx,eax
  41076e:	ret    
  41076f:	add    edi,DWORD PTR [ebp-0x38]
  410772:	(bad)
  410776:	int    0x8b
  410778:	sar    DWORD PTR [edi-0x45],0x23
  41077c:	mov    dl,0x7f
  41077e:	mov    ebx,0x81cbcf8d
  410783:	xlat   BYTE PTR ds:[ebx]
  410784:	pop    es
  410785:	cmp    DWORD PTR [edi],eax
  410787:	pop    esi
  410788:	outs   dx,DWORD PTR ds:[esi]
  410789:	icebp  
  41078a:	(bad)  
  41078b:	push   ss
  41078c:	dec    eax
  41078d:	stc    
  41078e:	mov    ?,ecx
	...
  4107b8:	pop    eax
  4107b9:	push   esi
  4107ba:	out    0xfa,eax
  4107bc:	cmp    BYTE PTR [esi-0x6f],al
  4107bf:	test   BYTE PTR [esi+ecx*1+0x15],al
  4107c3:	nop
  4107c4:	loopne 0x410774
  4107c6:	dec    ecx
  4107c7:	xor    BYTE PTR [edx-0x77fcf510],cl
  4107cd:	aaa    
  4107ce:	mov    edi,0xbbcf6233
  4107d3:	xor    edx,DWORD PTR [edx+0x25]
  4107d6:	cwde   
  4107d7:	pop    ss
  4107d8:	mov    eax,0x48fd9ba1
  4107dd:	call   0xd006:0xac09c0f7
  4107e4:	shl    BYTE PTR [edi-0x4997050a],0xf6
  4107eb:	cli    
  4107ec:	(bad)  
  4107ed:	or     BYTE PTR [ebp+0x12],dh
  4107f0:	int    0x45
  4107f2:	pusha  
  4107f3:	push   0x48
  4107f5:	dec    ebx
  4107f6:	adc    ebp,eax
  4107f8:	or     bl,BYTE PTR [eax]
  4107fa:	jmp    0x28bb:0xfabed0cd
  410801:	sar    dl,0xbb
  410804:	(bad)  
  410805:	pushf  
  410806:	(bad)  
  410807:	in     al,0x44
  410809:	jne    0x41082b
  41080b:	pop    es
  41080c:	test   ebp,edi
  41080e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41080f:	(bad)  
  410810:	xor    eax,0xd28ec006
  410815:	cmc    
  410816:	xchg   ecx,eax
  410817:	out    0xd2,al
  410819:	cmc    
  41081a:	(bad)  
  41081b:	nop
	...
  410844:	iret   
  410845:	add    DWORD PTR [ebx],ecx
  410847:	jmp    0x4a2bbbaa
  41084c:	dec    edi
  41084d:	enter  0x8a9,0x48
  410851:	(bad)  
  410852:	bound  edi,QWORD PTR [esi-0x42f53ea8]
  410858:	pop    eax
  410859:	mov    esi,0x493c976c
  41085e:	call   0x8a1b:0xb7058b43
  410865:	(bad)  
  410866:	lock push es
  410868:	fwait
  410869:	lea    eax,[ecx-0xa]
  41086c:	jb     0x410853
  41086e:	xor    esi,esi
  410870:	je     0x4107fd
  410872:	pop    ebp
  410873:	adc    bh,dl
  410875:	pop    esi
  410876:	(bad)  
  410877:	jmp    0xc50e53c5
  41087c:	mov    cl,BYTE PTR [edx]
  41087e:	jmp    0x68bc:0xdabec0cd
  410885:	mov    cl,0xba
  410887:	mov    ebp,0x6dde95ce
  41088c:	or     al,0x80
  41088e:	add    BYTE PTR [eax],al
  410890:	inc    ebp
  410891:	pop    ss
  410892:	shr    DWORD PTR [edx],0x3c
  410895:	or     al,0xd9
  410897:	jb     0x410879
  410899:	cld    
  41089a:	cli    
  41089b:	or     dl,ch
  41089d:	cld    
  41089e:	clc    
  41089f:	fs ret 
  4108a1:	adc    BYTE PTR [ebp-0x7],bl
  4108a4:	sti    
  4108a5:	fiadd  WORD PTR [ebx]
  4108a7:	das    
	...
  4108d0:	arpl   dx,cx
  4108d2:	shl    ah,0x4f
  4108d5:	int3   
  4108d6:	mov    esi,DWORD PTR [edx-0x4fdc3f0a]
  4108dc:	fidiv  WORD PTR [ebx+0x5c427d8d]
  4108e2:	adc    al,0x25
  4108e4:	dec    ebp
  4108e5:	or     al,0x56
  4108e7:	ror    DWORD PTR [ecx],0xcc
  4108ea:	or     edx,ebp
  4108ec:	cwde   
  4108ed:	test   al,bh
  4108ef:	mov    edx,0xbafaecfe
  4108f4:	lock xchg BYTE PTR [esi+eiz*8-0x6e5e5037],cl
  4108fc:	dec    esi
  4108fd:	inc    edi
  4108fe:	cmp    al,0x28
  410900:	mov    BYTE PTR [edi],al
  410902:	add    esi,DWORD PTR [ebx]
  410904:	(bad)  
  410905:	mov    bl,0x33
  410907:	push   eax
  410908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410909:	shl    BYTE PTR [ebx],0x53
  41090c:	aam    0x95
  41090e:	pop    ds
  41090f:	xor    DWORD PTR [esi-0x15151824],edi
  410915:	sbb    cl,al
  410917:	sub    dl,BYTE PTR [ebx+0xc]
  41091a:	fldenv [edx-0x60]
  41091d:	cld    
  41091e:	cli    
  41091f:	retf   0xfc9e
  410922:	clc    
  410923:	ins    BYTE PTR es:[edi],dx
  410924:	ret    
  410925:	adc    dh,ah
  410927:	and    al,0xa8
  410929:	jmp    0xc0:0xc92ca702
  410930:	das    
  410931:	or     eax,0x8bc3
	...
  41095a:	add    BYTE PTR [eax],al
  41095c:	dec    ecx
  41095d:	mov    esi,0xbd3b23f7
  410962:	cli    
  410963:	lea    edi,[esi+0x12]
  410966:	(bad)  
  410967:	pop    es
  410968:	cmp    eax,0x6a5603ce
  41096d:	int3   
  41096e:	ret    0x2109
  410971:	fmul   QWORD PTR [ebx+0x237761f8]
  410977:	sti    
  410978:	add    DWORD PTR [ebp+ecx*4-0x74],esi
  41097c:	in     eax,0x80
  41097e:	or     eax,0x4e0caed5
  410983:	or     al,0xb3
  410985:	retf   0x30e
  410988:	cwde   
  410989:	test   dl,bh
  41098b:	xor    ebp,DWORD PTR [ebx-0x47cc0854]
  410991:	xchg   BYTE PTR [edi+ebx*1+0x455a2047],bl
  410998:	mov    cl,0x29
  41099a:	and    cl,al
  41099c:	loope  0x4109bd
  41099e:	add    ebx,ecx
  4109a0:	sub    DWORD PTR [ebx+0x33],esi
  4109a3:	sti    
  4109a4:	xchg   ecx,eax
  4109a5:	jne    0x4109da
  4109a7:	stc    
  4109a8:	pop    ss
  4109a9:	nop
  4109aa:	pop    es
  4109ab:	add    eax,0x3a96cfb
  4109b0:	fdivr  QWORD PTR [edi+0xc6fc0c0]
  4109b6:	ret    
  4109b7:	mov    ecx,DWORD PTR [ecx]
  4109b9:	mov    ebp,0xbd0b23f7
  4109be:	cli    
  4109bf:	lea    eax,[eax]
	...
  4109e5:	add    BYTE PTR [eax],al
  4109e7:	add    BYTE PTR [esi],cl
  4109e9:	adc    eax,edi
  4109eb:	mov    ds:0x56037825,eax
  4109f0:	pop    edx
  4109f1:	retf   0x9c2
  4109f4:	popa   
  4109f5:	fisttp DWORD PTR [ebx-0x422cb408]
  4109fb:	and    eax,DWORD PTR [eax-0x2c]
  4109fe:	mov    ebx,0xdabfcf8d
  410a03:	add    ah,BYTE PTR [edi+ecx*4-0x1eb0b1fc]
  410a0a:	ror    DWORD PTR [esi],0x48
  410a0d:	jmp    0xf7e3:0xa958fa8b
  410a14:	pop    eax
  410a15:	stos   BYTE PTR es:[edi],al
  410a16:	xchg   ecx,eax
  410a17:	pushf  
  410a18:	sub    al,0x2a
  410a1a:	push   eax
  410a1b:	sub    dl,dh
  410a1d:	mov    ds:0x640a305d,eax
  410a22:	sbb    BYTE PTR [ebx],al
  410a24:	adc    bh,BYTE PTR [edi*4-0x454c0ecd]
  410a2b:	(bad)  
  410a2c:	iret   
  410a2d:	scas   eax,DWORD PTR es:[edi]
  410a2e:	inc    ecx
  410a2f:	cmp    ecx,esp
  410a31:	outs   dx,DWORD PTR ds:[esi]
  410a32:	add    eax,DWORD PTR [esi+0x3f]
  410a35:	popa   
  410a36:	les    eax,FWORD PTR [eax+ecx*2]
  410a39:	arpl   WORD PTR [ebx-0xc668705],cx
  410a3f:	test   esi,0xbd811754
  410a45:	mov    cl,0x86
  410a47:	add    edx,DWORD PTR ds:0xc2c4c0
	...
  410a71:	add    BYTE PTR [eax],al
  410a73:	add    BYTE PTR [eax-0x5d],dl
  410a76:	ror    DWORD PTR [ebx+0x33bb13a3],cl
  410a7c:	xchg   ecx,eax
  410a7d:	and    eax,0xc1690f90
  410a82:	mov    al,ds:0xef96486d
  410a87:	ror    BYTE PTR [edx-0x3f35fd30],0x4a
  410a8e:	repz idiv DWORD PTR [eax]
  410a91:	stc    
  410a92:	nop
  410a93:	pushf  
  410a94:	inc    esp
  410a95:	aam    0xfb
  410a97:	in     al,0x5e
  410a99:	or     edx,ebp
  410a9b:	pop    ebp
  410a9c:	adc    ecx,eax
  410a9e:	sub    dl,BYTE PTR [edi]
  410aa0:	dec    eax
  410aa1:	shl    BYTE PTR [edx-0x43],1
  410aa4:	js     0x410a59
  410aa6:	fidivr DWORD PTR [edx+0x47ee8cce]
  410aac:	and    DWORD PTR [edi+0x45],esi
  410aaf:	add    eax,DWORD PTR [ebp+0x4fc4280d]
  410ab5:	or     ch,BYTE PTR [edx]
  410ab7:	mov    esp,DWORD PTR [eax]
  410ab9:	cli    
  410aba:	fcomip st,st(2)
  410abc:	sbb    al,0x84
  410abe:	jne    0x410ad6
  410ac0:	loop   0x410a87
  410ac2:	mov    bh,0x4a
  410ac4:	dec    eax
  410ac5:	pop    edi
  410ac6:	stc    
  410ac7:	les    ecx,FWORD PTR [ecx]
  410ac9:	add    ch,dl
  410acb:	rol    eax,cl
  410acd:	mov    al,0xfa
  410acf:	mov    edx,0x8f64b338
  410ad4:	push   esp
  410ad5:	sub    DWORD PTR [edx],esp
  410ad7:	jnp    0x410ad9
	...
  410afd:	add    BYTE PTR [eax],al
  410aff:	add    ch,dl
  410b01:	or     DWORD PTR [edi],esi
  410b03:	and    BYTE PTR [edx],cl
  410b05:	enter  0x2f9,0x1
  410b09:	adc    BYTE PTR [ebx-0x7006430e],0x90
  410b10:	fist   WORD PTR ds:0x76f47ff9
  410b16:	jmp    0x4816:0xaac8635d
  410b1d:	shl    BYTE PTR [edx-0x44],1
  410b20:	pop    eax
  410b21:	mov    bl,0x1a
  410b23:	mov    ebx,0xc5e68cc6
  410b28:	or     eax,0xd030192
  410b2d:	std    
  410b2e:	daa    
  410b2f:	ret    
  410b30:	inc    edi
  410b31:	or     ch,BYTE PTR [edx]
  410b33:	mov    dh,BYTE PTR [eax-0x7]
  410b36:	aas    
  410b37:	bnd je 0x410abd
  410b3a:	add    BYTE PTR [ebp+0x3d],bl
  410b3d:	mov    bl,0x27
  410b3f:	mov    BYTE PTR [edx-0x75d7e9f7],dh
  410b45:	add    DWORD PTR [ebx],eax
  410b47:	cmp    ecx,eax
  410b49:	mov    al,0x33
  410b4b:	adc    bh,BYTE PTR [ecx]
  410b4d:	mov    bl,0x8d
  410b4f:	pop    ebp
  410b50:	dec    ebp
  410b51:	mov    ?,WORD PTR [eax]
  410b53:	push   ss
  410b54:	sbb    al,0x9
  410b56:	dec    esi
  410b57:	in     eax,dx
  410b58:	pop    es
  410b59:	retf   
  410b5a:	adc    dl,ch
  410b5c:	adc    al,BYTE PTR [ecx-0x71f4506]
  410b62:	clc    
  410b63:	je     0x410b65
	...
  410b89:	add    BYTE PTR [eax],al
  410b8b:	add    bl,ch
  410b8d:	adc    al,0x5
  410b8f:	cld    
  410b90:	ror    BYTE PTR ds:0xca673703,0xc3
  410b97:	test   BYTE PTR [ebx-0x2e],0x8b
  410b9b:	sar    dl,0xb2
  410b9e:	xor    eax,edx
  410ba0:	mov    esp,0xf8f0078d
  410ba5:	fstp   st(1)
  410ba7:	jmp    0x843:0xa9c0ed86
  410bae:	ret    
  410baf:	jb     0x410b43
  410bb1:	clc    
  410bb2:	clc    
  410bb3:	fiadd  DWORD PTR [eax]
  410bb5:	xchg   DWORD PTR [esi+esi*8-0x70246d1b],edx
  410bbc:	dec    edx
  410bbd:	pop    ebx
  410bbe:	xor    BYTE PTR [eax-0x66fcff77],ch
  410bc4:	shl    BYTE PTR [ecx-0x4d658dcd],cl
  410bca:	lea    esi,[ebp+0x46]
  410bcd:	mov    cl,0x7c
  410bcf:	mov    ebp,DWORD PTR [esi]
  410bd1:	or     BYTE PTR [esi+0x15],cl
  410bd4:	mov    dl,cl
  410bd6:	adc    dl,ch
  410bd8:	xchg   edx,eax
  410bd9:	cmp    dl,0x0
  410bdc:	jno    0x410c4e
  410bde:	xor    edi,ecx
  410be0:	fild   QWORD PTR [eax+0x1f]
  410be3:	les    esp,FWORD PTR gs:[esp+eax*8]
  410be7:	add    ecx,esp
  410be9:	add    cl,al
  410beb:	ret    
  410bec:	push   ebp
  410bed:	or     ecx,ebx
  410bef:	mov    edi,0x0
	...
  410c18:	sub    eax,0x21ffff76
  410c1d:	jb     0x410c2a
  410c1f:	sti    
  410c20:	and    DWORD PTR [edi-0x73],ebp
  410c23:	test   BYTE PTR ds:0x3629224c,ah
  410c29:	or     DWORD PTR [esi],eax
  410c2b:	shl    DWORD PTR [edx+0xb],0x3
  410c2f:	ret    
  410c30:	ins    DWORD PTR es:[edi],dx
  410c31:	jbe    0x410c32
  410c33:	jmp    FWORD PTR ds:0x2a0bf8b9
  410c39:	mov    ecx,0x1d868dfa
  410c3e:	xchg   edi,eax
  410c3f:	dec    DWORD PTR [eax+0x4a]
  410c42:	add    edx,DWORD PTR [esi-0x12]
  410c45:	mov    dl,0xa
  410c48:	loope  0x410c21
  410c4a:	mov    edi,0xff749dff
  410c4f:	xor    ebx,DWORD PTR [ecx-0x55cc0600]
  410c55:	or     BYTE PTR [edi+ecx*1-0x546c567b],0xb1
  410c5d:	inc    ebp
  410c5e:	cmp    cl,al
  410c60:	repz add al,0x3
  410c63:	retf   0x750d
  410c66:	(bad)  
  410c67:	jmp    FWORD PTR ds:0x1b0bf7b9
  410c6d:	mov    ecx,0x150e8df9
  410c72:	cmp    DWORD PTR [eax+0x5e037411],esp
  410c78:	xchg   esi,eax
  410c79:	mov    bl,0x15
	...
  410ca4:	dec    ebx
  410ca5:	lahf   
  410ca6:	fidivr DWORD PTR [edi-0x43bd84]
  410cac:	cmp    BYTE PTR [eax+0x8],cl
  410caf:	sti    
  410cb0:	cmp    BYTE PTR [ecx-0x72],cl
  410cb3:	test   BYTE PTR [edi+ebx*8+0x59],cl
  410cb7:	pop    ebx
  410cb8:	out    0x9e,al
  410cba:	inc    ebp
  410cbb:	xor    BYTE PTR [edx-0x77fcfb1f],cl
  410cc1:	push   edx
  410cc2:	mov    esp,0xf01c44ff
  410cc7:	clc    
  410cc8:	push   eax
  410cc9:	sbb    al,dh
  410ccb:	cli    
  410ccc:	(bad)  
  410ccd:	push   esp
  410cce:	adc    al,0x92
  410cd0:	jmp    DWORD PTR [esp+ecx*4-0x3d5382fd]
  410cd7:	ret    0x9f51
  410cda:	sar    DWORD PTR [edi-0x4453ec],cl
  410ce0:	pop    eax
  410ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ce2:	psubd  mm7,QWORD PTR [eax]
  410ce5:	fmul   DWORD PTR [ecx-0x4fbab374]
  410ceb:	out    dx,eax
  410cec:	hlt    
  410ced:	lahf   
  410cee:	dec    ecx
  410cef:	sub    BYTE PTR [edx],cl
  410cf1:	bound  ecx,QWORD PTR [ebx]
  410cf3:	add    edx,DWORD PTR [ecx]
  410cf5:	cmp    al,0xbb
  410cf7:	(bad)  
  410cf8:	fsub   QWORD PTR [ebx-0x9]
  410cfb:	test   DWORD PTR [eax+0x69],0x34bef9f7
  410d02:	sbb    edx,ecx
  410d04:	es and al,0x81
  410d07:	add    eax,DWORD PTR [eax]
	...
  410d2d:	add    BYTE PTR [eax],al
  410d2f:	add    BYTE PTR ds:0x5ec3c4ac,bl
  410d35:	lahf   
  410d36:	fdivr  QWORD PTR [edi-0x44cc54]
  410d3c:	pop    eax
  410d3d:	psubq  mm3,QWORD PTR ss:[eax+0x39]
  410d42:	mov    DWORD PTR [esp+ecx*2-0x1cc649f7],eax
  410d49:	and    ch,dl
  410d4b:	inc    ecx
  410d4c:	sub    ecx,eax
  410d4e:	sub    DWORD PTR [edx],eax
  410d50:	dec    eax
  410d51:	(bad)  
  410d52:	mov    ?,WORD PTR [ebx-0x8b94d8c]
  410d58:	jae    0x410d58
  410d5a:	inc    eax
  410d5b:	mul    DWORD PTR [ecx-0x7c]
  410d5e:	pop    ebp
  410d5f:	adc    ebp,DWORD PTR [ebx-0x55]
  410d62:	std    
  410d63:	mov    ecx,0xc4e55b48
  410d68:	mov    edi,edi
  410d6a:	jmp    0x16f31242
  410d6f:	mov    ebx,0xf11f63c
  410d74:	xor    esi,esi
  410d76:	add    BYTE PTR [ecx+0x46d501bf],cl
  410d7c:	dec    edx
  410d7d:	jmp    0x28c8:0x4349
  410d83:	or     ecx,DWORD PTR [eax-0x41]
  410d86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d87:	mov    edx,0xf6deb20c
  410d8c:	cld    
  410d8d:	std    
  410d8e:	iret   
  410d8f:	test   BYTE PTR [edx],0x84
  410d92:	ins    DWORD PTR es:[edi],dx
  410d93:	sbb    al,BYTE PTR [eax]
	...
  410db9:	add    BYTE PTR [eax],al
  410dbb:	add    BYTE PTR [edx+0x4849f117],ch
  410dc1:	push   ebx
  410dc2:	cmc    
  410dc3:	les    ecx,FWORD PTR [eax]
  410dc5:	sbb    al,0xea
  410dc7:	fcomp  QWORD PTR [ecx+esi*4-0xa2b4552]
  410dce:	mov    ds:0x9ff5d00e,al
  410dd3:	mov    bh,cl
  410dd5:	or     DWORD PTR [ebx+0x39],ebp
  410dd8:	sbb    BYTE PTR [edx-0x37a4be16],bh
  410dde:	test   eax,0x3ec64801
  410de3:	mov    edx,0x7600b1a4
  410de8:	xchg   ebp,eax
  410de9:	mov    al,0xb
  410deb:	jno    0x410d8a
  410ded:	scas   al,BYTE PTR es:[edi]
  410dee:	lea    edi,[ebp+0x39]
  410df1:	cld    
  410df2:	icebp  
  410df3:	and    eax,DWORD PTR [edx]
  410df5:	push   es
  410df6:	push   esi
  410df7:	add    eax,0xea0ac686
  410dfc:	cwde   
  410dfd:	jno    0x410dfe
  410dff:	inc    esi
  410e00:	mov    cl,0xb1
  410e02:	xor    eax,DWORD PTR [edx+0x55]
  410e05:	scas   eax,DWORD PTR es:[edi]
  410e06:	xor    esi,DWORD PTR [ecx]
  410e08:	rol    DWORD PTR [edi+ecx*1+0x2ad97e72],cl
  410e0f:	jmp    0xc51:0x28c10102
  410e16:	retf   0x156
  410e19:	mov    cl,0xff
  410e1b:	push   cs
  410e1c:	cmp    eax,0xbb9
	...
  410e45:	add    BYTE PTR [eax],al
  410e47:	add    BYTE PTR ds:0x415d8db3,dh
  410e4d:	call   0xc55e:0xced6fd3
  410e54:	bswap  ebp
  410e56:	adc    eax,0x7d84f1ea
  410e5b:	icebp  
  410e5c:	dec    ecx
  410e5d:	or     BYTE PTR [ecx],al
  410e5f:	ss dec ebx
  410e61:	or     cl,BYTE PTR [edi-0x1f]
  410e64:	dec    ecx
  410e65:	pop    eax
  410e66:	or     al,0xc6
  410e68:	test   BYTE PTR [ebp+0x8f378d],ch
  410e6e:	mov    esi,esp
  410e70:	sahf   
  410e71:	mov    al,0xff
  410e73:	adc    esi,DWORD PTR [eax+0x54]
  410e76:	pop    eax
  410e77:	inc    esi
  410e78:	jno    0x410e3c
  410e7a:	ret    0x48ed
  410e7d:	push   esi
  410e7e:	mov    eax,DWORD PTR [ebp+0x36f8c5c6]
  410e84:	sbb    DWORD PTR [edi+eax*8+0x0],ebx
  410e88:	pop    edi
  410e89:	jno    0x410e8b
  410e8b:	add    BYTE PTR [edx-0x598a00f4],dh
  410e91:	add    DWORD PTR [ebp-0x8],0x652fb0ed
  410e98:	jecxz  0x410ea6
  410e9a:	add    DWORD PTR [ebx],esp
  410e9c:	scas   eax,DWORD PTR es:[edi]
  410e9d:	jmp    0x109f1468
  410ea2:	inc    ecx
  410ea3:	add    bl,ch
  410ea5:	sbb    eax,0xb01defcd
  410eaa:	aaa    
  410eab:	add    BYTE PTR gs:[eax],al
	...
  410ed2:	add    BYTE PTR [eax],al
  410ed4:	mov    bl,0xc
  410ed6:	(bad)  
  410ed7:	(bad)  
  410ed9:	mov    edi,es
  410edb:	add    eax,0x410f66
  410ee0:	lods   al,BYTE PTR ds:[esi]
  410ee1:	inc    eax
  410ee2:	xor    dl,BYTE PTR [eax]
  410ee4:	ins    DWORD PTR es:[edi],dx
  410ee5:	mov    al,0x3f
  410ee7:	gs repz or esi,eax
  410eeb:	loope  0x410f5d
  410eed:	(bad)  
  410eee:	jmp    0x410f0c
  410ef0:	mov    ecx,0xef0307f0
  410ef5:	ja     0x410f61
  410ef7:	inc    eax
  410ef8:	retf   0x64ef
  410efb:	inc    ecx
  410efc:	and    bl,BYTE PTR [eax+ebp*8+0x63]
  410f00:	sti    
  410f01:	jo     0x410f02
  410f03:	sub    DWORD PTR [edi],0x71
  410f06:	inc    eax
  410f07:	call   0x411ab2
  410f0c:	popa   
  410f0d:	out    0xf7,eax
  410f0f:	inc    eax
  410f10:	xor    ebx,edx
  410f12:	mov    ebx,DWORD PTR [ebp+0xa]
  410f15:	test   ebx,eax
  410f17:	inc    eax
  410f18:	imul   ebp,edi,0x712f0307
  410f1e:	push   ebx
  410f1f:	push   0x41101e
  410f24:	sbb    BYTE PTR [ebp+0x3c],0xe9
  410f28:	dec    ebx
  410f29:	xchg   edi,eax
  410f2a:	mov    eax,0xc17e1601
  410f2f:	add    DWORD PTR [edi],0xfffffffd
  410f32:	inc    edx
  410f33:	add    bl,cl
  410f35:	and    ch,BYTE PTR [edi+esi*1+0x0]
	...
  410f60:	adc    eax,0x43eb84db
  410f65:	mov    dh,0xd
  410f67:	sub    al,0x1d
  410f6a:	push   ds
  410f6b:	inc    ecx
  410f6c:	dec    ebx
  410f6d:	mov    ds:0x49757844,al
  410f72:	mov    WORD PTR [eax],es
  410f74:	dec    ebx
  410f75:	mov    ds:0x466cc87c,al
  410f7a:	mov    eax,0xd7649eb
  410f7f:	sub    BYTE PTR [eax+0x4b411e75],0xa2
  410f86:	inc    esp
  410f87:	js     0x410fde
  410f89:	cmp    bh,BYTE PTR [esi]
  410f8b:	or     al,0x2
  410f8d:	mov    ecx,0xd34b0003
  410f92:	aad    0xf7
  410f94:	sub    dl,al
  410f96:	retf   
  410f97:	sgdtd  [ebx+eax*4+0x65]
  410f9c:	mov    ah,BYTE PTR [eax+0x7d9f158a]
  410fa2:	inc    edx
  410fa3:	add    BYTE PTR [ebx],ah
  410fa5:	cdq    
  410fa6:	add    eax,DWORD PTR [eax]
  410fa8:	dec    ebx
  410fa9:	xor    esp,0x8aa08a64
  410faf:	adc    eax,0x453d37
  410fb4:	ror    ch,0xfb
  410fb7:	mov    ah,BYTE PTR fs:[eax+0x7a54c806]
  410fbe:	pop    es
  410fbf:	leave  
  410fc0:	test   al,0xb0
  410fc2:	and    BYTE PTR [ecx+0x0],al
	...
  410fe9:	add    BYTE PTR [eax],al
  410feb:	add    BYTE PTR [ebx+0x29],cl
  410fee:	adc    DWORD PTR [esi+eiz*2],esi
  410ff1:	or     DWORD PTR [eax],ebp
  410ff3:	add    al,0xd2
  410ff5:	cld    
  410ff6:	loopne 0x411018
  410ff8:	or     cl,BYTE PTR [ecx]
  410ffa:	dec    eax
  410ffb:	clc    
  410ffc:	das    
  410ffd:	dec    eax
  410ffe:	jmp    0xc8a668d
  411003:	inc    ebp
  411004:	dec    ebx
  411005:	(bad)  
  411006:	mov    al,0x7
  411008:	xchg   ecx,eax
  411009:	push   0xffffffb5
  41100b:	and    BYTE PTR [edx],cl
  41100d:	or     DWORD PTR [eax+0x11],esp
  411010:	or     esp,DWORD PTR [eax+ebp*4]
  411013:	add    esi,ecx
  411015:	adc    al,0x5e
  411017:	xor    DWORD PTR [ebx+0x21],ebx
  41101a:	sbb    DWORD PTR [ecx],esp
  41101c:	or     cl,BYTE PTR [ecx]
  41101e:	inc    ecx
  41101f:	xchg   ecx,eax
  411020:	arpl   WORD PTR [esi+0x4e055b46],bp
  411026:	xor    dl,al
  411028:	dec    edi
  411029:	or     DWORD PTR [edx+ecx*4-0x43da7599],ebx
  411030:	xchg   edx,eax
  411031:	mov    cl,0x26
  411033:	mov    bh,0x44
  411035:	and    ch,0xc8
  411038:	(bad)  
  411039:	and    ebp,DWORD PTR [eax+0x1c14c003]
  41103f:	mov    WORD PTR [esi+0x1306e948],fs
  411045:	(bad)  
  411046:	xor    cl,BYTE PTR [ebp+0x216dbc47]
  41104c:	mov    cl,BYTE PTR [ecx]
  41104e:	pusha  
  41104f:	adc    BYTE PTR [eax],al
	...
  411075:	add    BYTE PTR [eax],al
  411077:	add    dh,bh
  411079:	or     BYTE PTR [ebp+eax*2+0x4b],0x48
  41107e:	push   esp
  41107f:	fld    st(2)
  411081:	enter  0xb6d6,0xf4
  411085:	and    ebp,0x28277388
  41108b:	add    al,0xd0
  41108d:	adc    al,0x6c
  41108f:	pop    ds
  411090:	gs dec eax
  411092:	add    cl,ch
  411094:	(bad)  [ecx]
  411096:	lea    ebx,ds:0xda00482d
  41109c:	push   esp
  41109d:	jl     0x4110e3
  41109f:	pop    es
  4110a0:	push   es
  4110a1:	or     DWORD PTR [ebx],esi
  4110a3:	stos   DWORD PTR es:[edi],eax
  4110a4:	lahf   
  4110a5:	enter  0xe589,0xc3
  4110a9:	test   BYTE PTR [esi+0x28],ah
  4110ac:	dec    edi
  4110ad:	dec    eax
  4110ae:	jne    0x411047
  4110b0:	ror    DWORD PTR [ebx],1
  4110b2:	xor    BYTE PTR [esi+ecx*1],cl
  4110b5:	or     DWORD PTR [ebx+0x41249cb4],ecx
  4110bb:	jmp    0xc478fc91
  4110c0:	pop    es
  4110c1:	or     edi,edi
  4110c3:	sbb    al,0x73
  4110c5:	and    al,0x41
  4110c7:	jmp    0x473d5491
  4110cc:	pop    ebx
  4110cd:	in     eax,dx
  4110ce:	fs test al,0x48
  4110d1:	jle    0x411118
  4110d3:	xor    edi,edx
  4110d5:	pushf  
  4110d6:	jmp    FWORD PTR [esi]
  4110d8:	xchg   ebp,eax
  4110d9:	adc    esi,0x72
	...
  411103:	add    BYTE PTR ds:0xfecad2b5,al
  411109:	call   0xc7822662
  41110e:	add    esp,ebp
  411110:	ret    
  411111:	xchg   ebp,eax
  411112:	gs test al,0x48
  411115:	or     BYTE PTR [ebp+0x1],al
  411118:	dec    ebx
  411119:	xchg   edx,eax
  41111a:	jns    0x411187
  41111c:	jb     0x4110ca
  41111e:	jne    0x41110d
  411120:	mov    BYTE PTR [esi-0x8],0x70
  411124:	cmp    al,0xad
  411126:	shl    DWORD PTR [edi+0x62fe8055],0xba
  41112d:	retf   0xe4c3
  411130:	dec    ebx
  411131:	rol    DWORD PTR [ecx+0x0],1
  411134:	daa    
  411135:	sar    DWORD PTR [ecx-0x896214],0x8b
  41113c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41113d:	adc    bh,0x33
  411140:	daa    
  411141:	jno    0x411176
  411143:	ret    0xacb1
  411146:	mov    esp,fs
  411148:	inc    edi
  411149:	dec    eax
  41114a:	add    BYTE PTR [ebx],al
  41114c:	ins    DWORD PTR es:[di],dx
  41114e:	add    eax,0x6ed0c9a1
  411153:	jmp    DWORD PTR [edi-0x35ba708c]
  411159:	cmp    BYTE PTR [ebp-0x4],0xe3
  41115d:	imul   ebx,DWORD PTR [esi],0xffffff8b
  411160:	sbb    al,0x82
  411162:	repz shl DWORD PTR [ecx],0xac
  411166:	add    bl,al
	...
  411190:	mov    bl,0xdb
  411192:	iret   
  411193:	mov    ecx,0xffff760e
  411198:	jmp    0xe969d0a
  41119d:	add    al,BYTE PTR [ebp-0x4]
  4111a0:	push   ecx
  4111a1:	mov    esi,0xca69c623
  4111a6:	add    eax,DWORD PTR [edi+ebp*8]
  4111a9:	mov    eax,0x9324165
  4111ae:	inc    ebp
  4111af:	clc    
  4111b0:	daa    
  4111b1:	aam    0xbc
  4111b3:	sbb    ebp,DWORD PTR [ebp-0x72038a8a]
  4111b9:	in     al,dx
  4111ba:	test   DWORD PTR [ecx-0x393e8c31],0x8bfe80fc
  4111c4:	adc    edi,eax
  4111c6:	ret    
  4111c7:	add    eax,0x7541d021
  4111cc:	mov    ecx,0x1dffec2e
  4111d1:	jne    0x41115e
  4111d3:	(bad)  
  4111d4:	dec    ebx
  4111d5:	daa    
  4111d6:	int3   
  4111d7:	xor    eax,DWORD PTR [esi+0x48c1f0be]
  4111dd:	sahf   
  4111de:	xchg   BYTE PTR [ebp+eiz*2-0x71fcfc1f],al
  4111e5:	jp     0x4111e5
  4111e7:	aad    0xa
  4111e9:	inc    eax
  4111ea:	retf   0x3eff
  4111ed:	data16 test BYTE PTR [ebp-0x3d],al
  4111f1:	cmp    BYTE PTR [esi],dh
  4111f3:	cld    
	...
  41121c:	mov    bl,BYTE PTR [ebx+0x15]
  41121f:	mov    ebp,DWORD PTR [ebp-0x773e4fda]
  411225:	pushf  
  411226:	add    al,bl
  411228:	or     dh,BYTE PTR [ebp+0x723601d3]
  41122e:	push   ds
  41122f:	inc    ecx
  411230:	dec    ebx
  411231:	mov    eax,ds:0x60ee33ee
  411236:	add    eax,DWORD PTR [ecx]
  411238:	ds jmp 0xfc3e:0x274b411e
  411240:	dec    edx
  411241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411242:	mul    DWORD PTR [edx+ecx*1-0x5e]
  411246:	mov    BYTE PTR [ebp+0x63],al
  411249:	mov    al,ds:0x60ee3ffe
  41124e:	add    ecx,ecx
  411250:	mov    BYTE PTR [eax+ecx*4+0xb8e44ec],dl
  411257:	call   0x443c16
  41125c:	enter  0xb418,0x75
  411260:	gs sti 
  411262:	sub    eax,0x7a973308
  411267:	add    BYTE PTR [ebx-0x49],cl
  41126a:	ret    
  41126b:	jne    0x4112b9
  41126d:	clc    
  41126e:	mov    bl,0xff
  411270:	or     al,0x9c
  411272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411273:	adc    edx,eax
  411275:	or     DWORD PTR [ecx],ebp
  411277:	add    bl,bl
  411279:	(bad)  
  41127a:	test   al,0x39
  41127c:	dec    esp
  41127d:	jno    0x411255
  41127f:	mov    bl,0x0
	...
  4112a5:	add    BYTE PTR [eax],al
  4112a7:	add    ah,ch
  4112a9:	stos   BYTE PTR es:[edi],al
  4112aa:	ret    0xd008
  4112ad:	or     DWORD PTR [edx+0x4],esi
  4112b0:	adc    cl,al
  4112b2:	in     eax,0x3
  4112b4:	jle    0x411334
  4112b6:	lds    eax,FWORD PTR [edi-0x8e545f9]
  4112bc:	mov    eax,ds:0x4a1def1f
  4112c1:	pop    ds
  4112c2:	jmp    0x41125f
  4112c4:	jno    0x411336
  4112c6:	jmp    0x8ef2dace
  4112cb:	cmp    DWORD PTR [ecx-0x62],ecx
  4112ce:	or     edi,DWORD PTR [edi-0x7d]
  4112d1:	pop    ds
  4112d2:	fld    DWORD PTR [eax-0x63e646f2]
  4112d8:	ret    
  4112d9:	mov    ds:0xc1edb36e,eax
  4112de:	lods   al,BYTE PTR ds:[esi]
  4112df:	mov    bl,0x49
  4112e1:	or     DWORD PTR [edx+0x41],esi
  4112e4:	pop    ebx
  4112e5:	and    DWORD PTR [edx+ebp*1],0xffffffc2
  4112e9:	cmp    al,0x5b
  4112eb:	xchg   esi,esp
  4112ed:	cld    
  4112ee:	call   0xa4bf592a
  4112f3:	jmp    DWORD PTR [ecx+0xa]
  4112f6:	push   0x31
  4112f8:	aas    
  4112f9:	or     DWORD PTR [ebp+edi*8+0x3f12bc9],esi
  411300:	mov    dh,0x5
  411302:	adc    ch,cl
  411304:	and    edx,edi
  411306:	adc    eax,0x7da14339
  41130b:	mov    dl,0x0
	...
  411331:	add    BYTE PTR [eax],al
  411333:	add    BYTE PTR [edx+ebp*4],ah
  411336:	push   0xffffffac
  411338:	sbb    al,0x34
  41133a:	jmp    0x4112da
  41133c:	aas    
  41133d:	add    BYTE PTR [eax],0xac
  411340:	aam    0x1e
  411342:	adc    BYTE PTR [edx+edx*4-0x47],bl
  411346:	push   eax
  411347:	cmp    bl,bh
  411349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41134a:	mov    eax,0xf88648e9
  41134f:	(bad)  
  411350:	xor    eax,DWORD PTR [ecx]
  411352:	push   ebx
  411353:	sar    ecx,0x70
  411356:	add    cl,ch
  411358:	aad    0xce
  41135a:	mov    ebp,DWORD PTR [edx-0x1a3d3f7b]
  411360:	dec    eax
  411361:	push   esp
  411362:	mov    edi,DWORD PTR [ebp+0x2483521d]
  411368:	push   edi
  411369:	or     DWORD PTR [ebp-0xe],esi
  41136c:	and    BYTE PTR [eax],cl
  41136e:	add    cl,ch
  411370:	dec    eax
  411371:	dec    edx
  411372:	pop    ebx
  411373:	mov    al,ds:0x71fffc8e
  411378:	pop    ebx
  411379:	std    
  41137a:	mov    edx,0x948e9
  41137f:	add    eax,DWORD PTR [edi-0x56]
  411382:	jne    0x41135d
  411384:	and    DWORD PTR [edx+0x78e0f175],ebp
  41138a:	mov    eax,0xc08448e9
  41138f:	xlat   BYTE PTR ds:[ebx]
  411390:	push   esp
  411391:	push   es
  411392:	clc    
  411393:	add    BYTE PTR [edx],dl
  411395:	sbb    DWORD PTR [ebx+0xc4],eax
	...
  4113bf:	add    BYTE PTR [eax],bh
  4113c1:	or     DWORD PTR [ebp-0x1a],esi
  4113c4:	in     eax,0x7
  4113c6:	add    cl,ch
  4113c8:	dec    eax
  4113c9:	sahf   
  4113ca:	add    al,BYTE PTR [edx+0x16]
  4113cd:	xchg   ebp,eax
  4113ce:	ret    
  4113cf:	(bad)  
  4113d0:	(bad)  
  4113d1:	rol    dl,cl
  4113d3:	in     eax,dx
  4113d4:	dec    eax
  4113d5:	mov    eax,DWORD PTR ds:0xff4cdc7
  4113dc:	fldcw  WORD PTR [eax-0x5760ff01]
  4113e2:	mov    es,WORD PTR [ebp-0xa5e2]
  4113e8:	pop    ebp
  4113e9:	xchg   ecx,eax
  4113ea:	clc    
  4113eb:	(bad)  
  4113ec:	cmc    
  4113ed:	pop    edx
  4113ee:	add    BYTE PTR [eax],al
  4113f0:	repnz or al,0xc7
  4113f3:	test   DWORD PTR [esi],edx
  4113f5:	pop    esp
  4113f6:	(bad)  
  4113f7:	jmp    ebx
  4113f9:	or     al,0x0
  4113fb:	add    BYTE PTR [edi+0x5ff0090],al
  411401:	pop    ebx
  411402:	push   DWORD PTR [ebp-0x26]
  411405:	mov    DWORD PTR [eax],eax
  411407:	lea    ebx,[edi+0x61]
  41140a:	(bad)  
  41140b:	push   ebp
  41140d:	cmp    eax,0xd58006a
  411412:	lea    eax,[ebp-0xa42a]
  411418:	jb     0x411421
  41141a:	add    al,ch
  41141c:	inc    esi
  41141d:	xor    eax,0x75310000
  411422:	push   DWORD PTR [eax+eax*1+0x0]
	...
  41144a:	add    BYTE PTR [eax],al
  41144c:	scas   al,BYTE PTR es:[edi]
  41144d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41144e:	mov    edi,0xbf9d9e75
  411453:	jmp    0x4114c4
  411455:	xor    al,0x1
  411457:	add    BYTE PTR [edx+0xc],dh
  41145a:	leave  
  41145b:	ret    0xc7a
  41145e:	push   ebp
  41145f:	mov    eax,DWORD PTR [esi]
  411461:	mov    es,esp
  411463:	cld    
  411464:	mov    eax,ds:0xa86adac5
  411469:	pop    ecx
  41146a:	jne    0x411474
  41146c:	cli    
  41146d:	daa    
  41146e:	(bad)  
  41146f:	call   DWORD PTR ds:0xde74bfa6
  411475:	add    eax,0xa3dfff5a
  41147a:	out    0x7f,eax
  41147c:	push   ebp
  41147d:	pop    edx
  41147e:	dec    DWORD PTR [ebx]
  411480:	dec    ebx
  411481:	repnz add dh,BYTE PTR ss:[eax]
  411485:	outs   dx,BYTE PTR ds:[esi]
  411486:	sbb    eax,0x7eb1b100
  41148b:	inc    ebp
  41148c:	adc    al,0x82
  41148e:	mov    al,0x75
  411490:	inc    ebx
  411491:	or     al,BYTE PTR [edi]
  411493:	mov    eax,0xc086b24b
  411498:	jge    0x41149c
  41149a:	jge    0x4114e1
  41149c:	pop    edi
  41149d:	jmp    0x174:0xb476ff46
  4114a4:	rcr    ah,1
  4114a6:	dec    DWORD PTR [edx+0x6a043c39]
  4114ac:	dec    edx
  4114ad:	xor    eax,0xff46
	...
  4114d6:	add    BYTE PTR [eax],al
  4114d8:	jnp    0x411539
  4114da:	ss or  al,0xc4
  4114dd:	add    edx,DWORD PTR [edi+edi*8]
  4114e0:	ss sahf 
  4114e2:	fwait
  4114e3:	mov    eax,0x3bb08697
  4114e8:	push   es
  4114e9:	mov    ds:0xadb00235,al
  4114ee:	xchg   bl,bl
  4114f0:	pop    ss
  4114f1:	ds jl  0x4114b7
  4114f4:	lock pop eax
  4114f6:	lds    edx,FWORD PTR [ebx+ecx*2]
  4114f9:	add    eax,0x6dcaec7d
  4114fe:	add    edi,eax
  411500:	jl     0x411530
  411502:	push   esp
  411503:	sub    edx,DWORD PTR [eax-0x900b245]
  411509:	test   eax,0x5664189b
  41150e:	mov    al,0xb
  411510:	mov    esp,DWORD PTR [ebp+0x28]
  411513:	push   0xfffffff1
  411515:	out    0x35,al
  411517:	or     BYTE PTR [ebx-0x55],ah
  41151a:	mov    al,0xff
  41151c:	inc    esp
  41151d:	lods   al,BYTE PTR ds:[esi]
  41151e:	ret    
  41151f:	jne    0x41156a
  411521:	or     DWORD PTR [edx],edx
  411523:	pop    eax
  411524:	retf   0xf924
  411527:	add    eax,DWORD PTR [ebx+0x9]
  41152a:	jmp    0xe9a26168
  41152f:	sti    
  411530:	sbb    al,0xa7
  411532:	adc    al,BYTE PTR [eax+eax*8]
  411535:	dec    esp
  411536:	fstp   DWORD PTR ds:0x8664394b
	...
  411564:	dec    ebx
  411565:	mov    eax,ds:0xa69bafee
  41156a:	pop    esp
  41156b:	cld    
  41156c:	in     al,dx
  41156d:	and    dl,BYTE PTR [esi-0x5673b4fc]
  411573:	sub    eax,0x38fdb249
  411578:	dec    eax
  411579:	dec    edx
  41157a:	shl    bh,cl
  41157c:	test   BYTE PTR [edx-0x43fffec],dl
  411582:	inc    edx
  411583:	add    al,0x1b
  411585:	xchg   esp,eax
  411586:	fs add al,0xc3
  411589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41158a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41158b:	push   esp
  41158c:	mov    ah,0x1c
  41158e:	in     eax,dx
  41158f:	scas   al,BYTE PTR es:[edi]
  411590:	sbb    ecx,edi
  411592:	xor    ch,bl
  411594:	psubw  mm5,QWORD PTR [ecx+0x31]
  411598:	cmp    ecx,DWORD PTR [ecx]
  41159a:	cld    
  41159b:	add    cl,BYTE PTR [eax]
  41159d:	mov    dl,0xe5
  41159f:	mov    BYTE PTR [eax+0x1d],dh
  4115a2:	push   eax
  4115a3:	jnp    0x41152d
  4115a5:	inc    edx
  4115a6:	mov    al,ds:0xbc094fc2
  4115ab:	jp     0x411614
  4115ad:	mov    ah,BYTE PTR ds:0x55da14ac
  4115b3:	sbb    cl,BYTE PTR [ebx+0x3e]
  4115b6:	dec    esi
  4115b7:	cmp    DWORD PTR [ebx-0x4f],edx
  4115ba:	sbb    cl,bl
  4115bc:	push   esp
  4115bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115be:	es dec ecx
  4115c0:	dec    edi
  4115c1:	or     DWORD PTR [eax],eax
  4115c3:	jmp    0x94cc1f10
	...
  4115f0:	inc    eax
  4115f1:	xchg   ebx,eax
  4115f2:	adc    dh,BYTE PTR [edx+eax*4-0x5f]
  4115f6:	push   eax
  4115f7:	xchg   ebx,eax
  4115f8:	inc    esp
  4115f9:	xchg   esp,eax
  4115fa:	inc    ebp
  4115fb:	adc    eax,0xe175a67f
  411600:	in     eax,dx
  411601:	cmp    cl,BYTE PTR [esi+ebp*4]
  411604:	iret   
  411605:	and    edi,esp
  411607:	in     al,dx
  411608:	adc    dl,BYTE PTR ds:0x8b027d0a
  41160e:	jge    0x411601
  411610:	dec    eax
  411611:	sbb    al,0xc9
  411613:	sbb    cl,BYTE PTR [edi]
  411615:	mov    dl,0x5
  411617:	jb     0x41161e
  411619:	mov    al,al
  41161b:	jmp    0x3c48:0xe5c2d095
  411622:	mov    edx,ebp
  411624:	leave  
  411625:	int3   
  411626:	hlt    
  411627:	sbb    dh,BYTE PTR [ecx+esi*1-0x68]
  41162b:	repz dec eax
  41162d:	or     eax,ebp
  41162f:	fsubrp st(4),st
  411631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411632:	push   DWORD PTR [eax+0x3]
  411635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411636:	lea    esp,[ebx+esi*8]
  411639:	cmp    al,ch
  41163b:	aad    0x91
  41163d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41163e:	(bad)  
  41163f:	ficom  DWORD PTR [ecx-0x6eece1ce]
  411645:	sub    eax,0x9488300
  41164a:	(bad)  
  41164b:	cld    
  41164c:	mov    esp,0xe0e175a5
  411651:	mov    esi,?
  411653:	data16 add BYTE PTR [eax],al
	...
  41167a:	add    BYTE PTR [eax],al
  41167c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41167d:	mov    eax,eax
  41167f:	out    dx,al
  411680:	(bad)  
  411681:	fadd   DWORD PTR [eax]
  411683:	jmp    0x55b6bcd0
  411688:	rcl    BYTE PTR [ebx+ebx*8+0x3d770d00],0x0
  411690:	or     BYTE PTR [edx],cl
  411692:	add    BYTE PTR [esi+0x37],dh
  411695:	xchg   BYTE PTR [ecx+eax*1],bl
  411698:	xor    cl,BYTE PTR [ecx]
  41169a:	push   DWORD PTR [ebp+0x56]
  41169d:	sbb    BYTE PTR [edx-0x1],0x4d
  4116a1:	jae    0x411628
  4116a3:	rol    dh,0xcc
  4116a6:	push   DWORD PTR [ebp+0x36]
  4116a9:	or     BYTE PTR [ebp-0x748cb223],0x55
  4116b0:	push   ss
  4116b1:	and    edx,DWORD PTR [edx]
  4116b3:	push   0xfffffff2
  4116b5:	add    BYTE PTR [ecx+eiz*1],dh
  4116b8:	repnz or bh,bh
  4116bb:	jne    0x4116ab
  4116bd:	jbe    0x411734
  4116bf:	hlt    
  4116c0:	or     eax,0x37c70c38
  4116c5:	jne    0x4116c7
  4116c7:	add    dl,dh
  4116c9:	or     BYTE PTR [eax-0x22],ch
  4116cc:	cmp    DWORD PTR [eax+0x0],ecx
  4116cf:	call   DWORD PTR [edi]
  4116d1:	pop    ecx
  4116d2:	call   0x4e5af0
  4116d7:	push   ebx
  4116d8:	test   eax,0x393674c8
  4116dd:	jne    0x411747
  4116df:	fiadd  WORD PTR [eax]
	...
  411705:	add    BYTE PTR [eax],al
  411707:	add    BYTE PTR [ecx+0x42e80047],bl
  41170d:	and    DWORD PTR [eax],eax
  41170f:	add    BYTE PTR [ecx+0x19475770],dh
  411715:	(bad)  
  411716:	mov    ecx,0x87394
  41171b:	mov    al,0x6f
  41171d:	pop    edx
  41171e:	scas   al,BYTE PTR es:[edi]
  41171f:	mov    eax,0xfffff816
  411724:	pop    ecx
  411725:	enter  0x47c6,0xd
  411729:	or     eax,0x4a4b5357
  41172e:	mov    cl,0xb5
  411730:	dec    ebx
  411731:	mov    dl,0x7a
  411733:	inc    ebp
  411734:	push   ebx
  411735:	imul   eax,ebp,0x47
  411738:	dec    esp
  411739:	mov    ch,0x4c
  41173b:	pop    ebx
  41173c:	mov    bl,0x4c
  41173e:	fld    DWORD PTR [eax+0x4b]
  411741:	repz ss cld 
  411744:	and    esp,edx
  411746:	jbe    0x411748
  411748:	dec    ebx
  411749:	pop    edi
  41174a:	clc    
  41174b:	mov    edi,0xf878769f
  411750:	mov    bl,0xa4
  411752:	fadd   DWORD PTR [eax+0x4b]
  411755:	cli    
  411756:	in     al,0xb3
  411758:	dec    ebx
  411759:	mov    dl,0x0
  41175b:	clc    
  41175c:	pushf  
  41175d:	jae    0x4117d7
  41175f:	ffreep st(2)
  411761:	cmp    eax,0x824b0013
  411766:	(bad)  
  411767:	icebp  
  411768:	popf   
  411769:	imul   edx,DWORD PTR [edi+0x11],0x0
	...
  411793:	add    BYTE PTR [ebx-0x4e],cl
  411796:	fadd   st,st(0)
  411798:	add    eax,0x7c00aceb
  41179d:	call   FWORD PTR [ebx-0x539d2699]
  4117a3:	mov    ebx,DWORD PTR [esi]
  4117a5:	ret    0xd1f8
  4117a8:	aaa    
  4117a9:	scas   al,BYTE PTR es:[edi]
  4117aa:	jp     0x4117ae
  4117ac:	mov    al,ds:0xbae853b3
  4117b1:	(bad)  
  4117b2:	lods   al,BYTE PTR ds:[esi]
  4117b3:	inc    DWORD PTR [esp+esi*2]
  4117b6:	inc    esp
  4117b7:	dec    DWORD PTR [esi-0xd]
  4117ba:	dec    eax
  4117bb:	call   FWORD PTR [esi]
  4117bd:	es fwait
  4117bf:	and    eax,0x83ac226e
  4117c4:	push   es
  4117c5:	sbb    al,BYTE PTR [ebx]
  4117c7:	ja     0x41180d
  4117c9:	imul   eax,DWORD PTR [esi-0x8],0x4b
  4117cd:	or     ecx,ebp
  4117cf:	arpl   WORD PTR [ebx-0x5c],cx
  4117d2:	aam    0xab
  4117d4:	fs sbb eax,0x10d6ac5d
  4117da:	inc    ecx
  4117db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117dc:	push   esi
  4117dd:	mov    ds:0x9cd6ac46,eax
  4117e2:	push   ecx
  4117e3:	xchg   BYTE PTR [ecx],ah
  4117e5:	mov    ds:0x1cfcf836,eax
  4117ea:	jmp    0x411784
  4117ec:	push   eax
  4117ed:	push   cs
  4117ee:	sub    DWORD PTR [edi],esi
  4117f0:	push   esp
  4117f1:	mov    ?,WORD PTR [edi+esi*4+0x3615f7d0]
	...
  411820:	dec    edi
  411821:	mov    ds:0x3814b794,al
  411826:	mov    ebp,0xe4220b86
  41182b:	push   0x3e9094a
  411830:	sar    BYTE PTR [esi*8+0x5ca25977],1
  411837:	mov    al,0xec
  411839:	aaa    
  41183a:	icebp  
  41183b:	stos   BYTE PTR es:[edi],al
  41183c:	pop    esi
  41183d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41183e:	sar    DWORD PTR [edi-0x17],0xa2
  411842:	into   
  411843:	jg     0x41184d
  411845:	inc    ebx
  411846:	and    bh,BYTE PTR [ebp+0x50e91609]
  41184c:	shl    BYTE PTR [ebp+0x3afbc06a],1
  411852:	sbb    bl,bh
  411854:	xchg   ecx,eax
  411855:	xor    ecx,ebp
  411857:	jecxz  0x411805
  411859:	mov    ds:0xa2a98291,al
  41185e:	xchg   esi,eax
  41185f:	jge    0x411867
  411861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411862:	add    DWORD PTR [ebx+ebp*2],eax
  411865:	or     ecx,ebp
  411867:	fwait
  411868:	adc    ah,BYTE PTR [edi+0x4cd2ab7e]
  41186e:	add    BYTE PTR ds:0xe920095f,bh
  411874:	dec    eax
  411875:	mov    cl,0x6c
  411877:	dec    ebx
  411878:	mov    al,ds:0xeca489a2
  41187d:	xchg   ebx,eax
  41187e:	jge    0x4118a9
  411880:	out    dx,al
  411881:	in     al,0xff
  411883:	call   0x411888
	...
  4118ac:	dec    eax
  4118ad:	(bad)  
  4118ae:	mov    edi,0x45c9ed3a
  4118b3:	sub    DWORD PTR [ebx],esi
  4118b5:	mov    ds:0x4c09e9ff,al
  4118ba:	aam    0x2e
  4118bc:	inc    eax
  4118bd:	or     DWORD PTR [eax],eax
  4118bf:	mov    bl,BYTE PTR cs:[ecx+0x948feff]
  4118c6:	call   FWORD PTR [esp+eiz*8-0x1fc6ba6f]
  4118cd:	sbb    esi,DWORD PTR [esi+esi*2-0x5b724a76]
  4118d4:	or     BYTE PTR [ecx],bh
  4118d6:	push   0x800948e9
  4118db:	or     DWORD PTR [eax-0x5e],0x75
  4118df:	icebp  
  4118e0:	shl    BYTE PTR [esi-0x4c],1
  4118e3:	jmp    0x5e012730
  4118e8:	dec    ecx
  4118e9:	xchg   BYTE PTR [ebp-0x47],bh
  4118ec:	dec    eax
  4118ed:	sbb    al,0x5
  4118ef:	rcl    BYTE PTR [edx-0x7616fff8],1
  4118f5:	dec    ebx
  4118f6:	mov    al,0xb6
  4118f8:	push   ecx
  4118f9:	or     DWORD PTR [eax],eax
  4118fb:	pop    esp
  4118fc:	or     ebx,DWORD PTR [ecx+0x50]
  4118ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411900:	jnp    0x411967
  411902:	push   0x800948e9
  411907:	fs or  ecx,ecx
  41190a:	push   eax
  41190b:	and    DWORD PTR [ebx+0x5d],0x0
	...
  411936:	add    BYTE PTR [eax],al
  411938:	mov    ds:0x6f75bfa2,al
  41193d:	test   BYTE PTR [ecx-0x74fa8e00],ch
  411943:	inc    ebp
  411944:	ds enter 0x0,0xf7
  411949:	lock mov edi,0xd46b9
  41194f:	add    BYTE PTR [ecx-0x33],al
  411952:	rep stos BYTE PTR es:[edi],al
  411954:	sub    eax,0x623cc049
  411959:	add    eax,0x30ffff00
  41195e:	pop    DWORD PTR [ebp-0x7a]
  411961:	retf   
  411962:	inc    ebp
  411963:	aam    0x65
  411965:	adc    eax,DWORD PTR [eax]
  411967:	add    BYTE PTR [ebp+0x49],bl
  41196a:	lock jmp DWORD PTR ds:0xef8d000d
  411971:	int3   
  411972:	push   eax
  411973:	push   0x22
  411975:	(bad)  
  411976:	(bad)  
  411977:	dec    BYTE PTR [edi+0x3e31e828]
  41197d:	or     al,0x0
  41197f:	or     esi,DWORD PTR [edx]
  411981:	lock add eax,0xbc6783
  411987:	jne    0x411969
  411989:	jge    0x4119eb
  41198b:	(bad)  
  41198c:	jg     0x4119ff
  41198e:	push   DWORD PTR [ebp-0x42]
  411991:	std    
  411992:	imul   DWORD PTR [ebx]
  411994:	and    eax,DWORD PTR ds:0x7dc675ff
  41199a:	retf   0xb3
	...
  4119c1:	add    BYTE PTR [eax],al
  4119c3:	add    BYTE PTR [edx-0x5d3b7cf4],dh
  4119c9:	mov    eax,ds:0x35da45b6
  4119ce:	push   0x0
  4119d0:	in     eax,0xf0
  4119d2:	sti    
  4119d3:	call   0x4089ac
  4119d8:	dec    ebx
  4119d9:	stos   DWORD PTR es:[edi],eax
  4119da:	ret    
  4119db:	jne    0x411a26
  4119dd:	mov    ebp,edi
  4119df:	mov    BYTE PTR [esi],al
  4119e1:	dec    edx
  4119e2:	test   eax,0x257ac775
  4119e7:	mov    dl,0x4b
  4119e9:	mov    dl,0x53
  4119eb:	(bad)  
  4119ec:	(bad)  
  4119ed:	in     eax,dx
  4119ee:	test   al,0x75
  4119f0:	mov    bl,0x3a
  4119f2:	dec    edi
  4119f3:	sti    
  4119f4:	fs aas 
  4119f6:	std    
  4119f7:	mov    edi,0x109cb3d6
  4119fc:	push   esp
  4119fd:	mov    ch,0x13
  4119ff:	call   esi
  411a01:	xchg   ebp,eax
  411a02:	test   al,0x75
  411a04:	add    edi,DWORD PTR [edx]
  411a06:	out    dx,eax
  411a07:	cld    
  411a08:	cmp    al,0xd7
  411a0a:	jl     0x4119e4
  411a0c:	xor    al,0x55
  411a0e:	imul   ebp,eax,0x3e
  411a11:	ds add al,0x0
  411a14:	and    al,0x75
  411a16:	outs   dx,DWORD PTR ds:[esi]
  411a17:	call   0xffea2b8a
  411a1c:	adc    al,0x75
  411a1e:	addr16 call 0xffea2b8a
  411a24:	add    al,0x15
  411a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a27:	call   0x411a2c
	...
  411a50:	pop    esi
  411a51:	adc    DWORD PTR [ecx+0x4cf2c0ff],ebp
  411a57:	pop    edi
  411a58:	add    dh,BYTE PTR [edi+esi*8-0x1]
  411a5c:	jg     0x411a79
  411a5e:	xchg   edi,eax
  411a5f:	add    DWORD PTR [edi],0xffffffb6
  411a62:	jl     0x411aa9
  411a64:	inc    edi
  411a65:	stos   DWORD PTR es:[edi],eax
  411a66:	ret    
  411a67:	je     0x411aae
  411a69:	outs   dx,DWORD PTR ds:[esi]
  411a6a:	add    eax,DWORD PTR [eax]
  411a6c:	dec    ebx
  411a6d:	mov    dl,0x3
  411a6f:	mov    DWORD PTR [esi],0x4b000356
  411a75:	mov    dl,0x76
  411a77:	inc    ebp
  411a78:	scas   eax,DWORD PTR es:[edi]
  411a79:	or     BYTE PTR [ecx],bh
  411a7b:	test   eax,0x2e9e0d1e
  411a80:	push   ebx
  411a81:	mov    cl,0x0
  411a83:	stos   BYTE PTR es:[edi],al
  411a84:	xchg   esp,eax
  411a85:	lahf   
  411a86:	push   0x26
  411a88:	(bad)  
  411a8c:	icebp  
  411a8d:	or     BYTE PTR [esi+0x2e],bh
  411a90:	dec    edi
  411a91:	mov    al,ds:0x3663a7fc
  411a96:	outs   dx,DWORD PTR ds:[esi]
  411a97:	test   al,0x6c
  411a99:	cmp    BYTE PTR [esi+0x2e],ah
  411a9c:	addr16 mov al,0x39
  411a9f:	mov    ds:0xbab19f5c,eax
  411aa4:	mov    DWORD PTR [eax],edx
  411aa6:	jmp    0x6aeddaf9
  411aab:	mov    edi,0x3e262847
  411ab0:	aas    
  411ab1:	or     ecx,ebp
  411ab3:	and    DWORD PTR [eax],eax
	...
  411ad9:	add    BYTE PTR [eax],al
  411adb:	add    BYTE PTR [eax*2+0x334b092f],cl
  411ae2:	in     eax,dx
  411ae3:	jbe    0x411a73
  411ae5:	popf   
  411ae6:	mov    ecx,0xe909cb1b
  411aeb:	add    esp,DWORD PTR [ebx+0x4b030e9e]
  411af1:	sahf   
  411af2:	jl     0x411aef
  411af4:	in     al,dx
  411af5:	js     0x411b31
  411af7:	add    ecx,DWORD PTR [ebx-0x30]
  411afa:	sub    edi,edi
  411afc:	hlt    
  411afd:	xor    eax,0xc5c89762
  411b02:	xchg   ebp,eax
  411b03:	dec    edi
  411b04:	js     0x411acc
  411b06:	and    al,0x58
  411b08:	dec    ebx
  411b09:	or     ecx,ebp
  411b0b:	add    ebx,DWORD PTR [eax]
  411b0d:	ret    0x441
  411b10:	cmp    ecx,DWORD PTR [ecx]
  411b12:	jmp    0xbeeafdb2
  411b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b18:	rol    BYTE PTR [eax+eax*1-0x57],cl
  411b1c:	push   edi
  411b1d:	or     DWORD PTR [eax],edx
  411b1f:	jmp    0x89cdcc6c
  411b24:	in     al,dx
  411b25:	sahf   
  411b26:	mov    DWORD PTR [edi+ebp*1],esp
  411b29:	xor    DWORD PTR [eax],eax
  411b2b:	stc    
  411b2c:	dec    eax
  411b2d:	or     eax,ebp
  411b2f:	push   cs
  411b30:	out    0x9e,eax
  411b32:	push   DWORD PTR [eax+0xa]
  411b35:	pop    ebp
  411b36:	(bad)  
  411b37:	cld    
  411b38:	mov    esp,0x48e93c60
  411b3d:	or     DWORD PTR [ebx],esi
  411b3f:	test   eax,0x0
	...
  411b68:	mov    eax,0xa4acc773
  411b6d:	(bad)  
  411b6f:	call   0x29b6b9bc
  411b74:	fadd   QWORD PTR [ebx-0x2c]
  411b77:	dec    esi
  411b78:	sbb    ah,BYTE PTR [ecx-0x71]
  411b7b:	lods   al,BYTE PTR ds:[esi]
  411b7c:	clc    
  411b7d:	lds    eax,FWORD PTR [ebp+0x21]
  411b80:	in     al,0xd
  411b82:	add    cl,ch
  411b84:	cmc    
  411b85:	inc    ebx
  411b86:	hlt    
  411b87:	cs xor al,0x9e
  411b8a:	push   DWORD PTR [edx+ecx*4-0x3b]
  411b8e:	push   eax
  411b8f:	xchg   ecx,eax
  411b90:	dec    eax
  411b91:	or     DWORD PTR [eax],eax
  411b93:	imul   esi,DWORD PTR [ecx],0x1094ff09
  411b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b9a:	mov    ch,0x3b
  411b9c:	dec    edi
  411b9d:	or     DWORD PTR [ebx],ecx
  411b9f:	sub    DWORD PTR [ebx],edi
  411ba1:	pop    es
  411ba2:	xor    DWORD PTR [esp+eax*1+0x9],0x75
  411ba7:	in     al,0xcf
  411ba9:	fwait
  411baa:	add    cl,ch
  411bac:	dec    eax
  411bad:	mov    BYTE PTR [ebp-0x67],0xa5
  411bb1:	or     eax,0x4453e900
  411bb6:	mov    al,0x39
  411bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb9:	adc    edi,DWORD PTR [eax+eax*1+0x51a]
  411bc0:	xor    ah,BYTE PTR [ecx]
  411bc2:	inc    ebp
  411bc3:	les    edx,FWORD PTR [edx+0x7d]
  411bc6:	nop
  411bc7:	mov    dl,0xa2
  411bc9:	or     DWORD PTR [ebx],ecx
  411bcb:	rol    BYTE PTR [eax],0x0
	...
  411bf2:	add    BYTE PTR [eax],al
  411bf4:	inc    edi
  411bf5:	or     cl,ch
  411bf7:	fdiv   DWORD PTR [edx+0x678b0009]
  411bfd:	sub    eax,0x20a200c6
  411c02:	jge    0x411bc8
  411c04:	or     esp,DWORD PTR [esi-0x658d0001]
  411c0a:	mov    edi,0x455f08f3
  411c0f:	les    ebx,FWORD PTR [esi-0x12fffff7]
  411c15:	fdiv   DWORD PTR [edi-0x38a65871]
  411c1b:	inc    ebp
  411c1c:	sbb    ah,BYTE PTR [edi+0xf]
  411c1f:	add    BYTE PTR [edx+0x5e],ah
  411c22:	inc    ebp
  411c23:	hlt    
  411c24:	lea    edx,[ebx+0x49afffff]
  411c2a:	les    edx,FWORD PTR [eax+0x8]
  411c2d:	or     DWORD PTR [edx+0x0],ebp
  411c30:	pop    ebp
  411c31:	fnstcw WORD PTR [ebx+0x1af6e8]
  411c37:	add    BYTE PTR [ecx],bl
  411c39:	leave  
  411c3a:	je     0x411c42
  411c3c:	mov    eax,ds:0xb700d3f1
  411c41:	or     ecx,ebp
  411c43:	mov    edx,?
  411c45:	or     BYTE PTR [eax],al
  411c47:	push   DWORD PTR [edi-0x8]
  411c4a:	(bad)  
  411c4b:	jne    0x411c6f
  411c4d:	arpl   WORD PTR [ebp-0x48],si
  411c50:	retf   0x2a82
  411c53:	inc    ecx
  411c54:	bnd gs jne 0x411c14
	...
  411c80:	cli    
  411c81:	into   
  411c82:	mov    cl,0x0
  411c84:	dec    ebx
  411c85:	mov    dl,0x80
  411c87:	les    esi,FWORD PTR [edi]
  411c89:	mov    ebx,0x2a7456c
  411c8e:	sbb    al,BYTE PTR [eax]
  411c90:	mov    esp,0xb0e8c3d5
  411c95:	pop    edx
  411c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c97:	inc    DWORD PTR [eax+0x72]
  411c9a:	das    
  411c9b:	add    dh,BYTE PTR [eax-0x28ba84bc]
  411ca1:	jnp    0x411cd2
  411ca3:	mov    ah,0xa3
  411ca5:	push   ecx
  411ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ca7:	dec    DWORD PTR [ebx+ecx*4-0x58c43d1]
  411cae:	jae    0x411cb0
  411cb0:	dec    ebx
  411cb1:	add    ah,BYTE PTR [ebp+0x2f13b775]
  411cb7:	mov    ah,0x63
  411cb9:	clc    
  411cba:	stos   BYTE PTR es:[edi],al
  411cbb:	jmp    DWORD PTR [edi+edx*4-0x3d]
  411cbf:	jne    0x411d0a
  411cc1:	aaa    
  411cc2:	repz adc dh,0xa1
  411cc6:	add    esi,DWORD PTR [edi+esi*1+0x4b]
  411cca:	das    
  411ccb:	adc    BYTE PTR [ebp+ebx*2-0x9],al
  411ccf:	(bad)  
  411cd0:	mov    dh,0x16
  411cd2:	pushf  
  411cd3:	inc    eax
  411cd4:	xor    dl,bl
  411cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cd7:	or     ecx,DWORD PTR [ebx]
  411cd9:	push   ebp
  411cda:	add    ebx,ebp
  411cdc:	cmp    al,0x17
  411cde:	int3   
  411cdf:	or     eax,DWORD PTR [eax]
  411ce1:	jbe    0x411cf5
  411ce3:	lea    eax,[eax]
	...
  411d09:	add    BYTE PTR [eax],al
  411d0b:	add    BYTE PTR [esi-0x6900abba],cl
  411d11:	xchg   esi,eax
  411d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d13:	jne    0x411cd4
  411d15:	stc    
  411d16:	or     bh,bl
  411d18:	cld    
  411d19:	call   0xe86f:0x1cf4d878
  411d20:	cli    
  411d21:	loopne 0x411d26
  411d23:	add    ah,ah
  411d25:	or     BYTE PTR [esp+eax*8-0xd],bl
  411d29:	stc    
  411d2a:	mov    ebp,0x5c9bd4a4
  411d2f:	push   0xa4ae11e3
  411d34:	les    ebx,FWORD PTR [ebx+0x9b36c3c]
  411d3a:	sahf   
  411d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d3c:	mov    ah,0x87
  411d3e:	xor    al,0x58
  411d40:	dec    ebx
  411d41:	adc    eax,0x6d1ea4e1
  411d46:	xchg   ecx,eax
  411d47:	mov    al,0x7d
  411d49:	fwait
  411d4a:	sahf   
  411d4b:	js     0x411cd5
  411d4d:	aas    
  411d4e:	ss mov ebx,0x4ee8f889
  411d54:	shr    BYTE PTR [edx+ebp*2-0x2dc87c41],1
  411d5b:	enter  0x1dc8,0xe5
  411d5f:	add    esi,edi
  411d61:	dec    edx
  411d62:	push   0x26
  411d64:	cmp    ecx,DWORD PTR [ecx]
  411d66:	fnstsw WORD PTR [ebx]
  411d68:	into   
  411d69:	inc    ebp
  411d6a:	pop    ebp
  411d6b:	push   ebx
  411d6c:	push   esp
  411d6d:	adc    eax,0x9be5
	...
  411d96:	add    BYTE PTR [eax],al
  411d98:	push   edi
  411d99:	pop    eax
  411d9a:	jmp    0xc20aeba2
  411d9f:	repz cmp eax,0xcf9bed15
  411da5:	mov    bl,0x36
  411da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411da8:	ret    0x3144
  411dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dac:	sahf   
  411dad:	popf   
  411dae:	adc    DWORD PTR [esi-0x14],esp
  411db1:	or     ecx,ebp
  411db3:	clc    
  411db4:	aam    0x15
  411db6:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411db8:	xchg   esi,eax
  411db9:	stc    
  411dba:	or     eax,0x63a032e
  411dbf:	cs push ebx
  411dc1:	mov    cl,0xea
  411dc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dc4:	hlt    
  411dc5:	call   0xed75:0x9b006200
  411dcc:	shl    DWORD PTR [ebx-0x51],0xe9
  411dd0:	dec    eax
  411dd1:	call   0xd6d8:0x41a0ed75
  411dd8:	test   al,0x8e
  411dda:	ret    
  411ddb:	xor    dl,BYTE PTR [esi-0x7c16f339]
  411de1:	mov    gs,esp
  411de3:	push   0xb6fe1983
  411de8:	call   0xe97ca379
  411ded:	call   0xe901:0x86f39ff
  411df4:	dec    eax
  411df5:	mov    cl,0x63
  411df7:	pop    eax
  411df8:	inc    edi
  411df9:	or     ecx,ecx
  411dfb:	stos   BYTE PTR es:[edi],al
	...
  411e24:	inc    edx
  411e25:	mov    gs,esp
  411e27:	push   0x2a
  411e29:	adc    DWORD PTR [eax],eax
  411e2b:	cmc    
  411e2c:	dec    ecx
  411e2d:	xchg   BYTE PTR [ebp-0x27],bh
  411e30:	dec    eax
  411e31:	adc    eax,0xf5426e19
  411e36:	(bad)  
  411e37:	fcom   QWORD PTR [eax-0x4f]
  411e3a:	fiadd  DWORD PTR [ebx-0x58]
  411e3d:	call   0xdd75:0x9b58dcff
  411e44:	jmp    0x4592265c
  411e49:	mov    esi,0xc7063eff
  411e4e:	adc    cl,ch
  411e50:	jae    0x411de0
  411e52:	in     al,dx
  411e53:	push   0x6a
  411e55:	adc    DWORD PTR [eax],eax
  411e57:	popf   
  411e58:	sbb    al,0x87
  411e5a:	jge    0x411e49
  411e5c:	dec    eax
  411e5d:	adc    eax,0xf9321616
  411e62:	(bad)  
  411e63:	xchg   esp,eax
  411e64:	push   eax
  411e65:	mov    cl,0xae
  411e67:	add    BYTE PTR [eax],ch
  411e69:	data16 (bad) 
  411e6b:	(bad)  
  411e6c:	jg     0x411e78
  411e6e:	push   DWORD PTR [ebp-0x16]
  411e71:	ins    DWORD PTR es:[edi],dx
  411e72:	add    eax,0xc966f5db
  411e77:	ret    0x5d6
  411e7a:	push   ebp
  411e7b:	mov    eax,DWORD PTR [esi]
  411e7d:	add    esp,0xfffffff0
  411e80:	cmc    
  411e81:	add    BYTE PTR [eax+ebp*8],cl
  411e84:	jne    0x411ee8
  411e86:	(bad)  
  411e87:	inc    DWORD PTR [eax]
	...
  411ead:	add    BYTE PTR [eax],al
  411eaf:	add    BYTE PTR [ebx],bh
  411eb1:	push   ecx
  411eb2:	or     al,0x83
  411eb4:	ja     0x411eaf
  411eb6:	push   DWORD PTR [ebx+0x4c]
  411eb9:	data16 jne 0x411ec8
  411ebc:	mov    cl,dl
  411ebe:	loop   0x411ebf
  411ec0:	in     eax,0xa
  411ec2:	shl    BYTE PTR [eax+eiz*2+0x78],0x45
  411ec7:	lock push edx
  411ec9:	data16 jne 0x411ed8
  411ecc:	retf   0xe383
  411ecf:	inc    ebp
  411ed1:	or     al,al
  411ed3:	je     0x411e85
  411ed5:	test   BYTE PTR [ebp-0x4],bh
  411ed8:	bound  eax,QWORD PTR ds:0xa5610010
  411ede:	(bad)  
  411edf:	jne    0x411ec7
  411ee1:	data16 jne 0x411edc
  411ee4:	cli    
  411ee5:	mov    al,ds:0xaf5ffe6
  411eea:	shl    BYTE PTR [ebp+0x43],0x6c
  411eee:	jne    0x411f00
  411ef0:	test   ecx,esi
  411ef2:	sti    
  411ef3:	(bad)  
  411ef4:	push   DWORD PTR [edi+edi*8+0x75]
  411ef8:	sub    ah,BYTE PTR [ebp+0x4f]
  411efb:	push   DWORD PTR [ebp+0x6b]
  411efe:	lea    eax,[ebp+0x42]
  411f01:	fsubr  st(7),st
  411f03:	loopne 0x411f46
  411f05:	imul   edi,edi,0xffffffff
  411f08:	dec    ebx
  411f09:	jne    0x411f1a
  411f0b:	call   0xffe304c2
  411f10:	adc    ah,ch
  411f12:	push   cs
	...
  411f3b:	add    BYTE PTR [esi+0x783af1b],bl
  411f41:	xchg   ebx,eax
  411f42:	mov    eax,ds:0xb10a5775
  411f47:	loop   0x411f25
  411f49:	scas   eax,DWORD PTR es:[edi]
  411f4a:	mov    eax,DWORD PTR [ebp+0x47]
  411f4d:	and    ebx,DWORD PTR [edi]
  411f4f:	or     al,0x4b
  411f51:	ss dec ecx
  411f53:	(bad)  
  411f54:	ds mov dh,0xab
  411f57:	pop    edx
  411f58:	test   eax,0x8b0ba1cf
  411f5d:	(bad)  
  411f5f:	mov    WORD PTR [esi],es
  411f61:	push   edx
  411f62:	xor    al,0xff
  411f64:	push   ds
  411f65:	mov    dh,0xab
  411f67:	adc    DWORD PTR [eax-0x74f45e91],ebp
  411f6d:	(bad)  
  411f6e:	in     al,0x80
  411f70:	push   cs
  411f71:	jle    0x411f77
  411f73:	add    BYTE PTR [ebx-0x5e],bl
  411f76:	adc    al,0x11
  411f78:	jl     0x411f0f
  411f7a:	repz (bad) 
  411f7c:	(bad)  
  411f7d:	adc    eax,0x1f7375a1
  411f82:	pop    ss
  411f83:	or     BYTE PTR [ebx+0x15],dh
  411f86:	mov    ds:0x471d5cff,al
  411f8b:	lock sti 
  411f8d:	cmp    DWORD PTR [edx],esp
  411f8f:	jecxz  0x411fdd
  411f91:	aas    
  411f92:	mov    eax,ds:0x494a5775
  411f97:	fnstsw WORD PTR [edi+ecx*2]
  411f9a:	retf   
  411f9b:	ret    0xa247
  411f9e:	mov    eax,DWORD PTR ss:[eax]
	...
  411fc5:	add    BYTE PTR [eax],al
  411fc7:	add    BYTE PTR [edi],bl
  411fc9:	and    ecx,eax
  411fcb:	lock js 0x411fd9
  411fce:	mov    ebp,0xf10996ff
  411fd3:	stos   DWORD PTR es:[edi],eax
  411fd4:	ret    0x1eaa
  411fd7:	mov    eax,ds:0x84e14dc2
  411fdc:	xchg   BYTE PTR [ecx],al
  411fde:	jmp    0x7cd9a4fa
  411fe3:	or     esp,ebx
  411fe5:	popf   
  411fe6:	or     BYTE PTR [ecx+0x182903ec],ah
  411fec:	sbb    DWORD PTR [esi-0x67846c5c],eax
  411ff2:	pop    esp
  411ff3:	or     al,0xe3
  411ff5:	fs retf 
  411ff7:	mov    al,ds:0x17a903cc
  411ffc:	imul   ecx,DWORD PTR [edx+0x94ba04c],0xf93803d9
  412006:	mov    ebp,0x3c97af16
  41200b:	pushf  
  41200c:	mov    bl,0xd7
  41200e:	(bad)  
  41200f:	mov    al,ds:0x17a9039c
  412014:	dec    edx
  412015:	dec    esp
  412016:	ins    BYTE PTR es:[edi],dx
  412017:	inc    esi
  412018:	fwait
  412019:	cmp    BYTE PTR [ecx-0x71689603],al
  41201f:	mov    al,ds:0xa49100f6
  412024:	xchg   edi,eax
  412025:	xchg   edi,eax
  412026:	jle    0x411fb4
  412028:	mov    BYTE PTR [ebx],dh
  41202a:	mov    al,ds:0xc5
	...
  412053:	add    BYTE PTR [edi+0x9],cl
  412056:	adc    al,0x8d
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	mov    DWORD PTR ds:0x5e975557,ebp
  41205f:	enter  0x50c6,0x57
  412063:	mov    al,ds:0x3e90a44
  412068:	dec    ebx
  412069:	sub    BYTE PTR [edi+ecx*1+0x6b5c940],0xcb
  412071:	sar    edi,1
  412073:	call   0xb22a2cb5
  412078:	dec    ecx
  412079:	or     DWORD PTR [eax],eax
  41207b:	es cmp eax,0xe348e805
  412081:	xchg   esi,eax
  412082:	jmp    edx
  412084:	or     BYTE PTR ds:0xe581810f,bl
  41208a:	inc    eax
  41208b:	jmp    0x114d3d3b
  412090:	jmp    0x6804:0xb0f6ffb6
  412097:	dec    edi
  412098:	in     al,dx
  412099:	dec    ecx
  41209a:	add    dh,ah
  41209c:	xor    al,BYTE PTR ds:0x96a70ee8
  4120a2:	jmp    DWORD PTR [eax-0x2e]
  4120a5:	push   ecx
  4120a6:	dec    dh
  4120a8:	fsub   QWORD PTR [ecx]
  4120aa:	ds call 0x64ce29f8
  4120b0:	mov    DWORD PTR [edi-0x5ea04901],edx
  4120b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120b7:	lea    eax,[eax]
	...
  4120dd:	add    BYTE PTR [eax],al
  4120df:	add    BYTE PTR [esi+edx*4-0x68769373],bh
  4120e6:	call   FWORD PTR [esi+0x51b59657]
  4120ec:	in     eax,0x96
  4120ee:	inc    DWORD PTR [ecx-0x16ff9b58]
  4120f4:	(bad)  
  4120f5:	mov    WORD PTR [edi+edi*2-0x19bf6934],?
  4120fc:	int3   
  4120fd:	repz add cl,ch
  412100:	dec    eax
  412101:	test   BYTE PTR [ebp-0x694ad5],dl
  412107:	push   esi
  412108:	dec    ecx
  412109:	stc    
  41210a:	(bad)  
  41210b:	call   0x6ac52758
  412110:	inc    edi
  412111:	or     DWORD PTR [eax],eax
  412113:	add    BYTE PTR [edi+0x1a502c4b],bh
  412119:	push   ds
  41211a:	sub    al,0x41
  41211c:	xor    ah,BYTE PTR [edx-0x44]
  41211f:	lods   eax,DWORD PTR ds:[esi]
  412120:	xor    cl,BYTE PTR [edx]
  412122:	or     eax,eax
  412124:	mov    bh,0x0
  412126:	jmp    0x4b43f7
  41212b:	lea    eax,[edi+0x4dfffecb]
  412131:	js     0x412175
  412133:	sub    al,0xd2
  412135:	loope  0x4120cc
  412137:	sub    al,0xa3
  412139:	or     eax,ebp
  41213b:	lahf   
  41213c:	(bad)  
  41213d:	or     eax,0xf0320b00
  412142:	add    al,0xe9
	...
  41216c:	mov    ebp,0xed000009
  412171:	lock or ebp,eax
  412174:	lahf   
  412175:	imul   edi,edi,0xffffffff
  412178:	test   eax,0x1a0f75c9
  41217d:	and    eax,0x76a24128
  412182:	jne    0x412190
  412184:	mov    cl,BYTE PTR [edi]
  412186:	(bad)  
  412188:	in     eax,dx
  412189:	bound  ecx,QWORD PTR [edx]
  41218b:	push   0xffffffa2
  41218d:	jbe    0x412204
  41218f:	or     al,0xba
  412191:	sbb    edi,0xffffffff
  412194:	fnstsw WORD PTR [eax-0x6b]
  412197:	ret    0x76cc
  41219a:	dec    DWORD PTR [ebp+0x50519950]
  4121a0:	ficom  DWORD PTR [edi-0x21]
  4121a3:	(bad)  
  4121a4:	fstp   st(1)
  4121a6:	(bad)  
  4121a7:	jne    0x412223
  4121a9:	jbe    0x412220
  4121ab:	adc    al,0xed
  4121ad:	lock movmskps ebp,xmm5
  4121b1:	lock pop es
  4121b3:	call   0xffde5403
  4121b8:	cmp    al,0x4b
  4121ba:	(bad)  
  4121bb:	(bad)  [esp+ecx*2]
  4121be:	stos   BYTE PTR es:[edi],al
  4121bf:	pusha  
  4121c0:	mov    esi,0xce88ef60
  4121c5:	push   ss
  4121c6:	popf   
  4121c7:	call   FWORD PTR [eax+eiz*1]
  4121ca:	and    BYTE PTR [eax],dl
  4121cc:	dec    ebx
  4121cd:	jne    0x4121d0
  4121cf:	jmp    0x4121d1
	...
  4121f5:	add    BYTE PTR [eax],al
  4121f7:	add    BYTE PTR [ecx],bh
  4121f9:	repz pop ss
  4121fb:	adc    BYTE PTR [esi+esi*1],al
  4121fe:	push   edi
  4121ff:	(bad)  
  412200:	cld    
  412201:	add    ebp,DWORD PTR [ebx+0x3a2a542]
  412207:	or     ecx,DWORD PTR [ebx]
  412209:	pop    ds
  41220a:	loopne 0x412273
  41220c:	mov    bl,0xca
  41220e:	inc    esp
  41220f:	add    ah,bl
  412211:	sbb    eax,0xcb1fe80f
  412216:	popf   
  412217:	dec    esp
  412219:	jge    0x412273
  41221b:	inc    ah
  41221d:	mov    ebx,0x633fe834
  412222:	popf   
  412223:	call   FWORD PTR [ebx]
  412225:	pop    ds
  412226:	pop    ds
  412227:	sbb    BYTE PTR [ebx-0x22],cl
  41222a:	ud0    ebx,DWORD PTR [esi]
  41222d:	mov    dh,0x33
  41222f:	call   DWORD PTR [esi]
  412231:	stos   BYTE PTR es:[edi],al
  412232:	pushf  
  412233:	push   ebp
  412234:	xor    esi,DWORD PTR [edi+0x10]
  412237:	call   DWORD PTR [esi]
  412239:	sahf   
  41223a:	xor    edi,edi
  41223c:	(bad)  
  41223d:	test   eax,0x837e54ab
  412242:	popf   
  412243:	call   0xffde8936
  412248:	mov    esi,0x64fec22d
  41224d:	sbb    esi,DWORD PTR [edi+edi*8]
  412250:	xchg   esi,eax
  412251:	out    0x9d,al
  412253:	call   DWORD PTR [ecx+ecx*1+0x51]
  412257:	mov    ecx,0x86e9099f
	...
  412284:	or     eax,DWORD PTR [esp+ebp*2]
  412287:	xchg   ebx,eax
  412288:	cmp    eax,0xfe9d4e94
  41228d:	push   esp
  41228e:	inc    edi
  41228f:	popf   
  412290:	sub    al,0xa1
  412292:	das    
  412293:	jo     0x4122e0
  412295:	or     DWORD PTR [esi],esi
  412297:	push   edi
  412298:	jecxz  0x41222c
  41229a:	cs popf 
  41229c:	and    ebx,esi
  41229e:	inc    ecx
  41229f:	popf   
  4122a0:	or     al,0xc2
  4122a2:	sub    edi,eax
  4122a4:	add    al,0x3d
  4122a6:	bound  esi,QWORD PTR [eax+0x170e0971]
  4122ac:	pop    edi
  4122ad:	xchg   esp,eax
  4122ae:	jl     0x4122a3
  4122b0:	in     eax,dx
  4122b1:	sbb    eax,0x15e9ced
  4122b6:	add    ebp,ebx
  4122b8:	ficom  WORD PTR [ebx-0x6f63512]
  4122be:	call   0xdee5e2f9
  4122c3:	push   ss
  4122c4:	push   edi
  4122c5:	mov    eax,ds:0x93bcbd32
  4122ca:	loop   0x41228f
  4122cc:	aas    
  4122cd:	repz lds edx,FWORD PTR [esi]
  4122d0:	pop    ebx
  4122d1:	cmp    ecx,edx
  4122d3:	xchg   ecx,eax
  4122d4:	test   DWORD PTR [ebx+0x1d9c33b6],edx
  4122da:	rcr    DWORD PTR [esi+ebx*1+0x169d38fd],1
  4122e1:	add    DWORD PTR [ecx-0x696c7ba3],edx
  4122e7:	stos   DWORD PTR es:[edi],eax
	...
  412310:	jno    0x4122c0
  412312:	mov    ds,WORD PTR [edx+eax*4+0x1603ddc6]
  412319:	or     BYTE PTR [ebp-0x32164],0x75
  412320:	xor    eax,0x44f4fef9
  412325:	pop    ds
  412326:	sbb    ah,BYTE PTR [esi+0x35]
  412329:	add    eax,ebp
  41232b:	mov    al,ds:0x56ff92e7
  412330:	push   ebp
  412331:	std    
  412332:	(bad)  
  412333:	aam    0x38
  412335:	xchg   esp,eax
  412336:	jne    0x41232d
  412338:	(bad)  
  412339:	out    0xfe,al
  41233b:	mov    ah,0x50
  41233d:	mov    eax,ds:0x92bf36a6
  412342:	push   DWORD PTR [esp+ebx*1-0x50068a6c]
  412349:	sbb    al,0xc
  41234b:	xchg   ebx,eax
  41234c:	add    al,0x94
  41234e:	jne    0x412331
  412350:	mov    al,0x76
  412352:	dec    DWORD PTR [esi]
  412354:	xlat   BYTE PTR ds:[ebx]
  412355:	rol    dl,0xd9
  412358:	dec    eax
  412359:	cmp    al,0x8b
  41235b:	or     eax,0x9af0cdcb
  412360:	push   ss
  412361:	cmp    ch,BYTE PTR [ebx]
  412363:	adc    al,bl
  412365:	dec    esp
  412366:	or     al,0xe6
  412368:	test   DWORD PTR [ebx+0x1ce0e145],0x950a6608
  412372:	(bad)  
  412373:	and    al,0x0
	...
  412399:	add    BYTE PTR [eax],al
  41239b:	add    bl,bl
  41239d:	or     DWORD PTR [eax],eax
  41239f:	jmp    0xe07ea9ec
  4123a4:	mov    bh,0x49
  4123a6:	add    cl,ch
  4123a8:	dec    esp
  4123a9:	xor    eax,0x9472c83
  4123ae:	je     0x4123ef
  4123b0:	ret    0xf04c
  4123b3:	cmp    DWORD PTR ds:0x2ee96a08,esi
  4123b9:	or     DWORD PTR [ebx+0x73927f0c],eax
  4123bf:	add    BYTE PTR [edi+0x6f],bl
  4123c2:	jne    0x4123d4
  4123c4:	mov    ecx,0x48006a0b
  4123c9:	or     eax,0xdcda458d
  4123ce:	(bad)  
  4123cf:	adc    eax,0x40a44b
  4123d4:	cmp    esi,eax
  4123d6:	je     0x412407
  4123d8:	mov    cl,0xf0
  4123da:	repz add BYTE PTR [esi],bl
  4123dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123de:	mov    al,BYTE PTR [ebp+0x36]
  4123e1:	or     DWORD PTR [ebp-0x10],0x49
  4123e5:	add    eax,0x79f11777
  4123ea:	mov    esi,DWORD PTR [ebp+0x5e]
  4123ed:	cmp    BYTE PTR [ebp+0x8],0x99
  4123f1:	inc    eax
  4123f2:	lock jecxz 0x4123e5
  4123f5:	jp     0x41239b
  4123f7:	mov    ebp,DWORD PTR [edi+0x5275ff09]
  4123fd:	jle    0x4123ff
  4123ff:	inc    DWORD PTR [eax]
	...
  412425:	add    BYTE PTR [eax],al
  412427:	add    BYTE PTR [edi-0x7e],ch
  41242a:	call   0x4e9d66
  41242f:	mov    esi,DWORD PTR [ecx]
  412431:	into   
  412432:	pop    ebp
  412433:	pop    ebx
  412434:	sub    ecx,ebx
  412436:	or     al,0x0
  412438:	jb     0x7a2fa82a
  41243e:	push   ebx
  41243f:	push   esi
  412440:	jge    0x412427
  412442:	cmp    BYTE PTR [edi],ch
  412444:	arpl   WORD PTR ds:0x5d999e8,cx
  41244a:	add    BYTE PTR [ebx-0x3ba3916],cl
  412450:	mov    dl,0x5
  412452:	add    BYTE PTR [eax],al
  412454:	test   eax,0x3a3e74c5
  412459:	test   al,0x2e
  41245b:	inc    ecx
  41245c:	jb     0x412438
  41245e:	out    0x45,eax
  412460:	dec    ebx
  412461:	inc    edi
  412462:	add    eax,DWORD PTR [eax]
  412464:	inc    eax
  412465:	pusha  
  412466:	comiss xmm0,xmm0
  412469:	movntps XMMWORD PTR [esi+0x34],xmm0
  41246d:	loope  0x412472
  41246f:	push   ebx
  412470:	jae    0x4124c5
  412472:	outs   dx,BYTE PTR ds:[esi]
  412473:	add    BYTE PTR [ebx-0x59],cl
  412476:	ret    
  412477:	je     0x4124a6
  412479:	pop    ss
  41247a:	fwait
  41247b:	lea    ecx,[esi+0x7ee8332e]
  412481:	mov    eax,DWORD PTR [ebx]
  412483:	add    BYTE PTR [ebx-0x517c4dc1],bl
  412489:	inc    esi
  41248a:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  4124b2:	add    BYTE PTR [eax],al
  4124b4:	push   ecx
  4124b5:	mov    al,BYTE PTR [eax+eax*1]
  4124b8:	dec    ebx
  4124b9:	mov    ds:0xe9705e3a,al
  4124be:	lds    edi,FWORD PTR [eax+0x3a24b]
  4124c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124c5:	push   eax
  4124c6:	ds leave 
  4124c8:	or     BYTE PTR [esi-0x72],cl
  4124cb:	in     al,dx
  4124cc:	enter  0x92e6,0x83
  4124d0:	cs sub ecx,ebp
  4124d3:	inc    eax
  4124d4:	dec    ebx
  4124d5:	mov    ds:0x55c8120f,al
  4124da:	js     0x41250a
  4124dc:	mov    ah,BYTE PTR [edx+0x23427403]
  4124e2:	xlat   BYTE PTR ds:[ebx]
  4124e3:	mov    al,ds:0x3e175
  4124e8:	ss lahf 
  4124ea:	pop    ebx
  4124eb:	add    DWORD PTR [ebx-0x5e],ecx
  4124ee:	add    ecx,ecx
  4124f0:	mov    BYTE PTR ds:0xa28dfa3f,dl
  4124f6:	add    eax,esi
  4124f8:	or     esp,DWORD PTR [ecx-0x5bf439fd]
  4124fe:	add    eax,esi
  412500:	or     ecx,DWORD PTR [ecx]
  412502:	jmp    0x8503:0xe5498d03
  412509:	dec    ecx
  41250a:	in     al,dx
  41250b:	inc    bh
  41250d:	inc    esi
  41250e:	xchg   ebp,eax
  41250f:	xor    al,0xe1
  412511:	or     BYTE PTR [ebx],dl
  412513:	add    al,0xf1
  412515:	or     BYTE PTR [ebx],dl
  412517:	add    al,0x0
	...
  41253d:	add    BYTE PTR [eax],al
  41253f:	add    cl,dh
  412541:	or     BYTE PTR [ebx],al
  412543:	add    al,0xe3
  412545:	call   0x238c2934
  41254a:	or     DWORD PTR [esi],ebp
  41254c:	dec    ecx
  41254d:	jle    0x4124f3
  41254f:	popf   
  412550:	fwait
  412551:	nop
  412552:	cld    
  412553:	jp     0x4125ba
  412555:	dec    edx
  412556:	jmp    0xeb573067
  41255b:	retf   0xc808
  41255e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41255f:	xchg   ebx,eax
  412560:	dec    ebx
  412561:	or     ecx,ebp
  412563:	add    eax,esi
  412565:	inc    ebp
  412566:	cmp    DWORD PTR [esp+ecx*1],esi
  412569:	push   ss
  41256a:	sbb    eax,0xf4904b2e
  41256f:	jbe    0x41259e
  412571:	dec    edx
  412572:	jmp    0xe6573083
  412577:	rol    BYTE PTR [esi+0x4b03e999],0x9
  41257e:	dec    BYTE PTR [esi]
  412580:	xlat   BYTE PTR ds:[ebx]
  412581:	(bad)  
  412582:	fsub   QWORD PTR [edx+0x25]
  412585:	dec    edx
  412586:	jmp    0xb0daac17
  41258b:	les    ebx,FWORD PTR [esi]
  41258d:	test   ch,cl
  41258f:	test   BYTE PTR [edi-0x3cc19b80],al
  412595:	cmp    BYTE PTR [ecx-0x59],al
  412598:	pop    ebp
  412599:	dec    edx
  41259a:	jmp    0xbee8304a
  41259f:	cwde   
  4125a0:	sti    
  4125a1:	add    eax,DWORD PTR [eax]
  4125a3:	test   eax,0x0
	...
  4125cc:	inc    esp
  4125cd:	pop    es
  4125ce:	sub    DWORD PTR [edi+edi*4],0xfffffff4
  4125d2:	jbe    0x4125e6
  4125d4:	int3   
  4125d5:	inc    ebp
  4125d6:	lock cmp DWORD PTR [edi+0x48e9aaee],ebp
  4125dd:	xchg   al,al
  4125df:	adc    DWORD PTR [ecx],esi
  4125e1:	add    BYTE PTR [esi+0xf38c22c],dh
  4125e7:	aaa    
  4125e8:	sbb    eax,0xfae6508f
  4125ed:	inc    ebp
  4125ee:	std    
  4125ef:	sbb    DWORD PTR [edx+0x57],eax
  4125f2:	inc    ebp
  4125f3:	gs js  0x4125f4
  4125f6:	mov    ch,0xa4
  4125f8:	fistp  QWORD PTR [ecx]
  4125fa:	setg   BYTE PTR [ebp-0x6d]
  4125fe:	push   eax
  4125ff:	ficomp WORD PTR [edx+0x5399f944]
  412605:	push   edi
  412606:	inc    ebp
  412607:	inc    ecx
  412608:	pop    eax
  412609:	(bad)  
  41260a:	mov    dh,0xac
  41260c:	mov    edx,0x4d760f39
  412611:	xchg   ebp,eax
  412612:	push   eax
  412613:	es push ebp
  412615:	cdq    
  412616:	push   0x49f21b
  41261b:	fs xor eax,0xa301507d
  412621:	arpl   WORD PTR [eax],ax
  412623:	jmp    0x6c75ebf7
  412628:	sbb    eax,0x5301507d
  41262d:	pusha  
  41262e:	add    cl,ch
	...
  412658:	sbb    BYTE PTR [ebp+eax*2+0x75],bh
  41265c:	jg     0x41267f
  41265e:	in     eax,dx
  41265f:	clts   
  412661:	or     eax,ebp
  412663:	cwde   
  412664:	jmp    0x4125f4
  412666:	inc    ecx
  412668:	sub    al,0xb1
  41266a:	inc    DWORD PTR [eax]
  41266c:	lea    edi,[ebx+eax*8-0x7e9ee6ab]
  412673:	les    ecx,FWORD PTR [esi+0x76]
  412676:	(bad)  
  412677:	push   DWORD PTR [ecx]
  412679:	fisubr WORD PTR [ecx+0x0]
  41267c:	pop    eax
  41267d:	add    eax,0x627a75ff
  412682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412683:	aad    0xdd
  412685:	jbe    0x412610
  412687:	inc    ebp
  412688:	mov    esi,0xbd0000dd
  41268d:	aaa    
  41268e:	push   DWORD PTR [ebp+0x5a]
  412691:	(bad)  
  412692:	out    0xd4,eax
  412694:	fnsave [ebp+0x68]
  412697:	pushf  
  412698:	bound  ecx,QWORD PTR [edx]
  41269a:	add    BYTE PTR [ebp-0x11a49],cl
  4126a0:	popf   
  4126a1:	aad    0xe7
  4126a3:	jnp    0x41271f
  4126a5:	jbe    0x4126a6
  4126a7:	(bad)  
  4126a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126a9:	in     eax,0xfe
  4126ab:	dec    DWORD PTR [ebp+0x32000011]
  4126b1:	add    DWORD PTR [ebp-0x89a2a0],0xa9548a50
	...
  4126e3:	add    dl,dh
  4126e5:	mov    ds:0x80402bc8,al
  4126ea:	mov    ebp,0xff765d74
  4126ef:	jmp    0x4126e2
  4126f1:	mov    DWORD PTR [edi],edi
  4126f3:	add    BYTE PTR [edi+0x9],ah
  4126f6:	mov    edx,0x9f201
  4126fb:	or     esi,DWORD PTR [eax]
  4126fd:	stc    
  4126fe:	add    al,dh
  412700:	in     eax,0x9
  412702:	inc    edi
  412703:	inc    ecx
  412704:	xor    ebp,DWORD PTR [ebp-0x80]
  412707:	add    BYTE PTR [edx+0x4be57209],dh
  41270d:	stos   DWORD PTR es:[edi],eax
  41270e:	ret    
  41270f:	je     0x412766
  412711:	dec    eax
  412712:	js     0x412714
  412714:	dec    ebx
  412715:	mov    al,ds:0x4f2b8588
  41271a:	xchg   esi,eax
  41271b:	(bad)  
  41271c:	sti    
  41271d:	push   esi
  41271e:	adc    BYTE PTR [eax],cl
  412720:	mov    ds:0x84ffaf16,eax
  412725:	jp     0x41272e
  412727:	push   0x4b
  412729:	cli    
  41272a:	add    edi,edi
  41272c:	(bad)  
  41272d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41272e:	stos   DWORD PTR es:[edi],eax
  41272f:	test   eax,0xe8967e97
  412734:	xchg   esi,eax
  412735:	test   BYTE PTR [esi+0x100efbff],dl
  41273b:	or     BYTE PTR [ebx-0x4],ah
  41273e:	scas   eax,DWORD PTR es:[edi]
  41273f:	dec    DWORD PTR [edi+eax*1+0x4]
  412743:	add    al,0x4b
  412745:	mov    ds:0xe9ab,al
	...
  41276e:	add    BYTE PTR [eax],al
  412770:	adc    al,0x2c
  412772:	xchg   esi,eax
  412773:	mov    esi,ecx
  412775:	push   esi
  412776:	xchg   esi,eax
  412777:	jmp    FWORD PTR [ebx+ecx*8]
  41277a:	xchg   esi,eax
  41277b:	add    ecx,DWORD PTR [ebx-0x5e]
  41277e:	xchg   esi,eax
  41277f:	mov    ch,0x7f
  412781:	retf   
  412782:	xchg   ebp,eax
  412783:	jmp    DWORD PTR [ebx+0xcfff3a0]
  412789:	retf   
  41278a:	add    eax,DWORD PTR [ebx+ecx*2]
  41278d:	mov    ds:0xa2b252ab,al
  412792:	add    edx,DWORD PTR [eax-0xc]
  412795:	sub    eax,0xfbecff37
  41279a:	xchg   ebp,eax
  41279b:	jne    0x4127f0
  41279d:	cli    
  41279e:	and    ah,dl
  4127a0:	fmul   QWORD PTR [ebx-0x5db700d6]
  4127a6:	add    edi,edi
  4127a8:	xchg   esi,eax
  4127a9:	jle    0x412741
  4127ab:	inc    esp
  4127ad:	or     DWORD PTR [ecx+0x3],edx
  4127b0:	pop    ebx
  4127b1:	or     ecx,ebp
  4127b3:	sub    ecx,DWORD PTR [ebx+0x5]
  4127b6:	jmp    0x8023cabe
  4127bb:	add    al,0x4b
  4127bd:	cmp    esi,eax
  4127bf:	dec    edi
  4127c0:	dec    DWORD PTR [ebx+0x169495be]
  4127c6:	loope  0x412773
  4127c8:	push   edx
  4127c9:	mov    ch,0xae
  4127cb:	xchg   ebp,eax
  4127cc:	jae    0x412794
  4127ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127cf:	xchg   ebp,eax
  4127d0:	jl     0x41280b
  4127d2:	sahf   
  4127d3:	sldt   WORD PTR [eax]
	...
  4127fa:	add    BYTE PTR [eax],al
  4127fc:	inc    ebx
  4127fd:	mov    eax,ds:0x8c6cb19c
  412802:	xor    DWORD PTR [ebx],0x87868c65
  412808:	(bad)  
  412809:	xor    DWORD PTR [esi-0x6b],edi
  41280c:	push   esp
  41280d:	cmp    DWORD PTR [ecx],eax
  41280f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412810:	sbb    eax,0xdeabe94a
  412815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412816:	xchg   bp,ax
  412818:	rol    BYTE PTR [ebp-0x73cb6b4b],cl
  41281e:	push   0x57
  412820:	xchg   edi,eax
  412821:	mov    WORD PTR [esi-0x6b],cs
  412824:	dec    ebx
  412825:	adc    eax,0x30de80ac
  41282a:	ds xchg ebp,eax
  41282c:	adc    al,0xf5
  41282e:	mov    edx,0x9185c9d7
  412833:	xchg   esp,eax
  412834:	add    al,0x8c
  412836:	in     eax,dx
  412837:	xchg   esp,eax
  412838:	mov    dh,0x30
  41283a:	push   ds
  41283b:	xchg   ebp,eax
  41283c:	hlt    
  41283d:	mov    ebx,DWORD PTR [ebx+ecx*1-0x6ac5a91d]
  412844:	in     al,0x87
  412846:	push   esp
  412847:	cmp    al,0xdc
  412849:	mov    edi,esi
  41284b:	jmp    DWORD PTR [edx-0x74]
  41284e:	add    dh,dh
  412850:	cmp    eax,0xfa48e801
  412855:	mov    edi,edi
  412857:	out    0xd,al
  412859:	xor    edi,edi
  41285b:	(bad)  
  41285d:	mov    esi,DWORD PTR [ebp+0x3d]
	...
  412887:	add    dh,dl
  412889:	mov    edi,edi
  41288b:	into   
  41288c:	push   ebp
  41288d:	add    eax,ebp
  41288f:	mov    ebx,ebx
  412891:	mov    edi,edi
  412893:	ror    BYTE PTR [edi+ebx*1+0x0],cl
  412897:	inc    ebx
  412898:	inc    edi
  412899:	mov    WORD PTR [ebp-0x1f],?
  41289c:	mov    al,0x55
  41289e:	shl    DWORD PTR [esi+0x35b58bd7],cl
  4128a4:	fimul  WORD PTR [ebx-0x4d5c7e01]
  4128aa:	dec    DWORD PTR [esi-0x79a3aa41]
  4128b0:	mov    bh,0x8b
  4128b2:	call   0xffcccf40
  4128b7:	ret    0x2093
  4128ba:	cmp    DWORD PTR [esi-0x2e17f677],edi
  4128c0:	mov    al,0x9
  4128c2:	add    BYTE PTR [eax-0x4b],dh
  4128c5:	(bad)  
  4128c7:	push   esi
  4128c8:	xlat   BYTE PTR ds:[ebx]
  4128c9:	xchg   BYTE PTR [ebp-0x754003],bh
  4128cf:	jmp    0x4a91420
  4128d4:	cs dec edx
  4128d6:	add    BYTE PTR [esi],dh
  4128d8:	jge    0x4128b7
  4128da:	(bad)  
  4128db:	fbld   TBYTE PTR cs:[ecx+0x948510d]
  4128e2:	or     ebp,DWORD PTR [ecx]
  4128e4:	inc    esp
  4128e5:	dec    DWORD PTR [esp+edi*2+0xeff8c18]
	...
  412914:	sbb    cl,BYTE PTR [edx+0x1b100d0]
  41291a:	(bad)  [ebp-0x1a]
  41291d:	add    DWORD PTR [ebp-0x892ad0],0x50
  412924:	dec    edx
  412925:	mov    bl,0xa7
  412927:	add    BYTE PTR [edx+0x2f8d23ec],dh
  41292d:	mov    ch,0xfe
  41292f:	call   DWORD PTR [ebp-0x558a012b]
  412935:	outs   dx,BYTE PTR ds:[esi]
  412936:	inc    ebp
  412937:	rol    DWORD PTR [ebp-0x298a008a],cl
  41293d:	jbe    0x4129b4
  41293f:	or     BYTE PTR [edx-0x4a002c84],cl
  412945:	(bad)  
  412946:	pop    edx
  412947:	leave  
  412948:	mov    al,0x1
  41294a:	add    BYTE PTR [ebp-0x7],dl
  41294d:	push   0x6ecac481
  412952:	(bad)  
  412953:	inc    DWORD PTR [edi]
  412955:	inc    eax
  412956:	cld    
  412957:	push   eax
  412958:	(bad)
  41295b:	call   FWORD PTR [edi+0x624128af]
  412961:	outs   dx,BYTE PTR ds:[esi]
  412962:	mov    edx,0xb0632a8
  412967:	shl    BYTE PTR ds:0x2200e781,0x6
  41296e:	mov    DWORD PTR [ebp-0x66],0x32000005
  412975:	mov    edi,0xf445
	...
  41299e:	add    BYTE PTR [eax],al
  4129a0:	test   esi,edi
  4129a2:	(bad)  
  4129a3:	(bad)  
  4129a4:	clc    
  4129a5:	add    eax,0x80a7006a
  4129aa:	in     al,dx
  4129ab:	div    DWORD PTR ds:0xf26a5076
  4129b1:	mov    BYTE PTR [ebp-0xc],al
  4129b4:	mov    dl,0x88
  4129b6:	test   esp,esi
  4129b8:	dec    ebx
  4129b9:	jmp    0x41294d
  4129bb:	(bad)  
  4129bc:	jnp    0x4129b9
  4129be:	sbb    al,bh
  4129c0:	fmul   QWORD PTR [edi+ecx*4]
  4129c3:	call   0x45617a
  4129c8:	inc    eax
  4129c9:	loopne 0x4129e2
  4129cb:	add    eax,0x444b2
  4129d0:	dec    ebx
  4129d1:	pop    ds
  4129d2:	push   eax
  4129d3:	in     al,dx
  4129d4:	mov    esp,0x370192aa
  4129d9:	mov    ds:0xb2b7bd86,al
  4129de:	xchg   edx,eax
  4129df:	inc    DWORD PTR [esp+ecx*8+0x8]
  4129e3:	dec    DWORD PTR [esi]
  4129e5:	enter  0xb69e,0x23
  4129e9:	push   esp
  4129ea:	loop   0x412a2c
  4129ec:	dec    ebx
  4129ed:	sub    eax,0x6274f488
  4129f2:	xchg   edx,eax
  4129f3:	push   eax
  4129f4:	arpl   WORD PTR [ebx],bx
  4129f6:	pop    ebx
  4129f7:	add    BYTE PTR [ebx-0x59],cl
  4129fa:	ret    
  4129fb:	je     0x4129d7
  4129fd:	sub    al,0x88
  4129ff:	call   0x50d3ac58
	...
  412a2c:	(bad)  
  412a2d:	and    al,0x97
  412a2f:	test   DWORD PTR [edx+edx*1+0x33],0x9266beff
  412a37:	xor    eax,0x451974
  412a3c:	and    ebx,ebx
  412a3e:	stos   BYTE PTR es:[edi],al
  412a3f:	jmp    FWORD PTR [esp+ebp*2]
  412a42:	ret    
  412a43:	je     0x412abf
  412a45:	jmp    0xd0561ad1
  412a4a:	xchg   ecx,eax
  412a4b:	push   0xbea2724a
  412a50:	or     al,0xc6
  412a52:	sti    
  412a53:	out    0x89,eax
  412a55:	and    al,0x92
  412a57:	dec    eax
  412a59:	or     DWORD PTR [edi+ebx*4-0x4],esp
  412a5d:	mov    BYTE PTR [esi],bl
  412a5f:	add    al,0x76
  412a61:	adc    eax,0xfee40383
  412a66:	loopne 0x412a03
  412a68:	sub    al,0x5b
  412a6a:	push   es
  412a6b:	xchg   edx,eax
  412a6c:	loopne 0x412a81
  412a6e:	xchg   ebx,eax
  412a6f:	add    al,0xcc
  412a71:	(bad)  
  412a72:	loopne 0x412a0f
  412a74:	push   0xbc91ee5b
  412a79:	mov    esi,0x88b499d1
  412a7e:	ficom  WORD PTR [edi-0x45]
  412a81:	adc    dh,0x91
  412a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a85:	(bad)  
  412a86:	loopne 0x412a23
  412a88:	push   es
  412a89:	pop    ebx
  412a8a:	(bad)  
  412a8b:	xchg   ecx,eax
  412a8c:	xchg   esp,eax
  412a8d:	mov    esi,0x99b9
	...
  412ab6:	add    BYTE PTR [eax],al
  412ab8:	mov    WORD PTR [eax-0x7761f23f],cs
  412abe:	scas   al,BYTE PTR es:[edi]
  412abf:	xchg   ecx,eax
  412ac0:	push   es
  412ac1:	adc    DWORD PTR [eax-0x61778a24],0x8184f691
  412acb:	(bad)  
  412acc:	lods   al,BYTE PTR ds:[esi]
  412acd:	or     ecx,ebp
  412acf:	mov    edx,0x36e91189
  412ad4:	shl    BYTE PTR [ebp+0x68],0xc8
  412ad8:	xor    BYTE PTR [bp-0x6f],0xd6
  412add:	int    0x6c
  412adf:	xor    al,0x3c
  412ae1:	(bad)  
  412ae2:	hlt    
  412ae3:	nop
  412ae4:	jle    0x412b26
  412ae6:	adc    BYTE PTR [ebx+0x4b],al
  412ae9:	jno    0x412a70
  412aeb:	imul   ecx,DWORD PTR [ebx+0x9],0x8e4cc3e2
  412af2:	call   0x1347:0x26094b02
  412af9:	or     DWORD PTR [eax],eax
  412afb:	jmp    0xa5083448
  412b00:	aam    0x87
  412b02:	pop    es
  412b03:	jmp    0x93411e50
  412b08:	dec    eax
  412b09:	repz inc DWORD PTR [edx+0x15459648]
  412b10:	pop    ss
  412b11:	xchg   esi,eax
  412b12:	test   ebp,edi
  412b14:	mov    bl,0x87
  412b16:	call   FWORD PTR [ecx-0x9080245]
	...
  412b44:	pop    ebp
  412b45:	test   eax,ebp
  412b47:	outs   dx,DWORD PTR ds:[esi]
  412b48:	xor    ecx,DWORD PTR [ecx]
  412b4a:	add    dl,dh
  412b4c:	mov    ah,bh
  412b4e:	add    al,0xd0
  412b50:	mov    dl,0x8
  412b52:	add    cl,ch
  412b54:	inc    eax
  412b55:	mov    cl,0x28
  412b57:	sub    BYTE PTR [edi-0x78],al
  412b5a:	jne    0x412b51
  412b5c:	mov    al,0xa9
  412b5e:	fdivr  DWORD PTR [esi-0x66752745]
  412b64:	add    eax,0xdbb6f48e
  412b69:	xchg   DWORD PTR [eax+0x3b],edx
  412b6c:	xlat   BYTE PTR ds:[ebx]
  412b6d:	cdq    
  412b6e:	fcomp  DWORD PTR [esi-0x667a6e25]
  412b74:	ret    
  412b75:	xchg   edi,edi
  412b77:	xor    DWORD PTR [ebx+0x3686ff5c],0x6b846809
  412b81:	enter  0x75ff,0x9d
  412b85:	jns    0x412b7e
  412b87:	outs   dx,BYTE PTR ds:[esi]
  412b88:	fild   DWORD PTR [esi-0x35efe1cb]
  412b8e:	call   DWORD PTR [eax-0x1d]
  412b91:	pop    esi
  412b92:	call   DWORD PTR [esi-0x5f]
  412b95:	mov    esp,fs
  412b97:	push   esi
  412b98:	mov    ebx,0x22006a86
  412b9d:	and    ebp,esi
  412b9f:	das    
  412ba0:	jecxz  0x412bac
  412ba2:	push   DWORD PTR [ebp-0x5ebe]
	...
  412bd0:	sub    eax,0xa329365f
  412bd5:	or     ch,al
  412bd7:	leave  
  412bd8:	xor    eax,0x7789ff99
  412bdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bde:	idiv   edi
  412be0:	dec    ebp
  412be1:	and    al,0x0
  412be3:	push   0x4066d5
  412be8:	int    0xdc
  412bea:	out    dx,eax
  412beb:	idiv   DWORD PTR [ebp-0xaca006a]
  412bf1:	arpl   WORD PTR [eax+0x0],ax
  412bf4:	call   0x8504:0x8dffd6e2
  412bfb:	call   0x8440c285
  412c00:	iret   
  412c01:	mov    cl,0xf7
  412c03:	dec    DWORD PTR [ebp+0x2149740d]
  412c09:	fsubr  st,st(3)
  412c0b:	idiv   DWORD PTR [ebp+0x32740096]
  412c11:	mov    bh,BYTE PTR [ebp-0x692a18]
  412c17:	add    BYTE PTR [esi+0x5e],dl
  412c1a:	add    BYTE PTR [bp+si-0x59],dh
  412c1e:	mov    esi,0xe78537ff
  412c23:	out    dx,al
  412c24:	mov    dl,0x96
  412c26:	(bad)  
  412c27:	call   DWORD PTR [edi]
  412c29:	test   eax,0x96bdfff7
  412c2e:	jne    0x412c38
  412c30:	retf   0xd0ca
  412c33:	inc    DWORD PTR [eax]
	...
  412c59:	add    BYTE PTR [eax],al
  412c5b:	add    BYTE PTR [ebp-0x6a174a6a],ch
  412c61:	xchg   esi,eax
  412c62:	(bad)  
  412c63:	dec    DWORD PTR [ebx+0x65]
  412c66:	sti    
  412c67:	out    0x57,eax
  412c69:	inc    ecx
  412c6a:	(bad)  
  412c6b:	call   DWORD PTR [eax*1+0x470cf7a8]
  412c72:	(bad)  
  412c73:	jne    0x412cc8
  412c75:	enter  0xd0e5,0xfc
  412c79:	ss (bad) 
  412c7b:	mov    ch,0xef
  412c7d:	es (bad) 
  412c7f:	jmp    ebx
  412c81:	pop    edi
  412c82:	mov    bh,0xff
  412c84:	in     al,0x1e
  412c86:	pop    ecx
  412c87:	in     al,dx
  412c88:	aam    0x16
  412c8a:	(bad)
  412c8e:	(bad)  
  412c8f:	dec    esp
  412c91:	cmp    al,0x9c
  412c93:	test   esp,0x971a9b7e
  412c99:	jbe    0x412c29
  412c9b:	(bad)  
  412c9c:	(bad)  
  412c9d:	pop    edi
  412c9e:	xchg   esi,eax
  412c9f:	jmp    FWORD PTR [esi+eiz*2-0x6b4cf7e8]
  412ca6:	(bad)  
  412ca7:	call   FWORD PTR [esi+edx*2+0x4e9cf058]
  412cae:	mov    gs,eax
  412cb0:	dec    edx
  412cb1:	pushf  
  412cb2:	mov    ?,edi
  412cb4:	test   BYTE PTR [esp+ecx*4],dh
  412cb7:	jmp    0xffcfe27b
  412cbc:	je     0x412ce2
  412cbe:	nop
  412cbf:	call   0x412cc4
	...
  412ce8:	add    dh,cl
  412cea:	add    al,BYTE PTR [eax]
  412cec:	xchg   edx,eax
  412ced:	mov    cl,0xfb
  412cef:	push   edi
  412cf1:	jmp    0x19:0x8b8f839e
  412cf8:	loope  0x412d6a
  412cfa:	mov    ?,WORD PTR [ebp+0x53]
  412cfd:	mov    dh,dl
  412cff:	sar    BYTE PTR [esp+esi*8],1
  412d02:	jnp    0x412d49
  412d04:	aaa    
  412d05:	or     dl,cl
  412d07:	cmp    BYTE PTR [edx+ecx*8-0x18],bl
  412d0b:	mov    ds,WORD PTR [esi+0x1d274111]
  412d11:	test   DWORD PTR [esi+0x1b],ecx
  412d14:	lahf   
  412d15:	xor    al,0xa8
  412d17:	add    ecx,DWORD PTR [edi+edi*8]
  412d1a:	lock fwait
  412d1c:	pushf  
  412d1d:	xor    DWORD PTR [esi],0xffffff8e
  412d20:	jae    0x412cbf
  412d22:	inc    BYTE PTR [ebx+ecx*2-0x7c]
  412d26:	pushf  
  412d27:	sti    
  412d28:	in     al,0x45
  412d2a:	sbb    al,0x8e
  412d2c:	in     al,0xf1
  412d2e:	push   esp
  412d2f:	fimul  WORD PTR [ebx+0x43180e09]
  412d35:	jno    0x412d0d
  412d37:	nop
  412d38:	int3   
  412d39:	test   dh,bh
  412d3b:	pop    ss
  412d3c:	mov    DWORD PTR [esp+edi*2+0x181ca4fb],0xab52b48e
  412d47:	or     BYTE PTR [ebx-0x22],cl
  412d4a:	jno    0x412cec
	...
  412d74:	xor    ecx,DWORD PTR [ecx]
  412d76:	jmp    0x54c60b17
  412d7b:	add    BYTE PTR [esi+edi*8+0x7e1f9bf0],dl
  412d82:	mov    esi,0xe147928d
  412d87:	add    edx,DWORD PTR [esi]
  412d89:	nop
  412d8a:	mov    ebp,0xe914f681
  412d8f:	cld    
  412d90:	enter  0xe827,0x3
  412d94:	dec    ebx
  412d95:	test   BYTE PTR [eax+eax*1],bl
  412d98:	jae    0x412d79
  412d9a:	scas   al,BYTE PTR es:[edi]
  412d9b:	lea    edx,[eax+edx*1-0x57]
  412d9f:	pop    ss
  412da0:	cmp    esi,ecx
  412da2:	push   eax
  412da3:	fmul   QWORD PTR [ebx+0x54760009]
  412da9:	adc    eax,0x83fe22e8
  412dae:	push   DWORD PTR [eax-0x7c]
  412db1:	adc    eax,0x2a40e96a
  412db6:	xor    BYTE PTR [eax+0x192bf148],ch
  412dbc:	mov    BYTE PTR [ecx],cl
  412dbe:	(bad)  
  412dbf:	cld    
  412dc0:	div    DWORD PTR [eax]
  412dc2:	inc    ecx
  412dc3:	jmp    0x371708a8
  412dc8:	into   
  412dc9:	xadd   BYTE PTR [ebp+0x264fd3e6],dh
  412dd0:	push   esp
  412dd1:	adc    eax,0x839d2ee8
  412dd6:	(bad)  
  412dd7:	mov    ecx,0x0
	...
  412e00:	sbb    BYTE PTR [ebp+esi*2-0x664f1f],al
  412e07:	push   es
  412e08:	mov    esi,0xd61a2170
  412e0d:	sub    eax,0xffffffd5
  412e10:	sti    
  412e11:	cmp    edi,0xffffff83
  412e14:	dec    eax
  412e15:	icebp  
  412e16:	and    BYTE PTR [ecx],bl
  412e18:	or     BYTE PTR [ecx],cl
  412e1a:	push   0xffc87f0d
  412e1f:	inc    eax
  412e20:	dec    ecx
  412e21:	or     DWORD PTR [eax],eax
  412e23:	imul   esi,DWORD PTR [eax-0x403929de],0x7535c00f
  412e2d:	ror    DWORD PTR [edi-0x4a],cl
  412e30:	push   ebp
  412e31:	adc    eax,0x83be56e8
  412e36:	(bad)  
  412e37:	cmp    DWORD PTR [edi],esi
  412e39:	test   BYTE PTR [ebp-0xf],dh
  412e3c:	shl    cl,0xfe
  412e3f:	xchg   esi,eax
  412e40:	iret   
  412e41:	jo     0x412e2c
  412e43:	mov    ebx,0xe883c7
  412e48:	mov    esi,0x58ffffb9
  412e4d:	or     eax,0xc8022168
  412e52:	jmp    DWORD PTR [edi+0x55]
  412e55:	pop    ebp
  412e56:	inc    eax
  412e57:	add    BYTE PTR [ebp-0xcd6c9a5],ah
  412e5d:	push   es
  412e5e:	call   0xffd68e48
  412e63:	or     eax,DWORD PTR [eax]
	...
  412e89:	add    BYTE PTR [eax],al
  412e8b:	add    BYTE PTR [edx+0x1a],ah
  412e8e:	push   ds
  412e8f:	push   eax
  412e90:	mov    dl,0x95
  412e92:	jne    0x412ea0
  412e94:	call   0x5036:0x35ffd634
  412e9b:	(bad)  
  412e9c:	mov    edi,0x2520e77e
  412ea1:	xchg   ebp,eax
  412ea2:	(bad)  
  412ea3:	call   0x40e72a
  412ea8:	dec    edx
  412ea9:	loope  0x412e7c
  412eab:	inc    DWORD PTR [ebp+0x20]
  412eae:	add    BYTE PTR [eax+0x3],ch
  412eb1:	push   edi
  412eb2:	inc    eax
  412eb3:	add    dl,bl
  412eb5:	inc    ebp
  412eb6:	xor    BYTE PTR [ecx-0x4e],al
  412eb9:	push   ds
  412eba:	add    al,BYTE PTR [eax]
  412ebc:	mov    ds:0xefade886,al
  412ec1:	mov    ?,edi
  412ec3:	or     esi,edx
  412ec5:	sbb    DWORD PTR [esi],ebx
  412ec7:	push   eax
  412ec8:	bound  ecx,QWORD PTR [esi+0x678a0c75]
  412ece:	aad    0xff
  412ed0:	test   DWORD PTR ds:0x853fff50,edi
  412ed6:	out    0xe8,eax
  412ed8:	mov    ah,0x8e
  412eda:	(bad)  
  412edb:	call   0x40ea1a
  412ee0:	ficomp DWORD PTR [edx]
  412ee2:	sar    bh,cl
  412ee4:	lds    esp,FWORD PTR ds:0x314b3001
  412eea:	add    al,0xff
  412eec:	fisub  WORD PTR [ebx-0x65]
  412eef:	add    eax,0x0
	...
  412f18:	jne    0x412ea5
  412f1a:	mov    edx,DWORD PTR [eax-0x65]
  412f1d:	add    edx,DWORD PTR [ecx]
  412f1f:	or     BYTE PTR [ebx],dh
  412f21:	mov    bl,0x8a
  412f23:	push   DWORD PTR [eax+ecx*4]
  412f26:	xor    edx,edx
  412f28:	sub    al,0xeb
  412f2a:	mov    dh,BYTE PTR [ebp+0x57]
  412f2d:	fdivr  DWORD PTR [edx]
  412f2f:	rcr    BYTE PTR [ebx+ebx*8],cl
  412f32:	mov    esp,0x307043c2
  412f37:	mov    ebx,DWORD PTR [edi]
  412f39:	out    dx,eax
  412f3a:	mov    edi,0x1d7071f4
  412f3f:	add    bh,ah
  412f41:	(bad)  
  412f42:	sti    
  412f43:	out    0x7a,eax
  412f45:	and    ecx,DWORD PTR [ebx-0x784b3d01]
  412f4b:	push   0x3714e
  412f50:	repz scas al,BYTE PTR es:[edi]
  412f52:	mov    ch,0xff
  412f54:	aam    0xe8
  412f56:	inc    eax
  412f57:	clc    
  412f58:	arpl   WORD PTR [esp+eax*1+0x0],si
  412f5c:	dec    ebx
  412f5d:	adc    DWORD PTR [eax],0xfffffff8
  412f60:	mov    bl,0x27
  412f62:	add    BYTE PTR [bp+di+0x67],cl
  412f66:	ret    
  412f67:	je     0x412fc0
  412f69:	sub    eax,0x704b0100
  412f6e:	adc    cl,BYTE PTR ds:0xff8be49c
  412f74:	push   ds
  412f75:	push   0x4a8d889b
  412f7a:	mov    ch,bl
	...
  412fa4:	push   ebx
  412fa5:	ret    
  412fa6:	adc    al,bh
  412fa8:	jae    0x412f65
  412faa:	mov    ah,0xff
  412fac:	je     0x412f73
  412fae:	(bad)  
  412fb0:	pop    es
  412fb1:	or     DWORD PTR [edi-0x62279b76],edi
  412fb7:	adc    BYTE PTR [ebx+0x71],dl
  412fba:	pop    es
  412fbb:	mov    dl,BYTE PTR [ecx+eax*4+0x3]
  412fbf:	out    dx,al
  412fc0:	fs cmp al,0x9f
  412fc3:	mov    al,BYTE PTR [ebp+edx*1-0x57]
  412fc7:	xorps  xmm6,xmm1
  412fca:	jecxz  0x412f9f
  412fcc:	mov    ecx,DWORD PTR [ecx]
  412fce:	sbb    DWORD PTR [edx+eax*1+0x7b8a6657],ebx
  412fd5:	adc    ah,0xfb
  412fd8:	and    al,0xd1
  412fda:	push   esi
  412fdb:	mov    dl,BYTE PTR [esp+esi*8]
  412fde:	or     DWORD PTR [esi+esi*1+0x508a4657],ebx
  412fe5:	dec    ecx
  412fe6:	mov    ch,0xef
  412fe8:	fs push cs
  412fea:	stc    
  412feb:	inc    esp
  412fec:	dec    ebx
  412fed:	fld    DWORD PTR [eax+0x5d]
  412ff0:	push   ss
  412ff1:	and    DWORD PTR [esi],0xf0f6e433
  412ff7:	fwait
  412ff8:	sbb    edi,DWORD PTR [edi+0x16]
  412ffb:	mov    ah,BYTE PTR [ecx+0x1d]
  412ffe:	add    DWORD PTR [ecx-0x1f97f0a],edx
  413004:	add    al,0xf6
  413006:	aam    0x1b
	...
  413030:	dec    esi
  413031:	cmp    DWORD PTR [eax+0x62711b03],ebp
  413037:	mov    al,0xac
  413039:	cmp    BYTE PTR [ecx],0x89
  41303c:	push   ds
  41303d:	adc    ecx,edx
  41303f:	repz sahf 
  413041:	adc    dh,0x1e
  413044:	dec    ebx
  413045:	icebp  
  413046:	not    bl
  413048:	or     ecx,DWORD PTR [ecx]
  41304a:	push   ecx
  41304b:	fdiv   DWORD PTR [edx+ecx*8]
  41304e:	call   0x7966db
  413053:	add    BYTE PTR [eax],cl
  413055:	or     eax,ebp
  413057:	pop    ecx
  413058:	mov    ebx,0xd239ff80
  41305d:	test   BYTE PTR [edi],0x91
  413060:	mov    eax,0x3596ff7e
  413065:	or     DWORD PTR [eax-0x38],ebp
  413068:	js     0x413033
  41306a:	call   DWORD PTR [eax]
  41306c:	and    esi,DWORD PTR [eax]
  41306e:	inc    ecx
  41306f:	jmp    0xc0786647
  413074:	mov    DWORD PTR [ecx],ecx
  413076:	call   0xffc10d74
  41307b:	repnz or ch,dh
  41307e:	adc    eax,0xff755c70
  413083:	fadd   st(4),st
  413085:	jg     0x4130fc
  413087:	loope  0x413039
  413089:	mov    ecx,0x7fd246fd
  41308e:	jne    0x4130c5
  413090:	fistp  QWORD PTR [esi]
  413092:	shl    DWORD PTR [esi],1
	...
  4130bc:	ret    0xfff2
  4130bf:	sar    dl,0x2f
  4130c2:	inc    ecx
  4130c3:	jmp    0xa8710108
  4130c8:	dec    eax
  4130c9:	xor    BYTE PTR ds:0xffc8f1de,0x0
  4130d0:	add    bl,BYTE PTR [edi+edi*8+0x6]
  4130d4:	jg     0x413056
  4130d6:	jne    0x4130c9
  4130d8:	loopne 0x413082
  4130da:	std    
  4130db:	test   bl,0xf2
  4130de:	inc    DWORD PTR [eax-0x16bed057]
  4130e4:	inc    eax
  4130e5:	shr    BYTE PTR [edi],1
  4130e7:	sub    BYTE PTR [edi-0x80],al
  4130ea:	xor    eax,0xffc8701e
  4130ef:	shl    BYTE PTR [ebx-0x72ff00a5],0x7c
  4130f6:	mov    edi,0x45029474
  4130fb:	hlt    
  4130fc:	mov    ebp,0x37fff40e
  413101:	jge    0x4130ea
  413103:	pusha  
  413104:	scas   eax,DWORD PTR es:[edi]
  413105:	nop
  413106:	(bad)  
  413107:	push   DWORD PTR [edi]
  413109:	cdq    
  41310a:	call   0xffd1c3fc
  41310f:	push   0x62
  413111:	and    edx,DWORD PTR [esi]
  413113:	xor    BYTE PTR [ebx+0x5],dh
  413116:	push   0xffcc022c
  41311b:	and    BYTE PTR [bp+di],cl
  41311e:	add    BYTE PTR [eax+0x0],al
	...
  413148:	retf   0xd3a1
  41314b:	jmp    FWORD PTR [ebp+0x1a75ff3a]
  413151:	mov    ds:0x917dfd50,eax
  413156:	push   0x0
  413158:	or     ch,BYTE PTR [edi+ebp*1+0x41]
  41315c:	repnz and ch,BYTE PTR [eax+esi*1]
  413160:	mov    bl,0xa
  413162:	push   0x800ae202
  413167:	call   0x40e6be
  41316c:	(bad)  [edx+0x74]
  41316f:	push   ss
  413170:	pop    ebx
  413171:	aas    
  413172:	hlt    
  413173:	push   DWORD PTR [edi-0x158a0072]
  413179:	mov    ds:0x914dfd11,al
  41317e:	push   DWORD PTR [ebp-0x4a]
  413181:	mov    ds:0x86bdd09e,eax
  413186:	push   0x0
  413188:	retf   0x2f78
  41318b:	inc    ecx
  41318c:	mov    dl,0x22
  41318e:	dec    edi
  41318f:	xor    BYTE PTR [ebx+0x5],dh
  413192:	push   0x3704b02
  413197:	and    BYTE PTR [ebx-0x7b004c70],0x20
  41319e:	xchg   DWORD PTR [ebp+0x53],esi
  4131a1:	pop    eax
  4131a2:	add    eax,0x1ab774fd
  4131a7:	add    bl,ah
  4131a9:	adc    ah,dl
  4131ab:	inc    eax
	...
  4131d4:	dec    ebx
  4131d5:	sbb    BYTE PTR [edi],dh
  4131d7:	xor    BYTE PTR [edx],cl
  4131d9:	jo     0x4131f6
  4131db:	add    cl,BYTE PTR [ebx+0x70]
  4131de:	sub    eax,0xffffffca
  4131e1:	ret    
  4131e2:	xchg   edi,edi
  4131e4:	push   eax
  4131e5:	mov    al,0x10
  4131e7:	push   ss
  4131e8:	shl    BYTE PTR [eax+edx*4],cl
  4131eb:	(bad)  
  4131ec:	mov    esi,0x437586fc
  4131f1:	mov    dl,al
  4131f3:	cld    
  4131f4:	and    al,0xe7
  4131f6:	xchg   BYTE PTR [ebp+0x17],dh
  4131f9:	fdiv   DWORD PTR [esi]
  4131fb:	rcl    BYTE PTR [edi+edx*8],1
  4131fe:	xchg   BYTE PTR [ebp+0xf],dh
  413201:	iret   
  413202:	adc    BYTE PTR [eax],cl
  413204:	repz xor DWORD PTR [ecx-0x3dc70301],edi
  41320b:	add    al,0x4b
  41320d:	popf   
  41320e:	jp     0x4131fc
  413210:	arpl   WORD PTR [eax+0x3],si
  413213:	out    dx,eax
  413214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413215:	adc    DWORD PTR es:[esp+ebx*8],ecx
  413219:	xchg   esp,eax
  41321a:	sti    
  41321b:	out    0x3c,eax
  41321d:	and    al,BYTE PTR [edi-0x3cdfd01]
  413223:	call   FWORD PTR [edi]
  413225:	sti    
  413226:	xchg   edi,eax
  413227:	add    DWORD PTR [edi-0x4b0079cd],0xadb8812e
  413231:	outs   dx,BYTE PTR ds:[esi]
  413232:	xchg   BYTE PTR [eax],al
  413234:	dec    ebx
  413235:	or     ecx,ebp
  413237:	add    eax,DWORD PTR [eax]
	...
  41325d:	add    BYTE PTR [eax],al
  41325f:	add    al,dl
  413261:	ret    
  413262:	in     al,dx
  413263:	cli    
  413264:	aam    0xf4
  413266:	jmp    0x4131eb
  413268:	push   ebx
  413269:	or     DWORD PTR [ecx+eax*1+0x72],edx
  41326d:	(bad)  
  41326f:	add    ecx,DWORD PTR [ebx+0x7e]
  413272:	xor    al,0xf8
  413274:	ins    BYTE PTR es:[edi],dx
  413275:	outs   dx,BYTE PTR ds:[esi]
  413276:	xchg   ebx,eax
  413277:	xchg   BYTE PTR [ecx+edx*1-0x57],ch
  41327b:	adc    BYTE PTR [ecx+esi*8+0x7f],dl
  41327f:	xlat   BYTE PTR ds:[ebx]
  413280:	or     ecx,DWORD PTR [ecx]
  413282:	sahf   
  413283:	adc    BYTE PTR [edi+0x71],al
  413286:	bound  esi,QWORD PTR [edx-0x77d82b4]
  41328c:	lods   al,BYTE PTR ds:[esi]
  41328d:	fwait
  41328e:	aad    0x44
  413290:	dec    ebx
  413291:	jl     0x413287
  413293:	imul   DWORD PTR [esi+edi*8]
  413296:	cdq    
  413297:	xchg   BYTE PTR [ebx+edx*4],ch
  41329a:	fs dec ebx
  41329c:	and    eax,0x5d1b667d
  4132a1:	or     ch,cl
  4132a3:	add    eax,esi
  4132a5:	xchg   BYTE PTR [ebx],ch
  4132a7:	test   DWORD PTR [edi*2+0x4cff9bb9],ecx
  4132ae:	inc    esi
  4132af:	xchg   dh,cl
  4132b1:	xchg   BYTE PTR [ebx],ch
  4132b3:	test   esp,esi
  4132b5:	jl     0x413250
  4132b7:	xchg   BYTE PTR [esi-0x1b79d03f],dh
  4132bd:	jno    0x413298
  4132bf:	fs dec ebx
  4132c1:	or     DWORD PTR [eax-0x80],esi
	...
  4132ec:	xchg   edi,eax
  4132ed:	jnp    0x413305
  4132ef:	xchg   BYTE PTR [ebx+0x4b8a650c],cl
  4132f5:	or     ecx,ebp
  4132f7:	js     0x4132cf
  4132f9:	inc    edi
  4132fa:	inc    DWORD PTR [ebp-0x14ff8b4c]
  413300:	mov    eax,0x54e9ff7c
  413305:	out    0x8c,al
  413307:	sub    eax,DWORD PTR [ebx+0x737567cc]
  41330d:	leave  
  41330e:	inc    eax
  413310:	xchg   esp,eax
  413311:	test   eax,0xbc83e900
  413316:	jne    0x413304
  413318:	loope  0x4132d4
  41331a:	add    cl,ch
  41331c:	dec    eax
  41331d:	mov    ss,WORD PTR [ebp-0x833a55]
  413323:	pop    esp
  413324:	or     DWORD PTR ds:0x2ced1150,ebp
  41332a:	inc    ecx
  41332b:	jmp    0xe9e1ace0
  413330:	dec    eax
  413331:	adc    al,al
  413333:	adc    al,0x44
  413335:	jno    0x4132cb
  413337:	jmp    0x51a93c84
  41333c:	pop    ss
  41333d:	leave  
  41333e:	push   DWORD PTR [ebp+0x3c]
  413341:	or     eax,0x7bd976e8
  413346:	push   DWORD PTR [esp+ebp*4+0x47]
  41334a:	(bad)  
  41334b:	pop    esi
  41334c:	into   
  41334d:	lea    edx,[edx+0x5]
	...
  413378:	pop    ecx
  413379:	(bad)  
  41337b:	adc    bh,BYTE PTR [edx-0x38660085]
  413381:	cmc    
  413382:	setns  bh
  413385:	cmc    
  413386:	pop    es
  413387:	inc    ecx
  413388:	stc    
  413389:	jp     0x41338a
  41338b:	cs (bad) 
  41338d:	xor    cl,bh
  41338f:	es (bad) 
  413391:	outs   dx,DWORD PTR ds:[esi]
  413392:	arpl   WORD PTR [ecx+ecx*4+0x2d],bp
  413396:	mov    DWORD PTR [ebx+edi*2+0x7b],ebp
  41339a:	dec    DWORD PTR [esi]
  41339c:	addr16 mov al,ds:0x30
  4133a0:	repz pop es
  4133a2:	push   DWORD PTR [ebp-0x7c82]
  4133a8:	dec    edx
  4133a9:	into   
  4133aa:	mov    al,ds:0xbf80b200
  4133af:	je     0x41341d
  4133b1:	sbb    eax,0x56328a8
  4133b6:	push   DWORD PTR [ebp-0x5a]
  4133b9:	lahf   
  4133ba:	test   eax,0xff8495d2
  4133bf:	mov    ch,0xfe
  4133c1:	test   edi,edi
  4133c3:	call   DWORD PTR [edx-0x63]
  4133c6:	icebp  
  4133c7:	shl    BYTE PTR [ebp-0xeafaf7c],cl
  4133cd:	add    dl,BYTE PTR [eax]
  4133cf:	add    BYTE PTR [esi],bh
  4133d1:	je     0x41343a
  4133d3:	jp     0x413447
  4133d5:	(bad)  
  4133d6:	dec    DWORD PTR [edi-0x36]
  4133d9:	cld    
  4133da:	mov    al,ds:0x0
	...
  413403:	add    BYTE PTR [edx],dh
  413405:	mov    ds:0x733b805,al
  41340a:	add    BYTE PTR [eax],al
  41340c:	push   0x2b74bf80
  413411:	cmp    edi,edi
  413413:	jne    0x41343f
  413415:	lahf   
  413416:	xchg   esi,eax
  413417:	(bad)  
  413418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413419:	test   eax,ebp
  41341b:	shl    DWORD PTR [ebp+eax*4-0x1],1
  41341f:	lea    ebx,[edi-0x6a0001b8]
  413425:	push   DWORD PTR ss:[ebp-0x7b3a]
  41342c:	call   0xbffb:0xe200a03d
  413433:	movq   mm6,QWORD PTR [esi-0x2]
  413437:	jmp    DWORD PTR ds:0x34bcb585
  41343d:	test   edi,edi
  41343f:	call   0xa48a8f
  413444:	dec    ebx
  413445:	or     ecx,DWORD PTR [esi-0x48]
  413448:	mov    ebp,0xeae88403
  41344d:	sub    al,BYTE PTR [edi+edi*8-0x8d17e]
  413454:	jmp    esi
  413456:	xchg   esi,eax
  413457:	add    DWORD PTR [edi-0x68bab49c],0x70
  41345e:	add    eax,DWORD PTR [eax]
  413460:	dec    ebx
  413461:	push   ebx
  413462:	stc    
  413463:	or     esi,DWORD PTR [ebx-0x4d]
  413466:	push   esi
  413467:	inc    DWORD PTR [eax]
	...
  41348d:	add    BYTE PTR [eax],al
  41348f:	add    BYTE PTR [edi+esi*2+0x43],bh
  413493:	je     0x4134e6
  413495:	stc    
  413496:	enter  0x6cfb,0x3d
  41349a:	adc    al,0xff
  41349c:	fisubr WORD PTR [ebx-0x5c86ea94]
  4134a2:	adc    DWORD PTR [eax+0x54],0x15
  4134a6:	sub    al,0xde
  4134a9:	mov    eax,ds:0x24d4ff83
  4134ae:	sub    BYTE PTR [edx+0x4a],0x83
  4134b2:	stc    
  4134b3:	sti    
  4134b4:	xor    al,0x75
  4134b6:	or     ebp,eax
  4134b8:	ja     0x4134ac
  4134ba:	cmp    bh,0x24
  4134bd:	jne    0x41353e
  4134bf:	call   0xffc4673a
  4134c4:	add    ch,BYTE PTR [esi]
  4134c6:	adc    BYTE PTR [eax],al
  4134c8:	jbe    0x4134b1
  4134ca:	outs   dx,DWORD PTR ds:[esi]
  4134cb:	or     DWORD PTR [edi],0xfcff81e0
  4134d1:	push   ebp
  4134d2:	add    ebp,DWORD PTR [edx+0x48]
  4134d5:	cmp    edi,ecx
  4134d7:	pop    es
  4134d8:	jecxz  0x413495
  4134da:	dec    esi
  4134db:	jmp    esp
  4134dd:	call   0x9b530aa
  4134e2:	in     eax,dx
  4134e3:	add    al,0x4b
  4134e5:	or     DWORD PTR [ecx+ecx*4-0x2c],ebp
  4134e9:	jp     0x413501
  4134eb:	sbb    DWORD PTR [ebx],0x71
  4134ee:	xor    eax,0xf2094ba3
  4134f3:	inc    ebx
	...
  41351c:	inc    esp
  41351d:	test   DWORD PTR [edx+0x4],ecx
  413520:	dec    ebx
  413521:	or     DWORD PTR [edi+eax*1+0x12e9094a],esi
  413528:	les    esp,FWORD PTR [eax-0xeb4fc17]
  41352e:	jp     0x413563
  413530:	or     cl,BYTE PTR [ecx]
  413532:	mov    BYTE PTR fs:[edx+edi*2-0x32],bh
  413537:	sbb    BYTE PTR [ebx],0x71
  41353a:	mov    dl,BYTE PTR [esp+esi*2+0x79]
  41353e:	jo     0x4134c8
  413540:	jnp    0x4135bc
  413542:	mov    dh,0x82
  413544:	fs mov bl,0xb9
  413547:	sbb    DWORD PTR [ecx+edi*2+0x11],0xe9094a08
  41354f:	nop
  413550:	(bad)  
  413551:	jno    0x4134ea
  413553:	add    BYTE PTR [edx+ebx*8+0x0],0xae
  413558:	jae    0x413524
  41355a:	call   0x287b234a
  41355f:	add    al,0xa3
  413561:	test   eax,0x7124c4b9
  413566:	arpl   WORD PTR [edx+0x43f2094b],sp
  41356c:	lahf   
  41356d:	sbb    dl,bl
  41356f:	add    edi,DWORD PTR [esi+0x4815e8e]
  413575:	jns    0x413530
  413577:	xor    BYTE PTR [esi+0x1],0x51
  41357b:	popf   
  41357c:	idiv   BYTE PTR [eax+0x3e]
  41357f:	add    BYTE PTR [eax],0x0
	...
  4135a6:	add    BYTE PTR [eax],al
  4135a8:	mov    dh,0x79
  4135aa:	add    BYTE PTR [edi],dh
  4135ac:	leave  
  4135ad:	js     0x413617
  4135af:	in     eax,0x47
  4135b1:	or     DWORD PTR [eax],eax
  4135b3:	je     0x413578
  4135b5:	cmp    dh,0x1e
  4135b8:	leave  
  4135b9:	fldenv [edi+0x43]
  4135bc:	jo     0x413588
  4135be:	inc    DWORD PTR [eax-0x16bec613]
  4135c4:	mov    al,ds:0x48a83098
  4135c9:	popa   
  4135ca:	dec    edi
  4135cb:	push   esi
  4135cc:	dec    eax
  4135cd:	or     DWORD PTR [ebx],ecx
  4135cf:	sub    DWORD PTR [ecx+ebx*1-0x713a1696],edx
  4135d6:	neg    edi
  4135d8:	retf   0x5078
  4135db:	(bad)  
  4135dc:	jl     0x4135ee
  4135de:	call   0xffb93211
  4135e3:	(bad)  
  4135e4:	mov    esp,0xcabefe79
  4135e9:	popa   
  4135ea:	jge    0x413590
  4135ec:	retf   0x6a78
  4135ef:	add    ch,bh
  4135f1:	dec    ebp
  4135f2:	shl    DWORD PTR [esi+0x15c004ca],1
  4135f8:	sub    esp,ecx
  4135fa:	sbb    cl,0x9
  4135fd:	js     0x41364e
  4135ff:	sbb    DWORD PTR ds:0x1f86ff59,0xca18ffe2
  413609:	std    
  41360a:	pop    es
  41360b:	add    DWORD PTR [eax],0x0
	...
  413631:	add    BYTE PTR [eax],al
  413633:	add    BYTE PTR [ebp+0x76],bl
  413636:	jmp    FWORD PTR [esi-0x51]
  413639:	(bad)  
  41363b:	retfw  0x6fe0
  41363f:	sbb    DWORD PTR [eax],ecx
  413641:	js     0x4136ac
  413643:	repz retf 
  413645:	std    
  413646:	pop    es
  413647:	inc    ecx
  413648:	lods   eax,DWORD PTR ds:[esi]
  413649:	jbe    0x41364a
  41364b:	add    BYTE PTR [ebp-0x5ccf909b],cl
  413651:	or     ebp,DWORD PTR [edx+0x23]
  413654:	sbb    eax,0x79e80780
  413659:	mov    edi,edi
  41365b:	(bad)  
  41365c:	mov    edx,0xe2412f7b
  413661:	gs sbb edi,edi
  413664:	out    0x3,eax
  413666:	call   0xffcb82f7
  41366b:	push   DWORD PTR [edi]
  41366d:	clc    
  41366e:	(bad)  
  41366f:	jne    0x41362b
  413671:	jecxz  0x41360e
  413673:	retf   0x889d
  413676:	leave  
  413677:	ret    0xba6
  41367a:	push   ebp
  41367b:	mov    edi,DWORD PTR [esi+0x63]
  41367e:	(bad)  
  41367f:	(bad)  
  413680:	jge    0x4136cb
  413682:	push   DWORD PTR [ebp+0x6e]
  413685:	mov    BYTE PTR [ebp+0x8],dh
  413688:	mov    bh,dl
  41368a:	in     eax,dx
  41368b:	dec    DWORD PTR [ebp+0x6208c1c2]
  413691:	pop    esi
  413692:	mov    ch,ah
  413694:	icebp  
  413695:	iret   
  413696:	test   edi,0x0
	...
  4136c0:	daa    
  4136c1:	mov    DWORD PTR [eax],eax
  4136c3:	add    BYTE PTR [edx+0xb],ah
  4136c6:	lea    eax,[ebp-0x52]
  4136c9:	pop    ebx
  4136ca:	addr16 mov edx,0xfeff4c22
  4136d0:	push   edi
  4136d1:	sbb    edi,edi
  4136d3:	xor    eax,0x4123f5
  4136d8:	(bad)  
  4136da:	into   
  4136db:	call   FWORD PTR [ebp+0xc74c005]
  4136e1:	test   BYTE PTR [ebp-0x8],al
  4136e4:	cli    
  4136e5:	or     eax,DWORD PTR [eax]
  4136e7:	out    dx,eax
  4136e8:	lods   al,BYTE PTR ds:[esi]
  4136e9:	mov    DWORD PTR [ebp-0x4],esi
  4136ec:	dec    ebx
  4136ed:	fcomip st,st(5)
  4136ef:	idiv   esp
  4136f1:	pop    ebp
  4136f2:	or     ebp,eax
  4136f4:	xchg   ecx,eax
  4136f5:	fidivr WORD PTR [edi-0x1]
  4136f8:	in     al,dx
  4136f9:	mov    ebp,0x2ca6e87b
  4136fe:	cmp    bh,0x12
  413701:	and    ecx,DWORD PTR [ebx]
  413703:	add    BYTE PTR [esi-0x5],bh
  413706:	outs   dx,BYTE PTR ds:[esi]
  413707:	add    DWORD PTR [edi],0xc4ff80dd
  41370d:	daa    
  41370e:	xchg   BYTE PTR [eax+0x8007bd],bh
  413714:	dec    ebx
  413715:	pusha  
  413716:	add    ecx,DWORD PTR [ebx-0x3ff39bfa]
  41371c:	pop    ds
  41371d:	cmp    DWORD PTR gs:[eax],0x4b
  413721:	std    
  413722:	add    eax,0xe9
	...
  41374b:	add    BYTE PTR [edi+0x61],cl
  41374e:	add    eax,DWORD PTR [eax]
  413750:	mov    ebp,ds
  413752:	adc    edi,edi
  413754:	(bad)  
  413755:	imul   ebp,DWORD PTR [ebx+0x29],0xffffff9b
  413759:	inc    edi
  41375a:	jg     0x4137ac
  41375c:	sbb    ecx,DWORD PTR [edi-0x7]
  41375f:	pop    es
  413760:	arpl   si,cx
  413762:	jle    0x413763
  413764:	fs dec eax
  413766:	sti    
  413767:	retf   
  413768:	pop    esp
  413769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41376a:	in     al,dx
  41376b:	cwde   
  41376c:	daa    
  41376d:	and    DWORD PTR [edi+edi*8],eax
  413770:	(bad)  
  413771:	arpl   WORD PTR [ebx+0xd],bp
  413774:	sbb    ebx,DWORD PTR [edi-0x28397681]
  41377a:	jge    0x41377b
  41377c:	xor    al,0x18
  41377e:	add    DWORD PTR ds:[ebx+0x60],ecx
  413782:	nop
  413783:	test   DWORD PTR [ecx],ecx
  413785:	(bad)  
  413786:	jle    0x413787
  413788:	jnp    0x413712
  41378a:	mov    esp,ecx
  41378c:	adc    al,0x9
  41378e:	xchg   cx,ax
  413790:	(bad)  
  413791:	dec    edx
  413792:	pop    edi
  413793:	jg     0x413799
  413795:	fst    DWORD PTR [ebp-0x47]
  413798:	ret    
  413799:	jbe    0x4137e9
  41379b:	jg     0x413780
  41379d:	inc    edi
  41379e:	fs add al,0x4b
  4137a1:	and    BYTE PTR [eax+eax*8-0x1b],0x75
  4137a6:	les    ecx,FWORD PTR ss:[ebp-0x73]
  4137aa:	xchg   BYTE PTR [ebx+ecx*2],al
  4137ad:	or     DWORD PTR [ecx+ebx*4+0x0],esi
	...
  4137d5:	add    BYTE PTR [eax],al
  4137d7:	add    BYTE PTR [ecx],cl
  4137d9:	ja     0x4137f9
  4137db:	jg     0x413799
  4137dd:	or     bh,cl
  4137df:	add    ecx,DWORD PTR [ebx+0x9]
  4137e2:	xchg   ebp,eax
  4137e3:	test   edi,0xac7e2b9b
  4137e9:	jne    0x413857
  4137eb:	ret    0xd970
  4137ee:	adc    BYTE PTR [edi+0x6be8c86f],0xb3
  4137f5:	xchg   ebx,eax
  4137f6:	jmp    0x548a77fe
  4137fb:	add    dh,BYTE PTR [eax-0x2e]
  4137fe:	arpl   WORD PTR [eax+0x7ece7689],bx
  413804:	(bad)  
  413805:	retf   0xd414
  413808:	in     al,0x9e
  41380a:	or     eax,0x376d64c5
  41380f:	mov    eax,ds:0x43e2094b
  413814:	fimul  WORD PTR [edx]
  413816:	xchg   edx,eax
  413817:	ret    
  413818:	mov    edi,0x447dab9b
  41381d:	jne    0x413883
  41381f:	shl    DWORD PTR [eax-0x7e],0x64
  413823:	mov    bh,0x35
  413825:	jne    0x4137ad
  413827:	jmp    0x41380d
  413829:	and    DWORD PTR [eax],ebp
  41382b:	add    al,0x24
  41382d:	(bad)  
  41382e:	jmp    esp
  413830:	mov    al,0xf2
  413832:	into   
  413833:	outs   dx,BYTE PTR ds:[esi]
  413834:	xchg   ebp,eax
  413835:	je     0x4137ec
  413837:	popf   
  413838:	mov    ?,WORD PTR [edi+edi*8-0x47]
	...
  413864:	jo     0x4138b0
  413866:	iret   
  413867:	push   esi
  413868:	jge    0x4138de
  41386a:	jne    0x413865
  41386c:	sbb    BYTE PTR [ebp-0x48],ch
  41386f:	ss ins DWORD PTR es:[edi],dx
  413871:	je     0x4138c3
  413873:	cdq    
  413874:	inc    BYTE PTR gs:[edi]
  413877:	inc    ecx
  413878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413879:	jae    0x41387a
  41387b:	cs pusha 
  41387d:	mov    ebx,0x864d26cb
  413882:	test   DWORD PTR [ebx],ebp
  413884:	inc    esi
  413885:	je     0x413886
  413887:	mov    ecx,0xfbcbe3d
  41388c:	xor    eax,0xebd5e874
  413891:	or     DWORD PTR [eax],eax
  413893:	or     BYTE PTR fs:[eax*4-0x8be273],al
  41389b:	out    dx,al
  41389c:	fdiv   QWORD PTR [ebp+0x610ee6fe]
  4138a2:	pop    ds
  4138a3:	jl     0x4138f4
  4138a5:	or     edi,edi
  4138a7:	pushf  
  4138a8:	mov    edi,0xe7ceff73
  4138ad:	mov    cl,bl
  4138af:	(bad)  
  4138b0:	out    dx,al
  4138b1:	inc    ecx
  4138b2:	ret    0x48ed
  4138b5:	fimul  WORD PTR [edx-0x3b2353b]
  4138bb:	scas   al,BYTE PTR es:[edi]
  4138bc:	pop    esp
  4138bd:	add    al,ch
  4138bf:	stos   BYTE PTR es:[edi],al
  4138c0:	(bad)  
  4138c1:	jae    0x4138c2
  4138c3:	jo     0x4138d1
  4138c5:	jo     0x4138d2
  4138c7:	test   eax,0x0
	...
  4138f0:	dec    esi
  4138f1:	lea    ecx,[ecx+ebp*8+0x680948]
  4138f8:	mov    dl,0x38
  4138fa:	inc    ecx
  4138fb:	add    BYTE PTR [ebp-0x66170484],ah
  413901:	ret    
  413902:	(bad)  
  413903:	push   DWORD PTR [edx]
  413905:	gs inc eax
  413907:	xor    ah,bl
  413909:	pop    es
  41390a:	push   eax
  41390b:	call   FWORD PTR [edi]
  41390d:	add    al,ch
  41390f:	xchg   esp,eax
  413910:	xchg   esp,eax
  413911:	idiv   dh
  413913:	call   0x3ff9c2
  413918:	sbb    cl,BYTE PTR [ebx]
  41391a:	xor    al,BYTE PTR [ecx-0xe]
  41391d:	hlt    
  41391e:	je     0x41391c
  413920:	mov    cl,bh
  413922:	int    0xff
  413924:	and    eax,0xf041675d
  413929:	inc    esi
  41392a:	dec    DWORD PTR [edi+0x65]
  41392d:	jl     0x413936
  41392f:	call   0x402f15
  413934:	dec    edx
  413935:	cs retf 
  413937:	inc    DWORD PTR [ebp+0x65]
  41393a:	sbb    eax,0xff07f332
  41393f:	jne    0x4138d7
  413941:	fistp  QWORD PTR [eax+0x4ff4a5ce]
  413947:	push   0x413763
  41394c:	inc    edx
  41394d:	div    BYTE PTR [eax+ecx*1-0x76]
  413951:	pop    ecx
  413952:	std    
  413953:	inc    DWORD PTR [eax]
	...
  413979:	add    BYTE PTR [eax],al
  41397b:	add    BYTE PTR [ebp-0x7a34fa21],al
  413981:	hlt    
  413982:	cmp    BYTE PTR [bx+si+0x46],ah
  413986:	(bad)  
  413987:	(bad)  
  413988:	pop    ds
  413989:	mov    eax,ebp
  41398b:	cwde   
  41398c:	mov    ah,0xf4
  41398e:	(bad)  
  41398f:	push   eax
  413990:	cmp    cl,BYTE PTR [eax+0x31]
  413993:	inc    ecx
  413994:	xor    dl,BYTE PTR [edi-0x2]
  413997:	jne    0x4139e4
  413999:	push   0x8435316b
  41399e:	jl     0x413988
  4139a0:	es mov bh,0x7c
  4139a3:	jmp    DWORD PTR [esi+edi*2]
  4139a6:	jg     0x413990
  4139a8:	(bad)  
  4139a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139aa:	jl     0x4139ab
  4139ac:	add    bl,BYTE PTR [edi-0x889fff5]
  4139b2:	outs   dx,BYTE PTR ds:[esi]
  4139b3:	or     DWORD PTR [edi],0xffffffd5
  4139b6:	shr    DWORD PTR [ecx+0x4b],cl
  4139b9:	inc    esi
  4139ba:	pop    es
  4139bb:	(bad)  
  4139bc:	jle    0x413a26
  4139be:	imul   edi,esi,0x4
  4139c1:	int3   
  4139c2:	jnp    0x41394d
  4139c4:	mov    ?,WORD PTR [eax+ecx*4]
  4139c7:	cmp    eax,0xffc3087b
  4139cc:	push   esp
  4139cd:	arpl   WORD PTR [ebx],ax
  4139cf:	je     0x4139e1
  4139d1:	cwde   
  4139d2:	mov    cl,0x30
  4139d4:	or     ah,BYTE PTR [eax-0x2c]
  4139d7:	out    0x12,eax
  4139d9:	std    
  4139da:	add    al,BYTE PTR [eax]
  4139dc:	inc    eax
  4139dd:	and    bh,dh
  4139df:	sbb    eax,0x0
	...
  413a08:	adc    al,0x18
  413a0a:	out    dx,eax
  413a0b:	shl    DWORD PTR [ebx+esi*2+0x5417c007],cl
  413a12:	shl    DWORD PTR [edi+0xa],cl
  413a15:	scas   al,BYTE PTR es:[edi]
  413a16:	ret    0xfcff
  413a19:	push   0xfffffff1
  413a1b:	pop    es
  413a1c:	jae    0x4139d9
  413a1e:	jns    0x413a1f
  413a20:	jl     0x413a6a
  413a22:	(bad)
  413a26:	js     0x413a5b
  413a28:	mov    ecx,DWORD PTR [ecx-0x4c9b0085]
  413a2e:	jbe    0x4139de
  413a30:	and    esp,DWORD PTR [ebx-0x10]
  413a33:	(bad)
  413a37:	jne    0x413a7c
  413a39:	or     DWORD PTR [ecx-0x618dba8b],edx
  413a3f:	out    dx,al
  413a40:	imul   esi,DWORD PTR [edx+0x1c],0x8f6a230c
  413a47:	jnp    0x413a75
  413a49:	(bad)  
  413a4b:	jp     0x4139eb
  413a4d:	add    DWORD PTR [ecx+0x76721d59],edx
  413a53:	out    dx,al
  413a54:	outs   dx,BYTE PTR ds:[esi]
  413a55:	jb     0x413a4b
  413a57:	or     esp,DWORD PTR [ebx]
  413a59:	push   esi
  413a5a:	addr16 jnp 0x413a61
  413a5d:	loope  0x413a83
  413a5f:	xor    al,0x8a
  413a61:	or     DWORD PTR [esi-0xf],edx
  413a64:	dec    esp
  413a65:	popa   
  413a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a67:	js     0x413a55
  413a69:	jno    0x413a3c
  413a6b:	jne    0x413a6d
	...
  413a91:	add    BYTE PTR [eax],al
  413a93:	add    BYTE PTR [ebx],bl
  413a95:	enter  0x7ae8,0x56
  413a99:	add    DWORD PTR [ecx+0x3c],eax
  413a9c:	(bad)  
  413a9d:	jno    0x413acd
  413a9f:	in     al,dx
  413aa0:	and    al,0x38
  413aa2:	test   al,0x3
  413aa4:	(bad)  
  413aa5:	sti    
  413aa6:	lock imul esi,DWORD PTR [eax+0x74],0x16
  413aab:	jnp    0x413ad0
  413aad:	fcmovnbe st,st(7)
  413aaf:	les    ebp,FWORD PTR [edx+esi*2+0x12b30b7c]
  413ab6:	cld    
  413ab7:	jp     0x413a55
  413ab9:	loopne 0x413b1f
  413abb:	xor    eax,0xf0ee090a
  413ac0:	inc    esp
  413ac1:	popa   
  413ac2:	clc    
  413ac3:	js     0x413a49
  413ac5:	jno    0x413b18
  413ac7:	mov    esi,0x7ae8c83a
  413acc:	inc    BYTE PTR [eax]
  413ace:	sar    edi,0x6f
  413ad1:	jno    0x413a99
  413ad3:	jp     0x413ab3
  413ad5:	je     0x413a95
  413ad7:	lock inc esp
  413ad9:	popa   
  413ada:	add    BYTE PTR [ebx],dh
  413adc:	or     BYTE PTR [edx-0x1],dh
  413adf:	push   cs
  413ae0:	inc    BYTE PTR [esi+0x4]
  413ae3:	jmp    0x6b2dbf03
  413ae8:	inc    ebx
  413ae9:	add    eax,0x70591d00
  413aee:	jne    0x413ae9
  413af0:	mov    cl,0xf6
  413af2:	or     eax,DWORD PTR [esi-0x4c17f6e5]
	...
  413b20:	lods   eax,DWORD PTR ds:[esi]
  413b21:	jo     0x413b22
  413b23:	jbe    0x413b40
  413b25:	add    eax,0x707f91e8
  413b2a:	push   DWORD PTR [eax]
  413b2c:	mov    ?,ebp
  413b2e:	push   DWORD PTR [ebx+0x2d835dcd]
  413b34:	jl     0x413b19
  413b36:	dec    DWORD PTR [ebp-0x5]
  413b39:	sbb    al,0xff
  413b3b:	mov    esp,0xed757038
  413b40:	jo     0x413b99
  413b42:	int3   
  413b43:	ss push ecx
  413b45:	add    al,0xc0
  413b47:	mov    ch,0xf4
  413b49:	add    DWORD PTR [ebp+0x25],0xa832bab0
  413b50:	dec    eax
  413b51:	jo     0x413bc8
  413b53:	adc    eax,0xeccc220
  413b58:	xor    ecx,esp
  413b5a:	(bad)  
  413b5b:	call   0xfe91ea91
  413b60:	lods   al,BYTE PTR ds:[esi]
  413b61:	or     al,ch
  413b63:	dec    esp
  413b64:	adc    DWORD PTR [eax-0x1],esi
  413b67:	adc    ebx,0x3e9413b
  413b6d:	idiv   bl
  413b6f:	shl    DWORD PTR [ecx],1
  413b71:	notrack call esi
  413b74:	or     DWORD PTR [bx+si],eax
  413b77:	mov    esi,0xfed9b1
  413b7c:	daa    
  413b7d:	std    
  413b7e:	out    0x8a,eax
  413b80:	popf   
  413b81:	repnz (bad) 
  413b83:	push   0x0
	...
  413bac:	stos   BYTE PTR es:[edi],al
  413bad:	aaa    
  413bae:	inc    ecx
  413baf:	add    BYTE PTR [ebp+0x41e8fb60],bl
  413bb5:	(bad)  
  413bb6:	(bad)  
  413bb7:	call   FWORD PTR [edx+0x7]
  413bba:	add    bh,ch
  413bbc:	pushf  
  413bbd:	push   ebp
  413bbe:	(bad)  
  413bbf:	jne    0x413beb
  413bc1:	in     al,0x6e
  413bc3:	dec    ebp
  413bc5:	icebp  
  413bc6:	(bad)  
  413bc7:	jne    0x413b67
  413bc9:	fstp   QWORD PTR [ebp-0x37]
  413bcc:	popf   
  413bcd:	repnz enter 0xf2c2,0xb
  413bd2:	push   ebp
  413bd3:	mov    ebx,DWORD PTR [esi-0x4ccd2ba3]
  413bd9:	or     edi,edi
  413bdb:	jne    0x413bcb
  413bdd:	jecxz  0x413bc7
  413bdf:	int3   
  413be0:	jge    0x413bd4
  413be2:	(bad)  
  413be3:	jne    0x413be7
  413be5:	pop    esp
  413be6:	out    0x34,eax
  413be8:	das    
  413be9:	repnz (bad) 
  413beb:	call   DWORD PTR [edi-0x6800b001]
  413bf1:	add    ebp,eax
  413bf3:	ds ins DWORD PTR es:[edi],dx
  413bf5:	repnz (bad) 
  413bf7:	push   0x413753
  413bfc:	pop    ebp
  413bfd:	pusha  
  413bfe:	or     ebp,eax
  413c00:	gs sar esi,0xff
  413c04:	dec    ebp
  413c05:	pusha  
  413c06:	(bad)  
  413c08:	cmp    dl,BYTE PTR [edi]
  413c0a:	int    0xff
  413c0c:	popf   
  413c0d:	lock je 0x413c24
	...
  413c38:	mov    dl,0xf0
  413c3a:	je     0x413c44
  413c3c:	call   0xc1c2:0x9dffff17
  413c43:	adc    BYTE PTR [ebx+0x62],cl
  413c46:	into   
  413c47:	mov    bl,BYTE PTR [edi-0x1e]
  413c4a:	ds cld 
  413c4c:	fs sub al,0x8
  413c4f:	call   0xffb9d94f
  413c54:	inc    eax
  413c55:	mov    ds:0x24c249ef,al
  413c5a:	js     0x413cc4
  413c5c:	dec    ebx
  413c5d:	pusha  
  413c5e:	push   0x34d2b3be
  413c63:	inc    ecx
  413c64:	dec    ebx
  413c65:	xchg   edi,eax
  413c66:	out    dx,al
  413c67:	sti    
  413c68:	sub    al,0x16
  413c6a:	or     al,0xe8
  413c6c:	rol    BYTE PTR [edi+0x61b3ff78],1
  413c72:	add    ebp,edi
  413c74:	aad    0x8
  413c76:	mov    bh,0x32
  413c78:	mov    ah,BYTE PTR [eax+0x78]
  413c7b:	jne    0x413c84
  413c7d:	call   0x5734446f
  413c82:	js     0x413c83
  413c84:	hlt    
  413c85:	dec    eax
  413c86:	add    eax,0xeb7edc00
  413c8b:	(bad)  
  413c8c:	sbb    DWORD PTR [ecx+0x2c56ff03],esp
  413c92:	js     0x413d09
  413c94:	inc    ebx
  413c95:	enter  0xfee1,0xcc
  413c99:	pop    ds
  413c9a:	js     0x413d11
	...
  413cc4:	(bad)  
  413cc5:	sbb    BYTE PTR [eax+ecx*8-0x3db5f044],dh
  413ccc:	inc    ebx
  413ccd:	pusha  
  413cce:	into   
  413ccf:	mov    bl,BYTE PTR [edi+0x31fc3ee3]
  413cd5:	pusha  
  413cd6:	in     eax,dx
  413cd7:	add    al,0x9c
  413cd9:	cmc    
  413cda:	or     ch,al
  413cdc:	jle    0x413cfb
  413cde:	js     0x413cdf
  413ce0:	ret    0x77a5
  413ce3:	push   0xc51b09c8
  413ce8:	jl     0x413cd0
  413cea:	das    
  413ceb:	xor    cl,BYTE PTR [edx]
  413ced:	or     esi,edx
  413cef:	xor    DWORD PTR [eax+eiz*1],esi
  413cf2:	sub    BYTE PTR [esp+eiz*2],al
  413cf5:	hlt    
  413cf6:	lock imul ebp,DWORD PTR [ebp-0x1c884191],0xffffff93
  413cfe:	sti    
  413cff:	les    ecx,FWORD PTR [esi+eiz*8+0xb]
  413d03:	xor    cl,BYTE PTR [edx+0x7431a609]
  413d09:	and    BYTE PTR [eax],ch
  413d0b:	add    al,0x34
  413d0d:	hlt    
  413d0e:	loopne 0x413d7b
  413d10:	aad    0x6e
  413d12:	mov    ?,WORD PTR [edi-0x4d]
  413d15:	xchg   ebx,eax
  413d16:	mov    ebx,0x2fe61cc4
  413d1b:	xor    cl,BYTE PTR [edx+0x54317609]
  413d21:	and    BYTE PTR [eax],ch
  413d23:	add    al,0x4
  413d25:	hlt    
  413d26:	lock imul eax,DWORD PTR [eax],0x0
	...
  413d4e:	add    BYTE PTR [eax],al
  413d50:	jge    0x413dc1
  413d52:	pop    esi
  413d53:	ja     0x413db8
  413d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d56:	sbb    eax,ebp
  413d58:	in     al,dx
  413d59:	in     eax,0x9f
  413d5b:	xor    DWORD PTR [edx+0x14314609],ecx
  413d61:	and    BYTE PTR [eax-0x1f0c2bfd],ch
  413d67:	imul   esp,DWORD PTR [ebp+0x6f],0x2e
  413d6b:	ja     0x413da0
  413d6d:	mov    bl,bl
  413d6f:	les    edi,FWORD PTR [ebp+eiz*8+0x90a318d]
  413d76:	push   ss
  413d77:	xor    DWORD PTR [eax+eiz*1-0x58],esi
  413d7b:	add    esp,DWORD PTR [ebx+esi*8+0x6f0d6bf0]
  413d82:	(bad)  
  413d83:	jbe    0x413da8
  413d85:	xchg   esp,eax
  413d86:	add    BYTE PTR [ebx+0x7e676d87],bh
  413d8c:	cmp    cl,al
  413d8e:	jmp    ebp
  413d90:	cmp    esi,DWORD PTR [esi]
  413d92:	sub    DWORD PTR [eax],ebp
  413d94:	dec    edi
  413d95:	outs   dx,BYTE PTR ds:[esi]
  413d96:	jne    0x413d79
  413d98:	loopne 0x413dd0
  413d9a:	dec    dh
  413d9c:	fucom  st(0)
  413d9e:	cdq    
  413d9f:	sti    
  413da0:	xchg   DWORD PTR [ebp+0x67],ebp
  413da3:	dec    esi
  413da4:	sbb    eax,ecx
  413da6:	push   DWORD PTR [ebp+0x2829361b]
  413dac:	dec    edi
  413dad:	ins    BYTE PTR es:[edi],dx
  413dae:	jne    0x413da1
  413db0:	mov    al,0xb
  413db2:	(bad)  
  413db3:	sahf   
	...
  413ddc:	mov    ebp,0x7dba6e1
  413de1:	ins    DWORD PTR es:[edi],dx
  413de2:	addr16 (bad) 
  413de4:	pop    edx
  413de5:	retf   0x85ff
  413de8:	pop    ebx
  413de9:	xor    al,0x29
  413deb:	sub    BYTE PTR [edi+0x6c],cl
  413dee:	jne    0x413dd1
  413df0:	mov    al,ds:0x7d6efe03
  413df5:	loope  0x413d79
  413df7:	sbb    eax,DWORD PTR [esi]
  413df9:	ins    DWORD PTR es:[edi],dx
  413dfa:	addr16 mov al,0x3a
  413dfd:	retf   0xc0ff
  413e00:	dec    edx
  413e01:	or     DWORD PTR [eax],eax
  413e03:	imul   ebx,DWORD PTR [ebp-0xa],0x6e655107
  413e0a:	(bad)  
  413e0b:	ds loopne 0x413da3
  413e0e:	xor    ch,BYTE PTR [eax-0x4a31eb8]
  413e14:	(bad)  
  413e15:	ins    BYTE PTR es:[edi],dx
  413e16:	addr16 jmp 0x413e61
  413e19:	or     DWORD PTR [eax-0x17fb44e2],eax
  413e1f:	xor    DWORD PTR [ebx],esi
  413e21:	ins    BYTE PTR es:[edi],dx
  413e22:	inc    DWORD PTR [ecx+0x4137c2]
  413e28:	mov    dl,0x60
  413e2a:	dec    eax
  413e2b:	xor    ah,bl
  413e2d:	or     BYTE PTR [eax+0x2],ch
  413e30:	mov    ds:0xffff8008,al
  413e35:	jmp    edi
  413e37:	shl    DWORD PTR [edi-0xa],0xfe
  413e3b:	push   0x4137cd
	...
  413e68:	or     al,BYTE PTR [eax+0x31]
  413e6b:	inc    ecx
  413e6c:	jb     0x413ece
  413e6e:	add    DWORD PTR [eax],eax
  413e70:	jb     0x413dfa
  413e72:	push   DWORD PTR [ebp+0x5a]
  413e75:	loopne 0x413e20
  413e77:	std    
  413e78:	xchg   ebp,eax
  413e79:	mul    BYTE PTR [edi-0x7d]
  413e7c:	inc    eax
  413e7d:	inc    edi
  413e7e:	jmp    DWORD PTR [edi+0x55]
  413e81:	aaa    
  413e82:	inc    ecx
  413e83:	add    BYTE PTR [edx+0x7],bl
  413e86:	add    BYTE PTR [eax],al
  413e88:	mov    ds:0xca0874f6,al
  413e8d:	cdq    
  413e8e:	std    
  413e8f:	inc    ebp
  413e91:	pop    esp
  413e92:	xchg   esp,eax
  413e93:	xor    ah,BYTE PTR [ebx+0x5]
  413e96:	push   0xff46d06f
  413e9b:	addr16 lock pop es
  413e9e:	add    BYTE PTR [eax-0x17f8a39b],al
  413ea4:	push   ss
  413ea5:	repz (bad) 
  413ea7:	dec    DWORD PTR [edx]
  413ea9:	xchg   edx,eax
  413eaa:	xor    al,BYTE PTR [ecx-0xe]
  413ead:	pop    edi
  413eae:	outs   dx,BYTE PTR ds:[esi]
  413eaf:	xor    dh,BYTE PTR [ebx-0x1dfd97f9]
  413eb5:	pop    es
  413eb6:	cmp    bh,0x8f
  413eb9:	jmp    edi
  413ebb:	gs ja  0x413eb4
  413ebe:	(bad)  
  413ebf:	push   0x41370d
  413ec4:	fisub  DWORD PTR [ecx+esi*1+0x41]
  413ec8:	dec    ebx
  413ec9:	(bad)  
  413eca:	jmp    0x413ecd
	...
  413ef4:	dec    ebx
  413ef5:	bound  eax,QWORD PTR [ebx+0x6b7a16ff]
  413efb:	dec    esi
  413efc:	xchg   esi,eax
  413efd:	push   0x74
  413eff:	push   0x31
  413f01:	jae    0x413ef1
  413f03:	pop    es
  413f04:	jae    0x413f6e
  413f06:	jne    0x413f07
  413f08:	jl     0x413ee1
  413f0a:	and    bh,bh
  413f0c:	(bad)  
  413f0d:	jns    0x413f7a
  413f0f:	jmp    FWORD PTR [esi+0x52]
  413f12:	je     0x413f7e
  413f14:	inc    edi
  413f15:	cmp    ebp,esi
  413f17:	pop    es
  413f18:	jae    0x413ec6
  413f1a:	jbe    0x413f1b
  413f1c:	push   esp
  413f1d:	stos   BYTE PTR es:[edi],al
  413f1e:	out    dx,al
  413f1f:	sti    
  413f20:	dec    esp
  413f21:	sub    al,0xc
  413f23:	call   0xffb5e3e4
  413f28:	adc    bl,BYTE PTR [edi-0x8600001]
  413f2e:	sub    WORD PTR [esi-0x578bfc9c],0x8
  413f36:	jl     0x413f6a
  413f38:	mov    ah,BYTE PTR [eax+0x74]
  413f3b:	jne    0x413f84
  413f3d:	cwde   
  413f3e:	cmc    
  413f3f:	leave  
  413f40:	or     al,0xf4
  413f42:	shl    BYTE PTR [edi+0x4b],cl
  413f45:	pusha  
  413f46:	fs mov esi,0x7ede39b
  413f4c:	jecxz  0x413ef4
  413f4e:	imul   edi,edi,0xffffffec
  413f51:	enter  0xc647,0xe4
  413f55:	mov    ebx,0x8ea
	...
  413f7e:	add    BYTE PTR [eax],al
  413f80:	sbb    BYTE PTR [ecx+0x5c5eff03],ah
  413f86:	imul   ebx,DWORD PTR [ebp+0x1],0x34
  413f8a:	je     0x413fdc
  413f8c:	xor    esp,DWORD PTR [ecx+0x3]
  413f8f:	out    dx,eax
  413f90:	std    
  413f91:	or     DWORD PTR [ecx+0x11013e74],edi
  413f97:	call   0x43f1:0x6b166aa3
  413f9e:	push   cs
  413f9f:	je     0x413fd4
  413fa1:	or     eax,0x6b94c2ba
  413fa6:	je     0x413faf
  413fa8:	mov    ds:0x8474232d,eax
  413fad:	fld    DWORD PTR [eax-0x58a5b4ff]
  413fb3:	aam    0x75
  413fb5:	hlt    
  413fb6:	lock pop ebx
  413fb8:	repz pusha 
  413fba:	(bad)  
  413fbb:	jae    0x414030
  413fbd:	and    BYTE PTR [edi-0x54bfa38d],0xfc
  413fc4:	push   esp
  413fc5:	aad    0x71
  413fc7:	pusha  
  413fc8:	dec    esp
  413fc9:	hlt    
  413fca:	in     al,0x5b
  413fcc:	adc    bh,BYTE PTR [edi]
  413fce:	scas   al,BYTE PTR es:[edi]
  413fcf:	jae    0x414021
  413fd1:	dec    ecx
  413fd2:	sbb    eax,0xdb5ca30e
  413fd7:	les    ebp,FWORD PTR [edx+edi*4]
  413fda:	adc    dl,0x12
  413fdd:	push   0xffffff8e
  413fdf:	aam    0x8c
  413fe1:	push   0xfffffffc
  413fe3:	sti    
	...
  41400c:	sub    al,0xdd
  41400e:	jge    0x414083
  414010:	or     al,0x61
  414012:	adc    eax,0xa06a044a
  414017:	inc    esi
  414018:	push   ebx
  414019:	or     DWORD PTR [esi+edi*2+0x642585e7],edi
  414020:	popa   
  414021:	or     DWORD PTR [esi-0x7],edx
  414024:	push   esp
  414025:	push   0xffffffd4
  414027:	(bad)  
  414028:	fnsave [ebx]
  41402a:	(bad)  
  41402b:	sbb    al,0x8a
  41402d:	or     DWORD PTR [ecx-0x25],edx
  414030:	add    ebp,DWORD PTR [edx+0x0]
  414033:	ss inc esi
  414035:	(bad)  
  414036:	repz ret 
  414038:	dec    eax
  414039:	push   0x75
  41403b:	std    
  41403c:	cmp    esp,esi
  41403e:	or     ebx,DWORD PTR [esi]
  414040:	jb     0x414074
  414042:	sub    DWORD PTR [eax+0x20416148],ebp
  414048:	sbb    BYTE PTR [edx-0x77],ch
  41404b:	lods   al,BYTE PTR ds:[esi]
  41404c:	and    al,0xdf
  41404e:	(bad)  
  41404f:	std    
  414050:	xchg   ebx,eax
  414051:	adc    edi,edi
  414053:	jl     0x413fd9
  414055:	push   0x35
  414057:	mov    dh,0x5f
  414059:	enter  0xd0ff,0x55
  41405d:	inc    eax
  41405e:	(bad)  
  41405f:	fsubp  st(7),st
  414061:	ret    
  414062:	mul    DWORD PTR [ebx+edx*4+0x61]
  414066:	push   eax
  414067:	into   
  414068:	arpl   WORD PTR ds:0x6a4b3cff,cx
  41406e:	xor    eax,0xf6
	...
  414097:	add    BYTE PTR [edi],ch
  414099:	enter  0xc0ff,0x5d
  41409d:	push   edx
  41409e:	jmp    FWORD PTR [esi+0x13efcebf]
  4140a4:	dec    edi
  4140a5:	push   0xdeb9c975
  4140aa:	or     edx,DWORD PTR [esi+0x28292063]
  4140b0:	inc    edi
  4140b1:	jno    0x4140b0
  4140b3:	mov    cl,0x99
  4140b5:	push   0x96ab2489
  4140ba:	inc    ebp
  4140bb:	mov    DWORD PTR [eax],ebx
  4140bd:	push   0xde79c575
  4140c2:	or     esp,DWORD PTR [esi+0x33]
  4140c5:	and    BYTE PTR [ecx],ch
  4140c7:	test   al,0x48
  4140c9:	jno    0x4140b0
  4140cb:	and    DWORD PTR [ecx+0x68],ebx
  4140ce:	mov    DWORD PTR [esp+eiz*2-0x71ff8274],esp
  4140d5:	or     al,0xf
  4140d7:	test   BYTE PTR [esi+0xc],dh
  4140da:	add    BYTE PTR [eax],al
  4140dc:	xor    DWORD PTR [ecx-0x9],ebx
  4140df:	add    BYTE PTR [ebp-0x5dff7570],bl
  4140e5:	or     al,0x83
  4140e7:	jge    0x41413f
  4140e9:	or     al,0xf
  4140eb:	test   BYTE PTR [edx],dh
  4140ed:	or     al,0x0
  4140ef:	add    BYTE PTR [ebp+0x61],cl
  4140f2:	daa    
  4140f3:	call   DWORD PTR [edi]
  4140f5:	fs out 0x2a,eax
  4140f8:	pusha  
  4140f9:	(bad)  
  4140fb:	inc    DWORD PTR [eax]
	...
  414121:	add    BYTE PTR [eax],al
  414123:	add    BYTE PTR [edi],al
  414125:	clc    
  414126:	(bad)  
  414127:	jne    0x414193
  414129:	les    eax,FWORD PTR [eax-0x125923e]
  41412f:	jne    0x41419b
  414131:	fidiv  DWORD PTR [eax+ecx*1-0x76]
  414135:	arpl   cx,ax
  414137:	dec    DWORD PTR [ebp-0x720b8b26]
  41413d:	pusha  
  41413e:	pop    es
  41413f:	call   0x40103d
  414144:	mov    bl,0x78
  414146:	daa    
  414147:	adc    esi,DWORD PTR [edx]
  414149:	jmp    0xd980b70b
  41414e:	je     0x414140
  414150:	int    0x5f
  414152:	pop    es
  414153:	call   0x4010bd
  414158:	leave  
  414159:	or     bh,bh
  41415b:	jne    0x414117
  41415d:	fnstenv [eax+esi*8-0x73]
  414161:	pusha  
  414162:	pop    es
  414163:	call   0x400f81
  414168:	ins    DWORD PTR es:[edi],dx
  414169:	pusha  
  41416a:	jmp    0x41416b
  41416c:	pop    ss
  41416d:	fs out 0x3c,eax
  414170:	and    dl,bl
  414172:	inc    BYTE PTR [ebx+0x673d4b]
  414178:	push   edi
  414179:	pop    ebp
  41417a:	test   BYTE PTR [ebp-0x15],bh
  41417d:	jne    0x414175
  41417f:	push   cs
  414180:	shr    BYTE PTR [edi+eiz*2-0x8e08401],0x7
	...
  4141b0:	mov    bl,0x30
  4141b2:	inc    ebx
  4141b3:	push   DWORD PTR [edx+edi*8+0x74b69fd]
  4141ba:	test   DWORD PTR [edi],0xff42c4b3
  4141c0:	pushf  
  4141c1:	push   ss
  4141c2:	div    ebx
  4141c4:	mov    ds:0x8cff4655,eax
  4141c9:	data16 idiv bl
  4141cc:	jae    0x41420b
  4141ce:	inc    esi
  4141cf:	(bad)  
  4141d0:	jl     0x414248
  4141d2:	div    bh
  4141d4:	arpl   WORD PTR [ebp+0x46],sp
  4141d7:	jmp    FWORD PTR [esi+eax*2-0xa]
  4141db:	out    dx,eax
  4141dc:	jae    0x41424b
  4141de:	inc    esi
  4141df:	call   FWORD PTR [esi+edx*2-0xa]
  4141e3:	jmp    0x414248
  4141e5:	jne    0x41422d
  4141e7:	dec    DWORD PTR [esi+eiz*4-0xa]
  4141eb:	jecxz  0x414220
  4141ed:	popf   
  4141ee:	inc    edi
  4141ef:	(bad)  
  4141f0:	cmp    al,0xaa
  4141f2:	inc    ebp
  4141f3:	and    al,0x4b
  4141f5:	and    eax,0xaccaec7d
  4141fa:	jae    0x4141f3
  4141fc:	and    al,0x80
  4141fe:	fist   DWORD PTR [edx]
  414200:	dec    ebx
  414201:	out    0xb0,eax
  414203:	push   0xffc2a3c8
  414208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414209:	or     BYTE PTR ds:0xf5084b41,dh
  41420f:	xor    cl,BYTE PTR [edx+0x68db70]
	...
  414239:	add    BYTE PTR [eax],al
  41423b:	add    BYTE PTR [eax],bh
  41423d:	or     DWORD PTR [eax+0x19ed6303],ebp
  414243:	ret    
  414244:	in     al,0xee
  414246:	(bad)  
  414247:	xor    al,0x8a
  414249:	or     DWORD PTR [esi-0xa],ecx
  41424c:	inc    eax
  41424d:	mov    sp,0xe4fb
  414251:	lock ds jo 0x414219
  414255:	icebp  
  414256:	fld    DWORD PTR [ebx]
  414258:	lods   al,BYTE PTR ds:[esi]
  414259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41425a:	rol    DWORD PTR [edi+0x78],0xc8
  41425e:	call   0xa85c303e
  414263:	add    esi,DWORD PTR [ebx]
  414265:	call   0x3471:0xee9cc2da
  41426c:	or     cl,BYTE PTR [ecx]
  41426e:	xchg   ecx,eax
  41426f:	sbb    BYTE PTR [eax-0x38],0xe8
  414273:	fld    TBYTE PTR [ebp+0x7c03a81a]
  414279:	(bad)  
  41427b:	jo     0x41427b
  41427d:	adc    cl,dl
  41427f:	sub    ebp,DWORD PTR [ebp+0x66]
  414282:	(bad)  
  414284:	cmp    BYTE PTR [ecx],cl
  414286:	(bad)  
  414287:	scas   al,BYTE PTR es:[edi]
  414288:	repz sub al,0x15
  41428b:	lds    edx,FWORD PTR [esi+ebp*8-0x27]
  41428f:	aaa    
  414290:	or     cl,BYTE PTR [ecx]
  414292:	push   ecx
  414293:	add    bh,BYTE PTR [edi-0x38]
  414296:	call   0x285b5f76
  41429b:	add    al,0xa3
  41429d:	push   esi
  41429e:	fcmovb st,st(4)
	...
  4142c8:	sub    al,0xee
  4142ca:	xchg   edi,eax
  4142cb:	xor    ecx,DWORD PTR [edx+0x50f99609]
  4142d1:	data16 adc al,0xfc
  4142d4:	sub    al,0x14
  4142d6:	xchg   DWORD PTR [edi+0xc],ebp
  4142d9:	xchg   esp,eax
  4142da:	and    al,0x70
  4142dc:	fwait
  4142dd:	data16 add ah,bh
  4142e0:	cld    
  4142e1:	xor    ax,0x57b6
  4142e5:	enter  0x50ff,0xb8
  4142e9:	jle    0x4142eb
  4142eb:	jmp    0xd3b6e8d1
  4142f0:	test   esp,ecx
  4142f2:	imul   ecx
  4142f4:	dec    eax
  4142f5:	or     DWORD PTR [eax],eax
  4142f7:	add    bl,BYTE PTR cs:[edx-0x1]
  4142fb:	out    0x48,al
  4142fd:	or     DWORD PTR [edx-0x17],ebp
  414300:	mov    ds:0x92e96965,al
  414305:	mov    WORD PTR gs:[esp+esi*1+0x23648cb9],gs
  41430d:	pop    esi
  41430e:	call   DWORD PTR [esi]
  414310:	ja     0x414378
  414312:	jne    0x414325
  414314:	and    al,0xdc
  414316:	sti    
  414317:	adc    DWORD PTR [esi],ecx
  414319:	jg     0x41431b
  41431b:	jmp    0xebb5e8a1
  414320:	and    ecx,ecx
  414322:	addr16 inc ecx
  414324:	push   edi
  414325:	enter  0xe5ff,0x73
  414329:	adc    eax,ebp
  41432b:	mov    es,WORD PTR [eax]
	...
  414351:	add    BYTE PTR [eax],al
  414353:	add    BYTE PTR ds:0xf862ff66,cl
  414359:	xchg   ebx,eax
  41435a:	test   ebp,edx
  41435c:	frstor [ebp-0x1]
  41435f:	sbb    DWORD PTR [ecx+0x6d],edi
  414362:	hlt    
  414363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414364:	mov    ch,0x64
  414366:	mov    DWORD PTR [eax+edi*4+0x5c],ebp
  41436a:	jmp    FWORD PTR [esi-0x610f615b]
  414370:	popf   
  414371:	call   DWORD PTR fs:[edi+eiz*1]
  414375:	ins    DWORD PTR es:[edi],dx
  414376:	cmc    
  414377:	xchg   edi,eax
  414378:	lods   eax,DWORD PTR ds:[esi]
  414379:	call   DWORD PTR fs:[eax+ebx*4+0x5c]
  41437e:	inc    DWORD PTR [eax]
  414380:	(bad)
  414383:	ret    
  414384:	test   ebx,esi
  414386:	inc    BYTE PTR [ebp+0x7a]
  414389:	mov    edi,0xf4ffff94
  41438e:	out    0x2f,eax
  414390:	ins    BYTE PTR es:[edi],dx
  414391:	or     BYTE PTR [eax],al
  414393:	leave  
  414394:	xor    BYTE PTR [eax-0x1],ah
  414397:	push   esp
  414398:	imul   eax,esp,0x4286c482
  41439e:	jmp    FWORD PTR [ecx-0x24]
  4143a1:	repz je 0x4143ac
  4143a4:	sbb    bl,bl
  4143a6:	mov    edi,0x44e575ff
  4143ab:	cld    
  4143ac:	mov    bh,bh
  4143ae:	xor    al,BYTE PTR [ecx-0x5e]
  4143b1:	repz je 0x4143bc
  4143b4:	cmp    bl,BYTE PTR [ebx+0xfffe]
	...
  4143de:	add    BYTE PTR [eax],al
  4143e0:	xor    eax,0xda67ff42
  4143e5:	pop    ss
  4143e6:	inc    ecx
  4143e7:	add    BYTE PTR [edx+0x724132ff],bh
  4143ed:	repz xor al,0x37
  4143f0:	mov    ecx,DWORD PTR [ebp-0x1]
  4143f3:	out    0x32,eax
  4143f5:	into   
  4143f6:	(bad)  
  4143f7:	(bad)  
  4143f8:	jns    0x4143c2
  4143fa:	jae    0x41440b
  4143fc:	and    bh,BYTE PTR ds:0xc06a75fe
  414402:	xchg   esp,eax
  414403:	cld    
  414404:	test   esi,esi
  414406:	out    0x85,eax
  414408:	mov    eax,ds:0x326afef6
  41440d:	inc    eax
  41440e:	test   eax,0x680d7328
  414413:	xor    DWORD PTR ds:[edi-0x1],eax
  414417:	dec    BYTE PTR [edi]
  414419:	sbb    eax,0xc0324129
  41441e:	test   esi,eax
  414420:	dec    ebx
  414421:	jnp    0x414490
  414423:	or     ecx,DWORD PTR [ebx]
  414425:	(bad)  
  414426:	cld    
  414427:	dec    edi
  414428:	jnp    0x4143b5
  41442a:	test   DWORD PTR [edi],0xff6ff6f3
  414430:	cld    
  414431:	mov    ecx,ecx
  414433:	ret    0xf2f4
  414436:	fcos   
  414438:	fs dec edx
  41443a:	xor    BYTE PTR [ecx+0x4b],al
  41443d:	cmp    bl,BYTE PTR [eax]
  41443f:	xor    ecx,DWORD PTR [edx+0x1db72]
	...
  414469:	add    BYTE PTR [eax],al
  41446b:	add    BYTE PTR [ebx+0x72],cl
  41446e:	sub    eax,0x6e
  414471:	xor    al,0x6d
  414473:	call   DWORD PTR [eax+0x32]
  414476:	clc    
  414477:	push   cs
  414478:	sbb    eax,DWORD PTR [edx-0x35bc8a94]
  41447e:	sar    ebx,0xac
  414481:	sub    bl,BYTE PTR [edx+esi*1-0x78]
  414485:	add    ch,BYTE PTR [ebp+0x6a]
  414488:	dec    ebx
  414489:	mov    bl,BYTE PTR [ecx-0x248df5d8]
  41448f:	cmp    eax,0x6803b158
  414494:	dec    ecx
  414495:	jb     0x41449a
  414497:	xor    BYTE PTR [ebx-0x5b],0x45
  41449b:	push   DWORD PTR [esi+eiz*2+0x43]
  41449f:	je     0x4144dd
  4144a1:	and    dl,ah
  4144a3:	(bad)  
  4144a4:	ficomp WORD PTR [ecx+0x5b]
  4144a7:	sbb    DWORD PTR [edi+0x3a],ebx
  4144aa:	ins    BYTE PTR es:[edi],dx
  4144ab:	call   0xffadf3f2
  4144b0:	loope  0x414519
  4144b2:	ins    BYTE PTR es:[edi],dx
  4144b3:	jne    0x414508
  4144b5:	cmp    cl,ch
  4144b7:	sti    
  4144b8:	cmp    al,0x9c
  4144ba:	fldenv [edx]
  4144bc:	xor    al,0x1e
  4144be:	cld    
  4144bf:	out    0xbb,eax
  4144c1:	or     DWORD PTR [ebp-0x30fdb94],esp
  4144c7:	ins    BYTE PTR es:[edi],dx
  4144c8:	xchg   esi,eax
  4144c9:	adc    DWORD PTR [ecx-0x719cef1b],eax
  4144cf:	ins    BYTE PTR es:[edi],dx
	...
  4144f8:	xchg   esi,eax
  4144f9:	gs xchg dh,dh
  4144fc:	dec    esp
  4144fd:	jno    0x41451e
  4144ff:	inc    esp
  414500:	cld    
  414501:	bound  esp,QWORD PTR [eax+0x14094f41]
  414507:	jns    0x4144e8
  414509:	xchg   BYTE PTR ds:0xd2ba7d6f,ch
  41450f:	add    esi,DWORD PTR [ecx+0xa]
  414512:	push   esi
  414513:	test   BYTE PTR [ecx+esi*2-0x17],0x43
  414518:	int3   
  414519:	bound  esi,QWORD PTR [eax-0x3a]
  41451c:	ror    BYTE PTR [esi-0x379b2c0c],0xe8
  414523:	js     0x41459b
  414525:	mov    ebp,0xe2acc300
  41452a:	in     eax,0x3
  41452c:	pop    ds
  41452d:	(bad)  
  41452e:	nop
  41452f:	ss push edi
  414531:	enter  0xd4e8,0xac
  414535:	int3   
  414536:	jae    0x41453b
  414538:	dec    ebx
  414539:	push   cs
  41453a:	sub    edi,esi
  41453c:	gs mov ebx,0x6290db10
  414542:	not    dl
  414544:	in     al,dx
  414545:	or     cl,ch
  414547:	pop    esp
  414548:	lods   eax,DWORD PTR ds:[esi]
  414549:	icebp  
  41454a:	aaa    
  41454b:	xor    BYTE PTR [edx],cl
  41454d:	or     DWORD PTR [ecx],edi
  41454f:	imul   edx,esi,0x10
  414552:	ror    esi,0x6d
  414555:	(bad)  
  414556:	into   
  414557:	pop    esp
  414558:	lds    eax,FWORD PTR [edi-0x3a]
  41455b:	imul   eax,DWORD PTR [eax],0x0
	...
  414582:	add    BYTE PTR [eax],al
  414584:	mov    bl,0xc6
  414586:	hlt    
  414587:	les    edi,FWORD PTR [ebx+edi*4]
  41458a:	inc    eax
  41458c:	pop    eax
  41458d:	jl     0x41458f
  41458f:	jmp    0x6b5e7c1
  414594:	stc    
  414595:	imul   edi,DWORD PTR [edx],0x5062b0ad
  41459b:	add    DWORD PTR [edi+0x9],ecx
  41459e:	out    dx,eax
  41459f:	dec    edi
  4145a0:	out    dx,eax
  4145a1:	mov    eax,0xb94f2833
  4145a6:	(bad)  
  4145a7:	hlt    
  4145a8:	add    BYTE PTR [edx+0x2c],ch
  4145ab:	mov    fs,WORD PTR [eax+0x62]
  4145ae:	call   0xffa3cac4
  4145b3:	push   edx
  4145b4:	dec    esi
  4145b5:	retf   
  4145b6:	jg     0x4145d7
  4145b8:	inc    edi
  4145b9:	fdiv   st(1),st
  4145bb:	scas   eax,DWORD PTR es:[edi]
  4145bc:	ins    BYTE PTR es:[edi],dx
  4145bd:	push   ss
  4145be:	rcl    BYTE PTR [eax+0x46ff6260],0x3d
  4145c5:	mov    bl,0x38
  4145c7:	out    0xbb,al
  4145c9:	xchg   esp,eax
  4145ca:	(bad)  
  4145cb:	mov    esp,0xe175622c
  4145d0:	adc    BYTE PTR [ebp-0x3dcfd941],bl
  4145d6:	pop    ebp
  4145d7:	xor    BYTE PTR ds:0x15bc000d,al
  4145dd:	jne    0x414647
  4145df:	jmp    0x91ffb82c
  4145e4:	jge    0x4145fb
  4145e6:	inc    ecx
  4145e7:	jmp    0x4145ec
	...
  414610:	icebp  
  414611:	fisttp DWORD PTR [ebx]
  414613:	idiv   BYTE PTR [ebx+0x9]
  414616:	call   0xffa32f21
  41461b:	push   ecx
  41461c:	dec    esi
  41461d:	or     edi,ebp
  41461f:	lahf   
  414620:	sbb    cl,0x33
  414623:	sub    BYTE PTR [edi+0x62],cl
  414626:	jne    0x414605
  414628:	loope  0x414605
  41462a:	pop    es
  41462b:	add    BYTE PTR [edx],bl
  41462d:	mov    bh,0xe5
  41462f:	(bad)  
  414630:	std    
  414631:	sbb    eax,0x3a2208c2
  414636:	mov    ch,ah
  414638:	fstp   QWORD PTR [ecx+0xb]
  41463b:	call   0x4011b1
  414640:	sbb    ebp,ecx
  414642:	jae    0x41465e
  414644:	dec    edx
  414645:	push   edx
  414646:	xor    eax,DWORD PTR [ecx+0x22]
  414649:	cmp    eax,0xf3b7d8e7
  41464e:	(bad)  
  41464f:	push   eax
  414650:	(bad)  
  414651:	hlt    
  414652:	je     0x41465c
  414654:	retf   0xff7f
  414657:	call   FWORD PTR [ebp-0x3c]
  41465a:	aad    0xc1
  41465c:	ins    DWORD PTR es:[edi],dx
  41465d:	repz enter 0xdac2,0xc
  414662:	push   ebp
  414663:	mov    ecx,DWORD PTR [esi+0x8fcc487]
  414669:	or     eax,0x590d086a
  41466e:	pop    es
  41466f:	call   0x40f87e
	...
  41469c:	sub    ecx,DWORD PTR [ecx-0x5]
  41469f:	push   0xffffffa2
  4146a1:	inc    esp
  4146a2:	dec    edi
  4146a3:	xor    eax,0x7d680cf3
  4146a8:	jbe    0x4146ef
  4146aa:	(bad)  
  4146ab:	(bad)  
  4146ac:	ja     0x4146c9
  4146ae:	sub    DWORD PTR [ecx-0x5e],eax
  4146b1:	les    edi,FWORD PTR [ebp+0xaf34dc4]
  4146b7:	shl    dh,0xf
  4146ba:	push   eax
  4146bb:	push   0xbeef0c63
  4146c0:	shl    bl,cl
  4146c2:	je     0x4146cc
  4146c4:	jp     0x41472e
  4146c6:	loop   0x4146c7
  4146c8:	jge    0x414687
  4146ca:	(bad)  
  4146cb:	ror    DWORD PTR [ebx+0x37],0x69
  4146cf:	push   0x4b
  4146d1:	retf   0x34d3
  4146d4:	mov    dh,BYTE PTR [edx-0x25]
  4146d7:	mov    eax,ds:0xff043177
  4146dc:	jle    0x41473d
  4146de:	sbb    al,BYTE PTR [ecx+0x4b]
  4146e1:	dec    edx
  4146e2:	jns    0x4146a8
  4146e4:	and    al,0xa7
  4146e6:	std    
  4146e7:	mov    edi,0x67d35697
  4146ec:	dec    edx
  4146ed:	jb     0x414747
  4146ef:	mov    esi,0x7ef8f7b
  4146f4:	repz pop ss
  4146f6:	gs (bad) 
  4146f8:	cld    
  4146f9:	jns    0x4146c4
  4146fb:	shl    ah,0xd6
  4146fe:	(bad)  
	...
  414728:	adc    ch,BYTE PTR fs:[edi]
  41472b:	inc    ecx
  41472c:	dec    ebx
  41472d:	cmp    al,BYTE PTR [edi+0x34]
  414730:	mov    dh,BYTE PTR [edx+0x68]
  414733:	xor    eax,0xffc3091c
  414738:	in     al,0x51
  41473a:	aas    
  41473b:	inc    esp
  41473d:	pop    edx
  41473e:	inc    ebx
  41473f:	je     0x41478d
  414741:	adc    bl,0xfe
  414744:	ds push 0x5b
  414747:	or     ch,BYTE PTR [esi+ebp*1+0x315ee869]
  41474e:	imul   edi,edi,0x5fdb7231
  414754:	pop    esi
  414755:	mov    cl,0x3
  414757:	push   0xffc23547
  41475c:	test   DWORD PTR [eax+esi*1+0x5b720a29],ebx
  414763:	ss (bad) 
  414765:	push   esi
  414766:	push   0xf7d58b0b
  41476b:	dec    edi
  41476c:	sti    
  41476d:	or     dh,ah
  41476f:	out    dx,al
  414770:	inc    esp
  414771:	jno    0x41473c
  414773:	imul   edx,DWORD PTR [edi+ebx*2-0x3f],0xce5f8bfc
  41477b:	fld    QWORD PTR [edi+eiz*8+0x4f]
  41477f:	das    
  414780:	mov    cl,BYTE PTR [ecx]
  414782:	push   ecx
  414783:	ret    
  414784:	jg     0x41474e
  414786:	call   0x57bdf3
  41478b:	ret    
	...
  4147b4:	and    al,0x67
  4147b6:	cmc    
  4147b7:	aas    
  4147b8:	sbb    al,0x5f
  4147ba:	repnz inc ebx
  4147bc:	lahf   
  4147bd:	push   cs
  4147be:	cmp    esp,edx
  4147c0:	or     eax,0xbd5be0d5
  4147c5:	pop    edi
  4147c6:	xchg   BYTE PTR [eax-0xd],ch
  4147c9:	push   0xf3f468a9
  4147ce:	aam    0x68
  4147d0:	jbe    0x4147e3
  4147d2:	or     DWORD PTR [ebx-0x1b],0x42dd665e
  4147d9:	pop    esi
  4147da:	aam    0xfb
  4147dc:	in     al,dx
  4147dd:	dec    edi
  4147de:	push   edi
  4147df:	push   0x6909f3cc
  4147e4:	adc    DWORD PTR ds:[ecx+0x3f],edx
  4147e8:	mov    ebp,0x3e683e5e
  4147ed:	pop    ebp
  4147ee:	ss out dx,al
  4147f0:	inc    esp
  4147f1:	jno    0x4147ea
  4147f3:	test   eax,0x45305ea4
  4147f8:	inc    edi
  4147f9:	or     DWORD PTR [esp+edi*2-0x863a159],esi
  414800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414801:	popa   
  414802:	and    eax,0x29128468
  414807:	out    dx,eax
  414808:	push   cs
  414809:	icebp  
  41480a:	sub    BYTE PTR [esi],0xa
  41480d:	or     DWORD PTR [eax],eax
  41480f:	cdq    
  414810:	adc    BYTE PTR [esp+eax*8+0x4fb8ecee],cl
  414817:	cmp    DWORD PTR [eax],eax
	...
  41483d:	add    BYTE PTR [eax],al
  41483f:	add    BYTE PTR [edi+0x5e],bh
  414842:	dec    esi
  414844:	lods   eax,DWORD PTR ds:[esi]
  414845:	icebp  
  414846:	je     0x414864
  414848:	xchg   BYTE PTR [esi+0x4f],bl
  41484b:	into   
  41484c:	cmp    al,BYTE PTR [esi]
  41484e:	call   0xff9ff26d
  414853:	and    DWORD PTR [edi],edx
  414855:	or     DWORD PTR [eax],eax
  414857:	(bad)  
  414858:	in     eax,0xf0
  41485a:	xor    esp,0xf
  41485d:	pop    esi
  41485e:	dec    edi
  41485f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414860:	sbb    al,BYTE PTR [esi]
  414862:	call   0xff9ff445
  414867:	xor    edi,ebp
  414869:	pop    es
  41486a:	add    BYTE PTR [esi-0x53],bh
  41486d:	lock xchg ecx,eax
  41486f:	mov    esp,0x7e4f5e07
  414874:	cli    
  414875:	add    eax,0x5e6bc2e8
  41487a:	inc    DWORD PTR [ecx+0x66ff9e14]
  414880:	push   ds
  414881:	dec    ebx
  414882:	or     cl,ch
  414884:	sti    
  414885:	xchg   edx,eax
  414886:	in     al,dx
  414887:	push   0xffffff8b
  414889:	pop    ebp
  41488a:	push   0xffffffe9
  41488c:	mov    ds:0xc0bcff10,al
  414891:	gs jns 0x414910
  414894:	sub    al,0x5e
  414896:	mov    DWORD PTR [esp-0x65d1e60d],ebp
  41489d:	add    eax,0x5e2469e8
  4148a2:	call   DWORD PTR [ebx+0x0]
	...
  4148cc:	imul   ebx,DWORD PTR [esi+0x75],0xfed6f0e1
  4148d3:	push   cs
  4148d4:	in     al,dx
  4148d5:	repnz sbb eax,DWORD PTR [eax]
  4148d8:	inc    ebp
  4148d9:	pop    eax
  4148da:	pop    es
  4148db:	call   0x402fa6
  4148e0:	jne    0x41493a
  4148e2:	sti    
  4148e3:	(bad)  
  4148e4:	fbld   TBYTE PTR [ecx-0x19]
  4148e7:	xchg   ebx,eax
  4148e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148e9:	out    0xfe,al
  4148eb:	leave  
  4148ec:	mov    al,ds:0xe954ff5d
  4148f1:	mov    ch,0x69
  4148f3:	add    BYTE PTR [edx+0x32413514],cl
  4148f9:	inc    ecx
  4148fa:	mov    esp,0xff056335
  4148ff:	xor    eax,0x40fe2d
  414904:	or     dl,BYTE PTR [edx+eax*8-0x1]
  414908:	in     eax,0x5f
  41490a:	mov    edi,0xfe391f74
  41490f:	jne    0x414923
  414911:	in     al,0x74
  414913:	or     al,0x42
  414915:	in     al,0x74
  414917:	or     dl,bl
  414919:	call   0xbfdd:0xc075ffe4
  414920:	jne    0x414905
  414922:	imul   eax,DWORD PTR [eax],0x4135144a
  414928:	repnz inc eax
  41492a:	mov    esp,0x6808a335
  41492f:	add    al,BYTE PTR [eax]
	...
  414955:	add    BYTE PTR [eax],al
  414957:	add    dl,ah
  414959:	or     BYTE PTR [eax-0x135ed18],al
  41495f:	(bad)  
  414960:	mov    ecx,0xd21573c8
  414965:	jecxz  0x4149db
  414967:	adc    BYTE PTR [ebp+0x59],dh
  41496a:	or     edx,DWORD PTR [eax+0x75]
  41496d:	pop    ecx
  41496e:	pop    es
  41496f:	call   0x4005a5
  414974:	cmp    dh,BYTE PTR [ebx-0x41]
  414977:	dec    DWORD PTR [ebx-0xd]
  41497a:	gs jne 0x4149d8
  41497d:	or     esi,eax
  41497f:	or     esi,ebx
  414981:	push   ds
  414982:	xor    BYTE PTR [ecx+0x4b],al
  414985:	pop    ebx
  414986:	out    dx,eax
  414987:	pop    es
  414988:	arpl   WORD PTR [edi+ebx*2],bx
  41498b:	jmp    DWORD PTR [ecx+ebp*1+0x41]
  41498f:	or     al,0x4b
  414991:	sbb    eax,0xa6c8ec79
  414996:	push   0xf9c84b6a
  41499b:	(bad)  
  41499c:	mov    esi,0xffbe5b6a
  4149a1:	inc    edx
  4149a2:	mov    DWORD PTR gs:[esi+0x2cffdc9e],ecx
  4149a9:	inc    ebx
  4149aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149ab:	push   0xffc254c5
  4149b0:	sbb    eax,0xabe7fbfd
  4149b5:	jnp    0x414a1c
  4149b7:	jmp    DWORD PTR [ebx+0xef0371]
	...
  4149e1:	add    BYTE PTR [eax],al
  4149e3:	add    ch,al
  4149e5:	or     DWORD PTR [ebx+0x64728a35],ebx
  4149eb:	jne    0x414a30
  4149ed:	jp     0x4149a5
  4149ef:	(bad)  
  4149f0:	in     al,dx
  4149f1:	shl    BYTE PTR [ebp+esi*2-0x19],cl
  4149f5:	jmp    0xffa8:0x1ff307ee
  4149fc:	aam    0x18
  4149fe:	inc    edx
  4149ff:	add    al,0x4b
  414a01:	popf   
  414a02:	js     0x4149f0
  414a04:	retf   0x4c25
  414a07:	idiv   DWORD PTR [edx+eax*8-0x7e48ba8a]
  414a0e:	fs jne 0x414a50
  414a11:	adc    ebp,DWORD PTR [edi]
  414a13:	aaa    
  414a14:	jb     0x4149c7
  414a16:	add    ebp,eax
  414a18:	mov    dh,0x8
  414a1a:	js     0x414a20
  414a1c:	dec    ebx
  414a1d:	adc    BYTE PTR [ecx],ch
  414a1f:	cmc    
  414a20:	mov    DWORD PTR [eax-0x18],0xa4444b03
  414a27:	imul   ecx,DWORD PTR [ebx+0x9],0xffffffe9
  414a2b:	add    ecx,DWORD PTR [ebp+eax*8+0x94464f4]
  414a32:	jmp    0xe932af10
  414a37:	fstp   DWORD PTR [ecx+esi*8-0x18]
  414a3b:	jbe    0x414a4b
  414a3d:	push   ebp
  414a3e:	cmp    DWORD PTR [edi-0x3a],esi
  414a41:	push   esp
  414a42:	fisub  WORD PTR [esp+eax*2-0x46]
  414a46:	int    0xee
	...
  414a70:	xor    al,0x5b
  414a72:	cmp    al,0x68
  414a74:	and    esp,ebx
  414a76:	push   edi
  414a77:	add    ecx,DWORD PTR [ebx+0xe]
  414a7a:	test   eax,0x52704fef
  414a7f:	add    cl,BYTE PTR [ebx+0x9]
  414a82:	adc    DWORD PTR [ebx+eiz*2-0x699b1738],ebx
  414a89:	or     eax,0x5b097981
  414a8e:	mov    ss,ebx
  414a90:	sar    DWORD PTR [ecx],1
  414a92:	je     0x414b12
  414a94:	call   DWORD PTR [edx+0x7e]
  414a97:	fs fwait
  414a99:	mov    bh,0x80
  414a9b:	jmp    0x7aafa5aa
  414aa0:	(bad)  
  414aa1:	pop    ecx
  414aa2:	pop    esi
  414aa3:	fs aam 0x71
  414aa6:	cmp    DWORD PTR [ebp+0x3c35acc],esp
  414aac:	xor    ebp,DWORD PTR [edi]
  414aae:	pop    ss
  414aaf:	ret    
  414ab0:	mov    esp,0xbc737c5b
  414ab5:	pop    edx
  414ab6:	ds fs jbe 0x414acc
  414aba:	add    BYTE PTR [eax],al
  414abc:	mov    BYTE PTR [edx-0x19],bl
  414abf:	sbb    DWORD PTR [ecx],ecx
  414ac1:	pop    edx
  414ac2:	push   DWORD PTR [eax+0x15]
  414ac5:	neg    DWORD PTR gs:[esi]
  414ac8:	daa    
  414ac9:	out    dx,eax
  414aca:	inc    DWORD PTR [eax-0x16beecd4]
  414ad0:	out    0x93,eax
  414ad2:	lock inc BYTE PTR [eax]
	...
  414af9:	add    BYTE PTR [eax],al
  414afb:	add    al,ch
  414afd:	pop    ecx
  414afe:	push   DWORD PTR [edi+ebx*1+0xe94130]
  414b05:	xchg   edi,eax
  414b06:	shr    esi,0xe8
  414b09:	pop    DWORD PTR [ebp-0xa60f2b]
  414b0f:	push   ebx
  414b10:	inc    edi
  414b11:	icebp  
  414b12:	xor    bl,BYTE PTR [edi]
  414b14:	push   cs
  414b15:	pop    edx
  414b16:	(bad)  
  414b17:	xchg   esp,eax
  414b18:	xchg   edi,eax
  414b19:	push   edx
  414b1a:	inc    esi
  414b1c:	test   al,0x14
  414b1e:	aaa    
  414b1f:	adc    BYTE PTR [esi],al
  414b21:	pop    edx
  414b22:	out    0x5d,eax
  414b24:	mov    ds,WORD PTR [edx-0x1]
  414b27:	pusha  
  414b28:	shl    BYTE PTR [eax-0x9],cl
  414b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b2c:	test   al,0xef
  414b2e:	call   DWORD PTR [eax]
  414b30:	add    dl,BYTE PTR [ecx+eax*2]
  414b33:	jmp    0x9731dfa1
  414b38:	push   0x51bcff5a
  414b3d:	xor    BYTE PTR [ecx-0x17],al
  414b40:	pusha  
  414b41:	rol    eax,cl
  414b43:	jbe    0x414bad
  414b45:	nop
  414b46:	test   DWORD PTR [ecx+0x74ff5a80],ecx
  414b4c:	ret    0xf740
  414b4f:	pop    esi
  414b50:	push   0x62a667b9
  414b55:	enter  0x4dff,0xe2
  414b59:	pop    eax
  414b5a:	test   DWORD PTR [eax],0x35fee60d
	...
  414b88:	mov    ch,0x2c
  414b8a:	inc    ecx
  414b8b:	add    BYTE PTR [edx],cl
  414b8d:	xchg   edx,eax
  414b8e:	sar    bh,0x6d
  414b91:	or     al,al
  414b93:	je     0x414be0
  414b95:	cmp    BYTE PTR [ebp-0x119ca28],0x4
  414b9c:	out    0x55,eax
  414b9e:	(bad)  
  414b9f:	xor    BYTE PTR ds:0x4df7dc90,bl
  414ba5:	out    0x4f,al
  414ba7:	call   0x40f32e
  414bac:	dec    ecx
  414bad:	popa   
  414bae:	or     al,al
  414bb0:	(bad)  
  414bb1:	movmskps ebp,xmm0
  414bb4:	push   esi
  414bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb6:	(bad)  
  414bb7:	jmp    DWORD PTR [ebp+0x1df7dc90]
  414bbd:	in     al,dx
  414bbe:	adc    al,0x0
  414bc0:	xor    cl,BYTE PTR ds:0xb406bd83
  414bc6:	(bad)  
  414bc7:	jmp    DWORD PTR [edx]
  414bc9:	inc    ecx
  414bca:	sbb    DWORD PTR fs:[edi-0x12000918],0xc
  414bd2:	je     0x414c30
  414bd4:	mov    eax,ds:0xadf7e8a9
  414bd9:	jmp    0x414bda
  414bdb:	jae    0x414c1e
  414bdd:	gs (bad) 
  414bdf:	(bad)  
  414be0:	jge    0x414b8c
  414be2:	push   DWORD PTR [ebp-0x6]
  414be5:	in     al,0x6a
  414be7:	mov    edx,0xb5feeb6d
	...
  414c14:	into   
  414c15:	mov    bl,0xfe
  414c17:	jmp    FWORD PTR [ebp+0x31]
  414c1a:	pop    es
  414c1b:	call   0x40c2cd
  414c20:	ins    DWORD PTR es:[edi],dx
  414c21:	jno    0x414c0b
  414c23:	test   DWORD PTR [ebx-0x41],0x6a36ff61
  414c2a:	imul   esi,DWORD PTR [ecx-0x9e300f],0xfffffff6
  414c31:	into   
  414c32:	pop    ecx
  414c33:	jmp    DWORD PTR [edi+ebx*1-0x7c4cf828]
  414c3a:	popf   
  414c3b:	call   DWORD PTR [edi+ebp*1-0x86b1f68]
  414c42:	popa   
  414c43:	(bad)  
  414c44:	(bad)  
  414c45:	imul   ebp,DWORD PTR [ebx-0x6b],0xff6207c1
  414c4c:	mov    esi,0x6cff5a2e
  414c51:	push   edi
  414c52:	xlat   BYTE PTR ds:[ebx]
  414c53:	pop    es
  414c54:	jae    0x414c9b
  414c56:	popf   
  414c57:	call   FWORD PTR [edi+eiz*2-0x69]
  414c5b:	in     al,0x5c
  414c5d:	outs   dx,DWORD PTR ds:[esi]
  414c5e:	popa   
  414c5f:	call   0xffa2c21e
  414c64:	inc    esp
  414c65:	jne    0x414cd7
  414c67:	idiv   DWORD PTR [edi+eax*2]
  414c6a:	ins    BYTE PTR es:[edi],dx
  414c6b:	xchg   dh,dh
  414c6d:	dec    esi
  414c6e:	popa   
  414c6f:	push   esi
  414c71:	cmp    DWORD PTR [ecx-0x1],ebx
  414c74:	and    al,0x4a
  414c76:	fnstsw WORD PTR [eax+eax*1+0x0]
	...
  414c9d:	add    BYTE PTR [eax],al
  414c9f:	add    BYTE PTR [edi+eiz*4],bl
  414ca2:	popa   
  414ca3:	mov    ch,0x2b
  414ca5:	ja     0x414d08
  414ca7:	jmp    DWORD PTR [ebx]
  414ca9:	repnz sahf 
  414cab:	inc    DWORD PTR [edi+edi*2]
  414cae:	xchg   edi,eax
  414caf:	lock hlt 
  414cb1:	xchg   BYTE PTR [ecx-0x18],ah
  414cb4:	outs   dx,BYTE PTR ds:[esi]
  414cb5:	int    0x60
  414cb7:	(bad)  
  414cb8:	in     al,dx
  414cb9:	sub    al,0x5c
  414cbb:	jmp    0xffa22cdc
  414cc0:	fcomp  QWORD PTR [edi+ebx*2-0x18]
  414cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cc5:	or     BYTE PTR [esi+0x4],dh
  414cc8:	dec    ebx
  414cc9:	inc    edx
  414cca:	sub    ecx,DWORD PTR [ebx+ecx*2]
  414ccd:	mov    esi,0x4cc87061
  414cd2:	push   ecx
  414cd3:	out    dx,al
  414cd4:	mov    ah,0xe1
  414cd6:	icebp  
  414cd7:	pusha  
  414cd8:	add    DWORD PTR ss:[ecx-0x27],edx
  414cdc:	loop   0x414d35
  414cde:	mov    eax,DWORD PTR ss:[esi]
  414ce1:	push   ebp
  414ce2:	pop    esp
  414ce3:	(bad)  
  414ce4:	pushf  
  414ce5:	mov    eax,0xca567090
  414cea:	call   0xa85eeeda
  414cef:	add    edi,DWORD PTR [ebp+ebx*1-0x2a]
  414cf3:	sub    cl,BYTE PTR [edx]
  414cf5:	or     DWORD PTR [ecx],edx
  414cf7:	sbb    eax,0xcfe578b
  414cfc:	mov    ebx,esp
  414cfe:	fnsave [ebx+0x70e909e4]
	...
  414d2c:	xchg   ebp,eax
  414d2d:	push   edi
  414d2e:	pop    esp
  414d2f:	pop    esp
  414d30:	sti    
  414d31:	push   edi
  414d32:	push   esp
  414d33:	or     al,0x33
  414d35:	lods   al,BYTE PTR ds:[esi]
  414d36:	mov    bh,0x60
  414d38:	cmp    al,0x62
  414d3a:	loope  0x414cda
  414d3c:	xor    al,0x57
  414d3e:	je     0x414d06
  414d40:	xor    al,0xba
  414d42:	push   eax
  414d43:	bound  ebx,QWORD PTR [esi-0x38]
  414d46:	call   0x285e4f36
  414d4b:	add    al,0x14
  414d4d:	sbb    eax,0x98a2ade
  414d52:	xchg   ecx,eax
  414d53:	or     BYTE PTR [ebx],cl
  414d55:	push   edi
  414d56:	xchg   esi,eax
  414d57:	or     al,0xb
  414d59:	fdivrp st(5),st
  414d5b:	mov    bl,0x6c
  414d5d:	or     ebp,ecx
  414d5f:	jo     0x414d0e
  414d61:	push   esi
  414d62:	hlt    
  414d63:	pop    ebx
  414d64:	jnp    0x414dbc
  414d66:	add    ah,bh
  414d68:	push   eax
  414d69:	popa   
  414d6a:	outs   dx,BYTE PTR ds:[esi]
  414d6b:	(bad)  
  414d6c:	imul   edx,DWORD PTR [esi-0x18],0x3d
  414d70:	lods   al,BYTE PTR ds:[esi]
  414d71:	push   esi
  414d72:	call   ecx
  414d74:	pop    edx
  414d75:	pop    ds
  414d76:	inc    ecx
  414d77:	jmp    0x414929a7
  414d7c:	xchg   ebx,eax
  414d7d:	push   ebp
  414d7e:	inc    DWORD PTR [esi+0x2b]
  414d81:	fdiv   st(3),st
  414d83:	ds jge 0x414d94
  414d86:	call   0xff980c7e
  414d8b:	and    BYTE PTR [esi],cl
  414d8d:	or     eax,0xbc00
	...
  414db6:	add    BYTE PTR [eax],al
  414db8:	mov    edi,0x44258165
  414dbd:	pop    esi
  414dbe:	call   DWORD PTR [esi]
  414dc0:	int    0xcc
  414dc2:	sti    
  414dc3:	mov    ecx,0x60bdbeb
  414dc8:	push   ebp
  414dc9:	push   ds
  414dca:	sub    DWORD PTR [eax+0x67fd6148],ebp
  414dd0:	dec    eax
  414dd1:	or     DWORD PTR [ebx],ecx
  414dd3:	sub    DWORD PTR [ebx],edi
  414dd5:	mov    ecx,es
  414dd7:	call   0x25085724
  414ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ddd:	or     DWORD PTR [eax],eax
  414ddf:	jmp    0xd5869c2c
  414de4:	xchg   esp,eax
  414de5:	push   cs
  414de6:	add    cl,ch
  414de8:	and    dl,BYTE PTR [esi+0x69]
  414deb:	jmp    0xe9aaa422
  414df0:	mov    ebx,0xba19f3cb
  414df5:	mov    esi,esp
  414df7:	sahf   
  414df8:	ins    BYTE PTR es:[edi],dx
  414df9:	push   esi
  414dfa:	push   eax
  414dfb:	sahf   
  414dfc:	and    bl,BYTE PTR [esi-0x1]
  414dff:	sbb    al,0x6b
  414e01:	popa   
  414e02:	iret   
  414e03:	pop    edi
  414e04:	dec    edi
  414e05:	or     DWORD PTR [ebx],ecx
  414e07:	add    BYTE PTR [edx+0x6ee90430],ah
  414e0d:	or     al,0x0
  414e0f:	add    BYTE PTR [edx-0x5b],cl
  414e12:	sub    BYTE PTR [ecx-0x1e],al
  414e15:	mov    dh,0x74
  414e17:	or     al,0x7a
  414e19:	mov    ebx,0xffbe
	...
  414e42:	add    BYTE PTR [eax],al
  414e44:	and    eax,0x27d08a9d
  414e49:	xor    ah,0xf7
  414e4c:	add    eax,0x1a524fb6
  414e51:	jmp    0x414e11
  414e53:	jmp    DWORD PTR [ebp-0x7c]
  414e56:	test   eax,esi
  414e58:	pop    ebp
  414e59:	mov    dh,0xfe
  414e5b:	call   0x40c3fa
  414e60:	mov    eax,0x9c6b6809
  414e65:	dec    esp
  414e66:	(bad)  
  414e67:	(bad)  
  414e68:	pop    ds
  414e69:	mov    ebp,0xb645fff6
  414e6e:	xor    al,0x37
  414e70:	fwait
  414e71:	dec    esp
  414e72:	jmp    edi
  414e74:	mov    dh,BYTE PTR [esi-0x1]
  414e77:	(bad)  
  414e78:	jmp    0x414ef9
  414e7a:	in     al,0xf7
  414e7c:	gs mov dh,0x69
  414e7f:	add    dl,bh
  414e81:	nop
  414e82:	xor    eax,0xb4b43241
  414e87:	lock sbb eax,0x5ffffeb4
  414e8d:	cld    
  414e8e:	sub    BYTE PTR [ecx+0x22],al
  414e91:	loope  0x414eac
  414e93:	mov    edi,0x8588b3e5
  414e98:	push   es
  414e99:	mov    esp,0xd88fffe
  414e9e:	push   0xff4dec5d
  414ea3:	(bad)  
  414ea4:	lahf   
  414ea5:	mov    eax,0xfff6
	...
  414ece:	add    BYTE PTR [eax],al
  414ed0:	dec    ebx
  414ed1:	jnp    0x414f31
  414ed3:	xor    eax,0xffc4493c
  414ed8:	in     al,0x8e
  414eda:	popf   
  414edb:	jmp    esp
  414edd:	fld    DWORD PTR [edi+0x5ddbd4e0]
  414ee3:	push   0x4b
  414ee5:	or     ah,dl
  414ee7:	xor    eax,0xb55e628a
  414eec:	mov    ebx,0xbcff5dbb
  414ef1:	cmc    
  414ef2:	push   ss
  414ef3:	sub    DWORD PTR [edx],ecx
  414ef5:	bound  ebp,QWORD PTR [ebx-0x22]
  414ef8:	in     eax,dx
  414ef9:	retf   
  414efa:	pop    ebp
  414efb:	mov    esi,ecx
  414efd:	mov    edx,0x489cff55
  414f02:	add    ebp,DWORD PTR [eax+0x1f]
  414f05:	pop    esp
  414f06:	(bad)  
  414f07:	dec    DWORD PTR [ebp-0x7b08ad4b]
  414f0d:	repz pop ebp
  414f0f:	xor    eax,0xffc44934
  414f14:	ins    BYTE PTR es:[edi],dx
  414f15:	and    bl,BYTE PTR [ebp-0x78269301]
  414f1b:	fcomp  QWORD PTR [ebx+edx*2+0x5d]
  414f1f:	sbb    DWORD PTR [esi+0x54ff5606],0x62
  414f26:	xlat   BYTE PTR ds:[ebx]
  414f27:	fs enter 0x70ad,0xf7
  414f2c:	inc    esp
  414f2d:	xor    eax,DWORD PTR [esp+esi*2]
  414f30:	lahf   
  414f31:	fistp  WORD PTR [esi+0xe8]
	...
  414f5b:	add    BYTE PTR [ebx+eax*2],bh
  414f5e:	pop    ebp
  414f5f:	add    BYTE PTR [edi+0x24ffebef],dh
  414f65:	inc    ebx
  414f66:	sahf   
  414f67:	call   DWORD PTR [esi-0x2cfc9496]
  414f6d:	mov    ds:0x8d6ff5d,al
  414f72:	xchg   ebp,eax
  414f73:	push   ebp
  414f74:	add    al,0x54
  414f76:	sahf   
  414f77:	xlat   BYTE PTR ds:[ebx]
  414f78:	inc    esp
  414f79:	popa   
  414f7a:	ds pushf 
  414f7c:	hlt    
  414f7d:	push   ebx
  414f7e:	mov    ss,WORD PTR [edi+0x5d865be3]
  414f84:	in     al,0xdd
  414f86:	lock imul edx,DWORD PTR [edx-0x2ba2896f],0xffffff9d
  414f8e:	test   DWORD PTR [ebp-0x34],edx
  414f91:	push   ebx
  414f92:	data16 xlat BYTE PTR ds:[ebx]
  414f94:	dec    esp
  414f95:	popa   
  414f96:	and    bl,BYTE PTR [esp+edi*4-0x5468a9ad]
  414f9d:	pop    ebx
  414f9e:	dec    esi
  414f9f:	pop    ebp
  414fa0:	lods   al,BYTE PTR ds:[esi]
  414fa1:	(bad)  
  414fa3:	imul   esi,DWORD PTR [esi-0x6f],0x3e
  414fa7:	pop    ebp
  414fa8:	pushf  
  414fa9:	popf   
  414faa:	adc    eax,0x2e539455
  414faf:	xlat   BYTE PTR ds:[ebx]
  414fb0:	inc    esp
  414fb1:	popa   
  414fb2:	push   es
  414fb3:	pushf  
  414fb4:	test   BYTE PTR [ebx+0x1e],dl
  414fb7:	xchg   edi,eax
  414fb8:	addr16 pop ebx
  414fba:	push   ss
  414fbb:	pop    ebp
  414fbc:	arpl   WORD PTR [ecx],sp
  414fbe:	push   edx
  414fbf:	pop    ebp
	...
  414fe8:	ins    BYTE PTR es:[edi],dx
  414fe9:	push   ebx
  414fea:	cmp    al,0x70
  414fec:	pop    esp
  414fed:	push   ebx
  414fee:	(bad)  
  414fef:	imul   edi,DWORD PTR ds:0x545cf690,0xffffff9d
  414ff6:	add    DWORD PTR [ebp+0x4c],edx
  414ff9:	push   ebx
  414ffa:	shl    eax,1
  414ffc:	add    DWORD PTR [ebx-0x22],edx
  414fff:	pop    esp
  415000:	imul   BYTE PTR [ecx-0x22]
  415003:	pop    esp
  415004:	xor    al,0x62
  415006:	loope  0x414fa0
  415008:	sub    al,0x53
  41500a:	(bad)  
  41500b:	xchg   esi,eax
  41500c:	pop    es
  41500d:	pop    ebx
  41500e:	mov    esi,0x55335c
  415013:	jae    0x41508c
  415015:	push   edx
  415016:	push   DWORD PTR [eax+edi*2+0x5a]
  41501a:	jmp    DWORD PTR [esi-0x6ef82359]
  415020:	push   edi
  415021:	push   ebx
  415022:	call   DWORD PTR [esi-0x690f6369]
  415028:	(bad)  
  415029:	push   edx
  41502a:	call   0xff9412bc
  41502f:	jle    0x415036
  415031:	pop    ebx
  415032:	jmp    0xff93c55e
  415037:	outs   dx,BYTE PTR ds:[esi]
  415038:	cmc    
  415039:	dec    esi
  41503a:	call   0x4b2456
  41503f:	xor    BYTE PTR [edx],cl
  415041:	add    DWORD PTR [eax],eax
  415043:	mov    esp,0x258365c3
  415048:	or     al,0xdf
  41504a:	call   edx
	...
  415074:	push   esp
  415075:	push   edx
  415076:	jne    0x415069
  415078:	xor    BYTE PTR [ebx-0x49],bl
  41507b:	idiv   DWORD PTR ss:[edi+0x45]
  41507f:	sub    eax,0xa835d2a0
  415084:	dec    eax
  415085:	push   edx
  415086:	jne    0x415079
  415088:	lock pop edx
  41508a:	std    
  41508b:	push   ss
  41508c:	pop    ss
  41508d:	push   edx
  41508e:	jne    0x41509d
  415090:	paddusb mm0,QWORD PTR [edi]
  415093:	adc    DWORD PTR [ecx],ebp
  415095:	xchg   ecx,eax
  415096:	(bad)  
  415097:	(bad)  
  415098:	adc    al,BYTE PTR [edi+0x4]
  41509b:	jmp    0x692dd03d
  4150a0:	add    al,0x39
  4150a2:	mul    esi
  4150a4:	mov    al,ds:0xf7dd4584
  4150a9:	push   edx
  4150aa:	jne    0x415091
  4150ac:	xchg   ecx,eax
  4150ad:	sbb    al,0x37
  4150af:	add    BYTE PTR [esi],al
  4150b1:	push   edx
  4150b2:	out    0x0,eax
  4150b4:	push   ss
  4150b5:	add    DWORD PTR [eax],0xec61900
  4150bb:	test   DWORD PTR [eax],ebx
  4150bd:	or     al,0x0
  4150bf:	add    ch,ah
  4150c1:	inc    edi
  4150c2:	test   DWORD PTR [eax],0xc70005f2
  4150c8:	daa    
  4150c9:	mov    ecx,0x5e207fe
  4150ce:	push   0x0
  4150d0:	dec    eax
  4150d1:	or     eax,0xd38006a
  4150d6:	lea    eax,[ebp+0x0]
	...
  4150fd:	add    BYTE PTR [eax],al
  4150ff:	add    BYTE PTR [esi-0x63],dl
  415102:	mov    WORD PTR [ebp-0x149aa],es
  415108:	xor    ch,BYTE PTR [esi+0x382df874]
  41510e:	sti    
  41510f:	call   0x41d1e8
  415114:	test   eax,0xb0573c5
  415119:	mov    al,0x0
  41511b:	add    BYTE PTR [edx-0xcd758a3],dh
  415121:	add    eax,0xddae75ff
  415126:	fdivr  DWORD PTR [ebp-0x2f7551a3]
  41512c:	inc    DWORD PTR [edi-0x51a2080c]
  415132:	dec    edi
  415133:	push   edx
  415134:	dec    edx
  415135:	dec    edi
  415136:	mov    ebp,0x85843dff
  41513b:	lock gs scas al,BYTE PTR es:[edi]
  41513e:	(bad)  
  41513f:	push   0x72
  415141:	pop    ebp
  415142:	(bad)  [esi]
  415144:	mov    ds:0x52b5ff05,eax
  415149:	mov    dh,0xfe
  41514b:	jmp    FWORD PTR ds:0x732936fa
  415151:	add    eax,0x754b25e8
  415156:	pop    edx
  415157:	inc    edx
  415159:	in     eax,0x5e
  41515b:	mul    DWORD PTR [eax+ecx*2]
  41515e:	in     eax,dx
  41515f:	jmp    DWORD PTR [ebp+ebx*4+0x4111]
	...
  41518a:	add    BYTE PTR [eax],al
  41518c:	dec    ebx
  41518d:	xchg   edi,eax
  41518e:	nop
  41518f:	lock adc al,0xa0
  415192:	pop    edx
  415193:	(bad)  
  415194:	ds das 
  415196:	sub    al,0x41
  415198:	dec    ebx
  415199:	jp     0x41519d
  41519b:	mov    ebp,0x858c77f4
  4151a0:	fbstp  TBYTE PTR [edi+0x5a]
  4151a3:	push   DWORD PTR [ecx+0x62]
  4151a6:	jmp    0x415179
  4151a8:	adc    eax,0x9eff0421
  4151ad:	rcl    BYTE PTR [ecx-0x1],cl
  4151b0:	int3   
  4151b1:	fisttp WORD PTR [edi]
  4151b3:	aaa    
  4151b4:	jb     0x415157
  4151b6:	add    ebp,eax
  4151b8:	mov    dl,0x6e
  4151ba:	pop    edx
  4151bb:	inc    edx
  4151bd:	(bad)  [edx-0x9]
  4151c0:	lods   al,BYTE PTR ds:[esi]
  4151c1:	mov    edi,0x272cffec
  4151c6:	adc    DWORD PTR [ecx+0x4b],eax
  4151c9:	seto   al
  4151cc:	pushf  
  4151cd:	pop    ss
  4151ce:	pop    edx
  4151cf:	call   DWORD PTR [esi+0x57]
  4151d2:	sub    al,0x41
  4151d4:	dec    ebx
  4151d5:	cli    
  4151d6:	dec    ebp
  4151d7:	mov    esp,0x858bef7c
  4151dc:	imul   ebp,edi,0x59
  4151df:	(bad)  
  4151e0:	mov    esi,0x64f72ee5
  4151e5:	pop    es
  4151e6:	mov    bl,0x67
  4151e8:	je     0x415182
  4151ea:	(bad)  
  4151eb:	call   DWORD PTR [ebp+0xd]
  4151ee:	push   ebx
  4151ef:	test   DWORD PTR [eax],0x0
	...
  415215:	add    BYTE PTR [eax],al
  415217:	add    BYTE PTR [edi+ebx*2+0x59],cl
  41521b:	xor    eax,0xc310097c
  415220:	cmp    al,0x68
  415222:	xchg   ecx,eax
  415223:	cwde   
  415224:	xor    al,0x50
  415226:	loop   0x41526b
  415228:	mov    bh,0xf2
  41522a:	imul   edx,DWORD PTR [edi+0x59c657ff],0x58d8d647
  415234:	pop    ebx
  415235:	sub    BYTE PTR [eax+edi*1+0x14],0x50
  41523a:	scas   al,BYTE PTR es:[edi]
  41523b:	mov    ah,0xec
  41523d:	aad    0x5f
  41523f:	pop    ecx
  415240:	cld    
  415241:	arpl   bp,si
  415243:	or     al,0xb
  415245:	aad    0xee
  415247:	mov    bl,0xe4
  415249:	loope  0x41529a
  41524b:	pop    ecx
  41524c:	in     al,0x47
  41524e:	ins    BYTE PTR es:[edi],dx
  41524f:	cmp    ah,dl
  415251:	dec    edi
  415252:	jle    0x415243
  415254:	aam    0x4f
  415256:	jmp    0x767a18e1
  41525b:	pop    ecx
  41525c:	les    edi,FWORD PTR [eax-0x358aa030]
  415262:	call   0x5e9a50bf
  415267:	pop    ecx
  415268:	lods   al,BYTE PTR ds:[esi]
  415269:	dec    edi
  41526a:	adc    al,0x11
  41526c:	jb     0x415238
  41526e:	call   0x3ece53de
  415273:	pop    ecx
  415274:	ret    0x1185
  415277:	push   ecx
  415278:	mov    WORD PTR [edi+0x6a],cs
  41527b:	xchg   edi,eax
	...
  4152a4:	outs   dx,DWORD PTR ds:[esi]
  4152a5:	push   edi
  4152a6:	es pop ecx
  4152a8:	dec    ebx
  4152a9:	add    BYTE PTR [ebp+0x7d],ah
  4152ac:	dec    ebx
  4152ad:	or     ecx,ebp
  4152af:	test   BYTE PTR [esi+0x6459165c],ch
  4152b5:	or     dh,dh
  4152b7:	jg     0x415286
  4152b9:	or     cl,ch
  4152bb:	add    ecx,eax
  4152bd:	lea    eax,[eax]
  4152bf:	add    edx,edi
  4152c1:	dec    edi
  4152c2:	(bad)  
  4152c3:	jmp    0xe9c2d81b
  4152c8:	dec    eax
  4152c9:	or     DWORD PTR [eax-0x7],ebp
  4152cc:	dec    eax
  4152cd:	pop    esi
  4152ce:	mov    esi,0xe806fdd6
  4152d3:	js     0x4152aa
  4152d5:	dec    esi
  4152d6:	inc    esi
  4152d8:	int    0x5d
  4152da:	idiv   DWORD PTR [esi-0x1e8ab18d]
  4152e0:	mov    al,ds:0xa3aeb564
  4152e5:	dec    esi
  4152e6:	mov    ch,0x91
  4152e8:	fwait
  4152e9:	dec    esi
  4152ea:	call   FWORD PTR [esi-0x4117f8fb]
  4152f0:	mov    ebp,0xd58eff4e
  4152f5:	test   DWORD PTR gs:[esi-0xe8ab17d],0x76b54060
  415300:	jae    0x415350
  415302:	mov    ch,0x8d
  415304:	sbb    ecx,DWORD PTR [esi-0x1]
  415307:	data16 add BYTE PTR [eax],al
	...
  41532e:	add    BYTE PTR [eax],al
  415330:	lea    eax,[esi]
  415332:	call   0xff9018f7
  415337:	push   esi
  415338:	mov    ebp,0x34ef769
  41533d:	dec    esi
  41533e:	jne    0x415331
  415340:	xor    BYTE PTR [ebp+esi*4-0x42760cc2],bl
  415347:	adc    ebx,edi
  415349:	dec    ebp
  41534a:	(bad)  
  41534b:	jmp    0x64c446e4
  415350:	cmp    BYTE PTR [esi-0x1],dl
  415353:	push   ds
  415354:	je     0x41532b
  415356:	adc    DWORD PTR [edx-0x13],esp
  415359:	xor    bh,dh
  41535b:	push   cs
  41535c:	add    ecx,DWORD PTR [esi+0x30]
  41535f:	add    BYTE PTR [ebp+0x3f],al
  415362:	pop    es
  415363:	call   0x40d2e3
  415368:	dec    ecx
  415369:	cld    
  41536a:	imul   eax,DWORD PTR [eax],0xe8073c35
  415370:	inc    edi
  415371:	js     0x415372
  415373:	call   DWORD PTR ds:0x15f7e478
  415379:	mov    dh,0xe7
  41537b:	mov    DWORD PTR [edx-0x6000014b],edi
  415381:	loope  0x415379
  415383:	call   ebp
  415385:	fdivr  QWORD PTR [ebp-0x48]
  415388:	aad    0xb5
  41538a:	(bad)  
  41538b:	mov    ch,0xa
  41538d:	mov    esi,0x39dafffe
  415392:	mov    bh,0xff
	...
  4153bc:	aad    0xb5
  4153be:	mov    ah,0xe0
  4153c0:	int    0xb5
  4153c2:	(bad)  
  4153c3:	call   0x40c112
  4153c8:	lds    esi,FWORD PTR [edi-0x28]
  4153cb:	not    DWORD PTR [ebp-0x4a]
  4153ce:	out    0x5d,eax
  4153d0:	sbb    dh,BYTE PTR [esi-0x4a800002]
  4153d6:	idiv   bh
  4153d8:	and    eax,0x15b851dd
  4153dd:	mov    dh,0xfe
  4153df:	inc    ebp
  4153e0:	sbb    bl,ah
  4153e2:	aam    0xfd
  4153e4:	adc    eax,0x675feb6
  4153e9:	fstp   QWORD PTR [ebx-0x36f65d76]
  4153ef:	ret    0x9aa
  4153f2:	push   ebp
  4153f3:	mov    eax,DWORD PTR [esi-0x76]
  4153f6:	(bad)  
  4153f7:	cld    
  4153f8:	fmul   DWORD PTR [ecx]
  4153fa:	push   0xd
  4153fc:	push   ebp
  4153fd:	cmp    BYTE PTR [edi],al
  4153ff:	call   0xffd1d04f
  415404:	fs call 0xb6354fca
  41540a:	or     eax,0xd04f4b41
  41540f:	pop    es
  415410:	arpl   sp,dx
  415412:	push   edi
  415413:	inc    DWORD PTR [esp+ebx*2-0x30]
  415417:	sti    
  415418:	cmp    al,0xae
  41541a:	or     ebp,eax
  41541c:	les    esi,FWORD PTR [ebp+0x56]
  41541f:	inc    DWORD PTR [eax]
	...
  415445:	add    BYTE PTR [eax],al
  415447:	add    BYTE PTR [edx],al
  415449:	mov    eax,ds:0xe77fffff
  41544e:	add    WORD PTR [edi],0x4e97
  415453:	call   DWORD PTR [esi+ebx*8]
  415456:	mov    edi,0xd0937bfb
  41545b:	or     eax,DWORD PTR [esi+edx*2]
  41545e:	push   cs
  41545f:	sub    DWORD PTR [edx-0x3ead949e],ecx
  415465:	bound  eax,QWORD PTR [ebx]
  415467:	or     ecx,DWORD PTR [ebx]
  415469:	sbb    BYTE PTR fs:[edi+0x49],0x62
  41546e:	add    eax,edi
  415470:	xchg   BYTE PTR [edx+0x624b0003],cl
  415476:	ds inc ebp
  415478:	xlat   BYTE PTR ds:[ebx]
  415479:	sar    ebp,cl
  41547b:	inc    esp
  41547d:	or     BYTE PTR [edx+ebp*2],al
  415480:	dec    ebx
  415481:	cmp    BYTE PTR [ebx],al
  415483:	push   0x4b
  415485:	fnstsw WORD PTR [edi+0x7fe51bf3]
  41548b:	hlt    
  41548c:	pushf  
  41548d:	mov    ebx,0x8d9c5055
  415492:	pop    ebx
  415493:	call   FWORD PTR [esi]
  415495:	push   cs
  415496:	imul   esp,DWORD PTR [ecx+eax*8],0x62
  41549a:	add    ecx,DWORD PTR [ebx]
  41549c:	mov    edx,DWORD PTR [esi+0x929e900]
  4154a2:	jmp    0x4154a7
  4154a4:	dec    ebx
  4154a5:	loope  0x4154f7
  4154a7:	sub    ecx,DWORD PTR [edx]
  4154a9:	or     DWORD PTR [esi],edx
  4154ab:	rol    BYTE PTR [eax],1
	...
  4154d1:	add    BYTE PTR [eax],al
  4154d3:	add    BYTE PTR [eax+0x61],dl
  4154d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154d7:	call   0x86c6:0x33724c5c
  4154de:	cmc    
  4154df:	dec    ebp
  4154e0:	dec    esp
  4154e1:	dec    esp
  4154e2:	cdq    
  4154e3:	mov    cl,0x2c
  4154e5:	jge    0x415519
  4154e7:	push   esi
  4154e8:	cmp    al,0x82
  4154ea:	ins    BYTE PTR es:[edi],dx
  4154eb:	push   esp
  4154ec:	cmp    al,0x4c
  4154ee:	fiadd  WORD PTR [edi+0x55de3cc6]
  4154f4:	and    al,0xb9
  4154f6:	inc    eax
  4154f7:	ficom  WORD PTR [ebp-0x36]
  4154fa:	call   0xb69a3353
  4154ff:	push   ebp
  415500:	or     al,0x4c
  415502:	cld    
  415503:	or     al,0x32
  415505:	retf   0x6be8
  415508:	int    0x8e
  41550a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41550b:	push   ebp
  41550c:	ret    0x8585
  41550f:	dec    ebp
  415510:	in     al,dx
  415511:	dec    ebx
  415512:	add    eax,DWORD PTR [ebx+esi*2]
  415515:	int    0xd5
  415517:	ret    0x4adc
  41551a:	cmp    al,0x54
  41551c:	fmul   QWORD PTR [ebx+0x7e]
  41551f:	push   ebp
  415520:	push   ss
  415521:	adc    al,0xc0
  415523:	ret    0x63c4
  415526:	stc    
  415527:	cdq    
  415528:	mov    esp,0xa77f704b
  41552d:	push   ebx
  41552e:	pop    esi
  41552f:	push   ebp
  415530:	and    DWORD PTR [ecx],ecx
  415532:	rol    DWORD PTR [edx+0x54e8ca5c],0x0
	...
  41555d:	add    BYTE PTR [eax],al
  41555f:	add    dh,dl
  415561:	pop    eax
  415562:	ds push ebp
  415564:	xchg   esp,eax
  415565:	dec    ebx
  415566:	hlt    
  415567:	or     al,0x62
  415569:	retf   0xe8ff
  41556c:	lock mov dh,0xb9
  41556f:	cs push ss
  415571:	add    BYTE PTR [ebp-0xb3f9ef],0x93
  415578:	dec    eax
  415579:	loope  0x415506
  41557b:	fimul  WORD PTR [ecx-0x8ab01b5]
  415581:	push   ebx
  415582:	inc    DWORD PTR [esi]
  415584:	(bad)  
  415585:	adc    eax,0x4b89d037
  41558a:	out    0xbd,eax
  41558c:	loop   0x4155d8
  41558e:	jmp    DWORD PTR [eax-0x44]
  415591:	imul   esi,edi,0x857c9fe6
  415597:	sar    DWORD PTR [edi+0x4a],0xff
  41559b:	cmp    DWORD PTR [edi],esi
  41559d:	test   BYTE PTR [edi],dh
  41559f:	sub    BYTE PTR [edi+0x4a],al
  4155a2:	mov    ch,0xb9
  4155a4:	xchg   DWORD PTR [edx-0x1],ecx
  4155a7:	mov    esi,0x2829123d
  4155ac:	dec    edi
  4155ad:	popa   
  4155ae:	adc    DWORD PTR [ebx-0x69],esi
  4155b1:	dec    edx
  4155b2:	or     ebp,DWORD PTR [ecx+0x5c82f804]
  4155b8:	xor    BYTE PTR [edx-0x1],dl
  4155bb:	xchg   esi,eax
  4155bc:	in     al,0xd5
  4155be:	or     DWORD PTR [esi-0x5a7a85c8],ecx
	...
  4155ec:	xchg   DWORD PTR [edx-0x1],ecx
  4155ef:	xchg   edx,eax
  4155f0:	inc    edx
  4155f1:	inc    edx
  4155f2:	test   DWORD PTR [ebp-0x2b00b5e9],edx
  4155f8:	dec    eax
  4155f9:	or     DWORD PTR [eax],eax
  4155fb:	mov    ecx,0x5eb63720
  415600:	pop    ss
  415601:	jl     0x415588
  415603:	cmp    DWORD PTR [edi],edx
  415605:	dec    edx
  415606:	(bad)  
  415607:	mov    ecx,0x36dbb0
  41560c:	jecxz  0x415614
  41560e:	push   DWORD PTR [ebp-0x142ae]
  415614:	cmp    eax,0xb32936fb
  415619:	push   es
  41561a:	call   0xfef641ec
  41561f:	or     esp,DWORD PTR [edx]
  415621:	cmp    dl,BYTE PTR [edx]
  415623:	cmp    edi,0x15
  415626:	idiv   edi
  415628:	dec    ebp
  415629:	dec    edx
  41562a:	je     0x415636
  41562c:	dec    ebp
  41562d:	test   BYTE PTR [esi-0x142c97b],0xff
  415634:	dec    ecx
  415635:	add    bh,al
  415637:	test   DWORD PTR [esi-0x43],edx
  41563a:	(bad)  
  41563b:	jmp    DWORD PTR [edx]
  41563d:	push   es
  41563e:	add    BYTE PTR [eax],al
  415640:	jb     0x4155ef
  415642:	lea    esi,[esi-0x427d4a03]
  415648:	push   es
  415649:	scas   al,BYTE PTR es:[edi]
  41564a:	(bad)  
  41564b:	jmp    DWORD PTR [edx]
  41564d:	xor    bh,BYTE PTR [esi]
  41564f:	add    DWORD PTR [eax],0x0
	...
  415676:	add    BYTE PTR [eax],al
  415678:	(bad)  
  415679:	adc    edi,esi
  41567b:	(bad)  
  41567c:	mov    ebp,0x88367502
  415681:	add    eax,0xadbe858d
  415686:	(bad)  
  415687:	push   DWORD PTR [edx]
  415689:	mov    dh,0xb4
  41568b:	in     al,0xc5
  41568d:	mov    ch,0xfe
  41568f:	call   0x407044
  415694:	fld    st(5)
  415696:	jae    0x4156a1
  415698:	popa   
  415699:	js     0x415667
  41569b:	idiv   DWORD PTR ds:0x9774ffb6
  4156a1:	mov    dh,0xb4
  4156a3:	in     al,0x15
  4156a5:	mov    dh,0xfe
  4156a7:	call   0x40c69e
  4156ac:	dec    ebx
  4156ad:	sbb    ecx,DWORD PTR [ecx+0x52ba94e4]
  4156b3:	add    BYTE PTR [ebx+0x60],cl
  4156b6:	add    eax,DWORD PTR [ebx-0xa53c32]
  4156bc:	test   BYTE PTR [edi-0x29],bl
  4156bf:	push   0xffffffc8
  4156c1:	fcomp  QWORD PTR [edi-0x9]
  4156c4:	je     0x4156e8
  4156c6:	add    al,0x74
  4156c8:	jmp    0x5d29e7ab
  4156cd:	repnz push edx
  4156cf:	add    bh,dl
  4156d1:	cwde   
  4156d2:	fild   DWORD PTR [ecx]
  4156d4:	dec    ebx
  4156d5:	repz xchg ecx,eax
  4156d7:	call   esi
  4156d9:	push   edi
  4156da:	pop    ebx
  4156db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  415704:	stc    
  415705:	aas    
  415706:	push   edx
  415707:	push   esi
  415709:	inc    esi
  41570a:	pop    edx
  41570b:	push   DWORD PTR [eax+esi*1]
  41570e:	fadd   DWORD PTR [edi]
  415710:	and    ebp,DWORD PTR [edx*4-0x679fdb01]
  415717:	call   0xff93af30
  41571c:	sahf   
  41571d:	cmp    bl,BYTE PTR [ebx-0x13]
  415720:	fld    DWORD PTR [edi+0x6ebeff52]
  415726:	pop    edx
  415727:	(bad)  
  415728:	cld    
  415729:	ja     0x4156c3
  41572b:	in     al,0xfc
  41572d:	outs   dx,DWORD PTR ds:[esi]
  41572e:	push   edx
  41572f:	push   DWORD PTR [esi+0x3a]
  415732:	pop    ebx
  415733:	lods   eax,DWORD PTR ds:[esi]
  415734:	cdq    
  415735:	lahf   
  415736:	push   edx
  415737:	call   DWORD PTR [esi-0x2b00a58a]
  41573d:	(bad)  
  41573e:	fadd   DWORD PTR [edi]
  415740:	jecxz  0x41575b
  415742:	xchg   esi,eax
  415743:	inc    esp
  415745:	mov    edi,0xb7b4e097
  41574a:	push   ecx
  41574b:	(bad)  
  41574c:	ds or  ecx,esi
  41574f:	pop    ebx
  415750:	out    dx,al
  415751:	jnp    0x4157b1
  415753:	push   edx
  415754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415755:	jle    0x4157a4
  415757:	pop    edx
  415758:	pushf  
  415759:	dec    eax
  41575a:	inc    ecx
  41575b:	dec    edx
  41575c:	fimul  WORD PTR [eax+0x46]
  41575f:	push   edx
  415760:	(bad)  
  415761:	xor    eax,0x31845236
  415766:	jne    0x415700
	...
  415790:	jl     0x4157da
  415792:	cs cwde 
  415794:	arpl   WORD PTR [eax+0x26],ax
  415797:	push   edx
  415798:	arpl   WORD PTR [edx+0x54],di
  41579b:	push   edx
  41579c:	fs dec eax
  41579e:	pop    esp
  41579f:	arpl   WORD PTR [eax+ecx*2+0xe],dx
  4157a3:	pop    ebx
  4157a4:	lods   eax,DWORD PTR ds:[esi]
  4157a5:	jle    0x4157ad
  4157a7:	push   edx
  4157a8:	dec    esp
  4157a9:	jle    0x4157a4
  4157ab:	pop    ecx
  4157ac:	inc    esp
  4157ad:	dec    eax
  4157ae:	add    DWORD PTR [esi-0xa],ebp
  4157b1:	inc    edi
  4157b2:	out    dx,al
  4157b3:	push   ecx
  4157b4:	mov    es,WORD PTR [ecx-0x30]
  4157b7:	xchg   esp,eax
  4157b8:	cs dec eax
  4157ba:	ficom  WORD PTR [ecx-0x62]
  4157bd:	inc    ebp
  4157be:	shl    DWORD PTR [edi-0x3c],0x8
  4157c2:	jmp    0xe9526101
  4157c7:	mov    dh,0xc1
  4157c9:	xor    al,0x6a
  4157cb:	dec    eax
  4157cc:	push   DWORD PTR [edx+0x484edde8]
  4157d2:	xor    al,0xfc
  4157d4:	in     al,dx
  4157d5:	jne    0x415832
  4157d7:	push   ecx
  4157d8:	in     al,dx
  4157d9:	xchg   ecx,eax
  4157da:	and    al,0x50
  4157dc:	jae    0x4157e7
  4157de:	jmp    0x80f1f543
  4157e3:	sbb    cl,BYTE PTR [edx+0x15571109]
  4157e9:	retf   0x50e8
  4157ec:	adc    DWORD PTR ds:[eax],eax
  4157ef:	adc    DWORD PTR [ecx+eiz*2+0x6eff],0x0
	...
  41581a:	add    BYTE PTR [eax],al
  41581c:	xor    al,0xce
  41581e:	idiv   DWORD PTR [ecx-0x57c8f970]
  415824:	dec    eax
  415825:	mov    cl,0x2
  415827:	push   ds
  415828:	mov    BYTE PTR [edi-0x2],al
  41582b:	adc    al,0x32
  41582d:	repnz inc eax
  41582f:	jmp    0x3ef93b24
  415834:	sbb    dl,BYTE PTR [eax+eax*8]
  415837:	mov    ebp,0x35459232
  41583c:	xchg   edi,eax
  41583d:	or     BYTE PTR [eax],al
  41583f:	push   ss
  415840:	fld    DWORD PTR [edi+0x75]
  415843:	icebp  
  415844:	add    BYTE PTR [eax+0x47fa16b1],al
  41584a:	jne    0x41585d
  41584c:	cli    
  41584d:	mov    ebp,0xf7406f3
  415852:	call   0xff883075
  415857:	not    BYTE PTR ds:0xddd1e83b
  41585d:	inc    esi
  41585e:	call   DWORD PTR [ecx+0x2]
  415861:	add    BYTE PTR [ecx-0x17],al
  415864:	jnp    0x415822
  415866:	pop    es
  415867:	sar    DWORD PTR [edx+0x45],0xff
  41586b:	into   
  41586c:	jnp    0x41582a
  41586e:	sti    
  41586f:	(bad)  
  415870:	cmc    
  415871:	push   cs
  415872:	call   0xff8835b6
  415877:	mov    al,ds:0x14000d86
  41587c:	jbe    0x4158b3
  41587e:	sub    DWORD PTR [ebp+0x0],0x0
	...
  4158a5:	add    BYTE PTR [eax],al
  4158a7:	add    BYTE PTR [ebx+esi*4-0x1],bh
  4158ab:	adc    cl,BYTE PTR [edx+0x46]
  4158ae:	jne    0x415891
  4158b0:	sub    bl,0xb1
  4158b3:	mov    ?,WORD PTR [ebx-0x70]
  4158b6:	inc    ebp
  4158b7:	add    dh,al
  4158b9:	(bad)  
  4158ba:	(bad)  
  4158bb:	call   ebp
  4158bd:	cwde   
  4158be:	push   0xff4bfd98
  4158c3:	addr16 push cs
  4158c5:	and    DWORD PTR [ecx+0x0],eax
  4158c8:	and    eax,0xf8e8075f
  4158cd:	repnz (bad) 
  4158cf:	push   ebp
  4158d1:	pop    esi
  4158d2:	sti    
  4158d3:	(bad)  
  4158d4:	jg     0x415918
  4158d6:	out    0x43,eax
  4158d8:	adc    cl,bl
  4158da:	dec    cl
  4158dc:	xor    BYTE PTR [esi],cl
  4158de:	add    BYTE PTR [ebp-0x17],dl
  4158e1:	in     eax,0x82
  4158e3:	les    esp,FWORD PTR [esi]
  4158e5:	jmp    FWORD PTR fs:[ecx+0x72]
  4158e9:	fnstenv [eax+ecx*1+0x3a]
  4158ed:	mov    cl,0xb0
  4158ef:	push   DWORD PTR ds:0xcafc44c3
  4158f5:	or     al,BYTE PTR [eax]
  4158f7:	out    dx,eax
  4158f8:	add    al,0x62
  4158fa:	lods   eax,DWORD PTR ds:[esi]
  4158fb:	aaa    
  4158fc:	repz or DWORD PTR [eax-0x4d],ebp
  415900:	std    
  415901:	dec    edx
  415902:	(bad)  
  415903:	(bad)  
  415904:	mov    edi,0xbafe742
  415909:	(bad)  
  41590a:	(bad)  
  41590b:	push   0x0
	...
  415931:	add    BYTE PTR [eax],al
  415933:	add    BYTE PTR [edx],dh
  415935:	(bad)  
  415936:	out    dx,eax
  415937:	aaa    
  415938:	jae    0x415947
  41593a:	push   0xff4c3dd6
  41593f:	dec    BYTE PTR [edi]
  415941:	pop    ds
  415942:	sub    DWORD PTR [ecx-0xe],eax
  415945:	loope  0x4158dc
  415947:	mov    bh,0xb5
  415949:	aad    0xa
  41594b:	sar    BYTE PTR [esi],0xf1
  41594e:	addr16 int3 
  415950:	or     eax,0xba4fff4d
  415955:	sub    dh,BYTE PTR [edi-0x4b60b401]
  41595b:	addr16 dec ebx
  41595d:	xor    BYTE PTR [esi-0x42],bl
  415960:	arpl   si,bx
  415962:	push   ss
  415963:	inc    ecx
  415964:	dec    ebx
  415965:	and    BYTE PTR [edi+0x75],cl
  415968:	push   ebx
  415969:	mov    BYTE PTR [edx],bl
  41596b:	fnstenv [esi+esi*4-0x5108a9a5]
  415972:	dec    esi
  415973:	call   FWORD PTR [esi]
  415975:	in     al,0x4e
  415977:	jne    0x4159cc
  415979:	enter  0xb13c,0x94
  41597d:	(bad)  
  41597e:	cmp    al,0xc2
  415980:	inc    edi
  415981:	xor    BYTE PTR [eax+0x47b2778a],bh
  415987:	cld    
  415988:	adc    eax,0xe2ffd9a7
  41598d:	pusha  
  41598e:	dec    esi
  41598f:	jne    0x4159d4
  415991:	sbb    bl,bl
  415993:	mov    al,0x64
  415995:	es jge 0x4159dd
	...
  4159c0:	pop    edi
  4159c1:	stos   BYTE PTR es:[edi],al
  4159c2:	sbb    BYTE PTR [eax+0x23],dl
  4159c5:	jno    0x4159ca
  4159c7:	mov    ecx,DWORD PTR [esi]
  4159c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159ca:	sbb    eax,DWORD PTR [ecx+0x4b]
  4159cd:	mov    dl,0xe
  4159cf:	add    BYTE PTR [edi+0x7cfbdb67],dh
  4159d5:	jno    0x4159da
  4159d7:	push   edi
  4159d8:	and    esp,DWORD PTR [ebx+0x374b0085]
  4159de:	inc    ebx
  4159df:	je     0x415a47
  4159e1:	add    al,0x5c
  4159e3:	rcl    esi,cl
  4159e5:	push   ebx
  4159e6:	dec    esi
  4159e7:	push   0xffc50a46
  4159ec:	xchg   esp,eax
  4159ed:	pop    edx
  4159ee:	push   ecx
  4159ef:	mov    bh,0xfc
  4159f1:	jnp    0x4159a6
  4159f3:	addr16 dec ebx
  4159f5:	xor    bl,BYTE PTR [esi-0x42]
  4159f8:	fwait
  4159f9:	or     DWORD PTR [esi-0x3cceb328],esp
  4159ff:	cmp    ah,bl
  415a01:	inc    esp
  415a02:	sbb    DWORD PTR [edx-0x68],0x4a5a8e44
  415a09:	retf   
  415a0a:	push   0x82be4b0d
  415a0f:	(bad)
  415a12:	test   al,0x8c
  415a14:	mov    ah,0x44
  415a16:	outs   dx,BYTE PTR ds:[esi]
  415a17:	dec    esi
  415a18:	mov    ecx,0x1e072173
  415a1d:	jle    0x415a7d
  415a1f:	fsub   DWORD PTR [eax+0xfbdc44]
	...
  415a49:	add    BYTE PTR [eax],al
  415a4b:	add    BYTE PTR [esp+ecx*8-0x1b73b169],ch
  415a52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a53:	cmp    al,0x89
  415a55:	or     eax,0x35d1b8e9
  415a5a:	push   0x47
  415a5c:	ja     0x415a0d
  415a5e:	call   0x9c85b53c
  415a63:	sti    
  415a64:	ins    BYTE PTR es:[edi],dx
  415a65:	xor    bl,BYTE PTR [ecx+0x4e]
  415a68:	pop    esp
  415a69:	xchg   edx,eax
  415a6a:	lods   al,BYTE PTR ds:[esi]
  415a6b:	dec    edi
  415a6c:	jecxz  0x415a76
  415a6e:	jmp    0xdff2e7d1
  415a73:	or     ecx,DWORD PTR [edx+0x74f39109]
  415a79:	retf   0x4ee8
  415a7c:	mov    esi,0x13940111
  415a81:	inc    esp
  415a82:	out    0x4d,al
  415a84:	sahf   
  415a85:	inc    ebp
  415a86:	(bad)  
  415a88:	inc    esp
  415a89:	xor    ebx,esp
  415a8b:	xchg   edx,eax
  415a8c:	adc    al,0x44
  415a8e:	mov    al,ds:0x1c094742
  415a93:	jns    0x415a8c
  415a95:	mov    DWORD PTR [ebp+0x43f430],esp
  415a9b:	mov    dh,0x74
  415a9d:	into   
  415a9e:	sti    
  415a9f:	sbb    DWORD PTR [esi-0x42],edi
  415aa2:	or     esp,DWORD PTR [esi+0x2828fc3c]
  415aa8:	inc    edi
  415aa9:	xor    ebp,ecx
  415aab:	ins    BYTE PTR es:[edi],dx
  415aac:	dec    edi
  415aad:	or     DWORD PTR [ebx],ecx
  415aaf:	test   eax,0x0
	...
  415ad8:	into   
  415ad9:	mov    WORD PTR [ecx-0x38f6b718],fs
  415adf:	and    al,0xf
  415ae1:	or     DWORD PTR [eax],eax
  415ae3:	jmp    0x7586a730
  415ae8:	dec    BYTE PTR [ebx]
  415aea:	add    cl,ch
  415aec:	add    BYTE PTR [ebx+0x69],0xe9
  415af0:	add    BYTE PTR [ebx+0x69],0xe9
  415af4:	adc    eax,0xdb9f3ce
  415af9:	mov    ?,esp
  415afb:	ds push ss
  415afd:	inc    esp
  415afe:	push   eax
  415aff:	ds xchg esp,eax
  415b01:	cmp    edi,edi
  415b03:	mov    esp,0x649f3104
  415b08:	inc    edi
  415b09:	or     DWORD PTR [ebx],ecx
  415b0b:	sub    DWORD PTR [ebx+0x4985e90c],eax
  415b11:	or     DWORD PTR [eax],eax
  415b13:	xor    DWORD PTR [eax-0x16bf10],0x89110bbd
  415b1d:	jnp    0x415b1e
  415b1f:	(bad)  
  415b20:	clc    
  415b21:	(bad)  
  415b22:	shl    BYTE PTR [esp+ecx*8+0x3d],1
  415b26:	imul   esi
  415b28:	jg     0x415b03
  415b2a:	push   ecx
  415b2b:	sar    DWORD PTR [edx-0x5e210085],1
  415b31:	mov    eax,?
  415b33:	fiadd  WORD PTR [edi-0x441e17be]
  415b39:	inc    edx
  415b3a:	inc    DWORD PTR [eax]
	...
  415b64:	cwde   
  415b65:	or     eax,0x464a3668
  415b6a:	(bad)  
  415b6b:	(bad)  
  415b6c:	ja     0x415b44
  415b6e:	idiv   bh
  415b70:	popf   
  415b71:	aad    0x34
  415b73:	aaa    
  415b74:	sti    
  415b75:	inc    edi
  415b76:	jmp    edi
  415b78:	ficomp DWORD PTR [edi+edi*8-0x1b749401]
  415b7f:	idiv   DWORD PTR [ebp+0x5a0069d5]
  415b85:	jmp    0x415bbe
  415b87:	inc    ecx
  415b88:	mov    dl,0xd5
  415b8a:	mov    ah,0xf0
  415b8c:	xor    eax,0xf7fffed5
  415b91:	sbb    eax,0xdeb24129
  415b96:	jmp    0x89165950
  415b9b:	test   DWORD PTR [esi],ecx
  415b9d:	(bad)  
  415b9f:	dec    DWORD PTR [eax+0x4a2d6806]
  415ba5:	inc    esi
  415ba6:	(bad)  
  415ba7:	(bad)  
  415ba8:	not    ebp
  415baa:	idiv   bh
  415bac:	cmp    eax,0x4b3734d5
  415bb1:	inc    esi
  415bb2:	jmp    edi
  415bb4:	push   ds
  415bb5:	fwait
  415bb6:	(bad)  
  415bb7:	(bad)  
  415bb8:	fisttp DWORD PTR [edx-0x2ac20818]
  415bbe:	mov    WORD PTR [ebp-0x122e2],es
  415bc4:	loop   0x415c23
  415bc6:	cmp    BYTE PTR ds:[eax],al
	...
  415bed:	add    BYTE PTR [eax],al
  415bef:	add    bl,dh
  415bf1:	add    eax,0xd632b5ff
  415bf6:	(bad)  
  415bf7:	call   FWORD PTR ds:0x7329371c
  415bfd:	or     eax,0xcdb7a9e8
  415c02:	dec    BYTE PTR [ebx]
  415c04:	dec    ebx
  415c05:	jo     0x415bd7
  415c07:	sbb    al,cl
  415c09:	xchg   esp,eax
  415c0a:	sub    bh,dh
  415c0c:	add    al,0x4b
  415c0e:	add    BYTE PTR [ebp+0x5b],dh
  415c11:	adc    DWORD PTR [edi+ecx*4],0xffffffce
  415c15:	dec    edi
  415c16:	push   ebx
  415c17:	(bad)  
  415c18:	in     al,dx
  415c19:	pop    ds
  415c1a:	pop    esp
  415c1b:	jbe    0x415bb6
  415c1d:	push   0x4b
  415c1f:	jmp    0x415c58
  415c21:	aaa    
  415c22:	inc    ebx
  415c23:	je     0x415c72
  415c25:	add    BYTE PTR [edx+ebp*2-0x67],bl
  415c29:	xchg   edx,eax
  415c2a:	dec    ebx
  415c2b:	(bad)  
  415c2c:	into   
  415c2d:	(bad)  
  415c2e:	push   ebx
  415c2f:	(bad)  
  415c30:	mov    esp,0x4b00035c
  415c35:	scas   eax,DWORD PTR es:[edi]
  415c36:	mov    ah,ah
  415c38:	mov    ah,0xb2
  415c3a:	dec    edx
  415c3b:	add    BYTE PTR [edi],bl
  415c3d:	add    DWORD PTR [esi+0x4adaafbd],0xffffffff
  415c44:	dec    ebx
  415c45:	fs mov ecx,0x52c7ce82
  415c4b:	inc    DWORD PTR [edi+ebp*1+0x2ff344cf]
  415c52:	add    ebp,edi
	...
  415c7c:	mov    ch,0xfa
  415c7e:	rol    BYTE PTR [edi],1
  415c80:	arpl   ax,si
  415c82:	cdq    
  415c83:	jmp    DWORD PTR [edx+ebp*8-0x70]
  415c87:	in     al,dx
  415c88:	push   esp
  415c89:	and    cl,BYTE PTR [ebx-0x1]
  415c8c:	fisub  WORD PTR [edi]
  415c8e:	pop    ebx
  415c8f:	adc    eax,0xff4b129c
  415c94:	(bad)  
  415c95:	sbb    dl,BYTE PTR [ebx-0x1]
  415c98:	cmp    al,0x40
  415c9a:	rol    BYTE PTR [edi],1
  415c9c:	and    esi,DWORD PTR [eax]
  415c9e:	call   0x1ce4:0x90302cff
  415ca5:	or     ah,dh
  415ca7:	dec    edx
  415ca8:	sbb    al,0xb7
  415caa:	lock pop ebx
  415cac:	adc    dh,BYTE PTR [eax-0x2a]
  415caf:	dec    edx
  415cb0:	or     al,0x77
  415cb2:	leave  
  415cb3:	push   edx
  415cb4:	add    al,0x41
  415cb6:	(bad)  
  415cb7:	rol    BYTE PTR [ecx+esi*1+0x70],1
  415cbb:	cdq    
  415cbc:	hlt    
  415cbd:	inc    eax
  415cbe:	mov    dh,0x90
  415cc0:	out    0x38,eax
  415cc2:	scas   al,BYTE PTR es:[edi]
  415cc3:	dec    edx
  415cc4:	repz ss pop eax
  415cc7:	dec    edx
  415cc8:	fadd   QWORD PTR [eax+0x54]
  415ccb:	push   edi
  415ccc:	fadd   QWORD PTR [eax-0x6a]
  415ccf:	pop    ebx
  415cd0:	loope  0x415d4c
  415cd2:	mov    cs,WORD PTR [edx-0x3c]
  415cd5:	jbe    0x415c68
  415cd7:	push   edx
  415cd8:	mov    esp,0xfa2a9140
  415cdd:	inc    eax
  415cde:	jbe    0x415d2a
	...
  415d08:	idiv   BYTE PTR [ecx]
  415d0a:	jbe    0x415d56
  415d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d0d:	xor    DWORD PTR ds:0x5e409c94,edi
  415d13:	rcr    BYTE PTR [edx+esi*1+0x408c49c7],0x4e
  415d1b:	rol    BYTE PTR [eax+0x4b7fe731],1
  415d21:	or     DWORD PTR [eax],esi
  415d23:	inc    ebp
  415d24:	inc    ebx
  415d25:	or     DWORD PTR [esi+edi*2+0x47258c5f],ebx
  415d2c:	icebp  
  415d2d:	or     BYTE PTR [ebx-0xf49a20a],dl
  415d33:	pop    ebx
  415d34:	ins    DWORD PTR es:[edi],dx
  415d35:	outs   dx,DWORD PTR ds:[esi]
  415d36:	push   ss
  415d37:	dec    edx
  415d38:	ret    0xcc6
  415d3b:	fisttp DWORD PTR [ebp+0x3c03a801]
  415d41:	mov    dh,0xf0
  415d43:	pop    ebx
  415d44:	pop    ebp
  415d45:	aas    
  415d46:	add    dh,dh
  415d48:	add    BYTE PTR [eax+0x75],0xed
  415d4c:	xchg   edx,eax
  415d4d:	mov    dh,0x7
  415d4f:	rcr    DWORD PTR [eax],1
  415d51:	outs   dx,DWORD PTR ds:[esi]
  415d52:	(bad)  
  415d53:	ficom  WORD PTR [eax+0x4b]
  415d56:	add    al,0xe9
  415d58:	fst    QWORD PTR [edx+0x3d8b6aec]
  415d5e:	push   0xffffffe9
  415d60:	push   ds
  415d61:	sbb    al,0xff
  415d63:	xor    al,0xf7
  415d65:	daa    
  415d66:	mov    ch,0x87
  415d68:	add    BYTE PTR [eax-0x77],0x24
	...
  415d94:	xchg   ebx,eax
  415d95:	mov    cl,0xff
  415d97:	call   0x18a9dd1f
  415d9c:	inc    edi
  415d9d:	retf   0xff
  415da0:	jmp    0x7b6:0x13e940f7
  415da7:	xchg   ecx,eax
  415da8:	test   BYTE PTR [ebp-0x1],dl
  415dab:	jle    0x415daf
  415dad:	mov    dh,0xfb
  415daf:	jbe    0x415e2d
  415db1:	pop    es
  415db2:	call   0xff811f4e
  415db7:	xor    BYTE PTR ds:0x17b40005,al
  415dbd:	sub    eax,0x385f2d81
  415dc2:	dec    DWORD PTR [esi-0x4]
  415dc5:	(bad)  
  415dc8:	adc    esi,DWORD PTR [esi-0x7bbc1f5]
  415dce:	sub    BYTE PTR [eax+0x6a993148],ch
  415dd4:	dec    edi
  415dd5:	or     DWORD PTR [ebx],ecx
  415dd7:	sub    DWORD PTR [edx-0x7c],esp
  415dda:	int    0xe8
  415ddc:	dec    eax
  415ddd:	or     edi,eax
  415ddf:	lods   al,BYTE PTR ds:[esi]
  415de0:	add    BYTE PTR [ecx],cl
  415de2:	add    cl,ch
  415de4:	dec    eax
  415de5:	inc    esi
  415de6:	inc    ebp
  415de7:	add    BYTE PTR [esi],bh
  415de9:	rol    BYTE PTR [esi],cl
  415deb:	add    BYTE PTR [edx],ah
  415ded:	pop    ebp
  415dee:	jmp    FWORD PTR [ecx+0x22]
  415df1:	pop    ebp
  415df2:	jmp    FWORD PTR [ecx+0x32]
  415df5:	mov    eax,0xf444
	...
  415e1e:	add    BYTE PTR [eax],al
  415e20:	bound  esi,QWORD PTR [esi-0x2e020b7c]
  415e26:	(bad)  
  415e27:	push   eax
  415e28:	cmc    
  415e29:	dec    edi
  415e2a:	idiv   edi
  415e2c:	lahf   
  415e2d:	shl    edi,1
  415e2f:	imul   esi,DWORD PTR [ecx+0xa],0x0
  415e33:	or     esp,DWORD PTR [edx-0x6d16fbb2]
  415e39:	or     eax,DWORD PTR [eax]
  415e3b:	add    BYTE PTR [edx-0xdbed763],cl
  415e41:	shl    DWORD PTR [esp+ecx*1-0x46],1
  415e45:	shl    BYTE PTR [ebx-0x75854a01],0xd0
  415e4c:	daa    
  415e4d:	mov    edi,0xd1c5f7f3
  415e52:	dec    edi
  415e53:	push   edx
  415e54:	ficom  DWORD PTR [eax-0x4d]
  415e57:	push   DWORD PTR ds:0x1df084c3
  415e5d:	sar    esi,1
  415e5f:	call   0x40f8c2
  415e64:	daa    
  415e65:	mov    edi,0xd0f5f7d7
  415e6a:	dec    edi
  415e6b:	push   0x411225
  415e70:	add    eax,0x35f7f08f
  415e75:	sar    esi,1
  415e77:	xor    eax,0x41236d
  415e7c:	or     al,BYTE PTR [ecx]
  415e7e:	mov    bl,0xff
  415e80:	and    eax,0xe484c3
	...
  415ea9:	add    BYTE PTR [eax],al
  415eab:	add    BYTE PTR ds:0x4b6afed1,bh
  415eb1:	xor    bl,bl
  415eb3:	jl     0x415e38
  415eb5:	jno    0x415eba
  415eb7:	push   esi
  415eb9:	aas    
  415eba:	dec    edi
  415ebb:	push   DWORD PTR [edi+edi*1]
  415ebe:	or     eax,0x3716237
  415ec3:	call   0xff8961a2
  415ec8:	shr    BYTE PTR [edi+edx*2-0x25a0eb09],cl
  415ecf:	jmp    DWORD PTR [esi+ebp*4+0x4f4b410b]
  415ed6:	xchg   ecx,eax
  415ed7:	lock hlt 
  415ed9:	inc    esi
  415eda:	inc    edi
  415edb:	(bad)  
  415edc:	ds aaa 
  415ede:	sbb    al,0x41
  415ee0:	dec    ebx
  415ee1:	dec    eax
  415ee2:	jae    0x415e97
  415ee4:	in     al,0x6e
  415ee6:	jge    0x415e6d
  415ee8:	repz sahf 
  415eea:	inc    edi
  415eeb:	inc    esi
  415eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eee:	daa    
  415eef:	test   esp,0xe367b496
  415ef5:	push   edi
  415ef6:	(bad)  
  415ef7:	(bad)  
  415ef8:	mov    ebp,0xb4f753fc
  415efd:	mov    esi,0x49743546
  415f02:	(bad)  
  415f03:	jmp    FWORD PTR [edi+edi*1+0x3a9cff92]
  415f0a:	inc    ebx
  415f0b:	je     0x415f3f
  415f0d:	mov    bl,0x88
  415f0f:	fadd   QWORD PTR [eax]
	...
  415f35:	add    BYTE PTR [eax],al
  415f37:	add    BYTE PTR [esi+edx*8+0x3ffe0446],dl
  415f3e:	inc    esi
  415f3f:	xor    ah,cl
  415f41:	lods   al,BYTE PTR ds:[esi]
  415f42:	arpl   di,si
  415f44:	je     0x415f44
  415f46:	mov    bl,0xe7
  415f48:	rol    BYTE PTR cs:[esi-0x1],0x70
  415f4d:	push   ebx
  415f4e:	cli    
  415f4f:	mov    edi,0xb3ef08d7
  415f54:	ins    BYTE PTR es:[edi],dx
  415f55:	neg    DWORD PTR [eax+0x47]
  415f58:	dec    esp
  415f59:	inc    ebp
  415f5a:	ins    BYTE PTR es:[edi],dx
  415f5b:	fs cmp al,0x3d
  415f5e:	push   cs
  415f5f:	icebp  
  415f60:	cmp    al,0x3d
  415f62:	jmp    0xf66755e9
  415f67:	inc    esi
  415f68:	sub    al,0xa
  415f6a:	jge    0x415f31
  415f6c:	leave  
  415f6d:	jle    0x415f6c
  415f6f:	dec    esi
  415f70:	sbb    al,0x3d
  415f72:	jmp    0x9cc9ff46
  415f77:	pop    ebx
  415f78:	adc    al,0x3d
  415f7a:	(bad)  
  415f7b:	add    edi,DWORD PTR [edi-0x53]
  415f7e:	inc    edx
  415f7f:	add    al,0xce
  415f81:	xchg   BYTE PTR [ecx+0x193cf44e],ah
  415f87:	inc    edi
  415f88:	mov    dh,0x25
  415f8a:	mov    esi,0x1b31e446
  415f8f:	xor    esp,ebx
  415f91:	cmp    al,0xf2
  415f93:	inc    ebx
  415f94:	pop    edi
  415f95:	aad    0x69
  415f97:	mov    bl,dh
  415f99:	xor    al,0x96
  415f9b:	inc    esi
	...
  415fc4:	dec    ebx
  415fc5:	mov    ch,0x21
  415fc7:	fdivr  QWORD PTR [esp+edi*1-0x494b7a6a]
  415fce:	lock pop ebx
  415fd0:	and    al,0x6d
  415fd2:	jbe    0x41601a
  415fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fd5:	jbe    0x416054
  415fd7:	dec    esi
  415fd8:	pushf  
  415fd9:	cmp    al,0x66
  415fdb:	ror    BYTE PTR [ecx+esi*1-0x5e],1
  415fdf:	xchg   edi,eax
  415fe0:	mov    WORD PTR [esi+edx*2],?
  415fe3:	nop
  415fe4:	jae    0x41601a
  415fe6:	dec    esi
  415fe7:	inc    esi
  415fe8:	jl     0x415fa0
  415fea:	lock pop ebx
  415fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fed:	ins    DWORD PTR es:[edi],dx
  415fee:	ds inc esi
  415ff0:	ins    BYTE PTR es:[edi],dx
  415ff1:	jbe    0x415ff3
  415ff3:	adc    DWORD PTR ds:0xbb2eff3c,edx
  415ff9:	and    eax,0x3c0d26f7
  415ffe:	jne    0x415ff1
  416000:	lock lods eax,DWORD PTR ds:[esi]
  416002:	stos   DWORD PTR es:[edi],eax
  416003:	push   ss
  416004:	lea    edi,[esi*4-0xc372f7]
  41600b:	push   es
  41600c:	sbb    eax,DWORD PTR [eax+ebp*8]
  41600f:	rcl    ah,1
  416011:	cmp    edi,edi
  416013:	not    ah
  416015:	and    al,0xf7
  416017:	out    dx,al
  416018:	xchg   BYTE PTR [ecx],dh
  41601a:	xchg   ebp,eax
  41601b:	xchg   esi,eax
  41601c:	mov    ?,WORD PTR [edi+edi*8]
  41601f:	xchg   esp,eax
  416020:	jae    0x416056
  416022:	call   esi
  416024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416025:	(bad)  
  416026:	scas   eax,DWORD PTR es:[edi]
  416027:	into   
	...
  416050:	xchg   BYTE PTR [esi*4-0xc3792f],bh
  416057:	rol    DWORD PTR [esi],1
  416059:	imul   edi,edi,0xffffffb6
  41605c:	mov    ?,WORD PTR [esi-0x10]
  41605f:	mov    dh,0x86
  416061:	cmp    al,0xe8
  416063:	sbb    eax,0x9eff3bbe
  416068:	mov    WORD PTR [ebx],?
  41606a:	jmp    0xff7d6d9a
  41606f:	mov    cs,WORD PTR [edi+edi*1+0x8c847e8]
  416076:	add    BYTE PTR [eax+0x1c001109],dh
  41607c:	and    ch,BYTE PTR ds:0x3bfba583
  416082:	jne    0x416079
  416084:	lock sar BYTE PTR [edi-0x17],cl
  416088:	dec    eax
  416089:	xchg   edx,eax
  41608a:	inc    ebp
  41608b:	push   ecx
  41608c:	push   cs
  41608d:	mov    dh,0xf7
  41608f:	inc    ecx
  416090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416091:	push   0xffffffff
  416093:	add    BYTE PTR ds:0x2dfc44c0,cl
  416099:	dec    esp
  41609a:	sti    
  41609b:	jmp    DWORD PTR [edi+0x7e75fecf]
  4160a1:	fist   WORD PTR [esi]
  4160a3:	mov    ebx,0xc00ac62d
  4160a8:	mov    dh,0x5
  4160aa:	mov    DWORD PTR [ebp+0x66],eax
  4160ad:	pop    edi
  4160ae:	dec    DWORD PTR [edi+eiz*8+0xff4fca]
	...
  4160d9:	add    BYTE PTR [eax],al
  4160db:	add    BYTE PTR [edi+0x567be7c2],dh
  4160e1:	(bad)  
  4160e2:	dec    BYTE PTR [ebx]
  4160e4:	jb     0x41613f
  4160e6:	sub    BYTE PTR [eax+0x32],ch
  4160e9:	aaa    
  4160ea:	out    dx,al
  4160eb:	mov    esi,0xe8074c2d
  4160f0:	retf   
  4160f1:	mov    eax,ds:0x4c1dffff
  4160f6:	idiv   edi
  4160f8:	xchg   edi,eax
  4160f9:	inc    ecx
  4160fa:	(bad)  
  4160fb:	jne    0x4160f7
  4160fd:	faddp  st(0),st
  4160ff:	stos   DWORD PTR es:[edi],eax
  416100:	lods   eax,DWORD PTR ds:[esi]
  416101:	(bad)  
  416104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416105:	lds    esi,FWORD PTR [esp+edi*8-0x53]
  416109:	dec    ebx
  41610a:	pop    es
  41610b:	call   0x410281
  416110:	lods   eax,DWORD PTR ds:[esi]
  416111:	dec    ebx
  416112:	sti    
  416113:	call   0x40f5e6
  416118:	jmp    0x4160e2
  41611a:	pop    es
  41611b:	add    BYTE PTR [edi-0x40],dl
  41611e:	jmp    0x4160a3
  416120:	out    0xde,al
  416122:	push   ebp
  416123:	jmp    DWORD PTR [edi+0x61ade732]
  416129:	(bad)  
  41612c:	bound  ecx,QWORD PTR [ebx+0x4]
  41612f:	pop    esi
  416130:	pop    ebx
  416131:	enter  0x7,0x4b
  416135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416136:	mov    ebp,0xcdcb1bef
  41613b:	or     esp,DWORD PTR [ebx+0x63]
  41613e:	(bad)  
  41613f:	inc    DWORD PTR [eax]
	...
  416165:	add    BYTE PTR [eax],al
  416167:	add    BYTE PTR [edi+esi*1+0x43],ch
  41616b:	bswap  edi
  41616d:	(bad)  
  41616e:	add    al,BYTE PTR [eax]
  416170:	dec    ebx
  416171:	jmp    0x416140
  416173:	sti    
  416174:	arpl   di,si
  416176:	xchg   esp,eax
  416177:	dec    DWORD PTR [ecx+edi*4-0x43]
  41617b:	jmp    0x4161c1
  41617d:	popf   
  41617e:	inc    edi
  41617f:	push   DWORD PTR [esi+0x3375433c]
  416185:	sbb    BYTE PTR [edx-0x52],dl
  416188:	sub    al,0x3b
  41618a:	ja     0x416201
  41618c:	aaa    
  41618d:	pop    es
  41618e:	mov    edx,0xc277fa67
  416193:	(bad)  
  416194:	jle    0x4161ee
  416196:	lds    eax,FWORD PTR [eax-0x3ff1cfb5]
  41619c:	jle    0x4161cc
  41619e:	cs cmp eax,0xd0ac5fd0
  4161a4:	xor    esi,ecx
  4161a6:	add    ebp,eax
  4161a8:	(bad)  
  4161a9:	cli    
  4161aa:	add    eax,DWORD PTR [eax]
  4161ac:	dec    eax
  4161ad:	or     BYTE PTR [ebp+0x23c7f375],0x38
  4161b4:	mov    dh,BYTE PTR [eax]
  4161b6:	(bad)  
  4161b8:	sub    al,0xb1
  4161ba:	add    eax,DWORD PTR [eax]
  4161bc:	push   eax
  4161bd:	jo     0x416178
  4161bf:	add    DWORD PTR [eax-0x72ef72ca],esi
  4161c5:	das    
  4161c6:	add    edx,DWORD PTR [eax+0x19]
  4161c9:	mov    ebx,0xe7b8
	...
  4161f2:	add    BYTE PTR [eax],al
  4161f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161f5:	cmp    al,0xb
  4161f7:	call   0xff840b9e
  4161fc:	icebp  
  4161fd:	or     cl,al
  4161ff:	mov    edi,DWORD PTR [ebx]
  416201:	mov    DWORD PTR [edi],ebx
  416203:	add    al,0xfe
  416205:	jbe    0x4161c8
  416207:	add    al,0x5b
  416209:	sub    cl,BYTE PTR [edi+0x5110fe43]
  41620f:	push   eax
  416210:	mov    eax,ds:0xde433e39
  416215:	cmp    al,0x36
  416217:	mov    ecx,0xbb43970
  41621c:	arpl   WORD PTR [ebx+edx*2],si
  41621f:	inc    ebx
  416220:	dec    esp
  416221:	cmp    DWORD PTR [edi+ebp*1+0x4346e733],edx
  416228:	cmp    al,0x87
  41622a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41622b:	xor    ebx,DWORD PTR [ebx+0x2c779a21]
  416231:	cmp    DWORD PTR [edx],edx
  416233:	add    al,0x85
  416235:	inc    edx
  416236:	sub    ecx,DWORD PTR [ebx+ecx*2]
  416239:	fisub  WORD PTR [ecx+0x30]
  41623c:	enter  0xe54d,0xad
  416240:	or     al,0xa3
  416242:	repz inc edx
  416244:	jle    0x416247
  416246:	rol    esi,0xb1
  416249:	cmp    dh,cl
  41624b:	mov    WORD PTR [esi+0x33a15135],cs
  416251:	retf   0x42e8
  416254:	pop    esi
  416255:	add    ecx,eax
  416257:	push   0x0
	...
  41627d:	add    BYTE PTR [eax],al
  41627f:	add    bh,bl
  416281:	cmp    BYTE PTR [esi-0x624f2b53],ch
  416287:	sti    
  416288:	mov    ecx,DWORD PTR [ecx]
  41628a:	adc    DWORD PTR [edi],esp
  41628c:	or     edx,0xffffffe8
  41628f:	inc    edx
  416290:	jbe    0x416292
  416292:	rol    ah,0xb4
  416295:	xor    BYTE PTR [ebp-0xdc7538d],al
  41629b:	inc    ebx
  41629c:	pop    ds
  41629d:	adc    eax,DWORD PTR [eax]
  41629f:	add    DWORD PTR [ecx],edx
  4162a1:	icebp  
  4162a2:	inc    eax
  4162a3:	jmp    0x99099320
  4162a8:	or     DWORD PTR [eax],edi
  4162aa:	push   eax
  4162ab:	mov    ecx,0x4107be09
  4162b0:	and    eax,0x204eff37
  4162b5:	dec    edi
  4162b6:	lods   eax,DWORD PTR ds:[esi]
  4162b7:	inc    esi
  4162b8:	or     DWORD PTR [ebx+0x7b3a5119],esp
  4162be:	push   DWORD PTR [esi]
  4162c0:	dec    ebp
  4162c1:	dec    ecx
  4162c2:	je     0x4162c8
  4162c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162c5:	jb     0x4162ff
  4162c7:	test   al,0x48
  4162c9:	(bad)  
  4162cb:	dec    edx
  4162cc:	mov    edi,0x9281ff38
  4162d1:	icebp  
  4162d2:	inc    eax
  4162d3:	jmp    0x38d992f0
  4162d8:	mov    DWORD PTR [eax],edi
  4162da:	push   eax
  4162db:	cdq    
  4162dc:	mov    DWORD PTR [esi+0x37950107],edi
  4162e2:	(bad)  
  4162e3:	out    dx,al
	...
  41630c:	popa   
  41630d:	lahf   
  41630e:	lods   eax,DWORD PTR ds:[esi]
  41630f:	out    0x8a,al
  416311:	mov    ds:0x7a69d11b,eax
  416316:	call   esi
  416318:	dec    esi
  416319:	dec    ecx
  41631a:	je     0x416320
  41631c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41631d:	jno    0x416357
  41631f:	sub    BYTE PTR [edi-0x27],al
  416322:	out    0x3a,eax
  416324:	pop    eax
  416325:	cmp    bh,bh
  416327:	inc    ecx
  416328:	xchg   ecx,eax
  416329:	icebp  
  41632a:	inc    eax
  41632b:	jmp    0x58a99328
  416330:	mov    bh,BYTE PTR [eax]
  416332:	push   eax
  416333:	cmp    DWORD PTR [edx],ecx
  416335:	mov    esi,0x36c68107
  41633a:	dec    DWORD PTR [esi+0xacaf67]
  416340:	vpunpckhwd xmm4,xmm6,XMMWORD PTR [ebx]
  416344:	mov    edx,0x15ffb0ba
  416349:	push   es
  41634a:	shl    BYTE PTR [edi+ecx*4+0x63],0xb9
  41634f:	cmp    bl,ah
  416351:	or     edx,DWORD PTR [eax-0x18]
  416354:	mov    cl,0xba
  416356:	(bad)  
  416357:	dec    DWORD PTR [edx+0x624137c1]
  41635d:	pop    ebx
  41635e:	out    0x38,eax
  416360:	repz leave 
  416362:	(bad)  
  416363:	push   eax
  416364:	ret    0x74c8
  416367:	or     BYTE PTR [edx],cl
  416369:	pop    esi
  41636a:	std    
  41636b:	jmp    DWORD PTR ds:0xad35e5
	...
  416395:	add    BYTE PTR [eax],al
  416397:	add    BYTE PTR ds:0x6675feca,ah
  41639d:	enter  0x874,0x4a
  4163a1:	mov    ds:0xc245ffa9,al
  4163a6:	rol    DWORD PTR [edx+eiz*1],0x60
  4163aa:	mov    ch,ah
  4163ac:	mov    bl,0xc1
  4163ae:	fcomi  st,st(7)
  4163b0:	adc    eax,0x26458cca
  4163b5:	pop    ebx
  4163b6:	(bad)  
  4163b7:	jne    0x4163cb
  4163b9:	retf   0xc74
  4163bc:	sbb    bh,BYTE PTR [edx+0x7e]
  4163bf:	add    dl,dh
  4163c1:	add    eax,0x886f0fc0
  4163c6:	add    DWORD PTR [eax],eax
  4163c8:	loop   0x41638b
  4163ca:	inc    esp
  4163cb:	clc    
  4163cc:	repnz or al,BYTE PTR [eax]
  4163cf:	add    BYTE PTR [ebp-0x12000cb1],ch
  4163d5:	or     al,BYTE PTR [eax]
  4163d7:	push   0xffffffe2
  4163d9:	jmp    FWORD PTR fs:[ecx-0x4e]
  4163dd:	dec    DWORD PTR fs:[ebx+ecx*2-0x39afc81b]
  4163e5:	lods   eax,DWORD PTR ds:[esi]
  4163e6:	imul   DWORD PTR ss:[edi+ecx*4-0x77e1012d]
  4163ee:	inc    eax
  4163ef:	jne    0x416390
  4163f1:	mov    dl,al
  4163f3:	jle    0x416440
  4163f5:	and    BYTE PTR [eax+eax*8],cl
  4163f8:	pop    ss
  4163f9:	and    eax,0x812a
	...
  416422:	add    BYTE PTR [eax],al
  416424:	dec    edx
  416425:	and    BYTE PTR [ebx],al
  416427:	push   0xffc308b3
  41642c:	jne    0x41648b
  41642e:	adc    ebp,eax
  416430:	out    0xaf,eax
  416432:	aas    
  416433:	(bad)  
  416434:	sti    
  416435:	mov    edx,0xf4c68d52
  41643a:	aaa    
  41643b:	call   DWORD PTR [eax+edx*4-0x2b]
  41643f:	out    0xf7,eax
  416441:	iret   
  416442:	aas    
  416443:	call   edx
  416445:	lods   al,BYTE PTR ds:[esi]
  416446:	xor    dh,bh
  416448:	cmp    al,0x1f
  41644a:	sub    ebp,DWORD PTR [edx+0x6a4006e7]
  416450:	dec    ebx
  416451:	cwde   
  416452:	sbb    BYTE PTR [ecx],bh
  416454:	mov    ah,BYTE PTR [eax]
  416456:	inc    eax
  416457:	mov    ch,0x1b
  416459:	aaa    
  41645a:	aas    
  41645b:	call   DWORD PTR [edi*4-0x612117f2]
  416462:	aas    
  416463:	call   edx
  416465:	lods   al,BYTE PTR ds:[esi]
  416466:	daa    
  416467:	idiv   esp
  416469:	pop    esi
  41646a:	stos   BYTE PTR es:[edi],al
  41646b:	jmp    FWORD PTR [eax+eax*1-0x3]
  41646f:	inc    eax
  416470:	dec    ebx
  416471:	dec    edi
  416472:	jns    0x416464
  416474:	fdiv   QWORD PTR [esi+0x3f]
  416477:	call   DWORD PTR [esi+0x2c]
  41647a:	sub    edx,DWORD PTR [edx-0x76c0995c]
  416480:	(bad)  
  416481:	or     BYTE PTR [ecx+0x1335c437],cl
  416487:	add    al,0x0
	...
  4164ad:	add    BYTE PTR [eax],al
  4164af:	add    BYTE PTR [ebx],dh
  4164b1:	push   cs
  4164b2:	rol    ah,1
  4164b4:	mov    ah,0x36
  4164b6:	push   esp
  4164b7:	xor    al,0xb4
  4164b9:	xor    eax,0x51e3f86
  4164be:	xchg   ecx,eax
  4164bf:	mov    bh,0xed
  4164c1:	xor    eax,0x24ce8d76
  4164c6:	jbe    0x416507
  4164c8:	mov    WORD PTR [edx-0xfa95418],fs
  4164ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164cf:	add    edi,DWORD PTR [ebx+edi*2+0x59]
  4164d3:	aaa    
  4164d4:	je     0x41650b
  4164d6:	dec    esi
  4164d7:	mov    ecx,0x6ea52140
  4164dc:	fs xor eax,0x3d738970
  4164e2:	ss aas 
  4164e4:	loope  0x4164ee
  4164e6:	shr    ecx,0x13
  4164e9:	enter  0x3ee8,0xfe
  4164ed:	cmp    DWORD PTR [esi],edx
  4164ef:	aas    
  4164f0:	cmp    al,0x35
  4164f2:	pushf  
  4164f3:	mov    db1,ebx
  4164f6:	cmp    eax,0x6c832c3f
  4164fb:	pusha  
  4164fc:	sbb    al,0x35
  4164fe:	inc    BYTE PTR [edx+0x3efe2dde]
  416504:	adc    al,0xa
  416506:	je     0x416514
  416508:	enter  0xc976,0x36
  41650c:	add    al,0x35
  41650e:	jmp    0x94c9ccca
  416513:	das    
	...
  41653c:	cld    
  41653d:	xor    al,0xce
  41653f:	add    esi,DWORD PTR [edi-0x2b]
  416542:	imul   eax,DWORD PTR [eax+0x3ebe3cf3],0x19ffbd4b
  41654c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41654d:	xor    al,0xff
  41654f:	mov    esi,0xf175344e
  416554:	jo     0x416506
  416556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416557:	sahf   
  416558:	jge    0x41658e
  41655a:	mov    ch,0x85
  41655c:	jge    0x416592
  41655e:	dec    DWORD PTR [esi-0x4917f30d]
  416564:	xor    BYTE PTR [edi+edi*8],dh
  416567:	jle    0x41658c
  416569:	and    edi,esi
  41656b:	jbe    0x4165c2
  41656d:	xor    al,0x75
  41656f:	loope  0x4165d1
  416571:	dec    edx
  416572:	test   al,0x66
  416574:	inc    ebp
  416575:	xor    al,0xb5
  416577:	inc    ebp
  416578:	xor    eax,0xb356ff34
  41657d:	or     al,0xe8
  41657f:	call   0x28e3:0x46ff33e0
  416586:	idiv   DWORD PTR [esi]
  416588:	sbb    eax,0x20e17534
  41658d:	outs   dx,BYTE PTR ds:[esi]
  41658e:	test   al,0x2e
  416590:	or     eax,0x7d45b534
  416595:	xor    al,0xff
  416597:	push   ds
  416598:	add    ecx,DWORD PTR [eax+ebp*8]
  41659b:	jle    0x41653d
  41659d:	xor    al,0xff
  41659f:	push   cs
	...
  4165c8:	mov    bl,0x2d
  4165ca:	test   DWORD PTR [esi],0x52a12165
  4165d0:	pop    ebp
  4165d1:	xor    al,0xff
  4165d3:	cmp    al,0x68
  4165d5:	cmp    al,0xff
  4165d7:	out    dx,al
  4165d8:	popa   
  4165d9:	fwait
  4165da:	stos   DWORD PTR es:[edi],eax
  4165db:	out    0x46,al
  4165dd:	xor    al,0xb5
  4165df:	int    0x36
  4165e1:	xor    al,0xff
  4165e3:	rol    edx,0x5f
  4165e6:	dec    esi
  4165e8:	cs jle 0x4165d3
  4165eb:	add    BYTE PTR [ebp+0x72e8fef5],ah
  4165f1:	mov    ds:0xbb9dfffe,al
  4165f6:	fcomi  st,st(7)
  4165f8:	popf   
  4165f9:	cmc    
  4165fa:	out    0x75,eax
  4165fc:	sbb    esi,esi
  4165fe:	(bad)  
  4165ff:	call   DWORD PTR [edi]
  416601:	std    
  416602:	idiv   bh
  416604:	(bad)  
  416606:	je     0x416614
  416608:	mov    ebp,0x8fe8077b
  41660d:	cmc    
  41660e:	(bad)  
  41660f:	call   FWORD PTR ds:0x1df7efbc
  416615:	mul    bh
  416617:	pop    ecx
  416618:	or     esi,esi
  41661a:	(bad)  
  41661b:	push   DWORD PTR [edi+0x1c51e8ef]
  416621:	idiv   dh
  416623:	call   DWORD PTR [edi+0x7fa3e7f3]
  416629:	pop    es
  41662a:	add    cl,cl
	...
  416654:	xor    BYTE PTR [ecx],bl
  416656:	add    BYTE PTR [ebp-0x27],dl
  416659:	clc    
  41665a:	add    ah,0x1e
  41665d:	pop    edi
  41665e:	jmp    FWORD PTR [ecx+0x74]
  416661:	hlt    
  416662:	je     0x41666c
  416664:	pop    edx
  416665:	pusha  
  416666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416667:	call   FWORD PTR [ebp+0x7e]
  41666a:	inc    ebp
  41666b:	cld    
  41666c:	retf   0x383a
  41666f:	inc    ecx
  416670:	and    bl,BYTE PTR [edi+0x1]
  416673:	add    BYTE PTR [edx],dh
  416675:	xchg   edi,edi
  416677:	jne    0x416693
  416679:	fcomip st,st(6)
  41667b:	std    
  41667c:	sbb    eax,0xdb3467f6
  416681:	inc    edi
  416682:	(bad)  
  416683:	(bad)  
  416684:	addr16 cmp al,0x28
  416687:	inc    ecx
  416688:	repnz cmc 
  41668a:	je     0x416694
  41668c:	dec    ebx
  41668d:	dec    eax
  41668e:	daa    
  41668f:	std    
  416690:	in     al,dx
  416691:	inc    ebx
  416692:	cmp    al,0x75
  416694:	out    0x4b,eax
  416696:	mov    dh,0x7
  416698:	repz repnz imul edi,edi,0xffffffd4
  41669d:	imul   eax,DWORD PTR [ecx+0x4],0xec891d4b
  4166a4:	retf   0x5f64
  4166a7:	idiv   DWORD PTR [ebx+edx*4-0xf48ba72]
  4166ae:	cmp    al,0x75
  4166b0:	pop    ebx
  4166b1:	xor    DWORD PTR [esi-0x411b4cf5],0xffffffff
	...
  4166e0:	pushf  
  4166e1:	aaa    
  4166e2:	inc    ebx
  4166e3:	bswap  esi
  4166e5:	cli    
  4166e6:	add    DWORD PTR [eax],eax
  4166e8:	dec    ebx
  4166e9:	imul   eax,esi,0xfffffff7
  4166ec:	dec    ebx
  4166ed:	and    BYTE PTR [ebx],al
  4166ef:	add    BYTE PTR [ebp+ebp*2+0x204cff37],al
  4166f6:	add    ebp,DWORD PTR [edx+0x4b]
  4166f9:	inc    esi
  4166fa:	add    ebp,DWORD PTR [edx+0x4b]
  4166fd:	push   esi
  4166fe:	add    ecx,DWORD PTR [ebp-0x732d03fa]
  416704:	into   
  416705:	hlt    
  416706:	xor    edi,edi
  416708:	dec    esp
  416709:	nop
  41670a:	cmp    al,0x75
  41670c:	inc    ebx
  41670d:	jmp    0x4166c4
  41670f:	sti    
  416710:	xor    edi,DWORD PTR [edx]
  416712:	mov    esi,0x432734ff
  416717:	je     0x41675f
  416719:	or     DWORD PTR [edx-0x54dfb4ff],eax
  41671f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416720:	jae    0x416783
  416722:	add    edi,edi
  416724:	sahf   
  416725:	push   eax
  416726:	sub    edi,DWORD PTR [ecx]
  416728:	frstor [edx]
  41672a:	cmp    edx,DWORD PTR [eax-0x30]
  41672d:	or     BYTE PTR [ecx-0x29c33977],bh
  416733:	cmp    esi,esp
  416735:	fdivr  DWORD PTR [edx]
  416737:	sub    al,0x22
  416739:	arpl   si,cx
  41673b:	cmp    edx,edx
  41673d:	mov    edi,DWORD PTR [ecx-0x2ece23cd]
  416743:	mov    ebx,0x0
	...
  41676c:	mov    ds:0xccaeb631,al
  416771:	test   eax,0x90bfd35
  416776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416777:	jno    0x416734
  416779:	cmp    DWORD PTR [esi-0x1b444bc5],ebx
  41677f:	sub    ecx,ecx
  416781:	arpl   WORD PTR [esi-0x72742dc5],cx
  416787:	xor    ebx,DWORD PTR [ecx+esi*1-0x79dcfbed]
  41678e:	mov    al,0xc4
  416790:	mov    WORD PTR [edx],?
  416792:	xor    al,0x34
  416794:	jl     0x4167c7
  416796:	cmp    si,si
  416799:	add    al,0x51
  41679b:	mov    ds:0x8d5631a7,eax
  4167a0:	(bad)  
  4167a1:	sub    BYTE PTR [esi+0x3b],dl
  4167a4:	fs sahf 
  4167a6:	call   0xa8315356
  4167ab:	add    edx,DWORD PTR [ebx+edi*2+0x39]
  4167af:	xor    ecx,DWORD PTR [ecx+esi*1+0x2e]
  4167b3:	mov    cl,0x50
  4167b5:	and    DWORD PTR [ebp+0x70313c68],esi
  4167bb:	and    DWORD PTR [edi],0xa13b1639
  4167c1:	or     DWORD PTR [ecx-0x17359c52],eax
  4167c7:	cmp    dl,dh
  4167c9:	cmp    esi,esi
  4167cb:	cmp    dl,BYTE PTR [ecx+esi*1]
  4167ce:	add    BYTE PTR [eax+eax*1+0x0],bh
	...
  4167f6:	add    BYTE PTR [eax],al
  4167f8:	inc    esp
  4167f9:	and    DWORD PTR [ecx],esi
  4167fb:	cmp    al,0x40
  4167fd:	xor    BYTE PTR [ecx-0xc7cf94],cl
  416803:	fisub  WORD PTR [esi-0x108698d0]
  416809:	leave  
  41680a:	dec    ebp
  41680c:	pop    ebx
  41680d:	cmp    edi,esi
  41680f:	(bad)  
  416810:	and    DWORD PTR [eax],esi
  416812:	jne    0x416801
  416814:	and    BYTE PTR [edi],dl
  416816:	lods   eax,DWORD PTR ds:[esi]
  416817:	mov    dh,0x11
  416819:	add    BYTE PTR [ebp-0xcf8673],0x6a
  416820:	inc    ebx
  416821:	and    eax,0x9719ef7
  416826:	jne    0x416808
  416828:	lds    ebp,FWORD PTR [esi-0x20]
  41682b:	xchg   esi,eax
  41682c:	popa   
  41682d:	xor    BYTE PTR [eax],al
  41682f:	std    
  416830:	jmp    0x4167bd
  416832:	mov    ebp,0xff30598d
  416837:	jmp    0x2cc43d18
  41683c:	xor    BYTE PTR [eax],bh
  41683e:	jmp    DWORD PTR [esi+0x48]
  416841:	mov    ch,0x52
  416843:	ror    DWORD PTR [eax+0x9],1
  416846:	out    dx,eax
  416847:	xchg   edi,eax
  416848:	xor    DWORD PTR [esi+0x66784107],esi
  41684e:	inc    DWORD PTR [esi+0x21]
  416851:	jbe    0x41683f
  416853:	adc    DWORD PTR ss:[eax],esi
  416856:	(bad)  
  416857:	mov    esp,0x87a42140
	...
  416884:	xor    DWORD PTR [eax],0x38705cff
  41688a:	call   FWORD PTR [esi]
  41688c:	jno    0x416844
  41688e:	pop    es
  41688f:	add    edx,ebx
  416891:	dec    WORD PTR [esi]
  416894:	popa   
  416895:	jbe    0x41687b
  416897:	add    BYTE PTR ds:0x9ffffef2,bl
  41689d:	add    al,0xe8
  41689f:	mov    BYTE PTR [ebx+esi*8-0x2],bh
  4168a3:	(bad)  
  4168a4:	aas    
  4168a5:	in     al,dx
  4168a6:	idiv   bh
  4168a8:	in     eax,0xf1
  4168aa:	je     0x4168b4
  4168ac:	sbb    ch,BYTE PTR [edi-0x5b]
  4168af:	call   DWORD PTR ds:0xfddcb4f2
  4168b5:	icebp  
  4168b6:	(bad)  
  4168b7:	call   FWORD PTR [edi]
  4168b9:	std    
  4168ba:	out    0x6c,eax
  4168bc:	int3   
  4168bd:	icebp  
  4168be:	(bad)  
  4168bf:	dec    DWORD PTR [edi-0x17]
  4168c2:	idiv   bh
  4168c4:	cmc    
  4168c5:	fdiv   QWORD PTR [ebp-0x57]
  4168c8:	in     eax,0xf1
  4168ca:	(bad)  
  4168cb:	mov    ch,0xc2
  4168cd:	stc    
  4168ce:	(bad)  
  4168cf:	dec    edx
  4168d1:	pop    ebp
  4168d2:	test   al,0xff
  4168d4:	aad    0xf1
  4168d6:	mov    ah,0xec
  4168d8:	sbb    eax,0x42e8fef2
  4168dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168de:	(bad)  
  4168df:	call   DWORD PTR ds:0xf5f7e7a0
  4168e5:	icebp  
  4168e6:	out    0x55,eax
	...
  416910:	fcomi  st,st(1)
  416912:	(bad)  
  416913:	(bad)  
  416914:	(bad)  
  416916:	idiv   bh
  416918:	adc    eax,0x15a949dd
  41691d:	repnz (bad) 
  41691f:	mov    ch,0x22
  416921:	cli    
  416922:	(bad)  
  416923:	call   DWORD PTR ds:0x8fff0b60
  416929:	add    ebp,eax
  41692b:	cmp    eax,0xfffef074
  416930:	lahf   
  416931:	cmc    
  416932:	idiv   bh
  416934:	push   ebp
  416935:	(bad)  ds:0x39174ba9
  41693b:	dec    DWORD PTR [esi+0x1d512b18]
  416941:	or     BYTE PTR [ecx],bh
  416943:	call   FWORD PTR [esi-0x6f87d4d4]
  416949:	and    BYTE PTR [ebx],al
  41694b:	leave  
  41694c:	or     DWORD PTR [ebp+0x3],ecx
  41694f:	push   ebp
  416950:	rcl    BYTE PTR [esp+eax*4-0x3c],1
  416954:	neg    edx
  416956:	add    ebp,DWORD PTR [edx+0x54]
  416959:	push   edi
  41695a:	scas   al,BYTE PTR es:[edi]
  41695b:	pop    es
  41695c:	repz loopne 0x4169c0
  41695f:	(bad)  
  416960:	fdivr  QWORD PTR [ecx-0x329c0443]
  416966:	stc    
  416967:	inc    eax
  416968:	dec    ebx
  416969:	ja     0x416959
  41696b:	ss jb  0x41694f
  41696e:	add    edi,edi
  416970:	cmp    BYTE PTR ss:[ebx],ch
  416973:	test   BYTE PTR [eax],0x0
	...
  41699a:	add    BYTE PTR [eax],al
  41699c:	mov    dh,0x8f
  41699e:	cmp    BYTE PTR [eax-0x32],ch
  4169a1:	pop    ecx
  4169a2:	ret    0x2cff
  4169a5:	and    al,BYTE PTR [ebx]
  4169a7:	add    bl,cl
  4169a9:	xchg   DWORD PTR [esi+0x3684a307],ebp
  4169af:	dec    DWORD PTR [edi+esi*4+0x3584fbad]
  4169b6:	or     ebp,eax
  4169b8:	sbb    BYTE PTR [esi+0x38],bh
  4169bb:	inc    DWORD PTR [edx+0x17fffee2]
  4169c1:	stos   DWORD PTR es:[edi],eax
  4169c2:	or     DWORD PTR es:[edi+0x5cff2fec],0xfbfbbdb5
  4169cd:	out    dx,al
  4169ce:	lods   eax,DWORD PTR ds:[esi]
  4169cf:	cmovl  ebp,DWORD PTR [ebp+0x7]
  4169d3:	call   0x44e53a
  4169d8:	push   eax
  4169d9:	or     DWORD PTR [ecx],ebp
  4169db:	or     dh,cl
  4169dd:	jge    0x4169c8
  4169df:	add    ecx,DWORD PTR [ebx+0x46]
  4169e2:	lods   al,BYTE PTR ds:[esi]
  4169e3:	cmp    ecx,DWORD PTR [ebx+0x9]
  4169e6:	jmp    0xfd056dee
  4169eb:	aaa    
  4169ec:	dec    esp
  4169ed:	or     ecx,ebp
  4169ef:	lods   eax,DWORD PTR ds:[esi]
  4169f0:	or     al,0xa0
  4169f2:	call   0xe8e16ea4
  4169f7:	xchg   BYTE PTR [esi-0x3176c6cb],al
  4169fd:	xor    al,0xd6
  4169ff:	aaa    
	...
  416a28:	in     al,dx
  416a29:	fcom   st(5)
  416a2b:	mov    cl,0xdc
  416a2d:	sub    eax,0x2bf33854
  416a32:	inc    ebx
  416a33:	add    al,0x4b
  416a35:	add    ch,BYTE PTR [ecx+0x1c224ab0]
  416a3b:	mov    esi,ecx
  416a3d:	sbb    al,0xb6
  416a3f:	aaa    
  416a40:	mov    esp,0xbf8173d8
  416a45:	xor    eax,0x2e1b379e
  416a4a:	sbb    al,0x14
  416a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a4d:	mov    bl,0xdc
  416a4f:	sub    ebx,DWORD PTR ds:0xc2378662
  416a55:	cmp    DWORD PTR [ecx+0x2f],0xffffff8c
  416a59:	sub    eax,0xeaff43e2
  416a5e:	imul   edi,DWORD PTR [ecx+0x6f],0x4b376635
  416a65:	mov    ch,0xff
  416a67:	stos   DWORD PTR es:[edi],eax
  416a68:	ins    BYTE PTR es:[edi],dx
  416a69:	sub    eax,0x73647646
  416a6e:	cmp    eax,0x462d5c2f
  416a73:	jno    0x416ad0
  416a75:	xor    eax,0xb34c373e
  416a7a:	jmp    eax
  416a7c:	jo     0x416aba
  416a7e:	leave  
  416a7f:	cs je  0x416aae
  416a82:	mov    ch,0x19
  416a84:	fs sub al,0xff
  416a87:	adc    DWORD PTR [eiz*2+0x16ff],esp
	...
  416ab2:	add    BYTE PTR [eax],al
  416ab4:	pop    esp
  416ab5:	(bad)  
  416ab6:	test   DWORD PTR [edx],0x5752cc7
  416abc:	lods   eax,DWORD PTR ds:[si]
  416abe:	jns    0x416aa9
  416ac0:	dec    eax
  416ac1:	inc    edx
  416ac2:	ret    0x48e5
  416ac5:	(bad)  
  416ac6:	mov    bh,ch
  416ac8:	leave  
  416ac9:	inc    ebp
  416aca:	cld    
  416acb:	push   ebx
  416acc:	dec    edi
  416acd:	lahf   
  416ace:	pop    ss
  416acf:	fidivr WORD PTR [ebx+0x6a2de804]
  416ad5:	sub    al,0xff
  416ad7:	pusha  
  416ad8:	or     esi,DWORD PTR [ecx]
  416ada:	push   0xffc9d7ab
  416adf:	mov    ebp,0x2828f3db
  416ae4:	dec    edi
  416ae5:	sub    al,0x75
  416ae7:	loope  0x416b59
  416ae9:	out    0xfe,al
  416aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aec:	jge    0x416a8f
  416aee:	shl    eax,0x87
  416af1:	sub    al,0x67
  416af3:	jmp    0x416b3d
  416af5:	or     DWORD PTR [eax-0x17fb2472],eax
  416afb:	ficomp DWORD PTR [ebp+0x2c]
  416afe:	call   DWORD PTR [ecx]
  416b00:	lock icebp 
  416b02:	inc    eax
  416b03:	jmp    0xc0786145
  416b08:	xchg   DWORD PTR [esi+edi*8],ebp
  416b0b:	fadd   QWORD PTR [eax+0x21]
  416b0e:	add    BYTE PTR [esi+0x35],bl
  416b11:	sub    al,0x68
  416b13:	xor    ah,BYTE PTR [edi-0x37]
  416b16:	inc    eax
	...
  416b40:	dec    edx
  416b41:	or     DWORD PTR [eax],eax
  416b43:	add    dl,ah
  416b45:	bnd je 0x416b50
  416b48:	cli    
  416b49:	in     eax,0xfd
  416b4b:	(bad)  
  416b4c:	jge    0x416b41
  416b4e:	je     0x416b4c
  416b50:	ins    DWORD PTR es:[edi],dx
  416b51:	jns    0x416b5a
  416b53:	call   0x401468
  416b58:	jnp    0x416b24
  416b5a:	add    eax,DWORD PTR [eax]
  416b5c:	out    0x7e,eax
  416b5e:	in     al,dx
  416b5f:	push   DWORD PTR [edi+0x79f4e803]
  416b65:	repz dec BYTE PTR [ebx]
  416b68:	bound  ebx,QWORD PTR [eax+edi*1+0x68]
  416b6c:	jmp    0x88df:0xe2004031
  416b73:	stos   DWORD PTR es:[edi],eax
  416b74:	in     eax,dx
  416b75:	cmc    
  416b76:	dec    edi
  416b77:	push   eax
  416b78:	call   0xfd5c:0xbcef0005
  416b7f:	cmp    DWORD PTR [ebx],esi
  416b81:	add    eax,0xfd17ff50
  416b86:	out    0x50,eax
  416b88:	sahf   
  416b89:	cmc    
  416b8a:	(bad)  
  416b8b:	pop    eax
  416b8c:	or     cl,BYTE PTR [eax]
  416b8e:	add    bh,ch
  416b90:	sub    al,0x5d
  416b92:	add    bh,BYTE PTR [edx]
  416b94:	arpl   WORD PTR ds:0xfd57ff50,ax
  416b9a:	out    0x3c,eax
  416b9c:	out    dx,al
  416b9d:	cmc    
  416b9e:	(bad)  
  416b9f:	call   0x4039ee
	...
  416bcc:	fcmovnb st,st(6)
  416bce:	pop    es
  416bcf:	add    BYTE PTR [edi],dh
  416bd1:	sub    ah,0x83
  416bd4:	mov    dh,0xf0
  416bd6:	imul   eax,DWORD PTR [eax],0x75ff1048
  416bdc:	jp     0x416bbd
  416bde:	mov    DWORD PTR [ebp+ecx*1+0x4b4588f6],esp
  416be5:	(bad)  
  416be6:	test   eax,0xb545c19
  416beb:	call   0xff762eae
  416bf0:	loope  0x416bf0
  416bf2:	xor    al,0x75
  416bf4:	push   ebx
  416bf5:	enter  0xff88,0x3c
  416bf9:	fsubr  QWORD PTR [ecx+0xb8e341b]
  416bff:	call   0xff7677ce
  416c04:	and    al,0x8e
  416c06:	aaa    
  416c07:	call   DWORD PTR [esi-0x105bd4d8]
  416c0d:	add    esi,DWORD PTR ds:0x32509c9
  416c13:	push   ebp
  416c14:	rol    BYTE PTR [ecx+eax*4],1
  416c17:	(bad)  
  416c18:	call   FWORD PTR [ebx]
  416c1a:	scas   al,BYTE PTR es:[edi]
  416c1b:	or     esp,ebx
  416c1d:	mov    edi,0x37ecff68
  416c22:	inc    ebx
  416c23:	bswap  edi
  416c25:	jg     0x416c2a
  416c27:	add    BYTE PTR [ebx-0x57],cl
  416c2a:	mov    ebp,0x13c5c8fb
	...
  416c57:	add    BYTE PTR [edi+0x1a],dl
  416c5a:	xor    al,0x75
  416c5c:	pop    ebx
  416c5d:	jae    0x416c0d
  416c5f:	sti    
  416c60:	mov    bl,0x47
  416c62:	imul   edi,edi,0xfbbdb9b4
  416c68:	and    edi,DWORD PTR [edi]
  416c6a:	stc    
  416c6b:	inc    eax
  416c6c:	dec    ebx
  416c6d:	xchg   ebx,eax
  416c6e:	scas   al,BYTE PTR es:[edi]
  416c6f:	sti    
  416c70:	mov    bl,0xa3
  416c72:	push   0xac1094ff
  416c77:	dec    DWORD PTR [ebx+edi*2+0x2d845075]
  416c7e:	or     ebp,eax
  416c80:	mov    BYTE PTR [eax+0x34],ch
  416c83:	jmp    DWORD PTR [ebx+0x9]
  416c86:	cmp    eax,0xd12a6c5d
  416c8b:	shl    BYTE PTR [edx],cl
  416c8d:	enter  0x34e8,0xd6
  416c91:	sub    al,0x41
  416c93:	popf   
  416c94:	mov    ds:0xe4d3462a,al
  416c99:	pop    es
  416c9a:	jmp    0x361a71c3
  416c9f:	scas   al,BYTE PTR es:[edi]
  416ca0:	inc    esp
  416ca1:	and    DWORD PTR [ebx+0x112a344b],ecx
  416ca7:	jo     0x416c8e
  416ca9:	sub    DWORD PTR [esi],ebx
  416cab:	stos   DWORD PTR es:[edi],eax
  416cac:	pop    ebp
  416cad:	out    dx,eax
  416cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416caf:	add    ebx,DWORD PTR [esp+esi*4]
  416cb2:	or     al,0x2b
  416cb4:	mov    ds,WORD PTR [edi+0x6]
  416cb7:	xor    al,0x7b
  416cb9:	mov    eax,ds:0x3e8
	...
  416ce2:	add    BYTE PTR [eax],al
  416ce4:	hlt    
  416ce5:	push   0xffffff99
  416ce7:	xor    al,0x76
  416ce9:	add    DWORD PTR [ecx],eax
  416ceb:	add    BYTE PTR [ebx],0x2a
  416cee:	out    0x1c,al
  416cf0:	fldenv [edx-0x22]
  416cf3:	xor    esi,DWORD PTR [ebx-0x5f]
  416cf6:	adc    al,ch
  416cf8:	fsubr  QWORD PTR [edx]
  416cfa:	push   esp
  416cfb:	xor    bl,ah
  416cfd:	in     al,0x92
  416cff:	xor    ecx,esp
  416d01:	fcom   DWORD PTR [eax+0x5]
  416d04:	dec    ebx
  416d05:	sbb    dh,BYTE PTR [edi-0x2c]
  416d08:	mov    ebp,0x2b1be0b3
  416d0d:	inc    ecx
  416d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d0f:	xor    esp,DWORD PTR [ebx-0x5bccb949]
  416d15:	sub    DWORD PTR [eax+esi*1],ebx
  416d18:	mov    bl,0x9f
  416d1a:	inc    esi
  416d1b:	xor    edx,DWORD PTR [edi+edi*1-0x2bb4ff55]
  416d22:	jno    0x416d44
  416d24:	enter  0x44,0x75
  416d28:	(bad)  [ecx]
  416d2a:	imul   edx,ebx,0x5107b439
  416d30:	in     al,dx
  416d31:	call   FWORD PTR gs:[esi-0x1a]
  416d35:	ret    
  416d36:	sti    
  416d37:	ret    
  416d38:	dec    eax
  416d39:	lahf   
  416d3a:	sbb    DWORD PTR [esi-0x6e],ecx
  416d3d:	add    eax,ebp
  416d3f:	or     ebx,DWORD PTR [eax]
  416d41:	sub    bh,bh
  416d43:	ror    DWORD PTR [eax-0x4d],cl
  416d46:	and    dh,BYTE PTR [esi]
	...
  416d70:	add    dl,BYTE PTR [ecx]
  416d72:	call   0xff69e74e
  416d77:	xchg   ebx,eax
  416d78:	dec    eax
  416d79:	mov    bl,0x1b
  416d7b:	push   ds
  416d7c:	loop   0x416d8e
  416d7e:	call   0xff69c766
  416d83:	add    ebx,0xaee940e3
  416d89:	add    bh,bh
  416d8b:	je     0x416d8d
  416d8d:	xor    ebx,edi
  416d8f:	idiv   DWORD PTR [ecx]
  416d91:	sub    BYTE PTR [eax+0x64],ch
  416d94:	in     eax,0xc9
  416d96:	call   DWORD PTR [edx-0x1c]
  416d99:	daa    
  416d9a:	jne    0x416d8d
  416d9c:	inc    eax
  416d9d:	xor    eax,0xb119d6fe
  416da2:	test   BYTE PTR [ebx],dl
  416da4:	push   cs
  416da5:	sub    DWORD PTR [ecx-0x1b],ebp
  416da8:	sbb    DWORD PTR [esi+0x271bd107],ebx
  416dae:	push   DWORD PTR [esi-0x51046187]
  416db4:	repz adc al,ch
  416db7:	sbb    esp,DWORD PTR [eax+ebp*1]
  416dba:	push   DWORD PTR [eax+0x3c000d0e]
  416dc0:	sbb    al,0x35
  416dc2:	and    DWORD PTR [ebp+0xff2030],0xfc4589c5
  416dcc:	(bad)  
  416dcd:	fdiv   QWORD PTR [eax+edx*1-0xb]
  416dd1:	pusha  
  416dd2:	or     ebp,eax
	...
  416dfc:	mov    edx,0x79ffff74
  416e01:	int3   
  416e02:	push   cs
  416e03:	test   DWORD PTR [ebp+0x2d00000d],ebp
  416e09:	push   ecx
  416e0a:	test   DWORD PTR [eax],0xc7000c62
  416e10:	lahf   
  416e11:	loopne 0x416e11
  416e13:	pop    es
  416e14:	xor    cl,BYTE PTR [edx+ebp*2]
  416e17:	add    BYTE PTR [eax],cl
  416e19:	or     al,0x6a
  416e1b:	add    BYTE PTR [eax],cl
  416e1d:	or     al,0x8d
  416e1f:	inc    ebp
  416e20:	dec    esi
  416e21:	cmp    al,0x8c
  416e23:	test   DWORD PTR [esi],edi
  416e25:	jecxz  0x416e25
  416e27:	jmp    edx
  416e29:	fidiv  DWORD PTR [eax+edi*8+0x45]
  416e2d:	popa   
  416e2e:	sti    
  416e2f:	call   0x40e24c
  416e34:	stc    
  416e35:	retf   
  416e36:	jae    0x416e3d
  416e38:	dec    ebx
  416e39:	add    BYTE PTR es:[eax],al
  416e3c:	loop   0x416dc1
  416e3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e3f:	sub    BYTE PTR [ebx],ah
  416e41:	or     eax,0x3e275ff
  416e46:	sub    eax,0x4fd9f5a9
  416e4b:	mov    edx,DWORD PTR [edx-0x720b7b59]
  416e51:	fsin   
  416e53:	push   eax
  416e54:	pusha  
  416e55:	add    eax,0xd9f5a91d
  416e5a:	mov    BYTE PTR [ebp-0x11e0e],al
	...
  416e88:	ficomp DWORD PTR [ebp-0x5c]
  416e8b:	inc    ebp
  416e8d:	xchg   bh,bh
  416e8f:	addr16 dec ebx
  416e91:	xchg   esi,eax
  416e92:	out    dx,al
  416e93:	inc    eax
  416e94:	dec    ebx
  416e95:	xchg   edi,eax
  416e96:	ja     0x416e88
  416e98:	xchg   esp,eax
  416e99:	mov    ?,WORD PTR [ecx]
  416e9b:	(bad)  
  416e9c:	(bad)  
  416e9d:	xor    eax,0x9eb3761b
  416ea2:	xor    BYTE PTR [ecx-0xc75a32],cl
  416ea8:	ins    BYTE PTR es:[edi],dx
  416ea9:	cmp    eax,DWORD PTR [ebx]
  416eab:	push   0xffc2eb5b
  416eb0:	pop    ebp
  416eb1:	test   BYTE PTR [edi+esi*8],dh
  416eb4:	push   esp
  416eb5:	(bad)  
  416eb6:	xor    BYTE PTR [ebp+0x3f],dh
  416eb9:	mov    edx,0xe844a7cc
  416ebe:	jp     0x416e45
  416ec0:	xor    ebp,eax
  416ec2:	xor    bh,bh
  416ec4:	enter  0x1fb5,0xf7
  416ec8:	sub    al,0xf0
  416eca:	add    esi,DWORD PTR [ebx+ebx*2+0x78]
  416ece:	add    eax,DWORD PTR [eax]
  416ed0:	sub    al,0xbf
  416ed2:	fwait
  416ed3:	stos   DWORD PTR es:[edi],eax
  416ed4:	push   ecx
  416ed5:	jno    0x416eda
  416ed7:	call   esi
  416ed9:	cld    
  416eda:	cmp    bh,bh
  416edc:	add    al,0x28
  416ede:	mov    dh,0x7
  416ee0:	repz or edi,DWORD PTR [ebx]
  416ee3:	push   esp
  416ee5:	mov    BYTE PTR [edx],al
  416ee7:	add    ah,bl
  416ee9:	outs   dx,BYTE PTR ds:[esi]
  416eea:	fwait
  416eeb:	mov    ch,0x0
	...
  416f11:	add    BYTE PTR [eax],al
  416f13:	add    BYTE PTR [ecx],ah
  416f15:	icebp  
  416f16:	add    edi,edi
  416f18:	xchg   esi,eax
  416f19:	dec    esp
  416f1a:	cmp    bh,bh
  416f1c:	aam    0x57
  416f1e:	mov    dh,0x7
  416f20:	jecxz  0x416ea5
  416f22:	cmp    bh,bh
  416f24:	les    esi,FWORD PTR [ebx+0x5fb4e86d]
  416f2a:	xor    BYTE PTR [eax],al
  416f2c:	aas    
  416f2d:	and    BYTE PTR [ebx-0x69f65301],bl
  416f33:	jno    0x416f68
  416f35:	jne    0x416f1a
  416f37:	ret    0x279c
  416f3a:	pop    esp
  416f3b:	sbb    ebx,DWORD PTR [esi+eiz*1+0x1116308e]
  416f42:	xchg   ecx,eax
  416f43:	jne    0x416ed7
  416f45:	es jle 0x416ee3
  416f48:	dec    ebx
  416f49:	or     DWORD PTR [esi-0x4ca11c8f],eax
  416f4f:	ret    0x276c
  416f52:	pushf  
  416f53:	sbb    ebx,DWORD PTR [esi+eiz*1+0x5e]
  416f57:	xor    dh,dl
  416f59:	adc    BYTE PTR [ecx-0x73],al
  416f5c:	and    BYTE PTR [esi],0x4e
  416f5f:	xor    BYTE PTR [esi+0x44303e35],dl
  416f65:	xor    DWORD PTR [ecx],ebp
  416f67:	addr16 cmp al,0x26
  416f6a:	ss jbe 0x416f90
  416f6d:	push   ds
  416f6e:	xor    BYTE PTR cs:[ebx],ah
  416f71:	pop    esp
  416f72:	dec    ebp
  416f73:	xor    BYTE PTR [esi+eiz*1],ah
  416f76:	push   esp
  416f77:	xor    eax,DWORD PTR [eax]
	...
  416f9d:	add    BYTE PTR [eax],al
  416f9f:	add    BYTE PTR [esi+eiz*1],dl
  416fa2:	push   ss
  416fa3:	xor    BYTE PTR [esi+0x44b60e15],bl
  416fa9:	xor    DWORD PTR ds:0xfe260431,edi
  416faf:	jne    0x416fac
  416fb1:	sbb    eax,0x7fe32ff6
  416fb6:	inc    ebp
  416fb7:	xor    ah,ch
  416fb9:	and    eax,0x50f22c2c
  416fbe:	fild   QWORD PTR [edi]
  416fc0:	fsub   QWORD PTR ds:0x29e3305c
  416fc6:	push   edi
  416fc7:	add    al,0x4b
  416fc9:	push   eax
  416fca:	stos   DWORD PTR es:[edi],eax
  416fcb:	add    BYTE PTR [ebx-0x44],cl
  416fce:	jno    0x416ff0
  416fd0:	mov    esp,0x50e4ff9b
  416fd5:	push   eax
  416fd6:	test   al,0xae
  416fd8:	pop    esp
  416fd9:	adc    al,al
  416fdb:	sbb    eax,0xe3bfadb6
  416fe0:	xchg   DWORD PTR ds:0x6d85814f,esp
  416fe6:	dec    DWORD PTR [esi-0x16982a89]
  416fec:	dec    eax
  416fed:	ss mov esi,0x40e2eb11
  416ff3:	jmp    0xe1b69690
  416ff8:	push   eax
  416ff9:	in     al,dx
  416ffa:	enter  0x3466,0xc1
  416ffe:	addr16 call 0xc1ffa64c
	...
  41702c:	fsubrp st(2),st
  41702e:	inc    eax
  41702f:	jmp    0xf1b696ac
  417034:	pusha  
  417035:	cli    
  417036:	enter  0x6c3e,0x31
  41703a:	cmp    eax,0xc924648d
  41703f:	sub    ebp,DWORD PTR [edi]
  417041:	and    eax,0x886b7254
  417046:	les    ebx,FWORD PTR ds:0xe969bbf5
  41704c:	mov    dl,0xff
  41704e:	(bad)  
  41704f:	xchg   esp,eax
  417050:	adc    BYTE PTR ds:0x2434485d,ch
  417056:	mov    DWORD PTR [esp+ebp*1+0x10993590],esp
  41705d:	retf   0x61ff
  417060:	cli    
  417061:	mov    eax,0x894f2827
  417066:	aas    
  417067:	jmp    0xe9fcf949
  41706c:	dec    eax
  41706d:	or     DWORD PTR [eax-0x78],ebp
  417070:	loop   0x41703b
  417072:	(bad)  
  417073:	jmp    DWORD PTR [ebp+eax*1-0x50]
  417077:	jbe    0x41702b
  417079:	or     BYTE PTR [ebx],cl
  41707b:	shl    BYTE PTR [esi+0x63],0x3f
  41707f:	cmp    BYTE PTR [edx+0x35840f08],0x8
  417086:	add    BYTE PTR [eax],al
  417088:	bound  eax,QWORD PTR [ebp+0xd633aa0]
  41708e:	call   0x417180
	...
  4170b7:	add    BYTE PTR [esi],dh
  4170b9:	or     eax,0xca715a00
  4170be:	dec    edi
  4170bf:	call   0x4019df
  4170c4:	push   edx
  4170c5:	cmp    eax,0x3620067
  4170ca:	mov    esi,0x4032be68
  4170cf:	add    BYTE PTR [edx+0xa0874f3],ah
  4170d5:	xchg   edx,eax
  4170d6:	enter  0xfdff,0x4f
  4170da:	add    DWORD PTR [bp+si],esi
  4170dd:	add    edi,DWORD PTR [esi+0x4032b468]
  4170e3:	add    dl,dl
  4170e5:	bnd je 0x4170f0
  4170e8:	mov    cl,BYTE PTR [esi+0x6dffc8]
  4170ee:	mov    dl,0xa3
  4170f0:	cmp    eax,0xca43eaf3
  4170f5:	xchg   esp,eax
  4170f6:	cmp    al,BYTE PTR [ecx+0x22]
  4170f9:	cmp    esp,edi
  4170fb:	inc    ecx
  4170fc:	test   BYTE PTR [eax],cl
  4170fe:	add    BYTE PTR [ebx],cl
  417100:	xor    bl,BYTE PTR [ebx+esi*1+0x56]
  417104:	dec    edx
  417105:	ins    BYTE PTR es:[edi],dx
  417106:	lods   al,BYTE PTR ds:[esi]
  417107:	(bad)  
  417108:	fnsave [esi]
  41710a:	dec    edi
  41710b:	push   0xbeef07f2
  417110:	jp     0x4170bb
  417112:	cmp    DWORD PTR [ecx+0x4b],eax
  417115:	xor    dl,bl
  417117:	(bad)  
  417118:	push   esi
  417119:	sub    bl,BYTE PTR [ebx]
  41711b:	push   ebp
	...
  417144:	xchg   ebx,eax
  417145:	dec    edx
  417146:	sub    eax,0x3313358
  41714b:	out    dx,eax
  41714c:	cmc    
  41714d:	leave  
  41714e:	jne    0x41718a
  417150:	or     dh,BYTE PTR [edx]
  417152:	sar    esi,cl
  417154:	push   ds
  417155:	sbb    bl,BYTE PTR [ebx]
  417157:	inc    ecx
  417158:	xchg   ebx,eax
  417159:	sub    BYTE PTR ds:0x2ccf26e8,0xff
  417160:	mov    al,ds:0x457fc530
  417165:	xor    dh,BYTE PTR [esi-0xf59fa07]
  41716b:	mov    edi,0xff2c9ab2
  417170:	ins    BYTE PTR es:[edi],dx
  417171:	lahf   
  417172:	pop    ebp
  417173:	cmp    BYTE PTR [ebx+ebx*1-0x7a],cl
  417177:	inc    ebp
  417178:	pop    esp
  417179:	ret    0x6a2c
  41717c:	xor    DWORD PTR [ebx-0x119cf84a],edi
  417182:	sub    eax,0xe03744ff
  417187:	(bad)  
  417188:	mov    dh,0x18
  41718a:	sbb    edi,DWORD PTR [ecx+0x6a2cdc35]
  417190:	dec    edi
  417191:	repz mov dh,0x7
  417194:	xor    edi,DWORD PTR [ebp+ebp*1+0x51791cff]
  41719b:	cmp    cl,BYTE PTR [edx+0x54352c30]
  4171a1:	dec    ecx
  4171a2:	ret    0x5ff
  4171a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171a6:	cli    
  4171a7:	out    0x0,eax
	...
  4171cd:	add    BYTE PTR [eax],al
  4171cf:	add    BYTE PTR [edx],bh
  4171d1:	and    eax,0xfe63ff2c
  4171d6:	jmp    0x1c9bd1b
  4171db:	add    BYTE PTR [ebx+0x9],cl
  4171de:	imul   ebp,DWORD PTR [esi+edx*2],0xd60cd111
  4171e5:	and    dl,dh
  4171e7:	sub    al,0x56
  4171e9:	and    eax,0x314cb6ce
  4171ee:	imul   esp,DWORD PTR [ebx-0x44],0x22
  4171f2:	push   ds
  4171f3:	into   
  4171f4:	add    DWORD PTR [edi-0x13],0x3
  4171f8:	push   ss
  4171f9:	mov    ?,WORD PTR [ebp-0x61c6707e]
  4171ff:	sub    al,0x9c
  417201:	xchg   esp,eax
  417202:	and    al,0x30
  417204:	sti    
  417205:	and    DWORD PTR [esp+edx*1],ebx
  417208:	mov    WORD PTR [esp+ebx*8-0x1763f2e5],ds
  41720f:	add    edx,DWORD PTR [eax+0x49]
  417212:	out    dx,al
  417213:	xchg   BYTE PTR [ecx],cl
  417215:	pop    es
  417216:	jmp    0x710df61e
  41721b:	add    ecx,DWORD PTR [ebx+0x9]
  41721e:	jmp    0x5e5e7867
  417223:	add    al,0x4b
  417225:	or     ebx,eax
  417227:	add    esp,ecx
  417229:	or     bl,al
  41722b:	add    esi,DWORD PTR [ecx+0x38c67409]
  417231:	mov    ecx,0x866b
	...
  41725a:	add    BYTE PTR [eax],al
  41725c:	aas    
  41725d:	sbb    dh,BYTE PTR [esi]
  41725f:	sub    al,0x9b
  417261:	and    dh,BYTE PTR [ebx+ebp*1+0x1b249c24]
  417268:	inc    ebx
  417269:	pushf  
  41726a:	call   0x9d8ab272
  41726f:	push   es
  417270:	and    cl,BYTE PTR [ebx+ebp*8]
  417273:	add    ecx,DWORD PTR [ebx-0x4f]
  417276:	push   eax
  417277:	fisttp DWORD PTR [ebx+0x44b5fe09]
  41727d:	xor    DWORD PTR [eax],eax
  41727f:	mov    dl,0x66
  417281:	and    bh,bh
  417283:	cdq    
  417284:	arpl   WORD PTR [ecx],di
  417286:	lea    ebp,[ebx+ebx*1+0x1a]
  41728a:	(bad)  
  41728b:	fdivp  st(7),st
  41728d:	mov    bh,0xe7
  41728f:	add    ch,BYTE PTR [ecx+0x22]
  417292:	jmp    DWORD PTR [eax-0x36]
  417295:	sbb    bh,dh
  417297:	(bad)  
  417298:	jo     0x4172cb
  41729a:	or     DWORD PTR [ebx-0x1695dda0],0x283a19d0
  4172a4:	dec    edi
  4172a5:	and    dh,BYTE PTR [ebp-0xdda767]
  4172ab:	sahf   
  4172ac:	fimul  DWORD PTR ds:0x222a6de8
  4172b2:	jmp    DWORD PTR [eax-0x36]
  4172b5:	sub    al,0xf7
  4172b7:	xchg   BYTE PTR [eax],dh
  4172b9:	scas   eax,DWORD PTR es:[edi]
  4172ba:	call   DWORD PTR [eax]
  4172bc:	dec    esi
  4172bd:	fiadd  WORD PTR [eax-0x17]
	...
  4172e8:	and    DWORD PTR [eax+esi*8+0x76],ebx
  4172ec:	xor    BYTE PTR [edx],ah
  4172ee:	(bad)  
  4172ef:	fcom   QWORD PTR [ecx+ebp*1+0x69]
  4172f3:	test   BYTE PTR [eax],ah
  4172f5:	and    cl,BYTE PTR [ecx-0xe5cc94]
  4172fb:	dec    esi
  4172fc:	in     eax,0x20
  4172fe:	addr16 repz sub eax,0xba3dffca
  417305:	sbb    edi,esi
  417307:	ss pusha 
  417309:	and    BYTE PTR [ebp-0x23],dh
  41730c:	inc    eax
  41730d:	iret   
  41730e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41730f:	es jo  0x4172a4
  417312:	test   DWORD PTR [ecx],edx
  417314:	pop    eax
  417315:	and    bh,bh
  417317:	or     DWORD PTR [eax-0x4f],0x12
  41731b:	ror    BYTE PTR [edi],cl
  41731d:	and    esi,edi
  41731f:	add    BYTE PTR [edi],bh
  417321:	aad    0xf6
  417323:	push   ebp
  417325:	repz je 0x417334
  417328:	dec    edx
  417329:	sbb    BYTE PTR [edi+edi*8-0x237b620b],ah
  417330:	std    
  417331:	repz dec BYTE PTR [ebp-0x91391]
  417338:	cmc    
  417339:	cmp    al,0x67
  41733b:	and    ebx,DWORD PTR [ecx+0x46]
  41733e:	(bad)  
  41733f:	(bad)  
  417340:	aas    
  417341:	fdivr  st(6),st
  417343:	push   ebp
  417345:	repz xor al,0x37
  417348:	dec    ebx
  417349:	inc    esi
  41734a:	jmp    edi
	...
  417374:	sub    BYTE PTR [ecx-0x33660002],0x73
  41737b:	sbb    DWORD PTR [ecx],esp
  41737d:	mov    cl,0xdf
  41737f:	div    DWORD PTR [ebp-0x7d8afc0d]
  417385:	repz das 
  417387:	(bad)  
  417388:	out    dx,eax
  417389:	shl    esi,cl
  41738b:	push   ebp
  41738d:	cmp    esp,edi
  41738f:	fld    QWORD PTR [ebx]
  417391:	repz (bad) 
  417393:	jmp    0x417413
  417395:	pop    ds
  417396:	mov    edi,0xe73c6c74
  41739b:	rol    ebx,1
  41739d:	repz inc bh
  4173a0:	(bad)  
  4173a2:	idiv   bh
  4173a4:	xchg   ebp,eax
  4173a5:	stc    
  4173a6:	(bad)  
  4173a7:	push   DWORD PTR [edx]
  4173a9:	mov    eax,ds:0xf37dd084
  4173ae:	(bad)  
  4173af:	push   eax
  4173b0:	or     al,BYTE PTR [edx+0x3a]
  4173b3:	inc    ecx
  4173b4:	xor    dh,bl
  4173b6:	mov    ah,0xf0
  4173b8:	cmp    eax,0xbffffef3
  4173bd:	pop    ss
  4173be:	out    0xc5,eax
  4173c0:	dec    ebx
  4173c1:	into   
  4173c2:	sub    edi,edi
  4173c4:	shl    BYTE PTR [esi+ecx*2-0x79f90309],cl
  4173cb:	mov    ebp,0xff2916ef
  4173d0:	dec    ebx
  4173d1:	daa    
  4173d2:	jg     0x41736f
  4173d4:	dec    ebx
  4173d5:	xor    al,BYTE PTR [ebx]
  4173d7:	add    DWORD PTR [eax],0x0
	...
  4173fe:	add    BYTE PTR [eax],al
  417400:	sahf   
  417401:	xor    eax,0x31d4ff31
  417406:	clc    
  417407:	cmp    DWORD PTR [ebp-0x37fffccf],0xffffff8c
  41740e:	sbb    al,0xf7
  417410:	mov    esp,0xcf0f0446
  417415:	mov    al,0x3
  417417:	add    BYTE PTR [ebx-0x36],cl
  41741a:	adc    eax,DWORD PTR [eax]
  41741c:	mov    ah,0xaf
  41741e:	sub    BYTE PTR [ebp+0x53],dh
  417421:	jp     0x41744b
  417423:	popf   
  417424:	xchg   esp,eax
  417425:	jle    0x417450
  417427:	mov    ch,0x9f
  417429:	jle    0x417454
  41742b:	inc    DWORD PTR [esp+esi*8-0x57e41805]
  417432:	sub    bh,bh
  417434:	je     0x41740a
  417436:	sbb    esi,edi
  417438:	ins    BYTE PTR es:[edi],dx
  417439:	xchg   esi,eax
  41743a:	sub    BYTE PTR [ebp+0x53],dh
  41743d:	mov    al,dh
  41743f:	popf   
  417440:	pop    esp
  417441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417442:	sub    BYTE PTR [ebp-0xd74991],dh
  417448:	dec    esp
  417449:	cmp    al,0xfb
  41744b:	out    0x7f,eax
  41744d:	scas   al,BYTE PTR es:[edi]
  41744e:	sub    bh,bh
  417450:	cmp    al,0x9e
  417452:	dec    ebx
  417453:	div    DWORD PTR [eax+eiz*8]
  417456:	sub    BYTE PTR [ebp+0x43],dh
  417459:	enter  0x9d3f,0x24
  41745d:	lock sub BYTE PTR [ebp+0x291e09ff],dh
	...
  41748c:	adc    al,0x1f
  41748e:	xchg   esp,eax
  41748f:	sti    
  417490:	and    al,0x2
  417492:	ja     0x4174bd
  417494:	add    al,0x8b
  417496:	dec    esp
  417497:	push   eax
  417498:	hlt    
  417499:	push   ds
  41749a:	push   es
  41749b:	add    al,0x7f
  41749d:	add    ch,BYTE PTR [edx+0x67]
  4174a0:	sbb    edx,DWORD PTR [edi]
  4174a2:	imul   BYTE PTR [eax]
  4174a4:	dec    edi
  4174a5:	xchg   esp,eax
  4174a6:	fidivr DWORD PTR [esi+eax*8+0x35]
  4174aa:	fisubr WORD PTR [eax]
  4174ac:	aam    0x1e
  4174ae:	sbb    DWORD PTR [ecx],ebp
  4174b0:	push   esi
  4174b1:	adc    ecx,eax
  4174b3:	(bad)  
  4174b4:	out    0x1e,al
  4174b6:	into   
  4174b7:	sbb    al,0x51
  4174b9:	mov    bl,0xe8
  4174bb:	sub    BYTE PTR [esi],bh
  4174bd:	adc    ecx,edx
  4174bf:	jnp    0x41748f
  4174c1:	push   ds
  4174c2:	mov    dh,0x28
  4174c4:	fisub  WORD PTR ds:0x319c28b6
  4174ca:	popf   
  4174cb:	arpl   WORD PTR [esi+ebx*1+0x169f6e9e],dx
  4174d2:	xchg   esi,eax
  4174d3:	sub    BYTE PTR [ebx+0x30],dh
  4174d6:	dec    ecx
  4174d7:	sub    BYTE PTR [esi+ebx*1+0x3c],bh
  4174db:	sbb    edi,DWORD PTR [esi+ebx*1+0x7e]
  4174df:	sbb    ecx,DWORD PTR [ebp+0x64287669]
  4174e5:	push   esp
  4174e6:	lea    esi,[eax]
  4174e8:	pop    esp
  4174e9:	push   ds
  4174ea:	push   ecx
  4174eb:	push   esp
  4174ec:	stos   DWORD PTR es:[edi],eax
  4174ed:	push   ds
  4174ee:	pop    esi
  4174ef:	sub    BYTE PTR [eax],al
	...
  417515:	add    BYTE PTR [eax],al
  417517:	add    BYTE PTR [esi+0x44285e35],dl
  41751d:	xor    DWORD PTR [ecx],esp
  41751f:	arpl   WORD PTR [esi+ebx*1],di
  417522:	inc    esi
  417523:	outs   dx,BYTE PTR ds:[esi]
  417524:	cmp    edx,DWORD PTR [esi]
  417526:	sub    BYTE PTR ds:[esp+edx*4],ch
  41752a:	jmp    esp
  41752c:	jae    0x4174c2
  41752e:	pop    es
  41752f:	inc    ecx
  417530:	mov    cl,0x1c
  417532:	jmp    DWORD PTR [esi]
  417534:	arpl   WORD PTR [eax+esi*8+0x16],dx
  417538:	arpl   WORD PTR [esi],bx
  41753a:	call   0xff5fdd84
  41753f:	push   cs
  417540:	mov    ebp,0x2d34e915
  417545:	push   ds
  417546:	(bad)  
  417547:	(bad)  
  417548:	sahf   
  417549:	and    eax,ebp
  41754b:	call   FWORD PTR [edi-0x79df00e3]
  417551:	or     eax,0x2d503c00
  417556:	and    DWORD PTR [ebp+0x42ffb323],0x53
  41755d:	push   ds
  41755e:	jne    0x417541
  417560:	pusha  
  417561:	pop    edi
  417562:	popf   
  417563:	(bad)  
  417564:	ins    BYTE PTR es:[edi],dx
  417565:	nop
  417566:	inc    ebp
  417567:	mov    ebp,0x283ae0cf
  41756c:	dec    edi
  41756d:	push   ds
  41756e:	xor    eax,0xffc87ff6
  417573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417574:	fiadd  DWORD PTR ds:0x1e621be8
  41757a:	inc    DWORD PTR [ecx]
	...
  4175a4:	jbe    0x417588
  4175a6:	inc    eax
  4175a7:	jmp    0xe9417d8c
  4175ac:	enter  0x751d,0xf1
  4175b0:	push   eax
  4175b1:	test   eax,0x1e2c76fc
  4175b6:	jne    0x417625
  4175b8:	and    al,0x94
  4175ba:	pop    es
  4175bb:	push   ecx
  4175bc:	(bad)  
  4175bd:	jnp    0x4175be
  4175bf:	pop    esi
  4175c0:	push   cs
  4175c1:	dec    ebx
  4175c2:	add    al,0xe9
  4175c4:	sbb    edx,DWORD PTR [eax+0x158b68ec]
  4175ca:	inc    BYTE PTR [eax]
  4175cc:	(bad)  
  4175cd:	in     al,0x69
  4175cf:	add    BYTE PTR [eax],bl
  4175d1:	adc    bh,bh
  4175d3:	jne    0x4175ff
  4175d5:	add    DWORD PTR [edx-0x63],esi
  4175d8:	ins    DWORD PTR es:[edi],dx
  4175d9:	in     al,0x88
  4175db:	inc    ebp
  4175dc:	outs   dx,BYTE PTR ds:[esi]
  4175dd:	jge    0x4175e2
  4175df:	add    DWORD PTR [edx],esp
  4175e1:	or     DWORD PTR [ebp-0x11c9a7b],ecx
  4175e7:	inc    edx
  4175e9:	add    dl,dl
  4175eb:	jno    0x4175cf
  4175ed:	or     BYTE PTR [ebx],cl
  4175ef:	shl    BYTE PTR [esi+0x34],0x3c
  4175f3:	add    al,0xf3
  4175f5:	or     BYTE PTR [eax],al
  4175f7:	ja     0x417600
  4175f9:	adc    DWORD PTR [eax+0x3b],0x858d0523
  417600:	cmc    
  417601:	out    0xfe,al
  417603:	inc    DWORD PTR [edx+0xa3a8fd]
	...
  41762d:	add    BYTE PTR [eax],al
  41762f:	add    BYTE PTR [ebp-0x5d97b01d],cl
  417635:	or     bh,ch
  417637:	mov    esi,0x874e452
  41763c:	mov    ch,cl
  41763e:	sar    bh,0xed
  417641:	add    dh,dh
  417643:	lahf   
  417644:	in     eax,dx
  417645:	jecxz  0x417645
  417647:	jne    0x4175f7
  417649:	jecxz  0x4176bf
  41764b:	or     dl,cl
  41764d:	jge    0x4175eb
  41764f:	dec    ebp
  417651:	ffree  st(1)
  417653:	add    al,0x62
  417655:	cmp    DWORD PTR [edx-0x4241e14],ecx
  41765b:	push   0x72
  41765d:	sbb    BYTE PTR ds:0xe72057ff,0xd
  417664:	iret   
  417665:	jecxz  0x417665
  417667:	mov    DWORD PTR [edi+0x4b0067e4],esp
  41766d:	xor    dl,BYTE PTR [esi]
  41766f:	mov    esi,0x40ea6bb3
  417674:	dec    ebx
  417675:	cmp    bl,BYTE PTR [edx+0x26328a3a]
  41767b:	jne    0x4176d0
  41767d:	retf   0xc44f
  417680:	sbb    al,0xeb
  417682:	and    eax,0xafe31775
  417687:	pop    es
  417688:	and    ecx,DWORD PTR [eax+ecx*4-0x1]
  41768c:	add    al,0xe9
  41768e:	inc    eax
  41768f:	add    al,0x4b
  417691:	push   ebp
  417692:	jp     0x417680
	...
  4176bc:	retf   0x4eed
  4176bf:	imul   esp
  4176c1:	sbb    dh,BYTE PTR [edi+0x45]
  4176c4:	out    0x81,eax
  4176c6:	es jne 0x417704
  4176c9:	sub    ebp,DWORD PTR [edi-0x4cc21cf5]
  4176cf:	dec    esp
  4176d1:	push   ss
  4176d2:	inc    ebx
  4176d3:	bswap  esi
  4176d5:	cmp    eax,0x634b0003
  4176da:	mov    edi,0x3324bf7
  4176df:	add    BYTE PTR [esp+eiz*8+0x324cff2f],al
  4176e6:	add    ebp,DWORD PTR [edx+0x4b]
  4176e9:	enter  0x6a03,0x4b
  4176ed:	clc    
  4176ee:	add    ecx,DWORD PTR [ebp-0x732b89fa]
  4176f4:	into   
  4176f5:	jge    0x417724
  4176f7:	(bad)  
  4176f8:	jl     0x4176db
  4176fa:	and    al,0x75
  4176fc:	jae    0x417680
  4176fe:	scas   eax,DWORD PTR es:[edi]
  4176ff:	sti    
  417700:	arpl   WORD PTR [ebx-0x4d],sp
  417703:	jmp    DWORD PTR [esi+eiz*1+0x43]
  417707:	je     0x41774f
  417709:	mov    DWORD PTR [ebp+0x1],ebp
  41770c:	dec    ebx
  41770d:	or     ecx,ebp
  41770f:	fwait
  417710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417711:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417713:	add    eax,DWORD PTR [ebp+edx*4-0x8]
  417717:	sbb    esi,DWORD PTR [edx]
  417719:	push   0x8e9b254e
  41771e:	sbb    DWORD PTR [edi+0x0],esi
	...
  417745:	add    BYTE PTR [eax],al
  417747:	add    dh,al
  417749:	adc    eax,0xba242536
  41774e:	call   0xc225:0x2e68021b
  417755:	test   BYTE PTR [ecx],bl
  417757:	sub    eax,0xd5111b0c
  41775c:	in     eax,0x1a
  41775e:	push   ss
  41775f:	ja     0x417727
  417761:	sub    DWORD PTR [esi],edx
  417763:	and    eax,0xae90b9f4
  417768:	xor    eax,ecx
  41776a:	call   0xfe5b1593
  41776f:	and    al,0xdc
  417771:	sbb    dh,BYTE PTR [edi+esi*8-0x14]
  417775:	in     al,dx
  417776:	mov    ah,BYTE PTR [esp+ecx*8]
  417779:	nop
  41777a:	fs pop ds
  41777c:	mov    esp,0xbc99d61a
  417781:	mov    ds:0x90be94e,al
  417786:	(bad)  
  417787:	outs   dx,BYTE PTR ds:[esi]
  417788:	mov    ebx,0xa424be12
  41778d:	xchg   esp,eax
  41778e:	in     al,0x1b
  417790:	cmp    DWORD PTR [edi-0x52],esp
  417793:	and    al,0xc2
  417795:	test   BYTE PTR [ebp+0x131a8c2c],dl
  41779b:	add    al,0xf3
  41779d:	xchg   dl,dl
  41779f:	ret    0x1b7c
  4177a2:	push   esp
  4177a3:	xor    edi,DWORD PTR [edx+ebx*1-0x7a]
  4177a7:	and    al,0xf6
  4177a9:	or     al,0x91
  4177ab:	sub    al,0x0
	...
  4177d1:	add    BYTE PTR [eax],al
  4177d3:	add    BYTE PTR [edx-0x1e89ffe6],ch
  4177d9:	sub    eax,0x76
  4177dc:	das    
  4177dd:	sbb    ch,BYTE PTR [edx-0x17]
  4177e0:	mov    al,0x8f
  4177e2:	cmp    ebp,DWORD PTR [eax+0x59b51a48]
  4177e8:	outs   dx,DWORD PTR ds:[esi]
  4177e9:	sbb    bh,bh
  4177eb:	dec    esi
  4177ec:	in     eax,0xd
  4177ee:	call   0xff5c2118
  4177f3:	jo     0x41779a
  4177f5:	cmp    eax,0xaf6736f7
  4177fa:	inc    eax
  4177fc:	rcr    ebp,0x40
  4177ff:	jmp    0x1731cc6b
  417804:	das    
  417805:	sbb    bh,bh
  417807:	pushf  
  417808:	hlt    
  417809:	and    ecx,eax
  41780b:	dec    eax
  41780c:	das    
  41780d:	sbb    cl,BYTE PTR [ecx-0xed7f94]
  417813:	inc    bl
  417815:	sbb    DWORD PTR [edi+0x1c],esp
  417818:	repz enter 0xedff,0x66
  41781d:	sbb    edi,esi
  41781f:	out    0x28,al
  417821:	sbb    dh,BYTE PTR [ebp-0x13]
  417824:	jo     0x417889
  417826:	mov    eax,ds:0x859068d6
  41782b:	mov    ch,0x50
  41782d:	sbb    bh,bh
  41782f:	push   0x2a
  417831:	and    eax,0x968bef7
  417836:	je     0x417868
	...
  417860:	les    ebx,FWORD PTR [ebx-0x14]
  417863:	mov    dh,0x68
  417865:	sbb    al,BYTE PTR [eax]
  417867:	sbb    eax,0x91bd86b7
  41786c:	pusha  
  41786d:	sbb    bh,bh
  41786f:	jmp    0xf9a91b48
  417874:	dec    eax
  417875:	sub    bh,BYTE PTR [esi+0x77fc500]
  41787b:	call   0x40133b
  417880:	aad    0xbf
  417882:	jmp    0x41787b
  417884:	in     eax,0xe5
  417886:	(bad)  
  417887:	jne    0x4178e3
  417889:	in     eax,dx
  41788a:	cmp    al,0x9b
  41788c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41788d:	in     al,dx
  41788e:	(bad)  
  41788f:	mov    ch,0x8a
  417891:	hlt    
  417892:	(bad)  
  417893:	inc    DWORD PTR [ebp+0x55e80772]
  417899:	cwde   
  41789a:	(bad)  
  41789b:	jmp    DWORD PTR [ebp-0x4e]
  41789e:	fcomip st,st(7)
  4178a0:	push   ebp
  4178a1:	in     al,dx
  4178a2:	(bad)  
  4178a3:	mov    ch,0x8e
  4178a5:	hlt    
  4178a6:	(bad)  
  4178a7:	jmp    DWORD PTR [ebp+0x72]
  4178aa:	pop    es
  4178ab:	call   0x401005
  4178b0:	push   ebp
  4178b1:	mov    dl,0xd7
  4178b3:	test   DWORD PTR [ebp-0x14],0xe4fa75fe
  4178ba:	or     al,0x9b
  4178bc:	in     eax,0xeb
  4178be:	(bad)  
  4178bf:	mov    ch,0x36
  4178c1:	hlt    
  4178c2:	(bad)  
  4178c3:	inc    DWORD PTR [eax]
	...
  4178e9:	add    BYTE PTR [eax],al
  4178eb:	add    ch,ah
  4178ed:	jno    0x4178f6
  4178ef:	call   0x400fd9
  4178f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178f5:	mov    cl,0xd3
  4178f7:	not    DWORD PTR [ebp-0x558a0115]
  4178fd:	in     al,0xf0
  4178ff:	call   0xf38e:0xb5feeb85
  417906:	(bad)  
  417907:	dec    DWORD PTR [edx-0x1a006309]
  41790d:	jmp    0x4178c3
  41790f:	in     al,dx
  417910:	lods   eax,DWORD PTR ds:[esi]
  417911:	jmp    0x417911
  417913:	call   0x4102fa
  417918:	dec    ebx
  417919:	jg     0x417973
  41791b:	call   0xe864009c
  417920:	lods   ax,WORD PTR ds:[esi]
  417922:	and    edi,edi
  417924:	fnstsw WORD PTR fs:[esi]
  417927:	neg    DWORD PTR [edi+ebx*4+0x2a]
  41792b:	fidiv  DWORD PTR [esi-0x6900de59]
  417931:	retf   0xff19
  417934:	inc    esp
  417935:	mov    edx,0xbf3c9d51
  41793a:	and    DWORD PTR [ebp-0xde40e1],esi
  417940:	and    esp,esi
  417942:	jg     0x417943
  417944:	and    al,0xd7
  417946:	push   edi
  417947:	lock adc al,0xdf
  41794a:	and    edi,edi
  41794c:	sahf   
  41794d:	and    dh,BYTE PTR ss:[ebp+0x0]
	...
  417975:	add    BYTE PTR [eax],al
  417977:	add    BYTE PTR [ebx-0x6],al
  41797a:	or     esi,edi
  41797c:	add    al,0xf7
  41797e:	and    DWORD PTR [ebp-0xde0905],esi
  417984:	jecxz  0x41794f
  417986:	jg     0x417987
  417988:	in     al,dx
  417989:	push   cs
  41798a:	enter  0xf2f7,0x2a
  41798e:	and    edi,edi
  417990:	fcomp  QWORD PTR [esi]
  417992:	xchg   edi,eax
  417993:	sti    
  417994:	jecxz  0x4179a9
  417996:	mov    cl,0xff
  417998:	int3   
  417999:	pop    eax
  41799a:	inc    esi
  41799b:	or     al,0x4b
  41799d:	fisttp QWORD PTR [esp+ebp*8+0x6a2065c8]
  4179a4:	dec    ebx
  4179a5:	int3   
  4179a6:	add    bh,bh
  4179a8:	sbb    ch,BYTE PTR ss:[ebx]
  4179ab:	mov    edx,0x892156c1
  4179b0:	push   es
  4179b1:	pop    esi
  4179b2:	lods   al,BYTE PTR ds:[esi]
  4179b3:	popf   
  4179b4:	push   eax
  4179b5:	loope  0x4179ba
  4179b7:	call   DWORD PTR [esi+0x9]
  4179ba:	fsubp  st(2),st
  4179bc:	or     ecx,DWORD PTR [ecx]
  4179be:	sahf   
  4179bf:	xchg   edi,eax
  4179c0:	inc    esp
  4179c1:	and    DWORD PTR [ecx+0x117741f],ebp
  4179c7:	xor    BYTE PTR [eax],0xca
  4179ca:	call   0xe94ac47a
  4179cf:	sbb    DWORD PTR [ebp+ebx*4-0x20],0x2b
  4179d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179d5:	adc    eax,0x9d4c216e
  4179da:	and    DWORD PTR fs:[eax],eax
	...
  417a01:	add    BYTE PTR [eax],al
  417a03:	add    BYTE PTR [esi-0x1eb0aeff],bh
  417a09:	push   ss
  417a0a:	push   esi
  417a0b:	dec    ebx
  417a0c:	or     DWORD PTR [esi],ecx
  417a0e:	jmp    0x6a673bc9
  417a13:	dec    eax
  417a14:	daa    
  417a15:	rcl    BYTE PTR [ebp+0x8a11cad],0x21
  417a1c:	sahf   
  417a1d:	add    DWORD PTR [ecx-0x4f],eax
  417a20:	mov    dl,0x16
  417a22:	mov    ecx,DWORD PTR es:[esi-0x73288deb]
  417a29:	loope  0x4179d2
  417a2b:	add    eax,eax
  417a2d:	aam    0xb4
  417a2f:	jmp    0x4179bc
  417a31:	or     DWORD PTR [ecx-0x1f],ebp
  417a34:	in     al,0x9a
  417a36:	xchg   DWORD PTR [ebx+0x3a7d2f0],ebp
  417a3c:	jge    0x417a5f
  417a3e:	xor    eax,0x3916ccb1
  417a43:	lods   al,BYTE PTR ds:[esi]
  417a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a45:	shl    BYTE PTR [edi],cl
  417a47:	add    al,0x14
  417a49:	and    DWORD PTR [ecx+0x3316b4b0],eax
  417a4f:	or     eax,0xcec9c8b
  417a54:	jns    0x4179f3
  417a56:	adc    bh,BYTE PTR [edx-0x70ffb05c]
  417a5c:	imul   edx,DWORD PTR [esi],0x68
  417a5f:	mov    cl,0x6f
  417a61:	leave  
  417a62:	(bad)  
  417a63:	cmp    BYTE PTR [edi],dh
  417a65:	sub    al,0xa0
  417a67:	sahf   
	...
  417a90:	sub    edi,DWORD PTR [ecx+0x2648e967]
  417a96:	mov    esi,0x40d25601
  417a9b:	jmp    0xf1b69238
  417aa0:	xor    BYTE PTR [ecx+eax*8+0x76],ah
  417aa4:	sub    esp,DWORD PTR [ecx]
  417aa6:	(bad)  [ebp+0x2b]
  417aa9:	push   ss
  417aaa:	jmp    0x417a94
  417aac:	adc    dl,BYTE PTR [esi+0xfd5e93d]
  417ab2:	inc    esi
  417ab3:	push   ebp
  417ab4:	pop    ds
  417ab5:	push   esi
  417ab6:	mov    ecx,0xff166b4e
  417abb:	cmp    ebx,DWORD PTR [edx-0x344bf92f]
  417ac1:	adc    eax,0x9c6b3575
  417ac6:	pop    es
  417ac7:	inc    ecx
  417ac8:	cmc    
  417ac9:	outs   dx,DWORD PTR ds:[esi]
  417aca:	jmp    DWORD PTR [esi]
  417acc:	or     esi,DWORD PTR [eax+ecx*8+0x5509442b]
  417ad3:	bound  esp,QWORD PTR [edx+ecx*4]
  417ad6:	les    ecx,FWORD PTR ds:0x60b9c2b
  417adc:	mov    ebp,0x63c5e80d
  417ae1:	push   ss
  417ae2:	jmp    DWORD PTR [eax+0xd]
  417ae5:	adc    bh,bh
  417ae7:	je     0x417b15
  417ae9:	push   ss
  417aea:	jne    0x417add
  417aec:	jo     0x417b6b
  417aee:	xchg   esp,eax
  417aef:	ficomp WORD PTR [edx+eax*4+0x4d]
  417af3:	in     eax,0x0
	...
  417b19:	add    BYTE PTR [eax],al
  417b1b:	add    BYTE PTR [ecx+0x49],al
  417b1e:	je     0x417b4b
  417b20:	enter  0xffcf,0xff
  417b24:	data16 sub dh,bh
  417b27:	jne    0x417b07
  417b29:	in     al,0x94
  417b2b:	pushf  
  417b2c:	(bad)  
  417b2e:	dec    edi
  417b2f:	call   DWORD PTR [edi-0x7]
  417b32:	(bad)  
  417b33:	jne    0x417ae3
  417b35:	pop    esp
  417b36:	(bad)  
  417b37:	jne    0x417bb3
  417b39:	loope  0x417b06
  417b3b:	xchg   esi,eax
  417b3c:	(bad)  
  417b3e:	pop    ecx
  417b3f:	mov    ecx,DWORD PTR [edi-0x7]
  417b42:	cmp    BYTE PTR [ecx],0x72
  417b45:	jo     0x417b50
  417b47:	push   edx
  417b48:	mov    edx,0xddff9b55
  417b4d:	and    DWORD PTR [edi+0x7d8a76eb],edi
  417b53:	adc    BYTE PTR [edx],dh
  417b55:	jge    0x417b5e
  417b57:	mov    esp,edi
  417b59:	sbb    dh,bh
  417b5b:	jne    0x417afb
  417b5d:	test   BYTE PTR [eax],al
  417b5f:	mov    esp,DWORD PTR [eax-0x20]
  417b62:	add    DWORD PTR [ebx],ebp
  417b64:	jb     0x417b2c
  417b66:	ror    DWORD PTR [edx+esi*1],0x52
  417b6a:	mov    ch,ah
  417b6c:	pop    ebp
  417b6d:	jb     0x417b7a
  417b6f:	call   edi
  417b71:	add    al,ch
  417b73:	mov    ecx,0xfffef484
  417b78:	xlat   BYTE PTR ds:[ebx]
  417b79:	add    al,0x50
  417b7b:	call   edi
  417b7d:	add    al,ch
  417b7f:	xor    DWORD PTR [eax],eax
	...
  417ba5:	add    BYTE PTR [eax],al
  417ba7:	add    BYTE PTR [ebp-0xc],dh
  417baa:	dec    cl
  417bac:	xor    BYTE PTR ds:0xd9595500,al
  417bb2:	add    ah,0x22
  417bb5:	pop    ebx
  417bb6:	push   esi
  417bb7:	push   ebx
  417bb8:	popa   
  417bb9:	push   0x7
  417bbb:	add    BYTE PTR [esi],ah
  417bbd:	pop    ss
  417bbe:	cmp    BYTE PTR [ebp-0x52],0x8
  417bc2:	je     0x417bd0
  417bc4:	dec    ebx
  417bc5:	lahf   
  417bc6:	lahf   
  417bc7:	cmovnp edi,DWORD PTR [esi+0x36268305]
  417bce:	add    esi,DWORD PTR [ebp+0x52]
  417bd1:	test   DWORD PTR [ebx+0x5b],0xc24cfbf4
  417bd8:	cmp    esp,DWORD PTR [edx]
  417bda:	mov    al,BYTE PTR [ebp+0x57]
  417bdd:	lahf   
  417bde:	and    al,BYTE PTR [edi]
  417be0:	enter  0xff5,0x0
  417be4:	jmp    DWORD PTR ds:0x28f7c00a
  417bea:	jmp    0x89c8:0xbdeb00bf
  417bf1:	xor    al,BYTE PTR [ebx]
  417bf3:	mov    ecx,DWORD PTR [esi]
  417bf5:	ss and al,0x44
  417bf9:	lahf   
  417bfa:	lahf   
  417bfb:	adc    ecx,DWORD PTR [ebx+0x36]
  417bfe:	pop    es
  417bff:	or     ecx,DWORD PTR [ebx]
  417c01:	ds or  al,0x2b
  417c04:	or     edx,DWORD PTR [edi-0x42]
  417c07:	pop    ebp
  417c08:	add    ah,al
  417c0a:	repnz inc DWORD PTR [eax]
	...
  417c31:	add    BYTE PTR [eax],al
  417c33:	add    BYTE PTR [ecx-0x19],dh
  417c36:	sbb    eax,0xc7a34f75
  417c3b:	mov    edi,0xb4364c8
  417c40:	or     al,0x5d
  417c42:	inc    ebx
  417c43:	call   0xff60035f
  417c48:	call   FWORD PTR [eax+0x7cc0c3c7]
  417c4e:	inc    edi
  417c4f:	mov    esi,0xffc44649
  417c54:	mov    ds:0x4b000316,eax
  417c59:	pcmpgtd mm1,QWORD PTR [ebx+0x4d8a2a5e]
  417c60:	aas    
  417c61:	pcmpgtd mm1,QWORD PTR [ebp-0x4b26f6f2]
  417c68:	mov    ebp,0x3e1da89d
  417c6d:	dec    ebp
  417c6e:	rol    DWORD PTR [esi+eiz*8+0x13],0xce
  417c73:	sbb    eax,0x81d14d1e
  417c78:	rcl    BYTE PTR [ebx],0xbe
  417c7b:	sbb    eax,0xc766051e
  417c80:	int3   
  417c81:	xchg   DWORD PTR [esp+eax*2],esp
  417c84:	pusha  
  417c85:	adc    al,0x1c
  417c87:	inc    esp
  417c88:	jae    0x417c0a
  417c8a:	sbb    BYTE PTR ds:0x482c8174,0x6f
  417c91:	and    DWORD PTR [eax+ecx*2],0x89789dd6
	...
  417cc0:	fimul  WORD PTR [eax+eax*2-0xc]
  417cc4:	push   esp
  417cc5:	adc    ebp,ecx
  417cc7:	adc    BYTE PTR [edi-0x742014ae],ah
  417ccd:	or     DWORD PTR [eax-0x16f6b4f7],esp
  417cd3:	adc    bh,ch
  417cd5:	jle    0x417cb3
  417cd7:	or     eax,eax
  417cd9:	(bad)  
  417cda:	fcom   QWORD PTR [eax]
  417cdc:	out    dx,eax
  417cdd:	test   BYTE PTR [ebx+eiz*1+0x43b4127b],ch
  417ce4:	adc    al,0x9d
  417ce6:	sub    al,0x2c
  417ce8:	pushf  
  417ce9:	ins    BYTE PTR es:[edi],dx
  417cea:	cs sbb eax,0x2c2c9d04
  417cf0:	cmp    DWORD PTR [esi+0x1e],ebp
  417cf3:	sbb    eax,0x139c84f7
  417cf8:	mov    esi,0x3b5b2094
  417cfd:	or     ecx,ebp
  417cff:	add    ebx,eax
  417d01:	ins    DWORD PTR es:[edi],dx
  417d02:	ins    BYTE PTR es:[edi],dx
  417d03:	xchg   edi,eax
  417d04:	hlt    
  417d05:	push   eax
  417d06:	add    cl,ah
  417d08:	dec    eax
  417d09:	or     DWORD PTR [eax],eax
  417d0b:	cli    
  417d0c:	sub    al,0x9f
  417d0e:	add    BYTE PTR [ebp+eax*4+0x4a],dh
  417d12:	push   eax
  417d13:	shl    DWORD PTR [edx-0x7b],1
  417d16:	add    cl,ch
  417d18:	ret    
  417d19:	pushf  
  417d1a:	punpckldq mm0,mm5
  417d1d:	test   al,0xd6
  417d20:	dec    ebx
  417d21:	(bad)  
  417d22:	(bad)  
  417d23:	xor    eax,0x0
	...
  417d4c:	out    dx,al
  417d4d:	pop    ds
  417d4e:	pcmpgtb mm0,QWORD PTR [ebp-0x42e8afd6]
  417d55:	sub    bh,BYTE PTR [ebx+0x76]
  417d58:	dec    eax
  417d59:	or     DWORD PTR [ebx+0xac240a7],eax
  417d5f:	xchg   esi,eax
  417d60:	aad    0x25
  417d62:	xorps  xmm1,XMMWORD PTR [esi+0x50818313]
  417d69:	call   0xd974:0xde38d201
  417d70:	sbb    DWORD PTR [ebx],esp
  417d72:	push   0xffffffe9
  417d74:	repnz adc DWORD PTR [ecx-0x17],ebp
  417d78:	repnz adc DWORD PTR [ebp+0x5e],edx
  417d7c:	fld    QWORD PTR [ecx]
  417d7e:	push   0xffffffe9
  417d80:	loop   0x417d93
  417d82:	out    0xf,eax
  417d84:	fist   DWORD PTR [ecx]
  417d86:	push   edx
  417d88:	mov    BYTE PTR [ebp+0x29d89928],bl
  417d8e:	aam    0x53
  417d90:	das    
  417d91:	adc    cl,BYTE PTR [ebx-0x603eef]
  417d97:	xchg   edx,eax
  417d98:	dec    eax
  417d99:	mov    eax,0x9c57b752
  417d9e:	jae    0x1411cec
  417da4:	in     eax,0x9d
  417da6:	(bad)  
  417da7:	push   edx
  417da9:	add    al,al
  417dab:	jne    0x417d87
  417dad:	pop    eax
  417dae:	out    0x9d,eax
	...
  417dd8:	js     0x417dcf
  417dda:	(bad)  
  417ddb:	sub    ebx,DWORD PTR [ecx-0x7f]
  417dde:	ret    
  417ddf:	pop    ebx
  417de0:	add    eax,0xb2c2c84f
  417de5:	add    eax,0x89868b55
  417dea:	(bad)  
  417deb:	lock pop ebp
  417ded:	pop    edx
  417dee:	sub    bl,bl
  417df0:	test   DWORD PTR [edi+0xb],esi
  417df3:	call   FWORD PTR [edi+0x5]
  417df6:	call   0xff2f6cfc
  417dfb:	push   eax
  417dfc:	mov    ch,0x77
  417dfe:	pop    es
  417dff:	call   0x401520
  417e04:	stc    
  417e05:	hlt    
  417e06:	push   edi
  417e07:	add    ebx,edx
  417e09:	add    eax,eax
  417e0b:	je     0x417e3a
  417e0d:	add    BYTE PTR [ebp-0xc],0x42
  417e11:	out    dx,al
  417e12:	je     0x417e20
  417e14:	aad    0x77
  417e16:	pop    es
  417e17:	call   0x406e25
  417e1c:	stos   DWORD PTR es:[edi],eax
  417e1d:	dec    edx
  417e1e:	sti    
  417e1f:	(bad)  
  417e20:	out    dx,eax
  417e21:	cld    
  417e22:	dec    edi
  417e23:	call   FWORD PTR [edi]
  417e25:	or     edi,edi
  417e27:	jne    0x417e53
  417e29:	in     eax,0x98
  417e2b:	std    
  417e2c:	xchg   ebp,eax
  417e2d:	hlt    
  417e2e:	mov    BYTE PTR [ebp-0x76],al
  417e31:	hlt    
  417e32:	je     0x417e24
  417e34:	push   ebp
  417e35:	jp     0x417e2e
  417e37:	dec    edi
  417e39:	add    bh,bh
  417e3b:	jne    0x417e3d
	...
  417e61:	add    BYTE PTR [eax],al
  417e63:	add    BYTE PTR [esi],dh
  417e65:	fst    QWORD PTR [eax]
  417e67:	(bad)  
  417e68:	and    eax,0x55d88af4
  417e6d:	jp     0x417e6a
  417e6f:	call   0xffbec4bf
  417e74:	in     al,0xff
  417e76:	nop
  417e77:	div    ebx
  417e79:	ds jge 0x417e7b
  417e7c:	aam    0x7c
  417e7e:	add    edx,DWORD PTR [edi-0x34]
  417e81:	lea    ecx,[edx]
  417e83:	call   0xff5c307b
  417e88:	shl    BYTE PTR [ebx-0x42],1
  417e8b:	pop    esi
  417e8c:	and    BYTE PTR [ebx+ecx*1+0x0],0x16
  417e91:	stos   DWORD PTR es:[edi],eax
  417e92:	and    DWORD PTR es:[esi],0x2e
  417e96:	add    DWORD PTR [edx+0x6a],esi
  417e99:	inc    edi
  417e9a:	nop
  417e9b:	sete   ch
  417e9e:	or     ebp,eax
  417ea0:	retf   0x19ae
  417ea3:	inc    DWORD PTR [ebp+edx*8+0x19f6fef3]
  417eaa:	sub    ebp,DWORD PTR [edi-0xe5908a]
  417eb0:	not    BYTE PTR [ecx]
  417eb2:	sbb    dh,BYTE PTR [ebp+0x53]
  417eb5:	mov    bl,BYTE PTR [edi-0x3]
  417eb8:	pop    esp
  417eb9:	xchg   DWORD PTR [edx],ebx
  417ebb:	jne    0x417ef8
  417ebd:	(bad)  
  417ebe:	pop    DWORD PTR [edi]
  417ec0:	arpl   sp,bp
  417ec2:	sbb    bh,bh
  417ec4:	inc    esp
  417ec5:	stos   DWORD PTR es:[edi],eax
  417ec6:	scas   eax,DWORD PTR es:[edi]
  417ec7:	adc    eax,DWORD PTR [eax]
	...
  417eed:	add    BYTE PTR [eax],al
  417eef:	add    dl,dl
  417ef1:	and    ebx,DWORD PTR [edx]
  417ef3:	jne    0x417f50
  417ef5:	scas   eax,DWORD PTR es:[edi]
  417ef6:	pop    DWORD PTR [edi]
  417ef8:	and    ebp,DWORD PTR [ecx-0x5cdb00e9]
  417efe:	xchg   edi,eax
  417eff:	or     ecx,DWORD PTR [eax+0x50]
  417f02:	icebp  
  417f03:	(bad)  
  417f04:	sahf   
  417f05:	xor    bl,BYTE PTR [edx]
  417f07:	jne    0x417f4c
  417f09:	retf   0xfc9a
  417f0c:	add    al,0xdf
  417f0e:	sbb    DWORD PTR [ebp+0x5b],esi
  417f11:	or     DWORD PTR [esi],esp
  417f13:	nop
  417f14:	dec    esp
  417f15:	and    DWORD PTR [eax+ebx*1-0x6fe9f014],ecx
  417f1c:	push   esp
  417f1d:	mov    ds:0x1561af0,eax
  417f22:	adc    DWORD PTR [esi-0x41],ebp
  417f25:	paddd  mm3,QWORD PTR [ecx]
  417f28:	push   esi
  417f29:	stc    
  417f2a:	cmc    
  417f2b:	(bad)  
  417f2c:	dec    esp
  417f2d:	and    ebp,ecx
  417f2f:	outs   dx,DWORD PTR ds:[esi]
  417f30:	mov    esp,0x5b46b00f
  417f35:	or     DWORD PTR [ecx*4+0x85c0f9f],esi
  417f3c:	xor    DWORD PTR [edx],ecx
  417f3e:	into   
  417f3f:	pop    DWORD PTR [ecx+eiz*1+0x75]
  417f43:	jo     0x417ed9
  417f45:	movsx  ecx,BYTE PTR [edi+0xc3c1040]
  417f4c:	jae    0x417f75
  417f4e:	scas   eax,DWORD PTR es:[edi]
  417f4f:	sbb    DWORD PTR [ebx+eax*4+0x3c],edi
  417f53:	hlt    
	...
  417f7c:	ret    
  417f7d:	or     bl,BYTE PTR [esi+0x1c10408f]
  417f83:	or     al,0x73
  417f85:	aaa    
  417f86:	(bad)  
  417f87:	sbb    DWORD PTR [ebx+eax*4+0x1c],ebx
  417f8b:	lock ret 
  417f8d:	or     bh,BYTE PTR [esi-0x71]
  417f90:	inc    eax
  417f91:	adc    ah,bh
  417f93:	or     esi,DWORD PTR [ebx]
  417f95:	inc    edi
  417f96:	outs   dx,DWORD PTR ds:[esi]
  417f97:	sbb    DWORD PTR [ebx+eax*4],edi
  417f9a:	mov    esp,0x300bc3fb
  417f9f:	inc    esi
  417fa0:	push   edi
  417fa1:	or     DWORD PTR [esp+ecx*4+0x28258b37],edi
  417fa8:	jne    0x417f60
  417faa:	inc    ebp
  417fab:	(bad)  
  417fac:	cmp    BYTE PTR [ebx+0x19618e7],ah
  417fb2:	add    BYTE PTR [ecx+0xe],al
  417fb5:	jnp    0x417fb6
  417fb7:	bound  edx,QWORD PTR cs:[ebx+edx*1-0x17f93bda]
  417fbf:	push   ebp
  417fc0:	jbe    0x417fd0
  417fc2:	jmp    DWORD PTR [edx+0x3f]
  417fc5:	and    BYTE PTR [ebx],bh
  417fc7:	call   0xaccc8914
  417fcc:	in     al,0x8b
  417fce:	cmp    cl,ch
  417fd0:	mov    ebp,0x49bfe905
  417fd5:	or     DWORD PTR [eax],eax
  417fd7:	es cld 
  417fd9:	adc    al,BYTE PTR [eax]
  417fdb:	jmp    0x24ce8928
	...
  418008:	push   ebx
  418009:	mov    ecx,0xf9b5cfe
  41800e:	jne    0x418009
  418010:	inc    ebx
  418011:	xchg   esp,eax
  418012:	pop    es
  418013:	sar    DWORD PTR [esi],1
  418015:	ud0    edi,DWORD PTR [esi+0x348311bf]
  41801c:	arpl   WORD PTR [ecx],cx
  41801e:	je     0x41802a
  418020:	scas   eax,DWORD PTR es:[edi]
  418021:	std    
  418022:	cmp    ebp,DWORD PTR [eax]
  418024:	dec    edi
  418025:	push   cs
  418026:	jne    0x417fc5
  418028:	and    BYTE PTR [ebx+0x248e96b],al
  41802e:	rcl    BYTE PTR [esp+eax*2],0xa1
  418032:	adc    al,0xc5
  418034:	mov    DWORD PTR [esi],ecx
  418036:	(bad)  
  418037:	hlt    
  418038:	xor    al,0x21
  41803a:	jns    0x41803e
  41803c:	dec    edi
  41803d:	or     DWORD PTR [ecx+0x7227324],ecx
  418043:	cs cmc 
  418045:	and    DWORD PTR [eax],eax
  418047:	jmp    0xd4c48994
  41804c:	ins    BYTE PTR es:[edi],dx
  41804d:	or     DWORD PTR [ecx+esi*8-0x10],esi
  418051:	or     BYTE PTR [eax],al
  418053:	add    BYTE PTR [ebp-0x50],bh
  418056:	(bad)  
  418057:	jne    0x418077
  418059:	loop   0x4180a1
  41805b:	xchg   ebp,eax
  41805c:	cmp    eax,0x2e75fef1
  418061:	icebp  
  418062:	je     0x418070
  418064:	pop    edx
  418065:	nop
  418066:	xchg   esp,eax
  418067:	dec    DWORD PTR [ebp-0x1d]
  41806a:	mov    al,BYTE PTR [eax]
	...
  418094:	repnz or DWORD PTR [ebx+0x3884d645],ecx
  41809b:	add    BYTE PTR [edi+0xf],dl
  41809e:	call   0x4b6329
  4180a3:	(bad)  
  4180a4:	div    ecx
  4180a6:	(bad)  
  4180a7:	push   DWORD PTR [edx-0x69ba38f7]
  4180ad:	add    al,0x0
  4180af:	add    BYTE PTR [edx-0x4d0fbb32],ah
  4180b5:	or     DWORD PTR [eax],eax
  4180b7:	add    bh,bh
  4180b9:	inc    edi
  4180ba:	out    dx,eax
  4180bb:	push   eax
  4180bc:	pop    ds
  4180bd:	dec    eax
  4180be:	repz push eax
  4180c0:	pop    ds
  4180c1:	dec    eax
  4180c2:	not    DWORD PTR [eax-0x43]
  4180c5:	ja     0x4180da
  4180c7:	push   DWORD PTR [edi]
  4180c9:	std    
  4180ca:	out    0xe1,eax
  4180cc:	lods   al,BYTE PTR ds:[esi]
  4180cd:	cmc    
  4180ce:	inc    BYTE PTR [ebx+0x73ffe14f]
  4180d4:	or     DWORD PTR [edx+0x7d72f87d],0xf94f832c
  4180de:	push   DWORD PTR [esp+eiz*2-0x76]
  4180e2:	jge    0x4180d4
  4180e4:	xor    bh,BYTE PTR [ebp+0x20]
  4180e7:	push   DWORD PTR [edi]
  4180e9:	icebp  
  4180ea:	(bad)  
  4180eb:	jne    0x41812b
  4180ed:	loope  0x41812b
  4180ef:	xchg   ebp,eax
  4180f0:	(bad)  
  4180f1:	hlt    
  4180f2:	(bad)  
  4180f3:	jne    0x418140
  4180f5:	scas   al,BYTE PTR es:[edi]
  4180f6:	push   ss
  4180f7:	jne    0x4180f9
	...
  41811d:	add    BYTE PTR [eax],al
  41811f:	add    BYTE PTR [edi-0x36],cl
  418122:	rcl    DWORD PTR [esp+edx*1+0x1b7516c4],1
  418129:	int3   
  41812a:	nop
  41812b:	or     esi,ebx
  41812d:	sti    
  41812e:	jo     0x41812f
  418130:	cld    
  418131:	fist   DWORD PTR [eax+0x7b2ee3f7]
  418137:	(bad)  
  418138:	in     al,dx
  418139:	jmp    0x4180cb
  41813b:	repz repz inc esi
  41813e:	jnp    0x41813f
  418140:	fdiv   st(3),st
  418142:	nop
  418143:	out    dx,eax
  418144:	jecxz  0x418184
  418146:	jnp    0x418147
  418148:	int3   
  418149:	pop    ebx
  41814a:	or     bh,bh
  41814c:	push   esp
  41814d:	popf   
  41814e:	test   al,0xfe
  418150:	mov    esp,0xa77d821b
  418155:	and    cl,BYTE PTR [edi+0x1622211d]
  41815b:	jne    0x4181b4
  41815d:	dec    edx
  41815e:	outs   dx,DWORD PTR ds:[esi]
  41815f:	xchg   esp,eax
  418160:	pushf  
  418161:	cmp    ebp,DWORD PTR [ecx+0x7cd95ff]
  418167:	call   0xff57382d
  41816c:	icebp  
  41816d:	and    DWORD PTR [esi],edx
  41816f:	jne    0x4181c0
  418171:	dec    edx
  418172:	adc    DWORD PTR [esp+esi*2+0x6f751663],0x7a
  41817a:	es xchg edi,eax
  41817c:	fs jae 0x418144
  41817f:	or     dl,BYTE PTR [ebp+0x2b]
  418182:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  4181a9:	add    BYTE PTR [eax],al
  4181ab:	add    BYTE PTR [ebp-0x7d],dl
  4181ae:	push   ss
  4181af:	pop    edi
  4181b0:	in     eax,dx
  4181b1:	pop    eax
  4181b2:	inc    ecx
  4181b3:	adc    BYTE PTR [ebx-0x13],cl
  4181b6:	mov    ch,ah
  4181b8:	enter  0x1f65,0x56
  4181bc:	xor    al,0x9
  4181be:	fmul   QWORD PTR [ebx]
  4181c0:	and    esi,DWORD PTR [esi+ebp*2+0x16]
  4181c4:	and    al,0x82
  4181c6:	lods   al,BYTE PTR ds:[esi]
  4181c7:	bswap  eax
  4181c9:	lea    edx,[ebx+esi*8-0x67]
  4181cd:	inc    DWORD PTR [eax-0x16f6b4fc]
  4181d3:	mov    ch,0x13
  4181d5:	inc    edi
  4181d6:	loope  0x4181db
  4181d8:	cld    
  4181d9:	xchg   ebp,eax
  4181da:	loopne 0x418207
  4181dc:	(bad)  
  4181dd:	jns    0x418205
  4181df:	push   ss
  4181e0:	add    al,0xc6
  4181e2:	and    BYTE PTR [ebx+ecx*2],al
  4181e5:	or     ecx,ebp
  4181e7:	mov    BYTE PTR [esi+0x5e16b911],al
  4181ed:	add    DWORD PTR [ecx],edx
  4181ef:	fidivr WORD PTR [edx+0xe8bfe0b]
  4181f5:	or     eax,0x8b4986a
  4181fa:	jne    0x418203
  4181fc:	enter  0xe48d,0x2
  418200:	cmp    DWORD PTR [ebx],eax
  418202:	push   0xffffff97
  418204:	mov    al,ds:0xe30a5f02
  418209:	or     ecx,ebp
  41820b:	add    ecx,DWORD PTR [ebx-0x55]
  41820e:	scas   eax,DWORD PTR es:[edi]
  41820f:	inc    edx
	...
  418238:	inc    ebx
  418239:	or     DWORD PTR [edi+edi*4+0x7c],ebp
  41823d:	mov    eax,0x21448fb5
  418242:	lods   eax,DWORD PTR ds:[esi]
  418243:	jae    0x4182b9
  418245:	or     ebp,DWORD PTR [edx-0x69]
  418248:	je     0x418252
  41824a:	adc    eax,0x1d495000
  41824f:	or     ah,BYTE PTR [ebx+0x4b03e909]
  418255:	stos   DWORD PTR es:[edi],eax
  418256:	scas   eax,DWORD PTR es:[edi]
  418257:	inc    edx
  418258:	inc    ebx
  418259:	or     DWORD PTR [edx-0x69],ebp
  41825c:	inc    eax
  41825d:	add    eax,0x7e37fb00
  418262:	inc    ebp
  418263:	jno    0x418264
  418265:	mov    al,ds:0x2bc6617
  41826a:	call   0xff4c1d30
  41826f:	fcom   QWORD PTR fs:[edx]
  418272:	push   eax
  418273:	dec    esi
  418274:	les    eax,FWORD PTR [edx]
  418276:	call   0xff4c1aac
  41827b:	jo     0x418241
  41827d:	es jmp 0x418254
  418280:	(bad)
  418283:	cdq    
  418284:	pop    edi
  418285:	xchg   esp,eax
  418286:	pop    es
  418287:	adc    DWORD PTR [esi+0x78],edi
  41828a:	call   FWORD PTR [esi]
  41828c:	rol    ah,1
  41828e:	jecxz  0x4182f4
  418290:	pushf  
  418291:	adc    dl,BYTE PTR [eax-0x7d]
  418294:	aam    0xb
  418296:	jne    0x418289
  418298:	and    bh,bl
  41829a:	xchg   ecx,eax
  41829b:	inc    BYTE PTR [eax]
	...
  4182c1:	add    BYTE PTR [eax],al
  4182c3:	add    BYTE PTR [edi+0x7c],bl
  4182c6:	inc    ebp
  4182c7:	icebp  
  4182c8:	clc    
  4182c9:	or     esi,DWORD PTR [ebp-0x1f]
  4182cc:	pusha  
  4182cd:	ss cli 
  4182cf:	out    0x57,al
  4182d1:	xchg   BYTE PTR [ebp-0x3b],bh
  4182d4:	dec    ecx
  4182d5:	xchg   esp,eax
  4182d6:	sbb    eax,0x5012dd64
  4182db:	into   
  4182dc:	lds    ecx,FWORD PTR [esi]
  4182de:	(bad)  
  4182df:	cmp    al,0x43
  4182e1:	or     dh,BYTE PTR [ebp-0xf]
  4182e4:	xor    BYTE PTR [ebx-0x3],bl
  4182e7:	mov    dh,0x57
  4182e9:	jl     0x418330
  4182eb:	mov    cl,0xb8
  4182ed:	or     esi,DWORD PTR [ebp-0xf]
  4182f0:	and    BYTE PTR [edx-0x6],bl
  4182f3:	sahf   
  4182f4:	aas    
  4182f5:	xchg   BYTE PTR [ebp-0x6f],bh
  4182f8:	dec    eax
  4182f9:	xchg   esp,eax
  4182fa:	or     DWORD PTR [ecx+0x48],edx
  4182fd:	or     DWORD PTR [eax],eax
  4182ff:	add    BYTE PTR [edx+0x54],ah
  418302:	enter  0x3ac2,0x6
  418306:	lea    eax,[ebp-0x46]
  418309:	push   esi
  41830a:	(bad)  
  41830b:	jne    0x4182b3
  41830d:	cmc    
  41830e:	je     0x41831c
  418310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418311:	jnp    0x41831a
  418313:	call   0x4076ca
  418318:	mov    cl,0x73
  41831a:	test   DWORD PTR [eax],0xb7ffff
  418320:	and    al,BYTE PTR [esi]
  418322:	add    BYTE PTR [esi+0x3b],bl
  418325:	enter  0x7,0x0
	...
  41834d:	add    BYTE PTR [eax],al
  41834f:	add    BYTE PTR [edi+0x4b],ah
  418352:	not    DWORD PTR [eax+0x25]
  418355:	jnp    0x41835e
  418357:	call   0x401a46
  41835c:	pop    ecx
  41835d:	imul   al
  41835f:	sti    
  418360:	repnz add eax,0xfdbfff00
  418366:	out    0xe7,eax
  418368:	jo     0x41835f
  41836a:	(bad)  
  41836b:	cmp    ebp,edi
  41836d:	stc    
  41836e:	je     0x418375
  418370:	dec    ebx
  418371:	std    
  418372:	(bad)  
  418373:	jmp    DWORD PTR [edx-0x63038278]
  418379:	jae    0x41839e
  41837b:	lea    ebp,[edi-0x3]
  41837e:	dec    edi
  41837f:	(bad)  
  418380:	dec    DWORD PTR [edi+eiz*8]
  418383:	or     eax,0x8dfef613
  418388:	pop    edi
  418389:	std    
  41838a:	dec    edi
  41838b:	(bad)  
  41838c:	aas    
  41838d:	or     eax,0xf5b83ae7
  418392:	dec    BYTE PTR [ebp-0xb002d1]
  418398:	dec    edi
  418399:	or     eax,0xf5a82ee7
  41839e:	dec    BYTE PTR [ebp+0x500bdd4b]
  4183a4:	push   esp
  4183a5:	hlt    
  4183a6:	sti    
  4183a7:	out    0x78,eax
  4183a9:	xchg   BYTE PTR [ebx],dl
  4183ab:	call   edx
  4183ad:	sub    eax,0x7a868d14
  4183b2:	mov    ah,0xfe
	...
  4183dc:	mov    esi,0x30c41aea
  4183e1:	jo     0x4183f6
  4183e3:	mov    DWORD PTR [esi+0x23458156],ecx
  4183e9:	ret    
  4183ea:	adc    DWORD PTR [ebp+0x43],esi
  4183ed:	dec    edx
  4183ee:	pop    ecx
  4183ef:	sti    
  4183f0:	or     al,0x50
  4183f2:	jge    0x418439
  4183f4:	repz jae 0x418388
  4183f7:	out    dx,eax
  4183f8:	dec    ebx
  4183f9:	(bad)  
  4183fa:	xchg   ebp,eax
  4183fb:	xor    BYTE PTR [esi+0x46],0x4
  4183ff:	je     0x41845f
  418401:	jae    0x418394
  418403:	out    0x4b,eax
  418405:	sahf   
  418406:	test   eax,0x41a5e82
  41840b:	je     0x418477
  41840d:	mov    dh,al
  41840f:	cmp    ecx,DWORD PTR [edx-0x448aee0e]
  418415:	sbb    cl,BYTE PTR [edi+0x68]
  418418:	dec    ebx
  418419:	repnz std 
  41841b:	mov    edi,0xc9ad83e
  418420:	outs   dx,DWORD PTR ds:[esi]
  418421:	xor    DWORD PTR [edi+edi*8],eax
  418424:	push   ds
  418425:	loop   0x418441
  418427:	stos   BYTE PTR es:[edi],al
  418428:	xor    esi,edx
  41842a:	add    cl,BYTE PTR [ebx]
  41842c:	mov    ebx,DWORD PTR [ebp+0x1]
  41842f:	push   0xffc50e36
  418434:	test   DWORD PTR ds:0x4ae2e814,edi
  41843a:	add    al,0x0
  41843c:	inc    eax
  41843d:	mov    dl,0x96
  41843f:	sub    eax,0x0
	...
  418468:	jecxz  0x418472
  41846a:	jmp    0x9e08f872
  41846f:	cwde   
  418470:	push   eax
  418471:	icebp  
  418472:	sbb    esi,DWORD PTR [esi+0x54]
  418475:	or     BYTE PTR [esi-0x3f7a368],cl
  41847b:	jmp    FWORD PTR [edx*8+0x83c125a]
  418482:	cld    
  418483:	pop    ds
  418484:	xor    al,0x7e
  418486:	fstp   QWORD PTR [ebx]
  418488:	or     bl,BYTE PTR [ebx+0x7e241265]
  41848e:	push   ecx
  41848f:	adc    dl,BYTE PTR [esi-0x46a6beeb]
  418495:	pop    es
  418496:	dec    esi
  418497:	adc    dl,BYTE PTR [esi-0x21b9af07]
  41849d:	pop    es
  41849e:	adc    dh,BYTE PTR ds:[esi-0xb]
  4184a2:	inc    eax
  4184a3:	dec    esi
  4184a4:	fiadd  WORD PTR [edi]
  4184a6:	adc    dh,BYTE PTR cs:[esi-0xf]
  4184aa:	adc    BYTE PTR [esi-0x42],dl
  4184ad:	pop    es
  4184ae:	push   ds
  4184af:	ror    ecx,0x85
  4184b2:	adc    DWORD PTR [ebx],eax
  4184b4:	pop    edi
  4184b5:	adc    edx,esp
  4184b7:	sbb    DWORD PTR [esi+ecx*4],edi
  4184ba:	std    
  4184bb:	adc    ah,al
  4184bd:	pop    es
  4184be:	jb     0x418488
  4184c0:	mov    ah,0x66
  4184c2:	and    BYTE PTR [ebp+0x43],al
  4184c5:	or     DWORD PTR [esi+edi*2+0x10ac8b9f],edx
	...
  4184f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184f5:	jge    0x4184e4
  4184f7:	sbb    edx,DWORD PTR [eax]
  4184f9:	rcl    ebp,0x11
  4184fc:	inc    eax
  4184fd:	leave  
  4184fe:	push   ebx
  4184ff:	sar    DWORD PTR [edi+0x6cb4c54d],1
  418505:	fldcw  WORD PTR [ecx+edx*1+0x7c]
  418509:	pop    es
  41850a:	add    BYTE PTR [ebx+ebx*2],bh
  41850d:	or     BYTE PTR [ebp-0x23],dh
  418510:	push   eax
  418511:	ror    BYTE PTR [ebp-0x3febc55a],0x15
  418518:	pop    edx
  418519:	push   es
  41851a:	jne    0x4184fd
  41851c:	cmp    edi,DWORD PTR [esi-0x4]
  41851f:	add    edx,0x4686ff05
  418525:	(bad)  
  418526:	je     0x418501
  418528:	loopne 0x418530
  41852a:	jbe    0xddb68bc9
  418530:	pop    ebx
  418531:	jl     0x41853b
  418533:	push   ecx
  418534:	test   eax,0x3a5efebe
  418539:	jl     0x418537
  41853b:	inc    ecx
  41853c:	xchg   DWORD PTR [ebp-0x34afb102],edx
  418542:	pop    es
  418543:	jmp    0x692d1905
  418548:	xchg   ebx,eax
  418549:	mov    ebp,0xce5a36fd
  41854e:	test   BYTE PTR [ecx+0x59],dh
  418551:	push   es
  418552:	(bad)  
  418553:	jmp    0x72418ea0
	...
  418580:	add    al,0x13
  418582:	or     ebp,DWORD PTR [ecx]
  418584:	mov    bl,0xd
  418586:	adc    cl,0x48
  418589:	jl     0x418590
  41858b:	adc    al,bh
  41858d:	or     DWORD PTR [eax],eax
  41858f:	jmp    0x14e01ef
  418594:	dec    ebx
  418595:	test   eax,0xc6afeefe
  41859a:	je     0x418592
  41859c:	shl    BYTE PTR [ecx+0x647282b],0x75
  4185a3:	in     eax,0x30
  4185a5:	mov    al,0x97
  4185a7:	into   
  4185a8:	cmp    esi,edx
  4185aa:	or     al,0x0
  4185ac:	sbb    bh,BYTE PTR [ebx+0x2c]
  4185af:	inc    ecx
  4185b0:	jb     0x4185cb
  4185b2:	jne    0x4185c0
  4185b4:	mov    dh,BYTE PTR [eax+ebx*4-0x1]
  4185b8:	popf   
  4185b9:	add    DWORD PTR [ebp-0xe65348],0x68
  4185c0:	jl     0x4185cd
  4185c2:	add    BYTE PTR [eax],al
  4185c4:	out    dx,eax
  4185c5:	mov    es,ecx
  4185c7:	(bad)  
  4185c8:	mov    ebp,0x20e85019
  4185cd:	jg     0x4185ce
  4185cf:	jmp    FWORD PTR [edi-0x42013e71]
  4185d5:	sbb    DWORD PTR [eax-0x1],edx
  4185d8:	ja     0x41862c
  4185da:	(bad)  
  4185db:	jmp    FWORD PTR [ebp+0x32664e22]
  4185e1:	or     cl,BYTE PTR [ecx+0x85]
	...
  41860b:	add    BYTE PTR [esi-0x1d0000e9],bh
  418611:	or     BYTE PTR [ebx+esi*8-0x72fff60e],al
  418618:	xchg   edi,eax
  418619:	dec    esp
  41861a:	(bad)  
  41861b:	(bad)  
  41861c:	cmp    eax,0xe2100221
  418621:	or     DWORD PTR [eax],eax
  418623:	je     0x4185d4
  418625:	xchg   BYTE PTR [edx+0x2c],al
  418628:	mov    ds:0xa32c92a1,al
  41862d:	or     eax,ebp
  41862f:	sub    eax,esp
  418631:	or     DWORD PTR [eax],eax
  418633:	or     esi,DWORD PTR [edx-0x61]
  418636:	add    ebp,ecx
  418638:	sbb    ecx,DWORD PTR [edx]
  41863a:	add    BYTE PTR [eax],al
  41863c:	das    
  41863d:	jg     0x418601
  41863f:	(bad)  
  418640:	popf   
  418641:	adc    eax,0xbd3e428d
  418646:	xchg   si,ax
  418648:	dec    esi
  418649:	int3   
  41864a:	(bad)  
  41864b:	out    0x4b,eax
  41864d:	out    dx,al
  41864e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41864f:	dec    DWORD PTR [edx+ebp*8-0x26b18abe]
  418656:	jg     0x418658
  418658:	dec    ebx
  418659:	lock or eax,0x9fc84775
  41865f:	sahf   
  418660:	ins    BYTE PTR es:[edi],dx
  418661:	mov    dh,0xfa
  418663:	mov    edi,0xa79afede
  418668:	xor    esi,DWORD PTR [ecx]
  41866a:	add    al,0xff
  41866c:	fsubp  st(3),st
  41866e:	sbb    cl,BYTE PTR [ecx]
	...
  418698:	mov    bl,0x96
  41869a:	push   cs
  41869b:	jmp    0x4186ee
  41869d:	sbb    BYTE PTR [edi+edi*8],al
  4186a0:	mov    dh,0xf6
  4186a2:	sbb    bh,ch
  4186a4:	fdivr  QWORD PTR [ebx+0xf]
  4186a7:	(bad)  
  4186a8:	(bad)  
  4186a9:	mov    al,0xd
  4186ab:	jmp    DWORD PTR [esi+edi*2]
  4186ae:	mov    dl,0x2b
  4186b0:	jns    0x418674
  4186b2:	sbb    al,BYTE PTR [ecx-0x4d]
  4186b5:	pop    ebx
  4186b6:	(bad)  
  4186b8:	or     al,0xde
  4186ba:	repnz dec edi
  4186bc:	add    al,0xc6
  4186be:	cli    
  4186bf:	out    0x1,eax
  4186c1:	inc    ebp
  4186c2:	ud0    esp,ebx
  4186c5:	(bad)  
  4186c6:	jbe    0x4186c7
  4186c8:	in     al,dx
  4186c9:	inc    edi
  4186ca:	ret    
  4186cb:	mov    WORD PTR [ecx-0x687a8422],cs
  4186d1:	and    al,0xf
  4186d3:	call   esp
  4186d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186d6:	repnz (bad) 
  4186d8:	xchg   esi,eax
  4186d9:	pop    esi
  4186da:	push   cs
  4186db:	inc    esp
  4186dd:	sbb    cl,BYTE PTR [edi+0x66]
  4186e0:	dec    ebx
  4186e1:	repnz stc 
  4186e3:	mov    edi,0xa79aca3f
  4186e8:	arpl   WORD PTR [ecx+0x91eff02],si
  4186ee:	cmc    
  4186ef:	sbb    ebx,edx
  4186f1:	pushf  
  4186f2:	fisttp QWORD PTR [esi]
  4186f4:	xchg   esp,eax
  4186f5:	mov    esi,0x48c0d9c
  4186fa:	cmp    DWORD PTR [eax+eax*1],ebx
	...
  418721:	add    BYTE PTR [eax],al
  418723:	add    BYTE PTR [edx+0x1b0ec59c],al
  418729:	pop    ecx
  41872a:	mov    esi,0x48f14c98
  41872f:	push   cs
  418730:	ins    BYTE PTR es:[edi],dx
  418731:	add    al,0xc1
  418733:	push   ss
  418734:	mov    eax,0xc680a604
  418739:	(bad)  
  41873a:	sahf   
  41873b:	push   cs
  41873c:	push   esp
  41873d:	pop    ecx
  41873e:	xchg   esi,eax
  41873f:	pop    eax
  418740:	pop    DWORD PTR [ebx]
  418742:	mov    cs,WORD PTR [esi]
  418744:	xor    esi,DWORD PTR [esi+0xc]
  418747:	add    al,0x4b
  418749:	mov    gs,WORD PTR [eax+0x7620cffe]
  41874f:	push   cs
  418750:	sub    al,0x4
  418752:	xor    al,0x4f
  418754:	and    eax,0xab1b6604
  418759:	outs   dx,BYTE PTR ds:[esi]
  41875a:	jmp    0x90ff9b62
  41875f:	or     eax,0x4641040c
  418764:	fadd   DWORD PTR [ebx]
  418766:	inc    esi
  418767:	cmp    al,0x9
  418769:	adc    eax,0xf4c1b8e9
  41876e:	addr16 inc edi
  418770:	mov    ebx,0xc0e2e02
  418775:	mov    fs,WORD PTR [eax+0xd]
  418778:	fadd   QWORD PTR [ebx]
  41877a:	jmp    0x624ad282
  41877f:	enter  0x1040,0x29
  418783:	xchg   edi,eax
  418784:	dec    edi
  418785:	mov    eax,eax
  418787:	add    eax,DWORD PTR [eax]
	...
  4187ad:	add    BYTE PTR [eax],al
  4187af:	add    BYTE PTR [esi],dh
  4187b1:	push   cs
  4187b2:	adc    ah,bh
  4187b4:	dec    ebx
  4187b5:	or     DWORD PTR [eax],eax
  4187b7:	jmp    0xa86d288c
  4187bc:	dec    eax
  4187bd:	add    al,0x75
  4187bf:	cmc    
  4187c0:	inc    eax
  4187c1:	cmp    dl,BYTE PTR [edi-0x7b6db922]
  4187c7:	xchg   ecx,eax
  4187c8:	cmp    eax,0x9541ff04
  4187cd:	or     BYTE PTR [eax],al
  4187cf:	jmp    0xc00315d1
  4187d4:	inc    esi
  4187d5:	add    al,0x50
  4187d7:	rcl    DWORD PTR [eax],0x98
  4187da:	(bad)  
  4187db:	scas   al,BYTE PTR es:[edi]
  4187dc:	in     al,0x8d
  4187de:	shl    DWORD PTR [edi-0x61affbb2],0xfc
  4187e5:	sar    ch,0x96
  4187e8:	ds icebp 
  4187ea:	in     al,0x5
  4187ec:	dec    edi
  4187ed:	or     DWORD PTR [ecx-0xfc6494],ecx
  4187f3:	jle    0x418804
  4187f5:	adc    al,0x84
  4187f7:	scas   eax,DWORD PTR es:[edi]
  4187f8:	inc    edi
  4187f9:	or     DWORD PTR [eax],eax
  4187fb:	pop    esp
  4187fc:	pushf  
  4187fd:	(bad)  
  4187fe:	std    
  4187ff:	dec    si
  418801:	cli    
  418802:	add    ecx,edi
  418804:	dec    eax
  418805:	or     DWORD PTR [eax],eax
  418807:	out    0xc4,al
  418809:	xchg   edx,eax
  41880a:	(bad)  
  41880b:	call   0x2bd61c58
  418810:	dec    ebp
  418811:	add    bh,bh
  418813:	ins    BYTE PTR es:[edi],dx
	...
  41883c:	or     DWORD PTR [edi],ebp
  41883e:	push   eax
  41883f:	shl    DWORD PTR [ebp+esi*1+0x41],0xe9
  418844:	inc    eax
  418845:	shl    DWORD PTR [ebx-0x17],0x48
  418849:	push   cs
  41884a:	rcl    BYTE PTR [edx+ecx*2+0x546474ee],0xc7
  418852:	std    
  418853:	push   cs
  418854:	push   esi
  418855:	xchg   esp,eax
  418856:	inc    ecx
  418857:	add    BYTE PTR [esi-0x7969994a],dl
  41885d:	(bad)  
  41885e:	(bad)  
  41885f:	out    0x14,eax
  418861:	mov    cl,0xfe
  418863:	jmp    FWORD PTR [ecx+0x79027546]
  418869:	mov    cl,0x8b
  41886b:	xchg   ebp,eax
  41886c:	loopne 0x418882
  41886e:	(bad)  
  41886f:	jmp    DWORD PTR [edi]
  418871:	enter  0x892a,0xef
  418875:	pop    ecx
  418876:	(bad)  
  418877:	inc    DWORD PTR [ebp+0x2328a69e]
  41887d:	or     eax,0x1e6675ff
  418882:	cdq    
  418883:	xchg   esi,eax
  418884:	mov    ch,0x15
  418886:	push   DWORD PTR [ebp-0xec02]
  41888c:	adc    ah,BYTE PTR ds:0x15b596e1
  418892:	mov    DWORD PTR [ebp-0xeb5e],eax
  418898:	bound  esp,QWORD PTR [ebp+0xd633c23]
  41889e:	push   DWORD PTR [ebp+0x0]
	...
  4188c8:	jb     0x4188de
  4188ca:	(bad)  
  4188cb:	dec    edx
  4188cd:	cwde   
  4188ce:	arpl   WORD PTR [eax],ax
  4188d0:	xor    al,BYTE PTR [ecx]
  4188d2:	mov    edi,0x299e1174
  4188d7:	cmp    al,0xe3
  4188d9:	add    eax,0x13e2b5ff
  4188de:	(bad)  
  4188df:	inc    DWORD PTR [ebp+0xbe8069b]
  4188e5:	adc    edi,edi
  4188e7:	dec    DWORD PTR [edx+0x35ff9251]
  4188ed:	add    DWORD PTR [ebp-0xeadb3e],0x50
  4188f4:	xor    eax,0x4bfebc5b
  4188f9:	sbb    ecx,DWORD PTR [eax+ebp*8]
  4188fc:	jp     0x41888a
  4188fe:	add    al,BYTE PTR [eax]
  418900:	(bad)  
  418901:	das    
  418902:	cld    
  418903:	test   BYTE PTR [esi],cl
  418905:	add    ecx,DWORD PTR [ebx]
  418907:	jmp    FWORD PTR [esp+eax*2-0xd5b01b1]
  41890e:	sbb    DWORD PTR [edi+eiz*1],esp
  418911:	lock add bh,bh
  418914:	fisub  WORD PTR [edi-0x387300f7]
  41891a:	jle    0x4188ae
  41891c:	test   dl,dl
  41891e:	cmp    al,0xc2
  418920:	push   ebx
  418921:	lock scas eax,DWORD PTR es:[edi]
  418923:	mov    ah,BYTE PTR [edi-0x3e]
  418926:	nop
  418927:	or     esp,DWORD PTR [ebx-0x5a]
  41892a:	jno    0x41892b
	...
  418954:	fs out 0x42,al
  418957:	je     0x4189a5
  418959:	inc    eax
  41895a:	mov    ah,0xfe
  41895c:	fdivrp st(7),st
  41895e:	sbb    ch,BYTE PTR [ebx-0x17f565b3]
  418964:	mov    dl,0x84
  418966:	or     edi,edi
  418968:	adc    dh,BYTE PTR [ebp+0x7b9ffffb]
  41896e:	sbb    BYTE PTR [ebx-0x6188f9],al
  418974:	mov    dl,0xd1
  418976:	or     DWORD PTR [ebp+0x53],esi
  418979:	pop    edx
  41897a:	jg     0x41890b
  41897c:	adc    al,0x60
  41897e:	jge    0x4189c5
  418980:	bswap  ebp
  418982:	in     al,dx
  418983:	(bad)  
  418984:	jle    0x418970
  418986:	sbb    bh,BYTE PTR [edi+0x6a0b47fc]
  41898c:	sub    BYTE PTR [edi],bh
  41898e:	xchg   ecx,eax
  41898f:	pop    es
  418990:	jecxz  0x418a0f
  418992:	or     edi,edi
  418994:	in     al,0xcc
  418996:	out    0xfe,al
  418998:	push   esi
  418999:	or     ecx,esi
  41899b:	sbb    esp,DWORD PTR [eax+0x610b1e00]
  4189a1:	or     DWORD PTR [ecx-0x16b57f48],eax
  4189a7:	fwait
  4189a8:	ja     0x4189e7
  4189aa:	test   al,0x3
  4189ac:	mov    ah,0x36
  4189ae:	mov    dh,0xdc
  4189b0:	or     ecx,DWORD PTR [ecx]
  4189b2:	add    edi,edx
  4189b4:	mov    edi,0xfeee00
	...
  4189dd:	add    BYTE PTR [eax],al
  4189df:	add    ah,bl
  4189e1:	jne    0x4189e0
  4189e3:	mov    bl,0x2c
  4189e5:	xor    al,0x1d
  4189e7:	lds    ecx,FWORD PTR [eax+edx*2-0xeb36f2a]
  4189ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189ef:	pop    es
  4189f0:	jl     0x4189f2
  4189f2:	rol    DWORD PTR [esi],1
  4189f4:	fld    DWORD PTR [eax]
  4189f6:	mov    esi,0x14686c9d
  4189fb:	enter  0x90b,0x41
  4189ff:	shl    DWORD PTR [eax],1
  418a01:	dec    edx
  418a02:	jmp    0xd079a811
  418a07:	les    ecx,FWORD PTR [eax+ebp*8-0x14]
  418a0b:	jo     0x418a51
  418a0d:	add    dl,ah
  418a0f:	inc    ebx
  418a10:	mov    bh,0x15
  418a12:	sbb    DWORD PTR [ecx+eiz*2-0x64fbd7c3],ebx
  418a19:	add    ah,bh
  418a1b:	sti    
  418a1c:	sub    al,0x9b
  418a1e:	ins    BYTE PTR es:[edi],dx
  418a1f:	or     bl,BYTE PTR [ecx+esi*8]
  418a22:	cmp    al,0x74
  418a24:	adc    al,0x0
  418a26:	rol    DWORD PTR [ebx],cl
  418a28:	mov    eax,ds:0x409ac109
  418a2d:	dec    edx
  418a2e:	jmp    0xe94186ce
  418a33:	and    ebx,0xffffffe1
  418a36:	push   esp
  418a37:	or     ch,ah
  418a39:	adc    eax,DWORD PTR [eax]
  418a3b:	sub    esp,edx
  418a3d:	sub    edx,DWORD PTR [eax-0x67]
  418a40:	inc    eax
  418a41:	sbb    BYTE PTR [ebx+0x26],0x0
	...
  418a6c:	inc    ecx
  418a6d:	adc    al,0xc0
  418a6f:	xchg   ebp,eax
  418a70:	fmul   QWORD PTR [edi+0x68]
  418a73:	ret    0x488c
  418a76:	add    BYTE PTR [ecx+0x11087651],bh
  418a7c:	in     al,dx
  418a7d:	add    edi,edi
  418a7f:	(bad)  
  418a80:	push   ecx
  418a81:	lahf   
  418a82:	nop
  418a83:	not    BYTE PTR [edx-0xf]
  418a86:	cwde   
  418a87:	pop    eax
  418a88:	push   ecx
  418a89:	add    bh,bh
  418a8b:	pop    esp
  418a8c:	inc    ebx
  418a8d:	add    BYTE PTR [ebp-0xf],dh
  418a90:	xor    BYTE PTR ds:0xd252d68f,cl
  418a96:	shl    ebp,0x48
  418a99:	push   esi
  418a9a:	mov    edx,ebp
  418a9c:	enter  0xebc4,0xb6
  418aa0:	inc    edx
  418aa1:	add    BYTE PTR [ebp-0xa6acd4],cl
  418aa7:	xor    al,0x57
  418aa9:	(bad)  
  418aaa:	je     0x418aa1
  418aac:	xor    bl,bl
  418aae:	(bad)  
  418aaf:	jmp    0xe7019efc
  418ab4:	(bad)
  418ab7:	call   0x81865104
  418abc:	dec    edi
  418abd:	or     DWORD PTR [eax],eax
  418abf:	jmp    0x7735cf4f
  418ac4:	dec    edx
  418ac5:	or     DWORD PTR [eax],eax
  418ac7:	add    eax,DWORD PTR [edi+0x73]
  418aca:	add    bl,dl
  418acc:	dec    eax
  418acd:	jae    0x418acf
  418acf:	ins    BYTE PTR es:[edi],dx
	...
  418af8:	int3   
  418af9:	cli    
  418afa:	dec    edi
  418afb:	fs test ch,dh
  418afe:	test   BYTE PTR [esi+0x52],0x59
  418b02:	inc    DWORD PTR [eax]
  418b04:	mov    bh,0x12
  418b06:	push   DWORD PTR [ebp+0x2e]
  418b09:	sbb    eax,0xaf263a4
  418b0e:	or     eax,eax
  418b10:	xchg   esi,eax
  418b11:	jmp    edi
  418b13:	mov    fs,edx
  418b15:	or     al,BYTE PTR [eax]
  418b17:	push   0x3fdd7a
  418b1c:	pop    ebp
  418b1d:	mov    cs,WORD PTR [esi]
  418b1f:	call   0x410489
  418b24:	sar    BYTE PTR [ebp-0x30],cl
  418b27:	lea    esp,[edi]
  418b29:	sbb    edi,esi
  418b2b:	call   FWORD PTR [ebp+0x55e850ba]
  418b31:	jns    0x418b32
  418b33:	call   FWORD PTR [ebx]
  418b35:	jg     0x418b27
  418b37:	imul   DWORD PTR [ebp+0x11]
  418b3a:	call   0xff528e4c
  418b3f:	push   0x72
  418b41:	mov    ds:0x5233cb3,al
  418b46:	push   DWORD PTR [ebp-0xe64e]
  418b4c:	popf   
  418b4d:	(bad)
  418b51:	outs   dx,BYTE PTR ds:[esi]
  418b52:	(bad)  
  418b53:	(bad)  
  418b54:	fstp   TBYTE PTR [esi-0x14]
  418b57:	imul   DWORD PTR [ebp+0xbd8311]
	...
  418b81:	add    BYTE PTR [eax],al
  418b83:	add    dh,cl
  418b85:	sbb    bh,bh
  418b87:	push   DWORD PTR [edx]
  418b89:	mov    ss,WORD PTR [ecx]
  418b8b:	push   0xbeef0a23
  418b90:	lods   eax,DWORD PTR ds:[esi]
  418b91:	dec    edi
  418b92:	in     al,dx
  418b93:	neg    DWORD PTR [ebp+0x2a75ff11]
  418b99:	and    dl,BYTE PTR [edi-0xee524e]
  418b9f:	mov    ch,0x7e
  418ba1:	sbb    edi,edi
  418ba3:	dec    DWORD PTR [ebx+0x48]
  418ba6:	cmp    al,0x90
  418ba8:	cld    
  418ba9:	dec    esi
  418baa:	or     BYTE PTR [ebp-0xf7c105],dh
  418bb0:	in     al,dx
  418bb1:	mov    ah,0xf6
  418bb3:	(bad)  
  418bb4:	pop    esi
  418bb5:	call   0x2f1dbbd4
  418bba:	or     bh,bh
  418bbc:	sahf   
  418bbd:	pop    ds
  418bbe:	adc    bh,bh
  418bc0:	int3   
  418bc1:	pop    ss
  418bc2:	pop    eax
  418bc3:	nop
  418bc4:	les    edx,FWORD PTR [esi]
  418bc6:	or     BYTE PTR [ebp-0x3d],al
  418bc9:	or     BYTE PTR [edi+0x806b4fe],bh
  418bcf:	jne    0x418b80
  418bd1:	pop    ss
  418bd2:	or     ah,BYTE PTR [edx+0x4b]
  418bd5:	lock cmp edx,eax
  418bd8:	dec    edi
  418bd9:	lock lods eax,DWORD PTR ds:[esi]
  418bdb:	mov    ah,BYTE PTR [edi-0x6b17bf90]
  418be1:	fiadd  WORD PTR [esi]
  418be3:	lea    ecx,[esi]
  418be5:	aam    0xb3
  418be7:	inc    BYTE PTR [eax]
	...
  418c0d:	add    BYTE PTR [eax],al
  418c0f:	add    dh,dh
  418c11:	inc    DWORD PTR ds:0x22d84775
  418c17:	bound  ecx,QWORD PTR [ebx-0x10]
  418c1a:	stc    
  418c1b:	mov    edi,0xe66d54
  418c20:	dec    ebx
  418c21:	lock cmp eax,0x2ef5345
  418c27:	add    BYTE PTR [ebx-0x59],cl
  418c2a:	shl    bl,0x44
  418c2d:	in     al,dx
  418c2e:	add    al,BYTE PTR [eax]
  418c30:	mov    cl,0xf2
  418c32:	cwde   
  418c33:	jmp    DWORD PTR [edx-0x4000670e]
  418c39:	and    eax,0x6dd65010
  418c3e:	adc    bh,dh
  418c40:	sbb    al,0x6c
  418c42:	mov    ah,0xfe
  418c44:	sahf   
  418c45:	or     DWORD PTR [ecx+0x7],esp
  418c48:	xchg   esi,eax
  418c49:	std    
  418c4a:	push   eax
  418c4b:	push   ecx
  418c4c:	imul   ecx,DWORD PTR [ecx],0x75bcfae9
  418c52:	in     al,0x1c
  418c54:	jmp    0x10b1:0x6303e909
  418c5b:	(bad)
  418c5e:	mov    ebx,0x59e1e4f3
  418c63:	pop    es
  418c64:	aam    0x59
  418c66:	jb     0x418c9c
  418c68:	mov    esi,0xc40f1486
  418c6d:	cld    
  418c6e:	mov    eax,0x79d1a4b1
  418c73:	pop    es
	...
  418c9c:	mov    ah,0x92
  418c9e:	imul   edx,DWORD PTR [esp+esi*4],0xfffffffc
  418ca2:	std    
  418ca3:	sbb    eax,DWORD PTR [ebp-0x67]
  418ca6:	cmc    
  418ca7:	push   es
  418ca8:	xor    DWORD PTR [ecx],ecx
  418caa:	add    DWORD PTR [ebx],0xffffff94
  418cad:	mov    dh,0xd8
  418caf:	push   cs
  418cb0:	mov    esp,?
  418cb2:	fst    QWORD PTR [eax+0x730cf150]
  418cb8:	jl     0x418cb6
  418cba:	pop    edi
  418cbb:	and    BYTE PTR [edi-0xc],0xc5
  418cbf:	push   es
  418cc0:	ins    BYTE PTR es:[edi],dx
  418cc1:	mov    dh,0xcc
  418cc3:	push   cs
  418cc4:	fs cld 
  418cc6:	sar    BYTE PTR [edi],0xc2
  418cc9:	cld    
  418cca:	lods   eax,DWORD PTR ds:[esi]
  418ccb:	cli    
  418ccc:	xchg   esp,eax
  418ccd:	jne    0x418cd9
  418ccf:	mov    ah,0xc3
  418cd1:	xchg   BYTE PTR [eax-0x6a03bbf2],dl
  418cd7:	push   eax
  418cd8:	xor    esi,esp
  418cda:	lea    eax,[esi]
  418cdc:	and    ecx,DWORD PTR [edx]
  418cde:	pop    esp
  418cdf:	push   es
  418ce0:	sub    al,0x10
  418ce2:	test   eax,0x718c8f
  418ce7:	jmp    0x418d31
  418ce9:	in     al,dx
  418cea:	mov    ebp,0x413d0601
  418cef:	jmp    0x57294339
  418cf4:	dec    ebp
  418cf5:	cld    
  418cf6:	(bad)  
  418cf7:	fadd   QWORD PTR [eax]
  418cf9:	in     al,0x97
  418cfb:	xchg   ebp,eax
  418cfc:	dec    ebp
  418cfd:	cld    
  418cfe:	addr16 jmp 0x418d01
	...
  418d25:	add    BYTE PTR [eax],al
  418d27:	add    BYTE PTR [eax-0x14],cl
  418d2a:	mov    ebp,0x413ca7d1
  418d2f:	jmp    0x37294379
  418d34:	dec    ebp
  418d35:	cld    
  418d36:	(bad)  
  418d37:	pushf  
  418d38:	shl    bl,1
  418d3a:	jg     0x418d91
  418d3c:	dec    ebp
  418d3d:	cld    
  418d3e:	addr16 jmp 0x81ff798c
  418d44:	xor    edi,DWORD PTR ds:0xb645e941
  418d4a:	out    0xf6,eax
  418d4c:	dec    esi
  418d4d:	cld    
  418d4e:	(bad)  
  418d4f:	jl     0x418cf1
  418d51:	jecxz  0x418dba
  418d53:	xor    eax,0x7de7fc4d
  418d58:	push   ss
  418d59:	cld    
  418d5a:	(bad)  
  418d5b:	ficom  WORD PTR [ebp*8-0xeb9290a]
  418d62:	mov    BYTE PTR [esi+0x4e],bl
  418d65:	cld    
  418d66:	(bad)  
  418d67:	jl     0x418dc0
  418d69:	hlt    
  418d6a:	(bad)  
  418d6b:	mov    esi,0xb60c764e
  418d70:	int3   
  418d71:	add    ebp,eax
  418d73:	mov    WORD PTR [ebp-0x4],cs
  418d76:	(bad)  
  418d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d78:	cld    
  418d79:	clc    
  418d7a:	neg    BYTE PTR [esi+0x666cf14e]
  418d80:	inc    esi
  418d81:	cli    
  418d82:	(bad)  
  418d83:	and    al,0x47
  418d85:	lock lock add ah,al
  418d89:	add    al,0xff
  418d8b:	inc    DWORD PTR [eax]
	...
  418db1:	add    BYTE PTR [eax],al
  418db3:	add    BYTE PTR [edi],bl
  418db5:	add    ebp,eax
  418db7:	mov    bh,0x53
  418db9:	add    eax,0x1e0c900
  418dbe:	call   DWORD PTR [ecx+ebx*4+0x21]
  418dc2:	add    esp,0xffffffa6
  418dc5:	lahf   
  418dc6:	(bad)  
  418dc7:	imul   edx,DWORD PTR [eax+0x4],0x848a0875
  418dce:	mov    bh,bh
  418dd0:	test   DWORD PTR [esi+0x45],edi
  418dd3:	cld    
  418dd4:	cli    
  418dd5:	push   es
  418dd6:	add    bh,ch
  418dd8:	push   esp
  418dd9:	popf   
  418dda:	mov    edi,DWORD PTR [ebx+eiz*4]
  418ddd:	push   es
  418dde:	push   0xfec7e69d
  418de3:	(bad)  
  418de4:	(bad)  
  418de6:	out    0x47,al
  418de8:	push   ds
  418de9:	add    al,0xff
  418deb:	push   0x3fd10f
  418df0:	inc    ebp
  418df1:	retf   0x2935
  418df4:	repz push es
  418df6:	push   DWORD PTR [ebp-0x56]
  418df9:	push   ds
  418dfa:	nop
  418dfb:	std    
  418dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dfd:	add    eax,0xc666a568
  418e02:	(bad)  
  418e03:	addr16 jo 0x418e0c
  418e06:	add    BYTE PTR [eax-0x17f9746b],al
  418e0c:	add    al,0x2
  418e0e:	(bad)  
  418e0f:	call   FWORD PTR [edx]
  418e11:	dec    esi
  418e12:	cmp    al,0x41
  418e14:	jb     0x418db4
	...
  418e3e:	add    BYTE PTR [eax],al
  418e40:	jb     0x418dc8
  418e42:	(bad)  
  418e43:	jne    0x418eaf
  418e45:	push   ds
  418e46:	pop    ebx
  418e47:	(bad)  
  418e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e49:	add    eax,0xc726f968
  418e4e:	(bad)  
  418e4f:	addr16 dec ebx
  418e51:	out    dx,al
  418e52:	add    al,BYTE PTR [eax]
  418e54:	retf   
  418e55:	mov    cl,BYTE PTR [ebp+0x6392307]
  418e5b:	jmp    DWORD PTR [ebx+edi*2]
  418e5e:	mov    ?,ebx
  418e60:	sbb    al,0xfd
  418e62:	cli    
  418e63:	out    0x7c,eax
  418e65:	pop    esp
  418e66:	add    al,0xff
  418e68:	add    ch,BYTE PTR [esi]
  418e6a:	(bad)  
  418e6b:	call   FWORD PTR [edi+0x76ff1777]
  418e71:	in     al,0x1a
  418e73:	sbb    eax,ebx
  418e75:	dec    edx
  418e76:	add    al,0xb
  418e78:	or     edi,DWORD PTR [ecx+ecx*8-0x3e02a699]
  418e7f:	dec    DWORD PTR [eax+ecx*2+0x2ad49255]
  418e86:	mov    bl,0x4f
  418e88:	arpl   ax,si
  418e8a:	add    ch,bh
  418e8c:	add    eax,0xa3cad98
  418e91:	lock mov dl,0xfe
  418e94:	ds call 0x33a03b4
  418e9a:	add    al,0x58
  418e9c:	xor    esi,ecx
  418e9e:	add    ch,bh
  418ea0:	fld    QWORD PTR [edi+0x3c9e]
	...
  418eca:	add    BYTE PTR [eax],al
  418ecc:	or     dh,al
  418ece:	mov    dl,0xfe
  418ed0:	push   ss
  418ed1:	clc    
  418ed2:	jmp    0xcee8:0x2dab860
  418ed9:	popa   
  418eda:	add    edi,edi
  418edc:	sub    BYTE PTR [ebp+0x7716000b],0xf0
  418ee3:	or     BYTE PTR [edi-0xeff9245],0xe
  418eea:	add    esi,DWORD PTR [ebp+0x43]
  418eed:	enter  0x8ab2,0x4c
  418ef1:	or     BYTE PTR [esi+0x12f58f8d],ah
  418ef7:	push   ds
  418ef8:	cmp    al,0x7f
  418efa:	loope  0x418ee7
  418efc:	(bad)  
  418efe:	lea    eax,[ebx]
  418f00:	mov    eax,ds:0x5379862c
  418f05:	loope  0x418f78
  418f07:	add    ebx,DWORD PTR [ecx+edi*8]
  418f0a:	add    ah,BYTE PTR [eax]
  418f0c:	adc    al,0x7f
  418f0e:	loope  0x418efb
  418f10:	retf   
  418f11:	clc    
  418f12:	add    eax,DWORD PTR gs:[edi+edi*2]
  418f16:	pop    ebp
  418f17:	add    esi,DWORD PTR [esi+0x1]
  418f1a:	inc    ecx
  418f1b:	int    0xc1
  418f1d:	clc    
  418f1e:	dec    ebp
  418f1f:	int    0xa
  418f21:	push   cs
  418f22:	jmp    0x9a275f7f
  418f27:	retf   0x2547
  418f2a:	test   BYTE PTR [ebx+ecx*2+0x9],0xe9
  418f2f:	add    eax,DWORD PTR [eax]
	...
  418f55:	add    BYTE PTR [eax],al
  418f57:	add    BYTE PTR [ebx+0x24],cl
  418f5a:	inc    edx
  418f5b:	add    edi,DWORD PTR [esi]
  418f5d:	add    DWORD PTR [ecx],edx
  418f5f:	aaa    
  418f60:	sbb    al,0x9
  418f62:	jmp    0x6a42aef5
  418f67:	cld    
  418f68:	dec    edx
  418f69:	jg     0x418f43
  418f6b:	push   es
  418f6c:	jnp    0x418efa
  418f6e:	adc    al,BYTE PTR [esi]
  418f70:	and    eax,0xf75fb28a
  418f75:	jge    0x418f5b
  418f77:	imul   eax,DWORD PTR [ebx+ecx*1+0x7e840445],0x5886ebed
  418f82:	jmp    0xf5b728a
  418f87:	inc    ebp
  418f88:	dec    ebx
  418f89:	popa   
  418f8a:	push   0xd1090a40
  418f8f:	cdq    
  418f90:	mov    ah,0xf8
  418f92:	push   DWORD PTR [ebp+0x4473c945]
  418f98:	dec    eax
  418f99:	jle    0x418fa3
  418f9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f9c:	arpl   WORD PTR [edx],bx
  418f9e:	sub    BYTE PTR ds:[edi-0x74],al
  418fa2:	ret    
  418fa3:	in     eax,dx
  418fa4:	inc    ebp
  418fa5:	leave  
  418fa6:	je     0x418fdc
  418fa8:	dec    eax
  418fa9:	push   ds
  418faa:	and    edi,eax
  418fac:	(bad)
  418fb0:	mov    DWORD PTR [edx+0x0],ecx
  418fb3:	push   0xffffff8b
  418fb5:	and    eax,0x947283f
  418fba:	jne    0x418fad
	...
  418fe4:	dec    ecx
  418fe5:	push   ds
  418fe6:	adc    eax,0xeb09861f
  418feb:	adc    BYTE PTR [ebp+0x9],ah
  418fee:	push   0xffffffe8
  418ff0:	dec    ecx
  418ff1:	ds sub al,0x6
  418ff4:	mov    cs,WORD PTR [ecx]
  418ff6:	call   esp
  418ff8:	xor    esi,DWORD PTR [edi]
  418ffa:	inc    ecx
  418ffb:	jmp    0xe24d5bcd
  419000:	or     BYTE PTR [ecx+eiz*1+0x26],bh
  419004:	and    DWORD PTR ds:0xf848a83f,0x14
  41900b:	les    ecx,FWORD PTR [edx]
  41900d:	dec    edx
  41900e:	add    BYTE PTR [edx-0x7c],ch
  419011:	or     edi,edi
  419013:	fadd   QWORD PTR [ebx+0x37]
  419016:	inc    ecx
  419017:	jmp    0xb66d9cad
  41901c:	wbinvd 
  41901e:	add    cl,ch
  419020:	dec    eax
  419021:	or     ebx,ebp
  419023:	call   0x43041437
  419028:	nop
  419029:	leave  
  41902a:	pop    es
  41902b:	jmp    0xe6dc4ff
  419030:	or     BYTE PTR [ecx],cl
  419032:	add    BYTE PTR [eax],al
  419034:	es sub bh,bh
  419037:	xor    eax,0x414a4e
  41903c:	popf   
  41903d:	pop    ds
  41903e:	sub    eax,0x830d233e
  419043:	les    esi,FWORD PTR [esi]
  419045:	or     dl,BYTE PTR ds:0x15
	...
  41906f:	add    BYTE PTR [esp+ecx*2],bl
  419072:	add    bh,al
  419074:	daa    
  419075:	daa    
  419076:	aas    
  419077:	inc    ecx
  419078:	and    cl,BYTE PTR [ebx]
  41907a:	add    BYTE PTR [eax],al
  41907c:	xor    cl,dh
  41907e:	push   ebx
  41907f:	mov    ecx,esi
  419081:	mov    edx,es
  419083:	lock xor DWORD PTR [ebx+eax*2+0x72cb2908],eax
  41908b:	or     esi,DWORD PTR [ecx+0x76]
  41908e:	or     al,0x0
  419090:	push   ss
  419091:	adc    BYTE PTR [eax+0x77fe238],al
  419097:	sub    esp,DWORD PTR [edx]
  419099:	push   esp
  41909a:	leave  
  41909b:	ret    0xada
  41909e:	cmp    BYTE PTR [eax],0x9c
  4190a1:	jle    0x4190b3
  4190a3:	sbb    edi,0x26
  4190a6:	aas    
  4190a7:	inc    ecx
  4190a8:	loop   0x4190b4
  4190aa:	jne    0x4190b3
  4190ac:	cdq    
  4190ad:	retf   0xc959
  4190b0:	jo     0x4190b7
  4190b2:	add    BYTE PTR [eax+0x3e74889a],al
  4190b8:	sub    DWORD PTR [esi+0xc],ebx
  4190bb:	dec    edx
  4190bc:	xor    edi,ebp
  4190be:	add    DWORD PTR [ebx],ecx
  4190c0:	inc    eax
  4190c1:	jle    0x4190c9
  4190c3:	sbb    DWORD PTR [edi],0x6
  4190c6:	add    DWORD PTR [ebp-0x5a],esi
  4190c9:	and    eax,0x856ebc0
  4190ce:	dec    ebp
  4190cf:	or     al,0xf9
  4190d1:	dec    esi
  4190d2:	or     al,0x5
	...
  4190fc:	dec    ebx
  4190fd:	loopne 0x419105
  4190ff:	add    BYTE PTR [ebx-0x5f],cl
  419102:	loop   0x419105
  419104:	sti    
  419105:	xlat   BYTE PTR ds:[ebx]
  419106:	sbb    al,0x8d
  419108:	pop    esp
  419109:	mov    bh,0x52
  41910b:	mov    edi,esi
  41910d:	out    0x44,eax
  41910f:	push   eax
  419110:	dec    esp
  419111:	cmp    eax,0xb5335210
  419116:	call   0x9c9:0x5d483cfe
  41911d:	call   0x8751bc24
  419122:	jne    0x419130
  419124:	and    al,0xf5
  419126:	or     ch,BYTE PTR [edx+0x4b]
  419129:	sbb    al,BYTE PTR [edi+edi*8]
  41912c:	fld    DWORD PTR ds:[eax+0x41]
  419130:	dec    ebx
  419131:	arpl   di,ax
  419133:	(bad)  
  419135:	and    BYTE PTR [edi+0x65],dh
  419138:	shr    BYTE PTR [esi+edi*8+0x466d4769],cl
  41913f:	lock fwait
  419141:	dec    eax
  419142:	test   BYTE PTR [ebx+0x6d4ee4],0xce
  419149:	lods   al,BYTE PTR ds:[esi]
  41914a:	repnz dec edi
  41914c:	aam    0xb4
  41914e:	(bad)  
  41914f:	(bad)  
  419150:	or     DWORD PTR ss:[edx+0x41],eax
  419154:	dec    ebx
  419155:	arpl   di,ax
  419157:	or     edx,DWORD PTR [eax+0x20]
  41915a:	jbe    0x41918f
  41915c:	(bad)  
  41915d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41915e:	repnz add BYTE PTR [eax],0x0
	...
  419186:	add    BYTE PTR [eax],al
  419188:	xor    ebp,esp
  41918a:	add    dh,BYTE PTR [eax+eax*2+0x7b]
  41918e:	inc    ebx
  41918f:	or     BYTE PTR [ebx],cl
  419191:	nop
  419192:	jmp    0x738a:0xfefec7b4
  419199:	push   esp
  41919a:	inc    esi
  41919b:	lock test BYTE PTR [eax],cl
  41919e:	pop    ecx
  41919f:	or     al,0x18
  4191a1:	neg    BYTE PTR [eax+0x8]
  4191a4:	arpl   cx,dx
  4191a6:	jmp    FWORD PTR fs:[ebp+0x62]
  4191aa:	jmp    0x193aa13f
  4191af:	push   DWORD PTR [edi]
  4191b1:	adc    al,0xff
  4191b3:	inc    esp
  4191b4:	dec    ebx
  4191b5:	mov    ch,BYTE PTR [esp+ecx*1+0x79ae07e1]
  4191bc:	inc    edi
  4191bd:	cmc    
  4191be:	sti    
  4191bf:	and    BYTE PTR [ebp+0x4a],bh
  4191c2:	jmp    0x62439a49
  4191c7:	ret    
  4191c8:	xchg   ecx,eax
  4191c9:	ret    0xcaa
  4191cc:	dec    ebx
  4191cd:	pop    esi
  4191ce:	jb     0x4191c0
  4191d0:	sbb    eax,0x9ffeed7f
  4191d5:	add    DWORD PTR [esi+0x19],esi
  4191d8:	addr16 xor al,0x28
  4191db:	add    al,0xc8
  4191dd:	int    0xf0
  4191df:	push   ebx
  4191e0:	cld    
  4191e1:	jle    0x4191d0
  4191e3:	(bad)  
  4191e4:	jg     0x4191e7
  4191e6:	push   esi
  4191e7:	sbb    DWORD PTR [ebx],ebp
  4191e9:	xor    al,0xa8
  4191eb:	add    eax,DWORD PTR [eax]
	...
  419211:	add    BYTE PTR [eax],al
  419213:	add    al,cl
  419215:	int    0xf0
  419217:	mov    dh,BYTE PTR [edi+0x19]
  41921a:	jo     0x41921e
  41921c:	jae    0x4191e0
  41921e:	sub    dl,BYTE PTR [eax]
  419220:	dec    ebx
  419221:	pop    esi
  419222:	(bad)  
  419223:	lock leave 
  419225:	int    0x10
  419227:	push   DWORD PTR [edi]
  419229:	add    eax,0xf4da0311
  41922e:	adc    eax,0xe57e8b0b
  419233:	int3   
  419234:	mov    bl,BYTE PTR [ecx]
  419236:	jmp    0x1146aa39
  41923b:	loopne 0x419223
  41923d:	hlt    
  41923e:	push   ebp
  419240:	inc    ecx
  419241:	leave  
  419242:	jae    0x419229
  419244:	xchg   edi,eax
  419245:	retf   0xe90f
  419248:	jge    0x4192c7
  41924a:	adc    al,0xde
  41924c:	repz sbb al,ch
  41924f:	lods   al,BYTE PTR ds:[esi]
  419250:	dec    ebx
  419251:	hlt    
  419252:	(bad)  
  419253:	loop   0x4191dd
  419255:	jge    0x41925b
  419257:	mov    al,0x8a
  419259:	add    al,0x0
  41925b:	push   ecx
  41925c:	aas    
  41925d:	xor    al,0x41
  41925f:	jmp    0x287f2644
  419264:	dec    edi
  419265:	loope  0x4191f2
  419267:	jg     0x4192a6
  419269:	repz or ch,BYTE PTR [ecx-0x697fb4d]
  419270:	ins    DWORD PTR es:[edi],dx
  419271:	dec    edx
  419272:	add    BYTE PTR [ecx],al
  419274:	pop    esi
  419275:	xor    eax,DWORD PTR [ecx-0x17]
	...
  4192a0:	xor    BYTE PTR [ecx-0x6a],dh
  4192a3:	jle    0x4192ba
  4192a5:	(bad)  
  4192a6:	mov    edi,0xa2c4e6
  4192ab:	jmp    0x658618f8
  4192b0:	cwde   
  4192b1:	hlt    
  4192b2:	je     0x4192a1
  4192b4:	cmc    
  4192b5:	sbb    al,0x10
  4192b7:	push   ss
  4192b8:	xchg   BYTE PTR [ecx],cl
  4192ba:	and    DWORD PTR ds:0xf6c00050,0xffffffd3
  4192c1:	call   0x6400:0x5f48e900
  4192c8:	xor    ecx,0x4f
  4192cb:	ret    
  4192cc:	lds    ebp,FWORD PTR [ebx-0x60]
  4192cf:	out    0x7,al
  4192d1:	or     edi,edi
  4192d3:	xchg   esp,eax
  4192d4:	mov    ah,0xf2
  4192d6:	adc    al,0xf1
  4192d8:	ins    DWORD PTR es:[edi],dx
  4192d9:	dec    edx
  4192da:	add    BYTE PTR [edx-0x74],ch
  4192dd:	pop    ss
  4192de:	or     eax,DWORD PTR [eax]
  4192e0:	jb     0x4192e5
  4192e2:	test   DWORD PTR [edx-0x5d],ebp
  4192e5:	pop    es
  4192e6:	add    bh,bh
  4192e8:	(bad)  
  4192ea:	std    
  4192eb:	adc    eax,0x413296
  4192f0:	icebp  
  4192f1:	rol    BYTE PTR [edx],0x83
  4192f4:	push   0x60
  4192f6:	je     0x4192fd
  4192f8:	mov    edx,DWORD PTR [eax+0x1]
  4192fb:	add    BYTE PTR [edx-0x7e],dh
  4192fe:	inc    ebx
  4192ff:	hlt    
  419300:	inc    edx
  419301:	pop    edi
  419302:	add    bh,bh
	...
  41932c:	pop    ds
  41932d:	cmc    
  41932e:	out    0x14,al
  419330:	xchg   ebp,eax
  419331:	cmc    
  419332:	std    
  419333:	or     esi,edx
  419335:	add    al,0x84
  419337:	cmp    DWORD PTR [ebx],esi
  419339:	pop    es
  41933a:	add    BYTE PTR [ebx+0xefef157],al
  419340:	sahf   
  419341:	and    al,0x1
  419343:	add    BYTE PTR [edx],dh
  419345:	xchg   DWORD PTR [esi],esi
  419347:	add    BYTE PTR ds:0x2201248b,dl
  41934d:	pop    es
  41934e:	push   eax
  41934f:	mov    ebp,DWORD PTR [edi]
  419351:	icebp  
  419352:	inc    eax
  419353:	push   edx
  419354:	retf   0x8b63
  419357:	jmp    DWORD PTR [ebp+0x4f]
  41935a:	mov    DWORD PTR [ebp-0x66],eax
  41935d:	hlt    
  41935e:	jae    0x419354
  419360:	xchg   ebp,eax
  419361:	jp     0x41934b
  419363:	push   edx
  419364:	mov    bl,BYTE PTR [edx-0x337a0077]
  41936a:	inc    ebx
  41936b:	lock loop 0x419374
  41936e:	add    BYTE PTR [eax],al
  419370:	sbb    eax,0xb200ec4a
  419375:	push   es
  419376:	add    BYTE PTR [ebx+0x413f1ea7],al
  41937c:	mov    ds:0x4b527506,al
  419381:	mov    BYTE PTR ds:0xeae00a40,dl
  419387:	sub    edi,edi
  419389:	fild   WORD PTR [edx]
  41938b:	push   eax
  41938c:	and    ebx,ebp
  41938e:	inc    edx
  41938f:	inc    ecx
	...
  4193b8:	dec    ebx
  4193b9:	sti    
  4193ba:	jne    0x4193a4
  4193bc:	jae    0x4193d2
  4193be:	pop    edi
  4193bf:	add    BYTE PTR [ebx-0x9],cl
  4193c2:	ret    0x5373
  4193c5:	pop    eax
  4193c6:	and    BYTE PTR [eax+0xa],al
  4193c9:	loopne 0x4193b5
  4193cb:	or     eax,0x5002e007
  4193d0:	repz jmp 0x419415
  4193d3:	inc    ecx
  4193d4:	dec    ebx
  4193d5:	mov    bl,0x75
  4193d7:	call   0xa0043f
  4193dc:	dec    ebx
  4193dd:	out    0xc2,eax
  4193df:	jae    0x41945a
  4193e1:	sbb    BYTE PTR [eax],ch
  4193e3:	inc    eax
  4193e4:	mov    ah,al
  4193e6:	jmp    0xb350:0x2e090f1
  4193ed:	int3   
  4193ee:	inc    edx
  4193ef:	inc    ecx
  4193f0:	dec    ebx
  4193f1:	mov    esi,DWORD PTR [ebp-0x18]
  4193f4:	and    ebx,DWORD PTR [esi+ebx*2+0x0]
  4193f8:	dec    ebx
  4193f9:	xchg   DWORD PTR [edx],ebx
  4193fb:	push   0x432036
  419400:	repz inc edi
  419402:	pop    eax
  419403:	add    BYTE PTR [ebx-0x50],cl
  419406:	push   0x2d
  419408:	mov    esp,DWORD PTR [ecx+0x485eff02]
  41940e:	jmp    0x419489
  419410:	jle    0x4193f2
  419412:	add    cl,BYTE PTR [ebx]
  419414:	or     edi,DWORD PTR [ebp+0x34868d6c]
  41941a:	push   ebx
  41941b:	push   0x0
	...
  419441:	add    BYTE PTR [eax],al
  419443:	add    BYTE PTR [edx+0x23],cl
  419446:	jbe    0x419440
  419448:	mov    bl,0x8
  41944a:	mov    dl,0xfd
  41944c:	mov    ch,0xf1
  41944e:	sbb    eax,0x158b776
  419453:	inc    esi
  419454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419455:	icebp  
  419456:	or     eax,0x73f9078a
  41945b:	inc    esi
  41945c:	lahf   
  41945d:	pop    eax
  41945e:	xchg   ebx,eax
  41945f:	add    DWORD PTR [ebx+edi*2-0xcc4150f],ecx
  419466:	in     eax,dx
  419467:	sti    
  419468:	jge    0x4194e5
  41946a:	fst    QWORD PTR [ebx+eiz*2+0x1d]
  41946e:	fdiv   st(3),st
  419470:	ins    DWORD PTR es:[edi],dx
  419471:	jg     0x41949e
  419473:	call   0x5030841
  419478:	xlat   BYTE PTR ds:[ebx]
  419479:	cmp    al,0x6a
  41947b:	jns    0x4194e4
  41947d:	or     BYTE PTR ds:0xe908e32a,dh
  419483:	jmp    0xf033:0xc33f106
  41948a:	outs   dx,BYTE PTR ds:[esi]
  41948b:	sti    
  41948c:	xor    eax,0x2dec13f1
  419491:	ja     0x419474
  419493:	jmp    0x419514
  419495:	mov    BYTE PTR [ebp+0x79771dfb],cl
  41949b:	sti    
  41949c:	lahf   
  41949d:	add    DWORD PTR [ecx+0x75f0c44e],edx
  4194a3:	sti    
  4194a4:	jg     0x419483
  4194a6:	ins    DWORD PTR es:[edi],dx
  4194a7:	jno    0x4194a9
	...
  4194cd:	add    BYTE PTR [eax],al
  4194cf:	add    BYTE PTR [ebx-0x1f],dl
  4194d2:	and    eax,0x5df0f583
  4194d7:	jno    0x4194d4
  4194d9:	loope  0x41947f
  4194db:	(bad)  
  4194dc:	in     eax,0xf0
  4194de:	dec    ebp
  4194df:	jno    0x4194d0
  4194e1:	loope  0x41948f
  4194e3:	(bad)  
  4194e4:	aad    0xf0
  4194e6:	cmp    eax,0xffe1e371
  4194eb:	hlt    
  4194ec:	(bad)  
  4194ed:	out    dx,eax
  4194ee:	inc    BYTE PTR [eax-0x27]
  4194f1:	out    dx,al
  4194f2:	(bad)  
  4194f3:	es mov al,0x75
  4194f6:	cld    
  4194f7:	push   ds
  4194f8:	pop    edx
  4194f9:	adc    eax,0x8c48a83f
  4194fe:	ret    
  4194ff:	in     eax,0xb0
  419501:	xchg   edi,eax
  419502:	sti    
  419503:	push   es
  419504:	nop
  419505:	rol    ecx,0xd9
  419508:	dec    eax
  419509:	push   esi
  41950a:	mov    eax,DWORD PTR ds:0xee00631c
  419510:	sti    
  419511:	add    al,ch
  419513:	call   0x5b90:0x72feefc3
  41951a:	call   0x4a9b18
  41951f:	loop   0x4194a9
  419521:	jl     0x41953e
  419523:	jmp    0x38c8:0xdbeb488d
  41952a:	or     eax,0x37894a3d
  41952f:	jecxz  0x4194ec
  419531:	push   es
  419532:	(bad)  
  419533:	jmp    0x419538
	...
  41955c:	dec    eax
  41955d:	in     al,0x1
  41955f:	xchg   edx,eax
  419560:	dec    ebx
  419561:	inc    ecx
  419562:	cmp    ebp,DWORD PTR [edx-0x55751c63]
  419568:	jge    0x41952c
  41956a:	shr    ebp,0x48
  41956d:	push   esi
  41956e:	mov    ecx,DWORD PTR [ebp+0x1eb3cbc5]
  419574:	add    BYTE PTR [ebp+0xc],dh
  419577:	sub    DWORD PTR [ebp+0x4566fe7d],0x91e474c9
  419581:	ret    0xf9c1
  419584:	dec    eax
  419585:	lock je 0x419565
  419588:	lock mov ch,BYTE PTR [ebx+0x9f38d00]
  41958f:	rcl    BYTE PTR [esi+0x70c95f08],0x1c
  419596:	add    bh,bh
  419598:	idiv   edi
  41959a:	(bad)  
  41959b:	jne    0x41954f
  41959d:	jecxz  0x419608
  41959f:	sti    
  4195a0:	dec    ebp
  4195a1:	repz mov eax,DWORD PTR [ebp+0x42]
  4195a5:	pop    esp
  4195a6:	push   DWORD PTR [ebp+0x7e]
  4195a9:	jecxz  0x4195ea
  4195ab:	(bad)  
  4195ac:	dec    ebp
  4195ad:	repz or eax,eax
  4195b0:	popf   
  4195b1:	outs   dx,DWORD PTR ds:[esi]
  4195b2:	cli    
  4195b3:	add    dh,BYTE PTR [edx+0xb]
  4195b6:	push   DWORD PTR [ebp+0x6e]
  4195b9:	icebp  
  4195ba:	jae    0x4195b4
  4195bc:	call   0x0:0xff92c6
	...
  4195e7:	add    BYTE PTR [ebp-0x9f04003],cl
  4195ed:	rol    DWORD PTR [eax],1
  4195ef:	add    BYTE PTR [edx-0x7e],dh
  4195f2:	inc    ebx
  4195f3:	in     al,dx
  4195f4:	fldlg2 
  4195f6:	jle    0x419637
  4195f8:	bound  eax,QWORD PTR [eax]
  4195fa:	test   cl,cl
  4195fc:	xor    BYTE PTR [ebx],cl
  4195fe:	add    BYTE PTR [edi+0xa],dl
  419601:	aas    
  419602:	(bad)  
  419603:	(bad)  
  419604:	in     eax,dx
  419605:	add    BYTE PTR [ebx-0x30],0xcd
  419609:	pop    esi
  41960a:	shr    BYTE PTR [eax-0x5a],1
  41960d:	xor    BYTE PTR [ecx+0x0],al
  419610:	retf   0x5b0e
  419613:	add    BYTE PTR [edx],ah
  419615:	pop    ebx
  419616:	push   DWORD PTR [ebp-0x4e]
  419619:	pop    ebp
  41961a:	cwde   
  41961b:	aas    
  41961c:	xor    eax,DWORD PTR ds:0x55917e8
  419622:	add    BYTE PTR [eax+0x6d],dl
  419625:	pop    esi
  419626:	shr    BYTE PTR [eax+0x6e],1
  419629:	xor    BYTE PTR [ecx+0x0],al
  41962c:	dec    ebx
  41962d:	dec    eax
  41962e:	or     ebx,DWORD PTR [ebx+0x4b]
  419631:	loopne 0x41968f
  419633:	pop    ecx
  419634:	inc    eax
  419635:	and    BYTE PTR [eax+0xc],dh
  419638:	inc    eax
  419639:	adc    dh,BYTE PTR [eax+0x8]
  41963c:	push   eax
  41963d:	sub    DWORD PTR [ecx],ecx
  41963f:	test   DWORD PTR [esi],edi
  419641:	loop   0x419645
  419643:	add    BYTE PTR [eax+0x39],al
  419646:	outs   dx,DWORD PTR ds:[esi]
  419647:	or     DWORD PTR [ebp+eiz*4+0xae],eax
	...
  419672:	add    BYTE PTR [eax],al
  419674:	dec    ebx
  419675:	loopne 0x419679
  419677:	jmp    0x4196bd
  419679:	daa    
  41967a:	aas    
  41967b:	mov    ah,0x4b
  41967d:	loopne 0x419681
  41967f:	add    BYTE PTR [edi-0x7b473d4d],cl
  419685:	div    edi
  419687:	(bad)  
  419688:	jns    0x4196b8
  41968a:	cmp    al,0x7
  41968c:	(bad)  
  41968d:	fistp  QWORD PTR [edi+0x2e06344]
  419693:	add    BYTE PTR [ebx+0x60],cl
  419696:	cmp    BYTE PTR [eax],al
  419698:	dec    esp
  419699:	fs dec esp
  41969b:	add    cl,BYTE PTR [ebx-0x20]
  41969e:	dec    edi
  41969f:	call   0xff394510
  4196a4:	rcr    BYTE PTR [eax+ecx*8],cl
  4196a7:	cmp    BYTE PTR [esi+0x6a7502c8],0x18
  4196ae:	nop
  4196af:	sub    ecx,DWORD PTR [edx+0x1774f7e0]
  4196b5:	mov    BYTE PTR [ecx+0xbe04b59],ch
  4196bb:	rol    BYTE PTR [ebp+ebx*2+0x6],0x2
  4196c0:	dec    ebx
  4196c1:	loopne 0x419682
  4196c3:	inc    esp
  4196c4:	repz loopne 0x4196c9
  4196c7:	add    BYTE PTR [ebx-0x77],cl
  4196ca:	add    DWORD PTR [edx],eax
  4196cc:	dec    ebx
  4196cd:	or     ecx,ebp
  4196cf:	test   BYTE PTR [edi-0x1f],ch
  4196d2:	out    0x6e,eax
  4196d4:	push   esp
  4196d5:	adc    bl,0xdf
	...
  419700:	add    eax,0x4b054144
  419705:	or     ecx,ebp
  419707:	jmp    0x6bc8:0x3e90796
  41970e:	inc    ecx
  41970f:	add    eax,0x765ffe36
  419714:	stos   DWORD PTR es:[edi],eax
  419715:	lds    ebp,FWORD PTR [ebx-0x16f6b615]
  41971b:	add    esi,DWORD PTR [edx+0x4b03e7a7]
  419721:	mov    cl,BYTE PTR [ebx-0x98bb615]
  419727:	mov    cl,BYTE PTR [edi]
  419729:	int    0x25
  41972b:	ds jae 0x419732
  41972e:	jmp    0x5d21e236
  419733:	add    cl,BYTE PTR [ebx+0x9]
  419736:	push   0x79
  419738:	arpl   WORD PTR [esp+edx*2],ax
  41973b:	pop    es
  41973c:	shr    BYTE PTR [ebx-0x4f],cl
  41973f:	mov    edi,0x3e3e107
  419744:	dec    ebx
  419745:	or     eax,edx
  419747:	outs   dx,DWORD PTR ds:[esi]
  419748:	dec    edx
  419749:	or     ecx,ebp
  41974b:	add    bh,0xe1
  41974e:	jmp    0x419756
  419750:	(bad)  
  419751:	imul   ebp,eax,0x23824b03
  419757:	ror    cl,1
  419759:	outs   dx,BYTE PTR ds:[esi]
  41975a:	push   ebp
  41975b:	add    al,0x9f
  41975d:	add    ch,BYTE PTR [esi-0x16f7ccbf]
  419763:	add    eax,DWORD PTR [eax]
	...
  419789:	add    BYTE PTR [eax],al
  41978b:	add    BYTE PTR [ebx-0x20],cl
  41978e:	in     eax,dx
  41978f:	mov    esi,0x3e6e187
  419794:	dec    ebx
  419795:	or     DWORD PTR [eax],eax
  419797:	scas   al,BYTE PTR es:[edi]
  419798:	mov    cl,cl
  41979a:	(bad)  
  41979b:	call   0xad08a0e8
  4197a0:	add    ch,ch
  4197a2:	(bad)  
  4197a3:	jmp    0x2d865bf0
  4197a8:	inc    edi
  4197a9:	or     DWORD PTR [eax],eax
  4197ab:	jmp    0xe9fddd45
  4197b0:	dec    eax
  4197b1:	or     DWORD PTR [eax],eax
  4197b3:	or     dh,BYTE PTR es:[ecx+0x948e8ff]
  4197ba:	push   DWORD PTR [esp+edx*4-0x4bd8ed1c]
  4197c1:	jmp    0x41974b
  4197c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197c4:	mov    bl,ch
  4197c6:	je     0x4197fd
  4197c8:	scas   eax,DWORD PTR es:[edi]
  4197c9:	add    al,0xfe
  4197cb:	push   cs
  4197cc:	pushf  
  4197cd:	add    DWORD PTR [ecx+esi*1-0x6c],0x8211d475
  4197d5:	in     eax,dx
  4197d6:	(bad)  
  4197d7:	test   bh,0x45
  4197da:	les    ebp,FWORD PTR [edx+0x32]
  4197dd:	and    DWORD PTR [edi],edi
  4197df:	sub    BYTE PTR [edi+0x9],al
  4197e2:	jne    0x41981f
  4197e4:	not    DWORD PTR ds:0xe1472840
  4197ea:	or     al,0x30
  4197ec:	dec    edi
  4197ed:	or     DWORD PTR [eax+0x51],edx
	...
  419818:	cmp    cl,BYTE PTR [ecx+0x41]
  41981b:	jmp    0xc2020d5d
  419820:	in     eax,0x51
  419822:	add    cl,ch
  419824:	inc    ecx
  419825:	leave  
  419826:	jae    0x419829
  419828:	lahf   
  419829:	or     eax,0xe14f2840
  41982e:	lock xor DWORD PTR [edi+0x9],eax
  419832:	push   eax
  419833:	add    DWORD PTR [ebx],esi
  419835:	dec    ecx
  419836:	inc    ecx
  419837:	add    BYTE PTR [edx],ah
  419839:	repz jae 0x4197fc
  41983c:	ficom  DWORD PTR [esi-0x10dffa8]
  419842:	mov    edi,0x245fb074
  419847:	inc    eax
  419848:	mov    ds:0xad5e807,eax
  41984d:	or     BYTE PTR [eax],al
  41984f:	push   eax
  419850:	or     cl,BYTE PTR [eax+eax*2]
  419853:	inc    ecx
  419854:	loop   0x419848
  419856:	jae    0x419818
  419858:	jp     0x4198b5
  41985a:	pop    edx
  41985b:	add    BYTE PTR [edx+0x476816de],dh
  419861:	inc    ebp
  419862:	inc    ecx
  419863:	add    BYTE PTR [edx],cl
  419865:	scas   eax,DWORD PTR es:[edi]
  419866:	push   esi
  419867:	add    BYTE PTR [edx-0xdd297a9],ah
  41986d:	inc    esp
  41986e:	add    bh,bh
  419870:	mov    edi,0xd85de6c7
  419875:	pop    es
  419876:	add    BYTE PTR [ebx],cl
  419878:	bound  edi,QWORD PTR [ecx+0x62]
  41987b:	inc    DWORD PTR [eax]
	...
  4198a1:	add    BYTE PTR [eax],al
  4198a3:	add    bh,bh
  4198a5:	mov    edi,0x7daa1e6
  4198aa:	add    BYTE PTR [eax+0x65],dl
  4198ad:	pop    ebx
  4198ae:	enter  0x54e8,0xef
  4198b2:	std    
  4198b3:	(bad)  
  4198b4:	fld    TBYTE PTR [ebx]
  4198b6:	mov    esp,0xe6c8ffff
  4198bb:	lea    ebx,[edx]
  4198bd:	add    eax,0x5b855000
  4198c2:	(bad)  
  4198c3:	call   0x3f89f0
  4198c8:	stos   DWORD PTR es:[edi],eax
  4198c9:	sub    bh,BYTE PTR [eax-0x13a987d]
  4198cf:	jae    0x4198df
  4198d1:	mov    bh,BYTE PTR [ebx-0x48]
  4198d4:	xor    bl,BYTE PTR [ebx+0x2e]
  4198d7:	push   0xef02e04b
  4198dc:	aad    0x7b
  4198de:	outs   dx,BYTE PTR ds:[esi]
  4198df:	or     BYTE PTR [ebx],ah
  4198e1:	xchg   esi,eax
  4198e2:	cmp    dh,0x4
  4198e5:	ins    BYTE PTR es:[edi],dx
  4198e6:	outs   dx,DWORD PTR ds:[esi]
  4198e7:	sar    ah,0xed
  4198ea:	or     ch,al
  4198ec:	(bad)  
  4198ed:	fs cmc 
  4198ef:	(bad)  
  4198f0:	in     al,dx
  4198f1:	int    0xb6
  4198f3:	(bad)  
  4198f4:	pop    esi
  4198f5:	clc    
  4198f6:	jmp    0x5efe:0xf553c738
  4198fd:	cwde   
  4198fe:	hlt    
  4198ff:	je     0x419944
  419901:	pop    eax
  419902:	es test ah,al
  419905:	sub    esi,ebp
  419907:	je     0x419909
	...
  41992d:	add    BYTE PTR [eax],al
  41992f:	add    BYTE PTR [ebx-0x4b78c6b8],cl
  419935:	sbb    esi,ebp
  419937:	je     0x4198bc
  419939:	sbb    BYTE PTR [ecx],dh
  41993b:	xchg   DWORD PTR [ebx+ecx*1+0x88774f5],esp
  419942:	sub    DWORD PTR [edi+0x74f4fb94],eax
  419948:	iret   
  419949:	sbb    BYTE PTR [ecx],ah
  41994b:	xchg   DWORD PTR [ebx+ebp*8+0x8c374f3],eax
  419952:	sbb    DWORD PTR [edi+0xce7db74],eax
  419958:	enter  0xec65,0x5
  41995c:	fsubrp st(2),st
  41995e:	mov    ebx,0x2de7344
  419963:	add    BYTE PTR [ebx+0x5f],cl
  419966:	jbe    0x419950
  419968:	dec    ebx
  419969:	sub    al,0x34
  41996b:	push   0x42fbdf
  419970:	cmp    al,0x2d
  419972:	enter  0xfce7,0x17
  419976:	add    al,0x0
  419978:	inc    eax
  419979:	or     DWORD PTR [ecx+0x23c24c6e],ebp
  41997f:	in     al,dx
  419980:	dec    ebx
  419981:	or     ecx,ebp
  419983:	add    esp,DWORD PTR [ebx+0x4b432918]
  419989:	jmp    0x420:0x89ecc7fb
  419990:	dec    ebx
  419991:	(bad)  
  419992:	test   al,0x6e
	...
  4199bc:	dec    esp
  4199bd:	ret    0xec23
  4199c0:	dec    edx
  4199c1:	or     ecx,ebp
  4199c3:	add    esp,esp
  4199c5:	jae    0x4199f4
  4199c7:	jmp    0x4199d7
  4199c9:	adc    DWORD PTR [ebp-0xc],0xffffffd0
  4199cd:	xor    eax,0xe9cdba29
  4199d2:	inc    ebp
  4199d3:	hlt    
  4199d4:	mov    edx,0x4dfd009a
  4199d9:	test   BYTE PTR [esi+esi*8+0x6e2de9b5],al
  4199e0:	fwait
  4199e1:	loopne 0x419a3f
  4199e3:	jge    0x41998a
  4199e5:	jmp    0xe0f10807
  4199ea:	inc    esp
  4199eb:	jge    0x419982
  4199ed:	jmp    0x58dcd84d
  4199f2:	adc    ecx,edx
  4199f4:	shr    cl,1
  4199f6:	std    
  4199f7:	jmp    0xc015:0xf3f5f04d
  4199fe:	sub    dl,BYTE PTR [ebx]
  419a00:	dec    ebx
  419a01:	push   esp
  419a02:	jb     0x4199e4
  419a04:	retf   
  419a05:	les    edx,FWORD PTR [edx+esi*8-0x765216a3]
  419a0c:	pushf  
  419a0d:	jmp    0x3e8:0xe94cf3cd
  419a14:	ror    BYTE PTR [esi-0x2b],1
  419a17:	(bad)  
  419a18:	cld    
  419a19:	pop    ebp
  419a1a:	add    ah,ch
  419a1c:	enter  0x20,0x34
	...
  419a48:	inc    edx
  419a49:	repnz hlt 
  419a4b:	call   0x1540a398
  419a50:	inc    ebx
  419a51:	icebp  
  419a52:	pop    ebp
  419a53:	js     0x419a6d
  419a55:	call   0x18d44364
  419a5a:	push   0x4a2b60
  419a5f:	jle    0x4199e3
  419a61:	std    
  419a62:	out    0x72,eax
  419a64:	jbe    0x419a4d
  419a66:	inc    BYTE PTR [edx+0x159e714a]
  419a6c:	mov    cs,WORD PTR [ecx]
  419a6e:	call   esp
  419a70:	xor    al,0xf1
  419a72:	jmp    0x419ad4
  419a74:	fsub   st,st(7)
  419a76:	mov    BYTE PTR [edi+ebx*4-0x1a],ah
  419a7a:	inc    BYTE PTR [esi+0x27]
  419a7d:	daa    
  419a7e:	add    ecx,ebp
  419a80:	dec    eax
  419a81:	xchg   esi,eax
  419a82:	test   BYTE PTR [ebx],ch
  419a84:	mov    ecx,0x9099fee7
  419a89:	ins    BYTE PTR es:[edi],dx
  419a8a:	xchg   BYTE PTR [esi],ah
  419a8c:	cwde   
  419a8d:	xchg   ebp,eax
  419a8e:	test   BYTE PTR [ebx],ch
  419a90:	cdq    
  419a91:	out    0xfe,eax
  419a93:	mov    ecx,0xfb79d99
  419a98:	cwde   
  419a99:	out    0xe7,eax
  419a9b:	dec    ecx
  419a9c:	and    BYTE PTR [ecx],cl
  419a9e:	add    BYTE PTR [eax-0x2e],dh
  419aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aa2:	std    
  419aa3:	idiv   BYTE PTR [ecx+0x28]
  419aa6:	pcmpgtw mm2,mm0
  419aa9:	or     DWORD PTR [eax],eax
  419aab:	jmp    0x419ab0
	...
  419ad4:	retf   
  419ad5:	jge    0x419a98
  419ad7:	fistp  WORD PTR [ecx-0x19]
  419ada:	imul   bl
  419adc:	cmp    BYTE PTR [ecx],cl
  419ade:	add    cl,ch
  419ae0:	dec    ecx
  419ae1:	lea    eax,[edx+0xc3200]
  419ae7:	lea    esi,[eax+0x29]
  419aea:	push   eax
  419aeb:	push   0x410896
  419af0:	or     dh,BYTE PTR [ebp+0x57]
  419af3:	add    BYTE PTR [edx],dh
  419af5:	out    0xbe,eax
  419af7:	jne    0x419b20
  419af9:	lds    eax,FWORD PTR [edi+0x1]
  419afc:	and    cl,BYTE PTR [ecx*4-0x2261f6b]
  419b03:	(bad)  
  419b04:	jg     0x419b54
  419b06:	sub    al,0x50
  419b08:	pop    edx
  419b09:	sub    DWORD PTR [edx],0x41
  419b0c:	loop   0x419ad1
  419b0e:	pop    edx
  419b0f:	push   edi
  419b10:	loop   0x419b1d
  419b12:	or     eax,eax
  419b14:	pop    es
  419b15:	adc    ecx,ebp
  419b17:	sub    al,0xf3
  419b19:	or     eax,DWORD PTR [eax]
  419b1b:	push   edi
  419b1d:	jmp    edi
  419b1f:	mov    edx,0xbfddb52
  419b24:	jb     0x419b87
  419b26:	punpckhbw mm3,mm2
  419b29:	add    eax,DWORD PTR [ecx+0x0]
  419b2c:	jge    0x419b8f
  419b2e:	adc    al,0xe8
  419b30:	aad    0x64
  419b32:	(bad)  
  419b33:	(bad)  
  419b34:	cmp    esi,esp
  419b36:	push   0x0
	...
  419b5f:	add    BYTE PTR ds:0xe9e81461,bh
  419b65:	fs (bad) 
  419b67:	(bad)  
  419b68:	out    dx,eax
  419b69:	add    al,0xfe
  419b6c:	dec    ebp
  419b6d:	fisttp DWORD PTR [ebx+0x503d8e52]
  419b73:	call   0x400065
  419b78:	sar    BYTE PTR [ebx],cl
  419b7a:	push   DWORD PTR [ebp+0x62]
  419b7d:	fdiv   DWORD PTR [ebx+0xc]
  419b80:	jge    0x419be1
  419b82:	or     al,ch
  419b84:	dec    ebx
  419b85:	ret    
  419b86:	icebp  
  419b87:	dec    BYTE PTR [ecx+ecx*8-0x78]
  419b8b:	test   BYTE PTR [eax+edx*8-0x26],al
  419b8f:	fmul   QWORD PTR [ebx-0x10]
  419b92:	add    cl,BYTE PTR [ebp-0x7b84f377]
  419b98:	div    DWORD PTR [esi+0x4fb3fef0]
  419b9e:	xor    DWORD PTR [ecx+0x4b],eax
  419ba1:	xchg   DWORD PTR [esi-0xf7fea4d],esi
  419ba7:	out    0x46,eax
  419ba9:	sbb    BYTE PTR [eax+eax*1],al
  419bac:	push   eax
  419bad:	mov    al,0x77
  419baf:	cs jae 0x419bea
  419bb2:	sbb    al,0x41
  419bb4:	dec    ebx
  419bb5:	pop    edi
  419bb6:	ja     0x419bcc
  419bb8:	jecxz  0x419c19
  419bba:	jl     0x419bba
  419bbc:	in     al,0x6f
  419bbe:	mov    bh,0xb3
  419bc0:	fld    QWORD PTR [edi-0xf]
  419bc3:	dec    edi
	...
  419bec:	jecxz  0x419bed
  419bee:	jp     0x419bee
  419bf0:	int3   
  419bf1:	mov    al,ds:0x4f5b74ef
  419bf6:	ja     0x419c04
  419bf8:	sbb    esp,DWORD PTR [edi]
  419bfa:	ja     0x419c04
  419bfc:	mov    ds:0xacfeec1f,eax
  419c01:	dec    eax
  419c02:	cmp    DWORD PTR [ebp-0x4b0ed05c],eax
  419c08:	xlat   BYTE PTR ds:[ebx]
  419c09:	push   es
  419c0a:	icebp  
  419c0b:	(bad)  
  419c0c:	mov    ds:0x4b0058c0,eax
  419c11:	jae    0x419bff
  419c13:	add    ecx,edi
  419c15:	ret    
  419c16:	jnp    0x419bac
  419c18:	mov    bh,0xe6
  419c1a:	out    dx,eax
  419c1b:	dec    BYTE PTR [eax+0x0]
  419c1e:	test   ecx,ebp
  419c20:	dec    ecx
  419c21:	mov    es,WORD PTR [ecx+0x5a093539]
  419c27:	ja     0x419c72
  419c29:	repnz sub BYTE PTR [ebp+eiz*8+0x25],bl
  419c2e:	sub    BYTE PTR [esp+ecx*2],al
  419c31:	pushf  
  419c32:	xchg   esp,eax
  419c33:	icebp  
  419c34:	inc    ebp
  419c35:	out    0xd0,al
  419c37:	nop
  419c38:	xchg   ebp,eax
  419c39:	or     ecx,ebp
  419c3b:	push   ebx
  419c3c:	mov    ds:0x4b42f663,eax
  419c41:	out    0x73,al
  419c43:	mov    bh,0x26
  419c45:	out    0xa5,al
  419c47:	fcmovne st,st(6)
  419c49:	cmp    eax,0x717b03e9
  419c4e:	outs   dx,BYTE PTR ds:[esi]
  419c4f:	xor    BYTE PTR [eax],al
	...
  419c75:	add    BYTE PTR [eax],al
  419c77:	add    BYTE PTR [edx-0x474971f7],cl
  419c7d:	out    0x85,al
  419c7f:	lock in al,0x63
  419c82:	push   ss
  419c83:	add    al,0x4b
  419c85:	inc    ebx
  419c86:	adc    ch,bh
  419c88:	lods   al,BYTE PTR ds:[esi]
  419c89:	pop    ebx
  419c8a:	loope  0x419c88
  419c8c:	cli    
  419c8d:	pop    ebx
  419c8e:	in     eax,dx
  419c8f:	cld    
  419c90:	adc    ebx,DWORD PTR [ebp+0xf]
  419c93:	pop    esp
  419c94:	mov    ds:0xcc03a830,eax
  419c99:	pop    ebx
  419c9a:	cmc    
  419c9b:	fld    TBYTE PTR [edi]
  419c9d:	xchg   ecx,eax
  419c9e:	inc    ebp
  419c9f:	lock mov ebp,0xb5f1749b
  419ca5:	in     eax,0x98
  419ca7:	fcmovnu st,st(7)
  419ca9:	nop
  419caa:	sub    eax,0x9be614f0
  419caf:	adc    ebx,DWORD PTR [ebx+ebx*2+0x5b9453ed]
  419cb6:	loope  0x419c93
  419cb8:	mov    dl,ah
  419cba:	or     eax,0x6cab6cf0
  419cbf:	lock jge 0x419c55
  419cc2:	arpl   bp,ax
  419cc4:	jbe    0x419cab
  419cc6:	push   ebp
  419cc8:	sbb    esi,esp
  419cca:	mov    ah,0x2d
  419ccc:	pop    edx
  419ccd:	out    0xfe,al
  419ccf:	rcl    DWORD PTR [eax+0x3f],1
  419cd2:	add    cl,ch
  419cd4:	ret    
  419cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cd6:	push   cs
  419cd7:	ins    BYTE PTR es:[edi],dx
  419cd8:	shl    esi,cl
  419cda:	dec    dh
	...
  419d04:	xor    al,0x9e
  419d06:	mov    ebx,0xe7e42cc7
  419d0b:	out    dx,eax
  419d0c:	sahf   
  419d0d:	or     DWORD PTR [eax],eax
  419d0f:	mov    dh,0xf2
  419d11:	pushf  
  419d12:	std    
  419d13:	scas   al,BYTE PTR es:[edi]
  419d14:	xor    al,0xed
  419d16:	je     0x419d85
  419d18:	sub    al,0xe4
  419d1a:	enter  0x3fab,0x9
  419d1e:	push   ebp
  419d1f:	bound  ebp,QWORD PTR [ebx]
  419d21:	in     al,0x74
  419d23:	(bad)  
  419d25:	pop    ebp
  419d26:	adc    BYTE PTR [esi-0xb00ea7e],al
  419d2c:	lock in al,dx
  419d2e:	ret    
  419d2f:	je     0x419d0d
  419d31:	jecxz  0x419cfb
  419d33:	stos   DWORD PTR es:[edi],eax
  419d34:	dec    ebx
  419d35:	or     DWORD PTR [ebp+0x72],edx
  419d38:	jmp    0x419cc1
  419d3a:	ret    
  419d3b:	pop    ecx
  419d3c:	jl     0x419d22
  419d3e:	je     0x419d25
  419d40:	lock outs dx,BYTE PTR ds:[esi]
  419d42:	mov    DWORD PTR [esi-0x4c],ecx
  419d45:	xadd   BYTE PTR [ebx+edx*2+0x4b2bc944],bh
  419d4d:	or     edi,edi
  419d4f:	mov    esp,0x6054f158
  419d54:	mov    ah,0xe3
  419d56:	or     ch,BYTE PTR [ecx]
  419d58:	and    cl,BYTE PTR [esi]
  419d5a:	pop    edi
  419d5b:	xor    BYTE PTR [ecx+0x12160010],cl
  419d61:	adc    eax,0xe305f0e8
  419d66:	inc    BYTE PTR [eax]
	...
  419d90:	jns    0x419d5a
  419d92:	jae    0x419da3
  419d94:	fiadd  DWORD PTR [eax-0xc9dbeda]
  419d9a:	jae    0x419da8
  419d9c:	dec    edx
  419d9d:	fwait
  419d9e:	test   edi,edi
  419da0:	gs mov edi,0xf3626a08
  419da6:	jae    0x419db4
  419da8:	mov    al,BYTE PTR [edx+0x6515ff85]
  419dae:	inc    esp
  419daf:	hlt    
  419db0:	call   0x73f3:0x22413f1d
  419db7:	hlt    
  419db8:	or     dl,BYTE PTR [edx+0x64f5ff85]
  419dbe:	inc    esp
  419dbf:	clc    
  419dc0:	cmp    bh,BYTE PTR [edi-0x3fddff05]
  419dc6:	add    eax,DWORD PTR [ebp+esi*4-0x29ba780e]
  419dcd:	aas    
  419dce:	add    BYTE PTR [eax],dl
  419dd0:	repnz pop es
  419dd2:	call   0xfe34ffcf
  419dd7:	mov    DWORD PTR [edi],ebx
  419dd9:	(bad)  
  419ddb:	jne    0x419e37
  419ddd:	shr    BYTE PTR [eax+0x9f36588],0xc0
  419de4:	in     eax,0x8b
  419de6:	mov    ebx,0xff07e200
  419deb:	jne    0x419e07
  419ded:	inc    eax
  419dee:	call   0xff4950f0
  419df3:	jne    0x419df5
	...
  419e19:	add    BYTE PTR [eax],al
  419e1b:	add    BYTE PTR [esi-0x40],dh
  419e1e:	adc    BYTE PTR [ebp-0x5e],0x7
  419e22:	cmp    eax,0xffffffb0
  419e25:	loop   0x419dab
  419e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e28:	mov    dl,0x7
  419e2a:	add    BYTE PTR [ebx+0x3f7ef3b7],cl
  419e30:	dec    ebx
  419e31:	repnz std 
  419e33:	and    ebx,0xfffffff1
  419e36:	add    al,BYTE PTR [eax]
  419e38:	repz int3 
  419e3a:	sub    eax,0xda7b4b41
  419e3f:	cmp    DWORD PTR ds:0x8b0b02f2,edx
  419e45:	pop    ebp
  419e46:	jbe    0x419e47
  419e48:	(bad)  
  419e49:	jmp    0xf2869da9
  419e4e:	add    bh,bh
  419e50:	(bad)  
  419e51:	rcr    DWORD PTR [ebx-0x56],0x73
  419e55:	xor    DWORD PTR [eax+ebp*2],eax
  419e58:	fwait
  419e59:	or     eax,DWORD PTR [ebx+0x0]
  419e5c:	pushf  
  419e5d:	mov    eax,0xf04b5532
  419e62:	idiv   DWORD PTR [edi+0x74ecf89f]
  419e68:	and    esi,edi
  419e6a:	add    ch,BYTE PTR [eax-0x72]
  419e6d:	ret    
  419e6e:	inc    ecx
  419e6f:	add    BYTE PTR [eax+ecx*4+0x36],dh
  419e73:	push   ebp
  419e74:	dec    ebx
  419e75:	lock jg 0x419e6f
  419e78:	dec    edx
  419e79:	in     eax,0x35
  419e7b:	(bad)  
  419e7c:	jle    0x419ede
  419e7e:	in     eax,dx
  419e7f:	je     0x419e81
	...
  419ea5:	add    BYTE PTR [eax],al
  419ea7:	add    bh,dh
  419ea9:	mov    cl,ch
  419eab:	test   esp,esp
  419ead:	jae    0x419f03
  419eaf:	mov    edi,ebx
  419eb1:	aaa    
  419eb2:	sti    
  419eb3:	jg     0x419ec6
  419eb5:	adc    esi,DWORD PTR [edi+0x3]
  419eb8:	add    eax,0x50424eef
  419ebd:	push   ds
  419ebe:	js     0x419ec5
  419ec0:	retf   
  419ec1:	push   es
  419ec2:	add    al,0x75
  419ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ec5:	and    esi,DWORD PTR [edi+0x10]
  419ec8:	sbb    ebx,DWORD PTR [ebx]
  419eca:	ja     0x419ed4
  419ecc:	mov    bl,0x2b
  419ece:	out    dx,al
  419ecf:	(bad)  
  419ed0:	pushf  
  419ed1:	or     DWORD PTR [ecx],edx
  419ed3:	xor    eax,ecx
  419ed5:	loop   0x419ef4
  419ed7:	fnstcw WORD PTR [esi]
  419ed9:	loop   0x419e76
  419edb:	adc    eax,DWORD PTR [esp+ebx*2+0x10f7ed19]
  419ee2:	adc    DWORD PTR [edx-0x10021d8a],esi
  419ee8:	cmp    ecx,ecx
  419eea:	das    
  419eeb:	in     eax,dx
  419eec:	gs loop 0x419edc
  419eef:	icebp  
  419ef0:	scas   al,BYTE PTR es:[edi]
  419ef1:	and    esi,ebp
  419ef3:	cld    
  419ef4:	iret   
  419ef5:	jno    0x419ed5
  419ef7:	in     al,dx
  419ef8:	dec    ebp
  419ef9:	loop   0x419f56
  419efb:	clc    
  419efc:	sub    al,0x10
  419efe:	push   0xffffffec
  419f00:	cmp    eax,0x2cf43be2
  419f05:	or     BYTE PTR [edx-0x14],ch
  419f08:	sub    eax,0xec3be2
	...
  419f31:	add    BYTE PTR [eax],al
  419f33:	add    BYTE PTR [eax+eiz*8],ch
  419f36:	push   0xffffffec
  419f38:	sbb    eax,0x2cf01be2
  419f3d:	fsubr  DWORD PTR [edx-0x14]
  419f40:	or     eax,0x4141be2
  419f45:	pop    esp
  419f46:	fucomp st(4)
  419f48:	ja     0x419f5b
  419f4a:	xchg   ecx,eax
  419f4b:	jno    0x419f42
  419f4d:	loope  0x419fcc
  419f4f:	dec    esp
  419f50:	add    al,bh
  419f52:	in     al,0x3
  419f54:	jle    0x419ee4
  419f56:	jl     0x419ed8
  419f58:	or     cl,dh
  419f5a:	gs jbe 0x419f9c
  419f5d:	loop   0x419f32
  419f5f:	adc    esp,ebx
  419f61:	outs   dx,DWORD PTR ds:[esi]
  419f62:	mov    esp,0x290e4b03
  419f67:	ja     0x419f7d
  419f69:	outs   dx,DWORD PTR ds:[esi]
  419f6a:	jmp    0xa863bdca
  419f6f:	add    ebp,DWORD PTR [ebx+ebx*2+0x5cb7d900]
  419f76:	or     al,0x41
  419f78:	fisttp WORD PTR [esi+edi*8+0x73a19326]
  419f7f:	test   al,0xf8
  419f81:	cmp    al,ch
  419f83:	pushf  
  419f84:	add    al,0xe3
  419f86:	(bad)  
  419f87:	loop   0x419f11
  419f89:	push   ebp
  419f8a:	xor    DWORD PTR [eax+0xd],esi
  419f8d:	icebp  
  419f8e:	imul   esp,ebx,0xf685f490
  419f94:	jo     0x419fa4
  419f96:	shl    BYTE PTR [ebp+0x0],0x0
	...
  419fbe:	add    BYTE PTR [eax],al
  419fc0:	push   ebx
  419fc1:	loop   0x41a037
  419fc3:	add    edi,edi
  419fc5:	lock and DWORD PTR [edi+0x60],0xffffffe2
  419fca:	dec    edi
  419fcb:	(bad)  
  419fcc:	mov    edx,0xbace4ff1
  419fd1:	adc    eax,ebp
  419fd3:	adc    ah,BYTE PTR [ecx]
  419fd5:	loopne 0x419fd5
  419fd7:	shl    DWORD PTR [eax+0x30b6fe8b],1
  419fdd:	push   esi
  419fde:	call   0xfecd38a4
  419fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fe4:	neg    DWORD PTR [edx-0x7e]
  419fe7:	sahf   
  419fe8:	and    BYTE PTR [ecx+0x0],ch
  419feb:	loope  0x41a035
  419fed:	or     eax,ebp
  419fef:	push   cs
  419ff0:	(bad)
  419ff3:	jo     0x419f7f
  419ff5:	loope  0x419f83
  419ff7:	and    al,0xe3
  419ff9:	push   eax
  419ffa:	(bad)  
  419ffb:	cld    
  419ffc:	cmp    al,ah
  419ffe:	je     0x419fdd
  41a000:	add    BYTE PTR [edi+0x1448e953],dl
  41a006:	rcl    ah,0x58
  41a009:	enter  0x5944,0x4f
  41a00d:	or     DWORD PTR [eax],eax
  41a00f:	jmp    0x135e59d
  41a014:	or     eax,0x9800000c
  41a019:	or     al,0x6a
  41a01b:	add    BYTE PTR [eax-0xff95f4],cl
  41a021:	dec    ecx
  41a022:	hlt    
  41a023:	push   eax
	...
  41a04c:	ins    DWORD PTR es:[edi],dx
  41a04d:	pop    edx
  41a04e:	clc    
  41a04f:	push   DWORD PTR [edi+0x5e75fddc]
  41a055:	mov    ebp,0xc72548e
  41a05a:	or     eax,eax
  41a05c:	test   BYTE PTR ds:0x84da3aeb,0x26
  41a063:	inc    ecx
  41a064:	jb     0x41a059
  41a066:	jae    0x41a078
  41a068:	dec    edx
  41a069:	fwait
  41a06a:	cmp    edi,0x6d
  41a06d:	repz jae 0x41a068
  41a070:	adc    bh,BYTE PTR [ebp-0xce27a01]
  41a076:	xchg   DWORD PTR [ebp-0x2],eax
  41a079:	bnd jae 0x41a094
  41a07c:	or     eax,0x77ff1459
  41a081:	sar    ebp,0x75
  41a084:	cs repz jae 0x41a090
  41a088:	or     cl,BYTE PTR ds:0xf2edffff
  41a08e:	jae    0x41a07c
  41a090:	mov    edx,0xddff7fc2
  41a095:	repnz inc ebx
  41a097:	lock leave 
  41a099:	xchg   edx,eax
  41a09a:	std    
  41a09b:	jne    0x41a06b
  41a09d:	ret    
  41a09e:	cmp    dl,BYTE PTR [edx+eiz*8+0xb]
  41a0a2:	push   DWORD PTR [ebp+0x5a]
  41a0a5:	(bad)  
  41a0a6:	fadd   DWORD PTR [ecx-0x3d380c93]
  41a0ac:	(bad)  
  41a0ad:	or     edx,DWORD PTR [ebp-0x75]
	...
  41a0d8:	jle    0x41a05f
  41a0da:	ret    0x4bf4
  41a0dd:	cmp    dl,ch
  41a0df:	(bad)  
  41a0e0:	xor    edx,esi
  41a0e2:	pop    esp
  41a0e3:	and    al,0xb4
  41a0e5:	pushf  
  41a0e6:	cli    
  41a0e7:	out    0xb2,eax
  41a0e9:	lahf   
  41a0ea:	jmp    0xe6ee73ed
  41a0ef:	mov    BYTE PTR [esi+0xa],0x2b
  41a0f3:	inc    ecx
  41a0f4:	dec    ebx
  41a0f5:	repnz add al,BYTE PTR [eax]
  41a0f8:	dec    ebx
  41a0f9:	ins    DWORD PTR es:[edi],dx
  41a0fa:	xor    dh,0x85
  41a0fd:	imul   cl
  41a0ff:	dec    edi
  41a100:	repz in eax,0x3
  41a103:	add    BYTE PTR [ebx-0x6],cl
  41a106:	jne    0x41a15b
  41a108:	dec    ebx
  41a109:	repnz pop edx
  41a10b:	out    dx,al
  41a10c:	and    al,0xb1
  41a10e:	add    ch,BYTE PTR [eax+0x65]
  41a111:	scas   al,BYTE PTR es:[edi]
  41a112:	inc    ebx
  41a113:	add    bl,ah
  41a115:	icebp  
  41a116:	inc    edx
  41a117:	inc    ecx
  41a118:	dec    ebx
  41a119:	mov    edi,0x3172372e
  41a11e:	add    al,0xff
  41a120:	mov    dh,0xe8
  41a122:	fisub  DWORD PTR [edi+0x67e8c835]
  41a128:	sbb    eax,0xb30041e0
  41a12d:	into   
  41a12e:	sub    BYTE PTR [ecx+0x4b],al
  41a131:	dec    eax
  41a132:	add    al,0x40
  41a134:	mov    dh,al
  41a136:	pop    edx
  41a137:	add    cl,BYTE PTR [ebx-0x10]
  41a13a:	cmp    dh,0x0
	...
  41a161:	add    BYTE PTR [eax],al
  41a163:	add    BYTE PTR [esi-0x18],bh
  41a166:	fimul  DWORD PTR [ebx-0x73177003]
  41a16c:	into   
  41a16d:	pop    edi
  41a16e:	jmp    0x7815:0xdc00ecfe
  41a175:	lock add bh,bh
  41a178:	push   esi
  41a179:	ins    BYTE PTR es:[edi],dx
  41a17a:	jmp    0x514ae4f3
  41a17f:	ror    DWORD PTR [esi-0x22],cl
  41a182:	pop    ebp
  41a183:	mov    ebx,0x4ee9058a
  41a188:	shr    ch,1
  41a18a:	sar    BYTE PTR [bx+si+0x45df],0xe9
  41a190:	and    cl,BYTE PTR [ecx]
  41a192:	rcr    DWORD PTR [esi],cl
  41a194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a195:	push   esp
  41a196:	loope  0x41a173
  41a198:	sbb    bl,BYTE PTR [edi+0x2e]
  41a19b:	jmp    0x5e66e663
  41a1a0:	xor    ecx,esi
  41a1a2:	popf   
  41a1a3:	jle    0x41a12a
  41a1a5:	fsubrp st(1),st
  41a1a7:	ret    
  41a1a8:	clc    
  41a1a9:	and    al,0x81
  41a1ab:	fnstenv ds:0x6353e948
  41a1b1:	cmc    
  41a1b2:	arpl   cx,bp
  41a1b4:	cmp    DWORD PTR gs:[ecx+0x2eee3b03],eax
  41a1bb:	pop    esp
  41a1bc:	sbb    DWORD PTR [ecx+0x28],ecx
  41a1bf:	add    al,0xfb
  41a1c1:	fst    QWORD PTR [ebx-0x4]
  41a1c4:	sub    al,0xbd
  41a1c6:	mov    ebp,eax
	...
  41a1f0:	cmp    eax,0x3582e0f1
  41a1f5:	fisubr WORD PTR [ebp+0x281e64fe]
  41a1fb:	add    al,0x4a
  41a1fd:	or     ecx,ebp
  41a1ff:	add    ecx,esi
  41a201:	xor    DWORD PTR [ebp+0x38de15e9],0x5c
  41a208:	inc    edi
  41a209:	or     cl,ch
  41a20b:	add    esi,ebx
  41a20d:	fwait
  41a20e:	cmp    al,BYTE PTR [ebx+ecx*2]
  41a211:	jno    0x41a292
  41a213:	sub    BYTE PTR [edx+0x2de21109],cl
  41a219:	dec    eax
  41a21a:	jmp    0x8aed7a
  41a21f:	sub    BYTE PTR [edi-0x22],al
  41a222:	xor    al,0xb6
  41a224:	xor    DWORD PTR [eax+0x0],ecx
  41a227:	pop    bp
  41a229:	adc    eax,ebp
  41a22b:	pop    ebx
  41a22c:	lods   eax,DWORD PTR ds:[esi]
  41a22d:	fdivp  st(6),st
  41a22f:	shl    DWORD PTR [edx+0x10e9411e],0xe7
  41a236:	ds test al,0x48
  41a239:	jno    0x41a23b
  41a23b:	test   eax,0xeb680909
  41a240:	dec    eax
  41a241:	or     DWORD PTR [eax-0x17eedad2],eax
  41a247:	aas    
  41a248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a249:	fdivp  st(6),st
  41a24b:	ins    BYTE PTR es:[edi],dx
  41a24c:	add    eax,0x7316fdd7
  41a251:	dec    ebp
  41a252:	call   0x41a2e0
	...
  41a27b:	add    BYTE PTR [esi],bl
  41a27d:	or     DWORD PTR [eax],eax
  41a27f:	push   es
  41a280:	fstp   st(4)
  41a282:	(bad)  
  41a283:	je     0x41a2e5
  41a285:	in     eax,0x1a
  41a287:	ja     0x41a2fc
  41a289:	fmulp  st(0),st
  41a28b:	sub    edx,DWORD PTR [ebp+ebx*8+0x53]
  41a28f:	jb     0x41a304
  41a291:	mov    bl,al
  41a293:	aad    0x2d
  41a295:	fdiv   st(6),st
  41a297:	inc    ebx
  41a298:	inc    edi
  41a299:	outs   dx,DWORD PTR ds:[esi]
  41a29a:	es into 
  41a29c:	mov    edx,0xa285e811
  41a2a1:	fdiv   st(6),st
  41a2a3:	jo     0x41a22f
  41a2a5:	ffree  st(6)
  41a2a7:	in     al,dx
  41a2a8:	inc    eax
  41a2a9:	sbb    al,0x41
  41a2ab:	jmp    0xe941abf8
  41a2b0:	xchg   ebx,eax
  41a2b1:	test   esi,esi
  41a2b3:	lahf   
  41a2b4:	in     al,dx
  41a2b5:	fisttp DWORD PTR [edi+0x1]
  41a2b8:	dec    ebx
  41a2b9:	or     al,BYTE PTR [eax]
  41a2bb:	jmp    0x93b9d0
  41a2c0:	loop   0x41a2ca
  41a2c2:	push   0x46324d
  41a2c7:	push   0x414531
  41a2cc:	dec    edx
  41a2cd:	add    eax,0xe3e24140
  41a2d2:	xor    esi,DWORD PTR [edi]
  41a2d4:	pop    ebx
  41a2d5:	inc    esi
  41a2d6:	add    bh,bh
  41a2d8:	lahf   
  41a2d9:	loopne 0x41a2c1
  41a2db:	imul   eax,DWORD PTR [edi],0xffffffe4
  41a2de:	std    
  41a2df:	push   0x0
	...
  41a308:	test   DWORD PTR [eax+0x41],0x40477a00
  41a30f:	inc    ecx
  41a310:	mov    dl,0x40
  41a312:	add    BYTE PTR [eax-0x1d],al
  41a315:	or     BYTE PTR [eax+0x2],ch
  41a318:	mov    ds:0xdfff8008,al
  41a31d:	loopne 0x41a305
  41a31f:	dec    edi
  41a320:	push   edi
  41a321:	in     al,0xfd
  41a323:	(bad)  
  41a324:	out    dx,eax
  41a325:	jmp    0x41a323
  41a327:	inc    DWORD PTR [ebp+0x35]
  41a32a:	call   0x4a6708
  41a32f:	(bad)  
  41a330:	(bad)  
  41a332:	std    
  41a333:	jne    0x41a39f
  41a335:	rcl    BYTE PTR [edx-0x381c9a83],0xc2
  41a33c:	or     BYTE PTR cs:[ebp-0x75],dl
  41a340:	push   es
  41a341:	test   edx,eax
  41a343:	hlt    
  41a344:	add    al,0xe3
  41a346:	std    
  41a347:	push   0x22
  41a349:	inc    edx
  41a34a:	daa    
  41a34b:	call   FWORD PTR [edi-0x23]
  41a34e:	out    0x35,al
  41a350:	push   edi
  41a351:	in     al,0xfd
  41a353:	mov    DWORD PTR [edi-0xf],ebp
  41a356:	lds    eax,FWORD PTR ds:0x4122fa
  41a35c:	repnz pop es
  41a35e:	add    BYTE PTR [eax],al
  41a360:	dec    ebx
  41a361:	gs xor dh,0xf5
  41a365:	mov    ah,ch
  41a367:	dec    edi
  41a368:	arpl   si,bp
  41a36a:	add    eax,DWORD PTR [eax]
	...
  41a394:	dec    ebx
  41a395:	jp     0x41a32c
  41a397:	push   eax
  41a398:	dec    ebx
  41a399:	repnz pop edx
  41a39b:	mov    esi,DWORD PTR [bx+di]
  41a39e:	add    al,0x68
  41a3a0:	push   0xffffffb2
  41a3a2:	inc    ebx
  41a3a3:	add    BYTE PTR [ebx],dh
  41a3a5:	repnz inc edx
  41a3a7:	inc    ecx
  41a3a8:	dec    ebx
  41a3a9:	xor    esi,DWORD PTR [eax]
  41a3ab:	aaa    
  41a3ac:	bound  esi,QWORD PTR [ecx-0x25c900fe]
  41a3b2:	(bad)  
  41a3b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3b5:	sbb    ah,dh
  41a3b7:	addr16 and al,0xb2
  41a3ba:	inc    ebx
  41a3bb:	add    BYTE PTR [ebx],ah
  41a3bd:	rol    DWORD PTR [edx+0x41],1
  41a3c0:	dec    ebx
  41a3c1:	jp     0x41a3c5
  41a3c3:	inc    eax
  41a3c4:	or     dh,dl
  41a3c6:	pop    edx
  41a3c7:	add    cl,BYTE PTR [ebx-0xe]
  41a3ca:	cmp    dh,0xfe
  41a3cd:	jmp    0x2b16bac
  41a3d2:	out    0x8c,al
  41a3d4:	into   
  41a3d5:	shl    bl,cl
  41a3d7:	(bad)  
  41a3d8:	pop    esp
  41a3d9:	sbb    edx,0x2f1fa51
  41a3df:	call   esi
  41a3e1:	in     eax,0xe4
  41a3e3:	je     0x41a438
  41a3e5:	mov    eax,0xb43c7cf6
  41a3ea:	mov    edx,0x4df04fc1
  41a3ef:	mov    ebx,DWORD PTR [edi]
  41a3f1:	jb     0x41a3b3
  41a3f3:	repz and eax,0x69e49c
	...
  41a41d:	add    BYTE PTR [eax],al
  41a41f:	add    BYTE PTR [ebx+0x46],cl
  41a422:	sbb    al,0xff
  41a424:	sahf   
  41a425:	call   0x9d15204
  41a42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a42b:	in     eax,0xd3
  41a42d:	inc    esp
  41a42e:	popf   
  41a42f:	mov    ebp,0x42d63147
  41a434:	dec    ebx
  41a435:	or     ecx,ebp
  41a437:	add    ecx,DWORD PTR [ebx-0x74]
  41a43a:	imul   ebp,ebp,0xffffffe6
  41a43d:	fidivr DWORD PTR [ebp+0x54]
  41a440:	jae    0x41a447
  41a442:	call   0xc132ef4a
  41a447:	push   edx
  41a448:	dec    ebx
  41a449:	or     ecx,edx
  41a44b:	or     ecx,DWORD PTR fs:[eax-0x17]
  41a44f:	pop    ebx
  41a450:	xor    al,0x49
  41a452:	test   al,0x3
  41a454:	and    ecx,DWORD PTR [ecx]
  41a456:	test   eax,0xfbda4b42
  41a45b:	sub    al,0x72
  41a45d:	dec    eax
  41a45e:	jmp    0x4152bc47
  41a463:	inc    edi
  41a464:	xchg   edi,eax
  41a465:	fisubr DWORD PTR ds:0xa8490c5c
  41a46b:	add    esi,ebx
  41a46d:	push   ecx
  41a46e:	test   eax,0xe9714b42
  41a473:	inc    ebx
  41a474:	or     cl,BYTE PTR [ecx]
  41a476:	add    DWORD PTR [ecx],0xe569094b
  41a47c:	fist   WORD PTR [eax]
  41a47e:	adc    DWORD PTR [ebx+0x5f],eax
  41a481:	(bad)  
  41a483:	jbe    0x41a485
	...
  41a4a9:	add    BYTE PTR [eax],al
  41a4ab:	add    bh,cl
  41a4ad:	shr    dh,cl
  41a4af:	in     al,0x4d
  41a4b1:	cmp    ecx,edx
  41a4b3:	mov    eax,0xe4e90994
  41a4b8:	mov    bh,0xdd
  41a4ba:	aad    0x6e
  41a4bc:	inc    ebx
  41a4bd:	icebp  
  41a4be:	data16 addr16 sub al,0xda
  41a4c2:	scas   eax,DWORD PTR es:[edi]
  41a4c3:	ror    DWORD PTR [eax+0x9],0x14
  41a4c7:	jns    0x41a4f9
  41a4c9:	xchg   bh,bh
  41a4cb:	lods   al,BYTE PTR ds:[esi]
  41a4cc:	sub    al,0x70
  41a4ce:	add    BYTE PTR [ebx+0x30],al
  41a4d1:	fidiv  DWORD PTR [ecx+esi*8+0x20]
  41a4d5:	xor    BYTE PTR [esi+ebx*4-0x19],bh
  41a4d9:	nop
  41a4da:	inc    esp
  41a4db:	xchg   ebp,eax
  41a4dc:	xchg   edx,eax
  41a4dd:	or     DWORD PTR [eax+0x45],ebp
  41a4e0:	mov    BYTE PTR [eax+0x0],cl
  41a4e3:	adc    DWORD PTR [ecx-0x1816bee7],edi
  41a4e9:	adc    al,0x37
  41a4eb:	ror    BYTE PTR [ecx-0x368617f7],0xda
  41a4f2:	(bad)  
  41a4f3:	repnz mov BYTE PTR [ebp+0x19],dl
  41a4f7:	mov    ecx,0x46000920
  41a4fc:	out    dx,al
  41a4fd:	popa   
  41a4fe:	mov    ah,0xa9
  41a500:	or     DWORD PTR [ecx],ecx
  41a502:	push   eax
  41a503:	inc    esi
  41a504:	xor    eax,0xeb6ee811
  41a509:	(bad)  
  41a50b:	inc    ecx
  41a50c:	jecxz  0x41a569
  41a50e:	jmp    FWORD PTR [esi]
	...
  41a538:	repnz or BYTE PTR [eax+0x52],ch
  41a53c:	or     BYTE PTR [eax+0x0],cl
  41a53f:	xchg   ecx,eax
  41a540:	ficomp DWORD PTR [ecx]
  41a542:	inc    ecx
  41a543:	jmp    0xc078b9b7
  41a548:	or     DWORD PTR [ecx],ecx
  41a54a:	call   0xff1c6e94
  41a54f:	repnz mov BYTE PTR [ebp+0x19],dl
  41a553:	cdq    
  41a554:	lock or BYTE PTR [eax],al
  41a557:	(bad)  
  41a558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a559:	popa   
  41a55a:	mov    ah,0x29
  41a55c:	mov    cs,WORD PTR [ecx]
  41a55e:	push   eax
  41a55f:	fisub  WORD PTR [edx-0x13cd17ff]
  41a565:	xlat   BYTE PTR ds:[ebx]
  41a566:	inc    cl
  41a568:	rcl    BYTE PTR [esi-0x1],0x0
  41a56c:	or     eax,0xddfc73ed
  41a571:	xor    cl,BYTE PTR [eax]
  41a573:	call   0x40de50
  41a578:	jmp    0x41a549
  41a57a:	add    al,BYTE PTR [eax]
  41a57c:	inc    edi
  41a57d:	mov    dl,ch
  41a57f:	and    DWORD PTR [esi+0x485754e9],0xd
  41a586:	push   0x2a
  41a588:	mov    ebp,0x6ee80832
  41a58d:	cmp    bh,bh
  41a58f:	call   FWORD PTR [ebx+0x42]
  41a592:	cld    
  41a593:	push   0xffffffe2
  41a595:	in     al,0xa7
  41a597:	sbb    BYTE PTR [ebp-0x14],0x9
  41a59b:	rol    BYTE PTR [eax],0x0
	...
  41a5c2:	add    BYTE PTR [eax],al
  41a5c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5c5:	aad    0x4e
  41a5c7:	push   0xbeef0cb2
  41a5cc:	mov    cl,ch
  41a5ce:	ds inc ecx
  41a5d0:	mov    ds:0x9a75ff1c,al
  41a5d5:	in     al,0xf
  41a5d7:	mov    ds:0x3de6ec5d,eax
  41a5dc:	fsub   st(3),st
  41a5de:	std    
  41a5df:	mov    edx,DWORD PTR [edi+0x7241281c]
  41a5e5:	xchg   DWORD PTR [ebx],edi
  41a5e7:	push   esp
  41a5e8:	call   0x740c:0x9d80004d
  41a5ef:	inc    ebp
  41a5f0:	retf   0x3eba
  41a5f3:	inc    ecx
  41a5f4:	jb     0x41a609
  41a5f6:	call   0x4e68b8
  41a5fb:	or     esp,DWORD PTR [edx]
  41a5fd:	xor    DWORD PTR [edi],ebx
  41a5ff:	push   esi
  41a600:	dec    edx
  41a601:	in     eax,dx
  41a602:	test   edi,edi
  41a604:	sub    eax,0x3200681c
  41a609:	fstp   TBYTE PTR [eax+ebp*2+0x4142a14b]
  41a610:	dec    ebx
  41a611:	adc    ah,bl
  41a613:	je     0x41a668
  41a615:	mov    edx,0x971ca1b4
  41a61a:	jmp    0x4aea:0xe19f96fd
  41a621:	xor    BYTE PTR [ebp+edi*1+0x45ddf54b],al
	...
  41a650:	push   DWORD PTR [edx+0x7ef4b8c2]
  41a656:	loope  0x41a656
  41a658:	stc    
  41a659:	pop    ss
  41a65a:	sbb    eax,DWORD PTR [edi]
  41a65c:	pop    esi
  41a65d:	dec    ebx
  41a65e:	loop   0x41a6d4
  41a660:	fist   WORD PTR [esi+0x58]
  41a663:	or     bl,ah
  41a665:	sti    
  41a666:	pop    esi
  41a667:	dec    esp
  41a669:	push   es
  41a66a:	inc    edx
  41a66b:	leave  
  41a66c:	mov    ebp,esp
  41a66e:	add    dl,BYTE PTR [ebp-0x30]
  41a671:	inc    ebp
  41a672:	xchg   bl,al
  41a674:	mov    bh,0x97
  41a676:	cmp    DWORD PTR [edx+0x4b],ebp
  41a679:	int3   
  41a67a:	sub    eax,0xeada1eff
  41a67f:	stc    
  41a680:	and    DWORD PTR [edi],edx
  41a682:	loop   0x41a60c
  41a684:	push   cs
  41a685:	push   ds
  41a686:	mov    ?,WORD PTR [ebx+edi*8]
  41a689:	or     DWORD PTR [ebp+0x0],eax
  41a68c:	shr    ah,1
  41a68e:	sub    BYTE PTR ss:[edx],cl
  41a691:	loop   0x41a615
  41a693:	ds dec ebx
  41a695:	jbe    0x41a6de
  41a697:	push   0x43a16a
  41a69c:	cld    
  41a69d:	stc    
  41a69e:	and    DWORD PTR [eax+0x4b],edx
  41a6a1:	loop   0x41a6b0
  41a6a3:	rcr    bh,0xbe
  41a6a6:	cmp    al,ch
  41a6a8:	jmp    0x9c40891b
  41a6ad:	or     DWORD PTR [ecx+0x4],edx
  41a6b0:	dec    ebx
  41a6b1:	out    0x9e,al
  41a6b3:	ins    BYTE PTR es:[edi],dx
	...
  41a6dc:	sbb    BYTE PTR [edx+0x28],cl
  41a6df:	add    al,0x9b
  41a6e1:	(bad)  
  41a6e2:	push   ebx
  41a6e3:	or     al,0x33
  41a6e5:	ds mov esp,ecx
  41a6e8:	sbb    eax,0x145f68e2
  41a6ed:	xlat   BYTE PTR ds:[ebx]
  41a6ee:	rol    DWORD PTR [ebx],0x85
  41a6f1:	mov    esi,ebp
  41a6f3:	add    edi,DWORD PTR [esi-0x2d]
  41a6f6:	cs loopne 0x41a732
  41a6f9:	leave  
  41a6fa:	pop    edi
  41a6fb:	loope  0x41a6f2
  41a6fd:	(bad)  
  41a6fe:	xchg   ebp,eax
  41a6ff:	(bad)  
  41a700:	sahf   
  41a701:	adc    esi,esp
  41a703:	push   esi
  41a704:	mov    al,ds:0xdddffbd6
  41a709:	pop    esp
  41a70a:	icebp  
  41a70b:	jmp    0x41a6fd
  41a70d:	push   ebx
  41a70e:	jbe    0x41a6f1
  41a710:	ins    DWORD PTR es:[edi],dx
  41a711:	aaa    
  41a712:	mov    al,ds:0xbc0948c6
  41a717:	mov    WORD PTR [eax+0x22e0248a],?
  41a71d:	or     ebx,eax
  41a71f:	das    
  41a720:	lods   al,BYTE PTR ds:[esi]
  41a721:	pop    esp
  41a722:	loope  0x41a70f
  41a724:	es push ebx
  41a726:	inc    esi
  41a727:	loope  0x41a6fc
  41a729:	dec    esp
  41a72a:	cmp    eax,0xe9634b6e
  41a72f:	imul   ebx,DWORD PTR [edx-0xcfc57b7],0x8
  41a736:	jmp    0xb123723e
  41a73b:	xor    DWORD PTR [ebp-0x2a],0xffffffe1
  41a73f:	ret    
	...
  41a768:	clc    
  41a769:	cmc    
  41a76a:	mov    eax,0x58f75eb
  41a76f:	loope  0x41a77d
  41a771:	popa   
  41a772:	jmp    0xffd90b7a
  41a777:	and    BYTE PTR [eax+0x16],0x41
  41a77b:	jmp    0xf1b67df8
  41a780:	xor    cl,ch
  41a782:	mov    al,ds:0xcee2bde
  41a787:	push   esp
  41a788:	sub    dl,bh
  41a78a:	(bad)  
  41a78b:	push   esp
  41a78c:	sub    edx,edi
  41a78e:	je     0x41a781
  41a790:	xor    BYTE PTR [esi+0x7a],dl
  41a793:	mov    esi,0xedc1c12b
  41a798:	dec    eax
  41a799:	cmp    al,0x8b
  41a79b:	mov    ebp,0x13fbc9cf
  41a7a0:	inc    edi
  41a7a1:	arpl   WORD PTR ds:0xe8019d9e,bp
  41a7a7:	int    0x8e
  41a7a9:	(bad)  
  41a7aa:	(bad)  
  41a7ab:	pusha  
  41a7ac:	(bad)  
  41a7ad:	aad    0x67
  41a7af:	jmp    0x11ff8dfc
  41a7b4:	and    al,0x48
  41a7b6:	inc    ecx
  41a7b7:	jmp    0x2882b81c
  41a7bc:	dec    edi
  41a7bd:	(bad)  
  41a7be:	je     0x41a7b1
  41a7c0:	mov    al,0xe1
  41a7c2:	mov    al,ds:0x74d6ab5e
  41a7c7:	push   ebp
  41a7c8:	stos   DWORD PTR es:[edi],eax
  41a7c9:	pop    esp
  41a7ca:	or     BYTE PTR [ecx+0x0],al
	...
  41a7f1:	add    BYTE PTR [eax],al
  41a7f3:	add    BYTE PTR ds:0x9146ff53,cl
  41a7f9:	mov    DWORD PTR [ebx],0xeb825de9
  41a7ff:	push   0xffffff84
  41a801:	shr    DWORD PTR [ecx-0x17],1
  41a804:	mul    BYTE PTR [esi]
  41a806:	call   FWORD PTR [eax+edx*2+0x6ba0e8e1]
  41a80d:	(bad)  
  41a80e:	mov    BYTE PTR [esp+ecx*4+0x5be9006d],ch
  41a815:	xchg   ebx,eax
  41a816:	add    BYTE PTR [bp+0x414a],ch
  41a81b:	add    BYTE PTR [edx+0x62414112],bh
  41a821:	call   0x778bb099
  41a826:	lahf   
  41a827:	jmp    DWORD PTR ds:0x5000066
  41a82d:	je     0x41a895
  41a82f:	dec    edi
  41a830:	arpl   WORD PTR [esi+0x0],cx
  41a833:	push   0x414e5b
  41a838:	add    eax,0xa8e80833
  41a83d:	scas   al,BYTE PTR es:[edi]
  41a83e:	std    
  41a83f:	call   ebp
  41a841:	xor    bh,ah
  41a843:	(bad)  
  41a844:	aas    
  41a845:	add    eax,0xb42bf3e8
  41a84a:	std    
  41a84b:	leave  
  41a84c:	mov    al,ds:0x69550001
  41a851:	fld    DWORD PTR [ecx+0x5380d6c4]
  41a857:	adc    BYTE PTR [eax],al
	...
  41a87d:	add    BYTE PTR [eax],al
  41a87f:	add    BYTE PTR [ecx-0x29],bl
  41a882:	push   0xfc426700
  41a887:	push   eax
  41a888:	push   ebp
  41a889:	xor    cl,BYTE PTR [eax]
  41a88b:	push   0xffffffb2
  41a88d:	mov    bl,0x73
  41a88f:	adc    BYTE PTR ds:0x62851c17,ah
  41a895:	xor    ah,BYTE PTR [edi]
  41a897:	mov    ebp,edi
  41a899:	mov    ah,0x8e
  41a89b:	push   0xffffffb2
  41a89d:	bound  eax,QWORD PTR [eax]
  41a89f:	push   0x805
  41a8a4:	push   ebp
  41a8a5:	xor    cl,BYTE PTR [edx+ebp*2]
  41a8a8:	push   ebp
  41a8a9:	mov    ah,0x70
  41a8ab:	add    al,0x88
  41a8ad:	or     BYTE PTR [edx+0x0],ch
  41a8b0:	pop    edx
  41a8b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8b2:	dec    ebx
  41a8b3:	add    BYTE PTR [edx+0x58],ah
  41a8b6:	(bad)  
  41a8b7:	jne    0x41a904
  41a8b9:	(bad)  
  41a8ba:	jmp    0x41a91b
  41a8bc:	adc    eax,0x89c902e2
  41a8c1:	fiadd  WORD PTR [edx]
  41a8c3:	push   ebp
  41a8c4:	rol    BYTE PTR [esi],0x83
  41a8c7:	ret    
  41a8c8:	dec    edi
  41a8c9:	cmp    DWORD PTR [si],edx
  41a8cc:	shr    BYTE PTR [edi+0x24ce0068],1
  41a8d2:	loopne 0x41a923
  41a8d4:	xor    al,0x3d
  41a8d6:	adc    bh,bh
  41a8d8:	mov    dh,0xea
  41a8da:	push   0xf83d2400
  41a8df:	(bad)  
  41a8e0:	jns    0x41a8dc
  41a8e2:	mov    BYTE PTR [edi+0x0],bh
	...
  41a90c:	sahf   
  41a90d:	or     ecx,DWORD PTR [ebx+0x69320f54]
  41a913:	add    BYTE PTR [ecx-0x1e],dh
  41a916:	push   0xffffffff
  41a918:	dec    eax
  41a919:	loop   0x41a91d
  41a91b:	(bad)  
  41a91c:	jle    0x41a8f0
  41a91e:	push   0x7efecff
  41a923:	push   0x4b
  41a925:	or     BYTE PTR [eax+ebp*8],al
  41a928:	sbb    BYTE PTR ds:0x52bb0004,0x58
  41a92f:	cld    
  41a930:	jecxz  0x41a8e1
  41a932:	dec    esp
  41a933:	add    BYTE PTR [ebx-0x57],cl
  41a936:	ror    BYTE PTR [edi],0x4b
  41a939:	xchg   ebp,eax
  41a93a:	mov    ebx,ebp
  41a93c:	mov    ah,0xbc
  41a93e:	or     bh,bh
  41a940:	ss (bad) 
  41a943:	push   edx
  41a944:	and    eax,DWORD PTR [ebx-0x22]
  41a947:	(bad)  
  41a948:	push   ss
  41a949:	fsubp  st(2),st
  41a94b:	xchg   edi,eax
  41a94c:	push   es
  41a94d:	loop   0x41a951
  41a94f:	shr    DWORD PTR [ebx+0x1b01c35e],1
  41a955:	and    ebx,DWORD PTR [eax+0xc]
  41a958:	jl     0x41a962
  41a95a:	pushf  
  41a95b:	sti    
  41a95c:	ins    BYTE PTR es:[edi],dx
  41a95d:	pop    eax
  41a95e:	mov    eax,ds:0x9bd36dde
  41a963:	mul    DWORD PTR [ebp+0x5d]
  41a966:	stc    
  41a967:	(bad)  
  41a969:	lock adc BYTE PTR [ecx-0x2d],ah
  41a96d:	sar    ebp,cl
  41a96f:	retf   
	...
  41a998:	mov    bh,ah
  41a99a:	call   0xee2779d7
  41a99f:	push   edi
  41a9a0:	push   ebx
  41a9a1:	rcr    BYTE PTR [ebx-0x4],cl
  41a9a4:	sub    al,0xf0
  41a9a6:	pusha  
  41a9a7:	(bad)  ds:0x33105bd3
  41a9ad:	test   DWORD PTR [esp+eax*1],ebx
  41a9b0:	dec    ebx
  41a9b1:	dec    ecx
  41a9b2:	sbb    ebp,ebx
  41a9b4:	lahf   
  41a9b5:	add    eax,0xe13357be
  41a9ba:	icebp  
  41a9bb:	pop    ebx
  41a9bc:	add    al,0xd3
  41a9be:	lods   eax,DWORD PTR ds:[esi]
  41a9bf:	push   edi
  41a9c0:	push   edi
  41a9c1:	rcr    BYTE PTR [ebx],cl
  41a9c3:	hlt    
  41a9c4:	cmc    
  41a9c5:	pop    esp
  41a9c6:	add    esp,ebp
  41a9c8:	pop    ds
  41a9c9:	push   ecx
  41a9ca:	xchg   esi,eax
  41a9cb:	fst    QWORD PTR [ebx]
  41a9cd:	enter  0x3f4,0x76
  41a9d1:	jle    0x41a967
  41a9d3:	or     DWORD PTR [eax],0xffffffbe
  41a9d6:	jns    0x41a9b5
  41a9d8:	int    0xd2
  41a9da:	sti    
  41a9db:	sti    
  41a9dc:	xlat   BYTE PTR ds:[ebx]
  41a9dd:	mov    eax,gs
  41a9df:	fistp  QWORD PTR [ebp+0x3fdcb8d2]
  41a9e5:	add    DWORD PTR [ecx-0x42],edx
  41a9e8:	scas   al,BYTE PTR es:[edi]
  41a9e9:	rcl    BYTE PTR [ebp-0x23],cl
  41a9ec:	pop    ds
  41a9ed:	icebp  
  41a9ee:	pop    ebx
  41a9ef:	xchg   DWORD PTR [edx+ebx*8-0x2dfb22bb],ebx
  41a9f6:	mov    bl,0xf
  41a9f8:	mov    WORD PTR [eax+eax*1-0x1f],ds
	...
  41aa24:	jo     0x41aa1c
  41aa26:	(bad)  
  41aa27:	cs sahf 
  41aa29:	pusha  
  41aa2a:	add    BYTE PTR [ebx-0x15009eb8],dl
  41aa30:	dec    eax
  41aa31:	or     DWORD PTR [ebp-0x122b094],ecx
  41aa37:	push   cs
  41aa38:	pop    ss
  41aa39:	pop    edi
  41aa3a:	inc    DWORD PTR [esi]
  41aa3c:	cld    
  41aa3d:	clc    
  41aa3e:	imul   ebp,ecx,0x5be808e2
  41aa44:	fwait
  41aa45:	or     DWORD PTR [eax],eax
  41aa47:	(bad)
  41aa4c:	pop    ss
  41aa4d:	add    al,BYTE PTR [eax]
  41aa4f:	jmp    0xddc6749c
  41aa54:	sti    
  41aa55:	sar    dh,cl
  41aa57:	jmp    0x41aaa1
  41aa59:	or     DWORD PTR [eax],eax
  41aa5b:	scas   al,BYTE PTR es:[edi]
  41aa5c:	int    0xd9
  41aa5e:	repnz mov esi,0xe9fed1ef
  41aa64:	dec    eax
  41aa65:	retf   0xad84
  41aa68:	sbb    edx,ebx
  41aa6a:	(bad)  
  41aa6b:	jmp    0x7241b3b8
  41aa70:	xor    eax,0x72fb8af1
  41aa75:	or     DWORD PTR [ebp-0x129079c],ecx
  41aa7b:	xchg   BYTE PTR [eax],bl
  41aa7d:	test   BYTE PTR [ebp+ecx*4+0x19fed2fb],al
  41aa84:	aam    0x8c
  41aa86:	out    0x7a,eax
	...
  41aab0:	lahf   
  41aab1:	ror    BYTE PTR [edi+0x66],cl
  41aab4:	sbb    eax,0x3cd4fef9
  41aab9:	shl    BYTE PTR [ecx+eiz*8+0x32],cl
  41aabd:	or     edi,edi
  41aabf:	aam    0xa0
  41aac1:	rcl    BYTE PTR [ecx+0x0],cl
  41aac4:	out    0x88,al
  41aac6:	mov    ebx,0xfdb551e8
  41aacb:	add    BYTE PTR [ebp-0x77],ch
  41aace:	sbb    al,BYTE PTR [ecx]
  41aad0:	jb     0x41aad7
  41aad2:	cmp    DWORD PTR [ebp-0x246a2],0x62
  41aad9:	add    al,0x84
  41aadb:	(bad)  
  41aadd:	add    eax,0x99e7c700
  41aae2:	icebp  
  41aae3:	dec    DWORD PTR [ebp+0x6]
  41aae6:	add    bh,ch
  41aae8:	or     al,0x5e
  41aaea:	push   0x8d0cf341
  41aaef:	test   DWORD PTR [edx],esi
  41aaf1:	mov    cl,0xfd
  41aaf3:	push   DWORD PTR [edx-0x23]
  41aaf6:	adc    cl,BYTE PTR [edx+eiz*1+0xd]
  41aafa:	test   eax,eax
  41aafc:	xchg   BYTE PTR [edi-0x39],al
  41aaff:	test   esi,edx
  41ab01:	mov    eax,0xd23fffd
  41ab06:	out    dx,eax
  41ab07:	mov    esi,0x41412f7a
  41ab0c:	repnz add DWORD PTR [ebx-0x24b5200],0x50
	...
  41ab3b:	add    dl,bl
  41ab3d:	mov    edx,0x89e20049
  41ab42:	mov    esi,0x83cc1174
  41ab47:	aam    0xc1
  41ab49:	mov    ah,0xfd
  41ab4b:	add    ah,dl
  41ab4d:	jecxz  0x41ab0b
  41ab4f:	push   0x414670
  41ab54:	das    
  41ab55:	mov    bh,dh
  41ab57:	sti    
  41ab58:	sub    eax,0x74e84eb4
  41ab5d:	inc    eax
  41ab5e:	add    BYTE PTR [eax],al
  41ab60:	daa    
  41ab61:	lds    ecx,FWORD PTR ds:0x3834b85
  41ab67:	add    BYTE PTR [ebx-0x36],cl
  41ab6a:	mov    al,ds:0x87e20a40
  41ab6f:	test   BYTE PTR [ebx+0x16],cl
  41ab72:	(bad)  
  41ab74:	sbb    ecx,DWORD PTR [edx-0x4d]
  41ab77:	dec    ebx
  41ab78:	dec    ebx
  41ab79:	loop   0x41ab88
  41ab7b:	sar    bh,0x70
  41ab7e:	test   DWORD PTR [edx+edi*2],edi
  41ab81:	mov    eax,ds:0xe74b0043
  41ab86:	jle    0x41ab08
  41ab88:	dec    ebx
  41ab89:	loop   0x41ab8d
  41ab8b:	call   FWORD PTR [esi+0x4cfed6fa]
  41ab91:	pop    edi
  41ab92:	sbb    edi,0xfed9d738
  41ab98:	test   ch,0xd5
  41ab9b:	(bad)  
  41ab9c:	xor    al,0x57
  41ab9e:	and    bl,0x0
	...
  41abc5:	add    BYTE PTR [eax],al
  41abc7:	add    BYTE PTR [eax],bh
  41abc9:	scas   eax,DWORD PTR es:[edi]
  41abca:	(bad)  [esi+ecx*8+0x1cfed599]
  41abd1:	adc    ch,BYTE PTR [esi+0x1]
  41abd4:	mov    eax,ds:0xa1006ce2
  41abd9:	loop   0x41ac47
  41abdb:	add    dh,dl
  41abdd:	pop    esp
  41abde:	jecxz  0x41abd2
  41abe0:	cld    
  41abe1:	sahf   
  41abe2:	xor    bh,bh
  41abe4:	pop    esi
  41abe5:	jno    0x41ac2a
  41abe7:	inc    ecx
  41abe8:	dec    ebx
  41abe9:	fcmovnb st,st(2)
  41abeb:	jae    0x41ab79
  41abed:	ja     0x41ac3e
  41abef:	adc    al,0xdc
  41abf1:	xor    al,0xbb
  41abf3:	repnz aam 0x86
  41abf6:	fnstenv [edi+ebp*8-0x3b0125ae]
  41abfd:	int3   
  41abfe:	repnz (bad) 
  41ac00:	div    BYTE PTR [ebp-0x2b]
  41ac03:	(bad)  
  41ac04:	mov    ah,0x8
  41ac06:	push   ecx
  41ac07:	fisubr WORD PTR [edi-0x2025a231]
  41ac0d:	lods   al,BYTE PTR ds:[esi]
  41ac0e:	pop    ecx
  41ac0f:	ficomp DWORD PTR [ebp+0x4b4d2ee0]
  41ac15:	or     DWORD PTR [edx-0x8],edx
  41ac18:	lea    edx,[ebp-0x2b]
  41ac1b:	fidivr DWORD PTR [edi+0x7dda39e0]
  41ac21:	iret   
  41ac22:	jae    0x41ac0b
  41ac24:	jns    0x41abf5
  41ac26:	and    eax,0x1df8f7da
  41ac2b:	nop
	...
  41ac54:	js     0x41ac31
  41ac56:	adc    eax,0xbb964da
  41ac5b:	ficom  DWORD PTR [ebp-0x31]
  41ac5e:	cmp    esp,edi
  41ac60:	pop    ecx
  41ac61:	iret   
  41ac62:	std    
  41ac63:	jmp    0xcc12:0x3e94318
  41ac6a:	aam    0x3
  41ac6c:	sahf   
  41ac6d:	adc    ah,0x85
  41ac70:	or     BYTE PTR [edx-0xa8072cb],dl
  41ac76:	popa   
  41ac77:	test   bh,0x44
  41ac7a:	xchg   ecx,eax
  41ac7b:	xor    al,0xa1
  41ac7d:	or     esi,eax
  41ac7f:	dec    edi
  41ac80:	aas    
  41ac81:	into   
  41ac82:	xor    ecx,DWORD PTR [ecx+esi*2]
  41ac85:	or     DWORD PTR [esi+0x1ace574f],esi
  41ac8b:	xor    dh,cl
  41ac8d:	leave  
  41ac8e:	sbb    esi,DWORD PTR [eax]
  41ac90:	add    al,0x45
  41ac92:	pop    ebp
  41ac93:	add    al,0x4b
  41ac95:	or     ecx,ebp
  41ac97:	mov    WORD PTR [edi-0x6f],?
  41ac9a:	popa   
  41ac9b:	test   bh,0x44
  41ac9e:	inc    ebp
  41ac9f:	xor    al,0xbe
  41aca1:	inc    esp
  41aca2:	test   eax,0xfff93134
  41aca7:	jne    0x41acb5
  41aca9:	xchg   ecx,eax
  41acaa:	(bad)  
  41acab:	sbb    eax,DWORD PTR [ebx-0x76]
  41acae:	jl     0x41ac55
  41acb0:	inc    edi
  41acb1:	push   ebp
  41acb2:	daa    
  41acb3:	ins    BYTE PTR es:[edi],dx
  41acb4:	cld    
  41acb5:	enter  0xdcfe,0x0
	...
  41acdd:	add    BYTE PTR [eax],al
  41acdf:	add    BYTE PTR [edi+ecx*8+0x1773f974],ch
  41ace6:	(bad)  
  41ace7:	mov    esp,0xf174ce44
  41acec:	jo     0x41aca8
  41acee:	cld    
  41acef:	mov    ss:0xec4136cf,al
  41acf5:	inc    ecx
  41acf6:	add    cl,ch
  41acf8:	mov    edi,0x8d0c1e03
  41acfe:	je     0x41ad37
  41ad00:	outs   dx,BYTE PTR ds:[esi]
  41ad01:	xchg   edi,eax
  41ad02:	mov    dh,BYTE PTR [eax+esi*4-0x3f9ee7d]
  41ad09:	nop
  41ad0a:	(bad)  
  41ad0b:	fwait
  41ad0c:	push   eax
  41ad0d:	cs leave 
  41ad0f:	sub    esi,DWORD PTR [edi]
  41ad11:	into   
  41ad12:	push   ebx
  41ad13:	bound  esp,QWORD PTR [ebx]
  41ad15:	mov    ebx,eax
  41ad17:	loope  0x41ad2b
  41ad19:	iret   
  41ad1a:	(bad)  
  41ad1b:	ss (bad) 
  41ad1d:	xor    al,0x10
  41ad1f:	bound  edx,QWORD PTR [esi]
  41ad21:	jge    0x41aca7
  41ad23:	shl    edx,1
  41ad25:	into   
  41ad26:	(bad)  
  41ad27:	sbb    DWORD PTR [ebp+0x5734ff09],ebx
  41ad2d:	arpl   WORD PTR [eax],ax
  41ad2f:	mov    dh,0x8d
  41ad31:	stc    
  41ad32:	(bad)  
  41ad33:	sbb    edx,DWORD PTR [ebx-0x7c]
  41ad36:	mov    edi,0x84c66a1c
  41ad3b:	popf   
  41ad3c:	add    cl,bh
  41ad3e:	(bad)  
  41ad3f:	jmp    0x6241b68c
	...
  41ad6c:	gs (bad) 
  41ad6e:	std    
  41ad6f:	add    ch,al
  41ad71:	mov    al,0x89
  41ad73:	adc    dh,BYTE PTR [edi]
  41ad75:	dec    edi
  41ad76:	sti    
  41ad77:	(bad)  
  41ad78:	xor    eax,0x2f8d4eb1
  41ad7d:	or     bh,bh
  41ad7f:	jmp    DWORD PTR ds:0x5106a1a
  41ad85:	jg     0x41ad7d
  41ad87:	(bad)  
  41ad88:	cmc    
  41ad89:	mov    al,0xfd
  41ad8b:	push   edx
  41ad8c:	jbe    0x41ad12
  41ad8e:	mov    ebx,0xfdb104fc
  41ad93:	add    BYTE PTR [esi+0x72bd8d23],bh
  41ad99:	mov    al,0xfd
  41ad9b:	jmp    DWORD PTR ds:0xcfff103f
  41ada1:	add    eax,0x1bfff57
  41ada6:	call   0xfdf2e2be
  41adab:	sub    DWORD PTR ds:0x468dfdda,0xffffffb0
  41adb2:	std    
  41adb3:	(bad)  
  41adb4:	mov    edi,0xa9aae9ea
  41adb9:	pop    ebx
  41adba:	idiv   esi
  41adbc:	and    eax,0x251289b5
  41adc1:	jnp    0x41adb9
  41adc3:	inc    BYTE PTR ds:0x2a52fdb5
  41adc9:	adc    al,0xc9
  41adcb:	ret    0x8f6
  41adce:	push   ebp
  41adcf:	mov    eax,DWORD PTR [eax]
	...
  41adf5:	add    BYTE PTR [eax],al
  41adf7:	add    dh,dh
  41adf9:	xchg   dl,al
  41adfb:	clc    
  41adfc:	les    esi,FWORD PTR [ebp+edi*8+0xc1a6957]
  41ae03:	mov    edx,DWORD PTR [eax]
  41ae05:	add    BYTE PTR [ebx-0x24b5b08],0x50
  41ae0c:	cmp    BYTE PTR ds:0x734b006a,al
  41ae12:	push   eax
  41ae13:	or     al,0xd4
  41ae15:	adc    BYTE PTR [eax*4-0x38ca31f5],bl
  41ae1c:	push   cs
  41ae1d:	dec    esi
  41ae1e:	add    al,0x0
  41ae20:	dec    ebx
  41ae21:	loop   0x41ae95
  41ae23:	mov    bl,dh
  41ae25:	pop    edx
  41ae26:	(bad)  
  41ae27:	(bad)  
  41ae28:	lods   al,BYTE PTR ds:[esi]
  41ae29:	push   edi
  41ae2a:	repnz mov WORD PTR [esi],cs
  41ae2d:	cs xor al,0x8d
  41ae30:	(bad)  
  41ae31:	ss (bad) 
  41ae33:	(bad)  
  41ae34:	xchg   esp,eax
  41ae35:	xchg   edx,eax
  41ae36:	push   0xdc4d8c10
  41ae3b:	std    
  41ae3c:	test   BYTE PTR [ebx],cl
  41ae3e:	xlat   BYTE PTR ds:[ebx]
  41ae3f:	push   ecx
  41ae40:	dec    edi
  41ae41:	xor    al,BYTE PTR [ebx+0x72e2777c]
  41ae47:	jae    0x41ae74
  41ae49:	push   ebp
  41ae4a:	cdq    
  41ae4b:	sti    
  41ae4c:	gs jmp 0x41ae25
  41ae4f:	(bad)  
  41ae50:	pop    esp
  41ae51:	ins    DWORD PTR es:[edi],dx
  41ae52:	push   es
  41ae53:	(bad)  
  41ae54:	fsubp  st(1),st
  41ae56:	sub    eax,0xd70343e8
  41ae5b:	inc    BYTE PTR [eax]
	...
  41ae81:	add    BYTE PTR [eax],al
  41ae83:	add    al,cl
  41ae85:	and    dh,ah
  41ae87:	(bad)  
  41ae88:	cmp    al,0xa5
  41ae8a:	(bad)  
  41ae8b:	(bad)  
  41ae8c:	mov    esi,0xf9ea7409
  41ae91:	push   esi
  41ae92:	jo     0x41ae8b
  41ae94:	and    eax,0x398ad5ab
  41ae99:	mov    bl,0x8f
  41ae9b:	not    DWORD PTR ds:0x79fed5bb
  41aea1:	fidiv  DWORD PTR ds:0x2da09c9
  41aea7:	push   ebp
  41aea8:	rol    ch,1
  41aeaa:	add    ebx,0x74d6f3bb
  41aeb0:	aas    
  41aeb1:	or     DWORD PTR [ecx-0x16f66c34],edx
  41aeb7:	or     cl,BYTE PTR [ebx]
  41aeb9:	push   esi
  41aeba:	in     al,dx
  41aebb:	xor    eax,0x3dcc702
  41aec0:	cli    
  41aec1:	call   0x808c722f
  41aec6:	cwde   
  41aec7:	mov    BYTE PTR [edi],al
  41aec9:	fstp   QWORD PTR [eax]
  41aecb:	xor    dh,BYTE PTR [ebp+edx*2+0x7b28ebdd]
  41aed2:	gs (bad) 
  41aed4:	jno    0x41ae98
  41aed6:	outs   dx,DWORD PTR ds:[esi]
  41aed7:	dec    eax
  41aed8:	ja     0x41aeb9
  41aeda:	loop   0x41aee9
  41aedc:	inc    esp
  41aedd:	xchg   ebx,eax
  41aede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aedf:	sub    al,0x9f
  41aee1:	or     DWORD PTR [edi+ebp*4-0x10c077f5],ebp
	...
  41af10:	cli    
  41af11:	fld    DWORD PTR [ecx]
  41af13:	into   
  41af14:	ret    
  41af15:	push   ebp
  41af16:	sbb    edx,ebp
  41af18:	and    al,0x13
  41af1a:	test   BYTE PTR [ebp+0x330d1b08],0xf3
  41af21:	sbb    eax,0x7e4b44ab
  41af26:	mov    ds:0x14e0fcbb,eax
  41af2b:	dec    esp
  41af2c:	dec    ebx
  41af2d:	or     DWORD PTR [edx-0x41],ebp
  41af30:	push   eax
  41af31:	jl     0x41aede
  41af33:	mov    ebx,0xb373ca84
  41af38:	and    al,0x82
  41af3a:	popa   
  41af3b:	aad    0x25
  41af3d:	and    DWORD PTR [ebx],0xd68686b4
  41af43:	lock call 0xe8ca:0xf75f67b6
  41af4b:	add    ecx,DWORD PTR [ebx-0x36]
  41af4e:	xor    esi,DWORD PTR [eax+0x2b001c64]
  41af54:	mov    BYTE PTR [ecx],cl
  41af56:	lea    esp,[edi+ebp*4]
  41af59:	cmp    ch,al
  41af5b:	gs nop
  41af5d:	or     DWORD PTR [eax],eax
  41af5f:	push   0xb
  41af61:	dec    DWORD PTR [esp+ebp*1+0x14ff3a97]
  41af68:	xchg   edi,eax
  41af69:	loop   0x41afc2
  41af6b:	add    bl,BYTE PTR [esi-0x8db7735]
  41af71:	jge    0x41afb7
  41af73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41af9c:	jg     0x41af68
  41af9e:	je     0x41af39
  41afa0:	pop    ds
  41afa1:	pop    ss
  41afa2:	inc    edx
  41afa3:	test   al,0x48
  41afa5:	retf   0x1634
  41afa8:	jo     0x41aff2
  41afaa:	add    BYTE PTR [ecx+0x2a],al
  41afad:	dec    edi
  41afae:	dec    DWORD PTR [esi+0x42]
  41afb1:	leave  
  41afb2:	push   cs
  41afb3:	ins    DWORD PTR es:[edi],dx
  41afb4:	test   cl,0xfe
  41afb7:	jmp    0x6b09f58d
  41afbc:	sbb    al,0xbd
  41afbe:	(bad)  
  41afbf:	fucomp st(4)
  41afc1:	xchg   edi,edi
  41afc3:	call   0xedb67a10
  41afc8:	jo     0x41afd0
  41afca:	dec    ecx
  41afcb:	jmp    0x6b216818
  41afd0:	xchg   DWORD PTR [eax],ecx
  41afd2:	mov    DWORD PTR [eax+ebx*8-0x38128b36],ebp
  41afd9:	inc    esp
  41afda:	mov    ah,0xf6
  41afdc:	test   DWORD PTR [ebp-0x34f75b72],edi
  41afe2:	je     0x41af95
  41afe4:	iret   
  41afe5:	inc    esp
  41afe6:	les    esp,FWORD PTR [esi-0x170072a3]
  41afec:	dec    eax
  41afed:	or     DWORD PTR [ebx+0x4121100c],eax
  41aff3:	add    dl,dh
  41aff5:	add    eax,0xb6f5074
  41affa:	mov    eax,0x6a068850
	...
  41b027:	add    BYTE PTR [eax-0x7dba72fb],cl
  41b02d:	push   ss
  41b02e:	push   0x0
  41b030:	outs   dx,DWORD PTR ds:[esi]
  41b031:	or     eax,eax
  41b033:	push   eax
  41b034:	mov    ebp,0x232917da
  41b039:	add    eax,0xf7c6c00b
  41b03e:	cmp    BYTE PTR [ebp+0x7e],0x6
  41b042:	je     0x41b070
  41b044:	and    DWORD PTR [ebx],esi
  41b046:	adc    BYTE PTR [eax],al
  41b048:	mov    dh,0xfd
  41b04a:	mov    dl,BYTE PTR [ebp-0x5e]
  41b04d:	sub    eax,edi
  41b04f:	add    bh,BYTE PTR ds:0xaa75ff05
  41b055:	mov    ah,0x73
  41b057:	mov    eax,0xffbc3afd
  41b05c:	mov    DWORD PTR [ecx],0xe4720368
  41b062:	mov    esp,0xfdb006e8
  41b067:	call   FWORD PTR ds:0x18e8bc3b
  41b06d:	or     eax,0x3b3d0000
  41b072:	enter  0xee8,0x3c
  41b076:	(bad)  
  41b077:	(bad)  
  41b078:	cmp    eax,0x96e8d03b
  41b07d:	push   esi
  41b07e:	(bad)  
  41b07f:	(bad)  
  41b080:	(bad)  
  41b082:	ror    BYTE PTR [edx+eiz*1],0xf8
  41b086:	mov    ch,ah
  41b088:	mov    eax,ds:0x8dc688
	...
  41b0b1:	add    BYTE PTR [eax],al
  41b0b3:	add    BYTE PTR [edi-0x27],dh
  41b0b6:	dec    esi
  41b0b7:	push   0x414f1b
  41b0bc:	dec    ebx
  41b0bd:	dec    esp
  41b0be:	or     DWORD PTR [edx+0x4b],ebp
  41b0c1:	dec    edx
  41b0c2:	int    0x40
  41b0c4:	mov    dh,BYTE PTR [edx-0x4d6c4226]
  41b0ca:	add    al,BYTE PTR [ebp-0x40854ff5]
  41b0d0:	dec    ebx
  41b0d1:	mov    dl,0x2
  41b0d3:	mov    edi,DWORD PTR [esi+0x6e]
  41b0d6:	jle    0x41b0e9
  41b0d8:	into   
  41b0d9:	in     eax,dx
  41b0da:	retf   
  41b0db:	dec    edi
  41b0dc:	aam    0x25
  41b0de:	sar    dh,1
  41b0e0:	jns    0x41b098
  41b0e2:	xchg   DWORD PTR [edi-0x8dc5ac],edi
  41b0e8:	mov    esp,0xb37c85b2
  41b0ed:	mov    dl,0x1
  41b0ef:	test   bh,dl
  41b0f1:	mov    dl,0x2
  41b0f3:	add    BYTE PTR [ebp+esi*2-0x4d63004a],cl
  41b0fa:	add    al,bh
  41b0fc:	push   cs
  41b0fd:	cli    
  41b0fe:	add    eax,DWORD PTR [eax]
  41b100:	dec    ebx
  41b101:	mov    dl,0xc9
  41b103:	inc    esp
  41b104:	fwait
  41b105:	sbb    al,BYTE PTR [eax+eax*1]
  41b108:	dec    ebx
  41b109:	out    dx,eax
  41b10a:	dec    eax
  41b10b:	int3   
  41b10c:	dec    ebx
  41b10d:	mov    dl,0x2
  41b10f:	add    al,al
  41b111:	popf   
  41b112:	retf   0x398a
  41b115:	cmp    eax,0xcc49
	...
  41b13e:	add    BYTE PTR [eax],al
  41b140:	sti    
  41b141:	xor    al,0x49
  41b143:	sar    bl,1
  41b145:	mov    eax,DWORD PTR [ebx]
  41b147:	call   esi
  41b149:	sbb    ebx,edx
  41b14b:	push   ecx
  41b14c:	push   edi
  41b14d:	mov    ebx,0x339774c2
  41b152:	push   ecx
  41b153:	int3   
  41b154:	dec    edx
  41b155:	inc    ebp
  41b156:	inc    ecx
  41b157:	sub    DWORD PTR [esi-0x728bfbe2],0x9
  41b15e:	push   ecx
  41b15f:	sbb    eax,0xd2e94a89
  41b164:	lahf   
  41b165:	ffree  st(0)
  41b167:	enter  0x984,0xe9
  41b16b:	inc    ah
  41b16d:	cmp    al,0xf3
  41b16f:	imul   eax,DWORD PTR [ecx+ecx*1],0x4dc203e9
  41b176:	mov    eax,ds:0x23d045de
  41b17b:	mov    esp,0x3e8c7e4
  41b180:	fdivr  QWORD PTR ds:0xdd5fd2b1
  41b186:	xchg   ebp,eax
  41b187:	pop    eax
  41b188:	inc    ebx
  41b189:	mov    cl,0x86
  41b18b:	rol    ch,1
  41b18d:	mov    DWORD PTR [ebp-0x294f68a8],0x6a094b3b
  41b197:	push   eax
  41b198:	xchg   ebx,eax
  41b199:	or     ch,dh
  41b19b:	sti    
  41b19c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b19d:	cmp    eax,0x5144db41
  41b1a2:	jmp    0x41b1aa
	...
  41b1cb:	add    BYTE PTR [eax-0x6cc79e6c],ah
  41b1d1:	xchg   ebx,eax
  41b1d2:	cli    
  41b1d3:	sar    bh,cl
  41b1d5:	rol    BYTE PTR [ebp+0x35],0x53
  41b1d9:	xchg   esp,eax
  41b1da:	xchg   ebx,eax
  41b1db:	iret   
  41b1dc:	rcr    DWORD PTR [edx],0x36
  41b1df:	pop    eax
  41b1e0:	outs   dx,DWORD PTR ds:[esi]
  41b1e1:	(bad)  
  41b1e2:	call   0xf603:0xecca93fb
  41b1e9:	xchg   ebx,eax
  41b1ea:	or     al,0x86
  41b1ec:	mov    BYTE PTR [eax+0x360f86be],ch
  41b1f2:	stos   DWORD PTR es:[edi],eax
  41b1f3:	inc    esp
  41b1f4:	dec    ebx
  41b1f5:	or     DWORD PTR [ecx+esi*8+0x5],edi
  41b1f9:	or     eax,0x98a458c
  41b1fe:	add    al,ch
  41b200:	dec    eax
  41b201:	or     DWORD PTR [eax],eax
  41b203:	das    
  41b204:	jg     0x41b251
  41b206:	inc    ecx
  41b207:	jmp    0xa8a7c20b
  41b20c:	popa   
  41b20d:	or     eax,DWORD PTR [ebx-0x7cd0ba51]
  41b213:	cmovg  edi,DWORD PTR [ebx+esi*8]
  41b217:	push   0x4c
  41b219:	jo     0x41b248
  41b21b:	sub    BYTE PTR [edi+0x9],cl
  41b21e:	(bad)  
  41b220:	inc    dh
  41b222:	(bad)  
  41b223:	jmp    0xd7e6b7f7
  41b228:	mov    DWORD PTR [ecx],ecx
  41b22a:	add    dh,ch
  41b22c:	int3   
  41b22d:	mov    ah,0xff
  41b22f:	call   0x41b234
	...
  41b258:	dec    eax
  41b259:	mov    bh,BYTE PTR [eax+esi*8]
  41b25c:	popa   
  41b25d:	dec    eax
  41b25e:	add    cl,ch
  41b260:	dec    ebx
  41b261:	(bad)  
  41b262:	loopne 0x41b24d
  41b264:	dec    eax
  41b265:	or     edi,eax
  41b267:	sub    al,0x9b
  41b269:	(bad)  
  41b26a:	(bad)  
  41b26b:	jmp    0x618680b8
  41b270:	inc    edi
  41b271:	or     DWORD PTR [eax],eax
  41b273:	jmp    0xba3dff8d
  41b278:	or     eax,0x26b9f84d
  41b27d:	or     DWORD PTR [eax-0x7e],ebp
  41b280:	add    eax,0x7c3e0048
  41b285:	ins    DWORD PTR es:[edi],dx
  41b286:	sub    eax,0xc01248a8
  41b28b:	fmulp  st(4),st
  41b28d:	jl     0x41b28e
  41b28f:	call   0x21be3cdc
  41b294:	dec    edi
  41b295:	push   ss
  41b296:	test   BYTE PTR [ebp+0x47],al
  41b299:	or     DWORD PTR [eax],eax
  41b29b:	push   0xffffff94
  41b29d:	(bad)  
  41b2a0:	xor    eax,0x2200a08e
  41b2a5:	or     cl,BYTE PTR [ebx-0x7f1cc98b]
  41b2ab:	add    BYTE PTR [edx],dh
  41b2ad:	or     dl,BYTE PTR [esi-0x75]
  41b2b0:	cmp    al,0xd8
  41b2b2:	je     0x41b2cc
  41b2b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2b5:	dec    edi
  41b2b6:	lock jmp FWORD PTR [ecx+edi*4-0x73]
  41b2bb:	inc    ebp
	...
  41b2e4:	push   ds
  41b2e5:	bound  esi,QWORD PTR [ecx+0x42]
  41b2e8:	xor    ecx,DWORD PTR ds:0xd2cd7e8
  41b2ee:	add    cl,dl
  41b2f0:	add    cl,BYTE PTR [ebp+0x4f6b02be]
  41b2f6:	loopne 0x41b360
  41b2f8:	inc    ebx
  41b2f9:	dec    edi
  41b2fa:	inc    ecx
  41b2fb:	add    BYTE PTR [ebp+0x4f],ah
  41b2fe:	in     al,0xc7
  41b300:	pop    ds
  41b301:	test   eax,0x9b2fffe
  41b306:	lea    eax,[ebp-0x26]
  41b309:	stc    
  41b30a:	imul   eax,DWORD PTR [ecx],0x6a0d58
  41b310:	daa    
  41b311:	dec    edi
  41b312:	loopne 0x41b364
  41b314:	dec    eax
  41b315:	or     eax,0xfa02458d
  41b31a:	(bad)  
  41b31b:	adc    eax,0x41224b
  41b320:	test   eax,0xf12d72c9
  41b325:	push   esi
  41b326:	in     al,dx
  41b327:	add    BYTE PTR [esi+0x6201b7f0],bh
  41b32d:	or     DWORD PTR [eax],eax
  41b32f:	or     esp,DWORD PTR [edx]
  41b331:	pop    esi
  41b332:	push   ss
  41b333:	call   FWORD PTR [edi+0x3a75fdc1]
  41b339:	fnstenv [ebx-0x14]
  41b33c:	xor    eax,0x4b680860
  41b341:	mov    ah,0x2
  41b343:	out    dx,eax
  41b344:	add    eax,0xf8fb0b
	...
  41b36d:	add    BYTE PTR [eax],al
  41b36f:	add    BYTE PTR [esp+ecx*1],bh
  41b372:	shl    BYTE PTR [edi+eiz*1+0x1b],1
  41b376:	xchg   esi,eax
  41b377:	inc    esp
  41b378:	dec    ebx
  41b379:	mov    dl,0x30
  41b37b:	call   DWORD PTR [esi+0x47c582ba]
  41b381:	das    
  41b382:	push   ecx
  41b383:	clc    
  41b384:	dec    ebx
  41b385:	pop    esi
  41b386:	std    
  41b387:	or     BYTE PTR [ebp-0x4e],0xfd
  41b38b:	test   BYTE PTR [ebx+edx*8-0x32],dh
  41b38f:	(bad)  
  41b390:	cld    
  41b391:	add    eax,0x995efed0
  41b396:	sbb    eax,0xbd1c4b41
  41b39b:	ror    DWORD PTR [edi-0x4e],0x37
  41b39f:	mov    ebp,edi
  41b3a1:	das    
  41b3a2:	enter  0x61f7,0xb2
  41b3a6:	pop    eax
  41b3a7:	das    
  41b3a8:	int3   
  41b3a9:	and    eax,0x21eae7fc
  41b3ae:	iret   
  41b3af:	(bad)  
  41b3b0:	shl    ch,cl
  41b3b2:	iret   
  41b3b3:	jg     0x41b42b
  41b3b5:	inc    edx
  41b3b6:	inc    ebp
  41b3b7:	inc    ecx
  41b3b8:	dec    ebx
  41b3b9:	mov    dl,0x57
  41b3bb:	sub    DWORD PTR [ebx],esi
  41b3bd:	cmp    eax,0xda4b4145
  41b3c2:	pushf  
  41b3c3:	inc    eax
  41b3c4:	or     dh,BYTE PTR [edx+0x5b0de4da]
  41b3ca:	iret   
  41b3cb:	test   BYTE PTR [ebx+0x7a682bde],cl
  41b3d1:	jno    0x41b416
	...
  41b3fb:	add    bl,ah
  41b3fd:	and    DWORD PTR [ebp+0x41],eax
  41b400:	dec    ebx
  41b401:	dec    edx
  41b402:	mov    dl,0x7d
  41b404:	repz lds eax,FWORD PTR fs:[ebx+ebx*2]
  41b409:	or     DWORD PTR [eax+0x6a0a4b44],ebp
  41b40f:	adc    DWORD PTR [esi+0x4a],edx
  41b412:	test   al,0x3
  41b414:	dec    ebx
  41b415:	cmp    eax,0xc187c6d3
  41b41a:	call   0xd24aff22
  41b41f:	ret    
  41b420:	jl     0x41b47b
  41b422:	cdq    
  41b423:	cmp    BYTE PTR [edi-0x3f],0x9a
  41b427:	into   
  41b428:	aaa    
  41b429:	mov    esi,0x8e4b4527
  41b42e:	test   al,0x4c
  41b430:	dec    ecx
  41b431:	mov    al,0xf6
  41b433:	add    BYTE PTR [edi+0x4958e8c1],0xb0
  41b43a:	fmulp  st(6),st
  41b43c:	jg     0x41b3ff
  41b43e:	mov    ebp,0x3ab14358
  41b443:	retf   
  41b444:	in     eax,0xc3
  41b446:	popa   
  41b447:	cmp    bl,ah
  41b449:	(bad)  
  41b44a:	cli    
  41b44b:	into   
  41b44c:	pop    edi
  41b44d:	rcr    DWORD PTR [ebp+0x1bc44331],0xfc
  41b454:	lods   al,BYTE PTR ds:[esi]
  41b455:	dec    esi
  41b456:	mov    esi,cs
  41b458:	mov    ebp,0xacfbfbc3
  41b45d:	out    dx,eax
  41b45e:	jle    0x41b42e
	...
  41b488:	lods   eax,DWORD PTR ds:[esi]
  41b489:	ret    
  41b48a:	sti    
  41b48b:	iret   
  41b48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b48d:	cmp    eax,0x39f8dbe1
  41b492:	data16 into 
  41b494:	add    esi,0xffffffe4
  41b497:	add    esi,esi
  41b499:	pop    DWORD PTR [edx+eax*4-0x78]
  41b49d:	mov    eax,0x901836b6
  41b4a2:	fwait
  41b4a3:	dec    DWORD PTR [ebp+0x4b03e906]
  41b4a9:	or     DWORD PTR [eax],eax
  41b4ab:	add    edx,DWORD PTR ss:[ecx]
  41b4ae:	call   0x4ab920
  41b4b3:	push   0xffffff80
  41b4b5:	or     BYTE PTR [edi-0x10],dh
  41b4b8:	xor    ecx,ecx
  41b4ba:	pop    edx
  41b4bb:	mov    dh,0x76
  41b4bd:	rol    cl,1
  41b4bf:	loope  0x41b509
  41b4c1:	fsub   st,st(7)
  41b4c3:	jb     0x41b538
  41b4c5:	adc    eax,0xdab1eb89
  41b4ca:	push   cs
  41b4cb:	imul   esi,edx,0xffffffc2
  41b4ce:	(bad)  
  41b4cf:	jmp    0x7249f275
  41b4d4:	test   BYTE PTR [ecx],dl
  41b4d6:	jmp    0x41b51b
  41b4d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4d9:	mov    es,WORD PTR ds:0x71f31b69
  41b4df:	jecxz  0x41b4a9
  41b4e1:	mov    esi,0x894c3e38
  41b4e6:	jmp    0x41b4e1
  41b4e8:	adc    esp,DWORD PTR [eax]
  41b4ea:	xor    BYTE PTR [ebp+0x0],0x0
	...
  41b511:	add    BYTE PTR [eax],al
  41b513:	add    BYTE PTR [eax-0x496f2c9],cl
  41b519:	dec    esp
  41b51a:	ja     0x41b50d
  41b51c:	enter  0x40ae,0x69
  41b520:	add    edx,DWORD PTR [ecx]
  41b522:	jmp    0x41b504
  41b524:	arpl   cx,cx
  41b526:	pop    edx
  41b527:	cs ins DWORD PTR es:[edi],dx
  41b529:	rol    cl,1
  41b52b:	icebp  
  41b52c:	dec    eax
  41b52d:	add    eax,0xfeb0fb30
  41b532:	cmp    dh,bh
  41b534:	dec    esp
  41b535:	cmc    
  41b536:	das    
  41b537:	adc    BYTE PTR [esi-0x6d24bf02],0xfe
  41b53e:	inc    ebp
  41b53f:	(bad)  
  41b540:	inc    esi
  41b541:	cmc    
  41b542:	inc    eax
  41b543:	in     eax,dx
  41b544:	sub    BYTE PTR [edi+0x5f870208],0x5f
  41b54b:	add    BYTE PTR [edi+edi*2-0x399df740],ch
  41b552:	fiadd  WORD PTR [eax+ebp*2]
  41b555:	retf   0x4ba8
  41b558:	icebp  
  41b559:	retf   0xb00
  41b55c:	or     DWORD PTR [edx-0x5e],ebx
  41b55f:	mov    esp,DWORD PTR [edi-0x52cf023e]
  41b565:	dec    edx
  41b566:	clc    
  41b567:	call   edi
  41b569:	mov    ebp,0xcc4e458d
  41b56e:	inc    ebx
  41b56f:	hlt    
  41b570:	and    al,BYTE PTR [esi]
  41b572:	add    BYTE PTR [eax],al
  41b574:	mov    cl,0x12
  41b576:	sbb    DWORD PTR [ecx],ebp
	...
  41b5a0:	repz add eax,0x42547400
  41b5a6:	inc    esp
  41b5a7:	lock push edx
  41b5a9:	pop    edi
  41b5aa:	add    DWORD PTR [edx-0xe],ebp
  41b5ad:	pop    edi
  41b5ae:	add    BYTE PTR [edx-0xe],ch
  41b5b1:	pop    edi
  41b5b2:	add    BYTE PTR [ebp-0xb12ad9],cl
  41b5b8:	pop    ss
  41b5b9:	scas   eax,DWORD PTR es:[edi]
  41b5ba:	daa    
  41b5bb:	inc    ecx
  41b5bc:	repnz sar BYTE PTR [esi+0x7b88d874],0xf4
  41b5c4:	loop   0x41b61f
  41b5c6:	xor    al,0x8b
  41b5c8:	daa    
  41b5c9:	or     DWORD PTR [ebx+0x810e24d],ecx
  41b5cf:	ja     0x41b559
  41b5d1:	ror    DWORD PTR [ecx+0x7c413675],1
  41b5d7:	or     BYTE PTR [ecx],bh
  41b5d9:	add    esi,eax
  41b5db:	jecxz  0x41b58d
  41b5dd:	fsub   DWORD PTR [edx-0xf69875]
  41b5e3:	jne    0x41b5d7
  41b5e5:	inc    esp
  41b5e6:	(bad)  
  41b5e7:	(bad)  
  41b5e8:	ja     0x41b5c3
  41b5ea:	out    0xe3,al
  41b5ec:	dec    ebx
  41b5ed:	outs   dx,DWORD PTR ds:[esi]
  41b5ee:	add    al,BYTE PTR [eax]
  41b5f0:	ret    
  41b5f1:	mov    al,0x2
  41b5f3:	add    BYTE PTR [ebx+0x67],cl
  41b5f6:	sub    ebx,DWORD PTR [esi-0x7e]
  41b5f9:	in     eax,dx
  41b5fa:	cli    
  41b5fb:	push   DWORD PTR [ecx]
  41b5fd:	lock daa 
  41b5ff:	pop    edi
  41b600:	std    
  41b601:	call   0x41bdc6
	...
  41b62a:	add    BYTE PTR [eax],al
  41b62c:	dec    ebx
  41b62d:	test   DWORD PTR [edi-0x15],esi
  41b630:	enter  0xc2eb,0x67
  41b634:	dec    ebx
  41b635:	rol    BYTE PTR [edx],cl
  41b637:	add    BYTE PTR [ebx],dh
  41b639:	push   eax
  41b63a:	push   ecx
  41b63b:	push   DWORD PTR [edx+edi*1]
  41b63e:	inc    esi
  41b63f:	cld    
  41b640:	mov    ds:0x4b0022b2,eax
  41b645:	or     dl,BYTE PTR [ecx+0x78b01c71]
  41b64b:	inc    esp
  41b64c:	adc    ebx,DWORD PTR [ebx+0x4]
  41b64f:	and    BYTE PTR [ebx-0x4e],cl
  41b652:	fisub  DWORD PTR [ecx+edi*2-0x79773529]
  41b659:	(bad)  
  41b65a:	pop    ebx
  41b65b:	add    BYTE PTR [ebx],ch
  41b65d:	mov    dl,0x2
  41b65f:	call   0xff0cbb37
  41b664:	shr    ch,cl
  41b666:	shl    DWORD PTR [edi+0x4b],cl
  41b669:	adc    al,BYTE PTR [eax+eax*1]
  41b66c:	jecxz  0x41b6a9
  41b66e:	push   esi
  41b66f:	dec    esp
  41b671:	cmp    DWORD PTR [ecx-0x14],eax
  41b674:	xor    esi,DWORD PTR [edx-0x75b4ffde]
  41b67a:	dec    ecx
  41b67b:	jb     0x41b631
  41b67d:	xchg   DWORD PTR [esp+eax*2-0x5d],edi
  41b681:	sbb    al,BYTE PTR [eax+eiz*1]
  41b684:	dec    ebx
  41b685:	mov    dl,0xda
  41b687:	jo     0x41b6a2
  41b689:	das    
  41b68a:	retf   
  41b68b:	mov    BYTE PTR [esi],cl
  41b68d:	or     DWORD PTR [ebp-0x35],ecx
	...
  41b6b8:	pop    ss
  41b6b9:	sbb    ecx,edx
  41b6bb:	retf   
  41b6bc:	or     cl,BYTE PTR [edx-0x17]
  41b6bf:	retf   0xbcf7
  41b6c2:	inc    eax
  41b6c3:	jnp    0x41b6cd
  41b6c5:	or     ecx,ebp
  41b6c7:	xchg   BYTE PTR [eax+0x3b513e0d],cl
  41b6cd:	xor    edx,esp
  41b6cf:	inc    esi
  41b6d0:	or     cl,BYTE PTR [ecx]
  41b6d2:	cs push ecx
  41b6d4:	push   ebx
  41b6d5:	mov    cl,0xa4
  41b6d7:	aas    
  41b6d8:	dec    ebx
  41b6d9:	or     DWORD PTR [edx-0x40],ebp
  41b6dc:	push   eax
  41b6dd:	rcr    BYTE PTR [ebx-0x56165b0d],0x44
  41b6e4:	dec    ebx
  41b6e5:	sar    BYTE PTR [ebx-0x31],0x24
  41b6e9:	xor    ah,BYTE PTR [ebp+0x2c8c4b03]
  41b6ef:	clc    
  41b6f0:	sbb    eax,0x545bd936
  41b6f5:	dec    esp
  41b6f6:	sub    BYTE PTR [esp+ecx*1],al
  41b6f9:	ss (bad) 
  41b6fc:	sahf   
  41b6fd:	inc    ebp
  41b6fe:	jmp    0xdd067f06
  41b703:	retf   0x197f
  41b706:	push   ecx
  41b707:	mov    BYTE PTR ss:[edx-0x17],cl
  41b70b:	retf   0xad5f
  41b70e:	rol    BYTE PTR [esi-0x79],0x9
  41b712:	jmp    0xa64ebf9d
  41b717:	push   eax
  41b718:	aas    
  41b719:	xor    DWORD PTR [ecx],edx
  41b71b:	inc    edi
	...
  41b744:	or     cl,BYTE PTR [ecx]
  41b746:	xchg   esi,eax
  41b747:	push   eax
  41b748:	mov    bl,0xb0
  41b74a:	fdivr  DWORD PTR [edi]
  41b74c:	dec    ebx
  41b74d:	or     DWORD PTR [edx-0x41],ebp
  41b750:	inc    eax
  41b751:	shl    bl,0xf3
  41b754:	sub    al,0x35
  41b756:	add    BYTE PTR [edx],ch
  41b758:	push   es
  41b759:	or     edi,edi
  41b75b:	hlt    
  41b75c:	je     0x41b705
  41b75e:	sbb    al,0xad
  41b760:	dec    eax
  41b761:	or     DWORD PTR [ebx+0x317c25],eax
  41b767:	push   esi
  41b768:	sbb    edi,DWORD PTR [ebp-0x41832b02]
  41b76e:	xor    al,0xfe
  41b770:	dec    edi
  41b771:	dec    edx
  41b772:	add    BYTE PTR [ecx-0x67],dl
  41b775:	cmp    edi,edi
  41b777:	fild   WORD PTR ss:[eax+eiz*8-0x3d]
  41b77c:	dec    eax
  41b77d:	shl    BYTE PTR [ecx+eiz*1-0x7f],0x34
  41b782:	or     al,0x1e
  41b784:	pop    ebx
  41b785:	imul   BYTE PTR [eax]
  41b787:	test   al,0x48
  41b789:	mov    cl,0xc0
  41b78b:	xchg   ebp,eax
  41b78c:	add    eax,eax
  41b78e:	mov    BYTE PTR [esp+eiz*8-0x6b01ffd0],ch
  41b795:	mov    ch,0xfe
  41b797:	jl     0x41b7ad
  41b799:	shl    BYTE PTR [esi+esi*4],0x37
  41b79d:	dec    eax
  41b79e:	add    cl,dl
  41b7a0:	scas   al,BYTE PTR es:[edi]
  41b7a1:	cmp    bh,bh
  41b7a3:	fiadd  WORD PTR [eax+0x43d845]
	...
  41b7cd:	add    BYTE PTR [eax],al
  41b7cf:	add    BYTE PTR [edi-0x42],al
  41b7d2:	je     0x41b7ad
  41b7d4:	add    dh,BYTE PTR [esi]
  41b7d6:	call   0x2937f4a1
  41b7db:	sub    BYTE PTR [edi-0x4f],cl
  41b7de:	xchg   esp,eax
  41b7df:	cmp    eax,0x2488c012
  41b7e4:	fwait
  41b7e5:	xor    BYTE PTR [eax],al
  41b7e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7e8:	jl     0x41b797
  41b7ea:	(bad)  
  41b7eb:	adc    al,0xa7
  41b7ed:	mov    edi,0x4861de34
  41b7f2:	add    BYTE PTR [ecx+0xff3502],al
  41b7f8:	lds    eax,FWORD PTR [edx+0x44]
  41b7fb:	shl    BYTE PTR [edi],1
  41b7fd:	(bad)  
  41b7fe:	mov    edi,0xe44e1550
  41b803:	call   FWORD PTR [edi+0x2d35fdb6]
  41b809:	and    al,BYTE PTR [ecx+0x0]
  41b80c:	sbb    ch,BYTE PTR [eax]
  41b80e:	je     0x41b80f
  41b810:	adc    eax,0xe1cc4442
  41b815:	inc    ebp
  41b816:	loopne 0x41b818
  41b818:	jne    0x41b858
  41b81a:	mov    dh,0x0
  41b81c:	jb     0x41b828
  41b81e:	cmp    DWORD PTR [ebp+0x3e],0x5
  41b822:	je     0x41bcff
  41b828:	loope  0x41b86f
  41b82a:	rol    BYTE PTR [eax],1
  41b82c:	xor    eax,0x3200a23e
  41b831:	or     cl,BYTE PTR [ebp+0x45]
	...
  41b85b:	add    BYTE PTR [esi-0xb],ch
  41b85e:	(bad)  
  41b85f:	jne    0x41b8af
  41b861:	fisttp QWORD PTR [esi-0x3]
  41b864:	and    eax,0x25c009d1
  41b869:	mov    es,WORD PTR ds:[eax]
  41b86c:	and    cl,BYTE PTR [edx]
  41b86e:	cmp    DWORD PTR [ebp-0x22],0x9
  41b872:	je     0x41c2e7
  41b878:	addr16 inc edi
  41b87b:	push   eax
  41b87c:	add    eax,0xf0e8d04f
  41b881:	(bad)  
  41b882:	std    
  41b883:	(bad)  
  41b884:	fxch   st(1)
  41b886:	jb     0x41b8fd
  41b888:	jno    0x41b8d1
  41b88a:	enter  0x1e00,0x60
  41b88e:	push   0xbce0e210
  41b893:	call   FWORD PTR [edi-0x43]
  41b896:	out    0x76,al
  41b898:	dec    ebx
  41b899:	add    eax,0x14b4fec9
  41b89e:	in     al,0xfe
  41b8a0:	ss mov eax,0x3f36ccda
  41b8a6:	enter  0x16fe,0x94
  41b8aa:	(bad)  
  41b8ab:	je     0x41b8f0
  41b8ad:	mov    ah,al
  41b8af:	ins    BYTE PTR es:[edi],dx
  41b8b0:	mov    WORD PTR [esi],fs
  41b8b2:	enter  0xa374,0x5e
  41b8b6:	dec    esi
  41b8b7:	or     BYTE PTR [ebx-0x62],dh
  41b8ba:	push   ebp
  41b8bb:	push   DWORD PTR [esi+ecx*2+0x4e]
  41b8bf:	les    eax,FWORD PTR [eax]
	...
  41b8e5:	add    BYTE PTR [eax],al
  41b8e7:	add    BYTE PTR [esp+edi*2-0x52],ch
  41b8eb:	(bad)  
  41b8ec:	fidiv  WORD PTR [edi-0x9118326]
  41b8f2:	(bad)  
  41b8f3:	(bad)  
  41b8f4:	fsubrp st(7),st
  41b8f6:	(bad)  
  41b8f7:	je     0x41b974
  41b8f9:	out    0x4d,al
  41b8fb:	or     BYTE PTR [ebx],dh
  41b8fd:	mov    WORD PTR [ebp-0x1],ss
  41b900:	cmp    al,0x30
  41b902:	inc    esi
  41b903:	int3   
  41b904:	dec    ebx
  41b905:	xchg   esi,eax
  41b906:	in     eax,dx
  41b907:	sub    BYTE PTR [esi+0x5474fef2],0x37
  41b90e:	ds int3 
  41b910:	sbb    al,0x83
  41b912:	(bad)  
  41b913:	je     0x41b958
  41b915:	or     ah,BYTE PTR [ebx]
  41b917:	ins    DWORD PTR es:[edi],dx
  41b918:	or     al,0xa4
  41b91a:	fimul  DWORD PTR [ecx]
  41b91c:	jno    0x41b8d0
  41b91e:	lds    esi,FWORD PTR [ebx+edx*2-0x36]
  41b922:	out    dx,eax
  41b923:	ins    BYTE PTR es:[edi],dx
  41b924:	hlt    
  41b925:	retf   
  41b926:	(bad)  
  41b927:	je     0x41b918
  41b929:	fiadd  DWORD PTR [edx-0x39841b91]
  41b92f:	je     0x41b914
  41b931:	retf   0x704a
  41b934:	aam    0x6b
  41b936:	(bad)  
  41b937:	je     0x41b910
  41b939:	or     DWORD PTR [ecx-0x6243c4ad],edx
  41b93f:	(bad)  
  41b940:	aaa    
  41b941:	mov    ecx,0xbc3b5b80
  41b946:	(bad)  
  41b947:	(bad)  
  41b948:	aaa    
  41b949:	lods   eax,DWORD PTR ds:[esi]
  41b94a:	nop
  41b94b:	arpl   WORD PTR [eax],ax
	...
  41b971:	add    BYTE PTR [eax],al
  41b973:	add    BYTE PTR [ebx],bl
  41b975:	mov    esp,0xb117c77d
  41b97a:	sub    BYTE PTR [ebx],0x1b
  41b97d:	mov    esp,0xa517c76d
  41b982:	push   eax
  41b983:	xor    edi,ebx
  41b985:	mov    ebx,0xa8f7c75d
  41b98a:	inc    eax
  41b98b:	cmp    edi,ebx
  41b98d:	mov    ebx,0xdcf7c74d
  41b992:	push   eax
  41b993:	inc    ebx
  41b994:	fstp   TBYTE PTR [ebx-0x1f2838c3]
  41b99a:	inc    eax
  41b99b:	or     ebx,ebx
  41b99d:	mov    ebx,0xd4d7c72d
  41b9a2:	adc    BYTE PTR [ebx],dl
  41b9a4:	mov    ebx,0xb7c71dbc
  41b9a9:	fld    DWORD PTR [eax]
  41b9ab:	sbb    edi,DWORD PTR [ebx-0x4838f244]
  41b9b1:	int    0x10
  41b9b3:	and    ebx,DWORD PTR [ebx+0xabcfdbc]
  41b9b9:	or     eax,0xacc030e9
  41b9be:	shl    BYTE PTR [si],0xb4
  41b9c2:	in     eax,0xc6
  41b9c4:	xlat   BYTE PTR ds:[ebx]
  41b9c5:	inc    ebp
  41b9c6:	fnsave [ebx]
  41b9c8:	cld    
  41b9c9:	xor    eax,0xf43fc6e5
  41b9ce:	inc    DWORD PTR [ebx+ecx*2-0x4f]
  41b9d2:	dec    esp
  41b9d3:	inc    edx
  41b9d4:	dec    ebx
  41b9d5:	or     edx,esi
  41b9d7:	ret    
	...
  41ba00:	dec    ebp
  41ba01:	xchg   bh,bh
  41ba03:	fmul   QWORD PTR [edi+0x9]
  41ba06:	add    BYTE PTR [esi-0x17003e75],ah
  41ba0c:	dec    eax
  41ba0d:	or     edi,eax
  41ba0f:	and    al,0x9b
  41ba11:	mov    edx,0x2f48e906
  41ba16:	add    BYTE PTR [ebx],al
  41ba18:	inc    edi
  41ba19:	das    
  41ba1a:	add    BYTE PTR [ebx],dl
  41ba1c:	dec    edi
  41ba1d:	mov    es,WORD PTR [ebp+esi*2+0x58]
  41ba21:	mov    es,WORD PTR [ecx+edi*2+0x19feba85]
  41ba28:	test   BYTE PTR [eax+edi*8],dh
  41ba2b:	sbb    di,WORD PTR [ebp+0x90917e7]
  41ba32:	add    dl,ah
  41ba34:	mov    BYTE PTR [edi],dh
  41ba36:	add    eax,0xfebb9d40
  41ba3b:	jmp    0xa8692b40
  41ba40:	dec    eax
  41ba41:	mov    esp,0x6070e574
  41ba46:	jae    0x41ba76
  41ba48:	test   DWORD PTR [ebx-0x75],ecx
  41ba4b:	cmp    ebx,eax
  41ba4d:	test   edi,ebp
  41ba4f:	push   ss
  41ba50:	add    eax,0x10bb4fbc
  41ba55:	push   edx
  41ba56:	jae    0x41ba66
  41ba58:	add    eax,0x15118492
  41ba5d:	mov    esp,0x2ba511fe
  41ba62:	push   esi
	...
  41ba8c:	pushf  
  41ba8d:	inc    ebp
  41ba8e:	lock cdq 
  41ba90:	jo     0x41ba3f
  41ba92:	inc    ecx
  41ba93:	sub    BYTE PTR [edi-0x46],cl
  41ba96:	mov    ah,0xd1
  41ba98:	push   cs
  41ba99:	mov    esp,0xf244d6fe
  41ba9e:	sub    BYTE PTR [eax],ch
  41baa0:	inc    edi
  41baa1:	mov    cl,0x9c
  41baa3:	add    BYTE PTR [eax],ah
  41baa5:	(bad)  
  41baa6:	std    
  41baa7:	mov    DWORD PTR [edi-0x1f],esp
  41baaa:	cmc    
  41baab:	call   FWORD PTR [ebp-0x6a134478]
  41bab1:	(bad)  
  41bab2:	std    
  41bab3:	add    BYTE PTR [esi-0x11],ah
  41bab6:	cmp    BYTE PTR [ebp-0x1e],0x9
  41baba:	jne    0x41bb05
  41babc:	sub    DWORD PTR [edx],edi
  41babe:	jmp    0x41bab7
  41bac0:	mov    ebp,0x1d30fdc4
  41bac5:	cmp    ch,bl
  41bac7:	neg    DWORD PTR ds:0xcebd7fc4
  41bacd:	int3   
  41bace:	std    
  41bacf:	dec    edx
  41bad1:	or     BYTE PTR [eax],al
  41bad3:	add    BYTE PTR [eax+eax*8-0x33f17a3b],ah
  41bada:	std    
  41badb:	dec    DWORD PTR [edx]
  41badd:	or     BYTE PTR [eax],al
  41badf:	add    BYTE PTR [ecx],cl
  41bae1:	scas   eax,DWORD PTR es:[edi]
  41bae2:	std    
  41bae3:	(bad)  
  41bae4:	dec    bl
  41bae6:	std    
  41bae7:	call   FWORD PTR ds:0x1df7ea8a
  41baed:	(bad)  
  41baee:	std    
  41baef:	mov    ch,0x0
	...
  41bb15:	add    BYTE PTR [eax],al
  41bb17:	add    BYTE PTR [edx],cl
  41bb19:	int3   
  41bb1a:	std    
  41bb1b:	jmp    FWORD PTR [ebp+0x4a]
  41bb1e:	or     al,ch
  41bb20:	jmp    0xea82:0xa1fffdc1
  41bb27:	idiv   DWORD PTR ds:0x6f74fec4
  41bb2d:	les    esi,FWORD PTR [ebx-0x23aea14]
  41bb33:	call   0x411036
  41bb38:	sbb    eax,0xedf7ea8b
  41bb3d:	(bad)  
  41bb3e:	out    0x11,al
  41bb40:	(bad)  
  41bb41:	(bad)  
  41bb42:	std    
  41bb43:	dec    DWORD PTR [ebx-0x63]
  41bb46:	(bad)  
  41bb48:	in     al,dx
  41bb49:	retf   0x74c3
  41bb4c:	push   ebx
  41bb4d:	fcomp  st(6)
  41bb4f:	std    
  41bb50:	fdivr  QWORD PTR [edx-0x3d]
  41bb53:	mov    ah,0xe3
  41bb55:	jp     0x41bb1a
  41bb57:	(bad)  
  41bb58:	jecxz  0x41bbd1
  41bb5a:	push   esp
  41bb5b:	inc    esp
  41bb5d:	bound  edi,QWORD PTR ds:0xc466b2f8
  41bb63:	(bad)  
  41bb64:	mov    ah,0x92
  41bb66:	dec    ebp
  41bb67:	cld    
  41bb68:	mov    ds:0x4b0042ed,eax
  41bb6d:	jns    0x41bb2f
  41bb6f:	pop    es
  41bb70:	dec    ebx
  41bb71:	adc    eax,0x6bc8eb79
  41bb76:	(bad)  
  41bb77:	imul   ecx,DWORD PTR [ebx+0x6],0xff14
	...
  41bba2:	add    BYTE PTR [eax],al
  41bba4:	(bad)  
  41bba5:	mov    bh,0xda
  41bba7:	or     edi,ebp
  41bba9:	pop    edx
  41bbaa:	les    ecx,FWORD PTR [eax-0x29a4abf2]
  41bbb0:	or     DWORD PTR [ecx+0x2],esi
  41bbb3:	(bad)  
  41bbb4:	fidiv  WORD PTR [edi-0x5a25d26]
  41bbba:	ret    
  41bbbb:	(bad)  
  41bbbc:	fdivrp st(3),st
  41bbbe:	ret    
  41bbbf:	je     0x41bc04
  41bbc1:	dec    eax
  41bbc2:	push   cs
  41bbc3:	ins    BYTE PTR es:[edi],dx
  41bbc4:	inc    esp
  41bbc5:	lock mov ecx,0x2da247c1
  41bbcb:	mov    esp,DWORD PTR [edi]
  41bbcd:	and    al,0xbf
  41bbcf:	sti    
  41bbd0:	xchg   ebp,eax
  41bbd1:	jg     0x41bc2b
  41bbd3:	add    BYTE PTR [ecx+0x5374c371],dh
  41bbd9:	sbb    ch,BYTE PTR [edx+ebp*2+0x4478c014]
  41bbe0:	cvttps2pi mm1,QWORD PTR [esi]
  41bbe3:	push   eax
  41bbe4:	xor    ecx,DWORD PTR [ecx]
  41bbe6:	sub    BYTE PTR [eax+edx*8],al
  41bbe9:	div    BYTE PTR [esp+ebp*8]
  41bbec:	mov    ecx,DWORD PTR [ecx]
  41bbee:	imul   eax,DWORD PTR [ebx],0x2c243d4b
  41bbf4:	int3   
  41bbf5:	dec    esp
  41bbf6:	sub    BYTE PTR [esp+esi*2],al
  41bbf9:	mov    eax,ds:0x94b44dc
  41bbfe:	loop   0x41bbc3
  41bc00:	pop    eax
  41bc01:	sbb    BYTE PTR [edi],dl
  41bc03:	lods   al,BYTE PTR ds:[esi]
  41bc04:	test   DWORD PTR [ecx],esi
  41bc06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc07:	ret    
	...
  41bc30:	or     al,0x21
  41bc32:	jmp    0xb9603a
  41bc37:	xchg   ebp,eax
  41bc38:	or     DWORD PTR [edx-0x17],ecx
  41bc3b:	push   ebx
  41bc3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc3d:	ds icebp 
  41bc3f:	stos   DWORD PTR es:[edi],eax
  41bc40:	pop    ebx
  41bc41:	pushf  
  41bc42:	jge    0x41bc07
  41bc44:	lods   al,BYTE PTR ds:[esi]
  41bc45:	push   esi
  41bc46:	pop    es
  41bc47:	ret    
  41bc48:	lea    esp,[edi+eiz*8-0x170834b7]
  41bc4f:	cmp    BYTE PTR [ecx-0x4b08a2b1],al
  41bc55:	jb     0x41bcac
  41bc57:	ret    
  41bc58:	ins    DWORD PTR es:[edi],dx
  41bc59:	mov    eax,0x101c725a
  41bc5e:	mov    esp,0x3d3e5d7e
  41bc63:	ret    
  41bc64:	fild   WORD PTR [eax]
  41bc66:	inc    ecx
  41bc67:	jge    0x41bc4a
  41bc69:	mov    bh,0x2d
  41bc6b:	arpl   WORD PTR [ebp+0x4b082ac2],sp
  41bc71:	pop    esi
  41bc72:	jb     0x41bc24
  41bc74:	leave  
  41bc75:	int3   
  41bc76:	adc    BYTE PTR [edi+0x4],dl
  41bc79:	dec    esi
  41bc7a:	adc    DWORD PTR [ebx+ecx*2],eax
  41bc7d:	or     ecx,ebp
  41bc7f:	retf   0xb587
  41bc82:	call   0x4b078a
  41bc87:	bound  eax,QWORD PTR [edx+0x48b18305]
  41bc8d:	or     DWORD PTR ds:[edx],edx
  41bc90:	pop    es
  41bc91:	jecxz  0x41bc64
  41bc93:	inc    edx
	...
  41bcbc:	push   es
  41bcbd:	retf   0xe90b
  41bcc0:	ins    DWORD PTR es:[edi],dx
  41bcc1:	or     DWORD PTR [eax],eax
  41bcc3:	jmp    0x6aa26110
  41bcc8:	mov    ebx,DWORD PTR [ecx]
  41bcca:	add    BYTE PTR ds:0xd9448442,dh
  41bcd0:	mov    edi,0x5b34ff1f
  41bcd5:	mov    eax,0xc6f0f174
  41bcda:	addr16 sahf 
  41bcdc:	mov    DWORD PTR [edx+0xe73e0fa],ecx
  41bce2:	or     DWORD PTR [edi+eiz*8],esp
  41bce5:	mov    ds:0x36b21945,al
  41bcea:	(bad)  
  41bceb:	jle    0x41bc76
  41bced:	add    BYTE PTR [ebp+0x71],al
  41bcf0:	lock popa 
  41bcf2:	jg     0x41bcdd
  41bcf4:	dec    eax
  41bcf5:	or     DWORD PTR [ebp-0x15],esi
  41bcf8:	lods   eax,DWORD PTR ds:[esi]
  41bcf9:	cli    
  41bcfa:	and    BYTE PTR [edx+0x40],0x3e
  41bcfe:	adc    eax,0x8ab10362
  41bd03:	mov    ah,0xa4
  41bd05:	push   es
  41bd06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd07:	sub    edx,DWORD PTR [eax-0x36]
  41bd0a:	fcomip st,st(1)
  41bd0c:	(bad)  
  41bd0d:	dec    esp
  41bd0e:	clc    
  41bd0f:	pusha  
  41bd10:	repz mov ah,0xea
  41bd13:	fcmovbe st,st(5)
  41bd15:	dec    ebp
  41bd16:	clc    
  41bd17:	jb     0x41bcbc
  41bd19:	mov    ch,0xe
  41bd1b:	inc    ebp
  41bd1c:	push   cs
  41bd1d:	adc    cl,al
  41bd1f:	or     DWORD PTR [eax],eax
	...
  41bd45:	add    BYTE PTR [eax],al
  41bd47:	add    BYTE PTR [ecx-0x80],al
  41bd4a:	inc    esp
  41bd4b:	adc    edi,edx
  41bd4d:	pop    ebp
  41bd4e:	cld    
  41bd4f:	add    cl,dh
  41bd51:	(bad)  
  41bd52:	stc    
  41bd53:	or     DWORD PTR [esp+edx*4-0x6fd9ba77],ebx
  41bd5a:	add    BYTE PTR ss:[edi+0x0],bh
  41bd5e:	sub    eax,eax
  41bd60:	pop    ecx
  41bd61:	fucomip st,st(1)
  41bd63:	push   es
  41bd64:	jns    0x41bdb4
  41bd66:	clc    
  41bd67:	mov    ebp,DWORD PTR [edi]
  41bd69:	leave  
  41bd6a:	pop    ecx
  41bd6b:	leave  
  41bd6c:	mov    al,0x19
  41bd6e:	add    BYTE PTR [ebp+0x59],dl
  41bd71:	jns    0x41bcf4
  41bd73:	les    ebx,FWORD PTR [esi+0x2366832a]
  41bd79:	or     eax,0xf0a64539
  41bd7e:	add    eax,0xc0c2f22b
  41bd83:	adc    BYTE PTR [edx+0x3c8433c9],ah
  41bd89:	dec    edx
  41bd8a:	add    al,ch
  41bd8c:	push   ebp
  41bd8d:	out    0xfe,al
  41bd8f:	call   FWORD PTR [ebx]
  41bd91:	dec    esi
  41bd92:	clc    
  41bd93:	lea    ebp,[edi-0x37]
  41bd96:	dec    esi
  41bd97:	call   0x409ea2
  41bd9c:	cmc    
  41bd9d:	std    
  41bd9e:	adc    edi,edi
  41bda0:	lahf   
  41bda1:	push   es
  41bda2:	push   DWORD PTR [ebp-0x16]
  41bda5:	(bad)  
  41bda6:	jae    0x41bdb0
  41bda8:	or     ah,BYTE PTR [edx]
  41bdaa:	inc    WORD PTR [eax]
	...
  41bdd1:	add    BYTE PTR [eax],al
  41bdd3:	add    BYTE PTR ds:0xee0fc004,dl
  41bdd9:	and    bh,bh
  41bddb:	jmp    DWORD PTR [edx-0x37]
  41bdde:	jae    0x41bdec
  41bde0:	adc    eax,0xfffff7fe
  41bde5:	jne    0x41bdcd
  41bde7:	stc    
  41bde8:	iret   
  41bde9:	enter  0x8bfd,0xef
  41bded:	add    eax,0xb04b453b
  41bdf2:	jae    0x445de7
  41bdf8:	sbb    al,0x35
  41bdfa:	pop    ss
  41bdfb:	call   FWORD PTR [esi-0x5b5e5548]
  41be01:	mov    edi,0xbc8e88bf
  41be06:	stos   DWORD PTR es:[edi],eax
  41be07:	jae    0x41be05
  41be09:	cld    
  41be0a:	mov    bh,0x2a
  41be0c:	sbb    DWORD PTR [ebx],edi
  41be0e:	inc    esi
  41be0f:	hlt    
  41be10:	hlt    
  41be11:	add    al,0x88
  41be13:	mov    ah,BYTE PTR gs:[eax-0x5da82df5]
  41be1a:	stos   DWORD PTR es:[edi],eax
  41be1b:	addr16 popa 
  41be1d:	mov    al,ds:0xa856ff52
  41be22:	stos   BYTE PTR es:[edi],al
  41be23:	mov    BYTE PTR [edi],ch
  41be25:	addr16 mov edi,0xbfb436fe
  41be2b:	je     0x41be70
  41be2d:	cwde   
  41be2e:	xor    esp,DWORD PTR [edi-0x54]
  41be31:	sahf   
  41be32:	mov    edx,DWORD PTR [edi+edi*1+0x23]
  41be36:	std    
  41be37:	inc    DWORD PTR [eax]
	...
  41be5d:	add    BYTE PTR [eax],al
  41be5f:	add    BYTE PTR [edi],dl
  41be61:	mov    ds:0xecc247ab,al
  41be66:	mov    bh,0x8a
  41be68:	ds and al,0x29
  41be6b:	inc    ecx
  41be6c:	dec    ebx
  41be6d:	and    ebp,DWORD PTR [edx+0x362f1a03]
  41be73:	adc    al,0x1a
  41be75:	push   edi
  41be76:	ss clc 
  41be78:	ins    BYTE PTR es:[edi],dx
  41be79:	aam    0xa
  41be7b:	call   0xff018dac
  41be80:	add    bh,BYTE PTR [ebx+0x5b4974c2]
  41be86:	out    0x50,al
  41be88:	dec    esp
  41be89:	je     0x41be45
  41be8b:	(bad)  
  41be8c:	mov    esi,0xa679aae6
  41be91:	or     DWORD PTR [esi],esp
  41be93:	shl    BYTE PTR ds:0xb8ab1d3f,0x2d
  41be9a:	push   ss
  41be9b:	shl    BYTE PTR [edi+0x9],0xe9
  41be9f:	inc    ebx
  41bea0:	inc    ebp
  41bea1:	cmp    ebp,ebx
  41bea3:	lods   al,BYTE PTR ds:[esi]
  41bea4:	dec    esp
  41bea5:	mov    BYTE PTR [ebx-0x49],bh
  41bea8:	or     al,0x3e
  41beaa:	outs   dx,DWORD PTR ds:[esi]
  41beab:	lods   al,BYTE PTR ds:[esi]
  41beac:	pop    esp
  41bead:	mov    ah,0x73
  41beaf:	mov    edi,0xbf4d07e4
  41beb4:	cmc    
  41beb5:	int3   
  41beb6:	and    eax,eax
  41beb8:	in     al,dx
  41beb9:	mov    ah,0xe8
  41bebb:	add    edx,eax
  41bebd:	dec    esi
  41bebe:	cmc    
  41bebf:	(bad)  
  41bec0:	fdiv   QWORD PTR [eax+ebp*8+0x3]
	...
  41beeb:	add    BYTE PTR [ebx-0x4c],cl
  41beee:	xor    edi,DWORD PTR [esp+eiz*8-0x3a40baca]
  41bef5:	and    BYTE PTR [ebx],0xc0
  41bef8:	xchg   ebx,eax
  41bef9:	xbegin 0x8cc1dd02
  41beff:	push   edi
  41bf00:	ror    BYTE PTR [esi-0x1b],0x82
  41bf04:	in     al,0x1
  41bf06:	cmp    DWORD PTR [edi+ebx*1-0x3e4079db],ebp
  41bf0d:	mov    cl,0x7d
  41bf0f:	cmp    DWORD PTR [edi],edi
  41bf11:	test   ch,ch
  41bf13:	mov    esi,0x475e18ff
  41bf18:	inc    edi
  41bf19:	mov    bl,ah
  41bf1b:	cmovnp edi,DWORD PTR ds:0x4f7beee
  41bf22:	fs inc edi
  41bf24:	push   ebx
  41bf25:	pop    ecx
  41bf26:	dec    esi
  41bf27:	cmp    DWORD PTR [ebx-0x5f],edx
  41bf2a:	pop    edx
  41bf2b:	xor    BYTE PTR [esp+esi*4+0x71],dl
  41bf2f:	dec    ecx
  41bf30:	aaa    
  41bf31:	cmp    bh,0xf0
  41bf34:	ror    BYTE PTR [ecx],0x0
  41bf37:	jmp    0x2c0b1384
  41bf3c:	pop    edi
  41bf3d:	or     DWORD PTR [ebp+0x72],edx
  41bf40:	sti    
  41bf41:	xchg   bl,al
  41bf43:	sbb    eax,0x26145cd0
  41bf48:	dec    ecx
  41bf49:	or     DWORD PTR [eax],eax
  41bf4b:	jmp    0xf7139f98
	...
  41bf78:	add    DWORD PTR ds:0x948e901,0xf
  41bf7f:	push   ebp
  41bf80:	or     DWORD PTR [edi+0x3e48f57c],eax
  41bf86:	adc    ebx,esi
  41bf88:	xor    ebx,DWORD PTR ds:0x932ea6a
  41bf8e:	push   0xffffffe9
  41bf90:	mov    al,0x83
  41bf92:	inc    dh
  41bf94:	xchg   ebp,eax
  41bf95:	mov    al,ds:0x948eb28
  41bf9a:	xor    DWORD PTR [ebx+ebx*2],0xa
  41bf9e:	jne    0x41bfaa
  41bfa0:	cld    
  41bfa1:	cmp    al,0x10
  41bfa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfa4:	jae    0x41bfa7
  41bfa6:	call   0xfef62657
  41bfab:	pusha  
  41bfac:	adc    esi,DWORD PTR [ebp+0x1f4314fe]
  41bfb2:	add    BYTE PTR [ebx],dl
  41bfb4:	inc    ebx
  41bfb5:	xchg   BYTE PTR [ebp+edi*2-0x8],al
  41bfb9:	mov    al,ds:0xb2c57666
  41bfbe:	call   0x4b0aac
  41bfc3:	push   0xb
  41bfc5:	add    eax,0xb269d402
  41bfca:	je     0x41bfc5
  41bfcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfcd:	cmp    al,0x8
  41bfcf:	inc    ecx
  41bfd0:	adc    eax,0xd00ff2b
  41bfd5:	test   DWORD PTR [ebx-0x4],eax
  41bfd8:	or     eax,0x6a13f1
	...
  41c001:	add    BYTE PTR [eax],al
  41c003:	add    BYTE PTR [edx],dh
  41c005:	loope  0x41c00a
  41c007:	(bad)  
  41c008:	out    0x72,eax
  41c00a:	dec    esi
  41c00b:	call   0x3f343c
  41c010:	pop    ebx
  41c011:	(bad)  
  41c013:	push   DWORD PTR [edx]
  41c015:	mov    BYTE PTR [ebx+0xc],bh
  41c018:	xor    edx,esi
  41c01a:	pop    ds
  41c01b:	call   DWORD PTR [edi+0xd036a16]
  41c021:	sti    
  41c022:	pop    es
  41c023:	call   0x40acbe
  41c028:	in     eax,dx
  41c029:	cli    
  41c02a:	adc    ebp,DWORD PTR [edx-0x1f]
  41c02d:	loopne 0x41c02e
  41c02f:	imul   esp,edx,0xfdff165e
  41c035:	je     0x41c01e
  41c037:	mov    cl,0xf3
  41c039:	push   es
  41c03a:	add    BYTE PTR [ebx+0x7504198f],al
  41c040:	inc    ecx
  41c041:	je     0x41c0b6
  41c043:	adc    ch,bh
  41c045:	cli    
  41c046:	pop    es
  41c047:	call   0x40ab3a
  41c04c:	cmp    ecx,DWORD PTR [edx-0x4]
  41c04f:	call   DWORD PTR [edi+0x11]
  41c052:	push   0x0
  41c054:	dec    eax
  41c055:	add    DWORD PTR [ebp-0x17a231bb],ecx
  41c05b:	out    dx,eax
  41c05c:	int3   
  41c05d:	je     0x41c05c
  41c05f:	jmp    0x41c67e
  41c064:	icebp  
  41c065:	icebp  
  41c066:	or     eax,DWORD PTR ds:0x0
	...
  41c090:	ja     0x41c0af
  41c092:	push   DWORD PTR [ebp+0x72]
  41c095:	loopne 0x41c09c
  41c097:	call   DWORD PTR [edi+0x4b55e7fe]
  41c09d:	ret    0xfebb
  41c0a0:	mov    ds:0x4b0002a1,eax
  41c0a5:	pop    ecx
  41c0a6:	sub    DWORD PTR [ecx],eax
  41c0a8:	dec    ebx
  41c0a9:	mov    al,ds:0xa2577c7f
  41c0ae:	xor    eax,0x127d3c20
  41c0b3:	push   0x43
  41c0b5:	jmp    0x41c0ed
  41c0b7:	or     BYTE PTR [ebx],ah
  41c0b9:	test   al,0x24
  41c0bb:	jmp    DWORD PTR [ebx+ebx*1]
  41c0be:	aaa    
  41c0bf:	adc    al,0xb1
  41c0c1:	lahf   
  41c0c2:	sub    BYTE PTR [eax],al
  41c0c4:	mov    eax,ds:0xdabaaa0
  41c0c9:	mov    bl,0xbb
  41c0cb:	call   0x44625e
  41c0d0:	enter  0xf24,0x7
  41c0d4:	jle    0x41c0d6
  41c0d6:	mov    ebp,0xc565b74
  41c0db:	call   FWORD PTR [esi-0x58]
  41c0de:	stos   BYTE PTR es:[edi],al
  41c0df:	adc    DWORD PTR [ebp-0x3d],esp
  41c0e2:	mov    ebx,0x28d45efe
  41c0e7:	add    esp,DWORD PTR [ecx-0x60]
  41c0ea:	sub    BYTE PTR [eax],al
  41c0ec:	mov    bl,0x21
  41c0ee:	mov    ebp,0x1bc8bcfe
  41c0f3:	add    DWORD PTR [eax],eax
	...
  41c119:	add    BYTE PTR [eax],al
  41c11b:	add    BYTE PTR [ebx-0x60],cl
  41c11e:	jg     0x41c19c
  41c120:	aas    
  41c121:	mov    eax,0xe48c1c35
  41c126:	mov    edi,0x29f9cff
  41c12b:	call   FWORD PTR [esi]
  41c12d:	aam    0x28
  41c12f:	add    BYTE PTR [ecx],ah
  41c131:	lods   al,BYTE PTR ds:[esi]
  41c132:	lea    eax,[edi+eax*4+0xf]
  41c136:	lods   al,BYTE PTR ds:[esi]
  41c137:	arpl   WORD PTR [ebp+0x22],di
  41c13a:	mov    esp,0xe90876e8
  41c13f:	add    ecx,DWORD PTR [ebx-0x7a]
  41c142:	fisttp DWORD PTR [edi]
  41c144:	push   edx
  41c145:	cmp    al,0xf5
  41c147:	les    eax,FWORD PTR [edi]
  41c149:	mov    ch,0xe7
  41c14b:	add    ecx,DWORD PTR [ebx+0x9]
  41c14e:	inc    esi
  41c14f:	ss aaa 
  41c151:	pop    ds
  41c152:	jmp    0xabc01080
  41c157:	mov    edi,0xbdaaa18c
  41c15c:	xor    eax,0x2cd80fb1
  41c161:	mov    cl,0xe8
  41c163:	and    BYTE PTR [edi+0x5136e2fd],0x71
  41c16a:	call   0x104b0c72
  41c16f:	enter  0xb10c,0xe8
  41c173:	add    BYTE PTR [edi+0x5136e1fd],0x71
  41c17a:	call   0xd04b0c82
  41c17f:	jg     0x41c181
	...
  41c1a5:	add    BYTE PTR [eax],al
  41c1a7:	add    ah,ch
  41c1a9:	mov    al,0xe8
  41c1ab:	xchg   BYTE PTR [edi-0x3],ah
  41c1ae:	in     al,0x35
  41c1b0:	jbe    0x41c1b6
  41c1b2:	mov    ebx,0x438a7a30
  41c1b7:	or     BYTE PTR [ebx+0x9],cl
  41c1ba:	sub    DWORD PTR [edx],eax
  41c1bc:	cmp    BYTE PTR [ecx-0x4a],al
  41c1bf:	xor    DWORD PTR [edi-0x80],ecx
  41c1c2:	and    esi,DWORD PTR [eax+0x89d1ec9]
  41c1c8:	call   0x80b5:0x1fbb951e
  41c1cf:	xchg   BYTE PTR [edx],dh
  41c1d1:	mov    al,0x8d
  41c1d3:	lea    ecx,[edi]
  41c1d5:	mov    cl,0x85
  41c1d7:	xor    DWORD PTR [ebx],edi
  41c1d9:	mov    al,0xf3
  41c1db:	scas   eax,DWORD PTR es:[edi]
  41c1dc:	test   DWORD PTR [esi],esi
  41c1de:	add    BYTE PTR [ecx-0x40],dh
  41c1e1:	xor    eax,0x2bfa8108
  41c1e6:	jmp    DWORD PTR [esi-0x50]
  41c1e9:	xor    eax,0xb04ed314
  41c1ee:	je     0x41c24d
  41c1f0:	mov    al,ds:0x7e41f835
  41c1f5:	lods   eax,DWORD PTR ds:[esi]
  41c1f6:	inc    BYTE PTR [esi-0x70]
  41c1f9:	xor    eax,0x224051f8
  41c1fe:	push   DWORD PTR [esi]
  41c200:	mov    edi,0x48e90009
  41c205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c206:	pop    edi
  41c207:	push   0x72
  41c209:	std    
  41c20a:	or     al,0x9b
	...
  41c234:	jnp    0x41c23a
  41c236:	rcr    BYTE PTR [edi+esi*2+0x48dd7c8a],cl
  41c23d:	or     DWORD PTR [eax-0x11],eax
  41c240:	push   ebp
  41c241:	inc    ecx
  41c242:	push   DWORD PTR [esp+ecx*2-0x80]
  41c246:	inc    esp
  41c247:	std    
  41c248:	lds    ebx,FWORD PTR [esp+esi*8]
  41c24b:	fcomp  QWORD PTR [edi]
  41c24d:	sbb    eax,0xb53be6f4
  41c252:	out    0x6,eax
  41c254:	xor    eax,0x8b60feb0
  41c259:	mov    cl,0xfe
  41c25b:	push   esp
  41c25c:	aas    
  41c25d:	mov    al,0x74
  41c25f:	mov    ebp,0xbef83491
  41c264:	jnp    0x41c267
  41c266:	call   0xfef22d7e
  41c26b:	scas   al,BYTE PTR es:[edi]
  41c26c:	jnp    0x41c283
  41c26e:	push   0xffffffe8
  41c270:	icebp  
  41c271:	xor    al,0xf4
  41c273:	sahf   
  41c274:	pop    ebx
  41c275:	mov    cl,0xe7
  41c277:	pop    ds
  41c278:	loop   0x41c228
  41c27a:	dec    BYTE PTR [esi+0xe7b15b]
  41c280:	mov    esi,0xafffedc
  41c285:	add    eax,0x5e720000
  41c28a:	add    edi,DWORD PTR [eax+0xb62]
  41c290:	cmp    eax,esi
  41c292:	push   cs
  41c293:	add    BYTE PTR [edi+0x56ea7e],bl
	...
  41c2bd:	add    BYTE PTR [eax],al
  41c2bf:	add    cl,dh
  41c2c1:	lock pop es
  41c2c3:	add    BYTE PTR [edi+0x8],bh
  41c2c6:	pop    esi
  41c2c7:	leave  
  41c2c8:	and    BYTE PTR [eax+0x2ff8afe],dh
  41c2ce:	jmp    0x41c2da
  41c2d0:	jne    0x41c28a
  41c2d2:	out    0xb9,al
  41c2d4:	or     esi,DWORD PTR [ebp+edi*8-0x7d]
  41c2d8:	pop    esp
  41c2d9:	scas   al,BYTE PTR es:[edi]
  41c2da:	cmp    DWORD PTR [esi],0xfff0fa32
  41c2e0:	mov    edi,0xcba9e802
  41c2e5:	jae    0x41c2e4
  41c2e7:	pop    esi
  41c2e8:	pop    ebx
  41c2e9:	les    eax,FWORD PTR [edx]
  41c2eb:	add    bh,bl
  41c2ed:	jg     0x41c2d9
  41c2ef:	mov    ebp,DWORD PTR [edi+0x16558b02]
  41c2f5:	add    BYTE PTR [edx],0x90
  41c2f8:	popa   
  41c2f9:	test   BYTE PTR [edi],0x0
  41c2fc:	jle    0x41c306
  41c2fe:	mov    edx,DWORD PTR [ebp-0x1e]
  41c301:	jno    0x41c331
  41c303:	(bad)  
  41c304:	loopne 0x41c28b
  41c306:	jnp    0x41c31c
  41c308:	loop   0x41c2e8
  41c30a:	pop    es
  41c30b:	mov    ebx,DWORD PTR [edi+0x19]
  41c30e:	push   DWORD PTR [eax-0x52]
  41c311:	add    DWORD PTR [eax],0xd6783
  41c317:	je     0x41c2d4
  41c319:	jge    0x41c36e
  41c31b:	sbb    BYTE PTR [edx-0x80],ah
  41c31e:	add    BYTE PTR [ebx-0x36f55db5],al
	...
  41c34c:	mov    DWORD PTR [edx+eax*1-0x7b6b3fab],esi
  41c353:	ret    
  41c354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c355:	pop    ss
  41c356:	push   edx
  41c357:	mov    eax,DWORD PTR [esi]
  41c359:	sar    BYTE PTR [edi+0x2a074ff],1
  41c35f:	add    al,al
  41c361:	pop    ebp
  41c362:	push   es
  41c363:	(bad)  
  41c364:	dec    ebx
  41c365:	mov    al,ds:0x234b0002
  41c36a:	aaa    
  41c36b:	or     BYTE PTR [ebx-0x2b],cl
  41c36e:	or     ch,BYTE PTR [ebx]
  41c370:	mov    esp,DWORD PTR [esi+0x57]
  41c373:	leave  
  41c374:	or     DWORD PTR [edx+eax*1-0x55574901],ebx
  41c37b:	jmp    FWORD PTR [ebx+0xb0ab8df]
  41c381:	lea    ecx,[edx]
  41c383:	sub    ecx,DWORD PTR [ebx]
  41c385:	outs   dx,BYTE PTR ds:[esi]
  41c386:	push   edi
  41c387:	leave  
  41c388:	or     DWORD PTR [edx+eax*1-0x46e77177],esp
  41c38f:	je     0x41c3d4
  41c391:	sbb    BYTE PTR [esi],cl
  41c393:	arpl   WORD PTR [edi+ebp*4],ax
  41c396:	mov    edi,0x2a0f744
  41c39b:	add    BYTE PTR [ebx+0x4d],cl
  41c39e:	aas    
  41c39f:	in     al,dx
  41c3a0:	fwait
  41c3a1:	xor    eax,0xcf7bf43e
  41c3a6:	sub    eax,0xbc6ef308
  41c3ab:	(bad)  
  41c3ac:	aam    0x18
  41c3ae:	aas    
  41c3af:	in     al,dx
	...
  41c3d8:	push   esp
  41c3d9:	mov    edx,0x9fbf7c83
  41c3de:	cs add al,0x50
  41c3e1:	xchg   edx,eax
  41c3e2:	or     BYTE PTR cs:[eax+0x60],ah
  41c3e6:	pop    eax
  41c3e7:	pop    edi
  41c3e8:	or     BYTE PTR [eax],0xab
  41c3eb:	pop    es
  41c3ec:	dec    ebx
  41c3ed:	loop   0x41c412
  41c3ef:	test   al,0xd3
  41c3f1:	inc    ebx
  41c3f2:	add    DWORD PTR [edx+0x3e8a117],0xbff08eb
  41c3fc:	xor    cl,cl
  41c3fe:	push   ds
  41c3ff:	pop    ecx
  41c400:	xchg   edx,eax
  41c401:	retf   0x3e4
  41c404:	rol    BYTE PTR [ebx-0x7f],0xc2
  41c408:	mov    WORD PTR [edx],cs
  41c40a:	mov    ecx,0x5e2073ab
  41c40f:	mov    eax,0x8c5543d3
  41c414:	pop    esp
  41c415:	lds    esp,FWORD PTR [ebx-0x1752b361]
  41c41b:	add    esi,DWORD PTR [eax]
  41c41d:	stc    
  41c41e:	imul   edi,DWORD PTR [esi],0x3b
  41c421:	pop    edx
  41c422:	fs ds aas 
  41c425:	pop    edx
  41c426:	cs cs inc ebx
  41c429:	mov    eax,ds:0xad25bda5
  41c42e:	jno    0x41c476
  41c430:	sbb    esi,ecx
  41c432:	mov    ds:0xe2059dab,eax
  41c437:	aad    0x98
  41c439:	sbb    DWORD PTR [esi],eax
  41c43b:	add    BYTE PTR cs:[eax],al
	...
  41c462:	add    BYTE PTR [eax],al
  41c464:	pop    es
  41c465:	mov    ds:0xacfc2b48,al
  41c46a:	rol    ebx,0x96
  41c46d:	dec    esp
  41c46e:	and    ch,al
  41c470:	inc    eax
  41c471:	or     DWORD PTR [eax],edx
  41c473:	dec    ecx
  41c474:	rep lods al,BYTE PTR ds:[esi]
  41c476:	and    esp,DWORD PTR [eax-0x53ac774f]
  41c47c:	aam    0x36
  41c47e:	out    0x82,eax
  41c480:	dec    edi
  41c481:	mov    ch,0xe8
  41c483:	xor    BYTE PTR [edx-0x4353c478],cl
  41c489:	xor    eax,0x2dc9ef00
  41c48e:	hlt    
  41c48f:	jmp    0x1d40de0f
  41c494:	jecxz  0x41c43a
  41c496:	jo     0x41c4a9
  41c498:	aam    0xab
  41c49a:	sub    ch,BYTE PTR [ecx-0x5436b403]
  41c4a0:	inc    ebx
  41c4a1:	or     DWORD PTR [ebx+0x73acab04],eax
  41c4a7:	in     al,0xaf
  41c4a9:	jg     0x41c4aa
  41c4ab:	call   0xd98644f8
  41c4b0:	mov    ch,0x35
  41c4b2:	in     al,0x76
  41c4b4:	dec    edi
  41c4b5:	add    BYTE PTR [ebp+eax*2-0x7a],0xcc
  41c4ba:	add    DWORD PTR [ecx+0x4e6829a0],edi
  41c4c0:	xchg   esp,eax
  41c4c1:	add    DWORD PTR [ebp+eiz*1-0x30],0x72dc2c
	...
  41c4ed:	add    BYTE PTR [eax],al
  41c4ef:	add    BYTE PTR [edx-0x53],bh
  41c4f2:	jmp    0x8a26:0xcf7fa391
  41c4f9:	test   eax,0x948e8ff
  41c4fe:	lea    esp,[eax+ebp*8-0x1b5372c5]
  41c505:	cmp    edx,DWORD PTR [edx+0xe]
  41c508:	pop    edx
  41c509:	add    eax,ebp
  41c50b:	push   ss
  41c50c:	shr    BYTE PTR [edx+0x3808f2fe],0xc
  41c513:	push   0x32
  41c515:	mov    ch,0xff
  41c517:	je     0x41c507
  41c519:	xchg   BYTE PTR [ecx+ecx*8+0x48],bh
  41c51d:	ss es push 0x23
  41c521:	test   eax,0xac475cff
  41c526:	je     0x41c4f1
  41c528:	mov    al,ds:0x8d006805
  41c52d:	jb     0x41c52c
  41c52f:	jne    0x41c50f
  41c531:	pop    edi
  41c532:	sub    dh,bh
  41c534:	std    
  41c535:	jb     0x41c534
  41c537:	jne    0x41c517
  41c539:	pop    edi
  41c53a:	hlt    
  41c53b:	addr16 in eax,dx
  41c53d:	jb     0x41c568
  41c53f:	rcr    BYTE PTR [esp+edx*2-0x37],0xc2
  41c544:	scas   al,BYTE PTR es:[edi]
  41c545:	pop    es
  41c546:	mov    eax,DWORD PTR [ebp-0x3e]
  41c549:	push   ds
  41c54a:	dec    BYTE PTR [ebp-0x2a]
  41c54d:	xchg   BYTE PTR [ebx-0x1c],bh
  41c550:	jb     0x41c52d
  41c552:	add    eax,0x83
	...
  41c57b:	add    BYTE PTR [edi+0x5b],bh
  41c57e:	(bad)  
  41c57f:	je     0x41c57f
  41c581:	jle    0x41c5c6
  41c583:	or     al,0xed
  41c585:	clc    
  41c586:	fisttp DWORD PTR [edi-0x38c8d8e]
  41c58c:	or     bh,BYTE PTR [edi+0x2ffdff65]
  41c592:	add    BYTE PTR [eax],al
  41c594:	xor    al,BYTE PTR [edi]
  41c596:	pop    esi
  41c597:	pop    edi
  41c598:	jnp    0x41c562
  41c59a:	or     al,BYTE PTR [eax]
  41c59c:	xlat   BYTE PTR ds:[ebx]
  41c59d:	jg     0x41c589
  41c59f:	and    DWORD PTR [esi-0x42],0x55
  41c5a3:	sub    edi,0x16
  41c5a6:	add    BYTE PTR [ebp+0x18],dh
  41c5a9:	das    
  41c5aa:	add    BYTE PTR [eax],al
  41c5ac:	and    al,BYTE PTR [edi]
  41c5ae:	pop    edi
  41c5af:	leave  
  41c5b0:	pusha  
  41c5b1:	cli    
  41c5b2:	(bad)  
  41c5b3:	(bad)  
  41c5b4:	mov    edi,0x79d22b16
  41c5b9:	dec    ecx
  41c5ba:	adc    bh,dh
  41c5bc:	pop    es
  41c5bd:	sub    esp,DWORD PTR [ebp+0x41]
  41c5c0:	loop   0x41c63f
  41c5c2:	inc    ebx
  41c5c3:	lock js 0x41c5cb
  41c5c6:	push   DWORD PTR [ebp+0x2]
  41c5c9:	jne    0x41c63e
  41c5cb:	or     BYTE PTR [ebx-0x38],cl
  41c5ce:	sbb    DWORD PTR [edi-0x34],ebx
  41c5d1:	mov    ebx,0xa05b7c80
  41c5d6:	sub    eax,0x28a1310c
  41c5db:	fs mov ah,0xed
  41c5de:	or     ebp,eax
	...
  41c608:	inc    ebx
  41c609:	sti    
  41c60a:	mov    ah,0xfe
  41c60c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c60d:	or     eax,0xb816ff10
  41c612:	stos   BYTE PTR es:[edi],al
  41c613:	dec    edx
  41c614:	sub    DWORD PTR [ebx+0x7c0688b4],edx
  41c61a:	mov    ah,0x74
  41c61c:	pop    edi
  41c61d:	sub    DWORD PTR [esi],0x8
  41c620:	jae    0x41c5f2
  41c622:	and    bh,bh
  41c624:	je     0x41c659
  41c626:	das    
  41c627:	adc    al,0x6c
  41c629:	mov    ch,0xa
  41c62b:	call   0xfef5847e
  41c630:	shl    BYTE PTR [ebp-0x46],cl
  41c633:	(bad)  
  41c634:	fisubr WORD PTR [ebx+0x484374b3]
  41c63a:	lods   eax,DWORD PTR ds:[esi]
  41c63b:	pusha  
  41c63c:	inc    esp
  41c63d:	inc    ebx
  41c63e:	mov    ch,0x74
  41c640:	push   edi
  41c641:	jmp    0x41c671
  41c643:	or     BYTE PTR [ebx],ah
  41c645:	fldenv [eax]
  41c647:	jmp    FWORD PTR [edi+eiz*1]
  41c64a:	aas    
  41c64b:	adc    al,0xc8
  41c64d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c64e:	add    dh,BYTE PTR [edi+ecx*2+0x1f]
  41c652:	aaa    
  41c653:	cld    
  41c654:	inc    esi
  41c655:	mov    WORD PTR ds:0xfefc8e83,es
  41c65b:	jae    0x41c6a9
  41c65d:	xlat   BYTE PTR ds:[ebx]
  41c65e:	ret    0x125e
  41c661:	fimul  WORD PTR [edi]
  41c663:	add    BYTE PTR [edx+0x4b411e1b],ch
  41c669:	adc    DWORD PTR [eax+edi*1+0x0],ebp
	...
  41c694:	mov    cs,WORD PTR [ecx]
  41c696:	loope  0x41c6c5
  41c698:	inc    esp
  41c699:	fisubr WORD PTR [eax-0x338fdac]
  41c69f:	add    ecx,eax
  41c6a1:	sub    ecx,ebp
  41c6a3:	(bad)  
  41c6a4:	aas    
  41c6a5:	sti    
  41c6a6:	lds    ebp,FWORD PTR [esi]
  41c6a8:	push   edi
  41c6a9:	stos   BYTE PTR es:[edi],al
  41c6aa:	xor    ecx,DWORD PTR [ebx+eiz*4]
  41c6ad:	xchg   DWORD PTR [edi-0x4b],eax
  41c6b0:	lods   eax,DWORD PTR ds:[esi]
  41c6b1:	jg     0x41c6d6
  41c6b3:	int3   
  41c6b4:	sub    al,0x9
  41c6b6:	jmp    0xe5e311bd
  41c6bb:	sbb    al,0x94
  41c6bd:	test   eax,0xdd973e5f
  41c6c2:	lea    ebp,[eax+0xffbaa5a]
  41c6c8:	jl     0x41c6fd
  41c6ca:	icebp  
  41c6cb:	stos   DWORD PTR es:[edi],eax
  41c6cc:	(bad)  
  41c6cd:	daa    
  41c6ce:	jbe    0x41c684
  41c6d0:	rcl    DWORD PTR [ebx+0x75],0x8a
  41c6d4:	dec    eax
  41c6d5:	outs   dx,DWORD PTR ds:[esi]
  41c6d6:	lods   eax,DWORD PTR ds:[esi]
  41c6d7:	clc    
  41c6d8:	fbstp  TBYTE PTR [eax+0x43c1aada]
  41c6de:	std    
  41c6df:	adc    BYTE PTR [ecx+ecx*1],0xd4
  41c6e3:	add    al,0x44
  41c6e5:	pop    ds
  41c6e6:	cmp    eax,0x3e300aab
  41c6eb:	mov    ah,0x61
  41c6ed:	leave  
  41c6ee:	xchg   ebp,eax
  41c6ef:	retf   0xfe0a
  41c6f2:	call   0xebe76e77
  41c6f7:	add    al,0x0
	...
  41c71d:	add    BYTE PTR [eax],al
  41c71f:	add    dh,al
  41c721:	jo     0x41c70b
  41c723:	add    ecx,DWORD PTR [ebx-0xc]
  41c726:	adc    eax,0xb3949ea8
  41c72b:	scas   eax,DWORD PTR es:[edi]
  41c72c:	ror    DWORD PTR ds:0x99860043,1
  41c732:	xchg   edx,eax
  41c733:	add    ebx,DWORD PTR [ebx+0x407bffa8]
  41c739:	mov    cl,0x27
  41c73b:	(bad)  
  41c73c:	lahf   
  41c73d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c73e:	(bad)  
  41c73f:	pop    esp
  41c740:	inc    ebx
  41c741:	test   al,0x74
  41c743:	icebp  
  41c744:	mov    al,0xfa
  41c746:	pusha  
  41c747:	(bad)  
  41c748:	cwde   
  41c749:	xchg   ecx,eax
  41c74a:	inc    esp
  41c74b:	popf   
  41c74c:	gs or  edi,edi
  41c74f:	cmp    al,0x63
  41c751:	test   al,0x74
  41c753:	icebp  
  41c754:	rcl    BYTE PTR [ecx-0x8],1
  41c757:	mov    dh,0xf8
  41c759:	xchg   ebx,eax
  41c75a:	dec    esp
  41c75b:	aad    0xcd
  41c75d:	loope  0x41c75e
  41c75f:	sbb    ecx,DWORD PTR [eax-0x58]
  41c762:	je     0x41c6f9
  41c764:	mov    bh,0x36
  41c766:	xchg   si,ax
  41c768:	fdiv   st,st(3)
  41c76a:	mov    edi,0x13cac62e
  41c76f:	jmp    0x7e59e52d
  41c774:	xor    bh,ch
  41c776:	(bad)  
  41c777:	cld    
  41c778:	lods   al,BYTE PTR ds:[esi]
  41c779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c77a:	je     0x41c759
  41c77c:	cdq    
  41c77d:	sbb    eax,0xa6b45108
  41c782:	(bad)  
  41c783:	pop    esi
	...
  41c7ac:	push   esp
  41c7ad:	push   0x1d99e674
  41c7b2:	hlt    
  41c7b3:	inc    ecx
  41c7b4:	nop
  41c7b5:	das    
  41c7b6:	inc    DWORD PTR [esi+0x1c]
  41c7b9:	push   0xfc0d305e
  41c7be:	jmp    FWORD PTR [ebp-0x4407dae3]
  41c7c4:	retf   
  41c7c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7c6:	je     0x41c7c9
  41c7c8:	fcomp  DWORD PTR [esp+edx*1]
  41c7cb:	push   ds
  41c7cc:	push   edx
  41c7cd:	sar    esi,1
  41c7cf:	pushf  
  41c7d0:	or     al,0xa7
  41c7d2:	je     0x41c7b5
  41c7d4:	loopne 0x41c803
  41c7d6:	inc    BYTE PTR [eax]
  41c7d8:	inc    ebp
  41c7d9:	pop    esp
  41c7da:	or     eax,eax
  41c7dc:	in     eax,0x90
  41c7de:	push   eax
  41c7df:	add    edx,esp
  41c7e1:	or     edi,edi
  41c7e3:	jne    0x41c7c3
  41c7e5:	adc    DWORD PTR [esi+eiz*2],0xffffffe5
  41c7e9:	pop    edx
  41c7ea:	sub    eax,eax
  41c7ec:	adc    eax,0xe214c066
  41c7f1:	test   BYTE PTR [ecx+eax*1],bh
  41c7f4:	mov    dl,0xb
  41c7f6:	cmp    DWORD PTR [ebp-0x7a],0x8
  41c7fa:	jne    0x41d4be
  41c800:	dec    ecx
  41c801:	pop    esp
  41c802:	out    0x24,eax
  41c804:	mov    bl,0xb
  41c806:	add    BYTE PTR [ebx+0x489615f],cl
  41c80c:	sub    BYTE PTR [edi],cl
  41c80e:	inc    ebp
  41c80f:	lock add BYTE PTR [eax],al
	...
  41c836:	add    BYTE PTR [eax],al
  41c838:	dec    eax
  41c839:	or     eax,0xa55fff50
  41c83e:	out    0x74,al
  41c840:	daa    
  41c841:	pop    esp
  41c842:	std    
  41c843:	push   0x62
  41c845:	pop    edx
  41c846:	jae    0x41c85c
  41c848:	cmc    
  41c849:	loopne 0x41c852
  41c84b:	call   0x3f2b61
  41c850:	(bad)  [eax+0x14]
  41c853:	sub    DWORD PTR [ebx],0xd
  41c856:	jne    0x41c867
  41c858:	cmc    
  41c859:	loopne 0x41c84e
  41c85b:	call   0x40b9ca
  41c860:	pop    ecx
  41c861:	int    0x5d
  41c863:	leave  
  41c864:	pusha  
  41c865:	(bad)  
  41c866:	dec    DWORD PTR [edx]
  41c868:	push   eax
  41c869:	fiadd  WORD PTR [ecx+ebp*8]
  41c86c:	data16 or al,BYTE PTR [eax]
  41c86f:	add    BYTE PTR [ebx+0x226aec51],bl
  41c875:	pop    esp
  41c876:	jae    0x41c88c
  41c878:	dec    ebx
  41c879:	push   DWORD PTR [edi]
  41c87b:	or     bl,dh
  41c87d:	cmp    DWORD PTR [ecx+0x401bfcfe],0x14
  41c884:	enter  0x2c9,0x75
  41c888:	cmp    al,0x9f
  41c88a:	ss hlt 
  41c88c:	repz cmp BYTE PTR [eax],ch
  41c88f:	(bad)  
  41c890:	fdiv   st(3),st
  41c892:	ret    
  41c893:	pop    esi
  41c894:	add    dh,BYTE PTR [ebx+0x17]
  41c897:	add    ah,cl
  41c899:	add    eax,0x6588
	...
  41c8c2:	add    BYTE PTR [eax],al
  41c8c4:	or     dh,BYTE PTR [eax+0x1bb3447f]
  41c8ca:	inc    edi
  41c8cb:	call   0xc1418198
  41c8d0:	stos   DWORD PTR es:[edi],eax
  41c8d1:	mov    ch,0xdb
  41c8d3:	shl    edx,1
  41c8d5:	ja     0x41c8da
  41c8d7:	add    BYTE PTR [ebx-0x79],cl
  41c8da:	mov    dl,0x82
  41c8dc:	mov    ds:0xab44799f,eax
  41c8e1:	xor    ebx,DWORD PTR [edi]
  41c8e3:	call   0xec88f410
  41c8e8:	inc    eax
  41c8e9:	cmc    
  41c8ea:	fwait
  41c8eb:	jbe    0x41c936
  41c8ed:	jnp    0x41c8c9
  41c8ef:	sub    bl,BYTE PTR [ecx+0x30ec472b]
  41c8f5:	in     eax,dx
  41c8f6:	mov    ds:0x85380e8a,eax
  41c8fb:	shr    BYTE PTR [eax],0x33
  41c8fe:	fwait
  41c8ff:	add    edx,DWORD PTR [ecx+eax*2+0x5]
  41c903:	push   ebp
  41c904:	sub    ebp,DWORD PTR [ecx]
  41c906:	push   edi
  41c907:	in     al,0xd0
  41c909:	je     0x41c8a5
  41c90b:	cmp    cl,BYTE PTR [esi-0x3ffacab4]
  41c911:	je     0x41c8b5
  41c913:	jmp    0x91c:0xe4472b48
  41c91a:	pushf  
  41c91b:	pop    ss
  41c91c:	adc    al,0x1c
  41c91e:	or     eax,0xe11c0c54
  41c923:	fwait
  41c924:	stos   DWORD PTR es:[edi],eax
  41c925:	popf   
  41c926:	or     eax,0xb1
	...
  41c94f:	add    BYTE PTR [ecx-0x37],dl
  41c952:	jnp    0x41c954
  41c954:	hlt    
  41c955:	sbb    esi,ebp
  41c957:	fwait
  41c958:	dec    esi
  41c959:	sub    al,0xf6
  41c95b:	mov    al,0x31
  41c95d:	leave  
  41c95e:	lea    edi,[edx+0x7ae8fd0a]
  41c964:	pop    ebp
  41c966:	jno    0x41c93b
  41c968:	mov    edi,0xd653bd4b
  41c96d:	dec    ebx
  41c96e:	mov    cl,0x53
  41c970:	sbb    DWORD PTR [ecx-0x5a4a539e],esi
  41c976:	outs   dx,DWORD PTR ds:[esi]
  41c977:	inc    esi
  41c978:	fwait
  41c979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c97a:	cmp    edx,eax
  41c97c:	lods   al,BYTE PTR ds:[esi]
  41c97d:	cs or  eax,0x23899db1
  41c983:	aam    0x94
  41c985:	sbb    esp,edi
  41c987:	test   BYTE PTR [edi],cl
  41c989:	shr    eax,0x37
  41c98c:	pop    esp
  41c98d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c98e:	adc    ebx,eax
  41c990:	jge    0x41c9ad
  41c992:	mov    eax,ds:0x7e14ffb0
  41c997:	ss inc ebx
  41c999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c99a:	sbb    ecx,DWORD PTR [esp+eiz*2]
  41c99d:	sbb    edx,DWORD PTR [ecx+0x65a24a9b]
  41c9a3:	mov    al,0xd
  41c9a5:	loop   0x41c982
  41c9a7:	stos   DWORD PTR es:[edi],eax
  41c9a8:	cmp    eax,0x45b1398b
  41c9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9ae:	dec    ebp
  41c9af:	ss aaa 
  41c9b1:	mov    dl,0x2c
  41c9b3:	daa    
	...
  41c9dc:	xor    al,0xa5
  41c9de:	add    BYTE PTR [edx],0x4b
  41c9e1:	or     DWORD PTR [eax],eax
  41c9e3:	jmp    0xd6039c63
  41c9e8:	dec    eax
  41c9e9:	mov    edx,DWORD PTR ds:0xf174a473
  41c9f0:	mov    al,0x98
  41c9f2:	jno    0x41ca0a
  41c9f4:	mov    ebx,0x89aac92c
  41c9f9:	or     edi,edi
  41c9fb:	jl     0x41c9ed
  41c9fd:	lods   al,BYTE PTR ds:[esi]
  41c9fe:	cmp    al,0xb6
  41ca00:	dec    eax
  41ca01:	or     DWORD PTR [ebx],ecx
  41ca03:	sub    DWORD PTR ds:0x6205f0e,ebx
  41ca09:	or     eax,0x94faf00
  41ca0e:	call   DWORD PTR [edi+ecx*8-0x54]
  41ca12:	rcr    BYTE PTR [ebx-0xc],cl
  41ca15:	mov    ds:0x4a08a2be,eax
  41ca1a:	add    dh,al
  41ca1c:	jb     0x41ca2f
  41ca1e:	push   edi
  41ca1f:	rol    DWORD PTR [esi-0x25],1
  41ca22:	(bad)  
  41ca23:	call   0xe4b62ec9
  41ca28:	or     eax,0x48f1c1d2
  41ca2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca2e:	xor    ch,BYTE PTR [ecx-0x69015ce2]
  41ca34:	mov    ah,0x9a
  41ca36:	lods   eax,DWORD PTR ds:[esi]
  41ca37:	rol    DWORD PTR [ebp+0x1e],1
  41ca3a:	loopne 0x41c9c2
  41ca3c:	xor    dl,BYTE PTR [ecx]
  41ca3e:	call   0x41ca48
	...
  41ca67:	add    BYTE PTR [edx-0x5c],dh
  41ca6a:	(bad)  
  41ca6b:	loop   0x41c9f5
  41ca6d:	sbb    eax,0xca9e0e05
  41ca72:	pop    es
  41ca73:	jmp    0xa8846aa8
  41ca78:	dec    eax
  41ca79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca7a:	je     0x41ca5d
  41ca7c:	loopne 0x41ca4d
  41ca7e:	xor    al,0xe9
  41ca80:	dec    eax
  41ca81:	adc    al,al
  41ca83:	add    bh,dh
  41ca85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca86:	std    
  41ca87:	jne    0x41caa7
  41ca89:	and    eax,DWORD PTR [esp+ecx*4]
  41ca8c:	adc    al,0x4d
  41ca8e:	add    BYTE PTR [eax+0x24],ch
  41ca91:	dec    esp
  41ca92:	inc    ecx
  41ca93:	add    BYTE PTR [ebp-0x1e],ch
  41ca96:	pop    es
  41ca97:	call   0x406d0c
  41ca9c:	jmp    0x4d4b3e68
  41caa1:	loop   0x41caae
  41caa3:	(bad)  
  41caa4:	out    0x77,eax
  41caa6:	fs inc ecx
  41caa8:	loop   0x41caa9
  41caaa:	adc    al,0x44
  41caac:	mov    bl,0x7
  41caae:	push   DWORD PTR [ebp-0x16]
  41cab1:	jg     0x41ca49
  41cab3:	xor    eax,0xc00b07e2
  41cab8:	ja     0x41ca60
  41caba:	std    
  41cabb:	jne    0x41ca6b
  41cabd:	and    al,BYTE PTR [esp+edx*4]
  41cac0:	add    al,0x4e
  41cac2:	add    BYTE PTR [eax+0x7a3],bh
  41cac8:	dec    ebp
  41cac9:	data16 ror BYTE PTR [eax],0x0
	...
  41caf1:	add    BYTE PTR [eax],al
  41caf3:	add    BYTE PTR [edx+0x31ec8b40],dh
  41caf9:	int3   
  41cafa:	repnz push esi
  41cafc:	push   ebp
  41cafd:	add    eax,0xd6343c5
  41cb02:	push   DWORD PTR [ebp+0x6a]
  41cb05:	jg     0x41ca8b
  41cb07:	ss jb  0x41cb11
  41cb0a:	or     eax,eax
  41cb0c:	ja     0x41cb1b
  41cb0e:	pop    edi
  41cb0f:	pop    esi
  41cb10:	mov    ebx,0x320002c9
  41cb15:	and    bh,ch
  41cb17:	mov    ebp,DWORD PTR [edi-0x61]
  41cb1a:	jmp    0x3cc99120
  41cb1f:	add    BYTE PTR [edi+0x71],dh
  41cb22:	mov    ds:0x41f34b68,al
  41cb27:	inc    ecx
  41cb28:	dec    ebx
  41cb29:	push   ebx
  41cb2a:	cmp    BYTE PTR [eax],cl
  41cb2c:	and    edx,ecx
  41cb2e:	hlt    
  41cb2f:	jmp    FWORD PTR [eax+ebx*4]
  41cb32:	ret    0x4d74
  41cb35:	jnp    0x41cb83
  41cb37:	leave  
  41cb38:	or     DWORD PTR [ebp-0x676974fe],ebp
  41cb3e:	cdq    
  41cb3f:	and    ebx,ecx
  41cb41:	ret    
  41cb42:	sti    
  41cb43:	jae    0x41cba7
  41cb45:	xor    dh,ch
  41cb47:	or     al,0x77
  41cb49:	pushf  
  41cb4a:	cmp    BYTE PTR [esi],0x41
  41cb4d:	and    al,0xfe
  41cb4f:	jg     0x41cb7d
  41cb51:	addr16 ss or cl,bl
  41cb55:	pop    ebx
  41cb56:	dec    edi
  41cb57:	je     0x41cb59
	...
  41cb7d:	add    BYTE PTR [eax],al
  41cb7f:	add    BYTE PTR [esi+0x30],al
  41cb82:	out    dx,al
  41cb83:	pop    edi
  41cb84:	pop    esi
  41cb85:	scas   eax,DWORD PTR es:[edi]
  41cb86:	les    eax,FWORD PTR [esi]
  41cb88:	sub    ebp,ebx
  41cb8a:	cmp    DWORD PTR [esi],0x4b
  41cb8d:	inc    ebp
  41cb8e:	retf   
  41cb8f:	mov    BYTE PTR [esi],0xd4
  41cb92:	add    eax,DWORD PTR [eax]
  41cb94:	dec    ebx
  41cb95:	mov    al,0xc3
  41cb97:	inc    esp
  41cb98:	mov    bl,0xb0
  41cb9a:	add    al,BYTE PTR [eax]
  41cb9c:	dec    ebx
  41cb9d:	daa    
  41cb9e:	das    
  41cb9f:	or     BYTE PTR [eax+0x6c3e83e7],dh
  41cba5:	add    eax,0x840e82d9
  41cbaa:	add    esi,DWORD PTR [ebp+0x59]
  41cbad:	add    DWORD PTR [esi-0x8],0x4a
  41cbb1:	mov    al,0x2
  41cbb3:	add    dh,bh
  41cbb5:	stos   DWORD PTR es:[edi],eax
  41cbb6:	ret    
  41cbb7:	inc    esp
  41cbb8:	outs   dx,DWORD PTR ds:[esi]
  41cbb9:	mov    cl,0x2
  41cbbb:	add    BYTE PTR [ebx-0x79],cl
  41cbbe:	adc    bh,dh
  41cbc0:	push   es
  41cbc1:	sbb    BYTE PTR [ebx],al
  41cbc3:	add    BYTE PTR [ebx+0x9],cl
  41cbc6:	jmp    0xe60d0d01
  41cbcb:	jecxz  0x41cbda
  41cbcd:	dec    esp
  41cbce:	push   ebp
  41cbcf:	add    al,0x4b
  41cbd1:	or     ecx,ebp
  41cbd3:	xor    DWORD PTR [ebp+0x45],0xffffffbc
  41cbd7:	push   es
  41cbd8:	sub    al,0x4c
  41cbda:	inc    ecx
  41cbdb:	cdq    
  41cbdc:	dec    ebp
  41cbdd:	retf   0xabab
  41cbe0:	sbb    al,0xa2
  41cbe2:	call   0x41cbea
	...
  41cc0b:	add    al,cl
  41cc0d:	and    esp,DWORD PTR ds:0x27069603
  41cc13:	add    eax,0xed694a2b
  41cc18:	cld    
  41cc19:	sbb    al,0x59
  41cc1b:	jns    0x41cc94
  41cc1d:	adc    DWORD PTR [edx],edx
  41cc1f:	adc    bl,cl
  41cc21:	loope  0x41cbeb
  41cc23:	ss cmp eax,0x2b027589
  41cc29:	sbb    al,0xd9
  41cc2b:	push   esp
  41cc2c:	loopne 0x41cc38
  41cc2e:	jae    0x41cc74
  41cc30:	dec    edx
  41cc31:	xchg   ecx,eax
  41cc32:	in     eax,0x44
  41cc34:	retf   
  41cc35:	loope  0x41cc1f
  41cc37:	ss mov dh,0x41
  41cc3a:	push   ds
  41cc3b:	inc    ebp
  41cc3c:	retf   
  41cc3d:	loope  0x41cc27
  41cc3f:	ss mov ecx,cs
  41cc42:	and    edi,DWORD PTR [eax+0x3e8a1a4]
  41cc48:	rcr    BYTE PTR [ebx],1
  41cc4a:	loope  0x41ccc4
  41cc4c:	pop    ss
  41cc4d:	adc    DWORD PTR [edx-0x331df31f],edx
  41cc53:	ss addr16 retf 
  41cc56:	in     eax,dx
  41cc57:	add    edi,DWORD PTR [ebx+ebx*1-0x6b]
  41cc5b:	push   ebp
  41cc5c:	arpl   bp,bp
  41cc5e:	xchg   BYTE PTR [ebp+ebp*2+0x4d36a90d],ch
  41cc65:	inc    edx
  41cc66:	add    BYTE PTR [edi],dl
  41cc68:	mov    al,ds:0xd3e903c7
  41cc6d:	call   0x0:0x6645
	...
  41cc98:	add    eax,0x3769469d
  41cc9d:	mov    eax,ds:0x15ef3073
  41cca2:	hlt    
  41cca3:	mov    bh,0xd0
  41cca5:	adc    al,0xfe
  41cca7:	inc    esi
  41cca8:	fistp  QWORD PTR [edi]
  41ccaa:	pop    esi
  41ccab:	xor    BYTE PTR [edx],cl
  41ccad:	or     eax,0xb4a39c00
  41ccb2:	and    BYTE PTR ds:0x6a5736d0,0x5d
  41ccb9:	cmc    
  41ccba:	call   DWORD PTR [ecx+eax*1+0x21f03c8c]
  41ccc1:	dec    edx
  41ccc2:	add    cl,ch
  41ccc4:	cmp    eax,0xb1a75f07
  41ccc9:	retf   0xe90f
  41cccc:	arpl   WORD PTR [ebp+0x14],ax
  41cccf:	mov    al,0x45
  41ccd1:	lea    esp,[ebp-0x58]
  41ccd4:	dec    eax
  41ccd5:	adc    BYTE PTR [ebx+0x9468a],al
  41ccdb:	and    BYTE PTR [edx+0x79],cl
  41ccde:	sub    BYTE PTR gs:[edi+0x10],al
  41cce2:	xor    DWORD PTR [esi+0x4e],0x9
  41cce6:	add    BYTE PTR [eax],al
  41cce8:	dec    edx
  41cce9:	jne    0x41cd50
  41cceb:	sub    BYTE PTR [edi+0x10],cl
  41ccee:	and    DWORD PTR [edx+0x46],0x9
  41ccf2:	add    BYTE PTR [edx+ecx*1-0x6b],bl
  41ccf6:	dec    edi
  41ccf7:	je     0x41cd03
  41ccf9:	mov    eax,ds:0x6c4f
	...
  41cd22:	add    BYTE PTR [eax],al
  41cd24:	or     bl,BYTE PTR [ebp-0x6b8569b1]
  41cd2a:	sub    BYTE PTR gs:[edi-0x60],cl
  41cd2e:	je     0x41cd30
  41cd30:	xchg   edx,eax
  41cd31:	test   BYTE PTR [eax+edi*8+0x458b73e5],bh
  41cd38:	retf   0x8d35
  41cd3b:	inc    ebp
  41cd3c:	(bad)  
  41cd3d:	xor    al,0x8d
  41cd3f:	inc    ebp
  41cd40:	repnz xor al,0xff
  41cd43:	xor    eax,0x40ebbe
  41cd48:	xchg   ebp,eax
  41cd49:	fimul  DWORD PTR [edi]
  41cd4b:	call   0x3f3a1e
  41cd50:	mov    bh,0x4a
  41cd52:	fcom   QWORD PTR [eax-0x49]
  41cd55:	dec    edx
  41cd56:	loopne 0x41cda8
  41cd58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd59:	dec    edx
  41cd5a:	in     al,0x50
  41cd5c:	gs call 0x75ff:0xbe3668e
  41cd64:	add    al,BYTE PTR [eax+ecx*4-0x28baa08]
  41cd6b:	jne    0x41cdbb
  41cd6d:	and    al,0x44
  41cd6f:	aam    0x45
  41cd71:	fcmovu st,st(3)
  41cd73:	(bad)  
  41cd74:	scas   eax,DWORD PTR es:[edi]
  41cd75:	rol    ebp,cl
  41cd77:	inc    ebp
  41cd78:	inc    edx
  41cd79:	add    eax,0x20e20000
  41cd7e:	inc    esp
  41cd7f:	int3   
  41cd80:	adc    bh,bh
  41cd82:	add    BYTE PTR [edx-0x4e],ch
  41cd85:	std    
  41cd86:	jmp    FWORD PTR [ecx+0x0]
	...
  41cdad:	add    BYTE PTR [eax],al
  41cdaf:	add    BYTE PTR [edx+0x6f8cfffd],dh
  41cdb5:	mov    ecx,0xc8fff4e
  41cdba:	sub    DWORD PTR [ecx-0x4e],eax
  41cdbd:	sahf   
  41cdbe:	mov    esi,0xff9e2e0f
  41cdc3:	jmp    DWORD PTR [edx-0x5d2f847a]
  41cdc9:	mov    ds:0xb730082,al
  41cdce:	add    BYTE PTR [ebx+0x3ab7e54b],cl
  41cdd4:	push   es
  41cdd5:	xchg   cl,bh
  41cdd7:	xchg   BYTE PTR [edi-0x4f],dh
  41cdda:	add    al,BYTE PTR [eax]
  41cddc:	sbb    dh,BYTE PTR [bx+si]
  41cddf:	rcl    al,1
  41cde1:	xchg   esp,eax
  41cde2:	(bad)  
  41cde3:	mov    al,BYTE PTR [esi]
  41cde5:	jle    0x41cd8c
  41cde7:	add    DWORD PTR [eax-0x73],ebx
  41cdea:	test   eax,0x40301774
  41cdef:	in     al,0x3c
  41cdf1:	mov    esi,0x314e7d2
  41cdf6:	add    al,0x0
  41cdf8:	enter  0xa6c5,0xff
  41cdfc:	push   ebp
  41cdfd:	and    al,0xb9
  41cdff:	call   FWORD PTR [ecx+esi*4]
  41ce02:	test   DWORD PTR [ebx+ebx*1-0x4f],edi
  41ce06:	stc    
  41ce07:	add    DWORD PTR [edi],0xffffffb1
  41ce0a:	add    al,BYTE PTR [eax]
  41ce0c:	enter  0x9e7d,0xff
  41ce10:	dec    ebp
  41ce11:	sub    al,0x6d
  41ce13:	inc    DWORD PTR [eax]
	...
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    ah,dh
  41ce3d:	mov    al,0xa9
  41ce3f:	je     0x41ce30
  41ce41:	clc    
  41ce42:	ins    BYTE PTR es:[edi],dx
  41ce43:	pusha  
  41ce44:	in     al,0x9f
  41ce46:	jp     0x41ce8c
  41ce48:	adc    ebx,DWORD PTR [eax+0x15d4fc2e]
  41ce4e:	mov    ebx,0x9bbc56fe
  41ce53:	fild   QWORD PTR [edx]
  41ce55:	mov    edi,0xec6767a8
  41ce5a:	inc    edx
  41ce5b:	add    BYTE PTR [ebx-0x530009c4],ah
  41ce61:	add    BYTE PTR [esp],bl
  41ce64:	psllw  mm0,QWORD PTR [ebx]
  41ce67:	call   DWORD PTR [esi]
  41ce69:	push   0xb05f2d9b
  41ce6e:	add    cl,BYTE PTR [ebx]
  41ce70:	mov    ecx,DWORD PTR [ecx]
  41ce72:	sbb    eax,0x24f1f30c
  41ce77:	inc    ebx
  41ce78:	dec    ebx
  41ce79:	mov    cl,0x18
  41ce7b:	div    BYTE PTR [esi+ebx*4+0x38]
  41ce7f:	sbb    al,0x20
  41ce81:	inc    ebp
  41ce82:	sub    BYTE PTR [esp+eiz*2],al
  41ce85:	adc    al,0xb1
  41ce87:	pushf  
  41ce88:	cmp    dl,ch
  41ce8a:	call   0xf50b0e92
  41ce8f:	or     esp,ebx
  41ce91:	fldcw  WORD PTR [edx+eax*2-0xa4b4eb5]
  41ce98:	cmp    al,0x9e
  41ce9a:	mov    eax,0xa845781b
  41ce9f:	add    eax,DWORD PTR [eax]
	...
  41cec5:	add    BYTE PTR [eax],al
  41cec7:	add    BYTE PTR [esp+edx*1],ch
  41ceca:	xor    DWORD PTR [esi+ebx*1+0x5003e8da],ebx
  41ced1:	leave  
  41ced2:	mov    ebx,0xe909a33e
  41ced7:	cwde   
  41ced8:	into   
  41ced9:	popf   
  41ceda:	fwait
  41cedb:	imul   esp
  41cedd:	bound  edi,QWORD PTR [ebx-0x24620258]
  41cee3:	jnp    0x41cf53
  41cee5:	dec    eax
  41cee6:	jmp    0x114f4693
  41ceeb:	pop    eax
  41ceec:	xchg   DWORD PTR [esi-0x62a85703],ebx
  41cef2:	cmc    
  41cef3:	fistp  WORD PTR cs:[ebp-0x4b1b088d]
  41cefa:	inc    ebx
  41cefb:	test   eax,0xb4539dc5
  41cf00:	mov    ebp,0x3fa8c113
  41cf05:	or     eax,0x9e0fc1c1
  41cf0a:	lds    ebp,FWORD PTR [eax+0x2ebda51f]
  41cf10:	jg     0x41ceaf
  41cf12:	(bad)  
  41cf13:	cmp    edx,DWORD PTR [ebx-0x1df3485b]
  41cf19:	sahf   
  41cf1a:	(bad)  
  41cf1b:	sbb    al,0xc7
  41cf1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf1e:	lock or DWORD PTR [edx-0x4fc8a162],esi
  41cf25:	(bad)  
  41cf26:	psubsw mm7,mm5
  41cf29:	xchg   ecx,eax
  41cf2a:	jmp    0x41cf96
	...
  41cf54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf56:	cmp    ah,0x4c
  41cf59:	add    al,0xf
  41cf5b:	ins    BYTE PTR es:[edi],dx
  41cf5c:	aas    
  41cf5d:	or     BYTE PTR [eax],al
  41cf5f:	jmp    0xba361439
  41cf64:	mov    ebp,0xb5b9f845
  41cf69:	inc    ebp
  41cf6a:	cld    
  41cf6b:	mov    ecx,0xd4ff0756
  41cf70:	pop    eax
  41cf71:	mov    cl,0x20
  41cf73:	ds repz fwait
  41cf76:	cmp    BYTE PTR [eax+esi*8-0x2093f0f7],0x9c
  41cf7e:	(bad)  
  41cf7f:	jmp    0x7735e567
  41cf84:	inc    ebp
  41cf85:	cdq    
  41cf86:	addr16 adc eax,0x16004a87
  41cf8c:	and    eax,0xf6c3e799
  41cf91:	pushf  
  41cf92:	(bad)  
  41cf93:	repnz or BYTE PTR [eax*4+0x94821],cl
  41cf9b:	fs adc eax,0xd5c4f95
  41cfa1:	mov    eax,ds:0x9d0a744f
  41cfa6:	dec    edi
  41cfa7:	push   ebx
  41cfa8:	inc    edi
  41cfa9:	pushf  
  41cfaa:	je     0x41cfa5
  41cfac:	shl    BYTE PTR [esi-0x781b310b],1
  41cfb2:	jl     0x41cfb4
  41cfb4:	mov    al,BYTE PTR [esi]
  41cfb6:	jne    0x41cfbc
	...
  41cfe0:	retf   0x5
  41cfe3:	add    ch,bl
  41cfe5:	(bad)  
  41cfe7:	push   0x41481d
  41cfec:	ficom  DWORD PTR [esi-0x608dffd0]
  41cff2:	mov    esi,0xff27e70f
  41cff7:	jmp    DWORD PTR [edx+0x21]
  41cffa:	inc    esp
  41cffb:	hlt    
  41cffc:	inc    edx
  41cffd:	and    al,BYTE PTR [eax+edi*8+0x42]
  41d001:	and    al,BYTE PTR [esp+edi*8+0x32]
  41d005:	inc    DWORD PTR [edx]
  41d007:	call   DWORD PTR [edi-0x8]
  41d00a:	out    0xb1,eax
  41d00c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d00d:	fs std 
  41d00f:	sbb    DWORD PTR [edi],0x70
  41d012:	dec    BYTE PTR [esi]
  41d014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d015:	mov    dh,bh
  41d017:	jmp    DWORD PTR [edx]
  41d019:	pop    ds
  41d01a:	inc    esp
  41d01b:	hlt    
  41d01c:	lea    edx,[ebp+0x228e458d]
  41d022:	inc    esp
  41d023:	hlt    
  41d024:	mov    dl,0x20
  41d026:	inc    esp
  41d027:	clc    
  41d028:	mov    dl,0x20
  41d02a:	inc    esp
  41d02b:	cld    
  41d02c:	ret    0x401
  41d02f:	call   edi
  41d031:	mul    edi
  41d033:	mov    DWORD PTR [esp+eiz*2-0x3],edx
  41d037:	cmp    DWORD PTR [edi-0x528b0091],0x5a
  41d03e:	add    ecx,DWORD PTR [esp+eax*8+0xff0044]
	...
  41d069:	add    BYTE PTR [eax],al
  41d06b:	add    ch,bl
  41d06d:	(bad)  
  41d06e:	std    
  41d06f:	(bad)  
  41d070:	out    0x77,eax
  41d072:	fs inc ecx
  41d074:	mov    dl,0x62
  41d076:	std    
  41d077:	call   FWORD PTR [ebp+0x4b94035a]
  41d07d:	dec    esp
  41d07e:	inc    ebp
  41d07f:	add    BYTE PTR [edx+ecx*8-0x235b015b],ch
  41d086:	scas   eax,DWORD PTR es:[edi]
  41d087:	out    0x49,eax
  41d089:	pop    esi
  41d08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d08b:	dec    BYTE PTR [esp+ebp*8-0x4db4ff65]
  41d092:	add    al,BYTE PTR [ebx+0x411d1646]
  41d098:	dec    ebx
  41d099:	jnp    0x41d0c9
  41d09b:	sub    eax,ecx
  41d09d:	mov    ah,0x92
  41d09f:	or     dh,BYTE PTR gs:[edx+0x2f2b73a5]
  41d0a6:	call   0x432b63e
  41d0ab:	(bad)  
  41d0ac:	fistp  QWORD PTR [edx-0xe690fe6]
  41d0b2:	add    ecx,DWORD PTR [ebp-0xacc772]
  41d0b8:	mov    dh,0x4c
  41d0ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0bb:	je     0x41d104
  41d0bd:	xor    esi,DWORD PTR [eax]
  41d0bf:	or     BYTE PTR [ebx],ah
  41d0c1:	test   eax,0xda24feaa
  41d0c6:	ror    BYTE PTR [edi],0x4b
  41d0c9:	jne    0x41d144
  41d0cb:	jmp    0x41d095
  41d0cd:	in     al,dx
  41d0ce:	xchg   esi,eax
  41d0cf:	inc    BYTE PTR [eax]
	...
  41d0f5:	add    BYTE PTR [eax],al
  41d0f7:	add    BYTE PTR [esi-0x5d636558],dl
  41d0fd:	jecxz  0x41d0a4
  41d0ff:	imul   ebx,DWORD PTR [ebx+0x2d],0xf39bf040
  41d106:	das    
  41d107:	or     bl,ah
  41d109:	xchg   ebx,eax
  41d10a:	dec    edx
  41d10b:	jmp    esp
  41d10d:	xchg   edi,eax
  41d10e:	ret    0x4774
  41d111:	fld    st(0)
  41d113:	pop    es
  41d114:	dec    ebx
  41d115:	xchg   BYTE PTR [edx],dl
  41d117:	push   0x436f9c
  41d11c:	(bad)  
  41d11d:	or     DWORD PTR [esp+esi*4],ebp
  41d120:	or     al,0xb1
  41d122:	aad    0x45
  41d124:	mov    ah,0x9a
  41d126:	loope  0x41d0eb
  41d128:	aaa    
  41d129:	add    eax,0x94cc2a0
  41d12e:	scas   al,BYTE PTR es:[edi]
  41d12f:	aas    
  41d130:	scas   eax,DWORD PTR es:[edi]
  41d131:	or     cl,ch
  41d133:	add    ecx,DWORD PTR [ebx-0x74]
  41d136:	sub    ebx,DWORD PTR [eax-0x3cc6604]
  41d13c:	ins    BYTE PTR es:[edi],dx
  41d13d:	in     al,0x42
  41d13f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d140:	jge    0x41d150
  41d142:	test   eax,0x13864d30
  41d147:	cwde   
  41d148:	ins    BYTE PTR es:[edi],dx
  41d149:	adc    eax,0xd0a4d8e7
  41d14e:	stos   BYTE PTR es:[edi],al
  41d14f:	cld    
  41d150:	pop    esp
  41d151:	dec    edx
  41d152:	sar    BYTE PTR [edx-0x6367fb9f],cl
  41d158:	fld    DWORD PTR [edi]
  41d15a:	sub    cl,bh
	...
  41d184:	add    al,0x14
  41d186:	pop    esi
  41d187:	dec    esp
  41d188:	enter  0xe7a0,0x2e
  41d18c:	dec    esi
  41d18d:	popa   
  41d18e:	call   0x6a4b1b96
  41d193:	stos   DWORD PTR es:[edi],eax
  41d194:	dec    ebx
  41d195:	adc    eax,0xcfdcd8ef
  41d19a:	sub    bh,ah
  41d19c:	adc    al,0x67
  41d19e:	ins    BYTE PTR es:[edi],dx
  41d19f:	push   ds
  41d1a0:	mov    cl,BYTE PTR [ecx]
  41d1a2:	pop    esp
  41d1a3:	aas    
  41d1a4:	idiv   DWORD PTR [eax]
  41d1a6:	es das 
  41d1a8:	push   ebx
  41d1a9:	mov    cl,0xeb
  41d1ab:	dec    ecx
  41d1ac:	hlt    
  41d1ad:	cdq    
  41d1ae:	imul   ebp,DWORD PTR [ebx+ecx*2-0x237f1beb],0xc9fd7c06
  41d1b9:	sbb    ecx,DWORD PTR ds:0x35e04
  41d1bf:	ret    0xd108
  41d1c2:	shl    ecx,0x48
  41d1c5:	mov    WORD PTR [ebp+edx*8+0x18],es
  41d1c9:	call   0xd658:0xaed0f174
  41d1d0:	out    0x86,eax
  41d1d2:	imul   eax
  41d1d4:	je     0x41d1da
  41d1d6:	add    ecx,0x4a
  41d1d9:	adc    al,0x6
  41d1db:	push   0x6d
  41d1dd:	lods   eax,DWORD PTR ds:[esi]
  41d1de:	(bad)  
  41d1df:	cmp    ecx,DWORD PTR [ebp-0x755f4012]
  41d1e5:	add    DWORD PTR [eax],eax
  41d1e7:	je     0x41d1e9
	...
  41d20d:	add    BYTE PTR [eax],al
  41d20f:	add    BYTE PTR ds:0x259e4fad,bh
  41d215:	adc    eax,ebp
  41d217:	mov    al,ds:0xe2fe9a01
  41d21c:	mov    BYTE PTR [esi+eax*1],dl
  41d21f:	push   0x25
  41d221:	lods   eax,DWORD PTR ds:[esi]
  41d222:	push   ebx
  41d224:	push   esi
  41d225:	out    dx,al
  41d226:	mov    edi,0x18aa0
  41d22b:	pop    esp
  41d22c:	test   DWORD PTR [ebp+0x16d664f],esp
  41d232:	call   0xfeda53c3
  41d237:	push   0xffffffe0
  41d239:	fdiv   DWORD PTR [edi+eiz*8-0x35]
  41d23d:	adc    eax,0xf6de9ec
  41d242:	sub    ebp,DWORD PTR [ecx]
  41d244:	ror    edx,1
  41d246:	pop    es
  41d247:	jmp    0x9a2e1fe1
  41d24c:	scas   eax,DWORD PTR es:[edi]
  41d24d:	sbb    eax,0x31d81108
  41d252:	call   FWORD PTR [esi]
  41d254:	retf   
  41d255:	mov    al,ds:0x8bee9c1f
  41d25a:	jl     0x41d259
  41d25c:	dec    ecx
  41d25d:	push   ds
  41d25e:	push   es
  41d25f:	add    cl,bh
  41d261:	int3   
  41d262:	mov    edx,0x458d0cda
  41d268:	inc    esi
  41d269:	cmp    al,0xff
  41d26b:	jne    0x41d217
  41d26d:	je     0x41d2e0
  41d26f:	pop    ecx
  41d270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d271:	ins    BYTE PTR es:[edi],dx
  41d272:	cmp    eax,0x0
	...
  41d29c:	inc    edx
  41d29d:	repnz add eax,0xfe591783
  41d2a3:	je     0x41d251
  41d2a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2a6:	mov    esi,0x5f0c9
  41d2ab:	lea    ebp,[edi+0x59]
  41d2ae:	dec    esi
  41d2af:	push   0x42
  41d2b1:	ins    BYTE PTR es:[edi],dx
  41d2b2:	jae    0x41d2bc
  41d2b4:	mov    ch,ah
  41d2b6:	pop    eax
  41d2b7:	jmp    DWORD PTR [ebp+0x32ec437a]
  41d2bd:	ins    BYTE PTR es:[edi],dx
  41d2be:	jae    0x41d2c8
  41d2c0:	retf   0x565c
  41d2c3:	call   ebp
  41d2c5:	nop
  41d2c6:	test   BYTE PTR [ecx],0x60
  41d2c9:	pop    es
  41d2ca:	cmp    eax,0x61
  41d2cd:	repz add eax,0xfe685783
  41d2d3:	je     0x41d301
  41d2d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2d6:	mov    esi,0x570c9
  41d2db:	mov    ds:0x40e3ba,eax
  41d2e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2e1:	inc    edx
  41d2e2:	in     al,dx
  41d2e3:	push   eax
  41d2e4:	or     BYTE PTR [ebp+edi*8+0x48641a75],ah
  41d2eb:	pop    ecx
  41d2ec:	push   ebp
  41d2ed:	ins    BYTE PTR es:[edi],dx
  41d2ee:	lds    cx,DWORD PTR [ebp-0x5072ffb3]
  41d2f5:	addr16 dec esi
  41d2f7:	push   0xfffffff3
  41d2f9:	push   0x73
  41d2fb:	or     al,0x55
  41d2fd:	repnz pop es
  41d2ff:	call   0x41d304
	...
  41d328:	dec    ebx
  41d329:	mov    ds,WORD PTR [eax-0x3a171b02]
  41d32f:	pop    es
  41d330:	dec    ebx
  41d331:	jne    0x41d2c0
  41d333:	jmp    0x41d2fd
  41d335:	in     eax,dx
  41d336:	lahf   
  41d337:	mov    WORD PTR [esi+0x32e8329e],es
  41d33d:	jge    0x41d2e0
  41d33f:	(bad)  
  41d340:	mov    esp,0x3efea034
  41d345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d346:	stos   BYTE PTR es:[edi],al
  41d347:	dec    esi
  41d348:	adc    al,0xbf
  41d34a:	mov    eax,ds:0x133d8b0a
  41d34f:	call   DWORD PTR [esi]
  41d351:	call   0xfddd:0xb99774a1
  41d358:	mov    WORD PTR [esi+0xd],ds
  41d35b:	sar    dh,0xa1
  41d35e:	mov    eax,ds:0x22797f74
  41d363:	push   ebp
  41d364:	je     0x41d3dc
  41d366:	retf   
  41d367:	sar    DWORD PTR [edi],0xa2
  41d36a:	aaa    
  41d36b:	mov    esi,DWORD PTR [edi-0x7a]
  41d36e:	pop    ss
  41d36f:	or     al,0x73
  41d371:	push   edx
  41d372:	and    al,0xff
  41d374:	push   esp
  41d375:	call   0x1018:0x1f2873c2
  41d37c:	fwait
  41d37d:	mov    ah,cl
  41d37f:	pusha  
  41d380:	cmp    al,0x30
  41d382:	xor    ebp,DWORD PTR [eax-0x3d]
  41d385:	push   0x42
  41d387:	add    BYTE PTR [esi+esi*4],ch
  41d38a:	cli    
  41d38b:	inc    BYTE PTR [eax]
	...
  41d3b1:	add    BYTE PTR [eax],al
  41d3b3:	add    BYTE PTR [esi-0x6900cd64],bl
  41d3b9:	cwde   
  41d3ba:	stos   BYTE PTR es:[edi],al
  41d3bb:	in     eax,0xcb
  41d3bd:	xlat   BYTE PTR ds:[ebx]
  41d3be:	mov    eax,ds:0xa17dcee7
  41d3c3:	(bad)  
  41d3c4:	adc    ah,bl
  41d3c6:	idiv   bh
  41d3c8:	xchg   edi,eax
  41d3c9:	or     DWORD PTR [edx-0x51],esi
  41d3cc:	ins    BYTE PTR es:[edi],dx
  41d3cd:	or     ecx,ebp
  41d3cf:	mov    dl,0xae
  41d3d1:	and    DWORD PTR [edx+0x46],esi
  41d3d4:	mov    cl,BYTE PTR [ecx]
  41d3d6:	push   cs
  41d3d7:	sbb    BYTE PTR [edi+0x23],cl
  41d3da:	jecxz  0x41d37e
  41d3dc:	pop    edi
  41d3dd:	add    DWORD PTR [ecx],edx
  41d3df:	push   ebx
  41d3e0:	int    0x96
  41d3e2:	cmc    
  41d3e3:	sub    cl,BYTE PTR [ebx+0x9]
  41d3e6:	(bad)  
  41d3e7:	pusha  
  41d3e8:	and    al,0x6d
  41d3ea:	sub    DWORD PTR [ebx+0x4b],eax
  41d3ed:	xchg   esi,eax
  41d3ee:	push   ebx
  41d3ef:	adc    BYTE PTR [ecx],ah
  41d3f1:	repz aad 0x17
  41d3f4:	push   ebx
  41d3f5:	mov    eax,ds:0x969da16f
  41d3fa:	push   eax
  41d3fb:	add    al,0x4b
  41d3fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3fe:	jle    0x41d42c
  41d400:	mov    al,0x4a
  41d402:	sub    BYTE PTR [esp+eax*4],al
  41d405:	sbb    al,0xdd
  41d407:	sub    eax,0xc1b965f
  41d40c:	arpl   WORD PTR [ebx+0x216da19d],cx
  41d412:	jmp    0x99481a
  41d417:	push   0x0
	...
  41d440:	or     DWORD PTR [eax-0x17],ecx
  41d443:	mov    al,ds:0x1304df
  41d448:	dec    esp
  41d449:	sbb    al,0xe1
  41d44b:	stos   DWORD PTR es:[edi],eax
  41d44c:	mov    cl,0x96
  41d44e:	ins    DWORD PTR es:[edi],dx
  41d44f:	mov    eax,ds:0xb0e909a4
  41d454:	mul    BYTE PTR [eax]
  41d456:	add    BYTE PTR [ebp-0x76],0x9
  41d45a:	push   esi
  41d45b:	pop    ss
  41d45c:	push   edi
  41d45d:	and    ecx,DWORD PTR [edx]
  41d45f:	mov    eax,ds:0x38510197
  41d464:	adc    al,0x96
  41d466:	cmp    eax,0x94b2c
  41d46b:	inc    esi
  41d46c:	imul   ebp,DWORD PTR [esi],0x989aaa4
  41d472:	call   FWORD PTR [esp+eax*2+0x541e2323]
  41d479:	add    eax,ebp
  41d47b:	aam    0xab
  41d47d:	xchg   esi,eax
  41d47e:	(bad)  
  41d47f:	and    BYTE PTR ds:0xc79c000e,al
  41d485:	mov    eax,ds:0x1fab2582
  41d48a:	add    BYTE PTR [ebx-0x1e8b6962],al
  41d490:	lock inc ebx
  41d492:	pop    edx
  41d493:	out    0xeb,al
  41d495:	add    BYTE PTR [ebp+ebx*8+0x60],0xd5
  41d49a:	inc    ebx
  41d49b:	sub    BYTE PTR [edi-0x6a],cl
  41d49e:	je     0x41d481
  41d4a0:	lock inc esp
  41d4a2:	inc    esi
	...
  41d4cc:	jmp    0x41d464
  41d4ce:	je     0x41d48d
  41d4d0:	jmp    0x41d4ee
  41d4d2:	or     cl,al
  41d4d4:	popa   
  41d4d5:	xor    edi,edi
  41d4d7:	scas   al,BYTE PTR es:[edi]
  41d4d8:	xchg   ecx,eax
  41d4d9:	mov    DWORD PTR [ebx],0xeb823de9
  41d4df:	push   0xffffff84
  41d4e1:	xchg   ecx,eax
  41d4e2:	imul   ebp,ecx,0x14feda36
  41d4e8:	dec    edi
  41d4e9:	mov    eax,ds:0x96aa231c
  41d4ee:	mov    BYTE PTR [ebx+ebp*4],ah
  41d4f1:	sub    eax,0x9882d4b
  41d4f6:	push   esp
  41d4f8:	push   eax
  41d4f9:	mov    eax,ds:0x93eb661b
  41d4fe:	(bad)  
  41d4ff:	aam    0xcc
  41d501:	xchg   ebx,eax
  41d502:	je     0x41d4e5
  41d504:	lock dec esp
  41d506:	pop    edx
  41d507:	dec    esi
  41d508:	jmp    0x41d4cb
  41d50a:	rol    DWORD PTR [eax],0x26
  41d50d:	or     DWORD PTR [ebp-0x75],edx
  41d510:	jle    0x41d49f
  41d512:	ret    0x8f8
  41d515:	or     DWORD PTR [edx+0x34],ebp
  41d518:	sub    eax,0x5ee807fb
  41d51d:	iret   
  41d51e:	(bad)  
  41d51f:	(bad)  
  41d520:	jnp    0x41d56d
  41d522:	cld    
  41d523:	push   0x414ca7
  41d528:	dec    ebp
  41d529:	sti    
  41d52a:	pop    es
  41d52b:	call   0x3f3f69
	...
  41d558:	mov    eax,0xf6756808
  41d55d:	inc    edi
  41d55e:	add    BYTE PTR [eax-0x2d],ch
  41d561:	dec    esp
  41d562:	inc    ecx
  41d563:	add    BYTE PTR [ebp+0x632935b2],ch
  41d569:	or     eax,0x745da5e8
  41d56e:	std    
  41d56f:	or     esi,edx
  41d571:	icebp  
  41d572:	mov    DWORD PTR ds:[edi+0x75],esp
  41d576:	data16 mov al,cl
  41d579:	dec    ebp
  41d57a:	add    BYTE PTR [eax+0x72],ch
  41d57d:	or     bh,ch
  41d57f:	mov    esi,0x4142100a
  41d584:	bound  esi,QWORD PTR [ebx+0x73]
  41d587:	clc    
  41d588:	int    0xf2
  41d58a:	pop    es
  41d58b:	call   0x40c972
  41d590:	dec    edx
  41d591:	test   DWORD PTR [eax-0x1f9dc0],edi
  41d597:	(bad)  
  41d598:	mov    ebp,0x71a46733
  41d59d:	dec    esi
  41d59e:	add    bh,bh
  41d5a0:	aaa    
  41d5a1:	jo     0x41d5a0
  41d5a3:	jne    0x41d5df
  41d5a5:	pusha  
  41d5a6:	je     0x41d627
  41d5a8:	lea    esi,[ebp+edi*8+0x75]
  41d5ac:	dec    ebx
  41d5ad:	cmp    ch,BYTE PTR [ecx+ecx*2-0x160bc81]
  41d5b4:	sahf   
  41d5b5:	dec    esi
  41d5b6:	lahf   
  41d5b7:	je     0x41d5fc
  41d5b9:	cmp    ah,BYTE PTR [ecx+0x58]
	...
  41d5e4:	add    al,0xdb
  41d5e6:	int3   
  41d5e7:	rol    DWORD PTR [edi-0x5e],0x37
  41d5eb:	mov    esp,edi
  41d5ed:	push   ds
  41d5ee:	enter  0x61fb,0xa2
  41d5f2:	sub    BYTE PTR ds:0xe80a74e4,dh
  41d5f8:	push   0x59
  41d5fa:	popf   
  41d5fb:	inc    dl
  41d5fd:	fs sahf 
  41d5ff:	addr16 retf 0x436d
  41d603:	add    ah,al
  41d605:	adc    al,0xb
  41d607:	call   0xfedf7a37
  41d60c:	mov    ah,0x34
  41d60e:	mov    al,ds:0xaa9a36fe
  41d613:	mov    eax,DWORD PTR [edx]
  41d615:	mov    ebx,0xad89c89d
  41d61a:	add    dl,BYTE PTR [ebp-0x40]
  41d61d:	mov    ebp,0x378fc381
  41d622:	add    al,0x6a
  41d624:	cmp    eax,0x7308175b
  41d629:	xchg   ecx,eax
  41d62a:	cmp    edi,edi
  41d62c:	je     0x41d646
  41d62e:	dec    eax
  41d62f:	cld    
  41d630:	jecxz  0x41d649
  41d632:	inc    edi
  41d633:	inc    ecx
  41d634:	dec    ebx
  41d635:	jnp    0x41d64e
  41d637:	or     BYTE PTR [ebx+0x52],dh
  41d63a:	pushf  
  41d63b:	(bad)  
  41d63c:	push   esp
  41d63d:	mov    dl,BYTE PTR [edi]
  41d63f:	cld    
  41d640:	dec    esp
  41d641:	pushf  
  41d642:	or     ch,al
  41d644:	mov    al,ds:0xfe9ef9
	...
  41d66d:	add    BYTE PTR [eax],al
  41d66f:	add    BYTE PTR [edx],dl
  41d671:	pop    edi
  41d672:	push   es
  41d673:	add    BYTE PTR [esi-0x36508df7],bl
  41d679:	int    0x5c
  41d67b:	sub    DWORD PTR [ebx+0x1f],ecx
  41d67e:	push   ds
  41d67f:	lahf   
  41d680:	xchg   edi,eax
  41d681:	add    DWORD PTR [ecx-0x62],eax
  41d684:	jl     0x41d618
  41d686:	inc    ebp
  41d687:	mov    WORD PTR [edi-0x77882f6b],es
  41d68d:	dec    eax
  41d68e:	jmp    0x41434e31
  41d693:	popf   
  41d694:	not    DWORD PTR [edx-0x6a8861db]
  41d69a:	sbb    eax,0xc2a15318
  41d69f:	cmp    al,0xdc
  41d6a1:	xchg   edx,eax
  41d6a2:	pop    ds
  41d6a3:	ror    DWORD PTR [eax+0x9],0x9c
  41d6a7:	mov    ah,al
  41d6a9:	xchg   BYTE PTR [edi+ebx*4],ah
  41d6ac:	xor    cl,BYTE PTR [ecx]
  41d6ae:	sbb    ebx,0xffffffbd
  41d6b1:	sbb    al,0xe1
  41d6b3:	stos   DWORD PTR es:[edi],eax
  41d6b4:	xchg   BYTE PTR [ecx],dh
  41d6b6:	out    0x9d,al
  41d6b8:	ret    
  41d6b9:	dec    esp
  41d6ba:	(bad)  [edi+eax*8]
  41d6bd:	dec    ebp
  41d6be:	sub    BYTE PTR [esp+ebx*4],al
  41d6c1:	sbb    al,0xe1
  41d6c3:	stos   DWORD PTR es:[edi],eax
  41d6c4:	xchg   DWORD PTR [ebp+eax*8-0x42e37263],edx
  41d6cb:	popf   
  41d6cc:	inc    DWORD PTR [eax]
  41d6ce:	rcr    DWORD PTR [ebx-0x34526dec],0x0
	...
  41d6f9:	add    BYTE PTR [eax],al
  41d6fb:	add    BYTE PTR [edx-0x3fc916f3],cl
  41d701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d702:	popf   
  41d703:	pop    ss
  41d704:	push   edi
  41d705:	mov    eax,ds:0x925c3d51
  41d70a:	loope  0x41d6cf
  41d70c:	fdiv   st,st(3)
  41d70e:	adc    BYTE PTR [ebp+0x8],ch
  41d711:	dec    eax
  41d712:	jmp    0x7b0a4a
  41d717:	push   ss
  41d718:	ficom  WORD PTR [edx-0x6a391b1]
  41d71e:	dec    edi
  41d71f:	push   sp
  41d721:	add    eax,ebp
  41d723:	push   esi
  41d724:	fst    QWORD PTR [edx+0x2e9241fe]
  41d72a:	dec    DWORD PTR [esi+0x0]
  41d72d:	enter  0xe90b,0x55
  41d731:	jle    0x41d71e
  41d733:	push   0x13
  41d735:	call   0x2e39:0x1f48c356
  41d73c:	pop    esp
  41d73d:	add    eax,ebp
  41d73f:	xchg   ebp,eax
  41d740:	xor    BYTE PTR [edx-0x6a738f02],dl
  41d746:	mov    dl,ah
  41d748:	sbb    cl,ah
  41d74a:	inc    eax
  41d74b:	jmp    0x7d41aa18
  41d750:	sub    al,0x21
  41d752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d754:	or     DWORD PTR [ecx],ecx
  41d756:	push   edi
  41d757:	add    DWORD PTR [esi],edx
  41d759:	in     eax,0xff
  41d75b:	call   0x46b5a0a3
	...
  41d788:	jbe    0x41d72b
  41d78a:	fld    DWORD PTR [ebp-0x3a]
  41d78d:	xchg   edx,eax
  41d78e:	or     ch,BYTE PTR [ecx+0x24893c34]
  41d794:	mov    bh,0x92
  41d796:	je     0x41d759
  41d798:	(bad)  
  41d799:	out    dx,eax
  41d79a:	(bad)  
  41d79b:	xor    al,0x57
  41d79d:	mov    eax,ds:0x92dfb685
  41d7a2:	(bad)  
  41d7a3:	xor    al,0xd7
  41d7a5:	pop    ds
  41d7a6:	sbb    al,0xa6
  41d7a8:	push   ebp
  41d7a9:	add    eax,ebp
  41d7ab:	and    dh,al
  41d7ad:	xchg   edx,eax
  41d7ae:	(bad)  
  41d7af:	xchg   esi,eax
  41d7b0:	xor    eax,0xb7ca6991
  41d7b5:	sbb    al,0x8
  41d7b7:	add    BYTE PTR [edx-0x3a00011f],bh
  41d7bd:	in     al,0xb8
  41d7bf:	inc    esp
  41d7c0:	jae    0x41d7c7
  41d7c2:	push   DWORD PTR [ebp-0x46]
  41d7c5:	fs jae 0x41d826
  41d7c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7c9:	ins    DWORD PTR es:[edi],dx
  41d7ca:	or     eax,eax
  41d7cc:	(bad)  
  41d7cd:	call   0xff4e:0x74ffff4e
  41d7d4:	inc    DWORD PTR [eax+ebp*8]
  41d7d7:	ins    BYTE PTR es:[edi],dx
  41d7d8:	sub    al,0x6d
  41d7da:	std    
  41d7db:	call   0x40aa12
  41d7e0:	xor    eax,0x7ae8f7f7
  41d7e5:	sar    dh,cl
  41d7e7:	jmp    DWORD PTR [esi]
  41d7e9:	mov    ecx,0xb9be
	...
  41d812:	add    BYTE PTR [eax],al
  41d814:	inc    ebp
  41d815:	ins    DWORD PTR es:[edi],dx
  41d816:	std    
  41d817:	inc    DWORD PTR [eax+0x1e]
  41d81a:	aaa    
  41d81b:	pop    es
  41d81c:	mov    edi,0x4675fd88
  41d821:	ins    DWORD PTR es:[edi],dx
  41d822:	jae    0x41d82c
  41d824:	pop    edx
  41d825:	(bad)  
  41d826:	push   esi
  41d827:	push   DWORD PTR [ebp-0x513d372c]
  41d82d:	or     al,0x55
  41d82f:	mov    edx,DWORD PTR [esi+0x7a0c7374]
  41d835:	push   ebx
  41d836:	pop    esp
  41d837:	push   DWORD PTR [ebp+0x0]
  41d83a:	shl    BYTE PTR [edi+eiz*4-0x1c],0xc7
  41d83f:	inc    esp
  41d840:	arpl   WORD PTR ds:0xd341e850,ax
  41d846:	(bad)  
  41d847:	jmp    DWORD PTR [edx+0x74]
  41d84a:	jae    0x41d85c
  41d84c:	push   edx
  41d84d:	je     0x41d8c2
  41d84f:	or     dl,bl
  41d851:	(bad)  
  41d852:	aam    0xff
  41d854:	lds    ebx,FWORD PTR [ebp+0x6c]
  41d857:	pop    edx
  41d858:	dec    ebx
  41d859:	ja     0x41d7f5
  41d85b:	enter  0xae89,0x2
  41d85f:	push   ebp
  41d860:	shl    BYTE PTR [esi-0x7a],0xc3
  41d864:	inc    ebx
  41d865:	imul   DWORD PTR ds:0x995cb100
  41d86b:	je     0x41d8b0
  41d86d:	mov    cl,BYTE PTR [edx-0x72d8d3aa]
  41d873:	inc    esp
  41d874:	daa    
  41d875:	sbb    ebx,ecx
  41d877:	dec    edi
	...
  41d8a0:	jae    0x41d903
  41d8a2:	add    al,BYTE PTR [eax+0x590ea254]
  41d8a8:	mov    ds:0x4b413fe3,eax
  41d8ad:	ja     0x41d859
  41d8af:	fldcw  WORD PTR [edi]
  41d8b1:	mov    ds:0x560b0b02,al
  41d8b6:	(bad)  
  41d8b7:	push   esi
  41d8b8:	jecxz  0x41d89e
  41d8ba:	es jmp esp
  41d8bd:	call   0xf841:0x291973c2
  41d8c4:	aam    0x74
  41d8c6:	call   0xb308:0x11073169
  41d8cd:	daa    
  41d8ce:	fwait
  41d8cf:	(bad)  
  41d8d0:	mov    esp,0x21f80f96
  41d8d5:	mov    esi,0xba437499
  41d8da:	sbb    edi,edi
  41d8dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8dd:	scas   al,BYTE PTR es:[edi]
  41d8de:	cdq    
  41d8df:	je     0x41d884
  41d8e1:	dec    ebx
  41d8e2:	out    0xfe,eax
  41d8e4:	push   ds
  41d8e5:	stos   BYTE PTR es:[edi],al
  41d8e6:	stos   BYTE PTR es:[edi],al
  41d8e7:	imul   ecx,DWORD PTR [esi+eax*8-0x36010167],0xffffffaa
  41d8ef:	std    
  41d8f0:	and    dl,BYTE PTR [edi-0x67]
  41d8f3:	sti    
  41d8f4:	cmp    BYTE PTR [edx+0x5b],ah
  41d8f7:	(bad)  
  41d8f8:	ins    BYTE PTR es:[edi],dx
  41d8f9:	or     BYTE PTR [esi-0x1fa1a566],ah
  41d8ff:	add    dl,dh
  41d901:	addr16 xchg ebp,eax
  41d903:	adc    BYTE PTR [eax],al
	...
  41d929:	add    BYTE PTR [eax],al
  41d92b:	add    BYTE PTR [edi-0x71],dl
  41d92e:	adc    ecx,DWORD PTR [ebx+eiz*2]
  41d931:	sub    ebx,DWORD PTR [esi]
  41d933:	fwait
  41d934:	inc    ebp
  41d935:	das    
  41d936:	mov    al,0xc5
  41d938:	dec    eax
  41d939:	or     DWORD PTR [edi+ecx*4],ebx
  41d93c:	and    BYTE PTR [ebx+0x239597a4],cl
  41d942:	jmp    0xd3d03974
  41d947:	or     esi,DWORD PTR [ebx]
  41d949:	add    eax,0x81159abe
  41d94e:	mov    ds:0x98ccc197,eax
  41d953:	jmp    0x41d8e0
  41d955:	or     DWORD PTR [ecx-0x26],ebp
  41d958:	cld    
  41d959:	sbb    ch,BYTE PTR [ecx-0x57b9e7d5]
  41d95f:	add    edx,DWORD PTR [ecx+eiz*4-0x711b1848]
  41d966:	icebp  
  41d967:	ret    
  41d968:	pop    eax
  41d969:	jmp    0x9a0e:0x2a59abbd
  41d970:	inc    ecx
  41d971:	leave  
  41d972:	jl     0x41d970
  41d974:	adc    al,0x21
  41d976:	jmp    0x8091857e
  41d97b:	mov    eax,0x33e94808
  41d980:	lods   al,BYTE PTR ds:[esi]
  41d981:	adc    al,0xf1
  41d983:	stos   DWORD PTR es:[edi],eax
  41d984:	sub    ecx,DWORD PTR [edi]
  41d986:	ficomp WORD PTR [ecx-0x66d0835c]
  41d98c:	xchg   ebp,eax
  41d98d:	lea    ebx,[ecx]
  41d98f:	les    eax,FWORD PTR [eax]
	...
  41d9b5:	add    BYTE PTR [eax],al
  41d9b7:	add    bl,dl
  41d9b9:	mov    es,ebp
  41d9bb:	cdq    
  41d9bc:	test   DWORD PTR [ebx+0x1445dc8e],ebx
  41d9c2:	add    BYTE PTR [ecx-0x5103ea2e],ch
  41d9c8:	cmp    al,0x1
  41d9ca:	call   0xfecff36a
  41d9cf:	ds nop
  41d9d1:	enter  0xe903,0x25
  41d9d5:	sub    bl,0x6a
  41d9d8:	mov    esp,DWORD PTR [esi-0x234a3b7e]
  41d9de:	inc    eax
  41d9df:	jmp    0xa045ee2c
  41d9e4:	or     eax,0x47030002
  41d9e9:	and    eax,DWORD PTR [eax]
  41d9eb:	rol    ebx,cl
  41d9ed:	mov    ?,WORD PTR [ebp+ebp*8+0x6e]
  41d9f1:	or     DWORD PTR [edx-0x17],ebp
  41d9f4:	loopne 0x41d9d9
  41d9f6:	sub    ch,cl
  41d9f8:	dec    eax
  41d9f9:	add    BYTE PTR [ecx+eax*2-0x1e],0x14
  41d9fe:	clc    
  41d9ff:	push   ecx
  41da00:	cmp    DWORD PTR [eax],esi
  41da02:	push   DWORD PTR [esi]
  41da04:	rol    BYTE PTR [esp+edi*8+0x2e],0x3c
  41da09:	xchg   ecx,eax
  41da0a:	(bad)  
  41da0b:	pushf  
  41da0c:	mov    esp,0x4c1eff1f
  41da11:	std    
  41da12:	imul   ebp,ecx,0xe5e80926
  41da18:	fisttp WORD PTR [ebp+0x74fe]
	...
  41da42:	add    BYTE PTR [eax],al
  41da44:	test   BYTE PTR [ebp+0x2348934f],dl
  41da4a:	add    BYTE PTR [ebx-0x11ffe042],al
  41da50:	cmp    eax,0x35fcfe8d
  41da55:	fadd   QWORD PTR [eax-0x17]
  41da58:	sbb    eax,0xc0610e4e
  41da5d:	(bad)  
  41da5e:	(bad)  
  41da5f:	jmp    0x1360f23
  41da64:	stc    
  41da65:	xchg   ebx,eax
  41da66:	mov    eax,DWORD PTR [ebp-0x3e]
  41da69:	fldcw  WORD PTR [ecx+0x0]
  41da6c:	or     BYTE PTR [edi+0x70a0068],dl
  41da72:	inc    ebp
  41da73:	inc    ecx
  41da74:	jb     0x41dae6
  41da76:	jae    0x41da6c
  41da78:	mov    ebp,0xa2850fd3
  41da7d:	icebp  
  41da7e:	pop    esi
  41da7f:	push   DWORD PTR [edi]
  41da81:	jne    0x41da69
  41da83:	stos   DWORD PTR es:[edi],eax
  41da84:	bound  esi,QWORD PTR [edx-0x3]
  41da87:	mov    DWORD PTR [edi+0x5d],esp
  41da8a:	or     eax,eax
  41da8c:	ss inc ecx
  41da8e:	push   DWORD PTR [ebp-0x36]
  41da91:	pusha  
  41da92:	jmp    0x41daec
  41da94:	lods   eax,DWORD PTR ds:[esi]
  41da95:	jno    0x41da1e
  41da97:	inc    ebp
  41da98:	mov    ?,WORD PTR [ecx+0x73]
  41da9b:	lock mov dh,BYTE PTR [esi]
  41da9e:	push   ecx
  41da9f:	(bad)  
  41daa0:	jge    0x41db13
  41daa2:	jae    0x41da8c
  41daa4:	(bad)  
  41daa5:	sti    
  41daa6:	jmp    0x41daa7
	...
  41dad0:	mov    bh,0x78
  41dad2:	out    0x2c,al
  41dad4:	shl    DWORD PTR [ecx-0x3],cl
  41dad7:	or     esp,DWORD PTR [edx]
  41dad9:	cld    
  41dada:	sbb    ch,BYTE PTR [eax-0xe]
  41dadd:	or     bh,ch
  41dadf:	mov    esi,0xe807fb3d
  41dae4:	neg    ebx
  41dae6:	(bad)  
  41dae7:	(bad)  
  41dae8:	cmp    eax,0x47ffe7fb
  41daed:	fs std 
  41daef:	jne    0x41daab
  41daf1:	pusha  
  41daf2:	pop    ebx
  41daf3:	push   ebp
  41daf4:	mov    ebp,0xae75fd74
  41daf9:	pop    edi
  41dafa:	xchg   esp,eax
  41dafb:	pop    eax
  41dafc:	lods   eax,DWORD PTR ds:[esi]
  41dafd:	je     0x41dafc
  41daff:	jne    0x41da83
  41db01:	pop    ebp
  41db02:	stc    
  41db03:	dec    edi
  41db04:	dec    ebx
  41db05:	mov    bl,0x96
  41db07:	mov    dh,dh
  41db09:	mov    ch,0x8a
  41db0b:	adc    DWORD PTR [ebp+ecx*8-0x65e60171],eax
  41db12:	xchg   ebp,eax
  41db13:	je     0x41db8c
  41db15:	retf   0x581a
  41db18:	ins    BYTE PTR es:[edi],dx
  41db19:	pop    ebx
  41db1a:	int3   
  41db1b:	rcl    DWORD PTR [edi-0x5e],0x2f
  41db1f:	mov    ebp,DWORD PTR [edi+0x6b]
  41db22:	adc    BYTE PTR [ebx+eiz*2],cl
  41db25:	aaa    
  41db26:	cmp    bh,bh
  41db28:	dec    esp
  41db29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db2a:	ret    0x7273
  41db2d:	cli    
  41db2e:	sahf   
  41db2f:	inc    ebx
  41db30:	mov    ah,BYTE PTR [edx+0xe832]
	...
  41db5a:	add    BYTE PTR [eax],al
  41db5c:	fwait
  41db5d:	not    BYTE PTR [esi+0x450a9bfe]
  41db63:	mov    edi,0x2aa28b
  41db68:	dec    ebx
  41db69:	cmp    edx,DWORD PTR [esi+0x67]
  41db6c:	push   ss
  41db6d:	pop    esi
  41db6e:	inc    ebx
  41db6f:	add    BYTE PTR [ebx+0x3b],bh
  41db72:	adc    DWORD PTR [eax],ecx
  41db74:	repz mov ecx,0x39fcff19
  41db7a:	xlat   BYTE PTR ds:[ebx]
  41db7b:	push   edi
  41db7c:	hlt    
  41db7d:	rcl    BYTE PTR [esi+0x7e4a3f74],cl
  41db83:	pop    ebx
  41db84:	in     al,0xe2
  41db86:	or     al,al
  41db88:	push   edi
  41db89:	mov    ecx,0x618fee2a
  41db8e:	add    dl,BYTE PTR [eax-0x1d]
  41db91:	xchg   esi,eax
  41db92:	ss inc esp
  41db95:	jno    0x41dbc1
  41db97:	inc    ecx
  41db98:	cld    
  41db99:	popa   
  41db9a:	add    ch,BYTE PTR [eax+0x4b]
  41db9d:	mov    ds:0x9d23bda5,al
  41dba2:	ds inc ecx
  41dba4:	dec    ebx
  41dba5:	or     DWORD PTR [ecx],edi
  41dba7:	xchg   edi,eax
  41dba8:	pop    ss
  41dba9:	add    ecx,edx
  41dbab:	rcl    BYTE PTR [ecx],cl
  41dbad:	mov    ebp,ss
  41dbaf:	stos   DWORD PTR es:[edi],eax
  41dbb0:	inc    edx
  41dbb1:	xor    esi,ecx
  41dbb3:	xchg   esi,eax
  41dbb4:	xchg   ebx,eax
  41dbb5:	(bad)  
  41dbb6:	lock add edx,DWORD PTR [esi]
  41dbb9:	or     ah,0x82
  41dbbc:	mov    BYTE PTR [edx+eax*2+0x4],cl
	...
  41dbe7:	add    cl,ah
  41dbe9:	int3   
  41dbea:	lods   eax,DWORD PTR ds:[esi]
  41dbeb:	adc    BYTE PTR [ebx-0x5f],dl
  41dbee:	aam    0x30
  41dbf0:	pop    esp
  41dbf1:	mov    ebp,DWORD PTR [edi+0x40]
  41dbf4:	push   edi
  41dbf5:	push   ds
  41dbf6:	repz xchg esi,eax
  41dbf8:	xlat   BYTE PTR ds:[ebx]
  41dbf9:	add    BYTE PTR [ecx-0x7a74bbed],al
  41dbff:	sub    DWORD PTR [eax-0x76],ebp
  41dc02:	repz or esp,DWORD PTR [ebx]
  41dc05:	and    al,0x76
  41dc07:	xchg   esi,eax
  41dc08:	sub    eax,0x9f96cd20
  41dc0d:	add    DWORD PTR [ecx+0x37],edx
  41dc10:	sbb    al,0x8b
  41dc12:	pop    ebp
  41dc13:	xchg   esi,eax
  41dc14:	lahf   
  41dc15:	lea    edx,[ebp+0x10]
  41dc18:	inc    ebx
  41dc19:	mov    eax,ds:0x8b0430a6
  41dc1e:	das    
  41dc1f:	ror    DWORD PTR [eax+0x9],0x94
  41dc23:	mov    ah,al
  41dc25:	mov    bh,BYTE PTR [ebx-0x72fe1cf9]
  41dc2b:	xchg   esi,eax
  41dc2c:	in     eax,0xfe
  41dc2e:	sub    BYTE PTR [edi],cl
  41dc30:	daa    
  41dc31:	and    ebp,esi
  41dc33:	inc    eax
  41dc34:	mov    cl,BYTE PTR [ecx]
  41dc36:	mov    ecx,0xe2eafab
  41dc3b:	xchg   esi,eax
  41dc3c:	adc    al,0x21
  41dc3e:	jmp    0x908d8846
  41dc43:	fimul  WORD PTR [edi]
  41dc45:	dec    eax
  41dc46:	add    cl,ch
  41dc48:	js     0x41dbd4
  41dc4a:	je     0x41dc2d
	...
  41dc74:	lock and eax,0xa2b6e67c
  41dc7a:	nop
  41dc7b:	ss mov esi,0x3fabc88b
  41dc81:	or     DWORD PTR [ebp+0x62],edx
  41dc84:	mov    bl,0x87
  41dc86:	ret    
  41dc87:	lds    esi,FWORD PTR [ecx]
  41dc89:	or     DWORD PTR [edx-0x4],ebp
  41dc8c:	fist   WORD PTR ds:0x361ac108
  41dc92:	jmp    FWORD PTR [esi+0x13fc45d0]
  41dc98:	popa   
  41dc99:	mov    esi,DWORD PTR [ecx+esi*8-0x60]
  41dc9d:	pusha  
  41dc9e:	(bad)  
  41dc9f:	xchg   esi,eax
  41dca0:	mov    dh,0x20
  41dca2:	and    ecx,DWORD PTR [esi+0x49e80154]
  41dca8:	(bad)  
  41dca9:	mov    bh,dh
  41dcab:	adc    esi,DWORD PTR [ebx]
  41dcad:	mov    esi,DWORD PTR [ecx+eiz*8-0x20]
  41dcb1:	jae    0x41dcb1
  41dcb3:	outs   dx,BYTE PTR ds:[esi]
  41dcb4:	mov    esi,0xb665748a
  41dcb9:	adc    al,0x8
  41dcbb:	push   ecx
  41dcbc:	or     al,0x36
  41dcbe:	call   DWORD PTR [esi+0x0]
  41dcc1:	enter  0xe903,0x35
  41dcc5:	jle    0x41dcb2
  41dcc7:	push   0xb
  41dcc9:	xchg   edx,eax
  41dcca:	push   esi
  41dccb:	ror    DWORD PTR [eax+0x1f],cl
  41dcce:	ds ss cmp al,0x1
  41dcd2:	call   0xfecc1190
  41dcd7:	jo     0x41dcd9
	...
  41dcfd:	add    BYTE PTR [eax],al
  41dcff:	add    BYTE PTR [ecx*4-0x1ee72376],bl
  41dd06:	inc    eax
  41dd07:	jmp    0x9541a7d4
  41dd0c:	xchg   DWORD PTR [ecx],esp
  41dd0e:	das    
  41dd0f:	add    bh,ch
  41dd11:	inc    esi
  41dd12:	add    BYTE PTR [edi+0x5a],dl
  41dd15:	xor    BYTE PTR [eax],ch
  41dd17:	add    BYTE PTR [edx-0x778b4000],ah
  41dd1d:	fsubr  st(7),st
  41dd1f:	ficom  WORD PTR [edx]
  41dd21:	je     0x41dd20
  41dd23:	or     esp,edx
  41dd25:	stc    
  41dd26:	pop    ds
  41dd27:	mov    DWORD PTR [edi+0x6d],ebx
  41dd2a:	data16 add BYTE PTR [edx+0x64],dh
  41dd2e:	mov    esp,0x40ca4a68
  41dd33:	add    BYTE PTR [ebp+0x2ffff7fa],dh
  41dd39:	std    
  41dd3a:	out    0xc8,eax
  41dd3c:	sbb    DWORD PTR [ebp+edi*8-0x1],esi
  41dd40:	aas    
  41dd41:	ins    DWORD PTR es:[edi],dx
  41dd42:	out    0xf1,al
  41dd44:	sbb    al,0x74
  41dd46:	std    
  41dd47:	cld    
  41dd48:	jno    0x41dd0f
  41dd4a:	mov    bh,0xff
  41dd4c:	aad    0x9d
  41dd4e:	std    
  41dd4f:	repnz xchg esp,eax
  41dd51:	fs add eax,0x739d8b75
  41dd57:	cld    
  41dd58:	mov    ch,0x17
  41dd5a:	or     al,ch
  41dd5c:	cmp    al,0x39
  41dd5e:	(bad)  
  41dd5f:	inc    DWORD PTR ds:0x4c054
	...
  41dd89:	add    BYTE PTR [eax],al
  41dd8b:	add    BYTE PTR [edx],ah
  41dd8d:	cmp    BYTE PTR [ebx-0x1d375e14],cl
  41dd93:	push   edi
  41dd94:	or     BYTE PTR ds:0x17853f6a,cl
  41dd9a:	or     al,ch
  41dd9c:	mov    bh,BYTE PTR [ecx]
  41dd9e:	(bad)  
  41dd9f:	jmp    FWORD PTR [ebx+0x47]
  41dda2:	cld    
  41dda3:	mov    esi,edi
  41dda5:	cmp    al,0x28
  41dda7:	inc    ecx
  41dda8:	repnz mov WORD PTR ds:0x6845be00,?
  41ddaf:	cmp    eax,0x41b54b
  41ddb4:	sbb    al,0xa
  41ddb6:	inc    eax
  41ddb7:	sub    DWORD PTR [ebx+0x72],ecx
  41ddba:	pop    es
  41ddbb:	sar    BYTE PTR [edi],0x5c
  41ddbe:	sub    ebp,eax
  41ddc0:	and    eax,0x50fe9392
  41ddc5:	xor    cl,BYTE PTR [edi]
  41ddc7:	and    dl,dl
  41ddc9:	xor    eax,0x724b678c
  41ddce:	mov    eax,ds:0x493823bd
  41ddd3:	inc    ecx
  41ddd4:	dec    ebx
  41ddd5:	push   edi
  41ddd6:	sbb    al,bh
  41ddd8:	jl     0x41de1f
  41ddda:	cld    
  41dddb:	out    0x1b,eax
  41dddd:	retf   
  41ddde:	xchg   edx,eax
  41dddf:	(bad)  
  41dde0:	ins    BYTE PTR es:[edi],dx
  41dde1:	inc    ebp
  41dde2:	mov    edi,fs
  41dde4:	loop   0x41de05
  41dde6:	xchg   ebx,eax
  41dde7:	(bad)  
  41dde8:	pop    edi
  41dde9:	arpl   dx,ax
  41ddeb:	mov    eax,0xfe92a754
	...
  41de18:	pop    ecx
  41de19:	ror    bl,1
  41de1b:	push   es
  41de1c:	mov    esi,0x4b001bd9
  41de21:	lahf   
  41de22:	push   ecx
  41de23:	lea    ebp,[di]
  41de26:	inc    ebp
  41de27:	add    BYTE PTR [ebx+0x4b4148df],ah
  41de2d:	neg    DWORD PTR [eax]
  41de2f:	or     BYTE PTR [ebx],dh
  41de31:	pusha  
  41de32:	or     eax,0x25c14ff
  41de37:	push   0x43b57c
  41de3c:	jae    0x41de9a
  41de3e:	inc    edi
  41de3f:	inc    ecx
  41de40:	dec    ebx
  41de41:	iret   
  41de42:	fdiv   DWORD PTR [esi]
  41de44:	and    dh,BYTE PTR [ecx-0x666917fe]
  41de4a:	xchg   ecx,eax
  41de4b:	(bad)  
  41de4c:	shr    BYTE PTR [esi+ebx*4-0x6ef6b497],cl
  41de53:	das    
  41de54:	mov    cs,edx
  41de56:	call   0xa8102f76
  41de5b:	add    eax,esp
  41de5d:	cmp    eax,0x90bdcd6
  41de62:	adc    edi,ecx
  41de64:	adc    ecx,DWORD PTR [eax+0x7d077cfd]
  41de6a:	add    BYTE PTR [ebx],0x33
  41de6d:	icebp  
  41de6e:	mov    ds:0x62f14b44,eax
  41de73:	dec    ecx
  41de74:	or     cl,BYTE PTR [ecx]
  41de76:	(bad)  
  41de78:	push   ebp
  41de79:	xor    ch,BYTE PTR [eax]
  41de7b:	add    al,0x0
	...
  41dea1:	add    BYTE PTR [eax],al
  41dea3:	add    BYTE PTR [ebx+0x29],dh
  41dea6:	xor    BYTE PTR [ebx-0x6bd46e83],dl
  41deac:	(bad)  
  41dead:	int    0xc4
  41deaf:	xor    esp,ebx
  41deb1:	stc    
  41deb2:	sub    eax,DWORD PTR [ebp+0x4b]
  41deb5:	icebp  
  41deb6:	xor    cl,BYTE PTR [ecx+0xa]
  41deb9:	or     DWORD PTR [esi+0x28321dd8],esp
  41debf:	add    al,0x63
  41dec1:	or     eax,0x91459330
  41dec6:	and    ebx,DWORD PTR [ecx+ecx*8-0x40fc82fc]
  41decd:	shr    DWORD PTR [ecx+0x10],1
  41ded0:	cmp    ecx,DWORD PTR [edx]
  41ded2:	std    
  41ded3:	inc    ebp
  41ded4:	enter  0x7d04,0x3
  41ded8:	xchg   edi,eax
  41ded9:	inc    ebp
  41deda:	rol    DWORD PTR [ebx+ecx*2],1
  41dedd:	jbe    0x41de7d
  41dedf:	xchg   edx,eax
  41dee0:	xchg   edi,eax
  41dee1:	adc    DWORD PTR [ecx+0x37],eax
  41dee4:	cdq    
  41dee5:	xchg   BYTE PTR [ebp-0x6e],cl
  41dee8:	ja     0x41df67
  41deea:	inc    ebp
  41deeb:	sbb    BYTE PTR [ebx+0x71],al
  41deee:	xchg   ecx,eax
  41deef:	xor    eax,0x35ff86ec
  41def4:	inc    ebx
  41def5:	jns    0x41def5
  41def7:	mov    ah,0xe0
  41def9:	outs   dx,BYTE PTR ds:[esi]
  41defa:	lahf   
  41defb:	mov    ebx,0x94fe87b9
  41df00:	lods   al,BYTE PTR ds:[esi]
  41df01:	xchg   DWORD PTR [ecx+eiz*8-0x20],esi
  41df05:	popf   
  41df06:	push   ecx
  41df07:	push   cs
	...
  41df30:	fld    DWORD PTR [edi-0x226f28c]
  41df36:	out    0xfe,eax
  41df38:	push   esp
  41df39:	adc    eax,ebp
  41df3b:	xchg   edx,eax
  41df3c:	pop    esi
  41df3d:	xchg   dh,bh
  41df3f:	out    dx,al
  41df40:	xor    al,0x75
  41df42:	out    0x7d,eax
  41df44:	pop    esp
  41df45:	xchg   dh,bh
  41df47:	fidiv  WORD PTR [edi*2-0x79c39a19]
  41df4e:	dec    dh
  41df50:	push   esp
  41df51:	jns    0x41df3a
  41df53:	ins    DWORD PTR es:[edi],dx
  41df54:	cmp    al,0x86
  41df56:	(bad)  
  41df57:	mov    esi,0x35e77154
  41df5c:	sbb    al,0x86
  41df5e:	(bad)  
  41df5f:	scas   al,BYTE PTR es:[edi]
  41df60:	xor    al,0x85
  41df62:	(bad)  
  41df63:	sbb    al,0x57
  41df65:	outs   dx,BYTE PTR ds:[esi]
  41df66:	out    dx,al
  41df67:	cmp    edi,DWORD PTR [edx+0xda05e87]
  41df6d:	or     al,BYTE PTR [eax]
  41df6f:	xor    al,0xbe
  41df71:	jb     0x41def5
  41df73:	lods   eax,DWORD PTR ds:[esi]
  41df74:	fucomi st,st(7)
  41df76:	call   DWORD PTR [edx]
  41df78:	xchg   DWORD PTR [esi-0x683f1e8c],eax
  41df7e:	push   ecx
  41df7f:	outs   dx,BYTE PTR ds:[esi]
  41df80:	mov    edx,0x35654490
  41df85:	or     DWORD PTR [edx-0x17],ebp
  41df88:	xor    BYTE PTR [edi-0xeb757bc],dh
  41df8e:	(bad)  
  41df8f:	call   0x12968dc
	...
  41dfbc:	scas   al,BYTE PTR es:[edi]
  41dfbd:	xor    edi,edi
  41dfbf:	(bad)  
  41dfc0:	stc    
  41dfc1:	dec    ecx
  41dfc2:	jb     0x41dfe7
  41dfc4:	ret    0x1a1
  41dfc7:	pop    edi
  41dfc8:	sub    eax,0xb6c00998
  41dfcd:	jb     0x41e01d
  41dfcf:	push   0xbeef09e2
  41dfd4:	retf   0x43e2
  41dfd7:	inc    ecx
  41dfd8:	mov    dl,0x39
  41dfda:	push   DWORD PTR [ebp-0x46]
  41dfdd:	mov    eax,ds:0x98ad79ef
  41dfe2:	out    0x1d,al
  41dfe4:	(bad)  
  41dfe5:	cwde   
  41dfe6:	std    
  41dfe7:	call   DWORD PTR [edi]
  41dfe9:	xchg   esi,eax
  41dfea:	std    
  41dfeb:	jne    0x41df87
  41dfed:	mov    eax,ds:0x986d528e
  41dff2:	mov    edx,0x8b550976
  41dff8:	mov    esi,0x55fcc28c
  41dffd:	daa    
  41dffe:	add    BYTE PTR [edx+0x23],ch
  41e001:	cwde   
  41e002:	jae    0x41e00c
  41e004:	mov    bl,BYTE PTR [eax+edx*2-0x1]
  41e008:	lods   eax,DWORD PTR ds:[esi]
  41e009:	add    al,BYTE PTR [esp+edi*8-0x27]
  41e00d:	push   esi
  41e00e:	dec    esi
  41e00f:	sub    BYTE PTR [ebx],ah
  41e011:	or     eax,0x1d323f80
  41e016:	inc    eax
  41e017:	push   0x40cbde
  41e01c:	push   ebp
  41e01d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e01e:	jl     0x41e047
	...
  41e048:	and    cl,BYTE PTR [ecx]
  41e04a:	or     eax,eax
  41e04c:	outs   dx,BYTE PTR es:[esi]
  41e04e:	push   ebp
  41e04f:	call   0x411ae7
  41e054:	sbb    DWORD PTR [ecx+0x72],ecx
  41e057:	sbb    edx,edx
  41e059:	and    BYTE PTR [eax],al
  41e05b:	add    BYTE PTR [ebx-0x35],cl
  41e05e:	push   eax
  41e05f:	sbb    DWORD PTR [bp+0x41],ebp
  41e064:	fwait
  41e065:	retf   
  41e066:	adc    eax,0x9f3e308
  41e06b:	jmp    esp
  41e06d:	retf   0x534b
  41e070:	fdiv   QWORD PTR [ebx]
  41e072:	(bad)  
  41e073:	xor    cl,BYTE PTR [ebx]
  41e075:	jmp    0xad95:0x23ccfe8f
  41e07c:	xor    DWORD PTR [ebx+0x15],0xffffffc0
  41e080:	mov    esp,0x3efe8e9d
  41e085:	jp     0x41e021
  41e087:	pop    ds
  41e088:	sbb    DWORD PTR [ebx+0x30925e8e],eax
  41e08e:	pop    es
  41e08f:	add    dh,dh
  41e091:	out    0x9e,al
  41e093:	or     BYTE PTR [edi+0x4b6a366e],0xd8
  41e09a:	inc    ecx
  41e09b:	(bad)  
  41e09c:	(bad)  
  41e09d:	imul   ebx,DWORD PTR [edx-0x71ace53f],0x7a4e0e88
  41e0a7:	cmp    al,0x1b
  41e0a9:	sbb    al,BYTE PTR [ebp+0x0]
	...
  41e0d4:	retf   
  41e0d5:	jnp    0x41e0d9
  41e0d7:	je     0x41e0e4
  41e0d9:	retf   0x44a1
  41e0dc:	or     dh,BYTE PTR [edx+0x35]
  41e0df:	call   0x442c22
  41e0e4:	push   eax
  41e0e5:	mov    dl,0x17
  41e0e7:	and    edx,DWORD PTR [edx+ecx*4-0x74cba22d]
  41e0ee:	cli    
  41e0ef:	mov    edi,0x683269b7
  41e0f4:	dec    ebx
  41e0f5:	jb     0x41e094
  41e0f7:	mov    ebp,0x414889b3
  41e0fc:	dec    ebx
  41e0fd:	or     DWORD PTR [ecx+0x5111978e],edi
  41e103:	out    dx,al
  41e104:	add    DWORD PTR [ebp+edx*2+0x4ddd929c],0xffffff8f
  41e10c:	lock aaa 
  41e10e:	sub    DWORD PTR [ebp-0x13],ecx
  41e111:	cmp    DWORD PTR ds:0xf0b2da8f,0x6
  41e118:	push   esi
  41e119:	dec    ecx
  41e11a:	ret    0xece2
  41e11d:	mov    eax,es
  41e11f:	mov    cs,ebp
  41e121:	movaps XMMWORD PTR [eax],xmm3
  41e124:	outs   dx,DWORD PTR ds:[esi]
  41e125:	icebp  
  41e126:	sbb    DWORD PTR [ecx+0xa],ecx
  41e129:	or     DWORD PTR [ecx+0x5e1539b],edi
  41e12f:	(bad)  
  41e130:	cld    
  41e131:	lock call 0x8104953a
  41e137:	pushf  
	...
  41e160:	pop    es
  41e161:	retf   0x33e8
  41e164:	xchg   esp,eax
  41e165:	std    
  41e166:	lock fwait
  41e168:	stos   DWORD PTR es:[edi],eax
  41e169:	add    dh,bl
  41e16b:	mov    gs,WORD PTR [ebp+edx*1+0x3d]
  41e16f:	(bad)  
  41e170:	jge    0x41e160
  41e172:	or     DWORD PTR [edi+ebx*1+0x418ec5e1],ebx
  41e179:	dec    ecx
  41e17a:	xor    al,0xe8
  41e17c:	in     al,dx
  41e17d:	jg     0x41e1aa
  41e17f:	inc    ebp
  41e180:	dec    ebx
  41e181:	fld    st(0)
  41e183:	cdq    
  41e184:	std    
  41e185:	and    DWORD PTR [ebp-0x16f71ccd],0xffffff9e
  41e18c:	push   es
  41e18d:	bnd jg 0x41e1d8
  41e190:	mov    cl,BYTE PTR [ecx]
  41e192:	cmp    DWORD PTR [edi+0x519111bf],ecx
  41e198:	mov    ah,0x82
  41e19a:	jge    0x41e137
  41e19c:	push   es
  41e19d:	xlat   BYTE PTR ds:[ebx]
  41e19e:	push   DWORD PTR [ebp-0x33]
  41e1a1:	xor    DWORD PTR [ebp+ebp*2-0x3b],0xfffffffd
  41e1a6:	pop    es
  41e1a7:	push   ecx
  41e1a8:	push   edi
  41e1a9:	fdivr  st,st(6)
  41e1ab:	pop    esi
  41e1ac:	xor    eax,0x48edc150
  41e1b1:	fmul   QWORD PTR [edx-0x10b936c3]
  41e1b7:	je     0x41e13c
  41e1b9:	jns    0x41e20a
  41e1bb:	ds inc ebx
  41e1bd:	adc    eax,0x822f9ee8
  41e1c2:	(bad)  
  41e1c3:	loop   0x41e1c5
	...
  41e1e9:	add    BYTE PTR [eax],al
  41e1eb:	add    BYTE PTR [eax],cl
  41e1ed:	div    DWORD PTR [ecx]
  41e1ef:	push   0x3b
  41e1f1:	test   DWORD PTR [ecx],eax
  41e1f3:	xchg   edi,eax
  41e1f4:	test   eax,0x6611448f
  41e1f9:	mov    BYTE PTR [edi],dh
  41e1fb:	mov    ebp,0x618fdaa
  41e200:	push   ebx
  41e201:	sbb    edi,edi
  41e203:	je     0x41e1a5
  41e205:	push   0x25
  41e207:	cdq    
  41e208:	int    0x83
  41e20a:	(bad)  
  41e20b:	je     0x41e1d1
  41e20d:	xor    DWORD PTR [ecx+eiz*8-0x42],0xfffffffd
  41e212:	pop    es
  41e213:	rol    DWORD PTR [ebp-0x27],1
  41e216:	(bad)  
  41e217:	(bad)  
  41e218:	cld    
  41e219:	int3   
  41e21a:	out    dx,eax
  41e21b:	cmp    edi,edx
  41e21d:	mov    ebp,0x51bec658
  41e222:	shr    ebp,0x48
  41e225:	fmul   QWORD PTR [edx-0x8b9353b]
  41e22b:	inc    ebx
  41e22c:	dec    edi
  41e22d:	out    dx,eax
  41e22e:	inc    edx
  41e22f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e230:	xor    al,0x11
  41e232:	call   0xfec46188
  41e237:	pusha  
  41e238:	test   BYTE PTR [ebp+0x952e969],al
  41e23e:	push   0x40cc3b00
  41e243:	add    BYTE PTR [edx],bh
  41e245:	pop    es
  41e246:	add    BYTE PTR [eax],al
  41e248:	mov    dl,0xa5
  41e24a:	jo     0x41e2a2
  41e24c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e24d:	xchg   esp,eax
  41e24e:	or     eax,eax
	...
  41e278:	out    dx,al
  41e279:	push   esp
  41e27a:	xchg   DWORD PTR [ebp+0x6a],eax
  41e27d:	and    eax,0x5b34655
  41e282:	push   DWORD PTR [ebp-0x66]
  41e285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e286:	loopne 0x41e2ad
  41e288:	loop   0x41e28f
  41e28a:	or     eax,eax
  41e28c:	sahf   
  41e28d:	push   0xa51a75fd
  41e292:	add    DWORD PTR [ebp+0x25],ebx
  41e295:	xchg   esp,eax
  41e296:	dec    esi
  41e297:	push   0x3e5140
  41e29c:	fiadd  DWORD PTR ds:0x1f14ef00
  41e2a2:	add    BYTE PTR [eax+0x45],dl
  41e2a5:	sbb    cl,BYTE PTR [eax]
  41e2a7:	call   0x40fea6
  41e2ac:	cmp    dh,BYTE PTR [ecx+edx*2-0x1]
  41e2b0:	xchg   ebp,eax
  41e2b1:	xchg   esp,eax
  41e2b2:	jae    0x41e2ac
  41e2b4:	dec    edx
  41e2b5:	jl     0x41e308
  41e2b7:	jmp    DWORD PTR [ebp-0x5a038c6c]
  41e2bd:	sbb    cl,BYTE PTR [eax]
  41e2bf:	call   0x4118ac
  41e2c4:	stos   DWORD PTR es:[edi],eax
  41e2c5:	inc    edi
  41e2c6:	add    al,BYTE PTR [eax]
  41e2c8:	dec    edi
  41e2c9:	add    bl,ch
  41e2cb:	sub    DWORD PTR [esi+0x8006891],0xffffffd1
  41e2d2:	(bad)  
  41e2d3:	jne    0x41e33f
  41e2d5:	popf   
  41e2d6:	sub    al,0x50
  41e2d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2d9:	xchg   esp,eax
  41e2da:	xchg   DWORD PTR [ebp+0x0],eax
	...
  41e301:	add    BYTE PTR [eax],al
  41e303:	add    dh,ah
  41e305:	and    al,0x0
  41e307:	add    BYTE PTR [ebx-0x79],cl
  41e30a:	dec    esp
  41e30b:	addr16 mov ds:0x4328,eax
  41e30f:	add    BYTE PTR [ebx+0x4b414625],ah
  41e315:	call   DWORD PTR ds:0x14013308
  41e31b:	call   DWORD PTR [eax+esi*8]
  41e31e:	adc    eax,0xfa5e0cfc
  41e323:	out    0x94,eax
  41e325:	ret    0xfe8b
  41e328:	adc    dh,BYTE PTR ds:0xeb9e0007
  41e32e:	sahf   
  41e32f:	add    BYTE PTR [edi],0xcb
  41e332:	sbb    al,BYTE PTR [eax]
  41e334:	dec    ebx
  41e335:	iret   
  41e336:	dec    esp
  41e337:	(bad)  
  41e338:	push   esi
  41e339:	push   0xffffff9a
  41e33b:	inc    edx
  41e33c:	test   BYTE PTR [edi],ch
  41e33e:	mov    esi,?
  41e340:	push   esi
  41e341:	jbe    0x41e2ce
  41e343:	je     0x41e398
  41e345:	sbb    ch,BYTE PTR [ecx+0x4e]
  41e348:	mov    esp,0x5b748c17
  41e34d:	movhps xmm1,QWORD PTR [eax]
  41e350:	mov    ds:0xa4ff3bf7,eax
  41e355:	jg     0x41e36b
  41e357:	sbb    BYTE PTR [ebp+edi*8+0x6a1efef6],bl
  41e35e:	call   0xac67:0x8a66fc54
  41e365:	sub    BYTE PTR [ebp+0x0],al
	...
  41e390:	jl     0x41e36f
  41e392:	repz out 0x2e,eax
  41e395:	add    eax,0xb2400004
  41e39a:	adc    BYTE PTR [ebp-0xd],ah
  41e39d:	cwde   
  41e39e:	inc    ecx
  41e39f:	inc    ecx
  41e3a0:	dec    ebx
  41e3a1:	dec    edx
  41e3a2:	or     ah,BYTE PTR [ebx]
  41e3a4:	dec    ebx
  41e3a5:	jb     0x41e422
  41e3a7:	inc    esp
  41e3a8:	push   ebx
  41e3a9:	or     DWORD PTR [ecx],edx
  41e3ab:	pop    ebp
  41e3ac:	mov    cs,edx
  41e3ae:	call   0x815b9b3d
  41e3b3:	add    ebp,DWORD PTR [esi+0x9]
  41e3b6:	jmp    0xef36d0b9
  41e3bb:	push   es
  41e3bc:	mov    es,WORD PTR [ecx-0x7fc4be91]
  41e3c2:	sti    
  41e3c3:	repz sub al,0x9e
  41e3c6:	add    DWORD PTR [ebx-0x749f73f3],ecx
  41e3cc:	js     0x41e403
  41e3ce:	jo     0x41e411
  41e3d0:	push   eax
  41e3d2:	out    0x3,eax
  41e3d4:	in     al,0xbe
  41e3d6:	dec    ebp
  41e3d7:	adc    DWORD PTR [ebx+0x71],eax
  41e3da:	xor    edi,DWORD PTR [edx]
  41e3dc:	in     al,0x7f
  41e3de:	cmp    eax,0xbb804f11
  41e3e3:	sti    
  41e3e4:	in     al,dx
  41e3e5:	and    al,0x9e
  41e3e7:	mov    cl,ch
  41e3e9:	jg     0x41e386
  41e3eb:	xchg   ebp,eax
  41e3ed:	cmc    
  41e3ee:	lock fwait
  41e3f0:	cmc    
  41e3f1:	into   
  41e3f2:	adc    eax,0x8b
	...
  41e41b:	add    BYTE PTR [ebp+0x378af0f5],dh
  41e421:	adc    eax,0x71531106
  41e426:	sbb    eax,0x1f7f9c3a
  41e42b:	(bad)  
  41e42c:	cmp    BYTE PTR [ecx],cl
  41e42e:	xchg   esp,eax
  41e42f:	jle    0x41e3d1
  41e431:	mov    ebp,DWORD PTR [ebx+ecx*4+0x5d1b8c1e]
  41e438:	cs retf 0x3e8
  41e43c:	(bad)  
  41e43d:	cld    
  41e43e:	imul   ecx,eax,0x4282ea7
  41e444:	dec    ebx
  41e445:	cmc    
  41e446:	cmp    DWORD PTR [edi+0x221f],eax
  41e44c:	push   cs
  41e44d:	or     DWORD PTR [eax],eax
  41e44f:	xor    eax,0xa544482d
  41e454:	dec    eax
  41e455:	or     DWORD PTR [eax],eax
  41e457:	jmp    0xea39aa65
  41e45c:	dec    eax
  41e45d:	or     DWORD PTR [eax],eax
  41e45f:	pop    esp
  41e460:	mov    edi,DWORD PTR [ebp+0x4f]
  41e463:	je     0x41e3f0
  41e465:	or     DWORD PTR [edi+0x13],0x2f71f147
  41e46c:	mov    cs,WORD PTR [ecx]
  41e46e:	call   esp
  41e470:	stos   DWORD PTR es:[edi],eax
  41e471:	sub    al,0x41
  41e473:	jmp    0xaab5a37d
  41e478:	(bad)  
  41e47b:	jmp    0xccc520c4
	...
  41e4a8:	les    edi,FWORD PTR [esi+0x72]
  41e4ab:	(bad)  
  41e4ac:	gs cmc 
  41e4ae:	sti    
  41e4af:	push   edx
  41e4b0:	repnz aam 0x8a
  41e4b3:	inc    ecx
  41e4b5:	hlt    
  41e4b6:	pop    ss
  41e4b7:	cmp    bl,BYTE PTR cs:0x7fc09fff
  41e4be:	jne    0x41e499
  41e4c0:	shl    ebp,1
  41e4c2:	pop    es
  41e4c3:	add    edx,esp
  41e4c5:	jl     0x41e4c5
  41e4c7:	push   cs
  41e4c8:	bound  edi,QWORD PTR [esi+0x4c]
  41e4cb:	add    ebp,ecx
  41e4cd:	inc    esp
  41e4ce:	add    ebp,DWORD PTR [edx+0x53]
  41e4d1:	cmp    edi,0x3d8a4b7c
  41e4d7:	jmp    0x5d403b17
  41e4dc:	sar    DWORD PTR [edi+0x14],cl
  41e4df:	nop
  41e4e0:	mov    eax,ds:0xb036ffc9
  41e4e5:	dec    eax
  41e4e6:	add    ebp,ecx
  41e4e8:	sbb    eax,0xf100eb92
  41e4ed:	dec    eax
  41e4ee:	repnz push ebx
  41e4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4f1:	ds clc 
  41e4f3:	add    BYTE PTR [edx+0xa],ah
  41e4f6:	add    bh,al
  41e4f8:	daa    
  41e4f9:	cdq    
  41e4fa:	(bad)  
  41e4fb:	push   DWORD PTR [edx]
  41e4fd:	or     bh,bh
  41e4ff:	jne    0x41e543
  41e501:	add    DWORD PTR [esp+edi*8-0xd],eax
  41e505:	adc    eax,0x1c226afc
  41e50a:	add    BYTE PTR [edx+0x0],ch
	...
  41e531:	add    BYTE PTR [eax],al
  41e533:	add    BYTE PTR [edx],dh
  41e535:	sbb    al,0x0
  41e537:	call   DWORD PTR [edi]
  41e539:	xchg   ch,bh
  41e53b:	jne    0x41e56b
  41e53d:	sbb    al,0x0
  41e53f:	push   0x22
  41e541:	mov    ds:0x9f222ca,al
  41e546:	or     eax,eax
  41e548:	push   ss
  41e549:	dec    edi
  41e54a:	dec    esi
  41e54b:	push   eax
  41e54c:	mov    ah,BYTE PTR [edi]
  41e54e:	push   ecx
  41e54f:	(bad)  
  41e550:	jge    0x41e554
  41e552:	inc    esp
  41e553:	clc    
  41e554:	stos   DWORD PTR es:[edi],eax
  41e555:	sbb    eax,DWORD PTR [eax]
  41e557:	push   0xfffffff2
  41e559:	cmp    bh,bh
  41e55b:	jne    0x41e577
  41e55d:	nop
  41e55e:	jae    0x41e55c
  41e560:	sbb    eax,0xb26a0c0e
  41e565:	sbb    eax,DWORD PTR [eax]
  41e567:	call   0x404c70
  41e56c:	test   eax,0x3d0f7349
  41e571:	push   cs
  41e572:	clc    
  41e573:	call   0x41200e
  41e578:	gs ds clc 
  41e57b:	add    BYTE PTR [edx+0x1f830009],ah
  41e581:	xchg   edx,eax
  41e582:	(bad)  
  41e583:	jae    0x41e5c1
  41e585:	nop
  41e586:	jae    0x41e590
  41e588:	popf   
  41e589:	push   cs
  41e58a:	clc    
  41e58b:	call   0x256ddb
  41e590:	ins    BYTE PTR es:[edi],dx
  41e591:	push   0xffffffc2
  41e593:	jae    0x41e5b9
  41e595:	and    BYTE PTR [ecx+0x74],cl
	...
  41e5bf:	add    BYTE PTR [ebx+0x58],dl
  41e5c2:	add    esp,DWORD PTR [edx]
  41e5c4:	dec    ebx
  41e5c5:	jo     0x41e5f0
  41e5c7:	add    ecx,DWORD PTR [edx+0x71eaaaea]
  41e5cd:	repnz retf 0xb60c
  41e5d1:	inc    esi
  41e5d2:	sar    bh,0x34
  41e5d5:	inc    eax
  41e5d6:	pushf  
  41e5d7:	in     eax,dx
  41e5d8:	push   0x72
  41e5da:	add    cl,BYTE PTR [ebx]
  41e5dc:	or     edi,DWORD PTR [edi-0x13]
  41e5df:	dec    edi
  41e5e0:	jnp    0x41e57c
  41e5e2:	nop
  41e5e3:	dec    edi
  41e5e4:	adc    al,0xf4
  41e5e6:	jns    0x41e62c
  41e5e8:	pop    ss
  41e5e9:	sbb    dh,BYTE PTR [ebx]
  41e5eb:	(bad)  
  41e5ec:	jle    0x41e5cc
  41e5ee:	xor    ebp,eax
  41e5f0:	pop    esp
  41e5f1:	rol    DWORD PTR [edi+0x426ce0fe],0x80
  41e5f8:	xor    esi,DWORD PTR [edx+0xd]
  41e5fb:	shl    esp,1
  41e5fd:	mov    ebp,0xa30ae78a
  41e602:	xchg   esi,edi
  41e604:	shr    BYTE PTR [ebp+0x31025a8e],0xf7
  41e60b:	call   FWORD PTR [edi]
  41e60d:	not    DWORD PTR [esi+0x31368782]
  41e613:	push   edi
  41e614:	enter  0xe955,0x28
  41e618:	or     dh,BYTE PTR [edx+0x2]
  41e61b:	jne    0x41e66a
  41e61d:	mov    ds:0x6e89c928,eax
  41e622:	add    cl,BYTE PTR [ebp+0x0]
	...
  41e64c:	push   cs
  41e64d:	xor    BYTE PTR [ecx],0xff
  41e650:	push   ss
  41e651:	pop    esi
  41e652:	call   0x5187:0xe6091d30
  41e659:	dec    ecx
  41e65a:	in     eax,dx
  41e65b:	jg     0x41e684
  41e65d:	or     ch,cl
  41e65f:	add    ecx,edx
  41e661:	dec    ah
  41e663:	add    al,0x4b
  41e665:	sbb    ecx,ebp
  41e667:	test   cl,0x14
  41e66a:	call   0x3bbe3172
  41e66f:	mov    BYTE PTR [ebp-0xa],cl
  41e672:	mov    al,0x9c
  41e674:	add    dl,ah
  41e676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e677:	xchg   DWORD PTR [ecx+0x49],edx
  41e67a:	in     eax,dx
  41e67b:	or     BYTE PTR [eax+0xa],0xe9
  41e67f:	add    ebp,DWORD PTR [esi+esi*8]
  41e682:	mov    WORD PTR [edi+0x7b10819f],es
  41e688:	xchg   dl,cl
  41e68a:	call   0x75bce02a
  41e68f:	xchg   ebx,eax
  41e691:	lds    edi,FWORD PTR [edi+eax*4+0x7f]
  41e695:	jge    0x41e6fc
  41e697:	adc    DWORD PTR [ebx],eax
  41e699:	icebp  
  41e69a:	fdivr  QWORD PTR ds:0xc441098a
  41e6a0:	out    dx,al
  41e6a1:	jnp    0x41e6f0
  41e6a3:	jge    0x41e634
  41e6a5:	jno    0x41e6ec
  41e6a7:	adc    edi,ebx
  41e6a9:	jnp    0x41e65e
  41e6ab:	mov    ebp,DWORD PTR [esp+edx*4-0x52]
  41e6af:	inc    esp
	...
  41e6d8:	dec    ebx
  41e6d9:	jno    0x41e756
  41e6db:	xchg   ch,al
  41e6dd:	jnp    0x41e74e
  41e6df:	inc    ecx
  41e6e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6e1:	xchg   DWORD PTR [ebx+0x6d0ab497],ebx
  41e6e7:	pop    ebp
  41e6e8:	lods   al,BYTE PTR ds:[esi]
  41e6e9:	jnp    0x41e6d3
  41e6eb:	and    BYTE PTR [edi],0x71
  41e6ee:	call   0xe8ddafe9
  41e6f3:	add    ecx,DWORD PTR [ebx-0x78]
  41e6f6:	push   DWORD PTR [ebx-0x54]
  41e6f9:	jnp    0x41e708
  41e6fb:	gs cli 
  41e6fd:	jnp    0x41e6fd
  41e6ff:	jmp    0xd229dbc9
  41e704:	jns    0x41e72e
  41e706:	add    cl,ch
  41e708:	icebp  
  41e709:	hlt    
  41e70a:	out    0x62,eax
  41e70c:	into   
  41e70d:	mov    es,edi
  41e70f:	cwde   
  41e710:	mov    edi,0x350fead8
  41e715:	scas   al,BYTE PTR es:[edi]
  41e716:	cmp    edi,ecx
  41e718:	cmp    dl,BYTE PTR [ecx]
  41e71a:	cmp    al,0xf0
  41e71c:	push   ebp
  41e71d:	add    eax,0x6e1d92c
  41e722:	sub    al,0x28
  41e724:	dec    ebx
  41e725:	jo     0xa3affc0
  41e72b:	imul   ecx,esp,0xc8ec7741
  41e731:	outs   dx,BYTE PTR ds:[esi]
  41e732:	das    
  41e733:	xchg   edx,eax
  41e734:	push   ss
  41e735:	sti    
  41e736:	jmp    0x41e760
  41e738:	mov    DWORD PTR [esi+0x9],0xa9
	...
  41e763:	add    BYTE PTR [eax-0x5dd2f5fa],ch
  41e769:	ror    DWORD PTR [edx],1
  41e76b:	xor    BYTE PTR [ebx+0x4b],bl
  41e76e:	pop    eax
  41e76f:	pusha  
  41e770:	xor    ebx,DWORD PTR [ebp-0x2]
  41e773:	aam    0xc0
  41e775:	mov    eax,DWORD PTR [ecx+ecx*2-0x63]
  41e779:	(bad)
  41e77c:	dec    eax
  41e77d:	or     DWORD PTR [eax],eax
  41e77f:	mov    edx,DWORD PTR fs:[ebp+0x4f]
  41e783:	ret    
  41e784:	dec    edi
  41e785:	out    dx,eax
  41e786:	call   DWORD PTR [edx-0x6d0010b8]
  41e78c:	dec    eax
  41e78d:	mov    WORD PTR [ebp+esi*1+0x78],es
  41e791:	jp     0x41e7a7
  41e793:	lock xchg ecx,ecx
  41e796:	(bad)  
  41e797:	call   FWORD PTR [ecx+0x21227246]
  41e79d:	adc    eax,ebx
  41e79f:	add    BYTE PTR [esi],cl
  41e7a1:	(bad)  
  41e7a2:	std    
  41e7a3:	jne    0x41e803
  41e7a5:	xor    DWORD PTR [ebx-0x28],0x65
  41e7a9:	or     ah,ah
  41e7ab:	call   FWORD PTR [edi]
  41e7ad:	mov    eax,ds:0x9e6a75fd
  41e7b2:	mov    ebx,0xfd8495fc
  41e7b7:	jne    0x41e763
  41e7b9:	popf   
  41e7ba:	xchg   esi,eax
  41e7bb:	and    BYTE PTR [edx+0x6],ah
  41e7be:	push   DWORD PTR [ebp-0x7a]
  41e7c1:	popf   
  41e7c2:	js     0x41e813
  41e7c4:	cmc    
  41e7c5:	cmp    ebp,0x75
	...
  41e7f0:	ficomp DWORD PTR [eax+esi*2-0x27c2ab1]
  41e7f7:	jne    0x41e7b7
  41e7f9:	pushf  
  41e7fa:	push   0x8b83d54f
  41e7ff:	inc    ebp
  41e800:	mov    ds:0x3f90e835,al
  41e805:	test   ch,bh
  41e807:	pop    edi
  41e808:	xor    al,0xbe
  41e80a:	ror    BYTE PTR [edx+esi*8],0x2a
  41e80e:	mov    ebp,esp
  41e810:	jno    0x41e85b
  41e812:	cli    
  41e813:	push   0xffffffe2
  41e815:	pop    ds
  41e816:	inc    ebp
  41e817:	dec    DWORD PTR [edi]
  41e819:	jle    0x41e801
  41e81b:	add    esi,0xaf89fd84
  41e821:	cmp    ebp,0x209dda75
  41e827:	std    
  41e828:	adc    eax,0xa056884
  41e82d:	sti    
  41e82e:	push   ecx
  41e82f:	jmp    DWORD PTR [ebp-0x80]
  41e832:	mov    esi,0x6835b474
  41e837:	test   DWORD PTR [ebx+0x2b],0x70330044
  41e83e:	add    ch,bh
  41e840:	fst    QWORD PTR [edi+0x700a4615]
  41e846:	xor    bh,bh
  41e848:	push   ss
  41e849:	push   0x6af93d9a
  41e84e:	and    edi,0x56
  41e851:	xor    eax,DWORD PTR [ebp+0xfe]
	...
  41e87b:	add    BYTE PTR [esp+edx*8-0x79],dh
  41e87f:	(bad)  
  41e880:	mul    BYTE PTR [edi-0x66]
  41e883:	xchg   DWORD PTR [edi],edx
  41e885:	dec    ebx
  41e886:	or     eax,0xffffff89
  41e889:	imul   eax,DWORD PTR [edx],0x55
  41e88c:	ror    BYTE PTR [ebx+0x7f],0xc3
  41e890:	dec    edi
  41e891:	sbb    bl,BYTE PTR [edx]
  41e893:	add    BYTE PTR [ecx+0x53748530],dh
  41e899:	call   0x4479:0x98344bd7
  41e8a0:	das    
  41e8a1:	in     al,dx
  41e8a2:	lds    ecx,FWORD PTR [edi+0x73]
  41e8a5:	and    DWORD PTR [eax+eax*4],eax
  41e8a8:	pop    esp
  41e8a9:	bound  ecx,QWORD PTR [esi]
  41e8ab:	push   ecx
  41e8ac:	mov    ds:0x4b413ccc,eax
  41e8b1:	pop    ss
  41e8b2:	pushf  
  41e8b3:	jne    0x41e8df
  41e8b5:	bound  eax,QWORD PTR [edx]
  41e8b7:	or     ecx,DWORD PTR [ebx]
  41e8b9:	push   edi
  41e8ba:	add    bl,ch
  41e8bc:	inc    esp
  41e8bd:	pop    edx
  41e8be:	push   eax
  41e8bf:	inc    ebp
  41e8c0:	mov    ah,BYTE PTR [edx+0x2b]
  41e8c3:	call   0x45ea36
  41e8c8:	push   eax
  41e8c9:	and    cl,BYTE PTR [edi]
  41e8cb:	and    edi,DWORD PTR [edx+ebx*8+0x7a]
  41e8cf:	push   edi
  41e8d0:	int3   
  41e8d1:	aas    
  41e8d2:	clc    
  41e8d3:	mov    edi,0x6832593f
  41e8d8:	dec    ebx
  41e8d9:	or     ecx,ebp
  41e8db:	xchg   esp,eax
  41e8dc:	mul    cl
  41e8de:	daa    
  41e8df:	cmp    eax,0x0
	...
  41e908:	or     cl,BYTE PTR [ecx]
  41e90a:	mov    ecx,0x1011f84
  41e90f:	or     eax,0x9b057818
  41e914:	jmp    0x293c:0x9083fdc7
  41e91b:	dec    edx
  41e91c:	test   DWORD PTR [eax-0x13],edi
  41e91f:	cmp    DWORD PTR [edx-0x59],0x20
  41e923:	or     edi,esi
  41e925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e926:	(bad)  
  41e928:	jo     0x41e9a2
  41e92a:	pop    ebx
  41e92b:	or     al,0x73
  41e92d:	adc    BYTE PTR ds:0xafd85d83,bl
  41e933:	inc    esi
  41e934:	dec    eax
  41e935:	or     DWORD PTR [edi+ecx*4],edx
  41e938:	pusha  
  41e939:	mov    ch,BYTE PTR [esp+edx*2-0x6e5287c3]
  41e940:	xchg   DWORD PTR [ebp+0x38],esi
  41e943:	cmp    DWORD PTR [edi+0x40f99e19],0x61
  41e94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e94b:	and    al,0x4b
  41e94d:	or     edx,esp
  41e94f:	inc    ebx
  41e950:	dec    ebp
  41e951:	mov    ?,WORD PTR [ebx-0x59f6b4fb]
  41e957:	leave  
  41e958:	adc    al,0x9
  41e95a:	jmp    0x23923462
  41e95f:	je     0x41e95e
  41e961:	psubsw mm0,QWORD PTR [ebx]
  41e964:	popa   
  41e965:	or     ebx,edx
  41e967:	add    esp,DWORD PTR [ecx+0x9]
  41e96a:	ret    
  41e96b:	add    eax,DWORD PTR [eax]
	...
  41e991:	add    BYTE PTR [eax],al
  41e993:	add    dh,dl
  41e995:	int    0x58
  41e997:	aam    0xcf
  41e999:	lea    edi,[eax]
  41e99b:	jnp    0x41e972
  41e99d:	ja     0x41e937
  41e99f:	adc    BYTE PTR [edi+0x71],0xff
  41e9a3:	xor    eax,0x4fe773c2
  41e9a8:	or     DWORD PTR [bx+si],eax
  41e9ab:	repnz or ah,bh
  41e9ae:	add    al,0x10
  41e9b0:	das    
  41e9b1:	or     DWORD PTR [eax],eax
  41e9b3:	jmp    0xa8699968
  41e9b8:	dec    eax
  41e9b9:	js     0x41ea2f
  41e9bb:	fldenv [eax]
  41e9bd:	dec    ecx
  41e9be:	push   eax
  41e9bf:	dec    cl
  41e9c1:	(bad)  
  41e9c2:	mov    bl,BYTE PTR [ecx]
  41e9c4:	fimul  DWORD PTR [edi+ebp*8+0x4f76c9f6]
  41e9cb:	cmp    esp,edi
  41e9cd:	mov    eax,0x80c9de50
  41e9d2:	test   ch,al
  41e9d4:	loope  0x41ea4c
  41e9d6:	inc    cl
  41e9d8:	push   ecx
  41e9d9:	(bad)  
  41e9da:	inc    dh
  41e9dc:	mov    ebx,0x5f19f3cc
  41e9e1:	push   ss
  41e9e2:	inc    edi
  41e9e3:	sub    BYTE PTR [edi+0x76],cl
  41e9e6:	mov    ah,0xbd
  41e9e8:	shl    DWORD PTR [edi-0x2],0xa6
  41e9ec:	xor    eax,DWORD PTR [ebx]
  41e9ee:	call   0xfeba01e4
  41e9f3:	pusha  
  41e9f4:	rcr    DWORD PTR [esi-0xa],cl
  41e9f7:	mov    es,WORD PTR [eax]
	...
  41ea1d:	add    BYTE PTR [eax],al
  41ea1f:	add    cl,cl
  41ea21:	loopne 0x41ea22
  41ea23:	adc    BYTE PTR [edi-0x32],ah
  41ea26:	inc    eax
  41ea27:	jmp    0x7f2da7f5
  41ea2c:	leave  
  41ea2d:	ja     0x41ea2d
  41ea2f:	hlt    
  41ea30:	dec    esp
  41ea31:	popa   
  41ea32:	in     al,dx
  41ea33:	mov    ecx,0x648877c9
  41ea38:	pusha  
  41ea39:	jg     0x41ea39
  41ea3b:	push   esi
  41ea3c:	div    BYTE PTR [esi+0x66]
  41ea3f:	sbb    dl,BYTE PTR [eax]
  41ea41:	retf   0xffff
  41ea44:	lea    esi,[ecx-0x74f20816]
  41ea4a:	std    
  41ea4b:	jne    0x41e9fb
  41ea4d:	loop   0x41ea1f
  41ea4f:	push   eax
  41ea50:	ins    DWORD PTR es:[edi],dx
  41ea51:	mov    eax,DWORD PTR [edi-0x20cb97b]
  41ea57:	call   FWORD PTR [edi]
  41ea59:	adc    edx,0x4e8b3df7
  41ea5f:	push   0x3f43e9
  41ea64:	dec    ebp
  41ea65:	mov    cl,0xea
  41ea67:	test   DWORD PTR [ebp+0x6e75fd88],0x6d50b0e2
  41ea71:	mov    BYTE PTR [ecx],cl
  41ea73:	rcl    BYTE PTR [esi],0x12
  41ea76:	cmp    DWORD PTR [ebp-0x20f4a],0x76
  41ea7d:	jg     0x41ea8d
  41ea7f:	inc    DWORD PTR [edx-0x68]
  41ea82:	and    eax,0x0
	...
  41eaa9:	add    BYTE PTR [eax],al
  41eaab:	add    BYTE PTR [ebp+0x7a50fd88],dl
  41eab1:	or     BYTE PTR [ebp-0x1],cl
  41eab4:	std    
  41eab5:	jecxz  0x41eac9
  41eab7:	or     esi,edx
  41eab9:	jo     0x41eabf
  41eabb:	push   eax
  41eabc:	fidivr DWORD PTR [ebx+0x4b]
  41eabf:	dec    ebp
  41eac1:	mov    edi,0x87c5e083
  41eac6:	std    
  41eac7:	adc    eax,0x6a000a32
  41eacc:	and    ah,BYTE PTR [edx+0x38]
  41eacf:	inc    edi
  41ead0:	arpl   WORD PTR ds:0xefceb5ff,cx
  41ead6:	std    
  41ead7:	jmp    FWORD PTR [ebp+0x7e]
  41eada:	or     ch,al
  41eadc:	push   ds
  41eadd:	pop    edx
  41eade:	std    
  41eadf:	(bad)  
  41eae0:	jnp    0x41ea70
  41eae2:	(bad)  
  41eae4:	dec    ebx
  41eae5:	fild   WORD PTR [eax-0x27b7b497]
  41eaeb:	inc    esi
  41eaec:	mov    ah,BYTE PTR [eax+0x7f]
  41eaef:	mov    ah,0xdf
  41eaf1:	ds cmp esi,0xe80eb4c4
  41eaf8:	sbb    dl,BYTE PTR [eax-0x1b3d0181]
  41eafe:	push   ebx
  41eaff:	imul   BYTE PTR [esi+edx*1+0x1683bc85]
  41eb06:	cmp    esi,0x9386574b
  41eb0c:	dec    ebx
  41eb0d:	pusha  
  41eb0e:	add    ch,BYTE PTR [eax+0x0]
	...
  41eb35:	add    BYTE PTR [eax],al
  41eb37:	add    BYTE PTR [edx],ch
  41eb39:	scas   eax,DWORD PTR es:[edi]
  41eb3a:	sar    edi,0xd7
  41eb3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb3e:	jbe    0x41eb8f
  41eb40:	jl     0x41eb7e
  41eb42:	pop    esp
  41eb43:	div    BYTE PTR [esi+ebp*2+0x6a]
  41eb47:	imul   edi,ecx,0x56
  41eb4a:	jg     0x41eb56
  41eb4c:	mov    edx,ebx
  41eb4e:	inc    DWORD PTR [edx+0x74025bde]
  41eb54:	fucom  st(2)
  41eb56:	mov    ebp,0x7fb654e3
  41eb5b:	(bad)  
  41eb5c:	mov    eax,0x33bc84cd
  41eb61:	mov    esp,0x164bfe7f
  41eb66:	call   0x6fa446d2
  41eb6b:	mov    ebp,0xe80c1624
  41eb70:	cdq    
  41eb71:	sub    DWORD PTR [ecx+0x6b3614fe],eax
  41eb77:	test   BYTE PTR [esp+esi*8],0x7f
  41eb7b:	je     0x41ebd0
  41eb7d:	mov    cl,BYTE PTR [eax+0x48]
  41eb80:	cld    
  41eb81:	jecxz  0x41ec02
  41eb83:	mov    ah,0xef
  41eb85:	or     DWORD PTR [esi-0x80],ebx
  41eb88:	in     eax,dx
  41eb89:	je     0x41eb5e
  41eb8b:	or     esi,ebx
  41eb8d:	mov    cl,0x9f
  41eb8f:	sbb    ch,0x74
  41eb92:	shl    DWORD PTR [edi-0x2b],cl
  41eb95:	mov    esi,0x74cd7820
  41eb9a:	cmp    eax,0xf6
	...
  41ebc3:	add    BYTE PTR [ecx+eiz*2-0x4f],cl
  41ebc7:	retf   0x74bd
  41ebca:	sub    eax,0x257c94b6
  41ebcf:	sub    BYTE PTR [ebp+0x5d6bf0fe],0xc2
  41ebd6:	adc    eax,0x2cbe9d80
  41ebdb:	js     0x41eb72
  41ebdd:	je     0x41ebe4
  41ebdf:	test   BYTE PTR [ecx+eiz*2+0x71],0xca
  41ebe4:	test   DWORD PTR [ebp+esi*8-0x4b],esi
  41ebe8:	mov    WORD PTR [ebp+ebp*8+0x7f],?
  41ebec:	jne    0x41ebec
  41ebee:	lock imul ebp,edi,0xffffffc1
  41ebf2:	fnstsw WORD PTR [edi+0x65]
  41ebf5:	mov    esi,0x745d77b0
  41ebfa:	rol    BYTE PTR [edi+0x7fc57400],0x97
  41ec01:	popa   
  41ec02:	mov    ch,0x7f
  41ec04:	inc    ebp
  41ec05:	popa   
  41ec06:	xor    al,0xd0
  41ec08:	cmp    eax,0x10b9ad74
  41ec0d:	jl     0x41ebb4
  41ec0f:	jg     0x41ec35
  41ec11:	cli    
  41ec12:	sub    al,0x7f
  41ec14:	and    eax,0x15685b74
  41ec19:	je     0x41eba8
  41ec1b:	ins    BYTE PTR es:[edi],dx
  41ec1c:	scas   al,BYTE PTR es:[edi]
  41ec1d:	lds    eax,FWORD PTR [ebp-0x6741f281]
  41ec23:	ja     0x41ec2a
  41ec25:	je     0x41ec26
  41ec27:	add    BYTE PTR [eax],0x0
	...
  41ec4e:	add    BYTE PTR [eax],al
  41ec50:	and    al,al
  41ec52:	(bad)  
  41ec53:	outs   dx,BYTE PTR ds:[esi]
  41ec54:	je     0x41ec13
  41ec56:	jmp    0x41ecb6
  41ec58:	ins    BYTE PTR es:[edi],dx
  41ec59:	jae    0x41ec59
  41ec5b:	aam    0x54
  41ec5d:	je     0x41ecd3
  41ec5f:	loope  0x41ecd1
  41ec61:	dec    esi
  41ec62:	cld    
  41ec63:	dec    esi
  41ec64:	push   esp
  41ec65:	jae    0x41ec1b
  41ec67:	push   ebp
  41ec68:	push   esp
  41ec69:	jae    0x41ec69
  41ec6b:	push   ecx
  41ec6c:	test   ch,al
  41ec6e:	(bad)  
  41ec6f:	ss cmp al,0xcd
  41ec72:	test   DWORD PTR [eax+0x11],0x2c26fe75
  41ec79:	std    
  41ec7a:	sti    
  41ec7b:	adc    esi,edx
  41ec7d:	adc    eax,0x4a0fe900
  41ec82:	or     ebp,ecx
  41ec84:	jae    0x41ed04
  41ec86:	jmp    0x41ecf2
  41ec88:	add    ebp,DWORD PTR [eax-0x74]
  41ec8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec8c:	add    al,0xc4
  41ec8e:	jcxz   0x41ec16
  41ec91:	enter  0x80ff,0x1
  41ec95:	into   
  41ec96:	inc    eax
  41ec97:	jmp    0xd14de989
  41ec9c:	sub    eax,0x51d6fec4
  41eca1:	dec    ecx
  41eca2:	jae    0x41ece6
  41eca4:	jg     0x41ec2c
  41eca6:	jl     0x41ec6d
  41eca8:	inc    esp
  41eca9:	(bad)  
  41ecaa:	pop    esi
  41ecab:	mov    esi,0xb1448278
  41ecb0:	(bad)  
  41ecb1:	cmc    
  41ecb2:	div    DWORD PTR [ebp+0x0]
	...
  41ecdc:	dec    edi
  41ecdd:	or     DWORD PTR [eax],eax
  41ecdf:	pop    ds
  41ece0:	inc    esp
  41ece1:	dec    edx
  41ece2:	inc    esp
  41ece3:	mov    eax,ds:0xe900099c
  41ece8:	mov    cl,0xc8
  41ecea:	(bad)  
  41eceb:	adc    al,0x97
  41eced:	jmp    0x8cfe:0x4c5d0013
  41ecf4:	das    
  41ecf5:	loope  0x41ed45
  41ecf7:	call   0x42020a
  41ecfc:	popa   
  41ecfd:	retf   0x6a0a
  41ed00:	loop   0x41ec9b
  41ed02:	inc    ebx
  41ed03:	in     al,0xa2
  41ed05:	pop    esi
  41ed06:	leave  
  41ed07:	inc    esi
  41ed08:	mov    bl,0x6
  41ed0a:	push   DWORD PTR [ebp-0xa]
  41ed0d:	(bad)  
  41ed0f:	dec    esi
  41ed10:	test   ebx,esi
  41ed12:	or     eax,eax
  41ed14:	(bad)  
  41ed15:	sbb    dl,BYTE PTR [eax+0x68]
  41ed18:	mov    bl,0x6
  41ed1a:	out    dx,eax
  41ed1b:	mov    esi,0x873f3d2
  41ed20:	pop    edx
  41ed21:	test   eax,0xde45ff6b
  41ed26:	lods   al,BYTE PTR ds:[esi]
  41ed27:	dec    ebx
  41ed28:	xor    eax,0x3a4dfdf3
  41ed2d:	xchg   DWORD PTR [ebx-0x8],edi
  41ed30:	mov    ds:0x12e8b671,al
  41ed35:	aas    
  41ed36:	std    
  41ed37:	jmp    FWORD PTR [ebx]
  41ed39:	enter  0x6,0xdf
  41ed3d:	jg     0x41ed29
  41ed3f:	add    DWORD PTR [eax],0x0
	...
  41ed66:	add    BYTE PTR [eax],al
  41ed68:	sahf   
  41ed69:	mov    DWORD PTR [eax+0x0],ebp
  41ed6c:	clc    
  41ed6d:	dec    ebx
  41ed6e:	std    
  41ed6f:	jne    0x41eddb
  41ed71:	faddp  st(0),st
  41ed73:	dec    eax
  41ed74:	test   esp,esi
  41ed76:	xchg   DWORD PTR [ebp-0x7a],eax
  41ed79:	gs out 0x46,eax
  41ed7c:	jae    0x41ed8b
  41ed7e:	push   DWORD PTR ds:0x411f3d
  41ed84:	in     eax,0x79
  41ed86:	push   es
  41ed87:	call   0x3f765e
  41ed8c:	cmp    bl,dh
  41ed8e:	inc    esp
  41ed8f:	inc    ecx
  41ed90:	dec    ebx
  41ed91:	pusha  
  41ed92:	jmp    0x96fe:0x82604b01
  41ed99:	js     0x41ee05
  41ed9b:	fld    QWORD PTR [edi]
  41ed9d:	repz jl 0x41ed9e
  41eda0:	ss mov bl,0x29
  41eda3:	inc    ecx
  41eda4:	dec    ebx
  41eda5:	jecxz  0x41ed9d
  41eda7:	pop    es
  41eda8:	jecxz  0x41edc2
  41edaa:	jge    0x41edaa
  41edac:	in     al,0x57
  41edae:	add    BYTE PTR [eax],al
  41edb0:	dec    ebx
  41edb1:	loopne 0x41ee2f
  41edb3:	je     0x41edf8
  41edb5:	enter  0xff1f,0xcc
  41edb9:	retf   0x747c
  41edbc:	(bad)  
  41edbd:	xor    dh,bh
  41edbf:	pop    es
  41edc0:	mov    bl,0xf5
  41edc2:	retf   
  41edc3:	(bad)  
  41edc4:	mov    ah,0x28
  41edc6:	inc    edx
  41edc7:	add    ecx,DWORD PTR [ebx-0x4b]
  41edca:	xchg   ebx,ebp
	...
  41edf4:	enter  0x602b,0x55
  41edf8:	hlt    
  41edf9:	test   DWORD PTR [edx],eax
  41edfb:	push   0x3
  41edfd:	add    esi,edi
  41edff:	pop    es
  41ee00:	mov    ds:0x84fecaab,eax
  41ee05:	clc    
  41ee06:	(bad)  
  41ee07:	sti    
  41ee08:	enter  0x5dbc,0x2d
  41ee0c:	or     ah,BYTE PTR [eax+0x2]
  41ee0f:	vmptrst QWORD PTR [ecx+eax*1+0x3ddf4b00]
  41ee17:	loope  0x41ee46
  41ee19:	and    DWORD PTR [eax+eax*1],eax
  41ee1c:	inc    esp
  41ee1d:	in     al,dx
  41ee1e:	inc    edx
  41ee1f:	add    BYTE PTR [ebx+0x60],cl
  41ee22:	jg     0x41ee60
  41ee24:	xor    al,BYTE PTR [ecx]
  41ee26:	ret    
  41ee27:	(bad)  
  41ee28:	cmp    al,0x68
  41ee2a:	xchg   BYTE PTR [edx-0x7cfd9db6],dh
  41ee30:	outs   dx,BYTE PTR ds:[esi]
  41ee31:	or     DWORD PTR [ebp+ebp*1-0x76],edx
  41ee35:	or     ecx,ebp
  41ee37:	or     al,0xc7
  41ee39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee3a:	out    0x3,eax
  41ee3c:	dec    ebx
  41ee3d:	mov    ebx,cs
  41ee3f:	mov    dl,0x5e
  41ee41:	retf   0x3e8
  41ee44:	push   esp
  41ee45:	test   DWORD PTR [edi+0x2],ebx
  41ee48:	dec    ebx
  41ee49:	or     DWORD PTR [edx+0x3e],ebp
  41ee4c:	mov    esi,0x4b04281f
  41ee51:	add    BYTE PTR [ebp-0x71],ch
  41ee54:	dec    ebx
  41ee55:	or     ecx,ebp
  41ee57:	add    BYTE PTR [eax],0x0
	...
  41ee7e:	add    BYTE PTR [eax],al
  41ee80:	pop    ds
  41ee81:	mov    dl,0x6
  41ee83:	ret    
  41ee84:	aam    0x70
  41ee86:	fld    QWORD PTR [edi+0x3e90a4d]
  41ee8c:	enter  0x442e,0x2d
  41ee90:	or     cl,BYTE PTR [ecx]
  41ee92:	jmp    0xe83dbda3
  41ee97:	add    ecx,DWORD PTR [ebx-0x1f]
  41ee9a:	lahf   
  41ee9b:	les    ecx,FWORD PTR [ebx]
  41ee9d:	or     DWORD PTR [ebx+0x34169c03],edx
  41eea3:	sub    eax,0xc660090a
  41eea8:	xchg   esp,eax
  41eea9:	mov    WORD PTR [ebx+0x64ff847b],es
  41eeaf:	fisttp DWORD PTR [ebx+0x9]
  41eeb2:	jmp    0xee196bdf
  41eeb7:	cmc    
  41eeb8:	je     0x41ef2a
  41eeba:	sti    
  41eebb:	fs ss retf 0x8ee8
  41eec0:	ins    BYTE PTR es:[edi],dx
  41eec1:	add    al,0xdf
  41eec3:	icebp  
  41eec4:	dec    edi
  41eec5:	bound  edx,QWORD PTR [esi]
  41eec7:	add    eax,0xd272094b
  41eecc:	push   eax
  41eecd:	test   BYTE PTR [edx],dh
  41eecf:	in     al,dx
  41eed0:	shl    edx,1
  41eed2:	inc    DWORD PTR [esi+eax*8-0x44]
  41eed6:	repz loop 0x41ee8a
  41eed9:	inc    DWORD PTR [ebx+0x94e04]
  41eedf:	nop
  41eee0:	push   ecx
  41eee1:	or     al,BYTE PTR [eax]
  41eee3:	jmp    0x41eee8
	...
  41ef0c:	and    ah,dh
  41ef0e:	inc    esi
  41ef0f:	sub    BYTE PTR [edi+0x70],al
  41ef12:	ss xchg ecx,eax
  41ef14:	cs or  eax,0x494de900
  41ef1a:	push   cs
  41ef1b:	ins    BYTE PTR es:[edi],dx
  41ef1c:	jnp    0x41ef8e
  41ef1e:	(bad)  
  41ef1f:	jmp    0xe949dde9
  41ef24:	push   ecx
  41ef25:	test   ecx,ebp
  41ef27:	jmp    0xdf40f874
  41ef2c:	inc    eax
  41ef2d:	popa   
  41ef2e:	pop    edi
  41ef2f:	mov    ds:0xac886f51,eax
  41ef34:	cmp    BYTE PTR [edi+0x76],ch
  41ef37:	icebp  
  41ef38:	inc    ecx
  41ef39:	cmc    
  41ef3a:	out    dx,eax
  41ef3b:	ss mov eax,0x7d67e803
  41ef41:	outs   dx,BYTE PTR ds:[esi]
  41ef42:	(bad)  
  41ef43:	xchg   ecx,eax
  41ef44:	retf   0x40c6
  41ef47:	jmp    0x231e46d
  41ef4c:	adc    eax,DWORD PTR es:[eax]
  41ef4f:	jmp    0x6c503891
  41ef54:	mov    ebx,0x6ee9fe6f
  41ef59:	outs   dx,DWORD PTR ds:[esi]
  41ef5a:	mov    ebp,DWORD PTR [eax+eiz*8-0x1b5b7341]
  41ef61:	mov    edi,0x6f76e969
  41ef66:	push   esp
  41ef67:	fidivr WORD PTR [ebx]
  41ef69:	bound  ebp,QWORD PTR ds:0xc0044f28
  41ef6f:	fiadd  WORD PTR [eax]
	...
  41ef95:	add    BYTE PTR [eax],al
  41ef97:	add    ah,cl
  41ef99:	xchg   esi,eax
  41ef9a:	(bad)  
  41ef9b:	push   DWORD PTR [edx]
  41ef9d:	or     ecx,DWORD PTR [ebp-0x2a4f9bb]
  41efa3:	jne    0x41efaf
  41efa5:	hlt    
  41efa6:	jae    0x41ef94
  41efa8:	fstp   QWORD PTR [ecx]
  41efaa:	lods   eax,DWORD PTR ds:[esi]
  41efab:	cs jae 0x41efb3
  41efae:	or     eax,eax
  41efb0:	ss ins DWORD PTR es:[edi],dx
  41efb2:	mov    eax,DWORD PTR [ebp-0x3e]
  41efb5:	pop    edx
  41efb6:	push   0x6a054800
  41efbb:	pop    es
  41efbc:	pop    eax
  41efbd:	add    eax,0xf3c675ff
  41efc2:	adc    esi,DWORD PTR [ecx+0xafe460c]
  41efc8:	mov    ds:0x7ff545e,al
  41efcd:	jmp    0x41efb5
  41efcf:	call   0x8a3fe36f
  41efd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efd5:	(bad)  
  41efd6:	mov    eax,DWORD PTR [ebp-0x7e]
  41efd9:	pop    edx
  41efda:	std    
  41efdb:	jne    0x41f04b
  41efdd:	pop    esp
  41efde:	(bad)  
  41efdf:	imul   esp,DWORD PTR [ebp-0x80101a4],0x3315fdce
  41efe9:	and    BYTE PTR [ecx+0x0],al
  41efec:	cdq    
  41efed:	retf   0x2972
  41eff0:	mov    edx,0xfcef000a
  41eff5:	bnd jae 0x41f000
  41eff8:	dec    edx
  41eff9:	cmp    al,BYTE PTR [esi-0x1]
	...
  41f024:	dec    ebp
  41f025:	repz je 0x41f030
  41f028:	jge    0x41f0a3
  41f02a:	add    bh,bh
  41f02c:	test   DWORD PTR [ecx],0xf3a458e8
  41f032:	std    
  41f033:	inc    DWORD PTR [edi]
  41f035:	in     eax,0xfd
  41f037:	jne    0x41efd7
  41f039:	lock jae 0x41f044
  41f03c:	dec    ebx
  41f03d:	dec    eax
  41f03e:	int    0x45
  41f040:	dec    esp
  41f041:	aas    
  41f042:	js     0x41f0b8
  41f044:	daa    
  41f045:	pop    eax
  41f046:	test   BYTE PTR [eax+0x3c],cl
  41f049:	scas   eax,DWORD PTR es:[edi]
  41f04a:	js     0x41f0c0
  41f04c:	das    
  41f04d:	mov    bh,0xe
  41f04f:	mov    ch,0x5d
  41f051:	and    DWORD PTR [edx+ebp*2],eax
  41f054:	dec    ebx
  41f055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f056:	out    dx,al
  41f057:	jmp    0x41f075
  41f059:	jne    0x41f014
  41f05b:	sub    eax,0x7477608a
  41f060:	sbb    ecx,DWORD PTR [eax-0x78fbb720]
  41f066:	test   dh,al
  41f068:	pop    ebx
  41f069:	out    dx,eax
  41f06a:	(bad)  
  41f06b:	repz enter 0x6e74,0xff
  41f070:	cmp    eax,0xe4fd6be5
  41f075:	out    0x6a,al
  41f077:	mov    ah,0xdd
  41f079:	into   
  41f07a:	js     0x41f0e5
  41f07c:	dec    ebx
  41f07d:	xlat   BYTE PTR ds:[ebx]
  41f07e:	out    dx,al
  41f07f:	test   esp,0xa2d5d74
  41f085:	pusha  
  41f086:	ja     0x41f0fc
	...
  41f0b0:	mov    edi,0xa307ef2e
  41f0b5:	stc    
  41f0b6:	sar    esi,0xac
  41f0b9:	jle    0x41f093
  41f0bb:	enter  0x5b89,0x2
  41f0bf:	push   ebp
  41f0c0:	sar    bl,1
  41f0c2:	add    bl,0x77
  41f0c5:	push   cs
  41f0c6:	jns    0x41f0c6
  41f0c8:	mov    esi,0x844f76a4
  41f0cd:	in     al,dx
  41f0ce:	push   es
  41f0cf:	push   DWORD PTR [esi]
  41f0d1:	mov    bh,0x29
  41f0d3:	inc    ecx
  41f0d4:	dec    ebx
  41f0d5:	or     ch,bh
  41f0d7:	sbb    cl,BYTE PTR [ebx+0x60]
  41f0da:	or     eax,eax
  41f0dc:	push   esp
  41f0dd:	or     DWORD PTR [eax+ebp*4+0x4b],ebp
  41f0e1:	or     ecx,ebp
  41f0e3:	inc    eax
  41f0e4:	(bad)  
  41f0e6:	call   0xa64b3bee
  41f0eb:	mov    esi,0x3ed6d38
  41f0f0:	dec    ebx
  41f0f1:	fucomip st,st(0)
  41f0f3:	in     eax,dx
  41f0f4:	xor    al,0xe3
  41f0f6:	call   0x23c01de8
  41f0fb:	jo     0x41f091
  41f0fd:	jle    0x41f16a
  41f0ff:	outs   dx,DWORD PTR ds:[esi]
  41f100:	adc    eax,0x15d39d6d
  41f105:	not    DWORD PTR [eax-0x7f926888]
  41f10b:	(bad)  
  41f10c:	popa   
  41f10d:	or     ecx,ebp
  41f10f:	or     al,0xb
  41f111:	mul    bl
  41f113:	push   0x0
	...
  41f139:	add    BYTE PTR [eax],al
  41f13b:	add    BYTE PTR [edx+0xa],bh
  41f13e:	jmp    0xc0e35446
  41f143:	ret    0x6be4
  41f146:	fild   DWORD PTR [edi]
  41f148:	repz stc 
  41f14a:	lods   al,BYTE PTR ds:[esi]
  41f14b:	js     0x41f122
  41f14d:	fldenv [ecx+0x53]
  41f150:	mov    edi,0xc5705486
  41f155:	ins    BYTE PTR es:[edi],dx
  41f156:	cwde   
  41f157:	aad    0xa4
  41f159:	jmp    0x82f76a0a
  41f15e:	imul   edx,DWORD PTR [edi-0x4b],0x6c
  41f162:	sub    eax,0x25c1de6b
  41f167:	js     0x41f19b
  41f169:	or     DWORD PTR [ecx-0x1735f24b],edx
  41f16f:	js     0x41f148
  41f171:	dec    ebp
  41f172:	adc    eax,0xbb6c8578
  41f177:	xor    BYTE PTR [edx],dh
  41f179:	retf   0x6be8
  41f17c:	mov    esi,0xf4f5ffc0
  41f181:	add    BYTE PTR [ecx+edi*8+0x53fe6af4],0x47
  41f189:	loope  0x41f141
  41f18b:	mov    gs,WORD PTR es:[ebp+edi*8-0x64]
  41f190:	repz jb 0x41f191
  41f193:	into   
  41f194:	mov    esp,0x6103735
  41f199:	ins    BYTE PTR es:[edi],dx
  41f19a:	out    0x61,al
  41f19c:	add    BYTE PTR [ebx-0x2],ch
  41f19f:	pusha  
	...
  41f1c8:	retf   0xf65f
  41f1cb:	scas   al,BYTE PTR es:[edi]
  41f1cc:	pushf  
  41f1cd:	loop   0x41f1ce
  41f1cf:	adc    bl,ah
  41f1d1:	ret    0xe940
  41f1d4:	popf   
  41f1d5:	mov    ch,0xdb
  41f1d7:	sahf   
  41f1d8:	xchg   esp,eax
  41f1d9:	imul   edi,esi,0xffffffd4
  41f1dc:	xor    eax,0x70e94122
  41f1e1:	repnz dec edx
  41f1e3:	jle    0x41f261
  41f1e5:	add    DWORD PTR [ecx+eax*4+0x3fe6b5c],0xaec0e14f
  41f1f0:	pop    es
  41f1f1:	ins    BYTE PTR es:[edi],dx
  41f1f2:	std    
  41f1f3:	xchg   esp,eax
  41f1f4:	jae    0x41f269
  41f1f6:	(bad)  
  41f1f7:	push   esi
  41f1f8:	push   esp
  41f1f9:	xor    eax,0x6b8e0037
  41f1fe:	out    0xa5,al
  41f200:	xchg   ecx,eax
  41f201:	push   0xfffffffe
  41f203:	jo     0x41f1cf
  41f205:	div    BYTE PTR ds:0xe234
  41f20a:	inc    eax
  41f20c:	retw   
  41f20e:	inc    eax
  41f20f:	jmp    0x171da729
  41f214:	sbb    al,0x6b
  41f216:	(bad)  
  41f217:	fcomp  QWORD PTR [ebp+0x22]
  41f21a:	inc    ecx
  41f21b:	jmp    0x8d2010
  41f220:	inc    ebp
  41f221:	hlt    
  41f222:	xchg   DWORD PTR [ebp-0x223be],eax
  41f228:	loope  0x41f1db
  41f22a:	jmp    0x0:0xf7
	...
  41f251:	add    BYTE PTR [eax],al
  41f253:	add    BYTE PTR [ebp-0xe],dh
  41f256:	(bad)  
  41f257:	jae    0x41f27a
  41f259:	pop    ebp
  41f25a:	(bad)  
  41f25b:	inc    DWORD PTR [ebp+0x6a75fdb5]
  41f261:	fist   WORD PTR [ecx-0x20beabc]
  41f267:	mov    ch,0x2
  41f269:	fdiv   st(5),st
  41f26b:	push   ebp
  41f26d:	jns    0x41f275
  41f26f:	call   0x3f9d71
  41f274:	cmc    
  41f275:	mov    ecx,0xf3e5f7ea
  41f27a:	std    
  41f27b:	jne    0x41f297
  41f27d:	(bad)  
  41f27f:	inc    esp
  41f280:	mov    ch,0xf3
  41f282:	std    
  41f283:	mov    ch,0xca
  41f285:	(bad)  
  41f287:	inc    ebp
  41f289:	jns    0x41f291
  41f28b:	call   0x3f9d49
  41f290:	jne    0x41f24b
  41f292:	loop   0x41f28b
  41f294:	jne    0x41f289
  41f296:	std    
  41f297:	jne    0x41f273
  41f299:	fidivr WORD PTR [ebx-0x20c8abc]
  41f29f:	mov    ch,0x82
  41f2a1:	(bad)  
  41f2a3:	call   DWORD PTR ds:0xd5e80679
  41f2a9:	stos   BYTE PTR es:[edi],al
  41f2aa:	std    
  41f2ab:	push   DWORD PTR [ebp-0x47]
  41f2ae:	(bad)  
  41f2b0:	jne    0x41f2a5
  41f2b2:	std    
  41f2b3:	jne    0x41f25f
  41f2b5:	fidivr WORD PTR [esi-0x2]
	...
  41f2e0:	gs repz std 
  41f2e3:	mov    ch,0x56
  41f2e5:	(bad)  
  41f2e7:	dec    DWORD PTR [ebx+0x8]
  41f2ea:	stos   BYTE PTR es:[edi],al
  41f2eb:	inc    esi
  41f2ec:	test   bl,bh
  41f2ee:	jne    0x41f2a4
  41f2f0:	jnp    0x41f35d
  41f2f2:	je     0x41f2f2
  41f2f4:	arpl   ax,ax
  41f2f6:	mov    ebp,0xae736cfe
  41f2fb:	jmp    0x41f359
  41f2fd:	pop    ebx
  41f2fe:	je     0x41f2e7
  41f300:	mov    dh,0x1b
  41f302:	jne    0x41f302
  41f304:	push   esp
  41f305:	xchg   ebp,eax
  41f306:	imul   esi,esi,0x4c
  41f309:	push   ebx
  41f30a:	imul   ecx,DWORD PTR [ecx-0x18bc474],0xfffffff6
  41f311:	cmp    ebp,DWORD PTR [esi+edi*8+0x34]
  41f315:	pop    eax
  41f316:	hlt    
  41f317:	inc    esi
  41f318:	sub    al,0xb3
  41f31a:	je     0x41f2d0
  41f31c:	sub    esi,DWORD PTR [ebx+0xc33fe74]
  41f322:	mov    ebp,0xbe8b14fe
  41f327:	mul    DWORD PTR [edx]
  41f329:	add    BYTE PTR [esi-0x2],dh
  41f32c:	add    al,0x7b
  41f32e:	out    dx,al
  41f32f:	sti    
  41f330:	repz rcr DWORD PTR [edx],0x0
  41f334:	dec    ebx
  41f335:	mov    ecx,0xd4b0741
  41f33a:	mov    ebx,ebp
  41f33c:	enter  0x77a3,0x69
  41f340:	dec    ebx
  41f341:	push   esi
  41f342:	leave  
  41f343:	inc    BYTE PTR [eax]
	...
  41f369:	add    BYTE PTR [eax],al
  41f36b:	add    BYTE PTR [esi+0x78],bl
  41f36e:	push   0xffffff85
  41f370:	xchg   ebx,edx
  41f372:	je     0x41f2fc
  41f374:	push   cs
  41f375:	mov    esp,0xa10492eb
  41f37a:	add    bh,bh
  41f37c:	ds js  0x41f3e9
  41f37f:	pop    es
  41f380:	lods   eax,DWORD PTR ds:[esi]
  41f381:	xor    dh,BYTE PTR [ebp-0x2]
  41f384:	push   ds
  41f385:	sbb    al,0x75
  41f387:	je     0x41f3dc
  41f389:	or     DWORD PTR [ecx],edx
  41f38b:	mov    bl,0x8
  41f38d:	push   0x1d
  41f38f:	dec    ebx
  41f390:	mov    al,BYTE PTR [ecx+ebp*8]
  41f393:	into   
  41f394:	rcr    DWORD PTR [ecx+ebp*2+0x40],1
  41f398:	js     0x41f403
  41f39a:	jnp    0x41f3a3
  41f39c:	arpl   WORD PTR [ebx],sp
  41f39e:	loope  0x41f3a3
  41f3a0:	dec    ebx
  41f3a1:	(bad)  
  41f3a2:	sub    bh,ch
  41f3a4:	dec    eax
  41f3a5:	inc    eax
  41f3a6:	sub    cl,BYTE PTR [eax]
  41f3a8:	dec    ebx
  41f3a9:	push   0x5b
  41f3ab:	adc    al,0x63
  41f3ad:	adc    eax,DWORD PTR [ecx]
  41f3af:	add    al,0x4b
  41f3b1:	(bad)  
  41f3b2:	test   al,0xee
  41f3b4:	dec    eax
  41f3b5:	push   edx
  41f3b6:	stos   BYTE PTR es:[edi],al
  41f3b7:	pop    es
  41f3b8:	dec    ebx
  41f3b9:	xchg   edx,eax
  41f3ba:	sub    edi,DWORD PTR [ebp+esi*1-0x21]
  41f3be:	shr    BYTE PTR [ebx+0x57],0xd0
  41f3c2:	mov    ch,0x74
  41f3c4:	ror    esi,cl
  41f3c6:	lods   al,BYTE PTR ds:[esi]
  41f3c7:	je     0x41f360
  41f3c9:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41f3cb:	out    dx,al
  41f3cc:	sbb    al,0x69
  41f3ce:	adc    edx,DWORD PTR [eax+eax*1]
	...
  41f3f5:	add    BYTE PTR [eax],al
  41f3f7:	add    BYTE PTR [ebx],ah
  41f3f9:	pop    eax
  41f3fa:	cmp    dh,BYTE PTR [ebp+0x5]
  41f3fd:	adc    eax,0x9241efa9
  41f402:	sub    esi,DWORD PTR [eax+0x62]
  41f405:	or     DWORD PTR [esi+edi*4-0x8],ebp
  41f409:	mov    ecx,0x71e0ee75
  41f40e:	mov    edx,0xf168dde7
  41f413:	inc    ebx
  41f414:	pop    eax
  41f415:	das    
  41f416:	rol    DWORD PTR [ebx],1
  41f418:	cmp    edi,DWORD PTR [eax-0x6a]
  41f41b:	je     0x41f45c
  41f41d:	adc    DWORD PTR [ecx-0x2d],eax
  41f420:	or     DWORD PTR [eax+0x45],ebp
  41f423:	je     0x41f464
  41f425:	adc    eax,0x7144ee3e
  41f42a:	dec    DWORD PTR [ebp+0x2efe678b]
  41f430:	lods   eax,DWORD PTR ds:[esi]
  41f431:	pop    esp
  41f432:	(bad)  
  41f433:	pushf  
  41f434:	sbb    al,0x67
  41f436:	je     0x41f429
  41f438:	and    ch,dh
  41f43a:	inc    edx
  41f43b:	push   ss
  41f43c:	jmp    DWORD PTR [esi+0x74]
  41f43f:	or     eax,0x645adf0
  41f444:	call   DWORD PTR [eax-0x3f]
  41f447:	in     eax,dx
  41f448:	dec    eax
  41f449:	mov    esi,0x4ccb058a
  41f44e:	rcl    DWORD PTR [edi-0x2ef42329],cl
  41f454:	pusha  
  41f455:	sar    esi,cl
  41f457:	fimul  WORD PTR [eax+ebp*4+0x74]
  41f45b:	in     al,dx
	...
  41f484:	sbb    dl,BYTE PTR [ecx-0x3f]
  41f487:	fisttp QWORD PTR [eax-0x6a]
  41f48a:	inc    esp
  41f48b:	mov    ecx,0xed74671f
  41f490:	nop
  41f491:	add    DWORD PTR [esi+esi*4-0x68],ecx
  41f495:	adc    eax,eax
  41f497:	faddp  st(4),st
  41f499:	inc    edi
  41f49a:	(bad)  
  41f49b:	call   0x9db65ce8
  41f4a0:	outs   dx,DWORD PTR ds:[esi]
  41f4a1:	lea    eax,[ebp-0x6a]
  41f4a4:	js     0x41f437
  41f4a6:	inc    esp
  41f4a7:	jge    0x41f521
  41f4a9:	(bad)  
  41f4ab:	xchg   dl,dh
  41f4ad:	jae    0x41f4ad
  41f4af:	hlt    
  41f4b0:	pusha  
  41f4b1:	jo     0x41f45d
  41f4b3:	das    
  41f4b4:	pop    eax
  41f4b5:	addr16 mov dh,ah
  41f4b8:	jl     0x41f52b
  41f4ba:	mov    ds:0x680948e9,al
  41f4bf:	dec    edi
  41f4c0:	add    cl,cl
  41f4c2:	(bad)  
  41f4c3:	mov    esi,0xe9176020
  41f4c8:	dec    eax
  41f4c9:	adc    al,0xc0
  41f4cb:	add    bh,dh
  41f4cd:	adc    cl,ch
  41f4cf:	cwde   
  41f4d0:	mov    ds:0x628b000b,al
  41f4d5:	inc    ebp
  41f4d6:	in     al,dx
  41f4d7:	inc    edi
  41f4d8:	repz or ebp,eax
  41f4db:	cmp    DWORD PTR [ebp+0x3203000b],edx
  41f4e1:	out    0x73,al
  41f4e3:	call   0x4187ceb2
	...
  41f510:	jb     0x41f553
  41f512:	out    0xd3,al
  41f514:	push   0xb
  41f516:	add    BYTE PTR [ebx],cl
  41f518:	and    ah,BYTE PTR [edx+0x0]
  41f51b:	jmp    0x41f501
  41f51d:	in     eax,0xe
  41f51f:	mov    BYTE PTR [edi-0x79ba7812],dh
  41f525:	inc    ebx
  41f526:	inc    BYTE PTR [edi+0x23]
  41f529:	or     eax,0x12d8e856
  41f52e:	add    BYTE PTR [eax],al
  41f530:	sub    ebx,ecx
  41f532:	jae    0x41f536
  41f534:	sbb    DWORD PTR [edx],edi
  41f536:	mov    eax,esi
  41f538:	call   0xfcc3:0x3241480d
  41f53f:	push   ss
  41f540:	xor    cl,BYTE PTR [ebx]
  41f542:	add    esi,eax
  41f544:	fwait
  41f545:	popa   
  41f546:	fisubr DWORD PTR [eax-0x54]
  41f549:	push   ebx
  41f54a:	aas    
  41f54b:	add    BYTE PTR [ebp+eax*8-0x6a],al
  41f54f:	sbb    dl,dh
  41f551:	or     cl,BYTE PTR [ebx]
  41f553:	shl    bh,0xc
  41f556:	jmp    0x41f593
  41f558:	js     0x41f554
  41f55a:	xchg   DWORD PTR [ebp-0x3b],edx
  41f55d:	in     eax,0x43
  41f55f:	fsubr  DWORD PTR [ecx+0x51]
  41f562:	loop   0x41f52a
  41f564:	loop   0x41f570
  41f566:	mov    eax,DWORD PTR [ebp-0x76]
  41f569:	sar    dh,1
  41f56b:	dec    DWORD PTR [ebx-0x41]
  41f56e:	neg    ebx
  41f570:	mov    esp,0xfe5a3d
	...
  41f599:	add    BYTE PTR [eax],al
  41f59b:	add    BYTE PTR [esi],bh
  41f59d:	pop    eax
  41f59e:	pop    edx
  41f59f:	xchg   edx,eax
  41f5a0:	lods   eax,DWORD PTR ds:[esi]
  41f5a1:	daa    
  41f5a2:	jb     0x41f52d
  41f5a4:	(bad)  
  41f5a5:	sar    BYTE PTR [ebp+0x44],cl
  41f5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5a9:	call   0x27407fc0
  41f5ae:	jle    0x41f5f4
  41f5b0:	jae    0x41f58a
  41f5b2:	adc    al,BYTE PTR [eax-0x7afe8fbb]
  41f5b8:	pop    ss
  41f5b9:	pop    ss
  41f5ba:	jb     0x41f5ba
  41f5bc:	je     0x41f5a3
  41f5be:	pop    esi
  41f5bf:	out    0xaa,eax
  41f5c1:	lods   eax,DWORD PTR ds:[esi]
  41f5c2:	jno    0x41f5c2
  41f5c4:	(bad)  
  41f5c5:	mov    ch,0x72
  41f5c7:	dec    edi
  41f5c8:	jae    0x41f5f9
  41f5ca:	mov    esi,0x33b54fe
  41f5cf:	pop    esi
  41f5d0:	xor    BYTE PTR [edx-0x14610001],0x5f
  41f5d7:	(bad)  
  41f5d8:	mov    dh,0x44
  41f5da:	pop    edx
  41f5db:	aam    0x82
  41f5dd:	dec    edi
  41f5de:	jo     0x41f5ea
  41f5e0:	or     ebx,DWORD PTR [ebx+ebx*1]
  41f5e3:	push   0xffc336fa
  41f5e8:	mov    WORD PTR [eax-0x23],cs
  41f5eb:	dec    eax
  41f5ec:	adc    al,0xaf
  41f5ee:	shl    DWORD PTR [edi+0x3d],cl
  41f5f1:	mov    ds:0x706cffc3,al
  41f5f6:	add    ch,bh
  41f5f8:	mov    ebp,0x8a466607
  41f5fd:	jo     0x41f5d1
  41f5ff:	inc    BYTE PTR [eax]
	...
  41f625:	add    BYTE PTR [eax],al
  41f627:	add    BYTE PTR [esi+0x58],dh
  41f62a:	pop    edx
  41f62b:	xor    DWORD PTR [ebx-0x21],0x2d82e770
  41f632:	jno    0x41f632
  41f634:	add    cl,BYTE PTR [ecx]
  41f636:	sub    edi,esp
  41f638:	int3   
  41f639:	mov    esp,0x4cc96071
  41f63e:	push   esp
  41f63f:	fidivr WORD PTR [edi+ebp*8+0x113f70a2]
  41f646:	push   ecx
  41f647:	in     eax,dx
  41f648:	or     ah,BYTE PTR [esi+0x3d]
  41f64b:	jnp    0x41f65c
  41f64d:	gs ret 0x9c0d
  41f651:	fneni(8087 only) 
  41f653:	pop    ebx
  41f654:	out    dx,eax
  41f655:	gs and eax,0x1e2a2271
  41f65b:	test   DWORD PTR [ecx+esi*2+0x71],0x82657d71
  41f663:	pcmpeqb mm3,mm3
  41f666:	lock pop ebx
  41f668:	(bad)  [ebp-0x3]
  41f66b:	jo     0x41f659
  41f66d:	or     cl,ch
  41f66f:	pusha  
  41f670:	sahf   
  41f671:	lock or al,0xc9
  41f674:	or     ecx,DWORD PTR [ecx]
  41f676:	push   ecx
  41f677:	push   ebx
  41f678:	add    eax,0xbf70e8c8
  41f67d:	adc    ecx,eax
  41f67f:	es mov cl,0x64
  41f682:	int    0x70
  41f684:	mov    edi,0x44f6c565
  41f689:	jno    0x41f6c9
  41f68b:	mov    BYTE PTR [eax],0x0
	...
  41f6b2:	add    BYTE PTR [eax],al
  41f6b4:	and    eax,0x48459f65
  41f6b9:	or     DWORD PTR [edi*2+0x4bac8b20],edx
  41f6c0:	adc    eax,0x8f7e9d65
  41f6c5:	cmp    BYTE PTR gs:[ecx+0x77],dh
  41f6c9:	adc    eax,0x714cf68e
  41f6ce:	sub    al,0x19
  41f6d0:	dec    ebx
  41f6d1:	or     edx,esi
  41f6d3:	inc    ebx
  41f6d4:	push   ebp
  41f6d5:	mov    ?,edi
  41f6d7:	test   al,0x49
  41f6d9:	or     DWORD PTR [eax],eax
  41f6db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6dc:	or     eax,0x48e8ff5d
  41f6e1:	or     edi,eax
  41f6e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6e4:	cmp    al,0x63
  41f6e6:	push   es
  41f6e7:	jmp    0xc341e634
  41f6ec:	dec    eax
  41f6ed:	out    dx,eax
  41f6ee:	call   edx
  41f6f0:	dec    eax
  41f6f1:	xchg   esi,eax
  41f6f2:	inc    esp
  41f6f3:	xor    eax,0x3d849578
  41f6f8:	and    esp,DWORD PTR [ebx-0x2]
  41f6fb:	cdq    
  41f6fc:	sbb    ebx,ebp
  41f6fe:	mul    DWORD PTR [esi]
  41f700:	xchg   ebp,eax
  41f701:	pusha  
  41f702:	out    0xf7,eax
  41f704:	arpl   WORD PTR [ecx],cx
  41f706:	add    dl,ah
  41f708:	or     al,bl
  41f70a:	add    al,0x0
  41f70c:	iret   
  41f70d:	or     DWORD PTR [eax],eax
  41f70f:	jmp    0xa869a3a4
  41f714:	dec    eax
  41f715:	fs je  0x41f6fd
	...
  41f740:	add    BYTE PTR [ecx],ah
  41f742:	dec    eax
  41f743:	out    dx,al
  41f744:	in     al,0xd3
  41f746:	mov    bh,BYTE PTR [ecx-0x290c7236]
  41f74c:	mov    ah,0x63
  41f74e:	dec    edi
  41f74f:	cmp    ebx,DWORD PTR [edi-0x5b31b7cf]
  41f755:	xchg   ecx,eax
  41f756:	test   BYTE PTR [ecx-0x2e019c4c],ah
  41f75c:	xor    al,0xc8
  41f75e:	(bad)  
  41f75f:	mov    dh,0x1
  41f761:	fs data16 std 
  41f764:	ror    al,1
  41f766:	jmp    DWORD PTR [ebp-0x6109c42e]
  41f76c:	je     0x41f7d1
  41f76e:	je     0x41f751
  41f770:	mov    al,ds:0x648e468a
  41f775:	xchg   ecx,eax
  41f776:	test   BYTE PTR [eax],al
  41f778:	jb     0x41f756
  41f77a:	std    
  41f77b:	(bad)  
  41f77c:	cmp    BYTE PTR ds:0x4e2a3568,cl
  41f782:	(bad)  
  41f783:	(bad)  
  41f784:	pop    ds
  41f785:	aad    0xf5
  41f787:	jmp    DWORD PTR [ebp-0xc]
  41f78a:	jae    0x41f794
  41f78c:	sbb    ch,BYTE PTR [ebp+eax*2-0x1]
  41f790:	adc    eax,0x1dec83e6
  41f795:	hlt    
  41f796:	std    
  41f797:	push   0xffffffa2
  41f799:	aas    
  41f79a:	cmp    al,0x48
  41f79c:	repz pop es
  41f79e:	push   DWORD PTR [ebp-0x223c6]
	...
  41f7cc:	bound  eax,QWORD PTR gs:[esi]
  41f7cf:	call   0x3f42aa
  41f7d4:	sti    
  41f7d5:	xchg   ecx,eax
  41f7d6:	out    0xf7,al
  41f7d8:	push   ebp
  41f7d9:	hlt    
  41f7da:	mov    eax,DWORD PTR [ebp-0x223da]
  41f7e0:	sar    BYTE PTR [edi],cl
  41f7e2:	inc    ebp
  41f7e3:	dec    eax
  41f7e4:	mov    bl,0x7
  41f7e6:	push   DWORD PTR [ebp-0x223c6]
  41f7ec:	gs pusha 
  41f7ee:	push   es
  41f7ef:	call   0x3f442a
  41f7f4:	mov    ebx,0x15f7e291
  41f7f9:	hlt    
  41f7fa:	push   0x46378a00
  41f7ff:	inc    ecx
  41f800:	and    dh,ah
  41f802:	mov    bl,0xd8
  41f804:	(bad)  
  41f806:	std    
  41f807:	call   FWORD PTR [edi+0x65]
  41f80a:	out    0x11,al
  41f80c:	ins    DWORD PTR es:[edi],dx
  41f80d:	repnz std 
  41f80f:	mov    DWORD PTR [edi-0x1a000a1a],ebx
  41f815:	xchg   DWORD PTR [ebx+0x6d834bf0],edi
  41f81b:	dec    BYTE PTR [ebx-0x4]
  41f81e:	fiadd  DWORD PTR [edx-0x18a8352]
  41f824:	in     al,0x70
  41f826:	mul    BYTE PTR [ecx-0x38]
  41f829:	sbb    eax,0xf3d4f65b
  41f82e:	add    dh,BYTE PTR [eax+eax*1+0x0]
	...
  41f856:	add    BYTE PTR [eax],al
  41f858:	jb     0x41f892
  41f85a:	add    al,BYTE PTR [eax]
  41f85c:	mov    ah,0x82
  41f85e:	ins    DWORD PTR es:[edi],dx
  41f85f:	je     0x41f8bc
  41f861:	enter  0x3fd6,0xb4
  41f865:	shr    DWORD PTR [ebp-0x4c],cl
  41f868:	mov    ebx,0xa4fe6e23
  41f86d:	popf   
  41f86e:	adc    ch,al
  41f870:	repz mov al,0x6d
  41f873:	(bad)  
  41f874:	xchg   esp,eax
  41f875:	fstp   QWORD PTR [esi-0xa]
  41f878:	mov    WORD PTR [ebx],gs
  41f87a:	outs   dx,BYTE PTR ds:[esi]
  41f87b:	je     0x41f8d8
  41f87d:	clc    
  41f87e:	mov    BYTE PTR [edi],bh
  41f880:	jl     0x41f87d
  41f882:	ins    DWORD PTR es:[edi],dx
  41f883:	mov    ah,0x63
  41f885:	sti    
  41f886:	ins    DWORD PTR es:[edi],dx
  41f887:	(bad)  
  41f888:	ins    BYTE PTR es:[edi],dx
  41f889:	in     eax,0x12
  41f88b:	call   0xfeafa967
  41f890:	pop    esp
  41f891:	and    eax,0x7354f64f
  41f896:	ins    BYTE PTR es:[edi],dx
  41f897:	mov    ah,0x67
  41f899:	inc    ebx
  41f89a:	ins    BYTE PTR es:[edi],dx
  41f89b:	inc    BYTE PTR [ebp+edi*4+0x13]
  41f89f:	call   0xfeaf2933
  41f8a4:	xor    al,0x7d
  41f8a6:	arpl   si,si
  41f8a8:	sub    al,0x4b
  41f8aa:	ins    BYTE PTR es:[edi],dx
  41f8ab:	je     0x41f8e8
  41f8ad:	cmp    cl,bl
  41f8af:	aas    
  41f8b0:	sbb    al,0x9b
  41f8b2:	ins    BYTE PTR es:[edi],dx
  41f8b3:	je     0x41f8f0
  41f8b5:	mov    bl,0xb6
  41f8b7:	xlat   BYTE PTR ds:[ebx]
  41f8b8:	adc    al,0x9
  41f8ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8bb:	ins    DWORD PTR es:[edi],dx
	...
  41f8e4:	add    eax,0x7a5bf0dc
  41f8e9:	arpl   WORD PTR [ebp-0x4f640a93],dx
  41f8ef:	jne    0x41f8de
  41f8f1:	popa   
  41f8f2:	nop
  41f8f3:	loope  0x41f87e
  41f8f5:	bound  edi,QWORD PTR [ebp+0x6d]
  41f8f8:	xchg   edi,eax
  41f8f9:	pop    eax
  41f8fa:	jge    0x41f969
  41f8fc:	aad    0x70
  41f8fe:	adc    cl,al
  41f900:	int    0x61
  41f902:	gs mov bh,0xb0
  41f905:	pop    ecx
  41f906:	pop    ebp
  41f907:	ins    DWORD PTR es:[edi],dx
  41f908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f909:	shr    DWORD PTR [ecx-0x6c9e4a94],cl
  41f90f:	pop    esp
  41f910:	mov    ch,0x61
  41f912:	inc    ebp
  41f913:	pop    esp
  41f914:	or     al,dh
  41f916:	cmp    eax,0x4c9b9d6d
  41f91b:	jne    0x41f8b2
  41f91d:	popa   
  41f91e:	inc    eax
  41f91f:	xor    eax,0x6d256208
  41f924:	mov    edi,0x7d6d1568
  41f929:	jo     0x41f8ef
  41f92b:	shl    BYTE PTR [ebp+0x61],0xd
  41f92f:	(bad)  
  41f930:	je     0x41f9a1
  41f932:	mov    ch,0x6d
  41f934:	gs popa 
  41f936:	std    
  41f937:	mul    BYTE PTR [eax+0x70]
  41f93a:	jle    0x41f952
  41f93c:	dec    ebx
  41f93d:	or     DWORD PTR [eax],esp
  41f93f:	inc    edx
  41f940:	inc    eax
  41f941:	or     DWORD PTR [ecx+edi*2],edi
  41f944:	xor    BYTE PTR [ebp+0x6fa4],cl
	...
  41f96e:	add    BYTE PTR [eax],al
  41f970:	mov    dl,0x9
  41f972:	inc    ebx
  41f973:	mov    ecx,0x5be0d735
  41f978:	outs   dx,BYTE PTR ds:[esi]
  41f979:	leave  
  41f97a:	lds    ebp,FWORD PTR [ebx+edx*8-0x3a]
  41f97e:	mov    esp,0x11976c
  41f983:	inc    ecx
  41f984:	pop    ss
  41f985:	leave  
  41f986:	inc    eax
  41f987:	jmp    0xd0790f2b
  41f98c:	or     DWORD PTR [ecx-0x1a],esp
  41f98f:	xchg   ebp,eax
  41f990:	ins    DWORD PTR es:[edi],dx
  41f991:	pop    edi
  41f992:	(bad)  
  41f993:	xchg   esi,eax
  41f994:	std    
  41f995:	or     BYTE PTR [eax-0x1f],ch
  41f998:	mov    al,0xc9
  41f99a:	call   DWORD PTR [eax]
  41f99c:	dec    ecx
  41f99d:	or     DWORD PTR [eax],eax
  41f99f:	imul   eax,DWORD PTR [eax+0x6776fc6a],0x5f6d745f
  41f9a9:	aad    0x7
  41f9ab:	push   ecx
  41f9ac:	cdq    
  41f9ad:	and    bh,bh
  41f9af:	pop    esi
  41f9b0:	or     DWORD PTR [edx+0x3],0xeb939de9
  41f9b7:	push   0x4
  41f9b9:	fs imul ebp,ecx,0xb4fed482
  41f9c0:	mov    al,ds:0x27f6f468
  41f9c5:	pop    edi
  41f9c6:	mov    BYTE PTR [esp+ebx*1+0x27e8ffe8],ah
  41f9cd:	sahf   
  41f9ce:	addr16 mov esi,0x80ffc9c0
	...
  41f9fc:	xchg   edx,eax
  41f9fd:	enter  0xe940,0xdf
  41fa01:	aam    0x7
  41fa03:	adc    DWORD PTR [ebp-0xf010119],esi
  41fa09:	aam    0xfb
  41fa0b:	neg    BYTE PTR [esi+0x8]
  41fa0e:	call   0xfea182ea
  41fa13:	mov    al,0x8d
  41fa15:	or     al,0x0
  41fa17:	xor    al,0xbc
  41fa19:	je     0x41f99b
  41fa1b:	lods   eax,DWORD PTR ds:[esi]
  41fa1c:	lahf   
  41fa1d:	push   edi
  41fa1e:	dec    dh
  41fa20:	mov    dl,0xc5
  41fa22:	sti    
  41fa23:	add    BYTE PTR [edx-0xc],al
  41fa26:	jae    0x41fa34
  41fa28:	fstp   QWORD PTR [ecx+0x6]
  41fa2b:	call   0x41f2ee
  41fa30:	sub    esp,ecx
  41fa32:	or     eax,0x60785
  41fa37:	add    BYTE PTR [ebp-0x1dff09b7],ah
  41fa3d:	or     eax,DWORD PTR [eax]
  41fa3f:	(bad)  
  41fa40:	daa    
  41fa41:	fscale 
  41fa43:	pop    es
  41fa44:	repnz or ebp,DWORD PTR [edx+0x0]
  41fa48:	cmp    BYTE PTR ds:0x548006a,al
  41fa4e:	lea    eax,[ebp+0x56]
  41fa51:	xor    eax,0xdc26858b
  41fa56:	std    
  41fa57:	inc    DWORD PTR [edx]
  41fa59:	repz jae 0x41fa54
  41fa5c:	sbb    eax,0xe8fa5a
	...
  41fa85:	add    BYTE PTR [eax],al
  41fa87:	add    BYTE PTR [ecx+edi*8],ch
  41fa8a:	(bad)  
  41fa8b:	call   FWORD PTR [ecx-0x4fa8d35]
  41fa91:	int3   
  41fa92:	(bad)  
  41fa93:	jmp    DWORD PTR [edx-0x1cd759bd]
  41fa99:	or     edi,edi
  41fa9b:	jne    0x41fb1b
  41fa9d:	ret    
  41fa9e:	iret   
  41fa9f:	inc    ebp
  41faa0:	pop    ebp
  41faa1:	hlt    
  41faa2:	dec    esi
  41faa3:	mov    esi,DWORD PTR [edx]
  41faa5:	loop   0x41fa2a
  41faa7:	hlt    
  41faa8:	push   ebp
  41faa9:	hlt    
  41faaa:	std    
  41faab:	push   eax
  41faac:	rol    bl,0xbf
  41faaf:	inc    ebp
  41fab0:	pop    ebp
  41fab1:	xacquire xchg DWORD PTR [ebp-0x223c6],eax
  41fab8:	dec    edx
  41fab9:	cld    
  41faba:	inc    ecx
  41fabb:	jmp    FWORD PTR ds:0xc367fe3d
  41fac1:	mov    ds:0x374b003f,al
  41fac6:	scas   eax,DWORD PTR es:[edi]
  41fac7:	xlat   BYTE PTR ds:[ebx]
  41fac8:	xor    al,0x50
  41faca:	imul   edi,esi,0x195a589e
  41fad0:	xchg   BYTE PTR [edi-0x5f317797],bl
  41fad6:	jno    0x41fad6
  41fad8:	or     al,0xcb
  41fada:	add    ebp,DWORD PTR [eax-0x4d]
  41fadd:	sbb    ch,al
  41fadf:	(bad)  
  41fae0:	std    
  41fae1:	mov    ch,0x4a
  41fae3:	div    ah
  41fae5:	ja     0x41fb50
  41fae7:	je     0x41fb2c
  41fae9:	mov    BYTE PTR [ecx+0x43],ch
	...
  41fb14:	in     al,0x87
  41fb16:	jnp    0x41fa9c
  41fb18:	out    dx,eax
  41fb19:	xlat   BYTE PTR ds:[ebx]
  41fb1a:	imul   edi,esi,0xbcda7061
  41fb20:	xor    DWORD PTR [ecx],0x4
  41fb23:	(bad)  
  41fb24:	dec    al
  41fb26:	jno    0x41fb26
  41fb28:	mov    esp,0xa307efbf
  41fb2d:	int3   
  41fb2e:	mov    esi,0x7fe9acfe
  41fb33:	out    0x9c,eax
  41fb35:	(bad)  
  41fb36:	imul   ecx,DWORD PTR [esi+eax*8-0x6b018e04],0x3d5da80
  41fb41:	mov    cl,0x2
  41fb43:	(bad)  
  41fb44:	mov    esi,0x7cfe71c8
  41fb49:	(bad)  
  41fb4a:	out    dx,eax
  41fb4b:	pop    es
  41fb4c:	arpl   WORD PTR [edi+edi*4],bp
  41fb4f:	(bad)  
  41fb50:	ins    BYTE PTR es:[edi],dx
  41fb51:	jmp    0x79eded5
  41fb56:	push   0x69
  41fb58:	dec    ebx
  41fb59:	js     0x41fbb8
  41fb5b:	inc    edi
  41fb5c:	or     dh,BYTE PTR [eax+0x69]
  41fb5f:	mov    ah,0x73
  41fb61:	push   edi
  41fb62:	push   0x5c0944fe
  41fb67:	cld    
  41fb68:	and    al,0xb0
  41fb6a:	and    al,0x69
  41fb6c:	xor    eax,0x35646b90
  41fb71:	pop    esi
  41fb72:	int    0x77
  41fb74:	iret   
  41fb75:	cmp    BYTE PTR [ebp+0x69],bh
	...
  41fb9f:	add    BYTE PTR ds:0x820550b9,bl
  41fba5:	enter  0x68e8,0xd7
  41fba9:	inc    eax
  41fbaa:	mov    ch,0x69
  41fbac:	add    eax,0xe4fc1b5e
  41fbb1:	(bad)  
  41fbb2:	and    al,0x69
  41fbb4:	cmc    
  41fbb5:	(bad)  
  41fbb6:	imul   edx,DWORD PTR [eax-0xb],0x5d
  41fbba:	lea    eax,[ebp+0x697d58a7]
  41fbc0:	fisttp QWORD PTR [eax]
  41fbc2:	cmc    
  41fbc3:	fmul   st(1),st
  41fbc5:	fwait
  41fbc6:	test   BYTE PTR [ecx-0x33],dh
  41fbc9:	pop    ebp
  41fbca:	call   0xa3cc26be
  41fbcf:	pop    esp
  41fbd0:	mov    ch,0x5d
  41fbd2:	pop    ebp
  41fbd3:	add    al,0x3f
  41fbd5:	rol    al,0x3
  41fbd8:	dec    ebx
  41fbd9:	outs   dx,BYTE PTR ds:[esi]
  41fbda:	mov    gs,WORD PTR [ecx+0x1f]
  41fbdd:	stc    
  41fbde:	push   eax
  41fbdf:	cmp    BYTE PTR [edi+0x5e],bl
  41fbe2:	cmp    eax,0x3d58df69
  41fbe7:	imul   ecx,DWORD PTR [ebp+0x7313b35d],0x7d68e728
  41fbf1:	pop    ebp
  41fbf2:	push   ebx
  41fbf3:	pop    eax
  41fbf4:	jge    0x41fc53
  41fbf6:	adc    eax,0xf8f769
  41fbfb:	push   ss
  41fbfc:	and    eax,0x9769055e
  41fc01:	jo     0x41fbf8
  41fc03:	push   0x0
	...
  41fc2c:	push   ebp
  41fc2d:	pop    ebp
  41fc2e:	(bad)  
  41fc2f:	jnp    0x41fc69
  41fc31:	jno    0x41fc36
  41fc33:	scas   eax,DWORD PTR es:[edi]
  41fc34:	mov    bl,0x5b
  41fc36:	(bad)  
  41fc37:	pushf  
  41fc38:	test   BYTE PTR [ebx-0x2],dl
  41fc3b:	fisub  WORD PTR [ebx-0x5c211c6b]
  41fc41:	pop    ebx
  41fc42:	(bad)  
  41fc43:	push   esp
  41fc44:	aas    
  41fc45:	jno    0x41fc0a
  41fc47:	add    al,0xb2
  41fc49:	pop    ebx
  41fc4a:	(bad)  
  41fc4b:	je     0x41fbf5
  41fc4d:	push   ebx
  41fc4e:	(bad)  
  41fc4f:	mov    dh,0xa3
  41fc51:	aad    0xf
  41fc53:	shr    DWORD PTR [esi+0x1d],0xff
  41fc57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc58:	(bad)  
  41fc59:	popf   
  41fc5a:	iret   
  41fc5b:	xchg   esi,eax
  41fc5c:	arpl   WORD PTR [ebx-0x1],bx
  41fc5f:	sbb    al,0x28
  41fc61:	icebp  
  41fc62:	add    cl,ch
  41fc64:	sbb    DWORD PTR [esi+0x7138fcfe],0x69
  41fc6b:	mov    esp,0x3cfe5b63
  41fc70:	js     0x41fcc5
  41fc72:	(bad)  
  41fc73:	outs   dx,BYTE PTR ds:[esi]
  41fc74:	xor    edx,DWORD PTR [ebp+0x5b335ed3]
  41fc7a:	(bad)  
  41fc7b:	aam    0x58
  41fc7d:	jno    0x41fc0a
  41fc7f:	adc    al,0x22
  41fc81:	pop    ebx
  41fc82:	(bad)  
  41fc83:	aam    0x38
  41fc85:	pop    esp
  41fc86:	mov    ah,0x21
  41fc88:	sbb    ebx,DWORD PTR [ebx-0x2]
  41fc8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc8d:	add    al,0xe8
  41fc8f:	add    DWORD PTR [eax],eax
	...
  41fcb5:	add    BYTE PTR [eax],al
  41fcb7:	add    BYTE PTR [ecx],ah
  41fcb9:	pop    ebx
  41fcba:	(bad)  
  41fcbb:	cs mov ch,0x34
  41fcbe:	mul    BYTE PTR [esi]
  41fcc0:	repz arpl WORD PTR [eax-0x1a51c57],si
  41fcc7:	pop    esp
  41fcc8:	clc    
  41fcc9:	push   edx
  41fcca:	dec    BYTE PTR [esi]
  41fccc:	add    BYTE PTR [esi-0xebaffc1],ah
  41fcd2:	std    
  41fcd3:	mov    ch,0x46
  41fcd5:	fscale 
  41fcd7:	dec    DWORD PTR [edx-0x73]
  41fcda:	push   DWORD PTR ds:0x1de8b3e4
  41fce1:	in     al,0xfd
  41fce3:	call   0x3f429a
  41fce8:	adc    eax,0x15f7e29a
  41fced:	in     al,0xe6
  41fcef:	test   DWORD PTR [edx-0x1c],esi
  41fcf2:	std    
  41fcf3:	call   FWORD PTR [edi-0x2a000a1b]
  41fcf9:	mov    esp,0xe3b54078
  41fcfe:	std    
  41fcff:	mov    ch,0xbe
  41fd01:	jmp    0x41fd00
  41fd03:	(bad)  
  41fd04:	fidiv  DWORD PTR [ebx]
  41fd06:	notrack call ebp
  41fd09:	jecxz  0x41fd4e
  41fd0b:	clc    
  41fd0c:	retf   
  41fd0d:	out    dx,al
  41fd0e:	sti    
  41fd0f:	inc    ebp
  41fd11:	jecxz  0x41fd86
  41fd13:	cld    
  41fd14:	mov    edx,0xe20010ad
  41fd19:	sbb    al,0xc1
  41fd1b:	or     al,0x0
	...
  41fd41:	add    BYTE PTR [eax],al
  41fd43:	add    BYTE PTR [edx+0x31ec8938],dh
  41fd49:	leave  
  41fd4a:	cli    
  41fd4b:	push   0xffffffa2
  41fd4d:	inc    ecx
  41fd4e:	dec    ebx
  41fd4f:	dec    DWORD PTR [edi+0x5781e65f]
  41fd55:	in     al,0xfd
  41fd57:	mov    edi,ebp
  41fd59:	jecxz  0x41fd58
  41fd5b:	jne    0x41fcf7
  41fd5d:	aas    
  41fd5e:	jae    0x41fda8
  41fd60:	jecxz  0x41fd69
  41fd62:	push   DWORD PTR ds:0x40fc7d
  41fd68:	pop    edx
  41fd69:	test   bl,bh
  41fd6b:	call   DWORD PTR [ebp-0x1c]
  41fd6e:	jae    0x41fd78
  41fd70:	dec    ebx
  41fd71:	mov    ch,bh
  41fd73:	inc    edi
  41fd74:	or     dh,BYTE PTR [edx-0x26]
  41fd77:	add    DWORD PTR [ebx+0x72],ecx
  41fd7a:	and    bh,0xc6
  41fd7d:	pop    esp
  41fd7e:	dec    BYTE PTR gs:[esp+ebx*8+0x66]
  41fd83:	(bad)  
  41fd84:	mov    esi,0x7e935a68
  41fd89:	arpl   WORD PTR [ebp-0x38],sp
  41fd8c:	or     DWORD PTR [ebp+0x2],esp
  41fd8f:	push   ebp
  41fd90:	rol    BYTE PTR [ecx+eax*4-0x3d],0x27
  41fd95:	adc    ecx,edi
  41fd97:	imul   ecx,DWORD PTR [ebx-0x4a],0x589efeb5
  41fd9e:	pop    edx
  41fd9f:	xor    eax,0x8865934e
  41fda4:	mov    gs,WORD PTR [ecx+edi*2+0x34]
	...
  41fdcf:	add    BYTE PTR [ebx-0x3e003cc8],bl
  41fdd5:	cmp    eax,0x708a27ce
  41fdda:	cmp    BYTE PTR [esi],0x4b
  41fddd:	hlt    
  41fdde:	shl    BYTE PTR [edi+0x3b],0x19
  41fde2:	vhsubps ymm7,ymm0,YMMWORD PTR [eax-0x17]
  41fde7:	adc    DWORD PTR [ebx+0x70],ecx
  41fdea:	stc    
  41fdeb:	mov    edi,0xe7cc4b3f
  41fdf0:	fstp   QWORD PTR [ecx+0x381bfe65]
  41fdf6:	add    al,BYTE PTR [eax]
  41fdf8:	pushf  
  41fdf9:	jb     0x41fdd5
  41fdfb:	sbb    BYTE PTR [edx],dl
  41fdfd:	mov    cl,0x2
  41fdff:	push   eax
  41fe00:	pushf  
  41fe01:	popf   
  41fe02:	cli    
  41fe03:	out    0xbb,eax
  41fe05:	inc    esp
  41fe06:	gs (bad) 
  41fe08:	mov    ds:0x84ff25d4,eax
  41fe0d:	mov    DWORD PTR [ebx],0xe709cb46
  41fe13:	add    edi,esi
  41fe15:	pop    esi
  41fe16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe17:	cmp    DWORD PTR [bx+di+0x4f],ecx
  41fe1b:	gs pop dx
  41fe1e:	or     eax,0xee21ae71
  41fe23:	lock xchg ecx,eax
  41fe25:	pop    edx
  41fe26:	jae    0x41fe8f
  41fe28:	dec    ebp
  41fe29:	aam    0xe0
  41fe2b:	pop    ebx
  41fe2c:	pop    esp
  41fe2d:	sbb    al,0xee
  41fe2f:	gs popf 
  41fe31:	mov    ebx,0x42af
	...
  41fe5a:	add    BYTE PTR [eax],al
  41fe5c:	dec    eax
  41fe5d:	or     DWORD PTR [ecx+edi*2],esi
  41fe60:	and    BYTE PTR [esi+0x9b268ac],al
  41fe66:	inc    ebx
  41fe67:	mov    ch,0x1d
  41fe69:	aam    0xf0
  41fe6b:	pop    ebx
  41fe6c:	rcr    BYTE PTR [esi+edi*4],cl
  41fe6f:	gs ret 
  41fe71:	ret    
  41fe72:	mov    ah,0xda
  41fe74:	add    al,0xe2
  41fe76:	es mov ebx,0x1e11098b
  41fe7c:	or     al,0xe8
  41fe7f:	fs aaa 
  41fe81:	adc    al,al
  41fe83:	ret    0x61e4
  41fe86:	push   0xf159ddc2
  41fe8b:	inc    ebx
  41fe8c:	pop    eax
  41fe8d:	add    BYTE PTR [ecx],bl
  41fe8f:	fmul   st(4),st
  41fe91:	pop    ecx
  41fe92:	test   DWORD PTR [esi-0x3ce04dd4],esp
  41fe98:	mov    esp,0x4cef65c9
  41fe9d:	jno    0x41fe9c
  41fe9f:	fild   QWORD PTR [ebp+0x65b94059]
  41fea5:	pop    edx
  41fea6:	dec    ebp
  41fea7:	fcomp  QWORD PTR [ecx+ebx*2-0x4dd359ab]
  41feae:	scas   eax,DWORD PTR es:[edi]
  41feaf:	ret    0xe18c
  41feb2:	jmp    DWORD PTR [esi+0x2dffc8c1]
  41feb8:	ins    BYTE PTR es:[edi],dx
  41feb9:	add    eax,ebp
  41febb:	mov    bh,0x94
  41febd:	pop    edx
  41febe:	(bad)  
  41febf:	push   ds
	...
  41fee8:	pop    esp
  41fee9:	pop    ebp
  41feea:	(bad)  
  41feeb:	pushf  
  41feec:	pusha  
  41feed:	popa   
  41feee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feef:	int    0xe7
  41fef1:	pop    edx
  41fef2:	enter  0x4b2b,0x9
  41fef6:	push   ebp
  41fef7:	jb     0x41feec
  41fef9:	xchg   bl,al
  41fefb:	cmc    
  41fefc:	push   ss
  41fefd:	shr    BYTE PTR [ecx-0x17],0x22
  41ff01:	leave  
  41ff02:	(bad)  
  41ff03:	pop    esp
  41ff04:	aaa    
  41ff05:	jno    0x41ff4f
  41ff07:	sbb    eax,0x2c8857a6
  41ff0c:	mov    bl,0x83
  41ff0e:	xor    al,0x39
  41ff10:	aas    
  41ff11:	retf   0x71ff
  41ff14:	ins    DWORD PTR es:[edi],dx
  41ff15:	mov    ebp,0x89472827
  41ff1a:	ds jmp 0x47a9cd14
  41ff20:	ror    cl,0xff
  41ff23:	cmp    eax,0xe9108697
  41ff28:	dec    eax
  41ff29:	add    al,0xc0
  41ff2b:	sbb    eax,0x58e7bf4e
  41ff30:	mov    al,ds:0xf719fe57
  41ff35:	pop    eax
  41ff36:	dec    BYTE PTR [esi+0x206ff0a6]
  41ff3c:	mov    BYTE PTR [eax+0x4e],bl
  41ff3f:	outs   dx,BYTE PTR ds:[esi]
  41ff40:	lods   eax,DWORD PTR ds:[esi]
  41ff41:	adc    al,ch
  41ff43:	mov    ch,BYTE PTR [ebx+0x7751fe57]
  41ff49:	push   ss
  41ff4a:	call   DWORD PTR [esi+0x0]
	...
  41ff71:	add    BYTE PTR [eax],al
  41ff73:	add    BYTE PTR [ebx],al
  41ff75:	or     DWORD PTR [esi+0x69],eax
  41ff78:	or     WORD PTR [ebp+0x0],si
  41ff7c:	or     BYTE PTR [esi-0x5c9dcc06],dl
  41ff82:	std    
  41ff83:	(bad)  
  41ff84:	cmp    eax,0x7aaef0ed
  41ff89:	push   ebp
  41ff8a:	jae    0x41ff47
  41ff8c:	sub    eax,0xd7fffa67
  41ff91:	push   esp
  41ff92:	out    0x2b,al
  41ff94:	jle    0x41ff83
  41ff96:	std    
  41ff97:	pop    edi
  41ff98:	lods   al,BYTE PTR ds:[esi]
  41ff99:	adc    eax,ecx
  41ff9b:	add    al,0x62
  41ff9d:	inc    edi
  41ff9e:	mov    esp,ebp
  41ffa0:	loope  0x41ffb9
  41ffa2:	sti    
  41ffa3:	push   esi
  41ffa4:	in     eax,0x31
  41ffa6:	(bad)  
  41ffa7:	imul   esp,ebx,0x1a0873ec
  41ffad:	enter  0xff39,0xd
  41ffb1:	xchg   BYTE PTR [ebx-0x4],al
  41ffb4:	test   eax,0x73284ff2
  41ffb9:	or     eax,0x25363d8b
  41ffbe:	inc    ecx
  41ffbf:	add    BYTE PTR [edx+0x3774002c],ah
  41ffc5:	gs jp  0x420011
  41ffc8:	xor    ecx,DWORD PTR ds:0x5cf2e857
  41ffce:	(bad)  
  41ffcf:	(bad)  
  41ffd0:	stc    
  41ffd1:	retf   
  41ffd2:	jb     0x41fff3
  41ffd4:	and    al,0xe5
  41ffd6:	xor    DWORD PTR [eax+0x0],ecx
	...
  41fffd:	add    BYTE PTR [eax],al
  41ffff:	add    ch,cl
  420001:	jmp    0x420051
  420003:	push   0xbeef0be2
  420008:	cmp    bh,BYTE PTR [ebx+0x47]
  42000b:	inc    ecx
  42000c:	mov    dl,0x9b
  42000e:	std    
  42000f:	jne    0x41ffbb
  420011:	jecxz  0x420036
  420013:	arpl   WORD PTR ds:0x4c51e6ec,bp
  420019:	in     al,dx
  42001a:	std    
  42001b:	jmp    0x420068
  42001d:	popa   
  42001e:	enter  0x5d7f,0x62
  420022:	xlat   BYTE PTR ds:[ebx]
  420023:	stc    
  420024:	or     eax,0xd2c016ce
  420029:	push   ss
  42002a:	arpl   si,di
  42002c:	test   BYTE PTR [ebx],dl
  42002e:	mov    dl,0x37
  420030:	inc    esp
  420031:	popf   
  420032:	popf   
  420033:	(bad)  
  420034:	(bad)  
  420035:	sub    eax,0xfa437463
  42003a:	mov    al,0x3a
  42003c:	fs inc dl
  42003f:	pop    ebp
  420040:	xchg   edx,eax
  420041:	and    ecx,DWORD PTR [eax]
  420043:	add    dh,bh
  420045:	fisubr DWORD PTR [edi-0x7e]
  420048:	xchg   DWORD PTR [ebp-0x14],edx
  42004b:	push   DWORD PTR [edx+0x53746172]
  420051:	or     bl,dl
  420053:	cmp    dh,BYTE PTR [eax+esi*2]
  420056:	mov    eax,DWORD PTR [edi+ebp*1-0x47]
  42005a:	jl     0x4200a4
  42005c:	mov    ah,BYTE PTR [eax+0x61]
  42005f:	je     0x4200b4
  420061:	dec    eax
  420062:	rcr    bh,1
	...
  42008c:	adc    al,0x50
  42008e:	popa   
  42008f:	je     0x4200a0
  420091:	cwde   
  420092:	xlat   BYTE PTR ds:[ebx]
  420093:	pop    es
  420094:	repz sbb bl,BYTE PTR [edi]
  420097:	(bad)  
  420098:	cld    
  420099:	test   eax,0x154b0344
  42009e:	(bad)  
  42009f:	jmp    0x420069
  4200a1:	lods   al,BYTE PTR ds:[esi]
  4200a2:	pop    esi
  4200a3:	push   esi
  4200a4:	jae    0x42004f
  4200a6:	cmp    al,0x3f
  4200a8:	dec    ebx
  4200a9:	js     0x42007f
  4200ab:	add    BYTE PTR [eax],cl
  4200ad:	nop
  4200ae:	dec    ecx
  4200af:	inc    esp
  4200b0:	iret   
  4200b1:	pusha  
  4200b2:	add    al,BYTE PTR [eax]
  4200b4:	dec    ebx
  4200b5:	pop    ds
  4200b6:	xchg   esp,eax
  4200b7:	dec    eax
  4200b8:	or     ah,BYTE PTR [eax+0x61]
  4200bb:	je     0x420100
  4200bd:	or     DWORD PTR [esi+0x8],esi
  4200c0:	inc    esi
  4200c1:	ret    0x3a7
  4200c4:	das    
  4200c5:	test   al,0x18
  4200c7:	add    al,0x4b
  4200c9:	or     DWORD PTR [ecx-0x25],ebp
  4200cc:	dec    edx
  4200cd:	or     DWORD PTR [ebp-0xf2373f5],edi
  4200d3:	imul   esi,DWORD PTR [ecx],0x1c
  4200d6:	bound  esi,QWORD PTR ss:[ebx-0x6f]
  4200da:	call   0xc4a34be2
  4200df:	retf   0x566d
  4200e2:	sbb    eax,0x6614cd8
  4200e7:	sbb    al,0x5c
  4200e9:	push   esi
  4200ea:	dec    ecx
  4200eb:	add    al,0x0
  4200ed:	enter  0xe7e8,0x0
	...
  420115:	add    BYTE PTR [eax],al
  420117:	add    BYTE PTR [ebp+0x1c],cl
  42011a:	jmp    0x624b4c22
  42011f:	inc    edi
  420120:	test   al,0x56
  420122:	mov    bl,0x3
  420124:	dec    ebx
  420125:	or     ecx,ebp
  420127:	mov    dh,0x7c
  420129:	loope  0x4200ae
  42012b:	cmp    eax,0xc2410964
  420130:	add    ecx,ecx
  420132:	call   0xbc2a9ea
  420137:	add    al,0x4b
  420139:	or     ecx,ebp
  42013b:	pusha  
  42013c:	jg     0x42013f
  42013e:	mov    dh,0xf9
  420140:	retf   
  420141:	adc    eax,0x934c402
  420146:	sbb    eax,0xf850c801
  42014b:	xlat   BYTE PTR ds:[ebx]
  42014c:	push   ebx
  42014d:	dec    esi
  42014e:	sub    esp,DWORD PTR [eax+0x4b]
  420151:	or     ecx,ebp
  420153:	add    esp,eax
  420155:	test   DWORD PTR [ebp+0x27c24a17],0x1bc404
  42015f:	in     al,dx
  420160:	(bad)  
  420164:	neg    BYTE PTR [esi]
  420166:	jmp    DWORD PTR [esi-0x3a]
  420169:	dec    ecx
  42016a:	pop    ss
  42016b:	push   edx
  42016c:	xchg   edx,eax
  42016d:	mov    esp,0xbcce458a
  420172:	or     esp,DWORD PTR [edx-0x74]
  420175:	add    eax,0x8640bbff
  42017a:	jg     0x4200fd
	...
  4201a4:	dec    edi
  4201a5:	or     DWORD PTR [eax],eax
  4201a7:	ss xchg ebp,eax
  4201a9:	add    DWORD PTR [edi-0x1a9fc97],ecx
  4201af:	jmp    0x6e51d99f
  4201b4:	iret   
  4201b5:	cdq    
  4201b6:	(bad)  
  4201b7:	call   0xe47e8c04
  4201bc:	xchg   eax,ecx
  4201be:	(bad)  
  4201bf:	call   0xb540fa38
  4201c4:	dec    ecx
  4201c5:	rol    BYTE PTR [eax-0x17],0xab
  4201c9:	sbb    eax,0x5509a205
  4201ce:	out    0x1,al
  4201d0:	push   edx
  4201d1:	push   esp
  4201d2:	(bad)  
  4201d3:	mov    eax,ds:0xe9000948
  4201d8:	fisttp QWORD PTR [edx+0x23]
  4201db:	jmp    0xe946860c
  4201e0:	dec    eax
  4201e1:	or     DWORD PTR [eax],eax
  4201e3:	push   0xffffff93
  4201e5:	or     BYTE PTR [ebx-0x7afbb70a],al
  4201eb:	out    dx,al
  4201ec:	imul   edx,DWORD PTR [ebx-0x2],0x72
  4201f0:	add    eax,0x8eb05e51
  4201f5:	or     BYTE PTR [eax],al
  4201f7:	aas    
  4201f8:	out    dx,eax
  4201f9:	aas    
  4201fa:	fisubr DWORD PTR [ecx]
  4201fc:	dec    edi
  4201fd:	push   ecx
  4201fe:	jno    0x420200
  420200:	jecxz  0x4201cf
  420202:	std    
  420203:	mov    edi,ebx
  420205:	and    eax,0x8bf6
	...
  42022e:	add    BYTE PTR [eax],al
  420230:	jmp    0x420292
  420232:	jle    0x4201dc
  420234:	nop
  420235:	pop    es
  420236:	mov    ecx,ecx
  420238:	test   BYTE PTR [ebp-0x79b51439],al
  42023e:	mov    DWORD PTR [ebx],0x50c7856c
  420244:	sub    DWORD PTR [edi+0x894a7e6],edi
  42024a:	add    BYTE PTR [ebx-0x36766fc5],cl
  420250:	jno    0x420220
  420252:	mov    ecx,ecx
  420254:	aam    0x5
  420256:	div    BYTE PTR [ebp+0x3e]
  420259:	dec    edx
  42025a:	rcl    DWORD PTR [ebp-0x27],0xe3
  42025e:	data16 or BYTE PTR [esi],dl
  420261:	dec    eax
  420262:	(bad)  
  420263:	div    DWORD PTR [eax-0x26003cf9]
  420269:	dec    edx
  42026a:	push   es
  42026b:	or     esi,DWORD PTR [edx+0x3c]
  42026e:	or     ch,bl
  420270:	das    
  420271:	jmp    0x387e:0x482afe06
  420278:	and    dh,BYTE PTR [ecx]
  42027a:	hlt    
  42027b:	leave  
  42027c:	lock add BYTE PTR [eax],al
  42027f:	push   ebp
  420280:	test   eax,0xfec481d9
  420285:	xchg   edi,eax
  420286:	data16 xor dh,ah
  420289:	dec    esp
  42028a:	(bad)  
  42028b:	test   DWORD PTR [eax+0xe],0x41adffc3
  420292:	repnz add BYTE PTR [eax],al
	...
  4202b9:	add    BYTE PTR [eax],al
  4202bb:	add    dl,ah
  4202bd:	pop    es
  4202be:	add    BYTE PTR [ebx],ch
  4202c0:	or     DWORD PTR [edx+0x43],edi
  4202c3:	cld    
  4202c4:	and    dh,BYTE PTR [ebx+esi*2+0x788a4b08]
  4202cb:	or     eax,0xbf87624b
  4202d0:	push   ebx
  4202d1:	xchg   ebp,eax
  4202d2:	pop    ebp
  4202d3:	je     0x420328
  4202d5:	jp     0x4202ff
  4202d7:	xor    al,0xbc
  4202d9:	fimul  DWORD PTR [esp+eax*2-0x184bde4d]
  4202e0:	pop    ds
  4202e1:	cs pop edi
  4202e3:	(bad)  
  4202e4:	shr    BYTE PTR [esi+edx*2+0x6bbe16fe],cl
  4202eb:	push   ebx
  4202ec:	inc    esi
  4202ed:	bound  eax,QWORD PTR [edx]
  4202ef:	or     ecx,DWORD PTR [ebx-0x101096b]
  4202f5:	leave  
  4202f6:	pop    esi
  4202f7:	je     0x420370
  4202f9:	jno    0x420365
  4202fb:	xchg   DWORD PTR [edi],esi
  4202fd:	and    ebx,DWORD PTR [edi-0x2]
  420300:	imul   BYTE PTR ds:0x6256416c
  420306:	add    bh,bh
  420308:	(bad)  
  420309:	imul   ebp,DWORD PTR [edx-0xd],0x825f031e
  420310:	into   
  420311:	push   ebp
  420312:	add    dh,BYTE PTR [ebp+eiz*2+0x78]
  420316:	dec    DWORD PTR [edx-0x76]
  420319:	pusha  
  42031a:	pop    ebp
  42031b:	je     0x42035c
  42031d:	or     DWORD PTR [ebx+0xd],edx
	...
  420347:	add    BYTE PTR [ebx+0x60],cl
  42034a:	or     eax,eax
  42034c:	lahf   
  42034d:	ins    DWORD PTR es:[edi],dx
  42034e:	cdq    
  42034f:	add    BYTE PTR [ebx+0x60],cl
  420352:	add    bh,bh
  420354:	sahf   
  420355:	cmp    al,0x6a
  420357:	add    eax,0x8a5d4b4f
  42035c:	or     BYTE PTR [eax],ch
  42035e:	dec    ebp
  42035f:	rol    DWORD PTR [edi+0x60],0xb7
  420363:	mov    ah,bh
  420365:	enter  0xdb9d,0x8b
  420369:	or     ecx,ebp
  42036b:	pop    ebx
  42036c:	pop    edx
  42036d:	or     BYTE PTR [edx-0x1f2322a2],ch
  420373:	imul   esp,DWORD PTR [edi],0x1b
  420376:	mov    ds,WORD PTR [esi+0x62]
  420379:	add    DWORD PTR [ecx],edx
  42037b:	jmp    FWORD PTR [eax+ecx*8-0x18]
  42037f:	pop    esi
  420380:	aaa    
  420381:	add    DWORD PTR [ecx+0x6d527cdc],eax
  420387:	jmp    0x2beae4d0
  42038c:	or     cl,BYTE PTR [ecx]
  42038e:	pop    esi
  42038f:	fadd   DWORD PTR [ecx+eiz*2-0x3e]
  420393:	sbb    edx,DWORD PTR [edx+edx*2+0x6144d84d]
  42039a:	xor    al,0x60
  42039c:	test   DWORD PTR [edx-0x80],edx
  42039f:	add    al,0x4b
  4203a1:	or     ecx,ebp
  4203a3:	dec    esp
  4203a4:	mov    cl,BYTE PTR ds:0x65c1b8e9
  4203aa:	imul   eax,DWORD PTR [edi+0x0],0x0
	...
  4203d1:	add    BYTE PTR [eax],al
  4203d3:	add    BYTE PTR [ecx+eiz*8-0x1d],bl
  4203d7:	inc    eax
  4203d8:	sbb    al,0x9
  4203da:	adc    ecx,edx
  4203dc:	dec    ebx
  4203dd:	inc    esi
  4203de:	or     eax,0x604d75e
  4203e3:	fmul   DWORD PTR [ecx+eiz*2+0x78]
  4203e7:	sbb    DWORD PTR [edx+edx*2],edi
  4203ea:	sub    eax,0xe90830c8
  4203ef:	add    ecx,DWORD PTR [ebx-0x7c]
  4203f2:	sub    ebx,DWORD PTR [esp+edx*4-0x1f]
  4203f6:	test   eax,0x4ac1098b
  4203fc:	mov    WORD PTR [edx-0x33],ss
  4203ff:	or     DWORD PTR [ebx],ecx
  420401:	fisttp QWORD PTR [edx]
  420403:	mov    ah,0xc9
  420405:	rol    eax,cl
  420407:	hlt    
  420408:	ja     0x420405
  42040a:	inc    DWORD PTR [edx-0x1]
  42040d:	sar    esi,0x34
  420410:	pop    ebx
  420411:	popa   
  420412:	fnclex 
  420414:	xchg   DWORD PTR [ebx+0xa],edx
  420417:	test   eax,0x2cc70b03
  42041c:	imul   edx,DWORD PTR [edx-0x2],0xffffffe9
  420420:	dec    eax
  420421:	popa   
  420422:	fs ret 0x5327
  420426:	mov    ah,BYTE PTR [ebx+ebp*1]
  420429:	inc    ecx
  42042a:	shl    ecx,0x48
  42042d:	mov    esp,0xe9fa7d8a
  420432:	pop    edi
  420433:	inc    esp
  420434:	(bad)  
  420435:	push   ecx
  420436:	neg    bl
	...
  420460:	dec    ecx
  420461:	inc    esi
  420462:	inc    BYTE PTR [edx]
  420464:	push   edx
  420465:	push   ebx
  420466:	je     0x420449
  420468:	and    bl,cl
  42046a:	inc    BYTE PTR [esi+0x26]
  42046d:	(bad)  
  42046e:	mov    edi,0xff7bc4ee
  420473:	call   0xe1b656c0
  420478:	loopne 0x4204c7
  42047a:	xor    DWORD PTR [esi],esp
  42047c:	push   es
  42047d:	(bad)  
  42047e:	mov    edi,0x89604594
  420483:	jmp    0x95410dd0
  420488:	cmp    al,0x52
  42048a:	je     0x42047d
  42048c:	mov    al,0xe7
  42048e:	(bad)  
  42048f:	(bad)  
  420490:	lahf   
  420491:	dec    edi
  420492:	je     0x420475
  420494:	mov    al,ds:0x8fee3a17
  420499:	add    eax,eax
  42049b:	pop    esp
  42049c:	dec    ecx
  42049d:	fs jo  0x42047e
  4204a0:	cmc    
  4204a1:	or     al,ch
  4204a3:	mov    al,ds:0xe2fe5030
  4204a8:	mov    ch,dl
  4204aa:	add    DWORD PTR [eax],eax
  4204ac:	sbb    DWORD PTR [edx-0x3],ebp
  4204af:	jne    0x4204ab
  4204b1:	in     al,0x1f
  4204b3:	cmp    DWORD PTR [ebp+0x37c009ad],edi
  4204b9:	or     ebp,ebx
  4204bb:	push   ebp
  4204bc:	cmp    dl,BYTE PTR [edi-0x520dbedb]
  4204c2:	jae    0x4204cc
	...
  4204ec:	retf   0x3a92
  4204ef:	(bad)  
  4204f0:	mov    ebp,0xb075c001
  4204f5:	loope  0x420537
  4204f7:	push   DWORD PTR [edi-0x56517fc]
  4204fd:	lods   eax,DWORD PTR ds:[esi]
  4204fe:	std    
  4204ff:	or     esp,edx
  420501:	aaa    
  420502:	add    bl,ch
  420504:	inc    esi
  420505:	scas   al,BYTE PTR es:[edi]
  420506:	jae    0x420510
  420508:	cli    
  420509:	mov    ecx,0xfdff36
  42050e:	shl    BYTE PTR [ebp-0x60],0xe1
  420512:	and    al,0xff
  420514:	mov    DWORD PTR [eax+ebp*8],0xfdad8087
  42051b:	cmp    DWORD PTR [edx],0x2c
  42051e:	ja     0x420522
  420520:	dec    ecx
  420521:	lds    ecx,FWORD PTR [ecx]
  420523:	rol    dh,0x59
  420526:	cmp    eax,DWORD PTR [eax]
  420528:	jb     0x420586
  42052a:	(bad)  
  42052b:	jb     0x42059b
  42052d:	jno    0x42052e
  42052f:	jmp    DWORD PTR [edx+0xc]
  420532:	jmp    0x420539
  420534:	mov    DWORD PTR [ecx],ecx
  420536:	add    BYTE PTR [eax],al
  420538:	xor    al,BYTE PTR [ecx-0x3594a43f]
  42053e:	push   es
  42053f:	add    bh,dl
  420541:	sub    dl,0x68
  420544:	push   ebx
  420545:	adc    edi,DWORD PTR [edi]
  420547:	add    BYTE PTR [edx],ch
  420549:	aaa    
  42054a:	inc    edx
  42054c:	dec    ebx
  42054d:	aaa    
  42054e:	pop    edx
  42054f:	je     0x420551
	...
  420575:	add    BYTE PTR [eax],al
  420577:	add    BYTE PTR [edi],bh
  420579:	aas    
  42057a:	rol    BYTE PTR [edi],1
  42057c:	repz call FWORD PTR [edx-0x2]
  420580:	cld    
  420581:	pop    edx
  420582:	inc    edx
  420583:	je     0x4205d6
  420585:	xchg   edi,eax
  420586:	ror    BYTE PTR [ebx],1
  420588:	in     al,dx
  420589:	adc    al,0xc
  42058b:	call   0xfe9caccc
  420590:	push   eax
  420591:	mov    ds:0xecd40ad0,al
  420596:	pop    es
  420597:	call   DWORD PTR [esi+0x6a]
  42059a:	push   0x7
  42059c:	les    eax,FWORD PTR [esi+0x5989c85a]
  4205a2:	add    dl,BYTE PTR [ebp-0x40]
  4205a5:	test   DWORD PTR [esi-0x4d0d583d],eax
  4205ab:	addr16 sub ecx,eax
  4205ae:	ret    
  4205af:	call   DWORD PTR [ebx+esi*1+0xa94c303]
  4205b6:	aas    
  4205b7:	out    0x89,eax
  4205b9:	call   0xff66:0x9c8cfe59
  4205c0:	jl     0x420623
  4205c2:	add    cl,BYTE PTR [ebp-0x184c39f2]
  4205c8:	ret    0x5950
  4205cb:	dec    al
  4205cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205ce:	call   di
  4205d1:	or     DWORD PTR [ecx+0x6a916744],ecx
  4205d7:	jns    0x4205f3
  4205d9:	call   FWORD PTR [edx-0x7e]
	...
  420604:	(bad)  
  420605:	hlt    
  420606:	add    esi,DWORD PTR [ebp+0x52]
  420609:	ffree  st(0)
  42060b:	jmp    0x4205a8
  42060d:	or     bh,ch
  42060f:	xor    BYTE PTR [eax+eiz*2],ch
  420612:	test   DWORD PTR [edi+esi*1+0xa],edi
  420616:	jmp    0xe8c1cd25
  42061b:	add    ecx,DWORD PTR [ebx+0x7c]
  42061e:	sub    edx,DWORD PTR [esp+edi*2+0x4e]
  420622:	push   ebx
  420623:	push   0x5ac5e0ec
  420628:	std    
  420629:	mov    al,al
  42062b:	add    al,0x7e
  42062d:	int3   
  42062e:	jne    0x420615
  420630:	and    eax,0x836ee8c8
  420635:	inc    esi
  420636:	sub    esp,DWORD PTR [eax+0x52]
  420639:	or     ecx,ebp
  42063b:	add    ecx,DWORD PTR [eax*8+0x94b0380]
  420642:	jmp    0x18a315cf
  420647:	pop    ebx
  420648:	aaa    
  420649:	pop    ebp
  42064a:	adc    eax,0x75b3b96c
  42064f:	pop    edx
  420650:	inc    ecx
  420651:	dec    ecx
  420652:	hlt    
  420653:	repz leave 
  420655:	int3   
  420656:	push   eax
  420657:	add    edx,DWORD PTR [edi]
  420659:	add    ebx,DWORD PTR [esi-0x30]
  42065c:	lods   al,BYTE PTR ds:[esi]
  42065d:	popa   
  42065e:	adc    DWORD PTR [ecx-0x73],ebx
  420661:	dec    esi
  420662:	popa   
  420663:	cmp    eax,DWORD PTR [ebp+0x6b50d4]
	...
  42068d:	add    BYTE PTR [eax],al
  42068f:	add    BYTE PTR ds:0x415a3e18,ch
  420695:	xor    bh,BYTE PTR [ebx+0x44ccc9f0]
  42069b:	add    ebx,edi
  42069d:	std    
  42069e:	and    eax,0x70e168c8
  4206a3:	not    BYTE PTR [esi+ecx*2+0x0]
  4206a7:	jbe    0x4206ea
  4206a9:	or     ecx,ebp
  4206ab:	outs   dx,BYTE PTR ds:[esi]
  4206ac:	std    
  4206ad:	popa   
  4206ae:	out    0xc2,eax
  4206b0:	mov    esp,0x32d0e90e
  4206b5:	(bad)  
  4206b6:	jmp    FWORD PTR [eax+0x51]
  4206b9:	or     DWORD PTR [ebp+eiz*8+0x55],esi
  4206bd:	xor    dh,BYTE PTR [ebx-0x79]
  4206c0:	dec    esi
  4206c1:	xor    dh,BYTE PTR [ebx-0x7]
  4206c4:	dec    BYTE PTR es:[esp+ebp*1-0x7984189]
  4206cc:	pop    ss
  4206cd:	leave  
  4206ce:	call   eax
  4206d0:	scas   eax,DWORD PTR es:[edi]
  4206d1:	(bad)  
  4206d2:	(bad)  
  4206d3:	mov    esi,0xc1ebd592
  4206d8:	pop    edi
  4206d9:	push   ds
  4206da:	jmp    FWORD PTR [esi+0x425e4ad6]
  4206e0:	nop
  4206e1:	dec    ebx
  4206e2:	push   esp
  4206e3:	jb     0x420748
  4206e5:	mov    ebx,eax
  4206e7:	dec    ecx
  4206e8:	jno    0x420739
  4206ea:	(bad)  
  4206eb:	ss stc 
  4206ed:	in     eax,0x4f
  4206ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206f0:	xchg   DWORD PTR [ebp-0xa],ecx
  4206f3:	sti    
	...
  42071c:	dec    ecx
  42071d:	dec    edx
  42071e:	(bad)  
  42071f:	ss jecxz 0x420748
  420722:	inc    ecx
  420723:	jmp    0xf64215f0
  420728:	sbb    al,0x43
  42072a:	add    cl,ch
  42072c:	dec    eax
  42072d:	jl     0x4206b3
  42072f:	pop    ebp
  420730:	icebp  
  420731:	dec    esi
  420732:	(bad)  
  420733:	mov    ecx,0xa12f65bb
  420738:	and    ecx,DWORD PTR [edi+0xa]
  42073b:	sub    DWORD PTR [edx-0x7b],eax
  42073e:	mov    ds:0x830948e8,eax
  420743:	ins    BYTE PTR es:[edi],dx
  420744:	sti    
  420745:	dec    ebx
  420746:	(bad)  
  420747:	es inc edi
  420749:	inc    BYTE PTR [ebx+0x94876]
  42074f:	fs int3 
  420751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420752:	std    
  420753:	push   cs
  420754:	mov    ds:0x7f00febc,al
  420759:	mov    ecx,0xe135fffc
  42075e:	in     al,dx
  42075f:	aaa    
  420760:	xor    eax,0xabf629b2
  420765:	jl     0x420709
  420767:	(bad)  
  420768:	and    eax,0x3c37e9b2
  42076d:	add    dh,BYTE PTR [esi-0x362bb7c]
  420773:	call   DWORD PTR ds:0x39356699
  420779:	dec    eax
  42077a:	dec    BYTE PTR [edi+ebp*2+0xfffcc6]
	...
  4207a5:	add    BYTE PTR [eax],al
  4207a7:	add    BYTE PTR [ebp-0x16be1968],dh
  4207ad:	or     BYTE PTR [eax],al
  4207af:	sub    DWORD PTR [esi-0x5f7a72fc],0xffffffb2
  4207b6:	std    
  4207b7:	call   DWORD PTR [edx]
  4207b9:	mov    dl,0xb3
  4207bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207bc:	aam    0xb1
  4207be:	std    
  4207bf:	call   0x40fca1
  4207c4:	cmp    ecx,ebx
  4207c6:	mov    ds:0x44b135fe,al
  4207cb:	xor    DWORD PTR [eax+ebx*2],0x70
  4207cf:	les    esp,FWORD PTR ds:0xf5fef27b
  4207d5:	mov    al,0xe6
  4207d7:	mov    ah,0x30
  4207d9:	mov    dl,0xfd
  4207db:	(bad)  
  4207dc:	out    dx,eax
  4207dd:	outs   dx,DWORD PTR ds:[esi]
  4207de:	cld    
  4207df:	inc    DWORD PTR ds:0x62000008
  4207e5:	pop    esi
  4207e6:	add    BYTE PTR [ebp-0x39021],cl
  4207ec:	xor    eax,0x3eb5fd98
  4207f1:	mov    dl,0xfd
  4207f3:	(bad)  
  4207f4:	cmp    dl,BYTE PTR [edx+0x2f]
  4207f7:	dec    DWORD PTR [ebx-0xd]
  4207fa:	or     eax,eax
  4207fc:	push   esp
  4207fd:	out    0x5a,al
  4207ff:	(bad)  
  420800:	cmp    al,0x62
  420802:	cmp    DWORD PTR [ebx+esi*8+0x7efe564b],0x278
	...
  420831:	add    BYTE PTR [eax],al
  420833:	add    BYTE PTR [ebp+eiz*8+0x6a],dl
  420837:	call   FWORD PTR [edx+eiz*2]
  42083a:	xchg   DWORD PTR [eax+edx*1+0x7bfe562c],eax
  420841:	retf   0xff
  420844:	dec    ebx
  420845:	bound  ebp,QWORD PTR [edx-0x1d]
  420848:	push   edx
  420849:	bound  eax,QWORD PTR [edx]
  42084b:	or     ecx,DWORD PTR [ebx]
  42084d:	pop    ebx
  42084e:	jle    0x42081e
  420850:	dec    ebx
  420851:	bound  eax,QWORD PTR [edx]
  420853:	cmp    eax,0x2614f
  420858:	dec    esp
  420859:	fstp   TBYTE PTR [edi]
  42085b:	call   esp
  42085d:	popa   
  42085e:	push   0x4f
  420860:	inc    ecx
  420861:	bound  eax,QWORD PTR [edx]
  420863:	push   eax
  420864:	xor    ecx,DWORD PTR [ecx+ecx*8-0x7f2ab4c0]
  42086b:	shl    DWORD PTR [ebp-0x5cb0a936],0xbd
  420872:	or     DWORD PTR [eax],eax
  420874:	dec    ebx
  420875:	fistp  QWORD PTR [edi]
  420877:	or     esi,DWORD PTR [ecx]
  420879:	bound  eax,QWORD PTR [edi+0x56ab9084]
  42087f:	(bad)  
  420880:	sti    
  420881:	leave  
  420882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420883:	or     BYTE PTR [ebx+0x62],cl
  420886:	xchg   DWORD PTR [eax+eax*4+0x1bfe56c3],eax
  42088d:	mov    edx,0x126c4313
  420892:	or     eax,eax
  420894:	fiadd  WORD PTR [ecx]
  420896:	in     al,dx
  420897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  4208c0:	xor    ecx,DWORD PTR [ecx]
  4208c2:	test   al,0x3
  4208c4:	mov    BYTE PTR [ebp+0x4b4d5621],0xb8
  4208cb:	imul   edx,DWORD PTR [ebx],0xf
  4208ce:	push   cs
  4208cf:	push   edi
  4208d0:	iret   
  4208d1:	je     0x4208fd
  4208d3:	push   esi
  4208d4:	xor    eax,0x24b39a4b
  4208d9:	cli    
  4208da:	mov    ah,0x56
  4208dc:	and    eax,0xc788d95f
  4208e1:	inc    edi
  4208e2:	out    0x56,al
  4208e4:	adc    eax,0x11806bba
  4208e9:	dec    esp
  4208ea:	aad    0x56
  4208ec:	xchg   esp,eax
  4208ed:	popa   
  4208ee:	test   DWORD PTR [edx],ebx
  4208f0:	cld    
  4208f1:	dec    edx
  4208f2:	outs   dx,DWORD PTR ds:[esi]
  4208f3:	xor    BYTE PTR [eax-0x12a942b5],0x94
  4208fa:	je     0x420951
  4208fc:	in     eax,0x4a
  4208fe:	lods   eax,DWORD PTR ds:[esi]
  4208ff:	nop
  420900:	fmul   DWORD PTR [ebx-0x5b]
  420903:	push   esi
  420904:	in     al,dx
  420905:	aad    0xd9
  420907:	push   esi
  420908:	int    0xfe
  42090a:	test   al,0xcf
  42090c:	jns    0x4208ef
  42090e:	ror    dl,cl
  420910:	or     ecx,DWORD PTR [ecx]
  420912:	xchg   ecx,eax
  420913:	pop    esi
  420914:	dec    esp
  420915:	or     ecx,ebp
  420917:	mov    bl,0x24
  420919:	mov    cr0,ebp
  42091c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42091d:	dec    ebx
  42091e:	xor    ebx,DWORD PTR [edi+0x6b654a9e]
	...
  42094c:	popf   
  42094d:	(bad)  
  42094e:	pop    ebp
  42094f:	push   esi
  420950:	and    cl,BYTE PTR [eax]
  420952:	ret    
  420953:	add    esi,ecx
  420955:	or     BYTE PTR [esi-0x70],cl
  420958:	ror    BYTE PTR [ebx+0x45],0x56
  42095c:	in     al,dx
  42095d:	push   ss
  42095e:	adc    ch,al
  420960:	ins    BYTE PTR es:[edi],dx
  420961:	loopne 0x420962
  420963:	call   0xe94bcf58
  420968:	dec    eax
  420969:	dec    edx
  42096a:	mov    ah,0x65
  42096c:	dec    BYTE PTR [edx-0x2]
  42096f:	adc    DWORD PTR [ebp-0x62e900ed],esp
  420975:	xchg   ebp,eax
  420976:	mov    ds:0xe74b950f,eax
  42097b:	dec    ebp
  42097c:	inc    ebp
  42097d:	dec    edx
  42097e:	(bad)  
  42097f:	(bad)  
  420980:	mov    esp,0x7ef6fd55
  420985:	bound  eax,QWORD PTR ds:0xfb4b75be
  42098b:	sbb    cl,BYTE PTR [edi+0x76defe91]
  420991:	dec    ebx
  420992:	icebp  
  420993:	xchg   DWORD PTR [edi+0x2],esp
  420996:	pcmpgtb mm1,QWORD PTR [ebx+ecx*2-0x2]
  42099b:	(bad)  
  42099c:	mov    ebp,0x9caac8aa
  4209a1:	jle    0x42098e
  4209a3:	push   0xffffff8b
  4209a5:	pop    edx
  4209a6:	addr16 in al,dx
  4209a8:	imul   ecx,DWORD PTR [edx],0x8f9a100
  4209ae:	ret    
  4209af:	sahf   
	...
  4209d8:	ret    0x6737
  4209db:	in     al,dx
  4209dc:	dec    ecx
  4209dd:	or     DWORD PTR [eax],eax
  4209df:	adc    DWORD PTR [ebp-0x3d7900ee],0x13248837
  4209e9:	jg     0x4209bc
  4209eb:	add    DWORD PTR [eax+ecx*1-0x22cf1700],esp
  4209f2:	ss data16 (bad) 
  4209f5:	jle    0x4209c8
  4209f7:	jo     0x4209c5
  4209f9:	pop    ecx
  4209fa:	addr16 in al,dx
  4209fc:	dec    ecx
  4209fd:	or     DWORD PTR [eax],eax
  4209ff:	inc    ecx
  420a00:	mov    ch,0x12
  420a02:	inc    DWORD PTR [eax]
  420a04:	or     eax,0x508bd080
  420a09:	jle    0x420a4e
  420a0b:	clc    
  420a0c:	jmp    0x8b149427
  420a11:	dec    ecx
  420a12:	(bad)  
  420a13:	jmp    DWORD PTR [edx-0x4c]
  420a16:	jae    0x420a14
  420a18:	mov    eax,0x2b1be805
  420a1d:	or     eax,0x92808b00
  420a22:	sar    bh,1
  420a24:	mov    bh,0xdc
  420a26:	data16 add al,0x23
  420a29:	or     eax,0x1498e800
  420a2e:	add    BYTE PTR [eax],al
  420a30:	sub    ebp,ecx
  420a32:	jb     0x420a43
  420a34:	cdq    
  420a35:	cli    
  420a36:	data16 aas 
  420a38:	pop    ecx
  420a39:	dec    esp
  420a3a:	(bad)  
  420a3b:	inc    BYTE PTR [eax]
	...
  420a61:	add    BYTE PTR [eax],al
  420a63:	add    BYTE PTR [edi-0x15ce1923],ah
  420a69:	or     al,0x0
  420a6b:	mov    edx,eax
  420a6d:	xor    bh,dh
  420a6f:	imul   esp,edx,0xf26a0032
  420a75:	xor    al,BYTE PTR [ecx]
  420a77:	push   0xc0000cf2
  420a7c:	lods   eax,DWORD PTR ds:[esi]
  420a7d:	push   edi
  420a7e:	out    dx,al
  420a7f:	call   0x405012
  420a84:	sub    eax,DWORD PTR [edi-0x3356bf0e]
  420a8a:	jae    0x420ad0
  420a8c:	int    0x57
  420a8e:	cli    
  420a8f:	push   DWORD PTR [edi-0x4a001924]
  420a95:	or     al,0x0
  420a97:	push   0x4e
  420a99:	xor    edi,esi
  420a9b:	(bad)  
  420a9c:	ja     0x420a7a
  420a9e:	out    0x73,al
  420aa0:	fwait
  420aa1:	or     al,0x0
  420aa3:	or     ecx,DWORD PTR [ebx-0xe]
  420aa6:	into   
  420aa7:	or     ecx,DWORD PTR [ebx]
  420aa9:	dec    edx
  420aaa:	adc    ecx,DWORD PTR [ebx+0xa]
  420aad:	xor    dh,BYTE PTR [edx+0x22f68e7]
  420ab3:	add    cl,dh
  420ab5:	xor    eax,ebp
  420ab7:	push   edx
  420ab9:	xor    ebp,eax
  420abb:	jmp    edx
  420abd:	xor    ch,dl
  420abf:	dec    DWORD PTR [edx+esi*1+0x42]
  420ac3:	(bad)  
  420ac4:	mov    esi,0x956b22
	...
  420aed:	add    BYTE PTR [eax],al
  420aef:	add    BYTE PTR [edx+esi*1+0x2],al
  420af3:	mov    DWORD PTR [esi-0x5f8c3eba],ecx
  420af9:	call   0x9d6a:0x328a4abb
  420b00:	inc    esp
  420b01:	xor    al,BYTE PTR [edx]
  420b03:	push   eax
  420b04:	mov    ds:0x4b40bef7,eax
  420b09:	addr16 fdiv st,st(3)
  420b0c:	rep outs dx,DWORD PTR ds:[esi]
  420b0e:	adc    al,0xff
  420b10:	cld    
  420b11:	add    DWORD PTR [ebx+0x74],edx
  420b14:	call   FWORD PTR [ecx-0x32]
  420b17:	push   es
  420b18:	dec    ebx
  420b19:	xor    ch,BYTE PTR [edx+0x6050b0a]
  420b1f:	jmp    0x420aa9
  420b21:	ja     0x420afb
  420b23:	sti    
  420b24:	arpl   WORD PTR [edi-0x58b4bf42],di
  420b2a:	fdiv   st,st(7)
  420b2c:	mov    bl,0xe5
  420b2e:	sti    
  420b2f:	(bad)  
  420b30:	mov    esp,0x230b47b2
  420b35:	fnstcw WORD PTR [esi-0x6b65b4c0]
  420b3b:	push   es
  420b3c:	dec    ebx
  420b3d:	xor    bh,ch
  420b3f:	mov    edi,0x9ada5417
  420b44:	add    BYTE PTR [ecx],cl
  420b46:	test   al,0x3
  420b48:	sti    
  420b49:	xor    BYTE PTR [eax-0x1df6b4f5],dl
  420b4f:	inc    ebx
  420b50:	clc    
  420b51:	sbb    eax,ebx
  420b53:	add    eax,DWORD PTR [eax]
	...
  420b79:	add    BYTE PTR [eax],al
  420b7b:	add    cl,ah
  420b7d:	or     BYTE PTR [esi-0x27],al
  420b80:	je     0x420bc9
  420b82:	mov    bl,0x53
  420b84:	in     al,dx
  420b85:	cli    
  420b86:	inc    esp
  420b88:	pop    esp
  420b89:	mov    cl,0xe8
  420b8b:	push   edx
  420b8c:	test   BYTE PTR [edi-0x65],al
  420b8f:	dec    edi
  420b90:	fs stc 
  420b92:	(bad)  
  420b93:	push   edx
  420b94:	inc    ebp
  420b95:	inc    edi
  420b96:	fwait
  420b97:	push   ebx
  420b98:	and    al,0xf1
  420b9a:	(bad)  
  420b9b:	push   edx
  420b9c:	xor    eax,0x244b7b47
  420ba1:	jmp    0x51675e5c
  420ba6:	sub    DWORD PTR [ebx+0x664bb179],edi
  420bac:	push   esp
  420bad:	or     ecx,esp
  420baf:	aad    0x4b
  420bb1:	dec    edx
  420bb2:	fisttp QWORD PTR [esi+0x3e9094b]
  420bb8:	mov    esp,0xf4c52156
  420bbd:	mov    al,0xe7
  420bbf:	mov    edx,0x532478e4
  420bc4:	in     eax,0xea
  420bc6:	nop
  420bc7:	dec    edi
  420bc8:	sbb    DWORD PTR [ecx+0x6f],ecx
  420bcb:	push   edx
  420bcc:	aad    0x46
  420bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bcf:	push   ebp
  420bd0:	sahf   
  420bd1:	add    esi,esp
  420bd3:	fsubr  DWORD PTR [edx+edx*4+0x4a1daea9]
  420bda:	xor    edi,DWORD PTR [edi-0x60]
  420bdd:	mov    ch,BYTE PTR [ebx+edx*2+0x0]
	...
  420c08:	sbb    DWORD PTR [ecx+0x9646593],esi
  420c0e:	add    BYTE PTR [ecx+0x76],dh
  420c11:	or     ebx,eax
  420c13:	outs   dx,BYTE PTR ds:[esi]
  420c14:	int    0x5
  420c16:	rcl    DWORD PTR [edi],0x86
  420c19:	inc    esi
  420c1a:	(bad)  
  420c1b:	aad    0x7e
  420c1d:	mov    edi,DWORD PTR [eax+eiz*1]
  420c20:	sub    cl,al
  420c22:	(bad)  
  420c23:	call   0x4c51dc4
  420c28:	or     dh,ah
  420c2a:	inc    eax
  420c2b:	jmp    0x246c878
  420c30:	pop    es
  420c31:	jecxz  0x420bfb
  420c33:	sub    dh,BYTE PTR ds:0x41cde762
  420c39:	or     DWORD PTR [eax],eax
  420c3b:	ins    BYTE PTR es:[edi],dx
  420c3c:	add    eax,DWORD PTR [edx+0x51]
  420c3f:	add    DWORD PTR [eax-0x2a],0xfffffffe
  420c43:	hlt    
  420c44:	(bad)  
  420c45:	hlt    
  420c46:	inc    eax
  420c47:	jmp    0x65509279
  420c4c:	cwde   
  420c4d:	inc    esi
  420c4e:	(bad)  
  420c4f:	jmp    0xea39d9e5
  420c54:	dec    eax
  420c55:	or     DWORD PTR [eax],eax
  420c57:	je     0x420c5d
  420c59:	ds dec edi
  420c5b:	push   ebx
  420c5c:	dec    edi
  420c5d:	mov    bl,0xff
  420c5f:	inc    edx
  420c60:	dec    eax
  420c61:	inc    esi
  420c62:	je     0x420c31
  420c64:	call   0x946:0x817c91d
  420c6b:	test   eax,0x0
	...
  420c94:	cld    
  420c95:	scas   eax,DWORD PTR es:[edi]
  420c96:	out    0x39,eax
  420c98:	push   edx
  420c99:	or     DWORD PTR [eax],eax
  420c9b:	push   0xffffff87
  420c9d:	shl    BYTE PTR [ecx+ecx*1-0x3a],0xc4
  420ca2:	imul   ecx
  420ca4:	pushf  
  420ca5:	(bad)  
  420ca7:	sbb    al,0xf
  420ca9:	cs jg  0x420c80
  420cac:	sbb    eax,DWORD PTR [edi-0x78]
  420caf:	add    BYTE PTR [edi-0x1f],bl
  420cb2:	mov    eax,DWORD PTR [ebp-0x36]
  420cb5:	jl     0x420cb4
  420cb7:	jne    0x420cd3
  420cb9:	fdiv   DWORD PTR [ebx-0xc]
  420cbc:	dec    eax
  420cbd:	or     bh,bh
  420cbf:	jne    0x420ce7
  420cc1:	fcom   DWORD PTR [ebx]
  420cc3:	leave  
  420cc4:	push   esp
  420cc5:	dec    edx
  420cc6:	dec    BYTE PTR [edx]
  420cc8:	xor    ah,BYTE PTR [ecx+0x2c]
  420ccb:	mov    ebp,DWORD PTR [edi-0x8ef7623]
  420cd1:	dec    ebp
  420cd2:	out    dx,al
  420cd3:	push   eax
  420cd4:	rcr    al,0x13
  420cd7:	int    0x44
  420cd9:	dec    edx
  420cda:	dec    BYTE PTR [edx]
  420cdc:	and    ah,BYTE PTR [ecx+0x18]
  420cdf:	push   0x3f8420
  420ce4:	gs pop esp
  420ce6:	out    dx,al
  420ce7:	call   0x421c34
  420cec:	sub    ecx,ecx
  420cee:	jae    0x420cf1
  420cf0:	loope  0x420ccb
  420cf2:	jae    0x420ce4
  420cf4:	cmp    bl,BYTE PTR [esi+eax*1]
	...
  420d1f:	add    BYTE PTR [edx],dh
  420d21:	fidiv  DWORD PTR [ebx-0xc]
  420d24:	dec    edx
  420d25:	inc    edx
  420d26:	xor    edi,edi
  420d28:	and    eax,0x1afc73da
  420d2d:	adc    al,BYTE PTR [esi]
  420d2f:	add    dl,dh
  420d31:	(bad)
  420d34:	stos   DWORD PTR es:[edi],eax
  420d35:	int    0x53
  420d37:	mov    edx,DWORD PTR [esi]
  420d39:	mov    dl,al
  420d3b:	shl    BYTE PTR [ecx+ebx*8-0x6c75ac03],0xe1
  420d43:	inc    eax
  420d44:	loop   0x420d16
  420d46:	jo     0x420d49
  420d48:	mov    eax,ds:0xe03d81d9
  420d4d:	and    BYTE PTR [ecx+0x0],al
  420d50:	dec    ebx
  420d51:	xor    dl,dh
  420d53:	sbb    cl,al
  420d55:	push   ebp
  420d56:	pop    eax
  420d57:	daa    
  420d58:	or     dh,BYTE PTR [edx]
  420d5a:	add    dh,BYTE PTR [ecx+edi*1-0x51]
  420d5e:	or     eax,0x3f16dc1
  420d63:	add    BYTE PTR [edi],bl
  420d65:	sub    DWORD PTR [ebx-0x3ce379c4],eax
  420d6b:	inc    DWORD PTR [ebp+ebx*2+0x778b2b05]
  420d72:	cmp    edx,eax
  420d74:	and    bh,dh
  420d76:	dec    edi
  420d77:	adc    al,0x79
  420d79:	sbb    al,bl
  420d7b:	call   ebx
  420d7d:	ins    DWORD PTR es:[edi],dx
  420d7e:	push   esi
  420d7f:	mov    dh,0xee
  420d82:	push   eax
  420d83:	inc    BYTE PTR [eax]
	...
  420da9:	add    BYTE PTR [eax],al
  420dab:	add    BYTE PTR [edx+ecx*1+0x3],dl
  420daf:	add    BYTE PTR [ebx-0x68],cl
  420db2:	add    ch,BYTE PTR [edx+0x49]
  420db5:	sbb    bl,BYTE PTR [edx-0x7ccdb4fb]
  420dbb:	div    DWORD PTR [ebx+eiz*2]
  420dbe:	xchg   BYTE PTR ds:0x8902324a,bl
  420dc4:	into   
  420dc5:	stc    
  420dc6:	push   eax
  420dc7:	(bad)  
  420dc8:	sbb    al,0xad
  420dca:	test   ebx,ecx
  420dcc:	adc    eax,0xc4f4e33
  420dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dd2:	cmp    edi,ebp
  420dd4:	add    al,0x63
  420dd6:	pop    ebx
  420dd7:	lea    eax,[ebp+0x32]
  420dda:	add    cl,BYTE PTR [ebx]
  420ddc:	or     esp,DWORD PTR [ebx-0x7a]
  420ddf:	repnz dec ebx
  420de1:	xor    al,BYTE PTR [edx]
  420de3:	push   0xffc4f69e
  420de8:	iret   
  420de9:	mov    ah,0x53
  420deb:	std    
  420dec:	aam    0x72
  420dee:	mov    bl,0xe7
  420df0:	cmp    cl,BYTE PTR [ecx]
  420df2:	out    dx,al
  420df3:	add    ecx,DWORD PTR [ebx+0x10]
  420df6:	test   eax,0xe847c8ff
  420dfb:	add    ecx,DWORD PTR [ebx+0x4c]
  420dfe:	arpl   WORD PTR [eax-0x52],cx
  420e01:	inc    ebx
  420e02:	test   DWORD PTR [ebx+ecx*2],eax
  420e05:	or     ecx,ebp
  420e07:	add    bh,0x4c
  420e0a:	jbe    0x420e5b
  420e0c:	xchg   ebp,eax
  420e0d:	fsubr  DWORD PTR [ebp-0x67]
	...
  420e38:	js     0x420e7c
  420e3a:	gs dec edi
  420e3c:	test   DWORD PTR ds:0x90a1c57,ebx
  420e42:	bound  edi,QWORD PTR [ecx-0x78]
  420e45:	inc    edx
  420e46:	dec    ebp
  420e47:	dec    edi
  420e48:	inc    ecx
  420e49:	dec    ecx
  420e4a:	cmc    
  420e4b:	xchg   DWORD PTR [eax+ecx*1-0x21dffc17],edi
  420e52:	cmp    al,0xff
  420e54:	iret   
  420e55:	xchg   ebx,eax
  420e56:	call   0x5b86595e
  420e5b:	cmp    BYTE PTR [esi+0x43],al
  420e5e:	sbb    eax,0xe8ab3cda
  420e63:	add    ecx,DWORD PTR [ebx+0x7]
  420e66:	add    DWORD PTR [ecx],esp
  420e68:	inc    ebp
  420e69:	or     ecx,ebp
  420e6b:	cli    
  420e6c:	in     al,0xbd
  420e6e:	jg     0x420eec
  420e70:	xchg   DWORD PTR [ecx+0x63],eax
  420e73:	leave  
  420e74:	adc    dl,bl
  420e76:	sbb    BYTE PTR [edx+0x4b],0x7
  420e7a:	jmp    0xdd838dcd
  420e7f:	clc    
  420e80:	or     esi,esp
  420e82:	daa    
  420e83:	add    al,0x40
  420e85:	dec    ecx
  420e86:	push   esp
  420e87:	lods   al,BYTE PTR ds:[esi]
  420e88:	in     eax,dx
  420e89:	mov    esp,0x4c3f4ec4
  420e8e:	push   cs
  420e8f:	(bad)
  420e92:	add    BYTE PTR [ecx-0x59bcfe04],ch
  420e98:	ret    
  420e99:	cmp    ch,0xa6
	...
  420ec4:	adc    eax,0x48e9fe42
  420ec9:	xchg   esp,eax
  420eca:	test   BYTE PTR [ecx+0x39fe4306],ch
  420ed0:	pop    DWORD PTR [ebx]
  420ed2:	add    dh,dh
  420ed4:	dec    eax
  420ed5:	xor    DWORD PTR [esi-0x19],ebx
  420ed8:	dec    eax
  420ed9:	or     DWORD PTR [ebx],ecx
  420edb:	test   eax,0x2c831d73
  420ee0:	or     BYTE PTR [esi+edi*8+0x66],al
  420ee4:	dec    eax
  420ee5:	mov    ebp,0x82e35e0b
  420eea:	std    
  420eeb:	push   esi
  420eec:	add    eax,0x4e160493
  420ef1:	enter  0x51ff,0x39
  420ef5:	sbb    DWORD PTR cs:[esi],edi
  420ef8:	cmp    DWORD PTR [esi],0xffffffe7
  420efb:	jge    0x420f49
  420efd:	or     DWORD PTR [eax],eax
  420eff:	cs jae 0x420f3c
  420f02:	out    0x55,eax
  420f04:	dec    esp
  420f05:	or     DWORD PTR [eax],eax
  420f07:	adc    al,BYTE PTR [eax+0x43]
  420f0a:	je     0x420f1d
  420f0c:	nop
  420f0d:	push   0x9448e903
  420f12:	test   BYTE PTR ds:0x99fe4396,dh
  420f18:	lea    edi,[ebp-0x39]
  420f1b:	test   DWORD PTR [esi+0x4345e743],0x4cd00009
  420f25:	inc    edx
  420f26:	(bad)  
  420f27:	fiadd  WORD PTR [eax]
	...
  420f4d:	add    BYTE PTR [eax],al
  420f4f:	add    BYTE PTR [esi-0x79283883],cl
  420f55:	inc    ebx
  420f56:	out    0x69,eax
  420f58:	inc    ebx
  420f59:	or     DWORD PTR [eax],eax
  420f5b:	add    BYTE PTR [ecx-0x38],bl
  420f5e:	pop    ecx
  420f5f:	leave  
  420f60:	mov    cl,0x79
  420f62:	mov    esp,ebp
  420f64:	popa   
  420f65:	rcr    esi,1
  420f67:	push   ebx
  420f68:	mov    dl,BYTE PTR [ebx]
  420f6a:	in     eax,0x40
  420f6c:	mov    dl,0xcd
  420f6e:	jo     0x420f71
  420f70:	icebp  
  420f71:	rol    DWORD PTR [ecx+0x4123333d],cl
  420f77:	add    BYTE PTR [edx-0x707cf8a7],ah
  420f7d:	ret    0x412c
  420f80:	mov    dl,0x5
  420f82:	jne    0x420f89
  420f84:	mov    ebp,eax
  420f86:	pop    ecx
  420f87:	leave  
  420f88:	loope  0x420f55
  420f8a:	inc    ebx
  420f8b:	cld    
  420f8c:	jb     0x420f93
  420f8e:	add    BYTE PTR [eax],al
  420f90:	and    eax,0x6200f64a
  420f95:	add    eax,0xe1a7c700
  420f9a:	(bad)  
  420f9b:	push   DWORD PTR [edx+0x5]
  420f9e:	mov    DWORD PTR [ebp+0x16],0x6200000d
  420fa5:	int3   
  420fa6:	inc    ebx
  420fa7:	lock bound eax,QWORD PTR ds:0x48bf0000
  420fae:	out    dx,al
  420faf:	push   eax
  420fb0:	scas   eax,DWORD PTR es:[edi]
  420fb1:	dec    eax
  420fb2:	repnz push eax
	...
  420fdc:	scas   eax,DWORD PTR es:[edi]
  420fdd:	dec    eax
  420fde:	jmp    0x4e45:0x8bcdc850
  420fe5:	jne    0x42104f
  420fe7:	add    bh,BYTE PTR [eax+0x1d006a09]
  420fed:	cmp    BYTE PTR [edi-0x76f31cd2],cl
  420ff3:	inc    ebp
  420ff4:	sbb    cl,BYTE PTR [edx+0x58f2e87b]
  420ffa:	pop    es
  420ffb:	or     DWORD PTR [ebx-0x2b],0x324be95b
  421002:	add    dh,BYTE PTR [ebp+0x5f]
  421005:	inc    edi
  421006:	aad    0xfb
  421008:	int3   
  421009:	in     eax,0x4b
  42100b:	adc    BYTE PTR [esi+0x7a],0x2
  42100f:	je     0x421082
  421011:	stos   DWORD PTR es:[edi],eax
  421012:	lods   eax,DWORD PTR ds:[esi]
  421013:	div    DWORD PTR [eax+0x33724b27]
  421019:	call   0x4479:0x97b441d5
  421020:	stos   DWORD PTR es:[edi],eax
  421021:	(bad)  
  421022:	psubsb mm6,QWORD PTR [eax]
  421025:	hlt    
  421026:	dec    esp
  421027:	(bad)  
  421028:	push   eax
  421029:	jb     0x421001
  42102b:	and    al,dl
  42102d:	in     eax,dx
  42102e:	imul   edi,DWORD PTR [bx],0x84315c8a
  421035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421036:	dec    ebx
  421037:	je     0x4210a4
  421039:	scas   eax,DWORD PTR es:[edi]
  42103a:	ret    0x7407
  42103d:	pop    ebp
  42103e:	data16 mov es,WORD PTR [eax]
	...
  421065:	add    BYTE PTR [eax],al
  421067:	add    BYTE PTR [ebx],cl
  421069:	es dec ebx
  42106b:	xor    al,0x52
  42106d:	jnp    0x421030
  42106f:	dec    ebp
  421071:	xor    bl,BYTE PTR [edi+0x2710008]
  421077:	or     DWORD PTR [eax+0x374c4b76],0xffffffb3
  42107e:	int    0xeb
  421080:	dec    ebx
  421081:	xchg   ebp,eax
  421082:	xchg   esi,edi
  421084:	mov    esi,0xbe144c16
  421089:	jg     0x42104c
  42108b:	dec    DWORD PTR ds:0x1cff4e6d
  421091:	xor    al,BYTE PTR [edx]
  421093:	adc    DWORD PTR [esi+0xcff590a],0xf204d532
  42109d:	or     BYTE PTR [ebp+0x4b],al
  4210a0:	std    
  4210a1:	aas    
  4210a2:	imul   ecx,ecx,0xfd5d08f0
  4210a8:	in     eax,dx
  4210a9:	mov    ch,0xcc
  4210ab:	dec    ebx
  4210ac:	aas    
  4210ad:	mov    ss,WORD PTR [esi]
  4210af:	(bad)
  4210b2:	out    0x3,eax
  4210b4:	dec    ebx
  4210b5:	or     DWORD PTR [edx],edx
  4210b7:	cmp    eax,0x5861d609
  4210bc:	leave  
  4210bd:	inc    esp
  4210be:	mov    esp,0x23b115b7
  4210c3:	bound  esi,QWORD PTR [ecx+ecx*1-0x6f]
  4210c7:	(bad)  
  4210c8:	dec    ebx
  4210c9:	dec    esp
  4210ca:	lea    eax,[edi+0x0]
	...
  4210f4:	addr16 inc esi
  4210f6:	(bad)  
  4210f7:	les    ebx,FWORD PTR [edi+edi*1-0x236030c]
  4210fe:	xchg   edi,eax
  4210ff:	sbb    cl,BYTE PTR [edx]
  421101:	or     ecx,ebp
  421103:	ror    BYTE PTR [esi-0xc],1
  421106:	sub    BYTE PTR [ebx+0x7f295221],ch
  42110c:	push   edi
  42110d:	adc    ah,BYTE PTR [edx+0x77306cc4]
  421113:	add    eax,0x2051094b
  421118:	pop    edi
  421119:	aas    
  42111a:	cmp    eax,0xa20e1787
  42111f:	les    ecx,FWORD PTR [edi+edi*1-0x4c]
  421123:	repnz inc ebp
  421125:	mov    ebx,0xc774aec
  42112a:	mov    dl,0xc4
  42112c:	xor    al,0x27
  42112e:	inc    esi
  42112f:	pop    es
  421130:	dec    ebx
  421131:	or     edx,esp
  421133:	inc    ebx
  421134:	lahf   
  421135:	add    al,0x10
  421137:	fimul  WORD PTR [ebx+0x9]
  42113a:	jmp    0xff7fa081
  42113f:	call   0x5c421a8c
  421144:	or     al,BYTE PTR [ebx+0x4f]
  421147:	push   ebx
  421148:	inc    edi
  421149:	mov    bl,0x1
  42114b:	ficomp WORD PTR ds:0x81e96a0b
  421151:	mov    ebx,0x59dbce03
  421156:	sub    eax,0x28
	...
  42117f:	add    BYTE PTR [edi+0x12],al
  421182:	shl    BYTE PTR ds:0xe988304a,0x48
  421189:	or     edi,edi
  42118b:	cmp    cl,BYTE PTR [ebx+0x31]
  42118e:	pop    ecx
  42118f:	sub    BYTE PTR [eax],dl
  421191:	aas    
  421192:	mov    BYTE PTR [edi+eax*1],ah
  421195:	aas    
  421196:	jb     0x421185
  421198:	adc    BYTE PTR [ecx+eax*1],ch
  42119b:	jmp    0xfd40eae8
  4211a0:	adc    dh,cl
  4211a2:	(bad)  
  4211a3:	cli    
  4211a4:	xchg   esp,eax
  4211a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211a6:	jmp    edi
  4211a8:	dec    eax
  4211a9:	or     DWORD PTR [eax-0x17],ebp
  4211ac:	test   BYTE PTR [esi],bh
  4211ae:	(bad)  
  4211af:	push   ecx
  4211b0:	jmp    0x4211bc
  4211b2:	add    cl,ch
  4211b4:	jne    0x421234
  4211b6:	jae    0x4211ba
  4211b8:	or     ch,al
  4211ba:	sti    
  4211bb:	jmp    0x74421b08
  4211c0:	mov    eax,DWORD PTR [edx+0x4f]
  4211c3:	ror    DWORD PTR [eax-0x4d],cl
  4211c6:	add    DWORD PTR [esi],esi
  4211c8:	jnp    0x421200
  4211ca:	imul   ebp,ecx,0x2603bb91
  4211d0:	cmp    ebx,DWORD PTR [ecx+0x2d]
  4211d3:	test   al,0x48
  4211d5:	adc    al,al
  4211d7:	popf   
  4211d8:	cs aas 
  4211da:	je     0x4211ed
  4211dc:	and    BYTE PTR [eax+esi*1+0x0],0x45
  4211e1:	shr    ecx,cl
  4211e3:	xor    BYTE PTR [eax],al
	...
  421209:	add    BYTE PTR [eax],al
  42120b:	add    BYTE PTR ds:0x76e8f64e,dl
  421211:	adc    eax,0xa35ffff
  421216:	and    BYTE PTR [ecx-0xe],al
  421219:	enter  0xfc43,0xe2
  42121d:	or     DWORD PTR [eax],eax
  42121f:	add    BYTE PTR [edi+0x7e],ah
  421222:	cli    
  421223:	push   eax
  421224:	mov    BYTE PTR ds:0x5f3d026a,al
  42122a:	(bad)  
  42122b:	(bad)  
  42122c:	adc    DWORD PTR [ecx],ecx
  42122e:	call   DWORD PTR ds:0x4122b3
  421234:	test   eax,0x1b840dc9
  421239:	add    eax,0x7ded0000
  42123e:	(bad)  
  42123f:	and    BYTE PTR [edx+0x6fc70009],ah
  421245:	icebp  
  421246:	(bad)  
  421247:	push   DWORD PTR [edx-0x518c00f7]
  42124d:	rol    BYTE PTR [ebx-0x20],0x15
  421251:	push   esp
  421252:	push   es
  421253:	(bad)  
  421254:	das    
  421255:	test   eax,0x51a45c5
  42125a:	add    BYTE PTR [eax],al
  42125c:	(bad)  
  42125d:	enter  0xec43,0x62
  421261:	or     DWORD PTR [eax],eax
  421263:	add    BYTE PTR ds:0x7200ee7e,ch
  421269:	or     DWORD PTR [eax],eax
  42126b:	(bad)  
  42126c:	scas   eax,DWORD PTR es:[edi]
  42126d:	int    0xfe
  42126f:	inc    DWORD PTR [eax]
	...
  421295:	add    BYTE PTR [eax],al
  421297:	add    BYTE PTR [edx+0x9],ah
  42129a:	lea    eax,[ebp+0x5a]
  42129d:	jne    0x42129c
  42129f:	jne    0x421307
  4212a1:	(bad)  [esp+eax*1]
  4212a4:	and    cl,BYTE PTR [ecx]
  4212a6:	or     eax,eax
  4212a8:	dec    ebx
  4212a9:	sahf   
  4212aa:	jmp    0x5274:0x416a682
  4212b1:	add    ecx,edi
  4212b3:	repz les esp,FWORD PTR ds:0x328a290f
  4212ba:	aas    
  4212bb:	inc    esp
  4212bc:	pop    ds
  4212bd:	xor    al,BYTE PTR [edx]
  4212bf:	add    BYTE PTR [ebx+0x57],cl
  4212c2:	inc    esi
  4212c4:	mov    ?,WORD PTR [esi+0x2]
  4212c7:	add    BYTE PTR [ebx+0x32],cl
  4212ca:	inc    edi
  4212cb:	je     0x4212b4
  4212cd:	dec    ebx
  4212ce:	in     eax,dx
  4212cf:	les    ebp,FWORD PTR ds:0xb0b03f1
  4212d5:	imul   ecx
  4212d7:	out    0xb0,eax
  4212d9:	jl     0x421322
  4212db:	dec    al
  4212dd:	sub    eax,0x320a2d85
  4212e2:	add    dh,BYTE PTR [ebp+ecx*2-0x65]
  4212e6:	in     eax,dx
  4212e7:	mov    esp,0xc703f15d
  4212ec:	dec    esi
  4212ed:	push   ebx
  4212ee:	sbb    DWORD PTR [ecx+0x4b],eax
  4212f1:	xor    DWORD PTR [edx],eax
  4212f3:	add    bl,cl
  4212f5:	scas   eax,DWORD PTR es:[edi]
  4212f6:	(bad)
  4212f9:	ds sti 
  4212fb:	inc    BYTE PTR [eax]
	...
  421321:	add    BYTE PTR [eax],al
  421323:	add    dh,bh
  421325:	mov    ch,0x47
  421327:	je     0x4213a8
  421329:	fisubr DWORD PTR ds:0x47324b02
  42132f:	je     0x4213a0
  421331:	retf   0x43
  421334:	dec    ebx
  421335:	xor    al,BYTE PTR [esi+0x32]
  421338:	mov    ecx,DWORD PTR [ecx-0x4ab01b9]
  42133e:	push   esp
  42133f:	lods   eax,DWORD PTR ds:[esi]
  421340:	adc    ebp,DWORD PTR [ebx]
  421342:	test   DWORD PTR [ecx+ebp*2-0x2f01b815],0x11fd0208
  42134d:	or     al,0x64
  42134f:	loopne 0x42137f
  421351:	cmp    al,0x15
  421353:	mov    ecx,DWORD PTR [ebx+0x9]
  421356:	jmp    0x30228f5e
  42135b:	inc    esp
  42135c:	jg     0x4212ee
  42135e:	or     al,0x84
  421360:	or     BYTE PTR ds:0xc8eced80,bh
  421366:	call   0xaa4c8db6
  42136b:	inc    edi
  42136c:	bound  ecx,QWORD PTR [ecx]
  42136e:	shl    DWORD PTR ds:0x5be9094a,1
  421374:	out    0xfe,al
  421376:	int    0x47
  421378:	in     al,0x95
  42137a:	mov    ecx,0x53b0d547
  42137f:	push   ss
  421380:	mov    cl,BYTE PTR [ecx]
  421382:	inc    ecx
  421383:	cmp    DWORD PTR [eax-0x36],esi
  421386:	call   0x4213e6
	...
  4213af:	add    BYTE PTR [edi+0x0],cl
  4213b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213b3:	inc    edi
  4213b4:	sub    al,0x5e
  4213b6:	into   
  4213b7:	les    ebp,FWORD PTR [ebx+eiz*4+0x90a15f6]
  4213be:	add    DWORD PTR [esi+0x62],0xb3dc853c
  4213c5:	jmp    0xc4c4:0x24230427
  4213cc:	test   BYTE PTR [ebx],ah
  4213ce:	jge    0x4213da
  4213d0:	jl     0x42140d
  4213d2:	shr    BYTE PTR [ebx+eiz*1+0x31dbe8ca],1
  4213d9:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213db:	add    esi,DWORD PTR [ebx+0x28]
  4213de:	adc    al,BYTE PTR [edi+0x5d]
  4213e1:	mov    al,0x73
  4213e3:	push   ss
  4213e4:	or     cl,BYTE PTR [ecx]
  4213e6:	shl    DWORD PTR [ecx-0x170035e0],1
  4213ec:	mov    al,ds:0x842e3959
  4213f1:	mov    ds:0x3b0fd1f1,al
  4213f6:	pop    bx
  4213f8:	dec    edi
  4213f9:	enter  0xff,0x89
  4213fd:	add    bh,bh
  4213ff:	push   cs
  421400:	jg     0x421405
  421402:	cli    
  421403:	push   es
  421404:	mov    WORD PTR [edx],fs
  421406:	xor    al,0x3
  421408:	test   BYTE PTR [ebx],bh
  42140a:	or     ch,BYTE PTR [ecx]
  42140c:	sbb    ebx,DWORD PTR [eax]
  42140e:	call   0xfe7da5f2
  421413:	repnz add BYTE PTR [eax],al
	...
  42143a:	add    BYTE PTR [eax],al
  42143c:	mov    BYTE PTR [esi+0x4e4ba609],dh
  421442:	dec    edx
  421443:	sub    BYTE PTR [edi+0x8],cl
  421446:	add    cl,ch
  421448:	dec    eax
  421449:	mov    cl,0x0
  42144b:	call   0xd72a1d98
  421450:	cmp    BYTE PTR [edx],bh
  421452:	dec    BYTE PTR [edx-0x16bf303d]
  421458:	jge    0x42141f
  42145a:	sti    
  42145b:	call   0x6c421daf
  421460:	mov    edi,DWORD PTR [esi]
  421462:	dec    edi
  421463:	xchg   esi,eax
  421464:	cmp    ecx,DWORD PTR [ebx+ecx*2]
  421467:	sub    BYTE PTR [edi+0x31],al
  42146a:	push   0xb0948eb
  42146f:	test   eax,0xbcff157b
  421474:	or     edi,0x40
  421477:	jmp    0x6670689c
  42147c:	or     eax,0xb1ec0443
  421481:	leave  
  421482:	(bad)  
  421483:	call   0x41421dd0
  421488:	data16 hlt 
  42148a:	inc    BYTE PTR [eax]
  42148c:	or     eax,0xd3304de
  421491:	ret    
  421492:	push   si
  421494:	push   ebp
  421495:	inc    esp
  421496:	(bad)  
  421497:	out    0x31,eax
  421499:	xlat   BYTE PTR ds:[ebx]
  42149a:	std    
  42149b:	(bad)  
  42149c:	jnp    0x421465
  42149e:	push   ebx
  42149f:	mov    eax,DWORD PTR [eax]
	...
  4214c5:	add    BYTE PTR [eax],al
  4214c7:	add    BYTE PTR [esi],bh
  4214c9:	pop    esi
  4214ca:	add    eax,0xf805f2e9
  4214cf:	jb     0x421504
  4214d1:	(bad)  
  4214d2:	std    
  4214d3:	push   0x22
  4214d5:	fidivr WORD PTR [eax-0x47f9ddff]
  4214db:	add    dl,dh
  4214dd:	add    eax,0x3a30c900
  4214e2:	(bad)  
  4214e3:	addr16 inc ebx
  4214e5:	fidivr WORD PTR [esi]
  4214e7:	add    dl,ch
  4214e9:	push   esi
  4214ea:	inc    edx
  4214ec:	std    
  4214ed:	pop    esp
  4214ee:	clc    
  4214ef:	call   0xa42a1a26
  4214f4:	jecxz  0x4214fb
  4214f6:	add    al,ch
  4214f8:	test   al,0xc2
  4214fa:	std    
  4214fb:	dec    DWORD PTR [edx-0x12000f41]
  421501:	fcom   QWORD PTR [edx]
  421503:	cmc    
  421504:	in     eax,dx
  421505:	ret    
  421506:	out    0xfc,al
  421508:	xlat   BYTE PTR ds:[ebx]
  421509:	ret    
  42150a:	std    
  42150b:	cmp    DWORD PTR [edi+0x0],0x4a
  42150f:	inc    ecx
  421510:	mov    dl,0x5
  421512:	je     0x42152d
  421514:	and    DWORD PTR [edx],eax
  421516:	mov    ebp,0x5632e
  42151b:	je     0x421591
  42151d:	les    edx,FWORD PTR [ebx]
  42151f:	mov    ebp,0xc6fe46bc
  421524:	addr16 or al,0x29
  421527:	inc    ecx
  421528:	bound  eax,QWORD PTR [esi]
	...
  421552:	add    BYTE PTR [eax],al
  421554:	dec    ebx
  421555:	mov    al,0x5b
  421557:	(bad)  
  421558:	pusha  
  421559:	retf   0xe744
  42155c:	add    ebx,0x44
  42155f:	dec    BYTE PTR [eax-0x741733a9]
  421565:	and    cl,BYTE PTR [edx+0x71]
  421568:	dec    edx
  421569:	jecxz  0x4215af
  42156b:	out    0x5c,eax
  42156d:	and    DWORD PTR [edx],eax
  42156f:	add    BYTE PTR [ecx-0x6d556d3],ah
  421575:	pop    ss
  421576:	push   ebx
  421577:	and    BYTE PTR [ecx],0x2f
  42157a:	int    0x1
  42157c:	and    BYTE PTR ds:0xb023ea57,ah
  421582:	inc    esp
  421583:	inc    BYTE PTR [ebx+ecx*1]
  421586:	ins    BYTE PTR es:[edi],dx
  421587:	idiv   ah
  421589:	daa    
  42158a:	fdivr  st,st(7)
  42158c:	in     al,dx
  42158d:	push   ds
  42158e:	add    eax,DWORD PTR [eax]
  421590:	dec    ebx
  421591:	push   edi
  421592:	sbb    eax,0x3e18258
  421597:	jmp    DWORD PTR [esi]
  421599:	out    0xaa,al
  42159b:	inc    eax
  42159c:	dec    ebx
  42159d:	dec    edi
  42159e:	sbb    eax,0x3e17260
  4215a3:	jmp    FWORD PTR [esi-0x3a]
  4215a6:	stos   BYTE PTR es:[edi],al
  4215a7:	inc    eax
  4215a8:	dec    ebx
  4215a9:	addr16 sbb eax,0x3e11268
  4215af:	jmp    DWORD PTR [esi+0x6]
  4215b2:	stos   DWORD PTR es:[edi],eax
  4215b3:	inc    eax
  4215b4:	dec    ebx
  4215b5:	lahf   
  4215b6:	sbb    eax,0x70
	...
  4215df:	add    BYTE PTR [edx],al
  4215e1:	loope  0x4215e6
  4215e3:	jmp    FWORD PTR [esi+0x36]
  4215e6:	test   eax,0x1db74b40
  4215eb:	js     0x42160f
  4215ed:	loope  0x4215f2
  4215ef:	jmp    DWORD PTR [esi]
  4215f1:	es test eax,0x66094b40
  4215f7:	push   ds
  4215f8:	retf   
  4215f9:	shl    BYTE PTR [edi+0x6cee6403],cl
  4215ff:	stos   BYTE PTR es:[edi],al
  421600:	or     ecx,DWORD PTR [ecx]
  421602:	dec    esi
  421603:	push   ds
  421604:	ret    
  421605:	shl    BYTE PTR [edi+0x6cee4c03],cl
  42160b:	stos   BYTE PTR es:[edi],al
  42160c:	mov    ecx,DWORD PTR [ecx]
  42160e:	ss push ds
  421610:	fcmovnbe st,st(1)
  421612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421613:	add    esi,DWORD PTR [esi+ebp*8]
  421616:	jl     0x4215c2
  421618:	mov    ecx,DWORD PTR [ecx]
  42161a:	push   ds
  42161b:	push   ds
  42161c:	ret    
  42161d:	shl    DWORD PTR [edi+0x6cee1c03],1
  421623:	stos   BYTE PTR es:[edi],al
  421624:	mov    ecx,DWORD PTR [ecx]
  421626:	push   es
  421627:	push   ds
  421628:	jmp    0x4215fb
  42162a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42162b:	add    eax,DWORD PTR [esi+ebp*8]
  42162e:	dec    esp
  42162f:	stos   BYTE PTR es:[edi],al
  421630:	mov    ecx,DWORD PTR [ecx]
  421632:	out    dx,al
  421633:	sbb    eax,0x427d1a3
  421638:	in     al,dx
  421639:	in     eax,dx
  42163a:	mov    ebp,ds
  42163c:	mov    ecx,DWORD PTR [ecx]
  42163e:	(bad)  
  42163f:	jmp    0x469e7f0
	...
  42166c:	aam    0xed
  42166e:	jl     0x42164d
  421670:	mov    ecx,DWORD PTR [ecx]
  421672:	mov    esi,0x27d1fce9
  421677:	add    al,0xbc
  421679:	in     eax,dx
  42167a:	ins    BYTE PTR es:[edi],dx
  42167b:	fisttp QWORD PTR [ebx]
  42167d:	or     DWORD PTR [esi+0x27d1ece9],esp
  421683:	add    al,0xa4
  421685:	in     eax,dx
  421686:	lods   al,BYTE PTR ds:[esi]
  421687:	fisttp QWORD PTR [ebx]
  421689:	or     DWORD PTR [esi+0x27d18ce9],ecx
  42168f:	add    al,0x8c
  421691:	in     eax,dx
  421692:	lods   al,BYTE PTR ds:[esi]
  421693:	fisttp QWORD PTR [ebx]
  421695:	or     DWORD PTR [eax],eax
  421697:	jbe    0x42170b
  421699:	inc    edi
  42169a:	pop    eax
  42169b:	sub    BYTE PTR [edi+0x38],cl
  42169e:	and    al,0x3d
  4216a0:	mov    cs,eax
  4216a2:	call   FWORD PTR [ebp+0x72]
  4216a5:	pop    edi
  4216a6:	pop    eax
  4216a7:	test   al,0x48
  4216a9:	cmp    BYTE PTR [ebp*1+0x45ffc876],ah
  4216b0:	bound  edx,QWORD PTR [edi+0x58]
  4216b3:	test   al,0x48
  4216b5:	ss and al,0x4d
  4216b8:	push   ds
  4216b9:	retf   0x2dff
  4216bc:	and    ch,BYTE PTR [edi]
  4216be:	pop    eax
  4216bf:	test   al,0x48
  4216c1:	ss and al,0xd
  4216c4:	push   es
  4216c5:	retf   0x15ff
  4216c8:	xor    ah,BYTE PTR [edi]
  4216ca:	pop    eax
  4216cb:	test   al,0x48
  4216cd:	ss and al,0xfd
	...
  4216f8:	out    dx,eax
  4216f9:	leave  
  4216fa:	(bad)  
  4216fb:	std    
  4216fc:	repz ds pop eax
  4216ff:	test   al,0x48
  421701:	ss and al,0xed
  421704:	pop    ss
  421705:	retf   0xe5ff
  421708:	jecxz  0x421740
  42170a:	pop    eax
  42170b:	sub    BYTE PTR [edi+0x36],cl
  42170e:	and    al,0xed
  421710:	dec    cl
  421712:	dec    ebp
  421714:	jecxz  0x421724
  421716:	pop    edx
  421717:	sub    BYTE PTR [edi+0x36],al
  42171a:	and    al,0xed
  42171c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42171d:	leave  
  42171e:	push   DWORD PTR [ebp+0x285a06b3]
  421724:	dec    edi
  421725:	ss and al,0xfd
  421728:	mov    cs,ecx
  42172a:	call   FWORD PTR [ebp+0x285a1eb3]
  421730:	inc    edi
  421731:	ss and al,0xed
  421734:	jbe    0x4216ff
  421736:	(bad)  
  421737:	inc    ebp
  421739:	and    DWORD PTR [esi],ebx
  42173b:	pop    edx
  42173c:	xor    ecx,DWORD PTR ds:0x548e25ff
  421742:	aas    
  421743:	add    ch,ah
  421745:	and    BYTE PTR [edx],ch
  421747:	pop    edx
  421748:	mov    ds:0x4225ff0a,eax
  42174d:	push   edi
  42174e:	aas    
  42174f:	add    ch,dh
  421751:	and    BYTE PTR [edx],dh
  421753:	pop    edx
  421754:	mov    ds:0x4a25ff0a,eax
  421759:	push   edi
  42175a:	aas    
	...
  421783:	add    BYTE PTR [ebp-0xca5c5df],al
  421789:	or     edi,edi
  42178b:	and    eax,0x3f53e2
  421790:	and    DWORD PTR gs:[esi+0x5a],eax
  421794:	repz or edi,edi
  421797:	and    eax,0x3f53e2
  42179c:	inc    ebp
  42179d:	and    DWORD PTR [edx+0x5a],edx
  4217a0:	jecxz  0x4217ab
  4217a2:	jmp    DWORD PTR ds:0x3f53aa
  4217a8:	cmc    
  4217a9:	sub    eax,0x9a35a5a
  4217ae:	jmp    DWORD PTR ds:0x3f5782
  4217b4:	add    eax,0x335a622e
  4217b9:	or     eax,0x578a25ff
  4217be:	aas    
  4217bf:	add    BYTE PTR ds:0x735a6a2e,al
  4217c5:	or     eax,0x578225ff
  4217ca:	aas    
  4217cb:	add    ch,ah
  4217cd:	sub    eax,0xd635a72
  4217d2:	jmp    DWORD PTR ds:0x3f5746
  4217d8:	dec    ebx
  4217d9:	lahf   
  4217da:	out    0x83,al
  4217dc:	icebp  
  4217dd:	loopne 0x4217e2
  4217df:	jmp    DWORD PTR [esi-0x48]
  4217e2:	fld    QWORD PTR [eax+0x4b]
  4217e5:	mov    bh,0xe6
  4217e7:	pop    DWORD PTR [eax]
	...
  42180d:	add    BYTE PTR [eax],al
  42180f:	add    BYTE PTR [ecx],ah
  421811:	loope  0x421816
  421813:	jmp    FWORD PTR [esi]
  421815:	(bad)  
  421817:	inc    eax
  421818:	dec    ebx
  421819:	scas   eax,DWORD PTR es:[edi]
  42181a:	out    0x97,al
  42181c:	add    DWORD PTR [ecx+0x2],esp
  42181f:	jmp    DWORD PTR [esi]
  421821:	mov    esp,0xc74b40dd
  421826:	out    0x9f,al
  421828:	icebp  
  421829:	pusha  
  42182a:	add    bh,bh
  42182c:	outs   dx,BYTE PTR ds:[esi]
  42182d:	mov    ds,ebp
  42182f:	inc    eax
  421830:	dec    ebx
  421831:	sti    
  421832:	out    0xab,al
  421834:	xchg   ecx,eax
  421835:	popa   
  421836:	add    bh,bh
  421838:	data16 rcr ch,cl
  42183b:	inc    eax
  42183c:	dec    ebx
  42183d:	adc    esp,edi
  42183f:	mov    bl,0x81
  421841:	popa   
  421842:	add    bh,bh
  421844:	outs   dx,BYTE PTR ds:[esi]
  421845:	fcmovu st,st(5)
  421847:	inc    eax
  421848:	dec    ebx
  421849:	or     esp,edi
  42184b:	mov    ebx,0xff0261a1
  421850:	es loop 0x421830
  421853:	inc    eax
  421854:	dec    ebx
  421855:	and    esp,ebp
  421857:	ret    
  421858:	xchg   ecx,eax
  421859:	loope  0x42185e
  42185b:	jmp    FWORD PTR [esi]
  42185d:	jp     0x42183b
  42185f:	inc    eax
  421860:	dec    ebx
  421861:	pop    ebx
  421862:	in     eax,0xcb
  421864:	jno    0x421847
  421866:	add    edi,edi
  421868:	es xchg edx,eax
  42186a:	fadd   QWORD PTR [eax+0x4b]
  42186d:	jae    0x421854
  42186f:	xlat   BYTE PTR ds:[ebx]
  421870:	and    ecx,esp
  421872:	add    edi,edi
	...
  42189c:	outs   dx,BYTE PTR ds:[esi]
  42189d:	xchg   ah,bl
  42189f:	inc    eax
  4218a0:	dec    ebx
  4218a1:	or     DWORD PTR [ebp-0x53ba6fb1],esi
  4218a7:	dec    edi
  4218a8:	nop
  4218a9:	inc    ebp
  4218aa:	popa   
  4218ab:	(bad)  
  4218ac:	push   0x4a3b6a0d
  4218b1:	mov    dh,0xf0
  4218b3:	jnp    0x42189d
  4218b5:	or     cl,ch
  4218b7:	add    ecx,DWORD PTR [ecx+0x7c84e90d]
  4218bd:	or     eax,0x7b30bec
  4218c2:	jmp    0xe48963ca
  4218c7:	add    ecx,eax
  4218c9:	xor    eax,esp
  4218cb:	mov    esi,0x3e4714c
  4218d0:	dec    ebx
  4218d1:	or     DWORD PTR [ebx],ebp
  4218d3:	pop    es
  4218d4:	dec    ebx
  4218d5:	mov    BYTE PTR [eax+0x13],al
  4218d8:	mov    esi,0x4b097101
  4218dd:	or     ecx,ebp
  4218df:	inc    ebp
  4218e0:	dec    eax
  4218e1:	or     DWORD PTR [edx+0x3b],ebp
  4218e4:	inc    esp
  4218e5:	mov    dh,0xf0
  4218e7:	jnp    0x42192d
  4218e9:	or     ecx,ebp
  4218eb:	add    ecx,DWORD PTR [ecx]
  4218ed:	or     eax,0xc91484e9
  4218f2:	or     DWORD PTR [ebx],0xffffffc3
  4218f5:	(bad)  
  4218f6:	call   0xec8963fe
  4218fb:	add    esi,DWORD PTR [esi]
  4218fd:	mov    eax,ebp
  4218ff:	add    eax,DWORD PTR [eax]
	...
  421925:	add    BYTE PTR [eax],al
  421927:	add    BYTE PTR [ebx-0x4a],cl
  42192a:	lock jnp 0x42197d
  42192d:	or     ecx,ebp
  42192f:	add    ecx,DWORD PTR [ecx]
  421931:	or     eax,0xa4b00e9
  421936:	jmp    0x8143673e
  42193b:	push   cs
  42193c:	dec    ebx
  42193d:	or     ecx,ebp
  42193f:	inc    ecx
  421940:	dec    eax
  421941:	or     DWORD PTR [eax],eax
  421943:	hlt    
  421944:	dec    eax
  421945:	pop    es
  421946:	add    cl,ch
  421948:	mov    ecx,DWORD PTR [ebx]
  42194a:	mov    eax,0x948f9
  42194f:	stos   DWORD PTR es:[edi],eax
  421950:	push   ebx
  421951:	or     DWORD PTR ds:0x94ce9,edi
  421957:	or     al,0x3f
  421959:	jno    0x42196c
  42195b:	jmp    0xe60422a8
  421960:	dec    eax
  421961:	idiv   bh
  421963:	loopne 0x4219ad
  421965:	or     DWORD PTR [ebp-0x1f],edi
  421968:	lock pop ss
  42196a:	add    cl,ch
  42196c:	dec    eax
  42196d:	inc    edi
  42196e:	add    ebp,ecx
  421970:	dec    ebx
  421971:	or     DWORD PTR [eax],edx
  421973:	jmp    0x9149cfc0
  421978:	xor    eax,0x8ae90009
  42197d:	push   es
  42197e:	add    ah,bh
  421980:	dec    eax
  421981:	jmp    0xb4e0285
  421986:	mov    eax,0x948d1
  42198b:	sub    eax,DWORD PTR [eax]
	...
  4219b1:	add    BYTE PTR [eax],al
  4219b3:	add    BYTE PTR [ebx+0x9],dl
  4219b6:	cmp    eax,0xfe3308e9
  4219bb:	xchg   esp,eax
  4219bc:	inc    eax
  4219bd:	jno    0x4219d8
  4219bf:	jmp    0xee04230c
  4219c4:	dec    eax
  4219c5:	hlt    
  4219c6:	jmp    FWORD PTR [eax+0x47]
  4219c9:	or     DWORD PTR [ebp-0x1f],edi
  4219cc:	jo     0x4219dc
  4219ce:	add    cl,ch
  4219d0:	dec    eax
  4219d1:	inc    edi
  4219d2:	add    ebp,ecx
  4219d4:	fld    DWORD PTR [ecx+0x3c]
  4219d7:	jmp    0xe6422224
  4219dc:	stos   DWORD PTR es:[edi],eax
  4219dd:	dec    ecx
  4219de:	mov    WORD PTR ds:0x8b133e,ds
  4219e4:	repz enter 0x2,0x31
  4219e9:	lea    ebx,[edx]
  4219eb:	add    al,0xa2
  4219ed:	push   es
  4219ee:	push   DWORD PTR [ebp+0x7f]
  4219f1:	jg     0x421a72
  4219f3:	adc    BYTE PTR [esi+0x33890006],dh
  4219f9:	push   cs
  4219fa:	add    al,0x0
  4219fc:	mov    ds:0x9e81c546,al
  421a01:	or     al,BYTE PTR [eax]
  421a03:	add    BYTE PTR [edx+0x6],bh
  421a06:	add    BYTE PTR [eax],al
  421a08:	sti    
  421a09:	mov    WORD PTR [esi],cs
  421a0b:	add    al,0x62
  421a0d:	push   es
  421a0e:	cmp    DWORD PTR [esi+eax*4+0xa],0x0
  421a13:	mov    ebx,ebx
  421a15:	or     eax,0x4
	...
  421a3e:	add    BYTE PTR [eax],al
  421a40:	jb     0x421abc
  421a42:	or     DWORD PTR [edx-0x13ff79d],ecx
  421a48:	and    bh,BYTE PTR [esi-0x1]
  421a4b:	shl    DWORD PTR [esi],0x6
  421a4e:	shl    BYTE PTR [ecx],1
  421a50:	jo     0x421a5c
  421a52:	add    BYTE PTR [ebx+0x412a3],al
  421a58:	and    dh,bl
  421a5a:	jae    0x421a79
  421a5c:	cdq    
  421a5d:	lea    ecx,[esi]
  421a5f:	add    al,0x32
  421a61:	push   es
  421a62:	mov    DWORD PTR [ecx+0xa1a],eax
  421a68:	loop   0x421a34
  421a6a:	jg     0x421a88
  421a6c:	test   BYTE PTR ds:0x5f20800,0x0
  421a73:	mov    DWORD PTR [ebx+0x16],esp
  421a76:	add    al,0x0
  421a78:	loop   0x421af8
  421a7a:	xchg   DWORD PTR [eax],ebx
  421a7c:	test   BYTE PTR ds:0xc853d000,0x81
  421a83:	or     DWORD PTR [ebx+0x3c],0x434b0006
  421a8a:	mov    dh,0x1c
  421a8c:	shl    BYTE PTR [eax+0x204b0413],1
  421a92:	mov    DWORD PTR [eax+0x22453],eax
  421a98:	or     ebp,DWORD PTR [ebx-0x7e]
  421a9b:	sbb    ecx,DWORD PTR [edi+0x20]
  421a9e:	add    cl,BYTE PTR [eax]
  421aa0:	dec    ebx
  421aa1:	and    BYTE PTR [edx],al
  421aa3:	mov    DWORD PTR [eax],eax
	...
  421ac9:	add    BYTE PTR [eax],al
  421acb:	add    dl,cl
  421acd:	das    
  421ace:	push   es
  421acf:	add    BYTE PTR [ebx-0x59],cl
  421ad2:	mov    dl,BYTE PTR [edi]
  421ad4:	dec    edi
  421ad5:	and    BYTE PTR [edx],al
  421ad7:	mov    cl,BYTE PTR [edx+0x1e]
  421ada:	inc    edx
  421adb:	std    
  421adc:	mov    esp,DWORD PTR [edi-0x143f3cfe]
  421ae2:	out    0x3,eax
  421ae4:	shl    BYTE PTR [ebx-0x1a],1
  421ae7:	add    esi,esi
  421ae9:	jns    0x421abe
  421aeb:	xor    bl,BYTE PTR [ebp-0x54]
  421aee:	retf   0xc1ff
  421af1:	xlat   BYTE PTR ds:[ebx]
  421af2:	and    dh,0x4a
  421af5:	adc    DWORD PTR [eax*2-0x7d2ca932],ebp
  421afc:	xor    esp,DWORD PTR [edx]
  421afe:	mov    bl,0xef
  421b00:	enter  0x2f0,0xbd
  421b04:	and    al,0xe8
  421b06:	cmp    al,0xfe
  421b08:	into   
  421b09:	lea    ecx,[ecx]
  421b0b:	je     0x421aa6
  421b0d:	jae    0x421a96
  421b0f:	dec    BYTE PTR [edx-0x37]
  421b12:	pop    ds
  421b13:	add    al,0x4b
  421b15:	and    dh,BYTE PTR [ebp+0x13a1d018]
  421b1b:	add    al,0x4b
  421b1d:	and    cl,BYTE PTR [ecx+0x2265380]
  421b23:	add    BYTE PTR [ebx+0x407a7009],cl
  421b29:	add    eax,0x8ac203e9
  421b2e:	clc    
  421b2f:	pop    es
	...
  421b58:	dec    ebx
  421b59:	or     DWORD PTR [edx-0x7e],esp
  421b5c:	pop    esp
  421b5d:	add    eax,0x4bb503e9
  421b62:	out    0xb7,eax
  421b64:	inc    edx
  421b65:	adc    eax,0x1
  421b68:	nop
  421b69:	das    
  421b6a:	test   eax,0xea243c8b
  421b6f:	push   ebx
  421b70:	cmp    al,0xa
  421b72:	push   eax
  421b73:	pop    ds
  421b74:	dec    edi
  421b75:	or     ecx,ebp
  421b77:	mov    dh,0x33
  421b79:	test   BYTE PTR [edi+0x13],ah
  421b7c:	dec    edi
  421b7d:	or     ecx,ebp
  421b7f:	mov    cl,bl
  421b81:	adc    ebp,esp
  421b83:	add    ecx,DWORD PTR [ebx-0x37]
  421b86:	pop    edi
  421b87:	jp     0x421bd9
  421b89:	add    eax,0x8ad203e9
  421b8e:	clc    
  421b8f:	pop    es
  421b90:	dec    ebx
  421b91:	or     DWORD PTR [edx-0x7e],esi
  421b94:	cmp    al,0x5
  421b96:	jmp    0xeb53dc9e
  421b9b:	pop    eax
  421b9c:	inc    esi
  421b9d:	dec    esp
  421b9e:	pop    ss
  421b9f:	sub    ecx,ecx
  421ba1:	push   ds
  421ba2:	out    0x8b,eax
  421ba4:	pop    esp
  421ba5:	mov    dh,0x5a
  421ba7:	fmul   DWORD PTR [ebx+0x62]
  421baa:	int3   
  421bab:	pop    es
  421bac:	dec    ebx
  421bad:	or     DWORD PTR [edx+ebx*1+0x7f889d0],ebx
  421bb4:	dec    ebx
  421bb5:	or     DWORD PTR [eax-0x7e],esp
  421bb8:	xor    al,0x5
  421bba:	jmp    0x421bc2
	...
  421be3:	add    BYTE PTR [ebx+0x471f3f82],cl
  421be9:	or     ecx,ebp
  421beb:	mov    cl,bl
  421bed:	sbb    BYTE PTR [eax],al
  421bef:	in     eax,dx
  421bf0:	dec    eax
  421bf1:	or     DWORD PTR [ebx+0x54068],ecx
  421bf7:	jmp    0x55426616
  421bfc:	inc    ebp
  421bfd:	or     DWORD PTR [edi],0xffffffeb
  421c00:	jbe    0x421c30
  421c02:	shl    DWORD PTR [ecx+0x5f],0x24
  421c06:	add    DWORD PTR [ecx-0x2256f759],ebx
  421c0c:	mov    ah,0x2f
  421c0e:	(bad)  
  421c0f:	cmp    al,0x4e
  421c11:	test   BYTE PTR [eax-0x1d05b27],al
  421c17:	jo     0x421bdf
  421c19:	pop    ss
  421c1a:	add    al,0xe9
  421c1c:	dec    eax
  421c1d:	leave  
  421c1e:	mov    BYTE PTR [eax+0x33],dl
  421c21:	add    eax,0x88d7e900
  421c26:	paddsw mm1,QWORD PTR [eax+0x9]
  421c2a:	mov    esi,DWORD PTR [eax+0x57]
  421c2d:	add    eax,0xe918e900
  421c32:	pop    esi
  421c33:	jb     0x762b1f82
  421c39:	aam    0x8a
  421c3b:	int    0x74
  421c3d:	call   DWORD PTR [ebp+0x1a]
  421c40:	pop    es
  421c41:	xlat   BYTE PTR ds:[ebx]
  421c42:	or     BYTE PTR [eax+edx*2-0x49],0x4
  421c47:	test   BYTE PTR [eax],al
	...
  421c6d:	add    BYTE PTR [eax],al
  421c6f:	add    BYTE PTR [eax+0x9],dl
  421c72:	add    cl,ch
  421c74:	lds    esi,FWORD PTR [edx+0x37bddd23]
  421c7a:	sub    dh,BYTE PTR [edx+edx*8]
  421c7d:	stos   BYTE PTR es:[edi],al
  421c7e:	and    ebp,ecx
  421c80:	into   
  421c81:	je     0x8b50f7c9
  421c87:	and    al,0xbc
  421c89:	push   esp
  421c8a:	mov    WORD PTR [edx+0x4f],?
  421c8d:	or     DWORD PTR [eax],eax
  421c8f:	add    dl,dh
  421c91:	sub    al,0x18
  421c93:	je     0x421c81
  421c95:	cmp    eax,0x782b8540
  421c9a:	hlt    
  421c9b:	xor    DWORD PTR [edx],0xa
  421c9e:	test   ecx,ecx
  421ca0:	jg     0x421c9f
  421ca2:	add    al,0xe0
  421ca5:	fild   WORD PTR [ecx]
  421ca7:	and    DWORD PTR [edx+0x3146470b],0x66
  421cae:	and    bl,BYTE PTR [ebx+esi*4]
  421cb1:	jns    0x421c7f
  421cb3:	pop    edi
  421cb4:	push   esp
  421cb5:	push   eax
  421cb6:	pop    ecx
  421cb7:	ret    0xaa6
  421cba:	mov    edx,DWORD PTR [esi+ecx*2+0x9]
  421cbe:	push   ebp
  421cbf:	push   esi
  421cc0:	sbb    ebp,esi
  421cc2:	lds    eax,FWORD PTR [esi-0x1d186]
  421cc8:	mov    ds:0xe800000a,al
  421ccd:	sti    
  421cce:	or     ecx,0x75
  421cd1:	scas   al,BYTE PTR es:[edi]
  421cd2:	add    DWORD PTR cs:[eax],eax
	...
  421cf9:	add    BYTE PTR [eax],al
  421cfb:	add    BYTE PTR [edx+0xa],ah
  421cfe:	push   edi
  421cff:	mov    esi,DWORD PTR [esi+0x4e]
  421d02:	adc    al,BYTE PTR [ebx+0x57602f5]
  421d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d09:	add    eax,DWORD PTR [eax]
  421d0b:	add    BYTE PTR [edx+0x7f],ah
  421d0e:	shr    BYTE PTR [ebx],0x1d
  421d11:	call   0x404d:0x3c1e0838
  421d18:	scas   eax,DWORD PTR es:[edi]
  421d19:	repz jae 0x421d12
  421d1c:	mov    eax,ds:0x22041a88
  421d21:	or     bh,bh
  421d23:	jne    0x421d3c
  421d25:	jg     0x421cab
  421d27:	adc    BYTE PTR [esi],ch
  421d29:	or     al,BYTE PTR [eax]
  421d2b:	mov    DWORD PTR [edx+edx*1+0x204b0004],ebp
  421d32:	ret    0xcdc6
  421d35:	sbb    edi,esi
  421d37:	(bad)  
  421d38:	cld    
  421d39:	aaa    
  421d3a:	add    al,BYTE PTR [eax]
  421d3c:	dec    ebx
  421d3d:	mov    ecx,0x20470f80
  421d42:	add    cl,BYTE PTR [ebx-0x1a833]
  421d48:	fsubr  QWORD PTR [edi-0x1d]
  421d4b:	mov    cl,ch
  421d4d:	das    
  421d4e:	(bad)  
  421d4f:	dec    esp
  421d51:	test   eax,0x27d35f0d
  421d56:	aaa    
  421d57:	test   DWORD PTR [ebx+0x1c],ebx
  421d5a:	add    al,BYTE PTR [eax]
  421d5c:	adc    eax,0x7460d
	...
  421d85:	add    BYTE PTR [eax],al
  421d87:	add    BYTE PTR [ebx-0x63],cl
  421d8a:	cmp    BYTE PTR [ebx-0x1d],dh
  421d8d:	mov    ds:0xb64afe4a,al
  421d92:	pop    ss
  421d93:	add    al,0x4b
  421d95:	and    BYTE PTR [ebp+0x1b0d4268],al
  421d9b:	mov    ecx,ebp
  421d9d:	das    
  421d9e:	(bad)  
  421d9f:	(bad)  
  421da0:	jl     0x421d5a
  421da2:	adc    DWORD PTR [edi],0x4002204f
  421da8:	ret    0x17c5
  421dab:	add    al,0x4b
  421dad:	and    BYTE PTR [ecx+0x21c3b85],cl
  421db3:	add    al,al
  421db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421db6:	sbb    eax,DWORD PTR [ebx+ecx*2]
  421db9:	and    BYTE PTR [edi+ecx*1-0x3ec60fb7],cl
  421dc0:	rcl    DWORD PTR [edx+0x1],cl
  421dc3:	mov    ss,WORD PTR [edi+0x26]
  421dc6:	add    al,BYTE PTR [eax]
  421dc8:	mov    dh,0x59
  421dca:	mov    eax,DWORD PTR [ebp+0x2263b]
  421dd0:	ror    BYTE PTR [ecx],cl
  421dd2:	outs   dx,DWORD PTR ds:[esi]
  421dd3:	sbb    al,0x4f
  421dd5:	or     ecx,ebp
  421dd7:	ret    
  421dd8:	ret    
  421dd9:	pop    ebx
  421dda:	hlt    
  421ddb:	inc    DWORD PTR [ebp*1+0x54c825f]
  421de2:	jmp    0xe0c5ddea
  421de7:	(bad)  
  421de8:	in     al,dx
  421de9:	sub    al,0x62
  421deb:	adc    al,0x0
	...
  421e11:	add    BYTE PTR [eax],al
  421e13:	add    BYTE PTR [ecx+0x57],cl
  421e16:	out    dx,al
  421e17:	inc    ebp
  421e18:	les    ebx,FWORD PTR [ecx]
  421e1a:	call   0xe9474ea8
  421e1f:	add    edx,DWORD PTR [esi+0x12]
  421e22:	bound  eax,QWORD PTR [ecx+0x3e90554]
  421e28:	rol    BYTE PTR [ebx+0x2cb4ffe0],cl
  421e2e:	sub    BYTE PTR [ebx+0x3ed0dde],cl
  421e34:	dec    ebx
  421e35:	and    BYTE PTR [esi+0x13],0x47
  421e39:	or     ecx,ebp
  421e3b:	mov    esi,cs
  421e3d:	adc    ebp,esp
  421e3f:	add    ecx,DWORD PTR [ebx+0x7f]
  421e42:	loopne 0x421e49
  421e44:	xchg   edx,eax
  421e45:	sub    esp,DWORD PTR [edi-0x64176a74]
  421e4b:	mov    ecx,DWORD PTR [edi+edx*8+0x71]
  421e4f:	dec    ecx
  421e50:	fs push edx
  421e52:	je     0x421e8c
  421e54:	and    BYTE PTR gs:[ebp-0x46fa837c],0x8c
  421e5c:	xchg   BYTE PTR [ecx],ah
  421e5e:	sub    al,0x37
  421e60:	dec    ebp
  421e61:	sub    al,0x61
  421e63:	dec    eax
  421e64:	leave  
  421e65:	sub    edx,ebp
  421e67:	rcl    cl,cl
  421e69:	cmp    dl,BYTE PTR [eax+0x78]
  421e6c:	xor    BYTE PTR [edi*1+0xa2584],ch
  421e73:	sahf   
  421e74:	xlat   BYTE PTR ds:[ebx]
  421e75:	cmp    eax,0x75e7
	...
  421e9e:	add    BYTE PTR [eax],al
  421ea0:	push   esp
  421ea1:	sub    edi,esi
  421ea3:	(bad)  
  421ea4:	repnz int3 
  421ea6:	shl    ecx,0x48
  421ea9:	mov    al,cl
  421eab:	push   ss
  421eac:	dec    ecx
  421ead:	jnp    0x421eca
  421eaf:	in     eax,0x48
  421eb1:	or     DWORD PTR [ebp+0x18b64190],ecx
  421eb7:	jb     0x421e83
  421eb9:	sti    
  421eba:	add    ebp,ecx
  421ebc:	dec    eax
  421ebd:	add    BYTE PTR [ebp-0x1d4232f],0x29
  421ec4:	(bad)  
  421ec5:	pop    ebp
  421ec6:	sbb    esp,ebp
  421ec8:	dec    eax
  421ec9:	or     DWORD PTR [ecx+0x55f6f],ecx
  421ecf:	jmp    0xed59a4a5
  421ed4:	dec    eax
  421ed5:	or     DWORD PTR [edx-0x2a8b527],ecx
  421edb:	stos   DWORD PTR es:[edi],eax
  421edc:	xlat   BYTE PTR ds:[ebx]
  421edd:	sti    
  421ede:	add    BYTE PTR [edi+0x43],bl
  421ee1:	add    eax,0x10dbe900
  421ee6:	mov    esp,DWORD PTR [edi+0x37]
  421ee9:	add    eax,0x85d7e900
  421eee:	pop    ss
  421eef:	in     eax,0x48
  421ef1:	or     DWORD PTR [eax+0x70],eax
  421ef4:	in     eax,dx
  421ef5:	(bad)  
  421ef7:	jmp    0xd9c7a144
  421efc:	fs sub edi,esi
  421eff:	(bad)  
  421f00:	fst    QWORD PTR [ebx]
  421f02:	add    al,0xe9
	...
  421f2c:	dec    eax
  421f2d:	jg     0x421f3e
  421f2f:	jmp    0x421f2b
  421f31:	sub    eax,0x85f61c1
  421f36:	mov    gs,ebp
  421f38:	cmp    al,0x2b
  421f3a:	inc    BYTE PTR [eax]
  421f3c:	test   DWORD PTR ds:0x2b12868b,0xababfffe
  421f46:	push   ss
  421f47:	add    al,0x32
  421f49:	pop    es
  421f4a:	inc    eax
  421f4b:	mov    DWORD PTR [ecx+edx*1+0x4],edi
  421f4f:	add    BYTE PTR [edx],ah
  421f51:	jle    0x421ed7
  421f53:	adc    dh,dh
  421f55:	push   es
  421f56:	add    BYTE PTR [ebx+0x40d64],cl
  421f5c:	loop   0x421ede
  421f5e:	push   cs
  421f5f:	add    dl,BYTE PTR [eax-0xd]
  421f62:	ror    BYTE PTR [eax+0x1c8e0602],0xe6
  421f69:	push   es
  421f6a:	add    BYTE PTR [ebp+0x4b],dh
  421f6d:	jle    0x421ef3
  421f6f:	adc    dh,ah
  421f71:	push   es
  421f72:	add    BYTE PTR [ecx+0x40e34],cl
  421f78:	mov    dl,0x46
  421f7a:	xchg   DWORD PTR [esi-0x1d552],ebp
  421f80:	cmp    ebp,DWORD PTR [esi+ecx*1-0x74f94dfc]
  421f87:	xchg   BYTE PTR [edx+0x2a],bh
  421f8a:	(bad)  
  421f8b:	call   edx
  421f8d:	dec    DWORD PTR es:[ebp+0x0]
	...
  421fb8:	mov    gs,WORD PTR [edx]
  421fba:	(bad)  
  421fbb:	jmp    DWORD PTR [edi+0xc]
  421fbe:	mov    eax,DWORD PTR [esi-0x1d57e]
  421fc4:	sti    
  421fc5:	stos   DWORD PTR es:[edi],eax
  421fc6:	push   ss
  421fc7:	add    al,0x62
  421fc9:	push   es
  421fca:	inc    eax
  421fcb:	mov    DWORD PTR [edx+edx*1],ecx
  421fce:	add    al,0x0
  421fd0:	jb     0x42204f
  421fd2:	test   BYTE PTR [eax],dl
  421fd4:	pushw  es
  421fd6:	add    BYTE PTR [ebx+0x40de4],cl
  421fdc:	dec    ebx
  421fdd:	and    BYTE PTR [edx+0x1f],dl
  421fe0:	dec    edx
  421fe1:	retf   0x416
  421fe4:	dec    ebx
  421fe5:	and    BYTE PTR [edi+0x12a1c018],ch
  421feb:	add    al,0x4b
  421fed:	and    BYTE PTR [ebx+0x2244385],cl
  421ff3:	add    BYTE PTR [ebx+0x471b64b9],cl
  421ff9:	and    BYTE PTR [edx],al
  421ffb:	mov    ebp,ecx
  421ffd:	das    
  421ffe:	(bad)  
  421fff:	(bad)  
  422000:	cld    
  422001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422002:	jl     0x42201b
  422004:	dec    edi
  422005:	and    BYTE PTR [edx],al
  422007:	shr    BYTE PTR [ebx],1
  422009:	and    DWORD PTR [ebx+ebx*1+0x7502204f],eax
  422010:	inc    edx
  422011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422012:	jl     0x422023
  422014:	dec    edi
  422015:	and    BYTE PTR [edx],al
  422017:	mov    ebp,eax
  422019:	pop    es
	...
  422042:	add    BYTE PTR [eax],al
  422044:	dec    ebx
  422045:	loopne 0x421fd1
  422047:	lods   eax,DWORD PTR ds:[esi]
  422048:	pop    edi
  422049:	and    al,0x2
  42204b:	add    dl,al
  42204d:	cdq    
  42204e:	adc    eax,DWORD PTR [ebx+ecx*2]
  422051:	and    BYTE PTR [edi+0x21c43b5],al
  422057:	add    BYTE PTR [ebx+0x1],bh
  42205a:	(bad)  
  42205b:	pop    esp
  42205c:	mov    DWORD PTR [edi],esi
  42205e:	add    cl,BYTE PTR [ebx+0x55fe4407]
  422064:	sbb    al,0xa7
  422066:	mov    bh,0x23
  422068:	pop    ebx
  422069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42206a:	xor    bh,BYTE PTR [ebx+ecx*8]
  42206d:	pop    ds
  42206e:	add    al,BYTE PTR [eax]
  422070:	clc    
  422071:	dec    ebx
  422072:	jg     0x422072
  422074:	dec    edi
  422075:	das    
  422076:	or     edi,DWORD PTR [ebx]
  422078:	lds    eax,FWORD PTR [ebx-0x2]
  42207b:	call   DWORD PTR [eax+ecx*1-0x23]
  42207f:	iret   
  422080:	push   ebp
  422081:	push   eax
  422082:	add    DWORD PTR [ecx+ecx*8+0x29],eax
  422086:	out    dx,al
  422087:	aam    0xc9
  422089:	dec    ecx
  42208a:	jecxz  0x422061
  42208c:	or     dl,BYTE PTR [edx]
  42208e:	jmp    0xe52fe78b
  422093:	add    ecx,DWORD PTR [ebx-0x63]
  422096:	repz neg BYTE PTR [ecx+ecx*1+0xe9803e9]
  42209e:	push   0x25
  4220a0:	dec    edx
  4220a1:	xor    al,0xf8
  4220a3:	test   BYTE PTR [esi+ecx*1],0xe9
  4220a7:	add    eax,DWORD PTR [eax]
	...
  4220cd:	add    BYTE PTR [eax],al
  4220cf:	add    BYTE PTR [ecx+0xa],bh
  4220d2:	sahf   
  4220d3:	div    ah
  4220d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220d6:	call   0xae4c99de
  4220db:	inc    edx
  4220dc:	in     al,dx
  4220dd:	adc    DWORD PTR [edx-0x66f36380],ebx
  4220e3:	sub    ebp,DWORD PTR [esi]
  4220e5:	and    esp,ebp
  4220e7:	xor    al,0x75
  4220e9:	xchg   esp,eax
  4220ea:	scas   al,BYTE PTR es:[edi]
  4220eb:	mov    BYTE PTR [ecx+esi*1+0x28bd39f4],bl
  4220f2:	pop    ebx
  4220f3:	mov    edi,0xd522135c
  4220f8:	push   cs
  4220f9:	dec    ebx
  4220fa:	lock add edi,esp
  4220fd:	xor    ah,ah
  4220ff:	cmp    DWORD PTR [ebp-0x2b7ef2d8],ebx
  422105:	or     eax,0x9444247
  42210a:	cmp    cl,BYTE PTR [ecx-0x311f12e0]
  422110:	push   ss
  422111:	xchg   esp,eax
  422112:	xchg   edi,eax
  422113:	xor    BYTE PTR [esi+0x4b03ecf1],0x9
  42211a:	push   ss
  42211b:	add    eax,0xe80004cf
  422120:	dec    eax
  422121:	or     DWORD PTR [ecx-0x1d7378e],eax
  422127:	jmp    0xddc4eac7
  42212c:	and    al,0x0
  42212e:	add    al,0xda
  422130:	inc    edx
  422131:	xor    BYTE PTR [esi],dh
  422133:	push   edx
	...
  42215c:	jg     0x422185
  42215e:	mov    dh,BYTE PTR [edi]
  422160:	pusha  
  422161:	clc    
  422162:	cli    
  422163:	ds pop edi
  422165:	xchg   ebx,eax
  422166:	int    0x41
  422168:	bound  esp,QWORD PTR [edx]
  42216a:	(bad)  
  42216b:	cs ret 0x23cb
  42216f:	add    edx,eax
  422171:	jge    0x422182
  422173:	in     eax,0x48
  422175:	or     DWORD PTR [edx+0x2091c22],ecx
  42217b:	and    BYTE PTR [edx+0x4a],cl
  42217e:	pop    esi
  42217f:	jno    0x4221cb
  422181:	sub    BYTE PTR [ebp-0x1d81b27],al
  422187:	pusha  
  422188:	mov    dh,0xeb
  42218a:	add    ebp,ecx
  42218c:	dec    eax
  42218d:	(bad)  
  42218e:	pop    esp
  42218f:	inc    edx
  422190:	test   DWORD PTR [eax],edx
  422192:	add    BYTE PTR [edx+0x8],ch
  422195:	daa    
  422196:	add    BYTE PTR [edi-0x16fff2a5],dl
  42219c:	retf   
  42219d:	mov    dh,0x8
  42219f:	cmp    al,0x3e
  4221a1:	xchg   esp,eax
  4221a2:	test   ecx,ebx
  4221a4:	dec    esp
  4221a5:	or     DWORD PTR [eax],eax
  4221a7:	pusha  
  4221a8:	sar    edi,1
  4221aa:	add    ebp,ecx
  4221ac:	dec    eax
  4221ad:	leave  
  4221ae:	mov    BYTE PTR [edi+0x3b],dl
  4221b1:	or     eax,0x8e07e900
  4221b6:	paddsw mm1,QWORD PTR [eax+0x9]
  4221ba:	mov    esp,DWORD PTR [edi+0x47]
  4221bd:	or     eax,0x0
	...
  4221e6:	add    BYTE PTR [eax],al
  4221e8:	bound  esp,QWORD PTR [ebp-0x2564fdfa]
  4221ee:	mov    edi,0xbe0c6a88
  4221f3:	sbb    al,0x6e
  4221f5:	or     eax,DWORD PTR [eax]
  4221f7:	jne    0x422244
  4221f9:	test   al,0x84
  4221fb:	adc    BYTE PTR [esi],ch
  4221fd:	or     eax,DWORD PTR [eax]
  4221ff:	mov    DWORD PTR [ebp+edx*1+0x4b220004],ebp
  422206:	xchg   DWORD PTR [esi+0xf26],ebp
  42220c:	fwait
  42220d:	xchg   ebx,eax
  42220e:	push   cs
  42220f:	add    al,0x32
  422211:	or     ecx,DWORD PTR [ebx+0xefa86]
  422217:	add    BYTE PTR [edx+0x2d],dl
  42221a:	mov    ebx,edx
  42221c:	xor    eax,DWORD PTR [edi]
  42221e:	pop    es
  42221f:	xor    DWORD PTR [eax],0xf
  422222:	push   edx
  422223:	mov    edx,DWORD PTR [ebp+eax*1-0x38]
  422227:	cli    
  422228:	inc    ebp
  422229:	fimul  DWORD PTR [ecx+0xf0286]
  42222f:	add    BYTE PTR [edx+0x15],ch
  422232:	mov    eax,0xae201
  422237:	add    DWORD PTR [edx+edi*8+0x3],ebx
  42223b:	add    BYTE PTR [edx-0x51db635b],dh
  422241:	or     al,BYTE PTR [eax]
  422243:	sbb    DWORD PTR [ecx-0x5d000176],0x83165f
	...
  422271:	add    BYTE PTR [eax],al
  422273:	add    BYTE PTR [esi],dl
  422275:	xor    DWORD PTR [esi],edx
  422277:	add    ch,BYTE PTR [ecx]
  422279:	data16 and bl,BYTE PTR [eax]
  42227c:	xor    esp,DWORD PTR [esi-0xbf21734]
  422282:	std    
  422283:	inc    DWORD PTR [ebp+0x3b]
  422286:	pop    ebx
  422287:	pop    ebx
  422288:	dec    ebx
  422289:	jb     0x422285
  42228b:	dec    ebx
  42228d:	jnp    0x422291
  42228f:	add    eax,0x3b4304b
  422294:	xor    ch,ah
  422296:	out    0x17,eax
  422298:	retf   0x29b
  42229b:	jge    0x4222e8
  42229d:	xor    BYTE PTR [ebx+eax*1+0x17e67422],dh
  4222a4:	shl    BYTE PTR [ebx-0x1a],1
  4222a7:	pop    ss
  4222a8:	call   0x31ba:0xa7e740ab
  4222af:	dec    BYTE PTR [esi+ebp*2+0x18095acf]
  4222b6:	add    al,bh
  4222b8:	lds    eax,FWORD PTR [edi]
  4222ba:	or     BYTE PTR [eax],al
  4222bc:	dec    ebx
  4222bd:	xor    DWORD PTR [edx],eax
  4222bf:	add    BYTE PTR [ebx-0x4f],cl
  4222c2:	sub    eax,0x2304b7f
  4222c7:	jae    0x42225b
  4222c9:	mov    bl,0xae
  4222cb:	and    edx,DWORD PTR [ebx+0x2c]
  4222ce:	mov    ch,0x41
  4222d0:	xor    BYTE PTR [esi+0x304b03e6],ch
  4222d6:	mov    dh,0x39
	...
  422300:	repz sub DWORD PTR [esi+edi*8],ebp
  422304:	aam    0xaa
  422306:	inc    eax
  422307:	out    0x48,eax
  422309:	sub    dh,BYTE PTR [eax]
  42230b:	(bad)  
  42230c:	shl    BYTE PTR [ebp+0x1b],1
  42230f:	int3   
  422310:	ret    0x303e
  422313:	mov    DWORD PTR [edi],ecx
  422315:	or     al,0xc
  422317:	mov    edi,DWORD PTR [ebp+0x4b00063f]
  42231d:	call   0x154:0x324a2354
  422324:	mov    DWORD PTR [esi],edx
  422326:	jl     0x422328
  422328:	mov    WORD PTR [eax],cs
  42232a:	outs   dx,DWORD PTR ds:[esi]
  42232b:	adc    al,0x4f
  42232d:	or     ecx,ebp
  42232f:	jp     0x42230f
  422331:	in     al,dx
  422332:	in     al,dx
  422333:	add    ecx,DWORD PTR [ebx-0x39]
  422336:	sub    ecx,ebp
  422338:	mov    dl,BYTE PTR [eax]
  42233a:	jmp    0xe767b8c3
  42233f:	jno    0x422381
  422341:	or     eax,0xb5c603e9
  422346:	fbstp  TBYTE PTR [esi+0x146e9233]
  42234c:	dec    edi
  42234d:	or     ecx,ebp
  42234f:	jp     0x422317
  422351:	add    ebp,ebp
  422353:	add    ecx,DWORD PTR [ebx-0x37]
  422356:	pop    edi
  422357:	bound  edx,QWORD PTR [eax+0xd]
  42235a:	jmp    0xd8cdf562
  42235f:	pop    es
  422360:	dec    ebx
  422361:	or     DWORD PTR [edx-0x76],esp
	...
  42238c:	cmp    al,0xd
  42238e:	jmp    0xeb3be496
  422393:	push   ebp
  422394:	push   es
  422395:	dec    eax
  422396:	jo     0x4223ac
  422398:	dec    edx
  422399:	arpl   sp,si
  42239b:	pop    es
  42239c:	dec    ebx
  42239d:	or     DWORD PTR [edx+ecx*1+0x7d88bc0],edx
  4223a4:	dec    ebx
  4223a5:	or     DWORD PTR [eax-0x76],esi
  4223a8:	xor    al,0xd
  4223aa:	jmp    0x3ed4aeb2
  4223af:	adc    BYTE PTR [edi+0x9],al
  4223b2:	jmp    0xe53bf231
  4223b7:	add    ecx,DWORD PTR [ebx-0x70]
  4223ba:	outs   dx,BYTE PTR ds:[esi]
  4223bb:	or     ecx,DWORD PTR [edi+0x9]
  4223be:	jmp    0x67227016
  4223c3:	out    0x48,eax
  4223c5:	or     ecx,ebp
  4223c7:	mov    bh,0x1a
  4223c9:	nop
  4223ca:	jmp    FWORD PTR [ecx+0x6a072c09]
  4223d0:	or     BYTE PTR [edi],al
  4223d2:	push   eax
  4223d3:	xchg   ecx,eax
  4223d4:	loop   0x4223f7
  4223d6:	(bad)  
  4223d7:	sahf   
  4223d8:	call   DWORD PTR [ebp+0x948ed0f]
  4223de:	mov    al,dh
  4223e0:	loopne 0x4223ea
  4223e2:	add    cl,ch
  4223e4:	dec    eax
  4223e5:	or     al,BYTE PTR [esi+0x944d9]
  4223eb:	pusha  
  4223ec:	mov    edx,0xe903e8
	...
  422415:	add    BYTE PTR [eax],al
  422417:	add    BYTE PTR [eax-0x76],cl
  42241a:	cli    
  42241b:	imul   ecx,DWORD PTR [eax+0x9],0x8850da00
  422422:	imul   ecx,DWORD PTR ds:0xb58b0747,0x24
  422429:	cld    
  42242a:	push   ecx
  42242b:	jb     0x4223b7
  42242d:	sub    al,0x63
  42242f:	inc    eax
  422430:	pop    ebx
  422431:	and    ebx,DWORD PTR [esi-0x69]
  422434:	add    eax,0x48e1c1bf
  422439:	mov    bh,dl
  42243b:	jmp    0x9b422d8d
  422440:	inc    esp
  422441:	repnz inc ebx
  422443:	int    0x40
  422445:	mov    bh,dl
  422447:	jmp    0x7c4047e9
  42244c:	shl    eax,0x43
  42244f:	lds    edx,FWORD PTR [eax-0x70]
  422452:	push   ebx
  422453:	int    0x40
  422455:	mov    bh,0x8a
  422457:	pop    ds
  422458:	xor    cl,ah
  42245a:	clc    
  42245b:	out    0x74,al
  42245d:	ret    
  42245e:	pop    ebp
  42245f:	cmp    al,0x90
  422461:	dec    ecx
  422462:	pop    es
  422463:	jmp    0xe55d87b7
  422468:	dec    eax
  422469:	or     DWORD PTR [ebp+0x0],esi
  42246c:	stos   DWORD PTR es:[edi],eax
  42246d:	sahf   
  42246e:	test   BYTE PTR [eax],dl
  422470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422471:	pop    es
  422472:	add    BYTE PTR [ecx+0x41524],cl
  422478:	mov    ds:0xae8747,al
	...
  4224a1:	add    BYTE PTR [eax],al
  4224a3:	add    BYTE PTR [esi+0x11],cl
  4224a6:	add    BYTE PTR [eax],al
  4224a8:	sti    
  4224a9:	mov    cl,BYTE PTR [esi]
  4224ab:	add    al,0x62
  4224ad:	pop    es
  4224ae:	mov    eax,DWORD PTR [esi+0xb7a]
  4224b4:	ret    0xff2c
  4224b7:	mov    ebp,0xb7e
  4224bc:	push   edi
  4224bd:	adc    al,0x8b
  4224bf:	xchg   BYTE PTR [edx+0xb],dh
  4224c2:	add    BYTE PTR [eax],al
  4224c4:	mov    ebx,0x3204168b
  4224c9:	pop    es
  4224ca:	inc    eax
  4224cb:	mov    esp,ecx
  4224cd:	stc    
  4224ce:	add    eax,DWORD PTR [eax]
  4224d0:	and    ah,BYTE PTR [esi+0x7361084]
  4224d6:	add    BYTE PTR [ebx+0x415a4],cl
  4224dc:	and    dh,BYTE PTR [edi+0x2ab68b1e]
  4224e2:	push   ss
  4224e3:	push   edx
  4224e4:	jns    0x4224c9
  4224e6:	out    0xd4,al
  4224e8:	sub    dh,dl
  4224ea:	std    
  4224eb:	pop    edi
  4224ec:	mov    esp,0xeac25939
  4224f1:	push   es
  4224f2:	mov    eax,DWORD PTR [esi+edx*1+0xb]
  4224f6:	lea    edx,[eax-0x810e]
  4224fc:	cdq    
  4224fd:	jge    0x422501
  4224ff:	add    al,0xe2
  422501:	push   es
  422502:	jbe    0x42251d
  422504:	cmp    DWORD PTR [ebp+0x40a],esp
	...
  42252e:	add    BYTE PTR [eax],al
  422530:	mov    dl,0x6
  422532:	cmp    eax,ecx
  422534:	dec    ebx
  422535:	ret    0x2b08
  422538:	mov    ch,BYTE PTR [esi+0x6]
  42253b:	add    BYTE PTR [eax+0x71],dh
  42253e:	pop    es
  42253f:	add    BYTE PTR [ebx],dh
  422541:	xor    DWORD PTR [edx],eax
  422543:	ret    0x304f
  422546:	icebp  
  422547:	mov    edi,0x83022c89
  42254c:	ja     0x42256e
  42254e:	rcl    DWORD PTR [eax+edx*8+0x14],1
  422552:	call   0x49814276
  422557:	mov    bh,BYTE PTR [edx-0x25]
  42255a:	jl     0x4225b7
  42255c:	das    
  42255d:	inc    eax
  42255e:	jnp    0x4225bb
  422560:	daa    
  422561:	sub    bl,ch
  422563:	lods   eax,DWORD PTR ds:[esi]
  422564:	inc    ebx
  422565:	xor    al,0x2
  422567:	add    BYTE PTR [edi+ebp*4],bh
  42256a:	popa   
  42256b:	inc    DWORD PTR [eax+esi*1+0x19]
  42256f:	or     cl,dh
  422571:	mov    esp,esi
  422573:	push   DWORD PTR [eax+esi*1]
  422576:	add    cl,BYTE PTR [ebp-0x74fbf359]
  42257c:	int    0x33
  42257e:	push   es
  42257f:	add    BYTE PTR [ebx-0x4b],cl
  422582:	jp     0x422583
  422584:	lods   al,BYTE PTR ds:[esi]
  422585:	xor    DWORD PTR [edx],eax
  422587:	cmp    eax,DWORD PTR [ebx]
  422589:	pop    edx
  42258a:	adc    eax,0x61bd58b
  42258f:	add    BYTE PTR [ebx+0x27],cl
  422592:	inc    ebx
  422593:	jne    0x422595
	...
  4225b9:	add    BYTE PTR [eax],al
  4225bb:	add    BYTE PTR [edi+0x47],cl
  4225be:	inc    ebx
  4225bf:	jmp    0x784b:0x4434740
  4225c6:	add    eax,DWORD PTR [eax]
  4225c8:	lock sub eax,0xa9c0bff1
  4225ce:	cli    
  4225cf:	add    ecx,DWORD PTR [ebx+0x30]
  4225d2:	std    
  4225d3:	mov    ch,0x5a
  4225d5:	or     esi,esi
  4225d7:	jne    0x4225ec
  4225d9:	or     BYTE PTR [edx-0x28],dh
  4225dc:	fimul  WORD PTR [edx+eiz*2]
  4225df:	add    cl,al
  4225e1:	lea    ecx,[esi]
  4225e3:	jnp    0x422635
  4225e5:	mov    dh,BYTE PTR [ecx-0x7a]
  4225e8:	inc    esp
  4225e9:	or     eax,0x5b4403e9
  4225ee:	fdivr  st,st(4)
  4225f0:	(bad)  
  4225f1:	enter  0x78e7,0x10
  4225f5:	jnp    0x4225e3
  4225f7:	js     0x4225cf
  4225f9:	or     al,0xe5
  4225fb:	add    ecx,DWORD PTR [ebx-0x70]
  4225fe:	cld    
  4225ff:	xor    BYTE PTR [ebx+0x4b03e907],0x8
  422606:	ja     0x422610
  422608:	inc    edi
  422609:	or     ecx,ebp
  42260b:	add    al,ch
  42260d:	adc    ch,ch
  42260f:	add    ecx,DWORD PTR [ebx-0x72]
  422612:	data16 or BYTE PTR [edi+0x9],cl
  422616:	jmp    0x6f372a93
  42261b:	add    BYTE PTR [edi+0x9],cl
  42261e:	jmp    0x4226a5
	...
  422647:	add    BYTE PTR [ebx],dh
  422649:	or     al,cl
  42264b:	add    cl,BYTE PTR [ebx-0x69]
  42264e:	in     eax,dx
  42264f:	mov    ebx,0x7ec87d3
  422654:	dec    ebx
  422655:	or     eax,esi
  422657:	pop    ebp
  422658:	inc    esp
  422659:	add    eax,0x8b5403e9
  42265e:	xchg   edx,eax
  42265f:	sub    al,0xfd
  422661:	and    BYTE PTR [ecx-0x38],dh
  422664:	sub    cl,bl
  422666:	push   edx
  422667:	add    al,0x64
  422669:	or     ch,cl
  42266b:	call   0x7b30be7a
  422670:	js     0x422657
  422672:	mov    eax,0xff8c4318
  422677:	lock dec ecx
  422679:	adc    BYTE PTR [esi+0x94823],al
  42267f:	div    BYTE PTR [esi]
  422681:	(bad)  
  422684:	ds int 0x0
  422687:	bound  eax,QWORD PTR [esi+eax*4-0x774b9dfd]
  42268e:	cmp    al,dl
  422690:	lahf   
  422691:	mov    WORD PTR [edx-0x74f6b718],?
  422697:	addr16 test al,0xc
  42269a:	add    cl,ch
  42269c:	add    eax,0x84ae0f0c
  4226a1:	in     al,dx
  4226a2:	sbb    ebp,ecx
  4226a4:	jo     0x4226c6
  4226a6:	(bad)  
  4226a7:	rol    BYTE PTR ds:0x62399a,cl
	...
  4226d1:	add    BYTE PTR [eax],al
  4226d3:	add    BYTE PTR [edi],dh
  4226d5:	jecxz  0x4226d1
  4226d7:	std    
  4226d8:	push   esp
  4226d9:	lea    eax,[esi+0x9b0e9]
  4226df:	mov    dl,0xc6
  4226e1:	or     al,0x4
  4226e3:	jmp    0x7259be30
  4226e8:	(bad)  
  4226e9:	adc    eax,DWORD PTR [ecx+ebp*8]
  4226ec:	dec    eax
  4226ed:	in     al,0xf7
  4226ef:	fild   WORD PTR [esp+esi*8-0x9]
  4226f3:	inc    edx
  4226f4:	and    al,0xf3
  4226f6:	imul   DWORD PTR [eax-0x79]
  4226f9:	and    BYTE PTR [esi-0x18],ah
  4226fc:	dec    eax
  4226fd:	xor    al,0x1
  4226ff:	cli    
  422700:	pop    edi
  422701:	xchg   ebx,eax
  422702:	add    eax,0x8c57f462
  422707:	in     eax,dx
  422708:	jmp    edx
  42270a:	les    ebx,FWORD PTR [edx-0x32ac1ed0]
  422710:	or     al,0x96
  422712:	add    esp,DWORD PTR [eax-0x4]
  422715:	jmp    0x422742
  422717:	add    BYTE PTR [ecx],cl
  422719:	icebp  
  42271a:	or     eax,0xab084
  42271f:	add    BYTE PTR [edi-0x6f],ah
  422722:	(bad)  
  422723:	push   DWORD PTR [edx+0x59cd8b0b]
  422729:	fld    QWORD PTR [edi+0x3af94e4c]
  42272f:	dec    esp
  422730:	ds inc ecx
  422732:	or     eax,0x63887
	...
  42275f:	add    BYTE PTR [ecx],bl
  422761:	popa   
  422762:	and    dl,BYTE PTR [eax]
  422764:	sbb    cl,bh
  422766:	add    BYTE PTR [edx],bh
  422768:	cs and bh,dh
  42276b:	mov    ah,BYTE PTR [esi+0x29]
  42276e:	adc    bh,BYTE PTR [ebx+0xb70]
  422774:	pop    esi
  422775:	and    DWORD PTR [ecx],edi
  422777:	mov    ?,WORD PTR [esi+0x1f]
  42277a:	(bad)  
  42277b:	inc    DWORD PTR [ebp+0x7200c888]
  422781:	or     ecx,DWORD PTR [ebx+0x391b8e54]
  422787:	ficom  DWORD PTR [ecx+0x24]
  42278a:	mov    ecx,DWORD PTR [ebp+0x30]
  42278d:	mov    al,ds:0x3f162be6
  422792:	es mov ch,dh
  422795:	and    esi,edi
  422797:	cmp    DWORD PTR [ebx],esp
  422799:	pop    edx
  42279a:	add    al,0x43
  42279c:	repz das 
  42279e:	fdiv   DWORD PTR [edx+0x60]
  4227a1:	sahf   
  4227a2:	dec    edx
  4227a3:	and    al,0xfe
  4227a5:	lahf   
  4227a6:	push   0x24
  4227a8:	dec    edx
  4227a9:	fmul   DWORD PTR cs:[edi]
  4227ac:	outs   dx,BYTE PTR ds:[esi]
  4227ad:	in     al,0xfe
  4227af:	push   edx
  4227b1:	das    
  4227b2:	pop    edx
  4227b3:	and    al,0xf2
  4227b5:	pop    eax
  4227b6:	inc    ebp
  4227b7:	push   ebx
  4227b8:	dec    ebx
  4227b9:	popa   
  4227ba:	jge    0x422789
  4227bc:	repz ret 0xfe2d
  4227c0:	fcomp  QWORD PTR [ebx+0x23b7]
	...
  4227ea:	add    BYTE PTR [eax],al
  4227ec:	cmp    ebx,DWORD PTR [ebx-0x7eccdc31]
  4227f2:	aam    0x8a
  4227f4:	xchg   ebp,eax
  4227f5:	stos   DWORD PTR es:[edi],eax
  4227f6:	sbb    esp,edi
  4227f8:	fsubr  QWORD PTR [edx]
  4227fa:	sub    esi,edi
  4227fc:	pusha  
  4227fd:	cmp    BYTE PTR [ebp+0x4b],bh
  422800:	addr16 sbb al,0x5
  422803:	in     eax,dx
  422804:	jecxz  0x422805
  422806:	pop    ss
  422807:	ret    
  422808:	or     eax,0x278a175f
  42280d:	add    al,0xdc
  42280f:	rcl    BYTE PTR [ecx-0x753e82ce],0x48
  422816:	or     DWORD PTR [ebx],eax
  422818:	mov    DWORD PTR [ebx],esi
  42281a:	mov    esi,0x4a2b5b23
  42281f:	jne    0x422866
  422821:	test   eax,0x8b4323b6
  422826:	mov    esp,0xfe4ccd3a
  42282b:	call   DWORD PTR [ebp+edx*1-0x40]
  42282f:	push   edx
  422830:	cli    
  422831:	stos   BYTE PTR es:[edi],al
  422832:	cmp    bh,ah
  422834:	test   al,0x9a
  422836:	sub    esi,edi
  422838:	rcr    BYTE PTR [ebx-0x22],1
  42283b:	xadd   BYTE PTR [edi+0x1867437d],dh
  422842:	aam    0x4f
  422844:	sar    ch,1
  422846:	sbb    cl,BYTE PTR [edi+0x21]
  422849:	(bad)  
  42284a:	sub    DWORD PTR [edx-0x75c704fd],ecx
	...
  422878:	lahf   
  422879:	or     al,0xdc
  42287b:	mov    bh,0xb0
  42287d:	mov    DWORD PTR [ecx+ebp*1-0xc],ebx
  422881:	or     BYTE PTR [eax],dl
  422883:	jle    0x422887
  422885:	dec    eax
  422886:	(bad)  
  422888:	dec    eax
  422889:	push   ebx
  42288a:	jmp    0xc50f49cd
  42288f:	adc    ebx,DWORD PTR [ecx+0xd]
  422892:	jb     0x422863
  422894:	sub    ch,dh
  422896:	outs   dx,DWORD PTR ds:[esi]
  422897:	iret   
  422898:	sub    BYTE PTR [ecx],al
  42289a:	pusha  
  42289b:	(bad)  
  42289c:	push   0xbc825bf9
  4228a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228a2:	out    0x3,eax
  4228a4:	jo     0x42282d
  4228a6:	in     al,0xff
  4228a8:	lods   al,BYTE PTR ds:[esi]
  4228a9:	sbb    eax,0x86d00c5e
  4228ae:	fdiv   st(7),st
  4228b0:	pushf  
  4228b1:	sbb    eax,0x51e2c01
  4228b6:	adc    ch,BYTE PTR [ecx+eiz*4]
  4228b9:	or     al,0x2
  4228bb:	sub    al,0xcb
  4228bd:	inc    ebp
  4228be:	call   0x924b745e
  4228c3:	push   es
  4228c4:	cmp    BYTE PTR [esi],bl
  4228c6:	jno    0x4228c2
  4228c8:	rcr    esp,0x4f
  4228cb:	jge    0x42289b
  4228cd:	call   0xa8d2cb6
  4228d2:	scas   al,BYTE PTR es:[edi]
  4228d3:	test   eax,esp
  4228d5:	in     al,0xdc
  4228d7:	add    dl,bh
  4228d9:	cli    
  4228da:	imul   ebp,DWORD PTR [ecx],0x0
	...
  422901:	add    BYTE PTR [eax],al
  422903:	add    BYTE PTR [ebp-0x7a],dl
  422906:	sub    bh,BYTE PTR cs:0xc3fc511d
  42290d:	int    0x4
  42290f:	or     al,0xc2
  422911:	mov    ebp,0xc5d0140c
  422916:	add    al,0xe0
  422918:	shl    DWORD PTR [ebp-0x323febf4],1
  42291e:	add    al,0xc
  422920:	ins    BYTE PTR es:[edi],dx
  422921:	mov    ebx,0xcc8193ff
  422926:	add    esp,DWORD PTR [eax-0x1]
  422929:	mov    edi,0x475f2d82
  42292e:	psubsw mm0,mm7
  422931:	xor    BYTE PTR [edi],dh
  422933:	push   0xffffffb3
  422935:	call   0x903d127d
  42293a:	lock jl 0x42290e
  42293d:	xlat   BYTE PTR ds:[ebx]
  42293e:	mov    edi,0x3748c79f
  422943:	sub    edx,DWORD PTR [edi+0x9]
  422946:	mov    esp,DWORD PTR [ebp-0x567b2364]
  42294c:	in     eax,0x12
  42294e:	xor    DWORD PTR [ecx-0x527d419d],0xffffffb0
  422955:	dec    edx
  422956:	pop    ss
  422957:	jmp    0x2d65f97b
  42295c:	adc    al,0x51
  42295e:	jae    0x42292f
  422960:	(bad)  
  422962:	and    esp,DWORD PTR ds:0xc7733a04
	...
  422990:	add    DWORD PTR [esi+0x948ed13],eax
  422996:	dec    eax
  422997:	jo     0x422963
  422999:	cld    
  42299a:	add    ebp,ecx
  42299c:	dec    eax
  42299d:	xchg   edx,eax
  42299e:	(bad)  
  42299f:	stc    
  4229a0:	pop    esp
  4229a1:	sbb    al,0xfe
  4229a3:	inc    ecx
  4229a4:	xor    bl,BYTE PTR [edi]
  4229a6:	in     eax,dx
  4229a7:	push   edx
  4229a8:	push   edi
  4229a9:	push   ecx
  4229aa:	push   esi
  4229ab:	out    0xba,al
  4229ad:	popa   
  4229ae:	(bad)  
  4229af:	fmul   DWORD PTR [ecx]
  4229b1:	sbb    al,0xcf
  4229b3:	sub    DWORD PTR [edi],edi
  4229b5:	inc    ebx
  4229b6:	push   cs
  4229b7:	xchg   edi,eax
  4229b8:	mov    eax,ds:0x48a81009
  4229bd:	cmp    bh,BYTE PTR [edi-0x49f475e6]
  4229c3:	add    bl,cl
  4229c5:	add    eax,0xb7224110
  4229ca:	mov    esi,0xb4213533
  4229cf:	mov    ecx,0x40f7f1
  4229d4:	xor    ecx,eax
  4229d6:	add    ecx,0x81c514e6
  4229dc:	cmp    ecx,DWORD PTR [eax]
  4229de:	add    DWORD PTR [eax],eax
  4229e0:	repnz push ebp
  4229e2:	mov    DWORD PTR [ebp-0x447cdede],0x530007db
  4229ec:	sub    edi,edx
  4229ee:	mov    WORD PTR [esi-0x5a],cs
  4229f1:	xchg   al,al
  4229f3:	sbb    BYTE PTR [eax],al
	...
  422a19:	add    BYTE PTR [eax],al
  422a1b:	add    dl,al
  422a1d:	or     DWORD PTR [eax],eax
  422a1f:	mov    edi,0x4a2
  422a24:	das    
  422a25:	dec    ebp
  422a26:	call   DWORD PTR [ebx+ebp*1-0xa]
  422a2a:	xor    al,al
  422a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a2d:	pop    es
  422a2e:	add    BYTE PTR [eax],al
  422a30:	mov    ds:0x36c7279e,al
  422a35:	or     al,BYTE PTR [eax]
  422a37:	add    BYTE PTR [edx+0x7],dh
  422a3a:	add    BYTE PTR [ebx+0x3d08a2],al
  422a40:	popw   es
  422a42:	add    BYTE PTR [edx-0x32],dh
  422a45:	test   eax,eax
  422a47:	add    BYTE PTR [esi+0x7],ah
  422a4a:	add    BYTE PTR [ebx-0x4d4f75d],al
  422a50:	push   edi
  422a51:	int    0x89
  422a53:	mov    fs,WORD PTR [esi]
  422a55:	sbb    edi,esi
  422a57:	jmp    FWORD PTR [ecx-0x52377cf5]
  422a5d:	pushf  
  422a5e:	test   BYTE PTR [esi+eiz*1],ah
  422a61:	pop    es
  422a62:	add    BYTE PTR [ecx+0x3fba24b],cl
  422a68:	dec    ebx
  422a69:	xor    BYTE PTR [ebx-0x63],bh
  422a6c:	dec    edi
  422a6d:	sub    al,0x2
  422a6f:	add    dl,al
  422a71:	call   0x397b:0x304b03f7
  422a78:	sar    BYTE PTR [edx+0x304b040f],1
  422a7e:	jns    0x422a15
	...
  422aa8:	pop    ebx
  422aa9:	and    al,0x2
  422aab:	add    dl,dl
  422aad:	mov    dl,0xdb
  422aaf:	add    ecx,DWORD PTR [ebx+0x30]
  422ab2:	js     0x422abc
  422ab4:	ret    0xde6c
  422ab7:	sbb    eax,eax
  422ab9:	ficom  WORD PTR fs:[ebx-0x2d]
  422abd:	add    ebx,DWORD PTR es:[esi+0x22457]
  422ac4:	dec    edx
  422ac5:	adc    BYTE PTR [edx],0x4
  422ac8:	dec    ebx
  422ac9:	xor    BYTE PTR [edx+0x140c2788],bh
  422acf:	mov    DWORD PTR [edi],ebx
  422ad1:	add    al,0xc
  422ad3:	mov    DWORD PTR [ebp-0x730001dc],esi
  422ad9:	cdq    
  422ada:	(bad)  
  422adb:	and    esp,DWORD PTR [ebx]
  422add:	pop    ss
  422ade:	inc    ecx
  422adf:	push   cs
  422ae0:	lds    ebx,FWORD PTR [edi-0x3]
  422ae3:	push   DWORD PTR [ebp+edx*4-0x77]
  422ae7:	jmp    FWORD PTR [eax+esi*1+0x2]
  422aeb:	mov    ecx,DWORD PTR [edi]
  422aed:	dec    esp
  422aee:	mov    BYTE PTR [ebx+ecx*4+0x78ae9f4],0x4c
  422af6:	or     al,BYTE PTR [ecx-0x3e]
  422af9:	in     al,dx
  422afa:	fist   WORD PTR [edi]
  422afc:	iret   
  422afd:	push   0xf3d02caf
  422b02:	fistp  WORD PTR [edi-0x40]
  422b05:	or     BYTE PTR [edi+0x13],dh
  422b08:	inc    edi
  422b09:	or     ecx,ebp
  422b0b:	fiadd  DWORD PTR [eax]
	...
  422b31:	add    BYTE PTR [eax],al
  422b33:	add    BYTE PTR [eax-0x2e2e471b],dl
  422b39:	jb     0x422b2f
  422b3b:	call   DWORD PTR [edx+ebx*1]
  422b3e:	adc    eax,edx
  422b40:	push   0x907a97b9
  422b45:	in     eax,0x94
  422b47:	rcr    DWORD PTR [ebx+0x882181a],1
  422b4d:	stc    
  422b4e:	imul   eax,DWORD PTR [ebx+0x3d],0xffffff85
  422b52:	xchg   ebx,eax
  422b53:	(bad)  
  422b54:	in     al,0x19
  422b56:	rol    edi,1
  422b58:	sub    ch,bh
  422b5a:	xchg   ebx,eax
  422b5b:	adc    eax,eax
  422b5d:	lods   al,BYTE PTR ds:[esi]
  422b5e:	int3   
  422b5f:	mov    edi,0xc3c4b4c1
  422b64:	shr    DWORD PTR [esp+ecx*8-0x3b4b2c29],cl
  422b6b:	(bad)  [ecx+0x68c071f9]
  422b71:	mov    ch,0x71
  422b73:	jbe    0x422bad
  422b75:	add    eax,0x467003e9
  422b7a:	cmp    cl,dl
  422b7c:	sti    
  422b7d:	mov    ebx,DWORD PTR [eax+eiz*8]
  422b80:	pop    eax
  422b81:	mov    bh,0x71
  422b83:	ss ins BYTE PTR es:[edi],dx
  422b85:	test   DWORD PTR [ecx+0x3c8d7d25],esi
  422b8b:	loopne 0x422bad
  422b8d:	xchg   BYTE PTR [ebx+0x468d3c02],ah
  422b93:	jmp    DWORD PTR [ecx+ebx*1+0x61]
  422b97:	jle    0x422b99
	...
  422bbd:	add    BYTE PTR [eax],al
  422bbf:	add    BYTE PTR [eax],ch
  422bc1:	add    eax,0xc48c03e9
  422bc6:	int3   
  422bc7:	cmovnp ecx,DWORD PTR [ecx]
  422bca:	jmp    0xfadd2
  422bcf:	int3   
  422bd0:	and    BYTE PTR [esi+0x96e6a61],bl
  422bd6:	movq   mm3,QWORD PTR [ecx]
  422bd9:	or     al,0x0
  422bdb:	jmp    0x1165f911
  422be0:	push   ss
  422be1:	lea    eax,[edi-0x16]
  422be4:	dec    eax
  422be5:	or     DWORD PTR [ebx+0x5708ecad],ecx
  422beb:	adc    cl,BYTE PTR [esi+0x35624fbb]
  422bf1:	xor    cl,ah
  422bf3:	xor    eax,0xb58a172e
  422bf8:	or     al,0xe1
  422bfa:	push   esi
  422bfb:	mov    eax,0x318a4663
  422c00:	aas    
  422c01:	pop    esp
  422c02:	test   BYTE PTR [esi],0x2e
  422c05:	rol    edx,cl
  422c07:	not    BYTE PTR [ebp-0xb]
  422c0a:	add    ch,cl
  422c0c:	dec    eax
  422c0d:	test   BYTE PTR [ebx-0x33],al
  422c10:	mov    al,0xd5
  422c12:	jmp    ebx
  422c14:	dec    eax
  422c15:	or     DWORD PTR [eax+esi*8-0x35],edi
  422c19:	pop    ss
  422c1a:	add    esi,ebp
  422c1c:	and    al,0x1
  422c1e:	add    ebp,ecx
  422c20:	dec    eax
  422c21:	(bad)  
  422c22:	dec    DWORD PTR [ebx+0x0]
	...
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    BYTE PTR [edi+0x9],cl
  422c4e:	jl     0x422c40
  422c50:	retf   
  422c51:	pop    ss
  422c52:	add    ch,dh
  422c54:	add    al,0x11
  422c56:	add    ecx,ebp
  422c58:	dec    eax
  422c59:	test   BYTE PTR [ebx+0x5],bl
  422c5c:	xchg   DWORD PTR [ebx-0x7c8332bd],eax
  422c62:	xchg   ebp,eax
  422c63:	cmc    
  422c64:	fs sbb dh,bh
  422c67:	ret    0x810b
  422c6a:	inc    ebx
  422c6b:	lds    ebp,FWORD PTR [eax-0x30]
  422c6e:	dec    edi
  422c6f:	add    bh,dl
  422c71:	push   eax
  422c72:	call   DWORD PTR [eax+0x70]
  422c75:	cmp    ecx,DWORD PTR [ebx+0x4e600e44]
  422c7b:	mov    edx,esp
  422c7d:	repz (bad) 
  422c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c81:	in     eax,dx
  422c82:	mov    DWORD PTR [esi+ecx*2+0x35],ecx
  422c86:	aaa    
  422c87:	dec    esp
  422c88:	dec    esi
  422c89:	dec    ebp
  422c8a:	mov    eax,DWORD PTR [ebx+0x23]
  422c8d:	xchg   ebx,eax
  422c8e:	inc    edx
  422c8f:	and    al,0x26
  422c91:	inc    edi
  422c92:	jp     0x422ccd
  422c94:	jns    0x422c51
  422c96:	push   eax
  422c97:	mov    esp,DWORD PTR [esp+esi*8]
  422c9a:	inc    edx
  422c9b:	mul    DWORD PTR ds:0xfe4c89ed
  422ca1:	dec    ebx
  422ca2:	xchg   DWORD PTR [esi+ecx*1+0x38],eax
  422ca6:	mov    DWORD PTR [esi+ecx*1+0x58],eax
  422caa:	dec    esi
  422cab:	push   ecx
  422cac:	imul   ebx,esi,0x2fe6
	...
  422cd6:	add    BYTE PTR [eax],al
  422cd8:	int    0xeb
  422cda:	std    
  422cdb:	mov    esi,esi
  422cdd:	aaa    
  422cde:	and    ch,BYTE PTR [ebx]
  422ce0:	push   0x9
  422ce2:	leave  
  422ce3:	mov    eax,0x38e19dfb
  422ce8:	(bad)  
  422ce9:	in     eax,0xcf
  422ceb:	cli    
  422cec:	sbb    edi,ecx
  422cee:	mov    edi,0xc20e95e8
  422cf3:	jmp    0x422d27
  422cf5:	mov    BYTE PTR [edx+0x24],cl
  422cf8:	ss pop esi
  422cfa:	mov    esi,ecx
  422cfc:	call   0x5287:0xb5fff705
  422d03:	and    al,0x2e
  422d05:	mov    dh,dl
  422d07:	mov    ebx,DWORD PTR [esi]
  422d09:	and    DWORD PTR [esi],edi
  422d0b:	push   edx
  422d0c:	and    cl,BYTE PTR [eax+0x784be8cc]
  422d12:	sbb    esi,edi
  422d14:	push   esp
  422d15:	dec    edx
  422d16:	cmp    cl,BYTE PTR [edx+0x23bf9a88]
  422d1c:	mov    ds:0x48e186a9,eax
  422d21:	and    eax,DWORD PTR [eax+eax*8+0x33]
  422d25:	and    eax,DWORD PTR ds:0xdd646744
  422d2b:	out    0xa6,eax
  422d2d:	sbb    BYTE PTR [ecx+0x43],cl
  422d30:	addr16 adc al,0x3
  422d33:	add    BYTE PTR [ebx+0x20],cl
  422d36:	xchg   esi,edi
  422d38:	xchg   ebp,eax
  422d39:	or     ch,bl
  422d3b:	imul   eax,DWORD PTR [eax],0x0
	...
  422d62:	add    BYTE PTR [eax],al
  422d64:	das    
  422d65:	ins    BYTE PTR es:[edi],dx
  422d66:	sahf   
  422d67:	das    
  422d68:	shr    BYTE PTR [esi+eiz*8+0x27],1
  422d6c:	sahf   
  422d6d:	jno    0x422cfc
  422d6f:	int    0xe3
  422d71:	scas   al,BYTE PTR es:[edi]
  422d72:	sbb    esi,edi
  422d74:	in     al,0x9b
  422d76:	mov    bh,0x23
  422d78:	xchg   DWORD PTR [ebx+0x4c8f8a3b],ebp
  422d7e:	ret    0x7b51
  422d81:	fwait
  422d82:	push   ecx
  422d83:	out    0xf0,eax
  422d85:	push   ds
  422d86:	and    esi,edi
  422d88:	and    bl,0x8e
  422d8b:	pop    ebx
  422d8c:	outs   dx,DWORD PTR ds:[esi]
  422d8d:	js     0x422d2e
  422d8f:	pop    es
  422d90:	test   ah,ah
  422d92:	out    0x13,eax
  422d94:	dec    edx
  422d95:	and    BYTE PTR [edx],al
  422d97:	add    dh,al
  422d99:	aas    
  422d9a:	xchg   edi,eax
  422d9b:	dec    esp
  422d9c:	push   edx
  422d9d:	aam    0xe7
  422d9f:	inc    ebx
  422da0:	push   cs
  422da1:	out    0x8e,eax
  422da3:	lea    ebx,[edi+0x2c]
  422da6:	add    al,BYTE PTR [eax]
  422da8:	icebp  
  422da9:	and    BYTE PTR [ebp+0x2a76c050],dh
  422daf:	sahf   
  422db0:	js     0x422dbb
  422db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422db3:	and    dl,cl
  422db5:	mov    ebp,0x31d1c7c4
  422dba:	popa   
  422dbb:	(bad)  
  422dbc:	sub    cl,cl
  422dbe:	cmp    dh,BYTE PTR [ecx+eax*8+0x3eb09047]
  422dc5:	push   ss
  422dc6:	jge    0x422d56
	...
  422df0:	nop
  422df1:	in     eax,dx
  422df2:	sar    BYTE PTR [eax-0x6f617d65],0x90
  422df9:	icebp  
  422dfa:	out    0x2b,eax
  422dfc:	sbb    BYTE PTR [edi],0x5d
  422dff:	and    ah,BYTE PTR [ecx+0x31]
  422e02:	popa   
  422e03:	mov    edi,0xdceb168
  422e08:	add    al,0xcd
  422e0a:	or     al,0xf8
  422e0c:	add    al,0x16
  422e0e:	call   0x6a441e16
  422e13:	lahf   
  422e14:	sub    ch,bh
  422e16:	call   0xe988f42d
  422e1b:	add    ecx,DWORD PTR [ebx-0x76]
  422e1e:	sbb    eax,DWORD PTR ds:0x441874c
  422e24:	dec    ebx
  422e25:	or     DWORD PTR [edx-0x49],esp
  422e28:	sub    cl,ch
  422e2a:	jno    0x422db5
  422e2c:	pop    eax
  422e2d:	or     eax,0x4ac803e9
  422e32:	div    BYTE PTR [ecx+ecx*8-0x364915b7]
  422e39:	dec    eax
  422e3a:	jmp    0xfbe0:0x4c4d7b3
  422e41:	and    DWORD PTR [esi-0x32f03bd4],0xcccc121
  422e4b:	aam    0x41
  422e4d:	int    0x4
  422e4f:	in     al,dx
  422e50:	sar    DWORD PTR [edi+edi*8+0xc],1
	...
  422e7b:	add    BYTE PTR [ebx-0x48607549],dl
  422e81:	xchg   ecx,eax
  422e82:	and    dl,BYTE PTR [ecx-0x6101e2bc]
  422e88:	into   
  422e89:	cmp    eax,0xed632d8a
  422e8e:	push   esp
  422e8f:	cmp    DWORD PTR [esi+0x5c97e743],edi
  422e95:	adc    edi,esi
  422e97:	rol    BYTE PTR [edi+0x4e8b8271],cl
  422e9d:	or     dl,al
  422e9f:	bound  edi,QWORD PTR [edi+0x49]
  422ea2:	clc    
  422ea3:	jmp    0x422f1c
  422ea5:	loop   0x422e8e
  422ea7:	inc    ebx
  422ea8:	xor    al,0x13
  422eaa:	(bad)  
  422eab:	bound  edx,QWORD PTR [edi+0x7f]
  422eae:	inc    ebx
  422eaf:	add    eax,0x724fbe1f
  422eb4:	cdq    
  422eb5:	sub    al,0xca
  422eb7:	xor    al,0x2a
  422eb9:	adc    ecx,DWORD PTR [edx+0x23fe621]
  422ebf:	and    BYTE PTR [edi-0x268d5edf],cl
  422ec5:	sbb    ebp,eax
  422ec7:	cmp    BYTE PTR ds:0x2028c97f,bh
  422ecd:	repz add ah,BYTE PTR [ebx]
  422ed0:	mov    esi,0x4fbd23c8
  422ed5:	inc    ecx
  422ed6:	cmp    dl,BYTE PTR [eax]
  422ed8:	fmul   QWORD PTR [edi+eax*8]
  422edb:	lods   eax,DWORD PTR ds:[esi]
  422edc:	lods   al,BYTE PTR ds:[esi]
  422edd:	clc    
  422ede:	add    cl,ch
	...
  422f08:	dec    eax
  422f09:	or     DWORD PTR [ebp+0x3aecc2e6],eax
  422f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f10:	mov    esp,0xa33d8ae8
  422f15:	in     al,0x4f
  422f17:	cmp    edi,DWORD PTR [esi-0x3ff18ba]
  422f1d:	cli    
  422f1e:	std    
  422f1f:	(bad)  
  422f20:	stc    
  422f21:	iret   
  422f22:	mov    DWORD PTR [esi+eax*2+0x25],eax
  422f26:	push   ebx
  422f27:	push   eax
  422f28:	jmp    0xc7c215e6
  422f2d:	jmp    0xf9cc6b2f
  422f32:	mov    eax,DWORD PTR [edx]
  422f34:	popa   
  422f35:	or     BYTE PTR [eax],al
  422f37:	cmp    DWORD PTR [esi],0x21
  422f3a:	adc    al,BYTE PTR [eax]
  422f3c:	cmp    eax,0x3202f58b
  422f41:	or     BYTE PTR [ebx-0x7206de03],al
  422f47:	aam    0x22
  422f49:	or     BYTE PTR [eax],al
  422f4b:	mov    ebx,esi
  422f4d:	sub    ebx,DWORD PTR [esi]
  422f4f:	mov    edx,esi
  422f51:	sub    edx,DWORD PTR [esi-0x75]
  422f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f55:	sbb    al,0x2
  422f57:	add    BYTE PTR [edx],ah
  422f59:	lea    edi,[edi-0x3f731c03]
  422f5f:	add    esp,eax
  422f61:	mov    WORD PTR [esi+0x4a82d203],?
  422f67:	and    al,0xde
  422f69:	push   esi
  422f6a:	mov    esi,ecx
	...
  422f94:	cmp    ch,BYTE PTR [edi-0x7ac2000a]
  422f9a:	inc    edx
  422f9b:	and    al,0xf2
  422f9d:	test   BYTE PTR [edx+0x24],dl
  422fa0:	test   BYTE PTR [edx+ebx*2-0x3ecb65dc],0x52
  422fa8:	cmp    DWORD PTR [edx-0x207883b2],edi
  422fae:	and    dh,ch
  422fb0:	popf   
  422fb1:	repz push ebx
  422fb3:	push   ebx
  422fb4:	sbb    ebx,eax
  422fb6:	xchg   DWORD PTR [esi+eax*2+0x19],eax
  422fba:	out    0x17,al
  422fbc:	dec    ebx
  422fbd:	xor    eax,0xf5c0fe1e
  422fc2:	out    0x23,eax
  422fc4:	xor    BYTE PTR [ecx+0x7c],ah
  422fc7:	sub    BYTE PTR [ecx+0x1e],0x1
  422fcb:	ret    0x69c0
  422fce:	inc    esp
  422fcf:	clc    
  422fd0:	dec    ecx
  422fd1:	inc    edi
  422fd2:	out    dx,eax
  422fd3:	out    0x64,eax
  422fd5:	jne    0x422ff5
  422fd7:	(bad)  
  422fd8:	test   dh,0x8a
  422fdb:	int    0xc2
  422fdd:	in     eax,0xe7
  422fdf:	sub    esp,DWORD PTR [ebx+0x6f]
  422fe2:	pop    ss
  422fe3:	inc    BYTE PTR [eax+ebx*4+0x4b]
  422fe7:	mov    al,BYTE PTR [edi+0x32ae64c]
  422fed:	and    BYTE PTR [ebx-0x49],cl
  422ff0:	and    bh,BYTE PTR [edi-0x45e3d276]
  422ff6:	xor    al,0xf9
	...
  423020:	rcl    dh,1
  423022:	inc    esp
  423023:	call   0x8a8a4f5c
  423028:	xchg   DWORD PTR [eax+ebx*8],ecx
  42302b:	add    dl,BYTE PTR [ebx]
  42302d:	or     BYTE PTR ds:0xc7eb537c,ch
  423033:	and    ebx,DWORD PTR [edi+0x21]
  423036:	add    al,BYTE PTR [eax]
  423038:	dec    ebx
  423039:	lods   eax,DWORD PTR ds:[esi]
  42303a:	push   ds
  42303b:	jne    0x423070
  42303d:	daa    
  42303e:	inc    edi
  42303f:	jnp    0x423068
  423041:	xchg   edi,eax
  423042:	mov    bh,0x23
  423044:	sbb    edx,DWORD PTR [eax-0x50]
  423047:	mov    bh,ch
  423049:	or     BYTE PTR [ebp-0xd],dl
  42304c:	les    ecx,FWORD PTR [ebx]
  42304e:	mov    edx,edi
  423050:	shr    BYTE PTR [esi+eiz*8+0x27],1
  423054:	push   ds
  423055:	jo     0x422fe0
  423057:	int    0xa3
  423059:	mov    esi,0x9a4fe17
  42305e:	and    bh,BYTE PTR [ecx*2+0x4b020385]
  423065:	or     DWORD PTR [edx-0x61],ebp
  423068:	push   0xce0ee8fd
  42306d:	out    dx,eax
  42306e:	jmp    0x1ce8:0x1c7e4b03
  423075:	mov    WORD PTR [ebp-0x186138f2],?
  42307b:	add    ecx,DWORD PTR [ebx-0x7a]
  42307e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42307f:	add    al,0x4c
  423081:	mov    edi,DWORD PTR [eax]
  423083:	add    eax,0x0
	...
  4230ac:	dec    ebx
  4230ad:	or     DWORD PTR [edx-0x49],esp
  4230b0:	sub    BYTE PTR [ebp+0x3e714e61],bh
  4230b6:	jae    0x4230bf
  4230b8:	push   ecx
  4230b9:	into   
  4230ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230bb:	xchg   ebp,eax
  4230bc:	dec    edx
  4230bd:	jle    0x42306c
  4230bf:	mov    bl,0xc1
  4230c1:	int3   
  4230c2:	(bad)  
  4230c3:	div    DWORD PTR [ecx+0x32]
  4230c6:	mov    ecx,0x4c4cfb3
  4230cb:	loopne 0x423148
  4230cd:	jle    0x4230f5
  4230cf:	mov    WORD PTR [eax-0x13],?
  4230d2:	add    al,0x2c
  4230d4:	adc    BYTE PTR [edx],bl
  4230d6:	inc    ebp
  4230d7:	push   ds
  4230d8:	inc    ebx
  4230d9:	xchg   ebp,eax
  4230da:	add    al,0xd8
  4230dc:	jp     0x4230bb
  4230de:	popa   
  4230df:	mov    bh,0x28
  4230e1:	fst    DWORD PTR [ebp+0x1042d1b1]
  4230e7:	loopne 0x4230c1
  4230e9:	adc    DWORD PTR ds:0xac7dfc8a,ebx
  4230ef:	out    0x14,eax
  4230f1:	mov    edx,0x20968ab8
  4230f6:	(bad)  
  4230f7:	pop    ss
  4230f8:	mov    ebp,0xc142c111
  4230fd:	mov    ah,0xff
  4230ff:	int3   
  423100:	mov    ah,0x93
  423102:	punpckldq mm2,DWORD PTR [ebp+eiz*8-0x1a1c8dd1]
  42310a:	xor    esi,DWORD PTR [eax+0x7b]
  42310d:	in     eax,0x37
  42310f:	pusha  
	...
  423138:	shl    ebp,cl
  42313a:	cmp    esp,DWORD PTR [edx-0x6d]
  42313d:	in     eax,0xf
  42313f:	push   ds
  423140:	mov    edx,0x27af8ac1
  423145:	jmp    0x423137
  423147:	mov    dh,0x4e
  423149:	jg     0x423196
  42314b:	add    eax,0x7250ba87
  423150:	or     eax,0x3091d77f
  423155:	pop    ss
  423156:	(bad)  
  423157:	xchg   esi,eax
  423158:	jb     0x4231a0
  42315a:	push   cs
  42315b:	pop    esp
  42315c:	scas   al,BYTE PTR es:[edi]
  42315d:	adc    dh,bh
  42315f:	jmp    0xd165e637
  423164:	adc    ebp,DWORD PTR [edi+0x23]
  423167:	in     eax,dx
  423168:	dec    eax
  423169:	or     DWORD PTR [ebp+0x11],esi
  42316c:	sar    BYTE PTR [ebx+eiz*1+0x23ccd3fd],cl
  423173:	stc    
  423174:	fistp  QWORD PTR [edx+0x287d624f]
  42317a:	icebp  
  42317b:	pop    ecx
  42317c:	andpd  xmm3,XMMWORD PTR [edx-0x5a77c12d]
  423184:	in     al,dx
  423185:	in     al,0xe7
  423187:	das    
  423188:	pop    edx
  423189:	paddd  mm4,QWORD PTR [edx-0x5]
  42318d:	in     al,dx
  42318e:	and    ebp,edx
  423190:	nop
  423191:	adc    edx,0xffffffb4
  423194:	or     al,BYTE PTR [edx-0x451f32b5]
  42319a:	mov    bl,BYTE PTR [edi]
	...
  4231c4:	ja     0x423226
  4231c6:	repnz add BYTE PTR [ebp-0x12],al
  4231ca:	mov    eax,ebx
  4231cc:	cmp    DWORD PTR [ecx+0x22],eax
  4231cf:	cmp    ch,cl
  4231d1:	pop    esp
  4231d2:	mov    esi,ecx
  4231d4:	dec    edx
  4231d5:	lods   al,BYTE PTR ds:[esi]
  4231d6:	icebp  
  4231d7:	jmp    DWORD PTR [ebp+0x46246a81]
  4231dd:	or     bl,al
  4231df:	mov    ebx,DWORD PTR [esi+0x21]
  4231e2:	and    bh,BYTE PTR [ebx]
  4231e4:	mov    cl,0x81
  4231e6:	pop    edx
  4231e7:	and    al,0x2a
  4231e9:	outs   dx,DWORD PTR ds:[esi]
  4231ea:	inc    edi
  4231eb:	jmp    0x42325b
  4231ed:	sbb    DWORD PTR [edx+0x24],0x2442825a
  4231f4:	pop    edx
  4231f5:	xor    DWORD PTR [esp+0x75000c6e],eax
  4231fc:	pop    ebx
  4231fd:	mov    DWORD PTR [eax+ebp*1+0xc5e],edi
  423204:	pop    esi
  423205:	adc    bh,BYTE PTR [ebx]
  423207:	add    BYTE PTR [edi],ch
  423209:	or     al,0x0
  42320b:	jl     0x42323c
  42320d:	mov    ebp,edi
  42320f:	add    ch,BYTE PTR [esi]
  423211:	sub    bh,BYTE PTR [edi+0x7c]
  423214:	push   cs
  423215:	xor    al,0xfe
  423217:	jl     0x42324b
  423219:	or     al,0x7c
  42321b:	add    eax,0x7401eda1
  423220:	adc    DWORD PTR [ecx+0x565a244a],eax
  423226:	dec    edi
  423227:	mov    eax,DWORD PTR [eax]
	...
  42324d:	add    BYTE PTR [eax],al
  42324f:	add    BYTE PTR [esp+eiz*8],dh
  423252:	int3   
  423253:	repz xor eax,0x6930e9ed
  423259:	push   eax
  42325a:	and    bl,BYTE PTR [eax+0x69]
  42325d:	dec    eax
  42325e:	and    dl,BYTE PTR [eax]
  423260:	pop    ecx
  423261:	fldcw  WORD PTR [ecx]
  423263:	xlat   BYTE PTR ds:[ebx]
  423264:	nop
  423265:	pop    ebx
  423266:	mov    esi,ecx
  423268:	dec    ebx
  423269:	or     ch,BYTE PTR [esi-0x11]
  42326c:	(bad)  
  42326d:	(bad)  
  42326e:	sbb    eax,DWORD PTR [ebx+0x67]
  423271:	xor    bh,BYTE PTR [edi-0x12]
  423274:	dec    edx
  423275:	xchg   ebp,eax
  423276:	and    al,0xea
  423278:	pop    ecx
  423279:	stos   DWORD PTR es:[edi],eax
  42327a:	mov    dh,0x23
  42327c:	cmp    ebp,DWORD PTR [ebp-0x2c050139]
  423282:	mov    cs,ebp
  423284:	mov    ds:0x8cfe1393,eax
  423289:	repnz sbb al,BYTE PTR [edx-0x70f6dd7a]
  423290:	retf   0x221
  423293:	add    al,al
  423295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423296:	out    dx,eax
  423297:	add    ecx,DWORD PTR [ebx+0x22]
  42329a:	scas   eax,DWORD PTR es:[edi]
  42329b:	push   edx
  42329c:	sti    
  42329d:	stos   BYTE PTR es:[edi],al
  42329e:	dec    ecx
  42329f:	out    0x3d,eax
  4232a1:	jb     0x4232bd
  4232a3:	inc    al
  4232a5:	fstp   st(7)
  4232a7:	daa    
  4232a8:	not    al
  4232aa:	mov    cs,ebp
  4232ac:	rcr    BYTE PTR [eax+0x2b],1
  4232af:	out    dx,eax
  4232b0:	cmp    DWORD PTR [eax+0x3a1a],ecx
	...
  4232da:	add    BYTE PTR [eax],al
  4232dc:	or     BYTE PTR [eax],dl
  4232de:	jmp    0xcd3a:0xea3c878a
  4232e5:	inc    esp
  4232e6:	(bad)  
  4232e7:	call   FWORD PTR [esi+ebp*1]
  4232ea:	or     eax,DWORD PTR [ebx-0x72b]
  4232f0:	dec    ebx
  4232f1:	and    BYTE PTR [esi-0xdfb9bc],cl
  4232f7:	dec    DWORD PTR [ebx+0x44]
  4232fa:	inc    DWORD PTR [edx+0x68e22f6]
  423300:	and    BYTE PTR cs:[edi-0x2ba31b01],dl
  423307:	mov    bh,BYTE PTR [edi+0x9]
  42330a:	int    0xbb
  42330c:	ret    
  42330d:	popf   
  42330e:	(bad)  
  42330f:	out    dx,eax
  423310:	(bad)  
  423311:	sbb    al,0x9c
  423313:	jecxz  0x4232e6
  423315:	ja     0x42330b
  423317:	(bad)  
  423318:	mov    esp,0xc1b5990e
  42331d:	aas    
  42331e:	adc    ch,ah
  423320:	pushf  
  423321:	push   cs
  423322:	cmc    
  423323:	pop    ebx
  423324:	dec    ebx
  423325:	or     ecx,ebp
  423327:	add    ecx,DWORD PTR [edx-0x79]
  42332a:	cld    
  42332b:	call   DWORD PTR [esi+ecx*1-0xa973ff1]
  423332:	pop    ebx
  423333:	and    al,0xd7
  423335:	lods   eax,DWORD PTR ds:[esi]
  423336:	jmp    0x423352
  423338:	jno    0x4232ed
  42333a:	jno    0x4232f3
  42333c:	sub    BYTE PTR [ecx+0xbf71],dh
	...
  423366:	add    BYTE PTR [eax],al
  423368:	sub    cl,ah
  42336a:	sbb    esi,DWORD PTR [ecx+edx*8+0x5806c03f]
  423371:	push   cs
  423372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423373:	add    al,0xa5
  423375:	cmc    
  423376:	in     al,0x3
  423378:	dec    ebx
  423379:	jl     0x4233af
  42337b:	stc    
  42337c:	inc    ebp
  42337d:	and    cl,bl
  42337f:	mov    fs,WORD PTR [eax+0x358120e5]
  423385:	xchg   esp,eax
  423386:	(bad)  
  423387:	mov    es,WORD PTR [eax-0x41713f1b]
  42338d:	hlt    
  42338e:	in     al,0x3
  423390:	dec    ebx
  423391:	adc    ah,0xdf
  423394:	push   eax
  423395:	sub    BYTE PTR [edi+ebx*8-0x20437fac],0x54
  42339d:	mov    BYTE PTR [ecx-0xf],0xc7
  4233a1:	or     eax,0x228c06bc
  4233a6:	in     eax,dx
  4233a7:	mov    es,esi
  4233a9:	hlt    
  4233aa:	(bad)  
  4233ab:	in     al,dx
  4233ac:	dec    eax
  4233ad:	or     DWORD PTR [ebx-0x67],edx
  4233b0:	int    0x3b
  4233b2:	out    0x5f,eax
  4233b4:	and    DWORD PTR [edi],ecx
  4233b6:	(bad)  
  4233b7:	push   ds
  4233b8:	retf   0x3f9
  4233bb:	jmp    0xdf40b808
  4233c0:	cmp    al,0x23
  4233c2:	(bad)  
  4233c3:	call   0xc5be0610
  4233c8:	xchg   esp,eax
  4233c9:	inc    BYTE PTR [eax+ecx*1+0x0]
	...
  4233f4:	dec    eax
  4233f5:	or     DWORD PTR [eax],eax
  4233f7:	(bad)  
  4233f8:	in     al,dx
  4233f9:	jmp    0xe344a651
  4233fe:	retf   0x4b6c
  423401:	add    edi,DWORD PTR [ebx]
  423403:	scas   al,BYTE PTR es:[edi]
  423404:	fld    DWORD PTR [edi]
  423406:	mov    esp,DWORD PTR [esi+0xd4382b7]
  42340c:	jnp    0x423390
  42340e:	jmp    0x9364:0x4fb52212
  423415:	jmp    0x3c104c55
  42341a:	mov    BYTE PTR ds:0x17e7e96b,dl
  423420:	cmp    al,0xf
  423422:	(bad)  
  423423:	rcr    ah,1
  423425:	call   0x805d4f5d
  42342a:	push   ebx
  42342b:	int    0x18
  42342d:	mov    ah,0x51
  42342f:	jb     0x4233b2
  423431:	and    al,0xe6
  423433:	js     0x423477
  423435:	or     ecx,DWORD PTR [edx+0x23c8ce81]
  42343b:	and    edx,ebx
  42343d:	mov    esp,0x345f2f8a
  423442:	lock push esi
  423444:	(bad)  
  423445:	iret   
  423446:	les    esp,FWORD PTR [edx-0x4d]
  423449:	call   0x194e3461
  42344e:	mov    DWORD PTR [esi+eax*2+0x35],ecx
  423452:	mov    DWORD PTR [esi+edx*2+0x39],edx
  423456:	xchg   DWORD PTR [eax+eax*1+0x0],ecx
	...
  42347e:	add    BYTE PTR [eax],al
  423480:	inc    esi
  423481:	sub    eax,0x35065487
  423486:	mov    DWORD PTR [esi+eax*1+0x19],eax
  42348a:	push   ebp
  42348b:	push   ebp
  42348c:	add    bh,BYTE PTR [esi-0x34]
  42348f:	call   0x401417
  423494:	cmp    DWORD PTR [ecx+0x22],eax
  423497:	cmp    ch,dl
  423499:	push   edi
  42349a:	mov    esi,ecx
  42349c:	sub    ebp,ebx
  42349e:	out    0xa3,al
  4234a0:	mov    ds:0xe73bfdf1,eax
  4234a5:	jae    0x4234df
  4234a7:	mov    esp,DWORD PTR [esi+0x29]
  4234aa:	ss cmp esi,esp
  4234ad:	sub    eax,DWORD PTR [edx]
  4234af:	add    BYTE PTR [edx+0x7b],dh
  4234b2:	pop    es
  4234b3:	or     esp,0x20
  4234b6:	add    al,BYTE PTR [eax]
  4234b8:	bound  ecx,QWORD PTR [eax]
  4234ba:	je     0x4234d4
  4234bc:	pop    edi
  4234bd:	or     BYTE PTR ds:0x3747200,al
  4234c3:	sub    DWORD PTR [ebp+0x6f197406],0x8
  4234ca:	jge    0x4234cc
  4234cc:	xor    dh,BYTE PTR [ebx+eax*1-0x7d]
  4234d0:	int    0x4
  4234d2:	je     0x4234e1
  4234d4:	push   ebp
  4234d5:	push   ebp
  4234d6:	mov    esi,ecx
  4234d8:	fcmovu st,st(4)
  4234da:	out    dx,eax
  4234db:	call   FWORD PTR [ebp+0x12ebfd35]
  4234e1:	jge    0x42354d
  4234e3:	and    al,0x0
	...
  423509:	add    BYTE PTR [eax],al
  42350b:	add    BYTE PTR [edx],dl
  42350d:	or     edi,esi
  42350f:	jmp    DWORD PTR [edx]
  423511:	or     BYTE PTR [ebx+0x31074bd3],cl
  423517:	push   ecx
  423518:	xchg   esi,eax
  423519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42351a:	dec    eax
  42351b:	out    0xc,eax
  42351d:	mov    ah,0x17
  42351f:	inc    BYTE PTR [esi+0x5e00279f]
  423525:	lds    ecx,FWORD PTR [ecx-0x74cdd895]
  42352b:	inc    ebx
  42352c:	das    
  42352d:	dec    esi
  42352e:	ret    
  42352f:	inc    edi
  423530:	ret    0xde4d
  423533:	push   edi
  423534:	sbb    dl,0x7
  423537:	xor    ah,0xf9
  42353a:	pop    ss
  42353b:	dec    dh
  42353d:	add    cl,BYTE PTR [eax]
  42353f:	test   bh,cl
  423541:	and    DWORD PTR [edx],eax
  423543:	add    al,cl
  423545:	adc    al,BYTE PTR [eax]
  423547:	pextrw ebx,(bad),0xc5
  423549:	sahf   
  42354a:	add    al,BYTE PTR [eax]
  42354c:	dec    ebx
  42354d:	xchg   edi,eax
  42354e:	(bad)  
  42354f:	and    edi,DWORD PTR [ebx]
  423551:	ror    DWORD PTR [edx-0x4ca4cf3e],cl
  423557:	push   eax
  423558:	shr    BYTE PTR [ebx+0x2b],1
  42355b:	cs gs inc edx
  42355e:	push   ss
  42355f:	mov    dl,BYTE PTR [edi]
  423561:	push   es
  423562:	fcom   QWORD PTR [esi-0x7]
  423565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423566:	inc    ebp
  423567:	mov    dh,BYTE PTR [ebx+0x49]
  42356a:	add    al,0xf1
  42356c:	push   esp
  42356d:	(bad)  
  42356e:	fcmovb st,st(4)
	...
  423598:	int3   
  423599:	in     al,0x8a
  42359b:	inc    ebx
  42359c:	outs   dx,DWORD PTR ds:[esi]
  42359d:	cmp    cl,bl
  42359f:	test   DWORD PTR [edi+0x24],esp
  4235a2:	add    al,BYTE PTR [eax]
  4235a4:	mov    esi,0x63bd8119
  4235a9:	and    al,0x2
  4235ab:	add    BYTE PTR [ebx+0xc],cl
  4235ae:	cli    
  4235af:	cmp    al,0x4b
  4235b1:	and    eax,0x9970002
  4235b6:	in     al,dx
  4235b7:	or     BYTE PTR ds:0x47dfd508,0x9
  4235be:	aam    0x3
  4235c0:	dec    ebx
  4235c1:	(bad)  
  4235c2:	jecxz  0x423546
  4235c4:	cmc    
  4235c5:	push   es
  4235c6:	mov    ebp,0x71b995fb
  4235cb:	inc    esi
  4235cc:	in     al,dx
  4235cd:	shl    BYTE PTR [edi],0x17
  4235d0:	fstp   QWORD PTR [esi]
  4235d2:	idiv   BYTE PTR [eax+0x4c69aa71]
  4235d8:	int    0xab
  4235da:	imul   eax,DWORD PTR [eax+0x7c],0xd003f047
  4235e1:	popf   
  4235e2:	(bad)  
  4235e3:	repz rol DWORD PTR [esi-0x2f],0x3e
  4235e8:	cld    
  4235e9:	mov    bl,0x71
  4235eb:	inc    esi
  4235ec:	lods   al,BYTE PTR ds:[esi]
  4235ed:	jmp    0x2769:0xc49d1706
  4235f4:	dec    ebx
  4235f5:	xchg   esp,eax
  4235f6:	shr    DWORD PTR [edx],cl
  4235f8:	cmp    al,0x7e
  4235fa:	xor    al,0xe0
	...
  423624:	push   esp
  423625:	jl     0x423648
  423627:	pop    ss
  423628:	sbb    esi,DWORD PTR [edi+0x26c4561]
  42362e:	xlat   BYTE PTR ds:[ebx]
  42362f:	push   ss
  423630:	ins    DWORD PTR es:[edi],dx
  423631:	jle    0x42366f
  423633:	loopne 0x42362d
  423635:	dec    ebx
  423636:	out    0x3,eax
  423638:	dec    ebx
  423639:	or     edx,esi
  42363b:	ss (bad) 
  42363e:	jae    0x4236ba
  423640:	dec    esp
  423641:	or     ch,al
  423643:	add    edx,eax
  423645:	cmp    ah,0xff
  423648:	cmp    al,0xa
  42364a:	cmp    DWORD PTR [ecx+eax*8+0x1f20903a],esi
  423651:	or     bh,BYTE PTR [ebp+0x4]
  423654:	cmc    
  423655:	hlt    
  423656:	(bad)  
  423657:	in     al,dx
  423658:	dec    eax
  423659:	or     DWORD PTR [ebx],eax
  42365b:	mov    ecx,?
  42365d:	sub    dh,BYTE PTR [ecx+0x4c]
  423660:	leave  
  423661:	ds (bad) 
  423663:	call   0xe94624e6
  423668:	dec    eax
  423669:	jl     0x4236b5
  42366b:	loopne 0x423648
  42366d:	lock mov ch,BYTE PTR [edi-0x8]
  423671:	add    eax,0x83d7e900
  423676:	pop    ss
  423677:	in     eax,dx
  423678:	dec    eax
  423679:	or     DWORD PTR [eax+0x60],eax
  42367c:	into   
  42367d:	in     eax,dx
  42367e:	add    ebp,ecx
  423680:	dec    eax
  423681:	add    BYTE PTR [ebp-0x1f63b07],0x62
	...
  4236b0:	ds repnz add ebp,ecx
  4236b4:	dec    eax
  4236b5:	jg     0x4236c6
  4236b7:	jmp    0x423733
  4236b9:	or     al,0xc1
  4236bb:	jno    0x423655
  4236bd:	or     BYTE PTR [esi-0x1f6632b],bl
  4236c3:	je     0x42365c
  4236c5:	jle    0x42364c
  4236c7:	stc    
  4236c8:	mov    WORD PTR [ecx],cs
  4236ca:	(bad)  
  4236cb:	jo     0x4236d2
  4236cd:	repnz add ebp,ecx
  4236d0:	dec    eax
  4236d1:	leave  
  4236d2:	mov    BYTE PTR [edi+0x73],bl
  4236d5:	add    eax,0x83c1e900
  4236da:	pmulhw mm1,QWORD PTR [eax+0x9]
  4236de:	mov    ebp,DWORD PTR [edi+0x5f]
  4236e1:	add    eax,0xf9c2e900
  4236e6:	add    DWORD PTR [ebx-0x678b7cb],edi
  4236ec:	dec    ecx
  4236ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236ee:	sbb    al,0xed
  4236f0:	dec    eax
  4236f1:	or     DWORD PTR [ebx-0x10],esi
  4236f4:	ret    
  4236f5:	mov    ss,WORD PTR [eax]
  4236f7:	add    BYTE PTR [esi],bl
  4236f9:	or     eax,0x5ac8900
  4236fe:	add    al,BYTE PTR [eax]
  423700:	xor    cl,ch
  423702:	mov    BYTE PTR [esi-0x1f6fa],cl
  423708:	fwait
  423709:	xchg   DWORD PTR ds:0x890cf204,ecx
  42370f:	xchg   dl,bh
  423711:	or     dh,bh
  423713:	inc    DWORD PTR [eax]
	...
  423739:	add    BYTE PTR [eax],al
  42373b:	add    BYTE PTR [edx],dh
  42373d:	in     eax,dx
  42373e:	mov    al,BYTE PTR [esi-0x1f6ee]
  423744:	sub    al,0xd
  423746:	add    BYTE PTR [ebx+0x20164],cl
  42374c:	loop   0x4236df
  42374e:	sbb    DWORD PTR [eax],0xffffffde
  423751:	or     al,0x0
  423753:	add    DWORD PTR [edi*8-0xe4dffff],edx
  42375a:	int3   
  42375b:	rol    BYTE PTR [edx-0x19dbbe6f],cl
  423761:	xchg   DWORD PTR [ebp+0x4991e374],edi
  423767:	and    al,0xd2
  423769:	xchg   ecx,eax
  42376a:	xchg   ebx,eax
  42376b:	adc    BYTE PTR [esi+0x4e2b000c],ch
  423771:	jmp    0x8e3b88c3
  423776:	adc    DWORD PTR [edx+esi*2],eax
  423779:	or     al,0x29
  42377b:	dec    esp
  42377c:	dec    esi
  42377d:	mov    ebp,0x1e4d514f
  423782:	int    0x83
  423784:	scas   al,BYTE PTR es:[edi]
  423785:	cld    
  423786:	test   al,al
  423788:	pop    ds
  423789:	adc    DWORD PTR [ebx-0x75],ebx
  42378c:	mov    eax,ds:0xe15e5ec1
  423791:	inc    edi
  423792:	xor    eax,0x890d4ac2
  423797:	xchg   BYTE PTR [ebx+0x2],cl
  42379a:	(bad)  
  42379b:	push   DWORD PTR [ebx+ecx*8]
  42379e:	mov    ebp,0x23
	...
  4237c7:	add    BYTE PTR [ebx-0x7aa148d3],bl
  4237cd:	jae    0x42380c
  4237cf:	aaa    
  4237d0:	or     edx,ebx
  4237d2:	add    DWORD PTR [eax+0x7f24b],edi
  4237d8:	or     BYTE PTR [ebx-0x43],bh
  4237db:	and    ecx,DWORD PTR [edi+0x7b]
  4237de:	dec    ecx
  4237df:	shl    dl,0xf2
  4237e2:	xchg   BYTE PTR [ebx+0x43],al
  4237e5:	mov    dl,0x40
  4237e7:	mov    al,BYTE PTR [edi-0x87ef7ea]
  4237ed:	adc    eax,0x754b0000
  4237f2:	inc    ecx
  4237f3:	je     0x423841
  4237f5:	jno    0x423834
  4237f7:	sub    eax,DWORD PTR [edi-0xe]
  4237fa:	add    ebx,eax
  4237fc:	shl    BYTE PTR [ebp-0x23],1
  4237ff:	inc    ebx
  423800:	inc    edi
  423801:	repnz add DWORD PTR [ebx+0x3c1cddf],ecx
  423808:	dec    ebx
  423809:	repnz mov dl,0x8a
  42380c:	xlat   BYTE PTR ds:[ebx]
  42380d:	int    0xc1
  42380f:	add    ecx,DWORD PTR [ebx-0xe]
  423812:	scas   eax,DWORD PTR es:[edi]
  423813:	mov    bh,BYTE PTR [edi+0x4b03d5cd]
  423819:	repnz mov ah,0x4f
  42381c:	shr    BYTE PTR [ebp-0x18],1
  42381f:	aas    
  423820:	inc    edi
  423821:	repnz add DWORD PTR [edx+0x1b],edx
  423825:	shl    BYTE PTR gs:[ebx],0x53
  423829:	fidiv  DWORD PTR [esp+esi*8+0x0]
	...
  423854:	mov    BYTE PTR fs:[ebx+0x1f62fc3],0x0
  42385c:	mov    BYTE PTR [ebp+0x87fcb40],ah
  423862:	mov    bl,0x40
  423864:	adc    dh,dl
  423866:	stos   DWORD PTR es:[edi],eax
  423867:	inc    eax
  423868:	adc    dh,dl
  42386a:	cmp    al,0x7d
  42386c:	das    
  42386d:	mov    DWORD PTR [ebx+0x14],edi
  423870:	sub    al,0x7
  423872:	call   0x72a0b72d
  423877:	mov    ecx,0x3923844
  42387c:	fnstsw WORD PTR [edx+0x98bc25b]
  423882:	jo     0x423898
  423884:	or     eax,DWORD PTR [edx]
  423886:	jmp    0x42388a
  423888:	mov    ch,0xd
  42388a:	idiv   DWORD PTR [ebx+edi*8-0x76]
  42388e:	dec    eax
  42388f:	or     edi,DWORD PTR [esi+edi*4]
  423892:	jae    0x423891
  423894:	inc    eax
  423895:	push   edi
  423896:	test   al,0x3
  423898:	(bad)  
  423899:	shl    esi,1
  42389b:	js     0x423898
  42389d:	push   ss
  42389e:	jne    0x4238e5
  4238a0:	les    ecx,FWORD PTR [ebp+0x4]
  4238a3:	cmp    al,0x9
  4238a5:	mov    ah,BYTE PTR [edx]
  4238a7:	int3   
  4238a8:	inc    eax
  4238a9:	fcomp  st(0)
  4238ab:	xor    eax,0xff8c8a2e
  4238b0:	dec    ebx
  4238b1:	jl     0x4238a4
  4238b3:	jl     0x423849
  4238b5:	(bad)  
  4238b6:	pop    ds
  4238b7:	add    DWORD PTR [eax],0x0
	...
  4238dd:	add    BYTE PTR [eax],al
  4238df:	add    BYTE PTR [eax],dl
  4238e1:	or     ebp,edx
  4238e3:	push   ds
  4238e4:	dec    ecx
  4238e5:	xchg   esp,eax
  4238e6:	fcomi  st,st(5)
  4238e8:	mov    edi,0xa886e880
  4238ed:	(bad)  
  4238ee:	not    DWORD PTR [edx]
  4238f0:	jge    0x4238f8
  4238f2:	call   0xf7d6e17d
  4238f7:	adc    ch,BYTE PTR [ebp+0x6]
  4238fa:	call   0x7558bad3
  4238ff:	test   DWORD PTR [eax+0x4f280057],ecx
  423905:	xchg   esp,eax
  423906:	xor    al,0xd1
  423908:	lds    eax,FWORD PTR [ebx*1+0x44904524]
  42390f:	aam    0x80
  423911:	mov    es,WORD PTR [esp+esi*8-0x48]
  423915:	repz or BYTE PTR [ebx+0x4],ah
  423919:	cmp    eax,0x250c71ac
  42391e:	nop
  42391f:	sub    al,ah
  423921:	add    bl,BYTE PTR ds:0x1cc367f5
  423927:	jmp    0x9f4f4274
  42392c:	into   
  42392d:	leave  
  42392e:	dec    esi
  42392f:	test   al,0x48
  423931:	xchg   esp,eax
  423932:	xor    al,0xf1
  423934:	int    0x3
  423936:	cmp    esp,ecx
  423938:	out    dx,al
  423939:	pop    DWORD PTR [esp+edi*8+0x20]
  42393d:	mov    es,WORD PTR [esp+ebx*8+0x58]
  423941:	repz or BYTE PTR [ebx+0x0],ah
	...
  423969:	add    BYTE PTR [eax],al
  42396b:	add    BYTE PTR [edi*1+0x250461ac],cl
  423972:	nop
  423973:	stos   BYTE PTR es:[edi],al
  423974:	int    0x2
  423976:	cmp    DWORD PTR [ebp-0x1926c691],ebx
  42397c:	adc    cl,BYTE PTR [ebx+0x5879fd4]
  423982:	jle    0x423909
  423984:	push   ebx
  423985:	cdq    
  423986:	add    BYTE PTR [ebp+0x4a],dh
  423989:	xchg   edx,eax
  42398a:	add    al,0x54
  42398c:	je     0x4239e1
  42398e:	aas    
  42398f:	jmp    0xf9cdc323
  423994:	pop    ebx
  423995:	pop    es
  423996:	(bad)  
  423997:	out    dx,al
  423998:	and    cl,BYTE PTR [ebx+0x58827ec]
  42399e:	jle    0x4239ed
  4239a0:	inc    esp
  4239a1:	cdq    
  4239a2:	add    BYTE PTR [eax],al
  4239a4:	or     ecx,DWORD PTR es:[ecx+0x4be8ff04]
  4239ab:	inc    ecx
  4239ac:	bound  eax,QWORD PTR [edx]
  4239ae:	cmp    BYTE PTR [ebp-0x1e78e],0x71
  4239b5:	mov    ?,edx
  4239b7:	sbb    BYTE PTR [esi+0x4b],bl
  4239ba:	aas    
  4239bb:	sbb    eax,0xfffffffd
  4239be:	push   cs
  4239bf:	mov    WORD PTR [eax],ds
  4239c1:	sbb    bh,dh
  4239c3:	call   FWORD PTR [edi-0x6200f274]
  4239c9:	sbb    cl,BYTE PTR [ebp-0x18]
  4239cc:	sub    ecx,DWORD PTR [ecx]
	...
  4239f6:	add    BYTE PTR [eax],al
  4239f8:	cmp    eax,0x9e895ab7
  4239fd:	mov    ah,0xbf
  4239ff:	or     dl,dh
  423a01:	mov    ebx,0x2963e588
  423a06:	jge    0x423a08
  423a08:	loop   0x423a12
  423a0a:	push   ecx
  423a0b:	push   esi
  423a0c:	lds    eax,FWORD PTR [ebp-0x4390f7bc]
  423a12:	jge    0x4239cd
  423a14:	repnz or BYTE PTR [eax],al
  423a17:	add    BYTE PTR [ebx+0x4e],ch
  423a1a:	add    al,0xb6
  423a1d:	test   DWORD PTR [edx],esi
  423a1f:	add    DWORD PTR [ebp+ecx*1+0x0],0xe347a2fc
  423a27:	push   es
  423a28:	sub    esi,edx
  423a2a:	and    bh,0x72
  423a2d:	or     al,BYTE PTR [eax]
  423a2f:	add    BYTE PTR [ebx+0x32],dh
  423a32:	pop    es
  423a33:	or     DWORD PTR [ebp+eax*4+0xd458135],ebx
  423a3a:	add    ah,bh
  423a3c:	jb     0x423a85
  423a3e:	out    dx,al
  423a3f:	or     bh,BYTE PTR [ebx+0x1a]
  423a42:	mov    BYTE PTR [edx],dh
  423a44:	dec    ebx
  423a45:	imul   esi,DWORD PTR [edi],0x7cee8982
  423a4b:	aaa    
  423a4c:	retf   0x41d3
  423a4f:	push   cs
  423a50:	dec    ebx
  423a51:	repnz inc edx
  423a53:	out    dx,al
  423a54:	dec    ebp
  423a55:	out    0xcf,eax
  423a57:	mov    BYTE PTR ds:0x80d467,cl
	...
  423a81:	add    BYTE PTR [eax],al
  423a83:	add    BYTE PTR ds:0x4b0211f2,ch
  423a89:	mov    cl,0x27
  423a8b:	or     eax,eax
  423a8d:	test   BYTE PTR [edx+eiz*8+0xf24b16c],0x52
  423a95:	lods   al,BYTE PTR ds:[esi]
  423a96:	jl     0x423aaf
  423a98:	retf   0x18e
  423a9b:	lock dec eax
  423a9d:	repnz inc edx
  423a9f:	jmp    0x7939:0x882fe947
  423aa6:	xor    al,0x82
  423aa8:	or     esi,ebp
  423aaa:	jl     0x423adb
  423aac:	enter  0xd053,0xa
  423ab0:	cmp    BYTE PTR [ecx-0x2c],ch
  423ab3:	dec    eax
  423ab4:	enter  0x531,0x85
  423ab8:	adc    bh,BYTE PTR [ebp+0x728e8c87]
  423abe:	mov    cl,0xe7
  423ac0:	and    al,0xf2
  423ac2:	add    DWORD PTR [eax],eax
  423ac4:	and    al,0xcc
  423ac6:	lods   al,BYTE PTR ds:[esi]
  423ac7:	mov    BYTE PTR [edi+0x4b0343c4],ch
  423acd:	lds    esp,FWORD PTR [bp+di]
  423ad0:	inc    edi
  423ad1:	pop    eax
  423ad2:	test   DWORD PTR [ebx+0xa],ecx
  423ad5:	bnd jl 0x423ae1
  423ad8:	sar    cl,cl
  423ada:	test   cl,al
  423adc:	dec    edi
  423add:	outs   dx,DWORD PTR ds:[esi]
  423ade:	inc    ecx
  423adf:	add    ecx,edx
  423ae1:	test   DWORD PTR [esi],0xe7090a4d
  423ae7:	xchg   ecx,eax
	...
  423b10:	outs   dx,BYTE PTR ds:[esi]
  423b11:	(bad)  
  423b12:	jecxz  0x423b17
  423b14:	ror    BYTE PTR [ebx+ecx*1+0x8],0xb1
  423b19:	mov    WORD PTR [ebx],ds
  423b1b:	lds    esp,FWORD PTR [esi+ecx*4-0x11]
  423b1f:	jl     0x423b73
  423b21:	mov    BYTE PTR [edi-0x143937f8],ah
  423b27:	test   BYTE PTR [edx+0xc],dl
  423b2a:	sbb    al,0xc5
  423b2c:	inc    esp
  423b2d:	jns    0x423ac4
  423b2f:	inc    edx
  423b30:	dec    eax
  423b31:	or     DWORD PTR [edi*2-0x4cc8a5d1],esi
  423b38:	ror    DWORD PTR [edi+ebx*8+0x7a],0x87
  423b3d:	adc    eax,0x5814b974
  423b42:	pop    ss
  423b43:	sbb    al,0x35
  423b45:	or     edi,esp
  423b47:	add    esp,DWORD PTR [ebx+0x4c51b8d]
  423b4d:	xchg   esi,eax
  423b4e:	lods   al,BYTE PTR ds:[esi]
  423b4f:	or     ecx,DWORD PTR [ecx+esi*8+0x94b0430]
  423b56:	mov    edx,0xb8018780
  423b5b:	sbb    esi,DWORD PTR [ecx+ecx*1-0x19]
  423b5f:	add    eax,DWORD PTR [eax+0xab14b90]
  423b65:	adc    ah,bh
  423b67:	mov    dl,0xc1
  423b69:	dec    ebp
  423b6a:	add    edi,esp
  423b6c:	rcr    DWORD PTR [ebp-0x35],1
  423b6f:	call   ebx
  423b71:	enter  0xfea7,0x0
	...
  423b99:	add    BYTE PTR [eax],al
  423b9b:	add    dh,bh
  423b9d:	adc    BYTE PTR [eax],ch
  423b9f:	and    eax,0x7ce19054
  423ba4:	mov    ecx,DWORD PTR [ecx-0xa]
  423ba7:	push   ebp
  423ba8:	push   ebx
  423ba9:	enter  0xf408,0x41
  423bad:	verr   WORD PTR [eax-0x6f]
  423bb1:	xchg   ecx,eax
  423bb2:	mov    edi,0x7bc85a9
  423bb7:	test   al,0x27
  423bb9:	or     cl,BYTE PTR [ecx]
  423bbb:	repz test DWORD PTR [edi],0xc8c9b887
  423bc2:	add    al,0x60
  423bc4:	or     DWORD PTR [edx+0xd],eax
  423bc7:	jg     0x423c3a
  423bc9:	adc    DWORD PTR [edi],edx
  423bcb:	jo     0x423bdc
  423bcd:	inc    edx
  423bce:	or     eax,0xdfc94f7f
  423bd3:	rol    edi,1
  423bd5:	adc    BYTE PTR [edi-0x49ecf758],al
  423bdb:	(bad)
  423be0:	xor    dl,BYTE PTR [ecx+0x428f600a]
  423be6:	or     eax,0xdfc91f3f
  423beb:	icebp  
  423bec:	adc    DWORD PTR [eax],edx
  423bee:	or     eax,0xbf10483f
  423bf3:	pusha  
  423bf4:	add    bl,BYTE PTR [edi-0x3e]
  423bf7:	icebp  
  423bf8:	dec    eax
  423bf9:	push   esi
  423bfa:	mov    DWORD PTR [ebp-0x5a76f614],esi
	...
  423c28:	in     al,0xd
  423c2a:	mov    ebx,ebp
  423c2c:	(bad)
  423c30:	inc    edi
  423c31:	dec    eax
  423c32:	mov    ebx,ebp
  423c34:	(bad)
  423c38:	inc    edi
  423c39:	dec    eax
  423c3a:	mov    ebx,ebp
  423c3c:	pminsw mm1,QWORD PTR [eax]
  423c3f:	jno    0x423c88
  423c41:	dec    eax
  423c42:	xchg   DWORD PTR [edx],esi
  423c44:	(bad)  
  423c45:	nop
  423c46:	shr    BYTE PTR [edx+0xa],1
  423c49:	push   es
  423c4a:	mov    ecx,ebp
  423c4c:	and    BYTE PTR [edi],al
  423c4e:	mov    DWORD PTR [eax],eax
  423c50:	mov    al,0x4c
  423c52:	in     eax,0x18
  423c54:	sbb    cl,BYTE PTR ds:0x4ca08b3f
  423c5a:	in     eax,0x10
  423c5c:	jmp    0xe546:0x708b3f0c
  423c63:	or     dl,bh
  423c65:	add    eax,0x7d708b3f
  423c6a:	int    0x88
  423c6c:	jae    0x423c1e
  423c6e:	mov    edi,0x88ba7208
  423c73:	in     eax,0xe1
  423c75:	sub    BYTE PTR [ecx],cl
  423c77:	push   ebx
  423c78:	sub    al,0xbc
  423c7a:	mov    al,BYTE PTR [ebp+0x26]
  423c7d:	adc    BYTE PTR [eax+ecx*1-0x47],0xfb
  423c82:	mov    cl,BYTE PTR [ebp+0x3a]
  423c85:	or     BYTE PTR [eax+0x4],0xab
  423c89:	cmp    al,al
  423c8b:	jmp    0x423c8d
	...
  423cb1:	add    BYTE PTR [eax],al
  423cb3:	add    BYTE PTR [esi],ch
  423cb5:	fmul   st(2),st
  423cb7:	adc    ecx,0x250f0efe
  423cbd:	(bad)  
  423cbf:	mov    DWORD PTR [esp+ecx*2+0x1ac304e3],esi
  423cc6:	mov    dh,dl
  423cc8:	xor    ebx,DWORD PTR [edi]
  423cca:	or     eax,0xf2842431
  423ccf:	add    DWORD PTR [ecx-0xdff01f2],0x2489d8db
  423cd9:	dec    esp
  423cda:	jecxz  0x423cec
  423cdc:	rcr    DWORD PTR [edx],cl
  423cde:	mov    dh,cl
  423ce0:	and    ebx,DWORD PTR [edi]
  423ce2:	push   DWORD PTR [eax]
  423ce4:	pop    esp
  423ce5:	test   dl,dh
  423ce7:	adc    DWORD PTR [ecx-0x26],0xdb913332
  423cee:	xlat   BYTE PTR ds:[ebx]
  423cef:	mov    DWORD PTR [ebx+0x38],ecx
  423cf2:	inc    ecx
  423cf3:	in     eax,0x49
  423cf5:	loope  0x423d09
  423cf7:	mov    BYTE PTR [ebp+0x5a071e31],cl
  423cfd:	sbb    BYTE PTR [ecx-0xe],bh
  423d00:	retf   0xb13
  423d03:	inc    DWORD PTR [ebp-0x2d262d0e]
  423d09:	enter  0xe542,0x43
  423d0d:	and    DWORD PTR [esi],edi
  423d0f:	mov    dh,dh
  423d11:	aad    0x2
  423d13:	not    al
  423d15:	dec    ebp
  423d16:	adc    al,al
	...
  423d40:	ins    BYTE PTR es:[edi],dx
  423d41:	out    0x80,eax
  423d43:	out    0x4a,al
  423d45:	jns    0x423d59
  423d47:	or     BYTE PTR [edx+0x69],dl
  423d4a:	xor    esi,DWORD PTR [eax]
  423d4c:	adc    eax,0x28801069
  423d51:	pop    esp
  423d52:	push   edi
  423d53:	test   eax,0x3027e0e1
  423d58:	adc    ah,BYTE PTR [ebp-0x2b]
  423d5b:	adc    edx,edx
  423d5d:	mov    dh,0x42
  423d5f:	out    dx,al
  423d60:	cmp    al,0x73
  423d62:	and    al,0x0
  423d64:	ret    0xfa83
  423d67:	stc    
  423d68:	add    al,0x2d
  423d6a:	or     al,0x7
  423d6c:	dec    ebx
  423d6d:	repnz add DWORD PTR [ecx+0x1b23310d],ecx
  423d74:	ret    0x422e
  423d77:	out    dx,al
  423d78:	inc    edi
  423d79:	imul   edx,DWORD PTR [eax],0x4368e008
  423d7f:	or     BYTE PTR [ebx],0xee
  423d82:	rcr    BYTE PTR ds:0xe5801fc2,1
  423d88:	or     al,0x6b
  423d8a:	aad    0xb4
  423d8c:	dec    edi
  423d8d:	xchg   ebp,eax
  423d8e:	ret    0xd3ff
  423d91:	or     BYTE PTR [esi+0x42],al
  423d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d95:	push   es
  423d96:	push   0xe708b024
  423d9b:	add    edx,DWORD PTR [eax-0x48]
  423d9e:	jecxz  0x423d50
  423da0:	or     ecx,DWORD PTR [ecx]
  423da2:	jo     0x423dd0
	...
  423dcc:	mov    ebp,edi
  423dce:	in     eax,dx
  423dcf:	and    BYTE PTR [ebp+0x4b03e7fc],0x14
  423dd6:	ss pop es
  423dd8:	sbb    cl,BYTE PTR [edx-0x19]
  423ddb:	jl     0x423d72
  423ddd:	leave  
  423dde:	into   
  423ddf:	repnz retf 
  423de1:	out    0xd3,eax
  423de3:	add    al,0x4b
  423de5:	or     edx,esp
  423de7:	push   edx
  423de8:	dec    eax
  423de9:	push   eax
  423dea:	sub    BYTE PTR [edx+eax*8],al
  423ded:	jne    0x423da2
  423def:	jge    0x423d77
  423df1:	mov    esp,DWORD PTR [edi-0x52d2e00]
  423df7:	jmp    0x22ad1dcf
  423dfc:	jne    0x423d90
  423dfe:	rcl    DWORD PTR [eax+0x48],cl
  423e01:	push   edi
  423e02:	sub    BYTE PTR [eax+edx*2],al
  423e05:	je     0x423d9a
  423e07:	jge    0x423e06
  423e09:	enter  0x296,0xca
  423e0d:	out    0x7b,al
  423e0f:	add    al,0x4b
  423e11:	or     edx,esp
  423e13:	push   edx
  423e14:	dec    eax
  423e15:	push   ebp
  423e16:	sub    BYTE PTR [edx+edx*8],al
  423e19:	fisubr WORD PTR [eax]
  423e1b:	sbb    eax,DWORD PTR [esi-0x78]
  423e1e:	inc    esi
  423e1f:	or     ah,ch
  423e21:	(bad)  
  423e22:	out    0xfe,eax
  423e24:	popf   
  423e25:	add    eax,0x91dcc4b9
  423e2a:	es inc ebp
  423e2c:	in     eax,0x17
  423e2e:	push   0x23
	...
  423e57:	add    al,dl
  423e59:	or     DWORD PTR [eax],eax
  423e5b:	jmp    0xe5f750a8
  423e60:	clc    
  423e61:	dec    ecx
  423e62:	add    al,bl
  423e64:	pop    esi
  423e65:	xchg   ecx,eax
  423e66:	(bad)  
  423e67:	sub    BYTE PTR [ecx+0x22],ch
  423e6a:	xchg   DWORD PTR [esi],edi
  423e6c:	push   cs
  423e6d:	out    dx,eax
  423e6e:	add    al,0x60
  423e70:	xor    al,0x11
  423e72:	stc    
  423e73:	jo     0x423e7e
  423e75:	mov    eax,eax
  423e77:	in     eax,0x75
  423e79:	sbb    al,0x87
  423e7b:	pop    ss
  423e7c:	int3   
  423e7d:	in     al,0x3d
  423e7f:	bound  ebx,QWORD PTR [ebx-0x71c3fb4b]
  423e85:	dec    BYTE PTR [eax+0x6ef07be]
  423e8b:	push   0xe9010229
  423e90:	dec    eax
  423e91:	adc    dh,BYTE PTR [ebp+0x499ded]
  423e97:	jo     0x423eba
  423e99:	leave  
  423e9a:	in     eax,dx
  423e9b:	out    0xcf,eax
  423e9d:	out    0xfc,al
  423e9f:	jmp    0x5e4b47ec
  423ea4:	xor    al,0x59
  423ea6:	aas    
  423ea7:	jmp    0x87021e5b
  423eac:	sbb    cl,BYTE PTR [ecx+0x9488de5]
  423eb2:	add    dl,dh
  423eb4:	jns    0x423ec0
  423eb6:	dec    ebp
  423eb7:	sub    BYTE PTR [edi-0x70],al
  423eba:	jae    0x423f39
	...
  423ee4:	xchg   esp,eax
  423ee6:	sub    DWORD PTR [ecx+0x1ad190fc],0x6ade90e1
  423ef0:	sub    bh,BYTE PTR [edi]
  423ef2:	mov    DWORD PTR ds:0xa8560a7a,ebx
  423ef8:	dec    eax
  423ef9:	adc    dh,BYTE PTR [ebx+0x0]
  423efc:	push   ss
  423efd:	jge    0x423edd
  423eff:	sar    DWORD PTR [ebp+0x8],0x7f
  423f03:	out    0x7e,eax
  423f05:	or     al,BYTE PTR [eax]
  423f07:	add    BYTE PTR [ecx-0x1cabfea6],ch
  423f0d:	or     DWORD PTR [edi+0xb2363df],eax
  423f13:	adc    DWORD PTR [ebp+0x6],0xfeb2fffd
  423f1a:	mov    dh,0x4
  423f1c:	mov    al,0xc4
  423f1e:	std    
  423f1f:	mov    BYTE PTR ds:0xf316ee45,ch
  423f25:	sub    bh,cl
  423f27:	add    BYTE PTR [edx+0x9],dh
  423f2a:	or     DWORD PTR [edi+0x40b966],esi
  423f30:	push   ebx
  423f31:	sbb    bh,dh
  423f33:	dec    ebp
  423f34:	jp     0x423eb9
  423f36:	jl     0x423f30
  423f38:	jb     0x423f3a
  423f3a:	test   DWORD PTR [ebx-0x7601f074],ebp
  423f40:	call   0xd03f:0xab1fdd49
  423f47:	out    dx,al
	...
  423f70:	stos   DWORD PTR es:[edi],eax
  423f71:	dec    eax
  423f72:	or     cl,dh
  423f74:	mov    ebx,0xbbc83035
  423f79:	inc    esi
  423f7a:	and    bl,0x88
  423f7d:	pop    ebx
  423f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f7f:	stos   BYTE PTR es:[edi],al
  423f80:	add    ebp,DWORD PTR [edi]
  423f82:	xor    cl,bl
  423f84:	fwait
  423f85:	xor    eax,0x7fede0c0
  423f8a:	rcl    ecx,cl
  423f8c:	int3   
  423f8d:	cmp    BYTE PTR [edi-0x327f7ff7],0xc1
  423f94:	call   0x8046:0x7bc830fd
  423f9b:	jecxz  0x423fe8
  423f9d:	push   ebx
  423f9e:	add    al,0xff
  423fa0:	dec    ebx
  423fa1:	and    DWORD PTR [ecx],ebp
  423fa3:	mov    bl,dh
  423fa5:	xor    DWORD PTR [edi+eax*1],esp
  423fa8:	sbb    dh,BYTE PTR [eax]
  423faa:	jns    0x423f7b
  423fac:	mov    cl,BYTE PTR [edx+0x6]
  423faf:	xor    DWORD PTR [ebx-0x577fbc97],edx
  423fb5:	(bad)  
  423fb7:	xor    bh,BYTE PTR [eax-0x1f]
  423fba:	sub    cl,BYTE PTR [eax+0x1243183]
  423fc0:	pop    edx
  423fc1:	xor    BYTE PTR [ecx-0x39],bh
  423fc4:	mov    bl,BYTE PTR [edx]
  423fc6:	hlt    
  423fc7:	xor    BYTE PTR [ebx+0x79],bh
  423fca:	inc    ebx
  423fcb:	sub    BYTE PTR [eax-0xd],0x8
  423fcf:	(bad)  
  423fd0:	jl     0x423f93
  423fd2:	sub    ecx,DWORD PTR [eax+0x0]
	...
  423ffc:	xchg   ebx,eax
  423ffd:	mov    cl,0x21
  423fff:	(bad)  
  424002:	jp     0x423fcb
  424004:	mov    cl,dl
  424006:	std    
  424007:	xor    BYTE PTR [ebx+0x69],bh
  42400a:	inc    esp
  42400b:	sub    BYTE PTR [eax-0xd],0xf8
  42400f:	push   cs
  424010:	cmp    al,0x1
  424012:	sub    al,0x8a
  424014:	mov    gs,edx
  424016:	inc    edx
  424017:	loop   0x424060
  424019:	add    DWORD PTR ds:0xbe6f5388,edi
  42401f:	pop    es
  424020:	inc    edi
  424021:	ja     0x423fe1
  424023:	pop    es
  424024:	rol    BYTE PTR [ecx],cl
  424026:	test   eax,0x1569805d
  42402b:	pop    esp
  42402c:	or     edx,edi
  42402e:	add    DWORD PTR [ebx+0x75],edx
  424031:	ja     0x423fd8
  424033:	and    edx,DWORD PTR [edi+0xc]
  424036:	jnp    0x4240ab
  424038:	daa    
  424039:	loop   0x423fda
  42403b:	test   ch,bh
  42403d:	or     dh,dh
  42403f:	outs   dx,DWORD PTR ds:[esi]
  424040:	sbb    ecx,DWORD PTR [edx*4+0x27b45542]
  424047:	mov    bl,0xcf
  424049:	inc    edi
  42404a:	fbstp  TBYTE PTR [ebx+0x84155ec]
  424050:	int    0x70
  424052:	jecxz  0x42400a
  424054:	or     ecx,DWORD PTR [ecx]
  424056:	aas    
  424057:	cld    
  424058:	sar    bl,0x2e
  42405b:	clc    
  42405c:	std    
  42405d:	repnz mov ebp,0xb4
	...
  424087:	add    BYTE PTR [ecx+ecx*2+0x70a50821],ah
  42408e:	imul   esi,DWORD PTR [esi+0xfff090b],0xffffff91
  424095:	sti    
  424096:	push   es
  424097:	test   eax,0x3efc6f1
  42409c:	push   ds
  42409d:	xchg   edx,eax
  42409e:	or     al,0xb3
  4240a0:	or     al,0x58
  4240a2:	bound  edi,QWORD PTR [esi-0x7bb6fb4]
  4240a8:	mov    edi,0x14b2df55
  4240ad:	icebp  
  4240ae:	and    al,0x8
  4240b0:	pop    ebp
  4240b1:	sti    
  4240b2:	aas    
  4240b3:	add    BYTE PTR [eax],0x4a
  4240b6:	out    0x78,eax
  4240b8:	pop    es
  4240b9:	add    DWORD PTR [eax],ebx
  4240bb:	sbb    al,0x3d
  4240bd:	(bad)  
  4240be:	mov    dh,0x7
  4240c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240c1:	add    eax,0x8e34c51c
  4240c6:	sub    al,0xc
  4240c8:	jl     0x4240bb
  4240ca:	nop
  4240cb:	or     BYTE PTR ds:0x8f7ffffb,ah
  4240d1:	dec    eax
  4240d2:	out    0x78,eax
  4240d4:	pop    DWORD PTR [ecx]
  4240d6:	sbb    BYTE PTR [ecx+esi*8],bl
  4240d9:	std    
  4240da:	jle    0x4240e3
  4240dc:	cdq    
  4240dd:	mov    WORD PTR [eax],es
  4240df:	sub    al,0x4f
  4240e1:	dec    edx
  4240e2:	call   0xfe3d8452
  4240e7:	ret    0xee6f
  4240ea:	pop    ebx
  4240eb:	sub    eax,DWORD PTR [eax]
	...
  424111:	add    BYTE PTR [eax],al
  424113:	add    bh,ah
  424115:	cli    
  424116:	push   esp
  424117:	pusha  
  424118:	sub    al,BYTE PTR [edi+0x5499f9ec]
  42411e:	mov    DWORD PTR [eax+edx*8+0x43ed738f],esp
  424125:	inc    ebp
  424126:	clc    
  424127:	cdq    
  424128:	stc    
  424129:	loop   0x424125
  42412b:	xor    cl,BYTE PTR [ebx+edi*8-0x75]
  42412f:	lods   al,BYTE PTR ds:[esi]
  424130:	pop    eax
  424131:	dec    edx
  424132:	sub    DWORD PTR [edx],0x4e857a7
  424138:	push   eax
  424139:	sti    
  42413a:	std    
  42413b:	adc    DWORD PTR [esi+ecx*2],0x4513e93f
  424142:	clc    
  424143:	cdq    
  424144:	pusha  
  424145:	xchg   ebx,eax
  424146:	cld    
  424147:	test   BYTE PTR [ebp+0x62],0x84
  42414b:	popf   
  42414c:	(bad)  
  42414d:	cli    
  42414e:	mov    WORD PTR [edi+edx*2],gs
  424151:	dec    edx
  424152:	call   0xfe3d8dc7
  424157:	bound  esi,QWORD PTR [ebx+0x3f2489fe]
  42415d:	xchg   ecx,eax
  42415e:	inc    ebx
  42415f:	vsubsd xmm6,xmm6,xmm0
  424163:	push   ecx
  424164:	dec    ebx
  424165:	dec    esp
  424166:	aas    
  424167:	jmp    0x1a3a872f
  42416c:	push   edi
  42416d:	imul   edi,esp,0xffffffa6
  424170:	inc    ebp
  424171:	bound  eax,QWORD PTR [esp+ebp*1]
  424174:	push   cs
  424175:	cli    
  424176:	mov    WORD PTR [eax+eax*1],gs
	...
  42419d:	add    BYTE PTR [eax],al
  42419f:	add    BYTE PTR [edi],dh
  4241a1:	dec    edx
  4241a2:	call   0xfe3d84af
  4241a7:	add    BYTE PTR [ecx+0x2f8bf9b1],bl
  4241ad:	adc    eax,0x7d764588
  4241b2:	pop    esp
  4241b3:	lock dec edx
  4241b5:	mov    DWORD PTR [ecx+eax*2-0x1e],ecx
  4241b9:	add    BYTE PTR [eax+edi*8-0x5e],0x1d
  4241be:	inc    esi
  4241bf:	cld    
  4241c0:	jne    0x4241c5
  4241c2:	test   BYTE PTR gs:[edi-0x6073023c],dh
  4241c9:	adc    eax,0x114be84d
  4241ce:	(bad)  
  4241cf:	(bad)  
  4241d0:	fadd   QWORD PTR [eax+0x1dd2f844]
  4241d6:	(bad)  
  4241d8:	add    eax,DWORD PTR gs:[edx-0x7354653a]
  4241df:	inc    ebp
  4241e0:	inc    edx
  4241e1:	mov    dh,0xe5
  4241e3:	sar    DWORD PTR [ecx],cl
  4241e5:	add    edi,esi
  4241e7:	pop    esi
  4241e8:	jmp    0x30a02b69
  4241ed:	(bad)  
  4241ee:	std    
  4241ef:	push   esp
  4241f0:	jmp    0x42421a
  4241f2:	sub    ah,0x16
  4241f5:	add    eax,0xab310000
  4241fa:	push   esi
  4241fb:	mov    esp,DWORD PTR [edi]
  4241fd:	std    
  4241fe:	mov    dh,BYTE PTR [ebp+0x66]
  424201:	jb     0x424187
  424203:	add    BYTE PTR [eax],0x0
	...
  42422a:	add    BYTE PTR [eax],al
  42422c:	test   BYTE PTR [ebx],al
  42422e:	(bad)  
  42422f:	push   eax
  424230:	jp     0x424273
  424232:	add    BYTE PTR [eax],al
  424234:	xor    dl,BYTE PTR [ebx-0x40d19803]
  42423a:	inc    eax
  42423b:	add    BYTE PTR [edx],cl
  42423d:	jge    0x42423a
  42423f:	jmp    ebp
  424241:	fmul   st(7),st
  424243:	mov    dh,BYTE PTR [eax+0x4b414e09]
  424249:	loop   0x4242c4
  42424b:	add    ebx,DWORD PTR [ecx+0x24]
  42424e:	jg     0x424249
  424250:	inc    ebx
  424251:	push   cs
  424252:	adc    esi,eax
  424254:	into   
  424255:	or     al,BYTE PTR [esi]
  424257:	(bad)  
  424258:	cld    
  424259:	loope  0x42425c
  42425b:	add    BYTE PTR [ebx-0x75],cl
  42425e:	mov    al,0x88
  424260:	sti    
  424261:	jns    0x4242e0
  424263:	jae    0x42424a
  424265:	push   edi
  424266:	add    esi,DWORD PTR [eax]
  424268:	stc    
  424269:	dec    ebx
  42426a:	aam    0x8a
  42426c:	into   
  42426d:	fiadd  WORD PTR [ebx]
  42426f:	dec    ah
  424271:	jns    0x4242f0
  424273:	jnp    0x42423a
  424275:	aaa    
  424276:	add    edi,esi
  424278:	(bad)  
  424279:	mov    dh,0x3
  42427b:	(bad)  
  42427c:	mov    ah,0x6b
  42427e:	jne    0x4242fb
  424280:	lods   eax,DWORD PTR ds:[esi]
  424281:	das    
  424282:	add    ecx,DWORD PTR [esi]
  424284:	in     eax,0xe3
  424286:	sbb    bh,0x1c
  424289:	imul   eax,DWORD PTR [ebp+0x7b],0xffffff95
  42428d:	pop    es
  42428e:	add    ecx,DWORD PTR [esi]
	...
  4242b8:	aad    0xcf
  4242ba:	shl    bh,cl
  4242bc:	shl    ecx,cl
  4242be:	cmp    eax,DWORD PTR [edx]
  4242c0:	dec    ebx
  4242c1:	mov    ds:0xea7182bf,eax
  4242c6:	xchg   BYTE PTR [ebx+ecx*8],al
  4242c9:	sub    eax,DWORD PTR [esi*2-0x1851bf73]
  4242d0:	lock fild WORD PTR [esi+edi*8]
  4242d4:	enter  0x898d,0xfd
  4242d8:	dec    esp
  4242d9:	iret   
  4242da:	add    DWORD PTR [eax-0x59711d80],eax
  4242e0:	enter  0x897c,0xfd
  4242e4:	xor    al,0xa7
  4242e6:	add    DWORD PTR [ebp-0x33],esi
  4242e9:	or     BYTE PTR [esi+edi*2-0x5c],dh
  4242ed:	neg    DWORD PTR [esi+0xee18c04]
  4242f3:	add    ecx,DWORD PTR [ebx+0x9]
  4242f6:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4242f8:	jno    0x42427c
  4242fa:	xchg   ebx,eax
  4242fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242fc:	or     al,BYTE PTR [ecx]
  4242fe:	out    0xae,eax
  424300:	shr    ebp,cl
  424302:	push   0xe709c017
  424307:	add    ebx,DWORD PTR [eax-0x788741a1]
  42430d:	add    DWORD PTR [edx-0x72],esi
  424310:	push   eax
  424311:	xchg   BYTE PTR [ebx+eax*4-0x2a],ch
  424315:	test   DWORD PTR [esi-0x4d],0x3e7f7e4
	...
  424344:	dec    ebx
  424345:	arpl   di,sp
  424347:	fwait
  424348:	dec    eax
  424349:	inc    edi
  42434a:	test   al,0x3
  42434c:	mov    ds:0xad042cdb,eax
  424351:	cmp    DWORD PTR [ecx],edi
  424353:	jns    0x42431f
  424355:	or     al,0xad
  424357:	ret    0x8f9c
  42435a:	jmp    0x42432d
  42435c:	or     cl,BYTE PTR [ecx+edx*1+0x2efa10f3]
  424363:	jle    0x424361
  424365:	idiv   dh
  424367:	add    ecx,DWORD PTR [ebx+0x9]
  42436a:	out    0x3,eax
  42436c:	pusha  
  42436d:	pop    esp
  42436e:	pusha  
  42436f:	adc    eax,ebx
  424371:	lea    ebx,[ebx+0x2]
  424374:	neg    DWORD PTR gs:[eax]
  424377:	(bad)  
  424378:	jb     0x4243b2
  42437a:	bound  ecx,QWORD PTR [ecx+0x3cef6df]
  424380:	ret    
  424381:	lea    eax,[ebx+0x2]
  424384:	inc    ebp
  424385:	idiv   DWORD PTR [esi+0xf7b789]
  42438b:	mov    dh,0x48
  42438d:	or     DWORD PTR [ebx-0x208b6d3],0xfffffff6
  424394:	or     cl,BYTE PTR [ecx]
  424396:	or     DWORD PTR [ecx+0x15bb80c8],0xdefdf749
  4243a0:	shl    BYTE PTR [edi+ebp*1],cl
  4243a3:	adc    edi,0xeac3f6
	...
  4243cd:	add    BYTE PTR [eax],al
  4243cf:	add    BYTE PTR [eax+0x48],cl
  4243d2:	inc    edx
  4243d3:	push   0xfffffff5
  4243d5:	sbb    DWORD PTR [ebx-0x1c],edi
  4243d8:	enter  0x30,0xdc
  4243dc:	adc    ah,BYTE PTR [eax+0x56]
  4243df:	push   ecx
  4243e0:	dec    ecx
  4243e1:	cmc    
  4243e2:	std    
  4243e3:	push   esi
  4243e4:	int3   
  4243e5:	stos   BYTE PTR es:[edi],al
  4243e6:	js     0x424437
  4243e8:	dec    eax
  4243e9:	test   DWORD PTR [eax],0x73098469
  4243ef:	xchg   ah,al
  4243f1:	mov    dl,0x78
  4243f3:	aaa    
  4243f4:	dec    eax
  4243f5:	test   DWORD PTR [eax],0x8382eab4
  4243fb:	imul   ecx,DWORD PTR [ecx-0x9],0xaeb0b9fd
  424402:	add    cl,ch
  424404:	dec    eax
  424405:	push   esp
  424406:	pop    esi
  424407:	mov    dl,0xbf
  424409:	in     eax,0x5b
  42440b:	sub    edx,DWORD PTR [edi+0x9]
  42440e:	push   ecx
  42440f:	xchg   edi,eax
  424410:	and    DWORD PTR [eax+0x6f58cd44],eax
  424416:	mov    DWORD PTR [ebp+0x6c661d24],ecx
  42441c:	test   DWORD PTR [edx+0x9],edi
  42441f:	jo     0x4243b3
  424421:	cmp    BYTE PTR [eax-0x7],0xe2
  424425:	mov    dl,0xff
  424427:	call   0xcd4589
  42442c:	sbb    BYTE PTR ds:0x3c84c785,0xd2
  424433:	sldt   WORD PTR [eax]
	...
  42445a:	add    BYTE PTR [eax],al
  42445c:	mov    ch,0xdc
  42445e:	push   edx
  42445f:	and    edx,0x1
  424462:	push   eax
  424463:	call   0x3e381e
  424468:	cmp    al,BYTE PTR [ecx]
  42446a:	dec    ecx
  42446b:	inc    ecx
  42446c:	and    ah,dl
  42446e:	cmp    bh,cl
  424470:	mov    ebp,0xa9b70e0a
  424475:	pop    esi
  424476:	push   ebx
  424477:	call   0x3e377e
  42447c:	dec    edx
  42447d:	or     DWORD PTR [ecx+0x41],0xf926e1e2
  424484:	ins    DWORD PTR es:[edi],dx
  424485:	or     ecx,DWORD PTR [esi]
  424487:	mov    bh,0x89
  424489:	pop    edi
  42448a:	push   esi
  42448b:	call   0x3e372e
  424490:	popf   
  424491:	addr16 push edi
  424493:	ret    0x9ba
  424496:	dec    edi
  424497:	mov    ebx,esi
  424499:	sub    eax,0x70a5308
  42449e:	cmc    
  42449f:	call   FWORD PTR [ebp-0x73]
  4244a2:	mov    edi,0x9b280
  4244a7:	mov    eax,0x3d58a6
  4244ac:	sub    DWORD PTR [edx],ebx
  4244ae:	test   DWORD PTR [ebx],edx
  4244b0:	and    edx,ecx
  4244b2:	add    al,0x83
  4244b4:	xor    DWORD PTR [esi],ecx
  4244b6:	cmp    DWORD PTR [edi+ebp*4+0x4d72004c],eax
  4244bd:	mov    dl,0x84
  4244bf:	dec    ebp
	...
  4244e8:	mov    ds:0xdb108709,eax
  4244ed:	sbb    edi,DWORD PTR [edi-0x40]
  4244f0:	data16 mov WORD PTR [edi+0x81d4b04],?
  4244f7:	dec    esi
  4244f8:	or     ah,al
  4244fa:	jae    0x4244e9
  4244fc:	mov    al,ds:0x980008a0
  424501:	ja     0x424563
  424503:	and    al,0x43
  424505:	paddsb mm5,mm0
  424508:	xor    esp,DWORD PTR [edi+edi*8+0x463087f]
  42450f:	add    BYTE PTR [ebx+0x6a],cl
  424512:	or     BYTE PTR [ebx-0x76],cl
  424515:	loop   0x4244a3
  424517:	adc    edx,eax
  424519:	repnz test cl,al
  42451c:	dec    edi
  42451d:	pop    edi
  42451e:	les    eax,FWORD PTR [esi+edi*1]
  424521:	outs   dx,BYTE PTR ds:[esi]
  424522:	dec    ebp
  424523:	aas    
  424524:	dec    ebx
  424525:	lock lock mov eax,0x4115c7
  42452c:	shr    bh,1
  42452e:	mov    dl,BYTE PTR [eax]
  424530:	enter  0x81f,0x81
  424534:	or     esp,edi
  424536:	ds add al,0x7d
  424539:	mov    eax,ds:0xa7b47201
  42453e:	ret    
  42453f:	add    al,0x4b
  424541:	popf   
  424542:	mov    ah,bl
  424544:	enter  0x1c4e,0x51
  424548:	adc    eax,0x85d67
	...
  424571:	add    BYTE PTR [eax],al
  424573:	add    al,dl
  424575:	xchg   ebp,eax
  424576:	or     eax,0x542a068b
  42457b:	push   ecx
  42457c:	mov    ds:0x8cfdfc0d,eax
  424581:	push   ebp
  424582:	inc    ebp
  424583:	lock sbb edi,DWORD PTR [ebp+0x43]
  424587:	or     BYTE PTR [ebx],bl
  424589:	sbb    ah,ah
  42458b:	clc    
  42458c:	je     0x424589
  42458e:	mov    es,WORD PTR [ebx+0x63]
  424591:	xchg   edx,eax
  424592:	test   cl,al
  424594:	cmp    ecx,DWORD PTR [ecx]
  424596:	cmp    ch,ah
  424598:	jp     0x42458b
  42459a:	fiadd  WORD PTR [eax]
  42459c:	loop   0x42452a
  42459e:	and    eax,DWORD PTR [ebx+0x4b]
  4245a1:	xchg   BYTE PTR [esp+edi*8],ah
  4245a4:	fwait
  4245a5:	loope  0x4245eb
  4245a7:	sti    
  4245a8:	ds hlt 
  4245aa:	dec    edi
  4245ab:	mov    BYTE PTR [edi-0x777118b6],al
  4245b1:	stc    
  4245b2:	pop    ss
  4245b3:	in     al,dx
  4245b4:	mov    dh,0xf2
  4245b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245b7:	add    BYTE PTR [edx+0x4b432b8d],dh
  4245bd:	xchg   BYTE PTR [esp+ebp*8],ch
  4245c0:	jnp    0x4245a3
  4245c2:	or     bl,bh
  4245c4:	push   es
  4245c5:	hlt    
  4245c6:	jb     0x424626
  4245c8:	(bad)  
  4245c9:	jg     0x4245ef
  4245cb:	hlt    
  4245cc:	int3   
  4245cd:	dec    ebp
  4245ce:	jae    0x42455a
  4245d0:	nop
  4245d1:	stc    
  4245d2:	bound  ebx,QWORD PTR [esi-0x21]
  4245d5:	jg     0x424583
  4245d7:	jmp    0x4245d9
	...
  4245fd:	add    BYTE PTR [eax],al
  4245ff:	add    ah,al
  424601:	dec    ebp
  424602:	push   ebx
  424603:	mov    dh,BYTE PTR [eax-0x1f]
  424606:	mov    edi,0xe74a8007
  42460b:	mov    cs,WORD PTR [eax]
  42460d:	icebp  
  42460e:	xchg   edi,eax
  42460f:	jmp    0x424593
  424611:	repnz add BYTE PTR ds:[edx],ah
  424615:	or     eax,0x864b42a4
  42461a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42461b:	repz sti 
  42461d:	loopne 0x4245f3
  42461f:	cli    
  424620:	sahf   
  424621:	repz pop DWORD PTR [edi]
  424624:	add    BYTE PTR [edx-0x19],cl
  424627:	mov    cs,WORD PTR [eax]
  424629:	loope  0x4245e2
  42462b:	jmp    0x424693
  42462d:	repnz push es
  42462f:	add    cl,dl
  424631:	push   ebp
  424632:	sti    
  424633:	mov    ecx,DWORD PTR [eax]
  424635:	stc    
  424636:	add    BYTE PTR [eax+0x5],ah
  424639:	cmc    
  42463a:	xchg   DWORD PTR [eax+ebx*2-0x2f22a47f],ecx
  424641:	inc    edi
  424642:	call   0x883f48b7
  424647:	xor    al,0x5f
  424649:	pusha  
  42464a:	test   BYTE PTR [esi+ecx*4],bl
  42464d:	or     DWORD PTR [ebx-0x17a5c0d4],ecx
  424653:	shl    BYTE PTR [edi],0xf5
  424656:	std    
  424657:	inc    ecx
  424658:	ret    
  424659:	ds aas 
  42465b:	jmp    0x3a328d1b
  424660:	das    
  424661:	loope  0x42465b
  424663:	sahf   
	...
  42468c:	adc    al,0x62
  42468e:	test   BYTE PTR [esi+eax*4],ah
  424691:	or     DWORD PTR [ebx-0x17a608dc],ecx
  424697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424698:	push   esp
  42469a:	std    
  42469b:	pop    ss
  42469c:	fiadd  DWORD PTR [esi-0x8]
  42469f:	sbb    edi,ebx
  4246a1:	(bad)  
  4246a2:	clc    
  4246a3:	outs   dx,BYTE PTR ds:[esi]
  4246a4:	in     al,0x7e
  4246a6:	inc    esi
  4246a7:	icebp  
  4246a8:	js     0x424728
  4246aa:	inc    ebx
  4246ab:	pop    ecx
  4246ac:	jg     0x42468f
  4246ae:	jne    0x424701
  4246b0:	int3   
  4246b1:	hlt    
  4246b2:	and    DWORD PTR [edi],0xac8b5b5f
  4246b8:	mov    al,0x59
  4246ba:	call   0xfe36f792
  4246bf:	xchg   edi,eax
  4246c0:	adc    DWORD PTR [edx+0x18a8cec],ecx
  4246c6:	add    BYTE PTR [edi+ecx*8-0x44f2801a],bh
  4246cd:	repnz std 
  4246cf:	jmp    0x6297a1cd
  4246d4:	jmp    0x8901:0xff008900
  4246db:	test   edx,esp
  4246dd:	repnz sti 
  4246df:	call   edx
  4246e1:	ficom  WORD PTR [esi+edi*8+0x75]
  4246e5:	repz push 0x0
  4246e8:	cli    
  4246e9:	add    BYTE PTR [esi+0x41],cl
  4246ec:	(bad)  
  4246ed:	fsubrp st(5),st
  4246ef:	std    
	...
  424718:	jne    0x42470d
  42471a:	sub    eax,0x488a8d2
  42471f:	dec    esi
  424720:	jae    0x42472f
  424722:	mov    BYTE PTR [eax+esi*1],al
  424725:	dec    eax
  424726:	jg     0x424722
  424728:	sbb    dh,BYTE PTR [edx-0x13]
  42472b:	(bad)  
  42472c:	scas   eax,DWORD PTR es:[edi]
  42472d:	outs   dx,BYTE PTR ds:[esi]
  42472e:	(bad)  
  42472f:	jmp    ebp
  424731:	or     al,0x0
  424733:	add    BYTE PTR [edx],ah
  424735:	fist   WORD PTR [ecx+ecx*4-0x4e]
  424739:	test   BYTE PTR [ecx-0x40d2b8c],al
  42473f:	xor    eax,esp
  424741:	fidiv  WORD PTR [eax]
  424743:	mov    ebp,DWORD PTR [edi+0x7a]
  424746:	(bad)  
  424747:	push   DWORD PTR [ebp-0x7b]
  42474a:	cmp    DWORD PTR [esp+esi*2-0xd],0x7a6ffffb
  424752:	(bad)  
  424753:	push   DWORD PTR [ebp+0x7f]
  424756:	mov    DWORD PTR [esp+esi*2-0xd],edi
  42475a:	sti    
  42475b:	paddq  mm0,QWORD PTR [esi]
  42475e:	jg     0x424740
  424760:	test   DWORD PTR [esi-0x47],edi
  424763:	jl     0x4247d9
  424765:	repz sti 
  424767:	cvttps2pi mm6,QWORD PTR [ebx]
  42476a:	sub    eax,0xc60d2af8
  42476f:	add    esi,DWORD PTR [edx+0x68834246]
  424775:	push   cs
  424776:	jns    0x42477d
  424778:	dec    ebx
  424779:	pusha  
  42477a:	cmp    al,BYTE PTR [eax]
	...
  4247a4:	(bad)  
  4247a5:	sub    DWORD PTR [ebx+0x56],edx
  4247a8:	jae    0x424829
  4247aa:	sti    
  4247ab:	std    
  4247ac:	je     0x42480c
  4247ae:	test   al,0x78
  4247b0:	ins    DWORD PTR es:[edi],dx
  4247b1:	cli    
  4247b2:	sti    
  4247b3:	add    bl,cl
  4247b5:	mov    dh,0x1
  4247b7:	jae    0x42475d
  4247b9:	pop    esi
  4247ba:	mov    ebp,0xfbd25578
  4247bf:	add    dh,dl
  4247c1:	jns    0x424750
  4247c3:	or     ebx,0xffffffc0
  4247c6:	sti    
  4247c7:	std    
  4247c8:	(bad)  
  4247cb:	sti    
  4247cc:	xor    al,0xb0
  4247ce:	pop    ebx
  4247cf:	pop    esi
  4247d0:	nop
  4247d1:	imul   esi,eax,0x1eb095b
  4247d7:	push   ebx
  4247d8:	sar    BYTE PTR [ebp+0x54],cl
  4247db:	push   eax
  4247dc:	js     0x424816
  4247de:	xchg   DWORD PTR [ebx+0x43],edx
  4247e1:	imul   ebx,DWORD PTR [ebp+0xc],0xffffffd0
  4247e5:	adc    eax,0x7d122f14
  4247ea:	or     BYTE PTR [edi],cl
  4247ec:	ret    
  4247ed:	es or  eax,0x12dec1f8
  4247f3:	mov    BYTE PTR [edi-0x27],cl
  4247f6:	inc    edx
  4247f7:	and    edx,0x78eb7dfa
  4247fd:	mov    ah,0xe9
  4247ff:	lods   al,BYTE PTR ds:[esi]
  424800:	rcl    DWORD PTR [edi-0x5],1
  424803:	das    
  424804:	cdq    
  424805:	dec    ebp
  424806:	adc    BYTE PTR [edx],bl
	...
  424830:	rcr    esi,1
  424832:	das    
  424833:	xor    cl,BYTE PTR [edx+0x7a]
  424836:	add    DWORD PTR [edx-0x38],eax
  424839:	cmp    al,0xc
  42483b:	jl     0x4247d8
  42483d:	icebp  
  42483e:	iret   
  42483f:	mov    al,BYTE PTR [edi]
  424841:	or     esp,edi
  424843:	sti    
  424844:	ret    
  424845:	add    eax,0xf3ca41d9
  42484a:	fistp  QWORD PTR [edi+0x7a]
  42484d:	dec    edi
  42484e:	mov    dl,0x8a
  424850:	outs   dx,DWORD PTR ds:[esi]
  424851:	dec    esi
  424852:	sub    DWORD PTR [eax],edx
  424854:	dec    ebx
  424855:	or     edi,esp
  424857:	add    ecx,DWORD PTR [ebx+0x9]
  42485a:	out    0x3,eax
  42485c:	dec    ebx
  42485d:	or     edi,esp
  42485f:	add    ecx,DWORD PTR [ebx+0x9]
  424862:	out    0x3,eax
  424864:	dec    ebx
  424865:	or     edi,esp
  424867:	add    ecx,DWORD PTR [ebx+0x9]
  42486a:	out    0x3,eax
  42486c:	dec    ebx
  42486d:	or     edi,esp
  42486f:	add    ecx,DWORD PTR [ebx+0x9]
  424872:	out    0x3,eax
  424874:	dec    ebx
  424875:	or     edi,esp
  424877:	add    ecx,DWORD PTR [ebx+0x9]
  42487a:	out    0x3,eax
  42487c:	dec    ebx
  42487d:	or     edi,esp
  42487f:	add    ecx,DWORD PTR [ebx+0x9]
  424882:	out    0x3,eax
  424884:	dec    ebx
  424885:	or     edi,esp
  424887:	add    ecx,DWORD PTR [ebx+0x9]
  42488a:	out    0x3,eax
  42488c:	dec    ebx
  42488d:	or     edi,esp
  42488f:	add    ecx,DWORD PTR [ebx+0x9]
  424892:	out    0x3,eax
	...
  4248bc:	dec    ebx
  4248bd:	or     edi,esp
  4248bf:	add    ecx,DWORD PTR [ebx+0x9]
  4248c2:	out    0x3,eax
  4248c4:	dec    ebx
  4248c5:	or     edi,esp
  4248c7:	add    ecx,DWORD PTR [ebx+0x9]
  4248ca:	out    0x3,eax
  4248cc:	dec    ebx
  4248cd:	or     edi,esp
  4248cf:	add    ecx,DWORD PTR [ebx+0x9]
  4248d2:	out    0x3,eax
  4248d4:	dec    ebx
  4248d5:	or     edi,esp
  4248d7:	add    ecx,DWORD PTR [ebx+0x9]
  4248da:	out    0x3,eax
  4248dc:	dec    ebx
  4248dd:	or     edi,esp
  4248df:	add    ecx,DWORD PTR [ebx+0x9]
  4248e2:	add    cl,ch
  4248e4:	dec    eax
  4248e5:	or     DWORD PTR [eax],eax
  4248e7:	jmp    0xe9425234
  4248ec:	dec    eax
  4248ed:	or     DWORD PTR [eax],eax
  4248ef:	jmp    0xe442523c
  4248f4:	push   edx
  4248f5:	add    al,0xa
  4248f7:	mov    BYTE PTR [eax],bl
  4248f9:	cmp    eax,0x77288b67
  4248fe:	das    
  4248ff:	iret   
  424900:	cmp    BYTE PTR [eax],ah
  424902:	and    cl,cl
  424904:	xor    eax,0xf0752029
  424909:	imul   esp,DWORD PTR [eax],0x5a
  42490c:	loop   0x42495d
  42490e:	ins    BYTE PTR es:[edi],dx
  42490f:	dec    ebp
  424910:	jmp    0x206a:0xb75d207a
  424917:	dec    ebx
  424918:	stos   BYTE PTR es:[edi],al
  424919:	jne    0x42498f
  42491b:	dec    esp
  42491c:	mov    ebp,0x103a29
	...
  424945:	add    BYTE PTR [eax],al
  424947:	add    BYTE PTR [edx+0x3],al
  42494a:	inc    ecx
  42494b:	inc    esi
  42494c:	lahf   
  42494d:	jbe    0x4249c1
  42494f:	inc    eax
  424950:	test   al,0x61
  424952:	je     0x42491d
  424954:	pusha  
  424955:	push   0x3657c927
  42495a:	aaa    
  42495b:	shl    DWORD PTR [ebx],1
  42495d:	cmp    esi,DWORD PTR [eax]
  42495f:	fnstcw WORD PTR [edi]
  424961:	sub    DWORD PTR [edx+0x0],esp
  424964:	das    
  424965:	inc    ebx
  424966:	ins    DWORD PTR es:[edi],dx
  424967:	add    al,0x75
  424969:	arpl   WORD PTR fs:[edi],ax
  42496c:	das    
  42496d:	inc    esi
  42496e:	(bad)  
  42496f:	cli    
  424970:	imul   ebx,DWORD PTR [edi+0x2c],0x9
  424974:	mov    ds,WORD PTR [ebp+0x6c]
  424977:	or     DWORD PTR [ebp+0x66],esi
  42497a:	shl    DWORD PTR gs:[eax+edi*2],0x20
  42497f:	mov    ebx,0x63782b
  424984:	lock js 0x4249e8
  424987:	fs cmp al,0x0
  42498a:	or     cl,BYTE PTR ds:0x726b41a8
  424990:	xchg   DWORD PTR [edx],ebp
  424992:	outs   dx,BYTE PTR gs:[esi]
  424994:	les    esp,FWORD PTR [ebx+0x72]
  424997:	ins    DWORD PTR es:[edi],dx
  424998:	ret    
  424999:	pop    esi
  42499a:	outs   dx,DWORD PTR gs:[esi]
  42499c:	int3   
  42499d:	sub    al,0x20
  42499f:	push   0x3a705ed6
  4249a4:	popf   
  4249a5:	and    esi,DWORD PTR [ebx+0x77]
  4249a8:	cmc    
  4249a9:	pop    ds
  4249aa:	bound  eax,QWORD PTR gs:[eax]
	...
  4249d1:	add    BYTE PTR [eax],al
  4249d3:	add    cl,ah
  4249d5:	push   0x67dd736e
  4249da:	je     0x424a53
  4249dc:	add    esi,DWORD PTR [edi+0x61]
  4249df:	add    DWORD PTR cs:[edx+0x69],esp
  4249e3:	das    
  4249e4:	das    
  4249e5:	cld    
  4249e6:	or     BYTE PTR [edx],cl
  4249e8:	xor    cl,BYTE PTR [edx]
  4249ea:	add    BYTE PTR [eax],al
  4249ec:	and    cl,BYTE PTR [edx]
  4249ee:	add    BYTE PTR [eax],al
  4249f0:	and    cl,BYTE PTR [edx]
  4249f2:	add    BYTE PTR [eax],al
  4249f4:	xor    cl,BYTE PTR [edx]
  4249f6:	add    BYTE PTR [eax],al
  4249f8:	xor    cl,BYTE PTR [edx]
  4249fa:	add    BYTE PTR [eax],al
  4249fc:	and    cl,BYTE PTR [edx]
  4249fe:	add    BYTE PTR [eax],al
  424a00:	and    cl,BYTE PTR [edx]
  424a02:	add    BYTE PTR [eax],al
  424a04:	repnz or DWORD PTR [eax],eax
  424a07:	add    dl,dh
  424a09:	or     DWORD PTR [eax],eax
  424a0b:	add    dl,ah
  424a0d:	or     DWORD PTR [eax],eax
  424a0f:	add    dl,ah
  424a11:	or     DWORD PTR [eax],eax
  424a13:	add    dl,dh
  424a15:	or     DWORD PTR [eax],eax
  424a17:	add    dl,dh
  424a19:	or     DWORD PTR [eax],eax
  424a1b:	add    dl,ah
  424a1d:	or     DWORD PTR [eax],eax
  424a1f:	add    dl,ah
  424a21:	or     DWORD PTR [eax],eax
  424a23:	add    BYTE PTR [ebx-0x6b],cl
  424a26:	mov    dl,0x4e
  424a28:	xor    BYTE PTR [ecx],ah
  424a2a:	and    BYTE PTR [ebx],ch
  424a2c:	dec    edi
  424a2d:	cs iret 
  424a2f:	push   esp
  424a30:	lahf   
  424a31:	or     al,0xa3
  424a33:	bound  esi,QWORD PTR [esi-0x39]
  424a36:	or     BYTE PTR [ecx],0x0
	...
  424a5d:	add    BYTE PTR [eax],al
  424a5f:	add    ah,dh
  424a61:	in     al,dx
  424a62:	or     ecx,DWORD PTR [eax]
  424a64:	cmp    bl,BYTE PTR [edx+ecx*1+0x7bb7a768]
  424a6b:	push   ecx
  424a6c:	aad    0xdf
  424a6e:	add    DWORD PTR [eax],eax
  424a70:	dec    ebx
  424a71:	loopne 0x424a74
  424a73:	add    BYTE PTR [ebx-0x20],cl
  424a76:	add    DWORD PTR [eax],eax
  424a78:	dec    ebx
  424a79:	loopne 0x424a7c
  424a7b:	add    BYTE PTR [ebx-0x20],cl
  424a7e:	add    DWORD PTR [eax],eax
  424a80:	dec    ebx
  424a81:	loopne 0x424a84
  424a83:	add    BYTE PTR [ebx-0x20],cl
  424a86:	add    DWORD PTR [eax],eax
  424a88:	dec    ebx
  424a89:	loopne 0x424a8c
  424a8b:	add    BYTE PTR [ebx-0x1e],cl
  424a8e:	add    DWORD PTR [eax],eax
  424a90:	dec    ebx
  424a91:	loop   0x424a94
  424a93:	add    BYTE PTR [ebx-0x1e],cl
  424a96:	add    DWORD PTR [eax],eax
  424a98:	dec    ebx
  424a99:	loop   0x424a9c
  424a9b:	add    BYTE PTR [ebx-0x1e],cl
  424a9e:	add    DWORD PTR [eax],eax
  424aa0:	dec    ebx
  424aa1:	loop   0x424aa4
  424aa3:	add    BYTE PTR [ebx-0x1e],cl
  424aa6:	add    DWORD PTR [eax],eax
  424aa8:	dec    ebx
  424aa9:	loop   0x424aac
  424aab:	add    BYTE PTR [ebx-0x1e],cl
  424aae:	add    DWORD PTR [eax],eax
  424ab0:	dec    ebx
  424ab1:	loop   0x424ab4
  424ab3:	add    BYTE PTR [ebx-0x1e],cl
  424ab6:	add    DWORD PTR [eax],eax
  424ab8:	dec    ebx
  424ab9:	loop   0x424abc
  424abb:	add    BYTE PTR [ebx-0x1e],cl
  424abe:	add    DWORD PTR [eax],eax
  424ac0:	dec    ebx
  424ac1:	loop   0x424ac4
	...
  424aeb:	add    BYTE PTR [ebx+0x9],cl
  424aee:	out    0x3,eax
  424af0:	dec    ebx
  424af1:	or     edi,esp
  424af3:	add    ecx,DWORD PTR [ebx+0x9]
  424af6:	out    0x3,eax
  424af8:	dec    ebx
  424af9:	or     edi,esp
  424afb:	add    ecx,DWORD PTR [ebx+0x9]
  424afe:	out    0x3,eax
  424b00:	dec    ebx
  424b01:	or     edi,esp
  424b03:	add    ecx,DWORD PTR [ebx+0x9]
  424b06:	out    0x3,eax
  424b08:	dec    ebx
  424b09:	or     edi,esp
  424b0b:	add    ecx,DWORD PTR [ebx+0x9]
  424b0e:	out    0x3,eax
  424b10:	dec    ebx
  424b11:	or     edi,esp
  424b13:	add    ecx,DWORD PTR [ebx+0x9]
  424b16:	out    0x3,eax
  424b18:	dec    ebx
  424b19:	or     edi,esp
  424b1b:	add    ecx,DWORD PTR [ebx+0x9]
  424b1e:	out    0x3,eax
  424b20:	dec    ebx
  424b21:	or     edi,esp
  424b23:	add    ecx,DWORD PTR [ebx+0x9]
  424b26:	out    0x3,eax
  424b28:	dec    ebx
  424b29:	or     edi,esp
  424b2b:	add    ecx,DWORD PTR [ebx+0x9]
  424b2e:	out    0x3,eax
  424b30:	dec    ebx
  424b31:	or     edi,esp
  424b33:	add    ecx,DWORD PTR [ebx+0x9]
  424b36:	out    0x3,eax
  424b38:	dec    ebx
  424b39:	or     edi,esp
  424b3b:	add    ecx,DWORD PTR [ebx+0x9]
  424b3e:	out    0x3,eax
  424b40:	dec    ebx
  424b41:	or     edi,esp
  424b43:	add    ecx,DWORD PTR [ebx+0x9]
  424b46:	out    0x3,eax
  424b48:	dec    ebx
  424b49:	or     edi,esp
  424b4b:	add    ecx,DWORD PTR [ebx+0x9]
  424b4e:	out    0x3,eax
	...
  424b78:	dec    ebx
  424b79:	or     edi,esp
  424b7b:	add    ecx,DWORD PTR [ebx+0x9]
  424b7e:	out    0x3,eax
  424b80:	dec    ebx
  424b81:	or     edi,esp
  424b83:	add    ecx,DWORD PTR [ebx+0x9]
  424b86:	out    0x3,eax
  424b88:	dec    ebx
  424b89:	or     edi,esp
  424b8b:	add    ecx,DWORD PTR [ebx+0x9]
  424b8e:	add    cl,ch
  424b90:	dec    eax
  424b91:	or     DWORD PTR [eax],eax
  424b93:	jmp    0xe94254e0
  424b98:	dec    eax
  424b99:	or     DWORD PTR [eax],eax
  424b9b:	jmp    0xe94254e8
  424ba0:	dec    eax
  424ba1:	or     DWORD PTR [eax],eax
  424ba3:	jmp    0xe94254f0
  424ba8:	dec    eax
  424ba9:	or     DWORD PTR [eax],eax
  424bab:	jmp    0xe94254f8
  424bb0:	dec    eax
  424bb1:	or     DWORD PTR [eax],eax
  424bb3:	jmp    0xe9425500
  424bb8:	dec    eax
  424bb9:	or     DWORD PTR [eax],eax
  424bbb:	jmp    0xd8425508
  424bc0:	cmp    dh,BYTE PTR ss:[esp+edx*8]
  424bc4:	cmp    cl,BYTE PTR [ecx]
  424bc6:	jo     0x424b50
  424bc8:	idiv   DWORD PTR [ecx+0x75]
  424bcb:	mov    ds,esi
  424bcd:	add    BYTE PTR fs:[ecx-0x10],bh
  424bd1:	js     0x424c35
  424bd3:	mov    ecx,DWORD PTR [eax+0x5c]
  424bd6:	jne    0x424c24
  424bd8:	fnstenv [edi+esi*2-0x17]
	...
  424c04:	jg     0x424c3d
  424c06:	xor    DWORD PTR ds:0x446a097a,ebx
  424c0c:	mov    eax,0x77e97176
  424c11:	aaa    
  424c12:	xor    ebp,esi
  424c14:	pop    ebx
  424c15:	xor    esi,DWORD PTR ds:0x321a48f1
  424c1b:	cli    
  424c1c:	or     DWORD PTR fs:[edi+0xb],ebx
  424c20:	test   al,0x1a
  424c22:	xor    bl,dl
  424c24:	dec    eax
  424c25:	pop    ebp
  424c26:	arpl   WORD PTR ds:0xff676672,bx
  424c2c:	dec    eax
  424c2d:	jne    0x424c92
  424c2f:	add    cl,dh
  424c31:	pop    edx
  424c32:	add    BYTE PTR [ebp+edx*2+0x5b],ch
  424c36:	popa   
  424c37:	add    BYTE PTR [ebx-0x2dffd0c8],ah
  424c3d:	outs   dx,DWORD PTR gs:[esi]
  424c3f:	jae    0x424c2e
  424c41:	arpl   WORD PTR [edx+0x64],si
  424c44:	arpl   WORD PTR ds:0x62866568,ax
  424c4a:	imul   eax,DWORD PTR [eax],0xfffffff7
  424c4d:	arpl   WORD PTR [esi+0x6b],bp
  424c50:	jg     0x424cbf
  424c52:	add    BYTE PTR [eax+eiz*8+0x65],ah
  424c56:	arpl   WORD PTR [edi-0x7c],bp
  424c59:	push   es
  424c5a:	je     0x424cce
  424c5c:	fbstp  TBYTE PTR [edi+0x74]
  424c5f:	outs   dx,BYTE PTR ds:[esi]
  424c60:	mov    ch,0x35
  424c62:	add    BYTE PTR [ecx],dh
  424c64:	mov    ds:0x312d35,eax
	...
  424c8d:	add    BYTE PTR [eax],al
  424c8f:	add    BYTE PTR [ebx-0xa939afa],ah
  424c95:	pop    ebx
  424c96:	popa   
  424c97:	jns    0x424c6e
  424c99:	jns    0x424c9b
  424c9b:	xor    DWORD PTR [eax-0x63cacbc9],esp
  424ca1:	sbb    eax,DWORD PTR [eax]
  424ca3:	jae    0x424c6f
  424ca5:	gs outs dx,DWORD PTR fs:[esi]
  424ca8:	in     eax,dx
  424ca9:	add    al,0x2d
  424cab:	xor    ah,BYTE PTR [ecx+0x39]
  424cae:	xor    DWORD PTR [esi],esi
  424cb0:	pop    ebp
  424cb1:	sub    eax,0x5d810035
  424cb6:	jb     0x424d21
  424cb8:	jno    0x424d33
  424cba:	add    BYTE PTR [ebx+0x5f],dh
  424cbd:	arpl   WORD PTR [edi+0x68],bp
  424cc0:	mov    esp,DWORD PTR [ebx+0x61]
  424cc3:	add    BYTE PTR [edi+0x64],dl
  424cc6:	outs   dx,DWORD PTR ds:[esi]
  424cc7:	je     0x424d08
  424cc9:	ja     0x424ccb
  424ccb:	arpl   WORD PTR [ebp+0x60],dx
  424cce:	jo     0x424d45
  424cd0:	dec    ebx
  424cd1:	or     al,0x5f
  424cd3:	jb     0x424d20
  424cd5:	adc    BYTE PTR [edx+0x67],dh
  424cd8:	pop    ebp
  424cd9:	call   FWORD PTR [esi+0x71]
  424cdc:	pop    eax
  424cdd:	loopne 0x424d4c
  424cdf:	addr16 fs sti 
  424ce2:	pop    esi
  424ce3:	jb     0x424d30
  424ce5:	add    ah,BYTE PTR [ebp+0x6d]
  424ce8:	push   edi
  424ce9:	mov    esi,0xe0376c64
  424cee:	outs   dx,BYTE PTR fs:[esi]
  424cf0:	and    al,0xbd
  424cf2:	add    BYTE PTR gs:[eax],al
	...
  424d19:	add    BYTE PTR [eax],al
  424d1b:	add    BYTE PTR [ecx],ah
  424d1d:	lds    esi,FWORD PTR [edx+0x73]
  424d20:	cmp    cl,dh
  424d22:	add    DWORD PTR [edi],ebp
  424d24:	pop    ecx
  424d25:	out    dx,eax
  424d26:	xor    al,0x32
  424d28:	pop    eax
  424d29:	loopne 0x424d99
  424d2b:	push   0x7660b42a
  424d30:	mov    es,WORD PTR es:[ecx]
  424d33:	data16 stc 
  424d35:	test   BYTE PTR [eax+0x64],ah
  424d38:	in     al,dx
  424d39:	test   BYTE PTR [ecx],al
  424d3b:	imul   esp,edx,0xf963656b
  424d41:	fbld   TBYTE PTR [ecx+esi*2-0x11]
  424d45:	add    DWORD PTR [ecx],0x627eec71
  424d4b:	arpl   cx,bx
  424d4d:	fbstp  TBYTE PTR [edx+0x73]
  424d50:	fstp   TBYTE PTR [edx+esi*2]
  424d53:	imul   ebp,DWORD PTR [edx-0x4d94fba8],0x53
  424d5a:	ins    BYTE PTR es:[edi],dx
  424d5b:	pop    edi
  424d5c:	scas   al,BYTE PTR es:[edi]
  424d5d:	es add al,0x61
  424d60:	mov    ds:0xae715d55,eax
  424d65:	repnz push 0x6e
  424d68:	xchg   edi,eax
  424d69:	push   ebp
  424d6a:	jb     0x424dda
  424d6c:	scas   al,BYTE PTR es:[edi]
  424d6d:	push   ds
  424d6e:	add    al,0x6a
  424d70:	pushf  
  424d71:	or     DWORD PTR [edx],ebx
  424d73:	ins    BYTE PTR es:[edi],dx
  424d74:	js     0x424de0
  424d76:	out    0x5d,eax
  424d78:	js     0x424de6
  424d7a:	add    bh,BYTE PTR [ebx+0x66]
  424d7d:	pop    esi
  424d7e:	out    0x61,eax
	...
  424da8:	pop    edi
  424da9:	outs   dx,BYTE PTR ds:[esi]
  424daa:	cli    
  424dab:	jo     0x424e15
  424dad:	ins    DWORD PTR es:[edi],dx
  424dae:	out    0x61,eax
  424db0:	jl     0x424e0e
  424db2:	or     al,0x62
  424db4:	je     0x424e2b
  424db6:	sti    
  424db7:	add    ebx,DWORD PTR [edx+0x5d]
  424dba:	enter  0x3e71,0x6a
  424dbe:	fnstenv [eax+0x4b]
  424dc1:	sbb    DWORD PTR [edi],edx
  424dc3:	xor    al,0x7b
  424dc5:	sbb    DWORD PTR [edi],edx
  424dc7:	add    al,0x3b
  424dc9:	pop    esi
  424dca:	mov    ecx,0xe76e3773
  424dcf:	imul   ebp,DWORD PTR [esi],0x2562cb5b
  424dd5:	or     ebp,eax
  424dd7:	bound  esp,QWORD PTR [ebx*2+0x5dfa038f]
  424dde:	mov    WORD PTR [esi-0x18],fs
  424de1:	pop    edx
  424de2:	out    0x62,eax
  424de4:	cli    
  424de5:	jo     0x424e62
  424de7:	pop    esi
  424de8:	hlt    
  424de9:	or     BYTE PTR [ecx-0x7ba32592],cl
  424def:	jno    0x424e3c
  424df1:	jno    0x424d7f
  424df3:	(bad)  
  424df4:	(bad)  [ebp+0x7d]
  424df7:	add    ebx,ebx
  424df9:	ins    DWORD PTR es:[edi],dx
  424dfa:	push   edi
  424dfb:	je     0x424da5
  424dfd:	pop    ebx
  424dfe:	out    0x2c,eax
  424e00:	jbe    0x424e22
  424e02:	push   ds
  424e03:	sub    eax,0x6be7207e
  424e08:	mov    eax,0x5f3b77
	...
  424e31:	add    BYTE PTR [eax],al
  424e33:	add    BYTE PTR [ecx-0x6a9ab4f7],bl
  424e39:	outs   dx,BYTE PTR ds:[esi]
  424e3a:	add    BYTE PTR [ebp-0x70],al
  424e3d:	or     DWORD PTR [edi+0x3f],ebx
  424e40:	stos   DWORD PTR es:[edi],eax
  424e41:	pop    ebx
  424e42:	arpl   WORD PTR [esi],bx
  424e44:	dec    edi
  424e45:	pop    ebp
  424e46:	push   0x7148640e
  424e4b:	jmp    0x4a7c5b9
  424e50:	arpl   WORD PTR [edx+0x0],bx
  424e53:	or     dh,BYTE PTR [edi+0x48]
  424e56:	jb     0x424e65
  424e58:	jo     0x424ec6
  424e5a:	add    BYTE PTR ds:0x4677768,cl
  424e60:	arpl   WORD PTR [ecx],cx
  424e62:	das    
  424e63:	sbb    BYTE PTR [eax+0x38],bh
  424e66:	add    bl,dl
  424e68:	sbb    eax,0x16c06e77
  424e6d:	ins    BYTE PTR es:[edi],dx
  424e6e:	jb     0x424e59
  424e70:	cmp    esi,DWORD PTR [eax+0x6e]
  424e73:	into   
  424e74:	sub    al,0x6c
  424e76:	add    cl,dl
  424e78:	sub    DWORD PTR [edi+0x6e],esi
  424e7b:	enter  0x920,0x6f
  424e7f:	enter  0x5e12,0x71
  424e83:	mov    eax,ds:0x995f7148
  424e88:	clc    
  424e89:	pop    edi
  424e8a:	add    BYTE PTR [ecx+ebp*8-0xf7f8da4],al
  424e91:	or     BYTE PTR [eax-0x78],dh
  424e94:	fistp  DWORD PTR [ecx+0x0]
  424e97:	mov    BYTE PTR [eax],al
	...
  424ebd:	add    BYTE PTR [eax],al
  424ebf:	add    cl,ch
  424ec1:	inc    edi
  424ec2:	pop    edi
  424ec3:	mov    cl,ch
  424ec5:	or     BYTE PTR [esi],dh
  424ec7:	mov    ah,0x1c
  424ec9:	sbb    dh,BYTE PTR [edx]
  424ecb:	sbb    BYTE PTR [edi+0x46],cl
  424ece:	imul   ecx,DWORD PTR [eax-0x57],0x6d
  424ed2:	pop    edi
  424ed3:	jmp    0x41b6c382
  424ed8:	mov    ?,WORD PTR [edi+0x65]
  424edb:	add    BYTE PTR [edx],dh
  424edd:	je     0x424f44
  424edf:	outs   dx,BYTE PTR ds:[esi]
  424ee0:	test   DWORD PTR [eax+0x72],esi
  424ee3:	add    BYTE PTR [edi-0x78978b96],cl
  424ee9:	pop    edi
  424eea:	add    BYTE PTR [ebx+0x5c],dh
  424eed:	push   0x6b
  424eef:	jo     0x424f1c
  424ef1:	or     eax,0x5e51656a
  424ef6:	arpl   WORD PTR gs:[ebx+0xd],ax
  424efa:	jae    0x424f61
  424efc:	outs   dx,BYTE PTR ds:[esi]
  424efe:	imul   ebp,DWORD PTR [ebp+0x47],0xd
  424f02:	jo     0x424f73
  424f04:	dec    ecx
  424f05:	jo     0x424f70
  424f07:	outs   dx,DWORD PTR ds:[esi]
  424f08:	int3   
  424f09:	or     ah,BYTE PTR [ebp+0x6c]
  424f0c:	popf   
  424f0d:	pusha  
  424f0e:	popa   
  424f0f:	jns    0x424e9e
  424f11:	popa   
  424f12:	sub    eax,0x2d1c5300
  424f17:	xor    DWORD PTR [ebx+0xd],edx
  424f1a:	imul   esi,DWORD PTR [ebp-0x1f],0x856e5d5e
  424f21:	or     ch,BYTE PTR [eax+0x65]
	...
  424f4c:	mov    ds,WORD PTR [edx+0x69]
  424f4f:	mov    gs:0xe6737144,al
  424f55:	inc    ebp
  424f56:	outs   dx,BYTE PTR ds:[esi]
  424f57:	add    al,bl
  424f59:	ins    DWORD PTR es:[edi],dx
  424f5a:	outs   dx,DWORD PTR ds:[esi]
  424f5b:	ins    DWORD PTR es:[edi],dx
  424f5c:	retf   
  424f5d:	push   0x5bed0061
  424f62:	pop    ebp
  424f63:	outs   dx,BYTE PTR ds:[esi]
  424f64:	aad    0x71
  424f66:	add    BYTE PTR [edi+eax*8+0x5f],dh
  424f6a:	je     0x424fd5
  424f6c:	int3   
  424f6d:	jae    0x424f6f
  424f6f:	popa   
  424f70:	rcr    BYTE PTR [ecx+0x6c],cl
  424f73:	xor    ch,BYTE PTR gs:[ecx+0x65]
  424f77:	arpl   WORD PTR [edx+0x4b6c6c70],bx
  424f7d:	push   ebp
  424f7e:	add    al,0x70
  424f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f81:	push   ecx
  424f82:	arpl   WORD PTR gs:[ebx+0x23],cx
  424f86:	addr16 popa 
  424f88:	cdq    
  424f89:	dec    ebp
  424f8a:	js     0x424f8c
  424f8c:	pop    edx
  424f8d:	lock push 0x72
  424f90:	stos   BYTE PTR es:[edi],al
  424f91:	push   ebx
  424f92:	add    BYTE PTR [si-0x7],bh
  424f96:	pop    edi
  424f97:	ins    BYTE PTR es:[edi],dx
  424f98:	jb     0x424fab
  424f9a:	pop    edi
  424f9b:	add    BYTE PTR [edx+0xc],ah
  424f9e:	popa   
  424f9f:	jbe    0x425007
  424fa1:	stc    
  424fa2:	pusha  
  424fa3:	jae    0x424fbe
  424fa5:	lock pop edi
  424fa7:	addr16 push 0x4b636017
  424fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fae:	aaa    
  424faf:	add    BYTE PTR ss:[eax],al
	...
  424fd6:	add    BYTE PTR [eax],al
  424fd8:	adc    eax,0x3600379e
  424fdd:	lds    esp,FWORD PTR [edi+0x66]
  424fe0:	xor    dl,dh
  424fe2:	add    DWORD PTR [ebp+0x2a],esp
  424fe5:	les    ebp,FWORD PTR [eax+0x75]
  424fe8:	sub    bh,BYTE PTR [ecx-0x2ce199ff]
  424fee:	pop    esi
  424fef:	ja     0x42501d
  424ff1:	popf   
  424ff2:	xor    al,0x0
  424ff4:	sub    ah,BYTE PTR [ebx-0x5be3978a]
  424ffa:	push   0x5990f300
  424fff:	pop    edi
  425000:	pause  
  425002:	add    DWORD PTR [eax-0x1c],esi
  425005:	mov    ?,WORD PTR [ecx+0x0]
  425008:	jmp    0xd8b3b870
  42500d:	js     0x42506e
  42500f:	gs dec ebx
  425011:	xchg   edx,eax
  425012:	pop    ebp
  425013:	pop    edi
  425014:	jecxz  0x424fa7
  425016:	pop    ebp
  425017:	pop    edi
  425018:	jecxz  0x425009
  42501a:	pusha  
  42501b:	ja     0x424fd5
  42501d:	or     DWORD PTR [edi+0x63],edx
  425020:	stos   BYTE PTR es:[edi],al
  425021:	outs   dx,BYTE PTR ds:[esi]
  425022:	sbb    BYTE PTR [eax+eiz*4],al
  425025:	push   0x5b
  425027:	js     0x424fcc
  425029:	outs   dx,BYTE PTR ds:[esi]
  42502a:	push   esi
  42502b:	add    al,0xaa
  42502d:	push   0x55
  42502f:	arpl   WORD PTR [edi-0x538b1896],sp
  425035:	jne    0x425074
  425037:	addr16 cdq 
  425039:	or     DWORD PTR [ecx],edi
  42503b:	popa   
	...
  425064:	imul   ebp,DWORD PTR [esi+0x19],0xe6b4b78
  42506b:	jbe    0x4250d5
  42506d:	pop    ebx
  42506e:	or     al,0x76
  425070:	dec    ebx
  425071:	push   0x1a
  425073:	push   0x40f6c6d
  425078:	pop    ecx
  425079:	push   0xa
  42507b:	pop    esp
  42507c:	push   0x6c75e775
  425081:	jb     0x425080
  425083:	gs ss pop esp
  425086:	out    0x68,eax
  425088:	cmp    BYTE PTR [edx-0x2d],dh
  42508b:	bound  edi,QWORD PTR [ecx]
  42508d:	or     edi,edx
  42508f:	data16 or al,0x73
  425092:	aam    0x77
  425094:	dec    ebx
  425095:	addr16 enter 0x3077,0x6a
  42509a:	int    0x3
  42509c:	sub    dh,BYTE PTR [esi+eax*8+0x5c]
  4250a0:	and    al,0x6e
  4250a2:	out    0x65,eax
  4250a4:	and    al,0x72
  4250a6:	xchg   ebx,eax
  4250a7:	data16 hlt 
  4250a9:	or     BYTE PTR [edx-0x739815a0],bl
  4250af:	jne    0x4250cd
  4250b1:	or     DWORD PTR [edx+ebx*2-0x16],edi
  4250b5:	outs   dx,DWORD PTR ds:[esi]
  4250b6:	mov    WORD PTR [edx+0x4b],gs
  4250b9:	addr16 nop
  4250bb:	ja     0x4250a5
  4250bd:	jne    0x4250bf
  4250bf:	mov    WORD PTR [eax+0x71],cs
  4250c2:	arpl   WORD PTR [ebp-0x5c],di
  4250c5:	jbe    0x4250f6
  4250c7:	jmp    0x4250cc
	...
  4250f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250f1:	jo     0x42515a
  4250f3:	dec    edi
  4250f4:	lods   al,BYTE PTR ds:[esi]
  4250f5:	jo     0x4250f7
  4250f7:	dec    ebp
  4250f8:	test   al,0x72
  4250fa:	ins    DWORD PTR es:[edi],dx
  4250fb:	push   ebp
  4250fc:	test   al,0x9
  4250fe:	jno    0x425148
  425100:	jl     0x425146
  425102:	outs   dx,BYTE PTR ds:[esi]
  425103:	xor    eax,0x4a004477
  425108:	stos   BYTE PTR es:[edi],al
  425109:	jo     0x42517b
  42510b:	dec    eax
  42510c:	js     0x425117
  42510e:	adc    BYTE PTR fs:[eax+0x70],ch
  425112:	ins    DWORD PTR es:[edi],dx
  425113:	packsswb mm1,QWORD PTR [ecx]
  425116:	je     0x425120
  425118:	pusha  
  425119:	jne    0x425188
  42511b:	sbb    ecx,DWORD PTR [edi+0x6b]
  42511e:	ins    DWORD PTR es:[edi],dx
  42511f:	sti    
  425120:	push   ebp
  425121:	jo     0x425123
  425123:	adc    ebp,DWORD PTR [edx+0x71]
  425126:	outs   dx,BYTE PTR ds:[esi]
  425127:	mov    edx,0xfb001b19
  42512c:	and    DWORD PTR [edx+0x68],ebp
  42512f:	enter  0x6d36,0x0
  425133:	retf   
  425134:	adc    al,0x6c
  425136:	outs   dx,BYTE PTR ds:[esi]
  425137:	ret    0x2179
  42513a:	xor    ch,cl
  42513c:	sbb    BYTE PTR [eax+0x5f],ch
  42513f:	retf   0x6800
  425142:	jno    0x42512d
  425144:	das    
  425145:	jbe    0x4251b4
  425147:	lds    ecx,FWORD PTR [eax+0x6b]
  42514a:	ins    BYTE PTR es:[edi],dx
  42514b:	mov    esi,0xe9726803
  425150:	imul   DWORD PTR [ecx+0x6d]
  425153:	mov    es,WORD PTR [eax]
	...
  425179:	add    BYTE PTR [eax],al
  42517b:	add    ah,bh
  42517d:	addr16 jb 0x425169
  425180:	out    0x43,al
  425182:	outs   dx,BYTE PTR ds:[esi]
  425183:	mov    dl,ch
  425185:	inc    ebx
  425186:	add    BYTE PTR [eax],al
  425188:	mov    eax,0xd1656966
  42518d:	pop    es
  42518e:	pop    ebp
  42518f:	jae    0x42514f
  425191:	jno    0x4251f0
  425193:	jae    0x425163
  425195:	jo     0x425197
  425197:	jbe    0x425134
  425199:	data16 je 0x42520b
  42519c:	nop
  42519d:	je     0x42519f
  42519f:	ins    BYTE PTR es:[edi],dx
  4251a0:	test   DWORD PTR [ebx+0x64],eax
  4251a3:	outs   dx,DWORD PTR ds:[esi]
  4251a4:	fs or  eax,0x5e21322d
  4251aa:	jae    0x425211
  4251ac:	and    bl,BYTE PTR [esi]
  4251ae:	xor    dh,BYTE PTR [ebx]
  4251b0:	adc    DWORD PTR [ecx],ebx
  4251b2:	sub    eax,0x5d614100
  4251b7:	jb     0x425217
  4251b9:	push   edi
  4251ba:	popa   
  4251bb:	imul   esp,edx,0x6b
  4251be:	popa   
  4251bf:	outs   dx,DWORD PTR ds:[esi]
  4251c0:	push   eax
  4251c1:	push   0x61
  4251c3:	add    BYTE PTR ds:0x4f6e6e44,bh
  4251c9:	push   edi
  4251ca:	add    BYTE PTR [ebp+0x43],ch
  4251cd:	push   0x63
  4251cf:	imul   edi,DWORD PTR [edi],0x4b72740d
  4251d5:	inc    ebx
  4251d6:	gs je  0x425184
  4251d9:	push   es
  4251da:	imul   ebp,DWORD PTR [esi-0x7a],0x45
  4251de:	outs   dx,BYTE PTR ds:[esi]
  4251df:	add    BYTE PTR gs:[eax],al
	...
  425206:	add    BYTE PTR [eax],al
  425208:	mov    ds:0x9333321d,al
  42520d:	push   0x3e91005f
  425212:	arpl   WORD PTR gs:[ecx+0x71],di
  425216:	outs   dx,BYTE PTR ds:[esi]
  425217:	add    BYTE PTR [eax-0x3a96919f],cl
  42521d:	pop    eax
  42521e:	add    BYTE PTR [ebx-0x26],ah
  425221:	pop    eax
  425222:	gs jae 0x425287
  425225:	push   esi
  425226:	pop    ebp
  425227:	jae    0x425274
  425229:	jg     0x4252a1
  42522b:	xor    cl,bl
  42522d:	mov    eax,DWORD PTR [ecx]
  42522f:	pop    edi
  425230:	(bad)  
  425231:	pop    esi
  425232:	jne    0x42529b
  425234:	in     eax,0xef
  425236:	jb     0x4252a8
  425238:	jmp    0x6591:0x4b775a5d
  42523f:	imul   esi,DWORD PTR [edx-0x5194fbc6],0x3e
  425246:	pusha  
  425247:	addr16 popf 
  425249:	lock ins WORD PTR es:[edi],dx
  42524c:	mov    ah,0x4b
  42524e:	pusha  
  42524f:	arpl   WORD PTR [ebx+0x52],cx
  425252:	jb     0x4252bb
  425254:	scas   al,BYTE PTR es:[edi]
  425255:	push   edx
  425256:	push   0x5d484b71
  42525b:	jo     0x4252cb
  42525d:	lock jb 0x4252c8
  425260:	push   0xfffffffc
  425262:	pop    esp
  425263:	imul   ecx,DWORD PTR [ebx+0x12],0x5b
  425267:	outs   dx,BYTE PTR ds:[esi]
  425268:	ja     0x42527f
  42526a:	pop    esi
  42526b:	add    BYTE PTR fs:[eax],al
	...
  425292:	add    BYTE PTR [eax],al
  425294:	je     0x425286
  425296:	pop    ebp
  425297:	ins    DWORD PTR es:[edi],dx
  425298:	ins    BYTE PTR es:[edi],dx
  425299:	neg    DWORD PTR [edx+0x6e]
  42529c:	ins    BYTE PTR es:[edi],dx
  42529d:	lock pop ecx
  42529f:	pop    edi
  4252a0:	pop    ecx
  4252a1:	or     al,0x67
  4252a3:	ja     0x4252f0
  4252a5:	fbld   TBYTE PTR [eax+0x6d]
  4252a8:	xor    ch,dl
  4252aa:	ins    BYTE PTR es:[edi],dx
  4252ab:	add    BYTE PTR [ebx+edi*8+0x34],bh
  4252af:	xor    eax,0x715ec64b
  4252b4:	rcr    BYTE PTR cs:[ecx+0x0],0x2f
  4252b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252ba:	bound  ebp,QWORD PTR [ecx+0x12]
  4252bd:	lock gs addr16 and al,0xc9
  4252c2:	jne    0x425323
  4252c4:	imul   edi
  4252c6:	fs add bh,dh
  4252c9:	or     BYTE PTR [edi-0x7b931a88],cl
  4252cf:	jno    0x42531c
  4252d1:	push   esi
  4252d2:	xchg   edi,eax
  4252d3:	pop    esp
  4252d4:	fldcw  WORD PTR [edi-0x6d]
  4252d7:	add    ebp,ecx
  4252d9:	addr16 xchg ebp,eax
  4252db:	addr16 in al,dx
  4252dd:	pop    esp
  4252de:	out    0x68,eax
  4252e0:	fstp   QWORD PTR [esp+ecx*4+0x71]
  4252e4:	dec    ebx
  4252e5:	push   0x7d
  4252e7:	ja     0x42529c
  4252e9:	jo     0x425340
  4252eb:	imul   ecx,DWORD PTR [ebx+0x6c],0x4e
  4252ef:	jb     0x4252a6
  4252f1:	pop    bx
  4252f3:	js     0x42529d
  4252f5:	or     DWORD PTR [edi],edi
  4252f7:	pop    ebp
	...
  425320:	stos   BYTE PTR es:[edi],al
  425321:	je     0x42536f
  425323:	imul   ecx,DWORD PTR [ebx+0x59],0x4e
  425327:	jne    0x4252d1
  425329:	pop    ebx
  42532a:	out    0x61,eax
  42532c:	push   0x7063416f
  425331:	jb     0x425348
  425333:	add    al,0x6c
  425335:	ins    DWORD PTR es:[edi],dx
  425336:	push   cs
  425337:	jbe    0x4253a1
  425339:	bound  eax,QWORD PTR [esi]
  42533b:	ja     0x425381
  42533d:	or     eax,ebx
  42533f:	jb     0x42535a
  425341:	pop    eax
  425342:	mov    edx,0x10574b66
  425347:	je     0x4253b1
  425349:	pop    ebx
  42534a:	out    0x64,eax
  42534c:	sub    BYTE PTR [edi+0x4],ch
  42534f:	jno    0x425375
  425351:	pop    esp
  425352:	out    0x58,eax
  425354:	and    eax,0x375bc672
  425359:	or     eax,ebx
  42535b:	je     0x425385
  42535d:	pop    ebx
  42535e:	shr    DWORD PTR [edx+0x6c],cl
  425361:	or     edx,ecx
  425363:	jno    0x42538d
  425365:	push   0xffffffb3
  425367:	pop    edx
  425368:	adc    eax,0xeee90066
  42536d:	ins    DWORD PTR es:[edi],dx
  42536e:	ins    DWORD PTR es:[edi],dx
  42536f:	retf   
  425370:	jmp    0xecca53cf
  425375:	addr16 fs mov bl,bh
  425379:	or     BYTE PTR [edx-0x7a],dh
  42537c:	fsub   QWORD PTR [edi+0x6b]
  42537f:	or     BYTE PTR [eax+0x5a],0x6c
  425383:	mov    BYTE PTR [eax],al
	...
  4253a9:	add    BYTE PTR [eax],al
  4253ab:	add    cl,ah
  4253ad:	imul   esi,DWORD PTR [edx-0x17],0xffffffd7
  4253b1:	addr16 jno 0x425341
  4253b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253b5:	je     0x4253b7
  4253b7:	jns    0x425373
  4253b9:	inc    eax
  4253ba:	addr16 pop edx
  4253bc:	lods   al,BYTE PTR ds:[esi]
  4253bd:	or     DWORD PTR [edx+0x61],edi
  4253c0:	stos   BYTE PTR es:[edi],al
  4253c1:	push   edi
  4253c2:	bound  eax,QWORD PTR [edi-0x7c]
  4253c5:	or     DWORD PTR [ecx+0x48],esi
  4253c8:	jl     0x425426
  4253ca:	arpl   WORD PTR [ebp+0x4f],dx
  4253cd:	je     0x425436
  4253cf:	push   edx
  4253d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253d1:	or     DWORD PTR [eax+ecx*2+0x6b],esp
  4253d5:	ins    DWORD PTR es:[edi],dx
  4253d6:	pop    edi
  4253d7:	cmp    al,BYTE PTR [edi+0x66]
  4253da:	jb     0x4253e8
  4253dc:	ins    BYTE PTR es:[edi],dx
  4253dd:	outs   dx,DWORD PTR ds:[esi]
  4253de:	add    BYTE PTR ds:0x1d745a64,dl
  4253e4:	ins    BYTE PTR es:[edi],dx
  4253e5:	pop    edx
  4253e6:	je     0x4253d1
  4253e8:	jge    0x42542a
  4253ea:	jbe    0x4253f8
  4253ec:	pop    ecx
  4253ed:	push   0x6e471261
  4253f2:	outs   dx,BYTE PTR ds:[esi]
  4253f3:	or     al,0x2b
  4253f5:	outs   dx,BYTE PTR ds:[esi]
  4253f6:	jbe    0x4253fc
  4253f8:	inc    edi
  4253f9:	gs pop edi
  4253fb:	fist   WORD PTR [ecx]
  4253fd:	gs add ah,cl
  425400:	and    DWORD PTR [ebp+0x6d],ebp
  425403:	fild   QWORD PTR ds:0x15c16109
  425409:	pop    ebx
  42540a:	popa   
  42540b:	add    BYTE PTR [edx+0xb],bh
  42540e:	data16 jb 0x425411
	...
  425435:	add    BYTE PTR [eax],al
  425437:	add    BYTE PTR [ebx+0x66],bh
  42543a:	outs   dx,BYTE PTR ds:[esi]
  42543b:	fs jb  0x4254a2
  42543e:	imul   esp,DWORD PTR [edx+esi*2+0x67],0x61
  425443:	jae    0x42541b
  425445:	inc    edx
  425446:	outs   dx,BYTE PTR ds:[esi]
  425447:	jns    0x4254ab
  425449:	cmp    eax,0xbd76e6b
  42544e:	imul   ebp,DWORD PTR [ecx-0x2f],0xbd736b59
  425455:	gs je  0x425458
  425458:	nop
  425459:	sbb    DWORD PTR [edx],esi
  42545b:	xor    al,BYTE PTR [eax]
  42545d:	sbb    DWORD PTR [eax],eax
  42545f:	bound  esi,QWORD PTR [edi-0x78939d98]
  425465:	push   esi
  425466:	add    BYTE PTR [ecx],dh
  425468:	push   ebx
  425469:	adc    al,0x2d
  42546b:	xor    DWORD PTR [ebx+0x14],eax
  42546e:	sub    eax,0x5f429100
  425473:	popa   
  425474:	add    DWORD PTR [edx+0x6c],0x6b3d2261
  42547b:	jb     0x425413
  42547d:	outs   dx,BYTE PTR fs:[esi]
  42547f:	xor    al,BYTE PTR [ecx]
  425481:	or     esp,DWORD PTR [ebp+0x6c]
  425484:	pop    ebp
  425485:	pop    ebx
  425486:	popa   
  425487:	addr16 cmp eax,0x4d660069
  42548d:	inc    edx
  42548e:	je     0x4254f2
  425490:	push   ebx
  425491:	inc    ecx
  425492:	ins    BYTE PTR es:[edi],dx
  425493:	xor    edx,esp
  425495:	imul   esi,DWORD PTR ss:[esi+0x3b],0x43
  42549a:	arpl   WORD PTR [eax],ax
	...
  4254c4:	dec    esp
  4254c5:	fs je  0x425530
  4254c8:	push   ebx
  4254c9:	inc    ebx
  4254ca:	add    BYTE PTR [ebp-0x61],ah
  4254cd:	inc    ecx
  4254ce:	pop    ebp
  4254cf:	outs   dx,BYTE PTR ds:[esi]
  4254d0:	xchg   edi,eax
  4254d1:	imul   ebp,DWORD PTR [eax+eax*1+0x4b],0x2c6d66c3
  4254d9:	shr    BYTE PTR [eax+eax*1+0x2d],cl
  4254dd:	popf   
  4254de:	imul   bx,WORD PTR [esi+eax*8],0x5f
  4254e4:	clc    
  4254e5:	rcr    BYTE PTR [eax+0x6b],1
  4254e8:	add    dh,al
  4254ea:	pop    eax
  4254eb:	pop    edi
  4254ec:	repz jle 0x42554f
  4254ef:	ins    BYTE PTR es:[edi],dx
  4254f0:	fucomip st,st(7)
  4254f2:	pop    ebx
  4254f3:	pop    edi
  4254f4:	fadd   DWORD PTR [esi+0x5ef10057]
  4254fa:	pop    ecx
  4254fb:	outs   dx,BYTE PTR ds:[esi]
  4254fc:	dec    ebx
  4254fd:	mov    eax,ds:0xa2d43274
  425502:	pusha  
  425503:	xor    al,0xb9
  425505:	lock arpl WORD PTR [edi-0x57],bx
  425509:	pop    ecx
  42550a:	add    DWORD PTR [edx-0x52],esi
  42550d:	dec    esp
  42550e:	xor    esi,DWORD PTR [edx]
  425510:	js     0x425502
  425512:	arpl   WORD PTR [edx+ebp*4+0x52],bp
  425516:	pop    eax
  425517:	pop    edi
  425518:	dec    ebx
  425519:	inc    eax
  42551a:	jbe    0x425583
  42551c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42551d:	push   ebx
  42551e:	pop    edi
  42551f:	add    BYTE PTR [edx+0x7f725f17],bl
  425525:	lock pushw 0x0
	...
  42554e:	add    BYTE PTR [eax],al
  425550:	data16 sbb al,0x75
  425553:	arpl   WORD PTR [edx-0x10],bp
  425556:	xor    BYTE PTR [ebx],dh
  425558:	ss mov ch,0x30
  42555b:	add    BYTE PTR [edx+0x6],ch
  42555e:	popa   
  42555f:	arpl   WORD PTR [edi-0x3f],bp
  425562:	add    DWORD PTR [eax+0x6a],ebp
  425565:	loop   0x4255c4
  425567:	popa   
  425568:	pop    esp
  425569:	loop   0x4255cb
  42556b:	add    BYTE PTR [edi],ch
  42556d:	or     eax,0xe226746c
  425572:	add    DWORD PTR [ecx+0x2a],esi
  425575:	or     ebp,ebx
  425577:	pusha  
  425578:	daa    
  425579:	or     DWORD PTR [eax],ebx
  42557b:	xor    eax,0x371a1b59
  425580:	dec    ebx
  425581:	jno    0x42554b
  425583:	push   edi
  425584:	daa    
  425585:	outs   dx,BYTE PTR ds:[esi]
  425586:	out    0x5d,eax
  425588:	in     al,dx
  425589:	pop    ecx
  42558a:	mov    bh,0x60
  42558c:	stc    
  42558d:	or     bl,cl
  42558f:	fs in  eax,dx
  425591:	outs   dx,DWORD PTR ds:[esi]
  425592:	les    edx,FWORD PTR [edi-0x19]
  425595:	arpl   di,sp
  425597:	pop    esi
  425598:	in     al,0x54
  42559a:	xchg   ebx,eax
  42559b:	pusha  
  42559c:	cmc    
  42559d:	or     BYTE PTR [edx-0x7fa6259c],cl
  4255a3:	pusha  
  4255a4:	dec    ebx
  4255a5:	pop    edx
  4255a6:	jnp    0x425608
  4255a8:	fild   QWORD PTR [eax+ecx*4+0x3]
  4255ac:	mov    ebx,0xa86c8857
  4255b1:	push   edi
  4255b2:	out    0x5b,eax
	...
  4255dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255dd:	push   ebp
  4255de:	dec    ebx
  4255df:	pop    ecx
  4255e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255e1:	or     DWORD PTR [esi+0x5b],edx
  4255e4:	mov    ch,0x65
  4255e6:	inc    esi
  4255e7:	jno    0x425583
  4255e9:	or     DWORD PTR [edi+ebp*2],edi
  4255ec:	call   0x4609:0xa85b4b55
  4255f3:	arpl   WORD PTR [edi+0x66],di
  4255f6:	cmp    al,BYTE PTR [ecx+ebp*2]
  4255f9:	jb     0x425636
  4255fb:	pop    eax
  4255fc:	outs   dx,BYTE PTR ds:[esi]
  4255fd:	push   0x1b
  4255ff:	pop    edi
  425600:	jp     0x42560b
  425602:	push   es
  425603:	pop    esp
  425604:	imul   esp,DWORD PTR [ebp+0x1b],0x5644b5a
  42560b:	pop    esp
  42560c:	popa   
  42560d:	jo     0x425623
  42560f:	add    al,0x1c
  425611:	pop    ss
  425612:	mov    edx,0x13782f
  425617:	mov    esi,0xe9301470
  42561c:	dec    eax
  42561d:	push   0x5336e274
  425622:	imul   ecx,esi,0xdc756b1e
  425628:	dec    eax
  425629:	jno    0x42569f
  42562b:	aad    0x18
  42562d:	pop    ds
  42562e:	sub    eax,0x2e216016
  425633:	clc    
  425634:	xor    eax,0x36f82e21
  425639:	adc    al,0x2e
  42563b:	clc    
  42563c:	cmp    ebx,DWORD PTR [edi]
  42563e:	cmp    cl,bl
	...
  425668:	and    BYTE PTR [ecx],bl
  42566a:	sub    eax,0x776b0399
  42566f:	(bad)  
  425670:	jmp    0x4256ad
  425672:	je     0x4255f8
  425674:	xor    bl,BYTE PTR [ecx+0x68]
  425677:	jns    0x4256c1
  425679:	jno    0x4256ef
  42567b:	jne    0x425635
  42567d:	pop    ds
  42567e:	sub    eax,0x2e196dc6
  425683:	mov    eax,0x202e1379
  425688:	push   ecx
  425689:	adc    edi,DWORD PTR [eax]
  42568b:	push   cs
  42568c:	lahf   
  42568d:	outs   dx,BYTE PTR ds:[esi]
  42568e:	outs   dx,BYTE PTR ds:[esi]
  42568f:	push   eax
  425690:	inc    edx
  425691:	pop    di
  425693:	push   ebp
  425694:	je     0x4256c1
  425696:	jo     0x4256e9
  425698:	xchg   edi,eax
  425699:	or     DWORD PTR [eax],eax
  42569b:	push   ecx
  42569c:	jnp    0x4256f3
  42569e:	jo     0x425693
  4256a0:	arpl   WORD PTR [esi],bp
  4256a2:	gs inc esp
  4256a4:	jnp    0x4256fb
  4256a6:	addr16 pop ss
  4256a8:	push   0x70
  4256aa:	ins    DWORD PTR es:[edi],dx
  4256ab:	sbb    eax,DWORD PTR [esp+edx*2+0x585b1c6d]
  4256b2:	bound  eax,QWORD PTR [ecx+ebx*2]
  4256b5:	arpl   WORD PTR fs:[eax],ax
  4256b8:	int    0x54
  4256ba:	imul   edx,DWORD PTR cs:[edi+eiz*2+0x6b],0x731d692f
  4256c3:	bound  ecx,QWORD PTR [ebx-0x1]
  4256c6:	pusha  
  4256c7:	js     0x425748
  4256c9:	pop    es
  4256ca:	push   0x74
	...
  4256f3:	add    BYTE PTR [esi+0x57],bh
  4256f6:	cmp    ch,BYTE PTR [edi]
  4256f8:	inc    ebp
  4256f9:	push   0x68
  4256fb:	popa   
  4256fc:	aam    0x66
  4256fe:	ins    BYTE PTR es:[edi],dx
  4256ff:	cmp    DWORD PTR gs:[eax+esi*2],0x6c
  425704:	mov    edi,0x85632e54
  425709:	xor    ch,BYTE PTR [ebx]
  42570b:	dec    ebx
  42570c:	fcomp  QWORD PTR [ecx+0x3f]
  42570f:	imul   ecx,DWORD PTR [ebp-0x559ad1bb],0x3a
  425716:	add    BYTE PTR [eax-0x42],ch
  425719:	imul   esi,DWORD PTR [eax+0x3a],0xffffff95
  42571d:	add    BYTE PTR [ebp+0x72],bl
  425720:	int3   
  425721:	outs   dx,BYTE PTR ds:[esi]
  425723:	popa   
  425724:	adc    al,0x66
  425726:	jp     0x425757
  425728:	loop   0x425780
  42572a:	inc    edx
  42572b:	inc    ebx
  42572c:	mov    ebx,0xaa652e3b
  425731:	push   0x388b0000
  425736:	inc    ebp
  425737:	push   eax
  425738:	pop    ebp
  425739:	dec    ecx
  42573a:	inc    esi
  42573b:	dec    ecx
  42573c:	ss dec eax
  42573e:	xor    BYTE PTR [ecx+0x2f],bl
  425741:	sbb    al,0x50
  425743:	dec    ebx
  425744:	sbb    eax,DWORD PTR cs:[ebp+0x4c]
  425748:	das    
  425749:	adc    eax,0x462b5555
  42574e:	push   edx
  42574f:	pop    ecx
  425750:	xor    bh,BYTE PTR [ecx]
  425752:	inc    ecx
  425753:	inc    esp
  425754:	add    cl,BYTE PTR [esi+0x51]
  425757:	dec    ecx
	...
  425780:	dec    ebx
  425781:	rcl    DWORD PTR [ebx],0x30
  425784:	dec    ebx
  425785:	lock add DWORD PTR [eax],eax
  425788:	dec    ebx
  425789:	out    dx,al
  42578a:	add    DWORD PTR [ebx+0x14],ecx
  42578d:	and    al,0x4f
  42578f:	dec    DWORD PTR [ebx-0x10]
  425792:	add    DWORD PTR [eax],eax
  425794:	dec    ebx
  425795:	lock add DWORD PTR [eax],eax
  425798:	dec    ebx
  425799:	lahf   
  42579a:	ss inc esi
  42579c:	call   DWORD PTR [edx-0x6bf9adbc]
  4257a2:	cmp    BYTE PTR [edi+0x28],ah
  4257a5:	mov    esi,0xca1c7156
  4257aa:	ins    DWORD PTR es:[edi],dx
  4257ab:	pop    esp
  4257ac:	sbb    al,0xb9
  4257ae:	push   ebx
  4257af:	fs in  al,dx
  4257b1:	call   0x726f:0x95085c72
  4257b8:	out    0x71,al
  4257ba:	ins    DWORD PTR es:[edi],dx
  4257bb:	push   esi
  4257bc:	out    dx,al
  4257bd:	jge    0x425831
  4257bf:	addr16 in al,dx
  4257c1:	add    DWORD PTR [ebp+0x53],0x715388e5
  4257c8:	xlat   BYTE PTR ds:[ebx]
  4257c9:	nop
  4257ca:	push   ebp
  4257cb:	ins    BYTE PTR es:[edi],dx
  4257cc:	dec    ebx
  4257cd:	jne    0x425822
  4257cf:	lods   eax,DWORD PTR ds:[si]
  4257d1:	pop    edi
  4257d2:	ins    DWORD PTR es:[edi],dx
  4257d3:	pop    edi
  4257d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257d5:	pop    esp
  4257d6:	push   edx
  4257d7:	je     0x425792
  4257d9:	cmp    DWORD PTR [esi+0x65],edx
  4257dc:	dec    ebx
  4257dd:	and    al,0x5b
  4257df:	jno    0x42577c
  4257e1:	inc    esp
  4257e2:	arpl   WORD PTR [edi+0x0],si
	...
  425809:	add    BYTE PTR [eax],al
  42580b:	add    BYTE PTR [ebp+0x4b635751],al
  425811:	and    al,0x4
  425813:	add    BYTE PTR [ebx-0x10],cl
  425816:	add    DWORD PTR [eax],eax
  425818:	dec    ebx
  425819:	lock add DWORD PTR [ecx+0x6e],ebp
  42581d:	push   ds
  42581e:	push   esi
  42581f:	arpl   WORD PTR [edi+0x9],bx
  425822:	fidiv  DWORD PTR [ecx]
  425824:	xor    eax,0x4b580b65
  425829:	xor    bh,BYTE PTR [ebx]
  42582b:	push   ebx
  42582c:	mov    fs,WORD PTR [ebx+edx*1+0x45]
  425830:	push   0x55
  425832:	adc    BYTE PTR [esi+0x28],ch
  425835:	inc    esi
  425836:	push   cs
  425837:	push   esi
  425838:	cmp    ch,BYTE PTR [edx+0x3]
  42583b:	popa   
  42583c:	sbb    ah,BYTE PTR [edx+edi*8+0x72]
  425840:	and    al,0x6a
  425842:	aad    0x3c
  425844:	das    
  425845:	or     DWORD PTR [edi-0x3399d18f],esi
  42584b:	jb     0x425867
  42584d:	push   eax
  42584e:	ret    
  42584f:	dec    edi
  425850:	push   ds
  425851:	ss int3 
  425853:	jb     0x42584f
  425855:	outs   dx,DWORD PTR ds:[esi]
  425856:	into   
  425857:	push   ebp
  425858:	add    al,0x65
  42585a:	out    0x3,eax
  42585c:	dec    ebx
  42585d:	or     edi,esp
  42585f:	add    ecx,DWORD PTR [ebx+0x9]
  425862:	out    0x3,eax
  425864:	jmp    0xd915:0xd773a056
  42586b:	adc    eax,0x37b6cef
	...
  425898:	or     dl,BYTE PTR [edi-0x80]
  42589b:	jae    0x42585c
  42589d:	lea    esi,ds:[ebx-0x47]
  4258a1:	push   0x5daa607b
  4258a6:	mov    ds:0xe76ab764,eax
  4258ab:	add    ecx,DWORD PTR [ebx+0x9]
  4258ae:	out    0x15,eax
  4258b0:	test   al,0x51
  4258b2:	dec    esp
  4258b3:	add    al,0x7a
  4258b5:	push   0x6a967045
  4258ba:	cmp    DWORD PTR [edi-0x59],ebx
  4258bd:	inc    eax
  4258be:	push   eax
  4258bf:	push   esi
  4258c0:	cdq    
  4258c1:	dec    edx
  4258c2:	add    BYTE PTR [ebx],bl
  4258c4:	dec    edi
  4258c5:	data16 jo 0x42590c
  4258c8:	xchg   ebp,eax
  4258c9:	or     edi,edi
  4258cb:	call   0x11b3e218
  4258d0:	jl     0x425937
  4258d2:	ins    BYTE PTR es:[edi],dx
  4258d3:	ficomp DWORD PTR [edx]
  4258d5:	daa    
  4258d6:	fs std 
  4258d8:	je     0x4258e3
  4258da:	push   ecx
  4258db:	xor    DWORD PTR [esi+0x1627746c],eax
  4258e1:	gs fs or al,0x39
  4258e5:	cmp    DWORD PTR [edi-0xb],ebx
  4258e8:	adc    BYTE PTR [eax],bl
  4258ea:	add    cl,ch
  4258ec:	dec    eax
  4258ed:	or     DWORD PTR [eax],eax
  4258ef:	jmp    0xe98189c1
  4258f4:	mov    dl,0x30
  4258f6:	aas    
  4258f7:	jmp    0xe98189de
	...
  425924:	cwde   
  425925:	xor    BYTE PTR [edi],bh
  425927:	jmp    0xe98189b2
  42592c:	sahf   
  42592d:	xor    BYTE PTR [edi],bh
  42592f:	jmp    0xe981899a
  425934:	cmp    esp,DWORD PTR [ebx]
  425936:	aas    
  425937:	jmp    0xe9817c7e
  42593c:	and    edi,DWORD PTR cs:[edi]
  42593f:	jmp    0xe9817c43
  425944:	mov    bl,0x23
  425946:	aas    
  425947:	jmp    0xe9817c1c
  42594c:	dec    eax
  42594d:	or     DWORD PTR [eax],eax
  42594f:	jmp    0x6942629d
  425954:	and    eax,0x55e9fdd8
  425959:	pusha  
  42595a:	and    BYTE PTR ds:0x3c736a7e,ch
  425960:	ins    BYTE PTR es:[edi],dx
  425961:	addr16 je 0x425964
  425964:	inc    ecx
  425965:	or     eax,0x8bf2fffd
  42596a:	sbb    al,BYTE PTR [eax]
  42596c:	loop   0x425979
  42596e:	cmp    eax,0x5d493270
  425973:	je     0x4259c8
  425975:	or     eax,0x8bf2fffd
  42597a:	sbb    al,0x0
  42597c:	loop   0x425989
  42597e:	dec    esp
  42597f:	outs   dx,DWORD PTR ds:[esi]
  425980:	inc    ecx
  425981:	ins    BYTE PTR es:[edi],dx
  425982:	ins    BYTE PTR es:[edi],dx
  425983:	and    BYTE PTR [ebx+0x5d],dh
  425986:	jo     0x4259cc
	...
  4259b0:	push   ebx
  4259b1:	pop    ecx
  4259b2:	pop    ebp
  4259b3:	add    BYTE PTR [ebx-0x7d7ffff5],ah
  4259b9:	or     eax,DWORD PTR [eax]
  4259bb:	add    cl,dh
  4259bd:	push   0x5f
  4259bf:	push   0xfffd0b87
  4259c4:	mov    ds:0xa2001d8b,al
  4259c9:	or     edi,DWORD PTR [edi]
  4259cb:	outs   dx,DWORD PTR ds:[esi]
  4259cc:	popf   
  4259cd:	xor    BYTE PTR [ebp+0x65],ah
  4259d0:	ror    DWORD PTR [ebx],0xfd
  4259d3:	jmp    DWORD PTR [edx-0x75]
  4259d6:	and    al,BYTE PTR [eax]
  4259d8:	bound  ecx,QWORD PTR [ebx]
  4259da:	dec    eax
  4259db:	imul   eax,ecx,0xab726b67
  4259e1:	or     eax,DWORD PTR [edx]
  4259e3:	add    BYTE PTR [edx-0x75],ah
  4259e6:	add    DWORD PTR [eax],eax
  4259e8:	bound  ecx,QWORD PTR [ebx]
  4259ea:	dec    ecx
  4259eb:	jns    0x4259ff
  4259ed:	pop    ss
  4259ee:	imul   esp,DWORD PTR [ebx-0x49],0x3f
  4259f2:	popa   
  4259f3:	outs   dx,BYTE PTR ds:[esi]
  4259f4:	mov    dh,0x59
  4259f6:	add    BYTE PTR [edx],al
  4259f8:	and    cl,BYTE PTR [ebx]
  4259fa:	and    BYTE PTR [ebx],0x32
  4259fd:	or     eax,DWORD PTR [eax]
  4259ff:	inc    ebx
  425a00:	lea    ebx,[eax+0x69]
  425a03:	outs   dx,DWORD PTR ds:[esi]
  425a04:	dec    ebx
  425a05:	dec    esi
  425a06:	and    al,0x3f
  425a08:	fwait
  425a09:	xor    BYTE PTR [eax+0x5f],cl
  425a0c:	jg     0x425a4f
  425a0e:	add    al,0xff
  425a10:	cld    
  425a11:	loopne 0x425994
  425a13:	and    eax,0x0
	...
  425a3c:	dec    ebx
  425a3d:	loopne 0x425a40
  425a3f:	dec    ebx
  425a40:	jb     0x425a42
  425a42:	xor    al,0x67
  425a44:	push   0x667256f4
  425a49:	repz add eax,DWORD PTR [edx]
  425a4c:	dec    ebx
  425a4d:	loopne 0x4259d0
  425a4f:	cs dec ebx
  425a51:	loopne 0x425a54
  425a53:	inc    ecx
  425a54:	xor    al,0xfd
  425a56:	outs   dx,BYTE PTR ds:[esi]
  425a57:	ins    DWORD PTR es:[edi],dx
  425a58:	sub    eax,0x286d45c0
  425a5d:	aad    0x70
  425a5f:	arpl   WORD PTR ds:0x490056dc,bx
  425a65:	loopne 0x425a68
  425a67:	sub    BYTE PTR [eax+eiz*8+0x1],0x0
  425a6c:	or     bh,cl
  425a6e:	jo     0x425adb
  425a70:	sbb    al,0x96
  425a72:	and    DWORD PTR [edi],edi
  425a74:	out    dx,eax
  425a75:	mov    esp,0x92f26e6c
  425a7a:	push   ebp
  425a7b:	jb     0x425a67
  425a7d:	xchg   ebx,eax
  425a7e:	ins    BYTE PTR es:[edi],dx
  425a7f:	jbe    0x425a67
  425a81:	push   DWORD PTR [edi]
  425a83:	ins    DWORD PTR es:[edi],dx
  425a84:	hlt    
  425a85:	jnp    0x425add
  425a87:	add    BYTE PTR [edx-0x20],cl
  425a8a:	add    DWORD PTR [eax+0x1e01b],eax
  425a90:	or     cl,BYTE PTR [eax+esi*2+0x5679b567]
  425a97:	je     0x425a52
  425a99:	adc    DWORD PTR [ebp+0x67],0x542185bd
	...
  425ac8:	pushf  
  425ac9:	push   edi
  425aca:	ins    DWORD PTR es:[edi],dx
  425acb:	jno    0x425b18
  425acd:	or     eax,ebp
  425acf:	add    ecx,DWORD PTR [ebx-0x77]
  425ad2:	in     al,0x3
  425ad4:	dec    ebx
  425ad5:	or     DWORD PTR [edi],esi
  425ad7:	imul   ebx,DWORD PTR [ecx-0x5b8dc1a6],0x6e36e765
  425ae1:	outs   dx,DWORD PTR ds:[esi]
  425ae2:	xor    ebx,DWORD PTR [ebx-0x6c]
  425ae5:	pop    ebx
  425ae6:	dec    esp
  425ae7:	inc    eax
  425ae8:	and    BYTE PTR [eax+0x4a],0x56
  425aec:	jbe    0x425b48
  425aee:	push   ss
  425aef:	push   0x57
  425af1:	xor    eax,0x6d656d36
  425af6:	push   es
  425af7:	pop    ebx
  425af8:	pop    edx
  425af9:	xor    eax,0x5b39592a
  425afe:	or     al,0x72
  425b00:	aaa    
  425b01:	aas    
  425b02:	add    al,0x56
  425b04:	cmp    ah,BYTE PTR [eax+0x6]
  425b07:	jb     0x425b18
  425b09:	dec    esp
  425b0a:	out    dx,eax
  425b0b:	push   ebx
  425b0c:	aaa    
  425b0d:	data16 fldcw WORD PTR [eax+0x19]
  425b11:	xor    eax,0x65286bba
  425b16:	ret    
  425b17:	and    eax,DWORD PTR ds:0xe867bb66
  425b1d:	pop    edx
  425b1e:	mov    edx,0x9a461b03
  425b23:	aaa    
  425b24:	sub    ebp,DWORD PTR [edx+edi*4]
  425b27:	and    eax,DWORD PTR [ebx]
  425b29:	cmp    eax,0x3393
	...
  425b52:	add    BYTE PTR [eax],al
  425b54:	ss sbb ch,dl
  425b57:	adc    edx,DWORD PTR [eax+0x3]
  425b5a:	scas   eax,DWORD PTR es:[edi]
  425b5b:	jb     0x425b37
  425b5d:	pop    esp
  425b5e:	shl    DWORD PTR [ebx],1
  425b60:	sub    BYTE PTR [edx-0x24],bl
  425b63:	or     eax,0x688a6884
  425b68:	mov    ebx,0x6123c15d
  425b6d:	and    al,0x0
  425b6f:	ret    
  425b70:	pop    ebx
  425b71:	(bad)  
  425b72:	mov    ch,BYTE PTR ds:[ebp+0x6c5d7068]
  425b79:	dec    eax
  425b7a:	outs   dx,BYTE PTR ds:[esi]
  425b7b:	dec    edx
  425b7c:	call   0x200f:0xa247676d
  425b83:	inc    eax
  425b84:	jae    0x425bee
  425b86:	outs   dx,BYTE PTR ds:[esi]
  425b87:	cmp    eax,0xd775d70
  425b8c:	das    
  425b8d:	pop    ds
  425b8e:	cmp    DWORD PTR [eax],edi
  425b90:	dec    esp
  425b91:	sbb    DWORD PTR [ebx],ecx
  425b93:	jecxz  0x425b24
  425b95:	data16 outs dx,BYTE PTR ds:[esi]
  425b97:	sbb    eax,0xcc746364
  425b9c:	test   BYTE PTR [eax+0x6e],ch
  425b9f:	push   cs
  425ba0:	jae    0x425c03
  425ba2:	cmp    cl,cl
  425ba4:	ins    DWORD PTR es:[edi],dx
  425ba5:	gs jae 0x425b9c
  425ba8:	dec    esi
  425ba9:	dec    edx
  425baa:	ins    DWORD PTR es:[edi],dx
  425bab:	(bad)  
  425bad:	push   0x6621fd61
  425bb2:	outs   dx,BYTE PTR ds:[esi]
  425bb3:	mov    bl,0x68
  425bb5:	push   0x6c
  425bb7:	(bad)  
	...
  425be0:	mul    DWORD PTR [edi+0xb]
  425be3:	repz (bad)
  425be6:	outs   dx,BYTE PTR ds:[esi]
  425be7:	frstor ds:0x3cfc7463
  425bed:	pop    esp
  425bee:	jo     0x425bbc
  425bf0:	pop    esi
  425bf1:	sub    DWORD PTR [edi-0x47],ebx
  425bf4:	sbb    BYTE PTR [ebp+0x67],ah
  425bf7:	retf   0x5ce9
  425bfa:	addr16 mov esi,0x8a6d25da
  425c00:	hlt    
  425c01:	addr16 je 0x425bd0
  425c04:	call   FWORD PTR [edx+esi*2-0x74]
  425c08:	jmp    0x9025676c
  425c0d:	data16 outs dx,BYTE PTR ds:[esi]
  425c0f:	add    BYTE PTR [esi+0x7746e6b],bh
  425c15:	dec    ebx
  425c16:	outs   dx,BYTE PTR ds:[esi]
  425c17:	arpl   bp,ax
  425c19:	imul   esp,DWORD PTR [ebp+0x6e],0xffffffcd
  425c1d:	cmc    
  425c1e:	pop    ds
  425c1f:	bound  edi,QWORD PTR [ebx+0x57]
  425c22:	pop    ebp
  425c23:	jb     0x425bd0
  425c25:	add    al,0xa
  425c27:	push   ebp
  425c28:	jno    0x425c96
  425c2a:	jb     0x425c59
  425c2c:	xor    esp,DWORD PTR [edx+0x61]
  425c2f:	outs   dx,BYTE PTR ds:[esi]
  425c30:	ds repz pop ds
  425c33:	dec    ebp
  425c34:	test   DWORD PTR [ebx],esi
  425c36:	gs ins BYTE PTR es:[edi],dx
  425c38:	xchg   BYTE PTR [eax+0x2b],ch
  425c3b:	xor    al,0xe4
  425c3d:	neg    DWORD PTR [edi]
  425c3f:	sub    BYTE PTR [ecx+0x5a],dl
  425c42:	imul   esi,DWORD PTR [eax+0x0],0x0
	...
  425c69:	add    BYTE PTR [eax],al
  425c6b:	add    BYTE PTR [ebx+0x31],al
  425c6e:	bound  eax,QWORD PTR gs:[esi+0x6c]
  425c72:	aaa    
  425c73:	and    BYTE PTR [edi+0x1e],ah
  425c76:	inc    ebp
  425c77:	inc    ebp
  425c78:	xchg   edx,eax
  425c79:	cli    
  425c7a:	sub    eax,0x53278930
  425c7f:	imul   eax,DWORD PTR [ecx+eiz*2+0x6b],0x3527a177
  425c87:	cmp    BYTE PTR [ebx],bh
  425c89:	add    al,0xa
  425c8b:	or     eax,0x6f3f0798
  425c90:	test   BYTE PTR [ebx],bh
  425c92:	popa   
  425c93:	outs   dx,BYTE PTR ds:[esi]
  425c94:	sahf   
  425c95:	and    cl,BYTE PTR [ebp+eiz*2-0x6c]
  425c99:	pusha  
  425c9a:	je     0x425d04
  425c9c:	dec    eax
  425c9d:	or     eax,0x66816f4c
  425ca2:	je     0x425d0d
  425ca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ca5:	pop    ecx
  425ca6:	cmp    al,BYTE PTR [eax]
  425ca8:	lods   eax,DWORD PTR ds:[esi]
  425ca9:	dec    edx
  425caa:	push   esp
  425cab:	and    BYTE PTR [edi+0x4b48203c],cl
  425cb1:	xchg   esi,eax
  425cb2:	xor    eax,0x2fb17450
  425cb7:	xor    BYTE PTR [esi-0x2a],cl
  425cba:	dec    ecx
  425cbb:	ins    DWORD PTR es:[edi],dx
  425cbc:	mov    eax,0x66201b5c
  425cc1:	dec    edi
  425cc2:	push   cs
  425cc3:	or     cl,BYTE PTR [edx-0x649c9b81]
  425cc9:	xor    al,0x1a
  425ccb:	and    BYTE PTR [ecx+0x3],ah
  425cce:	sub    cl,BYTE PTR [ebx]
	...
  425cf8:	inc    ecx
  425cf9:	and    DWORD PTR [ecx+0x61],esp
  425cfc:	outs   dx,BYTE PTR ds:[esi]
  425cfd:	xor    BYTE PTR [eax+0x2b],bl
  425d00:	xchg   BYTE PTR [edx],bh
  425d02:	popa   
  425d03:	ins    DWORD PTR es:[edi],dx
  425d04:	outs   dx,DWORD PTR ds:[esi]
  425d05:	cmp    DWORD PTR [esi+0x65],ebp
  425d08:	xor    DWORD PTR [eax],eax
  425d0a:	imul   esp,DWORD PTR [esi+ebp*2+0x12],0x58
  425d0f:	addr16 push edi
  425d11:	sub    DWORD PTR [eax],esi
  425d13:	and    BYTE PTR [ecx],ah
  425d15:	out    0x54,eax
  425d17:	cmp    ebx,DWORD PTR [ebx]
  425d19:	in     eax,dx
  425d1a:	pop    es
  425d1b:	inc    ecx
  425d1c:	xor    al,0xd2
  425d1e:	imul   esp,DWORD PTR [ebx+0x28],0xffffffd4
  425d22:	ins    BYTE PTR es:[edi],dx
  425d23:	ins    DWORD PTR es:[edi],dx
  425d24:	and    eax,0x1f6121c6
  425d29:	or     edx,DWORD PTR [ecx+0x63]
  425d2c:	push   esi
  425d2d:	out    0x38,al
  425d2f:	jno    0x425d57
  425d31:	scas   al,BYTE PTR es:[edi]
  425d32:	xor    BYTE PTR [edi],bh
  425d34:	sub    al,0xcd
  425d36:	imul   esi,DWORD PTR [ecx+edx*2+0x0],0x4f
  425d3b:	ins    DWORD PTR es:[edi],dx
  425d3c:	add    ecx,ecx
  425d3e:	ins    DWORD PTR es:[edi],dx
  425d3f:	ins    BYTE PTR es:[edi],dx
  425d40:	jmp    0x2c00:0x3b2e17fa
  425d47:	popa   
  425d48:	fmul   st(4),st
  425d4a:	push   ecx
  425d4b:	pop    edi
  425d4c:	(bad)  
  425d4e:	pop    edi
  425d4f:	ins    BYTE PTR es:[edi],dx
  425d50:	out    0x8,al
  425d52:	loop   0x425d77
  425d54:	add    BYTE PTR [esi],dh
  425d56:	mov    al,0x48
  425d58:	sub    ebx,DWORD PTR [eax*8+0x13]
	...
  425d83:	add    BYTE PTR [edx-0x529349d7],al
  425d89:	ins    DWORD PTR es:[edi],dx
  425d8a:	xchg   esi,eax
  425d8b:	push   esi
  425d8c:	mov    edx,0x641bc029
  425d91:	add    al,0xe1
  425d93:	adc    BYTE PTR [ecx+0x9],dl
  425d96:	mov    ebp,0xe7236d03
  425d9b:	aas    
  425d9c:	popa   
  425d9d:	and    edx,DWORD PTR [ecx]
  425d9f:	add    al,0x61
  425da1:	and    eax,DWORD PTR [ecx]
  425da3:	add    al,0x75
  425da5:	ins    BYTE PTR es:[edi],dx
  425da6:	push   ebx
  425da7:	gs jnp 0x425e0a
  425daa:	cli    
  425dab:	adc    DWORD PTR ds:0x4b704b6d,esp
  425db1:	inc    ebx
  425db2:	dec    esp
  425db3:	pop    eax
  425db4:	and    al,0x59
  425db6:	inc    eax
  425db7:	inc    edx
  425db8:	pop    eax
  425db9:	imul   ecx,DWORD PTR ds:0x194b5969,0x69
  425dc0:	push   0x3f692509
  425dc5:	cmp    al,0x1a
  425dc7:	imul   edi,DWORD PTR [ecx],0x2059154c
  425dcd:	or     edi,esp
  425dcf:	outs   dx,BYTE PTR ds:[esi]
  425dd0:	pop    ds
  425dd1:	ins    BYTE PTR es:[edi],dx
  425dd2:	mov    edx,0xfb6d7511
  425dd7:	outs   dx,DWORD PTR ds:[esi]
  425dd8:	dec    ebx
  425dd9:	(bad)  ss:[esi+0x6]
  425ddd:	pop    ecx
  425dde:	les    ebp,FWORD PTR [ebp-0x6]
  425de1:	pop    esp
  425de2:	(bad)  
  425de3:	push   ecx
  425de4:	and    al,0x6a
  425de6:	les    eax,FWORD PTR [ebx]
	...
  425e10:	dec    ebx
  425e11:	push   0x591455cb
  425e16:	rcl    BYTE PTR [edx],1
  425e18:	cmp    DWORD PTR [ebx],esp
  425e1a:	add    ch,cl
  425e1c:	hlt    
  425e1d:	add    BYTE PTR fs:[eax-0x75929b14],ch
  425e24:	out    dx,eax
  425e25:	pop    esp
  425e26:	arpl   WORD PTR [eax-0x78b89322],bp
  425e2c:	mov    bh,0x55
  425e2e:	mov    BYTE PTR [si+0x7a68],ch
  425e33:	mov    WORD PTR [ecx+0x68],?
  425e36:	fs jmp 0x8aa5bfc5
  425e3c:	mov    cl,0x35
  425e3e:	ins    DWORD PTR es:[edi],dx
  425e3f:	xor    BYTE PTR [ebx-0x5bb3b4a1],0x6b
  425e46:	arpl   WORD PTR [ebx+0x7a],bx
  425e49:	popa   
  425e4a:	addr16 pop ecx
  425e4c:	dec    edi
  425e4d:	inc    edi
  425e4e:	jb     0x425e94
  425e50:	cmp    ah,BYTE PTR fs:[edi+0x4d]
  425e54:	dec    edi
  425e55:	dec    edx
  425e56:	jb     0x425e9c
  425e58:	arpl   WORD PTR [esi+ebp*2+0x3c],cx
  425e5c:	je     0x425eca
  425e5e:	jb     0x425ea8
  425e60:	sub    DWORD PTR [edi+edi*1-0x17],0xffffff8b
  425e65:	pop    ebx
  425e66:	arpl   WORD PTR ds:0xc635b85,ax
  425e6c:	dec    edi
  425e6d:	dec    edx
  425e6e:	jb     0x425e80
  425e70:	pop    ss
  425e71:	push   ebp
  425e72:	inc    ebp
  425e73:	or     al,0x0
	...
  425e99:	add    BYTE PTR [eax],al
  425e9b:	add    BYTE PTR [ebx],dl
  425e9d:	cmp    al,0x71
  425e9f:	add    al,0x19
  425ea1:	inc    edx
  425ea2:	arpl   ax,si
  425ea4:	dec    eax
  425ea5:	dec    edx
  425ea6:	jb     0x425e98
  425ea8:	clc    
  425ea9:	push   esp
  425eaa:	inc    ebx
  425eab:	loope  0x425ea5
  425ead:	pop    ebp
  425eae:	jb     0x425e85
  425eb0:	add    ebp,DWORD PTR [edi+esi*2-0x17]
  425eb4:	or     ebx,DWORD PTR [ebx+0x77]
  425eb7:	fst    DWORD PTR [eax*2+0x38b10063]
  425ebe:	jb     0x425f2f
  425ec0:	mov    eax,DWORD PTR [ecx+0x61]
  425ec3:	jns    0x425f37
  425ec5:	dec    ecx
  425ec6:	jb     0x425f41
  425ec8:	mov    ds:0xbe655238,al
  425ecd:	addr16 pop ebp
  425ecf:	jae    0x425e98
  425ed1:	dec    ecx
  425ed2:	imul   ebp,DWORD PTR [esi-0x1a],0x66
  425ed6:	js     0x425f4c
  425ed8:	xor    bl,BYTE PTR [edx]
  425eda:	popa   
  425edb:	jbe    0x425ea4
  425edd:	cmp    DWORD PTR [esp+edx*2-0x43],esi
  425ee1:	sbb    BYTE PTR [ecx+0x6c],ah
  425ee4:	aam    0xb
  425ee6:	dec    ebx
  425ee7:	jo     0x425eb0
  425ee9:	pop    ebp
  425eea:	push   eax
  425eeb:	jb     0x425f6a
  425eed:	push   0x61
  425eef:	jae    0x425f62
  425ef1:	adc    DWORD PTR [ebx+0x6b],ebp
  425ef4:	xchg   edi,eax
  425ef5:	pop    edi
  425ef6:	add    BYTE PTR [ecx+0x3f],cl
  425ef9:	xor    eax,0x5e317261
  425efe:	outs   dx,BYTE PTR ds:[esi]
  425eff:	popa   
	...
  425f28:	ss push 0x66956f4c
  425f2e:	popa   
  425f2f:	fs cmp eax,0x4773515f
  425f35:	cmp    eax,DWORD PTR [eax]
  425f37:	inc    edi
  425f38:	inc    edi
  425f39:	xor    DWORD PTR [edi+ebp*2+0x49],edx
  425f3d:	push   0x65bc496e
  425f42:	imul   esi,DWORD PTR [edx+0x5f],0x6c
  425f46:	je     0x425fb1
  425f48:	cmp    eax,0x4d43005f
  425f4d:	pop    edi
  425f4e:	jbe    0x425fb5
  425f50:	mov    al,ds:0x86694f37
  425f55:	pop    ss
  425f56:	imul   edx,DWORD PTR [ebx+0x76],0x39
  425f5a:	outs   dx,BYTE PTR gs:[esi]
  425f5c:	dec    ebx
  425f5d:	mov    edi,0xa0e76730
  425f62:	add    DWORD PTR [esp+eiz*8-0x42],ecx
  425f66:	ins    BYTE PTR es:[edi],dx
  425f67:	outs   dx,BYTE PTR ds:[esi]
  425f68:	push   ss
  425f69:	xchg   ebx,eax
  425f6a:	data16 jb 0x425f77
  425f6d:	loop   0x425fbc
  425f6f:	ins    DWORD PTR es:[edi],dx
  425f70:	in     al,dx
  425f71:	retf   0x7056
  425f74:	sti    
  425f75:	jae    0x425fe1
  425f77:	jbe    0x425f5b
  425f79:	jge    0x425fe1
  425f7b:	gs scas al,BYTE PTR es:[edi]
  425f7d:	mov    fs,WORD PTR [edx+0x6c]
  425f80:	mov    dh,0x85
  425f82:	inc    edx
  425f83:	add    BYTE PTR [edx-0x478c9884],cl
  425f89:	push   esp
  425f8a:	xor    eax,0x6d
	...
  425fb3:	add    BYTE PTR [eax-0x66af9483],dh
  425fb9:	mov    DWORD PTR [ebx+0x67],edx
  425fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fbd:	cmp    eax,0xe0986361
  425fc2:	add    DWORD PTR [ecx+0x79],esp
  425fc5:	cmp    DWORD PTR [esp+esi*2+0x38],edx
  425fc9:	repnz sub DWORD PTR [edi+eiz*2+0x34],esp
  425fce:	add    al,0x41
  425fd0:	data16 adc dl,BYTE PTR [eax+0x4d]
  425fd4:	pop    ebx
  425fd5:	cmp    eax,0x1362516a
  425fda:	push   eax
  425fdb:	arpl   WORD PTR [esi+0x13],sp
  425fde:	push   eax
  425fdf:	ins    DWORD PTR es:[edi],dx
  425fe0:	pop    ecx
  425fe1:	add    eax,0xfd080043
  425fe6:	push   ebp
  425fe7:	je     0x425fef
  425fe9:	into   
  425fea:	push   eax
  425feb:	imul   ecx,DWORD PTR [eax],0xfffffffd
  425fee:	push   ebp
  425fef:	je     0x426013
  425ff1:	push   es
  425ff2:	imul   esp,DWORD PTR [ecx+0x2a],0xffffffcc
  425ff6:	pusha  
  425ff7:	jno    0x42600b
  425ff9:	into   
  425ffa:	ss je  0x426021
  425ffd:	or     ecx,ebx
  425fff:	pusha  
  426000:	dec    ebx
  426001:	dec    edx
  426002:	les    edx,FWORD PTR [ebp-0x1]
  426005:	dec    ecx
  426006:	ret    
  426007:	push   0xfffffffa
  426009:	arpl   WORD PTR [edx-0x33a519b1],di
  42600f:	add    ecx,DWORD PTR [edx]
  426011:	pop    ebx
  426012:	rcl    BYTE PTR [ebx-0x21],0x47
  426016:	retf   0x54
	...
  42603d:	add    BYTE PTR [eax],al
  42603f:	add    al,bl
  426041:	pop    edi
  426042:	mov    ecx,0x99640a60
  426047:	dec    edi
  426048:	in     al,0x66
  42604a:	nop
  42604b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42604d:	push   ebp
  42604e:	mov    WORD PTR [ebx],?
  426050:	mov    ecx,0xbf649560
  426055:	fs mov dl,0x60
  426058:	mov    ah,0x9
  42605a:	out    0x3,eax
  42605c:	dec    ebx
  42605d:	or     edi,esp
  42605f:	add    ecx,DWORD PTR [ebx+0x9]
  426062:	out    0x3,eax
  426064:	dec    ebx
  426065:	or     edi,esp
  426067:	add    ecx,DWORD PTR [ebx+0x9]
  42606a:	out    0x3,eax
  42606c:	dec    ebx
  42606d:	or     edi,esp
  42606f:	add    ecx,DWORD PTR [ebx+0x9]
  426072:	out    0x3,eax
  426074:	dec    ebx
  426075:	or     edi,esp
  426077:	add    ecx,DWORD PTR [ebx+0x9]
  42607a:	out    0x3,eax
  42607c:	dec    ebx
  42607d:	or     edi,esp
  42607f:	add    ecx,DWORD PTR [ebx+0x9]
  426082:	out    0x3,eax
  426084:	dec    ebx
  426085:	or     edi,esp
  426087:	add    ecx,DWORD PTR [ebx+0x9]
  42608a:	out    0x3,eax
  42608c:	dec    ebx
  42608d:	or     edi,esp
  42608f:	add    ecx,DWORD PTR [ebx+0x9]
  426092:	out    0x3,eax
  426094:	dec    ebx
  426095:	or     edi,esp
  426097:	add    ecx,DWORD PTR [ebx+0x9]
  42609a:	out    0x3,eax
  42609c:	dec    ebx
  42609d:	or     DWORD PTR [eax],eax
  42609f:	jmp    0xe94269ec
	...
  4260cc:	dec    eax
  4260cd:	or     DWORD PTR [eax],eax
  4260cf:	jmp    0xe9426a1c
  4260d4:	dec    eax
  4260d5:	or     DWORD PTR [eax],eax
  4260d7:	jmp    0xe9426a24
  4260dc:	dec    eax
  4260dd:	or     DWORD PTR [eax],eax
  4260df:	jmp    0xe9426a2c
  4260e4:	adc    BYTE PTR [edi+eax*2],dh
  4260e7:	lods   eax,DWORD PTR ds:[esi]
  4260e8:	dec    eax
  4260e9:	push   eax
  4260ea:	and    edi,ecx
  4260ec:	xor    BYTE PTR [ecx],dh
  4260ee:	sub    ecx,esp
  4260f0:	cmp    BYTE PTR ds:0x196bcc58,dl
  4260f6:	xor    al,0xb1
  4260f8:	jae    0x426122
  4260fa:	xor    bl,bl
  4260fc:	jo     0x426126
  4260fe:	xor    BYTE PTR [ebx-0x46dcdf90],bh
  426104:	xor    DWORD PTR ds:[ebx],esp
  426107:	mov    ecx,0xb9233136
  42610c:	xor    DWORD PTR ds:[ebx],esp
  42610f:	sbb    DWORD PTR ds:0x5d192331,esi
  426115:	xor    DWORD PTR [ebx],esp
  426117:	sbb    DWORD PTR [ebp+0x31],edx
  42611a:	jnp    0x426105
  42611c:	mov    ebp,DWORD PTR [eax+0x74]
  42611f:	aaa    
  426120:	push   0x84376755
  426125:	cmp    dh,BYTE PTR [edi+0x3a]
  426128:	jnp    0x426192
  42612a:	imul   esp,DWORD PTR [eax],0x61
  42612d:	arpl   WORD PTR [ebp-0x17],bp
	...
  426158:	pop    edi
  426159:	push   0x5d240f72
  42615e:	xor    ebx,ebx
  426160:	jb     0x4261c7
  426162:	ins    BYTE PTR es:[edi],dx
  426163:	std    
  426164:	dec    eax
  426165:	inc    esp
  426166:	jno    0x426168
  426168:	dec    ebp
  426169:	bound  esi,QWORD PTR [ebx+0x36]
  42616c:	ficomp WORD PTR [eax]
  42616e:	jb     0x4261df
  426170:	push   ecx
  426171:	sub    al,0x6f
  426173:	jae    0x426117
  426175:	adc    eax,0x396e666b
  42617a:	pop    ebp
  42617b:	jb     0x42610c
  42617d:	adc    al,0x46
  42617f:	popa   
  426180:	mov    al,ds:0x9f6c5014
  426185:	imul   esp,DWORD PTR [ebp+0x6e],0x544614b1
  42618c:	ret    0x4814
  42618f:	outs   dx,DWORD PTR ds:[esi]
  426190:	mov    eax,ds:0xb1006f3c
  426195:	popa   
  426196:	data16 je 0x426146
  426199:	addr16 jb 0x426201
  42619c:	push   es
  42619d:	dec    edx
  42619e:	pop    ebp
  42619f:	jb     0x4261c1
  4261a1:	adc    al,0x50
  4261a3:	ins    BYTE PTR es:[edi],dx
  4261a4:	fild   QWORD PTR [eax+0x65]
  4261a7:	outs   dx,BYTE PTR ds:[esi]
  4261a8:	mov    cl,0x14
  4261aa:	inc    esi
  4261ab:	push   esp
  4261ac:	ret    0x4813
  4261af:	outs   dx,DWORD PTR ds:[esi]
  4261b0:	mov    eax,ds:0xb1006f3c
  4261b5:	pusha  
  4261b6:	data16 je 0x426226
  4261b9:	push   0x6572
	...
  4261e2:	add    BYTE PTR [eax],al
  4261e4:	inc    esi
  4261e5:	inc    edi
  4261e6:	pop    ebp
  4261e7:	jb     0x42621f
  4261e9:	push   ss
  4261ea:	pop    ebp
  4261eb:	jbe    0x42617c
  4261ed:	imul   eax,DWORD PTR [ecx+ebp*2-0x7d],0x1a676b61
  4261f5:	pusha  
  4261f6:	outs   dx,DWORD PTR ds:[esi]
  4261f7:	je     0x42617e
  4261f9:	xor    esi,DWORD PTR [ebp+0x5c]
  4261fc:	sub    al,0x19
  4261fe:	push   eax
  4261ff:	dec    eax
  426200:	xor    eax,0x81007436
  426205:	bound  esp,QWORD PTR [esi+0x74]
  426208:	dec    ebx
  426209:	jmp    0x42626b
  42620b:	jb     0x42623b
  42620d:	push   ds
  42620e:	inc    edx
  42620f:	pop    edi
  426210:	cmp    DWORD PTR [eax-0x2bd5aecb],edx
  426216:	pop    esi
  426217:	fs pop es
  426219:	or     DWORD PTR [ecx+0x6c],esp
  42621c:	and    al,0x3
  42621e:	dec    esp
  42621f:	sbb    BYTE PTR [bp+0x7268],ch
  426224:	add    cl,BYTE PTR [esi-0x55e4abc1]
  42622a:	push   0x31e1ff71
  42622f:	pop    edi
  426230:	clc    
  426231:	mov    ss,WORD PTR [eax+0x6d]
  426234:	fld    st(5)
  426236:	add    DWORD PTR [eax-0x14],ecx
  426239:	mov    cs,WORD PTR [ebp+0x4e]
  42623c:	jmp    0x5e6e:0xf6005e8c
  426243:	jb     0x426290
  426245:	pushf  
  426246:	push   0x6e
	...
  426270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426271:	loopne 0x4262c3
  426273:	popa   
  426274:	mov    bl,0x9b
  426276:	pop    edi
  426277:	je     0x426234
  426279:	mov    dl,0x6a
  42627b:	outs   dx,BYTE PTR ds:[esi]
  42627c:	mov    dl,0xe0
  42627e:	xor    eax,0x34a99345
  426283:	dec    esp
  426284:	mov    gs,WORD PTR [esi+0x1]
  426287:	inc    edi
  426288:	popf   
  426289:	das    
  42628a:	push   eax
  42628b:	pop    edi
  42628c:	ja     0x4262ca
  42628e:	inc    eax
  42628f:	addr16 jns 0x426272
  426292:	cmp    esi,DWORD PTR [ebx+edi*2+0x29]
  426296:	data16 addr16 jge 0x4262db
  42629a:	arpl   WORD PTR [bp+di-0x11],cx
  42629e:	fs push di
  4262a1:	or     esp,DWORD PTR [ebx+0x72]
  4262a4:	outs   dx,BYTE PTR ds:[esi]
  4262a5:	cld    
  4262a6:	cmp    al,0x68
  4262a8:	bound  ecx,QWORD PTR [ecx]
  4262aa:	sbb    ch,BYTE PTR [eax+0x28]
  4262ad:	push   edi
  4262ae:	cmp    ebp,DWORD PTR [edi]
  4262b0:	and    al,0x5b
  4262b2:	or     esp,DWORD PTR [edi+0x3e]
  4262b5:	push   esi
  4262b6:	mov    DWORD PTR [edx+0x1e],0x3565145c
  4262bd:	gs add al,0x52
  4262c0:	dec    ebx
  4262c1:	ss push es
  4262c3:	pop    esi
  4262c4:	pop    ds
  4262c5:	push   edx
  4262c6:	or     BYTE PTR [edx+0x28],dl
  4262c9:	sub    eax,0x55ec6bae
  4262ce:	retf   
  4262cf:	pusha  
  4262d0:	stc    
  4262d1:	sub    al,0xbb
  4262d3:	data16 add BYTE PTR [eax],al
	...
  4262fa:	add    BYTE PTR [eax],al
  4262fc:	jmp    DWORD PTR [edi-0x45]
  4262ff:	and    ecx,DWORD PTR [edx]
  426301:	pop    edx
  426302:	aam    0x68
  426304:	add    al,0x5b
  426306:	ret    
  426307:	pusha  
  426308:	(bad)  [eax]
  42630a:	xchg   ebx,eax
  42630b:	dec    esp
  42630c:	fist   DWORD PTR [ebp-0x4a]
  42630f:	ins    BYTE PTR es:[edi],dx
  426310:	xlat   BYTE PTR ds:[ebx]
  426311:	pop    DWORD PTR gs:[ebx]
  426314:	call   0xe72d:0xba609360
  42631b:	aaa    
  42631c:	mov    WORD PTR [ecx-0x66],ds
  42631f:	dec    esi
  426320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426321:	push   ebp
  426322:	mov    ch,BYTE PTR [ebx-0x79]
  426325:	xor    bl,BYTE PTR [edx-0x68ca7aca]
  42632b:	add    esi,DWORD PTR [edi+0x52]
  42632e:	and    BYTE PTR [ebp+0x5d],0x60
  426332:	push   ebp
  426333:	ins    DWORD PTR es:[edi],dx
  426334:	dec    ebx
  426335:	sbb    edx,DWORD PTR [eax+0x66]
  426338:	or     DWORD PTR fs:[esi],edi
  42633b:	xor    edx,DWORD PTR [esi+0x4b343343]
  426341:	inc    ebp
  426342:	xor    BYTE PTR [edx],dh
  426344:	dec    ebx
  426345:	inc    ebp
  426346:	and    al,0x3e
  426348:	xchg   DWORD PTR [eax+0x0],eax
  42634b:	sbb    ecx,DWORD PTR [edi+0x48]
  42634e:	push   ebx
  42634f:	adc    eax,0x3954438a
  426354:	dec    edi
  426355:	cmp    al,BYTE PTR [ecx+0x31]
  426358:	cs pop eax
  42635a:	je     0x426362
  42635c:	sbb    DWORD PTR [edx+0x0],edx
  42635f:	cmp    al,BYTE PTR [eax]
	...
  426385:	add    BYTE PTR [eax],al
  426387:	add    BYTE PTR [ebx+eiz*2],ah
  42638a:	je     0x42638a
  42638c:	das    
  42638d:	push   edi
  42638e:	arpl   WORD PTR ds:0xb6d5d5c,bx
  426394:	cs pop ebp
  426396:	push   ecx
  426397:	sub    al,BYTE PTR [esi]
  426399:	cmp    DWORD PTR [ebx-0x3b],eax
  42639c:	or     DWORD PTR [esi+0x74],edx
  42639f:	les    edi,FWORD PTR [esi]
  4263a1:	xor    eax,0x29450950
  4263a6:	dec    eax
  4263a7:	mov    esi,0x985c65e3
  4263ac:	or     DWORD PTR ds:0x66e4ce6d,esi
  4263b2:	pop    edi
  4263b3:	mov    ebx,0xc76d3848
  4263b8:	cld    
  4263b9:	push   ebx
  4263ba:	pop    edi
  4263bb:	fwait
  4263bc:	stos   DWORD PTR es:[edi],eax
  4263bd:	gs inc ebp
  4263bf:	lea    esp,[ebp+0x79855f2b]
  4263c5:	dec    edx
  4263c6:	aas    
  4263c7:	mov    ecx,0x7c41658b
  4263cc:	xchg   esp,eax
  4263cd:	sub    al,0x46
  4263cf:	xchg   ebp,eax
  4263d0:	pop    eax
  4263d1:	jmp    0x3b9b2d0b
  4263d6:	ins    DWORD PTR es:[edi],dx
  4263d7:	xchg   DWORD PTR [ebx+0x6e50713a],ebp
  4263dd:	aaa    
  4263de:	pop    edi
  4263df:	dec    ebp
  4263e0:	inc    ebx
  4263e1:	pop    eax
  4263e2:	inc    ecx
  4263e3:	cmp    eax,0x4b6c366e
  4263e8:	push   0x3b
	...
  426411:	add    BYTE PTR [eax],al
  426413:	add    BYTE PTR [ecx+0x2e],al
  426416:	data16 je 0x42642e
  426419:	sub    al,0x72
  42641b:	gs ds push es
  42641e:	ins    BYTE PTR es:[edi],dx
  42641f:	outs   dx,DWORD PTR ds:[esi]
  426420:	sub    BYTE PTR [esp+ebp*2],0x53
  426424:	jno    0x426472
  426426:	push   eax
  426427:	inc    ebp
  426428:	jle    0x426474
  42642a:	jno    0x4264a0
  42642c:	inc    edi
  42642d:	pop    es
  42642e:	push   esp
  42642f:	push   eax
  426430:	adc    BYTE PTR ds:0x303d4820,0x61
  426437:	pop    esp
  426438:	inc    ebx
  426439:	dec    edx
  42643a:	push   esp
  42643b:	outs   dx,DWORD PTR ds:[esi]
  42643c:	dec    ebp
  42643d:	xor    DWORD PTR [edx+0x61],esp
  426440:	nop
  426441:	or     al,0x4f
  426443:	outs   dx,DWORD PTR ds:[esi]
  426444:	xchg   esp,eax
  426445:	pop    eax
  426446:	jae    0x4264a9
  426448:	mov    al,ds:0x8e475c67
  42644d:	sub    eax,0xf9ae6162
  426452:	ds inc ecx
  426454:	ret    0x5c07
  426457:	inc    ebx
  426458:	xchg   edi,eax
  426459:	pop    eax
  42645a:	popa   
  42645b:	inc    esi
  42645c:	mov    dh,0xfc
  42645e:	pop    ds
  42645f:	aaa    
  426460:	inc    edx
  426461:	std    
  426462:	jno    0x4264d3
  426464:	aam    0x66
  426466:	outs   dx,DWORD PTR ds:[esi]
  426467:	jae    0x426444
  426469:	sub    al,0x6e
  42646b:	popa   
  42646c:	into   
  42646d:	dec    DWORD PTR [ebx+eax*2-0xa]
  426471:	sub    al,0x6b
  426473:	ins    BYTE PTR es:[edi],dx
  426474:	shr    BYTE PTR [edx],1
  426476:	jb     0x426478
	...
  4264a0:	shr    DWORD PTR [esi+eiz*2],0x74
  4264a4:	xchg   ebp,eax
  4264a5:	sub    esi,DWORD PTR [edx+0x65]
  4264a8:	mov    esi,0x906f6c04
  4264ad:	sub    al,0x6c
  4264af:	push   ebx
  4264b0:	xor    DWORD PTR [eax+edx*2+0x45],ecx
  4264b4:	dec    ebx
  4264b5:	(bad)  
  4264b6:	ds jae 0x426530
  4264b9:	dec    ebp
  4264ba:	ds push esp
  4264bc:	jnp    0x4264d0
  4264be:	sbb    al,0x20
  4264c0:	xchg   ebx,eax
  4264c1:	push   edi
  4264c2:	arpl   WORD PTR gs:[edi+0x21],si
  4264c6:	aas    
  4264c7:	push   esp
  4264c8:	pop    esp
  4264c9:	pop    es
  4264ca:	push   0x4242a62
  4264cf:	push   ecx
  4264d0:	sub    al,0x10
  4264d2:	push   eax
  4264d3:	jne    0x4264ff
  4264d5:	and    al,0x5d
  4264d7:	pop    esp
  4264d8:	add    al,0xc6
  4264da:	bound  ebp,QWORD PTR fs:[edx]
  4264dd:	push   ds
  4264de:	das    
  4264df:	inc    ecx
  4264e0:	or     ah,BYTE PTR [edx]
  4264e2:	cmp    eax,0x4dc5085c
  4264e7:	arpl   WORD PTR ds:0x4320341e,ax
  4264ed:	adc    dh,BYTE PTR [edx+esi*2]
  4264f0:	in     al,dx
  4264f1:	iret   
  4264f2:	pop    esi
  4264f3:	jno    0x4264ed
  4264f5:	enter  0x6e64,0xea
  4264f9:	test   DWORD PTR ds:0x64a6084f,esi
  4264ff:	ins    DWORD PTR es:[edi],dx
  426500:	out    dx,eax
  426501:	shl    DWORD PTR [edx+0x72],cl
	...
  42652c:	dec    ebx
  42652d:	sahf   
  42652e:	cmp    al,0x6c
  426530:	(bad)  
  426532:	bound  ebp,QWORD PTR [eax+ebx*4+0x73]
  426536:	inc    edx
  426537:	push   eax
  426538:	xchg   BYTE PTR [eax+eax*2+0x3b95bf73],al
  42653f:	push   esp
  426540:	fwait
  426541:	mov    al,0x35
  426543:	inc    ebp
  426544:	mov    bh,0x9f
  426546:	pop    edi
  426547:	pop    edi
  426548:	scas   eax,DWORD PTR es:[edi]
  426549:	mov    ds:0x757b3f40,eax
  42654e:	xor    eax,0x5e3c9641
  426553:	inc    esi
  426554:	lahf   
  426555:	or     DWORD PTR [edi],esi
  426557:	and    al,0x9b
  426559:	cmp    ecx,DWORD PTR [esi+0x4]
  42655c:	xchg   edi,eax
  42655d:	dec    esi
  42655e:	inc    ebx
  42655f:	arpl   WORD PTR [ecx+0x28],bp
  426562:	cmp    esi,DWORD PTR [edi]
  426564:	mov    cl,BYTE PTR [eax+0x17]
  426567:	dec    ecx
  426568:	jg     0x4265b4
  42656a:	xor    al,0x58
  42656c:	push   0x2b341b4f
  426571:	push   ebp
  426572:	inc    eax
  426573:	pop    eax
  426574:	sub    BYTE PTR [ecx],cl
  426576:	inc    ebx
  426577:	inc    edi
  426578:	cmp    BYTE PTR ds:0x591f4a04,bh
  42657e:	out    0x2f,eax
  426580:	cmp    dh,BYTE PTR [edi*4-0x18c2fb99]
  426587:	ss cs das 
  42658a:	repz pop edx
  42658c:	hlt    
  42658d:	cmp    cl,BYTE PTR [eax+esi*1]
	...
  4265b8:	add    eax,0xf3570835
  4265bd:	dec    esi
  4265be:	mov    edi,0xe6fa1f33
  4265c3:	ss out 0x2e,al
  4265c6:	fistp  DWORD PTR [edx+0xc]
  4265c9:	cmp    eax,esp
  4265cb:	das    
  4265cc:	or     eax,0xf356c835
  4265d1:	dec    esi
  4265d2:	lahf   
  4265d3:	xor    ecx,DWORD PTR [ebx+0x5a]
  4265d6:	(bad)  
  4265d7:	imul   edx,edi,0xa855c83d
  4265dd:	lods   eax,DWORD PTR gs:[esi]
  4265df:	pop    edi
  4265e0:	pushf  
  4265e1:	cmp    cl,BYTE PTR [edi-0x4ca66cb7]
  4265e7:	pop    ss
  4265e8:	dec    ebx
  4265e9:	push   eax
  4265ea:	jge    0x426642
  4265ec:	lahf   
  4265ed:	sub    BYTE PTR [ebx-0x5cc457a1],dl
  4265f3:	fs lahf 
  4265f5:	xor    DWORD PTR [eax],eax
  4265f7:	cdq    
  4265f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265f9:	cmp    eax,0x6698e968
  4265fe:	je     0x426651
  426600:	inc    edi
  426601:	dec    esi
  426602:	outs   dx,BYTE PTR ds:[esi]
  426603:	pop    edx
  426604:	xchg   ebx,eax
  426605:	data16 ins BYTE PTR es:[edi],dx
  426607:	inc    ebp
  426608:	daa    
  426609:	pop    ecx
  42660a:	pop    edi
  42660b:	push   ebp
  42660c:	xchg   DWORD PTR [ecx],ecx
  42660e:	inc    esp
  42660f:	dec    eax
  426610:	and    DWORD PTR [esi+0x46],0x4e
  426614:	imul   ebp,DWORD PTR ds:0x65473b63,0x51
  42661b:	inc    eax
	...
  426644:	and    ebp,DWORD PTR [edx]
  426646:	jno    0x42661f
  426648:	and    al,0x66
  42664a:	je     0x426635
  42664c:	fs push esi
  42664e:	jae    0x426650
  426650:	and    al,0x30
  426652:	cs add eax,0x25003d2e
  426658:	pop    edi
  426659:	cs jno 0x426651
  42665c:	sub    DWORD PTR [ebx],edi
  42665e:	ja     0x426627
  426660:	and    al,0x66
  426662:	je     0x42664d
  426664:	xor    al,0x4f
  426666:	ins    BYTE PTR es:[edi],dx
  426667:	enter  0x3115,0x46
  42666b:	sar    DWORD PTR [eax],0x65
  42666e:	xor    ecx,ebp
  426670:	sbb    al,0x4f
  426672:	ins    BYTE PTR es:[edi],dx
  426673:	enter  0x30fd,0x46
  426677:	mov    eax,ds:0xe9346518
  42667c:	and    al,0x4f
  42667e:	(bad)
  426682:	addr16 mov ebp,0xc50064a4
  426688:	xchg   ebp,eax
  426689:	sub    al,0x74
  42668b:	test   BYTE PTR [ebx-0x5e77919c],ch
  426691:	sub    BYTE PTR [edx-0x41],dh
  426694:	nop
  426695:	xor    BYTE PTR [eax+eax*1+0x32],ch
  426699:	cmc    
  42669a:	jno    0x426701
  42669c:	shl    DWORD PTR [ecx],0x6e
  42669f:	je     0x426632
  4266a1:	xor    DWORD PTR [edx+0x76],esi
  4266a4:	iret   
  4266a5:	pop    esi
  4266a6:	outs   dx,DWORD PTR ds:[esi]
  4266a7:	add    BYTE PTR cs:[eax],al
	...
  4266ce:	add    BYTE PTR [eax],al
  4266d0:	push   0x64
  4266d2:	ins    BYTE PTR es:[edi],dx
  4266d3:	add    BYTE PTR [esi],dh
  4266d5:	das    
  4266d6:	gs ins BYTE PTR es:[edi],dx
  4266d8:	jg     0x42672d
  4266da:	gs ins BYTE PTR es:[edi],dx
  4266dc:	sub    BYTE PTR es:[esi],ch
  4266df:	js     0x426758
  4266e1:	sub    DWORD PTR [eax],eax
  4266e3:	push   ebx
  4266e4:	test   DWORD PTR [edi],ebp
  4266e6:	je     0x42675f
  4266e8:	sbb    DWORD PTR [ebx+0x61],0x5c
  4266ec:	ins    BYTE PTR es:[edi],dx
  4266ed:	pusha  
  4266ee:	ins    BYTE PTR es:[edi],dx
  4266ef:	or     BYTE PTR gs:[eax+0x6c],ah
  4266f3:	ins    BYTE PTR es:[edi],dx
  4266f4:	inc    ebx
  4266f5:	or     eax,0x613c6f4f
  4266fa:	jae    0x42675d
  4266fc:	inc    eax
  4266fd:	sub    al,0x5c
  4266ff:	inc    esi
  426700:	cmp    ebp,DWORD PTR [ecx]
  426702:	popa   
  426703:	pop    edx
  426704:	cmp    ebp,DWORD PTR [ecx]
  426706:	ins    BYTE PTR es:[edi],dx
  426707:	popa   
  426708:	or     BYTE PTR [ebp+0x6c],0x69
  42670c:	dec    edi
  42670d:	daa    
  42670e:	je     0x426710
  426710:	mov    ebx,0x83746f2a
  426715:	fs ins BYTE PTR es:[edi],dx
  426717:	pop    edi
  426718:	sahf   
  426719:	pop    edi
  42671a:	jb     0x42671c
  42671c:	stos   BYTE PTR es:[edi],al
  42671d:	sub    DWORD PTR [edi+0x74],ebp
  426720:	jb     0x42671d
  426722:	outs   dx,BYTE PTR ds:[esi]
  426723:	gs nop
  426725:	or     BYTE PTR [eax+0x61],dl
  426728:	xchg   ecx,eax
  426729:	pop    ebp
  42672a:	add    BYTE PTR [eax+0x5],dl
  42672d:	pop    esi
  42672e:	je     0x426730
  426730:	add    BYTE PTR [ebx],ch
  426732:	imul   ebp,DWORD PTR [edi+0x0],0x0
	...
  426759:	add    BYTE PTR [eax],al
  42675b:	add    dh,bl
  42675d:	sub    ah,BYTE PTR [eax]
  42675f:	inc    esp
  426760:	dec    ebx
  426761:	mov    DWORD PTR [ebx+0x0],edx
  426764:	js     0x4266f3
  426766:	push   ebx
  426767:	jbe    0x42670f
  426769:	inc    eax
  42676a:	and    DWORD PTR [edx+edx*4+0x42],edx
  42676e:	data16 add BYTE PTR [eax-0x6b],bh
  426772:	push   ebx
  426773:	jbe    0x4267e3
  426775:	inc    eax
  426776:	pop    ds
  426777:	dec    eax
  426778:	ins    BYTE PTR es:[edi],dx
  426779:	pop    edi
  42677a:	pop    eax
  42677b:	add    BYTE PTR [eax+0x6676564d],bl
  426781:	pusha  
  426782:	and    dl,BYTE PTR [ebx+0x58]
  426785:	dec    ebp
  426786:	push   esi
  426787:	add    BYTE PTR [eax+0x55],bh
  42678a:	push   esi
  42678b:	jbe    0x4267fb
  42678d:	add    BYTE PTR [edx],ah
  42678f:	push   eax
  426790:	push   0xffffffff
  426792:	push   edx
  426793:	add    BYTE PTR [eax],bl
  426795:	dec    ebp
  426796:	push   esi
  426797:	jbe    0x4267bf
  426799:	and    BYTE PTR [edx],ah
  42679b:	push   eax
  42679c:	and    al,0x20
  42679e:	pop    eax
  42679f:	add    BYTE PTR [ebx],bl
  4267a1:	adc    DWORD PTR [eax+0x68],ebx
  4267a4:	dec    ebx
  4267a5:	jmp    DWORD PTR [edx+esi*2+0x15]
  4267a9:	adc    eax,0xc2125456
  4267ae:	data16 add bh,bh
  4267b1:	adc    BYTE PTR [ebx+0x74],dl
  4267b4:	sub    ebx,DWORD PTR [edi]
  4267b6:	gs jb  0x4267ae
  4267b9:	aam    0x53
  4267bb:	and    BYTE PTR [ebx],al
  4267bd:	rcl    DWORD PTR [esp+esi*2+0x0],cl
	...
  4267e5:	add    BYTE PTR [eax],al
  4267e7:	add    BYTE PTR [ebx+0x6e],cl
  4267ea:	bound  esi,QWORD PTR [ecx-0x21]
  4267ed:	adc    DWORD PTR [ebx],esi
  4267ef:	arpl   cx,bx
  4267f1:	and    DWORD PTR [esi+0x72],0x2b
  4267f5:	popf   
  4267f6:	push   esp
  4267f7:	arpl   cx,bx
  4267f9:	mov    cl,0x3d
  4267fb:	pop    edi
  4267fc:	mov    eax,0xa651217c
  426801:	or     DWORD PTR [ecx-0x38c857a7],ebx
  426807:	xor    ecx,DWORD PTR [esi+esi*1+0x2897039a]
  42680e:	call   0x9d55:0x8c566b57
  426815:	sub    al,0x79
  426817:	and    edi,DWORD PTR [ebx+0x32]
  42681a:	jns    0x426873
  42681c:	dec    ebx
  42681d:	push   ebp
  42681e:	mov    BYTE PTR [edi+esi*2-0x17],dl
  426822:	cmp    DWORD PTR [ecx+0x79],ebp
  426825:	cmp    eax,DWORD PTR [edx+edx*2+0x2b]
  426829:	pop    ecx
  42682a:	dec    eax
  42682b:	pop    eax
  42682c:	jae    0x426837
  42682e:	sbb    esp,DWORD PTR [ebp+0x5a]
  426831:	cmp    eax,0x37683307
  426836:	xor    eax,0x1ae95969
  42683b:	dec    ebp
  42683c:	cmp    ebp,DWORD PTR [edi+eiz*8]
  42683f:	inc    ebp
  426840:	pop    ss
  426841:	pop    ecx
  426842:	(bad)  
  426843:	cmp    eax,0x67103b14
  426848:	or     al,0x3d
  42684a:	push   es
  42684b:	push   edx
	...
  426874:	dec    ebx
  426875:	dec    ebx
  426876:	xor    esi,DWORD PTR [ebx+ebp*2]
  426879:	inc    esi
  42687a:	push   ss
  42687b:	popa   
  42687c:	and    BYTE PTR [eax],ch
  42687e:	or     eax,0xe7372868
  426883:	gs (bad) 
  426885:	cmp    bl,bh
  426887:	pop    esp
  426888:	cli    
  426889:	cmp    al,0x15
  42688b:	pop    eax
  42688c:	repz cmp al,0xe7
  42688f:	das    
  426890:	or     DWORD PTR [ebx+eax*8],edi
  426893:	pop    edi
  426894:	call   0xee941fd5
  426899:	xor    ebp,ecx
  42689b:	and    edi,edx
  42689d:	xor    ebp,eax
  42689f:	push   edi
  4268a0:	(bad)  
  4268a1:	daa    
  4268a2:	add    BYTE PTR [ebx-0x3ad1f64d],bh
  4268a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268a9:	cmp    eax,0x39aad700
  4268ae:	jno    0x426899
  4268b0:	jns    0x4268e6
  4268b2:	popfw  
  4268b4:	jge    0x426918
  4268b6:	jb     0x42683c
  4268b8:	ins    BYTE PTR es:[edi],dx
  4268b9:	inc    edi
  4268ba:	push   eax
  4268bb:	scas   eax,DWORD PTR es:[edi]
  4268bc:	pop    esp
  4268bd:	pop    ecx
  4268be:	pop    esp
  4268bf:	stos   DWORD PTR es:[edi],eax
  4268c0:	jae    0x4268f7
  4268c2:	ins    BYTE PTR es:[edi],dx
  4268c3:	mov    WORD PTR [ecx+ebp*8+0x349d7b4f],ds
  4268ca:	or     WORD PTR [ebp-0x75c2afa3],cx
  4268d1:	bound  esp,QWORD PTR [edi+0x47]
  4268d4:	dec    edi
  4268d5:	pop    eax
  4268d6:	ins    DWORD PTR es:[edi],dx
  4268d7:	inc    edi
	...
  426900:	cmp    DWORD PTR [edi+ebx*2],0x3b
  426904:	bound  esp,QWORD PTR [ebp+0x42]
  426907:	xor    al,0x6b
  426909:	xor    eax,0x377f3d63
  42690e:	ins    DWORD PTR es:[edi],dx
  42690f:	ds and eax,0x2d1650e9
  426915:	cmp    eax,0x26190875
  42691a:	pop    esp
  42691b:	sub    eax,DWORD PTR [edx]
  42691d:	xor    eax,0x5903046c
  426922:	jb     0x42693a
  426924:	hlt    
  426925:	sub    ah,BYTE PTR [eax]
  426927:	daa    
  426928:	push   ebx
  426929:	pop    ecx
  42692a:	and    BYTE PTR [edx],ch
  42692c:	jmp    0x426957
  42692e:	arpl   di,di
  426930:	adc    al,0x65
  426932:	dec    ebx
  426933:	enter  0x3317,0x0
  426937:	mov    edx,0xde742b0d
  42693c:	out    dx,eax
  42693d:	arpl   WORD PTR ss:[ebp+0x46590a],bp
  426944:	mov    dh,0xf5
  426946:	pop    ebx
  426947:	inc    edx
  426948:	xchg   edi,eax
  426949:	popa   
  42694a:	ins    BYTE PTR es:[edi],dx
  42694b:	gs push es
  42694d:	in     eax,dx
  42694e:	dec    edi
  42694f:	jb     0x42694e
  426951:	pop    edi
  426952:	data16 and ah,ah
  426955:	clc    
  426956:	dec    edi
  426957:	pop    esp
  426958:	fstp   QWORD PTR [esp+esi*2+0x69]
  42695c:	int    0x5e
  42695e:	outs   dx,DWORD PTR ds:[esi]
  42695f:	add    cl,ah
  426961:	pop    edi
  426962:	data16 je 0x426965
	...
  426989:	add    BYTE PTR [eax],al
  42698b:	add    BYTE PTR [ebp-0x519a8ddb],dl
  426991:	dec    edx
  426992:	jno    0x426a00
  426994:	into   
  426995:	xor    DWORD PTR [eax+edx*2-0x80],esi
  426999:	pop    edi
  42699a:	imul   esp,DWORD PTR [esi+0x42],0xfffffffa
  42699e:	push   0x66
  4269a0:	xchg   esi,eax
  4269a1:	push   esi
  4269a2:	pop    ebp
  4269a3:	jb     0x42693c
  4269a5:	stc    
  4269a6:	inc    ecx
  4269a7:	jne    0x4269c7
  4269a9:	sub    DWORD PTR [ecx+0x74],esp
  4269ac:	xor    bl,BYTE PTR [ebx+0x6b]
  4269af:	outs   dx,DWORD PTR ds:[esi]
  4269b0:	test   ch,ah
  4269b2:	inc    ebp
  4269b3:	push   esp
  4269b4:	(bad)  
  4269b5:	in     eax,0x3e
  4269b7:	ins    BYTE PTR es:[edi],dx
  4269b8:	or     ebp,DWORD PTR [eax]
  4269ba:	outs   dx,BYTE PTR ds:[esi]
  4269bb:	je     0x4269cb
  4269bd:	(bad)  
  4269be:	outs   dx,DWORD PTR ds:[esi]
  4269bf:	je     0x426a1c
  4269c1:	pop    esi
  4269c2:	outs   dx,BYTE PTR ds:[esi]
  4269c3:	jae    0x426977
  4269c5:	stc    
  4269c6:	push   0x66
  4269c8:	ss push esi
  4269ca:	pop    ebp
  4269cb:	jb     0x426a14
  4269cd:	stc    
  4269ce:	inc    ecx
  4269cf:	push   eax
  4269d0:	add    DWORD PTR fs:[eax+0x0],edx
  4269d4:	cs sub al,0x6f
  4269d7:	je     0x426a3a
  4269d9:	sub    BYTE PTR [edi+0x73],ch
  4269dc:	fwait
  4269dd:	pop    ebp
  4269de:	outs   dx,BYTE PTR ds:[esi]
  4269df:	inc    esi
  4269e0:	fwait
  4269e1:	pusha  
  4269e2:	popa   
  4269e3:	add    BYTE PTR [ebx-0x7d],cl
  4269e6:	pop    edx
  4269e7:	je     0x4269cf
  4269e9:	loop   0x426a30
  4269eb:	fnstenv [bx+di+0x6e3a]
	...
  426a18:	fdiv   DWORD PTR [ebp+0x62]
  426a1b:	ins    BYTE PTR es:[edi],dx
  426a1c:	mov    bh,0x6e
  426a1e:	pop    edx
  426a1f:	jb     0x426a9b
  426a21:	mov    dl,0x1b
  426a23:	js     0x4269cb
  426a25:	xchg   esi,eax
  426a26:	add    DWORD PTR [eax+ebx*4-0x73],ebx
  426a2a:	bound  esi,QWORD PTR [edx-0x61]
  426a2d:	jo     0x426a64
  426a2f:	push   eax
  426a30:	dec    ebx
  426a31:	push   0x44a47662
  426a36:	pop    edx
  426a37:	je     0x4269df
  426a39:	inc    ebx
  426a3a:	sbb    esp,DWORD PTR [edx+ebp*2+0x3e]
  426a3e:	add    DWORD PTR [eax+0x72],ecx
  426a41:	inc    ebx
  426a42:	push   ebp
  426a43:	ins    DWORD PTR es:[edi],dx
  426a44:	jns    0x426a6f
  426a46:	push   ds
  426a47:	fs push 0x56
  426a4a:	add    al,0x5f
  426a4c:	outs   dx,DWORD PTR ds:[esi]
  426a4d:	dec    esi
  426a4e:	push   edx
  426a4f:	bound  esi,QWORD PTR [eax-0x40]
  426a52:	gs pop edi
  426a54:	pop    edi
  426a55:	mov    dl,0x52
  426a57:	jae    0x426abb
  426a59:	push   ebx
  426a5a:	push   edi
  426a5b:	cs das 
  426a5d:	push   ecx
  426a5e:	pop    eax
  426a5f:	add    BYTE PTR [edi],bl
  426a61:	push   ss
  426a62:	push   ebp
  426a63:	jb     0x426a8e
  426a65:	pop    ss
  426a66:	inc    esi
  426a67:	push   esp
  426a68:	sbb    esi,DWORD PTR [edx+0x1e2d6d30]
  426a6e:	push   ebx
  426a6f:	pop    edi
  426a70:	sbb    DWORD PTR ds:0xc41e5430,eax
  426a76:	pop    edi
  426a77:	ins    DWORD PTR es:[edi],dx
  426a78:	add    eax,0x3416
	...
  426aa1:	add    BYTE PTR [eax],al
  426aa3:	add    dl,dh
  426aa5:	pop    es
  426aa6:	dec    edi
  426aa7:	je     0x426a93
  426aa9:	mov    ebp,0x8ea705d
  426aae:	fistp  DWORD PTR [ebx+0x4b]
  426ab1:	pop    esp
  426ab2:	into   
  426ab3:	fbstp  TBYTE PTR gs:[edi]
  426ab6:	enter  0xe851,0x5c
  426aba:	mov    edx,0xa329df5c
  426abf:	inc    ebp
  426ac0:	add    eax,0x4b339347
  426ac5:	dec    edx
  426ac6:	mov    ecx,0xbd24a766
  426acb:	push   edi
  426acc:	lods   al,BYTE PTR ds:[esi]
  426acd:	sub    BYTE PTR [ebx-0x6cd273d0],dl
  426ad3:	add    ecx,DWORD PTR [edx-0x579873c5]
  426ad9:	das    
  426ada:	xchg   ebx,eax
  426adb:	pop    edx
  426adc:	je     0x426b0b
  426ade:	stos   BYTE PTR es:[edi],al
  426adf:	pop    ebx
  426ae0:	test   al,0x2a
  426ae2:	xchg   edx,eax
  426ae3:	add    ebx,DWORD PTR [edx+0x76578d2e]
  426ae9:	sub    BYTE PTR [ecx+0x66],bh
  426aec:	xchg   edi,eax
  426aed:	pop    edx
  426aee:	push   esi
  426aef:	push   eax
  426af0:	mov    WORD PTR [ebp+0x25],ds
  426af3:	inc    edx
  426af4:	lea    edx,[ebp+0x37]
  426af7:	sub    BYTE PTR [esi+0x665d5339],cl
  426afd:	das    
  426afe:	cmp    al,BYTE PTR [ebx+edi*2]
  426b01:	sub    BYTE PTR [edx],bh
  426b03:	push   edi
  426b04:	ds cmp DWORD PTR cs:[eax+0x0],esp
	...
  426b2d:	add    BYTE PTR [eax],al
  426b2f:	add    BYTE PTR [ebx+0x54],cl
  426b32:	cmp    ah,BYTE PTR [ecx+0x39]
  426b35:	dec    edi
  426b36:	or     BYTE PTR [ecx+0x28],bl
  426b39:	or     DWORD PTR [edi],ebp
  426b3b:	pop    ebx
  426b3c:	sbb    dh,BYTE PTR ds:0x3a196028
  426b42:	out    0x35,eax
  426b44:	sub    BYTE PTR [esi+edx*1],ch
  426b47:	push   eax
  426b48:	sub    BYTE PTR [ebp+0x10],al
  426b4b:	push   esi
  426b4c:	dec    ebx
  426b4d:	pop    ecx
  426b4e:	add    BYTE PTR [esi],al
  426b50:	adc    eax,0x10210035
  426b55:	cmp    BYTE PTR [edi+esi*4-0x19],dh
  426b59:	xor    DWORD PTR [ebx-0x17],esp
  426b5c:	sbb    BYTE PTR [edx+esi*2],ch
  426b5f:	fisttp QWORD PTR [eax+0x5a]
  426b62:	jno    0x426b28
  426b64:	(bad)  
  426b65:	cs pop edi
  426b67:	aam    0xeb
  426b69:	or     BYTE PTR [eax-0x38],dl
  426b6c:	popf   
  426b6d:	cmp    BYTE PTR [ebp-0x3a],dh
  426b70:	xchg   esi,eax
  426b71:	and    eax,0x3891a100
  426b76:	je     0x426b25
  426b78:	(bad)  
  426b79:	cmp    ecx,DWORD PTR [esi-0x78]
  426b7c:	sub    DWORD PTR [edx],0x0
  426b7f:	mov    edx,0x96742781
  426b84:	scas   eax,DWORD PTR es:[edi]
  426b85:	cmp    esp,DWORD PTR [ebx-0x5b]
  426b88:	test   DWORD PTR [esi+eiz*2],ebp
  426b8b:	xchg   DWORD PTR [ebx+0x2a],ebp
  426b8e:	inc    ecx
  426b8f:	jl     0x426b29
  426b91:	jmp    0x42e9e6
	...
  426bba:	add    BYTE PTR [eax],al
  426bbc:	push   0x35
  426bbe:	jne    0x426c08
  426bc0:	xchg   ebp,eax
  426bc1:	sub    bl,BYTE PTR [eax+esi*1-0x7f]
  426bc5:	xor    eax,0x2a815b63
  426bca:	je     0x426bf9
  426bcc:	pop    ds
  426bcd:	cmp    ebp,DWORD PTR [ebp+0x4f]
  426bd0:	outs   dx,BYTE PTR ds:[esi]
  426bd1:	sub    eax,0x584f3a63
  426bd6:	ins    DWORD PTR es:[edi],dx
  426bd7:	dec    edi
  426bd8:	sbb    esi,DWORD PTR [edi+ebx*2]
  426bdb:	cmp    ebp,DWORD PTR [edx]
  426bdd:	pop    ebp
  426bde:	inc    esi
  426bdf:	cmp    eax,0x1b5f5477
  426be4:	sub    bl,BYTE PTR [ebp+0x41]
  426be7:	es push ebp
  426be9:	dec    edx
  426bea:	inc    esi
  426beb:	xor    eax,0x515d5f
  426bf0:	cmp    ebx,DWORD PTR [ecx+0x61]
  426bf3:	jae    0x426c67
  426bf5:	add    DWORD PTR [ebx+0x73],ebp
  426bf8:	jle    0x426c03
  426bfa:	push   ecx
  426bfb:	jae    0x426c4c
  426bfd:	push   edi
  426bfe:	add    BYTE PTR [eax-0x6b],dl
  426c01:	push   ebx
  426c02:	je     0x426c04
  426c04:	mov    ds:0x7e4ffffa,al
  426c09:	popa   
  426c0a:	push   edx
  426c0b:	add    BYTE PTR [ecx-0x6dffb80a],dl
  426c11:	push   ebx
  426c12:	imul   esp,DWORD PTR [esi+0x1b],0x55
  426c16:	popa   
  426c17:	jae    0x426c5d
  426c19:	dec    ebp
  426c1a:	imul   ebp,DWORD PTR [edx+eiz*1-0x1b],0x5445
	...
  426c46:	add    BYTE PTR [eax],al
  426c48:	bnd call 0x5504e48e
  426c4e:	imul   esi,DWORD PTR [edx-0x31],0x56
  426c52:	add    BYTE PTR [ebx-0x6b],dl
  426c55:	sub    dh,BYTE PTR [edi+esi*2-0x3d]
  426c59:	push   esi
  426c5a:	popa   
  426c5b:	pop    esp
  426c5c:	lods   al,BYTE PTR ds:[esi]
  426c5d:	in     al,dx
  426c5e:	dec    edi
  426c5f:	and    BYTE PTR [edi+0x756c7050],ch
  426c65:	push   esi
  426c66:	popa   
  426c67:	jb     0x426bef
  426c69:	inc    edi
  426c6a:	push   esp
  426c6b:	push   eax
  426c6c:	push   edx
  426c6d:	cld    
  426c6e:	ja     0x426ce0
  426c70:	xchg   BYTE PTR [edx+0x72],ah
  426c73:	gs jo  0x426c67
  426c76:	push   edx
  426c77:	outs   dx,DWORD PTR ds:[esi]
  426c78:	adc    BYTE PTR [esi+0x6f],bl
  426c7b:	jo     0x426c90
  426c7d:	es popa 
  426c7f:	pop    esp
  426c80:	addr16 inc edi
  426c82:	aas    
  426c83:	push   esp
  426c84:	jne    0x426ce8
  426c86:	ins    BYTE PTR es:[edi],dx
  426c87:	inc    edx
  426c88:	inc    ebx
  426c89:	push   ebx
  426c8a:	sub    DWORD PTR [edx],esi
  426c8c:	or     BYTE PTR [eax+eax*1],0x42
  426c90:	dec    ebx
  426c91:	sbb    eax,0xbc247450
  426c96:	push   esp
  426c97:	add    al,bh
  426c99:	adc    ah,BYTE PTR [edx+0x74]
  426c9c:	cld    
  426c9d:	adc    BYTE PTR [esi+0x63],dl
  426ca0:	pop    ds
  426ca1:	in     al,dx
  426ca2:	das    
  426ca3:	push   eax
  426ca4:	sub    esp,ebp
  426ca6:	dec    ebx
  426ca7:	jo     0x426c88
  426ca9:	rcl    BYTE PTR [ebx+0x63],cl
	...
  426cd4:	fnstcw WORD PTR [ebp+0x31]
  426cd7:	jb     0x426cc5
  426cd9:	retf   
  426cda:	pop    edx
  426cdb:	ins    BYTE PTR es:[edi],dx
  426cdc:	out    dx,al
  426cdd:	fiadd  WORD PTR [ecx]
  426cdf:	push   eax
  426ce0:	jmp    0x5d80:0xb475547e
  426ce7:	add    BYTE PTR [ebx-0x438eab2f],bl
  426ced:	jnp    0x426d42
  426cef:	fs xchg edi,eax
  426cf1:	imul   edx,DWORD PTR [ecx+0x63],0x71587a4b
  426cf8:	xchg   edi,eax
  426cf9:	mov    dl,0x35
  426cfb:	ins    DWORD PTR es:[edi],dx
  426cfc:	lods   al,BYTE PTR ds:[esi]
  426cfd:	mov    DWORD PTR [edi+0x0],edx
  426d00:	jnp    0x426c95
  426d02:	push   ebx
  426d03:	je     0x426d50
  426d05:	jns    0x426d5e
  426d07:	addr16 ja 0x426c93
  426d0a:	bound  ebp,QWORD PTR [ebx+ebx*4-0x6f]
  426d0e:	dec    ebp
  426d0f:	push   0x704fec4b
  426d14:	js     0x426d6f
  426d16:	push   eax
  426d17:	arpl   WORD PTR ds:0x4b6c555a,bp
  426d1d:	out    dx,al
  426d1e:	inc    ecx
  426d1f:	jb     0x426d83
  426d21:	dec    ebx
  426d22:	popa   
  426d23:	je     0x426d53
  426d25:	mov    edi,0x44322e01
  426d2a:	pop    ecx
  426d2b:	add    BYTE PTR [edi],dl
  426d2d:	adc    al,0x61
  426d2f:	outs   dx,BYTE PTR ds:[esi]
  426d30:	pop    es
  426d31:	or     DWORD PTR [eax],esp
  426d33:	pop    ebp
  426d34:	sub    BYTE PTR [ebp+0x2a],bl
  426d37:	pop    ecx
	...
  426d60:	sub    eax,0xf7610023
  426d65:	push   edi
  426d66:	add    al,0x55
  426d68:	sbb    dh,BYTE PTR [edx]
  426d6a:	push   ss
  426d6b:	pop    edx
  426d6c:	cli    
  426d6d:	or     BYTE PTR [ebx],bl
  426d6f:	xor    eax,0x5afa37e8
  426d74:	out    0x2a,al
  426d76:	cli    
  426d77:	add    ebx,DWORD PTR [edx]
  426d79:	sub    al,0xcd
  426d7b:	dec    edi
  426d7c:	fisubr WORD PTR [ecx]
  426d7e:	fstp   DWORD PTR [esi-0x1]
  426d81:	push   edx
  426d82:	enter  0xf59,0x42
  426d86:	ret    0xef5e
  426d89:	push   edi
  426d8a:	int3   
  426d8b:	fs mov eax,0xa341c437
  426d91:	or     DWORD PTR [edx-0x3fdc5aa8],ebp
  426d97:	pusha  
  426d98:	imul   ebx,DWORD PTR [ecx-0x78],0x4f
  426d9c:	mov    bl,0x9
  426d9e:	mov    ah,0x57
  426da0:	xchg   edi,eax
  426da1:	aaa    
  426da2:	mov    BYTE PTR [ecx+0x73],al
  426da5:	pop    ecx
  426da6:	out    0x27,eax
  426da8:	call   0x7eeb:0x7a5e7b30
  426daf:	push   esi
  426db0:	outs   dx,DWORD PTR ds:[esi]
  426db1:	or     DWORD PTR [ebx-0x66a660bf],edx
  426db7:	dec    esi
  426db8:	jp     0x426deb
  426dba:	out    0x31,eax
  426dbc:	pop    eax
  426dbd:	ss dec edi
  426dbf:	xor    esp,DWORD PTR [ebp+esi*1+0x4c]
  426dc3:	push   ss
	...
  426dec:	push   ebx
  426ded:	sub    al,0x3b
  426def:	add    al,0x7a
  426df1:	and    al,0x39
  426df3:	dec    esi
  426df4:	sub    BYTE PTR [edi],dh
  426df6:	out    0x30,eax
  426df8:	cmp    ah,BYTE PTR [eax+eax*1]
  426dfb:	cmp    ebx,DWORD PTR ds:0x47446b5a
  426e01:	pop    ecx
  426e02:	pop    edi
  426e03:	sbb    bh,al
  426e05:	xor    ebp,DWORD PTR [ebp+0x1b]
  426e08:	sub    ecx,DWORD PTR [ecx]
  426e0a:	inc    esi
  426e0b:	sbb    eax,0x1b6d58ff
  426e10:	sti    
  426e11:	or     BYTE PTR [ecx+0x16],dl
  426e14:	and    eax,0x19087535
  426e19:	es pop esp
  426e1b:	sub    bl,BYTE PTR [ecx]
  426e1d:	xor    ah,BYTE PTR [ebx-0x5]
  426e20:	and    al,0x54
  426e22:	arpl   bx,cx
  426e24:	sbb    DWORD PTR [edx],esp
  426e26:	je     0x426dec
  426e28:	sbb    BYTE PTR [esi],dh
  426e2a:	(bad)  
  426e2b:	(bad)
  426e2e:	push   0x5c08fac4
  426e33:	stos   DWORD PTR es:[edi],eax
  426e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e35:	xor    eax,0x2696d049
  426e3a:	js     0x426e25
  426e3c:	stos   BYTE PTR es:[edi],al
  426e3d:	and    dh,BYTE PTR [edx+eax*8-0x71]
  426e41:	sub    esp,DWORD PTR [ebx-0x5f]
  426e44:	ds and eax,0x2c60e971
  426e4a:	jno    0x426de9
  426e4c:	jle    0x426ea8
  426e4e:	imul   eax,DWORD PTR [eax+eax*1+0x0],0x0
	...
  426e76:	add    BYTE PTR [eax],al
  426e78:	dec    eax
  426e79:	push   esi
  426e7a:	jno    0x426e08
  426e7c:	call   0x5009:0x6b8c5f2b
  426e83:	mov    BYTE PTR [ecx-0x65818ac8],bl
  426e89:	and    eax,0x377c3900
  426e8e:	je     0x426e79
  426e90:	sbb    DWORD PTR [esi+eiz*2],ebp
  426e93:	pop    ebp
  426e94:	test   BYTE PTR [edx+0x72],bl
  426e97:	inc    esp
  426e98:	and    eax,DWORD PTR [esi+0x78]
  426e9b:	add    BYTE PTR [edx-0x7fbb91dc],al
  426ea1:	pop    esp
  426ea2:	jbe    0x426f09
  426ea4:	pop    esi
  426ea5:	mul    BYTE PTR [eax+0x73]
  426ea8:	jno    0x426f06
  426eaa:	imul   ebp,DWORD PTR [esi+0x41],0x5
  426eae:	pop    esp
  426eaf:	inc    ebp
  426eb0:	push   0x55
  426eb2:	pop    ebp
  426eb3:	outs   dx,BYTE PTR ds:[esi]
  426eb4:	push   di
  426eb6:	gs jbe 0x426f00
  426eb9:	add    eax,0x5c80645c
  426ebe:	jbe    0x426f25
  426ec0:	adc    DWORD PTR [ebx],0xe762736a
  426ec6:	outs   dx,DWORD PTR ds:[esi]
  426ec7:	popa   
  426ec8:	jno    0x426f20
  426eca:	jae    0x426f3b
  426ecc:	sbb    BYTE PTR [ecx+0x22],0x20
  426ed0:	sub    ch,ah
  426ed2:	and    DWORD PTR [eax],eax
  426ed4:	inc    eax
  426ed5:	and    DWORD PTR [eax],eax
  426ed7:	push   ebx
  426ed8:	lea    ebx,[ebx+0x74]
  426edb:	ja     0x426edd
	...
  426f01:	add    BYTE PTR [eax],al
  426f03:	add    BYTE PTR [ebx],dl
  426f05:	pop    ebx
  426f06:	popa   
  426f07:	pop    esp
  426f08:	out    0x44,eax
  426f0a:	jo     0x426f6d
  426f0c:	or     al,0xf9
  426f0e:	jno    0x426f79
  426f10:	hlt    
  426f11:	sub    DWORD PTR [eax],eax
  426f13:	inc    ebp
  426f14:	jmp    0x655a:0xe66e5d5c
  426f1b:	jbe    0x426ee4
  426f1d:	out    dx,eax
  426f1e:	inc    edi
  426f1f:	outs   dx,DWORD PTR ds:[esi]
  426f20:	(bad)
  426f24:	xlat   BYTE PTR ds:[ebx]
  426f25:	pop    edx
  426f26:	jbe    0x426f8d
  426f28:	or     BYTE PTR [ecx+edx*2],0x73
  426f2c:	(bad)  
  426f2d:	pop    edx
  426f2e:	dec    esi
  426f2f:	popa   
  426f30:	outs   dx,DWORD PTR ds:[esi]
  426f31:	sub    DWORD PTR [eax],eax
  426f33:	push   eax
  426f34:	xchg   ebx,eax
  426f35:	pop    edx
  426f36:	outs   dx,DWORD PTR ds:[esi]
  426f37:	ja     0x426ec6
  426f39:	pop    ebx
  426f3a:	add    BYTE PTR fs:[ebx-0x1],cl
  426f3e:	xor    ebx,DWORD PTR [edi+0x58]
  426f41:	push   ebx
  426f42:	dec    ebx
  426f43:	ins    DWORD PTR es:[edi],dx
  426f44:	cmp    DWORD PTR [esi+0x4],eax
  426f47:	inc    esp
  426f48:	xor    dh,ah
  426f4a:	pop    esp
  426f4b:	popa   
  426f4c:	aas    
  426f4d:	dec    edi
  426f4e:	push   edx
  426f4f:	ja     0x426f9c
  426f51:	adc    edx,DWORD PTR [ebx+0x66]
  426f54:	pop    ds
  426f55:	pop    ss
  426f56:	popa   
  426f57:	jb     0x426f7f
  426f59:	div    BYTE PTR ds:0x30c20341
  426f5f:	ins    DWORD PTR es:[edi],dx
  426f60:	and    eax,0xf95f4b1e
  426f65:	add    al,0x28
  426f67:	inc    ecx
	...
  426f90:	out    dx,eax
  426f91:	add    BYTE PTR [edi+0x71],cl
  426f94:	loop   0x426f98
  426f96:	ds push esp
  426f98:	sbb    eax,DWORD PTR [esi]
  426f9a:	ds push esp
  426f9c:	sti    
  426f9d:	pusha  
  426f9e:	pusha  
  426f9f:	popa   
  426fa0:	in     al,dx
  426fa1:	fcom   QWORD PTR [ebx+0x74]
  426fa4:	fsub   DWORD PTR [ecx+0x72db743b]
  426faa:	pop    esi
  426fab:	jb     0x426f6a
  426fad:	lds    ecx,FWORD PTR [edi+0x0]
  426fb0:	test   DWORD PTR [esi+0x51],edi
  426fb3:	push   ebx
  426fb4:	mov    eax,0xaa4e4fc5
  426fb9:	jne    0x427019
  426fbb:	add    BYTE PTR [ebp-0x55afae6a],cl
  426fc1:	xchg   ebx,eax
  426fc2:	push   eax
  426fc3:	jne    0x426f69
  426fc5:	xchg   esp,eax
  426fc6:	pop    ebp
  426fc7:	add    BYTE PTR [eax+esi*2+0x4d],ch
  426fcb:	jo     0x426f68
  426fcd:	adc    DWORD PTR [eax+0x71],0x644f8774
  426fd4:	dec    ebx
  426fd5:	push   0x8987704d
  426fda:	dec    edi
  426fdb:	arpl   WORD PTR [eax+0x9],bp
  426fde:	pop    ebx
  426fdf:	push   ebp
  426fe0:	pop    ecx
  426fe1:	xor    ah,bh
  426fe3:	xor    BYTE PTR [esi+0xc2d3b4f],al
  426fe9:	pop    ebx
  426fea:	and    al,0x28
  426fec:	adc    eax,0x1a242f4c
  426ff1:	sub    BYTE PTR [ebp+0x50],al
	...
  42701c:	sub    bh,BYTE PTR ds:[ecx]
  42701f:	pop    edi
  427020:	cmovg  edi,DWORD PTR [ebx]
  427023:	pop    ebx
  427024:	xor    eax,0x2a434330
  427029:	sub    al,0xe
  42702b:	dec    edi
  42702c:	and    eax,0xfa041a3d
  427031:	daa    
  427032:	add    eax,0xf929fe50
  427037:	pop    esi
  427038:	pop    ds
  427039:	dec    edi
  42703a:	adc    esi,DWORD PTR [edx+ecx*1]
  42703d:	and    eax,0x3cdd5f00
  427042:	or     esi,DWORD PTR [ecx]
  427044:	in     al,dx
  427045:	cmp    al,0xcc
  427047:	push   eax
  427048:	dec    ebx
  427049:	pop    esp
  42704a:	into   
  42704b:	pop    ebp
  42704c:	fistp  QWORD PTR [edi]
  42704e:	enter  0xe851,0x54
  427052:	mov    edx,0x9f3dad54
  427057:	adc    eax,0x27c63bae
  42705c:	lea    ebx,[ebp-0x69]
  42705f:	inc    eax
  427060:	lahf   
  427061:	and    ah,al
  427063:	push   ebp
  427064:	lahf   
  427065:	push   ebp
  427066:	mov    edx,0x9a2c975a
  42706b:	add    esp,DWORD PTR [ebp+0x26]
  42706e:	(bad)  
  42706f:	pusha  
  427070:	dec    ebx
  427071:	out    0x7d,eax
  427073:	push   edi
  427074:	ja     0x42707f
  427076:	mov    ds:0x8e5a9b3c,eax
  42707b:	pop    ebp
  42707c:	jg     0x4270bc
  42707e:	add    BYTE PTR [eax+0x0],cl
	...
  4270a8:	call   0x633b:0x81a55c2a
  4270af:	dec    edx
  4270b0:	and    esp,DWORD PTR [edx+esi*2]
  4270b3:	pusha  
  4270b4:	out    dx,eax
  4270b5:	inc    ebp
  4270b6:	jo     0x427114
  4270b8:	adc    al,0x9
  4270ba:	pop    esp
  4270bb:	cmp    dh,BYTE PTR [edi+0x56]
  4270be:	jb     0x42710c
  4270c0:	jae    0x42711a
  4270c2:	arpl   WORD PTR ds:0x4e6e2e73,si
  4270c8:	je     0x4270b1
  4270ca:	pusha  
  4270cb:	dec    edx
  4270cc:	pop    esp
  4270cd:	or     DWORD PTR [edx+edi*1+0x6f],ebx
  4270d1:	push   esi
  4270d2:	jb     0x4270d8
  4270d4:	arpl   WORD PTR [eax+0x63],bx
  4270d7:	sbb    eax,0x66e2e53
  4270dc:	cmp    al,0x54
  4270de:	das    
  4270df:	es ja  0x427137
  4270e2:	xor    ecx,edi
  4270e4:	sub    eax,0xce97128
  4270e9:	pop    eax
  4270ea:	push   0x642a1d08
  4270ef:	mov    edx,0xd0743d33
  4270f4:	sbb    ch,BYTE PTR [ecx+esi*2]
  4270f7:	pop    es
  4270f8:	adc    al,0x26
  4270fa:	ins    BYTE PTR es:[edi],dx
  4270fb:	sar    BYTE PTR [edx+ebp*1+0x0],0xa5
  427100:	xchg   ebp,eax
  427101:	and    DWORD PTR [edi-0x45],ebx
  427104:	arpl   WORD PTR ds:0x3d74cc51,bp
  42710a:	addr16 mov edi,0x0
	...
  427134:	jno    0x42716e
  427136:	pop    ebp
  427137:	fsubr  DWORD PTR [ecx+0x1ad45cf9]
  42713d:	cmp    DWORD PTR [edi-0x7b],ebp
  427140:	pop    edi
  427141:	cmp    eax,0x48a4e963
  427146:	ins    DWORD PTR es:[edi],dx
  427147:	add    ah,cl
  427149:	fbld   TBYTE PTR [eax+0x65]
  42714c:	mov    eax,ds:0xd1206ff0
  427151:	cli    
  427152:	gs je  0x4271b2
  427155:	in     eax,dx
  427156:	jno    0x4271bd
  427158:	repnz in eax,0x60
  42715b:	popa   
  42715c:	jb     0x427141
  42715e:	jae    0x4271d0
  427160:	loop   0x427152
  427162:	ins    DWORD PTR es:[edi],dx
  427163:	ins    BYTE PTR es:[edi],dx
  427164:	paddsb mm5,QWORD PTR [edi+0x2e]
  427168:	pmaddwd mm4,QWORD PTR [eax+0x0]
  42716c:	jno    0x427152
  42716e:	jae    0x4271d5
  427170:	jno    0x42712d
  427172:	popa   
  427173:	popa   
  427174:	pop    esi
  427175:	or     eax,0xe03e696f
  42717a:	outs   dx,BYTE PTR ds:[esi]
  42717b:	cs cmp edi,ebx
  42717e:	add    BYTE PTR fs:[esi+0x59],dl
  427182:	popa   
  427183:	popa   
  427184:	bound  edx,QWORD PTR [edx+0x5d]
  427187:	jb     0x4271d8
  427189:	sub    DWORD PTR [ebp+eiz*2+0x43],ecx
  42718d:	std    
  42718e:	inc    ebp
  42718f:	push   esp
  427190:	push   edx
  427191:	or     eax,0x512c4f4f
  427196:	push   ebx
  427197:	inc    ecx
	...
  4271c0:	mov    al,ds:0x8f4c5c40
  4271c5:	in     al,dx
  4271c6:	outs   dx,DWORD PTR ds:[esi]
  4271c7:	push   edi
  4271c8:	cmp    ebx,0x60
  4271cb:	add    bl,ch
  4271cd:	cli    
  4271ce:	outs   dx,BYTE PTR ds:[esi]
  4271cf:	je     0x4271e4
  4271d1:	in     eax,0x6b
  4271d3:	push   eax
  4271d4:	add    edi,ebp
  4271d6:	addr16 add dh,bl
  4271d9:	in     eax,dx
  4271da:	jae    0x42723d
  4271dc:	out    dx,al
  4271dd:	in     eax,0x71
  4271df:	add    dl,ah
  4271e1:	in     eax,dx
  4271e2:	outs   dx,BYTE PTR ds:[esi]
  4271e3:	jae    0x4271a2
  4271e5:	div    DWORD PTR [ecx+0x64]
  4271e8:	dec    ebx
  4271e9:	mov    ds:0x9e786d49,al
  4271ee:	dec    edi
  4271ef:	pop    edi
  4271f0:	outs   dx,BYTE PTR ds:[esi]
  4271f1:	test   DWORD PTR [ecx],eax
  4271f3:	push   ebx
  4271f4:	js     0x427183
  4271f6:	xor    ecx,DWORD PTR [esi+0x6a]
  4271f9:	lea    ebp,[eax]
  4271fb:	add    BYTE PTR [ecx-0x73],bh
  4271fe:	xor    BYTE PTR [ebp+0x57],ch
  427201:	inc    ebp
  427202:	dec    eax
  427203:	addr16 pop ecx
  427205:	dec    ebp
  427206:	and    esi,DWORD PTR [esp+ebx*2+0x50]
  42720a:	cmp    DWORD PTR [eax],eax
  42720c:	sbb    esi,ebx
  42720e:	xor    eax,0x2cf50d74
  427213:	bound  ebp,QWORD PTR [esi]
  427215:	lock add eax,DWORD PTR [esi+0x18]
  427219:	adc    dh,BYTE PTR [esi]
  42721b:	ins    DWORD PTR es:[edi],dx
  42721c:	pop    ds
  42721d:	repz and ch,BYTE PTR [ebp+0x2f]
  427221:	mov    ds:0x6d54,al
	...
  42724a:	add    BYTE PTR [eax],al
  42724c:	sub    eax,0x195f371e
  427251:	add    eax,0xfea4b60
  427256:	cmp    BYTE PTR [edi-0x13],ah
  427259:	rcl    DWORD PTR [ecx+0x72],0xe2
  42725d:	push   ss
  42725e:	ss ja  0x427240
  427261:	mov    eax,ds:0xe019315d
  427266:	sub    BYTE PTR [ebp+eax*1-0x2a],dh
  42726a:	xor    DWORD PTR [esi],ebp
  42726c:	loop   0x427231
  42726e:	sub    al,BYTE PTR [eax]
  427270:	std    
  427271:	gs push esp
  427273:	addr16 mov edi,0xb22e34cd
  427279:	fsubr  QWORD PTR [edx]
  42727b:	add    BYTE PTR [edi-0x788bd99c],dl
  427281:	jo     0x4272ad
  427283:	jbe    0x427233
  427285:	mov    ds:0x9985f51,al
  42728a:	call   0x7803:0x8337a658
  427291:	aaa    
  427292:	add    DWORD PTR [ebx],0xffffff98
  427295:	cmp    BYTE PTR [ebp+esi*1+0x26942a8d],al
  42729c:	dec    ebx
  42729d:	push   edi
  42729e:	mov    ?,WORD PTR [eax]
  4272a0:	ja     0x4272ef
  4272a2:	xor    BYTE PTR ds:0x30732868,0x59
  4272a9:	xor    ah,bh
  4272ab:	push   ebx
  4272ac:	data16 aaa 
  4272ae:	push   ebx
  4272af:	add    al,0x0
	...
  4272d5:	add    BYTE PTR [eax],al
  4272d7:	add    BYTE PTR [edx+0x24],bh
  4272da:	dec    ebp
  4272db:	cmp    BYTE PTR [esi],bh
  4272dd:	sub    bl,BYTE PTR [ecx+0x27]
  4272e0:	pop    ds
  4272e1:	pop    eax
  4272e2:	push   esi
  4272e3:	aaa    
  4272e4:	aas    
  4272e5:	and    DWORD PTR [edi],eax
  4272e7:	push   esi
  4272e8:	and    al,0x3b
  4272ea:	dec    esp
  4272eb:	imul   ebx,DWORD PTR ss:[ebp+0x44],0x25
  4272f0:	xor    esp,DWORD PTR [ebx]
  4272f2:	push   ss
  4272f3:	xor    BYTE PTR [esi],ah
  4272f5:	sub    al,0x10
  4272f7:	daa    
  4272f8:	sbb    dl,BYTE PTR [ebp+0x3e]
  4272fb:	daa    
  4272fc:	jmp    0xf56d8c4d
  427301:	sub    eax,0x22e64523
  427306:	or     eax,0x3cea27
  42730b:	xor    ebp,esi
  42730d:	aaa    
  42730e:	out    0x54,eax
  427310:	call   0xd969504b
  427315:	pop    esp
  427316:	loopne 0x42734b
  427318:	call   0x9b9a2025
  42731d:	jmp    0x5dcfc3cb
  427322:	cdq    
  427323:	push   eax
  427324:	xchg   DWORD PTR [ecx],ecx
  427326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427327:	push   edi
  427328:	fwait
  427329:	inc    esi
  42732a:	add    BYTE PTR [esi-0x46d1f686],ah
  427330:	push   esi
  427331:	sub    eax,DWORD PTR [eax]
  427333:	lds    edi,FWORD PTR [eax+0x37]
  427336:	ins    DWORD PTR es:[edi],dx
  427337:	xchg   DWORD PTR [ecx+0x25],esp
  42733a:	arpl   WORD PTR [edx+0x0],bx
	...
  427364:	dec    eax
  427365:	mov    BYTE PTR [ebx+0xd],bh
  427368:	pop    ebx
  427369:	xor    DWORD PTR [ecx-0x52c7deef],0xfffffffe
  427370:	and    DWORD PTR ds:0xe5e67974,edi
  427376:	sub    al,0xe9
  427378:	xor    BYTE PTR ds:0xef185974,bh
  42737e:	sub    al,0xe
  427380:	inc    edi
  427381:	sub    esi,DWORD PTR [ecx+ebx*2-0x3f]
  427385:	in     eax,0x2c
  427387:	jmp    0x3ba5acf9
  42738c:	outs   dx,BYTE PTR ds:[esi]
  42738d:	or     DWORD PTR [ebp+0x48],esi
  427390:	pop    ebp
  427391:	sub    eax,0x3d6e4d2e
  427396:	add    BYTE PTR [esi],cl
  427398:	clc    
  427399:	and    esp,DWORD PTR [esi+0x1d]
  42739c:	pop    esp
  42739d:	push   edx
  42739e:	jb     0x4273a4
  4273a0:	sub    eax,DWORD PTR [eax+esi*2+0xc]
  4273a4:	cmp    DWORD PTR [edx+0x20],edx
  4273a7:	cmp    ch,BYTE PTR [ebx+ebp*1]
  4273aa:	je     0x4273aa
  4273ac:	das    
  4273ad:	aaa    
  4273ae:	arpl   cx,bp
  4273b0:	cld    
  4273b1:	push   ecx
  4273b2:	jno    0x4273b1
  4273b4:	push   0x33fb6746
  4273b9:	sub    BYTE PTR [esi+edx*8+0x1a],dh
  4273bd:	cmp    dh,BYTE PTR [ecx]
  4273bf:	jmp    0xddb3c5c0
  4273c4:	sub    BYTE PTR [ebx+0x6e],cl
  4273c7:	fiadd  DWORD PTR [eax]
	...
  4273ed:	add    BYTE PTR [eax],al
  4273ef:	add    BYTE PTR [edx+edx*2+0x6c],dh
  4273f3:	add    BYTE PTR [esi],bl
  4273f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273f6:	dec    ebp
  4273f7:	popa   
  4273f8:	neg    ch
  4273fa:	dec    DWORD PTR [esi-0x1e]
  4273fd:	loopne 0x427470
  4273ff:	popa   
  427400:	sbb    al,0x3e
  427402:	push   esp
  427403:	dec    ebp
  427404:	ficom  WORD PTR [ecx+0x6f]
  427407:	push   0x5c6be1c7
  42740c:	int    0xf5
  42740e:	pusha  
  42740f:	outs   dx,BYTE PTR ds:[esi]
  427410:	scas   al,BYTE PTR es:[edi]
  427411:	out    0x6a,al
  427413:	ins    DWORD PTR es:[edi],dx
  427414:	fucomip st,st(4)
  427416:	ins    DWORD PTR es:[edi],dx
  427417:	fs loop 0x427414
  42741a:	fs jae 0x4273f4
  42741d:	jmp    0x427492
  42741f:	jo     0x427482
  427421:	clc    
  427422:	jne    0x427497
  427424:	cmp    al,0xe7
  427426:	outs   dx,BYTE PTR fs:[esi]
  427428:	loop   0x42747b
  42742a:	cmp    eax,0x45471763
  42742f:	push   esp
  427430:	mov    dl,0x56
  427432:	imul   esp,DWORD PTR [esi+0x76],0xfffffffa
  427436:	pop    esp
  427437:	jb     0x427440
  427439:	sub    DWORD PTR ds:0x45471763,edi
  42743f:	push   esp
  427440:	mov    dl,0x58
  427442:	push   edx
  427443:	push   ebp
  427444:	mov    ds:0x56464b56,al
  427449:	pop    edx
  42744a:	cmp    eax,0x3f293752
  42744f:	ins    BYTE PTR es:[edi],dx
  427450:	push   ebx
  427451:	imul   BYTE PTR [esi+0x65]
	...
  42747c:	jno    0x4274cf
  42747e:	push   esp
  42747f:	jns    0x4274f3
  427481:	loopne 0x4274ce
  427483:	imul   edx,DWORD PTR [eax+0x29],0xbc304377
  42748a:	inc    ebx
  42748b:	xor    ah,BYTE PTR [ecx+0x2a2d43b5]
  427491:	mov    ebp,0x54b3436
  427496:	clc    
  427497:	mov    ah,BYTE PTR ds:[ebx-0x10]
  42749b:	inc    ecx
  42749c:	mov    BYTE PTR [eax-0x8],ah
  42749f:	sub    dh,BYTE PTR [edi-0x4f]
  4274a2:	inc    esp
  4274a3:	ss pop edi
  4274a5:	pop    ebp
  4274a6:	out    dx,eax
  4274a7:	xor    al,0x85
  4274a9:	mov    bh,0xf6
  4274ab:	xor    al,0x96
  4274ad:	mov    ds:0x76854d52,al
  4274b2:	push   esi
  4274b3:	aas    
  4274b4:	cdq    
  4274b5:	pop    ebp
  4274b6:	pop    ebp
  4274b7:	inc    ecx
  4274b8:	outs   dx,DWORD PTR ds:[esi]
  4274b9:	xor    DWORD PTR [edx],0x5d336e71
  4274bf:	push   esp
  4274c0:	jb     0x4274f4
  4274c2:	sub    BYTE PTR [edx+esi*2-0x7c],cl
  4274c6:	pop    ebp
  4274c7:	jns    0x4274eb
  4274c9:	gs inc esp
  4274cb:	xor    ebx,DWORD PTR [esi]
  4274cd:	or     eax,0xe51e36f2
  4274d2:	lock xor DWORD PTR [ecx+0x5],edi
  4274d6:	clc    
  4274d7:	xor    al,0x76
  4274d9:	pop    ss
  4274da:	in     eax,dx
  4274db:	inc    ecx
  4274dc:	or     BYTE PTR [edi+0x2afa],ch
	...
  427506:	add    BYTE PTR [eax],al
  427508:	push   es
  427509:	mov    dh,0xf9
  42750b:	xor    DWORD PTR [esi-0x20],ebx
  42750e:	sti    
  42750f:	das    
  427510:	push   esp
  427511:	mov    bl,0xef
  427513:	inc    eax
  427514:	push   ss
  427515:	mov    ds:0x5186734,al
  42751a:	es je  0x427518
  42751d:	adc    dh,BYTE PTR [edx]
  42751f:	jbe    0x427519
  427521:	outs   dx,DWORD PTR ds:[esi]
  427522:	sub    ch,BYTE PTR [esi-0x1e]
  427525:	mov    eax,ds:0x4f86734
  42752a:	es je  0x427508
  42752d:	(bad)  
  42752e:	sub    ch,BYTE PTR [esi-0xe]
  427531:	mov    eax,ds:0x8fb5443
  427536:	mov    ebp,0xc629d42c
  42753b:	es mov ecx,0xbb37ccdf
  427541:	or     DWORD PTR [ebp-0x29a864a9],esp
  427547:	cmp    cl,BYTE PTR [eax+ebp*1+0x3a7531c4]
  42754e:	retf   0x7f03
  427551:	pop    ebx
  427552:	mov    edi,0xba20a52a
  427557:	sub    al,0xa5
  427559:	xor    eax,0x1e7620cd
  42755e:	out    0x2d,eax
  427560:	jp     0x42759e
  427562:	(bad)  
  427564:	push   0x7d03931d
  427569:	pop    esp
  42756a:	call   0x0:0x5c
	...
  427591:	add    BYTE PTR [eax],al
  427593:	add    BYTE PTR [edi+ebx*1+0x3f4b3780],cl
  42759a:	call   0x5737:0x4f5c7650
  4275a1:	and    eax,0x935354e
  4275a6:	and    eax,0x484b1a51
  4275ab:	xor    DWORD PTR [eax],ebp
  4275ad:	idiv   edx
  4275af:	pop    esp
  4275b0:	pop    es
  4275b1:	es dec edx
  4275b3:	sub    eax,0x3729262f
  4275b8:	and    eax,0x4b324427
  4275bd:	pop    esp
  4275be:	sub    al,0x41
  4275c0:	add    al,0x55
  4275c2:	and    al,0x4f
  4275c4:	es inc edi
  4275c6:	sbb    DWORD PTR [edi],esp
  4275c8:	call   0xe069890e
  4275cd:	or     BYTE PTR [edi],dl
  4275cf:	dec    ecx
  4275d0:	sbb    al,0xfa
  4275d2:	sbb    eax,0x34e845
  4275d7:	and    BYTE PTR ds:0x26fb6335,ch
  4275dd:	push   eax
  4275de:	ins    BYTE PTR es:[edi],dx
  4275df:	mov    dl,0x25
  4275e1:	cmp    BYTE PTR [ecx-0x33],dl
  4275e4:	ja     0x42761b
  4275e6:	add    BYTE PTR [ecx-0x51d1216d],bh
  4275ec:	mov    DWORD PTR [edx],edi
  4275ee:	je     0x4275c1
  4275f0:	gs pop ds
  4275f2:	je     0x4275c4
  4275f4:	imul   ecx,DWORD PTR [esi+0x74],0xffffffcc
	...
  427620:	dec    eax
  427621:	pop    ecx
  427622:	dec    ecx
  427623:	clc    
  427624:	sbb    DWORD PTR [edx+0x44],ebx
  427627:	mov    ebx,0x8a63456f
  42762c:	cmp    dh,BYTE PTR [esi]
  42762e:	jo     0x4275cd
  427630:	dec    eax
  427631:	pop    ecx
  427632:	dec    ecx
  427633:	fdivr  st,st(1)
  427635:	dec    ebp
  427636:	inc    esi
  427637:	jnp    0x42765e
  427639:	sub    dl,BYTE PTR [ecx-0x73]
  42763c:	aaa    
  42763d:	xor    eax,0x948e900
  427642:	add    cl,ch
  427644:	dec    eax
  427645:	or     DWORD PTR [eax],eax
  427647:	jmp    0xe9427f94
  42764c:	dec    eax
  42764d:	or     DWORD PTR [eax],eax
  42764f:	jmp    0xe9427f9c
  427654:	dec    eax
  427655:	or     DWORD PTR [eax],eax
  427657:	jmp    0xe9427fa4
  42765c:	dec    eax
  42765d:	or     DWORD PTR [eax],eax
  42765f:	jmp    0x40ae94b9
  427664:	pop    ebx
  427665:	sub    dh,BYTE PTR [ecx]
  427667:	xlat   BYTE PTR ds:[ebx]
  427668:	sub    al,0x1d
  42766a:	ins    BYTE PTR es:[edi],dx
  42766b:	jmp    0xae94ad
  427670:	cmp    ebp,DWORD PTR [edx]
  427672:	xor    DWORD PTR [esi],ebp
  427674:	and    BYTE PTR [ecx],bh
  427676:	arpl   WORD PTR [eax],ax
  427678:	push   esp
  427679:	add    eax,0xdc56716f
  42767e:	jae    0x4276e5
  427680:	mov    eax,ds:0x6c5f53
	...
  4276a9:	add    BYTE PTR [eax],al
  4276ab:	add    BYTE PTR [ebp-0x9],dl
  4276ae:	pusha  
  4276af:	add    BYTE PTR [ecx-0xb],dh
  4276b2:	imul   ebp,DWORD PTR [ecx+0x1e],0xffffffe9
  4276b6:	cs pop edi
  4276b8:	and    dh,ah
  4276ba:	pusha  
  4276bb:	jo     0x4276c0
  4276bd:	hlt    
  4276be:	pusha  
  4276bf:	add    cl,dh
  4276c1:	hlt    
  4276c2:	imul   ebp,DWORD PTR [ecx-0x22],0xffffffe8
  4276c6:	cs pop edi
  4276c8:	loope  0x4276a7
  4276ca:	pusha  
  4276cb:	jo     0x4276ef
  4276cd:	imul   DWORD PTR [esp+ebp*2-0x45]
  4276d1:	frstor [eax+0x33]
  4276d4:	(bad)
  4276d7:	ins    BYTE PTR es:[edi],dx
  4276d8:	fnstsw ax
  4276da:	ins    DWORD PTR es:[edi],dx
  4276db:	pop    edi
  4276dc:	shr    ah,0x73
  4276df:	gs jno 0x4276ec
  4276e2:	outs   dx,DWORD PTR ds:[esi]
  4276e3:	jno    0x4276bb
  4276e5:	fdiv   QWORD PTR [ebx+0x65]
  4276e8:	mov    eax,ds:0x566f5f52
  4276ed:	stc    
  4276ee:	push   0x6be7856e
  4276f3:	outs   dx,DWORD PTR ds:[esi]
  4276f4:	adc    BYTE PTR ds:0xef056d00,al
  4276fa:	outs   dx,BYTE PTR ds:[esi]
  4276fb:	jno    0x427773
  4276fd:	fdiv   QWORD PTR [ebx+0x65]
  427700:	mov    cl,0x9f
  427702:	popa   
  427703:	ins    BYTE PTR es:[edi],dx
  427704:	push   ss
  427705:	add    eax,0xdc06716f
  42770a:	jae    0x427771
  42770c:	xchg   ecx,eax
  42770d:	push   edx
  42770e:	imul   esi,DWORD PTR [eax+0x0],0x0
	...
  427736:	add    BYTE PTR [eax],al
  427738:	aas    
  427739:	jecxz  0x42773a
  42773b:	jb     0x4277a0
  42773d:	loope  0x4277a3
  42773f:	je     0x42778c
  427741:	std    
  427742:	hlt    
  427743:	pop    esp
  427744:	call   0xe6b3a1f4
  427749:	lahf   
  42774a:	outs   dx,DWORD PTR ss:[esi]
  42774c:	neg    DWORD PTR [eax]
  42774e:	xor    BYTE PTR [ebx+0x18],ah
  427751:	pop    ss
  427752:	xor    al,0x72
  427754:	out    dx,al
  427755:	scas   eax,DWORD PTR es:[edi]
  427756:	and    al,0x72
  427758:	out    0x9f,al
  42775a:	outs   dx,DWORD PTR ss:[esi]
  42775c:	mov    bh,0xd9
  42775e:	sub    eax,0x36737863
  427763:	je     0x427713
  427765:	rol    BYTE PTR [ecx],cl
  427767:	jno    0x427723
  427769:	(bad)  
  42776a:	sub    al,0x74
  42776c:	scas   al,BYTE PTR es:[edi]
  42776d:	scas   eax,DWORD PTR es:[edi]
  42776e:	pop    edx
  42776f:	popa   
  427770:	lods   al,BYTE PTR ds:[esi]
  427771:	(bad)  
  427772:	xor    BYTE PTR [ebx-0x5b],ch
  427775:	jnp    0x42779a
  427777:	ja     0x427710
  427779:	jge    0x4277b1
  42777b:	add    BYTE PTR [eax-0x6f],bh
  42777e:	and    eax,0xf67d7767
  427783:	pop    esp
  427784:	push   0x5e73252b
  427789:	xchg   esp,eax
  42778a:	pop    edx
  42778b:	bound  esi,QWORD PTR [edi+0x7b]
  42778e:	and    eax,DWORD PTR [eax]
  427790:	dec    ebx
  427791:	mov    ds:0xa24b0001,al
  427796:	add    DWORD PTR [eax],eax
  427798:	dec    ebx
  427799:	mov    ds:0x1,al
	...
  4277c2:	add    BYTE PTR [eax],al
  4277c4:	dec    ebx
  4277c5:	mov    ds:0xa24b0001,al
  4277ca:	add    DWORD PTR [eax],eax
  4277cc:	dec    ebx
  4277cd:	mov    ds:0xa24b0001,al
  4277d2:	add    DWORD PTR [eax],eax
  4277d4:	dec    ebx
  4277d5:	mov    ds:0xf24b0001,al
  4277da:	xor    eax,0x28492d6d
  4277df:	arpl   WORD PTR [eax],bx
  4277e1:	or     ebp,edx
  4277e3:	sub    dh,ch
  4277e5:	and    edi,esp
  4277e7:	push   ebx
  4277e8:	stc    
  4277e9:	sbb    ecx,DWORD PTR ds:0xe725e72b
  4277ef:	dec    edx
  4277f0:	cli    
  4277f1:	push   esi
  4277f2:	or     al,0x28
  4277f4:	add    al,0x35
  4277f6:	adc    BYTE PTR [edx],dh
  4277f8:	call   0xdf658f05
  4277fd:	and    bh,ah
  4277ff:	push   ebx
  427800:	in     al,dx
  427801:	xor    al,0xcf
  427803:	dec    edi
  427804:	mov    dh,0x46
  427806:	fistp  WORD PTR [esi]
  427808:	dec    ebx
  427809:	cmp    al,al
  42780b:	and    BYTE PTR [ebp+0x5d34bd1c],ah
  427811:	cmp    BYTE PTR [eax-0x3bca53d9],bh
  427817:	add    ebx,DWORD PTR [edx-0x59d631de]
  42781d:	sbb    edi,DWORD PTR [edx-0x64ce6717]
  427823:	add    edi,DWORD PTR [edx+0x22]
  427826:	xchg   BYTE PTR [ecx],ch
	...
  427850:	outs   dx,BYTE PTR ds:[esi]
  427851:	sbb    ebx,DWORD PTR [edx-0x70cad90b]
  427857:	das    
  427858:	dec    ebx
  427859:	cmp    BYTE PTR [eax-0x72e38ae0],dl
  42785f:	xor    al,0x1a
  427861:	fstp   TBYTE PTR [edx+0x3b]
  427864:	pop    edi
  427865:	or     edx,ecx
  427867:	cmc    
  427868:	imul   ecx,DWORD PTR [ecx],0xa
  42786b:	imul   BYTE PTR [eax]
  42786d:	or     DWORD PTR [edx],ecx
  42786f:	imul   BYTE PTR [ecx]
  427871:	or     DWORD PTR [edx],edi
  427873:	aas    
  427874:	pop    es
  427875:	inc    esi
  427876:	sub    dl,BYTE PTR [eax+0x6b]
  427879:	and    DWORD PTR [esi+0x35],edx
  42787c:	pop    ds
  42787d:	sbb    ecx,DWORD PTR [eax+0x27]
  427880:	sub    ch,bl
  427882:	dec    DWORD PTR [eax]
  427884:	xor    al,0x1b
  427886:	popa   
  427887:	cmp    edx,DWORD PTR [eax+0x39]
  42788a:	je     0x427898
  42788c:	sub    ebx,DWORD PTR [eax+0x71]
  42788f:	add    al,0x35
  427891:	sbb    ebx,DWORD PTR [edi+0x4]
  427894:	push   esp
  427895:	fstp   QWORD PTR [edi]
  427897:	add    al,0x21
  427899:	sub    dh,BYTE PTR [edx+0x0]
  42789c:	pop    ds
  42789d:	xor    eax,0x4bf70563
  4278a2:	jno    0x42789e
  4278a4:	sbb    ebx,DWORD PTR [esi]
  4278a6:	jb     0x4278ad
  4278a8:	addr16 inc ebp
  4278aa:	push   edx
  4278ab:	mov    dh,0x8d
  4278ad:	jmp    0x4cc1471c
  4278b2:	ins    BYTE PTR es:[edi],dx
  4278b3:	mov    BYTE PTR [eax],0x0
	...
  4278da:	add    BYTE PTR [eax],al
  4278dc:	imul   esp,DWORD PTR [edx],0x6e
  4278df:	fimul  DWORD PTR [eax+0x43]
  4278e2:	addr16 mov ebx,0xc16d2345
  4278e8:	dec    eax
  4278e9:	dec    ebp
  4278ea:	dec    ebx
  4278eb:	(bad)  
  4278ec:	push   esi
  4278ed:	and    ch,BYTE PTR [ebp+edi*4+0x69]
  4278f1:	dec    ebp
  4278f2:	inc    esi
  4278f3:	nop
  4278f4:	ds data16 mov es,WORD PTR es:[eax+0x4d]
  4278fa:	add    BYTE PTR [edx-0x698bdcdd],bh
  427900:	sub    DWORD PTR [edi],esi
  427902:	arpl   WORD PTR [ebp-0x6f85e373],sp
  427908:	and    al,0x1d
  42790a:	pop    edi
  42790b:	jmp    0xe96d58fd
  427910:	sub    dh,BYTE PTR ds:0xddac2370
  427916:	call   DWORD PTR [eax+0x7b]
  427919:	xor    eax,0xddac1370
  42791e:	inc    DWORD PTR [eax+0x7b]
  427921:	xor    eax,0xaf610070
  427926:	sub    al,0x2f
  427928:	mov    dl,0xc
  42792a:	je     0x42799c
  42792c:	dec    esp
  42792d:	add    eax,0xe8506966
  427932:	inc    ebp
  427933:	push   esp
  427934:	inc    edx
  427935:	mul    BYTE PTR [esp+esi*2+0x47]
  427939:	imul   BYTE PTR ds:0xfff94364
  42793f:	push   edx
	...
  427968:	inc    edi
  427969:	in     al,0x48
  42796b:	outs   dx,DWORD PTR ds:[esi]
  42796c:	cmp    al,0xde
  42796e:	pusha  
  42796f:	jns    0x4279e3
  427971:	push   edx
  427972:	dec    ecx
  427973:	outs   dx,DWORD PTR ds:[esi]
  427974:	pop    eax
  427975:	(bad)  [ebx+0x6c]
  427978:	inc    ebx
  427979:	push   ecx
  42797a:	dec    edi
  42797b:	adc    eax,DWORD PTR gs:[ecx+0x6b]
  42797f:	outs   dx,BYTE PTR ds:[esi]
  427980:	sbb    ecx,ebp
  427982:	je     0x4279e0
  427984:	and    ch,ah
  427986:	imul   ebp,DWORD PTR [edi+0x1],0xffffffdf
  42798a:	call   FWORD PTR [ebx-0xc]
  42798d:	loope  0x4279f9
  42798f:	arpl   cx,di
  427991:	push   ecx
  427992:	inc    edx
  427993:	jb     0x4279a2
  427995:	fld    TBYTE PTR [esi+0x65]
  427998:	rcl    BYTE PTR [ecx+0x0],1
  42799b:	dec    ebp
  42799c:	fucomp st(7)
  42799e:	fs ins BYTE PTR es:[edi],dx
  4279a0:	into   
  4279a1:	in     al,0xff
  4279a3:	pop    ebx
  4279a4:	scas   eax,DWORD PTR es:[edi]
  4279a5:	loop   0x427a20
  4279a7:	imul   ebp,DWORD PTR [esi-0x1e],0xf7c25c5c
  4279ae:	push   0x66
  4279b0:	mov    ebx,0xbe7360e1
  4279b5:	add    eax,0xd9c46f4f
  4279ba:	jb     0x427a1d
  4279bc:	and    al,ch
  4279be:	pop    ebx
  4279bf:	dec    esp
  4279c0:	pop    es
  4279c1:	call   0xda8de224
  4279c6:	dec    edi
  4279c7:	push   eax
  4279c8:	dec    ebx
  4279c9:	loope  0x4279fe
  4279cb:	jo     0x4279cd
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edi],cl
  4279f5:	pop    ecx
  4279f6:	xor    al,BYTE PTR [eax]
  4279f8:	(bad)  
  4279fa:	and    DWORD PTR [edi+0x27],ebx
  4279fd:	fsubr  QWORD PTR [edx]
  4279ff:	jb     0x427a4c
  427a01:	ds and eax,0x2314f06d
  427a07:	jb     0x4279f9
  427a09:	mov    ecx,0x9fff5f1d
  427a0e:	push   edx
  427a0f:	test   DWORD PTR [si],0x12ed6e4b
  427a16:	out    0x4e,al
  427a18:	add    eax,0xef4d0410
  427a1d:	or     BYTE PTR [esi],ah
  427a1f:	add    BYTE PTR ds:0xb96d2e01,al
  427a25:	mov    ecx,0x18b8632d
  427a2a:	and    BYTE PTR [edi-0x41],bl
  427a2d:	mov    dl,0x4e
  427a2f:	addr16 popf 
  427a31:	jo     0x427a80
  427a33:	push   eax
  427a34:	dec    ebx
  427a35:	arpl   WORD PTR [esp+esi*2],bp
  427a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a39:	arpl   bx,sp
  427a3b:	arpl   WORD PTR [ecx+0x784c42b2],bp
  427a41:	imul   edi,DWORD PTR ds:0xf4c1805c,0xee6e3a40
  427a4b:	xor    edi,DWORD PTR [edx]
  427a4d:	int    0x44
  427a4f:	aaa    
  427a50:	ss je  0x427a3b
  427a53:	sbb    dl,BYTE PTR cs:[esi+0x2aef]
	...
  427a7e:	add    BYTE PTR [eax],al
  427a80:	and    esi,DWORD PTR [ecx-0x7]
  427a83:	das    
  427a84:	(bad)
  427a8a:	cmp    eax,0x19097842
  427a8f:	ds add eax,0xc585bdd
  427a95:	aaa    
  427a96:	aaa    
  427a97:	xor    bl,BYTE PTR [esi]
  427a99:	sub    al,0x3a
  427a9b:	pop    ds
  427a9c:	sbb    DWORD PTR [edi],ebx
  427a9e:	dec    esp
  427a9f:	xor    bl,BYTE PTR [edx-0x25]
  427aa2:	out    0x30,al
  427aa4:	sub    BYTE PTR [ebx],bl
  427aa6:	cmp    eax,0xfd1c191f
  427aab:	cmp    esi,eax
  427aad:	xor    al,0xe7
  427aaf:	push   edi
  427ab0:	add    eax,0xe83d373d
  427ab5:	sbb    al,0x1b
  427ab7:	pop    ds
  427ab8:	stc    
  427ab9:	or     BYTE PTR [ecx+edx*2],ah
  427abc:	jmp    FWORD PTR [ecx+ecx*1]
  427abf:	repnz cs sub eax,0x3a4b3008
  427ac6:	sub    esp,DWORD PTR [ebx]
  427ac8:	xlat   BYTE PTR ds:[ebx]
  427ac9:	sub    DWORD PTR [ebp-0x18e25be1],edi
  427acf:	push   edi
  427ad0:	mov    BYTE PTR [ebx+edx*8],bl
  427ad3:	xor    BYTE PTR [esi+0x6c57db2f],ah
  427ad9:	push   ebp
  427ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427adb:	dec    edi
  427adc:	jnp    0x427ae7
  427ade:	mov    al,0x25
  427ae0:	xchg   edi,eax
  427ae1:	cs mov ecx,0x25
	...
  427b0b:	add    BYTE PTR [eax-0x6cc0f8e3],ch
  427b11:	sbb    DWORD PTR [ebx-0x66d186dc],edi
  427b17:	add    edx,DWORD PTR [esi+0x652a8d32]
  427b1d:	cs fwait
  427b1f:	inc    eax
  427b20:	mov    WORD PTR [edi+edi*2],gs
  427b23:	push   ds
  427b24:	mov    bl,BYTE PTR [ebx]
  427b26:	mov    WORD PTR [edi],ds
  427b28:	push   0x742a7337
  427b2d:	xor    eax,0x54487a00
  427b32:	push   ecx
  427b33:	leave  
  427b34:	adc    DWORD PTR [eax+eiz*1+0x2f],ecx
  427b38:	sbb    edi,DWORD PTR [ecx]
  427b3a:	and    BYTE PTR [ecx],bh
  427b3c:	push   0x665e711a
  427b41:	sbb    esp,DWORD PTR [edx+ebx*2+0x4f]
  427b45:	dec    ebp
  427b46:	push   eax
  427b47:	sub    bh,dh
  427b49:	dec    edi
  427b4a:	cmp    cl,BYTE PTR [ecx]
  427b4c:	dec    edi
  427b4d:	sbb    DWORD PTR [ecx+0x3d],esi
  427b50:	sbb    sp,WORD PTR [ebx+0x4a]
  427b54:	ins    DWORD PTR es:[edi],dx
  427b55:	sub    ebp,DWORD PTR [ebp+edx*1+0x47]
  427b59:	cmp    DWORD PTR [ecx+0x15],edx
  427b5c:	sbb    esp,DWORD PTR cs:[ebx+0x2a]
  427b60:	cmp    DWORD PTR [edi+ebx*2],ebp
  427b63:	adc    eax,0xfa6e5044
  427b68:	sub    al,0x48
  427b6a:	outs   dx,BYTE PTR ds:[esi]
  427b6b:	or     dh,BYTE PTR [ecx+ecx*1]
  427b6e:	add    BYTE PTR [edx],cl
	...
  427b98:	sbb    DWORD PTR [eax],esp
  427b9a:	jo     0x427b91
  427b9c:	cmp    ebx,ecx
  427b9e:	sub    eax,0x3564cd
  427ba3:	stos   BYTE PTR es:[edi],al
  427ba4:	jp     0x427bc4
  427ba6:	jo     0x427b85
  427ba8:	jge    0x427be1
  427baa:	jo     0x427b87
  427bac:	outs   dx,DWORD PTR ds:[esi]
  427bad:	sbb    eax,0x4d6cca63
  427bb2:	pop    edi
  427bb3:	mov    ch,0x69
  427bb5:	or     DWORD PTR [eax],eax
  427bb7:	jmp    0xe9428504
  427bbc:	dec    eax
  427bbd:	or     DWORD PTR [eax],eax
  427bbf:	jmp    0xdd77cf4c
  427bc4:	aam    0x63
  427bc6:	int    0xf8
  427bc8:	ja     0x427bec
  427bca:	add    BYTE PTR [ebx+0x48],al
  427bcd:	cs inc esi
  427bcf:	add    BYTE PTR [ebx+ecx*2],dh
  427bd2:	dec    edx
  427bd3:	aaa    
  427bd4:	xchg   esi,eax
  427bd5:	xchg   BYTE PTR [edx+0x791df3cf],bh
  427bdb:	add    BYTE PTR [eax],cl
  427bdd:	or     ah,BYTE PTR [ebp+0x46]
  427be0:	xchg   esp,eax
  427be1:	dec    edi
  427be2:	dec    edx
  427be3:	aaa    
  427be4:	push   esi
  427be5:	jno    0x427ba1
  427be7:	iret   
  427be8:	mov    bl,0x1b
  427bea:	jns    0x427bec
  427bec:	enter  0x650d,0x46
  427bf0:	je     0x427b8c
  427bf2:	std    
  427bf3:	jmp    DWORD PTR [edx+0x3a322db1]
  427bf9:	or     eax,0x6f4f
	...
  427c22:	add    BYTE PTR [eax],al
  427c24:	or     al,0xe1
  427c26:	jb     0x427c89
  427c28:	pusha  
  427c29:	lock pop ebx
  427c2b:	dec    ebp
  427c2c:	pop    ebx
  427c2d:	out    dx,al
  427c2e:	jno    0x427c9f
  427c30:	push   ecx
  427c31:	jmp    0x746d:0xe4367465
  427c38:	dec    edi
  427c39:	fild   QWORD PTR [ebp+0x65]
  427c3c:	pop    esi
  427c3d:	stos   BYTE PTR es:[edi],al
  427c3e:	inc    edx
  427c3f:	js     0x427c93
  427c41:	push   es
  427c42:	imul   esi,DWORD PTR [edx+0x4f],0xffffffdf
  427c46:	pop    ebx
  427c47:	dec    ecx
  427c48:	adc    al,0xde
  427c4a:	pusha  
  427c4b:	ins    BYTE PTR es:[edi],dx
  427c4c:	push   es
  427c4d:	add    eax,0xe9106f46
  427c52:	outs   dx,BYTE PTR ds:[esi]
  427c53:	pop    esp
  427c54:	loope  0x427c33
  427c56:	push   0x72
  427c58:	adc    esi,ebx
  427c5a:	pusha  
  427c5b:	xor    ah,BYTE PTR [edx]
  427c5d:	or     al,BYTE PTR [eax]
  427c5f:	add    BYTE PTR [edx],ah
  427c61:	in     eax,dx
  427c62:	jmp    DWORD PTR [ecx-0xe]
  427c65:	lock push DWORD PTR [ecx]
  427c68:	repnz mov cl,0xfd
  427c6b:	xor    eax,0x65fdb4e2
  427c70:	dec    ebx
  427c71:	mov    al,0xe0
  427c73:	jmp    DWORD PTR [ebx]
  427c75:	mov    al,0x23
  427c77:	add    BYTE PTR [edi],dl
  427c79:	mov    al,0xfa
  427c7b:	jmp    DWORD PTR [edi]
  427c7d:	mov    al,0xf5
  427c7f:	jmp    FWORD PTR [ecx-0x50]
  427c82:	and    eax,0xe0b08200
  427c87:	inc    DWORD PTR [eax]
	...
  427cad:	add    BYTE PTR [eax],al
  427caf:	add    BYTE PTR [ebx],ch
  427cb1:	mov    al,0xf6
  427cb3:	(bad)  
  427cb4:	jg     0x427c66
  427cb6:	jmp    0x26f2dcba
  427cbb:	add    BYTE PTR [ecx-0x50],bl
  427cbe:	repz jmp DWORD PTR [ebx-0x50]
  427cc2:	icebp  
  427cc3:	call   FWORD PTR [eax-0x50]
  427cc6:	and    eax,0x24b02900
  427ccb:	add    BYTE PTR [eax+esi*4],bh
  427cce:	daa    
  427ccf:	add    BYTE PTR [eax+esi*4],dh
  427cd2:	add    DWORD PTR [eax],eax
  427cd4:	push   es
  427cd5:	stc    
  427cd6:	and    al,0x72
  427cd8:	fadd   QWORD PTR [edx]
  427cda:	and    DWORD PTR [esi-0x21],esp
  427cdd:	neg    BYTE PTR [eax+0x67]
  427ce0:	in     eax,dx
  427ce1:	fsub   DWORD PTR [ecx]
  427ce3:	arpl   di,bx
  427ce5:	push   es
  427ce6:	fdivp  st(7),st
  427ce8:	out    0xa3,al
  427cea:	xor    DWORD PTR [edx],edi
  427cec:	je     0x427d51
  427cee:	add    DWORD PTR [ecx-0x54],edx
  427cf1:	aam    0x35
  427cf3:	jne    0x427c9f
  427cf5:	shr    BYTE PTR [eax],0x5c
  427cf8:	mov    dl,dh
  427cfa:	and    ah,BYTE PTR [edx-0x52]
  427cfd:	jbe    0x427d45
  427cff:	ins    DWORD PTR es:[edi],dx
  427d00:	scas   al,BYTE PTR es:[edi]
  427d01:	mov    ebp,0x7f4b6e22
  427d06:	sbb    al,0x74
  427d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d09:	jg     0x427d33
  427d0b:	jb     0x427d8a
  427d0d:	int    0x33
  427d0f:	jno    0x427d5c
  427d11:	or     DWORD PTR [edx+0x1c],edi
	...
  427d3b:	add    BYTE PTR [edi+0x2e],bh
  427d3e:	mov    edx,0x8c1b7928
  427d43:	xor    eax,0x4f82ee2b
  427d48:	xchg   ebx,eax
  427d49:	xor    al,0x7a
  427d4b:	aaa    
  427d4c:	dec    ebx
  427d4d:	cmp    BYTE PTR [eax-0x73c797c9],dl
  427d53:	xor    eax,0xe3792e3d
  427d58:	imul   ebp,DWORD PTR ds:0x27285943,0x91f3634
  427d62:	cmp    bl,BYTE PTR [ebx]
  427d64:	pop    ds
  427d65:	cmp    ah,BYTE PTR cs:[edi]
  427d68:	sbb    DWORD PTR [ebx],ebx
  427d6a:	dec    esp
  427d6b:	ss imul ebp,esi,0x42
  427d6f:	push   eax
  427d70:	stc    
  427d71:	sub    eax,0x2dff2144
  427d76:	pop    es
  427d77:	dec    eax
  427d78:	in     al,0x16
  427d7a:	or     al,0x25
  427d7c:	push   DWORD PTR [ebx]
  427d7e:	sbb    DWORD PTR [ebx],ebp
  427d80:	dec    ebx
  427d81:	cmp    BYTE PTR [eax],al
  427d83:	cmp    al,ch
  427d85:	aaa    
  427d86:	add    al,0x36
  427d88:	aad    0x2d
  427d8a:	stc    
  427d8b:	jecxz  0x427db6
  427d8d:	sub    eax,0x2dda56cc
  427d92:	stc    
  427d93:	add    ebx,DWORD PTR [edx-0x65d90cce]
  427d99:	fnstcw WORD PTR cs:[ecx]
  427d9c:	test   al,0x17
  427d9e:	pop    es
  427d9f:	out    0x0,eax
	...
  427dc5:	add    BYTE PTR [eax],al
  427dc7:	add    BYTE PTR [eax-0x57cb440a],ch
  427dcd:	pop    ss
  427dce:	pop    es
  427dcf:	push   esp
  427dd0:	jbe    0x427ddb
  427dd2:	or     al,0x35
  427dd4:	ja     0x427e26
  427dd6:	les    ebp,FWORD PTR [edx]
  427dd8:	stos   BYTE PTR es:[edi],al
  427dd9:	xor    DWORD PTR [eax],eax
  427ddb:	enter  0x3361,0x0
  427ddf:	call   0x172d:0xba631d61
  427de6:	jbe    0x427d6c
  427de8:	ss jmp 0x3ad70b10
  427dee:	inc    esi
  427def:	mov    ch,0x78
  427df1:	or     DWORD PTR [esp+ecx*4+0x34],eax
  427df5:	sbb    BYTE PTR [eax-0x7c],bh
  427df8:	cmp    BYTE PTR ds:0x2c7fe950,0x74
  427dff:	test   BYTE PTR [edi-0xd],dh
  427e02:	ja     0x427e58
  427e04:	imul   ecx,DWORD PTR [ecx],0x55
  427e07:	inc    esp
  427e08:	gs jmp 0x44a5c651
  427e0e:	add    BYTE PTR ds:0x57672e6a,bl
  427e14:	scas   eax,DWORD PTR es:[edi]
  427e15:	inc    edi
  427e16:	pop    edi
  427e17:	xor    eax,0x18510968
  427e1c:	or     ebp,DWORD PTR [esp+esi*2]
  427e1f:	inc    esp
  427e20:	addr16 sub eax,0x44541b6d
  427e26:	je     0x427df1
  427e28:	ja     0x427dcd
  427e2a:	jno    0x427e34
	...
  427e54:	sub    eax,0x80e96335
  427e59:	mov    ds:0xa368e928,eax
  427e5e:	inc    edx
  427e5f:	or     DWORD PTR cs:[edx],edi
  427e62:	push   esp
  427e63:	sbb    ecx,DWORD PTR [eax+0x47154e4a]
  427e69:	cmp    DWORD PTR [edx-0x50],edx
  427e6c:	jne    0x427e50
  427e6e:	push   ecx
  427e6f:	ror    BYTE PTR [eax+0x36],0x4e
  427e73:	mov    al,ds:0xe9433679
  427e78:	xchg   DWORD PTR [ecx+0x43],edx
  427e7b:	add    cl,ah
  427e7d:	in     eax,0xff
  427e7f:	inc    ebp
  427e80:	fnstsw WORD PTR [ecx+eax*2]
  427e83:	dec    ecx
  427e84:	mov    ch,0x48
  427e86:	add    BYTE PTR [eax],al
  427e88:	mov    esi,0xdc6962e9
  427e8d:	(bad)  
  427e8f:	outs   dx,BYTE PTR ds:[esi]
  427e90:	sar    bh,1
  427e92:	bound  ebp,QWORD PTR [ecx-0x34]
  427e95:	cmp    DWORD PTR [ecx+0x72],esi
  427e98:	pop    esi
  427e99:	push   es
  427e9a:	jo     0x427efd
  427e9c:	push   ecx
  427e9d:	fnsave [edx+0x6f]
  427ea0:	push   eax
  427ea1:	jmp    0x6571:0x2d3765a
  427ea8:	mov    dl,0xdb
  427eaa:	outs   dx,BYTE PTR ds:[esi]
  427eab:	adc    BYTE PTR gs:[ebx],al
  427eae:	pop    ebp
  427eaf:	ins    DWORD PTR es:[edi],dx
  427eb0:	pop    es
  427eb1:	push   edx
  427eb2:	jbe    0x427f15
  427eb4:	push   cs
  427eb5:	loopne 0x427f17
	...
  427edf:	add    BYTE PTR [ecx+eiz*8],al
  427ee2:	outs   dx,DWORD PTR ds:[esi]
  427ee3:	cmp    bh,BYTE PTR ds:0x5667fdc2
  427ee9:	loope  0x427f5a
  427eeb:	cmp    cl,BYTE PTR [ebp-0x3e]
  427eee:	std    
  427eef:	addr16 ss loope 0x427f62
  427ef3:	jae    0x427f5d
  427ef5:	ret    
  427ef6:	sub    al,0x0
  427ef8:	cs dec edx
  427efa:	imul   ebp,DWORD PTR [edi+0x55],0xffffffe9
  427efe:	pusha  
  427eff:	pop    esp
  427f00:	xor    DWORD PTR ds:0xf03f6f72,eax
  427f06:	call   FWORD PTR [ebx+0x21]
  427f09:	add    eax,0x44f6f72
  427f0e:	jno    0x427f7d
  427f10:	xor    dl,BYTE PTR [edx+0x3f]
  427f13:	push   0x65690310
  427f18:	repnz add DWORD PTR [ecx+0x73],esi
  427f1c:	dec    ebx
  427f1d:	mov    al,0x52
  427f1f:	ins    DWORD PTR es:[edi],dx
  427f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f21:	mov    esp,0xd5995f36
  427f26:	dec    ebp
  427f27:	inc    ecx
  427f28:	mov    ds:0x6e6b1e5e,eax
  427f2d:	sbb    BYTE PTR ds:0x3cb07873,0x6e
  427f34:	js     0x427eba
  427f36:	and    al,0x6c
  427f38:	pop    edi
  427f39:	arpl   WORD PTR [ebp+0x67],ax
  427f3c:	pop    ecx
  427f3d:	mov    al,0x4d
  427f3f:	inc    edx
  427f40:	pop    ecx
  427f41:	and    esp,DWORD PTR [eax]
  427f43:	add    BYTE PTR [bx+si],al
	...
  427f6a:	add    BYTE PTR [eax],al
  427f6c:	pop    esi
  427f6d:	jge    0x427f70
  427f6f:	pop    esp
  427f70:	jge    0x427feb
  427f72:	and    ch,BYTE PTR [eax+0x39]
  427f75:	mov    esp,DWORD PTR [eax]
  427f77:	arpl   WORD PTR [ebx-0x6c],cx
  427f7a:	inc    edx
  427f7b:	ins    DWORD PTR es:[edi],dx
  427f7c:	cmp    ebp,DWORD PTR es:[eax]
  427f7f:	ins    DWORD PTR es:[edi],dx
  427f80:	dec    ebx
  427f81:	in     al,0x51
  427f83:	ins    DWORD PTR es:[edi],dx
  427f84:	sub    BYTE PTR [edi+0x3f],al
  427f87:	arpl   WORD PTR [edi],bp
  427f89:	cmp    al,0x4
  427f8b:	dec    ecx
  427f8c:	frstorw [esi]
  427f8f:	ins    BYTE PTR es:[edi],dx
  427f90:	es push ebx
  427f92:	push   ds
  427f93:	add    BYTE PTR [edi],ah
  427f95:	out    0xde,eax
  427f97:	dec    edx
  427f98:	out    0xe3,al
  427f9a:	es ins DWORD PTR es:[edi],dx
  427f9c:	in     eax,0xaf
  427f9e:	dec    ebp
  427f9f:	push   eax
  427fa0:	stc    
  427fa1:	adc    ah,BYTE PTR [esi]
  427fa3:	not    DWORD PTR [si]
  427fa6:	xor    DWORD PTR [eax],eax
  427fa8:	push   es
  427fa9:	add    BYTE PTR [ebx],bl
  427fab:	popa   
  427fac:	dec    ebx
  427fad:	in     al,dx
  427fae:	inc    esi
  427faf:	jo     0x427f93
  427fb1:	push   cs
  427fb2:	push   eax
  427fb3:	inc    ebx
  427fb4:	mov    ebx,0x98002109
  427fb9:	xchg   esi,eax
  427fba:	and    al,0x66
  427fbc:	lods   eax,DWORD PTR ds:[esi]
  427fbd:	or     DWORD PTR [esi+eax*2],edx
  427fc0:	xchg   edi,eax
  427fc1:	cmp    edi,esp
  427fc3:	xor    ch,BYTE PTR [ebp+edx*1+0x326d32cc]
  427fca:	mov    ebp,0x9a3d4b1c
  427fcf:	sbb    al,0x0
	...
  427ff5:	add    BYTE PTR [eax],al
  427ff7:	add    BYTE PTR [edi-0x58fc45da],dl
  427ffd:	aaa    
  427ffe:	shl    BYTE PTR [edx],0x64
  428001:	sub    al,0xbe
  428003:	and    BYTE PTR [ebx],ch
  428005:	dec    esi
  428006:	mov    WORD PTR [edi],fs
  428008:	fs sub ah,bh
  42800b:	(bad)  [esi+0x15]
  42800e:	xchg   edi,eax
  42800f:	add    edi,DWORD PTR [edx+0x9]
  428012:	test   BYTE PTR [ebx],al
  428014:	pop    edi
  428015:	or     DWORD PTR [ebx+0x3],edi
  428018:	or     DWORD PTR fs:[ebp+0x7a092e03],ecx
  42801f:	add    ecx,DWORD PTR [ebx+0x9]
  428022:	mov    eax,DWORD PTR [esi+0x27]
  428025:	xor    BYTE PTR [ecx+0x23],cl
  428028:	pop    ds
  428029:	jmp    0x2f609d50
  42802e:	inc    ebx
  42802f:	sbb    eax,0x324424fc
  428034:	dec    ebx
  428035:	cmp    al,0x34
  428037:	fsubp  st(5),st
  428039:	sbb    cl,BYTE PTR [edx+0x1c]
  42803c:	dec    ebx
  42803d:	inc    edi
  42803e:	cmp    DWORD PTR [edi],esp
  428040:	cli    
  428041:	xor    BYTE PTR ds:0xd5091b58,ah
  428047:	push   eax
  428048:	add    BYTE PTR [edi-0x19],al
  42804b:	inc    ecx
  42804c:	imul   DWORD PTR [ecx]
  42804e:	adc    DWORD PTR [edi],esp
  428050:	add    eax,0xda041715
  428055:	xor    ebx,edi
  428057:	es sbb eax,0x380825
	...
  428081:	add    BYTE PTR [eax],al
  428083:	add    BYTE PTR [ebx+0x4d],cl
  428086:	add    BYTE PTR [eax],cl
  428088:	jp     0x42809f
  42808a:	push   eax
  42808b:	or     BYTE PTR [edx+0x1a],bh
  42808e:	jne    0x428066
  428090:	jp     0x4280b7
  428092:	add    BYTE PTR [ebp-0x578be597],ch
  428098:	fs and eax,0x1a5bc472
  42809e:	add    BYTE PTR [ebp-0x6b8be597],dh
  4280a4:	cmp    ebp,DWORD PTR [edx+esi*2]
  4280a7:	jmp    0xb5b3c0e8
  4280ac:	cwde   
  4280ad:	cs jb  0x42804d
  4280b0:	dec    eax
  4280b1:	cmp    ch,BYTE PTR [ebp-0x79]
  4280b4:	sbb    al,0x16
  4280b6:	pop    edi
  4280b7:	fwait
  4280b8:	and    eax,0x297d463d
  4280bd:	sbb    ch,BYTE PTR [eax-0x67]
  4280c0:	and    eax,0xa9d6940
  4280c5:	sub    eax,0x4765735f
  4280ca:	je     0x428145
  4280cc:	add    al,0x3a
  4280ce:	arpl   WORD PTR [ebp+0x73],bx
  4280d1:	sub    BYTE PTR [esi+0x46],ch
  4280d4:	pop    edx
  4280d5:	or     DWORD PTR [ebx+ebp*1+0x6b],ebx
  4280d9:	inc    eax
  4280da:	jp     0x428120
  4280dc:	or     eax,0x6ee97015
  4280e1:	and    eax,0x474f4d70
  4280e6:	push   esp
  4280e7:	sbb    DWORD PTR [eax],eax
	...
  42810d:	add    BYTE PTR [eax],al
  42810f:	add    BYTE PTR [edx+0x501d2df0],ah
  428115:	das    
  428116:	imul   eax,DWORD PTR [ebp+0x3a],0x2b0d6331
  42811d:	cmp    eax,0x2f24196d
  428122:	pop    esp
  428123:	or     dh,BYTE PTR [esi]
  428125:	xor    al,0x6b
  428127:	add    BYTE PTR [ebx-0x1],al
  42812a:	arpl   WORD PTR [eax],ax
  42812c:	ins    DWORD PTR es:[edi],dx
  42812d:	cld    
  42812e:	inc    ebp
  42812f:	push   esp
  428130:	bound  eax,QWORD PTR ds:0xfd346f3f
  428136:	pusha  
  428137:	arpl   WORD PTR [esi],cx
  428139:	add    al,0x6b
  42813b:	outs   dx,BYTE PTR ds:[esi]
  42813c:	add    DWORD PTR [ebp+0xafe7871],edi
  428142:	das    
  428143:	inc    esp
  428144:	pop    ss
  428145:	inc    ebp
  428146:	push   esp
  428147:	push   eax
  428148:	and    bl,dl
  42814a:	fs je  0x42815c
  42814d:	fisubr DWORD PTR ds:0x40469
  428153:	pop    esp
  428154:	icebp  
  428155:	inc    esi
  428156:	sub    DWORD PTR [esi-0x52],eax
  428159:	cmp    al,BYTE PTR [eax]
  42815b:	pop    esp
  42815c:	mov    eax,ds:0xae657403
  428161:	out    0x6e,eax
  428163:	imul   ecx,ebp,0xe27260fc
  428169:	cmp    DWORD PTR [ebx+0x46],ecx
  42816c:	fidiv  WORD PTR ds:0x4eef523d
  428172:	aas    
  428173:	ins    BYTE PTR es:[edi],dx
	...
  42819c:	ret    
  42819d:	fldcw  WORD PTR [esi+0x65]
  4281a0:	adc    DWORD PTR [ecx+0x54],edx
  4281a3:	jns    0x4281a7
  4281a5:	call   0x5152eaf5
  4281aa:	ja     0x4281f2
  4281ac:	cmp    edx,DWORD PTR [ebp-0x529ecccf]
  4281b2:	xor    eax,0x439b2c2d
  4281b7:	xor    al,BYTE PTR [edi-0x6c]
  4281ba:	sub    eax,0x3ec02331
  4281bf:	xor    esp,DWORD PTR [ecx]
  4281c1:	lods   al,BYTE PTR ds:[esi]
  4281c2:	sub    dh,BYTE PTR [eax]
  4281c4:	push   0xffffff9a
  4281c6:	sub    eax,0xf5f24b32
  4281cb:	inc    ebp
  4281cc:	pop    ds
  4281cd:	mov    ecx,0xe3ce423f
  4281d2:	repnz sub eax,0x5bf3fc79
  4281d8:	mov    ah,0x9
  4281da:	sbb    dh,BYTE PTR [ecx]
  4281dc:	jns    0x42818e
  4281de:	inc    eax
  4281df:	pop    edi
  4281e0:	mov    eax,0x7b543fa9
  4281e5:	mov    al,0x45
  4281e7:	dec    esi
  4281e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281e9:	mov    esp,0xd1995f56
  4281ee:	pop    ss
  4281ef:	gs dec ebx
  4281f1:	imul   BYTE PTR [ebx]
  4281f3:	data16 jnp 0x4281a6
  4281f6:	xlat   BYTE PTR ds:[ebx]
  4281f7:	jno    0x428260
  4281f9:	pusha  
  4281fa:	add    DWORD PTR [esi+ecx*4-0x7e],edx
  4281fe:	cmp    BYTE PTR [ecx+0x0],dl
	...
  428225:	add    BYTE PTR [eax],al
  428227:	add    BYTE PTR [ecx+0x4b29da5e],bl
  42822d:	and    BYTE PTR [ecx+esi*2],0x58
  428231:	jg     0x42824d
  428233:	jb     0x4282a4
  428235:	shl    al,1
  428237:	adc    DWORD PTR cs:[edx+0x233fffeb],edx
  42823e:	and    BYTE PTR [edx+0x2d],dh
  428241:	xchg   ecx,eax
  428242:	sbb    BYTE PTR [ebx+0x71],ah
  428245:	and    ebp,ebx
  428247:	jmp    DWORD PTR [esi]
  428249:	cmp    eax,0x516b6c18
  42824e:	and    BYTE PTR [ecx+ebx*1+0x4d],ah
  428252:	xor    eax,0xee435171
  428257:	call   FWORD PTR [esi-0x50]
  42825a:	dec    ebp
  42825b:	inc    ebx
  42825c:	sbb    ebp,ebp
  42825e:	push   esp
  42825f:	push   edx
  428260:	adc    eax,0x1f460407
  428265:	add    ah,ah
  428267:	dec    ebp
  428268:	fmul   QWORD PTR [eax]
  42826a:	push   ds
  42826b:	add    al,0xd
  42826d:	xor    eax,0x15ee3a37
  428272:	out    0x36,eax
  428274:	in     al,dx
  428275:	adc    al,0x4
  428277:	aaa    
  428278:	sbb    eax,0x4b181421
  42827d:	cmp    BYTE PTR [esi],ch
  42827f:	inc    edx
  428280:	xchg   edi,eax
  428281:	xor    al,0x28
  428283:	push   esi
  428284:	mov    BYTE PTR ds:0x2ca91b19,bh
  42828a:	adc    al,0x42
	...
  4282b4:	jg     0x4282ef
  4282b6:	pop    es
  4282b7:	imul   DWORD PTR [esi-0x2c]
  4282ba:	mov    dl,0x56
  4282bc:	stos   BYTE PTR es:[edi],al
  4282bd:	pop    ss
  4282be:	shl    BYTE PTR [ebx],0x97
  4282c1:	sbb    bh,ah
  4282c3:	push   esi
  4282c4:	xchg   esi,eax
  4282c5:	inc    ebx
  4282c6:	xchg   ebx,eax
  4282c7:	push   edx
  4282c8:	cmp    al,0x37
  4282ca:	lods   al,BYTE PTR ds:[esi]
  4282cb:	inc    edi
  4282cc:	cdq    
  4282cd:	sub    al,0xc9
  4282cf:	sbb    ah,BYTE PTR [eax]
  4282d1:	inc    ebx
  4282d2:	mov    ebx,0xccd82b53
  4282d7:	repnz add BYTE PTR [ebx-0x45],0x53
  4282dc:	jp     0x428304
  4282de:	cdq    
  4282df:	xor    DWORD PTR [eax+0x17],ebp
  4282e2:	jp     0x4282e7
  4282e4:	or     eax,0xbe39735
  4282e9:	sub    al,0x7c
  4282eb:	sbb    DWORD PTR [edi],edi
  4282ed:	or     DWORD PTR [ebp+0x2ce91b4f],esp
  4282f3:	sbb    esi,DWORD PTR [edi]
  4282f5:	es add al,0x20
  4282f8:	dec    ebx
  4282f9:	cmp    DWORD PTR [eax+0x35],ecx
  4282fc:	sbb    dl,BYTE PTR [esi+edi*1]
  4282ff:	ss daa 
  428301:	or     DWORD PTR [edx],ebx
  428303:	pop    ds
  428304:	stc    
  428305:	adc    al,BYTE PTR [esi+esi*1+0xd]
  428309:	sub    al,BYTE PTR [eax]
  42830b:	inc    esp
  42830c:	push   esp
  42830d:	or     DWORD PTR [ebx+0x3a],edx
  428310:	dec    esp
  428311:	pop    ss
  428312:	inc    edi
  428313:	sub    eax,0x106e444f
	...
  428340:	sbb    esp,DWORD PTR [edi+ebx*2]
  428343:	add    eax,0x472240b
  428348:	es adc eax,0x971fb6d
  42834e:	push   eax
  42834f:	push   cs
  428350:	jne    0x428367
  428352:	dec    esi
  428353:	cld    
  428354:	pop    ebp
  428355:	daa    
  428356:	arpl   bx,di
  428358:	dec    eax
  428359:	cmp    ah,BYTE PTR [ebx-0x25]
  42835c:	pop    edx
  42835d:	sub    BYTE PTR [edx-0x4b],dh
  428360:	jno    0x42837b
  428362:	arpl   cx,bp
  428364:	cmp    BYTE PTR [ecx],cl
  428366:	add    cl,ch
  428368:	xor    DWORD PTR [esi+0x3f],eax
  42836b:	jmp    0xbcd1abd6
  428370:	leave  
  428371:	inc    ebp
  428372:	dec    esp
  428373:	push   es
  428374:	jns    0x42832a
  428376:	add    eax,0xd1a79f89
  42837b:	(bad)  
  42837c:	sbb    eax,0x2db0034
  428381:	xlat   BYTE PTR ds:[ebx]
  428382:	sub    eax,0x30ede1db
  428387:	(bad)  
  428388:	dec    eax
  428389:	(bad)  [ecx]
  42838b:	out    dx,eax
  42838c:	shl    al,0x5
  42838f:	call   0xea478a51
  428394:	dec    edi
  428395:	or     DWORD PTR [ecx+0x7e],edx
  428398:	push   0x15
  42839a:	jne    0x4283e4
  42839c:	pop    ebp
  42839d:	sub    BYTE PTR [ebp+ebp*1+0x40],bl
  4283a1:	sub    ebx,DWORD PTR [edi+0x5a]
	...
  4283cc:	or     DWORD PTR ds:0x23f62d50,esi
  4283d2:	je     0x4283d4
  4283d4:	pop    ss
  4283d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283d6:	dec    edx
  4283d7:	popa   
  4283d8:	or     al,0xe8
  4283da:	bound  esp,QWORD PTR [ebp+0x30]
  4283dd:	add    eax,0xd9316f48
  4283e2:	call   DWORD PTR [ecx+eax*2-0x4]
  4283e6:	jno    0x4283e8
  4283e8:	and    ch,al
  4283ea:	outs   dx,BYTE PTR ds:[esi]
  4283eb:	jae    0x42844f
  4283ed:	aaa    
  4283ee:	imul   esi,DWORD PTR [edx+0x36],0x5
  4283f2:	push   edx
  4283f3:	gs pop edi
  4283f5:	add    BYTE PTR [ebp+eiz*2+0x12],dh
  4283f9:	(bad)  [edx+esi*2+0x22]
  4283fd:	inc    ebx
  4283fe:	aas    
  4283ff:	jns    0x428441
  428401:	cli    
  428402:	jno    0x428468
  428404:	pop    es
  428405:	out    0x66,al
  428407:	add    BYTE PTR [ecx+ebp*8+0x70],cl
  42840b:	arpl   WORD PTR [ecx],cx
  42840d:	pop    es
  42840e:	jno    0x428483
  428410:	pop    es
  428411:	aad    0x2d
  428413:	arpl   WORD PTR ds:0x5696601,bx
  428419:	pop    es
  42841a:	cmp    al,0x73
  42841c:	pop    es
  42841d:	jmp    0x428492
  42841f:	imul   ebp,DWORD PTR [ecx+ebp*8-0xc2c91e1],0x7103d60
  42842a:	and    al,BYTE PTR [eax]
  42842c:	mov    ah,0xe7
  42842e:	imul   esi,DWORD PTR [ebp+0x0],0x0
	...
  428456:	add    BYTE PTR [eax],al
  428458:	(bad)  
  428459:	mov    ds:0x1e1001f,eax
  42845e:	data16 je 0x428496
  428461:	out    0x71,eax
  428463:	fidiv  WORD PTR gs:0x2d6d65
  42846a:	push   esp
  42846b:	popa   
  42846c:	push   es
  42846d:	std    
  42846e:	pop    esp
  42846f:	ins    DWORD PTR es:[edi],dx
  428470:	pop    esi
  428471:	xor    eax,0xdc4b5471
  428476:	dec    edx
  428477:	pop    esp
  428478:	clc    
  428479:	inc    esp
  42847a:	xor    DWORD PTR [ecx-0xe],esi
  42847d:	xor    dl,BYTE PTR [esi]
  42847f:	jno    0x4284cc
  428481:	fcom   DWORD PTR [ecx+esi*2]
  428484:	jmp    ecx
  428486:	and    ch,BYTE PTR [ebx-0x1a]
  428489:	scas   eax,DWORD PTR es:[edi]
  42848a:	push   eax
  42848b:	jno    0x42847b
  42848d:	std    
  42848e:	xor    eax,0x404ee5f
  428493:	push   eax
  428494:	jmp    0x1ffd:0xdc7530fe
  42849b:	add    BYTE PTR [ebx-0x728bce0d],bl
  4284a1:	xchg   ebp,eax
  4284a2:	sbb    BYTE PTR [edx-0x52],ah
  4284a5:	sahf   
  4284a6:	add    DWORD PTR [esi+eiz*4-0x62],edx
  4284aa:	sbb    BYTE PTR [edi-0x4b],ah
  4284ad:	rcl    DWORD PTR ds:0x20c0a254,1
  4284b3:	add    BYTE PTR [ebp+0x774631c0],al
  4284b9:	pusha  
  4284ba:	shl    DWORD PTR [edi+0x0],cl
	...
  4284e1:	add    BYTE PTR [eax],al
  4284e3:	add    BYTE PTR [esi-0x4c],dh
  4284e6:	add    DWORD PTR [ebp+ecx*4-0x35],ebx
  4284ea:	sub    eax,0x1dd17b63
  4284ef:	sub    DWORD PTR [eax],esp
  4284f1:	mov    al,0x52
  4284f3:	ins    DWORD PTR es:[edi],dx
  4284f4:	ins    DWORD PTR es:[edi],dx
  4284f5:	jl     0x428525
  4284f7:	pop    edi
  4284f8:	pop    ecx
  4284f9:	test   DWORD PTR [ebp+0x41],eax
  4284fc:	mov    bl,BYTE PTR fs:[ebx]
  4284ff:	arpl   WORD PTR [esi+0x6f],sp
  428502:	xor    BYTE PTR [eax+0x6b],dh
  428505:	jg     0x42851d
  428507:	data16 aaa 
  428509:	adc    esp,DWORD PTR [edx+esi*2]
  42850c:	cs mov al,0x3b
  42850f:	push   esp
  428510:	sbb    edx,eax
  428512:	sbb    eax,0x5b091863
  428517:	sbb    eax,0x1d53282d
  42851c:	sub    eax,DWORD PTR es:[edi]
  42851f:	xor    ebp,DWORD PTR [eax]
  428521:	pop    ss
  428522:	push   ebp
  428523:	and    ecx,edi
  428525:	or     BYTE PTR ds:0x42e91b50,ch
  42852b:	and    edx,edi
  42852d:	adc    al,0x40
  42852f:	push   ss
  428530:	or     al,0x15
  428532:	inc    eax
  428533:	pop    ss
  428534:	cmc    
  428535:	call   0x172ab855
  42853a:	out    0x3d,eax
  42853c:	(bad)  
  42853d:	cmp    bh,al
  42853f:	pop    ds
  428540:	call   0xb55f985a
  428545:	sub    bh,bl
  428547:	sbb    al,0x0
	...
  42856d:	add    BYTE PTR [eax],al
  42856f:	add    BYTE PTR [esi-0x6bcc38d9],ch
  428575:	sbb    al,0xfa
  428577:	cs sahf 
  428579:	sbb    eax,DWORD PTR [ebx]
  42857b:	add    al,0x8d
  42857d:	cmp    eax,0x2ea8e3b7
  428582:	fisubr DWORD PTR [edi]
  428584:	lods   al,BYTE PTR ds:[esi]
  428585:	daa    
  428586:	enter  0xa42f,0x28
  42858a:	mov    ebp,0xb92874e3
  42858f:	das    
  428590:	dec    ebx
  428591:	dec    edi
  428592:	xchg   ebx,eax
  428593:	push   ebx
  428594:	sub    ebp,DWORD PTR ds:0x227732cc
  42859a:	mov    ebp,0x96225f24
  42859f:	adc    eax,0x2f882c2b
  4285a4:	je     0x4285cb
  4285a6:	xchg   BYTE PTR [esi],bl
  4285a8:	dec    ebx
  4285a9:	dec    edi
  4285aa:	mov    bl,0x53
  4285ac:	imul   ebx,DWORD PTR [ecx],0x79
  4285af:	push   ss
  4285b0:	and    eax,0x3a208b22
  4285b5:	or     DWORD PTR [eax],eax
  4285b7:	scas   eax,DWORD PTR es:[edi]
  4285b8:	cld    
  4285b9:	cmp    BYTE PTR [ecx-0x7f],dl
  4285bc:	imul   esp,DWORD PTR ds:0x1d3ee96c,0x70
  4285c3:	pop    edx
  4285c4:	aaa    
  4285c5:	sub    al,0x6c
  4285c7:	inc    ebp
  4285c8:	jne    0x4285f8
  4285ca:	jno    0x42860c
  4285cc:	dec    edi
  4285cd:	cmp    ch,BYTE PTR [ebp+0x4f]
  4285d0:	cmp    ebx,DWORD PTR [esi]
  4285d2:	pop    edi
  4285d3:	cmp    eax,DWORD PTR [eax]
	...
  4285f9:	add    BYTE PTR [eax],al
  4285fb:	add    BYTE PTR [ebp+esi*1+0x4b],dl
  4285ff:	sub    BYTE PTR [edx],bl
  428601:	in     al,0x50
  428603:	ds inc ebp
  428605:	sbb    eax,0x38fb2f5c
  42860a:	inc    edi
  42860b:	sysexit 
  42860d:	es pop esp
  42860f:	cmp    ch,BYTE PTR [ebx*1+0x4d4f1973]
  428616:	pop    edi
  428617:	std    
  428618:	imul   ecx,DWORD PTR [ebp+0x67],0x463548fb
  42861f:	sbb    eax,0x76e5097
  428624:	or     DWORD PTR ds:[ecx-0x34],edx
  428628:	pop    edx
  428629:	pop    ds
  42862a:	arpl   bx,bx
  42862c:	pop    esp
  42862d:	xor    BYTE PTR [ecx-0x23],dh
  428630:	neg    BYTE PTR [edi]
  428632:	imul   edi,DWORD PTR [ebp-0x3e9cb8b8],0x2d
  428639:	sbb    al,BYTE PTR [esi-0x30]
  42863c:	pop    esp
  42863d:	sub    al,0x0
  42863f:	iret   
  428640:	sbb    al,0x19
  428642:	jno    0x428604
  428644:	xor    al,0x2c
  428646:	cs nop
  428648:	xor    BYTE PTR ss:[eax],al
  42864b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42864c:	sub    DWORD PTR [edx],ebx
  42864e:	je     0x42860a
  428650:	sbb    al,0x26
  428652:	outs   dx,BYTE PTR ds:[esi]
  428653:	test   BYTE PTR [eax-0x2aff8db7],ch
  428659:	in     al,0x6e
  42865b:	xor    BYTE PTR gs:[esi+eax*2],cl
  42865f:	push   esp
	...
  428688:	rcr    bh,cl
  42868a:	fs jae 0x4286ab
  42868d:	mov    esi,0x4fb26261
  428692:	dec    ecx
  428693:	popa   
  428694:	repnz lock pusha 
  428697:	push   ebx
  428698:	out    dx,al
  428699:	out    0x63,eax
  42869b:	imul   eax,DWORD PTR [ebp+0x41],0xfe40683f
  4286a2:	push   0x70f15265
  4286a7:	jae    0x42870b
  4286a9:	mov    al,0x3d
  4286ab:	inc    eax
  4286ac:	jb     0x428676
  4286ae:	inc    esp
  4286af:	inc    eax
  4286b0:	jb     0x4286a8
  4286b2:	inc    ebp
  4286b3:	inc    eax
  4286b4:	bound  ecx,QWORD PTR [edx+ecx*2+0x40]
  4286b8:	(bad)  
  4286b9:	les    ecx,FWORD PTR [ecx+0x40]
  4286bc:	xor    cl,BYTE PTR [eax+edx*2]
  4286bf:	inc    eax
  4286c0:	xor    cl,dh
  4286c2:	push   esp
  4286c3:	inc    eax
  4286c4:	and    al,bh
  4286c6:	push   ecx
  4286c7:	inc    eax
  4286c8:	and    cl,ch
  4286ca:	push   esi
  4286cb:	inc    eax
  4286cc:	xor    dl,BYTE PTR [eax+0x58]
  4286cf:	inc    eax
  4286d0:	xor    al,BYTE PTR [ebx]
  4286d2:	push   ebp
  4286d3:	inc    eax
  4286d4:	and    cl,BYTE PTR [esi+0x57]
  4286d7:	inc    eax
  4286d8:	and    ch,BYTE PTR [ebx+0x59]
  4286db:	inc    eax
  4286dc:	repnz fcomp DWORD PTR [edi+0x40]
  4286e0:	repnz mov bl,0x60
  4286e3:	inc    eax
  4286e4:	loop   0x42870c
  4286e6:	pop    edi
  4286e7:	inc    eax
  4286e8:	loop   0x428767
  4286ea:	pop    edi
  4286eb:	inc    eax
	...
  428714:	repnz repz arpl WORD PTR [eax-0xe],ax
  428719:	jg     0x42877f
  42871b:	inc    eax
  42871c:	loop   0x428778
  42871e:	inc    ax
  428720:	dec    ebx
  428721:	mov    al,ds:0xa00b64e2
  428726:	nop
  428727:	push   0xb
  428729:	mov    al,ds:0xa00b6b18
  42872e:	mov    ebp,DWORD PTR [ebp+0xb]
  428731:	mov    al,ds:0xa00b708f
  428736:	xor    eax,0x4ea00b6f
  42873b:	jb     0x428748
  42873d:	mov    al,ds:0xa00b741a
  428742:	stc    
  428743:	ja     0x428750
  428745:	mov    al,ds:0xa00b7824
  42874a:	int3   
  42874b:	js     0x428758
  42874d:	mov    al,ds:0xa00b78fd
  428752:	sub    BYTE PTR [ecx+0xb],bh
  428755:	mov    al,ds:0xa00b864e
  42875a:	cmp    al,BYTE PTR [edi-0x76155ff5]
  428760:	or     esp,DWORD PTR [eax-0x5f746945]
  428766:	and    al,0x95
  428768:	mov    esp,DWORD PTR [eax-0x5f746806]
  42876e:	jg     0x428708
  428770:	mov    esp,DWORD PTR [eax-0x5f746918]
  428776:	ins    DWORD PTR es:[edi],dx
  428777:	xchg   edi,eax
	...
  4287a0:	mov    esp,DWORD PTR [eax-0x5f746627]
  4287a6:	mov    ebx,0x39a08b9a
  4287ab:	cdq    
  4287ac:	mov    esp,DWORD PTR [eax-0x5f7466ad]
  4287b2:	mov    al,0x99
  4287b4:	mov    esp,DWORD PTR [eax-0x5f745c28]
  4287ba:	int    0xa7
  4287bc:	mov    esp,DWORD PTR [eax+0x98ba7a0]
  4287c2:	out    0x8b,eax
  4287c4:	xchg   edx,eax
  4287c5:	dec    eax
  4287c6:	out    0x5c,eax
  4287c8:	xchg   edx,eax
  4287c9:	dec    eax
  4287ca:	out    0xad,eax
  4287cc:	add    cl,BYTE PTR [ecx-0x19]
  4287cf:	sbb    bh,bh
  4287d1:	dec    eax
  4287d2:	out    0x69,eax
  4287d4:	test   DWORD PTR [eax-0x19],0xe748efba
  4287db:	or     esp,eax
  4287dd:	dec    eax
  4287de:	out    0x2c,eax
  4287e0:	loopne 0x42882a
  4287e2:	out    0x49,eax
  4287e4:	aad    0x48
  4287e6:	out    0xb3,eax
  4287e8:	int    0x48
  4287ea:	out    0x6d,eax
  4287ec:	mov    ecx,DWORD PTR [eax-0x19]
  4287ef:	out    0xbd,al
  4287f1:	dec    eax
  4287f2:	out    0x28,eax
  4287f4:	mov    ah,0x48
  4287f6:	out    0xc0,eax
  4287f8:	lods   al,BYTE PTR ds:[esi]
  4287f9:	dec    eax
  4287fa:	out    0x47,eax
  4287fc:	mov    cl,BYTE PTR [eax-0x19]
  4287ff:	mov    cl,BYTE PTR gs:[eax-0x19]
  428803:	test   BYTE PTR [eax],0x0
	...
  42882a:	add    BYTE PTR [eax],al
  42882c:	mov    BYTE PTR [eax-0x19],cl
  42882f:	icebp  
  428830:	mov    DWORD PTR [eax-0x19],ecx
  428833:	imul   ecx,DWORD PTR [eax],0x4a
  428836:	out    0x38,eax
  428838:	add    al,0x4a
  42883a:	out    0x6d,eax
  42883c:	or     al,0x4a
  42883e:	out    0xf7,eax
  428840:	add    DWORD PTR [edx-0x19],ecx
  428843:	sbb    edx,DWORD PTR [eax]
  428845:	dec    edx
  428846:	out    0x33,eax
  428848:	or     al,0x4a
  42884a:	out    0x3e,eax
  42884c:	cli    
  42884d:	dec    ecx
  42884e:	out    0x7b,eax
  428850:	clc    
  428851:	dec    ecx
  428852:	out    0xa4,eax
  428854:	sbb    BYTE PTR [edx-0x19],cl
  428857:	cmp    BYTE PTR [ebx],ah
  428859:	dec    edx
  42885a:	out    0x81,eax
  42885c:	adc    ecx,DWORD PTR [edx-0x19]
  42885f:	call   DWORD PTR ds:0xd5e9004a
  428865:	mov    esp,0xaf4fe940
  42886a:	inc    eax
  42886b:	jmp    0xe9833831
  428870:	dec    eax
  428871:	or     DWORD PTR [eax],eax
  428873:	jmp    0xe94291c0
  428878:	dec    eax
  428879:	or     DWORD PTR [eax],eax
  42887b:	jmp    0xe94291c8
  428880:	dec    eax
  428881:	or     DWORD PTR [eax],eax
  428883:	jmp    0x84a9ad95
  428888:	pop    edx
  428889:	sbb    eax,0x1a683120
  42888e:	push   0xe9
	...
  4288b7:	add    BYTE PTR [edi+0x3d],dl
  4288ba:	aas    
  4288bb:	cmp    eax,0x202b3a3c
  4288c0:	or     al,0x39
  4288c2:	dec    ebp
  4288c3:	sbb    esi,DWORD PTR [ebx]
  4288c5:	loopne 0x428913
  4288c7:	xor    al,BYTE PTR [edi-0x18]
  4288ca:	arpl   WORD PTR [edi],ax
  4288cc:	sub    al,0x11
  4288ce:	arpl   cx,bp
  4288d0:	gs in  al,0x31
  4288d3:	inc    ecx
  4288d4:	dec    edi
  4288d5:	sbb    eax,0x9241472
  4288da:	ins    DWORD PTR es:[edi],dx
  4288db:	add    BYTE PTR [ebx-0x1d],dh
  4288de:	popa   
  4288df:	or     BYTE PTR [ebx+0x9],ah
  4288e2:	pop    es
  4288e3:	lock inc ebp
  4288e5:	dec    DWORD PTR [edx]
  4288e7:	repz inc ecx
  4288e9:	jmp    0x247e8f27
  4288ee:	and    ah,bl
  4288f0:	dec    esi
  4288f1:	jmp    0xe9a75559
  4288f6:	push   es
  4288f7:	add    al,0xf8
  4288f9:	repz pop ds
  4288fb:	in     al,0x56
  4288fd:	or     al,0x67
  4288ff:	(bad)  
  428900:	call   0x742a90f
  428905:	lock fs jae 0x4288bf
  428909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42890a:	push   es
  42890b:	and    BYTE PTR [edx-0x54],dl
  42890e:	cs and bl,ch
  428911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428912:	sbb    eax,0x6afbbd67
  428917:	and    bl,bl
  428919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42891a:	ins    BYTE PTR es:[edi],dx
  42891b:	jne    0x42891d
	...
  428941:	add    BYTE PTR [eax],al
  428943:	add    bl,ah
  428945:	dec    BYTE PTR [eax]
  428947:	or     dl,BYTE PTR [edx-0x7d939f15]
  42894d:	(bad)  
  42894e:	pop    ds
  42894f:	and    eax,0x1ffda7f2
  428954:	xchg   edx,eax
  428955:	lods   eax,DWORD PTR ds:[esi]
  428956:	and    dh,BYTE PTR [ebx-0x70]
  428959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42895a:	sbb    eax,0xfdad4220
  42895f:	push   edx
  428960:	cli    
  428961:	jmp    0x4289ce
  428963:	ins    BYTE PTR es:[edi],dx
  428964:	aaa    
  428965:	cmc    
  428966:	pusha  
  428967:	arpl   WORD PTR [edi],dx
  428969:	icebp  
  42896a:	pusha  
  42896b:	inc    ecx
  42896c:	(bad)  
  42896d:	cld    
  42896e:	addr16 gs (bad) 
  428971:	fsubr  DWORD PTR [esi]
  428973:	xor    cl,BYTE PTR [ecx+eiz*8+0x6b]
  428977:	ins    BYTE PTR es:[edi],dx
  428978:	jb     0x428964
  42897a:	ja     0x4289ec
  42897c:	fidiv  DWORD PTR ds:[ecx+0x65]
  428980:	xor    BYTE PTR [edi+0xd577862],dl
  428986:	dec    edi
  428987:	sub    eax,0x2d32a423
  42898c:	repz scas al,BYTE PTR es:[edi]
  42898e:	std    
  42898f:	jmp    DWORD PTR [edx]
  428991:	pop    es
  428992:	add    BYTE PTR [ebx+0x57],dl
  428995:	imul   esi,DWORD PTR ds:[eax+0x47],0xfc6f6efb
  42899d:	out    0x73,eax
  42899f:	gs sar ah,cl
  4289a2:	fs jbe 0x4289f0
  4289a5:	leave  
  4289a6:	sub    eax,0x63
	...
  4289cf:	add    BYTE PTR [ebp+ecx*8+0x1],ah
  4289d3:	push   ecx
  4289d4:	outs   dx,BYTE PTR ds:[esi]
  4289d5:	je     0x4289fb
  4289d7:	bound  ebx,QWORD PTR [ebx+0x72762a4e]
  4289dd:	int3   
  4289de:	es data16 mov al,gs:0x78886334
  4289e6:	and    ch,BYTE PTR [esi+0x64]
  4289e9:	lea    ecx,[edi+0x6d]
  4289ec:	aas    
  4289ed:	mov    DWORD PTR [edi],esp
  4289ef:	ja     0x428a0c
  4289f1:	outs   dx,BYTE PTR ds:[esi]
  4289f2:	sub    dh,BYTE PTR [esi+0x22]
  4289f5:	jl     0x428a1d
  4289f7:	gs mov al,es:0xe086334
  4289fe:	es pop edi
  428a00:	pop    ss
  428a01:	lea    esi,ds:0x2e45206d
  428a07:	push   eax
  428a08:	sbb    DWORD PTR [ecx],edi
  428a0a:	push   ss
  428a0b:	test   DWORD PTR [si+0x25],0x26cf4b63
  428a13:	inc    edx
  428a14:	jmp    0x11ef:0xfb73293e
  428a1b:	fisttp QWORD PTR [bx+si+0x30]
  428a1f:	arpl   sp,sp
  428a21:	dec    esp
  428a22:	add    al,0x51
  428a24:	out    dx,al
  428a25:	int    0x26
  428a27:	jno    0x428a00
  428a29:	add    dl,BYTE PTR [edx]
  428a2b:	arpl   WORD PTR [ebx-0x4d89d512],bx
  428a31:	xchg   esp,eax
  428a32:	sub    BYTE PTR [ebp+0x0],ah
	...
  428a59:	add    BYTE PTR [eax],al
  428a5b:	add    BYTE PTR [esi-0x7d9ccd60],ch
  428a61:	add    ah,BYTE PTR [ecx]
  428a63:	jb     0x428a13
  428a65:	add    DWORD PTR [ecx],edx
  428a67:	arpl   WORD PTR [edx-0x63],di
  428a6a:	cs je  0x428a17
  428a6d:	or     DWORD PTR [edi-0x2fe45bef],esi
  428a73:	das    
  428a74:	push   0x9a03cc2a
  428a79:	sub    al,0xa8
  428a7b:	adc    bh,BYTE PTR [edx+0x20]
  428a7e:	into   
  428a7f:	sub    eax,0x30d0179b
  428a84:	test   BYTE PTR [edi],dl
  428a86:	mov    al,0x37
  428a88:	outs   dx,BYTE PTR ds:[esi]
  428a89:	push   ds
  428a8a:	les    ebp,FWORD PTR ds:0x1590177b
  428a90:	fs and eax,0x9282684
  428a96:	out    0x3,eax
  428a98:	dec    ebx
  428a99:	or     edi,esp
  428a9b:	add    ecx,DWORD PTR [ebx+0x9]
  428a9e:	out    0x3,eax
  428aa0:	dec    ebx
  428aa1:	or     edi,esp
  428aa3:	add    ecx,DWORD PTR [ebx+0x9]
  428aa6:	out    0x3,eax
  428aa8:	dec    ebx
  428aa9:	or     edi,esp
  428aab:	add    ecx,DWORD PTR [ebx+0x9]
  428aae:	out    0x3,eax
  428ab0:	dec    ebx
  428ab1:	or     edi,esp
  428ab3:	add    ecx,DWORD PTR [ebx+0x9]
  428ab6:	out    0x3,eax
  428ab8:	dec    ebx
  428ab9:	or     edi,esp
  428abb:	add    ecx,DWORD PTR [ebx+0x9]
  428abe:	out    0x3,eax
	...
  428ae8:	dec    ebx
  428ae9:	or     edi,esp
  428aeb:	add    ecx,DWORD PTR [ebx+0x9]
  428aee:	out    0x3,eax
  428af0:	dec    ebx
  428af1:	or     edi,esp
  428af3:	add    ecx,DWORD PTR [ebx+0x9]
  428af6:	out    0x3,eax
  428af8:	dec    ebx
  428af9:	or     edi,esp
  428afb:	add    ecx,DWORD PTR [ebx+0x9]
  428afe:	out    0x3,eax
  428b00:	dec    ebx
  428b01:	or     edi,esp
  428b03:	add    ecx,DWORD PTR [ebx+0x9]
  428b06:	out    0x3,eax
  428b08:	dec    ebx
  428b09:	or     edi,esp
  428b0b:	add    ecx,DWORD PTR [ebx+0x9]
  428b0e:	add    cl,ch
  428b10:	dec    eax
  428b11:	or     DWORD PTR [eax],eax
  428b13:	jmp    0xe9429460
  428b18:	dec    eax
  428b19:	or     DWORD PTR [eax],eax
  428b1b:	jmp    0xe9429468
  428b20:	dec    eax
  428b21:	or     DWORD PTR [eax],eax
  428b23:	jmp    0xe9429470
  428b28:	dec    eax
  428b29:	or     DWORD PTR [eax],eax
  428b2b:	jmp    0xe9429478
  428b30:	dec    eax
  428b31:	or     DWORD PTR [eax],eax
  428b33:	jmp    0xe9429480
  428b38:	dec    eax
  428b39:	or     DWORD PTR [eax],eax
  428b3b:	jmp    0xe9429488
  428b40:	dec    eax
  428b41:	or     DWORD PTR [eax],eax
  428b43:	jmp    0xe9429490
  428b48:	dec    eax
  428b49:	or     DWORD PTR [eax],eax
  428b4b:	jmp    0x428b50
	...
  428b74:	dec    eax
  428b75:	or     DWORD PTR [eax],eax
  428b77:	jmp    0xe94294c4
  428b7c:	dec    eax
  428b7d:	or     DWORD PTR [eax],eax
  428b7f:	jmp    0xe94294cc
  428b84:	dec    eax
  428b85:	or     DWORD PTR [eax],eax
  428b87:	jmp    0xe94294d4
  428b8c:	dec    eax
  428b8d:	or     DWORD PTR [eax],eax
  428b8f:	jmp    0xe94294dc
  428b94:	dec    eax
  428b95:	or     DWORD PTR [eax],eax
  428b97:	jmp    0xe94294e4
  428b9c:	dec    eax
  428b9d:	or     DWORD PTR [eax],eax
  428b9f:	jmp    0xe94294ec
  428ba4:	dec    eax
  428ba5:	or     DWORD PTR [eax],eax
  428ba7:	jmp    0xe94294f4
  428bac:	dec    eax
  428bad:	or     DWORD PTR [eax],eax
  428baf:	add    BYTE PTR [edx],ah
  428bb1:	or     al,0x0
  428bb3:	add    BYTE PTR [edx],dh
  428bb5:	or     al,0x0
  428bb7:	add    BYTE PTR [edx],dh
  428bb9:	or     al,0x0
  428bbb:	add    BYTE PTR [edx],ah
  428bbd:	or     al,0x0
  428bbf:	add    BYTE PTR [edx],ah
  428bc1:	or     al,0x0
  428bc3:	add    dl,dh
  428bc5:	or     eax,DWORD PTR [eax]
  428bc7:	add    dl,dh
  428bc9:	or     eax,DWORD PTR [eax]
  428bcb:	add    dl,ah
  428bcd:	or     eax,DWORD PTR [eax]
  428bcf:	add    dl,ah
  428bd1:	or     eax,DWORD PTR [eax]
  428bd3:	add    dl,dh
  428bd5:	or     eax,DWORD PTR [eax]
	...
  428bff:	add    dl,dh
  428c01:	or     eax,DWORD PTR [eax]
  428c03:	add    dl,ah
  428c05:	or     eax,DWORD PTR [eax]
  428c07:	add    dl,ah
  428c09:	or     eax,DWORD PTR [eax]
  428c0b:	add    BYTE PTR [edx-0x4dfffff5],dh
  428c11:	or     eax,DWORD PTR [eax]
  428c13:	add    BYTE PTR [edx-0x5dfffff5],ah
  428c19:	or     eax,DWORD PTR [eax]
  428c1b:	add    BYTE PTR [edx-0x4dfffff5],dh
  428c21:	or     eax,DWORD PTR [eax]
  428c23:	add    BYTE PTR [edx-0x5dfffff5],ah
  428c29:	or     eax,DWORD PTR [eax]
  428c2b:	add    BYTE PTR [edx+0xb],dh
  428c2e:	add    BYTE PTR [eax],al
  428c30:	jb     0x428c3d
  428c32:	add    BYTE PTR [eax],al
  428c34:	bound  ecx,QWORD PTR [ebx]
  428c36:	add    BYTE PTR [eax],al
  428c38:	bound  ecx,QWORD PTR [ebx]
  428c3a:	add    BYTE PTR [eax],al
  428c3c:	jb     0x428c49
  428c3e:	add    BYTE PTR [eax],al
  428c40:	jb     0x428c4d
  428c42:	add    BYTE PTR [eax],al
  428c44:	bound  ecx,QWORD PTR [ebx]
  428c46:	add    BYTE PTR [eax],al
  428c48:	bound  ecx,QWORD PTR [ebx]
  428c4a:	add    BYTE PTR [eax],al
  428c4c:	xor    cl,BYTE PTR [ebx]
  428c4e:	add    BYTE PTR [eax],al
  428c50:	dec    ebx
  428c51:	mov    al,ds:0xa04b0001
  428c56:	add    DWORD PTR [eax],eax
  428c58:	dec    ebx
  428c59:	mov    al,ds:0xa04b0001
  428c5e:	add    DWORD PTR [eax],eax
  428c60:	dec    ebx
  428c61:	mov    al,ds:0x1
	...
  428c8a:	add    BYTE PTR [eax],al
  428c8c:	dec    ebx
  428c8d:	mov    al,ds:0xa04b0001
  428c92:	add    DWORD PTR [eax],eax
  428c94:	dec    ebx
  428c95:	mov    al,ds:0xa04b0001
  428c9a:	add    DWORD PTR [eax],eax
  428c9c:	dec    ebx
  428c9d:	mov    al,ds:0xa04b0001
  428ca2:	add    DWORD PTR [eax],eax
  428ca4:	dec    ebx
  428ca5:	mov    al,ds:0xa04b0001
  428caa:	add    DWORD PTR [eax],eax
  428cac:	dec    ebx
  428cad:	mov    al,ds:0xa04b0001
  428cb2:	add    DWORD PTR [eax],eax
  428cb4:	dec    ebx
  428cb5:	mov    al,ds:0xa04b0001
  428cba:	add    DWORD PTR [eax],eax
  428cbc:	dec    ebx
  428cbd:	mov    eax,ds:0x192442e0
  428cc2:	push   0xbe8eb4cb
  428cc7:	mov    edx,0x32350ec3
  428ccc:	cmp    ebp,DWORD PTR [ecx]
  428cce:	push   0xe6a19ccb
  428cd3:	inc    edx
  428cd4:	in     al,dx
  428cd5:	pop    ds
  428cd6:	add    al,0x40
  428cd8:	dec    ebx
  428cd9:	add    BYTE PTR [eax+edx*1],al
  428cdc:	dec    ebx
  428cdd:	test   al,0x1
  428cdf:	add    al,0x4b
  428ce1:	mov    ds:0xa064ff01,al
  428ce6:	add    DWORD PTR [eax+0x4001a04b],eax
  428cec:	dec    ebx
  428ced:	mov    al,ds:0x2001
	...
  428d16:	add    BYTE PTR [eax],al
  428d18:	dec    ebx
  428d19:	or     edi,esp
  428d1b:	add    ebx,DWORD PTR [ebx+0x9]
  428d1e:	out    0x3,eax
  428d20:	push   ebx
  428d21:	or     edi,esp
  428d23:	add    ecx,DWORD PTR [edi+0x9]
  428d26:	out    0x3,eax
  428d28:	dec    ecx
  428d29:	or     edi,esp
  428d2b:	add    esp,DWORD PTR [esi+ecx*4]
  428d2e:	out    0x83,eax
  428d30:	dec    ebx
  428d31:	or     edi,esp
  428d33:	inc    ebx
  428d34:	dec    ebx
  428d35:	or     edi,esp
  428d37:	jecxz  0x428d45
  428d39:	mov    fs,edi
  428d3b:	repz add al,0x8e
  428d3e:	out    0xb,eax
  428d40:	dec    ebx
  428d41:	or     edi,esp
  428d43:	push   esp
  428d45:	(bad)  
  428d46:	out    0x5,eax
  428d48:	dec    ebx
  428d49:	or     edi,esp
  428d4b:	add    al,0x4b
  428d4d:	or     DWORD PTR [edi+0x4],esp
  428d50:	dec    ebx
  428d51:	or     DWORD PTR [edi+0x7094b03],esp
  428d57:	add    al,0x4b
  428d59:	or     edi,esi
  428d5b:	add    ecx,DWORD PTR [ebx+0x9]
  428d5e:	out    dx,eax
  428d5f:	add    ecx,DWORD PTR [ebx+0x9]
  428d62:	jmp    0x428d67
  428d64:	dec    ebx
  428d65:	or     ecx,ebp
  428d67:	add    ecx,DWORD PTR [ebx+0x9]
  428d6a:	call   0xbf4bd872
  428d6f:	shl    DWORD PTR [ecx+ebp*8-0x32],cl
  428d73:	repz dec esp
  428d75:	or     DWORD PTR [eax-0x179a2c],esi
  428d7b:	hlt    
	...
  428da4:	dec    ebp
  428da5:	or     BYTE PTR [ecx],ah
  428da7:	(bad)  
  428da8:	xor    ch,bl
  428daa:	lock cmc 
  428dac:	inc    edx
  428dad:	or     edx,DWORD PTR [edx]
  428daf:	xlat   BYTE PTR ds:[ebx]
  428db0:	and    ebp,edx
  428db2:	add    al,0xd2
  428db4:	ss out 0xdc,eax
  428db7:	icebp  
  428db8:	dec    esi
  428db9:	pop    es
  428dba:	add    ah,dh
  428dbc:	jnp    0x428da0
  428dbe:	and    cl,ah
  428dc0:	pop    ebx
  428dc1:	add    al,BYTE PTR [ebx]
  428dc3:	in     eax,0x14
  428dc5:	loope  0x428dea
  428dc7:	std    
  428dc8:	sub    al,0x1
  428dca:	add    al,0xf2
  428dcc:	cmp    eax,0x46e80102
  428dd1:	add    eax,0xfd56f106
  428dd6:	or     eax,0x12fa17ee
  428ddb:	ficom  WORD PTR [edi]
  428ddd:	repnz sbb ebx,esp
  428de0:	sbb    BYTE PTR [ebx],al
  428de2:	adc    eax,0x190b04e9
  428de7:	out    dx,eax
  428de8:	dec    ebx
  428de9:	cmc    
  428dea:	push   es
  428deb:	(bad)  
  428dec:	inc    BYTE PTR [ecx]
  428dee:	add    eax,esi
  428df0:	dec    ecx
  428df1:	inc    BYTE PTR ds:0xff00dde3
  428df7:	adc    ah,dh
  428df9:	out    dx,al
  428dfa:	and    eax,DWORD PTR [edi]
  428dfc:	stc    
  428dfd:	out    dx,eax
  428dfe:	and    al,0xfb
  428e00:	in     al,0xec
  428e02:	sub    al,0xd2
  428e04:	cwde   
  428e05:	out    0x34,al
  428e07:	enter  0x0,0x0
	...
  428e2f:	add    BYTE PTR [edi+ebx*8-0xf5227da],cl
  428e36:	sbb    al,0xe9
  428e38:	lods   al,BYTE PTR ds:[esi]
  428e39:	mov    eax,DWORD PTR [eax]
  428e3b:	jmp    0xe9429788
  428e40:	dec    eax
  428e41:	mov    ebp,?
  428e43:	in     eax,dx
  428e44:	xchg   esp,eax
  428e45:	mov    eax,DWORD PTR [eax]
  428e47:	in     eax,0x48
  428e49:	mov    WORD PTR [eax],es
  428e4b:	in     eax,dx
  428e4c:	test   BYTE PTR [ebx+0x948e5fd],cl
  428e52:	add    cl,ch
  428e54:	dec    eax
  428e55:	mov    ebp,?
  428e57:	jmp    0x1401ac8
  428e5c:	jb     0x428dea
  428e5e:	inc    BYTE PTR [eax]
  428e60:	mov    si,?
  428e63:	add    BYTE PTR [edx-0x74],ah
  428e66:	std    
  428e67:	jmp    DWORD PTR [esi-0x74]
  428e6a:	std    
  428e6b:	add    BYTE PTR [esi],dh
  428e6d:	or     ch,bh
  428e6f:	add    BYTE PTR [edx],dh
  428e71:	or     BYTE PTR [eax],al
  428e73:	add    DWORD PTR [esi],esp
  428e75:	or     BYTE PTR [eax],al
  428e77:	add    BYTE PTR [esi],ah
  428e79:	mov    ebp,?
  428e7b:	push   DWORD PTR [edx]
  428e7d:	mov    ebp,?
  428e7f:	add    BYTE PTR [edx],dh
  428e81:	mov    ebp,?
  428e83:	add    BYTE PTR [edx],ah
  428e85:	mov    esi,?
  428e87:	jmp    DWORD PTR [edx]
  428e89:	mov    esi,?
  428e8b:	push   edx
  428e8d:	pop    es
  428e8e:	std    
  428e8f:	add    dl,dh
  428e91:	pop    es
  428e92:	std    
	...
  428ebb:	add    dh,ah
  428ebd:	mov    edi,ebp
  428ebf:	add    dh,ah
  428ec1:	pop    es
  428ec2:	std    
  428ec3:	push   esi
  428ec5:	pop    es
  428ec6:	add    BYTE PTR [ecx],al
  428ec8:	out    0x7,al
  428eca:	add    BYTE PTR [ecx],al
  428ecc:	out    0x7,al
  428ece:	std    
  428ecf:	jmp    edx
  428ed1:	pop    es
  428ed2:	add    BYTE PTR [eax],al
  428ed4:	mov    dh,0x8b
  428ed6:	std    
  428ed7:	jmp    DWORD PTR [esi-0x5d000175]
  428edd:	pop    es
  428ede:	add    BYTE PTR [ecx],al
  428ee0:	mov    ds:0xb6fffd07,al
  428ee5:	mov    edi,esi
  428ee7:	add    BYTE PTR [esi-0x5dfffff9],ah
  428eed:	pop    es
  428eee:	std    
  428eef:	add    BYTE PTR [edx+0x7200fe8b],ah
  428ef5:	pop    es
  428ef6:	add    BYTE PTR [ecx],al
  428ef8:	jb     0x428f01
  428efa:	add    BYTE PTR [ecx],al
  428efc:	dec    ebx
  428efd:	mov    ds:0xa56cfffd,al
  428f02:	add    edi,edi
  428f04:	dec    ebx
  428f05:	mov    ds:0xa15cff01,al
  428f0a:	std    
  428f0b:	(bad)  
  428f0c:	push   esp
  428f0d:	popf   
  428f0e:	add    DWORD PTR [eax],eax
  428f10:	dec    edx
  428f11:	mov    ds:0x9d44fffd,al
  428f16:	add    DWORD PTR [eax],eax
  428f18:	dec    ebx
  428f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f1a:	std    
  428f1b:	dec    DWORD PTR [ebx-0x64]
  428f1e:	std    
  428f1f:	inc    BYTE PTR [eax]
	...
  428f45:	add    BYTE PTR [eax],al
  428f47:	add    BYTE PTR [eiz*4-0x63b40103],ch
  428f4e:	add    edi,edi
  428f50:	sbb    al,0xa1
  428f52:	add    edi,edi
  428f54:	dec    ebx
  428f55:	pushf  
  428f56:	std    
  428f57:	dec    DWORD PTR [ebx-0x5c]
  428f5a:	add    DWORD PTR [eax],eax
  428f5c:	dec    edx
  428f5d:	pushf  
  428f5e:	std    
  428f5f:	(bad)  
  428f60:	cld    
  428f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f62:	std    
  428f63:	(bad)  
  428f64:	hlt    
  428f65:	mov    al,ds:0xa44bfefd
  428f6a:	std    
  428f6b:	jmp    esp
  428f6d:	mov    al,ds:0xa04bfffd
  428f72:	std    
  428f73:	dec    DWORD PTR [ebx-0x60]
  428f76:	add    DWORD PTR [eax],eax
  428f78:	dec    ebx
  428f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f7a:	add    edi,edi
  428f7c:	les    esp,FWORD PTR [eax-0x5f430103]
  428f82:	add    DWORD PTR [eax],eax
  428f84:	dec    ebx
  428f85:	pushf  
  428f86:	add    edi,edi
  428f88:	dec    ebx
  428f89:	rol    BYTE PTR [ecx-0x7e5f34f0],0x0
  428f90:	retf   
  428f91:	mov    al,ds:0xc04b0081
  428f96:	adc    DWORD PTR [eax],0x1001a04b
  428f9c:	dec    ebx
  428f9d:	or     DWORD PTR [edi],eax
  428f9f:	add    al,0x4b
  428fa1:	or     DWORD PTR [edi],eax
  428fa3:	add    al,0x5b
  428fa5:	mov    DWORD PTR [edi],eax
  428fa7:	test   BYTE PTR [ebx-0x77],cl
  428faa:	pop    es
  428fab:	add    al,0x0
	...
  428fd1:	add    BYTE PTR [eax],al
  428fd3:	add    BYTE PTR [ebx-0x77],cl
  428fd6:	pop    es
  428fd7:	test   BYTE PTR [ebx],bh
  428fd9:	mov    edi,esp
  428fdb:	cmp    DWORD PTR [ebx],0xffffff89
  428fde:	out    0x3,eax
  428fe0:	dec    ebx
  428fe1:	mov    edi,esp
  428fe3:	or     DWORD PTR [ebx-0x77],0xffffffe7
  428fe7:	add    ebx,DWORD PTR [ebx+0x9]
  428fea:	mov    DWORD PTR [ebx],0x3c7094b
  428ff0:	pop    ebx
  428ff1:	mov    edi,esp
  428ff3:	cmp    DWORD PTR [ebx],0x9
  428ff6:	mov    DWORD PTR [ebx],0x83c7093b
  428ffc:	dec    ebx
  428ffd:	mov    edi,esp
  428fff:	add    ecx,DWORD PTR [ebx+0x9]
  429002:	out    0x3,eax
  429004:	dec    ebx
  429005:	mov    edi,esp
  429007:	or     DWORD PTR [ebx+0x9],0x7
  42900b:	test   BYTE PTR [ebx+0x9],bl
  42900e:	out    0x3,eax
  429010:	pop    ebx
  429011:	mov    DWORD PTR [edi],eax
  429013:	add    al,0x3b
  429015:	or     DWORD PTR [edi],eax
  429017:	add    al,0x4b
  429019:	mov    edi,esp
  42901b:	add    ecx,DWORD PTR [ebx+0x9]
  42901e:	out    0x83,eax
  429020:	cmp    ecx,DWORD PTR [ecx]
  429022:	pop    es
  429023:	test   BYTE PTR [ebx+0x9],cl
  429026:	out    0x83,eax
  429028:	pop    ebx
  429029:	mov    edi,esp
  42902b:	add    ebx,DWORD PTR [ebx-0x77]
  42902e:	mov    DWORD PTR [ebx+0x3e7094b],0x83c7094b
	...
  429060:	cmp    ecx,DWORD PTR [ecx]
  429062:	mov    DWORD PTR [ebx],0xe900893b
  429068:	dec    eax
  429069:	stc    
  42906a:	dec    eax
  42906c:	enter  0x8008,0xe9
  429070:	dec    eax
  429071:	stc    
  429072:	jg     0x42905d
  429074:	enter  0x7ff8,0xe9
  429078:	enter  0x8,0xe9
  42907c:	dec    eax
  42907d:	stc    
  42907e:	jg     0x429069
  429080:	enter  0x8008,0x9
  429084:	dec    edi
  429085:	or     DWORD PTR [eax],eax
  429087:	or     edi,eax
  429089:	clc    
  42908a:	jg     0x429095
  42908c:	iret   
  42908d:	sbb    DWORD PTR [eax],eax
  42908f:	leave  
  429090:	dec    eax
  429091:	or     DWORD PTR [eax],eax
  429093:	jmp    0xe9429a60
  429098:	dec    eax
  429099:	or     DWORD PTR [eax+0x9c8c9],eax
  42909f:	jmp    0xe9c2aa6c
  4290a4:	dec    eax
  4290a5:	sbb    DWORD PTR [eax],eax
  4290a7:	leave  
  4290a8:	dec    eax
  4290a9:	or     DWORD PTR [eax+0x1948c9],eax
  4290af:	or     edi,eax
  4290b1:	or     DWORD PTR [eax-0x7ff6b0f7],eax
  4290b7:	or     DWORD PTR [edi+0x19],eax
  4290ba:	add    cl,ch
  4290bc:	enter  0x19,0xe9
  4290c0:	dec    eax
  4290c1:	or     DWORD PTR [eax],eax
  4290c3:	jmp    0x4290c8
	...
  4290ec:	enter  0x8009,0x9
  4290f0:	(bad)  
  4290f1:	or     DWORD PTR [eax],eax
  4290f3:	jmp    0xc9c29a40
  4290f8:	dec    eax
  4290f9:	sbb    DWORD PTR [eax-0x7fe63737],eax
  4290ff:	jmp    0xe142aacc
  429104:	dec    edx
  429105:	or     DWORD PTR [eax],eax
  429107:	add    BYTE PTR [edx-0x5df7fdf6],dh
  42910d:	or     al,0x0
  42910f:	add    BYTE PTR [edx+0x7208020c],ch
  429115:	or     al,BYTE PTR [eax]
  429117:	or     BYTE PTR [edx+0xc],dh
  42911a:	add    BYTE PTR [eax],al
  42911c:	jp     0x429128
  42911e:	add    al,BYTE PTR [eax]
  429120:	bound  ecx,QWORD PTR [edx]
  429122:	add    BYTE PTR [eax],cl
  429124:	push   0xc
  429126:	add    al,BYTE PTR [eax]
  429128:	pop    edx
  429129:	or     al,0x0
  42912b:	or     BYTE PTR [edx+0xc],bl
  42912e:	add    BYTE PTR [eax],cl
  429130:	bound  ecx,QWORD PTR [edx+eax*1]
  429133:	add    BYTE PTR [edx],ch
  429135:	or     al,BYTE PTR [edx]
  429137:	or     BYTE PTR [edx],bh
  429139:	or     al,0x2
  42913b:	add    BYTE PTR [edx],ah
  42913d:	or     al,0x2
  42913f:	or     BYTE PTR [edx],ch
  429141:	or     al,BYTE PTR [eax]
  429143:	add    BYTE PTR [edx],dh
  429145:	or     al,0x0
  429147:	or     BYTE PTR [edx],bl
  429149:	or     al,0x0
  42914b:	add    BYTE PTR [edx],ah
  42914d:	or     al,BYTE PTR [edx]
  42914f:	or     BYTE PTR [eax],al
	...
  429175:	add    BYTE PTR [eax],al
  429177:	add    BYTE PTR [edx],ah
  429179:	or     al,BYTE PTR [eax]
  42917b:	add    dl,dh
  42917d:	or     DWORD PTR [edx],eax
  42917f:	add    dl,dh
  429181:	or     eax,DWORD PTR [edx]
  429183:	or     dl,bh
  429185:	or     eax,DWORD PTR [edx]
  429187:	or     dl,ch
  429189:	or     DWORD PTR [edx],eax
  42918b:	add    dl,ch
  42918d:	or     DWORD PTR [eax],eax
  42918f:	or     dl,dh
  429191:	or     DWORD PTR [edx],eax
  429193:	add    dl,ah
  429195:	or     eax,DWORD PTR [edx]
  429197:	add    dl,ch
  429199:	or     DWORD PTR [eax],eax
  42919b:	or     BYTE PTR [edx-0x45fffff5],ch
  4291a1:	or     DWORD PTR [edx],eax
  4291a3:	or     BYTE PTR [edx+0x4b000009],ah
  4291a9:	jb     0x4291ac
  4291ab:	add    BYTE PTR [ebx+0x72],dl
  4291ae:	inc    DWORD PTR [ecx]
  4291b0:	push   ebx
  4291b1:	jb     0x4291b4
  4291b3:	add    BYTE PTR [ebx+0x7a],al
  4291b6:	add    DWORD PTR [edx],eax
  4291b8:	dec    ebx
  4291b9:	push   0xffffffff
  4291bb:	dec    DWORD PTR [ebx+0x72]
  4291be:	add    DWORD PTR [edx],eax
  4291c0:	dec    ebx
  4291c1:	jb     0x4291c2
  4291c3:	add    DWORD PTR [ebx+0x72],eax
  4291c6:	(bad)  
  4291c7:	inc    DWORD PTR [ebx+0x72]
  4291ca:	add    DWORD PTR [eax],eax
  4291cc:	dec    ebx
  4291cd:	jb     0x4291ce
  4291cf:	dec    DWORD PTR [ebx+0x7a]
  4291d2:	add    DWORD PTR [edx],eax
  4291d4:	dec    ebx
  4291d5:	jp     0x4291d6
  4291d7:	add    DWORD PTR [ebx+0x72],eax
  4291da:	(bad)  
  4291db:	inc    DWORD PTR [eax]
	...
  429201:	add    BYTE PTR [eax],al
  429203:	add    BYTE PTR [ebx+0x68],dl
  429206:	add    DWORD PTR [eax],eax
  429208:	push   ebx
  429209:	jo     0x42920a
  42920b:	dec    DWORD PTR [ebx+0x70]
  42920e:	add    DWORD PTR [eax],eax
  429210:	dec    ebx
  429211:	push   0x68530201
  429216:	(bad)  
  429217:	call   DWORD PTR [ebx+0x70]
  42921a:	add    DWORD PTR [edx],eax
  42921c:	dec    ebx
  42921d:	jo     0x429220
  42921f:	add    BYTE PTR [ebx+0x68],al
  429222:	inc    DWORD PTR [ecx]
  429224:	push   ebx
  429225:	push   0x784b0001
  42922a:	inc    DWORD PTR [ecx]
  42922c:	dec    ebx
  42922d:	jo     0x42922e
  42922f:	add    DWORD PTR [ebx+0x68],ecx
  429232:	add    DWORD PTR [eax],eax
  429234:	push   ebx
  429235:	jo     0x429238
  429237:	add    dl,BYTE PTR [ebx+0x78]
  42923a:	(bad)  
  42923b:	inc    DWORD PTR [ebx+0x78]
  42923e:	(bad)  
  42923f:	dec    DWORD PTR [ebx+0x70]
  429242:	add    DWORD PTR [edx],eax
  429244:	push   ebx
  429245:	push   0x94b01ff
  42924a:	out    dx,eax
  42924b:	add    ecx,DWORD PTR [ebx+0x9]
  42924e:	out    dx,eax
  42924f:	add    ecx,DWORD PTR [ecx+0x11]
  429252:	out    0x1,eax
  429254:	dec    ecx
  429255:	or     eax,ebp
  429257:	jecxz  0x429275
  429259:	or     DWORD PTR [eax-0x1d],ebp
  42925c:	xchg   esp,eax
  42925d:	xchg   BYTE PTR [eax-0x1d],ch
  429260:	mov    WORD PTR [esi+0x94b0367],es
  429266:	jcxz   0x429269
	...
  42928d:	add    BYTE PTR [eax],al
  42928f:	add    ah,bh
  429291:	or     BYTE PTR [eax+0x4],ch
  429294:	retf   
  429295:	or     eax,ebp
  429297:	add    ecx,ebx
  429299:	or     eax,ebp
  42929b:	jecxz  0x429301
  42929d:	xchg   bh,ah
  42929f:	add    ecx,DWORD PTR [ebx+0x9]
  4292a2:	out    0xe3,eax
  4292a4:	aam    0x8
  4292a6:	out    0xe3,eax
  4292a8:	int3   
  4292a9:	or     BYTE PTR [eax-0x1c],ch
  4292ac:	les    ecx,FWORD PTR [ecx]
  4292ae:	push   0xe7094b04
  4292b3:	add    ecx,DWORD PTR [ebx+0x9]
  4292b6:	addr16 add al,0xcb
  4292b9:	or     al,ch
  4292bb:	add    ecx,ebx
  4292bd:	or     al,ch
  4292bf:	add    ecx,DWORD PTR [ebx+0x9]
  4292c2:	out    0xe3,eax
  4292c4:	adc    al,0x86
  4292c6:	out    0x3,eax
  4292c8:	retf   
  4292c9:	or     al,ch
  4292cb:	jecxz  0x429251
  4292cd:	or     DWORD PTR [edi+0x4],esp
  4292d0:	dec    ebx
  4292d1:	or     edi,esp
  4292d3:	add    ecx,ebx
  4292d5:	or     al,ch
  4292d7:	jecxz  0x4292c5
  4292d9:	test   DWORD PTR [edi-0x1c],esp
  4292dc:	in     al,0x85
  4292de:	push   0xe808cb04
  4292e3:	add    ecx,DWORD PTR [ebx+0x9]
  4292e6:	addr16 in al,0xcc
  4292e9:	test   DWORD PTR [eax],eax
  4292eb:	imul   ecx,DWORD PTR [edi-0x77],0x85a8e900
  4292f2:	std    
  4292f3:	imul   eax,DWORD PTR [eax],0x0
	...
  429319:	add    BYTE PTR [eax],al
  42931b:	add    BYTE PTR [edi-0x5897fffb],ch
  429321:	add    eax,0x94f6800
  429326:	add    BYTE PTR [ecx+0x47],ch
  429329:	mov    DWORD PTR [eax],eax
  42932b:	call   0xe9431c78
  429330:	test   al,0x5
  429332:	add    BYTE PTR [eax+0x6f],ch
  429335:	add    eax,0x9476800
  42933a:	add    cl,ch
  42933c:	dec    eax
  42933d:	or     DWORD PTR [eax],eax
  42933f:	jmp    0xe9429c8c
  429344:	push   0x68690005
  429349:	test   ebp,edi
  42934b:	imul   ecx,DWORD PTR [eax-0x77],0x89486800
  429352:	add    al,ch
  429354:	dec    eax
  429355:	or     DWORD PTR [eax],eax
  429357:	call   0x68429884
  42935c:	sub    BYTE PTR [ebp-0x7ad79703],al
  429362:	std    
  429363:	imul   ecx,DWORD PTR [eax+0x9],0x5286800
  42936a:	add    BYTE PTR [eax+0x48],ch
  42936d:	or     DWORD PTR [eax],eax
  42936f:	call   0xe9429cbc
  429374:	call   0x492b90fd
  429379:	mov    DWORD PTR [eax],eax
  42937b:	call   0x6a401868
	...
  4293a8:	call   0x48aa93b1
  4293ad:	mov    DWORD PTR [eax],eax
  4293af:	call   0x140189c
  4293b4:	bound  ebp,QWORD PTR [eax-0x3]
  4293b7:	jmp    edx
  4293b9:	or     BYTE PTR [eax+0x7d68b300],al
  4293bf:	add    BYTE PTR [edx],dh
  4293c1:	or     BYTE PTR [eax],al
  4293c3:	add    BYTE PTR [edx-0x5dff7ff8],ah
  4293c9:	push   0x6832fffd
  4293ce:	jge    0x4293d0
  4293d0:	mov    dl,0xd
  4293d2:	add    BYTE PTR [eax],al
  4293d4:	mov    ds:0xa202080d,al
  4293d9:	or     BYTE PTR [eax],cl
  4293db:	add    dh,BYTE PTR [edx+0xd]
  4293de:	add    BYTE PTR [edx+0x72],al
  4293e1:	or     BYTE PTR [eax],cl
  4293e3:	add    BYTE PTR [edx+0x7],ah
  4293e6:	add    BYTE PTR [eax],al
  4293e8:	bound  ecx,QWORD PTR [eax]
  4293ea:	add    BYTE PTR [eax+0x72],al
  4293ed:	or     BYTE PTR [eax],cl
  4293ef:	add    dh,BYTE PTR [edx+0x7]
  4293f2:	or     BYTE PTR [eax+0x62],al
  4293f5:	or     BYTE PTR [eax],cl
  4293f7:	add    BYTE PTR [edx+0x7],ah
  4293fa:	add    BYTE PTR [edx],al
  4293fc:	xor    al,BYTE PTR [edi]
  4293fe:	or     BYTE PTR [eax+0x32],al
  429401:	pop    es
  429402:	add    BYTE PTR [edx+0x22],al
  429405:	or     BYTE PTR [eax],cl
  429407:	inc    edx
  429408:	and    al,BYTE PTR [edi]
  42940a:	or     BYTE PTR [eax],al
	...
  429434:	xor    cl,BYTE PTR [eax]
  429436:	add    BYTE PTR [eax+0x32],al
  429439:	or     BYTE PTR [eax],al
  42943b:	add    ah,BYTE PTR [edx]
  42943d:	or     BYTE PTR [eax],cl
  42943f:	inc    eax
  429440:	and    cl,BYTE PTR [eax]
  429442:	or     BYTE PTR [eax-0xe],al
  429445:	pop    es
  429446:	add    BYTE PTR [eax],al
  429448:	repnz push es
  42944a:	add    BYTE PTR [eax-0x1e],al
  42944d:	push   es
  42944e:	or     BYTE PTR [edx-0x1e],al
  429451:	push   es
  429452:	or     BYTE PTR [edx+0x4b],al
  429455:	jb     0x429459
  429457:	add    BYTE PTR [ecx+0x72],cl
  42945a:	add    DWORD PTR [eax],ecx
  42945c:	mov    DWORD PTR [edx+0x2],esi
  42945f:	add    BYTE PTR [ebx+0x4b000172],cl
  429465:	jb     0x429468
  429467:	add    BYTE PTR [ecx],cl
  429469:	jb     0x42946d
  42946b:	or     BYTE PTR [ecx+0x72],cl
  42946e:	add    DWORD PTR [eax],eax
  429470:	dec    ecx
  429471:	jb     0x429474
  429473:	add    BYTE PTR [ecx],cl
  429475:	jb     0x429479
  429477:	or     BYTE PTR [ebx+0x72],cl
  42947a:	add    DWORD PTR [eax],ecx
  42947c:	dec    ebx
  42947d:	jb     0x429481
  42947f:	add    BYTE PTR [ecx],cl
  429481:	jb     0x429485
  429483:	add    BYTE PTR [ebx+0x72],cl
  429486:	add    DWORD PTR [eax],eax
  429488:	dec    ecx
  429489:	jb     0x42948c
  42948b:	add    BYTE PTR [ebx],cl
  42948d:	jb     0x429490
  42948f:	or     BYTE PTR [ecx+0x72],cl
  429492:	add    al,BYTE PTR [eax]
  429494:	or     DWORD PTR [edx+0x2],esi
  429497:	or     BYTE PTR [eax],al
	...
  4294bd:	add    BYTE PTR [eax],al
  4294bf:	add    BYTE PTR [ebx],cl
  4294c1:	jb     0x4294c5
  4294c3:	add    BYTE PTR [ecx+0x72],cl
  4294c6:	add    DWORD PTR [eax],eax
  4294c8:	or     esi,DWORD PTR [edx+0x1]
  4294cb:	or     BYTE PTR [ecx+0x49080270],cl
  4294d1:	jo     0x4294d5
  4294d3:	or     BYTE PTR [ebx+0x4b000270],cl
  4294d9:	jo     0x4294dc
  4294db:	add    BYTE PTR [ecx+0x70],cl
  4294de:	add    DWORD PTR [eax],ecx
  4294e0:	mov    DWORD PTR [eax+0x2],esi
  4294e3:	or     BYTE PTR [ecx+0x4b080270],cl
  4294e9:	jo     0x4294ec
  4294eb:	add    BYTE PTR [ecx-0x76f7fd90],cl
  4294f1:	jo     0x4294f4
  4294f3:	or     BYTE PTR [ecx+0x9],cl
  4294f6:	out    0x3,eax
  4294f8:	dec    ebx
  4294f9:	or     edi,esp
  4294fb:	add    edx,DWORD PTR [ebx-0x37]
  4294fe:	out    0x3,al
  429500:	dec    ebx
  429501:	(bad)  
  429502:	out    0x2,al
  429504:	inc    ebx
  429505:	or     edi,esp
  429507:	add    cl,BYTE PTR [ebx+0x7]
  42950a:	out    0x2,eax
  42950c:	dec    ebx
  42950d:	leave  
  42950e:	out    0x3,al
  429510:	push   ebx
  429511:	or     edi,esp
  429513:	add    ecx,DWORD PTR [ebx+0x9]
  429516:	out    0x3,eax
  429518:	inc    ebx
  429519:	leave  
  42951a:	out    0x2,al
  42951c:	push   ebx
  42951d:	pop    es
  42951e:	out    0x2,eax
  429520:	dec    ebx
  429521:	leave  
  429522:	test   BYTE PTR [ebx],0x0
	...
  429549:	add    BYTE PTR [eax],al
  42954b:	add    BYTE PTR [ebx+0x29],cl
  42954e:	out    0x3,eax
  429550:	or     ebp,DWORD PTR [ecx]
  429552:	out    0x43,eax
  429554:	dec    ebx
  429555:	or     edi,edx
  429557:	inc    ebx
  429558:	or     ebp,DWORD PTR [ecx]
  42955a:	out    0x3,eax
  42955c:	or     ebp,DWORD PTR [ecx]
  42955e:	test   DWORD PTR [ebx],0x43f7094b
  429564:	or     ebp,DWORD PTR [ecx]
  429566:	out    0x3,eax
  429568:	or     ecx,DWORD PTR [ecx]
  42956a:	out    0x43,eax
  42956c:	dec    ebx
  42956d:	sub    edi,edx
  42956f:	inc    ebx
  429570:	or     ecx,DWORD PTR [ecx]
  429572:	out    0x3,eax
  429574:	mov    ecx,DWORD PTR [ecx]
  429576:	xlat   BYTE PTR ds:[ebx]
  429577:	add    ecx,DWORD PTR [ebx+0x29]
  42957a:	xlat   BYTE PTR ds:[ebx]
  42957b:	add    ecx,DWORD PTR [ebx+0x4b43e709]
  429581:	sub    edi,esp
  429583:	add    ecx,DWORD PTR [ebx+0x29]
  429586:	test   DWORD PTR [ebx+0x4b],0x4b03e709
  42958d:	or     edi,edx
  42958f:	add    ecx,DWORD PTR [ebx+0x4b43d709]
  429595:	sub    DWORD PTR [eax],eax
  429597:	jmp    0xe9429f24
  42959c:	mov    cl,cl
  42959e:	(bad)  
  42959f:	clc    
  4295a0:	mov    BYTE PTR [ecx],cl
  4295a2:	and    cl,bh
  4295a4:	dec    eax
  4295a5:	or     DWORD PTR [eax],eax
  4295a7:	stc    
  4295a8:	dec    eax
  4295a9:	leave  
  4295aa:	pop    ds
  4295ab:	stc    
  4295ac:	dec    eax
  4295ad:	leave  
  4295ae:	pop    ds
  4295af:	jmp    0x4295b4
	...
  4295d8:	dec    eax
  4295d9:	or     DWORD PTR [eax],eax
  4295db:	(bad)  [eax]
  4295dd:	leave  
  4295de:	(bad)  
  4295df:	call   0xd9625eec
  4295e4:	or     BYTE PTR [ecx],cl
  4295e6:	add    cl,ch
  4295e8:	or     cl,cl
  4295ea:	(bad)  
  4295eb:	call   0xe9625ef8
  4295f0:	dec    eax
  4295f1:	or     DWORD PTR [eax],esp
  4295f3:	jmp    0xd9629f00
  4295f8:	dec    eax
  4295f9:	or     DWORD PTR [eax],eax
  4295fb:	(bad)  [eax-0x37]
  4295fe:	pop    ds
  4295ff:	jmp    0xd9425f0c
  429604:	or     cl,cl
  429606:	pop    ds
  429607:	jmp    0xf9425f54
  42960c:	or     BYTE PTR [ecx],cl
  42960e:	add    cl,bh
  429610:	dec    eax
  429611:	or     DWORD PTR [eax],esp
  429613:	jmp    0xe9425f60
  429618:	or     BYTE PTR [ecx],cl
  42961a:	and    cl,ch
  42961c:	dec    eax
  42961d:	or     DWORD PTR [eax],esp
  42961f:	(bad)  [eax+0x48d90009]
  429625:	or     DWORD PTR [eax],esp
  429627:	stc    
  429628:	mov    cl,cl
  42962a:	pop    ds
  42962b:	jmp    0xe9425fb8
  429630:	dec    eax
  429631:	leave  
  429632:	pop    ds
  429633:	stc    
  429634:	mov    cl,cl
  429636:	(bad)  
  429637:	jmp    DWORD PTR [edx]
  429639:	int    0x3f
  42963b:	and    BYTE PTR [eax],al
	...
  429661:	add    BYTE PTR [eax],al
  429663:	add    dl,dh
  429665:	or     al,0x0
  429667:	add    BYTE PTR [edx],ah
  429669:	or     eax,0xd122040
  42966e:	add    BYTE PTR [eax],al
  429670:	loop   0x42963e
  429672:	(bad)  
  429673:	push   edx
  429675:	or     al,0x40
  429677:	and    dl,ah
  429679:	int3   
  42967a:	aas    
  42967b:	add    dl,ah
  42967d:	int3   
  42967e:	(bad)  
  42967f:	push   edx
  429681:	or     al,0x40
  429683:	add    BYTE PTR [edx-0x4de00034],ah
  429689:	or     al,0x0
  42968b:	add    BYTE PTR [edx-0x5ddfc034],ah
  429691:	or     al,0x0
  429693:	and    BYTE PTR [edx-0x5dffbff4],ah
  429699:	int3   
  42969a:	call   FWORD PTR [edi]
  42969c:	mov    ds:0xa000200c,al
  4296a1:	or     al,0x20
  4296a3:	add    al,0x70
  4296a5:	test   ch,bh
  4296a7:	add    esi,DWORD PTR [edx+0xc]
  4296aa:	add    BYTE PTR [eax],al
  4296ac:	bound  eax,QWORD PTR [ebp+edi*8-0x27b9f01]
  4296b3:	add    esi,DWORD PTR [eax-0x7c]
  4296b6:	sbb    eax,0x1d847200
  4296bb:	add    al,0x60
  4296bd:	test   BYTE PTR ds:0x200c6204,bl
  4296c3:	add    BYTE PTR [edx],dh
  4296c5:	or     al,0x0
	...
  4296ef:	add    BYTE PTR [eax],dh
  4296f1:	or     al,0x0
  4296f3:	add    al,0x20
  4296f5:	or     al,0x0
  4296f7:	add    BYTE PTR [edx],ah
  4296f9:	or     al,0x0
  4296fb:	add    al,0x30
  4296fd:	or     al,0x20
  4296ff:	add    al,0x4b
  429701:	je     0x4296fc
  429703:	call   DWORD PTR [edx+esi*2]
  429706:	stc    
  429707:	dec    DWORD PTR [eax+0x74]
  42970a:	stc    
  42970b:	pop    ds
  42970c:	dec    ebx
  42970d:	je     0x429710
  42970f:	and    BYTE PTR [ebx+0x72],cl
  429712:	stc    
  429713:	dec    DWORD PTR [eax+0x74]
  429716:	add    DWORD PTR [eax],eax
  429718:	inc    edi
  429719:	jb     0x42971c
  42971b:	and    BYTE PTR [edi+0x72],cl
  42971e:	stc    
  42971f:	pop    ds
  429720:	inc    edi
  429721:	je     0x429724
  429723:	and    BYTE PTR [ebx+0x72],cl
  429726:	add    DWORD PTR [eax],esp
  429728:	inc    edi
  429729:	jb     0x429724
  42972b:	inc    esp
  42972d:	jae    0x429728
  42972f:	(bad)  
  429730:	mov    esp,0x4f1ff973
  429735:	jb     0x429730
  429737:	pop    ds
  429738:	dec    ebx
  429739:	je     0x42973c
  42973b:	add    BYTE PTR [ebx+0x72],cl
  42973e:	add    DWORD PTR [eax],eax
  429740:	inc    edi
  429741:	jb     0x42973c
  429743:	pop    ds
  429744:	dec    ebx
  429745:	jb     0x429748
  429747:	add    BYTE PTR [edi+0x72],al
  42974a:	stc    
  42974b:	pop    ds
  42974c:	dec    ebx
  42974d:	jb     0x429750
  42974f:	and    BYTE PTR [ebx+0x74],cl
  429752:	stc    
  429753:	inc    DWORD PTR [eax]
	...
  429779:	add    BYTE PTR [eax],al
  42977b:	add    BYTE PTR [eax+0x74],cl
  42977e:	stc    
  42977f:	dec    DWORD PTR [eax+0x74]
  429782:	add    DWORD PTR [eax],esp
  429784:	dec    edi
  429785:	je     0x429788
  429787:	and    BYTE PTR [edi+0x74],al
  42978a:	add    DWORD PTR [eax],eax
  42978c:	dec    ebx
  42978d:	je     0x429790
  42978f:	and    BYTE PTR [ebx+0x72],cl
  429792:	add    DWORD PTR [eax],eax
  429794:	dec    edi
  429795:	jo     0x429790
  429797:	dec    DWORD PTR [eax+0x70]
  42979a:	add    DWORD PTR [eax],esp
  42979c:	dec    ebx
  42979d:	jo     0x429798
  42979f:	pop    ds
  4297a0:	inc    edi
  4297a1:	or     ecx,ebp
  4297a3:	sti    
  4297a4:	and    al,0x7f
  4297a6:	jmp    0xe74bd4a6
  4297ab:	sti    
  4297ac:	xor    al,0x5
  4297ae:	jmp    0xe9c1a4ae
  4297b3:	add    ecx,DWORD PTR [ebx+0x5]
  4297b6:	jmp    0xe747f4b6
  4297bb:	add    ebp,DWORD PTR [ebx]
  4297bd:	add    eax,0x94cfbe7
  4297c2:	out    0x3,eax
  4297c4:	dec    ebx
  4297c5:	or     ecx,ebp
  4297c7:	add    ecx,DWORD PTR [ebx+0x9]
  4297ca:	jmp    0xe747ccca
  4297cf:	add    ecx,DWORD PTR [ebx+0x9]
  4297d2:	jmp    0xe74bfcd2
  4297d7:	add    ebp,DWORD PTR [ebx+0x5]
  4297da:	out    0xfb,eax
  4297dc:	mov    ah,0x7e
  4297de:	jmp    0x4297e6
	...
  429807:	add    BYTE PTR [ebx+0x5],cl
  42980a:	out    0xfb,eax
  42980c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42980d:	or     ah,bh
  42980f:	sti    
  429810:	pushf  
  429811:	jle    0x4297fc
  429813:	add    ebp,DWORD PTR [ebx+0x9]
  429816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429817:	repz mov WORD PTR [esi],cs
  42981a:	out    0xf3,eax
  42981c:	test   BYTE PTR [esi-0x19],bh
  42981f:	add    eax,DWORD PTR [edi+0x9]
  429822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429823:	repz dec eax
  429825:	sbb    edi,esp
  429827:	add    ecx,DWORD PTR [ebx+0x19]
  42982a:	daa    
  42982b:	hlt    
  42982c:	fs push cs
  42982e:	daa    
  42982f:	add    al,0x4b
  429831:	or     edi,esp
  429833:	add    ecx,DWORD PTR [ebx+0x19]
  429836:	daa    
  429837:	add    al,0x47
  429839:	or     edi,esp
  42983b:	add    ecx,DWORD PTR [edi+0x19]
  42983e:	daa    
  42983f:	hlt    
  429840:	dec    eax
  429841:	sbb    DWORD PTR [eax],eax
  429843:	jmp    0xe942a280
  429848:	cmp    BYTE PTR [edx],cl
  42984a:	adc    BYTE PTR [ecx],ch
  42984c:	pop    ds
  42984d:	or     al,BYTE PTR [eax]
  42984f:	jmp    0x2a40166c
  429854:	dec    edi
  429855:	or     DWORD PTR [eax],eax
  429857:	jmp    0x29529da4
  42985c:	dec    edi
  42985d:	or     DWORD PTR [eax],edx
  42985f:	jmp    0x2950165c
  429864:	(bad)  
  429865:	jge    0x429864
  429867:	jmp    0xa942a264
	...
  429894:	dec    eax
  429895:	add    eax,0x548a900
  42989a:	adc    cl,ch
  42989c:	fmul   DWORD PTR [ecx]
  42989e:	adc    BYTE PTR [ecx-0x16028228],ch
  4298a4:	dec    eax
  4298a5:	or     DWORD PTR [eax],eax
  4298a7:	jmp    0xa942a1f4
  4298ac:	dec    eax
  4298ad:	add    eax,0x948a910
  4298b2:	adc    cl,ch
  4298b4:	cwde   
  4298b5:	jge    0x4298c4
  4298b7:	test   eax,0xe9000998
  4298bc:	dec    eax
  4298bd:	add    eax,0x998a900
  4298c2:	add    cl,ch
  4298c4:	dec    eax
  4298c5:	add    eax,0x978e900
  4298ca:	adc    cl,ch
  4298cc:	js     0x42994b
  4298ce:	std    
  4298cf:	test   eax,0x29000948
  4298d4:	dec    edi
  4298d5:	add    eax,0x7d58e910
  4298da:	std    
  4298db:	sub    DWORD PTR [edi+0x9],ebx
  4298de:	add    cl,ch
  4298e0:	pop    eax
  4298e1:	jge    0x4298f0
  4298e3:	add    BYTE PTR [edx+0x5],dh
  4298e6:	add    BYTE PTR [eax],al
  4298e8:	jb     0x4298ef
  4298ea:	add    BYTE PTR [eax],dl
  4298ec:	and    cl,BYTE PTR [ecx]
  4298ee:	add    al,0x10
  4298f0:	bound  eax,QWORD PTR ds:0x9321004
  4298f6:	add    BYTE PTR [eax],dl
	...
  429920:	xor    cl,BYTE PTR [ecx]
  429922:	add    al,0x0
  429924:	bound  esi,QWORD PTR [ebp-0x3]
  429927:	mov    cr1,ecx
  42992a:	add    BYTE PTR [eax],al
  42992c:	xor    dh,BYTE PTR [ebp+0x1]
  42992f:	adc    BYTE PTR [edx],dh
  429931:	add    eax,0x5220004
  429936:	add    BYTE PTR [eax],dl
  429938:	loop   0x429942
  42993a:	add    al,0x10
  42993c:	bnd js 0x42993c
  42993f:	lss    edi,FWORD PTR [eax-0x3]
  429943:	psrad  mm1,QWORD PTR [eax]
  429946:	add    BYTE PTR [eax],al
  429948:	mov    ds:0xb2100178,al
  42994d:	js     0x429950
  42994f:	add    BYTE PTR [edx-0x1dfffe88],dh
  429955:	js     0x429954
  429957:	jmp    edx
  429959:	js     0x429958
  42995b:	push   edx
  42995d:	or     BYTE PTR [eax+eax*1],al
  429960:	mov    dl,0x8
  429962:	add    BYTE PTR [eax],dl
  429964:	mov    ds:0x2e100178,al
  429969:	aaa    
  42996a:	std    
  42996b:	push   DWORD PTR [edx+0x8]
  42996e:	add    BYTE PTR [eax],al
  429970:	jb     0x42997a
  429972:	add    BYTE PTR [eax],al
  429974:	(bad)  
  429975:	xor    ebp,edi
  429977:	(bad)  
  429978:	fisubr DWORD PTR ds:0x2dd2fffd
  42997e:	std    
  42997f:	push   DWORD PTR [edx+0x8]
	...
  4299aa:	add    BYTE PTR [eax],al
  4299ac:	dec    ebx
  4299ad:	jb     0x4299b0
  4299af:	add    BYTE PTR [ebx+0x4c],cl
  4299b2:	sub    bh,bh
  4299b4:	inc    esp
  4299b5:	push   ss
  4299b6:	cs (bad) 
  4299b8:	cmp    al,0xfe
  4299ba:	sub    edi,edi
  4299bc:	xor    al,0x72
  4299be:	add    DWORD PTR [eax],eax
  4299c0:	dec    ebx
  4299c1:	jb     0x4299c4
  4299c3:	add    BYTE PTR [ebx+0x7e],cl
  4299c6:	sub    bh,bh
  4299c8:	sbb    al,0x3a
  4299ca:	call   DWORD PTR cs:[esi+ebp*4]
  4299ce:	sub    al,0xff
  4299d0:	or     al,0x72
  4299d2:	add    DWORD PTR [eax],eax
  4299d4:	dec    ebx
  4299d5:	jb     0x4299d8
  4299d7:	add    BYTE PTR [ebx-0x46],cl
  4299da:	daa    
  4299db:	push   esp
  4299dd:	and    DWORD PTR [esi],ebp
  4299df:	(bad)  
  4299e0:	in     al,dx
  4299e1:	add    DWORD PTR [edi+edi*8],ebp
  4299e4:	in     al,0x71
  4299e6:	add    DWORD PTR [eax],eax
  4299e8:	dec    ebx
  4299e9:	jb     0x4299ec
  4299eb:	add    BYTE PTR [ebx-0x34],cl
  4299ee:	es dec esp
  4299f1:	dec    ebp
  4299f2:	sub    edi,edi
  4299f4:	(bad)  
  4299f5:	leave  
  4299f6:	sub    edi,edi
  4299f8:	mov    esp,0x4b000171
  4299fd:	jb     0x429a00
  4299ff:	add    BYTE PTR [ebx+0x4e],cl
  429a02:	and    edi,edi
  429a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a05:	in     eax,dx
  429a06:	sub    eax,0x2a659cff
  429a0b:	call   DWORD PTR [ecx+esi*2+0x1]
	...
  429a36:	add    BYTE PTR [eax],al
  429a38:	dec    ebx
  429a39:	jb     0x429a3c
  429a3b:	add    BYTE PTR [ebx-0x6c],cl
  429a3e:	and    edi,edi
  429a40:	jl     0x429a23
  429a42:	sub    eax,0x2a5174ff
  429a47:	jmp    FWORD PTR [ecx+esi*2+0x1]
  429a4b:	add    BYTE PTR [ebx+0x9],cl
  429a4e:	out    0x3,eax
  429a50:	dec    ebx
  429a51:	or     ebp,ecx
  429a53:	and    edx,DWORD PTR [ebx+edi*2-0x7d]
  429a57:	sub    eax,0x2b1b7b4c
  429a5c:	inc    esp
  429a5d:	jnp    0x429a46
  429a5f:	add    ecx,DWORD PTR [ebx+0x9]
  429a62:	out    0x3,eax
  429a64:	dec    ebx
  429a65:	or     DWORD PTR [ecx],ecx
  429a67:	and    ebp,DWORD PTR [ebx+edi*2]
  429a6a:	(bad)  
  429a6b:	sub    eax,0x3e77b24
  429a70:	dec    ebx
  429a71:	or     edi,esp
  429a73:	add    ecx,DWORD PTR [ebx+0x9]
  429a76:	out    0x3,eax
  429a78:	dec    ebx
  429a79:	or     edi,esp
  429a7b:	add    ecx,DWORD PTR [ebx+0x9]
  429a7e:	out    0x3,eax
  429a80:	dec    ebx
  429a81:	or     DWORD PTR [ebx+0x797af42d],eax
  429a87:	sub    eax,0x2d6d7aec
  429a8c:	in     al,0x7a
  429a8e:	repz sub al,0xdc
  429a91:	jp     0x429a92
  429a93:	sub    al,0xd4
  429a95:	jp     0x429aa2
  429a97:	sub    eax,0x2d197acc
	...
  429ac4:	les    edi,FWORD PTR [edx-0x57]
  429ac7:	sub    al,0xbc
  429ac9:	jp     0x429a78
  429acb:	sub    al,0xb4
  429acd:	jp     0x429a62
  429acf:	sub    al,0xac
  429ad1:	jp     0x429a92
  429ad3:	sub    al,0xa4
  429ad5:	jp     0x429a72
  429ad7:	sub    al,0x9c
  429ad9:	jp     0x429b4c
  429adb:	sub    al,0x94
  429add:	jp     0x429b2c
  429adf:	sub    al,0x8c
  429ae1:	jp     0x429b36
  429ae3:	sub    al,0x84
  429ae5:	jp     0x429b18
  429ae7:	sub    al,0x7c
  429ae9:	jp     0x429b0c
  429aeb:	sub    al,0x74
  429aed:	jp     0x429aef
  429aef:	add    eax,0xedfd7a1f
  429af4:	xor    BYTE PTR [edx-0x3],bh
  429af7:	mul    DWORD PTR [edx+edi*2]
  429afa:	std    
  429afb:	jmp    FWORD PTR [edx+edi*2]
  429afe:	std    
  429aff:	sbb    esp,DWORD PTR [ebx]
  429b01:	jp     0x429b00
  429b03:	sub    DWORD PTR [ebx+0x7a],esi
  429b06:	std    
  429b07:	sbb    eax,0x53fd7a73
  429b0c:	arpl   WORD PTR [edx-0x3],di
  429b0f:	xor    eax,0x61fd7a63
  429b14:	jae    0x429b90
  429b16:	std    
  429b17:	xor    DWORD PTR [ebx+0x7a],0x7a6345fd
  429b1e:	std    
  429b1f:	push   ecx
  429b20:	arpl   WORD PTR [edx-0x3],di
  429b23:	mov    eax,ds:0xa3fd7a33
	...
  429b50:	xor    edi,DWORD PTR [edx-0x3]
  429b53:	xchg   ebx,eax
  429b54:	and    edi,DWORD PTR [edx-0x3]
  429b57:	jmp    0x429b7c
  429b59:	jp     0x429b58
  429b5b:	iret   
  429b5c:	xor    edi,DWORD PTR [edx-0x3]
  429b5f:	pop    ds
  429b60:	xor    bh,BYTE PTR [edx-0x3]
  429b63:	stos   DWORD PTR es:[edi],eax
  429b64:	and    edi,DWORD PTR [edx-0x3]
  429b67:	int    0x23
  429b69:	jp     0x429b68
  429b6b:	int    0x73
  429b6d:	jp     0x429b6c
  429b6f:	pop    ebp
  429b70:	jb     0x429bec
  429b72:	std    
  429b73:	mov    DWORD PTR [edx+0x7a],esp
  429b76:	std    
  429b77:	jg     0x429bdb
  429b79:	jp     0x429b78
  429b7b:	daa    
  429b7c:	jb     0x429bf8
  429b7e:	std    
  429b7f:	aaa    
  429b80:	jb     0x429bfc
  429b82:	std    
  429b83:	add    eax,0x1dfd7a62
  429b88:	bound  edi,QWORD PTR [edx-0x3]
  429b8b:	stc    
  429b8c:	cs jp  0x429b8c
  429b8f:	add    BYTE PTR [eax-0x4d0002dd],dl
  429b95:	and    edi,ebp
  429b97:	jmp    DWORD PTR [edx-0x3d0002dd]
  429b9d:	and    edi,ebp
  429b9f:	inc    DWORD PTR [ebx+eiz*1]
  429ba2:	std    
  429ba3:	jmp    DWORD PTR [edx+0x5]
  429ba6:	add    BYTE PTR [eax],al
  429ba8:	call   0xd14298d0
  429bad:	cs std 
  429baf:	dec    eax
  429bb1:	cs std 
  429bb3:	inc    DWORD PTR [eax]
	...
  429bd9:	add    BYTE PTR [eax],al
  429bdb:	add    al,bh
  429bdd:	cs std 
  429bdf:	(bad)  
  429be0:	fsubr  DWORD PTR [esi]
  429be2:	std    
  429be3:	jmp    esp
  429be5:	cs std 
  429be7:	push   DWORD PTR [edx]
  429be9:	or     eax,0x301a0000
  429bee:	std    
  429bef:	jmp    DWORD PTR [edx]
  429bf1:	or     eax,0x30120000
  429bf6:	std    
  429bf7:	inc    edx
  429bf9:	das    
  429bfa:	std    
  429bfb:	jmp    FWORD PTR [esi]
  429bfd:	xor    ch,bh
  429bff:	call   DWORD PTR [eax+0x30]
  429c02:	std    
  429c03:	call   DWORD PTR [edx+0x30]
  429c06:	std    
  429c07:	inc    DWORD PTR [edx]
  429c09:	xor    ch,bh
  429c0b:	jmp    DWORD PTR [edx+0x2f]
  429c0e:	std    
  429c0f:	call   DWORD PTR [eax+0x2f]
  429c12:	std    
  429c13:	call   eax
  429c15:	das    
  429c16:	std    
  429c17:	dec    edx
  429c19:	das    
  429c1a:	std    
  429c1b:	jmp    DWORD PTR [edx+0x4c00000c]
  429c21:	das    
  429c22:	std    
  429c23:	push   DWORD PTR [edx+0x4000000c]
  429c29:	das    
  429c2a:	std    
  429c2b:	jmp    FWORD PTR [esp+ebp*1+0x624bfffd]
  429c32:	add    DWORD PTR [eax],eax
  429c34:	dec    ebx
  429c35:	dec    edx
  429c36:	and    edi,edi
  429c38:	jl     0x429bf0
  429c3a:	and    edi,edi
  429c3c:	je     0x429be0
  429c3e:	and    edi,edi
	...
  429c68:	ins    BYTE PTR es:[edi],dx
  429c69:	scas   al,BYTE PTR es:[edi]
  429c6a:	and    edi,edi
  429c6c:	mov    al,fs:0xc45cff21
  429c72:	and    edi,edi
  429c74:	push   esp
  429c75:	bound  eax,QWORD PTR [ecx]
  429c77:	add    BYTE PTR [ebx-0x24],cl
  429c7a:	and    edi,edi
  429c7c:	inc    esp
  429c7d:	lock and edi,edi
  429c80:	cmp    al,0xd8
  429c82:	and    edi,edi
  429c84:	xor    al,0x82
  429c86:	and    al,0xff
  429c88:	sub    al,0x8c
  429c8a:	and    al,0xff
  429c8c:	and    al,0xfa
  429c8e:	and    edi,edi
  429c90:	sbb    al,0xa2
  429c92:	and    al,0xff
  429c94:	adc    al,0xbc
  429c96:	and    al,0xff
  429c98:	or     al,0xb4
  429c9a:	and    al,0xff
  429c9c:	add    al,0x82
  429c9e:	and    al,0xff
  429ca0:	cld    
  429ca1:	popa   
  429ca2:	add    DWORD PTR [eax],eax
  429ca4:	dec    ebx
  429ca5:	mov    WORD PTR [edi+edi*8],fs
  429ca8:	in     al,dx
  429ca9:	outs   dx,DWORD PTR ds:[esi]
  429caa:	and    bh,bh
  429cac:	in     al,0x61
  429cae:	add    DWORD PTR [eax],eax
  429cb0:	dec    ebx
  429cb1:	(bad)  
  429cb2:	sub    edi,edi
  429cb4:	aam    0xd3
  429cb6:	sub    edi,edi
  429cb8:	int3   
  429cb9:	fild   QWORD PTR [ecx]
  429cbb:	inc    esp
  429cbd:	push   ebp
  429cbe:	sub    bh,bh
  429cc0:	mov    esp,0xb4ff2869
  429cc5:	or     eax,0x73acff27
  429cca:	sub    bh,bh
	...
  429cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429cf5:	mov    ds:0x89cff28,eax
  429cfa:	mov    ch,0x28
  429cfc:	xchg   esp,eax
  429cfd:	ja     0x429cba
  429cff:	sub    BYTE PTR [edi+esi*2+0x7784287f],cl
  429d06:	xchg   ebx,eax
  429d07:	sub    BYTE PTR [edi+esi*2+0x71],bh
  429d0b:	sub    DWORD PTR [edi+esi*2+0x45],esi
  429d0f:	sub    DWORD PTR [edi+esi*2+0x3b],ebp
  429d13:	sub    DWORD PTR [edi+esi*2+0x21],esp
  429d17:	sub    DWORD PTR [edi+esi*2-0x3f],ebx
  429d1b:	sub    BYTE PTR [edi+esi*2-0x35],dl
  429d1f:	sub    BYTE PTR [edi+esi*2-0x2d],cl
  429d23:	sub    BYTE PTR [edi+esi*2-0x23],al
  429d27:	daa    
  429d28:	cmp    al,0x77
  429d2a:	in     eax,0x27
  429d2c:	xor    al,0x77
  429d2e:	stc    
  429d2f:	daa    
  429d30:	sub    al,0x77
  429d32:	daa    
  429d33:	sub    BYTE PTR [edi+esi*2],ah
  429d36:	adc    ebp,DWORD PTR [eax]
  429d38:	sbb    al,0x77
  429d3a:	adc    DWORD PTR [eax],ebp
  429d3c:	adc    al,0x77
  429d3e:	sbb    ebp,DWORD PTR [eax]
  429d40:	or     al,0x77
  429d42:	pop    edi
  429d43:	daa    
  429d44:	add    al,0x77
  429d46:	outs   dx,DWORD PTR ds:[esi]
  429d47:	daa    
  429d48:	cld    
  429d49:	jbe    0x429d96
  429d4b:	daa    
  429d4c:	hlt    
  429d4d:	jbe    0x429d8e
  429d4f:	daa    
  429d50:	in     al,dx
  429d51:	jbe    0x429cf2
  429d53:	daa    
  429d54:	in     al,0x76
  429d56:	xchg   ecx,eax
  429d57:	daa    
	...
  429d80:	fdiv   QWORD PTR [esi+0x51]
  429d83:	daa    
  429d84:	aam    0x76
  429d86:	jmp    0xf5b969b1
  429d8b:	les    esi,FWORD PTR es:[esi+0x15]
  429d8f:	daa    
  429d90:	mov    esp,0xb426a976
  429d95:	jbe    0x429d5a
  429d97:	lods   al,BYTE PTR es:[esi]
  429d99:	jbe    0x429d9b
  429d9b:	mov    ch,0x6d
  429d9d:	jbe    0x429d9c
  429d9f:	push   ebp
  429da0:	gs jbe 0x429da0
  429da3:	dec    ecx
  429da4:	ins    DWORD PTR es:[edi],dx
  429da5:	jbe    0x429da4
  429da7:	push   edi
  429da8:	gs jbe 0x429da8
  429dab:	das    
  429dac:	sub    eax,0x251ffd76
  429db1:	jbe    0x429db0
  429db3:	or     eax,0xf5fd762d
  429db8:	es jbe 0x429db8
  429dbb:	fldcw  WORD PTR [esi]
  429dbd:	jbe    0x429dbc
  429dbf:	retf   
  429dc0:	es jbe 0x429dc0
  429dc3:	sbb    DWORD PTR [ecx+0x77],ebp
  429dc6:	std    
  429dc7:	sub    DWORD PTR [ecx+0x77],ebp
  429dca:	std    
  429dcb:	cmp    DWORD PTR [ecx],ebp
  429dcd:	ja     0x429dcc
  429dcf:	das    
  429dd0:	sub    DWORD PTR [edi-0x3],esi
  429dd3:	jmp    0x7342a720
  429dd8:	sub    DWORD PTR [edi-0x3],esi
  429ddb:	mov    ebp,DWORD PTR [ecx]
  429ddd:	ja     0x429ddc
  429ddf:	jae    0x429e0a
  429de1:	ja     0x429de0
  429de3:	mov    bl,0x0
	...
  429e09:	add    BYTE PTR [eax],al
  429e0b:	add    BYTE PTR [ecx],ch
  429e0d:	ja     0x429e0c
  429e0f:	ret    
  429e10:	sub    DWORD PTR [edi-0x3],esi
  429e13:	xchg   ecx,ebp
  429e15:	jbe    0x429e14
  429e17:	jmp    0xf142a764
  429e1c:	jmp    0x492c9b97
  429e21:	or     DWORD PTR [eax],eax
  429e23:	leave  
  429e24:	jmp    0xe9fc9b9f
  429e29:	jbe    0x429e28
  429e2b:	lods   eax,DWORD PTR ds:[esi]
  429e2c:	jmp    0xe9fe9ba7
  429e31:	jbe    0x429e30
  429e33:	leave  
  429e34:	test   eax,0xa9d9fd76
  429e39:	jbe    0x429e38
  429e3b:	add    BYTE PTR [edx],ah
  429e3d:	push   0xfffffffe
  429e3f:	call   DWORD PTR [eax]
  429e41:	push   0xfffffffe
  429e43:	call   eax
  429e45:	imul   edi,esi,0xfe6a1aff
  429e4b:	jmp    DWORD PTR [edx+0x54000009]
  429e51:	push   0xfffffffe
  429e53:	push   DWORD PTR [edx+0x9]
  429e56:	add    BYTE PTR [eax],al
  429e58:	pusha  
  429e59:	push   0xfffffffe
  429e5b:	jmp    DWORD PTR [ecx+ebp*2-0x2]
  429e5f:	jmp    DWORD PTR [edx+0x9]
  429e62:	add    BYTE PTR [eax],al
  429e64:	mov    ch,BYTE PTR [ecx-0x2]
  429e67:	call   DWORD PTR [esi+0x22fffe69]
  429e6d:	ins    DWORD PTR es:[edi],dx
  429e6e:	(bad)  
  429e6f:	inc    DWORD PTR [eax]
	...
  429e95:	add    BYTE PTR [eax],al
  429e97:	add    BYTE PTR [esi],bl
  429e99:	ins    DWORD PTR es:[edi],dx
  429e9a:	(bad)  
  429e9b:	inc    DWORD PTR [ebp+ebp*2+0x6d90fffe]
  429ea2:	(bad)  
  429ea3:	jmp    DWORD PTR [edx]
  429ea5:	or     DWORD PTR [eax],eax
  429ea7:	add    BYTE PTR [eax-0x4b000193],cl
  429ead:	push   0x6874fffe
  429eb2:	(bad)  
  429eb3:	inc    DWORD PTR [edx+0x78fffe68]
  429eb9:	push   0x689afffe
  429ebe:	(bad)  
  429ebf:	push   DWORD PTR [edx-0x47000198]
  429ec5:	push   0x68d0fffe
  429eca:	(bad)  
  429ecb:	call   edx
  429ecd:	push   0x8f2fffe
  429ed2:	add    BYTE PTR [eax],al
  429ed4:	push   0xdcfffe68
  429ed9:	ins    DWORD PTR es:[edi],dx
  429eda:	(bad)  
  429edb:	dec    DWORD PTR [ebx+0x62]
  429ede:	add    DWORD PTR [eax],eax
  429ee0:	dec    ebx
  429ee1:	add    eax,0x45394104
  429ee6:	in     al,0x73
  429ee8:	lods   al,BYTE PTR es:[esi]
  429eea:	in     al,dx
  429eeb:	imul   ebp,DWORD PTR [esi],0xffffffa1
  429eee:	add    DWORD PTR [edi],edi
  429ef0:	dec    ecx
  429ef1:	nop
  429ef2:	call   0xece6ce55
  429ef7:	imul   esp,DWORD PTR [esi],0x62
  429efa:	add    DWORD PTR [ecx],esp
	...
  429f24:	dec    ebx
  429f25:	lahf   
  429f26:	in     eax,dx
  429f27:	ins    BYTE PTR es:[edi],dx
  429f28:	clc    
  429f29:	mov    ecx,cs
  429f2b:	pop    esi
  429f2c:	in     eax,0x85
  429f2e:	in     eax,dx
  429f2f:	bound  ecx,QWORD PTR [ebx+0x7]
  429f32:	add    edx,DWORD PTR [ebp-0x27]
  429f35:	mov    ch,dh
  429f37:	bound  eax,QWORD PTR ds:0x4b62ed89
  429f3d:	or     eax,0xddd86c03
  429f42:	cmc    
  429f43:	imul   ebp,DWORD PTR [esi+0x3cffc0cc],0xffffff92
  429f4a:	add    DWORD PTR [ebp-0x59],eax
  429f4d:	frstpm(287 only) 
  429f4f:	pop    esi
  429f50:	lahf   
  429f51:	es out dx,eax
  429f53:	pusha  
  429f54:	mov    al,0x62
  429f56:	add    DWORD PTR [ebp+0x6cf02b4a],esi
  429f5c:	test   eax,0x9d52f001
  429f61:	push   es
  429f62:	out    dx,eax
  429f63:	pusha  
  429f64:	jo     0x429fc8
  429f66:	add    esp,esi
  429f68:	dec    edx
  429f69:	push   ss
  429f6a:	out    dx,eax
  429f6b:	pusha  
  429f6c:	push   0x1e
  429f6e:	retf   0x6671
  429f71:	or     eax,0x2e4af004
  429f76:	out    dx,eax
  429f77:	pusha  
  429f78:	push   0x76
  429f7a:	ret    0x676b
  429f7d:	or     esi,edx
  429f7f:	in     al,0xcc
  429f81:	jae    0x429f83
  429f83:	add    eax,0xf5daf837
	...
  429fb0:	sub    edi,ecx
  429fb2:	iret   
  429fb3:	ret    0x73b4
  429fb6:	fiadd  DWORD PTR [edi+ebx*1]
  429fb9:	clc    
  429fba:	mov    dl,0xf5
  429fbc:	sub    ebp,edx
  429fbe:	mov    edx,0xd6739cc2
  429fc3:	add    cl,BYTE PTR [esi]
  429fc5:	out    dx,al
  429fc6:	call   0xf8c2:0x83e525c9
  429fcd:	cld    
  429fce:	cwde   
  429fcf:	jmp    0xc9fb:0xe692fdea
  429fd6:	out    0x3,al
  429fd8:	ror    BYTE PTR [eax],1
  429fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429fdb:	sti    
  429fdc:	hlt    
  429fdd:	jmp    0xe34c8766
  429fe2:	je     0x429fce
  429fe4:	(bad)  
  429fe6:	push   esp
  429fe7:	out    dx,eax
  429fe8:	jmp    0xb917f2cf
  429fed:	idiv   DWORD PTR [edi]
  429fef:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ff1:	mul    BYTE PTR [edi]
  429ff3:	add    al,0x57
  429ff5:	or     BYTE PTR [esi],ch
  429ff7:	out    0xb8,eax
  429ff9:	retf   
  429ffa:	dec    edi
  429ffb:	lock test eax,0xa9fe3fd6
  42a001:	or     ebp,ebp
  42a003:	add    ecx,DWORD PTR [edx-0x671cf409]
  42a009:	in     al,dx
  42a00a:	and    al,0xeb
  42a00c:	jo     0x429ffa
  42a00e:	and    esp,ebx
  42a010:	ins    BYTE PTR es:[edi],dx
  42a011:	stc    
  42a012:	push   ecx
	...
  42a03c:	outs   dx,DWORD PTR ds:[esi]
  42a03d:	enter  0x3e6,0x4b
  42a041:	pop    es
  42a042:	sub    al,0xe3
  42a044:	je     0x42a021
  42a046:	(bad)  
  42a047:	jmp    esp
  42a049:	std    
  42a04a:	dec    esp
  42a04b:	pop    es
  42a04c:	add    esp,ebp
  42a04e:	imul   ecx,esp,0x48
  42a051:	pop    eax
  42a052:	add    dh,BYTE PTR [edx+edi*4-0x5d26a121]
  42a059:	jmp    0x42a0bd
  42a05b:	(bad)  
  42a05c:	fwait
  42a05d:	in     al,dx
  42a05e:	inc    ebp
  42a05f:	rcr    BYTE PTR [edi+eiz*8-0x3ab6ad01],1
  42a066:	ins    BYTE PTR es:[edi],dx
  42a067:	enter  0xbea4,0x66
  42a06b:	retf   
  42a06c:	sahf   
  42a06d:	shl    DWORD PTR [ecx-0x60],cl
  42a070:	mov    DWORD PTR [edx-0x3],esi
  42a073:	mov    edx,0x9d62cc49
  42a078:	cwde   
  42a079:	clc    
  42a07a:	ins    BYTE PTR es:[edi],dx
  42a07b:	mov    cl,BYTE PTR [ecx+0x657b63e6]
  42a081:	stc    
  42a082:	jo     0x42a06d
  42a084:	dec    eax
  42a085:	(bad)  
  42a086:	jmp    FWORD PTR [ebp-0x7bac099b]
  42a08c:	gs loop 0x42a0de
  42a08f:	dec    eax
  42a090:	push   ebx
  42a091:	jmp    0x2a00:0x3648e93e
  42a098:	cmp    edi,esp
  42a09a:	pop    esi
  42a09b:	push   ebp
  42a09c:	and    al,dh
  42a09e:	cmp    ax,WORD PTR [eax]
	...
  42a0c5:	add    BYTE PTR [eax],al
  42a0c7:	add    BYTE PTR [edx],ah
  42a0c9:	jmp    0xfb5bef41
  42a0ce:	ds jmp 0x25428b1c
  42a0d4:	and    bl,dh
  42a0d6:	bound  ebx,QWORD PTR ds:0xd66cc22
  42a0dc:	repnz xor al,BYTE PTR [eax]
  42a0df:	jmp    0x15a56d2b
  42a0e4:	or     bh,dh
  42a0e6:	jno    0x42a0e8
  42a0e8:	lock pusha 
  42a0ea:	imul   esi,DWORD PTR [edx+eax*2+0x77],0x6c
  42a0ef:	arpl   WORD PTR [edi+0x76],cx
  42a0f2:	jo     0x42a0f4
  42a0f4:	push   edx
  42a0f5:	pop    es
  42a0f6:	push   ebx
  42a0f7:	imul   edi,esi,0x93684060
  42a0fd:	ja     0x42a150
  42a0ff:	outs   dx,DWORD PTR ds:[esi]
  42a100:	out    0x70,eax
  42a102:	imul   esi,DWORD PTR [ebx+ecx*4+0x47],0x57f7476
  42a10a:	lods   eax,DWORD PTR ds:[esi]
  42a10b:	add    ah,ch
  42a10d:	imul   esp,DWORD PTR fs:[esp+ebp*8+0x64],0x6f
  42a113:	jae    0x42a0f3
  42a115:	dec    ebx
  42a116:	data16 ins BYTE PTR es:[edi],dx
  42a118:	mov    edi,0x7dfffd4c
  42a11d:	push   es
  42a11e:	ins    BYTE PTR es:[edi],dx
  42a11f:	jae    0x42a0ff
  42a121:	ja     0x42a183
  42a123:	ins    DWORD PTR es:[edi],dx
  42a124:	shl    BYTE PTR [esi+edi*1+0x0],cl
  42a128:	or     BYTE PTR ds:0x6946,cl
	...
  42a152:	add    BYTE PTR [eax],al
  42a154:	aam    0x69
  42a156:	dec    ebx
  42a157:	fidivr DWORD PTR gs:[ecx+0x43]
  42a15b:	imul   edx,esi,0xb7003e60
  42a161:	add    eax,0x61946946
  42a166:	inc    eax
  42a167:	ins    BYTE PTR es:[edi],dx
  42a168:	test   DWORD PTR [edx+eiz*2+0x0],edi
  42a16c:	pop    esi
  42a16d:	push   es
  42a16e:	inc    ebx
  42a16f:	outs   dx,BYTE PTR gs:[esi]
  42a171:	pop    edx
  42a172:	ins    BYTE PTR es:[edi],dx
  42a173:	fs pop edi
  42a175:	jns    0x42a1d9
  42a177:	dec    eax
  42a178:	xchg   ebx,eax
  42a179:	pop    edi
  42a17a:	popa   
  42a17b:	ins    BYTE PTR es:[edi],dx
  42a17c:	pop    DWORD PTR [esi-0x3]
  42a17f:	dec    DWORD PTR [ebp+eax*1+0x575e6543]
  42a186:	bound  esi,QWORD PTR [edx+0x4b]
  42a189:	adc    ebp,ebx
  42a18b:	ins    BYTE PTR es:[edi],dx
  42a18c:	gs and eax,0x5c4b3efc
  42a192:	add    al,0x45
  42a194:	outs   dx,BYTE PTR ds:[esi]
  42a195:	jbe    0x42a164
  42a197:	ins    BYTE PTR es:[edi],dx
  42a198:	push   0x8262f001
  42a19d:	jo     0x42a182
  42a19f:	ins    BYTE PTR es:[edi],dx
  42a1a0:	mov    ah,BYTE PTR [edx+0x1]
  42a1a3:	je     0x42a1ef
  42a1a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1a6:	call   0xf29bba1e
  42a1ab:	jae    0x42a1db
  42a1ad:	lods   eax,DWORD PTR ds:[esi]
  42a1ae:	int3   
  42a1af:	ins    DWORD PTR es:[edi],dx
  42a1b0:	and    eax,0x4aa00157
  42a1b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1b6:	call   0x42a22e
	...
  42a1df:	add    ah,dh
  42a1e1:	dec    eax
  42a1e2:	jmp    0x42a247
  42a1e4:	and    al,0xb7
  42a1e6:	repnz inc ebx
  42a1e8:	and    dl,BYTE PTR [eax+ebp*8-0x108100a0]
  42a1ef:	jbe    0x42a1fb
  42a1f1:	bound  eax,QWORD PTR [ecx]
  42a1f3:	dec    ebp
  42a1f4:	dec    edx
  42a1f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1f6:	call   0xec36bd6e
  42a1fb:	jne    0x42a1e7
  42a1fd:	cmc    
  42a1fe:	out    0x4f,eax
  42a200:	fld    DWORD PTR [esi-0x7b18991d]
  42a206:	shl    BYTE PTR [ebx-0x27],cl
  42a209:	fsubr  st,st(5)
  42a20b:	mov    ah,BYTE PTR fs:[edx+0x1]
  42a20f:	jp     0x42a25a
  42a211:	xor    esp,ebp
  42a213:	jae    0x42a19d
  42a215:	aad    0xf1
  42a217:	jno    0x42a1bf
  42a219:	fdiv   st,st(7)
  42a21b:	inc    ebx
  42a21c:	mov    dl,0x34
  42a21e:	in     eax,0x60
  42a220:	xchg   edi,eax
  42a221:	(bad)  
  42a222:	icebp  
  42a223:	jbe    0x42a1af
  42a225:	bound  eax,QWORD PTR [ecx]
  42a227:	adc    ecx,DWORD PTR [eax+0x9]
  42a22a:	adc    esi,ecx
  42a22c:	js     0x42a229
  42a22e:	or     edi,ebp
  42a230:	ins    BYTE PTR es:[edi],dx
  42a231:	retf   0x3e6
  42a234:	xchg   DWORD PTR [edx],ecx
  42a236:	es out 0x78,eax
  42a239:	fprem  
  42a23b:	jmp    0xfb8c:0xe6f2ea5e
  42a242:	add    eax,0xe6
	...
  42a26b:	add    BYTE PTR [ebp-0x23],ch
  42a26e:	add    edx,ecx
  42a270:	imul   ebp,esp,0xdf37eada
  42a276:	lods   al,BYTE PTR ds:[esi]
  42a277:	loop   0x42a2aa
  42a279:	out    0xd9,al
  42a27b:	ret    0x6fb4
  42a27e:	mov    al,ds:0xbae60602
  42a283:	rcr    DWORD PTR [edx],cl
  42a285:	loop   0x42a23b
  42a287:	loop   0x42a2a1
  42a289:	out    0x96,al
  42a28b:	icebp  
  42a28c:	daa    
  42a28d:	out    0xbf,eax
  42a28f:	out    dx,eax
  42a290:	sub    edx,eax
  42a292:	xchg   esp,eax
  42a293:	test   DWORD PTR [ebp+0x9],0xe606041d
  42a29a:	call   0xdee6:0x98faf9c0
  42a2a1:	hlt    
  42a2a2:	stos   BYTE PTR es:[edi],al
  42a2a3:	jmp    0xfaef:0xf789e5da
  42a2aa:	outs   dx,DWORD PTR ds:[esi]
  42a2ab:	ret    0x6f54
  42a2ae:	int    0x0
  42a2b0:	(bad)  
  42a2b2:	pop    edx
  42a2b3:	repnz mov al,0xe4
  42a2b6:	dec    esp
  42a2b7:	aad    0x3c
  42a2b9:	outs   dx,DWORD PTR ds:[esi]
  42a2ba:	in     al,0x1
  42a2bc:	xor    ah,0x3a
  42a2bf:	clc    
  42a2c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a2c1:	retf   
  42a2c2:	aas    
  42a2c3:	clc    
  42a2c4:	test   eax,0xa5d54dd5
  42a2c9:	in     eax,0xff
  42a2cb:	dec    ebx
  42a2cc:	or     ah,bh
  42a2ce:	pop    esi
  42a2cf:	cmp    eax,DWORD PTR [eax]
	...
  42a2f5:	add    BYTE PTR [eax],al
  42a2f7:	add    BYTE PTR [edi-0x7e],al
  42a2fa:	jmp    FWORD PTR ds:0x1053faec
  42a300:	jmp    0x73dc:0xfc0640e1
  42a307:	jmp    0x1a455354
  42a30c:	fucomi st,st(3)
  42a30e:	(bad)  
  42a30f:	stc    
  42a310:	dec    eax
  42a311:	cmp    edi,edi
  42a313:	sub    eax,0xfe4afaec
  42a318:	in     al,0xfb
  42a31a:	imul   ecx,esp,0xffffff8e
  42a31d:	out    0x6b,eax
  42a31f:	les    ecx,FWORD PTR [esi-0x76339531]
  42a325:	outs   dx,BYTE PTR ds:[esi]
  42a326:	std    
  42a327:	add    DWORD PTR [eax-0x3c],ecx
  42a32a:	bound  edi,QWORD PTR [ebp-0x4a8f306c]
  42a330:	test   eax,edi
  42a332:	jno    0x42a2fa
  42a334:	call   0x71c8:0x4890fd6e
  42a33b:	mov    WORD PTR [ecx-0x6],gs
  42a33e:	bound  esi,QWORD PTR [ebp-0x7e942291]
  42a344:	ins    DWORD PTR es:[edi],dx
  42a345:	loop   0x42a3b6
  42a347:	fidivr DWORD PTR [edx]
  42a349:	fsubr  DWORD PTR [ebp-0x78]
  42a34c:	pop    eax
  42a34d:	stc    
  42a34e:	mov    ss,WORD PTR [si+0x6e]
  42a352:	std    
  42a353:	int3   
  42a354:	dec    edx
  42a355:	fnstenv [ecx+0x7e]
  42a358:	imul   ebp,ebx,0x70
  42a35b:	pop    edx
	...
  42a384:	jl     0x42a3c1
  42a386:	inc    esi
  42a387:	push   eax
  42a388:	xor    eax,0x48e973f9
  42a38d:	adc    DWORD PTR [edx],eax
  42a38f:	push   ds
  42a390:	aaa    
  42a391:	jmp    0x42a400
  42a393:	add    BYTE PTR [edx+0x77],al
  42a396:	ins    BYTE PTR es:[edi],dx
  42a397:	arpl   WORD PTR [edi+0x45007076],ax
  42a39d:	pop    es
  42a39e:	push   eax
  42a39f:	jb     0x42a3ee
  42a3a1:	bound  si,DWORD PTR [ebx+0x61]
  42a3a5:	xor    cl,BYTE PTR ss:[esi+0x47]
  42a3a9:	ins    DWORD PTR es:[edi],dx
  42a3aa:	jno    0x42a3ac
  42a3ac:	lds    eax,FWORD PTR [ebx]
  42a3ae:	dec    esp
  42a3af:	inc    ebx
  42a3b0:	dec    edi
  42a3b1:	fs ins DWORD PTR es:[edi],dx
  42a3b3:	push   ebx
  42a3b4:	out    0x73,al
  42a3b6:	data16 outs dx,BYTE PTR ds:[esi]
  42a3b8:	inc    ebp
  42a3b9:	inc    esp
  42a3ba:	std    
  42a3bb:	(bad)  
  42a3bc:	jns    0x42a3c3
  42a3be:	inc    ecx
  42a3bf:	js     0x42a40c
  42a3c1:	jns    0x42a410
  42a3c3:	jb     0x42a362
  42a3c5:	bound  si,DWORD PTR [ebx-0x5f]
  42a3c9:	or     DWORD PTR [ebp+0x7168f102],ebp
  42a3cf:	push   ebp
  42a3d0:	in     al,dx
  42a3d1:	popa   
  42a3d2:	pop    esi
  42a3d3:	outs   dx,BYTE PTR ds:[esi]
  42a3d4:	xchg   esi,eax
  42a3d5:	bound  esp,QWORD PTR gs:[edi+eiz*8+0x71]
  42a3da:	pusha  
  42a3db:	rcr    BYTE PTR gs:[ebp+0x66],cl
  42a3df:	outs   dx,DWORD PTR ds:[esi]
  42a3e0:	int3   
  42a3e1:	inc    edi
  42a3e2:	data16 ins BYTE PTR es:[edi],dx
  42a3e4:	out    0x68,al
  42a3e6:	outs   dx,DWORD PTR ds:[esi]
	...
  42a40f:	add    cl,bl
  42a411:	push   0x65c76e6f
  42a416:	xor    BYTE PTR [edx],dh
  42a418:	lods   al,BYTE PTR ds:[esi]
  42a419:	dec    ebp
  42a41a:	imul   ebp,DWORD PTR [edx+esi*2+0x9],0x73b10087
  42a422:	bound  esp,QWORD PTR [ecx-0x2a]
  42a425:	push   0x68d07450
  42a42a:	pop    esi
  42a42b:	ins    DWORD PTR es:[edi],dx
  42a42c:	jge    0x42a48d
  42a42e:	inc    ebp
  42a42f:	inc    edi
  42a430:	mov    fs,WORD PTR [eax+0x5f]
  42a433:	popa   
  42a434:	dec    ebx
  42a435:	mov    BYTE PTR [ebx],0x95
  42a438:	dec    ebx
  42a439:	and    ebx,edi
  42a43b:	jae    0x42a3d0
  42a43d:	sbb    ebp,eax
  42a43f:	ins    BYTE PTR es:[edi],dx
  42a440:	test   eax,0x9945e7c1
  42a445:	ret    
  42a446:	out    0x50,al
  42a448:	xchg   edi,eax
  42a449:	xor    bh,bl
  42a44b:	pop    esi
  42a44c:	jbe    0x42a4b0
  42a44e:	add    DWORD PTR [esi],ecx
  42a450:	dec    ebx
  42a451:	pop    ds
  42a452:	jmp    0xe3401d97
  42a457:	jae    0x42a4bf
  42a459:	and    ebp,edi
  42a45b:	outs   dx,WORD PTR ds:[esi]
  42a45d:	bound  eax,QWORD PTR [ecx]
  42a45f:	pusha  
  42a460:	dec    ebx
  42a461:	pop    ds
  42a462:	jmp    0xeeb20eba
  42a467:	dec    edx
  42a468:	ins    WORD PTR es:[edi],dx
  42a46a:	mov    edi,0x13d2e71
  42a46f:	or     eax,0x40ea9f4b
	...
  42a49c:	cmp    DWORD PTR ds:0xa92673e4,edi
  42a4a2:	out    0x70,eax
  42a4a4:	pop    ds
  42a4a5:	inc    ecx
  42a4a6:	out    0x60,eax
  42a4a8:	bound  eax,QWORD PTR es:[ecx]
  42a4ab:	icebp  
  42a4ac:	dec    ebx
  42a4ad:	mov    ds:0xac0262e5,eax
  42a4b2:	in     al,dx
  42a4b3:	jae    0x42a4a7
  42a4b5:	and    ch,0x66
  42a4b8:	add    DWORD PTR [ebp+0x7ce76d01],eax
  42a4be:	xor    bl,BYTE PTR ss:0x4b6be586
  42a4c5:	test   DWORD PTR [ebx],eax
  42a4c7:	jne    0x42a4a1
  42a4c9:	icebp  
  42a4ca:	repnz in ax,0xed
  42a4ce:	fidivr WORD PTR [esi]
  42a4d0:	dec    ebx
  42a4d1:	cmc    
  42a4d2:	cmc    
  42a4d3:	bound  edi,QWORD PTR [ecx+0x6d361a09]
  42a4d9:	in     eax,0x4a
  42a4db:	call   0x3fa1114
  42a4e0:	cdq    
  42a4e1:	out    0x45,al
  42a4e3:	leave  
  42a4e4:	mov    ah,0xe6
  42a4e6:	push   esp
  42a4e7:	int    0xa9
  42a4e9:	repnz and edi,esp
  42a4ec:	push   ebp
  42a4ed:	or     DWORD PTR [ecx+0x45e67903],edx
  42a4f3:	sar    DWORD PTR [ecx-0x1a],cl
  42a4f6:	sbb    bl,bh
  42a4f8:	xchg   esi,eax
  42a4f9:	jmp    0xc30e:0xc669ef0a
	...
  42a528:	in     al,dx
  42a529:	imul   edx,DWORD PTR [esi+0x3],0x79
  42a52d:	out    0xd,al
  42a52f:	lds    esi,FWORD PTR [eax-0x24]
  42a532:	stc    
  42a533:	fiadd  WORD PTR [ebx-0x1fc101a]
  42a539:	or     DWORD PTR [ecx],ebx
  42a53b:	fild   QWORD PTR [edi]
  42a53d:	mov    esp,0xc02eded6
  42a542:	ret    
  42a543:	cli    
  42a544:	jne    0x42a54f
  42a546:	sub    eax,DWORD PTR [ebx]
  42a548:	sbb    esi,esp
  42a54a:	lds    edi,FWORD PTR [esi-0x332c09ca]
  42a550:	sub    edx,esi
  42a552:	mov    ds:0x710955fb,eax
  42a557:	add    edi,ecx
  42a559:	in     eax,0xc5
  42a55b:	(bad)  
  42a55c:	cli    
  42a55d:	in     eax,0x87
  42a55f:	out    dx,eax
  42a560:	jmp    0x363d2924
  42a565:	or     DWORD PTR [esi],ecx
  42a567:	add    ebx,DWORD PTR [ecx]
  42a569:	out    0x85,al
  42a56b:	aam    0xe9
  42a56d:	hlt    
  42a56e:	pushf  
  42a56f:	loop   0x42a561
  42a571:	cmc    
  42a572:	cmp    DWORD PTR [esi-0x17003624],0x48
  42a579:	inc    esi
  42a57a:	call   FWORD PTR [edx+0x5742e625]
  42a580:	sub    al,0xe0
  42a582:	push   ebp
  42a583:	dec    eax
  42a584:	and    edi,eax
  42a586:	bound  ebp,QWORD PTR [eax]
  42a588:	inc    edi
  42a589:	cmp    edi,edi
  42a58b:	cmp    al,BYTE PTR [eax]
	...
  42a5b1:	add    BYTE PTR [eax],al
  42a5b3:	add    BYTE PTR [esi+eiz*8],al
  42a5b6:	dec    esp
  42a5b7:	cmp    esp,edi
  42a5b9:	fadd   QWORD PTR [eax+0x34]
  42a5bc:	sbb    eax,0x1b4762f9
  42a5c1:	fdiv   DWORD PTR [eax+0x44]
  42a5c4:	std    
  42a5c5:	push   0xfffffffd
  42a5c7:	add    cl,BYTE PTR [eax-0x3c]
  42a5ca:	bound  edx,QWORD PTR ds:0x1b62fa04
  42a5d0:	add    esp,ecx
  42a5d2:	push   0x4
  42a5d4:	or     BYTE PTR [ebx-0x3],ch
  42a5d7:	or     bl,ch
  42a5d9:	hlt    
  42a5da:	pop    esi
  42a5db:	stc    
  42a5dc:	loope  0x42a617
  42a5de:	xor    al,bh
  42a5e0:	in     al,dx
  42a5e1:	fisubr WORD PTR [ebx-0x17]
  42a5e4:	dec    eax
  42a5e5:	push   edx
  42a5e6:	add    BYTE PTR [edx-0x32941850],bh
  42a5ec:	cmc    
  42a5ed:	repnz (bad) 
  42a5ef:	retf   0xf69d
  42a5f2:	bound  ebp,QWORD PTR [eax-0x339807b8]
  42a5f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a5f9:	fidiv  WORD PTR [eax]
  42a5fb:	sti    
  42a5fc:	(bad)  
  42a5fd:	in     eax,0x6b
  42a5ff:	lds    ecx,FWORD PTR [eax-0xe]
  42a602:	call   FWORD PTR [edi-0x649d098e]
  42a608:	jb     0x42a5f1
  42a60a:	jae    0x42a5b6
  42a60c:	jle    0x42a5d9
  42a60e:	pusha  
  42a60f:	cmp    BYTE PTR [ebp-0x8],0x6b
  42a613:	test   al,0x48
  42a615:	lock (bad) 
  42a617:	inc    DWORD PTR [eax]
	...
  42a63d:	add    BYTE PTR [eax],al
  42a63f:	add    BYTE PTR [ebx-0x2f9a8ea0],bl
  42a645:	pop    edi
  42a646:	bound  esi,QWORD PTR [ecx+eiz*4+0x74]
  42a64a:	bound  esp,QWORD PTR [ecx-0x42]
  42a64d:	dec    ebx
  42a64e:	push   edx
  42a64f:	jb     0x42a5e7
  42a651:	inc    esp
  42a652:	std    
  42a653:	call   FWORD PTR [ebp-0x7b9694a4]
  42a659:	push   0x618e2e71
  42a65e:	imul   eax,DWORD PTR [eax],0x744f0517
  42a664:	push   eax
  42a665:	push   esi
  42a666:	jno    0x42a6da
  42a668:	imul   eax,DWORD PTR [ebp+edi*8-0x1],0xfffffff2
  42a66d:	add    al,0x4f
  42a66f:	je     0x42a6d1
  42a671:	push   edi
  42a672:	inc    eax
  42a673:	push   0x3e3c50
  42a678:	out    dx,al
  42a679:	add    al,0x4f
  42a67b:	je     0x42a6bd
  42a67d:	pop    ecx
  42a67e:	ins    BYTE PTR es:[edi],dx
  42a67f:	dec    ecx
  42a680:	xor    al,0x79
  42a682:	ds add dh,ah
  42a685:	add    al,0x4f
  42a687:	je     0x42a659
  42a689:	push   esi
  42a68a:	jno    0x42a6fe
  42a68c:	jae    0x42a693
  42a68e:	jmp    0x8743:0x6f5a0100
  42a695:	jne    0x42a6e2
  42a697:	dec    ecx
  42a698:	jecxz  0x42a69f
  42a69a:	push   cs
  42a69b:	add    ecx,esp
  42a69d:	pop    ecx
  42a69e:	outs   dx,DWORD PTR ds:[esi]
  42a69f:	push   ebx
  42a6a0:	fidiv  WORD PTR [edi+0x46]
  42a6a3:	push   edi
	...
  42a6cc:	mov    ds:0x86686f05,al
  42a6d1:	pop    edx
  42a6d2:	pop    esi
  42a6d3:	jo     0x42a660
  42a6d5:	and    esp,DWORD PTR [esp+ebp*2-0x2a]
  42a6d9:	add    eax,0x63db0036
  42a6de:	bound  esi,QWORD PTR [ebx+ecx*2-0x4d]
  42a6e2:	in     al,0x63
  42a6e4:	out    dx,eax
  42a6e5:	lea    eax,[ecx]
  42a6e7:	sub    cl,BYTE PTR [ebx+0x7b]
  42a6ea:	loopne 0x42a75f
  42a6ec:	jecxz  0x42a768
  42a6ee:	bnd jae 0x42a6da
  42a6f1:	clc    
  42a6f2:	loop   0x42a752
  42a6f4:	mov    dh,0x8d
  42a6f6:	add    DWORD PTR [edi+0x4b],eax
  42a6f9:	ret    
  42a6fa:	in     al,0x60
  42a6fc:	mov    al,ds:0x2cffefcd
  42a701:	sbb    BYTE PTR [ecx+eiz*2],al
  42a704:	mov    ah,0x28
  42a706:	out    0x62,al
  42a708:	test   al,0x26
  42a70a:	add    al,0x26
  42a70c:	dec    ebx
  42a70d:	shl    edi,cl
  42a70f:	ins    BYTE PTR es:[edi],dx
  42a710:	cwde   
  42a711:	aad    0xf0
  42a713:	ins    BYTE PTR es:[edi],dx
  42a714:	push   0x4b73decb
  42a719:	ss add al,0x71
  42a71c:	outs   dx,BYTE PTR ds:[esi]
  42a71d:	sbb    al,ah
  42a71f:	(bad)  
  42a720:	in     al,dx
  42a721:	xor    eax,DWORD PTR [ecx+esi*2]
  42a724:	outs   dx,BYTE PTR ds:[esi]
  42a725:	data16 loopne 0x42a788
  42a728:	push   edi
  42a729:	jb     0x42a72c
  42a72b:	ds dec ebx
  42a72d:	fs loopne 0x42a790
	...
  42a758:	push   ebp
  42a759:	jb     0x42a75c
  42a75b:	inc    ebp
  42a75c:	dec    ebx
  42a75d:	arpl   ax,sp
  42a75f:	jae    0x42a799
  42a761:	aas    
  42a762:	loop   0x42a7cc
  42a764:	and    al,0x42
  42a766:	in     eax,dx
  42a767:	jmp    FWORD PTR [ecx+edx*1-0x4f07aafc]
  42a76e:	shl    BYTE PTR [ebx+0x2a],cl
  42a771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a772:	in     eax,dx
  42a773:	jb     0x42a790
  42a775:	jb     0x42a778
  42a777:	jne    0x42a791
  42a779:	dec    edi
  42a77a:	loop   0x42a7e4
  42a77c:	cmp    BYTE PTR [ebx+eiz*1+0x64],ah
  42a780:	out    dx,eax
  42a781:	or     BYTE PTR [ebx-0x54f6fffd],dl
  42a787:	out    0xd,al
  42a789:	in     eax,dx
  42a78a:	mov    ebx,0xb6dae9f2
  42a78f:	icebp  
  42a790:	out    dx,eax
  42a791:	out    dx,al
  42a792:	(bad)  
  42a793:	out    0xe9,eax
  42a795:	leave  
  42a796:	out    0x3,al
  42a798:	in     al,dx
  42a799:	or     BYTE PTR [ebp+eiz*8-0x20780750],bl
  42a7a0:	cdq    
  42a7a1:	fmul   QWORD PTR [ebx-0xe]
  42a7a4:	test   bl,bl
  42a7a6:	dec    ebp
  42a7a7:	fisub  WORD PTR [ebp-0x67fbb40b]
  42a7ad:	fadd   QWORD PTR [ebx-0xe]
  42a7b0:	test   eax,0xaf263cf7
  42a7b5:	cmc    
  42a7b6:	dec    edx
  42a7b7:	add    al,0x4b
  42a7b9:	or     edi,esp
  42a7bb:	add    eax,DWORD PTR [eax]
	...
  42a7e1:	add    BYTE PTR [eax],al
  42a7e3:	add    BYTE PTR [ebx+0x9],cl
  42a7e6:	out    0x3,eax
  42a7e8:	dec    ebx
  42a7e9:	or     edi,esp
  42a7eb:	add    ecx,DWORD PTR [ebx+0x9]
  42a7ee:	out    0x3,eax
  42a7f0:	dec    ebx
  42a7f1:	or     edi,esp
  42a7f3:	add    ecx,DWORD PTR [ebx+0x9]
  42a7f6:	out    0x3,eax
  42a7f8:	dec    ebx
  42a7f9:	or     edi,esp
  42a7fb:	add    ecx,DWORD PTR [ebx+0x9]
  42a7fe:	out    0x3,eax
  42a800:	dec    ebx
  42a801:	or     edi,esp
  42a803:	add    ecx,DWORD PTR [ebx+0x9]
  42a806:	out    0x3,eax
  42a808:	dec    ebx
  42a809:	or     edi,esp
  42a80b:	add    ecx,DWORD PTR [ebx+0x9]
  42a80e:	out    0x3,eax
  42a810:	dec    ebx
  42a811:	or     edi,esp
  42a813:	add    ecx,DWORD PTR [ebx+0x9]
  42a816:	out    0x3,eax
  42a818:	dec    ebx
  42a819:	or     edi,esp
  42a81b:	add    ecx,DWORD PTR [ebx+0x9]
  42a81e:	out    0x3,eax
  42a820:	dec    ebx
  42a821:	or     DWORD PTR [eax],eax
  42a823:	jmp    0xe942b170
  42a828:	dec    eax
  42a829:	or     DWORD PTR [eax],eax
  42a82b:	jmp    0xe942b178
  42a830:	dec    eax
  42a831:	or     DWORD PTR [eax],eax
  42a833:	jmp    0xe942b180
  42a838:	dec    eax
  42a839:	or     DWORD PTR [eax],eax
  42a83b:	jmp    0xe942b188
  42a840:	dec    eax
  42a841:	or     DWORD PTR [eax],eax
  42a843:	jmp    0xe942b190
	...
  42a870:	dec    eax
  42a871:	or     DWORD PTR [eax],eax
  42a873:	jmp    0xe942b1c0
  42a878:	dec    eax
  42a879:	or     DWORD PTR [eax],eax
  42a87b:	jmp    0xe942b1c8
  42a880:	dec    eax
  42a881:	or     DWORD PTR [eax],eax
  42a883:	jmp    0xe942b1d0
  42a888:	dec    eax
  42a889:	or     DWORD PTR [eax],eax
  42a88b:	jmp    0xe942b1d8
  42a890:	dec    eax
  42a891:	or     DWORD PTR [eax],eax
  42a893:	jmp    0xe942b1e0
  42a898:	dec    eax
  42a899:	or     DWORD PTR [eax],eax
  42a89b:	jmp    0xe942b1e8
  42a8a0:	dec    eax
  42a8a1:	or     DWORD PTR [eax],eax
  42a8a3:	jmp    0xe942b1f0
  42a8a8:	dec    eax
  42a8a9:	or     DWORD PTR [eax],eax
  42a8ab:	jmp    0xe942b1f8
  42a8b0:	dec    eax
  42a8b1:	or     DWORD PTR [eax],eax
  42a8b3:	jmp    0xe942b200
  42a8b8:	dec    eax
  42a8b9:	or     DWORD PTR [eax],eax
  42a8bb:	jmp    0xe942b208
  42a8c0:	dec    eax
  42a8c1:	or     DWORD PTR [eax],eax
  42a8c3:	add    BYTE PTR [edx-0x5dfffff6],ah
  42a8c9:	or     al,BYTE PTR [eax]
  42a8cb:	add    BYTE PTR [edx+0xa],dh
  42a8ce:	add    BYTE PTR [eax],al
  42a8d0:	jb     0x42a8dc
	...
  42a8fa:	add    BYTE PTR [eax],al
  42a8fc:	bound  ecx,QWORD PTR [edx]
  42a8fe:	add    BYTE PTR [eax],al
  42a900:	bound  ecx,QWORD PTR [edx]
  42a902:	add    BYTE PTR [eax],al
  42a904:	xchg   edi,eax
  42a905:	push   ebp
  42a906:	int3   
  42a907:	int3   
  42a908:	(bad)  
  42a909:	push   ebp
  42a90a:	int3   
  42a90b:	int3   
  42a90c:	(bad)  
  42a90d:	xchg   ecx,eax
  42a90e:	in     al,dx
  42a90f:	push   ecx
  42a910:	ror    ah,0x7
  42a913:	mov    dl,BYTE PTR [ebx-0x6f]
  42a916:	dec    ebx
  42a917:	call   eax
  42a919:	imul   ebx,DWORD PTR [ebx-0x3d],0xffffff9e
  42a91d:	xchg   edx,eax
  42a91e:	in     al,dx
  42a91f:	push   ecx
  42a920:	xchg   ebp,eax
  42a921:	mov    esi,0x92afc930
  42a926:	outs   dx,DWORD PTR ds:[esi]
  42a927:	xor    al,dl
  42a929:	fimul  WORD PTR [ebx]
  42a92b:	mov    ebx,DWORD PTR [ebp+0x43468905]
  42a931:	nop
  42a932:	inc    ebx
  42a933:	cld    
  42a934:	shl    dh,1
  42a936:	pop    ds
  42a937:	mov    esi,DWORD PTR ds:0x7f6b3d89
  42a93d:	push   cs
  42a93e:	cmp    BYTE PTR [edi],0x80
  42a941:	fld    QWORD PTR [ecx]
  42a943:	jmp    0x42a937
  42a945:	lds    ebx,FWORD PTR [ebp-0x75]
  42a948:	out    0xc3,al
  42a94a:	ror    ah,0x7e
  42a94d:	xchg   edx,eax
  42a94e:	in     al,dx
  42a94f:	sbb    edi,0x2c
  42a952:	mov    DWORD PTR [ebp+0x53],eax
  42a955:	nop
  42a956:	inc    ebx
  42a957:	loopne 0x42a929
  42a959:	rcr    edi,cl
  42a95b:	mov    ebx,DWORD PTR [esi]
  42a95d:	imul   eax,DWORD PTR [ecx],0x51
	...
  42a987:	add    BYTE PTR [edi-0x70],ch
  42a98a:	push   ebx
  42a98b:	in     al,0xd0
  42a98d:	retf   
  42a98e:	jecxz  0x42a91b
  42a990:	adc    esp,ecx
  42a992:	add    BYTE PTR [ebp+0x43],cl
  42a995:	nop
  42a996:	dec    ebx
  42a997:	clc    
  42a998:	sar    BYTE PTR [ebx+0x2d098bf7],0x1
  42a99f:	inc    ebp
  42a9a0:	push   ebx
  42a9a1:	nop
  42a9a2:	inc    ebx
  42a9a3:	call   0x8c3a7d68
  42a9a8:	sbb    ch,BYTE PTR [ecx]
  42a9aa:	add    DWORD PTR [ebp+0x53],edx
  42a9ad:	nop
  42a9ae:	push   ebx
  42a9af:	lock ror bl,1
  42a9b2:	test   DWORD PTR [ebx+0x4d010503],0xfc4b9043
  42a9bc:	or     al,0xcf
  42a9be:	repz add BYTE PTR [ebx+0x9],cl
  42a9c2:	add    bl,ch
  42a9c4:	inc    edx
  42a9c5:	nop
  42a9c6:	push   ebx
  42a9c7:	hlt    
  42a9c8:	enter  0xff47,0x88
  42a9cc:	jle    0x42aa2b
  42a9ce:	mov    DWORD PTR [ebp+0x23],eax
  42a9d1:	xchg   ecx,eax
  42a9d2:	dec    ebx
  42a9d3:	hlt    
  42a9d4:	push   eax
  42a9d5:	rcl    DWORD PTR [edi],1
  42a9d7:	jae    0x42a95c
  42a9d9:	nop
  42a9da:	push   ebx
  42a9db:	lock rol BYTE PTR [edi],1
  42a9de:	add    DWORD PTR [ebp+0x53],eax
  42a9e1:	xchg   edx,eax
  42a9e2:	inc    ebx
  42a9e3:	fsub   QWORD PTR [ecx+0x13]
  42a9e6:	push   0xffc949ac
  42a9eb:	mov    al,BYTE PTR [eax]
	...
  42aa11:	add    BYTE PTR [eax],al
  42aa13:	add    BYTE PTR [esi+0x7be84f45],dl
  42aa19:	or     al,BYTE PTR [eax]
  42aa1b:	add    al,cl
  42aa1d:	dec    ebp
  42aa1e:	or     al,0x85
  42aa20:	or     ebx,edi
  42aa22:	sbb    BYTE PTR [ebx+0x45895d1e],cl
  42aa28:	mov    bl,0x14
  42aa2a:	mov    ch,0xc
  42aa2c:	sbb    edx,DWORD PTR [edx-0x413f13b5]
  42aa32:	jmp    0x42a9bf
  42aa34:	push   cs
  42aa35:	mov    DWORD PTR gs:[ebx+edi*4],eax
  42aa39:	or     BYTE PTR [ebx+0x8],al
  42aa3c:	mov    al,ds:0x9b4d8916
  42aa41:	mov    BYTE PTR [edi-0x10292dfc],bh
  42aa47:	jmp    0x42a9f0
  42aa49:	sbb    al,al
  42aa4b:	mov    ebp,DWORD PTR [esi-0x3a]
  42aa4e:	ror    ah,0x7f
  42aa51:	push   ebp
  42aa52:	int3   
  42aa53:	int3   
  42aa54:	xchg   edi,eax
  42aa55:	push   ebp
  42aa56:	int3   
  42aa57:	int3   
  42aa58:	(bad)  
  42aa59:	push   ebp
  42aa5a:	int3   
  42aa5b:	int3   
  42aa5c:	dec    BYTE PTR [edi+0x15f83ec]
  42aa62:	call   0xfda6ee6c
  42aa67:	mov    DWORD PTR [esi+0x23458971],eax
  42aa6d:	mov    ecx,0x642c29e7
  42aa72:	std    
  42aa73:	or     DWORD PTR [edi],0xd
  42aa76:	mov    eax,ds:0xb4
	...
  42aa9f:	add    BYTE PTR [esi-0x36],dh
  42aaa2:	jmp    DWORD PTR [edi-0x29]
  42aaa5:	push   es
  42aaa6:	inc    eax
  42aaa7:	add    al,al
  42aaa9:	aad    0xe7
  42aaab:	push   ecx
  42aaac:	add    al,0xfe
  42aaae:	mov    bl,0x55
  42aab0:	mov    cl,BYTE PTR [ecx]
  42aab2:	mov    eax,ds:0xffca9eb8
  42aab7:	imul   ecx,DWORD PTR [ebx-0x11],0x71767ff
  42aabe:	inc    eax
  42aabf:	add    ah,bl
  42aac1:	std    
  42aac2:	mov    bh,0x55
  42aac4:	mov    cl,BYTE PTR [ecx]
  42aac6:	xchg   DWORD PTR [ebp-0x1d],eax
  42aac9:	dec    ebx
  42aaca:	inc    ebx
  42aacb:	cld    
  42aacc:	dec    ebx
  42aacd:	or     DWORD PTR [eax],eax
  42aacf:	add    BYTE PTR [eax-0x48aa76ef],dh
  42aad5:	xchg   edx,eax
  42aad7:	add    edx,eax
  42aad9:	mov    ebp,0x652683fb
  42aade:	or     BYTE PTR [ebx+0x6a],dh
  42aae1:	nop
  42aae2:	inc    ebx
  42aae3:	cld    
  42aae4:	rcl    BYTE PTR [ebx+eax*4],0x8c
  42aae8:	dec    ecx
  42aae9:	leave  
  42aaea:	call   DWORD PTR [eax-0x30]
  42aaed:	mov    ebp,0xfd7c52e7
  42aaf2:	mov    bl,0x55
  42aaf4:	or     cl,BYTE PTR [ecx]
  42aaf6:	mov    DWORD PTR [ebp+0x6f],ecx
  42aaf9:	xchg   ecx,eax
  42aafa:	add    al,0x8d
  42aafc:	lahf   
  42aafd:	mov    ebp,0x3870003e
  42ab02:	mov    ebp,esp
	...
  42ab2c:	test   BYTE PTR [edi-0x34],0xcc
  42ab30:	jg     0x42ab86
  42ab32:	int3   
  42ab33:	int3   
  42ab34:	pop    ss
  42ab35:	push   esi
  42ab36:	int3   
  42ab37:	int3   
  42ab38:	orps   xmm1,xmm4
  42ab3b:	int3   
  42ab3c:	sahf   
  42ab3d:	mov    gs,esp
  42ab3f:	mov    eax,ds:0x3ebb5b
  42ab44:	mov    es,WORD PTR gs:[eax+0x30]
  42ab48:	rcl    ah,1
  42ab4a:	pop    es
  42ab4b:	ds ret 0x7d1
  42ab4f:	pop    ebp
  42ab50:	or     BYTE PTR [esi-0x34],dl
  42ab53:	int3   
  42ab54:	pop    ss
  42ab55:	push   esi
  42ab56:	int3   
  42ab57:	int3   
  42ab58:	orps   xmm1,xmm4
  42ab5b:	int3   
  42ab5c:	sahf   
  42ab5d:	mov    gs,esp
  42ab5f:	mov    eax,DWORD PTR [esi-0x6974afeb]
  42ab65:	adc    DWORD PTR [edi-0x1],ecx
  42ab68:	ss popf 
  42ab6a:	push   ebx
  42ab6b:	inc    ecx
  42ab6c:	dec    ebx
  42ab6d:	(bad)  
  42ab6e:	ror    ah,0xff
  42ab71:	push   ebp
  42ab72:	int3   
  42ab73:	int3   
  42ab74:	xchg   edi,eax
  42ab75:	push   ebp
  42ab76:	int3   
  42ab77:	int3   
  42ab78:	(bad)  
  42ab79:	push   ebp
  42ab7a:	int3   
  42ab7b:	int3   
  42ab7c:	push   ds
  42ab7d:	mov    gs,esp
  42ab7f:	sbb    DWORD PTR [edi+0x31006a11],0x9
  42ab86:	push   0xffc949dc
  42ab8b:	(bad)  
  42ab8c:	mov    eax,ds:0x4153
	...
  42abb6:	add    BYTE PTR [eax],al
  42abb8:	dec    ebx
  42abb9:	nop
  42abba:	inc    ebx
  42abbb:	clc    
  42abbc:	repz jo 0x42abc1
  42abbf:	inc    eax
  42abc0:	dec    ebx
  42abc1:	mov    es,WORD PTR [ebx-0x8]
  42abc4:	sbb    esi,DWORD PTR [ecx-0x46]
  42abc7:	jmp    FWORD PTR [edx+eiz*2-0x7f]
  42abcb:	les    edx,FWORD PTR [ebx-0x70]
  42abce:	inc    ebx
  42abcf:	cld    
  42abd0:	rcl    ah,1
  42abd2:	sqrtps xmm0,xmm0
  42abd5:	mov    esp,0xccc0520b
  42abda:	pop    es
  42abdb:	push   eax
  42abdc:	inc    esp
  42abdd:	mov    esp,0xc4268bfb
  42abe2:	ror    ah,0x9e
  42abe5:	mov    gs,esp
  42abe7:	push   ecx
  42abe8:	add    al,0xcc
  42abea:	sti    
  42abeb:	add    BYTE PTR [ebx+0x9],cl
  42abee:	add    bl,ch
  42abf0:	push   edx
  42abf1:	mov    es,WORD PTR [ebx-0x4]
  42abf4:	enter  0xff48,0x88
  42abf8:	xchg   BYTE PTR [ebp-0x77],ah
  42abfb:	dec    ebp
  42abfc:	pop    es
  42abfd:	push   ds
  42abfe:	dec    ebx
  42abff:	adc    BYTE PTR [eax+0x2],bh
  42ac02:	mov    DWORD PTR [ebp+0x43],edx
  42ac05:	push   es
  42ac06:	push   ebx
  42ac07:	cld    
  42ac08:	cmp    al,0x9b
  42ac0a:	add    cl,BYTE PTR [ebx+0x4d011596]
  42ac10:	fist   WORD PTR [ecx]
  42ac12:	mov    dh,0x11
  42ac14:	adc    BYTE PTR [edi+0x74],al
  42ac17:	pop    es
  42ac18:	xchg   ebx,eax
  42ac19:	pop    es
	...
  42ac42:	add    BYTE PTR [eax],al
  42ac44:	dec    ebx
  42ac45:	outs   dx,BYTE PTR ds:[esi]
  42ac46:	add    al,0xeb
  42ac48:	fwait
  42ac49:	adc    eax,0xc3ae8bc0
  42ac4e:	ror    ah,0x7f
  42ac51:	push   esp
  42ac52:	int3   
  42ac53:	int3   
  42ac54:	xchg   edi,eax
  42ac55:	push   esp
  42ac56:	int3   
  42ac57:	int3   
  42ac58:	(bad)  
  42ac59:	push   esp
  42ac5a:	int3   
  42ac5b:	int3   
  42ac5c:	dec    BYTE PTR [ebp+0x933b9ec]
  42ac62:	add    BYTE PTR [eax],al
  42ac64:	out    dx,eax
  42ac65:	lea    eax,[edi]
  42ac67:	mov    DWORD PTR [esi-0x7],ecx
  42ac6a:	push   ebp
  42ac6b:	inc    ecx
  42ac6c:	dec    ebx
  42ac6d:	(bad)  
  42ac6e:	ror    ah,0x7f
  42ac71:	push   esp
  42ac72:	int3   
  42ac73:	int3   
  42ac74:	xchg   edi,eax
  42ac75:	push   esp
  42ac76:	int3   
  42ac77:	int3   
  42ac78:	(bad)  
  42ac79:	push   esp
  42ac7a:	int3   
  42ac7b:	int3   
  42ac7c:	dec    BYTE PTR [ebp-0x7a07c14]
  42ac82:	mov    BYTE PTR [ebp+0x53],al
  42ac85:	mov    WORD PTR [eax+0x4],?
  42ac88:	dec    ebx
  42ac89:	adc    BYTE PTR [eax+ecx*4-0x74fff6b5],al
  42ac90:	jle    0x42aca3
  42ac92:	mov    DWORD PTR [ecx+0x4f],edx
  42ac95:	mov    edx,gs
  42ac97:	or     dl,bh
  42ac99:	jae    0x42ac22
  42ac9b:	push   ebp
  42ac9c:	pop    ds
  42ac9d:	xchg   ebp,eax
  42ac9e:	inc    ebx
  42ac9f:	or     al,cl
  42aca1:	dec    ecx
  42aca2:	or     BYTE PTR [ecx+0x45c5598e],cl
	...
  42acd0:	dec    DWORD PTR [ecx]
  42acd2:	add    BYTE PTR [eax],al
  42acd4:	dec    ebx
  42acd5:	je     0x42acde
  42acd7:	mov    edi,DWORD PTR [esi+0x5d]
  42acda:	add    ecx,0xfc4b924a
  42ace0:	shl    BYTE PTR [esi+0x557e3bfb],1
  42ace6:	jno    0x42ad2e
  42ace8:	rol    dh,0xfb
  42aceb:	mov    edx,DWORD PTR [esi]
  42aced:	pop    ecx
  42acee:	or     eax,0xbeca57b7
  42acf3:	cli    
  42acf4:	inc    edi
  42acf5:	mov    edx,?
  42acf7:	add    esi,DWORD PTR [esi]
  42acf9:	sbb    ecx,DWORD PTR [ecx+0x4b94a745]
  42acff:	lock dec esp
  42ad01:	cwde   
  42ad02:	adc    al,0x41
  42ad04:	retf   0xfd6b
  42ad07:	cmovnp ecx,DWORD PTR [ecx]
  42ad0a:	xchg   DWORD PTR [ebp-0x7d],edx
  42ad0d:	xchg   esp,eax
  42ad0e:	inc    ebx
  42ad0f:	or     al,dl
  42ad11:	into   
  42ad12:	or     eax,DWORD PTR [ebx]
  42ad14:	inc    ebx
  42ad15:	xchg   esp,eax
  42ad16:	push   ebx
  42ad17:	clc    
  42ad18:	rol    BYTE PTR ds:0xf90e030f,0x88
  42ad1f:	dec    ebp
  42ad20:	push   ebx
  42ad21:	xchg   esp,eax
  42ad22:	push   ebx
  42ad23:	or     al,0x48
  42ad25:	cli    
  42ad26:	mov    BYTE PTR [ebp+0x53],cl
  42ad29:	xchg   edx,eax
  42ad2a:	add    al,0xa
  42ad2c:	xor    BYTE PTR [edx-0x6bacaa77],dh
  42ad32:	inc    ebx
  42ad33:	or     BYTE PTR [eax],al
	...
  42ad59:	add    BYTE PTR [eax],al
  42ad5b:	add    BYTE PTR [eax-0x35],cl
  42ad5e:	add    ecx,DWORD PTR [ecx+0x6be71186]
  42ad64:	and    al,0x60
  42ad66:	std    
  42ad67:	mov    esp,DWORD PTR [esi]
  42ad69:	mov    esi,0x947eccc0
  42ad6e:	in     al,dx
  42ad6f:	sbb    DWORD PTR [edi],0x25
  42ad72:	mov    DWORD PTR [ebp+0x53],eax
  42ad75:	xchg   edx,eax
  42ad76:	inc    ebx
  42ad77:	in     al,0xd0
  42ad79:	int    0xe3
  42ad7b:	mov    ebx,DWORD PTR [esi+0x2f510165]
  42ad81:	xchg   edx,eax
  42ad82:	push   ebx
  42ad83:	call   0x8c2a7358
  42ad88:	ror    DWORD PTR [eax-0x6db50000],cl
  42ad8e:	dec    ebx
  42ad8f:	lock enter 0xefdd,0x0
  42ad94:	push   esp
  42ad95:	test   ecx,edi
  42ad97:	add    BYTE PTR [ebx+0x9],cl
  42ad9a:	mov    DWORD PTR [ebp+0x43],edx
  42ad9d:	or     al,0x53
  42ad9f:	lock ret 0xdfb5
  42ada3:	mov    ecx,DWORD PTR [esi]
  42ada5:	imul   eax,DWORD PTR [ecx+0xd093b78],0x8ae84
  42adaf:	add    BYTE PTR [ecx],ah
  42adb1:	or     DWORD PTR [edx+0x0],ebp
  42adb4:	ror    ch,1
  42adb6:	fisttp WORD PTR [ebx+0x51011116]
  42adbc:	inc    edi
  42adbd:	mov    ebx,0x15fc
	...
  42ade6:	add    BYTE PTR [eax],al
  42ade8:	mov    bl,0xb5
  42adea:	ds add dl,dl
  42aded:	(bad)  
  42adf0:	push   es
  42adf1:	imul   eax,DWORD PTR [ecx+0x16d54b38],0x8968fe8b
  42adfb:	push   ebp
  42adfc:	push   ebx
  42adfd:	or     cl,BYTE PTR [edi]
  42adff:	mov    DWORD PTR [esi+0x2b45896d],edx
  42ae05:	xchg   ebx,eax
  42ae06:	dec    ebx
  42ae07:	or     BYTE PTR [eax-0x2f],cl
  42ae0a:	jns    0x182c03a6
  42ae10:	shl    BYTE PTR [edi+ebx*8+0x1118e8b],1
  42ae17:	inc    edx
  42ae18:	cmp    edx,DWORD PTR [eax-0x332f0bbd]
  42ae1e:	fisttp WORD PTR [ebx+0x11011196]
  42ae24:	ret    0xebb4
  42ae27:	mov    DWORD PTR [esi+0x4b000061],0xeb458909
  42ae31:	mov    bh,BYTE PTR [eax+0x10]
  42ae34:	dec    ebx
  42ae35:	aad    0xc
  42ae37:	mov    edi,DWORD PTR [esi+0x69]
  42ae3a:	cmp    DWORD PTR [ecx],0xc704d54b
  42ae40:	push   es
  42ae41:	popa   
  42ae42:	(bad)  
  42ae43:	dec    DWORD PTR [ebx+0x9]
  42ae46:	mov    DWORD PTR [ebp-0x49],edx
  42ae49:	mov    bh,BYTE PTR [edx]
	...
  42ae73:	add    BYTE PTR [edi],bl
  42ae75:	call   0x92d9f402
  42ae7a:	or     BYTE PTR [ecx+0x9aa],al
  42ae80:	retf   
  42ae81:	aad    0x1b
  42ae83:	mov    ebx,DWORD PTR [esi]
  42ae85:	push   ebp
  42ae86:	mov    DWORD PTR [edx],eax
  42ae88:	es pop esi
  42ae8a:	std    
  42ae8b:	push   esp
  42ae8d:	mov    eax,0xb86f4d88
  42ae92:	out    0xb5,eax
  42ae94:	pop    si
  42ae96:	std    
  42ae97:	add    DWORD PTR [edi+0x77458711],0x72
  42ae9e:	sbb    al,0x8b
  42aea0:	not    BYTE PTR [ecx+ecx*4+0x2]
  42aea4:	ror    bl,1
  42aea6:	pop    es
  42aea7:	lea    edx,[edi-0x3fadfdef]
  42aead:	ret    
  42aeae:	sti    
  42aeaf:	push   eax
  42aeb0:	and    esi,DWORD PTR [esi-0x5]
  42aeb3:	jmp    DWORD PTR [edx+ecx*4]
  42aeb6:	les    ecx,FWORD PTR [eax]
  42aeb8:	rol    bl,cl
  42aeba:	fisttp DWORD PTR [ebx+0x55895586]
  42aec0:	out    dx,eax
  42aec1:	(bad)  
  42aec2:	jnp    0xc0c40456
  42aec8:	inc    edi
  42aec9:	nop
  42aeca:	inc    ebx
  42aecb:	hlt    
  42aecc:	ror    bl,0xeb
  42aecf:	or     DWORD PTR [edx],0x5
  42aed2:	xchg   DWORD PTR [ebp-0x9],ecx
  42aed5:	jno    0x42ae6c
  42aed7:	mov    eax,DWORD PTR [eax]
	...
  42aefd:	add    BYTE PTR [eax],al
  42aeff:	add    BYTE PTR [esi+0x69],dh
  42af02:	add    edx,0xe053903f
  42af08:	loop   0x42af18
  42af0a:	std    
  42af0b:	inc    esp
  42af0d:	xchg   ecx,eax
  42af0e:	jecxz  0x42af6d
  42af10:	mov    BYTE PTR [esp+ecx*8-0x34],cl
  42af14:	push   ds
  42af15:	xchg   edx,eax
  42af16:	in     al,dx
  42af17:	sbb    DWORD PTR [edi+0x49f06810],0xffffffc9
  42af1e:	(bad)  
  42af1f:	(bad)  
  42af20:	ss dec ecx
  42af22:	push   ebx
  42af23:	inc    ecx
  42af24:	dec    ebx
  42af25:	nop
  42af26:	inc    ebx
  42af27:	clc    
  42af28:	and    ebx,DWORD PTR [ebp+0x2]
  42af2b:	inc    eax
  42af2c:	dec    ebx
  42af2d:	xchg   edx,eax
  42af2e:	inc    ebx
  42af2f:	clc    
  42af30:	sbb    esi,DWORD PTR [ecx+0x3e]
  42af33:	std    
  42af34:	je     0x42af93
  42af36:	add    esp,0xfc439043
  42af3c:	ror    bl,1
  42af3e:	sqrtps xmm2,xmm0
  42af41:	mov    bl,0xb
  42af43:	push   edx
  42af44:	rol    bl,0x7
  42af47:	push   eax
  42af48:	dec    esp
  42af49:	mov    bl,0xfb
  42af4b:	mov    ebp,DWORD PTR [esi]
  42af4d:	mov    edi,0x4e0fccc0
  42af52:	int3   
  42af53:	int3   
  42af54:	sahf   
  42af55:	nop
  42af56:	in     al,dx
  42af57:	mov    eax,ds:0x3eb34f
  42af5c:	or     eax,0x368b680a
  42af61:	cmc    
  42af62:	push   ebp
  42af63:	inc    ecx
	...
  42af8c:	dec    ebx
  42af8d:	xchg   edx,eax
  42af8e:	push   eax
  42af8f:	add    ecx,ebx
  42af91:	dec    eax
  42af92:	mov    BYTE PTR [eax+0x4e],dl
  42af95:	mov    esi,0x4e0fccc0
  42af9a:	int3   
  42af9b:	int3   
  42af9c:	sahf   
  42af9d:	nop
  42af9e:	in     al,dx
  42af9f:	sbb    edi,0xd
  42afa2:	lahf   
  42afa3:	adc    BYTE PTR [ebp-0x36],bh
  42afa6:	dec    DWORD PTR [edx+0x3ec718f9]
  42afac:	ror    cl,0x2f
  42afaf:	mov    edi,ecx
  42afb1:	nop
  42afb2:	sar    BYTE PTR [esi],cl
  42afb4:	rcl    cl,1
  42afb6:	or     ecx,DWORD PTR [ebx-0xbb46d67]
  42afbc:	rol    dh,0xf3
  42afbf:	mov    eax,DWORD PTR [ebx]
  42afc1:	or     eax,0x90a34d87
  42afc6:	push   ebx
  42afc7:	clc    
  42afc8:	shl    BYTE PTR [esi+0x94ab8fb],cl
  42afce:	add    BYTE PTR [eax],al
  42afd0:	(bad)  
  42afd1:	dec    ecx
  42afd2:	je     0x42b018
  42afd4:	enter  0xf7de,0x0
  42afd8:	test   BYTE PTR [ecx+esi*1],0xc0
  42afdc:	pusha  
  42afdd:	sbb    eax,0x90734d89
  42afe2:	dec    edi
  42afe3:	sbb    BYTE PTR [eax],ah
  42afe5:	mov    dh,0x7
  42afe7:	jne    0x42b02b
  42afe9:	nop
  42afea:	inc    ebx
  42afeb:	clc    
  42afec:	ror    dh,0xb
  42afef:	mov    DWORD PTR [eax],eax
	...
  42b015:	add    BYTE PTR [eax],al
  42b017:	add    BYTE PTR [ebx],al
  42b019:	std    
  42b01a:	mov    BYTE PTR [ebp+0x43],dl
  42b01d:	nop
  42b01e:	inc    ebx
  42b01f:	adc    dl,dl
  42b021:	(bad)  
  42b022:	pop    ss
  42b023:	mov    eax,0x94a
  42b028:	and    BYTE PTR [ecx],al
  42b02a:	mov    DWORD PTR [ebp+0x23],ecx
  42b02d:	nop
  42b02e:	jns    0x45cc11aa
  42b034:	adc    esp,DWORD PTR [eax]
  42b036:	inc    ebx
  42b037:	cld    
  42b038:	xchg   esi,eax
  42b039:	add    eax,0x4f0c031
  42b03e:	jmp    0x898be8f6
  42b043:	in     eax,0x96
  42b045:	dec    eax
  42b046:	int3   
  42b047:	int3   
  42b048:	dec    DWORD PTR [esp+ecx*8-0x34]
  42b04c:	pop    ss
  42b04d:	dec    ebp
  42b04e:	int3   
  42b04f:	int3   
  42b050:	cmovge ecx,esp
  42b053:	int3   
  42b054:	jle    0x42afe6
  42b056:	in     al,dx
  42b057:	sbb    edi,0x0
  42b05a:	lds    eax,FWORD PTR [ebp-0x3d]
  42b05d:	or     BYTE PTR [eax],dh
  42b05f:	add    BYTE PTR [ebx-0xf],cl
  42b062:	add    eax,DWORD PTR [ebx]
  42b064:	or     ecx,DWORD PTR [ecx]
  42b066:	lahf   
  42b067:	cld    
  42b068:	push   ss
  42b069:	retf   0x4fff
  42b06c:	mov    bl,0xb7
  42b06e:	sti    
  42b06f:	call   FWORD PTR [edi+eax*4-0x3a3df73c]
  42b076:	repz push 0xb
  42b079:	nop
  42b07a:	dec    ebx
  42b07b:	clc    
	...
  42b0a4:	sbb    dl,BYTE PTR [eax-0x35e923ed]
  42b0aa:	dec    DWORD PTR [edx+0x6a4fb909]
  42b0b0:	dec    ebx
  42b0b1:	pop    esp
  42b0b2:	push   ebx
  42b0b3:	hlt    
  42b0b4:	test   al,0x34
  42b0b6:	push   ebx
  42b0b7:	inc    ecx
  42b0b8:	dec    ebx
  42b0b9:	mov    BYTE PTR [ebx],bh
  42b0bb:	aam    0xfe
  42b0bd:	leave  
  42b0be:	(bad)  
  42b0bf:	call   esi
  42b0c1:	add    edi,DWORD PTR [eax+0x94b02]
  42b0c7:	jmp    0x42b07a
  42b0c9:	mov    cs,WORD PTR [ebx]
  42b0cb:	add    BYTE PTR [ecx-0x37],cl
  42b0ce:	dec    DWORD PTR [eax+0x68597e]
  42b0d4:	jle    0x42b0de
  42b0d6:	add    BYTE PTR [eax+0x4b],ch
  42b0d9:	pop    es
  42b0da:	inc    eax
  42b0db:	add    al,al
  42b0dd:	hlt    
  42b0de:	rcl    DWORD PTR [ebp-0x76],cl
  42b0e1:	or     DWORD PTR [edi-0x3e],edi
  42b0e4:	dec    ebx
  42b0e5:	pop    es
  42b0e6:	add    BYTE PTR [eax],al
  42b0e8:	cdq    
  42b0e9:	jno    0x42b089
  42b0eb:	(bad)  
  42b0ec:	hlt    
  42b0ed:	pop    edx
  42b0ee:	add    esp,0x200a13f
  42b0f4:	mov    ecx,DWORD PTR [ecx]
  42b0f6:	sub    eax,DWORD PTR [eax]
  42b0f8:	dec    ecx
  42b0f9:	or     DWORD PTR [eax],eax
  42b0fb:	mov    eax,DWORD PTR [esi+0x35]
  42b0fe:	push   ebx
  42b0ff:	inc    ecx
  42b100:	dec    ebx
  42b101:	cs enter 0x5689,0x5
  42b106:	push   esi
  42b107:	inc    ecx
	...
  42b130:	dec    ebx
  42b131:	mov    ss,WORD PTR [ebx]
  42b133:	add    al,0x1d
  42b135:	enter  0x51ff,0xea
  42b139:	xor    eax,0xb94b4153
  42b13e:	mov    BYTE PTR [ebp-0x65],cl
  42b141:	mov    eax,0x5a979de7
  42b146:	std    
  42b147:	add    DWORD PTR [edi-0x60ea76f3],0xffffffb4
  42b14e:	add    BYTE PTR ds:[eax-0x4c],cl
  42b152:	pop    es
  42b153:	mov    DWORD PTR [esi],ebx
  42b155:	jno    0x42b0e0
  42b157:	push   ebp
  42b158:	arpl   WORD PTR [edx-0x1e],bx
  42b15b:	mov    ebp,DWORD PTR [esi-0x44]
  42b15e:	ror    ah,0x8f
  42b161:	dec    ebp
  42b162:	int3   
  42b163:	int3   
  42b164:	dec    BYTE PTR [ebp+0x11068bec]
  42b16a:	cmp    DWORD PTR [ebp+0x57],eax
  42b16d:	(bad)  
  42b16e:	add    al,0x8b
  42b170:	xchg   BYTE PTR [ecx],dl
  42b172:	jmp    0x8948d17c
  42b177:	inc    ebp
  42b178:	aas    
  42b179:	mov    esp,0x4d17ccc0
  42b17e:	int3   
  42b17f:	int3   
  42b180:	cmovge ecx,esp
  42b183:	int3   
  42b184:	jle    0x42b114
  42b186:	in     al,dx
  42b187:	sbb    DWORD PTR [edi],0x2d
  42b18a:	lds    eax,FWORD PTR [ebp+0x7]
  42b18d:	or     DWORD PTR [eax+0x1],esi
  42b190:	dec    ebx
  42b191:	mov    es,WORD PTR [ebx+0x8]
	...
  42b1bc:	ret    0xd7c3
  42b1bf:	mov    edi,DWORD PTR [esi+0x41]
  42b1c2:	mov    DWORD PTR [ebp+0x53],edx
  42b1c5:	push   es
  42b1c6:	dec    edi
  42b1c7:	cmp    al,0xd2
  42b1c9:	mov    bl,0xdf
  42b1cb:	mov    ecx,DWORD PTR [esi-0x7c48f297]
  42b1d1:	cmc    
  42b1d2:	mov    BYTE PTR [ebp-0x55],dl
  42b1d5:	mov    eax,DWORD PTR [edx+ecx*1+0x63]
  42b1d9:	nop
  42b1da:	inc    ebx
  42b1db:	call   0x4043a703
  42b1e0:	dec    ebx
  42b1e1:	mov    cs,WORD PTR [ebx]
  42b1e3:	cld    
  42b1e4:	inc    bh
  42b1e6:	call   DWORD PTR [eax-0x4d]
  42b1e9:	leave  
  42b1ea:	clc    
  42b1eb:	call   DWORD PTR [ebp+eax*4-0x3c3df73c]
  42b1f2:	out    dx,eax
  42b1f3:	push   0xb
  42b1f5:	icebp  
  42b1f6:	jmp    FWORD PTR [edi]
  42b1f8:	dec    ebx
  42b1f9:	or     DWORD PTR [eax+0x0],ebp
  42b1fc:	sti    
  42b1fd:	pop    es
  42b1fe:	add    BYTE PTR [edx+0x4b],ch
  42b201:	pop    edx
  42b202:	push   ebx
  42b203:	lock rol bl,cl
  42b206:	jecxz  0x42b193
  42b208:	imul   BYTE PTR [eax-0x77]
  42b20b:	inc    edx
  42b20c:	(bad)  
  42b20d:	mov    eax,0xb8434d88
  42b212:	mov    BYTE PTR [ebp+0x2f],dl
  42b215:	mov    esp,0x593ec1e7
  42b21a:	std    
  42b21b:	or     DWORD PTR [edi],0x6
  42b21e:	lds    eax,FWORD PTR [ebp+0x0]
	...
  42b245:	add    BYTE PTR [eax],al
  42b247:	add    BYTE PTR [edi],dh
  42b249:	or     al,BYTE PTR [eax]
  42b24b:	add    BYTE PTR [ebx+0x64],cl
  42b24e:	pop    es
  42b24f:	mov    eax,DWORD PTR [esi+0x4ac0815d]
  42b255:	add    BYTE PTR [ebx-0xc],0xc0
  42b259:	(bad)  
  42b25a:	fisttp WORD PTR [edi]
  42b25c:	mov    esp,0x963905ba
  42b261:	pop    ebp
  42b262:	jno    0x42b2bd
  42b264:	ror    dh,0xe7
  42b267:	xor    DWORD PTR [ebx-0x3],0xffffffff
  42b26b:	jae    0x42b1fb
  42b26d:	test   BYTE PTR [ebx-0x18],cl
  42b270:	enter  0xfd2,0x0
  42b274:	pop    edi
  42b275:	adc    eax,0x84e35589
  42b27a:	inc    edx
  42b27b:	adc    al,dl
  42b27d:	(bad)  
  42b27e:	fisttp WORD PTR [ebx+0x448b151a]
  42b284:	pop    ebx
  42b285:	pop    eax
  42b286:	mov    DWORD PTR [ebp-0x55],ecx
  42b289:	sbb    al,0xd2
  42b28b:	neg    DWORD PTR [edx]
  42b28d:	adc    eax,0x8ab5589
  42b292:	lods   eax,DWORD PTR ds:[esi]
  42b293:	inc    edx
  42b294:	push   edi
  42b295:	mov    ecx,0x84a34588
  42b29a:	dec    ebx
  42b29b:	or     BYTE PTR [eax-0x3f],cl
  42b29e:	adc    edx,DWORD PTR [ecx-0x30]
  42b2a1:	mov    esi,0x6d0e8be7
  42b2a6:	add    DWORD PTR [edx+0x3f],eax
  42b2a9:	mov    ecx,0x55e7
	...
  42b2d2:	add    BYTE PTR [eax],al
  42b2d4:	pop    ax
  42b2d6:	std    
  42b2d7:	add    DWORD PTR [edi+0x634d8905],0xffffff8c
  42b2de:	mov    edi,0xe7c6c228
  42b2e3:	jmp    0x42b2be
  42b2e5:	adc    DWORD PTR [ebx-0x1c],0xffffff99
  42b2e9:	popa   
  42b2ea:	push   cs
  42b2eb:	cld    
  42b2ec:	xor    al,0x58
  42b2ee:	add    esp,0x323e147
  42b2f4:	mov    ecx,DWORD PTR [ecx]
  42b2f6:	lahf   
  42b2f7:	cld    
  42b2f8:	jbe    0x42b2c4
  42b2fa:	dec    DWORD PTR [edi+0x23]
  42b2fd:	test   dl,bh
  42b2ff:	dec    DWORD PTR [esp+ecx*4]
  42b302:	les    ecx,FWORD PTR [eax]
  42b304:	ror    ch,cl
  42b306:	fild   DWORD PTR [ebx+0x4153513e]
  42b30c:	dec    ebx
  42b30d:	or     DWORD PTR [ebx+0xa],esi
  42b310:	rol    BYTE PTR ds:0x98a55f0,0x4f
  42b317:	push   DWORD PTR [esi+0x35]
  42b31a:	cmp    DWORD PTR ds:0x3ebdd3,0x6a1bde4b
  42b324:	or     esp,ecx
  42b326:	jmp    FWORD PTR [edi]
  42b328:	dec    ebx
  42b329:	or     DWORD PTR [ecx-0x774548ab],ecx
  42b32f:	inc    ebp
  42b330:	stos   DWORD PTR es:[edi],eax
  42b331:	or     DWORD PTR [eax+0x34],0xfffffffa
  42b335:	push   edi
  42b336:	push   ebx
  42b337:	lock add BYTE PTR [eax],al
	...
  42b35e:	add    BYTE PTR [eax],al
  42b360:	call   0x4b8406a1
  42b365:	adc    ebp,DWORD PTR fs:[edx+0xb]
  42b369:	loope  0x42b36a
  42b36b:	das    
  42b36c:	dec    ebx
  42b36d:	or     DWORD PTR [ecx+0x69ba7f55],ecx
  42b373:	add    BYTE PTR [ebp+edi*4-0x11],dh
  42b377:	mov    ds:0x3ebd97,eax
  42b37c:	enter  0xd415,0x55
  42b380:	or     cl,BYTE PTR [ecx]
  42b382:	add    BYTE PTR [ebp+0x3e],dh
  42b385:	jecxz  0x42b3c6
  42b387:	push   0x194b
  42b38c:	ror    ah,1
  42b38e:	sti    
  42b38f:	push   eax
  42b390:	mov    cl,0x9
  42b392:	std    
  42b393:	push   ebp
  42b394:	cmp    ebp,DWORD PTR [ebx+0x98a55d4]
  42b39a:	mov    DWORD PTR [ebp+0x2f],ecx
  42b39d:	or     DWORD PTR [ebx-0x28],0x8bd7bcd0
  42b3a4:	mov    ?,WORD PTR [ecx]
  42b3a6:	add    DWORD PTR [edx+0x4f],eax
  42b3a9:	add    BYTE PTR [ebx-0x20],0xd0
  42b3ad:	(bad)  
  42b3ae:	sti    
  42b3af:	push   ecx
  42b3b0:	sar    BYTE PTR [ebx+eiz*8+0x533daa52],1
  42b3b7:	inc    ecx
  42b3b8:	dec    ebx
  42b3b9:	mov    ecx,0x56e795e7
  42b3be:	std    
  42b3bf:	add    DWORD PTR [edi],0x6
  42b3c2:	mov    DWORD PTR [ebp+0x0],ecx
	...
  42b3e9:	add    BYTE PTR [eax],al
  42b3eb:	add    bl,ch
  42b3ed:	mov    dh,BYTE PTR [edi+0x94ba4]
  42b3f3:	add    BYTE PTR [edi],bh
  42b3f5:	adc    ecx,DWORD PTR [ecx+0x4382ab55]
  42b3fb:	fmul   DWORD PTR [eax-0x75]
  42b3fe:	mov    al,ds:0x87094b00
  42b403:	inc    ebp
  42b404:	mov    bh,0x82
  42b406:	dec    ebx
  42b407:	loopne 0x42b3d9
  42b409:	cld    
  42b40a:	rcl    DWORD PTR [ebp+0xa],cl
  42b40d:	or     DWORD PTR [ecx],ebp
  42b40f:	push   ecx
  42b410:	push   edi
  42b411:	adc    BYTE PTR [ebx],0x4
  42b414:	sbb    eax,0x47a0ffc8
  42b419:	mov    edi,0x821b003e
  42b41e:	or     edx,esp
  42b420:	push   ss
  42b421:	enter  0x50ff,0xd0
  42b425:	mov    esp,0xd67352eb
  42b42a:	stc    
  42b42b:	call   DWORD PTR [edx+ecx*4-0x3c]
  42b42f:	or     al,0xc0
  42b431:	int3   
  42b432:	fisttp WORD PTR [ebx+0x41533d56]
  42b438:	dec    ebx
  42b439:	or     cl,BYTE PTR [eax+0x28]
  42b43c:	ret    0x1403
  42b43f:	push   esi
  42b440:	mov    cl,BYTE PTR [ecx]
  42b442:	cmp    DWORD PTR ds:0x3ebc23,0x8b2adc4b
  42b44c:	ds cmp eax,0x4153
	...
  42b476:	add    BYTE PTR [eax],al
  42b478:	dec    ebx
  42b479:	mov    ebx,0xc89d149e
  42b47e:	dec    DWORD PTR [edi-0x30]
  42b481:	add    esi,eax
  42b483:	push   ebp
  42b484:	mov    cl,BYTE PTR [ecx]
  42b486:	dec    edi
  42b487:	call   0x4009ff
  42b48c:	enter  0xc4c,0x8b
  42b490:	ss cmp eax,0xbb4b4153
  42b496:	out    0x49,eax
  42b498:	rcl    BYTE PTR [ebp-0x3],cl
  42b49b:	or     DWORD PTR [edi+0x3361e90c],0x1d
  42b4a2:	add    DWORD PTR [eax+0x4b],eax
  42b4a5:	test   al,0xfc
  42b4a7:	push   ebp
  42b4a8:	or     cl,BYTE PTR [ecx]
  42b4aa:	push   eax
  42b4ab:	call   0x4004af
  42b4b0:	enter  0x84c,0x89
  42b4b4:	push   cs
  42b4b5:	cmp    eax,0xbb770d89
  42b4ba:	add    BYTE PTR ds:[edx],bl
  42b4bd:	adc    BYTE PTR [ebx-0x20],0xaa
  42b4c1:	cmp    al,0x53
  42b4c3:	inc    ecx
  42b4c4:	dec    ebx
  42b4c5:	or     al,BYTE PTR [edx+0x28]
  42b4c8:	sbb    eax,DWORD PTR [edx-0x38010ff5]
  42b4ce:	call   DWORD PTR [eax+0x73]
  42b4d1:	and    eax,0x8954fffc
  42b4d6:	les    ecx,FWORD PTR [eax+eax*8]
  42b4d9:	sti    
  42b4da:	out    dx,eax
  42b4db:	push   ebp
	...
  42b504:	mov    cl,BYTE PTR [ecx]
  42b506:	jg     0x42b4ca
  42b508:	fwait
  42b509:	mov    eax,0xfec2fffe
  42b50e:	sbb    edx,DWORD PTR [esi-0x76]
  42b511:	or     DWORD PTR [ebx+0x69ba2345],ecx
  42b517:	inc    eax
  42b518:	mov    cl,0xb
  42b51a:	mov    DWORD PTR ds:0x3ebb37,ecx
  42b520:	jp     0x42b576
  42b522:	push   ebx
  42b523:	aam    0xf3
  42b525:	push   0x91fcfff9
  42b52a:	(bad)  
  42b52b:	dec    DWORD PTR [ebx+0x9]
  42b52e:	mov    ebp,esp
  42b530:	mov    es,WORD PTR [edi+0x4]
  42b533:	add    BYTE PTR [edi],dl
  42b535:	inc    esi
  42b536:	int3   
  42b537:	int3   
  42b538:	cmovbe ecx,esp
  42b53b:	int3   
  42b53c:	jle    0x42b4be
  42b53e:	in     al,dx
  42b53f:	mov    eax,DWORD PTR [esi-0x38bf76ff]
  42b545:	mov    dh,0xc0
  42b547:	int3   
  42b548:	pop    DWORD PTR [ebp-0x34]
  42b54b:	int3   
  42b54c:	push   ds
  42b54d:	sub    ah,0x53
  42b550:	adc    eax,0xab3d88bc
  42b555:	mov    esi,0xf6d0003e
  42b55a:	jmp    0x42b5b1
  42b55c:	or     cl,BYTE PTR [ecx]
  42b55e:	mov    DWORD PTR ds:0x3ebe73,esi
  42b564:	and    al,0xb3
  42b566:	pop    eax
  42b567:	pop    ebp
	...
  42b590:	mov    BYTE PTR [ebp-0x34],al
  42b593:	int3   
  42b594:	push   ds
  42b595:	sub    ah,0x51
  42b598:	jecxz  0x42b566
  42b59a:	add    BYTE PTR [eax+0x4b],al
  42b59d:	stos   BYTE PTR es:[edi],al
  42b59e:	cld    
  42b59f:	push   ebp
  42b5a0:	or     cl,BYTE PTR [ecx]
  42b5a2:	push   eax
  42b5a3:	call   0x40074f
  42b5a8:	enter  0x84d,0x89
  42b5ac:	mov    ss,WORD PTR [ebp-0x77]
  42b5af:	dec    ebp
  42b5b0:	push   ebx
  42b5b1:	mov    edx,0xfdc00069
  42b5b6:	pop    ss
  42b5b7:	push   esi
  42b5b8:	mov    cl,BYTE PTR [ecx]
  42b5ba:	push   edx
  42b5bb:	(bad)  
  42b5bc:	jle    0x42b613
  42b5be:	mov    ebp,esp
  42b5c0:	jle    0x42b60a
  42b5c2:	int3   
  42b5c3:	int3   
  42b5c4:	jle    0x42b546
  42b5c6:	in     al,dx
  42b5c7:	sbb    DWORD PTR [edi],0x2d
  42b5ca:	lds    eax,FWORD PTR [ebp+0x3]
  42b5cd:	or     DWORD PTR [eax],eax
  42b5cf:	add    BYTE PTR [ebx+0x4c],cl
  42b5d2:	inc    ebx
  42b5d3:	fdiv   QWORD PTR [ebx+0x9]
  42b5d6:	add    BYTE PTR [eax],al
  42b5d8:	add    al,0xce
  42b5da:	repz add DWORD PTR [ebx+0x9],ecx
  42b5de:	add    bh,al
  42b5e0:	xchg   BYTE PTR [ebp+0x0],dl
  42b5e3:	add    BYTE PTR [ebx+0x9],cl
  42b5e6:	lds    eax,FWORD PTR [ebp-0x19]
  42b5e9:	or     BYTE PTR [eax],al
  42b5eb:	add    BYTE PTR [ebx-0x80],cl
  42b5ee:	dec    ebx
  42b5ef:	or     dl,dl
  42b5f1:	add    eax,0x55f0
	...
  42b61a:	add    BYTE PTR [eax],al
  42b61c:	or     cl,BYTE PTR [ecx]
  42b61e:	call   0xfd966acc
  42b623:	mov    eax,ds:0x3ebd9b
  42b628:	push   sp
  42b62a:	std    
  42b62b:	add    BYTE PTR [ebx-0x23],cl
  42b62e:	or     eax,edi
  42b630:	inc    esi
  42b631:	push   ecx
  42b632:	push   ebx
  42b633:	inc    ecx
  42b634:	dec    ebx
  42b635:	or     DWORD PTR [eax],eax
  42b637:	add    BYTE PTR [ebx+0x60],cl
  42b63a:	or     al,bh
  42b63c:	dec    esi
  42b63d:	push   ecx
  42b63e:	push   ebx
  42b63f:	inc    ecx
  42b640:	dec    ebx
  42b641:	or     al,BYTE PTR [eax]
  42b643:	add    BYTE PTR [ebx-0x78],cl
  42b646:	cmp    esi,eax
  42b648:	test   cl,0xff
  42b64b:	(bad)  
  42b64c:	fdivp  st(6),st
  42b64e:	les    eax,FWORD PTR ds:0x3ebd53
  42b654:	dec    ebx
  42b655:	or     DWORD PTR [eax],eax
  42b657:	add    al,cl
  42b659:	adc    al,0xf8
  42b65b:	push   ebp
  42b65c:	mov    cl,BYTE PTR [ecx]
  42b65e:	add    BYTE PTR [ebp+0x3e],dh
  42b661:	(bad)  
  42b663:	(bad)  
  42b664:	ds dec ecx
  42b666:	push   ebx
  42b667:	inc    ecx
  42b668:	dec    ebx
  42b669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b66a:	lock push ebp
  42b66c:	mov    cl,BYTE PTR [ecx]
  42b66e:	mov    DWORD PTR ds:0x3ebd1b,ecx
  42b674:	rol    ah,cl
  42b676:	out    0x8b,eax
  42b678:	push   esi
  42b679:	pop    ecx
  42b67a:	push   ebx
  42b67b:	inc    ecx
  42b67c:	dec    ebx
  42b67d:	jle    0x42b6c2
  42b67f:	call   0x42b684
	...
  42b6a8:	dec    eax
  42b6a9:	(bad)  
  42b6aa:	cmp    ecx,DWORD PTR [ecx+0x4d89618e]
  42b6b0:	repz or BYTE PTR [ebx],0xdc
  42b6b4:	jle    0x42b67e
  42b6b6:	jmp    DWORD PTR [edi+0x7b]
  42b6b9:	push   es
  42b6ba:	inc    eax
  42b6bb:	add    ah,al
  42b6bd:	cld    
  42b6be:	mov    edi,0xa1090a55
  42b6c3:	cld    
  42b6c4:	push   ds
  42b6c5:	enter  0xc6ff,0x46
  42b6c9:	add    eax,0xdc4b4156
  42b6ce:	add    BYTE PTR [eax+0x4b],al
  42b6d1:	loope  0x42b732
  42b6d3:	add    ecx,DWORD PTR [ebx]
  42b6d5:	or     DWORD PTR [ecx+0x3ebc8f15],ecx
  42b6db:	add    BYTE PTR [ecx],bl
  42b6dd:	popa   
  42b6de:	ret    0x7cf7
  42b6e1:	push   edx
  42b6e2:	add    esp,0x5608a643
  42b6e8:	or     cl,BYTE PTR [ecx]
  42b6ea:	std    
  42b6eb:	adc    eax,0x3ebb53
  42b6f0:	test   al,0xf1
  42b6f2:	push   ebp
  42b6f3:	inc    ecx
  42b6f4:	dec    ebx
  42b6f5:	test   al,0xc
  42b6f7:	push   esi
  42b6f8:	or     cl,BYTE PTR [ecx]
  42b6fa:	push   eax
  42b6fb:	call   0x4009ff
  42b700:	enter  0x44c,0x89
  42b704:	mov    ds,WORD PTR [ecx-0x77]
  42b707:	dec    ebp
  42b708:	cmp    edi,DWORD PTR [eax+0xd5e7]
	...
  42b732:	add    BYTE PTR [eax],al
  42b734:	and    eax,0x783fd52
  42b739:	or     eax,0xc87ef4a1
  42b73e:	dec    DWORD PTR [edx+0x6a525976]
  42b744:	dec    ebx
  42b745:	test   al,0xf4
  42b747:	push   ebp
  42b748:	mov    cl,BYTE PTR [ecx]
  42b74a:	push   eax
  42b74b:	call   0x401127
  42b750:	enter  0xc4c,0x8b
  42b754:	xchg   esi,eax
  42b755:	pop    ecx
  42b756:	xchg   DWORD PTR [ebp-0x15],ecx
  42b759:	jge    0x42b7ae
  42b75b:	cld    
  42b75c:	adc    BYTE PTR [edi+ebp*8+0x437e7173],bh
  42b763:	loopne 0x42b780
  42b765:	jle    0x42b7b2
  42b767:	fcomp  QWORD PTR [edx]
  42b769:	popa   
  42b76a:	scas   al,BYTE PTR es:[edi]
  42b76b:	sti    
  42b76c:	mov    ah,0x51
  42b76e:	add    esp,0x5600a643
  42b774:	or     cl,BYTE PTR [ecx]
  42b776:	mov    DWORD PTR ds:0x3ebb4b,edx
  42b77c:	stc    
  42b77d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b77e:	or     al,0x56
  42b780:	or     cl,BYTE PTR [ecx]
  42b782:	add    DWORD PTR [ebp+0x6f],eax
  42b785:	mov    eax,0xbb770d88
  42b78a:	add    BYTE PTR ds:[eax-0x3c],cl
  42b78e:	sti    
  42b78f:	push   ecx
  42b790:	arpl   WORD PTR [ecx],di
  42b792:	idiv   edi
  42b794:	fs test esp,eax
  42b797:	or     al,0x0
	...
  42b7bd:	add    BYTE PTR [eax],al
  42b7bf:	add    al,dl
  42b7c1:	mov    ebx,0x34fe03f3
  42b7c6:	add    DWORD PTR [ebp+0x67],edx
  42b7c9:	jg     0x42b81e
  42b7cb:	in     al,0xd0
  42b7cd:	(bad)  
  42b7ce:	sti    
  42b7cf:	add    eax,DWORD PTR [esi+0x3745872d]
  42b7d5:	test   DWORD PTR [ebx-0x20],ecx
  42b7d8:	pusha  
  42b7d9:	(bad)  
  42b7da:	call   DWORD PTR [ebp-0x76]
  42b7dd:	or     DWORD PTR [edi-0x619ad4b3],eax
  42b7e3:	(bad)  
  42b7e4:	mov    ss,WORD PTR [ecx+0x0]
  42b7e7:	add    BYTE PTR [ebx+0x9],cl
  42b7ea:	jmp    0xf7f987f8
  42b7ef:	or     DWORD PTR [ecx],0x6
  42b7f2:	xchg   DWORD PTR [ebp-0xd],edx
  42b7f5:	test   BYTE PTR [ebx-0x8],al
  42b7f8:	xor    dh,al
  42b7fa:	out    dx,eax
  42b7fb:	jae    0x42b820
  42b7fd:	test   BYTE PTR [ebx],cl
  42b7ff:	hlt    
  42b800:	jbe    0x42b7cc
  42b802:	inc    DWORD PTR [edx]
  42b804:	xchg   BYTE PTR [ecx-0x77],dl
  42b807:	adc    DWORD PTR [eax-0x4a],ecx
  42b80a:	mul    DWORD PTR [ecx+0x3eb6bf]
  42b810:	dec    eax
  42b811:	(bad)  
  42b812:	test   DWORD PTR [ecx-0x7b47ba5],0x3e74aca
  42b81c:	dec    ebx
  42b81d:	or     DWORD PTR [ecx+0x3eb69715],ecx
	...
  42b84b:	add    BYTE PTR [eax-0x4a],cl
  42b84e:	div    DWORD PTR [ebx]
  42b850:	inc    ecx
  42b851:	stos   BYTE PTR es:[edi],al
  42b852:	hlt    
  42b853:	push   ebp
  42b854:	or     cl,BYTE PTR [ecx]
  42b856:	add    DWORD PTR [ebp-0x7d],eax
  42b859:	or     BYTE PTR [eax],0xeb
  42b85c:	mov    esp,0x16e42b82
  42b861:	retf   0x88ff
  42b864:	imul   edx,DWORD PTR es:[ebx+0x41],0x89c71c4b
  42b86c:	push   ds
  42b86d:	xor    DWORD PTR [ebx+0x41],edx
  42b870:	dec    ebx
  42b871:	sbb    al,0xc7
  42b873:	mov    DWORD PTR [esi+0x5d],esp
  42b876:	push   ebx
  42b877:	inc    ecx
  42b878:	dec    ebx
  42b879:	popa   
  42b87a:	dec    esi
  42b87b:	div    DWORD PTR [eax+edx*2]
  42b87e:	mov    ecx,DWORD PTR ds:0x3eb69c
  42b884:	sar    BYTE PTR [ebp+0xb4bb9f7],cl
  42b88a:	inc    eax
  42b88b:	add    dl,cl
  42b88d:	popa   
  42b88e:	add    BYTE PTR [edx],al
  42b890:	dec    ebx
  42b891:	or     DWORD PTR [ecx-0x30dbfcab],ecx
  42b897:	mov    DWORD PTR [esi+0x61],edx
  42b89a:	push   ebx
  42b89b:	inc    ecx
  42b89c:	dec    ebx
  42b89d:	stos   BYTE PTR es:[edi],al
  42b89e:	call   0x504c42f8
  42b8a3:	call   0x400bf7
  42b8a8:	enter  0x444,0x8b
  42b8ac:	inc    esi
  42b8ad:	push   ebp
  42b8ae:	push   ebx
  42b8af:	inc    ecx
	...
  42b8d8:	dec    ebx
  42b8d9:	mov    edx,0x4fc1d5e7
  42b8de:	std    
  42b8df:	test   DWORD PTR [ebx-0x74ccfc2b],ecx
  42b8e5:	arpl   WORD PTR [edx],bp
  42b8e7:	mov    esp,DWORD PTR [esi+0x65]
  42b8ea:	push   ebx
  42b8eb:	inc    ecx
  42b8ec:	dec    ebx
  42b8ed:	mov    esp,es
  42b8ef:	add    al,0xc8
  42b8f1:	or     eax,0x90a55f8
  42b8f6:	add    BYTE PTR [edx+eax*2-0x56],dh
  42b8fa:	aam    0x55
  42b8fc:	or     cl,BYTE PTR [ecx]
  42b8fe:	xchg   DWORD PTR [edi+eiz*1+0x5],eax
  42b902:	call   0xfd922f64
  42b907:	mov    edx,DWORD PTR [esi-0xb]
  42b90a:	push   ebp
  42b90b:	inc    ecx
  42b90c:	dec    ebx
  42b90d:	mov    ebx,0x838b33c0
  42b912:	jecxz  0x42b971
  42b914:	mov    BYTE PTR [esp+ecx*8],bh
  42b917:	int3   
  42b918:	dec    ebx
  42b919:	or     DWORD PTR [eax],eax
  42b91b:	add    BYTE PTR [ebx+0x9],cl
  42b91e:	add    BYTE PTR [eax],al
  42b920:	dec    ebx
  42b921:	or     DWORD PTR [eax],eax
  42b923:	add    BYTE PTR [ebx+0x9],cl
  42b926:	add    BYTE PTR [eax],al
  42b928:	dec    ebx
  42b929:	or     DWORD PTR [eax],eax
  42b92b:	add    BYTE PTR [ebx+0x9],cl
  42b92e:	add    BYTE PTR [eax],al
  42b930:	dec    ebx
  42b931:	or     DWORD PTR [eax],eax
  42b933:	add    BYTE PTR [ebx+0x9],cl
  42b936:	add    BYTE PTR [eax],al
  42b938:	dec    ebx
  42b939:	or     DWORD PTR [eax],eax
	...
  42b963:	add    BYTE PTR [ebx+0x9],cl
  42b966:	add    BYTE PTR [eax],al
  42b968:	dec    ebx
  42b969:	or     DWORD PTR [eax],eax
  42b96b:	add    BYTE PTR [ebx+0x9],cl
  42b96e:	add    BYTE PTR [eax],al
  42b970:	dec    ebx
  42b971:	or     DWORD PTR [eax],eax
  42b973:	add    BYTE PTR [ebx+0x9],cl
  42b976:	add    BYTE PTR [eax],al
  42b978:	dec    ebx
  42b979:	or     DWORD PTR [eax],eax
  42b97b:	add    BYTE PTR [ebx+0x9],cl
  42b97e:	add    BYTE PTR [eax],al
  42b980:	dec    ebx
  42b981:	or     DWORD PTR [eax],eax
  42b983:	add    BYTE PTR [ebx+0x9],cl
  42b986:	add    BYTE PTR [eax],al
  42b988:	dec    ebx
  42b989:	or     DWORD PTR [eax],eax
  42b98b:	add    BYTE PTR [ebx+0x9],cl
  42b98e:	add    BYTE PTR [eax],al
  42b990:	dec    ebx
  42b991:	or     DWORD PTR [eax],eax
  42b993:	add    BYTE PTR [ebx+0x9],cl
  42b996:	add    BYTE PTR [eax],al
  42b998:	dec    ebx
  42b999:	or     DWORD PTR [eax],eax
  42b99b:	add    BYTE PTR [ebx+0x9],cl
  42b99e:	add    BYTE PTR [eax],al
  42b9a0:	dec    ebx
  42b9a1:	or     DWORD PTR [eax],eax
  42b9a3:	add    BYTE PTR [ebx+0x9],cl
  42b9a6:	add    BYTE PTR [eax],al
  42b9a8:	dec    ebx
  42b9a9:	or     DWORD PTR [eax],eax
  42b9ab:	add    BYTE PTR [ebx+0x9],cl
  42b9ae:	add    BYTE PTR [eax],al
  42b9b0:	dec    ebx
  42b9b1:	or     DWORD PTR [eax],eax
  42b9b3:	add    BYTE PTR [ebx+0x9],cl
  42b9b6:	add    BYTE PTR [eax],al
  42b9b8:	dec    ebx
  42b9b9:	or     DWORD PTR [eax],eax
  42b9bb:	add    BYTE PTR [ebx+0x9],cl
  42b9be:	add    BYTE PTR [eax],al
  42b9c0:	dec    ebx
  42b9c1:	or     DWORD PTR [eax],eax
  42b9c3:	add    BYTE PTR [ebx+0x9],cl
	...
  42b9ee:	add    BYTE PTR [eax],al
  42b9f0:	dec    ebx
  42b9f1:	or     DWORD PTR [eax],eax
  42b9f3:	add    BYTE PTR [ebx+0x9],cl
  42b9f6:	add    BYTE PTR [eax],al
  42b9f8:	dec    ebx
  42b9f9:	or     DWORD PTR [eax],eax
  42b9fb:	add    BYTE PTR [ebx+0x9],cl
  42b9fe:	add    BYTE PTR [eax],al
  42ba00:	dec    ebx
  42ba01:	or     DWORD PTR [eax],eax
  42ba03:	add    BYTE PTR [ebx+0x9],cl
  42ba06:	add    BYTE PTR [eax],al
  42ba08:	dec    ebx
  42ba09:	or     DWORD PTR [eax],eax
  42ba0b:	add    BYTE PTR [ebx+0x9],cl
  42ba0e:	add    BYTE PTR [eax],al
  42ba10:	dec    ebx
  42ba11:	or     DWORD PTR [eax],eax
  42ba13:	add    BYTE PTR [ebx+0x9],cl
  42ba16:	add    BYTE PTR [eax],al
  42ba18:	dec    ebx
  42ba19:	or     DWORD PTR [eax],eax
  42ba1b:	add    BYTE PTR [ebx+0x9],cl
  42ba1e:	add    BYTE PTR [eax],al
  42ba20:	dec    ebx
  42ba21:	or     DWORD PTR [eax],eax
  42ba23:	add    BYTE PTR [ebx+0x9],cl
  42ba26:	add    BYTE PTR [eax],al
  42ba28:	dec    ebx
  42ba29:	or     DWORD PTR [eax],eax
  42ba2b:	add    BYTE PTR [ebx+0x9],cl
  42ba2e:	add    BYTE PTR [eax],al
  42ba30:	dec    ebx
  42ba31:	or     DWORD PTR [eax],eax
  42ba33:	add    BYTE PTR [ebx+0x9],cl
  42ba36:	add    BYTE PTR [eax],al
  42ba38:	dec    ebx
  42ba39:	or     DWORD PTR [eax],eax
  42ba3b:	add    BYTE PTR [ebx+0x9],cl
  42ba3e:	add    BYTE PTR [eax],al
  42ba40:	dec    ebx
  42ba41:	or     DWORD PTR [eax],eax
  42ba43:	add    BYTE PTR [ebx+0x9],cl
  42ba46:	add    BYTE PTR [eax],al
  42ba48:	dec    ebx
  42ba49:	or     DWORD PTR [eax],eax
  42ba4b:	add    BYTE PTR [ebx+0x9],cl
  42ba4e:	add    BYTE PTR [eax],al
  42ba50:	dec    ebx
  42ba51:	or     DWORD PTR [eax],eax
	...
  42ba7b:	add    BYTE PTR [ebx+0x9],cl
  42ba7e:	add    BYTE PTR [eax],al
  42ba80:	dec    ebx
  42ba81:	or     DWORD PTR [eax],eax
  42ba83:	add    BYTE PTR [ebx+0x9],cl
  42ba86:	add    BYTE PTR [eax],al
  42ba88:	dec    ebx
  42ba89:	or     DWORD PTR [eax],eax
  42ba8b:	add    BYTE PTR [ebx+0x9],cl
  42ba8e:	add    BYTE PTR [eax],al
  42ba90:	dec    ebx
  42ba91:	or     DWORD PTR [eax],eax
  42ba93:	add    BYTE PTR [ebx+0x9],cl
  42ba96:	add    BYTE PTR [eax],al
  42ba98:	dec    ebx
  42ba99:	or     DWORD PTR [eax],eax
  42ba9b:	add    BYTE PTR [ebx+0x9],cl
  42ba9e:	add    BYTE PTR [eax],al
  42baa0:	dec    ebx
  42baa1:	or     DWORD PTR [eax],eax
  42baa3:	add    BYTE PTR [ebx+0x9],cl
  42baa6:	add    BYTE PTR [eax],al
  42baa8:	dec    ebx
  42baa9:	or     DWORD PTR [eax],eax
  42baab:	add    BYTE PTR [ebx+0x9],cl
  42baae:	add    BYTE PTR [eax],al
  42bab0:	dec    ebx
  42bab1:	or     DWORD PTR [eax],eax
  42bab3:	add    BYTE PTR [ebx+0x9],cl
  42bab6:	add    BYTE PTR [eax],al
  42bab8:	dec    ebx
  42bab9:	or     DWORD PTR [eax],eax
  42babb:	add    BYTE PTR [ebx+0x9],cl
  42babe:	add    BYTE PTR [eax],al
  42bac0:	dec    ebx
  42bac1:	or     DWORD PTR [eax],eax
  42bac3:	add    BYTE PTR [ebx+0x9],cl
  42bac6:	add    BYTE PTR [eax],al
  42bac8:	dec    ebx
  42bac9:	or     DWORD PTR [eax],eax
  42bacb:	add    BYTE PTR [ebx+0x9],cl
  42bace:	add    BYTE PTR [eax],al
  42bad0:	dec    ebx
  42bad1:	or     DWORD PTR [eax],eax
  42bad3:	add    BYTE PTR [ebx+0x9],cl
  42bad6:	add    BYTE PTR [eax],al
  42bad8:	dec    ebx
  42bad9:	or     DWORD PTR [eax],eax
  42badb:	add    bh,bh
  42badd:	and    eax,0x42c100
  42bae2:	jmp    DWORD PTR ds:0x42c104
  42bae8:	jmp    DWORD PTR ds:0x42c108
  42baee:	jmp    DWORD PTR ds:0x42c10c
  42baf4:	jmp    DWORD PTR ds:0x42c114
