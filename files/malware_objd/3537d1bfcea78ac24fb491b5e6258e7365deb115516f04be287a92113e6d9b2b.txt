
3537d1bfcea78ac24fb491b5e6258e7365deb115516f04be287a92113e6d9b2b.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	js     0x411064
  411002:	dec    eax
  411003:	or     cl,BYTE PTR [eax]
  411005:	test   BYTE PTR [edx],al
  411007:	and    al,BYTE PTR ds:0x3010003
  41100d:	inc    ecx
  41100e:	sbb    al,0x2
  411010:	sbb    DWORD PTR [ecx],0x4b
  411013:	ret    0x9b10
  411016:	add    BYTE PTR [eax-0x3f744fc0],cl
  41101c:	test   BYTE PTR [eax],al
  41101e:	add    DWORD PTR [eax],ecx
  411020:	sbb    BYTE PTR [ecx+eax*1],cl
  411023:	dec    esp
  411024:	pusha  
  411025:	add    al,cl
  411027:	inc    edx
  411028:	add    esp,eax
  41102a:	mov    al,ds:0x72345028
  41102f:	push   eax
  411030:	add    BYTE PTR [ecx+0x2],dh
  411033:	sar    DWORD PTR [ebx+0x2d],0x80
  411037:	dec    edx
  411038:	or     dl,BYTE PTR [ecx+ecx*4]
  41103b:	inc    eax
  41103c:	push   es
  41103d:	push   ss
  41103e:	add    ecx,DWORD PTR [eax]
  411040:	or     BYTE PTR [ebx+0x28],ah
  411043:	push   0x2608c148
  411048:	and    BYTE PTR [edx+0x8c04021],0x44
  41104f:	add    al,0x50
  411051:	add    ah,BYTE PTR [ebx-0x67edf000]
  411057:	pusha  
  411058:	and    BYTE PTR [ebx+0x48],dl
  41105b:	mov    eax,0xe04c1422
  411060:	dec    esi
  411061:	add    BYTE PTR [esi+0x4b],ah
  411064:	adc    DWORD PTR [eax],edx
  411066:	mov    BYTE PTR [eax+0x5c],ah
  411069:	add    BYTE PTR [eax],al
  41106b:	cmp    BYTE PTR [edx],al
  41106d:	inc    esi
  41106e:	add    edx,DWORD PTR [edx+0x34484250]
  411074:	add    BYTE PTR [eax],al
  411076:	add    al,0x90
  411078:	or     al,ah
  41107a:	add    BYTE PTR [ecx],0xc9
  41107d:	jl     0x411007
  41107f:	or     eax,DWORD PTR [eax+0x80f5a92]
  411085:	mov    ds:0x7882440,al
  41108a:	or     al,0x80
  41108c:	daa    
  41108d:	add    BYTE PTR [esi],0x2b
  411090:	xchg   ebx,eax
  411091:	add    al,0x40
  411093:	push   ss
  411094:	add    al,0xa9
  411096:	and    al,0x4
  411098:	add    al,0x2
  41109a:	xchg   esp,eax
  41109b:	add    al,0x10
  41109d:	or     al,0x10
  41109f:	add    BYTE PTR [eax+0x0],bl
  4110a2:	adc    cl,BYTE PTR [eax]
  4110a4:	inc    ecx
  4110a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110a6:	adc    al,0xd6
  4110a8:	add    al,ah
  4110aa:	adc    BYTE PTR [eax+eax*1-0x5fbbddbe],dl
  4110b1:	push   ecx
  4110b2:	add    DWORD PTR [edx],esp
  4110b4:	pop    es
  4110b5:	mov    WORD PTR [ecx],es
  4110b7:	push   edx
  4110b8:	clc    
  4110b9:	mov    DWORD PTR [ecx],edx
  4110bb:	add    DWORD PTR [edx+0x43],0xb844648
  4110c2:	imul   eax,DWORD PTR [edx],0x2128031
  4110c8:	add    DWORD PTR [eax+0x1a0a9021],eax
  4110ce:	add    BYTE PTR [edx],0x8
  4110d1:	and    BYTE PTR [ecx+edx*4],al
  4110d4:	test   BYTE PTR [eax],al
  4110d6:	xchg   esp,eax
  4110d7:	adc    DWORD PTR [edx],esp
  4110d9:	and    BYTE PTR [eax-0x7e],cl
  4110dc:	add    BYTE PTR [eax],ah
  4110de:	add    BYTE PTR [esi+0x3a804070],0x90
  4110e5:	mov    BYTE PTR [esp+eax*4+0x50046050],ah
  4110ec:	and    al,0x3
  4110ee:	xor    dl,BYTE PTR ds:0x50280003
  4110f4:	inc    esp
  4110f5:	and    BYTE PTR [ecx],ah
  4110f7:	outs   dx,BYTE PTR ds:[esi]
  4110f8:	push   ss
  4110f9:	add    al,0x96
  4110fb:	fdivr  DWORD PTR [eax]
  4110fd:	or     BYTE PTR [ecx],cl
  4110ff:	add    BYTE PTR [edx+0x28],ah
  411102:	add    BYTE PTR [ecx+0x0],al
  411105:	and    BYTE PTR [edx-0x29],al
  411108:	adc    ecx,edx
  41110a:	dec    edx
  41110b:	add    al,0x90
  41110d:	xchg   ecx,eax
  41110e:	xor    BYTE PTR [eax],al
  411110:	rol    bl,0x83
  411113:	mov    ah,0x13
  411115:	rcl    DWORD PTR [eax],0x4
  411118:	pop    eax
  411119:	mov    dl,0x50
  41111b:	into   
  41111c:	xchg   edx,eax
  41111d:	and    eax,eax
  41111f:	inc    ebx
  411120:	and    ch,dl
  411122:	inc    eax
  411123:	push   eax
  411124:	inc    eax
  411125:	inc    esp
  411126:	push   eax
  411127:	ins    BYTE PTR es:[edi],dx
  411128:	add    eax,0x300a01
  41112d:	add    DWORD PTR [eax+eiz*1],esp
  411130:	or     BYTE PTR [edx],0xc8
  411133:	invd   
  411135:	and    al,0x68
  411137:	inc    esi
  411138:	add    DWORD PTR [edx+0x404a1380],esp
  41113e:	mov    eax,DWORD PTR [ebx+0x49c88010]
  411144:	or     BYTE PTR [eax],dl
  411146:	add    al,0x6
  411148:	or     dl,BYTE PTR [eax+eax*2-0x7e]
  41114c:	and    BYTE PTR [ecx],al
  41114e:	add    BYTE PTR [ecx+esi*4],ah
  411151:	add    ah,BYTE PTR [ecx]
  411153:	add    BYTE PTR [ecx],dl
  411155:	rol    BYTE PTR [ebp+eax*1-0x7d8d7f64],0x43
  41115d:	push   ss
  41115e:	add    DWORD PTR [ecx],eax
  411160:	add    eax,0x114811
  411165:	int3   
  411166:	inc    edx
  411167:	adc    eax,0x100018ca
  41116c:	sub    al,BYTE PTR [esi]
  41116e:	add    DWORD PTR [edx+0x20],edx
  411171:	add    DWORD PTR [eax+0x12],eax
  411174:	dec    esp
  411175:	adc    DWORD PTR [eax],0x30c4c09
  41117b:	inc    esp
  41117c:	or     BYTE PTR [edi+0x483d0404],dl
  411182:	cs xor ecx,eax
  411185:	leave  
  411186:	popa   
  411187:	add    dl,al
  411189:	xor    BYTE PTR [eax],ch
  41118b:	xchg   BYTE PTR [eax+0x1000e26],dl
  411191:	adc    dl,BYTE PTR [edx]
  411193:	ret    
  411194:	and    BYTE PTR [ecx-0x7e],0x2
  411198:	adc    al,0xa0
  41119a:	sbb    BYTE PTR [eax+0xa40080],dl
  4111a0:	add    DWORD PTR [eax],0x12
  4111a3:	inc    eax
  4111a4:	dec    eax
  4111a5:	and    al,0x1
  4111a7:	sub    DWORD PTR [esi],eax
  4111a9:	add    cl,BYTE PTR [ecx+0x42122180]
  4111af:	add    al,0x6
  4111b1:	push   esp
  4111b2:	sub    DWORD PTR [eax],ecx
  4111b4:	add    al,0x80
  4111b6:	add    DWORD PTR [eax],esi
  4111b8:	adc    ah,dl
  4111ba:	pop    eax
  4111bb:	mov    ebp,cr0
  4111be:	add    BYTE PTR [edx],al
  4111c0:	adc    DWORD PTR [ecx],edx
  4111c2:	cmp    bl,BYTE PTR [eax]
  4111c4:	mov    ds:0xdd08406,al
  4111c9:	popa   
  4111ca:	rol    DWORD PTR [eax],1
  4111cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111cd:	and    BYTE PTR [ecx],al
  4111cf:	sahf   
  4111d0:	mov    BYTE PTR [eax],al
  4111d2:	add    BYTE PTR [edx+ebp*1+0x22],cl
  4111d6:	add    BYTE PTR [eax+0x18],dl
  4111d9:	inc    edx
  4111da:	and    DWORD PTR [eax],eax
  4111dc:	push   es
  4111dd:	and    al,0x50
  4111df:	inc    eax
  4111e0:	and    BYTE PTR [ecx],al
  4111e2:	jbe    0x4111e6
  4111e4:	push   0x8400a5
  4111e9:	sbb    BYTE PTR [eax],cl
  4111eb:	ror    DWORD PTR [eax],0x2
  4111ee:	sbb    al,BYTE PTR [eax]
  4111f0:	or     BYTE PTR ds:0x94212205,dl
  4111f6:	add    BYTE PTR [eax-0x77dbefe0],al
  4111fc:	inc    eax
  4111fd:	mov    al,ds:0x6653b61a
  411202:	clc    
  411203:	sbb    BYTE PTR [esi+0x21310140],al
  411209:	bound  esp,QWORD PTR [edx+0x5504d03c]
  41120f:	bound  eax,QWORD PTR [edx+0x60]
  411212:	inc    ebp
  411213:	and    BYTE PTR [ecx+0x10950420],al
  411219:	dec    eax
  41121a:	add    DWORD PTR fs:[eax-0x5f],0x88c60624
  411222:	adc    DWORD PTR [eax],ebp
  411224:	lods   al,BYTE PTR ds:[esi]
  411225:	adc    al,0xe
  411227:	dec    ecx
  411228:	add    BYTE PTR [ebx+0x15000108],bl
  41122e:	dec    esi
  41122f:	add    BYTE PTR [eax+0x5303427],al
  411235:	mov    BYTE PTR es:[esi+0x4a],al
  411239:	mov    BYTE PTR [eax+0x43419011],ah
  41123f:	inc    eax
  411240:	call   0x5044:0x400c1168
  411247:	inc    eax
  411248:	add    BYTE PTR [eax-0x6ef652d8],al
  41124e:	add    al,0x8f
  411250:	adc    ecx,DWORD PTR [ecx]
  411252:	add    al,0xa1
  411254:	or     al,BYTE PTR [edx]
  411256:	inc    esp
  411257:	or     al,0xc1
  411259:	add    BYTE PTR [edi+edx*1+0x4a0a8000],cl
  411260:	pusha  
  411261:	or     ah,ch
  411263:	add    al,BYTE PTR [eax]
  411265:	add    al,0x84
  411267:	loopne 0x4111fd
  411269:	into   
  41126a:	add    BYTE PTR [ecx],al
  41126c:	inc    eax
  41126d:	add    BYTE PTR [eax+ebp*1],al
  411270:	(bad)  
  411271:	mov    al,ds:0x1ad487ab
  411276:	mov    al,ds:0x8e863568
  41127b:	or     BYTE PTR [ecx+0x28b008d4],dl
  411281:	adc    BYTE PTR [eax+eax*1+0x10888602],al
  411288:	mov    BYTE PTR [ecx-0x7dfdb7ee],dl
  41128e:	inc    edx
  41128f:	add    BYTE PTR [esi],dl
  411291:	or     al,0x80
  411293:	and    BYTE PTR [eax],bl
  411295:	xor    BYTE PTR [eax+0x152044b],cl
  41129b:	add    al,0xf0
  41129d:	xor    BYTE PTR [ecx+0x6],0x41
  4112a1:	add    BYTE PTR [edx],al
  4112a3:	push   es
  4112a4:	adc    BYTE PTR [esp+eax*1-0x56],al
  4112a8:	add    DWORD PTR [ecx],eax
  4112aa:	add    BYTE PTR [eax],ah
  4112ac:	inc    eax
  4112ad:	and    esp,ebx
  4112af:	inc    edx
  4112b0:	xchg   BYTE PTR [ecx],cl
  4112b2:	and    al,0x10
  4112b4:	adc    BYTE PTR [edx-0x65ebb198],0x0
  4112bb:	add    DWORD PTR [eax+eax*1+0x18],ebx
  4112bf:	push   esi
  4112c0:	add    dl,BYTE PTR [edx+0x55]
  4112c3:	mov    al,ds:0x6801108
  4112c8:	add    al,0x64
  4112ca:	lock sbb DWORD PTR [edi],eax
  4112cd:	dec    esp
  4112ce:	mov    BYTE PTR [ecx],al
  4112d0:	dec    edx
  4112d1:	pusha  
  4112d2:	ror    BYTE PTR [eax+0x3010259],0x22
  4112d9:	add    BYTE PTR [eax],bh
  4112db:	add    BYTE PTR [eax+0x0],al
  4112de:	add    al,0x21
  4112e0:	add    BYTE PTR [ebx],cl
  4112e2:	dec    eax
  4112e3:	add    DWORD PTR [edi],0x51449100
  4112e9:	or     BYTE PTR [eax],cl
  4112eb:	sbb    edx,ecx
  4112ed:	add    BYTE PTR [eax+0x2],dl
  4112f0:	test   DWORD PTR [eax],edx
  4112f2:	xor    edx,DWORD PTR [edx]
  4112f4:	rcl    BYTE PTR [esi],0x4
  4112f7:	add    cl,BYTE PTR [edi+0x26]
  4112fa:	or     eax,0xc5414d41
  4112ff:	lds    eax,FWORD PTR [eax+0x24]
  411302:	or     BYTE PTR [eax],al
  411304:	sbb    BYTE PTR ds:0x7a61841c,0xc4
  41130b:	inc    edx
  41130c:	add    DWORD PTR [eax+0x402012b],0x1
  411313:	push   ebp
  411314:	inc    edx
  411315:	or     BYTE PTR [eax+0x40226],dl
  41131b:	adc    BYTE PTR [eax],cl
  41131d:	inc    eax
  41131e:	dec    eax
  41131f:	sub    DWORD PTR [eax+eiz*2],esp
  411322:	add    al,0x2c
  411324:	adc    eax,0x21040102
  411329:	and    al,0x0
  41132b:	push   edx
  41132c:	xchg   ecx,eax
  41132d:	mov    BYTE PTR [ecx],al
  41132f:	and    DWORD PTR [edx],eax
  411331:	add    BYTE PTR [eax+0x20ac03b0],dl
  411337:	add    BYTE PTR [ebx],al
  411339:	enter  0x8711,0x2a
  41133d:	add    BYTE PTR [eax],0x2
  411340:	or     eax,DWORD PTR [ebx+0x64610638]
  411346:	mov    ch,0x30
  411348:	adc    al,0x8c
  41134a:	add    eax,0xc2058440
  41134f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411350:	adc    al,0x44
  411352:	and    al,BYTE PTR [edx+0x23]
  411355:	adc    BYTE PTR [esi+0x6011b3],ah
  41135b:	mov    eax,ds:0x221603a0
  411360:	sub    al,BYTE PTR [ebx]
  411362:	inc    esp
  411363:	or     al,BYTE PTR [edx+0x24]
  411366:	or     BYTE PTR [edx+0x21002982],al
  41136c:	sub    BYTE PTR [eax],cl
  41136e:	test   al,0x76
  411370:	and    BYTE PTR [eax],ch
  411372:	add    BYTE PTR [edx+0x290b1428],bl
  411378:	add    al,BYTE PTR [eax]
  41137a:	adc    BYTE PTR ds:0x85039940,ah
  411380:	or     BYTE PTR ds:0x100e4024,al
  411386:	xchg   edx,eax
  411387:	daa    
  411388:	and    dl,BYTE PTR [eax]
  41138a:	or     BYTE PTR [esi+0xb72e],dl
  411390:	xchg   edx,eax
  411391:	add    al,0xf
  411393:	and    eax,0xa819950a
  411398:	mov    ebp,0xe6020852
  41139d:	je     0x4113df
  41139f:	add    BYTE PTR [eax+eiz*1-0x67fe9e8e],0x98
  4113a7:	or     BYTE PTR [eax+ecx*1+0x24],dh
  4113ab:	adc    BYTE PTR [eax],ah
  4113ad:	mov    BYTE PTR [eax+eax*4],dh
  4113b0:	add    BYTE PTR [edx+0x20088011],ah
  4113b6:	cdq    
  4113b7:	add    BYTE PTR [ebx],dl
  4113b9:	or     BYTE PTR [eax],0x49
  4113bc:	rcr    DWORD PTR [eax],0x9
  4113bf:	sbb    DWORD PTR [eax],eax
  4113c1:	adc    BYTE PTR [eax],al
  4113c3:	inc    edx
  4113c4:	aam    0x4
  4113c6:	jb     0x4113d8
  4113c8:	or     al,BYTE PTR [eax+ecx*1+0x10000620]
  4113cf:	inc    esp
  4113d0:	add    BYTE PTR [eax],0x0
  4113d3:	or     DWORD PTR [eax],eax
  4113d5:	ret    0x318
  4113d8:	inc    ecx
  4113d9:	mov    eax,eax
  4113db:	test   al,0x8c
  4113dd:	mov    BYTE PTR [eax-0x80],al
  4113e0:	imul   eax,DWORD PTR [edx+eax*1],0x19208014
  4113e7:	dec    esp
  4113e8:	dec    ebp
  4113e9:	add    esi,eax
  4113eb:	and    BYTE PTR [eax],0xd9
  4113ee:	and    eax,0x102811d8
  4113f3:	inc    eax
  4113f4:	dec    eax
  4113f5:	adc    BYTE PTR [edx+0x19042800],0x8c
  4113fc:	sub    BYTE PTR [ecx+0x20],0x40
  411400:	and    DWORD PTR [eax],edx
  411402:	and    eax,DWORD PTR [ecx+0x22802001]
  411408:	add    eax,DWORD PTR [eax]
  41140a:	add    DWORD PTR [eax+0x4241013],ebx
  411410:	cmp    DWORD PTR [eax+0x900610],eax
  411416:	mov    ds:0x4d230214,al
  41141b:	add    DWORD PTR [eax+0x2c],esp
  41141e:	scas   eax,DWORD PTR es:[edi]
  41141f:	add    BYTE PTR [edx],al
  411421:	add    al,0x1
  411423:	inc    esp
  411424:	and    al,BYTE PTR [ecx]
  411426:	pop    ecx
  411427:	shl    DWORD PTR [ebx],cl
  411429:	adc    BYTE PTR [ebx],ah
  41142b:	mov    BYTE PTR [eax],ah
  41142d:	nop
  41142e:	xor    BYTE PTR [edx*1+0x4886210],al
  411435:	add    al,0x40
  411437:	mov    eax,ds:0x8e488086
  41143c:	adc    ch,BYTE PTR [eax+0x6]
  41143f:	adc    BYTE PTR [eax+0x2d2c088],0x0
  411446:	inc    ecx
  411447:	add    DWORD PTR [edx-0x3fffbcf0],eax
  41144d:	dec    ecx
  41144e:	adc    al,0x98
  411450:	mov    cl,ch
  411452:	xor    BYTE PTR [edx+0x48400020],0xa2
  411459:	add    al,0xab
  41145b:	add    DWORD PTR [ebx+0x9],eax
  41145e:	add    BYTE PTR [edx],ah
  411460:	push   ebp
  411461:	adc    BYTE PTR [eax-0x2c],dl
  411464:	pushf  
  411465:	pusha  
  411466:	enter  0x4e8,0x4
  41146a:	dec    eax
  41146b:	add    al,0x9a
  41146d:	sub    DWORD PTR [eax],ecx
  41146f:	add    DWORD PTR [ecx],0xa9010aa0
  411475:	test   BYTE PTR [ecx],cl
  411477:	add    al,0xe4
  411479:	add    eax,0xb078a206
  41147e:	and    BYTE PTR [ebx+0x27],al
  411481:	add    eax,DWORD PTR ds:0x908801
  411487:	cmp    DWORD PTR [edx-0x7ffffdae],eax
  41148d:	sbb    al,0x22
  41148f:	adc    BYTE PTR ds:0x86102a00,ah
  411495:	test   eax,0x1e68029
  41149a:	add    BYTE PTR [ebx+ebx*1-0x6b7fdbbc],ah
  4114a1:	and    BYTE PTR [edx+eiz*8+0x100000c],0x28
  4114a9:	inc    eax
  4114aa:	dec    eax
  4114ab:	popa   
  4114ac:	adc    ecx,DWORD PTR [edx]
  4114ae:	add    eax,0xb1c0042
  4114b3:	inc    ecx
  4114b4:	or     BYTE PTR [eax+ecx*1],al
  4114b7:	add    esp,DWORD PTR [ebx+0x4c]
  4114ba:	and    edx,DWORD PTR [edx+0x8]
  4114bd:	add    al,BYTE PTR [eax]
  4114bf:	pop    esi
  4114c0:	adc    BYTE PTR [eax],dh
  4114c2:	inc    eax
  4114c3:	pusha  
  4114c4:	add    eax,0x20a58000
  4114c9:	or     BYTE PTR [eax+eax*2],0x91
  4114cd:	inc    ebx
  4114ce:	adc    BYTE PTR [eax+0x1],ah
  4114d1:	xor    BYTE PTR [eax],ch
  4114d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d4:	add    BYTE PTR [edx-0x60],al
  4114d7:	add    BYTE PTR [edx],al
  4114d9:	xchg   esp,eax
  4114da:	push   ecx
  4114db:	inc    eax
  4114dc:	call   0x84e2:0xc921283
  4114e3:	sbb    al,0x42
  4114e5:	adc    DWORD PTR [eax+edx*1],ebp
  4114e8:	add    BYTE PTR [ebx],ah
  4114ea:	add    BYTE PTR [eax],al
  4114ec:	add    BYTE PTR ds:0x8136880e,dl
  4114f2:	push   es
  4114f3:	add    al,0xc
  4114f5:	dec    esi
  4114f6:	inc    eax
  4114f7:	and    esp,DWORD PTR [eax+0x13]
  4114fa:	jge    0x4114e0
  4114fc:	test   al,0xb
  4114fe:	or     al,BYTE PTR fs:[eax-0x2ff9fdfd]
  411505:	or     BYTE PTR [esi+eax*4],cl
  411508:	pop    es
  411509:	or     al,BYTE PTR [eax]
  41150b:	rol    BYTE PTR [eax+eax*1+0x2c],cl
  41150f:	push   esp
  411510:	or     al,0x10
  411512:	adc    BYTE PTR [eax],al
  411514:	add    BYTE PTR [esp+ebp*4-0x59f23ffe],dl
  41151b:	push   es
  41151c:	aam    0x2
  41151e:	and    DWORD PTR [ebp+0x4406110],0xffffff80
  411525:	add    ah,BYTE PTR [eax-0x7c1f1000]
  41152b:	inc    eax
  41152c:	and    al,0x4a
  41152e:	mov    ds:0x8810185,al
  411533:	add    DWORD PTR [ebx],eax
  411535:	dec    esp
  411536:	add    BYTE PTR [ebp-0x7fcdd368],dl
  41153c:	add    BYTE PTR [edx],al
  41153e:	push   es
  41153f:	js     0x411542
  411541:	loopne 0x411557
  411543:	add    BYTE PTR [eax+0x52],0x0
  411547:	sub    BYTE PTR [ecx],al
  411549:	adc    al,0x98
  41154b:	add    BYTE PTR [ecx],0x40
  41154e:	in     al,0xd
  411550:	add    BYTE PTR [ebx+0x62491411],ah
  411556:	add    al,dl
  411558:	or     BYTE PTR ds:0x2082422,al
  41155e:	add    al,0x4c
  411560:	add    BYTE PTR [eax],cl
  411562:	sub    BYTE PTR [ecx],al
  411564:	test   al,0x47
  411566:	add    BYTE PTR [eax],ah
  411568:	push   esp
  411569:	add    DWORD PTR [eax],ecx
  41156b:	dec    ecx
  41156c:	enter  0x104,0x4d
  411570:	push   0x1
  411572:	add    al,0x85
  411574:	dec    eax
  411575:	jns    0x41158a
  411577:	inc    eax
  411578:	inc    ecx
  411579:	sub    BYTE PTR [eax+0x1410072c],ah
  41157f:	add    al,0x40
  411581:	add    edx,DWORD PTR [eax]
  411583:	pusha  
  411584:	adc    al,BYTE PTR [edi]
  411586:	inc    edx
  411587:	test   al,0x11
  411589:	loopne 0x41158b
  41158b:	add    BYTE PTR [ecx+ebp*1+0x12],0x48
  411590:	inc    esp
  411591:	and    DWORD PTR [eax+eax*1+0x90c2280],esp
  411598:	add    dl,al
  41159a:	add    BYTE PTR [eax],dl
  41159c:	adc    eax,0x600c9a01
  4115a1:	add    ah,BYTE PTR [edx]
  4115a3:	adc    BYTE PTR [esp+eax*1],al
  4115a6:	add    dl,0x17
  4115a9:	add    BYTE PTR [eax],ah
  4115ab:	mov    BYTE PTR [edx],al
  4115ad:	ror    DWORD PTR [ecx+ecx*4],0xa6
  4115b1:	add    BYTE PTR [eax+0x1000a100],ah
  4115b7:	adc    al,0x86
  4115b9:	inc    edi
  4115ba:	inc    eax
  4115bb:	add    BYTE PTR ds:0x810080a6,dl
  4115c1:	xchg   BYTE PTR [ebx],al
  4115c3:	dec    eax
  4115c4:	add    al,al
  4115c6:	or     ah,BYTE PTR [eax]
  4115c8:	adc    BYTE PTR [eax],ch
  4115ca:	or     BYTE PTR [ebx+0x6],ah
  4115cd:	add    BYTE PTR [edx+0x1f],cl
  4115d0:	and    BYTE PTR [eax+0x8605009],al
  4115d6:	and    DWORD PTR [ecx],eax
  4115d8:	sub    BYTE PTR [ecx],al
  4115da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115db:	add    BYTE PTR [ecx],bl
  4115dd:	inc    ebp
  4115de:	adc    al,BYTE PTR [eax+0x42]
  4115e1:	or     BYTE PTR [eax+0x60c20060],bl
  4115e7:	inc    ebp
  4115e8:	or     BYTE PTR [ebx],0x1
  4115eb:	xchg   edx,eax
  4115ec:	inc    eax
  4115ed:	xor    BYTE PTR [ecx],al
  4115ef:	adc    BYTE PTR [eax+eax*1],dh
  4115f2:	add    al,0x1
  4115f4:	sbb    BYTE PTR [ecx],dl
  4115f6:	push   es
  4115f7:	adc    BYTE PTR [eax],ch
  4115f9:	mov    DWORD PTR [eax+eiz*1],edi
  4115fc:	cs jb  0x38442615
  411603:	add    BYTE PTR [eax+0x74],al
  411606:	ret    0x1180
  411609:	or     BYTE PTR [esp+ecx*4],cl
  41160c:	pop    ebp
  41160d:	add    DWORD PTR [eax],0x12
  411610:	adc    DWORD PTR [edx+esi*4+0x14a291d2],ebx
  411617:	adc    BYTE PTR [ebx+edi*1],ah
  41161a:	mov    WORD PTR [eax],es
  41161c:	or     DWORD PTR [esp+ebx*2+0x143a081],eax
  411623:	push   es
  411624:	add    BYTE PTR [eax+eax*1],ah
  411627:	and    eax,DWORD PTR [esi]
  411629:	mov    al,ds:0x803c0602
  41162e:	add    BYTE PTR [eax],0x30
  411631:	push   es
  411632:	ret    
  411633:	dec    eax
  411634:	fs or  al,0x23
  411637:	ror    cl,0x22
  41163a:	inc    ebp
  41163b:	mov    ds:0x4602922c,eax
  411640:	xchg   ecx,eax
  411641:	add    al,BYTE PTR [eax]
  411643:	adc    BYTE PTR [ebx],cl
  411645:	mov    DWORD PTR [eax],edx
  411647:	and    DWORD PTR [edx],0x40172781
  41164d:	pop    es
  41164e:	jo     0x41167e
  411650:	add    BYTE PTR [edx],ah
  411652:	nop
  411653:	add    BYTE PTR [ecx],al
  411655:	or     BYTE PTR [esp+eax*1],al
  411658:	pop    ecx
  411659:	add    BYTE PTR [esi],ah
  41165b:	dec    ecx
  41165c:	pusha  
  41165d:	and    dl,BYTE PTR [ecx-0x7a]
  411660:	add    bl,BYTE PTR [eax]
  411662:	ror    DWORD PTR [esp+eax*1+0x8],1
  411666:	rol    BYTE PTR [eax+0x20],1
  411669:	dec    ecx
  41166a:	and    al,0x40
  41166c:	add    BYTE PTR [edx],al
  41166e:	dec    ecx
  41166f:	add    ch,BYTE PTR [ecx]
  411671:	push   ss
  411672:	inc    ecx
  411673:	loopne 0x4116a6
  411675:	cmp    BYTE PTR [eax-0x53dcceb8],al
  41167b:	push   esp
  41167c:	nop
  41167d:	cdq    
  41167e:	add    BYTE PTR [esi+0x35080101],ch
  411684:	xchg   ecx,eax
  411685:	jmp    0x4116a8
  411687:	add    eax,0x50418c06
  41168c:	test   BYTE PTR [esi-0x7fa9dbfe],dl
  411692:	mov    BYTE PTR [eax+0x1],cl
  411695:	ror    DWORD PTR [eax-0x3c],0x2
  411699:	add    DWORD PTR [ecx-0x58],eax
  41169c:	mov    eax,ds:0x68135150
  4116a1:	ins    BYTE PTR es:[edi],dx
  4116a2:	pusha  
  4116a3:	and    al,BYTE PTR [ecx]
  4116a5:	dec    ebp
  4116a6:	adc    BYTE PTR [ebp+0x20361450],cl
  4116ac:	(bad)
  4116b1:	add    al,0x4c
  4116b3:	or     eax,0x480480c
  4116b8:	lock push 0xf7009
  4116be:	mov    BYTE PTR [ebx+ebx*8],ah
  4116c1:	cmovs  eax,DWORD PTR [ecx+0x2001031]
  4116c8:	or     BYTE PTR [ecx+0x21122c8],dl
  4116ce:	inc    eax
  4116cf:	add    BYTE PTR [eax+ecx*2],al
  4116d2:	pusha  
  4116d3:	add    BYTE PTR [ecx-0x5c],0x88
  4116d7:	add    BYTE PTR [eax-0x7df55ff8],al
  4116dd:	add    cl,BYTE PTR [eax+0x12]
  4116e0:	xor    BYTE PTR [edx-0x6a7777f0],ah
  4116e6:	xor    BYTE PTR [edx-0x7e],al
  4116e9:	test   BYTE PTR [edx+0x13160060],cl
  4116ef:	or     edx,ecx
  4116f1:	sbb    BYTE PTR [ecx+0x206008],al
  4116f7:	inc    ebp
  4116f8:	add    ah,BYTE PTR [eax]
  4116fa:	push   ecx
  4116fb:	add    al,0x3
  4116fd:	and    BYTE PTR [edx],al
  4116ff:	add    BYTE PTR [eax],cl
  411701:	mov    esp,0x500cf021
  411706:	dec    esp
  411707:	add    BYTE PTR [eax+0x17],cl
  41170a:	or     al,0x99
  41170c:	add    BYTE PTR [eax],cl
  41170e:	push   cs
  41170f:	inc    ecx
  411710:	add    al,BYTE PTR [edi]
  411712:	les    eax,FWORD PTR [ecx+eax*2]
  411715:	or     DWORD PTR [ecx+0x5922a015],0x7b06660c
  41171f:	add    BYTE PTR [eax+0x74a11bc],cl
  411725:	imul   eax,DWORD PTR [edx],0x65e22c8
  41172b:	push   eax
  41172c:	and    al,0xc1
  41172e:	add    BYTE PTR [eax],cl
  411730:	add    cl,BYTE PTR [eax+0x77c0812]
  411736:	dec    eax
  411737:	sbb    BYTE PTR [esi+0x3152099c],al
  41173d:	lock add DWORD PTR [eax+0x18],eax
  411741:	adc    ah,BYTE PTR [eax]
  411743:	jo     0x411786
  411745:	data16 sub al,0x99
  411748:	add    dl,cl
  41174a:	lea    eax,[eax]
  41174c:	pop    ss
  41174d:	mov    al,ds:0x2b105402
  411752:	and    BYTE PTR [edx],dh
  411754:	or     al,0x8d
  411756:	add    eax,eax
  411758:	add    al,BYTE PTR [eax]
  41175a:	sbb    al,0x5
  41175c:	or     DWORD PTR [eax+0x5],eax
  41175f:	mov    eax,ds:0x1a10448
  411764:	jecxz  0x411786
  411766:	call   0x51fbeb
  41176b:	add    DWORD PTR [edx+0x20a8464],0x4
  411772:	or     BYTE PTR [esi],al
  411774:	leave  
  411775:	and    al,0x2c
  411777:	adc    BYTE PTR [eax+edx*1],al
  41177a:	or     DWORD PTR [edi+0xc],edx
  41177d:	sub    esp,DWORD PTR [ecx]
  41177f:	rol    BYTE PTR [eax],0x17
  411782:	add    BYTE PTR [edx],al
  411784:	imul   eax,DWORD PTR [edi+0x2110644a],0x0
  41178b:	and    al,0xc0
  41178d:	cmp    DWORD PTR [eax-0x7b],0x60
  411791:	xchg   al,cl
  411793:	add    BYTE PTR [eax-0x3feffbbc],al
  411799:	xor    BYTE PTR [edx],al
  41179b:	add    BYTE PTR [eax],al
  41179d:	add    al,0x80
  41179f:	add    al,al
  4117a1:	add    esi,DWORD PTR [eax]
  4117a3:	inc    edx
  4117a4:	rol    BYTE PTR [eax+0x4f],0x2
  4117a8:	and    BYTE PTR [eax+0x2],0x0
  4117ac:	add    BYTE PTR [esi+0x504a01],al
  4117b2:	arpl   WORD PTR [ecx],ax
  4117b4:	add    BYTE PTR [eax],ah
  4117b6:	and    ebx,eax
  4117b8:	sub    eax,0x20ff0680
  4117bd:	add    DWORD PTR [esi+edi*8],ebx
  4117c0:	push   eax
  4117c1:	enter  0x307c,0xc8
  4117c5:	or     eax,DWORD PTR [edx]
  4117c7:	jb     0x4117e9
  4117c9:	or     BYTE PTR [eax+0x1],ah
  4117cc:	add    cl,BYTE PTR [ecx]
  4117ce:	test   BYTE PTR [ebx],al
  4117d0:	call   DWORD PTR ds:0x435b20
  4117d6:	inc    ecx
  4117d7:	and    BYTE PTR [eax-0x3f],ah
  4117da:	dec    edx
  4117db:	inc    ecx
  4117dc:	or     al,0x11
  4117de:	adc    BYTE PTR [edi+0x41081847],0x81
  4117e5:	nop
  4117e6:	add    BYTE PTR [edx+eax*4+0x1],al
  4117ea:	adc    al,0x11
  4117ec:	nop
  4117ed:	add    BYTE PTR [esi+0x52200a0],al
  4117f3:	inc    ecx
  4117f4:	inc    eax
  4117f5:	mov    al,0x24
  4117f7:	and    DWORD PTR [eax+ecx*4+0x48186008],esi
  4117fe:	add    al,0x88
  411800:	sbb    al,0x0
  411802:	inc    edx
  411803:	add    al,BYTE PTR [eax]
  411805:	and    DWORD PTR [eax-0x7f],esp
  411808:	push   es
  411809:	add    DWORD PTR [esi],0x72001001
  41180f:	add    al,BYTE PTR [edx]
  411811:	test   DWORD PTR [eax],eax
  411813:	xor    eax,DWORD PTR [ecx]
  411815:	push   ebx
  411816:	and    edx,0x18
  411819:	add    al,BYTE PTR [ecx]
  41181b:	add    BYTE PTR [eax+0x2],al
  41181e:	add    BYTE PTR [eax+0x42002101],al
  411824:	or     BYTE PTR [ebx+ecx*4+0xb],bl
  411828:	pusha  
  411829:	add    BYTE PTR [esp+ebp*1+0x12188021],cl
  411830:	add    ah,BYTE PTR [edx]
  411832:	add    BYTE PTR [ecx+0x10043106],dl
  411838:	add    BYTE PTR [edx+0xc],cl
  41183b:	add    BYTE PTR [edx+edx*1-0x79fffe00],dl
  411842:	add    cl,BYTE PTR [eax+0x21]
  411845:	or     al,0x0
  411847:	add    BYTE PTR [eax+eax*1-0x76],dl
  41184b:	and    BYTE PTR [eax],al
  41184d:	inc    ecx
  41184e:	add    BYTE PTR [eax],al
  411850:	dec    eax
  411851:	dec    eax
  411852:	sub    al,BYTE PTR [eax+0x12]
  411855:	mov    DWORD PTR [edx],eax
  411857:	sbb    bl,0x49
  41185a:	and    al,BYTE PTR [ebp+edx*4+0x24]
  41185e:	adc    al,BYTE PTR [eax]
  411860:	inc    eax
  411861:	and    eax,0x3180000f
  411866:	sbb    DWORD PTR [ecx],0xe
  411869:	add    BYTE PTR [esi+eax*1],al
  41186c:	add    BYTE PTR [eax],al
  41186e:	add    ah,ah
  411870:	sub    al,0xd0
  411872:	add    BYTE PTR ds:0x4c028000,cl
  411878:	xchg   DWORD PTR ds:0x8020851,ebp
  41187e:	das    
  41187f:	or     BYTE PTR [eax+eax*4],dl
  411882:	inc    ebp
  411883:	xchg   edx,eax
  411884:	ss add al,0x20
  411887:	add    BYTE PTR [eax],al
  411889:	add    al,0x0
  41188b:	xchg   ecx,eax
  41188c:	add    cl,BYTE PTR [eax+0x1]
  41188f:	aam    0xa0
  411891:	add    BYTE PTR [esi-0x6bff3fee],al
  411897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411898:	and    BYTE PTR [edx],al
  41189a:	adc    DWORD PTR [ecx],edx
  41189c:	jo     0x41189e
  41189e:	inc    edx
  41189f:	or     BYTE PTR [eax],dl
  4118a1:	add    al,0x14
  4118a3:	aam    0x25
  4118a5:	or     DWORD PTR [eax+ecx*1],0x70238158
  4118ac:	or     al,0x5
  4118ae:	sbb    BYTE PTR [eax],dl
  4118b0:	pusha  
  4118b1:	ret    0x8c4e
  4118b4:	and    al,0x7
  4118b6:	or     dl,BYTE PTR [eax-0x7f64ffff]
  4118bc:	or     al,0x16
  4118be:	sbb    DWORD PTR [edi-0x7f5fefd0],0x148b80a
  4118c8:	add    al,0x70
  4118ca:	sbb    edx,DWORD PTR [ebx+0x44210450]
  4118d0:	inc    eax
  4118d1:	rol    DWORD PTR [ecx+0x2229a],0x88
  4118d8:	mov    esi,0x23086141
  4118dd:	mov    DWORD PTR [eax],esp
  4118df:	add    DWORD PTR [ecx],esp
  4118e1:	loopne 0x4118e4
  4118e3:	dec    esp
  4118e4:	adc    BYTE PTR [eax],ch
  4118e6:	and    BYTE PTR [esi],cl
  4118e8:	add    BYTE PTR [eax+edx*1],al
  4118eb:	add    al,0x24
  4118ed:	add    ah,BYTE PTR [edx]
  4118ef:	sbb    al,0x11
  4118f1:	add    BYTE PTR [ecx+0x18919261],0x80
  4118f8:	xor    BYTE PTR [eax],cl
  4118fa:	add    BYTE PTR [esp+ecx*4],0xe5
  4118fe:	add    BYTE PTR [eax],bl
  411900:	adc    BYTE PTR [ebp+0x0],al
  411903:	adc    BYTE PTR ds:0x81262003,ah
  411909:	les    eax,FWORD PTR [eax]
  41190b:	push   eax
  41190c:	adc    BYTE PTR [eax],cl
  41190e:	add    DWORD PTR [esi],eax
  411910:	and    BYTE PTR [ebx-0x3efafdbe],al
  411916:	inc    eax
  411917:	or     al,0x5c
  411919:	add    BYTE PTR [esi],al
  41191b:	mov    al,ds:0x20c10005
  411920:	or     esp,DWORD PTR [ecx+ebx*1-0x38]
  411924:	and    ecx,DWORD PTR [ebx]
  411926:	add    al,0xe4
  411928:	add    DWORD PTR [edx+eiz*4],0xfffffffc
  41192c:	and    al,0x0
  41192e:	adc    DWORD PTR [esi-0x7dd77ffa],0xb6003009
  411938:	adc    DWORD PTR [eax+0x1082b506],edx
  41193e:	or     edx,0x80812020
  411944:	push   eax
  411945:	retf   
  411946:	add    dl,BYTE PTR [edx+eiz*1+0x42]
  41194a:	inc    eax
  41194b:	add    al,0x22
  41194d:	xor    BYTE PTR [esi+0x36],ah
  411950:	pop    es
  411951:	push   es
  411952:	add    ah,BYTE PTR [eax+eax*2-0x80]
  411956:	adc    al,0x0
  411958:	inc    ebp
  411959:	add    BYTE PTR [eax+0x14],al
  41195c:	add    BYTE PTR [eax+0x8000000],0x10
  411963:	add    BYTE PTR [eax+0x0],0x2
  411967:	add    dh,BYTE PTR [eax]
  411969:	adc    BYTE PTR [eax+0x41],ah
  41196c:	dec    esp
  41196d:	add    BYTE PTR [esi+0x3],al
  411970:	or     BYTE PTR [esi+eax*2+0x200c0001],ah
  411977:	dec    ecx
  411978:	adc    BYTE PTR [eax+eax*2],cl
  41197b:	and    BYTE PTR [eax+0x40a03c8],ah
  411981:	adc    DWORD PTR [eax],edi
  411983:	add    al,BYTE PTR cs:[edx]
  411986:	add    edi,ebx
  411988:	xor    DWORD PTR [eax+0x45],esp
  41198b:	inc    esp
  41198c:	add    DWORD PTR [eax-0x64],ecx
  41198f:	add    BYTE PTR [eax],cl
  411991:	loopne 0x4119cc
  411993:	push   ecx
  411994:	inc    ecx
  411995:	or     DWORD PTR [edx],esp
  411997:	mov    esp,DWORD PTR [edx-0x60]
  41199a:	xor    DWORD PTR [edx+0x4180902d],esi
  4119a0:	add    DWORD PTR [ecx-0x1f79b6fc],eax
  4119a6:	sub    eax,edx
  4119a8:	inc    edx
  4119a9:	add    BYTE PTR [eax+0x18150440],al
  4119af:	or     BYTE PTR [ecx],al
  4119b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119b2:	loopne 0x4119e4
  4119b4:	add    al,0x12
  4119b6:	or     DWORD PTR [ecx],eax
  4119b8:	inc    eax
  4119b9:	or     BYTE PTR [eax-0x80],al
  4119bc:	or     BYTE PTR [eax],ah
  4119be:	add    cl,BYTE PTR [eax]
  4119c0:	pop    esp
  4119c1:	add    BYTE PTR [eax],0x2b
  4119c4:	add    eax,DWORD PTR [edx+eax*2]
  4119c7:	add    DWORD PTR [eax],ecx
  4119c9:	sub    cl,BYTE PTR [eax]
  4119cb:	mov    al,ds:0x40e10400
  4119d0:	adc    BYTE PTR [eax],dl
  4119d2:	cmp    al,BYTE PTR [eax]
  4119d4:	rol    DWORD PTR [eax],0x2a
  4119d7:	push   es
  4119d8:	adc    al,0x85
  4119da:	sbb    BYTE PTR [eax],dl
  4119dc:	inc    ecx
  4119dd:	push   eax
  4119de:	rol    BYTE PTR [edx],0x80
  4119e1:	test   BYTE PTR [esi-0x5c],ah
  4119e4:	and    al,0x62
  4119e6:	mov    ah,BYTE PTR [edx]
  4119e8:	or     BYTE PTR [eax],al
  4119ea:	push   es
  4119eb:	add    BYTE PTR [eax+ecx*1],0x1e
  4119ef:	push   eax
  4119f0:	adc    al,0x8
  4119f2:	mov    al,0x96
  4119f4:	fs or  edx,eax
  4119f7:	and    BYTE PTR [esi+ecx*1+0x10],ah
  4119fb:	mov    WORD PTR [esi-0x6e],es
  4119fe:	add    BYTE PTR [ebx],dl
  411a00:	sbb    DWORD PTR [eax],0x14061001
  411a06:	add    BYTE PTR [edi],ah
  411a08:	add    BYTE PTR [edx],cl
  411a0a:	shr    al,0x21
  411a0d:	test   BYTE PTR [eax+0x3456e289],al
  411a13:	adc    BYTE PTR [esp+ecx*4],dl
  411a16:	adc    BYTE PTR [eax],dl
  411a18:	pop    ss
  411a19:	and    DWORD PTR [ecx],esp
  411a1b:	mov    al,0x4b
  411a1d:	push   es
  411a1e:	shl    DWORD PTR [edx+0x14030902],0xaa
  411a25:	push   edx
  411a26:	and    al,cl
  411a28:	adc    BYTE PTR [eax+eiz*4],al
  411a2b:	or     al,BYTE PTR [eax]
  411a2d:	sbb    BYTE PTR [edx+ecx*1],cl
  411a30:	adc    BYTE PTR [edx],al
  411a32:	rol    BYTE PTR [eax+edx*2],cl
  411a35:	mov    BYTE PTR [ecx+0x21a41005],dl
  411a3b:	inc    ebp
  411a3c:	inc    eax
  411a3d:	inc    ecx
  411a3e:	add    al,0x28
  411a40:	pop    eax
  411a41:	inc    ebp
  411a42:	sbb    al,0x0
  411a44:	add    BYTE PTR [eax],al
  411a46:	or     ah,BYTE PTR [eax]
  411a48:	add    BYTE PTR [ecx],0x0
  411a4b:	cwde   
  411a4c:	add    ah,BYTE PTR [esi]
  411a4e:	sub    BYTE PTR [esi],al
  411a50:	add    ah,BYTE PTR [eax+0x28]
  411a53:	add    al,0x0
  411a55:	add    BYTE PTR [ebx],al
  411a57:	add    cl,al
  411a59:	and    BYTE PTR [ebx+0x44015868],cl
  411a5f:	in     al,0x40
  411a61:	or     dh,cl
  411a63:	and    BYTE PTR [eax],ch
  411a65:	cmp    DWORD PTR [ecx],0x500d000
  411a6b:	add    ah,BYTE PTR [eax+0x14]
  411a6e:	mov    BYTE PTR [edx+eax*2],al
  411a71:	mov    ds:0x2024c006,al
  411a76:	add    BYTE PTR [eax+0x22],0xf5
  411a7a:	sub    BYTE PTR [eax+0x40],al
  411a7d:	inc    edx
  411a7e:	nop
  411a7f:	sbb    DWORD PTR [ebx+ecx*1],eax
  411a82:	inc    esp
  411a83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a84:	adc    al,BYTE PTR [eax]
  411a86:	and    dh,BYTE PTR [ecx]
  411a88:	and    eax,0x5040008
  411a8d:	mov    DWORD PTR [ebp+0x1020352],edx
  411a93:	adc    eax,0x1330082
  411a98:	nop
  411a99:	enter  0x2028,0x85
  411a9d:	inc    eax
  411a9e:	test   al,0x0
  411aa0:	adc    DWORD PTR [eax+edx*1+0x301e042],ecx
  411aa7:	ror    BYTE PTR [eax],1
  411aa9:	adc    BYTE PTR [ebx],0x18
  411aac:	adc    BYTE PTR [eax+eax*1+0x42a22c0c],dl
  411ab3:	inc    eax
  411ab4:	or     BYTE PTR fs:[ecx-0x1e],0x1
  411ab9:	sbb    BYTE PTR [esi-0x3dffbf9f],0x10
  411ac0:	xor    dl,BYTE PTR [ebx]
  411ac2:	add    BYTE PTR [ebx],cl
  411ac4:	cmp    al,0x10
  411ac6:	pusha  
  411ac7:	adc    BYTE PTR [eax+0x2],bl
  411aca:	sbb    al,BYTE PTR [esi]
  411acc:	int3   
  411acd:	or     eax,0x8041e0d2
  411ad2:	add    BYTE PTR [ecx-0x60],0xa0
  411ad6:	or     al,0x1
  411ad8:	mov    al,0x87
  411ada:	pop    eax
  411adb:	add    al,0x4
  411add:	and    al,BYTE PTR ds:0x44448608
  411ae3:	cmp    BYTE PTR [eax],al
  411ae5:	or     BYTE PTR [ecx+0x0],al
  411ae8:	or     BYTE PTR [ebp-0x74],al
  411aeb:	mov    WORD PTR [eax],ds
  411aed:	xor    ah,al
  411aef:	push   ss
  411af0:	or     BYTE PTR [eax],cl
  411af2:	add    eax,0x18ca0e84
  411af7:	sbb    al,0x4
  411af9:	add    BYTE PTR ds:0x69010a00,ah
  411aff:	nop
  411b00:	add    al,0xe
  411b03:	inc    ecx
  411b04:	add    BYTE PTR [esp+ebx*2],0x63
  411b08:	or     cl,BYTE PTR [ebp+0x4a050100]
  411b0e:	sub    BYTE PTR [edx],dl
  411b10:	add    al,0x1
  411b12:	or     BYTE PTR [edi],dl
  411b14:	and    ah,BYTE PTR [ecx+eax*1]
  411b17:	add    eax,0x43180040
  411b1c:	and    BYTE PTR [eax],al
  411b1e:	add    eax,DWORD PTR [ecx]
  411b20:	popa   
  411b21:	rol    BYTE PTR [eax],0x60
  411b24:	pusha  
  411b25:	add    BYTE PTR [eax],al
  411b27:	les    eax,FWORD PTR [ebx+0x13010c]
  411b2d:	push   eax
  411b2e:	add    DWORD PTR [esp+edx*1+0x10108028],eax
  411b35:	mov    BYTE PTR [eax],dl
  411b37:	or     BYTE PTR [edx+0x70050242],al
  411b3d:	sbb    BYTE PTR [edx],ah
  411b3f:	add    eax,DWORD PTR [eax]
  411b41:	sub    al,0x45
  411b43:	xchg   esi,eax
  411b44:	cwde   
  411b45:	inc    eax
  411b46:	inc    eax
  411b47:	add    DWORD PTR [ecx+edx*2+0x31],0x31611186
  411b4f:	adc    BYTE PTR [eax],cl
  411b51:	add    al,0x4
  411b53:	and    BYTE PTR [eax+0x205ab88],al
  411b59:	and    BYTE PTR [esi],ah
  411b5b:	jnp    0x411b67
  411b5d:	xchg   esp,eax
  411b5e:	add    BYTE PTR [ebx],0xe0
  411b61:	mov    BYTE PTR [ebx],ah
  411b63:	add    al,BYTE PTR [eax]
  411b65:	mov    al,BYTE PTR [eax-0x2b]
  411b68:	sbb    BYTE PTR [eax],al
  411b6a:	xor    al,0x86
  411b6c:	adc    esp,DWORD PTR [esi+0x14]
  411b6f:	or     BYTE PTR [ecx+edx*2],ah
  411b72:	adc    al,0x70
  411b74:	bound  eax,QWORD PTR gs:[ecx]
  411b77:	add    eax,ecx
  411b79:	pop    es
  411b7a:	sbb    ch,BYTE PTR [eax]
  411b7c:	pop    ecx
  411b7d:	add    al,BYTE PTR [eax]
  411b7f:	add    DWORD PTR [eax+eiz*1],eax
  411b82:	repnz inc eax
  411b84:	inc    esp
  411b85:	pop    es
  411b86:	arpl   WORD PTR es:[eax-0x55],cx
  411b8a:	mov    ds:0x75008048,al
  411b8f:	or     ecx,DWORD PTR [edx+0x1c]
  411b92:	and    eax,0x4004640b
  411b97:	add    eax,0x62040000
  411b9c:	adc    DWORD PTR [edx+0x24],edx
  411b9f:	pop    eax
  411ba0:	ror    BYTE PTR [ecx+0x4],0x8f
  411ba4:	rol    BYTE PTR [eax],0x4
  411ba7:	rol    BYTE PTR [ebp+0x20],0xd0
  411bab:	mov    al,gs:0x1060a085
  411bb1:	cwde   
  411bb2:	dec    eax
  411bb3:	jp     0x411b86
  411bb5:	inc    edx
  411bb6:	call   0x0:0xc9c00984
  411bbd:	call   0x8031:0x3c2d90a2
  411bc4:	adc    DWORD PTR es:[ecx+0x1000dc90],0x4348408
  411bcf:	add    al,0x84
  411bd1:	cmp    al,0x6
  411bd3:	or     BYTE PTR [edx],0x2
  411bd6:	inc    ebp
  411bd7:	add    esp,DWORD PTR ds:0x82020232
  411bdd:	dec    eax
  411bde:	je     0x411be0
  411be0:	add    eax,0xb0802180
  411be5:	mov    DWORD PTR [esi],esi
  411be7:	sub    DWORD PTR [edx],edx
  411be9:	or     BYTE PTR [eax],cl
  411beb:	add    al,BYTE PTR [ecx+0x8]
  411bee:	add    al,0x0
  411bf0:	rcr    DWORD PTR [eax+0x26007140],0x24
  411bf7:	sbb    BYTE PTR [edi+0x30b0a4d],al
  411bfd:	add    DWORD PTR [ecx+0x58],eax
  411c00:	and    DWORD PTR [ecx],ebx
  411c02:	add    eax,0x4000621
  411c07:	bound  ebp,QWORD PTR [eax+0x2028982]
  411c0d:	and    DWORD PTR [eax],eax
  411c0f:	mov    DWORD PTR [ebx+esi*8],edx
  411c12:	test   BYTE PTR [eax-0x65ffe8b5],ah
  411c18:	cmp    BYTE PTR [edx],0x40
  411c1b:	push   es
  411c1c:	adc    BYTE PTR [ecx+0x3091500],al
  411c22:	sbb    BYTE PTR [eax],ch
  411c24:	and    DWORD PTR [esi+0x4],esi
  411c27:	add    BYTE PTR [esp+ecx*1],cl
  411c2a:	es push edx
  411c2c:	add    BYTE PTR [edx],al
  411c2e:	or     al,0x92
  411c30:	and    cl,BYTE PTR [eax+eiz*1+0x3841100]
  411c37:	sbb    DWORD PTR [eax+0xc92400c],edx
  411c3d:	or     BYTE PTR [edx+edx*2+0x10],bl
  411c41:	add    BYTE PTR [eax+eax*4],bl
  411c44:	add    DWORD PTR [eax+0x44],eax
  411c47:	add    al,0x28
  411c49:	sbb    al,0x50
  411c4b:	imul   ecx,DWORD PTR [eax],0x126088c9
  411c51:	add    BYTE PTR [ebx],ah
  411c53:	(bad)  
  411c54:	push   ss
  411c55:	add    DWORD PTR [ecx],eax
  411c57:	add    dl,BYTE PTR [eax]
  411c59:	or     BYTE PTR [ecx],ah
  411c5b:	mov    al,ds:0x50214210
  411c60:	add    BYTE PTR [eax],dl
  411c62:	adc    bl,BYTE PTR [esp+ecx*2+0x209035a8]
  411c69:	add    BYTE PTR [eax+0x6],al
  411c6c:	add    BYTE PTR [eax],ah
  411c6e:	inc    ecx
  411c6f:	push   0x83193822
  411c74:	ret    0x5080
  411c77:	dec    esp
  411c78:	mov    BYTE PTR [ecx+0x3082400c],al
  411c7e:	inc    ecx
  411c7f:	adc    ecx,DWORD PTR [edi+0x2384046]
  411c85:	add    eax,0x18a0554
  411c8a:	adc    ah,BYTE PTR [edx+0xc]
  411c8d:	adc    esp,DWORD PTR ss:[esi]
  411c90:	and    DWORD PTR [eax],ebp
  411c92:	cmp    BYTE PTR [eax],al
  411c94:	mov    al,ds:0x57022622
  411c99:	inc    edi
  411c9a:	loopne 0x411d04
  411c9c:	cmp    cl,BYTE PTR [eax+0x40404582]
  411ca2:	inc    ecx
  411ca3:	and    cl,bl
  411ca5:	and    al,0x68
  411ca7:	or     BYTE PTR [ecx+0x62],ch
  411caa:	and    eax,0x80002000
  411caf:	xor    eax,0x81880008
  411cb4:	cdq    
  411cb5:	sub    al,BYTE PTR [ecx]
  411cb7:	(bad)  
  411cb8:	fcom   DWORD PTR [ecx+0x40440c1]
  411cbe:	jo     0x411cc1
  411cc0:	or     BYTE PTR [eax-0x5e],al
  411cc3:	and    al,0x40
  411cc5:	add    eax,DWORD PTR [edx]
  411cc7:	cmp    DWORD PTR [eax+0x43400002],eax
  411ccd:	add    eax,0x4004187
  411cd2:	or     DWORD PTR [eax],0xb20000
  411cd8:	add    cl,0x60
  411cdb:	pop    ecx
  411cdc:	add    DWORD PTR [eax+eax*1+0x20040804],eax
  411ce3:	adc    al,0x1c
  411ce5:	cs inc esp
  411ce7:	add    al,0x6
  411ce9:	inc    ecx
  411cea:	or     ah,BYTE PTR [esi]
  411cec:	adc    al,BYTE PTR [eax]
  411cee:	add    BYTE PTR [eax+0x0],al
  411cf1:	dec    ecx
  411cf2:	mov    eax,ds:0xd3560221
  411cf7:	in     eax,0x31
  411cf9:	cmp    BYTE PTR [eax],al
  411cfb:	or     DWORD PTR [eax],0x6
  411cfe:	add    BYTE PTR [esi],al
  411d00:	enter  0x2400,0x40
  411d04:	adc    ch,BYTE PTR [eax+0x5b908]
  411d0a:	add    BYTE PTR [esi+ebp*4+0x38],0x80
  411d0f:	sub    BYTE PTR [edx+ecx*4+0xa440030],ah
  411d16:	and    DWORD PTR [eax],eax
  411d18:	add    edx,DWORD PTR [ebx+0x48]
  411d1b:	leave  
  411d1c:	lea    ecx,[ebp+0x60]
  411d1f:	adc    BYTE PTR [ecx],0x48
  411d22:	xor    eax,0x5270f345
  411d27:	sbb    BYTE PTR ds:0x410a006,ah
  411d2d:	enter  0x1,0x10
  411d31:	mov    al,ds:0x1091202
  411d36:	add    al,0x0
  411d38:	and    BYTE PTR [eax-0x1c],bl
  411d3b:	fadd   DWORD PTR [ebx]
  411d3d:	and    BYTE PTR [eax+0x80030aa],0x0
  411d44:	add    BYTE PTR [eax],al
  411d46:	inc    eax
  411d47:	inc    edx
  411d48:	push   es
  411d49:	test   BYTE PTR [eax],al
  411d4b:	test   BYTE PTR [ecx+0x113801],dl
  411d51:	mov    BYTE PTR [eax],ah
  411d53:	test   DWORD PTR [eax+0x0],eax
  411d56:	inc    eax
  411d57:	inc    eax
  411d58:	dec    eax
  411d59:	push   eax
  411d5a:	inc    eax
  411d5b:	xchg   BYTE PTR [eax],ch
  411d5d:	add    DWORD PTR [eax+0x40],eax
  411d60:	pop    eax
  411d61:	add    al,0x40
  411d63:	sub    cl,BYTE PTR [ecx+0x48e45041]
  411d69:	or     DWORD PTR [ebx],edx
  411d6b:	and    ebx,DWORD PTR [eax]
  411d6d:	add    BYTE PTR [ecx],al
  411d6f:	add    DWORD PTR [eax+0x8c4050],ebx
  411d75:	hlt    
  411d76:	xor    BYTE PTR [eax-0x17a9d96c],al
  411d7c:	dec    eax
  411d7d:	mov    esp,0xc2204402
  411d82:	sbb    al,BYTE PTR [eax+0x6084040]
  411d88:	sub    al,0x0
  411d8a:	leave  
  411d8b:	test   al,0x0
  411d8d:	inc    edx
  411d8e:	push   cs
  411d8f:	push   eax
  411d90:	or     BYTE PTR [esi],al
  411d92:	add    al,BYTE PTR [ecx+0xa145e40]
  411d98:	nop
  411d99:	adc    eax,0x3908707
  411d9e:	and    BYTE PTR [ebx+0x58],al
  411da1:	add    BYTE PTR [eax+0x2],dl
  411da4:	add    BYTE PTR [eax+0x9],ah
  411da7:	test   eax,0x5042c04
  411dac:	add    BYTE PTR [edi],al
  411dae:	and    DWORD PTR [edx+0xc8150],0xa8688041
  411db8:	add    DWORD PTR [ecx+0x8544f04],ebx
  411dbe:	inc    esi
  411dbf:	xchg   ecx,eax
  411dc0:	and    al,0x41
  411dc2:	xchg   ebx,eax
  411dc3:	inc    ebx
  411dc4:	xor    BYTE PTR [esi],ah
  411dc6:	mov    eax,ds:0x16d42a20
  411dcb:	inc    edi
  411dcc:	xor    BYTE PTR [eax+0x1d],ah
  411dcf:	adc    BYTE PTR [eax],al
  411dd1:	add    BYTE PTR [eax],ch
  411dd3:	sbb    ah,BYTE PTR [eax]
  411dd5:	adc    BYTE PTR [ecx],al
  411dd7:	inc    ecx
  411dd8:	and    DWORD PTR [ecx+eax*1+0x6804200c],ebp
  411ddf:	loopne 0x411dea
  411de1:	and    BYTE PTR [edx*4+0x12000071],dh
  411de8:	dec    eax
  411de9:	and    ah,BYTE PTR [edx-0x3ffbda9c]
  411def:	xchg   ebp,eax
  411df0:	int3   
  411df1:	push   edx
  411df2:	push   eax
  411df3:	inc    edx
  411df4:	and    al,0x24
  411df6:	inc    eax
  411df7:	adc    al,cl
  411df9:	push   es
  411dfa:	push   cs
  411dfb:	add    BYTE PTR [eax],0xa
  411dfe:	inc    edx
  411dff:	add    DWORD PTR [eax+0x12],edx
  411e02:	aam    0x4
  411e04:	adc    cl,0x20
  411e07:	into   
  411e08:	add    dl,BYTE PTR [edx]
  411e0a:	add    BYTE PTR [edx-0x4db7f9fd],cl
  411e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e11:	mov    BYTE PTR [ecx],0x30
  411e14:	add    BYTE PTR [ecx-0x75f771e0],al
  411e1a:	add    ah,BYTE PTR [ecx-0x38]
  411e1d:	add    DWORD PTR [eax+edx*1],eax
  411e20:	or     al,0xe0
  411e22:	or     BYTE PTR ss:[edx],cl
  411e25:	fsub   st,st(0)
  411e27:	rcl    DWORD PTR [edx],1
  411e29:	add    BYTE PTR [eax+0x50948406],0x80
  411e30:	xchg   edx,eax
  411e31:	mov    cl,0x44
  411e33:	mov    al,ds:0x4804092
  411e38:	push   eax
  411e39:	cmp    al,BYTE PTR [eax+0x6a5a9382]
  411e3f:	adc    DWORD PTR [eax],esi
  411e41:	cmp    BYTE PTR [ebx],dl
  411e43:	add    BYTE PTR [edx],al
  411e45:	loope  0x411e51
  411e47:	sub    BYTE PTR [esi+0x2],ah
  411e4a:	xor    DWORD PTR [edx],ecx
  411e4c:	add    BYTE PTR [eax],0x5
  411e4f:	add    DWORD PTR [eax],ebx
  411e51:	adc    al,BYTE PTR [ecx]
  411e53:	and    DWORD PTR [eax+0x3],eax
  411e56:	inc    edx
  411e57:	sbb    BYTE PTR [ecx],al
  411e59:	add    BYTE PTR [eax+eiz*2],dh
  411e5c:	add    ebx,DWORD PTR [eax]
  411e5e:	add    al,0x2d
  411e60:	mov    WORD PTR [edx],fs
  411e62:	or     al,0x0
  411e64:	and    eax,0x54c8480
  411e69:	and    cl,BYTE PTR [edi]
  411e6b:	adc    BYTE PTR [edx+0x14818241],al
  411e71:	loop   0x411e73
  411e73:	add    BYTE PTR [eax],dl
  411e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e76:	inc    edx
  411e77:	inc    esp
  411e78:	add    BYTE PTR [eax],dl
  411e7a:	dec    eax
  411e7b:	add    al,0x60
  411e7d:	add    BYTE PTR [eax-0x7e],cl
  411e80:	or     BYTE PTR [esp+eax*4],ch
  411e83:	add    BYTE PTR [edx],0x22
  411e86:	loopne 0x411eba
  411e88:	xchg   esp,eax
  411e89:	dec    eax
  411e8a:	or     BYTE PTR [esp+eax*4+0x4c],ah
  411e8e:	ret    0x2104
  411e91:	and    BYTE PTR [edx+0x4],al
  411e94:	and    al,BYTE PTR [eax]
  411e96:	add    DWORD PTR [ecx+ebp*1],edx
  411e99:	add    al,BYTE PTR [ecx+0x1e]
  411e9c:	mov    al,ds:0x40188184
  411ea1:	and    BYTE PTR [eax],0x0
  411ea4:	xor    DWORD PTR [ecx],eax
  411ea6:	or     al,dl
  411ea8:	inc    eax
  411ea9:	inc    eax
  411eaa:	popa   
  411eab:	and    DWORD PTR [edx],ecx
  411ead:	add    BYTE PTR [eax-0x6e83f3fb],0x1
  411eb4:	inc    eax
  411eb5:	dec    eax
  411eb6:	sub    DWORD PTR [eax+0x40],eax
  411eb9:	cwde   
  411eba:	add    eax,DWORD PTR [eax]
  411ebc:	leave  
  411ebd:	add    esp,DWORD PTR [eax+0x40]
  411ec0:	pop    ss
  411ec1:	push   cs
  411ec2:	or     BYTE PTR [eax+ebp*1+0x2508c100],ah
  411ec9:	ror    BYTE PTR [edx+0x32805008],0x40
  411ed0:	mov    cl,0x80
  411ed2:	add    al,0x40
  411ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ed5:	mov    DWORD PTR [eax+eiz*2],edx
  411ed8:	or     BYTE PTR [eax+0x14],0xc
  411edc:	add    BYTE PTR [esp+eax*1],al
  411edf:	add    al,al
  411ee1:	test   DWORD PTR [eax+eiz*1],eax
  411ee4:	pusha  
  411ee5:	ror    BYTE PTR [esi],0xf
  411ee8:	add    DWORD PTR [edx],eax
  411eea:	add    al,BYTE PTR [edi]
  411eec:	adc    al,0x72
  411eee:	adc    BYTE PTR [ecx],dl
  411ef0:	(bad)  
  411ef1:	or     BYTE PTR [ecx],al
  411ef3:	mov    BYTE PTR [edx+0x68],dh
  411ef6:	jo     0x411f3a
  411ef8:	pop    es
  411ef9:	add    al,BYTE PTR [ecx]
  411efb:	add    BYTE PTR [ecx],al
  411efd:	or     al,0x48
  411eff:	mov    BYTE PTR [edx+0x112e0204],al
  411f05:	pusha  
  411f06:	inc    edx
  411f07:	add    eax,0x88931483
  411f0c:	inc    ebp
  411f0d:	sbb    BYTE PTR [ebx-0x60],cl
  411f10:	add    al,BYTE PTR [eax]
  411f12:	pusha  
  411f13:	mov    al,0x50
  411f15:	adc    eax,0x180e0080
  411f1a:	or     BYTE PTR [eax+0x72],cl
  411f1d:	add    ah,BYTE PTR [eax]
  411f1f:	add    BYTE PTR [edx],cl
  411f21:	sbb    eax,0x38000602
  411f26:	mov    BYTE PTR [edi],cl
  411f28:	or     BYTE PTR [edx],cl
  411f2a:	add    DWORD PTR [eax+0x1e],ebp
  411f2d:	xor    dl,BYTE PTR [esp+eax*1]
  411f30:	add    DWORD PTR [ecx-0x5f3ddf00],esp
  411f36:	add    BYTE PTR [eax+edx*4],cl
  411f39:	push   es
  411f3a:	mov    BYTE PTR [eax],cl
  411f3c:	adc    BYTE PTR [ebp+0x8],al
  411f3f:	adc    DWORD PTR [edx],eax
  411f41:	or     cl,BYTE PTR [eax+esi*1+0x2]
  411f45:	adc    eax,0x8002848
  411f4a:	push   eax
  411f4b:	add    BYTE PTR [eax+0x8],dl
  411f4e:	jnp    0x411f52
  411f50:	or     al,0x11
  411f52:	dec    edx
  411f53:	xchg   BYTE PTR [esi+ebp*8+0x2634001],al
  411f5a:	mov    ds:0xb4088566,al
  411f5f:	imul   eax,DWORD PTR [edx+eiz*1],0xffffff91
  411f63:	xchg   ecx,eax
  411f64:	and    eax,0x8101811
  411f69:	or     al,BYTE PTR [eax+0x2088100]
  411f6f:	adc    BYTE PTR [ebx],ch
  411f71:	or     BYTE PTR [edx],cl
  411f73:	mov    DWORD PTR [eax],0x46120328
  411f79:	jo     0x411fbb
  411f7b:	ret    
  411f7c:	sub    DWORD PTR [ecx],ecx
  411f7e:	inc    edx
  411f7f:	sbb    BYTE PTR [ecx],cl
  411f81:	and    BYTE PTR [eax-0x6efff3ec],cl
  411f87:	add    BYTE PTR [esi],al
  411f89:	adc    BYTE PTR [ecx+eax*1+0x0],al
  411f8d:	cmp    BYTE PTR [ebx+esi*1],cl
  411f90:	dec    eax
  411f91:	cmp    BYTE PTR [esi+0x201fe913],dl
  411f97:	js     0x411fc1
  411f99:	add    al,BYTE PTR [edx+eiz*2]
  411f9c:	add    al,0x26
  411f9e:	sbb    al,BYTE PTR [esi]
  411fa0:	or     BYTE PTR [eax+0x51842140],cl
  411fa6:	call   DWORD PTR ds:0x4358f0
  411fac:	add    BYTE PTR [ebx+0x1412580b],dl
  411fb2:	and    DWORD PTR [eax],0x3
  411fb5:	sub    BYTE PTR [eax],ah
  411fb7:	or     DWORD PTR [edi+0x40b02326],edx
  411fbd:	xor    al,0xa4
  411fbf:	inc    esp
  411fc0:	or     DWORD PTR ds:0x41dc022,eax
  411fc6:	add    BYTE PTR [eax],0x10
  411fc9:	inc    esp
  411fca:	pusha  
  411fcb:	xchg   esi,eax
  411fcc:	add    al,BYTE PTR [eax]
  411fce:	xor    eax,0x1489040
  411fd3:	shl    DWORD PTR [esi-0x7c],0xb2
  411fd7:	and    BYTE PTR [eax+ecx*2],al
  411fda:	add    al,BYTE PTR [eax+0x0]
  411fdd:	lar    ecx,WORD PTR [eax+eax*1+0x5]
  411fe2:	or     DWORD PTR [edx],0x24
  411fe5:	mov    DWORD PTR [ecx+edx*1],ecx
  411fe8:	add    BYTE PTR [esi],al
  411fea:	sbb    ah,BYTE PTR [ecx+0x24018c09]
  411ff0:	inc    edx
  411ff1:	adc    BYTE PTR [eax+0x5],dh
  411ff4:	inc    eax
  411ff5:	add    edx,edx
  411ff7:	adc    BYTE PTR [eax-0x5c5ced20],0x80
  411ffe:	and    BYTE PTR [eax+0x42008e57],0x38
  412005:	add    dh,BYTE PTR [edx+ecx*4]
  412008:	or     BYTE PTR [ecx+0x38a08404],0x0
  41200f:	sub    BYTE PTR [eax-0x7475bbf7],0x87
  412016:	shr    BYTE PTR [eax],1
  412018:	shl    BYTE PTR [eax+0x8],cl
  41201b:	nop
  41201c:	cmp    BYTE PTR [ecx],0x5
  41201f:	mov    al,ds:0x42454c4a
  412024:	dec    eax
  412025:	jp     0x411fc7
  412027:	add    BYTE PTR es:[esi],cl
  41202a:	push   es
  41202b:	add    al,BYTE PTR [eax+0x6c00064]
  412031:	pop    eax
  412032:	inc    esp
  412033:	add    esp,DWORD PTR [edx-0x2a]
  412036:	and    al,0x41
  412038:	or     BYTE PTR [edi],0x14
  41203b:	mov    ebp,fs
  41203d:	add    al,0x40
  41203f:	or     DWORD PTR [eax],eax
  412041:	and    al,BYTE PTR [esi+ebx*4]
  412044:	adc    DWORD PTR [eax+edx*1+0x2],eax
  412048:	or     BYTE PTR [eax+esi*2-0x4a],ah
  41204c:	push   ds
  41204d:	inc    ebp
  41204e:	add    al,0x46
  412050:	sub    ah,BYTE PTR [ecx]
  412052:	sbb    BYTE PTR [eax],cl
  412054:	les    edx,FWORD PTR [eax]
  412056:	add    BYTE PTR [ecx],0x81
  412059:	rol    BYTE PTR [ecx+edx*1+0x10],0x74
  41205e:	xchg   ecx,eax
  41205f:	adc    BYTE PTR [ecx],0x32
  412062:	push   es
  412063:	or     DWORD PTR ds:0xc600404,eax
  412069:	push   ebp
  41206a:	add    BYTE PTR ds:0x64417002,cl
  412070:	add    DWORD PTR [esi+0x79600852],eax
  412076:	add    BYTE PTR [esp+eax*8],cl
  412079:	sub    al,0x46
  41207b:	xchg   BYTE PTR [eax],dl
  41207d:	inc    esp
  41207e:	add    ah,BYTE PTR [eax]
  412080:	dec    esp
  412081:	add    cl,BYTE PTR [eax]
  412083:	sbb    esp,DWORD PTR [ecx+0x2]
  412086:	int3   
  412087:	add    BYTE PTR [eax+0x11340],al
  41208d:	push   eax
  41208e:	push   es
  41208f:	add    DWORD PTR [eax-0x3],0x80080904
  412096:	adc    al,0x0
  412098:	mov    BYTE PTR [eax+0x1074c088],al
  41209e:	and    BYTE PTR [esi+0x11],al
  4120a1:	or     al,BYTE PTR [ecx+ebp*1+0x49]
  4120a5:	inc    eax
  4120a6:	inc    eax
  4120a7:	and    al,0x20
  4120a9:	stos   DWORD PTR es:[edi],eax
  4120aa:	sub    DWORD PTR [edx],ebp
  4120ac:	or     BYTE PTR [ecx+ecx*8+0x42262262],ch
  4120b3:	inc    esp
  4120b4:	xor    DWORD PTR [ecx+0x9508000],edx
  4120ba:	or     eax,0x20020212
  4120bf:	mov    WORD PTR [eax+0x3e040f30],es
  4120c5:	popa   
  4120c6:	retf   0x4510
  4120c9:	or     BYTE PTR [esi+0x41310085],al
  4120cf:	add    BYTE PTR [eax+eax*1-0x36],0x86
  4120d4:	adc    BYTE PTR [eax],al
  4120d6:	add    al,BYTE PTR [ebx]
  4120d8:	add    BYTE PTR [eax],cl
  4120da:	adc    al,0x0
  4120dc:	mov    ah,BYTE PTR [eax+0x21f2005]
  4120e2:	push   eax
  4120e3:	add    BYTE PTR [eax],dl
  4120e5:	add    al,BYTE PTR [eax-0x70]
  4120e8:	or     BYTE PTR [eax-0x7a],cl
  4120eb:	test   DWORD PTR [eax],esp
  4120ed:	je     0x412110
  4120ef:	lock adc dh,BYTE PTR [eax]
  4120f2:	add    BYTE PTR [edx-0x4dd7b3d4],dl
  4120f8:	add    esp,DWORD PTR [eax+0x3588c109]
  4120fe:	or     dl,BYTE PTR [eax]
  412100:	stos   BYTE PTR es:[edi],al
  412101:	inc    edx
  412102:	mov    cl,0x0
  412104:	sbb    DWORD PTR [ebx],edx
  412106:	inc    eax
  412107:	loopne 0x412169
  412109:	push   0x8516140
  41210e:	adc    ch,BYTE PTR [eax+edx*1]
  412111:	add    al,0x5
  412113:	adc    BYTE PTR [eax],bh
  412115:	add    BYTE PTR [esp],cl
  412118:	and    DWORD PTR [eax+0x8],edx
  41211b:	push   ecx
  41211c:	add    al,0xc
  41211e:	or     al,0x10
  412120:	or     BYTE PTR [edx-0x55],ah
  412123:	add    DWORD PTR [eax],0xffffffcd
  412126:	add    BYTE PTR [eax],al
  412128:	pop    esi
  412129:	pop    ss
  41212a:	add    BYTE PTR [eax],al
  41212c:	adc    BYTE PTR [edx-0x6fa34ecf],ah
  412132:	add    BYTE PTR [edx+eax*8],al
  412135:	mov    ds:0x2118c48,eax
  41213a:	add    BYTE PTR ds:0x50008a,dl
  412140:	popa   
  412141:	xor    BYTE PTR [eax],al
  412143:	push   ecx
  412144:	adc    BYTE PTR [eax+0x48395041],al
  41214a:	add    BYTE PTR [ecx],ah
  41214c:	sub    BYTE PTR [eax+0x14],0x82
  412150:	adc    BYTE PTR [ecx+0x43],bh
  412153:	and    DWORD PTR [edx],ebp
  412155:	add    BYTE PTR [eax+0x58],al
  412158:	sub    al,BYTE PTR [eax]
  41215a:	and    DWORD PTR [ecx+eiz*1],ebx
  41215d:	or     DWORD PTR [esi-0x5b],0x10
  412161:	adc    BYTE PTR [ecx-0x7decffae],0x8
  412168:	add    BYTE PTR [eax],cl
  41216a:	add    eax,esp
  41216c:	enter  0x510,0x8
  412170:	adc    BYTE PTR [eax+0x32],0x6
  412174:	adc    BYTE PTR [edx-0x7f7f19e8],al
  41217a:	add    al,0x18
  41217c:	inc    esp
  41217d:	push   es
  41217e:	lock or al,0x2
  412181:	push   0xa280aa50
  412186:	add    eax,0x8a04080a
  41218b:	popa   
  41218c:	and    BYTE PTR [edx+0x18],al
  41218f:	add    al,BYTE PTR [edx]
  412191:	or     BYTE PTR [ebp+eax*2-0x1d],al
  412195:	adc    BYTE PTR [ecx],al
  412197:	lods   eax,DWORD PTR ds:[esi]
  412198:	or     DWORD PTR [eax],edi
  41219a:	add    DWORD PTR [edi+0x1],ecx
  41219d:	adc    al,0x35
  41219f:	lds    eax,FWORD PTR [eax+eiz*1]
  4121a2:	and    al,0x42
  4121a4:	and    DWORD PTR [edx],ebx
  4121a6:	and    eax,0x504888
  4121ab:	or     ebp,edx
  4121ad:	and    BYTE PTR [eax+esi*2-0x10],ah
  4121b1:	add    BYTE PTR [esi],al
  4121b3:	add    BYTE PTR [ebp+0x9],al
  4121b6:	adc    BYTE PTR [eax],ah
  4121b8:	inc    esi
  4121b9:	pop    eax
  4121ba:	add    eax,0x2b300015
  4121bf:	lds    ebp,FWORD PTR [eax]
  4121c1:	adc    eax,esp
  4121c3:	push   es
  4121c4:	sub    eax,DWORD PTR [ecx]
  4121c6:	adc    DWORD PTR [ecx+0x50],edx
  4121c9:	add    DWORD PTR [edx],esp
  4121cb:	push   eax
  4121cc:	xor    eax,DWORD PTR [eax]
  4121ce:	bound  ebp,QWORD PTR [eax+edx*1]
  4121d1:	add    BYTE PTR [eax-0x3a],ch
  4121d4:	(bad)  [edx+0x5c418580]
  4121da:	or     al,0x84
  4121dc:	adc    BYTE PTR [edx-0x80],al
  4121df:	cwde   
  4121e0:	inc    edx
  4121e1:	or     cl,BYTE PTR [eax+0x4b100144]
  4121e7:	sbb    esp,DWORD PTR [eax]
  4121e9:	rol    BYTE PTR [ebx-0x591be660],0xc
  4121f0:	and    BYTE PTR [ecx+0xc],ah
  4121f3:	test   BYTE PTR [edx],cl
  4121f5:	push   esp
  4121f6:	rol    BYTE PTR [esi],cl
  4121f8:	and    BYTE PTR [edx],al
  4121fa:	add    BYTE PTR [edi],ah
  4121fc:	sub    BYTE PTR [ecx],ch
  4121fe:	adc    BYTE PTR [eax],0x54
  412201:	add    BYTE PTR [eax],dl
  412203:	test   DWORD PTR [eax-0x7fffce38],eax
  412209:	adc    BYTE PTR [eax+0x4402178a],al
  41220f:	and    BYTE PTR [edx],dl
  412211:	add    al,0x12
  412213:	dec    eax
  412214:	fs sub al,0x0
  412217:	push   0x44
  412219:	rol    BYTE PTR ds:0x248cb0,0x1
  412220:	and    ah,BYTE PTR [ebx+0x6424002]
  412226:	sub    ah,BYTE PTR [esi]
  412228:	mov    al,ds:0x6a6720f
  41222d:	or     BYTE PTR [ecx],al
  41222f:	bound  esi,QWORD PTR [edx+0x5a]
  412232:	adc    ch,BYTE PTR [eax+eax*1]
  412235:	or     BYTE PTR [eax-0x70],dh
  412238:	mov    al,BYTE PTR [edx-0x70]
  41223b:	adc    BYTE PTR [eax+0x0],cl
  41223e:	pop    es
  41223f:	add    DWORD PTR [edx],eax
  412241:	or     BYTE PTR [eax],cl
  412243:	add    bh,BYTE PTR [edx+0x0]
  412246:	loop   0x41224a
  412248:	add    BYTE PTR [eax],dl
  41224a:	adc    bh,BYTE PTR [ecx+eax*4]
  41224d:	inc    edx
  41224e:	and    BYTE PTR [eax],ah
  412250:	inc    ebp
  412251:	add    dl,BYTE PTR [edx+0x228e1006]
  412257:	adc    BYTE PTR [ebx+0x56680211],0xe0
  41225e:	push   esi
  41225f:	inc    ebp
  412260:	and    BYTE PTR [ecx+0x2],al
  412263:	adc    DWORD PTR [edx+0x14154012],eax
  412269:	test   BYTE PTR [ebx],dl
  41226b:	add    BYTE PTR [edx],0x40
  41226e:	inc    eax
  41226f:	or     al,0x92
  412271:	or     BYTE PTR [ebx],ah
  412273:	add    BYTE PTR [eax],ch
  412275:	cwde   
  412276:	push   cs
  412277:	or     BYTE PTR [eax],0x44
  41227a:	and    BYTE PTR [ecx],al
  41227c:	adc    DWORD PTR [edx],0xb0620302
  412282:	inc    esp
  412283:	add    BYTE PTR [eax],0x8
  412286:	mov    ah,BYTE PTR [ebx-0x7c]
  412289:	add    BYTE PTR [eax+0x940820],dl
  41228f:	fiadd  WORD PTR [ebp-0x38]
  412292:	inc    esp
  412293:	add    BYTE PTR [eax],0x8
  412296:	and    cl,BYTE PTR [eax]
  412298:	and    BYTE PTR [ecx],ah
  41229a:	xor    DWORD PTR [eax],eax
  41229c:	add    al,0x18
  41229e:	mov    ds:0x200a2804,al
  4122a3:	add    esp,DWORD PTR [ecx]
  4122a5:	adc    al,0x94
  4122a7:	dec    eax
  4122a8:	sbb    esi,eax
  4122aa:	add    dl,BYTE PTR [eax+0x2]
  4122ad:	add    eax,0xa66a0000
  4122b2:	add    cl,dh
  4122b4:	push   ss
  4122b5:	xor    BYTE PTR [ecx],0x0
  4122b8:	or     al,BYTE PTR [edi+edx*1]
  4122bb:	stos   BYTE PTR es:[edi],al
  4122bc:	xor    al,0x8
  4122be:	inc    ebp
  4122bf:	rol    BYTE PTR [eax],1
  4122c1:	adc    al,0x86
  4122c3:	adc    al,0x20
  4122c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122c6:	jb     0x4122cc
  4122c8:	or     BYTE PTR [ecx],dl
  4122ca:	or     BYTE PTR [ebx],0x18
  4122cd:	or     BYTE PTR [ecx],al
  4122cf:	and    eax,0xc34504e8
  4122d4:	sbb    BYTE PTR [esi-0x80],al
  4122d7:	and    al,0x21
  4122d9:	bound  edx,QWORD PTR [eax]
  4122db:	sbb    DWORD PTR [edx-0x221cfdf1],eax
  4122e1:	sbb    DWORD PTR [eax],esi
  4122e3:	add    DWORD PTR [edx],ecx
  4122e5:	inc    esi
  4122e6:	adc    BYTE PTR [eax+eiz*8+0x1050200],cl
  4122ed:	les    eax,FWORD PTR [eax]
  4122ef:	add    BYTE PTR [ecx+0x2405240a],cl
  4122f5:	xor    eax,0x44a08212
  4122fa:	mov    ds:0x1a402863,al
  4122ff:	add    bl,BYTE PTR [eax]
  412301:	add    BYTE PTR [eax+0xaa8850c],dl
  412307:	add    BYTE PTR [ecx+0x10],cl
  41230a:	or     edx,DWORD PTR [eax-0x5d3aff13]
  412310:	inc    ecx
  412311:	or     al,0x6
  412313:	mov    ds:0x4842c528,al
  412318:	add    BYTE PTR [eax+0x218a0328],al
  41231e:	and    DWORD PTR [ecx+ecx*1],esp
  412321:	adc    BYTE PTR [eax+ecx*2],dh
  412324:	nop
  412325:	push   cs
  412326:	xor    BYTE PTR [eax],al
  412328:	dec    edx
  412329:	xchg   ebx,eax
  41232a:	and    BYTE PTR [ecx+0x5403402],al
  412330:	xchg   ebx,eax
  412331:	add    ah,BYTE PTR [eax]
  412333:	adc    esp,DWORD PTR [eax]
  412335:	add    al,0x0
  412337:	inc    edx
  412338:	add    BYTE PTR [esp+esi*4],ch
  41233b:	jo     0x412363
  41233d:	mov    ds:0x8241404,al
  412342:	add    al,BYTE PTR [eax]
  412344:	sbb    BYTE PTR [eax+0x0],ch
  412347:	sub    BYTE PTR [ecx+eax*1+0x0],ch
  41234b:	add    BYTE PTR [ecx],al
  41234d:	xor    BYTE PTR [ecx+0x64040227],0x44
  412354:	push   ds
  412355:	adc    al,0x72
  412357:	adc    BYTE PTR [eax],al
  412359:	inc    ecx
  41235a:	(bad)  
  41235b:	push   ecx
  41235c:	mov    dh,0x22
  41235e:	leave  
  41235f:	or     BYTE PTR [eax],0x62
  412362:	add    BYTE PTR [esp+esi*1+0x45],dl
  412366:	add    eax,0x1464540
  41236b:	bound  esp,QWORD PTR [ebx]
  41236d:	or     al,BYTE PTR [edx+edx*2-0x7c3efd78]
  412374:	mov    al,es:0x852e0446
  41237a:	adc    al,al
  41237c:	and    ch,BYTE PTR [edx+eax*1+0xa011421]
  412383:	jmp    0x90c62590
  412388:	sub    ah,BYTE PTR [edi+0xe509020]
  41238e:	mov    al,ds:0x5810883
  412393:	add    BYTE PTR [eax+0x2],ah
  412396:	pop    eax
  412397:	rcl    BYTE PTR [esi+eiz*4],0x28
  41239b:	xchg   edx,eax
  41239c:	add    al,0x2
  41239e:	adc    al,BYTE PTR [eax+0x48]
  4123a1:	add    BYTE PTR ds:0x242b1a25,al
  4123a7:	adc    eax,0x82884095
  4123ac:	inc    edx
  4123ad:	push   ecx
  4123ae:	add    BYTE PTR [ecx+0x80a24b],0x2
  4123b5:	mov    BYTE PTR ds:0x8300080,ah
  4123bb:	adc    BYTE PTR [edx],0x4
  4123be:	and    DWORD PTR [eax+0x42810c27],0x61041622
  4123c8:	leave  
  4123c9:	sbb    BYTE PTR [ecx],dl
  4123cb:	inc    esi
  4123cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123cd:	and    al,0x61
  4123cf:	sub    BYTE PTR [eax+ebp*1],al
  4123d2:	add    al,0x42
  4123d4:	add    BYTE PTR [eax-0x5fff5df8],al
  4123da:	xchg   ebx,eax
  4123db:	dec    eax
  4123dc:	add    BYTE PTR [eax],al
  4123de:	mov    al,0x0
  4123e0:	or     BYTE PTR [eax],al
  4123e2:	push   eax
  4123e3:	add    BYTE PTR [esp],ch
  4123e6:	and    eax,0x8c0a89e
  4123eb:	add    BYTE PTR [ebx+0x2a],dh
  4123ee:	push   ecx
  4123ef:	and    al,0x40
  4123f1:	push   cs
  4123f2:	inc    edi
  4123f3:	or     al,0x8
  4123f5:	and    BYTE PTR [ebx-0x1a],0x9
  4123f9:	ltr    WORD PTR [eax]
  4123fc:	add    al,BYTE PTR [eax]
  4123fe:	bound  edx,QWORD PTR [edx+0x15390ab2]
  412404:	and    BYTE PTR [edx+0x40],al
  412407:	add    cl,BYTE PTR [edi+ebp*1]
  41240a:	or     al,0xa0
  41240c:	dec    esp
  41240d:	mov    WORD PTR [eax+eiz*1],?
  412410:	and    ebp,eax
  412412:	mov    ds:0x22e19b08,al
  412417:	inc    ebx
  412418:	test   eax,0x1002a2c0
  41241d:	and    al,0x11
  41241f:	add    eax,0x206900c4
  412424:	adc    DWORD PTR [eax-0x55851f64],esi
  41242a:	add    BYTE PTR es:[ecx],al
  41242d:	sub    cl,BYTE PTR [ebx]
  41242f:	xor    al,0x10
  412431:	add    BYTE PTR [ecx],al
  412433:	add    al,0x24
  412435:	mov    eax,0x44088290
  41243a:	add    al,0x83
  41243c:	push   es
  41243d:	adc    BYTE PTR [edx],0x90
  412440:	inc    edx
  412441:	or     DWORD PTR [eax],eax
  412443:	adc    BYTE PTR [edx],cl
  412445:	daa    
  412446:	add    BYTE PTR [eax+0x400c0010],0x58
  41244d:	xor    DWORD PTR [edi],esp
  41244f:	add    al,0x1
  412451:	add    cl,BYTE PTR [eax]
  412453:	ds inc ecx
  412455:	and    al,0x10
  412457:	retf   0x4
  41245a:	pusha  
  41245b:	and    al,BYTE PTR [edx]
  41245d:	sbb    BYTE PTR [eax],al
  41245f:	adc    BYTE PTR [edx],dl
  412461:	adc    BYTE PTR [eax-0x77f7f33c],dl
  412467:	and    BYTE PTR [esi],cl
  412469:	and    DWORD PTR [eax+0x24],0xffffff80
  41246d:	(bad)
  412470:	push   edi
  412471:	dec    ecx
  412472:	dec    esp
  412473:	xor    BYTE PTR [edx+ebx*8],dl
  412476:	add    al,0x40
  412478:	add    dl,BYTE PTR [eiz*2-0x754fbd50]
  41247f:	sub    al,0x90
  412481:	add    BYTE PTR [ecx],al
  412483:	dec    edx
  412484:	js     0x41249c
  412486:	push   0x18
  412488:	add    al,BYTE PTR [eax+ebp*2]
  41248b:	or     cl,BYTE PTR [eax+0x24]
  41248e:	push   eax
  41248f:	inc    eax
  412490:	add    BYTE PTR [eax-0x7f],dh
  412493:	add    BYTE PTR [ecx],ch
  412495:	or     BYTE PTR [edx],cl
  412497:	add    BYTE PTR [eax],al
  412499:	and    DWORD PTR [ecx],eax
  41249b:	cmp    ebx,DWORD PTR [eax+0x22802405]
  4124a1:	add    BYTE PTR [eax],al
  4124a3:	pusha  
  4124a4:	shl    DWORD PTR [esi],1
  4124a6:	add    cl,BYTE PTR [ebx+0x61]
  4124a9:	pop    ecx
  4124aa:	adc    BYTE PTR [ebx+0x476ee001],dl
  4124b0:	adc    BYTE PTR [eax],al
  4124b2:	adc    BYTE PTR [esi+ecx*2],cl
  4124b5:	add    BYTE PTR [ecx+0x21100a08],0xc0
  4124bc:	adc    eax,DWORD PTR [edx+0x22]
  4124bf:	and    BYTE PTR [eax+0x5c241384],dh
  4124c5:	fcom   QWORD PTR [ecx-0x2c]
  4124c8:	and    BYTE PTR [eax],bh
  4124ca:	inc    eax
  4124cb:	jo     0x4124d0
  4124cd:	or     BYTE PTR [eax],ah
  4124cf:	mov    ds,WORD PTR [ecx+0x40140280]
  4124d5:	and    BYTE PTR [eax-0x79ffbfde],dl
  4124db:	or     eax,0x264f824e
  4124e0:	addr16 mov ebp,eax
  4124e3:	adc    DWORD PTR [eax],eax
  4124e5:	and    al,0x14
  4124e7:	add    BYTE PTR [eax],al
  4124e9:	add    BYTE PTR [eax+0x19609f88],ah
  4124ef:	sbb    BYTE PTR [esi-0x7f7acdbf],cl
  4124f5:	mov    BYTE PTR [eax+0x6],dh
  4124f8:	outs   dx,BYTE PTR ds:[esi]
  4124f9:	add    BYTE PTR ds:0x10000109,0xc8
  412500:	or     eax,0x41590208
  412505:	push   edx
  412506:	and    BYTE PTR [eax],al
  412508:	add    BYTE PTR [eax],dl
  41250a:	and    BYTE PTR [edx+ecx*1],al
  41250d:	pusha  
  41250e:	and    al,0x1
  412510:	add    al,0x24
  412512:	adc    al,BYTE PTR [edx]
  412514:	and    BYTE PTR [eax],al
  412516:	rcl    BYTE PTR [eax+eax*2],0x21
  41251a:	nop
  41251b:	test   BYTE PTR [ebx+0x88c1a2c],al
  412521:	add    BYTE PTR [esi],0x60
  412524:	ret    
  412525:	or     DWORD PTR [esi],eax
  412527:	sub    BYTE PTR [edx],al
  412529:	and    BYTE PTR [ebx],cl
  41252b:	add    DWORD PTR [edx-0x38],eax
  41252e:	add    BYTE PTR [eax+0x10],al
  412531:	or     al,0x44
  412533:	or     BYTE PTR [eax],al
  412535:	dec    esp
  412536:	or     BYTE PTR [edi],0x10
  412539:	push   ss
  41253a:	or     BYTE PTR [eax],al
  41253c:	add    BYTE PTR ds:0xf000245,al
  412542:	or     al,0x0
  412544:	and    DWORD PTR [eax+0x49],0xe1150918
  41254b:	add    al,0x3
  41254d:	or     BYTE PTR [esp],0x2
  412551:	add    BYTE PTR [eax],al
  412553:	bound  eax,QWORD PTR [esi+eax*1]
  412556:	add    DWORD PTR [eax+0x11a3190c],0x5c800807
  412560:	and    al,BYTE PTR [eax]
  412562:	add    BYTE PTR [eax+ecx*1-0x70],0x20
  412567:	add    BYTE PTR [ebx-0x48535dfa],al
  41256d:	enter  0x20a9,0x11
  412571:	fs inc eax
  412573:	inc    eax
  412574:	mov    cl,BYTE PTR [eax]
  412576:	call   0x4145ab
  41257b:	cwde   
  41257c:	loopne 0x412582
  41257e:	inc    ecx
  41257f:	pop    es
  412580:	add    eax,0x80c00283
  412585:	sub    DWORD PTR [eax],ebx
  412587:	or     BYTE PTR [eax],ah
  412589:	jo     0x4125bb
  41258b:	cmp    BYTE PTR [edx],al
  41258d:	or     ah,cl
  41258f:	xor    BYTE PTR [ecx+0x9224681],0x1
  412596:	pop    es
  412597:	inc    edx
  412598:	mov    ah,ah
  41259a:	or     DWORD PTR [eax],esi
  41259c:	add    BYTE PTR [edx+ecx*1+0x20],al
  4125a0:	add    BYTE PTR [eax+eax*4+0x0],dh
  4125a4:	aam    0x34
  4125a6:	or     BYTE PTR [ecx+eax*4+0x40],al
  4125aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125ab:	add    al,0x28
  4125ad:	add    eax,0x24887742
  4125b2:	dec    ebp
  4125b3:	add    ah,BYTE PTR [eax]
  4125b5:	nop
  4125b6:	or     ecx,DWORD PTR [eax+0x4]
  4125b9:	adc    al,0x40
  4125bb:	pusha  
  4125bc:	or     BYTE PTR [eax],0xc
  4125bf:	add    ah,BYTE PTR [edx+0x59242200]
  4125c5:	inc    ecx
  4125c6:	adc    BYTE PTR [ecx+edx*1],bh
  4125c9:	inc    edx
  4125ca:	adc    dh,BYTE PTR [eax]
  4125cc:	pusha  
  4125cd:	add    al,BYTE PTR ds:0x56420002
  4125d3:	inc    eax
  4125d4:	xor    al,BYTE PTR [ecx]
  4125d6:	adc    ah,BYTE PTR [eax]
  4125d8:	add    DWORD PTR [ecx],edx
  4125da:	and    eax,0x40481104
  4125df:	or     al,0x84
  4125e1:	and    al,0xcb
  4125e3:	add    BYTE PTR [esp+ebx*1],0x4c
  4125e7:	adc    dh,BYTE PTR [eax+0x57]
  4125ea:	push   cs
  4125eb:	sbb    al,BYTE PTR [eax-0x6e7fdffb]
  4125f1:	adc    al,0x40
  4125f3:	adc    dl,BYTE PTR [eax+eax*4-0x34bc6f7c]
  4125fa:	jo     0x41265c
  4125fc:	and    BYTE PTR [eax],dl
  4125fe:	inc    esp
  4125ff:	mov    al,ds:0x40001210
  412604:	or     BYTE PTR [ecx-0x51ffdbe7],al
  41260a:	add    al,BYTE PTR [ebp+0x20]
  41260d:	inc    eax
  41260e:	adc    al,BYTE PTR [eax+0x0]
  412611:	add    BYTE PTR [eax],al
  412613:	inc    eax
  412614:	push   esp
  412615:	and    ah,BYTE PTR [eax-0x1f4f3d66]
  41261b:	add    BYTE PTR [ecx],0x58
  41261e:	and    BYTE PTR [edx],al
  412620:	add    DWORD PTR [ecx],0xffffff80
  412623:	inc    eax
  412624:	fst    DWORD PTR [eax]
  412626:	sbb    ch,BYTE PTR fs:[eax]
  412629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41262a:	xor    BYTE PTR [eax],al
  41262c:	add    al,0x0
  41262e:	mov    eax,0x4600100
  412633:	push   ebp
  412634:	add    BYTE PTR [eax+eax*1],cl
  412637:	and    al,0xd3
  412639:	in     al,0x40
  41263b:	and    al,0x82
  41263d:	or     DWORD PTR [eax],eax
  41263f:	and    al,BYTE PTR [eax+0x3000621c]
  412645:	and    al,0x14
  412647:	rol    DWORD PTR [eax-0x77bfaf80],1
  41264d:	adc    BYTE PTR ds:0x88405,dl
  412653:	pop    DWORD PTR [eax+0x72]
  412656:	or     BYTE PTR [edx+esi*2],ch
  412659:	loopne 0x41265f
  41265b:	and    DWORD PTR [eax],eax
  41265d:	inc    eax
  41265e:	enter  0x204c,0x22
  412662:	add    al,0x61
  412664:	mov    DWORD PTR [ecx+0x50832923],eax
  41266a:	adc    BYTE PTR [edx],0xc2
  41266d:	add    al,0x80
  41266f:	add    cl,BYTE PTR [edx]
  412671:	rcl    BYTE PTR [eax],0x10
  412674:	xor    al,0x80
  412676:	sbb    BYTE PTR [esp+eax*4+0x30700b88],al
  41267d:	test   BYTE PTR [ecx],ah
  41267f:	add    DWORD PTR [edx-0x7efe16f4],eax
  412685:	inc    esp
  412686:	or     al,0xa
  412688:	mov    al,ds:0x4c800408
  41268d:	dec    ebp
  41268e:	and    al,BYTE PTR [edx+edx*1]
  412691:	adc    eax,0x8110c25
  412696:	or     BYTE PTR [eax],ah
  412698:	push   es
  412699:	adc    DWORD PTR [eax],ecx
  41269b:	pushf  
  41269c:	add    BYTE PTR [ecx+eax*1],dl
  41269f:	inc    eax
  4126a0:	adc    DWORD PTR [eax+0x2d083080],eax
  4126a6:	and    al,BYTE PTR [eax+eiz*1]
  4126a9:	adc    BYTE PTR [edx+0xa040502],al
  4126af:	inc    eax
  4126b0:	test   BYTE PTR [edx],cl
  4126b2:	adc    BYTE PTR [edx],ah
  4126b4:	add    BYTE PTR [eax],cl
  4126b6:	mov    WORD PTR [eax+0xc082b48],cs
  4126bc:	add    al,dh
  4126be:	rol    BYTE PTR [eax-0x50],cl
  4126c1:	xor    DWORD PTR [ecx],edx
  4126c3:	or     esp,DWORD PTR [ecx]
  4126c5:	add    DWORD PTR [eax-0x7e],esp
  4126c8:	add    eax,0x20087d0
  4126cd:	add    BYTE PTR [eax+eax*1],cl
  4126d0:	add    eax,0x84000488
  4126d5:	mov    BYTE PTR [eax+0x2030010],al
  4126db:	or     BYTE PTR [edx],al
  4126dd:	cmp    BYTE PTR [eax],cl
  4126df:	inc    edx
  4126e0:	sub    BYTE PTR [edx+0x6],al
  4126e3:	adc    al,BYTE PTR [esi+0x60]
  4126e6:	call   0x4a90:0x4a03310
  4126ed:	add    eax,0x1855c25a
  4126f2:	and    al,0xc0
  4126f4:	jns    0x4126f8
  4126f6:	dec    eax
  4126f7:	inc    eax
  4126f8:	add    al,BYTE PTR [eax]
  4126fa:	les    eax,FWORD PTR [eax]
  4126fc:	nop
  4126fd:	xor    ch,al
  4126ff:	sub    eax,0x422c2420
  412704:	mov    ds:0x222040ee,al
  412709:	add    dl,BYTE PTR [eax]
  41270b:	xchg   BYTE PTR [edx+eiz*1+0x6204403],cl
  412712:	xor    BYTE PTR [edi-0x53],ah
  412715:	adc    al,BYTE PTR [edx]
  412717:	and    DWORD PTR [eax+0x44312300],eax
  41271d:	and    BYTE PTR ds:[ebx],dh
  412720:	les    esp,FWORD PTR ds:0x4910400
  412726:	and    eax,0x10000084
  41272b:	adc    BYTE PTR [eax],dl
  41272d:	pop    eax
  41272e:	sbb    dl,al
  412730:	add    BYTE PTR [edx+0x2],0x4
  412734:	ret    
  412735:	lods   al,BYTE PTR ds:[esi]
  412736:	xchg   edx,eax
  412737:	add    BYTE PTR [eax],al
  412739:	adc    DWORD PTR [eax],esp
  41273b:	add    BYTE PTR [esp+eax*1],0xc1
  41273f:	inc    eax
  412740:	or     BYTE PTR [eax],ah
  412742:	aam    0x29
  412744:	add    cl,BYTE PTR [edx+ecx*2]
  412747:	add    BYTE PTR [eax+ebx*1-0x7c5e9fc0],0x8e
  41274f:	add    eax,0x9801407
  412754:	inc    eax
  412755:	and    BYTE PTR [eax-0x6c97ffd7],0x40
  41275c:	or     BYTE PTR [eax],cl
  41275e:	add    BYTE PTR [eax+0x40],0x6b
  412762:	mov    al,0x43
  412764:	adc    BYTE PTR [esi-0x40],0x80
  412768:	cwde   
  412769:	(bad)  
  41276a:	mov    BYTE PTR [eax-0x80],dl
  41276d:	add    dl,BYTE PTR [edx]
  41276f:	rol    DWORD PTR [edx],0x10
  412772:	nop
  412773:	rol    dl,cl
  412775:	xor    esp,DWORD PTR [eax]
  412777:	or     BYTE PTR [eax],al
  412779:	add    BYTE PTR [eax+0x40],al
  41277c:	call   DWORD PTR ds:0x435a14
  412782:	add    cl,BYTE PTR [edx+eax*8-0x5e6fbfec]
  412789:	push   edi
  41278a:	add    BYTE PTR [eax],0x10
  41278d:	add    BYTE PTR [eax+eax*4],cl
  412790:	add    BYTE PTR [esi],dh
  412792:	adc    eax,0xc880002b
  412797:	and    al,0x80
  412799:	adc    BYTE PTR [ebp+0x24ce4000],0x30
  4127a0:	add    BYTE PTR [edx+eiz*4],al
  4127a3:	add    BYTE PTR fs:[eax],cl
  4127a6:	adc    DWORD PTR [eax],ecx
  4127a8:	mov    cl,0xa7
  4127aa:	add    BYTE PTR ds:0x4006a068,cl
  4127b0:	test   eax,ecx
  4127b2:	loopne 0x412805
  4127b4:	inc    esp
  4127b5:	or     al,BYTE PTR [ebp+0x5]
  4127b8:	popa   
  4127b9:	push   edx
  4127ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127bb:	les    eax,FWORD PTR [edx+0x258068a4]
  4127c1:	inc    esp
  4127c2:	add    eax,0x26130181
  4127c7:	mov    DWORD PTR [esi-0x7b],edx
  4127ca:	or     BYTE PTR ds:0xc8241206,ah
  4127d0:	retf   0x2b70
  4127d3:	sbb    al,0x14
  4127d5:	add    BYTE PTR [eax],cl
  4127d7:	inc    eax
  4127d8:	dec    ecx
  4127d9:	inc    ecx
  4127da:	sub    BYTE PTR [esp+eax*1],0x28
  4127de:	inc    ecx
  4127df:	or     BYTE PTR [eax],dh
  4127e1:	add    BYTE PTR [edi-0x7e],dh
  4127e4:	inc    esi
  4127e5:	sub    BYTE PTR [eax+0x10],al
  4127e8:	imul   esi,eax,0x12
  4127eb:	sub    ah,BYTE PTR [ecx]
  4127ed:	and    BYTE PTR [eax],al
  4127ef:	dec    esp
  4127f0:	or     eax,eax
  4127f2:	dec    ebp
  4127f3:	and    al,0x68
  4127f5:	add    DWORD PTR [eax-0x2f],0xa
  4127f9:	add    al,0xc1
  4127fb:	and    BYTE PTR [eax],dl
  4127fd:	add    DWORD PTR [edx+eiz*2+0x20],edx
  412801:	add    al,0x80
  412803:	xchg   esp,eax
  412804:	add    DWORD PTR [eax+eiz*2],eax
  412807:	add    BYTE PTR [esp+edx*8],ah
  41280a:	or     dl,BYTE PTR [ecx+edx*1-0x7e]
  41280e:	add    BYTE PTR [eax+0x20532300],bh
  412814:	add    DWORD PTR [edx],eax
  412816:	add    BYTE PTR [ecx+eax*1-0x80],ch
  41281a:	and    BYTE PTR [eax],ah
  41281c:	and    eax,0xa840181
  412821:	inc    eax
  412822:	ror    BYTE PTR [eax+0x0],0x24
  412826:	add    al,BYTE PTR [ecx]
  412828:	mov    al,ds:0x2a032836
  41282d:	push   esp
  41282e:	sub    al,0xa
  412830:	sub    eax,0x90611409
  412835:	add    DWORD PTR [esi],0x70
  412838:	pop    edx
  412839:	les    esp,FWORD PTR [esi+0xc100041]
  41283f:	or     DWORD PTR [eax],eax
  412841:	add    BYTE PTR [eax+eiz*1],bl
  412844:	and    al,0x84
  412846:	xchg   BYTE PTR [edx+0xb],ch
  412849:	dec    eax
  41284a:	adc    BYTE PTR [esi-0x7beff9f7],dl
  412850:	sub    DWORD PTR [ecx-0x34],eax
  412853:	inc    esp
  412854:	add    BYTE PTR [eax+ecx*2],ah
  412857:	mov    DWORD PTR fs:[eax],edx
  41285a:	or     bh,dl
  41285c:	or     al,0x30
  41285e:	mov    al,ds:0x295120c0
  412863:	inc    edx
  412864:	test   cl,cl
  412866:	add    BYTE PTR [eax+ecx*1-0x7f7fffd8],dl
  41286d:	and    ah,BYTE PTR [edx+0x68c5c769]
  412873:	sub    DWORD PTR [edx+edx*2],eax
  412876:	mov    eax,ds:0x1000204
  41287b:	sbb    ah,BYTE PTR [edx+ecx*1]
  41287e:	sbb    al,BYTE PTR [ebx+eiz*2]
  412881:	nop
  412882:	or     cl,BYTE PTR [eax]
  412884:	xchg   edx,eax
  412885:	inc    eax
  412886:	sub    DWORD PTR [eax],esp
  412888:	add    BYTE PTR [ecx+0x23],cl
  41288b:	loopne 0x4128d2
  41288d:	inc    esi
  41288e:	es sbb al,0x84
  412891:	jb     0x4128a4
  412893:	add    eax,0xc40c6004
  412898:	loop   0x41289d
  41289a:	inc    eax
  41289b:	mov    WORD PTR [eax],es
  41289d:	push   ss
  41289e:	adc    dl,BYTE PTR [ebp+0x103d0020]
  4128a4:	add    DWORD PTR [edx],esp
  4128a6:	rcr    dl,cl
  4128a8:	mov    eax,ds:0x8c1c8200
  4128ad:	call   0x5564ab9
  4128b2:	sub    al,0xa0
  4128b4:	test   al,0x4
  4128b6:	inc    eax
  4128b7:	adc    BYTE PTR [ebp+0x0],dl
  4128ba:	push   eax
  4128bb:	xchg   edx,eax
  4128bc:	inc    esp
  4128bd:	inc    eax
  4128be:	rol    DWORD PTR [ebx],0x43
  4128c1:	and    DWORD PTR [eax-0x60],ecx
  4128c4:	ret    0x1488
  4128c7:	or     BYTE PTR [eax+0x209c10a4],0x40
  4128ce:	or     DWORD PTR [ecx+0x43010808],ecx
  4128d4:	mov    eax,ds:0x90080610
  4128d9:	add    al,0xe0
  4128db:	and    BYTE PTR [eax],dl
  4128dd:	add    BYTE PTR [edx],cl
  4128df:	and    bl,BYTE PTR es:[esi]
  4128e2:	add    BYTE PTR [ecx+eax*8],al
  4128e5:	inc    edx
  4128e6:	sub    al,0xf2
  4128e8:	cmp    BYTE PTR [edx-0x77ef3bdb],al
  4128ee:	leave  
  4128ef:	or     eax,0xc1204040
  4128f4:	mov    al,al
  4128f6:	inc    esp
  4128f7:	add    DWORD PTR [ebx],esp
  4128f9:	xor    DWORD PTR [esp+eax*1+0x60],edx
  4128fd:	and    DWORD PTR [ecx],edx
  4128ff:	adc    BYTE PTR [ecx+0x18ca8be],al
  412905:	rol    BYTE PTR [edx+eiz*8],1
  412908:	add    DWORD PTR [eax],esp
  41290a:	and    eax,DWORD PTR [eax]
  41290c:	adc    cl,BYTE PTR [esi]
  41290e:	add    dl,BYTE PTR [eax+0x2]
  412911:	add    DWORD PTR [eax],eax
  412913:	fldcw  WORD PTR [edx+0x40060407]
  412919:	xchg   esp,eax
  41291a:	or     al,0x11
  41291c:	and    BYTE PTR [esi],0x22
  41291f:	test   BYTE PTR [eax+eiz*2],al
  412922:	adc    BYTE PTR [eax],ah
  412924:	adc    DWORD PTR [eax],eax
  412926:	mov    al,0xa0
  412928:	or     BYTE PTR [eax+0x63828e0a],al
  41292e:	sbb    al,al
  412930:	adc    BYTE PTR [eax],cl
  412932:	xor    al,0x4a
  412934:	pop    ss
  412935:	add    al,BYTE PTR [edx]
  412937:	ret    0x208
  41293a:	or     BYTE PTR [eax-0x6d5b7deb],bh
  412940:	mov    dl,BYTE PTR [eax]
  412942:	cmp    esp,DWORD PTR [ebx+0x5a2624]
  412948:	inc    edx
  412949:	add    al,0x80
  41294b:	sub    DWORD PTR [eax+0x3013060],eax
  412951:	or     al,0x10
  412953:	rol    BYTE PTR [ebx],0x0
  412956:	add    ah,BYTE PTR [eax+0x185c4030]
  41295c:	sub    BYTE PTR [ebx],al
  41295e:	adc    BYTE PTR [edx],al
  412960:	add    BYTE PTR es:[eax+0x2],0x80
  412965:	lock adc eax,DWORD PTR [eax]
  412968:	bound  ecx,QWORD PTR [esi]
  41296a:	inc    eax
  41296b:	or     bl,ah
  41296d:	inc    esp
  41296e:	or     DWORD PTR [eax],ebx
  412970:	add    DWORD PTR [eax+0x0],eax
  412973:	or     DWORD PTR [ecx],0x208001a
  412979:	push   eax
  41297a:	jo     0x412990
  41297c:	call   0x12553b81
  412981:	mov    ch,0x4
  412983:	push   edx
  412984:	adc    BYTE PTR [eax+eax*1+0x26],dl
  412988:	push   es
  412989:	inc    eax
  41298a:	adc    esp,DWORD PTR [esi+0x42829003]
  412990:	add    dl,BYTE PTR [eax+0x62006032]
  412996:	or     BYTE PTR [eax],ah
  412998:	test   BYTE PTR [ecx],al
  41299a:	push   cs
  41299b:	or     DWORD PTR [eax+0x48124011],eax
  4129a1:	inc    edx
  4129a2:	sub    al,0x50
  4129a4:	mov    ds:0xc303026,al
  4129a9:	dec    edx
  4129aa:	ret    0xc004
  4129ad:	push   cs
  4129ae:	nop
  4129af:	bound  edx,QWORD PTR [eax+0x48880181]
  4129b5:	lods   al,BYTE PTR ds:[esi]
  4129b6:	(bad)  
  4129b7:	int3   
  4129b8:	adc    ebx,DWORD PTR [eax-0x7ff5fc00]
  4129be:	ror    ah,1
  4129c0:	or     BYTE PTR [eax],dl
  4129c2:	add    al,BYTE PTR [eax-0x68e75f1f]
  4129c8:	adc    BYTE PTR [eax],bh
  4129ca:	add    BYTE PTR [esi+0x42db920e],al
  4129d0:	add    BYTE PTR ds:0x91818401,ch
  4129d6:	shl    BYTE PTR [edx],1
  4129d8:	dec    ebp
  4129d9:	or     BYTE PTR [ecx+0x48801c00],dl
  4129df:	mov    eax,0x294a4204
  4129e4:	or     BYTE PTR [ebx],al
  4129e6:	adc    BYTE PTR [eax],al
  4129e8:	pop    ds
  4129e9:	add    eax,DWORD PTR [eax]
  4129eb:	mov    al,BYTE PTR [ebx]
  4129ed:	and    BYTE PTR [edi],al
  4129ef:	rol    BYTE PTR [edx+eax*1],1
  4129f2:	pop    edx
  4129f3:	mov    dl,0xa2
  4129f5:	inc    ecx
  4129f6:	push   0x40400540
  4129fb:	leave  
  4129fc:	or     BYTE PTR [eax+0x408080],al
  412a02:	or     DWORD PTR [eax-0x5b6ea472],ebx
  412a08:	and    al,al
  412a0a:	sub    eax,0x80270024
  412a0f:	les    eax,FWORD PTR [ecx]
  412a11:	adc    BYTE PTR [ecx-0x7c],al
  412a14:	add    BYTE PTR [edx],ah
  412a16:	add    al,0x6
  412a18:	adc    BYTE PTR [edx+0x20],0x19
  412a1c:	or     BYTE PTR [eax+edx*8+0xd],al
  412a20:	mov    al,ds:0x41228808
  412a25:	or     BYTE PTR [esi+0x13238040],cl
  412a2b:	add    BYTE PTR [eax],al
  412a2d:	fs add eax,0x10881020
  412a33:	shl    BYTE PTR [ebx+eax*1],0x10
  412a37:	mov    BYTE PTR [edx+ecx*1],dh
  412a3a:	mov    BYTE PTR [edx+eiz*1],al
  412a3d:	sub    eax,0x41c500
  412a42:	and    BYTE PTR [esi],al
  412a44:	adc    BYTE PTR [eax+0x70051000],al
  412a4a:	add    DWORD PTR [eax+0x1e1035e8],eax
  412a50:	aam    0x5
  412a52:	cdq    
  412a53:	xchg   ebp,eax
  412a54:	inc    esp
  412a55:	add    BYTE PTR [ebx+0x42],al
  412a58:	xchg   BYTE PTR [esi+0x4eb811a9],ah
  412a5e:	xor    BYTE PTR [ebp+0x401e12],dh
  412a64:	inc    esp
  412a65:	and    eax,0x692123
  412a6a:	and    BYTE PTR [edx],al
  412a6c:	add    edx,DWORD PTR [eax]
  412a6e:	rol    BYTE PTR [eax+0xc],0x40
  412a72:	adc    BYTE PTR [eax+0xd60185],al
  412a78:	add    BYTE PTR [eax],cl
  412a7a:	xchg   ecx,eax
  412a7b:	or     BYTE PTR [edx],cl
  412a7d:	or     al,BYTE PTR [edx]
  412a7f:	test   BYTE PTR [eax-0x3bfebede],ah
  412a85:	leave  
  412a86:	mov    BYTE PTR [eax+0xe],al
  412a89:	add    BYTE PTR [eax+0x800c008],ah
  412a8f:	push   0x8002000b
  412a94:	or     BYTE PTR [edx],al
  412a96:	add    DWORD PTR [eax],0x11c04676
  412a9c:	add    al,0xa2
  412a9e:	add    bl,BYTE PTR [eax+0x20]
  412aa1:	test   BYTE PTR [eax],dl
  412aa3:	loope  0x412aa5
  412aa5:	rol    DWORD PTR [eax],0xa4
  412aa8:	or     DWORD PTR [eax+0x50],esp
  412aab:	mov    al,0x5
  412aad:	inc    eax
  412aae:	and    al,BYTE PTR [eax]
  412ab0:	enter  0x1018,0x0
  412ab4:	xchg   ecx,eax
  412ab5:	add    al,al
  412ab7:	add    bl,BYTE PTR [ebx+0x22801888]
  412abd:	add    BYTE PTR [eax+eiz*1],al
  412ac0:	adc    DWORD PTR [edx],0x40
  412ac3:	jo     0x412ad5
  412ac5:	enter  0x84,0x84
  412ac9:	and    al,BYTE PTR [edi+0x458e03a1]
  412acf:	je     0x412af1
  412ad1:	inc    ebx
  412ad2:	jne    0x412a54
  412ad4:	xor    DWORD PTR [ecx+0x6680c09],0x4944b0
  412ade:	add    BYTE PTR [ebp+0x40a00152],al
  412ae4:	and    al,0x80
  412ae6:	sub    BYTE PTR [eax],al
  412ae8:	adc    BYTE PTR [ebx],0x66
  412aeb:	add    BYTE PTR [edx],al
  412aed:	sub    BYTE PTR [ecx],cl
  412aef:	inc    ebx
  412af0:	inc    ebx
  412af1:	add    al,BYTE PTR [eax+0x428c2004]
  412af7:	or     al,0x64
  412af9:	add    al,0x24
  412afb:	sub    al,0x18
  412afd:	dec    ebp
  412afe:	add    dl,ah
  412b00:	add    ah,ah
  412b02:	push   ss
  412b03:	nop
  412b04:	xchg   esp,eax
  412b05:	inc    eax
  412b06:	or     BYTE PTR [ecx-0x23],cl
  412b09:	xchg   ebx,eax
  412b0a:	and    BYTE PTR ds:0x403050e0,cl
  412b10:	adc    BYTE PTR [eax],cl
  412b12:	data16 add BYTE PTR [ecx+eax*4],ah
  412b16:	dec    eax
  412b17:	push   eax
  412b18:	adc    al,0x90
  412b1a:	and    BYTE PTR [esi],0xc0
  412b1d:	inc    eax
  412b1e:	adc    eax,0xc010208
  412b23:	add    BYTE PTR [eax+eax*1+0x8],al
  412b27:	xchg   BYTE PTR [ebp+edx*2-0x7ffdfefb],ah
  412b2e:	rol    BYTE PTR [eax+ebp*1],0x82
  412b32:	push   es
  412b33:	icebp  
  412b34:	add    BYTE PTR [edx],cl
  412b36:	retf   
  412b37:	pusha  
  412b38:	dec    ebx
  412b39:	and    al,BYTE PTR [edx]
  412b3b:	inc    ebp
  412b3c:	sbb    DWORD PTR ds:0x4820c360,eax
  412b42:	xor    al,0x0
  412b44:	push   ecx
  412b45:	and    al,0x27
  412b47:	and    BYTE PTR [ecx+0x408a0001],al
  412b4d:	inc    ecx
  412b4e:	push   es
  412b4f:	and    bl,BYTE PTR [eax]
  412b51:	add    BYTE PTR [eax],0x8
  412b54:	and    BYTE PTR [ecx],dl
  412b56:	and    al,0x40
  412b58:	push   eax
  412b59:	add    al,0x82
  412b5b:	data16 sub BYTE PTR [edx],al
  412b5e:	add    BYTE PTR [ebx+0x4815e207],ah
  412b64:	add    BYTE PTR [eax],ch
  412b66:	sub    BYTE PTR [eax+ebx*1],dl
  412b69:	inc    edx
  412b6a:	and    BYTE PTR [ecx+0x900c634],0x0
  412b71:	dec    esp
  412b72:	add    BYTE PTR [eax-0x78],al
  412b75:	add    BYTE PTR [edx],al
  412b77:	test   BYTE PTR [eax],dl
  412b79:	and    cl,BYTE PTR [eax+0x41ac0094]
  412b7f:	sbb    DWORD PTR [eax+0x19],ecx
  412b82:	dec    eax
  412b83:	add    cl,BYTE PTR [ecx+0x0]
  412b86:	add    BYTE PTR [ecx+0x2],ah
  412b89:	aad    0xec
  412b8b:	add    BYTE PTR [eax+0x885a3],cl
  412b91:	and    BYTE PTR [edx],0xa0
  412b94:	add    al,0x10
  412b96:	pop    ss
  412b97:	add    eax,0x15408302
  412b9c:	add    DWORD PTR [ecx+0x16034888],ecx
  412ba2:	and    al,BYTE PTR [eax]
  412ba4:	or     eax,DWORD PTR [edx]
  412ba6:	add    BYTE PTR [eax],ah
  412ba8:	rol    BYTE PTR [edx],1
  412baa:	arpl   WORD PTR [esp+ecx*1+0x0],sp
  412bae:	add    BYTE PTR [eax+0x18],cl
  412bb1:	add    al,0x33
  412bb3:	sbb    DWORD PTR [eax+eiz*1],0x39220192
  412bba:	xchg   ebx,eax
  412bbb:	add    dh,BYTE PTR [eax]
  412bbd:	mov    BYTE PTR [eax],cl
  412bbf:	add    DWORD PTR [eax+edx*4+0x3],edx
  412bc3:	add    BYTE PTR [edx+eiz*1+0x18a4a46a],cl
  412bca:	jb     0x412be4
  412bcc:	add    eax,0x84c94084
  412bd1:	int3   
  412bd2:	add    DWORD PTR fs:[eax+edi*1],eax
  412bd6:	add    DWORD PTR [eax],eax
  412bd8:	inc    eax
  412bd9:	or     BYTE PTR [eax+eax*1+0x1],0x28
  412bde:	adc    ah,BYTE PTR [eax+0x4a244420]
  412be4:	add    al,BYTE PTR [eax+0xc517d04]
  412bea:	add    al,0xd0
  412bec:	test   BYTE PTR ds:0x20881910,ah
  412bf2:	add    BYTE PTR [eiz*1-0x277deeee],ah
  412bf9:	add    al,BYTE PTR [eax]
  412bfb:	add    BYTE PTR [eax+edx*1],bh
  412bfe:	ror    BYTE PTR [edx-0x579edfb0],0x28
  412c05:	add    BYTE PTR [esi+0x6],al
  412c08:	inc    eax
  412c09:	dec    ebx
  412c0a:	or     BYTE PTR [edx+eax*1],0x14
  412c0e:	add    eax,DWORD PTR [eax-0x7c]
  412c11:	add    al,BYTE PTR [edx]
  412c13:	sbb    BYTE PTR [eax],al
  412c15:	rcl    DWORD PTR [edx+0x0],0x40
  412c19:	add    BYTE PTR [esi+0x40062000],dl
  412c1f:	sub    BYTE PTR [eax],cl
  412c21:	xor    BYTE PTR [eax+0x228db0],0x2
  412c28:	nop
  412c29:	mov    DWORD PTR [eax+eax*1],eax
  412c2c:	adc    cl,BYTE PTR [eax]
  412c2e:	or     BYTE PTR [edi+0xa0b00d2],bl
  412c34:	or     edi,ebp
  412c36:	lods   al,BYTE PTR ds:[esi]
  412c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c38:	add    eax,DWORD PTR es:[eax+0x0]
  412c3c:	adc    al,0x4b
  412c3e:	add    BYTE PTR [eax+0x32468100],al
  412c44:	add    DWORD PTR [edx+0x1],0x2068c45
  412c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c4c:	sbb    al,BYTE PTR [eax]
  412c4e:	es add al,al
  412c51:	mov    BYTE PTR [ecx],cl
  412c53:	adc    BYTE PTR [eax],al
  412c55:	sub    BYTE PTR [eax],0xc0
  412c58:	mov    WORD PTR [esi+0x21110115],es
  412c5e:	inc    ebp
  412c5f:	push   edx
  412c60:	xor    BYTE PTR [eax],al
  412c62:	inc    ecx
  412c63:	add    al,0xd4
  412c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c66:	arpl   WORD PTR [ecx],ax
  412c68:	add    DWORD PTR [eax-0x7f7defdd],0x4814e898
  412c72:	adc    ah,ah
  412c74:	ror    BYTE PTR [eax],1
  412c76:	inc    esp
  412c77:	sub    DWORD PTR [eax],eax
  412c79:	rcr    BYTE PTR [ebp-0x7fefcfae],0x5
  412c80:	add    al,0x10
  412c82:	adc    BYTE PTR [eax-0x78],0xb0
  412c86:	add    BYTE PTR [eax],dh
  412c88:	les    ecx,FWORD PTR [eax+esi*4]
  412c8b:	and    edx,eax
  412c8d:	cmp    al,0x0
  412c8f:	rol    BYTE PTR [eax+0x15034d5],0x40
  412c96:	or     ah,BYTE PTR [ecx+0x61004890]
  412c9c:	inc    eax
  412c9d:	add    DWORD PTR [eax],0x20e0050
  412ca3:	or     BYTE PTR [eax+0x2040329b],ah
  412ca9:	or     ah,BYTE PTR [esi]
  412cab:	mov    ds:0x7a0140,al
  412cb0:	mov    fs,WORD PTR [eax]
  412cb2:	add    BYTE PTR [esi],0xb
  412cb5:	add    ebp,DWORD PTR [eax]
  412cb7:	ret    0x2742
  412cba:	adc    DWORD PTR fs:[eax+eiz*1],edi
  412cbe:	add    DWORD PTR [edx+eax*4],edi
  412cc1:	add    al,0x10
  412cc3:	xor    BYTE PTR [ebx],dl
  412cc5:	adc    BYTE PTR [ecx+0x140840e3],0x42
  412ccc:	cdq    
  412ccd:	or     eax,0x2034a027
  412cd2:	push   es
  412cd3:	test   DWORD PTR [eax+0x4012c8a4],ecx
  412cd9:	and    BYTE PTR [eax-0x5ffeebf0],0x59
  412ce0:	sub    BYTE PTR [eax],al
  412ce2:	and    dl,BYTE PTR [eax]
  412ce4:	test   DWORD PTR [eax+0x11298121],eax
  412cea:	mov    WORD PTR [edx],fs
  412cec:	add    dl,BYTE PTR [ebp-0x3e9a7b7a]
  412cf2:	dec    ecx
  412cf3:	inc    ecx
  412cf4:	or     BYTE PTR [eax],0x70
  412cf7:	and    BYTE PTR [eax+0x1],al
  412cfa:	add    BYTE PTR [eax],al
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	mov    BYTE PTR ds:0x3103042c,bl
  412d04:	ret    
  412d05:	push   eax
  412d06:	sbb    BYTE PTR [ecx],dl
  412d08:	sub    BYTE PTR [eax],ah
  412d0a:	add    dl,BYTE PTR [eax+0x0]
  412d0d:	in     al,dx
  412d0e:	add    al,BYTE PTR [ecx+0x44]
  412d11:	and    BYTE PTR [eax],al
  412d13:	adc    al,0x10
  412d15:	inc    edx
  412d16:	inc    edx
  412d17:	add    BYTE PTR [eax],al
  412d19:	dec    eax
  412d1a:	jbe    0x412cdd
  412d1c:	and    BYTE PTR [esi+eax*1+0x0],al
  412d20:	or     al,BYTE PTR [eax-0x5f9fbec9]
  412d26:	or     al,BYTE PTR [edx]
  412d28:	rol    BYTE PTR [eax+0x2611f514],0x1
  412d2f:	add    BYTE PTR [eax],ah
  412d31:	add    al,0x12
  412d33:	inc    eax
  412d34:	or     BYTE PTR [edx+eax*1+0x48],dh
  412d38:	xchg   ecx,eax
  412d39:	add    al,0x78
  412d3b:	xchg   ecx,eax
  412d3c:	mov    BYTE PTR [eax],al
  412d3e:	add    eax,0xa01a06e5
  412d43:	push   eax
  412d44:	or     al,BYTE PTR [edx]
  412d46:	push   cs
  412d47:	add    al,0x88
  412d49:	adc    BYTE PTR [eax+0x4002ba0],cl
  412d4f:	adc    BYTE PTR [ecx],dl
  412d51:	push   eax
  412d52:	sbb    al,0x88
  412d54:	inc    edx
  412d55:	xor    cl,BYTE PTR [edx+edx*2]
  412d58:	push   0xb0020
  412d5d:	cmp    BYTE PTR [edi+0x842cc40],cl
  412d63:	jge    0x412d70
  412d65:	mov    al,cl
  412d67:	sbb    DWORD PTR [edx],edx
  412d69:	add    al,0x80
  412d6b:	inc    edx
  412d6c:	inc    edx
  412d6d:	cmp    DWORD PTR [eax+edx*2],0x440107e
  412d74:	and    al,BYTE PTR [ecx+0x40c2064]
  412d7a:	stos   BYTE PTR es:[edi],al
  412d7b:	mov    BYTE PTR [eax],al
  412d7d:	add    ecx,DWORD PTR [eax]
  412d7f:	add    BYTE PTR [edx],al
  412d81:	add    BYTE PTR [eax+0x20],ch
  412d84:	xor    BYTE PTR [ecx+eax*1+0x68],dl
  412d88:	int    0x18
  412d8a:	adc    BYTE PTR [eax],al
  412d8c:	nop
  412d8d:	xchg   ecx,eax
  412d8e:	and    BYTE PTR [eax],al
  412d90:	push   eax
  412d91:	inc    ecx
  412d92:	loop   0x412dfd
  412d94:	push   es
  412d95:	or     al,0xc
  412d97:	or     DWORD PTR [eax+ecx*1-0x7f2defdd],ebp
  412d9e:	add    al,0x10
  412da0:	adc    eax,DWORD PTR [eax-0x60]
  412da3:	cwde   
  412da4:	add    BYTE PTR [edx+0x9],cl
  412da7:	add    al,0x94
  412da9:	dec    esi
  412daa:	ss adc al,0x3
  412dad:	or     eax,0x6401da21
  412db2:	add    BYTE PTR [eax],al
  412db4:	imul   eax,DWORD PTR [ecx],0xb1430c0
  412dba:	or     cl,dl
  412dbc:	inc    eax
  412dbd:	xor    al,0x3
  412dbf:	xor    BYTE PTR [ebx-0x5e],al
  412dc2:	sbb    ah,BYTE PTR [eax+0x48]
  412dc5:	xor    al,cl
  412dc7:	mov    BYTE PTR [eax+0x30],al
  412dca:	sub    BYTE PTR [edx+eiz*2+0x39182000],cl
  412dd1:	add    BYTE PTR [eax+0x1],0x1
  412dd5:	sbb    DWORD PTR [eax],edx
  412dd7:	mov    ds:0xa0954228,al
  412ddc:	add    DWORD PTR [eax],0x88298a4
  412de2:	loopne 0x412d84
  412de4:	add    DWORD PTR [eax],eax
  412de6:	and    BYTE PTR [eax],0x84
  412de9:	add    BYTE PTR [ecx-0x70],cl
  412dec:	xchg   esp,eax
  412ded:	test   BYTE PTR [ecx],cl
  412def:	out    dx,al
  412df0:	add    BYTE PTR [eax+0x20],dl
  412df3:	inc    edx
  412df4:	and    al,0x95
  412df6:	and    BYTE PTR [eax-0x71],cl
  412df9:	adc    BYTE PTR [edx],al
  412dfb:	dec    eax
  412dfc:	xchg   edi,eax
  412dfd:	sbb    BYTE PTR [eax-0x1d],0x40
  412e01:	and    al,BYTE PTR [eax+eax*1]
  412e04:	add    BYTE PTR [edx+ecx*1],cl
  412e07:	add    ch,BYTE PTR [ecx]
  412e09:	add    BYTE PTR [eax],al
  412e0b:	adc    al,0x13
  412e0d:	add    esp,edx
  412e0f:	add    DWORD PTR [ebp-0x79bed97c],esi
  412e15:	add    al,BYTE PTR ds:0xc0114008
  412e1b:	inc    esp
  412e1c:	add    al,BYTE PTR [eax+ecx*2]
  412e1f:	add    BYTE PTR [eax+0x10205044],bl
  412e25:	and    al,BYTE PTR [eax-0x76d6bbb2]
  412e2b:	and    al,BYTE PTR [edx+ebx*8]
  412e2e:	push   edx
  412e2f:	ins    BYTE PTR es:[edi],dx
  412e30:	and    BYTE PTR [eax+0xc65909],0xc0
  412e37:	xchg   esp,eax
  412e38:	add    BYTE PTR [ecx+eax*4],0x8
  412e3c:	add    BYTE PTR [eax],0x1
  412e3f:	adc    DWORD PTR [esi+ecx*1+0x38008004],eax
  412e46:	push   cs
  412e47:	sub    BYTE PTR [esi],0x48
  412e4a:	inc    eax
  412e4b:	or     al,0xcb
  412e4d:	and    BYTE PTR [eax+0x6ac00074],al
  412e53:	dec    eax
  412e54:	sbb    BYTE PTR [ecx+eax*4+0x20112],ah
  412e5b:	test   BYTE PTR [eax],cl
  412e5d:	add    al,0xa4
  412e5f:	loope  0x412e61
  412e61:	add    al,0x3
  412e64:	adc    BYTE PTR [eax+0xc049040],al
  412e6a:	aaa    
  412e6b:	or     BYTE PTR [eax],ah
  412e6d:	test   DWORD PTR [eax+eax*1+0xc],ebx
  412e71:	mov    al,0x10
  412e73:	cmp    BYTE PTR [eax],ah
  412e75:	test   DWORD PTR [eax],eax
  412e77:	add    DWORD PTR [eax-0x7db7b77d],ecx
  412e7d:	or     al,0x1c
  412e7f:	adc    al,0x8c
  412e81:	add    BYTE PTR [ecx+0x12000821],al
  412e87:	and    BYTE PTR [eax],ch
  412e89:	and    ah,BYTE PTR [eax]
  412e8b:	or     eax,0x1b0a2061
  412e90:	test   BYTE PTR [eax],ch
  412e92:	popa   
  412e93:	or     DWORD PTR [eax],0x4000140d
  412e99:	inc    esi
  412e9a:	push   esp
  412e9b:	push   edx
  412e9c:	add    DWORD PTR [edx],eax
  412e9e:	add    BYTE PTR [ebp+0x180692bc],dh
  412ea4:	sub    al,0x44
  412ea6:	sub    BYTE PTR [edx+eax*2],al
  412ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eaa:	or     BYTE PTR [ebp+eax*4+0x30],bl
  412eae:	xor    BYTE PTR [eax],cl
  412eb0:	add    eax,0x1100c4
  412eb5:	add    dl,BYTE PTR [edx]
  412eb7:	and    al,0x5c
  412eb9:	mov    eax,es:0x92
  412ebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ec0:	mov    ds:0x22000091,al
  412ec5:	and    BYTE PTR [ecx+0xe800a02],al
  412ecb:	add    al,0x43
  412ecd:	add    BYTE PTR [edx+0x50c00b00],0x5a
  412ed4:	add    al,0x40
  412ed6:	and    al,0x4a
  412ed8:	and    al,0x1
  412eda:	test   al,0x84
  412edc:	inc    eax
  412edd:	inc    ecx
  412ede:	sub    BYTE PTR [edx],cl
  412ee0:	and    BYTE PTR [eax],0x46
  412ee3:	dec    eax
  412ee4:	adc    BYTE PTR [eax],al
  412ee6:	xor    ah,BYTE PTR [eax+0x9802020]
  412eec:	sub    BYTE PTR [eax],al
  412eee:	inc    esi
  412eef:	push   0x8ccb0881
  412ef4:	pop    es
  412ef5:	inc    edx
  412ef6:	push   esi
  412ef7:	sub    BYTE PTR [esp+eax*2],0x0
  412efb:	inc    esp
  412efc:	add    BYTE PTR [eax],ah
  412efe:	adc    al,0x54
  412f00:	add    DWORD PTR [eax+eax*2+0x76],ecx
  412f04:	or     BYTE PTR [eax+0x48c04198],0xa3
  412f0b:	add    DWORD PTR [ecx],edx
  412f0d:	or     BYTE PTR [edx],al
  412f0f:	or     BYTE PTR [eax],bl
  412f11:	add    BYTE PTR [edx],dl
  412f13:	add    al,0x86
  412f15:	adc    al,0x2
  412f17:	add    BYTE PTR [eax+0x10],al
  412f1a:	inc    esp
  412f1b:	dec    eax
  412f1c:	and    dl,BYTE PTR [eax+0x8000884]
  412f22:	ret    0x0
  412f25:	add    BYTE PTR [eax+0x61],bh
  412f28:	mov    dl,0x54
  412f2a:	or     BYTE PTR [edx+0x20],ah
  412f2d:	pop    es
  412f2e:	xchg   BYTE PTR [eax],dl
  412f30:	add    BYTE PTR [eax+eiz*1],al
  412f33:	nop
  412f34:	mov    ss,WORD PTR [eax+eiz*2+0x35]
  412f38:	sub    al,0x0
  412f3a:	inc    edx
  412f3b:	mov    eax,ds:0x5820470
  412f40:	test   BYTE PTR ds:0x82b3081,dl
  412f46:	adc    BYTE PTR [ebx],al
  412f48:	inc    eax
  412f49:	mov    eax,ds:0x4c1a820e
  412f4e:	mov    DWORD PTR [edx],edx
  412f50:	and    BYTE PTR [eax-0x1],cl
  412f53:	adc    eax,0x4358d8
  412f58:	or     DWORD PTR [edx-0x7b7dde50],0xc8004810
  412f62:	pop    es
  412f63:	rol    DWORD PTR [eax],0x40
  412f66:	add    al,BYTE PTR [esi-0x4bfcef27]
  412f6c:	ret    0x208c
  412f6f:	add    BYTE PTR [edx+eax*1+0x18888480],0x52
  412f77:	mov    BYTE PTR [eax],cl
  412f79:	add    ch,dh
  412f7b:	inc    ecx
  412f7c:	or     ch,BYTE PTR [edx]
  412f7e:	xchg   edx,eax
  412f7f:	pusha  
  412f80:	sub    ecx,DWORD PTR [eax+0x1]
  412f83:	mov    al,ds:0x11c3100
  412f88:	push   ecx
  412f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f8a:	enter  0x8074,0xc0
  412f8e:	and    eax,0xad0468cd
  412f93:	sub    ah,ah
  412f95:	or     BYTE PTR [eax],0x25
  412f98:	add    al,0x22
  412f9a:	sbb    al,ch
  412f9c:	shl    BYTE PTR [eax],cl
  412f9e:	dec    eax
  412f9f:	add    al,0xa
  412fa1:	add    BYTE PTR [ebx],al
  412fa3:	push   es
  412fa4:	inc    ecx
  412fa5:	mov    BYTE PTR [edx+0x554558e],ah
  412fab:	add    BYTE PTR [eax],al
  412fad:	inc    esi
  412fae:	add    dh,BYTE PTR [ebx-0x38]
  412fb1:	adc    eax,0x42ca121
  412fb6:	mov    ah,BYTE PTR [ebx+0x40]
  412fb9:	test   BYTE PTR [edx+eax*1-0x777bfbde],al
  412fc0:	sbb    DWORD PTR [ecx+0x8245c24],ebp
  412fc6:	xor    BYTE PTR [edx],ch
  412fc8:	or     BYTE PTR [esp+eax*1],al
  412fcb:	mov    BYTE PTR [eax+ebx*2+0x60],al
  412fcf:	adc    eax,esp
  412fd1:	add    BYTE PTR [eax],0x18
  412fd4:	add    al,0x20
  412fd6:	add    ah,0x20
  412fd9:	mov    ch,0x60
  412fdb:	test   BYTE PTR [eax],ah
  412fdd:	or     al,0x24
  412fdf:	rcr    BYTE PTR [edx],0x2
  412fe2:	mov    al,ds:0x10d1003d
  412fe7:	sub    BYTE PTR es:[edx],al
  412fea:	and    eax,DWORD PTR [eax]
  412fec:	and    bl,BYTE PTR [ecx+0x10020009]
  412ff2:	adc    BYTE PTR [ebx+0x800a1a0],al
  412ff8:	add    BYTE PTR [ecx],al
  412ffa:	add    DWORD PTR [eax],0x705a107
  413000:	add    dl,BYTE PTR [ecx]
  413002:	push   cs
  413003:	adc    al,BYTE PTR [edx+0x1]
  413006:	push   es
  413007:	xor    DWORD PTR [eax],esp
  413009:	mov    ds:0xc0841834,al
  41300e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41300f:	inc    edx
  413010:	or     BYTE PTR [eax+0x66f8902d],al
  413016:	cwde   
  413017:	dec    eax
  413018:	adc    BYTE PTR [edx+ebx*1],dl
  41301b:	and    eax,0x90c20920
  413020:	adc    BYTE PTR [ecx-0x6fefade8],al
  413026:	sub    edi,edx
  413028:	fs push eax
  41302a:	mov    BYTE PTR [eax+eiz*1],cl
  41302d:	add    BYTE PTR [eax],dh
  41302f:	nop
  413030:	sbb    BYTE PTR [esp+edx*1+0x420bc094],dl
  413037:	add    BYTE PTR [eax+ebx*4],cl
  41303a:	add    DWORD PTR [eax],0xffffff82
  41303d:	sbb    al,0x91
  41303f:	or     DWORD PTR [ebx+eax*8],0x890f4c0a
  413046:	xor    dh,BYTE PTR [eax+0x4095004]
  41304c:	push   ebp
  41304d:	add    BYTE PTR [eax],dl
  41304f:	cmp    BYTE PTR [eax-0x3ffdfff7],0x30
  413056:	cwde   
  413057:	mov    al,dh
  413059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41305a:	cmp    al,0xa2
  41305c:	add    eax,0xe00a
  413061:	mov    al,ds:0xa0813390
  413066:	add    al,BYTE PTR [eax]
  413068:	xor    esp,DWORD PTR [eax+eax*8]
  41306b:	sbb    ebx,DWORD PTR [edx]
  41306d:	sbb    al,0x80
  41306f:	add    BYTE PTR [eax],bh
  413071:	sbb    BYTE PTR [edx],ch
  413073:	sub    al,0x97
  413075:	cmp    DWORD PTR [esp+edx*1],ecx
  413078:	and    BYTE PTR [eax+eax*1+0x58],al
  41307c:	or     BYTE PTR [eax],dl
  41307e:	and    BYTE PTR [ecx+edx*4+0x46680a02],al
  413085:	add    BYTE PTR [edx+0x68400301],al
  41308b:	and    BYTE PTR [ecx],al
  41308d:	js     0x41302c
  41308f:	add    DWORD PTR [esi+0x21],ebx
  413092:	lds    edx,FWORD PTR [ecx]
  413094:	xchg   DWORD PTR [eax],ebp
  413096:	push   eax
  413097:	and    cl,cl
  413099:	and    BYTE PTR ds:0xa4298,al
  41309f:	popa   
  4130a0:	add    BYTE PTR [eax],ch
  4130a2:	cmp    DWORD PTR [eax],0x2ac82
  4130a8:	lods   eax,DWORD PTR ds:[esi]
  4130a9:	inc    eax
  4130aa:	pop    es
  4130ab:	sbb    BYTE PTR [ecx],ah
  4130ad:	fld    DWORD PTR [eax]
  4130af:	inc    esp
  4130b0:	push   es
  4130b1:	cmp    BYTE PTR [eax],0x11
  4130b4:	popa   
  4130b5:	adc    al,0xa9
  4130b7:	xchg   edx,eax
  4130b8:	and    BYTE PTR [esi+eax*2-0x5d],ah
  4130bc:	popa   
  4130bd:	adc    BYTE PTR [esi],ah
  4130bf:	pop    ds
  4130c0:	inc    eax
  4130c1:	sbb    BYTE PTR [eax],al
  4130c3:	mov    al,0x8c
  4130c5:	and    BYTE PTR [ecx+ebx*2-0x2ebeef19],bl
  4130cc:	inc    esp
  4130cd:	add    DWORD PTR [esi+eiz*1],eax
  4130d0:	and    al,0x20
  4130d2:	adc    al,0x5
  4130d5:	add    al,0xa
  4130d7:	inc    eax
  4130d8:	mov    cl,0x0
  4130da:	ret    0x5c60
  4130dd:	add    al,0x6
  4130df:	add    BYTE PTR [eax+0x43212080],al
  4130e5:	test   dl,cl
  4130e7:	dec    eax
  4130e8:	mov    BYTE PTR [esp+eax*8],al
  4130eb:	adc    DWORD PTR [eax],ecx
  4130ed:	fild   DWORD PTR ds:0x19080109
  4130f3:	xor    DWORD PTR [eax-0x73f7af76],esp
  4130f9:	popf   
  4130fa:	mov    eax,0x36833640
  4130ff:	inc    eax
  413100:	and    BYTE PTR [eax+eax*1+0x1b069e26],0x4
  413108:	mov    BYTE PTR [esi+0x1548244],cl
  41310e:	add    eax,0x20c2d14
  413113:	add    al,0x89
  413115:	add    BYTE PTR [ebx+0x2],dh
  413118:	push   cs
  413119:	push   esp
  41311a:	test   cl,ch
  41311c:	pop    es
  41311d:	add    al,0x90
  41311f:	xor    BYTE PTR [edx+eiz*1+0x14222402],0x9e
  413127:	inc    ebp
  413128:	and    al,BYTE PTR [edi]
  41312a:	mov    al,0x74
  41312c:	add    BYTE PTR [ecx+eiz*1],ch
  41312f:	adc    BYTE PTR [eax],al
  413131:	add    BYTE PTR [ebx],dl
  413133:	add    al,0x22
  413135:	xor    eax,DWORD PTR [edx+0x0]
  413138:	mov    eax,ss
  41313a:	add    BYTE PTR ds:0x44840b63,al
  413140:	add    BYTE PTR [eax+edx*1+0x2a620850],0x14
  413148:	add    BYTE PTR [ecx],cl
  41314a:	add    BYTE PTR [eax+0x4],al
  41314d:	add    BYTE PTR [esi],0x3
  413150:	push   eax
  413151:	add    BYTE PTR [edx],al
  413153:	ror    BYTE PTR [eax+0x40],0x0
  413157:	iret   
  413158:	inc    edx
  413159:	pop    eax
  41315a:	inc    esi
  41315b:	push   es
  41315c:	pusha  
  41315d:	and    BYTE PTR [eax],ah
  41315f:	inc    eax
  413160:	inc    ecx
  413161:	push   0x240ac9a4
  413166:	add    dl,BYTE PTR [ebx+0x3218043]
  41316c:	add    BYTE PTR [ecx+0x74008c04],bl
  413172:	add    BYTE PTR [ebx],dl
  413174:	add    DWORD PTR [eax+0x60],ecx
  413177:	add    bl,BYTE PTR [eax+eax*1-0x76e8f8fc]
  41317e:	add    BYTE PTR [edx],ah
  413180:	add    al,0x41
  413182:	add    BYTE PTR [ecx],bl
  413184:	add    ebp,DWORD PTR [ebx]
  413186:	cwde   
  413187:	add    BYTE PTR [edx],bh
  413189:	add    DWORD PTR [eax],eax
  41318b:	mov    eax,ds:0x2819d00
  413190:	test   BYTE PTR [esi],al
  413192:	push   es
  413193:	or     bl,BYTE PTR [eax+0x0]
  413196:	add    BYTE PTR [eax],al
  413198:	add    BYTE PTR ds:0x3a40561,ah
  41319e:	inc    ebp
  41319f:	push   es
  4131a0:	or     BYTE PTR [ecx+0x5a],dl
  4131a3:	add    al,0x53
  4131a5:	jb     0x4131b1
  4131a7:	add    BYTE PTR [edx],dh
  4131a9:	or     DWORD PTR [ecx],esi
  4131ab:	enter  0xce15,0x39
  4131af:	add    al,BYTE PTR [eax-0x7cb37880]
  4131b5:	add    al,0x66
  4131b7:	adc    al,0x62
  4131b9:	or     eax,0xa2014e10
  4131be:	loopne 0x4131ca
  4131c0:	or     DWORD PTR [ecx],0x9b83
  4131c6:	add    al,0x2c
  4131c9:	cdq    
  4131ca:	rol    BYTE PTR [ebp+0x7],cl
  4131cd:	inc    esp
  4131ce:	or     DWORD PTR [ebx],esp
  4131d0:	push   eax
  4131d1:	xor    BYTE PTR [ecx+0x50],bh
  4131d4:	rol    DWORD PTR [eax],0xd4
  4131d7:	add    esp,esp
  4131d9:	bound  ecx,QWORD PTR [eax+0x8531c86]
  4131df:	sub    al,BYTE PTR [esi+eiz*8+0x50]
  4131e3:	pushf  
  4131e4:	adc    cl,BYTE PTR [eax+edx*8]
  4131e7:	push   eax
  4131e8:	add    BYTE PTR [ecx-0xa2d6f7e],ah
  4131ee:	adc    dl,al
  4131f0:	adc    al,0x21
  4131f2:	sub    edi,eax
  4131f4:	shl    DWORD PTR [ecx],1
  4131f6:	bound  eax,QWORD PTR [eax+eax*4]
  4131f9:	add    ecx,DWORD PTR [edx+eax*1]
  4131fc:	and    BYTE PTR [eax],ah
  4131fe:	dec    edx
  4131ff:	adc    BYTE PTR [ebx+eax*1+0x880c],ah
  413206:	les    edx,FWORD PTR [ebx]
  413208:	push   es
  413209:	mov    BYTE PTR [eax+0x50],al
  41320c:	test   BYTE PTR [eax],ch
  41320e:	add    al,BYTE PTR [eax+0x0]
  413211:	pusha  
  413212:	sbb    al,0x2
  413214:	inc    eax
  413215:	or     BYTE PTR [edx],al
  413217:	add    al,0xa2
  413219:	or     al,0x2
  41321b:	jo     0x41325e
  41321d:	xchg   edx,eax
  41321e:	adc    edx,eax
  413220:	add    al,0x25
  413222:	add    eax,0x8a15145c
  413227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413228:	sub    al,0xf
  41322a:	nop
  41322b:	mov    BYTE PTR [eax+0x30],dl
  41322e:	test   al,0xe0
  413230:	cmp    BYTE PTR [edi],bh
  413232:	add    BYTE PTR ds:0x115c1040,cl
  413238:	dec    eax
  413239:	or     DWORD PTR [edx+0x42205502],eax
  41323f:	shl    BYTE PTR [ecx+eiz*1+0x41],0x81
  413244:	nop
  413245:	test   BYTE PTR [ebp+0x20],al
  413248:	inc    eax
  413249:	and    DWORD PTR [eax],esp
  41324b:	rol    DWORD PTR [edi],0x5
  41324e:	or     al,BYTE PTR [ebx]
  413250:	adc    al,0x3c
  413252:	sbb    BYTE PTR [eax-0x33ff0bd6],0x86
  413259:	inc    esp
  41325a:	sbb    BYTE PTR [eax],bl
  41325c:	add    BYTE PTR [esi],ah
  41325e:	inc    ebp
  41325f:	add    BYTE PTR [edx],al
  413261:	nop
  413262:	adc    eax,0x30400
  413267:	sub    eax,0x81909054
  41326c:	or     cl,bl
  41326e:	add    al,BYTE PTR [esi]
  413270:	jno    0x4132c2
  413272:	and    BYTE PTR [eax],ah
  413274:	sub    al,0x81
  413276:	jb     0x4132b8
  413278:	rol    BYTE PTR [ecx+0x38],1
  41327b:	add    DWORD PTR [eax+0x20],eax
  41327e:	add    BYTE PTR [ebx],0x91
  413281:	adc    eax,DWORD PTR [ecx+edx*1]
  413284:	add    BYTE PTR [ecx+ecx*4],0x2
  413288:	or     al,BYTE PTR [esi*1+0x20320289]
  41328f:	add    eax,0x60410a0
  413294:	mov    ds:0x1150410e,al
  413299:	inc    esp
  41329a:	adc    BYTE PTR [ebx],dl
  41329c:	or     cl,BYTE PTR [eax+eax*1]
  41329f:	shl    BYTE PTR [ecx-0x1fffcf5d],1
  4132a5:	or     BYTE PTR [edx+0x70],dl
  4132a8:	or     BYTE PTR [ecx],dl
  4132aa:	pop    ss
  4132ab:	inc    ecx
  4132ac:	and    al,BYTE PTR [eax]
  4132ae:	xor    BYTE PTR [eax],al
  4132b0:	adc    DWORD PTR [ebx+ebx*4],ecx
  4132b3:	or     BYTE PTR [edx+0x6],bh
  4132b6:	add    al,0x78
  4132b8:	mov    esi,0xa2014901
  4132bd:	mov    WORD PTR [edi+ecx*1],es
  4132c0:	inc    eax
  4132c1:	add    al,0x48
  4132c3:	adc    al,BYTE PTR [eax]
  4132c5:	pusha  
  4132c6:	sbb    al,0x2
  4132c8:	adc    BYTE PTR [esi+0x40],ah
  4132cb:	popa   
  4132cc:	dec    eax
  4132cd:	shl    BYTE PTR ds:0xb413d00,cl
  4132d3:	add    BYTE PTR [eax+0x50ddcc61],bh
  4132d9:	add    al,al
  4132db:	bound  eax,QWORD PTR [edx]
  4132dd:	inc    edx
  4132de:	sbb    BYTE PTR [eax],ah
  4132e0:	add    DWORD PTR [eax],0x72
  4132e3:	adc    eax,0x84124020
  4132e8:	add    eax,0x16461c5c
  4132ed:	add    BYTE PTR [eax],dh
  4132ef:	push   eax
  4132f0:	sar    BYTE PTR [ecx+0x28302008],0xa5
  4132f7:	adc    al,BYTE PTR [ecx]
  4132f9:	pusha  
  4132fa:	sbb    BYTE PTR [ecx*2+0x140180e0],ch
  413301:	mov    eax,DWORD PTR [ecx+0x12201044]
  413307:	dec    edx
  413308:	fst    st(1)
  41330a:	in     al,0x38
  41330c:	add    BYTE PTR [eax],cl
  41330e:	and    DWORD PTR [eax+0x44860504],eax
  413314:	sub    DWORD PTR es:[eax],eax
  413317:	stos   DWORD PTR es:[edi],eax
  413318:	inc    edx
  413319:	test   BYTE PTR fs:[edi+eiz*1],ah
  41331d:	push   eax
  41331e:	add    al,0x86
  413320:	add    ebp,DWORD PTR [ecx]
  413322:	sub    BYTE PTR [ecx+eax*1+0xd0c0615],al
  413329:	and    eax,0x4486e033
  41332e:	les    eax,FWORD PTR [eax+esi*2+0x38801670]
  413335:	bound  ecx,QWORD PTR [edx+eax*1]
  413338:	add    BYTE PTR [ebx],bh
  41333a:	or     BYTE PTR [edx],dl
  41333c:	and    BYTE PTR [ebx+edx*4],dl
  41333f:	ror    DWORD PTR [ecx],0xaa
  413342:	cmp    bl,BYTE PTR [eax]
  413344:	mov    al,ds:0x4c803012
  413349:	add    BYTE PTR [eax],dl
  41334b:	adc    DWORD PTR [eax+0x3],esp
  41334e:	or     BYTE PTR [eax+ebx*1],ah
  413351:	add    al,0x18
  413353:	mov    eax,0x8401b50
  413358:	or     BYTE PTR [eax],0x0
  41335b:	mov    BYTE PTR [eax+0x8],al
  41335e:	inc    esp
  41335f:	pusha  
  413360:	cwde   
  413361:	and    BYTE PTR [eax],0x19
  413364:	and    BYTE PTR [eax+0x1e],0x4c
  413368:	mov    DWORD PTR [eax+0x6600100],ebp
  41336e:	add    BYTE PTR [esi],cl
  413370:	adc    eax,DWORD PTR [eax]
  413372:	pusha  
  413373:	adc    BYTE PTR [eax],ah
  413375:	xor    DWORD PTR [eax],eax
  413377:	add    al,0x5
  413379:	pop    eax
  41337a:	add    BYTE PTR [eax+0x40],cl
  41337d:	add    eax,0x820048
  413382:	rol    BYTE PTR [ecx],1
  413384:	and    DWORD PTR [edi],esp
  413386:	push   ecx
  413387:	add    DWORD PTR [ecx],0xffffff84
  41338a:	inc    eax
  41338b:	inc    edx
  41338c:	add    eax,DWORD PTR [eax]
  41338e:	add    BYTE PTR [esi+eax*1-0x317f93f8],ah
  413395:	add    BYTE PTR [eax],dl
  413397:	add    al,0x89
  413399:	sub    al,al
  41339b:	ret    
  41339c:	add    cl,BYTE PTR [eax+0x10]
  41339f:	sbb    BYTE PTR [eax+0x70],dh
  4133a2:	add    BYTE PTR [ecx+eax*2],ah
  4133a5:	add    BYTE PTR [esi+eiz*1],cl
  4133a8:	test   BYTE PTR [ecx],cl
  4133aa:	add    BYTE PTR [edx+0x3],0x20
  4133ae:	add    DWORD PTR [eax],0x10
  4133b1:	inc    eax
  4133b2:	sbb    al,BYTE PTR [ebx]
  4133b4:	adc    BYTE PTR [ecx-0x6f],ch
  4133b7:	and    DWORD PTR [eax+0x10],edx
  4133ba:	adc    BYTE PTR [eax],al
  4133bc:	rol    BYTE PTR ds:0x522802b,0x61
  4133c3:	or     BYTE PTR [eax],al
  4133c5:	and    DWORD PTR [eax+esi*2+0x62],0x9060c031
  4133cd:	pusha  
  4133ce:	fadd   DWORD PTR [ecx]
  4133d0:	inc    edx
  4133d1:	ror    BYTE PTR [edi+0x1],1
  4133d4:	or     BYTE PTR [esi+0xd8d00],0x4a
  4133db:	adc    DWORD PTR [eax],esp
  4133dd:	(bad)  
  4133df:	adc    BYTE PTR [eax],dh
  4133e1:	push   eax
  4133e2:	or     al,0x42
  4133e4:	and    al,0x2
  4133e6:	icebp  
  4133e7:	add    dl,BYTE PTR [ecx]
  4133e9:	je     0x4133f4
  4133eb:	xchg   edx,eax
  4133ec:	in     al,0xa7
  4133ee:	push   es
  4133ef:	add    BYTE PTR fs:[edx+0x34478183],dl
  4133f6:	or     eax,0x448a1100
  4133fb:	add    bl,BYTE PTR [eax-0x67a2eff4]
  413401:	pushaw 
  413403:	bound  esp,QWORD PTR [eax]
  413405:	and    eax,0xc024860
  41340a:	fiadd  WORD PTR [edx]
  41340c:	push   eax
  41340d:	adc    BYTE PTR [eax],al
  41340f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413410:	nop
  413411:	add    BYTE PTR [edx],bl
  413413:	sub    BYTE PTR [eax+0x19046ec0],cl
  413419:	or     al,0x6
  41341b:	add    DWORD PTR [ebx],edx
  41341d:	and    BYTE PTR [eax],al
  41341f:	add    BYTE PTR [esp+eax*4+0x10302000],ch
  413426:	or     BYTE PTR [eax],al
  413428:	or     BYTE PTR [ecx+eax*2+0x4],0xa0
  41342d:	add    BYTE PTR [ecx],ah
  41342f:	and    BYTE PTR [eax],al
  413431:	cmp    eax,0x8010800a
  413436:	add    al,0x41
  413438:	add    BYTE PTR [eax-0x77],ch
  41343b:	sbb    BYTE PTR [eax+eiz*4+0x50608012],al
  413442:	add    DWORD PTR [ebx+eax*4],edx
  413445:	cld    
  413446:	cwde   
  413447:	add    al,BYTE PTR [eax]
  413449:	add    ah,BYTE PTR [esi-0x73beafbc]
  41344f:	add    BYTE PTR [eax],al
  413451:	add    BYTE PTR [eax],cl
  413453:	pusha  
  413454:	add    al,0x20
  413456:	sub    al,0x55
  413458:	cmp    BYTE PTR [esi],ah
  41345a:	add    BYTE PTR [eax],dh
  41345c:	mov    DWORD PTR [eax],esp
  41345e:	loopne 0x4134a0
  413460:	and    DWORD PTR [edx+0x42],eax
  413463:	adc    BYTE PTR [edx],al
  413465:	(bad)  
  413466:	shl    BYTE PTR [ebp+0x4],0x6
  41346a:	sbb    dh,al
  41346c:	mov    al,0x8
  41346e:	inc    eax
  41346f:	and    DWORD PTR [ebx+0x0],eax
  413472:	dec    esp
  413473:	pop    esp
  413474:	push   0xa090190
  413479:	add    al,0x32
  41347b:	adc    al,BYTE PTR [ebp-0x7bbedfbf]
  413481:	(bad)  
  413483:	adc    DWORD PTR [ecx-0x3a97c9c0],eax
  413489:	add    BYTE PTR [ecx+0x42870a44],al
  41348f:	add    al,0x29
  413491:	popa   
  413492:	push   eax
  413493:	push   0xc0444820
  413498:	loopne 0x41349a
  41349a:	add    cl,BYTE PTR [eax]
  41349c:	and    cl,BYTE PTR [edx]
  41349e:	add    cl,BYTE PTR es:[ecx]
  4134a1:	push   eax
  4134a2:	adc    dl,BYTE PTR [ecx+edx*4]
  4134a5:	adc    BYTE PTR [ebp+0x118a028],dl
  4134ab:	add    BYTE PTR cs:[eax],cl
  4134ae:	inc    eax
  4134af:	pop    ebp
  4134b0:	add    DWORD PTR [esi],eax
  4134b2:	and    BYTE PTR [ecx],ch
  4134b4:	sbb    DWORD PTR [edx+eax*2-0x27f3f99e],0x160028cf
  4134bf:	add    BYTE PTR [eax+eiz*1],ah
  4134c2:	add    al,BYTE PTR [edx]
  4134c4:	inc    eax
  4134c5:	sbb    al,BYTE PTR [edx+eax*1]
  4134c8:	fadd   QWORD PTR [eax]
  4134ca:	and    DWORD PTR [eax],edi
  4134cc:	adc    BYTE PTR [eax+0x108010a2],0x10
  4134d3:	add    al,0x40
  4134d5:	inc    ecx
  4134d6:	inc    ecx
  4134d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134d8:	add    BYTE PTR [eax+0x50808025],al
  4134de:	loopne 0x413460
  4134e0:	add    BYTE PTR [eax],dl
  4134e2:	adc    BYTE PTR [eax+0x4],cl
  4134e5:	nop
  4134e6:	push   cs
  4134e7:	adc    BYTE PTR [eax+0x60],0x14
  4134eb:	push   es
  4134ec:	and    ah,BYTE PTR [esi]
  4134ee:	dec    ebx
  4134ef:	and    ah,BYTE PTR [eax]
  4134f1:	test   DWORD PTR [edx-0x7c7fbfef],eax
  4134f7:	sbb    BYTE PTR [esp+eax*2+0x20],ch
  4134fb:	xor    BYTE PTR [eax],bl
  4134fd:	add    DWORD PTR [eax+0x64],0xed129830
  413504:	add    BYTE PTR [esi+0x80480],dh
  41350a:	and    eax,ecx
  41350c:	or     BYTE PTR [eax],cl
  41350e:	enter  0x686,0x9c
  413512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413513:	sbb    BYTE PTR [edx],cl
  413515:	inc    eax
  413516:	adc    BYTE PTR [eax],al
  413518:	add    DWORD PTR [edx],edx
  41351a:	add    cl,BYTE PTR [edx]
  41351c:	xor    al,0xc
  41351e:	or     eax,0xf2108a2
  413523:	add    BYTE PTR [eax],ah
  413525:	xchg   DWORD PTR [eax],ecx
  413527:	sbb    al,BYTE PTR [eax]
  413529:	les    eax,FWORD PTR [ebx+0x2c74803]
  41352f:	or     DWORD PTR [esi],eax
  413531:	push   0x8416b111
  413536:	and    DWORD PTR [ecx],esp
  413538:	data16 add BYTE PTR [edx+eax*1+0x20],0x4e
  41353e:	adc    DWORD PTR [eax],0x50104b00
  413544:	push   es
  413545:	adc    DWORD PTR [eax],eax
  413547:	mov    al,ds:0x4100c00
  41354c:	push   es
  41354d:	add    al,0x40
  41354f:	adc    BYTE PTR [ecx],al
  413551:	add    al,BYTE PTR [ecx+eiz*4+0x0]
  413555:	cmp    BYTE PTR [eax-0x80],0xa
  413559:	mov    edx,0x21040134
  41355e:	inc    eax
  41355f:	add    BYTE PTR [edx+0x42],dh
  413562:	add    BYTE PTR [eax+0x16],dl
  413565:	adc    BYTE PTR [ecx],ah
  413567:	mov    al,0x2
  413569:	aam    0x24
  41356b:	add    BYTE PTR [eax+0x6044051],cl
  413571:	mov    BYTE PTR [edx-0x7e],0x7
  413575:	push   eax
  413576:	add    BYTE PTR [edx+0x0],cl
  413579:	sub    BYTE PTR [esi],dl
  41357b:	mov    BYTE PTR [ebx+eiz*4],cl
  41357e:	or     BYTE PTR [eax+0x22740004],dh
  413584:	adc    eax,0x518114
  413589:	add    BYTE PTR [ecx-0x2c7fd5d6],cl
  41358f:	add    BYTE PTR [esi-0x73ff6b2c],dh
  413595:	xor    cl,BYTE PTR [eax+ebx*2+0x21]
  413599:	jmp    0x4135fb
  41359b:	add    ch,BYTE PTR [eax]
  41359d:	and    BYTE PTR [ecx+eax*2+0x46],ah
  4135a1:	or     eax,0x4099220
  4135a6:	add    BYTE PTR [eax-0x759dee7c],cl
  4135ac:	sbb    cl,BYTE PTR [ecx+eax*1]
  4135af:	inc    edx
  4135b0:	add    DWORD PTR [eax+0x12100dc0],ecx
  4135b6:	dec    ecx
  4135b7:	add    BYTE PTR [edx+eax*1],0x1a
  4135bb:	or     DWORD PTR [ecx],edx
  4135bd:	mov    ds:0x22140040,eax
  4135c2:	add    DWORD PTR [ecx],esi
  4135c4:	les    ecx,FWORD PTR [eax]
  4135c6:	inc    eax
  4135c7:	add    DWORD PTR [eax+eax*4],0x514120
  4135ce:	push   eax
  4135cf:	mov    ah,BYTE PTR [esp+ecx*8-0x7c]
  4135d3:	rol    DWORD PTR [edi],0x44
  4135d6:	and    al,0xc3
  4135d8:	test   BYTE PTR [eax],dl
  4135da:	or     BYTE PTR [edx+eax*1+0x33122d4],0x21
  4135e2:	push   eax
  4135e3:	sub    BYTE PTR [eax],al
  4135e5:	add    dh,BYTE PTR [eax]
  4135e7:	sbb    al,0x4a
  4135e9:	adc    al,0x1e
  4135eb:	les    eax,FWORD PTR [eax+eax*4]
  4135ee:	xchg   BYTE PTR [ecx+0x25],dl
  4135f1:	add    al,0x12
  4135f3:	add    eax,DWORD PTR [edx]
  4135f5:	add    al,BYTE PTR [ecx]
  4135f7:	add    BYTE PTR [ecx],al
  4135f9:	inc    eax
  4135fa:	add    BYTE PTR [eax-0x3e],cl
  4135fd:	jl     0x413591
  4135ff:	or     dl,BYTE PTR [eax]
  413601:	dec    eax
  413602:	add    BYTE PTR [ecx],dl
  413604:	mov    eax,ds:0x50993225
  413609:	xor    BYTE PTR [eax+0x43],cl
  41360c:	add    BYTE PTR [ecx+0x40],ah
  41360f:	sbb    al,0xc8
  413611:	and    BYTE PTR [esi],al
  413613:	pshufb mm0,QWORD PTR [eax]
  413617:	and    BYTE PTR [eax],0x44
  41361a:	add    al,0x82
  41361c:	push   cs
  41361d:	xchg   ecx,eax
  41361e:	sbb    BYTE PTR [eax],al
  413620:	ret    0x56
  413623:	add    BYTE PTR [eax],0x0
  413626:	and    al,al
  413628:	or     BYTE PTR [ecx],al
  41362a:	add    BYTE PTR [ebx+0x0],ah
  41362d:	adc    BYTE PTR [eax+edx*4+0x0],0x0
  413632:	mov    ds:0x320c41c,eax
  413637:	add    BYTE PTR [eax],ch
  413639:	add    BYTE PTR [ebx],0x28
  41363c:	repz add al,BYTE PTR [eax]
  41363f:	adc    BYTE PTR [esp+eax*1],ch
  413642:	sub    ah,BYTE PTR [edx]
  413644:	add    BYTE PTR [eax-0x6d75d6a0],al
  41364a:	add    eax,DWORD PTR [eax]
  41364c:	sbb    eax,DWORD PTR ds:0x1de031b6
  413652:	les    esp,FWORD PTR [esi+0x805e584]
  413658:	imul   eax,DWORD PTR [edi+0x8],0x2801d821
  41365f:	add    BYTE PTR [edx],al
  413661:	add    BYTE PTR [ecx],0x22
  413664:	add    edi,DWORD PTR [esp+edx*1+0xc852008]
  41366b:	sub    DWORD PTR es:[eax],0x80560410
  413672:	add    BYTE PTR [eax+0x400119c],al
  413678:	adc    al,BYTE PTR [eax+ebp*8+0x12]
  41367c:	rol    BYTE PTR [ebp-0x5c],0xc1
  413680:	dec    ecx
  413681:	adc    BYTE PTR [eax-0x59],al
  413684:	les    esi,FWORD PTR [edx]
  413686:	adc    al,BYTE PTR [eax+eax*1]
  413689:	adc    eax,0x3e201641
  41368e:	add    BYTE PTR [eax],al
  413690:	and    BYTE PTR [edx],al
  413692:	and    al,BYTE PTR [esi]
  413694:	and    esp,DWORD PTR [eax]
  413696:	jb     0x41369c
  413698:	jo     0x4136a9
  41369a:	and    BYTE PTR [eax],0x46
  41369d:	adc    DWORD PTR [eax+0x9],edx
  4136a0:	add    BYTE PTR [edx+eax*1],cl
  4136a3:	add    edx,ecx
  4136a5:	push   eax
  4136a6:	add    DWORD PTR [eax+0x0],0x45620143
  4136ad:	dec    ecx
  4136ae:	add    BYTE PTR [eax+0x20],dl
  4136b1:	adc    BYTE PTR [eax],0x40
  4136b4:	add    BYTE PTR [ecx+0x1102c044],al
  4136ba:	add    ah,BYTE PTR [ebx]
  4136bc:	mov    BYTE PTR [ebp+0x16308082],ah
  4136c2:	and    BYTE PTR [eax],ch
  4136c4:	xchg   BYTE PTR [eax],al
  4136c6:	test   al,0x44
  4136c8:	je     0x41364b
  4136ca:	add    al,0xc6
  4136cc:	adc    cl,al
  4136ce:	add    bl,BYTE PTR [ecx]
  4136d0:	inc    eax
  4136d1:	push   0x48005204
  4136d6:	add    bh,dl
  4136d8:	dec    ecx
  4136d9:	inc    eax
  4136da:	xor    BYTE PTR [ebx+eax*4],dl
  4136dd:	ror    BYTE PTR [ecx+0x41040702],0x49
  4136e4:	add    BYTE PTR [ebx+ecx*2],al
  4136e7:	or     DWORD PTR [ecx],0x1b00c89
  4136ed:	and    ebp,DWORD PTR [edx]
  4136ef:	adc    BYTE PTR [eax],0xa5
  4136f2:	inc    eax
  4136f3:	adc    al,BYTE PTR [eax+0x2400b824]
  4136f9:	add    BYTE PTR ds:0xd1004d82,al
  4136ff:	add    BYTE PTR [eax],al
  413701:	dec    esi
  413702:	ret    0x1540
  413705:	pop    ss
  413706:	add    DWORD PTR [ebx+0x501e400],eax
  41370c:	shr    DWORD PTR ds:0x907a300,0x88
  413713:	add    BYTE PTR [eax],al
  413715:	inc    eax
  413716:	push   ss
  413717:	add    DWORD PTR [edx+ebp*1+0x2],ecx
  41371b:	push   cs
  41371c:	lea    esp,[esi]
  41371e:	adc    BYTE PTR [ecx+0x1],0xd0
  413722:	sub    BYTE PTR [eax],al
  413724:	adc    DWORD PTR [eax],0x40
  413727:	jo     0x413728
  413729:	adc    eax,0x4358cc
  41372e:	add    BYTE PTR [eax],cl
  413730:	nop
  413731:	sbb    BYTE PTR [ecx+ecx*8],0x14
  413735:	ret    0x2038
  413738:	jbe    0x4136ba
  41373a:	sbb    DWORD PTR [edx],eax
  41373c:	sub    al,0x48
  41373e:	add    al,0x12
  413740:	add    DWORD PTR [edx],ecx
  413742:	add    BYTE PTR [esi],al
  413744:	popa   
  413745:	sbb    al,0x44
  413747:	add    DWORD PTR [eax],esi
  413749:	dec    edx
  41374a:	adc    BYTE PTR [esp+0x7],0x41
  41374f:	inc    eax
  413750:	pusha  
  413751:	push   es
  413752:	inc    edx
  413753:	and    ecx,DWORD PTR [eax+0xa829116]
  413759:	inc    edx
  41375a:	and    BYTE PTR [ebx+eax*8],0x89
  41375e:	inc    esp
  41375f:	adc    al,0x0
  413761:	add    ah,BYTE PTR [eax]
  413763:	push   es
  413764:	adc    al,BYTE PTR [ebp+0x0]
  413767:	or     dl,BYTE PTR [ecx]
  413769:	or     al,0x12
  41376b:	add    DWORD PTR [eax],ebp
  41376d:	inc    esp
  41376e:	inc    esp
  41376f:	jo     0x41378b
  413771:	jae    0x4137c3
  413773:	xor    eax,DWORD PTR [esi-0x6c]
  413776:	inc    esp
  413777:	sbb    al,BYTE PTR [eax]
  413779:	int3   
  41377a:	add    BYTE PTR [ecx],ah
  41377c:	push   0x0
  41377e:	add    al,BYTE PTR [edx]
  413780:	fmul   QWORD PTR [eax]
  413782:	push   ds
  413783:	inc    esp
  413784:	rol    BYTE PTR [eax+eax*1],0xe4
  413788:	stos   DWORD PTR es:[edi],eax
  413789:	and    BYTE PTR [eax+0x21],0x25
  41378d:	add    DWORD PTR [eax],eax
  41378f:	adc    al,0x90
  413791:	adc    BYTE PTR [edx],ah
  413793:	adc    DWORD PTR [eax],edx
  413795:	add    BYTE PTR [edx+0x1],0x84
  413799:	sbb    al,BYTE PTR [ecx]
  41379b:	test   BYTE PTR [eax],dh
  41379d:	daa    
  41379e:	adc    BYTE PTR [eax],al
  4137a0:	ret    0xb606
  4137a3:	dec    eax
  4137a4:	test   DWORD PTR [ebx],esp
  4137a6:	xchg   ebp,eax
  4137a7:	adc    dl,BYTE PTR [edx+eiz*1+0x2]
  4137ab:	or     DWORD PTR [eax],eax
  4137ad:	adc    cl,BYTE PTR [edx]
  4137af:	add    DWORD PTR [edx],ecx
  4137b1:	add    BYTE PTR [esp+eax*1+0x70876000],dl
  4137b8:	add    BYTE PTR [edi+0x20884d20],0xb4
  4137bf:	mov    eax,ds:0x808a6784
  4137c4:	push   esp
  4137c5:	add    DWORD PTR [ebp+eax*1+0x20],eax
  4137c9:	xor    al,BYTE PTR [eax]
  4137cb:	add    BYTE PTR [eax],al
  4137cd:	add    DWORD PTR [eax],edx
  4137cf:	rol    BYTE PTR [ecx],1
  4137d1:	add    eax,DWORD PTR [eax]
  4137d3:	add    BYTE PTR [eax+eax*2],bl
  4137d6:	push   eax
  4137d7:	adc    BYTE PTR [eax+0x30240800],dl
  4137dd:	and    DWORD PTR [esp+eax*2],ebp
  4137e0:	sub    BYTE PTR [esi],0x0
  4137e3:	sar    DWORD PTR [edx+0x40],0x1
  4137e7:	add    DWORD PTR [eax+edx*2],ecx
  4137ea:	or     bh,BYTE PTR [ecx+ecx*1+0x24]
  4137ee:	cmp    BYTE PTR [edx],0x31
  4137f1:	add    BYTE PTR [eax+0x20510],cl
  4137f7:	adc    al,BYTE PTR [eax]
  4137f9:	or     DWORD PTR [eax+edx*1],eax
  4137fc:	js     0x413804
  4137fe:	sub    DWORD PTR [ecx+eax*4+0xc],eax
  413802:	inc    eax
  413803:	add    dl,0x60
  413806:	loope  0x413808
  413808:	and    al,0x2
  41380a:	mov    al,0x48
  41380c:	and    BYTE PTR ds:0x84202c20,0xa4
  413813:	test   BYTE PTR [eax],al
  413815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413816:	or     eax,0xa0321220
  41381b:	das    
  41381c:	les    ebx,FWORD PTR [ecx]
  41381e:	sub    dh,BYTE PTR [eax]
  413820:	fcom   DWORD PTR [eax]
  413822:	and    al,BYTE PTR [esi+ecx*1-0x7fff31c0]
  413829:	adc    eax,0x22b493a9
  41382e:	and    dl,al
  413830:	add    DWORD PTR [eax+0x203270],eax
  413836:	mov    DWORD PTR es:[ebp-0x68bdbd00],eax
  41383d:	sbb    DWORD PTR [eax],eax
  41383f:	add    DWORD PTR [esi],eax
  413841:	adc    BYTE PTR [edx],bh
  413843:	push   eax
  413844:	or     cl,BYTE PTR [eax]
  413846:	add    ecx,DWORD PTR [ecx]
  413848:	inc    edx
  413849:	add    al,0x12
  41384b:	add    DWORD PTR [eax],esi
  41384d:	inc    esp
  41384e:	add    ch,BYTE PTR [edx+0x6002c400]
  413854:	test   BYTE PTR [ecx+0x40],cl
  413857:	mov    cl,0xc
  413859:	and    BYTE PTR [ecx+0x6280d2c4],dl
  41385f:	sbb    al,0x24
  413861:	nop
  413862:	cmp    BYTE PTR [edx],0xc2
  413865:	pop    eax
  413866:	mov    al,ds:0x960b8
  41386b:	imul   eax,DWORD PTR [ecx],0x93430007
  413871:	xor    DWORD PTR [ecx],eax
  413873:	or     BYTE PTR [eax-0x27f6ff7b],cl
  413879:	add    dl,BYTE PTR [ecx]
  41387b:	rol    BYTE PTR [ecx],0x90
  41387e:	inc    eax
  41387f:	sbb    BYTE PTR [eax],0x0
  413882:	mov    BYTE PTR [ebx+eiz*8],0xcc
  413886:	and    DWORD PTR ds:0x61d57e1,ecx
  41388c:	or     DWORD PTR [eax-0x77bdffbe],esp
  413892:	mov    ds:0xa0600e08,al
  413897:	cmp    BYTE PTR [eax],0x90
  41389a:	xor    al,0x0
  41389c:	adc    DWORD PTR [eax+0xc],ebx
  41389f:	xor    DWORD PTR [eax-0x40],ecx
  4138a2:	add    BYTE PTR [eax],al
  4138a4:	and    BYTE PTR [ecx],0x8
  4138a7:	popa   
  4138a8:	add    al,BYTE PTR [eax]
  4138aa:	stos   BYTE PTR es:[edi],al
  4138ab:	add    BYTE PTR [eax],0x64
  4138ae:	add    BYTE PTR [eax+0x18a02a00],bl
  4138b4:	dec    eax
  4138b5:	add    DWORD PTR [esp+eax*1-0x74],ecx
  4138b9:	adc    BYTE PTR [eax],al
  4138bb:	add    DWORD PTR [eax],0xffffffaa
  4138be:	add    BYTE PTR [eax],al
  4138c0:	add    BYTE PTR [esi],ah
  4138c2:	add    eax,0xc0000088
  4138c7:	test   BYTE PTR es:[edx+0xa0a4c],al
  4138ce:	or     ch,BYTE PTR [edx]
  4138d0:	or     al,0x82
  4138d2:	test   eax,0x8ada44b
  4138d7:	adc    al,0x82
  4138d9:	mov    cl,0x85
  4138db:	and    cl,BYTE PTR [ebx]
  4138dd:	sbb    BYTE PTR [eax],bl
  4138df:	rol    DWORD PTR [eax+0x61],1
  4138e2:	test   eax,0x1b208114
  4138e7:	adc    DWORD PTR [eax],0x40
  4138ea:	sub    DWORD PTR [edi],eax
  4138ec:	sbb    BYTE PTR [ecx],cl
  4138ee:	inc    edx
  4138ef:	adc    ah,ah
  4138f1:	dec    esi
  4138f2:	push   0x2004cc5
  4138f7:	xor    BYTE PTR [edx],bl
  4138f9:	dec    eax
  4138fa:	or     BYTE PTR [ebx-0x491ff1f4],al
  413900:	add    DWORD PTR [edx],eax
  413902:	mov    ah,0x8c
  413904:	mov    al,ds:0x82411d02
  413909:	and    al,0x80
  41390b:	add    BYTE PTR [eax],dl
  41390d:	adc    BYTE PTR ds:0x61101c00,al
  413913:	ret    0x6402
  413916:	inc    eax
  413917:	arpl   ax,bp
  413919:	add    esp,DWORD PTR [ecx]
  41391b:	adc    BYTE PTR [ecx+eax*1+0x6],ah
  41391f:	or     BYTE PTR es:[edx+0x40],al
  413923:	add    BYTE PTR [eax+eax*1+0x40],ah
  413927:	or     BYTE PTR [eax+0x39c51046],cl
  41392d:	or     BYTE PTR ds:0xc8010300,al
  413933:	add    ebp,DWORD PTR [ecx+0x44]
  413936:	and    BYTE PTR [eax+0xc155102],dl
  41393c:	adc    DWORD PTR [eax+0x8496380],ebx
  413942:	adc    BYTE PTR [edi],al
  413944:	adc    ebx,DWORD PTR [ecx]
  413946:	xchg   esi,eax
  413947:	adc    DWORD PTR [eax-0x7bdfe6b8],eax
  41394d:	add    ebp,eax
  41394f:	sbb    BYTE PTR [eax],ah
  413951:	add    al,BYTE PTR [eax]
  413953:	and    BYTE PTR [ecx],al
  413955:	and    al,BYTE PTR [eax]
  413957:	adc    BYTE PTR [ecx+ecx*1],al
  41395a:	mov    al,0x2
  41395c:	add    dl,BYTE PTR [ebx+0x31c8a402]
  413962:	add    BYTE PTR [eax],0x6
  413965:	or     al,0x20
  413967:	data16 or BYTE PTR [eax+0x48],cl
  41396b:	and    eax,DWORD PTR [eax+ecx*1]
  41396e:	add    eax,0x226621a0
  413973:	add    ecx,eax
  413975:	push   es
  413976:	add    eax,0x400402e2
  41397b:	add    DWORD PTR [eax+0x1],eax
  41397e:	inc    ebx
  41397f:	add    BYTE PTR [edx],ah
  413981:	add    al,BYTE PTR [eax]
  413983:	pusha  
  413984:	add    DWORD PTR [edx],0xac0c04d3
  41398a:	test   BYTE PTR [eax],al
  41398c:	and    BYTE PTR [edx+0x20],0x53
  413990:	inc    edi
  413991:	mov    al,ds:0x558018
  413996:	adc    dl,BYTE PTR [eax]
  413998:	add    BYTE PTR [esi],al
  41399a:	inc    eax
  41399b:	sbb    DWORD PTR [eax+0x610852],eax
  4139a1:	add    BYTE PTR [ecx+0x40810042],al
  4139a7:	inc    eax
  4139a8:	adc    cl,BYTE PTR [eax]
  4139aa:	inc    edx
  4139ab:	loope  0x41392d
  4139ad:	add    al,BYTE PTR [esi]
  4139af:	and    eax,0x84853285
  4139b4:	inc    edx
  4139b5:	push   ebp
  4139b6:	inc    eax
  4139b7:	push   ss
  4139b8:	adc    ah,BYTE PTR [ebx+0x6042d80e]
  4139be:	add    al,al
  4139c0:	add    BYTE PTR [eax],al
  4139c2:	inc    eax
  4139c3:	push   0xbf900404
  4139c8:	mov    eax,0x18124620
  4139cd:	push   es
  4139ce:	add    BYTE PTR [ecx+eax*4],dl
  4139d1:	add    al,0x14
  4139d3:	xor    BYTE PTR [ecx],ch
  4139d5:	inc    esp
  4139d6:	add    al,BYTE PTR [esp+eax*1+0x4551b87]
  4139dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139de:	adc    BYTE PTR [eax],ah
  4139e0:	and    BYTE PTR [eax+0x44e210c],ah
  4139e6:	adc    DWORD PTR [edx],esp
  4139e8:	add    DWORD PTR [esi],edx
  4139ea:	mov    al,ds:0x8200a940
  4139ef:	add    al,0x96
  4139f1:	and    BYTE PTR [eax],al
  4139f3:	test   BYTE PTR [eax+0x42],dl
  4139f6:	sbb    BYTE PTR ds:0x420186,dl
  4139fc:	or     dh,BYTE PTR [eax*1+0x840102]
  413a03:	sbb    al,BYTE PTR [edx+0x1013165c]
  413a09:	add    BYTE PTR [edx+0x70],bl
  413a0c:	and    cl,BYTE PTR [edx+edx*1-0x80]
  413a10:	add    BYTE PTR [esi+0x1],al
  413a13:	adc    BYTE PTR [esi+eax*2+0xc009020],cl
  413a1a:	nop
  413a1b:	test   BYTE PTR [edx],dl
  413a1d:	shl    BYTE PTR [ebp-0x7e],1
  413a20:	cmp    BYTE PTR [edi],al
  413a22:	adc    DWORD PTR [edx],ecx
  413a24:	adc    BYTE PTR [ecx],al
  413a26:	add    BYTE PTR [eax],0x1
  413a29:	or     BYTE PTR [eax],0x21
  413a2c:	add    BYTE PTR [eax+0x62020441],ah
  413a32:	add    BYTE PTR [eax],al
  413a34:	xchg   esp,eax
  413a35:	mov    BYTE PTR [eax],0x0
  413a38:	adc    dl,al
  413a3a:	or     BYTE PTR [eax+0x40],al
  413a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a3e:	and    BYTE PTR [ebx+0x22a23580],ch
  413a44:	adc    ah,al
  413a46:	and    BYTE PTR [edi+0x3811c404],al
  413a4c:	push   0x0
  413a4e:	mov    BYTE PTR [eax-0x27bbffb8],al
  413a54:	adc    cl,BYTE PTR [eax+eax*1+0xc2641]
  413a5b:	push   eax
  413a5c:	or     BYTE PTR [ecx+0x1c241288],0x42
  413a63:	mov    eax,ds:0x400c8804
  413a68:	adc    BYTE PTR [esi-0x68],0x82
  413a6c:	add    DWORD PTR [eax],eax
  413a6e:	or     al,0x4
  413a70:	inc    eax
  413a71:	and    DWORD PTR [eax+0x6],edx
  413a74:	xor    BYTE PTR [eax],al
  413a76:	test   DWORD PTR ds:0x1188000,esp
  413a7c:	add    DWORD PTR ds:0x40263ce0,esp
  413a82:	add    BYTE PTR [eax+0x14],0x10
  413a86:	add    BYTE PTR [eax-0x7ffee6be],ah
  413a8c:	sub    BYTE PTR [eax],al
  413a8e:	add    al,0x62
  413a90:	and    BYTE PTR [edx+edx*1+0x34],ah
  413a94:	adc    al,0x2e
  413a97:	mov    al,ds:0x3269402
  413a9c:	add    dh,BYTE PTR [ebx+0xc380021]
  413aa2:	shr    DWORD PTR [eax-0x4f],0x3
  413aa6:	loopne 0x413a28
  413aa8:	shl    BYTE PTR [ecx],1
  413aaa:	add    ah,BYTE PTR [eax]
  413aac:	add    eax,0x78800028
  413ab1:	add    eax,DWORD PTR ds:0x62020004
  413ab7:	or     al,0x80
  413ab9:	push   es
  413aba:	mov    DWORD PTR [eax+0x11080c40],eax
  413ac0:	and    BYTE PTR [ebx],al
  413ac2:	or     al,BYTE PTR [eax+0x14561b54]
  413ac8:	or     eax,0x4402a20
  413acd:	loopne 0x413ad2
  413acf:	add    BYTE PTR [edx+eax*4],ah
  413ad2:	add    al,0x0
  413ad4:	mov    al,ds:0x44290306
  413ad9:	in     al,0xa0
  413adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413adc:	and    DWORD PTR [esi],eax
  413ade:	mov    ds:0x1085ba0,al
  413ae3:	mov    al,0x80
  413ae5:	sbb    al,0x41
  413ae7:	xchg   BYTE PTR [ecx+eax*1],cl
  413aea:	adc    al,0x6
  413aec:	add    dh,dl
  413aee:	jo     0x413afa
  413af0:	adc    BYTE PTR [eax+0x0],0x80
  413af4:	and    BYTE PTR [ecx-0x7db9fbbf],ah
  413afa:	inc    edx
  413afb:	dec    ebp
  413afc:	rol    BYTE PTR [edx+0x64],0x0
  413b00:	or     BYTE PTR [eax+0x4d57f78d],al
  413b06:	rol    BYTE PTR [ecx+eax*1],1
  413b09:	sbb    al,0x2b
  413b0b:	add    al,0x4
  413b0d:	add    dl,BYTE PTR [ecx-0x4f]
  413b10:	add    BYTE PTR [eax],al
  413b12:	add    dl,BYTE PTR [ebx-0x7337fccf]
  413b18:	fldenv [edx+eax*1]
  413b1b:	adc    DWORD PTR [eax],eax
  413b1d:	add    BYTE PTR [edx],bl
  413b1f:	add    BYTE PTR [eax-0x40],ah
  413b22:	add    BYTE PTR [ecx],al
  413b24:	enter  0x27,0x80
  413b28:	and    al,0x9c
  413b2a:	mov    BYTE PTR [eax],al
  413b2c:	pusha  
  413b2d:	nop
  413b2e:	add    al,BYTE PTR es:[edx]
  413b31:	add    DWORD PTR [ecx+0x32],eax
  413b34:	add    BYTE PTR [eax+edx*2+0x28],al
  413b38:	add    DWORD PTR [eax],ebp
  413b3a:	push   eax
  413b3b:	add    BYTE PTR [eax],al
  413b3d:	adc    BYTE PTR [eax+eax*2],ah
  413b40:	adc    BYTE PTR ds:0x22038080,al
  413b46:	add    al,0x84
  413b48:	adc    BYTE PTR [ecx],al
  413b4a:	jecxz  0x413b06
  413b4c:	test   DWORD PTR [ecx-0x7e],eax
  413b4f:	mov    eax,0x4100216
  413b54:	push   eax
  413b55:	or     al,0x90
  413b57:	add    DWORD PTR [eax+0x1040800c],edx
  413b5d:	or     BYTE PTR [edx],ah
  413b5f:	adc    esp,DWORD PTR ds:0xc0800400
  413b65:	or     ch,BYTE PTR [eax]
  413b67:	add    BYTE PTR [eax],0x10
  413b6a:	dec    edx
  413b6b:	sbb    DWORD PTR [eax+0x8100020],ecx
  413b71:	add    BYTE PTR [ebx+0x52],0x80
  413b75:	jae    0x413ba1
  413b77:	or     BYTE PTR [edx],cl
  413b79:	mov    BYTE PTR [ebx+ecx*4],cl
  413b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b7d:	xchg   ecx,eax
  413b7e:	and    eax,0x3a010910
  413b83:	push   eax
  413b84:	ror    DWORD PTR [edx+eax*1],cl
  413b87:	ss loop 0x413b8a
  413b8a:	sbb    eax,0x248c0202
  413b8f:	and    al,0x4
  413b91:	and    cl,BYTE PTR [eax+ecx*2]
  413b94:	mov    eax,ds:0x5420a00
  413b99:	retf   0x4062
  413b9c:	push   es
  413b9d:	add    eax,DWORD PTR [edi]
  413b9f:	push   es
  413ba0:	and    BYTE PTR ds:0xa4044a,dl
  413ba6:	sub    BYTE PTR [eax],dl
  413ba8:	xchg   esp,eax
  413ba9:	add    BYTE PTR [eax],0x0
  413bac:	or     al,0xc
  413bae:	push   eax
  413baf:	mov    ds:0x2011204,al
  413bb4:	and    edx,DWORD PTR [eax]
  413bb6:	add    BYTE PTR [eax],al
  413bb8:	or     BYTE PTR [edx],al
  413bba:	and    BYTE PTR [eax+eax*1+0x8586041],al
  413bc1:	and    ch,BYTE PTR [eax]
  413bc3:	add    BYTE PTR [eax],al
  413bc5:	ins    BYTE PTR es:[edi],dx
  413bc6:	adc    eax,0x414d1e80
  413bcb:	inc    eax
  413bcc:	and    DWORD PTR [eax+eax*1],eax
  413bcf:	add    BYTE PTR [ebx+0x43],al
  413bd2:	and    BYTE PTR [ebx+ebx*1],cl
  413bd5:	adc    al,0xd2
  413bd7:	adc    BYTE PTR [eax],ch
  413bd9:	add    BYTE PTR [edx],0x5
  413bdc:	dec    ebp
  413bdd:	and    BYTE PTR [eax+0x11],ah
  413be0:	enter  0x10,0x80
  413be4:	add    BYTE PTR [edx+0x28],0x8
  413be8:	sbb    DWORD PTR [edx],eax
  413bea:	loop   0x413bee
  413bec:	loop   0x413c4f
  413bee:	or     al,0x9
  413bf0:	push   0x4001942
  413bf5:	and    BYTE PTR [edx+edx*2],al
  413bf8:	push   es
  413bf9:	xor    al,BYTE PTR [eax]
  413bfb:	inc    ecx
  413bfc:	add    DWORD PTR [eax],0x832e5a6
  413c02:	int3   
  413c03:	gs or  eax,0x6042681
  413c09:	adc    al,BYTE PTR [esp+edx*2]
  413c0c:	mov    esi,DWORD PTR [ebp+0x16194480]
  413c12:	loopne 0x413c34
  413c14:	int3   
  413c15:	and    BYTE PTR ds:0x40a0e2e2,cl
  413c1b:	mov    BYTE PTR [edx+0x5010b475],al
  413c21:	nop
  413c22:	add    dh,BYTE PTR ds:0x20412404
  413c28:	xchg   edx,eax
  413c29:	sub    BYTE PTR [eax+ecx*1],cl
  413c2c:	add    al,BYTE PTR [eax]
  413c2e:	inc    eax
  413c2f:	mov    BYTE PTR [edx],dl
  413c31:	les    eax,FWORD PTR [esi]
  413c33:	mov    eax,ds:0x23c08e0
  413c38:	sbb    BYTE PTR [eax],ah
  413c3a:	int3   
  413c3b:	add    BYTE PTR [ecx],ch
  413c3d:	test   al,ah
  413c3f:	or     DWORD PTR ds:0x67404009,ebx
  413c45:	xchg   esp,eax
  413c46:	add    DWORD PTR [eax+0x49],edx
  413c49:	add    al,BYTE PTR [ecx-0x78]
  413c4c:	adc    al,0x20
  413c4e:	inc    eax
  413c4f:	or     DWORD PTR [ebx],edx
  413c51:	or     BYTE PTR [eax+0x10],cl
  413c54:	or     BYTE PTR [eax],al
  413c56:	and    BYTE PTR [edx],al
  413c58:	push   esp
  413c59:	mov    eax,ds:0x652200a0
  413c5e:	test   BYTE PTR es:[ecx+ebp*4],ah
  413c62:	inc    ecx
  413c63:	xor    esp,DWORD PTR [eax]
  413c65:	(bad)  
  413c66:	rcl    DWORD PTR [eax],cl
  413c68:	sbb    al,0x80
  413c6a:	xor    BYTE PTR [edx],al
  413c6c:	or     DWORD PTR [eax-0x71],0x88005020
  413c73:	or     BYTE PTR [edx+0x50],cl
  413c76:	adc    BYTE PTR [eax-0x3f],dl
  413c79:	xchg   esp,eax
  413c7a:	push   eax
  413c7b:	loopne 0x413c7d
  413c7d:	dec    ebp
  413c7e:	add    ah,BYTE PTR [eax]
  413c80:	dec    edx
  413c81:	shr    BYTE PTR [edx+edx*1],0x1
  413c85:	inc    esp
  413c86:	call   0x2c0:0x21c00208
  413c8d:	and    BYTE PTR [ebp-0x73dad380],cl
  413c93:	int3   
  413c94:	mov    cl,0x11
  413c96:	mov    BYTE PTR [edx+0x2a404002],0x83
  413c9d:	or     al,0x49
  413c9f:	add    BYTE PTR [edx-0x80],al
  413ca2:	or     al,0x81
  413ca4:	adc    BYTE PTR ds:0x83002914,cl
  413caa:	add    BYTE PTR [ecx],0x81
  413cad:	inc    ecx
  413cae:	add    DWORD PTR [ecx],esp
  413cb0:	xor    al,0xd
  413cb2:	dec    edx
  413cb3:	sbb    BYTE PTR [eax],cl
  413cb5:	pop    eax
  413cb6:	add    edx,0xffffff84
  413cb9:	add    BYTE PTR [eax],al
  413cbb:	add    al,0x22
  413cbd:	add    BYTE PTR [edx+eax*1],cl
  413cc0:	sbb    eax,DWORD PTR [ebp+0x4808cc10]
  413cc6:	add    BYTE PTR [eax],al
  413cc8:	add    dl,BYTE PTR [eax]
  413cca:	and    DWORD PTR [ebx+0x6058060d],eax
  413cd0:	adc    eax,0x310c2245
  413cd5:	add    BYTE PTR [eax-0x5d],0x0
  413cd9:	add    BYTE PTR [eax+0x6e82001b],dl
  413cdf:	mov    al,ds:0x42cca001
  413ce4:	or     BYTE PTR [ebx+0x0],cl
  413ce7:	popa   
  413ce8:	add    BYTE PTR [ebx],dl
  413cea:	or     al,0xc
  413cec:	inc    eax
  413ced:	add    DWORD PTR [ecx+0x5100018],edx
  413cf3:	pop    eax
  413cf4:	and    BYTE PTR [esp+ebp*1-0x67],al
  413cf8:	xchg   ecx,eax
  413cf9:	lods   al,BYTE PTR ds:[esi]
  413cfa:	add    al,0x1
  413cfc:	and    DWORD PTR [eax+esi*1],ebp
  413cff:	xor    al,0x0
  413d01:	push   esp
  413d02:	sbb    cl,BYTE PTR [eax+0xc]
  413d05:	sub    al,BYTE PTR [eax+0x1546812]
  413d0b:	or     BYTE PTR [edx],ah
  413d0d:	add    DWORD PTR [ecx],0xa0280008
  413d13:	mov    DWORD PTR [eax+0x61],eax
  413d16:	add    al,BYTE PTR [ecx+0x28c4c41]
  413d1c:	lods   al,BYTE PTR ds:[esi]
  413d1d:	adc    al,BYTE PTR [eax]
  413d1f:	dec    ebp
  413d20:	add    BYTE PTR [ecx+ecx*1+0x4],dl
  413d24:	add    dh,BYTE PTR [eax]
  413d26:	add    DWORD PTR [ecx],0x540a0f
  413d2c:	cwde   
  413d2d:	push   ecx
  413d2e:	sbb    DWORD PTR [eax+eax*4],eax
  413d31:	xor    eax,0x65c13402
  413d36:	add    BYTE PTR [ecx],al
  413d38:	add    al,0x80
  413d3a:	inc    eax
  413d3b:	add    BYTE PTR [edx+0x5c1e0010],0x80
  413d42:	adc    al,0xc8
  413d44:	add    ah,BYTE PTR [eax+ecx*1+0xc610241]
  413d4b:	sbb    dh,BYTE PTR [edx]
  413d4d:	add    al,0x0
  413d4f:	mov    BYTE PTR [ebp+0x13419cc3],al
  413d55:	pusha  
  413d56:	test   BYTE PTR [ebp+0x244114],dl
  413d5c:	test   BYTE PTR [ebp+0x2451044],al
  413d62:	inc    edx
  413d63:	add    ah,BYTE PTR ds:0x24514101
  413d69:	add    dl,BYTE PTR [eax+0x5]
  413d6c:	add    al,0x20
  413d6e:	or     ah,cl
  413d70:	inc    edx
  413d71:	mov    ds:0x8665a042,eax
  413d76:	and    dl,BYTE PTR [eax]
  413d78:	or     al,0x42
  413d7a:	push   cs
  413d7b:	cwde   
  413d7c:	inc    ecx
  413d7d:	pop    edx
  413d7e:	and    al,BYTE PTR [eax]
  413d80:	add    BYTE PTR [eax],0x23
  413d83:	add    DWORD PTR [eax],edx
  413d85:	sub    al,0xc
  413d87:	sub    BYTE PTR [eax+esi*1],ah
  413d8a:	adc    al,BYTE PTR [edx-0x6f3ffffc]
  413d90:	and    DWORD PTR [edx],eax
  413d92:	add    al,dl
  413d94:	xor    BYTE PTR [esp+ebp*2+0x10608864],al
  413d9b:	add    DWORD PTR [eax+0x40],eax
  413d9e:	(bad)  
  413d9f:	sub    eax,ecx
  413da1:	add    al,BYTE PTR [esp+eax*2-0x5e]
  413da5:	sbb    cl,BYTE PTR [eax+eax*1]
  413da8:	arpl   WORD PTR [esi],bx
  413daa:	mov    DWORD PTR [ebx+eiz*2],ecx
  413dad:	or     al,BYTE PTR [ecx]
  413daf:	adc    BYTE PTR [esi+0x715380],ah
  413db5:	adc    al,0x3d
  413db7:	or     cl,BYTE PTR [edi+0xd]
  413dba:	inc    eax
  413dbb:	and    al,BYTE PTR [eax]
  413dbd:	aam    0x16
  413dbf:	mov    ah,0x20
  413dc1:	sub    bl,BYTE PTR [edx]
  413dc3:	and    BYTE PTR [edx+eax*1],cl
  413dc6:	and    eax,DWORD PTR [eax]
  413dc8:	and    BYTE PTR [edx],dh
  413dca:	add    BYTE PTR [edx-0x74],ah
  413dcd:	adc    BYTE PTR [ecx],dl
  413dcf:	inc    eax
  413dd0:	enter  0x14ca,0x6
  413dd4:	push   eax
  413dd5:	and    BYTE PTR [eax+0x48],ah
  413dd8:	adc    BYTE PTR [esi],ah
  413dda:	retf   
  413ddb:	inc    edx
  413ddc:	adc    BYTE PTR [esp+ecx*2+0x0],al
  413de0:	add    ebx,DWORD PTR [eax]
  413de2:	or     DWORD PTR [ecx+0x0],ecx
  413de5:	add    al,0x8a
  413de7:	or     al,0x60
  413de9:	or     BYTE PTR [eax],al
  413deb:	or     BYTE PTR [ecx+0x4c8001da],ah
  413df1:	sub    ah,ah
  413df3:	push   eax
  413df4:	adc    BYTE PTR [edx+0x3c825040],0xc
  413dfb:	add    al,0x0
  413dfd:	add    DWORD PTR [eax],edx
  413dff:	adc    al,BYTE PTR [ecx+edx*1]
  413e02:	inc    eax
  413e03:	add    ecx,DWORD PTR [esi]
  413e05:	xchg   esp,eax
  413e06:	or     BYTE PTR [edx+0xf],ah
  413e09:	sub    al,BYTE PTR [esp+ebx*1]
  413e0c:	cdq    
  413e0d:	xor    al,0x50
  413e0f:	add    BYTE PTR [ecx+0x58],0x49
  413e13:	or     eax,0x1640225
  413e18:	inc    eax
  413e19:	add    ah,BYTE PTR [edx]
  413e1b:	xchg   esp,eax
  413e1c:	or     al,0xc
  413e1e:	add    al,BYTE PTR [ecx+0x22]
  413e21:	add    BYTE PTR [ecx],0x2
  413e24:	adc    BYTE PTR [ebx+0x11a24010],0x45
  413e2b:	inc    eax
  413e2c:	add    al,0x41
  413e2e:	sub    BYTE PTR [eax],al
  413e30:	sub    al,0x82
  413e32:	pop    esp
  413e33:	pushf  
  413e34:	add    eax,0x22332a
  413e39:	sbb    al,0xf7
  413e3b:	dec    eax
  413e3c:	xor    eax,DWORD PTR ss:[ecx-0x80]
  413e40:	sub    BYTE PTR [eax],ch
  413e42:	or     BYTE PTR [eax],al
  413e44:	adc    edx,DWORD PTR [ecx+0x1c83864]
  413e4a:	adc    dl,BYTE PTR [eax+0x11]
  413e4d:	adc    BYTE PTR [eax+0x6],ah
  413e50:	inc    eax
  413e51:	mov    al,ds:0x47084462
  413e56:	test   DWORD PTR [edi],edx
  413e58:	js     0x413e2d
  413e5a:	add    al,0x81
  413e5c:	and    BYTE PTR [eax+0x13],0x15
  413e60:	adc    DWORD PTR [edx+0x380a0680],ecx
  413e66:	push   cs
  413e67:	or     DWORD PTR [eax],edx
  413e69:	add    cl,BYTE PTR [ebx]
  413e6b:	inc    esp
  413e6c:	push   eax
  413e6d:	xor    BYTE PTR [esp+eax*4],0x8
  413e71:	nop
  413e72:	add    al,0x64
  413e74:	mov    BYTE PTR [eax+eax*4],ch
  413e77:	or     BYTE PTR [ecx],al
  413e79:	pop    esp
  413e7a:	mov    BYTE PTR [esi],ah
  413e7c:	add    BYTE PTR [eax],bl
  413e7e:	sbb    DWORD PTR [eax],eax
  413e80:	add    al,BYTE PTR [ecx-0x4bfbdb40]
  413e86:	add    ah,BYTE PTR [eax+0x13023240]
  413e8c:	push   es
  413e8d:	or     BYTE PTR [ebp+0xdc83000],al
  413e93:	xor    al,0x20
  413e95:	inc    eax
  413e96:	xchg   DWORD PTR [ebx],eax
  413e98:	adc    BYTE PTR [ecx+0x21058020],cl
  413e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e9f:	add    BYTE PTR [edi-0x2f7bf5e9],dl
  413ea5:	and    DWORD PTR [eax],eax
  413ea7:	dec    ebx
  413ea8:	addr16 enter 0x0,0x18
  413ead:	inc    esp
  413eae:	add    DWORD PTR [ecx+0x21150e60],ecx
  413eb4:	add    BYTE PTR [esi],al
  413eb6:	push   ebp
  413eb7:	or     BYTE PTR [eax],bh
  413eb9:	adc    al,BYTE PTR [eax]
  413ebb:	or     eax,DWORD PTR [eax]
  413ebd:	push   esp
  413ebe:	adc    BYTE PTR [ecx+esi*2+0xb],bl
  413ec2:	add    dl,BYTE PTR [esi]
  413ec4:	iret   
  413ec5:	sub    DWORD PTR [esi],eax
  413ec7:	xchg   BYTE PTR ds:0x8000940c,ah
  413ecd:	add    BYTE PTR [ecx-0x7cdff1a0],cl
  413ed3:	or     al,0x0
  413ed5:	or     BYTE PTR [eax+0x115200c],al
  413edb:	add    BYTE PTR [eax],al
  413edd:	or     eax,0xb8001020
  413ee2:	or     DWORD PTR [ecx+0x0],ecx
  413ee5:	add    cl,BYTE PTR [eax+0x62043806]
  413eeb:	adc    bl,dh
  413eed:	and    eax,0x22007812
  413ef2:	sub    BYTE PTR [edx+0x20],al
  413ef5:	test   BYTE PTR [edx],al
  413ef7:	adc    BYTE PTR [eax],ch
  413ef9:	add    BYTE PTR [eax],ah
  413efb:	mov    BYTE PTR [eax+0x3],cl
  413efe:	call   DWORD PTR ds:0x4358cc
  413f04:	les    ebx,FWORD PTR [eax]
  413f06:	mov    ecx,0x60a2e
  413f0b:	test   BYTE PTR [esi+0x61003459],al
  413f11:	and    al,0x40
  413f13:	add    BYTE PTR [eax+0x0],ah
  413f16:	adc    al,0x1c
  413f18:	inc    edx
  413f19:	pusha  
  413f1a:	add    DWORD PTR [esi+eax*2],eax
  413f1d:	test   eax,0x833f2118
  413f22:	fiadd  DWORD PTR [ebx+0x10]
  413f25:	mov    BYTE PTR [ebx],al
  413f27:	add    al,BYTE PTR [eax+0x21068e20]
  413f2d:	and    eax,0x30b36
  413f32:	add    BYTE PTR [ebx+eax*1],al
  413f35:	mov    WORD PTR [edx],?
  413f37:	mov    cl,BYTE PTR [eax]
  413f39:	les    edx,FWORD PTR [ecx+0x4c02b]
  413f3f:	add    BYTE PTR [eax+eax*1-0x60],bh
  413f43:	add    DWORD PTR [ebx+0x0],eax
  413f46:	push   0x1140446
  413f4b:	add    al,BYTE PTR [edx+0x60201090]
  413f51:	nop
  413f52:	xchg   esi,eax
  413f53:	add    bh,BYTE PTR [ecx]
  413f55:	cmp    BYTE PTR [eax+eiz*4],dl
  413f58:	adc    al,0x3
  413f5a:	sbb    al,0x5
  413f5c:	xor    DWORD PTR [eax],eax
  413f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f5f:	dec    eax
  413f60:	add    eax,0x8c0a191
  413f65:	lea    edx,[esi]
  413f67:	add    BYTE PTR [ecx],cl
  413f69:	jo     0x413fb0
  413f6b:	mov    DWORD PTR [eax+0x4246001d],0x808404b1
  413f75:	adc    eax,0x9c01b497
  413f7a:	or     BYTE PTR [ecx],al
  413f7c:	or     al,BYTE PTR [eax]
  413f7e:	or     BYTE PTR [eax+0x40],0x40
  413f82:	call   0x5063:0x224c2802
  413f89:	add    DWORD PTR [edx],esp
  413f8b:	adc    BYTE PTR [eax],al
  413f8d:	lods   al,BYTE PTR ds:[esi]
  413f8e:	rcl    BYTE PTR [eax+0x7546000c],0x81
  413f95:	mov    BYTE PTR [eax-0x7c],dl
  413f98:	inc    edx
  413f99:	add    al,0x21
  413f9b:	add    DWORD PTR [eax],eax
  413f9d:	add    eax,0x20210480
  413fa2:	xchg   ebx,eax
  413fa3:	inc    edx
  413fa4:	bound  esp,QWORD PTR [edx]
  413fa6:	add    DWORD PTR fs:[eax+0x3c00028],esp
  413fad:	add    al,BYTE PTR [edx]
  413faf:	jmp    0xc49443c
  413fb4:	pusha  
  413fb5:	mov    eax,ds:0x8c0a400d
  413fba:	inc    ecx
  413fbb:	and    ah,BYTE PTR [ebx+0x40001c40]
  413fc1:	cmp    BYTE PTR fs:[eax+0xc],al
  413fc5:	add    ah,BYTE PTR [eax]
  413fc7:	and    DWORD PTR [edx],eax
  413fc9:	add    DWORD PTR [edx],esp
  413fcb:	outs   dx,BYTE PTR ds:[esi]
  413fcc:	cwde   
  413fcd:	dec    ecx
  413fce:	inc    esp
  413fcf:	add    al,dl
  413fd1:	rol    DWORD PTR [eax],0x28
  413fd4:	adc    al,BYTE PTR [eax+0x1160202]
  413fda:	jmp    0x413fbc
  413fdc:	or     BYTE PTR [esp+edx*1+0x4],dl
  413fe0:	pusha  
  413fe1:	sbb    BYTE PTR [eax],al
  413fe3:	lock and BYTE PTR [ebx-0x40],0x8
  413fe8:	adc    dl,BYTE PTR [eax+0xc]
  413feb:	or     al,0x18
  413fed:	push   es
  413fee:	adc    al,0xa0
  413ff0:	add    BYTE PTR [eax+eiz*1],dl
  413ff3:	test   DWORD PTR [eax],ecx
  413ff5:	or     BYTE PTR [edx],0xc0
  413ff8:	es adc al,ah
  413ffb:	mov    WORD PTR [edx+0x2b019102],fs
  414001:	add    ah,BYTE PTR [eax]
  414003:	xor    DWORD PTR [edx],esp
  414005:	dec    esp
  414006:	repnz xor BYTE PTR [eax+0x24],ch
  41400a:	and    DWORD PTR [eax-0x7b],esp
  41400d:	add    al,0x2
  41400f:	mov    BYTE PTR [edx+ecx*1],dl
  414012:	xchg   BYTE PTR [eax],ah
  414014:	adc    dh,BYTE PTR [ecx+0x122d141]
  41401a:	or     BYTE PTR [eax],ah
  41401c:	add    BYTE PTR [eax],al
  41401e:	(bad)  
  41401f:	in     al,dx
  414020:	add    al,0x1
  414022:	or     BYTE PTR [edx+edx*1-0x69],al
  414026:	add    al,BYTE PTR [ecx+0x40a01748]
  41402c:	dec    edx
  41402d:	add    al,0x24
  41402f:	and    BYTE PTR [ecx],al
  414031:	add    BYTE PTR [edx],ah
  414033:	push   ss
  414034:	and    BYTE PTR [eax],0x9
  414037:	mov    ds:0x31520000,al
  41403c:	add    BYTE PTR [eax],al
  41403e:	nop
  41403f:	jne    0x413fe9
  414041:	or     al,0x42
  414043:	shl    BYTE PTR [ecx],0x50
  414046:	and    eax,0x66028a07
  41404b:	mov    BYTE PTR [eax+0xb],cl
  41404e:	xor    BYTE PTR [ebx+0x8],ch
  414051:	inc    ebx
  414052:	adc    BYTE PTR [ecx],0x44
  414055:	and    BYTE PTR [esi+eiz*4],0x80
  414059:	or     ebp,eax
  41405b:	cmovno ecx,DWORD PTR [eax]
  41405e:	cmp    BYTE PTR [eax],0x41
  414061:	push   es
  414062:	dec    edx
  414063:	add    BYTE PTR [eax-0x2d],0x58
  414067:	inc    esp
  414068:	fadd   DWORD PTR [esi+0x29]
  41406b:	add    al,0x4
  41406d:	add    DWORD PTR [ecx+ebx*2+0x69849200],esi
  414074:	inc    eax
  414075:	sbb    BYTE PTR [edx+0xc118031],cl
  41407b:	or     eax,DWORD PTR [eax]
  41407d:	fld    DWORD PTR [eax]
  41407f:	add    BYTE PTR [eax],al
  414081:	or     eax,DWORD PTR [edi+ecx*1]
  414084:	and    BYTE PTR [ebx+0x60],bl
  414087:	cmp    ah,ah
  414089:	pusha  
  41408a:	pusha  
  41408b:	inc    ebp
  41408c:	or     al,0x8
  41408e:	xchg   esp,eax
  41408f:	or     BYTE PTR [ecx],dl
  414091:	and    BYTE PTR [edx],0x10
  414094:	inc    edi
  414095:	push   eax
  414096:	inc    eax
  414097:	push   eax
  414098:	mov    DWORD PTR [eax],eax
  41409a:	inc    ebp
  41409b:	mov    al,ds:0x40c1440
  4140a0:	and    BYTE PTR [edi+0x8],al
  4140a3:	or     ch,BYTE PTR [ecx]
  4140a5:	dec    esp
  4140a6:	scas   eax,DWORD PTR es:[edi]
  4140a7:	test   BYTE PTR [eax],al
  4140a9:	loopne 0x4140ac
  4140ab:	mov    BYTE PTR [eax+0x2c109018],dl
  4140b1:	add    dl,BYTE PTR [eax]
  4140b3:	or     al,0x0
  4140b5:	add    eax,0x80c02884
  4140ba:	jne    0x4140fc
  4140bc:	add    BYTE PTR [edx+0x20184009],ah
  4140c2:	adc    BYTE PTR [edx],dl
  4140c4:	and    BYTE PTR [eax+0x3],0x3
  4140c8:	add    BYTE PTR [ebx],ah
  4140ca:	sbb    eax,0xac902200
  4140cf:	and    BYTE PTR [ecx+0x4b381105],ah
  4140d5:	or     BYTE PTR [edx+0x10],al
  4140d8:	jl     0x4140aa
  4140da:	dec    ebx
  4140db:	sub    BYTE PTR [eax],dh
  4140dd:	add    al,0x3c
  4140df:	add    eax,0xed0118c0
  4140e4:	adc    BYTE PTR [eax+0x4002810b],cl
  4140ea:	adc    esp,esp
  4140ec:	add    DWORD PTR [esp+ebx*1],eax
  4140ef:	and    BYTE PTR [ebx],dh
  4140f1:	or     dh,al
  4140f3:	pusha  
  4140f4:	or     BYTE PTR [ecx+0x2d],cl
  4140f7:	nop
  4140f8:	push   es
  4140f9:	or     BYTE PTR [eax],bh
  4140fb:	or     bl,bl
  4140fd:	(bad)  
  4140fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140ff:	push   edx
  414100:	push   ss
  414101:	add    BYTE PTR [eax],ah
  414103:	cmp    eax,0x28019983
  414108:	push   es
  414109:	add    DWORD PTR [eax+0x201108c8],esi
  41410f:	add    BYTE PTR [eax],ch
  414111:	mov    ds:0x44469058,al
  414116:	add    BYTE PTR [eax+edx*2],al
  414119:	adc    BYTE PTR [ebx],al
  41411b:	or     eax,0x5c00a89
  414120:	add    BYTE PTR [ecx+edx*4+0x42],al
  414124:	adc    BYTE PTR [eax+0x15e103],cl
  41412a:	ret    0x40
  41412d:	push   esi
  41412e:	and    BYTE PTR [ecx],dh
  414130:	or     dl,BYTE PTR [ecx-0x65]
  414133:	add    DWORD PTR [eax+0x24],edx
  414136:	sbb    esi,DWORD PTR [eax+eiz*1]
  414139:	add    DWORD PTR [esi+eax*1-0x7b],edx
  41413d:	sub    cl,BYTE PTR [edx]
  41413f:	add    BYTE PTR es:[eax+ecx*1],al
  414143:	add    al,BYTE PTR [eax]
  414145:	cmp    dl,BYTE PTR [eax+edx*2+0x48a4744]
  41414c:	or     al,0x19
  41414e:	add    BYTE PTR [edx+0x48a02006],0x98
  414155:	nop
  414156:	add    esp,DWORD PTR [ecx+esi*2]
  414159:	adc    al,0x10
  41415b:	or     ah,BYTE PTR [eax]
  41415d:	add    eax,DWORD PTR [edx]
  41415f:	and    al,0x85
  414161:	add    eax,0x2204510
  414166:	add    ah,BYTE PTR [eax*1+0x1000894d]
  41416d:	adc    BYTE PTR [ecx],al
  41416f:	and    DWORD PTR [ebx+0x40],eax
  414172:	sub    DWORD PTR [edx],edx
  414174:	or     BYTE PTR [eax],al
  414176:	mov    ecx,DWORD PTR [edx]
  414178:	or     BYTE PTR [edx+eax*1],al
  41417b:	mov    BYTE PTR [eax+0x49],al
  41417e:	mov    BYTE PTR es:[ebx],ch
  414181:	and    BYTE PTR [edx],bl
  414183:	add    BYTE PTR [edx],ah
  414185:	and    ah,cl
  414187:	pop    eax
  414188:	add    al,dl
  41418a:	add    al,BYTE PTR [edx+0x52]
  41418d:	add    eax,DWORD PTR [eax]
  41418f:	inc    edi
  414190:	and    BYTE PTR [ecx-0x5d90f9be],cl
  414196:	or     al,0x20
  414198:	push   eax
  414199:	int3   
  41419a:	adc    al,0x3f
  41419c:	inc    eax
  41419d:	add    DWORD PTR [esp+ecx*2+0x140000],0x70b4411
  4141a8:	mov    BYTE PTR ds:0x18f0426a,dl
  4141ae:	test   BYTE PTR [ecx],cl
  4141b0:	add    BYTE PTR [edx-0x38],al
  4141b3:	adc    eax,0x80018a3
  4141b8:	and    DWORD PTR [ecx+0x11],eax
  4141bb:	or     BYTE PTR [ebp+0x219e008],ch
  4141c1:	add    BYTE PTR [ecx],ch
  4141c3:	sbb    al,0x10
  4141c5:	xor    BYTE PTR [eax+0x980],0x40
  4141cc:	xor    cl,0x44
  4141cf:	loopne 0x414221
  4141d1:	and    BYTE PTR [eax+0x31],cl
  4141d4:	add    eax,0x918060f
  4141d9:	inc    edx
  4141da:	dec    eax
  4141db:	and    BYTE PTR ds:0x12880700,al
  4141e1:	sbb    BYTE PTR [ecx+0x1],ch
  4141e4:	add    ah,BYTE PTR [esi]
  4141e6:	add    BYTE PTR [ecx],ah
  4141e8:	sbb    BYTE PTR [eax],0x59
  4141eb:	add    BYTE PTR [esi],cl
  4141ed:	and    BYTE PTR [eax+0x328229c0],dl
  4141f3:	pusha  
  4141f4:	add    BYTE PTR [eax+0x50],0x64
  4141f8:	add    BYTE PTR [ebx],ch
  4141fa:	add    DWORD PTR [edx+eax*8],eax
  4141fd:	add    al,0x6
  4141ff:	adc    DWORD PTR cs:[eax+eiz*1],ecx
  414203:	pushf  
  414204:	add    al,0xa0
  414206:	add    BYTE PTR [eax],0x30
  414209:	adc    BYTE PTR [eax+0x16c9430],0x25
  414210:	sbb    BYTE PTR [eax-0x33bcf7d0],ah
  414216:	add    BYTE PTR [ebx+0x21038e0],bl
  41421c:	adc    BYTE PTR [ebx+0x48050284],al
  414222:	ror    BYTE PTR [edi],1
  414224:	add    eax,0x80220608
  414229:	and    BYTE PTR [eax],al
  41422b:	push   ebx
  41422c:	add    BYTE PTR [edx+0x41],al
  41422f:	add    BYTE PTR [esi],0x68
  414232:	and    BYTE PTR [eax+edi*2-0x7c],al
  414236:	add    BYTE PTR [eax+0x9],bh
  414239:	sbb    ah,0x1
  41423c:	add    al,0xb
  41423e:	and    al,0x20
  414240:	add    DWORD PTR [ecx],0x20
  414243:	or     BYTE PTR [eax+eax*4],dl
  414246:	add    ah,ah
  414248:	add    dl,BYTE PTR [edx+0x8843d0c]
  41424e:	add    BYTE PTR [ecx],al
  414250:	add    al,al
  414252:	inc    ecx
  414253:	and    DWORD PTR [ecx+0x2c],edx
  414256:	add    al,BYTE PTR [ebx]
  414258:	enter  0x803,0x20
  41425c:	enter  0x5,0x40
  414260:	or     BYTE PTR ds:0x32054a6,0x41
  414267:	or     ebp,DWORD PTR [eax]
  414269:	or     al,0xa
  41426b:	rol    BYTE PTR [ecx+0x8340d0],0x42
  414272:	or     al,0x42
  414274:	inc    eax
  414275:	adc    BYTE PTR [eax+eax*1+0x4ca6a72],al
  41427c:	adc    BYTE PTR [edx],al
  41427e:	add    BYTE PTR [eax],al
  414280:	adc    BYTE PTR [ecx+ecx*1],al
  414283:	inc    ebp
  414284:	push   ss
  414285:	dec    eax
  414286:	sub    al,0x1
  414288:	mov    BYTE PTR [eax+0x35],ah
  41428b:	sbb    DWORD PTR [eax],ecx
  41428d:	inc    eax
  41428e:	add    dh,BYTE PTR [ecx+0x4d]
  414291:	and    ah,BYTE PTR [eax+0x730830]
  414297:	adc    BYTE PTR [eax+edx*1],0x51
  41429b:	adc    DWORD PTR [eax],0x11
  41429e:	or     BYTE PTR [eax+ecx*8],al
  4142a1:	sub    esp,eax
  4142a3:	bound  ecx,QWORD PTR [ecx]
  4142a5:	ss add al,0x51
  4142a8:	inc    eax
  4142a9:	sbb    BYTE PTR [ecx],al
  4142ab:	or     eax,DWORD PTR [eax]
  4142ad:	cmp    BYTE PTR [edx],al
  4142af:	inc    eax
  4142b0:	push   ecx
  4142b1:	push   0x3
  4142b3:	push   edx
  4142b4:	pop    ss
  4142b5:	add    dh,ah
  4142b7:	inc    ecx
  4142b8:	rol    DWORD PTR [eax],0x22
  4142bb:	or     BYTE PTR [eax],al
  4142bd:	adc    BYTE PTR [ecx],al
  4142bf:	and    DWORD PTR [esi+0x4],0x20015eba
  4142c6:	or     BYTE PTR [eax],0x30
  4142c9:	add    al,BYTE PTR [eax-0x6bf742de]
  4142cf:	cdq    
  4142d0:	pop    ss
  4142d1:	add    ah,BYTE PTR [eax+0x30]
  4142d4:	test   BYTE PTR [eax],al
  4142d6:	clc    
  4142d7:	add    BYTE PTR [eax],al
  4142d9:	mov    al,ds:0xe09702a
  4142de:	or     BYTE PTR [ecx],al
  4142e0:	and    al,BYTE PTR [edx]
  4142e2:	xor    eax,DWORD PTR [eax+0x6200020]
  4142e8:	sbb    BYTE PTR [edi],ah
  4142ea:	mov    WORD PTR [esp+ebx*1],ss
  4142ed:	and    al,0x6a
  4142ef:	and    al,BYTE PTR [esi]
  4142f1:	adc    BYTE PTR [eax+0x18008989],0x58
  4142f8:	and    al,0x8c
  4142fa:	pusha  
  4142fb:	add    DWORD PTR fs:[eax],eax
  4142fe:	inc    eax
  4142ff:	sbb    ah,BYTE PTR [eax+0x29]
  414302:	nop
  414303:	mov    BYTE PTR [eax],ah
  414305:	inc    esp
  414306:	pusha  
  414307:	sub    al,0x84
  414309:	add    eax,0x2202c140
  41430e:	push   eax
  41430f:	mov    ah,0x80
  414311:	and    BYTE PTR [edx],al
  414313:	or     al,0x21
  414315:	ret    
  414316:	pop    eax
  414317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414318:	adc    al,0x80
  41431a:	sbb    BYTE PTR [eax],0x95
  41431d:	add    BYTE PTR [ecx+esi*1-0x75ffdfbe],al
  414324:	add    DWORD PTR [ebx+0x15],eax
  414327:	adc    al,BYTE PTR [eax+0x24308195]
  41432d:	add    ah,BYTE PTR [esi]
  41432f:	adc    BYTE PTR [edx],al
  414331:	add    BYTE PTR [eax],cl
  414333:	shl    DWORD PTR [eax],cl
  414335:	or     BYTE PTR [eax+0x1c34060c],al
  41433b:	call   0x50775441
  414340:	add    al,BYTE PTR [eax+0x68]
  414343:	mov    WORD PTR [ebx],es
  414345:	add    BYTE PTR [edx+edx*1],dl
  414348:	push   es
  414349:	ja     0x4142f5
  41434b:	adc    BYTE PTR [eax],cl
  41434d:	and    eax,0xe8402244
  414352:	or     eax,0x86080072
  414357:	or     BYTE PTR [edx],cl
  414359:	add    BYTE PTR [ecx],0xc
  41435c:	shl    BYTE PTR [ebx-0x6b],0x41
  414360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414361:	dec    esi
  414362:	rcr    DWORD PTR [eax],0x22
  414365:	or     BYTE PTR [edx+eax*1],cl
  414368:	add    al,0x82
  41436a:	adc    al,BYTE PTR [eax]
  41436c:	add    ebx,DWORD PTR [eax]
  41436e:	pusha  
  41436f:	add    BYTE PTR [edx+0x14010024],al
  414375:	or     al,BYTE PTR [eax+0x870dca]
  41437b:	xchg   BYTE PTR [esi+0x10],cl
  41437e:	dec    eax
  41437f:	add    eax,0x440e506c
  414384:	add    BYTE PTR [ecx-0x68],al
  414387:	and    DWORD PTR [eax],0x2a8102d0
  41438d:	add    DWORD PTR [edx+0x7021f20],eax
  414393:	add    BYTE PTR [eax-0x3f],al
  414396:	test   BYTE PTR [edi+0x28596e05],dl
  41439c:	add    DWORD PTR [ecx],ecx
  41439e:	push   ebp
  41439f:	adc    BYTE PTR [eax],ah
  4143a1:	pusha  
  4143a2:	adc    DWORD PTR [edx],0x6753c48
  4143a8:	add    al,0x80
  4143aa:	test   al,0xf4
  4143ac:	add    DWORD PTR [ebx+eax*1],edx
  4143af:	jmp    0x4002:0x8c402180
  4143b6:	sbb    al,0xc
  4143b8:	daa    
  4143b9:	add    BYTE PTR [esp+eax*1],al
  4143bc:	xchg   ecx,eax
  4143bd:	add    BYTE PTR [edx],dl
  4143bf:	mov    ah,0x43
  4143c1:	sbb    eax,DWORD PTR [edx+0x54a00290]
  4143c7:	or     BYTE PTR [eax+0x14],ah
  4143ca:	add    ah,BYTE PTR [eax]
  4143cc:	add    al,0x0
  4143ce:	inc    eax
  4143cf:	add    cl,BYTE PTR [ebx]
  4143d1:	xchg   ebp,eax
  4143d2:	ror    BYTE PTR [eax],0x2
  4143d5:	add    BYTE PTR [edx+0x30],al
  4143d8:	add    BYTE PTR [eax],dl
  4143da:	xor    al,0x2
  4143dc:	nop
  4143dd:	pusha  
  4143de:	push   edx
  4143df:	add    BYTE PTR [eax+0x41980802],al
  4143e5:	inc    esp
  4143e6:	or     al,0x20
  4143e8:	add    BYTE PTR [edx],dh
  4143ea:	fadd   DWORD PTR [ecx+0x18]
  4143ed:	and    al,0x50
  4143ef:	test   BYTE PTR [ecx],ah
  4143f1:	and    al,BYTE PTR [eax]
  4143f3:	sub    BYTE PTR [eax+0x11],0x90
  4143f7:	adc    BYTE PTR [edx],al
  4143f9:	pusha  
  4143fa:	mov    DWORD PTR [eax],ecx
  4143fc:	nop
  4143fd:	or     dl,BYTE PTR [ecx]
  4143ff:	sub    BYTE PTR [eax],ah
  414401:	sbb    bh,BYTE PTR [eax]
  414403:	add    DWORD PTR [ecx],edx
  414405:	add    eax,0x10822c0
  41440a:	add    BYTE PTR [eax],ah
  41440c:	xchg   DWORD PTR [edx+0x40853],eax
  414412:	mov    eax,ds:0x45809804
  414417:	and    dl,dl
  414419:	or     al,0x8
  41441b:	or     BYTE PTR [eax+eax*4-0x80],al
  41441f:	mov    BYTE PTR [eax],cl
  414421:	push   es
  414422:	mov    al,cl
  414424:	add    BYTE PTR [ecx+0x44151847],bl
  41442a:	add    cl,BYTE PTR ds:0x605a0880
  414430:	cwde   
  414431:	adc    al,0x6b
  414433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414434:	ss add al,0x2
  414437:	enter  0xc81,0xa
  41443b:	and    al,al
  41443d:	nop
  41443e:	nop
  41443f:	and    al,BYTE PTR [edx]
  414441:	add    BYTE PTR [eax],ah
  414443:	adc    BYTE PTR [ecx],bl
  414445:	fidiv  DWORD PTR [eax+0x31162880]
  41444b:	and    eax,0x8191
  414450:	add    al,0xb0
  414452:	add    al,0x34
  414454:	ret    0x8801
  414457:	mov    BYTE PTR [eax+0x4],cl
  41445a:	js     0x4143e4
  41445c:	sbb    al,dh
  41445e:	add    BYTE PTR [eax+eax*2-0x6ffffeff],dl
  414465:	shl    BYTE PTR [edx],0x81
  414468:	or     BYTE PTR [esi+eax*1],cl
  41446b:	add    al,0x61
  41446d:	add    BYTE PTR [edx+edx*4+0x0],al
  414471:	or     BYTE PTR [esp+ecx*2+0x2808008a],ch
  414478:	add    eax,0xa6402658
  41447d:	xor    BYTE PTR ds:0x580404,al
  414483:	inc    eax
  414484:	fs add eax,0x808a0005
  41448a:	and    BYTE PTR [ebp+0x49],al
  41448d:	push   esp
  41448e:	adc    BYTE PTR [ecx],al
  414490:	and    BYTE PTR ds:0xb080225,ch
  414496:	add    ecx,DWORD PTR [esi+0x11402026]
  41449c:	push   0x0
  41449e:	or     al,BYTE PTR [ebx-0x3ffb7766]
  4144a4:	lds    eax,FWORD PTR [edx+eax*1]
  4144a7:	mov    ds:0xcb56800,al
  4144ac:	add    BYTE PTR [esi],al
  4144ae:	or     al,0xa
  4144b0:	add    BYTE PTR [eax-0x7d],al
  4144b3:	nop
  4144b4:	or     DWORD PTR [edx],esp
  4144b6:	or     BYTE PTR [ecx],al
  4144b8:	or     al,0x0
  4144ba:	push   es
  4144bb:	add    BYTE PTR [ecx+0xc],0x0
  4144bf:	mov    al,ds:0x14d00a5
  4144c4:	xor    ah,BYTE PTR [ecx+0x10]
  4144c7:	sub    DWORD PTR [ecx],esp
  4144c9:	add    BYTE PTR [eax+0x5a24800],al
  4144cf:	mov    edx,0x1502504
  4144d4:	inc    ebx
  4144d5:	nop
  4144d6:	add    al,0x2
  4144d8:	mov    eax,DWORD PTR [eax+0x64001104]
  4144de:	inc    edx
  4144df:	add    al,0x25
  4144e1:	push   esp
  4144e2:	cs nop
  4144e4:	inc    eax
  4144e5:	nop
  4144e6:	add    BYTE PTR [eax],al
  4144e8:	adc    al,0x4a
  4144ea:	xchg   ebx,eax
  4144eb:	push   edx
  4144ec:	sbb    al,BYTE PTR [eax+0x40839d93]
  4144f2:	add    DWORD PTR [eax+eax*4-0x28],esp
  4144f6:	add    al,0x25
  4144f8:	adc    BYTE PTR [esi+0xb],al
  4144fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144fc:	add    al,BYTE PTR [eax+0x31281a3]
  414502:	loopne 0x414505
  414504:	or     BYTE PTR [edx+eax*1-0x2f8fdefe],cl
  41450b:	or     ah,BYTE PTR [eax]
  41450d:	add    dl,BYTE PTR [esp+ebp*1]
  414510:	mov    BYTE PTR [eax],al
  414512:	add    BYTE PTR [eax+0x3c8a000],al
  414518:	and    al,0x25
  41451a:	or     BYTE PTR [edx],dl
  41451c:	add    eax,DWORD PTR [eax+0x4281302]
  414522:	add    eax,0x60201715
  414527:	mov    dl,0x0
  414529:	nop
  41452a:	sbb    dl,BYTE PTR [edi]
  41452c:	add    al,BYTE PTR [eax]
  41452e:	sub    ch,BYTE PTR [esi]
  414530:	xor    cl,BYTE PTR [edx]
  414532:	sub    BYTE PTR [ecx+0x38],al
  414535:	inc    ecx
  414536:	jo     0x414538
  414538:	add    ah,BYTE PTR [eax]
  41453a:	add    DWORD PTR [ecx],eax
  41453c:	xor    BYTE PTR [ecx+0x64],dl
  41453f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414541:	sbb    al,BYTE PTR [eax]
  414543:	push   edx
  414544:	and    DWORD PTR [eax+0x2a9304d4],esp
  41454a:	add    BYTE PTR [edx+0x9],al
  41454d:	mov    BYTE PTR [eax+0x79516881],dl
  414553:	add    BYTE PTR [ecx],cl
  414555:	dec    ebx
  414556:	sub    bh,dh
  414558:	and    BYTE PTR [eax],cl
  41455a:	and    DWORD PTR [eax+eax*1],ecx
  41455d:	add    BYTE PTR [edi],ah
  41455f:	mov    al,0x2
  414561:	cdq    
  414562:	add    BYTE PTR [eax*4+0x1240c553],dl
  414569:	sbb    BYTE PTR [ecx+0x24],ah
  41456c:	add    BYTE PTR [eax+edx*1+0x4c],cl
  414570:	(bad)  
  414571:	add    BYTE PTR [eax-0x5f7e72e0],al
  414577:	adc    al,BYTE PTR [edx+ecx*1]
  41457a:	lock and dl,cl
  41457d:	adc    BYTE PTR [edx-0x50],cl
  414580:	and    al,0x4
  414582:	dec    ebp
  414583:	and    ah,BYTE PTR [eax+0x25]
  414586:	dec    eax
  414587:	add    al,0x14
  414589:	adc    BYTE PTR [eax+0x11248011],ah
  41458f:	cmp    DWORD PTR [ecx],ecx
  414591:	add    eax,0xc1805201
  414596:	inc    ecx
  414597:	and    DWORD PTR [ebx],eax
  414599:	xchg   BYTE PTR [eax],ch
  41459b:	xor    BYTE PTR [eax-0x7c],0x4a
  41459f:	adc    al,0x0
  4145a1:	inc    eax
  4145a2:	pusha  
  4145a3:	call   0x1c418651
  4145a8:	sub    BYTE PTR [eax],al
  4145aa:	add    al,0x1
  4145ac:	or     bl,BYTE PTR [esi+esi*1+0x1]
  4145b0:	mov    BYTE PTR [eax],al
  4145b2:	xor    BYTE PTR [ecx],al
  4145b4:	push   esp
  4145b5:	add    BYTE PTR [eax],dh
  4145b7:	add    DWORD PTR [esi+eiz*1+0x500b220],0x200930
  4145c2:	and    al,0x1
  4145c4:	add    BYTE PTR [edi+0xae28860],dh
  4145ca:	push   cs
  4145cb:	add    al,BYTE PTR [eax+0x44]
  4145ce:	and    BYTE PTR [ecx],dl
  4145d0:	or     al,0x40
  4145d2:	or     BYTE PTR [eax-0x67cffbdf],dh
  4145d8:	add    BYTE PTR [edi],cl
  4145da:	lods   al,BYTE PTR ds:[esi]
  4145db:	fs popa 
  4145dd:	sub    al,0x53
  4145df:	xor    DWORD PTR [ebp+0x402044ac],0x5c042002
  4145e9:	rcr    BYTE PTR [edi+0x30301ba],0x4
  4145f0:	add    al,0x4
  4145f2:	add    BYTE PTR [ebp+0x0],bl
  4145f5:	sbb    cl,BYTE PTR [edx]
  4145f7:	inc    edx
  4145f8:	test   BYTE PTR [esi+ecx*4-0x4c],dl
  4145fc:	adc    dl,BYTE PTR [eax]
  4145fe:	xor    BYTE PTR [esi],al
  414600:	adc    esp,DWORD PTR [edx+0x422290ac]
  414606:	adc    BYTE PTR ds:0x82db0022,ah
  41460c:	gs scas eax,DWORD PTR es:[edi]
  41460e:	rol    BYTE PTR [eax],0x86
  414611:	sbb    DWORD PTR [eax],esi
  414613:	add    eax,0x40361c01
  414618:	add    al,0x15
  41461a:	or     al,BYTE PTR [ecx+0x10]
  41461d:	add    BYTE PTR ds:0x5018220,dl
  414623:	cwde   
  414624:	add    al,BYTE PTR [edx]
  414626:	add    al,0xd6
  414628:	popa   
  414629:	or     BYTE PTR [edx+0x9c18038],cl
  41462f:	add    BYTE PTR [ecx+0x18804100],bl
  414635:	add    BYTE PTR [eax],dl
  414637:	inc    ecx
  414638:	adc    dl,ch
  41463a:	push   0xd5c29002
  41463f:	add    BYTE PTR [ecx],dl
  414641:	jno    0x414694
  414643:	xor    al,0x81
  414645:	add    DWORD PTR [eax],ecx
  414647:	inc    esi
  414648:	jb     0x41464f
  41464a:	xchg   esp,eax
  41464b:	pop    ecx
  41464c:	xor    cl,cl
  41464e:	or     BYTE PTR [ebx],al
  414650:	add    al,0x0
  414652:	add    al,0xd4
  414654:	or     al,BYTE PTR [edx]
  414656:	inc    esp
  414657:	jp     0x4146b1
  414659:	inc    eax
  41465a:	adc    DWORD PTR [edx],edx
  41465c:	and    esi,DWORD PTR [ebx]
  41465e:	and    BYTE PTR [eax-0x66fdf7de],al
  414664:	or     al,0x1c
  414666:	lods   al,BYTE PTR ds:[esi]
  414667:	and    BYTE PTR [eax],ah
  414669:	or     BYTE PTR [ecx-0x64],al
  41466c:	push   0x4058a503
  414671:	inc    eax
  414672:	add    al,0x1c
  414674:	mov    ds:0x8c0200a2,eax
  414679:	ret    0xe62
  41467c:	mov    cl,0x2
  41467e:	les    eax,FWORD PTR [eax-0x40]
  414681:	retf   0x208a
  414684:	adc    al,BYTE PTR [eax]
  414686:	and    BYTE PTR [eax],cl
  414688:	add    al,0x4b
  41468a:	loopne 0x4146dc
  41468c:	add    bl,BYTE PTR [eax]
  41468e:	push   eax
  41468f:	adc    BYTE PTR [eax],0x0
  414692:	xchg   esp,eax
  414693:	add    BYTE PTR [eax],0x10
  414696:	dec    eax
  414697:	or     ecx,DWORD PTR [eax*8+0x50089400]
  41469e:	xchg   BYTE PTR [eax],dh
  4146a0:	sub    ah,BYTE PTR [eax+0x38]
  4146a3:	add    DWORD PTR [eax],eax
  4146a5:	dec    eax
  4146a6:	or     DWORD PTR [esp],esp
  4146a9:	and    bl,dl
  4146ab:	test   BYTE PTR [ebx+edx*4],al
  4146ae:	repnz and DWORD PTR [eax],0x10010601
  4146b5:	adc    al,BYTE PTR [ecx+eax*2]
  4146b8:	mov    al,BYTE PTR [ecx-0x3ff6fbf7]
  4146be:	sbb    BYTE PTR [eax],al
  4146c0:	and    BYTE PTR [edx-0x66fb7d78],dl
  4146c6:	cmp    DWORD PTR [eax+eax*1],0x9c0a606
  4146cd:	inc    ebp
  4146ce:	and    BYTE PTR [eax+edx*4],al
  4146d1:	dec    edi
  4146d2:	ror    DWORD PTR [eax],1
  4146d4:	call   DWORD PTR ds:0x435adc
  4146da:	dec    eax
  4146db:	sbb    BYTE PTR [edx],al
  4146dd:	add    al,0xa5
  4146df:	push   edx
  4146e0:	scas   eax,DWORD PTR es:[edi]
  4146e1:	add    BYTE PTR [ebx+0x2c],al
  4146e4:	inc    edx
  4146e5:	or     BYTE PTR [eax+0x0],al
  4146e8:	add    BYTE PTR [eax],cl
  4146ea:	or     eax,0x805000cb
  4146ef:	nop
  4146f0:	adc    ah,BYTE PTR [eax+0x2000082]
  4146f6:	adc    BYTE PTR [eax],dl
  4146f8:	shl    DWORD PTR [edi],1
  4146fa:	or     al,0x0
  4146fc:	inc    eax
  4146fd:	ror    BYTE PTR [edx-0x58],1
  414700:	add    BYTE PTR [eax+0x58],dl
  414703:	xor    ah,ah
  414705:	add    dl,BYTE PTR [eax]
  414707:	add    dh,BYTE PTR [eax+eax*1]
  41470a:	push   cs
  41470b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41470c:	push   es
  41470d:	and    BYTE PTR [ebx+ebp*4],al
  414710:	add    eax,DWORD PTR [esi]
  414712:	add    dh,BYTE PTR [edi+edx*1+0x42]
  414716:	or     BYTE PTR [ebx],al
  414718:	adc    DWORD PTR [esp+ebx*2],0x11
  41471c:	rcl    BYTE PTR [eax],0xd0
  41471f:	adc    esp,DWORD PTR [edx]
  414721:	add    al,0x80
  414723:	les    ecx,FWORD PTR [eax+0x12]
  414726:	and    BYTE PTR [edx],0x20
  414729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41472a:	inc    edx
  41472b:	add    BYTE PTR [edi+0x24c880],al
  414731:	xor    DWORD PTR [ebx],edx
  414733:	aam    0x2
  414735:	inc    eax
  414736:	add    DWORD PTR [ebx],esp
  414738:	outs   dx,BYTE PTR ds:[esi]
  414739:	sub    BYTE PTR [eax],al
  41473b:	adc    DWORD PTR [edx],esp
  41473d:	sbb    al,0x80
  41473f:	xor    DWORD PTR [edx],0x34
  414742:	add    dh,ah
  414744:	or     DWORD PTR [eax],eax
  414746:	mov    DWORD PTR [esp+edx*2+0x1000],eax
  41474d:	test   DWORD PTR [edx+0x30820842],ecx
  414753:	and    ebp,DWORD PTR [ecx]
  414755:	sbb    BYTE PTR [eax],al
  414757:	adc    ebx,DWORD PTR [edx]
  414759:	xor    esp,eax
  41475b:	xor    BYTE PTR [ecx+0x20],cl
  41475e:	add    al,BYTE PTR [esp+eiz*4+0x7294d308]
  414765:	add    ah,BYTE PTR [eax+eax*2]
  414768:	adc    al,BYTE PTR [eax+0x42]
  41476b:	cmp    BYTE PTR [ecx+0x14804028],dl
  414771:	sbb    DWORD PTR [ecx+0x2],ecx
  414774:	pusha  
  414775:	sub    al,0x1
  414777:	or     eax,0x808801c
  41477c:	test   BYTE PTR [ebx],ch
  41477e:	loope  0x4147d1
  414780:	and    BYTE PTR [esi-0x7fbee7ff],al
  414786:	xor    BYTE PTR [edx-0x75fedefc],al
  41478c:	inc    edx
  41478d:	test   BYTE PTR [eax],al
  41478f:	inc    eax
  414790:	add    cl,BYTE PTR [eax]
  414792:	xchg   edx,eax
  414793:	rol    BYTE PTR [eax+0x108e8801],0x45
  41479a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41479b:	add    eax,0xc9888499
  4147a0:	test   BYTE PTR ds:0xcfd43b80,al
  4147a6:	mov    ah,ah
  4147a8:	add    eax,DWORD PTR [eax]
  4147aa:	add    DWORD PTR [eax+0x900a464],ecx
  4147b0:	test   BYTE PTR [ebx],bl
  4147b2:	adc    BYTE PTR [eax+eax*8],dl
  4147b5:	or     al,0x6a
  4147b7:	add    DWORD PTR [eax],eax
  4147b9:	and    al,0x88
  4147bb:	and    BYTE PTR [eax],0x3
  4147be:	or     BYTE PTR [ecx],al
  4147c0:	add    al,0x2c
  4147c2:	add    al,0x21
  4147c4:	mov    al,ds:0x1c0b0420
  4147c9:	test   al,0x0
  4147cb:	test   al,0x4a
  4147cd:	sbb    esp,DWORD PTR [ecx]
  4147cf:	xor    BYTE PTR es:[edx-0x3c],dl
  4147d3:	add    BYTE PTR ds:0x9d041b0,dl
  4147d9:	add    al,ah
  4147db:	or     al,ah
  4147dd:	add    eax,DWORD PTR [ecx+0x50900a91]
  4147e3:	adc    BYTE PTR [ecx-0x7f],cl
  4147e6:	or     DWORD PTR [esi+0x252a4204],0x3300008a
  4147f0:	add    eax,0x4a868000
  4147f5:	adc    al,0x0
  4147f7:	add    BYTE PTR [eax],dl
  4147f9:	add    BYTE PTR [eax-0x761fff78],0xa0
  414800:	and    BYTE PTR [ecx],bl
  414802:	push   es
  414803:	add    dl,BYTE PTR ds:0x94092120
  414809:	add    BYTE PTR [eax+0x60002],al
  41480f:	pop    edx
  414810:	dec    eax
  414811:	mov    DWORD PTR [edx],eax
  414813:	add    BYTE PTR [edx+eax*1+0x60],0x50
  414818:	add    BYTE PTR [edx],cl
  41481a:	mov    al,0x2
  41481c:	add    al,0x10
  41481e:	inc    eax
  41481f:	add    al,0x8a
  414821:	dec    esi
  414822:	inc    eax
  414823:	and    al,0xcc
  414825:	mov    ch,0x4
  414827:	inc    edx
  414828:	inc    ecx
  414829:	adc    BYTE PTR [eax],0x2a
  41482c:	add    cl,BYTE PTR ds:0x7403018c
  414832:	or     al,0x23
  414834:	fwait
  414835:	add    al,BYTE PTR [ecx]
  414837:	adc    DWORD PTR [esp+eax*8],eax
  41483a:	add    BYTE PTR [eax],al
  41483c:	pop    esp
  41483d:	add    eax,0x804aa310
  414842:	add    BYTE PTR [edx],dh
  414844:	add    eax,DWORD PTR [eax+ecx*1]
  414847:	js     0x4148b5
  414849:	sbb    BYTE PTR [eax+0x9],cl
  41484c:	dec    eax
  41484d:	and    BYTE PTR [eax],0xe
  414850:	add    al,cl
  414852:	nop
  414853:	xlat   BYTE PTR ds:[ebx]
  414854:	pusha  
  414855:	dec    eax
  414856:	nop
  414857:	mov    al,0x45
  414859:	add    BYTE PTR [ecx],al
  41485b:	sub    al,0x6
  41485d:	or     BYTE PTR [ecx],dh
  41485f:	inc    esi
  414860:	xor    al,BYTE PTR [edx+edx*1+0x10]
  414864:	test   al,al
  414866:	add    al,0x94
  414869:	add    BYTE PTR [eax],ah
  41486b:	test   al,0xc1
  41486d:	add    DWORD PTR ds:0x2092050,ecx
  414873:	mov    DWORD PTR [eax+0x50401205],0x8402767
  41487d:	mov    ds:0x84508c69,al
  414882:	or     BYTE PTR [eax+0x0],bl
  414885:	enter  0xb0c,0x21
  414889:	sub    edx,DWORD PTR [eax+0x0]
  41488c:	sbb    DWORD PTR [edx],ebx
  41488e:	and    BYTE PTR [eax],al
  414890:	bound  eax,QWORD PTR [ecx-0x57cfeebd]
  414896:	add    edx,DWORD PTR [esp+ebp*1]
  414899:	adc    BYTE PTR [eax+0x8200870],cl
  41489f:	and    BYTE PTR [edx],ah
  4148a1:	adc    ah,BYTE PTR [ecx]
  4148a3:	jb     0x4148ad
  4148a5:	lods   al,BYTE PTR ds:[esi]
  4148a6:	ret    0x88bc
  4148a9:	add    DWORD PTR [edi-0x7be80000],ebx
  4148af:	pusha  
  4148b0:	fs xchg esp,eax
  4148b2:	adc    eax,DWORD PTR [eax]
  4148b4:	add    dl,BYTE PTR [ecx+ecx*4]
  4148b7:	add    al,0x10
  4148b9:	inc    ecx
  4148ba:	add    BYTE PTR [esi-0x80],al
  4148bd:	adc    cl,BYTE PTR [edx+0x4b]
  4148c0:	and    eax,DWORD PTR [eax+0x48002504]
  4148c6:	and    DWORD PTR [eax],ebp
  4148c8:	push   eax
  4148c9:	sub    DWORD PTR [ebx],eax
  4148cb:	xchg   edx,eax
  4148cc:	push   ecx
  4148cd:	and    BYTE PTR [esp+edx*1],al
  4148d0:	cmp    eax,DWORD PTR [edx-0x73]
  4148d3:	and    DWORD PTR [eax],edx
  4148d5:	sbb    al,0x12
  4148d7:	push   cs
  4148d8:	inc    esp
  4148d9:	sbb    BYTE PTR [eax+0x20],0x80
  4148dd:	test   BYTE PTR [eax+0x32c10582],ch
  4148e3:	and    BYTE PTR [eax+0x63],al
  4148e6:	pusha  
  4148e7:	and    ah,BYTE PTR [eax]
  4148e9:	or     DWORD PTR [eax-0x74],ebp
  4148ec:	push   cs
  4148ed:	add    BYTE PTR [esi+0x1384a02c],0x14
  4148f4:	(bad)  
  4148f5:	push   0xa0488306
  4148fa:	add    BYTE PTR [eax+ebx*1],ah
  4148fd:	add    al,BYTE PTR [eax+0x3040c800]
  414903:	add    BYTE PTR [eax],al
  414905:	inc    ebp
  414906:	mov    ds:0x40030a0e,al
  41490b:	pusha  
  41490c:	sbb    BYTE PTR [eax+0x40200280],ah
  414912:	push   eax
  414913:	xchg   ecx,eax
  414914:	add    BYTE PTR [edi-0x3cc5f5c0],0x40
  41491b:	nop
  41491c:	or     BYTE PTR [ebp+0x22],cl
  41491f:	and    BYTE PTR [ebx],ah
  414921:	nop
  414922:	test   BYTE PTR ds:0x600080,cl
  414928:	sub    bl,BYTE PTR [eax+edx*2]
  41492b:	inc    edx
  41492c:	sbb    BYTE PTR [eax+eax*4],dl
  41492f:	loopne 0x4148b4
  414931:	inc    eax
  414932:	push   eax
  414933:	mov    BYTE PTR [eax+0x45],ch
  414936:	push   esi
  414937:	cdq    
  414938:	pop    es
  414939:	add    BYTE PTR [ebp+0x418cc402],cl
  41493f:	mov    ch,BYTE PTR [esp+eax*2]
  414942:	add    cl,BYTE PTR [eax]
  414944:	or     BYTE PTR [edx-0x5f6f9ccc],dh
  41494a:	add    DWORD PTR ds:0x82708044,eax
  414950:	or     BYTE PTR [eax+0x8d41008],al
  414956:	push   cs
  414957:	or     DWORD PTR [ebx-0x77fe3f80],0x20
  41495e:	cwde   
  41495f:	mov    al,0xc0
  414961:	inc    edx
  414962:	push   cs
  414963:	add    BYTE PTR [edi],al
  414965:	or     al,0x4a
  414967:	mov    ecx,DWORD PTR [eax]
  414969:	add    al,BYTE PTR [eax+0x1005a0c]
  41496f:	add    eax,0xa2011e08
  414974:	or     eax,0x4020110c
  414979:	enter  0x309,0x22
  41497d:	add    al,BYTE PTR [eax+0x40]
  414980:	xchg   edx,eax
  414981:	nop
  414982:	add    al,BYTE PTR [esi]
  414984:	or     ch,BYTE PTR [esi]
  414986:	and    al,0x10
  414988:	and    cl,BYTE PTR [eax]
  41498a:	sbb    DWORD PTR [ebp+0x19182802],esi
  414990:	pop    eax
  414991:	inc    ecx
  414992:	and    al,BYTE PTR [eax+eiz*1]
  414995:	push   ss
  414996:	enter  0x34,0x1
  41499a:	push   es
  41499b:	push   eax
  41499c:	or     ch,BYTE PTR [eax]
  41499e:	add    DWORD PTR [eax],0x44084320
  4149a4:	and    al,0xd1
  4149a6:	mov    DWORD PTR [edx+0x3],esi
  4149a9:	add    BYTE PTR [eax+0x6f],al
  4149ac:	add    al,0x1d
  4149ae:	and    al,0x58
  4149b0:	cmp    esp,DWORD PTR [ecx+0x402003]
  4149b6:	dec    eax
  4149b7:	mov    cs,WORD PTR [ebx]
  4149b9:	add    dl,al
  4149bb:	adc    DWORD PTR [eax-0x7e],ecx
  4149be:	xor    BYTE PTR [eax],al
  4149c0:	add    BYTE PTR [esi+ecx*1],cl
  4149c3:	or     BYTE PTR [eax+ebx*4],al
  4149c6:	adc    BYTE PTR [eax+eax*1+0x1e],cl
  4149ca:	sub    eax,0x85d03080
  4149cf:	ret    
  4149d0:	or     cl,BYTE PTR [esi-0x77f5deff]
  4149d6:	add    BYTE PTR [eax],dl
  4149d8:	cmp    dl,BYTE PTR [eax]
  4149da:	and    eax,0xc8085
  4149e0:	les    ecx,FWORD PTR [eax]
  4149e2:	xor    BYTE PTR [eax],al
  4149e4:	rol    BYTE PTR [edx],1
  4149e6:	pushf  
  4149e7:	dec    eax
  4149e8:	and    al,BYTE PTR ds:0x21470204
  4149ee:	and    BYTE PTR [edi+0x100000a1],dl
  4149f4:	nop
  4149f5:	mov    al,0x48
  4149f7:	add    DWORD PTR [ebp+0x0],esp
  4149fa:	inc    edx
  4149fb:	or     BYTE PTR [ecx],bl
  4149fd:	or     BYTE PTR [ecx],bl
  4149ff:	or     BYTE PTR [ecx],cl
  414a01:	dec    esp
  414a02:	add    BYTE PTR [eax+0x403a0618],al
  414a08:	inc    eax
  414a09:	add    esi,DWORD PTR [ecx]
  414a0b:	add    al,BYTE PTR [edx+eax*1]
  414a0e:	and    BYTE PTR [eax],bl
  414a10:	xchg   BYTE PTR [eax+0x32d0c2d],bl
  414a16:	push   es
  414a17:	nop
  414a18:	rcl    BYTE PTR [eax],1
  414a1a:	(bad)  
  414a1b:	loopne 0x4149b1
  414a1d:	or     BYTE PTR [ecx+0x22],al
  414a20:	xchg   BYTE PTR [eax],al
  414a22:	sub    BYTE PTR [eax+eax*4],al
  414a25:	mov    BYTE PTR [eax],dh
  414a27:	or     al,bh
  414a29:	mov    eax,0x21044f0
  414a2e:	inc    esp
  414a2f:	xor    BYTE PTR [eax],dl
  414a31:	add    BYTE PTR [edx+esi*1-0x80],al
  414a35:	and    ah,BYTE PTR [ecx]
  414a37:	add    BYTE PTR [esi],0x8c
  414a3a:	test   BYTE PTR [eax+eax*8],cl
  414a3d:	je     0x414aaf
  414a3f:	or     BYTE PTR [edx+eiz*1],dl
  414a42:	inc    esp
  414a43:	adc    BYTE PTR [edx],ah
  414a45:	adc    DWORD PTR [eax],eax
  414a47:	or     al,al
  414a49:	inc    eax
  414a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a4b:	nop
  414a4c:	adc    al,0x42
  414a4e:	add    DWORD PTR [eax],esp
  414a50:	inc    ebx
  414a51:	inc    edx
  414a52:	dec    eax
  414a53:	add    DWORD PTR [ecx],edx
  414a55:	cmp    BYTE PTR [eax],cl
  414a57:	or     BYTE PTR [eax],dl
  414a59:	or     al,BYTE PTR [eax]
  414a5b:	and    dh,BYTE PTR [edx]
  414a5d:	or     cl,BYTE PTR [ebx]
  414a5f:	mov    al,0x2d
  414a61:	or     DWORD PTR [ecx+ecx*1+0x0],edx
  414a65:	test   BYTE PTR [eiz*1+0x414265d2],al
  414a6c:	xchg   BYTE PTR [esi],dl
  414a6e:	shl    BYTE PTR [eax+0x10],0xa
  414a72:	push   ss
  414a73:	push   es
  414a74:	inc    ebp
  414a75:	sub    BYTE PTR [esp+eax*2-0x6c],ch
  414a79:	push   ss
  414a7a:	and    al,0x40
  414a7c:	adc    BYTE PTR [edx+0x13],al
  414a7f:	add    BYTE PTR [eax],al
  414a81:	inc    esp
  414a82:	inc    esp
  414a83:	inc    ebp
  414a84:	and    BYTE PTR [edx-0x80],dl
  414a87:	lock inc edx
  414a89:	add    al,0xc0
  414a8b:	sub    BYTE PTR [esp+ecx*1-0x80],dl
  414a8f:	add    al,BYTE PTR ds:0x20214521
  414a95:	add    BYTE PTR [edx+0xc],ah
  414a98:	add    dh,BYTE PTR [edx]
  414a9a:	add    BYTE PTR [eax+0xa],ah
  414a9d:	test   DWORD PTR [eax],ecx
  414a9f:	or     DWORD PTR [ebx-0x7f],ecx
  414aa2:	and    DWORD PTR [esi+0x14088022],0xa00028
  414aac:	test   eax,0x8803444
  414ab1:	or     BYTE PTR [eiz*1+0x34520004],ch
  414ab8:	mov    BYTE PTR [eax],ah
  414aba:	inc    eax
  414abb:	add    cl,BYTE PTR [esi+0x18422034]
  414ac1:	or     BYTE PTR [esi-0x80],0x11
  414ac5:	or     al,0xab
  414ac7:	or     dl,BYTE PTR [ecx]
  414ac9:	cwde   
  414aca:	(bad)  
  414acb:	dec    edx
  414acc:	add    BYTE PTR [esi+ecx*2+0x3343844b],dl
  414ad3:	add    BYTE PTR [edx+0x48],al
  414ad6:	adc    al,BYTE PTR [eax]
  414ad8:	add    al,0x8
  414ada:	and    cl,BYTE PTR [eax+edi*1]
  414add:	add    al,0x0
  414adf:	inc    eax
  414ae0:	adc    eax,DWORD PTR [eax+edx*1+0xe90f040]
  414ae7:	adc    BYTE PTR [ecx+0x40],al
  414aea:	test   BYTE PTR [eax],dh
  414aec:	or     BYTE PTR [edx+0x0],dl
  414aef:	add    al,0x55
  414af1:	and    al,0x22
  414af3:	adc    BYTE PTR [eax+0x9],al
  414af6:	and    dl,BYTE PTR [ebx]
  414af8:	add    BYTE PTR [eax+0x31],al
  414afb:	add    al,0x0
  414afd:	or     DWORD PTR [edx+0x46820200],0x220086a0
  414b07:	add    al,BYTE PTR [ecx]
  414b09:	inc    eax
  414b0a:	inc    ebx
  414b0b:	or     BYTE PTR [ebx-0x3ddfff1d],al
  414b11:	les    esp,FWORD PTR [eax+ecx*1]
  414b14:	and    BYTE PTR [eax+0xb868065],cl
  414b1a:	adc    BYTE PTR [eax+0x10],0x48
  414b1e:	and    BYTE PTR [eax],bl
  414b20:	push   esp
  414b21:	xchg   ecx,eax
  414b22:	sub    al,0x41
  414b24:	or     DWORD PTR [eax+eax*2+0x8],eax
  414b28:	adc    al,0x40
  414b2a:	and    BYTE PTR [eax-0x78],dl
  414b2d:	add    eax,0x21020844
  414b32:	and    DWORD PTR [esp+edx*1+0x59],eax
  414b36:	adc    al,0x80
  414b38:	or     al,0x0
  414b3a:	xor    BYTE PTR [ebx],dl
  414b3c:	add    al,dl
  414b3e:	and    BYTE PTR [eax+0x22],dl
  414b41:	sub    BYTE PTR [eax+0x41],dl
  414b44:	add    BYTE PTR [eax-0x7c],al
  414b47:	and    BYTE PTR [esi],al
  414b49:	add    BYTE PTR [eax],0xc9
  414b4c:	add    BYTE PTR [eax],dh
  414b4e:	cmp    BYTE PTR [esi],al
  414b50:	les    eax,FWORD PTR [edx]
  414b52:	inc    eax
  414b53:	add    DWORD PTR [esi+0x10],eax
  414b56:	mov    al,ds:0x404a606
  414b5b:	lods   al,BYTE PTR ds:[esi]
  414b5c:	add    BYTE PTR [ecx+eax*1-0x58],0x21
  414b61:	add    al,0x77
  414b63:	and    al,0x14
  414b65:	or     al,al
  414b67:	inc    eax
  414b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b69:	add    DWORD PTR [eax+0x208d0100],eax
  414b6f:	dec    ecx
  414b70:	add    BYTE PTR [edx+0x2],0x60
  414b74:	and    DWORD PTR [edx],edi
  414b76:	mov    BYTE PTR [esp+eax*1],cl
  414b79:	and    al,0x14
  414b7b:	inc    esi
  414b7c:	popa   
  414b7d:	sbb    cl,BYTE PTR ds:0xc0c14a82
  414b83:	xor    eax,0x40890300
  414b88:	aaa    
  414b89:	adc    BYTE PTR [ecx],dl
  414b8b:	add    eax,0x22006054
  414b90:	add    al,0xd1
  414b92:	and    BYTE PTR [edx],cl
  414b94:	push   cs
  414b95:	and    al,0x89
  414b97:	add    BYTE PTR [eax],al
  414b99:	add    BYTE PTR [eax],bh
  414b9b:	inc    ecx
  414b9c:	add    al,0x7
  414b9e:	adc    al,cl
  414ba0:	les    eax,FWORD PTR [esi]
  414ba2:	adc    BYTE PTR [eax+eax*1+0x8433000],ah
  414ba9:	pop    ss
  414baa:	add    BYTE PTR [esi],bl
  414bac:	inc    esp
  414bad:	adc    cl,BYTE PTR [ecx-0x72]
  414bb0:	add    BYTE PTR [eax],ah
  414bb2:	stc    
  414bb3:	enter  0x80a1,0x2
  414bb7:	test   BYTE PTR [edi],dl
  414bb9:	add    al,BYTE PTR [eax+eax*2]
  414bbc:	or     BYTE PTR [eax],dl
  414bbe:	add    BYTE PTR [eax],dl
  414bc0:	or     al,BYTE PTR [eax]
  414bc2:	add    edi,DWORD PTR [eax+0x8]
  414bc5:	add    BYTE PTR [eax+0x641b1800],0xd0
  414bcc:	and    DWORD PTR [edx+0x18c3241],ebp
  414bd2:	enter  0x2000,0x91
  414bd6:	dec    eax
  414bd7:	add    DWORD PTR [edi],ecx
  414bd9:	jecxz  0x414b6e
  414bdb:	test   BYTE PTR [eax+edx*1],dh
  414bde:	cmp    eax,0x31240a52
  414be3:	test   DWORD PTR [esi+0x4c90010],ecx
  414be9:	and    BYTE PTR [esi+0x0],ah
  414bec:	ret    0x8004
  414bef:	add    BYTE PTR [edx-0x3bfffd8c],ah
  414bf5:	add    BYTE PTR [eax-0x673bafbe],al
  414bfb:	add    BYTE PTR [eax+eax*4],al
  414bfe:	mov    DWORD PTR [edx+eax*4],ebp
  414c01:	mov    eax,ds:0x41002690
  414c06:	loopne 0x414c74
  414c08:	adc    cl,BYTE PTR [eax]
  414c0a:	and    al,0x8d
  414c0c:	sbb    al,0x20
  414c0e:	push   eax
  414c0f:	int3   
  414c10:	add    BYTE PTR [eax+0x1908034],al
  414c16:	or     BYTE PTR ds:0xc0264210,al
  414c1c:	push   ecx
  414c1d:	add    BYTE PTR [eax+0x2],ch
  414c20:	add    eax,DWORD PTR [ecx+eax*1]
  414c23:	add    DWORD PTR [esi],esp
  414c25:	xchg   DWORD PTR [eax],eax
  414c27:	or     al,BYTE PTR [edx]
  414c29:	and    BYTE PTR [esp+ecx*1],ah
  414c2c:	inc    esi
  414c2d:	add    al,BYTE PTR [edx]
  414c2f:	or     al,0x1
  414c31:	adc    BYTE PTR ds:0x52da088,bl
  414c37:	add    DWORD PTR [eax],esp
  414c39:	sbb    eax,0x56c42
  414c3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c3f:	lods   al,BYTE PTR ds:[esi]
  414c40:	sbb    al,BYTE PTR [ecx]
  414c42:	add    DWORD PTR [edx+0x405aafc],eax
  414c48:	or     DWORD PTR [ecx+0x3ca00053],ebx
  414c4e:	add    DWORD PTR [ecx],eax
  414c50:	sub    BYTE PTR [edx],bl
  414c52:	(bad)  
  414c53:	add    BYTE PTR [esi],al
  414c55:	adc    BYTE PTR [edx],0x1d
  414c58:	push   ss
  414c59:	scas   al,BYTE PTR es:[edi]
  414c5a:	add    BYTE PTR [eax],0x43
  414c5d:	test   BYTE PTR [eax],al
  414c5f:	add    BYTE PTR [eax+0x2],ah
  414c62:	or     al,0x20
  414c64:	jno    0x414c68
  414c66:	or     ch,BYTE PTR [eax+eiz*2+0x4]
  414c6a:	es sub eax,0x4092c203
  414c70:	add    al,0x49
  414c72:	sbb    BYTE PTR [eax],0x44
  414c75:	or     DWORD PTR [eax],eax
  414c77:	push   ecx
  414c78:	pusha  
  414c79:	inc    eax
  414c7a:	xor    eax,DWORD PTR [eax]
  414c7c:	add    BYTE PTR [edi+0x18400053],al
  414c82:	inc    edx
  414c83:	push   es
  414c84:	pusha  
  414c85:	daa    
  414c86:	sub    al,BYTE PTR [eax+ecx*1]
  414c89:	add    eax,0x421aa9d
  414c8e:	mov    BYTE PTR [edx],ah
  414c90:	push   ecx
  414c91:	inc    ebx
  414c92:	add    al,0x42
  414c94:	xor    BYTE PTR [eax],al
  414c96:	inc    esp
  414c97:	or     BYTE PTR [esi],al
  414c99:	or     DWORD PTR [edx],eax
  414c9b:	and    BYTE PTR [ecx],bl
  414c9d:	add    al,0x2d
  414c9f:	adc    eax,ecx
  414ca1:	inc    eax
  414ca2:	and    ax,0x9070
  414ca6:	les    esp,FWORD PTR [ecx]
  414ca8:	into   
  414ca9:	sbb    ebp,DWORD PTR [edx+ebp*1]
  414cac:	dec    esp
  414cad:	mov    esi,DWORD PTR [eax+0x21d40480]
  414cb3:	add    cl,BYTE PTR [esi+eax*1]
  414cb6:	add    BYTE PTR [ebx],al
  414cb8:	test   BYTE PTR [eax],al
  414cba:	add    BYTE PTR [ecx],al
  414cbc:	mov    WORD PTR [eax],cs
  414cbe:	and    dh,BYTE PTR [eax+0x48]
  414cc1:	mov    BYTE PTR [esi],al
  414cc3:	fsub   DWORD PTR [ecx+0x1102600]
  414cc9:	and    DWORD PTR [eax-0x7df7b3ff],eax
  414ccf:	add    BYTE PTR [eax+eax*1],bl
  414cd2:	push   eax
  414cd3:	adc    BYTE PTR [eax+0x4],al
  414cd6:	adc    DWORD PTR [eax],edx
  414cd8:	inc    ebx
  414cd9:	push   es
  414cda:	inc    eax
  414cdb:	fs and al,al
  414cde:	and    al,ch
  414ce0:	and    BYTE PTR [eax],0x18
  414ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ce4:	nop
  414ce5:	add    al,0xb4
  414ce7:	add    BYTE PTR [edx+ecx*1],ah
  414cea:	add    BYTE PTR [eax],al
  414cec:	or     BYTE PTR [eax],al
  414cee:	add    cl,BYTE PTR [eax+ebp*8+0x481c18a8]
  414cf5:	inc    eax
  414cf6:	add    DWORD PTR [eax],ecx
  414cf8:	sub    al,0x4
  414cfa:	add    BYTE PTR [eax],0x8a
  414cfd:	xor    DWORD PTR [eax],ecx
  414cff:	and    al,BYTE PTR [eax]
  414d01:	adc    al,BYTE PTR [ecx+0x10]
  414d04:	add    BYTE PTR [edx],al
  414d06:	mov    BYTE PTR [ebx-0x5c],cl
  414d09:	bound  eax,QWORD PTR [eax]
  414d0b:	dec    edx
  414d0c:	adc    BYTE PTR [edx-0x77],cl
  414d0f:	and    BYTE PTR [eax],al
  414d11:	adc    DWORD PTR [edi+0x1],edx
  414d14:	nop
  414d15:	sub    ch,al
  414d17:	nop
  414d18:	and    BYTE PTR [eax+0x2002c43],bh
  414d1e:	dec    ebx
  414d1f:	(bad)  
  414d20:	leave  
  414d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d22:	adc    BYTE PTR [eax],0x56
  414d25:	inc    eax
  414d26:	mov    al,ds:0x1b40a0
  414d2b:	xchg   esp,eax
  414d2c:	sub    BYTE PTR [eax],al
  414d2e:	bound  esp,QWORD PTR [eax+eax*1]
  414d31:	add    al,0xb0
  414d33:	add    BYTE PTR [ecx],ah
  414d35:	inc    eax
  414d36:	ret    0x4441
  414d39:	pop    ss
  414d3a:	add    al,BYTE PTR [edx]
  414d3c:	dec    esi
  414d3d:	push   eax
  414d3e:	test   BYTE PTR [eax+0x4080010c],al
  414d44:	add    BYTE PTR fs:[eax+0x4932e940],ah
  414d4b:	inc    edx
  414d4c:	add    DWORD PTR [eax],eax
  414d4e:	or     BYTE PTR [ecx],al
  414d50:	jbe    0x414d95
  414d52:	ret    0x924
  414d55:	xchg   edx,eax
  414d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d57:	es and al,0x40
  414d5a:	inc    edx
  414d5b:	xor    BYTE PTR [edx],0x29
  414d5e:	and    BYTE PTR [edi],cl
  414d60:	adc    DWORD PTR [eax+eiz*1],esi
  414d63:	adc    ebp,esi
  414d65:	add    BYTE PTR [eax],al
  414d67:	cmp    BYTE PTR [edx],cl
  414d69:	mov    WORD PTR [ebp+0x141c000],es
  414d6f:	sub    al,0x1c
  414d71:	add    BYTE PTR [esi+0x80a3a86],ah
  414d77:	sahf   
  414d78:	inc    esp
  414d79:	or     al,BYTE PTR [edx+edx*1]
  414d7c:	mov    WORD PTR [edi+0x0],es
  414d7f:	pusha  
  414d80:	push   es
  414d81:	adc    BYTE PTR [eax+esi*8+0x66604c5],cl
  414d88:	retf   
  414d89:	jo     0x414d3c
  414d8b:	adc    DWORD PTR [edx],eax
  414d8d:	adc    bl,BYTE PTR [edi]
  414d8f:	inc    ecx
  414d90:	or     ebx,DWORD PTR es:[edx]
  414d93:	adc    al,0x50
  414d95:	add    DWORD PTR [ecx],esp
  414d97:	loope  0x414e06
  414d99:	xchg   ebx,eax
  414d9a:	add    BYTE PTR [eax],ah
  414d9c:	mov    al,ds:0x44409266
  414da1:	push   esp
  414da2:	lds    eax,FWORD PTR [eax+0x40]
  414da5:	add    BYTE PTR [eax+0x61],ah
  414da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414da9:	ret    0x22d1
  414dac:	test   BYTE PTR [eax],al
  414dae:	or     DWORD PTR ss:[eax+eax*1],ecx
  414db2:	adc    BYTE PTR [edx-0x6cf6de5e],al
  414db8:	add    eax,eax
  414dba:	rol    DWORD PTR [ecx],1
  414dbc:	and    DWORD PTR [ebx],0x31004c26
  414dc2:	enter  0xd630,0x10
  414dc6:	add    BYTE PTR [eax],bh
  414dc8:	sub    BYTE PTR [ecx],cl
  414dca:	add    al,0x10
  414dcc:	add    DWORD PTR [ecx],edx
  414dce:	or     BYTE PTR [edi],0x9
  414dd1:	pop    esi
  414dd2:	inc    edx
  414dd3:	test   DWORD PTR [edx],eax
  414dd5:	add    eax,0x80a08000
  414dda:	or     ecx,DWORD PTR [ebp+0xf]
  414ddd:	and    BYTE PTR [eax],ah
  414ddf:	add    BYTE PTR [ecx],dh
  414de1:	xchg   esp,eax
  414de2:	sbb    ah,0x42
  414de5:	add    ah,BYTE PTR [edx-0x2e]
  414de8:	push   eax
  414de9:	or     BYTE PTR [ebx],cl
  414deb:	and    al,0x75
  414ded:	adc    BYTE PTR [eax],ah
  414def:	push   cs
  414df0:	sbb    BYTE PTR [edx+0x48f80910],al
  414df6:	and    al,al
  414df8:	adc    ecx,ecx
  414dfa:	add    BYTE PTR [edx+0x55],0x46
  414dfe:	add    DWORD PTR [ecx-0x73fbfddf],esp
  414e04:	inc    eax
  414e05:	add    DWORD PTR [eax+0x7c],0xa4558041
  414e0c:	adc    BYTE PTR [ebp+0x24],0x28
  414e10:	or     eax,0x2032440e
  414e15:	add    BYTE PTR [ecx],bh
  414e17:	add    BYTE PTR ds:0x92028000,ah
  414e1d:	sbb    al,0x0
  414e1f:	add    DWORD PTR [ecx-0x7f],0x20
  414e23:	imul   esp,DWORD PTR [edx],0x488b80a4
  414e29:	push   eax
  414e2a:	add    eax,DWORD PTR [eax+ecx*1]
  414e2d:	add    DWORD PTR [ecx+0x3b],0x39008002
  414e34:	adc    bl,BYTE PTR [eax]
  414e36:	or     BYTE PTR [eax],al
  414e38:	add    BYTE PTR ds:0x30024d6,ch
  414e3e:	add    BYTE PTR ds:0x270490,0x58
  414e45:	add    BYTE PTR [eax],0x24
  414e48:	add    BYTE PTR [ecx],al
  414e4a:	xor    al,0x0
  414e4c:	adc    DWORD PTR [eax+0x14274007],ecx
  414e52:	adc    BYTE PTR [eax],al
  414e54:	inc    eax
  414e55:	add    eax,0x840040e
  414e5a:	add    BYTE PTR [ecx],0x30
  414e5d:	add    BYTE PTR [eax+0x9030940],0x0
  414e64:	xchg   esi,eax
  414e65:	xor    BYTE PTR [eax-0x80],dl
  414e68:	add    BYTE PTR [ebx],dl
  414e6a:	inc    ecx
  414e6b:	mov    bh,0x1
  414e6d:	push   ebp
  414e6e:	add    DWORD PTR [eax+0x20012089],0xf00c1411
  414e78:	add    al,0x24
  414e7a:	add    dh,BYTE PTR [eax]
  414e7c:	inc    edx
  414e7d:	add    al,0xc9
  414e7f:	push   es
  414e80:	add    al,BYTE PTR [eax]
  414e82:	sbb    BYTE PTR [eax],ah
  414e84:	loop   0x414ec6
  414e86:	inc    eax
  414e87:	cmp    BYTE PTR [ebx],ah
  414e89:	add    BYTE PTR [eax+0x20808c4],ah
  414e8f:	inc    esp
  414e90:	inc    eax
  414e91:	adc    BYTE PTR [eax-0x58],al
  414e94:	add    dl,BYTE PTR [ebp+0x0]
  414e97:	inc    edx
  414e98:	add    al,al
  414e9a:	and    eax,0x1900a40a
  414e9f:	sbb    al,0x8
  414ea1:	or     BYTE PTR [eax+0x0],0x67
  414ea5:	add    BYTE PTR [eax],al
  414ea7:	adc    al,0x7
  414ea9:	rol    BYTE PTR [eax],0x0
  414eac:	and    BYTE PTR [eax+0x13080045],al
  414eb2:	and    ah,cl
  414eb4:	inc    eax
  414eb5:	and    BYTE PTR [edx],bh
  414eb7:	or     BYTE PTR [eax],al
  414eb9:	add    BYTE PTR [eax],cl
  414ebb:	add    BYTE PTR [edx],al
  414ebd:	adc    BYTE PTR [eax+0x20],cl
  414ec0:	mov    es,WORD PTR [eax]
  414ec2:	add    al,0x8
  414ec4:	test   BYTE PTR [esp],al
  414ec7:	add    eax,0xe8240
  414ecc:	inc    ecx
  414ecd:	add    BYTE PTR [eax],al
  414ecf:	add    BYTE PTR [edx],al
  414ed1:	push   es
  414ed2:	rol    BYTE PTR [ebp+0x65],0x2
  414ed6:	push   0xa0490b0
  414edb:	xor    BYTE PTR [eax],al
  414edd:	add    al,0x2
  414edf:	inc    ebp
  414ee0:	or     al,0x4
  414ee2:	adc    al,0x4a
  414ee4:	jge    0x414f0a
  414ee6:	je     0x414f0c
  414ee8:	adc    BYTE PTR [eax],ah
  414eea:	add    BYTE PTR [eax],ah
  414eec:	es push ecx
  414eee:	add    BYTE PTR [ebx+edx*2],cl
  414ef1:	add    BYTE PTR [eax],al
  414ef3:	add    eax,0x20004500
  414ef8:	stos   BYTE PTR es:[edi],al
  414ef9:	add    eax,0x72820060
  414efe:	enter  0xa403,0x4
  414f02:	add    DWORD PTR [ecx+eax*2],ecx
  414f05:	xor    BYTE PTR [ecx+0x44],0x80
  414f09:	add    BYTE PTR [ebx],0x89
  414f0c:	add    DWORD PTR [ecx],ecx
  414f0e:	or     BYTE PTR [eax],al
  414f10:	and    BYTE PTR [eax],ah
  414f12:	add    BYTE PTR [eax],0x3
  414f15:	xchg   DWORD PTR [edx],eax
  414f17:	add    BYTE PTR [edx],dl
  414f19:	inc    eax
  414f1a:	and    BYTE PTR [edx],al
  414f1c:	xor    DWORD PTR [eax-0x60],eax
  414f1f:	inc    eax
  414f20:	add    al,0x81
  414f22:	test   BYTE PTR [edx],al
  414f24:	add    BYTE PTR [ecx-0x3c],0x31
  414f28:	adc    BYTE PTR [eiz*1+0x8140100],cl
  414f2f:	dec    ecx
  414f30:	add    BYTE PTR [edx],cl
  414f32:	add    BYTE PTR [eax],cl
  414f34:	xor    DWORD PTR [ecx],0x220008c1
  414f3a:	add    BYTE PTR [eax],al
  414f3c:	add    BYTE PTR [eax],al
  414f3e:	movups xmm1,XMMWORD PTR [edx]
  414f41:	add    ah,al
  414f43:	xor    BYTE PTR [esi],cl
  414f45:	or     ch,BYTE PTR [ecx+0x8020028]
  414f4b:	inc    ecx
  414f4c:	or     BYTE PTR ds:0x52401120,cl
  414f52:	inc    ebx
  414f53:	cmp    al,0x60
  414f55:	adc    eax,0x6408010
  414f5a:	imul   esi,DWORD PTR [eax],0x40
  414f5d:	mov    al,ds:0x821c05
  414f62:	add    eax,DWORD PTR [edx]
  414f64:	add    BYTE PTR [edx+0x0],al
  414f67:	add    BYTE PTR [ebx],ch
  414f69:	mov    ds:0x80008924,eax
  414f6e:	add    BYTE PTR [ebx],ah
  414f70:	or     BYTE PTR [edx+0x2a480189],dl
  414f76:	sub    BYTE PTR [esi+edi*4+0x124040],bl
  414f7d:	addr16 cmp al,0x61
  414f80:	or     al,BYTE PTR [ecx-0x40]
  414f83:	add    BYTE PTR [edx],al
  414f85:	and    al,BYTE PTR [eax+0x1]
  414f88:	xor    eax,DWORD PTR ds:0x1200c010
  414f8e:	add    BYTE PTR [eax],al
  414f90:	add    BYTE PTR [eax],dl
  414f92:	add    BYTE PTR [eax],bl
  414f94:	sub    BYTE PTR [eax-0x75a97faf],al
  414f9a:	add    BYTE PTR [eax+0x80060ba],al
  414fa0:	adc    cl,al
  414fa2:	and    BYTE PTR [eax],ah
  414fa4:	add    BYTE PTR [eax],0x0
  414fa7:	add    DWORD PTR [ecx+eiz*8],eax
  414faa:	add    BYTE PTR [edx-0x80],0x25
  414fae:	and    al,0x0
  414fb0:	add    al,0x0
  414fb2:	inc    eax
  414fb3:	ins    DWORD PTR es:[edi],dx
  414fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fb5:	push   0xa0080010
  414fba:	add    BYTE PTR [eax],0x36
  414fbd:	or     BYTE PTR [edx],bl
  414fbf:	add    al,0x11
  414fc1:	adc    BYTE PTR [eax+0x64],al
  414fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fc5:	add    DWORD PTR [eax],0x4e44584
  414fcb:	cmp    BYTE PTR [eax],0x8
  414fce:	inc    ebx
  414fcf:	push   es
  414fd0:	and    BYTE PTR [esi],ah
  414fd2:	add    BYTE PTR [edx],al
  414fd4:	sbb    BYTE PTR [eax],al
  414fd6:	or     BYTE PTR [ecx+ecx*1],al
  414fd9:	add    DWORD PTR [eax],eax
  414fdb:	inc    eax
  414fdc:	add    BYTE PTR [eax],al
  414fde:	push   cs
  414fdf:	or     ch,BYTE PTR [eax]
  414fe1:	and    BYTE PTR [eax],al
  414fe3:	or     dl,BYTE PTR [ecx]
  414fe5:	add    BYTE PTR [eax+eiz*1],al
  414fe8:	rol    DWORD PTR [eax-0x7f9f7de0],0x10
  414fef:	test   al,0x0
  414ff1:	and    BYTE PTR [eax],bl
  414ff3:	adc    BYTE PTR [ecx+0xb],ch
  414ff6:	or     BYTE PTR [edx],ah
  414ff8:	push   eax
  414ff9:	fadd   DWORD PTR [eax]
  414ffb:	inc    esp
  414ffc:	add    dh,BYTE PTR ds:0x5282020e
  415002:	adc    al,BYTE PTR [edx-0x6f3ffefd]
  415008:	add    al,0x40
  41500a:	add    al,BYTE PTR [eax]
  41500c:	add    DWORD PTR [eax],ebx
  41500e:	add    ah,dl
  415010:	or     BYTE PTR [eax],0x0
  415013:	sbb    BYTE PTR [eax],0x4
  415016:	add    al,0x0
  415018:	add    BYTE PTR [eax],cl
  41501a:	add    BYTE PTR [esi],ah
  41501c:	add    BYTE PTR [eax],al
  41501e:	add    BYTE PTR [eax+0x4],dl
  415021:	sub    BYTE PTR [ecx-0x7e],ah
  415024:	push   ss
  415025:	sbb    DWORD PTR [eax],eax
  415027:	inc    ebp
  415028:	inc    ecx
  415029:	add    al,0x4
  41502b:	add    BYTE PTR [eax],dh
  41502d:	mov    al,ds:0x10c88024
  415032:	add    BYTE PTR [eax+0x105b0090],al
  415038:	or     al,0x24
  41503a:	add    BYTE PTR [eax+0x1],cl
  41503d:	add    BYTE PTR [edx],ah
  41503f:	add    BYTE PTR [eax],dh
  415041:	mov    BYTE PTR [eax+0x0],0x0
  415045:	add    BYTE PTR [eax+eax*1],0x20
  415049:	add    al,0x4
  41504b:	mov    BYTE PTR [eax],al
  41504d:	call   0x8230:0x80082404
  415054:	add    BYTE PTR [eax+0x20],al
  415057:	inc    eax
  415058:	add    al,BYTE PTR [edx+0xc8c220]
  41505e:	leave  
  41505f:	add    BYTE PTR [edx],al
  415061:	adc    al,0x0
  415063:	add    BYTE PTR [ecx],cl
  415065:	adc    BYTE PTR [eax*1+0x16001c08],cl
  41506c:	mov    al,ds:0x108140
  415071:	daa    
  415072:	and    BYTE PTR [eax-0x6fbdf6f8],0x2
  415079:	dec    ecx
  41507a:	add    BYTE PTR [edx+0x1],0x4
  41507e:	add    BYTE PTR [eax],al
  415080:	add    BYTE PTR [ecx+0x30],al
  415083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415084:	and    BYTE PTR [eax],dl
  415086:	mov    al,0x42
  415088:	add    al,0x40
  41508a:	or     dl,BYTE PTR [eax+0x6]
  41508d:	and    cl,BYTE PTR [eax]
  41508f:	add    BYTE PTR [eax],dl
  415091:	add    edx,DWORD PTR [eax+0x4]
  415094:	inc    eax
  415095:	add    eax,0x11104946
  41509a:	add    BYTE PTR [esi-0x7ed7fc0],al
  4150a0:	sbb    al,BYTE PTR [ecx+0x0]
  4150a3:	adc    BYTE PTR [eax],0x41
  4150a6:	add    BYTE PTR [eax],al
  4150a8:	inc    ecx
  4150a9:	add    al,0x11
  4150ab:	dec    eax
  4150ac:	or     al,BYTE PTR [ecx+edx*1+0x1]
  4150b0:	push   es
  4150b1:	adc    DWORD PTR [eax-0x6fb57800],eax
  4150b7:	inc    eax
  4150b8:	or     BYTE PTR [eax],0x51
  4150bb:	inc    ebx
  4150bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150bd:	sbb    al,0x21
  4150bf:	or     BYTE PTR [edx+eax*8-0x7c],cl
  4150c3:	and    BYTE PTR [eax],al
  4150c5:	inc    ecx
  4150c6:	add    BYTE PTR [eax-0x80],bl
  4150c9:	and    BYTE PTR [eax],0x25
  4150cc:	add    DWORD PTR [eax],eax
  4150ce:	dec    esp
  4150cf:	mov    WORD PTR [ecx],fs
  4150d1:	inc    eax
  4150d2:	add    BYTE PTR [eax+0x40e4082],ch
  4150d8:	mov    WORD PTR [eax],fs
  4150da:	inc    edx
  4150db:	xchg   DWORD PTR [eax+0x4],esp
  4150de:	push   es
  4150df:	jo     0x415071
  4150e1:	add    BYTE PTR [eax+0x4],bl
  4150e4:	add    BYTE PTR [eax],al
  4150e6:	add    dl,BYTE PTR [ecx]
  4150e8:	or     eax,0x27aa0051
  4150ed:	and    al,BYTE PTR [eax]
  4150ef:	mov    al,0x92
  4150f1:	add    eax,0x45000008
  4150f6:	add    al,0xd2
  4150f8:	dec    eax
  4150f9:	inc    ebp
  4150fa:	inc    edx
  4150fb:	rol    BYTE PTR [eax+edx*1],0x1
  4150ff:	xchg   ebx,eax
  415100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415101:	add    BYTE PTR [ebx],ah
  415103:	add    BYTE PTR [edx-0x78],dl
  415106:	add    dl,al
  415108:	add    BYTE PTR [ecx],cl
  41510a:	and    al,BYTE PTR [ecx]
  41510c:	add    BYTE PTR [edx],cl
  41510e:	sub    eax,0x110200
  415113:	add    DWORD PTR [eax+0x10003],esp
  415119:	adc    BYTE PTR [eax],cl
  41511b:	add    DWORD PTR [ecx],esp
  41511d:	add    dl,al
  41511f:	add    al,0x0
  415121:	adc    dl,cl
  415123:	add    cl,BYTE PTR [eax]
  415125:	and    al,0x45
  415127:	add    BYTE PTR [eax],al
  415129:	dec    ecx
  41512a:	adc    al,0x49
  41512c:	inc    eax
  41512d:	sub    BYTE PTR [eax-0x3bfebff4],0x18
  415134:	inc    esp
  415135:	adc    DWORD PTR [edx+ebx*8],esp
  415138:	inc    ecx
  415139:	add    al,BYTE PTR [edx+eiz*2+0x40016603]
  415140:	add    eax,0x23280208
  415145:	inc    eax
  415146:	push   cs
  415147:	add    BYTE PTR [eax],0x61
  41514a:	add    DWORD PTR [eax+eax*1-0x2e],esp
  41514e:	add    BYTE PTR [edx],al
  415150:	adc    BYTE PTR [ebx],al
  415152:	mov    eax,ds:0x188320
  415157:	inc    eax
  415158:	add    BYTE PTR [eax+0x51931026],al
  41515e:	xchg   ecx,eax
  41515f:	sbb    BYTE PTR [edx+0x18],0x10
  415163:	pop    eax
  415164:	rol    DWORD PTR [ecx],0x0
  415167:	xchg   DWORD PTR [eax*1+0x5060020],esp
  41516e:	or     BYTE PTR [ecx],cl
  415170:	adc    dh,BYTE PTR [eax]
  415172:	adc    al,0x5
  415174:	add    DWORD PTR [ecx+0x1],eax
  415177:	adc    edi,DWORD PTR [eax+eax*1+0x1]
  41517b:	add    eax,eax
  41517d:	add    BYTE PTR [eax],al
  41517f:	sub    BYTE PTR [eax+0x41020020],cl
  415185:	in     al,0xc0
  415187:	add    BYTE PTR [eax],al
  415189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41518a:	nop
  41518b:	sub    BYTE PTR [eax+0x1],ah
  41518e:	sub    DWORD PTR [eax+0x8],eax
  415191:	add    BYTE PTR [ecx],0x0
  415194:	add    DWORD PTR [eax],eax
  415196:	and    BYTE PTR [eax],0x40
  415199:	les    eax,FWORD PTR [edx]
  41519b:	add    eax,DWORD PTR [ecx+ebp*2]
  41519e:	add    BYTE PTR [eax],al
  4151a0:	add    BYTE PTR [edx],al
  4151a2:	add    BYTE PTR [eax],al
  4151a4:	jno    0x4151a7
  4151a6:	or     al,ah
  4151a8:	add    al,BYTE PTR [eax]
  4151aa:	xor    BYTE PTR [ecx],ah
  4151ac:	add    BYTE PTR [ecx+0x0],cl
  4151af:	inc    eax
  4151b0:	add    al,BYTE PTR [eax]
  4151b2:	xor    al,BYTE PTR [edx+0x40]
  4151b5:	add    al,BYTE PTR [esi]
  4151b7:	stos   BYTE PTR es:[edi],al
  4151b8:	adc    DWORD PTR ds:0x411c0007,eax
  4151be:	add    BYTE PTR [eax+0x3a41c4d],dl
  4151c4:	add    dh,0x10
  4151c7:	add    DWORD PTR [esi+esi*2+0x20c180],esp
  4151ce:	inc    eax
  4151cf:	adc    BYTE PTR ds:0x20000808,ch
  4151d5:	inc    esp
  4151d6:	rol    BYTE PTR [ecx+eax*1],0x16
  4151da:	add    DWORD PTR [eax],ecx
  4151dc:	or     DWORD PTR [eax],ecx
  4151de:	push   cs
  4151df:	push   es
  4151e0:	and    ch,0x88
  4151e3:	add    BYTE PTR [eax*1+0x2f11393],al
  4151ea:	add    BYTE PTR [eax],al
  4151ec:	add    DWORD PTR [eax],eax
  4151ee:	add    DWORD PTR [edx],edx
  4151f0:	inc    ebp
  4151f1:	add    DWORD PTR [edx],esp
  4151f3:	mov    BYTE PTR [edx-0x5e],ah
  4151f6:	add    BYTE PTR [ecx+eax*2],dl
  4151f9:	and    BYTE PTR [eax],al
  4151fb:	add    al,0x30
  4151fd:	add    BYTE PTR [ecx-0x7bfffff0],ah
  415203:	push   ebp
  415204:	adc    eax,0x44818228
  415209:	and    BYTE PTR [eax],al
  41520b:	and    DWORD PTR [eax],edx
  41520d:	add    al,cl
  41520f:	add    BYTE PTR [esp+edx*1+0x3121481c],al
  415216:	push   es
  415217:	adc    BYTE PTR [eax],al
  415219:	add    eax,ecx
  41521b:	dec    esi
  41521c:	adc    al,0x45
  41521e:	or     BYTE PTR [eax],al
  415220:	daa    
  415221:	add    BYTE PTR gs:[edx*1+0x20030411],ch
  415229:	or     al,0x42
  41522b:	add    dh,bl
  41522d:	add    DWORD PTR [ecx+ecx*1-0x7df6fbc0],edx
  415234:	adc    BYTE PTR [eax],ah
  415236:	inc    esp
  415237:	inc    esp
  415238:	add    BYTE PTR [edx+0x0],al
  41523b:	xor    cl,BYTE PTR [eax]
  41523d:	add    BYTE PTR [eax],al
  41523f:	and    DWORD PTR [edx],eax
  415241:	add    BYTE PTR [edx],al
  415243:	add    ah,BYTE PTR [ecx]
  415245:	adc    BYTE PTR [ecx+0x41],cl
  415248:	add    DWORD PTR [eax],eax
  41524a:	and    BYTE PTR [eax+0x44],ah
  41524d:	push   eax
  41524e:	add    DWORD PTR [eax],esp
  415250:	dec    edx
  415251:	adc    BYTE PTR [eax],0x54
  415254:	mov    BYTE PTR [eax+0x2b],al
  415257:	add    BYTE PTR [eax+0x80400],cl
  41525d:	add    BYTE PTR [esp+edx*1],dl
  415260:	lock add BYTE PTR [eax+eax*1-0x4cfbfdff],dl
  415268:	add    ebp,eax
  41526a:	or     BYTE PTR [eax],ah
  41526c:	add    BYTE PTR [edx+0x600000],al
  415272:	add    BYTE PTR [eax],al
  415274:	sbb    BYTE PTR [ebx+0x0],al
  415277:	adc    BYTE PTR [ecx],dl
  415279:	add    DWORD PTR [ecx+0x14100a00],ecx
  41527f:	add    BYTE PTR [eax-0x7fd7fe00],al
  415285:	adc    BYTE PTR [eax],cl
  415287:	add    al,BYTE PTR [edx+0x6580007]
  41528d:	popa   
  41528e:	inc    eax
  41528f:	add    BYTE PTR [edx],al
  415291:	inc    ecx
  415292:	add    al,dl
  415294:	add    ah,BYTE PTR [eax]
  415296:	dec    eax
  415297:	add    BYTE PTR [eax+eax*1+0x100bb1c],dl
  41529e:	nop
  41529f:	adc    BYTE PTR [eax],al
  4152a1:	add    al,0x9
  4152a3:	push   es
  4152a4:	add    BYTE PTR [eax],0x8
  4152a7:	add    BYTE PTR [edx+0x5118402],al
  4152ad:	add    ch,0x0
  4152b0:	add    BYTE PTR [ecx],dl
  4152b2:	and    BYTE PTR [eax+ecx*4+0x41],dl
  4152b6:	add    BYTE PTR [ebp+0x6a],ah
  4152b9:	adc    dl,BYTE PTR [edx]
  4152bb:	add    al,BYTE PTR [ecx]
  4152bd:	inc    eax
  4152be:	add    BYTE PTR [ecx],al
  4152c0:	or     al,BYTE PTR [edx+0x656a8220]
  4152c6:	add    BYTE PTR [eax],0x0
  4152c9:	adc    cl,BYTE PTR [ecx+0x1604c1e1]
  4152cf:	inc    ecx
  4152d0:	dec    eax
  4152d1:	mov    WORD PTR [eax],es
  4152d3:	adc    BYTE PTR [esi+0x40],dl
  4152d6:	add    al,0x88
  4152d8:	inc    edx
  4152d9:	add    DWORD PTR [eax],eax
  4152db:	and    BYTE PTR [eax],al
  4152dd:	and    BYTE PTR [eax],bl
  4152df:	add    al,BYTE PTR [eax]
  4152e1:	or     BYTE PTR [edx+ecx*2+0x0],dl
  4152e5:	add    BYTE PTR [ecx+0x20],cl
  4152e8:	mov    ds:0x1280010,al
  4152ed:	or     BYTE PTR [eax],al
  4152ef:	jo     0x415335
  4152f1:	popa   
  4152f2:	add    BYTE PTR [ecx+eax*8],dh
  4152f5:	add    BYTE PTR [eax],ah
  4152f7:	add    BYTE PTR [eax],al
  4152f9:	inc    ecx
  4152fa:	mov    al,0x0
  4152fc:	add    BYTE PTR [eax+eax*1+0x1080040],cl
  415303:	inc    ecx
  415304:	nop
  415305:	adc    DWORD PTR [eax],esp
  415307:	add    BYTE PTR ds:0x406210c1,al
  41530d:	adc    DWORD PTR [eax],eax
  41530f:	add    al,BYTE PTR [ecx]
  415311:	add    ah,BYTE PTR [edx]
  415313:	or     DWORD PTR [eax],eax
  415315:	add    BYTE PTR [eax+eax*2+0x400000],al
  41531c:	add    al,al
  41531e:	sbb    al,0x80
  415320:	add    BYTE PTR [eax],al
  415322:	add    DWORD PTR [eax],esi
  415324:	add    al,0x41
  415326:	add    BYTE PTR [edx+0x1a0480],al
  41532c:	daa    
  41532d:	add    BYTE PTR [esi],al
  41532f:	inc    ecx
  415330:	adc    dl,BYTE PTR [eax+0x0]
  415333:	inc    eax
  415334:	and    DWORD PTR [eax],ecx
  415336:	push   ecx
  415337:	add    DWORD PTR [ebx+0x1bb8021],ecx
  41533d:	add    ecx,DWORD PTR [ecx]
  41533f:	add    DWORD PTR [eax],esp
  415341:	inc    edx
  415342:	sbb    eax,0x82600000
  415347:	pop    eax
  415348:	add    BYTE PTR [edx+eax*1],cl
  41534b:	add    DWORD PTR [ebx+0x40],edi
  41534e:	inc    edx
  41534f:	add    BYTE PTR [eax],al
  415351:	inc    ebp
  415352:	inc    eax
  415353:	adc    DWORD PTR [esi],esp
  415355:	add    BYTE PTR [eax],al
  415357:	or     BYTE PTR [eax],al
  415359:	dec    edi
  41535a:	inc    ecx
  41535b:	add    BYTE PTR [esi],cl
  41535d:	dec    esp
  41535e:	inc    eax
  41535f:	inc    ecx
  415360:	add    BYTE PTR [edx],al
  415362:	adc    al,0x1a
  415364:	xor    dl,al
  415366:	mov    BYTE PTR [edx+0x0],al
  415369:	adc    BYTE PTR [eax+eax*1-0x7f9df9f0],al
  415370:	test   BYTE PTR ss:[edx],ah
  415373:	adc    DWORD PTR [eax],eax
  415375:	fs push cs
  415377:	or     DWORD PTR [ecx+eax*2-0x80],ecx
  41537b:	and    BYTE PTR [ecx],al
  41537d:	add    eax,0x40286612
  415382:	add    DWORD PTR [eax+eax*1],eax
  415385:	inc    esi
  415386:	adc    DWORD PTR [eax+0x4a469489],eax
  41538c:	sub    al,BYTE PTR [ecx+0x60]
  41538f:	dec    eax
  415390:	add    BYTE PTR [eax+eax*4+0x400a591],al
  415397:	push   edx
  415398:	adc    BYTE PTR [edx],0x4a
  41539b:	sbb    BYTE PTR [eax],al
  41539d:	sbb    BYTE PTR [edx+0x4],al
  4153a0:	add    BYTE PTR [eax],al
  4153a2:	dec    esp
  4153a3:	dec    eax
  4153a4:	or     BYTE PTR [ebx],al
  4153a6:	sub    BYTE PTR [edx+eax*1],al
  4153a9:	add    al,BYTE PTR [eax]
  4153ab:	xchg   ebp,eax
  4153ac:	add    BYTE PTR [ebp-0x40],cl
  4153af:	loopne 0x415333
  4153b1:	add    DWORD PTR [eax],0x46000
  4153b7:	or     DWORD PTR [ecx+0x45400c08],eax
  4153bd:	add    BYTE PTR [eax],0x0
  4153c0:	or     al,BYTE PTR [esi]
  4153c2:	add    BYTE PTR [eax-0x7ffffcf7],cl
  4153c8:	dec    ecx
  4153c9:	add    al,0x41
  4153cb:	add    BYTE PTR [edi+0x73300000],al
  4153d1:	inc    ecx
  4153d2:	push   ebx
  4153d3:	test   BYTE PTR [ecx+ecx*8+0x42],cl
  4153d7:	and    cl,cl
  4153d9:	inc    ebp
  4153da:	sbb    al,0x81
  4153dc:	adc    DWORD PTR [eax],eax
  4153de:	inc    eax
  4153df:	adc    BYTE PTR [eax+0x8],dl
  4153e2:	add    BYTE PTR [ebx+0x10],al
  4153e5:	or     BYTE PTR [ebp+0x48],cl
  4153eb:	call   0x890a:0xbc41880
  4153f2:	or     BYTE PTR [edx],al
  4153f4:	add    BYTE PTR [eax],al
  4153f6:	adc    BYTE PTR [eax],dh
  4153f8:	inc    eax
  4153f9:	or     BYTE PTR [ecx+0x11188481],0x0
  415400:	inc    eax
  415401:	add    BYTE PTR [ebx-0x7e],ah
  415404:	add    al,0xb
  415406:	add    BYTE PTR [eax],dl
  415408:	inc    eax
  415409:	add    BYTE PTR [ecx],ah
  41540b:	add    al,0x81
  41540d:	add    BYTE PTR [eax],al
  41540f:	add    BYTE PTR [eax],cl
  415411:	add    BYTE PTR [edx],ah
  415413:	or     BYTE PTR [eax],al
  415415:	add    BYTE PTR [esi+0x1c0300b2],al
  41541b:	dec    ecx
  41541c:	or     DWORD PTR [edx+eiz*4],esp
  41541f:	or     BYTE PTR [eax],0xa
  415422:	add    BYTE PTR [ecx+0x4],ah
  415425:	pusha  
  415426:	inc    edx
  415427:	add    BYTE PTR [eax],0x44
  41542a:	pop    eax
  41542b:	and    BYTE PTR [edx],al
  41542d:	add    BYTE PTR [edx],al
  41542f:	push   eax
  415430:	or     BYTE PTR [esi],al
  415432:	and    BYTE PTR [ebx+0x4000401],cl
  415438:	add    BYTE PTR [eax],al
  41543a:	push   es
  41543b:	inc    eax
  41543c:	sub    eax,0xa540010d
  415441:	mov    ds:0x420c2050,eax
  415446:	or     al,0x42
  415448:	add    BYTE PTR [eax],al
  41544a:	rol    BYTE PTR [eax+0x0],1
  41544d:	add    eax,DWORD PTR [ecx]
  41544f:	add    BYTE PTR [eax],al
  415451:	adc    al,0x49
  415453:	add    DWORD PTR [edx],eax
  415455:	and    BYTE PTR [eax+eiz*1],dl
  415458:	add    al,0x0
  41545a:	xor    DWORD PTR [esi+0x0],0x49080c10
  415461:	mov    al,BYTE PTR [eax]
  415463:	sub    BYTE PTR [ebx+0x3a0406cd],bh
  415469:	add    BYTE PTR [eax],al
  41546b:	test   BYTE PTR [eax],al
  41546d:	add    BYTE PTR [ebx-0x7efbdf80],al
  415473:	and    ah,bl
  415475:	add    BYTE PTR [eax],al
  415477:	add    BYTE PTR [eax],al
  415479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41547a:	or     BYTE PTR [edx],ah
  41547c:	adc    BYTE PTR [edi+0x362120],al
  415482:	xor    eax,0x95000b5a
  415487:	test   eax,0xc002420
  41548c:	and    BYTE PTR [edx-0x80],0x0
  415490:	add    BYTE PTR [eax+eax*1],al
  415493:	arpl   WORD PTR [edx],ax
  415495:	aam    0x81
  415497:	inc    esp
  415498:	sbb    BYTE PTR [eax],al
  41549a:	sbb    BYTE PTR [eax],al
  41549c:	inc    edx
  41549d:	add    BYTE PTR [eax],al
  41549f:	add    DWORD PTR [eax+0x7000c],eax
  4154a5:	pop    esp
  4154a6:	mov    al,ds:0x82004dc0
  4154ab:	adc    BYTE PTR [ecx],al
  4154ad:	adc    esp,edx
  4154af:	and    BYTE PTR [esi+0x1c12930],ch
  4154b5:	add    BYTE PTR [edx],ah
  4154b7:	inc    edx
  4154b8:	inc    esp
  4154b9:	push   ss
  4154ba:	add    DWORD PTR [eax],eax
  4154bc:	sub    BYTE PTR [eax+0x20010165],al
  4154c2:	adc    BYTE PTR [ecx+0x620a],cl
  4154c8:	and    al,0x41
  4154ca:	xor    BYTE PTR [eax],al
  4154cc:	add    BYTE PTR [eax],al
  4154ce:	add    ecx,eax
  4154d0:	jo     0x415513
  4154d2:	dec    edx
  4154d3:	add    BYTE PTR [edx+0x700014],al
  4154d9:	mov    al,ds:0x81821500
  4154de:	inc    eax
  4154df:	add    BYTE PTR [eax],cl
  4154e1:	cmp    BYTE PTR [eax-0x80],al
  4154e4:	loop   0x4154e7
  4154e6:	xor    al,0x40
  4154e8:	or     eax,0xa0000400
  4154ed:	mov    BYTE PTR [edx+eax*2],ah
  4154f0:	add    BYTE PTR ds:0x4000200,ch
  4154f6:	test   BYTE PTR [edx],al
  4154f8:	add    edx,DWORD PTR [eax]
  4154fa:	mov    al,ds:0xe9000844
  4154ff:	adc    BYTE PTR [ebx+0x2],0xf
  415503:	or     al,BYTE PTR [ecx]
  415505:	rol    BYTE PTR [ecx],0x50
  415508:	nop
  415509:	add    BYTE PTR [edx],ah
  41550b:	add    DWORD PTR [eax],0x2b0200
  415511:	push   0xc1092020
  415516:	mov    al,ds:0x80c042c0
  41551b:	add    BYTE PTR [edx],cl
  41551d:	test   BYTE PTR [edx-0x37ff74f7],dl
  415523:	or     BYTE PTR [ecx],dl
  415525:	add    al,BYTE PTR [ecx]
  415527:	push   0x40820100
  41552c:	popa   
  41552d:	add    ah,BYTE PTR [eax+0x22640aa]
  415533:	test   eax,0x20009441
  415538:	add    al,BYTE PTR [edx]
  41553a:	inc    eax
  41553b:	arpl   WORD PTR [esi],ax
  41553d:	push   edx
  41553e:	test   al,0x4
  415540:	add    DWORD PTR [edx+eax*1+0x2b4a0052],edx
  415547:	add    BYTE PTR [eax],al
  415549:	or     DWORD PTR [edi],eax
  41554b:	add    DWORD PTR [ecx+0x4e],eax
  41554e:	mov    ds:0xa040ead4,al
  415553:	add    BYTE PTR [ecx-0x80],al
  415556:	push   ds
  415557:	add    BYTE PTR [eax+0x44010001],0xc0
  41555e:	add    BYTE PTR [eax],al
  415560:	or     BYTE PTR [eax+eax*2+0x45140040],dl
  415567:	xchg   ecx,eax
  415568:	adc    BYTE PTR [edx],al
  41556a:	add    BYTE PTR [eax],cl
  41556c:	and    bl,BYTE PTR [eax+0x8405900]
  415572:	adc    al,0x2
  415574:	inc    esp
  415575:	sub    BYTE PTR [eax],al
  415577:	test   BYTE PTR [edx+0x6],al
  41557a:	popa   
  41557b:	add    al,BYTE PTR [ecx]
  41557d:	sub    dl,BYTE PTR [ebp+0x2]
  415580:	rcr    BYTE PTR [eax],cl
  415582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415583:	xchg   ecx,eax
  415584:	add    BYTE PTR [eax],al
  415586:	adc    BYTE PTR [ebp+0x404140],cl
  41558c:	and    al,0x0
  41558e:	inc    ebx
  41558f:	adc    BYTE PTR [eax],al
  415591:	adc    BYTE PTR [ecx-0x3b],0xa0
  415595:	mov    eax,ds:0x3158002
  41559a:	sub    BYTE PTR [ecx],al
  41559c:	add    ah,BYTE PTR [eax]
  41559e:	dec    esp
  41559f:	or     DWORD PTR [ecx],eax
  4155a1:	adc    DWORD PTR [eax+edx*2],edx
  4155a4:	add    BYTE PTR [eax],dh
  4155a6:	adc    DWORD PTR [ecx],0x40
  4155a9:	add    DWORD PTR [eax],eax
  4155ab:	xor    BYTE PTR [esi+0x41990019],al
  4155b1:	add    BYTE PTR [ecx-0x78],al
  4155b4:	push   ecx
  4155b5:	add    BYTE PTR [edx],dl
  4155b7:	add    DWORD PTR [edx],eax
  4155b9:	or     al,BYTE PTR [eax-0x62]
  4155bc:	add    al,0x6
  4155be:	add    DWORD PTR [eax],eax
  4155c0:	add    BYTE PTR [eax],al
  4155c2:	pusha  
  4155c3:	add    al,bl
  4155c5:	popa   
  4155c6:	sub    BYTE PTR [eax],al
  4155c8:	or     BYTE PTR [eax],0x10
  4155cb:	or     BYTE PTR [eax],al
  4155cd:	loopne 0x41558f
  4155cf:	add    dh,al
  4155d1:	add    BYTE PTR [eax+eax*1],dh
  4155d4:	add    BYTE PTR [eax],al
  4155d6:	or     BYTE PTR [esi],al
  4155d8:	add    DWORD PTR [ebx+0x0],ecx
  4155db:	sbb    BYTE PTR [eax],al
  4155dd:	imul   ebp,DWORD PTR [ecx],0x1808c08
  4155e3:	or     BYTE PTR [eax],al
  4155e5:	or     BYTE PTR [eax+edx*1],dl
  4155e8:	add    BYTE PTR [eax],al
  4155ea:	sbb    al,0x10
  4155ec:	or     BYTE PTR [eax+0x31004a2a],al
  4155f2:	dec    eax
  4155f3:	mov    cl,dl
  4155f5:	inc    eax
  4155f6:	and    cl,BYTE PTR [eax-0x3ffdfcff]
  4155fc:	add    BYTE PTR [ecx-0x57],0x2f
  415600:	inc    ecx
  415601:	push   eax
  415602:	inc    edi
  415603:	add    al,0x65
  415605:	add    BYTE PTR [eax],ah
  415607:	push   esp
  415608:	adc    dl,BYTE PTR [edx+0x58]
  41560b:	add    BYTE PTR [eax+ecx*2+0x3],dl
  41560f:	push   edx
  415610:	sub    al,0x8
  415612:	pop    ecx
  415613:	xor    al,0x48
  415615:	or     BYTE PTR [esp+edx*1+0x40044],al
  41561c:	add    BYTE PTR [eax+eax*2+0x8010800],dl
  415623:	sub    BYTE PTR [eax],al
  415625:	add    BYTE PTR [eax],al
  415627:	inc    ecx
  415628:	inc    eax
  415629:	add    BYTE PTR [eax],al
  41562b:	sub    al,0x4
  41562d:	add    DWORD PTR [eax],ecx
  41562f:	push   eax
  415630:	adc    BYTE PTR [ecx+eax*4-0x3ff3b23c],bl
  415637:	add    BYTE PTR [eax+0x0],ch
  41563a:	add    BYTE PTR [ecx],dl
  41563c:	inc    eax
  41563d:	add    al,al
  41563f:	inc    eax
  415640:	inc    eax
  415641:	xchg   BYTE PTR [eax],al
  415643:	inc    ecx
  415644:	adc    BYTE PTR [eax],ah
  415646:	add    al,0x40
  415648:	add    BYTE PTR [eax+0xa],al
  41564b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41564c:	and    al,BYTE PTR [esp+edx*4-0x5efff3c0]
  415653:	add    BYTE PTR [eax+0x0],0x37
  415657:	add    BYTE PTR [eax],cl
  415659:	add    BYTE PTR [edx+0x1c40111],ah
  41565f:	inc    esp
  415660:	add    BYTE PTR [eax],al
  415662:	and    al,0xb2
  415664:	adc    BYTE PTR [eax],0x4
  415667:	or     al,BYTE PTR [ecx+0x2]
  41566a:	xor    BYTE PTR [esi],0x10
  41566d:	rol    DWORD PTR [ebx],0x90
  415670:	rol    BYTE PTR [edx],0x18
  415673:	add    al,0x44
  415675:	add    DWORD PTR [eax],ecx
  415677:	dec    eax
  415678:	and    BYTE PTR [eax],al
  41567a:	xor    ah,BYTE PTR [eax+0x6866084e]
  415680:	and    BYTE PTR [ecx],dl
  415682:	or     BYTE PTR [eax],al
  415684:	dec    edx
  415685:	add    DWORD PTR [eax],eax
  415687:	xchg   ecx,eax
  415688:	mov    eax,ds:0x400084c1
  41568d:	adc    DWORD PTR [edx+eax*4],esp
  415690:	inc    eax
  415691:	add    BYTE PTR [eax],dl
  415693:	rol    DWORD PTR [eax],1
  415695:	or     BYTE PTR [edx],cl
  415697:	add    BYTE PTR [eax+0x101248],al
  41569d:	retf   0x1226
  4156a0:	and    al,0x30
  4156a2:	loop   0x4156ca
  4156a4:	add    BYTE PTR [eax],al
  4156a6:	add    BYTE PTR [eax],al
  4156a8:	and    al,0x40
  4156aa:	add    BYTE PTR [eax+edx*1+0x0],al
  4156ae:	push   ecx
  4156af:	add    BYTE PTR [eax],ah
  4156b1:	call   0x41a1c81b
  4156b6:	add    bl,dl
  4156b8:	inc    ebx
  4156b9:	and    DWORD PTR [ebp+0x0],eax
  4156bc:	or     BYTE PTR [edx],0x9
  4156bf:	add    BYTE PTR [eax],dl
  4156c1:	adc    dl,BYTE PTR [eax+0x8]
  4156c4:	and    BYTE PTR [edx-0x75],cl
  4156c7:	add    ecx,DWORD PTR [eax+0x514108]
  4156cd:	or     al,BYTE PTR [eax+0x8404608]
  4156d3:	add    al,BYTE PTR [ebx+0x444000]
  4156d9:	xor    ah,al
  4156db:	rol    BYTE PTR [eax],0x5d
  4156de:	add    al,0x10
  4156e0:	inc    ebp
  4156e1:	or     BYTE PTR [eax],al
  4156e3:	pusha  
  4156e4:	add    BYTE PTR [esi],dl
  4156e6:	and    al,0x20
  4156e8:	add    BYTE PTR [ecx],cl
  4156ea:	add    al,0x49
  4156ec:	add    al,BYTE PTR [eax+ebp*2]
  4156ef:	mov    BYTE PTR [ebp+0x81212],dl
  4156f5:	test   BYTE PTR [ecx+edx*2],dh
  4156f8:	inc    esi
  4156f9:	add    DWORD PTR [eax],esp
  4156fb:	and    eax,0x804d100
  415700:	push   es
  415701:	add    DWORD PTR [eax],edx
  415703:	add    BYTE PTR [eax+0x11],al
  415706:	add    BYTE PTR [eax],0x8
  415709:	add    al,0x80
  41570b:	add    BYTE PTR [eax+ecx*1],al
  41570e:	nop
  41570f:	push   ebx
  415710:	pusha  
  415711:	add    BYTE PTR [ecx],al
  415713:	or     BYTE PTR [eax],al
  415715:	add    al,0x49
  415717:	add    cl,BYTE PTR [eax]
  415719:	inc    ecx
  41571a:	add    DWORD PTR [edx+0x1488520],0x1045c0e1
  415724:	mov    al,ds:0x36048140
  415729:	add    DWORD PTR [ebp-0x60],esp
  41572c:	add    BYTE PTR [eax],al
  41572e:	add    al,0x18
  415730:	add    BYTE PTR [eax],al
  415732:	inc    eax
  415733:	add    BYTE PTR [eax],0x30
  415736:	add    BYTE PTR [edi+0x71c20],al
  41573c:	add    dl,BYTE PTR [ebx]
  41573e:	mov    BYTE PTR [eax],al
  415740:	or     BYTE PTR [eax],ah
  415742:	push   es
  415743:	or     BYTE PTR [eax],al
  415745:	pop    eax
  415746:	add    BYTE PTR [eax],al
  415748:	add    BYTE PTR [edx],ah
  41574a:	dec    ecx
  41574b:	inc    edx
  41574c:	add    BYTE PTR [eax+ecx*1],0x50
  415750:	inc    esi
  415751:	or     BYTE PTR [ecx+0x320001],0xa8
  415758:	or     DWORD PTR [eax],0x0
  41575b:	xor    al,BYTE PTR [ecx]
  41575d:	sbb    BYTE PTR [eax],dl
  41575f:	adc    cl,BYTE PTR ds:0x204000
  415765:	inc    eax
  415766:	sbb    DWORD PTR [eax],eax
  415768:	or     eax,0x492808
  41576d:	add    BYTE PTR [ecx+ecx*1],ch
  415770:	add    BYTE PTR [edx+0x53024094],dl
  415776:	add    ecx,DWORD PTR [eax+0x2282c2]
  41577c:	add    al,0x0
  41577e:	and    BYTE PTR [ecx],al
  415780:	sub    al,0x84
  415782:	add    BYTE PTR [eax],al
  415784:	add    BYTE PTR [ecx],dl
  415786:	adc    dl,BYTE PTR ds:0x2a0300
  41578c:	jmp    0x415718
  41578e:	add    BYTE PTR [eax],al
  415790:	icebp  
  415791:	loopne 0x415718
  415793:	add    BYTE PTR [eax],al
  415795:	add    BYTE PTR [edx],al
  415797:	add    al,0xe4
  415799:	or     al,0x80
  41579b:	dec    eax
  41579c:	adc    BYTE PTR [eax],al
  41579e:	xor    al,0x0
  4157a0:	add    BYTE PTR [ecx+0x44],cl
  4157a3:	xor    BYTE PTR [esp+eax*1],0x8
  4157a7:	inc    ecx
  4157a8:	add    BYTE PTR [eax],cl
  4157aa:	inc    eax
  4157ab:	add    BYTE PTR [ecx],al
  4157ad:	and    al,0x0
  4157af:	dec    esp
  4157b0:	add    BYTE PTR [eax+eax*2],al
  4157b3:	add    BYTE PTR [ecx+0x4],al
  4157b6:	or     BYTE PTR [eax-0x7a],al
  4157b9:	add    al,BYTE PTR [ecx+ecx*8+0x0]
  4157bd:	add    BYTE PTR [ebx+0x3831a000],al
  4157c3:	add    DWORD PTR [eax],0x103002a4
  4157c9:	adc    BYTE PTR [eax],al
  4157cb:	dec    eax
  4157cc:	sub    BYTE PTR [ecx+0x69464800],al
  4157d2:	inc    esi
  4157d3:	add    BYTE PTR [edx],al
  4157d5:	add    BYTE PTR [eax+0x20094030],ch
  4157db:	adc    BYTE PTR [eax+0x0],al
  4157de:	adc    al,0x21
  4157e0:	push   es
  4157e1:	add    DWORD PTR ds:0x4d900104,edx
  4157e7:	mov    al,BYTE PTR [edx]
  4157e9:	inc    ecx
  4157ea:	add    BYTE PTR [eax],al
  4157ec:	inc    edx
  4157ed:	add    DWORD PTR [eax],eax
  4157ef:	sbb    eax,0x9828040
  4157f4:	inc    eax
  4157f5:	add    DWORD PTR [ecx],edx
  4157f7:	or     eax,DWORD PTR [eax]
  4157f9:	and    BYTE PTR [eax],al
  4157fb:	add    BYTE PTR [eax],al
  4157fd:	cmp    ch,BYTE PTR [eax]
  4157ff:	add    dl,al
  415801:	add    BYTE PTR [edx+0x42],al
  415804:	or     BYTE PTR ds:0x80481311,ah
  41580a:	jno    0x41581c
  41580c:	add    BYTE PTR [edx],dl
  41580e:	inc    eax
  41580f:	test   DWORD PTR [ecx+eiz*1],eax
  415812:	bound  eax,QWORD PTR [edi+0x2463a901]
  415818:	and    BYTE PTR [eax+0x0],cl
  41581b:	and    BYTE PTR [eax],ah
  41581d:	add    eax,DWORD PTR [ebx+0x1014420]
  415823:	add    DWORD PTR [eax],0x20000484
  415829:	add    BYTE PTR [eax],dl
  41582b:	mov    DWORD PTR [eax-0x20],eax
  41582e:	mov    ebx,DWORD PTR [ecx+0x4000041]
  415834:	add    BYTE PTR [eax],al
  415836:	adc    DWORD PTR [ecx],0x174c
  41583c:	and    BYTE PTR [eax+eax*1],al
  41583f:	add    al,0x2
  415841:	bound  eax,QWORD PTR [ebp+0x10]
  415844:	or     al,0x40
  415846:	add    ecx,DWORD PTR [eax]
  415848:	and    al,0x41
  41584a:	add    BYTE PTR [ecx],al
  41584c:	inc    ebx
  41584d:	inc    eax
  41584e:	rol    BYTE PTR [eax+0x64],0x10
  415852:	fst    DWORD PTR [edi]
  415854:	add    DWORD PTR [eax],ecx
  415856:	nop
  415857:	inc    ebp
  415858:	dec    eax
  415859:	mov    BYTE PTR [ecx+0x4],al
  41585c:	add    DWORD PTR [ecx],ecx
  41585e:	add    BYTE PTR [eax+0x42500040],cl
  415864:	adc    BYTE PTR [eax],al
  415866:	or     BYTE PTR [eax],al
  415868:	xchg   edx,eax
  415869:	add    BYTE PTR [eax],al
  41586b:	add    BYTE PTR [eax+0x4410e0],ch
  415871:	add    BYTE PTR [eax+0x50046121],ah
  415877:	mov    al,ds:0x800200
  41587c:	add    BYTE PTR [eax],dl
  41587e:	add    BYTE PTR [eax+0x80800],ch
  415884:	add    DWORD PTR [ecx],ecx
  415886:	inc    ecx
  415887:	xor    BYTE PTR [ebx+0x0],dl
  41588a:	inc    ecx
  41588b:	or     BYTE PTR [eax],0x40
  41588e:	sahf   
  41588f:	or     al,ch
  415891:	or     BYTE PTR ds:0x1466026,al
  415897:	add    BYTE PTR [eax+0x50002],bl
  41589d:	inc    esp
  41589e:	or     BYTE PTR [eax],al
  4158a0:	inc    ecx
  4158a1:	add    DWORD PTR [eax],eax
  4158a3:	add    BYTE PTR [ecx],cl
  4158a5:	add    BYTE PTR [edx+0xa],al
  4158a8:	add    BYTE PTR [eax],cl
  4158aa:	add    DWORD PTR [esi],esp
  4158ac:	or     BYTE PTR [eax],al
  4158ae:	add    BYTE PTR [eax],al
  4158b0:	add    BYTE PTR [eax+eax*2],ah
  4158b3:	and    BYTE PTR [ecx],bl
  4158b5:	add    al,0xa2
  4158b7:	or     DWORD PTR [eax],eax
  4158b9:	mov    DWORD PTR [ecx],edi
  4158bb:	or     BYTE PTR [eax+edx*1],al
  4158be:	add    DWORD PTR [ecx+0x1c584040],eax
  4158c4:	adc    DWORD PTR [ecx-0x3fdfe772],esp
  4158ca:	inc    edi
  4158cb:	adc    DWORD PTR [edx+eax*2],ebx
  4158ce:	arpl   WORD PTR [edx+0x42],bx
  4158d1:	add    al,0x1
  4158d3:	add    DWORD PTR [edx],esp
  4158d5:	dec    esp
  4158d6:	and    al,0x43
  4158d8:	add    BYTE PTR [eax],al
  4158da:	and    BYTE PTR [ecx+0x4101020],0x2
  4158e1:	add    BYTE PTR [eax-0x5e],bl
  4158e4:	and    BYTE PTR [eax],al
  4158e6:	push   ecx
  4158e7:	adc    DWORD PTR [edx],eax
  4158e9:	add    BYTE PTR [edx+eax*2],bl
  4158ec:	inc    ecx
  4158ed:	add    DWORD PTR [ecx-0x7f],eax
  4158f0:	inc    esp
  4158f1:	add    BYTE PTR [edx],al
  4158f3:	add    BYTE PTR [eax],0x0
  4158f6:	mov    cl,0x4
  4158f8:	adc    BYTE PTR [eax+0x0],ch
  4158fb:	add    dl,0x84
  4158fe:	adc    DWORD PTR [eax],eax
  415900:	add    al,0x0
  415902:	add    BYTE PTR [eax],ah
  415904:	add    BYTE PTR [eax],al
  415906:	add    BYTE PTR [eax+0x1511],dl
  41590c:	add    BYTE PTR [eax],al
  41590e:	loopne 0x415958
  415910:	add    dl,al
  415912:	pusha  
  415913:	push   esp
  415914:	xor    BYTE PTR [ebx],dl
  415916:	add    BYTE PTR [ebx],bl
  415918:	inc    ecx
  415919:	adc    ah,BYTE PTR [eax+0x20]
  41591c:	cmp    al,BYTE PTR [ebx]
  41591e:	add    BYTE PTR [eax+0x2a08410],al
  415924:	add    BYTE PTR [eax],al
  415926:	inc    eax
  415927:	inc    eax
  415928:	mov    ebp,DWORD PTR [edx]
  41592a:	dec    esi
  41592b:	inc    esi
  41592c:	or     al,0x0
  41592e:	add    BYTE PTR [ecx],al
  415930:	or     al,0x6
  415932:	push   edi
  415933:	inc    eax
  415934:	add    BYTE PTR [eax],al
  415936:	fimul  DWORD PTR [eax]
  415938:	inc    ecx
  415939:	add    BYTE PTR [edx-0x2f],bl
  41593c:	inc    eax
  41593d:	sbb    cl,ah
  41593f:	retf   0x80
  415942:	ror    BYTE PTR [eax+0x10005400],0x44
  415949:	and    al,0x0
  41594b:	add    cl,dl
  41594d:	les    esp,FWORD PTR [eax]
  41594f:	mov    BYTE PTR [eax],al
  415951:	rol    BYTE PTR [eax],0x0
  415954:	inc    esp
  415955:	add    BYTE PTR [ecx+0x3],0x0
  415959:	inc    eax
  41595a:	or     eax,ecx
  41595c:	or     BYTE PTR [eax],al
  41595e:	adc    eax,DWORD PTR [eax]
  415960:	add    BYTE PTR [eax+0xc02018],al
  415966:	popa   
  415967:	mov    eax,DWORD PTR [edx]
  415969:	add    BYTE PTR [edx],ah
  41596b:	add    BYTE PTR ds:0x43170060,cl
  415971:	or     BYTE PTR [ecx+eiz*1],dl
  415974:	or     BYTE PTR [ebp-0x3f],cl
  415977:	sub    al,0xa
  415979:	inc    eax
  41597a:	and    al,0x80
  41597c:	and    ah,BYTE PTR [eax]
  41597e:	add    BYTE PTR [edx],dh
  415980:	add    al,0xc1
  415982:	push   es
  415983:	inc    eax
  415984:	pusha  
  415985:	inc    esi
  415986:	and    BYTE PTR [edx],bh
  415988:	and    BYTE PTR [eax],al
  41598a:	and    al,0xe8
  41598c:	inc    ebp
  41598d:	inc    esi
  41598e:	or     eax,DWORD PTR [ebx]
  415990:	add    BYTE PTR [ecx+eax*1+0x42],cl
  415994:	add    BYTE PTR [eax-0x7f],al
  415997:	adc    ah,dl
  415999:	and    BYTE PTR [ecx+0x10201081],al
  41599f:	add    BYTE PTR [ecx+eiz*1],dl
  4159a2:	add    al,cl
  4159a4:	adc    BYTE PTR [eax-0x677fffd6],al
  4159aa:	add    BYTE PTR [ebx],dl
  4159ac:	add    BYTE PTR [ecx],al
  4159ae:	or     BYTE PTR [edx+0x5044001],dl
  4159b4:	inc    ebx
  4159b5:	sub    BYTE PTR [eax],al
  4159b7:	aad    0xb8
  4159b9:	repz and al,BYTE PTR ds:0x1180124
  4159c0:	adc    DWORD PTR [eax],eax
  4159c2:	add    cl,BYTE PTR [eax]
  4159c4:	add    al,BYTE PTR [eax+eax*4]
  4159c7:	add    BYTE PTR [eax],al
  4159c9:	adc    ah,BYTE PTR [eax]
  4159cb:	or     BYTE PTR [edx],dl
  4159cd:	add    al,0x0
  4159cf:	or     DWORD PTR [ebp+eax*1-0x25bfcbe0],0x44
  4159d7:	adc    eax,DWORD PTR [eax]
  4159d9:	adc    edx,DWORD PTR [edx+0xf12000]
  4159df:	sub    al,BYTE PTR [eax]
  4159e1:	push   edx
  4159e2:	lea    eax,[edx]
  4159e4:	popa   
  4159e5:	dec    ebx
  4159e6:	add    BYTE PTR [eax],cl
  4159e8:	int    0x61
  4159ea:	add    al,0x64
  4159ec:	add    BYTE PTR [eax],al
  4159ee:	adc    eax,esp
  4159f0:	add    BYTE PTR [eax],0x41
  4159f3:	xor    eax,0x8c410028
  4159f8:	add    BYTE PTR [eax],al
  4159fa:	xlat   BYTE PTR ds:[ebx]
  4159fb:	inc    ecx
  4159fc:	add    BYTE PTR [ecx],dl
  4159fe:	inc    edx
  4159ff:	add    dl,BYTE PTR [eax]
  415a01:	adc    DWORD PTR [edx],esp
  415a03:	and    DWORD PTR [eax-0x80],esp
  415a06:	add    al,0xc4
  415a08:	add    eax,0xa803504
  415a0d:	inc    ecx
  415a0e:	adc    al,al
  415a10:	and    BYTE PTR [eax],al
  415a12:	add    al,0xa1
  415a14:	inc    esp
  415a15:	and    BYTE PTR [eax],al
  415a17:	sbb    eax,0x8010004
  415a1c:	fadd   DWORD PTR [eax+0x208002]
  415a22:	add    DWORD PTR [eax],esp
  415a24:	adc    al,0x6
  415a26:	add    al,BYTE PTR [edx]
  415a28:	or     BYTE PTR [eax+eax*1+0x10],ah
  415a2c:	add    DWORD PTR [edx],edx
  415a2e:	and    BYTE PTR [eax],al
  415a30:	add    edx,DWORD PTR [esi+0x8]
  415a33:	nop
  415a34:	and    BYTE PTR [edx],bl
  415a36:	add    BYTE PTR [ecx],al
  415a38:	sbb    DWORD PTR [ecx+0x29118],esp
  415a3e:	mov    BYTE PTR [ecx+0x0],dl
  415a41:	sub    BYTE PTR [edx],cl
  415a43:	or     BYTE PTR [eax+eax*1],al
  415a46:	inc    esp
  415a47:	inc    eax
  415a48:	add    BYTE PTR [edx],al
  415a4a:	add    BYTE PTR [ecx+0x120010c2],0x80
  415a51:	adc    eax,DWORD PTR [eax]
  415a53:	push   ecx
  415a54:	inc    ecx
  415a55:	or     al,0xa0
  415a57:	or     al,BYTE PTR [edx+0xa4a2]
  415a5d:	xchg   edx,eax
  415a5e:	add    BYTE PTR [esp+ebp*1],0xe3
  415a62:	add    al,BYTE PTR [ecx]
  415a64:	or     BYTE PTR [eax],0x0
  415a67:	add    BYTE PTR [esi],al
  415a69:	inc    edx
  415a6a:	and    al,0x80
  415a6c:	add    BYTE PTR [ecx-0x7fffbc00],dl
  415a72:	and    DWORD PTR [eax+ecx*2],esp
  415a75:	add    dh,BYTE PTR ds:0x8b4500a4
  415a7b:	mov    al,0x10
  415a7d:	push   ecx
  415a7e:	mov    eax,ds:0xa20024
  415a83:	inc    ecx
  415a84:	inc    edx
  415a85:	mov    al,ds:0x51808a9
  415a8a:	add    BYTE PTR [esp],0xa6
  415a8e:	xor    dl,BYTE PTR [eax*2+0xa040000]
  415a95:	add    BYTE PTR [esp+eax*1],al
  415a98:	add    al,0x62
  415a9b:	add    eax,0x161b8a24
  415aa0:	sbb    BYTE PTR [eax],0x6
  415aa3:	stos   BYTE PTR es:[edi],al
  415aa4:	shl    BYTE PTR [edx],0x4a
  415aa7:	inc    ebp
  415aa8:	add    BYTE PTR [eax],al
  415aaa:	inc    eax
  415aab:	cs push edx
  415aad:	push   ecx
  415aae:	inc    ebp
  415aaf:	and    BYTE PTR [eax],al
  415ab1:	mov    DWORD PTR [ebx],eax
  415ab3:	add    BYTE PTR ds:0x490c121,al
  415ab9:	add    cl,BYTE PTR [eax]
  415abb:	mov    ds:0xc444034,al
  415ac0:	adc    eax,0x400a40
  415ac5:	dec    ecx
  415ac6:	sub    BYTE PTR [eax+0x828049],dh
  415acc:	dec    esp
  415acd:	push   ss
  415ace:	and    BYTE PTR [eax+ecx*1-0x6a],0x34
  415ad3:	add    DWORD PTR [esi+0x1820221a],0x2a90c89
  415add:	inc    ebp
  415ade:	adc    al,0x55
  415ae0:	adc    BYTE PTR [eax+0x10],cl
  415ae3:	add    al,BYTE PTR [eax+0x0]
  415ae6:	test   DWORD PTR [edx],eax
  415ae8:	add    bl,al
  415aea:	add    BYTE PTR [edx+0x12820071],al
  415af0:	adc    ah,BYTE PTR [eax]
  415af2:	pop    esp
  415af3:	adc    BYTE PTR [eax-0x1ff92ef8],0x0
  415afa:	inc    edx
  415afb:	add    BYTE PTR [edx],al
  415afd:	adc    DWORD PTR [edx],eax
  415aff:	ret    0x1e
  415b02:	or     al,0xc8
  415b04:	add    BYTE PTR [eax+eax*1],al
  415b07:	and    al,BYTE PTR [eax]
  415b09:	dec    eax
  415b0a:	push   es
  415b0b:	mov    al,ds:0x1428018b
  415b10:	add    BYTE PTR [eax],dh
  415b12:	add    bl,BYTE PTR [ecx-0x56]
  415b15:	add    BYTE PTR [esi+0x40],ah
  415b18:	add    BYTE PTR [eax],0x90
  415b1b:	add    DWORD PTR [edx],eax
  415b1d:	add    ah,BYTE PTR [eax]
  415b1f:	and    BYTE PTR [ecx-0x7f],0x30
  415b23:	add    BYTE PTR [ecx],al
  415b25:	add    eax,DWORD PTR [eax]
  415b27:	add    al,0x21
  415b29:	inc    ecx
  415b2a:	add    BYTE PTR [esi],dl
  415b2c:	add    BYTE PTR [ebp+0x4],al
  415b2f:	add    BYTE PTR [eax],al
  415b31:	rol    DWORD PTR [ecx],0x84
  415b34:	or     BYTE PTR [ecx+0x0],al
  415b37:	add    BYTE PTR [edi-0x7a],ch
  415b3a:	and    al,0x82
  415b3c:	inc    ecx
  415b3d:	add    BYTE PTR [eax+0x60],cl
  415b40:	inc    esp
  415b41:	or     BYTE PTR [eax],dl
  415b43:	sub    BYTE PTR [eax],al
  415b45:	add    BYTE PTR [eax],al
  415b47:	add    BYTE PTR [eax+eax*1],ch
  415b4a:	test   BYTE PTR [eax+0x12],dl
  415b4d:	add    eax,0x1a211000
  415b52:	jo     0x415b56
  415b54:	add    BYTE PTR [eax],ah
  415b56:	add    al,0x12
  415b58:	aad    0x54
  415b5a:	add    BYTE PTR [esi],cl
  415b5c:	sbb    al,0x20
  415b5f:	xor    DWORD PTR [eax],eax
  415b61:	and    BYTE PTR [eax],al
  415b63:	and    eax,0x13832420
  415b68:	add    BYTE PTR [eax],0x31
  415b6b:	or     DWORD PTR ds:0x8900c808,eax
  415b71:	add    BYTE PTR [esi],al
  415b73:	add    BYTE PTR [ebx+0x4100001],0x20
  415b7a:	add    BYTE PTR [eax],cl
  415b7c:	push   edx
  415b7d:	rol    BYTE PTR [eax],0x12
  415b80:	and    eax,DWORD PTR [ecx]
  415b82:	inc    eax
  415b83:	inc    eax
  415b84:	sub    BYTE PTR [eax-0x7fdfffde],al
  415b8a:	add    BYTE PTR [ecx+0x0],dl
  415b8d:	add    BYTE PTR [eax+0x5240c502],al
  415b93:	adc    DWORD PTR [ebp+0x8000000],esp
  415b99:	add    DWORD PTR [eax+edx*1-0x7c],eax
  415b9d:	sub    BYTE PTR [esp+eiz*4],al
  415ba0:	sub    BYTE PTR [eax+0x0],al
  415ba3:	add    BYTE PTR [ebx],cl
  415ba5:	and    dl,BYTE PTR [edx]
  415ba7:	popa   
  415ba8:	adc    BYTE PTR [edx-0x6e7fbd68],cl
  415bae:	adc    esp,DWORD PTR [edx]
  415bb0:	inc    eax
  415bb1:	or     BYTE PTR [esi-0x5d],0x2
  415bb5:	cdq    
  415bb6:	or     BYTE PTR [edx-0x7b7fffff],cl
  415bbc:	add    BYTE PTR [eax],0x2
  415bbf:	and    BYTE PTR [eax+0x2c],al
  415bc2:	add    BYTE PTR [edx+0x8],al
  415bc5:	add    BYTE PTR [edx+0x1004080],al
  415bcb:	add    al,BYTE PTR [edx]
  415bcd:	and    DWORD PTR [ecx],esp
  415bcf:	adc    BYTE PTR [eax],cl
  415bd1:	push   eax
  415bd2:	add    BYTE PTR [edx],al
  415bd4:	mov    BYTE PTR [ebp-0x7e],cl
  415bd7:	and    dl,BYTE PTR [eax]
  415bd9:	add    BYTE PTR [eax],al
  415bdb:	or     al,dl
  415bdd:	add    DWORD PTR [edx-0x78],0xffffff83
  415be1:	add    BYTE PTR [eax],al
  415be3:	add    BYTE PTR [ecx],al
  415be5:	add    DWORD PTR [ebx],eax
  415be7:	add    BYTE PTR [eax],al
  415be9:	inc    eax
  415bea:	add    BYTE PTR [edx],al
  415bec:	add    BYTE PTR ds:0x200000,bl
  415bf2:	add    al,BYTE PTR [eax]
  415bf4:	and    al,BYTE PTR [eax+eax*2]
  415bf7:	xor    esp,DWORD PTR [ebp+0x20]
  415bfa:	and    BYTE PTR [eax+0x4],ah
  415bfd:	and    BYTE PTR [edx],0x28
  415c00:	or     BYTE PTR [ebx+eax*1],cl
  415c03:	or     ah,BYTE PTR [eax]
  415c05:	pop    es
  415c06:	adc    BYTE PTR [edi+0xc],0xa
  415c0a:	add    BYTE PTR [eax+ecx*4],cl
  415c0d:	add    eax,0x401820e
  415c12:	add    ecx,DWORD PTR [eax+0x255081]
  415c18:	add    al,BYTE PTR [edx]
  415c1a:	add    BYTE PTR [eax+eax*1],cl
  415c1d:	pop    es
  415c1e:	sub    cl,BYTE PTR [ecx+0x0]
  415c21:	add    ecx,DWORD PTR [eax+0x20]
  415c24:	sbb    BYTE PTR [edx+eax*2],ah
  415c27:	and    al,0x10
  415c29:	add    al,0x3
  415c2b:	xchg   ebx,eax
  415c2c:	sbb    BYTE PTR [ebx+eax*8],al
  415c2f:	or     BYTE PTR [esp+eax*4],al
  415c32:	add    BYTE PTR [eax+eax*1],al
  415c35:	add    BYTE PTR [ecx+eax*2+0x65008405],ah
  415c3c:	add    BYTE PTR [eax+eax*2-0x6feef580],dh
  415c43:	adc    BYTE PTR [eax+eiz*1+0x4884110],al
  415c4a:	add    al,0xbf
  415c4c:	sub    al,0xa0
  415c4e:	and    BYTE PTR [eax+edx*1],al
  415c51:	test   BYTE PTR [eax],cl
  415c53:	inc    eax
  415c54:	add    BYTE PTR [eax-0x3fd3fdfe],al
  415c5a:	push   eax
  415c5b:	shl    DWORD PTR [eax],0x0
  415c5e:	test   DWORD PTR [eax+ecx*1],edx
  415c61:	add    al,0x0
  415c63:	add    BYTE PTR [esi],bl
  415c65:	and    al,0x8c
  415c67:	inc    eax
  415c68:	inc    eax
  415c69:	add    BYTE PTR [eax+edx*1],al
  415c6c:	or     al,0x0
  415c6e:	dec    ecx
  415c6f:	ror    BYTE PTR [eax],0x0
  415c72:	add    BYTE PTR [eax],cl
  415c74:	sbb    cl,BYTE PTR [eax]
  415c76:	add    al,0x41
  415c78:	or     edx,DWORD PTR [ecx+0x4a210400]
  415c7e:	add    DWORD PTR [ecx],eax
  415c80:	or     DWORD PTR [eax+0x6],0x80000280
  415c87:	add    BYTE PTR [eax+0x1b020851],cl
  415c8d:	loope  0x415c8f
  415c8f:	inc    eax
  415c90:	or     BYTE PTR [edx+0x40b548],cl
  415c96:	mov    eax,0x80481800
  415c9b:	add    BYTE PTR [edi],ah
  415c9d:	(bad)  
  415c9e:	or     BYTE PTR [eax],al
  415ca0:	popa   
  415ca1:	inc    eax
  415ca2:	or     al,BYTE PTR [eax+eax*1]
  415ca5:	rcl    BYTE PTR [eax],0x23
  415ca8:	or     BYTE PTR [eax],al
  415caa:	add    BYTE PTR [eax],ch
  415cac:	add    BYTE PTR [eax+eax*1],0x10
  415cb0:	add    BYTE PTR [edx],al
  415cb2:	add    BYTE PTR [ecx],dh
  415cb4:	and    DWORD PTR [ebx],edx
  415cb6:	or     BYTE PTR [ebx],al
  415cb8:	xor    BYTE PTR [eax],0x80
  415cbb:	or     BYTE PTR [esi],cl
  415cbd:	enter  0x4108,0x10
  415cc1:	and    al,0x80
  415cc3:	dec    eax
  415cc4:	xor    BYTE PTR [ecx+eax*1],al
  415cc7:	and    BYTE PTR [eax+eiz*2],cl
  415cca:	add    al,BYTE PTR [ecx]
  415ccc:	ror    BYTE PTR [eax],0x0
  415ccf:	push   esp
  415cd0:	add    al,0x2
  415cd2:	add    BYTE PTR [eax+0x4429488],0x2
  415cd9:	and    bh,al
  415cdb:	or     al,0x84
  415cdd:	or     BYTE PTR [edx-0x38],al
  415ce0:	mov    BYTE PTR [eax],al
  415ce2:	xor    BYTE PTR [eax+ecx*1+0x18454010],dl
  415ce9:	push   es
  415cea:	inc    esp
  415ceb:	add    BYTE PTR [eax],ah
  415ced:	or     al,0x80
  415cef:	xor    dl,BYTE PTR [eax+eax*1]
  415cf2:	add    BYTE PTR [eax+0x4c1cd065],al
  415cf8:	add    al,0x10
  415cfa:	pusha  
  415cfb:	add    al,0x40
  415cfd:	add    DWORD PTR [eax],eax
  415cff:	add    al,0xc8
  415d01:	add    al,0x2
  415d03:	loop   0x415d5d
  415d05:	mov    al,ds:0x2800
  415d0a:	inc    ecx
  415d0b:	adc    BYTE PTR [eax],al
  415d0d:	mov    ch,0x0
  415d0f:	mov    ds:0x69888595,eax
  415d14:	adc    al,0xe4
  415d16:	add    BYTE PTR [ecx],al
  415d18:	add    BYTE PTR [esi+0x4012528],al
  415d1e:	push   ecx
  415d1f:	add    BYTE PTR [ebx],cl
  415d21:	and    al,BYTE PTR [eax]
  415d23:	xchg   esi,eax
  415d24:	or     BYTE PTR [eax+ecx*4],al
  415d27:	sbb    BYTE PTR [ecx],0x8a
  415d2a:	add    BYTE PTR [edx+0x10],ah
  415d2d:	add    dl,BYTE PTR [edi-0x7bf77f6e]
  415d33:	les    eax,FWORD PTR [eax]
  415d35:	out    0x41,al
  415d37:	add    eax,0x1580a01
  415d3c:	icebp  
  415d3d:	inc    eax
  415d3e:	add    BYTE PTR [eax-0x70],dl
  415d41:	loope  0x415cc3
  415d43:	add    BYTE PTR [edx],al
  415d45:	mov    BYTE PTR [eax+0x0],al
  415d48:	mov    ds:0x62121,al
  415d4d:	inc    edi
  415d4e:	xchg   BYTE PTR [edx+0x10400],ch
  415d54:	or     al,0x2a
  415d56:	and    eax,0x4410800
  415d5b:	add    DWORD PTR [ecx+0x28],edx
  415d5e:	bound  esp,QWORD PTR [eax]
  415d60:	sbb    al,BYTE PTR [eax+0x10]
  415d63:	inc    ecx
  415d64:	and    BYTE PTR [edx+0x1c],cl
  415d67:	add    al,BYTE PTR [edx+0x1400ba00]
  415d6d:	add    al,0x8a
  415d6f:	cmp    BYTE PTR [eax],0x8
  415d72:	add    al,0x13
  415d74:	jecxz  0x415d7d
  415d76:	add    DWORD PTR [eax],eax
  415d78:	and    al,0x1
  415d7a:	and    BYTE PTR [eax],dh
  415d7c:	dec    ebp
  415d7d:	or     DWORD PTR [eax],edx
  415d7f:	inc    ebx
  415d80:	or     DWORD PTR [eax],edx
  415d82:	test   DWORD PTR [eax],eax
  415d84:	inc    eax
  415d85:	add    BYTE PTR [ecx+0x4],ch
  415d88:	inc    ecx
  415d89:	add    BYTE PTR [eax],al
  415d8b:	xor    al,0x8
  415d8d:	add    BYTE PTR [edx+0x10],0x0
  415d91:	nop
  415d92:	adc    eax,0x20300202
  415d97:	add    BYTE PTR [ecx+0x55c0802],al
  415d9d:	add    al,0x8f
  415d9f:	add    BYTE PTR [eax+eax*2],al
  415da2:	xor    al,0x0
  415da4:	add    dl,al
  415da6:	and    BYTE PTR [eax],dl
  415da8:	push   es
  415da9:	enter  0x4a04,0x0
  415dad:	add    BYTE PTR [eax-0x7fbcf294],al
  415db3:	pop    edx
  415db4:	bound  eax,QWORD PTR [edx]
  415db6:	add    BYTE PTR [eax+eax*1],al
  415db9:	add    BYTE PTR [ecx],al
  415dbb:	or     eax,DWORD PTR [eax]
  415dbd:	add    BYTE PTR [edx-0x7ef9ff38],al
  415dc3:	adc    cl,BYTE PTR [eax+0x1]
  415dc6:	add    DWORD PTR [eax+0x58],0x48380
  415dcd:	sub    eax,0x8c0
  415dd2:	pusha  
  415dd3:	ror    DWORD PTR [ecx+0x30022],0x28
  415dda:	mov    BYTE PTR [eax+ebx*1],al
  415ddd:	and    BYTE PTR [eax],al
  415ddf:	add    BYTE PTR [esi+eax*4],0x14
  415de3:	add    BYTE PTR [ecx+eax*2],al
  415de6:	push   es
  415de7:	inc    ecx
  415de8:	add    cl,ah
  415dea:	add    al,0xac
  415dec:	rcl    BYTE PTR [eax],1
  415dee:	xor    DWORD PTR [eax+0x4],edx
  415df1:	add    eax,0x14002046
  415df6:	add    BYTE PTR [edx],ah
  415df8:	adc    BYTE PTR [eax+0x9],al
  415dfb:	add    BYTE PTR [ebx],al
  415dfd:	in     al,dx
  415dfe:	add    DWORD PTR [edi+0x40011812],eax
  415e04:	add    BYTE PTR [ecx],al
  415e06:	add    BYTE PTR [ecx+0xa400804],ah
  415e0c:	add    al,0xa
  415e0e:	ret    0x7181
  415e11:	xchg   edx,eax
  415e12:	and    al,0x41
  415e14:	call   0x41f739
  415e19:	inc    eax
  415e1a:	add    eax,0x438a1406
  415e1f:	add    BYTE PTR [eax+0x21],al
  415e22:	add    BYTE PTR [eax],ah
  415e24:	add    BYTE PTR [eax+edx*1],0xa
  415e28:	rol    dh,1
  415e2a:	add    BYTE PTR [esi],cl
  415e2c:	add    al,0x22
  415e2e:	dec    eax
  415e2f:	add    BYTE PTR [edx],ah
  415e31:	push   es
  415e32:	add    BYTE PTR [edx],ah
  415e34:	and    BYTE PTR [eax+eax*1],bl
  415e37:	mov    WORD PTR [eax*2+0x554084],es
  415e3e:	inc    esp
  415e3f:	and    BYTE PTR [esi-0x1c],al
  415e42:	and    BYTE PTR [eax],dl
  415e44:	add    al,al
  415e46:	add    al,0x5
  415e48:	adc    al,BYTE PTR [eax]
  415e4a:	add    BYTE PTR [edx+0x1],al
  415e4d:	inc    eax
  415e4e:	add    BYTE PTR [edx],ah
  415e50:	mov    al,ds:0x2004000
  415e55:	inc    eax
  415e56:	add    al,BYTE PTR [eax+0x1000]
  415e5c:	add    BYTE PTR [edx],ch
  415e5e:	add    al,BYTE PTR [eax]
  415e60:	and    BYTE PTR [eax],al
  415e62:	inc    ecx
  415e63:	add    BYTE PTR [eax],0x10
  415e66:	and    eax,0x12
  415e6b:	add    al,0x0
  415e6d:	add    BYTE PTR [esi],ah
  415e6f:	add    DWORD PTR [edi+0x40],0x300c0160
  415e76:	add    al,0x50
  415e78:	and    BYTE PTR [eax],0x40
  415e7b:	add    BYTE PTR cs:[eax+0x0],dl
  415e7f:	add    al,0x0
  415e81:	adc    ecx,DWORD PTR [eax]
  415e83:	rol    eax,1
  415e85:	inc    esp
  415e86:	inc    ecx
  415e87:	and    BYTE PTR [eax+0x42000240],al
  415e8d:	add    BYTE PTR [eax+0x10],cl
  415e90:	in     al,0x0
  415e92:	add    BYTE PTR [ecx+0x4000000],al
  415e98:	imul   eax,DWORD PTR [edx],0x804000ac
  415e9e:	or     BYTE PTR [edx],ch
  415ea0:	add    BYTE PTR [eax],al
  415ea2:	test   BYTE PTR [edx],cl
  415ea4:	dec    eax
  415ea5:	xor    BYTE PTR [eax],al
  415ea7:	sbb    al,0x8
  415ea9:	add    BYTE PTR [eax],al
  415eab:	add    al,0x0
  415ead:	mov    al,0x21
  415eaf:	add    eax,DWORD PTR [eax]
  415eb1:	add    DWORD PTR [edx],ecx
  415eb3:	sbb    BYTE PTR [ebx],cl
  415eb5:	add    BYTE PTR [eax],ah
  415eb7:	xchg   BYTE PTR [ecx-0x40],al
  415eba:	add    dl,dl
  415ebc:	stos   DWORD PTR es:[edi],eax
  415ebd:	add    cl,BYTE PTR [eax-0x7c]
  415ec0:	nop
  415ec1:	or     DWORD PTR [eax],ebp
  415ec3:	add    eax,DWORD PTR [eax+0x0]
  415ec6:	add    BYTE PTR [eax+eax*1],ah
  415ec9:	add    cl,BYTE PTR [eax+0x10]
  415ecc:	add    DWORD PTR [edx],eax
  415ece:	adc    BYTE PTR [eax+0x18],al
  415ed1:	and    BYTE PTR [eax],al
  415ed3:	inc    eax
  415ed4:	add    BYTE PTR [edx],cl
  415ed6:	rol    DWORD PTR [eax],0x1d
  415ed9:	add    dl,BYTE PTR [edx+0x0]
  415edc:	adc    BYTE PTR [eax],0x6
  415edf:	add    eax,DWORD PTR [ecx+eax*1]
  415ee2:	and    BYTE PTR [ebx+eax*4+0x40c81108],dl
  415ee9:	inc    edx
  415eea:	rol    BYTE PTR [edx+0x5242],0x0
  415ef1:	dec    edx
  415ef2:	inc    eax
  415ef3:	inc    ecx
  415ef4:	add    BYTE PTR [esp+eax*2+0x10],al
  415ef8:	or     BYTE PTR [ebx],al
  415efa:	inc    ecx
  415efb:	and    BYTE PTR [eax+0x8],al
  415efe:	and    BYTE PTR [ecx+0x10],0x23
  415f02:	and    DWORD PTR [eax+ecx*1],0x80670000
  415f09:	dec    eax
  415f0a:	add    BYTE PTR [eax-0x1febff80],al
  415f10:	add    al,0x0
  415f12:	push   cs
  415f13:	xor    BYTE PTR [ecx+0x0],al
  415f16:	test   DWORD PTR [edx+0x0],eax
  415f19:	add    BYTE PTR [edx],0x90
  415f1c:	mov    ds:0x8120288,al
  415f21:	or     al,0x1
  415f23:	add    BYTE PTR [esp+ebx*2+0x66],cl
  415f27:	adc    BYTE PTR [ecx],0xa3
  415f2a:	add    DWORD PTR [eax+eiz*1],ebp
  415f2d:	inc    eax
  415f2e:	adc    al,0x0
  415f30:	add    al,0x66
  415f33:	or     al,BYTE PTR [ecx]
  415f35:	adc    al,0x41
  415f37:	add    BYTE PTR [edx],cl
  415f39:	dec    esp
  415f3a:	inc    esp
  415f3b:	add    BYTE PTR [eax],al
  415f3d:	test   BYTE PTR [ecx],dh
  415f3f:	inc    eax
  415f40:	add    BYTE PTR [edx],al
  415f42:	test   BYTE PTR [eax],dl
  415f44:	mov    al,ds:0x204a64e8
  415f49:	add    BYTE PTR [edx+eax*1],ah
  415f4c:	add    BYTE PTR [eax],al
  415f4e:	or     BYTE PTR [ecx],al
  415f50:	enter  0x48,0xc
  415f54:	(bad)  
  415f55:	adc    dl,BYTE PTR [esi]
  415f57:	add    BYTE PTR [eax],al
  415f59:	add    BYTE PTR ds:0x4822000,al
  415f5f:	and    al,0x5
  415f61:	popa   
  415f62:	adc    DWORD PTR [eax],ecx
  415f64:	or     dl,BYTE PTR [eax]
  415f66:	or     BYTE PTR [eax+0x2],al
  415f69:	inc    eax
  415f6a:	or     BYTE PTR [eax+ebx*4],dl
  415f6d:	adc    al,0x4
  415f6f:	add    BYTE PTR [ebx+0x8010],al
  415f75:	or     eax,0x65006025
  415f7a:	add    BYTE PTR [eax],cl
  415f7c:	add    al,al
  415f7e:	int3   
  415f7f:	add    BYTE PTR [ecx+0x2],al
  415f85:	add    eax,DWORD PTR [eax]
  415f87:	inc    eax
  415f88:	add    DWORD PTR [eax+0x466781],0x5010006
  415f92:	add    BYTE PTR [edx],ah
  415f94:	add    DWORD PTR [ecx+0x10],eax
  415f97:	adc    DWORD PTR [ebp+0x0],eax
  415f9a:	or     BYTE PTR [eax],al
  415f9c:	xor    al,0x17
  415f9e:	mul    BYTE PTR [esi+0x5b9cef9]
  415fa4:	xor    dh,al
  415fa6:	mov    esp,0xcf3893a2
  415fab:	mov    ebx,0xa86eca08
  415fb0:	rcl    ebx,1
  415fb2:	iret   
  415fb3:	loopne 0x415fb3
  415fb5:	push   ds
  415fb6:	pusha  
  415fb7:	mov    dl,0xf1
  415fb9:	repz add DWORD PTR [ecx-0x1e9facff],esi
  415fc0:	or     ah,BYTE PTR [edi+0x57c0c831]
  415fc6:	cmp    bl,al
  415fc8:	mov    BYTE PTR [ecx+0x5c12bbc6],dh
  415fce:	cmp    bh,BYTE PTR [eax-0x502e45f8]
  415fd4:	mov    eax,ds:0x51583a80
  415fd9:	mov    ds:0xb0cd0111,eax
  415fde:	pop    ebp
  415fdf:	lea    ebp,[eax]
  415fe1:	ret    
  415fe2:	icebp  
  415fe3:	mov    cl,0x51
  415fe5:	inc    ebx
  415fe6:	jno    0x41605a
  415fe8:	push   ecx
  415fe9:	jecxz  0x416068
  415feb:	jb     0x416044
  415fed:	mov    ecx,DWORD PTR [edx+0x60854462]
  415ff3:	lods   eax,DWORD PTR ds:[esi]
  415ff4:	daa    
  415ff5:	push   ecx
  415ff6:	mov    edi,0xebc3ab5f
  415ffb:	sub    al,0x38
  415ffd:	daa    
  415ffe:	jmp    0x8ba8:0x1554357
  416005:	sti    
  416006:	out    0x4d,eax
  416008:	call   0x9c0eb79b
  41600d:	mov    eax,0xbc0dbfb5
  416012:	cmp    edi,0x84b2ba39
  416018:	stc    
  416019:	cmp    BYTE PTR [esi-0x463a9420],al
  41601f:	mov    eax,0x6e7e401e
  416024:	bndldx bnd2,[esi+0x34]
  416028:	jmp    0x8b94f7f
  41602d:	dec    edx
  41602e:	mov    dh,0x98
  416030:	stos   DWORD PTR es:[edi],eax
  416031:	repnz dec edx
  416033:	and    cl,BYTE PTR [eax]
  416035:	or     ch,BYTE PTR [ecx]
  416037:	test   al,0x8
  416039:	mov    bh,BYTE PTR [edx]
  41603b:	test   al,0xf
  41603d:	mov    edx,0xfa153002
  416042:	jnp    0x416064
  416044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416045:	cmp    DWORD PTR [edx],0x58
  416048:	adc    al,0xa
  41604a:	or     al,BYTE PTR [edi-0x57c50998]
  416050:	or     BYTE PTR [edx-0x3c1357b6],cl
  416056:	cmc    
  416057:	mov    esp,0x4cfa6382
  41605c:	jp     0x416005
  41605e:	cli    
  41605f:	lods   eax,DWORD PTR ds:[esi]
  416060:	popa   
  416061:	sub    eax,0x12f0f43a
  416066:	cs out dx,eax
  416068:	js     0x415ff5
  41606a:	cmp    ch,BYTE PTR [eax+0x7187a14]
  416070:	dec    eax
  416071:	(bad)  
  416072:	cmp    ch,BYTE PTR [eax-0x5f851518]
  416078:	adc    DWORD PTR [edx+0x61],ebp
  41607b:	push   ecx
  41607c:	add    DWORD PTR [edx-0x41],ebp
  41607f:	imul   esp,DWORD PTR [edi+0x8483af2],0xea82aca
  416089:	dec    edi
  41608a:	loopne 0x416093
  41608c:	js     0x416013
  41608e:	cmp    ch,BYTE PTR [eax+0x5fffa1f7]
  416094:	dec    edx
  416095:	retf   
  416096:	jmp    0x4160ef
  416098:	jg     0x416108
  41609a:	jmp    0x2791:0x77b543d7
  4160a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160a2:	xor    DWORD PTR [ebp+0x8],edi
  4160a5:	mov    ch,BYTE PTR [edx]
  4160a7:	test   al,0x8
  4160a9:	sbb    dh,BYTE PTR ds:0xea83d8b8
  4160af:	andnps xmm1,XMMWORD PTR [esi]
  4160b2:	test   al,0x81
  4160b4:	dec    edi
  4160b5:	sahf   
  4160b6:	pop    esi
  4160b7:	adc    DWORD PTR [eax+0x2f],ecx
  4160ba:	scas   eax,DWORD PTR es:[edi]
  4160bb:	ror    BYTE PTR [edi],1
  4160bd:	xchg   al,ch
  4160bf:	push   ebp
  4160c0:	rol    DWORD PTR [ebx-0x7f],cl
  4160c3:	aas    
  4160c4:	sub    DWORD PTR [ebp-0x19],eax
  4160c7:	pop    ecx
  4160c8:	or     BYTE PTR [edx+0x35],bl
  4160cb:	cwde   
  4160cc:	enter  0xfaf2,0x8d
  4160d0:	mov    al,ds:0x92085af6
  4160d5:	sub    BYTE PTR [eax],dh
  4160d7:	or     BYTE PTR [eax],cl
  4160d9:	call   0x778d:0x3a38a82b
  4160e0:	mov    al,ds:0x9e083af7
  4160e5:	xor    dl,BYTE PTR [edx+0x2c]
  4160e8:	or     BYTE PTR [edx-0x4e],bl
  4160eb:	cwde   
  4160ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160ed:	repnz pop edx
  4160ef:	bound  ecx,QWORD PTR [eax]
  4160f1:	or     ch,BYTE PTR [ecx]
  4160f3:	test   al,0x8
  4160f5:	sbb    dl,BYTE PTR [esi-0xc]
  4160f8:	leave  
  4160f9:	pop    edi
  4160fa:	out    dx,eax
  4160fb:	ja     0x4160d9
  4160fd:	mov    ?,WORD PTR [esi]
  4160ff:	inc    edx
  416100:	inc    ebx
  416101:	add    eax,0xd078517a
  416106:	mov    al,0xdf
  416108:	xchg   edx,eax
  416109:	ret    
  41610a:	out    dx,al
  41610b:	addr16 jg 0x4160c3
  41610e:	or     dh,BYTE PTR [edx]
  416110:	fdiv   DWORD PTR [ebx+0xe4bde31]
  416116:	push   0xffffffcd
  416118:	loope  0x4160d9
  41611a:	mov    edi,0x65da8cde
  41611f:	clc    
  416120:	xchg   ebx,eax
  416121:	sub    BYTE PTR [eax],dh
  416123:	test   al,0x8
  416125:	pop    edx
  416126:	push   ss
  416127:	test   al,0xcf
  416129:	adc    ecx,DWORD PTR [ebp+0x5ab88973]
  41612f:	pop    esp
  416130:	clc    
  416131:	xchg   ecx,eax
  416132:	push   edi
  416133:	jmp    0xf618:0xf86c4a93
  41613a:	stos   DWORD PTR es:[edi],eax
  41613b:	aam    0xf8
  41613d:	mov    gs,WORD PTR [eax-0x28]
  416140:	mov    edx,cs
  416142:	ins    BYTE PTR es:[edi],dx
  416143:	clc    
  416144:	fdivr  DWORD PTR [esi]
  416146:	xor    bl,al
  416148:	int3   
  416149:	or     al,0xca
  41614b:	idiv   ebx
  41614d:	(bad)  
  41614e:	dec    esp
  41614f:	inc    edx
  416150:	inc    ebx
  416151:	add    eax,0xcd50f83a
  416156:	cmp    DWORD PTR [eax],ecx
  416158:	(bad)  
  416159:	clc    
  41615a:	call   0xc8a8:0x230a0830
  416161:	sbb    al,0xa6
  416163:	test   DWORD PTR [esi-0x27138d86],0xd0a876a1
  41616d:	ss bnd jmp 0x328b2b8d
  416174:	sbb    BYTE PTR [edx-0x323857c6],al
  41617a:	jge    0x41614a
  41617c:	and    al,BYTE PTR [ebp-0x41f0a7c2]
  416182:	adc    cl,al
  416184:	sub    DWORD PTR [edx+edi*1+0x3ae56833],eax
  41618b:	test   al,0x81
  41618d:	pop    ecx
  41618e:	(bad)  
  41618f:	cmp    BYTE PTR [edx+ecx*4],bh
  416192:	jno    0x4161ba
  416194:	sub    DWORD PTR [eax-0xf],edx
  416197:	cmp    BYTE PTR [eax-0xb],ch
  41619a:	cmp    ch,BYTE PTR [eax+0x38be5171]
  4161a0:	or     BYTE PTR [edx+0x512926a3],bl
  4161a6:	icebp  
  4161a7:	cmp    BYTE PTR [eax-0xb],ch
  4161aa:	cmp    ch,BYTE PTR [eax+0x697e5ea7]
  4161b0:	dec    esp
  4161b1:	into   
  4161b2:	jp     0x41615c
  4161b4:	sar    ebp,cl
  4161b6:	stos   DWORD PTR es:[edi],eax
  4161b7:	mov    ah,0x88
  4161b9:	fnsave [ebx-0x34]
  4161bc:	(bad)  
  4161bd:	cmp    dh,BYTE PTR [edx]
  4161bf:	jae    0x416168
  4161c1:	push   ecx
  4161c2:	dec    DWORD PTR [eax+0x13]
  4161c5:	lea    edi,[ecx-0x58]
  4161c8:	dec    ecx
  4161c9:	adc    eax,0xd3a77282
  4161ce:	repnz imul ebx,eax,0x8c1cf983
  4161d5:	pop    eax
  4161d6:	lock jne 0x416190
  4161d9:	pop    edx
  4161da:	mov    eax,ds:0x73dacd68
  4161df:	lods   al,BYTE PTR ds:[esi]
  4161e0:	test   al,0x33
  4161e2:	lea    esi,[ebx]
  4161e4:	push   cs
  4161e5:	retf   0xb4d9
  4161e8:	mov    bh,0x81
  4161ea:	cmp    bh,BYTE PTR [eax-0x1f]
  4161ed:	shr    dl,cl
  4161ef:	adc    ecx,edi
  4161f1:	and    ebx,ebp
  4161f3:	inc    ecx
  4161f4:	dec    eax
  4161f5:	dec    ebx
  4161f6:	pop    edx
  4161f7:	sbb    dh,BYTE PTR [eax+0xe]
  4161fa:	xlat   BYTE PTR ds:[ebx]
  4161fb:	mov    bl,0x7e
  4161fd:	add    eax,0x21573098
  416202:	dec    esi
  416203:	js     0x416261
  416205:	xchg   ecx,eax
  416206:	mov    ebx,DWORD PTR [edi+0x7f]
  416209:	mov    gs,WORD PTR [ecx+0x71]
  41620c:	sbb    edx,0x33d9e9ff
  416212:	or     eax,0xeaa2e4f3
  416217:	pop    ecx
  416218:	pop    ss
  416219:	and    eax,0x857eb73d
  41621e:	jae    0x416231
  416220:	sbb    DWORD PTR [ebx-0x7ef35276],ebp
  416226:	dec    ecx
  416227:	mov    DWORD PTR [ebx+0x30b33f83],esp
  41622d:	push   0x3a
  41622f:	push   eax
  416230:	jg     0x41626d
  416232:	mov    BYTE PTR [eax],al
  416234:	aam    0x4a
  416236:	data16 shl BYTE PTR [edx-0x7],1
  41623a:	push   0xffffffcb
  41623c:	fsub   DWORD PTR [ecx+0x3542a876]
  416242:	repnz mov ecx,0x5ff15227
  416248:	adc    eax,0xc6d8fa02
  41624d:	mov    bh,0xed
  41624f:	cli    
  416250:	adc    DWORD PTR [edx-0x744e7646],ebp
  416256:	cmp    bl,al
  416258:	fnstenv [eax-0x7c07c433]
  41625e:	cmp    ch,BYTE PTR [eax-0x5293376c]
  416264:	or     BYTE PTR [edx],bh
  416266:	aas    
  416267:	test   al,0xf5
  416269:	mov    edx,0x988fde61
  41626e:	ds mov ch,0x8
  416271:	cli    
  416272:	aas    
  416273:	test   al,0x81
  416275:	stos   DWORD PTR es:[edi],eax
  416276:	cmp    esp,esp
  416278:	inc    ebp
  416279:	pop    ebx
  41627a:	and    DWORD PTR [ebx+edx*1+0x4a],ecx
  41627e:	mov    bh,0x89
  416280:	jge    0x41620b
  416282:	cmp    bl,BYTE PTR [eax-0x7]
  416285:	pop    esi
  416286:	xor    DWORD PTR [edi],ebp
  416288:	js     0x416215
  41628a:	cmp    ch,BYTE PTR [eax-0x3a03f765]
  416290:	lahf   
  416291:	inc    esi
  416292:	add    ebx,esp
  416294:	xchg   edi,eax
  416295:	or     BYTE PTR ds:[esi+0x3a36974f],bh
  41629c:	or     BYTE PTR [edx],cl
  41629e:	or     BYTE PTR [ebp-0x53f57da8],ch
  4162a4:	jno    0x416233
  4162a6:	cmp    bl,al
  4162a8:	inc    DWORD PTR [ebx+0x620808f2]
  4162ae:	push   0x30
  4162b0:	sbb    al,0x7e
  4162b2:	push   ecx
  4162b3:	mov    eax,0x7e357cb
  4162b8:	xchg   DWORD PTR [ebx+0x34d9629a],ebx
  4162be:	cmp    al,0xe9
  4162c0:	imul   edx
  4162c2:	loopne 0x41625d
  4162c4:	outs   dx,DWORD PTR ds:[esi]
  4162c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162c6:	xchg   DWORD PTR [eax],eax
  4162c8:	out    dx,eax
  4162c9:	imul   ebx,DWORD PTR [ebx+0x66beebd3],0x280a083d
  4162d3:	test   eax,0x3f7af89b
  4162d8:	or     BYTE PTR [edx+0x38],bh
  4162db:	test   al,0x44
  4162dd:	scas   eax,DWORD PTR es:[edi]
  4162de:	push   ecx
  4162df:	jmp    0x2eb42581
  4162e4:	push   ds
  4162e5:	shl    BYTE PTR [edx+0x6e],0xf
  4162e9:	sbb    dl,BYTE PTR [esi+0x34]
  4162ec:	leave  
  4162ed:	push   edx
  4162ee:	out    dx,eax
  4162ef:	ja     0x416333
  4162f1:	inc    ebp
  4162f2:	ss mov ecx,0xffbe5a0e
  4162f8:	mov    eax,0x73a83980
  4162fd:	nop
  4162fe:	mov    dl,0x7c
  416300:	pop    ss
  416301:	push   ecx
  416302:	popa   
  416303:	pop    edi
  416304:	sbb    dl,cl
  416306:	dec    esi
  416307:	push   eax
  416308:	clc    
  416309:	cmp    DWORD PTR [ebx],0xffffffa8
  41630c:	push   eax
  41630d:	push   cs
  41630e:	call   0x803:0x3aa3d3c1
  416315:	jge    0x416321
  416317:	lods   eax,DWORD PTR ds:[esi]
  416318:	or     DWORD PTR [eax+0x188f583a],ecx
  41631e:	xor    BYTE PTR [ebx],0x8
  416321:	mov    bh,BYTE PTR [edx]
  416323:	test   al,0x3e
  416325:	sahf   
  416326:	repnz in eax,dx
  416328:	js     0x41637a
  41632a:	cmp    ebp,DWORD PTR [ecx+ebp*8-0x6c3f9c23]
  416331:	mov    BYTE PTR [esi],bh
  416333:	test   al,0x8
  416335:	mov    cl,BYTE PTR [ecx]
  416337:	test   al,0x69
  416339:	push   ss
  41633a:	xor    BYTE PTR [ebx-0x5063f5f8],0xea
  416341:	mov    ebp,0x812787ea
  416346:	cmp    BYTE PTR ds:[eax+eax*1-0x75f74e17],cl
  41634e:	cmp    ch,BYTE PTR [ebp-0x4e206f78]
  416354:	imul   ebp,DWORD PTR ds:0xf8998f0e,0xffffff9a
  41635b:	mov    al,0x8
  41635d:	stos   BYTE PTR es:[edi],al
  41635e:	sbb    DWORD PTR [eax+0x73821528],ebp
  416364:	movsx  esi,BYTE PTR ds:0xea8a50c4
  41636b:	xchg   eax,ecx
  41636d:	cmp    al,BYTE PTR [edx]
  41636f:	xor    ecx,edx
  416371:	sti    
  416372:	clc    
  416373:	lea    edx,[eax+0x38e70445]
  416379:	pop    edx
  41637a:	cmp    ebp,DWORD PTR [ebp+edx*4+0x38e71888]
  416381:	jp     0x4163be
  416383:	lods   al,BYTE PTR ds:[esi]
  416384:	movsx  eax,BYTE PTR ds:0x9a8039ca
  41638b:	xor    cl,BYTE PTR [eax-0x32]
  41638e:	cmp    ch,BYTE PTR [eax-0x35bd41f1]
  416394:	ror    BYTE PTR [edx+ebp*1+0x3aaa38ff],0xa8
  41639c:	movsx  eax,BYTE PTR [ebp-0x257f7337]
  4163a3:	mov    cl,0x4
  4163a5:	xchg   edx,eax
  4163a6:	jge    0x416419
  4163a8:	cdq    
  4163a9:	clc    
  4163aa:	call   0x49a8:0x4aa08b0
  4163b1:	sbb    eax,0x8ac0f382
  4163b6:	es out dx,eax
  4163b8:	js     0x41635f
  4163ba:	cmp    ch,BYTE PTR [eax+0x22a90892]
  4163c0:	or     BYTE PTR [edx],bh
  4163c2:	adc    DWORD PTR [eax+0x6d3de9],ebp
  4163c8:	fild   WORD PTR [edx-0x15f767c2]
  4163ce:	pop    ecx
  4163cf:	test   al,0xb9
  4163d1:	lea    ebp,[edi+0x3ace4832]
  4163d7:	test   al,0xf
  4163d9:	mov    esi,0x8840c9c2
  4163de:	sub    bh,bh
  4163e0:	js     0x416377
  4163e2:	cmp    ch,BYTE PTR [eax+0x5fb15227]
  4163e8:	or     al,0x4a
  4163ea:	fnstenv [esp+ecx*2-0x73]
  4163ee:	cmp    bh,BYTE PTR [eax]
  4163f0:	clc    
  4163f1:	sbb    ebx,DWORD PTR [ebp-0x2f]
  4163f4:	nop
  4163f5:	dec    edx
  4163f6:	in     al,0x7
  4163f8:	leave  
  4163f9:	cmp    al,BYTE PTR [edx]
  4163fb:	lock test al,0xf3
  4163fe:	repnz fdiv QWORD PTR [edi-0x789e6132]
  416405:	outs   dx,BYTE PTR ds:[esi]
  416406:	fwait
  416407:	inc    ecx
  416408:	shr    DWORD PTR [ebx-0x15],cl
  41640b:	xchg   DWORD PTR [ebx+esi*4-0x36],ebp
  41640f:	jae    0x416422
  416411:	mov    ?,WORD PTR [edx+0x53]
  416414:	add    edi,edx
  416416:	pop    edx
  416417:	mov    cl,0x1
  416419:	pop    edi
  41641a:	mov    cl,0x2f
  41641c:	aas    
  41641d:	cli    
  41641e:	xchg   ecx,eax
  41641f:	scas   eax,DWORD PTR es:[edi]
  416420:	dec    ecx
  416421:	pop    edi
  416422:	xor    DWORD PTR [ecx],edi
  416424:	cwde   
  416425:	sar    DWORD PTR [edx],1
  416427:	test   al,0x7f
  416429:	xor    eax,0x59373002
  41642e:	jno    0x416499
  416430:	jl     0x4163e7
  416432:	sbb    dh,BYTE PTR [ebx-0x27]
  416435:	adc    al,0x7e
  416437:	jecxz  0x416438
  416439:	cmp    al,BYTE PTR [edx]
  41643b:	xor    bh,BYTE PTR [edi-0x406300c9]
  416441:	aaa    
  416442:	sahf   
  416443:	lahf   
  416444:	xlat   BYTE PTR ds:[ebx]
  416445:	mov    bl,0x71
  416447:	jg     0x41642b
  416449:	loope  0x416407
  41644b:	push   cs
  41644c:	(bad)  
  41644d:	cmp    al,BYTE PTR [edx]
  41644f:	xor    BYTE PTR [edi],dh
  416451:	loope  0x416445
  416453:	pop    edi
  416454:	mov    WORD PTR [edi],cs
  416456:	jmp    0xeb28:0x6e0b8be7
  41645d:	xchg   BYTE PTR [edi+0x2e],ah
  416460:	or     eax,0x37d86816
  416465:	mov    cl,0xf9
  416467:	gs push eax
  416469:	(bad)  
  41646a:	jmp    0x416403
  41646c:	(bad)  
  41646d:	cmp    dl,BYTE PTR [edx+0x715258f0]
  416473:	jmp    0xf9ab64de
  416478:	fwait
  416479:	in     al,dx
  41647a:	pusha  
  41647b:	adc    BYTE PTR [eax+0x36ab08a3],ch
  416481:	dec    esp
  416482:	leave  
  416483:	sub    DWORD PTR [eax+0x54a26033],0x47f9c98a
  41648d:	cmc    
  41648e:	cmp    ch,BYTE PTR [eax+0x8]
  416491:	dec    edx
  416492:	xor    ch,BYTE PTR [eax+0x61f8b447]
  416498:	or     BYTE PTR [edx-0x4a8057ce],cl
  41649e:	or     dh,BYTE PTR [edx]
  4164a0:	scas   eax,DWORD PTR es:[edi]
  4164a1:	mov    ebx,0x43d85ff1
  4164a6:	loope  0x41648a
  4164a8:	imul   eax,DWORD PTR [edx],0x3d48329a
  4164ae:	cmp    DWORD PTR [eax-0x2f797e51],ebp
  4164b4:	in     al,0x6
  4164b6:	add    BYTE PTR [edi+0x82efb10],al
  4164bc:	or     BYTE PTR [edx],cl
  4164be:	pop    eax
  4164bf:	ja     0x416495
  4164c1:	repz cli 
  4164c3:	scas   eax,DWORD PTR es:[edi]
  4164c4:	dec    ebx
  4164c5:	jne    0x4164b4
  4164c7:	mov    bh,0xc7
  4164c9:	aas    
  4164ca:	xor    DWORD PTR [edi-0x10],ebx
  4164cd:	cmp    bl,BYTE PTR [edx-0x5dcc27f8]
  4164d3:	call   0x78ab6f68
  4164d8:	aam    0xd3
  4164da:	in     eax,0xaf
  4164dc:	adc    al,0xfb
  4164de:	sub    al,0x4f
  4164e0:	(bad)  
  4164e1:	cli    
  4164e2:	pop    esp
  4164e3:	add    DWORD PTR [esi+ebx*2],ecx
  4164e6:	mov    esi,0x3fa093af
  4164eb:	shl    DWORD PTR [eax-0x7],cl
  4164ee:	cmp    ch,BYTE PTR [esi-0x67]
  4164f1:	clc    
  4164f2:	call   0x59a8:0xff2a08b0
  4164f9:	sub    bh,ch
  4164fb:	gs jg  0x4164b9
  4164fe:	(bad)  
  4164ff:	hlt    
  416500:	xchg   edx,eax
  416501:	jmp    0x3202:0x3aff07e4
  416508:	std    
  416509:	xor    edi,edi
  41650b:	pop    esp
  41650c:	mov    bl,0x40
  41650e:	jge    0x4164c1
  416510:	mov    dl,0xfd
  416512:	fnsetpm(287 only) 
  416514:	ret    
  416515:	sbb    BYTE PTR [edx+0x31],0x8
  416519:	cmp    dh,BYTE PTR [ebp-0x4a]
  41651c:	add    DWORD PTR [esi+0x3affe83a],ecx
  416522:	xor    BYTE PTR [eax],0x8
  416525:	mov    edx,0x8afcb635
  41652a:	jmp    0x995f:0xb2d13797
  416531:	dec    edx
  416532:	push   0x40
  416534:	mov    bl,BYTE PTR [edi+eax*8+0x5d721e9]
  41653b:	adc    eax,0xb5c06f08
  416540:	ds dec edx
  416542:	mov    cl,0xff
  416544:	sbb    dl,bh
  416546:	cmp    ebp,DWORD PTR [eax-0x3344b4c6]
  41654c:	(bad)  
  41654d:	cmp    al,BYTE PTR [edx+0x32ba0833]
  416553:	mov    dh,0xd0
  416555:	test   BYTE PTR [edx-0x28],ch
  416558:	js     0x4164e8
  41655a:	cmp    ch,BYTE PTR [eax+0x5169854b]
  416560:	or     BYTE PTR [edx],bh
  416562:	jb     0x416518
  416564:	aas    
  416565:	mov    ch,BYTE PTR [edx+0x3a]
  416568:	pop    ecx
  416569:	pop    edx
  41656a:	mov    cl,0x2f
  41656c:	fdiv   DWORD PTR [eax]
  41656e:	cmp    DWORD PTR [eax-0x52cb65f8],ebp
  416574:	dec    esp
  416575:	(bad)  
  416576:	jmp    0xa76c:0x32357fb7
  41657d:	add    DWORD PTR [esi-0x35f26ca2],edi
  416583:	lods   al,BYTE PTR ds:[esi]
  416584:	pop    ss
  416585:	dec    edx
  416586:	rcr    DWORD PTR [edi-0x22],0x13
  41658a:	mov    ebp,0xf9457d33
  41658f:	test   eax,0xddbe3158
  416594:	push   ebx
  416595:	or     al,0xca
  416597:	aaa    
  416598:	mov    eax,0x8f30216
  41659d:	mov    bh,BYTE PTR [esi]
  41659f:	mov    esi,0x83a8b81
  4165a4:	or     BYTE PTR [esi+ebx*4-0x5ea15452],bh
  4165ab:	pop    ds
  4165ac:	or     BYTE PTR [edx-0x733357c5],cl
  4165b2:	stos   BYTE PTR es:[edi],al
  4165b3:	sti    
  4165b4:	or     dl,cl
  4165b6:	cmp    al,0xa8
  4165b8:	sti    
  4165b9:	xchg   BYTE PTR [edx+0x42],cl
  4165bc:	adc    DWORD PTR [edx+0x3a],ecx
  4165bf:	dec    eax
  4165c0:	push   ss
  4165c1:	or     eax,0x5b102bf0
  4165c6:	sub    al,0x8
  4165c8:	or     BYTE PTR [edx],cl
  4165ca:	cwde   
  4165cb:	ins    BYTE PTR es:[di],dx
  4165cd:	lock sbb dh,BYTE PTR [ebx]
  4165d0:	test   al,0x80
  4165d2:	mov    bl,0xdc
  4165d4:	pop    ds
  4165d5:	mov    ds:0xf6f4387a,eax
  4165da:	pop    edx
  4165db:	xor    ah,ch
  4165dd:	xchg   esi,eax
  4165de:	inc    ebx
  4165df:	test   al,0x68
  4165e1:	pop    ebp
  4165e2:	fwait
  4165e3:	cmp    ebp,DWORD PTR [esi-0x3a]
  4165e6:	sbb    al,0x9f
  4165e8:	gs or  eax,0xdae4e849
  4165ee:	inc    edi
  4165ef:	cs iret 
  4165f1:	sar    DWORD PTR [edi],0x54
  4165f4:	adc    DWORD PTR [eax+eax*8],ecx
  4165f7:	loope  0x4165fa
  4165f9:	jecxz  0x416636
  4165fb:	shl    DWORD PTR [edx],1
  4165fd:	jae    0x41659f
  4165ff:	shl    DWORD PTR [ebx],0x73
  416602:	bound  esp,QWORD PTR [edx]
  416604:	cmp    eax,0xa905f32c
  41660a:	and    BYTE PTR [ecx+0x32215366],0x33
  416611:	bound  edi,QWORD PTR [edx-0x64]
  416614:	add    DWORD PTR [ebx+0x4d5d786f],esi
  41661a:	adc    BYTE PTR [ecx-0x102deeb2],0x98
  416621:	inc    ebp
  416622:	scas   al,BYTE PTR es:[edi]
  416623:	mov    edi,0xe2dacb8c
  416628:	shr    BYTE PTR [edx+0xd522fd3],cl
  41662e:	pop    ds
  41662f:	cld    
  416630:	dec    edi
  416631:	and    ch,BYTE PTR [edx+esi*1]
  416634:	xor    al,0xe
  416636:	ins    DWORD PTR es:[edi],dx
  416637:	int3   
  416638:	adc    DWORD PTR [ebx*2+0x1dceac2e],ebx
  41663f:	mul    eax
  416641:	sub    eax,0xa1fad7e
  416646:	or     dh,BYTE PTR [ebx]
  416648:	std    
  416649:	add    eax,0x9288ef6d
  41664e:	enter  0x1a3d,0x82
  416652:	sub    esi,DWORD PTR [ebx+edx*1]
  416655:	pop    edi
  416656:	push   es
  416657:	mov    ds:0x37deda8f,eax
  41665c:	in     al,dx
  41665d:	ds cmc 
  41665f:	loopne 0x416651
  416661:	xchg   ecx,eax
  416662:	sub    al,0xcf
  416664:	xchg   ecx,eax
  416665:	adc    ah,BYTE PTR [eax+0x32]
  416668:	adc    eax,DWORD PTR [ecx+0x5ae3b4f0]
  41666e:	ds jo  0x416630
  416671:	mov    edx,DWORD PTR [ecx+0x48]
  416674:	ror    DWORD PTR [ebp+0x49],cl
  416677:	mov    eax,ds:0xca364d70
  41667c:	sbb    ebx,DWORD PTR [ebp+0x7dd85fea]
  416682:	ds stc 
  416684:	lahf   
  416685:	ins    DWORD PTR es:[edi],dx
  416686:	test   al,0xef
  416688:	setge  BYTE PTR [ebx]
  41668b:	fs push 0xecfe76a1
  416691:	call   0xbf1b:0xde18fffe
  416698:	shr    DWORD PTR [edx+edi*4],1
  41669b:	scas   eax,DWORD PTR es:[edi]
  41669c:	sbb    al,0x80
  41669e:	repnz (bad) 
  4166a0:	mov    edi,0x2300c3de
  4166a5:	std    
  4166a6:	or     al,0xe9
  4166a8:	lahf   
  4166a9:	add    al,0xcd
  4166ab:	cs (bad) 
  4166ae:	sti    
  4166af:	fsubr  st(2),st
  4166b1:	adc    eax,0x1d0eb160
  4166b6:	mov    cl,0xae
  4166b8:	jp     0x4166aa
  4166ba:	iret   
  4166bb:	ret    
  4166bc:	dec    ebp
  4166bd:	pushf  
  4166be:	cli    
  4166bf:	cwde   
  4166c0:	pusha  
  4166c1:	dec    ebx
  4166c2:	xor    DWORD PTR [ecx],0x7683d51f
  4166c8:	fcomp  DWORD PTR [edi-0x2e]
  4166cb:	clc    
  4166cc:	dec    DWORD PTR [esi]
  4166ce:	push   ebp
  4166cf:	test   al,0x73
  4166d1:	lods   eax,DWORD PTR ds:[esi]
  4166d2:	jge    0x416667
  4166d4:	das    
  4166d5:	sbb    eax,0xe1715e3e
  4166da:	pop    ebp
  4166db:	loope  0x4166ec
  4166dd:	mov    al,0x0
  4166df:	jmp    FWORD PTR [edi+0x40]
  4166e2:	hlt    
  4166e3:	(bad)  
  4166e4:	enter  0x1b97,0xf8
  4166e8:	sbb    eax,0xcb5dbcca
  4166ed:	stc    
  4166ee:	mov    dl,0x6a
  4166f0:	add    ecx,DWORD PTR [edi+0x24ed6fe1]
  4166f6:	cmp    dl,BYTE PTR [ecx+edx*1+0x2a]
  4166fa:	inc    edi
  4166fb:	adc    DWORD PTR [esi-0x7372e50e],eax
  416701:	mov    BYTE PTR [edi],cl
  416703:	sbb    DWORD PTR [ebp+0x70ef6cf5],esp
  416709:	lock push cs
  41670b:	out    dx,al
  41670c:	mov    ah,0x8d
  41670e:	inc    esi
  41670f:	and    eax,0x5a71da17
  416714:	in     eax,dx
  416715:	nop
  416716:	xchg   edx,eax
  416717:	fwait
  416718:	cld    
  416719:	(bad)  
  41671a:	and    edi,DWORD PTR [esp+edi*4]
  41671d:	std    
  41671e:	and    dh,BYTE PTR [ebx]
  416720:	mov    ebp,0x23183ca4
  416725:	add    eax,DWORD PTR [edx+0x241e5dc2]
  41672b:	iret   
  41672c:	sbb    dl,al
  41672e:	mov    BYTE PTR [esi-0x3244750e],ch
  416734:	sub    eax,0x9228ea85
  416739:	xor    dh,dh
  41673b:	xor    al,0x25
  41673d:	aas    
  41673e:	push   0xfffffff8
  416740:	in     eax,0xd4
  416742:	les    esi,FWORD PTR [ebx+0x7b]
  416745:	cmp    BYTE PTR [edx],dl
  416747:	scas   eax,DWORD PTR es:[edi]
  416748:	cmp    BYTE PTR [eax+0x3a],bl
  41674b:	loop   0x4167a1
  41674d:	inc    ebp
  41674e:	jnp    0x4167b2
  416750:	outs   dx,BYTE PTR ds:[esi]
  416751:	jmp    0x13a9ae0d
  416756:	xor    bl,BYTE PTR [eax-0x746c8d6b]
  41675c:	clc    
  41675d:	push   0xffffffda
  41675f:	scas   al,BYTE PTR es:[edi]
  416760:	mov    ds:0xeb513a9,eax
  416765:	add    BYTE PTR [eax],dl
  416767:	inc    eax
  416768:	sub    eax,0xe874b17a
  41676d:	jno    0x4167cd
  41676f:	mov    al,0x60
  416771:	xor    eax,0x3246011d
  416776:	pop    eax
  416777:	push   0x3c
  416779:	data16 cmp al,0x48
  41677c:	in     al,0x1e
  41677e:	mov    ebp,0xf0b0e060
  416783:	inc    eax
  416784:	pop    edx
  416785:	call   0x8bc35504
  41678a:	cmp    dl,BYTE PTR [esp+ebx*1]
  41678d:	push   ecx
  41678e:	sbb    al,0x3d
  416790:	(bad)  
  416791:	ret    
  416792:	pushf  
  416793:	imul   esp,DWORD PTR [ecx-0x76a1eef0],0x60303697
  41679d:	pop    ss
  41679e:	pop    ebx
  41679f:	push   ebp
  4167a0:	mov    al,ds:0x3f9aba8b
  4167a5:	push   esp
  4167a6:	push   ebp
  4167a7:	loopne 0x416734
  4167a9:	sub    bh,BYTE PTR [edx+ebp*4+0x5d]
  4167ad:	mov    edx,0xfda60a0a
  4167b2:	dec    ebx
  4167b3:	in     al,dx
  4167b4:	add    cx,WORD PTR [eax+0x6cef0628]
  4167bb:	ds mov edi,0xde5aa8d
  4167c1:	call   0x3aa2:0x819d5d40
  4167c8:	sar    DWORD PTR [ebx-0x7fca7ffa],1
  4167ce:	cmp    ah,BYTE PTR [ebp+0x1c]
  4167d1:	rcl    BYTE PTR [ebx],0xf6
  4167d4:	cli    
  4167d5:	lock cmp eax,0xf600a6f8
  4167db:	inc    esp
  4167dc:	call   0x67f7706a
  4167e1:	push   edx
  4167e2:	inc    ecx
  4167e3:	xor    ebx,DWORD PTR [ebx]
  4167e5:	mov    dl,BYTE PTR [eax]
  4167e7:	mov    bh,0x88
  4167e9:	es sub eax,0x76c6734d
  4167ef:	add    BYTE PTR [edi+ebp*8-0x64],bl
  4167f3:	mov    bl,0x19
  4167f5:	mov    ch,0xa6
  4167f7:	fsubr  QWORD PTR [ebp-0x2284433f]
  4167fd:	pop    ebp
  4167fe:	xor    al,0xd8
  416800:	sub    al,0xdb
  416802:	mov    ss,edx
  416804:	sub    BYTE PTR [ecx-0x338e4824],dh
  41680a:	cs add al,0x1b
  41680d:	cmp    ah,bh
  41680f:	sub    BYTE PTR [eax+eiz*1],0xa5
  416813:	add    DWORD PTR [ebx+0x49],ebx
  416816:	sbb    eax,0xb2cf98ab
  41681b:	mov    dh,0xb8
  41681d:	hlt    
  41681e:	sub    esp,DWORD PTR [edi-0x7fc035ed]
  416824:	mov    cl,0xd8
  416826:	ins    DWORD PTR es:[edi],dx
  416827:	retf   
  416828:	sub    DWORD PTR [ebx-0x75],edx
  41682b:	mov    dl,0x11
  41682d:	mov    ?,edx
  41682f:	mov    ecx,0xf4ed8683
  416834:	sub    al,0xd1
  416836:	xor    cl,BYTE PTR [eax+0x706e5476]
  41683c:	js     0x41684d
  41683e:	xor    ch,BYTE PTR [edi+0x37475b63]
  416844:	or     BYTE PTR [edx-0x46ac046c],bl
  41684a:	dec    ebp
  41684b:	or     DWORD PTR [edx],edi
  41684d:	add    cl,BYTE PTR [ebx]
  41684f:	js     0x416879
  416851:	test   al,0xa1
  416853:	mov    ecx,0xb8ff460a
  416858:	push   cs
  416859:	dec    edx
  41685a:	jo     0x416886
  41685c:	inc    ebp
  41685d:	sahf   
  41685e:	mov    ds:0x14509d1f,al
  416863:	add    DWORD PTR [ebp-0x7d],edx
  416866:	dec    edx
  416867:	pcmpeqw mm6,QWORD PTR [edx-0x7a]
  41686b:	xchg   esp,eax
  41686c:	push   eax
  41686d:	jnp    0x41685c
  41686f:	inc    eax
  416870:	fmul   st(1),st
  416872:	cld    
  416873:	mov    ecx,es
  416875:	mov    dh,BYTE PTR [edx]
  416877:	mov    al,0x27
  416879:	aaa    
  41687a:	jae    0x4168c8
  41687c:	sub    DWORD PTR [ebx-0x538a9f96],ecx
  416882:	lds    ebx,FWORD PTR [ebp-0x710e10c4]
  416888:	stos   BYTE PTR es:[edi],al
  416889:	sub    esi,DWORD PTR [ecx]
  41688b:	enter  0xa82d,0xc0
  41688f:	cmp    cl,BYTE PTR [bx-0x7df6]
  416894:	mov    bl,0x75
  416896:	inc    edi
  416897:	mov    cl,0x20
  416899:	(bad)  
  41689a:	icebp  
  41689b:	cld    
  41689c:	ja     0x416915
  41689e:	jb     0x416917
  4168a0:	add    esi,DWORD PTR fs:0x676568d2
  4168a7:	test   al,0x9a
  4168a9:	mov    ah,0x1c
  4168ab:	add    BYTE PTR [edx],bh
  4168ad:	jl     0x416850
  4168af:	dec    ecx
  4168b0:	or     eax,0x5b877042
  4168b5:	call   DWORD PTR [esi-0x23fe4053]
  4168bb:	sbb    eax,0x14501e42
  4168c0:	xor    DWORD PTR [ebx-0x15c8877d],eax
  4168c6:	dec    eax
  4168c7:	dec    eax
  4168c8:	repz sbb esp,ebx
  4168cb:	jne    0x416875
  4168cd:	data16 mov bh,0xba
  4168d0:	xchg   BYTE PTR [edx+0x45],bh
  4168d3:	jne    0x4168b6
  4168d5:	jmp    0x3e6a:0x19874725
  4168dc:	int3   
  4168dd:	clc    
  4168de:	dec    esp
  4168df:	jbe    0x4168d9
  4168e1:	and    DWORD PTR [edi-0x49a9a649],0xffffffed
  4168e8:	push   cs
  4168e9:	inc    ebp
  4168ea:	scas   eax,DWORD PTR es:[edi]
  4168eb:	repnz aaa 
  4168ed:	shl    DWORD PTR [esi],0x58
  4168f0:	mov    ?,WORD PTR [ecx-0x2bc77917]
  4168f6:	ss mov bh,0x87
  4168f9:	pop    es
  4168fa:	adc    BYTE PTR [esi+ebp*4],ch
  4168fd:	fwait
  4168fe:	ss retf 0xd134
  416902:	cmp    BYTE PTR ds:[eax-0x67a67161],ah
  416909:	add    bl,BYTE PTR [edx-0x4bfe5f47]
  41690f:	or     dl,BYTE PTR [edx]
  416911:	or     al,BYTE PTR [ebx]
  416913:	cmp    BYTE PTR [edx],bl
  416915:	mov    ch,0xef
  416917:	retw   0x58ec
  41691b:	cmp    eax,0xb3ea8ad4
  416920:	jnp    0x4168eb
  416922:	jl     0x416949
  416924:	cmp    ch,cl
  416926:	mov    BYTE PTR ds:[ecx-0x41],bl
  41692a:	out    0xd5,al
  41692c:	int3   
  41692d:	push   0x55c37fa7
  416932:	ss jo  0x4169a2
  416935:	jae    0x4169b5
  416937:	js     0x4168c4
  416939:	mov    esp,0x59fd2879
  41693e:	push   ebp
  41693f:	iret   
  416940:	mov    dl,0x8b
  416942:	push   esi
  416943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416944:	sub    ebx,DWORD PTR [ebp+0x3935234a]
  41694a:	or     eax,ebp
  41694c:	pop    ss
  41694d:	mov    dh,BYTE PTR [ecx+0x331ae29c]
  416953:	ds push 0xffffffee
  416956:	clc    
  416957:	and    eax,0x1d480eef
  41695c:	jl     0x4169c3
  41695e:	mov    esp,0xe683f20b
  416963:	sbb    al,0x39
  416965:	stos   DWORD PTR es:[edi],eax
  416966:	mov    ebp,0x35f0250e
  41696b:	lea    edi,[edx-0x78]
  41696e:	sbb    al,BYTE PTR [edx]
  416970:	not    BYTE PTR [ecx+0x50c08e59]
  416976:	xor    ch,BYTE PTR [eax+0x4b]
  416979:	int3   
  41697a:	mov    edi,0x841368df
  41697f:	scas   al,BYTE PTR es:[edi]
  416980:	mov    WORD PTR [eax+0x3f],ds
  416983:	sbb    al,0x73
  416985:	mov    edx,0x67529ea9
  41698a:	cmp    bl,BYTE PTR [eax-0x1f3381b9]
  416990:	push   0x6eb6cb5c
  416995:	jno    0x4169b6
  416997:	jne    0x4169b2
  416999:	cmp    dl,BYTE PTR [ebx]
  41699b:	dec    ebx
  41699c:	sbb    ch,BYTE PTR [ebx]
  41699e:	sub    DWORD PTR [ebx+0x3f84a0d4],eax
  4169a4:	jmp    0x43aa841d
  4169a9:	ret    
  4169aa:	js     0x416976
  4169ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169ad:	fld    DWORD PTR [ebp-0x9]
  4169b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169b1:	rdpmc  
  4169b3:	js     0x416a20
  4169b5:	cmp    ecx,0xffffffbf
  4169b8:	mov    eax,0x43b08749
  4169bd:	out    dx,al
  4169be:	dec    esp
  4169bf:	fisttp QWORD PTR [ecx+0x245a4c0a]
  4169c5:	loop   0x4169b0
  4169c7:	cld    
  4169c8:	fidivr DWORD PTR [edx+0x78]
  4169cb:	mov    dh,0xe
  4169cd:	push   cs
  4169ce:	addr16 (bad) 
  4169d0:	in     eax,dx
  4169d1:	or     BYTE PTR [edx+0x3f13bba3],0x46
  4169d8:	inc    edi
  4169d9:	push   eax
  4169da:	sti    
  4169db:	fcomp  QWORD PTR [edi]
  4169dd:	arpl   WORD PTR [ecx+0x6a4c3f6f],di
  4169e3:	xchg   esp,eax
  4169e4:	fild   DWORD PTR [ecx-0x72371fcc]
  4169ea:	stos   DWORD PTR es:[edi],eax
  4169eb:	mov    ecx,0xc5aa1f35
  4169f0:	mov    edi,0x98bd2a9a
  4169f5:	xor    edx,DWORD PTR [ecx]
  4169f7:	push   0x8a3c4b13
  4169fc:	sbb    BYTE PTR [ebp+eiz*2+0x39bfeab2],dh
  416a03:	je     0x4169d5
  416a05:	sub    dh,ah
  416a07:	aas    
  416a08:	push   ebp
  416a09:	ror    WORD PTR [ecx+ecx*4+0x1b67ea8f],0xec
  416a12:	jle    0x4169ef
  416a14:	xor    cl,BYTE PTR [edi+0x4bd20a8a]
  416a1a:	into   
  416a1b:	adc    BYTE PTR [eax],bl
  416a1d:	and    esp,DWORD PTR [edi+0x68]
  416a20:	xchg   edi,eax
  416a21:	out    0xb5,al
  416a23:	sbb    BYTE PTR [eax-0x26ad88fc],ch
  416a29:	xchg   BYTE PTR [edx],cl
  416a2b:	add    BYTE PTR [esi],ah
  416a2d:	push   edi
  416a2e:	inc    ebp
  416a2f:	adc    BYTE PTR [esi+0x2083e72],cl
  416a35:	cwde   
  416a36:	mov    cs,WORD PTR [ebp-0x58]
  416a39:	daa    
  416a3a:	add    al,0xca
  416a3c:	dec    esi
  416a3d:	and    al,0xba
  416a3f:	ret    0xb44
  416a42:	xchg   esi,eax
  416a43:	mov    bl,0xe3
  416a45:	fnstenv [edi]
  416a47:	cwde   
  416a48:	sti    
  416a49:	movaps xmm6,XMMWORD PTR [ebp+0x38]
  416a4d:	xchg   edi,eax
  416a4e:	call   0x5e24b101
  416a53:	cdq    
  416a54:	adc    BYTE PTR [edx+0x50efa3c7],cl
  416a5a:	mov    edx,0x91033c53
  416a5f:	retf   
  416a60:	and    cl,BYTE PTR [edx+ebp*8-0x149eed86]
  416a67:	out    0x1a,eax
  416a69:	cmp    cl,BYTE PTR [ecx-0x27]
  416a6c:	loope  0x416a00
  416a6e:	int3   
  416a6f:	stc    
  416a70:	mov    edi,0x86352718
  416a75:	fimul  DWORD PTR [edi+edi*1-0x6a]
  416a79:	lea    ebx,[edx+0x7c]
  416a7c:	adc    eax,0x1293b1da
  416a81:	mov    ch,0x2e
  416a83:	inc    ebx
  416a84:	push   esp
  416a85:	inc    ecx
  416a86:	pop    ebx
  416a87:	retf   
  416a88:	mov    al,ds:0x335e4a8a
  416a8d:	pusha  
  416a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a8f:	inc    edx
  416a90:	or     ecx,edi
  416a92:	xor    al,0xf8
  416a94:	sub    dl,BYTE PTR [eax+esi*2]
  416a97:	inc    edx
  416a98:	jle    0x416a53
  416a9a:	adc    ebx,DWORD PTR [ebp-0x48f3e43c]
  416aa0:	jmp    0x416a70
  416aa2:	and    eax,0x472a0d4b
  416aa7:	jno    0x416adb
  416aa9:	outs   dx,BYTE PTR ds:[esi]
  416aaa:	mov    ch,0x52
  416aac:	pushf  
  416aad:	shl    BYTE PTR [edx+0xe],1
  416ab0:	mov    al,0xcb
  416ab2:	sub    al,0xf4
  416ab4:	xchg   DWORD PTR [ebx+0x664bbee2],ebx
  416aba:	into   
  416abb:	ss inc ebp
  416abd:	out    dx,al
  416abe:	dec    eax
  416abf:	test   al,0x1a
  416ac1:	les    esp,FWORD PTR [ebp+0x20]
  416ac4:	aas    
  416ac5:	jb     0x416b12
  416ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ac8:	dec    ebp
  416ac9:	inc    ebp
  416aca:	rol    BYTE PTR [esi-0x76],cl
  416acd:	stos   BYTE PTR es:[edi],al
  416ace:	aas    
  416acf:	inc    edx
  416ad0:	and    al,0xec
  416ad2:	fild   WORD PTR [ecx]
  416ad4:	and    dh,BYTE PTR [edi+edi*1]
  416ad7:	dec    esi
  416ad8:	add    BYTE PTR [ecx],dl
  416ada:	or     al,BYTE PTR [ebp+0x44da9b62]
  416ae0:	cld    
  416ae1:	mov    ecx,0xa8373394
  416ae6:	ss jb  0x416aa7
  416ae9:	(bad)  
  416aea:	mov    BYTE PTR ss:[edi-0x1766cac2],dl
  416af1:	jl     0x416a76
  416af3:	mov    bl,0xaa
  416af5:	mov    ebp,0x3bcf889c
  416afa:	add    BYTE PTR [edi],al
  416afc:	mov    esp,0x76ac1d7c
  416b01:	mov    ?,WORD PTR [edi-0x18b63876]
  416b07:	sbb    eax,0x221a19
  416b0c:	cli    
  416b0d:	xor    ah,0x86
  416b10:	jle    0x416a9c
  416b12:	push   0xfffffffe
  416b14:	std    
  416b15:	inc    eax
  416b16:	fisttp WORD PTR [edi+0x5b]
  416b19:	enter  0x2f27,0x80
  416b1d:	sbb    BYTE PTR ds:[ebp+0x1115ff3e],dh
  416b24:	pop    ebx
  416b25:	mov    ebp,0x6caf39a
  416b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b2b:	dec    esp
  416b2c:	xchg   ecx,eax
  416b2d:	adc    ecx,DWORD PTR [ecx-0x47]
  416b30:	ins    BYTE PTR es:[edi],dx
  416b31:	mov    dh,0x67
  416b33:	cmp    BYTE PTR [edx+0x29e9bbb7],al
  416b39:	mov    al,BYTE PTR [edi-0x75862c02]
  416b3f:	and    al,0xe
  416b41:	dec    esi
  416b42:	xchg   ebp,eax
  416b43:	pushf  
  416b44:	sbb    al,0xe4
  416b46:	fld    QWORD PTR [esi+0x1a]
  416b49:	xchg   ecx,eax
  416b4a:	daa    
  416b4b:	pop    esi
  416b4c:	inc    esi
  416b4d:	xor    BYTE PTR [esi],bh
  416b4f:	int3   
  416b50:	mov    gs,ebp
  416b52:	lock inc esp
  416b54:	js     0x416adc
  416b56:	push   0x1e
  416b58:	inc    edi
  416b59:	fwait
  416b5a:	sbb    edi,ebp
  416b5c:	xchg   ebx,eax
  416b5d:	cmp    BYTE PTR [edx-0x18],al
  416b60:	inc    ebp
  416b61:	mov    al,0xb8
  416b63:	icebp  
  416b64:	call   FWORD PTR [ecx]
  416b66:	mov    bl,0xaa
  416b68:	jae    0x416af4
  416b6a:	jp     0x416bbe
  416b6c:	jl     0x416be3
  416b6e:	mov    ebx,0x3c050bee
  416b73:	mov    BYTE PTR [esi+edi*4],cl
  416b76:	pop    edx
  416b77:	call   0x467:0xe4c13ef8
  416b7e:	xchg   ebx,eax
  416b7f:	in     eax,dx
  416b80:	lods   eax,DWORD PTR ds:[esi]
  416b81:	push   ebx
  416b82:	dec    eax
  416b83:	aad    0x91
  416b85:	lock inc edi
  416b87:	mov    BYTE PTR [ecx-0x79],bh
  416b8a:	aas    
  416b8b:	xor    al,0x1b
  416b8d:	push   cs
  416b8e:	inc    esp
  416b8f:	ret    0x701d
  416b92:	in     eax,0x5f
  416b94:	outs   dx,DWORD PTR ds:[esi]
  416b95:	pop    edx
  416b96:	jno    0x416b36
  416b98:	psubsb mm2,QWORD PTR [edi]
  416b9b:	cmp    al,0x49
  416b9d:	jne    0x416c03
  416b9f:	cmp    BYTE PTR [ebx-0x25],bl
  416ba2:	cmp    al,0x98
  416ba4:	neg    BYTE PTR [ebp-0x55239e19]
  416baa:	and    DWORD PTR [edi-0x78],eax
  416bad:	inc    esp
  416bae:	cmp    eax,0x12915020
  416bb3:	mov    dl,0x33
  416bb5:	loop   0x416c25
  416bb7:	test   al,0xc
  416bb9:	(bad)  
  416bba:	jl     0x416ba5
  416bbc:	jbe    0x416bf9
  416bbe:	xchg   esp,eax
  416bbf:	mov    edx,0x7e04423c
  416bc4:	addps  xmm7,XMMWORD PTR [edi]
  416bc7:	push   0x175deb3f
  416bcc:	push   es
  416bcd:	aam    0x3f
  416bcf:	clc    
  416bd0:	adc    edx,edi
  416bd2:	sahf   
  416bd3:	add    al,bh
  416bd5:	cmp    DWORD PTR [esi+0x6b90bbbe],esi
  416bdb:	mov    cl,0x89
  416bdd:	neg    edi
  416bdf:	sti    
  416be0:	mov    ch,BYTE PTR [ebx+0x2f]
  416be3:	(bad)  
  416be4:	mov    ah,0xf8
  416be6:	mov    ecx,0x1506f1b3
  416beb:	fstp   QWORD PTR [edi-0x2053457c]
  416bf1:	pop    esi
  416bf2:	dec    edi
  416bf3:	out    0xba,eax
  416bf5:	and    eax,0xc3f338a1
  416bfa:	aaa    
  416bfb:	push   0x67917981
  416c00:	sbb    BYTE PTR [edx],cl
  416c02:	cmp    DWORD PTR [edx+0x78625807],esi
  416c08:	rcr    DWORD PTR [edx],0x82
  416c0b:	not    BYTE PTR [eax+ecx*2+0x20]
  416c0f:	shl    esi,0x61
  416c12:	or     BYTE PTR [ebp-0x7ecf4ff9],bh
  416c18:	js     0x416ba8
  416c1a:	aad    0xba
  416c1c:	ins    DWORD PTR es:[edi],dx
  416c1d:	sti    
  416c1e:	imul   esi,ecx,0xeca9bc04
  416c24:	or     al,0x86
  416c26:	push   es
  416c27:	outs   dx,DWORD PTR ds:[esi]
  416c28:	mov    eax,ds:0x88e7d318
  416c2d:	mov    bh,0x25
  416c2f:	lods   eax,DWORD PTR ds:[esi]
  416c30:	cli    
  416c31:	retf   
  416c32:	das    
  416c33:	outs   dx,BYTE PTR ds:[esi]
  416c34:	xor    ch,BYTE PTR [ebp+0x33]
  416c37:	pop    ebp
  416c38:	fidivr WORD PTR [esp+eiz*2-0x33]
  416c3c:	sbb    eax,0x8d1ee052
  416c41:	mov    ebx,0x13387d4b
  416c46:	repnz mov cl,0xad
  416c49:	mov    ah,BYTE PTR [ebp-0xe]
  416c4c:	adc    ebx,DWORD PTR [edx]
  416c4e:	jbe    0x416cb1
  416c50:	jmp    0x7ef64744
  416c55:	sbb    DWORD PTR [ebx-0x54],edi
  416c58:	ret    0x9a8c
  416c5b:	xchg   ecx,eax
  416c5c:	lods   al,BYTE PTR ds:[esi]
  416c5d:	mov    esp,0x30ebc6c4
  416c62:	ds test al,0x8b
  416c65:	clc    
  416c66:	xchg   DWORD PTR [edx+0x8],edx
  416c69:	inc    eax
  416c6a:	dec    edx
  416c6b:	scas   eax,DWORD PTR es:[edi]
  416c6c:	push   es
  416c6d:	out    dx,al
  416c6e:	xchg   ebp,eax
  416c6f:	jg     0x416c7e
  416c71:	sbb    bh,dh
  416c73:	xchg   ecx,eax
  416c74:	adc    eax,0x9eb676de
  416c79:	aaa    
  416c7a:	xchg   DWORD PTR [ebp+0x243f0a15],eax
  416c80:	lods   eax,DWORD PTR ds:[esi]
  416c81:	scas   eax,DWORD PTR es:[edi]
  416c82:	inc    esp
  416c83:	pushf  
  416c84:	(bad)  
  416c85:	cmp    bl,BYTE PTR [ebx-0x69]
  416c88:	(bad)  
  416c89:	fild   WORD PTR [edx+ebp*2]
  416c8c:	dec    ecx
  416c8d:	sar    BYTE PTR [ebx],1
  416c8f:	jo     0x416cf9
  416c91:	(bad)  
  416c92:	push   ebx
  416c93:	mov    edx,0x5d4262
  416c98:	add    BYTE PTR [ebp-0x36e5c6d2],ch
  416c9e:	sbb    al,0xf9
  416ca0:	les    edi,FWORD PTR [ebx+0x3a]
  416ca3:	test   bl,bh
  416ca5:	out    0x86,eax
  416ca7:	xor    dl,al
  416ca9:	int    0xa9
  416cab:	je     0x416cce
  416cad:	sbb    dh,cl
  416caf:	cs jg  0x416c35
  416cb2:	cmp    dl,0xd
  416cb5:	dec    edx
  416cb6:	ds mov cl,0x73
  416cb9:	pop    ebx
  416cba:	jno    0x416cf6
  416cbc:	cdq    
  416cbd:	fcom   QWORD PTR [ebx]
  416cbf:	sub    BYTE PTR [ebx-0x77],ah
  416cc2:	stos   BYTE PTR es:[edi],al
  416cc3:	xchg   BYTE PTR [esi],dl
  416cc5:	idiv   DWORD PTR [esi+0x633d3940]
  416ccb:	mov    eax,0xbac9bee9
  416cd0:	fimul  DWORD PTR [edi]
  416cd2:	push   edi
  416cd3:	aam    0x87
  416cd5:	mov    esi,0xb41869aa
  416cda:	jle    0x416c60
  416cdc:	mov    eax,0x3a405bc
  416ce1:	in     eax,dx
  416ce2:	jns    0x416d1f
  416ce4:	mov    esi,0x9bbadf83
  416ce9:	shl    DWORD PTR [edx],cl
  416ceb:	mov    WORD PTR [ecx*4+0x23322ca],ds
  416cf2:	pop    DWORD PTR [ebp+0x83f65f5]
  416cf8:	pop    ebp
  416cf9:	jg     0x416d46
  416cfb:	push   ecx
  416cfc:	clc    
  416cfd:	ret    0xae6c
  416d00:	std    
  416d01:	dec    ebp
  416d02:	sbb    ebp,DWORD PTR [edx]
  416d04:	push   ss
  416d05:	jmp    0x3fa:0x7d082ee9
  416d0c:	stos   DWORD PTR es:[edi],eax
  416d0d:	push   ecx
  416d0e:	add    bl,BYTE PTR ds:0xbfda736c
  416d14:	js     0x416d4f
  416d16:	and    DWORD PTR [esi-0x2a7f25f2],esi
  416d1c:	pushf  
  416d1d:	mov    eax,0x452bfb4f
  416d22:	xchg   ebp,eax
  416d23:	hlt    
  416d24:	cli    
  416d25:	mov    ds,edx
  416d27:	jmp    0x1c8494b6
  416d2c:	aas    
  416d2d:	jbe    0x416ce7
  416d2f:	outs   dx,DWORD PTR ds:[esi]
  416d30:	adc    cl,cl
  416d32:	jp     0x416ccf
  416d34:	and    DWORD PTR [eax-0x728ffbba],0x6358730a
  416d3e:	inc    esp
  416d3f:	fst    DWORD PTR [eax+ecx*8]
  416d42:	ss cwde 
  416d44:	inc    edi
  416d45:	test   ah,al
  416d47:	mov    ebp,0xb3dcf5d8
  416d4c:	pop    edx
  416d4d:	aad    0x5d
  416d4f:	pop    ss
  416d50:	adc    al,0x2a
  416d52:	sub    bl,ah
  416d54:	aad    0x31
  416d56:	mov    dh,0xf7
  416d58:	inc    ebx
  416d59:	test   BYTE PTR [ebp+edx*1-0x4a],al
  416d5d:	(bad)  
  416d5e:	jp     0x416da2
  416d60:	pop    ebx
  416d61:	mov    ds:0x271a8ca2,al
  416d66:	xor    DWORD PTR [eax],edi
  416d68:	in     eax,0xbf
  416d6a:	pop    edi
  416d6b:	mov    ds:0xa8773d68,eax
  416d70:	daa    
  416d71:	aas    
  416d72:	cmp    DWORD PTR [edx+edx*1],ebp
  416d75:	mov    cl,bh
  416d77:	fdiv   DWORD PTR [edi]
  416d79:	clc    
  416d7a:	fadd   QWORD PTR [eax+0x36308f39]
  416d80:	lock xchg DWORD PTR [edx-0xa],ebp
  416d84:	pop    esp
  416d85:	sub    bh,BYTE PTR [esi+0x3a33c30d]
  416d8b:	enter  0x90d2,0xc5
  416d8f:	dec    ecx
  416d90:	fcomp  DWORD PTR [edx+eax*1-0x4c]
  416d94:	push   ss
  416d95:	add    ecx,eax
  416d97:	loopne 0x416de9
  416d99:	sahf   
  416d9a:	out    0xc7,eax
  416d9c:	adc    bl,ah
  416d9e:	shr    BYTE PTR [esi-0x6bd1801f],cl
  416da4:	dec    esi
  416da5:	pop    ecx
  416da6:	scas   al,BYTE PTR es:[edi]
  416da7:	and    al,0xef
  416da9:	(bad)  
  416daa:	in     al,0xd2
  416dac:	stos   DWORD PTR es:[edi],eax
  416dad:	mov    ch,BYTE PTR [edx-0x36]
  416db0:	setp   BYTE PTR [edx+eax*4-0x46f6b0a9]
  416db8:	icebp  
  416db9:	les    ecx,FWORD PTR [esi+0x4a16f8be]
  416dbf:	out    0xa9,eax
  416dc1:	and    bh,BYTE PTR [edx]
  416dc3:	mov    BYTE PTR [edi],dl
  416dc5:	jmp    0x3eb4:0xb31a6256
  416dcc:	lea    edx,[ecx]
  416dce:	sbb    al,0x1d
  416dd0:	stos   BYTE PTR es:[edi],al
  416dd1:	lahf   
  416dd2:	jmp    0x782:0xae1d7774
  416dd9:	lea    ebx,[ebp+0x5c4b7893]
  416ddf:	aaa    
  416de0:	dec    esi
  416de1:	xchg   BYTE PTR [esi+eiz*1+0x26e07fff],ah
  416de8:	enter  0xfad9,0x7
  416dec:	or     al,BYTE PTR [eax+0x42de5996]
  416df2:	ds dec eax
  416df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416df5:	xor    al,0x49
  416df7:	(bad)  
  416df8:	aas    
  416df9:	ins    DWORD PTR es:[edi],dx
  416dfa:	jo     0x416da0
  416dfc:	cmp    BYTE PTR [edi],ch
  416dfe:	and    ah,BYTE PTR [edi+0x6f2d4213]
  416e04:	mov    al,0x35
  416e06:	xor    ebx,0xffffffd2
  416e09:	shl    DWORD PTR [ecx],1
  416e0b:	enter  0xe925,0x86
  416e0f:	dec    ecx
  416e10:	scas   eax,DWORD PTR es:[edi]
  416e11:	add    cl,BYTE PTR [eax+0x48ec5e1f]
  416e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e18:	sub    al,BYTE PTR [ebx+0xbfa6dfc]
  416e1e:	repz ds cdq 
  416e21:	ret    0x5c37
  416e24:	arpl   WORD PTR [ebx+ecx*2+0x73],sp
  416e28:	or     al,0xa
  416e2a:	(bad)  
  416e2b:	shr    BYTE PTR [ebp-0x63],0x14
  416e2f:	imul   esp,ebp,0x929100fa
  416e35:	lds    esp,FWORD PTR [edx+0x6d]
  416e38:	dec    edi
  416e39:	dec    ecx
  416e3a:	fcompp 
  416e3c:	sbb    BYTE PTR [ecx],dl
  416e3e:	inc    edx
  416e3f:	mov    dh,0x96
  416e41:	aam    0x67
  416e43:	mov    dl,0xc
  416e45:	stos   BYTE PTR es:[edi],al
  416e46:	nop
  416e47:	ins    BYTE PTR es:[edi],dx
  416e48:	xchg   esp,eax
  416e49:	inc    edx
  416e4a:	xchg   edx,eax
  416e4b:	leave  
  416e4c:	fs jp  0x416e3e
  416e4f:	sub    DWORD PTR [ecx],esp
  416e51:	test   DWORD PTR [edx+0x3f],edi
  416e54:	xor    DWORD PTR [eax+0x7057cfd3],edx
  416e5a:	cmp    al,0x68
  416e5c:	cli    
  416e5d:	sbb    bl,ch
  416e5f:	adc    DWORD PTR ds:0x2f1781e0,edi
  416e65:	xor    eax,0x9230a4a3
  416e6a:	cmp    eax,0x917a0e84
  416e6f:	pop    ds
  416e70:	mov    al,0x89
  416e72:	cld    
  416e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e74:	hlt    
  416e75:	mov    esp,0xccca0f6
  416e7a:	adc    DWORD PTR [esi+0x503f679f],esp
  416e80:	mov    al,ds:0x7116d4ac
  416e85:	pop    ecx
  416e86:	dec    ecx
  416e87:	mov    eax,0x93660dc2
  416e8c:	mov    eax,0x4b80481
  416e91:	mov    BYTE PTR [ebx],ch
  416e93:	inc    esp
  416e94:	aas    
  416e95:	sub    eax,0xee9554b8
  416e9a:	outs   dx,BYTE PTR cs:[esi]
  416e9c:	push   ds
  416e9d:	test   BYTE PTR [esi+edi*1-0x484d89e8],bh
  416ea4:	push   esi
  416ea5:	push   ecx
  416ea6:	ds cmp al,0x14
  416ea9:	sbb    cl,cl
  416eab:	jmp    0x726a3101
  416eb0:	xchg   edx,eax
  416eb1:	mov    bl,0x68
  416eb3:	xor    al,0xe3
  416eb5:	into   
  416eb6:	fcomp  QWORD PTR [ebp+0x48768b8a]
  416ebc:	xchg   ebx,eax
  416ebd:	jnp    0x416ee9
  416ebf:	jb     0x416e9a
  416ec1:	add    eax,0x813aa858
  416ec6:	mov    ebx,?
  416ec8:	popa   
  416ec9:	mov    ch,0x35
  416ecb:	mov    ebx,0x563a81ed
  416ed0:	cdq    
  416ed1:	pop    edx
  416ed2:	sbb    eax,0x34b3a190
  416ed7:	dec    eax
  416ed8:	sub    eax,0x8d176f9
  416edd:	aas    
  416ede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416edf:	scas   eax,DWORD PTR es:[edi]
  416ee0:	cmp    eax,0x1918bd9c
  416ee5:	sub    cl,al
  416ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ee8:	out    0xc4,al
  416eea:	into   
  416eeb:	repnz cmp dl,bh
  416eee:	arpl   cx,cx
  416ef0:	add    dh,BYTE PTR [eax-0x7dab1e25]
  416ef6:	cmp    bh,al
  416ef8:	add    eax,0xe34f2a0d
  416efd:	xchg   edi,eax
  416efe:	adc    esp,ebx
  416f00:	mov    BYTE PTR [esi-0x4e],0x6c
  416f04:	dec    ebx
  416f05:	in     al,dx
  416f06:	inc    esi
  416f07:	sub    al,0x85
  416f09:	xor    esp,DWORD PTR [ecx+edi*4-0x7d857ab1]
  416f10:	push   esi
  416f11:	out    0xe,eax
  416f13:	pop    ss
  416f14:	mov    bh,0x6b
  416f16:	sub    bh,BYTE PTR [edi]
  416f18:	cmp    ah,BYTE PTR [ebp+0x4a54b8ed]
  416f1e:	icebp  
  416f1f:	jmp    0x3356:0x9f5a1cce
  416f26:	cmp    al,0xc8
  416f28:	pop    edi
  416f29:	int3   
  416f2a:	and    esi,ecx
  416f2c:	add    ebx,ecx
  416f2e:	popa   
  416f2f:	mov    edx,0xb424c728
  416f34:	push   cs
  416f35:	pop    es
  416f36:	in     eax,dx
  416f37:	xchg   edx,eax
  416f38:	pop    edi
  416f39:	jle    0x416fb5
  416f3b:	into   
  416f3c:	sahf   
  416f3d:	ins    DWORD PTR es:[edi],dx
  416f3e:	pop    esp
  416f3f:	ficom  WORD PTR [esi-0x23ebcd0c]
  416f45:	and    eax,0x788b1833
  416f4a:	push   esp
  416f4b:	cmc    
  416f4c:	pop    eax
  416f4d:	or     bl,BYTE PTR [ebp-0x23ce1749]
  416f53:	fadd   DWORD PTR [ebx]
  416f55:	int    0x3b
  416f57:	outs   dx,DWORD PTR ds:[esi]
  416f58:	mov    ebp,0xbff93cce
  416f5d:	xchg   BYTE PTR [esi-0x2580fff],dh
  416f63:	pop    edx
  416f64:	jmp    0x882249e9
  416f69:	lea    edx,[edi+eiz*4+0x46]
  416f6d:	push   DWORD PTR [eax]
  416f6f:	sub    BYTE PTR [edi-0x37a26ac6],ch
  416f75:	adc    edx,ebp
  416f77:	mov    bh,0x88
  416f79:	ret    
  416f7a:	stc    
  416f7b:	jo     0x416f8f
  416f7d:	jp     0x416f26
  416f7f:	ret    
  416f80:	mov    ah,0xa5
  416f82:	add    BYTE PTR [ebx],bh
  416f84:	add    al,0x1
  416f86:	mov    ah,ch
  416f88:	jne    0x416f18
  416f8a:	pop    edx
  416f8b:	xor    esi,ecx
  416f8d:	cmp    bl,BYTE PTR [ebp-0x2d]
  416f90:	(bad)  
  416f91:	rep outs dx,BYTE PTR ds:[esi]
  416f94:	in     al,0x9b
  416f96:	xor    al,BYTE PTR [eax+0x7b4c62f]
  416f9c:	in     eax,dx
  416f9d:	mov    ds:0x8495256b,eax
  416fa2:	fiadd  DWORD PTR [eax-0x5585c5e9]
  416fa8:	push   ds
  416fa9:	(bad)  
  416faa:	sbb    ebx,DWORD PTR cs:[edx+ebx*4-0x56]
  416faf:	jmp    0x64bf2da
  416fb4:	cmp    eax,DWORD PTR [eax]
  416fb6:	cld    
  416fb7:	mov    dh,0xeb
  416fb9:	es mov ah,0xd
  416fbc:	xchg   edx,eax
  416fbd:	jo     0x416ff2
  416fbf:	or     BYTE PTR [edi-0x958c19],ah
  416fc5:	mov    ebx,0xc20c612a
  416fca:	sbb    eax,DWORD PTR [ebx-0x2a]
  416fcd:	push   edi
  416fce:	int    0xeb
  416fd0:	pop    DWORD PTR [ebp-0x40f0f109]
  416fd6:	cmp    ebp,DWORD PTR [eax-0x239d2266]
  416fdc:	hlt    
  416fdd:	or     BYTE PTR [edx],0x93
  416fe0:	lods   eax,DWORD PTR ds:[esi]
  416fe1:	xchg   al,ah
  416fe3:	das    
  416fe4:	mov    ah,0xc8
  416fe6:	ds cwde 
  416fe8:	xor    DWORD PTR [edx+0x1d],edi
  416feb:	outs   dx,BYTE PTR ds:[esi]
  416fec:	pushf  
  416fed:	js     0x416fb5
  416fef:	inc    edi
  416ff0:	mov    eax,ds:0x78883788
  416ff5:	std    
  416ff6:	cmp    al,0xce
  416ff8:	pop    ebp
  416ff9:	repz dec eax
  416ffb:	cmp    BYTE PTR [esi-0x19],bl
  416ffe:	clc    
  416fff:	sbb    eax,0xb4031998
  417004:	adc    ebx,ebp
  417006:	push   cs
  417007:	cwde   
  417008:	xchg   ebp,eax
  417009:	mov    edi,0xf8384464
  41700e:	pop    esi
  41700f:	mov    bl,0x30
  417011:	(bad)  
  417012:	cdq    
  417013:	inc    ecx
  417014:	mov    BYTE PTR [edi-0x34054fdf],dh
  41701a:	inc    edx
  41701b:	mov    esp,0x9b582a15
  417020:	nop
  417021:	adc    al,0x79
  417023:	lods   eax,DWORD PTR ds:[esi]
  417024:	imul   edx,DWORD PTR [esi-0x10f7ba33],0x2a
  41702b:	mov    al,0xb9
  41702d:	jg     0x417035
  41702f:	scas   al,BYTE PTR es:[edi]
  417030:	adc    ebp,DWORD PTR [edx]
  417032:	inc    esp
  417033:	fisubr WORD PTR [edx+0x125dc4e1]
  417039:	add    DWORD PTR [ecx-0x357f9e4f],edx
  41703f:	repz pop ds
  417041:	sti    
  417042:	ret    
  417043:	inc    edi
  417044:	je     0x416fd7
  417046:	cmp    al,0x68
  417048:	repnz xchg edi,eax
  41704a:	scas   eax,DWORD PTR es:[edi]
  41704b:	ret    0xebc8
  41704e:	repz mov ecx,0x90b29f30
  417054:	sbb    cl,BYTE PTR [edx-0x35]
  417057:	jns    0x41707d
  417059:	mov    DWORD PTR [eax+edx*2-0x2a5b215f],edx
  417060:	fwait
  417061:	mov    ebp,DWORD PTR [edx-0x11c7652d]
  417067:	xchg   ebp,eax
  417068:	pop    esi
  417069:	fcomip st,st(5)
  41706b:	popf   
  41706c:	in     al,dx
  41706d:	shl    BYTE PTR ds:0x9f1aef98,1
  417073:	push   0xfffffff4
  417075:	mov    DWORD PTR [edx-0x41],ebx
  417078:	aas    
  417079:	lea    eax,[edx]
  41707b:	sbb    BYTE PTR [ebx-0x65],bh
  41707e:	cmp    eax,0x5d745b18
  417083:	fcomp  QWORD PTR [eax+0x47]
  417086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417087:	mov    bh,0x41
  417089:	lock cmc 
  41708b:	push   ebx
  41708c:	sbb    ebp,DWORD PTR [edx]
  41708e:	dec    edi
  41708f:	les    ecx,FWORD PTR [eax-0x1f]
  417092:	jae    0x4170b7
  417094:	clc    
  417095:	push   0x8e8b8628
  41709a:	sub    ah,bl
  41709c:	push   ss
  41709d:	cmp    BYTE PTR [ebx+0x3dcb5aaa],0xe8
  4170a4:	jbe    0x417059
  4170a6:	nop
  4170a7:	mov    esp,0xb39ee028
  4170ac:	and    eax,DWORD PTR [ecx]
  4170ae:	pop    esi
  4170af:	in     eax,0x33
  4170b1:	sub    al,0x73
  4170b3:	hlt    
  4170b4:	sbb    cl,dl
  4170b6:	(bad)  
  4170b7:	sbb    bh,dh
  4170b9:	push   ebp
  4170ba:	xlat   BYTE PTR ds:[ebx]
  4170bb:	adc    al,0x8
  4170bd:	lahf   
  4170be:	mov    ?,WORD PTR [ebp+0x1f359a35]
  4170c4:	adc    edi,DWORD PTR [edx]
  4170c6:	add    BYTE PTR ds:[esi],cl
  4170c9:	jmp    0xce0847e3
  4170ce:	mov    al,ds:0x9a5ae7ee
  4170d3:	sbb    BYTE PTR [eax+0x11],ah
  4170d6:	cmpxchg DWORD PTR [edx-0x2e4c1256],ecx
  4170dd:	ret    0xe03c
  4170e0:	ja     0x4170e4
  4170e2:	dec    ecx
  4170e3:	mov    edx,0x9ad6923f
  4170e8:	test   eax,0x30ebf0d0
  4170ed:	fmul   DWORD PTR [edx-0x5383d14e]
  4170f3:	jecxz  0x417110
  4170f5:	push   0xffffffd0
  4170f7:	mov    ecx,0xd5f76ce1
  4170fc:	sub    ah,bl
  4170fe:	xchg   DWORD PTR [edx+0x74db2fd6],edi
  417104:	in     eax,0xca
  417106:	jno    0x41715b
  417108:	scas   eax,DWORD PTR es:[edi]
  417109:	xchg   esp,eax
  41710a:	out    dx,al
  41710b:	jno    0x41709d
  41710d:	fdiv   DWORD PTR [ebx]
  41710f:	mul    BYTE PTR [esi]
  417111:	xor    dh,BYTE PTR [ebp-0x275b07cc]
  417117:	scas   al,BYTE PTR es:[edi]
  417118:	jo     0x4170cf
  41711a:	mov    edi,DWORD PTR [ecx+ecx*8-0x16]
  41711e:	pop    ss
  41711f:	outs   dx,DWORD PTR ds:[esi]
  417120:	sub    dl,BYTE PTR [ebx-0x32]
  417123:	dec    ebx
  417124:	je     0x417184
  417126:	test   eax,0x3cdfd82c
  41712b:	repnz into 
  41712d:	fcom   QWORD PTR [ebp+0x46]
  417130:	mov    BYTE PTR [edi-0x7fcbd96a],dh
  417136:	into   
  417137:	xchg   ebp,eax
  417138:	cmp    BYTE PTR [ecx],bl
  41713a:	adc    ecx,DWORD PTR [edi-0x231346f6]
  417140:	or     BYTE PTR [ebp-0x4d],dh
  417143:	cmp    esp,edi
  417145:	dec    edi
  417146:	sub    BYTE PTR [ebp+0x7e],al
  417149:	adc    al,0x78
  41714b:	jo     0x4170d6
  41714d:	or     ebx,DWORD PTR [ebx+edi*8]
  417150:	call   0x92ca:0x1e466db4
  417157:	rcr    BYTE PTR [ecx+0x70],0x32
  41715b:	push   edx
  41715c:	xchg   esp,eax
  41715d:	sti    
  41715e:	jns    0x41716c
  417160:	enter  0xfd76,0xb3
  417164:	fimul  WORD PTR [ebx]
  417166:	add    ah,ch
  417168:	adc    eax,0xc0963a2a
  41716d:	push   es
  41716e:	stos   DWORD PTR es:[edi],eax
  41716f:	dec    edi
  417170:	jl     0x4171c4
  417172:	in     eax,0xb4
  417174:	dec    eax
  417175:	mov    gs,WORD PTR [edx-0x665ecaae]
  41717b:	mov    ch,0xf9
  41717d:	mov    esp,0x68097837
  417182:	inc    ebp
  417183:	jnp    0x4171bd
  417185:	mov    ah,0xa8
  417187:	mov    eax,0x6393d2e1
  41718c:	sbb    edi,DWORD PTR [edx]
  41718e:	ss repnz addr16 xchg ebx,eax
  417192:	clc    
  417193:	sbb    BYTE PTR [edx+0x68],ch
  417196:	xchg   ebx,eax
  417197:	iret   
  417198:	or     eax,0x406fbcef
  41719d:	test   BYTE PTR [edx],bl
  41719f:	mov    edx,DWORD PTR [ecx]
  4171a1:	or     al,dl
  4171a3:	ret    
  4171a4:	fs pop esi
  4171a6:	mov    eax,DWORD PTR [ebx-0x79]
  4171a9:	and    BYTE PTR [ecx],0xb4
  4171ac:	add    al,BYTE PTR [ecx-0x56849f76]
  4171b2:	push   cs
  4171b3:	sub    WORD PTR [edx+0x34],dx
  4171b7:	pop    eax
  4171b8:	cmc    
  4171b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171ba:	push   0xeaa0b875
  4171bf:	mov    eax,0x2a9507c6
  4171c4:	mov    BYTE PTR [edx],bl
  4171c6:	fcom   QWORD PTR ds:0x59ed58bd
  4171cc:	retf   0x3b1c
  4171cf:	mov    bh,0xd9
  4171d1:	or     eax,DWORD PTR [ebx]
  4171d3:	or     eax,ecx
  4171d5:	fistp  DWORD PTR [eax]
  4171d7:	lods   al,BYTE PTR ds:[esi]
  4171d8:	fisub  WORD PTR [ecx+0x1a0ca2b2]
  4171de:	sbb    DWORD PTR [eax],esi
  4171e0:	sbb    BYTE PTR [ebx+edx*8-0x25],al
  4171e4:	mov    ebp,0xec70809
  4171e9:	mov    ?,WORD PTR [edx-0x2980b18a]
  4171ef:	cmc    
  4171f0:	scas   al,BYTE PTR es:[edi]
  4171f1:	(bad)  
  4171f2:	aas    
  4171f3:	test   al,0xf4
  4171f5:	add    DWORD PTR [edx],ebp
  4171f7:	sbb    eax,0x9fae345e
  4171fc:	out    dx,eax
  4171fd:	or     esp,ecx
  4171ff:	call   0x6a0f:0x6033ee11
  417206:	dec    edx
  417207:	mov    ecx,0xd3360208
  41720c:	pushf  
  41720d:	push   ds
  41720e:	sub    BYTE PTR [ecx+ebp*8],cl
  417211:	repnz mov ds,WORD PTR [edi-0x20]
  417215:	and    eax,0x7b142509
  41721a:	repz mov cl,0x98
  41721d:	sbb    al,0x60
  41721f:	sbb    BYTE PTR [edx-0x5b28383f],ch
  417225:	xchg   DWORD PTR [edx-0x62],esi
  417228:	pop    es
  417229:	mov    ebp,DWORD PTR [edx+0x73]
  41722c:	or     al,0xbf
  41722e:	int    0xbe
  417230:	lahf   
  417231:	xor    BYTE PTR [esi],0xa8
  417234:	jne    0x4171d4
  417236:	dec    esp
  417237:	(bad)  
  417238:	test   al,0x56
  41723a:	jns    0x4171f0
  41723c:	mov    cl,0xc9
  41723e:	in     al,0xb5
  417240:	adc    BYTE PTR [edx+0x55],bl
  417243:	push   ebx
  417244:	gs jecxz 0x417253
  417247:	repz mov ch,0x62
  41724a:	dec    ebp
  41724b:	popf   
  41724c:	icebp  
  41724d:	sbb    BYTE PTR [edx],0x4d
  417250:	lea    ebp,[edi+0x16662393]
  417256:	dec    ebx
  417257:	sub    dh,dl
  417259:	push   esp
  41725a:	jbe    0x41726b
  41725c:	test   eax,0x52bbb10c
  417261:	xchg   DWORD PTR [edx-0x684222e6],ebp
  417267:	xor    BYTE PTR [ebx+0x1],bl
  41726a:	dec    ecx
  41726b:	mov    BYTE PTR [ebp+eiz*4+0x2f688d0d],al
  417272:	out    0xb5,eax
  417274:	mov    BYTE PTR [esp+ebx*8-0x57b5ea6b],ah
  41727b:	jmp    0x3948cd3f
  417280:	sbb    al,bl
  417282:	jne    0x4172fc
  417284:	popf   
  417285:	mov    edi,DWORD PTR [edx-0x3]
  417288:	es xchg edx,eax
  41728a:	loopne 0x417258
  41728c:	test   BYTE PTR [esi+edi*1],bl
  41728f:	push   0xac01dd6f
  417294:	cmp    BYTE PTR [esi+eiz*4+0x50],bh
  417298:	jmp    0xa9fa7d26
  41729d:	adc    edi,ebx
  41729f:	cmp    al,0x4d
  4172a1:	and    al,0xb4
  4172a3:	mov    ds:0xa23a8205,eax
  4172a8:	push   esp
  4172a9:	imul   edx,DWORD PTR [ebp-0x313ded25],0xb92ff89a
  4172b3:	rcr    BYTE PTR [edx],1
  4172b5:	sub    ah,BYTE PTR [ebp-0x7]
  4172b8:	inc    edi
  4172b9:	push   edi
  4172ba:	cmp    eax,0xe6c30d8e
  4172bf:	mov    al,0xa5
  4172c1:	mov    edx,cs
  4172c3:	dec    esp
  4172c4:	or     eax,0xa2c890a5
  4172c9:	arpl   WORD PTR [edi],di
  4172cb:	clc    
  4172cc:	mov    ah,BYTE PTR [edx]
  4172ce:	push   ss
  4172cf:	cmp    al,0x8
  4172d1:	icebp  
  4172d2:	xor    DWORD PTR [ebp+0x7ec51c59],esi
  4172d8:	or     BYTE PTR [ebp-0x5b],bl
  4172db:	xor    al,0x98
  4172dd:	mov    bl,0x86
  4172df:	out    dx,eax
  4172e0:	dec    edi
  4172e1:	sahf   
  4172e2:	cld    
  4172e3:	xor    ecx,DWORD PTR [edx+ebp*4+0x14]
  4172e7:	jmp    0x417286
  4172e9:	(bad)  
  4172ea:	cli    
  4172eb:	jle    0x417316
  4172ed:	cmp    dh,BYTE PTR [esi]
  4172ef:	rcr    BYTE PTR [esi],1
  4172f1:	pop    edi
  4172f2:	idiv   ah
  4172f4:	or     eax,0x3856128c
  4172f9:	add    ecx,DWORD PTR [edx]
  4172fb:	repz mov esp,0x875f0502
  417301:	jl     0x41736e
  417303:	cmp    BYTE PTR [ecx],bl
  417305:	ret    0xf677
  417308:	xor    BYTE PTR ds:0x932426ae,bh
  41730e:	mov    cl,0x6e
  417310:	add    BYTE PTR [esi+0x34c0bb74],cl
  417316:	leave  
  417317:	or     dh,BYTE PTR ds:0xd81d0a52
  41731d:	out    0x77,al
  41731f:	mov    cl,0xdf
  417321:	and    DWORD PTR [edi+esi*8],esi
  417324:	xchg   edi,eax
  417325:	jmp    0xcc5a:0xaf469cf9
  41732c:	fs push ebx
  41732e:	pop    es
  41732f:	mov    ebp,0xb03ed0ef
  417334:	shr    BYTE PTR [esi-0x32],1
  417337:	idiv   BYTE PTR [esi]
  417339:	xor    dl,BYTE PTR ds:0x410edf6e
  41733f:	int3   
  417340:	fwait
  417341:	xchg   esi,eax
  417342:	cmp    eax,0x2fd9385a
  417347:	mov    bl,0x52
  417349:	hlt    
  41734a:	stc    
  41734b:	mov    ds:0x79b26c52,al
  417350:	push   ds
  417351:	outs   dx,BYTE PTR ds:[esi]
  417352:	or     edi,edx
  417354:	enter  0x96d6,0xee
  417358:	test   eax,0xe6713ba4
  41735d:	lea    ecx,[edx+0x4e]
  417360:	push   cs
  417361:	inc    esp
  417362:	and    al,BYTE PTR [ecx+0x16]
  417365:	or     dl,al
  417367:	sbb    BYTE PTR [ebx],dh
  417369:	scas   eax,DWORD PTR es:[edi]
  41736a:	vpsllq xmm1,xmm5,XMMWORD PTR [edx]
  41736e:	jecxz  0x417333
  417370:	rcr    DWORD PTR [ebx+0x98ff711],1
  417376:	pop    esp
  417377:	mov    dl,0x41
  417379:	lahf   
  41737a:	cmp    ch,BYTE PTR [edx-0x3a]
  41737d:	xor    bl,BYTE PTR [edx-0x29]
  417380:	adc    eax,0xc28667ca
  417385:	cmp    eax,0xfbbcabf8
  41738a:	mov    esi,0xba8bb0c5
  41738f:	mov    ebx,0x1dff8a1d
  417394:	push   ss
  417395:	stos   BYTE PTR es:[edi],al
  417396:	mov    ebx,0x9d4297f8
  41739b:	loopne 0x4173b5
  41739d:	int    0x83
  41739f:	std    
  4173a0:	mov    ch,0x8f
  4173a2:	or     ah,BYTE PTR [ebx]
  4173a4:	jbe    0x417360
  4173a6:	push   ss
  4173a7:	nop
  4173a8:	popa   
  4173a9:	popa   
  4173aa:	cmp    ch,BYTE PTR [eax]
  4173ac:	sub    al,0xae
  4173ae:	sti    
  4173af:	xor    ebp,DWORD PTR [eax]
  4173b1:	mov    eax,ds:0x9ee4b575
  4173b6:	mov    ds:0x99c5ca9,eax
  4173bb:	add    cl,BYTE PTR [esi]
  4173bd:	mov    ds:0x9168597f,al
  4173c2:	cmp    edx,DWORD PTR [esi-0x4656f1ec]
  4173c8:	arpl   WORD PTR ds:0x461b552f,sp
  4173ce:	aaa    
  4173cf:	cwde   
  4173d0:	cmc    
  4173d1:	stc    
  4173d2:	adc    ah,BYTE PTR [eax-0x8]
  4173d5:	fcomp  st(1)
  4173d7:	mov    dh,0xfa
  4173d9:	and    al,dl
  4173db:	cs popf 
  4173dd:	jecxz  0x417443
  4173df:	inc    ebx
  4173e0:	dec    cl
  4173e2:	and    al,0xcf
  4173e4:	push   cs
  4173e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173e6:	das    
  4173e7:	mov    edx,0x338b9251
  4173ec:	rcl    ebx,cl
  4173ee:	outs   dx,BYTE PTR ds:[esi]
  4173ef:	dec    esi
  4173f0:	sbb    eax,0xeae36ab1
  4173f5:	push   ss
  4173f6:	outs   dx,DWORD PTR ds:[esi]
  4173f7:	cwde   
  4173f8:	imul   edx,ecx,0xffffffd8
  4173fb:	xor    eax,0x8fa2e57a
  417400:	(bad)  
  417403:	stos   DWORD PTR es:[edi],eax
  417404:	out    0x89,al
  417406:	ss jbe 0x417437
  417409:	mov    ds,WORD PTR [edx-0x4a37717c]
  41740f:	add    al,0xa8
  417411:	sub    bh,BYTE PTR gs:[edi-0xe]
  417415:	add    al,0x94
  417417:	mov    ch,0x1f
  417419:	sub    DWORD PTR [esi+ebx*2],ebx
  41741c:	popf   
  41741d:	(bad)  
  41741e:	sbb    dl,BYTE PTR [edi+eiz*4]
  417421:	mov    WORD PTR [ebp-0x42],cs
  417424:	add    ebx,edi
  417426:	(bad)  
  417427:	outs   dx,DWORD PTR ds:[esi]
  417428:	cmp    BYTE PTR [ebp-0x70c4462c],cl
  41742e:	sar    dl,cl
  417430:	push   esp
  417431:	mov    ebp,DWORD PTR [edx]
  417433:	(bad)  
  417434:	cmp    dh,BYTE PTR [ebp+0x30df0c74]
  41743a:	or     DWORD PTR [esi],ecx
  41743c:	mov    dh,0xd1
  41743e:	xor    ch,BYTE PTR [ebx+ecx*8]
  417441:	pop    ebx
  417442:	push   esp
  417443:	or     eax,0x23ea7c27
  417448:	mov    eax,ds:0x10ae91a5
  41744d:	cli    
  41744e:	pop    ss
  41744f:	out    0xee,al
  417451:	xlat   BYTE PTR ds:[ebx]
  417452:	je     0x417471
  417454:	(bad)  
  417456:	mov    DWORD PTR [edi],esp
  417458:	imul   esp,DWORD PTR [ebp-0x59eb2336],0xeaca70f1
  417462:	test   eax,0x8b2aca30
  417467:	mov    dh,0x76
  417469:	or     eax,eax
  41746b:	mov    eax,0xb0e1baa8
  417470:	(bad)  
  417471:	call   DWORD PTR [ebx+eiz*8+0x20877a0d]
  417478:	jns    0x417474
  41747a:	or     cl,bl
  41747c:	mov    edi,0x3bd9d87f
  417481:	mov    bl,BYTE PTR [edx-0x3e]
  417484:	into   
  417485:	ds test eax,0x3e32ebf5
  41748b:	mov    BYTE PTR [edx-0x7e13e31],bh
  417491:	jecxz  0x41742c
  417493:	scas   eax,DWORD PTR es:[edi]
  417494:	and    eax,DWORD PTR [ecx-0x650347df]
  41749a:	fldenv [ebp+0x19]
  41749d:	mov    edx,eax
  41749f:	add    eax,0xe1154e54
  4174a4:	push   ecx
  4174a5:	call   0xb200:0xb2a8e9d8
  4174ac:	or     DWORD PTR [esi+0x61],esp
  4174af:	pop    eax
  4174b0:	adc    edi,DWORD PTR [edx+0x28ed677c]
  4174b6:	inc    eax
  4174b7:	fwait
  4174b8:	shl    BYTE PTR [esi],0x15
  4174bb:	sar    al,cl
  4174bd:	cmp    edx,0xbea94d05
  4174c3:	addr16 test al,0x7b
  4174c6:	jno    0x4174d9
  4174c8:	(bad)  
  4174c9:	retf   
  4174ca:	or     dh,bh
  4174cc:	test   DWORD PTR [ecx-0x752e87c1],ebx
  4174d2:	mov    ah,0x85
  4174d4:	clc    
  4174d5:	fs pop edi
  4174d7:	mov    dl,0x35
  4174d9:	icebp  
  4174da:	mov    edi,0xf4aa08df
  4174df:	std    
  4174e0:	xchg   ebp,eax
  4174e1:	mov    ecx,0x22681a0
  4174e6:	adc    eax,0x8a8ffaee
  4174eb:	add    esi,DWORD PTR [ecx-0x72]
  4174ee:	pop    eax
  4174ef:	stos   BYTE PTR es:[edi],al
  4174f0:	pop    eax
  4174f1:	lock test BYTE PTR [edi+0x13],ch
  4174f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174f6:	xchg   ecx,eax
  4174f7:	(bad)  
  4174f8:	mov    ds:0xbc5f6378,eax
  4174fd:	xchg   ecx,eax
  4174fe:	mov    edx,0x686cb420
  417503:	pop    eax
  417504:	in     al,0x8a
  417506:	popa   
  417507:	fcomi  st,st(3)
  417509:	or     eax,0x46ccc922
  41750e:	shr    BYTE PTR [eax+ebp*1],cl
  417511:	cmp    al,0x2c
  417513:	scas   al,BYTE PTR es:[edi]
  417514:	sub    esi,DWORD PTR [ebx]
  417516:	mov    ds:0x94da181d,eax
  41751b:	mov    al,ds:0xb75eeda3
  417520:	nop
  417521:	mov    esp,ds
  417523:	int    0x26
  417525:	(bad)
  417529:	out    0x9b,al
  41752b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41752c:	jl     0x417599
  41752e:	aas    
  41752f:	cwde   
  417530:	inc    edi
  417531:	inc    ebp
  417532:	out    0x24,al
  417534:	mul    BYTE PTR [eax]
  417536:	push   ebx
  417537:	ss cmp al,0x89
  41753a:	inc    esp
  41753b:	xor    bh,dl
  41753d:	retf   
  41753e:	lods   eax,DWORD PTR ds:[esi]
  41753f:	sub    eax,0x22ba8538
  417544:	push   ss
  417545:	pop    edx
  417546:	into   
  417547:	cmp    BYTE PTR ds:0xe5b23d6b,dh
  41754d:	fdivr  st,st(7)
  41754f:	stc    
  417550:	repz (bad) 
  417552:	retf   0x1199
  417555:	das    
  417556:	adc    ch,ah
  417558:	jmp    0x552bb27
  41755d:	mov    ecx,DWORD PTR [esp+edi*2]
  417560:	dec    esi
  417561:	sti    
  417562:	retf   
  417563:	dec    ebx
  417564:	mov    eax,0xb9c04acc
  417569:	ja     0x417584
  41756b:	pop    ecx
  41756c:	sbb    dl,bl
  41756e:	push   esi
  41756f:	and    ebx,edi
  417571:	or     BYTE PTR [edi-0x759425a1],al
  417577:	jmp    0x4175d8
  417579:	push   0xa138e59
  41757e:	ret    
  41757f:	lock fadd DWORD PTR [esi]
  417582:	sbb    esp,DWORD PTR [eax+0x2f]
  417585:	xchg   DWORD PTR [esi-0x2d6ef61],ebp
  41758b:	mov    cl,0x5c
  41758d:	popf   
  41758e:	fbstp  TBYTE PTR [edi]
  417590:	mov    cl,0x1a
  417592:	popa   
  417593:	shr    esi,0x76
  417596:	push   0x47
  417598:	mov    bl,0x24
  41759a:	xor    BYTE PTR [ebp+0x6ffbea12],dh
  4175a0:	call   0x525bfdcd
  4175a5:	dec    edi
  4175a6:	enter  0x9392,0x83
  4175aa:	sbb    ch,BYTE PTR [ecx+0x28ee3cad]
  4175b0:	inc    edi
  4175b1:	cmp    eax,0x46aff832
  4175b6:	push   esp
  4175b7:	inc    esi
  4175b8:	call   0x87f876ab
  4175bd:	inc    edi
  4175be:	dec    ecx
  4175bf:	aas    
  4175c0:	test   BYTE PTR [edx],bh
  4175c2:	aas    
  4175c3:	retf   
  4175c4:	and    al,bl
  4175c6:	fcom   QWORD PTR [ecx]
  4175c8:	and    al,0xed
  4175ca:	dec    edx
  4175cb:	mov    ch,0x82
  4175cd:	jge    0x4175db
  4175cf:	xor    BYTE PTR [edi+eax*4+0x32],cl
  4175d3:	test   al,0x2c
  4175d5:	dec    esp
  4175d6:	mov    ecx,eax
  4175d8:	dec    eax
  4175d9:	pop    esp
  4175da:	cmp    eax,0x7989ee78
  4175df:	dec    ebp
  4175e0:	js     0x41758b
  4175e2:	test   edx,ebx
  4175e4:	push   cs
  4175e5:	shl    BYTE PTR [esi],0xee
  4175e8:	inc    eax
  4175e9:	mov    bh,0x49
  4175eb:	lods   al,BYTE PTR ds:[esi]
  4175ec:	rcl    BYTE PTR [edx+0x36],0x48
  4175f0:	cdq    
  4175f1:	xor    esi,DWORD PTR [ebx-0x35]
  4175f4:	cwde   
  4175f5:	or     DWORD PTR [edi+0x3913d1ba],0xffffffa5
  4175fc:	cmp    al,0xed
  4175fe:	iret   
  4175ff:	lods   eax,DWORD PTR ds:[esi]
  417600:	xchg   edx,eax
  417601:	(bad)  
  417602:	sbb    al,0x3b
  417604:	xor    al,BYTE PTR [esi+0xfa85a7c]
  41760a:	aad    0xb6
  41760c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41760d:	or     eax,0x7d04f241
  417612:	sub    DWORD PTR [edx],eax
  417614:	(bad)  
  417615:	xchg   ecx,eax
  417616:	or     DWORD PTR [ecx],0xa8b28011
  41761c:	mov    dl,BYTE PTR [eax+ecx*4]
  41761f:	ror    DWORD PTR [edi],1
  417621:	mov    bh,0x2a
  417623:	mov    esi,0xdba46416
  417628:	lahf   
  417629:	adc    edx,DWORD PTR [ebx+0x3a0d19f2]
  41762f:	fmul   DWORD PTR [eax]
  417631:	push   esi
  417632:	cmp    BYTE PTR ds:0xf473ab59,al
  417638:	push   0xed39ea74
  41763d:	into   
  41763e:	pop    ebp
  41763f:	mov    dl,0x1b
  417641:	cmp    ah,BYTE PTR [esi-0x212d133e]
  417647:	lahf   
  417648:	jmp    DWORD PTR [edi+eiz*2+0x7e]
  41764c:	stos   BYTE PTR es:[edi],al
  41764d:	sub    DWORD PTR [edx-0x49],0xfffffff4
  417651:	mov    esi,0xac32d32d
  417656:	dec    ecx
  417657:	sbb    BYTE PTR [edx-0x6667e80],dh
  41765d:	dec    ebp
  41765e:	lods   eax,DWORD PTR ds:[esi]
  41765f:	(bad)  
  417660:	mov    ch,0xa8
  417662:	retf   0xdec
  417665:	scas   al,BYTE PTR es:[edi]
  417666:	add    BYTE PTR ds:0xa7de5c0a,0x10
  41766d:	(bad)  
  41766e:	in     al,dx
  41766f:	adc    cl,BYTE PTR [ebx+0x68afa1bd]
  417675:	mov    BYTE PTR [esi],bh
  417677:	mov    bl,0x94
  417679:	ss std 
  41767b:	and    al,0xe3
  41767d:	or     dh,BYTE PTR [eax+0xa]
  417680:	and    ebp,DWORD PTR [esi+edi*2+0x6648dc4c]
  417687:	ins    DWORD PTR es:[edi],dx
  417688:	arpl   WORD PTR es:[edi],di
  41768b:	(bad)  
  41768c:	in     al,0x8c
  41768e:	mov    bh,BYTE PTR [ebx]
  417690:	push   ds
  417691:	ret    0x2628
  417694:	outs   dx,DWORD PTR ds:[esi]
  417695:	and    eax,edi
  417697:	(bad)  
  417698:	cmp    BYTE PTR [eax+edi*2],ah
  41769b:	scas   eax,DWORD PTR es:[edi]
  41769c:	sahf   
  41769d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41769e:	lea    edx,[edi+0x18]
  4176a1:	or     bh,BYTE PTR [ebp+0x69]
  4176a4:	xchg   ebx,eax
  4176a5:	inc    edi
  4176a6:	ds or  al,0x13
  4176a9:	jp     0x4176c1
  4176ab:	and    DWORD PTR [eax+0x62],esp
  4176ae:	pop    ecx
  4176af:	sbb    DWORD PTR [ebx+0x21],ebp
  4176b2:	shr    edx,cl
  4176b4:	pop    eax
  4176b5:	ja     0x417702
  4176b7:	xor    eax,0x86aa80ae
  4176bc:	adc    al,BYTE PTR [ebx-0x4e]
  4176bf:	xor    ebx,DWORD PTR [eax]
  4176c1:	jae    0x4176ba
  4176c3:	out    dx,al
  4176c4:	mov    ebp,0x88e8367c
  4176c9:	iret   
  4176ca:	aad    0x13
  4176cc:	mov    ds:0xafb26a8e,al
  4176d1:	push   ebx
  4176d2:	push   eax
  4176d3:	mov    ebx,0xf9dd5a1b
  4176d8:	push   ebp
  4176d9:	inc    esi
  4176da:	out    dx,eax
  4176db:	sub    ch,bl
  4176dd:	mov    cl,0xe3
  4176df:	push   cs
  4176e0:	sbb    edx,ecx
  4176e2:	and    BYTE PTR [edi],ah
  4176e4:	rol    BYTE PTR [edx-0x4],cl
  4176e7:	push   ds
  4176e8:	sbb    DWORD PTR [edx+0x6b],edi
  4176eb:	mov    edi,0x39e302bf
  4176f0:	add    al,0x58
  4176f2:	push   eax
  4176f3:	gs loope 0x4176e0
  4176f6:	sbb    al,0x35
  4176f8:	mov    cl,0x8f
  4176fa:	jp     0x4176a0
  4176fc:	cwde   
  4176fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176fe:	sar    BYTE PTR [ecx],cl
  417700:	std    
  417701:	fwait
  417702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417703:	outs   dx,DWORD PTR ds:[esi]
  417704:	adc    eax,0x867b1d94
  417709:	mov    ebp,0x841c2618
  41770e:	mov    edx,0x420f1d9
  417713:	jno    0x417756
  417715:	inc    esi
  417716:	xor    al,bl
  417718:	jle    0x417797
  41771a:	(bad)  
  41771b:	imul   ebp,DWORD PTR [edi+0xc9e41eb],0xffffffbe
  417722:	iret   
  417723:	loop   0x4176fe
  417725:	dec    edi
  417726:	add    bh,ch
  417728:	or     al,0xaa
  41772a:	mov    esp,0xc52d0b56
  41772f:	js     0x417761
  417731:	and    DWORD PTR cs:[ecx+0x3],edi
  417735:	sbb    BYTE PTR [edx-0x5250713b],0x76
  41773c:	adc    esi,DWORD PTR [ecx]
  41773e:	inc    ebp
  41773f:	sbb    BYTE PTR [ecx],bl
  417741:	mov    fs,WORD PTR [ecx+0x73]
  417744:	xor    al,0xd0
  417746:	jg     0x417713
  417748:	jg     0x4176d3
  41774a:	cli    
  41774b:	xchg   DWORD PTR [eax-0x50],eax
  41774e:	mov    ah,0xac
  417750:	dec    edi
  417751:	lahf   
  417752:	cmp    edi,eax
  417754:	inc    eax
  417755:	push   ecx
  417756:	xor    eax,DWORD PTR [edi+ecx*8+0x38]
  41775a:	fwait
  41775b:	dec    edx
  41775c:	sbb    dl,BYTE PTR [edx]
  41775e:	jmp    0xe40d7998
  417763:	xchg   BYTE PTR [esi-0x52],al
  417766:	cmp    eax,0xfa025fc8
  41776b:	ret    
  41776c:	mov    dl,dl
  41776e:	mov    ecx,0x952079ac
  417773:	scas   eax,DWORD PTR es:[edi]
  417774:	sbb    BYTE PTR [edx+0x59e54ff1],ch
  41777a:	retf   
  41777b:	pop    esi
  41777c:	adc    ch,cl
  41777e:	mov    cl,0xd9
  417780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417781:	sub    BYTE PTR [edx],0x5e
  417784:	enter  0x695b,0xe9
  417788:	mov    eax,0x95b83568
  41778d:	and    DWORD PTR [eax+0xd],ecx
  417790:	lods   al,BYTE PTR ds:[esi]
  417791:	div    dh
  417793:	outs   dx,BYTE PTR ds:[esi]
  417794:	cmp    BYTE PTR [esi+0x7a57b03d],0x75
  41779b:	clc    
  41779c:	pop    ecx
  41779d:	jecxz  0x4177d1
  41779f:	js     0x417817
  4177a1:	ret    
  4177a2:	jae    0x417749
  4177a4:	pop    eax
  4177a5:	cmp    al,0xd4
  4177a7:	mov    ecx,0x3f238b57
  4177ac:	sbb    ecx,DWORD PTR [edx+0x38716e88]
  4177b2:	xchg   edx,eax
  4177b3:	sub    al,0xf0
  4177b5:	ret    
  4177b6:	xchg   ch,dl
  4177b8:	push   edx
  4177b9:	out    dx,eax
  4177ba:	sub    eax,DWORD PTR [ebx+eiz*2+0x44]
  4177be:	xor    al,0x9e
  4177c0:	sbb    DWORD PTR [edx+0x2e310c57],ebp
  4177c6:	arpl   si,sp
  4177c8:	mov    BYTE PTR es:[ecx-0x5c],ah
  4177cc:	test   BYTE PTR [edx+0x48c2da1a],0xd4
  4177d3:	ins    BYTE PTR es:[edi],dx
  4177d4:	aas    
  4177d5:	lods   eax,DWORD PTR ds:[esi]
  4177d6:	ror    BYTE PTR [eax],cl
  4177d8:	daa    
  4177d9:	aam    0xb7
  4177db:	dec    esp
  4177dc:	mov    al,BYTE PTR es:[esi+0xe]
  4177e0:	sahf   
  4177e1:	pop    ecx
  4177e2:	lods   eax,DWORD PTR ds:[esi]
  4177e3:	adc    al,0x68
  4177e5:	(bad)  
  4177e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177e7:	(bad)  
  4177e8:	fiadd  WORD PTR [edi]
  4177ea:	in     al,dx
  4177eb:	in     al,dx
  4177ec:	pop    ebp
  4177ed:	(bad)  
  4177ee:	test   eax,0x32cc44f4
  4177f3:	clc    
  4177f4:	iret   
  4177f5:	stos   DWORD PTR es:[edi],eax
  4177f6:	data16 jg 0x4177d1
  4177f9:	jno    0x4177a1
  4177fb:	(bad)  
  4177fc:	iret   
  4177fd:	mov    esp,0x12e6e80
  417802:	jns    0x4177b5
  417804:	loopne 0x417831
  417806:	xor    al,cl
  417808:	sub    ebp,DWORD PTR [ebp+0x3c88e18b]
  41780e:	push   0xafa1e9b2
  417813:	xchg   DWORD PTR [eax],ebx
  417815:	cmp    dl,BYTE PTR [esi]
  417817:	pop    ebx
  417818:	out    dx,al
  417819:	(bad)  
  41781a:	xchg   esp,eax
  41781b:	lods   al,BYTE PTR ds:[esi]
  41781c:	or     DWORD PTR [ebx+edx*8],0xcbfdd070
  417823:	nop
  417824:	iret   
  417825:	adc    cl,BYTE PTR [eax-0x24]
  417828:	ret    
  417829:	or     al,BYTE PTR [edi+0x2bf9f322]
  41782f:	pop    edx
  417830:	mov    esp,DWORD PTR [ebp-0x68]
  417833:	mov    al,0x1f
  417835:	popa   
  417836:	repz push ds
  417838:	dec    ebx
  417839:	mov    eax,0x86f71b7f
  41783e:	dec    ebp
  41783f:	out    dx,eax
  417840:	adc    DWORD PTR [edx-0x62c0d649],edi
  417846:	sub    BYTE PTR [ebx+0x34b408a7],dh
  41784c:	jno    0x4177d9
  41784e:	jp     0x41784d
  417850:	adc    dl,BYTE PTR [ebx-0x1063b5ad]
  417856:	cmp    eax,0xcfa73c18
  41785b:	xchg   esi,eax
  41785c:	push   0xe2b89525
  417861:	push   esp
  417862:	push   0x30
  417864:	adc    cl,BYTE PTR [edx]
  417866:	xchg   esp,eax
  417867:	fs pop eax
  417869:	inc    edx
  41786a:	je     0x41789f
  41786c:	popf   
  41786d:	cmp    edx,edx
  41786f:	mov    edx,0x9e2a83c0
  417874:	mov    ch,ah
  417876:	adc    eax,0xf7df8088
  41787b:	mov    esi,0x66014a4e
  417880:	jno    0x417810
  417882:	and    dl,ah
  417884:	loopne 0x4178f4
  417886:	push   eax
  417887:	pop    es
  417888:	cmp    al,0xeb
  41788a:	in     al,dx
  41788b:	or     BYTE PTR [eax+eax*4-0x35e112d2],0x2f
  417893:	mov    dl,0xb2
  417895:	or     ch,BYTE PTR [ebp+ecx*4+0x1b]
  417899:	stos   DWORD PTR es:[edi],eax
  41789a:	push   esp
  41789b:	dec    ebx
  41789c:	scas   eax,DWORD PTR es:[edi]
  41789d:	xchg   esi,eax
  41789e:	data16 daa 
  4178a0:	jp     0x4178c2
  4178a2:	cli    
  4178a3:	lahf   
  4178a4:	inc    ecx
  4178a5:	test   cl,dh
  4178a7:	mov    dh,0x85
  4178a9:	repz stc 
  4178ab:	outs   dx,DWORD PTR ds:[esi]
  4178ac:	sbb    BYTE PTR [esi+0x5d],bh
  4178af:	retf   
  4178b0:	sbb    al,BYTE PTR [esi+0x3a]
  4178b3:	(bad)  
  4178b4:	clc    
  4178b5:	inc    esi
  4178b6:	je     0x417866
  4178b8:	pushf  
  4178b9:	mov    cl,0x70
  4178bb:	xor    ecx,DWORD PTR ds:0xdda3019a
  4178c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178c2:	mov    eax,ds:0x60df2b8f
  4178c7:	(bad)  
  4178c8:	push   edi
  4178c9:	pop    edi
  4178ca:	int    0xe1
  4178cc:	arpl   WORD PTR [esi-0x388fb076],bx
  4178d2:	dec    ebp
  4178d3:	retf   0xd5b9
  4178d6:	and    DWORD PTR [ebp+0x5d3f9bc6],ecx
  4178dc:	cmp    BYTE PTR [ebp+eiz*2-0x757b0687],al
  4178e3:	pop    edi
  4178e4:	mov    ebx,0x17f1d448
  4178e9:	mov    ah,0x6a
  4178eb:	mov    BYTE PTR [ebx],ah
  4178ed:	or     ch,BYTE PTR [esi+0x5c]
  4178f0:	leave  
  4178f1:	or     dh,dh
  4178f3:	mov    ah,0x5
  4178f5:	(bad)
  4178f8:	mov    eax,ds:0x16e04286
  4178fd:	sbb    dl,BYTE PTR [ebx]
  4178ff:	shr    dl,0x9c
  417902:	in     eax,0xee
  417904:	mov    edi,0xaf78128a
  417909:	mov    ecx,DWORD PTR [edx-0x441194a4]
  41790f:	lahf   
  417910:	or     DWORD PTR [ebp+0x40],ebx
  417913:	mov    BYTE PTR [ecx],ah
  417915:	imul   esp,DWORD PTR [edi],0xffffffe5
  417918:	rcr    BYTE PTR [edi-0x713d15c5],cl
  41791e:	dec    edx
  41791f:	(bad)  [ecx]
  417921:	push   0x6402e1e2
  417926:	dec    DWORD PTR [esi+0x31]
  417929:	(bad)  
  41792a:	cmp    ebp,DWORD PTR [eax-0x3d]
  41792d:	xor    DWORD PTR [ebp-0x456ec381],esi
  417933:	sbb    edx,DWORD PTR [ebx+0x4f]
  417936:	icebp  
  417937:	imul   edx,DWORD PTR [edi],0xffffff8a
  41793a:	inc    edi
  41793b:	or     bl,BYTE PTR ds:0xd552adb1
  417941:	das    
  417942:	retf   
  417943:	push   edx
  417944:	(bad)  
  417945:	adc    DWORD PTR [edx],ebx
  417947:	repnz adc edi,DWORD PTR [esi+0x4a114037]
  41794e:	sahf   
  41794f:	iret   
  417950:	dec    esi
  417951:	sbb    eax,0xbc5ac7a5
  417956:	fwait
  417957:	or     eax,0x5caa8188
  41795c:	rcl    BYTE PTR [esi+0x5b6fc54a],cl
  417962:	and    bh,BYTE PTR [esi]
  417964:	mov    ch,0x4a
  417966:	xor    BYTE PTR ds:[ebp+0x5d],cl
  41796a:	fisttp QWORD PTR [edi-0x8]
  41796d:	call   0x83af325c
  417972:	pop    ds
  417973:	jp     0x417983
  417975:	cmp    al,BYTE PTR [ebx]
  417977:	jno    0x4179f3
  417979:	retf   
  41797a:	inc    edx
  41797b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797c:	mov    ebx,DWORD PTR [eax]
  41797e:	mov    bl,0xb0
  417980:	aas    
  417981:	cmp    DWORD PTR [edx],0x9
  417984:	mov    ecx,0xc1ca3b72
  417989:	cmp    BYTE PTR ds:0x7a82fc5c,bl
  41798f:	push   ss
  417990:	call   0xda88:0xce652f74
  417997:	lahf   
  417998:	xor    ah,cl
  41799a:	mov    BYTE PTR [esi+0x1e],ch
  41799d:	rdmsr  
  41799f:	cmp    BYTE PTR [esi+0x28e3ca59],bl
  4179a5:	and    eax,0x20eab9e6
  4179aa:	mov    edi,0x76aa10c0
  4179af:	pop    esi
  4179b0:	xlat   BYTE PTR ds:[ebx]
  4179b1:	and    cl,ch
  4179b3:	icebp  
  4179b4:	jne    0x417971
  4179b6:	xchg   BYTE PTR [edx],dh
  4179b8:	sbb    ecx,DWORD PTR [edx+edi*1+0x437aec10]
  4179bf:	inc    ebx
  4179c0:	add    ebx,ebp
  4179c2:	sbb    ebp,DWORD PTR [edx+esi*2+0x422d6285]
  4179c9:	ins    BYTE PTR es:[edi],dx
  4179ca:	xor    dl,dh
  4179cc:	sbb    eax,0x7ccfca80
  4179d1:	fwait
  4179d2:	and    DWORD PTR [ecx-0x3a],eax
  4179d5:	adc    dh,bh
  4179d7:	add    eax,DWORD PTR [esi]
  4179d9:	pop    esp
  4179da:	stos   BYTE PTR es:[edi],al
  4179db:	inc    edx
  4179dc:	inc    ebp
  4179dd:	jne    0x417a11
  4179df:	mov    al,0x48
  4179e1:	iret   
  4179e2:	in     al,0xbc
  4179e4:	mov    cl,0x72
  4179e6:	cmp    eax,0x5d540c60
  4179eb:	test   al,0x30
  4179ed:	jge    0x417a1d
  4179ef:	sbb    cl,BYTE PTR [ebp+0x4049bf4c]
  4179f5:	mov    al,dh
  4179f7:	and    DWORD PTR [eax],ebp
  4179f9:	jo     0x417995
  4179fb:	mov    bh,0x1f
  4179fd:	std    
  4179fe:	aaa    
  4179ff:	lea    edi,[ebx]
  417a01:	pop    ebp
  417a02:	shl    BYTE PTR [esi+0x2f708d9c],cl
  417a08:	sbb    eax,0xc85f6c8f
  417a0d:	xchg   ebx,eax
  417a0e:	cmc    
  417a0f:	ret    0x4b8b
  417a12:	dec    edi
  417a13:	sub    al,0x29
  417a15:	or     DWORD PTR cs:[eax+eiz*2],ebp
  417a19:	outs   dx,DWORD PTR ds:[esi]
  417a1a:	xor    al,0x38
  417a1c:	and    ebp,DWORD PTR [eax+eiz*8+0x36]
  417a20:	clc    
  417a21:	jl     0x4179cb
  417a23:	scas   al,BYTE PTR es:[edi]
  417a24:	fiadd  DWORD PTR [ecx-0x60]
  417a27:	sbb    al,0x13
  417a29:	sub    ch,bh
  417a2b:	retf   0x1fec
  417a2e:	mov    ch,0xee
  417a30:	inc    ecx
  417a31:	inc    ebp
  417a32:	jmp    0x97b4:0xeabb5108
  417a39:	imul   ebx,DWORD PTR [ebp+0x74],0xa705ea19
  417a40:	mov    edx,0x72bbda2b
  417a45:	pop    ds
  417a46:	out    dx,al
  417a47:	mov    dh,0xb0
  417a49:	rcr    DWORD PTR ds:0xea84e572,0xbb
  417a50:	adc    ch,BYTE PTR [edx+0x2565a6a9]
  417a56:	and    ebx,DWORD PTR [edx-0x17]
  417a59:	xor    esp,ecx
  417a5b:	outs   dx,BYTE PTR ds:[esi]
  417a5c:	loop   0x4179ed
  417a5e:	push   0xd
  417a60:	sbb    cl,cl
  417a62:	mov    bh,0x6f
  417a64:	or     cl,cl
  417a66:	int    0x9c
  417a68:	jge    0x4179f3
  417a6a:	test   DWORD PTR [ebx],esi
  417a6c:	pop    edi
  417a6d:	aam    0xd6
  417a6f:	xchg   edx,eax
  417a70:	adc    al,ah
  417a72:	out    0x74,eax
  417a74:	inc    eax
  417a75:	jp     0x417ad2
  417a77:	stos   DWORD PTR es:[edi],eax
  417a78:	mov    esi,0xe69835cf
  417a7d:	inc    esi
  417a7e:	imul   esi,DWORD PTR [edi],0x2041885f
  417a84:	fstp   QWORD PTR [eax+ebp*8+0xa82b2e8]
  417a8b:	mov    edi,DWORD PTR [eax]
  417a8d:	push   ds
  417a8e:	xor    ebp,DWORD PTR [edx-0x28]
  417a91:	gs xor ecx,edi
  417a94:	ror    BYTE PTR [ecx+ebp*8+0x168f928e],0x54
  417a9c:	ror    DWORD PTR [edx+0x6547107a],0x29
  417aa3:	scas   al,BYTE PTR es:[edi]
  417aa4:	jp     0x3cbce332
  417aaa:	test   BYTE PTR [ebx+ebp*1],al
  417aad:	gs dec esi
  417aaf:	or     al,0x28
  417ab1:	sbb    BYTE PTR [edx+0x2f],0xde
  417ab5:	adc    dl,0xbf
  417ab8:	pop    ds
  417ab9:	fnstsw WORD PTR [ebx]
  417abb:	push   0x98298130
  417ac0:	out    dx,eax
  417ac1:	and    esi,DWORD PTR [edi+0x1c]
  417ac4:	icebp  
  417ac5:	sahf   
  417ac6:	cdq    
  417ac7:	ret    0x8917
  417aca:	test   BYTE PTR [ebx],cl
  417acc:	mov    bl,0x3a
  417ace:	xor    DWORD PTR [eax-0x76],edi
  417ad1:	pushf  
  417ad2:	aam    0xc0
  417ad4:	sbb    BYTE PTR [edi-0x185f4c8c],al
  417ada:	dec    esp
  417adb:	sbb    DWORD PTR [edx],0xffffffaa
  417ade:	xchg   ecx,eax
  417adf:	mov    bh,0xf6
  417ae1:	fist   WORD PTR [ecx+esi*8+0x69eb00d3]
  417ae8:	pop    ds
  417ae9:	mov    WORD PTR [ebx],?
  417aeb:	xchg   esp,eax
  417aec:	or     eax,0xfdb92990
  417af1:	jnp    0x417ad6
  417af3:	lds    esi,FWORD PTR [edx-0x61]
  417af6:	xor    eax,0x68620198
  417afb:	imul   edi,ecx,0xffffffb0
  417afe:	sbb    BYTE PTR [ecx+esi*4+0x4c18da83],dh
  417b05:	xlat   BYTE PTR ds:[ebx]
  417b06:	mov    cl,0xd3
  417b08:	jbe    0x417adf
  417b0a:	pop    eax
  417b0b:	sub    BYTE PTR [edi-0x2191c6b6],al
  417b11:	fxch   st(7)
  417b13:	or     BYTE PTR [esi+0x13a9f608],al
  417b19:	mov    edi,DWORD PTR [edx-0x3d749c46]
  417b1f:	sub    al,0x3f
  417b21:	sbb    eax,0x7a7f583b
  417b26:	cdq    
  417b27:	push   eax
  417b28:	clc    
  417b29:	(bad)  
  417b2a:	cs dec esp
  417b2c:	mov    eax,0x61e489a6
  417b31:	ja     0x417b5b
  417b33:	addr16 adc al,0xf3
  417b36:	(bad)  
  417b37:	mov    ch,0x16
  417b39:	fcmovbe st,st(1)
  417b3b:	lock mov eax,ds:0x60eef5ef
  417b41:	jne    0x417b63
  417b43:	mov    dh,0xb8
  417b45:	in     eax,dx
  417b46:	sbb    bh,BYTE PTR [edx+0x78ac5c17]
  417b4c:	test   eax,0xabd9dc9a
  417b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b52:	ret    
  417b53:	rol    BYTE PTR [ebx+0x54],1
  417b56:	cmp    dh,BYTE PTR [eax]
  417b58:	sbb    al,bl
  417b5a:	dec    esp
  417b5b:	mov    al,0xcb
  417b5d:	cmc    
  417b5e:	push   esp
  417b5f:	pop    edx
  417b60:	sbb    DWORD PTR [edx-0xc],ecx
  417b63:	adc    ch,ah
  417b65:	stos   BYTE PTR es:[edi],al
  417b66:	add    BYTE PTR [eax-0x1e],dh
  417b69:	(bad)  
  417b6a:	sar    DWORD PTR [edx+0x222cf781],0x4d
  417b71:	je     0x417be5
  417b73:	retf   
  417b74:	clc    
  417b75:	and    DWORD PTR [esi+0x3568302b],0xfffffff8
  417b7c:	test   al,0x6a
  417b7e:	pop    eax
  417b7f:	pushf  
  417b80:	xchg   ah,ah
  417b82:	xor    al,0x39
  417b84:	mov    ds:0xd95d4a87,al
  417b89:	lea    esi,[ebp-0x37]
  417b8c:	dec    dx
  417b8e:	xor    bh,BYTE PTR [eax]
  417b90:	popf   
  417b91:	mov    ds:0xb5a90542,eax
  417b96:	(bad)  
  417b97:	fisttp DWORD PTR [edi]
  417b99:	lea    ebx,[edx+0x3bc8a8a4]
  417b9f:	ret    
  417ba0:	mov    cl,0xbb
  417ba2:	std    
  417ba3:	outs   dx,BYTE PTR ds:[esi]
  417ba4:	cld    
  417ba5:	add    DWORD PTR [edi],edi
  417ba7:	ins    BYTE PTR es:[edi],dx
  417ba8:	shr    DWORD PTR [ebx+0x52],cl
  417bab:	mov    WORD PTR [esi],ss
  417bad:	repnz scas al,BYTE PTR es:[edi]
  417baf:	and    ebp,DWORD PTR [ebx-0xd]
  417bb2:	adc    BYTE PTR [esi-0x6ab7f5ee],cl
  417bb8:	or     BYTE PTR [ecx+eax*2-0x69],dh
  417bbc:	jo     0x417c2b
  417bbe:	arpl   WORD PTR ds:0xca6d2a14,si
  417bc4:	add    ecx,ecx
  417bc6:	nop
  417bc7:	in     eax,0x11
  417bc9:	stos   BYTE PTR es:[edi],al
  417bca:	xchg   edx,eax
  417bcb:	(bad)  
  417bcc:	fcomi  st,st(7)
  417bce:	lahf   
  417bcf:	adc    edx,DWORD PTR [ebp+edi*8-0x7b31592f]
  417bd6:	jmp    0x5045:0x3edc5c5d
  417bdd:	fld    QWORD PTR [edi+0x58]
  417be0:	jae    0x417bd9
  417be2:	pusha  
  417be3:	bound  ecx,QWORD PTR [edi-0x643dcdc8]
  417be9:	mov    DWORD PTR [edx+0x3],edi
  417bec:	mov    al,ds:0xbae36e8a
  417bf1:	dec    ebx
  417bf2:	inc    ebp
  417bf3:	cli    
  417bf4:	dec    ebx
  417bf5:	adc    al,0x31
  417bf7:	call   0x40396e02
  417bfc:	enter  0x4e3c,0xbb
  417c00:	pop    ss
  417c01:	push   ss
  417c02:	mov    edx,0x3b4db1b2
  417c07:	sbb    dl,BYTE PTR [ecx]
  417c09:	fimul  DWORD PTR [ebx-0x1537c339]
  417c0f:	sbb    edi,eax
  417c11:	sahf   
  417c12:	mov    dl,0xb7
  417c14:	(bad)  
  417c15:	push   es
  417c16:	in     al,dx
  417c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c18:	or     al,0x5a
  417c1a:	xchg   esp,eax
  417c1b:	push   esi
  417c1c:	sub    eax,DWORD PTR [edx*8-0x3e2cee60]
  417c23:	loop   0x417c0b
  417c25:	mov    BYTE PTR [edx],cl
  417c27:	xor    BYTE PTR [esp+edx*1+0x4d],ah
  417c2b:	and    cl,BYTE PTR [edx+0x133c214e]
  417c31:	ficomp DWORD PTR [ecx*4+0x6c70d286]
  417c38:	xchg   ecx,eax
  417c39:	hlt    
  417c3a:	dec    esi
  417c3b:	cld    
  417c3c:	mov    eax,ds:0x1fcd9c47
  417c41:	xchg   edi,eax
  417c42:	push   0x28
  417c44:	dec    ebx
  417c45:	cmp    edx,DWORD PTR [ecx+edi*8]
  417c48:	ins    DWORD PTR es:[edi],dx
  417c49:	jae    0x417c80
  417c4b:	sbb    BYTE PTR ds:0xc88e3bb0,bl
  417c51:	fwait
  417c52:	add    esi,DWORD PTR [edi-0x1480726b]
  417c58:	or     eax,0xe961735a
  417c5d:	mov    ecx,0x5536b263
  417c62:	push   edi
  417c63:	jg     0x417c94
  417c65:	mov    esi,0x9217ffda
  417c6a:	(bad)  [ecx]
  417c6c:	add    BYTE PTR [ebp+0x6c2ea23d],cl
  417c72:	cli    
  417c73:	stos   DWORD PTR es:[edi],eax
  417c74:	inc    ebx
  417c75:	and    DWORD PTR [eax+0x6c],0x51
  417c79:	ss in  al,dx
  417c7b:	jmp    0xd001:0xfb1a876b
  417c82:	jb     0x417cf5
  417c84:	pop    bp
  417c86:	ss clc 
  417c88:	(bad)  
  417c89:	pop    esp
  417c8a:	iret   
  417c8b:	dec    esi
  417c8c:	outs   dx,DWORD PTR ds:[esi]
  417c8d:	add    DWORD PTR [ecx],0x62
  417c90:	adc    DWORD PTR [edx+0x4a],esp
  417c93:	test   DWORD PTR [ebx+0x3f],ebp
  417c96:	and    BYTE PTR [edi-0x46476a],bl
  417c9c:	push   ss
  417c9d:	in     eax,0xbe
  417c9f:	push   cs
  417ca0:	inc    edx
  417ca1:	repz scas eax,DWORD PTR es:[edi]
  417ca3:	jnp    0x417c3f
  417ca5:	mov    edi,DWORD PTR [edx]
  417ca7:	pop    edi
  417ca8:	pop    edx
  417ca9:	bound  ebp,QWORD PTR [ebp+0x24]
  417cac:	sar    BYTE PTR [ebx+0x3c],0xa8
  417cb0:	pop    esp
  417cb1:	sub    cl,BYTE PTR [ebx-0x2bc2737]
  417cb7:	js     0x417cec
  417cb9:	mov    WORD PTR [edx+0x42d436e4],?
  417cbf:	mov    bh,0xdb
  417cc1:	mov    BYTE PTR [ebx],bh
  417cc3:	sub    BYTE PTR [esi],bh
  417cc5:	cli    
  417cc6:	cdq    
  417cc7:	(bad)  
  417cc8:	cwde   
  417cc9:	cmp    al,0x5c
  417ccb:	mov    dh,0xa5
  417ccd:	adc    BYTE PTR cs:[esi+edx*1+0x77568ba],dl
  417cd5:	or     BYTE PTR [edx],bl
  417cd7:	xchg   ebx,eax
  417cd8:	and    BYTE PTR [ecx+edi*1],ch
  417cdb:	pop    esp
  417cdc:	stos   BYTE PTR es:[edi],al
  417cdd:	mov    ebx,DWORD PTR [edx+0x2bad7bf1]
  417ce3:	xchg   edx,eax
  417ce4:	fist   WORD PTR [ebp+edi*1+0x76ac80d8]
  417ceb:	xchg   ebp,eax
  417cec:	call   0xd6f4be55
  417cf1:	or     al,0xda
  417cf3:	pop    esi
  417cf4:	add    eax,0x41581972
  417cf9:	ret    
  417cfa:	adc    edi,edi
  417cfc:	dec    esi
  417cfd:	push   ss
  417cfe:	xchg   edi,eax
  417cff:	mov    ah,0x2e
  417d01:	shr    DWORD PTR [eax-0x513de7ef],1
  417d07:	ja     0x417d11
  417d09:	jle    0x417d1a
  417d0b:	sub    edx,DWORD PTR [eax+0x7e]
  417d0e:	lods   eax,DWORD PTR ds:[esi]
  417d0f:	jnp    0x417d3f
  417d11:	stc    
  417d12:	sub    DWORD PTR [edx+0x6436ef30],esp
  417d18:	cdq    
  417d19:	neg    DWORD PTR [eax]
  417d1b:	push   es
  417d1c:	add    eax,0x47d14a8a
  417d21:	add    DWORD PTR [ebx-0x29],eax
  417d24:	inc    ebp
  417d25:	(bad)  
  417d26:	hlt    
  417d27:	fadd   QWORD PTR [eax]
  417d29:	xlat   BYTE PTR ds:[ebx]
  417d2a:	ss mov ch,0xa3
  417d2d:	push   ss
  417d2e:	retf   0x5896
  417d31:	push   0x6d
  417d33:	sub    eax,0xc6ed210
  417d38:	mov    ebp,0xfc59081
  417d3d:	call   0x368d:0x2eabe9f6
  417d44:	ror    esp,0x4e
  417d47:	mov    fs,WORD PTR [esp+ecx*4-0x56]
  417d4b:	push   ebx
  417d4c:	mov    dh,0x3d
  417d4e:	into   
  417d4f:	inc    ebx
  417d50:	push   ecx
  417d51:	push   esp
  417d52:	xor    eax,ebx
  417d54:	adc    eax,DWORD PTR [edi]
  417d56:	push   ebx
  417d57:	or     eax,0x209fc57f
  417d5c:	mov    ds:0xdfa41eb5,eax
  417d61:	test   BYTE PTR [ebp+0x3747f339],ch
  417d67:	cmp    BYTE PTR [edx],al
  417d69:	jne    0x417d2c
  417d6b:	cmp    eax,0x58b6d669
  417d70:	sbb    dl,dl
  417d72:	fiadd  WORD PTR [ecx+eax*8]
  417d75:	nop
  417d76:	fcomi  st,st(2)
  417d78:	in     al,0xea
  417d7a:	popf   
  417d7b:	and    eax,0xef061e10
  417d80:	adc    al,0x92
  417d82:	outs   dx,BYTE PTR ds:[esi]
  417d83:	pushf  
  417d84:	cmc    
  417d85:	scas   eax,DWORD PTR es:[edi]
  417d86:	retf   0x1309
  417d89:	mov    ah,BYTE PTR [ebx]
  417d8b:	inc    edi
  417d8c:	lods   eax,DWORD PTR ds:[esi]
  417d8d:	clc    
  417d8e:	sahf   
  417d8f:	mov    esp,0x79ee630
  417d94:	or     DWORD PTR [edx],0x8e56d4a8
  417d9a:	mov    edx,0x79ef1ae7
  417d9f:	arpl   WORD PTR [edi],sp
  417da1:	xor    bh,BYTE PTR es:[eax]
  417da4:	xchg   esp,eax
  417da5:	imul   esp,edi,0xffffffad
  417da8:	inc    esp
  417da9:	jne    0x417d5b
  417dab:	xor    al,0x6d
  417dad:	ror    BYTE PTR [esi+ebx*1],0xa0
  417db1:	push   ebx
  417db2:	cli    
  417db3:	mov    ebx,0xce281e1
  417db8:	add    esp,eax
  417dba:	xor    al,0xc8
  417dbc:	mov    esp,gs
  417dbe:	nop
  417dbf:	daa    
  417dc0:	dec    esi
  417dc1:	dec    edx
  417dc2:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  417dc4:	cwde   
  417dc5:	stc    
  417dc6:	pop    esi
  417dc7:	jmp    0x4d772fe1
  417dcc:	in     eax,0x2a
  417dce:	adc    eax,0x5a431238
  417dd3:	adc    ax,0x6c70
  417dd7:	mov    bl,0xa8
  417dd9:	sar    BYTE PTR [edx-0x118e4045],0x7b
  417de0:	sbb    BYTE PTR [edx-0x5a60c352],bl
  417de6:	iret   
  417de7:	rcl    DWORD PTR [esi],cl
  417de9:	adc    DWORD PTR es:[edi],ecx
  417dec:	imul   edx,ebx,0xffffffdc
  417def:	std    
  417df0:	and    BYTE PTR [esi-0x50b44fa2],dh
  417df6:	xor    eax,0x37fd4584
  417dfb:	clc    
  417dfc:	fldcw  WORD PTR [esi-0x7831b71a]
  417e02:	popa   
  417e03:	add    DWORD PTR [eax-0x69],0x220cd30c
  417e0a:	xlat   BYTE PTR ds:[ebx]
  417e0b:	nop
  417e0c:	retf   
  417e0d:	mov    ebp,0x4e506b02
  417e12:	cmp    cl,BYTE PTR [eax+0x3737814b]
  417e18:	inc    eax
  417e19:	out    dx,al
  417e1a:	je     0x417e7e
  417e1c:	rol    BYTE PTR [edx+0x57b2848a],0x24
  417e23:	cwde   
  417e24:	fldcw  WORD PTR [esi]
  417e26:	xor    BYTE PTR [eax+0x7e],ch
  417e29:	adc    eax,0xdb1800ae
  417e2e:	add    al,0xba
  417e30:	mov    dl,0xcb
  417e32:	int    0x17
  417e34:	adc    eax,0xdb3135ea
  417e39:	(bad)  
  417e3a:	out    dx,al
  417e3b:	xor    eax,0x18d382c6
  417e40:	in     eax,dx
  417e41:	sbb    edx,0x71
  417e44:	icebp  
  417e45:	mov    edi,0x9a2b6d86
  417e4a:	cmp    eax,0x5c964ab8
  417e4f:	test   al,0xb8
  417e51:	inc    eax
  417e52:	sub    eax,ebx
  417e54:	push   esp
  417e55:	adc    eax,0x9fb0f1c2
  417e5a:	shr    BYTE PTR [edi+0x5ba4c8b1],0xef
  417e61:	jge    0x417df8
  417e63:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  417e65:	pop    ebp
  417e66:	adc    edx,DWORD PTR [edx-0x72]
  417e69:	mov    ebp,ebx
  417e6b:	fisub  WORD PTR [eax]
  417e6d:	shl    DWORD PTR [edi],0x98
  417e70:	icebp  
  417e71:	mov    edi,0x1b68c3e8
  417e76:	stc    
  417e77:	mov    cl,0x47
  417e79:	out    dx,al
  417e7a:	clc    
  417e7b:	fadd   st,st(3)
  417e7d:	dec    edx
  417e7e:	jnp    0x417ea3
  417e80:	pop    ss
  417e81:	pop    eax
  417e82:	fild   QWORD PTR [edi-0x51914dbb]
  417e88:	enter  0xf349,0xb6
  417e8c:	call   0xead54ff
  417e91:	call   0x19a4:0xe380cf9c
  417e98:	adc    dh,BYTE PTR [ecx-0x4d]
  417e9b:	add    BYTE PTR [edx-0x78],cl
  417e9e:	sub    dl,ch
  417ea0:	mov    ebp,0xf54aa4e
  417ea5:	push   cs
  417ea6:	dec    ecx
  417ea7:	js     0x417ed2
  417ea9:	adc    cl,BYTE PTR [ecx+0x33253805]
  417eaf:	mov    ch,0xef
  417eb1:	pop    edi
  417eb2:	pop    ecx
  417eb3:	dec    esp
  417eb4:	pop    esp
  417eb5:	fsubr  st(6),st
  417eb7:	in     eax,0x18
  417eb9:	sbb    ax,0x155d
  417ebd:	xchg   DWORD PTR [edx-0x36404738],esp
  417ec3:	mov    edx,0x9dc8886f
  417ec8:	ret    0xd0da
  417ecb:	xchg   edi,eax
  417ecc:	ds jbe 0x417eb3
  417ecf:	hlt    
  417ed0:	retf   0x6d8e
  417ed3:	mov    ebx,0x8d52f289
  417ed8:	retf   
  417ed9:	test   BYTE PTR [edx+0xe],bl
  417edc:	clc    
  417edd:	and    BYTE PTR [ebx],bl
  417edf:	mov    esi,0x283fd529
  417ee4:	and    BYTE PTR [edi],0x65
  417ee7:	and    BYTE PTR [eax],bl
  417ee9:	add    BYTE PTR [ebx-0x4d],bh
  417eec:	je     0x417f58
  417eee:	pushf  
  417eef:	ins    BYTE PTR es:[edi],dx
  417ef0:	retf   0x6a2a
  417ef3:	les    ebx,FWORD PTR [esi-0x28705be5]
  417ef9:	test   DWORD PTR [bp-0x2f6e],ebp
  417efe:	fs jo  0x417ec0
  417f01:	inc    DWORD PTR [esi-0x48a76f91]
  417f07:	in     al,0x89
  417f09:	call   0x4830:0xac35a731
  417f10:	(bad)  
  417f11:	jl     0x417f86
  417f13:	push   ebx
  417f14:	or     BYTE PTR [ebx+0x43],bl
  417f17:	mov    edx,0x179d0e82
  417f1c:	punpckhdq mm0,QWORD PTR [ebp+0x26927724]
  417f23:	push   edi
  417f24:	shr    DWORD PTR [ebx-0x940ba7a],1
  417f2a:	mov    edi,DWORD PTR [ecx]
  417f2c:	mov    edx,0x68921ca1
  417f31:	xchg   edx,eax
  417f32:	out    dx,al
  417f33:	and    al,0xca
  417f35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f36:	sbb    bh,BYTE PTR [edx+0x58]
  417f39:	lock mov eax,ds:0x1aed0a9f
  417f3f:	lock or al,0x70
  417f42:	mov    ah,0x70
  417f44:	push   esi
  417f45:	std    
  417f46:	jmp    0x417fb7
  417f48:	fimul  WORD PTR [ebp+0x3ec3e90a]
  417f4e:	xlat   BYTE PTR ds:[ebx]
  417f4f:	out    0x48,eax
  417f51:	int3   
  417f52:	mov    ch,0xd0
  417f54:	sbb    edx,ebp
  417f56:	jge    0x417fba
  417f58:	outs   dx,BYTE PTR ds:[esi]
  417f59:	daa    
  417f5a:	data16 hlt 
  417f5c:	call   0x8f249ff
  417f61:	je     0x417f53
  417f63:	loope  0x417f4e
  417f65:	dec    edx
  417f66:	sub    bh,BYTE PTR [ebp+0x66ae43da]
  417f6c:	nop
  417f6d:	sbb    DWORD PTR [ebx-0x15],ecx
  417f70:	call   0xd2f436ba
  417f75:	sbb    al,0xa
  417f77:	jns    0x417f87
  417f79:	jmp    0x38fe:0xfa0baf33
  417f80:	retf   
  417f81:	int    0x9e
  417f83:	retf   0x8e30
  417f86:	call   0x19f6:0xfc99622e
  417f8d:	sub    DWORD PTR [eax+edi*4-0x5e],0x4fe980e0
  417f95:	mov    ebp,DWORD PTR [ecx+0x38]
  417f98:	std    
  417f99:	or     DWORD PTR [edx],0xffffffc8
  417f9c:	pop    ebx
  417f9d:	nop
  417f9e:	mov    eax,ds:0xbbaafe39
  417fa3:	mov    al,ds:0xaca08f4
  417fa8:	call   0xe86d9041
  417fad:	sub    edi,DWORD PTR [ebx]
  417faf:	mov    ebx,0xb27e517d
  417fb4:	pop    ss
  417fb5:	sub    bh,dh
  417fb7:	int    0x2b
  417fb9:	or     al,al
  417fbb:	cld    
  417fbc:	cs mov bh,0x4a
  417fbf:	rcr    DWORD PTR [ebx],1
  417fc1:	retf   0xa5af
  417fc4:	rcl    BYTE PTR [eax-0x75],cl
  417fc7:	out    0x1b,eax
  417fc9:	push   0xffffffeb
  417fcb:	sub    BYTE PTR [edx],dh
  417fcd:	xor    edi,DWORD PTR [edi]
  417fcf:	ins    BYTE PTR es:[edi],dx
  417fd0:	inc    eax
  417fd1:	and    eax,0x8dd9c7d6
  417fd6:	sbb    bl,BYTE PTR [esi+0x57c7d13e]
  417fdc:	neg    BYTE PTR [esi*1-0x4481d098]
  417fe3:	test   eax,ebx
  417fe5:	push   esp
  417fe6:	mov    ?,WORD PTR [edx+0x3796e0b4]
  417fec:	fistp  DWORD PTR [edx+0x15dccde9]
  417ff2:	inc    edx
  417ff3:	out    0xd9,al
  417ff5:	adc    eax,0x56382034
  417ffa:	dec    ebx
  417ffb:	mov    al,0x42
  417ffd:	jne    0x417fab
  417fff:	push   es
  418000:	sbb    ecx,DWORD PTR [edx]
  418002:	xlat   BYTE PTR ds:[ebx]
  418003:	fisttp DWORD PTR [ebp+0x6f]
  418006:	push   ds
  418007:	ret    0x3206
  41800a:	mov    esp,DWORD PTR [esi+0x423ecae4]
  418010:	ficomp WORD PTR [eax]
  418012:	xchg   esi,eax
  418013:	xor    bl,cl
  418015:	dec    edx
  418016:	lods   al,BYTE PTR ds:[esi]
  418017:	xor    BYTE PTR [ebp-0x4fe62446],bh
  41801d:	stos   BYTE PTR es:[edi],al
  41801e:	push   eax
  41801f:	dec    ebx
  418020:	(bad)  
  418021:	xchg   esi,eax
  418022:	cmp    al,0x22
  418024:	dec    edi
  418025:	sub    ebp,DWORD PTR [ecx+ebx*4-0x1a]
  418029:	push   0xffffffeb
  41802b:	mov    esp,0x6c09631b
  418030:	jmp    0x417ffc
  418032:	dec    eax
  418033:	mov    DWORD PTR [esi-0x5f],ebp
  418036:	xchg   edx,eax
  418037:	inc    edi
  418038:	sbb    dl,BYTE PTR [eax-0x368f0c09]
  41803e:	(bad)  
  41803f:	mov    edx,DWORD PTR [edx-0x79]
  418042:	cli    
  418043:	nop
  418044:	mov    al,0xde
  418046:	out    dx,al
  418047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418048:	mov    ebp,0x44983fd5
  41804d:	mov    esi,0x11484087
  418052:	div    DWORD PTR [edi-0x2fbc6284]
  418058:	adc    dl,bh
  41805a:	and    DWORD PTR [ebp+0x42],eax
  41805d:	push   ss
  41805e:	xchg   esi,eax
  41805f:	push   ebx
  418060:	xlat   BYTE PTR ds:[ebx]
  418061:	xor    al,0x68
  418063:	out    dx,eax
  418064:	mov    dl,0x85
  418066:	dec    edx
  418067:	loop   0x418057
  418069:	loope  0x417ffa
  41806b:	xchg   ebx,eax
  41806c:	pusha  
  41806d:	xor    BYTE PTR [eax+ebp*1],bh
  418070:	xor    BYTE PTR [edx],ch
  418072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418073:	out    dx,eax
  418074:	fsubr  DWORD PTR [ebp+0x2e]
  418077:	mov    bl,0x5
  418079:	mov    bh,0xac
  41807b:	js     0x418048
  41807d:	mov    edx,0x51e2285e
  418082:	out    0x76,eax
  418084:	(bad)  
  418085:	shl    DWORD PTR [edx+esi*1-0x42e4bcd8],1
  41808c:	jle    0x418028
  41808e:	mov    ebx,DWORD PTR [edx+edi*4-0x618e7d7f]
  418095:	or     ecx,DWORD PTR [ecx-0x28]
  418098:	jmp    0x4180ff
  41809a:	mov    cs,WORD PTR [edi]
  41809c:	scas   eax,DWORD PTR es:[edi]
  41809d:	sub    al,0xc0
  41809f:	fwait
  4180a0:	sbb    edx,DWORD PTR [edx]
  4180a2:	jmp    0x4180cd
  4180a4:	and    BYTE PTR [esi-0x250071a9],bh
  4180aa:	mov    ch,0x59
  4180ac:	or     ah,ch
  4180ae:	and    DWORD PTR [edx+0x27],esi
  4180b1:	jb     0x4180c8
  4180b3:	lods   al,BYTE PTR ds:[esi]
  4180b4:	stos   BYTE PTR es:[edi],al
  4180b5:	mov    dl,0xba
  4180b7:	in     al,dx
  4180b8:	push   0xffffff82
  4180ba:	or     bh,BYTE PTR [ecx+ebp*2+0x5a]
  4180be:	int    0x2f
  4180c0:	aam    0xbd
  4180c2:	cmp    al,0xc8
  4180c4:	xchg   ebx,eax
  4180c5:	mov    ds:0x3af835db,al
  4180ca:	cwde   
  4180cb:	scas   al,BYTE PTR es:[edi]
  4180cc:	xchg   ecx,eax
  4180cd:	dec    DWORD PTR [ebp+edx*4+0x19]
  4180d1:	ficom  DWORD PTR ds:0xecc28522
  4180d7:	das    
  4180d8:	ror    al,1
  4180da:	jle    0x41814c
  4180dc:	(bad)  
  4180dd:	(bad)  
  4180de:	jl     0x418148
  4180e0:	(bad)  
  4180e1:	nop
  4180e2:	jbe    0x418107
  4180e4:	cmp    ah,BYTE PTR [ecx]
  4180e6:	pop    ds
  4180e7:	mov    ch,0xcf
  4180e9:	xor    WORD PTR [eax+0x3b6cda67],bx
  4180f0:	mov    eax,0x84b79459
  4180f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180f6:	or     cl,BYTE PTR [eax+0x42530d7c]
  4180fc:	lock scas al,BYTE PTR es:[edi]
  4180fe:	push   ebx
  4180ff:	xor    eax,0xb9aa8cd3
  418104:	push   0xf66c796a
  418109:	loop   0x4180b6
  41810b:	add    DWORD PTR [edi+0x49],esp
  41810e:	dec    ecx
  41810f:	sahf   
  418110:	adc    edx,ebx
  418112:	mov    al,0x19
  418114:	(bad)  
  418115:	cld    
  418116:	jmp    0x52c5:0x9e210919
  41811d:	mov    BYTE PTR [edx+0x20],ch
  418120:	inc    edx
  418121:	cmp    eax,0x2fbb8185
  418126:	ins    DWORD PTR es:[edi],dx
  418127:	clc    
  418128:	mov    cl,0x78
  41812a:	cld    
  41812b:	inc    ebx
  41812c:	push   cs
  41812d:	or     DWORD PTR ds:0xea818194,edx
  418133:	mov    eax,cs:0x216c6a97
  418139:	fistp  QWORD PTR [ecx-0x68]
  41813c:	xchg   esi,eax
  41813d:	sti    
  41813e:	cli    
  41813f:	aam    0xcf
  418141:	cmp    DWORD PTR [edx+0x75],0xc20d8be7
  418148:	sahf   
  418149:	sbb    DWORD PTR [eax+ebx*2],esi
  41814c:	es es dec ebx
  41814f:	jmp    0x418190
  418151:	jns    0x418111
  418153:	and    eax,0x3fef764b
  418158:	sub    eax,DWORD PTR [ebx+0x31181adf]
  41815e:	xor    ch,BYTE PTR [eax]
  418160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418161:	push   eax
  418162:	mov    bl,0xfe
  418164:	out    dx,eax
  418165:	loop   0x418156
  418167:	and    BYTE PTR [edi+0x574ebb7],bh
  41816d:	je     0x4181c2
  41816f:	mov    bl,0xf0
  418171:	mov    ebx,0xd10875d4
  418176:	aaa    
  418177:	push   0x4117b14d
  41817c:	das    
  41817d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41817e:	call   0xdd85f3a0
  418183:	iret   
  418184:	sub    eax,0xa6c0aa89
  418189:	(bad)  
  41818a:	aaa    
  41818b:	or     BYTE PTR [edi],cl
  41818d:	leave  
  41818e:	jae    0x418209
  418190:	mov    edi,0x19990a60
  418195:	shl    BYTE PTR [eax+0x31],cl
  418198:	sub    al,0x2d
  41819a:	scas   al,BYTE PTR es:[edi]
  41819b:	lods   eax,DWORD PTR ds:[esi]
  41819c:	(bad)  
  41819d:	jbe    0x4181d2
  41819f:	jbe    0x418148
  4181a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181a2:	cmp    edi,DWORD PTR [eax+0x5caa3f9b]
  4181a8:	pushf  
  4181a9:	in     eax,dx
  4181aa:	sub    DWORD PTR [eax-0x37cae96e],edx
  4181b0:	mov    ebx,0x6311a967
  4181b5:	mov    BYTE PTR [edx+0x365513cd],dl
  4181bb:	call   0xe5a19934
  4181c0:	xchg   edi,eax
  4181c1:	mov    ch,BYTE PTR [edx]
  4181c3:	(bad)  
  4181c4:	int    0x2
  4181c6:	cmc    
  4181c7:	push   edx
  4181c8:	test   DWORD PTR [esi],0x48cae834
  4181ce:	aam    0x21
  4181d0:	sub    BYTE PTR [ebp+0x3526b156],bh
  4181d6:	push   0xfc9c3576
  4181db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181dc:	or     eax,0x72179be
  4181e1:	in     al,dx
  4181e2:	cli    
  4181e3:	or     al,bl
  4181e5:	push   esp
  4181e6:	dec    esi
  4181e7:	mov    bh,0xdf
  4181e9:	imul   eax,DWORD PTR [edi+0x48],0xd
  4181ed:	push   0x15
  4181ef:	mov    ebx,0x5aab5ff9
  4181f4:	dec    edx
  4181f5:	fisttp QWORD PTR [eax]
  4181f7:	pusha  
  4181f8:	or     al,ah
  4181fa:	cli    
  4181fb:	mov    bh,0x65
  4181fd:	xchg   ecx,eax
  4181fe:	or     eax,0x200c2476
  418203:	xchg   esi,eax
  418204:	pop    edx
  418205:	jo     0x41822c
  418207:	and    esi,DWORD PTR [edi-0x3a]
  41820a:	xor    bh,al
  41820c:	inc    ecx
  41820d:	adc    cl,BYTE PTR [ecx]
  41820f:	in     eax,dx
  418210:	pop    eax
  418211:	sub    ebp,DWORD PTR [ecx-0x9d8cc4e]
  418217:	arpl   WORD PTR [esi-0x1458cee5],cx
  41821d:	xchg   edx,eax
  41821e:	aas    
  41821f:	sub    BYTE PTR [ebp-0x4025501d],cl
  418225:	jmp    0x2a33:0xba196a46
  41822c:	loopne 0x41821e
  41822e:	sar    al,1
  418230:	mov    ds:0x4b1df3f3,al
  418235:	push   ebx
  418236:	xor    eax,0x84f7ed68
  41823b:	jne    0x4181f4
  41823d:	test   DWORD PTR [edx],edi
  41823f:	lea    edi,[esi]
  418241:	add    BYTE PTR [edi+0x49491e06],dh
  418247:	test   al,0xd2
  418249:	scas   eax,DWORD PTR es:[edi]
  41824a:	jp     0x4182c0
  41824c:	sbb    BYTE PTR [ebx+0x2ca8afb1],bh
  418252:	shl    DWORD PTR [esp+eiz*8+0x3ae74c9a],cl
  418259:	push   0xffffff9b
  41825b:	fwait
  41825c:	adc    DWORD PTR [edx],esp
  41825e:	sahf   
  41825f:	das    
  418260:	or     BYTE PTR [ebx],al
  418262:	inc    ebx
  418263:	push   0xe
  418265:	mov    cl,BYTE PTR [esi+ebx*1-0x45]
  418269:	scas   al,BYTE PTR es:[edi]
  41826a:	(bad)  
  41826b:	aaa    
  41826c:	test   al,0x84
  41826e:	not    BYTE PTR [esi-0x1a02dde6]
  418274:	cmp    al,0x85
  418276:	pop    eax
  418277:	mov    cl,0x1b
  418279:	stos   BYTE PTR es:[edi],al
  41827a:	sub    dl,BYTE PTR [ebp+ecx*2+0x3a]
  41827e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41827f:	pusha  
  418280:	dec    esp
  418281:	call   DWORD PTR [ecx]
  418283:	cmp    DWORD PTR [ecx],ecx
  418285:	mov    edx,?
  418287:	into   
  418288:	fisubr WORD PTR [ebp+eax*8+0x3dac238e]
  41828f:	clc    
  418290:	cmp    al,0xb4
  418292:	jmp    0xaa8f9f86
  418297:	das    
  418298:	mov    ah,0xd6
  41829a:	scas   al,BYTE PTR es:[edi]
  41829b:	invd   
  41829d:	fcom   QWORD PTR [esi+0x5b0a15ac]
  4182a3:	call   0x16dd:0xe2f58441
  4182aa:	std    
  4182ab:	sub    ah,BYTE PTR [eax-0x80]
  4182ae:	fisub  DWORD PTR [edx+edi*1]
  4182b1:	add    eax,0x28b08923
  4182b6:	xor    al,0x38
  4182b8:	adc    ecx,ecx
  4182ba:	ror    DWORD PTR [ebx-0x78],0xca
  4182be:	or     bh,BYTE PTR [edx+0x2772d875]
  4182c4:	sar    BYTE PTR [edx-0x3c531d3a],0x8c
  4182cb:	adc    ecx,ebx
  4182cd:	mov    al,ds:0xb5c83695
  4182d2:	stc    
  4182d3:	mov    dl,0x6f
  4182d5:	or     cl,BYTE PTR ss:[esi+0x16]
  4182d9:	call   0x89c0:0x105446a2
  4182e0:	pop    edi
  4182e1:	cmp    BYTE PTR [eax-0x7e],bh
  4182e4:	inc    edi
  4182e5:	or     dl,0x2d
  4182e8:	rcl    DWORD PTR [ecx+0x2dbb33d3],cl
  4182ee:	aaa    
  4182ef:	cwde   
  4182f0:	mov    ebp,0x83495ab
  4182f5:	std    
  4182f6:	mov    ?,WORD PTR [ebp+0x791888e9]
  4182fc:	pop    esi
  4182fd:	pushf  
  4182fe:	leave  
  4182ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418300:	pop    ss
  418301:	mov    dh,BYTE PTR [ebx]
  418303:	mov    es,esi
  418305:	out    0x60,eax
  418307:	test   cl,bl
  418309:	pop    esp
  41830a:	mov    bl,0x6d
  41830c:	imul   ecx,DWORD PTR [ebx+0x3a],0xffffffbd
  418310:	and    ah,0x16
  418313:	mov    ebx,0x8f96aae9
  418318:	or     eax,0x1907674d
  41831d:	fwait
  41831e:	mov    ah,BYTE PTR [eax]
  418320:	sub    BYTE PTR [ebp-0x243459b],al
  418326:	xor    bl,cl
  418328:	pop    ss
  418329:	sbb    cl,dh
  41832b:	lods   eax,DWORD PTR ds:[esi]
  41832c:	cmc    
  41832d:	xor    BYTE PTR [ebx],dh
  41832f:	xchg   ebx,eax
  418330:	outs   dx,BYTE PTR ds:[esi]
  418331:	repz cwde 
  418333:	fmul   DWORD PTR [ebp+edx*2+0x61]
  418337:	dec    esi
  418338:	push   esp
  418339:	and    ecx,DWORD PTR [ecx+0x50]
  41833c:	jmp    0x418365
  41833e:	sub    BYTE PTR [ebx],dh
  418340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418341:	mov    ds:0x120d0fab,al
  418346:	loopne 0x41837f
  418348:	xchg   ebx,eax
  418349:	daa    
  41834a:	dec    ax
  41834c:	test   eax,0x77f38a81
  418351:	in     al,dx
  418352:	call   0xf1d8:0x49ce8021
  418359:	popa   
  41835a:	fst    DWORD PTR [edi]
  41835c:	push   0x1cb9495a
  418361:	mov    BYTE PTR [edi+edx*1],dl
  418364:	es mov dl,0xd1
  418367:	paddw  mm1,QWORD PTR [edi+0x4ae03c0e]
  41836e:	aam    0x73
  418370:	mov    ds:0x28c110f6,al
  418375:	lods   al,BYTE PTR ds:[esi]
  418376:	(bad)  
  418377:	sub    dl,dh
  418379:	mov    ebp,DWORD PTR [edx+0x7c]
  41837c:	cmp    DWORD PTR [ecx-0x60],ecx
  41837f:	jbe    0x418347
  418381:	(bad)  
  418382:	xor    al,0xd8
  418384:	jg     0x41832a
  418386:	cmp    eax,0x9678df05
  41838b:	xchg   esi,eax
  41838c:	or     eax,0xf53e0dbe
  418391:	mov    DWORD PTR [ebx],edx
  418393:	push   esp
  418394:	mov    eax,0xad1835db
  418399:	daa    
  41839a:	int3   
  41839b:	ins    BYTE PTR es:[edi],dx
  41839c:	call   0x1aef71e8
  4183a1:	or     eax,0xca137399
  4183a6:	outs   dx,BYTE PTR ds:[esi]
  4183a7:	xlat   BYTE PTR ds:[ebx]
  4183a8:	and    dh,ch
  4183aa:	sub    esp,edx
  4183ac:	jno    0x4183e8
  4183ae:	outs   dx,DWORD PTR ds:[esi]
  4183af:	push   ebp
  4183b0:	push   ds
  4183b1:	add    bl,BYTE PTR ds:0x72c5d4f6
  4183b7:	pushf  
  4183b8:	mov    ebp,ecx
  4183ba:	lods   al,BYTE PTR ds:[esi]
  4183bb:	repnz (bad) 
  4183bd:	or     eax,0xdbd59837
  4183c2:	ins    DWORD PTR es:[edi],dx
  4183c3:	inc    esp
  4183c4:	lahf   
  4183c5:	call   0x125a6bc3
  4183ca:	aaa    
  4183cb:	mov    ecx,0xb487632c
  4183d0:	mov    esp,0x30120308
  4183d5:	(bad)  
  4183d6:	jmp    0x88c7:0xbd83c5b4
  4183dd:	push   eax
  4183de:	icebp  
  4183df:	mov    ebx,0x83ec8f24
  4183e4:	mov    eax,0x728eda93
  4183e9:	hlt    
  4183ea:	cmp    al,0x58
  4183ec:	cmp    ecx,edi
  4183ee:	jmp    0x4183ca
  4183f0:	sub    BYTE PTR [edx+ecx*4-0x50],dh
  4183f4:	lods   al,BYTE PTR ds:[esi]
  4183f5:	in     al,dx
  4183f6:	adc    DWORD PTR [edi+0x14],ecx
  4183f9:	or     cl,BYTE PTR [ecx+0x79]
  4183fc:	int3   
  4183fd:	inc    ebx
  4183fe:	xchg   esi,eax
  4183ff:	add    edi,esp
  418401:	xchg   esp,eax
  418402:	rol    DWORD PTR [eax+0x6f2a8e90],1
  418408:	enter  0xefc0,0xc6
  41840c:	dec    ebp
  41840d:	jo     0x4183be
  41840f:	lahf   
  418410:	adc    esp,DWORD PTR [ebx+0xfbd5b07]
  418416:	push   ebp
  418417:	push   esp
  418418:	inc    ebp
  418419:	cmp    BYTE PTR [edx+0x634d28b],0x2d
  418420:	scas   eax,DWORD PTR es:[edi]
  418421:	ret    0xb832
  418424:	jb     0x41848d
  418426:	enter  0x78c8,0xed
  41842a:	sub    edi,DWORD PTR [eax+0x2d73df3f]
  418430:	xchg   ebp,eax
  418431:	pop    esi
  418432:	imul   edx,DWORD PTR [edi-0x4fc49e68],0xfffffff1
  418439:	push   esi
  41843a:	jge    0x4183ee
  41843c:	enter  0xc766,0xb7
  418440:	gs xchg ebx,eax
  418442:	fmul   st(0),st
  418444:	adc    DWORD PTR [edx+0x6aeff01a],edi
  41844a:	and    eax,0x6a6f5449
  41844f:	iret   
  418450:	sub    eax,0xb5ffba8d
  418455:	stos   DWORD PTR es:[edi],eax
  418456:	cmc    
  418457:	and    eax,DWORD PTR [edx-0x6f41f422]
  41845d:	ins    BYTE PTR es:[edi],dx
  41845e:	cmp    al,0x54
  418460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418461:	cwde   
  418462:	icebp  
  418463:	xchg   esi,eax
  418464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418465:	xchg   DWORD PTR [edx+0x2280faeb],ebx
  41846b:	jg     0x4184a3
  41846d:	pusha  
  41846e:	aaa    
  41846f:	cwde   
  418470:	jno    0x418417
  418472:	gs pop ds
  418474:	sbb    BYTE PTR [ecx],al
  418476:	push   ds
  418477:	lods   al,BYTE PTR ds:[esi]
  418478:	loopne 0x4184ac
  41847a:	jmp    0x4184f0
  41847c:	loopne 0x418498
  41847e:	mov    eax,0x2cecbf65
  418483:	mov    ch,0x15
  418485:	outs   dx,DWORD PTR ds:[esi]
  418486:	call   0x63500d6a
  41848b:	scas   al,BYTE PTR es:[edi]
  41848c:	jno    0x418476
  41848e:	lea    ebx,[ebp-0x385ac5e5]
  418494:	je     0x418469
  418496:	loopne 0x418516
  418498:	push   edi
  418499:	fisttp QWORD PTR [edx]
  41849b:	(bad)  
  41849c:	cwde   
  41849d:	int    0x2a
  41849f:	mov    ebx,0x2d3a15d9
  4184a4:	or     BYTE PTR [edx+0x43],bh
  4184a7:	jecxz  0x41842c
  4184a9:	inc    eax
  4184aa:	test   BYTE PTR [ecx+edi*1+0x420eae5b],bl
  4184b1:	mov    ch,dl
  4184b3:	ds out dx,al
  4184b5:	lahf   
  4184b6:	dec    edx
  4184b7:	shl    BYTE PTR [edi-0x4a27caa9],cl
  4184bd:	pop    esp
  4184be:	cli    
  4184bf:	loopne 0x418499
  4184c1:	les    edi,FWORD PTR [ecx]
  4184c3:	mov    ch,0x6e
  4184c5:	sub    BYTE PTR [ecx+0x238a1b8b],al
  4184cb:	or     al,0x28
  4184cd:	adc    BYTE PTR [ecx+0x31],bl
  4184d0:	in     al,0xfc
  4184d2:	mov    eax,ds:0x1a85fcc7
  4184d7:	retf   0xf22a
  4184da:	cmc    
  4184db:	rcl    edx,1
  4184dd:	push   ebp
  4184de:	dec    eax
  4184df:	clc    
  4184e0:	call   0x989788a5
  4184e5:	mov    ch,0x26
  4184e7:	mov    dl,0x5a
  4184e9:	pop    es
  4184ea:	dec    ecx
  4184eb:	sbb    edi,DWORD PTR fs:[edx-0x76]
  4184ef:	test   BYTE PTR [edi+0x34e1255c],0xf3
  4184f6:	cmp    BYTE PTR ds:0x944a8ffb,ah
  4184fc:	and    BYTE PTR [ebp+0x55c2b262],0x3b
  418503:	enter  0x1d2b,0xff
  418507:	cmp    eax,0xb0dab188
  41850c:	or     al,0xe7
  41850e:	push   0xfffffff3
  418510:	inc    eax
  418511:	inc    edx
  418512:	mov    esp,0x59921346
  418517:	call   0x172c76cd
  41851c:	xor    eax,0x9984714c
  418521:	mov    ecx,0x878524aa
  418526:	inc    eax
  418527:	mov    eax,0x937a8ffa
  41852c:	in     eax,dx
  41852d:	(bad)  
  41852e:	dec    ebp
  41852f:	dec    eax
  418530:	test   al,0x66
  418532:	or     BYTE PTR [ebx-0x14],al
  418535:	inc    esp
  418536:	ss dec ebx
  418538:	inc    esi
  418539:	cmc    
  41853a:	cld    
  41853b:	mov    cl,0x38
  41853d:	cld    
  41853e:	dec    eax
  41853f:	icebp  
  418540:	test   BYTE PTR [ecx],ah
  418542:	arpl   dx,cx
  418544:	cmp    DWORD PTR [edx+0x58],esi
  418547:	sub    al,0xc6
  418549:	fnstenv [ecx+0x3a349c62]
  41854f:	push   eax
  418550:	and    ah,ah
  418552:	or     esi,DWORD PTR [edi-0x5508cd6a]
  418558:	dec    edi
  418559:	add    DWORD PTR [ebx-0x46c9fdf8],0xffffff86
  418560:	mov    ds:0x3404b682,al
  418565:	cmp    eax,0x1012e17e
  41856a:	inc    edi
  41856b:	sbb    bh,ah
  41856d:	(bad)  
  41856e:	clc    
  41856f:	into   
  418570:	arpl   WORD PTR [esi+ebx*4+0x3c976f39],sp
  418577:	fsub   DWORD PTR [ecx+0x1e]
  41857a:	dec    edx
  41857b:	jne    0x4185f7
  41857d:	add    edi,DWORD PTR ds:0xb12f1a98
  418583:	fdiv   DWORD PTR cs:[ebx+0x75e3bb46]
  41858a:	mov    cl,0x3f
  41858c:	iret   
  41858d:	or     al,0x5f
  41858f:	jge    0x418514
  418591:	stos   BYTE PTR es:[edi],al
  418592:	popa   
  418593:	ret    
  418594:	adc    al,0x19
  418596:	mul    BYTE PTR [edx]
  418598:	jne    0x41854a
  41859a:	cmp    al,0x43
  41859c:	dec    dl
  41859e:	push   eax
  41859f:	in     al,0xcc
  4185a1:	mov    eax,edx
  4185a3:	popa   
  4185a4:	not    eax
  4185a6:	inc    esi
  4185a7:	lds    esi,FWORD PTR [esi]
  4185a9:	lea    ebx,[ebp-0x852df6f]
  4185af:	xchg   ebx,eax
  4185b0:	sbb    eax,DWORD PTR [ebx-0x3ca7b41a]
  4185b6:	repnz jmp 0xdccc:0x3edd1381
  4185be:	mov    esi,0x9e8afe79
  4185c3:	mov    BYTE PTR [ebx-0x194bb0a7],bl
  4185c9:	xchg   esi,eax
  4185ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185cb:	js     0x4185e4
  4185cd:	or     ecx,DWORD PTR [edi-0x36]
  4185d0:	mov    BYTE PTR [ecx],al
  4185d2:	mov    ebx,0x2a8ca998
  4185d7:	les    edi,FWORD PTR [edi+0xe431132]
  4185dd:	jg     0x4185aa
  4185df:	cmp    al,0xbc
  4185e1:	mov    DWORD PTR [edx+0x5b],ebx
  4185e4:	jmp    0x4185ef
  4185e6:	mov    eax,ds:0x7a868548
  4185eb:	jmp    0x7310:0xbb71cf0a
  4185f2:	and    esi,ebp
  4185f4:	mov    edx,0x114c301b
  4185f9:	jmp    0x863dc15f
  4185fe:	cmp    cl,BYTE PTR [edi]
  418600:	xchg   ecx,eax
  418601:	outs   dx,BYTE PTR ds:[esi]
  418602:	sbb    al,0x82
  418604:	mov    al,ds:0xce286fd6
  418609:	fsubr  st,st(3)
  41860b:	and    al,0x11
  41860d:	lahf   
  41860e:	(bad)  
  41860f:	lock lock mov ebx,0x80363c3b
  418616:	call   DWORD PTR [edx]
  418618:	jl     0x4185a2
  41861a:	xor    BYTE PTR [eax+0x32ea2b0e],0xb3
  418621:	fmul   DWORD PTR [eax]
  418623:	mov    DWORD PTR ds:0x2d0016aa,ecx
  418629:	and    DWORD PTR ds:0x4f14e5c4,eax
  41862f:	mov    esi,0x1f6a8ee3
  418634:	idiv   BYTE PTR [ecx+ebp*2+0x2f]
  418638:	lods   al,BYTE PTR ds:[esi]
  418639:	push   ebx
  41863a:	fsubr  QWORD PTR [eax+0x6835425f]
  418640:	call   0xde2d:0xe85678e1
  418647:	mov    cl,0xac
  418649:	push   edx
  41864a:	dec    edi
  41864b:	arpl   bx,di
  41864d:	or     ah,BYTE PTR [esi+0x57]
  418650:	popf   
  418651:	test   dh,cl
  418653:	pop    ebp
  418654:	or     ch,BYTE PTR [ebp+0x17]
  418657:	scas   eax,DWORD PTR es:[edi]
  418658:	out    dx,eax
  418659:	sti    
  41865a:	xor    ah,BYTE PTR [edx]
  41865c:	lock rcl DWORD PTR [edx+0x2f8ad40d],0x73
  418664:	stos   DWORD PTR es:[edi],eax
  418665:	jmp    0x4186c9
  418667:	sbb    BYTE PTR [edi+0x5d],cl
  41866a:	outs   dx,BYTE PTR ds:[esi]
  41866b:	cmp    bl,ch
  41866d:	xor    dl,BYTE PTR ds:0x8287d8ba
  418673:	cdq    
  418674:	push   cs
  418675:	mov    gs,edx
  418677:	adc    BYTE PTR [ebx+0x2f31ae60],dl
  41867d:	mov    ebp,0x7ad2b83b
  418682:	jne    0x418604
  418684:	clc    
  418685:	call   0x4cc43a56
  41868a:	pop    edi
  41868b:	outs   dx,DWORD PTR ds:[esi]
  41868c:	adc    DWORD PTR [edx-0x23],edi
  41868f:	push   esp
  418690:	cmc    
  418691:	mov    ebp,ds
  418693:	push   edi
  418694:	cmp    DWORD PTR [edx-0x7791c8b6],edx
  41869a:	sbb    dh,BYTE PTR [esi+0x357d5d31]
  4186a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186a1:	ja     0x4186ec
  4186a3:	pop    eax
  4186a4:	in     eax,dx
  4186a5:	ds jno 0x41871a
  4186a8:	test   al,0xf9
  4186aa:	nop
  4186ab:	jmp    0x986b5c86
  4186b0:	call   0x2b27:0x59e8241e
  4186b7:	daa    
  4186b8:	stos   BYTE PTR es:[edi],al
  4186b9:	or     BYTE PTR [ecx],0xf2
  4186bc:	pusha  
  4186bd:	xor    dh,BYTE PTR [edi]
  4186bf:	push   0xdb25455b
  4186c4:	iret   
  4186c5:	and    DWORD PTR ss:[ecx-0x3c],esp
  4186c9:	jp     0x4186f4
  4186cb:	enter  0xc816,0xa2
  4186cf:	les    ecx,FWORD PTR [edx+ebx*4]
  4186d2:	xor    BYTE PTR ds:0xbf5a77d8,ah
  4186d8:	std    
  4186d9:	adc    eax,0xb7440563
  4186de:	stos   BYTE PTR es:[edi],al
  4186df:	dec    edx
  4186e0:	jmp    0x418744
  4186e2:	mov    ch,0xf1
  4186e4:	dec    ecx
  4186e5:	sub    BYTE PTR [edi],ah
  4186e7:	jp     0x418722
  4186e9:	cmovs  ebx,eax
  4186ec:	loope  0x4186d0
  4186ee:	add    cl,BYTE PTR [esi+ebp*8+0x5f]
  4186f2:	std    
  4186f3:	and    BYTE PTR [eax-0x444e26b5],bh
  4186f9:	xor    BYTE PTR [edi+0x4a9553c7],bl
  4186ff:	cwde   
  418700:	in     al,dx
  418701:	pop    es
  418702:	xor    al,BYTE PTR [edi+0x1c]
  418705:	pop    esp
  418706:	aas    
  418707:	icebp  
  418708:	mov    ebp,0xa86c3949
  41870d:	xlat   BYTE PTR ds:[ebx]
  41870e:	idiv   BYTE PTR [ebx+0x3c01bbf]
  418714:	fidivr WORD PTR [edi]
  418716:	(bad)  
  418718:	shl    BYTE PTR [ebx-0x5e],cl
  41871b:	mov    cl,0xc6
  41871d:	mov    esp,0x3b3ebe49
  418722:	pop    ds
  418723:	jg     0x4186ac
  418725:	jmp    0x41875f
  418727:	and    ch,BYTE PTR [ecx+0xfb72c17]
  41872d:	dec    ebx
  41872e:	outs   dx,DWORD PTR ds:[esi]
  41872f:	inc    edi
  418730:	imul   eax,DWORD PTR [ebp+0x30],0x96b9c228
  418737:	cwde   
  418738:	call   0x51f7b3dc
  41873d:	call   0xf0dc:0xbbb7d93d
  418744:	cmp    al,0xb8
  418746:	rcr    BYTE PTR [edi-0x8],0x2c
  41874a:	and    eax,0xdc3be7b0
  41874f:	fsubr  st,st(1)
  418751:	xchg   edx,eax
  418752:	sub    al,BYTE PTR [esi+ebx*8-0x33]
  418756:	adc    esp,DWORD PTR ds:0x7a978c5b
  41875c:	adc    BYTE PTR [esi-0x74b4505],bl
  418762:	addr16 inc ebp
  418764:	enter  0x9d38,0xac
  418768:	(bad)  
  418769:	push   ebp
  41876a:	jle    0x4187a2
  41876c:	dec    ebp
  41876d:	pushf  
  41876e:	lods   al,BYTE PTR ds:[esi]
  41876f:	push   esi
  418770:	sbb    esi,DWORD PTR [esi]
  418772:	(bad)  
  418773:	test   DWORD PTR [edi-0x50aa8081],0xf9815bb
  41877d:	mov    edx,0x17288f67
  418782:	or     eax,DWORD PTR [edi]
  418784:	pop    esp
  418785:	cs xor eax,0x74359368
  41878b:	mov    DWORD PTR [esi+0x3c78c63b],ebp
  418791:	push   cs
  418792:	jns    0x41874d
  418794:	gs imul ebx,DWORD PTR ss:[esi-0x7b74b7c],0xffffffce
  41879d:	mov    ds:0x4e5f8792,al
  4187a2:	and    eax,0xbc913229
  4187a7:	jo     0x4187a4
  4187a9:	xchg   esi,esi
  4187ab:	fbld   TBYTE PTR [edx]
  4187ad:	jno    0x4187df
  4187af:	or     dl,dh
  4187b1:	or     eax,0x4d7601ec
  4187b6:	sub    ebp,DWORD PTR [esp+eax*2]
  4187b9:	into   
  4187ba:	dec    esp
  4187bb:	cmp    eax,0xb014ce9c
  4187c0:	inc    edx
  4187c1:	retf   
  4187c2:	and    al,0x6a
  4187c4:	cmp    eax,DWORD PTR [eax+0x1f]
  4187c7:	pop    ds
  4187c8:	cli    
  4187c9:	cld    
  4187ca:	add    al,0xb9
  4187cc:	popa   
  4187cd:	push   ds
  4187ce:	pushf  
  4187cf:	fisub  DWORD PTR [ebp+0x5932da71]
  4187d5:	xchg   esi,eax
  4187d6:	sar    BYTE PTR [ebx+0x2a8aea16],0xc7
  4187dd:	pop    eax
  4187de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187df:	ins    DWORD PTR es:[edi],dx
  4187e0:	imul   esp,DWORD PTR [ecx+eiz*4-0x61],0xffffff92
  4187e5:	xor    eax,0x5e3b2eda
  4187ea:	cmp    eax,0x40f51a50
  4187ef:	inc    edi
  4187f0:	enter  0xe25a,0x60
  4187f4:	ficomp DWORD PTR [ecx+0x66]
  4187f7:	xchg   esi,eax
  4187f8:	push   edi
  4187f9:	cmp    eax,0x571e3bdc
  4187fe:	push   cs
  4187ff:	jle    0x4187d9
  418801:	push   ebx
  418802:	adc    bh,BYTE PTR [ecx-0x77f7c503]
  418808:	into   
  418809:	call   0x1e781056
  41880e:	dec    ecx
  41880f:	xor    BYTE PTR [eax+0x34b227ae],ch
  418815:	mov    ds:0x6a1794d9,al
  41881a:	push   0x98fc1dc3
  41881f:	sar    BYTE PTR ds:[esi-0x73cf528a],0x3a
  418827:	pop    es
  418828:	rol    DWORD PTR [edx-0x16],0xc2
  41882c:	loop   0x4187c8
  41882e:	fidiv  WORD PTR [eax-0x42eb12a9]
  418834:	adc    ecx,DWORD PTR [eax+0x2c]
  418837:	mov    WORD PTR [edx],cs
  418839:	jmp    0x5ee53a0
  41883e:	add    eax,0xba88838f
  418843:	inc    esp
  418844:	jbe    0x4187d0
  418846:	imul   ebp,DWORD PTR [ecx-0x7c8d1af],0x5d
  41884d:	cmp    dh,BYTE PTR es:[ebx]
  418850:	add    DWORD PTR [ebx],esp
  418852:	adc    eax,edx
  418854:	enter  0xba8f,0x8
  418858:	fild   WORD PTR ds:0x5235e750
  41885e:	sbb    edi,0x36a11613
  418864:	push   DWORD PTR [ebx+0x78]
  418867:	test   al,0xc7
  418869:	mov    dl,bh
  41886b:	hlt    
  41886c:	and    ecx,0x96379f58
  418872:	xor    BYTE PTR [eax-0x69],ch
  418875:	xchg   ebp,eax
  418876:	in     al,0xe
  418878:	fsubr  DWORD PTR [ebx-0x563a4fa1]
  41887e:	sub    DWORD PTR [edx+0x14],esi
  418881:	push   0x6c
  418883:	push   esi
  418884:	jne    0x418877
  418886:	lods   al,BYTE PTR ds:[esi]
  418887:	add    DWORD PTR [esi+0x7f19f8fb],esi
  41888d:	add    al,0x68
  41888f:	nop
  418890:	sbb    al,BYTE PTR [edx+0x2861e5f1]
  418896:	inc    edi
  418897:	push   es
  418898:	push   edi
  418899:	cmp    DWORD PTR [ebp-0x38],eax
  41889c:	inc    edi
  41889d:	add    eax,0xd63a592a
  4188a2:	cmp    edi,DWORD PTR [eax+0x55]
  4188a5:	ror    DWORD PTR [edi+ebp*4+0x3bec9610],0xcc
  4188ad:	dec    esp
  4188ae:	es inc edi
  4188b0:	push   ss
  4188b1:	pop    es
  4188b2:	ret    
  4188b3:	lds    esp,FWORD PTR [esi+0x75]
  4188b6:	dec    ecx
  4188b7:	cmp    DWORD PTR [ecx],0x1f9ada8a
  4188bd:	ja     0x418851
  4188bf:	dec    esi
  4188c0:	mov    bl,0x68
  4188c2:	or     BYTE PTR ss:[ebp-0x4b],al
  4188c6:	pop    ss
  4188c7:	adc    ebx,eax
  4188c9:	sub    eax,0xc310b569
  4188ce:	ins    BYTE PTR es:[edi],dx
  4188cf:	sub    eax,0x99698a14
  4188d4:	fistp  DWORD PTR [edi+0x59]
  4188d7:	aaa    
  4188d8:	(bad)  
  4188d9:	jmp    0x85eeff12
  4188de:	jmp    0x5740:0x6d971511
  4188e5:	pop    es
  4188e6:	aas    
  4188e7:	fadd   DWORD PTR [ebp-0x54]
  4188ea:	sub    al,0xb
  4188ec:	iret   
  4188ed:	call   0xdb78:0x830422ca
  4188f4:	shl    DWORD PTR [ecx+esi*4-0x52],cl
  4188f8:	cvtpi2ps xmm3,QWORD PTR [edx]
  4188fb:	jo     0x4188b1
  4188fd:	shl    BYTE PTR [ebp+0xa],1
  418900:	sti    
  418901:	mov    ebp,0xb2c23160
  418906:	jp     0x41888c
  418908:	xchg   edi,eax
  418909:	idiv   DWORD PTR [ebx-0x40]
  41890c:	dec    ecx
  41890d:	ins    DWORD PTR es:[edi],dx
  41890e:	lea    esp,[ecx]
  418910:	sub    ebx,DWORD PTR [ebx]
  418912:	ds leave 
  418914:	adc    eax,0x3be35275
  418919:	sahf   
  41891a:	xchg   esi,eax
  41891b:	data16 jmp 0x4188a3
  41891e:	jp     0x4188f9
  418920:	push   0x469ce865
  418925:	jae    0x418959
  418927:	clc    
  418928:	mov    ch,0xfc
  41892a:	mov    al,ds:0xa950e850
  41892f:	out    0x1e,eax
  418931:	xchg   edi,eax
  418932:	push   esi
  418933:	adc    BYTE PTR [edi-0x3a],dl
  418936:	mov    bl,0xa8
  418938:	cdq    
  418939:	in     eax,dx
  41893a:	xor    al,0x28
  41893c:	or     al,0x82
  41893e:	pop    ds
  41893f:	nop
  418940:	and    dh,dh
  418942:	lods   eax,DWORD PTR ds:[esi]
  418943:	js     0x418935
  418945:	outs   dx,BYTE PTR ds:[esi]
  418946:	cmp    al,0x38
  418948:	leave  
  418949:	sub    al,0xc7
  41894b:	out    0xf3,al
  41894d:	mov    DWORD PTR [ebx],edi
  41894f:	dec    eax
  418950:	mov    cs,WORD PTR [edi+0x1584736]
  418956:	shl    eax,cl
  418958:	mov    bh,0xa8
  41895a:	aas    
  41895b:	cld    
  41895c:	jne    0x41899c
  41895e:	cmp    al,0x95
  418960:	jno    0x4189b5
  418962:	mov    ch,BYTE PTR [edi]
  418964:	sbb    eax,DWORD PTR [esi+0x3d991f75]
  41896a:	and    ecx,ecx
  41896c:	sahf   
  41896d:	xchg   DWORD PTR [edx-0x33],ebp
  418970:	sbb    al,0x6e
  418972:	push   esi
  418973:	jl     0x418934
  418975:	xchg   ebx,eax
  418976:	cmp    ecx,DWORD PTR [eax]
  418978:	lods   al,BYTE PTR ds:[esi]
  418979:	leave  
  41897a:	sub    BYTE PTR [esi-0x30],ah
  41897d:	adc    edi,ebx
  41897f:	push   esp
  418980:	cmp    al,0xf8
  418982:	cmp    al,0xaf
  418984:	imul   eax,DWORD PTR [esi+ebp*2+0x7ccae776],0xffffffad
  41898c:	(bad)  
  41898d:	js     0x418a0d
  41898f:	test   DWORD PTR [eax+eax*8],0x8c3ff8ae
  418996:	inc    esi
  418997:	or     ebp,edx
  418999:	call   0x603a:0x81c88664
  4189a0:	punpckhdq mm5,mm2
  4189a3:	bound  edx,QWORD PTR [esi-0x2df72bdf]
  4189a9:	in     eax,dx
  4189aa:	mov    eax,0xda87ff7c
  4189af:	ins    BYTE PTR es:[edi],dx
  4189b0:	push   ds
  4189b1:	sahf   
  4189b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189b3:	xchg   ebx,eax
  4189b4:	scas   eax,DWORD PTR es:[edi]
  4189b5:	xor    BYTE PTR [ebx],0x88
  4189b8:	push   es
  4189b9:	arpl   WORD PTR [eax],sp
  4189bb:	cmp    BYTE PTR [eax+0x33],bh
  4189be:	push   ds
  4189bf:	mov    bl,0x85
  4189c1:	or     DWORD PTR gs:[esi+edx*1-0x2df74cc6],edi
  4189c9:	adc    bl,BYTE PTR [eax]
  4189cb:	jecxz  0x4189f1
  4189cd:	mov    eax,0x8f288a4b
  4189d2:	fucompp 
  4189d4:	mov    edi,0xa9506677
  4189d9:	sub    al,0x32
  4189db:	or     BYTE PTR [edx-0x27d28b38],cl
  4189e1:	inc    esi
  4189e2:	sahf   
  4189e3:	scas   eax,DWORD PTR es:[edi]
  4189e4:	(bad)  
  4189e5:	pusha  
  4189e6:	jns    0x418969
  4189e8:	leave  
  4189e9:	cli    
  4189ea:	sub    dh,BYTE PTR [ecx-0x7b885af0]
  4189f0:	test   DWORD PTR [edi+0x77],esp
  4189f3:	scas   eax,DWORD PTR es:[edi]
  4189f4:	sub    BYTE PTR [ecx+0x12],ah
  4189f7:	scas   eax,DWORD PTR es:[edi]
  4189f8:	push   edi
  4189f9:	xchg   ebx,eax
  4189fa:	or     bh,bh
  4189fc:	sbb    ebp,DWORD PTR [edx]
  4189fe:	mov    BYTE PTR [ebx+0x6a],0xcd
  418a02:	imul   BYTE PTR [eax+0x4b3b979a]
  418a08:	int3   
  418a09:	mov    cl,BYTE PTR [edx+0x47b619c5]
  418a0f:	ret    0xf4c9
  418a12:	cmp    ebp,eax
  418a14:	jmp    0xa8ac469c
  418a19:	scas   al,BYTE PTR es:[edi]
  418a1a:	push   ss
  418a1b:	mov    cl,0x16
  418a1d:	loop   0x4189fc
  418a1f:	call   FWORD PTR [eax-0x4]
  418a22:	fsub   DWORD PTR [esi]
  418a24:	adc    eax,0xcd2fee
  418a29:	loopne 0x4189b4
  418a2b:	mov    ds:0x9b1ed0fd,eax
  418a30:	or     al,0x1a
  418a32:	xchg   DWORD PTR [ebp+0x3d],ebx
  418a35:	xchg   edi,eax
  418a36:	xchg   edx,eax
  418a37:	xchg   DWORD PTR [edx+ebx*1],ecx
  418a3a:	xor    BYTE PTR [edi+edi*4+0x3f55b64a],dl
  418a41:	add    ah,BYTE PTR [ecx+0x3a85c8e1]
  418a47:	sub    ebx,DWORD PTR [ecx-0x1c28c9ee]
  418a4d:	xchg   DWORD PTR [eax],esi
  418a4f:	sbb    BYTE PTR [edi-0x13914319],ch
  418a55:	mov    ecx,0x69095ed6
  418a5a:	scas   al,BYTE PTR es:[edi]
  418a5b:	pop    ss
  418a5c:	pop    ebx
  418a5d:	or     al,0x8f
  418a5f:	mov    dl,0x1a
  418a61:	cli    
  418a62:	test   BYTE PTR [ebx+0x4f],al
  418a65:	inc    esi
  418a66:	mov    ecx,0x22667776
  418a6b:	xchg   edi,eax
  418a6c:	mov    ecx,0xa92d7be3
  418a71:	xor    DWORD PTR [esi],0xffffff94
  418a74:	adc    ebp,edx
  418a76:	push   ecx
  418a77:	rcl    eax,1
  418a79:	push   ss
  418a7a:	dec    edi
  418a7b:	fwait
  418a7c:	imul   esi,DWORD PTR [ebp+0x24],0x6a8d11a4
  418a83:	or     BYTE PTR [esi-0x5b2484f9],dl
  418a89:	imul   eax,DWORD PTR [ebp+0x4b960daf],0xffffffc0
  418a90:	repnz fisttp WORD PTR [esp+edi*2+0x33]
  418a95:	mov    ebp,0xc59638da
  418a9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a9b:	icebp  
  418a9c:	or     eax,0xc3190aa
  418aa1:	hlt    
  418aa2:	xor    al,0x20
  418aa4:	dec    ebp
  418aa5:	sbb    edi,esi
  418aa7:	or     cl,ch
  418aa9:	mov    cs,WORD PTR [edx]
  418aab:	sbb    ch,cl
  418aad:	popa   
  418aae:	out    0x6,al
  418ab0:	mov    cl,0x89
  418ab2:	ss pop eax
  418ab4:	xlat   BYTE PTR ds:[ebx]
  418ab5:	or     DWORD PTR [edi],esi
  418ab7:	fldenv [ecx+0x9]
  418aba:	xchg   esp,eax
  418abb:	loope  0x418a80
  418abd:	mov    ?,WORD PTR [edx]
  418abf:	fld    TBYTE PTR [eax]
  418ac1:	mov    ebp,0xdd9e33ba
  418ac6:	xor    BYTE PTR [eax+0x969ca0],cl
  418acc:	scas   eax,DWORD PTR es:[edi]
  418acd:	out    0x73,al
  418acf:	sar    eax,cl
  418ad1:	(bad)  
  418ad2:	data16 lods al,BYTE PTR ds:[esi]
  418ad4:	retf   0x8742
  418ad7:	outs   dx,DWORD PTR ds:[esi]
  418ad8:	sbb    dh,BYTE PTR [edi+0x60c60834]
  418ade:	ror    BYTE PTR [ebp-0x28],1
  418ae1:	dec    esi
  418ae2:	sbb    ecx,ebp
  418ae4:	dec    edi
  418ae5:	out    dx,eax
  418ae6:	(bad)  
  418ae7:	push   edx
  418ae8:	xchg   edi,eax
  418ae9:	lock xor ecx,ecx
  418aec:	ja     0x418b5c
  418aee:	out    dx,al
  418aef:	and    BYTE PTR [eax],0x54
  418af2:	out    0xb4,al
  418af4:	dec    esi
  418af5:	adc    esi,DWORD PTR [edi+0x691978cc]
  418afb:	mov    bl,0x6
  418afd:	dec    edi
  418afe:	outs   dx,BYTE PTR ds:[esi]
  418aff:	fcom   DWORD PTR [ebx+eiz*8]
  418b02:	adc    BYTE PTR [ebx-0x6a],0xde
  418b06:	ds push 0xcf654915
  418b0c:	clc    
  418b0d:	imul   ecx,DWORD PTR [edi+0x6899d0b2],0x7a
  418b14:	(bad)  
  418b15:	cli    
  418b16:	pop    edi
  418b17:	mov    cl,0x72
  418b19:	pop    edi
  418b1a:	jp     0x418b1b
  418b1c:	sub    ah,bh
  418b1e:	mov    ch,0xb0
  418b20:	lods   al,BYTE PTR ds:[esi]
  418b21:	xchg   ebp,eax
  418b22:	pop    esp
  418b23:	inc    edi
  418b24:	or     edi,DWORD PTR [ebp-0x35]
  418b27:	pop    ebp
  418b28:	enter  0x6a4e,0xe2
  418b2c:	pminub mm6,mm6
  418b2f:	push   edx
  418b30:	fistp  WORD PTR [eax+0x61]
  418b33:	(bad)  
  418b34:	test   al,0xe
  418b36:	int    0xc3
  418b38:	and    eax,0x99ab161
  418b3d:	cmp    DWORD PTR [eax+0x797661ed],ecx
  418b43:	(bad)  
  418b44:	ins    DWORD PTR es:[edi],dx
  418b45:	or     eax,0xa82c183a
  418b4a:	or     BYTE PTR [ecx+ebx*1-0x64],dl
  418b4e:	sbb    DWORD PTR [ebx-0x4420ef18],ebx
  418b54:	(bad)  
  418b55:	cmp    al,0x6b
  418b57:	xchg   DWORD PTR ds:0xd5c01c2a,edx
  418b5d:	inc    ecx
  418b5e:	sar    BYTE PTR [ecx],0x89
  418b61:	or     eax,0x6c635aae
  418b66:	fnclex 
  418b68:	push   ss
  418b69:	hlt    
  418b6a:	mov    ebx,0x75a7bc86
  418b6f:	dec    esi
  418b70:	adc    dh,bh
  418b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b73:	das    
  418b74:	adc    BYTE PTR [edi],ah
  418b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b77:	sub    esp,DWORD PTR [edi-0x60c4870a]
  418b7d:	ja     0x418b09
  418b7f:	adc    ah,BYTE PTR [ebp+0x5305dc3e]
  418b85:	pop    DWORD PTR [esi+0x61]
  418b88:	xchg   ebx,eax
  418b89:	shl    DWORD PTR [edi],1
  418b8b:	call   0x6a3857fa
  418b90:	outs   dx,BYTE PTR ds:[esi]
  418b91:	and    DWORD PTR [ebx+0x78],0x48
  418b95:	or     esp,ebp
  418b97:	cld    
  418b98:	adc    al,0xbd
  418b9a:	lahf   
  418b9b:	mov    ebx,0xb5645ac1
  418ba0:	into   
  418ba1:	int    0x5e
  418ba3:	xchg   esi,eax
  418ba4:	mov    BYTE PTR [ebx+0x62],ah
  418ba7:	retf   
  418ba8:	aaa    
  418ba9:	add    DWORD PTR ds:0x8cf5cbab,eax
  418baf:	sub    eax,0xf83fcccc
  418bb4:	add    edi,edx
  418bb6:	mov    BYTE PTR [edx],bh
  418bb8:	(bad)  
  418bb9:	jg     0x418ba7
  418bbb:	lods   al,BYTE PTR ds:[esi]
  418bbc:	and    eax,0x1c563a89
  418bc1:	sbb    al,0x92
  418bc3:	lods   al,BYTE PTR ds:[esi]
  418bc4:	(bad)  
  418bc5:	jmp    DWORD PTR [eax]
  418bc7:	mov    WORD PTR [ecx+0x71],ds
  418bca:	retf   0x9c32
  418bcd:	push   edi
  418bce:	cmp    edx,DWORD PTR [esi-0x4d97cda8]
  418bd4:	dec    ecx
  418bd5:	adc    al,0x51
  418bd7:	sub    ebx,DWORD PTR [ecx]
  418bd9:	sub    al,BYTE PTR [ecx-0x4a]
  418bdc:	sub    al,0x28
  418bde:	in     eax,dx
  418bdf:	jo     0x418bea
  418be1:	call   0x685a:0x83835799
  418be8:	pop    ebx
  418be9:	xchg   BYTE PTR [edx-0x66],dl
  418bec:	dec    esi
  418bed:	cdq    
  418bee:	out    dx,eax
  418bef:	pop    esp
  418bf0:	mov    edi,0x127e1a8d
  418bf5:	cmp    eax,0x3a87ab21
  418bfb:	int3   
  418bfc:	in     al,dx
  418bfd:	and    edi,edi
  418bff:	loop   0x418b8c
  418c01:	dec    eax
  418c02:	aas    
  418c03:	sub    BYTE PTR [edx],dh
  418c05:	mov    DWORD PTR [ecx+0x6f97a86a],ebp
  418c0b:	scas   al,BYTE PTR es:[edi]
  418c0c:	(bad)  
  418c0d:	mov    al,ds:0xda0c262c
  418c12:	hlt    
  418c13:	mov    eax,0xbc75edde
  418c18:	add    ah,0xfb
  418c1b:	lock clc 
  418c1d:	je     0x418be9
  418c1f:	add    al,0x36
  418c21:	jl     0x418c08
  418c23:	mov    ebx,0x4b2b8a18
  418c28:	cmp    eax,0x489eee06
  418c2d:	xchg   esi,eax
  418c2e:	mov    cl,0x29
  418c30:	pop    esi
  418c31:	and    ecx,DWORD PTR [ecx-0x67]
  418c34:	cld    
  418c35:	xor    eax,0x3d74ac46
  418c3a:	push   ecx
  418c3b:	fwait
  418c3c:	inc    edx
  418c3d:	jo     0x418c7c
  418c3f:	sbb    bh,cl
  418c41:	mov    esp,0x2690edda
  418c46:	mov    ds:0xa509589d,al
  418c4b:	mov    ebx,0x7259138b
  418c50:	adc    BYTE PTR [edx-0x334af9bb],cl
  418c56:	inc    ebx
  418c57:	or     esi,DWORD PTR [ecx+0x7fa27320]
  418c5d:	mov    ch,dh
  418c5f:	sub    BYTE PTR [eax+0x65da60c4],bl
  418c65:	mov    BYTE PTR [edx+eiz*2+0x4833e003],dl
  418c6c:	mov    ebx,0x48ce4913
  418c71:	mov    ds:0xea6fbbf1,eax
  418c76:	out    dx,eax
  418c77:	(bad)  
  418c78:	adc    BYTE PTR [edx+0x128eb5c6],ch
  418c7e:	shl    DWORD PTR [ebp+0x85d91e5],1
  418c84:	jl     0x418c09
  418c86:	cmp    bh,BYTE PTR [ebp+eax*8+0xc]
  418c8a:	ss pop ds
  418c8c:	sbb    eax,0x10283e46
  418c91:	int3   
  418c92:	rol    BYTE PTR [eax],0x8
  418c95:	fldenv [esi-0x4b]
  418c98:	(bad)  
  418c99:	fcmovnbe st,st(3)
  418c9b:	gs mov esp,0xcbd3d30a
  418ca1:	ds cld 
  418ca3:	or     eax,0x9a360393
  418ca8:	mov    eax,ds:0xdedc8c1c
  418cad:	(bad)  
  418cae:	dec    ebx
  418caf:	push   0xffffffdb
  418cb1:	dec    ebp
  418cb2:	hlt    
  418cb3:	pop    ds
  418cb4:	hlt    
  418cb5:	test   DWORD PTR fs:[esi+0x43ea8f89],esp
  418cbc:	sbb    ebx,DWORD PTR [edi]
  418cbe:	test   BYTE PTR [eax-0x6],bh
  418cc1:	xchg   DWORD PTR [edx-0x4c5d512],ecx
  418cc7:	xchg   ecx,eax
  418cc8:	xor    al,0xf2
  418cca:	sbb    BYTE PTR [esi-0x6fbe2c69],ch
  418cd0:	loopne 0x418cb2
  418cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cd3:	mov    edi,0x503f1257
  418cd8:	push   es
  418cd9:	sub    bl,BYTE PTR [esi+0x49]
  418cdc:	or     BYTE PTR [eax],0x3d
  418cdf:	js     0x418ca3
  418ce1:	sbb    ecx,DWORD PTR [ebx-0x48396771]
  418ce7:	scas   al,BYTE PTR es:[edi]
  418ce8:	cmp    BYTE PTR [ebp+0x2a0ff26c],dl
  418cee:	pop    ds
  418cef:	shr    BYTE PTR [edi+0x112ce1d3],1
  418cf5:	outs   dx,BYTE PTR ds:[esi]
  418cf6:	xchg   esi,eax
  418cf7:	in     al,0x58
  418cf9:	add    al,0x98
  418cfb:	scas   al,BYTE PTR es:[edi]
  418cfc:	in     al,dx
  418cfd:	ss xchg esi,eax
  418cff:	test   al,0xf
  418d01:	cli    
  418d02:	sub    DWORD PTR [ebx+eiz*1],eax
  418d05:	sub    esp,ebp
  418d07:	jl     0x418d56
  418d09:	and    edi,esi
  418d0b:	aam    0x10
  418d0d:	xor    bl,BYTE PTR ds:0xb2dbed68
  418d13:	dec    ebx
  418d14:	out    0xda,al
  418d16:	push   0x75
  418d18:	out    0x19,al
  418d1a:	xor    cl,BYTE PTR [esi+0xe]
  418d1d:	xor    BYTE PTR [edx+edx*8+0x68],ah
  418d21:	enter  0xc35c,0x10
  418d25:	(bad)  
  418d26:	retf   
  418d27:	or     dl,ch
  418d29:	adc    eax,0xa8ce3b80
  418d2e:	xor    al,bl
  418d30:	xchg   esp,eax
  418d31:	imul   edx,ebx,0x5575384b
  418d37:	lods   al,BYTE PTR ds:[esi]
  418d38:	int3   
  418d39:	mov    bl,cl
  418d3b:	mov    dl,0x1c
  418d3d:	cmp    al,BYTE PTR [edx+0x2c]
  418d40:	mul    DWORD PTR ds:[eax+0x1]
  418d44:	pop    ebx
  418d45:	cmp    ebp,edx
  418d47:	pop    ss
  418d48:	enter  0xe2cc,0xaf
  418d4c:	bsf    edi,DWORD PTR [edi-0xc]
  418d50:	sbb    DWORD PTR [edx-0x36102358],edi
  418d56:	mov    WORD PTR [eax],ss
  418d58:	mov    dl,0x79
  418d5a:	retf   0x665
  418d5d:	mov    DWORD PTR [edx+0x5],edi
  418d60:	ss sub eax,0xbf4bbeb
  418d66:	cmp    BYTE PTR ds:[edi-0x79],bh
  418d6a:	fucomi st,st(3)
  418d6c:	js     0x418cf2
  418d6e:	repz mov ah,0xe7
  418d71:	jnp    0x418de3
  418d73:	pushf  
  418d74:	ret    0x45aa
  418d77:	loopne 0x418ded
  418d79:	ret    
  418d7a:	retf   
  418d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d7c:	inc    ebp
  418d7d:	test   ecx,esi
  418d7f:	xor    ecx,DWORD PTR [eax+0x2cb88713]
  418d85:	pop    ebp
  418d86:	mov    ds:0xfbaae797,eax
  418d8b:	test   BYTE PTR [ebp+eiz*2+0x56],cl
  418d8f:	or     eax,0x1defc616
  418d94:	sbb    BYTE PTR [edx-0x37],dh
  418d97:	mov    eax,0x3dc690f4
  418d9c:	adc    dl,cl
  418d9e:	addr16 out 0x23,al
  418da1:	into   
  418da2:	fisttp QWORD PTR [edx-0x76]
  418da5:	ins    DWORD PTR es:[edi],dx
  418da6:	pop    ebx
  418da7:	inc    esp
  418da8:	push   0xffffff9b
  418daa:	mov    bl,BYTE PTR [esi]
  418dac:	fbld   TBYTE PTR [edx]
  418dae:	jmp    0x418d7a
  418db0:	or     eax,0x9bad0c8a
  418db5:	repnz retf 
  418db7:	outs   dx,DWORD PTR ds:[esi]
  418db8:	aam    0x22
  418dba:	(bad)  
  418dbb:	adc    al,0x6c
  418dbd:	dec    DWORD PTR [ebx+0x31b6c62f]
  418dc3:	je     0x418d5f
  418dc5:	retf   
  418dc6:	stos   BYTE PTR es:[edi],al
  418dc7:	rcl    al,1
  418dc9:	outs   dx,BYTE PTR ds:[esi]
  418dca:	cmp    al,0x88
  418dcc:	xchg   ebx,eax
  418dcd:	addr16 ret 
  418dcf:	int3   
  418dd0:	or     BYTE PTR [ebx+0x1afb147],dh
  418dd6:	mov    ds:0x8dda1305,al
  418ddb:	inc    ebx
  418ddc:	bnd gs jne 0x418da6
  418de0:	(bad)  
  418de2:	in     al,0xef
  418de4:	popf   
  418de5:	xchg   BYTE PTR [ecx-0x233e4085],bl
  418deb:	xchg   ecx,eax
  418dec:	or     al,0x72
  418dee:	or     cl,BYTE PTR [edx+0x18f40f17]
  418df4:	adc    eax,0x26ae344a
  418df9:	and    cl,al
  418dfb:	cmp    esp,DWORD PTR [ebx-0x2d]
  418dfe:	icebp  
  418dff:	sbb    DWORD PTR [eax-0x18475edb],0x59
  418e06:	cli    
  418e07:	xor    DWORD PTR [edx+0x649c473],edi
  418e0d:	mov    eax,0x2fcb2846
  418e12:	lock in al,0x8f
  418e15:	sub    al,0x7a
  418e17:	retf   0x3bda
  418e1a:	or     ah,BYTE PTR [eax]
  418e1c:	pop    DWORD PTR [ecx+ebx*2-0x6cd52220]
  418e23:	mov    bh,0x7
  418e25:	int    0x9c
  418e27:	mov    BYTE PTR [edx],bl
  418e29:	and    edx,DWORD PTR [edx]
  418e2b:	or     DWORD PTR [edi+eax*4+0x5a],esi
  418e2f:	mov    ebp,0x8e2900dd
  418e34:	mov    edi,0xb84ce4ef
  418e39:	loopne 0x418df5
  418e3b:	mov    ebx,0x7d79b72b
  418e40:	and    esi,0xf13a83e
  418e46:	daa    
  418e47:	test   DWORD PTR [ebx+0x58],esp
  418e4a:	int    0x74
  418e4c:	outs   dx,DWORD PTR ds:[esi]
  418e4d:	fbstp  TBYTE PTR [ebx]
  418e4f:	mov    eax,0x42fdb455
  418e54:	adc    eax,0x4bf972aa
  418e59:	fidivr WORD PTR [ecx+0x45e243c2]
  418e5f:	inc    esp
  418e60:	add    al,BYTE PTR [ebp+0x10cf619a]
  418e66:	inc    esp
  418e67:	jmp    0xa06d:0x18376ed6
  418e6e:	in     al,0x93
  418e70:	dec    esi
  418e71:	push   edi
  418e72:	inc    ebp
  418e73:	or     al,0x8c
  418e75:	popf   
  418e76:	jns    0x418e31
  418e78:	jecxz  0x418dfc
  418e7a:	jle    0x418e02
  418e7c:	in     al,dx
  418e7d:	inc    edx
  418e7e:	adc    ebp,DWORD PTR [esi+0x11]
  418e81:	retf   0x2eb9
  418e84:	and    al,0x5d
  418e86:	ins    DWORD PTR es:[edi],dx
  418e87:	int    0x59
  418e89:	xchg   esi,eax
  418e8a:	lods   al,BYTE PTR ds:[esi]
  418e8b:	cmp    edi,DWORD PTR [eax+0x6b]
  418e8e:	xchg   ecx,eax
  418e8f:	mov    ecx,0x7e77d895
  418e94:	xchg   ebp,eax
  418e95:	and    edi,esi
  418e97:	xchg   ecx,eax
  418e98:	or     BYTE PTR [eax+0x4948b8ce],dh
  418e9e:	sbb    eax,0x4b77d034
  418ea3:	aaa    
  418ea4:	lods   eax,DWORD PTR ds:[esi]
  418ea5:	out    0x5b,al
  418ea7:	and    eax,0xd234077d
  418eac:	add    ebp,ebx
  418eae:	lds    ecx,FWORD PTR [edx+0x48f14db9]
  418eb4:	aas    
  418eb5:	test   BYTE PTR [eax],ch
  418eb7:	enter  0xb695,0xab
  418ebb:	mov    dh,0xd2
  418ebd:	mov    edx,cs
  418ebf:	inc    ebx
  418ec0:	jecxz  0x418e46
  418ec2:	test   al,0xd
  418ec4:	fs xchg esi,eax
  418ec6:	dec    eax
  418ec7:	push   0x5a6072ed
  418ecc:	cmp    ch,bh
  418ece:	icebp  
  418ecf:	scas   al,BYTE PTR es:[edi]
  418ed0:	ret    0x29
  418ed3:	std    
  418ed4:	xor    BYTE PTR [ebp-0x256ba55b],ch
  418eda:	or     edx,DWORD PTR [eax+0x18428ecf]
  418ee0:	mov    WORD PTR [eax+0x18d7487a],fs
  418ee6:	cmp    BYTE PTR ss:[eax+0x618f72e0],cl
  418eed:	sub    bl,BYTE PTR [ecx-0x38]
  418ef0:	ror    bh,0x49
  418ef3:	das    
  418ef4:	and    DWORD PTR [ecx+0x48],ebx
  418ef7:	dec    esi
  418ef8:	cmp    DWORD PTR [esi+0x2ecc2c5a],eax
  418efe:	xor    esp,DWORD PTR [esi]
  418f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f01:	shl    DWORD PTR [ebx],cl
  418f03:	js     0x418eb9
  418f05:	mov    al,0xa0
  418f07:	fprem  
  418f09:	push   esi
  418f0a:	mov    dh,BYTE PTR [esi-0x708eba65]
  418f10:	sbb    BYTE PTR [edx-0x59],bh
  418f13:	test   BYTE PTR [eax+eiz*1],bh
  418f16:	call   0x7145de36
  418f1b:	sbb    BYTE PTR [ebx],bl
  418f1d:	shl    DWORD PTR [eax-0x4d],0x18
  418f21:	shr    bl,cl
  418f23:	mov    bl,0xa7
  418f25:	in     eax,dx
  418f26:	out    0xae,al
  418f28:	push   cs
  418f29:	cmp    ah,ch
  418f2b:	fdiv   DWORD PTR [ecx]
  418f2d:	pop    ebp
  418f2e:	loope  0x418f10
  418f30:	mov    edi,0x613f3a5f
  418f35:	test   DWORD PTR [edx+0x27],ebx
  418f38:	xchg   edx,eax
  418f39:	addr16 mov ebx,0x3faca1bd
  418f3f:	js     0x418f75
  418f41:	jmp    0x418ef4
  418f43:	rcr    BYTE PTR [edi-0x78],0x65
  418f47:	mov    WORD PTR ds:0x8de5f416,cs
  418f4d:	xor    eax,0xba4e1adc
  418f52:	xor    bh,BYTE PTR [eax]
  418f54:	cli    
  418f55:	inc    ebp
  418f56:	mov    cs,WORD PTR [ebx+0x39]
  418f59:	sar    BYTE PTR [esi],1
  418f5b:	mov    bh,0x8
  418f5d:	mov    edx,ebx
  418f5f:	ss jmp 0x8064ecdc
  418f65:	jecxz  0x418fcd
  418f67:	push   0x807f8bce
  418f6c:	jmp    0x418f7b
  418f6e:	cdq    
  418f6f:	pcmpeqb mm7,mm2
  418f72:	sbb    eax,esi
  418f74:	ret    0x66be
  418f77:	push   0x1a
  418f79:	daa    
  418f7a:	out    0x9b,eax
  418f7c:	cmp    BYTE PTR [esi+0x53],ch
  418f7f:	cmp    al,0x8
  418f81:	jae    0x418ff7
  418f83:	mov    ah,0xf9
  418f85:	icebp  
  418f86:	dec    ebp
  418f87:	mov    ds:0xcdf326f8,eax
  418f8c:	inc    ebp
  418f8d:	pop    esi
  418f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f8f:	cld    
  418f90:	fdiv   DWORD PTR [ecx]
  418f92:	aas    
  418f93:	mov    ah,0xbc
  418f95:	jbe    0x418fd6
  418f97:	js     0x418fe6
  418f99:	push   0x5f
  418f9b:	popa   
  418f9c:	fadd   DWORD PTR [ebx+0x26]
  418f9f:	mov    ch,0x92
  418fa1:	clc    
  418fa2:	jb     0x419017
  418fa4:	pop    ss
  418fa5:	stos   BYTE PTR es:[edi],al
  418fa6:	inc    esi
  418fa7:	sub    eax,0xb0034559
  418fac:	sub    ecx,ebx
  418fae:	inc    esp
  418faf:	pushf  
  418fb0:	fcom   DWORD PTR [eax+0x6759cc5a]
  418fb6:	jmp    0xab6c:0xd8a1016
  418fbd:	out    dx,al
  418fbe:	test   al,0xcd
  418fc0:	sbb    bl,dl
  418fc2:	and    edx,DWORD PTR [ebx+0x38]
  418fc5:	sub    BYTE PTR [ecx+0x68710ed4],bl
  418fcb:	jecxz  0x418f74
  418fcd:	pop    ecx
  418fce:	cmp    al,0xfc
  418fd0:	in     al,dx
  418fd1:	or     DWORD PTR fs:[esi],edi
  418fd4:	test   DWORD PTR ds:0x5b64,esi
  418fd9:	dec    eax
  418fda:	mov    ebp,0xea8297be
  418fdf:	sub    dl,BYTE PTR [ebx-0x21]
  418fe2:	pop    ss
  418fe3:	sbb    al,0xfe
  418fe5:	inc    esp
  418fe6:	or     dh,cl
  418fe8:	cmp    al,BYTE PTR [edi-0x59327bc4]
  418fee:	dec    edx
  418fef:	lods   eax,DWORD PTR ds:[esi]
  418ff0:	jae    0x418fb0
  418ff2:	stos   BYTE PTR es:[edi],al
  418ff3:	fiadd  DWORD PTR [ebx-0x5d50caee]
  418ff9:	pop    DWORD PTR [edx-0x7d]
  418ffc:	outs   dx,DWORD PTR ds:[esi]
  418ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ffe:	inc    esp
  418fff:	dec    eax
  419000:	call   DWORD PTR [edi+0x2c93de30]
  419006:	or     cl,BYTE PTR ss:[eax-0x57]
  41900a:	icebp  
  41900b:	mov    ecx,0xae898683
  419010:	push   ds
  419011:	clc    
  419012:	(bad)  
  419013:	bound  ecx,QWORD PTR [edx+ecx*8]
  419016:	pop    ecx
  419017:	pop    eax
  419018:	daa    
  419019:	dec    edx
  41901a:	jb     0x418fd7
  41901c:	ds add esi,ebx
  41901f:	adc    eax,0xd17c61c0
  419024:	stos   WORD PTR es:[edi],ax
  419026:	shl    bh,cl
  419028:	jmp    0x753db82
  41902d:	(bad)  
  41902e:	fnstenv [ebx+0x36d33496]
  419034:	mov    BYTE PTR [eax+0x7bc87ad4],al
  41903a:	out    0xb1,eax
  41903c:	or     DWORD PTR [eax+0x2b],esi
  41903f:	sbb    al,0x14
  419041:	sbb    ah,ah
  419043:	and    al,0x9a
  419045:	xchg   BYTE PTR [esi+0x4afd730b],cl
  41904b:	imul   ebp,DWORD PTR [ebx],0xffffff9f
  41904e:	push   0x21
  419050:	jae    0x41909d
  419052:	mov    dl,0x48
  419054:	adc    BYTE PTR [edx-0x1a],cl
  419057:	mov    fs,WORD PTR ds:0x542515d5
  41905d:	outs   dx,BYTE PTR ds:[esi]
  41905e:	mov    edi,0xa313207
  419063:	data16 cld 
  419065:	popa   
  419066:	stos   DWORD PTR es:[edi],eax
  419067:	outs   dx,DWORD PTR ds:[esi]
  419068:	sbb    DWORD PTR [esp+edx*8-0x26f3ced4],esi
  41906f:	mov    esi,0xa5e71a0c
  419074:	push   edx
  419075:	xor    eax,0x6208d055
  41907a:	scas   al,BYTE PTR es:[edi]
  41907b:	mov    ebx,0xf92777f7
  419080:	int3   
  419081:	arpl   WORD PTR [ecx+0x68],dx
  419084:	mov    bl,0xa1
  419086:	cmp    edi,DWORD PTR [eax+0x5e89c498]
  41908c:	clc    
  41908d:	xchg   BYTE PTR es:[ecx-0x4392cdf6],dh
  419094:	(bad)  
  419095:	fstp   TBYTE PTR [ebx+0x319b56b6]
  41909b:	mov    eax,0x37d21c5b
  4190a0:	dec    eax
  4190a1:	sbb    bl,dh
  4190a3:	mov    dl,0x9a
  4190a5:	mov    ds:0x7a1245a1,eax
  4190aa:	popa   
  4190ab:	fwait
  4190ac:	outs   dx,DWORD PTR ds:[esi]
  4190ad:	mov    bh,0x8
  4190af:	aaa    
  4190b0:	fstp   st(2)
  4190b2:	sub    BYTE PTR [esi+ecx*8+0x7cd6ba7a],cl
  4190b9:	les    edi,FWORD PTR [ebx-0x2bf5ee4e]
  4190bf:	repz mov esp,0xb06af5b9
  4190c5:	enter  0xffcd,0x3
  4190c9:	mov    gs,WORD PTR [edx+0x2d]
  4190cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190cd:	xchg   ebx,eax
  4190ce:	pop    ds
  4190cf:	mov    ebx,0x50f48bee
  4190d4:	add    al,al
  4190d6:	fld    TBYTE PTR [edi]
  4190d8:	push   ss
  4190d9:	cli    
  4190da:	xlat   BYTE PTR ds:[ebx]
  4190db:	fs pop edi
  4190dd:	xchg   BYTE PTR [eax-0x40],bl
  4190e0:	dec    eax
  4190e1:	pop    ebx
  4190e2:	cmp    cl,cl
  4190e4:	iret   
  4190e5:	mov    eax,edx
  4190e7:	int    0xca
  4190e9:	sub    DWORD PTR [edx-0x5e4aed05],eax
  4190ef:	pop    edi
  4190f0:	adc    DWORD PTR [edi],esi
  4190f2:	ins    BYTE PTR es:[edi],dx
  4190f3:	cmp    dh,BYTE PTR [edi]
  4190f5:	ret    
  4190f6:	and    DWORD PTR [ebx-0xc],eax
  4190f9:	mov    bl,0xda
  4190fb:	in     al,0x13
  4190fd:	ja     0x4190cb
  4190ff:	or     dl,BYTE PTR [edx+0x5e437fd5]
  419105:	lods   eax,DWORD PTR ds:[esi]
  419106:	xor    ch,BYTE PTR [eax+0x5]
  419109:	dec    esp
  41910a:	xchg   esp,eax
  41910b:	sub    bh,BYTE PTR [eax]
  41910d:	out    0x62,eax
  41910f:	mov    dh,0xbd
  419111:	sub    BYTE PTR [eax],0x74
  419114:	ret    
  419115:	cmp    bh,BYTE PTR [esi-0x2]
  419118:	retf   
  419119:	std    
  41911a:	(bad)  [edx*1+0x2c7a597]
  419121:	ror    DWORD PTR [edx],cl
  419123:	push   0xb
  419125:	or     BYTE PTR [edx+0x7ae1d1da],0x1d
  41912c:	sub    ebp,0x34
  41912f:	mov    BYTE PTR [ecx],ch
  419131:	pop    ebp
  419132:	gs and eax,ebp
  419135:	dec    edi
  419136:	outs   dx,BYTE PTR ds:[esi]
  419137:	mov    ecx,0x95428ea5
  41913c:	test   eax,0x57ce9a0d
  419141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419142:	scas   eax,DWORD PTR es:[edi]
  419143:	inc    esp
  419144:	cmp    ecx,ebp
  419146:	sbb    al,0x4f
  419148:	mov    DWORD PTR cs:[edi+0x5fb355b2],esp
  41914f:	popa   
  419150:	adc    eax,0x2663ae0a
  419155:	lods   al,BYTE PTR fs:[esi]
  419157:	(bad)  
  419159:	outs   dx,BYTE PTR ds:[esi]
  41915a:	data16 mov al,0xfd
  41915d:	cmp    al,BYTE PTR [ebx]
  41915f:	adc    DWORD PTR cs:[edx-0x34ecc5cd],ebx
  419166:	cli    
  419167:	bound  ecx,QWORD PTR [ebx+0x2c482d7]
  41916d:	lahf   
  41916e:	jp     0x41910d
  419170:	and    ah,BYTE PTR [ebx+0x1a]
  419173:	dec    ebx
  419174:	jmp    0x8b0d:0xd0eea7ca
  41917b:	push   0x16
  41917d:	nop
  41917e:	sub    BYTE PTR [esi+0x1ea915e0],dh
  419184:	inc    esi
  419185:	mov    DWORD PTR [edx-0x55],ecx
  419188:	mov    edi,0x56d298e7
  41918d:	shl    BYTE PTR ds:0xc3e7dce8,1
  419193:	sub    eax,0xb38fb8f8
  419198:	sub    bh,dh
  41919a:	jmp    0x41916f
  41919c:	adc    edx,ecx
  41919e:	mov    esi,0x8fc6f26b
  4191a3:	inc    esi
  4191a4:	jnp    0x41919a
  4191a6:	inc    esi
  4191a7:	jl     0x419189
  4191a9:	mov    DWORD PTR [edx],ecx
  4191ab:	jecxz  0x41914d
  4191ad:	or     eax,0xb8d2c05e
  4191b2:	hlt    
  4191b3:	out    dx,al
  4191b4:	lods   al,BYTE PTR ds:[esi]
  4191b5:	push   edx
  4191b6:	jne    0x4191d0
  4191b8:	or     bh,ah
  4191ba:	dec    eax
  4191bb:	inc    eax
  4191bc:	outs   dx,DWORD PTR ds:[esi]
  4191bd:	dec    edx
  4191be:	sbb    eax,0xdfe94321
  4191c3:	mov    dl,0x9d
  4191c5:	mov    ebx,0xdd99e510
  4191ca:	and    ch,BYTE PTR [edx+ecx*8]
  4191cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191ce:	add    bl,BYTE PTR [esi-0x1cd17d6b]
  4191d4:	ja     0x419162
  4191d6:	add    al,0xcf
  4191d8:	cld    
  4191d9:	or     DWORD PTR [esi+0x3f202f9b],ecx
  4191df:	sbb    BYTE PTR [esi],ch
  4191e1:	stc    
  4191e2:	push   ds
  4191e3:	xchg   edi,eax
  4191e4:	in     eax,0x84
  4191e6:	cmp    dh,cl
  4191e8:	enter  0xdcc7,0xb4
  4191ec:	ins    DWORD PTR es:[edi],dx
  4191ed:	push   ds
  4191ee:	adc    al,0xaa
  4191f0:	pop    eax
  4191f1:	sti    
  4191f2:	xchg   ebx,eax
  4191f3:	lods   al,BYTE PTR ds:[esi]
  4191f4:	cli    
  4191f5:	(bad)  
  4191f6:	cdq    
  4191f7:	inc    ebp
  4191f8:	adc    edx,ebx
  4191fa:	arpl   WORD PTR [ebp+0x2f],bx
  4191fd:	ss xor bl,0x0
  419201:	and    eax,0x8034aeb2
  419206:	sub    cl,BYTE PTR [ecx]
  419208:	sbb    al,BYTE PTR ds:0x8a0728a
  41920e:	pop    ds
  41920f:	out    dx,eax
  419210:	je     0x419281
  419212:	call   0x1f82:0xcc04cb2
  419219:	mov    WORD PTR [edx+0x43],gs
  41921c:	dec    ebx
  41921d:	ins    DWORD PTR es:[edi],dx
  41921e:	cmp    eax,0x373266d2
  419223:	dec    eax
  419224:	inc    edi
  419225:	sbb    esp,0x2c725835
  41922b:	scas   eax,DWORD PTR es:[edi]
  41922c:	out    dx,eax
  41922d:	pusha  
  41922e:	retf   
  41922f:	ret    
  419230:	sbb    cl,BYTE PTR [edx+0x76058381]
  419236:	shr    DWORD PTR [ebp+0x5711ca26],0xa8
  41923d:	inc    esp
  41923e:	clc    
  41923f:	scas   eax,DWORD PTR es:[edi]
  419240:	sub    edx,esi
  419242:	or     BYTE PTR [esi-0x74715f8],bl
  419248:	loopne 0x419285
  41924a:	iret   
  41924b:	imul   esp
  41924d:	dec    ebx
  41924e:	test   eax,0xc630056
  419253:	dec    edi
  419254:	clc    
  419255:	mov    edx,?
  419257:	dec    ecx
  419258:	sbb    ebp,DWORD PTR [edx-0x79]
  41925b:	aas    
  41925c:	lods   al,BYTE PTR ds:[esi]
  41925d:	retf   0xab27
  419260:	dec    ebp
  419261:	dec    esp
  419262:	jb     0x41926a
  419264:	add    DWORD PTR [ebx+0x7c13bc5a],0x22
  41926b:	push   ss
  41926c:	dec    esp
  41926d:	fdivr  DWORD PTR ds:0xbd790a78
  419273:	scas   eax,DWORD PTR es:[edi]
  419274:	enter  0xaac1,0xcb
  419278:	and    al,0x93
  41927a:	mov    al,ds:0x6b7e9af4
  41927f:	jne    0x419236
  419281:	cmp    esi,DWORD PTR [edi]
  419283:	pop    eax
  419284:	fs mov edi,0xc4683c13
  41928a:	adc    BYTE PTR [edi-0x5fc743e6],ch
  419290:	mov    edi,0x2e5fa3aa
  419295:	sbb    ch,BYTE PTR [edi+0x37ce2f3e]
  41929b:	retf   0xaf88
  41929e:	leave  
  41929f:	lods   eax,DWORD PTR ds:[esi]
  4192a0:	lock js 0x4192db
  4192a3:	icebp  
  4192a4:	sahf   
  4192a5:	stos   BYTE PTR es:[edi],al
  4192a6:	add    bl,BYTE PTR [edx+0x41f257a3]
  4192ac:	pop    ss
  4192ad:	mov    DWORD PTR [edx-0x488067d4],eax
  4192b3:	mov    ebx,0x6f42d085
  4192b8:	(bad)  
  4192bb:	sub    al,0xe0
  4192bd:	stos   BYTE PTR es:[edi],al
  4192be:	add    BYTE PTR [ecx+0x4f],0x8c
  4192c2:	xchg   ebp,eax
  4192c3:	loopne 0x41929f
  4192c5:	adc    esi,DWORD PTR [eax-0x77]
  4192c8:	sbb    DWORD PTR [ebp+0x7bcd954a],esi
  4192ce:	sbb    DWORD PTR [eax+0x3362ae12],0xffffffd5
  4192d5:	adc    edx,DWORD PTR [edi+edx*4-0x1b]
  4192d9:	xor    DWORD PTR [edx],esi
  4192db:	fadd   DWORD PTR [edi]
  4192dd:	and    BYTE PTR [ebx+0x50c6b83e],al
  4192e3:	test   al,0x2a
  4192e5:	repnz xchg ebx,eax
  4192e7:	ret    
  4192e8:	adc    edx,edi
  4192ea:	gs stos BYTE PTR es:[edi],al
  4192ec:	icebp  
  4192ed:	bound  esp,QWORD PTR [ecx+esi*2+0x58e07de]
  4192f4:	xchg   ebx,eax
  4192f5:	lods   al,BYTE PTR ds:[esi]
  4192f6:	push   0xffffffc2
  4192f8:	or     al,0x40
  4192fa:	cmp    DWORD PTR [edx],edx
  4192fc:	mov    cs,WORD PTR [ebx-0x4d]
  4192ff:	ja     0x419338
  419301:	(bad)  
  419302:	or     BYTE PTR ds:[esi-0x287023],ch
  419309:	daa    
  41930a:	ret    
  41930b:	sub    eax,DWORD PTR [ecx]
  41930d:	inc    edx
  41930e:	outs   dx,BYTE PTR ds:[esi]
  419310:	out    dx,al
  419311:	mov    ss,edx
  419313:	pusha  
  419314:	cs dec eax
  419316:	xor    BYTE PTR [eax+0x529bf5de],cl
  41931c:	enter  0x4f99,0xb1
  419320:	push   edi
  419321:	dec    esi
  419322:	push   ebp
  419323:	pop    esi
  419324:	pop    ss
  419325:	jp     0x419328
  419327:	inc    esp
  419328:	loopne 0x4192c8
  41932a:	xchg   esp,eax
  41932b:	out    0x3a,al
  41932d:	jmp    0xb292:0xdaa86427
  419334:	and    ebx,esi
  419336:	gs cmp dl,bl
  419339:	xor    ebp,DWORD PTR [esi]
  41933b:	imul   eax
  41933d:	inc    edi
  41933e:	aas    
  41933f:	sbb    BYTE PTR [eax+0x84d9064],ah
  419345:	icebp  
  419346:	xchg   ebp,eax
  419347:	mov    ch,0x24
  419349:	arpl   cx,bp
  41934b:	and    al,0xc1
  41934d:	mov    ebp,0x7a1bdd80
  419352:	dec    esp
  419353:	les    edx,FWORD PTR [edi]
  419355:	test   eax,0x8b68f6ba
  41935a:	cmp    DWORD PTR [ecx+0x2c1fd5e9],esi
  419360:	sub    edi,DWORD PTR [eax+eax*4-0x7f]
  419364:	(bad)  
  419367:	inc    eax
  419368:	jo     0x4192fc
  41936a:	jg     0x41934f
  41936c:	pop    eax
  41936d:	add    cl,BYTE PTR [ecx-0x4f]
  419370:	adc    DWORD PTR [ebx+0x3a122270],0xdd961941
  41937a:	icebp  
  41937b:	popf   
  41937c:	inc    ebx
  41937d:	icebp  
  41937e:	popf   
  41937f:	ja     0x41933f
  419381:	xchg   BYTE PTR [edx],cl
  419383:	pushf  
  419384:	fisubr WORD PTR [eax+0xd]
  419387:	push   esi
  419388:	leave  
  419389:	aas    
  41938a:	loope  0x4193f8
  41938c:	clc    
  41938d:	mov    esi,0xf4ca7262
  419392:	sub    DWORD PTR [ebx],esi
  419394:	outs   dx,DWORD PTR ds:[esi]
  419395:	lahf   
  419396:	pop    esi
  419397:	and    eax,0xfbfca565
  41939c:	cdq    
  41939d:	mov    ah,0x30
  41939f:	or     cl,BYTE PTR [esi-0x717d7242]
  4193a5:	fistp  QWORD PTR [ebx]
  4193a7:	xchg   ah,ah
  4193a9:	adc    DWORD PTR [ebp+0x1c],ebp
  4193ac:	les    eax,FWORD PTR es:[ecx]
  4193af:	mov    bl,0xc8
  4193b1:	ins    DWORD PTR es:[edi],dx
  4193b2:	arpl   WORD PTR [ecx],bx
  4193b4:	push   cs
  4193b5:	jmp    0x1b5:0x8205599e
  4193bc:	pop    ss
  4193bd:	mov    bl,BYTE PTR [ebx+edx*8-0x7394a1df]
  4193c4:	adc    edx,DWORD PTR [ecx-0x7e4978fc]
  4193ca:	jp     0x41944a
  4193cc:	adc    DWORD PTR [ebx+eax*1-0x3b],eax
  4193d0:	pop    ds
  4193d1:	std    
  4193d2:	xor    al,bh
  4193d4:	jge    0x419430
  4193d6:	(bad)  
  4193d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193d8:	lods   eax,DWORD PTR ds:[esi]
  4193d9:	sbb    BYTE PTR [eax-0x58666785],cl
  4193df:	fsub   QWORD PTR [ebp+0x47]
  4193e2:	pushf  
  4193e3:	icebp  
  4193e4:	sub    BYTE PTR [ebx],0xce
  4193e7:	scas   eax,DWORD PTR es:[edi]
  4193e8:	cmc    
  4193e9:	xchg   BYTE PTR [ebx+0x1e61b1f],ah
  4193ef:	adc    DWORD PTR [edi],eax
  4193f1:	mov    DWORD PTR [esi-0x245f8271],esi
  4193f7:	jmp    0x587d7c09
  4193fc:	xor    DWORD PTR [ebx],esi
  4193fe:	or     DWORD PTR [ebp+0x2f791ac9],ebp
  419404:	mov    dl,0x58
  419406:	aas    
  419407:	js     0x41938e
  419409:	dec    ecx
  41940a:	shl    DWORD PTR [edx],1
  41940c:	adc    cl,BYTE PTR [ebp-0x16511186]
  419412:	repnz ss push ebx
  419415:	stc    
  419416:	aaa    
  419417:	mov    BYTE PTR [ecx-0x51],al
  41941a:	xor    ebx,DWORD PTR [esi-0x4c764938]
  419420:	ror    BYTE PTR [edi+0x7a08ff81],0x2c
  419427:	in     eax,dx
  419428:	pop    ecx
  419429:	push   0xffffffbe
  41942b:	les    eax,FWORD PTR [eax+0x61]
  41942e:	add    esp,DWORD PTR [ebx-0x65757ecb]
  419434:	aas    
  419435:	fcomp  DWORD PTR [ebp+0x16]
  419438:	data16 mov dh,bl
  41943b:	scas   al,BYTE PTR es:[edi]
  41943c:	dec    edi
  41943d:	int    0xe0
  41943f:	pusha  
  419440:	add    BYTE PTR [esi-0x6b5f4cab],ah
  419446:	sub    esi,DWORD PTR [ebp+0x1f6a8489]
  41944c:	sub    edi,eax
  41944e:	fisub  WORD PTR [edi-0x710a263e]
  419454:	dec    edi
  419455:	rsm    
  419457:	jnp    0x4194bf
  419459:	aas    
  41945a:	dec    ebx
  41945b:	int    0xf5
  41945d:	in     eax,dx
  41945e:	cmc    
  41945f:	jmp    0x4194ca
  419461:	cld    
  419462:	lods   al,BYTE PTR ds:[esi]
  419463:	lahf   
  419464:	mov    dh,0x8a
  419466:	xchg   BYTE PTR [ebx+edi*1+0xcf18522],bl
  41946d:	push   0x2b
  41946f:	push   eax
  419470:	push   esi
  419471:	test   DWORD PTR [ecx+0x39],edi
  419474:	mov    ebx,0x58428239
  419479:	les    ebx,FWORD PTR [edi+edi*4-0x13]
  41947d:	mov    cl,0x9a
  41947f:	jg     0x419468
  419481:	pusha  
  419482:	mov    ebp,0x4939ce18
  419487:	sbb    BYTE PTR ds:0xc8a6af35,bh
  41948d:	fst    QWORD PTR [eax-0x49]
  419490:	rcl    dh,0x3e
  419493:	lods   eax,DWORD PTR ds:[esi]
  419494:	fdivr  DWORD PTR [edx]
  419496:	enter  0x8d79,0x8e
  41949a:	jae    0x4194aa
  41949c:	aaa    
  41949d:	xor    al,0x34
  41949f:	les    ebp,FWORD PTR [eax-0x1b5246cf]
  4194a5:	pushf  
  4194a6:	lea    ebx,[edi]
  4194a8:	or     eax,0x3472c2aa
  4194ad:	add    eax,0x9f6ac941
  4194b2:	mov    bl,0xfc
  4194b4:	xor    bh,ch
  4194b6:	cmp    esp,DWORD PTR [ebx+0x6a]
  4194b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194ba:	outs   dx,BYTE PTR ds:[esi]
  4194bc:	or     esp,ecx
  4194be:	mov    eax,ds:0x7520f3f
  4194c3:	inc    edx
  4194c5:	add    al,0x67
  4194c7:	push   edx
  4194c8:	outs   dx,DWORD PTR ds:[esi]
  4194c9:	inc    edx
  4194ca:	push   ebx
  4194cb:	xchg   ebx,eax
  4194cc:	adc    edi,eax
  4194ce:	cmp    bh,BYTE PTR [ecx+0x35227a24]
  4194d4:	push   edx
  4194d5:	jae    0x419516
  4194d7:	mov    eax,0xf1a1be98
  4194dc:	mov    eax,0x40b14a66
  4194e1:	mov    al,ds:0xba0e3f32
  4194e6:	inc    esp
  4194e7:	call   0x9bb22a9a
  4194ec:	sbb    ebx,DWORD PTR [esi+0x50]
  4194ef:	rol    BYTE PTR [ecx],cl
  4194f1:	mov    bl,BYTE PTR [edx]
  4194f3:	fadd   DWORD PTR [edi-0x60]
  4194f6:	mov    ch,0xd9
  4194f8:	mov    eax,ds:0x64683f4a
  4194fd:	loopne 0x41950b
  4194ff:	push   0xffffffd0
  419501:	jl     0x4194f9
  419503:	sbb    eax,0xd27a8014
  419508:	scas   eax,DWORD PTR es:[edi]
  419509:	or     eax,0x4fe1f056
  41950e:	xor    eax,0xe1e2b698
  419513:	pop    ecx
  419514:	cwde   
  419515:	aaa    
  419516:	dec    ecx
  419517:	lods   eax,DWORD PTR ds:[esi]
  419518:	xchg   edi,eax
  419519:	jno    0x419544
  41951b:	mov    edi,0xa2a38a13
  419520:	mov    ebp,0xa344a8fe
  419525:	inc    edx
  419526:	ret    0x3678
  419529:	mov    ?,edx
  41952b:	xor    BYTE PTR [ecx+eiz*4+0x4d],bl
  41952f:	pushf  
  419530:	or     eax,0x32f83586
  419535:	dec    ecx
  419536:	scas   eax,DWORD PTR es:[edi]
  419537:	pop    esi
  419538:	sub    BYTE PTR [edi+0x7058d043],dl
  41953e:	xor    BYTE PTR [edx],ah
  419540:	cwde   
  419541:	lahf   
  419542:	xor    BYTE PTR [edx],bl
  419544:	pop    ds
  419545:	add    edi,DWORD PTR [ebx]
  419547:	sub    BYTE PTR [edi+esi*8+0x31],bl
  41954b:	imul   esi,DWORD PTR [eax],0x49
  41954e:	xchg   BYTE PTR [ecx-0x1b0ecc28],bl
  419554:	rol    BYTE PTR [ebx+0x37459288],0x33
  41955b:	pop    ebx
  41955c:	and    al,0x52
  41955e:	shrd   DWORD PTR [ecx],ebp,0x8c
  419562:	repnz lea esi,[ebx]
  419565:	dec    ebp
  419566:	pop    ecx
  419567:	xchg   esp,eax
  419568:	dec    ecx
  419569:	cmp    dl,0xa3
  41956c:	inc    esi
  41956d:	dec    esi
  41956e:	shl    DWORD PTR [edi+0x64],cl
  419571:	std    
  419572:	xor    DWORD PTR [eax-0x24498274],ecx
  419578:	sub    BYTE PTR [ecx],dl
  41957a:	rcl    DWORD PTR [ecx],cl
  41957c:	sub    cl,ch
  41957e:	dec    ecx
  41957f:	ret    0x4b1b
  419582:	sub    bh,dl
  419584:	repnz xchg ecx,edx
  419587:	mov    bh,0xce
  419589:	adc    al,0x34
  41958b:	test   al,0xb6
  41958d:	jnp    0x419581
  41958f:	aam    0xb8
  419591:	mov    BYTE PTR ds:0x5d46cab9,cl
  419597:	je     0x4195a7
  419599:	ficomp DWORD PTR [edx-0x6e53662]
  41959f:	not    BYTE PTR [ebx+0x22600979]
  4195a5:	or     BYTE PTR [edx-0x4397e07b],0xa0
  4195ac:	sbb    bl,BYTE PTR [edx+0x3c]
  4195af:	pop    ss
  4195b0:	sti    
  4195b1:	outs   dx,DWORD PTR ds:[esi]
  4195b2:	es popa 
  4195b4:	repnz and cl,BYTE PTR [esi-0x575dca5]
  4195bb:	shl    esp,1
  4195bd:	daa    
  4195be:	loopne 0x419629
  4195c0:	or     esp,DWORD PTR [edi+0x7ddec834]
  4195c6:	mov    esi,0x83e4d8e5
  4195cb:	mov    ecx,0x7d429add
  4195d0:	adc    DWORD PTR [edx],ebp
  4195d2:	sub    dl,BYTE PTR [edx+0x1d1eb694]
  4195d8:	xor    esp,0xc888e29a
  4195de:	push   edx
  4195df:	scas   eax,DWORD PTR es:[edi]
  4195e0:	pop    edi
  4195e1:	xchg   ebx,eax
  4195e2:	fwait
  4195e3:	jb     0x4195f7
  4195e5:	sub    ch,BYTE PTR [esi-0x3b8a441]
  4195eb:	xor    DWORD PTR [ecx],ebx
  4195ed:	or     al,0xad
  4195ef:	or     edi,DWORD PTR [edx-0x7d]
  4195f2:	retf   0x3bf3
  4195f5:	sbb    BYTE PTR [esi+0x663f3218],dl
  4195fb:	js     0x4195a7
  4195fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195fe:	ret    0x720d
  419601:	mov    cs,WORD PTR [ecx+0x76]
  419604:	dec    ebx
  419605:	add    edi,DWORD PTR [ebx]
  419607:	stos   DWORD PTR es:[edi],eax
  419608:	das    
  419609:	or     al,0x4
  41960b:	mov    ah,0x16
  41960d:	dec    esi
  41960e:	cli    
  41960f:	sub    eax,0x630f99d2
  419614:	push   0x5
  419616:	(bad)  
  419618:	mov    dh,0x85
  41961a:	push   0x79
  41961c:	iret   
  41961d:	and    DWORD PTR [edi+0x698ee5b3],0xffffffdf
  419624:	call   0x8f39dabe
  419629:	dec    eax
  41962a:	pop    ebp
  41962b:	cmc    
  41962c:	cmovae esp,ebp
  41962f:	mov    ds:0x785fe0d,eax
  419634:	xor    ebx,ecx
  419636:	cmc    
  419637:	mov    ebx,0xe0af947
  41963c:	aad    0xbd
  41963e:	add    BYTE PTR [edx],cl
  419640:	call   0x85faee79
  419645:	loope  0x4196c6
  419647:	call   0xb392dca4
  41964c:	push   es
  41964d:	push   0x9daca45f
  419652:	dec    edx
  419653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419654:	or     al,0xda
  419656:	std    
  419657:	dec    edx
  419658:	outs   dx,BYTE PTR ds:[esi]
  419659:	fucomp st(4)
  41965b:	fwait
  41965c:	sub    BYTE PTR [edi],ah
  41965e:	(bad)  
  41965f:	mov    ah,0x58
  419661:	push   es
  419662:	sub    ebp,DWORD PTR [edx-0x328d4870]
  419668:	test   BYTE PTR [ecx],ch
  41966a:	in     eax,dx
  41966b:	lahf   
  41966c:	call   0x5908:0x78b53b57
  419673:	scas   al,BYTE PTR es:[edi]
  419674:	fld    QWORD PTR [edx+0x7b]
  419677:	retf   0xc8cf
  41967a:	cli    
  41967b:	fmul   st,st(7)
  41967d:	or     esp,DWORD PTR [esi+0x5c783d8f]
  419683:	jae    0x4196fd
  419685:	fwait
  419686:	add    bl,ah
  419688:	xor    cl,bh
  41968a:	dec    eax
  41968b:	leave  
  41968c:	mov    cl,BYTE PTR [edi-0x43db24f6]
  419692:	je     0x419620
  419694:	pop    esi
  419695:	pop    fs
  419697:	lahf   
  419698:	adc    edi,edi
  41969a:	push   esp
  41969b:	mov    ecx,0x3fddcd21
  4196a0:	das    
  4196a1:	pop    ebp
  4196a2:	stos   BYTE PTR es:[edi],al
  4196a3:	in     al,dx
  4196a4:	dec    eax
  4196a5:	adc    eax,0x814eb4ed
  4196aa:	neg    BYTE PTR [ebx+0x78305b68]
  4196b0:	call   0x5b61:0x287d0cb9
  4196b7:	mov    edx,0x449f5cef
  4196bc:	adc    al,0x47
  4196be:	ins    DWORD PTR es:[edi],dx
  4196bf:	push   edi
  4196c0:	or     ebp,DWORD PTR [eax+0x31]
  4196c3:	cmp    BYTE PTR [eax-0x61fe71ba],ah
  4196c9:	inc    ecx
  4196ca:	mul    BYTE PTR [esi-0x4496c248]
  4196d0:	sbb    ecx,eax
  4196d2:	sahf   
  4196d3:	add    dl,BYTE PTR [ecx]
  4196d5:	dec    eax
  4196d6:	dec    ecx
  4196d7:	mov    BYTE PTR ds:0x388fe538,al
  4196dd:	daa    
  4196de:	jno    0x41968f
  4196e0:	inc    edi
  4196e1:	les    edx,FWORD PTR [ebp+0x30]
  4196e4:	or     al,0x1a
  4196e6:	dec    ecx
  4196e7:	mov    DWORD PTR [ebx],edi
  4196e9:	jecxz  0x4196b3
  4196eb:	inc    esp
  4196ec:	call   0x8d4915df
  4196f1:	mov    edi,0x8dfbb49b
  4196f6:	mov    cl,al
  4196f8:	or     al,0x5a
  4196fa:	push   ebp
  4196fb:	test   eax,0xb7a39fff
  419700:	call   0xab1:0xcf0a5ab3
  419707:	mov    edi,0x45bd4417
  41970c:	or     DWORD PTR [ebp-0x67],ecx
  41970f:	and    ah,BYTE PTR [ebx]
  419711:	idiv   BYTE PTR [ebp-0x597918c4]
  419717:	int    0x48
  419719:	and    DWORD PTR [esi+0x1222a6b8],ebp
  41971f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419720:	(bad)  
  419721:	cmp    eax,0x93d0e2c0
  419726:	pusha  
  419727:	ror    DWORD PTR [esi+0x6c99f009],cl
  41972d:	sbb    dh,bh
  41972f:	scas   eax,DWORD PTR es:[edi]
  419730:	mov    edx,0x9c5e7eef
  419735:	mul    DWORD PTR [eax+0x58]
  419738:	out    0x80,eax
  41973a:	inc    edi
  41973b:	clc    
  41973c:	out    dx,al
  41973d:	mov    WORD PTR [edx+0x52],?
  419740:	ror    BYTE PTR [ecx-0x68937990],cl
  419746:	xor    bl,BYTE PTR [eax]
  419748:	mov    dl,0xf9
  41974a:	test   al,0xa3
  41974c:	enter  0x8dab,0xb8
  419750:	outs   dx,DWORD PTR ds:[esi]
  419751:	fimul  WORD PTR [edi+ecx*2+0x1a]
  419755:	sbb    cl,BYTE PTR [eax+0x49]
  419758:	adc    esp,edx
  41975a:	mov    ebx,0xab06a3a1
  41975f:	pusha  
  419760:	test   eax,0x739e9a95
  419765:	(bad)  
  419766:	lock mov DWORD PTR [edx+ecx*1+0x503a4db8],0x670c8462
  419772:	ds inc edi
  419774:	mov    ecx,0x1b191f7
  419779:	mov    edx,cs
  41977b:	loope  0x419728
  41977d:	cmp    BYTE PTR [esi+0x7a],bh
  419780:	div    BYTE PTR [ecx+0x3f]
  419783:	pop    eax
  419784:	xchg   DWORD PTR [eax+edx*1],esi
  419787:	imul   ebp,DWORD PTR [edx+esi*1],0x1f83528f
  41978e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41978f:	scas   eax,DWORD PTR es:[edi]
  419790:	jns    0x419810
  419792:	add    eax,0x20ba10b2
  419797:	daa    
  419798:	mov    ds:0xb72fed58,al
  41979d:	(bad)  
  41979e:	mov    bh,0xba
  4197a0:	push   ss
  4197a1:	or     BYTE PTR [edx],0xbb
  4197a4:	ja     0x41975c
  4197a6:	lea    ecx,[ebx-0x7d]
  4197a9:	pop    edi
  4197aa:	mov    ebx,DWORD PTR [edi+0x11]
  4197ad:	shr    BYTE PTR [edi+edi*2],cl
  4197b0:	dec    ecx
  4197b1:	ins    DWORD PTR es:[edi],dx
  4197b2:	or     esp,esi
  4197b4:	xlat   BYTE PTR ds:[ebx]
  4197b5:	mov    BYTE PTR [edx],ch
  4197b7:	xlat   BYTE PTR ds:[ebx]
  4197b8:	inc    esi
  4197b9:	push   cs
  4197ba:	mov    edi,0x262ebf40
  4197bf:	dec    edi
  4197c0:	test   al,0x8c
  4197c2:	fldcw  WORD PTR [edi+0x6c3895d0]
  4197c8:	xchg   edx,eax
  4197c9:	mov    edx,edi
  4197cb:	sti    
  4197cc:	jnp    0x41979a
  4197ce:	adc    edi,ebx
  4197d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197d1:	(bad)  
  4197d2:	xor    BYTE PTR [eax-0x51],ch
  4197d5:	adc    DWORD PTR [ecx],ebp
  4197d7:	neg    DWORD PTR [edx]
  4197d9:	pop    es
  4197da:	scas   eax,DWORD PTR es:[edi]
  4197db:	ins    BYTE PTR es:[edi],dx
  4197dc:	test   al,0x8c
  4197de:	call   0xdc04:0xa21e3215
  4197e5:	outs   dx,DWORD PTR ds:[esi]
  4197e6:	add    DWORD PTR [esi+0x2b],eax
  4197e9:	test   DWORD PTR [edx],esi
  4197eb:	loope  0x419831
  4197ed:	in     eax,0xfe
  4197ef:	jbe    0x419860
  4197f1:	mov    ds,edx
  4197f3:	mov    eax,ds:0xbef10d29
  4197f8:	pop    ebx
  4197f9:	stos   DWORD PTR es:[edi],eax
  4197fa:	dec    ecx
  4197fb:	sub    BYTE PTR [edi],bl
  4197fd:	or     BYTE PTR [edi],ch
  4197ff:	push   edi
  419800:	mov    BYTE PTR [ebx],bh
  419802:	test   BYTE PTR [edi+0x769e43af],dh
  419808:	sbb    bl,BYTE PTR [edx-0x2270d6df]
  41980e:	push   es
  41980f:	(bad)  [esi+0x43bb982c]
  419815:	test   DWORD PTR [edx],ecx
  419817:	mov    WORD PTR [ecx+0x518eab14],?
  41981d:	push   ebp
  41981e:	lock sub eax,0x4fa1c2e1
  419824:	jmp    0x67b1:0x452433e8
  41982b:	mov    ecx,0x9c4a848b
  419830:	test   eax,0x70c5b223
  419835:	fmul   QWORD PTR [ecx+0x8]
  419838:	mov    eax,0x4f8454e1
  41983d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41983e:	retf   0x3da3
  419841:	mov    ebx,0xdad5fec
  419846:	cmp    edx,eax
  419848:	add    BYTE PTR ds:0xe4986e12,bl
  41984e:	dec    edi
  41984f:	fwait
  419850:	dec    ebx
  419851:	and    BYTE PTR [eax+0x50e43814],0xb7
  419858:	test   eax,0xcef89abc
  41985d:	cmp    BYTE PTR [ebp+0x26],bl
  419860:	xchg   BYTE PTR [eax+0x62a04836],ah
  419866:	clc    
  419867:	(bad)  
  419868:	dec    esp
  419869:	pop    ss
  41986a:	and    al,0x4a
  41986c:	inc    esi
  41986d:	pop    edx
  41986e:	pop    eax
  41986f:	add    BYTE PTR [ebx],cl
  419871:	loope  0x41983e
  419873:	mov    esi,0x5bacd35
  419878:	fwait
  419879:	mov    bl,0x1e
  41987b:	mov    bl,0x87
  41987d:	cmp    esp,0x29
  419880:	sbb    al,0xd8
  419882:	daa    
  419883:	ins    BYTE PTR es:[edi],dx
  419884:	add    al,0xea
  419886:	xor    al,0x90
  419888:	inc    edi
  419889:	sub    eax,0x1889d987
  41988e:	mov    ds:0x940615bf,eax
  419893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419894:	and    eax,0xef0978c2
  419899:	out    0x6c,eax
  41989b:	and    eax,0xc73e8675
  4198a0:	or     al,0x7a
  4198a2:	in     al,dx
  4198a3:	cs push eax
  4198a5:	jge    0x4198d6
  4198a7:	cmp    ebx,ebx
  4198a9:	cli    
  4198aa:	dec    ecx
  4198ab:	jne    0x4198f7
  4198ad:	mov    ?,edx
  4198af:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198b1:	cmp    al,dh
  4198b3:	in     eax,dx
  4198b4:	mov    al,0x79
  4198b6:	push   ss
  4198b7:	pushf  
  4198b8:	xor    esp,ebp
  4198ba:	mov    ebx,0x2881835d
  4198bf:	iret   
  4198c0:	test   al,0x55
  4198c2:	mov    bl,0xb5
  4198c4:	sbb    dh,BYTE PTR [esi-0x10]
  4198c7:	mov    edi,0xeafcfa16
  4198cc:	dec    ebx
  4198cd:	mov    ah,0x30
  4198cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198d0:	sub    eax,eax
  4198d2:	sub    DWORD PTR [edi],esp
  4198d4:	call   0xd747b5d5
  4198d9:	aaa    
  4198da:	jns    0x419904
  4198dc:	adc    eax,0xda5bfb4
  4198e1:	sub    dl,BYTE PTR [edi+eiz*1-0x80]
  4198e5:	jmp    0x419958
  4198e7:	int3   
  4198e8:	add    BYTE PTR [eax*4+0x7a965025],dh
  4198ef:	dec    edi
  4198f0:	mov    ecx,0x3ed65bdf
  4198f5:	(bad)  
  4198f6:	push   edx
  4198f7:	mov    ebx,0x77e9ffa2
  4198fc:	cmp    BYTE PTR [ecx+eiz*2],dh
  4198ff:	mov    edx,0x11ee2f2a
  419904:	test   al,0xe3
  419906:	inc    esp
  419907:	daa    
  419908:	mov    WORD PTR [esi-0x3ba27cb],?
  41990e:	and    eax,DWORD PTR [ebx]
  419910:	sbb    al,0xbc
  419912:	mov    ds:0x3c6a0089,al
  419917:	inc    eax
  419918:	adc    BYTE PTR [ebx-0xb],cl
  41991b:	enter  0xbbe8,0x3c
  41991f:	call   0xd6cfdcae
  419924:	pop    eax
  419925:	(bad)  
  419926:	lock loope 0x419975
  419929:	sar    DWORD PTR [esi],1
  41992b:	sub    edx,DWORD PTR [edi]
  41992d:	shl    DWORD PTR [ebp+0x3ccd35ab],0x98
  419934:	and    eax,0x8ffc3aad
  419939:	test   BYTE PTR [eax],al
  41993b:	nop
  41993c:	pop    ss
  41993d:	dec    edx
  41993e:	in     al,dx
  41993f:	sti    
  419940:	xchg   ecx,eax
  419941:	test   eax,0x3a6cdbac
  419946:	adc    ch,dh
  419948:	sub    eax,0xf0a43a94
  41994d:	(bad)  
  41994e:	out    dx,eax
  41994f:	cmp    DWORD PTR [edi-0x57af10e],eax
  419955:	or     ah,dh
  419957:	lods   eax,DWORD PTR ds:[esi]
  419958:	add    eax,DWORD PTR [edx-0x747c49a7]
  41995e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41995f:	iret   
  419960:	adc    ebp,DWORD PTR [edi]
  419962:	pop    ecx
  419963:	sub    dl,BYTE PTR [esi-0x1c]
  419966:	shl    DWORD PTR [edi-0xb],1
  419969:	(bad)  
  41996a:	ficom  DWORD PTR [edx]
  41996c:	call   0x37ec:0xde97cfe6
  419973:	mov    BYTE PTR [edi],ah
  419975:	out    dx,al
  419976:	cdq    
  419977:	repnz clc 
  419979:	pusha  
  41997a:	fnsave [ebp+0x20b834b]
  419980:	sbb    edx,ecx
  419982:	lock popf 
  419984:	and    esp,esi
  419986:	into   
  419987:	lods   al,BYTE PTR ds:[esi]
  419988:	fisubr DWORD PTR [ecx]
  41998a:	jg     0x419912
  41998c:	adc    al,0xa0
  41998e:	jmp    0xe65d:0xceb6156c
  419995:	call   0x5350:0xa0c6fd3a
  41999c:	mov    ecx,ds
  41999e:	pop    ebp
  41999f:	jnp    0x419999
  4199a1:	sti    
  4199a2:	jb     0x41995d
  4199a4:	pop    esi
  4199a5:	inc    esi
  4199a6:	adc    al,0xa1
  4199a8:	pop    edi
  4199a9:	sbb    al,0x39
  4199ab:	aaa    
  4199ac:	adc    esp,edx
  4199ae:	aaa    
  4199af:	mov    cl,0xb2
  4199b1:	dec    edi
  4199b2:	push   es
  4199b3:	xor    ecx,DWORD PTR [eax+0x70b5decb]
  4199b9:	pusha  
  4199ba:	or     ebx,DWORD PTR [ecx-0x28]
  4199bd:	mov    edx,0x6e42ed39
  4199c2:	(bad)  
  4199c3:	cmc    
  4199c4:	out    dx,al
  4199c5:	xchg   DWORD PTR [esp+esi*4],edi
  4199c8:	dec    eax
  4199c9:	dec    esi
  4199ca:	xchg   edi,eax
  4199cb:	mov    dh,0xab
  4199cd:	(bad)  
  4199ce:	adc    edx,DWORD PTR [ecx-0x282f65f1]
  4199d4:	inc    esp
  4199d5:	pop    ss
  4199d6:	and    bl,BYTE PTR [edi+0x44b03591]
  4199dc:	dec    ecx
  4199dd:	(bad)  
  4199de:	call   0xc6f4:0xe13aec4c
  4199e5:	mov    DWORD PTR ds:0x828911f8,esi
  4199eb:	(bad)  
  4199ec:	mov    eax,0x50b9f499
  4199f1:	(bad)  
  4199f3:	xchg   ebx,eax
  4199f4:	adc    cl,BYTE PTR [edx]
  4199f6:	in     al,dx
  4199f7:	mov    esi,0xd285c03
  4199fc:	dec    edx
  4199fd:	rcr    dl,cl
  4199ff:	(bad)  
  419a00:	ret    0x3a8b
  419a03:	mov    bl,0x5c
  419a05:	xor    BYTE PTR [eax-0x11f9f16],dh
  419a0b:	mov    ds:0x56ea8a23,eax
  419a10:	fst    DWORD PTR [eax+0x40]
  419a13:	std    
  419a14:	daa    
  419a15:	jecxz  0x419a13
  419a17:	sahf   
  419a18:	xchg   ebx,eax
  419a19:	mov    BYTE PTR [esi-0x3915ecd2],dl
  419a1f:	call   0x52168ae2
  419a24:	(bad)  
  419a25:	ret    
  419a26:	and    ebp,esp
  419a28:	pop    ss
  419a29:	cli    
  419a2a:	outs   dx,BYTE PTR ds:[esi]
  419a2b:	sbb    BYTE PTR [edi+esi*4+0x14],0x3a
  419a30:	sbb    edx,ebx
  419a32:	lahf   
  419a33:	aad    0xc2
  419a35:	lds    ebx,FWORD PTR [esi+0x34a4fd8]
  419a3b:	push   esi
  419a3c:	pop    ss
  419a3d:	xor    bl,BYTE PTR [ebp+0x3692562b]
  419a43:	hlt    
  419a44:	psubd  mm5,QWORD PTR [ecx+0x7cda75b7]
  419a4b:	add    BYTE PTR ds:0x7bd093d0,0x87
  419a52:	sbb    bh,BYTE PTR [edi]
  419a54:	xchg   esp,eax
  419a55:	pop    ss
  419a56:	shr    dh,1
  419a58:	sbb    DWORD PTR [edx],esp
  419a5a:	aaa    
  419a5b:	sub    al,dl
  419a5d:	jmp    0x5ea15b94
  419a62:	pop    ss
  419a63:	mov    ds:0xbcd2c016,eax
  419a68:	popf   
  419a69:	xor    eax,0x2c738783
  419a6e:	xor    al,0xa8
  419a70:	pop    eax
  419a71:	jg     0x419a39
  419a73:	mov    DWORD PTR [eax-0x34],edi
  419a76:	xor    BYTE PTR [esi+0x22400509],ch
  419a7c:	fmul   st,st(4)
  419a7e:	dec    eax
  419a7f:	or     bl,BYTE PTR [ebx]
  419a81:	mov    ch,BYTE PTR ds:0x6b1034d1
  419a87:	sub    al,0x78
  419a89:	loope  0x419a81
  419a8b:	mov    dh,0xa7
  419a8d:	adc    eax,0xfa143527
  419a92:	lahf   
  419a93:	rcr    DWORD PTR ds:0x38c2629e,0xe1
  419a9a:	je     0x419ab4
  419a9c:	imul   ecx,DWORD PTR [eax-0x6d310e76],0x7b628ed0
  419aa6:	xor    eax,ebp
  419aa8:	(bad)
  419aab:	mov    WORD PTR [edi],cs
  419aad:	mov    ds:0xe49c0824,eax
  419ab3:	test   al,0x71
  419ab5:	mov    DWORD PTR [esi+0x7f330e2d],ecx
  419abb:	jmp    0x95e5:0x38a90a19
  419ac2:	add    BYTE PTR [esi+0x5b064858],0x2f
  419ac9:	test   BYTE PTR [edx-0x76],ch
  419acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419acd:	mov    al,0x3e
  419acf:	mov    edx,0xd833b934
  419ad4:	xchg   BYTE PTR [edi-0x72],al
  419ad7:	push   eax
  419ad8:	call   0x3621f5f8
  419add:	jb     0x419a9f
  419adf:	mov    bh,0xe5
  419ae1:	out    dx,al
  419ae2:	pop    edx
  419ae3:	cmp    BYTE PTR [ebx+0x6c],0x49
  419ae7:	loop   0x419a84
  419ae9:	mov    ch,0x37
  419aeb:	mov    eax,0x6e4ee41f
  419af0:	das    
  419af1:	push   ss
  419af2:	pop    edi
  419af3:	aas    
  419af4:	retf   0x390a
  419af7:	push   0xffffff91
  419af9:	or     ecx,DWORD PTR ds:0xf2aa0fe0
  419aff:	sbb    BYTE PTR [eax+0x2013ef4d],ah
  419b05:	or     DWORD PTR [edi+0x28],ebp
  419b08:	push   cs
  419b09:	cmp    ch,BYTE PTR [ebp-0x4d]
  419b0c:	cs adc dh,cl
  419b0f:	lea    ecx,[edx+ebx*4]
  419b12:	mov    DWORD PTR [ecx+0x23fd2cd6],eax
  419b18:	or     bl,bh
  419b1a:	in     eax,0x76
  419b1c:	adc    BYTE PTR [eax+0x20f902fa],al
  419b22:	mov    esi,0x8f1a11f5
  419b27:	rol    BYTE PTR ds:0xee2305cc,1
  419b2d:	xor    DWORD PTR [esi+0x2fc48d4],eax
  419b33:	mov    ecx,0xba2f3ca0
  419b38:	adc    bl,BYTE PTR [edx+0x3e51d5]
  419b3e:	jae    0x419b47
  419b40:	mov    dl,BYTE PTR [ebx+edx*1+0x34]
  419b44:	hlt    
  419b45:	mov    cl,BYTE PTR [edx]
  419b47:	or     cl,BYTE PTR [ecx+0x75]
  419b4a:	imul   DWORD PTR [ebx+0x2865965f]
  419b50:	lods   al,BYTE PTR ds:[esi]
  419b51:	out    0x90,eax
  419b53:	scas   al,BYTE PTR es:[edi]
  419b54:	xor    al,0x3
  419b56:	enter  0xfeca,0x86
  419b5a:	stos   BYTE PTR es:[edi],al
  419b5b:	jcxz   0x419bd7
  419b5e:	push   0x45
  419b60:	jge    0x419b54
  419b62:	xor    ebp,DWORD PTR [eax-0x421c7fd]
  419b68:	jg     0x419b33
  419b6a:	cdq    
  419b6b:	push   ds
  419b6c:	sub    ecx,ebp
  419b6e:	jp     0x419b22
  419b70:	add    BYTE PTR [edi+0x78f1ed12],cl
  419b76:	ret    
  419b77:	pop    edi
  419b78:	mov    al,0x53
  419b7a:	sbb    eax,0xe59312b6
  419b7f:	adc    DWORD PTR [ebp-0x69],0xffffffba
  419b83:	repnz dec edi
  419b85:	int3   
  419b86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b87:	xchg   ecx,eax
  419b88:	dec    DWORD PTR [edx]
  419b8a:	pop    es
  419b8b:	mov    ch,0x44
  419b8d:	lahf   
  419b8e:	je     0x419b2c
  419b90:	dec    ecx
  419b91:	mov    DWORD PTR [esi],ecx
  419b93:	scas   al,BYTE PTR es:[edi]
  419b94:	mov    eax,ds:0x66c25ecd
  419b99:	cld    
  419b9a:	cmp    esi,DWORD PTR [esi]
  419b9c:	imul   eax,edx,0xbd3e9c32
  419ba2:	ss jb  0x419b48
  419ba5:	add    eax,0x86379c40
  419baa:	rol    BYTE PTR [eax+ebx*2],0xb4
  419bae:	shr    BYTE PTR [ebx+esi*1+0x1505ea6d],1
  419bb5:	retf   0xf843
  419bb8:	(bad)  
  419bb9:	gs pop ss
  419bbb:	mov    dh,0xba
  419bbd:	mov    ecx,DWORD PTR [ecx+0x44]
  419bc0:	ja     0x419b58
  419bc2:	fidivr DWORD PTR [ecx+0x36b579a5]
  419bc8:	and    BYTE PTR [ebp+edi*2+0x39c6122a],cl
  419bcf:	test   DWORD PTR [ebx+0x67],edx
  419bd2:	jae    0x419c01
  419bd4:	sbb    BYTE PTR [edi],bl
  419bd6:	lods   al,BYTE PTR ds:[esi]
  419bd7:	mov    bh,0x71
  419bd9:	in     al,0xe0
  419bdb:	xchg   BYTE PTR [ebx+0x7d],ch
  419bde:	in     al,dx
  419bdf:	dec    ebp
  419be0:	ret    
  419be1:	cmp    ecx,DWORD PTR [edx-0x757464f0]
  419be7:	inc    edx
  419be8:	inc    ecx
  419be9:	scas   al,BYTE PTR es:[edi]
  419bea:	dec    esp
  419beb:	in     al,0x18
  419bed:	(bad)  
  419bf1:	mov    edi,0x5f9fec5a
  419bf6:	cmp    al,0x78
  419bf8:	scas   eax,DWORD PTR es:[edi]
  419bf9:	mov    esi,0x66984fae
  419bfe:	mov    esp,0xa6802fc0
  419c03:	ins    DWORD PTR es:[edi],dx
  419c04:	xor    al,0xf4
  419c06:	push   edi
  419c07:	repnz adc DWORD PTR [esi-0x1eaf23f3],0xc26b53e
  419c12:	inc    eax
  419c13:	cwde   
  419c14:	sub    BYTE PTR [edx+0x48c6b0da],ah
  419c1a:	imul   BYTE PTR [di+0x2e]
  419c1e:	out    0xb4,al
  419c20:	mov    cs,WORD PTR [edi]
  419c22:	loop   0x419c43
  419c24:	xor    BYTE PTR cs:[edi],0x68
  419c28:	xor    ebp,DWORD PTR [edi-0x79077563]
  419c2e:	mov    edx,0xb64600fe
  419c33:	scas   eax,DWORD PTR es:[edi]
  419c34:	xchg   ebp,eax
  419c35:	leave  
  419c36:	xor    eax,0x472853d8
  419c3b:	xor    al,0x98
  419c3d:	ret    
  419c3e:	or     eax,0x3f9edfb5
  419c43:	cld    
  419c44:	sbb    BYTE PTR [edx-0x5b],bh
  419c47:	and    BYTE PTR [eax+0x4],bl
  419c4a:	mov    edx,0x3b7b7190
  419c4f:	rcl    BYTE PTR [ecx*4+0x1737108a],cl
  419c56:	jno    0x419c34
  419c58:	fwait
  419c59:	call   0xaf05:0x950e183c
  419c60:	xchg   esi,eax
  419c61:	add    esp,DWORD PTR [ecx+0x28]
  419c64:	and    eax,0xe568da93
  419c69:	ins    BYTE PTR es:[edi],dx
  419c6a:	sbb    ch,0xfc
  419c6d:	adc    DWORD PTR [ecx+0x3b7f2f07],0x18
  419c74:	(bad)  
  419c75:	hlt    
  419c76:	dec    ebx
  419c77:	push   ebx
  419c78:	cwde   
  419c79:	xor    DWORD PTR [esi+0x562deab2],ebp
  419c7f:	into   
  419c80:	add    eax,0xe03fb10e
  419c85:	pop    eax
  419c86:	imul   edi,DWORD PTR [esi+0xf39602a],0x3
  419c8d:	test   DWORD PTR [esi],esi
  419c8f:	test   eax,0x89ca8417
  419c94:	dec    esp
  419c95:	cmp    ah,BYTE PTR [ebx+0x4d]
  419c98:	mov    edi,0x13a83c2a
  419c9d:	test   eax,0xc9581ab2
  419ca2:	in     al,dx
  419ca3:	ret    
  419ca4:	xlat   BYTE PTR ds:[ebx]
  419ca5:	push   es
  419ca6:	jno    0x419ce8
  419ca8:	(bad)  
  419ca9:	in     eax,0xa4
  419cab:	repz mov gs,WORD PTR [ebx-0x58]
  419caf:	dec    ebp
  419cb0:	xor    DWORD PTR [ebx+0x319b835],0xffffffab
  419cb7:	cwde   
  419cb8:	cwde   
  419cb9:	pop    es
  419cba:	pop    eax
  419cbb:	mov    cl,0x16
  419cbd:	lea    esi,[esi-0x1695f2ec]
  419cc3:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  419cc5:	pop    ss
  419cc6:	scas   eax,DWORD PTR es:[edi]
  419cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cc8:	adc    eax,0x2c647b5c
  419ccd:	ret    0x28fc
  419cd0:	daa    
  419cd1:	test   DWORD PTR [edx],eax
  419cd3:	nop
  419cd4:	sbb    ecx,DWORD PTR [edx]
  419cd6:	jp     0x419d20
  419cd8:	popf   
  419cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cda:	push   esi
  419cdb:	jp     0x419cd8
  419cdd:	pop    esi
  419cde:	shl    BYTE PTR [ebx-0xf],cl
  419ce1:	jne    0x419c9d
  419ce3:	push   edi
  419ce4:	push   ecx
  419ce5:	push   ecx
  419ce6:	inc    ebp
  419ce7:	lods   eax,DWORD PTR ds:[esi]
  419ce8:	cmc    
  419ce9:	or     bl,bl
  419ceb:	mov    dh,0x9f
  419ced:	xor    BYTE PTR [edi],0x98
  419cf0:	js     0x419ca7
  419cf2:	sub    ecx,DWORD PTR [ebx-0x20]
  419cf5:	inc    BYTE PTR [edx]
  419cf7:	ss int3 
  419cf9:	mov    WORD PTR [edx+0x126e68d5],ds
  419cff:	sbb    eax,0xc83facea
  419d04:	inc    BYTE PTR [edx-0x63]
  419d07:	xor    al,0xbc
  419d09:	mov    dl,0xaa
  419d0b:	jnp    0x419cdf
  419d0d:	loop   0x419d58
  419d0f:	and    BYTE PTR [edi-0x62],bh
  419d12:	mov    ds:0x5f3db1dd,al
  419d17:	test   eax,0xe77dc65a
  419d1c:	sbb    DWORD PTR [ebx],esi
  419d1e:	ds sbb bh,dl
  419d21:	push   es
  419d22:	es je  0x419d05
  419d25:	push   esp
  419d26:	cmp    edi,DWORD PTR [eax]
  419d28:	clc    
  419d29:	lods   al,BYTE PTR ds:[esi]
  419d2a:	ret    
  419d2b:	popa   
  419d2c:	call   0xebeebd3b
  419d31:	cli    
  419d32:	cdq    
  419d33:	mov    BYTE PTR [edi+0x7d],bh
  419d36:	mov    ebx,0xcc9f7ac7
  419d3b:	pop    esp
  419d3c:	jge    0xc9a9ed14
  419d42:	add    bh,BYTE PTR [edx-0x7a94b171]
  419d48:	bound  ebx,QWORD PTR ds:0xf56897b8
  419d4e:	adc    eax,0xc28b0c9a
  419d53:	mov    dl,0x1e
  419d55:	xor    BYTE PTR [ebx+ebp*4-0x4663bf14],0x1e
  419d5d:	popa   
  419d5e:	out    dx,eax
  419d5f:	sub    ecx,DWORD PTR [edi-0x6037c8bb]
  419d65:	enter  0x10c2,0xd8
  419d69:	push   0x59
  419d6b:	mov    ecx,0x51a76815
  419d70:	sbb    bh,BYTE PTR [edx]
  419d72:	mov    edi,0x3dd19c49
  419d77:	scas   eax,DWORD PTR es:[edi]
  419d78:	jmp    0x419d81
  419d7a:	hlt    
  419d7b:	jno    0x419dc1
  419d7d:	mov    ebp,edx
  419d7f:	xor    bh,0xb
  419d82:	sub    ah,ah
  419d84:	push   ss
  419d85:	scas   eax,DWORD PTR es:[edi]
  419d86:	xor    eax,0x2c1b2b08
  419d8b:	es enter 0xab13,0xb6
  419d90:	mov    ecx,0xf8dd7871
  419d95:	mov    dh,BYTE PTR [edi]
  419d97:	xchg   esi,eax
  419d98:	je     0x419d63
  419d9a:	out    0x6a,eax
  419d9c:	bound  esi,QWORD PTR [esp+ebx*8]
  419d9f:	lods   al,BYTE PTR ds:[esi]
  419da0:	cwde   
  419da1:	cdq    
  419da2:	mov    ebx,0xcd60be4
  419da7:	in     eax,0x1e
  419da9:	dec    eax
  419daa:	es in  eax,0xcd
  419dad:	dec    BYTE PTR [ecx+0x4b]
  419db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419db1:	or     ebp,DWORD PTR ds:0x36aa3eef
  419db7:	(bad)  
  419db8:	adc    edi,eax
  419dba:	fisubr WORD PTR [eax+0x7c]
  419dbd:	jmp    esi
  419dbf:	pop    eax
  419dc0:	out    0x12,al
  419dc2:	cmp    edi,DWORD PTR [eax]
  419dc4:	out    dx,eax
  419dc5:	push   edi
  419dc6:	pop    ebx
  419dc7:	pop    ss
  419dc8:	jbe    0x419e3a
  419dca:	xor    BYTE PTR [eax-0x50b1d609],bl
  419dd0:	js     0x419d71
  419dd2:	hlt    
  419dd3:	mov    al,0xc5
  419dd5:	and    DWORD PTR [ecx+0x5223a5cb],ebp
  419ddb:	pop    ss
  419ddc:	inc    edi
  419ddd:	push   esp
  419dde:	xor    DWORD PTR [esi],eax
  419de0:	imul   eax,DWORD PTR [edi],0x7aa98835
  419de6:	mov    dl,0xe6
  419de8:	cwde   
  419de9:	add    eax,0x940db4d6
  419dee:	fsubr  QWORD PTR [edi]
  419df0:	push   eax
  419df1:	cmp    al,0x9
  419df3:	cld    
  419df4:	adc    al,0x36
  419df6:	xchg   esp,eax
  419df7:	cdq    
  419df8:	popf   
  419df9:	das    
  419dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dfb:	imul   ebx,DWORD PTR [eax-0x194e1870],0x63
  419e02:	mov    bl,BYTE PTR [ebx+0x14]
  419e05:	jmp    0xe8a4:0x85a02932
  419e0c:	ja     0x419dfe
  419e0e:	lods   eax,DWORD PTR ds:[esi]
  419e0f:	sub    BYTE PTR [esi],0x31
  419e12:	or     bl,BYTE PTR [ebp+0x686ef5c6]
  419e18:	push   0x6b
  419e1a:	mov    bl,0x66
  419e1c:	sbb    DWORD PTR [edx-0x53],ecx
  419e1f:	mov    al,0x8f
  419e21:	jge    0x419e85
  419e23:	lods   eax,DWORD PTR ds:[esi]
  419e24:	adc    esi,edx
  419e26:	sbb    ebp,ebx
  419e28:	xor    ecx,DWORD PTR [ebp+0x6cb2c91a]
  419e2e:	dec    ecx
  419e2f:	add    DWORD PTR [ecx],ebp
  419e31:	cmp    esi,DWORD PTR [ebx]
  419e33:	fdivr  DWORD PTR [edi-0x7f337970]
  419e39:	mov    ah,0xc0
  419e3b:	jl     0x419e84
  419e3d:	mov    ch,0xea
  419e3f:	add    eax,0xe72f380e
  419e44:	jmp    0x300d:0xca04ac1a
  419e4b:	ss or  al,0xee
  419e4e:	cli    
  419e4f:	dec    eax
  419e50:	sahf   
  419e51:	ret    
  419e52:	xchg   DWORD PTR [eax-0x5f],ecx
  419e55:	sbb    BYTE PTR [edx-0x24d100e0],0xb1
  419e5c:	sbb    cl,BYTE PTR [ecx+0x4ef24831]
  419e62:	lea    esi,ds:0x22e1f2cf
  419e68:	mov    bh,0x49
  419e6a:	inc    ecx
  419e6b:	xchg   edx,eax
  419e6c:	inc    ebp
  419e6d:	mov    ds,WORD PTR [ecx]
  419e6f:	sbb    edx,DWORD PTR [esi-0x25]
  419e72:	cmp    al,0xc8
  419e74:	scas   eax,DWORD PTR es:[edi]
  419e75:	inc    edi
  419e76:	fsubr  QWORD PTR [ecx-0x48]
  419e79:	sub    eax,0xfbc7c68c
  419e7e:	repz xchg esi,eax
  419e80:	pop    ecx
  419e81:	rcl    BYTE PTR [edx-0x4b],cl
  419e84:	jmp    0xb1eb:0xdb88493f
  419e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e8c:	dec    eax
  419e8d:	std    
  419e8e:	ins    DWORD PTR es:[edi],dx
  419e8f:	(bad)  
  419e90:	mov    eax,ds:0xedaa8862
  419e95:	jg     0x419e3e
  419e97:	mov    cl,0x72
  419e99:	repz aas 
  419e9b:	fdiv   DWORD PTR [edx+0x783d62ff]
  419ea1:	popf   
  419ea2:	arpl   di,dx
  419ea4:	xchg   edi,eax
  419ea5:	push   edi
  419ea6:	push   0x33
  419ea8:	or     al,0xdb
  419eaa:	pusha  
  419eab:	dec    esp
  419eac:	adc    BYTE PTR [edx],bh
  419eae:	std    
  419eaf:	stc    
  419eb0:	ja     0x419f2e
  419eb2:	cmp    ebp,DWORD PTR [ebx-0x132fc80d]
  419eb8:	push   0x5bbb2d2
  419ebd:	push   0xba1a8ac4
  419ec2:	sbb    esi,DWORD PTR [ebp+0x2db66b1f]
  419ec8:	mov    ah,0xe1
  419eca:	dec    ebx
  419ecb:	(bad)  
  419ecc:	fsub   DWORD PTR ds:0x29b1acb9
  419ed2:	out    0x20,eax
  419ed4:	or     al,0xca
  419ed6:	in     eax,dx
  419ed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ed8:	adc    BYTE PTR [ebp-0x834a75],dl
  419ede:	adc    al,0xb9
  419ee0:	pop    ebx
  419ee1:	test   BYTE PTR [ebx],0xff
  419ee4:	ret    0xa0b2
  419ee7:	xchg   ebx,eax
  419ee8:	xchg   ecx,eax
  419ee9:	sub    BYTE PTR [edx],0xb3
  419eec:	ins    BYTE PTR es:[edi],dx
  419eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eee:	ss pop eax
  419ef0:	sar    BYTE PTR [ebp+0x4dd8c6fe],cl
  419ef6:	jecxz  0x419ebb
  419ef8:	test   al,0x66
  419efa:	jmp    0x419f41
  419efc:	mov    ebx,0x4e3336eb
  419f01:	xchg   BYTE PTR [edx],dh
  419f03:	dec    eax
  419f04:	(bad)  
  419f05:	mov    DWORD PTR [edi*1+0x2dae9efc],ebx
  419f0c:	and    esi,DWORD PTR [esi-0x7418e1f5]
  419f12:	cs iret 
  419f14:	sbb    edi,edx
  419f16:	or     dl,cl
  419f18:	and    BYTE PTR [edx-0x2b4e43a],bh
  419f1e:	aam    0x1a
  419f20:	dec    ebx
  419f21:	sbb    edx,0xe991b1f
  419f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f28:	rol    BYTE PTR [esi+0x3e],1
  419f2b:	sbb    BYTE PTR [eax],cl
  419f2d:	call   0xf7e13a90
  419f32:	xor    ebp,0x29
  419f35:	and    dl,BYTE PTR [edi+ecx*2]
  419f38:	push   ecx
  419f39:	mov    BYTE PTR [edx],bl
  419f3b:	ss loope 0x419f51
  419f3e:	or     eax,0x657053e1
  419f43:	js     0x419f4b
  419f45:	mov    ds:0x7e8a0c9,eax
  419f4a:	bound  ebx,QWORD PTR [esi-0x4977b3c8]
  419f50:	xor    ecx,DWORD PTR [ecx]
  419f52:	imul   ebx,DWORD PTR [ebp+edx*1+0x71eeafba],0x5fbd3411
  419f5d:	cmp    eax,0xcac93e9d
  419f62:	jp     0x419fb6
  419f64:	sub    eax,DWORD PTR [ebx-0x3ac75f16]
  419f6a:	out    0x29,al
  419f6c:	xor    WORD PTR [ebx],si
  419f6f:	push   0x779bc10c
  419f74:	enter  0x3d8a,0xb4
  419f78:	scas   eax,DWORD PTR es:[edi]
  419f79:	mov    dh,0x58
  419f7b:	aad    0x1b
  419f7d:	sbb    al,dl
  419f7f:	pop    esp
  419f80:	xchg   esp,eax
  419f81:	data16 daa 
  419f83:	push   edx
  419f84:	fstp   QWORD PTR [ecx]
  419f86:	jecxz  0x419f1d
  419f88:	cmp    al,BYTE PTR [edi-0x50245fd6]
  419f8e:	test   eax,0x302d1076
  419f93:	test   al,0xf8
  419f95:	xchg   edi,eax
  419f96:	sbb    DWORD PTR [edi-0x4e3e8968],eax
  419f9c:	lock and al,0xae
  419f9f:	push   esi
  419fa0:	mov    cl,0xb
  419fa2:	sar    BYTE PTR [edi+0xc],cl
  419fa5:	push   0xffffff86
  419fa7:	rcl    ch,0x9d
  419faa:	cmp    BYTE PTR [eax],dl
  419fac:	mov    cl,0x15
  419fae:	sub    eax,0xbcf566ac
  419fb3:	mov    ebx,0x798e84f9
  419fb8:	out    0x4a,al
  419fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fbb:	test   BYTE PTR [esi-0x75],0xf5
  419fbf:	add    eax,0xe73f8954
  419fc4:	js     0x419ffe
  419fc6:	cmp    DWORD PTR [edx+0x68f346ef],0x11
  419fcd:	jp     0x41a04d
  419fcf:	pop    ecx
  419fd0:	gs pop esi
  419fd2:	add    DWORD PTR [esi],edi
  419fd4:	pop    edi
  419fd5:	and    ebp,esi
  419fd7:	jne    0x419f5b
  419fd9:	test   DWORD PTR [edx-0x1],ecx
  419fdc:	scas   al,BYTE PTR es:[edi]
  419fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fde:	pop    edx
  419fdf:	or     DWORD PTR ds:0xc4884825,eax
  419fe5:	test   eax,0xdc18ec36
  419fea:	sub    eax,0xa8020dca
  419fef:	inc    eax
  419ff0:	inc    esp
  419ff1:	xor    al,0xfe
  419ff3:	in     eax,dx
  419ff4:	cmp    al,0x15
  419ff6:	sub    bl,BYTE PTR [edi]
  419ff8:	data16 (bad) 
  419ffa:	(bad)  
  419ffb:	mov    edi,0x5866ea5a
  41a000:	js     0x41a077
  41a002:	stos   DWORD PTR es:[edi],eax
  41a003:	aam    0x68
  41a005:	stos   BYTE PTR es:[edi],al
  41a006:	fucomip st,st(5)
  41a008:	jl     0x41a014
  41a00a:	xor    edx,ecx
  41a00c:	dec    DWORD PTR [ecx+ebp*1+0x7643aa8f]
  41a013:	mov    dh,0xcb
  41a015:	xor    dl,bh
  41a017:	sub    ah,al
  41a019:	lea    ecx,[edx-0x35283872]
  41a01f:	xchg   ecx,eax
  41a020:	adc    BYTE PTR [esi],ah
  41a022:	xor    DWORD PTR [eax+0x48],ebp
  41a025:	mov    esp,0xabf8600d
  41a02a:	mov    ebp,0xbfbf3fb5
  41a02f:	push   es
  41a030:	cmp    DWORD PTR [edx+0x40cbf2f1],0x6aed5be3
  41a03a:	dec    eax
  41a03b:	std    
  41a03c:	dec    eax
  41a03d:	inc    eax
  41a03e:	js     0x41a05b
  41a040:	cmc    
  41a041:	adc    al,0x8a
  41a043:	imul   edi,DWORD PTR [esi],0xd558367a
  41a049:	pop    edx
  41a04a:	fild   QWORD PTR [ebx+eax*8]
  41a04d:	sahf   
  41a04e:	mov    cl,0x48
  41a050:	cmp    DWORD PTR [ebp+0x35],eax
  41a053:	mov    al,0xb8
  41a055:	cld    
  41a056:	jb     0x41a013
  41a058:	xor    BYTE PTR [edx+0x30],0x1a
  41a05c:	adc    al,0xfa
  41a05e:	jl     0x41a03a
  41a060:	jg     0x41a081
  41a062:	cmp    DWORD PTR [eax+ebx*2-0x4e],0x48
  41a067:	sti    
  41a068:	cmp    ah,bh
  41a06a:	jmp    0x41a08a
  41a06c:	jecxz  0x41a0dd
  41a06e:	xor    BYTE PTR [edi+ebp*1+0xd],dh
  41a072:	mov    DWORD PTR [ebx],esi
  41a074:	dec    esp
  41a075:	add    edi,DWORD PTR [edi-0x3d]
  41a078:	add    BYTE PTR [esp+eax*1-0x11e8e11a],0x81
  41a080:	cwde   
  41a081:	cmp    ah,ah
  41a083:	lods   al,BYTE PTR ds:[esi]
  41a084:	push   ds
  41a085:	mov    bl,0xfe
  41a087:	ret    0xbe0
  41a08a:	xor    ebx,DWORD PTR [eax]
  41a08c:	cli    
  41a08d:	imul   BYTE PTR [ebx+edi*4-0x58]
  41a091:	test   eax,0x6a47b52d
  41a096:	pop    edi
  41a097:	(bad)  
  41a098:	or     eax,0x3ee28dea
  41a09d:	push   ebp
  41a09e:	mov    DWORD PTR [eax],eax
  41a0a0:	push   0xffffffd8
  41a0a2:	inc    esp
  41a0a3:	repz and ah,bh
  41a0a6:	sub    al,0x68
  41a0a8:	cmp    ecx,DWORD PTR [ebp+0x5a15e6a2]
  41a0ae:	out    0xbc,eax
  41a0b0:	les    edx,FWORD PTR [ecx]
  41a0b2:	or     edx,DWORD PTR [ebx]
  41a0b4:	cld    
  41a0b5:	pop    es
  41a0b6:	std    
  41a0b7:	leave  
  41a0b8:	push   0x3a
  41a0ba:	cmp    cl,BYTE PTR [ebx-0x4fcfda3c]
  41a0c0:	clc    
  41a0c1:	jge    0x41a0bf
  41a0c3:	pop    ebx
  41a0c4:	adc    eax,0xff1ae8ea
  41a0c9:	cdq    
  41a0ca:	mov    ds:0xdb6f8b3,eax
  41a0cf:	lods   al,BYTE PTR ds:[esi]
  41a0d0:	idiv   dh
  41a0d2:	daa    
  41a0d3:	or     DWORD PTR [eax],0x2a
  41a0d6:	cdq    
  41a0d7:	jmp    0x3f2653f5
  41a0dc:	(bad)  
  41a0dd:	out    0xe0,al
  41a0df:	adc    ah,BYTE PTR [esi+0x60776a7b]
  41a0e5:	int    0x7e
  41a0e7:	lods   eax,DWORD PTR ds:[esi]
  41a0e8:	push   cs
  41a0e9:	pop    edx
  41a0ea:	fadd   DWORD PTR [ebp+0x67]
  41a0ed:	nop
  41a0ee:	fwait
  41a0ef:	gs add eax,0xc8fbffc0
  41a0f5:	(bad)  
  41a0f6:	leave  
  41a0f7:	mov    bl,0x88
  41a0f9:	add    BYTE PTR [esp+edi*8],0xc
  41a0fd:	cli    
  41a0fe:	add    al,0xf9
  41a100:	dec    edx
  41a101:	rcl    esp,1
  41a103:	inc    esi
  41a104:	xchg   ebx,eax
  41a105:	jnp    0x41a111
  41a107:	sbb    eax,0xcdbd220c
  41a10c:	(bad)  
  41a10d:	pop    edi
  41a10e:	jle    0x41a154
  41a110:	sbb    dl,bh
  41a112:	aaa    
  41a113:	shl    DWORD PTR [ebx],1
  41a115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a116:	in     al,dx
  41a117:	mov    ah,0xdf
  41a119:	jmp    0x41a0ed
  41a11b:	pop    ss
  41a11c:	in     eax,0xca
  41a11e:	out    0x3a,al
  41a120:	pop    edi
  41a121:	arpl   WORD PTR [ebx+eiz*2+0x17],bp
  41a125:	dec    edx
  41a126:	fwait
  41a127:	rol    ebx,1
  41a129:	pop    ds
  41a12a:	adc    dh,cl
  41a12c:	lods   al,BYTE PTR ds:[esi]
  41a12d:	or     eax,0x8a06883d
  41a132:	shr    BYTE PTR [edx],cl
  41a134:	or     cl,cl
  41a136:	and    al,0xde
  41a138:	mov    dl,dh
  41a13a:	adc    esi,edx
  41a13c:	lods   eax,DWORD PTR ds:[esi]
  41a13d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a13e:	mov    ds:0x20fd8abb,eax
  41a143:	fcomp  QWORD PTR [edx]
  41a145:	fiadd  DWORD PTR [edx]
  41a147:	and    esi,esi
  41a149:	or     dh,BYTE PTR [eax+0x4c7568ca]
  41a14f:	retf   0x4800
  41a152:	repz adc cl,BYTE PTR [esi-0xe]
  41a156:	scas   eax,DWORD PTR es:[edi]
  41a157:	mov    dl,0x6f
  41a159:	add    cl,BYTE PTR [ecx+0x18]
  41a15c:	mov    dh,0x8
  41a15e:	and    DWORD PTR [edi+ecx*8],esp
  41a161:	ja     0x41a13f
  41a163:	aas    
  41a164:	sbb    DWORD PTR [edx],ebp
  41a166:	shl    DWORD PTR [ebx+0x51d3b03b],cl
  41a16c:	push   edx
  41a16d:	rcr    DWORD PTR [edx],cl
  41a16f:	out    dx,al
  41a170:	jl     0x41a143
  41a172:	aaa    
  41a173:	ins    BYTE PTR es:[edi],dx
  41a174:	inc    ebp
  41a175:	int3   
  41a176:	add    al,0xed
  41a178:	cld    
  41a179:	js     0x41a1b5
  41a17b:	and    ebx,DWORD PTR [edx+0x13ac34ad]
  41a181:	mov    edx,0xaf5e380c
  41a186:	dec    edx
  41a187:	pop    edx
  41a188:	sbb    eax,0x8f1e83de
  41a18d:	sub    BYTE PTR [edx+0x43],0x51
  41a191:	int3   
  41a192:	scas   al,BYTE PTR es:[edi]
  41a193:	xchg   edi,eax
  41a194:	push   eax
  41a195:	xlat   BYTE PTR ds:[ebx]
  41a196:	dec    eax
  41a197:	dec    eax
  41a198:	jne    0x41a1dd
  41a19a:	cmp    bl,BYTE PTR [edi]
  41a19c:	cwde   
  41a19d:	fwait
  41a19e:	gs mov al,0x9
  41a1a1:	xor    al,0xc8
  41a1a3:	mov    ds:0x17e24a14,al
  41a1a8:	add    dl,al
  41a1aa:	das    
  41a1ab:	jp     0x41a1a3
  41a1ad:	push   edx
  41a1ae:	outs   dx,DWORD PTR ds:[esi]
  41a1af:	xchg   ebx,eax
  41a1b0:	or     DWORD PTR [eax-0x37f14656],esp
  41a1b6:	ja     0x41a1b1
  41a1b8:	pop    ss
  41a1b9:	retf   0x2ee6
  41a1bc:	mov    esp,0x5a68b3cc
  41a1c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1c2:	cmp    BYTE PTR [ebx],cl
  41a1c4:	ror    DWORD PTR [edi-0x15ac7086],1
  41a1ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1cb:	stos   DWORD PTR es:[edi],eax
  41a1cc:	mov    al,0xed
  41a1ce:	xor    edi,DWORD PTR [eax+0x57e658b0]
  41a1d4:	dec    eax
  41a1d5:	push   ebx
  41a1d6:	push   edx
  41a1d7:	push   ecx
  41a1d8:	or     eax,0x7e12ca84
  41a1dd:	inc    edi
  41a1de:	dec    edi
  41a1df:	rcr    DWORD PTR [edx],1
  41a1e1:	jmp    0xc16a:0x76dd3895
  41a1e8:	sub    DWORD PTR [ebx-0x47],edi
  41a1eb:	jo     0x41a241
  41a1ed:	mov    WORD PTR [edx+0x74065b41],gs
  41a1f3:	outs   dx,DWORD PTR ds:[esi]
  41a1f4:	xchg   ebx,eax
  41a1f5:	mov    bl,0x56
  41a1f7:	and    DWORD PTR [ebp-0x12],ebp
  41a1fa:	pop    ss
  41a1fb:	sahf   
  41a1fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1fd:	or     BYTE PTR [edi],dh
  41a1ff:	mov    eax,0x131ffda5
  41a204:	mov    eax,DWORD PTR [ecx+0x28821dea]
  41a20a:	adc    DWORD PTR [edi-0xa],esi
  41a20d:	mov    ds:0x8ff41c14,al
  41a212:	dec    edx
  41a213:	push   edi
  41a214:	mov    eax,DWORD PTR [eax]
  41a216:	stc    
  41a217:	stos   DWORD PTR es:[edi],eax
  41a218:	sbb    BYTE PTR [ecx-0x58],cl
  41a21b:	mov    esp,0xa2cac60f
  41a220:	ds pop esp
  41a222:	ins    DWORD PTR es:[edi],dx
  41a223:	mov    al,0xf8
  41a225:	mov    dh,BYTE PTR [edi]
  41a227:	cwde   
  41a228:	push   esp
  41a229:	gs fstp TBYTE PTR fs:[eax-0x34]
  41a22e:	inc    eax
  41a22f:	dec    esp
  41a230:	je     0x41a1ba
  41a232:	or     bl,BYTE PTR [ebx+0x6f1ca128]
  41a238:	adc    BYTE PTR [esi+esi*1+0x511ad4d8],dh
  41a23f:	or     eax,0xffffffc3
  41a242:	(bad)  
  41a243:	jmp    0x41a1c9
  41a245:	fldcw  WORD PTR ds:0x37204f74
  41a24b:	loopne 0x41a2a6
  41a24d:	jp     0x41a264
  41a24f:	out    dx,eax
  41a250:	mov    dl,0x29
  41a252:	jmp    0x3d490c08
  41a257:	mov    bh,0x92
  41a259:	xchg   BYTE PTR [edx],cl
  41a25b:	mov    edi,0xd224a068
  41a260:	outs   dx,BYTE PTR ds:[esi]
  41a261:	mov    cl,0xa0
  41a263:	dec    edi
  41a264:	push   ss
  41a265:	repz adc eax,0x4e0f5d33
  41a26b:	mov    BYTE PTR [ecx],bh
  41a26d:	mov    ebp,0x4b15e88a
  41a272:	cld    
  41a273:	jp     0x859567e3
  41a279:	push   es
  41a27a:	sbb    al,BYTE PTR [ebx+0x4036c8f8]
  41a280:	pop    eax
  41a281:	jg     0x41a2b1
  41a283:	lods   eax,DWORD PTR ds:[esi]
  41a284:	cs sub edi,ecx
  41a287:	icebp  
  41a288:	adc    eax,0xd898672a
  41a28d:	add    DWORD PTR [esi+0x725890fe],0x2be93f7a
  41a297:	mov    dh,0xd7
  41a299:	sbb    bh,BYTE PTR [edx]
  41a29b:	lods   al,BYTE PTR ds:[esi]
  41a29c:	clc    
  41a29d:	fwait
  41a29e:	cmc    
  41a29f:	ins    DWORD PTR es:[edi],dx
  41a2a0:	adc    BYTE PTR [ecx+eiz*1-0x3e04cde1],al
  41a2a7:	lods   al,BYTE PTR ds:[esi]
  41a2a8:	pusha  
  41a2a9:	xor    esi,DWORD PTR [ecx-0x19]
  41a2ac:	lods   al,BYTE PTR ds:[esi]
  41a2ad:	jg     0x41a2b9
  41a2af:	add    esi,DWORD PTR [esi]
  41a2b1:	bound  esp,QWORD PTR [eax-0x58]
  41a2b4:	adc    eax,0xff5c4dda
  41a2b9:	pop    ds
  41a2ba:	neg    BYTE PTR cs:[edx+0x3b]
  41a2be:	fist   WORD PTR ds:0x879bf864
  41a2c4:	mov    DWORD PTR [ecx-0x15e777c3],ecx
  41a2ca:	scas   al,BYTE PTR es:[edi]
  41a2cb:	push   ss
  41a2cc:	mov    dh,0xaa
  41a2ce:	mov    ds:0xd51780c2,ax
  41a2d4:	push   0x13ac2383
  41a2d9:	push   bx
  41a2db:	mov    WORD PTR [edx+edi*2],cs
  41a2de:	imul   ecx,DWORD PTR [ebp-0x2dc2671],0x704af9fa
  41a2e8:	xor    al,0x82
  41a2ea:	retf   0x2655
  41a2ed:	pop    es
  41a2ee:	xchg   esp,eax
  41a2ef:	and    ebx,DWORD PTR [edx]
  41a2f1:	jecxz  0x41a2f8
  41a2f3:	(bad)  
  41a2f4:	ins    DWORD PTR es:[edi],dx
  41a2f5:	daa    
  41a2f6:	ins    BYTE PTR es:[edi],dx
  41a2f7:	in     al,0x57
  41a2f9:	mov    ebx,0x83d83920
  41a2fe:	mov    BYTE PTR [edx+0x5d347855],dh
  41a304:	(bad)  
  41a305:	test   al,0x22
  41a307:	not    BYTE PTR ds:0x727f1fa7
  41a30d:	dec    eax
  41a30e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a30f:	mov    bh,0x77
  41a311:	or     esi,edx
  41a313:	sahf   
  41a314:	(bad)  
  41a315:	xchg   ebx,eax
  41a316:	push   0x43
  41a318:	dec    ebx
  41a319:	shl    dl,cl
  41a31b:	inc    ecx
  41a31c:	in     al,0x95
  41a31e:	nop
  41a31f:	mov    ecx,0x383bdb9e
  41a324:	test   bl,0x78
  41a327:	sahf   
  41a328:	js     0x41a30a
  41a32a:	xor    DWORD PTR [ecx-0x2e27d4cf],0x789cfb2f
  41a334:	(bad)  [edx+0x3c]
  41a337:	call   0xc56707c
  41a33c:	mov    BYTE PTR [ecx],bl
  41a33e:	gs mov edx,0xbbcf23c1
  41a344:	xor    al,0xac
  41a346:	mov    eax,edx
  41a348:	adc    BYTE PTR [edx-0x3b50d6a9],dh
  41a34e:	jl     0x41a2ed
  41a350:	mov    ch,bl
  41a352:	repz js 0x41a337
  41a355:	data16 sub al,0x32
  41a358:	mov    dh,0x8c
  41a35a:	sub    dh,BYTE PTR [esi+0x14]
  41a35d:	mov    edx,0xac682566
  41a362:	dec    edx
  41a363:	loopne 0x41a301
  41a365:	jecxz  0x41a3a0
  41a367:	pop    eax
  41a368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a369:	xchg   BYTE PTR [edx-0x560b364b],bh
  41a36f:	clc    
  41a370:	mov    edx,ds
  41a372:	mov    eax,ds:0x8c921c1f
  41a377:	jb     0x41a3ca
  41a379:	sub    DWORD PTR [ebx+0x3b],ebx
  41a37c:	push   ds
  41a37d:	ds (bad) 
  41a37f:	jp     0x41a397
  41a381:	cs sub eax,0x4a832f6c
  41a387:	adc    edx,DWORD PTR [eax]
  41a389:	cmp    dl,BYTE PTR [esi-0x16]
  41a38c:	stc    
  41a38d:	ret    
  41a38e:	inc    ecx
  41a38f:	aas    
  41a390:	xchg   ebp,eax
  41a391:	shl    edx,1
  41a393:	mov    ds:0x6a4a854d,al
  41a398:	pushf  
  41a399:	cmp    BYTE PTR [ecx],0xb0
  41a39c:	and    al,0x3c
  41a39e:	cmp    eax,0x7e2b2588
  41a3a3:	or     edi,DWORD PTR [eax+0x67baf3f0]
  41a3a9:	mov    al,0xb1
  41a3ab:	mov    ebx,0x65dada81
  41a3b0:	dec    ecx
  41a3b1:	push   ds
  41a3b2:	sub    BYTE PTR [edx+esi*1],0xdc
  41a3b6:	ss into 
  41a3b8:	enter  0xce8e,0xb3
  41a3bc:	push   eax
  41a3bd:	adc    ebp,DWORD PTR [ecx]
  41a3bf:	inc    esi
  41a3c0:	xchg   edi,eax
  41a3c1:	(bad)  
  41a3c3:	js     0x41a412
  41a3c5:	mov    esp,DWORD PTR [edi]
  41a3c7:	adc    al,0x62
  41a3c9:	push   ebp
  41a3ca:	outs   dx,DWORD PTR ds:[esi]
  41a3cb:	clc    
  41a3cc:	adc    eax,0x732bf236
  41a3d1:	stc    
  41a3d2:	icebp  
  41a3d3:	(bad)  
  41a3d4:	les    edi,FWORD PTR [edx+ebp*1-0x32]
  41a3d8:	push   esi
  41a3d9:	scas   al,BYTE PTR es:[edi]
  41a3da:	or     DWORD PTR [eax-0x37e583a1],edi
  41a3e0:	adc    eax,0x438b2682
  41a3e5:	les    edi,FWORD PTR [ebx+0x47ac8997]
  41a3eb:	jns    0x41a452
  41a3ed:	(bad)  
  41a3ee:	or     al,0x67
  41a3f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3f1:	sub    DWORD PTR ds:0x34ddb5cf,edx
  41a3f7:	out    dx,al
  41a3f8:	xor    ebx,DWORD PTR [edi+eiz*8+0x14983714]
  41a3ff:	dec    edx
  41a400:	xor    al,0x6f
  41a402:	xor    eax,0x6bd4939c
  41a407:	out    dx,al
  41a408:	adc    eax,0x414cefa
  41a40d:	and    DWORD PTR [ebx+ebp*1+0x329dfa16],edx
  41a414:	mov    edi,0x2e1f2b3c
  41a419:	mov    ebx,0xbf930e7f
  41a41e:	sub    bh,BYTE PTR [ecx]
  41a420:	or     al,0x6b
  41a422:	add    edi,DWORD PTR [esi]
  41a424:	push   ss
  41a425:	je     0x41a47d
  41a427:	or     DWORD PTR [ecx],ebx
  41a429:	xor    DWORD PTR [esi+0x1a],esi
  41a42c:	pusha  
  41a42d:	lods   eax,DWORD PTR ds:[esi]
  41a42e:	mov    dh,0x6b
  41a430:	loop   0x41a437
  41a432:	dec    eax
  41a433:	pop    esi
  41a434:	inc    ebx
  41a435:	xchg   edx,ebx
  41a437:	stc    
  41a438:	adc    ch,bl
  41a43a:	cwde   
  41a43b:	dec    edx
  41a43c:	add    BYTE PTR [eax-0x65],dh
  41a43f:	fisub  WORD PTR [eax+eax*4]
  41a442:	or     dh,bh
  41a444:	std    
  41a445:	jae    0x41a487
  41a447:	mov    ecx,DWORD PTR [edi-0x7f8007f9]
  41a44d:	adc    al,0x2b
  41a44f:	mov    eax,0xe76f5ae9
  41a454:	aam    0x80
  41a456:	sbb    ah,BYTE PTR [ebp-0x22109c7]
  41a45c:	nop
  41a45d:	cmp    eax,0x3006d83b
  41a462:	sahf   
  41a463:	fisttp QWORD PTR [edx+eax*4]
  41a466:	inc    esp
  41a467:	jbe    0x41a480
  41a469:	mov    ds:0x2d07e403,al
  41a46e:	rol    BYTE PTR [edx-0x2eae65ea],1
  41a474:	mov    ebx,0x79ee4226
  41a479:	cs pop es
  41a47b:	mov    ch,0x2c
  41a47d:	stc    
  41a47e:	mov    edx,DWORD PTR [eax-0x179a9aa7]
  41a484:	ret    0xbe29
  41a487:	lds    ecx,FWORD PTR [edx+edi*2]
  41a48a:	or     BYTE PTR [ecx],bh
  41a48c:	rcl    DWORD PTR [ebp+0x25],cl
  41a48f:	and    BYTE PTR [edi-0x271d57e9],dl
  41a495:	pop    ebp
  41a496:	shl    DWORD PTR [esi-0x4da0b436],1
  41a49c:	adc    DWORD PTR [edx+0x67],ebp
  41a49f:	lahf   
  41a4a0:	xchg   ecx,eax
  41a4a1:	in     eax,0xef
  41a4a3:	xor    BYTE PTR [eax],cl
  41a4a5:	sbb    al,0xbd
  41a4a7:	and    ebx,edx
  41a4a9:	xchg   esp,eax
  41a4aa:	push   0xffffffe3
  41a4ac:	aas    
  41a4ad:	adc    ah,bl
  41a4af:	pop    edx
  41a4b0:	sbb    eax,0x69c83de0
  41a4b5:	push   0x64
  41a4b7:	loope  0x41a4e1
  41a4b9:	mov    WORD PTR [ebx],es
  41a4bb:	mov    ebx,0x25ccbf38
  41a4c0:	adc    dl,bh
  41a4c2:	into   
  41a4c3:	fisubr DWORD PTR [esi+esi*1+0x70654fbd]
  41a4ca:	call   0x1a042d79
  41a4cf:	mov    ch,0x69
  41a4d1:	push   ss
  41a4d2:	xchg   edx,eax
  41a4d3:	inc    ebx
  41a4d4:	daa    
  41a4d5:	cld    
  41a4d6:	pop    ebx
  41a4d7:	mov    edi,0x7527a0c
  41a4dc:	push   cs
  41a4dd:	jmp    0x67705216
  41a4e2:	adc    ebp,DWORD PTR [edi]
  41a4e4:	cmp    edi,DWORD PTR [ecx+0xf]
  41a4e7:	call   0x4a1e:0x6e0ab892
  41a4ee:	stos   BYTE PTR es:[edi],al
  41a4ef:	push   ebx
  41a4f0:	nop
  41a4f1:	rol    bh,cl
  41a4f3:	mov    edx,0x113b70e0
  41a4f8:	inc    esp
  41a4f9:	test   BYTE PTR [edx-0x24],ch
  41a4fc:	add    al,0xb4
  41a4fe:	mov    edi,?
  41a500:	mov    al,0x99
  41a502:	xor    bl,BYTE PTR [eax-0x1ef21703]
  41a508:	mov    BYTE PTR [esi+0xddeadea],ch
  41a50e:	inc    ebp
  41a50f:	cmp    bl,BYTE PTR [ebx]
  41a511:	retf   0xc134
  41a514:	pop    edi
  41a515:	mov    ebx,0x40863f95
  41a51a:	mov    edx,0x78816062
  41a51f:	and    dl,ah
  41a521:	xor    bl,BYTE PTR [ebp-0x24ec56ff]
  41a527:	in     eax,0x8
  41a529:	bts    DWORD PTR [esi],0x45
  41a52d:	lds    esi,FWORD PTR [edx]
  41a52f:	cmp    BYTE PTR [edi+0x6105a731],al
  41a535:	fist   DWORD PTR [ebx+0x4a8724ce]
  41a53b:	(bad)  
  41a53c:	fisttp DWORD PTR [edx-0x6a]
  41a53f:	cmp    cl,dl
  41a541:	(bad)  
  41a542:	jmp    0x41a530
  41a544:	fmulp  st(1),st
  41a546:	into   
  41a547:	sub    ebp,DWORD PTR [ebx-0x6fd7cc20]
  41a54d:	pop    edx
  41a54e:	aad    0xa2
  41a550:	add    eax,0x381c9a91
  41a555:	in     al,dx
  41a556:	cmp    DWORD PTR [ebx+0x18],ecx
  41a559:	or     ah,bh
  41a55b:	or     DWORD PTR [ebp+0x6a336cc9],ebp
  41a561:	sar    dl,1
  41a563:	xlat   BYTE PTR fs:[ebx]
  41a565:	sub    dl,0x46
  41a568:	xchg   ecx,eax
  41a569:	jmp    0xdd17d87d
  41a56e:	ds cwde 
  41a570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a571:	jmp    0xc50a:0x3a489142
  41a578:	pop    ebp
  41a579:	mov    ebx,0xc6f1385e
  41a57e:	rcl    BYTE PTR [ecx-0x22cf7f2e],cl
  41a584:	mov    bl,0x81
  41a586:	or     DWORD PTR [ebp-0x2],0x7e
  41a58a:	push   0xffffff88
  41a58c:	lea    ebx,[eax-0x73]
  41a58f:	(bad)  
  41a591:	sub    DWORD PTR [ebx],esi
  41a593:	mov    dl,bl
  41a595:	xor    dh,BYTE PTR [edi]
  41a597:	push   0x402d02fe
  41a59c:	ucomiss xmm0,DWORD PTR [esi]
  41a59f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5a0:	mov    eax,ds:0x846a69da
  41a5a5:	outs   dx,DWORD PTR ds:[esi]
  41a5a6:	add    eax,0xa6bd32b4
  41a5ab:	fadd   DWORD PTR [ecx-0x31]
  41a5ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5af:	mov    ebx,0x4dbc8805
  41a5b4:	pop    eax
  41a5b5:	repnz xor eax,0x3e7b4fae
  41a5bb:	push   0x5
  41a5bd:	inc    esp
  41a5bf:	mov    es,WORD PTR [ecx-0x1246cb1c]
  41a5c5:	mov    BYTE PTR [edx-0x4682739d],cl
  41a5cb:	mov    bh,0xe6
  41a5cd:	mov    ah,0x36
  41a5cf:	clc    
  41a5d0:	daa    
  41a5d1:	scas   al,BYTE PTR es:[edi]
  41a5d2:	cmp    DWORD PTR [edx-0x4db9de38],ecx
  41a5d8:	mov    cl,0xa9
  41a5da:	arpl   si,bx
  41a5dc:	ror    BYTE PTR [edx],1
  41a5de:	mov    bl,BYTE PTR [eax-0x12]
  41a5e1:	out    0xb6,al
  41a5e3:	arpl   WORD PTR [ecx+eax*1+0x33],di
  41a5e7:	loopne 0x41a661
  41a5e9:	fwait
  41a5ea:	aad    0xae
  41a5ec:	in     al,dx
  41a5ed:	cmc    
  41a5ee:	jo     0x41a667
  41a5f0:	jl     0x41a5a0
  41a5f2:	jns    0x41a65e
  41a5f4:	xor    dl,dl
  41a5f6:	in     eax,0xb7
  41a5f8:	lea    ebp,[ecx]
  41a5fa:	pop    esp
  41a5fb:	adc    edi,DWORD PTR [edx+ecx*4+0x3feb5af7]
  41a602:	aas    
  41a603:	pusha  
  41a604:	aaa    
  41a605:	mov    ebp,0x9d88c16
  41a60a:	xor    BYTE PTR [eax],bh
  41a60c:	into   
  41a60d:	push   es
  41a60e:	int    0x8d
  41a610:	jecxz  0x41a65f
  41a612:	ins    BYTE PTR es:[edi],dx
  41a613:	jne    0x41a62e
  41a615:	idiv   DWORD PTR [edi]
  41a617:	sub    BYTE PTR [esi+eiz*8+0xa84b4ba],bh
  41a61e:	xchg   ebp,eax
  41a61f:	push   eax
  41a620:	popa   
  41a621:	(bad)  ds:[edx]
  41a624:	ror    BYTE PTR [edx+0x34],cl
  41a627:	fisttp WORD PTR [eax+0x1db6a35e]
  41a62d:	jae    0x41a601
  41a62f:	xor    DWORD PTR [edi],ebp
  41a631:	(bad)  
  41a632:	jmp    0xed6fbf8f
  41a637:	arpl   WORD PTR [edx-0x2412b785],cx
  41a63d:	(bad)  
  41a63e:	aas    
  41a63f:	inc    esi
  41a640:	js     0x41a605
  41a642:	cwde   
  41a643:	mov    al,0xf2
  41a645:	jmp    0x41a6b5
  41a647:	repnz adc al,0xda
  41a64a:	xchg   ebx,eax
  41a64b:	test   DWORD PTR [ecx+0x635f876c],ecx
  41a651:	pop    ss
  41a652:	jmp    0x1acc327e
  41a657:	ss mov esi,0x71323405
  41a65d:	sti    
  41a65e:	xor    eax,0x900200d8
  41a663:	jge    0x41a6ae
  41a665:	imul   eax,ebx,0xfd1a1bf1
  41a66b:	sbb    BYTE PTR [esp+ebx*8-0x5ef1424],cl
  41a672:	inc    ecx
  41a673:	ret    0x662f
  41a676:	cmp    BYTE PTR [ebp+0x13],bl
  41a679:	xchg   edx,eax
  41a67a:	je     0x41a645
  41a67c:	add    dh,BYTE PTR [ebp-0x35]
  41a67f:	cwde   
  41a680:	and    cl,BYTE PTR [edx+ebp*4-0x7995ed22]
  41a687:	adc    bl,ch
  41a689:	outs   dx,DWORD PTR cs:[esi]
  41a68b:	sub    cl,BYTE PTR [ecx-0x67a0a130]
  41a691:	leave  
  41a692:	xor    dh,BYTE PTR [esi+0x70a8e618]
  41a698:	pop    ss
  41a699:	mov    bl,BYTE PTR [eax-0x7cbc4167]
  41a69f:	adc    eax,0x7b551846
  41a6a4:	jp     0x41a62f
  41a6a6:	jmp    0xddeb:0x2ece936
  41a6ad:	popa   
  41a6ae:	js     0x41a658
  41a6b0:	inc    ebp
  41a6b1:	test   eax,0x81d4ef89
  41a6b6:	enter  0xa620,0x89
  41a6ba:	fisubr DWORD PTR [edi]
  41a6bc:	in     eax,dx
  41a6bd:	aad    0xdf
  41a6bf:	jo     0x41a658
  41a6c1:	popf   
  41a6c2:	aas    
  41a6c3:	cmp    BYTE PTR [edx-0x52],dh
  41a6c6:	clc    
  41a6c7:	xchg   esi,eax
  41a6c8:	sbb    BYTE PTR ds:0x23f2ad3e,al
  41a6ce:	mov    ecx,0xc19a1aad
  41a6d3:	lds    esi,FWORD PTR [ebp-0x2b]
  41a6d6:	iret   
  41a6d7:	int    0x25
  41a6d9:	jb     0x41a735
  41a6db:	stos   BYTE PTR es:[edi],al
  41a6dc:	dec    ecx
  41a6dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6de:	jno    0x41a6d9
  41a6e0:	test   al,0x84
  41a6e2:	call   0x1f00:0xb2a96aa4
  41a6e9:	mov    ch,0x30
  41a6eb:	fsubr  st,st(0)
  41a6ed:	retf   
  41a6ee:	imul   eax,DWORD PTR [esp+esi*8+0x2a2d7892],0x8e11da83
  41a6f9:	inc    ecx
  41a6fa:	cmp    eax,0x50c8202b
  41a6ff:	sub    BYTE PTR [ecx-0x76],bh
  41a702:	xchg   ebp,eax
  41a703:	cdq    
  41a704:	mov    BYTE PTR [ebp+0x52b0b878],al
  41a70a:	sub    dl,BYTE PTR [ebp-0x4ea38b1]
  41a710:	dec    ebp
  41a711:	and    eax,0x4686e837
  41a716:	fdiv   QWORD PTR [edi+0x7]
  41a719:	ds jnp 0x41a6fb
  41a71c:	dec    esi
  41a71d:	and    edi,DWORD PTR [eax-0x59]
  41a720:	cwde   
  41a721:	push   esp
  41a722:	cmp    al,BYTE PTR [edx+eax*8+0x765a0c64]
  41a729:	sbb    edx,0xffffff9d
  41a72c:	ss scas al,BYTE PTR es:[edi]
  41a72e:	int    0x5e
  41a730:	les    ecx,FWORD PTR [esi]
  41a732:	ss test al,0xe1
  41a735:	or     eax,0xacf1f86d
  41a73a:	add    cl,al
  41a73c:	mov    ah,0x8a
  41a73e:	pcmpgtd mm4,mm0
  41a741:	les    ebp,FWORD PTR [esp+ebx*2+0x3a0a3a10]
  41a748:	daa    
  41a749:	scas   al,BYTE PTR es:[edi]
  41a74a:	dec    esi
  41a74b:	mov    ecx,0xc8304bf4
  41a750:	xchg   edx,eax
  41a751:	cmp    al,0x6e
  41a753:	xor    ebx,DWORD PTR [eax+0x34ad1c5c]
  41a759:	shr    BYTE PTR [esi+ecx*4-0x160085f0],cl
  41a760:	aam    0x46
  41a762:	call   0x83e22083
  41a767:	ret    0x8eff
  41a76a:	cli    
  41a76b:	addr16 and ecx,esi
  41a76e:	das    
  41a76f:	fcom   st(2)
  41a771:	rcl    BYTE PTR [esi+0x28],cl
  41a774:	dec    esp
  41a775:	push   esp
  41a776:	cmp    eax,0x300031c2
  41a77b:	cdq    
  41a77c:	mov    edx,0x24895a85
  41a781:	lock fwait
  41a783:	(bad)  
  41a784:	ror    BYTE PTR [edx+0x2b],1
  41a787:	push   ds
  41a788:	xor    BYTE PTR [eax+0x5a71e7ad],cl
  41a78e:	dec    ecx
  41a78f:	(bad)  
  41a790:	fisttp WORD PTR [edx*4-0x43b09e72]
  41a797:	imul   esp,DWORD PTR [eax+0x29],0x5e7ae037
  41a79e:	outs   dx,DWORD PTR ds:[esi]
  41a79f:	mov    ds:0xe594b9d8,al
  41a7a4:	mov    ebp,0xa0a16dd6
  41a7a9:	pop    es
  41a7aa:	or     BYTE PTR [esp+esi*1+0x4abcda87],bl
  41a7b1:	push   ecx
  41a7b2:	xchg   esi,eax
  41a7b3:	ret    0x5376
  41a7b6:	push   edi
  41a7b7:	setb   dh
  41a7ba:	sbb    edi,edi
  41a7bc:	dec    ecx
  41a7bd:	cdq    
  41a7be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7bf:	in     eax,dx
  41a7c0:	push   edi
  41a7c1:	lahf   
  41a7c2:	aaa    
  41a7c3:	xor    al,0x32
  41a7c5:	sub    dl,0xd8
  41a7c8:	pushf  
  41a7c9:	stos   DWORD PTR es:[edi],eax
  41a7ca:	xchg   ebx,eax
  41a7cb:	or     cl,cl
  41a7cd:	jnp    0x41a832
  41a7cf:	cwde   
  41a7d0:	inc    ebp
  41a7d1:	mov    esi,0x80a52d6a
  41a7d6:	or     BYTE PTR [esi-0x512576b0],dl
  41a7dc:	int    0x9d
  41a7de:	jo     0x41a79d
  41a7e0:	mov    DWORD PTR [edx-0x472f5e8f],ebp
  41a7e6:	lods   al,BYTE PTR ds:[esi]
  41a7e7:	jl     0x41a77f
  41a7e9:	leave  
  41a7ea:	dec    ecx
  41a7eb:	fwait
  41a7ec:	sbb    DWORD PTR [esi-0x74608479],ebx
  41a7f2:	call   0x817a:0x21c26cf5
  41a7f9:	icebp  
  41a7fa:	xor    bl,BYTE PTR [eax]
  41a7fc:	int    0xbe
  41a7fe:	subps  xmm5,XMMWORD PTR [eax-0x781941e2]
  41a805:	dec    ebp
  41a806:	stos   DWORD PTR es:[edi],eax
  41a807:	out    dx,eax
  41a808:	retf   
  41a809:	addr16 cmp al,0x14
  41a80c:	or     DWORD PTR [edi-0x47],edx
  41a80f:	mov    edi,0x8c4ce916
  41a814:	int3   
  41a815:	dec    edx
  41a816:	(bad)  
  41a818:	mov    ds:0x71aa3a86,eax
  41a81d:	xchg   ecx,eax
  41a81e:	push   esi
  41a81f:	int    0xc1
  41a821:	sbb    bh,BYTE PTR [edx+ebp*1+0x67]
  41a825:	pop    edx
  41a826:	call   0x582d:0x60c7795b
  41a82d:	adc    BYTE PTR [ebx],cl
  41a82f:	mov    ch,0xc0
  41a831:	xchg   ebp,esi
  41a833:	cmp    al,0xd
  41a835:	mov    edx,0x44c45d42
  41a83a:	cmp    BYTE PTR [ebp+0x3],dh
  41a83d:	jle    0x41a84c
  41a83f:	icebp  
  41a840:	cli    
  41a841:	lea    ebx,[edx+0x5b]
  41a844:	push   ebp
  41a845:	add    al,BYTE PTR [ebp+0x11]
  41a848:	inc    esp
  41a849:	jp     0x41a8c3
  41a84b:	test   al,0x8f
  41a84d:	scas   eax,DWORD PTR es:[edi]
  41a84e:	js     0x41a871
  41a850:	adc    eax,0x56eb74f2
  41a855:	lods   eax,DWORD PTR ds:[esi]
  41a856:	add    DWORD PTR [ecx-0x17],0xfe3dca82
  41a85d:	rol    DWORD PTR [esi],1
  41a85f:	adc    cl,dl
  41a861:	xor    al,0x31
  41a863:	push   0xaf0fc0b
  41a868:	in     al,dx
  41a869:	jp     0x41a82e
  41a86b:	jb     0x41a894
  41a86d:	mov    dh,0xaa
  41a86f:	call   FWORD PTR [edx]
  41a871:	loop   0x41a872
  41a873:	xchg   esi,eax
  41a874:	dec    ebx
  41a875:	call   0x3849:0x53ccf3f4
  41a87c:	xor    BYTE PTR [esi-0x75],bh
  41a87f:	xlat   BYTE PTR ds:[ebx]
  41a880:	js     0x41a835
  41a882:	(bad)  
  41a884:	iret   
  41a885:	scas   al,BYTE PTR es:[edi]
  41a886:	lods   eax,DWORD PTR ds:[esi]
  41a887:	mov    eax,ds:0x130ba12
  41a88c:	(bad)
  41a891:	add    edx,edi
  41a893:	lods   al,BYTE PTR ds:[esi]
  41a895:	(bad)
  41a899:	jge    0x41a897
  41a89b:	push   ss
  41a89c:	mov    ds:0x37383d95,al
  41a8a1:	xor    eax,0x99681fed
  41a8a6:	stos   BYTE PTR es:[edi],al
  41a8a7:	mov    al,0x76
  41a8a9:	aam    0x97
  41a8ab:	fcom   QWORD PTR [ebp+esi*8+0x21826b99]
  41a8b2:	aaa    
  41a8b3:	fcomp  DWORD PTR [ecx-0x67502467]
  41a8b9:	(bad)  
  41a8ba:	mov    esp,0x2768f0b9
  41a8bf:	jbe    0x41a8fa
  41a8c1:	iret   
  41a8c2:	inc    eax
  41a8c3:	cmc    
  41a8c4:	rcr    dl,1
  41a8c6:	shl    DWORD PTR [esi],cl
  41a8c8:	sbb    BYTE PTR [eax+0x223fa239],bh
  41a8ce:	xchg   ebp,eax
  41a8cf:	xchg   esp,eax
  41a8d0:	or     BYTE PTR [eax+0x2d94ff32],dl
  41a8d6:	xchg   BYTE PTR [edi-0x5fdb65f2],dl
  41a8dc:	xchg   esp,eax
  41a8dd:	arpl   bx,bp
  41a8df:	test   eax,0x4901e16a
  41a8e4:	xchg   ebx,eax
  41a8e5:	xchg   BYTE PTR [edx+0x1],ch
  41a8e8:	out    0x40,al
  41a8ea:	jg     0x41a954
  41a8ec:	push   0xef583fb2
  41a8f1:	stos   BYTE PTR es:[edi],al
  41a8f2:	add    DWORD PTR [esi-0x4ef4e2e8],0x52
  41a8f9:	mov    ebp,0x6ae73070
  41a8fe:	inc    esp
  41a8ff:	inc    esp
  41a900:	jne    0x41a883
  41a902:	(bad)  
  41a904:	dec    ebp
  41a905:	pop    eax
  41a906:	cld    
  41a907:	dec    edx
  41a908:	sbb    BYTE PTR [edi],ch
  41a90a:	shl    BYTE PTR [eax+0x50b2f1a2],cl
  41a910:	cmp    DWORD PTR [ebp-0x7512ddb3],0x50
  41a917:	arpl   WORD PTR [edi*1-0x69f10731],ax
  41a91e:	add    al,ch
  41a920:	and    BYTE PTR [edx+eax*2+0xd],ch
  41a924:	aaa    
  41a925:	(bad)  
  41a926:	retf   0x1ecd
  41a929:	(bad)  
  41a92a:	sti    
  41a92b:	fwait
  41a92c:	xchg   esp,eax
  41a92d:	jmp    0xf38b:0x12dfe830
  41a934:	in     al,dx
  41a935:	fwait
  41a936:	mov    eax,ds:0x3dd20644
  41a93b:	push   0x57e5b09a
  41a940:	jg     0x41a93e
  41a942:	xor    eax,0x1fe1b48
  41a947:	xor    bh,BYTE PTR [eax]
  41a949:	adc    al,bh
  41a94b:	mov    ah,0xbb
  41a94d:	(bad)  
  41a94f:	push   ebx
  41a950:	loopne 0x41a96c
  41a952:	push   ebx
  41a953:	inc    edi
  41a954:	popa   
  41a955:	xchg   edi,eax
  41a956:	mov    DWORD PTR [edx+0x12],eax
  41a959:	push   eax
  41a95a:	fsubr  QWORD PTR [edx]
  41a95c:	sub    bh,cl
  41a95e:	std    
  41a95f:	mov    dl,0xb
  41a961:	repz cmp eax,0x811e628e
  41a967:	pop    es
  41a968:	add    BYTE PTR [ebp-0x4724360a],dh
  41a96e:	lahf   
  41a96f:	gs adc bl,ah
  41a972:	dec    ebp
  41a973:	mov    edx,0xd9ce5a78
  41a978:	imul   eax,eax,0x5a69e853
  41a97e:	pop    ebp
  41a97f:	jo     0x41a99b
  41a981:	cmp    dh,BYTE PTR ds:0x568dc259
  41a987:	and    eax,0xd7262d28
  41a98c:	lods   eax,DWORD PTR ds:[esi]
  41a98d:	mov    WORD PTR [edx],gs
  41a98f:	xchg   esi,eax
  41a990:	and    DWORD PTR [esi-0xa],edx
  41a993:	js     0x41a9a4
  41a995:	fdivr  QWORD PTR [eax+edi*4]
  41a998:	lods   al,BYTE PTR ds:[esi]
  41a999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a99a:	add    DWORD PTR [edi],0x8
  41a99d:	adc    eax,0xf08ab792
  41a9a2:	leave  
  41a9a3:	imul   eax,DWORD PTR [eax-0x4142bfdd],0xffffffe3
  41a9aa:	cmp    al,0x38
  41a9ac:	rcr    bh,cl
  41a9ae:	pop    esi
  41a9af:	into   
  41a9b0:	out    dx,eax
  41a9b1:	stc    
  41a9b2:	icebp  
  41a9b3:	cdq    
  41a9b4:	push   ss
  41a9b5:	xor    BYTE PTR [ebp-0x6b3965d9],ch
  41a9bb:	aam    0xdf
  41a9bd:	push   edi
  41a9be:	sbb    ch,BYTE PTR [eax+ebx*8+0x40]
  41a9c2:	push   edx
  41a9c3:	sub    DWORD PTR [ecx-0x6d],edx
  41a9c6:	aaa    
  41a9c7:	and    BYTE PTR [eax],ch
  41a9c9:	and    eax,0x2727b565
  41a9ce:	or     BYTE PTR [edi],dh
  41a9d0:	loop   0x41a9cc
  41a9d2:	aam    0xbe
  41a9d4:	fild   DWORD PTR [esi+0x6b133ddb]
  41a9da:	sbb    cl,ch
  41a9dc:	sub    BYTE PTR [edx-0x52],dl
  41a9df:	adc    DWORD PTR [eax+ebx*4],esi
  41a9e2:	mov    edx,0xc6e0b569
  41a9e7:	jns    0x41aa00
  41a9e9:	mov    dh,al
  41a9eb:	sub    dh,BYTE PTR [ebx+0x1c9079e]
  41a9f1:	pop    ss
  41a9f2:	test   eax,0xeab9356f
  41a9f7:	sub    eax,0x26c3d80f
  41a9fc:	setp   bl
  41a9ff:	stos   BYTE PTR es:[edi],al
  41aa00:	les    edx,FWORD PTR [edi]
  41aa02:	sar    DWORD PTR [ebp+0xe513f4e],1
  41aa08:	inc    ecx
  41aa09:	add    al,0xb1
  41aa0b:	in     al,dx
  41aa0c:	or     BYTE PTR ds:0x2ffaca3,cl
  41aa12:	clc    
  41aa13:	add    cl,BYTE PTR ds:0xafe7ed6a
  41aa19:	sbb    al,BYTE PTR ds:0xc431b930
  41aa1f:	dec    esp
  41aa20:	or     al,BYTE PTR [edx+ebx*4+0x16bd6330]
  41aa27:	icebp  
  41aa28:	and    BYTE PTR [edx+0x212e7831],0xb4
  41aa2f:	pusha  
  41aa30:	loopne 0x41a9ff
  41aa32:	in     al,dx
  41aa33:	jne    0x41aa0b
  41aa35:	mov    DWORD PTR [edx],ebp
  41aa37:	xchg   edi,eax
  41aa38:	loopne 0x41aa9b
  41aa3a:	ror    bl,1
  41aa3c:	jmp    0x1a8ee645
  41aa41:	out    0xb,eax
  41aa43:	and    bl,ah
  41aa45:	mov    ebp,DWORD PTR [edx+0x24eeb82]
  41aa4b:	mov    ah,0x84
  41aa4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa4e:	xor    ebp,DWORD PTR [eax-0x7ad762ab]
  41aa54:	mov    bl,0x73
  41aa56:	pop    eax
  41aa57:	jns    0x41aa51
  41aa59:	int3   
  41aa5a:	fbstp  TBYTE PTR [eax-0x70d6b998]
  41aa60:	sbb    DWORD PTR [edx-0x7844f767],ebp
  41aa66:	pop    edi
  41aa67:	inc    eax
  41aa68:	test   al,0x8a
  41aa6a:	addr16 loope 0x41aa5b
  41aa6d:	sahf   
  41aa6e:	call   0x10e6:0x4ddb2e72
  41aa75:	mov    bh,BYTE PTR [eax-0x77264717]
  41aa7b:	into   
  41aa7c:	mov    bl,0xa9
  41aa7e:	das    
  41aa7f:	dec    ebp
  41aa80:	adc    al,0x3a
  41aa82:	ins    DWORD PTR es:[edi],dx
  41aa83:	bound  eax,QWORD PTR [ebx+eiz*2-0x15ea201c]
  41aa8a:	or     BYTE PTR [eax+edi*8-0x3a],0x1d
  41aa8f:	js     0x41aa2c
  41aa91:	sub    ebx,ebp
  41aa93:	stos   BYTE PTR es:[edi],al
  41aa94:	mov    di,WORD PTR [edx]
  41aa97:	adc    al,0xd4
  41aa99:	rol    DWORD PTR [ebp-0x17],cl
  41aa9c:	leave  
  41aa9d:	in     al,dx
  41aa9e:	sbb    BYTE PTR [ecx+esi*8-0x6b],bl
  41aaa2:	repnz loope 0x41aaf2
  41aaa5:	retf   
  41aaa6:	cmc    
  41aaa7:	cmp    BYTE PTR [eax+0x8],ch
  41aaaa:	xchg   ebp,eax
  41aaab:	mov    dl,0x80
  41aaad:	daa    
  41aaae:	and    DWORD PTR [esi-0x36],edi
  41aab1:	dec    edx
  41aab2:	pop    ss
  41aab3:	call   0xac4a3c8c
  41aab8:	daa    
  41aab9:	jno    0x41aa94
  41aabb:	xor    al,0x58
  41aabd:	int3   
  41aabe:	mov    edx,0xee8529bb
  41aac3:	inc    eax
  41aac4:	push   ebp
  41aac5:	sub    al,0xcc
  41aac7:	xchg   DWORD PTR [edi],ebp
  41aac9:	add    DWORD PTR [esp+eax*1+0x4a],0xdabb4964
  41aad1:	jb     0x41ab45
  41aad3:	loope  0x41ab23
  41aad5:	in     eax,dx
  41aad6:	imul   edx,DWORD PTR [ebx+esi*4],0x26
  41aada:	cmp    eax,0xf9ca17a2
  41aadf:	xor    eax,0x8c219915
  41aae4:	popa   
  41aae5:	std    
  41aae6:	in     eax,dx
  41aae7:	jnp    0x41aa91
  41aae9:	stos   DWORD PTR es:[edi],eax
  41aaea:	enter  0x70bd,0x2
  41aaee:	rol    BYTE PTR [esi-0x4f6caad3],0x1b
  41aaf5:	push   0x77
  41aaf7:	sub    DWORD PTR [ebp-0x3c],0xa8910e84
  41aafe:	xchg   eax,esi
  41ab00:	xchg   ecx,eax
  41ab01:	jns    0x41aaad
  41ab03:	mov    al,ds:0xbb3458cb
  41ab08:	cmp    BYTE PTR [ebp+esi*1-0x6e],bl
  41ab0c:	lds    esi,FWORD PTR [edx]
  41ab0e:	push   ds
  41ab0f:	cmp    al,0x2e
  41ab11:	fs push ebp
  41ab13:	xchg   edi,eax
  41ab14:	mov    al,0x2d
  41ab16:	cli    
  41ab17:	rcr    BYTE PTR [eax-0x5d],0x24
  41ab1b:	mov    ch,0xc1
  41ab1d:	shr    BYTE PTR [esi-0x72],0x48
  41ab21:	mov    esp,0x8318383a
  41ab26:	mov    al,0xbd
  41ab28:	mov    BYTE PTR [ebx],bl
  41ab2a:	mov    WORD PTR [esi+0xac223d5],?
  41ab30:	sbb    edi,DWORD PTR [edx+0x26]
  41ab33:	fidivr DWORD PTR [edi+0x567e71f2]
  41ab39:	inc    esp
  41ab3a:	pop    eax
  41ab3b:	daa    
  41ab3c:	pop    esp
  41ab3d:	push   0xbc75f18b
  41ab42:	sbb    dh,BYTE PTR [edi]
  41ab44:	(bad)  
  41ab45:	xchg   ebx,eax
  41ab46:	mov    edi,0xb93913b5
  41ab4b:	pop    edi
  41ab4c:	sbb    bl,ch
  41ab4e:	mov    eax,ds:0x10eb5eb0
  41ab53:	stos   BYTE PTR es:[edi],al
  41ab54:	fiadd  WORD PTR [eax+0x6d3f063a]
  41ab5a:	lahf   
  41ab5b:	sti    
  41ab5c:	push   ebx
  41ab5d:	out    dx,eax
  41ab5e:	cmp    al,0x38
  41ab60:	inc    eax
  41ab61:	push   es
  41ab62:	mov    BYTE PTR [edi],ah
  41ab64:	call   0x41f552b5
  41ab69:	dec    eax
  41ab6a:	mov    ecx,0xba4a0c54
  41ab6f:	xor    BYTE PTR [ebp-0x50],dh
  41ab72:	ret    
  41ab73:	dec    esi
  41ab74:	cmp    ebp,DWORD PTR ds:0x9cae9c6b
  41ab7a:	pop    edx
  41ab7b:	popa   
  41ab7c:	push   esi
  41ab7d:	repz add esi,DWORD PTR [ebp+0xe]
  41ab81:	or     ah,dh
  41ab83:	je     0x41ab6a
  41ab85:	push   0x685d38fa
  41ab8a:	pop    ecx
  41ab8b:	and    bh,bh
  41ab8d:	repnz or al,0x67
  41ab90:	out    0x80,eax
  41ab92:	or     ah,BYTE PTR [edx-0x76]
  41ab95:	repz push edi
  41ab97:	dec    ebp
  41ab98:	imul   edx,DWORD PTR [ebp*8+0x7a8e469c],0x7821ed58
  41aba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aba4:	stc    
  41aba5:	(bad)
  41aba8:	pop    esi
  41aba9:	xchg   DWORD PTR [edx-0x715f772],eax
  41abaf:	std    
  41abb0:	test   eax,0x63e0d06b
  41abb5:	jmp    0xcd0a:0x91246b4f
  41abbc:	ss and al,0x38
  41abbf:	xchg   ah,ah
  41abc1:	or     dl,BYTE PTR [edi+0xe159206]
  41abc7:	(bad)  
  41abc8:	xlat   BYTE PTR ds:[ebx]
  41abc9:	mov    BYTE PTR [eax],al
  41abcb:	dec    ecx
  41abcc:	mov    eax,0x7b9c78b
  41abd1:	iret   
  41abd2:	daa    
  41abd3:	mov    esp,0xc1ac73e0
  41abd8:	push   es
  41abd9:	fdivr  DWORD PTR ds:0x9a69558
  41abdf:	cld    
  41abe0:	clc    
  41abe1:	ror    DWORD PTR [edx],0xbd
  41abe4:	jp     0x41abf9
  41abe6:	sahf   
  41abe7:	nop
  41abe8:	cld    
  41abe9:	jns    0x41ab7f
  41abeb:	mov    ebx,0x6bf3c06
  41abf0:	adc    al,0xa6
  41abf2:	jnp    0x41ac47
  41abf4:	shr    DWORD PTR [ebx+0x2c90d873],0xd6
  41abfb:	ja     0x41ac1d
  41abfd:	xchg   DWORD PTR [edx+0x57b43ed8],ecx
  41ac03:	test   eax,0x8833d5e0
  41ac08:	push   ebp
  41ac0a:	sub    DWORD PTR [ebx],esi
  41ac0c:	or     BYTE PTR [edi-0x1a],ch
  41ac0f:	mov    eax,0x21eed715
  41ac14:	add    esp,ebx
  41ac16:	mov    edx,0x5d1a190a
  41ac1b:	dec    ebp
  41ac1c:	in     al,0x6d
  41ac1e:	inc    ebp
  41ac1f:	push   edi
  41ac20:	pop    eax
  41ac21:	mov    eax,ds:0x6920bc21
  41ac26:	outs   dx,BYTE PTR ds:[esi]
  41ac27:	dec    ebx
  41ac28:	push   0x4c7b4f25
  41ac2d:	imul   ebx,edx,0x3f
  41ac30:	sbb    dl,cl
  41ac32:	loop   0x41ac5b
  41ac34:	dec    ebp
  41ac35:	shr    DWORD PTR [eax+0x2b],cl
  41ac38:	js     0x41ac45
  41ac3a:	stos   DWORD PTR es:[edi],eax
  41ac3b:	mov    bh,0xf3
  41ac3d:	and    DWORD PTR [edi],ebx
  41ac3f:	ficomp WORD PTR [ecx]
  41ac41:	sub    ah,BYTE PTR [ebp-0x53]
  41ac44:	fbstp  TBYTE PTR [edx+0x36]
  41ac47:	jnp    0x41abda
  41ac49:	or     al,0x9a
  41ac4b:	(bad)  
  41ac4c:	mov    ebp,0xecff1a81
  41ac51:	je     0x41abfd
  41ac53:	and    eax,0x5836bd47
  41ac58:	in     al,0xcb
  41ac5a:	out    dx,eax
  41ac5b:	sub    DWORD PTR [edi+eax*1-0x43ce9fc7],ebx
  41ac62:	xor    edi,DWORD PTR [eax+0x6108fb72]
  41ac68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac69:	ds xchg esi,eax
  41ac6b:	mov    ebp,0x783a25ae
  41ac70:	call   0x2a8a:0xeb5c2caa
  41ac77:	cmp    eax,0x3637ab7c
  41ac7c:	in     eax,0x4c
  41ac7e:	adc    eax,0x48a2728e
  41ac83:	les    edx,FWORD PTR [edi]
  41ac85:	gs mov edx,0xba830695
  41ac8b:	pop    ds
  41ac8c:	or     ebp,DWORD PTR [edx-0x1f]
  41ac8f:	in     al,dx
  41ac90:	sbb    bh,BYTE PTR [edi-0x17]
  41ac93:	mov    ecx,0xf5927a43
  41ac98:	cmp    BYTE PTR [ecx-0x46c64fe0],cl
  41ac9e:	in     al,dx
  41ac9f:	mov    ebp,0x2401ea11
  41aca4:	sbb    eax,0xd291d30f
  41aca9:	ret    
  41acaa:	in     eax,dx
  41acab:	add    edi,eax
  41acad:	mov    ecx,0x8965b7f1
  41acb2:	adc    cl,BYTE PTR [esi]
  41acb4:	punpckhdq mm4,QWORD PTR [edi-0x65175da8]
  41acbb:	aam    0xe5
  41acbd:	add    bh,BYTE PTR [ebx+0x7a7aec6b]
  41acc3:	(bad)  
  41acc5:	fbstp  TBYTE PTR ds:0xd98a80ad
  41accb:	pop    edi
  41accc:	push   eax
  41accd:	mov    bh,0x6
  41accf:	inc    ebx
  41acd0:	mov    edx,0x8f5a3cf5
  41acd5:	jo     0x41ad21
  41acd7:	xchg   edx,eax
  41acd8:	adc    DWORD PTR [esi+0x4faabed7],ebp
  41acde:	shr    DWORD PTR ds:0xe14e4a14,cl
  41ace4:	hlt    
  41ace5:	arpl   si,bx
  41ace7:	push   ebp
  41ace8:	cmp    edi,DWORD PTR [ebx+0x21]
  41aceb:	jle    0x41ad67
  41aced:	mov    cl,BYTE PTR [edx]
  41acef:	push   0xffffffa2
  41acf1:	sti    
  41acf2:	dec    edi
  41acf3:	nop
  41acf4:	push   ds
  41acf5:	or     esi,DWORD PTR [ecx]
  41acf7:	test   al,0x55
  41acf9:	sbb    BYTE PTR [ebx-0x4f],al
  41acfc:	ror    DWORD PTR [edx-0x7f613c5c],0xda
  41ad03:	sar    BYTE PTR [edi],1
  41ad05:	in     eax,0xc9
  41ad07:	inc    esi
  41ad08:	mov    fs,eax
  41ad0a:	ds js  0x41ad37
  41ad0d:	xchg   edi,eax
  41ad0e:	iret   
  41ad0f:	jp     0x41ad83
  41ad11:	aaa    
  41ad12:	xor    eax,0xe80b00b1
  41ad17:	cmp    ah,bh
  41ad19:	pop    edx
  41ad1a:	xor    DWORD PTR [ecx+0x5c],edi
  41ad1d:	cli    
  41ad1e:	enter  0x511d,0x69
  41ad22:	jl     0x41ad7c
  41ad24:	cmp    al,0x51
  41ad26:	inc    ebx
  41ad27:	cmp    dl,dh
  41ad29:	xchg   edx,eax
  41ad2a:	dec    ecx
  41ad2b:	sub    BYTE PTR [eax],dl
  41ad2d:	ret    0x4ea8
  41ad30:	sbb    BYTE PTR ss:[eax+ebx*1],bh
  41ad34:	(bad)  
  41ad35:	rcr    BYTE PTR [edx-0x156b87b8],1
  41ad3b:	shr    esp,0x3e
  41ad3e:	jb     0x41ad33
  41ad40:	jmp    0x898a:0xe0bf3ba1
  41ad47:	aad    0xd4
  41ad49:	lock inc ebp
  41ad4b:	pushf  
  41ad4c:	dec    edi
  41ad4d:	call   0x8739b62c
  41ad52:	push   edx
  41ad53:	mov    bl,0x2e
  41ad55:	mov    dh,0xe2
  41ad57:	sbb    DWORD PTR [edi+0x56ae4d48],ecx
  41ad5d:	dec    ebp
  41ad5e:	cmp    ebx,DWORD PTR [eax-0x77fb7b30]
  41ad64:	js     0x41adc7
  41ad66:	ret    0xb4ad
  41ad69:	push   cs
  41ad6a:	cld    
  41ad6b:	bound  ebx,QWORD PTR [ecx]
  41ad6d:	ficomp DWORD PTR [ebp-0x5e]
  41ad70:	fld    TBYTE PTR [esi+0x3abca10c]
  41ad76:	or     eax,0xc581b857
  41ad7b:	lods   al,BYTE PTR ds:[esi]
  41ad7c:	jno    0x41ad79
  41ad7e:	add    al,0x3c
  41ad80:	or     BYTE PTR [ebp+0x44],bh
  41ad83:	push   ds
  41ad84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad85:	outs   dx,BYTE PTR ds:[esi]
  41ad86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad87:	in     eax,dx
  41ad88:	mov    esi,0xc9151e80
  41ad8d:	hlt    
  41ad8e:	aaa    
  41ad8f:	mov    al,0xa9
  41ad91:	lea    edi,[edx+0x3d6d2f74]
  41ad97:	and    ebp,DWORD PTR [eax+esi*8-0x5d67a03e]
  41ad9e:	ret    
  41ad9f:	mov    bl,0x0
  41ada1:	push   ds
  41ada2:	sar    BYTE PTR [ebx-0x2],0xbb
  41ada6:	jmp    0x3afb:0xf35a11f0
  41adad:	int3   
  41adae:	adc    ebx,DWORD PTR [ecx-0x3828f548]
  41adb4:	sub    al,al
  41adb6:	stos   BYTE PTR es:[edi],al
  41adb7:	mov    ecx,0x85071600
  41adbc:	adc    ebx,DWORD PTR [edx-0x47]
  41adbf:	sbb    ah,BYTE PTR [edx]
  41adc1:	inc    ecx
  41adc2:	(bad)  
  41adc3:	outs   dx,DWORD PTR ds:[esi]
  41adc4:	push   es
  41adc5:	inc    esp
  41adc6:	fs ret 0x8945
  41adca:	sbb    ch,BYTE PTR [edx]
  41adcc:	je     0x41ae02
  41adce:	hlt    
  41adcf:	int3   
  41add0:	push   ss
  41add1:	adc    eax,esi
  41add3:	outs   dx,BYTE PTR ds:[esi]
  41add4:	loope  0x41adbf
  41add6:	dec    edx
  41add7:	or     BYTE PTR [esi-0x26],bh
  41adda:	(bad)  
  41addb:	outs   dx,DWORD PTR ds:[esi]
  41addc:	ror    BYTE PTR [edx+ebp*4+0x7a87654],1
  41ade3:	mov    esp,0x58367269
  41ade8:	xchg   ebx,eax
  41ade9:	test   DWORD PTR [eax],esp
  41adeb:	push   0xc7ea69b8
  41adf0:	(bad)  
  41adf1:	push   ds
  41adf2:	js     0x41ad94
  41adf4:	mov    ah,0xb9
  41adf6:	add    DWORD PTR [edx-0x47b65840],edi
  41adfc:	(bad)  
  41adfe:	jo     0x41ae04
  41ae00:	in     eax,dx
  41ae01:	pop    es
  41ae02:	icebp  
  41ae03:	mov    ah,0x9b
  41ae05:	outs   dx,DWORD PTR ds:[esi]
  41ae06:	pushf  
  41ae07:	sub    al,0x5c
  41ae09:	and    eax,0xd6310835
  41ae0e:	mov    cl,0xe6
  41ae10:	outs   dx,BYTE PTR ds:[esi]
  41ae11:	sub    BYTE PTR [eax+0x6d],0xc2
  41ae15:	call   0x1a1a:0x89bdf457
  41ae1c:	shl    DWORD PTR [ebx],1
  41ae1e:	cld    
  41ae1f:	adc    DWORD PTR [ecx-0x70],ecx
  41ae22:	cmp    al,0x68
  41ae24:	(bad)  
  41ae25:	scas   eax,DWORD PTR es:[edi]
  41ae26:	push   ds
  41ae27:	idiv   DWORD PTR [eax+0x7fb27520]
  41ae2d:	in     al,dx
  41ae2e:	mov    eax,0x26ba1866
  41ae33:	dec    ebp
  41ae34:	icebp  
  41ae35:	add    al,0xa0
  41ae37:	rcr    BYTE PTR [ecx],1
  41ae39:	addr16 push ds
  41ae3b:	mov    edi,0x7daa8252
  41ae40:	xchg   ebx,eax
  41ae41:	push   edx
  41ae42:	or     esp,DWORD PTR [edi+0x28]
  41ae45:	lods   al,BYTE PTR ds:[esi]
  41ae46:	dec    eax
  41ae47:	pop    eax
  41ae48:	outs   dx,BYTE PTR ds:[esi]
  41ae49:	out    dx,al
  41ae4a:	mov    ah,0x1c
  41ae4c:	or     dh,bh
  41ae4e:	dec    ebx
  41ae4f:	lods   al,BYTE PTR ds:[esi]
  41ae50:	jecxz  0x41ae0c
  41ae52:	les    ebx,FWORD PTR [eax-0x40136c2c]
  41ae58:	jp     0x41ae06
  41ae5a:	xor    DWORD PTR [eax-0x15],ecx
  41ae5d:	pop    esi
  41ae5e:	inc    ecx
  41ae5f:	sub    cl,BYTE PTR [edi-0x1f]
  41ae62:	ss cdq 
  41ae64:	adc    ah,BYTE PTR [eax]
  41ae66:	outs   dx,DWORD PTR ds:[esi]
  41ae67:	fwait
  41ae68:	jg     0x41ae07
  41ae6a:	add    al,0x31
  41ae6c:	adc    ebp,DWORD PTR [edx-0x42]
  41ae6f:	or     DWORD PTR [edx-0x3872abad],ecx
  41ae75:	test   DWORD PTR [ecx],edi
  41ae77:	inc    ebx
  41ae78:	(bad)  
  41ae79:	out    0xac,al
  41ae7b:	xchg   DWORD PTR [edi+eiz*1+0x7b817831],ecx
  41ae82:	jae    0x41aee2
  41ae84:	inc    ecx
  41ae85:	sub    eax,0x84654834
  41ae8a:	fidivr WORD PTR [ecx]
  41ae8c:	enter  0xd6a0,0xad
  41ae90:	dec    ecx
  41ae91:	imul   BYTE PTR [edx+0x1c8e4e03]
  41ae97:	jne    0x41ae81
  41ae99:	popa   
  41ae9a:	adc    al,0xae
  41ae9c:	xor    ah,dh
  41ae9e:	mov    esi,0xff47e8a6
  41aea3:	lods   al,BYTE PTR ds:[esi]
  41aea4:	sub    BYTE PTR [esi-0x45e5720e],0xad
  41aeab:	add    al,0x3f
  41aead:	out    0xd5,al
  41aeaf:	sar    edx,cl
  41aeb1:	xchg   esi,eax
  41aeb2:	int    0x57
  41aeb4:	ror    DWORD PTR [ebx+0x1c29196a],cl
  41aeba:	mov    al,0x3d
  41aebc:	jns    0x41ae84
  41aebe:	xor    al,0xf8
  41aec0:	test   DWORD PTR [ebx],esp
  41aec2:	dec    esi
  41aec3:	retf   0x5c18
  41aec6:	cmp    BYTE PTR [ebx-0x4ce87616],bh
  41aecc:	sbb    edi,DWORD PTR [edx-0x4d]
  41aecf:	loopne 0x41aec9
  41aed1:	mov    eax,0x5b8f78da
  41aed6:	adc    eax,0x18695858
  41aedb:	mov    ch,0xc
  41aedd:	sbb    eax,0xbf3ebf7
  41aee2:	aas    
  41aee3:	add    al,0x25
  41aee5:	and    eax,0x5d9fbf23
  41aeea:	sub    ah,BYTE PTR [ecx]
  41aeec:	jne    0x41aef4
  41aeee:	dec    eax
  41aeef:	cld    
  41aef0:	scas   eax,DWORD PTR es:[edi]
  41aef1:	clc    
  41aef2:	jl     0x41ae95
  41aef4:	sbb    BYTE PTR [edx],ah
  41aef6:	das    
  41aef7:	mov    ds:0x6689f275,eax
  41aefc:	push   esp
  41aefd:	lods   eax,DWORD PTR ds:[esi]
  41aefe:	aas    
  41aeff:	js     0x41ae9d
  41af01:	push   0x5ad690b6
  41af06:	or     BYTE PTR [ecx],dh
  41af08:	les    ecx,FWORD PTR [ecx+0x2241f36a]
  41af0e:	cld    
  41af0f:	jmp    0xca10:0x894e6558
  41af16:	mov    DWORD PTR [ecx+0x27],edx
  41af19:	clc    
  41af1a:	imul   esi,DWORD PTR [eax],0xd80f31d8
  41af20:	mov    bl,0x58
  41af22:	cli    
  41af23:	in     eax,dx
  41af24:	aam    0xd9
  41af26:	mov    ecx,ebp
  41af28:	mov    bh,0xa2
  41af2a:	xor    al,0xba
  41af2c:	xchg   ebx,eax
  41af2d:	dec    ebx
  41af2e:	xor    bh,BYTE PTR [eax+0x3d]
  41af31:	arpl   WORD PTR [eax],dx
  41af33:	(bad)  
  41af34:	shl    DWORD PTR cs:[ebp+edx*1+0x74],1
  41af39:	fidiv  WORD PTR [ebx+0x7a86f834]
  41af3f:	imul   edx,DWORD PTR [eax+0x46f1d1bd],0xffffff8c
  41af46:	dec    edx
  41af47:	sub    ah,BYTE PTR [esi+0xf9d30ff]
  41af4d:	shl    BYTE PTR [ecx],0xc8
  41af50:	xor    eax,0xc8041707
  41af55:	xchg   esp,eax
  41af57:	mov    bh,0xf9
  41af59:	jg     0x41af1d
  41af5b:	add    BYTE PTR ds:0x3e7c80ba,cl
  41af61:	sub    al,BYTE PTR [ecx]
  41af63:	test   BYTE PTR [edi+0x29],dl
  41af66:	dec    eax
  41af67:	mov    ch,0x1e
  41af69:	test   edx,ecx
  41af6b:	lahf   
  41af6c:	sbb    BYTE PTR [eax+0x59d111e],dl
  41af72:	ds dec eax
  41af74:	sbb    bl,BYTE PTR [eax]
  41af76:	fcomp  DWORD PTR [eax-0x78]
  41af79:	and    DWORD PTR [ebx],0xffffffb4
  41af7c:	or     DWORD PTR [eax-0x172e7a8e],0x2b5abe61
  41af86:	xor    ch,BYTE PTR [eax]
  41af88:	rcl    esi,0x48
  41af8b:	push   edx
  41af8c:	dec    eax
  41af8d:	ror    ch,cl
  41af8f:	mov    ch,0x9
  41af91:	and    ch,BYTE PTR [esi]
  41af93:	ret    0xba1b
  41af96:	jne    0x41afb2
  41af98:	ss adc eax,0x5cdc0e5
  41af9e:	outs   dx,BYTE PTR ds:[esi]
  41af9f:	int3   
  41afa0:	add    DWORD PTR [edx-0x3f4069a6],ecx
  41afa6:	rcr    BYTE PTR [esi],cl
  41afa8:	adc    BYTE PTR [edx+0xa2ec02e],bl
  41afae:	enter  0x2070,0x58
  41afb2:	pusha  
  41afb3:	cmp    DWORD PTR [edi],0x619cba83
  41afb9:	mov    bl,0x77
  41afbb:	ret    
  41afbc:	iret   
  41afbd:	stos   DWORD PTR es:[edi],eax
  41afbe:	fidivr DWORD PTR [edi+0x1a]
  41afc1:	sbb    al,ch
  41afc3:	loopne 0x41af85
  41afc5:	cld    
  41afc6:	les    edi,FWORD PTR [esi+0x38]
  41afc9:	ss stos BYTE PTR es:[edi],al
  41afcb:	lods   al,BYTE PTR ds:[esi]
  41afcc:	xchg   ebp,eax
  41afcd:	cmp    al,0xb2
  41afcf:	fmulp  st(6),st
  41afd1:	dec    ebx
  41afd2:	ins    DWORD PTR es:[edi],dx
  41afd3:	or     al,0xb3
  41afd5:	fwait
  41afd6:	push   ds
  41afd7:	mov    al,ds:0x383127e1
  41afdc:	in     al,dx
  41afdd:	enter  0x39c8,0xf8
  41afe1:	test   BYTE PTR [eax],ch
  41afe3:	mov    al,0x7e
  41afe5:	sub    DWORD PTR [edi-0x7ae86f0b],eax
  41afeb:	pop    es
  41afec:	in     al,dx
  41afed:	cmp    DWORD PTR ds:0xb096ed58,edi
  41aff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aff4:	push   0x1cb72336
  41aff9:	push   edx
  41affa:	xchg   edi,eax
  41affb:	or     BYTE PTR [ecx],dl
  41affd:	call   0x952b:0xeb2b6a63
  41b004:	daa    
  41b005:	or     DWORD PTR [edi+0x1],0xffffff9f
  41b009:	or     edx,0x3f224211
  41b00f:	scas   al,BYTE PTR es:[edi]
  41b010:	xor    ebp,DWORD PTR [ecx]
  41b012:	mov    ebx,0x3a8a3fa2
  41b017:	test   eax,0xa64aa884
  41b01c:	aaa    
  41b01d:	cdq    
  41b01e:	fidivr DWORD PTR [edx-0x4b23717b]
  41b024:	push   ss
  41b025:	mov    bl,al
  41b027:	cmc    
  41b028:	push   ecx
  41b029:	jbe    0x41b045
  41b02b:	ins    BYTE PTR es:[edi],dx
  41b02c:	push   esi
  41b02d:	jmp    0x8d5129ef
  41b032:	cdq    
  41b033:	and    DWORD PTR [edi+eax*1],esi
  41b036:	(bad)  
  41b037:	in     al,0x6
  41b039:	sub    DWORD PTR [esi+0x3c087f67],0x68
  41b040:	out    dx,al
  41b041:	pop    ebp
  41b042:	js     0x41b02e
  41b044:	sub    BYTE PTR [eax],dh
  41b046:	loope  0x41affa
  41b048:	int3   
  41b049:	sbb    DWORD PTR [edx-0x75a17163],ecx
  41b04f:	and    cl,BYTE PTR [eax]
  41b051:	jns    0x41afe6
  41b053:	mov    eax,0x5d633801
  41b058:	das    
  41b059:	sbb    al,0xb4
  41b05b:	push   ds
  41b05c:	ret    0xddd0
  41b05f:	scas   al,BYTE PTR es:[edi]
  41b060:	mov    BYTE PTR ss:[edi-0x35],ah
  41b064:	mov    dh,0x5c
  41b066:	xor    bl,BYTE PTR [eax-0x20]
  41b069:	mov    ch,0x4e
  41b06b:	mov    ah,0xa8
  41b06d:	inc    ebp
  41b06e:	div    BYTE PTR [ecx-0x31a6667d]
  41b074:	xor    bh,BYTE PTR ds:0xb26d2a
  41b07b:	out    dx,al
  41b07c:	fisubr DWORD PTR ds:0x260f03c
  41b082:	mov    bl,BYTE PTR ds:0x5e81461c
  41b088:	mov    BYTE PTR [edi+0x27],bh
  41b08b:	int3   
  41b08c:	ja     0x41b0d5
  41b08e:	cmp    al,0x80
  41b090:	jo     0x41b098
  41b092:	hlt    
  41b093:	adc    edx,DWORD PTR [eax+0x1b]
  41b096:	mov    esi,0x371830fe
  41b09b:	mov    ch,0x18
  41b09d:	(bad)  
  41b09e:	jmp    0x7da03f5a
  41b0a3:	enter  0xbace,0xe0
  41b0a7:	mov    ch,0x48
  41b0a9:	test   bl,ah
  41b0ab:	xchg   edi,eax
  41b0ac:	push   ebx
  41b0ad:	aaa    
  41b0ae:	cmp    al,0x50
  41b0b0:	or     cl,dl
  41b0b2:	into   
  41b0b3:	mov    bl,0xae
  41b0b5:	pop    es
  41b0b6:	adc    esi,ebx
  41b0b8:	in     al,dx
  41b0b9:	cli    
  41b0ba:	retf   0x583c
  41b0bd:	in     al,dx
  41b0be:	cmp    ebp,DWORD PTR [edi]
  41b0c0:	adc    dl,BYTE PTR ds:0xee98adf0
  41b0c6:	xor    ch,BYTE PTR [esi-0x29dcd7fc]
  41b0cc:	jp     0x41b138
  41b0ce:	cs jl  0x41b0b0
  41b0d1:	jmp    0xb10f:0x422b8834
  41b0d8:	pop    eax
  41b0d9:	cmp    al,0x49
  41b0db:	mov    edx,0xeb8aeba6
  41b0e0:	add    BYTE PTR [ebx+edi*1+0x56],bl
  41b0e4:	dec    esp
  41b0e5:	mov    al,0x12
  41b0e7:	cs lock mov al,0x31
  41b0eb:	cld    
  41b0ec:	fldenv [esi-0x77]
  41b0ef:	shl    BYTE PTR [ebp-0x72],cl
  41b0f2:	retf   0x1a96
  41b0f5:	adc    eax,0x27c4442
  41b0fa:	xor    DWORD PTR [eax-0x44],ebx
  41b0fd:	mov    eax,0x2ed8c628
  41b102:	fsubr  QWORD PTR [esi+0x7a830695]
  41b108:	adc    ebx,edx
  41b10a:	sbb    BYTE PTR [eax-0x69],0x1b
  41b10e:	xlat   BYTE PTR ds:[ebx]
  41b10f:	hlt    
  41b110:	dec    esp
  41b111:	add    al,0x57
  41b113:	fild   QWORD PTR [edi+0x20073a87]
  41b119:	mov    edx,0xab40d76c
  41b11e:	ds push 0x343bc005
  41b124:	cmp    BYTE PTR ds:0x8d4bb9ad,ch
  41b12a:	push   ebp
  41b12b:	sbb    eax,0x21e30d06
  41b130:	enter  0x6b64,0xdd
  41b134:	daa    
  41b135:	(bad)  
  41b136:	fsubr  st,st(3)
  41b138:	dec    eax
  41b139:	and    BYTE PTR [esi+ebp*4+0x3],dh
  41b13d:	sub    al,al
  41b13f:	xor    eax,0x6e2d5c06
  41b144:	(bad)  
  41b146:	adc    BYTE PTR [edi+edx*4-0x74],0xd0
  41b14b:	sahf   
  41b14c:	sti    
  41b14d:	mov    BYTE PTR [edx],bl
  41b14f:	or     ah,BYTE PTR ds:0xfea27adf
  41b155:	icebp  
  41b156:	cmp    ecx,DWORD PTR [eax]
  41b158:	out    dx,eax
  41b159:	(bad)  
  41b15a:	mov    ebx,DWORD PTR ds:[esi+0xc7e77c1]
  41b161:	retf   0x32b9
  41b164:	jno    0x41b109
  41b166:	push   DWORD PTR [ebx]
  41b168:	cmp    eax,0x2ea57702
  41b16d:	inc    ecx
  41b16e:	cli    
  41b16f:	or     al,0xc8
  41b171:	add    ebp,DWORD PTR [esi-0x29601e54]
  41b177:	pop    es
  41b178:	scas   eax,DWORD PTR es:[edi]
  41b179:	adc    eax,0xc41b9528
  41b17e:	aas    
  41b17f:	fs out 0x49,eax
  41b182:	popf   
  41b183:	mov    dl,0x8b
  41b185:	sub    al,BYTE PTR [ebp+0x61d54d20]
  41b18b:	adc    bh,cl
  41b18d:	and    esi,DWORD PTR [edx]
  41b18f:	loope  0x41b152
  41b191:	sahf   
  41b192:	clc    
  41b193:	les    eax,FWORD PTR [ebp+0x1b]
  41b196:	mov    dl,dh
  41b198:	mov    fs,WORD PTR [edx+0x31]
  41b19b:	push   eax
  41b19c:	jp     0xe450caae
  41b1a2:	aad    0x95
  41b1a4:	test   eax,0x32e2eef6
  41b1a9:	test   dl,cl
  41b1ab:	push   esp
  41b1ac:	mov    BYTE PTR [ebx-0x2a],cl
  41b1af:	imul   edi,DWORD PTR [esi],0xffffffb5
  41b1b2:	int3   
  41b1b3:	int3   
  41b1b4:	hlt    
  41b1b5:	and    ah,ch
  41b1b7:	jns    0x41b1a8
  41b1b9:	mov    edx,DWORD PTR [edx]
  41b1bb:	mov    eax,0x9cc66ef3
  41b1c0:	jno    0x41b14c
  41b1c2:	push   0x77
  41b1c4:	scas   eax,DWORD PTR es:[edi]
  41b1c5:	sub    al,BYTE PTR [esi]
  41b1c7:	cmp    BYTE PTR [ebp+0x4],ch
  41b1ca:	mov    ds:0x770f84af,al
  41b1cf:	rcr    BYTE PTR [esi+0x6f453777],0xb8
  41b1d6:	mov    cs,ebp
  41b1d8:	call   0xd0f0dc0a
  41b1dd:	ret    
  41b1de:	sub    ah,BYTE PTR [eax-0x57b2b1c4]
  41b1e4:	enter  0xd7eb,0x61
  41b1e8:	nop
  41b1e9:	aaa    
  41b1ea:	mov    cl,0xb9
  41b1ec:	pop    eax
  41b1ed:	mov    WORD PTR [ecx],cs
  41b1ef:	mov    cl,0xbf
  41b1f1:	pop    ecx
  41b1f2:	(bad)  
  41b1f3:	mov    BYTE PTR [edx],dl
  41b1f5:	or     ch,BYTE PTR [esp+edx*4]
  41b1f8:	lds    ecx,FWORD PTR [eax-0xedca51c]
  41b1fe:	mov    eax,ds:0xc0cf9b95
  41b203:	lahf   
  41b204:	xor    al,BYTE PTR [ebx]
  41b206:	xor    DWORD PTR [eax-0x15],ecx
  41b209:	or     al,BYTE PTR [ebp+0x53]
  41b20c:	aam    0x63
  41b20e:	es pop ds
  41b210:	ins    BYTE PTR es:[edi],dx
  41b211:	and    al,0x3a
  41b213:	mov    cl,0x15
  41b215:	in     al,0x35
  41b217:	add    bh,cl
  41b219:	test   edx,edi
  41b21b:	mov    al,ds:0x3b8cf6f6
  41b220:	jo     0x41b278
  41b222:	inc    edx
  41b223:	test   al,0xad
  41b225:	out    0xec,eax
  41b227:	push   ds
  41b228:	push   edx
  41b229:	pushf  
  41b22a:	mov    esp,0xaa754828
  41b22f:	test   ebx,edi
  41b231:	xor    al,0x33
  41b233:	mov    bl,0x91
  41b235:	dec    eax
  41b236:	inc    esp
  41b237:	sub    eax,0x6cb661dc
  41b23c:	push   ss
  41b23d:	lea    edi,[edx-0x58]
  41b240:	mov    eax,0x88cabd57
  41b245:	addr16 js 0x41b1f4
  41b248:	mov    dh,BYTE PTR [esi+0x41]
  41b24b:	dec    ebx
  41b24c:	retf   0x8d2a
  41b24f:	(bad)  
  41b250:	icebp  
  41b251:	push   0x461a473c
  41b256:	mov    ds:0x2f5f2b7c,al
  41b25b:	(bad)  
  41b25c:	out    dx,eax
  41b25d:	or     DWORD PTR [edx],0xffffff86
  41b260:	data16 data16 jns 0x41b296
  41b264:	fcmovu st,st(5)
  41b266:	mov    eax,ds:0x3fdae5ce
  41b26b:	sbb    ch,bh
  41b26d:	test   BYTE PTR [bx+si],al
  41b270:	push   0xffffff85
  41b272:	mov    dh,BYTE PTR [ebx-0x43a1613]
  41b278:	mov    bh,0xbc
  41b27a:	inc    edx
  41b27b:	enter  0xd464,0x94
  41b27f:	xor    al,bh
  41b281:	imul   edi,ebx,0xffffff8b
  41b284:	mov    ds:0xa75baa96,al
  41b289:	out    dx,eax
  41b28a:	mov    ds:0x7088ce68,al
  41b28f:	add    ebx,DWORD PTR [edi+0x67]
  41b292:	cmp    al,0x28
  41b294:	cmp    DWORD PTR [eax+0x628ffc18],0x224c2b7d
  41b29e:	imul   ecx,ebx,0xffffffc7
  41b2a1:	cmc    
  41b2a2:	xor    ah,BYTE PTR [esi+0x6097da0c]
  41b2a8:	popf   
  41b2a9:	test   BYTE PTR [edi+0x5e],dh
  41b2ac:	lock push edx
  41b2ae:	sub    ebp,ebp
  41b2b0:	lock (bad) 
  41b2b2:	cmp    bl,ah
  41b2b4:	or     BYTE PTR [edi],al
  41b2b6:	adc    BYTE PTR ds:0x383d2ef6,bl
  41b2bc:	jp     0x41b2ce
  41b2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2bf:	je     0x41b329
  41b2c1:	(bad)
  41b2c5:	sub    ebp,DWORD PTR [ecx]
  41b2c7:	sbb    DWORD PTR [ebp+0x1e],esp
  41b2ca:	add    bh,BYTE PTR [edi]
  41b2cc:	nop
  41b2cd:	pop    esp
  41b2ce:	pop    esi
  41b2cf:	ja     0x41b286
  41b2d1:	mov    ebx,0xd1e34f4e
  41b2d6:	xor    BYTE PTR [eax+0x5cbcd8a2],cl
  41b2dc:	scas   eax,DWORD PTR es:[edi]
  41b2dd:	out    dx,al
  41b2de:	scas   al,BYTE PTR es:[edi]
  41b2df:	or     edx,edi
  41b2e1:	xchg   edi,eax
  41b2e2:	call   0xb21:0x26b68c54
  41b2e9:	and    dh,BYTE PTR [eax+0x4e]
  41b2ec:	ins    DWORD PTR es:[edi],dx
  41b2ed:	dec    ebx
  41b2ee:	cmp    eax,0x38071398
  41b2f3:	cli    
  41b2f4:	test   al,0x99
  41b2f6:	add    eax,0x4556a7ad
  41b2fb:	jb     0x41b316
  41b2fd:	jp     0x41b292
  41b2ff:	nop
  41b300:	sar    ch,cl
  41b302:	cmp    al,0x3f
  41b304:	and    al,0x52
  41b306:	or     ecx,DWORD PTR [edi]
  41b308:	dec    ebx
  41b309:	cmp    BYTE PTR [edx],0x50
  41b30c:	sti    
  41b30d:	sub    eax,0x8af581a5
  41b312:	jmp    FWORD PTR [ecx]
  41b314:	dec    esp
  41b315:	or     ebp,DWORD PTR [edx+0x16d7aa56]
  41b31b:	mov    bl,0x98
  41b31d:	push   ebp
  41b31e:	sti    
  41b31f:	mov    dl,0x8d
  41b321:	adc    edi,edi
  41b323:	pop    esp
  41b324:	cmp    eax,0x184967bc
  41b329:	call   0x8e98:0x9144
  41b32f:	scas   eax,DWORD PTR es:[edi]
  41b330:	sbb    bh,bl
  41b332:	mov    bh,0xb5
  41b334:	add    dl,ah
  41b336:	jne    0x41b347
  41b338:	push   cs
  41b339:	lds    eax,FWORD PTR [edi+0x310ae496]
  41b33f:	inc    ecx
  41b340:	mov    al,0x13
  41b342:	xchg   edi,eax
  41b343:	ror    DWORD PTR [edx+ebp*8-0x12],cl
  41b347:	jmp    0xbbb1b194
  41b34c:	retf   
  41b34d:	xchg   ebx,eax
  41b34e:	jmp    DWORD PTR [ebx]
  41b350:	sbb    dl,0x27
  41b353:	div    ecx
  41b355:	bound  ebp,QWORD PTR [eax+0x35e5abf7]
  41b35b:	push   ebx
  41b35c:	pop    ds
  41b35d:	stos   BYTE PTR es:[edi],al
  41b35e:	inc    esp
  41b35f:	sub    ebx,DWORD PTR [edx-0x58]
  41b362:	in     al,dx
  41b363:	mov    al,0xbf
  41b365:	adc    BYTE PTR [ebp+0xd448045],0xb4
  41b36c:	lea    ecx,[ecx+0x76]
  41b36f:	add    BYTE PTR [esi+0x60df3a83],0x67
  41b376:	jbe    0x41b331
  41b378:	sub    ecx,ecx
  41b37a:	dec    edi
  41b37b:	clc    
  41b37c:	and    DWORD PTR [ebp+eiz*4-0x1e752a6],ebp
  41b383:	pop    ebx
  41b384:	pusha  
  41b385:	xchg   BYTE PTR [edx-0x268fbe3d],ch
  41b38b:	mov    edi,0x384890b0
  41b390:	stos   DWORD PTR es:[edi],eax
  41b391:	clc    
  41b392:	and    DWORD PTR [ebx-0x4ae6b5c8],0x6ac607e5
  41b39c:	push   cs
  41b39d:	mov    edx,0x5828415e
  41b3a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3a3:	fbstp  TBYTE PTR [eax-0x59]
  41b3a6:	dec    esi
  41b3a7:	mov    dh,0xae
  41b3a9:	test   dl,ch
  41b3ab:	mov    ecx,0x54d009ac
  41b3b0:	add    DWORD PTR [eax],ebx
  41b3b2:	xlat   BYTE PTR ds:[ebx]
  41b3b3:	jl     0x41b386
  41b3b5:	test   BYTE PTR [edx],bh
  41b3b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3b8:	imul   esi,ebp,0x75
  41b3bb:	loop   0x41b368
  41b3bd:	cmp    DWORD PTR [edi],0x3b
  41b3c0:	js     0x41b344
  41b3c2:	pop    edx
  41b3c3:	add    edx,DWORD PTR [edi+0x12]
  41b3c6:	and    al,0x37
  41b3c8:	nop
  41b3c9:	(bad)  
  41b3ca:	xor    al,0xb8
  41b3cc:	jmp    0x98b0d30f
  41b3d1:	mov    edi,DWORD PTR [ecx+0xa9e89eb]
  41b3d7:	fild   WORD PTR [ebx-0x2b25cc36]
  41b3dd:	mov    ch,0x3d
  41b3df:	or     BYTE PTR [edx-0x7711ff56],ch
  41b3e5:	rcl    BYTE PTR [ebx-0x4b],cl
  41b3e8:	or     al,0xd8
  41b3ea:	and    DWORD PTR [edi],0x97971208
  41b3f0:	mov    bl,0xd6
  41b3f2:	cmp    eax,0x3f273118
  41b3f7:	pop    ss
  41b3f8:	push   0xaac0b1bb
  41b3fd:	and    ebp,DWORD PTR [ebx]
  41b3ff:	bound  edi,QWORD PTR [esp+eax*2]
  41b402:	cmp    BYTE PTR [eax+0x45f44a12],0xc8
  41b409:	jbe    0x41b3c6
  41b40b:	stos   BYTE PTR es:[edi],al
  41b40c:	(bad)  
  41b40d:	movd   DWORD PTR [ecx-0x21b57aba],mm1
  41b414:	cmp    eax,0x1da9f9dd
  41b419:	fimul  WORD PTR [esi-0x28]
  41b41c:	jge    0x41b46c
  41b41e:	test   BYTE PTR [edx-0x4e],ah
  41b421:	xchg   edi,eax
  41b422:	xor    al,0xe2
  41b424:	in     al,dx
  41b425:	mov    esp,0x720f3bca
  41b42a:	cvtps2pi mm2,QWORD PTR [edi]
  41b42d:	push   0x6
  41b42f:	cli    
  41b430:	inc    edi
  41b431:	call   0x678c23c9
  41b436:	sub    al,0x22
  41b438:	jmp    0xd270eec5
  41b43d:	push   ebx
  41b43e:	test   al,0x93
  41b440:	enter  0x54ba,0x71
  41b444:	repnz sbb ch,BYTE PTR [eax-0x63462480]
  41b44b:	xor    eax,0xadaf0ea8
  41b450:	dec    BYTE PTR [ebx-0x70]
  41b453:	pop    esp
  41b454:	push   edx
  41b455:	ins    BYTE PTR es:[edi],dx
  41b456:	jns    0x41b3fd
  41b458:	adc    edi,DWORD PTR [edx]
  41b45a:	push   ss
  41b45b:	pop    esi
  41b45c:	inc    edx
  41b45d:	and    cl,BYTE PTR [edx+0x71]
  41b460:	enter  0x823f,0xb7
  41b464:	cmp    dh,ah
  41b466:	js     0x41b429
  41b468:	or     eax,0xba5fedfa
  41b46d:	std    
  41b46e:	scas   eax,DWORD PTR es:[edi]
  41b46f:	clc    
  41b470:	ins    BYTE PTR es:[edi],dx
  41b471:	cli    
  41b472:	and    al,0x9b
  41b474:	push   eax
  41b475:	mov    ebp,DWORD PTR [edx-0x7d]
  41b478:	jmp    0x41b3ff
  41b47a:	adc    ebx,DWORD PTR [edx-0x73]
  41b47d:	sbb    ebp,DWORD PTR [esi-0x7a9af391]
  41b483:	xor    BYTE PTR [ebx+0xc],bl
  41b486:	xchg   edx,eax
  41b487:	sbb    BYTE PTR [ebp-0x360ea577],ch
  41b48d:	and    BYTE PTR [ecx+0x3d1d7f47],bh
  41b493:	test   al,0xb8
  41b495:	push   0xf4182c2d
  41b49a:	or     esi,DWORD PTR [edi+0x1638afd5]
  41b4a0:	or     eax,0x5595fa1a
  41b4a5:	outs   dx,BYTE PTR ds:[esi]
  41b4a6:	mov    WORD PTR [eax+0x1d5d0dfc],?
  41b4ac:	xor    al,0x81
  41b4ae:	mov    cl,BYTE PTR [ebp-0x29b9aff5]
  41b4b4:	mov    eax,0x78c83e51
  41b4b9:	dec    esi
  41b4ba:	pop    edi
  41b4bb:	inc    edi
  41b4bc:	cmp    BYTE PTR [ebx+edx*8],al
  41b4bf:	mov    dl,0x20
  41b4c1:	es dec esp
  41b4c3:	jno    0x41b4c4
  41b4c5:	cmp    ch,BYTE PTR [edx+edi*4]
  41b4c8:	stos   DWORD PTR es:[edi],eax
  41b4c9:	mov    edi,0xb294ab8
  41b4ce:	loope  0x41b50b
  41b4d0:	into   
  41b4d1:	inc    ecx
  41b4d2:	jle    0x41b4ea
  41b4d4:	sub    dh,dl
  41b4d6:	lea    ebp,[esi-0x27f56923]
  41b4dc:	test   BYTE PTR [eax],cl
  41b4de:	cmp    DWORD PTR [edi+ebp*2],ebp
  41b4e1:	or     al,0xbf
  41b4e3:	xchg   ebx,eax
  41b4e4:	mov    dh,dl
  41b4e6:	pop    es
  41b4e7:	mov    bl,0xeb
  41b4e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4ea:	mov    ds:0x8a8c0472,al
  41b4ef:	and    bl,BYTE PTR [edi-0x7fd0b26c]
  41b4f5:	shr    BYTE PTR [ebp-0x76ecf321],1
  41b4fb:	out    0x47,eax
  41b4fd:	cwde   
  41b4fe:	or     dh,BYTE PTR [edx+0xb3a89e8]
  41b504:	ficom  DWORD PTR [ebx+0x3c]
  41b507:	(bad)  
  41b508:	jl     0x41b56a
  41b50a:	(bad)  
  41b50b:	cmp    al,0xd2
  41b50d:	test   BYTE PTR [edx+0x18d2ca42],cl
  41b513:	das    
  41b514:	call   0x3af9ee82
  41b519:	test   BYTE PTR [edx],0xd4
  41b51c:	xchg   esp,eax
  41b51d:	fist   DWORD PTR [ebp+0x31da1301]
  41b523:	sbb    DWORD PTR [edx],esi
  41b525:	call   0x76a762bc
  41b52a:	pop    edx
  41b52b:	pop    ds
  41b52c:	out    dx,eax
  41b52d:	mov    ebx,edx
  41b52f:	sbb    bh,BYTE PTR [ecx+edx*8-0x30]
  41b533:	inc    eax
  41b534:	in     al,0xce
  41b536:	xor    cl,al
  41b538:	dec    eax
  41b539:	add    al,0x12
  41b53b:	jb     0x41b502
  41b53d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b53e:	push   esp
  41b53f:	mov    dl,0xb8
  41b541:	nop
  41b542:	stos   BYTE PTR es:[edi],al
  41b543:	(bad)  
  41b545:	ss mov cl,0xae
  41b548:	mov    DWORD PTR [ebp-0x48e88f03],ebx
  41b54e:	cmp    eax,0x90e14c48
  41b553:	xor    BYTE PTR [eax+0x4d3feaae],dl
  41b559:	xchg   DWORD PTR [edx+0x5cbcf2be],edi
  41b55f:	adc    esp,DWORD PTR [esi]
  41b561:	or     edi,DWORD PTR [edi]
  41b563:	sub    BYTE PTR [edi-0x3],ch
  41b566:	xchg   edx,eax
  41b567:	jno    0x41b551
  41b569:	cmc    
  41b56a:	xchg   ecx,eax
  41b56b:	mov    edi,0x516266ab
  41b570:	cli    
  41b571:	xchg   BYTE PTR [edx+0x6cdf3d2d],dh
  41b577:	or     dh,cl
  41b579:	lods   al,BYTE PTR ds:[esi]
  41b57a:	lock imul ebx,DWORD PTR [edi+0x25fd7702],0x6e548be4
  41b585:	mov    dh,0x32
  41b587:	rcr    BYTE PTR [ecx+0x61],1
  41b58a:	cli    
  41b58b:	or     ebp,DWORD PTR [eax]
  41b58d:	repnz shr BYTE PTR [esp+ebp*4+0x7d2938dd],0x28
  41b596:	mov    dh,0xb9
  41b598:	(bad)  
  41b599:	imul   edx,DWORD PTR [esi+0x3ca9ad38],0xe468db28
  41b5a3:	hlt    
  41b5a4:	mov    eax,0x25afa511
  41b5a9:	cli    
  41b5aa:	pop    esp
  41b5ab:	cld    
  41b5ac:	or     eax,0xbc5fd66a
  41b5b1:	cdq    
  41b5b2:	loop   0x41b553
  41b5b4:	and    eax,0xf7f339c0
  41b5b9:	mov    BYTE PTR [edx-0x32],bh
  41b5bc:	jnp    0x41b5bf
  41b5be:	hlt    
  41b5bf:	lods   al,BYTE PTR ds:[esi]
  41b5c0:	pop    ecx
  41b5c1:	sar    DWORD PTR ds:0xd6f76a78,cl
  41b5c7:	cdq    
  41b5c8:	jg     0x41b583
  41b5ca:	or     bl,BYTE PTR [eax-0x388b7fe9]
  41b5d0:	mov    cl,0xd0
  41b5d2:	in     al,dx
  41b5d3:	mov    BYTE PTR gs:[edx],dh
  41b5d6:	ds pop eax
  41b5d8:	xor    dl,BYTE PTR [esi]
  41b5da:	out    0xb4,al
  41b5dc:	jmp    0xedf18efa
  41b5e1:	mov    ecx,DWORD PTR [edx]
  41b5e3:	inc    eax
  41b5e4:	add    DWORD PTR [ecx],eax
  41b5e6:	retf   
  41b5e7:	xor    dl,BYTE PTR [ecx+0x5]
  41b5ea:	mov    edx,0xc42c4f3d
  41b5ef:	ror    BYTE PTR [edx+esi*4],0xe0
  41b5f3:	adc    al,0x6b
  41b5f5:	aas    
  41b5f6:	push   esp
  41b5f7:	mov    bl,0x68
  41b5f9:	retf   0xe0fc
  41b5fc:	dec    eax
  41b5fd:	jnp    0x41b5be
  41b5ff:	sub    edi,esi
  41b601:	xor    edi,DWORD PTR [ebx]
  41b603:	fs jne 0x41b628
  41b606:	mov    dl,0x2
  41b608:	adc    bh,ah
  41b60a:	jnp    0x41b5bf
  41b60c:	jbe    0x41b5c7
  41b60e:	cmp    dh,al
  41b610:	xchg   edx,eax
  41b611:	mov    WORD PTR [edi-0x6],?
  41b614:	dec    esp
  41b615:	hlt    
  41b616:	add    BYTE PTR [eax+esi*2+0x858452d],0x69
  41b61e:	jge    0x41b5f1
  41b620:	sbb    dl,cl
  41b622:	mov    DWORD PTR [edi+0x7a156094],edx
  41b628:	jns    0x41b65d
  41b62a:	fld    TBYTE PTR [esi]
  41b62c:	and    eax,0x9de8ba86
  41b631:	nop
  41b632:	pushf  
  41b633:	int3   
  41b634:	pop    ds
  41b635:	jp     0x41b667
  41b637:	dec    eax
  41b638:	js     0x41b634
  41b63a:	icebp  
  41b63b:	xchg   DWORD PTR [ecx+0x3b6cfd7d],ebx
  41b641:	or     DWORD PTR [edx-0xdde627e],0x186f1456
  41b64b:	pushf  
  41b64c:	mov    al,0x8d
  41b64e:	stos   BYTE PTR es:[edi],al
  41b64f:	mov    ch,BYTE PTR [esi+0x58]
  41b652:	cmp    al,0x7c
  41b654:	push   edi
  41b655:	call   0x2f4:0xc2e0d6ea
  41b65c:	outs   dx,BYTE PTR ds:[esi]
  41b65d:	add    bl,BYTE PTR [ecx]
  41b65f:	div    ah
  41b661:	mov    al,0x3a
  41b663:	push   0x4edf5003
  41b668:	push   0xc0adceeb
  41b66d:	or     esp,edx
  41b66f:	push   0xffffffc5
  41b671:	or     bh,dh
  41b673:	xchg   DWORD PTR [ebx-0x7ada7351],ebx
  41b679:	mov    ebx,0x3ee83828
  41b67e:	jecxz  0x41b637
  41b680:	scas   eax,DWORD PTR es:[edi]
  41b681:	mov    ebx,0x5a120cee
  41b686:	xchg   ecx,eax
  41b687:	ja     0x41b66e
  41b689:	and    eax,0x630f74a3
  41b68e:	push   0x5a894821
  41b693:	lds    edx,FWORD PTR [edx+0x1b12acf2]
  41b699:	sub    dh,BYTE PTR [esi+eax*4+0xdc7e1e4]
  41b6a0:	jmp    ebx
  41b6a2:	sbb    dh,ah
  41b6a4:	pop    ds
  41b6a5:	jns    0x41b6e1
  41b6a7:	sub    cl,al
  41b6a9:	xchg   esi,ecx
  41b6ab:	mov    ch,0x17
  41b6ad:	mov    edx,0xc20ad46b
  41b6b2:	sub    DWORD PTR [edi-0xd],edx
  41b6b5:	mov    BYTE PTR [ecx],0xd7
  41b6b8:	lahf   
  41b6b9:	mov    ch,0xa
  41b6bb:	jnp    0x41b6db
  41b6bd:	out    0x52,eax
  41b6bf:	cdq    
  41b6c0:	(bad)  [eax-0x2bc3cc19]
  41b6c6:	dec    DWORD PTR [esi]
  41b6c8:	scas   eax,DWORD PTR es:[edi]
  41b6c9:	pop    ecx
  41b6ca:	ds sub al,0x9e
  41b6cd:	mov    ds:0x7421c0c7,al
  41b6d2:	or     ch,BYTE PTR [ecx+eax*4]
  41b6d5:	xchg   ebp,eax
  41b6d6:	idiv   BYTE PTR [edx+0x3a519269]
  41b6dc:	mov    BYTE PTR [ebp+0x21],cl
  41b6df:	(bad)  
  41b6e0:	cli    
  41b6e1:	dec    ebp
  41b6e2:	or     DWORD PTR [ecx+0x5b28b87e],esi
  41b6e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6e9:	mov    DWORD PTR [edx+0x59],ecx
  41b6ec:	test   eax,0x125add2a
  41b6f1:	add    eax,0xc641d83b
  41b6f6:	call   0x2be3:0x3bc4e889
  41b6fd:	sbb    eax,0xb714d7fd
  41b702:	mov    esp,0x3e8067e7
  41b707:	enter  0x7900,0xdf
  41b70b:	rcr    BYTE PTR [eax-0x7e4977f8],cl
  41b711:	jne    0x41b788
  41b713:	push   ds
  41b714:	adc    DWORD PTR [edx-0x23],ebp
  41b717:	inc    ecx
  41b718:	mov    WORD PTR [eax],fs
  41b71a:	sub    al,0x9
  41b71c:	data16 sbb bh,BYTE PTR [esi]
  41b71f:	mov    ebx,0x7b0a84ec
  41b724:	mov    ebx,0x7cf9c1c8
  41b729:	add    esi,DWORD PTR [ebx]
  41b72b:	sbb    BYTE PTR [eax-0x5741d556],ch
  41b731:	inc    ebp
  41b732:	cmp    eax,0x9c682db7
  41b737:	rcl    BYTE PTR [esi],0xa
  41b73a:	out    dx,eax
  41b73b:	jecxz  0x41b79d
  41b73d:	ret    0xafef
  41b740:	call   0xf744f732
  41b745:	sbb    BYTE PTR [edx-0x1a],0x47
  41b749:	pop    esp
  41b74a:	push   DWORD PTR [ebp+0x60]
  41b74d:	add    edx,DWORD PTR [edx]
  41b74f:	pop    ds
  41b750:	rdtsc  
  41b752:	mov    cl,0x26
  41b754:	imul   ebp,DWORD PTR [eax+0x2e8da31],0xffffffc8
  41b75b:	mov    bl,0x63
  41b75d:	jns    0x41b78c
  41b75f:	adc    DWORD PTR [edx+ecx*2],edx
  41b762:	stos   DWORD PTR es:[edi],eax
  41b763:	je     0x41b7ba
  41b765:	out    dx,al
  41b766:	gs into 
  41b768:	pop    edi
  41b769:	popf   
  41b76a:	mov    WORD PTR [edx-0x48],cs
  41b76d:	sar    dl,0xc7
  41b770:	dec    ebp
  41b771:	mov    BYTE PTR [ebx+edx*1+0x5b],bh
  41b775:	mov    eax,DWORD PTR [ebx]
  41b777:	adc    BYTE PTR cs:[ebp-0x11],dl
  41b77b:	adc    bl,bl
  41b77d:	dec    esi
  41b77e:	dec    ebp
  41b77f:	dec    eax
  41b780:	mov    eax,0x3a30a3f5
  41b785:	or     esi,DWORD PTR [ecx-0x75]
  41b788:	aad    0x88
  41b78a:	retf   0x7edc
  41b78d:	jle    0x41b7d3
  41b78f:	(bad)  
  41b791:	push   0xffffffbb
  41b793:	fstp   QWORD PTR [edx+0x739834af]
  41b799:	jae    0x41b7a5
  41b79b:	add    bl,BYTE PTR [eax]
  41b79d:	loopne 0x41b7ff
  41b79f:	mov    ch,0x92
  41b7a1:	aad    0x33
  41b7a3:	int3   
  41b7a4:	push   ebp
  41b7a5:	outs   dx,DWORD PTR ds:[esi]
  41b7a6:	add    eax,0xa3ea140c
  41b7ab:	mov    esp,0xe61917c1
  41b7b0:	call   0xdbfca5b7
  41b7b5:	mov    esp,0x940e40b2
  41b7ba:	push   eax
  41b7bb:	pop    ecx
  41b7bc:	adc    edx,edi
  41b7be:	in     eax,0x6f
  41b7c0:	add    eax,0xce5cabbc
  41b7c5:	call   0x2df2:0xfaa021ab
  41b7cc:	adc    ch,dh
  41b7ce:	popf   
  41b7cf:	repnz inc esp
  41b7d1:	xchg   BYTE PTR [edx],ch
  41b7d3:	repnz adc ebx,DWORD PTR [edx+0x3]
  41b7d7:	xchg   dh,ah
  41b7d9:	jns    0x41b802
  41b7db:	dec    ecx
  41b7dc:	int    0x9f
  41b7de:	mov    dl,0x26
  41b7e0:	pop    ss
  41b7e1:	ret    0x88de
  41b7e4:	cmp    eax,DWORD PTR [ecx-0x5fafd14a]
  41b7ea:	inc    DWORD PTR [edi-0x7708e024]
  41b7f0:	jo     0x41b77a
  41b7f2:	jmp    0xd0a8:0x8fb96871
  41b7f9:	test   DWORD PTR [edx-0x71],ebp
  41b7fc:	push   eax
  41b7fd:	jp     0x41b78f
  41b7ff:	lahf   
  41b800:	adc    edi,DWORD PTR [edx+0x14]
  41b803:	test   eax,0x5ef4e3ea
  41b808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b809:	sub    eax,0x8bdb35c0
  41b80e:	push   0x38
  41b810:	ds xor al,0x79
  41b813:	sub    eax,ebp
  41b815:	popa   
  41b816:	dec    ecx
  41b817:	cwde   
  41b818:	xchg   ebp,eax
  41b819:	jae    0x41b7f2
  41b81b:	jg     0x41b895
  41b81d:	mov    ah,0x99
  41b81f:	lods   eax,DWORD PTR ds:[esi]
  41b820:	js     0x41b884
  41b822:	stos   BYTE PTR es:[edi],al
  41b823:	dec    ebp
  41b824:	adc    DWORD PTR [edx],edi
  41b826:	add    BYTE PTR [ebx+0x2d511aee],cl
  41b82c:	pop    edx
  41b82d:	retf   
  41b82e:	lds    edx,FWORD PTR [eax+ebx*2]
  41b831:	add    eax,0xa5feac15
  41b836:	and    DWORD PTR [esi],edx
  41b838:	or     al,0x4a
  41b83a:	pop    es
  41b83b:	push   0xffffffe7
  41b83d:	or     al,0xbf
  41b83f:	fldenv [ecx]
  41b841:	sub    DWORD PTR [ecx],ebx
  41b843:	or     eax,0xebfa7099
  41b848:	dec    edi
  41b849:	repz loopne 0x41b7fd
  41b84c:	jbe    0x41b850
  41b84e:	push   ds
  41b84f:	arpl   WORD PTR [edi],bp
  41b851:	out    0x49,eax
  41b853:	js     0x41b82a
  41b855:	pop    edi
  41b856:	(bad)  
  41b857:	lods   al,BYTE PTR ds:[esi]
  41b858:	js     0x41b7f9
  41b85a:	push   0x9f9af5d5
  41b85f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b860:	dec    ebx
  41b861:	xor    DWORD PTR [eax],esi
  41b863:	mov    ds:0x9832d196,al
  41b868:	stos   DWORD PTR es:[edi],eax
  41b869:	test   ch,dl
  41b86b:	jecxz  0x41b8d5
  41b86d:	pop    ebp
  41b86e:	inc    ebp
  41b86f:	mov    ebx,0xda13f639
  41b874:	sbb    ebp,DWORD PTR [edx-0x21f8e2ff]
  41b87a:	mov    esi,0x5e9dc9fb
  41b87f:	jg     0x41b879
  41b881:	popa   
  41b882:	sbb    eax,DWORD PTR [ebp+0x152a8d38]
  41b888:	add    BYTE PTR [ebx-0x22],0x4
  41b88c:	jnp    0x41b885
  41b88e:	ss clc 
  41b890:	sbb    cl,BYTE PTR ds:0xf4404d79
  41b896:	adc    eax,0xaa823c19
  41b89b:	aaa    
  41b89c:	enter  0xb3b8,0xf4
  41b8a0:	out    0x9a,al
  41b8a2:	pop    esi
  41b8a3:	pop    edx
  41b8a4:	jno    0x41b8f8
  41b8a6:	or     DWORD PTR [eax+0x5449a5b],ecx
  41b8ac:	mov    eax,0x8ac9ec64
  41b8b1:	loope  0x41b8ed
  41b8b3:	aad    0x4b
  41b8b5:	ja     0x41b872
  41b8b7:	add    bl,BYTE PTR [ebx-0x7e]
  41b8ba:	fmul   st(5),st
  41b8bc:	sub    BYTE PTR [ebp+0x3c],bh
  41b8bf:	push   0x43151cb1
  41b8c4:	pop    ds
  41b8c5:	pop    ebp
  41b8c6:	in     eax,dx
  41b8c7:	sub    bh,dh
  41b8c9:	inc    edi
  41b8ca:	and    edx,eax
  41b8cc:	retf   
  41b8cd:	xchg   edx,eax
  41b8ce:	idiv   BYTE PTR [esi+0x2eac4a19]
  41b8d4:	icebp  
  41b8d5:	aam    0xb3
  41b8d7:	(bad)  
  41b8d8:	mov    ds:0xda9bcdcd,eax
  41b8dd:	fisttp WORD PTR [ecx-0x72]
  41b8e0:	pop    esp
  41b8e1:	js     0x41b8dd
  41b8e3:	xlat   BYTE PTR ds:[ebx]
  41b8e4:	test   BYTE PTR [ebx+edi*2-0x54],ch
  41b8e8:	sbb    DWORD PTR [edx+0x642048a8],ecx
  41b8ee:	loopne 0x41b880
  41b8f0:	push   0x8fdd56a2
  41b8f5:	mov    WORD PTR [edx+0x6a],cs
  41b8f8:	sub    dl,BYTE PTR [eax+0x4a207467]
  41b8fe:	adc    cl,BYTE PTR [esi]
  41b900:	pop    edx
  41b901:	pop    ebx
  41b902:	dec    eax
  41b903:	fdivr  DWORD PTR [ecx]
  41b905:	jge    0x41b8f0
  41b907:	sbb    al,0xf1
  41b909:	jp     0x41b895
  41b90b:	xor    BYTE PTR [eax+0x5d],ah
  41b90e:	xor    edi,DWORD PTR [ebx-0xd9b05f8]
  41b914:	adc    dh,al
  41b916:	or     edx,DWORD PTR [ecx]
  41b918:	std    
  41b919:	add    bl,BYTE PTR [ecx-0x6]
  41b91c:	outs   dx,BYTE PTR ds:[esi]
  41b91d:	mov    ch,BYTE PTR [edx+0x374ee06f]
  41b923:	jne    0x41b8e0
  41b925:	cdq    
  41b926:	and    ebx,DWORD PTR [edi]
  41b928:	sti    
  41b929:	lds    esi,FWORD PTR [edi-0x6c]
  41b92c:	push   ds
  41b92d:	mov    BYTE PTR [ecx*4-0x45344a08],ch
  41b934:	dec    ecx
  41b935:	xchg   edi,eax
  41b936:	sbb    ebx,DWORD PTR [eax]
  41b938:	push   0xf920ac02
  41b93d:	in     eax,0x31
  41b93f:	pop    eax
  41b940:	aad    0x68
  41b942:	imul   esp,DWORD PTR [edi+ebx*2],0x68
  41b946:	fldenv [ebx]
  41b948:	or     al,BYTE PTR [edi+0x5f]
  41b94b:	cmp    eax,0xb5fa72a4
  41b950:	test   BYTE PTR [edx+0x1],cl
  41b953:	jo     0x41b910
  41b955:	sbb    BYTE PTR [ecx],al
  41b957:	push   ss
  41b958:	shl    DWORD PTR [eax+0x32],0x33
  41b95c:	cmp    dh,bh
  41b95e:	pop    es
  41b95f:	mov    ch,0x9f
  41b961:	dec    esp
  41b962:	sti    
  41b963:	jbe    0x41b94c
  41b965:	mov    al,BYTE PTR [ecx+0x57]
  41b968:	into   
  41b969:	dec    esi
  41b96a:	sbb    DWORD PTR [esi-0x44],0xb
  41b96e:	fwait
  41b96f:	dec    edi
  41b970:	int3   
  41b971:	xchg   BYTE PTR [edi],dl
  41b973:	adc    eax,eax
  41b975:	pushf  
  41b976:	mov    al,dl
  41b978:	aas    
  41b979:	dec    esi
  41b97a:	jo     0x41b96a
  41b97c:	pop    esi
  41b97d:	push   ebx
  41b97e:	fnstcw WORD PTR [ebx+0x40ee0afe]
  41b984:	imul   edi,DWORD PTR [esi-0x1fd43e79],0x19
  41b98b:	mov    bh,0x99
  41b98d:	ja     0x41b9d5
  41b98f:	ins    DWORD PTR es:[edi],dx
  41b990:	jg     0x41b9ba
  41b992:	sub    BYTE PTR [esi+ebx*1],al
  41b995:	mov    cs,esi
  41b997:	sub    eax,edx
  41b999:	mov    eax,DWORD PTR [edx+0x3d]
  41b99c:	xchg   edi,eax
  41b99d:	fnstcw WORD PTR [ebx]
  41b99f:	sub    BYTE PTR [edx],cl
  41b9a1:	sub    al,0xde
  41b9a3:	sub    bl,BYTE PTR [eax+0x37b3cb4d]
  41b9a9:	(bad)  
  41b9ab:	dec    esi
  41b9ac:	rcr    DWORD PTR [ebp+0x53],0x3
  41b9b0:	adc    al,0xea
  41b9b2:	push   0xffffffb4
  41b9b4:	push   esi
  41b9b5:	xchg   esi,eax
  41b9b6:	xchg   ebx,eax
  41b9b7:	sbb    BYTE PTR [eax+0x50b2f4e9],bh
  41b9bd:	int3   
  41b9be:	bound  eax,QWORD PTR [edi+0x208acb99]
  41b9c4:	out    0x7d,eax
  41b9c6:	xor    edi,DWORD PTR [eax-0x5f17e0bf]
  41b9cc:	mov    ah,0x5f
  41b9ce:	xchg   edi,eax
  41b9cf:	xor    dh,BYTE PTR [edx-0x2ffaa543]
  41b9d5:	fst    DWORD PTR [edi+0x6e]
  41b9d8:	or     DWORD PTR [esi+0x76054e62],0x7c82283f
  41b9e2:	pop    ebp
  41b9e3:	mov    ecx,DWORD PTR [eax+0x5cc62602]
  41b9e9:	xchg   ebx,eax
  41b9ea:	call   0x1a858bdb
  41b9ef:	mov    dh,0xb4
  41b9f1:	loope  0x41ba5a
  41b9f3:	enter  0x6810,0xea
  41b9f7:	repz sbb eax,0x56f5d88d
  41b9fd:	fisubr WORD PTR [esi+esi*1]
  41ba00:	pop    edx
  41ba01:	jno    0x41b999
  41ba03:	fdivr  DWORD PTR [ecx]
  41ba05:	mov    WORD PTR [eax+0x49b5daf1],fs
  41ba0b:	push   0x720edb5
  41ba10:	mov    eax,0x18fe99f4
  41ba15:	(bad)  
  41ba16:	das    
  41ba17:	jl     0x41b9c9
  41ba19:	add    BYTE PTR [esi],0x8
  41ba1c:	sbb    esp,DWORD PTR [edi-0x798f07c2]
  41ba22:	dec    ebp
  41ba23:	(bad)  
  41ba24:	js     0x41ba38
  41ba26:	aaa    
  41ba27:	mov    dl,0x2d
  41ba29:	push   eax
  41ba2a:	xor    eax,0xc925976e
  41ba2f:	mov    eax,ds:0xd84610bf
  41ba34:	ja     0x41b9e6
  41ba36:	out    0xc4,eax
  41ba38:	aam    0x3a
  41ba3a:	xor    esi,DWORD PTR [edx+0x254aa72f]
  41ba40:	adc    DWORD PTR [eax+0x1d09d720],eax
  41ba46:	push   edi
  41ba47:	in     al,0xa0
  41ba49:	in     al,0x3d
  41ba4b:	std    
  41ba4c:	adc    BYTE PTR [ebp+0x7f5836e4],cl
  41ba52:	lds    edi,FWORD PTR [ecx+0xfc59067]
  41ba58:	mov    dh,0x63
  41ba5a:	mov    bl,bh
  41ba5c:	inc    edx
  41ba5d:	dec    eax
  41ba5e:	mov    bl,bh
  41ba60:	adc    eax,edx
  41ba62:	xchg   edi,eax
  41ba63:	jp     0x41bacf
  41ba65:	(bad)  
  41ba66:	jo     0x41babe
  41ba68:	sar    DWORD PTR [esi+0xa],cl
  41ba6b:	dec    esp
  41ba6c:	or     al,0x82
  41ba6e:	cwde   
  41ba6f:	pop    esp
  41ba70:	sub    al,BYTE PTR [edi]
  41ba72:	cwde   
  41ba73:	push   0xffffff81
  41ba75:	cmp    bh,dh
  41ba77:	(bad)  
  41ba78:	jnp    0x41ba7a
  41ba7a:	cmp    bh,BYTE PTR cs:[ecx-0x1b663571]
  41ba81:	fcomip st,st(2)
  41ba83:	repnz stc 
  41ba85:	call   0x233472f1
  41ba8a:	fisub  WORD PTR [ecx]
  41ba8c:	test   BYTE PTR [edx+eiz*2],al
  41ba8f:	xor    al,0x1b
  41ba91:	loop   0x41baa1
  41ba93:	sbb    al,0x4b
  41ba95:	push   eax
  41ba96:	mov    edx,0x83da14f3
  41ba9b:	jbe    0x41ba95
  41ba9d:	add    BYTE PTR [esi+ebx*4+0x50],ch
  41baa1:	inc    ebx
  41baa2:	cld    
  41baa3:	mov    WORD PTR [eax],ds
  41baa5:	ror    BYTE PTR [esi-0x4c048869],cl
  41baab:	dec    edi
  41baac:	push   ss
  41baad:	call   0x3e15:0xcf4ccf1e
  41bab4:	jae    0x41ba55
  41bab6:	test   eax,0x9be19a0b
  41babb:	popf   
  41babc:	mov    ebx,0x5fd79c88
  41bac1:	add    DWORD PTR [ecx],esi
  41bac3:	js     0x41ba6b
  41bac5:	xchg   esi,eax
  41bac6:	iret   
  41bac7:	stos   BYTE PTR es:[edi],al
  41bac8:	dec    eax
  41bac9:	jmp    0x4d2068a1
  41bace:	bound  eax,QWORD PTR [edi]
  41bad0:	or     eax,0x282ece7a
  41bad5:	dec    ecx
  41bad6:	mov    bl,0x35
  41bad8:	sub    BYTE PTR [edx-0x5e],bl
  41badb:	dec    esp
  41badc:	retf   
  41badd:	cmp    BYTE PTR [edx+0x68],0xa3
  41bae1:	gs popa 
  41bae3:	jle    0x41bb2f
  41bae5:	mov    esi,0xf04a5848
  41baea:	repnz add cl,al
  41baed:	add    dh,al
  41baef:	mov    al,0x59
  41baf1:	mov    cl,0xd
  41baf3:	mov    dl,BYTE PTR [eax]
  41baf5:	push   0x78
  41baf7:	aaa    
  41baf8:	aad    0xa7
  41bafa:	idiv   bh
  41bafc:	fnstsw WORD PTR [edx]
  41bafe:	daa    
  41baff:	mov    eax,0xc2aa8701
  41bb04:	stos   BYTE PTR es:[edi],al
  41bb05:	jnp    0x41baaf
  41bb07:	or     BYTE PTR [esi-0x23334b28],ah
  41bb0d:	mov    cl,0xea
  41bb0f:	xchg   edi,eax
  41bb10:	daa    
  41bb11:	icebp  
  41bb12:	loop   0x41bacd
  41bb14:	or     BYTE PTR [ebx],cl
  41bb16:	push   0xffffffb4
  41bb18:	jne    0x41bb28
  41bb1a:	sub    BYTE PTR [ebx-0x39],bl
  41bb1d:	or     ch,BYTE PTR [ebx+eax*1+0x32add38e]
  41bb24:	mov    dh,0x5
  41bb26:	jge    0x41bada
  41bb28:	int3   
  41bb29:	inc    ebp
  41bb2a:	dec    ecx
  41bb2b:	pop    esp
  41bb2c:	dec    eax
  41bb2d:	and    BYTE PTR [esi-0x30],0x94
  41bb31:	enter  0x6785,0xcd
  41bb35:	retf   0x6863
  41bb38:	push   ds
  41bb39:	adc    al,0xd7
  41bb3b:	or     BYTE PTR [eax+0x62],0x1e
  41bb3f:	mov    ah,0x91
  41bb41:	sahf   
  41bb42:	retf   
  41bb43:	mov    al,ds:0xc00c8a15
  41bb48:	mov    al,0x8
  41bb4a:	mov    bl,0x10
  41bb4c:	jns    0x41bb38
  41bb4e:	fisub  DWORD PTR [ecx+0x242a8065]
  41bb54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb55:	jg     0x41baf0
  41bb57:	xchg   edi,eax
  41bb58:	push   ss
  41bb59:	sub    dh,ch
  41bb5b:	mov    al,0x4b
  41bb5d:	xchg   edx,eax
  41bb5e:	fld    TBYTE PTR [edi]
  41bb60:	std    
  41bb61:	jmp    0xe134c144
  41bb66:	dec    ebp
  41bb67:	sti    
  41bb68:	add    esp,ebp
  41bb6a:	mov    ebx,0x3f73e66a
  41bb6f:	aam    0x8
  41bb71:	cmp    ch,dl
  41bb73:	imul   DWORD PTR [ecx+0x1e]
  41bb76:	(bad)  
  41bb77:	fisttp WORD PTR [ebp+0xa]
  41bb7a:	int    0xd
  41bb7c:	xor    al,0xcd
  41bb7e:	sub    al,0x8
  41bb80:	repnz mov gs,WORD PTR [edx+0x57aa16a2]
  41bb87:	jae    0x7b4baeeb
  41bb8d:	mov    ch,0xf6
  41bb8f:	js     0x41bbd3
  41bb91:	mov    edi,edx
  41bb93:	inc    esp
  41bb94:	push   ecx
  41bb95:	(bad)  
  41bb96:	sbb    al,0x4e
  41bb98:	js     0x41bbb6
  41bb9a:	push   es
  41bb9b:	(bad)  
  41bb9c:	cmp    dl,dl
  41bb9e:	xor    al,0x88
  41bba0:	mov    edi,0xf40e4b19
  41bba5:	cmc    
  41bba6:	mov    WORD PTR [ecx+0x13aa8cd2],gs
  41bbac:	jl     0x41bb5c
  41bbae:	jg     0x41bb9f
  41bbb0:	enter  0x4dd3,0xad
  41bbb4:	ret    
  41bbb5:	add    eax,0xdeecf51f
  41bbba:	mov    bl,0x95
  41bbbc:	arpl   WORD PTR [ebx+0x33],di
  41bbbf:	nop
  41bbc0:	or     ebp,DWORD PTR [eax-0x63]
  41bbc3:	adc    bl,BYTE PTR [eax-0x4a]
  41bbc6:	js     0x41bba0
  41bbc8:	add    BYTE PTR [ecx],cl
  41bbca:	ror    DWORD PTR [esi-0x13bb75aa],0x58
  41bbd1:	repnz bound esi,QWORD PTR [ebp+0x71ab0eaa]
  41bbd8:	or     BYTE PTR [edx+0x31db757d],0x63
  41bbdf:	push   ss
  41bbe0:	xchg   edi,eax
  41bbe1:	sub    ah,BYTE PTR [eax+eiz*1-0x40]
  41bbe5:	add    BYTE PTR [edi-0x77],0xa8
  41bbe9:	push   0x38
  41bbeb:	lods   al,BYTE PTR ds:[esi]
  41bbec:	or     al,cl
  41bbee:	push   0xa53e44d
  41bbf3:	fs mov esp,0x1643b208
  41bbf9:	mov    edx,?
  41bbfb:	jnp    0x41bc63
  41bbfd:	inc    edi
  41bbfe:	add    BYTE PTR [edx-0x19],0x83
  41bc02:	jp     0x41bbf7
  41bc04:	sub    al,ch
  41bc06:	ret    
  41bc07:	repnz push 0x4c1c2715
  41bc0d:	les    edx,FWORD PTR [edi+0x6a]
  41bc10:	sub    esp,DWORD PTR [ebp-0x13d4e66]
  41bc16:	pop    es
  41bc17:	mov    ecx,0xae9d7a98
  41bc1c:	lock ss jp 0x41bbe2
  41bc20:	adc    DWORD PTR [edx],ebx
  41bc22:	xchg   esp,eax
  41bc23:	sbb    bh,cl
  41bc25:	dec    edi
  41bc26:	fimul  DWORD PTR [eax]
  41bc28:	arpl   sp,ax
  41bc2a:	jp     0x41bbfd
  41bc2c:	adc    cl,dl
  41bc2e:	push   cs
  41bc2f:	sbb    ebp,edi
  41bc31:	(bad)  
  41bc32:	clc    
  41bc33:	adc    eax,0x3d336a12
  41bc38:	pop    esi
  41bc39:	jl     0x41bc0d
  41bc3b:	pusha  
  41bc3c:	repz sti 
  41bc3e:	repz xor edi,DWORD PTR es:[esi-0x3bee78b6]
  41bc46:	sbb    bl,BYTE PTR [ebp+0x15]
  41bc49:	pop    edx
  41bc4a:	int3   
  41bc4b:	out    dx,al
  41bc4c:	nop
  41bc4d:	outs   dx,DWORD PTR ds:[esi]
  41bc4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc4f:	inc    edi
  41bc50:	popa   
  41bc51:	cmc    
  41bc52:	inc    esi
  41bc53:	and    esi,DWORD PTR [ebp-0x2f735577]
  41bc59:	inc    edx
  41bc5a:	stos   BYTE PTR es:[edi],al
  41bc5b:	mov    al,0x11
  41bc5d:	into   
  41bc5e:	pop    ds
  41bc5f:	jg     0x41bc27
  41bc61:	mov    cl,0x27
  41bc63:	mov    eax,0x7ee04bf
  41bc68:	inc    ebp
  41bc69:	repnz lods al,BYTE PTR ds:[esi]
  41bc6b:	jl     0x41bbf6
  41bc6d:	mov    ebx,DWORD PTR [edx]
  41bc6f:	push   ebx
  41bc70:	inc    ebp
  41bc71:	xchg   edx,eax
  41bc72:	pop    ebx
  41bc73:	das    
  41bc74:	adc    ch,BYTE PTR [edx+0xe]
  41bc77:	xor    BYTE PTR [eax-0x150248e6],0x39
  41bc7e:	not    BYTE PTR [esi-0x509c7328]
  41bc84:	adc    al,0x64
  41bc86:	xchg   bl,bl
  41bc88:	adc    eax,0x3a6e0bca
  41bc8d:	fwait
  41bc8e:	mov    ecx,0x91c1d907
  41bc93:	test   eax,0x71ba88cb
  41bc98:	jge    0x41bc70
  41bc9a:	fcomp  DWORD PTR [esi-0x54]
  41bc9d:	in     al,0xb
  41bc9f:	push   ds
  41bca0:	test   bl,al
  41bca2:	ins    DWORD PTR es:[edi],dx
  41bca3:	aam    0xd0
  41bca5:	mov    eax,ds:0x1a88ae33
  41bcaa:	std    
  41bcab:	lods   al,BYTE PTR ds:[esi]
  41bcac:	stos   BYTE PTR es:[edi],al
  41bcad:	xchg   esi,eax
  41bcae:	std    
  41bcaf:	aad    0x13
  41bcb1:	or     ch,BYTE PTR [eax+0x25]
  41bcb4:	xchg   esp,eax
  41bcb5:	div    BYTE PTR [ecx]
  41bcb7:	sub    edx,ebx
  41bcb9:	push   ds
  41bcba:	add    edi,DWORD PTR [edx+ebx*2+0x3909cceb]
  41bcc1:	(bad)  
  41bcc2:	sbb    ah,BYTE PTR [edx-0x5b6265e5]
  41bcc8:	sub    ah,cl
  41bcca:	dec    edi
  41bccb:	xchg   BYTE PTR [ebx-0x31],al
  41bcce:	lods   al,BYTE PTR ds:[esi]
  41bccf:	xor    BYTE PTR [edx-0x59],dl
  41bcd2:	mov    edx,0x83ae1682
  41bcd7:	sahf   
  41bcd8:	bound  ecx,QWORD PTR [ebp-0x66892abc]
  41bcde:	sub    al,0x7c
  41bce0:	adc    cl,BYTE PTR [esi+0x6d68317a]
  41bce6:	retf   0x54eb
  41bce9:	jnp    0x41bc98
  41bceb:	cmp    DWORD PTR [esi+0x76],eax
  41bcee:	cmp    ch,BYTE PTR [ebx-0x14]
  41bcf1:	call   0xffe3059e
  41bcf6:	aas    
  41bcf7:	fdivr  DWORD PTR [edx]
  41bcf9:	shl    DWORD PTR [ebx+ebx*2-0x4d5065e8],1
  41bd00:	paddd  mm1,mm0
  41bd03:	gs sbb eax,0xfb81ae1a
  41bd09:	ret    0x9201
  41bd0c:	or     BYTE PTR [ebx+0x3ca8e0e0],bh
  41bd12:	pop    ecx
  41bd13:	mov    ah,0x82
  41bd15:	sub    bh,BYTE PTR [ebp+0x2e3a1943]
  41bd1b:	cmp    al,0xdb
  41bd1d:	and    BYTE PTR [ebx],0xd2
  41bd20:	es ss popfw 
  41bd24:	push   0xffffff88
  41bd26:	sub    ch,BYTE PTR [ebx]
  41bd28:	outs   dx,BYTE PTR ds:[esi]
  41bd29:	inc    ebp
  41bd2a:	cmp    DWORD PTR [edi-0x57c0bb5a],0xffffff83
  41bd31:	neg    DWORD PTR [ebx+0x5b]
  41bd34:	pushf  
  41bd35:	pop    esp
  41bd36:	xor    BYTE PTR [esi+esi*2+0x7f2834dd],ah
  41bd3d:	mov    edi,0x88ef319b
  41bd42:	dec    ecx
  41bd43:	mov    eax,0xfb4d3287
  41bd48:	enter  0x35f9,0xbb
  41bd4c:	iret   
  41bd4d:	shl    BYTE PTR [edi-0x1c],1
  41bd50:	pop    ss
  41bd51:	mov    ah,BYTE PTR [ebx+0x3d9b6284]
  41bd57:	rol    BYTE PTR [edx],cl
  41bd59:	dec    edx
  41bd5a:	or     eax,0x2a8bb84f
  41bd5f:	not    bh
  41bd61:	xor    esi,eax
  41bd63:	dec    eax
  41bd64:	sbb    ch,BYTE PTR [edx]
  41bd66:	fisubr DWORD PTR [eax]
  41bd68:	popa   
  41bd69:	mov    al,0xdf
  41bd6b:	pop    esp
  41bd6c:	and    eax,0xc0c38208
  41bd71:	mov    DWORD PTR [edx+0x31],ebp
  41bd74:	push   esp
  41bd75:	retf   
  41bd76:	sbb    bl,cl
  41bd78:	inc    ebp
  41bd79:	add    al,0x3f
  41bd7b:	js     0x41bdf9
  41bd7d:	pushf  
  41bd7e:	push   ecx
  41bd7f:	or     BYTE PTR [eax-0x42],cl
  41bd82:	lea    edi,[edx-0x7477705d]
  41bd88:	push   cs
  41bd89:	fisub  DWORD PTR [eax+0x2cd27833]
  41bd8f:	adc    DWORD PTR [ebp+0x347e0806],ebp
  41bd95:	jns    0x41bd51
  41bd97:	and    al,0x22
  41bd99:	loope  0x41bd6c
  41bd9b:	mov    ebx,0xb6acbd2f
  41bda0:	jg     0x41bdba
  41bda2:	mov    ebp,0xa28b1a6a
  41bda7:	add    DWORD PTR [eax-0x1],esi
  41bdaa:	cwde   
  41bdab:	dec    ecx
  41bdac:	dec    esp
  41bdad:	or     dl,0x71
  41bdb0:	dec    edx
  41bdb1:	pop    edi
  41bdb2:	jno    0x41be07
  41bdb4:	nop
  41bdb5:	push   edx
  41bdb6:	dec    ecx
  41bdb7:	push   0x99206e42
  41bdbc:	cwde   
  41bdbd:	add    cl,BYTE PTR [edx-0x4c]
  41bdc0:	gs out 0xea,eax
  41bdc3:	mov    al,ds:0xa9cb7a12
  41bdc8:	mov    al,0x7c
  41bdca:	push   ebx
  41bdcb:	imul   esi,DWORD PTR [eax+ebp*8],0x7dc05800
  41bdd2:	mov    bl,dl
  41bdd4:	xor    edx,eax
  41bdd6:	jle    0x41bd8b
  41bdd8:	or     BYTE PTR [edx-0x43],bh
  41bddb:	retf   0x4269
  41bdde:	test   esp,edi
  41bde0:	retf   
  41bde1:	fwait
  41bde2:	jecxz  0x41bd65
  41bde4:	test   DWORD PTR cs:[edx+0x60eb9e9f],ecx
  41bdeb:	mov    cl,0xf9
  41bded:	jnp    0x41be2a
  41bdef:	push   0xdf179d47
  41bdf4:	pushf  
  41bdf5:	(bad)  
  41bdf6:	jmp    0x3228d3a6
  41bdfb:	enter  0x9807,0x3
  41bdff:	cmp    eax,0xafbafc00
  41be04:	lar    ebp,WORD PTR [ecx+0x50cbbf2]
  41be0b:	push   ebp
  41be0c:	outs   dx,DWORD PTR ds:[esi]
  41be0d:	(bad)  
  41be0e:	retf   0xc38
  41be11:	adc    eax,0xca10c340
  41be16:	sbb    DWORD PTR [eax],esp
  41be18:	loope  0x41bdb3
  41be1a:	icebp  
  41be1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be1c:	and    eax,0x18d19a5e
  41be21:	sub    edx,0x8727816e
  41be27:	add    BYTE PTR [ecx-0x7fd7b1ef],bh
  41be2d:	inc    esp
  41be2e:	aam    0x21
  41be30:	sbb    DWORD PTR [esi+0x58],ebp
  41be33:	popa   
  41be34:	imul   esp,DWORD PTR [ebx+0x4a524662],0xffffffec
  41be3b:	(bad)  
  41be3e:	jmp    0x208f:0x12ac9a9
  41be45:	xchg   ebx,eax
  41be46:	adc    eax,0x1179c7bd
  41be4b:	sub    al,0x48
  41be4d:	ins    BYTE PTR es:[edi],dx
  41be4e:	call   0x124fcaff
  41be53:	ja     0x41be67
  41be55:	jp     0x41be7b
  41be57:	leave  
  41be58:	in     al,0x54
  41be5a:	or     al,0xcf
  41be5c:	test   eax,0xc8949754
  41be61:	fnstenv [edx]
  41be63:	cmc    
  41be64:	mov    ecx,0xfb78cae4
  41be69:	test   BYTE PTR [edx],ah
  41be6b:	in     al,0xea
  41be6d:	mov    ch,0x3f
  41be6f:	mov    eax,0xebfc5bb2
  41be74:	mov    eax,0x30ac8a69
  41be79:	pushf  
  41be7a:	jb     0x41befb
  41be7c:	pop    eax
  41be7d:	scas   al,BYTE PTR es:[edi]
  41be7e:	shl    DWORD PTR [ebx],0x98
  41be81:	stos   BYTE PTR es:[edi],al
  41be82:	mov    esi,0xe94a1eac
  41be87:	sbb    ebx,eax
  41be89:	jmp    0x82:0x1abb6f3
  41be90:	pop    ss
  41be91:	cmp    dl,BYTE PTR [edx+eiz*8+0x72e9611e]
  41be98:	add    DWORD PTR [ebp-0x7871750b],eax
  41be9e:	stc    
  41be9f:	add    ah,0x7c
  41bea2:	imul   esi,DWORD PTR [eax-0x687d14dc],0x35
  41bea9:	mov    al,ds:0xc97ff83c
  41beae:	retf   0x459e
  41beb1:	test   eax,0x7e82b8d3
  41beb6:	or     ah,BYTE PTR [edx+0x7e]
  41beb9:	or     BYTE PTR [eax-0x46],dl
  41bebc:	push   cs
  41bebd:	retf   0x9d5
  41bec0:	xchg   ebx,eax
  41bec1:	push   0xa2d0b41a
  41bec6:	jb     0x41be8e
  41bec8:	push   cs
  41bec9:	imul   ebp,DWORD PTR [esp+eax*2+0x15],0x7ce7da3a
  41bed1:	xor    eax,0xae156d65
  41bed6:	dec    ecx
  41bed7:	sub    BYTE PTR [edi],cl
  41bed9:	xor    al,BYTE PTR [edi+0x41b0ce3e]
  41bedf:	xchg   ebx,eax
  41bee0:	cmp    DWORD PTR [eax],ebx
  41bee2:	jg     0x41be9f
  41bee4:	pop    ss
  41bee5:	dec    edx
  41bee6:	aam    0xc2
  41bee8:	dec    edx
  41bee9:	fwait
  41beea:	sub    bh,BYTE PTR [ebp-0x61]
  41beed:	aaa    
  41beee:	mov    DWORD PTR [ebp+0x48da8e68],0x79042c24
  41bef8:	pop    esp
  41bef9:	mov    dl,0x40
  41befb:	enter  0xcda3,0x47
  41beff:	mov    ch,0xcc
  41bf01:	or     edi,DWORD PTR [edi]
  41bf03:	stos   DWORD PTR es:[edi],eax
  41bf04:	sub    BYTE PTR [ebx+0x21],ah
  41bf07:	in     al,0x85
  41bf09:	sub    ecx,DWORD PTR [eax]
  41bf0b:	pop    esi
  41bf0c:	(bad)  
  41bf0d:	pushf  
  41bf0e:	ss pusha 
  41bf10:	iret   
  41bf11:	push   esp
  41bf12:	and    eax,0xcf594c4f
  41bf17:	lods   al,BYTE PTR ds:[esi]
  41bf18:	in     eax,dx
  41bf19:	test   ebx,0x3a811a80
  41bf1f:	rol    al,cl
  41bf21:	push   ds
  41bf22:	cmp    eax,DWORD PTR [edi-0x47cc9f37]
  41bf28:	mov    esp,0x6896da99
  41bf2d:	dec    edx
  41bf2e:	shrd   DWORD PTR [ebp+0x54],edi,0x8f
  41bf33:	aaa    
  41bf34:	pop    ebx
  41bf35:	sti    
  41bf36:	fcomi  st,st(1)
  41bf38:	imul   ebp,DWORD PTR [esi-0x27ad27be],0x6b
  41bf3f:	test   BYTE PTR [edi-0x56a648cb],ch
  41bf45:	(bad)  
  41bf46:	jp     0x41bf9c
  41bf48:	ret    
  41bf49:	mov    ?,WORD PTR ds:0x27a26f0f
  41bf4f:	das    
  41bf50:	or     eax,DWORD PTR [edx]
  41bf52:	adc    DWORD PTR [eax],esp
  41bf54:	test   al,0xf6
  41bf56:	ds stos DWORD PTR es:[edi],eax
  41bf58:	js     0x41bedf
  41bf5a:	sub    DWORD PTR [ebp-0x1cdc663a],0x12
  41bf61:	dec    edx
  41bf62:	push   0x2bff37c4
  41bf67:	mov    al,ds:0x4abe9075
  41bf6c:	jge    0x41bef9
  41bf6e:	cmp    ah,BYTE PTR [ecx+0x64]
  41bf71:	mov    WORD PTR [ebp+ebp*2+0x78469e6a],gs
  41bf78:	stc    
  41bf79:	jae    0x41bf98
  41bf7b:	or     dh,ch
  41bf7d:	xchg   edx,eax
  41bf7e:	and    bh,BYTE PTR [ecx-0x61c30b41]
  41bf84:	mov    DWORD PTR [ebx+eiz*1],ebp
  41bf87:	popf   
  41bf88:	sbb    eax,DWORD PTR [ebx-0x68]
  41bf8b:	scas   al,BYTE PTR es:[edi]
  41bf8c:	sbb    BYTE PTR [edx+0x1],cl
  41bf8f:	xchg   edx,eax
  41bf90:	inc    esi
  41bf91:	xor    eax,0xff6dca55
  41bf96:	ror    BYTE PTR [eax+0x76],cl
  41bf99:	xchg   dl,cl
  41bf9b:	mov    ah,0x36
  41bf9d:	adc    DWORD PTR [ebx+0x34723a26],0xa08d4f98
  41bfa7:	imul   ebp,DWORD PTR [eax+0x59],0x3551b729
  41bfae:	ror    BYTE PTR [esi+0x18],0xba
  41bfb2:	(bad)  
  41bfb3:	xchg   esi,eax
  41bfb4:	mov    ch,0xca
  41bfb6:	in     al,0x16
  41bfb8:	mov    eax,ds:0xc21b4f36
  41bfbd:	mov    bh,BYTE PTR [edx+0x598386e7]
  41bfc3:	and    edx,ecx
  41bfc5:	bound  esi,QWORD PTR [edi]
  41bfc7:	sub    BYTE PTR [ebx+ebx*4],dh
  41bfca:	(bad)  
  41bfcc:	faddp  st(1),st
  41bfce:	push   cs
  41bfcf:	(bad)  
  41bfd0:	mov    ebx,0x14225f92
  41bfd5:	dec    eax
  41bfd6:	outs   dx,BYTE PTR ds:[esi]
  41bfd7:	xchg   ebp,eax
  41bfd8:	add    BYTE PTR [ecx-0x394b1518],ch
  41bfde:	push   esi
  41bfdf:	mov    eax,0x62207476
  41bfe4:	pop    eax
  41bfe5:	test   dh,dl
  41bfe7:	retf   
  41bfe8:	aam    0x88
  41bfea:	retf   0xd82c
  41bfed:	popf   
  41bfee:	mov    bl,0x9e
  41bff0:	or     ebp,eax
  41bff2:	xor    al,ch
  41bff4:	fsub   st(1),st
  41bff6:	mov    ebx,0x50d24808
  41bffb:	mov    dl,0x38
  41bffd:	test   BYTE PTR [edi+0x2f0acc7b],bl
  41c003:	hlt    
  41c004:	dec    ecx
  41c005:	lea    ebp,[eax]
  41c007:	or     al,0x31
  41c009:	cmp    edx,DWORD PTR [bx+si]
  41c00c:	clc    
  41c00d:	pop    ebp
  41c00e:	imul   eax,eax,0x7a
  41c011:	cmc    
  41c012:	push   cs
  41c013:	mov    esi,0x7120d818
  41c018:	mov    ah,0x6b
  41c01a:	adc    al,0xaf
  41c01c:	mov    ah,0x1e
  41c01e:	jmp    0x41bfd9
  41c020:	std    
  41c021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c022:	xchg   ecx,eax
  41c023:	lock enter 0xccca,0x3b
  41c028:	into   
  41c029:	mov    es,edx
  41c02b:	xchg   edx,eax
  41c02c:	mov    esi,0x7121eb0a
  41c031:	(bad)  
  41c033:	sub    eax,0xbc49e5f2
  41c038:	enter  0x19c4,0xb4
  41c03c:	retf   
  41c03d:	out    dx,eax
  41c03e:	je     0x41bfce
  41c040:	aas    
  41c041:	or     eax,0x939ce279
  41c046:	cmp    BYTE PTR [ebx-0x64],al
  41c049:	mov    esp,ss
  41c04b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c04c:	fdiv   DWORD PTR [ecx-0x46dd4c82]
  41c052:	(bad)  
  41c053:	test   eax,0x2d31d55
  41c058:	adc    BYTE PTR [ebp-0x4],ah
  41c05b:	pop    ds
  41c05c:	dec    eax
  41c05d:	mov    ebp,ecx
  41c05f:	fidiv  WORD PTR ds:0x853aa880
  41c065:	xchg   esp,eax
  41c066:	fsub   st,st(5)
  41c068:	add    al,0x8d
  41c06a:	in     al,dx
  41c06b:	sti    
  41c06c:	xor    BYTE PTR [eax-0x7c4b2e99],0x64
  41c073:	jae    0x41c096
  41c075:	xchg   ebp,eax
  41c076:	inc    edx
  41c077:	mov    cl,0x99
  41c079:	cmp    BYTE PTR [edx+0x6f],0x17
  41c07d:	mov    ds:0xe05092ed,al
  41c082:	sbb    BYTE PTR ds:[ecx+0x57],dl
  41c086:	clc    
  41c087:	mov    ah,0x98
  41c089:	nop
  41c08a:	(bad)  
  41c08b:	mov    ah,0x5e
  41c08d:	xchg   ecx,eax
  41c08e:	adc    BYTE PTR [ebx+0x5ce30d3d],al
  41c094:	dec    eax
  41c095:	inc    edx
  41c096:	or     DWORD PTR [edx],0xffffffbe
  41c099:	out    dx,al
  41c09a:	xor    eax,0xd51a94b9
  41c09f:	test   DWORD PTR [eax],edi
  41c0a1:	mov    ds:0x818c37a,al
  41c0a6:	add    DWORD PTR [ebx+0x1a],edx
  41c0a9:	fisubr DWORD PTR [edx+0x31651ba6]
  41c0af:	sbb    edi,DWORD PTR [esi+0x3e]
  41c0b2:	mov    ah,0x41
  41c0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0b5:	mov    gs,edx
  41c0b7:	dec    ebx
  41c0b8:	or     dh,BYTE PTR [esi-0x303adc4f]
  41c0be:	and    eax,0xfaa3e82c
  41c0c3:	xchg   esi,eax
  41c0c4:	mov    esp,0xd8b69185
  41c0c9:	maxps  xmm1,xmm6
  41c0cc:	push   ebx
  41c0cd:	push   ebx
  41c0ce:	scas   eax,DWORD PTR es:[edi]
  41c0cf:	scas   eax,DWORD PTR es:[edi]
  41c0d0:	rcl    dh,0x62
  41c0d3:	stos   BYTE PTR es:[edi],al
  41c0d4:	or     dl,BYTE PTR [eax+ecx*2+0x70]
  41c0d8:	or     eax,0x1f283fd8
  41c0dd:	adc    BYTE PTR [ecx+0x4cffb8b9],cl
  41c0e3:	scas   eax,DWORD PTR es:[edi]
  41c0e4:	jb     0x41c082
  41c0e6:	jle    0x41c101
  41c0e8:	bswap  edx
  41c0ea:	and    dl,BYTE PTR [ebx+ebp*1+0x24]
  41c0ee:	jge    0x41c0ac
  41c0f0:	push   esi
  41c0f1:	scas   eax,DWORD PTR es:[edi]
  41c0f2:	xor    dh,cl
  41c0f4:	jnp    0x41c090
  41c0f6:	fidiv  DWORD PTR [esi]
  41c0f8:	push   esp
  41c0f9:	dec    eax
  41c0fa:	push   esi
  41c0fb:	mov    dh,0x14
  41c0fd:	dec    edx
  41c0fe:	lds    ebp,FWORD PTR ss:[edx-0x1f]
  41c102:	test   DWORD PTR [ebp-0x67fc979c],esp
  41c108:	lea    eax,[eax+0x1a9c8a4a]
  41c10e:	inc    esp
  41c10f:	mov    al,ds:0x184847dd
  41c114:	(bad)  
  41c115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c116:	out    0x1,eax
  41c118:	clc    
  41c119:	fisttp DWORD PTR [esi]
  41c11b:	mov    bh,0x3d
  41c11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c11e:	cmp    bh,BYTE PTR [edx+0x1d1afa1c]
  41c124:	and    eax,0x9927ab8d
  41c129:	test   al,0x71
  41c12b:	sbb    eax,0xb022a478
  41c130:	push   ds
  41c131:	fs mov bl,0xcf
  41c134:	retf   
  41c135:	retf   0x3dd4
  41c138:	mov    dl,0x12
  41c13a:	sahf   
  41c13b:	xchg   esp,eax
  41c13c:	retf   0xb102
  41c13f:	xor    DWORD PTR [eax-0x55511d8b],edi
  41c145:	iret   
  41c146:	pushf  
  41c147:	inc    ecx
  41c148:	sbb    esi,DWORD PTR [ebp+0x7a1b4ae6]
  41c14e:	lahf   
  41c14f:	mov    DWORD PTR [ebx+0x5d6a7e89],ebp
  41c155:	dec    edi
  41c156:	xchg   ebx,eax
  41c157:	in     eax,0xae
  41c159:	mov    WORD PTR [edx],gs
  41c15b:	stos   DWORD PTR es:[edi],eax
  41c15c:	jmp    0x41c1c6
  41c15e:	xor    eax,0x58bfde33
  41c163:	test   al,0xa4
  41c165:	add    cl,BYTE PTR [ebp+eiz*4-0x80]
  41c169:	dec    eax
  41c16a:	mov    edi,0xafca85c8
  41c16f:	nop
  41c170:	inc    eax
  41c171:	cli    
  41c172:	je     0x41c124
  41c174:	jge    0x41c101
  41c176:	jge    0x41c15a
  41c178:	pop    eax
  41c179:	xor    DWORD PTR [ecx],esp
  41c17b:	inc    DWORD PTR [edx+edi*1-0x4fed4100]
  41c182:	jno    0x41c11c
  41c184:	enter  0x4017,0xae
  41c188:	xchg   ah,dl
  41c18a:	sbb    eax,0x9f5aca41
  41c18f:	cmp    BYTE PTR [ebp+0x13],cl
  41c192:	jge    0x41c1e5
  41c194:	test   al,0x7a
  41c196:	inc    ebp
  41c197:	sub    eax,0x8e03ee29
  41c19c:	ret    0xfab1
  41c19f:	call   0x2a0c:0x61927b90
  41c1a6:	aaa    
  41c1a7:	fimul  WORD PTR [edi-0x60d9936c]
  41c1ad:	mov    esi,0x88113088
  41c1b2:	pop    edx
  41c1b3:	mov    esp,ebx
  41c1b5:	test   DWORD PTR [ebp+0x3cc0328b],eax
  41c1bb:	fcomp  st(1)
  41c1bd:	jp     0x41c1b9
  41c1bf:	loope  0x41c169
  41c1c1:	cmp    eax,0x21b9b74f
  41c1c6:	(bad)
  41c1ca:	pop    ebx
  41c1cb:	pop    edi
  41c1cc:	mov    ds:0x9bd3a120,al
  41c1d1:	pop    esi
  41c1d2:	jmp    0x41c17e
  41c1d4:	and    DWORD PTR [edi-0x340902e6],ecx
  41c1da:	mov    al,0x3b
  41c1dc:	adc    edi,DWORD PTR [edx+0x56]
  41c1df:	mov    ecx,0x3b0fc655
  41c1e4:	sbb    DWORD PTR [ebp+eiz*1-0x12],0x99ba85ca
  41c1ec:	loope  0x41c195
  41c1ee:	and    al,BYTE PTR [ecx+eiz*8+0x8]
  41c1f2:	xor    DWORD PTR [eax+0x5e],ebx
  41c1f5:	mov    ebx,0xb8dc541f
  41c1fa:	push   ss
  41c1fb:	xchg   edx,eax
  41c1fc:	es cs aaa 
  41c1ff:	mov    al,ds:0x3e73b6bc
  41c204:	(bad)
  41c208:	push   ds
  41c209:	and    BYTE PTR [ebx],bl
  41c20b:	jg     0x55d27679
  41c211:	fdiv   QWORD PTR [esi+0xb]
  41c214:	jns    0x41c19d
  41c216:	out    0x22,al
  41c218:	or     eax,0x24f278ca
  41c21d:	mov    ds:0x88e11175,eax
  41c222:	xchg   edi,eax
  41c223:	mov    eax,ds:0xae696138
  41c228:	rcl    DWORD PTR [esi+0x28],1
  41c22b:	leave  
  41c22c:	adc    eax,0x6843a84a
  41c231:	sbb    edx,DWORD PTR [ecx-0x2728bd43]
  41c237:	sub    bh,al
  41c239:	xchg   dl,bh
  41c23b:	imul   eax,DWORD PTR [ecx+0x1d6a4490],0x88ffee53
  41c245:	out    0xf,eax
  41c247:	mov    eax,0x19eb842b
  41c24c:	and    eax,0x49b6ca8c
  41c251:	test   eax,0xcbbc46a
  41c256:	dec    ecx
  41c257:	clc    
  41c258:	retf   
  41c259:	inc    esp
  41c25a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c25b:	in     eax,0xec
  41c25d:	retf   
  41c25e:	inc    eax
  41c25f:	mov    esi,DWORD PTR [ecx+0x35]
  41c262:	dec    eax
  41c263:	pop    eax
  41c264:	(bad)  
  41c265:	loop   0x41c258
  41c267:	loopne 0x41c2c0
  41c269:	and    eax,0xfad0dc26
  41c26e:	sub    ebx,DWORD PTR [eax+0x3d]
  41c271:	pop    esp
  41c272:	mov    ah,bh
  41c274:	inc    edx
  41c275:	push   ss
  41c276:	xor    bh,BYTE PTR [eax]
  41c278:	add    bl,BYTE PTR [esi]
  41c27a:	sbb    al,0xdd
  41c27c:	adc    al,0x85
  41c27e:	mov    ah,cl
  41c280:	or     DWORD PTR [eax],0xffffffbc
  41c283:	push   ds
  41c284:	test   BYTE PTR [edi-0x20867c9],dl
  41c28a:	pop    eax
  41c28b:	sub    BYTE PTR [eax],ch
  41c28d:	iret   
  41c28e:	retf   0xfaf
  41c291:	push   ss
  41c292:	sbb    ebp,DWORD PTR [edi+0x2313be41]
  41c298:	in     al,0x39
  41c29a:	out    dx,al
  41c29b:	dec    esi
  41c29c:	inc    ebp
  41c29d:	xchg   dl,ah
  41c29f:	or     BYTE PTR [esi+0x71b710e7],0xa4
  41c2a6:	push   0x586d0fc9
  41c2ab:	and    eax,0xad21e17c
  41c2b0:	xchg   BYTE PTR [ecx+0x5fd92d08],al
  41c2b6:	jp     0x41c2e7
  41c2b8:	enter  0x7eb2,0xb9
  41c2bc:	jp     0x41c2e1
  41c2be:	in     eax,dx
  41c2bf:	ja     0x41c31a
  41c2c1:	call   0xb726:0x7798e402
  41c2c8:	daa    
  41c2c9:	adc    eax,0x4e77f16a
  41c2ce:	push   0x27
  41c2d0:	and    BYTE PTR [ecx],ah
  41c2d2:	leave  
  41c2d3:	mov    ah,0xbb
  41c2d5:	mov    bl,0x30
  41c2d7:	xchg   ebp,eax
  41c2d8:	outs   dx,DWORD PTR ds:[esi]
  41c2d9:	xchg   edi,eax
  41c2da:	popa   
  41c2db:	pushf  
  41c2dc:	sbb    BYTE PTR [esi+0x5d],dl
  41c2df:	nop
  41c2e0:	inc    edx
  41c2e1:	out    dx,al
  41c2e2:	outs   dx,DWORD PTR ds:[esi]
  41c2e3:	arpl   WORD PTR [esi-0x2731d83e],ax
  41c2e9:	pusha  
  41c2ea:	ss pop esp
  41c2ec:	aaa    
  41c2ed:	adc    al,0xca
  41c2ef:	mov    ah,0xf3
  41c2f1:	call   0xb3b4c352
  41c2f6:	fidiv  DWORD PTR [edi]
  41c2f8:	(bad)  
  41c2f9:	fidivr DWORD PTR [eax+ebp*1+0x6835017e]
  41c300:	pop    es
  41c301:	sub    eax,0xa798d725
  41c306:	mov    WORD PTR [edi-0x2b872260],gs
  41c30c:	adc    cl,BYTE PTR [edx-0x4deffd4]
  41c312:	imul   ebx,DWORD PTR [ecx],0xb0959044
  41c318:	jbe    0x41c2a0
  41c31a:	stos   BYTE PTR es:[edi],al
  41c31b:	dec    eax
  41c31c:	xor    al,0x34
  41c31f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c320:	leave  
  41c321:	test   al,0x35
  41c323:	call   0xd5c1c4eb
  41c328:	mov    DWORD PTR [edx],edx
  41c32a:	outs   dx,BYTE PTR ds:[esi]
  41c32b:	dec    eax
  41c32c:	xchg   ebp,eax
  41c32d:	mov    cl,dl
  41c32f:	mov    dl,0x5
  41c331:	lea    ebx,[ebx]
  41c333:	sbb    ah,BYTE PTR [edi]
  41c335:	pushf  
  41c336:	or     BYTE PTR ss:[ecx+0x686845be],dh
  41c33d:	push   es
  41c33e:	cmp    ebp,DWORD PTR [esi+ecx*4+0x3a4154bc]
  41c345:	jge    0x41c329
  41c347:	cld    
  41c348:	scas   al,BYTE PTR es:[edi]
  41c349:	sbb    BYTE PTR [edx+0x543fe86b],al
  41c34f:	test   al,0xac
  41c351:	ret    0x4fd8
  41c354:	clc    
  41c355:	(bad)  
  41c356:	or     DWORD PTR [eax+0x12fa63a2],esi
  41c35c:	sbb    edi,DWORD PTR [edx+0x65]
  41c35f:	add    ebx,DWORD PTR [edi+0x5f]
  41c362:	add    BYTE PTR [edi+edx*1],ch
  41c365:	(bad)  
  41c367:	fisttp DWORD PTR [edi]
  41c369:	or     dl,0xcb
  41c36c:	retf   0x6d09
  41c36f:	sub    DWORD PTR [eax-0x2d5ac43],esi
  41c375:	mov    bh,BYTE PTR [ebx-0x102cc8a2]
  41c37b:	rcr    BYTE PTR [esi],1
  41c37d:	push   es
  41c37e:	lds    esi,FWORD PTR [eax+0x30]
  41c381:	(bad)  
  41c382:	pop    edx
  41c383:	or     al,0xc7
  41c385:	in     al,dx
  41c386:	add    al,0xae
  41c388:	and    DWORD PTR [ebx+0x8d6983b],edx
  41c38e:	cmc    
  41c38f:	push   ss
  41c390:	pusha  
  41c391:	lahf   
  41c392:	xchg   edx,eax
  41c393:	sub    BYTE PTR [edi+ecx*4+0x3a],ch
  41c397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c398:	repnz pop ecx
  41c39a:	and    eax,0x3aa205ad
  41c39f:	sbb    BYTE PTR [esi-0x13],dh
  41c3a2:	sbb    esp,DWORD PTR [esi+edi*4-0xb7098a6]
  41c3a9:	add    DWORD PTR [eax+esi*4+0x1769f811],ebx
  41c3b0:	inc    eax
  41c3b2:	dec    ecx
  41c3b3:	test   al,0x31
  41c3b5:	arpl   WORD PTR [ebp+edi*1-0x4b587bb8],bp
  41c3bc:	jb     0x41c340
  41c3be:	into   
  41c3bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3c0:	push   ss
  41c3c1:	mov    edx,0x24028b06
  41c3c6:	fldenv [esi-0x6a]
  41c3c9:	lahf   
  41c3ca:	push   ss
  41c3cb:	and    DWORD PTR [ebp+0x7a],eax
  41c3ce:	call   0xd655:0xcf6bfcff
  41c3d5:	(bad)  
  41c3d6:	cmp    ch,BYTE PTR [esi+0x1a]
  41c3d9:	stos   BYTE PTR es:[edi],al
  41c3da:	inc    ecx
  41c3db:	(bad)  
  41c3dc:	mov    edi,0x9cec016
  41c3e1:	cli    
  41c3e2:	jle    0x41c379
  41c3e4:	pop    ebx
  41c3e5:	into   
  41c3e6:	dec    edi
  41c3e7:	cmp    al,0xd3
  41c3e9:	or     DWORD PTR [ebx+0x58],0xffffff94
  41c3ed:	add    al,0x4d
  41c3ef:	dec    esi
  41c3f0:	ret    0xed8a
  41c3f3:	adc    DWORD PTR [edi+0x0],0xfffffff1
  41c3f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3f8:	clc    
  41c3f9:	shr    BYTE PTR [ecx+0x6c47282f],0xb5
  41c400:	out    dx,eax
  41c401:	aad    0x8a
  41c403:	retf   0x1a13
  41c406:	jae    0x41c419
  41c408:	lea    ebp,[ebp+ebx*4-0x48]
  41c40c:	jge    0x41c40c
  41c40e:	lea    edx,fs:[edx-0x6566e590]
  41c415:	mov    bh,0x21
  41c417:	mov    al,0xa6
  41c419:	cmp    al,0xe7
  41c41b:	in     eax,0x4c
  41c41d:	xchg   edi,eax
  41c41e:	cmc    
  41c41f:	mov    bl,0xf8
  41c421:	jg     0x41c483
  41c423:	mov    bh,0x16
  41c425:	ins    DWORD PTR es:[edi],dx
  41c426:	out    0x7d,al
  41c428:	sbb    dl,bl
  41c42a:	ins    DWORD PTR es:[edi],dx
  41c42b:	and    DWORD PTR [esi-0x429a57f0],ebx
  41c431:	mov    ecx,0x8bd5a2de
  41c436:	sbb    al,BYTE PTR [edx]
  41c438:	xchg   DWORD PTR [edi+0xc],edi
  41c43b:	fwait
  41c43c:	sub    edi,edx
  41c43e:	cmp    ebp,DWORD PTR [eax-0x41987fd7]
  41c444:	mov    al,ds:0x17039646
  41c449:	sbb    BYTE PTR [edx-0x18],0x3c
  41c44d:	jp     0x41c3fd
  41c44f:	in     eax,dx
  41c450:	xor    al,0xe6
  41c452:	aas    
  41c453:	push   0x48f5102c
  41c458:	mov    BYTE PTR [esi],al
  41c45a:	dec    esi
  41c45b:	mov    edx,0x3c65834d
  41c460:	or     eax,0x189a79a
  41c465:	nop
  41c466:	stos   BYTE PTR es:[edi],al
  41c467:	pop    esi
  41c468:	fstp   QWORD PTR [ebp+0x7a]
  41c46b:	jmp    0x41c4e0
  41c46d:	test   BYTE PTR [edx],bl
  41c46f:	in     eax,0x7e
  41c471:	lds    esp,FWORD PTR [ebx]
  41c473:	cmp    ebx,DWORD PTR [eax+0x7d]
  41c476:	cmp    eax,0x3ff53d18
  41c47b:	mov    DWORD PTR [eax-0x314aae5f],ebx
  41c481:	mov    bh,ah
  41c483:	rcr    DWORD PTR [ebx],0x9a
  41c486:	jb     0x41c4dc
  41c488:	fild   WORD PTR [edx+0x5d]
  41c48b:	jg     0x41c46e
  41c48d:	icebp  
  41c48e:	adc    al,BYTE PTR [edx-0x8457bda]
  41c494:	fidiv  WORD PTR [edi+ecx*1+0x5926a15e]
  41c49b:	enter  0xcb29,0xc5
  41c49f:	(bad)  
  41c4a0:	fmul   DWORD PTR [edi-0x1e]
  41c4a3:	mov    cl,0x93
  41c4a5:	(bad)  
  41c4a6:	xor    al,0x17
  41c4a8:	or     ah,BYTE PTR [esi]
  41c4aa:	xor    al,0xb8
  41c4ac:	scas   al,BYTE PTR es:[edi]
  41c4ad:	aad    0x3e
  41c4af:	dec    ecx
  41c4b0:	or     BYTE PTR [edx],dl
  41c4b2:	pop    esi
  41c4b3:	scas   eax,DWORD PTR es:[edi]
  41c4b4:	mov    edi,0xfe235e4
  41c4b9:	push   0xffffffd2
  41c4bb:	retf   
  41c4bc:	xchg   DWORD PTR [edx],esi
  41c4be:	daa    
  41c4bf:	xchg   esp,eax
  41c4c0:	dec    ebx
  41c4c1:	dec    edx
  41c4c2:	cld    
  41c4c3:	and    DWORD PTR cs:[ebx+0x3c6c706a],ecx
  41c4ca:	(bad)  
  41c4cb:	enter  0x1212,0x66
  41c4cf:	call   0xf447eed9
  41c4d4:	sbb    ch,BYTE PTR [edx+0x5aad9c88]
  41c4da:	lea    ecx,[esi-0x28c255e6]
  41c4e0:	ja     0x41c557
  41c4e2:	ins    DWORD PTR es:[edi],dx
  41c4e3:	test   al,0xf6
  41c4e5:	fld    QWORD PTR [ebp+ecx*4-0x6d]
  41c4e9:	or     DWORD PTR [edx-0x7],0x8fe58623
  41c4f0:	jmp    0xff10c12d
  41c4f5:	mov    ah,0x66
  41c4f7:	push   eax
  41c4f8:	fld    TBYTE PTR [edi]
  41c4fa:	sub    al,0x2e
  41c4fc:	fsub   st,st(6)
  41c4fe:	test   BYTE PTR [eax+ebx*4-0x4168d7f6],ch
  41c505:	fidivr DWORD PTR [edx+eax*2]
  41c508:	lea    edx,[esi+0x34]
  41c50b:	jl     0x41c51d
  41c50d:	xor    ch,BYTE PTR [eiz*4-0x49829ee1]
  41c514:	sub    BYTE PTR [ecx],ah
  41c516:	sbb    eax,0xf1c374b4
  41c51b:	pop    edi
  41c51c:	or     al,0x4b
  41c51e:	pop    esp
  41c51f:	and    bh,bh
  41c521:	dec    ebx
  41c522:	inc    ecx
  41c523:	fadd   DWORD PTR ds:0x8f91a421
  41c529:	pop    eax
  41c52a:	inc    esi
  41c52b:	add    DWORD PTR [eax+0x6ebbaa1d],ecx
  41c531:	imul   esp,DWORD PTR [edx],0xf9ea1ba7
  41c537:	das    
  41c538:	test   eax,0xacd5a7c8
  41c53d:	les    esp,FWORD PTR [ebp+0x50]
  41c540:	adc    DWORD PTR [edx],ebx
  41c542:	sbb    eax,0x7104f698
  41c547:	pop    es
  41c548:	call   0x37e0:0x12e1ecb8
  41c54f:	clc    
  41c550:	jns    0x41c5cc
  41c552:	xchg   esi,eax
  41c553:	or     BYTE PTR [eax],0xd1
  41c556:	aaa    
  41c557:	scas   al,BYTE PTR es:[edi]
  41c558:	arpl   WORD PTR [eax+0x6f],di
  41c55b:	jo     0x41c51a
  41c55d:	(bad)  
  41c55f:	cmc    
  41c560:	les    ecx,FWORD PTR [ebx+0x1c]
  41c563:	mov    ebp,0xbe3df6c5
  41c568:	call   0x19f5939f
  41c56d:	jg     0x41c5ca
  41c56f:	inc    ecx
  41c570:	sbb    edx,edi
  41c572:	or     esp,ebp
  41c574:	pop    ebx
  41c575:	jns    0x41c5cc
  41c577:	daa    
  41c578:	xchg   edi,eax
  41c579:	sub    eax,0x864f168a
  41c57e:	mov    edx,0xa1d3ba87
  41c583:	dec    edx
  41c584:	call   0xc73a0332
  41c589:	das    
  41c58a:	jb     0x41c59b
  41c58c:	neg    BYTE PTR ds:0x310d2840
  41c592:	cli    
  41c593:	imul   esi,DWORD PTR [ebx-0x3b77c9e6],0x8376276a
  41c59d:	ror    ebx,0xc2
  41c5a0:	push   eax
  41c5a1:	pop    ebx
  41c5a2:	mov    dh,0xb5
  41c5a4:	sbb    BYTE PTR [ebx+0xf64bc2e],cl
  41c5aa:	cmp    DWORD PTR [edx-0x52996870],ecx
  41c5b0:	jmp    0x1b83:0x98f8adc1
  41c5b7:	mov    bl,0xf
  41c5b9:	sbb    BYTE PTR [edx],al
  41c5bb:	jecxz  0x41c555
  41c5bd:	repz scas eax,DWORD PTR es:[edi]
  41c5bf:	xor    DWORD PTR [edx+eiz*8],ebp
  41c5c2:	xor    BYTE PTR [eax],cl
  41c5c4:	push   edx
  41c5c5:	or     al,BYTE PTR [eax+0x6539f7a]
  41c5cb:	and    dl,BYTE PTR [eax+0x42]
  41c5ce:	aam    0x2
  41c5d0:	les    eax,FWORD PTR [edx+edx*1-0x3408f63a]
  41c5d7:	ins    BYTE PTR es:[edi],dx
  41c5d8:	icebp  
  41c5d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5da:	sbb    bh,BYTE PTR [ecx-0x4cbc2976]
  41c5e0:	pop    edi
  41c5e1:	fistp  DWORD PTR cs:[ebx-0xb2163f1]
  41c5e8:	scas   al,BYTE PTR es:[edi]
  41c5e9:	scas   eax,DWORD PTR es:[edi]
  41c5ea:	dec    eax
  41c5eb:	arpl   ax,di
  41c5ed:	loope  0x41c637
  41c5ef:	mov    BYTE PTR [esp+edx*2],bh
  41c5f2:	jecxz  0x41c5ae
  41c5f4:	push   0xc1b41068
  41c5f9:	ds sbb al,0xef
  41c5fc:	push   esi
  41c5fd:	adc    al,bl
  41c5ff:	jmp    0x58772440
  41c604:	icebp  
  41c605:	outs   dx,BYTE PTR ds:[esi]
  41c606:	cs stos BYTE PTR es:[edi],al
  41c608:	enter  0x8ba,0xb0
  41c60c:	sbb    dh,BYTE PTR [esp+edx*2]
  41c60f:	xchg   ebx,eax
  41c610:	shl    DWORD PTR [ebx+0xe],1
  41c613:	dec    eax
  41c614:	retf   
  41c615:	xor    eax,0x56ea3f86
  41c61a:	fst    QWORD PTR [eiz*8+0x51111948]
  41c621:	cmp    edi,DWORD PTR ds:0x6a892dbe
  41c627:	add    ebp,edx
  41c629:	mov    BYTE PTR [edi+0x3f55fa27],ch
  41c62f:	cmp    BYTE PTR [eax],bl
  41c631:	jbe    0x41c680
  41c633:	sbb    BYTE PTR [ecx+0x6b],0x60
  41c637:	dec    edi
  41c638:	rcr    DWORD PTR [ecx-0x29615050],1
  41c63e:	push   ss
  41c63f:	mov    al,0x12
  41c641:	cmp    cl,cl
  41c643:	stc    
  41c644:	push   edi
  41c645:	pop    es
  41c646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c647:	or     bh,BYTE PTR [esi]
  41c649:	mov    dh,0x31
  41c64b:	hlt    
  41c64c:	add    ecx,DWORD PTR [ebx-0x74a15326]
  41c652:	rcr    BYTE PTR [esi-0x47b51e6d],1
  41c658:	add    ecx,ebp
  41c65a:	push   esp
  41c65b:	ss mov eax,0xcfb41301
  41c661:	cmc    
  41c662:	add    ecx,DWORD PTR [ebx]
  41c664:	sbb    ebx,DWORD PTR [edx+0x320cbd03]
  41c66a:	ret    0x4281
  41c66d:	jl     0x41c604
  41c66f:	pusha  
  41c670:	lds    ecx,FWORD PTR [ebx+0x1f4d11fa]
  41c676:	(bad)  
  41c678:	inc    eax
  41c679:	scas   al,BYTE PTR es:[edi]
  41c67a:	js     0x41c694
  41c67c:	imul   esp,DWORD PTR [ebp-0x7f23ef93],0x15
  41c683:	xor    BYTE PTR [eax-0x154bc536],ch
  41c689:	out    0x98,eax
  41c68b:	das    
  41c68c:	push   ss
  41c68d:	jmp    0xa8b1:0x93a8dff0
  41c694:	fbld   TBYTE PTR [eax-0x7b603c35]
  41c69a:	fisub  DWORD PTR [esi]
  41c69c:	test   DWORD PTR [edi-0x6bf54b69],0x5fcf3849
  41c6a6:	test   al,0x2d
  41c6a8:	call   0x7df831f5
  41c6ad:	daa    
  41c6ae:	push   esi
  41c6af:	xchg   esi,eax
  41c6b0:	sbb    ebx,DWORD PTR [edx-0x4b4a7349]
  41c6b6:	pop    ecx
  41c6b7:	jno    0x41c712
  41c6b9:	add    al,0x8e
  41c6bb:	into   
  41c6bc:	arpl   WORD PTR [eax-0x19999f96],cx
  41c6c2:	pop    edx
  41c6c3:	xchg   edi,eax
  41c6c4:	sbb    BYTE PTR [edx+edi*1],bh
  41c6c7:	sub    BYTE PTR [ebp+0x7d],ch
  41c6ca:	sbb    eax,0x36c2bde4
  41c6cf:	sbb    bh,BYTE PTR [esi-0x42715168]
  41c6d5:	test   dl,cl
  41c6d7:	sub    al,0x19
  41c6d9:	mov    edx,0x98c46c8e
  41c6de:	inc    ebx
  41c6df:	ret    0x338f
  41c6e2:	shl    DWORD PTR [esi-0x73],1
  41c6e5:	xchg   dl,bh
  41c6e7:	in     al,0xc4
  41c6e9:	mov    ah,0x10
  41c6eb:	lods   eax,DWORD PTR ds:[esi]
  41c6ec:	lds    ebp,FWORD PTR [edx+0x72aadd1e]
  41c6f2:	dec    eax
  41c6f3:	test   al,0x57
  41c6f5:	push   ecx
  41c6f6:	sbb    DWORD PTR [eax+0x33],esp
  41c6f9:	test   BYTE PTR [edx+0x4a],cl
  41c6fc:	int    0x22
  41c6fe:	outs   dx,BYTE PTR ds:[esi]
  41c6ff:	push   cs
  41c700:	push   edi
  41c701:	pop    ss
  41c702:	cmp    al,0x78
  41c704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c705:	aam    0x57
  41c707:	inc    ebx
  41c708:	mov    BYTE PTR [ebp+0x5b],bh
  41c70b:	scas   al,BYTE PTR es:[edi]
  41c70c:	pop    ecx
  41c70d:	push   ebp
  41c70e:	icebp  
  41c70f:	out    0x17,al
  41c711:	push   0x38
  41c713:	out    dx,eax
  41c714:	inc    edi
  41c715:	(bad)  
  41c716:	pusha  
  41c717:	mov    edx,0xea8c3cbb
  41c71c:	jmp    0x41c6a3
  41c71e:	sub    dh,BYTE PTR [esi+0x59]
  41c721:	shl    BYTE PTR [esi+0x3a0c211b],cl
  41c727:	cmc    
  41c728:	sbb    DWORD PTR [edx],ecx
  41c72a:	push   ecx
  41c72b:	ret    
  41c72c:	mov    eax,ds:0x889cf76
  41c731:	mov    esp,0x5053baed
  41c736:	enter  0x14b1,0x4a
  41c73a:	int    0xe3
  41c73c:	xor    edx,DWORD PTR [ebx-0x2e179603]
  41c742:	mov    ebp,0xaab7c24e
  41c747:	mov    ah,0x19
  41c749:	adc    al,0x41
  41c74b:	mov    ah,0xbc
  41c74d:	jge    0x41c78e
  41c74f:	jecxz  0x41c764
  41c751:	retf   0x8f42
  41c754:	cmp    BYTE PTR [eax],bl
  41c756:	imul   ebp,DWORD PTR gs:[eax-0x58457cfb],0xa552af7
  41c761:	cmp    eax,0x9d8110b
  41c766:	push   edx
  41c767:	adc    bl,BYTE PTR [ecx]
  41c769:	jnp    0x41c775
  41c76b:	push   edx
  41c76c:	lods   al,BYTE PTR ds:[esi]
  41c76d:	adc    BYTE PTR [edi+0x1a6cf77a],dh
  41c773:	scas   eax,DWORD PTR es:[edi]
  41c774:	fwait
  41c775:	rcr    DWORD PTR [ecx+0x4cd3482d],1
  41c77b:	fisubr WORD PTR [esi]
  41c77d:	sub    ah,al
  41c77f:	jne    0x41c77a
  41c781:	or     eax,0x83f80fe5
  41c786:	cli    
  41c787:	xchg   edi,eax
  41c788:	popa   
  41c789:	mov    WORD PTR [edi+0x44d70c33],fs
  41c78f:	and    DWORD PTR [ebx-0x75],ebx
  41c792:	aas    
  41c793:	js     0x41c7c2
  41c795:	int    0x20
  41c797:	fistp  DWORD PTR [eax]
  41c799:	mov    ds:0x8f8fb578,eax
  41c79e:	add    BYTE PTR [esi+0x3938ca12],bl
  41c7a4:	add    esi,edi
  41c7a6:	ins    BYTE PTR es:[edi],dx
  41c7a7:	in     al,0x74
  41c7a9:	pop    ebx
  41c7aa:	outs   dx,DWORD PTR ds:[esi]
  41c7ab:	or     BYTE PTR [ebx-0x78],al
  41c7ae:	sub    al,BYTE PTR [ebx+ecx*4-0x72b0a932]
  41c7b5:	or     eax,0x272b9833
  41c7ba:	xor    eax,0x3396cfc9
  41c7bf:	mov    ds:0x1cebc60c,eax
  41c7c4:	shl    DWORD PTR [ebx],0x2b
  41c7c7:	mov    WORD PTR ds:0xbba832ec,?
  41c7cd:	push   ebx
  41c7ce:	imul   edx,DWORD PTR [esi],0xb004e128
  41c7d4:	mov    ebp,0x1133a7a6
  41c7d9:	fisubr DWORD PTR [edx-0x4d452237]
  41c7df:	dec    edi
  41c7e0:	leave  
  41c7e1:	outs   dx,DWORD PTR ds:[esi]
  41c7e2:	and    BYTE PTR [edi],al
  41c7e4:	(bad)  
  41c7e5:	xchg   BYTE PTR [edx-0x2b],bl
  41c7e8:	jne    0x41c778
  41c7ea:	in     eax,dx
  41c7eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7ec:	cmp    BYTE PTR [ecx+ecx*1+0x8],cl
  41c7f0:	sbb    edx,DWORD PTR [esi]
  41c7f2:	hlt    
  41c7f3:	adc    bh,dh
  41c7f5:	imul   edi,DWORD PTR [edi+0xcc6bf44],0xa5c82f29
  41c7ff:	push   ds
  41c800:	mov    ds:0xdb5d072,al
  41c805:	sub    al,BYTE PTR [eax-0x6e]
  41c808:	xchg   bp,ax
  41c80a:	jecxz  0x41c828
  41c80c:	push   0xc46f9aa2
  41c811:	nop
  41c812:	mov    ch,bl
  41c814:	fisub  WORD PTR [ebp+0x4a13cc69]
  41c81a:	sbb    DWORD PTR [ecx-0x363646ba],ebp
  41c820:	push   edi
  41c821:	adc    dh,BYTE PTR [ebp+0x486cd8c8]
  41c827:	mov    ecx,0xcba1446b
  41c82c:	sar    BYTE PTR [edx+0x29b8eb86],0x40
  41c833:	in     eax,dx
  41c834:	mov    eax,ebp
  41c836:	mov    BYTE PTR [ecx],dh
  41c838:	das    
  41c839:	ret    0x8d79
  41c83c:	or     edi,DWORD PTR [edx+ecx*4-0x2b]
  41c840:	pusha  
  41c841:	mov    edx,DWORD PTR [esi+0x78]
  41c844:	adc    dl,bl
  41c846:	aad    0x18
  41c848:	xor    al,0x5b
  41c84a:	cmp    al,0xaf
  41c84c:	shl    BYTE PTR ds:0x8f4efd07,1
  41c852:	dec    ecx
  41c853:	xchg   ecx,eax
  41c854:	shl    DWORD PTR [ebx-0x19],cl
  41c857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c858:	cli    
  41c859:	xchg   ebx,eax
  41c85a:	cmp    al,0xfe
  41c85c:	(bad)  
  41c85d:	jmp    0x6d26:0x1057d83a
  41c864:	test   DWORD PTR ds:0x4bf8b006,ecx
  41c86a:	pop    es
  41c86b:	mov    edx,0x4e2f9c43
  41c870:	in     al,0xf3
  41c872:	sti    
  41c873:	loopne 0x41c8cb
  41c875:	jge    0x41c8ad
  41c877:	clc    
  41c878:	or     dl,BYTE PTR [ecx+0x69]
  41c87b:	call   0xb22d14b8
  41c880:	add    bh,0x56
  41c883:	adc    edx,DWORD PTR [esi]
  41c885:	mov    edx,0x71445527
  41c88a:	sbb    BYTE PTR [esi-0x37],0x6
  41c88e:	out    dx,eax
  41c88f:	ja     0x41c8a4
  41c891:	retf   0xbf3f
  41c894:	pop    ebp
  41c895:	sbb    esi,DWORD PTR [ebx-0x73]
  41c898:	xchg   esi,eax
  41c899:	ror    DWORD PTR [edx+0x50],1
  41c89c:	into   
  41c89d:	jae    0x41c8c2
  41c89f:	xchg   edi,eax
  41c8a0:	mov    ebx,0xf5d03fb9
  41c8a5:	sti    
  41c8a6:	jmp    0x41c876
  41c8a8:	pop    esi
  41c8a9:	cli    
  41c8aa:	cmp    BYTE PTR [edi],0xb0
  41c8ad:	xor    bh,ch
  41c8af:	cmp    dl,BYTE PTR [ebx]
  41c8b1:	mov    dl,dh
  41c8b3:	adc    al,0xfa
  41c8b5:	outs   dx,BYTE PTR ds:[esi]
  41c8b6:	inc    esi
  41c8b7:	lahf   
  41c8b8:	fidivr WORD PTR [esi]
  41c8ba:	(bad)  
  41c8bc:	adc    cl,BYTE PTR [edx]
  41c8be:	sub    eax,0xf3c1191d
  41c8c3:	sub    eax,0x846c8a0d
  41c8c8:	daa    
  41c8c9:	test   DWORD PTR [ecx],ebx
  41c8cb:	dec    eax
  41c8cc:	test   BYTE PTR [ecx+0x39],bl
  41c8cf:	cld    
  41c8d0:	sti    
  41c8d1:	(bad)  
  41c8d2:	cli    
  41c8d3:	and    eax,0x960c575e
  41c8d8:	inc    esi
  41c8d9:	sahf   
  41c8da:	dec    esi
  41c8db:	mov    eax,0x3cf01a6c
  41c8e0:	nop
  41c8e1:	xchg   ebx,eax
  41c8e2:	test   DWORD PTR [ebx-0x9],0x74958a48
  41c8e9:	xor    al,0xaa
  41c8eb:	mov    al,0xd
  41c8ed:	dec    edx
  41c8ee:	in     al,0x81
  41c8f0:	in     al,0xf5
  41c8f2:	add    DWORD PTR [esi],esi
  41c8f4:	push   edi
  41c8f5:	aad    0x8
  41c8f7:	adc    eax,0xb2ba8b0c
  41c8fc:	jge    0x41c8b0
  41c8fe:	stos   BYTE PTR es:[edi],al
  41c8ff:	popa   
  41c900:	das    
  41c901:	mov    ebx,0xc022df2d
  41c906:	lock in al,dx
  41c908:	mov    al,bh
  41c90a:	ins    BYTE PTR es:[edi],dx
  41c90b:	xor    al,0xa7
  41c90d:	setne  BYTE PTR [ebx-0x5f557d2f]
  41c914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c915:	cmp    al,0x0
  41c917:	leave  
  41c918:	out    0x1b,al
  41c91a:	ss dec eax
  41c91c:	cmp    cl,BYTE PTR [eax-0x5d7087a]
  41c922:	aad    0xb8
  41c924:	push   cs
  41c925:	mov    esi,0x8a12f1c3
  41c92a:	daa    
  41c92b:	sti    
  41c92c:	add    esp,DWORD PTR [edi+eax*1+0x17]
  41c930:	mov    esp,0xa663261c
  41c935:	xchg   ebp,eax
  41c936:	mov    edx,0x4e5268d1
  41c93b:	inc    edx
  41c93c:	adc    al,0xa
  41c93e:	(bad)  
  41c93f:	lahf   
  41c940:	(bad)  
  41c942:	lods   al,BYTE PTR ds:[esi]
  41c943:	je     0x41c971
  41c945:	aad    0x7f
  41c947:	je     0x41c975
  41c949:	ror    DWORD PTR [edi+edi*4-0x67917575],1
  41c950:	aam    0xda
  41c952:	inc    edi
  41c953:	xor    DWORD PTR [esi],ecx
  41c955:	jmp    0x41c8fd
  41c957:	shl    bl,0xc0
  41c95a:	cmp    eax,0xe18d52f4
  41c95f:	cmp    DWORD PTR ds:0x9b85912,edx
  41c965:	cmp    DWORD PTR [ebp+0x18ca6f1f],esi
  41c96b:	mov    al,ds:0xe83baa68
  41c970:	fiadd  DWORD PTR [edx+0x590dc0c]
  41c976:	lahf   
  41c977:	ss mov esi,0xb0d0fa88
  41c97d:	adc    eax,esi
  41c97f:	dec    edi
  41c980:	xchg   esi,eax
  41c981:	lods   al,BYTE PTR ds:[esi]
  41c982:	mov    bl,0xbc
  41c984:	clc    
  41c985:	and    DWORD PTR [edx],0x654f8f72
  41c98b:	fcomp  DWORD PTR [edx]
  41c98d:	sbb    ch,BYTE PTR [ebp+0x73]
  41c990:	push   edi
  41c991:	xchg   ebp,eax
  41c992:	adc    DWORD PTR [ebx+0x1f87ca15],0x42
  41c999:	jne    0x41c9bc
  41c99b:	mov    dl,0x80
  41c99d:	mov    esp,DWORD PTR [ecx+0x1eea12a6]
  41c9a3:	call   0x6a14:0x8ac39571
  41c9aa:	push   cs
  41c9ab:	mov    ?,WORD PTR [eax-0x7d]
  41c9ae:	adc    BYTE PTR [ebx],dh
  41c9b0:	sub    DWORD PTR [eax-0x24a3c52],ebp
  41c9b6:	dec    edx
  41c9b7:	leave  
  41c9b8:	sbb    al,0x2a
  41c9ba:	ins    DWORD PTR es:[edi],dx
  41c9bb:	jp     0x41c951
  41c9bd:	sub    DWORD PTR [edx],esi
  41c9bf:	sbb    al,0xd9
  41c9c1:	inc    esp
  41c9c2:	sub    al,0x33
  41c9c4:	and    DWORD PTR [eax+ecx*2],ebp
  41c9c7:	enter  0xff96,0x38
  41c9cb:	in     eax,0x28
  41c9cd:	aas    
  41c9ce:	pushf  
  41c9cf:	mov    bl,0xf5
  41c9d1:	cmp    edi,eax
  41c9d3:	add    DWORD PTR [ebx],esi
  41c9d5:	cmp    eax,0x57b33a3e
  41c9da:	in     eax,dx
  41c9db:	stos   BYTE PTR es:[edi],al
  41c9dc:	cdq    
  41c9dd:	mov    edx,DWORD PTR [esi-0x52]
  41c9e0:	cwde   
  41c9e1:	imul   ecx
  41c9e3:	les    eax,FWORD PTR [edx+0x6be5d15a]
  41c9e9:	test   eax,0x79fb74ff
  41c9ee:	cmp    eax,0xbe333f68
  41c9f3:	test   DWORD PTR [eax+0x55],0xb404b112
  41c9fa:	arpl   bx,bp
  41c9fc:	inc    ebp
  41c9fd:	sahf   
  41c9fe:	stc    
  41c9ff:	adc    edi,ecx
  41ca01:	or     DWORD PTR [esi],esp
  41ca03:	inc    eax
  41ca04:	sub    BYTE PTR [esi],bl
  41ca06:	xchg   BYTE PTR [ebp+0x10194c4f],ch
  41ca0c:	mov    al,BYTE PTR [edx+edi*2+0x4c0d41a0]
  41ca13:	pop    ebx
  41ca14:	in     al,0xdd
  41ca16:	xor    ecx,DWORD PTR [eax+0xfc54755]
  41ca1c:	mov    esp,0x608e8081
  41ca21:	fidivr WORD PTR [esi]
  41ca23:	push   eax
  41ca24:	and    ecx,ecx
  41ca26:	or     BYTE PTR [ecx+0x4f08038d],bh
  41ca2c:	sbb    eax,0x81fab1d2
  41ca31:	or     BYTE PTR [edx],0xa
  41ca34:	push   ebp
  41ca35:	pop    es
  41ca36:	push   edx
  41ca37:	mov    ds:0xf83a044f,eax
  41ca3c:	sti    
  41ca3d:	aas    
  41ca3e:	xor    bl,BYTE PTR [ecx]
  41ca40:	lahf   
  41ca41:	jne    0x41c9ff
  41ca43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca44:	leave  
  41ca45:	pop    edx
  41ca46:	xchg   ebp,eax
  41ca47:	shr    ch,1
  41ca49:	es enter 0xabc8,0xfa
  41ca4e:	pop    ebx
  41ca4f:	and    al,0x16
  41ca52:	jae    0x41ca08
  41ca54:	pop    ss
  41ca55:	jmp    0xde3a:0x1d1f9e74
  41ca5c:	mov    dh,0x13
  41ca5e:	popf   
  41ca5f:	lods   eax,DWORD PTR ds:[esi]
  41ca60:	inc    edi
  41ca61:	call   0x6892:0x48dcc7ba
  41ca68:	sbb    BYTE PTR [eax-0x19],bh
  41ca6b:	and    al,0x3b
  41ca6d:	mov    ebp,0x2cce1b40
  41ca72:	sub    DWORD PTR [eax],edx
  41ca74:	adc    BYTE PTR [esp+esi*8+0x5e571823],cl
  41ca7b:	mov    ah,0x46
  41ca7d:	scas   al,BYTE PTR es:[edi]
  41ca7e:	in     al,0x17
  41ca80:	fucomi st,st(2)
  41ca82:	mov    edx,0xc0d9dad3
  41ca87:	jb     0x41caae
  41ca89:	(bad)  
  41ca8a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41ca8c:	fcom   DWORD PTR [ebx]
  41ca8e:	xchg   esi,eax
  41ca8f:	mov    ebx,0x545f70c0
  41ca94:	adc    edi,DWORD PTR [edx]
  41ca96:	ret    
  41ca97:	mov    cl,0xa7
  41ca99:	ds pop ds
  41ca9b:	jmp    0x8916a937
  41caa0:	lds    ecx,FWORD PTR [ebx+0x6f543e6a]
  41caa6:	fsubp  st(7),st
  41caa8:	push   eax
  41caa9:	lock xor al,0x88
  41caac:	push   ecx
  41caad:	push   0x4be82c3f
  41cab2:	or     DWORD PTR [ebx+0x68e10c0e],edi
  41cab8:	sbb    cl,BYTE PTR [edx]
  41caba:	mov    ecx,0x1271355b
  41cabf:	into   
  41cac0:	ins    BYTE PTR es:[edi],dx
  41cac1:	fld    DWORD PTR [edi]
  41cac4:	mov    gs,WORD PTR ds:[edx]
  41cac7:	cmp    DWORD PTR [ecx],edi
  41cac9:	imul   eax,DWORD PTR [edx+0x7d],0xffffffb8
  41cacd:	std    
  41cace:	jecxz  0x41ca6f
  41cad0:	fsub   DWORD PTR [esi-0x4d]
  41cad3:	mov    dl,0x74
  41cad5:	lahf   
  41cad6:	mov    bl,0xfc
  41cad8:	test   al,0x24
  41cada:	mov    bh,bl
  41cadc:	aad    0x59
  41cade:	jecxz  0x41cad0
  41cae0:	xchg   dx,ax
  41cae2:	mov    dh,0x2a
  41cae4:	push   esp
  41cae5:	mov    eax,0x2b20383f
  41caea:	and    eax,0xd01948e1
  41caef:	mov    ecx,0x2aef8278
  41caf4:	push   ecx
  41caf5:	(bad)  
  41caf6:	sub    ebx,ebx
  41caf8:	test   al,0xff
  41cafa:	out    dx,al
  41cafb:	mov    ah,0xbe
  41cafd:	xchg   esp,eax
  41cafe:	mov    dl,0xb4
  41cb00:	mov    BYTE PTR [ebx+0x28eeaef7],dh
  41cb06:	aas    
  41cb07:	jmp    0xbb07b61b
  41cb0c:	xor    BYTE PTR [esp],ch
  41cb0f:	dec    edi
  41cb10:	and    BYTE PTR [esi],bl
  41cb12:	lods   eax,DWORD PTR ds:[esi]
  41cb14:	mov    dh,0x5d
  41cb16:	ds adc cl,0x85
  41cb1a:	cmp    al,BYTE PTR [edx+0x7e]
  41cb1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb1e:	mov    bl,0xf9
  41cb20:	and    ah,dh
  41cb22:	cmp    ebp,DWORD PTR [eax]
  41cb24:	sbb    ebx,DWORD PTR gs:[ebx-0x23]
  41cb28:	call   0x57f21ec7
  41cb2d:	fisttp WORD PTR [ecx]
  41cb2f:	push   es
  41cb30:	(bad)  
  41cb31:	sbb    ch,ch
  41cb33:	jbe    0x41cb5d
  41cb35:	int3   
  41cb36:	outs   dx,DWORD PTR ds:[esi]
  41cb37:	mov    DWORD PTR [eax-0x5f],eax
  41cb3a:	dec    esi
  41cb3b:	scas   eax,DWORD PTR es:[edi]
  41cb3c:	sub    al,0x44
  41cb3e:	cmp    DWORD PTR es:[esi],ebp
  41cb41:	jae    0x41cb7a
  41cb43:	clc    
  41cb44:	and    ebp,DWORD PTR [edi-0x1e]
  41cb47:	(bad)  [esi]
  41cb49:	xchg   BYTE PTR [ebx],bh
  41cb4b:	fsubr  DWORD PTR [ebx+edi*8]
  41cb4e:	out    dx,al
  41cb4f:	mov    edi,0xb0545858
  41cb54:	cli    
  41cb55:	or     eax,0x1a183465
  41cb5a:	cmp    al,0x82
  41cb5c:	ins    BYTE PTR es:[edi],dx
  41cb5d:	repz mov WORD PTR [ebx],gs
  41cb60:	dec    edi
  41cb61:	cmp    edx,ebp
  41cb63:	out    dx,eax
  41cb64:	stos   DWORD PTR es:[edi],eax
  41cb65:	lock pop esp
  41cb67:	aaa    
  41cb68:	sub    DWORD PTR [edi+0x1a1a95d2],eax
  41cb6e:	mov    cl,0x4c
  41cb70:	out    dx,eax
  41cb71:	test   BYTE PTR [ebx-0x568ba2f8],al
  41cb77:	retf   
  41cb78:	mov    esi,0x496d1a88
  41cb7d:	mov    BYTE PTR [ebp+0x3684d6c1],dl
  41cb83:	mov    eax,0xb698653c
  41cb88:	push   0xd8e5f47d
  41cb8d:	(bad)  
  41cb8f:	xlat   BYTE PTR ds:[ebx]
  41cb90:	adc    BYTE PTR [edi-0x4558661b],al
  41cb96:	push   edi
  41cb97:	xchg   DWORD PTR [ebx],edx
  41cb99:	pushf  
  41cb9a:	lahf   
  41cb9b:	iret   
  41cb9c:	in     eax,0x83
  41cb9e:	xor    al,0x90
  41cba0:	enter  0x1d14,0xb2
  41cba4:	(bad)  
  41cba5:	aad    0x4e
  41cba7:	add    ah,BYTE PTR [ebp+0x6b]
  41cbaa:	fwait
  41cbab:	mov    BYTE PTR [esi],bl
  41cbad:	mov    dh,BYTE PTR [ecx]
  41cbaf:	repnz mov DWORD PTR [ebp+eax*1-0xd],edi
  41cbb4:	sbb    ebp,DWORD PTR [ebp+ebp*2+0x1b4ce80b]
  41cbbb:	in     al,0x37
  41cbbd:	dec    ebp
  41cbbe:	mov    eax,edx
  41cbc0:	adc    bl,BYTE PTR [ecx+0x35]
  41cbc3:	out    0x66,al
  41cbc5:	dec    eax
  41cbc6:	cmp    ch,BYTE PTR [eax]
  41cbc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbc9:	push   es
  41cbca:	call   ebx
  41cbcc:	outs   dx,DWORD PTR ds:[esi]
  41cbcd:	test   al,0xa9
  41cbcf:	pop    ds
  41cbd0:	jo     0x41cbf6
  41cbd2:	mov    ebx,0x7b990d3
  41cbd7:	adc    bl,BYTE PTR [esi-0x231e742d]
  41cbdd:	mov    ecx,0x1df6283e
  41cbe2:	mov    fs,WORD PTR [eax+ebx*8+0x5abbcdcd]
  41cbe9:	stos   BYTE PTR es:[edi],al
  41cbea:	inc    esi
  41cbeb:	fistp  DWORD PTR [ecx-0x62]
  41cbee:	loop   0x41cbf7
  41cbf0:	pusha  
  41cbf1:	jnp    0x41cbfc
  41cbf3:	mov    ecx,0x3f8f5a5e
  41cbf8:	mov    BYTE PTR [ecx],al
  41cbfa:	call   0x4c267bad
  41cbff:	push   0x72a39ac9
  41cc04:	add    ebx,DWORD PTR [ebp*4-0x5148e64c]
  41cc0b:	sbb    al,0x8c
  41cc0d:	mov    edi,DWORD PTR [ebp-0x4e]
  41cc10:	arpl   cx,bx
  41cc12:	or     al,0xc6
  41cc14:	xor    esi,DWORD PTR [ecx+0x4ac17ec6]
  41cc1a:	ss pop ecx
  41cc1c:	sbb    dl,bh
  41cc1e:	xor    al,0x99
  41cc20:	ror    BYTE PTR [edx+0x25],cl
  41cc23:	sub    eax,0xc3bbdbc4
  41cc28:	mov    eax,DWORD PTR [esi-0x64b31d76]
  41cc2e:	int    0x50
  41cc30:	clc    
  41cc31:	retf   0xe00b
  41cc34:	cmp    ebx,0x4675f0df
  41cc3a:	je     0x41cc68
  41cc3c:	enter  0xb7f7,0xb7
  41cc40:	sbb    edi,edx
  41cc42:	iret   
  41cc43:	popf   
  41cc44:	adc    edi,edx
  41cc46:	cmp    eax,0x26175613
  41cc4b:	xor    ah,al
  41cc4d:	stos   BYTE PTR es:[edi],al
  41cc4e:	inc    eax
  41cc4f:	test   al,0x11
  41cc51:	retf   0xb6de
  41cc54:	inc    edx
  41cc55:	dec    edi
  41cc56:	(bad)  
  41cc57:	out    0x19,eax
  41cc59:	retf   0xdf6b
  41cc5c:	rcr    al,1
  41cc5e:	loopne 0x41ccd6
  41cc60:	xor    DWORD PTR [edi],eax
  41cc62:	out    dx,eax
  41cc63:	js     0x41cc80
  41cc65:	(bad)  
  41cc66:	ficomp DWORD PTR [edi+0x1a]
  41cc69:	push   eax
  41cc6a:	pop    DWORD PTR [ebp+edi*4-0x71f7bae1]
  41cc71:	sub    ebx,DWORD PTR [ecx]
  41cc73:	and    dh,dh
  41cc75:	jae    0x41ccae
  41cc77:	loope  0x41cca1
  41cc79:	sub    dl,0x43
  41cc7c:	imul   edx,DWORD PTR [edx],0xa10bbacd
  41cc82:	cmp    al,0x28
  41cc84:	dec    ecx
  41cc85:	iret   
  41cc86:	xchg   esi,eax
  41cc87:	aaa    
  41cc88:	mov    al,0x9e
  41cc8a:	fdivr  QWORD PTR [eax]
  41cc8c:	sub    DWORD PTR [ebp+0x3c5ce58a],eax
  41cc92:	lea    ebx,[ebx-0x71e8ca8f]
  41cc98:	movzx  ebx,BYTE PTR [esi+eax*4]
  41cc9c:	lea    eax,[esi-0x7d]
  41cc9f:	out    dx,al
  41cca0:	int3   
  41cca1:	test   al,0x1
  41cca3:	dec    edx
  41cca4:	enter  0x35f8,0x38
  41cca8:	sub    eax,0xcb70c137
  41ccad:	aaa    
  41ccae:	xor    eax,0x744c6078
  41ccb3:	adc    BYTE PTR [ecx+0x4e761719],bh
  41ccb9:	cwde   
  41ccba:	push   0x27
  41ccbc:	and    eax,0x7b7d1aac
  41ccc1:	xchg   ebp,eax
  41ccc2:	daa    
  41ccc3:	scas   al,BYTE PTR es:[edi]
  41ccc4:	push   ebx
  41ccc5:	add    DWORD PTR ds:0xee04efa8,esi
  41cccb:	mov    bl,BYTE PTR [eax+0x6bbb0625]
  41ccd1:	jg     0x41cd0e
  41ccd3:	fisttp QWORD PTR [edi-0x54]
  41ccd6:	add    eax,ecx
  41ccd8:	push   ss
  41ccd9:	jb     0x41cc67
  41ccdb:	ss dec ebp
  41ccdd:	call   0x181a8c37
  41cce2:	mov    ?,WORD PTR [ebp+0x53a7cb93]
  41cce8:	sbb    edi,DWORD PTR [edx+0x20]
  41cceb:	inc    ebp
  41ccec:	push   esp
  41cced:	mov    ebp,es
  41ccef:	push   ss
  41ccf0:	(bad)  
  41ccf1:	frstor ds:0x2a890ecd
  41ccf7:	and    ecx,edi
  41ccf9:	dec    ecx
  41ccfa:	xor    al,0x53
  41ccfc:	push   ebx
  41ccfd:	cdq    
  41ccfe:	or     DWORD PTR [ebx],edx
  41cd00:	ins    DWORD PTR es:[edi],dx
  41cd01:	loopne 0x41ccbe
  41cd03:	jmp    0xb880be05
  41cd08:	push   eax
  41cd09:	xor    DWORD PTR [eax+0x15053816],ecx
  41cd0f:	loop   0x41cd41
  41cd11:	mov    BYTE PTR [ebx+eiz*1-0x75adf1f2],bh
  41cd18:	cvtps2pd xmm3,xmm2
  41cd1b:	iret   
  41cd1c:	fwait
  41cd1d:	mov    ah,0x1
  41cd1f:	cdq    
  41cd20:	mov    edi,0x3c0b4762
  41cd25:	xchg   DWORD PTR [edx],ebx
  41cd27:	pop    ecx
  41cd28:	test   eax,0x71d197f9
  41cd2d:	hlt    
  41cd2e:	jmp    0x41ccbf
  41cd30:	and    BYTE PTR [eax],al
  41cd32:	xlat   BYTE PTR ds:[ebx]
  41cd33:	mov    ah,0xf5
  41cd35:	lea    esi,[ecx]
  41cd37:	data16 mov al,BYTE PTR [ebp+0x7f415f9a]
  41cd3e:	and    bl,BYTE PTR [esi-0x18]
  41cd41:	outs   dx,DWORD PTR ds:[esi]
  41cd42:	cmp    eax,0x1f79eb8
  41cd47:	cmc    
  41cd48:	mov    ecx,0x14ad8362
  41cd4d:	or     bl,BYTE PTR [edi-0x9017003]
  41cd53:	pop    esi
  41cd54:	or     eax,0xe542937a
  41cd59:	xchg   esp,eax
  41cd5a:	jl     0x41cd4b
  41cd5c:	sbb    ch,bh
  41cd5e:	(bad)  
  41cd61:	lea    ebp,[edx-0x41]
  41cd64:	lds    esi,FWORD PTR [esi]
  41cd66:	push   eax
  41cd67:	mov    ecx,ebp
  41cd69:	pop    esi
  41cd6a:	cmp    al,0x38
  41cd6c:	mov    al,0x88
  41cd6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd6f:	pop    ds
  41cd70:	mov    eax,0x4ead27ec
  41cd75:	ss pop es
  41cd77:	ja     0x41cd90
  41cd79:	stos   BYTE PTR es:[edi],al
  41cd7a:	mov    al,0xec
  41cd7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd7d:	cmovns esp,DWORD PTR [eax+0x3e]
  41cd81:	ins    DWORD PTR es:[edi],dx
  41cd82:	leave  
  41cd83:	fstp   TBYTE PTR [edx]
  41cd85:	je     0x41cd22
  41cd87:	xchg   esp,eax
  41cd88:	pop    ds
  41cd89:	sub    DWORD PTR [edx-0x48e5ef94],0xffffff9c
  41cd90:	mov    al,ds:0x802acac3
  41cd95:	test   al,0x99
  41cd97:	inc    BYTE PTR [edx*8-0x76da56f4]
  41cd9e:	scas   al,BYTE PTR es:[edi]
  41cd9f:	mov    ch,0xd
  41cda1:	cmp    bl,BYTE PTR [ebp+0x56]
  41cda4:	shl    DWORD PTR [edi+0x3cac1d30],1
  41cdaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdab:	daa    
  41cdac:	mov    ecx,0x110fda81
  41cdb1:	fsubr  st(0),st
  41cdb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdb4:	xchg   ebp,eax
  41cdb5:	stos   DWORD PTR es:[edi],eax
  41cdb6:	xor    al,0x18
  41cdb8:	int3   
  41cdb9:	jnp    0x41cd8a
  41cdbb:	add    ebp,DWORD PTR [edi-0x5adec0db]
  41cdc1:	xchg   esi,eax
  41cdc2:	out    dx,al
  41cdc3:	add    dl,BYTE PTR [ebx-0x78]
  41cdc6:	xor    eax,0xbd958bfe
  41cdcb:	ins    BYTE PTR es:[edi],dx
  41cdcc:	fmul   DWORD PTR [ebp-0x58ca5ff6]
  41cdd2:	jmp    0xc146d640
  41cdd7:	(bad)  
  41cdd8:	xor    DWORD PTR ds:0x47c11dd3,ebp
  41cdde:	lods   al,BYTE PTR ds:[esi]
  41cddf:	mov    bl,0x48
  41cde1:	pop    esp
  41cde2:	into   
  41cde3:	fsub   QWORD PTR [ecx]
  41cde5:	mov    cl,BYTE PTR [edx-0x1a9bd299]
  41cdeb:	pop    edx
  41cdec:	pop    edx
  41cded:	mov    edi,DWORD PTR [edx]
  41cdef:	into   
  41cdf0:	xlat   BYTE PTR ds:[ebx]
  41cdf1:	push   esi
  41cdf2:	out    dx,eax
  41cdf3:	nop
  41cdf4:	xchg   ebp,eax
  41cdf5:	cdq    
  41cdf6:	cmp    ebx,DWORD PTR [eax+0x51e35844]
  41cdfc:	clc    
  41cdfd:	jnp    0x41cdcc
  41cdff:	leave  
  41ce00:	inc    ax
  41ce02:	fidivr DWORD PTR [ebx-0x4498835]
  41ce08:	mov    edi,DWORD PTR [edx-0xc]
  41ce0b:	imul   ebp,DWORD PTR ds:0x61638de,0x3984313c
  41ce15:	loopne 0x41ce30
  41ce17:	pop    ss
  41ce18:	mov    ecx,0x3e695a89
  41ce1d:	(bad)  
  41ce1e:	icebp  
  41ce1f:	inc    esi
  41ce20:	fisttp QWORD PTR [eax+0x33]
  41ce23:	js     0x41cdb0
  41ce25:	add    al,0xd3
  41ce27:	aas    
  41ce28:	clc    
  41ce29:	test   eax,0xeb3ab4ec
  41ce2e:	mov    al,ds:0x7d7a185e
  41ce33:	or     DWORD PTR [ebx],ebp
  41ce35:	ins    DWORD PTR es:[edi],dx
  41ce36:	imul   ebp,DWORD PTR [edx-0x2e],0xf481e755
  41ce3d:	sub    BYTE PTR [edx+0x49],0xa9
  41ce41:	pop    eax
  41ce42:	int3   
  41ce43:	ja     0x41ce5c
  41ce45:	fcomi  st,st(5)
  41ce47:	add    dh,cl
  41ce49:	dec    esp
  41ce4a:	cmp    al,BYTE PTR [edi-0x4bc93369]
  41ce50:	test   al,0xa1
  41ce52:	mov    ecx,0x8994c0b5
  41ce57:	fcomp  QWORD PTR [ecx]
  41ce59:	pop    edx
  41ce5a:	(bad)  
  41ce5b:	push   esp
  41ce5c:	imul   ebp,DWORD PTR [edi],0x68ca4ad3
  41ce62:	push   ds
  41ce63:	arpl   WORD PTR [edi-0x7b],sp
  41ce66:	jmp    0x8727:0xabfc0e82
  41ce6d:	les    edx,FWORD PTR [esi+ebp*1]
  41ce70:	jo     0x41cea8
  41ce72:	arpl   ax,bp
  41ce74:	dec    eax
  41ce75:	dec    esp
  41ce76:	xor    BYTE PTR [ebx],dh
  41ce78:	lahf   
  41ce79:	mov    ecx,0x7eee27f4
  41ce7e:	ret    
  41ce7f:	idiv   ebx
  41ce81:	mov    ebp,DWORD PTR [eax+esi*1-0x124e7523]
  41ce88:	cs data16 xor al,0x28
  41ce8c:	jnp    0x41cee7
  41ce8e:	cmp    al,0x1d
  41ce90:	cwde   
  41ce91:	jp     0x41cec3
  41ce93:	lods   al,BYTE PTR ds:[esi]
  41ce94:	lea    ecx,[edi+0x3e]
  41ce97:	fwait
  41ce98:	sar    BYTE PTR [edx-0x3e],0x3b
  41ce9c:	std    
  41ce9d:	push   es
  41ce9e:	jg     0x41ce41
  41cea0:	test   DWORD PTR [edx+0x6f],0x1c3068b1
  41cea7:	lods   al,BYTE PTR ds:[esi]
  41cea8:	pop    eax
  41cea9:	push   ebp
  41ceaa:	push   eax
  41ceab:	sbb    DWORD PTR ds:0x64cd337a,edx
  41ceb1:	std    
  41ceb2:	push   es
  41ceb3:	pop    eax
  41ceb4:	fiadd  WORD PTR [ebx-0x5f]
  41ceb7:	mov    ch,0x9c
  41ceb9:	xchg   DWORD PTR [edx-0x65b774d3],ecx
  41cebf:	shl    DWORD PTR [eax+0x7e],1
  41cec2:	lods   eax,DWORD PTR ds:[esi]
  41cec3:	outs   dx,DWORD PTR ds:[esi]
  41cec4:	sbb    eax,0xccf59546
  41cec9:	or     BYTE PTR [edx-0xe],ah
  41cecc:	or     BYTE PTR [edi],dl
  41cece:	call   0x12d7:0xadb9e9ae
  41ced5:	call   0x5bd2:0x66aa59b6
  41cedc:	pop    ds
  41cedd:	retf   0x50de
  41cee0:	push   esi
  41cee1:	nop
  41cee2:	stos   BYTE PTR es:[edi],al
  41cee3:	adc    al,0xf9
  41cee5:	jp     0x41cf0d
  41cee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cee8:	push   cs
  41cee9:	mov    cl,BYTE PTR [eax-0x61]
  41ceec:	xchg   DWORD PTR [edx-0x39],ebx
  41ceef:	adc    BYTE PTR ds:0xc62f4ee5,dl
  41cef5:	mov    bl,0x8a
  41cef7:	ins    BYTE PTR es:[edi],dx
  41cef8:	adc    DWORD PTR [ebx],edi
  41cefa:	sbb    BYTE PTR [ebx],ch
  41cefc:	aaa    
  41cefd:	(bad)  [edi]
  41ceff:	out    0xa9,eax
  41cf01:	rol    edx,cl
  41cf03:	hlt    
  41cf04:	add    DWORD PTR [ebx+0xe13d262],eax
  41cf0a:	mov    al,ds:0x463968ac
  41cf0f:	lods   al,BYTE PTR ds:[esi]
  41cf10:	cs in  eax,0xa8
  41cf13:	fstp   DWORD PTR [edi-0x12]
  41cf16:	or     esp,ecx
  41cf18:	call   0x66fb1631
  41cf1d:	mov    edx,0xbc3f1b95
  41cf22:	loopne 0x41cf4f
  41cf24:	(bad)
  41cf27:	fwait
  41cf28:	ins    BYTE PTR es:[edi],dx
  41cf29:	xchg   DWORD PTR [edi-0x548ee24f],eax
  41cf2f:	lahf   
  41cf30:	out    0x4f,al
  41cf32:	inc    edi
  41cf33:	test   DWORD PTR [edi+0x68061486],0xdfb9ef53
  41cf3d:	sbb    al,0x80
  41cf3f:	retf   
  41cf40:	cs sub eax,0xe45637a8
  41cf46:	cmp    DWORD PTR [ecx+edx*4-0x2c13a972],esp
  41cf4d:	jnp    0x41ced1
  41cf4f:	mov    ecx,0xb3651d28
  41cf54:	test   BYTE PTR ds:0xeae22994,cl
  41cf5a:	ins    DWORD PTR es:[edi],dx
  41cf5b:	sub    eax,0x67e82a41
  41cf60:	(bad)  
  41cf61:	imul   ecx,ebp,0x58
  41cf64:	(bad)  
  41cf65:	xchg   edx,eax
  41cf66:	clc    
  41cf67:	adc    al,0x78
  41cf69:	scas   eax,DWORD PTR es:[edi]
  41cf6a:	sub    eax,0xff3893e6
  41cf6f:	xor    eax,0xed99ff94
  41cf74:	pusha  
  41cf75:	ror    esp,0xb9
  41cf78:	cld    
  41cf79:	push   cs
  41cf7a:	sub    al,0x1e
  41cf7c:	test   al,0x24
  41cf7e:	mov    ss,edx
  41cf80:	das    
  41cf81:	push   esi
  41cf82:	adc    al,BYTE PTR [ecx+0x2035c724]
  41cf88:	idiv   BYTE PTR [edx+0x6b]
  41cf8b:	add    dh,ch
  41cf8d:	stc    
  41cf8e:	cmp    ecx,0xbad83f32
  41cf94:	call   0xa2f2943c
  41cf99:	mov    cl,0xb4
  41cf9b:	popf   
  41cf9c:	adc    al,0x7a
  41cf9e:	rcl    BYTE PTR [eax],cl
  41cfa0:	(bad)  ds:0xbfe5c423
  41cfa6:	jge    0x41cfc2
  41cfa8:	cmc    
  41cfa9:	mov    cl,BYTE PTR [edx+0x504489bf]
  41cfaf:	scas   al,BYTE PTR es:[edi]
  41cfb0:	add    edi,DWORD PTR ds:0x7cb7a837
  41cfb6:	xor    edx,esi
  41cfb8:	clc    
  41cfb9:	or     dl,al
  41cfbb:	mov    dl,0x51
  41cfbd:	mov    bh,0x46
  41cfbf:	ja     0x41cfd4
  41cfc1:	fimul  DWORD PTR [esi+eax*2+0x2e]
  41cfc5:	in     al,0x8b
  41cfc7:	gs stos DWORD PTR es:[edi],eax
  41cfc9:	leave  
  41cfca:	cld    
  41cfcb:	cdq    
  41cfcc:	add    eax,0xb2eca77
  41cfd1:	fdiv   DWORD PTR ds:0xa3862822
  41cfd7:	jns    0x41cfea
  41cfd9:	fidivr DWORD PTR [ecx+ebx*2]
  41cfdc:	lock cmc 
  41cfde:	or     dh,BYTE PTR [edi+ebx*1-0x57cd6b21]
  41cfe5:	je     0x41cf88
  41cfe7:	mov    ah,0x1c
  41cfe9:	clc    
  41cfea:	mov    dl,0xc5
  41cfec:	sbb    DWORD PTR [edx+0x54],ecx
  41cfef:	inc    edx
  41cff0:	lea    edi,[esi+0x74]
  41cff3:	inc    eax
  41cff4:	clc    
  41cff5:	shl    DWORD PTR [eax-0x41f5e6f9],1
  41cffb:	xchg   ecx,eax
  41cffc:	cmp    al,0x3f
  41cffe:	inc    eax
  41cfff:	mov    esi,0xb55ac3d7
  41d004:	pusha  
  41d005:	adc    al,0x4b
  41d007:	or     BYTE PTR [ebp-0x11],ah
  41d00a:	pop    edi
  41d00b:	push   cs
  41d00c:	iret   
  41d00d:	pop    ss
  41d00e:	idiv   BYTE PTR [ebx]
  41d010:	xor    al,0xee
  41d012:	into   
  41d013:	pop    edi
  41d014:	push   ecx
  41d015:	adc    DWORD PTR [esi-0x28],ebx
  41d018:	sbb    DWORD PTR [esi+0x3393a7a8],edi
  41d01e:	push   ss
  41d01f:	xor    al,0x19
  41d021:	add    BYTE PTR [eax+edi*8],bh
  41d024:	jb     0x41cfaf
  41d026:	mov    ds:0x8304d80e,al
  41d02b:	mov    ah,0x27
  41d02d:	aas    
  41d02e:	push   0x57da1854
  41d033:	ds mov ch,0x9d
  41d036:	neg    DWORD PTR [ebp+ecx*8-0xd]
  41d03a:	aad    0xac
  41d03c:	fsub   DWORD PTR [edi+0x7492ae99]
  41d042:	add    BYTE PTR [ecx+0x1a],bl
  41d045:	mov    edx,0x44c199c9
  41d04a:	in     eax,dx
  41d04b:	jmp    0x41d0ae
  41d04d:	inc    edi
  41d04e:	ret    
  41d04f:	test   BYTE PTR [eax-0x2d],0x32
  41d053:	mov    edx,0x774a1aea
  41d058:	adc    eax,0x12e86dea
  41d05d:	aaa    
  41d05e:	xchg   ebx,eax
  41d05f:	scas   eax,DWORD PTR es:[edi]
  41d060:	mov    es,WORD PTR [eax]
  41d062:	sub    BYTE PTR [edx+edi*8-0x3826e277],al
  41d069:	call   0x25c8:0x90367982
  41d070:	jp     0x41d09e
  41d072:	jb     0x41d0ad
  41d074:	js     0x41d06c
  41d076:	outs   dx,BYTE PTR ds:[esi]
  41d077:	mov    ebx,0x77a5b36
  41d07c:	adc    dl,bl
  41d07e:	pusha  
  41d07f:	add    al,0x90
  41d081:	call   0x70b9:0x512a31e4
  41d088:	cmp    DWORD PTR [ebx-0x46],0x76
  41d08c:	push   0xf6ae72ee
  41d091:	pop    ebp
  41d092:	cwde   
  41d093:	adc    edx,DWORD PTR ds:0x92c2ada
  41d099:	and    eax,0x98f88d84
  41d09e:	xchg   ebx,eax
  41d09f:	mov    ch,0x7c
  41d0a1:	pop    edi
  41d0a2:	daa    
  41d0a3:	imul   edx,DWORD PTR [edx],0xffffffaa
  41d0a6:	ja     0x41d053
  41d0a8:	pop    ebx
  41d0a9:	cdq    
  41d0aa:	lea    ebx,[ecx-0x7800f817]
  41d0b0:	ins    BYTE PTR es:[edi],dx
  41d0b1:	cmp    BYTE PTR [edx+0x4830c205],0x84
  41d0b8:	push   esp
  41d0b9:	enter  0x6849,0xe1
  41d0bd:	dec    ecx
  41d0be:	push   ebp
  41d0bf:	push   ss
  41d0c0:	sbb    DWORD PTR [ecx],ebx
  41d0c2:	jnp    0x41d0ad
  41d0c4:	pop    esi
  41d0c5:	dec    DWORD PTR ds:0x41cdc4a4
  41d0cb:	mov    ah,0x80
  41d0cd:	pop    es
  41d0ce:	fs jae 0x41d07e
  41d0d1:	push   ebx
  41d0d2:	cmp    bh,al
  41d0d4:	jl     0x41d0f7
  41d0d6:	push   esi
  41d0d7:	mov    edi,0xb3e99828
  41d0dc:	mov    ds:0xca5eb3a7,al
  41d0e1:	cmp    al,BYTE PTR [eax-0x28]
  41d0e4:	inc    esp
  41d0e5:	pop    ebp
  41d0e6:	dec    eax
  41d0e7:	push   ebx
  41d0e8:	lds    ebp,FWORD PTR [edx-0x1c205036]
  41d0ee:	std    
  41d0ef:	push   es
  41d0f0:	dec    esi
  41d0f1:	cmp    eax,0x85e58528
  41d0f6:	bound  ebx,QWORD PTR [ecx+0x22]
  41d0f9:	jmp    0x928e:0x5fae8831
  41d100:	fcomp  DWORD PTR [ebx+ecx*2]
  41d103:	lods   eax,DWORD PTR ds:[esi]
  41d104:	lds    eax,FWORD PTR [ecx+eax*8]
  41d107:	xchg   esp,eax
  41d108:	adc    al,0xba
  41d10a:	sbb    eax,DWORD PTR ss:[edi+0x65]
  41d10e:	mov    esi,DWORD PTR [edi+ebp*8+0x79c0aaa7]
  41d115:	(bad)  
  41d116:	cmp    ch,BYTE PTR [edi+0x2a873e44]
  41d11c:	pop    es
  41d11d:	jl     0x41d15b
  41d11f:	or     BYTE PTR [edx-0x77212bd],cl
  41d125:	sub    edx,esi
  41d127:	mov    edx,0xe6cbf032
  41d12c:	dec    esi
  41d12d:	lea    esp,[ebx]
  41d12f:	pop    ebx
  41d130:	dec    eax
  41d131:	inc    ebp
  41d132:	mov    BYTE PTR [eax+edi*4+0x21b5b9a2],al
  41d139:	fidivr WORD PTR [eax+ebx*4+0x19]
  41d13d:	mov    bh,BYTE PTR [esi]
  41d13f:	pop    ebp
  41d140:	jmp    FWORD PTR [ebp+esi*1-0x2a]
  41d144:	(bad)  
  41d145:	jp     0x41d144
  41d147:	or     eax,0xb5dab959
  41d14c:	loop   0x41d186
  41d14e:	and    eax,0xdc86ead5
  41d153:	jbe    0x41d185
  41d155:	dec    esi
  41d156:	xor    DWORD PTR [eax-0x2a],ecx
  41d159:	or     ecx,esp
  41d15b:	sbb    BYTE PTR [eax-0x42],ch
  41d15e:	stos   BYTE PTR es:[edi],al
  41d15f:	mov    al,0x6
  41d161:	inc    edx
  41d162:	jg     0x41d15c
  41d164:	sbb    ch,dl
  41d166:	pusha  
  41d167:	push   edi
  41d168:	out    0xe,eax
  41d16a:	ret    0xac1b
  41d16d:	dec    ebx
  41d16e:	rcl    BYTE PTR [edi],cl
  41d170:	fmul   DWORD PTR [esi+0x9]
  41d173:	scas   al,BYTE PTR es:[edi]
  41d174:	jge    0x41d12a
  41d176:	and    eax,0x786a1308
  41d17b:	cli    
  41d17c:	in     eax,dx
  41d17d:	sub    edx,edi
  41d17f:	mov    ch,0xe8
  41d181:	test   eax,0x8ea25e9a
  41d186:	or     bl,bl
  41d188:	mov    edx,0x343998d2
  41d18d:	dec    edx
  41d18e:	pop    ebx
  41d18f:	enter  0xc791,0x6
  41d193:	xchg   edx,esi
  41d195:	test   BYTE PTR [eax-0x540db097],bl
  41d19b:	call   0xce7918de
  41d1a0:	pop    edi
  41d1a1:	mov    esp,?
  41d1a3:	bound  eax,QWORD PTR [ecx+0x19d20472]
  41d1a9:	xlat   BYTE PTR ds:[ebx]
  41d1aa:	add    DWORD PTR [ebx],edi
  41d1ac:	add    al,0x63
  41d1ae:	aad    0x6b
  41d1b0:	fsubr  DWORD PTR [ebp+0x39]
  41d1b3:	mov    dh,0x73
  41d1b5:	shr    BYTE PTR [ebp+0xf9a0fe5],1
  41d1bb:	mov    WORD PTR [ecx+0x37],es
  41d1be:	sbb    BYTE PTR [bp+si-0x66a0],bl
  41d1c3:	mov    WORD PTR [eax-0x7e],?
  41d1c6:	mov    edx,0xc5b96195
  41d1cb:	xchg   edi,eax
  41d1cc:	pop    ebp
  41d1cd:	xor    al,0x49
  41d1cf:	sbb    BYTE PTR [ebx-0x473bcab3],cl
  41d1d5:	ror    BYTE PTR [edi],0xac
  41d1d8:	cmp    bx,WORD PTR [edx]
  41d1db:	arpl   WORD PTR [edx],bx
  41d1dd:	sub    al,BYTE PTR [ebx-0x52]
  41d1e0:	or     DWORD PTR [edx],eax
  41d1e2:	or     eax,0x84dff324
  41d1e7:	pop    edi
  41d1e8:	inc    DWORD PTR [edx+ebx*2-0x25121e6a]
  41d1ef:	mov    esp,0xfcf51fb3
  41d1f4:	outs   dx,BYTE PTR ds:[esi]
  41d1f5:	adc    edx,0x23
  41d1f8:	ins    DWORD PTR es:[edi],dx
  41d1f9:	inc    ebp
  41d1fa:	adc    ecx,DWORD PTR [ecx-0x6d]
  41d1fd:	lea    ecx,[edx+0x5f0c3e5c]
  41d203:	dec    ecx
  41d204:	mov    BYTE PTR [edi+0x41],ch
  41d207:	js     0x41d1d8
  41d209:	ins    BYTE PTR es:[edi],dx
  41d20a:	aas    
  41d20b:	out    0x15,al
  41d20d:	sub    al,0x34
  41d20f:	jl     0x41d249
  41d211:	outs   dx,DWORD PTR ds:[esi]
  41d212:	out    0xba,eax
  41d214:	and    BYTE PTR [eax+0x26],0x42
  41d218:	adc    al,0xda
  41d21a:	ins    BYTE PTR es:[edi],dx
  41d21b:	sbb    ebx,0xffffffc5
  41d21e:	sbb    eax,0xe64c4190
  41d223:	xchg   esp,eax
  41d224:	inc    edx
  41d225:	test   DWORD PTR [edx+0x76],edi
  41d228:	pusha  
  41d229:	push   ebx
  41d22a:	xor    BYTE PTR [ecx],0x18
  41d22d:	mov    bl,BYTE PTR [eax+0x21]
  41d230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d231:	or     BYTE PTR [edi-0x3bfe83f2],ah
  41d237:	call   0xa6bc5a8d
  41d23c:	sbb    esp,eax
  41d23e:	inc    ebp
  41d23f:	mov    ds:0x68375f39,al
  41d244:	shl    BYTE PTR [ebx],0xdf
  41d247:	test   al,cl
  41d249:	and    eax,0x4e13b8ab
  41d24e:	mov    cl,0x19
  41d250:	or     ch,BYTE PTR [ebp+0x7fdb048c]
  41d256:	xchg   ecx,eax
  41d257:	dec    eax
  41d258:	ins    DWORD PTR es:[edi],dx
  41d259:	mov    dh,cl
  41d25b:	pushf  
  41d25c:	mov    ah,ch
  41d25e:	pop    esp
  41d25f:	lods   al,BYTE PTR ds:[esi]
  41d260:	add    DWORD PTR [esi-0x5503222d],edi
  41d266:	jmp    DWORD PTR [edi-0x78]
  41d269:	sub    al,BYTE PTR [edx]
  41d26b:	and    DWORD PTR [eax+0x8b91c43],esi
  41d271:	pop    esi
  41d272:	(bad)  
  41d273:	fisttp DWORD PTR [ecx-0x68]
  41d276:	fwait
  41d277:	sbb    eax,0x1035f7aa
  41d27c:	lea    ebp,[eax+0x77]
  41d27f:	mov    ah,0x96
  41d281:	sub    dh,BYTE PTR [ebx]
  41d283:	fcomp  DWORD PTR [ebx+eiz*4+0x45]
  41d287:	push   cs
  41d288:	test   al,0x8e
  41d28a:	xor    al,0xae
  41d28c:	inc    ebx
  41d28d:	mov    bh,0x36
  41d28f:	aad    0x17
  41d291:	mov    edx,0x5d5faf5e
  41d296:	sbb    al,0x98
  41d298:	inc    edi
  41d299:	or     DWORD PTR [ebp+0x3bb3413b],ebp
  41d29f:	rcr    BYTE PTR ds:0xd0a8fab9,0x78
  41d2a6:	aas    
  41d2a7:	inc    ebp
  41d2a8:	js     0x41d27e
  41d2aa:	hlt    
  41d2ab:	jb     0x41d2b9
  41d2ad:	jmp    0xaf9c:0x165152
  41d2b4:	stos   DWORD PTR es:[edi],eax
  41d2b5:	ror    DWORD PTR [edi+0x5d],0x8e
  41d2b9:	push   ecx
  41d2ba:	mov    edx,0xb1b5a08c
  41d2bf:	mov    edx,0x9662ca1a
  41d2c4:	in     eax,dx
  41d2c5:	mov    cl,0x7c
  41d2c7:	pop    edi
  41d2c8:	or     BYTE PTR [ebp-0x53],bh
  41d2cb:	loop   0x41d325
  41d2cd:	lea    ebx,[edx+0x4451533f]
  41d2d3:	mov    edi,0x1fb9257e
  41d2d8:	push   ss
  41d2d9:	jmp    0xca69:0x56a0db9c
  41d2e0:	or     DWORD PTR [esi+0x7b73c5a],eax
  41d2e6:	idiv   edx
  41d2e8:	push   eax
  41d2e9:	fs cmp al,0x8
  41d2ec:	inc    edx
  41d2ed:	shl    DWORD PTR [ecx-0x5b],1
  41d2f0:	sbb    cl,ah
  41d2f2:	mov    bh,0xad
  41d2f4:	imul   esi,DWORD PTR [edi+0x6c5ecf3e],0x56c345f2
  41d2fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2ff:	ins    BYTE PTR es:[edi],dx
  41d300:	mov    edx,0x76e26f17
  41d305:	test   DWORD PTR [ebx-0x12],esp
  41d308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d309:	(bad)
  41d30d:	es sub eax,0xfc7bc380
  41d313:	fdivr  QWORD PTR [edx+0x19aaf28f]
  41d319:	jns    0x41d2e0
  41d31b:	fld    TBYTE PTR [eax]
  41d31d:	mov    dh,BYTE PTR [ebx]
  41d31f:	int    0x56
  41d321:	idiv   BYTE PTR [edx+0x5a]
  41d324:	data16 std 
  41d326:	ss xchg esp,eax
  41d328:	retf   
  41d329:	cmp    al,0x4b
  41d32b:	clc    
  41d32c:	pop    eax
  41d32d:	jecxz  0x41d357
  41d32f:	pop    es
  41d330:	sbb    eax,0x4c523f12
  41d335:	mov    ebp,DWORD PTR [edx+0x4bd462e6]
  41d33b:	xchg   ebx,eax
  41d33c:	repnz xor DWORD PTR [esi-0x38],0xffffffc5
  41d341:	push   edx
  41d342:	(bad)  
  41d343:	adc    eax,0xba77a9e0
  41d348:	sbb    BYTE PTR [eax],cl
  41d34a:	retf   0xe6ac
  41d34d:	loopne 0x41d317
  41d34f:	and    dh,BYTE PTR [ebx]
  41d351:	dec    edx
  41d352:	push   edi
  41d353:	fsubr  QWORD PTR [ecx-0x4411eb56]
  41d359:	and    al,0x36
  41d35b:	enter  0xca25,0xa3
  41d35f:	mov    ebp,0x7c2a8af2
  41d364:	inc    esi
  41d365:	out    dx,eax
  41d366:	xchg   edi,eax
  41d367:	sub    al,0x91
  41d369:	addr16 dec eax
  41d36b:	call   0x61405aa2
  41d370:	or     BYTE PTR [ebx],dl
  41d372:	mov    eax,0x53ebc3b1
  41d377:	push   cs
  41d378:	inc    ebp
  41d379:	push   ds
  41d37a:	sub    eax,0x6879ff66
  41d37f:	pop    edi
  41d380:	sbb    BYTE PTR [ecx+ebx*1-0x46],ch
  41d384:	out    dx,eax
  41d385:	or     al,0xa3
  41d387:	and    edi,DWORD PTR [ebp-0x7e]
  41d38a:	pop    edx
  41d38b:	lods   eax,DWORD PTR ds:[esi]
  41d38c:	pop    es
  41d38d:	iret   
  41d38e:	nop
  41d38f:	sub    bh,BYTE PTR [ebp+0x4]
  41d392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d393:	dec    edi
  41d394:	or     eax,0x13f2ad2a
  41d399:	std    
  41d39a:	inc    edx
  41d39b:	repnz dec BYTE PTR [ebp-0x4a605c46]
  41d3a2:	cli    
  41d3a3:	popa   
  41d3a4:	ds jno 0x41d3ef
  41d3a7:	push   0x66ff9e62
  41d3ac:	jl     0x41d35c
  41d3ae:	icebp  
  41d3af:	sub    al,0xbb
  41d3b1:	jne    0x41d3d3
  41d3b3:	(bad)  
  41d3b4:	push   ss
  41d3b5:	lock mov ebx,0xd29ecd3a
  41d3bb:	shr    DWORD PTR [eax],1
  41d3bd:	call   0x321acbf2
  41d3c2:	fidiv  DWORD PTR [esi]
  41d3c4:	enter  0x62d0,0xa8
  41d3c8:	sar    DWORD PTR [eax-0x5e],0x83
  41d3cc:	adc    edx,ecx
  41d3ce:	dec    esi
  41d3cf:	je     0x41d384
  41d3d1:	pop    ss
  41d3d2:	ret    0x15a3
  41d3d5:	mov    esi,0x7e6652b3
  41d3da:	mov    edx,0x71577c59
  41d3df:	push   ds
  41d3e0:	adc    al,0x8b
  41d3e2:	sti    
  41d3e3:	xchg   ecx,eax
  41d3e4:	es icebp 
  41d3e6:	fstp   TBYTE PTR [edx+edx*8+0x2d]
  41d3ea:	xchg   edx,eax
  41d3eb:	mov    ebp,0xb833cca7
  41d3f0:	jne    0x41d3c4
  41d3f2:	xchg   ebp,eax
  41d3f3:	and    DWORD PTR [eax+0x26],ebx
  41d3f6:	icebp  
  41d3f7:	mov    eax,0xcdc3df49
  41d3fc:	push   ss
  41d3fd:	pop    edx
  41d3fe:	repz stc 
  41d400:	or     BYTE PTR [eax+0x6f],al
  41d403:	fistp  DWORD PTR [eax+0x7a1b5237]
  41d409:	pushf  
  41d40a:	retf   0x260a
  41d40d:	xor    eax,0x8a0e2c84
  41d412:	inc    ecx
  41d413:	dec    ebx
  41d414:	div    bl
  41d416:	inc    ebp
  41d417:	jl     0x41d3c1
  41d419:	pop    edi
  41d41a:	dec    eax
  41d41b:	retf   
  41d41c:	call   0xc05d:0x30a0ba8b
  41d423:	xchg   ecx,eax
  41d424:	bound  ebx,QWORD PTR [edx+0xb2e2858]
  41d42a:	add    ecx,DWORD PTR [ecx-0x5c]
  41d42d:	or     BYTE PTR [eax-0x62],cl
  41d430:	add    BYTE PTR [edx+edi*8+0x3942c752],cl
  41d437:	push   0xb600a013
  41d43c:	lds    edi,FWORD PTR [edx+0x358b60ba]
  41d442:	leave  
  41d443:	icebp  
  41d444:	int3   
  41d445:	mov    cl,BYTE PTR [edi]
  41d447:	lahf   
  41d448:	sti    
  41d449:	les    edi,FWORD PTR [edi]
  41d44b:	sbb    BYTE PTR [edi],cl
  41d44d:	dec    ebx
  41d44e:	push   ecx
  41d44f:	loopne 0x41d4ca
  41d451:	pop    esp
  41d452:	jne    0x41d4a8
  41d454:	or     DWORD PTR [ecx-0x6c5c96b6],ebx
  41d45a:	in     eax,0x2e
  41d45c:	push   cs
  41d45d:	mov    bh,BYTE PTR [ebp+0x635ae3a8]
  41d463:	pop    ebp
  41d464:	dec    esi
  41d465:	add    al,0x5f
  41d467:	and    BYTE PTR [ebp-0x4c34b577],cl
  41d46d:	jmp    0xd3bb:0x6b18d7bb
  41d474:	mov    al,ds:0x3a0a7bfa
  41d479:	and    DWORD PTR [edx+eax*1-0x498db1f6],0xd0ba8600
  41d484:	lods   al,BYTE PTR ds:[esi]
  41d485:	xchg   edx,eax
  41d486:	mov    dl,0xc1
  41d488:	(bad)
  41d48b:	fsubr  DWORD PTR [esi+0x38768786]
  41d491:	push   eax
  41d492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d493:	mov    ecx,0xff02f2a1
  41d498:	adc    BYTE PTR [edx+0x4],ch
  41d49b:	sub    eax,0x5b142a2d
  41d4a0:	std    
  41d4a1:	inc    edi
  41d4a2:	out    dx,al
  41d4a3:	mov    edi,0x29ba97e2
  41d4a8:	or     DWORD PTR [edx-0x6ce71d9c],ebx
  41d4ae:	inc    ecx
  41d4af:	or     ebx,esp
  41d4b1:	sub    ebp,0x17
  41d4b4:	punpckhdq mm3,QWORD PTR [ebx+0xf7ace60]
  41d4bb:	daa    
  41d4bc:	pop    es
  41d4bd:	adc    esp,edi
  41d4bf:	jp     0x41d531
  41d4c1:	in     eax,0x8c
  41d4c3:	mov    ebx,0x2eba88ef
  41d4c8:	inc    ebx
  41d4c9:	mov    ebx,0xd6191544
  41d4ce:	mov    bl,dl
  41d4d0:	add    edi,DWORD PTR ds:0xd7bc320c
  41d4d6:	(bad)  
  41d4d7:	and    BYTE PTR [ebx-0x79],al
  41d4da:	mov    ds:0x9f508826,al
  41d4df:	mov    dl,0x8a
  41d4e1:	stos   DWORD PTR es:[edi],eax
  41d4e2:	lods   al,BYTE PTR ds:[esi]
  41d4e3:	pop    es
  41d4e4:	sbb    DWORD PTR [edx-0x4],ebx
  41d4e7:	(bad)  
  41d4e8:	mov    eax,0x8756059
  41d4ed:	xlat   BYTE PTR ds:[ebx]
  41d4ee:	mov    dl,0xfc
  41d4f0:	push   0xffffff87
  41d4f2:	jmp    0x9dbd:0x7c1f1820
  41d4f9:	outs   dx,DWORD PTR ds:[esi]
  41d4fb:	test   al,0xf6
  41d4fd:	dec    ebp
  41d4fe:	fs inc esi
  41d500:	xor    BYTE PTR [esi+0x6323bfba],cl
  41d506:	pop    ecx
  41d507:	pop    ebx
  41d508:	mov    edx,0x32b84e3c
  41d50d:	jae    0x41d4b0
  41d50f:	xchg   edx,eax
  41d510:	hlt    
  41d511:	pop    edx
  41d512:	xor    al,0x9b
  41d514:	add    BYTE PTR [edi-0x57ed18b6],0xe1
  41d51b:	dec    ebp
  41d51c:	(bad)  
  41d51d:	pop    ebp
  41d51e:	dec    eax
  41d51f:	clc    
  41d520:	(bad)  
  41d521:	cmc    
  41d522:	push   0xfffffff3
  41d524:	enter  0xf24e,0xb5
  41d528:	mov    edi,0x11752129
  41d52d:	pop    edx
  41d52e:	mov    edx,0xd8cb99cc
  41d533:	popa   
  41d534:	mov    WORD PTR [ecx-0x78d0da58],ss
  41d53a:	cmp    cl,BYTE PTR [edi+0x1c4e279f]
  41d540:	jae    0x41d598
  41d542:	and    ebx,DWORD PTR [edi+0x3ea9c995]
  41d548:	or     eax,0x7ee1227d
  41d54d:	sbb    cl,BYTE PTR [esi-0x16]
  41d550:	loop   0x41d546
  41d552:	cld    
  41d553:	push   0x181a866f
  41d558:	adc    bl,BYTE PTR [edx]
  41d55a:	inc    eax
  41d55b:	in     eax,dx
  41d55c:	pop    es
  41d55d:	mov    ecx,0x4fb10602
  41d562:	out    0xd7,al
  41d564:	sub    al,0x48
  41d566:	dec    edx
  41d567:	adc    DWORD PTR [edi+edi*2+0x54],0xb9662acd
  41d56f:	mov    al,0xf8
  41d571:	push   ecx
  41d572:	test   al,0xb6
  41d574:	fild   QWORD PTR [edi+0x4e599b84]
  41d57a:	retf   
  41d57b:	aas    
  41d57c:	and    eax,0xdb13141f
  41d581:	shl    BYTE PTR [eax],cl
  41d583:	push   0x47800693
  41d588:	js     0x41d510
  41d58a:	retf   0x3ea6
  41d58d:	jmp    DWORD PTR [ebx-0x38]
  41d590:	mov    ss,WORD PTR [edx-0x5a1f27ca]
  41d596:	jecxz  0x41d5a5
  41d598:	fadd   DWORD PTR [ecx-0x4b194a83]
  41d59e:	jecxz  0x41d5f5
  41d5a0:	jmp    0x41d57c
  41d5a2:	nop
  41d5a3:	(bad)  
  41d5a4:	jno    0x41d609
  41d5a6:	call   0xefe4e88e
  41d5ab:	popa   
  41d5ac:	(bad)  
  41d5ad:	jmp    0x1707:0xd4971d6c
  41d5b4:	call   0xecb4863a
  41d5b9:	jle    0x41d5f0
  41d5bb:	mov    eax,0xef7cdcec
  41d5c0:	cmp    ch,cl
  41d5c2:	jns    0x41d57e
  41d5c4:	repnz lahf 
  41d5c6:	sbb    ch,cl
  41d5c8:	push   cs
  41d5c9:	cmp    dh,ah
  41d5cb:	push   ss
  41d5cc:	push   0xa9ca0625
  41d5d1:	je     0x41d5f5
  41d5d3:	outs   dx,BYTE PTR ds:[esi]
  41d5d4:	pop    es
  41d5d5:	xchg   edx,ebp
  41d5d7:	dec    ecx
  41d5d8:	and    BYTE PTR [edx+0x4b61c4d6],bh
  41d5de:	cmp    al,0xe8
  41d5e0:	ja     0x41d63a
  41d5e2:	mov    BYTE PTR [ebx+0x48],bl
  41d5e5:	dec    ecx
  41d5e6:	xor    ebp,DWORD PTR [esi-0x107004f]
  41d5ec:	push   cs
  41d5ed:	retf   0x388b
  41d5f0:	inc    esi
  41d5f1:	push   0x93565f7
  41d5f6:	mov    eax,ds:0x1beefdc8
  41d5fb:	adc    ebp,0x18
  41d5fe:	xor    BYTE PTR [eax],al
  41d600:	adc    eax,0xf62838aa
  41d605:	aam    0x6c
  41d607:	repnz in eax,0x60
  41d60a:	mov    esi,0xde0c09a7
  41d60f:	dec    ecx
  41d610:	xchg   esi,eax
  41d611:	fdiv   QWORD PTR [edi+0x10]
  41d614:	inc    esp
  41d615:	test   DWORD PTR [edx+0x17],ebx
  41d618:	push   cs
  41d619:	jmp    0x67a8:0x7b59fb1d
  41d620:	push   esi
  41d621:	sahf   
  41d622:	shl    DWORD PTR [ecx],1
  41d624:	dec    ebp
  41d625:	jp     0x41d661
  41d627:	aaa    
  41d628:	dec    edi
  41d629:	jae    0x41d5cd
  41d62b:	mov    al,0x7
  41d62d:	pop    ebp
  41d62e:	hlt    
  41d62f:	add    edx,DWORD PTR [ecx-0x12a27f7a]
  41d635:	xchg   DWORD PTR [edx],edx
  41d637:	jle    0x41d611
  41d639:	sbb    BYTE PTR [edx+edi*4+0x21],bh
  41d63d:	int    0xd7
  41d63f:	cmp    esi,esp
  41d641:	sbb    eax,0x3ae53e8b
  41d646:	fld    QWORD PTR ds:0x26d27447
  41d64c:	mov    BYTE PTR [eax-0x6d0aab8d],cl
  41d652:	dec    edx
  41d653:	ds jg  0x41d652
  41d656:	push   cs
  41d657:	cmc    
  41d658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d659:	ret    
  41d65a:	cdq    
  41d65b:	es scas eax,DWORD PTR es:[edi]
  41d65d:	pop    edx
  41d65e:	addr16 push 0xcf1d786d
  41d664:	iret   
  41d665:	inc    ebp
  41d666:	push   ecx
  41d667:	stos   BYTE PTR es:[edi],al
  41d668:	leave  
  41d669:	in     al,dx
  41d66a:	retf   0x3c1d
  41d66d:	ins    DWORD PTR es:[edi],dx
  41d66e:	xor    al,BYTE PTR [ebp-0x71]
  41d671:	mov    esp,eax
  41d673:	push   esp
  41d674:	je     0x41d5f7
  41d676:	pusha  
  41d677:	cmp    ebp,eax
  41d679:	mov    edx,0x337db033
  41d67e:	arpl   WORD PTR [ebp+0x27],si
  41d681:	cs pushf 
  41d683:	sub    al,0x18
  41d685:	dec    edx
  41d686:	outs   dx,BYTE PTR ds:[esi]
  41d687:	js     0x41d64a
  41d689:	mov    al,0xf9
  41d68b:	sbb    dh,BYTE PTR ds:0xd710cf15
  41d691:	cmp    BYTE PTR [edx+0x7e99d29],0xc6
  41d698:	loopne 0x41d6ee
  41d69a:	ds enter 0xb006,0x5b
  41d69f:	ja     0x41d689
  41d6a1:	fistp  WORD PTR [edi]
  41d6a3:	mov    ch,0x6b
  41d6a5:	dec    ecx
  41d6a6:	pop    eax
  41d6a7:	push   ebx
  41d6a8:	cmc    
  41d6a9:	ficom  DWORD PTR [ebx+0x8]
  41d6ac:	stos   DWORD PTR es:[edi],eax
  41d6ad:	call   FWORD PTR [edx-0x65]
  41d6b0:	stos   BYTE PTR es:[edi],al
  41d6b1:	lods   eax,DWORD PTR ds:[esi]
  41d6b2:	fidivr WORD PTR [eax-0x4994f938]
  41d6b8:	or     ah,BYTE PTR ds:0x2abc1637
  41d6be:	inc    DWORD PTR [edx+0x4]
  41d6c1:	dec    esi
  41d6c2:	retf   0xfa8b
  41d6c5:	mov    ?,WORD PTR ss:[ebx-0x48482fec]
  41d6cc:	mov    eax,0x2bb98795
  41d6d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6d2:	retf   
  41d6d3:	cmp    ecx,DWORD PTR ss:[ebp-0x3d]
  41d6d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6d8:	push   ebx
  41d6d9:	stos   BYTE PTR es:[edi],al
  41d6da:	mov    bh,0xa2
  41d6dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6dd:	sub    dl,0xcc
  41d6e0:	sub    BYTE PTR [edi-0x5e09509b],ch
  41d6e6:	sub    BYTE PTR [edi],ah
  41d6e8:	push   ebx
  41d6e9:	push   ecx
  41d6ea:	dec    ecx
  41d6eb:	in     al,0xac
  41d6ed:	inc    esp
  41d6ee:	mov    al,0xb2
  41d6f0:	inc    ebx
  41d6f1:	lock aad 0x4c
  41d6f4:	xor    edx,esi
  41d6f6:	pop    esp
  41d6f7:	ret    0x8ac9
  41d6fa:	sub    ah,bh
  41d6fc:	push   cs
  41d6fd:	mov    DWORD PTR [ecx+ebx*2],esp
  41d700:	sbb    DWORD PTR [edx],ebx
  41d702:	or     eax,0xbc8d1e66
  41d707:	push   0x17
  41d709:	cmp    dl,BYTE PTR [edi-0x53aaf085]
  41d70f:	loopne 0x41d6da
  41d711:	push   ecx
  41d712:	xlat   BYTE PTR ds:[ebx]
  41d713:	mov    cl,0x15
  41d715:	mov    DWORD PTR [edx-0x16],ebx
  41d718:	adc    eax,0xf0862091
  41d71d:	(bad)  
  41d71f:	push   0x58dd323e
  41d724:	xor    dh,bl
  41d726:	mov    ecx,0x9a89f68b
  41d72b:	mov    al,0xe7
  41d72d:	outs   dx,BYTE PTR ds:[esi]
  41d72e:	pop    ss
  41d72f:	jge    0x41d716
  41d731:	jno    0x41d76a
  41d733:	push   0xf5813c01
  41d738:	fidiv  WORD PTR [ecx]
  41d73a:	sub    eax,0x734f6c82
  41d73f:	retf   0xbae8
  41d742:	aad    0x63
  41d744:	adc    DWORD PTR [edx-0x5d537619],ecx
  41d74a:	shr    ch,0x78
  41d74d:	in     al,dx
  41d74e:	ss xchg edi,eax
  41d750:	push   esi
  41d751:	nop
  41d752:	call   0x1537:0x429e46c5
  41d759:	or     bl,cl
  41d75b:	inc    edx
  41d75c:	dec    ebx
  41d75d:	aaa    
  41d75e:	jnp    0x41d705
  41d760:	aas    
  41d761:	call   0x9da:0xa0049875
  41d768:	sbb    al,BYTE PTR [eax]
  41d76a:	data16 hlt 
  41d76c:	cmp    eax,0x14085c7d
  41d771:	mov    DWORD PTR [edx+edi*1-0x7116c92],esi
  41d778:	push   eax
  41d779:	fidiv  DWORD PTR [ebx]
  41d77b:	mov    esi,DWORD PTR [ebx]
  41d77d:	(bad)  
  41d77e:	sbb    dh,dh
  41d780:	fld    DWORD PTR [esi+ebp*1-0x16]
  41d784:	pop    ecx
  41d785:	xchg   ebp,eax
  41d786:	cmp    ch,BYTE PTR [eax]
  41d788:	call   0x84d8c6c
  41d78d:	xchg   BYTE PTR [ecx],ch
  41d78f:	mov    al,0x98
  41d791:	pop    es
  41d792:	daa    
  41d793:	cmp    BYTE PTR [edx],dl
  41d795:	or     ch,BYTE PTR [edi]
  41d797:	mov    bh,0xcd
  41d799:	imul   edx,DWORD PTR [eax+esi*1-0x15],0x36
  41d79e:	or     al,0xe7
  41d7a0:	jp     0x41d72a
  41d7a2:	jmp    0x1553:0xd24c243c
  41d7a9:	call   0xef70:0x1e1b80d8
  41d7b0:	mov    eax,DWORD PTR [ebp-0x5b41d7c]
  41d7b6:	pop    ebx
  41d7b7:	add    BYTE PTR [esi-0x29],al
  41d7ba:	or     BYTE PTR ss:[edi],cl
  41d7bd:	dec    edx
  41d7be:	mov    cl,BYTE PTR [esi+eiz*2+0x1180812f]
  41d7c5:	push   ebx
  41d7c6:	fidivr DWORD PTR [ecx]
  41d7c8:	cmp    ch,dl
  41d7ca:	loop   0x41d77c
  41d7cc:	enter  0x72f,0x30
  41d7d0:	pop    ss
  41d7d1:	stos   BYTE PTR es:[edi],al
  41d7d2:	pushf  
  41d7d3:	mov    esp,0xefc92635
  41d7d8:	imul   ebp,DWORD PTR [esi-0x72],0xca8fdec3
  41d7df:	mov    ah,0xa8
  41d7e1:	add    BYTE PTR [edi],ch
  41d7e3:	in     eax,dx
  41d7e4:	call   0x3ec27483
  41d7e9:	mov    ch,0x3b
  41d7eb:	and    eax,0x7fa8db83
  41d7f0:	mov    esp,0xb8f3f405
  41d7f5:	test   BYTE PTR [edx+0x19],ch
  41d7f8:	sub    DWORD PTR [eax+0x67],0x56d346d
  41d7ff:	pop    esi
  41d800:	ss out dx,al
  41d802:	dec    eax
  41d803:	jl     0x41d851
  41d805:	xor    al,0x77
  41d807:	les    edx,FWORD PTR [ecx]
  41d809:	dec    ebx
  41d80a:	call   0x12ac:0x3a5bb05c
  41d811:	jp     0x41d7c1
  41d813:	mov    ebx,0x8752e95
  41d818:	(bad)  
  41d819:	jl     0x41d86c
  41d81b:	fs mov eax,0x63ac39a2
  41d821:	out    dx,al
  41d822:	pop    ebx
  41d823:	fist   WORD PTR [edx+ebx*8]
  41d826:	in     eax,0xb0
  41d828:	push   es
  41d829:	js     0x41d847
  41d82b:	pop    ecx
  41d82c:	mov    dh,bh
  41d82e:	sub    al,0x5d
  41d830:	fadd   DWORD PTR [ebx+0x28]
  41d833:	mov    ebx,0xa7a797c2
  41d838:	sub    dh,ch
  41d83a:	loope  0x41d7cc
  41d83c:	pop    eax
  41d83d:	pop    edi
  41d83e:	mov    ah,0xac
  41d840:	xchg   esi,eax
  41d841:	and    eax,0x738862ca
  41d846:	ins    DWORD PTR es:[edi],dx
  41d847:	ret    0x4b9b
  41d84a:	nop
  41d84b:	inc    edx
  41d84c:	pop    edx
  41d84d:	mov    esp,0x219d7935
  41d852:	add    DWORD PTR [esi],ecx
  41d854:	mov    dl,0xbf
  41d856:	xor    al,0x8c
  41d858:	in     al,dx
  41d859:	and    al,0x22
  41d85b:	dec    esp
  41d85c:	dec    BYTE PTR [edx-0x243b26e6]
  41d862:	sub    al,0x26
  41d864:	ret    0x22b6
  41d867:	mov    edi,0xc2ec9fae
  41d86c:	cmovns edi,DWORD PTR [ebp+0x24]
  41d870:	push   0xeab730d7
  41d875:	sti    
  41d876:	and    bh,BYTE PTR [esi+0xa8bfa13]
  41d87c:	xchg   dx,ax
  41d87e:	mov    cl,0xac
  41d880:	mov    dh,BYTE PTR [ecx-0x4ba9a81d]
  41d886:	call   0xfb4:0xe2078cd8
  41d88d:	retf   0x3142
  41d890:	les    ebx,FWORD PTR [esi]
  41d892:	scas   eax,DWORD PTR es:[edi]
  41d893:	xlat   BYTE PTR ds:[ebx]
  41d894:	mov    ebp,0xb42af0a6
  41d899:	jmp    0xa1859099
  41d89e:	jp     0x41d826
  41d8a0:	sub    DWORD PTR [esi-0x3673d88e],ecx
  41d8a6:	xor    eax,ecx
  41d8a8:	(bad)  
  41d8a9:	jl     0x41d874
  41d8ab:	fstp   DWORD PTR [eax-0x274a341d]
  41d8b1:	call   0x7f4e62a8
  41d8b6:	push   0xfffffffc
  41d8b8:	imul   ebp,DWORD PTR [ebx-0x7978f29],0x3f81b744
  41d8c2:	jge    0x41d8f7
  41d8c4:	pop    ebx
  41d8c5:	retf   0xf697
  41d8c8:	sub    ah,BYTE PTR [edx+0x370fc84d]
  41d8ce:	sbb    DWORD PTR [ebx],0xe43a7595
  41d8d4:	aaa    
  41d8d5:	jmp    0xce36:0x8f8cd1ac
  41d8dc:	mov    esi,DWORD PTR [ebx-0x64]
  41d8df:	shl    DWORD PTR ds:0x25ecdde6,0x89
  41d8e6:	mov    edx,0x6b6646aa
  41d8eb:	and    eax,0x533bfb51
  41d8f0:	fs jmp 0x26b49ded
  41d8f6:	dec    esp
  41d8f7:	sbb    eax,DWORD PTR [edx+0x4d]
  41d8fa:	cmp    edx,ebx
  41d8fc:	cmp    cl,BYTE PTR [ebx+0x48]
  41d8ff:	xchg   ebp,eax
  41d900:	add    ecx,DWORD PTR [ebx+0x28ef87ea]
  41d906:	repnz mov eax,ds:0xb66e0027
  41d90c:	cmp    dh,ch
  41d90e:	dec    ecx
  41d90f:	mov    cl,0x5
  41d911:	cli    
  41d912:	inc    esp
  41d913:	pop    edi
  41d914:	pop    edx
  41d915:	out    0x3c,al
  41d917:	clc    
  41d918:	and    DWORD PTR [ebx],edx
  41d91a:	pop    es
  41d91b:	cwde   
  41d91c:	or     bh,bh
  41d91e:	dec    esp
  41d91f:	mov    dl,0xaa
  41d921:	push   ebx
  41d922:	pinsrw mm3,WORD PTR [ebx+0x42],0xae
  41d927:	cwde   
  41d928:	out    dx,al
  41d929:	inc    esp
  41d92a:	dec    eax
  41d92b:	sub    BYTE PTR [ebx+0x5f52d03a],dh
  41d931:	xchg   esi,eax
  41d932:	and    bh,BYTE PTR ss:[eax]
  41d935:	push   eax
  41d936:	repnz loop 0x41d945
  41d939:	mov    DWORD PTR [ecx],edi
  41d93b:	test   DWORD PTR [esi+edi*1-0x5a86d1dd],ecx
  41d942:	adc    DWORD PTR [ebx-0x48c574b1],ebx
  41d948:	mov    BYTE PTR [eax-0x56b53a01],ch
  41d94e:	lea    esp,[eax]
  41d950:	mov    eax,0xdf382b9c
  41d955:	xor    ebx,DWORD PTR ds:[eax]
  41d958:	mov    dl,BYTE PTR [edx-0x29b77803]
  41d95e:	or     al,0x1a
  41d961:	sahf   
  41d962:	add    DWORD PTR [esi],edi
  41d964:	sti    
  41d965:	ror    BYTE PTR [edx+0x42],1
  41d968:	adc    dl,cl
  41d96a:	div    ebp
  41d96c:	inc    edi
  41d96d:	sbb    al,ah
  41d96f:	jbe    0x41d9af
  41d971:	in     al,0x16
  41d973:	add    dl,dh
  41d975:	loope  0x41d9b3
  41d977:	xchg   edx,ecx
  41d979:	and    BYTE PTR ds:0x68d8ca48,dh
  41d97f:	inc    esp
  41d980:	adc    BYTE PTR [ebx+0x30],cl
  41d983:	cmp    BYTE PTR [eax+0x36],cl
  41d986:	push   es
  41d987:	shr    BYTE PTR [eax-0x34],1
  41d98a:	pusha  
  41d98b:	mov    esp,0xf4106ce
  41d990:	call   0x49df:0x6ff2429f
  41d997:	push   0x22181971
  41d99c:	mov    edi,0x231da2be
  41d9a1:	sub    DWORD PTR [ebx+0x1811270],ecx
  41d9a7:	jo     0x41d97b
  41d9a9:	mov    BYTE PTR [edi+0x18],dh
  41d9ac:	ret    
  41d9ad:	push   edx
  41d9ae:	jae    0x41d978
  41d9b0:	sub    DWORD PTR [edi-0xa0e52a6],esi
  41d9b6:	mov    cl,0xe4
  41d9b8:	add    BYTE PTR [ebx-0x31e21f66],0x8c
  41d9bf:	mov    dl,0x9d
  41d9c1:	js     0x41d9e0
  41d9c3:	mov    WORD PTR [edx],gs
  41d9c5:	mov    dl,bh
  41d9c7:	dec    ebp
  41d9c8:	or     BYTE PTR [esi-0x60a109e5],0xba
  41d9cf:	mov    edi,0x2b8d884f
  41d9d4:	or     eax,0xbfcddd8a
  41d9d9:	xchg   edi,eax
  41d9da:	imul   esi,DWORD PTR [edx-0x29648e1d],0x70
  41d9e1:	jecxz  0x41da1f
  41d9e3:	sub    DWORD PTR [esi+esi*1+0x5ba05849],0xffffffc2
  41d9eb:	push   cs
  41d9ec:	xchg   esi,eax
  41d9ed:	lahf   
  41d9ee:	cs aas 
  41d9f0:	push   es
  41d9f1:	(bad)  
  41d9f2:	jbe    0x41d9a0
  41d9f4:	or     bh,al
  41d9f6:	shr    BYTE PTR [edx+0x71bbe23f],1
  41d9fc:	arpl   WORD PTR [ebx-0x1af72fc1],di
  41da02:	data16 rcl BYTE PTR [edx+ecx*2],cl
  41da06:	xor    DWORD PTR [ebp-0x5cf4f8d1],eax
  41da0c:	fwait
  41da0d:	sbb    DWORD PTR [ecx+0xa8245aa],ebp
  41da13:	xor    eax,0xc5304694
  41da18:	mov    ebx,0x8be83e4d
  41da1d:	sti    
  41da1e:	inc    edx
  41da1f:	inc    eax
  41da20:	fcomp  DWORD PTR [ecx+ebp*1-0x52]
  41da24:	clc    
  41da25:	into   
  41da26:	pop    es
  41da27:	arpl   WORD PTR [ebp+0x6d],sp
  41da2a:	out    0xb6,al
  41da2c:	xlat   BYTE PTR ds:[ebx]
  41da2d:	jecxz  0x41da63
  41da2f:	data16 js 0x41da00
  41da32:	shr    BYTE PTR [ebp-0x15f94307],0x66
  41da39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da3a:	adc    bl,BYTE PTR [edi]
  41da3c:	pop    ebp
  41da3d:	jg     0x41d9d1
  41da3f:	lahf   
  41da40:	xchg   ebp,eax
  41da41:	mov    dl,BYTE PTR [edi+ecx*4-0x18]
  41da45:	lock (bad) 
  41da47:	mov    dl,0xd5
  41da49:	mov    bh,0xf9
  41da4b:	les    eax,FWORD PTR [edx+edi*1+0x400d141b]
  41da52:	daa    
  41da53:	and    esp,DWORD PTR [ecx+0x59864150]
  41da59:	mov    edi,0x125c1b7b
  41da5e:	mov    edx,0x34cd80df
  41da63:	loopne 0x41d9f7
  41da65:	adc    edx,DWORD PTR [ebx+0x1d41e62a]
  41da6b:	pop    edi
  41da6c:	mov    edx,0x92ac24e7
  41da71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da72:	push   ds
  41da73:	repz out dx,al
  41da75:	retf   0x9a32
  41da78:	add    BYTE PTR [esi-0x6cdd4e6e],dl
  41da7e:	lock arpl WORD PTR [ecx],dx
  41da81:	dec    edx
  41da82:	or     BYTE PTR [eax+0xb],dh
  41da85:	in     eax,0x17
  41da87:	rcl    DWORD PTR [edi],0x55
  41da8a:	cmp    BYTE PTR ds:0x31ea8aa3,bl
  41da90:	in     al,0xd8
  41da92:	mov    esi,0x3394b426
  41da97:	sub    BYTE PTR ds:0x185b5e4b,dl
  41da9d:	mov    edx,0x4ff2acfc
  41daa2:	push   edx
  41daa3:	cli    
  41daa4:	xchg   esp,eax
  41daa5:	add    eax,0x4075beeb
  41daaa:	xor    cl,al
  41daac:	push   0xffffffb3
  41daae:	or     eax,0x858d3051
  41dab3:	xor    BYTE PTR [ebx-0x78],dl
  41dab6:	mov    ah,dl
  41dab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dab9:	sbb    DWORD PTR [edx-0x17],ecx
  41dabc:	jle    0x41dab8
  41dabe:	adc    DWORD PTR [esi+ebx*1],ecx
  41dac1:	xor    BYTE PTR [edx],0xcc
  41dac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dac5:	lock jne 0x41daf1
  41dac8:	aad    0xff
  41daca:	or     al,0xb8
  41dacc:	not    BYTE PTR [edi+0x6e]
  41dacf:	cmp    edi,ebp
  41dad1:	mov    ah,BYTE PTR [edx]
  41dad3:	mov    esi,0xc8496b3e
  41dad8:	(bad)  
  41dad9:	xor    eax,0x4aafda79
  41dade:	in     eax,dx
  41dadf:	jne    0x41da9a
  41dae1:	cli    
  41dae2:	scas   al,BYTE PTR es:[edi]
  41dae3:	sub    BYTE PTR [eax+0x10],ch
  41dae6:	xor    eax,edi
  41dae8:	stos   BYTE PTR es:[edi],al
  41dae9:	daa    
  41daea:	mov    DWORD PTR [ecx+0x78],esp
  41daed:	pop    es
  41daee:	sbb    ebp,DWORD PTR [ebp+0x6a0083e0]
  41daf4:	adc    ebx,DWORD PTR [edx]
  41daf6:	sub    DWORD PTR [ebx],eax
  41daf8:	out    dx,eax
  41daf9:	shl    BYTE PTR [ebp+ecx*8-0x39],1
  41dafd:	icebp  
  41dafe:	mov    ah,0xba
  41db00:	pop    ds
  41db01:	cmp    DWORD PTR cs:[esi+ecx*1-0x1ca7979a],ecx
  41db09:	add    BYTE PTR [ebp+0x3eb1b443],dh
  41db0f:	pop    eax
  41db10:	(bad)  
  41db12:	xchg   ebx,eax
  41db13:	inc    eax
  41db14:	dec    esi
  41db15:	mov    ds:0xb8109cf2,al
  41db1a:	or     DWORD PTR [edx+0x439e0de4],esi
  41db20:	lods   eax,DWORD PTR ds:[esi]
  41db21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db22:	xor    al,0x38
  41db24:	addr16 xchg edx,eax
  41db26:	lods   al,BYTE PTR ds:[esi]
  41db27:	or     ebp,DWORD PTR [eax+0x75]
  41db2a:	sbb    BYTE PTR [edi+0x15ba310e],dh
  41db30:	push   cs
  41db31:	stos   BYTE PTR es:[edi],al
  41db32:	pop    eax
  41db33:	mov    ds:0x70342f58,al
  41db38:	mov    ecx,0xff6c8d7c
  41db3d:	mov    ebx,DWORD PTR [edx+0x393109d0]
  41db43:	push   edx
  41db44:	push   ecx
  41db45:	rol    BYTE PTR [esi-0x8],0xe
  41db49:	inc    edi
  41db4a:	and    DWORD PTR [edi+eax*8-0x26],eax
  41db4e:	je     0x41db8a
  41db50:	inc    ecx
  41db51:	out    0xcb,al
  41db53:	dec    edi
  41db54:	lea    ebx,[eax]
  41db56:	test   DWORD PTR [ecx-0x74497a91],esp
  41db5c:	xor    al,0xba
  41db5e:	repz cdq 
  41db60:	mov    eax,0xd3b84c73
  41db65:	xchg   edx,eax
  41db66:	mov    esi,DWORD PTR [ecx-0x33cc978c]
  41db6c:	cwde   
  41db6d:	fld    TBYTE PTR [edi]
  41db6f:	mov    ch,0x87
  41db71:	mov    BYTE PTR [eax-0x131cf52],0xb3
  41db78:	add    BYTE PTR [ebx],cl
  41db7a:	repnz scas al,BYTE PTR es:[edi]
  41db7c:	dec    edx
  41db7d:	push   esp
  41db7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db80:	sbb    BYTE PTR [edi-0x42194fa],bh
  41db86:	out    0x88,eax
  41db88:	xor    al,0x80
  41db8a:	push   cs
  41db8b:	mov    ah,0x8c
  41db8d:	mov    ?,esp
  41db8f:	(bad)  
  41db90:	loop   0x41dbfa
  41db92:	loope  0x41dbc7
  41db94:	inc    ecx
  41db95:	mov    ch,0xfd
  41db97:	call   0x3b2e:0xf05a8e85
  41db9e:	iret   
  41db9f:	sar    bl,cl
  41dba1:	fnstenv [ecx]
  41dba3:	push   0x3ba3bc7b
  41dba8:	pop    edi
  41dba9:	sub    BYTE PTR [eax-0x56],al
  41dbac:	pop    ss
  41dbad:	inc    edx
  41dbae:	xchg   ebx,eax
  41dbaf:	aaa    
  41dbb0:	iret   
  41dbb1:	xchg   DWORD PTR [eax],ebx
  41dbb3:	pop    ebp
  41dbb4:	lods   eax,DWORD PTR ds:[esi]
  41dbb5:	lods   al,BYTE PTR ds:[esi]
  41dbb6:	loop   0x41dba7
  41dbb8:	dec    eax
  41dbb9:	pop    ebx
  41dbba:	icebp  
  41dbbb:	(bad)  
  41dbbc:	mov    WORD PTR [ecx],?
  41dbbe:	pop    ebx
  41dbbf:	mov    ch,0xfe
  41dbc1:	xchg   ebx,eax
  41dbc2:	xchg   DWORD PTR [ebp-0x718a2ffe],esp
  41dbc8:	out    dx,eax
  41dbc9:	mov    edx,DWORD PTR [esi]
  41dbcb:	cmp    DWORD PTR [esi],edx
  41dbcd:	mov    al,BYTE PTR [ebx+0x46]
  41dbd0:	pop    esp
  41dbd1:	pop    eax
  41dbd2:	xchg   esi,eax
  41dbd3:	ins    DWORD PTR es:[edi],dx
  41dbd4:	xor    DWORD PTR [eax+0xb2ed96c],esi
  41dbda:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41dbdc:	and    al,0x24
  41dbde:	sub    al,0xa2
  41dbe0:	add    bh,al
  41dbe2:	lods   eax,DWORD PTR gs:[esi]
  41dbe4:	and    eax,0xd35f345b
  41dbe9:	test   DWORD PTR [ebx+0x75400c8f],esp
  41dbef:	xor    ah,ch
  41dbf1:	mov    esi,0x82841a07
  41dbf6:	fcmovb st,st(2)
  41dbf8:	jo     0x41dc2b
  41dbfa:	dec    edx
  41dbfb:	scas   al,BYTE PTR es:[edi]
  41dbfc:	sbb    al,0x34
  41dbfe:	aaa    
  41dbff:	test   al,0x42
  41dc01:	jle    0x41dc3e
  41dc03:	out    0xc8,al
  41dc05:	mov    esi,0xa63bb99e
  41dc0a:	xchg   esp,eax
  41dc0b:	test   al,0xf3
  41dc0d:	fsubr  DWORD PTR [esi+0xb]
  41dc10:	std    
  41dc11:	xchg   DWORD PTR [esp+ebx*4],ebp
  41dc14:	mov    ds:0x80e662b6,al
  41dc19:	pop    ecx
  41dc1a:	jns    0x41dbd6
  41dc1c:	shl    BYTE PTR [eax],1
  41dc1e:	jae    0x41dc34
  41dc20:	cmp    eax,DWORD PTR [eax-0x6d407c36]
  41dc26:	imul   ebx,DWORD PTR [ecx+0x38ddd3da],0x78498efa
  41dc30:	and    edx,esp
  41dc32:	scas   eax,DWORD PTR es:[edi]
  41dc33:	jmp    0x41dc6c
  41dc35:	(bad)  
  41dc37:	mov    bl,0x36
  41dc39:	ror    DWORD PTR [ebx+edi*1],0x9b
  41dc3d:	xchg   BYTE PTR [esi],al
  41dc3f:	fcomp  DWORD PTR [eax]
  41dc41:	dec    edx
  41dc42:	mov    BYTE PTR [ebp-0x77],dl
  41dc45:	adc    dh,ch
  41dc47:	inc    ecx
  41dc48:	retf   
  41dc49:	leave  
  41dc4a:	pop    edx
  41dc4b:	(bad)  
  41dc4c:	jne    0x41dbe6
  41dc4e:	mov    edx,0xb6b97292
  41dc53:	ins    DWORD PTR es:[edi],dx
  41dc54:	adc    al,0xa
  41dc56:	enter  0x301a,0xbc
  41dc5a:	sub    ch,BYTE PTR [edx]
  41dc5c:	jmp    0xd8fda34b
  41dc61:	out    0x29,al
  41dc63:	mov    bl,0xe
  41dc65:	xchg   ebx,eax
  41dc66:	push   edi
  41dc67:	dec    ebx
  41dc68:	sbb    bh,dl
  41dc6a:	push   cs
  41dc6b:	jo     0x41dc8d
  41dc6d:	xchg   esi,eax
  41dc6e:	not    al
  41dc70:	leave  
  41dc71:	pop    ebx
  41dc72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc73:	dec    edx
  41dc74:	adc    DWORD PTR [ebx-0x64040366],ecx
  41dc7a:	push   edx
  41dc7b:	into   
  41dc7c:	mov    ah,0xd0
  41dc7e:	dec    ecx
  41dc7f:	test   al,0x1f
  41dc81:	pop    edx
  41dc82:	sub    al,BYTE PTR [eax-0x46de7548]
  41dc88:	push   esi
  41dc89:	jo     0x41dc5e
  41dc8b:	push   eax
  41dc8c:	push   cs
  41dc8d:	cmp    bh,BYTE PTR [esi+0x552ef03e]
  41dc93:	and    eax,0xbde9d8c7
  41dc98:	sbb    BYTE PTR [edx+edi*8+0x1ae69810],cl
  41dc9f:	in     eax,0xce
  41dca1:	arpl   sp,di
  41dca3:	or     BYTE PTR [edx-0x5237b2aa],dh
  41dca9:	sub    DWORD PTR [esi+0x7daa1d25],0xffffff99
  41dcb0:	ror    DWORD PTR [ebx+0x5d80c68a],0x50
  41dcb7:	xchg   esp,eax
  41dcb8:	push   esi
  41dcb9:	add    esp,esp
  41dcbb:	pop    ds
  41dcbc:	xor    BYTE PTR [edi+ebp*8+0x774f04e3],al
  41dcc3:	mov    ch,0x58
  41dcc5:	or     DWORD PTR [ebp-0x731fb04f],eax
  41dccb:	inc    ebp
  41dccc:	adc    BYTE PTR [edi+0x5a51075b],dh
  41dcd2:	dec    ecx
  41dcd3:	test   al,0x5
  41dcd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcd6:	push   ds
  41dcd7:	out    dx,eax
  41dcd8:	dec    eax
  41dcd9:	sbb    ebx,ecx
  41dcdb:	lods   al,BYTE PTR ds:[esi]
  41dcdc:	add    ebx,DWORD PTR [ebp+0xe]
  41dcdf:	mov    eax,0x6fc4ca0c
  41dce4:	pop    eax
  41dce5:	jne    0x41dd27
  41dce7:	adc    edi,DWORD PTR ds:0x475f1848
  41dced:	mov    ah,0x2a
  41dcef:	out    0x1b,al
  41dcf1:	je     0x41dd2a
  41dcf3:	stos   BYTE PTR es:[edi],al
  41dcf4:	mov    ebp,0xe5466e4a
  41dcf9:	test   DWORD PTR [ecx-0x54],eax
  41dcfc:	in     al,0xf7
  41dcfe:	inc    edx
  41dcff:	stos   DWORD PTR es:[edi],eax
  41dd00:	inc    edi
  41dd01:	arpl   WORD PTR [edi],si
  41dd03:	sub    eax,0x109a89c6
  41dd08:	das    
  41dd09:	pop    esi
  41dd0a:	nop
  41dd0b:	scas   al,BYTE PTR es:[edi]
  41dd0c:	jb     0x41dd81
  41dd0e:	cmp    ch,al
  41dd10:	aas    
  41dd11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd12:	push   ss
  41dd13:	jne    0x41dd31
  41dd15:	sub    al,0xdb
  41dd17:	inc    esi
  41dd18:	and    eax,0xd206ca4
  41dd1d:	pop    ebx
  41dd1e:	sbb    BYTE PTR [eax+0xf],ch
  41dd21:	cli    
  41dd22:	ror    DWORD PTR [ebp-0x25],1
  41dd25:	ds push eax
  41dd27:	pop    ebp
  41dd28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd29:	es scas al,BYTE PTR es:[edi]
  41dd2b:	(bad)  
  41dd2c:	loop   0x41dd37
  41dd2e:	or     ecx,DWORD PTR [esi+ecx*1+0x2fb6706a]
  41dd35:	mov    eax,0x8caa3cf9
  41dd3a:	out    0xea,eax
  41dd3c:	sbb    DWORD PTR ss:[edx],0x3abbd3dc
  41dd43:	add    BYTE PTR [eax],cl
  41dd45:	or     esi,DWORD PTR [eax]
  41dd47:	clc    
  41dd48:	push   0x70ef03c4
  41dd4d:	iret   
  41dd4e:	dec    ecx
  41dd4f:	dec    edi
  41dd50:	ins    BYTE PTR es:[edi],dx
  41dd51:	mov    esp,0xc60ca1aa
  41dd56:	int3   
  41dd57:	jle    0x41dd72
  41dd59:	cmp    bl,BYTE PTR [edi+edi*1+0x5ef05fd]
  41dd60:	inc    eax
  41dd61:	push   ebx
  41dd62:	xor    ch,BYTE PTR [esi-0x3d]
  41dd65:	xchg   BYTE PTR [edx+0xa],bl
  41dd68:	(bad)  
  41dd69:	push   edx
  41dd6a:	popa   
  41dd6b:	jb     0x41dd83
  41dd6d:	cmp    bl,BYTE PTR [edx]
  41dd6f:	rcl    BYTE PTR [esi-0x67794c38],0x79
  41dd76:	ins    BYTE PTR es:[edi],dx
  41dd77:	push   ss
  41dd78:	rcr    DWORD PTR [ebx+0x5475c70a],1
  41dd7e:	test   al,0xe6
  41dd80:	sbb    cl,BYTE PTR [ebx+0x47]
  41dd83:	pop    eax
  41dd84:	lods   eax,DWORD PTR ds:[esi]
  41dd85:	sahf   
  41dd86:	dec    eax
  41dd87:	call   0xb8262973
  41dd8c:	mov    eax,0x49af765a
  41dd91:	pop    es
  41dd92:	loopne 0x41dd4a
  41dd94:	or     eax,0x50614cfa
  41dd99:	aam    0x1d
  41dd9b:	mov    ss,ebp
  41dd9d:	clc    
  41dd9e:	loope  0x41dd7a
  41dda0:	imul   ecx,DWORD PTR [edx+ecx*2-0x6e4ec715],0x371eb32a
  41ddab:	cmp    BYTE PTR [eax+esi*1-0x72d75811],bh
  41ddb2:	or     BYTE PTR [edi+0x496e95a0],ch
  41ddb8:	push   ss
  41ddb9:	mov    edx,0x6b9fb147
  41ddbe:	test   ah,dl
  41ddc0:	sub    eax,0x7eb36c52
  41ddc5:	mov    ebx,DWORD PTR [edx]
  41ddc7:	cli    
  41ddc8:	xchg   DWORD PTR [eax],esi
  41ddca:	fwait
  41ddcb:	mov    ebx,0x4833f614
  41ddd0:	jge    0x41ddb1
  41ddd2:	mov    bl,BYTE PTR [ebx]
  41ddd4:	sbb    BYTE PTR [esi+0x7b4fd0fc],ah
  41ddda:	out    0xf6,al
  41dddc:	push   ss
  41dddd:	jecxz  0x41de1e
  41dddf:	hlt    
  41dde0:	adc    DWORD PTR [edx],ebp
  41dde2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dde3:	xor    cl,al
  41dde5:	outs   dx,BYTE PTR ds:[esi]
  41dde6:	pop    esi
  41dde7:	rol    BYTE PTR [edi],1
  41dde9:	mov    esp,0x870fe74f
  41ddee:	retf   0xe539
  41ddf1:	dec    edi
  41ddf2:	mov    BYTE PTR [ebx],bl
  41ddf4:	imul   esp,DWORD PTR [eax],0x55
  41ddf7:	push   0xe6bb61f0
  41ddfc:	mov    ah,0x8b
  41ddfe:	xor    BYTE PTR [ebp-0x51cace48],0xe4
  41de05:	pop    ebx
  41de06:	xor    DWORD PTR [edx],ecx
  41de08:	cld    
  41de09:	dec    edx
  41de0a:	lods   al,BYTE PTR ds:[esi]
  41de0b:	cmp    BYTE PTR [ebp-0x5528e739],dh
  41de11:	loope  0x41de87
  41de13:	cmp    DWORD PTR [ecx-0x59],edi
  41de16:	cs js  0x41de05
  41de19:	lea    ebp,[edx+0x17]
  41de1c:	fiadd  WORD PTR [ebx]
  41de1e:	mov    edx,0x2832f6ce
  41de23:	aas    
  41de24:	scas   al,BYTE PTR es:[edi]
  41de25:	es push esi
  41de27:	lods   eax,DWORD PTR ds:[esi]
  41de28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de29:	mov    eax,ds:0xc0dcb56
  41de2e:	xor    DWORD PTR [ebx+0x48],0x61
  41de32:	fcmovb st,st(7)
  41de34:	(bad)  
  41de35:	dec    edi
  41de36:	aas    
  41de37:	jae    0x41de04
  41de39:	mov    dl,BYTE PTR [edi]
  41de3b:	loope  0x41dea8
  41de3d:	aam    0x20
  41de3f:	cli    
  41de40:	pop    ss
  41de41:	lods   al,BYTE PTR ds:[esi]
  41de42:	test   BYTE PTR [edx],dh
  41de44:	jo     0x41de48
  41de46:	sbb    al,0x44
  41de48:	and    DWORD PTR [ecx-0x2f333ea6],ecx
  41de4e:	ins    BYTE PTR es:[edi],dx
  41de4f:	ror    ebx,0x1a
  41de52:	mov    bl,0xb6
  41de54:	xor    cl,ch
  41de56:	stos   BYTE PTR es:[edi],al
  41de57:	xor    eax,0xb36e42bb
  41de5c:	sub    dh,al
  41de5e:	push   edx
  41de5f:	mov    ecx,0xfe4bc08a
  41de64:	push   esi
  41de65:	fmul   QWORD PTR [esi+0x29216aa]
  41de6b:	fwait
  41de6c:	xchg   ecx,eax
  41de6d:	xchg   ebx,eax
  41de6e:	add    eax,0xfc2c08d7
  41de73:	mov    al,0xea
  41de75:	cmp    BYTE PTR [eax],al
  41de77:	xor    eax,0x3ac1d251
  41de7c:	or     eax,0x4998350b
  41de81:	pop    esp
  41de82:	lea    eax,[edi]
  41de84:	push   0x7daed27f
  41de89:	lds    esi,FWORD PTR [ebx-0x73]
  41de8c:	popa   
  41de8d:	ret    0x5ad6
  41de90:	(bad)  
  41de91:	(bad)  
  41de93:	(bad)  
  41de94:	ds xchg ecx,eax
  41de96:	cmp    eax,eax
  41de98:	fnstsw WORD PTR [ecx]
  41de9a:	pop    eax
  41de9b:	add    ch,al
  41de9d:	mov    ch,dl
  41de9f:	inc    ebp
  41dea0:	mov    al,BYTE PTR [ecx]
  41dea2:	inc    edx
  41dea3:	fs push edx
  41dea5:	les    esp,FWORD PTR [eax]
  41dea7:	int3   
  41dea8:	sti    
  41dea9:	mov    edi,DWORD PTR [edx+0x7a]
  41deac:	pop    ds
  41dead:	ins    DWORD PTR es:[edi],dx
  41deae:	test   al,0x4c
  41deb0:	iret   
  41deb1:	cmp    dl,0xe3
  41deb4:	aam    0x8b
  41deb6:	cmp    DWORD PTR [edi],edx
  41deb8:	pop    ss
  41deb9:	sbb    dh,BYTE PTR [edi-0x2df9bcc0]
  41debf:	imul   eax,ecx,0xae04061e
  41dec5:	(bad)  
  41dec6:	call   0xf4cf:0xca98060
  41decd:	fidiv  WORD PTR [eax]
  41decf:	cmp    al,al
  41ded1:	xchg   ecx,edi
  41ded3:	jmp    0xaf8305d0
  41ded8:	mov    ecx,0x11f3e964
  41dedd:	jmp    0xbbae:0xb7f5c587
  41dee4:	and    ecx,esi
  41dee6:	mov    dl,0x93
  41dee8:	jg     0x41dedc
  41deea:	jnp    0x41deb7
  41deec:	cs dec ebp
  41deee:	ss add dl,bl
  41def1:	cmp    edi,DWORD PTR [ebx-0x743f3e70]
  41def7:	das    
  41def8:	sbb    dl,dl
  41defa:	icebp  
  41defb:	test   BYTE PTR [ebp+0x335db7c1],0xfd
  41df02:	cs pop es
  41df04:	or     eax,0x3577f178
  41df09:	(bad)  
  41df0a:	xor    BYTE PTR [ecx],ch
  41df0c:	pusha  
  41df0d:	out    dx,al
  41df0e:	ds push 0xea9f51fa
  41df14:	dec    eax
  41df15:	icebp  
  41df16:	bound  esi,QWORD PTR [esi-0x4c8d2ba3]
  41df1c:	pop    ss
  41df1d:	sbb    ah,BYTE PTR [esi]
  41df1f:	pop    edx
  41df20:	jno    0x41df30
  41df22:	jmp    0x41df88
  41df24:	mov    esi,0xa61f2ab
  41df29:	mov    DWORD PTR [edx],ebp
  41df2b:	(bad)  
  41df2c:	jmp    0x16a8:0xf8570795
  41df33:	sub    al,0x2
  41df35:	add    BYTE PTR [edx],0xac
  41df38:	add    ecx,DWORD PTR [edx+eax*2+0x1a8a2c46]
  41df3f:	std    
  41df40:	cmp    al,0xa8
  41df42:	ret    0xccb2
  41df45:	jae    0x41df9b
  41df47:	dec    eax
  41df48:	aam    0x71
  41df4a:	xchg   edx,eax
  41df4b:	add    DWORD PTR [esi],0xffffff83
  41df4e:	jbe    0x41df5a
  41df50:	mov    BYTE PTR [edi],al
  41df52:	test   DWORD PTR [edx-0x78a48453],edi
  41df58:	push   ss
  41df59:	jp     0x41df1e
  41df5b:	(bad)  
  41df5c:	rep ins BYTE PTR es:[edi],dx
  41df5e:	mov    dh,0x5b
  41df60:	aaa    
  41df61:	aad    0x5a
  41df63:	mov    al,0xb9
  41df65:	pushf  
  41df66:	push   0xfffffff5
  41df68:	push   ebp
  41df69:	mov    ecx,0xcf3ab840
  41df6e:	clc    
  41df6f:	push   es
  41df70:	adc    ebx,DWORD PTR [edx]
  41df72:	pop    ebx
  41df73:	repnz (bad) [ebx+0x71]
  41df77:	or     bl,BYTE PTR [eax]
  41df79:	pop    eax
  41df7a:	and    ch,BYTE PTR [ebp+ecx*4+0x146fff42]
  41df81:	dec    edx
  41df82:	std    
  41df83:	xchg   ebp,eax
  41df84:	xchg   DWORD PTR [ecx+0x10e86f9b],esp
  41df8a:	ror    ch,0x48
  41df8d:	mov    BYTE PTR [edx],cl
  41df8f:	hlt    
  41df90:	loop   0x41dff9
  41df92:	js     0x41dfa5
  41df94:	push   ds
  41df95:	cdq    
  41df96:	xor    BYTE PTR [eax],cl
  41df98:	stc    
  41df99:	dec    ecx
  41df9a:	cmp    DWORD PTR [edx-0x6624a163],eax
  41dfa0:	pop    eax
  41dfa1:	lea    ebx,[edi-0x3f2e448]
  41dfa7:	fiadd  WORD PTR [ebx+0x6a]
  41dfaa:	dec    eax
  41dfab:	clc    
  41dfac:	sbb    BYTE PTR [edi],bl
  41dfae:	cmc    
  41dfaf:	or     BYTE PTR [eax+0xace9f3],0x99
  41dfb6:	jp     0x41dfb9
  41dfb8:	adc    ch,BYTE PTR [edx+0x6a]
  41dfbb:	mov    bh,0xac
  41dfbd:	hlt    
  41dfbe:	stos   BYTE PTR es:[edi],al
  41dfbf:	inc    edx
  41dfc0:	fnstcw WORD PTR [ecx-0x1f993a2]
  41dfc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfc8:	in     al,0x88
  41dfca:	inc    edi
  41dfcb:	jo     0x41df86
  41dfcd:	mov    eax,ds:0x8d37e82f
  41dfd2:	xor    DWORD PTR [esi-0x67],0x17adb36a
  41dfd9:	test   BYTE PTR [esi-0x14cb117d],al
  41dfdf:	jp     0x41e04c
  41dfe1:	pop    edx
  41dfe2:	fcomp  DWORD PTR [esi]
  41dfe4:	in     al,0x88
  41dfe6:	ret    0xcba
  41dfe9:	pop    edx
  41dfea:	or     eax,0x9e4483ea
  41dfef:	push   esi
  41dff0:	adc    edx,DWORD PTR [ecx-0x600f9bb0]
  41dff6:	cli    
  41dff7:	xchg   bl,bl
  41dff9:	and    DWORD PTR [ebp-0x17f5edaf],ebp
  41dfff:	and    bh,BYTE PTR [edx+0x58de3066]
  41e005:	xchg   edi,eax
  41e006:	pop    esi
  41e007:	xchg   ecx,eax
  41e008:	jno    0x41df97
  41e00a:	dec    edx
  41e00b:	mov    al,0x29
  41e00d:	add    edi,ebx
  41e00f:	or     DWORD PTR [edx+ecx*8+0x31],edx
  41e013:	mov    BYTE PTR [ebp-0x72f5b195],al
  41e019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e01a:	pusha  
  41e01b:	(bad)
  41e01f:	scas   al,BYTE PTR es:[edi]
  41e020:	pop    ebx
  41e021:	push   ebp
  41e022:	loopne 0x41e014
  41e024:	sbb    ah,bl
  41e026:	data16 fcomp st(4)
  41e029:	adc    eax,0x88d8714c
  41e02e:	xchg   ebx,eax
  41e02f:	jo     0x41e023
  41e031:	fcmove st,st(6)
  41e033:	xchg   esp,eax
  41e034:	icebp  
  41e035:	sahf   
  41e036:	repnz sbb ah,al
  41e039:	cmp    eax,0x7a104c3b
  41e03e:	fistp  WORD PTR [ecx+0x7b]
  41e041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e042:	in     al,0xa2
  41e044:	adc    ch,BYTE PTR [ecx]
  41e046:	(bad)  
  41e047:	or     dh,ah
  41e049:	mov    WORD PTR [edx+0x3aad7755],?
  41e04f:	xor    eax,0x58323e3f
  41e054:	int    0x68
  41e056:	jle    0x41e0d4
  41e058:	lahf   
  41e059:	sar    DWORD PTR [edi],1
  41e05b:	sub    esi,DWORD PTR [ecx+eiz*4]
  41e05e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e05f:	sub    esi,ebp
  41e061:	adc    eax,0xa29ad7f0
  41e067:	pop    edi
  41e068:	jp     0x41dff7
  41e06a:	(bad)  
  41e06b:	icebp  
  41e06c:	into   
  41e06d:	shl    DWORD PTR [esi],1
  41e06f:	js     0x41e0b8
  41e071:	outs   dx,BYTE PTR ds:[esi]
  41e072:	or     eax,0x3fca106f
  41e077:	mov    bl,0x4d
  41e079:	pop    esp
  41e07a:	cmovnp eax,DWORD PTR [edi]
  41e07d:	cmp    al,0xfc
  41e07f:	imul   ecx,DWORD PTR [edi],0x56
  41e082:	xchg   esp,eax
  41e083:	and    DWORD PTR [ebx-0x7d9b3b7],esp
  41e089:	rcr    DWORD PTR [esi-0x45],1
  41e08c:	inc    esi
  41e08d:	jmp    FWORD PTR [esi-0x74]
  41e090:	pminsw mm0,QWORD PTR [ebx+0x5d]
  41e094:	inc    ebx
  41e095:	pop    ebx
  41e096:	mov    ch,0x92
  41e098:	cld    
  41e099:	(bad)  
  41e09a:	cli    
  41e09b:	ins    BYTE PTR es:[edi],dx
  41e09c:	mov    esp,0x519dfa8f
  41e0a1:	imul   edx,ebp,0x6c889970
  41e0a7:	pop    ds
  41e0a8:	cmp    al,0xc9
  41e0aa:	mov    BYTE PTR ss:[edx+0x4c5aa5c1],cl
  41e0b1:	mov    BYTE PTR [edx+0x56dac086],bl
  41e0b7:	xchg   ecx,eax
  41e0b8:	test   DWORD PTR [ebx+edx*1-0x1],ebx
  41e0bc:	push   0x1c
  41e0be:	push   eax
  41e0bf:	mov    dh,0xaa
  41e0c1:	and    BYTE PTR [eax+0x5e],cl
  41e0c4:	push   ebx
  41e0c5:	xchg   BYTE PTR [edx+0x59],bl
  41e0c8:	in     eax,dx
  41e0c9:	xlat   BYTE PTR ds:[ebx]
  41e0ca:	mov    al,ds:0x36641e8c
  41e0cf:	sbb    bh,bh
  41e0d1:	retf   
  41e0d2:	dec    eax
  41e0d3:	stc    
  41e0d4:	cdq    
  41e0d5:	mov    eax,0x8bae526e
  41e0da:	pop    edx
  41e0db:	repnz jecxz 0x41e0d3
  41e0de:	adc    DWORD PTR [esi-0x2c03d6a0],eax
  41e0e4:	aas    
  41e0e5:	out    dx,eax
  41e0e6:	push   ds
  41e0e7:	sbb    al,0x15
  41e0e9:	jmp    0x63e9:0xd7162dbc
  41e0f0:	nop
  41e0f1:	popf   
  41e0f2:	push   0x1e
  41e0f4:	mov    ch,0x4b
  41e0f6:	dec    ebx
  41e0f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0f8:	sub    BYTE PTR [ebp-0x94d31c9],cl
  41e0fe:	sbb    esp,DWORD PTR [esi+0x73]
  41e101:	test   BYTE PTR [edi+edx*1],al
  41e104:	fsubr  DWORD PTR [eax+0x5f]
  41e107:	mov    ah,0xa9
  41e109:	popf   
  41e10a:	loope  0x41e0cf
  41e10c:	(bad)  
  41e10d:	cmp    dl,BYTE PTR [esi-0x3d]
  41e110:	pusha  
  41e111:	pop    ss
  41e112:	mov    cl,0x1e
  41e114:	mov    DWORD PTR [esi],edi
  41e116:	daa    
  41e117:	sub    eax,0xb4ee2228
  41e11c:	jb     0x41e175
  41e11e:	ins    DWORD PTR es:[edi],dx
  41e11f:	ret    
  41e120:	push   ds
  41e121:	pop    edx
  41e122:	mov    al,ss:0x64076cde
  41e128:	adc    al,ch
  41e12a:	mov    BYTE PTR [edi],dh
  41e12c:	call   0x85f8fc73
  41e131:	mov    ch,0x11
  41e133:	lahf   
  41e134:	sbb    BYTE PTR [ebp-0x73],0x42
  41e138:	sbb    edx,ebp
  41e13a:	out    dx,eax
  41e13b:	xor    esi,eax
  41e13d:	and    edi,edi
  41e13f:	add    eax,0x9c8add7e
  41e144:	xor    al,0x7f
  41e146:	inc    edi
  41e147:	lods   eax,DWORD PTR ds:[esi]
  41e148:	mov    cl,0x51
  41e14a:	mov    ecx,0xf73718be
  41e14f:	push   cs
  41e150:	mov    eax,ds:0xd5043b3a
  41e155:	and    ebp,DWORD PTR [ebx]
  41e157:	imul   ebp,DWORD PTR [edi+0x24cc8a9c],0x89b31e76
  41e161:	jns    0x41e11a
  41e163:	les    ebp,FWORD PTR [ebx]
  41e165:	pop    ebx
  41e166:	sub    DWORD PTR [edi-0x3f],ebx
  41e169:	fs stos DWORD PTR es:[edi],eax
  41e16b:	js     0x41e13c
  41e16d:	sbb    ecx,0xffffffa3
  41e170:	pop    ss
  41e171:	(bad)  
  41e172:	cld    
  41e173:	pop    ss
  41e174:	pop    ebx
  41e175:	push   edx
  41e176:	mov    eax,0x372d649f
  41e17b:	enter  0x23c5,0x9a
  41e17f:	jae    0x41e199
  41e181:	adc    BYTE PTR [ebp-0x4e],bh
  41e184:	push   edx
  41e185:	jg     0x41e1ef
  41e187:	push   eax
  41e188:	sbb    edi,DWORD PTR [edx+0x36c8dafc]
  41e18e:	pushf  
  41e18f:	and    BYTE PTR [esi-0xc],ch
  41e192:	mov    al,ds:0x9abbc723
  41e197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e198:	push   cs
  41e199:	sbb    ebx,esp
  41e19b:	sar    ecx,0x28
  41e19e:	jnp    0x41e21e
  41e1a0:	mov    ebx,0x4a98375c
  41e1a5:	(bad)  
  41e1a7:	sbb    BYTE PTR [eax+0x6e],0x6f
  41e1ab:	test   al,0x2d
  41e1ad:	out    dx,eax
  41e1ae:	loope  0x41e1df
  41e1b0:	push   ebx
  41e1b1:	cld    
  41e1b2:	xor    bh,ah
  41e1b4:	adc    al,0xfe
  41e1b6:	xlat   BYTE PTR ds:[ebx]
  41e1b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1b8:	sbb    ecx,DWORD PTR [ebp-0x48]
  41e1bb:	add    cl,BYTE PTR [eax]
  41e1bd:	adc    esi,ebx
  41e1bf:	mov    ebx,0x6ef7db9d
  41e1c4:	xor    BYTE PTR [esi+0x3],cl
  41e1c7:	test   al,0x40
  41e1c9:	or     eax,0xac5fb447
  41e1ce:	mov    al,0x1b
  41e1d0:	inc    edx
  41e1d1:	mov    edi,0x279fb418
  41e1d6:	jmp    0x41e1b6
  41e1d8:	jnp    0x41e18c
  41e1da:	xor    BYTE PTR [eax-0x227c09b2],bl
  41e1e0:	fdiv   DWORD PTR [ebx]
  41e1e2:	push   eax
  41e1e3:	scas   eax,DWORD PTR es:[edi]
  41e1e4:	lock out 0x23,al
  41e1e7:	sbb    edi,DWORD PTR fs:[edx-0x57]
  41e1eb:	repz sub BYTE PTR [edi+eax*2],bh
  41e1ef:	rol    BYTE PTR [ecx],1
  41e1f1:	addr16 in al,dx
  41e1f3:	jae    0x41e26c
  41e1f5:	xchg   BYTE PTR [edx+0x94e0394],bl
  41e1fb:	mov    fs,WORD PTR [eax-0xa37b40d]
  41e201:	pop    ecx
  41e202:	mov    ?,WORD PTR [eax+0x3d307032]
  41e208:	jns    0x41e27b
  41e20a:	mov    ch,BYTE PTR [ebx-0x38ae1348]
  41e210:	sbb    dl,BYTE PTR [edx-0x41]
  41e213:	mov    al,ds:0x249c38a6
  41e218:	ror    edx,cl
  41e21a:	retf   0x56c6
  41e21d:	js     0x41e221
  41e21f:	pop    ecx
  41e220:	xor    eax,0x78d43a16
  41e225:	inc    esi
  41e226:	int    0xae
  41e228:	push   eax
  41e229:	cdq    
  41e22a:	js     0x41e1fc
  41e22c:	pop    ss
  41e22d:	ficomp DWORD PTR [edx]
  41e22f:	hlt    
  41e230:	rcr    DWORD PTR [ecx+ecx*1-0x73],cl
  41e234:	pop    edi
  41e235:	adc    cl,dl
  41e237:	out    0x48,al
  41e239:	or     BYTE PTR [edx],0xfc
  41e23c:	add    ah,BYTE PTR [edi]
  41e23e:	call   0x375367e4
  41e243:	push   0x62ddd7b1
  41e248:	test   al,0x4e
  41e24a:	jp     0x41e200
  41e24c:	pop    es
  41e24d:	ret    0x750e
  41e250:	add    eax,0xf9be395d
  41e255:	push   0xffffff98
  41e257:	sbb    eax,0x2a889f1b
  41e25c:	dec    ebp
  41e25d:	call   0x190a8a71
  41e262:	fdiv   DWORD PTR [eax-0x3eaf4016]
  41e268:	or     eax,0x4b5b3bba
  41e26d:	mov    WORD PTR [ebx],?
  41e26f:	add    esp,DWORD PTR [ecx-0x654e1569]
  41e275:	mov    ecx,DWORD PTR [edx-0x40a041aa]
  41e27b:	pop    ds
  41e27c:	xchg   esi,eax
  41e27d:	stc    
  41e27e:	(bad)  
  41e27f:	jmp    DWORD PTR [eax+0x10acd8ed]
  41e285:	xlat   BYTE PTR ds:[ebx]
  41e286:	push   es
  41e287:	lock aas 
  41e289:	mov    dl,bl
  41e28b:	mov    ecx,0xd87e08cf
  41e290:	cwde   
  41e291:	xor    BYTE PTR ds:0xc8b00e38,bh
  41e297:	fwait
  41e298:	iret   
  41e299:	ror    DWORD PTR [ebx],cl
  41e29b:	call   0x5309:0xfd43160f
  41e2a2:	daa    
  41e2a3:	mov    al,0x4
  41e2a5:	xchg   esi,eax
  41e2a6:	xor    DWORD PTR [eax],ebp
  41e2a8:	inc    ebx
  41e2a9:	and    BYTE PTR [edx+0x54fe19b6],dl
  41e2af:	jno    0x41e2d6
  41e2b1:	mov    gs,WORD PTR [edx+0x66]
  41e2b4:	in     eax,dx
  41e2b5:	pop    ebx
  41e2b6:	xor    ebx,DWORD PTR [edi]
  41e2b8:	mov    bl,0x26
  41e2ba:	sbb    eax,0x6254189f
  41e2bf:	lods   eax,DWORD PTR ds:[esi]
  41e2c0:	dec    edi
  41e2c1:	(bad)  
  41e2c2:	dec    esi
  41e2c3:	xchg   edx,esp
  41e2c5:	xchg   BYTE PTR [edx+0x4e],bh
  41e2c8:	stos   DWORD PTR es:[edi],eax
  41e2c9:	adc    al,0xa2
  41e2cb:	jp     0x41e335
  41e2cd:	mov    bl,0x32
  41e2cf:	clc    
  41e2d0:	stos   DWORD PTR es:[edi],eax
  41e2d1:	dec    eax
  41e2d2:	sbb    eax,0xdc802faf
  41e2d7:	jmp    0x3572:0xba5fe6aa
  41e2de:	sbb    eax,0x44d606ff
  41e2e3:	mov    ebx,0xc0e64538
  41e2e8:	push   ss
  41e2e9:	ror    ch,cl
  41e2eb:	mov    eax,0xba117d3a
  41e2f0:	jmp    0xe980a022
  41e2f5:	inc    edx
  41e2f6:	xchg   ebx,eax
  41e2f7:	pop    edx
  41e2f8:	push   0xffffff82
  41e2fa:	sub    ch,dl
  41e2fc:	xchg   ebx,ecx
  41e2fe:	inc    esp
  41e2ff:	cmp    eax,0xa837574a
  41e304:	sub    ch,BYTE PTR [ebx-0x1e01c792]
  41e30a:	addr16 xchg edx,eax
  41e30c:	mov    eax,0x27bb6831
  41e311:	jle    0x41e37d
  41e313:	sub    ch,dh
  41e315:	sbb    edi,DWORD PTR [esi]
  41e317:	enter  0x93b,0x89
  41e31b:	scas   al,BYTE PTR es:[edi]
  41e31c:	pop    eax
  41e31d:	rcl    DWORD PTR [esi+0x5a1c57d1],1
  41e323:	pop    es
  41e324:	or     eax,0xb1d23e93
  41e329:	jmp    0x41e36a
  41e32b:	enter  0x243,0xa0
  41e32f:	cmp    al,0xf0
  41e331:	xchg   edx,eax
  41e332:	xchg   esp,eax
  41e333:	ja     0x41e2d3
  41e335:	xchg   esi,eax
  41e336:	sbb    cl,cl
  41e338:	xchg   ebp,eax
  41e339:	jmp    0xcda7:0x24a3fce
  41e340:	loop   0x41e2e6
  41e342:	gs enter 0x1249,0x5
  41e347:	scas   al,BYTE PTR es:[edi]
  41e348:	bound  ecx,QWORD PTR [edi]
  41e34a:	push   es
  41e34b:	mov    ebx,0x23aa706a
  41e350:	or     dl,BYTE PTR [eax]
  41e352:	lods   eax,DWORD PTR ds:[esi]
  41e353:	mov    dl,0x9
  41e355:	inc    ecx
  41e356:	inc    esi
  41e357:	inc    eax
  41e358:	(bad)  
  41e35b:	dec    eax
  41e35c:	pop    esp
  41e35d:	pop    ss
  41e35e:	adc    ebx,eax
  41e360:	add    eax,0x190b306f
  41e365:	or     bh,BYTE PTR ds:0x81a92689
  41e36b:	arpl   WORD PTR [ecx+0x4f6ad0e6],si
  41e371:	mov    bh,BYTE PTR [edx-0x2]
  41e374:	mov    eax,ds:0x1bf92757
  41e379:	sbb    ecx,edx
  41e37b:	lods   al,BYTE PTR ds:[esi]
  41e37c:	into   
  41e37d:	mov    al,BYTE PTR [edx]
  41e37f:	dec    eax
  41e380:	retf   
  41e381:	jle    0x41e369
  41e383:	sub    BYTE PTR [edx+0x5f9a3cc1],0x8e
  41e38a:	adc    dl,BYTE PTR [ecx]
  41e38c:	(bad)  
  41e38d:	xor    ecx,DWORD PTR ds:0x37a725a3
  41e393:	sub    BYTE PTR [esi+edi*1-0x32d7c821],al
  41e39a:	inc    ebp
  41e39b:	leave  
  41e39c:	inc    ebx
  41e39d:	sbb    DWORD PTR [eax+eax*1-0x47],ebx
  41e3a1:	clc    
  41e3a2:	repz cli 
  41e3a4:	push   esp
  41e3a5:	imul   edi,DWORD PTR [edi+0x628443bc],0x21d1f91f
  41e3af:	fsub   DWORD PTR gs:[ecx-0x17]
  41e3b3:	scas   al,BYTE PTR es:[edi]
  41e3b4:	mov    cs,WORD PTR [eax+0x66]
  41e3b7:	test   al,0xd
  41e3b9:	or     dh,ah
  41e3bb:	shr    BYTE PTR [esi],0xe
  41e3be:	and    edi,DWORD PTR [edi+0x4fa69645]
  41e3c4:	sbb    edx,ebx
  41e3c6:	outs   dx,BYTE PTR ds:[esi]
  41e3c7:	mov    WORD PTR [ebx+0x14cbdc34],ss
  41e3cd:	jp     0x41e391
  41e3cf:	jo     0x41e450
  41e3d1:	rcr    BYTE PTR [esi+0x5],cl
  41e3d4:	stos   DWORD PTR es:[edi],eax
  41e3d5:	call   0xa8872038
  41e3da:	or     ebp,DWORD PTR [eax]
  41e3dc:	aad    0x84
  41e3de:	jp     0x41e42d
  41e3e0:	and    eax,0x15f0ff5c
  41e3e5:	xchg   bl,dh
  41e3e7:	(bad)  
  41e3e8:	jmp    0x41e448
  41e3ea:	jp     0x41e434
  41e3ec:	das    
  41e3ed:	mov    ebp,0xe0f32505
  41e3f2:	xchg   ebx,eax
  41e3f3:	cld    
  41e3f4:	cld    
  41e3f5:	lea    ecx,[edi]
  41e3f7:	mov    bh,0x10
  41e3f9:	push   0xffffffd4
  41e3fb:	jo     0x41e3d0
  41e3fd:	or     ecx,0xf92e0b9b
  41e403:	jbe    0x41e443
  41e405:	(bad)  
  41e406:	pop    esp
  41e407:	jle    0x41e454
  41e409:	out    dx,al
  41e40a:	or     al,0x26
  41e40c:	sar    DWORD PTR [edx],cl
  41e40e:	or     BYTE PTR [esi+0x10a71d6b],ch
  41e414:	jp     0x41e45f
  41e416:	sbb    eax,0xac3682e
  41e41b:	mov    bh,0x73
  41e41d:	xor    DWORD PTR [ebx+0x69],0x9a5ba8f0
  41e424:	pop    ebp
  41e425:	scas   al,BYTE PTR es:[edi]
  41e426:	dec    ecx
  41e427:	cmp    BYTE PTR [ecx+0x787d63c5],al
  41e42d:	in     al,dx
  41e42e:	inc    ebp
  41e42f:	lds    esp,FWORD PTR [ebx+0x6b26f7c5]
  41e435:	loope  0x41e437
  41e437:	mov    ebp,0x18b74238
  41e43c:	pop    ss
  41e43d:	fdivr  DWORD PTR [edi]
  41e43f:	cmp    BYTE PTR [edi+0xa],dl
  41e442:	cmp    BYTE PTR [edx],0x78
  41e445:	mov    ds:0xe52bb55d,eax
  41e44a:	sti    
  41e44b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e44c:	mov    ebp,edx
  41e44e:	jno    0x41e41f
  41e450:	push   ss
  41e451:	push   DWORD PTR [edx+0x5]
  41e454:	mul    DWORD PTR [edx+0x4078b348]
  41e45a:	mov    esi,0x4eca1fcb
  41e45f:	mov    cl,0xea
  41e461:	mov    ecx,0x55b802b4
  41e466:	xlat   BYTE PTR ds:[ebx]
  41e467:	xor    al,0xb8
  41e469:	(bad)  
  41e46a:	xor    cl,al
  41e46c:	pop    edi
  41e46d:	sub    ecx,DWORD PTR [ebx]
  41e46f:	sub    ch,BYTE PTR [eax]
  41e471:	(bad)  
  41e472:	sar    BYTE PTR [ecx+0x6cd5f78f],1
  41e478:	adc    al,0xda
  41e47a:	sbb    eax,DWORD PTR ds:0xd4a3f03
  41e480:	add    DWORD PTR [ecx],eax
  41e482:	enter  0x2098,0x8f
  41e486:	push   0xffffff80
  41e488:	dec    ecx
  41e489:	js     0x41e503
  41e48b:	pop    edx
  41e48c:	adc    BYTE PTR ds:0xaf595836,dh
  41e492:	fiadd  DWORD PTR [ecx-0x38]
  41e495:	(bad)  
  41e496:	jmp    0x27c7ad48
  41e49b:	mov    esi,0xcf330ac6
  41e4a0:	mov    al,ds:0x1bfc5874
  41e4a5:	cs jle 0x41e458
  41e4a8:	js     0x41e4de
  41e4aa:	test   al,0xaf
  41e4ac:	sub    ebp,edi
  41e4ae:	cli    
  41e4af:	daa    
  41e4b0:	loope  0x41e4cc
  41e4b2:	inc    ebx
  41e4b3:	add    DWORD PTR [edi-0x65d9c6f5],0x9ea24496
  41e4bd:	sub    al,0xa
  41e4bf:	mov    eax,ecx
  41e4c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4c2:	pop    esp
  41e4c3:	mov    dh,0x3c
  41e4c5:	in     al,0xcf
  41e4c7:	sbb    ch,BYTE PTR [eax-0x72]
  41e4ca:	add    DWORD PTR [esi+0x3c492858],ebx
  41e4d0:	push   edx
  41e4d1:	cmp    BYTE PTR [esi],0xfe
  41e4d4:	mov    cs,WORD PTR [edx+ecx*2+0x17335ade]
  41e4db:	add    edi,esi
  41e4dd:	pop    esp
  41e4de:	data16 sbb BYTE PTR [eax],ch
  41e4e1:	mov    edi,eax
  41e4e3:	xchg   DWORD PTR [ebp+ecx*1+0x4],eax
  41e4e7:	rep stos DWORD PTR es:[edi],eax
  41e4e9:	jge    0x41e485
  41e4eb:	jo     0x41e538
  41e4ed:	xor    eax,0xee42cadc
  41e4f2:	lods   eax,DWORD PTR es:[esi]
  41e4f4:	cmp    eax,0x23d83ce1
  41e4f9:	loop   0x41e4e5
  41e4fb:	or     ebp,edi
  41e4fd:	or     al,0x91
  41e4ff:	sub    bh,dh
  41e501:	jmp    0x41e575
  41e503:	mov    esp,DWORD PTR [ebp-0x75]
  41e506:	and    al,0xd9
  41e508:	and    BYTE PTR [esi],ch
  41e50a:	xor    al,0xc8
  41e50c:	stc    
  41e50d:	xchg   ebp,eax
  41e50e:	cmp    BYTE PTR [esi],ah
  41e510:	scas   al,BYTE PTR es:[edi]
  41e511:	pop    esi
  41e512:	pushf  
  41e513:	mov    eax,ds:0xaf6dcfe8
  41e518:	and    al,0x93
  41e51a:	jp     0x41e53a
  41e51c:	fcom   DWORD PTR [edi]
  41e51e:	dec    ecx
  41e51f:	call   0x127499e3
  41e524:	xchg   ecx,eax
  41e525:	dec    esi
  41e526:	ror    esi,cl
  41e528:	or     al,0x8c
  41e52a:	dec    edx
  41e52b:	mov    al,ds:0x28bcd2cf
  41e530:	inc    esp
  41e531:	call   0xadad:0xc562ef2f
  41e538:	push   ss
  41e539:	xchg   esi,eax
  41e53a:	ror    DWORD PTR [edi],0x69
  41e53d:	mov    ds,WORD PTR [edx]
  41e53f:	retf   0xb353
  41e542:	or     BYTE PTR [edx],bl
  41e544:	push   0xc1b83f45
  41e549:	out    dx,al
  41e54a:	(bad)
  41e54d:	jmp    0x41e5ba
  41e54f:	xor    ah,BYTE PTR [edx-0x68]
  41e552:	dec    edx
  41e553:	imul   eax,esi,0xffffff8b
  41e556:	dec    ebp
  41e557:	mov    esi,0xce978a11
  41e55c:	mov    ss,WORD PTR [eax-0x68b1b01e]
  41e562:	pop    edx
  41e563:	and    eax,0x142a8903
  41e568:	push   eax
  41e569:	mov    edx,0x96e19330
  41e56e:	xor    ebp,DWORD PTR [eax+0x2a]
  41e571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e572:	stc    
  41e573:	or     ebp,DWORD PTR [eax-0x3b]
  41e576:	sub    BYTE PTR [ebx+0x3a3cfc95],bh
  41e57c:	adc    eax,0xf4635868
  41e581:	js     0x41e5b5
  41e583:	cwde   
  41e584:	repnz (bad) 
  41e586:	ins    BYTE PTR es:[edi],dx
  41e587:	in     al,0x99
  41e589:	das    
  41e58a:	stos   DWORD PTR es:[edi],eax
  41e58b:	scas   al,BYTE PTR es:[edi]
  41e58c:	mov    dh,0x87
  41e58e:	sub    ch,al
  41e590:	jle    0x41e602
  41e592:	stos   BYTE PTR es:[edi],al
  41e593:	jecxz  0x41e52e
  41e595:	xor    eax,0xcfa77848
  41e59a:	jns    0x41e57d
  41e59c:	sub    dh,al
  41e59e:	cs mov dl,0xa4
  41e5a1:	imul   ebx,DWORD PTR [eax],0x56
  41e5a4:	lods   al,BYTE PTR ds:[esi]
  41e5a6:	sub    ebp,DWORD PTR [ebp+0x10]
  41e5a9:	push   edx
  41e5aa:	and    esi,esi
  41e5ac:	popf   
  41e5ad:	shl    DWORD PTR [edi-0x78],0x88
  41e5b1:	xor    bh,BYTE PTR [ecx+eiz*8+0x33]
  41e5b5:	xchg   esp,eax
  41e5b7:	fnstenv [ebx]
  41e5b9:	fisttp DWORD PTR [edx+0x7b]
  41e5bc:	call   0x3d85:0xa968360c
  41e5c3:	imul   eax,eax,0x2787b29b
  41e5c9:	icebp  
  41e5ca:	imul   eax,DWORD PTR [edx+0x143d9bb1],0xffffffdd
  41e5d1:	sbb    ch,dh
  41e5d3:	loop   0x41e592
  41e5d5:	lock adc edi,0xffffff9e
  41e5d9:	adc    DWORD PTR [esi],esi
  41e5db:	je     0x41e5d9
  41e5dd:	(bad)  
  41e5de:	ja     0x41e56a
  41e5e0:	jae    0x41e64f
  41e5e2:	cmp    bl,BYTE PTR [eax+0x52]
  41e5e5:	dec    eax
  41e5e6:	mov    ebx,0x35d6f68b
  41e5eb:	call   0xd6ee94b1
  41e5f0:	cmp    ch,bh
  41e5f2:	xor    DWORD PTR [esi+0x33ce456f],edi
  41e5f8:	sub    edx,DWORD PTR [ecx-0x20]
  41e5fb:	clc    
  41e5fc:	xor    eax,0x84faf97
  41e601:	lea    ebx,[eax-0x56122c06]
  41e607:	push   edx
  41e608:	jmp    0xff22f02c
  41e60d:	or     BYTE PTR [eax+ebx*8-0x26],al
  41e611:	div    BYTE PTR [ecx+0x6c]
  41e614:	adc    BYTE PTR [esi],cl
  41e616:	xor    eax,0x9a5c0758
  41e61b:	or     al,0xbd
  41e61d:	push   esi
  41e61e:	pop    es
  41e61f:	jnp    0x41e5cf
  41e621:	lock fist DWORD PTR [esi+0x3fad0595]
  41e628:	test   ch,0x85
  41e62b:	mov    ah,0xb8
  41e62d:	(bad)  
  41e62e:	aam    0xed
  41e630:	pop    ss
  41e631:	lds    edi,FWORD PTR [edi-0xb512a69]
  41e637:	les    eax,FWORD PTR [ebx-0x7f]
  41e63a:	sbb    ah,ch
  41e63c:	popa   
  41e63d:	lahf   
  41e63e:	jnp    0x41e633
  41e640:	mov    ds:0xeffa0ba,eax
  41e645:	jle    0x41e66a
  41e647:	dec    ecx
  41e648:	mov    eax,0x422148e1
  41e64d:	mov    WORD PTR [edx-0x70],?
  41e650:	and    al,0x61
  41e652:	ss push ebx
  41e654:	or     al,0xda
  41e656:	xor    BYTE PTR [ecx+0x23],bh
  41e659:	bound  ecx,QWORD PTR [eax-0x37120d13]
  41e65f:	cs ins BYTE PTR es:[edi],dx
  41e661:	cmp    edx,0x95e3ccb2
  41e667:	dec    ebp
  41e668:	scas   eax,DWORD PTR es:[edi]
  41e669:	and    esi,edx
  41e66b:	test   al,0x42
  41e66d:	adc    eax,0x1f74e830
  41e672:	loope  0x41e6b6
  41e674:	mov    cl,dh
  41e676:	dec    edi
  41e677:	mov    edx,0xb85886b1
  41e67c:	retf   0xb2ca
  41e67f:	inc    ebp
  41e680:	inc    edx
  41e681:	or     eax,0x26055a1b
  41e686:	div    DWORD PTR [edx]
  41e688:	js     0x41e682
  41e68a:	adc    dh,BYTE PTR [ebx+0x263f491]
  41e690:	adc    eax,0x88570f6a
  41e695:	mov    ah,0xbb
  41e697:	js     0x41e674
  41e699:	cmp    eax,0x84482a61
  41e69e:	jmp    0x975b959
  41e6a3:	adc    DWORD PTR [edi],esi
  41e6a5:	std    
  41e6a6:	js     0x41e6a6
  41e6a8:	loop   0x41e680
  41e6aa:	arpl   cx,si
  41e6ac:	mov    BYTE PTR [edi-0x5783df28],al
  41e6b2:	(bad)  
  41e6b3:	jb     0x41e710
  41e6b5:	or     BYTE PTR [esi+edx*1],bl
  41e6b8:	mov    DWORD PTR [esi+0x52496c9e],ecx
  41e6be:	pop    ss
  41e6bf:	push   ecx
  41e6c0:	call   0x1aca647a
  41e6c5:	ss sub al,dh
  41e6c8:	scas   al,BYTE PTR es:[edi]
  41e6c9:	adc    BYTE PTR [edx+edx*8+0x68],bl
  41e6cd:	icebp  
  41e6ce:	mov    esp,0x76818673
  41e6d3:	inc    ebx
  41e6d4:	adc    eax,0xdc7d0f8a
  41e6d9:	mov    bh,0x62
  41e6db:	ja     0x41e67c
  41e6dd:	sub    eax,0x85eda62c
  41e6e2:	dec    edx
  41e6e3:	add    DWORD PTR [edx-0x6093d365],edx
  41e6e9:	rol    BYTE PTR [ecx+0x465c33bf],0x5
  41e6f0:	loope  0x41e6b1
  41e6f2:	inc    ebx
  41e6f3:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41e6f5:	cwde   
  41e6f6:	xlat   BYTE PTR ds:[ebx]
  41e6f7:	xor    eax,0xb9b5864d
  41e6fc:	retf   
  41e6fd:	enter  0xf26d,0xd8
  41e701:	mov    ch,BYTE PTR [edx+0x78fa1059]
  41e707:	int    0xcc
  41e709:	fmulp  st(0),st
  41e70b:	xlat   BYTE PTR ds:[ebx]
  41e70c:	jo     0x41e6bb
  41e70e:	icebp  
  41e70f:	test   eax,0x8e8cf352
  41e714:	push   esi
  41e715:	test   dl,ah
  41e717:	xor    ecx,esi
  41e719:	imul   ebx,DWORD PTR [ebx+ecx*4+0x39d4daf5],0x7b
  41e721:	sub    al,0xd3
  41e723:	in     al,dx
  41e724:	loop   0x41e6f6
  41e726:	test   eax,0xf38e54e0
  41e72b:	mov    al,BYTE PTR [ecx]
  41e72d:	test   dl,bh
  41e72f:	daa    
  41e730:	test   BYTE PTR [edi+0x7f],ch
  41e733:	xor    bl,BYTE PTR [edi+0x7]
  41e736:	xchg   esp,eax
  41e737:	push   cs
  41e738:	ficomp WORD PTR [ebx-0x7e82871c]
  41e73e:	retf   0x1ab0
  41e741:	sub    ah,ch
  41e743:	fcomp  st(5)
  41e745:	pop    edi
  41e746:	xchg   edx,eax
  41e747:	push   ebx
  41e748:	(bad)  
  41e749:	sbb    DWORD PTR [edx+0x1f],esi
  41e74c:	(bad)  [ebx-0x15]
  41e74f:	fisubr DWORD PTR [edi-0x3871c6eb]
  41e755:	xor    esi,0xf1ca1378
  41e75b:	(bad)  
  41e75c:	hlt    
  41e75d:	pushf  
  41e75e:	push   esp
  41e75f:	sar    BYTE PTR [esi],0x5a
  41e762:	pop    edx
  41e763:	sti    
  41e764:	and    cl,BYTE PTR [esi-0x288a4a46]
  41e76a:	std    
  41e76b:	jb     0x41e7a5
  41e76d:	shl    BYTE PTR [edx],1
  41e76f:	sub    cl,bh
  41e771:	xlat   BYTE PTR ds:[ebx]
  41e772:	sub    al,0x7d
  41e774:	or     BYTE PTR [edi],bh
  41e776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e777:	mov    bl,0x73
  41e779:	ds retf 
  41e77b:	mov    eax,0x870d4c3d
  41e780:	psubd  mm6,QWORD PTR ds:0x35459ff0
  41e787:	outs   dx,BYTE PTR ds:[esi]
  41e788:	cwde   
  41e789:	(bad)  
  41e78b:	mov    dh,0xf4
  41e78d:	push   ss
  41e78e:	mov    edx,0x367a1bbc
  41e793:	stos   BYTE PTR es:[edi],al
  41e794:	add    esp,DWORD PTR [ecx-0x3e]
  41e797:	inc    edx
  41e798:	add    BYTE PTR [eax+0x2e],dh
  41e79b:	loope  0x41e7cb
  41e79d:	test   BYTE PTR [edx-0x3bcdafe6],bl
  41e7a3:	push   cs
  41e7a4:	shr    DWORD PTR [esi+0x1837aef5],cl
  41e7aa:	aaa    
  41e7ab:	push   esp
  41e7ac:	dec    ecx
  41e7ad:	lods   eax,DWORD PTR ds:[esi]
  41e7ae:	aaa    
  41e7af:	pop    edx
  41e7b0:	popa   
  41e7b1:	(bad)  
  41e7b2:	fidiv  DWORD PTR [edx+edx*4-0x273a4041]
  41e7b9:	lock sbb BYTE PTR ds:[esi+0x1d],ch
  41e7be:	mov    BYTE PTR [eax+ebx*2],ch
  41e7c1:	ret    0xb9bf
  41e7c4:	add    BYTE PTR [ecx],dl
  41e7c6:	loop   0x41e7a8
  41e7c8:	sbb    DWORD PTR [edx],ebp
  41e7ca:	adc    al,0xab
  41e7cc:	jecxz  0x41e81c
  41e7ce:	in     eax,0xe
  41e7d0:	jae    0x41e7a7
  41e7d2:	dec    ebx
  41e7d3:	lds    esp,FWORD PTR [esi-0x73]
  41e7d6:	sbb    dl,BYTE PTR [ebx-0x316d50d6]
  41e7dc:	cmp    ebp,esp
  41e7de:	mov    bh,0x69
  41e7e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7e1:	mov    ds:0x474974db,al
  41e7e6:	cli    
  41e7e7:	ret    0x84f8
  41e7ea:	(bad)  
  41e7eb:	jl     0x41e863
  41e7ed:	jmp    0x4ca08040
  41e7f2:	mov    bh,0x1
  41e7f4:	sbb    eax,DWORD PTR [ebx]
  41e7f6:	mov    ds:0x18d1a0b8,al
  41e7fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7fc:	jg     0x41e7e0
  41e7fe:	ins    DWORD PTR es:[edi],dx
  41e7ff:	in     al,0x45
  41e801:	lea    ebp,[edx]
  41e803:	add    DWORD PTR [esi],ebx
  41e805:	retf   0x60e6
  41e808:	mov    ch,0xbd
  41e80a:	and    DWORD PTR ds:0xb9e53c1a,edi
  41e810:	cwde   
  41e811:	or     DWORD PTR [ebx-0xded1747],ecx
  41e817:	iret   
  41e818:	sbb    ch,dl
  41e81a:	cwde   
  41e81b:	push   0xd220028
  41e820:	add    edx,DWORD PTR [edx+0x22e5d182]
  41e826:	sbb    eax,0xd339335d
  41e82b:	or     BYTE PTR [ebx],bl
  41e82d:	scas   al,BYTE PTR es:[edi]
  41e82e:	pusha  
  41e82f:	out    dx,al
  41e830:	imul   eax,DWORD PTR [eax],0x36
  41e833:	js     0x41e891
  41e835:	mov    al,ds:0xc5a84906
  41e83a:	pushf  
  41e83b:	mov    ebx,0xaf137b2f
  41e840:	adc    BYTE PTR [edx+0x4050b63b],bh
  41e846:	test   BYTE PTR [esi+0x68],dh
  41e849:	stos   BYTE PTR es:[edi],al
  41e84a:	clc    
  41e84b:	imul   edi,DWORD PTR [edx],0xc17c6a8e
  41e851:	push   ebp
  41e852:	cmp    ebx,DWORD PTR [esi-0x1d]
  41e855:	and    DWORD PTR ds:0xc1c66688,edi
  41e85b:	outs   dx,BYTE PTR ds:[esi]
  41e85c:	mov    edi,0xcee7c7d2
  41e861:	cmp    eax,0x8009aa96
  41e866:	push   esi
  41e867:	pushf  
  41e868:	test   bl,dl
  41e86a:	mov    dh,0xc0
  41e86c:	dec    ecx
  41e86d:	fadd   QWORD PTR [ebx]
  41e86f:	ficom  WORD PTR [edx+ebp*2+0x677f2030]
  41e876:	xchg   DWORD PTR [esi],edi
  41e878:	adc    al,0x8d
  41e87a:	call   0x1274:0x29de81ce
  41e881:	cmp    bh,BYTE PTR [ecx+ebx*1]
  41e884:	jmp    0x7d60d56c
  41e889:	int    0xf3
  41e88b:	mov    bl,0x1b
  41e88d:	mov    ?,WORD PTR [edx]
  41e88f:	sub    esi,ecx
  41e891:	jbe    0x41e88e
  41e893:	test   al,0x5b
  41e895:	add    al,0x6b
  41e897:	pop    eax
  41e898:	pop    ds
  41e899:	cli    
  41e89a:	iret   
  41e89b:	inc    eax
  41e89c:	push   esp
  41e89d:	xchg   DWORD PTR [esi-0x55],esp
  41e8a0:	xchg   DWORD PTR [ebp-0x79bccff6],eax
  41e8a6:	das    
  41e8a7:	neg    al
  41e8a9:	push   cs
  41e8aa:	dec    eax
  41e8ab:	mov    ds:0xcec2a7eb,al
  41e8b0:	icebp  
  41e8b1:	jmp    0x5830:0xb0dfb2eb
  41e8b8:	mov    ecx,0x34c418fc
  41e8bd:	sbb    eax,0xfe209f93
  41e8c2:	jmp    0x6191007c
  41e8c7:	push   0x5bc87adc
  41e8cc:	or     DWORD PTR [eax-0x76],eax
  41e8cf:	shl    esp,cl
  41e8d1:	push   0x1a10b658
  41e8d6:	or     ecx,DWORD PTR [esp+eax*4-0x40]
  41e8da:	and    BYTE PTR [eax],dh
  41e8dc:	(bad)  
  41e8dd:	push   0xffffffae
  41e8df:	cmp    BYTE PTR [eax-0x5d],0xd1
  41e8e3:	scas   eax,DWORD PTR es:[edi]
  41e8e4:	out    dx,eax
  41e8e5:	sahf   
  41e8e6:	shr    DWORD PTR [edx+0x17],0x3a
  41e8ea:	imul   ah
  41e8ec:	push   ecx
  41e8ed:	retf   
  41e8ee:	jnp    0x41e876
  41e8f0:	aad    0x37
  41e8f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8f3:	push   ss
  41e8f4:	iret   
  41e8f5:	mov    esi,0xa695874a
  41e8fa:	(bad)  
  41e8fb:	mov    al,ds:0x7cebaaca
  41e900:	pop    edi
  41e901:	or     al,BYTE PTR [ecx]
  41e903:	cmc    
  41e904:	sbb    DWORD PTR [edx+0x354b25a8],ebx
  41e90a:	jmp    0x3ac9d887
  41e90f:	dec    edx
  41e910:	lods   eax,DWORD PTR ds:[esi]
  41e911:	push   edx
  41e912:	mov    cl,0x91
  41e914:	push   ss
  41e915:	(bad)  
  41e916:	cmp    eax,0x8d321418
  41e91b:	pop    ds
  41e91c:	xchg   BYTE PTR [eax],dh
  41e91e:	or     esi,DWORD PTR [ecx+ebp*8]
  41e921:	popf   
  41e922:	pop    edx
  41e923:	mov    edx,DWORD PTR [edi]
  41e925:	mov    eax,ds:0xca1a0729
  41e92a:	jmp    0xe0a4f6ce
  41e92f:	daa    
  41e930:	add    al,BYTE PTR [ecx]
  41e932:	mov    ch,0x7e
  41e934:	xchg   ebp,eax
  41e935:	mov    ?,edx
  41e937:	mov    ch,0xee
  41e939:	outs   dx,BYTE PTR ds:[esi]
  41e93a:	sub    edx,esi
  41e93c:	and    al,0x51
  41e93e:	dec    ecx
  41e93f:	js     0x41e8d6
  41e941:	or     BYTE PTR [ebp+esi*1-0x8],ch
  41e945:	or     edi,ebx
  41e947:	mov    bh,0x18
  41e949:	jns    0x41e8fb
  41e94b:	int3   
  41e94c:	into   
  41e94d:	js     0x41e993
  41e94f:	mov    ch,0x8e
  41e951:	shl    BYTE PTR [edx+edi*4+0x38],cl
  41e955:	sbb    eax,0xd140aa72
  41e95a:	or     BYTE PTR [edx+0x12],0x77
  41e95e:	js     0x41e94b
  41e960:	adc    esp,esp
  41e962:	adc    BYTE PTR [esi-0x59],0x8b
  41e966:	cli    
  41e967:	add    esp,DWORD PTR [edx]
  41e969:	pop    ecx
  41e96a:	pop    edx
  41e96b:	xchg   esp,eax
  41e96c:	int3   
  41e96d:	fwait
  41e96e:	xor    BYTE PTR [eax-0x2d968e41],bh
  41e974:	inc    ebx
  41e975:	sbb    esp,DWORD PTR [edi]
  41e977:	mov    ch,0xc0
  41e979:	adc    esp,DWORD PTR [edi-0x654b49c5]
  41e97f:	ins    DWORD PTR es:[edi],dx
  41e980:	(bad)  
  41e982:	dec    esp
  41e983:	jb     0x41ea00
  41e985:	adc    bh,BYTE PTR [ebp+0x58c72605]
  41e98b:	mov    eax,0xf16de99f
  41e990:	and    al,0x8e
  41e992:	xor    edx,DWORD PTR [edx+0x1adbec00]
  41e998:	pop    ds
  41e999:	int    0x3e
  41e99b:	xchg   esp,eax
  41e99c:	lods   al,BYTE PTR ds:[esi]
  41e99d:	pop    esp
  41e99e:	hlt    
  41e99f:	imul   edx,DWORD PTR ds:0x188ba05a,0xffffffa8
  41e9a6:	fwait
  41e9a7:	xor    bh,BYTE PTR [eax]
  41e9a9:	ins    DWORD PTR es:[edi],dx
  41e9aa:	dec    edx
  41e9ab:	mov    eax,0x4213af53
  41e9b0:	fild   DWORD PTR [edx]
  41e9b2:	out    dx,eax
  41e9b3:	lods   al,BYTE PTR ds:[esi]
  41e9b4:	(bad)  
  41e9b6:	xor    BYTE PTR [eax],bh
  41e9b8:	cdq    
  41e9b9:	mov    edi,0x1dce8f5b
  41e9be:	adc    edi,DWORD PTR [ebx-0x36]
  41e9c1:	ret    0x2586
  41e9c4:	cmp    dl,BYTE PTR [ebx-0x46]
  41e9c7:	test   eax,ecx
  41e9c9:	mov    dl,BYTE PTR [edx+0x1b]
  41e9cc:	push   0xa0c837ae
  41e9d1:	mov    es:0x149d2898,eax
  41e9d7:	mov    eax,0x8075a396
  41e9dc:	adc    dl,bh
  41e9de:	add    esp,edx
  41e9e0:	xor    eax,0x9ea54928
  41e9e5:	dec    esi
  41e9e6:	fimul  WORD PTR [ebx-0xd7570ae]
  41e9ec:	lahf   
  41e9ed:	dec    eax
  41e9ee:	ins    DWORD PTR es:[edi],dx
  41e9ef:	and    DWORD PTR [ebx+ecx*8+0x42a08f84],esp
  41e9f6:	clc    
  41e9f7:	mov    DWORD PTR [eax+0x381036dd],ebp
  41e9fd:	cld    
  41e9fe:	cwde   
  41e9ff:	mov    dl,0xaa
  41ea01:	and    al,BYTE PTR [ecx+0x61]
  41ea04:	cmp    eax,0xb109caed
  41ea09:	aam    0x47
  41ea0b:	mov    al,ds:0x9ffc87b4
  41ea10:	push   cs
  41ea11:	pusha  
  41ea12:	sbb    BYTE PTR [edx-0x4b55fb60],0x1f
  41ea19:	or     eax,0x78d4618
  41ea1e:	sub    esp,ebx
  41ea20:	xchg   edx,eax
  41ea21:	pop    esi
  41ea22:	dec    esp
  41ea23:	pop    eax
  41ea24:	cmc    
  41ea25:	fndisi(8087 only) 
  41ea27:	loopne 0x41ea3f
  41ea29:	retf   0x6c78
  41ea2c:	ins    DWORD PTR es:[edi],dx
  41ea2d:	adc    dh,BYTE PTR [ebx]
  41ea2f:	cmp    edx,ebx
  41ea31:	into   
  41ea32:	mov    ch,0xde
  41ea34:	jg     0x41e9d9
  41ea36:	fstp   DWORD PTR [esi-0x506d17ea]
  41ea3c:	add    al,BYTE PTR [edi+0x6d]
  41ea3f:	dec    ecx
  41ea40:	js     0x41e9d8
  41ea42:	cmp    BYTE PTR ss:[eax],dl
  41ea45:	mov    ecx,0xa4c8280c
  41ea4a:	jbe    0x41ea05
  41ea4c:	daa    
  41ea4d:	and    DWORD PTR [edi],ebp
  41ea4f:	(bad)  
  41ea51:	jmp    0x8eb9:0x1378ddf1
  41ea58:	lods   eax,DWORD PTR ds:[esi]
  41ea59:	repnz arpl WORD PTR [eax],dx
  41ea5c:	loopne 0x41ea6c
  41ea5e:	xlat   BYTE PTR ds:[ebx]
  41ea5f:	push   ebp
  41ea60:	in     eax,dx
  41ea61:	stc    
  41ea62:	lods   al,BYTE PTR ds:[esi]
  41ea63:	sub    esp,DWORD PTR [ecx-0x7490016a]
  41ea69:	sbb    DWORD PTR [esi],esp
  41ea6b:	lock pop ds
  41ea6d:	xchg   ebx,eax
  41ea6e:	aaa    
  41ea6f:	cmp    BYTE PTR [eax-0x37a545f5],bl
  41ea75:	mov    al,ds:0x5370a875
  41ea7a:	fsqrt  
  41ea7c:	lahf   
  41ea7d:	dec    edx
  41ea7e:	jno    0x41ea87
  41ea80:	mov    ebx,0x4ff1f7e6
  41ea85:	sub    BYTE PTR [edx+0x7b],0x38
  41ea89:	pop    edx
  41ea8a:	mov    esi,DWORD PTR [ebx+0x41e7dd34]
  41ea90:	push   es
  41ea91:	or     al,0x90
  41ea93:	scas   al,BYTE PTR es:[edi]
  41ea94:	(bad)  
  41ea95:	dec    DWORD PTR [ebp-0x157798ce]
  41ea9b:	xor    ah,cl
  41ea9d:	ret    0x3e4b
  41eaa0:	std    
  41eaa1:	xchg   DWORD PTR [edx+0x727fe2d6],ebp
  41eaa7:	pop    eax
  41eaa8:	aas    
  41eaa9:	mov    DWORD PTR [ecx-0x18],ecx
  41eaac:	daa    
  41eaad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaae:	ret    0x2fe5
  41eab1:	retf   0xab3b
  41eab4:	sbb    DWORD PTR [esi-0x40],edi
  41eab7:	(bad)  
  41eab8:	sahf   
  41eab9:	or     BYTE PTR [esi-0x28],bh
  41eabc:	push   esi
  41eabd:	jo     0x41eafc
  41eabf:	cwde   
  41eac0:	xor    ch,BYTE PTR [ebp-0x76b5cf63]
  41eac6:	jns    0x41eab4
  41eac8:	and    DWORD PTR [edx+0xc1cc85a],ecx
  41eace:	jecxz  0x41ea6c
  41ead0:	sbb    cl,dl
  41ead2:	aas    
  41ead3:	pop    ss
  41ead4:	add    bh,BYTE PTR [ebp+0x2d94a56d]
  41eada:	or     eax,0xc5f93461
  41eadf:	scas   al,BYTE PTR es:[edi]
  41eae0:	adc    BYTE PTR [eax-0x52],0xce
  41eae4:	out    0x73,al
  41eae6:	mov    edx,0x9c060dc6
  41eaeb:	mov    WORD PTR [edx],es
  41eaed:	out    dx,al
  41eaee:	xchg   ebx,eax
  41eaef:	dec    edx
  41eaf0:	push   0x32f83dde
  41eaf5:	out    dx,eax
  41eaf6:	clc    
  41eaf7:	jl     0x41eaa8
  41eaf9:	lock sbb eax,DWORD PTR [eax]
  41eafc:	sbb    BYTE PTR [ebx+0x2a25cacd],bl
  41eb02:	xor    eax,0x3c97ef30
  41eb07:	cmp    eax,0x65cbbae9
  41eb0c:	cmp    bh,BYTE PTR cs:[ebx-0x835effc]
  41eb13:	in     al,dx
  41eb14:	ds rol cl,1
  41eb17:	pop    ecx
  41eb18:	ffree  st(0)
  41eb1a:	lahf   
  41eb1b:	ret    
  41eb1c:	clc    
  41eb1d:	mov    edi,edx
  41eb1f:	jnp    0x41eac6
  41eb21:	jmp    0x41eb30
  41eb23:	ss sub al,0x1f
  41eb26:	push   eax
  41eb27:	mov    dl,BYTE PTR [esi]
  41eb29:	mov    ah,BYTE PTR [eax]
  41eb2b:	push   edi
  41eb2c:	test   BYTE PTR [edi],bh
  41eb2e:	pop    ecx
  41eb2f:	je     0x41eb70
  41eb31:	(bad)  
  41eb32:	jmp    0x758f:0x4abc18a4
  41eb39:	add    BYTE PTR [eax],ch
  41eb3b:	jae    0x41eb7f
  41eb3d:	mov    esi,0xd7301087
  41eb42:	add    al,0xba
  41eb44:	xor    edx,esp
  41eb46:	outs   dx,DWORD PTR ds:[esi]
  41eb47:	int3   
  41eb48:	mov    bh,ah
  41eb4a:	lods   al,BYTE PTR ds:[esi]
  41eb4b:	(bad)  
  41eb4d:	mov    WORD PTR [edx+0x66],gs
  41eb50:	add    dh,cl
  41eb52:	inc    ebx
  41eb53:	shl    dl,cl
  41eb55:	sbb    dh,BYTE PTR [ebx+0x6a874432]
  41eb5b:	popa   
  41eb5c:	stos   BYTE PTR es:[edi],al
  41eb5d:	inc    BYTE PTR [eax+0x17]
  41eb60:	push   esi
  41eb61:	xchg   esp,eax
  41eb62:	jp     0x41eb77
  41eb64:	je     0x41eb8d
  41eb66:	and    ebp,DWORD PTR [eax-0xa46e5d6]
  41eb6c:	and    dl,BYTE PTR [ebx+edi*1+0x43]
  41eb70:	arpl   bx,ax
  41eb72:	dec    ebp
  41eb73:	test   al,0x41
  41eb75:	in     ax,0x19
  41eb78:	dec    esi
  41eb79:	pop    ebp
  41eb7a:	jb     0x41ebe7
  41eb7c:	or     BYTE PTR [ebx+0x3759dd8a],0x96
  41eb83:	mov    fs,esp
  41eb85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb86:	dec    ecx
  41eb87:	dec    eax
  41eb88:	cwde   
  41eb89:	jne    0x41ebb9
  41eb8b:	cmc    
  41eb8c:	mov    edi,0x96233fc9
  41eb91:	or     BYTE PTR [ecx+0x1894fea],al
  41eb97:	and    al,0x70
  41eb99:	jnp    0x41ebb0
  41eb9b:	pop    ds
  41eb9c:	mov    eax,0x7bb8ec75
  41eba1:	enter  0x41e9,0xe0
  41eba5:	stos   DWORD PTR es:[edi],eax
  41eba6:	sbb    BYTE PTR [eax+0x38de209],cl
  41ebac:	jmp    0x2d32:0x98a9dbf2
  41ebb3:	jbe    0x41ebcf
  41ebb5:	dec    edx
  41ebb6:	mov    esi,esp
  41ebb8:	dec    ebx
  41ebb9:	or     al,BYTE PTR [esi+0x7b3d3bed]
  41ebbf:	retf   0xd6c
  41ebc2:	test   al,0x60
  41ebc4:	push   cs
  41ebc5:	push   ebp
  41ebc6:	outs   dx,DWORD PTR ds:[esi]
  41ebc7:	adc    BYTE PTR [edx],bl
  41ebc9:	or     BYTE PTR [ebp+0x796a834c],al
  41ebcf:	cs (bad) 
  41ebd2:	mov    dh,0x37
  41ebd4:	pop    es
  41ebd5:	dec    eax
  41ebd6:	dec    edi
  41ebd7:	cld    
  41ebd8:	push   esi
  41ebd9:	mov    ds:0x833938b4,eax
  41ebde:	mov    bh,BYTE PTR [eax]
  41ebe0:	aam    0xf7
  41ebe2:	mov    ebx,0x35c0796d
  41ebe7:	test   al,0x4
  41ebe9:	inc    ebp
  41ebea:	push   eax
  41ebeb:	sbb    al,0x58
  41ebed:	(bad)  
  41ebee:	pop    ds
  41ebef:	mov    dl,0xb4
  41ebf1:	scas   eax,DWORD PTR es:[edi]
  41ebf2:	pop    ecx
  41ebf3:	fst    QWORD PTR [edx+edi*1]
  41ebf6:	mov    dh,0xf
  41ebf8:	arpl   dx,ax
  41ebfa:	imul   esp,DWORD PTR [edi],0x5a
  41ebfd:	mov    al,ds:0x883b1ec1
  41ec02:	push   0xfffffffa
  41ec04:	dec    ecx
  41ec05:	jg     0x41ec09
  41ec07:	retf   0x822d
  41ec0a:	aas    
  41ec0b:	mov    eax,0x5238a5d6
  41ec10:	dec    edi
  41ec11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec12:	sbb    DWORD PTR [esi+0x167eda0d],ecx
  41ec18:	pusha  
  41ec19:	jl     0x41ebf4
  41ec1b:	pusha  
  41ec1c:	push   0x5b7f6f9d
  41ec21:	xor    BYTE PTR ss:[eax+0x751018eb],cl
  41ec28:	push   0xffffff87
  41ec2a:	cli    
  41ec2b:	sub    al,0xef
  41ec2d:	loop   0x41ebbb
  41ec2f:	(bad)  
  41ec30:	push   edi
  41ec31:	in     eax,dx
  41ec32:	hlt    
  41ec33:	(bad)  
  41ec35:	and    BYTE PTR [ebx+0x630949cf],al
  41ec3b:	enter  0x4925,0xae
  41ec3f:	mov    edx,0xaea02c98
  41ec44:	(bad)  
  41ec45:	shl    DWORD PTR [eax],1
  41ec47:	fisttp QWORD PTR [edx+ecx*4]
  41ec4a:	push   ebp
  41ec4b:	or     al,0x1c
  41ec4d:	adc    eax,0x31899f7b
  41ec52:	mov    bh,0x60
  41ec54:	push   edx
  41ec56:	dec    esi
  41ec57:	inc    esi
  41ec58:	jnp    0x41ec93
  41ec5a:	cld    
  41ec5b:	cwde   
  41ec5c:	jns    0x41ec8c
  41ec5e:	mov    bl,0xa9
  41ec60:	sbb    eax,0x19adf0e6
  41ec65:	mov    dh,BYTE PTR [ecx-0x22]
  41ec68:	leave  
  41ec69:	jb     0x41eca4
  41ec6b:	dec    esp
  41ec6c:	push   cs
  41ec6d:	xchg   edx,eax
  41ec6e:	out    0x81,eax
  41ec70:	mov    WORD PTR [ecx],cs
  41ec72:	pop    edx
  41ec73:	mov    bh,0xf9
  41ec75:	xor    al,0xff
  41ec77:	mov    esi,0x4837c6da
  41ec7c:	loop   0x41ecab
  41ec7e:	dec    edx
  41ec7f:	xor    cl,dh
  41ec81:	or     al,0xf3
  41ec83:	nop
  41ec84:	xor    al,0x5e
  41ec86:	shl    ebp,1
  41ec88:	btc    DWORD PTR [ebx+0x68],edi
  41ec8c:	jo     0x41ec28
  41ec8e:	popf   
  41ec8f:	stc    
  41ec90:	fisubr DWORD PTR [ebp+0x4ec1c833]
  41ec96:	out    dx,al
  41ec97:	loopne 0x41ece1
  41ec99:	inc    eax
  41ec9a:	lea    ebp,[esi+0x453a7303]
  41eca0:	sbb    BYTE PTR [edx],bh
  41eca2:	imul   esi,DWORD PTR [edx],0xbfc637a9
  41eca8:	es xchg esp,eax
  41ecaa:	add    bl,BYTE PTR [esi]
  41ecac:	ror    BYTE PTR [edi+0x1edde30a],cl
  41ecb2:	cmp    ecx,DWORD PTR [esi+0x848bccc]
  41ecb8:	pusha  
  41ecb9:	sub    DWORD PTR [edi-0x149d478c],edx
  41ecbf:	enter  0xe518,0xd7
  41ecc3:	push   esi
  41ecc4:	test   al,0x3a
  41ecc6:	and    BYTE PTR [ebx],dh
  41ecc8:	repnz repz ror DWORD PTR [ecx+0x2c],cl
  41eccd:	xor    eax,0x707f383b
  41ecd2:	mov    edi,0xfca5b84f
  41ecd7:	mov    ecx,0x3e256079
  41ecdc:	sbb    cl,dl
  41ecde:	shr    BYTE PTR [ebx+0x40ea1c4c],cl
  41ece4:	mov    ah,0x22
  41ece6:	and    al,BYTE PTR [eax-0x3a]
  41ece9:	xchg   dl,cl
  41eceb:	xchg   DWORD PTR ds:0xdc0b4e1,ebp
  41ecf1:	stos   BYTE PTR es:[edi],al
  41ecf2:	push   ds
  41ecf3:	pop    eax
  41ecf4:	xchg   ebp,eax
  41ecf5:	repnz test al,0x92
  41ecf8:	jne    0x41ed4f
  41ecfa:	pop    eax
  41ecfb:	xor    DWORD PTR [edi-0xa441a7f],esp
  41ed01:	mov    ecx,DWORD PTR [edx]
  41ed03:	xchg   BYTE PTR [edx+ecx*1-0x45],ah
  41ed07:	mov    ecx,?
  41ed09:	pop    edx
  41ed0a:	cmp    ebp,DWORD PTR [eax-0x3f0fb584]
  41ed10:	or     ch,bl
  41ed12:	cmp    DWORD PTR [ebp-0xf6bda9d],ebp
  41ed18:	jecxz  0x41ed04
  41ed1a:	adc    BYTE PTR [edi+0x26b867c7],dh
  41ed20:	push   ebp
  41ed21:	dec    ebx
  41ed22:	stos   DWORD PTR es:[edi],eax
  41ed23:	or     ch,al
  41ed25:	mov    dh,0xfb
  41ed27:	mov    bl,0x5b
  41ed29:	outs   dx,DWORD PTR ds:[esi]
  41ed2a:	cmp    eax,0xcaca14d4
  41ed2f:	push   0x47fd1bdd
  41ed34:	and    edx,edx
  41ed36:	jg     0x41ed9d
  41ed38:	js     0x41ecc3
  41ed3a:	or     cl,BYTE PTR [ebp+edi*1-0x14]
  41ed3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed3f:	sbb    BYTE PTR [ebx-0x58b15958],ah
  41ed45:	cmp    ebp,DWORD PTR [edi+0x78]
  41ed48:	xlat   BYTE PTR ds:[ebx]
  41ed49:	call   0xc6cea293
  41ed4e:	inc    eax
  41ed4f:	fwait
  41ed50:	test   al,0x65
  41ed52:	hlt    
  41ed53:	aad    0x47
  41ed55:	test   BYTE PTR [edx+0x10],bh
  41ed58:	sbb    ebp,DWORD PTR [edx]
  41ed5a:	frstor [eax]
  41ed5c:	stc    
  41ed5d:	mov    esi,0x40616a1d
  41ed62:	lock pop ebx
  41ed64:	loopne 0x41eced
  41ed66:	retf   0xb4a9
  41ed69:	add    BYTE PTR [ecx+0x30a0c27],ch
  41ed6f:	sar    BYTE PTR [ecx],0xda
  41ed72:	mov    WORD PTR [ebx-0x59bcb481],gs
  41ed78:	pop    ss
  41ed79:	sub    edx,0xbb71a57b
  41ed7f:	ds jl  0x41edc2
  41ed82:	sub    ch,BYTE PTR [edi-0x4bc242b8]
  41ed88:	sub    DWORD PTR [eax-0x5],0x8a8a5c8d
  41ed8f:	in     al,dx
  41ed90:	xchg   edi,eax
  41ed91:	inc    esp
  41ed92:	in     eax,0x58
  41ed94:	test   eax,0x62b83c60
  41ed99:	adc    bl,BYTE PTR [eax]
  41ed9b:	rcr    al,1
  41ed9d:	jmp    0x4291:0x2748b9fb
  41eda4:	loope  0x41ede0
  41eda6:	mov    ?,WORD PTR [ebp-0x4084c02b]
  41edac:	ficomp DWORD PTR [ebx]
  41edae:	test   BYTE PTR [edi-0x530c5278],0x4b
  41edb5:	stos   BYTE PTR es:[edi],al
  41edb6:	out    0x8c,eax
  41edb8:	into   
  41edb9:	call   0x8a56611e
  41edbe:	sub    al,0xf0
  41edc0:	iret   
  41edc1:	sub    BYTE PTR [ebx-0x7c],cl
  41edc4:	ror    DWORD PTR [ecx+0xd],0xa
  41edc8:	inc    ebp
  41edc9:	mov    edx,ebp
  41edcb:	int3   
  41edcc:	dec    eax
  41edcd:	jecxz  0x41eda5
  41edcf:	loope  0x41edb8
  41edd1:	loop   0x41edd3
  41edd3:	pop    esp
  41edd4:	adc    al,0xce
  41edd6:	jmp    0x6fb0:0x28339bc
  41eddd:	and    BYTE PTR [ebx-0x157a3ee3],dl
  41ede3:	retf   
  41ede4:	xor    eax,0x38ead37b
  41ede9:	loope  0x41ee29
  41edeb:	mov    eax,0xaa6fa6bd
  41edf0:	mov    esi,0xd775f6e2
  41edf5:	inc    edi
  41edf6:	cmp    al,0x96
  41edf8:	das    
  41edf9:	fisubr WORD PTR [ecx+0x76]
  41edfc:	in     eax,0xa7
  41edfe:	xor    DWORD PTR [eax],esp
  41ee00:	(bad)  
  41ee03:	mov    BYTE PTR [eax-0x517febe5],ch
  41ee09:	es jp  0x41ee3f
  41ee0c:	sbb    eax,0x7cc0ea73
  41ee11:	aas    
  41ee12:	mov    ds:0x771c21ba,eax
  41ee17:	xchg   ecx,eax
  41ee18:	fcom   DWORD PTR [edx-0x59e46848]
  41ee1e:	loopne 0x41edef
  41ee20:	lahf   
  41ee21:	push   ss
  41ee22:	mov    eax,ds:0xca839f81
  41ee27:	push   esi
  41ee28:	add    ecx,DWORD PTR [ecx+0x2a122371]
  41ee2e:	test   al,0xf9
  41ee30:	arpl   WORD PTR [ecx-0x7f],ax
  41ee33:	ss ret 0x3759
  41ee37:	and    BYTE PTR [ecx+eax*4+0xa],bh
  41ee3b:	ds dec edi
  41ee3d:	fprem  
  41ee3f:	lock clc 
  41ee41:	idiv   BYTE PTR [ebx]
  41ee43:	sbb    BYTE PTR [edx],ch
  41ee45:	aaa    
  41ee46:	mov    ebp,0xbd81229a
  41ee4b:	je     0x41ee94
  41ee4d:	std    
  41ee4e:	cmp    eax,0x33e03fe8
  41ee53:	push   ecx
  41ee54:	mov    ebx,0x7fa830c8
  41ee59:	jle    0x41ee22
  41ee5b:	mov    eax,0xad8bdc28
  41ee60:	sar    dl,cl
  41ee62:	iret   
  41ee63:	mov    edi,0x882e4a17
  41ee68:	xor    al,0x7
  41ee6a:	lds    ebx,FWORD PTR [esi+0x33]
  41ee6d:	dec    esi
  41ee6e:	mov    dl,0xeb
  41ee70:	fsubr  st(5),st
  41ee72:	retf   
  41ee73:	mov    ebx,0x31bd6a
  41ee78:	mov    ecx,edx
  41ee7a:	ret    
  41ee7b:	mov    esp,0x601c831
  41ee80:	pop    ss
  41ee81:	arpl   WORD PTR [edx+ecx*1],si
  41ee84:	js     0x41ee08
  41ee86:	push   DWORD PTR [eax+esi*8+0x5deb54b8]
  41ee8d:	cs mov dh,0x70
  41ee90:	test   al,0xc2
  41ee92:	(bad)  
  41ee93:	in     al,0xeb
  41ee95:	dec    edx
  41ee96:	jb     0x41ee7f
  41ee98:	inc    DWORD PTR [eax-0x785d8cd8]
  41ee9e:	push   0xffffffb1
  41eea0:	dec    ecx
  41eea1:	cmp    ecx,ebx
  41eea3:	cmp    bh,bl
  41eea5:	dec    esi
  41eea6:	aas    
  41eea7:	lea    eax,[edi]
  41eea9:	in     al,dx
  41eeaa:	and    ah,BYTE PTR [ecx-0x516579af]
  41eeb0:	push   ebx
  41eeb1:	mov    bh,0x6f
  41eeb3:	push   edx
  41eeb4:	(bad)  
  41eeb5:	retf   0x5a30
  41eeb8:	push   esi
  41eeb9:	mov    eax,ds:0xc85ef69
  41eebe:	xchg   ebp,eax
  41eebf:	xor    ebp,DWORD PTR [eax-0x4e50670a]
  41eec5:	mov    ds:0xda17a560,eax
  41eeca:	pushf  
  41eecb:	xchg   DWORD PTR [esi-0x2a],esi
  41eece:	or     edx,edx
  41eed0:	xchg   edi,eax
  41eed1:	repnz add eax,0x4a8833fc
  41eed7:	sbb    BYTE PTR [ebp+0x0],dl
  41eeda:	ds xchg edi,eax
  41eedc:	adc    al,0x8a
  41eede:	iret   
  41eedf:	inc    eax
  41eee0:	or     eax,0xe0999fa2
  41eee5:	dec    ebx
  41eee6:	jae    0x41eeb4
  41eee8:	cmp    bl,al
  41eeea:	cld    
  41eeeb:	sbb    al,0x36
  41eeed:	sub    BYTE PTR [edx],0xb4
  41eef0:	dec    esp
  41eef1:	inc    edx
  41eef2:	xor    BYTE PTR [ecx],bh
  41eef4:	ja     0x41eea4
  41eef6:	fwait
  41eef7:	or     eax,0x88350f59
  41eefc:	clc    
  41eefd:	and    al,0x97
  41eeff:	dec    esp
  41ef00:	lahf   
  41ef01:	xchg   BYTE PTR [edx],bh
  41ef03:	dec    DWORD PTR [edi-0x38]
  41ef06:	iret   
  41ef07:	dec    edi
  41ef08:	or     eax,0xc249535a
  41ef0d:	mov    ds:0xd7deadbe,eax
  41ef12:	fidivr DWORD PTR [ecx]
  41ef14:	push   ebp
  41ef15:	sbb    DWORD PTR [edi-0x157d8fc6],0xffffffe0
  41ef1c:	and    DWORD PTR [eax-0x7cf67d58],edi
  41ef22:	xor    cl,BYTE PTR [eax-0x57]
  41ef25:	mov    ch,0xa7
  41ef27:	jne    0x41ef21
  41ef29:	xchg   BYTE PTR [ebx+edi*4+0x1263ada0],ch
  41ef30:	adc    edx,ebx
  41ef32:	pop    ds
  41ef33:	mov    fs,ebp
  41ef35:	mov    edi,0x38e0b29d
  41ef3a:	sub    ecx,DWORD PTR [ebx+0x2c]
  41ef3d:	inc    edi
  41ef3e:	mov    eax,ds:0xb08c5c90
  41ef43:	pushf  
  41ef44:	(bad)  
  41ef45:	imul   esi,edi,0xca3d5472
  41ef4b:	jmp    0xbf9a:0x5b7ecacb
  41ef52:	sbb    ch,BYTE PTR [eax+0x26]
  41ef55:	jb     0x41ef0d
  41ef57:	mov    al,0xbc
  41ef59:	retf   
  41ef5a:	test   BYTE PTR [edx-0x6101df31],cl
  41ef60:	hlt    
  41ef61:	lea    edi,[esi]
  41ef63:	lods   al,BYTE PTR ds:[esi]
  41ef64:	adc    cl,dl
  41ef66:	leave  
  41ef67:	xchg   ecx,eax
  41ef68:	ins    BYTE PTR es:[edi],dx
  41ef69:	cwde   
  41ef6a:	mov    edx,0x3c7a5fcb
  41ef6f:	idiv   DWORD PTR [ebx+ecx*4]
  41ef72:	mov    edx,0x94b133a7
  41ef77:	into   
  41ef78:	xchg   edi,eax
  41ef79:	mov    ecx,0x420ff87b
  41ef7e:	pop    DWORD PTR [edi-0x15f692c5]
  41ef84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef85:	jae    0x41efe2
  41ef87:	idiv   DWORD PTR [ecx-0x67]
  41ef8a:	jne    0x41efc0
  41ef8c:	gs daa 
  41ef8e:	mov    eax,ds:0xc1c412cf
  41ef93:	out    0x78,al
  41ef95:	inc    BYTE PTR [ebx+eax*8+0x5e8a8ed1]
  41ef9c:	mov    al,0x95
  41ef9e:	fucomip st,st(2)
  41efa0:	xor    dh,ch
  41efa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efa3:	xor    al,0x70
  41efa5:	mov    ecx,0x85cacafb
  41efaa:	cli    
  41efab:	(bad)  
  41efac:	adc    BYTE PTR [edx],ch
  41efae:	fldcw  WORD PTR [edi+0x77effe3]
  41efb4:	test   eax,0x66827551
  41efb9:	(bad)  
  41efba:	pop    edx
  41efbb:	xor    eax,esi
  41efbd:	xchg   ebp,eax
  41efbe:	jg     0x41effc
  41efc0:	jecxz  0x41f015
  41efc2:	fimul  DWORD PTR [esp+ebp*8+0x21e2428b]
  41efc9:	sub    BYTE PTR [ecx],dh
  41efcb:	repnz mov WORD PTR [edx-0x266d016],es
  41efd2:	xchg   ebx,eax
  41efd3:	lds    ebp,FWORD PTR [ebx]
  41efd5:	dec    cx
  41efd7:	call   0x58daec88
  41efdc:	scas   eax,DWORD PTR es:[edi]
  41efdd:	enter  0x2238,0x2f
  41efe1:	ret    
  41efe2:	daa    
  41efe3:	out    dx,al
  41efe4:	(bad)  [ecx+edi*2+0x347e0ea1]
  41efeb:	enter  0x5600,0x31
  41efef:	and    BYTE PTR [ecx-0x18],al
  41eff2:	mov    BYTE PTR [esp+ebp*8+0x156dfaa9],dh
  41eff9:	pop    eax
  41effa:	sub    bl,0xe4
  41effd:	dec    edx
  41effe:	sbb    cl,cl
  41f000:	(bad)  
  41f002:	lahf   
  41f003:	sbb    DWORD PTR [ebx],0xb8ad6f0b
  41f009:	lods   eax,DWORD PTR ds:[esi]
  41f00a:	mov    ecx,0x23f89fb6
  41f00f:	jmp    0x8d91:0x98151a10
  41f016:	in     eax,dx
  41f017:	sbb    bl,BYTE PTR [ebx-0x11]
  41f01a:	xor    eax,0x7a87e099
  41f01f:	pop    ebx
  41f020:	hlt    
  41f021:	les    ebx,FWORD PTR [ebx-0x4]
  41f024:	mov    ds:0xa8e83faf,al
  41f029:	and    al,0x68
  41f02b:	mov    eax,0xc9c91c38
  41f030:	(bad)  
  41f031:	enter  0x93a,0xba
  41f035:	mov    es,WORD PTR [esi-0x2635e9c1]
  41f03b:	mov    ds:0x7a754c5f,eax
  41f040:	mov    dl,0x7f
  41f042:	sub    al,0x5
  41f044:	ret    
  41f045:	mov    DWORD PTR [edx-0x6edc2f85],edi
  41f04b:	gs cdq 
  41f04d:	mov    WORD PTR [ebx],?
  41f04f:	pop    eax
  41f050:	jbe    0x41f047
  41f052:	cwde   
  41f053:	jp     0x41f07f
  41f055:	push   es
  41f056:	add    ch,bh
  41f058:	mov    eax,ds:0xa2711a80
  41f05d:	or     al,0x70
  41f05f:	and    dh,dh
  41f061:	sbb    eax,0x2babd833
  41f066:	imul   edx,DWORD PTR [ecx-0x4a580fd8],0xfffffff1
  41f06d:	imul   esp,DWORD PTR [ecx-0x53b5eb32],0xffffff86
  41f074:	gs ins DWORD PTR es:[edi],dx
  41f076:	iret   
  41f077:	jbe    0x41f075
  41f079:	out    0x54,al
  41f07b:	xor    eax,0xecfa86d1
  41f080:	mov    edi,0xdf34c24a
  41f085:	inc    edi
  41f086:	inc    eax
  41f087:	fdiv   DWORD PTR [ebx]
  41f089:	jg     0x41f062
  41f08b:	pop    edx
  41f08c:	jmp    0x6d6:0x2839e3dd
  41f093:	mov    ch,0xa
  41f095:	inc    BYTE PTR [ebx+0x5dda13a1]
  41f09b:	dec    ecx
  41f09c:	fsubr  QWORD PTR [edx]
  41f09e:	pop    es
  41f09f:	inc    eax
  41f0a0:	cmc    
  41f0a1:	inc    ebp
  41f0a2:	mov    edx,0x7ba3e30a
  41f0a7:	repnz cwde 
  41f0a9:	mov    ebp,edx
  41f0ab:	mov    DWORD PTR [esi],edx
  41f0ad:	jp     0x41f066
  41f0af:	ins    DWORD PTR es:[edi],dx
  41f0b0:	ss pushf 
  41f0b2:	xor    al,0xd4
  41f0b4:	jb     0x41f068
  41f0b6:	mov    cl,0xd6
  41f0b8:	clc    
  41f0b9:	mov    WORD PTR [edx],ds
  41f0bb:	mov    ebp,0xfa583919
  41f0c0:	sub    dh,BYTE PTR [eax+0x3f0b083e]
  41f0c6:	ins    BYTE PTR es:[edi],dx
  41f0c7:	enter  0xe3ae,0xe1
  41f0cb:	xchg   BYTE PTR [edi-0xa68c110],ch
  41f0d1:	out    dx,eax
  41f0d2:	xor    BYTE PTR [eax-0x30],ah
  41f0d5:	js     0x41f120
  41f0d7:	add    BYTE PTR [edx],0x3a
  41f0da:	ds dec eax
  41f0dc:	adc    ch,BYTE PTR [eax]
  41f0de:	sub    eax,0x9c4058d4
  41f0e3:	mov    bh,0xb0
  41f0e5:	mov    BYTE PTR [edi*8-0x241aafaf],0xd8
  41f0ed:	cmp    dl,BYTE PTR [edi-0x5956fc4e]
  41f0f3:	sar    BYTE PTR [eax-0x28466905],1
  41f0f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0fa:	cmp    eax,0x628a1a86
  41f0ff:	adc    BYTE PTR es:[esi-0x6e4c3055],ah
  41f106:	sub    dl,al
  41f108:	sti    
  41f109:	mov    BYTE PTR [edx],cl
  41f10b:	sbb    eax,DWORD PTR [eax]
  41f10d:	or     bh,BYTE PTR [edi-0x5a0ba8ea]
  41f113:	lahf   
  41f114:	sbb    bl,BYTE PTR [esi+0x7b8f2cf]
  41f11a:	inc    edi
  41f11b:	pop    ss
  41f11c:	cmp    BYTE PTR [esi-0x55cf44c7],cl
  41f122:	adc    BYTE PTR [ecx+0x1b],ch
  41f125:	mov    edx,0x7edeace0
  41f12a:	mov    edi,ebp
  41f12c:	js     0x41f130
  41f12e:	push   ebp
  41f12f:	push   ebx
  41f130:	cwde   
  41f131:	mov    ds,WORD PTR [edx+0x1a65d93e]
  41f137:	popa   
  41f138:	sbb    bh,BYTE PTR [eax+0xb25583d]
  41f13e:	icebp  
  41f13f:	sbb    al,0xb8
  41f141:	retf   0xe6bc
  41f144:	ss icebp 
  41f146:	adc    ebp,ebx
  41f148:	dec    ecx
  41f149:	sbb    esi,DWORD PTR [ebp+0x6bb6c9d7]
  41f14f:	dec    eax
  41f150:	pop    eax
  41f151:	cdq    
  41f152:	pop    es
  41f153:	push   es
  41f154:	hlt    
  41f155:	add    al,0x66
  41f157:	(bad)  
  41f158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f159:	test   eax,0x42f335eb
  41f15e:	fcmovu st,st(7)
  41f160:	pusha  
  41f161:	stc    
  41f162:	xor    eax,0x6e6f41b4
  41f167:	into   
  41f168:	push   edx
  41f169:	push   cs
  41f16a:	jg     0x41f1b1
  41f16c:	and    ecx,esi
  41f16e:	jae    0x41f107
  41f170:	cmp    DWORD PTR [esi+0x49],0xe2f36ab8
  41f177:	mul    BYTE PTR [edi+0x988304f]
  41f17d:	dec    ebx
  41f17e:	lds    ecx,FWORD PTR [ecx]
  41f180:	cmp    BYTE PTR [eax+0x3da4adfa],bh
  41f186:	and    eax,0x41a0f75
  41f18b:	jle    0x41f17e
  41f18d:	out    0x13,eax
  41f18f:	call   0x424d1654
  41f194:	sbb    DWORD PTR [bp+di],ebp
  41f197:	dec    ebp
  41f198:	std    
  41f199:	inc    edx
  41f19a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f19b:	mov    ebx,0x28321eb9
  41f1a0:	inc    ebp
  41f1a1:	out    dx,eax
  41f1a2:	xchg   ebp,eax
  41f1a3:	or     BYTE PTR [esi],0xb7
  41f1a6:	clc    
  41f1a7:	test   al,0xd8
  41f1a9:	lods   eax,DWORD PTR ds:[esi]
  41f1aa:	mov    dl,0xae
  41f1ac:	out    0xfa,al
  41f1ae:	adc    dh,dh
  41f1b0:	mov    BYTE PTR [ecx+0x1d51e835],dl
  41f1b6:	aad    0xe2
  41f1b8:	lods   al,BYTE PTR ds:[esi]
  41f1b9:	sub    eax,DWORD PTR [esi+0x73]
  41f1bc:	push   es
  41f1bd:	push   esp
  41f1be:	xor    eax,0x8de92bd0
  41f1c3:	mov    ebp,0x6830ddab
  41f1c8:	mov    esi,0xcd197af2
  41f1cd:	jmp    0x41f1b7
  41f1cf:	sub    eax,0xb5549168
  41f1d4:	rol    DWORD PTR [ebx-0x35eba861],1
  41f1da:	out    dx,eax
  41f1db:	mov    DWORD PTR [ebx+ecx*4],esi
  41f1de:	lea    ecx,[eax-0x4f]
  41f1e1:	jl     0x41f237
  41f1e3:	outs   dx,DWORD PTR ds:[esi]
  41f1e4:	sahf   
  41f1e5:	mov    ch,dl
  41f1e7:	mov    edx,0xe18b904d
  41f1ec:	mov    ah,0x33
  41f1ee:	xor    DWORD PTR [eax+0x6b8491d1],ebp
  41f1f4:	cmp    BYTE PTR [edx-0x36bf51de],cl
  41f1fa:	ss out dx,eax
  41f1fc:	adc    ebp,edx
  41f1fe:	sbb    eax,0xa1d43d69
  41f203:	scas   eax,DWORD PTR es:[edi]
  41f204:	pop    ebx
  41f205:	push   ds
  41f206:	xchg   ecx,eax
  41f207:	mov    ah,0x5b
  41f209:	test   BYTE PTR [edx+0x3c9335dc],bl
  41f20f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f210:	sbb    al,0x9a
  41f212:	sub    BYTE PTR ss:[eax-0x5ffffc38],ah
  41f219:	popf   
  41f21a:	packsswb mm2,QWORD PTR [esi-0x724be576]
  41f221:	int    0xa4
  41f223:	retf   
  41f224:	data16 stos BYTE PTR es:[edi],al
  41f226:	aas    
  41f227:	mov    al,bl
  41f229:	inc    ebx
  41f22a:	hlt    
  41f22b:	and    bh,al
  41f22d:	int3   
  41f22e:	jge    0x41f1d8
  41f230:	inc    eax
  41f231:	repz bound ebx,QWORD PTR [ebp+0x17]
  41f235:	mov    al,BYTE PTR [eax+eax*1+0x65940097]
  41f23c:	retf   0x2116
  41f23f:	cmp    DWORD PTR [ebx+ecx*4+0x6a],eax
  41f243:	push   ss
  41f244:	dec    esp
  41f245:	mov    ebx,0x5a1bf56c
  41f24a:	nop
  41f24b:	pop    ecx
  41f24c:	push   ebx
  41f24d:	mov    fs,WORD PTR [ecx+0x2f902d9c]
  41f253:	ins    DWORD PTR es:[edi],dx
  41f254:	or     dl,dh
  41f256:	sahf   
  41f257:	into   
  41f258:	and    ebp,DWORD PTR [ecx]
  41f25a:	and    BYTE PTR [edx+0x124a6a1b],al
  41f260:	mov    edi,0x61b14688
  41f265:	push   esi
  41f266:	jle    0x41f243
  41f268:	das    
  41f269:	(bad)  
  41f26a:	fimul  WORD PTR [edx-0x45ee8114]
  41f270:	les    edx,FWORD PTR [edi+0x64]
  41f273:	sbb    al,0x79
  41f275:	xor    BYTE PTR ss:[eax-0x2b31d7ed],bh
  41f27c:	clc    
  41f27d:	or     esp,DWORD PTR [edx-0x46]
  41f280:	sbb    eax,0x13c17638
  41f285:	cli    
  41f286:	pushf  
  41f287:	add    al,0xc2
  41f289:	push   0xfffffff3
  41f28b:	out    0xc3,al
  41f28d:	pop    eax
  41f28e:	jb     0x41f21e
  41f290:	ret    0xaa84
  41f293:	jo     0x41f265
  41f295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f296:	push   ss
  41f297:	push   ebp
  41f298:	or     BYTE PTR [esp+ebp*2],0x48
  41f29c:	nop
  41f29d:	std    
  41f29e:	jo     0x41f22a
  41f2a0:	out    dx,al
  41f2a1:	int3   
  41f2a2:	pop    esp
  41f2a3:	mov    BYTE PTR [eax+ecx*4+0x36],0x3e
  41f2a8:	sti    
  41f2a9:	jp     0x41f249
  41f2ab:	sar    dh,cl
  41f2ad:	arpl   WORD PTR [ecx+0x75],di
  41f2b0:	adc    al,0xcc
  41f2b2:	inc    esi
  41f2b4:	daa    
  41f2b5:	pop    ebx
  41f2b6:	jl     0x41f24c
  41f2b8:	clc    
  41f2b9:	mov    WORD PTR [edx+0x21dd264],?
  41f2bf:	add    dh,dh
  41f2c1:	push   ebx
  41f2c2:	mov    ah,0xe
  41f2c4:	inc    ecx
  41f2c5:	lods   al,BYTE PTR ds:[esi]
  41f2c6:	popf   
  41f2c7:	arpl   WORD PTR ds:0x7e2e3a8e,di
  41f2cd:	scas   eax,DWORD PTR es:[edi]
  41f2ce:	cmp    edx,esi
  41f2d0:	loope  0x41f2f8
  41f2d2:	addr16 call 0xa79be3f5
  41f2d8:	arpl   WORD PTR [ebx],ax
  41f2da:	and    DWORD PTR [ebp-0x2c57965],0xffffff9a
  41f2e1:	xchg   edx,eax
  41f2e2:	test   DWORD PTR [edx-0x50],edx
  41f2e5:	ins    DWORD PTR es:[edi],dx
  41f2e6:	pop    ds
  41f2e7:	jle    0x41f310
  41f2e9:	jns    0x41f355
  41f2eb:	mov    eax,0x1f79e716
  41f2f0:	cli    
  41f2f1:	int    0xa8
  41f2f3:	add    esi,DWORD PTR [edx-0x6a017576]
  41f2f9:	mov    bh,0x6d
  41f2fb:	or     al,0x14
  41f2fd:	jae    0x41f33a
  41f2ff:	sbb    BYTE PTR [eax-0x37908ad9],dh
  41f305:	jno    0x41f298
  41f307:	mov    edx,0x1c4803d5
  41f30c:	mov    ebx,0xa52a5ca
  41f311:	mov    dh,0x1f
  41f313:	outs   dx,BYTE PTR ds:[esi]
  41f314:	call   0x77eec40f
  41f319:	cmp    eax,0xda1a2941
  41f31e:	lds    ebp,FWORD PTR [eax-0x6e432c5d]
  41f324:	dec    eax
  41f325:	stos   BYTE PTR es:[edi],al
  41f326:	or     BYTE PTR fs:[eax+0xc0dcab1],dh
  41f32d:	aad    0xad
  41f32f:	or     DWORD PTR [esi],edx
  41f331:	jp     0x41f381
  41f333:	icebp  
  41f334:	cmp    al,0x96
  41f336:	imul   ecx,DWORD PTR [ebx+0x42376aab],0x32ea8582
  41f340:	ja     0x41f301
  41f342:	push   0x48e9dd40
  41f347:	cmp    BYTE PTR [ebp+ebx*8+0x15],ch
  41f34b:	push   ss
  41f34c:	pop    eax
  41f34d:	mov    DWORD PTR ds:0x9ea200bf,eax
  41f353:	pop    ds
  41f354:	retf   0x2301
  41f357:	mov    ebx,0x883e40c1
  41f35c:	shl    BYTE PTR [edx-0x6e],0x48
  41f360:	cli    
  41f361:	adc    eax,0x80d0f0e0
  41f366:	jp     0x41f317
  41f368:	jle    0x41f3b3
  41f36a:	mov    ah,BYTE PTR [edi]
  41f36c:	push   ds
  41f36d:	std    
  41f36e:	ss push 0x40c53516
  41f374:	push   0x30b2637a
  41f379:	shld   edi,edx,0x18
  41f37d:	sub    bl,BYTE PTR [ecx+eax*1]
  41f380:	test   al,0x72
  41f382:	pop    ds
  41f383:	inc    eax
  41f384:	and    al,0x34
  41f386:	sti    
  41f387:	push   esp
  41f388:	cmp    cl,BYTE PTR [esi+0x6a37a61a]
  41f38e:	mov    cs,esp
  41f390:	xchg   edi,eax
  41f392:	dec    edx
  41f393:	clc    
  41f394:	jl     0x41f404
  41f396:	adc    eax,0xe665f84a
  41f39b:	mov    al,0xc4
  41f39d:	pop    ecx
  41f39e:	jb     0x41f349
  41f3a0:	adc    al,0x8a
  41f3a2:	jg     0x41f39a
  41f3a4:	xchg   ebx,eax
  41f3a5:	xor    al,0x7e
  41f3a7:	rcl    DWORD PTR [eax-0x48],0xf4
  41f3ab:	sbb    eax,0xb6317b48
  41f3b0:	and    edx,DWORD PTR [eax+0x5c]
  41f3b3:	jp     0x41f3cb
  41f3b5:	dec    edx
  41f3b6:	jmp    0x5776:0xa022f152
  41f3bd:	mov    ch,0xab
  41f3bf:	fstp   QWORD PTR [ebp-0x1081d57f]
  41f3c5:	xchg   edi,eax
  41f3c6:	mov    DWORD PTR [esi+0x4e066eb5],0xc835201b
  41f3d0:	dec    edi
  41f3d1:	push   edi
  41f3d2:	loope  0x41f38a
  41f3d4:	retf   0x9a9d
  41f3d7:	ja     0x41f402
  41f3d9:	xchg   edi,eax
  41f3da:	mov    ah,0x48
  41f3dc:	sti    
  41f3dd:	mov    bl,BYTE PTR [esi-0x65]
  41f3e0:	mov    es,WORD PTR [edi]
  41f3e2:	xor    ebx,DWORD PTR [eax+0x39]
  41f3e5:	or     esp,eax
  41f3e7:	or     DWORD PTR [edx+ebp*1-0x16],ebx
  41f3eb:	jne    0x41f3f1
  41f3ed:	pop    ecx
  41f3ee:	xor    al,al
  41f3f0:	pop    es
  41f3f1:	xchg   DWORD PTR [edi+0x51],esi
  41f3f4:	call   0xab2a:0x1550bacc
  41f3fb:	push   esi
  41f3fc:	or     esi,DWORD PTR [eax]
  41f3fe:	nop
  41f3ff:	xlat   BYTE PTR ds:[ebx]
  41f400:	(bad)  
  41f401:	mov    esp,0x3828c4cd
  41f406:	mov    cl,0xe1
  41f408:	pop    ebx
  41f409:	retf   0xe9ae
  41f40c:	xchg   edx,eax
  41f40d:	(bad)  
  41f40e:	outs   dx,BYTE PTR ds:[esi]
  41f40f:	sti    
  41f410:	test   DWORD PTR [edx+0x21cd8ac5],ebx
  41f416:	pusha  
  41f417:	stc    
  41f418:	lods   eax,DWORD PTR ds:[esi]
  41f419:	jnp    0x41f456
  41f41b:	dec    eax
  41f41c:	mov    BYTE PTR [ebx+ebp*8-0x1f],ch
  41f420:	in     eax,0x3d
  41f422:	dec    ebx
  41f423:	sahf   
  41f424:	sub    ah,BYTE PTR [esi]
  41f426:	xor    edx,ebp
  41f428:	xchg   DWORD PTR [ecx-0x423d17c4],eax
  41f42e:	hlt    
  41f42f:	xchg   ebx,eax
  41f430:	sbb    BYTE PTR [edi-0x68a25361],dh
  41f436:	les    ebp,FWORD PTR [edi+0x2f00ba18]
  41f43c:	test   BYTE PTR [esi+0x3e939bc3],dl
  41f442:	xor    al,cl
  41f444:	das    
  41f445:	fwait
  41f446:	sbb    cl,dh
  41f448:	mov    ah,BYTE PTR [ebp-0x5c]
  41f44b:	mov    BYTE PTR [eax],dl
  41f44d:	mov    bl,BYTE PTR [eax+eiz*4-0xdad75cb]
  41f454:	fdivr  QWORD PTR [ecx]
  41f456:	rcl    ebp,0xa3
  41f459:	xchg   DWORD PTR [edx+0x1d],edi
  41f45c:	lds    edx,FWORD PTR ds:0x370d70bf
  41f462:	dec    ecx
  41f463:	mov    eax,0xe1fe68bf
  41f468:	mov    BYTE PTR [ecx-0x61],ah
  41f46b:	mov    dh,0x9b
  41f46d:	dec    edi
  41f46e:	jb     0x41f409
  41f470:	adc    ebx,DWORD PTR [edx]
  41f472:	mov    eax,0xaad1dca8
  41f477:	adc    al,0xff
  41f479:	ins    DWORD PTR es:[edi],dx
  41f47a:	jo     0x41f433
  41f47c:	jmp    0x8f3e:0x1446a8c
  41f483:	outs   dx,DWORD PTR ds:[esi]
  41f484:	and    bh,BYTE PTR [ebp+0x211b7fb9]
  41f48a:	sub    DWORD PTR [eax],0xcf715792
  41f490:	jns    0x41f41e
  41f492:	dec    edx
  41f493:	(bad)  
  41f495:	sub    eax,0xd56817d
  41f49a:	addr16 dec eax
  41f49c:	pop    ds
  41f49d:	xchg   ebp,eax
  41f49e:	out    0xff,eax
  41f4a0:	mov    ds:0xc945e588,eax
  41f4a5:	or     edx,0xdc5ebac8
  41f4ab:	ret    0x2f86
  41f4ae:	inc    ecx
  41f4af:	mov    eax,0x266f1823
  41f4b4:	or     ah,BYTE PTR [ebx]
  41f4b6:	adc    ebp,DWORD PTR [esi+ecx*8+0x2c73bed9]
  41f4bd:	mov    gs,edx
  41f4bf:	stos   BYTE PTR es:[edi],al
  41f4c0:	ret    
  41f4c1:	icebp  
  41f4c2:	call   0xc8f8:0x4a89fabc
  41f4c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4ca:	pop    edi
  41f4cb:	pop    ds
  41f4cc:	or     al,0xfa
  41f4ce:	xor    edx,ebp
  41f4d0:	dec    edx
  41f4d1:	mov    dh,0xc7
  41f4d3:	aaa    
  41f4d4:	or     eax,0x50b9de57
  41f4d9:	(bad)  
  41f4da:	call   0x61e7:0xd67f7d38
  41f4e1:	xor    cl,BYTE PTR [ecx-0x8]
  41f4e4:	cmp    cl,BYTE PTR [ebp-0x2c]
  41f4e7:	and    eax,0xb0e8e028
  41f4ec:	es std 
  41f4ee:	add    DWORD PTR [ebx-0x17f775ef],esi
  41f4f4:	nop
  41f4f5:	stos   BYTE PTR es:[edi],al
  41f4f6:	ds ret 
  41f4f8:	ret    0xbc38
  41f4fb:	inc    ebx
  41f4fc:	call   0x36f2ed85
  41f501:	cmp    eax,0x5c23aa05
  41f506:	adc    al,0x9a
  41f508:	pop    edx
  41f509:	mov    eax,0x4cd6f447
  41f50e:	cli    
  41f50f:	xor    bl,BYTE PTR [ebx+0x286835d1]
  41f515:	(bad)  
  41f516:	outs   dx,DWORD PTR ds:[esi]
  41f517:	add    DWORD PTR [edi-0x76],edx
  41f51a:	fimul  DWORD PTR [ecx-0xa68708b]
  41f520:	repnz inc esi
  41f522:	mov    al,0xc
  41f524:	loop   0x41f4ac
  41f526:	sbb    al,BYTE PTR [ebp-0x2a]
  41f529:	js     0x41f4e2
  41f52b:	push   ecx
  41f52c:	adc    BYTE PTR [edi+0x32df29ba],al
  41f532:	outs   dx,BYTE PTR ds:[esi]
  41f533:	adc    al,0xef
  41f535:	lods   eax,DWORD PTR ds:[esi]
  41f536:	fsub   QWORD PTR [eax+0x4b95dd36]
  41f53c:	clc    
  41f53d:	fsub   st(7),st
  41f53f:	mov    ecx,0x5e9c6a1f
  41f544:	or     eax,0xe887aa81
  41f549:	(bad)  
  41f54a:	nop
  41f54b:	es inc esi
  41f54d:	add    BYTE PTR [esi+0x28],cl
  41f550:	dec    eax
  41f551:	and    ch,BYTE PTR [ecx]
  41f553:	into   
  41f554:	(bad)  
  41f555:	dec    edi
  41f556:	jle    0x41f573
  41f558:	mov    bh,0x8d
  41f55a:	jp     0x41f597
  41f55c:	out    0x7f,al
  41f55e:	mov    bl,0x58
  41f560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f561:	in     al,0x31
  41f563:	call   0xc44d0f28
  41f568:	pop    eax
  41f569:	cmp    BYTE PTR [ebx],al
  41f56b:	mov    dl,0xac
  41f56d:	aas    
  41f56e:	pop    esi
  41f56f:	mov    edx,0x9a36aa11
  41f574:	xchg   edi,eax
  41f575:	mov    ecx,0x21fd8b02
  41f57a:	pop    edx
  41f57b:	add    DWORD PTR [eax],eax
  41f57d:	add    ch,BYTE PTR [esi+0x1a871326]
  41f583:	sbb    BYTE PTR [edi-0x95a600a],bl
  41f589:	cmp    cl,BYTE PTR ds:[eax-0x56]
  41f58d:	iret   
  41f58e:	inc    esi
  41f58f:	push   eax
  41f590:	cmp    BYTE PTR [eax],ah
  41f592:	mov    ah,0xc9
  41f594:	or     eax,0xb88cbbd5
  41f599:	(bad)  
  41f59a:	cmp    eax,0x30c7be34
  41f59f:	or     ch,bl
  41f5a1:	lahf   
  41f5a2:	mov    dh,0x78
  41f5a4:	lods   al,BYTE PTR ds:[esi]
  41f5a5:	push   esp
  41f5a6:	push   ds
  41f5a7:	inc    esp
  41f5a8:	push   0x13
  41f5aa:	cmp    al,0xa8
  41f5ac:	pop    ebx
  41f5ad:	xchg   esi,eax
  41f5ae:	mov    DWORD PTR [ecx-0x61],esp
  41f5b1:	in     eax,dx
  41f5b2:	xor    bh,BYTE PTR [eax+0x3de877b6]
  41f5b8:	dec    edi
  41f5b9:	and    DWORD PTR [eax],ecx
  41f5bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5bc:	not    BYTE PTR ds:[ebx+0x7cd5b257]
  41f5c3:	xchg   DWORD PTR [edi+edi*4],edi
  41f5c6:	sub    al,al
  41f5c8:	fs jge 0x41f586
  41f5cb:	js     0x41f5ed
  41f5cd:	sbb    esp,DWORD PTR [ecx+0x794ae9cf]
  41f5d3:	and    esp,ecx
  41f5d5:	xchg   bh,ch
  41f5d7:	add    bl,BYTE PTR [eax+0x4dae7b85]
  41f5dd:	repnz adc DWORD PTR [edi+0x1a],edi
  41f5e1:	sbb    dl,BYTE PTR [esi+esi*2]
  41f5e4:	ftst   
  41f5e6:	ins    DWORD PTR es:[edi],dx
  41f5e7:	ret    
  41f5e8:	adc    DWORD PTR [ebx+0x1a],edx
  41f5eb:	xor    bl,BYTE PTR [edx+0x25a5fbfd]
  41f5f1:	js     0x41f62d
  41f5f3:	mov    dl,ch
  41f5f5:	sbb    bh,BYTE PTR [ebx+0x50]
  41f5f8:	into   
  41f5f9:	sbb    eax,0x2699c300
  41f5fe:	popa   
  41f5ff:	or     DWORD PTR [eax+0x1c],edi
  41f602:	mov    bh,0xb4
  41f604:	push   ds
  41f605:	cmp    eax,0xcdb01f5d
  41f60a:	out    0xe9,al
  41f60c:	retf   
  41f60d:	popf   
  41f60e:	std    
  41f60f:	shl    BYTE PTR [ecx],1
  41f611:	fbstp  TBYTE PTR [edi]
  41f613:	cwde   
  41f614:	cwde   
  41f615:	stos   DWORD PTR es:[edi],eax
  41f616:	es fs cmc 
  41f619:	mov    ch,0x5a
  41f61b:	enter  0xf81a,0x32
  41f61f:	not    DWORD PTR [edx+ecx*1]
  41f622:	jb     0x41f604
  41f624:	inc    edi
  41f625:	stc    
  41f626:	jns    0x41f669
  41f628:	popa   
  41f629:	xchg   edi,eax
  41f62a:	cld    
  41f62b:	jb     0x41f5c5
  41f62d:	mov    ebp,0x551a871
  41f632:	or     eax,0x17ea0ef1
  41f637:	call   0x5661:0xb6caeb44
  41f63e:	int3   
  41f63f:	pop    ebp
  41f641:	mov    ds,edx
  41f643:	pop    esi
  41f644:	mov    edx,0x59bbab52
  41f649:	stos   BYTE PTR es:[edi],al
  41f64a:	cmp    eax,0xf4222338
  41f64f:	push   cs
  41f650:	dec    eax
  41f651:	sbb    BYTE PTR [edx-0x3506b84d],bh
  41f657:	and    DWORD PTR [esi+0xe],ebx
  41f65a:	aad    0x23
  41f65c:	cwde   
  41f65d:	aas    
  41f65e:	cs mov edx,0x939e5a69
  41f664:	enter  0xd2f2,0xae
  41f668:	bound  ebp,QWORD PTR [edi-0x49]
  41f66b:	scas   eax,DWORD PTR es:[edi]
  41f66c:	mov    cl,BYTE PTR [edx]
  41f66e:	aad    0x88
  41f670:	cmc    
  41f671:	dec    eax
  41f672:	push   esi
  41f673:	sbb    edx,esi
  41f675:	push   ecx
  41f676:	outs   dx,BYTE PTR ds:[esi]
  41f677:	dec    ebx
  41f678:	aaa    
  41f679:	mov    WORD PTR [edx+0x6c],?
  41f67c:	mov    ah,0x1
  41f67e:	push   0x3785a40d
  41f683:	mov    eax,0x653dff38
  41f688:	mov    eax,0xb337ad6c
  41f68d:	push   0x7651f80c
  41f692:	pop    edx
  41f693:	outs   dx,BYTE PTR ds:[esi]
  41f694:	fwait
  41f695:	lea    ecx,[edi]
  41f697:	cs out 0x90,eax
  41f69a:	xor    eax,0xf78c0508
  41f69f:	call   0x9c95a232
  41f6a4:	adc    BYTE PTR [ebp+0x34e6c37a],bl
  41f6aa:	jp     0x41f640
  41f6ac:	adc    al,0xa7
  41f6ae:	aaa    
  41f6af:	push   edx
  41f6b0:	mov    edi,0x11f834ce
  41f6b5:	les    ebx,FWORD PTR [ecx]
  41f6b7:	das    
  41f6b8:	and    DWORD PTR [ebp+0x39],0x7a8b83cb
  41f6bf:	in     al,0x51
  41f6c1:	sub    BYTE PTR [esp+eax*1-0x44],0x2d
  41f6c6:	repnz pop ebp
  41f6c8:	fisubr DWORD PTR [edi+0x3d]
  41f6cb:	sub    BYTE PTR [ecx-0x20d5589e],ch
  41f6d1:	add    eax,0xc2e6bb8c
  41f6d6:	mov    gs,WORD PTR [ecx+0x6500202f]
  41f6dc:	sub    DWORD PTR [eax],ecx
  41f6de:	push   ebp
  41f6df:	xor    ebp,DWORD PTR [edi]
  41f6e1:	dec    edi
  41f6e2:	xor    bh,al
  41f6e4:	sbb    ebx,esi
  41f6e6:	xchg   esi,eax
  41f6e7:	pop    edi
  41f6e8:	js     0x41f72f
  41f6ea:	shl    DWORD PTR [edx+0x1af939db],1
  41f6f0:	cdq    
  41f6f1:	mov    ?,WORD PTR [ecx-0xc]
  41f6f4:	sbb    dl,dh
  41f6f6:	lds    edi,FWORD PTR [eax+0x3df3fd24]
  41f6fc:	clc    
  41f6fd:	jo     0x41f681
  41f6ff:	mov    dl,0x4c
  41f701:	add    ebx,DWORD PTR [edi+0x32]
  41f704:	mov    esp,0x207b6c7a
  41f709:	push   ecx
  41f70a:	mov    esi,0x3f1d9648
  41f70f:	jbe    0x41f750
  41f711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f712:	pop    ebp
  41f713:	and    al,0xe4
  41f715:	jmp    0x54ec:0x82608014
  41f71c:	ret    0x3556
  41f71f:	mov    eax,0xfc815060
  41f724:	mov    eax,0xe2fdbc1c
  41f729:	(bad)  
  41f72a:	inc    ebp
  41f72b:	push   ebx
  41f72c:	push   es
  41f72d:	xchg   BYTE PTR [edx+0x352fafc7],dh
  41f733:	js     0x41f76e
  41f735:	fsub   QWORD PTR [ebx+0x1cc288ba]
  41f73b:	mov    bh,0x19
  41f73d:	mov    esp,0xba19efb6
  41f742:	ja     0x41f779
  41f744:	jo     0x41f6f9
  41f746:	nop
  41f747:	adc    esp,0x922f6a6e
  41f74d:	mov    ecx,DWORD PTR [edx]
  41f74f:	dec    esp
  41f750:	adc    esp,DWORD PTR [edx+0x631b41e5]
  41f756:	cmp    al,0x98
  41f758:	push   esi
  41f759:	aam    0x14
  41f75b:	loopne 0x41f6fd
  41f75d:	inc    edx
  41f75e:	cmc    
  41f75f:	popa   
  41f760:	cmp    DWORD PTR [edx+0x2d8a942a],ecx
  41f766:	mov    edx,0x3d5e12c1
  41f76b:	js     0x41f77b
  41f76d:	arpl   bx,bp
  41f76f:	test   BYTE PTR [edi+0xc],ch
  41f772:	pop    edx
  41f773:	iret   
  41f774:	das    
  41f775:	or     eax,0x36fb8fc5
  41f77a:	pop    ecx
  41f77b:	outs   dx,BYTE PTR ds:[esi]
  41f77c:	mov    ebx,0x1248d723
  41f781:	retf   0x9e77
  41f784:	adc    DWORD PTR [eax-0x13096ba8],ebx
  41f78a:	pop    ss
  41f78b:	nop
  41f78c:	sub    dl,BYTE PTR [ecx-0x56]
  41f78f:	aaa    
  41f790:	shr    ah,1
  41f792:	sub    ebp,DWORD PTR [edi-0x68cc15ed]
  41f798:	xor    eax,0x115600af
  41f79d:	test   eax,0x8e3001b5
  41f7a2:	fiadd  DWORD PTR [edx]
  41f7a4:	or     edx,esi
  41f7a6:	out    0x1b,al
  41f7a8:	popf   
  41f7a9:	mov    ah,0x3a
  41f7ab:	push   0x47a67b2f
  41f7b0:	or     BYTE PTR [ecx+0x69],ch
  41f7b3:	scas   eax,DWORD PTR es:[edi]
  41f7b4:	test   DWORD PTR [ecx+0x2e],esp
  41f7b7:	add    eax,0x971ea0e
  41f7bc:	js     0x41f791
  41f7be:	cmp    ch,BYTE PTR [eax]
  41f7c0:	lods   eax,DWORD PTR ds:[esi]
  41f7c1:	aaa    
  41f7c2:	inc    ecx
  41f7c3:	call   0xf570:0xc23a8dcc
  41f7ca:	mov    bl,al
  41f7cc:	fistp  WORD PTR [edx+esi*1+0x78]
  41f7d0:	inc    ebp
  41f7d1:	xor    ebp,DWORD PTR [edx]
  41f7d3:	pop    edi
  41f7d4:	sub    BYTE PTR [ecx+0x7217b625],ch
  41f7da:	inc    ebp
  41f7db:	ficomp WORD PTR [edx]
  41f7dd:	or     ah,ch
  41f7df:	mov    ebp,0x51700c6a
  41f7e4:	mov    edx,?
  41f7e6:	sub    eax,0xe0a1a39
  41f7eb:	add    esi,esi
  41f7ed:	aaa    
  41f7ee:	adc    DWORD PTR [eax],ebx
  41f7f0:	shl    DWORD PTR [ebx-0x1f38e3a0],0x34
  41f7f7:	push   0x392913a4
  41f7fc:	rcl    DWORD PTR [ebp+0x3f96cc18],0x3a
  41f803:	out    dx,al
  41f804:	aad    0x8f
  41f806:	dec    eax
  41f807:	dec    eax
  41f808:	xor    BYTE PTR [ebp+0x39],cl
  41f80b:	test   eax,0x5fd14cdc
  41f810:	fs (bad) 
  41f812:	xor    dh,BYTE PTR [eax+ebp*8]
  41f815:	jge    0x41f861
  41f817:	shl    dl,0xd8
  41f81a:	sbb    BYTE PTR [ecx+0x70df0569],cl
  41f820:	pop    ds
  41f821:	and    ebx,DWORD PTR [ebx-0x57]
  41f824:	xchg   DWORD PTR [ebx],ebx
  41f826:	sub    bh,cl
  41f828:	dec    BYTE PTR [ecx]
  41f82a:	xchg   ecx,eax
  41f82b:	hlt    
  41f82c:	push   esi
  41f82d:	jl     0x41f866
  41f82f:	or     BYTE PTR [eax-0x2749d787],0x9e
  41f836:	popf   
  41f837:	add    BYTE PTR [ebx],bl
  41f839:	stos   BYTE PTR es:[edi],al
  41f83a:	cmp    BYTE PTR [ebx],ah
  41f83c:	and    al,0x23
  41f83e:	sbb    DWORD PTR [ecx+eax*1],eax
  41f841:	xlat   BYTE PTR ds:[ebx]
  41f842:	push   0x11160892
  41f847:	mov    ch,0x1c
  41f849:	in     eax,dx
  41f84a:	jmp    0x8766:0xbf2a15ba
  41f851:	mov    ebx,0x53900dbd
  41f856:	pop    es
  41f857:	adc    ebp,DWORD PTR [ecx+0x5f]
  41f85a:	call   0x42af:0xf83b0032
  41f861:	into   
  41f862:	push   edi
  41f863:	mov    al,0x48
  41f865:	enter  0xacf1,0x44
  41f869:	adc    eax,DWORD PTR [esi]
  41f86b:	pop    edx
  41f86c:	cmp    BYTE PTR [ebx],al
  41f86e:	mov    BYTE PTR [ecx+0x658a2c9e],bh
  41f874:	pop    ss
  41f875:	pop    edx
  41f876:	fld    st(5)
  41f878:	daa    
  41f879:	ret    
  41f87a:	push   cs
  41f87b:	outs   dx,BYTE PTR ds:[esi]
  41f87c:	cmp    esi,DWORD PTR [ecx-0x76e86fee]
  41f882:	pop    ebp
  41f883:	mov    edx,0xb52a1a86
  41f888:	mov    ebx,0x1a878202
  41f88d:	int    0x30
  41f88f:	and    eax,0xad33de48
  41f894:	out    dx,al
  41f895:	dec    eax
  41f896:	out    dx,al
  41f897:	lods   eax,DWORD PTR ds:[esi]
  41f898:	int    0xfb
  41f89a:	xchg   edi,eax
  41f89b:	mov    al,ds:0x7849c26b
  41f8a0:	fnstenv [edi-0x65016551]
  41f8a6:	cmp    BYTE PTR [ebx-0x21f8d43c],ah
  41f8ac:	push   cs
  41f8ad:	loop   0x41f8a4
  41f8af:	cmc    
  41f8b0:	and    ecx,esp
  41f8b2:	add    BYTE PTR [ebx],ch
  41f8b4:	adc    esi,DWORD PTR [edx-0x75]
  41f8b7:	adc    bh,BYTE PTR [ebx]
  41f8b9:	gs lock aas 
  41f8bc:	mov    eax,0xead9a7b
  41f8c1:	loop   0x41f921
  41f8c3:	aad    0x18
  41f8c5:	sub    ah,BYTE PTR [eax+0x1b]
  41f8c8:	(bad)  
  41f8c9:	adc    dh,BYTE PTR [eax-0x371ce0cc]
  41f8cf:	pop    eax
  41f8d0:	shl    BYTE PTR [edi-0x6f2fd86],0xf0
  41f8d7:	and    eax,0x837d5ac7
  41f8dc:	pop    ecx
  41f8dd:	(bad)  
  41f8df:	add    BYTE PTR [eax],bl
  41f8e1:	cli    
  41f8e2:	or     DWORD PTR [eax+0x3057ab73],esp
  41f8e8:	push   ebp
  41f8e9:	or     DWORD PTR [edx-0x6b],0x2e
  41f8ed:	lea    ecx,[esi-0x530e8652]
  41f8f3:	out    dx,eax
  41f8f4:	sbb    DWORD PTR [ebp-0x5665c4ea],esi
  41f8fa:	and    BYTE PTR [edx+0x67],dl
  41f8fd:	lock sub edi,edx
  41f900:	adc    DWORD PTR [edx-0x33],ebp
  41f903:	add    edx,DWORD PTR [esi]
  41f905:	push   edi
  41f906:	xchg   ebx,eax
  41f907:	jmp    0x81ac:0x8832125a
  41f90e:	mov    al,ds:0x126ae85c
  41f913:	lods   al,BYTE PTR ds:[esi]
  41f914:	stc    
  41f915:	push   ecx
  41f916:	jo     0x41f8fa
  41f918:	lds    edi,FWORD PTR [edx+0x249ba032]
  41f91e:	jnp    0x41f96e
  41f920:	pop    ecx
  41f921:	dec    ebp
  41f922:	dec    eax
  41f923:	das    
  41f924:	clc    
  41f925:	jl     0x41f8af
  41f927:	mov    bh,0x32
  41f929:	xchg   ecx,eax
  41f92a:	lea    edx,[edx+0x4e4b1a15]
  41f930:	test   al,0x6b
  41f932:	jmp    FWORD PTR [ebx+0x6e]
  41f935:	pop    esp
  41f936:	or     eax,0xdb4e02ad
  41f93b:	es push edi
  41f93d:	or     eax,0x96940835
  41f942:	push   eax
  41f943:	sbb    DWORD PTR [ecx+0x4a],edx
  41f946:	jae    0x41f966
  41f948:	xchg   ebp,eax
  41f949:	cmp    DWORD PTR [eax+ebp*2],edi
  41f94c:	or     BYTE PTR [ebx-0x6608ccc1],dl
  41f952:	jp     0x41f9b0
  41f954:	test   eax,0x1ad7ac17
  41f959:	mov    ah,BYTE PTR [eax-0x64]
  41f95c:	fisttp WORD PTR [ebx-0x23f1505f]
  41f962:	pop    ds
  41f963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f964:	lea    ecx,[ecx-0x3ece5bb6]
  41f96a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f96b:	aad    0x22
  41f96d:	mov    al,0x42
  41f96f:	dec    eax
  41f970:	pop    ebp
  41f971:	dec    esi
  41f972:	enter  0x9852,0x6f
  41f976:	mov    bh,0x1a
  41f978:	test   al,0x80
  41f97a:	retf   0xacea
  41f97d:	scas   eax,DWORD PTR es:[edi]
  41f97e:	imul   edx,DWORD PTR [ecx-0x27c9a734],0x90554e64
  41f988:	or     BYTE PTR [ecx-0x2b],ah
  41f98b:	scas   al,BYTE PTR es:[edi]
  41f98c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f98d:	aam    0x81
  41f98f:	jl     0x41f9c3
  41f991:	in     eax,dx
  41f992:	pop    ds
  41f993:	pusha  
  41f994:	mov    eax,ds:0x52b0b49a
  41f999:	mov    ?,WORD PTR [esi+0x2a7fd881]
  41f99f:	mov    dh,0xaa
  41f9a1:	or     al,0x38
  41f9a3:	aad    0x15
  41f9a5:	retf   0xd85b
  41f9a8:	ins    BYTE PTR es:[di],dx
  41f9aa:	sti    
  41f9ab:	out    0xf8,eax
  41f9ad:	push   eax
  41f9ae:	call   0x7017:0x4a88af62
  41f9b5:	dec    edx
  41f9b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9b7:	xchg   edx,eax
  41f9b8:	test   BYTE PTR [ebx+edi*1-0x78],dl
  41f9bc:	and    DWORD PTR [ebx-0x25d031f5],eax
  41f9c2:	in     eax,0x25
  41f9c4:	xor    eax,0x889db701
  41f9c9:	lea    ebp,[ecx-0x1]
  41f9cc:	aad    0x47
  41f9ce:	ds mov eax,0xa2a83cd0
  41f9d4:	js     0x41f958
  41f9d6:	jle    0x41f990
  41f9d8:	ss ins BYTE PTR es:[edi],dx
  41f9da:	add    esi,DWORD PTR [edi]
  41f9dc:	dec    ecx
  41f9dd:	mov    bl,0x27
  41f9df:	lods   al,BYTE PTR ds:[esi]
  41f9e0:	jns    0x41f9d9
  41f9e2:	pop    edx
  41f9e3:	push   0xcc85b6f9
  41f9e8:	push   esi
  41f9e9:	stc    
  41f9ea:	inc    edi
  41f9eb:	bound  ecx,QWORD PTR [eax+0x48bb12a5]
  41f9f1:	inc    esi
  41f9f2:	dec    esp
  41f9f3:	or     ecx,DWORD PTR [edi]
  41f9f5:	stos   BYTE PTR es:[edi],al
  41f9f6:	outs   dx,BYTE PTR ds:[esi]
  41f9f7:	sub    al,0xb4
  41f9f9:	rcl    BYTE PTR [eax],1
  41f9fb:	sub    esp,eax
  41f9fd:	mov    edx,0xa3702d0b
  41fa02:	call   0x8d2ec69f
  41fa07:	retf   
  41fa08:	push   cs
  41fa09:	out    dx,al
  41fa0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa0b:	ja     0x41f9ca
  41fa0d:	jo     0x41f9f8
  41fa0f:	test   eax,0x6837d23a
  41fa14:	setns  BYTE PTR [ebx+0x32]
  41fa18:	cmp    al,0x7e
  41fa1a:	(bad)  
  41fa1b:	ins    DWORD PTR es:[edi],dx
  41fa1c:	push   edx
  41fa1d:	lods   eax,DWORD PTR ds:[esi]
  41fa1e:	dec    eax
  41fa1f:	push   0xd51a41c4
  41fa24:	sbb    al,0xce
  41fa26:	ds pop eax
  41fa28:	adc    BYTE PTR [ebx-0x361774f6],dl
  41fa2e:	sbb    eax,0x7cdcb9bc
  41fa33:	sbb    DWORD PTR [ecx],ebx
  41fa35:	jno    0x41fa7c
  41fa37:	retf   
  41fa38:	mov    BYTE PTR [edx+0x24c1cc9],cl
  41fa3e:	les    edx,FWORD PTR [edx-0x16]
  41fa41:	sahf   
  41fa42:	mov    eax,ds:0xc58313cd
  41fa47:	jo     0x41faa7
  41fa49:	sti    
  41fa4a:	rcl    BYTE PTR [ebp-0x444aa554],cl
  41fa50:	cli    
  41fa51:	add    DWORD PTR [ecx+ebx*1],edi
  41fa54:	call   0x11119d6b
  41fa59:	mov    edx,0x5377ce4
  41fa5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa5f:	enter  0x83df,0x9a
  41fa63:	sti    
  41fa64:	mov    al,BYTE PTR [edx-0x603dcff0]
  41fa6a:	xor    eax,0xac936fb8
  41fa6f:	jne    0x41fac9
  41fa71:	xchg   esi,eax
  41fa72:	jg     0x41fa57
  41fa74:	test   dh,0x9e
  41fa77:	and    esi,DWORD PTR [eax+ebx*2-0x16536c2]
  41fa7e:	and    eax,0xef8dc4ef
  41fa83:	scas   eax,DWORD PTR es:[edi]
  41fa84:	scas   eax,DWORD PTR es:[edi]
  41fa85:	in     al,dx
  41fa86:	inc    ecx
  41fa87:	(bad)  
  41fa88:	xchg   esp,eax
  41fa89:	mov    eax,0xd768681a
  41fa8e:	fsub   st(1),st
  41fa90:	xor    eax,ebp
  41fa92:	cmp    al,0x42
  41fa94:	out    dx,eax
  41fa95:	imul   edi,DWORD PTR [ebx],0xb6887ed8
  41fa9b:	fcomp  st(0)
  41fa9d:	inc    esi
  41fa9e:	jp     0x41fa5b
  41faa0:	test   DWORD PTR [eax],eax
  41faa2:	nop
  41faa3:	or     BYTE PTR [edi+ebp*1],dh
  41faa6:	add    eax,DWORD PTR [edx]
  41faa8:	or     eax,0x41c6aaca
  41faad:	in     eax,0xb6
  41faaf:	jb     0x41fac9
  41fab1:	mov    cl,0x10
  41fab3:	mov    ecx,0x9fce0cfc
  41fab8:	mov    eax,0xbe0307a
  41fabd:	test   eax,0xb71df9fb
  41fac2:	xor    eax,0xafa6ad42
  41fac7:	xor    al,0x88
  41fac9:	retf   
  41faca:	cli    
  41facb:	mov    ecx,0xd82f8e8c
  41fad0:	or     al,0x8a
  41fad2:	xchg   edx,eax
  41fad3:	jl     0x41faca
  41fad5:	mov    dl,0xe4
  41fad7:	xchg   BYTE PTR [edi-0x3544179a],cl
  41fadd:	(bad)  
  41fade:	retf   0xa363
  41fae1:	mov    dl,0xef
  41fae3:	outs   dx,DWORD PTR ds:[esi]
  41fae4:	sub    eax,0xd42948e2
  41fae9:	in     al,0x37
  41faeb:	dec    eax
  41faec:	push   ss
  41faed:	repnz mov ch,BYTE PTR [ecx]
  41faf0:	leave  
  41faf1:	mov    al,0x61
  41faf3:	iret   
  41faf4:	mov    dh,0x3d
  41faf6:	ud1    edx,DWORD PTR [edx-0x5d]
  41fafa:	xor    al,0xe8
  41fafc:	rol    ecx,1
  41fafe:	xor    eax,0xfab42f92
  41fb03:	xchg   esi,eax
  41fb04:	or     eax,0x2bea0ef8
  41fb09:	push   esi
  41fb0a:	sub    dl,al
  41fb0c:	pop    eax
  41fb0d:	int3   
  41fb0e:	pop    edx
  41fb0f:	js     0x41fb52
  41fb11:	mov    DWORD PTR [ebp+0x5b],esi
  41fb14:	xlat   BYTE PTR ds:[ebx]
  41fb15:	sti    
  41fb16:	cmp    BYTE PTR [edx-0x5c0aae81],bh
  41fb1c:	mov    ecx,cr3
  41fb1f:	ss daa 
  41fb21:	sub    BYTE PTR [edi+0x72],bl
  41fb24:	push   edx
  41fb25:	cmp    BYTE PTR [ebx],0xb8
  41fb28:	(bad)  
  41fb2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb2b:	(bad)  
  41fb2c:	mov    edi,0x179bc798
  41fb31:	in     al,0x51
  41fb33:	aam    0x5
  41fb35:	add    al,0xd5
  41fb37:	mov    ah,0xc0
  41fb39:	sbb    al,0x2e
  41fb3b:	(bad)  
  41fb3c:	push   cs
  41fb3d:	inc    esi
  41fb3e:	sub    al,0x97
  41fb40:	dec    edx
  41fb41:	mov    esi,0xce70d647
  41fb46:	mov    eax,ds:0xfa8ec45a
  41fb4b:	call   0xd49f:0x9866d94b
  41fb52:	cmp    al,0x88
  41fb54:	(bad)  
  41fb55:	push   esp
  41fb56:	les    ebp,FWORD PTR [ecx-0x8]
  41fb59:	fwait
  41fb5a:	les    edi,FWORD PTR [edx-0xe746196]
  41fb60:	jmp    0x97a0794f
  41fb65:	ror    DWORD PTR [edi+0x30],0x17
  41fb69:	sub    al,0x8b
  41fb6b:	dec    eax
  41fb6c:	cwde   
  41fb6d:	xchg   esp,eax
  41fb6e:	dec    eax
  41fb6f:	mov    al,0xe8
  41fb71:	jecxz  0x41fbad
  41fb73:	stc    
  41fb74:	or     BYTE PTR [edx],0xd6
  41fb77:	lahf   
  41fb78:	cld    
  41fb79:	stc    
  41fb7a:	out    dx,eax
  41fb7b:	test   eax,0x103a7fec
  41fb80:	fild   QWORD PTR [edx-0x45]
  41fb83:	xchg   ecx,eax
  41fb84:	(bad)  
  41fb86:	jmp    0x41fbf8
  41fb88:	dec    edi
  41fb89:	xor    al,BYTE PTR [edx]
  41fb8b:	xchg   edi,eax
  41fb8c:	mov    ecx,0x9c884c78
  41fb91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb92:	mov    edi,0x8036d117
  41fb97:	fmul   DWORD PTR [ebx+0x74]
  41fb9b:	scas   eax,DWORD PTR es:[edi]
  41fb9c:	mov    BYTE PTR [ecx],al
  41fb9e:	push   ebx
  41fb9f:	int3   
  41fba0:	and    eax,0x153ca46c
  41fba5:	sub    al,BYTE PTR [edi-0x6f725ecc]
  41fbab:	sub    BYTE PTR [eax-0x4344448b],0xba
  41fbb2:	sub    al,0x38
  41fbb4:	ror    BYTE PTR [edx],0xe7
  41fbb7:	daa    
  41fbb8:	mov    ds:0xd52ac5e5,eax
  41fbbd:	cmp    al,0xa7
  41fbbf:	sub    al,0x6f
  41fbc1:	popf   
  41fbc2:	cs xchg edx,eax
  41fbc4:	or     DWORD PTR [ecx+0x6a1a5b85],edi
  41fbca:	sbb    al,0x3b
  41fbcc:	pop    eax
  41fbcd:	dec    eax
  41fbce:	push   esi
  41fbcf:	sbb    al,0x97
  41fbd1:	std    
  41fbd2:	xor    al,0x78
  41fbd4:	iret   
  41fbd5:	jo     0x41fbbb
  41fbd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbd8:	cwde   
  41fbd9:	das    
  41fbda:	popa   
  41fbdb:	mov    edi,0xa0592da1
  41fbe0:	sbb    BYTE PTR [edx],bh
  41fbe2:	in     al,0x5c
  41fbe4:	xor    DWORD PTR [edx-0x4199919d],eax
  41fbea:	mov    dl,0xd5
  41fbec:	test   eax,0xc3653f83
  41fbf1:	xchg   BYTE PTR [edx],cl
  41fbf3:	mov    esp,0x1e372e17
  41fbf8:	pop    esi
  41fbf9:	jae    0x41fc2b
  41fbfb:	enter  0x548f,0xf2
  41fbff:	xchg   edi,eax
  41fc00:	push   0x32b35fc9
  41fc05:	xchg   edi,eax
  41fc06:	xor    edx,DWORD PTR [ebx+0x28]
  41fc09:	cld    
  41fc0a:	loop   0x41fc55
  41fc0c:	cmpps  xmm6,XMMWORD PTR [ebp+0x30e7cb78],0x49
  41fc14:	enter  0xfe3e,0xad
  41fc18:	aam    0xb6
  41fc1a:	loopne 0x41fbb7
  41fc1c:	or     al,0x7a
  41fc1e:	divps  xmm6,XMMWORD PTR [esi-0x143dfdb9]
  41fc25:	add    DWORD PTR [ebp+0x5a8f8bb6],ebp
  41fc2b:	push   edi
  41fc2c:	or     bl,dl
  41fc2e:	add    al,0x10
  41fc30:	ja     0x41fc9a
  41fc32:	outs   dx,BYTE PTR ds:[esi]
  41fc33:	test   al,0x2e
  41fc35:	or     esp,DWORD PTR ds:0xa68baa6e
  41fc3b:	fst    QWORD PTR [ecx-0x72]
  41fc3e:	pop    edx
  41fc3f:	adc    ebx,DWORD PTR [ebx-0x25]
  41fc42:	mov    cs,WORD PTR [ebx+0x62]
  41fc45:	mov    WORD PTR [ecx],?
  41fc47:	mov    bl,cl
  41fc49:	jbe    0x41fc73
  41fc4b:	arpl   WORD PTR [eax],di
  41fc4d:	xor    BYTE PTR ds:0xfe249db4,ch
  41fc53:	inc    eax
  41fc54:	retf   
  41fc55:	retf   0x1095
  41fc58:	cli    
  41fc59:	pop    ebp
  41fc5a:	out    0x17,al
  41fc5c:	addr16 jge 0x41fcd3
  41fc5f:	lods   eax,DWORD PTR ds:[esi]
  41fc60:	sbb    bl,dl
  41fc62:	test   eax,0xff3af8b5
  41fc67:	adc    BYTE PTR [ecx],dl
  41fc69:	jmp    0x2029:0x15ec1483
  41fc70:	push   esi
  41fc71:	cmp    al,ch
  41fc73:	xchg   edi,eax
  41fc74:	sbb    al,0x88
  41fc76:	stos   BYTE PTR es:[edi],al
  41fc77:	sbb    DWORD PTR [edi+edi*1],edi
  41fc7a:	sbb    ch,BYTE PTR [edx+0x83e1189]
  41fc80:	cli    
  41fc81:	ret    0xf966
  41fc84:	fsub   st,st(0)
  41fc86:	cmp    ebp,DWORD PTR [ebp-0x1a29431d]
  41fc8c:	bndldx bnd0,[edi]
  41fc8f:	inc    eax
  41fc90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc91:	or     DWORD PTR [edx-0x785785e],eax
  41fc97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc98:	xor    ch,al
  41fc9a:	mov    fs,WORD PTR [ecx]
  41fc9c:	adc    al,0x90
  41fc9e:	dec    edx
  41fc9f:	sbb    edi,ecx
  41fca1:	inc    edi
  41fca2:	iret   
  41fca3:	jno    0x41fca9
  41fca5:	push   esp
  41fca6:	scas   al,BYTE PTR es:[edi]
  41fca7:	dec    edi
  41fca8:	adc    DWORD PTR [edx+0x62],esp
  41fcab:	mov    eax,0xb3a1f31
  41fcb0:	cmp    eax,0xbcada8a
  41fcb5:	mov    DWORD PTR [edi+0x4c],ecx
  41fcb8:	iret   
  41fcb9:	shl    BYTE PTR [eax+ecx*8],1
  41fcbc:	mov    bh,0xfe
  41fcbe:	mov    ah,0xe8
  41fcc0:	jo     0x41fcd7
  41fcc2:	jae    0x41fcf0
  41fcc4:	sub    BYTE PTR [eax],al
  41fcc6:	imul   ebp,DWORD PTR [ebp-0x49921dae],0x4fa0fa1c
  41fcd0:	nop
  41fcd1:	je     0x41fd3c
  41fcd3:	mov    ds:0xb299f80d,al
  41fcd8:	push   0x8edefb22
  41fcdd:	out    dx,al
  41fcde:	in     eax,0x3b
  41fce0:	ror    DWORD PTR [edi],1
  41fce2:	xor    dh,BYTE PTR [edx+ebx*1-0x2496a966]
  41fce9:	icebp  
  41fcea:	in     eax,0x6c
  41fcec:	jo     0x41fcf0
  41fcee:	test   DWORD PTR [ebx],esi
  41fcf0:	sub    al,BYTE PTR [esi-0x79792ca6]
  41fcf6:	xor    cl,BYTE PTR [ebx+esi*4]
  41fcf9:	mov    esp,0x12a8b83e
  41fcfe:	inc    eax
  41fcff:	call   0xef31:0xb2948fa8
  41fd06:	ins    BYTE PTR es:[edi],dx
  41fd07:	mov    ah,0x15
  41fd09:	dec    edx
  41fd0a:	sar    DWORD PTR [eax+0x7b598c0a],1
  41fd10:	add    eax,0xf96445d7
  41fd15:	or     DWORD PTR [ebx+0x1aa9b8fb],edx
  41fd1b:	adc    ecx,eax
  41fd1d:	jbe    0x41fca4
  41fd1f:	mov    al,BYTE PTR [edi-0x19]
  41fd22:	lods   al,BYTE PTR ds:[esi]
  41fd23:	mov    dh,0x16
  41fd25:	cli    
  41fd26:	hlt    
  41fd27:	jae    0x41fcb4
  41fd29:	fs (bad) 
  41fd2b:	loop   0x41fd0d
  41fd2d:	imul   DWORD PTR [ebx+0x7bb80e29]
  41fd33:	push   0xfffffff1
  41fd35:	sub    DWORD PTR [edx+0x1afa167f],0x56
  41fd3c:	xchg   edi,eax
  41fd3d:	test   al,0x3a
  41fd3f:	adc    cl,BYTE PTR [ecx+edx*4]
  41fd42:	dec    ebp
  41fd43:	lahf   
  41fd44:	push   edx
  41fd45:	mov    ecx,DWORD PTR [edx-0x3a]
  41fd48:	fnstcw WORD PTR [esi+0xb3ccbd8]
  41fd4e:	dec    ecx
  41fd4f:	or     BYTE PTR [edx+0x27],cl
  41fd52:	jb     0x41fd23
  41fd54:	sbb    BYTE PTR [edi+0x158b5c6],cl
  41fd5a:	pusha  
  41fd5b:	icebp  
  41fd5c:	add    ecx,DWORD PTR [ebp+0x13]
  41fd5f:	inc    esi
  41fd60:	adc    ch,BYTE PTR [edi+ecx*1+0x7c88bf42]
  41fd67:	repz mov al,bh
  41fd6a:	or     eax,0x68bbdab0
  41fd6f:	pop    es
  41fd70:	push   ss
  41fd71:	cli    
  41fd72:	lods   al,BYTE PTR ds:[esi]
  41fd73:	inc    ecx
  41fd74:	mov    ebx,0x310a59f9
  41fd79:	jmp    0x2c3a:0x8c8a130f
  41fd80:	and    DWORD PTR [edi-0x4f],esi
  41fd83:	xor    bh,BYTE PTR [ecx*4+0x781934bd]
  41fd8a:	push   edi
  41fd8b:	jle    0x41fe03
  41fd8d:	adc    DWORD PTR [eax+0x72],0xe9bd1148
  41fd94:	pop    eax
  41fd95:	jo     0x41fd9b
  41fd97:	int3   
  41fd98:	mov    eax,0x49c6ba50
  41fd9d:	inc    eax
  41fd9e:	les    ecx,FWORD PTR [ecx+edx*1]
  41fda1:	push   0xffffffdc
  41fda3:	jo     0x41fddb
  41fda5:	in     al,dx
  41fda6:	jnp    0x41fd33
  41fda8:	cmp    BYTE PTR [ecx],ch
  41fdaa:	mov    BYTE PTR [ebp+0x1c68f5f2],ch
  41fdb0:	adc    BYTE PTR [edx],bl
  41fdb2:	dec    esi
  41fdb3:	add    DWORD PTR [edi-0x7cee3330],0xffffffe9
  41fdba:	leave  
  41fdbb:	pop    es
  41fdbc:	adc    DWORD PTR [edx],ecx
  41fdbe:	dec    edi
  41fdbf:	gs and ecx,ecx
  41fdc2:	ror    BYTE PTR [esi+0x19],cl
  41fdc5:	jp     0x41fda9
  41fdc7:	test   eax,0x31ea1463
  41fdcc:	mov    edx,0x96321d24
  41fdd1:	mov    WORD PTR [edx+0x5],?
  41fdd4:	mov    eax,ds:0x59042d0
  41fdd9:	adc    BYTE PTR [esi-0x51301e71],ah
  41fddf:	(bad)  
  41fde0:	adc    ecx,DWORD PTR [ebx+0x2158bbf2]
  41fde6:	ss mov ecx,0xb1d9022b
  41fdec:	adc    ch,BYTE PTR [edx]
  41fdee:	push   edi
  41fdef:	stc    
  41fdf0:	xchg   ebx,eax
  41fdf1:	sub    BYTE PTR [ebx+0x23],ah
  41fdf4:	cmp    eax,0x96a133e1
  41fdf9:	mov    DWORD PTR [edx],ecx
  41fdfb:	inc    edx
  41fdfc:	xor    eax,esp
  41fdfe:	addr16 and eax,0x6e20b418
  41fe04:	xor    al,0x5a
  41fe06:	dec    ecx
  41fe07:	in     al,dx
  41fe08:	push   edx
  41fe09:	or     esp,ebx
  41fe0b:	pushf  
  41fe0c:	mov    esp,0x95871a87
  41fe11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe12:	stc    
  41fe13:	outs   dx,DWORD PTR ds:[esi]
  41fe14:	daa    
  41fe15:	jno    0x41fe62
  41fe17:	pop    eax
  41fe18:	mov    ecx,0x87245421
  41fe1d:	cmp    ebp,esi
  41fe1f:	pop    ecx
  41fe20:	mov    ebp,0xaedcbbf5
  41fe25:	sahf   
  41fe26:	xor    BYTE PTR [eax+0x15],cl
  41fe29:	sub    ah,BYTE PTR [ecx]
  41fe2b:	in     eax,0x91
  41fe2d:	xor    al,0x3
  41fe2f:	sbb    al,0x85
  41fe31:	xchg   ebx,eax
  41fe32:	sub    DWORD PTR [ecx],edx
  41fe34:	cmp    DWORD PTR [ecx+0x6a],ebx
  41fe37:	enter  0x5dfb,0x54
  41fe3b:	sub    esi,ecx
  41fe3d:	xchg   DWORD PTR [esi],esp
  41fe3f:	jae    0x41fe09
  41fe41:	idiv   BYTE PTR ds:0x57132f38
  41fe47:	xchg   esi,eax
  41fe48:	or     BYTE PTR [ecx],dl
  41fe4a:	pop    ebx
  41fe4b:	fisttp QWORD PTR [edi+0x3df9e1ab]
  41fe51:	mov    bh,0x47
  41fe53:	add    BYTE PTR [esi],dl
  41fe55:	or     al,BYTE PTR [edi]
  41fe57:	cwde   
  41fe58:	test   BYTE PTR [ebx+0x263a6ee4],0x7f
  41fe5f:	in     eax,dx
  41fe60:	lock or edi,DWORD PTR [ecx+eiz*2+0x7d]
  41fe65:	test   DWORD PTR [edx-0x7d],ebp
  41fe68:	cmp    DWORD PTR [edx],esp
  41fe6a:	adc    DWORD PTR [edx+ecx*2+0x1c],ebx
  41fe6e:	xor    DWORD PTR [eax],ecx
  41fe70:	test   BYTE PTR [ebx+0x36b8aa84],ah
  41fe76:	and    DWORD PTR [ebp-0x6c56b75],edx
  41fe7c:	add    edx,edi
  41fe7e:	mov    eax,0x528f7f22
  41fe83:	adc    DWORD PTR [ecx+0x61],edi
  41fe86:	sbb    al,0x49
  41fe88:	in     eax,dx
  41fe89:	or     BYTE PTR [ebp-0x6c],al
  41fe8c:	test   al,0x47
  41fe8e:	jne    0x41fe3f
  41fe90:	iret   
  41fe91:	dec    esp
  41fe92:	sbb    ch,0xd
  41fe95:	lahf   
  41fe96:	xor    ch,al
  41fe98:	push   0xffffffec
  41fe9a:	pop    ebx
  41fe9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe9c:	cmp    dl,al
  41fe9e:	out    0xb3,eax
  41fea0:	mov    eax,ebx
  41fea2:	sbb    DWORD PTR [ecx+0xa166e4f],eax
  41fea8:	cwde   
  41fea9:	mov    bh,0xec
  41feab:	mov    ebx,0x9ff72577
  41feb0:	pop    eax
  41feb1:	push   ebp
  41feb2:	ins    DWORD PTR es:[edi],dx
  41feb3:	scas   eax,DWORD PTR es:[edi]
  41feb4:	mov    dh,0xb9
  41feb6:	xchg   esi,eax
  41feb7:	jb     0x41ff0b
  41feb9:	stos   DWORD PTR es:[edi],eax
  41feba:	dec    edx
  41febb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41febc:	ins    BYTE PTR es:[edi],dx
  41febd:	jo     0x41fef4
  41febf:	test   al,0x25
  41fec1:	stos   DWORD PTR es:[edi],eax
  41fec2:	jbe    0x41ff2d
  41fec4:	js     0x41fe87
  41fec6:	popa   
  41fec7:	mov    ecx,0x25391bde
  41fecc:	int    0x6b
  41fece:	mov    dl,0x74
  41fed0:	sbb    dh,ah
  41fed2:	mov    BYTE PTR [bx-0x39fd],ah
  41fed7:	dec    ecx
  41fed8:	mov    ch,0x0
  41feda:	and    eax,0xba831866
  41fedf:	mov    edi,0x72f63069
  41fee4:	pop    esp
  41fee5:	pop    ss
  41fee6:	xor    eax,0xc4777a98
  41feeb:	imul   ebp,DWORD PTR [eax],0xbaad8216
  41fef1:	sub    DWORD PTR [ebx-0x7f],0xdeada16
  41fef8:	mov    eax,ds:0x1c190353
  41fefd:	dec    esp
  41fefe:	cmc    
  41feff:	jle    0x41ff0d
  41ff01:	lea    ecx,[edx]
  41ff03:	mov    ebx,0xc3c7adcb
  41ff08:	bound  ebx,QWORD PTR [esi+0x18]
  41ff0b:	int3   
  41ff0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff0d:	(bad)  
  41ff0e:	rcl    BYTE PTR [eax],cl
  41ff10:	sub    dh,cl
  41ff12:	in     eax,dx
  41ff13:	addr16 inc edi
  41ff15:	xchg   BYTE PTR [edx-0x5f1acd02],bh
  41ff1b:	xor    edi,esi
  41ff1d:	mov    bh,BYTE PTR [edi]
  41ff1f:	dec    eax
  41ff20:	jge    0x41fec6
  41ff22:	mov    bh,0x4f
  41ff24:	or     al,dh
  41ff26:	outs   dx,DWORD PTR ds:[esi]
  41ff27:	mov    ecx,0xc564c4c8
  41ff2c:	pop    ds
  41ff2d:	jmp    0xad01:0xe52b4205
  41ff34:	push   esi
  41ff35:	mov    ebx,0x84e8c932
  41ff3a:	push   ss
  41ff3b:	mov    ah,0xd0
  41ff3d:	out    dx,eax
  41ff3e:	js     0x41ff2f
  41ff40:	cvtpi2ps xmm6,QWORD PTR [eax-0x195d6290]
  41ff47:	and    BYTE PTR [edx-0x2192112b],al
  41ff4d:	mov    bl,BYTE PTR [edx+0x7d8a52d1]
  41ff53:	inc    eax
  41ff54:	pop    ss
  41ff55:	pop    edx
  41ff56:	xor    esi,DWORD PTR ds:0x1265976c
  41ff5c:	rcl    DWORD PTR [ebp-0x70b6b1c5],0x9a
  41ff63:	xor    edx,ecx
  41ff65:	sub    al,BYTE PTR [ebx+0x3ce03464]
  41ff6b:	or     BYTE PTR [edx-0x64],ah
  41ff6e:	xchg   ecx,eax
  41ff6f:	dec    esp
  41ff70:	push   ds
  41ff71:	add    DWORD PTR [edi],edi
  41ff73:	xchg   esp,eax
  41ff74:	nop
  41ff75:	in     eax,0x99
  41ff77:	mov    ecx,0x78ba2dcd
  41ff7c:	mov    dh,0xac
  41ff7e:	xor    eax,0x8b691118
  41ff83:	add    al,0x5f
  41ff85:	nop
  41ff86:	inc    ebp
  41ff87:	adc    al,0xd9
  41ff89:	inc    esp
  41ff8a:	mov    bl,dh
  41ff8c:	repz dec eax
  41ff8e:	or     eax,0x36c0014e
  41ff93:	xor    al,0x51
  41ff95:	rcr    BYTE PTR [ebp-0x6c],1
  41ff98:	cmp    al,0x81
  41ff9a:	jmp    0x14f1:0xf2c6ca95
  41ffa1:	xchg   edx,eax
  41ffa2:	cmp    al,0x28
  41ffa4:	jae    0x42001f
  41ffa6:	mov    al,0x6
  41ffa8:	cwde   
  41ffa9:	add    eax,0x3bd3ee81
  41ffae:	and    DWORD PTR [eax-0x146d7de8],ebx
  41ffb4:	inc    edi
  41ffb5:	or     al,0x3d
  41ffb7:	cmp    BYTE PTR [ebp-0x3e],ch
  41ffba:	cld    
  41ffbb:	jge    0x41ff75
  41ffbd:	add    DWORD PTR [esi*4+0x326ec3f5],ebp
  41ffc4:	adc    BYTE PTR [edx+0xeca7b79],cl
  41ffca:	ret    
  41ffcb:	or     BYTE PTR ds:0x84a266fc,dh
  41ffd2:	sub    dh,dh
  41ffd4:	push   ebp
  41ffd5:	cmp    BYTE PTR [edi],ch
  41ffd7:	and    eax,0x6f8ddcfd
  41ffdc:	adc    eax,0x89b7ee92
  41ffe1:	cmc    
  41ffe2:	pmuludq mm3,QWORD PTR [ecx-0xc50e57e]
  41ffe9:	adc    ch,dl
  41ffeb:	fnstcw WORD PTR [edi+edx*4]
  41ffee:	or     DWORD PTR [ebx+0x77],esp
  41fff1:	adc    ecx,ebp
  41fff3:	stos   BYTE PTR es:[edi],al
  41fff4:	es jne 0x42006e
  41fff7:	mov    bl,0x23
  41fff9:	adc    ch,ah
  41fffb:	sbb    BYTE PTR [edi],ch
  41fffd:	jnp    0x420009
  41ffff:	mov    ds:0xe8f69768,eax
  420004:	bound  eax,QWORD PTR [esi]
  420006:	mov    bh,0x67
  420008:	call   0x932a3359
  42000d:	xchg   edi,eax
  42000e:	jo     0x42003e
  420010:	call   0xb8f2532e
  420015:	idiv   DWORD PTR [eax+0x3e9ae28f]
  42001b:	push   ecx
  42001c:	xor    cl,BYTE PTR [ebx]
  42001e:	int3   
  42001f:	sbb    DWORD PTR [esi],ecx
  420021:	fcom   QWORD PTR [ebx]
  420023:	pusha  
  420024:	enter  0x5887,0xad
  420028:	pusha  
  420029:	int3   
  42002a:	mov    al,0x42
  42002c:	adc    edx,edi
  42002e:	scas   al,BYTE PTR es:[edi]
  42002f:	xchg   BYTE PTR ds:0xb5f94e82,cl
  420035:	mov    ebp,0xebd5a08d
  42003a:	mov    ebx,0x611b89ad
  42003f:	cmp    BYTE PTR [edx-0x15],cl
  420042:	xor    al,0xbb
  420044:	mov    al,0x9
  420046:	cmp    ebx,DWORD PTR [eax+0x4043be3]
  42004c:	mov    ?,WORD PTR [ecx+0x55]
  42004f:	jo     0x420005
  420051:	rcr    DWORD PTR [ebp+0x51e89eb4],0x9a
  420058:	stos   DWORD PTR es:[edi],eax
  420059:	fild   QWORD PTR [ebx+0x18]
  42005c:	cmp    edi,ebp
  42005e:	push   ds
  42005f:	push   ebx
  420060:	test   BYTE PTR [edx],0xd9
  420063:	ins    DWORD PTR es:[edi],dx
  420064:	push   0xc3b9f102
  420069:	mov    bh,0x8c
  42006b:	xchg   BYTE PTR ds:0x2ce3b79a,cl
  420071:	push   ebp
  420072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420073:	pop    ecx
  420074:	inc    ecx
  420075:	loope  0x42006c
  420077:	mov    ah,0x94
  420079:	ins    DWORD PTR es:[edi],dx
  42007a:	jl     0x420048
  42007c:	jg     0x420005
  42007e:	cmp    cl,BYTE PTR [edi-0x7f1535ea]
  420084:	mov    ch,0xc8
  420086:	push   edi
  420087:	sub    DWORD PTR ds:0xe89fd449,0x4
  42008e:	sbb    esp,ebx
  420090:	mov    ds:0x747a4fd9,al
  420095:	aam    0x72
  420097:	mov    dh,0x11
  420099:	push   0x73
  42009b:	pop    eax
  42009c:	leave  
  42009d:	mov    esi,DWORD PTR [eax-0x72017970]
  4200a3:	loopne 0x4200fa
  4200a5:	sbb    BYTE PTR [edx],0xb4
  4200a8:	xchg   edi,eax
  4200a9:	lock mov al,0x9a
  4200ac:	xor    al,0xac
  4200ae:	int3   
  4200af:	mov    al,ds:0xa1593616
  4200b4:	sub    al,BYTE PTR [edx-0x1ed770de]
  4200ba:	idiv   DWORD PTR [edx+0x68fd6e87]
  4200c0:	sbb    ebx,edx
  4200c2:	retf   
  4200c3:	lods   eax,DWORD PTR ds:[esi]
  4200c4:	mov    cl,0x76
  4200c6:	xor    al,0x74
  4200c8:	push   eax
  4200c9:	mov    ebx,0x4c2faf5e
  4200ce:	pop    ebx
  4200cf:	test   eax,0xa836c429
  4200d4:	dec    edx
  4200d5:	mov    ebp,0xa1436ecc
  4200da:	aaa    
  4200db:	test   al,0x4b
  4200dd:	add    edx,DWORD PTR [edi+0x73]
  4200e0:	mov    edi,0x42665d1
  4200e5:	xchg   esi,eax
  4200e6:	dec    edx
  4200e7:	push   ebx
  4200e8:	outs   dx,DWORD PTR ds:[esi]
  4200e9:	mov    ebp,?
  4200eb:	fisubr WORD PTR [ecx]
  4200ed:	adc    BYTE PTR [ecx],ch
  4200ef:	out    dx,eax
  4200f0:	mov    ah,0x85
  4200f2:	jne    0x4200b0
  4200f4:	dec    esp
  4200f5:	mov    ebx,0x6e08cc9f
  4200fa:	ret    0x6fb6
  4200fd:	enter  0x8b9d,0xbd
  420101:	stos   BYTE PTR es:[edi],al
  420102:	push   ebx
  420103:	push   esp
  420104:	scas   al,BYTE PTR es:[edi]
  420105:	pop    ss
  420106:	(bad)  
  420107:	into   
  420108:	retf   0x3766
  42010b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42010c:	sbb    BYTE PTR [eax],al
  42010e:	add    ecx,ebp
  420110:	mov    eax,ds:0x8f029802
  420115:	jo     0x420155
  420117:	fs add al,0x12
  42011a:	mov    dh,0x6d
  42011c:	(bad)  
  42011d:	mov    cl,0x36
  42011f:	cwde   
  420120:	ret    0x8594
  420123:	repz clc 
  420125:	test   eax,0xb43cb788
  42012a:	int    0xe3
  42012c:	or     al,0x1a
  42012e:	imul   ebp,DWORD PTR [edi+0x66],0xe4d80b92
  420135:	aaa    
  420136:	sbb    edi,DWORD PTR [esi]
  420138:	pop    edi
  420139:	mov    cs,WORD PTR [edx+0xb]
  42013c:	inc    ebx
  42013d:	dec    edx
  42013e:	sbb    eax,0xabf2edef
  420143:	aas    
  420144:	xor    eax,0x72e0f43a
  420149:	test   DWORD PTR [esi-0x750e2109],edx
  42014f:	bswap  eax
  420151:	xchg   ecx,eax
  420152:	scas   eax,DWORD PTR es:[edi]
  420153:	mov    bl,0x1e
  420155:	data16 sbb BYTE PTR ss:0xb04ff8b5,0x16
  42015e:	inc    edi
  42015f:	mov    ch,0xd3
  420161:	push   edi
  420162:	into   
  420163:	dec    esi
  420164:	push   esi
  420165:	ret    
  420166:	sbb    al,0x6
  420168:	add    DWORD PTR [ebx-0x44922d16],eax
  42016e:	lock xchg bl,al
  420171:	xchg   edi,eax
  420172:	sar    DWORD PTR [edi+ebp*1-0x1a0c5b07],cl
  420179:	cli    
  42017a:	imul   esp,DWORD PTR [edx+0x3b],0xc8158a84
  420181:	inc    BYTE PTR [eax]
  420183:	mov    ch,0x34
  420185:	xchg   ecx,eax
  420186:	pop    ebx
  420187:	outs   dx,DWORD PTR ds:[esi]
  420188:	addr16 mov ebp,0x53cea2ff
  42018e:	jg     0x420135
  420190:	jbe    0x42011f
  420192:	ret    0x886
  420195:	nop
  420196:	fnstsw WORD PTR [ecx-0x63950c6f]
  42019c:	adc    al,0xea
  42019e:	neg    BYTE PTR es:[ebx+0x5453d076]
  4201a5:	ins    DWORD PTR es:[edi],dx
  4201a6:	pop    ds
  4201a7:	aaa    
  4201a8:	rol    DWORD PTR [ebp+0x678ae59a],cl
  4201ae:	mov    ds:0x3032eaef,al
  4201b3:	or     al,ah
  4201b5:	ds in  al,dx
  4201b7:	sbb    al,0x88
  4201b9:	or     BYTE PTR [ebp-0x6ca6fd4e],ah
  4201bf:	aas    
  4201c0:	bswap  edx
  4201c2:	fucomip st,st(2)
  4201c4:	xor    eax,0x81de0cfb
  4201c9:	imul   edx,DWORD PTR [esi+0xa856b1e],0xcae77052
  4201d3:	gs dec ebp
  4201d5:	xchg   esp,eax
  4201d6:	inc    edx
  4201d7:	mov    BYTE PTR [ecx],dl
  4201d9:	(bad)  
  4201da:	mov    bl,0x87
  4201dc:	pop    ds
  4201dd:	cmp    eax,0x8d76fab6
  4201e2:	cmp    dh,BYTE PTR [ebx-0x23730645]
  4201e8:	adc    ebx,DWORD PTR [eax-0x192d7b7]
  4201ee:	imul   ecx,DWORD PTR [esi-0x72],0xc86fce6f
  4201f5:	and    cl,BYTE PTR [ebx]
  4201f7:	ficom  WORD PTR [edx]
  4201f9:	inc    esp
  4201fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201fb:	retf   
  4201fc:	or     dl,bl
  4201fe:	test   ebp,0x67bbfdfa
  420204:	pop    esp
  420205:	inc    esp
  420206:	push   es
  420207:	and    eax,0xf62bebfa
  42020c:	xchg   ebp,esi
  42020e:	xor    eax,edx
  420210:	push   ss
  420211:	dec    edx
  420212:	sbb    ebp,edx
  420214:	adc    dh,BYTE PTR [ebx+ebp*1-0x23]
  420218:	mov    dl,0xae
  42021a:	mov    ebp,0xe869a862
  42021f:	mov    dh,0x29
  420221:	rol    DWORD PTR [edi],0x57
  420224:	push   cs
  420225:	sub    dl,BYTE PTR [eax]
  420227:	aad    0xaa
  420229:	(bad)  
  42022b:	and    BYTE PTR [ecx],ah
  42022d:	std    
  42022e:	inc    ebp
  42022f:	les    ebx,FWORD PTR ds:0x4456da82
  420235:	and    bh,BYTE PTR [edi+0x29]
  420238:	hlt    
  420239:	ja     0x420221
  42023b:	or     al,0x99
  42023d:	mov    edx,?
  42023f:	call   0x7b9b4140
  420244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420245:	mov    ebx,DWORD PTR [edx]
  420247:	shl    cl,0xc2
  42024a:	aas    
  42024b:	jb     0x420278
  42024d:	add    ebp,DWORD PTR ds:0xeac216af
  420253:	xchg   ebx,eax
  420254:	cld    
  420255:	sbb    al,0xbb
  420257:	inc    ebx
  420258:	cmp    ecx,DWORD PTR ds:[ecx+0x75]
  42025c:	sbb    al,0xd0
  42025e:	pop    edx
  42025f:	mov    al,0xf1
  420261:	js     0x4202e1
  420263:	mov    ebx,0x7f202eba
  420268:	push   es
  420269:	int    0xe7
  42026b:	rcl    BYTE PTR [eax],0xeb
  42026e:	mov    ebp,0xd567b8e5
  420273:	mov    ebx,0x1d34c13a
  420278:	test   BYTE PTR [edx+0x5807aac8],bh
  42027e:	mov    eax,ds:0x41751d2d
  420283:	shl    BYTE PTR [ebx-0x2b],cl
  420286:	mov    ebx,0xca8ee179
  42028b:	dec    ecx
  42028c:	dec    edx
  42028d:	mov    al,ds:0x29697cee
  420292:	xor    eax,0xac6c0848
  420297:	jp     0x420248
  420299:	push   esi
  42029a:	sub    BYTE PTR [edx],0x76
  42029d:	sub    dl,BYTE PTR [ebx+0x24]
  4202a0:	leave  
  4202a1:	mov    ah,0xb6
  4202a3:	repz mov ah,0x62
  4202a6:	cmp    cl,BYTE PTR [ecx+0x20]
  4202a9:	mov    eax,0x7a659847
  4202ae:	push   es
  4202af:	ss icebp 
  4202b1:	xchg   DWORD PTR [eax],esi
  4202b3:	in     al,0x90
  4202b5:	mov    DWORD PTR [edx],ebx
  4202b7:	ds test eax,0xc73d5b9f
  4202bd:	gs dec eax
  4202bf:	sbb    BYTE PTR [ebx],dl
  4202c1:	cld    
  4202c2:	pop    edx
  4202c3:	xor    eax,edi
  4202c5:	jnp    0x420308
  4202c7:	lods   eax,DWORD PTR ds:[esi]
  4202c8:	loopne 0x420303
  4202ca:	cmp    al,0x9d
  4202cc:	push   cs
  4202cd:	push   0xffffffd3
  4202cf:	dec    ebp
  4202d0:	or     eax,0x56d542d6
  4202d5:	push   ecx
  4202d6:	push   ss
  4202d7:	(bad)  
  4202d8:	or     eax,0x668ffa81
  4202dd:	cs data16 je 0x420316
  4202e1:	inc    esi
  4202e2:	xor    ebp,DWORD PTR [eax]
  4202e4:	call   0xdca1c683
  4202e9:	or     DWORD PTR [ecx-0x60],esi
  4202ec:	enter  0x3555,0x40
  4202f0:	call   0x7d672e02
  4202f5:	lea    ecx,[eax+0x50160d8f]
  4202fb:	jecxz  0x42029a
  4202fd:	icebp  
  4202fe:	addr16 es repnz cwde 
  420302:	sbb    dl,BYTE PTR [ecx+0x46]
  420305:	xchg   ebx,eax
  420306:	mov    cs,edi
  420308:	cli    
  420309:	mov    dh,BYTE PTR [ecx]
  42030b:	arpl   WORD PTR [edi-0x7d9f46e2],bp
  420311:	stc    
  420312:	cmp    BYTE PTR [ebx+esi*1+0x58b25d90],dh
  420319:	ins    DWORD PTR es:[edi],dx
  42031a:	call   0x430db1d3
  42031f:	lock sbb cl,dl
  420322:	mov    ecx,?
  420324:	pop    edi
  420325:	jbe    0x420382
  420327:	jmp    0x8d51:0x2ce0f079
  42032e:	cli    
  42032f:	sub    ch,BYTE PTR [ebx-0x62]
  420332:	(bad)  
  420333:	fnstcw WORD PTR [ebx+0x6a]
  420336:	sbb    BYTE PTR ds:[ebp+0x18926888],bl
  42033d:	sub    eax,0x7e96b4bb
  420342:	ins    BYTE PTR es:[edi],dx
  420343:	mov    al,0x11
  420345:	fcmove st,st(1)
  420347:	rcr    DWORD PTR ds:0x7937407c,1
  42034d:	in     al,dx
  42034e:	jmp    0xeacc875f
  420353:	cli    
  420354:	jecxz  0x420349
  420356:	dec    edi
  420357:	and    al,0xe
  420359:	jne    0x420392
  42035b:	call   0xd93702af
  420360:	das    
  420361:	fmulp  st(7),st
  420363:	sbb    eax,0xa1a08d0
  420368:	ror    BYTE PTR [ecx-0x3830fed7],cl
  42036e:	dec    edi
  42036f:	cmp    BYTE PTR [edi-0x6e],al
  420372:	addr16 jae 0x4203cf
  420375:	mov    esi,0xd038ec3a
  42037a:	sbb    ebx,edi
  42037c:	ja     0x420375
  42037e:	and    al,BYTE PTR [esp+edi*2-0x70e94473]
  420385:	fisub  DWORD PTR [edx]
  420387:	(bad)  
  420388:	clc    
  420389:	adc    ah,BYTE PTR [eax]
  42038b:	fwait
  42038c:	mov    eax,ds:0x4e0a52ba
  420391:	or     al,0xf7
  420393:	and    dl,0x8e
  420396:	push   0xfffffff1
  420398:	mov    ?,esp
  42039a:	or     al,bl
  42039c:	cmp    ebp,ebx
  42039e:	out    dx,eax
  42039f:	and    BYTE PTR [eax+0x63be8bd4],ah
  4203a5:	mov    edx,DWORD PTR [esi+0x73064eb9]
  4203ab:	ins    DWORD PTR es:[edi],dx
  4203ac:	dec    eax
  4203ad:	popa   
  4203ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203af:	scas   eax,DWORD PTR es:[edi]
  4203b0:	mov    eax,0x13e18274
  4203b5:	xchg   esp,eax
  4203b6:	xor    eax,0x97bf8bb8
  4203bb:	inc    ebx
  4203bc:	pop    eax
  4203bd:	inc    edi
  4203be:	aad    0xac
  4203c0:	stos   BYTE PTR es:[edi],al
  4203c1:	mov    esp,0xed047ead
  4203c6:	inc    eax
  4203c7:	sbb    BYTE PTR [ebx-0x46],bh
  4203ca:	cmc    
  4203cb:	stos   BYTE PTR es:[edi],al
  4203cc:	xlat   BYTE PTR ds:[ebx]
  4203cd:	(bad)  
  4203ce:	ret    0xefb2
  4203d1:	cwde   
  4203d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203d3:	mov    al,ds:0xedebf814
  4203d8:	cmp    al,0xc0
  4203da:	scas   al,BYTE PTR es:[edi]
  4203db:	repz push ds
  4203dd:	cmc    
  4203de:	lods   eax,DWORD PTR ds:[esi]
  4203df:	iret   
  4203e0:	push   ss
  4203e1:	mov    al,ds:0xa9109212
  4203e6:	neg    DWORD PTR [edi+0x3729c38c]
  4203ec:	pop    ebp
  4203ed:	pop    edx
  4203ee:	adc    eax,0x3547fc07
  4203f3:	dec    eax
  4203f4:	imul   edi,DWORD PTR [ebp+0x3b],0xffffff9e
  4203f8:	enter  0x9265,0xe0
  4203fc:	pop    eax
  4203fd:	mov    dl,0xca
  4203ff:	adc    ecx,DWORD PTR [ebx]
  420401:	add    eax,0x8a286c38
  420406:	fdiv   DWORD PTR [eax-0x47a58f16]
  42040c:	sbb    ch,BYTE PTR [edx]
  42040e:	jnp    0x420451
  420410:	push   esp
  420411:	add    bh,dl
  420413:	pop    edx
  420414:	out    dx,eax
  420415:	jne    0x4203a4
  420417:	jecxz  0x4203c7
  420419:	test   DWORD PTR [edx],ebx
  42041b:	cmc    
  42041c:	xor    BYTE PTR cs:[ecx+0x55915dda],ah
  420423:	cwde   
  420424:	ror    edi,cl
  420426:	and    al,0x4f
  420428:	pop    edx
  420429:	jns    0x42046a
  42042b:	test   BYTE PTR [edi+0x3f],al
  42042e:	cmp    eax,0xc2f789b8
  420433:	inc    ecx
  420434:	loopne 0x42044a
  420436:	xchg   edi,eax
  420437:	pop    ds
  420438:	paddq  mm3,QWORD PTR [edi+esi*4]
  42043c:	add    ecx,DWORD PTR [eax+0x2a0d32a6]
  420442:	or     ebx,ecx
  420444:	sahf   
  420445:	xchg   edx,eax
  420446:	stos   BYTE PTR es:[edi],al
  420447:	lods   eax,DWORD PTR ds:[esi]
  420448:	test   BYTE PTR [eax-0x66],cl
  42044b:	xchg   esp,eax
  42044c:	mov    es,WORD PTR [eax-0x61c57106]
  420452:	push   0x334179f6
  420457:	or     BYTE PTR [edx],bl
  420459:	adc    DWORD PTR [eax-0x369041e4],ecx
  42045f:	stos   DWORD PTR es:[edi],eax
  420460:	jo     0x42041e
  420462:	sub    BYTE PTR [edi+0x167d2d17],0x6f
  420469:	xor    BYTE PTR ds:0x5729c518,dh
  42046f:	test   eax,edi
  420471:	fild   WORD PTR [eax]
  420473:	lods   eax,DWORD PTR ds:[esi]
  420474:	jb     0x42040a
  420476:	push   cs
  420477:	mov    bh,0xd8
  420479:	jge    0x42048d
  42047b:	inc    ebx
  42047c:	fwait
  42047d:	inc    esp
  42047e:	cwde   
  42047f:	stos   BYTE PTR es:[edi],al
  420480:	cli    
  420481:	mov    ah,0x4a
  420483:	(bad)
  420487:	lods   eax,DWORD PTR ds:[esi]
  420488:	fadd   DWORD PTR [edx]
  42048a:	fidiv  DWORD PTR [esi+0x152011e1]
  420490:	adc    eax,0xb15f020a
  420495:	das    
  420496:	sub    eax,DWORD PTR [edi]
  420498:	xor    ch,al
  42049a:	shl    BYTE PTR [edx],1
  42049c:	pop    es
  42049d:	cmp    DWORD PTR [edx-0x28],0xffffffb4
  4204a1:	dec    ebx
  4204a2:	cmp    DWORD PTR [ecx*2-0x6a57c87d],ebp
  4204a9:	frstor [ebp+0x54]
  4204ac:	dec    eax
  4204ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204ae:	sahf   
  4204af:	mov    edx,0x116c2406
  4204b4:	fstp   DWORD PTR [edx-0x2b0c6097]
  4204ba:	iret   
  4204bb:	or     edx,ebx
  4204bd:	shl    DWORD PTR [ecx],1
  4204bf:	loopne 0x420490
  4204c1:	sub    DWORD PTR ds:0x842bfd2a,esp
  4204c7:	mov    bh,0xd
  4204c9:	scas   al,BYTE PTR es:[edi]
  4204ca:	clc    
  4204cb:	sbb    DWORD PTR ds:0x5b9b9cfa,ecx
  4204d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204d2:	mov    ecx,0x43e7086b
  4204d7:	(bad)  
  4204d8:	lahf   
  4204d9:	dec    eax
  4204da:	leave  
  4204db:	mov    WORD PTR [esi],ss
  4204dd:	mov    al,0x74
  4204df:	mov    WORD PTR [edx-0x66],es
  4204e2:	sbb    DWORD PTR [eax-0x57bd6659],ebp
  4204e8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4204ea:	pop    esi
  4204eb:	dec    edi
  4204ec:	mov    eax,0xd4a80885
  4204f1:	test   DWORD PTR [edx+0x7a],ecx
  4204f4:	icebp  
  4204f5:	call   0x8a564146
  4204fa:	jae    0x420565
  4204fc:	ja     0x4204f4
  4204fe:	arpl   WORD PTR [edx+0x45],sp
  420501:	add    BYTE PTR [eax+edi*8-0x71],dl
  420505:	ja     0x420551
  420507:	pop    ds
  420508:	inc    edi
  420509:	call   0x6eb0:0x8e37244a
  420510:	sub    esi,DWORD PTR ss:[ecx]
  420513:	mov    BYTE PTR [esp+ecx*1],bh
  420516:	call   0xc2110476
  42051b:	and    esi,esp
  42051d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42051e:	push   ebp
  42051f:	push   edx
  420520:	cmp    eax,DWORD PTR [eax+0x4a0f7ec2]
  420526:	mov    bh,0xb4
  420528:	or     bh,BYTE PTR cs:[ecx+eax*1]
  42052c:	push   ecx
  42052d:	push   cs
  42052e:	mov    eax,ds:0xeb740146
  420533:	pmuludq mm1,QWORD PTR [edx+0xa0eb16a]
  42053a:	ins    DWORD PTR es:[edi],dx
  42053b:	dec    esi
  42053c:	test   eax,0x6334ce3b
  420541:	pusha  
  420542:	fsub   QWORD PTR [ecx]
  420544:	xchg   ecx,eax
  420545:	sub    edx,0xffffff97
  420548:	or     DWORD PTR [eax+0x7816956b],0xffffffb1
  42054f:	mov    eax,0xeeac90b7
  420554:	lock mov dl,0x64
  420557:	enter  0x2bd7,0xd8
  42055b:	mov    bh,0x98
  42055d:	xor    ebx,eax
  42055f:	mov    dl,0xc2
  420561:	lods   eax,DWORD PTR ds:[esi]
  420562:	out    dx,al
  420563:	or     ecx,DWORD PTR [edx+0x6e]
  420566:	mov    dh,0x45
  420568:	pop    eax
  420569:	dec    ebp
  42056a:	xor    eax,0xfd0016b4
  42056f:	sbb    ebp,eax
  420571:	add    eax,0x1c53af1e
  420576:	stos   BYTE PTR es:[edi],al
  420577:	mov    eax,0x2d571c5f
  42057c:	(bad)  
  42057d:	push   ds
  42057e:	xchg   esp,eax
  42057f:	mov    cl,0xb6
  420581:	call   0x86dd3338
  420586:	jecxz  0x4205fb
  420588:	dec    esi
  420589:	jge    0x420576
  42058b:	aam    0x10
  42058d:	mov    ebp,0x1c0b8b7a
  420592:	cmp    esp,esp
  420594:	inc    edx
  420595:	(bad)  
  420597:	out    dx,al
  420598:	xor    BYTE PTR [edi-0x4dfb77a3],ch
  42059e:	std    
  42059f:	mov    dl,0x22
  4205a1:	sbb    eax,0xa8147091
  4205a6:	cmp    ecx,eax
  4205a8:	sbb    DWORD PTR [edi],ebp
  4205aa:	(bad)  
  4205ac:	cmp    DWORD PTR [edx-0x149147ce],edx
  4205b2:	xor    cl,al
  4205b4:	call   0x66f3a509
  4205b9:	das    
  4205ba:	ss pop edx
  4205bc:	adc    bh,BYTE PTR [edx]
  4205be:	aaa    
  4205bf:	dec    ebx
  4205c0:	dec    ebp
  4205c1:	(bad)  
  4205c2:	pop    ss
  4205c3:	pop    edx
  4205c4:	mov    esi,0xa1f0a2b6
  4205c9:	mov    cs,WORD PTR [edx]
  4205cb:	(bad)  
  4205cc:	jmp    0x334b:0x97454b31
  4205d3:	enter  0xcaac,0x21
  4205d7:	gs pop eax
  4205d9:	cmp    al,0xc5
  4205db:	lods   eax,DWORD PTR ds:[esi]
  4205dc:	dec    ch
  4205de:	out    0xfb,al
  4205e0:	adc    bl,BYTE PTR [edx-0x8]
  4205e3:	aad    0x29
  4205e5:	mov    ds:0xf3a6d491,eax
  4205ea:	cmp    ah,BYTE PTR [esi-0x34]
  4205ed:	mov    ch,BYTE PTR [edx]
  4205ef:	xchg   ecx,eax
  4205f0:	fwait
  4205f1:	leave  
  4205f2:	test   al,0x10
  4205f4:	fcmovbe st,st(7)
  4205f6:	pop    ss
  4205f7:	push   cs
  4205f8:	lock lds esi,FWORD PTR [esp+eax*8]
  4205fc:	stc    
  4205fd:	out    dx,al
  4205fe:	xchg   edx,eax
  4205ff:	add    bl,BYTE PTR [ebx+esi*4]
  420602:	cli    
  420603:	scas   eax,DWORD PTR es:[edi]
  420604:	lea    ebp,[ecx-0x45ef51b6]
  42060a:	add    DWORD PTR [edx],ecx
  42060c:	aaa    
  42060d:	inc    ebp
  42060e:	sub    BYTE PTR [edi+0x3f1740c8],0x98
  420615:	test   DWORD PTR [edx+0x20],ebp
  420618:	out    dx,al
  420619:	popf   
  42061a:	push   cs
  42061b:	or     eax,0x28312247
  420620:	sub    al,0x69
  420622:	inc    edi
  420623:	add    edi,DWORD PTR [eax]
  420625:	inc    ebx
  420626:	push   ebp
  420627:	ret    0x69f1
  42062a:	fild   QWORD PTR [ecx+0x21]
  42062d:	out    dx,eax
  42062e:	sti    
  42062f:	enter  0xcad1,0xda
  420633:	mov    ch,0xe8
  420635:	xor    ecx,ecx
  420637:	stc    
  420638:	xor    al,0x2c
  42063a:	cmp    ah,BYTE PTR [eax+edi*4]
  42063d:	xor    eax,0x3edbb4e2
  420642:	push   esi
  420643:	mov    bh,BYTE PTR [ecx]
  420645:	jl     0x420676
  420647:	sbb    dl,ch
  420649:	neg    BYTE PTR [ebx]
  42064b:	push   edi
  42064c:	cmp    DWORD PTR [ecx-0x1c0480b6],edi
  420652:	mov    esi,0x1d8c4e28
  420657:	cmp    bl,BYTE PTR [edx]
  420659:	sub    ah,BYTE PTR [eax]
  42065b:	clc    
  42065c:	mov    dh,0xde
  42065e:	loop   0x42069d
  420660:	std    
  420661:	push   ss
  420662:	mov    ss,WORD PTR [ebx+0x38]
  420665:	call   0x9eb0c1b3
  42066a:	call   0x92d5:0x669a17ec
  420671:	add    DWORD PTR [eax-0x65dc2e7e],0xffffffd0
  420678:	inc    DWORD PTR [edx-0x4b0db8f]
  42067e:	out    dx,eax
  42067f:	jo     0x42064c
  420681:	mov    DWORD PTR [edi+0x3e554105],ecx
  420687:	dec    eax
  420688:	dec    edx
  420689:	sub    eax,0xe9c8dac1
  42068e:	dec    esp
  42068f:	lods   eax,DWORD PTR ds:[esi]
  420690:	and    DWORD PTR [ebx-0x25f18384],0x3ba79dd3
  42069a:	sar    DWORD PTR [ecx+0x6f639973],1
  4206a0:	inc    ecx
  4206a1:	inc    eax
  4206a2:	retf   0x202c
  4206a5:	cmp    ah,BYTE PTR [edi+esi*4+0x12768a13]
  4206ac:	sbb    al,0x36
  4206ae:	bnd jo 0x4206d9
  4206b1:	xchg   ecx,eax
  4206b2:	outs   dx,DWORD PTR ds:[esi]
  4206b3:	dec    edi
  4206b4:	cmc    
  4206b5:	test   BYTE PTR [edx+0x7d],bh
  4206b8:	es out dx,eax
  4206ba:	and    BYTE PTR [ebp-0x205971f7],cl
  4206c0:	or     eax,0xf754d175
  4206c5:	push   eax
  4206c6:	mov    edx,0x2a8dc2c2
  4206cb:	inc    edi
  4206cc:	inc    esp
  4206cd:	mov    WORD PTR [ebx],ds
  4206cf:	frstor [esi]
  4206d1:	sbb    al,0x3b
  4206d3:	cwde   
  4206d4:	das    
  4206d5:	or     eax,DWORD PTR [ebp+0x3c]
  4206d8:	lods   al,BYTE PTR ds:[esi]
  4206d9:	scas   al,BYTE PTR es:[edi]
  4206da:	rcl    DWORD PTR [esi-0x43ebb866],cl
  4206e0:	jne    0x4206ac
  4206e2:	adc    BYTE PTR ss:0x1c39d4ea,dh
  4206e9:	sar    BYTE PTR [edi],cl
  4206eb:	sbb    BYTE PTR [ebx+0x38eb35fe],bl
  4206f1:	cmp    al,al
  4206f3:	mov    cl,0xf
  4206f5:	gs mov ecx,0xa45a1a4d
  4206fb:	in     al,0x40
  4206fd:	add    al,0x4a
  4206ff:	sar    dl,cl
  420701:	scas   eax,DWORD PTR es:[edi]
  420702:	add    ebp,DWORD PTR ds:0x757a86f5
  420708:	sbb    ebx,esi
  42070a:	test   BYTE PTR [esi+0x1f28472c],cl
  420710:	push   esp
  420711:	imul   edi,DWORD PTR [eax+esi*4-0x4ab14384],0x39
  420719:	(bad)
  42071d:	jae    0x420799
  42071f:	xor    dh,BYTE PTR [edx+esi*8-0x58]
  420723:	fsubr  st(3),st
  420725:	aam    0xc8
  420727:	push   0xb83b1352
  42072c:	aad    0x86
  42072e:	retf   
  42072f:	call   0x46f9:0x6872b46f
  420736:	popf   
  420737:	inc    edx
  420738:	inc    ebx
  420739:	dec    ebx
  42073a:	xor    al,0xc8
  42073c:	mov    ah,0x1a
  42073e:	popf   
  42073f:	test   DWORD PTR [eax+0x54af8720],ebx
  420745:	dec    esi
  420746:	xlat   BYTE PTR ds:[ebx]
  420747:	sub    al,0x21
  420749:	int3   
  42074a:	fs call 0x6d4dad67
  420750:	outs   dx,BYTE PTR ds:[esi]
  420751:	std    
  420752:	pop    eax
  420753:	imul   ebp,DWORD PTR [eax],0xa6b3c12d
  420759:	nop
  42075a:	pushf  
  42075b:	add    cl,BYTE PTR [eax]
  42075d:	dec    ebp
  42075e:	inc    edi
  42075f:	addr16 dec eax
  420761:	imul   ecx,DWORD PTR [esi-0x237c02d9],0x16
  420768:	rcr    DWORD PTR ds:0x850dcbcc,0x5a
  42076f:	lds    edi,FWORD PTR [eax+0x1f]
  420772:	stc    
  420773:	sti    
  420774:	in     al,dx
  420775:	dec    esp
  420776:	xor    eax,edi
  420778:	sbb    eax,0x9803ff29
  42077d:	leave  
  42077e:	shr    DWORD PTR [eax+ebp*2+0x13e12ced],1
  420785:	inc    ecx
  420786:	je     0x4207c8
  420788:	push   ss
  420789:	push   0x47
  42078b:	rcl    BYTE PTR [eax+0x3c50c708],0x3c
  420792:	fnstsw WORD PTR [edx]
  420794:	sbb    bl,bl
  420796:	and    bh,BYTE PTR [ebx+0xea4aa81]
  42079c:	dec    esp
  42079d:	out    dx,al
  42079e:	mov    bl,0xfb
  4207a0:	test   al,0x22
  4207a2:	sub    DWORD PTR [ebp+edx*2+0x381625c6],0xffffffcc
  4207aa:	in     al,dx
  4207ab:	scas   eax,DWORD PTR es:[edi]
  4207ac:	cmp    al,0x56
  4207ae:	call   0xc76ce83f
  4207b3:	adc    DWORD PTR [esi-0x76],0xa4f1ff2
  4207ba:	fdiv   DWORD PTR [ebx]
  4207bc:	out    dx,al
  4207bd:	push   es
  4207be:	loopne 0x420746
  4207c0:	dec    eax
  4207c1:	xor    edx,DWORD PTR [ecx]
  4207c3:	mov    edx,0xbb3bb4b0
  4207c8:	pop    ecx
  4207c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207ca:	adc    ebp,DWORD PTR [edi-0xe]
  4207cd:	pop    ds
  4207ce:	daa    
  4207cf:	scas   al,BYTE PTR es:[edi]
  4207d0:	addr16 jae 0x42076b
  4207d3:	and    DWORD PTR [esi],esp
  4207d5:	cwde   
  4207d6:	pop    edx
  4207d7:	iret   
  4207d8:	dec    esi
  4207d9:	cmp    eax,0x8d08dea3
  4207de:	mov    ebp,0xc3e85276
  4207e3:	xor    BYTE PTR [ebp-0x31],bh
  4207e6:	les    edx,FWORD PTR ss:[ebx-0x54]
  4207ea:	sub    al,0x9f
  4207ec:	adc    bh,dh
  4207ee:	sbb    esi,DWORD PTR [edx-0x50dbadef]
  4207f4:	dec    edi
  4207f5:	aam    0x5b
  4207f7:	jo     0x42082e
  4207f9:	frstor [edx+0x8]
  4207fc:	nop
  4207fd:	into   
  4207fe:	ds xchg esp,eax
  420800:	mov    cl,BYTE PTR cs:[ecx]
  420803:	loope  0x4207dd
  420805:	out    0x7a,al
  420807:	loop   0x4207b6
  420809:	imul   ebp,DWORD PTR cs:[ebx+0x44],0x3579bc4a
  420811:	jmp    0x420850
  420813:	cmp    BYTE PTR [ecx-0x7076675f],bh
  420819:	in     al,dx
  42081a:	mov    ah,BYTE PTR [esi]
  42081c:	inc    esp
  42081d:	mov    ebp,0x8f499bb4
  420822:	add    al,0x57
  420824:	dec    esp
  420825:	inc    eax
  420826:	out    dx,al
  420827:	dec    esp
  420828:	test   eax,0xfffb928e
  42082d:	pop    eax
  42082e:	adc    eax,0x9a8a3edd
  420833:	sar    BYTE PTR [edx],1
  420835:	test   eax,0xd4c42faf
  42083a:	xchg   esp,eax
  42083b:	int    0x93
  42083d:	mov    esi,0x9ce1984e
  420842:	gs jno 0x4207dd
  420845:	sbb    cl,cl
  420847:	cli    
  420848:	aad    0x14
  42084a:	cmp    ch,BYTE PTR [eiz*8+0x33b0327b]
  420851:	jge    0x4208ab
  420853:	push   edx
  420854:	mov    ch,0xff
  420856:	rcl    DWORD PTR [eax],1
  420858:	cmp    al,0xf8
  42085a:	xor    BYTE PTR [eax-0x42],dl
  42085d:	cmp    dl,ch
  42085f:	inc    esi
  420860:	pop    ds
  420861:	lea    edi,[edx]
  420863:	pushf  
  420864:	cmp    ch,ch
  420866:	ficom  DWORD PTR [eax-0x17cc8929]
  42086c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42086d:	int    0x16
  42086f:	ds iret 
  420871:	adc    DWORD PTR [eax-0x5b],eax
  420874:	adc    esi,eax
  420876:	fcomp  DWORD PTR [ebp-0x26]
  420879:	dec    ecx
  42087a:	pop    eax
  42087b:	mov    DWORD PTR [ebx+0x36],eax
  42087e:	xor    BYTE PTR [eax+0x3d2bee49],bl
  420884:	pop    eax
  420885:	les    edi,FWORD PTR [edi+0xc5aeae]
  42088b:	or     edx,DWORD PTR [eax]
  42088d:	(bad)  
  42088f:	mov    dh,BYTE PTR [edi-0x51]
  420892:	out    0x15,al
  420894:	mov    esp,0x3878a14
  420899:	test   al,0xba
  42089b:	and    DWORD PTR [edx],ebx
  42089d:	xchg   cl,dl
  42089f:	jl     0x4208ba
  4208a1:	mov    cl,BYTE PTR [ebx+0xf]
  4208a4:	stos   DWORD PTR es:[edi],eax
  4208a5:	jp     0x420856
  4208a7:	in     al,dx
  4208a8:	iret   
  4208a9:	pusha  
  4208aa:	ins    BYTE PTR es:[edi],dx
  4208ab:	mov    dl,0x78
  4208ad:	pop    es
  4208ae:	and    DWORD PTR [eax-0xf73d783],esi
  4208b4:	lds    ebx,FWORD PTR [edx+0x4b]
  4208b7:	inc    ecx
  4208b8:	cmp    ah,al
  4208ba:	aam    0xa9
  4208bc:	mov    edx,edx
  4208be:	imul   esi,ebx,0x15
  4208c1:	(bad)  
  4208c2:	jns    0x4208fa
  4208c4:	cwd    
  4208c6:	(bad)  
  4208c7:	sar    DWORD PTR [ebp+0x61],cl
  4208ca:	dec    eax
  4208cb:	jb     0x4208d8
  4208cd:	mov    BYTE PTR [edx+0x2ce1af07],cl
  4208d3:	scas   al,BYTE PTR es:[edi]
  4208d4:	inc    edi
  4208d5:	jns    0x42090e
  4208d7:	mov    eax,0x53f3d0ee
  4208dc:	sbb    BYTE PTR [ebx],al
  4208de:	out    dx,eax
  4208df:	mov    cl,0xbc
  4208e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208e2:	sub    DWORD PTR [edi+0x2dd1ad48],esi
  4208e8:	iret   
  4208e9:	mov    al,0x8c
  4208eb:	jl     0x420875
  4208ed:	inc    eax
  4208ee:	popa   
  4208ef:	mov    dh,0x62
  4208f1:	out    0xd2,al
  4208f3:	inc    BYTE PTR [edi]
  4208f5:	fs dec ebx
  4208f7:	mov    eax,0xabff492
  4208fc:	xchg   esp,eax
  4208fd:	jnp    0x4208fc
  4208ff:	call   0xc4b68f26
  420904:	mov    edx,0x8edc2be7
  420909:	xchg   ebx,eax
  42090a:	dec    ebx
  42090b:	pop    edx
  42090c:	int    0xbe
  42090e:	jle    0x4208cf
  420910:	pop    ss
  420911:	retf   0xbf19
  420914:	add    BYTE PTR [ebx+ebp*4],0xab
  420918:	rol    cl,0x6a
  42091b:	stos   BYTE PTR es:[edi],al
  42091c:	sbb    DWORD PTR [ecx-0x66ddce66],ecx
  420922:	(bad)
  420925:	cmp    al,0x1a
  420927:	mov    ds,WORD PTR [ecx-0x2e]
  42092a:	mov    eax,0x3f329b73
  42092f:	adc    al,0x5c
  420931:	jnp    0x420944
  420933:	add    DWORD PTR [ebx+0x18f879af],0xe287764
  42093d:	cmp    cl,bl
  42093f:	and    al,0xb7
  420941:	jae    0x4209ac
  420943:	xor    ebx,ecx
  420945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420946:	and    eax,0xca840e05
  42094b:	mov    ds:0x1d792735,eax
  420950:	jbe    0x4209c6
  420952:	xor    ebp,eax
  420954:	cdq    
  420955:	sbb    DWORD PTR ds:0xf828b89c,0x9777dae
  42095f:	ret    0x7a0e
  420962:	test   BYTE PTR [ecx],dl
  420964:	mov    DWORD PTR [eiz*2-0x699b5a94],edi
  42096b:	jo     0x4209d8
  42096d:	out    0x9c,al
  42096f:	mov    eax,ds:0x68a68cfb
  420974:	test   al,0x73
  420976:	cs sar edx,cl
  420979:	loopne 0x4209ba
  42097b:	clc    
  42097c:	xlat   BYTE PTR ds:[ebx]
  42097d:	cmp    eax,0xcb683380
  420982:	ins    BYTE PTR es:[edi],dx
  420983:	mov    ch,0xb1
  420985:	repz call 0x8d7c1a47
  42098b:	mov    ebx,0x5a9b737
  420990:	push   cs
  420991:	xor    BYTE PTR [edx+0x1a8a7fe5],bh
  420997:	ins    DWORD PTR es:[edi],dx
  420998:	cmp    ah,dh
  42099a:	push   eax
  42099b:	push   ss
  42099c:	cdq    
  42099d:	jno    0x4209c6
  42099f:	lods   al,BYTE PTR ds:[esi]
  4209a0:	or     BYTE PTR [edx-0x7c],ch
  4209a3:	fdiv   QWORD PTR [eax+0x5e]
  4209a6:	fild   DWORD PTR [ebp-0x39f9d83f]
  4209ac:	pop    ds
  4209ad:	mov    ?,WORD PTR [edx]
  4209af:	ins    DWORD PTR es:[edi],dx
  4209b0:	in     al,0x63
  4209b2:	xlat   BYTE PTR ds:[ebx]
  4209b3:	ds push ebp
  4209b5:	inc    edx
  4209b6:	sub    DWORD PTR [edi],ecx
  4209b8:	dec    esp
  4209b9:	addps  xmm7,XMMWORD PTR [edx-0x7430916e]
  4209c0:	xchg   ecx,eax
  4209c1:	call   0xd58f1d03
  4209c6:	int3   
  4209c7:	cmp    DWORD PTR [eax-0x5a],ebp
  4209ca:	sbb    DWORD PTR [esi+0x2c6d79ad],ebp
  4209d0:	inc    edx
  4209d1:	pop    ebp
  4209d2:	adc    BYTE PTR [edx-0x13f38af7],bh
  4209d8:	inc    esi
  4209d9:	mov    dl,ah
  4209db:	dec    ebp
  4209dc:	sbb    BYTE PTR [ebx+0x5c68bacf],al
  4209e2:	xor    al,0xef
  4209e4:	sub    eax,0xc24411ed
  4209e9:	adc    ecx,DWORD PTR [edx+0x1d]
  4209ec:	or     al,BYTE PTR [ebp+0x630c3008]
  4209f2:	jp     0x420984
  4209f4:	(bad)  
  4209f5:	adc    al,0x3f
  4209f7:	adc    BYTE PTR ds:0xb14f888c,dl
  4209fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209fe:	aaa    
  4209ff:	clc    
  420a00:	pop    es
  420a01:	scas   al,BYTE PTR es:[edi]
  420a02:	jae    0x420a23
  420a04:	or     BYTE PTR [edx+0x53],dl
  420a07:	mov    ecx,0xe9f52883
  420a0c:	push   ecx
  420a0d:	mov    cl,0xbb
  420a0f:	outs   dx,DWORD PTR ds:[esi]
  420a10:	sub    BYTE PTR [ecx+0x2b],bh
  420a13:	ror    cl,0x7a
  420a16:	aaa    
  420a17:	loop   0x420a87
  420a19:	push   edx
  420a1a:	mov    DWORD PTR [edx-0x5bc57989],edi
  420a20:	aas    
  420a21:	ret    0xad2b
  420a24:	sub    DWORD PTR [eax+0x2c],edi
  420a27:	pop    esi
  420a28:	mov    eax,0x544431fe
  420a2d:	xchg   edi,eax
  420a2e:	dec    esi
  420a2f:	ror    DWORD PTR [eax+0x3c7ba8c],1
  420a35:	jbe    0x420a12
  420a37:	hlt    
  420a38:	(bad)  
  420a39:	and    eax,0x82722cee
  420a3e:	ficom  DWORD PTR [edi+0xaa5de52]
  420a44:	inc    ecx
  420a45:	test   BYTE PTR [edx],bh
  420a47:	stc    
  420a48:	imul   eax,ebp,0xf3f9c675
  420a4e:	dec    ecx
  420a4f:	sbb    bl,ah
  420a51:	scas   eax,DWORD PTR es:[edi]
  420a52:	mov    esi,DWORD PTR [esi+0x163c8058]
  420a58:	ins    BYTE PTR es:[edi],dx
  420a59:	mov    ch,0xda
  420a5b:	sbb    BYTE PTR [edx+0x1d9dbe46],bl
  420a61:	mov    edx,0xc20bd49c
  420a66:	cmp    BYTE PTR [ebx+0x36fe130c],dh
  420a6c:	mov    BYTE PTR [ebx-0x7da2537f],ch
  420a72:	sbb    eax,esi
  420a74:	xor    cl,ah
  420a76:	mov    ecx,0xf82aaa2b
  420a7b:	imul   ecx,DWORD PTR [ebx-0x19],0x8cc7acb7
  420a82:	xchg   esi,eax
  420a83:	jne    0x420ac4
  420a85:	jl     0x420a95
  420a87:	mov    esp,0xe4ea94b6
  420a8c:	sbb    edi,DWORD PTR [esi+0x2c]
  420a8f:	pop    ecx
  420a90:	mov    ebx,0x5a403806
  420a95:	call   0x1366:0x5d93822a
  420a9c:	sbb    edx,ecx
  420a9e:	imul   eax,DWORD PTR [edi],0xfba0b981
  420aa4:	imul   esi,DWORD PTR [ebx+0x9],0x7a
  420aa8:	ins    BYTE PTR es:[edi],dx
  420aa9:	adc    edx,ebp
  420aab:	sub    eax,0xa035c099
  420ab0:	adc    cl,dl
  420ab2:	mov    WORD PTR [ecx+ebx*4],cs
  420ab5:	cmp    BYTE PTR [ebp+0x26],ch
  420ab8:	aad    0x4d
  420aba:	mov    bl,0x25
  420abc:	jo     0x420ad2
  420abe:	or     dh,BYTE PTR [ecx+0x703b94b8]
  420ac4:	outs   dx,BYTE PTR ds:[esi]
  420ac5:	dec    esi
  420ac6:	out    dx,al
  420ac7:	pushf  
  420ac8:	mov    eax,0xefbad8fe
  420acd:	push   0x6648da1e
  420ad2:	cmp    DWORD PTR [eax+0x2c3125dc],edi
  420ad8:	mov    BYTE PTR [edi+eax*4],bh
  420adb:	outs   dx,DWORD PTR ds:[esi]
  420adc:	add    al,0x95
  420ade:	fidiv  DWORD PTR [esi-0x4ca0febb]
  420ae4:	rcr    BYTE PTR [ecx+ecx*8+0x18],cl
  420ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ae9:	sbb    dl,0xf5
  420aec:	sub    al,0x5b
  420aee:	fld    TBYTE PTR [edi+0xb]
  420af1:	push   ecx
  420af2:	dec    ecx
  420af3:	js     0x420ad6
  420af5:	hlt    
  420af6:	sbb    ch,BYTE PTR [eax+0x68]
  420af9:	mul    DWORD PTR [edi]
  420afb:	mov    edx,0x43c78148
  420b00:	or     al,0x5a
  420b02:	mov    esi,0xa5a9e3ca
  420b07:	push   cs
  420b08:	push   eax
  420b09:	or     DWORD PTR [esi-0x37],ecx
  420b0c:	push   ecx
  420b0d:	retf   
  420b0e:	in     al,dx
  420b0f:	mov    ah,dl
  420b11:	jmp    0x420b51
  420b13:	jo     0x420b76
  420b15:	pusha  
  420b16:	mov    bh,0x6
  420b18:	adc    eax,0xca15c0a
  420b1d:	mov    ebp,0x369259ab
  420b22:	scas   al,BYTE PTR es:[edi]
  420b23:	int3   
  420b24:	adc    al,0x32
  420b26:	fnsave [ebp+0x38]
  420b29:	lods   al,BYTE PTR cs:[esi]
  420b2b:	icebp  
  420b2c:	xchg   edi,eax
  420b2d:	popa   
  420b2e:	daa    
  420b2f:	jbe    0x420ae9
  420b31:	es dec edx
  420b33:	fcom   st(3)
  420b35:	test   al,0xca
  420b37:	xor    DWORD PTR [ecx],ebx
  420b39:	sub    BYTE PTR [eax-0x5956c11],0x5
  420b40:	or     al,0xba
  420b42:	cmp    cl,BYTE PTR [esi+edi*2-0x76]
  420b46:	push   ebx
  420b47:	mul    BYTE PTR [ebx-0x31447bd0]
  420b4d:	xchg   BYTE PTR [edx-0x5d],cl
  420b50:	scas   al,BYTE PTR es:[edi]
  420b51:	sub    al,0xdb
  420b53:	inc    edx
  420b54:	mov    esi,0x18b93866
  420b59:	push   0xf02b3842
  420b5e:	std    
  420b5f:	std    
  420b60:	mov    BYTE PTR [eax+0xb],cl
  420b63:	mov    bh,BYTE PTR [esi+ecx*4]
  420b66:	xor    eax,0x7584c816
  420b6b:	mov    edx,0xd991921c
  420b70:	push   cs
  420b71:	or     bh,BYTE PTR [ebx-0x76]
  420b74:	push   cs
  420b75:	adc    DWORD PTR [ecx-0x38],esi
  420b78:	sbb    DWORD PTR [esi-0x79],ebp
  420b7b:	pop    esp
  420b7c:	(bad)  
  420b7d:	sub    eax,0xae38f7fa
  420b82:	out    0xb9,eax
  420b84:	ds popf 
  420b86:	dec    edx
  420b87:	mov    dl,0xeb
  420b89:	adc    eax,0x4eab584e
  420b8e:	ficomp WORD PTR [eax]
  420b90:	dec    ebp
  420b91:	aad    0xb7
  420b93:	pop    edx
  420b94:	or     al,0x8b
  420b96:	dec    edx
  420b97:	jl     0x420bdd
  420b99:	hlt    
  420b9a:	cli    
  420b9b:	and    BYTE PTR [ebx+esi*4+0x9],dl
  420b9f:	dec    esp
  420ba0:	sbb    dl,dl
  420ba2:	fs stos BYTE PTR es:[edi],al
  420ba4:	push   DWORD PTR [edi-0x1697438e]
  420baa:	daa    
  420bab:	mov    ch,0x86
  420bad:	jle    0x420bd5
  420baf:	sahf   
  420bb0:	pminsw mm2,QWORD PTR [esi+0x64]
  420bb4:	rcr    DWORD PTR [edx-0x50],0x12
  420bb8:	inc    ecx
  420bb9:	enter  0xbf73,0x42
  420bbd:	or     dl,0xe1
  420bc0:	cmp    DWORD PTR [esi+0x1b12336d],ebp
  420bc6:	sbb    BYTE PTR [ecx+eiz*1-0x7d],ch
  420bca:	ret    0x7b65
  420bcd:	shr    bl,1
  420bcf:	scas   al,BYTE PTR es:[edi]
  420bd0:	xchg   ebp,eax
  420bd1:	scas   eax,DWORD PTR es:[edi]
  420bd2:	stos   DWORD PTR es:[edi],eax
  420bd3:	mov    esp,0x581a854a
  420bd8:	mov    edi,ebp
  420bda:	xchg   ebp,eax
  420bdb:	push   eax
  420bdc:	sbb    bh,BYTE PTR [edx-0x68]
  420bdf:	add    BYTE PTR [ebx],al
  420be1:	leave  
  420be2:	xor    BYTE PTR [edx-0x44419578],ah
  420be8:	call   0x24aa:0x16a5490e
  420bef:	out    0x22,al
  420bf1:	push   es
  420bf2:	sbb    BYTE PTR [edi+0x3e5ea2c6],0xcf
  420bf9:	test   DWORD PTR [edx-0x2c2df4aa],ebx
  420bff:	or     al,0xc
  420c01:	cmp    dh,BYTE PTR [eax+0x225b2990]
  420c07:	mov    ch,0x21
  420c09:	inc    ecx
  420c0a:	cmp    al,0x7d
  420c0c:	dec    eax
  420c0d:	mov    ch,dh
  420c0f:	mov    bl,0xcf
  420c11:	mov    cl,0x1
  420c13:	cmp    BYTE PTR [edi],cl
  420c15:	cli    
  420c16:	cmp    eax,0xc9cbff95
  420c1b:	mov    edx,0x894b36cb
  420c20:	pop    ebp
  420c21:	jnp    0x420c3d
  420c23:	xchg   ebx,eax
  420c24:	jecxz  0x420c2c
  420c26:	or     eax,0x1e3a0eae
  420c2b:	inc    edx
  420c2c:	inc    esi
  420c2d:	jbe    0x420c6f
  420c2f:	std    
  420c30:	nop
  420c31:	inc    esp
  420c32:	or     esp,esi
  420c34:	mov    ecx,0x36f73a83
  420c39:	add    eax,0x9bcb1740
  420c3e:	scas   al,BYTE PTR es:[edi]
  420c3f:	jg     0x420c56
  420c41:	enter  0x23a1,0x30
  420c45:	jo     0x420c0e
  420c47:	mov    bh,0x3f
  420c49:	xchg   BYTE PTR [edx],cl
  420c4b:	mov    eax,0x12f5b641
  420c50:	mov    ebx,0x73483375
  420c55:	fsub   QWORD PTR [esp+eax*4-0x11b27eb8]
  420c5c:	mov    ds:0x2ff1d769,al
  420c61:	mov    WORD PTR [edx+0xb],fs
  420c64:	aad    0xe5
  420c66:	dec    eax
  420c67:	clc    
  420c68:	cwde   
  420c69:	push   0x65
  420c6b:	cdq    
  420c6c:	enter  0x576,0xae
  420c70:	rcl    esp,1
  420c72:	push   eax
  420c73:	pop    ebx
  420c74:	pminub mm0,mm2
  420c77:	(bad)  
  420c78:	cli    
  420c79:	mov    dl,0xf5
  420c7b:	popf   
  420c7c:	call   0x3dcb:0x8f2a4746
  420c83:	and    BYTE PTR [esi+edi*8],dl
  420c86:	sbb    ebx,DWORD PTR [ebp-0x7284331e]
  420c8c:	sbb    dl,cl
  420c8e:	jl     0x420cc1
  420c90:	or     DWORD PTR gs:[ecx],edx
  420c93:	mov    cl,0x98
  420c95:	adc    al,BYTE PTR [ebp-0x3329d31f]
  420c9b:	adc    ah,bh
  420c9d:	mov    esp,edx
  420c9f:	clc    
  420ca0:	adc    ebx,DWORD PTR [edx-0x69]
  420ca3:	or     BYTE PTR [esp+0x2c],bh
  420ca7:	push   ebp
  420ca8:	add    ecx,esp
  420caa:	jecxz  0x420c78
  420cac:	sbb    BYTE PTR [bp+si+0x490d],0xeb
  420cb2:	mov    dl,0xc0
  420cb4:	inc    ebp
  420cb5:	push   edx
  420cb6:	push   ds
  420cb7:	push   ds
  420cb8:	adc    BYTE PTR [ebp-0x22f14f3c],dl
  420cbe:	mov    ds:0xf881d0b1,eax
  420cc3:	xchg   ebx,eax
  420cc4:	adc    BYTE PTR [ebx-0x60bfecf6],al
  420cca:	aas    
  420ccb:	jnp    0x420d35
  420ccd:	ins    DWORD PTR es:[edi],dx
  420cce:	ss js  0x420cf8
  420cd1:	hlt    
  420cd2:	add    BYTE PTR [ecx+0x68],bl
  420cd5:	imul   edi,DWORD PTR [eax-0x45],0xffffff9b
  420cd9:	xchg   esi,eax
  420cda:	nop
  420cdb:	iret   
  420cdc:	addr16 popf 
  420cde:	inc    esi
  420cdf:	das    
  420ce0:	sub    dl,BYTE PTR [ebp+0x62]
  420ce3:	push   esi
  420ce4:	xor    DWORD PTR ss:[edx],0x2198e0e8
  420ceb:	jl     0x420d04
  420ced:	mov    DWORD PTR [edx],ecx
  420cef:	sbb    DWORD PTR [edi-0x6d],ecx
  420cf2:	leave  
  420cf3:	mov    WORD PTR [ebx],?
  420cf5:	xor    eax,0xa51b483b
  420cfa:	stos   BYTE PTR es:[edi],al
  420cfb:	fistp  WORD PTR [eax]
  420cfd:	dec    edx
  420cfe:	scas   al,BYTE PTR es:[di]
  420d00:	out    0xbf,al
  420d02:	fiadd  DWORD PTR [ecx]
  420d04:	adc    eax,0x3e3a070a
  420d09:	scas   al,BYTE PTR es:[edi]
  420d0a:	fwait
  420d0b:	xchg   ebx,eax
  420d0c:	pop    ebp
  420d0d:	xchg   edi,eax
  420d0e:	cld    
  420d0f:	mov    bh,0x92
  420d11:	mov    ebx,DWORD PTR [edx-0x3f84be84]
  420d17:	pop    esp
  420d18:	retf   
  420d19:	dec    esp
  420d1a:	cmp    al,0xd8
  420d1c:	jo     0x420cc1
  420d1e:	gs (bad) 
  420d20:	cwde   
  420d21:	add    DWORD PTR [edx],eax
  420d23:	lods   eax,DWORD PTR ds:[esi]
  420d24:	add    al,0x7c
  420d26:	and    al,0xd6
  420d28:	loope  0x420d64
  420d2a:	mov    bl,0x8d
  420d2c:	jl     0x420cfd
  420d2e:	xchg   esi,eax
  420d2f:	lods   eax,DWORD PTR ds:[esi]
  420d30:	fwait
  420d31:	sbb    BYTE PTR [edi],dl
  420d33:	lahf   
  420d34:	or     BYTE PTR [ecx+0x1748b714],dl
  420d3a:	fs iret 
  420d3c:	push   cs
  420d3d:	sbb    bl,dl
  420d3f:	adc    bl,dl
  420d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d42:	push   eax
  420d43:	push   cs
  420d44:	mov    ebp,?
  420d46:	mov    ?,WORD PTR [edx+edx*8+0x5b7efcd8]
  420d4d:	loopne 0x420dc2
  420d4f:	neg    BYTE PTR [esi-0x1f1f3974]
  420d55:	sub    bh,BYTE PTR [ecx+0x8]
  420d58:	jl     0x420d5b
  420d5a:	mov    ch,BYTE PTR ds:0xeb5ae952
  420d60:	js     0x420dc7
  420d62:	leave  
  420d63:	mov    ah,0x67
  420d65:	(bad)
  420d68:	sbb    ecx,DWORD PTR [edx+0x66]
  420d6b:	fcomp  DWORD PTR [edx+edi*8-0x53610d19]
  420d72:	cmp    ebx,eax
  420d74:	call   0x92a2f7fe
  420d79:	add    DWORD PTR [eiz*4-0x77a63de1],esi
  420d80:	mov    edi,0xc17c72c0
  420d85:	(bad)  
  420d87:	cmp    bl,ah
  420d89:	mov    bh,BYTE PTR [edx-0x7e05d062]
  420d8f:	and    al,0x1a
  420d91:	scas   al,BYTE PTR es:[edi]
  420d92:	and    cl,bh
  420d94:	adc    ch,BYTE PTR [ebx]
  420d96:	outs   dx,BYTE PTR ds:[esi]
  420d97:	mov    bl,0x81
  420d99:	add    al,0xd5
  420d9b:	aad    0xcc
  420d9d:	(bad)  
  420d9e:	sub    edx,DWORD PTR [edx]
  420da0:	xor    DWORD PTR [edi+0x1b6cc23b],ecx
  420da6:	xor    edx,edx
  420da8:	pop    edi
  420da9:	add    eax,0x18127831
  420dae:	xchg   esp,eax
  420daf:	popf   
  420db0:	mov    eax,0x1bac4f1d
  420db5:	inc    ebp
  420db6:	cld    
  420db7:	sub    ebp,DWORD PTR [edx+ebp*4-0xe3cfe10]
  420dbe:	mov    WORD PTR ds:0xb8f446d8,gs
  420dc4:	add    eax,0xd6814918
  420dc9:	cmp    ah,dl
  420dcb:	dec    edx
  420dcc:	mov    cl,0xe1
  420dce:	xor    BYTE PTR [esi-0xa],dl
  420dd1:	mov    cl,0x37
  420dd3:	and    al,0x8
  420dd5:	pushf  
  420dd6:	dec    edi
  420dd7:	scas   al,BYTE PTR es:[edi]
  420dd8:	jne    0x420e54
  420dda:	icebp  
  420ddb:	scas   eax,DWORD PTR es:[edi]
  420ddc:	adc    eax,0xb256c9ba
  420de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420de2:	mov    DWORD PTR [ebp+0x2c453e57],esp
  420de8:	clc    
  420de9:	add    BYTE PTR [eax+0x4f451dc5],bh
  420def:	inc    eax
  420df0:	std    
  420df1:	rcr    BYTE PTR [edx+esi*4-0x6601529f],0x1a
  420df9:	adc    eax,0xa4e484ad
  420dfe:	or     bh,BYTE PTR [eax-0x4]
  420e01:	sub    DWORD PTR [eax-0x35779c04],0x14
  420e08:	jnp    0x420e1b
  420e0a:	mov    dh,BYTE PTR [eax-0x48]
  420e0d:	loop   0x420e4d
  420e0f:	enter  0xf071,0xb1
  420e13:	leave  
  420e14:	push   0xd1b9f982
  420e19:	popf   
  420e1a:	push   ebx
  420e1b:	stc    
  420e1c:	adc    BYTE PTR [edx-0x5cab509b],ch
  420e22:	cmp    al,0x5f
  420e24:	pop    esp
  420e25:	lss    eax,FWORD PTR [ecx]
  420e28:	pop    esp
  420e29:	stos   BYTE PTR es:[edi],al
  420e2a:	cmp    BYTE PTR [ecx-0x3fc0d97b],al
  420e30:	fidivr WORD PTR [edx+0x39]
  420e33:	sbb    bl,al
  420e35:	lods   eax,DWORD PTR ds:[esi]
  420e36:	scas   al,BYTE PTR es:[edi]
  420e37:	inc    esp
  420e39:	adc    al,0x5c
  420e3b:	xchg   dl,bl
  420e3d:	sbb    DWORD PTR [ecx-0x36],eax
  420e40:	sub    DWORD PTR [ebp+0x32140d35],0xffffffbd
  420e47:	ja     0x420e9c
  420e49:	xchg   edi,eax
  420e4a:	(bad)  
  420e4d:	fidiv  DWORD PTR [eax+0x68]
  420e50:	mov    bh,0xd4
  420e52:	sub    ebx,esp
  420e54:	xor    edi,DWORD PTR [eax-0x178399ab]
  420e5a:	fwait
  420e5b:	rcl    ecx,0x6a
  420e5e:	xor    bl,dh
  420e60:	popa   
  420e61:	jge    0x420e8d
  420e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e64:	ror    BYTE PTR [edi],0xf3
  420e67:	mov    bl,0xda
  420e69:	mov    dl,al
  420e6b:	leave  
  420e6c:	popf   
  420e6d:	or     DWORD PTR [ebx+ebx*4+0x2f],0x8497fc7f
  420e75:	push   ebp
  420e76:	pusha  
  420e77:	int3   
  420e78:	jnp    0x420eb1
  420e7a:	cmp    al,0xb
  420e7c:	jp     0x420e1d
  420e7e:	xor    bh,BYTE PTR [eax-0x8]
  420e81:	add    al,0x37
  420e83:	xchg   esp,eax
  420e84:	pop    esi
  420e85:	ins    DWORD PTR es:[edi],dx
  420e86:	inc    ebp
  420e87:	cmp    DWORD PTR [esi+0x5da72176],0x44966e87
  420e91:	push   cs
  420e92:	imul   esp,DWORD PTR [edx],0x4c
  420e95:	pusha  
  420e96:	add    DWORD PTR [ebx],esi
  420e98:	mov    esi,0x498a8283
  420e9d:	call   0x7b17014a
  420ea2:	cli    
  420ea3:	xchg   ecx,eax
  420ea4:	imul   ebx,DWORD PTR [eax-0x7f8af645],0xffffff86
  420eab:	loopne 0x420ebd
  420ead:	mov    edx,0x18dbe9fb
  420eb2:	add    eax,0x6fc1f078
  420eb7:	sar    DWORD PTR [eax+0x5e103a8c],1
  420ebd:	rcr    BYTE PTR [eax],cl
  420ebf:	mov    eax,ds:0xffa19c51
  420ec4:	inc    DWORD PTR [ebp-0x42727583]
  420eca:	bound  ecx,QWORD PTR [ebx]
  420ecc:	arpl   WORD PTR [ebp-0x7d280fec],di
  420ed2:	ror    DWORD PTR [esi+0x3f22e48c],cl
  420ed8:	sub    eax,0xc8d58082
  420edd:	cmc    
  420ede:	stos   BYTE PTR es:[edi],al
  420edf:	mov    ebx,0xe67b0cbd
  420ee4:	(bad)  
  420ee5:	fwait
  420ee6:	mov    edi,?
  420ee8:	push   edx
  420ee9:	icebp  
  420eea:	sbb    al,0x98
  420eec:	js     0x420f1f
  420eee:	mov    DWORD PTR [edx-0x11205745],esi
  420ef4:	pop    eax
  420ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ef6:	mov    ah,0xb7
  420ef8:	add    DWORD PTR [esi-0x34],esi
  420efb:	xor    BYTE PTR [edi],cl
  420efd:	mov    edx,0x80cff706
  420f02:	mov    eax,0xd7311e4
  420f07:	and    ecx,edx
  420f09:	or     BYTE PTR [edx],0x84
  420f0c:	cmp    eax,0xd653f70e
  420f11:	mov    WORD PTR [edi+0x48],es
  420f14:	inc    edx
  420f15:	sbb    DWORD PTR [ecx-0x5],eax
  420f18:	sar    DWORD PTR [ecx],cl
  420f1a:	cmp    al,0xc4
  420f1c:	dec    ecx
  420f1d:	xchg   DWORD PTR [edx],edi
  420f1f:	in     eax,0x30
  420f21:	mov    ds,WORD PTR ds:0xe91ac6ea
  420f27:	xor    BYTE PTR [edi-0x169c22ad],ch
  420f2d:	push   edi
  420f2e:	pop    ds
  420f2f:	scas   al,BYTE PTR es:[edi]
  420f30:	sub    BYTE PTR [ecx],bl
  420f32:	in     eax,0xb0
  420f34:	stc    
  420f35:	xor    eax,0x3a1aae4d
  420f3a:	or     DWORD PTR [edi+0x2f55ae54],0xffffffe3
  420f41:	push   eax
  420f42:	ret    0x38e2
  420f45:	and    al,0xa9
  420f47:	sar    DWORD PTR [edi],cl
  420f49:	cmp    DWORD PTR [edx],ebx
  420f4b:	or     eax,0x6a3dc171
  420f50:	adc    al,0x8
  420f52:	loope  0x420f10
  420f54:	mov    esp,0x3d71cd0a
  420f59:	mov    WORD PTR [edx-0x64109af9],fs
  420f5f:	popf   
  420f60:	jo     0x420eeb
  420f62:	mov    edx,0x9c2c573d
  420f67:	shl    BYTE PTR [edi+0x75],cl
  420f6a:	mov    cl,0xc2
  420f6c:	jne    0x420ef3
  420f6e:	pop    edx
  420f6f:	leave  
  420f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f71:	gs mov edx,0xa9a26c0a
  420f77:	xor    al,0x1
  420f79:	sti    
  420f7a:	aas    
  420f7b:	and    BYTE PTR [ecx-0xd],bl
  420f7e:	push   esp
  420f7f:	push   es
  420f80:	sbb    bh,BYTE PTR [ecx+0x3f]
  420f83:	sbb    BYTE PTR [edi-0x4759fcf3],bh
  420f89:	sbb    BYTE PTR [ecx+edi*4-0x7315a1c6],dh
  420f90:	push   cs
  420f91:	mov    bl,BYTE PTR [ebx+0x7b]
  420f94:	push   eax
  420f95:	arpl   WORD PTR [edx-0x435cbd8e],dx
  420f9b:	jbe    0x420fa4
  420f9d:	jl     0x420fc9
  420f9f:	pop    eax
  420fa0:	fadd   DWORD PTR cs:[ebp-0x47]
  420fa4:	push   cs
  420fa5:	jp     0x420f39
  420fa7:	mov    esi,0xe69b3f83
  420fac:	adc    ebx,DWORD PTR [edi]
  420fae:	test   al,0xd4
  420fb0:	loope  0x420f62
  420fb2:	call   0x1bd1:0x64148c43
  420fb9:	fiadd  DWORD PTR [edx]
  420fbb:	pop    edx
  420fbc:	fcomp  st(7)
  420fbe:	int    0xf8
  420fc0:	mov    dh,0x93
  420fc2:	fcmovnu st,st(6)
  420fc4:	mov    ecx,es
  420fc6:	mov    al,ds:0x332107d8
  420fcb:	test   al,0x3f
  420fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fce:	dec    ebp
  420fcf:	lods   al,BYTE PTR ds:[esi]
  420fd0:	mov    dh,0x6c
  420fd2:	xor    BYTE PTR [eax-0x70],bh
  420fd5:	retf   0x6f3a
  420fd8:	push   0x73b581d5
  420fdd:	dec    eax
  420fde:	jl     0x420f84
  420fe0:	retf   0xc80a
  420fe3:	push   es
  420fe4:	cli    
  420fe5:	fnstcw WORD PTR [eax+0x3b]
  420fe8:	adc    eax,0xee2cc480
  420fed:	cli    
  420fee:	out    0x83,eax
  420ff0:	and    BYTE PTR [ecx],cl
  420ff2:	div    BYTE PTR [eax-0x70a4dd12]
  420ff8:	adc    eax,0xaf809cba
  420ffd:	sbb    BYTE PTR [eax+0x511122e0],0x6
  421004:	(bad)  
  421006:	or     ecx,DWORD PTR [edi]
  421008:	push   ecx
  421009:	add    bh,BYTE PTR ds:0xe29a142c
  42100f:	aaa    
  421010:	and    dh,BYTE PTR [eax+0x3a]
  421013:	and    bh,BYTE PTR [ebp-0x735ccfcb]
  421019:	(bad)  
  42101a:	sbb    bh,BYTE PTR ds:0x6f5b43f1
  421020:	sahf   
  421021:	fnstcw WORD PTR [ebx]
  421023:	push   0x3fd75aaf
  421028:	mov    dl,ch
  42102a:	push   esp
  42102b:	mov    dl,0xf8
  42102d:	mul    BYTE PTR [esi+0x2eb3086b]
  421033:	(bad)  
  421034:	mov    dh,0x8e
  421036:	in     al,dx
  421037:	cmp    al,0x15
  421039:	xchg   BYTE PTR [edx+0x74],ah
  42103c:	in     eax,0x3b
  42103e:	push   edx
  42103f:	push   ss
  421040:	cmp    al,0x81
  421042:	dec    edx
  421043:	adc    ch,BYTE PTR [ebp-0x29]
  421046:	mov    bl,0x19
  421048:	adc    al,0xa
  42104a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42104b:	pusha  
  42104c:	fwait
  42104d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42104e:	and    ebx,DWORD PTR [edx]
  421050:	aam    0x0
  421052:	inc    edi
  421053:	std    
  421054:	cwde   
  421055:	mov    edx,0x988fc1ea
  42105a:	out    0x86,al
  42105c:	loop   0x421068
  42105e:	repnz dec edi
  421060:	inc    esp
  421061:	cmp    al,0x66
  421063:	jae    0x421073
  421065:	jl     0x420ff4
  421067:	ret    0x9af8
  42106a:	iret   
  42106b:	mov    eax,0x2fdc670b
  421070:	cmp    al,0xd
  421072:	ja     0x4210de
  421074:	call   0x19206e8
  421079:	test   BYTE PTR [esp+edx*4-0x58],bh
  42107d:	mov    ecx,0x33a5b020
  421082:	cmp    DWORD PTR [esi-0x68],ebp
  421085:	iret   
  421086:	inc    edx
  421087:	inc    esi
  421088:	adc    BYTE PTR [edx],cl
  42108a:	pop    ss
  42108b:	mov    ds:0xefa84afd,al
  421090:	or     esp,edi
  421092:	mov    dh,BYTE PTR [eax+0x21]
  421095:	inc    edi
  421096:	jmp    0xf9c5:0x46a694d0
  42109d:	ds addr16 cmc 
  4210a0:	adc    al,0xea
  4210a2:	push   esp
  4210a3:	stc    
  4210a4:	or     edi,esp
  4210a6:	les    edx,FWORD PTR [edi]
  4210a8:	repz add al,0x79
  4210ab:	sti    
  4210ac:	cmp    al,0xf6
  4210ae:	sub    al,0x6d
  4210b0:	cmc    
  4210b1:	mov    cl,dl
  4210b3:	adc    DWORD PTR ds:0xf2062dea,edx
  4210b9:	ss and ch,ah
  4210bc:	pop    esi
  4210bd:	xchg   esi,eax
  4210be:	stos   DWORD PTR es:[edi],eax
  4210bf:	fst    DWORD PTR [edx-0x5d17f57a]
  4210c5:	sub    DWORD PTR [ecx],esp
  4210c7:	mov    ds,WORD PTR [eax-0x656d0e10]
  4210cd:	mov    dl,cl
  4210cf:	mov    dl,ah
  4210d1:	mov    ?,esp
  4210d3:	pushf  
  4210d4:	lock mov ebp,DWORD PTR [edx-0x2]
  4210d8:	fsub   DWORD PTR [edi-0x3b]
  4210db:	push   es
  4210dc:	mov    esp,0xfb284af1
  4210e1:	push   ebx
  4210e2:	pop    eax
  4210e3:	mov    ds:0xb4b7bed8,al
  4210e8:	popf   
  4210e9:	imul   ebp,edi,0xffffffef
  4210ec:	cs or  eax,0x8c766e16
  4210f2:	rcl    BYTE PTR [esi-0x7cc9d27],cl
  4210f8:	inc    esi
  4210f9:	and    eax,0x86463942
  4210fe:	cli    
  4210ff:	inc    edi
  421100:	scas   eax,DWORD PTR es:[edi]
  421101:	and    DWORD PTR [edx-0x52],ecx
  421104:	inc    ebp
  421105:	or     esp,DWORD PTR [edx]
  421107:	lahf   
  421108:	pop    eax
  421109:	daa    
  42110a:	or     al,0xb4
  42110c:	daa    
  42110d:	inc    ecx
  42110e:	or     al,0x8b
  421110:	or     eax,0x87a39a82
  421115:	mov    dh,0x2c
  421117:	xchg   ecx,eax
  421118:	cld    
  421119:	pop    ss
  42111a:	mov    dh,0x8c
  42111c:	cmp    eax,0x74bc928a
  421121:	push   esp
  421122:	xchg   BYTE PTR [eax-0x74],al
  421125:	xchg   DWORD PTR [edx],ecx
  421127:	and    eax,0xe4d746ae
  42112c:	cmc    
  42112d:	xchg   esi,eax
  42112e:	sub    BYTE PTR [di],bh
  421131:	jne    0x42116c
  421133:	sahf   
  421134:	push   edi
  421135:	mov    ebx,0x12d82f69
  42113a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42113b:	mov    ebx,0x9b6b8023
  421140:	add    eax,0xc74bdc5c
  421145:	mov    al,es:0x2970b88e
  42114b:	lds    esp,FWORD PTR [ecx]
  42114d:	mov    ss,WORD PTR [edi+0x5a855948]
  421153:	ret    0x768d
  421156:	ds cmc 
  421158:	rol    BYTE PTR ds:0xc1197832,1
  42115e:	and    BYTE PTR [edi],dl
  421160:	cmp    BYTE PTR [eax-0x4d],dh
  421163:	mov    ah,0x3
  421165:	(bad)  
  421167:	inc    edi
  421168:	or     al,0x5a
  42116a:	cmp    al,0x42
  42116c:	js     0x421165
  42116e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42116f:	clc    
  421170:	loopne 0x4211db
  421172:	leave  
  421173:	jge    0x4211af
  421175:	ret    0xee3c
  421178:	lahf   
  421179:	mov    WORD PTR [edx],?
  42117b:	inc    esi
  42117c:	hlt    
  42117d:	or     BYTE PTR [esi],dl
  42117f:	(bad)  
  421180:	bound  esp,QWORD PTR [ecx+0x34]
  421183:	pop    eax
  421184:	icebp  
  421185:	pushf  
  421186:	sar    BYTE PTR [esi-0x7deb3602],0x34
  42118d:	dec    eax
  42118e:	ins    BYTE PTR es:[edi],dx
  42118f:	mov    al,0x38
  421191:	fcomp  DWORD PTR [eax]
  421193:	iret   
  421194:	sbb    ebx,edx
  421196:	(bad)  
  421197:	nop
  421198:	sbb    BYTE PTR [ebx-0x374fdcb1],al
  42119e:	sti    
  42119f:	fnstsw WORD PTR [ebx]
  4211a1:	loope  0x4211ef
  4211a3:	(bad)  [edi]
  4211a5:	dec    edi
  4211a6:	pop    es
  4211a7:	or     ebx,DWORD PTR [eax+0x74bb92cc]
  4211ad:	cs ret 0xab49
  4211b1:	push   esp
  4211b2:	cmp    ch,BYTE PTR [eax]
  4211b4:	mov    eax,ds:0x98c76c25
  4211b9:	xchg   ecx,eax
  4211ba:	cs mov cl,0x8
  4211bd:	xlat   BYTE PTR ds:[ebx]
  4211be:	inc    edi
  4211bf:	outs   dx,DWORD PTR ds:[esi]
  4211c0:	adc    eax,0x42eb607a
  4211c5:	sbb    al,0xd8
  4211c7:	call   0x841f:0x3a59a5d1
  4211ce:	call   0xfd59:0x3c9659
  4211d5:	out    dx,eax
  4211d6:	cmp    eax,0xb1dacea8
  4211db:	add    al,0xf8
  4211dd:	or     ah,BYTE PTR [edx+edi*4+0x2e]
  4211e1:	adc    BYTE PTR [ebx+0xbaa116c],dl
  4211e7:	mov    esi,0xece23c85
  4211ec:	pop    edx
  4211ed:	cwde   
  4211ee:	cmc    
  4211ef:	jmp    DWORD PTR [edx-0x10c89573]
  4211f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211f6:	mov    ch,0x1
  4211f8:	loop   0x42125b
  4211fa:	dec    ecx
  4211fb:	sbb    BYTE PTR [edx+0x79e53a09],ah
  421201:	popa   
  421202:	mov    esp,0x7a7e6cd9
  421207:	dec    ebx
  421208:	add    esp,DWORD PTR [edx+0x1f]
  42120b:	in     eax,dx
  42120c:	mov    BYTE PTR [edx+edx*2+0x3cb67dfe],cl
  421213:	or     bl,ch
  421215:	inc    edi
  421216:	or     DWORD PTR [edx-0x7f],0x30d34d43
  42121d:	mov    DWORD PTR [edx],ebp
  42121f:	push   cs
  421220:	outs   dx,BYTE PTR ds:[esi]
  421221:	jbe    0x421247
  421223:	gs pop eax
  421225:	sub    BYTE PTR [ebx-0x43d1f1f1],ah
  42122b:	push   esi
  42122c:	fldenv [edi-0x49]
  42122f:	int3   
  421230:	sub    al,ah
  421232:	stos   DWORD PTR es:[edi],eax
  421233:	push   edx
  421235:	out    dx,eax
  421236:	xor    al,0x86
  421238:	out    0xfa,eax
  42123a:	cmp    eax,0x5aee32aa
  42123f:	jp     0x421250
  421241:	dec    ebx
  421242:	shl    BYTE PTR [esp+esi*2+0x29],cl
  421246:	ret    
  421247:	cmp    ebx,DWORD PTR [esi-0x5]
  42124a:	sub    al,0x48
  42124c:	jo     0x4211d6
  42124e:	and    dl,BYTE PTR [eax+0x13]
  421251:	mov    edx,0xe6aa70cf
  421256:	je     0x4212b9
  421258:	push   ebx
  421259:	inc    edx
  42125a:	out    dx,al
  42125b:	dec    esp
  42125c:	hlt    
  42125d:	test   DWORD PTR [edx+0x4a],ebp
  421260:	popa   
  421261:	mov    ds:0x8515bb1e,eax
  421266:	cmp    al,0x68
  421268:	data16 je 0x42121c
  42126b:	push   es
  42126c:	scas   al,BYTE PTR es:[edi]
  42126d:	add    eax,0x9634a5ec
  421272:	test   al,0xb8
  421274:	dec    ebx
  421275:	jae    0x421275
  421277:	ins    DWORD PTR es:[edi],dx
  421278:	sbb    al,0x50
  42127a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42127b:	out    dx,al
  42127c:	cdq    
  42127d:	fwait
  42127e:	ss test al,0x2b
  421281:	push   dx
  421283:	and    bh,bl
  421285:	or     BYTE PTR ds:0x72f61a09,ah
  42128b:	gs retf 0x2285
  42128f:	(bad)  
  421290:	outs   dx,DWORD PTR ds:[esi]
  421291:	imul   esi,DWORD PTR [ebx],0x246ac3a8
  421297:	call   FWORD PTR [eax+0x6a]
  42129a:	fwait
  42129b:	mov    ecx,0x3a00e11d
  4212a0:	adc    al,cl
  4212a2:	nop
  4212a3:	or     edi,ebx
  4212a5:	push   eax
  4212a6:	cmp    eax,0x6c5dfcf8
  4212ab:	dec    ecx
  4212ac:	mov    eax,0x1bb46969
  4212b1:	fs sti 
  4212b3:	xchg   DWORD PTR ds:0xb604e0d,eax
  4212b9:	and    edx,eax
  4212bb:	or     ebx,DWORD PTR [ebp-0x72]
  4212be:	cld    
  4212bf:	cdq    
  4212c0:	fdivr  DWORD PTR [esi+0x4dd3bb5e]
  4212c6:	ss hlt 
  4212c8:	jp     0x1d2c2669
  4212ce:	test   eax,0xe7d8c1ed
  4212d3:	xor    eax,0x675a8f70
  4212d8:	aam    0xe
  4212da:	dec    eax
  4212db:	jle    0x4212fe
  4212dd:	jle    0x4212db
  4212df:	(bad)  
  4212e1:	in     eax,0x35
  4212e3:	cmp    BYTE PTR ds:0xb3380d45,bh
  4212e9:	push   0x121385ab
  4212ee:	pop    edx
  4212ef:	sbb    edx,ebx
  4212f1:	out    dx,al
  4212f2:	fisubr DWORD PTR [esi]
  4212f4:	mov    al,ds:0x4db83d55
  4212f9:	out    dx,al
  4212fa:	mov    ds:0x1a26b8c0,al
  4212ff:	lods   eax,DWORD PTR ds:[esi]
  421300:	pop    eax
  421301:	outs   dx,BYTE PTR ds:[esi]
  421302:	mov    al,ds:0x4e1caec6
  421307:	(bad)  
  421309:	sub    al,0x93
  42130b:	lea    edx,[ecx]
  42130d:	div    DWORD PTR ds:0xe4abe4f8
  421313:	cdq    
  421314:	retf   0xda89
  421317:	mov    esp,0x746c1232
  42131c:	mov    ah,0xc0
  42131e:	dec    edx
  42131f:	cmp    BYTE PTR [ebx-0x2727b0ec],ah
  421325:	std    
  421326:	inc    esi
  421327:	lods   al,BYTE PTR ds:[esi]
  421328:	fwait
  421329:	xchg   esi,eax
  42132a:	and    ebx,DWORD PTR [edi]
  42132c:	adc    eax,0xba75adba
  421331:	adc    al,0x5d
  421333:	inc    edi
  421334:	sti    
  421335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421336:	and    cl,BYTE PTR [eax+0x726abeed]
  42133c:	push   cs
  42133d:	and    al,0x63
  42133f:	cmp    al,0x1b
  421341:	sub    bh,BYTE PTR [ebx-0x65f32e9a]
  421347:	aad    0x17
  421349:	test   al,dh
  42134b:	mov    ecx,0x8ceaa290
  421350:	pop    esi
  421351:	cli    
  421352:	sub    cl,ch
  421354:	jb     0x4212dc
  421356:	ss pop eax
  421358:	int    0xe5
  42135a:	fwait
  42135b:	jno    0x42135b
  42135d:	cli    
  42135e:	cmp    al,0xce
  421360:	sbb    al,0x4a
  421362:	mov    edx,0x3ae53359
  421367:	sub    al,0x1a
  421369:	inc    esi
  42136a:	enter  0x28eb,0xbf
  42136e:	int3   
  42136f:	mov    ecx,0x93f2f36a
  421374:	sbb    DWORD PTR [edx],edi
  421376:	data16 daa 
  421378:	xor    ch,BYTE PTR [edx-0x6c4c5fe6]
  42137e:	lods   al,BYTE PTR ds:[esi]
  42137f:	fild   QWORD PTR [eax]
  421381:	mov    al,0x61
  421383:	mov    cl,0xd2
  421385:	repnz imul ebp,DWORD PTR [edi],0xc
  421389:	mov    edx,0x648c4794
  42138e:	mov    edi,0x9ae43d7a
  421393:	cmp    DWORD PTR [edx],esp
  421395:	into   
  421396:	(bad)  
  421397:	cwde   
  421398:	push   ecx
  421399:	test   DWORD PTR [ebx],esi
  42139b:	lock mov DWORD PTR [ecx],ebp
  42139e:	std    
  42139f:	pop    ecx
  4213a0:	ret    0x4ccf
  4213a3:	call   0x8d5209a1
  4213a8:	aad    0x9c
  4213aa:	bound  edi,QWORD PTR [ecx]
  4213ac:	jmp    0x17d06330
  4213b1:	fidivr DWORD PTR [esi+0x24c5a2ee]
  4213b7:	int    0x85
  4213b9:	cli    
  4213ba:	mov    bh,0xd5
  4213bc:	cmp    BYTE PTR [esi+0x12],al
  4213bf:	push   ss
  4213c0:	inc    edi
  4213c1:	mov    ecx,0x4ebf9447
  4213c6:	xor    edi,DWORD PTR [ebx+0x45]
  4213c9:	mov    cs,WORD PTR [edx-0x40]
  4213cc:	and    esp,DWORD PTR [ebp+0x14b616e2]
  4213d2:	xor    al,0xa8
  4213d4:	in     al,0x79
  4213d6:	sar    DWORD PTR [ebx-0x20],cl
  4213d9:	fld    QWORD PTR [ebp+0xe]
  4213dc:	fnstsw WORD PTR [edi-0x4d68bc86]
  4213e2:	xor    BYTE PTR [ebx-0x5f3245e6],0x50
  4213e9:	mov    bh,0xba
  4213eb:	out    0xcf,eax
  4213ed:	push   ds
  4213ee:	push   ebx
  4213ef:	push   edi
  4213f0:	aad    0x83
  4213f2:	cli    
  4213f3:	add    bh,BYTE PTR ds:0x6e0a48aa
  4213f9:	sbb    bh,BYTE PTR [edx]
  4213fb:	push   0x95430def
  421400:	test   al,0xb8
  421402:	shr    DWORD PTR [ecx+ebp*8+0x3ca7bd73],0x1d
  42140a:	mov    esi,0x7cf43a52
  42140f:	mov    ah,0x3
  421411:	mov    es,WORD PTR [eax]
  421413:	out    0x98,eax
  421415:	push   ecx
  421416:	push   ebx
  421417:	scas   eax,DWORD PTR es:[edi]
  421418:	or     DWORD PTR [edi+0x25],eax
  42141b:	bound  edi,QWORD PTR [ebx]
  42141d:	jmp    DWORD PTR [ebx-0x78f5e8f2]
  421423:	pop    edi
  421424:	pop    ecx
  421425:	sub    al,0xe6
  421427:	mov    dh,0xb6
  421429:	out    0xb6,al
  42142b:	mov    dh,0xa8
  42142d:	aad    0x79
  42142f:	scas   al,BYTE PTR es:[edi]
  421430:	xor    al,0xff
  421432:	das    
  421433:	mov    ds:0x72f0271b,al
  421438:	lahf   
  421439:	fcmovnbe st,st(4)
  42143b:	sbb    al,0xa1
  42143d:	test   BYTE PTR [edx],bl
  42143f:	and    ch,dh
  421441:	scas   al,BYTE PTR es:[edi]
  421442:	mov    edx,0xaa843318
  421447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421448:	sbb    ch,ah
  42144a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42144b:	cli    
  42144c:	cwde   
  42144d:	(bad)  
  42144e:	xor    ecx,ecx
  421450:	inc    eax
  421451:	add    DWORD PTR ss:[ecx+0x5c1909ae],edi
  421458:	js     0x4214a1
  42145a:	jmp    0x11c8:0x85ecf3b3
  421461:	jp     0x42141b
  421463:	js     0x4214c0
  421465:	pop    es
  421466:	mov    al,0xc4
  421468:	iret   
  421469:	fild   DWORD PTR [edi]
  42146b:	add    edi,DWORD PTR [eax+0x16]
  42146e:	xor    DWORD PTR [ecx-0xc8259c9],esi
  421474:	adc    edx,ebp
  421476:	xor    dl,dl
  421478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421479:	int    0xeb
  42147b:	cmp    BYTE PTR [edi+0x5e64e881],bh
  421481:	fsubr  QWORD PTR [esi+edx*8]
  421484:	sub    BYTE PTR [eax+0x47],bh
  421487:	mov    ebx,0x66405beb
  42148c:	stos   BYTE PTR es:[edi],al
  42148d:	push   ecx
  42148e:	and    eax,0xd8d74e6f
  421493:	mov    dh,0x18
  421495:	icebp  
  421496:	xchg   edi,eax
  421497:	clc    
  421498:	cmp    DWORD PTR [ebx+0x796fa5a],edi
  42149e:	shl    BYTE PTR [edx-0x68],cl
  4214a1:	sahf   
  4214a2:	push   ecx
  4214a3:	mov    ebp,eax
  4214a5:	call   0x1f4c:0xe6a4b073
  4214ac:	or     BYTE PTR [ebx],bh
  4214ae:	gs mov cl,0xd0
  4214b1:	(bad)  
  4214b2:	cmc    
  4214b3:	dec    ecx
  4214b4:	adc    edx,ebx
  4214b6:	mov    eax,0x53755e39
  4214bb:	repz js 0x42150a
  4214be:	mov    ah,0x24
  4214c0:	pcmpgtd mm7,QWORD PTR [ebx-0x5779c41]
  4214c7:	cs jp  0x421504
  4214ca:	imul   ebp,DWORD PTR ds:0x68369192,0x82f8e0c0
  4214d4:	lock xor DWORD PTR [eax-0x657c8d5d],ecx
  4214db:	adc    ebp,DWORD PTR [ebx+0x77]
  4214de:	fnstenv [esi-0xa]
  4214e1:	mov    ecx,DWORD PTR [ecx+0x68]
  4214e4:	mov    al,0xc
  4214e6:	nop
  4214e7:	push   es
  4214e8:	pop    eax
  4214e9:	sbb    eax,0x7cedb242
  4214ee:	xchg   ebx,eax
  4214ef:	dec    ecx
  4214f0:	and    BYTE PTR [ecx+ecx*4-0x13],al
  4214f4:	stc    
  4214f5:	mov    edi,0x77f83698
  4214fa:	push   esp
  4214fb:	mov    cl,0xce
  4214fd:	pop    esi
  4214fe:	mov    DWORD PTR [ecx-0x7e3eb536],esp
  421504:	hlt    
  421505:	sub    eax,0x55ab14d3
  42150a:	sbb    eax,0xfa9ddec4
  42150f:	call   0xa9d38cd0
  421514:	sub    dl,BYTE PTR [ecx-0x5d618fc9]
  42151a:	aad    0x32
  42151c:	test   BYTE PTR [ebx+0x43355834],dh
  421522:	ins    DWORD PTR es:[edi],dx
  421523:	push   ebx
  421524:	sbb    eax,eax
  421526:	sahf   
  421527:	lds    edi,FWORD PTR [eax+0x3aaffde9]
  42152d:	(bad)  
  42152e:	mov    al,ds:0x5ca8ba4e
  421533:	mov    eax,0xc8488286
  421538:	fsub   DWORD PTR [ecx-0x23]
  42153b:	cdq    
  42153c:	sub    BYTE PTR [ebx+0x7f58df83],dh
  421542:	dec    edx
  421543:	xchg   al,cl
  421545:	dec    esi
  421546:	mov    edx,0xb8f7f175
  42154b:	iret   
  42154c:	adc    BYTE PTR [ecx],dl
  42154e:	clc    
  42154f:	jne    0x4214d6
  421551:	pushf  
  421552:	cmp    esp,DWORD PTR [eax]
  421554:	(bad)  
  421555:	jae    0x4214f1
  421557:	mov    ds:0xb454bcb5,al
  42155c:	das    
  42155d:	sbb    eax,DWORD PTR [ebx+0xc]
  421560:	loop   0x421564
  421562:	cmp    ebx,DWORD PTR [eax-0x1c15a133]
  421568:	sub    BYTE PTR [ecx+ecx*1-0x49],dh
  42156c:	es push 0xffffffdf
  42156f:	aaa    
  421570:	add    DWORD PTR [esi-0x5d],edi
  421573:	jp     0x4215cd
  421575:	xor    dl,cl
  421577:	mov    dl,0x50
  421579:	sbb    al,0x8c
  42157b:	add    ch,BYTE PTR [eax]
  42157d:	jae    0x4215ae
  42157f:	mov    ch,0xab
  421581:	cwde   
  421582:	rcl    bh,0xd
  421585:	out    0x84,al
  421587:	shl    DWORD PTR [ebx+0x23],1
  42158a:	mul    BYTE PTR [edx]
  42158c:	add    BYTE PTR [edi+0x37],ah
  42158f:	sbb    al,BYTE PTR [esi]
  421591:	mov    dl,ch
  421593:	pop    ebp
  421594:	xor    eax,0x6eb67392
  421599:	div    DWORD PTR [esi]
  42159b:	mov    eax,0x6b2c5163
  4215a0:	test   al,0xf
  4215a2:	dec    esi
  4215a3:	mov    edx,0x62f943d1
  4215a8:	cmp    bh,BYTE PTR [edx-0x45ed761f]
  4215ae:	hlt    
  4215af:	push   eax
  4215b0:	aaa    
  4215b1:	xor    ecx,DWORD PTR [ebp+0xebc9bce]
  4215b7:	icebp  
  4215b8:	push   0xa6aee90f
  4215bd:	lahf   
  4215be:	ror    DWORD PTR [eax+edx*2],1
  4215c1:	jge    0x4215e1
  4215c3:	xor    BYTE PTR [edx-0x1790d67d],bh
  4215c9:	add    BYTE PTR [ebx],0xb5
  4215cc:	cmp    DWORD PTR [ebx],0x51
  4215cf:	push   ss
  4215d0:	or     al,0x9a
  4215d2:	xor    DWORD PTR [ebp+0x7baa50d2],ebp
  4215d8:	mov    ecx,0x851192b2
  4215dd:	mov    bl,BYTE PTR [edx-0x2763e3c8]
  4215e3:	cmp    edx,DWORD PTR [ecx+0x103fa7cd]
  4215e9:	jmp    0xc1e:0x28716506
  4215f0:	jns    0x421580
  4215f2:	fidiv  DWORD PTR [edi-0x78]
  4215f5:	mov    bh,0x2
  4215f7:	(bad)  
  4215f8:	ins    DWORD PTR es:[edi],dx
  4215f9:	sub    al,0x7c
  4215fb:	or     BYTE PTR [edx],dl
  4215fd:	and    ah,BYTE PTR [eax]
  4215ff:	add    al,0x1b
  421601:	xor    edi,0xffffff9e
  421604:	push   ebp
  421605:	cmp    edx,0xffffff80
  421608:	imul   esp,DWORD PTR [edi-0x5d64f9b5],0x8f2ad836
  421612:	or     al,0xbc
  421614:	push   eax
  421615:	sub    BYTE PTR [eax-0x61],dh
  421618:	push   0xffffff8b
  42161a:	mov    edx,0xe6614244
  42161f:	inc    ebp
  421620:	dec    edi
  421621:	(bad)  [eax]
  421623:	fsub   DWORD PTR [ebp+0x78929d74]
  421629:	pusha  
  42162a:	lds    ebp,FWORD PTR [ebx+esi*8+0x1ae657e8]
  421631:	dec    edx
  421632:	mov    esp,0x8fc95463
  421637:	xchg   esi,eax
  421638:	push   edx
  421639:	retf   0x4b01
  42163c:	cs je  0x421699
  42163f:	push   ds
  421640:	push   0xffffff8d
  421642:	lss    edx,FWORD PTR [esi]
  421645:	cmp    ch,BYTE PTR [ebx]
  421647:	fsub   st,st(6)
  421649:	enter  0xb4b2,0xaf
  42164d:	stos   BYTE PTR es:[edi],al
  42164e:	push   0x7e
  421650:	aam    0x79
  421652:	pop    edx
  421653:	mov    edi,0xb2d24025
  421658:	pop    ss
  421659:	jmp    0x7324:0xf1743ea6
  421660:	scas   al,BYTE PTR es:[edi]
  421661:	shr    BYTE PTR [ebx],cl
  421663:	xor    eax,0x3dea80fd
  421668:	imul   edx,DWORD PTR [ebx-0x6f],0xa3d22a5a
  42166f:	lahf   
  421670:	push   cs
  421671:	xor    DWORD PTR [esi+0x5b],ebx
  421674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421675:	nop
  421676:	sub    cl,BYTE PTR ds:0x895a2d63
  42167c:	mov    eax,0xb5bfab
  421681:	daa    
  421682:	cdq    
  421683:	mov    ebx,0x88321e95
  421688:	jg     0x4216fd
  42168a:	or     al,0xf7
  42168c:	dec    eax
  42168d:	xchg   edx,eax
  42168e:	add    al,0xb1
  421690:	outs   dx,BYTE PTR ds:[esi]
  421691:	dec    ebp
  421692:	sbb    cl,BYTE PTR [ebp*1-0x5fed86c4]
  421699:	cs pusha 
  42169b:	fist   DWORD PTR [eax]
  42169d:	add    bl,0x7e
  4216a0:	mov    eax,ds:0x782a337f
  4216a5:	or     al,0xf5
  4216a7:	mov    al,0xa1
  4216a9:	xor    dl,dh
  4216ab:	jnp    0x4216c1
  4216ad:	cli    
  4216ae:	fwait
  4216af:	jns    0x421664
  4216b1:	pop    es
  4216b2:	and    esp,DWORD PTR [eax]
  4216b4:	cmc    
  4216b5:	xchg   ebp,ebx
  4216b7:	loope  0x4216f2
  4216b9:	lahf   
  4216ba:	dec    edx
  4216bb:	xchg   edi,eax
  4216bc:	xchg   DWORD PTR [edx-0x9],ebp
  4216bf:	stos   BYTE PTR es:[edi],al
  4216c0:	sbb    BYTE PTR [edx],cl
  4216c2:	jns    0x421700
  4216c4:	out    0x59,al
  4216c6:	call   0x6f34:0xa192a477
  4216cd:	das    
  4216ce:	or     BYTE PTR [edx+0x3e8f3019],dl
  4216d4:	mov    bl,0xdb
  4216d6:	test   ecx,esi
  4216d8:	inc    ebx
  4216d9:	(bad)  
  4216da:	mov    ecx,DWORD PTR [edi-0xb7969e6]
  4216e0:	test   DWORD PTR [edi+0x72b0d54d],ecx
  4216e6:	mov    edx,0x48bb377a
  4216eb:	scas   al,BYTE PTR es:[edi]
  4216ec:	push   cs
  4216ed:	hlt    
  4216ee:	repnz dec edi
  4216f0:	adc    al,0xba
  4216f2:	mov    dl,0x3e
  4216f4:	jp     0x42174a
  4216f6:	stos   BYTE PTR es:[edi],al
  4216f7:	(bad)  
  4216f8:	(bad)  
  4216f9:	fiadd  WORD PTR [ebx-0xe74871d]
  4216ff:	mov    dh,0xfe
  421701:	or     eax,0x31072446
  421706:	sub    al,0x55
  421708:	jb     0x4216ce
  42170a:	cmp    edi,DWORD PTR [edx]
  42170c:	es (bad) 
  42170e:	call   0x77ea:0xeb16bb69
  421715:	or     BYTE PTR [eax-0x78],cl
  421718:	ror    BYTE PTR [esi+0x70],0xbc
  42171c:	or     eax,0x68718166
  421721:	push   ebp
  421722:	dec    ebp
  421723:	mov    bl,0xf6
  421725:	je     0x421728
  421727:	push   ebp
  421728:	mov    ch,0xec
  42172a:	xor    eax,0x79d06628
  42172f:	xchg   BYTE PTR [ecx-0x790bfae4],ah
  421735:	int    0x8e
  421737:	mov    cs,WORD PTR [edi-0x4b]
  42173a:	dec    ebp
  42173b:	cwde   
  42173c:	xor    ebx,DWORD PTR [esp+edi*1]
  42173f:	ins    BYTE PTR es:[edi],dx
  421740:	in     eax,dx
  421741:	mov    eax,0x4729c118
  421746:	xor    al,bh
  421748:	call   edi
  42174a:	sub    ecx,ecx
  42174c:	dec    edi
  42174d:	out    dx,eax
  42174e:	inc    eax
  42174f:	int3   
  421750:	enter  0xa7f3,0xb1
  421754:	mov    DWORD PTR [ebp+ebp*2+0x31da4044],eax
  42175b:	dec    eax
  42175c:	pop    ebx
  42175d:	push   ebp
  42175e:	loop   0x421766
  421760:	cwde   
  421761:	stos   DWORD PTR es:[edi],eax
  421762:	fstp   st(4)
  421764:	pop    ebx
  421765:	ret    0xefc7
  421768:	ret    
  421769:	(bad)  
  42176a:	ror    BYTE PTR ds:0xb88001ca,1
  421771:	mov    al,ds:0x3d4c0e17
  421776:	es push si
  421779:	mov    ds,WORD PTR [edx]
  42177b:	test   DWORD PTR [ecx+esi*2-0x51],esp
  42177f:	test   al,0xfe
  421781:	ins    DWORD PTR es:[edi],dx
  421782:	ss sub ch,ah
  421785:	inc    esp
  421786:	ja     0x4217bf
  421788:	pop    eax
  421789:	pop    esi
  42178a:	in     eax,dx
  42178b:	lods   eax,DWORD PTR ds:[esi]
  42178c:	push   ss
  42178d:	fst    DWORD PTR [esi+eiz*8]
  421790:	hlt    
  421791:	pop    eax
  421792:	xchg   esi,eax
  421793:	mov    ch,0x96
  421795:	call   0x871b1ab1
  42179a:	push   ds
  42179b:	das    
  42179c:	push   ebx
  42179d:	ret    0x8e45
  4217a0:	stos   BYTE PTR es:[edi],al
  4217a1:	aam    0xe4
  4217a3:	xor    BYTE PTR [eax],ah
  4217a5:	pop    es
  4217a6:	xor    DWORD PTR [eax],ecx
  4217a8:	push   ds
  4217a9:	jecxz  0x421773
  4217ab:	aam    0x88
  4217ad:	fs cmp ah,ch
  4217b0:	jmp    0x4217e6
  4217b2:	sub    BYTE PTR fs:[edi+eax*2-0x1e2279cf],0x30
  4217bb:	clc    
  4217bc:	fimul  DWORD PTR [ecx+esi*2]
  4217bf:	loopne 0x4217d9
  4217c1:	xor    bh,BYTE PTR [edi-0x4e]
  4217c4:	mov    bh,0xf6
  4217c6:	add    al,0xe9
  4217c8:	adc    BYTE PTR [edx],ch
  4217ca:	and    ebp,DWORD PTR [ecx+0x6ca3d41b]
  4217d0:	arpl   si,dx
  4217d2:	jb     0x42177d
  4217d4:	add    eax,DWORD PTR [eax+0x23a91b8a]
  4217da:	sub    dl,BYTE PTR [ecx+0x7f]
  4217dd:	jecxz  0x421814
  4217df:	pop    eax
  4217e0:	xor    eax,DWORD PTR [ebx]
  4217e2:	push   eax
  4217e3:	ins    DWORD PTR es:[edi],dx
  4217e4:	pop    eax
  4217e5:	mov    eax,ds:0xdb54b5d9
  4217ea:	push   ecx
  4217eb:	xor    ecx,DWORD PTR [edi]
  4217ed:	pop    edx
  4217ee:	and    ch,bl
  4217f0:	imul   esi,DWORD PTR [ecx],0x7a6909d1
  4217f6:	ret    
  4217f7:	addr16 push eax
  4217f9:	mov    ch,0x8a
  4217fb:	enter  0xea10,0xa8
  4217ff:	or     eax,0xe4744182
  421804:	mov    eax,ds:0xff675d85
  421809:	cdq    
  42180a:	jp     0x4217a4
  42180c:	push   eax
  42180d:	jmp    0x8d6ee4b9
  421812:	pusha  
  421813:	mov    al,ds:0x93431680
  421818:	rol    DWORD PTR [esi+0x3882e90c],0xd2
  42181f:	ss call 0x30a540d
  421825:	dec    eax
  421826:	aad    0x21
  421828:	or     al,0x68
  42182a:	cmp    eax,0xa44c6738
  42182f:	and    DWORD PTR [eax+0x6edf5857],ecx
  421835:	popa   
  421836:	sbb    al,bh
  421838:	unpckhps xmm1,XMMWORD PTR [ecx+0x44]
  42183c:	mov    dh,0x1c
  42183e:	lods   al,BYTE PTR ds:[esi]
  42183f:	mov    edi,0x9455c37f
  421844:	xlat   BYTE PTR ds:[ebx]
  421845:	xor    DWORD PTR [edx],0x78ffb6ed
  42184b:	sub    eax,0xabea738c
  421850:	sbb    DWORD PTR [ebp+0x40],eax
  421853:	mov    bl,0x15
  421855:	sbb    dl,cl
  421857:	push   cs
  421858:	rcr    BYTE PTR [edi-0x6f],cl
  42185b:	rol    BYTE PTR [ecx+0x55],cl
  42185e:	dec    esp
  42185f:	aad    0x2d
  421861:	(bad)
  421865:	dec    ecx
  421866:	addr16 jno 0x421813
  421869:	outs   dx,BYTE PTR ds:[esi]
  42186a:	dec    ebp
  42186b:	cmp    dl,BYTE PTR [esi+0x4]
  42186e:	and    BYTE PTR [ecx+eax*2+0x2774b088],cl
  421875:	ins    DWORD PTR es:[edi],dx
  421876:	cmpxchg cl,al
  421879:	jae    0x4218d5
  42187b:	add    DWORD PTR [esi+0x30],ecx
  42187e:	pusha  
  42187f:	scas   al,BYTE PTR es:[edi]
  421880:	sbb    bh,BYTE PTR [edx+0x62]
  421883:	xchg   edx,eax
  421884:	adc    DWORD PTR [esi+0x63],ecx
  421887:	adc    esp,DWORD PTR ds:0x89d02e08
  42188d:	iret   
  42188e:	dec    esp
  42188f:	fld    DWORD PTR [esi-0x76]
  421892:	jbe    0x4218fc
  421894:	bndldx (bad),[ebx+edx*2+0x47]
  421899:	ds mov eax,fs:0xc570a8a0
  4218a0:	jmp    0xdb7a2328
  4218a5:	in     al,dx
  4218a6:	bound  eax,QWORD PTR [edx-0x61]
  4218a9:	lahf   
  4218aa:	repz adc ah,BYTE PTR [eax]
  4218ad:	jmp    0x85e90ead
  4218b2:	jp     0x421933
  4218b4:	fbld   TBYTE PTR [ecx-0x1a]
  4218b7:	out    0xd8,eax
  4218b9:	mov    eax,0x125bc9fe
  4218be:	shl    BYTE PTR [ebx-0x5d],cl
  4218c1:	retf   0xd8a7
  4218c4:	cmp    BYTE PTR [ecx+0x3c93dfeb],0x37
  4218cb:	pusha  
  4218cc:	or     DWORD PTR [ecx+eiz*4-0xa],esp
  4218d0:	sbb    cl,dh
  4218d2:	jnp    0x42192b
  4218d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218d5:	das    
  4218d6:	cmp    al,0x38
  4218d8:	push   ebp
  4218d9:	pop    esp
  4218da:	mov    DWORD PTR [eax+0x41],edi
  4218dd:	jb     0x4218f1
  4218df:	out    0x6a,eax
  4218e1:	lea    edi,[edx+0xaefbc37]
  4218e7:	xor    BYTE PTR [eax+0x2baee161],bl
  4218ed:	(bad)  
  4218ee:	push   ds
  4218ef:	jne    0x421904
  4218f1:	stos   BYTE PTR es:[edi],al
  4218f2:	js     0x4218da
  4218f4:	test   al,0x5f
  4218f6:	push   ecx
  4218f7:	push   edi
  4218f8:	push   esi
  4218f9:	push   es
  4218fa:	sub    al,0xb2
  4218fc:	or     al,0x81
  4218fe:	cli    
  4218ff:	dec    eax
  421900:	xchg   edx,eax
  421901:	jno    0x421964
  421903:	scas   al,BYTE PTR es:[edi]
  421904:	adc    bl,BYTE PTR [edx]
  421906:	fcmovb st,st(0)
  421908:	push   ecx
  421909:	clc    
  42190a:	xor    eax,0xfdb9254a
  42190f:	push   ebp
  421910:	adc    BYTE PTR [ecx+0x7a7e836a],cl
  421916:	repnz das 
  421918:	and    eax,0xd4c83ded
  42191d:	xchg   ebx,eax
  42191e:	pop    es
  42191f:	cmp    DWORD PTR [eax+0x7e],0x2c
  421923:	mov    ah,0x1c
  421925:	xlat   BYTE PTR ds:[ebx]
  421926:	xor    BYTE PTR [ebp+ecx*1+0x4ecf508a],dl
  42192d:	and    dl,BYTE PTR [edi+esi*2-0x66]
  421931:	(bad)
  421934:	push   ebp
  421935:	ja     0x421912
  421937:	inc    ebx
  421938:	in     eax,dx
  421939:	mov    edx,gs
  42193b:	test   DWORD PTR ds:0xc00d3503,0xaacf5574
  421945:	jne    0x421986
  421947:	pop    eax
  421948:	out    0xdf,al
  42194a:	or     al,0x53
  42194c:	(bad)  
  42194d:	cmp    eax,0x373f1f41
  421952:	add    esi,DWORD PTR [edi+0x3bf83f8]
  421958:	cmp    BYTE PTR [edx+0x31],cl
  42195b:	dec    eax
  42195c:	jg     0x42198a
  42195e:	call   0xd8f4b836
  421963:	cdq    
  421964:	fadd   QWORD PTR [edi+edi*8-0x46]
  421968:	xchg   ebp,eax
  421969:	(bad)  
  42196a:	mov    esi,0x2d2621da
  42196f:	das    
  421970:	int    0x28
  421972:	test   BYTE PTR [edi-0x45a76f0b],ah
  421978:	mov    gs,WORD PTR [eax]
  42197a:	js     0x421915
  42197c:	and    ecx,DWORD PTR [ecx]
  42197e:	add    DWORD PTR [esp+edx*4],0x60
  421982:	nop
  421983:	scas   al,BYTE PTR es:[edi]
  421984:	or     edx,0x77
  421987:	popf   
  421988:	mov    DWORD PTR [eax+0x18],0x288dd7c2
  42198f:	sahf   
  421990:	mov    eax,0x4c02e082
  421995:	and    dl,BYTE PTR [edi+0x303b6562]
  42199b:	clc    
  42199c:	aam    0xa4
  42199e:	sbb    eax,0xaf41f9d9
  4219a3:	jle    0x42197b
  4219a5:	out    0x24,al
  4219a7:	iret   
  4219a8:	imul   ecx,DWORD PTR [ecx+0x3ee85b8a],0x4797b8aa
  4219b2:	push   edx
  4219b3:	imul   eax,DWORD PTR ds:0x39a34e2d,0xffffffe4
  4219ba:	mov    cl,ch
  4219bc:	rol    DWORD PTR [ebx-0x62a79668],cl
  4219c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219c3:	mov    ebx,0xc287ee1d
  4219c8:	xor    al,0x8d
  4219ca:	stos   DWORD PTR es:[edi],eax
  4219cb:	xor    ebx,DWORD PTR [ebp+0x640921b7]
  4219d1:	fbstp  TBYTE PTR [esi]
  4219d3:	aam    0xce
  4219d5:	icebp  
  4219d6:	ss jne 0x421a4a
  4219d9:	ja     0x421a06
  4219db:	adc    BYTE PTR [edi+0x2e600a7e],ah
  4219e1:	pop    ebx
  4219e3:	sbb    BYTE PTR [edi+0x12ef99c6],bl
  4219e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219ea:	jmp    0xac22a059
  4219ef:	inc    edx
  4219f0:	enter  0x7984,0xe4
  4219f4:	bnd jno 0x4219cc
  4219f7:	inc    ebp
  4219f8:	(bad)  
  4219f9:	call   0x73ea9030
  4219fe:	fcom   DWORD PTR [eax]
  421a00:	stc    
  421a01:	push   esp
  421a02:	xor    eax,0xc4564328
  421a07:	dec    ebp
  421a08:	lahf   
  421a09:	(bad)  
  421a0a:	(bad)  
  421a0b:	push   ds
  421a0c:	xor    eax,0x8b75765b
  421a11:	xchg   ebp,eax
  421a12:	(bad)  
  421a13:	and    DWORD PTR [edi],ecx
  421a15:	or     cl,cl
  421a17:	sbb    al,dh
  421a19:	aam    0x2d
  421a1b:	sub    BYTE PTR [esi+0x4c947a0d],ah
  421a21:	xchg   ecx,eax
  421a22:	push   0xffffffbf
  421a24:	xor    edi,DWORD PTR fs:[ebx-0x7a]
  421a28:	retf   0x851
  421a2b:	mov    dl,0x7f
  421a2d:	and    esi,edi
  421a2f:	ds out dx,al
  421a31:	shr    DWORD PTR [edi+eax*8-0x49dac014],1
  421a38:	push   0x2f
  421a3a:	adc    eax,0x9a87412a
  421a3f:	inc    BYTE PTR [edi+0x1056ee94]
  421a45:	ss cmp al,0x38
  421a48:	jno    0x421a39
  421a4a:	push   0xffffffc0
  421a4c:	clc    
  421a4d:	les    esp,FWORD PTR [edx]
  421a4f:	lods   al,BYTE PTR ds:[esi]
  421a50:	loopne 0x421a21
  421a52:	test   eax,0x77ca1a36
  421a57:	dec    ebx
  421a58:	jno    0x421a90
  421a5a:	mov    dh,bh
  421a5c:	repz push esp
  421a5e:	cmp    BYTE PTR [edx],ch
  421a60:	lds    ecx,FWORD PTR [edx+0x7d3e09ca]
  421a66:	jge    0x421a32
  421a68:	cld    
  421a69:	adc    edx,DWORD PTR [ecx]
  421a6b:	mov    edi,0xb1ff8f52
  421a70:	sbb    DWORD PTR [eax],ebx
  421a72:	xchg   ebp,eax
  421a73:	pop    ecx
  421a74:	rol    BYTE PTR [edx-0x2dbceaa6],cl
  421a7a:	sub    bl,BYTE PTR [ecx+0x23f978d]
  421a80:	aad    0x43
  421a82:	(bad)  
  421a83:	xchg   ebp,eax
  421a84:	cmc    
  421a85:	mov    DWORD PTR [edx+0x34],ebp
  421a88:	jl     0x421aeb
  421a8a:	xor    eax,0x9dec519c
  421a8f:	sub    DWORD PTR [eax],ebp
  421a91:	inc    esp
  421a92:	adc    BYTE PTR [edx+0x24],dh
  421a95:	jb     0x421a3d
  421a97:	xor    esp,ecx
  421a99:	pop    edx
  421a9a:	pop    edx
  421a9b:	mov    edx,0x2bc88f00
  421aa0:	fiadd  WORD PTR [ebp-0xc1fb8b6]
  421aa6:	xlat   BYTE PTR ds:[ebx]
  421aa7:	mov    dh,0x12
  421aa9:	call   0x5170:0xb67190d4
  421ab0:	retf   0x253b
  421ab3:	(bad)
  421ab7:	iret   
  421ab8:	push   ds
  421ab9:	xchg   ecx,eax
  421aba:	out    0x87,al
  421abc:	cmp    bl,BYTE PTR [esi]
  421abe:	cmp    edi,DWORD PTR [eax+0x63264d02]
  421ac4:	fdiv   QWORD PTR [eax]
  421ac6:	aad    0x6c
  421ac8:	cmp    bh,BYTE PTR [esi+esi*8]
  421acb:	scas   al,BYTE PTR es:[edi]
  421acc:	push   esi
  421acd:	mov    al,BYTE PTR [edx-0x3055eff6]
  421ad3:	jecxz  0x421b02
  421ad5:	sub    ch,BYTE PTR [esi+ecx*8+0x5f]
  421ad9:	popa   
  421ada:	pop    ds
  421adb:	adc    DWORD PTR [eax],ecx
  421add:	ins    DWORD PTR es:[edi],dx
  421ade:	stc    
  421adf:	mov    ch,0x58
  421ae1:	sahf   
  421ae2:	dec    edx
  421ae3:	and    DWORD PTR [edx+ecx*8-0x707e6914],eax
  421aea:	inc    eax
  421aeb:	jns    0x421ad4
  421aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aee:	inc    esp
  421aef:	push   esi
  421af0:	ja     0x421b61
  421af2:	icebp  
  421af3:	push   0x3c
  421af5:	mov    ebx,0xec70d26b
  421afa:	pop    esp
  421afb:	test   al,0x31
  421afd:	sbb    dl,BYTE PTR [edi]
  421aff:	jecxz  0x421aba
  421b01:	je     0x421ae6
  421b03:	sub    al,0xf1
  421b05:	(bad)  
  421b06:	sbb    bh,BYTE PTR [esi]
  421b08:	ss jae 0x421add
  421b0b:	add    DWORD PTR ds:0x3da3ca89,ecx
  421b11:	push   edi
  421b12:	int    0x7b
  421b14:	mov    ss,WORD PTR [ebx]
  421b16:	pop    ebx
  421b17:	sbb    DWORD PTR [ebx+0x1288315f],0x184587db
  421b21:	jne    0x421b51
  421b23:	mov    dl,0xe4
  421b25:	int    0xd6
  421b27:	lods   eax,DWORD PTR ds:[esi]
  421b28:	adc    eax,0xf75f0daa
  421b2d:	lock icebp 
  421b2f:	or     eax,0xca2eb15e
  421b34:	jle    0x421b06
  421b36:	lods   al,BYTE PTR ds:[esi]
  421b37:	sbb    ecx,DWORD PTR [esi-0x7a]
  421b3a:	jb     0x421b0a
  421b3c:	sub    eax,0x9061d172
  421b41:	inc    ebp
  421b42:	fwait
  421b43:	sub    eax,0x1833045a
  421b48:	push   ss
  421b49:	dec    ebx
  421b4a:	adc    ch,0xee
  421b4d:	(bad)  
  421b4e:	cmp    al,0x9d
  421b50:	outs   dx,BYTE PTR ds:[esi]
  421b51:	sbb    dh,0x3c
  421b54:	pop    ss
  421b55:	push   0xfffffffc
  421b57:	loop   0x421b25
  421b59:	mov    ds:0x6e08bc7a,al
  421b5e:	fild   WORD PTR [ebp-0x77]
  421b61:	in     eax,dx
  421b62:	sbb    al,0xb5
  421b64:	jb     0x421aeb
  421b66:	xchg   al,dl
  421b68:	push   ss
  421b69:	pop    edx
  421b6a:	push   0x64
  421b6c:	mov    cl,0x58
  421b6e:	jle    0x421b7b
  421b70:	pop    es
  421b71:	(bad)  
  421b72:	leave  
  421b73:	shl    DWORD PTR [ebp+0x22af0cd3],0x84
  421b7a:	pop    edx
  421b7b:	ins    DWORD PTR es:[edi],dx
  421b7c:	punpckhdq mm1,QWORD PTR [ebx]
  421b7f:	cdq    
  421b80:	mov    bh,0x73
  421b82:	pop    eax
  421b83:	cmp    dh,bh
  421b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b86:	adc    esi,ebx
  421b88:	repnz mov BYTE PTR [edx-0x1afb8f7a],bh
  421b8f:	jle    0x421b68
  421b91:	aas    
  421b92:	ds sbb bl,cl
  421b95:	out    dx,eax
  421b96:	mov    ah,0xbe
  421b98:	test   al,0xd4
  421b9a:	addr16 test al,0x95
  421b9d:	cwde   
  421b9e:	out    dx,al
  421b9f:	ja     0x421b6a
  421ba1:	pop    edx
  421ba2:	inc    edx
  421ba3:	jbe    0x421b98
  421ba5:	cmp    ch,al
  421ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ba8:	dec    eax
  421ba9:	cmc    
  421baa:	pop    esi
  421bab:	lods   al,BYTE PTR ds:[esi]
  421bac:	out    0xed,al
  421bae:	bound  esp,QWORD PTR [esi+edx*1+0x78ca8a2a]
  421bb5:	cmp    DWORD PTR [eax],esp
  421bb7:	out    dx,al
  421bb8:	ss jno 0x421c14
  421bbb:	sbb    eax,edx
  421bbd:	test   edx,ebx
  421bbf:	nop
  421bc0:	mov    BYTE PTR [ebp+0x3a],dl
  421bc3:	ret    
  421bc4:	pop    edx
  421bc5:	xchg   edx,eax
  421bc6:	stos   DWORD PTR es:[edi],eax
  421bc7:	aas    
  421bc8:	sbb    esp,DWORD PTR [edx-0x1c]
  421bcb:	inc    esp
  421bcc:	imul   ecx,DWORD PTR [edx-0x10dc9bf0],0xfffffffb
  421bd3:	push   es
  421bd4:	adc    BYTE PTR [ebx+esi*1-0x315f2c8],cl
  421bdb:	(bad)  
  421bdc:	comiss xmm6,DWORD PTR [edi+0x6f]
  421be0:	push   ecx
  421be1:	sbb    al,bl
  421be3:	or     al,0xa8
  421be5:	test   al,0x69
  421be7:	mov    edx,0x1c954f92
  421bec:	adc    eax,0x256d0e0a
  421bf1:	cmp    esp,ebp
  421bf3:	dec    ebp
  421bf4:	pop    esi
  421bf5:	sbb    al,0x66
  421bf7:	out    0xe,eax
  421bf9:	test   BYTE PTR [edx-0x5e868bde],bl
  421bff:	ficomp DWORD PTR [edi]
  421c01:	push   cs
  421c02:	xor    BYTE PTR [eax],cl
  421c04:	dec    ebp
  421c05:	jg     0x421c84
  421c07:	sbb    ebp,DWORD PTR [eax-0x4f57a5ce]
  421c0d:	inc    ebp
  421c0e:	stos   BYTE PTR es:[edi],al
  421c0f:	fst    DWORD PTR [ecx]
  421c11:	jmp    0x8300:0xb648c8d6
  421c18:	inc    eax
  421c19:	test   DWORD PTR [ebx-0x74],esp
  421c1c:	dec    ecx
  421c1d:	sbb    DWORD PTR [edx-0x59],0xffffffd5
  421c21:	leave  
  421c22:	push   ds
  421c23:	sahf   
  421c24:	mov    dh,0x27
  421c26:	dec    ecx
  421c27:	call   0x316c5d7e
  421c2c:	sbb    BYTE PTR [ecx-0x2ab847e5],ch
  421c32:	mov    bl,0xae
  421c34:	add    al,0x9d
  421c36:	mov    eax,0xcbf749e6
  421c3b:	pop    ds
  421c3c:	add    eax,DWORD PTR [edi+0x11689120]
  421c42:	xor    dh,BYTE PTR [ebp-0x6fce668f]
  421c48:	push   ss
  421c49:	cmp    cl,BYTE PTR [edx-0x74114be2]
  421c4f:	sub    DWORD PTR [eax],eax
  421c51:	xlat   BYTE PTR ds:[ebx]
  421c52:	jne    0x421ca7
  421c54:	push   eax
  421c55:	dec    sp
  421c57:	jnp    0x421cc1
  421c59:	stos   DWORD PTR es:[edi],eax
  421c5a:	cmp    esi,DWORD PTR [ebp+0x1aaec5c0]
  421c60:	sahf   
  421c61:	jmp    0x9c3d849c
  421c66:	lea    edi,[ebx+0x58]
  421c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c6a:	dec    edi
  421c6b:	mov    dl,0x16
  421c6d:	sbb    BYTE PTR [edi+0x45],0x47
  421c71:	push   ds
  421c72:	loope  0x421ce2
  421c74:	cwde   
  421c75:	pop    ebx
  421c76:	jb     0x421c2a
  421c78:	shr    BYTE PTR [edx+0x1638743d],cl
  421c7e:	mov    al,0xac
  421c80:	mov    dh,0x5b
  421c82:	mov    edx,0x8dfc542e
  421c87:	call   0x7d87b69f
  421c8c:	mul    BYTE PTR [esi-0x1d404548]
  421c92:	test   BYTE PTR [ebp+0x1d],al
  421c95:	retf   0x94ad
  421c98:	fcmovnu st,st(5)
  421c9a:	push   ecx
  421c9b:	loope  0x421cf5
  421c9d:	(bad)  
  421c9e:	sub    al,0x7f
  421ca0:	pop    ss
  421ca1:	mov    edx,0x19293d9f
  421ca6:	shr    al,1
  421ca8:	sbb    al,ch
  421caa:	mov    ds:0x1094e4b7,al
  421caf:	sbb    DWORD PTR [edx],edx
  421cb1:	dec    edx
  421cb2:	fld    DWORD PTR [eax+0x4c]
  421cb5:	add    DWORD PTR [ebx],ebp
  421cb7:	iret   
  421cb8:	sub    DWORD PTR [ebx],ebx
  421cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cbb:	cmp    ecx,DWORD PTR [edi+eax*4-0x1349e4d6]
  421cc2:	jg     0x421cc5
  421cc4:	lahf   
  421cc5:	aas    
  421cc6:	aaa    
  421cc7:	test   al,0xa3
  421cc9:	push   edi
  421cca:	sqrtps xmm5,XMMWORD PTR [eax]
  421ccd:	mul    BYTE PTR [eax-0x4c]
  421cd0:	mov    al,ds:0x38bb616d
  421cd5:	std    
  421cd6:	retf   0x4420
  421cd9:	pop    es
  421cda:	outs   dx,DWORD PTR ds:[esi]
  421cdb:	sub    al,0x33
  421cdd:	nop
  421cde:	pop    esp
  421cdf:	enter  0x361b,0xbe
  421ce3:	push   0xffffffb0
  421ce5:	mov    WORD PTR [edx-0x53],gs
  421ce8:	or     DWORD PTR [ebx],edi
  421cea:	sbb    BYTE PTR [ebp-0x57e035f3],ch
  421cf0:	adc    bl,bh
  421cf2:	sbb    ecx,DWORD PTR [edi-0x20]
  421cf5:	ds ins BYTE PTR es:[edi],dx
  421cf7:	jmp    0x421d21
  421cf9:	(bad)  
  421cfa:	cmp    cl,BYTE PTR [esi-0x7a]
  421cfd:	mov    eax,0x516a671
  421d02:	xor    ch,BYTE PTR [eax-0x40]
  421d05:	outs   dx,DWORD PTR ds:[esi]
  421d06:	iret   
  421d07:	fmul   DWORD PTR [eax-0x1f]
  421d0a:	xchg   ebx,eax
  421d0b:	mov    ch,0x10
  421d0d:	inc    ebx
  421d0e:	mov    ebp,0x40ead471
  421d13:	mov    ds:0xf85e327,al
  421d18:	jbe    0x421cda
  421d1a:	aaa    
  421d1b:	cmp    cl,0x3
  421d1e:	pop    ds
  421d1f:	das    
  421d20:	js     0x421cad
  421d22:	mov    edx,0x31c97dc6
  421d27:	xchg   edi,eax
  421d28:	push   esi
  421d29:	dec    edi
  421d2a:	cmp    al,0x48
  421d2c:	fadd   QWORD PTR [edi]
  421d2e:	mov    ebx,0x8d9c3819
  421d33:	mov    WORD PTR [eax-0x62bf72c5],gs
  421d39:	cmp    dl,0x90
  421d3c:	xor    BYTE PTR [ebx+0x39ab8fe4],ch
  421d42:	xor    ebp,DWORD PTR [eax]
  421d44:	or     ecx,esi
  421d46:	repz jbe 0x421d8a
  421d49:	inc    edx
  421d4a:	inc    eax
  421d4b:	fcom   st(1)
  421d4d:	mov    edx,ebp
  421d4f:	cmp    eax,0x868aba79
  421d54:	int    0x97
  421d56:	jbe    0x421d30
  421d58:	push   cs
  421d59:	(bad)  
  421d5a:	push   ecx
  421d5b:	lds    edx,FWORD PTR [esi]
  421d5d:	pop    ss
  421d5e:	jno    0x421d93
  421d60:	icebp  
  421d61:	(bad)  
  421d62:	jp     0x421dca
  421d64:	adc    BYTE PTR [ecx+0x3a9f3205],bh
  421d6a:	es int3 
  421d6c:	out    dx,eax
  421d6d:	mov    WORD PTR [edx+0x9],cs
  421d70:	test   eax,0xe8dd95fc
  421d75:	mov    edx,ebx
  421d77:	jnp    0x421db1
  421d79:	icebp  
  421d7a:	repnz xor BYTE PTR [esi-0x6a],dh
  421d7e:	cmp    cl,al
  421d80:	icebp  
  421d81:	inc    ebp
  421d82:	mov    bl,0x2d
  421d84:	sbb    BYTE PTR [eax],ch
  421d86:	out    dx,eax
  421d87:	lods   al,BYTE PTR ds:[esi]
  421d88:	popa   
  421d89:	out    dx,al
  421d8a:	int    0x69
  421d8c:	sbb    DWORD PTR [edx],ebp
  421d8e:	push   ds
  421d8f:	pop    ss
  421d90:	loop   0x421de8
  421d92:	movd   mm2,DWORD PTR [esi-0x2e]
  421d96:	dec    edx
  421d97:	out    0x63,eax
  421d99:	test   edx,ecx
  421d9b:	mov    ?,WORD PTR [ebp+0x33ea9ce0]
  421da1:	in     eax,0x49
  421da3:	pop    eax
  421da4:	pop    ecx
  421da5:	sbb    DWORD PTR fs:[edi-0x8],ecx
  421da9:	aad    0x0
  421dab:	add    BYTE PTR [ebp-0x75],dl
  421dae:	in     al,dx
  421daf:	sub    esp,0x40
  421db2:	push   0xffffffa3
  421db4:	push   0x2f
  421db6:	call   0x424bfa
  421dbb:	add    esp,0x8
  421dbe:	push   ebx
  421dbf:	push   0xedee6100
  421dc4:	push   0x89029900
  421dc9:	push   0x8dca9600
  421dce:	push   0xffffffe6
  421dd0:	call   0x424fb8
  421dd5:	add    esp,0x10
  421dd8:	push   esi
  421dd9:	mov    eax,DWORD PTR ds:0x438044
  421ddf:	call   0x424286
  421de4:	push   edi
  421de5:	mov    eax,0x7c
  421dea:	push   0xf343ce00
  421def:	call   0x4252a2
  421df4:	add    esp,0x4
  421df7:	call   0x424bfa
  421dfc:	call   0x424fb8
  421e01:	xor    edx,edx
  421e03:	cmp    eax,DWORD PTR ds:0x438054
  421e09:	jne    0x421e1c
  421e0b:	push   0xffffffc9
  421e0d:	push   0xdb63700
  421e12:	push   0xffffff9e
  421e14:	call   0x424d2b
  421e19:	add    esp,0xc
  421e1c:	push   0x916d4a00
  421e21:	push   0xffffffc9
  421e23:	push   0x4967f300
  421e28:	push   0xc580f000
  421e2d:	push   0xc9712d00
  421e32:	call   0x424709
  421e37:	add    esp,0x14
  421e3a:	call   0x424d2b
  421e3f:	push   0xc30cb900
  421e44:	push   0xffffff95
  421e46:	push   0x8341ec00
  421e4b:	push   0x8
  421e4d:	call   0x42439b
  421e52:	add    esp,0x10
  421e55:	add    eax,eax
  421e57:	push   0x49463200
  421e5c:	push   0x3282b00
  421e61:	push   0x3599cd00
  421e66:	call   0x424fb8
  421e6b:	add    esp,0xc
  421e6e:	push   0x917ac500
  421e73:	push   0x19ec6800
  421e78:	push   0xffffffaa
  421e7a:	push   0x913c7400
  421e7f:	push   0x136c7800
  421e84:	call   0x42439b
  421e89:	add    esp,0x14
  421e8c:	mov    ebx,0x13
  421e91:	mov    DWORD PTR [ebp-0x1c],ebx
  421e94:	mov    ecx,DWORD PTR [ebp-0x1c]
  421e97:	cmp    eax,0xffffff85
  421e9a:	je     0x421ea6
  421e9c:	push   0x6
  421e9e:	call   0x424709
  421ea3:	add    esp,0x4
  421ea6:	mov    eax,DWORD PTR [ebp-0x1c]
  421ea9:	push   0x916e9300
  421eae:	push   0x11b83500
  421eb3:	push   0x928b400
  421eb8:	push   0x85920600
  421ebd:	push   0xe326c600
  421ec2:	call   0x424bfa
  421ec7:	add    esp,0x14
  421eca:	push   0xffffffd4
  421ecc:	push   0xffffffd6
  421ece:	call   0x4249b5
  421ed3:	add    esp,0x8
  421ed6:	push   0xffffffc4
  421ed8:	push   0xffffffcc
  421eda:	push   0xffffffb5
  421edc:	call   0x424709
  421ee1:	add    esp,0xc
  421ee4:	sub    ebx,eax
  421ee6:	push   0x916ae700
  421eeb:	push   0x24
  421eed:	push   0xffffffe7
  421eef:	push   0x47
  421ef1:	call   0x424fb8
  421ef6:	add    esp,0x10
  421ef9:	mov    esi,DWORD PTR [ebp-0x1c]
  421efc:	push   0x3dea9b00
  421f01:	call   0x424d2b
  421f06:	add    esp,0x4
  421f09:	mov    DWORD PTR [ebp-0x1c],esi
  421f0c:	cmp    ebx,DWORD PTR ds:0x438068
  421f12:	je     0x421f6f
  421f14:	push   0x1b
  421f16:	push   0x34
  421f18:	push   0xdddd7500
  421f1d:	call   0x424bfa
  421f22:	add    esp,0xc
  421f25:	call   0x424bfa
  421f2a:	push   0xffffff82
  421f2c:	push   0xfded0900
  421f31:	push   0xfffffff7
  421f33:	push   0x4f
  421f35:	call   0x424fb8
  421f3a:	add    esp,0x10
  421f3d:	sub    ebx,eax
  421f3f:	push   0x4c
  421f41:	push   0x89f10f00
  421f46:	call   0x424286
  421f4b:	add    esp,0x8
  421f4e:	push   0x9fbff00
  421f53:	push   0x83190300
  421f58:	push   0x29b86200
  421f5d:	push   0xffffffdc
  421f5f:	push   0x21e82b00
  421f64:	call   0x424fb8
  421f69:	add    esp,0x14
  421f6c:	or     DWORD PTR [ebp-0x1c],ebx
  421f6f:	push   0x25c0ee00
  421f74:	call   0x424709
  421f79:	add    esp,0x4
  421f7c:	push   0x8df6c100
  421f81:	push   0xb1496000
  421f86:	push   0x26
  421f88:	push   0x2d8a3400
  421f8d:	push   0x66
  421f8f:	call   0x4252a2
  421f94:	add    esp,0x14
  421f97:	push   0xffffffa6
  421f99:	push   0x493ea500
  421f9e:	push   0xc
  421fa0:	call   0x424d2b
  421fa5:	add    esp,0xc
  421fa8:	push   0x2c
  421faa:	push   0xed809300
  421faf:	push   0x53098b00
  421fb4:	call   0x424bfa
  421fb9:	add    esp,0xc
  421fbc:	push   0xc
  421fbe:	push   0xddc30600
  421fc3:	push   0xf
  421fc5:	call   0x4252a2
  421fca:	add    esp,0xc
  421fcd:	push   0xffffffc4
  421fcf:	push   0xffffffff
  421fd1:	call   0x4250fa
  421fd6:	add    esp,0x8
  421fd9:	call   0x424709
  421fde:	push   0x76
  421fe0:	push   0x901c200
  421fe5:	push   0x9
  421fe7:	push   0xffffff95
  421fe9:	push   0xffffffa0
  421feb:	call   0x424286
  421ff0:	add    esp,0x14
  421ff3:	push   0x7db05900
  421ff8:	push   0xffffff90
  421ffa:	call   0x424286
  421fff:	add    esp,0x8
  422002:	push   0xe9956400
  422007:	push   0xffffffdc
  422009:	push   0x912fb600
  42200e:	push   0xfffffff9
  422010:	call   0x4250fa
  422015:	add    esp,0x10
  422018:	push   0xfffffffd
  42201a:	push   0x29c7a400
  42201f:	call   0x424fb8
  422024:	add    esp,0x8
  422027:	call   0x424bfa
  42202c:	cmp    eax,0x66
  42202f:	je     0x422040
  422031:	push   0x24
  422033:	push   0xc35afb00
  422038:	call   0x4252a2
  42203d:	add    esp,0x8
  422040:	call   0x4249b5
  422045:	push   0x65878400
  42204a:	call   0x424fb8
  42204f:	add    esp,0x4
  422052:	push   0xffffffef
  422054:	push   0x5c
  422056:	push   0x7b
  422058:	call   0x4252a2
  42205d:	add    esp,0xc
  422060:	push   0xffffffc9
  422062:	push   0xffffffbd
  422064:	push   0x315d4400
  422069:	call   0x4252a2
  42206e:	add    esp,0xc
  422071:	push   0x64
  422073:	push   0xffffffb3
  422075:	push   0xd9d6d300
  42207a:	call   0x4252a2
  42207f:	add    esp,0xc
  422082:	push   0x438054
  422087:	call   DWORD PTR ds:0x4358c0
  42208d:	add    DWORD PTR [ebp-0x1c],ebx
  422090:	cmp    eax,0xffffffe9
  422093:	jne    0x42212c
  422099:	and    ebx,eax
  42209b:	add    ebx,esi
  42209d:	and    DWORD PTR [ebp-0x1c],ebx
  4220a0:	mov    eax,DWORD PTR ds:0x438054
  4220a6:	and    eax,ebx
  4220a8:	cmp    eax,esi
  4220aa:	je     0x4220b6
  4220ac:	push   0x5d
  4220ae:	call   0x424709
  4220b3:	add    esp,0x4
  4220b6:	push   0x65803300
  4220bb:	push   0xc1aec000
  4220c0:	call   0x4249b5
  4220c5:	add    esp,0x8
  4220c8:	push   0x18
  4220ca:	push   0x53
  4220cc:	push   0x1f5f100
  4220d1:	push   0x9409700
  4220d6:	call   0x4252a2
  4220db:	add    esp,0x10
  4220de:	mov    eax,0x1e
  4220e3:	mov    esi,eax
  4220e5:	mov    edx,DWORD PTR [ebp-0x1c]
  4220e8:	sub    DWORD PTR [ebp-0x1c],eax
  4220eb:	test   edx,0x8e
  4220f1:	je     0x422121
  4220f3:	xor    ecx,ecx
  4220f5:	sub    DWORD PTR [ebp-0x1c],esi
  4220f8:	sub    edx,ebx
  4220fa:	add    edx,ebx
  4220fc:	and    DWORD PTR [ebp-0x1c],edx
  4220ff:	mov    edx,DWORD PTR [ebp-0x1c]
  422102:	cmp    edx,0x43
  422105:	je     0x422121
  422107:	add    ecx,esi
  422109:	mov    ebx,DWORD PTR ds:0x438044
  42210f:	mov    esi,ebx
  422111:	sub    esi,eax
  422113:	mov    DWORD PTR [ebp-0x1c],ecx
  422116:	and    DWORD PTR [ebp-0x1c],esi
  422119:	cmp    edx,0xffffffb3
  42211c:	je     0x422121
  42211e:	sub    DWORD PTR [ebp-0x1c],edx
  422121:	mov    esi,ecx
  422123:	add    DWORD PTR [ebp-0x1c],esi
  422126:	mov    DWORD PTR [ebp-0x8],eax
  422129:	xor    DWORD PTR [ebp-0x1c],ecx
  42212c:	call   0x424bfa
  422131:	push   0x3270700
  422136:	push   0xf1eb1500
  42213b:	push   0x5309fb00
  422140:	push   0xffffff8f
  422142:	push   0xffffffd2
  422144:	call   0x4250fa
  422149:	add    esp,0x14
  42214c:	push   0x19
  42214e:	push   0x6c
  422150:	call   0x424d2b
  422155:	add    esp,0x8
  422158:	push   0xc3615b00
  42215d:	push   0xffffffe8
  42215f:	push   0x916f4700
  422164:	push   0xffffffec
  422166:	push   0xffffffcc
  422168:	call   0x424bfa
  42216d:	add    esp,0x14
  422170:	call   DWORD PTR ds:0x4358e8
  422176:	or     DWORD PTR [ebp-0x1c],eax
  422179:	mov    DWORD PTR [ebp-0x20],eax
  42217c:	mov    edi,DWORD PTR [ebp-0x1c]
  42217f:	sub    edi,ebx
  422181:	push   0x5e0af00
  422186:	push   0x91267800
  42218b:	push   0xf35b3d00
  422190:	push   0x8948d300
  422195:	call   0x424286
  42219a:	add    esp,0x10
  42219d:	cmp    edi,esi
  42219f:	jne    0x4223e5
  4221a5:	mov    eax,DWORD PTR [ebp-0x1c]
  4221a8:	push   0x8964cb00
  4221ad:	push   0x5b
  4221af:	push   0x31df6100
  4221b4:	push   0x35e5d800
  4221b9:	push   0x17
  4221bb:	call   0x424fb8
  4221c0:	add    esp,0x14
  4221c3:	call   0x424286
  4221c8:	call   0x424fb8
  4221cd:	sub    edi,esi
  4221cf:	mov    esi,0xe1
  4221d4:	add    DWORD PTR [ebp-0x1c],edi
  4221d7:	call   0x424bfa
  4221dc:	push   0x28
  4221de:	push   0x6
  4221e0:	push   0x19
  4221e2:	call   0x4250fa
  4221e7:	add    esp,0xc
  4221ea:	push   0xd1b3bb00
  4221ef:	push   0x69
  4221f1:	push   0xf1fb5b00
  4221f6:	push   0x49511f00
  4221fb:	push   0x9422900
  422200:	call   0x42439b
  422205:	add    esp,0x14
  422208:	push   0x20
  42220a:	call   0x4252a2
  42220f:	add    esp,0x4
  422212:	sub    DWORD PTR [ebp-0x1c],ebx
  422215:	push   0x9e46b00
  42221a:	push   0x34
  42221c:	push   0x334f0f00
  422221:	push   0x9125ca00
  422226:	push   0x837f3000
  42222b:	call   0x4249b5
  422230:	add    esp,0x14
  422233:	push   0xffffff8d
  422235:	push   0xffffff81
  422237:	push   0x19994f00
  42223c:	push   0x73729700
  422241:	push   0x49104800
  422246:	call   0x424bfa
  42224b:	add    esp,0x14
  42224e:	push   0xddb34800
  422253:	push   0x233e8500
  422258:	push   0x59c17b00
  42225d:	push   0xe98f5500
  422262:	call   0x42439b
  422267:	add    esp,0x10
  42226a:	push   0x6d
  42226c:	push   0xffffffc2
  42226e:	call   0x4250fa
  422273:	add    esp,0x8
  422276:	and    esi,edi
  422278:	push   0x13
  42227a:	push   0xffffff8e
  42227c:	push   0xffffffc1
  42227e:	push   0x6dfb6d00
  422283:	push   0xffffffa8
  422285:	call   0x424d2b
  42228a:	add    esp,0x14
  42228d:	and    esi,ebx
  42228f:	cmp    esi,edi
  422291:	je     0x4223e5
  422297:	push   0x21f42b00
  42229c:	push   0x8
  42229e:	push   0xfffffff1
  4222a0:	push   0xffffffd8
  4222a2:	call   0x4252a2
  4222a7:	add    esp,0x10
  4222aa:	mov    edi,DWORD PTR [ebp-0x1c]
  4222ad:	push   0x3e
  4222af:	push   0x20
  4222b1:	call   0x4250fa
  4222b6:	add    esp,0x8
  4222b9:	add    edi,esi
  4222bb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4222be:	push   0xffffffca
  4222c0:	push   0xffffff99
  4222c2:	push   0xf5a63200
  4222c7:	push   0xe9bb6500
  4222cc:	call   0x42439b
  4222d1:	add    esp,0x10
  4222d4:	cmp    edi,DWORD PTR ds:0x438044
  4222da:	je     0x4223e5
  4222e0:	call   0x4252a2
  4222e5:	cmp    esi,0x19
  4222e8:	je     0x4223e5
  4222ee:	push   0x65a47600
  4222f3:	call   0x424709
  4222f8:	add    esp,0x4
  4222fb:	push   0x8587b300
  422300:	push   0xffffffa8
  422302:	call   0x42439b
  422307:	add    esp,0x8
  42230a:	push   0xffffffbe
  42230c:	call   0x4252a2
  422311:	add    esp,0x4
  422314:	push   0xffffffd8
  422316:	call   0x4252a2
  42231b:	add    esp,0x4
  42231e:	call   0x424709
  422323:	mov    eax,DWORD PTR [ebp-0x1c]
  422326:	push   0x0
  422328:	push   0xffffffe4
  42232a:	push   0xffffffab
  42232c:	push   0xc1e6d900
  422331:	push   0x85b91800
  422336:	call   0x424fb8
  42233b:	add    esp,0x14
  42233e:	push   0x39
  422340:	push   0xa3265400
  422345:	call   0x4250fa
  42234a:	add    esp,0x8
  42234d:	mov    ebx,0xaf
  422352:	push   0xffffff93
  422354:	push   0x1dcfaa00
  422359:	call   0x424286
  42235e:	add    esp,0x8
  422361:	add    ebx,ebx
  422363:	call   0x4252a2
  422368:	push   0x17
  42236a:	push   0xffffffc3
  42236c:	push   0x6dd81100
  422371:	push   0x734c3300
  422376:	call   0x424286
  42237b:	add    esp,0x10
  42237e:	push   0xffffffd5
  422380:	push   0x935b5f00
  422385:	call   0x4250fa
  42238a:	add    esp,0x8
  42238d:	push   0xffffffd0
  42238f:	call   0x4249b5
  422394:	add    esp,0x4
  422397:	or     DWORD PTR [ebp-0x1c],ebx
  42239a:	push   0xffffffae
  42239c:	push   0x2344df00
  4223a1:	push   0xffffffab
  4223a3:	push   0xffffff80
  4223a5:	call   0x424d2b
  4223aa:	add    esp,0x10
  4223ad:	add    DWORD PTR [ebp-0x1c],eax
  4223b0:	call   0x424fb8
  4223b5:	push   0xffffff80
  4223b7:	call   0x4249b5
  4223bc:	add    esp,0x4
  4223bf:	push   0x1b06500
  4223c4:	call   0x424286
  4223c9:	add    esp,0x4
  4223cc:	push   0xffffff9f
  4223ce:	push   0x2c
  4223d0:	push   0xb5ebab00
  4223d5:	push   0x69956500
  4223da:	call   0x4252a2
  4223df:	add    esp,0x10
  4223e2:	and    DWORD PTR [ebp-0x1c],edi
  4223e5:	push   0xffffffe1
  4223e7:	push   0xffffff85
  4223e9:	push   0x9154eb00
  4223ee:	call   0x424bfa
  4223f3:	add    esp,0xc
  4223f6:	push   0x35
  4223f8:	push   0x0
  4223fa:	call   DWORD PTR ds:0x4358d4
  422400:	mov    ebx,edi
  422402:	mov    ecx,eax
  422404:	sub    ecx,eax
  422406:	cmp    edi,DWORD PTR [ebp-0x10]
  422409:	jne    0x42241b
  42240b:	mov    edi,eax
  42240d:	and    edi,ebx
  42240f:	add    DWORD PTR [ebp-0x1c],edi
  422412:	mov    esi,DWORD PTR [ebp-0x1c]
  422415:	add    DWORD PTR [ebp-0x1c],esi
  422418:	add    DWORD PTR [ebp-0x1c],ecx
  42241b:	cmp    eax,0xffffffe7
  42241e:	je     0x422654
  422424:	push   0xffffffae
  422426:	push   0x23
  422428:	push   0x1daa6600
  42242d:	call   0x42439b
  422432:	add    esp,0xc
  422435:	mov    esi,DWORD PTR ds:0x438068
  42243b:	sub    eax,edi
  42243d:	push   0xffffff88
  42243f:	push   0xd1fee500
  422444:	push   0xffffff84
  422446:	push   0x75ed2b00
  42244b:	push   0x75a66300
  422450:	call   0x4249b5
  422455:	add    esp,0x14
  422458:	push   0x61809900
  42245d:	push   0x79
  42245f:	call   0x4252a2
  422464:	add    esp,0x8
  422467:	mov    edx,DWORD PTR [ebp-0x1c]
  42246a:	mov    edi,DWORD PTR [ebp-0x1c]
  42246d:	sub    DWORD PTR [ebp-0x1c],edx
  422470:	call   0x42439b
  422475:	and    edi,ebx
  422477:	sub    edi,esi
  422479:	call   0x424fb8
  42247e:	push   0xffffff8b
  422480:	push   0xe37ecf00
  422485:	call   0x424bfa
  42248a:	add    esp,0x8
  42248d:	push   0xffffff98
  42248f:	push   0xb9eb4400
  422494:	call   0x4250fa
  422499:	add    esp,0x8
  42249c:	push   0xffffffdf
  42249e:	push   0x9e52c00
  4224a3:	push   0xdd9a8200
  4224a8:	call   0x4252a2
  4224ad:	add    esp,0xc
  4224b0:	push   0x5
  4224b2:	push   0x59
  4224b4:	push   0xc940ab00
  4224b9:	push   0x3a
  4224bb:	push   0x5b
  4224bd:	call   0x4252a2
  4224c2:	add    esp,0x14
  4224c5:	push   0x53789b00
  4224ca:	push   0x9013b00
  4224cf:	push   0xf325cf00
  4224d4:	push   0xffffffa2
  4224d6:	call   0x424fb8
  4224db:	add    esp,0x10
  4224de:	cmp    edi,0x45
  4224e1:	je     0x4225b4
  4224e7:	push   0xffffffc1
  4224e9:	push   0xffffffd7
  4224eb:	call   0x4250fa
  4224f0:	add    esp,0x8
  4224f3:	push   0x25
  4224f5:	push   0x45ef2300
  4224fa:	push   0x24
  4224fc:	call   0x424bfa
  422501:	add    esp,0xc
  422504:	mov    ebx,DWORD PTR [ebp-0x1c]
  422507:	mov    eax,DWORD PTR [ebp-0x1c]
  42250a:	call   0x4250fa
  42250f:	push   0x91455f00
  422514:	push   0xf9cf2400
  422519:	call   0x4250fa
  42251e:	add    esp,0x8
  422521:	push   0x6d
  422523:	push   0x13301a00
  422528:	push   0xf1a4fd00
  42252d:	call   0x4252a2
  422532:	add    esp,0xc
  422535:	push   0x56
  422537:	push   0xfffffff8
  422539:	push   0xffffffa1
  42253b:	push   0xffffffad
  42253d:	call   0x4252a2
  422542:	add    esp,0x10
  422545:	push   0xffffffc7
  422547:	push   0x57
  422549:	call   0x424fb8
  42254e:	add    esp,0x8
  422551:	add    ebx,esi
  422553:	push   0xffffffec
  422555:	push   0xfffffff5
  422557:	push   0x35b4c200
  42255c:	push   0x55
  42255e:	call   0x4249b5
  422563:	add    esp,0x10
  422566:	or     DWORD PTR [ebp-0x1c],ebx
  422569:	call   0x42439b
  42256e:	push   0x61
  422570:	push   0xffffff8a
  422572:	push   0x1373c100
  422577:	push   0x5c08000
  42257c:	push   0x8302d600
  422581:	call   0x424286
  422586:	add    esp,0x14
  422589:	push   0xffffff81
  42258b:	push   0xffffffac
  42258d:	push   0x49
  42258f:	push   0xffffffdf
  422591:	call   0x424709
  422596:	add    esp,0x10
  422599:	push   0x50
  42259b:	push   0x47
  42259d:	push   0x31
  42259f:	push   0xcdd98900
  4225a4:	push   0x9103b700
  4225a9:	call   0x424bfa
  4225ae:	add    esp,0x14
  4225b1:	add    DWORD PTR [ebp-0x1c],edi
  4225b4:	push   0x23224800
  4225b9:	push   0x49e66700
  4225be:	push   0xffffffe8
  4225c0:	push   0xb37e9400
  4225c5:	push   0x29
  4225c7:	call   0x424709
  4225cc:	add    esp,0x14
  4225cf:	mov    ebx,esi
  4225d1:	mov    eax,0x29
  4225d6:	push   0x2f
  4225d8:	push   0x6991ca00
  4225dd:	push   0xc3784e00
  4225e2:	call   0x42439b
  4225e7:	add    esp,0xc
  4225ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4225ed:	push   0x61e7c400
  4225f2:	push   0xc95ca500
  4225f7:	push   0xffffff9f
  4225f9:	call   0x4250fa
  4225fe:	add    esp,0xc
  422601:	add    ebx,esi
  422603:	mov    ecx,DWORD PTR [ebp-0x1c]
  422606:	call   0x424fb8
  42260b:	push   0xc
  42260d:	push   0xffffffe5
  42260f:	push   0x6dad6600
  422614:	push   0x533d2f00
  422619:	call   0x4250fa
  42261e:	add    esp,0x10
  422621:	mov    ecx,DWORD PTR [ebp-0x1c]
  422624:	call   0x424286
  422629:	push   0x4341bd00
  42262e:	push   0x15
  422630:	push   0xa
  422632:	push   0x3152ae00
  422637:	call   0x4250fa
  42263c:	add    esp,0x10
  42263f:	mov    DWORD PTR [ebp-0x30],ebx
  422642:	push   0x900ae00
  422647:	push   0x8959a400
  42264c:	call   0x4252a2
  422651:	add    esp,0x8
  422654:	mov    edx,0x30
  422659:	push   0xfffffffe
  42265b:	call   0x424fb8
  422660:	add    esp,0x4
  422663:	push   0x7d
  422665:	call   0x424709
  42266a:	add    esp,0x4
  42266d:	push   0xffffffd1
  42266f:	push   0xc91d6300
  422674:	push   0x7b
  422676:	push   0xffffffea
  422678:	push   0xffffffa7
  42267a:	call   0x424bfa
  42267f:	add    esp,0x14
  422682:	push   0xffffff9e
  422684:	push   0x936d2700
  422689:	push   0x1d85c400
  42268e:	push   0xffffff97
  422690:	push   0x89006800
  422695:	call   0x424286
  42269a:	add    esp,0x14
  42269d:	call   DWORD PTR ds:0x435900
  4226a3:	add    DWORD PTR [ebp-0x1c],edi
  4226a6:	cmp    eax,0x8
  4226a9:	jne    0x422949
  4226af:	sub    DWORD PTR [ebp-0x1c],eax
  4226b2:	mov    esi,0x25
  4226b7:	sub    DWORD PTR [ebp-0x1c],esi
  4226ba:	cmp    edi,0x23
  4226bd:	je     0x4226c4
  4226bf:	and    esi,ebx
  4226c1:	sub    DWORD PTR [ebp-0x1c],esi
  4226c4:	push   0x5c
  4226c6:	push   0x95c90300
  4226cb:	call   0x4250fa
  4226d0:	add    esp,0x8
  4226d3:	mov    esi,0x6c
  4226d8:	sub    edi,ebx
  4226da:	mov    ebx,DWORD PTR ds:0x438044
  4226e0:	push   0xf99b4d00
  4226e5:	call   0x4250fa
  4226ea:	add    esp,0x4
  4226ed:	call   0x42439b
  4226f2:	push   0xdde5de00
  4226f7:	call   0x4252a2
  4226fc:	add    esp,0x4
  4226ff:	push   0xb129ee00
  422704:	push   0xffffffa0
  422706:	push   0x78
  422708:	call   0x424d2b
  42270d:	add    esp,0xc
  422710:	push   0xd997e800
  422715:	call   0x4249b5
  42271a:	add    esp,0x4
  42271d:	sub    DWORD PTR [ebp-0x1c],esi
  422720:	mov    eax,0xeb
  422725:	push   0xffffffa3
  422727:	push   0x63
  422729:	push   0xa1a07800
  42272e:	call   0x424286
  422733:	add    esp,0xc
  422736:	and    edi,eax
  422738:	push   0xffffffbb
  42273a:	push   0x317d8500
  42273f:	push   0xb12bcb00
  422744:	push   0x45f4e600
  422749:	push   0xf9e00f00
  42274e:	call   0x4249b5
  422753:	add    esp,0x14
  422756:	push   0x9160c500
  42275b:	call   0x4252a2
  422760:	add    esp,0x4
  422763:	mov    DWORD PTR [ebp-0x1c],ebx
  422766:	push   0x31e17600
  42276b:	push   0xffffffcd
  42276d:	push   0x4c
  42276f:	push   0x36a9000
  422774:	call   0x424fb8
  422779:	add    esp,0x10
  42277c:	push   0x23506100
  422781:	push   0x25c7b100
  422786:	call   0x4249b5
  42278b:	add    esp,0x8
  42278e:	sub    edi,esi
  422790:	cmp    edi,DWORD PTR ds:0x438044
  422796:	je     0x4228d8
  42279c:	push   0x89f9a500
  4227a1:	call   0x42439b
  4227a6:	add    esp,0x4
  4227a9:	mov    ebx,esi
  4227ab:	push   0x2c
  4227ad:	push   0x78
  4227af:	push   0xd
  4227b1:	call   0x424fb8
  4227b6:	add    esp,0xc
  4227b9:	push   0x9ca8600
  4227be:	push   0x91327a00
  4227c3:	call   0x4250fa
  4227c8:	add    esp,0x8
  4227cb:	push   0x42
  4227cd:	call   0x424bfa
  4227d2:	add    esp,0x4
  4227d5:	add    ebx,esi
  4227d7:	and    DWORD PTR [ebp-0x1c],ebx
  4227da:	push   0x9115a100
  4227df:	push   0x61
  4227e1:	push   0x75f72700
  4227e6:	call   0x42439b
  4227eb:	add    esp,0xc
  4227ee:	push   0x2da00300
  4227f3:	call   0x424fb8
  4227f8:	add    esp,0x4
  4227fb:	push   0x2a
  4227fd:	push   0x5b
  4227ff:	call   0x424bfa
  422804:	add    esp,0x8
  422807:	push   0x2a
  422809:	push   0xb1290e00
  42280e:	call   0x424286
  422813:	add    esp,0x8
  422816:	mov    ecx,DWORD PTR [ebp-0x1c]
  422819:	push   0xb1af8f00
  42281e:	push   0x136b2f00
  422823:	push   0xc938ea00
  422828:	push   0x55dd9e00
  42282d:	push   0x10
  42282f:	call   0x4250fa
  422834:	add    esp,0x14
  422837:	and    edi,esi
  422839:	call   0x424286
  42283e:	sub    edi,esi
  422840:	push   0xffffffe2
  422842:	push   0x63
  422844:	push   0xc92b5500
  422849:	push   0xc
  42284b:	push   0xffffffa5
  42284d:	call   0x424d2b
  422852:	add    esp,0x14
  422855:	push   0x5df55400
  42285a:	push   0x59d1c400
  42285f:	push   0xffffffab
  422861:	push   0x23603300
  422866:	call   0x424d2b
  42286b:	add    esp,0x10
  42286e:	cmp    edi,0x2ec0
  422874:	je     0x4228d8
  422876:	mov    edx,DWORD PTR [ebp-0x1c]
  422879:	push   0xf1feb200
  42287e:	push   0xc964b100
  422883:	push   0xffffffb8
  422885:	push   0x1f
  422887:	call   0x4252a2
  42288c:	add    esp,0x10
  42288f:	mov    edx,DWORD PTR [ebp-0x1c]
  422892:	push   0x33603f00
  422897:	push   0xa1ec5800
  42289c:	call   0x424286
  4228a1:	add    esp,0x8
  4228a4:	push   0xffffffd4
  4228a6:	push   0xd
  4228a8:	push   0xffffffe0
  4228aa:	push   0x3c
  4228ac:	call   0x4250fa
  4228b1:	add    esp,0x10
  4228b4:	sub    DWORD PTR [ebp-0x1c],ebx
  4228b7:	push   0xedfe6c00
  4228bc:	push   0x5f0fe00
  4228c1:	push   0x89101100
  4228c6:	push   0x7f
  4228c8:	call   0x42439b
  4228cd:	add    esp,0x10
  4228d0:	call   0x424709
  4228d5:	add    DWORD PTR [ebp-0x1c],edi
  4228d8:	push   0x49460700
  4228dd:	push   0x9db4b200
  4228e2:	push   0x31274800
  4228e7:	push   0x34
  4228e9:	call   0x424d2b
  4228ee:	add    esp,0x10
  4228f1:	push   0xffffffd6
  4228f3:	push   0xa9a44300
  4228f8:	call   0x424709
  4228fd:	add    esp,0x8
  422900:	push   0x42
  422902:	push   0x65b6ed00
  422907:	push   0x5a
  422909:	push   0x33
  42290b:	call   0x424d2b
  422910:	add    esp,0x10
  422913:	add    esi,esi
  422915:	call   0x424bfa
  42291a:	mov    eax,DWORD PTR ds:0x438068
  422920:	push   0xe5dfdb00
  422925:	push   0x91115d00
  42292a:	push   0x3338e00
  42292f:	call   0x42439b
  422934:	add    esp,0xc
  422937:	mov    DWORD PTR [ebp-0x34],esi
  42293a:	push   0xd
  42293c:	call   0x424d2b
  422941:	add    esp,0x4
  422944:	call   0x4250fa
  422949:	sub    DWORD PTR [ebp-0x1c],edi
  42294c:	add    DWORD PTR [ebp-0x1c],ebx
  42294f:	mov    edi,DWORD PTR [ebp-0x1c]
  422952:	mov    ecx,edi
  422954:	call   0x4252a2
  422959:	push   0xb9a14500
  42295e:	push   0x18
  422960:	push   0xfffffffb
  422962:	call   0x424286
  422967:	add    esp,0xc
  42296a:	push   0x45a36c00
  42296f:	push   0xffffff9c
  422971:	push   0xffffffc3
  422973:	push   0x8da33a00
  422978:	push   0xffffffe6
  42297a:	call   0x424d2b
  42297f:	add    esp,0x14
  422982:	push   0xf59ad100
  422987:	call   0x4249b5
  42298c:	add    esp,0x4
  42298f:	push   0xadb86900
  422994:	call   0x424fb8
  422999:	add    esp,0x4
  42299c:	mov    ebx,DWORD PTR ds:0x438044
  4229a2:	call   0x424d2b
  4229a7:	push   0xffffff9b
  4229a9:	push   0x9d864900
  4229ae:	push   0x3a
  4229b0:	push   0x5
  4229b2:	call   0x424709
  4229b7:	add    esp,0x10
  4229ba:	xor    edx,edx
  4229bc:	push   0x39bf2c00
  4229c1:	push   0x39e65200
  4229c6:	call   0x4252a2
  4229cb:	add    esp,0x8
  4229ce:	push   0xffffff85
  4229d0:	call   0x42439b
  4229d5:	add    esp,0x4
  4229d8:	cmp    eax,esi
  4229da:	je     0x4229df
  4229dc:	sub    DWORD PTR [ebp-0x1c],ebx
  4229df:	push   0xdd9c1f00
  4229e4:	push   0x15bf3700
  4229e9:	push   0xffffffba
  4229eb:	call   0x424bfa
  4229f0:	add    esp,0xc
  4229f3:	push   0xffffffa4
  4229f5:	call   0x4249b5
  4229fa:	add    esp,0x4
  4229fd:	push   0xe377f600
  422a02:	push   0xd1fee500
  422a07:	push   0x910ba00
  422a0c:	push   0xffffff81
  422a0e:	push   0xffffffe2
  422a10:	call   0x424286
  422a15:	add    esp,0x14
  422a18:	push   0xffffffb4
  422a1a:	call   0x424bfa
  422a1f:	add    esp,0x4
  422a22:	push   0x51adb800
  422a27:	push   0xffffffe6
  422a29:	push   0x79
  422a2b:	push   0xffffffa0
  422a2d:	push   0xffffff97
  422a2f:	call   0x424d2b
  422a34:	add    esp,0x14
  422a37:	and    eax,edi
  422a39:	test   eax,0x9
  422a3e:	je     0x422a7f
  422a40:	mov    esi,0x26
  422a45:	xor    edi,edi
  422a47:	push   0x63385b00
  422a4c:	push   0xffffff8c
  422a4e:	push   0xffffffcf
  422a50:	push   0xffffffc2
  422a52:	call   0x4249b5
  422a57:	add    esp,0x10
  422a5a:	push   0x9
  422a5c:	call   0x4250fa
  422a61:	add    esp,0x4
  422a64:	add    esi,eax
  422a66:	sub    DWORD PTR [ebp-0x1c],edi
  422a69:	push   0xffffffd2
  422a6b:	push   0x1b
  422a6d:	push   0x61f3e500
  422a72:	call   0x424fb8
  422a77:	add    esp,0xc
  422a7a:	sub    esi,ebx
  422a7c:	sub    DWORD PTR [ebp-0x1c],esi
  422a7f:	call   0x42439b
  422a84:	call   0x424bfa
  422a89:	push   0x35cb1100
  422a8e:	push   0xffffffb5
  422a90:	push   0x1dc46d00
  422a95:	push   0xe3522800
  422a9a:	call   0x42439b
  422a9f:	add    esp,0x10
  422aa2:	push   0x3376ae00
  422aa7:	push   0x4945cf00
  422aac:	push   0x736c6200
  422ab1:	call   0x424d2b
  422ab6:	add    esp,0xc
  422ab9:	add    DWORD PTR [ebp-0x1c],eax
  422abc:	push   0x9174b500
  422ac1:	push   0xdd950300
  422ac6:	push   0x31bbaf00
  422acb:	call   0x424286
  422ad0:	add    esp,0xc
  422ad3:	call   0x424bfa
  422ad8:	mov    ecx,DWORD PTR [ebp-0x1c]
  422adb:	push   0x43
  422add:	push   0x23132200
  422ae2:	push   0xffffffc2
  422ae4:	push   0x5e
  422ae6:	push   0x79f46a00
  422aeb:	call   0x42439b
  422af0:	add    esp,0x14
  422af3:	push   0xffffff8b
  422af5:	push   0xb15b8900
  422afa:	call   0x4249b5
  422aff:	add    esp,0x8
  422b02:	add    DWORD PTR [ebp-0x1c],edi
  422b05:	mov    edx,DWORD PTR [ebp-0x1c]
  422b08:	push   0xffffff8a
  422b0a:	push   0x6c
  422b0c:	push   0xffffffcb
  422b0e:	call   0x4249b5
  422b13:	add    esp,0xc
  422b16:	push   0x316f2200
  422b1b:	push   0x89254f00
  422b20:	push   0xffffffc6
  422b22:	push   0xffffff8b
  422b24:	call   0x4252a2
  422b29:	add    esp,0x10
  422b2c:	push   0xf185e700
  422b31:	call   0x424d2b
  422b36:	add    esp,0x4
  422b39:	push   0x39d9d300
  422b3e:	push   0xede83600
  422b43:	call   0x4252a2
  422b48:	add    esp,0x8
  422b4b:	push   0xe5f16900
  422b50:	push   0xb307bb00
  422b55:	push   0xffffffc1
  422b57:	push   0x7e
  422b59:	call   0x424d2b
  422b5e:	add    esp,0x10
  422b61:	call   0x424fb8
  422b66:	sub    DWORD PTR [ebp-0x1c],edi
  422b69:	push   0xffffffac
  422b6b:	call   0x424bfa
  422b70:	add    esp,0x4
  422b73:	push   0x39
  422b75:	call   0x42439b
  422b7a:	add    esp,0x4
  422b7d:	lea    edi,[ebp-0x2c]
  422b80:	mov    ebx,DWORD PTR [ebp-0x1c]
  422b83:	push   0x49337100
  422b88:	push   0x897ecf00
  422b8d:	push   0x71d2a600
  422b92:	push   0x39
  422b94:	push   0xf3418100
  422b99:	call   0x424d2b
  422b9e:	add    esp,0x14
  422ba1:	mov    ecx,DWORD PTR ds:0x438068
  422ba7:	push   0x75
  422ba9:	call   0x42439b
  422bae:	add    esp,0x4
  422bb1:	call   0x424bfa
  422bb6:	push   0x558ce700
  422bbb:	push   0xffffffb7
  422bbd:	push   0xf5829500
  422bc2:	push   0x398d0a00
  422bc7:	call   0x424709
  422bcc:	add    esp,0x10
  422bcf:	sub    DWORD PTR [ebp-0x1c],ebx
  422bd2:	push   0x71b8d300
  422bd7:	push   0x9353d900
  422bdc:	push   0xf1ce1a00
  422be1:	push   0x55c9da00
  422be6:	call   0x4250fa
  422beb:	add    esp,0x10
  422bee:	push   0xffffffda
  422bf0:	push   0xf3203f00
  422bf5:	call   0x424286
  422bfa:	add    esp,0x8
  422bfd:	push   edi
  422bfe:	push   0x2d
  422c00:	push   0xffffffc1
  422c02:	push   0x52
  422c04:	push   0xfffffff4
  422c06:	push   0x63689e00
  422c0b:	call   0x424709
  422c10:	add    esp,0x14
  422c13:	push   0xffffffdb
  422c15:	push   0xffffffa6
  422c17:	call   0x42439b
  422c1c:	add    esp,0x8
  422c1f:	push   0x735bc55f
  422c24:	push   0x32
  422c26:	push   0x14
  422c28:	push   0x4de8e200
  422c2d:	push   0x49402a00
  422c32:	call   0x424d2b
  422c37:	add    esp,0x10
  422c3a:	push   0x2a
  422c3c:	push   0x60
  422c3e:	push   0x64
  422c40:	push   0xffffffd7
  422c42:	call   0x4250fa
  422c47:	add    esp,0x10
  422c4a:	push   0x6
  422c4c:	push   0x29800100
  422c51:	push   0x63
  422c53:	push   0x14
  422c55:	call   0x424286
  422c5a:	add    esp,0x10
  422c5d:	push   0x346c800
  422c62:	call   0x424d2b
  422c67:	add    esp,0x4
  422c6a:	call   0x422fbf
  422c6f:	push   0xedb18300
  422c74:	call   0x424bfa
  422c79:	add    esp,0x4
  422c7c:	mov    ecx,DWORD PTR [ebp-0x2c]
  422c7f:	mov    edx,DWORD PTR [ebp-0x1c]
  422c82:	cmp    edx,0xbb3c
  422c88:	jne    0x422d1c
  422c8e:	cmp    edx,eax
  422c90:	jne    0x422d1c
  422c96:	add    edx,edx
  422c98:	xor    ebx,ebx
  422c9a:	mov    eax,DWORD PTR [ebp-0x1c]
  422c9d:	cmp    ecx,0xffffff8c
  422ca0:	je     0x422d1c
  422ca2:	and    eax,ecx
  422ca4:	add    eax,eax
  422ca6:	mov    esi,DWORD PTR ds:0x438044
  422cac:	cmp    edx,DWORD PTR ds:0x438068
  422cb2:	jne    0x422d1c
  422cb4:	mov    edi,0xf
  422cb9:	sub    edi,ebx
  422cbb:	sub    edi,edx
  422cbd:	and    edi,ecx
  422cbf:	sub    edi,esi
  422cc1:	add    eax,ebx
  422cc3:	add    eax,edx
  422cc5:	mov    edx,DWORD PTR ds:0x43806c
  422ccb:	or     eax,ecx
  422ccd:	cmp    eax,0x78
  422cd0:	jne    0x422d1c
  422cd2:	and    edi,edx
  422cd4:	cmp    edi,DWORD PTR ds:0x438054
  422cda:	jne    0x422d1c
  422cdc:	cmp    edi,ecx
  422cde:	jne    0x422d1c
  422ce0:	xor    ebx,ebx
  422ce2:	mov    esi,0xdd
  422ce7:	add    DWORD PTR [ebp-0x1c],esi
  422cea:	sub    eax,edi
  422cec:	and    ebx,edx
  422cee:	sub    eax,esi
  422cf0:	cmp    eax,0xffffff9d
  422cf3:	je     0x422d1c
  422cf5:	mov    ebx,0x28
  422cfa:	mov    edi,0xcf
  422cff:	add    DWORD PTR [ebp-0x1c],ebx
  422d02:	add    eax,edi
  422d04:	cmp    eax,0x0
  422d07:	je     0x422d1c
  422d09:	cmp    eax,0xffffffda
  422d0c:	je     0x422d1c
  422d0e:	sub    eax,ecx
  422d10:	mov    ebx,edi
  422d12:	mov    esi,DWORD PTR [ebp-0x1c]
  422d15:	add    ebx,eax
  422d17:	sub    esi,ebx
  422d19:	and    DWORD PTR [ebp-0x1c],esi
  422d1c:	shr    ecx,0x10
  422d1f:	add    DWORD PTR [ebp-0x1c],edi
  422d22:	cmp    ecx,0x1630
  422d28:	jne    0x422f4a
  422d2e:	mov    edx,0xbb
  422d33:	sub    edx,ebx
  422d35:	or     edx,ebx
  422d37:	push   0x7
  422d39:	push   0x4a
  422d3b:	push   0xffffffdc
  422d3d:	push   0x66
  422d3f:	push   0x59d1a900
  422d44:	call   0x424d2b
  422d49:	add    esp,0x14
  422d4c:	push   0x49200b00
  422d51:	push   0x314fc300
  422d56:	push   0xc93fab00
  422d5b:	push   0xfffffff6
  422d5d:	call   0x42439b
  422d62:	add    esp,0x10
  422d65:	mov    esi,0x1672775c
  422d6a:	sub    DWORD PTR [ebp-0x1c],esi
  422d6d:	sub    esi,DWORD PTR [ebp-0x2c]
  422d70:	push   0x13080d00
  422d75:	push   0xffffffff
  422d77:	push   0x91fda400
  422d7c:	call   0x4250fa
  422d81:	add    esp,0xc
  422d84:	call   0x42439b
  422d89:	call   esi
  422d8b:	mov    ebx,0xa3
  422d90:	cmp    eax,ebx
  422d92:	jne    0x422de7
  422d94:	add    ebx,ebx
  422d96:	add    DWORD PTR [ebp-0x1c],ebx
  422d99:	mov    ecx,DWORD PTR [ebp-0x1c]
  422d9c:	mov    ebx,0x94
  422da1:	add    esi,ebx
  422da3:	cmp    esi,0x5d
  422da6:	jne    0x422de7
  422da8:	add    esi,ebx
  422daa:	sub    DWORD PTR [ebp-0x1c],esi
  422dad:	and    DWORD PTR [ebp-0x1c],edi
  422db0:	mov    edi,0xe4
  422db5:	mov    esi,ebx
  422db7:	cmp    ecx,DWORD PTR ds:0x43806c
  422dbd:	je     0x422de7
  422dbf:	mov    ebx,DWORD PTR [ebp-0x1c]
  422dc2:	mov    edx,0x7311
  422dc7:	cmp    ecx,DWORD PTR ds:0x438068
  422dcd:	jne    0x422de7
  422dcf:	mov    DWORD PTR [ebp-0x1c],esi
  422dd2:	add    DWORD PTR [ebp-0x1c],edx
  422dd5:	mov    edx,ebx
  422dd7:	add    DWORD PTR [ebp-0x1c],edi
  422dda:	and    edx,ebx
  422ddc:	sub    edx,eax
  422dde:	sub    DWORD PTR [ebp-0x1c],eax
  422de1:	add    DWORD PTR [ebp-0x1c],edx
  422de4:	xor    DWORD PTR [ebp-0x1c],ecx
  422de7:	mov    DWORD PTR [ebp-0x38],eax
  422dea:	and    DWORD PTR [ebp-0x1c],ecx
  422ded:	push   0xffffff81
  422def:	push   0xffffffc0
  422df1:	push   0xbda86c00
  422df6:	call   0x424d2b
  422dfb:	add    esp,0xc
  422dfe:	mov    eax,0x423a75
  422e03:	mov    esi,DWORD PTR [ebp-0x1c]
  422e06:	mov    ecx,eax
  422e08:	cmp    ebx,0x5e
  422e0b:	jne    0x422e6a
  422e0d:	cmp    esi,0x4d
  422e10:	jne    0x422e6a
  422e12:	mov    ebx,esi
  422e14:	mov    esi,0x88
  422e19:	add    esi,esi
  422e1b:	add    esi,edi
  422e1d:	sub    DWORD PTR [ebp-0x1c],ebx
  422e20:	or     ebx,edi
  422e22:	cmp    ebx,DWORD PTR [ebp-0x10]
  422e25:	je     0x422e6a
  422e27:	mov    edi,DWORD PTR [ebp-0x1c]
  422e2a:	mov    edx,DWORD PTR [ebp-0x1c]
  422e2d:	sub    DWORD PTR [ebp-0x1c],ebx
  422e30:	xor    DWORD PTR [ebp-0x1c],edi
  422e33:	sub    DWORD PTR [ebp-0x1c],esi
  422e36:	test   edx,0xca
  422e3c:	je     0x422e6a
  422e3e:	cmp    edx,0xfffffff6
  422e41:	je     0x422e6a
  422e43:	cmp    edx,edi
  422e45:	je     0x422e6a
  422e47:	mov    edi,DWORD PTR [ebp-0x1c]
  422e4a:	cmp    edi,0x22
  422e4d:	je     0x422e6a
  422e4f:	add    edx,edi
  422e51:	add    edx,edx
  422e53:	xor    DWORD PTR [ebp-0x1c],ecx
  422e56:	add    edx,esi
  422e58:	xor    esi,esi
  422e5a:	mov    edi,DWORD PTR [ebp-0x1c]
  422e5d:	add    DWORD PTR [ebp-0x1c],esi
  422e60:	add    DWORD PTR [ebp-0x1c],edi
  422e63:	cmp    edx,ebx
  422e65:	jne    0x422e6a
  422e67:	add    DWORD PTR [ebp-0x1c],edx
  422e6a:	push   DWORD PTR [ebp-0x2c]
  422e6d:	push   0x1631a610
  422e72:	push   DWORD PTR [ebp-0x38]
  422e75:	call   eax
  422e77:	add    DWORD PTR [ebp-0x1c],esi
  422e7a:	add    DWORD PTR [ebp-0x38],0x9
  422e81:	push   0x533eb200
  422e86:	push   0xc96e7d00
  422e8b:	push   0x910ed000
  422e90:	push   0xffffffc3
  422e92:	call   0x42439b
  422e97:	add    esp,0x10
  422e9a:	mov    eax,DWORD PTR [ebp-0x38]
  422e9d:	and    esi,edi
  422e9f:	mov    edx,0x2161f10d
  422ea4:	cmp    eax,0x52ad
  422ea9:	je     0x422ecf
  422eab:	sub    esi,edx
  422ead:	test   esi,0xd7
  422eb3:	je     0x422ecf
  422eb5:	xor    edi,edi
  422eb7:	sub    DWORD PTR [ebp-0x1c],edi
  422eba:	xor    edx,edx
  422ebc:	sub    DWORD PTR [ebp-0x1c],edx
  422ebf:	add    DWORD PTR [ebp-0x1c],eax
  422ec2:	test   esi,0x3a
  422ec8:	je     0x422ecf
  422eca:	add    esi,ebx
  422ecc:	or     DWORD PTR [ebp-0x1c],esi
  422ecf:	call   eax
  422ed1:	call   0x424709
  422ed6:	mov    eax,DWORD PTR [ebp-0x1c]
  422ed9:	push   0xa1df1600
  422ede:	call   0x42439b
  422ee3:	add    esp,0x4
  422ee6:	and    esi,ebx
  422ee8:	push   0xf1879500
  422eed:	push   0x74
  422eef:	push   0x75d94500
  422ef4:	push   0x63
  422ef6:	call   0x424286
  422efb:	add    esp,0x10
  422efe:	add    esi,eax
  422f00:	call   0x424fb8
  422f05:	mov    edx,0xfe
  422f0a:	sub    DWORD PTR [ebp-0x1c],edx
  422f0d:	push   0xffffff86
  422f0f:	push   0xfffffffb
  422f11:	push   0xffffffcf
  422f13:	call   0x424709
  422f18:	add    esp,0xc
  422f1b:	push   0x43151700
  422f20:	push   0x2300d200
  422f25:	push   0xedd88100
  422f2a:	call   0x4250fa
  422f2f:	add    esp,0xc
  422f32:	add    DWORD PTR [ebp-0x1c],esi
  422f35:	push   0x3117ca00
  422f3a:	push   0xffffffaf
  422f3c:	push   0x45
  422f3e:	push   0x4a
  422f40:	push   0x29
  422f42:	call   0x424bfa
  422f47:	add    esp,0x14
  422f4a:	or     DWORD PTR [ebp-0x1c],edx
  422f4d:	push   0x4b
  422f4f:	push   0xffffffe2
  422f51:	call   0x424bfa
  422f56:	add    esp,0x8
  422f59:	push   0xffffff90
  422f5b:	push   0xffffffee
  422f5d:	push   0xc9494f00
  422f62:	push   0xb33d1300
  422f67:	push   0x19e5ff00
  422f6c:	call   0x424fb8
  422f71:	add    esp,0x14
  422f74:	push   0x61d06500
  422f79:	call   0x424286
  422f7e:	add    esp,0x4
  422f81:	pop    edi
  422f82:	mov    edx,DWORD PTR [ebp-0x1c]
  422f85:	mov    ecx,DWORD PTR [ebp-0x1c]
  422f88:	push   0x99a24000
  422f8d:	push   0xffffffa4
  422f8f:	push   0x59acd100
  422f94:	call   0x424709
  422f99:	add    esp,0xc
  422f9c:	pop    esi
  422f9d:	cmp    edi,0xe519
  422fa3:	je     0x422faa
  422fa5:	call   0x4252a2
  422faa:	pop    ebx
  422fab:	sub    DWORD PTR [ebp-0x1c],edi
  422fae:	push   0xffffffcc
  422fb0:	call   0x424bfa
  422fb5:	add    esp,0x4
  422fb8:	leave  
  422fb9:	ret    
  422fba:	int3   
  422fbb:	int3   
  422fbc:	int3   
  422fbd:	int3   
  422fbe:	int3   
  422fbf:	push   ebp
  422fc0:	mov    ebp,esp
  422fc2:	sub    esp,0x54
  422fc5:	push   0x49ba0200
  422fca:	push   0xffffffc3
  422fcc:	push   0xffffffdb
  422fce:	call   0x424709
  422fd3:	add    esp,0xc
  422fd6:	push   ebx
  422fd7:	mov    ebx,DWORD PTR ds:0x43807c
  422fdd:	push   0x91ea1700
  422fe2:	call   0x4250fa
  422fe7:	add    esp,0x4
  422fea:	mov    DWORD PTR [ebp-0x24],ebx
  422fed:	push   0x91c7bf00
  422ff2:	push   0x42
  422ff4:	call   0x424709
  422ff9:	add    esp,0x8
  422ffc:	push   esi
  422ffd:	mov    esi,0xd6fb
  423002:	call   0x4249b5
  423007:	push   0x85537700
  42300c:	push   0x6118cc00
  423011:	push   0x51041d00
  423016:	push   0xd
  423018:	call   0x424709
  42301d:	add    esp,0x10
  423020:	push   0xffffffdf
  423022:	push   0xc3cbc300
  423027:	push   0x91bd5100
  42302c:	push   0xe
  42302e:	call   0x424d2b
  423033:	add    esp,0x10
  423036:	push   0xfffffff7
  423038:	push   0xf56f2c00
  42303d:	push   0x50
  42303f:	push   0x899c0500
  423044:	push   0xffffff95
  423046:	call   0x42439b
  42304b:	add    esp,0x14
  42304e:	xor    DWORD PTR [ebp-0x24],esi
  423051:	push   edi
  423052:	push   0x29355b00
  423057:	push   0xc9997200
  42305c:	push   0xffffff89
  42305e:	push   0x8993c800
  423063:	call   0x4252a2
  423068:	add    esp,0x10
  42306b:	push   0xffffffb8
  42306d:	push   0x33
  42306f:	push   0x98aa500
  423074:	call   0x4252a2
  423079:	add    esp,0xc
  42307c:	push   0x81041f00
  423081:	push   0xa3fc0700
  423086:	call   0x4249b5
  42308b:	add    esp,0x8
  42308e:	mov    DWORD PTR [ebp-0x48],0x35dbeead
  423095:	push   0x49d7d700
  42309a:	push   0xf3aee400
  42309f:	push   0xb1b79900
  4230a4:	push   0x33fa2f00
  4230a9:	call   0x4252a2
  4230ae:	add    esp,0x10
  4230b1:	call   0x4238ea
  4230b6:	sub    esi,ebx
  4230b8:	add    esi,ebx
  4230ba:	mov    edi,DWORD PTR [ebp-0x24]
  4230bd:	test   edi,0xf
  4230c3:	jne    0x42316a
  4230c9:	mov    ebx,DWORD PTR [ebp-0x24]
  4230cc:	sub    DWORD PTR [ebp-0x24],esi
  4230cf:	mov    edx,DWORD PTR ds:0x43807c
  4230d5:	sub    edi,esi
  4230d7:	cmp    ebx,edi
  4230d9:	jne    0x42316a
  4230df:	mov    ecx,DWORD PTR [ebp-0x24]
  4230e2:	cmp    edi,ecx
  4230e4:	jne    0x42316a
  4230ea:	mov    esi,DWORD PTR ds:0x43807c
  4230f0:	and    ecx,ebx
  4230f2:	cmp    ecx,DWORD PTR ds:0x43807c
  4230f8:	je     0x42316a
  4230fa:	sub    edx,eax
  4230fc:	test   edx,0xa1
  423102:	je     0x42316a
  423104:	mov    ebx,0xd4
  423109:	sub    ebx,eax
  42310b:	cmp    eax,DWORD PTR [ebp-0x34]
  42310e:	je     0x42316a
  423110:	sub    edx,eax
  423112:	mov    esi,0x2a
  423117:	xor    DWORD PTR [ebp-0x24],eax
  42311a:	sub    DWORD PTR [ebp-0x24],esi
  42311d:	cmp    ecx,DWORD PTR [ebp-0x14]
  423120:	jne    0x42316a
  423122:	mov    esi,0x7a
  423127:	sub    edi,esi
  423129:	mov    esi,0x2310
  42312e:	sub    DWORD PTR [ebp-0x24],esi
  423131:	test   ecx,0xfd
  423137:	je     0x42316a
  423139:	cmp    ecx,0xf6f9
  42313f:	jne    0x42316a
  423141:	mov    esi,0xc3dd
  423146:	sub    DWORD PTR [ebp-0x24],edx
  423149:	add    ecx,ebx
  42314b:	add    DWORD PTR [ebp-0x24],edi
  42314e:	or     ecx,edi
  423150:	sub    ecx,edi
  423152:	cmp    eax,DWORD PTR [ebp-0x28]
  423155:	je     0x423167
  423157:	mov    ebx,0x29
  42315c:	sub    DWORD PTR [ebp-0x24],ebx
  42315f:	cmp    ecx,DWORD PTR [ebp-0x40]
  423162:	je     0x423167
  423164:	add    DWORD PTR [ebp-0x24],ecx
  423167:	or     DWORD PTR [ebp-0x24],esi
  42316a:	mov    DWORD PTR [ebp-0x3c],eax
  42316d:	mov    eax,DWORD PTR [ebp-0x24]
  423170:	push   0xfffffff6
  423172:	push   0x996f200
  423177:	call   0x4250fa
  42317c:	add    esp,0x8
  42317f:	call   0x4238ea
  423184:	cmp    edi,DWORD PTR [ebp-0x20]
  423187:	je     0x42319c
  423189:	mov    edi,0xd7
  42318e:	add    ebx,eax
  423190:	or     edi,esi
  423192:	add    DWORD PTR [ebp-0x24],edi
  423195:	sub    ebx,eax
  423197:	sub    ebx,edi
  423199:	mov    DWORD PTR [ebp-0x24],ebx
  42319c:	mov    DWORD PTR [ebp-0x10],eax
  42319f:	call   0x424bfa
  4231a4:	push   0x4
  4231a6:	push   0x19
  4231a8:	push   0xb12a2400
  4231ad:	push   0x498a7600
  4231b2:	push   0xd3e34000
  4231b7:	call   0x424709
  4231bc:	add    esp,0x14
  4231bf:	call   0x4238ea
  4231c4:	mov    ecx,0x7f
  4231c9:	sub    DWORD PTR [ebp-0x24],ecx
  4231cc:	mov    DWORD PTR [ebp-0x54],eax
  4231cf:	call   0x4249b5
  4231d4:	mov    edx,DWORD PTR [ebp-0x10]
  4231d7:	add    DWORD PTR [ebp-0x24],ebx
  4231da:	sub    edx,DWORD PTR [ebp-0x3c]
  4231dd:	sub    DWORD PTR [ebp-0x24],ebx
  4231e0:	xor    edx,0xb16219ce
  4231e6:	mov    ecx,0xd1
  4231eb:	sub    ecx,edx
  4231ed:	or     DWORD PTR [ebp-0x24],edx
  4231f0:	xor    ebx,ebx
  4231f2:	sub    ecx,eax
  4231f4:	cmp    ecx,DWORD PTR [ebp-0x4c]
  4231f7:	jne    0x423234
  4231f9:	mov    edi,DWORD PTR [ebp-0x24]
  4231fc:	mov    eax,DWORD PTR [ebp-0x24]
  4231ff:	sub    DWORD PTR [ebp-0x24],edx
  423202:	cmp    ecx,DWORD PTR [ebp-0x4]
  423205:	je     0x423234
  423207:	cmp    edi,DWORD PTR ds:0x43807c
  42320d:	jne    0x423234
  42320f:	cmp    ecx,DWORD PTR [ebp-0x4c]
  423212:	je     0x423234
  423214:	sub    ecx,edi
  423216:	and    ecx,ebx
  423218:	sub    ecx,esi
  42321a:	add    DWORD PTR [ebp-0x24],eax
  42321d:	sub    ecx,ebx
  42321f:	sub    ecx,eax
  423221:	xor    eax,eax
  423223:	add    DWORD PTR [ebp-0x24],ecx
  423226:	mov    esi,DWORD PTR ds:0x43807c
  42322c:	sub    DWORD PTR [ebp-0x24],esi
  42322f:	sub    eax,ebx
  423231:	xor    DWORD PTR [ebp-0x24],eax
  423234:	mov    ecx,DWORD PTR [ebp-0x54]
  423237:	sub    esi,ebx
  423239:	sub    esi,edi
  42323b:	sub    esi,edi
  42323d:	mov    eax,DWORD PTR [ebp-0x24]
  423240:	add    DWORD PTR [ebp-0x24],esi
  423243:	and    eax,edi
  423245:	cmp    ecx,DWORD PTR [ebp-0x40]
  423248:	jne    0x4232a3
  42324a:	mov    edi,DWORD PTR [ebp-0x24]
  42324d:	mov    esi,0x76
  423252:	add    esi,ebx
  423254:	or     DWORD PTR [ebp-0x24],eax
  423257:	mov    DWORD PTR [ebp-0x24],esi
  42325a:	cmp    edi,DWORD PTR [ebp-0x28]
  42325d:	jne    0x4232a3
  42325f:	cmp    edi,0x68
  423262:	je     0x4232a3
  423264:	sub    edi,esi
  423266:	mov    ebx,DWORD PTR ds:0x438040
  42326c:	mov    esi,edi
  42326e:	cmp    esi,eax
  423270:	je     0x423275
  423272:	sub    DWORD PTR [ebp-0x24],esi
  423275:	and    ebx,edx
  423277:	cmp    ebx,ecx
  423279:	jne    0x4232a3
  42327b:	mov    esi,DWORD PTR ds:0x43807c
  423281:	and    ebx,eax
  423283:	sub    DWORD PTR [ebp-0x24],esi
  423286:	mov    esi,DWORD PTR [ebp-0x24]
  423289:	or     ebx,eax
  42328b:	sub    DWORD PTR [ebp-0x24],esi
  42328e:	sub    ebx,eax
  423290:	cmp    ecx,DWORD PTR ds:0x438040
  423296:	je     0x4232a3
  423298:	cmp    edx,0x723f
  42329e:	jne    0x4232a3
  4232a0:	xor    DWORD PTR [ebp-0x24],ebx
  4232a3:	sub    ecx,DWORD PTR [ebp-0x10]
  4232a6:	cmp    ecx,edx
  4232a8:	je     0x423317
  4232aa:	mov    ebx,DWORD PTR [ebp-0x24]
  4232ad:	xor    esi,esi
  4232af:	cmp    ebx,DWORD PTR ds:0x43807c
  4232b5:	je     0x423317
  4232b7:	mov    eax,DWORD PTR ds:0x438040
  4232bd:	cmp    ecx,edi
  4232bf:	jne    0x423317
  4232c1:	mov    edi,0x6cd9
  4232c6:	xor    DWORD PTR [ebp-0x24],ebx
  4232c9:	mov    ebx,eax
  4232cb:	sub    DWORD PTR [ebp-0x24],eax
  4232ce:	sub    edi,esi
  4232d0:	cmp    ecx,DWORD PTR ds:0x43807c
  4232d6:	je     0x423317
  4232d8:	sub    DWORD PTR [ebp-0x24],eax
  4232db:	sub    edi,ebx
  4232dd:	mov    esi,DWORD PTR [ebp-0x24]
  4232e0:	cmp    ecx,DWORD PTR [ebp-0x1c]
  4232e3:	jne    0x423317
  4232e5:	mov    ebx,0xad
  4232ea:	add    DWORD PTR [ebp-0x24],ecx
  4232ed:	xor    eax,eax
  4232ef:	add    esi,ebx
  4232f1:	add    DWORD PTR [ebp-0x24],esi
  4232f4:	add    DWORD PTR [ebp-0x24],edi
  4232f7:	or     esi,ecx
  4232f9:	sub    DWORD PTR [ebp-0x24],esi
  4232fc:	add    eax,esi
  4232fe:	cmp    eax,DWORD PTR ds:0x438040
  423304:	jne    0x423317
  423306:	mov    esi,DWORD PTR [ebp-0x24]
  423309:	and    DWORD PTR [ebp-0x24],eax
  42330c:	mov    ebx,0xbf89
  423311:	mov    DWORD PTR [ebp-0x50],ebx
  423314:	or     DWORD PTR [ebp-0x50],esi
  423317:	xor    ecx,0xb16219cb
  42331d:	mov    ebx,DWORD PTR [ebp-0x24]
  423320:	mov    esi,edi
  423322:	add    DWORD PTR [ebp-0x24],eax
  423325:	sub    esi,edi
  423327:	cmp    ecx,0x33
  42332a:	je     0x4233fe
  423330:	mov    edi,0xb1
  423335:	xor    DWORD PTR [ebp-0x24],edx
  423338:	add    DWORD PTR [ebp-0x24],ebx
  42333b:	mov    ebx,DWORD PTR [ebp-0x24]
  42333e:	or     esi,ebx
  423340:	cmp    esi,DWORD PTR [ebp-0x20]
  423343:	jne    0x4233fe
  423349:	mov    ebx,DWORD PTR [ebp-0x24]
  42334c:	cmp    esi,ebx
  42334e:	jne    0x4233fe
  423354:	add    DWORD PTR [ebp-0x24],ebx
  423357:	sub    DWORD PTR [ebp-0x24],ecx
  42335a:	test   esi,0x7f38
  423360:	je     0x4233fe
  423366:	mov    edi,0xf5
  42336b:	cmp    esi,DWORD PTR ds:0x43807c
  423371:	jne    0x4233fe
  423377:	add    DWORD PTR [ebp-0x24],edx
  42337a:	mov    ebx,ecx
  42337c:	sub    ebx,edi
  42337e:	cmp    esi,0x72
  423381:	je     0x4233fe
  423383:	sub    DWORD PTR [ebp-0x24],esi
  423386:	mov    edi,DWORD PTR ds:0x438074
  42338c:	sub    edi,edx
  42338e:	cmp    ebx,0x88a3
  423394:	je     0x4233fe
  423396:	mov    eax,DWORD PTR [ebp-0x24]
  423399:	mov    esi,DWORD PTR [ebp-0x24]
  42339c:	cmp    esi,DWORD PTR ds:0x43807c
  4233a2:	jne    0x4233fe
  4233a4:	add    eax,edi
  4233a6:	mov    edi,DWORD PTR [ebp-0x24]
  4233a9:	cmp    esi,0xffffffec
  4233ac:	jne    0x4233fe
  4233ae:	add    DWORD PTR [ebp-0x24],ebx
  4233b1:	mov    ebx,DWORD PTR [ebp-0x24]
  4233b4:	sub    DWORD PTR [ebp-0x24],eax
  4233b7:	add    edi,edi
  4233b9:	sub    ebx,edi
  4233bb:	add    DWORD PTR [ebp-0x24],ebx
  4233be:	add    esi,ebx
  4233c0:	add    esi,eax
  4233c2:	sub    esi,ecx
  4233c4:	add    esi,eax
  4233c6:	sub    esi,edx
  4233c8:	or     esi,ecx
  4233ca:	cmp    eax,edx
  4233cc:	jne    0x4233fe
  4233ce:	mov    eax,ecx
  4233d0:	test   ebx,0x52
  4233d6:	jne    0x4233fe
  4233d8:	cmp    eax,0xee24
  4233dd:	jne    0x4233fe
  4233df:	and    eax,esi
  4233e1:	xor    ebx,ebx
  4233e3:	mov    esi,DWORD PTR [ebp-0x24]
  4233e6:	mov    DWORD PTR [ebp-0x24],esi
  4233e9:	add    DWORD PTR [ebp-0x24],ecx
  4233ec:	add    ebx,eax
  4233ee:	cmp    eax,DWORD PTR [ebp-0x4]
  4233f1:	jne    0x4233fe
  4233f3:	mov    esi,DWORD PTR [ebp-0x24]
  4233f6:	add    esi,ebx
  4233f8:	or     DWORD PTR [ebp-0x24],eax
  4233fb:	sub    DWORD PTR [ebp-0x24],esi
  4233fe:	cmp    edx,ecx
  423400:	je     0x4237d2
  423406:	mov    esi,edx
  423408:	sub    DWORD PTR [ebp-0x24],esi
  42340b:	push   0x43807c
  423410:	call   DWORD PTR ds:0x4358ac
  423416:	cmp    esi,0x47
  423419:	jne    0x42342a
  42341b:	mov    ecx,ebx
  42341d:	add    ecx,ecx
  42341f:	mov    ebx,0x3e
  423424:	sub    DWORD PTR [ebp-0x24],ecx
  423427:	xor    DWORD PTR [ebp-0x24],ebx
  42342a:	or     eax,eax
  42342c:	je     0x4237d2
  423432:	or     DWORD PTR [ebp-0x24],ebx
  423435:	add    DWORD PTR [ebp-0x48],0x69ba5453
  42343c:	mov    esi,DWORD PTR [ebp-0x24]
  42343f:	add    DWORD PTR [ebp-0x24],esi
  423442:	lea    esi,[eax+0x229]
  423448:	push   0xd54c4b00
  42344d:	push   0xffffffea
  42344f:	push   0xffffffa3
  423451:	call   0x424bfa
  423456:	add    esp,0xc
  423459:	call   0x4252a2
  42345e:	inc    esi
  42345f:	push   0xc9e5aa00
  423464:	call   0x424fb8
  423469:	add    esp,0x4
  42346c:	mov    ecx,DWORD PTR [esi]
  42346e:	add    DWORD PTR [ebp-0x24],ecx
  423471:	sub    ecx,0xd33f86c4
  423477:	mov    edi,eax
  423479:	mov    ebx,DWORD PTR [ebp-0x24]
  42347c:	add    DWORD PTR [ebp-0x24],esi
  42347f:	sub    ebx,edi
  423481:	xor    DWORD PTR [ebp-0x24],ecx
  423484:	and    ebx,esi
  423486:	add    ebx,ebx
  423488:	cmp    ebx,esi
  42348a:	je     0x4234bc
  42348c:	mov    eax,DWORD PTR [ebp-0x24]
  42348f:	and    eax,ecx
  423491:	or     DWORD PTR [ebp-0x24],edi
  423494:	xor    edi,edi
  423496:	add    eax,ecx
  423498:	cmp    ebx,DWORD PTR [ebp-0x4]
  42349b:	jne    0x4234bc
  42349d:	test   ebx,0x5518
  4234a3:	jne    0x4234bc
  4234a5:	cmp    eax,edi
  4234a7:	je     0x4234bc
  4234a9:	xor    DWORD PTR [ebp-0x24],ebx
  4234ac:	mov    ebx,DWORD PTR [ebp-0x24]
  4234af:	mov    edi,DWORD PTR ds:0x43807c
  4234b5:	and    eax,edi
  4234b7:	sub    eax,ebx
  4234b9:	sub    DWORD PTR [ebp-0x24],eax
  4234bc:	cmp    ecx,0xf645df3e
  4234c2:	jne    0x423448
  4234c4:	cmp    ebx,edi
  4234c6:	je     0x423794
  4234cc:	add    edi,esi
  4234ce:	call   0x424709
  4234d3:	push   0xc52b3d00
  4234d8:	push   0xe94a0500
  4234dd:	push   0xfffffff3
  4234df:	call   0x4249b5
  4234e4:	add    esp,0xc
  4234e7:	push   0x152ea400
  4234ec:	push   0xe3dc4000
  4234f1:	push   0x4a
  4234f3:	call   0x42439b
  4234f8:	add    esp,0xc
  4234fb:	mov    ebx,DWORD PTR [ebp-0x24]
  4234fe:	mov    ecx,eax
  423500:	push   0xd3fd0100
  423505:	push   0xffffffd4
  423507:	push   0xd3daab00
  42350c:	push   0xffffffde
  42350e:	push   0x15
  423510:	call   0x424d2b
  423515:	add    esp,0x14
  423518:	push   0x13c45a00
  42351d:	push   0x2d596200
  423522:	call   0x424709
  423527:	add    esp,0x8
  42352a:	push   0x37
  42352c:	call   0x4252a2
  423531:	add    esp,0x4
  423534:	cmp    ebx,0x7a
  423537:	je     0x423794
  42353d:	push   0xffffffa8
  42353f:	push   0x6b
  423541:	call   0x424709
  423546:	add    esp,0x8
  423549:	add    edi,eax
  42354b:	add    DWORD PTR [ebp-0x24],edi
  42354e:	cmp    ebx,0xbca0
  423554:	je     0x423794
  42355a:	mov    edi,eax
  42355c:	sub    edi,eax
  42355e:	or     DWORD PTR [ebp-0x24],ebx
  423561:	sub    edi,ebx
  423563:	mov    eax,esi
  423565:	cmp    eax,DWORD PTR ds:0x43807c
  42356b:	jne    0x423794
  423571:	push   0x91cc1d00
  423576:	push   0x4f
  423578:	push   0x61
  42357a:	push   0x53e63400
  42357f:	push   0x1e
  423581:	call   0x424709
  423586:	add    esp,0x14
  423589:	push   0xffffff88
  42358b:	push   0x38
  42358d:	push   0xffffff80
  42358f:	push   0xffffff83
  423591:	call   0x424d2b
  423596:	add    esp,0x10
  423599:	mov    ecx,0xa2a5
  42359e:	mov    DWORD PTR [ebp-0x2c],ecx
  4235a1:	push   0xfffffff0
  4235a3:	push   0x5096200
  4235a8:	call   0x4249b5
  4235ad:	add    esp,0x8
  4235b0:	push   0xd5166700
  4235b5:	push   0x9d56a100
  4235ba:	call   0x424bfa
  4235bf:	add    esp,0x8
  4235c2:	mov    edx,DWORD PTR ds:0x438040
  4235c8:	push   0x296ec300
  4235cd:	push   0x66
  4235cf:	push   0x13c31800
  4235d4:	push   0x5b
  4235d6:	push   0x53bfce00
  4235db:	call   0x424d2b
  4235e0:	add    esp,0x14
  4235e3:	push   0x9
  4235e5:	push   0x12
  4235e7:	call   0x4250fa
  4235ec:	add    esp,0x8
  4235ef:	push   0xd
  4235f1:	push   0x856fca00
  4235f6:	push   0x49a0a900
  4235fb:	push   0xb1bb7c00
  423600:	call   0x424bfa
  423605:	add    esp,0x10
  423608:	sub    edi,eax
  42360a:	push   0xe
  42360c:	push   0x7d0aa100
  423611:	push   0xb1b88d00
  423616:	push   0x89c41f00
  42361b:	push   0xffffffbc
  42361d:	call   0x424fb8
  423622:	add    esp,0x14
  423625:	push   0x58
  423627:	push   0xffffff9a
  423629:	push   0x554f700
  42362e:	push   0xe
  423630:	call   0x4250fa
  423635:	add    esp,0x10
  423638:	push   0xd16b4000
  42363d:	push   0xffffff98
  42363f:	push   0xf3e3fc00
  423644:	call   0x42439b
  423649:	add    esp,0xc
  42364c:	call   0x4249b5
  423651:	cmp    ebx,0x5
  423654:	je     0x423794
  42365a:	and    edi,esi
  42365c:	mov    ebx,DWORD PTR ds:0x43807c
  423662:	push   0x4d68bc00
  423667:	call   0x4249b5
  42366c:	add    esp,0x4
  42366f:	push   0x34
  423671:	push   0x59
  423673:	push   0x2f
  423675:	push   0xffffffac
  423677:	call   0x424709
  42367c:	add    esp,0x10
  42367f:	add    edi,eax
  423681:	mov    eax,0x1
  423686:	push   0x1d
  423688:	push   0x4d7e8c00
  42368d:	push   0xb390ab00
  423692:	push   0x2d2f3c00
  423697:	push   0x9d7eb800
  42369c:	call   0x424286
  4236a1:	add    esp,0x14
  4236a4:	add    DWORD PTR [ebp-0x24],edi
  4236a7:	push   0xffffffd0
  4236a9:	push   0xffffff8a
  4236ab:	call   0x4252a2
  4236b0:	add    esp,0x8
  4236b3:	push   0xd65ae00
  4236b8:	push   0xb3cbb000
  4236bd:	push   0x31cbc300
  4236c2:	push   0xf
  4236c4:	push   0x91a18d00
  4236c9:	call   0x424709
  4236ce:	add    esp,0x14
  4236d1:	push   0x75679800
  4236d6:	push   0x70
  4236d8:	call   0x424709
  4236dd:	add    esp,0x8
  4236e0:	push   0xffffffa5
  4236e2:	call   0x4252a2
  4236e7:	add    esp,0x4
  4236ea:	sub    DWORD PTR [ebp-0x24],esi
  4236ed:	cmp    eax,DWORD PTR ds:0x438040
  4236f3:	je     0x423794
  4236f9:	sub    ebx,esi
  4236fb:	push   0xc9c23a00
  423700:	push   0x47
  423702:	push   0xd5731f00
  423707:	push   0x16
  423709:	call   0x4250fa
  42370e:	add    esp,0x10
  423711:	xor    ecx,ecx
  423713:	mov    eax,DWORD PTR [ebp-0x2c]
  423716:	call   0x42439b
  42371b:	push   0xffffff85
  42371d:	push   0x81387500
  423722:	push   0x6d
  423724:	call   0x424709
  423729:	add    esp,0xc
  42372c:	and    ebx,esi
  42372e:	push   0x31e5cc00
  423733:	push   0xfd7e8f00
  423738:	push   0x591c5b00
  42373d:	push   0x9d181d00
  423742:	push   0xffffffe3
  423744:	call   0x424fb8
  423749:	add    esp,0x14
  42374c:	call   0x424709
  423751:	push   0x9ec9800
  423756:	push   0xfffffff5
  423758:	push   0xb3878300
  42375d:	push   0x3
  42375f:	call   0x424bfa
  423764:	add    esp,0x10
  423767:	call   0x42439b
  42376c:	and    ebx,eax
  42376e:	call   0x42439b
  423773:	push   0xa545da00
  423778:	call   0x424bfa
  42377d:	add    esp,0x4
  423780:	or     ebx,esi
  423782:	push   0x42
  423784:	push   0x7d29c800
  423789:	call   0x4250fa
  42378e:	add    esp,0x8
  423791:	add    DWORD PTR [ebp-0x24],ebx
  423794:	mov    ecx,DWORD PTR [esi+0x4]
  423797:	mov    esi,DWORD PTR [ebp-0x24]
  42379a:	xor    DWORD PTR [ebp-0x24],ecx
  42379d:	mov    ebx,0x9d9a
  4237a2:	cmp    esi,DWORD PTR ds:0x438074
  4237a8:	jne    0x4237cf
  4237aa:	sub    ebx,ecx
  4237ac:	add    DWORD PTR [ebp-0x24],esi
  4237af:	and    ebx,eax
  4237b1:	mov    edx,DWORD PTR [ebp-0x24]
  4237b4:	mov    esi,DWORD PTR [ebp-0x24]
  4237b7:	add    DWORD PTR [ebp-0x24],eax
  4237ba:	add    DWORD PTR [ebp-0x24],ebx
  4237bd:	sub    esi,ecx
  4237bf:	add    DWORD PTR [ebp-0x24],edx
  4237c2:	sub    esi,edi
  4237c4:	cmp    esi,DWORD PTR ds:0x43807c
  4237ca:	jne    0x4237cf
  4237cc:	sub    DWORD PTR [ebp-0x24],esi
  4237cf:	sub    DWORD PTR [ebp-0x48],ecx
  4237d2:	mov    eax,DWORD PTR [ebp-0x24]
  4237d5:	push   0x3c
  4237d7:	push   0x59
  4237d9:	call   0x424709
  4237de:	add    esp,0x8
  4237e1:	push   0xffffffee
  4237e3:	push   0x15
  4237e5:	push   0xffffff9f
  4237e7:	push   0xc96ae900
  4237ec:	push   0xffffff8e
  4237ee:	call   0x4252a2
  4237f3:	add    esp,0x14
  4237f6:	call   0x4252a2
  4237fb:	push   0x79325100
  423800:	push   0x89dab900
  423805:	push   0xffffffeb
  423807:	call   0x424286
  42380c:	add    esp,0xc
  42380f:	mov    ecx,DWORD PTR [ebp+0xc]
  423812:	mov    DWORD PTR [ebp-0x24],ecx
  423815:	mov    edx,DWORD PTR [ebp-0x48]
  423818:	sub    esi,ecx
  42381a:	sub    esi,ecx
  42381c:	mov    DWORD PTR [ebp-0x24],esi
  42381f:	mov    DWORD PTR [ecx+0x0],edx
  423822:	add    ecx,eax
  423824:	push   0xf3cc5900
  423829:	push   0x49e26700
  42382e:	push   0xed11f000
  423833:	call   0x424d2b
  423838:	add    esp,0xc
  42383b:	push   0x44
  42383d:	push   0xffffffe3
  42383f:	call   0x42439b
  423844:	add    esp,0x8
  423847:	push   0x63de4500
  42384c:	push   0xffffffd3
  42384e:	call   0x424bfa
  423853:	add    esp,0x8
  423856:	pop    edi
  423857:	mov    esi,DWORD PTR [ebp-0x24]
  42385a:	add    DWORD PTR [ebp-0x24],edi
  42385d:	push   0xffffff8e
  42385f:	push   0xe913ef00
  423864:	push   0xb1ed9e00
  423869:	call   0x4252a2
  42386e:	add    esp,0xc
  423871:	cmp    esi,DWORD PTR [ebp-0x28]
  423874:	jne    0x423880
  423876:	or     esi,edi
  423878:	call   0x424d2b
  42387d:	add    DWORD PTR [ebp-0x24],esi
  423880:	push   0x1d229700
  423885:	push   0x3110f300
  42388a:	call   0x4249b5
  42388f:	add    esp,0x8
  423892:	pop    esi
  423893:	call   0x424fb8
  423898:	push   0x43fcad00
  42389d:	push   0xbd60f600
  4238a2:	push   0xffffff93
  4238a4:	push   0xffffffc1
  4238a6:	push   0x93f41200
  4238ab:	call   0x4249b5
  4238b0:	add    esp,0x14
  4238b3:	pop    ebx
  4238b4:	push   0x53ff5300
  4238b9:	push   0x6e
  4238bb:	push   0x918fbc00
  4238c0:	call   0x424286
  4238c5:	add    esp,0xc
  4238c8:	push   0xffffffb9
  4238ca:	push   0x1527d600
  4238cf:	push   0xc9129d00
  4238d4:	push   0x11131100
  4238d9:	call   0x424d2b
  4238de:	add    esp,0x10
  4238e1:	leave  
  4238e2:	ret    0x8
  4238e5:	int3   
  4238e6:	int3   
  4238e7:	int3   
  4238e8:	int3   
  4238e9:	int3   
  4238ea:	push   ebp
  4238eb:	mov    ebp,esp
  4238ed:	sub    esp,0x24
  4238f0:	mov    eax,0xec
  4238f5:	push   0x5f
  4238f7:	push   0xb92ca400
  4238fc:	push   0x41
  4238fe:	push   0x30
  423900:	push   0x993d3300
  423905:	call   0x424bfa
  42390a:	add    esp,0x14
  42390d:	call   0x424bfa
  423912:	push   ebx
  423913:	push   0xffffffec
  423915:	push   0x79347b00
  42391a:	push   0x46
  42391c:	push   0xffffffa2
  42391e:	push   0xffffffc9
  423920:	call   0x424fb8
  423925:	add    esp,0x14
  423928:	push   esi
  423929:	test   eax,0x57
  42392e:	je     0x42393a
  423930:	push   0x2
  423932:	call   0x424286
  423937:	add    esp,0x4
  42393a:	call   0x42439b
  42393f:	push   edi
  423940:	cmp    eax,0x43
  423943:	jne    0x423951
  423945:	push   0xffffffb9
  423947:	push   0x7a
  423949:	call   0x4249b5
  42394e:	add    esp,0x8
  423951:	push   0x5b
  423953:	push   0xffffffdc
  423955:	push   0x45441600
  42395a:	call   0x4250fa
  42395f:	add    esp,0xc
  423962:	cmp    eax,0xffffffd9
  423965:	je     0x42397f
  423967:	push   0x49879900
  42396c:	push   0x41
  42396e:	push   0x53aee800
  423973:	push   0xffffff99
  423975:	push   0x5a
  423977:	call   0x424bfa
  42397c:	add    esp,0x14
  42397f:	call   0x424d2b
  423984:	push   0x6f
  423986:	call   0x4252a2
  42398b:	add    esp,0x4
  42398e:	rdtsc  
  423990:	mov    esi,eax
  423992:	sub    edx,esi
  423994:	mov    esi,0x2e
  423999:	mov    DWORD PTR [ebp-0x10],eax
  42399c:	add    edx,edx
  42399e:	add    DWORD PTR [ebp-0x10],eax
  4239a1:	sub    edx,eax
  4239a3:	sub    DWORD PTR [ebp-0x10],edx
  4239a6:	sub    esi,edx
  4239a8:	sub    esi,edx
  4239aa:	or     DWORD PTR [ebp-0x10],esi
  4239ad:	sub    DWORD PTR [ebp-0x10],eax
  4239b0:	sub    edx,esi
  4239b2:	sub    edx,esi
  4239b4:	mov    ebx,DWORD PTR [ebp-0x10]
  4239b7:	mov    esi,eax
  4239b9:	add    ebx,eax
  4239bb:	cmp    ebx,0xfffffffb
  4239be:	je     0x4239e3
  4239c0:	xor    DWORD PTR [ebp-0x10],edx
  4239c3:	sub    ebx,edx
  4239c5:	and    ebx,esi
  4239c7:	xor    edi,edi
  4239c9:	mov    esi,0x44
  4239ce:	add    esi,esi
  4239d0:	add    ebx,ebx
  4239d2:	and    esi,edi
  4239d4:	mov    DWORD PTR [ebp-0x10],ebx
  4239d7:	sub    edx,esi
  4239d9:	add    ebx,eax
  4239db:	sub    DWORD PTR [ebp-0x10],ebx
  4239de:	and    edx,ebx
  4239e0:	mov    DWORD PTR [ebp-0x10],edx
  4239e3:	pop    edi
  4239e4:	add    edx,ebx
  4239e6:	mov    esi,DWORD PTR [ebp-0x10]
  4239e9:	sub    edx,edi
  4239eb:	mov    ebx,DWORD PTR [ebp-0x10]
  4239ee:	sub    ebx,esi
  4239f0:	sub    DWORD PTR [ebp-0x10],edx
  4239f3:	test   ebx,0xff
  4239f9:	je     0x423a15
  4239fb:	cmp    esi,DWORD PTR [ebp-0x1c]
  4239fe:	je     0x423a15
  423a00:	cmp    ebx,0xffffffb9
  423a03:	je     0x423a15
  423a05:	xor    ecx,ecx
  423a07:	mov    esi,0xac
  423a0c:	sub    DWORD PTR [ebp-0x10],esi
  423a0f:	add    DWORD PTR [ebp-0x10],ebx
  423a12:	sub    DWORD PTR [ebp-0x10],ecx
  423a15:	pop    esi
  423a16:	test   esi,0x5c
  423a1c:	je     0x423a29
  423a1e:	test   esi,0xbe
  423a24:	jne    0x423a29
  423a26:	sub    DWORD PTR [ebp-0x10],esi
  423a29:	pop    ebx
  423a2a:	mov    edx,DWORD PTR [ebp-0x10]
  423a2d:	mov    ecx,DWORD PTR [ebp-0x10]
  423a30:	test   esi,0x23
  423a36:	je     0x423a6e
  423a38:	and    edx,ecx
  423a3a:	mov    ecx,DWORD PTR [ebp-0x10]
  423a3d:	cmp    ebx,eax
  423a3f:	jne    0x423a6e
  423a41:	cmp    ebx,DWORD PTR [ebp-0x24]
  423a44:	je     0x423a6e
  423a46:	add    DWORD PTR [ebp-0x10],esi
  423a49:	add    edx,esi
  423a4b:	test   ebx,0xd0
  423a51:	je     0x423a6e
  423a53:	sub    DWORD PTR [ebp-0x10],ecx
  423a56:	cmp    ebx,esi
  423a58:	je     0x423a6e
  423a5a:	mov    ecx,0x5
  423a5f:	sub    ecx,esi
  423a61:	and    edx,eax
  423a63:	sub    DWORD PTR [ebp-0x10],ebx
  423a66:	sub    ecx,edi
  423a68:	add    DWORD PTR [ebp-0x10],edx
  423a6b:	sub    DWORD PTR [ebp-0x10],ecx
  423a6e:	leave  
  423a6f:	ret    
  423a70:	int3   
  423a71:	int3   
  423a72:	int3   
  423a73:	int3   
  423a74:	int3   
  423a75:	push   ebp
  423a76:	mov    ebp,esp
  423a78:	sub    esp,0x44
  423a7b:	push   0xfd745900
  423a80:	push   0xd
  423a82:	push   0xffffff86
  423a84:	push   0x5158b00
  423a89:	call   0x42439b
  423a8e:	add    esp,0x10
  423a91:	push   0x6e
  423a93:	push   0xdd7fd200
  423a98:	push   0x28
  423a9a:	call   0x4252a2
  423a9f:	add    esp,0xc
  423aa2:	push   ebx
  423aa3:	xor    ecx,ecx
  423aa5:	push   0x85712e00
  423aaa:	push   0x69230c00
  423aaf:	push   0x89aa7400
  423ab4:	push   0xdd42be00
  423ab9:	push   0xbd767c00
  423abe:	call   0x424fb8
  423ac3:	add    esp,0x14
  423ac6:	push   0x49b29200
  423acb:	push   0x9926ac00
  423ad0:	push   0xffffffb8
  423ad2:	call   0x4249b5
  423ad7:	add    esp,0xc
  423ada:	push   esi
  423adb:	push   0x43b99d00
  423ae0:	push   0x53e5400
  423ae5:	call   0x424fb8
  423aea:	add    esp,0x8
  423aed:	push   edi
  423aee:	push   0xc9bed500
  423af3:	push   0xe109e100
  423af8:	call   0x424286
  423afd:	add    esp,0x8
  423b00:	call   0x4250fa
  423b05:	mov    edx,DWORD PTR [ebp+0x10]
  423b08:	sub    eax,edx
  423b0a:	cmp    edx,eax
  423b0c:	je     0x423b32
  423b0e:	cmp    eax,DWORD PTR [ebp-0x18]
  423b11:	jne    0x423b32
  423b13:	add    eax,eax
  423b15:	and    eax,edx
  423b17:	xor    ebx,ebx
  423b19:	cmp    eax,DWORD PTR [ebp-0x2c]
  423b1c:	je     0x423b32
  423b1e:	add    eax,eax
  423b20:	mov    ecx,ebx
  423b22:	mov    ebx,0xf0
  423b27:	mov    DWORD PTR [ebp-0x20],ecx
  423b2a:	sub    eax,edx
  423b2c:	sub    DWORD PTR [ebp-0x20],ebx
  423b2f:	sub    DWORD PTR [ebp-0x20],eax
  423b32:	mov    eax,DWORD PTR [ebp+0x8]
  423b35:	or     ebx,edx
  423b37:	mov    edi,0x83
  423b3c:	mov    esi,0x4171
  423b41:	cmp    edx,0xffffffbd
  423b44:	je     0x423bf1
  423b4a:	add    esi,edx
  423b4c:	cmp    eax,DWORD PTR [ebp-0x18]
  423b4f:	je     0x423bf1
  423b55:	mov    ecx,0xa5
  423b5a:	cmp    eax,0xffffffcc
  423b5d:	jne    0x423bf1
  423b63:	test   ebx,0x63
  423b69:	je     0x423bf1
  423b6f:	and    ebx,esi
  423b71:	xor    esi,esi
  423b73:	mov    DWORD PTR [ebp-0x40],esi
  423b76:	cmp    ebx,0xc05a
  423b7c:	je     0x423bf1
  423b7e:	sub    edi,edx
  423b80:	add    DWORD PTR [ebp-0x40],edi
  423b83:	cmp    edi,0xcde8
  423b89:	je     0x423bf1
  423b8b:	mov    DWORD PTR [ebp-0x40],ecx
  423b8e:	sub    ebx,edi
  423b90:	cmp    eax,edi
  423b92:	je     0x423bf1
  423b94:	cmp    eax,0x7d
  423b97:	je     0x423bf1
  423b99:	cmp    eax,DWORD PTR [ebp-0x24]
  423b9c:	je     0x423bf1
  423b9e:	mov    edi,DWORD PTR [ebp-0x40]
  423ba1:	and    edi,ecx
  423ba3:	cmp    edi,0x54fd
  423ba9:	jne    0x423bf1
  423bab:	sub    edi,esi
  423bad:	sub    DWORD PTR [ebp-0x40],esi
  423bb0:	mov    ecx,DWORD PTR [ebp-0x40]
  423bb3:	mov    esi,0x3
  423bb8:	cmp    edi,0xf
  423bbb:	je     0x423bf1
  423bbd:	add    DWORD PTR [ebp-0x40],ecx
  423bc0:	mov    ecx,DWORD PTR [ebp-0x40]
  423bc3:	or     ecx,edi
  423bc5:	cmp    ecx,DWORD PTR [ebp-0x20]
  423bc8:	jne    0x423bf1
  423bca:	sub    DWORD PTR [ebp-0x40],esi
  423bcd:	mov    esi,DWORD PTR [ebp-0x40]
  423bd0:	mov    edi,DWORD PTR [ebp-0x40]
  423bd3:	sub    edi,eax
  423bd5:	add    DWORD PTR [ebp-0x40],ebx
  423bd8:	add    DWORD PTR [ebp-0x40],esi
  423bdb:	sub    DWORD PTR [ebp-0x40],eax
  423bde:	add    edi,edi
  423be0:	cmp    edi,0xffffffa1
  423be3:	jne    0x423bf1
  423be5:	or     DWORD PTR [ebp-0x40],edi
  423be8:	mov    esi,DWORD PTR [ebp-0x40]
  423beb:	sub    DWORD PTR [ebp-0x40],esi
  423bee:	add    DWORD PTR [ebp-0x40],ecx
  423bf1:	cmp    DWORD PTR [ebp+0xc],edx
  423bf4:	je     0x423cdb
  423bfa:	mov    esi,0xd7f6
  423bff:	mov    ecx,0x69
  423c04:	mov    DWORD PTR [ebp-0x38],ecx
  423c07:	cmp    edx,DWORD PTR [ebp-0x14]
  423c0a:	jne    0x423c56
  423c0c:	and    esi,ecx
  423c0e:	mov    ecx,DWORD PTR [ebp-0x38]
  423c11:	sub    esi,ebx
  423c13:	mov    edi,DWORD PTR [ebp-0x38]
  423c16:	add    edi,esi
  423c18:	test   edi,0x8c
  423c1e:	jne    0x423c56
  423c20:	mov    esi,0x18c38c6
  423c25:	mov    DWORD PTR [ebp-0x38],ecx
  423c28:	mov    ecx,0x3370
  423c2d:	add    edi,ebx
  423c2f:	add    DWORD PTR [ebp-0x38],edi
  423c32:	add    DWORD PTR [ebp-0x38],esi
  423c35:	add    DWORD PTR [ebp-0x38],edi
  423c38:	add    ecx,esi
  423c3a:	add    DWORD PTR [ebp-0x38],eax
  423c3d:	sub    DWORD PTR [ebp-0x38],edx
  423c40:	test   edi,0x6e
  423c46:	jne    0x423c56
  423c48:	sub    edi,eax
  423c4a:	mov    ecx,edi
  423c4c:	sub    ecx,edi
  423c4e:	mov    esi,DWORD PTR [ebp-0x38]
  423c51:	sub    esi,ecx
  423c53:	add    DWORD PTR [ebp-0x38],esi
  423c56:	dec    DWORD PTR [ebp+0xc]
  423c59:	mov    ecx,DWORD PTR [ebp-0x38]
  423c5c:	add    DWORD PTR [ebp-0x38],ecx
  423c5f:	ror    DWORD PTR [eax],0xc
  423c62:	mov    edi,0x23
  423c67:	mov    esi,DWORD PTR [ebp-0x38]
  423c6a:	sub    edi,edx
  423c6c:	cmp    esi,DWORD PTR [ebp-0x40]
  423c6f:	jne    0x423c89
  423c71:	mov    ecx,0x1c
  423c76:	or     DWORD PTR [ebp-0x38],edi
  423c79:	sub    esi,ecx
  423c7b:	add    esi,edx
  423c7d:	cmp    eax,0xffffffb0
  423c80:	jne    0x423c89
  423c82:	sub    esi,edi
  423c84:	and    esi,ebx
  423c86:	or     DWORD PTR [ebp-0x38],esi
  423c89:	xor    DWORD PTR [eax],edx
  423c8b:	cmp    ebx,0xb
  423c8e:	jne    0x423ca8
  423c90:	mov    edi,DWORD PTR [ebp-0x38]
  423c93:	mov    esi,DWORD PTR [ebp-0x38]
  423c96:	and    esi,ebx
  423c98:	cmp    edi,ebx
  423c9a:	jne    0x423ca8
  423c9c:	mov    ecx,0x136a185
  423ca1:	sub    edi,esi
  423ca3:	sub    ecx,edi
  423ca5:	sub    DWORD PTR [ebp-0x38],ecx
  423ca8:	add    DWORD PTR [eax],0x494544dc
  423cae:	sub    esi,ebx
  423cb0:	mov    ecx,DWORD PTR [ebp-0x38]
  423cb3:	xor    DWORD PTR [ebp-0x38],esi
  423cb6:	mov    esi,0xf9
  423cbb:	add    DWORD PTR [ebp-0x38],esi
  423cbe:	sub    DWORD PTR [ebp-0x38],ecx
  423cc1:	add    eax,0x4
  423cc4:	test   eax,0x1eb9
  423cc9:	je     0x423cd6
  423ccb:	mov    edi,esi
  423ccd:	sub    edi,ecx
  423ccf:	xor    esi,esi
  423cd1:	sub    esi,edi
  423cd3:	or     DWORD PTR [ebp-0x38],esi
  423cd6:	jmp    0x423b35
  423cdb:	push   0x47
  423cdd:	push   0x39214500
  423ce2:	push   0xffffff89
  423ce4:	push   0x4527a600
  423ce9:	call   0x424bfa
  423cee:	add    esp,0x10
  423cf1:	push   0x22
  423cf3:	push   0xfffffff7
  423cf5:	push   0x53de6400
  423cfa:	push   0xffffff82
  423cfc:	push   0x5149e600
  423d01:	call   0x4250fa
  423d06:	add    esp,0x14
  423d09:	push   0xffffff83
  423d0b:	push   0xc3c5dc00
  423d10:	push   0x31f59a00
  423d15:	push   0xffffffa6
  423d17:	push   0xffffff97
  423d19:	call   0x424bfa
  423d1e:	add    esp,0x14
  423d21:	mov    esi,DWORD PTR [ebp-0x38]
  423d24:	sub    DWORD PTR [ebp-0x38],esi
  423d27:	push   0x2d454000
  423d2c:	push   0x89b22e00
  423d31:	push   0x42
  423d33:	push   0xffffff82
  423d35:	call   0x4250fa
  423d3a:	add    esp,0x10
  423d3d:	pop    edi
  423d3e:	mov    ebx,DWORD PTR [ebp-0x38]
  423d41:	push   0x4a
  423d43:	push   0xffffffa7
  423d45:	push   0x3d
  423d47:	call   0x424bfa
  423d4c:	add    esp,0xc
  423d4f:	sub    ebx,esi
  423d51:	add    ebx,ebx
  423d53:	cmp    edi,0xffffff8c
  423d56:	jne    0x423e84
  423d5c:	push   0x89121c00
  423d61:	call   0x424fb8
  423d66:	add    esp,0x4
  423d69:	cmp    edi,0xffffffb2
  423d6c:	je     0x423e84
  423d72:	push   0xffffffc0
  423d74:	call   0x4250fa
  423d79:	add    esp,0x4
  423d7c:	push   0x439e9200
  423d81:	push   0x52
  423d83:	call   0x424fb8
  423d88:	add    esp,0x8
  423d8b:	sub    ebx,eax
  423d8d:	test   ebx,0xea
  423d93:	je     0x423e84
  423d99:	push   0xffffff8a
  423d9b:	push   0xb1ce0700
  423da0:	call   0x4252a2
  423da5:	add    esp,0x8
  423da8:	sub    ebx,esi
  423daa:	push   0xfffffff3
  423dac:	push   0xffffffd4
  423dae:	push   0x19
  423db0:	push   0x25
  423db2:	push   0xb5441400
  423db7:	call   0x424286
  423dbc:	add    esp,0x14
  423dbf:	push   0xffffffb6
  423dc1:	push   0xd5211500
  423dc6:	push   0x89c43400
  423dcb:	push   0x27
  423dcd:	call   0x4250fa
  423dd2:	add    esp,0x10
  423dd5:	xor    eax,eax
  423dd7:	mov    ecx,DWORD PTR [ebp-0x38]
  423dda:	push   0xc9d65300
  423ddf:	push   0x6a
  423de1:	push   0xffffff83
  423de3:	push   0x55
  423de5:	push   0x83966d00
  423dea:	call   0x424286
  423def:	add    esp,0x14
  423df2:	push   0x89ed5300
  423df7:	push   0x33ce6900
  423dfc:	push   0x2d207200
  423e01:	call   0x424709
  423e06:	add    esp,0xc
  423e09:	and    DWORD PTR [ebp-0x38],edi
  423e0c:	push   0x77
  423e0e:	push   0x753a6200
  423e13:	push   0x33cbc300
  423e18:	push   0xc93c0a00
  423e1d:	push   0xfffffffd
  423e1f:	call   0x424286
  423e24:	add    esp,0x14
  423e27:	push   0x91ee1100
  423e2c:	push   0x3d3f0b00
  423e31:	push   0x61
  423e33:	push   0x31bd8600
  423e38:	push   0xe3b6bc00
  423e3d:	call   0x424fb8
  423e42:	add    esp,0x14
  423e45:	push   0x23c78f00
  423e4a:	push   0x9fc7500
  423e4f:	push   0xffffffc6
  423e51:	call   0x424fb8
  423e56:	add    esp,0xc
  423e59:	push   0xffffff9a
  423e5b:	call   0x424bfa
  423e60:	add    esp,0x4
  423e63:	push   0xb97c8b00
  423e68:	push   0xad159b00
  423e6d:	push   0x9baf900
  423e72:	push   0xbd75e800
  423e77:	push   0xffffffdf
  423e79:	call   0x424d2b
  423e7e:	add    esp,0x14
  423e81:	add    DWORD PTR [ebp-0x38],ebx
  423e84:	push   0x43a9ca00
  423e89:	push   0x45
  423e8b:	call   0x4252a2
  423e90:	add    esp,0x8
  423e93:	pop    esi
  423e94:	push   0xc
  423e96:	push   0xad773100
  423e9b:	push   0xffffffa6
  423e9d:	push   0x4d
  423e9f:	call   0x4249b5
  423ea4:	add    esp,0x10
  423ea7:	pop    ebx
  423ea8:	xor    DWORD PTR [ebp-0x38],esi
  423eab:	push   0xe5402500
  423eb0:	push   0x79067400
  423eb5:	push   0xa3b83400
  423eba:	push   0x7392ca00
  423ebf:	call   0x424bfa
  423ec4:	add    esp,0x10
  423ec7:	leave  
  423ec8:	ret    0xc
  423ecb:	int3   
  423ecc:	int3   
  423ecd:	int3   
  423ece:	int3   
  423ecf:	int3   
  423ed0:	push   ebp
  423ed1:	mov    ebp,esp
  423ed3:	sub    esp,0x48
  423ed6:	push   0x77
  423ed8:	call   0x424709
  423edd:	add    esp,0x4
  423ee0:	push   ebx
  423ee1:	mov    ecx,DWORD PTR ds:0x438048
  423ee7:	mov    DWORD PTR [ebp-0x24],ecx
  423eea:	push   esi
  423eeb:	xor    edx,edx
  423eed:	push   0xfffffff3
  423eef:	push   0x8954d000
  423ef4:	call   0x424bfa
  423ef9:	add    esp,0x8
  423efc:	push   edi
  423efd:	push   0xffffff8c
  423eff:	push   0x33f3f900
  423f04:	push   0x13836e00
  423f09:	push   0xffffffed
  423f0b:	push   0xffffffb8
  423f0d:	call   0x424d2b
  423f12:	add    esp,0x14
  423f15:	push   0xdd41de00
  423f1a:	call   0x424d2b
  423f1f:	add    esp,0x4
  423f22:	push   0x40
  423f24:	push   0xfffffff3
  423f26:	push   0xffffffc6
  423f28:	call   0x424709
  423f2d:	add    esp,0xc
  423f30:	mov    ecx,0x33bda36
  423f35:	mov    esi,DWORD PTR [ebp-0x24]
  423f38:	add    DWORD PTR [ebp-0x24],eax
  423f3b:	and    esi,eax
  423f3d:	sub    esi,ecx
  423f3f:	mov    edi,DWORD PTR ds:0x438048
  423f45:	and    edi,eax
  423f47:	sub    esi,eax
  423f49:	cmp    esi,DWORD PTR ds:0x438048
  423f4f:	je     0x423f66
  423f51:	mov    edx,ecx
  423f53:	add    DWORD PTR [ebp-0x24],edi
  423f56:	mov    edx,DWORD PTR [ebp-0x24]
  423f59:	add    edx,edi
  423f5b:	and    edx,ecx
  423f5d:	add    edx,esi
  423f5f:	cmp    edx,eax
  423f61:	jne    0x423f66
  423f63:	sub    DWORD PTR [ebp-0x24],edx
  423f66:	sub    ecx,0x33bd9f6
  423f6c:	mov    eax,DWORD PTR ds:0x438048
  423f72:	mov    edx,DWORD PTR ds:0x438048
  423f78:	sub    eax,edx
  423f7a:	sub    eax,esi
  423f7c:	sub    DWORD PTR [ebp-0x24],eax
  423f7f:	push   ecx
  423f80:	push   0x53f72300
  423f85:	push   0xf3819b00
  423f8a:	call   0x424bfa
  423f8f:	add    esp,0x8
  423f92:	mov    eax,0x97926cc
  423f97:	mov    esi,DWORD PTR [ebp-0x24]
  423f9a:	mov    edi,DWORD PTR [ebp-0x24]
  423f9d:	cmp    esi,DWORD PTR ds:0x438048
  423fa3:	jne    0x423ff3
  423fa5:	mov    edx,0x3913
  423faa:	mov    ecx,esi
  423fac:	add    ecx,eax
  423fae:	cmp    ecx,DWORD PTR ds:0x438048
  423fb4:	jne    0x423ff3
  423fb6:	or     edi,edx
  423fb8:	and    DWORD PTR [ebp-0x24],edi
  423fbb:	test   ecx,0xa761
  423fc1:	jne    0x423ff3
  423fc3:	mov    edi,0x11
  423fc8:	mov    esi,DWORD PTR [ebp-0x24]
  423fcb:	add    DWORD PTR [ebp-0x24],ecx
  423fce:	add    DWORD PTR [ebp-0x24],edi
  423fd1:	sub    esi,edi
  423fd3:	cmp    esi,0x55
  423fd6:	jne    0x423ff3
  423fd8:	sub    esi,ecx
  423fda:	cmp    esi,edx
  423fdc:	je     0x423ff3
  423fde:	mov    ebx,edi
  423fe0:	mov    edx,DWORD PTR ds:0x438048
  423fe6:	add    edx,ecx
  423fe8:	sub    ebx,eax
  423fea:	add    DWORD PTR [ebp-0x24],esi
  423fed:	sub    DWORD PTR [ebp-0x24],ebx
  423ff0:	add    DWORD PTR [ebp-0x24],edx
  423ff3:	add    eax,0xf6870934
  423ff8:	mov    esi,eax
  423ffa:	add    DWORD PTR [ebp-0x24],esi
  423ffd:	push   eax
  423ffe:	push   0x71784e00
  424003:	push   0xffffffc5
  424005:	push   0xffffffd7
  424007:	call   0x42439b
  42400c:	add    esp,0xc
  42400f:	push   0xc9946d00
  424014:	call   0x424286
  424019:	add    esp,0x4
  42401c:	push   0x5c553
  424021:	test   eax,0xc4
  424026:	jne    0x42403d
  424028:	push   0x9165dc00
  42402d:	push   0xffffffc4
  42402f:	push   0xffffff80
  424031:	push   0xffffffd2
  424033:	push   0x12
  424035:	call   0x4250fa
  42403a:	add    esp,0x14
  42403d:	push   0xb1c87900
  424042:	push   0x43f3b200
  424047:	call   0x424fb8
  42404c:	add    esp,0x8
  42404f:	push   0x0
  424051:	push   0x6e
  424053:	push   0xffffffab
  424055:	push   0x52
  424057:	push   0xffffffc2
  424059:	call   0x42439b
  42405e:	add    esp,0x10
  424061:	mov    edx,0x9ae1c95
  424066:	add    DWORD PTR [ebp-0x24],edx
  424069:	sub    edx,0x96ac3b5
  42406f:	mov    ecx,0x77
  424074:	mov    esi,DWORD PTR [ebp-0x24]
  424077:	sub    DWORD PTR [ebp-0x24],ebx
  42407a:	cmp    esi,ecx
  42407c:	je     0x4240f6
  42407e:	add    DWORD PTR [ebp-0x24],ecx
  424081:	add    DWORD PTR [ebp-0x24],ebx
  424084:	mov    edi,esi
  424086:	xor    ebx,ebx
  424088:	sub    ebx,edx
  42408a:	sub    DWORD PTR [ebp-0x24],edi
  42408d:	add    DWORD PTR [ebp-0x24],esi
  424090:	cmp    esi,0x62
  424093:	jne    0x4240f6
  424095:	cmp    esi,0x31ac110c
  42409b:	je     0x4240f6
  42409d:	mov    ecx,DWORD PTR ds:0x438064
  4240a3:	mov    edi,DWORD PTR [ebp-0x24]
  4240a6:	add    DWORD PTR [ebp-0x24],ecx
  4240a9:	test   edi,0x7031
  4240af:	je     0x4240f6
  4240b1:	mov    esi,0x68
  4240b6:	mov    ecx,DWORD PTR [ebp-0x24]
  4240b9:	sub    ecx,eax
  4240bb:	cmp    ecx,eax
  4240bd:	jne    0x4240f6
  4240bf:	mov    ebx,eax
  4240c1:	add    DWORD PTR [ebp-0x24],edi
  4240c4:	or     ebx,edi
  4240c6:	xor    eax,eax
  4240c8:	add    ebx,edi
  4240ca:	add    DWORD PTR [ebp-0x24],esi
  4240cd:	cmp    ecx,ebx
  4240cf:	jne    0x4240f6
  4240d1:	cmp    ebx,0xffffffff
  4240d4:	je     0x4240f6
  4240d6:	mov    esi,0x66
  4240db:	mov    edi,0x66
  4240e0:	sub    DWORD PTR [ebp-0x24],ecx
  4240e3:	sub    edi,ebx
  4240e5:	add    esi,esi
  4240e7:	add    DWORD PTR [ebp-0x24],edx
  4240ea:	add    DWORD PTR [ebp-0x24],edi
  4240ed:	add    esi,ecx
  4240ef:	cmp    esi,eax
  4240f1:	je     0x4240f6
  4240f3:	and    DWORD PTR [ebp-0x24],esi
  4240f6:	call   DWORD PTR [edx]
  4240f8:	mov    ecx,0x2e
  4240fd:	mov    ebx,DWORD PTR [ebp-0x24]
  424100:	sub    ebx,ecx
  424102:	cmp    ebx,0x2a
  424105:	jne    0x42410f
  424107:	cmp    ebx,DWORD PTR [ebp-0x1c]
  42410a:	jne    0x42410f
  42410c:	sub    DWORD PTR [ebp-0x24],ebx
  42410f:	mov    DWORD PTR [ebp-0x14],eax
  424112:	mov    ebx,DWORD PTR ds:0x438048
  424118:	add    ebx,ebx
  42411a:	push   0x656de600
  42411f:	call   0x4250fa
  424124:	add    esp,0x4
  424127:	sub    DWORD PTR [ebp-0x24],ebx
  42412a:	mov    esi,0xb15f19e6
  42412f:	sub    DWORD PTR [ebp-0x24],esi
  424132:	push   0xffffffbf
  424134:	push   0xa392d700
  424139:	push   0x9719a00
  42413e:	push   0xc3f01c00
  424143:	call   0x424286
  424148:	add    esp,0x10
  42414b:	add    esi,0x4ee4661a
  424151:	push   0x54
  424153:	push   0xcd5a5e00
  424158:	push   0xffffffcd
  42415a:	push   0xffffffd8
  42415c:	call   0x4249b5
  424161:	add    esp,0x10
  424164:	mov    DWORD PTR [ebp-0x4],esi
  424167:	push   0x6d085b00
  42416c:	push   0x43d43000
  424171:	call   0x424bfa
  424176:	add    esp,0x8
  424179:	push   0x8943bd00
  42417e:	push   0xe5094000
  424183:	call   0x424fb8
  424188:	add    esp,0x8
  42418b:	mov    edi,DWORD PTR [ebp-0x14]
  42418e:	add    eax,eax
  424190:	push   0xffffffbc
  424192:	push   0x83b0a500
  424197:	push   0x83866a00
  42419c:	push   0xffffffa4
  42419e:	push   0x2d21a400
  4241a3:	call   0x424bfa
  4241a8:	add    esp,0x14
  4241ab:	mov    ecx,DWORD PTR [ebp-0x24]
  4241ae:	sub    ecx,esi
  4241b0:	mov    edx,DWORD PTR [ebp-0x24]
  4241b3:	add    ecx,ebx
  4241b5:	and    edx,edi
  4241b7:	sub    ecx,edx
  4241b9:	mov    DWORD PTR [ebp-0x24],ecx
  4241bc:	mov    edx,DWORD PTR [ebp-0x4]
  4241bf:	cmp    eax,0x2f
  4241c2:	je     0x4241e3
  4241c4:	add    ecx,ecx
  4241c6:	mov    esi,DWORD PTR ds:0x438048
  4241cc:	xor    DWORD PTR [ebp-0x24],ecx
  4241cf:	mov    ecx,0x3774
  4241d4:	sub    esi,ecx
  4241d6:	and    esi,ebx
  4241d8:	cmp    edx,0x1f
  4241db:	jne    0x4241e3
  4241dd:	sub    DWORD PTR [ebp-0x24],edx
  4241e0:	add    DWORD PTR [ebp-0x24],esi
  4241e3:	mov    esi,DWORD PTR [edx]
  4241e5:	add    DWORD PTR [ebp-0x24],esi
  4241e8:	mov    ecx,DWORD PTR [edx+0x4]
  4241eb:	mov    edx,edi
  4241ed:	cmp    ecx,esi
  4241ef:	jne    0x4241f8
  4241f1:	and    edx,edi
  4241f3:	and    edx,edi
  4241f5:	add    DWORD PTR [ebp-0x24],edx
  4241f8:	or     esi,esi
  4241fa:	je     0x424222
  4241fc:	mov    edx,DWORD PTR [ebp-0x24]
  4241ff:	add    edx,edx
  424201:	cmp    edx,DWORD PTR [ebp-0x48]
  424204:	jne    0x424209
  424206:	add    DWORD PTR [ebp-0x24],edx
  424209:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42420b:	add    ecx,ebx
  42420d:	sub    ecx,edi
  42420f:	mov    edx,ecx
  424211:	xor    DWORD PTR [ebp-0x24],edx
  424214:	add    DWORD PTR [ebp-0x4],0x8
  424218:	xor    ecx,ecx
  42421a:	add    DWORD PTR [ebp-0x24],ecx
  42421d:	jmp    0x42418e
  424222:	push   0x5c
  424224:	push   0x91876200
  424229:	push   0xf1224300
  42422e:	call   0x424d2b
  424233:	add    esp,0xc
  424236:	call   0x424286
  42423b:	call   0x42439b
  424240:	mov    eax,DWORD PTR [ebp-0x14]
  424243:	mov    ecx,0xfd
  424248:	add    DWORD PTR [ebp-0x24],eax
  42424b:	add    DWORD PTR [ebp-0x24],ecx
  42424e:	add    DWORD PTR [ebp-0x24],eax
  424251:	pop    edi
  424252:	mov    ebx,0x50
  424257:	mov    ecx,DWORD PTR [ebp-0x24]
  42425a:	sub    ecx,ebx
  42425c:	xor    DWORD PTR [ebp-0x24],ecx
  42425f:	pop    esi
  424260:	mov    ecx,ebx
  424262:	xor    ebx,ebx
  424264:	mov    DWORD PTR [ebp-0x24],ecx
  424267:	sub    ebx,ecx
  424269:	and    ebx,ecx
  42426b:	sub    DWORD PTR [ebp-0x24],edi
  42426e:	add    ebx,edi
  424270:	test   ebx,0xf6
  424276:	jne    0x42427b
  424278:	add    DWORD PTR [ebp-0x24],ebx
  42427b:	pop    ebx
  42427c:	add    DWORD PTR [ebp-0x24],ebx
  42427f:	leave  
  424280:	ret    
  424281:	int3   
  424282:	int3   
  424283:	int3   
  424284:	int3   
  424285:	int3   
  424286:	push   ebp
  424287:	mov    ebp,esp
  424289:	sub    esp,0x38
  42428c:	push   0xffffffa5
  42428e:	push   0x39b4500
  424293:	push   0x32
  424295:	push   0xffffff9b
  424297:	push   0x77
  424299:	call   0x424bfa
  42429e:	add    esp,0x14
  4242a1:	push   0x60
  4242a3:	push   0xffffffb7
  4242a5:	push   0xa39ef400
  4242aa:	call   0x42439b
  4242af:	add    esp,0xc
  4242b2:	push   ebx
  4242b3:	xor    eax,eax
  4242b5:	mov    DWORD PTR [ebp-0x18],eax
  4242b8:	push   0x37
  4242ba:	push   0xffffff94
  4242bc:	call   0x4252a2
  4242c1:	add    esp,0x8
  4242c4:	push   esi
  4242c5:	mov    esi,DWORD PTR [ebp-0x18]
  4242c8:	push   0x73b0d300
  4242cd:	push   0xffffff8a
  4242cf:	call   0x4250fa
  4242d4:	add    esp,0x8
  4242d7:	push   0x4a
  4242d9:	push   0xbd28a500
  4242de:	push   0x8
  4242e0:	call   0x424d2b
  4242e5:	add    esp,0xc
  4242e8:	push   0xd136d00
  4242ed:	call   0x4250fa
  4242f2:	add    esp,0x4
  4242f5:	xor    DWORD PTR [ebp-0x18],esi
  4242f8:	push   edi
  4242f9:	add    DWORD PTR [ebp-0x18],esi
  4242fc:	push   0xe3fe7800
  424301:	push   0xffffff9b
  424303:	push   0x83893600
  424308:	push   0x71768c00
  42430d:	call   0x424d2b
  424312:	add    esp,0x10
  424315:	push   0xffffffd5
  424317:	push   0xc5705e00
  42431c:	push   0x9d410700
  424321:	push   0x3f
  424323:	call   0x424fb8
  424328:	add    esp,0x10
  42432b:	test   esi,0x70d0
  424331:	je     0x424345
  424333:	push   0xf157e300
  424338:	push   0x1d43d600
  42433d:	call   0x42439b
  424342:	add    esp,0x8
  424345:	add    DWORD PTR [ebp-0x18],eax
  424348:	push   0x43
  42434a:	call   0x424fb8
  42434f:	add    esp,0x4
  424352:	pop    edi
  424353:	mov    ebx,esi
  424355:	add    ebx,esi
  424357:	add    DWORD PTR [ebp-0x18],ebx
  42435a:	pop    esi
  42435b:	test   edi,0xb4
  424361:	jne    0x424375
  424363:	mov    edx,DWORD PTR [ebp-0x18]
  424366:	push   0x77
  424368:	push   0x49f44000
  42436d:	call   0x4252a2
  424372:	add    esp,0x8
  424375:	push   0x91b01500
  42437a:	call   0x42439b
  42437f:	add    esp,0x4
  424382:	pop    ebx
  424383:	push   0xffffff93
  424385:	push   0xad1c5d00
  42438a:	push   0xfffffffc
  42438c:	call   0x424709
  424391:	add    esp,0xc
  424394:	leave  
  424395:	ret    
  424396:	int3   
  424397:	int3   
  424398:	int3   
  424399:	int3   
  42439a:	int3   
  42439b:	push   ebp
  42439c:	mov    ebp,esp
  42439e:	sub    esp,0x3c
  4243a1:	xor    ecx,ecx
  4243a3:	push   0x2d5a1600
  4243a8:	push   0x8
  4243aa:	push   0xd55af00
  4243af:	push   0x43
  4243b1:	call   0x424fb8
  4243b6:	add    esp,0x10
  4243b9:	push   ebx
  4243ba:	cmp    eax,DWORD PTR [ebp-0x8]
  4243bd:	je     0x4243d4
  4243bf:	push   0xffffff93
  4243c1:	push   0x13
  4243c3:	push   0x6c
  4243c5:	push   0x14
  4243c7:	push   0x73d6fb00
  4243cc:	call   0x424d2b
  4243d1:	add    esp,0x14
  4243d4:	push   0x67
  4243d6:	call   0x4252a2
  4243db:	add    esp,0x4
  4243de:	push   esi
  4243df:	call   0x424d2b
  4243e4:	push   edi
  4243e5:	push   0x24
  4243e7:	push   0xe1294700
  4243ec:	call   0x4252a2
  4243f1:	add    esp,0x8
  4243f4:	xor    edi,edi
  4243f6:	push   0x7b
  4243f8:	push   0x7c
  4243fa:	push   0xffffffae
  4243fc:	call   0x4252a2
  424401:	add    esp,0xc
  424404:	xor    ebx,ebx
  424406:	call   0x4250fa
  42440b:	mov    DWORD PTR [ebp-0x1c],ebx
  42440e:	push   0xfffffffe
  424410:	push   0x9561e900
  424415:	push   0x6141da00
  42441a:	push   0x43bfd600
  42441f:	push   0x78
  424421:	call   0x424d2b
  424426:	add    esp,0x14
  424429:	push   0x4b
  42442b:	call   0x424fb8
  424430:	add    esp,0x4
  424433:	push   0x31902700
  424438:	push   0xfffffffd
  42443a:	call   0x424fb8
  42443f:	add    esp,0x8
  424442:	push   0xf
  424444:	push   0x6
  424446:	push   0xbd049d00
  42444b:	call   0x4250fa
  424450:	add    esp,0xc
  424453:	push   0xfffffff2
  424455:	push   0x6a
  424457:	push   0x31272800
  42445c:	push   0x6162ac00
  424461:	push   0x89fb0b00
  424466:	call   0x424d2b
  42446b:	add    esp,0x14
  42446e:	push   0x93accc00
  424473:	call   0x4252a2
  424478:	add    esp,0x4
  42447b:	call   0x4252a2
  424480:	push   0xffffffa7
  424482:	push   0xffffffa0
  424484:	push   0x57
  424486:	push   0x34
  424488:	call   0x4250fa
  42448d:	add    esp,0x10
  424490:	push   0x45
  424492:	push   0x71
  424494:	push   0xc99cfc00
  424499:	call   0x424d2b
  42449e:	add    esp,0xc
  4244a1:	add    edi,edi
  4244a3:	push   0xad117300
  4244a8:	push   0x4a
  4244aa:	push   0x7e
  4244ac:	push   0x7b
  4244ae:	call   0x4250fa
  4244b3:	add    esp,0x10
  4244b6:	and    edi,eax
  4244b8:	sub    edi,eax
  4244ba:	and    edi,ebx
  4244bc:	push   0x75
  4244be:	push   0xffffffd3
  4244c0:	push   0xffffffc3
  4244c2:	push   0xf1720d00
  4244c7:	push   0xffffffc3
  4244c9:	call   0x424d2b
  4244ce:	add    esp,0x14
  4244d1:	cmp    eax,0x4a
  4244d4:	je     0x4245f7
  4244da:	push   0x6390b900
  4244df:	push   0xffffffb0
  4244e1:	push   0x76
  4244e3:	push   0x7d173400
  4244e8:	push   0xc53b0d00
  4244ed:	call   0x4250fa
  4244f2:	add    esp,0x14
  4244f5:	mov    edx,DWORD PTR [ebp-0x1c]
  4244f8:	push   0xe3d62a00
  4244fd:	push   0x3f
  4244ff:	push   0x19542f00
  424504:	push   0x697a8600
  424509:	push   0xffffffeb
  42450b:	call   0x424fb8
  424510:	add    esp,0x14
  424513:	sub    edi,ebx
  424515:	push   0x23fc2600
  42451a:	call   0x4252a2
  42451f:	add    esp,0x4
  424522:	cmp    edi,0xffffff84
  424525:	je     0x4245f7
  42452b:	push   0x83f4ef00
  424530:	call   0x4252a2
  424535:	add    esp,0x4
  424538:	push   0xffffffdc
  42453a:	push   0xf9169d00
  42453f:	call   0x4252a2
  424544:	add    esp,0x8
  424547:	push   0x18
  424549:	push   0xe9387c00
  42454e:	push   0x49929d00
  424553:	push   0x53876a00
  424558:	push   0x9188e300
  42455d:	call   0x424d2b
  424562:	add    esp,0x14
  424565:	mov    edx,DWORD PTR [ebp-0x1c]
  424568:	or     DWORD PTR [ebp-0x1c],eax
  42456b:	push   0x2d3a9100
  424570:	push   0x89504300
  424575:	call   0x4252a2
  42457a:	add    esp,0x8
  42457d:	push   0x83c42600
  424582:	push   0x7d6b0500
  424587:	push   0x83f50400
  42458c:	call   0x424fb8
  424591:	add    esp,0xc
  424594:	push   0xffffffe9
  424596:	push   0xc995d900
  42459b:	push   0xffffffe9
  42459d:	push   0x5d6ba000
  4245a2:	call   0x424fb8
  4245a7:	add    esp,0x10
  4245aa:	and    edi,ebx
  4245ac:	mov    eax,0x84
  4245b1:	push   0xffffffa0
  4245b3:	push   0x9c31200
  4245b8:	push   0xffffffb5
  4245ba:	call   0x4250fa
  4245bf:	add    esp,0xc
  4245c2:	cmp    edi,DWORD PTR [ebp-0x14]
  4245c5:	je     0x4245f7
  4245c7:	cmp    edi,DWORD PTR [ebp-0x14]
  4245ca:	je     0x4245f7
  4245cc:	push   0xd175ed00
  4245d1:	call   0x424d2b
  4245d6:	add    esp,0x4
  4245d9:	push   0xffffff8f
  4245db:	push   0x65262400
  4245e0:	push   0x73ad8000
  4245e5:	push   0x53c0c200
  4245ea:	push   0x33
  4245ec:	call   0x4252a2
  4245f1:	add    esp,0x14
  4245f4:	add    DWORD PTR [ebp-0x1c],edi
  4245f7:	push   0x34
  4245f9:	push   0x91c69900
  4245fe:	push   0x7166ac00
  424603:	call   0x424fb8
  424608:	add    esp,0xc
  42460b:	add    DWORD PTR [ebp-0x1c],eax
  42460e:	push   0xffffff83
  424610:	push   0x13ba2200
  424615:	push   0x1a
  424617:	push   0x81087200
  42461c:	call   0x424fb8
  424621:	add    esp,0x10
  424624:	add    ebx,ebx
  424626:	push   0xffffffca
  424628:	push   0xd180800
  42462d:	call   0x4250fa
  424632:	add    esp,0x8
  424635:	push   0x14
  424637:	push   0x3f
  424639:	push   0xa38f3400
  42463e:	push   0x6d
  424640:	push   0x67
  424642:	call   0x424fb8
  424647:	add    esp,0x14
  42464a:	add    DWORD PTR [ebp-0x1c],eax
  42464d:	sub    ebx,edi
  42464f:	push   0xa51bd900
  424654:	push   0x5318f00
  424659:	push   0x6
  42465b:	call   0x4252a2
  424660:	add    esp,0xc
  424663:	push   0x72
  424665:	push   0x73c9cc00
  42466a:	call   0x4250fa
  42466f:	add    esp,0x8
  424672:	cmp    ebx,0x7b
  424675:	je     0x4246b0
  424677:	call   0x4252a2
  42467c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42467f:	mov    edi,DWORD PTR [ebp-0x1c]
  424682:	push   0xd91b6b00
  424687:	push   0x5f
  424689:	push   0x73
  42468b:	call   0x4250fa
  424690:	add    esp,0xc
  424693:	or     DWORD PTR [ebp-0x1c],eax
  424696:	push   0x49d63200
  42469b:	push   0xfffffff2
  42469d:	push   0x6c
  42469f:	push   0x13
  4246a1:	push   0xb
  4246a3:	call   0x424fb8
  4246a8:	add    esp,0x14
  4246ab:	sub    edi,ebx
  4246ad:	sub    DWORD PTR [ebp-0x1c],edi
  4246b0:	push   0xa9373900
  4246b5:	call   0x424d2b
  4246ba:	add    esp,0x4
  4246bd:	pop    edi
  4246be:	push   0x56
  4246c0:	push   0x11462600
  4246c5:	push   0x93e68900
  4246ca:	push   0x91e3bf00
  4246cf:	call   0x4250fa
  4246d4:	add    esp,0x10
  4246d7:	pop    esi
  4246d8:	push   0x1c
  4246da:	push   0xffffff8d
  4246dc:	push   0xffffffc6
  4246de:	call   0x424fb8
  4246e3:	add    esp,0xc
  4246e6:	push   0x55
  4246e8:	push   0x51dfb00
  4246ed:	call   0x4252a2
  4246f2:	add    esp,0x8
  4246f5:	pop    ebx
  4246f6:	and    eax,edi
  4246f8:	mov    ecx,ebx
  4246fa:	add    DWORD PTR [ebp-0x1c],esi
  4246fd:	call   0x4250fa
  424702:	leave  
  424703:	ret    
  424704:	int3   
  424705:	int3   
  424706:	int3   
  424707:	int3   
  424708:	int3   
  424709:	push   ebp
  42470a:	mov    ebp,esp
  42470c:	sub    esp,0x38
  42470f:	push   0xffffff87
  424711:	push   0xffffffcd
  424713:	push   0xffffffca
  424715:	push   0xffffff8e
  424717:	push   0xffffffa7
  424719:	call   0x4250fa
  42471e:	add    esp,0x14
  424721:	push   0xffffffda
  424723:	push   0xffffffb0
  424725:	push   0xffffff97
  424727:	push   0xffffffe3
  424729:	push   0x5a
  42472b:	call   0x424d2b
  424730:	add    esp,0x14
  424733:	push   ebx
  424734:	mov    ecx,0xc7
  424739:	call   0x424d2b
  42473e:	push   0x53fdaa00
  424743:	push   0xc9eaa300
  424748:	push   0x49f3f700
  42474d:	push   0xe503c300
  424752:	push   0x33eab200
  424757:	call   0x424fb8
  42475c:	add    esp,0x14
  42475f:	push   esi
  424760:	mov    DWORD PTR [ebp-0x20],eax
  424763:	push   0x13978200
  424768:	call   0x424fb8
  42476d:	add    esp,0x4
  424770:	push   edi
  424771:	push   0xb187d600
  424776:	push   0x91f3f700
  42477b:	push   0xffffffe9
  42477d:	call   0x424fb8
  424782:	add    esp,0xc
  424785:	push   0xc9e3f900
  42478a:	push   0x7
  42478c:	push   0x73ea5b00
  424791:	call   0x4252a2
  424796:	add    esp,0xc
  424799:	push   0x755ef000
  42479e:	push   0x4558a300
  4247a3:	push   0xffffffd7
  4247a5:	call   0x424d2b
  4247aa:	add    esp,0xc
  4247ad:	push   0x52
  4247af:	push   0x25
  4247b1:	push   0xffffffe5
  4247b3:	call   0x424d2b
  4247b8:	add    esp,0xc
  4247bb:	call   0x4252a2
  4247c0:	push   0x69
  4247c2:	call   0x4250fa
  4247c7:	add    esp,0x4
  4247ca:	push   0x1d288000
  4247cf:	call   0x4252a2
  4247d4:	add    esp,0x4
  4247d7:	push   0xffffffbb
  4247d9:	call   0x4250fa
  4247de:	add    esp,0x4
  4247e1:	pop    edi
  4247e2:	cmp    edi,eax
  4247e4:	je     0x42490f
  4247ea:	mov    esi,DWORD PTR [ebp-0x20]
  4247ed:	mov    ebx,DWORD PTR [ebp-0x20]
  4247f0:	add    ebx,edi
  4247f2:	cmp    ebx,edi
  4247f4:	jne    0x42490f
  4247fa:	push   0xf9537200
  4247ff:	push   0xffffffa0
  424801:	push   0xe9175a00
  424806:	push   0x23b45800
  42480b:	call   0x4250fa
  424810:	add    esp,0x10
  424813:	push   0xffffffc5
  424815:	push   0xa9755c00
  42481a:	push   0x7
  42481c:	call   0x4252a2
  424821:	add    esp,0xc
  424824:	mov    edx,ebx
  424826:	call   0x424fb8
  42482b:	sub    esi,eax
  42482d:	cmp    ebx,0x40
  424830:	je     0x42490f
  424836:	push   0x3d3a1000
  42483b:	push   0xe
  42483d:	push   0xbd1ed200
  424842:	push   0xb937f900
  424847:	push   0x1d
  424849:	call   0x4252a2
  42484e:	add    esp,0x14
  424851:	mov    ebx,eax
  424853:	mov    eax,0x3f4a
  424858:	push   0xd91da800
  42485d:	push   0xffffff90
  42485f:	push   0xc950fa00
  424864:	push   0xffffffcc
  424866:	call   0x4250fa
  42486b:	add    esp,0x10
  42486e:	cmp    ebx,0xffffffdd
  424871:	jne    0x42490f
  424877:	push   0x2b
  424879:	push   0x12
  42487b:	push   0x918d8e00
  424880:	push   0x1d
  424882:	push   0x42
  424884:	call   0x4252a2
  424889:	add    esp,0x14
  42488c:	mov    ecx,DWORD PTR [ebp-0x20]
  42488f:	push   0x62
  424891:	push   0xe3f5ec00
  424896:	push   0xb1da1d00
  42489b:	push   0xffffff9f
  42489d:	push   0xffffffe6
  42489f:	call   0x424d2b
  4248a4:	add    esp,0x14
  4248a7:	push   0xffffffae
  4248a9:	call   0x424d2b
  4248ae:	add    esp,0x4
  4248b1:	push   0xffffffd2
  4248b3:	push   0x715b6800
  4248b8:	call   0x4252a2
  4248bd:	add    esp,0x8
  4248c0:	mov    edx,DWORD PTR [ebp-0x20]
  4248c3:	push   0xffffffa3
  4248c5:	push   0x8141d300
  4248ca:	push   0xc1535b00
  4248cf:	push   0x9cf5200
  4248d4:	call   0x424fb8
  4248d9:	add    esp,0x10
  4248dc:	cmp    ebx,esi
  4248de:	jne    0x42490f
  4248e0:	push   0x41750f00
  4248e5:	push   0xffffff92
  4248e7:	push   0x296aff00
  4248ec:	push   0x9824b00
  4248f1:	push   0x4a
  4248f3:	call   0x424fb8
  4248f8:	add    esp,0x14
  4248fb:	mov    edx,0xbf
  424900:	push   0xffffffe3
  424902:	call   0x4252a2
  424907:	add    esp,0x4
  42490a:	sub    ebx,esi
  42490c:	add    DWORD PTR [ebp-0x20],ebx
  42490f:	pop    esi
  424910:	mov    ebx,edi
  424912:	cmp    esi,edi
  424914:	je     0x42498a
  424916:	call   0x424d2b
  42491b:	push   0xc
  42491d:	push   0xa3820e00
  424922:	push   0x53898b00
  424927:	push   0xffffffa8
  424929:	call   0x424fb8
  42492e:	add    esp,0x10
  424931:	push   0x17
  424933:	push   0xc9c92600
  424938:	push   0xffffffb1
  42493a:	push   0xffffffe0
  42493c:	call   0x4252a2
  424941:	add    esp,0x10
  424944:	mov    eax,DWORD PTR [ebp-0x20]
  424947:	push   0xffffffe7
  424949:	push   0xffffff99
  42494b:	push   0xb1b30000
  424950:	push   0x71464f00
  424955:	push   0x72
  424957:	call   0x4250fa
  42495c:	add    esp,0x14
  42495f:	mov    ecx,DWORD PTR [ebp-0x20]
  424962:	add    DWORD PTR [ebp-0x20],ecx
  424965:	cmp    esi,ecx
  424967:	je     0x42498a
  424969:	call   0x4252a2
  42496e:	push   0xffffffbe
  424970:	push   0xc92cac00
  424975:	push   0x89af3900
  42497a:	call   0x4250fa
  42497f:	add    esp,0xc
  424982:	call   0x424fb8
  424987:	add    DWORD PTR [ebp-0x20],ebx
  42498a:	push   0x89e7de00
  42498f:	push   0xc9d9cc00
  424994:	push   0x91e66300
  424999:	push   0xd3c6e200
  42499e:	call   0x424d2b
  4249a3:	add    esp,0x10
  4249a6:	pop    ebx
  4249a7:	cmp    ebx,edi
  4249a9:	je     0x4249ae
  4249ab:	add    DWORD PTR [ebp-0x20],ebx
  4249ae:	leave  
  4249af:	ret    
  4249b0:	int3   
  4249b1:	int3   
  4249b2:	int3   
  4249b3:	int3   
  4249b4:	int3   
  4249b5:	push   ebp
  4249b6:	mov    ebp,esp
  4249b8:	sub    esp,0x48
  4249bb:	mov    eax,0x71400503
  4249c0:	call   0x4252a2
  4249c5:	push   ebx
  4249c6:	cmp    eax,0x12
  4249c9:	je     0x424a0a
  4249cb:	xor    ebx,ebx
  4249cd:	xor    edx,edx
  4249cf:	call   0x424fb8
  4249d4:	push   0x7386bf00
  4249d9:	push   0x7c
  4249db:	call   0x4250fa
  4249e0:	add    esp,0x8
  4249e3:	or     ebx,eax
  4249e5:	push   0x85754800
  4249ea:	push   0x45
  4249ec:	call   0x4250fa
  4249f1:	add    esp,0x8
  4249f4:	call   0x424d2b
  4249f9:	push   0xffffffdf
  4249fb:	call   0x4252a2
  424a00:	add    esp,0x4
  424a03:	cmp    ebx,eax
  424a05:	je     0x424a0a
  424a07:	mov    DWORD PTR [ebp-0x4],ebx
  424a0a:	push   esi
  424a0b:	sub    ebx,eax
  424a0d:	push   0xffffffce
  424a0f:	call   0x4250fa
  424a14:	add    esp,0x4
  424a17:	push   0xa
  424a19:	push   0x39
  424a1b:	call   0x4250fa
  424a20:	add    esp,0x8
  424a23:	cmp    ebx,DWORD PTR [ebp-0x24]
  424a26:	je     0x424af9
  424a2c:	mov    ecx,eax
  424a2e:	call   0x4252a2
  424a33:	cmp    ebx,DWORD PTR [ebp-0x3c]
  424a36:	jne    0x424af9
  424a3c:	push   0x1b
  424a3e:	push   0xc
  424a40:	push   0x1a
  424a42:	push   0x1f
  424a44:	call   0x4250fa
  424a49:	add    esp,0x10
  424a4c:	push   0x7b
  424a4e:	call   0x4252a2
  424a53:	add    esp,0x4
  424a56:	push   0xe56a4100
  424a5b:	push   0xfffffff8
  424a5d:	call   0x4250fa
  424a62:	add    esp,0x8
  424a65:	xor    esi,esi
  424a67:	cmp    ebx,0x18
  424a6a:	je     0x424af9
  424a70:	push   0xffffff96
  424a72:	push   0x40
  424a74:	push   0xad752c00
  424a79:	call   0x4252a2
  424a7e:	add    esp,0xc
  424a81:	cmp    ebx,eax
  424a83:	jne    0x424af9
  424a85:	push   0xffffffeb
  424a87:	push   0x1
  424a89:	push   0xffffff8c
  424a8b:	call   0x424d2b
  424a90:	add    esp,0xc
  424a93:	push   0x25
  424a95:	push   0x2
  424a97:	push   0x28
  424a99:	push   0x11
  424a9b:	push   0x89e3f300
  424aa0:	call   0x4252a2
  424aa5:	add    esp,0x14
  424aa8:	mov    ecx,0x7b
  424aad:	push   0xc9bf1b00
  424ab2:	push   0x152bd600
  424ab7:	call   0x4252a2
  424abc:	add    esp,0x8
  424abf:	add    esi,ebx
  424ac1:	push   0x715f5600
  424ac6:	push   0x68
  424ac8:	push   0x3f
  424aca:	push   0xffffffae
  424acc:	push   0x23d83e00
  424ad1:	call   0x4252a2
  424ad6:	add    esp,0x14
  424ad9:	call   0x424d2b
  424ade:	push   0xf3d45400
  424ae3:	call   0x424fb8
  424ae8:	add    esp,0x4
  424aeb:	mov    edx,DWORD PTR ds:0x43804c
  424af1:	call   0x424fb8
  424af6:	mov    DWORD PTR [ebp-0x30],esi
  424af9:	push   edi
  424afa:	push   0xc9832200
  424aff:	call   0x4250fa
  424b04:	add    esp,0x4
  424b07:	push   0xffffff92
  424b09:	push   0xe9091400
  424b0e:	call   0x4250fa
  424b13:	add    esp,0x8
  424b16:	push   0x31af8700
  424b1b:	push   0xffffffda
  424b1d:	push   0x7d347a00
  424b22:	call   0x424fb8
  424b27:	add    esp,0xc
  424b2a:	push   0x91f3a000
  424b2f:	push   0x6d618a00
  424b34:	push   0xffffffea
  424b36:	push   0x41579200
  424b3b:	call   0x424fb8
  424b40:	add    esp,0x10
  424b43:	and    esi,eax
  424b45:	call   0x4252a2
  424b4a:	add    esi,eax
  424b4c:	mov    DWORD PTR [ebp-0x48],esi
  424b4f:	push   0xc9947000
  424b54:	push   0xffffff9a
  424b56:	push   0x512b4c00
  424b5b:	push   0xffffffc4
  424b5d:	call   0x4252a2
  424b62:	add    esp,0x10
  424b65:	push   0x50
  424b67:	push   0x48
  424b69:	call   0x4250fa
  424b6e:	add    esp,0x8
  424b71:	call   0x424d2b
  424b76:	sub    DWORD PTR [ebp-0x48],ebx
  424b79:	pop    edi
  424b7a:	mov    ecx,DWORD PTR [ebp-0x48]
  424b7d:	cmp    ecx,0xfffffffc
  424b80:	je     0x424bd4
  424b82:	mov    ebx,DWORD PTR ds:0x43804c
  424b88:	call   0x4250fa
  424b8d:	push   0xffffffef
  424b8f:	push   0xffffffab
  424b91:	push   0x54
  424b93:	push   0x74
  424b95:	call   0x424fb8
  424b9a:	add    esp,0x10
  424b9d:	push   0xffffffa9
  424b9f:	push   0x43889f00
  424ba4:	call   0x424d2b
  424ba9:	add    esp,0x8
  424bac:	mov    esi,edi
  424bae:	cmp    eax,0xffffff8c
  424bb1:	je     0x424bd4
  424bb3:	sub    DWORD PTR [ebp-0x48],esi
  424bb6:	call   0x4252a2
  424bbb:	push   0x25718900
  424bc0:	push   0x49ec2a00
  424bc5:	call   0x424fb8
  424bca:	add    esp,0x8
  424bcd:	or     ebx,edi
  424bcf:	sub    ebx,esi
  424bd1:	or     DWORD PTR [ebp-0x48],ebx
  424bd4:	pop    esi
  424bd5:	mov    eax,DWORD PTR [ebp-0x48]
  424bd8:	push   0x41440c00
  424bdd:	push   0xc9c02800
  424be2:	call   0x424fb8
  424be7:	add    esp,0x8
  424bea:	pop    ebx
  424beb:	mov    ecx,DWORD PTR [ebp-0x48]
  424bee:	call   0x4250fa
  424bf3:	leave  
  424bf4:	ret    
  424bf5:	int3   
  424bf6:	int3   
  424bf7:	int3   
  424bf8:	int3   
  424bf9:	int3   
  424bfa:	push   ebp
  424bfb:	mov    ebp,esp
  424bfd:	sub    esp,0x3c
  424c00:	push   0x83cfa400
  424c05:	push   0x49861200
  424c0a:	call   0x424d2b
  424c0f:	add    esp,0x8
  424c12:	push   ebx
  424c13:	add    eax,eax
  424c15:	push   0xb196e400
  424c1a:	push   0xf915ef00
  424c1f:	push   0xfffffff0
  424c21:	push   0xffffff8b
  424c23:	call   0x424fb8
  424c28:	add    esp,0x10
  424c2b:	push   0xffffffa4
  424c2d:	push   0x15313a00
  424c32:	push   0x16
  424c34:	call   0x424d2b
  424c39:	add    esp,0xc
  424c3c:	push   esi
  424c3d:	call   0x4250fa
  424c42:	call   0x424d2b
  424c47:	push   edi
  424c48:	cmp    eax,DWORD PTR [ebp-0x14]
  424c4b:	jne    0x424c61
  424c4d:	push   0x8
  424c4f:	push   0x53869c00
  424c54:	push   0xbd564400
  424c59:	call   0x4250fa
  424c5e:	add    esp,0xc
  424c61:	cmp    eax,0x60
  424c64:	jne    0x424c73
  424c66:	push   0xc97db500
  424c6b:	call   0x4252a2
  424c70:	add    esp,0x4
  424c73:	push   0x73b8c700
  424c78:	push   0x89924d00
  424c7d:	push   0x61
  424c7f:	call   0x424fb8
  424c84:	add    esp,0xc
  424c87:	push   0x3b
  424c89:	push   0x45
  424c8b:	push   0xffffff99
  424c8d:	push   0x0
  424c8f:	call   0x4252a2
  424c94:	add    esp,0x10
  424c97:	call   0x424d2b
  424c9c:	push   0xb13b8900
  424ca1:	push   0x81439d00
  424ca6:	push   0xffffffbc
  424ca8:	push   0x58
  424caa:	push   0xfffffff1
  424cac:	call   0x424fb8
  424cb1:	add    esp,0x14
  424cb4:	push   0x4e
  424cb6:	push   0x5147af00
  424cbb:	push   0x8946e800
  424cc0:	push   0x31a47900
  424cc5:	call   0x424d2b
  424cca:	add    esp,0x10
  424ccd:	push   0xffffffff
  424ccf:	call   0x424fb8
  424cd4:	add    esp,0x4
  424cd7:	push   0xb38c5b00
  424cdc:	push   0xd16cb700
  424ce1:	call   0x4252a2
  424ce6:	add    esp,0x8
  424ce9:	pop    edi
  424cea:	push   0xffffffe2
  424cec:	call   0x424d2b
  424cf1:	add    esp,0x4
  424cf4:	pop    esi
  424cf5:	push   0x73840b00
  424cfa:	push   0x5c
  424cfc:	push   0x74
  424cfe:	push   0xffffffd8
  424d00:	call   0x424fb8
  424d05:	add    esp,0x10
  424d08:	pop    ebx
  424d09:	push   0xffffffea
  424d0b:	push   0xe3933700
  424d10:	push   0x21126600
  424d15:	push   0xa1331900
  424d1a:	push   0xffffffd8
  424d1c:	call   0x424d2b
  424d21:	add    esp,0x14
  424d24:	leave  
  424d25:	ret    
  424d26:	int3   
  424d27:	int3   
  424d28:	int3   
  424d29:	int3   
  424d2a:	int3   
  424d2b:	push   ebp
  424d2c:	mov    ebp,esp
  424d2e:	sub    esp,0x30
  424d31:	push   0xffffff9b
  424d33:	call   0x4252a2
  424d38:	add    esp,0x4
  424d3b:	push   ebx
  424d3c:	push   0xb3f8a500
  424d41:	push   0xffffffbd
  424d43:	push   0xffffff80
  424d45:	push   0xf395a400
  424d4a:	push   0x91b12f00
  424d4f:	call   0x4252a2
  424d54:	add    esp,0x14
  424d57:	push   0xa10d7b00
  424d5c:	push   0x60
  424d5e:	push   0x6b
  424d60:	push   0x33
  424d62:	push   0xffffffea
  424d64:	call   0x4252a2
  424d69:	add    esp,0x14
  424d6c:	push   esi
  424d6d:	cmp    eax,0x50
  424d70:	je     0x424d84
  424d72:	push   0x91fde200
  424d77:	push   0x53d09100
  424d7c:	call   0x4252a2
  424d81:	add    esp,0x8
  424d84:	push   0xc3eec300
  424d89:	push   0x28
  424d8b:	call   0x4252a2
  424d90:	add    esp,0x8
  424d93:	push   edi
  424d94:	push   0xffffffe1
  424d96:	push   0x41343500
  424d9b:	push   0x7943a500
  424da0:	push   0x9bbbf00
  424da5:	push   0xffffffce
  424da7:	call   0x4252a2
  424dac:	add    esp,0x14
  424daf:	push   0x21
  424db1:	push   0x511f0d00
  424db6:	push   0x75
  424db8:	push   0xfffffff9
  424dba:	push   0xd154bb00
  424dbf:	call   0x4252a2
  424dc4:	add    esp,0x14
  424dc7:	cmp    eax,0xffffff88
  424dca:	je     0x424dcf
  424dcc:	mov    DWORD PTR [ebp-0xc],eax
  424dcf:	push   0x7d04a800
  424dd4:	push   0x5957c900
  424dd9:	push   0x74
  424ddb:	push   0xfffffff5
  424ddd:	push   0xffffffdc
  424ddf:	call   0x4252a2
  424de4:	add    esp,0x14
  424de7:	push   0x71719300
  424dec:	push   0xfffffff2
  424dee:	call   0x4252a2
  424df3:	add    esp,0x8
  424df6:	mov    esi,DWORD PTR ds:0x438078
  424dfc:	push   0x553d000
  424e01:	push   0x61
  424e03:	call   0x4252a2
  424e08:	add    esp,0x8
  424e0b:	push   0x3d
  424e0d:	push   0xc9f35500
  424e12:	call   0x4252a2
  424e17:	add    esp,0x8
  424e1a:	push   0xffffff8a
  424e1c:	push   0xffffff99
  424e1e:	push   0x6b
  424e20:	push   0xc9442300
  424e25:	call   0x4252a2
  424e2a:	add    esp,0x10
  424e2d:	push   0xffffffce
  424e2f:	push   0xd9177700
  424e34:	call   0x4252a2
  424e39:	add    esp,0x8
  424e3c:	xor    eax,eax
  424e3e:	sub    eax,esi
  424e40:	push   0x43c2e600
  424e45:	push   0xffffffb6
  424e47:	call   0x4252a2
  424e4c:	add    esp,0x8
  424e4f:	push   0xffffffdb
  424e51:	push   0x64
  424e53:	push   0x73820000
  424e58:	call   0x4252a2
  424e5d:	add    esp,0xc
  424e60:	push   0x916c900
  424e65:	push   0xfffffff3
  424e67:	push   0xbd778b00
  424e6c:	call   0x4252a2
  424e71:	add    esp,0xc
  424e74:	pop    edi
  424e75:	push   0xfffffff2
  424e77:	push   0x6565f000
  424e7c:	push   0xffffffd8
  424e7e:	push   0x23d9cc00
  424e83:	push   0x51341c00
  424e88:	call   0x4252a2
  424e8d:	add    esp,0x14
  424e90:	pop    esi
  424e91:	mov    ebx,0x84
  424e96:	sub    ebx,esi
  424e98:	call   0x4252a2
  424e9d:	push   0xc9978000
  424ea2:	push   0x4c
  424ea4:	push   0xdd7d7600
  424ea9:	call   0x4252a2
  424eae:	add    esp,0xc
  424eb1:	sub    ebx,edi
  424eb3:	xor    edx,edx
  424eb5:	cmp    ebx,edx
  424eb7:	je     0x424f88
  424ebd:	call   0x4252a2
  424ec2:	mov    eax,0x7a
  424ec7:	push   0xffffffcc
  424ec9:	call   0x4252a2
  424ece:	add    esp,0x4
  424ed1:	or     ebx,esi
  424ed3:	cmp    ebx,eax
  424ed5:	jne    0x424f88
  424edb:	call   0x4252a2
  424ee0:	push   0xffffffdf
  424ee2:	call   0x4252a2
  424ee7:	add    esp,0x4
  424eea:	push   0x53ff3100
  424eef:	call   0x4252a2
  424ef4:	add    esp,0x4
  424ef7:	push   0xf5294400
  424efc:	push   0xffffff92
  424efe:	push   0x83b7ce00
  424f03:	push   0x19
  424f05:	call   0x4252a2
  424f0a:	add    esp,0x10
  424f0d:	push   0x1b
  424f0f:	push   0x31fbe900
  424f14:	call   0x4252a2
  424f19:	add    esp,0x8
  424f1c:	mov    eax,0xec
  424f21:	push   0x23eadb00
  424f26:	push   0x110d1200
  424f2b:	call   0x4252a2
  424f30:	add    esp,0x8
  424f33:	mov    edx,0xe6
  424f38:	push   0x91a27700
  424f3d:	push   0x53
  424f3f:	push   0xd3e9de00
  424f44:	push   0x8d293f00
  424f49:	push   0xd90d9900
  424f4e:	call   0x4252a2
  424f53:	add    esp,0x14
  424f56:	push   0xffffffb9
  424f58:	push   0x791bba00
  424f5d:	push   0x78
  424f5f:	push   0x3194a300
  424f64:	call   0x4252a2
  424f69:	add    esp,0x10
  424f6c:	push   0xa11c6200
  424f71:	push   0xf500df00
  424f76:	push   0x59
  424f78:	call   0x4252a2
  424f7d:	add    esp,0xc
  424f80:	call   0x4252a2
  424f85:	mov    DWORD PTR [ebp-0x2c],ebx
  424f88:	push   0xf39eed00
  424f8d:	call   0x4252a2
  424f92:	add    esp,0x4
  424f95:	pop    ebx
  424f96:	push   0x43ce0b00
  424f9b:	push   0x8d7d8d00
  424fa0:	push   0x18
  424fa2:	push   0xffffffd2
  424fa4:	push   0x350bc400
  424fa9:	call   0x4252a2
  424fae:	add    esp,0x14
  424fb1:	leave  
  424fb2:	ret    
  424fb3:	int3   
  424fb4:	int3   
  424fb5:	int3   
  424fb6:	int3   
  424fb7:	int3   
  424fb8:	push   ebp
  424fb9:	mov    ebp,esp
  424fbb:	sub    esp,0x1c
  424fbe:	push   0x838fdc00
  424fc3:	call   0x4252a2
  424fc8:	add    esp,0x4
  424fcb:	push   ebx
  424fcc:	push   0x8
  424fce:	push   0xffffffd1
  424fd0:	push   0x352a4700
  424fd5:	push   0x37
  424fd7:	push   0x73a91e00
  424fdc:	call   0x4252a2
  424fe1:	add    esp,0x14
  424fe4:	push   0x72
  424fe6:	push   0xe3a11300
  424feb:	push   0xc5639e00
  424ff0:	call   0x4252a2
  424ff5:	add    esp,0xc
  424ff8:	push   esi
  424ff9:	push   0x15527d00
  424ffe:	push   0x6f
  425000:	call   0x4252a2
  425005:	add    esp,0x8
  425008:	push   edi
  425009:	push   0x91e77d00
  42500e:	push   0xf5141700
  425013:	push   0x313f4d00
  425018:	push   0xffffff99
  42501a:	call   0x4252a2
  42501f:	add    esp,0x10
  425022:	push   0x1d
  425024:	push   0x76
  425026:	push   0x4f
  425028:	call   0x4252a2
  42502d:	add    esp,0xc
  425030:	push   0x13a7200
  425035:	push   0x238bb000
  42503a:	push   0x7e
  42503c:	push   0x9926cf00
  425041:	call   0x4252a2
  425046:	add    esp,0x10
  425049:	push   0xffffffbf
  42504b:	push   0x1d4de600
  425050:	push   0xffffffed
  425052:	push   0xf3eb4e00
  425057:	push   0xd
  425059:	call   0x4252a2
  42505e:	add    esp,0x14
  425061:	push   0xc98cc800
  425066:	push   0xa3db9300
  42506b:	call   0x4252a2
  425070:	add    esp,0x8
  425073:	call   0x4252a2
  425078:	xor    ebx,ebx
  42507a:	push   0x2e
  42507c:	push   0x25595b00
  425081:	call   0x4252a2
  425086:	add    esp,0x8
  425089:	mov    eax,0x775f
  42508e:	push   0xa39be800
  425093:	push   0x72
  425095:	push   0xffffff8c
  425097:	push   0x89fab300
  42509c:	push   0xffffffc3
  42509e:	call   0x4252a2
  4250a3:	add    esp,0x14
  4250a6:	mov    DWORD PTR [ebp-0xc],ebx
  4250a9:	call   0x4252a2
  4250ae:	push   0xffffffb7
  4250b0:	push   0x91aee600
  4250b5:	push   0x595ebe00
  4250ba:	call   0x4252a2
  4250bf:	add    esp,0xc
  4250c2:	push   0xa3f8c100
  4250c7:	call   0x4252a2
  4250cc:	add    esp,0x4
  4250cf:	pop    edi
  4250d0:	mov    eax,DWORD PTR [ebp-0xc]
  4250d3:	sub    DWORD PTR [ebp-0xc],eax
  4250d6:	pop    esi
  4250d7:	call   0x4252a2
  4250dc:	pop    ebx
  4250dd:	push   0x55
  4250df:	push   0xffffffdd
  4250e1:	push   0xad29d300
  4250e6:	push   0xd3f12400
  4250eb:	call   0x4252a2
  4250f0:	add    esp,0x10
  4250f3:	leave  
  4250f4:	ret    
  4250f5:	int3   
  4250f6:	int3   
  4250f7:	int3   
  4250f8:	int3   
  4250f9:	int3   
  4250fa:	push   ebp
  4250fb:	mov    ebp,esp
  4250fd:	sub    esp,0x1c
  425100:	push   0x6d
  425102:	call   0x4252a2
  425107:	add    esp,0x4
  42510a:	push   0xa
  42510c:	push   0x1a
  42510e:	call   0x4252a2
  425113:	add    esp,0x8
  425116:	push   ebx
  425117:	push   0x89eb5800
  42511c:	push   0x17
  42511e:	call   0x4252a2
  425123:	add    esp,0x8
  425126:	push   esi
  425127:	push   0xffffffc0
  425129:	push   0xed44c100
  42512e:	push   0xffffffab
  425130:	call   0x4252a2
  425135:	add    esp,0xc
  425138:	push   edi
  425139:	call   0x4252a2
  42513e:	push   0x53
  425140:	push   0xffffffab
  425142:	call   0x4252a2
  425147:	add    esp,0x8
  42514a:	push   0xb1fe4c00
  42514f:	push   0x73c3cc00
  425154:	push   0x89f44600
  425159:	push   0xbd591500
  42515e:	call   0x4252a2
  425163:	add    esp,0x10
  425166:	push   0x55
  425168:	push   0xffffff9c
  42516a:	push   0x3f
  42516c:	push   0xfffffffc
  42516e:	push   0xffffff93
  425170:	call   0x4252a2
  425175:	add    esp,0x14
  425178:	cmp    eax,0xa22b
  42517d:	je     0x42520f
  425183:	cmp    eax,DWORD PTR [ebp-0x14]
  425186:	je     0x42520f
  42518c:	mov    esi,DWORD PTR ds:0x438070
  425192:	call   0x4252a2
  425197:	push   0xb1c50c00
  42519c:	push   0x91d42f00
  4251a1:	push   0xc9648200
  4251a6:	push   0x91560500
  4251ab:	call   0x4252a2
  4251b0:	add    esp,0x10
  4251b3:	push   0x7
  4251b5:	push   0x89fe0900
  4251ba:	push   0x69697b00
  4251bf:	call   0x4252a2
  4251c4:	add    esp,0xc
  4251c7:	add    esi,esi
  4251c9:	push   0x91dae000
  4251ce:	push   0xb55ee800
  4251d3:	call   0x4252a2
  4251d8:	add    esp,0x8
  4251db:	push   0x1125bb00
  4251e0:	push   0xffffffa7
  4251e2:	push   0xffffffe9
  4251e4:	call   0x4252a2
  4251e9:	add    esp,0xc
  4251ec:	push   0xd3bc1000
  4251f1:	push   0x5916d500
  4251f6:	push   0x6b
  4251f8:	call   0x4252a2
  4251fd:	add    esp,0xc
  425200:	and    esi,eax
  425202:	call   0x4252a2
  425207:	call   0x4252a2
  42520c:	mov    DWORD PTR [ebp-0xc],esi
  42520f:	push   0xfffffff3
  425211:	push   0xffffff82
  425213:	push   0x9d2a3500
  425218:	push   0x2e
  42521a:	call   0x4252a2
  42521f:	add    esp,0x10
  425222:	push   0x652c2c00
  425227:	call   0x4252a2
  42522c:	add    esp,0x4
  42522f:	cmp    eax,esi
  425231:	jne    0x425249
  425233:	push   0x78
  425235:	push   0xc3e3d400
  42523a:	push   0x652dcc00
  42523f:	push   0xffffffda
  425241:	call   0x4252a2
  425246:	add    esp,0x10
  425249:	call   0x4252a2
  42524e:	pop    edi
  42524f:	mov    edx,0xa3
  425254:	sub    edx,edi
  425256:	mov    DWORD PTR [ebp-0x4],edx
  425259:	push   0xffffffab
  42525b:	push   0x6c
  42525d:	push   0x49e34c00
  425262:	push   0xffffffa9
  425264:	push   0xffffffea
  425266:	call   0x4252a2
  42526b:	add    esp,0x14
  42526e:	pop    esi
  42526f:	sub    DWORD PTR [ebp-0x4],eax
  425272:	push   0xb5342400
  425277:	call   0x4252a2
  42527c:	add    esp,0x4
  42527f:	pop    ebx
  425280:	or     eax,esi
  425282:	xor    ecx,ecx
  425284:	cmp    ebx,DWORD PTR [ebp-0x1c]
  425287:	jne    0x42529b
  425289:	push   0x65593e00
  42528e:	push   0xf53d5300
  425293:	call   0x4252a2
  425298:	add    esp,0x8
  42529b:	leave  
  42529c:	ret    
  42529d:	int3   
  42529e:	int3   
  42529f:	int3   
  4252a0:	int3   
  4252a1:	int3   
  4252a2:	push   ebp
  4252a3:	mov    ebp,esp
  4252a5:	sub    esp,0x28
  4252a8:	mov    edx,0x1c
  4252ad:	mov    eax,0x14
  4252b2:	mov    DWORD PTR [ebp-0x14],edx
  4252b5:	mov    DWORD PTR [ebp-0x14],eax
  4252b8:	push   ebx
  4252b9:	mov    ebx,0xb2
  4252be:	mov    DWORD PTR [ebp-0x14],ebx
  4252c1:	push   esi
  4252c2:	sub    ebx,edx
  4252c4:	sub    ebx,edx
  4252c6:	add    DWORD PTR [ebp-0x14],ebx
  4252c9:	push   edi
  4252ca:	xor    DWORD PTR [ebp-0x14],ebx
  4252cd:	sub    edx,ebx
  4252cf:	xor    ebx,ebx
  4252d1:	add    ebx,ebx
  4252d3:	and    DWORD PTR [ebp-0x14],ebx
  4252d6:	xor    esi,esi
  4252d8:	sub    edx,ebx
  4252da:	and    esi,eax
  4252dc:	add    esi,edx
  4252de:	and    esi,eax
  4252e0:	add    esi,edx
  4252e2:	xor    DWORD PTR [ebp-0x14],esi
  4252e5:	and    ebx,esi
  4252e7:	mov    esi,0xfb1f
  4252ec:	add    esi,ebx
  4252ee:	mov    edi,eax
  4252f0:	sub    DWORD PTR [ebp-0x14],esi
  4252f3:	mov    DWORD PTR [ebp-0x14],edi
  4252f6:	sub    ebx,esi
  4252f8:	or     ebx,esi
  4252fa:	mov    esi,0xdd
  4252ff:	sub    esi,edi
  425301:	and    esi,eax
  425303:	sub    esi,edi
  425305:	and    esi,eax
  425307:	mov    edi,0x9a
  42530c:	sub    esi,edi
  42530e:	sub    DWORD PTR [ebp-0x14],ebx
  425311:	or     DWORD PTR [ebp-0x14],esi
  425314:	and    edi,eax
  425316:	mov    ecx,0x90
  42531b:	mov    edx,DWORD PTR [ebp-0x14]
  42531e:	cmp    edx,ecx
  425320:	je     0x42535d
  425322:	or     DWORD PTR [ebp-0x14],ecx
  425325:	cmp    edx,0xffffffb8
  425328:	je     0x42535d
  42532a:	mov    edi,DWORD PTR [ebp-0x14]
  42532d:	add    edi,edi
  42532f:	mov    eax,ecx
  425331:	sub    DWORD PTR [ebp-0x14],eax
  425334:	sub    edi,ebx
  425336:	sub    edi,eax
  425338:	sub    DWORD PTR [ebp-0x14],edi
  42533b:	add    edx,ecx
  42533d:	cmp    edx,eax
  42533f:	je     0x42535d
  425341:	sub    edx,edi
  425343:	or     edx,eax
  425345:	mov    eax,DWORD PTR [ebp-0x14]
  425348:	mov    ecx,DWORD PTR [ebp-0x14]
  42534b:	sub    ecx,edi
  42534d:	sub    eax,edi
  42534f:	and    DWORD PTR [ebp-0x14],edx
  425352:	cmp    eax,0xffffffd9
  425355:	jne    0x42535d
  425357:	sub    DWORD PTR [ebp-0x14],ecx
  42535a:	or     DWORD PTR [ebp-0x14],eax
  42535d:	pop    edi
  42535e:	mov    edx,DWORD PTR [ebp-0x14]
  425361:	mov    ebx,0xc
  425366:	sub    DWORD PTR [ebp-0x14],ebx
  425369:	cmp    edi,DWORD PTR [ebp-0x8]
  42536c:	je     0x425407
  425372:	mov    ebx,esi
  425374:	add    edx,ebx
  425376:	xor    eax,eax
  425378:	xor    DWORD PTR [ebp-0x14],edi
  42537b:	sub    DWORD PTR [ebp-0x14],eax
  42537e:	cmp    edx,0xd
  425381:	je     0x425407
  425387:	test   edx,0x66
  42538d:	jne    0x425407
  42538f:	sub    edx,edi
  425391:	mov    ecx,edx
  425393:	mov    edx,eax
  425395:	sub    DWORD PTR [ebp-0x14],ecx
  425398:	sub    edx,ebx
  42539a:	add    edx,edi
  42539c:	or     edx,eax
  42539e:	or     edx,eax
  4253a0:	cmp    edx,DWORD PTR [ebp-0x20]
  4253a3:	je     0x425407
  4253a5:	test   edx,0x1832
  4253ab:	je     0x425407
  4253ad:	cmp    edx,0xffffff95
  4253b0:	je     0x425407
  4253b2:	sub    edx,eax
  4253b4:	sub    DWORD PTR [ebp-0x14],eax
  4253b7:	sub    edx,esi
  4253b9:	mov    ebx,DWORD PTR ds:0x438050
  4253bf:	sub    edx,ecx
  4253c1:	xor    esi,esi
  4253c3:	cmp    edi,0x144e
  4253c9:	jne    0x425407
  4253cb:	mov    ecx,0xc4
  4253d0:	mov    eax,DWORD PTR [ebp-0x14]
  4253d3:	sub    eax,esi
  4253d5:	cmp    eax,DWORD PTR [ebp-0x14]
  4253d8:	jne    0x425407
  4253da:	cmp    edx,0xe47c
  4253e0:	je     0x425407
  4253e2:	sub    DWORD PTR [ebp-0x14],ecx
  4253e5:	cmp    edx,DWORD PTR ds:0x438050
  4253eb:	jne    0x425407
  4253ed:	mov    esi,DWORD PTR [ebp-0x14]
  4253f0:	mov    ecx,edi
  4253f2:	and    edx,esi
  4253f4:	add    edx,esi
  4253f6:	sub    DWORD PTR [ebp-0x14],edx
  4253f9:	xor    DWORD PTR [ebp-0x14],ebx
  4253fc:	cmp    ecx,0xffffff85
  4253ff:	je     0x425407
  425401:	or     DWORD PTR [ebp-0x14],ecx
  425404:	sub    DWORD PTR [ebp-0x14],eax
  425407:	pop    esi
  425408:	mov    ebx,DWORD PTR [ebp-0x14]
  42540b:	sub    ebx,ecx
  42540d:	cmp    esi,0x41154160
  425413:	je     0x425469
  425415:	test   ebx,0xf3
  42541b:	je     0x425469
  42541d:	cmp    ebx,DWORD PTR [ebp-0x18]
  425420:	je     0x425469
  425422:	mov    edx,DWORD PTR [ebp-0x14]
  425425:	cmp    ebx,DWORD PTR [ebp-0x18]
  425428:	jne    0x425469
  42542a:	mov    ecx,DWORD PTR [ebp-0x14]
  42542d:	mov    eax,DWORD PTR [ebp-0x14]
  425430:	cmp    ecx,DWORD PTR ds:0x438050
  425436:	jne    0x425469
  425438:	sub    ecx,ebx
  42543a:	mov    ebx,DWORD PTR [ebp-0x14]
  42543d:	add    eax,edi
  42543f:	cmp    esi,0x5a3
  425445:	je     0x425469
  425447:	add    DWORD PTR [ebp-0x14],ecx
  42544a:	cmp    esi,0xffffffa1
  42544d:	jne    0x425469
  42544f:	add    eax,eax
  425451:	cmp    eax,DWORD PTR [ebp-0x20]
  425454:	je     0x425469
  425456:	xor    ecx,ecx
  425458:	sub    eax,ebx
  42545a:	sub    edx,eax
  42545c:	and    ecx,edi
  42545e:	or     DWORD PTR [ebp-0x14],edx
  425461:	add    DWORD PTR [ebp-0x14],eax
  425464:	sub    ecx,ebx
  425466:	add    DWORD PTR [ebp-0x14],ecx
  425469:	pop    ebx
  42546a:	mov    eax,0xaf
  42546f:	mov    ecx,DWORD PTR [ebp-0x14]
  425472:	add    eax,ecx
  425474:	add    DWORD PTR [ebp-0x14],eax
  425477:	leave  
  425478:	ret    
