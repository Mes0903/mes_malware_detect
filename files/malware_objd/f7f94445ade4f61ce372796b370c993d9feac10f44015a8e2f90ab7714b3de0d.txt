
f7f94445ade4f61ce372796b370c993d9feac10f44015a8e2f90ab7714b3de0d.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	pop    ds
  411001:	or     dh,bl
  411003:	fdiv   st,st(1)
  411005:	inc    edi
  411006:	pop    esi
  411007:	push   ds
  411008:	adc    al,0xac
  41100a:	pop    ds
  41100b:	sbb    ah,BYTE PTR [esi-0x187f8f61]
  411011:	dec    esp
  411012:	add    bh,dh
  411014:	inc    esp
  411015:	dec    BYTE PTR es:[esi-0x5d]
  411019:	xchg   ebp,eax
  41101a:	call   0x996fde4f
  41101f:	mov    dl,0x11
  411021:	or     bh,dh
  411023:	push   edx
  411024:	cld    
  411025:	xchg   ebx,eax
  411026:	push   ds
  411027:	mov    eax,ds:0x28a39ef2
  41102c:	aam    0x76
  41102e:	cmp    DWORD PTR [eax],esi
  411030:	or     esi,ecx
  411032:	in     al,0x52
  411034:	adc    cl,BYTE PTR [ecx]
  411036:	idiv   BYTE PTR [ebp-0x3f]
  411039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41103a:	(bad)  
  41103b:	mov    ch,0x6d
  41103d:	cli    
  41103e:	pop    esi
  41103f:	leave  
  411040:	imul   esp,DWORD PTR [ecx],0x65
  411043:	jmp    0xd5e7:0xef3a30ba
  41104a:	jb     0x410fd0
  41104c:	cmp    eax,0x3f9c633
  411051:	je     0x41108c
  411053:	fisttp WORD PTR [esp+edi*8+0x26d5b840]
  41105a:	pop    esp
  41105b:	in     al,dx
  41105c:	or     cl,BYTE PTR [ecx]
  41105e:	out    dx,al
  41105f:	or     ebp,ebp
  411061:	in     eax,0x95
  411063:	and    bl,BYTE PTR [ebx+ebx*2+0x365b1a7]
  41106a:	test   bh,ah
  41106c:	pop    edi
  41106d:	mov    al,0x1a
  41106f:	sub    al,0xb5
  411071:	ds mov esi,0x56fc56a4
  411077:	push   edi
  411078:	mov    ds:0x578a9f82,eax
  41107d:	std    
  41107e:	jb     0x411004
  411080:	push   es
  411081:	mov    ds:0xcd3ba733,al
  411086:	xor    DWORD PTR [ecx-0x2da2b553],ebx
  41108c:	mov    ecx,gs
  41108e:	imul   DWORD PTR [edx]
  411090:	jle    0x41108c
  411092:	mov    esp,0x544ec05e
  411097:	aad    0x2e
  411099:	shr    cl,0x8
  41109c:	dec    ecx
  41109d:	adc    BYTE PTR [edi+0x7f],0x92
  4110a1:	inc    edi
  4110a2:	inc    edx
  4110a3:	test   ebx,eax
  4110a5:	xor    dh,BYTE PTR [ebp-0x309c3a08]
  4110ab:	loopne 0x4110ab
  4110ad:	sub    BYTE PTR [esi+ebp*1],al
  4110b0:	fdivr  DWORD PTR [eax-0x6a4cc698]
  4110b6:	ret    
  4110b7:	sub    BYTE PTR [edx-0x5d],bh
  4110ba:	sub    ecx,DWORD PTR [eax-0x315b4fd9]
  4110c0:	lods   al,BYTE PTR ds:[esi]
  4110c1:	dec    esp
  4110c2:	push   0x30c18d
  4110c7:	jne    0x4110f6
  4110c9:	dec    ebp
  4110ca:	jmp    0x4110ac
  4110cc:	or     BYTE PTR [edx],ah
  4110ce:	out    dx,al
  4110cf:	add    esp,DWORD PTR [esi]
  4110d1:	xor    dh,dl
  4110d3:	fidiv  DWORD PTR [esi-0x7ba03709]
  4110d9:	rcl    DWORD PTR [edx],0x1a
  4110dc:	ss jo  0x411091
  4110df:	dec    esi
  4110e0:	aam    0x76
  4110e2:	mov    esi,0x20e9c967
  4110e7:	mov    dh,0x94
  4110e9:	push   ecx
  4110ea:	iret   
  4110eb:	xchg   ebx,eax
  4110ec:	enter  0xd4b4,0x56
  4110f0:	and    dl,BYTE PTR [edi]
  4110f2:	sbb    BYTE PTR [edi],dl
  4110f4:	mov    ds:0xdfef50de,eax
  4110f9:	jno    0x4110bd
  4110fb:	sub    ah,0x39
  4110fe:	imul   ebx,ebp,0x487a4595
  411104:	and    DWORD PTR [ebp+0x68],edi
  411107:	xor    ebx,DWORD PTR [eax-0x372fa5ff]
  41110d:	cmp    ch,cl
  41110f:	pop    ds
  411110:	call   FWORD PTR [ebx]
  411112:	nop
  411113:	mov    eax,0xd1217b90
  411118:	or     ecx,DWORD PTR [ebp+0x3060b857]
  41111e:	dec    esi
  41111f:	cmovs  esp,DWORD PTR [esi-0x67]
  411123:	mov    ds:0xec48c9db,al
  411128:	ds jmp 0xa6d:0x557b2f2e
  411130:	loop   0x4110f0
  411132:	icebp  
  411133:	xlat   BYTE PTR ds:[ebx]
  411134:	mov    edi,edi
  411136:	rcr    BYTE PTR [eax-0x49c57662],0x20
  41113d:	jnp    0x4111b7
  41113f:	enter  0x3dcd,0xdc
  411143:	jb     0x4110d0
  411145:	and    al,0x14
  411147:	out    0xee,al
  411149:	xor    BYTE PTR [ebp+0x17],al
  41114c:	push   0xfffffff9
  41114e:	push   esp
  41114f:	imul   ebx,DWORD PTR [esp+edx*2-0x3f],0xffffffb2
  411154:	jno    0x4111a3
  411156:	push   0x2186c263
  41115b:	stos   BYTE PTR es:[edi],al
  41115c:	(bad)  
  41115d:	in     al,dx
  41115e:	push   0x7a
  411160:	jg     0x411168
  411162:	add    BYTE PTR [edi+esi*2+0x2de38215],ch
  411169:	out    dx,eax
  41116a:	mov    cl,0x91
  41116c:	jmp    0x50a0:0x6f464b76
  411173:	cmp    eax,0x1261a377
  411178:	lods   al,BYTE PTR ds:[esi]
  411179:	inc    ebx
  41117a:	(bad)  
  41117c:	icebp  
  41117d:	out    0x6a,al
  41117f:	fisttp WORD PTR [eax+eiz*8+0x23d055ea]
  411186:	sbb    eax,0x23feaa7b
  41118b:	mov    eax,ds:0x42aba958
  411190:	repnz pop esp
  411192:	daa    
  411193:	cmp    eax,0x3947026f
  411198:	daa    
  411199:	push   ecx
  41119a:	jno    0x4111f1
  41119c:	push   ds
  41119d:	xor    DWORD PTR [esi-0x14378ea9],ebp
  4111a3:	mov    edi,DWORD PTR [ecx-0x5404ac76]
  4111a9:	ins    BYTE PTR es:[edi],dx
  4111aa:	rcl    DWORD PTR ds:0xf4983870,cl
  4111b0:	dec    ebx
  4111b1:	mov    BYTE PTR [ebx+0x34],dh
  4111b4:	mov    bl,0xa
  4111b6:	lds    ebp,FWORD PTR [ebx-0x1b023e07]
  4111bc:	fdiv   QWORD PTR [ecx+ecx*8]
  4111bf:	cdq    
  4111c0:	push   eax
  4111c1:	aam    0x37
  4111c3:	push   eax
  4111c4:	dec    eax
  4111c5:	mov    ebx,0x93f043e5
  4111ca:	push   ebx
  4111cb:	mov    ah,0xa4
  4111cd:	xlat   BYTE PTR ds:[ebx]
  4111ce:	inc    esp
  4111cf:	and    edx,eax
  4111d1:	fild   QWORD PTR [edx]
  4111d3:	stos   BYTE PTR es:[edi],al
  4111d4:	sbb    BYTE PTR [ebx*8-0x4c521690],dh
  4111db:	jecxz  0x411175
  4111dd:	ds jecxz 0x4111e3
  4111e0:	popa   
  4111e1:	out    dx,eax
  4111e2:	ds push esi
  4111e4:	cmp    al,0x5
  4111e6:	jmp    0x4111e2
  4111e8:	stos   DWORD PTR es:[edi],eax
  4111e9:	mov    esp,0x41612ddf
  4111ee:	xlat   BYTE PTR ds:[ebx]
  4111ef:	loop   0x411202
  4111f1:	fbstp  TBYTE PTR [edx]
  4111f3:	and    eax,DWORD PTR [eax-0x1b89182e]
  4111f9:	mov    ds,eax
  4111fb:	test   al,0x4
  4111fd:	add    ebp,eax
  4111ff:	cmp    edi,eax
  411201:	cmp    ebx,ecx
  411203:	xor    edx,DWORD PTR [edi-0x389fdcad]
  411209:	addr16 aam 0x80
  41120c:	rcl    DWORD PTR [ecx+0x62],1
  41120f:	inc    ebx
  411210:	mov    eax,0x954d384d
  411215:	or     ebx,ebx
  411217:	jae    0x41123a
  411219:	jl     0x41125b
  41121b:	jb     0x4111d1
  41121d:	rcl    BYTE PTR [ebx+0xcb602b3],1
  411223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411224:	sub    ebx,eax
  411226:	mov    eax,ds:0x97b8c206
  41122b:	xor    BYTE PTR [ebp-0x1948423f],ah
  411231:	mov    bh,0xbe
  411233:	jmp    0xdf84:0xa9ffda13
  41123a:	jbe    0x411262
  41123c:	je     0x4111fb
  41123e:	mov    bl,0xa4
  411240:	cwde   
  411241:	sub    BYTE PTR [eax-0x551e2fda],bl
  411247:	adc    al,0x7a
  411249:	shl    BYTE PTR [eax-0x701deef0],0xaa
  411250:	mov    ch,0x5b
  411252:	mov    dh,0x1b
  411254:	neg    BYTE PTR [esi-0x4f056f38]
  41125a:	cmp    BYTE PTR [eax],0x3d
  41125d:	sbb    al,0x51
  41125f:	adc    ch,BYTE PTR [ecx+0x2f500484]
  411265:	aam    0x21
  411267:	test   eax,0x14eab4d2
  41126c:	shl    DWORD PTR [edi+ecx*4-0x1a],cl
  411270:	bound  esp,QWORD PTR [edx+0x26ac8d18]
  411276:	cmc    
  411277:	test   BYTE PTR [eax-0x2d],dh
  41127a:	xchg   edi,eax
  41127b:	and    al,0x7
  41127d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41127e:	add    eax,0x6bd407e5
  411283:	push   esp
  411284:	or     edi,DWORD PTR [ebx-0x52461305]
  41128a:	je     0x4112b4
  41128c:	sbb    eax,0xf6c8e89c
  411291:	mov    esi,0x1bb02fc8
  411296:	cmp    ah,BYTE PTR ds:0x87d588b2
  41129c:	into   
  41129d:	inc    ebx
  41129e:	inc    eax
  41129f:	outs   dx,DWORD PTR ds:[esi]
  4112a0:	pop    esp
  4112a1:	ror    ebx,cl
  4112a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a4:	fstp   QWORD PTR [esi+0x60]
  4112a7:	(bad)  
  4112a8:	push   ss
  4112a9:	mov    cl,0xf7
  4112ab:	pop    edi
  4112ac:	retf   0xa764
  4112af:	push   esp
  4112b0:	out    0x3d,eax
  4112b2:	bound  edi,QWORD PTR [ebx+0xa685106]
  4112b8:	sub    ebp,eax
  4112ba:	mov    WORD PTR [eax],gs
  4112bc:	in     eax,dx
  4112bd:	or     al,0x1e
  4112bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112c0:	hlt    
  4112c1:	fwait
  4112c2:	jo     0x411278
  4112c4:	mov    BYTE PTR [edi],ch
  4112c6:	or     esp,eax
  4112c8:	mov    ?,WORD PTR [ebx+0x4f]
  4112cb:	sub    DWORD PTR [edx+0x47],edi
  4112ce:	push   edi
  4112cf:	cmp    DWORD PTR [esi*2-0x23061714],0xffffff8f
  4112d7:	pop    edi
  4112d8:	int3   
  4112d9:	dec    edx
  4112da:	retf   0xb80b
  4112dd:	cmp    BYTE PTR [ecx-0x58],bh
  4112e0:	and    BYTE PTR [ebx],cl
  4112e2:	dec    edi
  4112e3:	(bad)
  4112e6:	sbb    bl,bh
  4112e8:	xor    eax,0x4c83bec1
  4112ed:	bound  eax,QWORD PTR [ecx]
  4112ef:	scas   al,BYTE PTR es:[edi]
  4112f0:	sub    al,0x35
  4112f2:	or     DWORD PTR [ecx-0x5760b765],esp
  4112f8:	das    
  4112f9:	outs   dx,DWORD PTR ds:[esi]
  4112fa:	fild   WORD PTR [ecx]
  4112fc:	adc    eax,0xc3713f6e
  411301:	add    al,0x25
  411303:	leave  
  411304:	or     eax,0x9d51cb5a
  411309:	fld    st(4)
  41130b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41130c:	add    al,0x11
  41130e:	shr    BYTE PTR [edx-0x21611263],1
  411314:	pop    esi
  411315:	jmp    0x7d7b:0x509a8e8e
  41131c:	sahf   
  41131d:	in     al,0x6f
  41131f:	aaa    
  411320:	jg     0x4112ed
  411322:	xor    BYTE PTR [ebx],0x2
  411325:	xchg   ebp,eax
  411326:	sbb    eax,0xe90db2b8
  41132b:	aam    0x40
  41132d:	test   BYTE PTR [esp+esi*4],bh
  411330:	dec    ebx
  411331:	imul   edi,DWORD PTR es:[edi+ecx*4-0x17ed9deb],0x7f
  41133a:	lock add al,0x6a
  41133d:	icebp  
  41133e:	into   
  41133f:	dec    ebp
  411340:	xchg   DWORD PTR [ebx],edx
  411342:	sbb    BYTE PTR [esi-0x76058287],ch
  411348:	mov    dl,BYTE PTR [edi-0xe590fd7]
  41134e:	rol    BYTE PTR [ecx+0x78],1
  411351:	outs   dx,BYTE PTR ds:[esi]
  411352:	int    0x9e
  411354:	mov    edi,DWORD PTR [esi+0x1f]
  411357:	push   edi
  411358:	ret    0xc9b4
  41135b:	dec    edx
  41135c:	pop    ebx
  41135d:	sbb    DWORD PTR [eax-0x24e1d55f],ebx
  411363:	cmp    bh,bl
  411365:	cmp    eax,0x1042f4f1
  41136a:	jecxz  0x411370
  41136c:	jb     0x411302
  41136e:	jae    0x411307
  411370:	add    edi,eax
  411372:	test   esp,edx
  411374:	sub    al,0xe
  411376:	fidivr DWORD PTR [esi+ebp*8+0x7d531e81]
  41137d:	cli    
  41137e:	jmp    0xcf6d1f86
  411383:	inc    eax
  411384:	push   ecx
  411385:	loop   0x4113f3
  411387:	or     ebx,esp
  411389:	aad    0x4d
  41138b:	shl    BYTE PTR [edi-0x9a56acd],1
  411391:	adc    BYTE PTR [eax],0x62
  411394:	mov    cs,ebx
  411396:	das    
  411397:	mov    ebx,DWORD PTR [ebx]
  411399:	stos   DWORD PTR es:[edi],eax
  41139a:	or     BYTE PTR [edx-0x23],cl
  41139d:	cli    
  41139e:	fmul   st,st(7)
  4113a0:	mov    DWORD PTR ds:0xaf458fd4,esi
  4113a6:	mov    bh,0xfe
  4113a8:	pop    ecx
  4113a9:	xlat   BYTE PTR ds:[ebx]
  4113aa:	add    DWORD PTR [ebx-0x29],ebx
  4113ad:	mov    bh,0xd7
  4113af:	sbb    al,0x50
  4113b1:	mov    bl,0xc4
  4113b3:	sub    DWORD PTR [esi],0xffffff95
  4113b6:	ret    0xfa49
  4113b9:	inc    edi
  4113ba:	fsubr  QWORD PTR [edi-0x3cac06b9]
  4113c0:	cmp    dh,BYTE PTR [eax+0x5ceb3694]
  4113c6:	pusha  
  4113c7:	fstp   QWORD PTR [ecx]
  4113c9:	into   
  4113ca:	and    al,0xed
  4113cc:	shl    BYTE PTR [eax+0x50],0xbb
  4113d0:	es aad 0xde
  4113d3:	cmc    
  4113d4:	mov    ecx,0x3f8edd1e
  4113d9:	and    ch,bh
  4113db:	scas   eax,DWORD PTR es:[edi]
  4113dc:	jg     0x41142c
  4113de:	in     al,dx
  4113df:	mov    ah,dh
  4113e1:	fsubr  DWORD PTR [bx+0x22]
  4113e5:	cdq    
  4113e6:	fcmovne st,st(6)
  4113e8:	dec    edi
  4113e9:	push   edi
  4113ea:	and    bl,BYTE PTR [edi]
  4113ec:	xchg   esi,eax
  4113ed:	push   ebx
  4113ee:	pop    esi
  4113ef:	(bad)  
  4113f0:	je     0x41142a
  4113f2:	mov    edi,0x8692e305
  4113f7:	out    0x6d,eax
  4113f9:	sbb    eax,0x13614451
  4113fe:	add    dl,BYTE PTR [esi-0x70af5a67]
  411404:	clc    
  411405:	jb     0x4113e4
  411407:	push   ebx
  411408:	or     al,0xfc
  41140a:	hlt    
  41140b:	sti    
  41140c:	inc    edx
  41140d:	lds    ebx,FWORD PTR [ebp+ebx*8+0x32]
  411411:	or     eax,0x8cce1933
  411416:	xor    cl,BYTE PTR [eax+0x6df44327]
  41141c:	out    0x77,eax
  41141e:	and    BYTE PTR [ecx-0x4e],cl
  411421:	test   BYTE PTR [esi+edi*4],ch
  411424:	dec    ebp
  411425:	or     DWORD PTR [ebp-0x6b],edi
  411428:	jo     0x411433
  41142a:	psubsb mm4,QWORD PTR [ecx+0x2d]
  41142e:	inc    ebp
  41142f:	pusha  
  411430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411431:	jmp    0x41144a
  411433:	out    dx,eax
  411434:	jmp    0xd97770dd
  411439:	push   0xffffffd8
  41143b:	sbb    eax,0xf2dd9f21
  411440:	fist   DWORD PTR [ecx+0x65]
  411443:	sbb    al,0x55
  411445:	and    dh,BYTE PTR [esp+edx*1]
  411448:	or     eax,0xfbddc639
  41144d:	lods   al,BYTE PTR ds:[esi]
  41144e:	pushaw 
  411450:	adc    BYTE PTR [edx-0x3ee504],dl
  411456:	cwde   
  411457:	push   ds
  411458:	and    dh,ch
  41145a:	scas   al,BYTE PTR es:[edi]
  41145b:	ds test dh,bl
  41145e:	mov    esi,0x406cfe20
  411463:	sub    BYTE PTR [eax+0x76463338],ah
  411469:	and    al,0x35
  41146b:	xchg   ebp,eax
  41146c:	mov    gs,WORD PTR [edi+0x6]
  41146f:	hlt    
  411470:	mov    ds:0x14717c61,eax
  411475:	lock add ah,BYTE PTR [edx-0x26]
  411479:	jo     0x4114bd
  41147b:	inc    ebp
  41147c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41147d:	add    DWORD PTR [ebx-0x5da10d0c],eax
  411483:	or     ah,BYTE PTR [edx+0x1c55d29d]
  411489:	ss inc esp
  41148b:	jl     0x411451
  41148d:	ficom  DWORD PTR [edi+0x4f686c40]
  411493:	mov    ebx,0x7f5042c5
  411498:	cmp    dl,dh
  41149a:	sub    al,BYTE PTR [ebx+0x65e90b61]
  4114a0:	in     al,dx
  4114a1:	adc    eax,0xcee51d61
  4114a6:	and    al,0xed
  4114a8:	aaa    
  4114a9:	inc    eax
  4114aa:	jmp    0x77c4:0xfae1cdf0
  4114b1:	or     eax,DWORD PTR [esi+0x1f]
  4114b4:	lock scas al,BYTE PTR es:[edi]
  4114b6:	add    ch,dh
  4114b8:	sahf   
  4114b9:	xchg   esp,eax
  4114ba:	lock aam 0xb1
  4114bd:	pop    ebp
  4114be:	jb     0x4114ac
  4114c0:	inc    edi
  4114c1:	push   es
  4114c2:	(bad)  [esi-0xaed25e8]
  4114c8:	test   DWORD PTR [edi+ebx*2-0x5f],0x3b95d432
  4114d0:	icebp  
  4114d1:	pcmpgtb mm1,QWORD PTR [ebx-0xb]
  4114d5:	(bad)  
  4114d7:	data16 bnd jno 0x411538
  4114db:	pop    edi
  4114dc:	jbe    0x4114b0
  4114de:	je     0x411551
  4114e0:	push   ss
  4114e1:	xor    BYTE PTR [edx],bh
  4114e3:	fisttp DWORD PTR [edx+0x6e]
  4114e6:	outs   dx,BYTE PTR ds:[esi]
  4114e7:	mov    ebx,0xcc34f74a
  4114ec:	mov    edi,0x651478ef
  4114f1:	mov    ch,BYTE PTR [ecx-0x52]
  4114f4:	sbb    DWORD PTR [esi+0x2a4f6ab7],edx
  4114fa:	jns    0x4114dd
  4114fc:	gs sbb al,0x65
  4114ff:	pop    ebp
  411500:	outs   dx,DWORD PTR ds:[esi]
  411501:	div    BYTE PTR ss:[eax+0xb]
  411505:	mov    bh,0x98
  411507:	adc    al,0xda
  411509:	jmp    0x3a86:0x7b393d90
  411510:	adc    al,0x2d
  411512:	outs   dx,DWORD PTR ds:[esi]
  411513:	in     al,dx
  411514:	ds sbb eax,0x30d86979
  41151a:	enter  0x800c,0xbd
  41151e:	pop    esp
  41151f:	test   eax,0xedafd8bb
  411525:	mov    al,ds:0x43bbee3e
  41152a:	jne    0x4114cf
  41152c:	push   edx
  41152d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41152f:	iret   
  411530:	add    eax,0xc7929624
  411535:	xor    ebx,DWORD PTR [esi]
  411537:	push   ds
  411538:	cmp    al,0x41
  41153a:	cmp    BYTE PTR [ecx-0x7956343a],ch
  411540:	leave  
  411541:	dec    eax
  411542:	call   0x6de6e5b5
  411547:	push   cs
  411548:	pop    edi
  411549:	mov    ds:0x5dd31709,al
  41154e:	push   edi
  41154f:	xchg   esi,eax
  411550:	add    DWORD PTR [esi],ebp
  411552:	call   0xad1e:0xe47a7688
  411559:	test   eax,0x95e427c3
  41155e:	jno    0x4115d1
  411560:	inc    esi
  411561:	(bad)  
  411562:	mov    ch,0x57
  411564:	gs cdq 
  411566:	add    DWORD PTR [eax],edx
  411568:	outs   dx,DWORD PTR ds:[esi]
  411569:	jae    0x4115cf
  41156b:	dec    esp
  41156c:	cld    
  41156d:	sbb    al,al
  41156f:	lods   eax,DWORD PTR ds:[esi]
  411570:	hlt    
  411571:	enter  0xaa81,0xd4
  411575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411576:	outs   dx,BYTE PTR ds:[esi]
  411577:	mov    ch,0x70
  411579:	or     al,0xc
  41157b:	inc    eax
  41157c:	out    dx,al
  41157d:	push   edi
  41157e:	pop    ecx
  41157f:	pop    es
  411580:	fisub  WORD PTR [esi+ebx*4+0x1c3767ec]
  411587:	push   eax
  411588:	arpl   WORD PTR [ebx+ebp*4+0x9b7988b],bx
  41158f:	popa   
  411590:	fs dec ebx
  411592:	mov    ch,0xcb
  411594:	leave  
  411595:	pop    edi
  411596:	or     al,0x4d
  411598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411599:	sub    al,0xb6
  41159b:	cdq    
  41159c:	hlt    
  41159d:	scas   al,BYTE PTR es:[edi]
  41159e:	gs test eax,0x651e3b67
  4115a4:	neg    DWORD PTR [edi]
  4115a6:	jg     0x411550
  4115a8:	pop    edx
  4115a9:	xlat   BYTE PTR ds:[ebx]
  4115aa:	dec    edi
  4115ab:	adc    eax,eax
  4115ad:	enter  0x2e18,0xb2
  4115b1:	out    0xc1,eax
  4115b3:	cld    
  4115b4:	(bad)  
  4115b5:	aad    0x35
  4115b7:	ds pop esi
  4115b9:	not    DWORD PTR [edx+0x4afe3a84]
  4115bf:	in     eax,0x5a
  4115c1:	xchg   BYTE PTR [edx-0x1d],bh
  4115c4:	dec    ecx
  4115c5:	pop    ebx
  4115c6:	shr    BYTE PTR [ecx],0x34
  4115c9:	xor    ecx,DWORD PTR [edx]
  4115cb:	jmp    0x411596
  4115cd:	mov    dl,0x54
  4115cf:	icebp  
  4115d0:	sbb    BYTE PTR [ecx],dh
  4115d2:	mov    ds:0xdef216cf,eax
  4115d7:	xchg   esi,edx
  4115d9:	pop    ebx
  4115da:	fsubr  st,st(3)
  4115dc:	out    dx,al
  4115dd:	lahf   
  4115de:	xor    al,0xd5
  4115e0:	(bad)  
  4115e1:	out    0x3e,eax
  4115e3:	pop    ss
  4115e4:	lahf   
  4115e5:	std    
  4115e6:	fstp   TBYTE PTR [eiz*1+0x2fffb8fc]
  4115ed:	(bad)  
  4115ee:	adc    eax,DWORD PTR [eax-0x33]
  4115f1:	and    bh,ch
  4115f3:	and    BYTE PTR [ebx+0x555da0a2],dh
  4115f9:	dec    ecx
  4115fa:	add    DWORD PTR [ecx-0x55b3dc33],esi
  411600:	int3   
  411601:	push   DWORD PTR [ecx+eax*4+0x290cf23c]
  411608:	mov    bh,0x44
  41160a:	in     al,dx
  41160b:	add    dl,dl
  41160d:	into   
  41160e:	sbb    bl,BYTE PTR [edi]
  411610:	inc    esp
  411611:	push   DWORD PTR [esi+eax*8-0x73d3bb6a]
  411618:	adc    BYTE PTR [eax+0x2],dh
  41161b:	pop    ds
  41161c:	and    edi,edi
  41161e:	(bad)  
  41161f:	iret   
  411620:	rol    BYTE PTR cs:[edx+0x40],1
  411624:	jbe    0x411689
  411626:	mov    ds:0xf5480b94,eax
  41162b:	cmp    esp,DWORD PTR [eax+0x62]
  41162e:	add    ch,dh
  411630:	(bad)  
  411631:	sbb    eax,0x7869e42b
  411636:	mov    al,ds:0xe7442630
  41163b:	xchg   ecx,eax
  41163c:	loopne 0x4115ef
  41163e:	jl     0x41169a
  411640:	rcr    bh,0xb7
  411643:	mov    al,ds:0xe737b270
  411648:	xor    BYTE PTR [esi+0x76],bh
  41164b:	adc    BYTE PTR [esi],0xde
  41164e:	mov    al,ds:0x2e70ca1f
  411653:	sbb    dh,ah
  411655:	rcr    DWORD PTR [esi],cl
  411657:	mov    ds:0x8e01572,eax
  41165c:	cdq    
  41165d:	add    al,0x20
  41165f:	nop
  411660:	enter  0x6b66,0x9b
  411664:	scas   al,BYTE PTR es:[edi]
  411665:	mov    DWORD PTR [ebx],0xd8312a0c
  41166b:	and    eax,0xa866f915
  411670:	push   0x69
  411672:	push   0x448fd7c9
  411677:	test   al,0x3e
  411679:	inc    edx
  41167a:	popa   
  41167b:	lds    eax,FWORD PTR [ebx-0x474e3ba5]
  411681:	xchg   ebp,eax
  411682:	mov    DWORD PTR [ecx+0x1a144703],0x9ebf6363
  41168c:	js     0x411674
  41168e:	or     al,0x55
  411690:	xlat   BYTE PTR ds:[ebx]
  411691:	mov    bh,0x90
  411693:	mov    al,ds:0x9c1dd771
  411698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411699:	adc    esp,DWORD PTR [eax-0x1e98110e]
  41169f:	shl    DWORD PTR [eax+0x60],0xc0
  4116a3:	(bad)  
  4116a4:	jge    0x41164d
  4116a6:	mov    ch,0xbb
  4116a8:	mov    BYTE PTR [ecx+0x10],al
  4116ab:	mov    ch,0x2c
  4116ad:	xchg   ebp,eax
  4116ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116af:	inc    edx
  4116b0:	std    
  4116b1:	gs aad 0x9c
  4116b4:	es mov ebp,0x9b6187
  4116ba:	in     eax,dx
  4116bb:	push   esi
  4116bc:	cs jmp 0x4116b0
  4116bf:	aad    0x1c
  4116c1:	repnz out 0x65,al
  4116c4:	and    al,0x5a
  4116c6:	lock and DWORD PTR [ebx-0x61c21a6d],esi
  4116cd:	push   cs
  4116ce:	inc    esp
  4116cf:	xchg   ebp,eax
  4116d0:	(bad)  
  4116d1:	in     eax,0x95
  4116d3:	mov    edi,0xc47a0402
  4116d8:	cs jmp 0x41168a
  4116db:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4116dd:	fwait
  4116de:	mov    ah,0x9
  4116e0:	(bad)  
  4116e1:	repnz xor bh,BYTE PTR [ebx-0x400b65db]
  4116e8:	out    0xe2,al
  4116ea:	mov    edx,DWORD PTR [ecx-0x16]
  4116ed:	sahf   
  4116ee:	xor    esp,eax
  4116f0:	jg     0x411726
  4116f2:	mov    edx,0xc0aacd82
  4116f7:	and    DWORD PTR [eax],0x77
  4116fa:	shl    edi,cl
  4116fc:	mov    edx,0x97182bec
  411701:	mov    ebx,0xa13f542e
  411706:	nop
  411707:	add    eax,0xb44c4a37
  41170d:	jmp    0x4bb0acec
  411712:	and    al,0x86
  411714:	sbb    BYTE PTR [ebx-0x2],al
  411717:	xchg   ecx,eax
  411718:	xor    al,BYTE PTR [ecx-0x7a98b0dd]
  41171e:	jnp    0x4116eb
  411720:	mov    ds:0xe0c29b63,al
  411725:	fwait
  411726:	enter  0x2258,0x5a
  41172a:	mov    ah,0x3d
  41172d:	iret   
  41172e:	xchg   BYTE PTR [ebp+0x46c028ef],cl
  411734:	iret   
  411735:	sbb    ebp,DWORD PTR [ebp-0x2f]
  411738:	nop
  411739:	outs   dx,DWORD PTR ds:[esi]
  41173a:	push   0xb57779ee
  41173f:	(bad)  
  411740:	(bad)  
  411741:	rol    BYTE PTR [edi],cl
  411743:	arpl   WORD PTR ds:[ecx+0x17],dx
  411747:	ds add al,0x98
  41174a:	fldcw  WORD PTR cs:[edi+ebp*1+0x7b]
  41174f:	imul   ecx
  411751:	fsub   st(5),st
  411753:	xor    eax,0xad47b857
  411758:	cld    
  411759:	loop   0x4117ca
  41175b:	pop    es
  41175c:	mov    al,0x7
  41175e:	call   0x48ca:0x86580ed9
  411765:	or     DWORD PTR [edx],esi
  411767:	mov    eax,0xe8525f6
  41176c:	lock mov ah,cl
  41176f:	rcl    DWORD PTR [ebp-0x69ff5098],1
  411775:	test   BYTE PTR [ecx-0x1],al
  411778:	lods   al,BYTE PTR ds:[esi]
  411779:	sbb    ebx,DWORD PTR [esi+0x62]
  41177c:	imul   eax,DWORD PTR [esi],0x1cf3e193
  411782:	push   ecx
  411783:	rcl    DWORD PTR [esi-0x76],0x67
  411787:	cmp    eax,0x3aab9a04
  41178c:	pop    ecx
  41178d:	dec    ebp
  41178e:	jg     0x4117d3
  411790:	(bad)  
  411791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411793:	lds    ebp,FWORD PTR [edx+0x4865c430]
  411799:	pusha  
  41179a:	imul   DWORD PTR [edx]
  41179c:	jmp    0x2873:0x9955d21a
  4117a3:	mov    BYTE PTR [eax+0xaae686f],bh
  4117a9:	xchg   BYTE PTR [ebx],bh
  4117ab:	rcl    esp,0xfc
  4117ae:	lahf   
  4117af:	ror    DWORD PTR [ecx-0x5c72ad83],cl
  4117b5:	push   ebp
  4117b6:	fdivr  DWORD PTR [edi+0x219ebea6]
  4117bc:	jmp    FWORD PTR [edx-0x5d46294e]
  4117c2:	int    0x44
  4117c4:	xlat   BYTE PTR ds:[ebx]
  4117c5:	xchg   edx,eax
  4117c6:	dec    ecx
  4117c7:	ret    0xd1b
  4117ca:	sub    bl,BYTE PTR [ebx-0x6e]
  4117cd:	push   ss
  4117ce:	lods   eax,DWORD PTR ds:[esi]
  4117cf:	call   0xe4f9:0x1fa0d2d2
  4117d6:	push   ebp
  4117d7:	sub    dl,BYTE PTR [ebp-0x1e]
  4117da:	mov    ah,0x2f
  4117dc:	(bad)  
  4117de:	add    ah,cl
  4117e0:	lods   eax,DWORD PTR ds:[esi]
  4117e1:	pop    esp
  4117e2:	inc    ebp
  4117e3:	push   edi
  4117e4:	rol    DWORD PTR [edx-0x22],cl
  4117e7:	loope  0x411795
  4117e9:	push   esp
  4117ea:	jns    0x4117c2
  4117ec:	clc    
  4117ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117ee:	ds je  0x41186b
  4117f1:	xor    BYTE PTR [ecx+0x35],0x2
  4117f5:	and    ebx,eax
  4117f7:	rol    DWORD PTR [ebx],1
  4117f9:	mov    DWORD PTR [ebx+eiz*8],edi
  4117fc:	in     al,dx
  4117fd:	pop    es
  4117fe:	xchg   BYTE PTR ss:[edi],bl
  411801:	pusha  
  411802:	ins    DWORD PTR es:[edi],dx
  411803:	mov    ds:0x3d049091,eax
  411808:	push   edx
  411809:	sbb    al,0xa2
  41180b:	xchg   DWORD PTR [ecx],esi
  41180d:	aad    0xb
  41180f:	dec    esp
  411810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411811:	sub    BYTE PTR [esi-0xf],cl
  411814:	dec    BYTE PTR [esp+edi*8+0x5af35154]
  41181b:	sub    cl,cl
  41181d:	retf   
  41181e:	mov    dl,0xc6
  411820:	mov    ds,WORD PTR [esi+0x6c]
  411823:	jo     0x411847
  411825:	push   esi
  411826:	pop    ebp
  411827:	loopne 0x41182c
  411829:	mov    dh,0x38
  41182b:	xchg   ebx,eax
  41182c:	call   0x8136:0xe12a534c
  411833:	mov    al,BYTE PTR [ecx+esi*2+0x2bf6bf7d]
  41183a:	jp     0x411846
  41183c:	fwait
  41183d:	xor    BYTE PTR [ebp-0xe1e17ce],bh
  411843:	mul    DWORD PTR [edi-0x5a]
  411846:	pop    edi
  411847:	call   FWORD PTR [edi+ebp*1-0x673dd009]
  41184e:	fisttp QWORD PTR [ecx]
  411851:	cmp    ebp,DWORD PTR [ebx-0x1f]
  411854:	jnp    0x4117dd
  411856:	leave  
  411857:	push   0x26e481f8
  41185c:	or     bh,BYTE PTR [edi]
  41185e:	jle    0x4117e6
  411860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411861:	inc    ebp
  411862:	dec    edx
  411863:	data16 or bh,BYTE PTR [ebp-0x45]
  411867:	icebp  
  411868:	cmp    ebx,DWORD PTR [ebp-0x8]
  41186b:	in     al,dx
  41186c:	pop    ecx
  41186d:	(bad)  
  41186e:	jae    0x4118e4
  411870:	dec    esi
  411871:	jnp    0x4118ce
  411873:	add    al,0x65
  411875:	xchg   edx,eax
  411876:	call   0x30b6:0x4b3399ba
  41187d:	test   BYTE PTR [eax],ah
  41187f:	loope  0x411829
  411881:	addr16 mov dl,0xd6
  411884:	jmp    0x411898
  411886:	xor    ecx,DWORD PTR [edi-0x40fe3b5]
  41188c:	fld    DWORD PTR [ecx-0x23]
  41188f:	dec    ebp
  411890:	rcl    DWORD PTR [edi+0x35ced74e],0x51
  411897:	mov    al,ds:0x27f8d39d
  41189c:	test   BYTE PTR [ebx-0x163a3a59],bh
  4118a2:	cdq    
  4118a3:	and    eax,0x9d116efc
  4118a8:	jne    0x41185f
  4118aa:	jbe    0x4118be
  4118ac:	push   esp
  4118ad:	call   0xdd36:0x2a5b17ff
  4118b4:	test   BYTE PTR [eax-0x54be6a8c],0x6f
  4118bb:	jae    0x4118e1
  4118bd:	icebp  
  4118be:	jnp    0x411937
  4118c0:	in     al,0x5f
  4118c2:	(bad)  
  4118c3:	mov    ebx,0xd89a090d
  4118c8:	dec    edi
  4118c9:	xor    eax,0xd8af0310
  4118ce:	dec    edi
  4118cf:	or     al,0x7d
  4118d1:	jo     0x411909
  4118d3:	clc    
  4118d4:	sar    BYTE PTR ds:0x9b4c626b,0xe7
  4118db:	mov    dh,0xd9
  4118dd:	sub    bh,bh
  4118df:	out    0x9d,al
  4118e1:	xchg   ebp,eax
  4118e2:	sbb    BYTE PTR [ebx+0x4f],bl
  4118e5:	mov    ecx,0x1cb5c0be
  4118ea:	or     al,0xfb
  4118ec:	retf   
  4118ed:	pop    esi
  4118ee:	repnz leave 
  4118f0:	xor    al,bl
  4118f2:	ja     0x4118b8
  4118f4:	jg     0x411877
  4118f6:	int    0xc4
  4118f8:	fwait
  4118f9:	mov    ?,WORD PTR [ebx]
  4118fb:	or     al,0xfa
  4118fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118fe:	sbb    ebx,DWORD PTR [edi-0x1b]
  411901:	add    BYTE PTR [esi],dl
  411903:	shl    BYTE PTR [edi+0x0],cl
  411906:	fldenv [ebp+0x36453884]
  41190c:	push   eax
  41190d:	neg    BYTE PTR [edi+0x60]
  411910:	mov    edx,0xb0cbb20a
  411915:	(bad)  
  411916:	adc    al,0x83
  411918:	sub    al,dh
  41191a:	add    al,0x62
  41191c:	cs push ebp
  41191e:	(bad)  
  41191f:	sti    
  411920:	push   ds
  411921:	add    BYTE PTR [edi-0x72],ch
  411924:	mov    ds:0x58db0eb9,eax
  411929:	aam    0x83
  41192b:	out    0xb9,eax
  41192d:	lock adc eax,0xd4925904
  411933:	jb     0x411969
  411935:	push   ebp
  411936:	push   0xffffffef
  411938:	aam    0xa6
  41193a:	inc    ecx
  41193b:	dec    ebx
  41193c:	arpl   WORD PTR [ebp+0x583d352f],ax
  411942:	sbb    bl,BYTE PTR [edx]
  411944:	inc    ecx
  411945:	clc    
  411946:	popa   
  411947:	(bad)  
  411948:	push   ds
  411949:	mov    edi,0x8306121e
  41194e:	cmp    BYTE PTR [eax+0x0],bl
  411951:	mov    dh,0x6e
  411953:	mov    WORD PTR [edx-0x240c59b1],ss
  411959:	call   0xae231ec3
  41195e:	aaa    
  41195f:	fstp   QWORD PTR [edi-0x6687a110]
  411965:	sub    BYTE PTR [esi],bh
  411967:	add    al,0x25
  411969:	lea    edx,[eax+0x7efcc6d4]
  41196f:	aad    0x7f
  411971:	mov    ch,0xa9
  411973:	lds    eax,FWORD PTR [edx-0x477c2019]
  411979:	adc    eax,0xef7c5296
  41197e:	js     0x4119b0
  411980:	jae    0x4119a6
  411982:	xchg   esp,eax
  411983:	add    cl,cl
  411985:	sti    
  411986:	fist   DWORD PTR [edi]
  411988:	rcl    DWORD PTR [esi-0x34f99305],1
  41198e:	js     0x411934
  411990:	jbe    0x41197a
  411992:	(bad)  
  411993:	sub    ecx,DWORD PTR [edi]
  411995:	add    eax,0xb0c0c5cb
  41199a:	inc    edx
  41199b:	cmp    ch,ch
  41199d:	ja     0x411978
  41199f:	fcomi  st,st(2)
  4119a1:	int    0x7e
  4119a3:	mov    ebp,0x75236188
  4119a8:	push   0xe99c9225
  4119ad:	push   ecx
  4119ae:	xabort 0xe4
  4119b1:	addr16 sub al,0x34
  4119b4:	out    0x6c,al
  4119b6:	inc    esp
  4119b7:	or     al,0xbe
  4119b9:	cs inc esp
  4119bb:	push   cs
  4119bc:	stos   BYTE PTR es:[edi],al
  4119bd:	push   esi
  4119be:	push   ebx
  4119bf:	pop    ebx
  4119c0:	push   0x27
  4119c2:	into   
  4119c3:	and    BYTE PTR [ebx+0x7c],bl
  4119c6:	nop    DWORD PTR [esi]
  4119c9:	push   ds
  4119ca:	das    
  4119cb:	push   ss
  4119cc:	push   ss
  4119cd:	sub    DWORD PTR [edx+0x7dc23b88],0x4e46ecab
  4119d7:	add    dh,dh
  4119d9:	data16 cld 
  4119db:	aam    0x1f
  4119dd:	push   edx
  4119de:	mov    ch,0x5e
  4119e0:	inc    eax
  4119e1:	int    0xbe
  4119e3:	popa   
  4119e4:	(bad)  
  4119e5:	and    esi,ecx
  4119e7:	ss fwait
  4119e9:	jle    0x411990
  4119eb:	xor    dl,dh
  4119ed:	mov    bl,0xd0
  4119ef:	push   cs
  4119f0:	or     BYTE PTR [ebx+eiz*4+0x6b],dl
  4119f4:	mov    esp,0xc4a4bb53
  4119f9:	popa   
  4119fa:	and    DWORD PTR [ebx+0x35],ecx
  4119fd:	xor    edi,DWORD PTR [ebx-0x61]
  411a00:	push   ebx
  411a01:	pop    edi
  411a02:	cmp    DWORD PTR [ebp-0x1],0xf6f00e3a
  411a09:	das    
  411a0a:	xlat   BYTE PTR ds:[ebx]
  411a0b:	sti    
  411a0c:	mov    eax,ds:0x898324a6
  411a11:	sub    al,0xcd
  411a13:	mov    ch,0x18
  411a15:	mov    bl,0xb1
  411a17:	nop
  411a18:	push   ebp
  411a19:	push   0xfffffff1
  411a1b:	and    edx,DWORD PTR [edi+0x2b]
  411a1e:	and    esi,eax
  411a20:	call   0xc3db:0x7a67d16
  411a27:	add    eax,0xde96d6eb
  411a2c:	je     0x411a4d
  411a2e:	adc    eax,0x80d6092f
  411a33:	push   edx
  411a34:	int    0x36
  411a36:	in     eax,dx
  411a37:	fild   WORD PTR [eax-0x76]
  411a3a:	dec    edx
  411a3b:	icebp  
  411a3c:	shl    ebx,1
  411a3e:	or     edx,DWORD PTR cs:[ebx+0x68bbc860]
  411a45:	push   ss
  411a46:	loop   0x4119d0
  411a48:	push   ecx
  411a49:	mov    WORD PTR [esi+0x4b42becc],ds
  411a4f:	pop    edi
  411a50:	inc    ebx
  411a51:	mov    dl,0x9d
  411a53:	call   esi
  411a55:	add    ch,BYTE PTR ds:0x36069183
  411a5b:	or     BYTE PTR [ecx-0x710f9679],dl
  411a61:	inc    esi
  411a62:	jle    0x411a2b
  411a64:	push   0x54efd61c
  411a69:	int3   
  411a6a:	aaa    
  411a6b:	ja     0x411a42
  411a6d:	add    edx,edx
  411a6f:	pop    ds
  411a70:	sbb    edi,edi
  411a72:	mov    edi,0x9ea8d4b
  411a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a78:	int    0x46
  411a7a:	push   ebx
  411a7b:	and    al,0xf6
  411a7d:	push   esp
  411a7e:	shr    DWORD PTR [ecx-0xd],cl
  411a81:	adc    bh,BYTE PTR [edi+0xb04bd7f]
  411a87:	mov    ecx,0x6894e731
  411a8c:	sub    BYTE PTR [ebx-0x73],dh
  411a8f:	mov    DWORD PTR [eax-0x53],0x5a9d11c6
  411a96:	icebp  
  411a97:	pop    es
  411a98:	jge    0x411acb
  411a9a:	mov    DWORD PTR [ebp+0x67bfb23c],edi
  411aa0:	or     al,0x8f
  411aa2:	pop    ebp
  411aa3:	and    al,0xa3
  411aa5:	mov    esi,ebx
  411aa7:	xor    eax,eax
  411aa9:	lahf   
  411aaa:	mov    edi,0x8c82be7d
  411aaf:	cmc    
  411ab0:	sbb    al,0x6b
  411ab2:	les    ecx,FWORD PTR [edx]
  411ab4:	xor    cl,BYTE PTR [eax]
  411ab6:	jle    0x411afb
  411ab8:	pop    ds
  411ab9:	push   ebx
  411aba:	pusha  
  411abb:	repz clc 
  411abd:	mov    al,0x71
  411abf:	jecxz  0x411aba
  411ac1:	fimul  WORD PTR [ecx]
  411ac3:	dec    ebx
  411ac4:	mov    bl,0x33
  411ac6:	sar    bh,0x4
  411ac9:	fwait
  411aca:	or     al,0xdb
  411acc:	ja     0x411ade
  411ace:	cwde   
  411acf:	pop    es
  411ad0:	mov    bh,0xb5
  411ad2:	enter  0x955,0x41
  411ad6:	ret    
  411ad7:	ret    0xac2c
  411ada:	jae    0x411b0b
  411adc:	or     edi,esp
  411ade:	cwde   
  411adf:	ja     0x411a62
  411ae1:	mov    edx,0xc70e5bbb
  411ae6:	mov    ch,BYTE PTR [ebx]
  411ae8:	and    ebp,DWORD PTR [ebx+0xc7ea5c0]
  411aee:	dec    esp
  411aef:	xor    eax,0xf52ca592
  411af4:	arpl   WORD PTR [esi+0x38],dx
  411af7:	jp     0x411a80
  411af9:	or     ebp,DWORD PTR [edx-0xe]
  411afc:	test   al,0xd2
  411afe:	hlt    
  411aff:	xchg   edi,eax
  411b00:	inc    edx
  411b01:	inc    edi
  411b02:	pushf  
  411b03:	in     al,dx
  411b04:	(bad)  
  411b05:	popa   
  411b06:	scas   eax,DWORD PTR es:[edi]
  411b07:	sub    DWORD PTR [esi+0x49e02cfe],ecx
  411b0d:	push   cs
  411b0e:	push   edi
  411b0f:	stos   BYTE PTR es:[edi],al
  411b10:	mov    dl,dl
  411b12:	addr16 mov esp,0x7d7f7bee
  411b18:	loopne 0x411b29
  411b1a:	or     eax,edx
  411b1c:	mov    al,0xe5
  411b1e:	mov    esi,0x2e7cfad2
  411b23:	mov    edx,0xef25528b
  411b28:	inc    ebx
  411b29:	jmp    0xb65a:0x579082af
  411b30:	fcmovnu st,st(7)
  411b32:	repnz call 0x6845:0x73c6529
  411b3a:	mov    eax,0xef0cf2e6
  411b3f:	lods   eax,DWORD PTR ds:[esi]
  411b40:	pusha  
  411b41:	ficom  DWORD PTR [edi-0x747a55a2]
  411b47:	lea    ecx,[edx+0x59]
  411b4a:	das    
  411b4b:	dec    esi
  411b4c:	in     eax,dx
  411b4d:	and    al,0x3a
  411b4f:	mov    ah,0x6d
  411b51:	das    
  411b52:	ins    DWORD PTR es:[edi],dx
  411b53:	arpl   WORD PTR [eax+edi*2],si
  411b56:	loop   0x411afc
  411b58:	inc    eax
  411b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b5a:	int3   
  411b5b:	xchg   DWORD PTR [eax-0x4f926713],edi
  411b61:	iret   
  411b62:	ret    
  411b63:	or     al,0x55
  411b65:	adc    ebp,DWORD PTR [eax+0xf]
  411b68:	cld    
  411b69:	ss sbb ax,0xf0b2
  411b6e:	cmp    eax,0xc1c2a9b3
  411b73:	adc    BYTE PTR [esi-0x2f],bh
  411b76:	sub    ch,dh
  411b78:	cmp    DWORD PTR [edi+0x0],0xffffff82
  411b7c:	and    ch,ah
  411b7e:	jle    0x411bb4
  411b80:	add    DWORD PTR [edx-0xe4d3e68],edx
  411b86:	outs   dx,BYTE PTR ds:[esi]
  411b87:	xchg   edi,eax
  411b88:	jnp    0x411b16
  411b8a:	imul   edi,DWORD PTR [edx-0x34900231],0xa76dbb15
  411b94:	add    DWORD PTR [eax+0x15],0xffffffef
  411b98:	jp     0x411bee
  411b9a:	jp     0x411b84
  411b9c:	lea    edi,[ebp+0x2770ebe9]
  411ba2:	inc    ebp
  411ba3:	pop    ebx
  411ba4:	sub    ch,dl
  411ba6:	cmp    ebp,0xfa56521a
  411bac:	or     ch,ah
  411bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411baf:	popf   
  411bb0:	adc    eax,0x297d62fa
  411bb5:	fincstp 
  411bb7:	mov    dl,ah
  411bb9:	loope  0x411c18
  411bbb:	mov    esp,0x228699e5
  411bc0:	arpl   dx,bp
  411bc2:	jbe    0x411b57
  411bc4:	pusha  
  411bc5:	imul   ebx,DWORD PTR [ecx+0x23],0xffffff90
  411bc9:	and    al,0xdb
  411bcb:	ror    BYTE PTR [edi-0x31abaadf],cl
  411bd1:	int3   
  411bd2:	loopne 0x411bcd
  411bd4:	rol    DWORD PTR [ecx],0x87
  411bd7:	retf   0xbaf
  411bda:	icebp  
  411bdb:	push   edi
  411bdc:	add    edi,edi
  411bde:	stos   BYTE PTR es:[edi],al
  411bdf:	mov    edx,0x5627566d
  411be4:	in     eax,0x39
  411be6:	in     eax,0x6a
  411be8:	leave  
  411be9:	inc    esp
  411bea:	pop    eax
  411beb:	popf   
  411bec:	pop    esi
  411bed:	shl    DWORD PTR ds:0x9d2663e9,1
  411bf3:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  411bf5:	xor    al,0x46
  411bf7:	add    ch,BYTE PTR [ecx]
  411bf9:	sub    DWORD PTR [edx],0x66551ade
  411bff:	imul   BYTE PTR ds:0x5411b973
  411c05:	jg     0x411bf3
  411c07:	aas    
  411c08:	sahf   
  411c09:	clc    
  411c0a:	and    al,0x54
  411c0c:	repz dec ebp
  411c0e:	pop    esi
  411c0f:	int    0x2d
  411c11:	push   ss
  411c12:	push   ebp
  411c13:	cdq    
  411c14:	inc    ebp
  411c15:	call   0x718cb93e
  411c1a:	popa   
  411c1b:	jbe    0x411c20
  411c1d:	(bad)  [edi-0x2f]
  411c20:	sub    bl,BYTE PTR ds:0xe3adc600
  411c26:	sbb    al,0x6b
  411c28:	sbb    ebx,eax
  411c2a:	sub    DWORD PTR [ebp+0x6a59ae64],ecx
  411c30:	pop    edx
  411c31:	adc    ecx,DWORD PTR [ecx+edx*2]
  411c34:	mov    ds:0xc68f35f4,eax
  411c39:	or     bh,BYTE PTR [edi+0x495d4a55]
  411c3f:	and    BYTE PTR [eax+0x31],ah
  411c42:	call   0x3fe02b8a
  411c47:	pop    edi
  411c48:	popa   
  411c49:	jmp    0xdf76d03a
  411c4e:	out    dx,eax
  411c4f:	mov    ch,0xad
  411c51:	retf   0x3654
  411c54:	xchg   esi,eax
  411c55:	inc    ebx
  411c56:	nop
  411c57:	cmp    BYTE PTR [edx],dl
  411c59:	outs   dx,DWORD PTR ds:[esi]
  411c5a:	cmovb  ebp,DWORD PTR [ebp+edx*2+0x235f2d3e]
  411c62:	dec    eax
  411c63:	push   0x8aa43078
  411c68:	cmp    DWORD PTR [ebx+0x2d],ebp
  411c6b:	in     eax,0xdf
  411c6d:	fcomip st,st(3)
  411c6f:	shl    esi,cl
  411c71:	push   edx
  411c72:	dec    ebp
  411c73:	mov    ch,0x97
  411c75:	leave  
  411c76:	lahf   
  411c77:	(bad)  
  411c78:	loope  0x411c32
  411c7a:	cmp    al,0xd0
  411c7c:	xor    BYTE PTR [edi+0x66fa0e87],cl
  411c82:	jecxz  0x411ca1
  411c84:	mov    ds:0x37465ab8,eax
  411c89:	leave  
  411c8a:	and    DWORD PTR [ebp-0x20ca0a84],esp
  411c90:	adc    al,0x4d
  411c92:	addr16 and esi,eax
  411c95:	cmc    
  411c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c98:	lds    edx,FWORD PTR [eax-0x1d]
  411c9b:	loop   0x411cb3
  411c9d:	scas   al,BYTE PTR es:[edi]
  411c9e:	mov    esi,0xd8e80a17
  411ca3:	ror    DWORD PTR [esp+ebx*2],1
  411ca6:	push   ebx
  411ca7:	pusha  
  411ca8:	or     ebp,esp
  411caa:	cmp    DWORD PTR [esi-0x14],ebx
  411cad:	dec    ebx
  411cae:	sub    al,0x55
  411cb0:	pusha  
  411cb1:	xor    BYTE PTR [ebp-0x29729bdd],ah
  411cb7:	or     al,0x3c
  411cb9:	cwde   
  411cba:	ficom  WORD PTR [esi+0x79]
  411cbd:	call   0x8057412d
  411cc2:	jnp    0x411c54
  411cc4:	int3   
  411cc5:	sub    bl,al
  411cc7:	lea    esp,[edi-0x4c]
  411cca:	mov    ebx,0x96283663
  411ccf:	scas   eax,DWORD PTR es:[edi]
  411cd0:	fnsave [eax-0x2b1565cf]
  411cd6:	pop    ebp
  411cd7:	or     cl,BYTE PTR [ebx-0x7a]
  411cda:	enter  0xe66f,0xf3
  411cde:	imul   DWORD PTR [esi-0xc]
  411ce1:	stos   BYTE PTR es:[edi],al
  411ce2:	xor    eax,0xb8398399
  411ce7:	push   esi
  411ce8:	ja     0x411c9b
  411cea:	mov    esi,0x9068ee0
  411cef:	xor    ebp,ecx
  411cf1:	jae    0x411cf3
  411cf3:	fadd   st,st(6)
  411cf5:	fwait
  411cf6:	and    edi,DWORD PTR [edi]
  411cf8:	fdivr  DWORD PTR [edx]
  411cfa:	mov    cl,0xc4
  411cfc:	mov    esp,0x47265a74
  411d01:	rcl    DWORD PTR [eax-0x50],cl
  411d04:	jl     0x411cb9
  411d06:	push   esi
  411d07:	sbb    dh,BYTE PTR ds:0xb8d7f639
  411d0d:	aas    
  411d0e:	clc    
  411d0f:	and    esp,0xad2482e9
  411d15:	xor    ah,dh
  411d17:	cmp    ebx,DWORD PTR [esi+0x5e3ae862]
  411d1d:	(bad)  
  411d1e:	mov    al,ds:0xac254836
  411d23:	test   eax,0xc71a23ae
  411d28:	cs inc eax
  411d2a:	xchg   esi,eax
  411d2b:	dec    esp
  411d2c:	int    0x49
  411d2e:	dec    ebx
  411d2f:	mov    esp,gs
  411d31:	mov    ch,0x97
  411d33:	pop    ebx
  411d34:	add    al,bl
  411d36:	dec    ecx
  411d37:	jb     0x411cc4
  411d39:	adc    bh,cl
  411d3b:	jo     0x411d90
  411d3d:	std    
  411d3e:	lahf   
  411d3f:	mov    edx,0xb96e24f
  411d44:	test   eax,0x9e932d47
  411d49:	adc    BYTE PTR [eax+eax*4],bh
  411d4c:	inc    ebp
  411d4d:	xor    eax,ebx
  411d4f:	mov    ecx,0xb965a8a4
  411d54:	stos   DWORD PTR es:[edi],eax
  411d55:	mov    ah,0xbc
  411d57:	call   0xa401afe8
  411d5c:	lea    ebx,[esi+0x77f306f2]
  411d62:	adc    ch,cl
  411d64:	lock dec esp
  411d66:	adc    BYTE PTR [ecx-0x23],0x4
  411d6a:	mul    BYTE PTR [edx-0x55]
  411d6d:	out    0xc5,eax
  411d6f:	stc    
  411d70:	mov    ebp,DWORD PTR [ecx]
  411d72:	enter  0xa947,0xe
  411d76:	jae    0x411d7b
  411d78:	ficomp DWORD PTR [edx-0x5eb69686]
  411d7e:	xchg   edx,eax
  411d7f:	pop    edi
  411d80:	lods   eax,DWORD PTR ds:[esi]
  411d81:	jmp    0x411dbc
  411d83:	inc    ebp
  411d84:	ds inc esp
  411d86:	push   0x41a61965
  411d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d8d:	mov    bl,0x77
  411d8f:	not    esi
  411d91:	sbb    eax,0x47e07f84
  411d96:	imul   edi,edi,0x21
  411d99:	pop    ebp
  411d9a:	mov    al,0xb4
  411d9c:	inc    edx
  411d9d:	pushf  
  411d9e:	fist   DWORD PTR [ecx-0x1ef31e23]
  411da4:	xchg   edx,eax
  411da5:	pop    esp
  411da6:	(bad)  
  411da7:	push   ss
  411da8:	pop    es
  411da9:	popf   
  411daa:	ins    BYTE PTR es:[edi],dx
  411dab:	pop    ds
  411dac:	cmp    al,0xe4
  411dae:	out    0x95,al
  411db0:	push   edx
  411db1:	adc    DWORD PTR [ecx],eax
  411db3:	lahf   
  411db4:	sub    eax,0xbc7a72dd
  411db9:	or     BYTE PTR ds:0xef786a92,0x7a
  411dc0:	je     0x411d50
  411dc2:	add    eax,ebp
  411dc4:	dec    ebp
  411dc5:	fldcw  WORD PTR ss:[edx+esi*4]
  411dc9:	or     ebx,ecx
  411dcb:	xchg   edi,eax
  411dcc:	in     eax,dx
  411dcd:	adc    eax,0x6e70a57a
  411dd2:	add    al,0xd4
  411dd4:	idiv   DWORD PTR [ebx+eiz*8]
  411dd7:	jg     0x411d9a
  411dd9:	cmc    
  411dda:	inc    ebx
  411ddb:	repz sbb edi,DWORD PTR ds:0x3982bd6a
  411de2:	adc    eax,DWORD PTR [edx+0x71]
  411de5:	push   ebx
  411de6:	inc    ecx
  411de7:	adc    bl,bl
  411de9:	add    BYTE PTR [ecx],ah
  411deb:	(bad)  
  411dec:	push   edi
  411ded:	or     DWORD PTR [eax],edx
  411def:	add    esi,DWORD PTR [edi+0x5a]
  411df2:	ror    BYTE PTR [ebx+0x4],0xf1
  411df6:	pop    ss
  411df7:	and    BYTE PTR [edi+0x6],bh
  411dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dfb:	inc    esp
  411dfc:	ret    
  411dfd:	pop    edi
  411dfe:	sub    DWORD PTR [esi-0x65],eax
  411e01:	mov    dl,0x16
  411e03:	or     ch,al
  411e05:	stos   BYTE PTR es:[edi],al
  411e06:	sbb    DWORD PTR [esi],esp
  411e08:	int3   
  411e09:	std    
  411e0a:	mov    BYTE PTR ds:0x6b6025cf,cl
  411e10:	lahf   
  411e11:	mov    DWORD PTR [eax-0x1e9acdb8],0xff7bc4fa
  411e1b:	dec    esp
  411e1c:	dec    eax
  411e1d:	ret    0x69f2
  411e20:	mov    ah,BYTE PTR [eax]
  411e22:	in     al,0x5
  411e24:	add    DWORD PTR [esi],0x3c371bc8
  411e2a:	test   eax,0x74d7e493
  411e2f:	mov    DWORD PTR [eax-0x3eafc368],eax
  411e35:	retf   
  411e36:	sbb    dh,bh
  411e38:	test   al,0x10
  411e3a:	or     ah,ch
  411e3c:	loopne 0x411e75
  411e3e:	xchg   esp,eax
  411e3f:	or     DWORD PTR [ecx],esp
  411e41:	mov    bl,0x2
  411e43:	mov    eax,ds:0x211892a7
  411e48:	mov    eax,ds:0xaed15a2a
  411e4d:	or     DWORD PTR [edx],edi
  411e4f:	(bad)  
  411e51:	add    al,0x4
  411e53:	outs   dx,BYTE PTR ds:[esi]
  411e54:	and    DWORD PTR [ecx+eiz*2+0x76],edx
  411e58:	arpl   WORD PTR [edx],si
  411e5a:	loopne 0x411e81
  411e5c:	mov    ds:0x8a667b77,al
  411e61:	jg     0x411e60
  411e63:	(bad)  
  411e64:	fsub   st,st(6)
  411e66:	lahf   
  411e67:	sti    
  411e68:	mov    esp,0x1ba0bfac
  411e6d:	icebp  
  411e6e:	aaa    
  411e6f:	push   ds
  411e70:	inc    edi
  411e71:	cmp    DWORD PTR [edi],edx
  411e73:	rcl    DWORD PTR [edx-0x4cdcf679],0x45
  411e7a:	push   eax
  411e7b:	push   ebx
  411e7c:	cmp    ecx,ebp
  411e7e:	jl     0x411e7d
  411e80:	out    dx,al
  411e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e82:	lahf   
  411e83:	inc    edx
  411e84:	sbb    ebx,DWORD PTR [ecx+0x4a]
  411e87:	or     DWORD PTR [ebx-0x42],edi
  411e8a:	jnp    0x411e23
  411e8c:	imul   ebx,ecx,0x23428e66
  411e92:	mov    edi,eax
  411e94:	and    eax,0xd5103831
  411e99:	add    BYTE PTR [edi-0x70],0x71
  411e9d:	mov    cl,0xfc
  411e9f:	or     ecx,DWORD PTR [edx-0x71f4607c]
  411ea5:	rol    BYTE PTR [esi+0x294e2b53],0xc5
  411eac:	imul   eax,DWORD PTR [edi+0x6a762c6a],0x9ecbdea4
  411eb6:	cs mov bl,0x29
  411eb9:	push   0x8a25e8af
  411ebe:	iret   
  411ebf:	and    BYTE PTR [ebx+0x7e],bl
  411ec2:	jmp    0xf657:0x51dae73c
  411ec9:	pushf  
  411eca:	inc    esi
  411ecb:	jno    0x411f22
  411ecd:	push   ss
  411ece:	(bad)  
  411ecf:	aaa    
  411ed0:	enter  0x978a,0x7f
  411ed4:	adc    BYTE PTR [ebx+0x46],bl
  411ed7:	leave  
  411ed8:	std    
  411ed9:	test   eax,0x14ffa6f1
  411ede:	sub    ecx,DWORD PTR [esi+edx*2]
  411ee1:	and    BYTE PTR [edi+0x5f5ac242],dh
  411ee7:	and    DWORD PTR [esi+0x7f],ecx
  411eea:	aas    
  411eeb:	ss pusha 
  411eed:	daa    
  411eee:	xchg   BYTE PTR [eax],ch
  411ef0:	and    eax,DWORD PTR [ebx-0x25bcda2]
  411ef6:	cmp    al,0x24
  411ef8:	outs   dx,DWORD PTR ds:[esi]
  411ef9:	sub    al,0x54
  411efb:	xlat   BYTE PTR ds:[ebx]
  411efc:	inc    eax
  411efd:	dec    esi
  411efe:	outs   dx,WORD PTR ds:[esi]
  411f00:	mov    ebp,0x3f00297b
  411f05:	div    BYTE PTR [edi+eiz*1]
  411f08:	loop   0x411f44
  411f0a:	add    esi,0x50250474
  411f10:	xchg   ebp,eax
  411f11:	test   eax,0x5e7e1529
  411f16:	mov    BYTE PTR [edi+0x35],dh
  411f19:	repnz int3 
  411f1b:	or     ah,BYTE PTR [edx-0x599196a9]
  411f21:	je     0x411ed2
  411f23:	stos   BYTE PTR es:[edi],al
  411f24:	xor    dl,dh
  411f26:	test   al,0x80
  411f28:	mov    bh,0xd1
  411f2a:	sar    edx,cl
  411f2c:	pusha  
  411f2d:	mov    edx,0x619247a7
  411f32:	adc    al,0x5c
  411f34:	jl     0xef20bcd0
  411f3a:	dec    edx
  411f3b:	mov    BYTE PTR ds:0x76166ef1,0xb
  411f42:	add    eax,0xdc638da0
  411f47:	pop    ds
  411f48:	add    esi,DWORD PTR [edi+0x52]
  411f4b:	fmul   DWORD PTR ds:0x2ca956
  411f51:	test   eax,0x27118d52
  411f56:	push   cs
  411f57:	pop    es
  411f58:	fscale 
  411f5a:	mov    DWORD PTR [ecx],ebx
  411f5c:	cdq    
  411f5d:	dec    eax
  411f5e:	add    DWORD PTR [edi+0x6f1da9e7],esi
  411f64:	fcomp  DWORD PTR [ebx]
  411f66:	dec    ebp
  411f67:	push   ebx
  411f68:	mov    WORD PTR [eax],?
  411f6a:	call   0xd271e0f3
  411f6f:	jo     0x411f12
  411f71:	xor    DWORD PTR [edi+edi*8-0x164110f8],0x8e0a6ab6
  411f7c:	mov    es,esp
  411f7e:	test   al,0x37
  411f80:	xchg   esi,eax
  411f81:	add    BYTE PTR [ebp-0x4d],0xa7
  411f85:	sub    al,BYTE PTR ds:0xdbe58816
  411f8b:	pop    esi
  411f8c:	adc    DWORD PTR [ebp-0x25],esi
  411f8f:	pop    ebp
  411f90:	jno    0x411fcf
  411f92:	cwde   
  411f93:	(bad)  
  411f95:	cld    
  411f96:	sar    DWORD PTR [ebx],cl
  411f98:	jb     0x411fa2
  411f9a:	jnp    0x411f75
  411f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f9d:	enter  0x5176,0xf2
  411fa1:	in     al,dx
  411fa2:	popa   
  411fa3:	cld    
  411fa4:	xor    DWORD PTR [edx],ebx
  411fa6:	sub    BYTE PTR [edi-0x41],ah
  411fa9:	sbb    edx,DWORD PTR [edi-0x65e6782d]
  411faf:	cmp    esi,ebp
  411fb1:	in     eax,dx
  411fb2:	das    
  411fb3:	ins    BYTE PTR es:[edi],dx
  411fb4:	repnz sbb eax,0x5fe147a9
  411fba:	push   ss
  411fbb:	mov    ds:0x7ab7cbd8,eax
  411fc0:	pop    es
  411fc1:	fstp   TBYTE PTR [esi-0x53]
  411fc4:	jo     0x412043
  411fc6:	xor    BYTE PTR [edi],ch
  411fc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc9:	shl    BYTE PTR [eax-0x49],0xb1
  411fcd:	call   0xcdb7:0x70eb0b23
  411fd4:	dec    edx
  411fd5:	into   
  411fd6:	in     eax,dx
  411fd7:	lahf   
  411fd8:	out    dx,eax
  411fd9:	sub    BYTE PTR [ebx-0x3d0f141c],ah
  411fdf:	ret    
  411fe0:	pop    edi
  411fe1:	jo     0x411fa9
  411fe3:	mov    eax,ds:0xe50c7f65
  411fe8:	mov    esi,DWORD PTR [eax+0x42]
  411feb:	retf   
  411fec:	fisttp WORD PTR [edi+0x71]
  411fef:	add    al,0x5b
  411ff1:	dec    edi
  411ff2:	lock sub ebx,eax
  411ff5:	ds sahf 
  411ff7:	adc    edi,ebx
  411ff9:	inc    ebx
  411ffa:	stos   DWORD PTR es:[edi],eax
  411ffb:	xlat   BYTE PTR ds:[ebx]
  411ffc:	push   0x1a492d3
  412001:	retf   0xc3cd
  412004:	arpl   WORD PTR [ebp-0x16],bx
  412007:	es push ebx
  412009:	adc    al,0x10
  41200b:	push   ecx
  41200c:	js     0x412005
  41200e:	in     al,0x62
  412010:	pop    esp
  412011:	loope  0x41208a
  412013:	popa   
  412014:	cmc    
  412015:	mov    esi,DWORD PTR [ecx+0x3f1c4e65]
  41201b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41201c:	fwait
  41201d:	out    0x35,eax
  41201f:	adc    DWORD PTR [esi+0x13],ebp
  412022:	(bad)  
  412023:	xor    al,0xd8
  412025:	mov    ah,0xdc
  412027:	jle    0x412065
  412029:	push   ds
  41202a:	push   ebp
  41202b:	sar    BYTE PTR [eax+0x2f],1
  41202e:	cld    
  41202f:	hlt    
  412030:	mov    DWORD PTR [ecx],ecx
  412032:	mov    edx,0x2a62996e
  412037:	dec    eax
  412038:	jb     0x411ff8
  41203a:	arpl   WORD PTR [edi+edi*8+0x22],ax
  41203e:	in     al,dx
  41203f:	ins    BYTE PTR es:[edi],dx
  412040:	or     al,BYTE PTR ds:0x9e9f7edd
  412046:	pop    edx
  412047:	jle    0x412021
  412049:	xor    ch,BYTE PTR [esi+0x36]
  41204c:	add    ch,cl
  41204e:	cmp    dh,BYTE PTR [eax+0x1c]
  412051:	lds    ebp,FWORD PTR [edi-0x5c]
  412054:	fsubr  DWORD PTR [ebp+edi*8-0x4727aa61]
  41205b:	jno    0x411fe2
  41205d:	jbe    0x4120b1
  41205f:	jp     0x4120db
  412061:	add    eax,0xb7ca05a3
  412066:	sbb    DWORD PTR [ebx],ecx
  412068:	gs (bad) 
  41206a:	loope  0x4120a4
  41206c:	cli    
  41206d:	mov    esi,0x2c284f16
  412072:	je     0x4120c3
  412074:	fs pextrw esp,(bad),0xc5
  412077:	and    cl,BYTE PTR [ebp-0x27]
  41207a:	cli    
  41207b:	or     DWORD PTR [ebx-0x2a7fa040],eax
  412081:	mov    esi,0x2e22719a
  412086:	push   0xf4149ee1
  41208b:	jne    0x4120f5
  41208d:	ins    BYTE PTR es:[edi],dx
  41208e:	or     edi,DWORD PTR [edi-0x2f97caf4]
  412094:	fcomp  QWORD PTR [edx-0x75]
  412097:	push   ebx
  412098:	addr16 jg 0x412096
  41209b:	mov    ds:0x4a210feb,eax
  4120a0:	scas   al,BYTE PTR es:[edi]
  4120a1:	add    al,0xaa
  4120a3:	mov    ds:0xc7e8b6af,eax
  4120a8:	mov    ds:0xa1d4fb65,eax
  4120ad:	pop    ebp
  4120ae:	cmp    DWORD PTR [edi],edx
  4120b0:	lods   eax,DWORD PTR ds:[esi]
  4120b1:	sbb    BYTE PTR [ebx+0x67f1be45],al
  4120b7:	div    BYTE PTR [ebx+ebp*8]
  4120ba:	sbb    BYTE PTR ss:[edi],bl
  4120bd:	jecxz  0x41209f
  4120bf:	sub    DWORD PTR [ecx+edx*2-0x3],esp
  4120c3:	inc    esi
  4120c4:	xor    al,0x2b
  4120c6:	xor    ebp,DWORD PTR [esi+0x5705d6dc]
  4120cc:	daa    
  4120cd:	adc    bl,BYTE PTR [edi-0x67b2898b]
  4120d3:	xlat   BYTE PTR ds:[ebx]
  4120d4:	mov    edi,0x252cd668
  4120d9:	and    ah,BYTE PTR [eax-0x3e]
  4120dc:	jle    0x412065
  4120de:	mov    al,ds:0xee947792
  4120e3:	rcl    BYTE PTR [edi+eiz*2],1
  4120e6:	xor    al,0xf2
  4120e8:	(bad)  [edi]
  4120ea:	inc    edx
  4120eb:	adc    ch,BYTE PTR [eax]
  4120ed:	cwde   
  4120ee:	adc    al,0xa2
  4120f0:	and    al,BYTE PTR [ecx-0x200e8807]
  4120f6:	cmp    al,0xb3
  4120f8:	rcl    DWORD PTR [esi-0x70],0x3e
  4120fc:	add    ebx,DWORD PTR [edi+0x5a5c8d4]
  412102:	jmp    0x33f6:0xd93c8f0
  412109:	mov    ch,0x4a
  41210b:	sub    ecx,ecx
  41210d:	push   ss
  41210e:	mov    cl,0x32
  412110:	and    ah,BYTE PTR [edi+0x7da660e2]
  412116:	or     DWORD PTR [eax],ebx
  412118:	sub    al,0xc6
  41211a:	jp     0x412187
  41211c:	adc    DWORD PTR [edx-0x1734fc5e],esp
  412122:	xlat   BYTE PTR ds:[ebx]
  412123:	mov    bh,0xfd
  412125:	jl     0x4120f1
  412127:	xchg   ebx,eax
  412128:	mov    ebx,0x2f7623c7
  41212d:	das    
  41212e:	les    esp,FWORD PTR [ebx]
  412130:	scas   eax,DWORD PTR es:[edi]
  412131:	inc    esp
  412132:	sti    
  412133:	sbb    al,0x3c
  412135:	gs daa 
  412137:	jg     0x4120c8
  412139:	jo     0x412134
  41213b:	out    0x7e,eax
  41213d:	push   eax
  41213e:	jb     0x4120cd
  412140:	mov    bh,0x97
  412142:	sar    BYTE PTR [ebx-0x6b8439ef],1
  412148:	mov    esi,0xbef87e87
  41214d:	fnstsw WORD PTR [eax+0xce46f15]
  412153:	mov    bl,0x9a
  412155:	push   esp
  412156:	pop    ebp
  412157:	mov    edi,edx
  412159:	shl    BYTE PTR [edi-0x1d],cl
  41215c:	lahf   
  41215d:	std    
  41215e:	sbb    ebx,DWORD PTR [ecx+0x5a]
  412161:	stc    
  412162:	sbb    esp,edi
  412164:	das    
  412165:	(bad)  
  412166:	lea    ecx,[ebx-0x21c415ac]
  41216c:	jg     0x412110
  41216e:	stc    
  41216f:	sbb    dh,al
  412171:	mov    WORD PTR [ebx-0x66],gs
  412174:	daa    
  412175:	fadd   QWORD PTR [ebp+0x2b]
  412178:	cdq    
  412179:	push   esp
  41217a:	sbb    BYTE PTR [edi+0x25],dh
  41217d:	rcr    DWORD PTR [esi],1
  41217f:	mov    ah,0xf5
  412181:	push   eax
  412182:	fs sub eax,0x3de0ae63
  412188:	mov    ebp,0x854788a5
  41218d:	and    ebx,esi
  41218f:	pop    esi
  412190:	div    dl
  412192:	repnz cmp eax,DWORD PTR ss:[ebx-0x27840171]
  41219a:	xchg   ecx,eax
  41219b:	fstp   TBYTE PTR [ebp+0x154908b7]
  4121a1:	mov    WORD PTR [ecx-0x59],?
  4121a4:	int    0x4c
  4121a6:	addr16 inc ecx
  4121a8:	lea    edx,[esi-0x601139f8]
  4121ae:	pop    ecx
  4121af:	mov    edx,0x6d840bfb
  4121b4:	(bad)  
  4121b5:	mov    dl,0x68
  4121b7:	push   eax
  4121b8:	jl     0x4121f0
  4121ba:	cmp    BYTE PTR [eax+edx*4-0x3d7696f3],bl
  4121c1:	add    DWORD PTR [ecx-0x3baf2641],esp
  4121c7:	out    0x53,eax
  4121c9:	jmp    0xa109c9d
  4121ce:	test   al,0x4d
  4121d0:	test   al,0xea
  4121d2:	ret    0xc5b3
  4121d5:	daa    
  4121d6:	sbb    dh,ch
  4121d8:	dec    edx
  4121d9:	and    esp,DWORD PTR [ebx]
  4121db:	es cmp al,0xa9
  4121de:	add    BYTE PTR [ebp+0x33],ah
  4121e1:	add    BYTE PTR [ebp-0x7a],ah
  4121e4:	fmul   QWORD PTR [esi+0x449bbbd3]
  4121ea:	js     0x41222d
  4121ec:	mov    esi,0x474f902a
  4121f1:	push   ecx
  4121f2:	loope  0x412212
  4121f4:	std    
  4121f5:	pusha  
  4121f6:	xor    eax,0xc381798e
  4121fb:	hlt    
  4121fc:	nop
  4121fd:	push   es
  4121fe:	stos   BYTE PTR es:[edi],al
  4121ff:	aaa    
  412200:	xchg   dh,ch
  412202:	ds (bad) 
  412204:	outs   dx,DWORD PTR ds:[esi]
  412205:	fs mov al,0x4e
  412208:	iret   
  412209:	mov    ch,0x24
  41220b:	mov    eax,ds:0x10c4fb44
  412210:	lea    edx,[eax+0x28]
  412213:	mov    ebp,0x8eb6e57c
  412218:	pop    esp
  412219:	mov    ebx,0x5ec4d5d1
  41221e:	sbb    al,ch
  412220:	push   es
  412221:	mov    ch,0x9b
  412223:	lock repz adc ecx,DWORD PTR ds:[ecx]
  412228:	jne    0x412223
  41222a:	das    
  41222b:	add    cl,dh
  41222d:	dec    ecx
  41222e:	dec    edi
  41222f:	addr16 hlt 
  412231:	fidiv  DWORD PTR [edi+0x45]
  412235:	xchg   ebx,eax
  412236:	dec    ebp
  412237:	jge    0x4121da
  412239:	js     0x4122a5
  41223b:	leave  
  41223c:	lahf   
  41223d:	inc    edi
  41223e:	jmp    0x9e9fecb0
  412243:	out    0x95,al
  412245:	mov    esp,0x6ee5a53
  41224a:	fisub  WORD PTR [ecx]
  41224c:	pop    ebx
  41224d:	mov    ebp,0x80503f79
  412252:	mov    esi,0x10510708
  412257:	out    dx,al
  412258:	clc    
  412259:	inc    edx
  41225a:	mov    bh,BYTE PTR ds:0x2058be4
  412260:	adc    al,0x6b
  412262:	mov    edx,0xa2a59920
  412267:	(bad)  
  412268:	sub    al,0x72
  41226a:	inc    edi
  41226b:	(bad)  
  41226d:	add    BYTE PTR [ebp-0x34268d94],0xe0
  412274:	mov    ds:0x2016ea28,al
  412279:	sbb    cl,dh
  41227b:	test   eax,0xcbd9f0dc
  412280:	mov    al,ds:0x71cf7b29
  412285:	push   ds
  412286:	jo     0x41227c
  412288:	jl     0x4122dd
  41228a:	in     al,dx
  41228b:	lds    ebp,FWORD PTR [edx-0x77]
  41228e:	adc    dh,BYTE PTR [edi+0x4fdd3814]
  412294:	push   eax
  412295:	mov    ch,0x84
  412297:	xor    eax,DWORD PTR [ebx]
  412299:	xchg   esi,eax
  41229b:	push   0xfffffff6
  41229d:	xor    ebx,DWORD PTR [eax]
  41229f:	pop    ss
  4122a0:	das    
  4122a1:	shr    DWORD PTR [edx],0xaa
  4122a4:	mov    esp,0x14c1e515
  4122a9:	inc    ecx
  4122aa:	jecxz  0x4122f5
  4122ac:	outs   dx,BYTE PTR ds:[esi]
  4122ad:	mov    edx,0xcc16d7e
  4122b2:	jle    0x412310
  4122b4:	aaa    
  4122b5:	imul   ebp,DWORD PTR [ebx+ebx*8+0x71],0xffffffad
  4122ba:	cmp    esp,DWORD PTR [ecx-0xe75cc89]
  4122c0:	scas   al,BYTE PTR es:[edi]
  4122c1:	or     DWORD PTR [ecx+ebx*2],eax
  4122c4:	fild   DWORD PTR [edi+0x52893f61]
  4122ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122cb:	inc    ebp
  4122cc:	pop    ebx
  4122cd:	enter  0x7f19,0xa6
  4122d1:	retf   0x9264
  4122d4:	daa    
  4122d5:	mov    gs,WORD PTR [ebp+0x1055a95c]
  4122db:	jge    0x41228d
  4122dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122de:	jle    0x412302
  4122e0:	mov    eax,ds:0x494028b
  4122e5:	xchg   edi,eax
  4122e6:	loopne 0x4122da
  4122e8:	pop    esp
  4122e9:	adc    ecx,edx
  4122eb:	sbb    esp,ebx
  4122ed:	rol    eax,0x34
  4122f0:	shr    DWORD PTR [esi+ecx*8-0x7dce6777],cl
  4122f7:	jae    0x41233b
  4122f9:	adc    DWORD PTR [ebx+0x43],esi
  4122fc:	scas   al,BYTE PTR es:[edi]
  4122fd:	mov    cl,0xa9
  4122ff:	mov    esi,0x161272a0
  412304:	imul   eax,DWORD PTR [ebp+0x58],0x2
  412308:	in     eax,dx
  412309:	push   0x68
  41230b:	inc    esp
  41230c:	out    0xff,eax
  41230e:	dec    esp
  41230f:	pop    es
  412310:	or     BYTE PTR [esi+0x32],ah
  412313:	fst    QWORD PTR [edx+eiz*2+0x31]
  412317:	cdq    
  412318:	mov    BYTE PTR [ebx+0x113b9da0],bl
  41231e:	ds pop esi
  412320:	test   BYTE PTR [ebx-0x1f0731f6],0x10
  412327:	mov    esp,0x76f31fa8
  41232c:	div    al
  41232e:	lods   al,BYTE PTR ds:[esi]
  41232f:	push   ss
  412330:	mov    ebx,edi
  412332:	out    0x69,eax
  412334:	adc    al,0xb2
  412336:	push   eax
  412337:	(bad)  
  412338:	outs   dx,BYTE PTR ds:[esi]
  412339:	das    
  41233a:	out    0x4a,eax
  41233c:	rcl    DWORD PTR [ecx],cl
  41233e:	retf   0x9d0d
  412341:	lahf   
  412342:	xor    BYTE PTR [ecx-0x68],ah
  412345:	or     DWORD PTR [esi],0x18
  412348:	out    dx,eax
  412349:	and    BYTE PTR [esi+edi*4],bh
  41234c:	dec    edx
  41234d:	pop    eax
  41234e:	test   eax,0x12488be0
  412353:	pushf  
  412354:	pop    ds
  412355:	cmp    eax,0xad1bde34
  41235a:	ds push esp
  41235c:	mov    ebx,0xc40c2e72
  412361:	adc    ch,BYTE PTR [edi]
  412363:	imul   esi,DWORD PTR [esi],0xf91957d1
  412369:	ins    DWORD PTR es:[edi],dx
  41236a:	pop    esi
  41236b:	and    edi,0x54
  41236e:	call   FWORD PTR [edx*4+0x6fa63d5c]
  412375:	lahf   
  412376:	bound  edi,QWORD PTR [ecx+0x2b589c33]
  41237c:	dec    ebx
  41237d:	pop    esi
  41237e:	cli    
  41237f:	or     eax,0xeee829ce
  412384:	inc    ecx
  412385:	jmp    0xe1e9:0x9d778bcd
  41238c:	pop    edx
  41238d:	mul    DWORD PTR [edx+0x7]
  412390:	sbb    eax,0x3e24734
  412395:	xchg   DWORD PTR [ebp+0x3f],ecx
  412398:	mov    BYTE PTR [ebx+0x5815182f],bl
  41239e:	out    dx,eax
  41239f:	lahf   
  4123a0:	test   BYTE PTR [edi-0xb],dl
  4123a3:	pop    edi
  4123a4:	mov    WORD PTR [esi],?
  4123a6:	popf   
  4123a7:	or     al,0xf7
  4123a9:	(bad)  
  4123aa:	and    BYTE PTR [ebp-0x2070d7bb],bh
  4123b0:	stos   DWORD PTR es:[edi],eax
  4123b1:	js     0x412413
  4123b3:	(bad)  
  4123b4:	push   cs
  4123b5:	imul   esi,DWORD PTR [ebp-0x4afb1b5d],0x305e8c57
  4123bf:	sub    BYTE PTR [ecx],ch
  4123c1:	jecxz  0x4123e5
  4123c3:	(bad)  
  4123c4:	nop
  4123c5:	add    esp,eax
  4123c7:	scas   eax,DWORD PTR es:[edi]
  4123c8:	lahf   
  4123c9:	pop    edi
  4123ca:	cmp    al,0xf0
  4123cc:	push   esi
  4123cd:	mov    ch,0x51
  4123cf:	aas    
  4123d0:	adc    ebp,esi
  4123d2:	imul   ebx,eax,0xc739e5a6
  4123d8:	cwde   
  4123d9:	into   
  4123da:	or     eax,0x10e3f38d
  4123df:	sar    bh,cl
  4123e1:	jo     0x412396
  4123e3:	lahf   
  4123e4:	cmp    dh,bh
  4123e6:	ds mov eax,0x2c3f2519
  4123ec:	mov    ebx,0x372f811e
  4123f1:	mov    cl,0x5e
  4123f3:	adc    dh,BYTE PTR [esi]
  4123f5:	fs test ebp,ecx
  4123f8:	in     eax,0x42
  4123fa:	cmp    BYTE PTR [ecx-0x19],dl
  4123fd:	rol    BYTE PTR [edx],0x15
  412400:	cmp    eax,DWORD PTR [ebx-0x21]
  412403:	das    
  412404:	dec    edi
  412405:	sub    DWORD PTR [ebx],ecx
  412407:	mov    dl,0x85
  412409:	push   ebp
  41240a:	and    BYTE PTR ds:0x2e7e12b8,bl
  412410:	mov    al,0x20
  412412:	and    ecx,ecx
  412414:	mov    bl,0xa0
  412416:	test   al,0x69
  412418:	retf   0x94fc
  41241b:	aam    0x3a
  41241d:	clc    
  41241e:	add    al,0xbf
  412420:	inc    ebp
  412421:	jae    0x412444
  412423:	xchg   ebp,eax
  412424:	mov    dh,0xae
  412426:	adc    ch,ah
  412428:	adc    ah,BYTE PTR [edx+0x18]
  41242b:	jl     0x41242c
  41242d:	retf   
  41242e:	test   DWORD PTR [ebp+edx*8-0x3f20038f],ebx
  412435:	pop    eax
  412436:	sbb    esi,eax
  412438:	xor    ebp,ecx
  41243a:	dec    eax
  41243b:	fisubr WORD PTR [ebp-0x68]
  41243e:	mov    ecx,0xa62be209
  412443:	rol    DWORD PTR [ebx-0x79],1
  412446:	dec    esp
  412447:	lea    ebx,[edx+0x40157cb0]
  41244d:	jle    0x4123ff
  41244f:	adc    BYTE PTR [ebx],bh
  412451:	inc    ebp
  412452:	adc    bh,BYTE PTR [esi-0x36d44098]
  412458:	cmp    edi,DWORD PTR [eax-0x58]
  41245b:	lods   al,BYTE PTR ds:[esi]
  41245c:	fs push 0x6b
  41245f:	push   cs
  412460:	pop    ss
  412461:	or     eax,0x7b86fe54
  412466:	daa    
  412467:	pushf  
  412468:	aaa    
  412469:	pushf  
  41246a:	mov    WORD PTR [edx+0x156fc909],es
  412470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412471:	cs out 0xc4,al
  412474:	sbb    eax,0x355d365d
  412479:	addr16 push esi
  41247b:	test   al,bh
  41247d:	dec    ebp
  41247e:	es ret 
  412480:	mov    ch,0xcc
  412482:	mov    al,ds:0xf75b1e2a
  412487:	(bad)  
  412488:	repnz add esp,DWORD PTR [esi]
  41248b:	mov    eax,0x4f616a49
  412490:	jg     0x4124b4
  412492:	dec    ecx
  412493:	out    dx,al
  412494:	dec    ebp
  412495:	and    BYTE PTR [ebx],0x8a
  412498:	pop    ebx
  412499:	out    dx,al
  41249a:	aaa    
  41249b:	or     eax,0x73bc5ef3
  4124a0:	aas    
  4124a1:	xchg   edx,eax
  4124a2:	(bad)
  4124a7:	mov    ds:0xe5e7af9d,al
  4124ac:	in     eax,dx
  4124ad:	jecxz  0x4124c8
  4124af:	push   eax
  4124b0:	sti    
  4124b1:	or     BYTE PTR [edi-0x17],dl
  4124b4:	rcl    BYTE PTR es:[eax],1
  4124b7:	ficomp DWORD PTR [edx]
  4124b9:	retf   0xe888
  4124bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124bd:	out    dx,eax
  4124be:	mov    eax,ds:0x2f9c292f
  4124c3:	adc    eax,DWORD PTR [edx]
  4124c5:	imul   ebx,DWORD PTR [edi],0xb76e04d6
  4124cb:	jmp    0xfb28:0x76682485
  4124d2:	sub    ch,BYTE PTR [eax+0x381c6a57]
  4124d8:	inc    esi
  4124d9:	outs   dx,BYTE PTR ds:[esi]
  4124da:	inc    esi
  4124db:	push   ss
  4124dc:	neg    ecx
  4124de:	adc    al,0x9f
  4124e0:	adc    ch,BYTE PTR [ecx-0x14]
  4124e3:	adc    al,0x4f
  4124e5:	inc    esi
  4124e6:	(bad)  
  4124e8:	rcr    DWORD PTR [esi+ecx*4+0x3e],cl
  4124ec:	mov    ecx,0xfe05bd03
  4124f1:	sahf   
  4124f2:	stos   DWORD PTR es:[edi],eax
  4124f3:	es cdq 
  4124f5:	jns    0x4124fd
  4124f7:	and    cl,BYTE PTR [eax+0x3a]
  4124fa:	and    ecx,DWORD PTR [ebx+0x5ab66154]
  412500:	test   BYTE PTR [ebx],al
  412502:	bound  eax,QWORD PTR [ebp+0x11a660c3]
  412508:	jae    0x4124c7
  41250a:	jb     0x41252c
  41250c:	xor    edx,DWORD PTR [ebp-0x19]
  41250f:	retf   0xe1f7
  412512:	xor    ecx,DWORD PTR [esi-0x51e1851b]
  412518:	push   0xac4fc9c2
  41251d:	jno    0x412504
  41251f:	imul   edi,DWORD PTR [ecx-0x19d2c9f8],0xffffffa7
  412526:	mov    ch,0xb
  412528:	pop    ds
  412529:	xchg   ebp,eax
  41252a:	inc    esi
  41252b:	xor    edi,DWORD PTR [ecx-0x6699eb69]
  412531:	ret    0x2c54
  412534:	jne    0x412589
  412536:	mov    ecx,0x89be8f0e
  41253b:	dec    edx
  41253c:	loope  0x412535
  41253e:	jo     0x4124c5
  412540:	fistp  DWORD PTR [esp+eax*1-0x3ffd9689]
  412547:	das    
  412548:	push   ebp
  412549:	scas   al,BYTE PTR es:[edi]
  41254a:	push   0x9c7c0c70
  41254f:	ins    BYTE PTR es:[edi],dx
  412550:	pop    ebp
  412551:	sub    DWORD PTR [edx+0x55],edx
  412554:	(bad)  
  412555:	jnp    0x412527
  412557:	jae    0x412522
  412559:	jns    0x4125b5
  41255b:	int    0x18
  41255d:	scas   eax,DWORD PTR es:[edi]
  41255e:	lds    ebp,FWORD PTR [eax]
  412560:	and    DWORD PTR [eax-0x98b3fa8],ecx
  412566:	leave  
  412567:	and    eax,ebx
  412569:	or     DWORD PTR es:[ebp+0x288f9902],ebp
  412570:	sub    esp,edx
  412572:	jno    0x412570
  412574:	sar    BYTE PTR [esi+0x4b],0x33
  412578:	push   ebp
  412579:	cmp    ecx,eax
  41257b:	jge    0x4125ee
  41257d:	test   eax,0xc070ec32
  412582:	lods   eax,DWORD PTR ds:[esi]
  412583:	jmp    0xaf0d:0x174f1083
  41258a:	xor    al,0x33
  41258c:	or     DWORD PTR [ecx-0x64540e2d],ebx
  412592:	ins    DWORD PTR es:[edi],dx
  412593:	adc    eax,0x2b7bc625
  412598:	pop    ebx
  412599:	mov    eax,ds:0x9a6e293f
  41259e:	call   0x26671550
  4125a3:	call   0x823ee67d
  4125a8:	mov    al,0x33
  4125aa:	xchg   ebp,eax
  4125ab:	xchg   DWORD PTR [ecx+0x2fb70779],esp
  4125b1:	inc    edx
  4125b2:	xchg   DWORD PTR [ebx+esi*4],esi
  4125b5:	push   ebx
  4125b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125b7:	popf   
  4125b8:	push   eax
  4125b9:	leave  
  4125ba:	jo     0x41256a
  4125bc:	pusha  
  4125bd:	xor    al,0x9c
  4125bf:	mov    dh,0x7d
  4125c1:	scas   al,BYTE PTR es:[edi]
  4125c2:	mov    ebx,0xb3ddfc34
  4125c7:	or     esp,eax
  4125c9:	push   ds
  4125ca:	fdivr  DWORD PTR [edx-0x6e2f75bf]
  4125d0:	mov    cl,dh
  4125d2:	fcom   DWORD PTR [esi-0x3d1fb91f]
  4125d8:	add    ah,BYTE PTR [ebx]
  4125da:	jge    0x4125bc
  4125dc:	and    ah,BYTE PTR [ecx]
  4125de:	sbb    dh,BYTE PTR [ebx-0x3b93527f]
  4125e4:	rcl    ebx,cl
  4125e6:	(bad)  
  4125e7:	in     al,dx
  4125e8:	je     0x4125b9
  4125ea:	xchg   edi,eax
  4125eb:	dec    esi
  4125ec:	jl     0x41259f
  4125ee:	fucom  st(3)
  4125f0:	inc    edi
  4125f1:	data16 jge 0x4125d3
  4125f4:	mov    bh,0x2b
  4125f6:	fisubr DWORD PTR [ecx+0x3ec50ce6]
  4125fc:	rcr    DWORD PTR es:[ebp+0x31b9b78f],cl
  412603:	mov    eax,0x99bdd8ef
  412608:	inc    BYTE PTR [eax-0x62]
  41260b:	adc    edx,DWORD PTR [edi]
  41260d:	add    BYTE PTR [edi-0x42de1331],ch
  412613:	cs pop ds
  412615:	pushf  
  412616:	mov    eax,0xac560e68
  41261b:	pop    esp
  41261c:	in     al,dx
  41261d:	sub    eax,0xdc06e471
  412622:	or     bh,BYTE PTR [edx]
  412624:	aad    0xcc
  412626:	xlat   BYTE PTR ds:[ebx]
  412627:	jno    0x412659
  412629:	test   DWORD PTR [edi-0x38db8dce],edi
  41262f:	idiv   DWORD PTR [eax-0x32]
  412632:	sbb    ebx,DWORD PTR [edx*8+0x4f903857]
  412639:	dec    ecx
  41263a:	retf   0x991c
  41263d:	loopne 0x412689
  41263f:	jmp    0xf0f3:0xe48f8f21
  412646:	clc    
  412647:	clc    
  412648:	push   ds
  412649:	test   eax,0x688609a7
  41264e:	or     BYTE PTR [edx*8+0x3d9b8914],dh
  412655:	in     eax,dx
  412656:	(bad)  
  412658:	or     al,0xef
  41265a:	rcr    BYTE PTR [esi*1-0x1c356066],1
  412661:	push   esi
  412662:	enter  0xe676,0x30
  412666:	jmp    0x93b81cf5
  41266b:	test   BYTE PTR [edi+0x77b427f3],al
  412671:	call   0x5fdd:0x34251158
  412678:	ss pop esp
  41267a:	jae    0x412608
  41267c:	add    edi,esp
  41267e:	retf   
  41267f:	xor    eax,0x18189548
  412684:	stos   BYTE PTR es:[edi],al
  412685:	lods   al,BYTE PTR ds:[esi]
  412686:	jl     0x41267e
  412688:	test   ecx,ecx
  41268a:	cwde   
  41268b:	push   0x67dc0467
  412690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412691:	adc    cl,BYTE PTR [eax+0x0]
  412694:	cmp    eax,0xc1e75389
  412699:	or     eax,0x816e7e48
  41269e:	mov    es,WORD PTR [edi-0xa]
  4126a1:	scas   eax,DWORD PTR es:[edi]
  4126a2:	dec    esp
  4126a3:	push   ecx
  4126a4:	push   esp
  4126a5:	dec    edx
  4126a6:	ss push esi
  4126a8:	ja     0x41271e
  4126aa:	pop    edi
  4126ab:	inc    edx
  4126ac:	loopne 0x412654
  4126ae:	fsubrp st(1),st
  4126b0:	pop    eax
  4126b1:	pop    eax
  4126b2:	pop    ebp
  4126b3:	mov    dl,0x73
  4126b5:	mov    BYTE PTR [edx+edx*2+0x7e],0xd9
  4126ba:	mov    DWORD PTR [ebx],ecx
  4126bc:	pop    es
  4126bd:	fsub   QWORD PTR [edi]
  4126bf:	cmp    DWORD PTR [esi+0x5d1bc06f],esi
  4126c5:	jmp    0x94c0a253
  4126ca:	mov    ch,0xde
  4126cc:	les    edx,FWORD PTR [esp+edi*8+0x21]
  4126d0:	sub    bl,ch
  4126d2:	popa   
  4126d3:	daa    
  4126d4:	enter  0xbc37,0x74
  4126d8:	push   ds
  4126d9:	(bad)  
  4126da:	fisttp WORD PTR [eax+0x1e9a5955]
  4126e0:	mov    edx,0xce15efe4
  4126e5:	sub    edx,ebp
  4126e7:	gs mov dl,0xf2
  4126ea:	call   0xef5a:0x499bf2c
  4126f1:	pop    ebp
  4126f2:	mov    dl,0x99
  4126f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126f5:	jns    0x41275c
  4126f7:	or     bl,0x3f
  4126fa:	popaw  
  4126fc:	ret    0x471a
  4126ff:	in     eax,dx
  412700:	or     BYTE PTR [ebx-0x5d032f37],bh
  412706:	out    dx,al
  412707:	adc    al,0x54
  412709:	or     al,0x74
  41270b:	sbb    BYTE PTR [edx-0x5b],0xa5
  41270f:	dec    eax
  412710:	dec    ecx
  412711:	data16 and al,0x92
  412714:	and    al,0xdf
  412716:	mov    edx,0xce6e2511
  41271b:	(bad)  [esi-0x22]
  41271e:	retf   
  41271f:	int    0x0
  412721:	dec    esi
  412722:	adc    ecx,DWORD PTR [ecx+ecx*2+0x383fed18]
  412729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41272a:	test   eax,0xaf730a07
  41272f:	sub    al,0xc2
  412731:	sbb    al,0xa8
  412733:	aam    0x9e
  412735:	cs pop eax
  412737:	xor    bh,bh
  412739:	int    0x98
  41273b:	mov    ecx,0xb3b04038
  412740:	neg    BYTE PTR [ebx+0x3a32291e]
  412746:	push   esp
  412747:	or     ecx,DWORD PTR [ecx+0x62]
  41274a:	call   FWORD PTR [esi]
  41274c:	xor    eax,DWORD PTR [esi-0x3880610f]
  412752:	fistp  DWORD PTR [ecx+0x6a]
  412755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412757:	and    bh,BYTE PTR [edi+0x16]
  41275a:	mov    eax,ds:0x6002d7cc
  41275f:	jns    0x41278d
  412761:	push   edi
  412762:	mov    edi,0x52c25e3b
  412767:	les    ecx,FWORD PTR [edi-0x3b]
  41276a:	cmp    DWORD PTR [esi+0x4],0xfbc1f8c9
  412771:	adc    DWORD PTR [ebp+0x4606de03],esi
  412777:	jbe    0x41275b
  412779:	mov    ebp,0xc3e5f6cc
  41277e:	jmp    0xb70b:0xc41c65e0
  412785:	(bad)  
  412786:	jmp    FWORD PTR [eax]
  412788:	jnp    0x4127e8
  41278a:	ins    DWORD PTR es:[edi],dx
  41278b:	aam    0x37
  41278d:	jge    0x412772
  41278f:	call   0xa71490c7
  412794:	pop    edi
  412795:	lods   al,BYTE PTR ds:[esi]
  412796:	jno    0x412761
  412798:	jecxz  0x4127b3
  41279a:	out    0x73,eax
  41279c:	mov    ebx,0x36bc7bb5
  4127a1:	sahf   
  4127a2:	push   ss
  4127a3:	xchg   BYTE PTR [esi],al
  4127a5:	xor    ecx,DWORD PTR [edi+0x1a]
  4127a8:	mov    esi,0x1a9c2a58
  4127ad:	lock and eax,ecx
  4127b0:	and    ebp,DWORD PTR ds:0x3d358b99
  4127b6:	or     edx,DWORD PTR [edx+0x4f]
  4127b9:	rsqrtps xmm3,XMMWORD PTR [ecx-0x24805689]
  4127c0:	mov    ebx,0xfe1199c3
  4127c5:	fiadd  WORD PTR [edi]
  4127c7:	pop    ds
  4127c8:	or     eax,DWORD PTR [edi+0x4942444c]
  4127ce:	in     eax,dx
  4127cf:	xor    edi,DWORD PTR [edi+0x22]
  4127d2:	xor    eax,DWORD PTR [edx+0x28a4e0a]
  4127d8:	xor    BYTE PTR [eax-0x615b9c46],ah
  4127de:	adc    al,0xe0
  4127e0:	aam    0x7
  4127e2:	xchg   ebp,eax
  4127e3:	sub    esi,ebx
  4127e5:	mov    ecx,0x125757c
  4127ea:	dec    eax
  4127eb:	mov    al,ds:0x9870b8c0
  4127f0:	push   ebp
  4127f1:	stc    
  4127f2:	loop   0x4127e1
  4127f4:	push   esi
  4127f5:	popf   
  4127f6:	mov    esp,0xf59d00b1
  4127fb:	sub    eax,0x881ed70f
  412800:	cmp    BYTE PTR [eax],0xca
  412803:	and    BYTE PTR [ebp+0x32],0xcb
  412807:	call   0x2c63:0x38ba215a
  41280e:	xchg   ecx,eax
  41280f:	push   ebx
  412810:	clc    
  412811:	(bad)  
  412812:	(bad)  
  412814:	ret    
  412815:	add    eax,0x53218fbc
  41281a:	mov    edi,0x75bd04c1
  41281f:	lahf   
  412820:	cmp    BYTE PTR [edi],cl
  412822:	inc    eax
  412823:	dec    dh
  412825:	mov    eax,ds:0xee27f1e0
  41282a:	lods   al,BYTE PTR ds:[esi]
  41282b:	clc    
  41282c:	test   DWORD PTR [ebx],ebx
  41282e:	retf   
  41282f:	out    0x9b,eax
  412831:	mov    esi,0xc531653b
  412836:	mov    dl,0x41
  412838:	cmp    eax,0xf551fecb
  41283d:	add    DWORD PTR [edx+0x12],eax
  412840:	js     0x4127f9
  412842:	loope  0x412824
  412844:	nop
  412845:	test   esp,esp
  412847:	jmp    0x412861
  412849:	loopne 0x4128b1
  41284b:	push   ss
  41284c:	mov    ebx,0xa0c98f82
  412851:	mov    ds:0x5187c716,eax
  412856:	sub    edi,ecx
  412858:	push   0x92dfd268
  41285d:	or     esp,DWORD PTR [ecx]
  41285f:	cld    
  412860:	fdiv   st,st(3)
  412862:	add    DWORD PTR [eax-0x53],esp
  412865:	test   al,0xae
  412867:	stc    
  412868:	repnz push ebx
  41286a:	ss cld 
  41286c:	or     cl,BYTE PTR [esi-0x6ff9dea3]
  412872:	adc    eax,0x6088379b
  412877:	pslld  mm1,QWORD PTR [ebp-0x48]
  41287b:	pop    ss
  41287c:	iret   
  41287d:	or     DWORD PTR [edx+ebp*8-0x1a],edx
  412881:	inc    ebx
  412882:	add    cl,BYTE PTR [eax+0x1f]
  412885:	pop    ss
  412886:	out    0xdc,al
  412888:	in     eax,0x5d
  41288a:	or     esp,0x3485f645
  412890:	in     al,0x20
  412892:	lods   eax,DWORD PTR cs:[esi]
  412894:	mov    edx,0xf3f40041
  412899:	jne    0x412906
  41289b:	xlat   BYTE PTR ds:[ebx]
  41289c:	scas   eax,DWORD PTR es:[edi]
  41289d:	pop    edi
  41289e:	cs dec esp
  4128a0:	xchg   ecx,eax
  4128a1:	push   edi
  4128a2:	cli    
  4128a3:	sbb    ebp,eax
  4128a5:	push   ecx
  4128a6:	pop    edi
  4128a7:	inc    esi
  4128a8:	repnz add eax,DWORD PTR [edi-0x36]
  4128ac:	add    BYTE PTR [ecx],al
  4128ae:	popf   
  4128af:	neg    BYTE PTR [edx-0x4b]
  4128b2:	and    al,0x50
  4128b4:	shl    BYTE PTR [ebx+0x5a55a9a5],0x33
  4128bb:	shl    esp,0x79
  4128be:	adc    BYTE PTR [eax+0x5f],ah
  4128c1:	push   ds
  4128c2:	fnsave [ecx-0x78622de]
  4128c8:	pop    esp
  4128c9:	sub    bh,ah
  4128cb:	ja     0x41290e
  4128cd:	les    eax,FWORD PTR [ebx-0x21]
  4128d0:	test   DWORD PTR [esi-0x4c90b031],0x32333d67
  4128da:	mov    ebx,0xf00001b0
  4128df:	div    BYTE PTR [eax]
  4128e1:	push   ds
  4128e2:	dec    ebx
  4128e3:	cwde   
  4128e4:	rcr    BYTE PTR [edi-0x545978ea],cl
  4128ea:	cmp    eax,0x24919934
  4128ef:	fwait
  4128f0:	xor    dl,bl
  4128f2:	adc    edx,ebx
  4128f4:	jp     0x412929
  4128f6:	repnz std 
  4128f8:	std    
  4128f9:	mov    cl,0x9c
  4128fb:	push   edx
  4128fc:	mov    dh,0x60
  4128fe:	pop    ds
  4128ff:	nop
  412900:	and    ecx,DWORD PTR [edi+0xe]
  412903:	xchg   DWORD PTR [esp+ebx*1-0x17],eax
  412907:	dec    esp
  412908:	data16 arpl WORD PTR [eax+eax*1],bp
  41290c:	jp     0x4128c5
  41290e:	cwde   
  41290f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412910:	repz lds ebp,FWORD PTR [ecx-0x3c037f09]
  412917:	jecxz  0x412909
  412919:	fisttp DWORD PTR [ebp+0x55848b7e]
  41291f:	sub    edx,DWORD PTR [eax]
  412921:	jo     0x412997
  412923:	adc    cl,bl
  412925:	xor    eax,0xcdb7ad06
  41292a:	mov    ecx,0x3458639
  41292f:	aas    
  412930:	cdq    
  412931:	retf   
  412932:	into   
  412933:	sbb    DWORD PTR [ebx+0x323fbef0],esi
  412939:	push   ebx
  41293a:	out    dx,al
  41293b:	xchg   esp,eax
  41293c:	or     esi,DWORD PTR [ebp-0x35bfcae6]
  412942:	repz pop DWORD PTR [eax-0x7942c075]
  412949:	rol    DWORD PTR [eax+0x34],cl
  41294c:	pop    ss
  41294d:	mov    ds:0x254b990e,al
  412952:	xor    eax,0x4b1f57c1
  412957:	sub    eax,ebx
  412959:	mov    edx,0xa4c4b969
  41295e:	into   
  41295f:	inc    edi
  412960:	sub    dl,BYTE PTR [ebx-0x17]
  412963:	push   edi
  412964:	in     eax,0x7f
  412966:	push   es
  412967:	cld    
  412968:	sbb    al,0xb4
  41296b:	xor    ebp,ebp
  41296d:	icebp  
  41296e:	ss ss dec ebp
  412971:	mov    ah,0x71
  412973:	jge    0x412939
  412975:	in     al,0x22
  412977:	out    0xdf,eax
  412979:	sub    BYTE PTR [ecx],bl
  41297b:	dec    esp
  41297c:	cwde   
  41297d:	rcl    edx,0xbb
  412980:	mov    bh,0xc
  412982:	xchg   edx,eax
  412983:	ins    BYTE PTR es:[edi],dx
  412984:	outs   dx,BYTE PTR ds:[esi]
  412985:	bnd jb 0x412915
  412988:	push   ebp
  412989:	mov    edx,0x493ab367
  41298e:	pop    ebp
  41298f:	jl     0x41293c
  412991:	int3   
  412992:	push   esi
  412993:	inc    ecx
  412994:	sub    DWORD PTR [edx-0x3b],0xffffffb7
  412998:	dec    ebx
  412999:	jmp    0x412981
  41299b:	int3   
  41299c:	jae    0x412962
  41299e:	aad    0x2f
  4129a0:	adc    al,0x1d
  4129a2:	jnp    0x41297f
  4129a4:	ja     0x4129a5
  4129a6:	push   0xe864d803
  4129ab:	pushf  
  4129ac:	repnz push cs
  4129ae:	aam    0xf7
  4129b0:	or     al,0x99
  4129b2:	fisub  DWORD PTR [edi+0x78]
  4129b5:	xor    DWORD PTR [ecx-0x58e7dcfa],eax
  4129bb:	pop    ebp
  4129bc:	mov    ch,ah
  4129be:	fmul   DWORD PTR [eax+ecx*2-0x2]
  4129c2:	repz fs inc ecx
  4129c5:	mov    ebp,edx
  4129c7:	nop
  4129c8:	dec    bl
  4129ca:	pop    esp
  4129cb:	hlt    
  4129cc:	sub    DWORD PTR [eax+ebx*8],ecx
  4129cf:	mov    al,ds:0x4798d977
  4129d4:	test   BYTE PTR [edi+0x4],ch
  4129d7:	push   ds
  4129d8:	jbe    0x41297e
  4129da:	int3   
  4129db:	fst    DWORD PTR [eax+0x3b]
  4129de:	test   BYTE PTR [ebx],dh
  4129e0:	loopne 0x4129b9
  4129e2:	icebp  
  4129e3:	push   0x63e09feb
  4129e8:	lahf   
  4129e9:	mov    ds:0x271ec9ec,al
  4129ee:	dec    ebp
  4129ef:	call   0x1a54580a
  4129f4:	adc    dl,ch
  4129f6:	dec    esp
  4129f7:	mov    cl,0x4c
  4129f9:	hlt    
  4129fa:	shl    DWORD PTR [eax+0x53],cl
  4129fd:	dec    edi
  4129fe:	(bad)  
  4129ff:	xor    eax,0xfb23e6ef
  412a04:	das    
  412a05:	scas   al,BYTE PTR es:[edi]
  412a06:	push   ds
  412a07:	sar    BYTE PTR [edi-0x2cc61e53],cl
  412a0d:	sub    BYTE PTR ds:0x86c0b5d8,cl
  412a13:	inc    edi
  412a14:	hlt    
  412a15:	or     BYTE PTR [ebp+0x3c],cl
  412a18:	loope  0x412a58
  412a1a:	lods   al,BYTE PTR ds:[esi]
  412a1b:	in     eax,dx
  412a1c:	lsl    ebx,WORD PTR [edx+0x6ecf5bad]
  412a23:	mov    ds:0xf0bc692a,eax
  412a28:	retf   
  412a29:	jp     0x412a9c
  412a2b:	pop    es
  412a2c:	pop    ebp
  412a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a2e:	loope  0x412a6d
  412a30:	out    dx,eax
  412a31:	call   0xe160:0xc5a5e035
  412a38:	xor    al,0x78
  412a3a:	xchg   edx,eax
  412a3b:	xor    eax,0x6e486547
  412a40:	push   ebx
  412a41:	push   0xaa4002bd
  412a46:	mov    edi,0xf0953403
  412a4b:	pop    ss
  412a4c:	pop    ebx
  412a4d:	addr16 cmc 
  412a4f:	adc    dl,BYTE PTR [esi]
  412a51:	scas   al,BYTE PTR es:[edi]
  412a52:	mov    al,0xb6
  412a54:	pop    esp
  412a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a56:	mov    bh,cl
  412a58:	pop    esi
  412a59:	add    eax,0xa75d466d
  412a5e:	add    BYTE PTR [edx],cl
  412a60:	push   ds
  412a61:	addr16 hlt 
  412a63:	lods   eax,DWORD PTR ds:[esi]
  412a64:	cmp    edx,ebx
  412a66:	adc    al,0xdb
  412a68:	jns    0x412a76
  412a6a:	retf   0x1e04
  412a6d:	inc    eax
  412a6e:	loopne 0x412a64
  412a70:	add    ah,BYTE PTR [ebx+ebp*1-0x46]
  412a74:	lock iret 
  412a76:	retf   0x1879
  412a79:	xor    esp,esi
  412a7b:	sar    ah,1
  412a7d:	rcl    BYTE PTR [ebp+edx*2+0x73],cl
  412a81:	sbb    BYTE PTR [ecx+0x35],bl
  412a84:	ins    DWORD PTR es:[edi],dx
  412a85:	sbb    BYTE PTR [eax+0x75cb01e9],dl
  412a8b:	out    dx,eax
  412a8c:	inc    esi
  412a8d:	sub    ebp,0xffffffd3
  412a90:	dec    ebp
  412a91:	push   0xe86c2832
  412a96:	loopne 0x412aeb
  412a98:	mov    ebp,0xd1ad9d1f
  412a9d:	div    DWORD PTR [esp+eiz*4]
  412aa0:	xor    al,0xed
  412aa2:	or     ebp,ebp
  412aa4:	mov    ds:0x6a60e7ad,al
  412aa9:	xchg   esp,eax
  412aaa:	inc    edi
  412aab:	inc    ebp
  412aac:	and    DWORD PTR [esi+0x264b98b4],ecx
  412ab2:	sbb    DWORD PTR [ecx-0x42c04d6a],ebp
  412ab8:	mov    DWORD PTR [ebp-0x50],0x8ae044f2
  412abf:	jnp    0x412a94
  412ac1:	push   0xd2a07d5e
  412ac6:	and    DWORD PTR [edx-0x57],edi
  412ac9:	sbb    eax,0xdd42e91e
  412ace:	adc    ch,dh
  412ad0:	imul   edx,DWORD PTR [edx+eax*2-0x68],0x5cb48703
  412ad8:	mov    al,ds:0x503266f9
  412add:	xchg   ebp,eax
  412ade:	loopne 0x412aa1
  412ae0:	jmp    0x412af4
  412ae2:	jne    0x412b23
  412ae4:	shl    bh,0xa1
  412ae7:	push   ecx
  412ae8:	cs sub eax,0xd4315e81
  412aee:	add    ecx,esi
  412af0:	shl    DWORD PTR [ebx+0x3e],1
  412af3:	(bad)  [ebx+0x4f]
  412af6:	push   ebx
  412af7:	gs clc 
  412af9:	push   ecx
  412afa:	add    eax,0xe9cb3c98
  412aff:	add    edi,DWORD PTR [edi-0x52]
  412b02:	aam    0x42
  412b04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b05:	pop    ds
  412b06:	pop    eax
  412b07:	mov    ch,cl
  412b09:	inc    ebp
  412b0a:	inc    ebp
  412b0b:	idiv   BYTE PTR [edx-0x2eae5c9d]
  412b11:	arpl   WORD PTR [ebp-0x6e],sp
  412b14:	in     al,0xda
  412b16:	scas   eax,DWORD PTR es:[edi]
  412b17:	inc    esp
  412b18:	push   ss
  412b19:	pop    es
  412b1a:	shr    DWORD PTR [ebx],0xf
  412b1d:	out    dx,al
  412b1e:	(bad)  
  412b1f:	loope  0x412ba0
  412b21:	jae    0x412b56
  412b23:	cmp    DWORD PTR [ebx],eax
  412b25:	and    DWORD PTR [edx-0x4a1d7165],ecx
  412b2b:	fwait
  412b2c:	push   0x49360e07
  412b31:	dec    edi
  412b32:	push   edi
  412b33:	imul   esi,DWORD PTR [esi],0x67
  412b36:	out    0x3e,al
  412b38:	jp     0x412b74
  412b3a:	into   
  412b3b:	je     0x412b96
  412b3d:	mov    esi,0xd93df310
  412b42:	sbb    DWORD PTR [edi-0x409de675],edi
  412b48:	in     al,dx
  412b49:	or     bh,bh
  412b4b:	cli    
  412b4c:	test   ah,ah
  412b4e:	aaa    
  412b4f:	sbb    bl,BYTE PTR fs:[esi+0x13a7361c]
  412b56:	daa    
  412b57:	lds    edx,FWORD PTR [edi*8-0x305ec9d7]
  412b5e:	dec    esi
  412b5f:	(bad)  
  412b60:	pusha  
  412b61:	jb     0x412b3b
  412b63:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b65:	xchg   ebp,eax
  412b66:	push   ebp
  412b67:	and    bl,dh
  412b69:	dec    esp
  412b6a:	sub    eax,0x1607adbd
  412b6f:	les    ebp,FWORD PTR [eax]
  412b71:	fnstenv [edx+eiz*8-0x58cb7c51]
  412b78:	lods   eax,DWORD PTR ds:[esi]
  412b79:	loope  0x412b68
  412b7b:	es out 0x11,eax
  412b7e:	xchg   edi,eax
  412b7f:	out    dx,al
  412b80:	cmp    esi,DWORD PTR es:[esi]
  412b83:	xchg   BYTE PTR [eax],cl
  412b85:	repnz lock lock xor al,0x35
  412b8a:	(bad)  
  412b8b:	push   eax
  412b8c:	adc    al,0xd
  412b8e:	cdq    
  412b8f:	(bad)  
  412b90:	hlt    
  412b91:	test   DWORD PTR [esi-0x3763d470],ecx
  412b97:	out    0x41,eax
  412b99:	inc    edi
  412b9a:	and    al,0x4a
  412b9c:	imul   ebx,DWORD PTR [ebx],0x46293533
  412ba2:	stos   BYTE PTR es:[edi],al
  412ba3:	xor    ebp,edx
  412ba5:	inc    ebx
  412ba6:	jae    0x412bbe
  412ba8:	xchg   edi,eax
  412ba9:	mov    eax,0xd074e867
  412bae:	sub    eax,0x70722e89
  412bb3:	mov    edx,0xe95b8d01
  412bb9:	cwde   
  412bba:	pop    esp
  412bbb:	inc    esp
  412bbc:	sbb    eax,0xb6a2f046
  412bc1:	xchg   BYTE PTR [esi+0x4c],ch
  412bc4:	(bad)  
  412bc6:	and    eax,DWORD PTR [edx-0x1c5d04ef]
  412bcc:	jge    0x412b56
  412bce:	sbb    DWORD PTR [edi],edi
  412bd0:	push   ebx
  412bd1:	nop
  412bd2:	adc    BYTE PTR [eax],ah
  412bd4:	pop    ds
  412bd5:	sahf   
  412bd6:	and    DWORD PTR [eax+eax*2-0x72],edx
  412bda:	fisubr WORD PTR [ecx+ebp*2-0x646a1a96]
  412be1:	adc    al,0x59
  412be3:	sbb    DWORD PTR [esi+0x2e],ebp
  412be6:	mov    ah,0x4d
  412be8:	cwde   
  412be9:	loope  0x412c58
  412beb:	mov    WORD PTR [ebx+0xb],?
  412bee:	fld    TBYTE PTR [ebx-0x2c]
  412bf1:	mov    bl,0x17
  412bf3:	push   ss
  412bf4:	les    ebx,FWORD PTR [edi+0x47f38844]
  412bfa:	sbb    cl,dh
  412bfc:	mov    dl,al
  412bfe:	xchg   ebx,eax
  412bff:	and    ah,BYTE PTR [ebx-0x24]
  412c02:	mov    ds:0x1e179163,al
  412c07:	pop    es
  412c08:	dec    ebp
  412c09:	stos   DWORD PTR es:[edi],eax
  412c0a:	call   0x26c9:0xba8eabf9
  412c11:	jp     0x412c77
  412c13:	mov    edi,0x60abd4f4
  412c18:	pop    edi
  412c19:	jno    0x412c6c
  412c1b:	inc    edx
  412c1c:	sahf   
  412c1d:	in     eax,0x3f
  412c1f:	sub    BYTE PTR [edx-0x75],dl
  412c22:	rcl    DWORD PTR [esi+0x75],cl
  412c25:	sub    esp,esi
  412c27:	pop    esi
  412c28:	jbe    0x412c25
  412c2a:	jmp    0x46f3283c
  412c2f:	pop    es
  412c30:	nop
  412c31:	gs jl  0x412bfc
  412c34:	cwde   
  412c35:	add    DWORD PTR [eax-0x49],0x88553e7a
  412c3c:	arpl   bp,dx
  412c3e:	sub    edx,esi
  412c40:	gs enter 0x8275,0x91
  412c45:	mov    ds:0x50fe8e1c,al
  412c4a:	or     edi,DWORD PTR [ecx+0x5d]
  412c4d:	inc    esi
  412c4e:	or     al,BYTE PTR [esi-0x554feb22]
  412c54:	mov    edx,?
  412c56:	dec    edi
  412c57:	push   ss
  412c58:	jno    0x412ccc
  412c5a:	pop    edi
  412c5b:	dec    ebx
  412c5c:	push   0x720729a2
  412c61:	ds aaa 
  412c63:	enter  0xc5a8,0xff
  412c67:	inc    eax
  412c68:	sub    ecx,DWORD PTR [eax]
  412c6a:	and    al,0xeb
  412c6c:	rcl    BYTE PTR [ecx+0x75],0xe
  412c70:	adc    BYTE PTR [ebp+0x4],al
  412c73:	jg     0x412cee
  412c75:	ficomp DWORD PTR [ecx+0x24848760]
  412c7b:	rcl    dh,0xa9
  412c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c7f:	sbb    eax,0x3b0dca3
  412c84:	push   esi
  412c85:	mov    ebx,0x7a0d1365
  412c8a:	jge    0x412c72
  412c8c:	pusha  
  412c8d:	pop    ebp
  412c8e:	mov    esi,edx
  412c90:	xlat   BYTE PTR ds:[ebx]
  412c91:	xchg   bh,dl
  412c93:	jle    0x412c27
  412c95:	adc    bl,BYTE PTR [edx+0x4f593327]
  412c9b:	dec    ecx
  412c9c:	sbb    al,al
  412c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c9f:	adc    dl,cl
  412ca1:	cdq    
  412ca2:	xchg   esi,eax
  412ca3:	adc    dh,dl
  412ca5:	in     al,dx
  412ca6:	imul   eax,DWORD PTR [edi],0x95507fd9
  412cac:	jg     0x412c8e
  412cae:	and    DWORD PTR [ebx-0x61caf67c],eax
  412cb4:	aad    0xd5
  412cb6:	mov    edx,0x20766924
  412cbb:	hlt    
  412cbc:	jge    0x412d32
  412cbe:	out    dx,eax
  412cbf:	adc    eax,0x52cbf9df
  412cc4:	cmp    dh,cl
  412cc6:	pop    ebp
  412cc7:	lock jmp 0x412cad
  412cca:	cli    
  412ccb:	cmp    DWORD PTR [ecx+0x19994b8d],edx
  412cd1:	add    eax,0xe0685d6e
  412cd6:	jg     0x412c8d
  412cd8:	sbb    DWORD PTR [edi-0x5724e2e5],0xfffffff9
  412cdf:	das    
  412ce0:	fs jo  0x412d1c
  412ce3:	leave  
  412ce4:	arpl   WORD PTR [edx],bp
  412ce6:	push   0x6b
  412ce8:	stos   BYTE PTR es:[edi],al
  412ce9:	ins    DWORD PTR es:[edi],dx
  412cea:	or     eax,DWORD PTR [edx]
  412cec:	cmp    al,BYTE PTR [ebp-0x20]
  412cef:	std    
  412cf0:	mov    ebp,0x2365f663
  412cf5:	retf   0xb8cc
  412cf8:	or     BYTE PTR [ebx-0x76],al
  412cfb:	fnstcw WORD PTR [ecx]
  412cfd:	fisub  DWORD PTR [ecx]
  412cff:	pop    ds
  412d00:	stos   DWORD PTR es:[edi],eax
  412d01:	mov    al,ds:0xc380ca98
  412d06:	clc    
  412d07:	adc    al,0x9b
  412d09:	scas   eax,DWORD PTR es:[edi]
  412d0a:	ja     0x412c8f
  412d0c:	ja     0x412cb7
  412d0e:	xchg   esp,eax
  412d0f:	xchg   edx,eax
  412d10:	adc    bl,BYTE PTR [ebx+0x6b]
  412d13:	(bad)
  412d17:	mov    bl,BYTE PTR [eax-0x6532854a]
  412d1d:	add    esi,eax
  412d1f:	jne    0x412d7a
  412d21:	rcr    BYTE PTR es:[edi+edx*4-0x38f9584a],1
  412d29:	fcomp  DWORD PTR [esi-0x17]
  412d2c:	cmp    dh,BYTE PTR [esi]
  412d2e:	fild   QWORD PTR [esi]
  412d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d31:	cmp    BYTE PTR [edi],0x98
  412d34:	cmp    edx,eax
  412d36:	out    0xd6,al
  412d38:	pop    ds
  412d39:	add    ah,bl
  412d3b:	imul   esi,ebp,0xffffff86
  412d3e:	jne    0x412dab
  412d40:	jle    0x412da4
  412d42:	cmp    al,0xda
  412d44:	adc    esp,esp
  412d46:	push   esi
  412d47:	sbb    al,0xad
  412d49:	bound  ecx,QWORD PTR [ebp*4+0x30a729]
  412d50:	fdiv   st,st(2)
  412d52:	inc    edx
  412d53:	xchg   ebx,eax
  412d54:	fcomp  DWORD PTR ds:0xce1810e4
  412d5a:	xor    al,cl
  412d5c:	scas   al,BYTE PTR es:[edi]
  412d5d:	into   
  412d5e:	sahf   
  412d5f:	pop    esi
  412d60:	cmp    esi,DWORD PTR [ecx-0x60]
  412d63:	mov    ch,0x27
  412d65:	dec    esp
  412d66:	inc    ebx
  412d67:	stos   DWORD PTR es:[edi],eax
  412d68:	retf   0x1f1a
  412d6b:	push   es
  412d6c:	dec    ebp
  412d6d:	out    0xbc,al
  412d6f:	lock out dx,al
  412d71:	sbb    dh,BYTE PTR [ebx+0x63]
  412d74:	jo     0x412d5b
  412d76:	imul   edi,DWORD PTR [eax],0x16b3e1b
  412d7c:	iret   
  412d7d:	mov    ecx,0x27d8c3f9
  412d82:	in     al,0x62
  412d84:	jp     0x412d5c
  412d86:	jl     0x412ded
  412d88:	add    esp,DWORD PTR [edx-0x1b4a7725]
  412d8e:	out    dx,al
  412d8f:	jmp    0x412d79
  412d91:	ret    0xab61
  412d94:	sub    eax,0x32c29f60
  412d99:	imul   edi,eax,0xffffffb3
  412d9c:	jno    0x412d5b
  412d9e:	ins    DWORD PTR es:[edi],dx
  412d9f:	das    
  412da0:	aad    0xa9
  412da2:	cdq    
  412da3:	mov    ecx,0xa2e9f893
  412da8:	push   es
  412da9:	add    BYTE PTR [eax],bl
  412dab:	sahf   
  412dac:	mov    es,WORD PTR [eax+0x7487dc8a]
  412db2:	and    DWORD PTR [ebx+0x5ff3d4aa],esi
  412db8:	xor    eax,0xf19a8636
  412dbd:	sbb    DWORD PTR [edx-0x408e990],edi
  412dc3:	pop    ebx
  412dc4:	(bad)  
  412dc5:	jns    0x412dcb
  412dc7:	mov    cs,WORD PTR [esp+eiz*4-0x1f]
  412dcb:	inc    edx
  412dcc:	aam    0x54
  412dce:	adc    ebp,ebx
  412dd0:	sub    ecx,DWORD PTR [ebx+0x195e50e4]
  412dd6:	(bad)  [esi+0x75]
  412dd9:	fwait
  412dda:	adc    ch,bh
  412ddc:	push   0x862d1fa
  412de1:	ins    DWORD PTR es:[edi],dx
  412de2:	push   ss
  412de3:	dec    esp
  412de4:	imul   edx,DWORD PTR [esi+eiz*4-0x5e],0x232c8b13
  412dec:	pop    ecx
  412ded:	push   eax
  412dee:	pop    esi
  412def:	mov    ecx,0x68b0ac6c
  412df4:	jle    0x412d88
  412df6:	dec    edx
  412df7:	pop    ebx
  412df8:	push   ebx
  412df9:	inc    eax
  412dfa:	fist   DWORD PTR [edi]
  412dfc:	lahf   
  412dfd:	iret   
  412dfe:	dec    ecx
  412dff:	add    al,0x5
  412e01:	sar    DWORD PTR [eax],cl
  412e03:	xor    eax,0xeb23ef08
  412e08:	dec    eax
  412e09:	jl     0x412d97
  412e0b:	mov    bl,0x1b
  412e0d:	aam    0xcb
  412e0f:	in     al,0xed
  412e11:	ss dec ebx
  412e13:	mov    al,ds:0x578c52ad
  412e18:	sbb    BYTE PTR [edx-0x58],0xf4
  412e1c:	cli    
  412e1d:	std    
  412e1e:	push   eax
  412e1f:	ficom  WORD PTR [ecx+0x2afcc33]
  412e25:	fistp  QWORD PTR [esi]
  412e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e28:	pop    esi
  412e29:	ja     0x412e2b
  412e2b:	dec    edi
  412e2c:	std    
  412e2d:	mov    ecx,0x7600d12
  412e32:	mov    eax,0x7b85f7a
  412e37:	inc    edi
  412e38:	sub    esi,edi
  412e3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e3b:	fwait
  412e3c:	jno    0x412e19
  412e3e:	jmp    0x412e7d
  412e40:	push   es
  412e41:	push   ecx
  412e42:	(bad)  
  412e44:	lahf   
  412e45:	cs sar esi,cl
  412e48:	xchg   esi,eax
  412e49:	push   es
  412e4a:	cmp    al,0x29
  412e4c:	ins    DWORD PTR es:[edi],dx
  412e4d:	loop   0x412e8c
  412e4f:	loopne 0x412eae
  412e51:	loop   0x412dfa
  412e53:	xor    DWORD PTR [edi],ebx
  412e55:	lods   al,BYTE PTR ds:[esi]
  412e56:	push   ss
  412e57:	repnz inc ebp
  412e59:	cli    
  412e5a:	(bad)  
  412e5b:	sbb    BYTE PTR [edx+eiz*2+0x52],ch
  412e5f:	fbld   TBYTE PTR [eax]
  412e61:	stos   BYTE PTR es:[edi],al
  412e62:	sub    cl,BYTE PTR [ecx]
  412e64:	addr16 push edi
  412e66:	js     0x412e2e
  412e68:	mov    edi,0x3b0a444c
  412e6d:	sbb    ebp,DWORD PTR [ebx]
  412e6f:	push   eax
  412e70:	iret   
  412e71:	inc    ecx
  412e72:	inc    esp
  412e73:	push   cs
  412e74:	mov    ecx,0x41529d71
  412e79:	fstp   QWORD PTR [esi+0x6a49e399]
  412e7f:	or     al,0x9c
  412e81:	repnz pop ebp
  412e83:	xchg   ecx,eax
  412e84:	rcl    DWORD PTR [ebx-0x23],1
  412e87:	xchg   esp,eax
  412e88:	jg     0x412e68
  412e8a:	(bad)  
  412e8b:	je     0x412ec9
  412e8d:	out    dx,al
  412e8e:	stc    
  412e8f:	mov    ebp,0xdf1c3262
  412e94:	fucomi st,st(4)
  412e96:	shr    DWORD PTR [edi],0xe
  412e99:	cmp    dh,al
  412e9b:	jbe    0x412e67
  412e9d:	es out dx,eax
  412e9f:	or     al,0xe5
  412ea1:	lahf   
  412ea2:	nop
  412ea3:	dec    esp
  412ea4:	add    ebp,ebx
  412ea6:	scas   eax,DWORD PTR es:[edi]
  412ea7:	cmp    eax,0xaefe6182
  412eac:	and    eax,0xd124b01b
  412eb1:	ds mov al,0xef
  412eb4:	sub    ecx,esi
  412eb6:	popf   
  412eb7:	mov    al,ds:0x4ff95608
  412ebc:	push   ebx
  412ebd:	sub    al,0x80
  412ebf:	out    0x3b,al
  412ec1:	std    
  412ec2:	in     eax,dx
  412ec3:	inc    ebx
  412ec4:	adc    ecx,ebx
  412ec6:	jbe    0x412e55
  412ec8:	jmp    0xa155:0x95d38c30
  412ecf:	pop    ecx
  412ed0:	je     0x412ed1
  412ed2:	imul   eax,DWORD PTR [esp+ebx*2-0x7648942a],0xffffff9e
  412eda:	inc    edx
  412edb:	imul   ecx,DWORD PTR [ecx+0x153de90d],0xffffffbd
  412ee2:	add    bl,BYTE PTR [ebx+0x2b67705]
  412ee8:	jle    0x412f03
  412eea:	(bad)  
  412eeb:	cmc    
  412eec:	or     DWORD PTR [eax-0x127551d4],edi
  412ef2:	addr16 jmp 0x9ff994a7
  412ef8:	push   es
  412ef9:	mov    dl,BYTE PTR [esi-0x7102302d]
  412eff:	dec    ebp
  412f00:	out    dx,eax
  412f01:	(bad)  
  412f02:	xchg   esi,eax
  412f03:	in     eax,0xd0
  412f05:	aam    0x4c
  412f07:	mov    ebp,0x7380c1bf
  412f0c:	repnz out 0xd7,al
  412f0f:	pop    ebp
  412f10:	in     eax,0x5f
  412f12:	ja     0x412f38
  412f14:	add    al,0x50
  412f16:	adc    dh,BYTE PTR [edx+ebx*8]
  412f19:	push   eax
  412f1a:	hlt    
  412f1b:	sub    BYTE PTR [ebp+ebx*1+0x1],ah
  412f1f:	aas    
  412f20:	jmp    0x9e82:0xe916c0d7
  412f27:	add    cl,0x36
  412f2a:	push   ecx
  412f2b:	popf   
  412f2c:	pop    ecx
  412f2d:	lahf   
  412f2e:	scas   eax,DWORD PTR es:[edi]
  412f2f:	xor    eax,0x10a794d7
  412f34:	xor    edi,ecx
  412f36:	xor    ah,BYTE PTR [ecx]
  412f38:	or     eax,0x75007202
  412f3d:	dec    eax
  412f3e:	cdq    
  412f3f:	mov    ecx,0xb5c63cee
  412f44:	(bad)  
  412f45:	lock bound ecx,QWORD PTR [ecx-0x29]
  412f49:	sar    BYTE PTR [eax],cl
  412f4b:	mov    ecx,0xe2df6fae
  412f50:	xor    ecx,DWORD PTR [eax]
  412f52:	leave  
  412f53:	or     DWORD PTR [ecx-0x5d],esi
  412f56:	ins    BYTE PTR es:[edi],dx
  412f57:	scas   eax,DWORD PTR es:[edi]
  412f58:	inc    edx
  412f59:	(bad)  
  412f5a:	(bad)  
  412f5b:	sub    eax,0x2d8e688a
  412f60:	xor    bl,ch
  412f62:	cmp    eax,0x177a7fe5
  412f67:	and    BYTE PTR [edx+esi*8],dl
  412f6a:	ins    BYTE PTR es:[edi],dx
  412f6b:	loopne 0x412f14
  412f6d:	push   ebx
  412f6e:	mov    esp,0xffe64783
  412f73:	stc    
  412f74:	rcr    BYTE PTR [eax+eax*4],0x12
  412f78:	ja     0x412f29
  412f7a:	sbb    BYTE PTR [eax+0x9e5ae66],dl
  412f80:	mov    bh,0x48
  412f82:	pushf  
  412f83:	sbb    al,dl
  412f85:	add    DWORD PTR [edi-0x459e548b],esp
  412f8b:	mov    ?,WORD PTR [edx+ebp*2]
  412f8e:	push   ecx
  412f8f:	xchg   DWORD PTR [edx+esi*8],eax
  412f92:	jbe    0x412fda
  412f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f95:	dec    ebx
  412f96:	int3   
  412f97:	add    eax,0x5f27fa50
  412f9c:	in     al,0xd1
  412f9e:	out    dx,al
  412f9f:	sbb    ah,BYTE PTR [esi-0x53]
  412fa2:	add    eax,eax
  412fa4:	repz pop ebx
  412fa6:	aam    0x3
  412fa8:	sub    BYTE PTR [ebx],bh
  412faa:	mov    cl,0x6f
  412fac:	and    eax,esi
  412fae:	inc    edx
  412faf:	sub    eax,0x716ce56e
  412fb4:	adc    ecx,ebx
  412fb6:	sub    dh,ch
  412fb8:	loope  0x412fcf
  412fba:	mov    DWORD PTR [edi-0x1425bab1],ebx
  412fc0:	test   eax,0xe853c2cf
  412fc5:	arpl   WORD PTR [ebx-0x2727de07],sp
  412fcb:	inc    ebp
  412fcc:	cld    
  412fcd:	ja     0x412ffa
  412fcf:	sahf   
  412fd0:	rcl    DWORD PTR ds:0x2beabfe8,0x19
  412fd7:	xor    bh,ah
  412fd9:	dec    ebp
  412fda:	(bad)  
  412fdc:	mul    BYTE PTR [edi]
  412fde:	lea    edx,[ecx+0x30]
  412fe1:	xchg   ecx,eax
  412fe2:	push   cs
  412fe3:	jno    0x412f79
  412fe5:	mov    ebp,0x6f0e32a9
  412fea:	bound  edx,QWORD PTR [eax]
  412fec:	fld    QWORD PTR [ebx+ebp*1]
  412fef:	adc    eax,0xf800cceb
  412ff4:	pop    ebx
  412ff5:	popf   
  412ff6:	adc    eax,0x75cbf8bb
  412ffb:	and    DWORD PTR [esp+esi*2+0x170de1e9],edx
  413002:	xchg   edx,eax
  413003:	mov    edi,DWORD PTR [edi]
  413005:	mov    ch,0x90
  413007:	ret    0xb6f7
  41300a:	ss pop es
  41300c:	pop    es
  41300d:	ja     0x413065
  41300f:	sub    DWORD PTR [edi],eax
  413011:	jmp    0xab24:0x560ebc62
  413018:	dec    ebp
  413019:	repz mov dh,0x6c
  41301c:	push   ds
  41301d:	repz mov ds:0x6f35fff9,al
  413023:	push   ecx
  413024:	inc    esi
  413025:	popa   
  413026:	mov    bl,0xee
  413028:	sti    
  413029:	scas   eax,DWORD PTR es:[edi]
  41302a:	fs (bad) 
  41302c:	retf   
  41302d:	cmp    DWORD PTR [eax+0x7cf0c9e0],ebx
  413033:	stos   BYTE PTR es:[edi],al
  413034:	inc    ecx
  413035:	cmp    edi,esi
  413037:	jns    0x4130a6
  413039:	mov    esp,0xd56c80dc
  41303e:	mov    dl,0xd5
  413040:	int3   
  413041:	or     ecx,DWORD PTR [esi+0x1327f8d4]
  413047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413048:	data16 gs sub al,0xfa
  41304c:	mov    ecx,0x49477028
  413051:	or     cl,BYTE PTR ds:0x175ae29
  413057:	pop    ebp
  413058:	cmp    DWORD PTR [edi+0x219b7b91],0x9881e331
  413062:	je     0x413036
  413064:	pop    es
  413065:	shl    ebp,cl
  413067:	jecxz  0x413043
  413069:	and    BYTE PTR [ebx-0x78],ah
  41306c:	das    
  41306d:	and    al,0x87
  41306f:	jg     0x413045
  413071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413072:	add    BYTE PTR [ecx+0x71c024f],0xac
  413079:	ror    DWORD PTR [ebp+0x4],cl
  41307c:	(bad)  
  41307d:	or     BYTE PTR [esi-0x6c],bh
  413080:	adc    ecx,edx
  413082:	lods   al,BYTE PTR ds:[esi]
  413083:	mov    bh,0xf3
  413086:	dec    eax
  413087:	mov    bh,0x54
  413089:	adc    DWORD PTR [ebp-0x620a60a],ecx
  41308f:	sub    BYTE PTR [ecx+0x1d],0x2b
  413093:	mov    cl,0x33
  413095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413096:	pushf  
  413097:	add    DWORD PTR [ecx],edi
  413099:	lods   eax,DWORD PTR ds:[esi]
  41309a:	out    0x3d,al
  41309c:	es xchg ebx,eax
  41309e:	xor    al,bl
  4130a0:	or     edx,eax
  4130a2:	jle    0x4130da
  4130a4:	dec    esp
  4130a5:	add    al,0x41
  4130a7:	out    dx,eax
  4130a8:	and    bl,dl
  4130aa:	pop    ds
  4130ab:	push   esp
  4130ac:	jae    0x4130e5
  4130ae:	jmp    0xc668:0x1a6a2100
  4130b5:	popa   
  4130b6:	je     0x413087
  4130b8:	fldenv [ebx+0x2eaa65d3]
  4130be:	cwde   
  4130bf:	outs   dx,DWORD PTR ds:[esi]
  4130c0:	sbb    al,0x69
  4130c2:	hlt    
  4130c3:	push   ds
  4130c4:	pop    ebx
  4130c5:	jmp    0x70ad:0xe8eedffd
  4130cc:	sbb    al,0x65
  4130ce:	lahf   
  4130cf:	cmp    al,0xfc
  4130d1:	hlt    
  4130d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130d3:	fsub   DWORD PTR [ecx+eax*4-0x4aeb4a13]
  4130da:	inc    edx
  4130db:	mul    DWORD PTR [ebx]
  4130dd:	cwde   
  4130de:	inc    ebp
  4130df:	fdiv   QWORD PTR [edi+0x39]
  4130e2:	jle    0x413136
  4130e4:	test   eax,0xdc9b33f1
  4130e9:	test   eax,0x54847d0f
  4130ee:	ss and eax,0x15b21906
  4130f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130f5:	adc    edx,DWORD PTR [edi]
  4130f7:	pusha  
  4130f8:	mov    edx,0x7b857bad
  4130fd:	scas   eax,DWORD PTR es:[edi]
  4130fe:	outs   dx,DWORD PTR ds:[esi]
  4130ff:	sbb    BYTE PTR [edi],dh
  413101:	or     eax,0x7e71a073
  413106:	call   0xef1a6b13
  41310b:	imul   edi,DWORD PTR [edi-0x2e],0xc4c66fac
  413112:	mov    ebx,0x327bc829
  413117:	fnsave [edi-0x46]
  41311a:	push   0x6969fc68
  41311f:	ds push ds
  413121:	inc    BYTE PTR [ebx-0x5fcd7a7f]
  413127:	xchg   esp,eax
  413128:	push   DWORD PTR [edx+0x16]
  41312b:	inc    esi
  41312c:	mov    bl,0x21
  41312e:	fldenv [ebx+0x29]
  413131:	(bad)  [edi-0x31dbb2d0]
  413137:	jecxz  0x413157
  413139:	dec    DWORD PTR [eax+edx*4-0xc]
  41313d:	mov    dl,0x97
  41313f:	ror    ebp,0x7f
  413142:	aam    0x7d
  413144:	pushf  
  413145:	fiadd  WORD PTR [edi-0x60]
  413148:	mov    eax,0xd10fd409
  41314d:	jl     0x413166
  41314f:	and    al,BYTE PTR ds:[esi+0x7]
  413153:	sub    al,0x90
  413155:	xlat   BYTE PTR ds:[ebx]
  413156:	fcomi  st,st(0)
  413158:	xlat   BYTE PTR ds:[ebx]
  413159:	mov    ds:0xdc67e17c,eax
  41315e:	sub    bl,BYTE PTR [edx-0x2f3b8d5e]
  413164:	aam    0x93
  413166:	mov    edx,0xadcbf729
  41316b:	dec    ebp
  41316c:	not    bh
  41316e:	adc    eax,0x69494ad8
  413173:	xchg   BYTE PTR [edi+0x35945e09],bh
  413179:	cdq    
  41317a:	sbb    BYTE PTR [ecx+0x1a],bh
  41317d:	sar    edx,cl
  41317f:	test   DWORD PTR [eax-0x54],eax
  413182:	mov    dh,0x16
  413184:	lds    ebx,FWORD PTR [edx+0xe]
  413187:	sbb    eax,0x8ebeaf8d
  41318c:	lods   al,BYTE PTR ds:[esi]
  41318d:	jnp    0x4131b2
  41318f:	sub    eax,0x829b1fc4
  413194:	xor    bl,BYTE PTR [ebp+ecx*4+0x30898fbd]
  41319b:	push   ss
  41319c:	stos   DWORD PTR es:[edi],eax
  41319d:	sub    BYTE PTR [ebx],cl
  41319f:	push   es
  4131a0:	imul   edx,DWORD PTR [ebx+0x4f],0x59da3735
  4131a7:	pop    ecx
  4131a8:	das    
  4131a9:	mov    bl,0xd7
  4131ab:	fs pop ecx
  4131ad:	lock mov dh,0xf
  4131b0:	inc    ebp
  4131b1:	sub    DWORD PTR [eax-0x54],ebp
  4131b4:	mov    dl,0xb2
  4131b6:	jnp    0x4131b1
  4131b8:	push   es
  4131b9:	jno    0x4131c5
  4131bb:	test   BYTE PTR [edx-0x76],cl
  4131be:	xchg   ch,ah
  4131c0:	jmp    0xe3ffe3b5
  4131c5:	pop    ds
  4131c6:	aad    0x3e
  4131c8:	xchg   edi,eax
  4131c9:	adc    DWORD PTR [eax+0x8],0x17d29d5c
  4131d0:	push   edx
  4131d1:	push   ebx
  4131d2:	cmp    edi,DWORD PTR [ebp-0x7cc53e0b]
  4131d8:	xor    eax,0x168e9b66
  4131dd:	cmp    BYTE PTR [ebp+ebp*8-0x6b7ce183],dh
  4131e4:	movzx  esp,BYTE PTR [ebx-0x1168f90c]
  4131eb:	pusha  
  4131ec:	pop    edi
  4131ed:	push   ecx
  4131ee:	(bad)  
  4131ef:	test   DWORD PTR [ecx+0x2e40903b],ebx
  4131f5:	adc    ecx,DWORD PTR [eax-0x74bf43d1]
  4131fb:	rcl    BYTE PTR [ecx-0x6e7a4e81],cl
  413201:	xchg   edi,eax
  413202:	pop    esp
  413203:	loop   0x413220
  413205:	lock dec esi
  413207:	pop    esi
  413208:	aaa    
  413209:	pop    DWORD PTR [ecx-0x6f7147b7]
  41320f:	cmp    al,0x9
  413211:	xchg   ebx,eax
  413212:	pop    edx
  413213:	xchg   DWORD PTR [edx-0x28],edx
  413216:	sub    bl,BYTE PTR [ebx-0x53437027]
  41321c:	adc    ah,bl
  41321e:	test   al,al
  413220:	nop
  413221:	pop    edi
  413222:	fsub   DWORD PTR [eax]
  413224:	sbb    BYTE PTR [ecx+0x56e17dc9],0xfa
  41322b:	popf   
  41322c:	ror    BYTE PTR [eax-0x1de89038],1
  413232:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413234:	setg   BYTE PTR [ebx+0x7545d8b7]
  41323b:	cmp    DWORD PTR [ebp-0x3b],edi
  41323e:	xor    ecx,edx
  413240:	adc    al,BYTE PTR [ebp+ecx*4+0x129a6407]
  413247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413248:	jge    0x413286
  41324a:	adc    DWORD PTR [esi-0x3b],edx
  41324d:	retf   
  41324e:	push   ss
  41324f:	aam    0xc2
  413251:	jl     0x4132a5
  413253:	pop    edx
  413254:	jp     0x4131d9
  413256:	and    edi,esp
  413258:	add    bl,BYTE PTR [eax+0xe]
  41325b:	call   0xcd94cc0a
  413260:	stos   DWORD PTR es:[edi],eax
  413261:	cld    
  413262:	js     0x413299
  413264:	test   al,0xf
  413266:	pop    edx
  413267:	std    
  413268:	push   ss
  413269:	outs   dx,BYTE PTR ds:[esi]
  41326a:	dec    edx
  41326b:	adc    DWORD PTR [edx-0x46],esi
  41326e:	add    eax,eax
  413270:	popf   
  413271:	ins    BYTE PTR es:[edi],dx
  413272:	mov    ch,0xf8
  413274:	add    DWORD PTR [esi-0x35],ecx
  413277:	pop    ebx
  413278:	cmp    ebx,DWORD PTR [eax+ecx*2]
  41327b:	sub    eax,0x8f1898bd
  413280:	mov    BYTE PTR [edi-0x80],dl
  413283:	test   DWORD PTR [edi-0x46],eax
  413286:	bound  esp,QWORD PTR [ebx-0x3310c691]
  41328c:	xor    esp,DWORD PTR [ebx-0x22]
  41328f:	sar    ebp,1
  413291:	(bad)  
  413293:	test   DWORD PTR [ebp-0x72],edi
  413296:	(bad)  
  413297:	call   0xd07d0987
  41329c:	and    ch,ah
  41329e:	sub    DWORD PTR [edi+0x6dcd0527],edx
  4132a4:	pop    ss
  4132a5:	xchg   BYTE PTR [eax-0x19],bl
  4132a8:	jmp    0xc5d04b29
  4132ad:	fmul   DWORD PTR [eax-0x2df77dc9]
  4132b3:	sti    
  4132b4:	inc    edx
  4132b5:	or     DWORD PTR [ecx+0x62],eax
  4132b8:	sub    DWORD PTR [esp+esi*1+0x24],esi
  4132bc:	or     eax,0xca56c2bf
  4132c1:	pop    ds
  4132c2:	jge    0x41325f
  4132c4:	jae    0x413291
  4132c6:	retf   0xa617
  4132c9:	or     eax,DWORD PTR [ebp+0x18e49f6e]
  4132cf:	add    al,0x36
  4132d1:	fadd   QWORD PTR [ecx+esi*1-0x36add375]
  4132d8:	imul   eax,DWORD PTR [edi+0x73f6346c],0xffffff9d
  4132df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132e0:	icebp  
  4132e1:	push   ebx
  4132e2:	cdq    
  4132e3:	div    DWORD PTR [ebx+0x7ccf2b40]
  4132e9:	aas    
  4132ea:	in     al,dx
  4132eb:	pop    eax
  4132ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132ed:	and    eax,0x144c7ab9
  4132f2:	sub    edi,DWORD PTR [edi]
  4132f4:	xchg   BYTE PTR [ecx-0x7d],al
  4132f7:	gs dec ebp
  4132f9:	outs   dx,BYTE PTR ds:[esi]
  4132fa:	rcl    BYTE PTR [esi-0x510cc1fa],0x98
  413301:	and    ebp,DWORD PTR [eax+0x70c528a2]
  413307:	sub    DWORD PTR [eax-0x1a56583d],edi
  41330d:	sbb    al,0xda
  41330f:	test   DWORD PTR [eax-0x1a],eax
  413312:	or     eax,0x850ddd19
  413317:	jbe    0x413316
  413319:	xor    BYTE PTR [esi+0x38345254],bl
  41331f:	jno    0x4132d1
  413321:	jl     0x4132d2
  413323:	cmp    DWORD PTR [ebx-0x40],edi
  413326:	mov    ds:0x3e8d244c,al
  41332b:	jl     0x413337
  41332d:	push   ss
  41332e:	xchg   ecx,eax
  41332f:	dec    ecx
  413330:	pop    edx
  413331:	out    0xfa,eax
  413333:	mov    bh,0x92
  413335:	cld    
  413336:	nop
  413337:	adc    eax,DWORD PTR [edi+0x43]
  41333a:	lods   al,BYTE PTR ds:[esi]
  41333b:	or     BYTE PTR [esi+0x4d78334f],bl
  413341:	push   0xf98ca48
  413346:	jecxz  0x413357
  413348:	repz push edx
  41334a:	aad    0xe7
  41334c:	out    dx,al
  41334d:	mov    dl,0xd1
  41334f:	retf   0xf54a
  413352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413353:	aad    0x52
  413355:	mov    dh,0x92
  413357:	jbe    0x41331d
  413359:	xor    bl,BYTE PTR [ebp+0x5e]
  41335c:	jmp    0xed72:0xa66ff22
  413363:	or     ebp,DWORD PTR [edx-0x42c4d7b6]
  413369:	fsubr  DWORD PTR [edi-0x3b54bb32]
  41336f:	dec    ebp
  413370:	sbb    eax,edx
  413372:	and    ebx,esi
  413374:	inc    esi
  413375:	test   al,0x8f
  413377:	mov    al,ds:0x16463587
  41337c:	jbe    0x413390
  41337e:	jp     0x413349
  413380:	mov    bl,BYTE PTR [edi]
  413382:	sbb    eax,0xb3b3951
  413387:	mov    WORD PTR [ebp+0xa],ds
  41338a:	jne    0x413331
  41338c:	jmp    0x4e4e:0x72d5714a
  413393:	in     al,0x12
  413395:	or     DWORD PTR [eax-0x58],edx
  413398:	xor    ebp,DWORD PTR [ebx-0x75]
  41339b:	inc    esi
  41339c:	inc    BYTE PTR [esi+0x6e]
  41339f:	mov    eax,ds:0xf9716bf9
  4133a4:	pusha  
  4133a5:	int3   
  4133a6:	fist   DWORD PTR [ebx]
  4133a8:	ja     0xfe42dab0
  4133ae:	sahf   
  4133af:	sahf   
  4133b0:	jns    0x4133c3
  4133b2:	gs jmp 0x81bf9c99
  4133b8:	lock cmp edx,DWORD PTR [ebp+edi*1+0xebad506]
  4133c0:	shl    ch,1
  4133c2:	arpl   WORD PTR [esi-0x64],bp
  4133c5:	lock popa 
  4133c7:	aam    0x44
  4133c9:	loopne 0x413378
  4133cb:	xchg   esi,edx
  4133cd:	nop
  4133ce:	(bad)  
  4133d0:	and    al,0xea
  4133d2:	call   0x5037:0xc82d1e81
  4133d9:	cli    
  4133da:	sub    edx,DWORD PTR [edx-0x7c623283]
  4133e0:	popf   
  4133e1:	adc    BYTE PTR [eax+0x59],al
  4133e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133e5:	mov    ch,0xa
  4133e7:	sbb    eax,0x69ac984b
  4133ec:	adc    al,BYTE PTR [edi+0x61f96e95]
  4133f2:	je     0x413381
  4133f4:	ins    BYTE PTR es:[edi],dx
  4133f5:	or     dh,BYTE PTR [ebx+0x4c]
  4133f8:	xchg   DWORD PTR [edx-0x9],esp
  4133fb:	add    BYTE PTR [esi-0x73],ch
  4133fe:	jl     0x413466
  413400:	jmp    0xb3e20682
  413405:	aad    0x2f
  413407:	pop    esi
  413408:	xchg   DWORD PTR [esp+ebx*1-0x16ce38ad],edx
  41340f:	inc    ebp
  413410:	pop    edx
  413411:	pushf  
  413412:	sbb    ebp,ebp
  413414:	push   ss
  413415:	sahf   
  413416:	sahf   
  413417:	xchg   ah,dl
  413419:	dec    edx
  41341a:	sub    BYTE PTR [edx+0x50808343],bh
  413420:	jno    0x41343d
  413422:	ins    BYTE PTR es:[edi],dx
  413423:	xor    DWORD PTR [ecx-0x7926d510],ebp
  413429:	cwde   
  41342a:	mov    BYTE PTR fs:[ecx+0x372a53ed],ah
  413431:	jnp    0x41342f
  413433:	adc    al,0x2e
  413435:	sbb    edi,DWORD PTR [ebp+0x32f9c40f]
  41343b:	repnz cmp DWORD PTR [eax],ebp
  41343e:	sbb    bl,BYTE PTR [ebx+esi*1+0x61211150]
  413445:	xchg   edi,eax
  413446:	mov    ebp,0x7bd2880b
  41344b:	sub    bh,cl
  41344d:	or     al,0xf3
  41344f:	sti    
  413450:	mov    ch,0x9b
  413452:	ja     0x4133f4
  413454:	pop    edi
  413455:	outs   dx,DWORD PTR ds:[esi]
  413456:	enter  0xfba,0xf8
  41345a:	outs   dx,BYTE PTR ds:[esi]
  41345b:	jnp    0x413447
  41345d:	and    dh,BYTE PTR [edi-0x78]
  413460:	jne    0x4133fd
  413462:	and    al,0x8d
  413464:	dec    ecx
  413465:	stc    
  413466:	sub    edx,edx
  413468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413469:	jmp    0x37bb:0x603c2dec
  413470:	sub    eax,0x3879b7a6
  413475:	call   0x193c78ac
  41347a:	pushf  
  41347b:	sbb    ch,BYTE PTR [edx]
  41347d:	repz cmp DWORD PTR [edi],edx
  413480:	mov    ch,BYTE PTR [eax-0x3]
  413483:	adc    bl,dl
  413485:	and    DWORD PTR [edi-0x5],edi
  413488:	pusha  
  413489:	mov    edi,0x935ee34d
  41348e:	inc    ebx
  41348f:	test   eax,0x51273d32
  413494:	push   esp
  413495:	inc    edi
  413496:	or     ecx,DWORD PTR [edi-0x4adecfe5]
  41349c:	inc    ebx
  41349d:	mov    dl,0xfe
  41349f:	clc    
  4134a0:	jnp    0x413432
  4134a2:	ins    DWORD PTR es:[edi],dx
  4134a3:	cmp    DWORD PTR [edx],esp
  4134a5:	loop   0x413491
  4134a7:	mov    eax,ds:0x3b00f4d5
  4134ac:	icebp  
  4134ad:	test   BYTE PTR [esi-0x4def860],0x62
  4134b4:	add    eax,0x8f7ea560
  4134b9:	aaa    
  4134ba:	test   DWORD PTR [edi],eax
  4134bc:	xchg   edx,eax
  4134bd:	ss das 
  4134bf:	les    edx,FWORD PTR [eax]
  4134c1:	sub    eax,0x2efc91eb
  4134c6:	jle    0x4134ac
  4134c8:	repnz lahf 
  4134ca:	test   BYTE PTR [edx-0x170a6506],0x72
  4134d1:	xchg   edx,eax
  4134d2:	ja     0x41351e
  4134d4:	scas   eax,DWORD PTR es:[edi]
  4134d5:	loope  0x41354f
  4134d7:	cld    
  4134d8:	add    eax,0xaabdbc8c
  4134dd:	sub    dl,ch
  4134df:	adc    al,0x13
  4134e1:	in     eax,0xc0
  4134e3:	test   dl,dl
  4134e5:	loope  0x4134ba
  4134e7:	jb     0x41354e
  4134e9:	hlt    
  4134ea:	frstor [edx-0x54a4ff67]
  4134f0:	pop    ds
  4134f1:	outs   dx,BYTE PTR ds:[esi]
  4134f2:	popf   
  4134f3:	dec    esp
  4134f4:	jle    0x4134a8
  4134f6:	jl     0x413536
  4134f8:	iret   
  4134f9:	add    cl,BYTE PTR [edi-0x69]
  4134fc:	pop    esp
  4134fd:	mov    bl,0x6d
  4134ff:	add    ebx,DWORD PTR [edi+0x41]
  413502:	and    cl,BYTE PTR [ebx+0x23]
  413505:	push   edx
  413506:	enter  0x7963,0x7c
  41350a:	adc    al,0x9
  41350c:	mov    eax,ds:0xd4effb83
  413511:	(bad)  
  413513:	inc    DWORD PTR [ebp+0x27]
  413516:	(bad)  
  413517:	das    
  413518:	mov    ds:0xaca68b01,al
  41351d:	mov    bl,0x2e
  41351f:	jl     0x413576
  413521:	daa    
  413522:	fisub  WORD PTR [ecx]
  413524:	aam    0x9d
  413526:	(bad)  
  413527:	ins    DWORD PTR es:[edi],dx
  413528:	pop    es
  413529:	js     0x413518
  41352b:	in     eax,0xc7
  41352d:	rol    dl,1
  41352f:	or     DWORD PTR [ebx+0x7f5d8d24],0xffffffaf
  413536:	lahf   
  413537:	ficom  DWORD PTR [ecx+ebp*8-0x69fa926e]
  41353e:	pop    esp
  41353f:	sub    DWORD PTR [edx+eax*1+0x74],0xb4a11683
  413547:	shr    BYTE PTR [ecx],1
  413549:	imul   edx,DWORD PTR [edx],0xffffff95
  41354c:	ret    
  41354d:	or     ah,al
  41354f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413550:	dec    edi
  413551:	inc    eax
  413552:	das    
  413553:	inc    esp
  413554:	sub    al,0xfe
  413556:	or     eax,0x1f42c063
  41355b:	cld    
  41355c:	push   edi
  41355d:	popa   
  41355e:	xor    al,0x25
  413560:	dec    esi
  413561:	mov    eax,0xeaf35128
  413566:	mov    al,ds:0xbd0f267f
  41356b:	sub    ah,bh
  41356d:	fild   QWORD PTR [edi-0x76a14d18]
  413573:	out    dx,eax
  413574:	js     0x4135af
  413576:	add    eax,0x964a902f
  41357b:	pop    ss
  41357c:	ror    DWORD PTR [edi+eiz*4-0x68],1
  413580:	rcr    DWORD PTR [ecx-0x73],0x29
  413584:	aas    
  413585:	mov    dl,ch
  413587:	jae    0x413550
  413589:	sar    DWORD PTR [ebp-0x30c3bfb5],1
  41358f:	and    DWORD PTR [ebp-0x47],ecx
  413592:	(bad)  
  413593:	cmp    BYTE PTR [eax],al
  413595:	xor    eax,0x8626bb90
  41359a:	lock add BYTE PTR [edi],0xbe
  41359e:	pop    eax
  41359f:	add    al,0x61
  4135a1:	jnp    0x4135af
  4135a3:	xchg   DWORD PTR [ecx+0x704e11ae],eax
  4135a9:	and    BYTE PTR [ecx],bl
  4135ab:	fstp   DWORD PTR [edx]
  4135ad:	mov    ebx,0xf9923153
  4135b2:	sbb    edx,DWORD PTR [ecx]
  4135b4:	push   esi
  4135b5:	ret    
  4135b6:	ds dec edx
  4135b8:	mov    ecx,0x98a4aadf
  4135bd:	into   
  4135be:	add    DWORD PTR [edi+0x21],0x7b63f1f8
  4135c5:	inc    esi
  4135c6:	sbb    al,0x3b
  4135c8:	push   eax
  4135c9:	(bad)  
  4135ca:	xchg   ebp,eax
  4135cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135cc:	test   cl,bh
  4135ce:	(bad)  
  4135d0:	adc    al,0x38
  4135d2:	and    DWORD PTR [ebx-0x29c16e9d],edi
  4135d8:	dec    edx
  4135d9:	adc    DWORD PTR [ecx],ebp
  4135db:	jns    0x413606
  4135dd:	cmp    al,0x5
  4135df:	fwait
  4135e0:	mov    WORD PTR [ebx+eiz*1+0x3f],?
  4135e4:	push   ecx
  4135e5:	adc    eax,0x7e3f2f6c
  4135ea:	adc    DWORD PTR [eax],ebx
  4135ec:	test   eax,0xab63053e
  4135f1:	jg     0x41361a
  4135f3:	ret    0x5e00
  4135f6:	(bad)  
  4135f7:	call   0x6b30d6e3
  4135fc:	dec    ecx
  4135fd:	ret    
  4135fe:	dec    esp
  4135ff:	mov    ebp,0xd18fe5d1
  413604:	test   BYTE PTR ss:[edx+0x5e135544],bl
  41360b:	in     eax,dx
  41360c:	cwde   
  41360d:	jle    0x413638
  41360f:	pop    ebx
  413610:	xchg   esp,eax
  413611:	mov    bh,0x94
  413613:	add    DWORD PTR [eax],0x6
  413616:	(bad)
  413619:	sub    ecx,DWORD PTR [ebp-0x7e]
  41361c:	push   ebp
  41361d:	and    BYTE PTR [edi],dh
  41361f:	and    al,0xe7
  413621:	jle    0x41367b
  413623:	xchg   ebp,eax
  413624:	outs   dx,BYTE PTR ds:[esi]
  413625:	das    
  413626:	popf   
  413627:	lds    ebx,FWORD PTR [ecx+0x5c]
  41362a:	jbe    0x413611
  41362c:	popf   
  41362d:	pop    edi
  41362e:	pop    esp
  41362f:	fnstcw WORD PTR [edi+edx*8-0x4b4d6450]
  413636:	jbe    0x41363f
  413638:	ins    DWORD PTR es:[edi],dx
  413639:	lea    ebp,[ebx-0x23ab642f]
  41363f:	sbb    al,BYTE PTR [ebx+0x46]
  413642:	add    esi,DWORD PTR [ebp-0x7cffb9f]
  413648:	rol    BYTE PTR [ebx+0xd],0xa9
  41364c:	cli    
  41364d:	dec    eax
  41364e:	push   ss
  41364f:	mov    dl,0x79
  413651:	mov    cl,0x9c
  413653:	xor    eax,0xe49b96e2
  413658:	adc    bl,BYTE PTR [eax+eax*2-0x78]
  41365c:	ret    
  41365d:	and    ah,BYTE PTR [edx]
  41365f:	adc    al,0xa8
  413661:	out    0x74,al
  413663:	jmp    FWORD PTR [eax+0x33bc703c]
  413669:	aaa    
  41366a:	push   es
  41366b:	push   edi
  41366c:	xchg   ebx,eax
  41366d:	lods   eax,DWORD PTR ds:[esi]
  41366e:	adc    al,0xec
  413670:	xchg   edx,eax
  413671:	jne    0x41363f
  413673:	fdivr  QWORD PTR [ebx]
  413675:	push   esp
  413676:	out    0x48,eax
  413678:	xor    BYTE PTR [esi],dl
  41367a:	les    eax,FWORD PTR [eax]
  41367c:	out    0x20,al
  41367e:	and    ebx,DWORD PTR [edi]
  413680:	adc    dl,BYTE PTR [eax]
  413682:	dec    ebx
  413683:	test   al,0x53
  413685:	inc    edx
  413686:	fbstp  TBYTE PTR [edi+eax*1+0x41d7f196]
  41368d:	pop    ebx
  41368e:	push   ebx
  41368f:	xor    bl,ch
  413691:	push   edi
  413692:	mov    DWORD PTR [edi],eax
  413694:	xor    dl,BYTE PTR [ecx+0x6cda5751]
  41369a:	sub    ch,BYTE PTR [edi+0x52e571a0]
  4136a0:	fucom  st(6)
  4136a2:	es in  al,dx
  4136a4:	hlt    
  4136a5:	dec    ecx
  4136a6:	push   eax
  4136a7:	shl    BYTE PTR ds:0x8e35b6fb,cl
  4136ad:	sahf   
  4136ae:	lds    esi,FWORD PTR [esi]
  4136b0:	rcl    BYTE PTR [edi+edx*2],0x76
  4136b4:	enter  0xd81e,0x18
  4136b8:	push   cs
  4136b9:	gs cmc 
  4136bb:	jb     0x413722
  4136bd:	jns    0x413665
  4136bf:	push   edx
  4136c0:	sub    BYTE PTR [edx+ebx*8],dh
  4136c3:	inc    edi
  4136c4:	rcr    dl,1
  4136c6:	repnz bound ebx,QWORD PTR [esi+0x7b218e06]
  4136cd:	dec    ebp
  4136ce:	pop    edx
  4136cf:	gs sbb eax,0x3d0a09f4
  4136d5:	fnstenv [edi-0x10]
  4136d8:	pop    es
  4136d9:	ds das 
  4136db:	mov    dh,0x82
  4136dd:	int3   
  4136de:	jmp    0x4136b3
  4136e0:	leave  
  4136e1:	in     al,0xe
  4136e3:	imul   ebp,DWORD PTR fs:[ebx+0x7b],0xae4d834b
  4136eb:	(bad)  
  4136ec:	or     DWORD PTR [esi-0x4a61c339],esi
  4136f2:	mov    ecx,0x9e0df30e
  4136f7:	cmp    bl,ch
  4136f9:	ja     0x413689
  4136fb:	add    DWORD PTR [edx+eiz*1+0x71],ebx
  4136ff:	jae    0x4136db
  413701:	test   edi,ebx
  413703:	lods   eax,DWORD PTR ds:[esi]
  413704:	pop    esp
  413705:	cs pusha 
  413707:	sub    DWORD PTR [edx+0x71b0bd00],ecx
  41370d:	cld    
  41370e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41370f:	mov    esp,0x2882c7ae
  413714:	es iret 
  413716:	call   0xa14d:0x3dc97ce6
  41371d:	jo     0x41376f
  41371f:	mov    esi,0x129ab91e
  413724:	imul   ebp,DWORD PTR [ebx+0x21],0x6ee4809b
  41372b:	leave  
  41372c:	dec    edi
  41372d:	scas   eax,DWORD PTR es:[edi]
  41372e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41372f:	sub    al,0xdf
  413731:	pop    edx
  413732:	in     eax,0xca
  413734:	or     eax,0xe97a2fb0
  413739:	jbe    0x413779
  41373b:	test   eax,0xab54ca97
  413740:	stc    
  413741:	fld    TBYTE PTR [esi-0x336c2128]
  413747:	push   ecx
  413748:	and    DWORD PTR [ebx-0x5f],edx
  41374b:	outs   dx,BYTE PTR ds:[esi]
  41374c:	and    BYTE PTR [ebx],bh
  41374e:	test   ecx,esi
  413750:	xchg   DWORD PTR ss:[esi],eax
  413753:	ins    DWORD PTR es:[edi],dx
  413754:	in     al,0x57
  413756:	mov    ds:0xf83b4ba8,eax
  41375b:	repnz cmp BYTE PTR [edx],al
  41375e:	cwde   
  41375f:	cmp    eax,0xf75992e7
  413764:	dec    esi
  413765:	and    edi,DWORD PTR [ecx-0x15]
  413768:	dec    ebx
  413769:	cmp    bl,BYTE PTR [eax+ebp*2]
  41376c:	scas   eax,DWORD PTR es:[edi]
  41376d:	sar    DWORD PTR [edx],1
  41376f:	mov    esi,DWORD PTR [ecx+0x58]
  413772:	call   0x8dcab3cb
  413777:	cdq    
  413778:	hlt    
  413779:	pusha  
  41377a:	cwde   
  41377b:	or     eax,0xb10d9eb5
  413780:	adc    edi,DWORD PTR [eax+0x71]
  413783:	stos   BYTE PTR es:[edi],al
  413784:	call   0x31b7:0xff79e102
  41378b:	adc    al,0xdc
  41378d:	in     eax,0x64
  41378f:	mov    ch,0x43
  413791:	ficom  WORD PTR [esp+edx*2-0x67]
  413795:	inc    edx
  413796:	pop    esi
  413797:	sar    DWORD PTR [ecx-0x22],0xad
  41379b:	ror    DWORD PTR [esi+0x5e],cl
  41379e:	imul   esp,DWORD PTR [esi],0x4dd321f1
  4137a4:	mov    BYTE PTR [eax+esi*2+0x2d3c6a9c],0xd
  4137ac:	test   BYTE PTR [ebp+esi*4+0x7b],0x33
  4137b1:	sar    BYTE PTR ds:0x8e2f1dca,cl
  4137b7:	jmp    0x5a0ae4bb
  4137bc:	adc    al,0x9e
  4137be:	adc    bh,BYTE PTR [eax]
  4137c0:	mov    edi,0x79bce450
  4137c5:	bound  ecx,QWORD PTR [ebp+edi*8+0x32]
  4137c9:	mov    ah,0x10
  4137cb:	push   ebp
  4137cc:	push   edx
  4137cd:	ret    0xfbd
  4137d0:	out    dx,eax
  4137d1:	sub    al,0x8d
  4137d3:	js     0x4137e4
  4137d5:	mov    ch,0x7
  4137d7:	iret   
  4137d8:	aaa    
  4137d9:	mov    edx,0xb6805c64
  4137de:	int    0x1
  4137e0:	popf   
  4137e1:	loopne 0x41381b
  4137e3:	pop    ecx
  4137e4:	dec    edx
  4137e5:	ds dec ebp
  4137e7:	outs   dx,DWORD PTR ds:[esi]
  4137e8:	out    dx,eax
  4137e9:	jbe    0x41377f
  4137eb:	inc    edx
  4137ec:	outs   dx,DWORD PTR ds:[esi]
  4137ed:	mov    edx,0x4bdc8307
  4137f2:	cs iret 
  4137f4:	fucom  st(6)
  4137f6:	subps  xmm7,XMMWORD PTR [esi+0x7b]
  4137fa:	(bad)  
  4137fb:	jbe    0x413830
  4137fd:	sub    dh,bh
  4137ff:	not    DWORD PTR [edx-0x9]
  413802:	push   0x7e
  413804:	clc    
  413805:	xchg   edi,eax
  413806:	sbb    al,0x4d
  413808:	retw   
  41380a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41380b:	test   BYTE PTR [ecx+0x42e31fb5],0x8d
  413812:	cld    
  413813:	xchg   ebx,eax
  413814:	(bad)  
  413815:	jp     0x413841
  413817:	(bad)  
  413819:	jg     0x4137dc
  41381b:	cmp    esi,DWORD PTR [esi+0x403a5745]
  413821:	iret   
  413822:	mov    DWORD PTR [ebx+0x1bfbf243],eax
  413828:	jg     0x413894
  41382a:	ins    BYTE PTR es:[edi],dx
  41382b:	adc    al,0xff
  41382d:	jp     0x4137c1
  41382f:	call   0x119abcdc
  413834:	sub    DWORD PTR [edx-0x1305997c],esp
  41383a:	mov    ebp,DWORD PTR [ecx+0x70]
  41383d:	or     DWORD PTR [edi+ebp*8+0x302c9319],ebx
  413844:	xor    al,0x50
  413846:	sub    eax,0xd7e1634d
  41384b:	jecxz  0x4138af
  41384d:	pop    esp
  41384e:	and    eax,0x89552cbe
  413853:	xor    eax,0xb5ca02a8
  413858:	test   al,bh
  41385a:	test   edx,0x4ed345e
  413860:	test   BYTE PTR [esi-0xb],bh
  413863:	shl    BYTE PTR [edx],0xa5
  413866:	cmp    BYTE PTR [esp+ebp*2+0x6d14b0aa],ah
  41386d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41386e:	out    dx,eax
  41386f:	mov    DWORD PTR [edx],ebp
  413871:	shl    DWORD PTR [esi+0x73af6f1e],cl
  413877:	mov    edi,0x2451e774
  41387c:	pop    esi
  41387d:	cmc    
  41387e:	cmp    DWORD PTR [ecx-0x12fcab0d],edx
  413884:	cdq    
  413885:	dec    ecx
  413886:	retf   0xec3e
  413889:	retf   0xf964
  41388c:	sub    cl,BYTE PTR [eax+0x20]
  41388f:	gs inc edi
  413891:	lds    ecx,FWORD PTR [esi+eax*4]
  413894:	cmc    
  413895:	mov    bh,BYTE PTR [eax]
  413897:	dec    eax
  413898:	pop    eax
  413899:	lock jmp 0x9dc:0x9b9c20b8
  4138a1:	and    BYTE PTR [eax-0x22],dh
  4138a4:	or     eax,0x7249cff3
  4138a9:	rol    BYTE PTR [edi+0x76906c8a],1
  4138af:	and    ch,BYTE PTR [eax-0x3cce8df2]
  4138b5:	push   edx
  4138b6:	mov    ebp,DWORD PTR [esi-0x9]
  4138b9:	dec    ebp
  4138ba:	fwait
  4138bb:	inc    ebp
  4138bc:	or     BYTE PTR [edx+ecx*2+0x1c],ch
  4138c0:	adc    dl,bl
  4138c2:	or     DWORD PTR [esi],esp
  4138c4:	mov    ch,0xeb
  4138c6:	dec    eax
  4138c7:	fild   QWORD PTR [ebx]
  4138c9:	ins    BYTE PTR es:[edi],dx
  4138ca:	cli    
  4138cb:	stos   BYTE PTR es:[edi],al
  4138cc:	mov    eax,0xf58c0fce
  4138d1:	into   
  4138d2:	pop    edx
  4138d3:	ficomp DWORD PTR [esi-0x4e]
  4138d6:	push   ds
  4138d7:	jl     0x413860
  4138d9:	fmul   st,st(1)
  4138db:	xchg   esi,eax
  4138dc:	shr    BYTE PTR [ebx+0xbbfac28],1
  4138e2:	shl    DWORD PTR [edx+0x31],cl
  4138e5:	and    BYTE PTR [edi*8+0x42006907],bh
  4138ec:	clc    
  4138ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138ee:	dec    ecx
  4138ef:	arpl   WORD PTR [eax-0x1288f833],dx
  4138f5:	xchg   edx,eax
  4138f6:	xchg   ebp,eax
  4138f7:	adc    BYTE PTR [esp+esi*1-0x14],dh
  4138fb:	sbb    dh,BYTE PTR ds:0xbd72df42
  413901:	add    al,0x9e
  413903:	cwde   
  413904:	outs   dx,BYTE PTR ds:[esi]
  413905:	push   esi
  413906:	dec    edi
  413907:	scas   al,BYTE PTR es:[edi]
  413908:	cmp    esi,DWORD PTR [esi]
  41390a:	pusha  
  41390b:	pushf  
  41390c:	outs   dx,BYTE PTR ds:[esi]
  41390d:	inc    ecx
  41390e:	aad    0x14
  413910:	xchg   ebx,eax
  413911:	es scas eax,DWORD PTR es:[edi]
  413913:	mov    al,ds:0xf1de1557
  413918:	xor    al,0xe5
  41391a:	cmp    BYTE PTR [edi+0x35],al
  41391d:	aas    
  41391e:	loopne 0x413907
  413920:	cmp    al,0xbf
  413922:	retf   0xa467
  413925:	outs   dx,DWORD PTR ds:[esi]
  413926:	jge    0x413944
  413928:	xor    al,0x8d
  41392a:	aad    0xbc
  41392c:	jnp    0x41397b
  41392e:	(bad)  
  41392f:	gs jmp 0x715a:0xda0dfa12
  413937:	imul   esi,edi,0x45
  41393a:	sbb    DWORD PTR [edi-0x38],0xffffffd8
  41393e:	ret    
  41393f:	inc    ebp
  413940:	xchg   DWORD PTR [ecx-0x6886daa],ecx
  413946:	mov    dh,0x58
  413948:	mov    bh,0xf8
  41394a:	bound  eax,QWORD PTR [ebp+0x5bdbbd00]
  413950:	adc    eax,0x3192183b
  413955:	mov    eax,ds:0x9a38f3d1
  41395a:	fucomp st(0)
  41395c:	daa    
  41395d:	scas   al,BYTE PTR es:[edi]
  41395e:	mov    ch,0xe3
  413960:	inc    edi
  413961:	repz and DWORD PTR [esi+0x4c683c81],edx
  413968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413969:	mov    ss,WORD PTR [ecx+0x53939eba]
  41396f:	in     al,dx
  413970:	inc    edx
  413971:	adc    BYTE PTR [esi],bh
  413973:	mov    eax,ds:0xb7763520
  413978:	sti    
  413979:	(bad)  [ecx]
  41397b:	test   BYTE PTR [eax+0x65],al
  41397e:	push   ecx
  41397f:	rol    DWORD PTR [ebx-0x52],1
  413982:	pop    edi
  413983:	xchg   ebp,eax
  413984:	push   cs
  413985:	out    dx,eax
  413986:	fld    QWORD PTR [ebp-0x397c1e3d]
  41398c:	and    edi,DWORD PTR [ecx-0x24b84269]
  413992:	pop    ecx
  413993:	jnp    0x413a09
  413995:	call   0x4215:0x85bf2cab
  41399c:	ss dec esi
  41399e:	fidivr WORD PTR [ebx+0x30d3ae93]
  4139a4:	adc    eax,0xf136a2f1
  4139a9:	xor    ebp,DWORD PTR [esi+0x52]
  4139ac:	into   
  4139ad:	(bad)  
  4139ae:	jns    0x4139c4
  4139b0:	dec    edi
  4139b1:	sbb    esp,esi
  4139b3:	std    
  4139b4:	mov    WORD PTR [ecx],fs
  4139b6:	cs mov ch,0x18
  4139b9:	add    eax,0x3cb18dc3
  4139be:	push   edx
  4139bf:	sahf   
  4139c0:	dec    esi
  4139c1:	ss (bad) 
  4139c3:	mov    ecx,0xa6e2c38f
  4139c8:	push   edx
  4139c9:	mov    DWORD PTR [ebx-0x42],ecx
  4139cc:	out    dx,eax
  4139cd:	lods   al,BYTE PTR ds:[esi]
  4139ce:	dec    edi
  4139cf:	js     0x4139a6
  4139d1:	pop    ebp
  4139d2:	dec    edi
  4139d3:	sbb    dh,BYTE PTR [esi+0x75]
  4139d6:	add    al,0x70
  4139d8:	mov    edi,0x2ce4b871
  4139dd:	inc    ecx
  4139de:	mov    dh,BYTE PTR [esp+eax*4-0xa656eda]
  4139e5:	mov    cl,0x3e
  4139e7:	push   ebx
  4139e8:	xor    bh,bh
  4139ea:	push   ecx
  4139eb:	sbb    BYTE PTR [edx-0x39],ah
  4139ee:	pop    es
  4139ef:	inc    esi
  4139f0:	test   ebp,edi
  4139f2:	inc    edi
  4139f3:	mov    ds:0x9a9e92cb,al
  4139f8:	mov    bl,0x82
  4139fa:	sbb    dl,dl
  4139fc:	sahf   
  4139fd:	push   0x6f
  4139ff:	inc    ebp
  413a00:	cmc    
  413a01:	add    eax,0x282f776d
  413a06:	(bad)  
  413a07:	cmp    eax,0x963f8763
  413a0c:	jnp    0x413a54
  413a0e:	fchs   
  413a10:	stc    
  413a11:	sbb    DWORD PTR [eax],eax
  413a13:	lds    edx,FWORD PTR [ecx+0x5aa60638]
  413a19:	add    DWORD PTR [esi],ebp
  413a1b:	js     0x4139d8
  413a1d:	xchg   BYTE PTR [esi-0x1da0543],dh
  413a23:	in     eax,0x40
  413a25:	cmp    ch,BYTE PTR [esi+0xd]
  413a28:	inc    ebp
  413a29:	leave  
  413a2a:	cwde   
  413a2b:	push   ds
  413a2c:	cdq    
  413a2d:	pop    ds
  413a2e:	out    dx,eax
  413a2f:	iret   
  413a30:	xchg   ecx,eax
  413a31:	add    DWORD PTR [ecx+esi*8],eax
  413a34:	daa    
  413a35:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  413a37:	popa   
  413a38:	mov    ebp,edx
  413a3a:	mov    dh,0x24
  413a3c:	push   esp
  413a3d:	hlt    
  413a3e:	sti    
  413a3f:	xchg   ebx,eax
  413a40:	cs dec eax
  413a42:	jge    0x413aa7
  413a44:	xor    cl,al
  413a46:	aam    0xb4
  413a48:	xchg   edx,eax
  413a49:	in     eax,dx
  413a4a:	cmp    ah,BYTE PTR [di+0x63]
  413a4e:	push   ss
  413a4f:	or     BYTE PTR [ebp-0x64c61fc4],dl
  413a55:	jb     0x413a26
  413a57:	retf   0xa69
  413a5a:	xchg   edi,eax
  413a5b:	and    BYTE PTR [ebp+0x1b271df7],0xc6
  413a62:	mov    al,BYTE PTR [ebp+0x78d98a1]
  413a68:	xchg   edx,eax
  413a69:	(bad)  
  413a6a:	shr    BYTE PTR [ebx-0x79f927fe],1
  413a70:	adc    dl,BYTE PTR [ebx+0x57b80f12]
  413a76:	rol    BYTE PTR [esi+edx*8],0x5b
  413a7a:	and    DWORD PTR [ebp-0x10],ebx
  413a7d:	mov    DWORD PTR [ecx-0x4e],ebx
  413a80:	mov    ebx,0xfd24bc76
  413a85:	je     0x413a73
  413a87:	cmp    BYTE PTR [edi+edi*1],bh
  413a8a:	adc    esi,DWORD PTR [ebx+eiz*4-0x56]
  413a8e:	mov    al,0x5a
  413a90:	mov    ebp,0x213606eb
  413a95:	cld    
  413a96:	jo     0x413a1a
  413a98:	sti    
  413a99:	ds jmp 0x413a25
  413a9c:	push   ecx
  413a9d:	ret    0xacc6
  413aa0:	adc    ah,bh
  413aa2:	xor    BYTE PTR ds:0xcfbae8d0,cl
  413aa8:	adc    edx,DWORD PTR [esi+esi*1+0x2bea25f7]
  413aaf:	sbb    ebx,DWORD PTR [ecx-0x4d529077]
  413ab5:	inc    esp
  413ab6:	dec    edx
  413ab8:	imul   edx,DWORD PTR [ebx+0x73],0x2c
  413abc:	loop   0x413b1a
  413abe:	xchg   edi,eax
  413abf:	pop    esi
  413ac0:	add    BYTE PTR [eax],al
  413ac2:	adc    eax,0x8c1f0f73
  413ac7:	add    al,0xd
  413ac9:	mov    dl,0x5f
  413acb:	fnstsw WORD PTR [ebp+ecx*4+0xd]
  413acf:	jns    0x413a8a
  413ad1:	dec    edi
  413ad2:	scas   al,BYTE PTR es:[edi]
  413ad3:	sbb    al,0x76
  413ad5:	imul   ebx,ebp,0xb80aa50d
  413adb:	gs fwait
  413add:	cli    
  413ade:	inc    edx
  413adf:	or     al,0x45
  413ae1:	xchg   esp,eax
  413ae2:	pusha  
  413ae3:	adc    al,BYTE PTR [eax+0x23c89aa6]
  413ae9:	out    0xd4,al
  413aeb:	sub    BYTE PTR [eax-0x37],al
  413aee:	mov    ds:0xd36f92b,al
  413af3:	ins    BYTE PTR es:[edi],dx
  413af4:	pop    edx
  413af5:	dec    ecx
  413af6:	dec    eax
  413af7:	mov    ebx,0x11118b7e
  413afc:	dec    edi
  413afd:	dec    esp
  413afe:	jp     0x413b18
  413b00:	int    0xb1
  413b02:	xchg   esp,eax
  413b03:	(bad)  
  413b04:	(bad)  
  413b05:	popf   
  413b06:	push   edx
  413b07:	cmp    bl,BYTE PTR [eax]
  413b09:	adc    edx,eax
  413b0b:	sar    BYTE PTR [esi],cl
  413b0d:	add    BYTE PTR [ebp-0x39],ch
  413b10:	lds    ebp,FWORD PTR [edx+0x2a]
  413b13:	dec    ecx
  413b14:	inc    ebx
  413b15:	mov    ebx,0xa3585d01
  413b1a:	retf   
  413b1b:	maskmovq mm6,(bad)
  413b1c:	div    DWORD PTR [eax]
  413b1e:	cli    
  413b1f:	pop    ebx
  413b20:	outs   dx,BYTE PTR ds:[esi]
  413b21:	or     BYTE PTR [edx+0x3c479507],ah
  413b27:	mov    eax,0xd2c7f37e
  413b2c:	inc    edi
  413b2d:	lods   eax,DWORD PTR ds:[esi]
  413b2e:	pop    ebx
  413b2f:	stos   BYTE PTR es:[edi],al
  413b30:	dec    esp
  413b31:	fs aas 
  413b33:	or     bh,bh
  413b35:	pop    ss
  413b36:	ret    0x2f9a
  413b39:	repnz daa 
  413b3b:	push   ebx
  413b3c:	adc    ch,BYTE PTR [bp-0x3a]
  413b40:	shl    BYTE PTR [esi+0x1f3b145e],0x11
  413b47:	ja     0x413b0f
  413b49:	icebp  
  413b4a:	inc    edi
  413b4b:	adc    BYTE PTR [edi+0x44821807],dh
  413b51:	ficom  DWORD PTR [edx]
  413b53:	call   0xd0661aca
  413b58:	mov    ebx,0x28b224c6
  413b5d:	je     0x413bd2
  413b5f:	inc    ecx
  413b60:	sbb    eax,0x1e91aab2
  413b65:	sub    eax,0x3c72bdeb
  413b6a:	outs   dx,DWORD PTR ds:[esi]
  413b6b:	jno    0x413be6
  413b6d:	pop    edi
  413b6e:	push   ecx
  413b6f:	shl    BYTE PTR [esi-0x45],cl
  413b72:	sbb    al,0xf
  413b74:	cdq    
  413b75:	mov    edx,DWORD PTR [edx-0x57113d56]
  413b7b:	shr    DWORD PTR [ecx-0x43],0x1d
  413b7f:	stos   DWORD PTR es:[edi],eax
  413b80:	addr16 pop ds
  413b82:	addr16 pop eax
  413b84:	or     cl,BYTE PTR [esi]
  413b86:	popf   
  413b87:	and    BYTE PTR [ecx],ch
  413b89:	mov    edi,0x290fb2cd
  413b8e:	imul   esp
  413b90:	sbb    BYTE PTR [edi],bl
  413b92:	xchg   esp,esi
  413b94:	fdivr  QWORD PTR [eax]
  413b97:	and    ch,BYTE PTR ds:0x24dca6d3
  413b9d:	aam    0xf4
  413b9f:	fwait
  413ba0:	xchg   edx,eax
  413ba1:	clc    
  413ba2:	push   ebp
  413ba3:	cdq    
  413ba4:	xchg   edx,eax
  413ba5:	scas   al,BYTE PTR es:[edi]
  413ba6:	call   0xca1988d
  413bab:	push   eax
  413bac:	and    eax,0xffffaa81
  413bb1:	xchg   ebp,eax
  413bb2:	call   0xb14f:0x39d5be71
  413bb9:	ret    0x4ac1
  413bbc:	pusha  
  413bbd:	mov    esp,0x209f4d93
  413bc2:	mov    edx,0xeb0371ac
  413bc7:	scas   eax,DWORD PTR es:[edi]
  413bc8:	test   DWORD PTR [ecx+0x2],edx
  413bcb:	push   eax
  413bcc:	add    bl,BYTE PTR [edx]
  413bce:	mov    al,ds:0x803b3248
  413bd3:	lea    esp,[esi+0x30d70117]
  413bd9:	adc    esp,DWORD PTR [ecx]
  413bdb:	sub    cl,ch
  413bdd:	(bad)  
  413bde:	sub    eax,0x6820648e
  413be3:	bound  ebp,QWORD PTR [ebx+0x34755800]
  413be9:	das    
  413bea:	ins    BYTE PTR es:[edi],dx
  413beb:	xor    BYTE PTR [ebx+esi*8],bh
  413bee:	mov    ch,0x97
  413bf0:	ror    BYTE PTR [ecx+eiz*8],cl
  413bf3:	div    DWORD PTR [ebp+0x58]
  413bf6:	jecxz  0x413c3b
  413bf8:	jg     0x413bc2
  413bfa:	dec    edi
  413bfb:	cmc    
  413bfc:	mov    cl,BYTE PTR [esi+0x7741cbf8]
  413c02:	push   esp
  413c03:	in     eax,0x89
  413c05:	js     0x413c08
  413c07:	call   FWORD PTR [esi+0xc4da649]
  413c0d:	aaa    
  413c0e:	pop    es
  413c0f:	ret    
  413c10:	ins    BYTE PTR es:[edi],dx
  413c11:	dec    esp
  413c12:	imul   esp,DWORD PTR [edx],0xbc00c423
  413c18:	jmp    0xd95ec3d6
  413c1d:	xor    esi,DWORD PTR es:[ecx-0x7a5080a1]
  413c24:	xchg   ebp,eax
  413c25:	jg     0x413c87
  413c27:	jmp    0x413bf6
  413c29:	js     0x413c2c
  413c2b:	es stos DWORD PTR es:[edi],eax
  413c2d:	jnp    0x413c15
  413c2f:	scas   eax,DWORD PTR es:[edi]
  413c30:	mov    dh,0xb6
  413c32:	push   edx
  413c33:	sahf   
  413c34:	fsubr  DWORD PTR [edx]
  413c36:	sbb    dh,BYTE PTR [eax-0x41710743]
  413c3c:	fst    st(2)
  413c3e:	xor    ah,ah
  413c40:	hlt    
  413c41:	push   ebx
  413c42:	sbb    al,BYTE PTR [edi]
  413c44:	in     al,dx
  413c45:	mov    BYTE PTR [edx-0x1b],bl
  413c48:	outs   dx,BYTE PTR gs:[esi]
  413c4a:	sbb    BYTE PTR [edi+0x6abd0722],bl
  413c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c51:	retf   
  413c52:	add    al,BYTE PTR [eax]
  413c54:	mov    al,ds:0xd28d3ca1
  413c59:	iret   
  413c5a:	es in  eax,0x24
  413c5d:	rcr    DWORD PTR ds:0x10edda18,1
  413c63:	sbb    ah,BYTE PTR [ebx+0x6b8c534a]
  413c69:	ret    
  413c6a:	hlt    
  413c6b:	cmp    DWORD PTR [ebx],edx
  413c6d:	out    dx,eax
  413c6e:	inc    eax
  413c6f:	cmp    dh,ch
  413c71:	xor    eax,0x9cc025cb
  413c76:	sbb    dl,BYTE PTR [eax-0x25]
  413c79:	inc    ecx
  413c7a:	xchg   edi,eax
  413c7b:	inc    edi
  413c7c:	leave  
  413c7d:	into   
  413c7e:	(bad)  [esi+eiz*2+0x27507536]
  413c85:	pop    edx
  413c86:	sahf   
  413c87:	inc    edi
  413c88:	lods   al,BYTE PTR ds:[esi]
  413c89:	push   ds
  413c8a:	iret   
  413c8b:	int3   
  413c8c:	shl    esi,1
  413c8e:	push   ecx
  413c8f:	jp     0x413ca1
  413c91:	push   edi
  413c92:	fbstp  TBYTE PTR [ecx-0x140a1263]
  413c98:	mov    ebx,0xbd43ad59
  413c9d:	sahf   
  413c9e:	mov    edx,0xc6fbd624
  413ca3:	fwait
  413ca4:	jmp    0x1e6e:0xe24646fa
  413cab:	loope  0x413c2e
  413cad:	rol    DWORD PTR [esi+0x27bb7263],0xcc
  413cb4:	jne    0x413cd9
  413cb6:	int3   
  413cb7:	out    0xf2,eax
  413cb9:	imul   ecx,DWORD PTR [edi],0x47b8dc7e
  413cbf:	adc    BYTE PTR [ecx-0x17e686a8],dl
  413cc5:	xchg   ebx,eax
  413cc6:	lods   eax,DWORD PTR ds:[esi]
  413cc7:	adc    BYTE PTR [ecx-0x2c],ch
  413cca:	pop    ebp
  413ccb:	push   ds
  413ccc:	sar    DWORD PTR [edi],1
  413cce:	mov    fs,WORD PTR [ebx-0x3024a43]
  413cd4:	pop    esi
  413cd5:	xchg   ebp,eax
  413cd6:	cdq    
  413cd7:	popa   
  413cd8:	mov    BYTE PTR [eax-0x7e569d9d],cl
  413cde:	cmp    eax,0x9b12d564
  413ce3:	daa    
  413ce4:	add    BYTE PTR ds:0x651e3216,cl
  413cea:	push   0x79
  413cec:	sub    al,0xf
  413cee:	lds    edx,FWORD PTR [esi-0x78eb6d86]
  413cf4:	aad    0x7b
  413cf6:	shl    DWORD PTR [ebx],cl
  413cf8:	test   BYTE PTR [eax-0x447b04e4],dl
  413cfe:	pop    ecx
  413cff:	(bad)  
  413d00:	sub    BYTE PTR [edx-0x6c462787],ch
  413d06:	mov    edi,0x64f44583
  413d0b:	lahf   
  413d0c:	int3   
  413d0d:	iret   
  413d0e:	jb     0x413d70
  413d10:	hlt    
  413d11:	loop   0x413cc3
  413d13:	adc    DWORD PTR [edx+eiz*4-0x7e],edx
  413d17:	xchg   esi,eax
  413d18:	dec    edx
  413d19:	repz sub BYTE PTR [ebx],dh
  413d1c:	push   0xffffffff
  413d1e:	jp     0x413d37
  413d20:	lods   eax,DWORD PTR ds:[esi]
  413d21:	ins    DWORD PTR es:[edi],dx
  413d22:	lock lea ebp,[esi]
  413d25:	out    0xf1,al
  413d27:	pop    ebx
  413d28:	jp     0x413d31
  413d2a:	push   cs
  413d2b:	lds    ebp,FWORD PTR [edx]
  413d2d:	mov    dh,0xf0
  413d2f:	ret    0xeec4
  413d32:	jp     0x413ce7
  413d34:	add    BYTE PTR [eax+0x67],bh
  413d37:	jg     0x413ce7
  413d39:	out    0x27,al
  413d3b:	add    al,0x87
  413d3d:	mov    gs,WORD PTR [eax+ebx*8]
  413d40:	cwde   
  413d41:	jns    0x413cc9
  413d43:	loop   0x413d4d
  413d45:	ret    0x383f
  413d48:	shl    BYTE PTR [edx],1
  413d4a:	jmp    0xf2d9:0xf0c61c29
  413d51:	jmp    0xa7948497
  413d56:	out    dx,eax
  413d57:	add    ch,ch
  413d59:	in     eax,dx
  413d5a:	ds mov ecx,0x79001228
  413d60:	aam    0xa5
  413d62:	xor    DWORD PTR [eax-0x7f72f59c],ebx
  413d68:	js     0x413ddd
  413d6a:	mov    esi,0xdc5da213
  413d6f:	pop    es
  413d70:	pusha  
  413d71:	or     edi,eax
  413d73:	push   ds
  413d74:	xchg   esp,eax
  413d75:	sub    BYTE PTR [ebp+0x5e4717d4],cl
  413d7b:	(bad)
  413d7e:	imul   ebp,DWORD PTR [edx],0x18
  413d81:	mov    esp,0x2122a182
  413d86:	jno    0x413d75
  413d88:	xchg   esp,eax
  413d89:	sbb    eax,0xbb8c4ddf
  413d8e:	inc    ebp
  413d8f:	or     BYTE PTR ds:0x2a851872,bh
  413d95:	aas    
  413d96:	mov    BYTE PTR [ebx+0x6d],ah
  413d99:	jb     0x413d43
  413d9b:	mov    esi,0xc3f014ed
  413da0:	jae    0x413e05
  413da2:	jge    0x413e11
  413da4:	or     al,0x67
  413da6:	cld    
  413da7:	pop    eax
  413da8:	pop    ebx
  413da9:	(bad)  
  413daa:	out    dx,al
  413dab:	mov    bh,BYTE PTR [esi+0x23e38ae9]
  413db1:	test   al,0xcd
  413db3:	popa   
  413db4:	repnz pop ss
  413db6:	mov    esp,DWORD PTR [ebx+ecx*2]
  413db9:	jl     0x413dbd
  413dbb:	shl    DWORD PTR [ebp+0x7a3819d3],1
  413dc1:	test   al,0xbd
  413dc3:	push   ebp
  413dc4:	dec    edx
  413dc5:	fld    st(5)
  413dc7:	cmp    BYTE PTR ds:0x18d1fd,dl
  413dcd:	mov    dh,BYTE PTR [ebx+edx*2-0x48ca74fe]
  413dd4:	mov    ebp,0x841f4b8c
  413dd9:	or     BYTE PTR [eax],dh
  413ddb:	and    cl,0xe3
  413dde:	test   al,0xf0
  413de0:	pop    es
  413de1:	jmp    0xdc73:0x3b30fe47
  413de8:	sar    DWORD PTR [ecx+edx*2+0x17d1085b],1
  413def:	out    0x83,al
  413df1:	jae    0x413e65
  413df3:	fwait
  413df4:	jae    0x413d81
  413df6:	lds    ebp,FWORD PTR [ebx-0x65]
  413df9:	mov    esi,0x235cc565
  413dfe:	xchg   esp,eax
  413dff:	and    DWORD PTR [edi+0xaff9c22],esi
  413e05:	pop    ds
  413e06:	ret    0x39e2
  413e09:	sbb    dh,BYTE PTR [esi+0x6]
  413e0c:	cdq    
  413e0d:	test   BYTE PTR [edx+0xba1c838],dh
  413e13:	pusha  
  413e14:	jle    0x413e2d
  413e16:	in     al,0x0
  413e18:	mov    al,ds:0x7d3b2050
  413e1d:	cmp    eax,0x33601893
  413e22:	(bad)  
  413e24:	sbb    ebp,DWORD PTR [edi-0x55a21b20]
  413e2a:	and    DWORD PTR [ebp+0x70],ebp
  413e2d:	mov    esp,0x9a0f7bc6
  413e32:	repz xor bl,ch
  413e35:	dec    ebx
  413e36:	push   edi
  413e37:	retf   0x4802
  413e3a:	lods   al,BYTE PTR ds:[esi]
  413e3b:	xor    eax,ebx
  413e3d:	pop    esp
  413e3e:	imul   ebx,DWORD PTR [edx+0x20],0x32
  413e42:	sub    BYTE PTR [esi],bl
  413e44:	mov    bh,BYTE PTR [ecx]
  413e46:	mov    ds:0x9a81e9b7,eax
  413e4b:	fwait
  413e4c:	cmc    
  413e4d:	mov    DWORD PTR [ecx+0x38],ebx
  413e50:	pusha  
  413e51:	fdivr  DWORD PTR [ebx-0x32]
  413e54:	mov    ebp,0x49f47ebe
  413e59:	dec    edi
  413e5a:	mov    edx,0xec5e0977
  413e5f:	cmc    
  413e60:	clc    
  413e61:	rcr    BYTE PTR [esi-0x152cd44a],0x16
  413e68:	xor    eax,0x3e0e0923
  413e6d:	xchg   edi,eax
  413e6e:	push   esi
  413e6f:	xor    al,0x9f
  413e71:	or     BYTE PTR [esi-0x1961778a],dl
  413e77:	xor    cl,BYTE PTR [ebp+0x35]
  413e7a:	lods   eax,DWORD PTR ds:[esi]
  413e7b:	jae    0x413ed2
  413e7d:	out    dx,al
  413e7e:	mov    esp,0xa23b7d1c
  413e83:	aas    
  413e84:	ins    BYTE PTR es:[edi],dx
  413e85:	fdiv   DWORD PTR [ebp+eax*2-0xf75112f]
  413e8c:	push   ecx
  413e8d:	std    
  413e8e:	mov    bh,0x5
  413e90:	inc    ebx
  413e91:	add    DWORD PTR [eax+0x261cd501],ebx
  413e97:	stc    
  413e98:	add    BYTE PTR [edi+0x35b1f7df],dl
  413e9e:	fcmovb st,st(5)
  413ea0:	mov    bh,0x25
  413ea2:	mov    esi,0xdd985f4d
  413ea7:	and    bh,bl
  413ea9:	jno    0x413ec6
  413eab:	repnz stos BYTE PTR es:[edi],al
  413ead:	icebp  
  413eae:	ds pop esp
  413eb0:	xor    al,0x74
  413eb2:	mov    edi,DWORD PTR [esi-0x2d]
  413eb5:	and    ecx,ecx
  413eb7:	inc    ebp
  413eb8:	sbb    al,0xad
  413eba:	sbb    ebx,ecx
  413ebc:	(bad)  
  413ebd:	mov    ebp,0x80ed0d7d
  413ec2:	cmp    DWORD PTR [ebx+0x30],ebp
  413ec5:	aas    
  413ec6:	(bad)  
  413ec8:	adc    cl,BYTE PTR [eax-0xa16acba]
  413ece:	push   ebp
  413ecf:	repnz stos BYTE PTR es:[edi],al
  413ed1:	iret   
  413ed2:	mov    eax,ds:0xf32981ab
  413ed7:	int    0xc3
  413ed9:	(bad)  
  413edb:	add    BYTE PTR [edi-0x57],ch
  413ede:	pushf  
  413edf:	lock outs dx,BYTE PTR ds:[esi]
  413ee1:	mov    esi,gs
  413ee3:	stos   BYTE PTR es:[edi],al
  413ee4:	aad    0xdc
  413ee6:	stos   DWORD PTR es:[edi],eax
  413ee7:	jbe    0x413e7a
  413ee9:	sub    dl,BYTE PTR [ebx]
  413eeb:	or     ah,BYTE PTR [ecx]
  413eed:	data16 jno 0x413e85
  413ef0:	fcom   QWORD PTR [ebx]
  413ef2:	vpshufd ymm3,YMMWORD PTR [edx],0x9c
  413ef7:	test   edx,edx
  413ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413efa:	push   edi
  413efb:	jg     0x413ec3
  413efd:	ficom  DWORD PTR [eax]
  413eff:	sbb    al,0x8f
  413f01:	scas   al,BYTE PTR es:[edi]
  413f02:	outs   dx,BYTE PTR ds:[esi]
  413f03:	mov    edx,ss
  413f05:	adc    BYTE PTR [esi],cl
  413f07:	jg     0x413f84
  413f09:	sub    ch,dl
  413f0b:	les    edi,FWORD PTR [eax+0x20]
  413f0e:	(bad)  
  413f0f:	ror    DWORD PTR [ecx],cl
  413f11:	out    dx,eax
  413f12:	jmp    0xf7174df4
  413f17:	dec    esp
  413f18:	pop    ebp
  413f19:	repnz leave 
  413f1b:	in     al,0xf2
  413f1d:	movntps XMMWORD PTR [ecx+0x41],xmm2
  413f21:	or     eax,0x3d8b29c6
  413f26:	aas    
  413f27:	scas   eax,DWORD PTR es:[edi]
  413f28:	clc    
  413f29:	xor    al,ch
  413f2b:	xchg   edi,eax
  413f2c:	and    eax,0x1e5b8d32
  413f31:	pop    esi
  413f32:	sbb    BYTE PTR [edi-0x3893cb2b],bh
  413f38:	mov    WORD PTR [edi+0x77003e56],cs
  413f3e:	add    eax,0x3d26ae34
  413f43:	dec    ecx
  413f44:	adc    DWORD PTR [eax],0x4b
  413f47:	inc    BYTE PTR [eax]
  413f49:	xor    BYTE PTR [esi-0x609efa48],bl
  413f4f:	outs   dx,DWORD PTR ds:[esi]
  413f50:	ret    0x6744
  413f53:	mov    eax,ds:0xbdab794a
  413f58:	mov    al,BYTE PTR [edx+edx*8-0x3c8d6d74]
  413f5f:	mov    eax,0x66bc0ad4
  413f64:	test   al,0xce
  413f66:	aad    0x37
  413f68:	in     eax,dx
  413f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f6a:	jmp    FWORD PTR ds:0x8cf4013a
  413f70:	push   ebx
  413f71:	clc    
  413f72:	popa   
  413f73:	mov    ecx,0xe827922
  413f78:	mov    ah,0xc8
  413f7a:	loope  0x413f33
  413f7c:	or     eax,0xbc3c9019
  413f81:	adc    BYTE PTR [edx-0x7c],dh
  413f84:	aaa    
  413f85:	and    cl,BYTE PTR [edx]
  413f87:	xor    eax,ebx
  413f89:	mov    al,BYTE PTR ds:0xaa442901
  413f8f:	push   esi
  413f90:	(bad)  
  413f91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f92:	or     eax,0xf4302e5c
  413f97:	out    dx,al
  413f98:	jl     0x413f61
  413f9a:	mov    al,0xb7
  413f9c:	icebp  
  413f9d:	fcmovnb st,st(1)
  413f9f:	rdmsr  
  413fa1:	fdiv   QWORD PTR [eax]
  413fa3:	add    eax,0x9d9922b5
  413fa8:	daa    
  413fa9:	imul   BYTE PTR [edx+0xa]
  413fac:	in     eax,0x81
  413fae:	or     al,0x53
  413fb0:	inc    ebx
  413fb1:	inc    eax
  413fb2:	dec    esp
  413fb3:	scas   al,BYTE PTR es:[edi]
  413fb4:	cmp    esp,0xffffffbf
  413fb7:	dec    ecx
  413fb8:	xor    eax,0x50cadac7
  413fbd:	in     eax,dx
  413fbe:	(bad)  
  413fc0:	dec    esp
  413fc1:	or     edx,esi
  413fc3:	mov    ds:0x83bbbd70,al
  413fc8:	ficomp WORD PTR [esi+0x22]
  413fcb:	pushf  
  413fcc:	dec    edi
  413fcd:	ss nop
  413fcf:	push   0x3d15b0b0
  413fd4:	dec    esi
  413fd5:	jne    0x413f9f
  413fd7:	jge    0x413f85
  413fd9:	test   esi,0xf97d8e58
  413fdf:	repnz retf 0x137c
  413fe3:	push   ds
  413fe4:	sti    
  413fe5:	fidivr WORD PTR [eax-0x5b337526]
  413feb:	loop   0x413f6d
  413fed:	mov    eax,0xc9014a06
  413ff2:	sbb    ecx,DWORD PTR [esi-0x45b2a0d5]
  413ff8:	pop    ds
  413ff9:	xchg   edx,eax
  413ffa:	stc    
  413ffb:	mov    ds:0x87cbfdd4,eax
  414000:	mov    dh,0x82
  414002:	mov    ds:0xfe59ace4,eax
  414007:	inc    esp
  414008:	sub    al,0x9a
  41400a:	popa   
  41400b:	jnp    0x41405c
  41400d:	push   0x3247b4cb
  414012:	push   esp
  414013:	hlt    
  414014:	mov    ah,0x79
  414016:	lods   al,BYTE PTR ds:[esi]
  414017:	clc    
  414018:	push   edx
  414019:	inc    edi
  41401a:	shr    BYTE PTR [ebx+0x5a],1
  41401d:	(bad)  
  41401e:	aas    
  41401f:	test   al,0x2e
  414021:	xchg   esp,eax
  414022:	sbb    BYTE PTR [ebp-0x1a],cl
  414025:	sub    al,ch
  414027:	imul   edi,ebp,0x36ae5f43
  41402d:	popa   
  41402e:	adc    bl,BYTE PTR [ecx+0x40]
  414031:	jno    0x414068
  414033:	and    BYTE PTR ds:0xdd51905,cl
  414039:	fprem1 
  41403b:	fcomp  st(2)
  41403d:	inc    edi
  41403e:	xchg   esp,eax
  41403f:	sar    DWORD PTR [ebx+0x60aa9c5c],1
  414045:	adc    al,0x91
  414047:	(bad)  
  414048:	push   0xfffffff8
  41404a:	mov    edx,0x31ba0acc
  41404f:	fs sbb cl,ch
  414052:	scas   eax,DWORD PTR es:[edi]
  414053:	cmp    dl,BYTE PTR [ebx+eax*4-0x1f5e8fd9]
  41405a:	add    BYTE PTR [esi+eiz*1+0x88a2b6e],0x9a
  414062:	inc    edi
  414063:	gs sahf 
  414065:	add    al,0xeb
  414067:	jae    0x4140ac
  414069:	ja     0x4140a0
  41406b:	mov    edi,0x8fbff85f
  414070:	mov    edi,0x4fd2dc6a
  414075:	xchg   esp,eax
  414076:	hlt    
  414077:	or     al,0x7e
  414079:	fdivp  st(2),st
  41407b:	dec    eax
  41407c:	jl     0x4140c3
  41407e:	pop    esp
  41407f:	xchg   ebp,eax
  414080:	(bad)  
  414081:	retf   
  414082:	nop
  414083:	xor    al,0xe5
  414085:	mov    esp,0xac2bd4c5
  41408a:	jle    0x41405a
  41408c:	idiv   DWORD PTR [edi-0x115cd204]
  414092:	xchg   BYTE PTR [edi-0x18],bh
  414095:	mov    al,ah
  414097:	test   ah,ch
  414099:	fs scas al,BYTE PTR es:[edi]
  41409b:	adc    dh,dh
  41409d:	cli    
  41409e:	inc    ecx
  41409f:	rcr    DWORD PTR [ebp-0x5a],1
  4140a2:	push   ds
  4140a3:	retf   
  4140a4:	fsubr  QWORD PTR [ebp+0x4cf30bac]
  4140aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ab:	pop    edi
  4140ac:	mov    dh,0x1b
  4140ae:	adc    bh,bl
  4140b0:	pop    ss
  4140b1:	in     eax,dx
  4140b2:	clc    
  4140b3:	ret    
  4140b4:	push   ebp
  4140b5:	jae    0x4140a0
  4140b7:	jbe    0x414049
  4140b9:	les    ebx,FWORD PTR [eax+eax*2-0x5b]
  4140bd:	daa    
  4140be:	rol    BYTE PTR [ecx],1
  4140c0:	fs pop edx
  4140c2:	mov    WORD PTR [eax],ss
  4140c4:	pop    ds
  4140c5:	adc    al,ch
  4140c7:	dec    edi
  4140c8:	jns    0x41411c
  4140ca:	jnp    0x4140ea
  4140cc:	in     al,0xbe
  4140ce:	jmp    0x4140dc
  4140d0:	dec    eax
  4140d1:	push   edi
  4140d2:	xchg   ebx,eax
  4140d3:	and    eax,0x8921916b
  4140d8:	sti    
  4140d9:	ds cdq 
  4140db:	sti    
  4140dc:	popf   
  4140dd:	fisubr DWORD PTR es:[eax+0x48a8549e]
  4140e4:	xchg   ebp,eax
  4140e5:	mov    dl,0x85
  4140e7:	add    DWORD PTR [eax-0x5d],ebx
  4140ea:	in     al,dx
  4140eb:	jl     0x4140a5
  4140ed:	inc    eax
  4140ee:	dec    eax
  4140ef:	cli    
  4140f0:	xor    esi,DWORD PTR [eax+eiz*4]
  4140f3:	sub    BYTE PTR [esp+edi*1+0x59d765c8],0x30
  4140fb:	call   0xb1b:0xde1c02b8
  414102:	fbstp  TBYTE PTR [esi]
  414104:	cmp    eax,0x3bc24305
  414109:	imul   edx,edi,0xad80f2d9
  41410f:	aad    0x52
  414111:	outs   dx,BYTE PTR ds:[esi]
  414112:	xor    esp,eax
  414114:	pop    ebp
  414115:	xor    al,0xd4
  414117:	mov    cl,0x52
  414119:	outs   dx,DWORD PTR ds:[esi]
  41411a:	call   0x6089752b
  41411f:	fild   DWORD PTR [ebx-0x31]
  414122:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414124:	pop    edx
  414125:	mov    al,0xd6
  414127:	rol    DWORD PTR [ecx],cl
  414129:	in     al,0xaa
  41412b:	bound  edx,QWORD PTR [esi]
  41412d:	jne    0x4140bd
  41412f:	aas    
  414130:	lock popa 
  414132:	test   eax,0xb081404e
  414137:	lock data16 jo 0x4141a5
  41413b:	popa   
  41413c:	push   esi
  41413d:	push   eax
  41413e:	ins    DWORD PTR es:[edi],dx
  41413f:	mov    ah,0x52
  414141:	mov    ebp,0x6a3f78aa
  414146:	xchg   esi,eax
  414147:	loopne 0x41417c
  414149:	push   esp
  41414a:	mov    ah,0x59
  41414c:	mov    edx,0x4e1347ee
  414151:	sbb    ah,bh
  414153:	push   eax
  414154:	sbb    al,cl
  414156:	call   0x7ccbba84
  41415b:	dec    eax
  41415c:	pop    esi
  41415d:	call   0x163b1d02
  414162:	dec    ebp
  414163:	and    al,0x20
  414165:	(bad)  
  414166:	popa   
  414167:	cmc    
  414168:	add    eax,0x41e9c09d
  41416d:	adc    BYTE PTR [edx],bh
  41416f:	xchg   ebp,eax
  414170:	popf   
  414171:	in     eax,dx
  414172:	push   edi
  414173:	mov    al,0xf0
  414175:	sub    bl,BYTE PTR [edx+ebx*1-0x42]
  414179:	leave  
  41417a:	jo     0x4141d6
  41417c:	pop    ss
  41417d:	or     dl,BYTE PTR es:[ebx-0x8]
  414181:	inc    esp
  414182:	push   ecx
  414183:	add    BYTE PTR [ebx],0xf
  414186:	push   eax
  414187:	add    al,0xd7
  414189:	or     bl,ch
  41418b:	loope  0x4141b5
  41418d:	pop    ebp
  41418e:	retf   0xa11c
  414191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414192:	adc    dl,bh
  414194:	jnp    0x41414a
  414196:	mov    al,0x4b
  414198:	push   edi
  414199:	addr16 sbb ebp,esi
  41419c:	jmp    0xda1c:0x15661cfb
  4141a3:	int3   
  4141a4:	movhlps xmm2,xmm4
  4141a7:	hlt    
  4141a8:	cmp    al,BYTE PTR [ebx+0x6e80e451]
  4141ae:	mov    edx,0x29ba9a44
  4141b3:	test   bh,bl
  4141b5:	sbb    edx,edx
  4141b7:	push   ds
  4141b8:	jnp    0x4141f2
  4141ba:	std    
  4141bb:	iret   
  4141bc:	fdivr  DWORD PTR [edx+eax*4-0x40]
  4141c0:	sub    al,0x69
  4141c2:	in     al,dx
  4141c3:	ins    DWORD PTR es:[edi],dx
  4141c4:	or     ax,sp
  4141c7:	add    eax,0x5947c106
  4141cc:	(bad)  
  4141cd:	stc    
  4141ce:	sbb    eax,0xf1e4106d
  4141d3:	hlt    
  4141d4:	(bad)  
  4141d5:	xchg   esi,eax
  4141d6:	adc    BYTE PTR [ebp-0x23431c6b],0x56
  4141dd:	push   0x349cdc6c
  4141e2:	stc    
  4141e3:	mov    esi,0xd5826e36
  4141e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141ea:	sbb    DWORD PTR [esi-0x6b],0xffffffa8
  4141ee:	int    0x16
  4141f0:	jecxz  0x4141b6
  4141f2:	jae    0x414199
  4141f4:	lds    edx,FWORD PTR [esp+ecx*1]
  4141f7:	ret    
  4141f8:	xor    al,0x38
  4141fa:	int    0xff
  4141fc:	cmp    eax,0xd97e9bec
  414201:	or     ah,BYTE PTR [edi+0x75]
  414204:	jmp    0xbab9:0x91ed2d3c
  41420b:	repz xor al,0x87
  41420e:	mov    edx,0x8d294a8b
  414213:	gs pop ebp
  414215:	jnp    0x41425e
  414217:	mov    bl,0x96
  414219:	push   cs
  41421a:	retf   0xe48e
  41421d:	push   cs
  41421e:	hlt    
  41421f:	jo     0x41426a
  414221:	xchg   esi,eax
  414222:	fisub  WORD PTR [edx-0x39]
  414225:	fbstp  TBYTE PTR [ebp-0x40]
  414228:	mov    bh,0xb1
  41422a:	dec    edx
  41422b:	pop    es
  41422c:	sub    eax,0x727357c1
  414231:	cli    
  414232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414233:	retf   0x2644
  414236:	lds    ecx,FWORD PTR [edx-0x77078f61]
  41423c:	cmp    BYTE PTR [ebx+ebp*4-0x36df0404],bl
  414243:	int3   
  414244:	mov    al,ds:0x54a2a509
  414249:	nop
  41424a:	arpl   WORD PTR ds:0x7157aa85,dx
  414250:	data16 adc dh,BYTE PTR ds:0xc08ccdb
  414257:	jl     0x414292
  414259:	inc    esp
  41425a:	sbb    BYTE PTR [edx-0x72],ah
  41425d:	fwait
  41425e:	or     BYTE PTR [esi+0x6f11dc26],dh
  414264:	jo     0x4141f7
  414266:	jp     0x41428d
  414268:	xor    edi,DWORD PTR [edx+esi*4+0x67f5676c]
  41426f:	and    esp,DWORD PTR [edx+edx*4]
  414272:	push   cs
  414273:	mov    dh,0x57
  414275:	loope  0x4141fa
  414277:	jne    0x414242
  414279:	push   ebp
  41427a:	jp     0x4142cd
  41427c:	xor    edx,DWORD PTR [edx+ecx*2-0x478981a3]
  414283:	in     al,dx
  414284:	addr16 clc 
  414286:	sub    eax,0xafe20d44
  41428b:	pop    ebp
  41428c:	xor    BYTE PTR [edi],dh
  41428e:	xor    DWORD PTR [eax+eax*2-0x35],0x45
  414293:	rcl    BYTE PTR [ecx+0x35bcdcfa],0xc3
  41429a:	jle    0x414313
  41429c:	rcl    BYTE PTR [eax],cl
  41429e:	retf   
  41429f:	sub    DWORD PTR [ecx+0x61635360],0x7a2e4622
  4142a9:	cmp    al,BYTE PTR [ebx+0x6e]
  4142ac:	es mov esp,0x370e0e7
  4142b2:	mov    ebp,0x197dfec2
  4142b7:	add    bl,bl
  4142b9:	adc    ebx,edi
  4142bb:	mov    eax,0x21d7dcce
  4142c0:	ret    
  4142c1:	push   0xd7ec581e
  4142c6:	aas    
  4142c7:	icebp  
  4142c8:	jnp    0x4142b1
  4142ca:	in     eax,0x37
  4142cc:	ret    
  4142cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142ce:	mul    DWORD PTR [ecx+0x1d23a7b1]
  4142d4:	outs   dx,DWORD PTR ds:[esi]
  4142d5:	xor    edi,DWORD PTR [ecx]
  4142d7:	lods   al,BYTE PTR ds:[esi]
  4142d8:	mov    edx,0x4a4cdefb
  4142dd:	mov    esp,0xfac44e67
  4142e2:	mov    eax,0xe3c03529
  4142e7:	pop    es
  4142e8:	jle    0x4142ec
  4142ea:	pop    ecx
  4142eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142ec:	push   ebx
  4142ed:	js     0x414342
  4142ef:	sub    al,0x5d
  4142f1:	outs   dx,BYTE PTR ds:[esi]
  4142f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142f3:	jae    0x414364
  4142f5:	fbstp  TBYTE PTR [ebx]
  4142f7:	loop   0x41432f
  4142f9:	xor    ch,dh
  4142fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142fc:	ins    DWORD PTR es:[edi],dx
  4142fd:	jno    0x41436a
  4142ff:	ss dec eax
  414301:	sub    eax,0x1fa4b27a
  414306:	es or  al,cl
  414309:	xchg   ecx,eax
  41430a:	push   esp
  41430b:	lods   al,BYTE PTR ds:[esi]
  41430c:	and    BYTE PTR [edx],bl
  41430e:	cs sub al,0x3e
  414311:	and    eax,0x51ffd85a
  414316:	loopne 0x414378
  414318:	add    ah,bh
  41431a:	push   es
  41431b:	das    
  41431c:	xchg   ebx,eax
  41431d:	jne    0x41436f
  41431f:	aam    0xd
  414321:	pop    ebx
  414322:	pop    esp
  414323:	dec    edi
  414324:	mov    edx,0x1c76d1cb
  414329:	mov    esp,0xaf96f0c
  41432e:	hlt    
  41432f:	or     al,0x1d
  414331:	push   ss
  414332:	in     al,dx
  414333:	ins    DWORD PTR es:[edi],dx
  414334:	mov    cs:0x615c3c42,eax
  41433a:	jno    0x4142cd
  41433c:	sub    al,0xa2
  41433e:	cdq    
  41433f:	dec    edi
  414340:	jge    0x414396
  414342:	cmp    BYTE PTR [eax+0xd],cl
  414345:	xor    eax,0x30f60927
  41434a:	jmp    0x6179:0xbd300b54
  414351:	std    
  414352:	ja     0x4142e1
  414354:	jmp    0x414347
  414356:	pusha  
  414357:	jbe    0x414316
  414359:	jo     0x41432a
  41435b:	cmc    
  41435c:	enter  0xbe1f,0x1d
  414360:	or     DWORD PTR [ebp-0x1540406b],esp
  414366:	mov    WORD PTR ds:[ecx+0x94fdb97],?
  41436d:	xchg   esi,eax
  41436e:	jmp    0x414356
  414370:	xor    DWORD PTR [eax-0x1c],esp
  414373:	stc    
  414374:	sbb    bh,al
  414376:	or     eax,0x5da19858
  41437b:	cmp    dx,WORD PTR [edx]
  41437e:	push   0x46fac82
  414383:	in     eax,0xd1
  414385:	test   eax,0x446c1ef9
  41438a:	test   dl,0x5e
  41438d:	add    al,0x5a
  41438f:	ret    0xf560
  414392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414393:	and    eax,0x9dd4632a
  414398:	call   0x78b54e8d
  41439d:	cmp    bl,BYTE PTR [ebx+0xd2044de]
  4143a3:	xchg   BYTE PTR [ecx],ch
  4143a5:	sub    DWORD PTR [ebx+0x392e6cc6],0x1b60862a
  4143af:	or     DWORD PTR [esi+0x60],esi
  4143b2:	mov    al,ds:0x7d5e0028
  4143b7:	xchg   esi,eax
  4143b8:	and    DWORD PTR [esi+0x5a],edi
  4143bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143bc:	pop    esp
  4143bd:	imul   ebx,DWORD PTR [ebx+0x71dd66c5],0x298d5fbd
  4143c7:	shl    DWORD PTR [eax-0x4d63f79e],0x89
  4143ce:	inc    ebx
  4143cf:	push   es
  4143d0:	jl     0x41444b
  4143d2:	ret    
  4143d3:	mov    cl,0xa6
  4143d5:	in     al,dx
  4143d6:	push   edi
  4143d7:	jnp    0x4143cb
  4143d9:	dec    edx
  4143da:	ins    BYTE PTR es:[edi],dx
  4143db:	ret    
  4143dc:	out    dx,eax
  4143dd:	(bad)  
  4143de:	into   
  4143df:	sub    DWORD PTR gs:[ecx+0x53],edi
  4143e3:	outs   dx,DWORD PTR ds:[esi]
  4143e4:	dec    esp
  4143e5:	fwait
  4143e6:	sub    eax,0xc4b3822e
  4143eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143ec:	lods   al,BYTE PTR ds:[esi]
  4143ed:	jl     0x4143c5
  4143ef:	jb     0x4143be
  4143f1:	or     BYTE PTR [eax+0x2f],dl
  4143f4:	xchg   esi,ecx
  4143f6:	popa   
  4143f7:	data16 outs dx,BYTE PTR ds:[esi]
  4143f9:	lock or bh,ch
  4143fc:	fcomp  QWORD PTR [esi+0x33]
  4143ff:	jmp    0x4b512d4f
  414404:	mov    ebx,0x3d38c105
  414409:	xor    BYTE PTR [edi],ch
  41440b:	and    BYTE PTR [edi],ch
  41440d:	scas   eax,DWORD PTR es:[edi]
  41440e:	shr    ebp,1
  414410:	shl    cl,1
  414412:	pop    ecx
  414413:	int3   
  414414:	push   edi
  414415:	jb     0x414463
  414417:	lahf   
  414418:	and    eax,0xcd010b52
  41441d:	inc    DWORD PTR [eax+0x19]
  414420:	stos   DWORD PTR es:[edi],eax
  414421:	call   0xe11:0xb5bb506b
  414428:	pop    edi
  414429:	out    0x14,al
  41442b:	fimul  WORD PTR [ecx+0x4b3e8ab7]
  414431:	jo     0x414402
  414433:	cs aam 0x80
  414436:	inc    edx
  414437:	stc    
  414438:	cdq    
  414439:	aam    0xd9
  41443b:	cmp    BYTE PTR [ebx],al
  41443d:	jae    0x414462
  41443f:	js     0x41443a
  414441:	xor    eax,0xd47b707e
  414446:	cmp    cl,BYTE PTR [ebp-0x7764f76b]
  41444c:	fist   WORD PTR [eax-0x4a59fe45]
  414452:	mov    ecx,0xf0ad1c5b
  414457:	mov    eax,DWORD PTR [eax+0x61c1ed64]
  41445d:	jecxz  0x414454
  41445f:	jae    0x414495
  414461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414462:	adc    eax,0xd46d1298
  414467:	cmp    ah,BYTE PTR [edx-0x63]
  41446a:	sub    ebx,eax
  41446c:	stos   BYTE PTR es:[edi],al
  41446d:	mov    DWORD PTR [ebp+0x490cd64a],eax
  414473:	les    ebp,FWORD PTR [eax+0x2de2b76c]
  414479:	(bad)  
  41447a:	rcr    BYTE PTR ds:0x2a8b8906,1
  414480:	xchg   DWORD PTR [ecx+esi*4-0x9],ebx
  414484:	dec    ebp
  414485:	xlat   BYTE PTR ds:[ebx]
  414486:	mov    BYTE PTR [esi+0x42],ch
  414489:	sub    DWORD PTR [esp+eiz*8],eax
  41448c:	jmp    0x8511:0xb2381884
  414493:	addr16 icebp 
  414495:	dec    esp
  414496:	std    
  414497:	xchg   ecx,eax
  414498:	retf   
  414499:	lds    ecx,FWORD PTR [ebx+0x3]
  41449c:	hlt    
  41449d:	addr16 popf 
  41449f:	inc    ebp
  4144a0:	sbb    bh,BYTE PTR [esi]
  4144a2:	jae    0x4144ba
  4144a4:	mov    ch,0xc4
  4144a6:	push   ds
  4144a7:	sub    ebx,DWORD PTR [edx-0x69]
  4144aa:	les    ebp,FWORD PTR [edx+0x6f085768]
  4144b0:	jge    0x4144ed
  4144b2:	call   0x16c55f6e
  4144b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144b8:	and    eax,0x2655c94a
  4144bd:	mov    eax,DWORD PTR [ebp-0x14]
  4144c0:	xchg   ebp,eax
  4144c1:	icebp  
  4144c2:	mov    BYTE PTR [ebx-0x899c6a4],ch
  4144c8:	jb     0x414457
  4144ca:	xor    edi,esi
  4144cc:	or     dl,BYTE PTR [edx+0x4a9140ae]
  4144d2:	es dec edx
  4144d4:	mov    esi,0xfd3dc379
  4144d9:	xchg   ecx,eax
  4144da:	and    dh,dh
  4144dc:	cdq    
  4144dd:	sbb    al,0xe7
  4144df:	stos   BYTE PTR es:[edi],al
  4144e0:	and    DWORD PTR [ecx-0x7319053e],0xffffffcd
  4144e7:	icebp  
  4144e8:	and    DWORD PTR [edx],esp
  4144ea:	int3   
  4144eb:	adc    bl,0x2a
  4144ee:	ins    DWORD PTR es:[edi],dx
  4144ef:	jns    0x414521
  4144f1:	pop    ebp
  4144f2:	cmp    eax,DWORD PTR [eax-0x4e24ce40]
  4144f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144f9:	in     eax,dx
  4144fa:	(bad)  
  4144fb:	push   edx
  4144fc:	leave  
  4144fd:	fs dec eax
  4144ff:	pop    eax
  414500:	(bad)  
  414501:	repnz jecxz 0x414569
  414504:	icebp  
  414505:	cld    
  414506:	shr    DWORD PTR [eax],cl
  414508:	sub    DWORD PTR [ebx+0x27e8b824],eax
  41450e:	jmp    0xad403ea7
  414513:	dec    eax
  414514:	inc    ebx
  414515:	sub    al,0x4a
  414517:	pop    ecx
  414518:	in     al,0xd2
  41451a:	call   0x28bb4679
  41451f:	pop    eax
  414520:	(bad)  
  414521:	mov    edx,0x886d9b5e
  414526:	dec    esp
  414527:	ds xchg edi,eax
  414529:	mov    al,ds:0x4998ddf7
  41452e:	push   ss
  41452f:	sbb    ah,bh
  414531:	popa   
  414532:	dec    ebp
  414533:	es int3 
  414535:	mov    ebp,0x55bbaa19
  41453a:	sbb    dl,al
  41453c:	xchg   esp,eax
  41453d:	mov    esp,0x49aebef5
  414542:	mov    eax,0xe3337ca8
  414547:	iret   
  414548:	test   BYTE PTR [edx+0x78],bh
  41454b:	lds    esp,FWORD PTR [esi+0x58]
  41454e:	js     0x414558
  414550:	stos   BYTE PTR es:[edi],al
  414551:	cdq    
  414552:	fisttp QWORD PTR [edi]
  414554:	sar    BYTE PTR [edi-0x4e],0x3e
  414558:	in     al,0xcb
  41455a:	jl     0x4145c2
  41455c:	sti    
  41455d:	jb     0x4145a9
  41455f:	inc    eax
  414560:	rcl    DWORD PTR [esi-0x260bcc1e],0xf5
  414567:	retf   
  414568:	scas   al,BYTE PTR es:[edi]
  414569:	mov    ds:0x5a9605af,eax
  41456e:	mov    ah,BYTE PTR [ecx]
  414570:	mov    ebx,0x74bebba9
  414575:	and    al,0xa9
  414577:	xchg   edx,eax
  414578:	ret    
  414579:	xchg   edx,eax
  41457a:	jbe    0x4145db
  41457c:	ins    BYTE PTR es:[edi],dx
  41457d:	dec    ebp
  41457e:	not    BYTE PTR [esp+edi*1-0x5a]
  414582:	push   ecx
  414583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414584:	and    BYTE PTR [ebx-0x77],al
  414587:	sub    BYTE PTR [ecx-0x481b4de8],dh
  41458d:	sub    al,0x82
  41458f:	pop    ebx
  414590:	and    al,0x4b
  414592:	push   0x8472668c
  414597:	mov    ds:0x78a39281,al
  41459c:	test   eax,0x8aba3fc5
  4145a1:	(bad)  
  4145a2:	idiv   BYTE PTR [ebx+0x4a]
  4145a5:	pop    ss
  4145a6:	dec    edi
  4145a7:	fwait
  4145a8:	sbb    al,0x5
  4145aa:	lods   eax,DWORD PTR ds:[esi]
  4145ab:	push   DWORD PTR [ebp-0x2a]
  4145ae:	jge    0x414600
  4145b0:	js     0x4145bf
  4145b2:	adc    edx,DWORD PTR [ebp-0xb625a2c]
  4145b8:	sub    eax,0xc87a2bff
  4145bd:	pop    esi
  4145be:	out    0xc,al
  4145c0:	call   ebx
  4145c2:	xchg   edx,eax
  4145c3:	mov    esi,0x274b0fb6
  4145c8:	arpl   WORD PTR ds:0x12aa92b6,bx
  4145ce:	push   eax
  4145cf:	xchg   edi,eax
  4145d0:	out    0x28,al
  4145d2:	mov    bl,0xee
  4145d4:	call   0x1b1f:0xf7a99dc7
  4145db:	cmp    BYTE PTR [ecx],bh
  4145dd:	popf   
  4145de:	aad    0xf
  4145e0:	(bad)  
  4145e1:	fnstcw WORD PTR [ebx+ebp*2+0x49]
  4145e5:	sub    dh,BYTE PTR [edi]
  4145e7:	adc    esp,DWORD PTR [esi]
  4145e9:	sahf   
  4145ea:	sbb    DWORD PTR [esi+0x5e],esi
  4145ed:	sub    BYTE PTR [ebx-0x57],ch
  4145f0:	in     eax,0x2a
  4145f2:	push   edi
  4145f3:	popf   
  4145f4:	cdq    
  4145f5:	and    bh,BYTE PTR fs:[ecx+0x53]
  4145f9:	dec    edx
  4145fa:	mov    ebx,0x87c4b364
  4145ff:	push   esi
  414600:	pop    edx
  414601:	scas   al,BYTE PTR es:[edi]
  414602:	jg     0x41459a
  414604:	cmp    eax,0xbaf6e2db
  414609:	mov    al,0x7b
  41460b:	sahf   
  41460c:	or     dh,dh
  41460e:	mov    ebx,0x450f36b6
  414613:	out    dx,eax
  414614:	cmp    BYTE PTR [edi-0x5f4097e7],ch
  41461a:	mov    dh,0xed
  41461c:	leave  
  41461d:	fisub  WORD PTR [edi-0x5d451be5]
  414623:	retf   0xf576
  414626:	push   ecx
  414627:	je     0x41467b
  414629:	(bad)  
  41462a:	call   0x72fb5ac9
  41462f:	out    0x9,al
  414631:	in     al,0x44
  414633:	sub    DWORD PTR [ebp-0x28d9ae97],ebp
  414639:	push   ebx
  41463a:	or     esi,DWORD PTR [edx+edx*2]
  41463d:	pusha  
  41463e:	add    DWORD PTR [ecx-0x3e],esp
  414641:	xlat   BYTE PTR ds:[ebx]
  414642:	jle    0x414661
  414644:	sbb    DWORD PTR cs:[eax+edx*1+0x4b],ebp
  414649:	inc    eax
  41464a:	cmc    
  41464b:	fisttp DWORD PTR [edx-0x70]
  41464e:	sbb    al,0x92
  414650:	stos   DWORD PTR es:[edi],eax
  414651:	popa   
  414652:	push   esp
  414653:	xchg   DWORD PTR [edi+0x15399856],edx
  414659:	push   ecx
  41465a:	add    BYTE PTR [eax+0x49958514],cl
  414660:	add    edi,DWORD PTR [eax+0x3c]
  414663:	fs pop ss
  414665:	popa   
  414666:	cmp    bh,BYTE PTR [esi+esi*4]
  414669:	out    dx,eax
  41466a:	and    al,0x7a
  41466c:	fadd   DWORD PTR [edi]
  41466e:	and    DWORD PTR [ebx-0x8],edi
  414671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414672:	outs   dx,DWORD PTR ds:[esi]
  414673:	rcr    DWORD PTR [ecx],cl
  414675:	fild   DWORD PTR [edx+esi*4]
  414678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414679:	ror    edx,1
  41467b:	xchg   DWORD PTR [edx-0x58],esp
  41467e:	adc    BYTE PTR [ebx-0x11],bh
  414681:	inc    ecx
  414682:	je     0x414693
  414684:	shl    BYTE PTR [esi],0x3d
  414687:	dec    edx
  414688:	stc    
  414689:	repnz cwde 
  41468b:	js     0x414621
  41468d:	leave  
  41468e:	call   0x6ce2:0x56cd0cc2
  414695:	aam    0x7f
  414697:	push   ds
  414698:	call   0x765ddd5a
  41469d:	popa   
  41469e:	pop    edx
  41469f:	or     ch,dh
  4146a1:	push   cs
  4146a2:	(bad)  
  4146a3:	jno    0x4146b8
  4146a5:	jae    0x4146a9
  4146a7:	sub    DWORD PTR [ebx-0x7d],ecx
  4146aa:	mov    WORD PTR [edx+eax*8-0x46afd0f0],ds
  4146b1:	ret    
  4146b2:	inc    ebp
  4146b3:	retf   0xbe24
  4146b6:	xchg   ch,dl
  4146b8:	enter  0x455e,0x2d
  4146bc:	cs daa 
  4146be:	inc    esi
  4146bf:	pop    edx
  4146c0:	loopne 0x414724
  4146c2:	in     al,0xb2
  4146c4:	sub    al,0xa0
  4146c6:	test   BYTE PTR [edx],al
  4146c8:	(bad)  
  4146c9:	dec    ebx
  4146ca:	jo     0x4146ee
  4146cc:	push   ecx
  4146cd:	fstp   DWORD PTR [ebx]
  4146cf:	inc    ebx
  4146d0:	mov    dl,0xea
  4146d2:	sub    bh,cl
  4146d4:	sbb    eax,0x272e0896
  4146d9:	mov    WORD PTR [eax-0xc0daba1],?
  4146df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146e0:	add    eax,0xf10565c2
  4146e5:	loopne 0x4146bb
  4146e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146e8:	mov    esp,0x419410b7
  4146ed:	push   esi
  4146ee:	cmp    bh,dh
  4146f0:	fld    DWORD PTR [ecx+eax*4]
  4146f3:	jo     0x4146b9
  4146f5:	and    eax,0xbe12fa19
  4146fa:	xchg   ebp,eax
  4146fb:	sub    BYTE PTR [esi+esi*4],bl
  4146fe:	cli    
  4146ff:	aam    0x87
  414701:	adc    BYTE PTR [esi+edi*8+0x24a76dff],0x53
  414709:	fdiv   st(1),st
  41470b:	mov    eax,0xca53cbef
  414710:	fistp  QWORD PTR [ebp-0xbf47ff5]
  414716:	call   edi
  414718:	xor    al,dl
  41471a:	push   ebp
  41471b:	in     al,0x18
  41471d:	(bad)  
  41471e:	shr    eax,cl
  414720:	push   esi
  414721:	aaa    
  414722:	ror    BYTE PTR [esi-0x79e4606f],1
  414728:	mov    eax,0x9f68f13e
  41472d:	xchg   DWORD PTR [ebx-0x7],esi
  414730:	fwait
  414731:	mov    edx,0xd6bdbce4
  414736:	push   ebp
  414737:	into   
  414738:	clc    
  414739:	pushf  
  41473a:	xor    BYTE PTR [ebx-0x7],ch
  41473d:	cmp    eax,0x49a21195
  414742:	sbb    BYTE PTR [ecx+0x6c8e141c],bh
  414748:	xchg   edi,eax
  414749:	stos   DWORD PTR es:[edi],eax
  41474a:	xchg   esi,eax
  41474b:	pop    edx
  41474c:	push   ebp
  41474d:	push   ds
  41474e:	dec    edx
  41474f:	inc    ebx
  414750:	ds inc ebx
  414752:	mov    BYTE PTR [ecx-0x44],bl
  414755:	dec    eax
  414756:	arpl   ax,dx
  414758:	je     0x414703
  41475a:	mov    esp,0x1a53967b
  41475f:	retf   0x502e
  414762:	push   ebp
  414763:	xor    al,0x96
  414765:	(bad)  
  414767:	xor    edx,DWORD PTR [eax+0x1e]
  41476a:	test   BYTE PTR [ecx],ah
  41476c:	outs   dx,DWORD PTR ds:[esi]
  41476d:	icebp  
  41476e:	xor    ebx,esp
  414770:	dec    edx
  414771:	clc    
  414772:	jecxz  0x414769
  414774:	xor    BYTE PTR ds:0x9a5433e1,dl
  41477a:	loop   0x4147c3
  41477c:	add    bl,BYTE PTR [edx-0x15ce9cba]
  414782:	push   0xffffffbf
  414784:	jo     0x41476a
  414786:	pop    eax
  414787:	inc    ebp
  414788:	stos   BYTE PTR es:[edi],al
  414789:	(bad)  
  41478a:	push   esi
  41478b:	or     DWORD PTR [ebx+edi*1],ecx
  41478e:	mov    bh,al
  414790:	xchg   ebp,eax
  414791:	icebp  
  414792:	loopne 0x414728
  414794:	jmp    0x102f:0xe4f7515b
  41479b:	jne    0x4147f1
  41479d:	or     al,0xe0
  41479f:	sbb    dl,BYTE PTR [ecx+0x2c]
  4147a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147a3:	xor    dh,BYTE PTR [edi+0x39]
  4147a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147a7:	lock into 
  4147a9:	test   ecx,edi
  4147ab:	test   al,0x89
  4147ad:	idiv   DWORD PTR [edx+ebp*2-0x59]
  4147b1:	cmp    BYTE PTR [edi+0x2b],dh
  4147b4:	lock gs icebp 
  4147b7:	push   edi
  4147b8:	xchg   DWORD PTR [edx],esp
  4147ba:	jbe    0x414787
  4147bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147bd:	sbb    bh,BYTE PTR [edx]
  4147bf:	loop   0x4147c4
  4147c1:	gs jge 0x414830
  4147c4:	sahf   
  4147c5:	fnstsw WORD PTR [ecx]
  4147c7:	dec    ebx
  4147c8:	into   
  4147c9:	push   eax
  4147ca:	test   BYTE PTR [ebx],cl
  4147cc:	not    BYTE PTR [esi+0x5b2ec66c]
  4147d2:	dec    edx
  4147d3:	adc    al,0xec
  4147d5:	retf   0x4f14
  4147d8:	imul   BYTE PTR [ebx+0x4c]
  4147db:	adc    eax,0x80e1dc84
  4147e0:	mov    bh,BYTE PTR [ecx+0x56fd8d34]
  4147e6:	or     ch,BYTE PTR [ecx-0x5c4bdf6]
  4147ec:	adc    dh,BYTE PTR [eax]
  4147ee:	loop   0x4147fc
  4147f0:	add    DWORD PTR [eax],ebx
  4147f2:	inc    edi
  4147f3:	xchg   ecx,eax
  4147f4:	bnd jmp 0x6503c86
  4147fa:	retf   
  4147fb:	mov    edi,0xc934f05f
  414800:	fdivr  st,st(3)
  414802:	fidiv  DWORD PTR [eax]
  414804:	rcl    ecx,0xe2
  414807:	mov    esp,0x7910890a
  41480c:	aam    0x6a
  41480e:	inc    ecx
  41480f:	mov    ebp,0xcf35d4b4
  414814:	in     al,0x39
  414816:	leave  
  414817:	fwait
  414818:	outs   dx,BYTE PTR ds:[esi]
  414819:	loop   0x4147ce
  41481b:	mov    eax,ds:0x6bc96cf1
  414820:	call   0x554d65a8
  414825:	add    ebp,DWORD PTR [ebx]
  414827:	mov    ebp,0x47550710
  41482c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41482d:	cwde   
  41482e:	out    0xde,al
  414830:	jecxz  0x414810
  414832:	xor    BYTE PTR [esi],dl
  414834:	sbb    al,0xd6
  414836:	add    BYTE PTR [edx+edx*4-0x40c76677],cl
  41483d:	fsub   QWORD PTR [ebp-0x6e]
  414840:	push   es
  414841:	dec    edi
  414842:	popa   
  414843:	dec    ebp
  414844:	jg     0x414869
  414846:	add    eax,0xac781a08
  41484b:	retf   0x37ac
  41484e:	inc    ebp
  41484f:	retf   
  414850:	jno    0x41489d
  414852:	mov    bl,BYTE PTR ds:0x29b156a2
  414858:	fild   DWORD PTR [ecx]
  41485a:	sti    
  41485b:	push   0xc6dd9f68
  414860:	leave  
  414861:	pop    eax
  414862:	test   ebx,ebx
  414864:	aam    0x3b
  414866:	hlt    
  414867:	ret    0x7842
  41486a:	je     0x4148e3
  41486c:	cmp    DWORD PTR [ebx+0x692fa005],ebx
  414872:	push   esi
  414873:	xchg   ebx,eax
  414874:	cli    
  414875:	js     0x4148e8
  414877:	fdivr  QWORD PTR [esi-0x5eccd2bc]
  41487d:	jg     0x414822
  41487f:	inc    esi
  414880:	daa    
  414881:	das    
  414882:	in     eax,0xeb
  414884:	dec    ebx
  414885:	(bad)  
  414886:	not    BYTE PTR [esi+0x4d]
  414889:	call   0xe23c1eac
  41488e:	lock inc ebx
  414890:	imul   eax
  414892:	iret   
  414893:	scas   eax,DWORD PTR es:[edi]
  414894:	jns    0x414888
  414896:	sbb    dl,dh
  414898:	mov    cl,0x96
  41489a:	pop    esi
  41489b:	loop   0x41481f
  41489d:	dec    edi
  41489e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41489f:	enter  0xe0f,0xa1
  4148a3:	imul   esi,DWORD PTR [eax],0xbd2931d0
  4148a9:	aam    0x2d
  4148ab:	outs   dx,BYTE PTR ds:[esi]
  4148ac:	jmp    0x9caf:0x559e2738
  4148b3:	retf   0x369c
  4148b6:	imul   eax,ecx,0xaa33c3be
  4148bc:	pop    esi
  4148bd:	push   0x21fd9f75
  4148c2:	fcom   DWORD PTR [ecx]
  4148c4:	rcl    BYTE PTR [esi-0x4e],1
  4148c7:	push   ds
  4148c8:	hlt    
  4148c9:	fisubr DWORD PTR [edx+0x36]
  4148cc:	adc    ah,ch
  4148ce:	int    0x86
  4148d0:	retf   0x1914
  4148d3:	xchg   ecx,eax
  4148d4:	out    dx,eax
  4148d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148d6:	sahf   
  4148d7:	push   edx
  4148d8:	fnsave [ebx+0x666a7ff0]
  4148de:	adc    edi,DWORD PTR [eax+0x3c]
  4148e1:	and    DWORD PTR [ebx+0x21471e4],ecx
  4148e7:	dec    eax
  4148e8:	leave  
  4148e9:	gs ret 0xb18
  4148ed:	stos   BYTE PTR es:[edi],al
  4148ee:	je     0x41489b
  4148f0:	cmp    al,BYTE PTR [ebp-0x672d30d4]
  4148f6:	cli    
  4148f7:	sti    
  4148f8:	push   eax
  4148f9:	xor    bl,bl
  4148fb:	leave  
  4148fc:	mov    cl,0x6c
  4148fe:	fst    QWORD PTR [edi]
  414900:	mov    bh,0x8b
  414902:	add    al,0x3a
  414904:	pop    ds
  414905:	repnz push ecx
  414907:	mov    esp,0x63424096
  41490c:	xor    ecx,DWORD PTR [ebx+ecx*8-0x2]
  414910:	(bad)  
  414911:	jae    0x4148b4
  414913:	or     eax,0xd2e00d18
  414918:	outs   dx,BYTE PTR ds:[esi]
  414919:	adc    BYTE PTR [ecx-0x1a],dh
  41491c:	test   eax,0xc735dafe
  414921:	push   ds
  414922:	jb     0x4148c2
  414924:	xlat   BYTE PTR ds:[ebx]
  414925:	push   edi
  414926:	push   es
  414927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414928:	dec    BYTE PTR [ecx+0x4d]
  41492b:	mov    ah,0xd6
  41492d:	jno    0x41492f
  41492f:	(bad)  
  414930:	xor    ebx,ecx
  414932:	loope  0x4148ed
  414934:	mov    WORD PTR [edx-0x57],ss
  414937:	mov    ch,0xc6
  414939:	pop    ss
  41493a:	retf   
  41493b:	mov    dl,0x93
  41493d:	hlt    
  41493e:	dec    ebp
  41493f:	scas   al,BYTE PTR es:[edi]
  414940:	dec    eax
  414941:	push   0xffffffdf
  414943:	adc    DWORD PTR [esi],ebx
  414945:	lods   eax,DWORD PTR ds:[esi]
  414946:	push   ds
  414947:	out    0xa,al
  414949:	popf   
  41494a:	cwde   
  41494b:	mul    bl
  41494d:	pop    eax
  41494e:	or     eax,0x49364433
  414953:	lea    ecx,[edx+0x24afffd6]
  414959:	add    al,0xfe
  41495b:	mov    dh,0x29
  41495d:	aaa    
  41495e:	arpl   dx,bx
  414960:	loope  0x414933
  414962:	xor    edi,DWORD PTR [ecx*4-0x15222111]
  414969:	mov    edx,0x1ae8b2c9
  41496e:	andps  xmm5,XMMWORD PTR [esi]
  414971:	fmul   QWORD PTR [ebx+ecx*1-0x1d]
  414975:	cmp    ecx,DWORD PTR [ebx+edi*8-0x46ef12b9]
  41497c:	jecxz  0x414923
  41497e:	sub    dh,dl
  414980:	iret   
  414981:	dec    esi
  414982:	(bad)  
  414983:	ss sbb eax,0x602d0ce0
  414989:	mov    ds:0x853f103e,al
  41498e:	sub    BYTE PTR [edx+0x72],0xe3
  414992:	imul   eax,ebx,0x5c
  414995:	sbb    eax,0xe345333d
  41499a:	inc    ecx
  41499b:	repz loope 0x4149f2
  41499e:	in     eax,0x7
  4149a0:	push   cs
  4149a1:	inc    DWORD PTR [ecx+0x1fb6233b]
  4149a7:	mov    ds:0x98b8b232,eax
  4149ac:	loopne 0x414a26
  4149ae:	dec    esp
  4149af:	dec    ebp
  4149b0:	inc    edi
  4149b1:	sub    BYTE PTR [esi+edi*1+0x44],bh
  4149b5:	inc    ebx
  4149b6:	aam    0xee
  4149b8:	je     0x4149c2
  4149ba:	stos   BYTE PTR es:[edi],al
  4149bb:	cmp    bl,BYTE PTR [esp+ebx*2+0x12]
  4149bf:	mov    bl,0x92
  4149c1:	call   0x748b:0x9a51ef64
  4149c8:	xor    edi,DWORD PTR [edi]
  4149ca:	or     BYTE PTR [eax-0x561f0b3c],0x79
  4149d1:	xor    dl,BYTE PTR [eax-0x6f8db07e]
  4149d7:	pusha  
  4149d8:	mov    eax,0xeb508f88
  4149dd:	adc    DWORD PTR [ebx+0x51c76653],ebp
  4149e3:	out    dx,eax
  4149e4:	dec    eax
  4149e5:	ins    BYTE PTR es:[edi],dx
  4149e6:	test   eax,0x93358261
  4149eb:	adc    esi,0x1a
  4149ee:	stos   DWORD PTR es:[edi],eax
  4149ef:	pusha  
  4149f0:	pop    edx
  4149f1:	xchg   esp,eax
  4149f2:	push   eax
  4149f3:	mov    dl,0x3e
  4149f5:	aaa    
  4149f6:	std    
  4149f7:	lods   al,BYTE PTR ds:[esi]
  4149f8:	xchg   esp,eax
  4149f9:	xchg   DWORD PTR [edi+0x6ca5148],esi
  4149ff:	in     eax,dx
  414a00:	inc    esp
  414a01:	in     eax,dx
  414a02:	js     0x4149be
  414a04:	call   0x65:0x1b9a9071
  414a0b:	mov    eax,0x5862ae09
  414a10:	imul   ebp,DWORD PTR [esi],0xffffffe1
  414a13:	or     al,0x95
  414a15:	inc    edx
  414a16:	push   ebx
  414a17:	mov    ?,WORD PTR [esi+0x10]
  414a1a:	pop    edx
  414a1b:	dec    esp
  414a1c:	test   eax,0xf48f99c7
  414a21:	pop    esp
  414a22:	sub    eax,0xdfbecc9a
  414a27:	push   ebp
  414a28:	push   esp
  414a29:	daa    
  414a2a:	stos   DWORD PTR es:[edi],eax
  414a2b:	add    BYTE PTR [edx],al
  414a2d:	daa    
  414a2e:	in     al,0x83
  414a30:	je     0x414a59
  414a32:	ret    0xc02e
  414a35:	popf   
  414a36:	fsub   st,st(2)
  414a38:	push   ds
  414a39:	repnz dec edi
  414a3b:	fimul  WORD PTR [ecx-0x70]
  414a3e:	pop    ecx
  414a3f:	xor    ecx,DWORD PTR [esp+ebp*4+0x66]
  414a43:	ins    BYTE PTR es:[edi],dx
  414a44:	pop    es
  414a45:	loop   0x414a29
  414a47:	xchg   esp,eax
  414a48:	xor    al,0x1e
  414a4a:	enter  0xa46f,0x35
  414a4e:	jmp    FWORD PTR [ecx]
  414a50:	xchg   esp,eax
  414a51:	ss sub ch,bl
  414a54:	lods   eax,DWORD PTR ds:[esi]
  414a55:	pop    ds
  414a56:	mov    WORD PTR [eax],ss
  414a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a59:	(bad)  
  414a5a:	adc    DWORD PTR [edi],ebx
  414a5c:	test   eax,0x1ccc910f
  414a61:	cmp    ebx,DWORD PTR [ecx-0x3aa26191]
  414a67:	cli    
  414a68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a69:	sbb    dh,BYTE PTR [ecx]
  414a6b:	les    ebx,FWORD PTR [edi+0x3994b2fd]
  414a71:	jbe    0x414a9b
  414a73:	ja     0x414acf
  414a75:	fisttp WORD PTR [edi-0x139f88c3]
  414a7b:	test   DWORD PTR [ebx+0x52],edx
  414a7e:	xor    DWORD PTR [esi+0x452cf900],0xfffffff4
  414a85:	adc    DWORD PTR [edx+eax*4-0x7b],edx
  414a89:	mov    WORD PTR [eax],es
  414a8b:	icebp  
  414a8c:	mov    BYTE PTR [esi+0x24],bl
  414a8f:	push   esi
  414a90:	push   0xffffffdc
  414a92:	mov    ds:0xf5512d46,al
  414a97:	(bad)
  414a9a:	retf   
  414a9b:	into   
  414a9c:	mov    ds:0x53932ea2,al
  414aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aa2:	mov    eax,ds:0xa0aad881
  414aa7:	test   eax,0xcb52452c
  414aac:	add    eax,0xcd9a8966
  414ab1:	pusha  
  414ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ab3:	fs and al,0x94
  414ab6:	cdq    
  414ab7:	xor    edx,DWORD PTR [ecx-0x399f8b11]
  414abd:	mov    edx,DWORD PTR [esi+0x21c80b97]
  414ac3:	fld    DWORD PTR ds:0x3b4df0c2
  414ac9:	inc    eax
  414aca:	shr    DWORD PTR fs:[edx+0x5187e8dd],0x64
  414ad2:	pop    esp
  414ad3:	popa   
  414ad4:	mov    cl,0x85
  414ad6:	leave  
  414ad7:	dec    edx
  414ad8:	inc    ebp
  414ad9:	dec    ebx
  414ada:	lock addr16 jo 0x414b1b
  414ade:	enter  0xf9f2,0xed
  414ae2:	cmp    ebp,eax
  414ae4:	addr16 loopne 0x414b22
  414ae7:	mov    ecx,0xc317889b
  414aec:	mov    edi,DWORD PTR [edi+0x53345707]
  414af2:	aam    0x95
  414af4:	jecxz  0x414b49
  414af6:	sahf   
  414af7:	mov    ?,esi
  414af9:	arpl   si,sp
  414afb:	mov    ebp,0x5db86e24
  414b00:	pop    esp
  414b01:	or     cl,ch
  414b03:	mov    ecx,0x28c3ba28
  414b08:	or     BYTE PTR [ebx-0x4a5b7c64],ah
  414b0e:	dec    esi
  414b0f:	pushf  
  414b10:	(bad)
  414b14:	and    eax,0xf810f253
  414b19:	pop    ebp
  414b1a:	rcr    eax,0xec
  414b1d:	xchg   ecx,eax
  414b1e:	push   ebp
  414b1f:	daa    
  414b20:	addr16 mov esp,0xf0cac8b4
  414b26:	pop    esi
  414b27:	in     al,dx
  414b28:	daa    
  414b29:	test   eax,0x96ef594b
  414b2e:	jl     0x414b70
  414b30:	cmp    DWORD PTR [ebx+0x1a],ebp
  414b33:	xor    ah,ah
  414b35:	aam    0x25
  414b37:	popa   
  414b38:	dec    esi
  414b39:	xor    DWORD PTR [eax+0x27db8952],esp
  414b3f:	call   0xd3ec:0xa0b9c5c9
  414b46:	cmp    al,0xdd
  414b48:	inc    ecx
  414b49:	sbb    al,0x5a
  414b4b:	test   bl,bl
  414b4d:	imul   edi,DWORD PTR [edx+0x42d4c2e7],0x12
  414b54:	mov    eax,0x2471ad69
  414b59:	ret    
  414b5a:	push   ecx
  414b5b:	mov    ah,0x24
  414b5d:	add    al,0xe7
  414b5f:	pop    esi
  414b60:	loopne 0x414b5c
  414b62:	xchg   ebp,eax
  414b63:	fimul  DWORD PTR [edi+0xe]
  414b66:	out    dx,al
  414b67:	jo     0x414bca
  414b69:	xor    al,0xab
  414b6b:	mov    eax,0xb76bd91d
  414b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b71:	(bad)  
  414b72:	leave  
  414b73:	loope  0x414be8
  414b75:	call   0xca1f76bb
  414b7a:	dec    ecx
  414b7b:	jge    0x414b70
  414b7d:	rcr    BYTE PTR [ecx+0x41],0xb1
  414b81:	sbb    bl,BYTE PTR [ecx]
  414b83:	out    0xcd,al
  414b85:	jp     0x414b8c
  414b87:	repnz sub cl,BYTE PTR [ebx]
  414b8a:	and    DWORD PTR [ebx-0x1544471a],edx
  414b90:	cwde   
  414b91:	cmp    edi,DWORD PTR [ebp-0x3853ca0]
  414b97:	(bad)  
  414b98:	cmc    
  414b99:	retf   0x7792
  414b9c:	dec    ecx
  414b9d:	pop    esp
  414b9e:	lea    esi,[ecx]
  414ba0:	jl     0x414b40
  414ba2:	pop    esp
  414ba3:	xor    al,0x5b
  414ba5:	pop    esi
  414ba6:	mov    WORD PTR [ecx],gs
  414ba8:	lock cmp edi,esp
  414bab:	dec    esp
  414bac:	xor    al,0xc2
  414bae:	mov    ?,WORD PTR [edi-0x724df9d2]
  414bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bb6:	out    dx,eax
  414bb7:	fcmovu st,st(0)
  414bb9:	test   al,0x6d
  414bbb:	fdiv   QWORD PTR [ecx+0x2d]
  414bbe:	test   BYTE PTR [ebx+0x14],cl
  414bc1:	aaa    
  414bc2:	inc    edi
  414bc3:	jecxz  0x414b5e
  414bc5:	nop
  414bc6:	jmp    0x414c2f
  414bc8:	jecxz  0x414c0e
  414bca:	into   
  414bcb:	xchg   edi,eax
  414bcc:	faddp  st(2),st
  414bce:	adc    eax,0x31f92220
  414bd3:	push   ebp
  414bd4:	xor    BYTE PTR [ebx+0x484ab0f3],bl
  414bda:	test   eax,0xf699c901
  414bdf:	dec    edx
  414be0:	push   edi
  414be1:	lahf   
  414be2:	inc    edi
  414be3:	call   0x3335:0xe141d909
  414bea:	xchg   ebp,eax
  414beb:	cmp    ch,bh
  414bed:	mov    cl,BYTE PTR [ecx]
  414bef:	push   ss
  414bf0:	fild   WORD PTR [eax-0x58]
  414bf3:	aad    0xa0
  414bf5:	and    eax,0x6cad4b42
  414bfa:	jmp    0xc793:0x17d0ab5e
  414c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c02:	jg     0x414c32
  414c04:	mov    ch,bh
  414c06:	mov    ds:0x98c5aad2,eax
  414c0b:	hlt    
  414c0c:	sub    al,0x34
  414c0e:	jbe    0x414bfc
  414c10:	and    DWORD PTR [edi-0x41e85707],0x98c5936e
  414c1a:	pusha  
  414c1b:	call   0x2dd5aa17
  414c20:	dec    edx
  414c21:	(bad)  
  414c22:	mov    eax,0x660c2437
  414c27:	enter  0xf66c,0xeb
  414c2b:	imul   edx,DWORD PTR [ecx+eax*2+0x41f4baa6],0xffffffb7
  414c33:	add    DWORD PTR [ecx-0xe],esi
  414c36:	xchg   ebx,eax
  414c37:	xchg   esp,eax
  414c38:	dec    DWORD PTR [edi]
  414c3a:	mov    ebp,DWORD PTR [edi]
  414c3c:	add    ch,al
  414c3e:	fwait
  414c3f:	and    eax,0x8fe20e65
  414c44:	inc    esp
  414c45:	gs pushf 
  414c47:	loopne 0x414c11
  414c49:	test   ah,0x63
  414c4c:	es scas al,BYTE PTR es:[edi]
  414c4e:	loop   0x414c09
  414c50:	into   
  414c51:	js     0x414c4c
  414c53:	cli    
  414c54:	shl    DWORD PTR [edi-0x48],cl
  414c57:	adc    eax,0x32f635d0
  414c5c:	idiv   DWORD PTR [edi-0x5c]
  414c5f:	ret    0x225c
  414c62:	push   ebp
  414c63:	adc    DWORD PTR [ebp-0x6],0x69
  414c67:	stos   BYTE PTR es:[edi],al
  414c68:	xor    al,0x6
  414c6a:	dec    esi
  414c6b:	jge    0x414c47
  414c6d:	jae    0x414bf6
  414c6f:	cmp    BYTE PTR [esi],al
  414c71:	jno    0x414c97
  414c73:	retf   
  414c74:	xchg   ebx,eax
  414c75:	mov    bh,al
  414c77:	or     BYTE PTR [ecx-0x4c],ch
  414c7a:	repz mov esi,0x1ae90cc4
  414c80:	cmp    BYTE PTR [ebp-0x7e],bh
  414c83:	sahf   
  414c84:	ret    
  414c85:	sbb    esi,DWORD PTR [ecx]
  414c87:	inc    edx
  414c88:	ss sahf 
  414c8a:	adc    dh,BYTE PTR [ecx-0x3fdce100]
  414c90:	xchg   DWORD PTR [esi],edi
  414c92:	inc    ecx
  414c93:	in     eax,dx
  414c94:	xor    ch,BYTE PTR [edi]
  414c96:	nop
  414c97:	repz sti 
  414c99:	jecxz  0x414c50
  414c9b:	ficomp WORD PTR [edi]
  414c9d:	sub    esp,DWORD PTR [ebp+0x687aa648]
  414ca3:	jb     0x414c63
  414ca5:	rcr    BYTE PTR [esi-0x31cc561f],0x88
  414cac:	stos   BYTE PTR es:[edi],al
  414cad:	xor    bh,al
  414caf:	sbb    cl,dh
  414cb1:	sub    DWORD PTR [edx],edi
  414cb3:	adc    ch,BYTE PTR [eax-0x141e6bc]
  414cb9:	(bad)  
  414cba:	lahf   
  414cbb:	out    0x5c,eax
  414cbd:	cwde   
  414cbe:	cs xor al,0xf0
  414cc1:	sbb    bl,dh
  414cc3:	sub    al,dl
  414cc5:	mov    bl,0xa7
  414cc7:	cdq    
  414cc8:	stos   DWORD PTR es:[edi],eax
  414cc9:	inc    edx
  414ccb:	push   ss
  414ccc:	push   es
  414ccd:	ds add esp,ebp
  414cd0:	mov    edx,0x6bcdcda8
  414cd5:	dec    ebp
  414cd6:	pop    ebx
  414cd7:	pushf  
  414cd8:	xor    bh,ah
  414cda:	nop
  414cdb:	fadd   QWORD PTR [ecx]
  414cdd:	fidivr DWORD PTR [eax+edi*2+0x38]
  414ce1:	jb     0x414d48
  414ce3:	mov    ah,0x3
  414ce5:	dec    esp
  414ce6:	or     ah,BYTE PTR [ebx-0x60cc35a6]
  414cec:	dec    edi
  414ced:	out    0x43,al
  414cef:	xor    edx,DWORD PTR [ebx]
  414cf1:	xor    al,0xc7
  414cf4:	jmp    DWORD PTR [ebp+ebx*8+0x1b]
  414cf8:	enter  0x9fab,0x95
  414cfc:	das    
  414cfd:	rcr    dh,0x17
  414d00:	xchg   edi,eax
  414d01:	jns    0x414d46
  414d03:	and    eax,0x3408ffd
  414d08:	xchg   BYTE PTR [ecx+ebp*4],ch
  414d0b:	mov    edx,DWORD PTR [ecx-0x37]
  414d0e:	mov    ecx,0x25a22440
  414d13:	and    BYTE PTR [ebx],bl
  414d15:	cmp    ch,ch
  414d17:	jno    0x414d4a
  414d19:	and    eax,0x3a21d170
  414d1e:	add    al,BYTE PTR [esi+0x5b684e47]
  414d24:	mov    eax,ds:0x75034aae
  414d29:	dec    edx
  414d2a:	(bad)  
  414d2b:	or     BYTE PTR [ebx-0x1f],ah
  414d2e:	mov    ecx,0x515c2b13
  414d33:	jmp    0x414d9b
  414d35:	inc    eax
  414d36:	aaa    
  414d37:	sbb    BYTE PTR ds:0xe8bb43ea,al
  414d3d:	aam    0xd1
  414d3f:	push   edx
  414d40:	shl    ecx,0xee
  414d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d44:	in     eax,dx
  414d45:	in     al,0x6c
  414d47:	sub    al,0x2d
  414d49:	pop    es
  414d4a:	pop    ebp
  414d4b:	mov    ecx,0x7ef2c3d6
  414d50:	cmc    
  414d51:	or     al,0xb5
  414d53:	scas   eax,DWORD PTR es:[edi]
  414d54:	hlt    
  414d55:	xor    eax,0xf1895a1a
  414d5a:	xchg   BYTE PTR [esi-0x1a18c56e],ch
  414d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d61:	aas    
  414d62:	out    dx,eax
  414d63:	xchg   DWORD PTR [ebx+0x3d996d19],esp
  414d69:	es pop es
  414d6b:	jge    0x414da7
  414d6d:	retf   0xf20e
  414d70:	mov    ds:0xdc3418b5,eax
  414d75:	call   0xe71783a8
  414d7a:	stos   BYTE PTR es:[edi],al
  414d7b:	mov    ah,0x31
  414d7d:	xchg   esp,eax
  414d7e:	pop    edi
  414d7f:	lahf   
  414d80:	pop    ecx
  414d81:	popa   
  414d82:	sub    eax,ebp
  414d84:	adc    al,0x46
  414d86:	push   edx
  414d87:	es cdq 
  414d89:	pop    edx
  414d8a:	xor    BYTE PTR [esi+0x4a],0xd
  414d8e:	(bad)  [edx-0x45]
  414d91:	loopne 0x414d45
  414d93:	(bad)  
  414d95:	mov    dh,BYTE PTR [esi+0x44]
  414d98:	inc    eax
  414d99:	push   edi
  414d9a:	arpl   WORD PTR [ebx],di
  414d9c:	pop    ss
  414d9d:	jmp    0xaf377c0b
  414da2:	xchg   ebp,eax
  414da3:	sub    eax,0x4759d29f
  414da8:	adc    al,BYTE PTR [eax+0x663fbe34]
  414dae:	repz es inc edi
  414db1:	fdiv   st(1),st
  414db3:	push   ebp
  414db4:	cs mov ah,0x98
  414db7:	test   DWORD PTR [ecx+0x43],0x51fc67a0
  414dbe:	shr    BYTE PTR [edx+ebx*8-0x2f],0xa7
  414dc3:	add    al,0x7
  414dc5:	in     eax,dx
  414dc6:	adc    eax,0x6926bddf
  414dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dcc:	mov    ch,0x3a
  414dce:	xchg   edi,eax
  414dcf:	shr    ebp,1
  414dd1:	mov    edx,0xc0b5629e
  414dd6:	push   0xffffff84
  414dd8:	pop    eax
  414dd9:	gs fmul st(2),st
  414ddc:	ret    0xa31a
  414ddf:	in     eax,dx
  414de0:	(bad)  
  414de1:	sti    
  414de2:	jo     0x414d9b
  414de4:	popf   
  414de5:	sub    BYTE PTR [ebx-0x5b1d2f24],ch
  414deb:	cmp    BYTE PTR [eax-0x271269fb],dh
  414df1:	out    0x2b,al
  414df3:	xchg   esp,eax
  414df4:	ret    0xfe84
  414df7:	fstp   st(0)
  414df9:	lods   eax,DWORD PTR ds:[esi]
  414dfa:	xchg   BYTE PTR [esi+0x1a],ah
  414dfd:	fcmovbe st,st(0)
  414dff:	stos   WORD PTR es:[edi],ax
  414e01:	cwde   
  414e02:	je     0x414dd7
  414e04:	mov    eax,ds:0x3a876825
  414e09:	fisub  WORD PTR [esi]
  414e0b:	inc    edx
  414e0c:	mov    ecx,0x322f26e7
  414e11:	sub    bh,ch
  414e13:	mov    dh,0x17
  414e15:	pop    esp
  414e16:	loop   0x414d98
  414e18:	mov    dl,0x11
  414e1a:	ror    BYTE PTR [ebx],1
  414e1c:	pop    ds
  414e1d:	cdq    
  414e1e:	jne    0x414e88
  414e20:	push   esp
  414e21:	or     eax,0x88386663
  414e26:	into   
  414e27:	sbb    eax,DWORD PTR ds:[esi+0x6f]
  414e2b:	fs add eax,0x522077f4
  414e31:	mov    ds:0xd50b2a82,eax
  414e36:	js     0x414dd2
  414e38:	pop    esi
  414e39:	enter  0x4849,0xd2
  414e3d:	xor    dl,BYTE PTR [eax-0x59]
  414e40:	stos   DWORD PTR es:[edi],eax
  414e41:	inc    ebp
  414e42:	loop   0x414e25
  414e44:	pusha  
  414e45:	push   ebx
  414e46:	add    eax,0x77c67618
  414e4b:	(bad)  
  414e4c:	enter  0xb5fb,0x64
  414e50:	sbb    al,0xff
  414e52:	clc    
  414e53:	xor    esp,edi
  414e55:	ss mov WORD PTR es:[edx-0x60],gs
  414e5a:	dec    ebp
  414e5b:	in     eax,dx
  414e5c:	inc    esp
  414e5d:	fimul  DWORD PTR [edx-0x13]
  414e60:	fild   DWORD PTR [ebx]
  414e62:	test   al,0x7d
  414e64:	push   ebp
  414e65:	mov    ch,0x1d
  414e67:	das    
  414e68:	sbb    BYTE PTR [edx+0x47],0xb5
  414e6c:	imul   edi,DWORD PTR [edi-0x12a75fc1],0x999e3c6a
  414e76:	pop    eax
  414e77:	jecxz  0x414eb0
  414e79:	scas   eax,DWORD PTR es:[edi]
  414e7a:	imul   eax,edx,0x13
  414e7d:	pop    ds
  414e7e:	scas   eax,DWORD PTR es:[edi]
  414e7f:	sub    eax,0x646ba2fc
  414e84:	shr    DWORD PTR [ecx-0x58],cl
  414e87:	jle    0x414ea4
  414e89:	cmp    al,0x7
  414e8b:	fmul   QWORD PTR [ebx-0x5cee3c05]
  414e91:	or     esp,DWORD PTR [edx]
  414e93:	imul   esi,DWORD PTR [ebx+ebx*2-0x36bee83],0x3b
  414e9b:	and    al,0x6c
  414e9d:	mov    ebx,ebx
  414e9f:	ds lock push cs
  414ea2:	inc    ebp
  414ea3:	lds    ecx,FWORD PTR [ebx]
  414ea5:	cdq    
  414ea6:	cmp    eax,0xbc9af802
  414eab:	push   es
  414eac:	mov    dh,0x37
  414eae:	sbb    edi,DWORD PTR [esi]
  414eb0:	add    DWORD PTR [ebx-0x36da2554],0x68
  414eb7:	dec    bh
  414eb9:	aam    0xe3
  414ebb:	adc    esi,DWORD PTR [ebp-0x77b609c5]
  414ec1:	loope  0x414e8a
  414ec3:	loop   0x414f36
  414ec5:	sbb    DWORD PTR [ebx+0x35d6a585],ebx
  414ecb:	popa   
  414ecc:	mov    WORD PTR [eax],ss
  414ece:	idiv   DWORD PTR cs:[ecx+0x37695301]
  414ed5:	jp     0x414e83
  414ed7:	iret   
  414ed8:	imul   eax,DWORD PTR [eax+ecx*1-0x17],0x35
  414edd:	mov    ebx,0x45d1fc8
  414ee2:	inc    ebx
  414ee3:	cld    
  414ee4:	popf   
  414ee5:	ins    BYTE PTR es:[edi],dx
  414ee6:	ds pop esi
  414ee8:	lock dec ecx
  414eea:	sub    esi,ecx
  414eec:	dec    edx
  414eed:	jb     0x414eff
  414eef:	inc    ebx
  414ef0:	jbe    0x414f6a
  414ef2:	and    bh,BYTE PTR ds:0xac917a9a
  414ef8:	cmp    ch,BYTE PTR [edi]
  414efa:	retf   0xd22
  414efd:	call   0x6211cfd0
  414f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f03:	mov    dh,0x34
  414f05:	mov    eax,ds:0x63fce1b7
  414f0a:	enter  0x68b8,0x7f
  414f0e:	out    dx,al
  414f0f:	xor    eax,0xe79dea51
  414f14:	ret    0x6085
  414f17:	imul   esi,DWORD PTR [esi+0x21],0x10
  414f1b:	nop
  414f1c:	mov    ds:0xbf4f43a2,eax
  414f21:	push   eax
  414f22:	es (bad) 
  414f24:	pop    ss
  414f25:	mov    bl,0xde
  414f27:	jle    0x414f5a
  414f29:	push   ss
  414f2a:	fstp   DWORD PTR ds:[edi]
  414f2d:	in     eax,dx
  414f2e:	in     eax,dx
  414f2f:	xor    BYTE PTR [ecx-0x2b],al
  414f32:	fldenv [ecx]
  414f34:	ss cwde 
  414f36:	cli    
  414f37:	pop    ds
  414f38:	xor    al,0x75
  414f3a:	push   ebp
  414f3b:	xchg   ebp,eax
  414f3c:	jb     0x414f3c
  414f3e:	xchg   ebx,eax
  414f3f:	sbb    edx,esi
  414f41:	cld    
  414f42:	mov    ds:0x6365a58d,eax
  414f47:	fs pop ecx
  414f49:	pop    esp
  414f4a:	add    BYTE PTR [ebp-0x38],dh
  414f4d:	icebp  
  414f4e:	and    DWORD PTR [ebp-0x58],ebp
  414f51:	xchg   ecx,ebx
  414f53:	in     al,0xf8
  414f55:	xor    al,0x28
  414f57:	out    0xec,eax
  414f59:	popa   
  414f5a:	xor    bh,BYTE PTR [edi-0x70]
  414f5d:	fistp  WORD PTR [edx]
  414f5f:	mov    esi,0x8c0405c1
  414f64:	mov    eax,0x5801714d
  414f69:	sub    al,0x11
  414f6b:	pop    eax
  414f6c:	mov    ah,0x20
  414f6e:	rcr    DWORD PTR [eax-0x72df8248],0x9a
  414f75:	dec    ebp
  414f76:	clc    
  414f77:	sti    
  414f78:	xlat   BYTE PTR ds:[ebx]
  414f79:	dec    esp
  414f7a:	xchg   edi,eax
  414f7b:	cmp    BYTE PTR [ebp+0x2d6b8564],ah
  414f81:	sub    bh,dh
  414f83:	mov    ds:0xdeb59d8f,al
  414f88:	inc    ecx
  414f89:	sbb    BYTE PTR [edi],0x7d
  414f8c:	adc    DWORD PTR [edx],eax
  414f8e:	lds    esp,FWORD PTR [edx]
  414f90:	sub    DWORD PTR [edi+0xebee443],0xe605a806
  414f9a:	xchg   ebx,eax
  414f9b:	cmp    edx,esp
  414f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f9e:	mov    esi,0xf05dd717
  414fa3:	xor    eax,0xd82b4a8b
  414fa8:	mov    ch,al
  414faa:	pop    ebx
  414fab:	fiadd  WORD PTR [ebx-0x4c]
  414fae:	adc    BYTE PTR [ebx+0x6ee30782],cl
  414fb4:	xor    eax,0x6eed606b
  414fb9:	add    BYTE PTR [ebx],0x3b
  414fbc:	cdq    
  414fbd:	aad    0x65
  414fbf:	mov    ds:0x4f9f16f1,eax
  414fc4:	pop    esp
  414fc5:	adc    al,0x44
  414fc7:	and    eax,0x77467176
  414fcc:	outs   dx,DWORD PTR ds:[esi]
  414fcd:	adc    eax,esi
  414fcf:	call   0x984bc691
  414fd4:	and    ah,BYTE PTR [edi-0x68]
  414fd7:	imul   ecx,DWORD PTR [ecx+0x74],0xffffff94
  414fdb:	sbb    al,0x45
  414fdd:	cdq    
  414fde:	inc    esp
  414fdf:	(bad)  
  414fe0:	ds (bad) 
  414fe2:	jns    0x415059
  414fe4:	cli    
  414fe5:	jmp    0x415058
  414fe7:	loope  0x415064
  414fe9:	xor    cl,cl
  414feb:	mov    edx,0x80e50210
  414ff0:	test   DWORD PTR [esi+0x702969e0],ebx
  414ff6:	aam    0x1c
  414ff8:	cld    
  414ff9:	enter  0x59ef,0x28
  414ffd:	mov    al,0x5a
  414fff:	into   
  415000:	cmp    ch,BYTE PTR [ebp+eax*8+0x1a4a02af]
  415007:	sbb    bl,BYTE PTR gs:[ecx+0x51342373]
  41500e:	fimul  WORD PTR [esp+ebx*8+0x77]
  415012:	cmp    eax,DWORD PTR [edx-0x730fd0d6]
  415018:	lods   eax,DWORD PTR ds:[esi]
  415019:	dec    ecx
  41501a:	retf   0x4ba9
  41501d:	mov    ebp,0x89e0239e
  415022:	jb     0x414fa5
  415024:	mov    ebx,0x4289d9d7
  415029:	or     ebp,eax
  41502b:	add    BYTE PTR [ecx+eiz*4-0x36],0x4e
  415030:	xchg   edx,eax
  415031:	gs dec ecx
  415033:	mov    dl,0xb3
  415035:	neg    BYTE PTR [edi-0x267f8c]
  41503b:	mov    esp,0x6502cecc
  415040:	js     0x41507c
  415042:	jne    0x414fe8
  415044:	mov    edx,0x44593d19
  415049:	xor    esp,0x4d
  41504c:	lahf   
  41504d:	cmp    bl,bh
  41504f:	sbb    ecx,DWORD PTR [ecx+ebx*2+0x6a]
  415053:	je     0x415005
  415055:	ins    DWORD PTR es:[edi],dx
  415056:	imul   edx,DWORD PTR [esi],0x69d7b977
  41505c:	outs   dx,DWORD PTR ds:[esi]
  41505d:	xchg   ebp,eax
  41505e:	xor    al,0x32
  415060:	xlat   BYTE PTR ds:[ebx]
  415062:	sbb    dh,dh
  415064:	add    al,0xd2
  415066:	sub    al,0x52
  415068:	sbb    DWORD PTR ds:0x9d97be79,esi
  41506e:	mov    ds:0xec4b271c,al
  415073:	out    dx,al
  415074:	and    bl,dl
  415076:	jns    0x415015
  415078:	sti    
  415079:	out    dx,eax
  41507a:	jb     0x41504b
  41507c:	aad    0x42
  41507e:	test   al,0x3a
  415080:	jge    0x4150cf
  415082:	daa    
  415083:	pushf  
  415084:	mov    ecx,0xbcfe553b
  415089:	sbb    esi,DWORD PTR [eax]
  41508b:	loopne 0x4150d8
  41508d:	jmp    0x4150d6
  41508f:	ins    BYTE PTR es:[edi],dx
  415090:	dec    esp
  415091:	sub    DWORD PTR [edx+0x324564ec],ebx
  415097:	sahf   
  415098:	push   ss
  415099:	(bad)  
  41509a:	int3   
  41509b:	loope  0x4150ea
  41509d:	dec    esp
  41509e:	cmp    BYTE PTR [esi-0x6],dh
  4150a1:	rcl    DWORD PTR [eax],1
  4150a3:	mov    bl,0xb4
  4150a5:	ja     0x4150d3
  4150a7:	jp     0x41505d
  4150a9:	stos   BYTE PTR es:[edi],al
  4150aa:	or     edx,DWORD PTR [esi]
  4150ac:	mov    esp,0xff1dac6c
  4150b1:	or     al,BYTE PTR [edi+0x7a10150]
  4150b7:	adc    al,ch
  4150b9:	xchg   ecx,eax
  4150ba:	imul   edi,edx,0xffffffc0
  4150bd:	inc    ecx
  4150be:	mov    eax,0x7a2c9587
  4150c3:	sub    esp,DWORD PTR [edi+0x3e467bb8]
  4150c9:	cdq    
  4150ca:	lahf   
  4150cb:	stos   BYTE PTR es:[edi],al
  4150cc:	push   cs
  4150cd:	lahf   
  4150ce:	jbe    0x4150d3
  4150d0:	(bad)  
  4150d1:	stc    
  4150d2:	vmptrld QWORD PTR [eax+0xd0e506b]
  4150d9:	jb     0x4150f6
  4150db:	pop    eax
  4150dc:	sbb    esi,DWORD PTR [ecx]
  4150de:	xchg   ebx,eax
  4150df:	pop    ss
  4150e0:	lods   al,BYTE PTR ds:[esi]
  4150e1:	add    eax,0x6f99a4
  4150e6:	push   esp
  4150e7:	fiadd  WORD PTR [edi]
  4150e9:	mov    esi,0xea1ce674
  4150ee:	or     DWORD PTR [esi+ebx*4-0x65],edx
  4150f2:	xchg   DWORD PTR [ecx+0xd],esi
  4150f5:	inc    edx
  4150f6:	add    bh,BYTE PTR [ecx]
  4150f8:	lahf   
  4150f9:	mov    dh,0x7f
  4150fb:	and    BYTE PTR [ecx+0x19],0x6c
  4150ff:	in     al,0x9d
  415101:	aam    0x77
  415103:	adc    DWORD PTR [eax],edi
  415105:	jnp    0x41515b
  415107:	inc    esi
  415108:	ds retf 0x5125
  41510c:	in     eax,dx
  41510d:	cld    
  41510e:	sti    
  41510f:	sub    dl,dl
  415111:	or     BYTE PTR [ecx],0x7b
  415114:	mov    eax,ds:0x88cbc1a
  415119:	out    0x4,eax
  41511b:	popa   
  41511c:	jb     0x4150bb
  41511e:	test   BYTE PTR [ebx],0x33
  415121:	test   al,0xd5
  415123:	test   DWORD PTR [edi-0x2b],0xa56e2b5f
  41512a:	ins    DWORD PTR es:[edi],dx
  41512b:	(bad)  
  41512c:	mov    cl,0x88
  41512e:	lea    esi,[eax+0x7ecd88f9]
  415134:	fcomp  QWORD PTR [eax-0x61]
  415137:	call   0x6dd3f406
  41513c:	pop    ebx
  41513d:	aad    0x8
  41513f:	lds    eax,FWORD PTR ss:[edi-0x2b]
  415143:	xor    al,0x3b
  415145:	ret    
  415146:	xor    BYTE PTR [esi],bh
  415148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415149:	xchg   ecx,eax
  41514a:	(bad)  
  41514b:	dec    eax
  41514c:	movq   QWORD PTR [ebx+0x56f1c442],mm1
  415153:	pop    esp
  415154:	mov    al,0xb
  415156:	sar    DWORD PTR [edi],1
  415158:	cmp    ah,dl
  41515a:	cwde   
  41515b:	push   ecx
  41515c:	sar    dh,1
  41515e:	cmp    dh,dl
  415160:	and    BYTE PTR ds:0x58408f00,ah
  415166:	sbb    ebp,esi
  415168:	push   ecx
  415169:	retf   
  41516a:	lods   al,BYTE PTR ds:[esi]
  41516b:	xor    ebx,esi
  41516d:	or     DWORD PTR [di+0x3],edx
  415171:	das    
  415172:	and    al,0xc7
  415174:	stos   DWORD PTR es:[edi],eax
  415175:	in     eax,0x6d
  415177:	mov    cl,0x5f
  415179:	fld    QWORD PTR [ebx]
  41517b:	push   ecx
  41517c:	daa    
  41517d:	lea    ebx,[edi+edi*2]
  415180:	fs cmp ch,ah
  415183:	xchg   ebp,eax
  415184:	sub    eax,0xd0ba6fa2
  415189:	sub    BYTE PTR [esi*2-0x427e4832],cl
  415190:	bound  edx,QWORD PTR [edi]
  415192:	mov    edx,0x9802dcd
  415197:	mov    eax,ds:0xfc9ca810
  41519c:	sub    ebx,edi
  41519e:	pop    esp
  41519f:	jle    0x4151cb
  4151a1:	rcl    BYTE PTR [edi],cl
  4151a3:	stos   DWORD PTR es:[edi],eax
  4151a4:	ins    BYTE PTR es:[edi],dx
  4151a5:	das    
  4151a6:	addr16 jns 0x415143
  4151a9:	nop
  4151aa:	fistp  QWORD PTR [ebx]
  4151ac:	jne    0x415206
  4151ae:	xchg   BYTE PTR [edx+0x4b],cl
  4151b1:	fsub   DWORD PTR [eax+ecx*2]
  4151b4:	mov    bl,0x76
  4151b6:	(bad)  
  4151b7:	(bad)  
  4151b8:	xor    dh,cl
  4151ba:	inc    ebx
  4151bb:	daa    
  4151bc:	adc    ebp,DWORD PTR [eax-0x5f53a022]
  4151c2:	cmp    esp,ebp
  4151c4:	push   ecx
  4151c5:	retf   0x7c34
  4151c8:	mov    esi,0xcbf8c1df
  4151cd:	mov    fs,WORD PTR [edi]
  4151cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151d0:	iret   
  4151d1:	or     DWORD PTR [edi],edi
  4151d3:	retf   
  4151d4:	lock into 
  4151d6:	repnz aas 
  4151d8:	out    0x5f,ax
  4151db:	gs xor eax,0xf94d69d6
  4151e1:	sar    BYTE PTR [ebp+0x4b04f371],cl
  4151e7:	lahf   
  4151e8:	sbb    al,0xd
  4151ea:	ja     0x41517c
  4151ec:	sbb    edx,DWORD PTR [ebx-0x697d7887]
  4151f2:	add    eax,0x55955616
  4151f7:	sbb    BYTE PTR [esi+0x79363fb4],bl
  4151fd:	inc    ecx
  4151fe:	jno    0x415213
  415200:	inc    edx
  415201:	add    eax,0x3e80210b
  415206:	lods   al,BYTE PTR ds:[esi]
  415207:	arpl   WORD PTR [ecx-0x65],bp
  41520a:	leave  
  41520b:	mov    eax,0xac8976e7
  415210:	rol    esp,0xcb
  415213:	scas   al,BYTE PTR es:[edi]
  415214:	mov    edx,0xdad43c36
  415219:	ja     0x415200
  41521b:	jmp    0x3017d020
  415220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415221:	sub    ecx,eax
  415223:	ret    
  415224:	inc    eax
  415225:	and    al,0x6d
  415227:	xor    al,0x6a
  415229:	adc    eax,0x95fa329e
  41522e:	sub    dh,bl
  415230:	mov    ebp,?
  415232:	iret   
  415233:	xor    al,ah
  415235:	push   edi
  415236:	pop    ebx
  415237:	mov    esp,0xafbea2b0
  41523c:	inc    BYTE PTR [ecx+0x78]
  41523f:	mov    esi,0x53aa4940
  415244:	lea    edx,[ebx]
  415246:	retf   0x555b
  415249:	test   BYTE PTR [ecx+0x3454b50c],al
  41524f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415250:	jne    0x415247
  415252:	into   
  415253:	out    0x6b,al
  415255:	cmc    
  415256:	and    DWORD PTR [esp+ebp*1-0x64],esi
  41525a:	cmp    ebp,DWORD PTR [esi]
  41525c:	ror    BYTE PTR [edi-0xa],1
  41525f:	dec    esp
  415260:	pop    eax
  415261:	jmp    0x4152ca
  415263:	ret    
  415264:	cmp    DWORD PTR [esi-0x560db453],ebx
  41526a:	and    DWORD PTR [edx+0x18989b6a],esp
  415270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415271:	mov    ebp,0x5ed58b4a
  415276:	xchg   bh,dl
  415278:	fsubr  DWORD PTR [eax]
  41527a:	ins    DWORD PTR es:[edi],dx
  41527b:	clc    
  41527c:	push   esp
  41527d:	loopne 0x415229
  41527f:	fwait
  415280:	mov    ch,0xf2
  415282:	add    BYTE PTR [edi*1+0xd9cefd4],dh
  415289:	push   esp
  41528a:	adc    eax,0x9b0f616c
  41528f:	(bad)  
  415290:	out    0x7c,eax
  415292:	mov    eax,0xc62d157e
  415297:	adc    eax,0xacd87ea9
  41529c:	cwde   
  41529d:	push   edi
  41529e:	jp     0x415299
  4152a0:	mov    al,ds:0xa0305939
  4152a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152a6:	retf   0x9d28
  4152a9:	mov    bh,ah
  4152ab:	sub    DWORD PTR [ecx+0x6],0xf0ff3381
  4152b2:	xor    al,0xf7
  4152b4:	cmp    eax,0x162c3bc9
  4152b9:	add    ch,BYTE PTR [ecx+0x22]
  4152bc:	and    BYTE PTR [eax-0x5b],dh
  4152bf:	xchg   BYTE PTR [ecx],ch
  4152c1:	ss inc esi
  4152c3:	pop    edi
  4152c4:	inc    eax
  4152c5:	cmp    cl,BYTE PTR [edi+0xa34a0f6]
  4152cb:	lods   al,BYTE PTR ds:[esi]
  4152cc:	addr16 jp 0x415304
  4152cf:	push   eax
  4152d0:	and    al,BYTE PTR [edx-0x5d]
  4152d3:	cmp    ah,BYTE PTR [ecx+0x53]
  4152d6:	sub    al,0x7d
  4152d8:	mov    bh,0x71
  4152da:	push   esp
  4152db:	xlat   BYTE PTR ds:[ebx]
  4152dc:	and    BYTE PTR [esi+0x3c413093],dh
  4152e2:	ret    0xe6a8
  4152e5:	cmc    
  4152e6:	sbb    ebp,esi
  4152e8:	pop    ebx
  4152e9:	and    al,0xb6
  4152eb:	mov    edi,0x2bd49199
  4152f0:	fsubr  st,st(3)
  4152f2:	or     eax,0xa00852cd
  4152f7:	sbb    DWORD PTR [eax+0x4f],edi
  4152fa:	sbb    eax,0x73bcdab5
  4152ff:	stos   BYTE PTR es:[edi],al
  415300:	aam    0xde
  415302:	mov    bl,0xb7
  415304:	sbb    cl,BYTE PTR [ebx+0x5fbb862d]
  41530a:	add    ebp,DWORD PTR [ebp-0x60]
  41530d:	lgs    ecx,FWORD PTR ss:[ebx-0x76]
  415312:	mov    ah,0x1d
  415314:	clc    
  415315:	or     ah,al
  415317:	mov    edx,0xc08926cb
  41531c:	mov    eax,0x7e8d16b6
  415321:	ficom  WORD PTR [ecx+0x6d]
  415324:	stos   BYTE PTR es:[edi],al
  415325:	jp     0x41538e
  415327:	inc    edi
  415328:	add    DWORD PTR [edx],edi
  41532a:	nop
  41532b:	shr    DWORD PTR [ecx+0x4],0xa
  41532f:	outs   dx,DWORD PTR ds:[esi]
  415330:	push   esp
  415331:	add    bl,ch
  415333:	push   ss
  415334:	sub    al,0xb3
  415336:	xor    bl,BYTE PTR [eax]
  415338:	shr    DWORD PTR [eax-0x56],cl
  41533b:	push   edi
  41533c:	arpl   di,di
  41533e:	mov    esi,DWORD PTR [eax+0x7e]
  415341:	nop
  415342:	dec    ebx
  415343:	pop    esi
  415344:	xchg   edi,eax
  415345:	out    dx,eax
  415346:	add    ebp,DWORD PTR [ebp+0x5a6b8ef4]
  41534c:	les    eax,FWORD PTR [edi+0x57]
  41534f:	fsubr  QWORD PTR [eax]
  415351:	shl    DWORD PTR [esi],cl
  415353:	push   0xffffffd7
  415355:	iret   
  415356:	aas    
  415357:	xchg   cl,al
  415359:	and    ebp,DWORD PTR ds:0x5f9e02e7
  41535f:	and    esp,DWORD PTR [edx-0x72]
  415362:	push   esi
  415363:	dec    ecx
  415364:	sub    esi,eax
  415366:	or     BYTE PTR [ebp-0x68e0eca7],bl
  41536c:	adc    ebx,DWORD PTR [eax+edi*1]
  41536f:	xor    bh,BYTE PTR [esi+0x79]
  415372:	scas   al,BYTE PTR es:[edi]
  415373:	jmp    0x3ae7c27c
  415378:	add    al,0xe
  41537a:	mov    eax,0x790529d3
  41537f:	pushf  
  415380:	mov    ecx,ebx
  415382:	imul   ebx,ebx,0xffffffe4
  415385:	cdq    
  415386:	aaa    
  415387:	sbb    eax,0xbb11c364
  41538c:	loopne 0x41538a
  41538e:	repnz test BYTE PTR [esi],ah
  415391:	mov    al,ds:0xdda7961e
  415396:	das    
  415397:	adc    ch,bh
  415399:	shl    DWORD PTR [edx],0x42
  41539c:	jmp    0xa12114dd
  4153a1:	cmp    esp,esp
  4153a3:	dec    ebp
  4153a4:	aaa    
  4153a5:	(bad)  
  4153a6:	rcr    BYTE PTR [ebx+0x5b],cl
  4153a9:	cmp    eax,0x574a4d65
  4153ae:	sbb    al,ch
  4153b0:	(bad)  
  4153b1:	out    0xd5,eax
  4153b3:	inc    edi
  4153b4:	scas   al,BYTE PTR es:[edi]
  4153b5:	inc    eax
  4153b6:	test   al,0xae
  4153b8:	ss in  eax,dx
  4153ba:	sbb    BYTE PTR [edx+0x4f],dh
  4153bd:	pop    eax
  4153be:	adc    esi,esp
  4153c0:	(bad)  
  4153c2:	mov    esp,0xd099e131
  4153c7:	(bad)  
  4153c8:	in     al,dx
  4153c9:	mov    ds:0x27b6fd46,eax
  4153ce:	mov    esi,0xfa4b90a0
  4153d3:	mov    edx,0x3c9e98d5
  4153d8:	push   ss
  4153d9:	hlt    
  4153da:	aad    0x4c
  4153dc:	pop    es
  4153dd:	hlt    
  4153de:	add    eax,DWORD PTR [ebp-0x67197f1a]
  4153e4:	(bad)  
  4153e5:	sub    ebx,DWORD PTR [ebx+0x27]
  4153e8:	add    BYTE PTR ds:0x670320c,ah
  4153ee:	inc    edx
  4153ef:	add    dh,ch
  4153f1:	inc    ebx
  4153f2:	pop    esi
  4153f3:	dec    esp
  4153f4:	and    DWORD PTR [edi],0xaa3a4d29
  4153fa:	xor    BYTE PTR [esi-0x44],cl
  4153fd:	cwde   
  4153fe:	stos   DWORD PTR es:[edi],eax
  4153ff:	bound  eax,QWORD PTR [esi+0x7b]
  415402:	xor    DWORD PTR [ecx-0x23],esi
  415405:	or     cl,BYTE PTR [ecx]
  415407:	sub    DWORD PTR [eax-0x39],0xffffffb6
  41540b:	fdivr  QWORD PTR [esi+edx*8-0x78]
  41540f:	loop   0x415403
  415411:	jp     0x415484
  415413:	add    eax,0xe543b65b
  415418:	or     DWORD PTR [edx-0x2],esp
  41541b:	mov    edx,DWORD PTR [esi]
  41541d:	cdq    
  41541e:	dec    esp
  41541f:	popa   
  415420:	out    dx,eax
  415421:	daa    
  415422:	cs adc al,0x11
  415425:	cmp    al,0x3
  415427:	dec    ebx
  415428:	fimul  DWORD PTR [ebx+ebp*2+0x4d]
  41542c:	gs repnz das 
  41542f:	or     eax,0xe4a3cd43
  415434:	jg     0x415467
  415436:	arpl   ax,sp
  415438:	mov    ebx,0x7dcf5b72
  41543d:	push   cs
  41543e:	and    al,0x8d
  415440:	adc    cl,BYTE PTR [eax-0xa425e46]
  415446:	retf   
  415447:	lods   al,BYTE PTR ds:[esi]
  415448:	sbb    dl,dh
  41544a:	adc    al,0x9c
  41544c:	retf   
  41544d:	jae    0x41549b
  41544f:	mov    ds:0xf047d4da,eax
  415454:	sbb    al,0xa7
  415456:	push   0xfd768da1
  41545b:	les    esp,FWORD PTR [esi]
  41545d:	int    0xfb
  41545f:	clc    
  415460:	fcom   DWORD PTR [edi+eax*1]
  415463:	in     al,dx
  415464:	jle    0x4154b2
  415466:	adc    ah,BYTE PTR [esi]
  415468:	je     0x41543b
  41546a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41546b:	add    ch,BYTE PTR [ebp-0x1cdeb230]
  415471:	sub    BYTE PTR [eax+0x34],0xb0
  415475:	aam    0xad
  415477:	mov    cl,0xe2
  415479:	aas    
  41547a:	push   es
  41547b:	or     DWORD PTR [eax-0x52913a46],edx
  415481:	push   edi
  415482:	cli    
  415483:	mov    edi,0xf3bf9ad9
  415488:	inc    ebx
  415489:	push   esp
  41548a:	xchg   edi,eax
  41548b:	lods   al,BYTE PTR ds:[esi]
  41548c:	leave  
  41548d:	dec    esi
  41548e:	addr16 inc esi
  415490:	jne    0x4154b4
  415492:	lods   al,BYTE PTR ss:[esi]
  415494:	pop    es
  415495:	push   ebp
  415496:	idiv   DWORD PTR [eax-0x5b28a0bf]
  41549c:	stos   DWORD PTR es:[edi],eax
  41549d:	pop    ecx
  41549e:	pop    ebx
  41549f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154a1:	stos   DWORD PTR es:[edi],eax
  4154a2:	jns    0x41550a
  4154a4:	inc    ecx
  4154a5:	rcr    BYTE PTR [ebx],0x8e
  4154a8:	cmp    DWORD PTR [edx+0x5640fc7d],ebx
  4154ae:	lea    ebx,[ecx+0x49f95f97]
  4154b4:	add    eax,0xbfe1a0c1
  4154b9:	bound  esp,QWORD PTR [edx+0x15f101b6]
  4154bf:	inc    edx
  4154c0:	jmp    0x41547f
  4154c2:	xor    ebx,esi
  4154c4:	add    ecx,DWORD PTR [esi]
  4154c6:	fist   DWORD PTR [ebx-0x3f]
  4154c9:	xchg   BYTE PTR [ebx+0x6fb40e2b],al
  4154cf:	pop    esi
  4154d0:	xor    al,0xe8
  4154d2:	pushf  
  4154d3:	add    esi,DWORD PTR [ebp+0x341993f3]
  4154d9:	pop    ebx
  4154da:	and    bl,BYTE PTR [ebx-0x516acae7]
  4154e0:	push   eax
  4154e1:	lds    ebp,FWORD PTR [ecx]
  4154e3:	out    0x43,al
  4154e5:	sbb    al,0x86
  4154e7:	out    dx,eax
  4154e8:	mov    eax,0xbd1acc75
  4154ed:	or     BYTE PTR [esi+0x5f],0x59
  4154f1:	push   edi
  4154f2:	mov    esp,0xb583be73
  4154f7:	aad    0x38
  4154f9:	sbb    eax,ecx
  4154fb:	adc    DWORD PTR [eax+0x7da3a3c5],ecx
  415501:	mov    DWORD PTR [edx-0x615239fa],0x99432e19
  41550b:	mov    ebx,0x553f1e7d
  415510:	xor    BYTE PTR [esi-0x73],dh
  415513:	jg     0x4154cb
  415515:	dec    esi
  415516:	xchg   ebx,eax
  415517:	hlt    
  415518:	push   edi
  415519:	(bad)  
  41551a:	fisub  WORD PTR [edx+edi*1]
  41551d:	ds sbb ch,0xe5
  415521:	lods   al,BYTE PTR ds:[esi]
  415522:	sub    ecx,DWORD PTR [ebx+0x22b921c1]
  415528:	stos   DWORD PTR es:[edi],eax
  415529:	cmp    cl,BYTE PTR [edi+0x415ef405]
  41552f:	scas   al,BYTE PTR es:[edi]
  415530:	fsub   st,st(5)
  415532:	mov    bl,0xb4
  415534:	into   
  415535:	mov    BYTE PTR [ebp+0x73ba63b1],ch
  41553b:	enter  0xc616,0xbf
  41553f:	int3   
  415540:	add    ah,BYTE PTR [ebx]
  415542:	not    BYTE PTR [eax+0x7bfe0eb1]
  415548:	ins    BYTE PTR es:[edi],dx
  415549:	inc    esp
  41554a:	cs repnz shl dl,cl
  41554e:	out    0xe6,eax
  415550:	xchg   ebx,eax
  415551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415552:	inc    ebx
  415553:	mov    eax,0x38a4e3a5
  415558:	popf   
  415559:	pusha  
  41555a:	jp     0x41557a
  41555c:	push   esp
  41555d:	fist   DWORD PTR [edx]
  41555f:	xchg   DWORD PTR [esi-0x5],edi
  415562:	clc    
  415563:	sbb    eax,0xb7de2a60
  415568:	cmp    ah,cl
  41556a:	scas   eax,DWORD PTR es:[edi]
  41556b:	sbb    dl,BYTE PTR [edx]
  41556d:	cmp    BYTE PTR [edx-0xfbb8bb1],al
  415573:	fwait
  415574:	lock sub eax,0xa638676
  41557a:	outs   dx,BYTE PTR ds:[esi]
  41557b:	or     ebx,DWORD PTR [ebp+0x13e40db]
  415581:	jns    0x41553a
  415583:	and    al,0xa8
  415585:	mov    eax,0x46839c8
  41558a:	int3   
  41558b:	in     al,0xc6
  41558d:	adc    bl,BYTE PTR [eax]
  41558f:	push   ss
  415590:	enter  0xdaa4,0x85
  415594:	sbb    al,0x7
  415596:	imul   edi,edi,0xbb893637
  41559c:	dec    ebx
  41559d:	loop   0x4155b4
  41559f:	cmp    ch,bh
  4155a1:	and    edi,DWORD PTR [edx-0x6a]
  4155a4:	int3   
  4155a5:	stos   BYTE PTR es:[edi],al
  4155a6:	mov    bl,0xad
  4155a8:	mov    DWORD PTR [edi+eax*2],esi
  4155ab:	jmp    0x4155e2
  4155ad:	popf   
  4155ae:	or     BYTE PTR [ebx+0x37],dh
  4155b1:	push   ebp
  4155b2:	rcl    DWORD PTR ds:0x7a54fbf9,1
  4155b8:	cwde   
  4155b9:	fcom   DWORD PTR [eax+0x33a46116]
  4155bf:	adc    esp,ebx
  4155c1:	sub    DWORD PTR [ebp-0x40],eax
  4155c4:	call   0xc2b3:0x6ef03754
  4155cb:	aaa    
  4155cc:	in     eax,dx
  4155cd:	popa   
  4155ce:	fnstsw WORD PTR ds:0xd6e1
  4155d3:	push   eax
  4155d4:	mov    cl,cl
  4155d6:	out    dx,eax
  4155d7:	jmp    0x4f36e333
  4155dc:	je     0x415568
  4155de:	mov    al,ds:0x6a343981
  4155e3:	addr16 pop es
  4155e5:	retf   0xa013
  4155e8:	xchg   ecx,eax
  4155e9:	sbb    edi,DWORD PTR [ebp+0x63]
  4155ec:	jbe    0x4155a4
  4155ee:	mov    ebp,0xe9a43966
  4155f3:	mov    esi,0xb3cc32b7
  4155f8:	dec    BYTE PTR [esi-0x5b]
  4155fb:	and    al,0xd7
  4155fd:	xlat   BYTE PTR ds:[ebx]
  4155fe:	test   BYTE PTR [edi],al
  415600:	in     al,0xe1
  415602:	mov    edx,0x3791ecd0
  415607:	fcomp  QWORD PTR [edx]
  415609:	add    dh,BYTE PTR [edx+0x30]
  41560c:	icebp  
  41560d:	adc    eax,ebp
  41560f:	addr16 push fs
  415612:	xchg   BYTE PTR [ebx],cl
  415614:	inc    esp
  415615:	test   eax,0x360d98dc
  41561a:	jae    0x415690
  41561c:	jmp    0x2248:0x59f1e1c5
  415623:	push   0x7000dd65
  415628:	pop    ss
  415629:	popf   
  41562a:	out    dx,eax
  41562b:	mov    ds:0xb08678ec,eax
  415630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415631:	jl     0x4155dd
  415633:	int3   
  415634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415635:	push   eax
  415636:	mov    edi,0xeed1cfd0
  41563b:	mov    al,0x1d
  41563d:	out    dx,al
  41563e:	cmp    BYTE PTR [eax+0xa],dh
  415641:	jecxz  0x415680
  415643:	jnp    0x4155da
  415645:	cmc    
  415646:	pushf  
  415647:	js     0x415693
  415649:	bound  eax,QWORD PTR [edx]
  41564b:	sbb    bl,BYTE PTR [edi+0x77a2b3fe]
  415651:	mov    DWORD PTR [edi+ecx*2-0x61],esp
  415655:	or     bl,BYTE PTR [esp+edi*1+0x714554a3]
  41565c:	jg     0x41566a
  41565e:	and    ecx,DWORD PTR [edi-0x6defa09d]
  415664:	call   FWORD PTR [edx+0x34]
  415667:	add    al,0x81
  415669:	ret    0xfad2
  41566c:	shl    DWORD PTR [edx+esi*1+0x1af5cbea],1
  415673:	add    ebp,0xcee99c3a
  415679:	adc    dl,cl
  41567b:	gs adc bl,0xb5
  41567f:	fs int 0x4e
  415682:	push   esp
  415683:	jle    0x415692
  415685:	das    
  415686:	and    bh,BYTE PTR ds:0x8500b358
  41568c:	lods   eax,DWORD PTR ds:[esi]
  41568d:	adc    bh,BYTE PTR [eax-0xc]
  415690:	mov    ah,0xf1
  415692:	mov    edx,0xf6a845fd
  415697:	aas    
  415698:	inc    esi
  415699:	and    esp,eax
  41569b:	fist   WORD PTR [ecx-0x76c67cc5]
  4156a1:	addr16 push edi
  4156a3:	out    dx,eax
  4156a4:	mov    eax,0xa8377c5a
  4156a9:	add    ebx,DWORD PTR [esi]
  4156ab:	dec    esp
  4156ac:	mov    ds:0x1a5876c7,eax
  4156b1:	std    
  4156b2:	xchg   edx,eax
  4156b3:	in     al,0xce
  4156b5:	jb     0x41564a
  4156b7:	lea    edi,[esi]
  4156b9:	fs loop 0x4156be
  4156bc:	ficom  WORD PTR [edi]
  4156be:	or     edi,DWORD PTR [ebx+ecx*4-0x7f0cc6e6]
  4156c5:	and    DWORD PTR [eax-0x5ca4e23e],ebp
  4156cb:	xchg   bh,dl
  4156cd:	xchg   DWORD PTR [edx],esi
  4156cf:	(bad)  
  4156d1:	int3   
  4156d2:	push   esp
  4156d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156d4:	push   ds
  4156d5:	inc    eax
  4156d6:	scas   eax,DWORD PTR es:[edi]
  4156d7:	daa    
  4156d8:	fisttp DWORD PTR [ecx+0xa]
  4156db:	cmp    dl,ch
  4156dd:	nop
  4156de:	jne    0x4156ef
  4156e0:	jmp    0x415687
  4156e2:	cmp    DWORD PTR [edi+0x23],edx
  4156e5:	(bad)  
  4156e6:	sbb    WORD PTR [esp+edx*8+0x1665058],0xffaa
  4156ef:	push   edi
  4156f0:	mov    DWORD PTR [esi],edx
  4156f2:	lods   al,BYTE PTR ds:[esi]
  4156f3:	push   ebx
  4156f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156f5:	les    esi,FWORD PTR [edi-0x49c511f8]
  4156fb:	mov    esp,0x26c84bde
  415700:	mov    ah,0x5
  415702:	xor    edi,DWORD PTR [edi+0x6961f425]
  415708:	stos   DWORD PTR es:[edi],eax
  415709:	jae    0x415737
  41570b:	ficom  DWORD PTR [ecx+0x127e4054]
  415711:	mov    edi,0x4c09a48c
  415716:	mov    dl,0x4c
  415718:	push   cs
  415719:	pop    esp
  41571a:	add    al,BYTE PTR [eax+0x20]
  41571d:	mov    esp,DWORD PTR [eax+0x31]
  415720:	cmp    DWORD PTR [eax-0xe2170de],0x2
  415727:	mov    es,edi
  415729:	push   ecx
  41572a:	lds    ecx,FWORD PTR ds:0x9e5ef86a
  415730:	out    dx,eax
  415731:	xchg   edi,eax
  415732:	sbb    BYTE PTR [esi+ebp*1+0x6de994d2],0xc8
  41573a:	imul   ebx,DWORD PTR [ebx-0x7f],0x74
  41573e:	mov    esp,0x57d41ead
  415743:	call   0xa19a:0xca5feb2c
  41574a:	mov    esp,0xccf35636
  41574f:	out    0xa5,al
  415751:	pop    ebx
  415752:	fwait
  415753:	push   edi
  415754:	mov    ah,0x1c
  415756:	mov    BYTE PTR [ebx+0x229cb70],bl
  41575c:	cmp    DWORD PTR ds:0xb51310ae,esp
  415762:	mov    dl,BYTE PTR [eax]
  415764:	jno    0x4157a0
  415766:	adc    dl,bh
  415768:	jnp    0x4157a5
  41576a:	(bad)  
  41576b:	pop    ecx
  41576c:	(bad)  
  41576d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41576e:	jl     0x415715
  415770:	pop    edx
  415771:	cmp    eax,0x6a089c40
  415776:	xor    esi,DWORD PTR [edx]
  415778:	ja     0x4157ea
  41577a:	mov    ebx,0x16d634e8
  415780:	aam    0x67
  415782:	push   0x2f32ea66
  415787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415788:	jbe    0x41570d
  41578a:	sbb    DWORD PTR [esi],eax
  41578c:	sbb    ebp,edx
  41578e:	out    dx,al
  41578f:	xor    BYTE PTR ds:0x92478ae1,0x63
  415796:	mul    DWORD PTR [edi-0x18d32258]
  41579c:	jp     0x41579b
  41579e:	mov    bl,0x25
  4157a0:	gs nop
  4157a2:	adc    eax,eax
  4157a4:	sub    BYTE PTR [esi],bh
  4157a6:	inc    ebp
  4157a7:	sub    eax,0xd880cb4a
  4157ac:	adc    ecx,esp
  4157ae:	in     eax,dx
  4157af:	and    al,0x13
  4157b1:	mov    ebx,ebx
  4157b3:	jp     0x41575e
  4157b5:	cli    
  4157b6:	(bad)  
  4157b8:	jo     0x4157fb
  4157ba:	aam    0x84
  4157bc:	mov    edi,0x6c31ca94
  4157c1:	sbb    BYTE PTR [ebx+ecx*1+0x75765513],0x20
  4157c9:	enter  0xb557,0xb0
  4157cd:	cmc    
  4157ce:	jns    0x4157d9
  4157d0:	rcl    DWORD PTR [esi-0x6d],1
  4157d3:	mov    al,ds:0x12f2243a
  4157d8:	mov    BYTE PTR [edi],dl
  4157da:	test   al,0xc9
  4157dc:	aad    0x56
  4157de:	pop    ebp
  4157df:	xchg   edi,eax
  4157e0:	fucomi st,st(2)
  4157e2:	sub    BYTE PTR [ebp+0xcbcdf56],0xf7
  4157e9:	xchg   edi,eax
  4157ea:	pop    esp
  4157eb:	push   ebx
  4157ec:	fdiv   QWORD PTR [edi]
  4157ee:	popa   
  4157ef:	xchg   esp,eax
  4157f0:	das    
  4157f1:	xchg   esi,eax
  4157f2:	imul   eax,esp,0xa519df2e
  4157f8:	mov    ecx,0x4f12f03c
  4157fd:	sbb    BYTE PTR [edi-0x11669d20],0x1d
  415804:	mov    dl,0xe2
  415806:	shl    esp,1
  415808:	jp     0x415874
  41580a:	aam    0xdf
  41580c:	lods   eax,DWORD PTR ds:[esi]
  41580d:	jmp    0x415843
  41580f:	pop    esp
  415810:	stos   BYTE PTR es:[edi],al
  415811:	dec    edx
  415812:	adc    ch,cl
  415814:	loopne 0x415834
  415816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415817:	pop    dx
  415819:	and    eax,0x8ea8517d
  41581e:	sub    DWORD PTR [ebx],edx
  415820:	push   cs
  415821:	daa    
  415822:	pop    esi
  415823:	mov    al,ds:0xccdef60d
  415828:	shl    DWORD PTR [eax-0x446911f8],0x39
  41582f:	jp     0x415873
  415831:	das    
  415832:	jo     0x415879
  415834:	add    eax,0x498d0dbf
  415839:	repz pusha 
  41583b:	sub    al,0x80
  41583d:	or     dl,BYTE PTR [eax-0xd]
  415840:	mov    ds:0xbba3c68,eax
  415845:	xor    esp,esp
  415847:	lock or BYTE PTR [eax],bl
  41584a:	push   ebp
  41584b:	jo     0x41582c
  41584d:	pushf  
  41584e:	shl    DWORD PTR [ebx-0x3b],0xdb
  415852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415853:	sub    esi,edx
  415855:	bswap  edi
  415857:	xchg   esp,eax
  415858:	mov    ebx,esp
  41585a:	xchg   esp,eax
  41585b:	cdq    
  41585c:	loopne 0x415803
  41585e:	jnp    0x415814
  415860:	fisub  DWORD PTR [ebx+0x78]
  415863:	rol    BYTE PTR [ecx],cl
  415865:	fstp   TBYTE PTR [edx+edx*1]
  415868:	loopne 0x4158d8
  41586a:	inc    ebx
  41586b:	stos   DWORD PTR es:[edi],eax
  41586c:	push   edi
  41586d:	in     al,dx
  41586e:	inc    ecx
  41586f:	cdq    
  415870:	(bad)  
  415871:	aas    
  415872:	outs   dx,BYTE PTR ds:[esi]
  415873:	jl     0x415855
  415875:	push   es
  415876:	lods   al,BYTE PTR ds:[esi]
  415877:	xor    esi,eax
  415879:	sbb    dl,BYTE PTR [ebx-0x75cdcddf]
  41587f:	add    eax,ecx
  415881:	shl    BYTE PTR es:[eax+0x79d3d399],0xe8
  415889:	sti    
  41588a:	repnz add al,0x8e
  41588d:	ins    BYTE PTR es:[edi],dx
  41588e:	jmp    0x415886
  415890:	xchg   ecx,edx
  415892:	xchg   BYTE PTR [ecx+0x7e],al
  415895:	sbb    al,BYTE PTR [edi]
  415897:	out    0x0,al
  415899:	push   edi
  41589a:	cli    
  41589b:	leave  
  41589c:	mov    edi,0x8a77698d
  4158a1:	ds das 
  4158a3:	cld    
  4158a4:	push   0xffffff94
  4158a6:	call   0x3148f466
  4158ab:	mov    al,ds:0x31ba6256
  4158b0:	in     eax,dx
  4158b1:	pop    eax
  4158b2:	cwde   
  4158b3:	sub    esi,DWORD PTR [esi-0x39]
  4158b6:	sti    
  4158b7:	cmp    DWORD PTR [edi-0x5b],0x67
  4158bb:	mov    ebx,0x95aa0e0
  4158c0:	pop    edi
  4158c1:	sahf   
  4158c2:	cmp    eax,0x482e564e
  4158c7:	mov    ds:0x2a1e9be5,al
  4158cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158cd:	add    al,0x38
  4158cf:	not    DWORD PTR [eax+0x64]
  4158d2:	pop    ss
  4158d3:	adc    BYTE PTR [ebx+0x30],0x7
  4158d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158d8:	jle    0x415911
  4158da:	adc    DWORD PTR [eax],ecx
  4158dc:	fdiv   DWORD PTR [ebp-0x76]
  4158df:	sbb    eax,0x8d886278
  4158e4:	out    dx,eax
  4158e5:	pop    esi
  4158e6:	xchg   edi,eax
  4158e7:	add    edx,DWORD PTR [edi]
  4158e9:	or     eax,0xf134cb00
  4158ee:	fdiv   QWORD PTR ds:0xcd42642a
  4158f4:	mov    esp,0x2ded97ae
  4158f9:	rcr    DWORD PTR [eax+eiz*2],0xa4
  4158fd:	jns    0x41587f
  4158ff:	ret    
  415900:	jb     0x41589f
  415902:	mov    eax,ds:0x64123dad
  415907:	loope  0x415953
  415909:	cmp    edx,DWORD PTR [esi]
  41590b:	bound  ebp,QWORD PTR ds:0x3aa2fde5
  415911:	mov    WORD PTR [ebx-0x7b5f5322],ss
  415917:	jae    0x415950
  415919:	lods   eax,DWORD PTR ds:[esi]
  41591a:	mov    ch,0x27
  41591c:	loope  0x41594e
  41591e:	shl    DWORD PTR [esi],1
  415920:	push   0x1e44d61f
  415925:	repz jle 0x4158ee
  415928:	inc    eax
  415929:	adc    ecx,DWORD PTR [ebx]
  41592b:	(bad)  [eax-0x5174f689]
  415931:	lods   al,BYTE PTR ds:[esi]
  415932:	std    
  415933:	and    DWORD PTR [edx+0xf8f9645],edi
  415939:	and    al,0xfd
  41593b:	shl    cl,0x2
  41593e:	push   edx
  41593f:	ret    0xa1d7
  415942:	and    eax,0xc30739f3
  415947:	popf   
  415948:	shl    BYTE PTR [ebx+eiz*2-0x3a40a55],cl
  41594f:	cmp    al,BYTE PTR [eax+0x4236fadb]
  415955:	ja     0x415955
  415957:	sbb    al,0x90
  415959:	fs int 0x52
  41595c:	push   esi
  41595e:	and    BYTE PTR [edi-0x2f109e88],dh
  415964:	xchg   ebp,eax
  415965:	(bad)  
  415967:	ins    DWORD PTR es:[edi],dx
  415968:	dec    edx
  415969:	fwait
  41596a:	push   edi
  41596b:	push   esi
  41596c:	sub    bh,BYTE PTR [esi+ebp*8]
  41596f:	sbb    al,BYTE PTR [esi+0x65f7ca92]
  415975:	sub    dl,BYTE PTR [ecx+0x676bcaf4]
  41597b:	jge    0x4159ac
  41597d:	leave  
  41597e:	test   esp,edx
  415980:	jno    0x41597f
  415982:	jecxz  0x41597c
  415984:	inc    eax
  415985:	jo     0x4159ec
  415987:	fild   WORD PTR [eax]
  415989:	and    BYTE PTR [edx],ah
  41598b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41598c:	popf   
  41598d:	push   esp
  41598e:	mov    eax,0xc2fd736d
  415993:	dec    esp
  415994:	ret    0x27e4
  415997:	jno    0x4159df
  415999:	fnsave [eax-0xc7cdcde]
  41599f:	popf   
  4159a0:	idiv   dl
  4159a2:	pushf  
  4159a3:	dec    ecx
  4159a4:	xor    al,0x93
  4159a6:	daa    
  4159a7:	call   0x987c:0x452292b7
  4159ae:	cmp    esi,DWORD PTR [edi-0x48]
  4159b1:	rol    DWORD PTR [edi+eiz*8-0x7d21ec8d],1
  4159b8:	retf   
  4159b9:	dec    ebp
  4159ba:	xchg   esi,eax
  4159bb:	out    dx,al
  4159bc:	ss pusha 
  4159be:	mov    eax,0x38bf79cc
  4159c3:	or     eax,0xa15cf092
  4159c8:	dec    edi
  4159c9:	sbb    BYTE PTR [ecx+0x24f07e61],ch
  4159cf:	inc    ecx
  4159d0:	aaa    
  4159d1:	ins    DWORD PTR es:[edi],dx
  4159d2:	add    ah,ch
  4159d4:	call   0x8c5de83d
  4159d9:	xor    DWORD PTR [ebp+0x6dff943b],ecx
  4159df:	sub    ah,BYTE PTR [edx-0x1c9271c6]
  4159e5:	xor    al,BYTE PTR [ebx+0x36]
  4159e8:	les    esp,FWORD PTR [esi-0x7b]
  4159eb:	jae    0x4159ce
  4159ed:	mov    al,BYTE PTR [ecx]
  4159ef:	lods   al,BYTE PTR ds:[esi]
  4159f0:	(bad)  
  4159f1:	popa   
  4159f2:	cld    
  4159f3:	(bad)  
  4159f4:	fnsave [edi-0x29]
  4159f7:	fstp   DWORD PTR [edx+0x6f]
  4159fa:	xchg   ecx,eax
  4159fb:	adc    bl,BYTE PTR [edx+0x71]
  4159fe:	aaa    
  4159ff:	sub    al,dl
  415a01:	mov    edx,0xd59de943
  415a06:	dec    ebp
  415a07:	test   al,0x57
  415a09:	out    0xa4,al
  415a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a0c:	push   ecx
  415a0d:	outs   dx,BYTE PTR ds:[esi]
  415a0e:	sbb    edi,DWORD PTR [edi-0x1421f4e1]
  415a14:	test   DWORD PTR [ecx],0x98c911d3
  415a1a:	and    BYTE PTR [ecx-0x4c561d84],cl
  415a20:	jnp    0x4159fe
  415a22:	sahf   
  415a23:	sbb    al,0x92
  415a25:	jecxz  0x4159af
  415a27:	push   ss
  415a28:	xchg   edi,eax
  415a29:	shl    edx,cl
  415a2b:	xor    BYTE PTR [ebp-0x49],ch
  415a2e:	out    dx,al
  415a2f:	mov    ds:0x6a9b720e,al
  415a34:	popa   
  415a35:	aaa    
  415a36:	inc    ecx
  415a37:	popa   
  415a38:	idiv   DWORD PTR [ebp+0x75]
  415a3b:	adc    eax,0xf4fe1755
  415a40:	outs   dx,DWORD PTR ds:[esi]
  415a41:	xlat   BYTE PTR ds:[ebx]
  415a42:	xchg   DWORD PTR [eax+0x7d30f6ac],edx
  415a48:	dec    ebp
  415a49:	mov    eax,ds:0x3c44970e
  415a4e:	cdq    
  415a4f:	pcmpeqd mm0,QWORD PTR [eax]
  415a52:	mov    ebx,0x45337972
  415a57:	es jno 0x415a7a
  415a5a:	pop    ebx
  415a5b:	or     dl,0xa2
  415a5e:	adc    DWORD PTR [eax+0x3bae8f63],ebx
  415a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a65:	sub    eax,0xd45c406c
  415a6a:	jl     0x415ae6
  415a6c:	retf   0x2197
  415a6f:	push   ds
  415a70:	push   ebx
  415a71:	mov    esp,DWORD PTR [eax-0x50]
  415a74:	mov    dl,0xef
  415a76:	push   ds
  415a77:	scas   al,BYTE PTR es:[edi]
  415a78:	adc    eax,0xa9855561
  415a7d:	push   edi
  415a7e:	daa    
  415a7f:	adc    BYTE PTR [ebp-0x29],bl
  415a82:	cwde   
  415a83:	xor    al,0xb7
  415a85:	dec    ebp
  415a86:	scas   al,BYTE PTR es:[edi]
  415a87:	out    0x85,al
  415a89:	dec    ecx
  415a8a:	es mov dh,ah
  415a8d:	add    BYTE PTR [eax+0x6f],ch
  415a90:	mov    ds:0x39bd0a2e,al
  415a95:	jmp    0x77dc:0x6db18454
  415a9c:	int    0xbc
  415a9e:	popf   
  415a9f:	leave  
  415aa0:	adc    BYTE PTR [edx+eiz*8-0x4d],bl
  415aa4:	gs aad 0x57
  415aa7:	cdq    
  415aa8:	pop    eax
  415aa9:	outs   dx,DWORD PTR ds:[esi]
  415aaa:	lods   al,BYTE PTR ds:[esi]
  415aab:	imul   DWORD PTR [ecx]
  415aad:	push   eax
  415aae:	xchg   BYTE PTR [ebp+0x13],ah
  415ab1:	pop    edi
  415ab2:	and    DWORD PTR [ebp-0x26],ebp
  415ab5:	push   0xffffffbc
  415ab7:	mov    BYTE PTR [esi-0x28],cl
  415aba:	cmp    ch,BYTE PTR [ebp+0x4c225ce4]
  415ac0:	fs push edx
  415ac2:	test   eax,0x60c59628
  415ac7:	test   eax,0x3db097d3
  415acc:	ret    0x6f49
  415acf:	add    BYTE PTR [ecx+0x2eec6444],cl
  415ad5:	mov    ecx,0x2191e443
  415ada:	mov    esi,0x831912d
  415adf:	cmc    
  415ae0:	nop
  415ae1:	fwait
  415ae2:	jnp    0x415a98
  415ae4:	loop   0x415afa
  415ae6:	mov    eax,ds:0x37776d5
  415aeb:	rcl    BYTE PTR [esi-0x2e],0x13
  415aef:	or     al,0x2f
  415af1:	inc    eax
  415af2:	sbb    BYTE PTR [esi-0x67],cl
  415af5:	or     esp,DWORD PTR [esi+ecx*1-0x40c41e2]
  415afc:	mov    ch,0x0
  415afe:	mov    al,ds:0xf31f4808
  415b03:	push   ss
  415b04:	std    
  415b05:	fs arpl WORD PTR es:[esi],sp
  415b09:	mov    bl,bh
  415b0b:	xor    eax,0x6a330614
  415b10:	bnd jg 0x415b7f
  415b13:	adc    dl,ch
  415b15:	sbb    al,0x82
  415b17:	inc    ebx
  415b18:	leave  
  415b19:	dec    esp
  415b1a:	scas   eax,DWORD PTR es:[edi]
  415b1b:	cmp    ch,0x62
  415b1e:	mov    eax,ds:0x4ce65775
  415b23:	mov    ebx,0xb493cd7c
  415b28:	xor    BYTE PTR [edi+0x12],cl
  415b2b:	lea    edi,[ecx-0x3b]
  415b2e:	in     al,dx
  415b2f:	pop    eax
  415b30:	jno    0x415ad9
  415b32:	adc    DWORD PTR ds:0xb51a8e0d,0xffffffa5
  415b39:	add    esi,DWORD PTR [esi]
  415b3b:	aas    
  415b3c:	sub    BYTE PTR [ebx-0x77726d52],ch
  415b42:	push   esi
  415b43:	pusha  
  415b44:	sbb    edx,DWORD PTR [esi+0xe]
  415b47:	ss push 0x50
  415b4a:	jno    0x415b80
  415b4c:	and    eax,0x192b13c4
  415b51:	cld    
  415b52:	add    BYTE PTR [eax+0x3987f4a8],bl
  415b58:	sub    BYTE PTR ds:0x571260b,bh
  415b5e:	sub    esi,DWORD PTR [eax-0x17]
  415b61:	daa    
  415b62:	add    ah,bl
  415b64:	fnstenv [ebx+0x6b051cbd]
  415b6a:	add    BYTE PTR [ecx+0x7c4ce192],bl
  415b70:	cmp    eax,0x90b0d4df
  415b75:	ror    DWORD PTR gs:[edi],0x9b
  415b79:	(bad)  
  415b7a:	imul   DWORD PTR ds:0xad549fa7
  415b80:	cmp    eax,0x63681458
  415b85:	mov    edx,0x62008815
  415b8a:	ror    BYTE PTR [esi],cl
  415b8c:	shl    eax,1
  415b8e:	push   esi
  415b8f:	xchg   edi,eax
  415b90:	rcr    DWORD PTR [eax-0x6c],cl
  415b93:	call   0xb737c761
  415b98:	jo     0x415b4b
  415b9a:	ins    BYTE PTR es:[edi],dx
  415b9b:	and    BYTE PTR [ecx+eax*2-0x72],0xa6
  415ba0:	imul   edx,edi,0x6c
  415ba3:	(bad)  
  415ba4:	(bad)  
  415ba5:	jecxz  0x415bab
  415ba7:	leave  
  415ba8:	not    DWORD PTR [ecx+0x35b30b76]
  415bae:	xor    ebx,DWORD PTR [eax+edi*2+0x2b]
  415bb2:	sbb    al,ch
  415bb4:	call   0xc403:0x28ba6098
  415bbb:	inc    edi
  415bbc:	ret    
  415bbd:	pop    edi
  415bbe:	sahf   
  415bbf:	jecxz  0x415b93
  415bc1:	mov    dl,0xd3
  415bc3:	sbb    eax,0x6c9cfcf4
  415bc8:	in     eax,dx
  415bc9:	icebp  
  415bca:	inc    ecx
  415bcb:	leave  
  415bcc:	xor    al,0x6c
  415bce:	hlt    
  415bcf:	rol    BYTE PTR [eax-0x69],0x50
  415bd3:	jge    0x415bee
  415bd5:	test   al,0x5f
  415bd7:	retf   
  415bd8:	push   cs
  415bd9:	das    
  415bda:	adc    al,0x66
  415bdc:	test   bl,0x5b
  415bdf:	push   esp
  415be0:	loop   0x415bc2
  415be2:	lods   al,BYTE PTR ds:[esi]
  415be3:	push   0xa1266ec
  415be8:	ret    0xad79
  415beb:	in     eax,0xeb
  415bed:	mov    eax,0x5733a63e
  415bf2:	mov    bl,0x51
  415bf4:	and    al,0x75
  415bf6:	loop   0x415c45
  415bf8:	mov    BYTE PTR [ebx],bh
  415bfa:	data16 fidiv DWORD PTR ds:0xe1d
  415c00:	daa    
  415c01:	mov    DWORD PTR [ebx+eiz*8+0x69],ebx
  415c05:	mov    ecx,0xd95454c4
  415c0a:	(bad)  
  415c0b:	fwait
  415c0c:	sbb    esp,DWORD PTR [edx-0x78]
  415c0f:	test   DWORD PTR [edi-0x23],esi
  415c12:	sbb    al,0x48
  415c14:	mov    WORD PTR [edi+0x4a5d0e7e],?
  415c1a:	das    
  415c1b:	mov    esp,edx
  415c1d:	das    
  415c1e:	aam    0xf0
  415c20:	xchg   edi,eax
  415c21:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  415c23:	ja     0x415c32
  415c25:	jns    0x415c92
  415c27:	cmpps  xmm6,XMMWORD PTR [edx-0xf],0xe0
  415c2c:	or     esp,eax
  415c2e:	inc    esp
  415c2f:	xchg   edi,eax
  415c30:	adc    ecx,esp
  415c32:	xchg   esi,eax
  415c33:	in     eax,0xd2
  415c35:	or     edx,DWORD PTR ds:0xbe1bd7cd
  415c3b:	pop    es
  415c3c:	push   ds
  415c3d:	push   0xffffffc3
  415c3f:	sbb    eax,0x591f563c
  415c44:	out    dx,eax
  415c45:	dec    edi
  415c46:	aaa    
  415c47:	mov    DWORD PTR [ebx],ebp
  415c49:	fsub   st(1),st
  415c4b:	lods   eax,DWORD PTR ds:[esi]
  415c4c:	sub    ebp,DWORD PTR [edi+esi*1+0x5b]
  415c50:	add    di,bp
  415c53:	sbb    ebx,eax
  415c55:	icebp  
  415c56:	or     bh,bh
  415c58:	and    dl,BYTE PTR [esi]
  415c5a:	jnp    0x415c3d
  415c5c:	in     al,0x1b
  415c5e:	pop    eax
  415c5f:	mov    dl,0xf9
  415c61:	or     ebp,DWORD PTR [ebx]
  415c63:	sub    eax,0x8671cbec
  415c68:	loope  0x415bf0
  415c6a:	fs sub al,0x16
  415c6d:	adc    al,ah
  415c6f:	test   eax,0xa5fe2b41
  415c74:	or     ebp,DWORD PTR [eax]
  415c76:	push   ebp
  415c77:	mov    ds:0xe7c002df,eax
  415c7c:	enter  0xaa0a,0x72
  415c80:	mov    bh,0xb8
  415c82:	retf   
  415c83:	(bad)  
  415c84:	out    dx,eax
  415c85:	sub    DWORD PTR [ecx+esi*2-0x660b3d1f],esi
  415c8c:	je     0x415c49
  415c8e:	hlt    
  415c8f:	or     bl,al
  415c91:	jle    0x415cdf
  415c93:	pop    ecx
  415c94:	mov    ebx,edx
  415c96:	cmp    bh,bl
  415c98:	repz push eax
  415c9a:	jmp    0x415c3c
  415c9c:	fs ret 0x171b
  415ca0:	in     al,dx
  415ca1:	(bad)  
  415ca2:	pop    ss
  415ca3:	pusha  
  415ca4:	xor    DWORD PTR [esi+0x70fee2e4],esi
  415caa:	push   cs
  415cab:	xchg   esp,ebx
  415cad:	test   eax,0xc4b2fe2
  415cb2:	ja     0x415c59
  415cb4:	dec    ebp
  415cb5:	pusha  
  415cb6:	clc    
  415cb7:	scas   al,BYTE PTR es:[edi]
  415cb8:	sahf   
  415cb9:	add    edx,DWORD PTR [ecx+0x9]
  415cbc:	jnp    0x415c7a
  415cbe:	jecxz  0x415ca0
  415cc0:	retf   0x23d8
  415cc3:	imul   ebp,DWORD PTR [esi+0x9],0xff4f3e34
  415cca:	pop    ds
  415ccb:	test   dl,dh
  415ccd:	or     ecx,DWORD PTR [ebx-0x1b0a781b]
  415cd3:	or     eax,0xb09b3795
  415cd8:	jmp    0x415d45
  415cda:	mov    ah,0xc9
  415cdc:	rcl    bl,1
  415cde:	(bad)  
  415ce0:	and    cl,bh
  415ce2:	or     DWORD PTR [ebx-0x32],ecx
  415ce5:	or     bh,BYTE PTR [edx-0x2d]
  415ce8:	add    DWORD PTR [ebp-0x87e9ea9],edx
  415cee:	aas    
  415cef:	js     0x415cc4
  415cf1:	mov    bh,0x33
  415cf3:	out    0x63,al
  415cf5:	mov    ebx,0x20e8e25c
  415cfa:	cmc    
  415cfb:	lds    ecx,FWORD PTR [edi+0x59]
  415cfe:	push   esi
  415cff:	sbb    DWORD PTR [esi],ebx
  415d01:	xor    al,0xd9
  415d03:	clc    
  415d04:	pop    ecx
  415d05:	imul   ebp,DWORD PTR [edi+0xd3472b1],0xffffffd1
  415d0c:	call   0x2351f537
  415d11:	inc    esi
  415d12:	pop    edi
  415d13:	push   es
  415d14:	pop    ebp
  415d15:	xchg   edi,eax
  415d16:	dec    ecx
  415d17:	or     edx,DWORD PTR ds:0xe50cbc07
  415d1d:	dec    edi
  415d1e:	mov    ds:0xca7ad9cd,eax
  415d23:	xor    dh,cl
  415d25:	sub    BYTE PTR ds:0xa916e1f3,bh
  415d2b:	in     eax,0xa5
  415d2d:	adc    ah,BYTE PTR [eax]
  415d2f:	pop    es
  415d30:	imul   ecx,DWORD PTR [edx-0x6d],0x9
  415d34:	cmp    al,0x39
  415d36:	jne    0x415d88
  415d38:	xchg   edi,eax
  415d39:	mov    esp,0xcfb067cb
  415d3e:	fidivr DWORD PTR [esi]
  415d40:	rdtsc  
  415d42:	jae    0x415dc0
  415d44:	dec    ecx
  415d45:	add    eax,ebx
  415d47:	in     al,dx
  415d48:	loope  0x415dc5
  415d4a:	xchg   ebp,eax
  415d4b:	mov    al,BYTE PTR [ecx-0x73]
  415d4e:	cmp    DWORD PTR [ebp+0x1a],esi
  415d51:	fwait
  415d52:	mov    ch,0xac
  415d54:	ror    esp,1
  415d56:	fdiv   DWORD PTR [edi]
  415d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d59:	dec    ecx
  415d5a:	pop    ebp
  415d5b:	jno    0x415d22
  415d5d:	pop    ecx
  415d5e:	jno    0x415d37
  415d60:	aam    0xbe
  415d62:	cmp    al,0x12
  415d64:	loop   0x415db3
  415d66:	stc    
  415d67:	mov    al,bh
  415d69:	or     eax,0x3f994ede
  415d6e:	sub    al,0xc8
  415d70:	xchg   BYTE PTR [esi-0x3],ch
  415d73:	adc    BYTE PTR [edx+esi*8-0x18],dl
  415d77:	and    cl,ah
  415d79:	fisttp DWORD PTR [ebx]
  415d7b:	sbb    DWORD PTR [ebp+0x4b],eax
  415d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d7f:	fwait
  415d80:	push   edx
  415d81:	jle    0x415d98
  415d83:	iret   
  415d84:	ret    
  415d85:	sbb    BYTE PTR [edx+0x2bf2830d],bl
  415d8b:	fwait
  415d8c:	lahf   
  415d8d:	mov    ebp,0x9a30d115
  415d92:	sbb    al,0xca
  415d94:	fld    QWORD PTR [ebx]
  415d96:	lds    edx,FWORD PTR [ecx-0x3e2b6be5]
  415d9c:	mov    ch,0x35
  415d9e:	or     DWORD PTR [ebx],edi
  415da0:	mov    esi,0x828c803a
  415da5:	shl    DWORD PTR [ebx-0x5c],cl
  415da8:	fwait
  415da9:	cmp    al,0x66
  415dab:	mov    ch,0x82
  415dad:	dec    eax
  415dae:	mov    ah,0xcc
  415db0:	push   ds
  415db1:	scas   eax,DWORD PTR es:[edi]
  415db2:	(bad)  
  415db3:	in     eax,dx
  415db4:	mov    esi,0x89113a74
  415db9:	adc    BYTE PTR [ebx+eiz*2-0x1cc71b65],al
  415dc0:	xlat   BYTE PTR ds:[ebx]
  415dc1:	cld    
  415dc2:	fcomp  DWORD PTR [ebx+0x41]
  415dc5:	fist   DWORD PTR [ecx]
  415dc7:	or     ecx,0xa
  415dca:	out    0xa7,eax
  415dcc:	aad    0x8b
  415dce:	or     al,0xc6
  415dd0:	adc    al,0xe9
  415dd2:	sub    dh,BYTE PTR [eax-0x7a3ed1f4]
  415dd8:	fstp   DWORD PTR [edi+0x13d96d5d]
  415dde:	add    al,0x34
  415de0:	rol    ebx,cl
  415de2:	test   BYTE PTR [ebx-0x56],ah
  415de5:	dec    ebp
  415de6:	inc    eax
  415de7:	pop    edx
  415de8:	lods   al,BYTE PTR ds:[esi]
  415de9:	cmp    esi,esi
  415deb:	xor    ch,BYTE PTR [esi]
  415ded:	ins    BYTE PTR es:[edi],dx
  415dee:	xchg   ebx,eax
  415def:	(bad)  [ecx-0x79]
  415df2:	mov    esp,0x673e91d1
  415df7:	ja     0xdb50c72e
  415dfd:	xchg   ebp,eax
  415dfe:	sub    eax,0x4584be8a
  415e03:	je     0x415e6e
  415e05:	jno    0x415e57
  415e07:	pop    edi
  415e08:	sbb    al,0xcb
  415e0a:	xor    BYTE PTR [ebp-0x75c890ca],al
  415e10:	mov    esp,0x26502a2d
  415e15:	test   al,0x54
  415e17:	push   esi
  415e18:	idiv   BYTE PTR [edx-0x10]
  415e1b:	sub    eax,0x6966c384
  415e20:	into   
  415e21:	stc    
  415e22:	cs xor al,0x53
  415e25:	loopne 0x415de0
  415e27:	sub    DWORD PTR [edi+0x23],0xa883055a
  415e2e:	arpl   WORD PTR [ecx+0x62bfea16],bx
  415e34:	scas   eax,DWORD PTR es:[edi]
  415e35:	mov    WORD PTR [ebp-0x6d1532dc],?
  415e3b:	repnz sbb eax,0x6d964f1
  415e41:	sub    cl,BYTE PTR [esi+0xa]
  415e44:	xor    eax,0xdf6bab4c
  415e49:	inc    edx
  415e4a:	cmp    BYTE PTR [edi],0x61
  415e4d:	ror    DWORD PTR ds:0x4ac3df7f,1
  415e53:	mov    ebx,0x1a1c0c47
  415e58:	jle    0x415e23
  415e5a:	xchg   edx,eax
  415e5b:	in     eax,dx
  415e5c:	add    cl,BYTE PTR [ebp-0x59b6d56e]
  415e62:	es mov edx,0x4261e368
  415e68:	movapd xmm6,xmm2
  415e6c:	inc    esp
  415e6d:	data16 ja 0x415eb8
  415e70:	mov    edx,0x62c24674
  415e75:	inc    ecx
  415e76:	out    dx,al
  415e77:	idiv   cl
  415e79:	pop    ebp
  415e7a:	add    al,BYTE PTR [edi-0x6a]
  415e7d:	jp     0x415e25
  415e7f:	lahf   
  415e80:	mov    BYTE PTR [edi+esi*8],dl
  415e83:	repnz sbb edx,0xab8d030a
  415e8a:	sub    ah,BYTE PTR [ebp+0x5d]
  415e8d:	cli    
  415e8e:	dec    esp
  415e8f:	popf   
  415e90:	adc    al,0x42
  415e92:	call   0x8124:0x2d87687e
  415e99:	or     eax,0xe79d0e20
  415e9e:	adc    BYTE PTR [eax-0x4af4892d],ch
  415ea4:	(bad)  
  415ea6:	pop    ebp
  415ea7:	shl    DWORD PTR [ebx-0x44],0xe9
  415eab:	mov    BYTE PTR [esi],ch
  415ead:	mov    dh,BYTE PTR [edi]
  415eaf:	xchg   edx,eax
  415eb0:	iret   
  415eb1:	add    esi,DWORD PTR [edi]
  415eb3:	push   cs
  415eb4:	shl    DWORD PTR [eax-0x32],0xf6
  415eb8:	jp     0x415ea0
  415eba:	push   cs
  415ebb:	add    dh,0x3c
  415ebe:	pop    ss
  415ebf:	aaa    
  415ec0:	std    
  415ec1:	xchg   edi,eax
  415ec2:	pop    edx
  415ec3:	xchg   edi,eax
  415ec4:	mul    ebp
  415ec6:	add    DWORD PTR [eax],0xffffffe5
  415ec9:	jg     0x415e8f
  415ecb:	dec    ebx
  415ecc:	xchg   ebp,eax
  415ecd:	in     eax,0x52
  415ecf:	in     al,dx
  415ed0:	int    0x8
  415ed2:	sbb    eax,0x20653a90
  415ed7:	dec    edi
  415ed8:	mov    WORD PTR [ebx+0x32],ss
  415edb:	or     ah,dh
  415edd:	or     edx,DWORD PTR ds:0xe9dd7932
  415ee3:	push   esi
  415ee4:	sar    BYTE PTR [edx],1
  415ee6:	dec    esp
  415ee7:	fcomp  QWORD PTR [edx+eiz*2-0x36348928]
  415eee:	leave  
  415eef:	or     DWORD PTR [ebx+eax*1],ebx
  415ef2:	jb     0x415ef4
  415ef4:	test   al,0xe3
  415ef6:	lea    eax,[edx]
  415ef8:	outs   dx,DWORD PTR ds:[esi]
  415ef9:	xchg   ebx,eax
  415efa:	sbb    al,ch
  415efc:	add    eax,0xdf76b58f
  415f01:	jne    0x415f5c
  415f03:	ds inc edx
  415f05:	adc    BYTE PTR [ebx+ebp*4+0x4c6ad91c],bh
  415f0c:	add    DWORD PTR ds:0x91b0e39e,0xaafc2202
  415f16:	cmp    esi,DWORD PTR [eax-0x4c]
  415f19:	or     DWORD PTR [edx-0x327be7f3],ebx
  415f1f:	imul   edi,DWORD PTR [edx+0x11],0x3fe89ffa
  415f26:	mov    al,al
  415f28:	pusha  
  415f29:	dec    eax
  415f2a:	outs   dx,DWORD PTR ds:[esi]
  415f2b:	scas   al,BYTE PTR es:[edi]
  415f2c:	dec    esi
  415f2d:	loop   0x415efa
  415f2f:	add    al,0xc1
  415f31:	xchg   BYTE PTR [ebp-0x3e],bl
  415f34:	dec    edi
  415f35:	retf   
  415f36:	scas   al,BYTE PTR es:[edi]
  415f37:	arpl   bp,bp
  415f39:	or     dh,dl
  415f3b:	mov    dl,0x15
  415f3e:	das    
  415f3f:	pslld  mm1,QWORD PTR [ebp+0x2ccc6dab]
  415f46:	pop    esi
  415f47:	mov    esp,0xe76bc53d
  415f4c:	xor    eax,0xf0961e11
  415f51:	xchg   ecx,eax
  415f52:	retf   
  415f53:	inc    esp
  415f54:	mov    BYTE PTR [ecx+esi*2+0x41e0c526],ah
  415f5b:	daa    
  415f5c:	push   es
  415f5d:	jo     0x415f9a
  415f5f:	and    eax,0x25dcdd7
  415f64:	xor    eax,0x69d8a7ad
  415f69:	pop    ss
  415f6a:	stos   DWORD PTR es:[edi],eax
  415f6b:	popa   
  415f6c:	push   eax
  415f6d:	xchg   BYTE PTR [eax+eax*1+0x1a],cl
  415f71:	imul   ecx,DWORD PTR [edi],0x5658c48b
  415f77:	push   ecx
  415f78:	pop    es
  415f79:	aad    0x69
  415f7b:	shr    ah,cl
  415f7d:	loop   0x415f97
  415f7f:	adc    bl,ah
  415f81:	mov    bl,0x4c
  415f83:	push   ebp
  415f84:	sahf   
  415f85:	push   edx
  415f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f87:	ret    0x1174
  415f8a:	xchg   edx,eax
  415f8b:	aad    0x22
  415f8d:	rcr    BYTE PTR ds:0xacef0549,cl
  415f93:	pop    eax
  415f94:	outs   dx,DWORD PTR ds:[esi]
  415f95:	aad    0x8f
  415f97:	addr16 shr edx,cl
  415f9a:	sbb    BYTE PTR [edx+eax*1-0x29e69b38],al
  415fa1:	ficom  WORD PTR [eax]
  415fa3:	cli    
  415fa4:	add    dl,0x8d
  415fa7:	or     dh,BYTE PTR [eax+ebx*1+0x3bc02b38]
  415fae:	mov    esi,0xe4989afc
  415fb3:	pop    ds
  415fb4:	fistp  DWORD PTR [ecx-0x7a]
  415fb7:	xor    al,al
  415fb9:	fld    QWORD PTR [eax]
  415fbb:	and    ch,BYTE PTR [ecx+0x13e3a2e6]
  415fc1:	mov    ds:0xac82ebea,eax
  415fc6:	scas   al,BYTE PTR es:[edi]
  415fc7:	test   DWORD PTR [edi],ecx
  415fc9:	cdq    
  415fca:	fsubr  st(3),st
  415fcc:	add    eax,0xfc5199ef
  415fd1:	inc    ecx
  415fd2:	push   ebx
  415fd3:	fadd   DWORD PTR [ebp-0x55ca775f]
  415fd9:	scas   al,BYTE PTR es:[edi]
  415fda:	nop
  415fdb:	cs call 0xa8702a33
  415fe1:	nop
  415fe2:	call   0x56a7:0xef895843
  415fe9:	mul    BYTE PTR [ebx-0x37]
  415fec:	dec    ebx
  415fed:	imul   esi,ebp,0x870fffbb
  415ff3:	inc    ebx
  415ff4:	or     edx,DWORD PTR [esp+eiz*2]
  415ff7:	inc    edi
  415ff8:	sbb    eax,0xa2345f55
  415ffd:	lods   al,BYTE PTR ds:[esi]
  415ffe:	adc    BYTE PTR [ebp+0x5a2544b5],ah
  416004:	pop    ds
  416005:	jns    0x415fd0
  416007:	scas   eax,DWORD PTR es:[edi]
  416008:	xchg   edi,eax
  416009:	adc    dh,bl
  41600b:	repz sub al,0x8b
  41600e:	cmp    eax,0x925bc43d
  416013:	stc    
  416014:	inc    eax
  416015:	and    al,0xc4
  416017:	loope  0x415fce
  416019:	xchg   DWORD PTR [ebx-0x21d5d944],edx
  41601f:	jge    0x415fc0
  416021:	jmp    0x41603e
  416023:	out    0x50,eax
  416025:	not    BYTE PTR [ecx+eiz*2]
  416028:	push   ecx
  416029:	int3   
  41602a:	repz push esi
  41602c:	sub    BYTE PTR [ecx+0x5e4c0e7d],ch
  416032:	imul   edi,DWORD PTR [ebx+0x43324f9c],0x5b291ca8
  41603c:	in     al,0xa4
  41603e:	dec    ebx
  41603f:	mov    ?,WORD PTR ss:[ebp+0x3f271821]
  416046:	pushf  
  416047:	pop    edi
  416048:	addr16 push ebx
  41604a:	add    al,0x2f
  41604c:	stos   DWORD PTR es:[edi],eax
  41604d:	mov    bp,0x35ad
  416051:	retf   
  416052:	mov    ecx,0x8fce1621
  416057:	mov    bl,0x4b
  416059:	sbb    ecx,DWORD PTR [ebx]
  41605b:	sbb    DWORD PTR [edx+0x20c26942],edi
  416061:	ret    0xc5d7
  416064:	push   0x22cc222a
  416069:	or     BYTE PTR [eax-0x6f77d80f],dl
  41606f:	dec    edx
  416070:	(bad)  
  416071:	icebp  
  416072:	cdq    
  416073:	(bad)  
  416074:	cmp    al,0x6
  416076:	cwde   
  416077:	jl     0x4160b0
  416079:	mov    esi,0xd6c4bdad
  41607e:	dec    ebx
  41607f:	aaa    
  416080:	jno    0x4160ec
  416082:	fwait
  416083:	scas   eax,DWORD PTR es:[edi]
  416084:	out    dx,al
  416085:	lahf   
  416086:	dec    ebp
  416087:	and    al,0x43
  416089:	adc    eax,0x19fd9b54
  41608e:	push   es
  41608f:	test   eax,0x336a3f99
  416094:	and    al,0x84
  416096:	sub    ebp,DWORD PTR [bx+si+0x5713]
  41609b:	push   0x6689dae
  4160a0:	sub    al,BYTE PTR gs:[edi-0x7b608ee6]
  4160a7:	inc    esi
  4160a8:	ds xor eax,0x3f030bbc
  4160ae:	fiadd  DWORD PTR [ebx+0x65ebb75f]
  4160b4:	adc    eax,0x8ef636fe
  4160b9:	int    0x8
  4160bb:	ss mov cl,0x6e
  4160be:	sti    
  4160bf:	push   ecx
  4160c0:	dec    edi
  4160c1:	xor    dh,BYTE PTR [eax+ecx*2+0x43f81ab4]
  4160c8:	or     bh,BYTE PTR [ebx+0x7033c64a]
  4160ce:	ss lock aaa 
  4160d1:	inc    ebx
  4160d2:	xor    ecx,DWORD PTR [ecx+eiz*4]
  4160d5:	imul   ebp,DWORD PTR [esi],0x22
  4160d8:	ret    
  4160d9:	sahf   
  4160da:	xchg   edx,eax
  4160db:	sbb    al,BYTE PTR [edi]
  4160dd:	ret    
  4160de:	sbb    BYTE PTR ds:0x1cddf15c,bh
  4160e4:	mov    ebx,0x407b8bca
  4160e9:	pop    es
  4160ea:	sbb    al,0xd2
  4160ec:	mov    ebx,0x647d8af0
  4160f1:	cmp    BYTE PTR [esi-0x37],0x1
  4160f5:	xor    BYTE PTR [ecx],bh
  4160f7:	xor    ah,ch
  4160f9:	pusha  
  4160fa:	dec    edi
  4160fb:	jge    0x416123
  4160fd:	stc    
  4160fe:	adc    BYTE PTR [edx],ah
  416100:	mov    ah,0x49
  416102:	jg     0x416170
  416104:	fisub  WORD PTR [ebx]
  416106:	mov    eax,DWORD PTR [ebp+0x22]
  416109:	out    dx,al
  41610a:	or     DWORD PTR [eax],0xffffffd7
  41610d:	mov    DWORD PTR [ebx],ebx
  41610f:	add    BYTE PTR [esi+0x4437a0ad],dh
  416115:	lea    eax,[edx-0x1d8d38f5]
  41611b:	and    DWORD PTR [ecx],esp
  41611d:	(bad)  
  41611e:	xchg   edi,eax
  41611f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416120:	jge    0x416119
  416122:	test   eax,0x3c95054e
  416127:	call   0x2bdbe66d
  41612c:	fldz   
  41612e:	arpl   bx,sp
  416130:	sbb    esi,DWORD PTR [eax]
  416132:	clc    
  416133:	and    esp,edx
  416135:	clc    
  416136:	xor    eax,0xba7ccbbf
  41613b:	sti    
  41613c:	mov    ah,0x7f
  41613e:	ret    0x9615
  416141:	les    edi,FWORD PTR [eax-0x2e]
  416144:	sub    esp,DWORD PTR [ebx+0x20032c48]
  41614a:	xchg   esi,eax
  41614b:	push   esi
  41614c:	pushf  
  41614d:	loop   0x416163
  41614f:	adc    DWORD PTR [ecx+0x1b],edi
  416152:	adc    BYTE PTR [edi],dl
  416154:	mov    ch,0x55
  416156:	mov    esp,0x1744d16e
  41615b:	or     BYTE PTR [ecx-0x52fe8995],ah
  416161:	push   es
  416162:	add    eax,0x9da17f2
  416167:	xchg   DWORD PTR [esi+edx*2-0x43],esp
  41616b:	dec    esi
  41616c:	mov    dl,0xbc
  41616e:	jae    0x416116
  416170:	cli    
  416171:	jecxz  0x41616f
  416173:	cmp    al,0xed
  416175:	sub    ebx,DWORD PTR [esi]
  416177:	or     al,0xd8
  416179:	test   BYTE PTR [edx-0x1b39f22b],dl
  41617f:	dec    edx
  416180:	cmp    eax,0xba85229c
  416185:	mov    bl,0x47
  416187:	or     edi,eax
  416189:	add    DWORD PTR [ebp-0x8bbb99e],0x1e
  416190:	loope  0x4161bb
  416192:	dec    ebp
  416193:	sbb    eax,0xd1dfd6b
  416198:	jno    0x416134
  41619a:	or     eax,0x11e7dc43
  41619f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161a0:	mov    esp,0x4bccb580
  4161a5:	das    
  4161a6:	es (bad) 
  4161a9:	add    cl,BYTE PTR [edx-0x6e]
  4161ac:	jmp    0x416161
  4161ae:	inc    esi
  4161af:	test   al,0xa6
  4161b1:	arpl   WORD PTR [esi+ebx*1-0x71e5297f],bx
  4161b8:	or     eax,0x35f044d2
  4161bd:	pop    ebp
  4161be:	pusha  
  4161bf:	push   es
  4161c0:	aas    
  4161c1:	or     BYTE PTR [ebx-0x3a],ch
  4161c4:	add    BYTE PTR [edx+0x2b31dc55],al
  4161ca:	push   0x250dc52
  4161cf:	fmul   DWORD PTR [edx]
  4161d1:	nop
  4161d2:	adc    al,0x57
  4161d4:	xchg   bh,al
  4161d6:	jmp    0x416236
  4161d8:	push   esi
  4161d9:	fstp   QWORD PTR [edx-0x2a]
  4161dc:	ins    DWORD PTR es:[edi],dx
  4161dd:	rcr    bh,cl
  4161df:	ins    DWORD PTR es:[edi],dx
  4161e0:	jge    0x416187
  4161e2:	inc    ebp
  4161e3:	sub    al,0xf0
  4161e5:	out    0xea,eax
  4161e7:	imul   esi,DWORD PTR [edx-0x11ca7338],0x9bb61428
  4161f1:	jmp    0x416233
  4161f3:	das    
  4161f4:	or     edi,DWORD PTR [eax-0x721035d9]
  4161fa:	clc    
  4161fb:	in     al,0xb0
  4161fd:	and    al,0x9f
  4161ff:	adc    al,0xb8
  416201:	or     BYTE PTR [eax+0x73b697b5],dh
  416207:	mov    eax,ds:0x1f4bdb8c
  41620c:	dec    eax
  41620d:	neg    eax
  41620f:	sub    ebp,DWORD PTR [eax+0x2f294b50]
  416215:	out    dx,al
  416216:	cmp    dh,dl
  416218:	js     0x416206
  41621a:	dec    eax
  41621b:	mov    cl,0xde
  41621d:	clc    
  41621e:	imul   edi,DWORD PTR [edx+0x1b752711],0xc1c86c4d
  416228:	fadd   st(2),st
  41622a:	shr    dh,0x51
  41622d:	xchg   edi,eax
  41622e:	cdq    
  41622f:	fwait
  416230:	pop    edx
  416231:	add    bl,al
  416233:	in     eax,0xd4
  416235:	ret    
  416236:	popf   
  416237:	jns    0x416270
  416239:	sahf   
  41623a:	pop    es
  41623b:	nop
  41623c:	out    0x87,al
  41623e:	xchg   ebx,eax
  41623f:	aam    0xe3
  416241:	clc    
  416242:	xchg   BYTE PTR [esi],al
  416244:	aas    
  416245:	ins    BYTE PTR es:[edi],dx
  416246:	dec    edi
  416247:	add    BYTE PTR ds:0x1569766b,bl
  41624d:	cmp    DWORD PTR [ebx],ecx
  41624f:	mov    esp,DWORD PTR [edi]
  416251:	and    ebx,ecx
  416253:	cs aas 
  416255:	xchg   ebp,eax
  416256:	jbe    0x4162b6
  416258:	or     eax,0x9afcf043
  41625d:	sbb    ah,BYTE PTR ds:0x23f478f2
  416263:	cdq    
  416264:	popf   
  416265:	clc    
  416266:	xor    BYTE PTR [esi-0x9949802],bh
  41626c:	out    dx,eax
  41626d:	xchg   BYTE PTR [esi],dh
  41626f:	xor    BYTE PTR [esi+ebx*4],cl
  416272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416273:	dec    esi
  416274:	add    DWORD PTR [eax],ebx
  416276:	fst    QWORD PTR [esi-0x58e42186]
  41627c:	(bad)  
  41627d:	fisubr DWORD PTR [edi]
  41627f:	fcom   DWORD PTR [ebp+0x2e36361]
  416285:	scas   al,BYTE PTR es:[edi]
  416286:	not    DWORD PTR [ebp+0x78c858d2]
  41628c:	xchg   esp,eax
  41628d:	xchg   ebx,eax
  41628e:	test   BYTE PTR [edx-0x6657412b],0x46
  416295:	jae    0x4162bb
  416297:	outs   dx,BYTE PTR ds:[esi]
  416298:	and    DWORD PTR [ecx+eax*2],edx
  41629b:	or     al,0xd3
  41629d:	aaa    
  41629e:	je     0x41630c
  4162a0:	jp     0x416275
  4162a2:	mov    edi,0x54d71e0f
  4162a7:	jno    0x41630b
  4162a9:	or     BYTE PTR [edi+0x44],0xf4
  4162ad:	mov    DWORD PTR [bx+0x1f],esp
  4162b1:	mov    al,ah
  4162b3:	pop    ebp
  4162b4:	cdq    
  4162b5:	mov    al,ds:0xeb02cb2e
  4162ba:	pop    esp
  4162bb:	mov    al,0x4d
  4162bd:	sub    eax,0x1ef166c0
  4162c2:	jge    0x416258
  4162c4:	imul   edx,DWORD PTR [ecx-0x20fe6824],0x3f56a24c
  4162ce:	lods   eax,DWORD PTR ds:[esi]
  4162cf:	aaa    
  4162d0:	idiv   BYTE PTR [eax-0x25c9cc6f]
  4162d6:	inc    esp
  4162d7:	cdq    
  4162d8:	pop    eax
  4162d9:	or     BYTE PTR [eax-0x470d255b],0xc1
  4162e0:	mov    esi,ebp
  4162e2:	mov    esp,DWORD PTR [edx-0x4588962]
  4162e8:	mov    ds:0x7d811621,eax
  4162ed:	pop    ebx
  4162ee:	jnp    0x4162a6
  4162f0:	jg     0x416344
  4162f2:	dec    edx
  4162f3:	dec    ebp
  4162f4:	(bad)  
  4162f5:	aam    0x7c
  4162f7:	push   edx
  4162f8:	test   BYTE PTR [ecx],ah
  4162fa:	popf   
  4162fb:	jmp    0x35e9a007
  416300:	sbb    bh,BYTE PTR [ebp+edx*4+0x21a30a5b]
  416307:	inc    ebp
  416308:	pop    edx
  416309:	sub    ch,bh
  41630b:	mul    BYTE PTR [eax-0xd375123]
  416311:	inc    edi
  416312:	inc    ebx
  416313:	out    dx,eax
  416314:	or     DWORD PTR [ecx],ecx
  416316:	mov    edi,0x960cd245
  41631b:	cmp    al,0xc5
  41631d:	mov    ah,0xa4
  41631f:	adc    ecx,DWORD PTR [ecx+0x22471fe]
  416325:	ror    ecx,1
  416327:	pop    edi
  416328:	repz sub dh,BYTE PTR [ebx-0x259e77f4]
  41632f:	rcr    BYTE PTR [ecx+0x1c2e2e7],1
  416335:	push   esp
  416336:	inc    edx
  416337:	xchg   DWORD PTR [edx+0x6a],ebp
  41633a:	pop    esp
  41633b:	bound  ecx,QWORD PTR [ecx-0x2eada9d9]
  416341:	sub    ebx,0x40
  416344:	jo     0x416306
  416346:	outs   dx,DWORD PTR ds:[esi]
  416347:	scas   eax,DWORD PTR es:[edi]
  416348:	cwde   
  416349:	les    ecx,FWORD PTR [edx-0x7]
  41634c:	xchg   ecx,eax
  41634d:	pusha  
  41634e:	ds dec ebp
  416350:	dec    edx
  416351:	add    ah,bh
  416353:	fptan  
  416355:	jle    0x4163b7
  416357:	pusha  
  416358:	test   DWORD PTR [esp+ecx*4-0x7607a1d],esi
  41635f:	in     al,dx
  416360:	pop    edi
  416361:	inc    ebp
  416362:	js     0x416390
  416364:	cmovbe eax,DWORD PTR [edx+eax*4]
  416368:	jg     0x4163c5
  41636a:	mov    ch,0xdc
  41636c:	inc    esi
  41636d:	in     al,dx
  41636e:	or     bl,cl
  416370:	sub    eax,0x3952c027
  416375:	push   edi
  416376:	pop    edx
  416377:	jp     0x4163ed
  416379:	ds pop eax
  41637b:	sub    eax,0x38130de9
  416380:	add    DWORD PTR [edi+0x205c2952],edx
  416386:	push   edx
  416387:	stos   BYTE PTR es:[edi],al
  416388:	xor    eax,DWORD PTR [ecx+esi*2+0x2f6979ed]
  41638f:	xchg   DWORD PTR [ebx-0x6f],ebx
  416392:	sbb    eax,0x581cf701
  416397:	push   0xffffffbf
  416399:	imul   eax,edx,0xffffff82
  41639c:	xor    BYTE PTR [esi],ch
  41639e:	sub    eax,0x8b82907a
  4163a3:	xchg   ebp,eax
  4163a4:	mov    edx,0xadc5d1e0
  4163a9:	xchg   esp,eax
  4163aa:	test   al,0xcc
  4163ac:	dec    edi
  4163ad:	jle    0xff4dc541
  4163b3:	ins    DWORD PTR es:[edi],dx
  4163b4:	or     ebp,DWORD PTR [ecx-0x20d6136a]
  4163ba:	psubq  mm2,QWORD PTR [esi]
  4163bd:	cmp    esi,DWORD PTR [eax]
  4163bf:	ud0    ebx,DWORD PTR ds:0x309b40f8
  4163c6:	(bad)  
  4163c8:	iret   
  4163c9:	or     ebp,DWORD PTR [ecx]
  4163cb:	bound  eax,QWORD PTR [eax+0x57]
  4163ce:	jmp    0x8619:0x2e6af989
  4163d5:	inc    eax
  4163d6:	(bad)  
  4163d8:	xchg   ebx,eax
  4163d9:	jl     0x416446
  4163db:	mov    esi,0x411c37c7
  4163e0:	ins    DWORD PTR es:[edi],dx
  4163e1:	in     eax,dx
  4163e2:	loopne 0x416412
  4163e4:	xor    ebx,0x54184dc7
  4163ea:	xchg   esp,eax
  4163eb:	dec    edx
  4163ec:	out    0xb8,al
  4163ee:	jge    0x416429
  4163f0:	aam    0xd9
  4163f2:	dec    esp
  4163f3:	push   0xb2f49b35
  4163f8:	retf   0x91e6
  4163fb:	iret   
  4163fc:	popa   
  4163fd:	ja     0x416456
  4163ff:	pop    esp
  416400:	enter  0xb2ab,0x7d
  416404:	sahf   
  416405:	mov    edi,0x75755080
  41640a:	xor    ah,BYTE PTR [edi+0x24]
  41640d:	cmp    eax,0x97bfa3ad
  416412:	test   bh,dh
  416414:	into   
  416415:	out    0x21,al
  416417:	out    dx,eax
  416418:	adc    BYTE PTR [edx],ch
  41641a:	adc    BYTE PTR [edi+ebp*1],ch
  41641d:	out    dx,eax
  41641e:	add    al,0x7b
  416420:	repnz (bad) 
  416422:	mov    cl,0x8
  416424:	clc    
  416425:	dec    BYTE PTR [edx]
  416427:	jbe    0x416415
  416429:	cmp    ecx,DWORD PTR [ecx]
  41642b:	iret   
  41642c:	ja     0x416461
  41642e:	(bad)  
  41642f:	popf   
  416430:	mov    dh,0x74
  416432:	(bad)  
  416433:	cmc    
  416434:	jp     0x4164b5
  416436:	cs aaa 
  416438:	xchg   DWORD PTR [edi+ebp*4+0x3e75c4b2],ebp
  41643f:	push   esi
  416440:	ret    
  416441:	sbb    ebx,DWORD PTR [edx-0x7c4f120a]
  416447:	icebp  
  416448:	das    
  416449:	fidiv  WORD PTR [esi+eiz*4+0x72f742de]
  416450:	pop    edi
  416451:	push   cs
  416452:	xor    BYTE PTR [edi],0x7d
  416455:	icebp  
  416456:	call   0x4ec1:0x61dd2b0d
  41645d:	sbb    DWORD PTR [esi+0x35],esi
  416460:	mov    ss,WORD PTR [edx+0x18e068ff]
  416466:	mov    bl,0x2a
  416468:	pusha  
  416469:	mov    al,ds:0xd5cb43a6
  41646e:	jmp    0x59:0x198ff0ef
  416475:	loopne 0x4164c0
  416477:	jno    0x416444
  416479:	ret    0xced9
  41647c:	or     eax,0x508b3f9b
  416481:	fild   WORD PTR [edi+0x5]
  416484:	es pop edi
  416486:	in     eax,0xbc
  416488:	das    
  416489:	daa    
  41648a:	or     BYTE PTR [edx],cl
  41648c:	imul   esi,DWORD PTR [ebp+0x6e86a9ce],0x26a2c379
  416496:	repz jmp 0xb4b044fc
  41649c:	adc    al,0x9d
  41649e:	mov    dh,0x32
  4164a0:	(bad)  
  4164a1:	ds jnp 0x41645e
  4164a4:	rcl    BYTE PTR [edx+0x7f],1
  4164a7:	rcl    BYTE PTR [esp+eiz*4-0x55],cl
  4164ab:	mov    eax,0x5f2b7977
  4164b0:	aas    
  4164b1:	inc    ebx
  4164b2:	mov    dl,0xfa
  4164b4:	call   0x29bf:0xe6cb4c36
  4164bb:	add    edx,ebp
  4164bd:	cdq    
  4164be:	add    al,0xdd
  4164c0:	frstor [edi+0x32]
  4164c3:	sbb    bx,WORD PTR fs:[edi+eiz*4+0x693976c9]
  4164cc:	gs stos BYTE PTR es:[edi],al
  4164ce:	imul   ebp,DWORD PTR es:[ebp+0x64],0xbe797b9d
  4164d6:	jb     0x4164f9
  4164d8:	ficomp WORD PTR [edi+ebp*2]
  4164db:	adc    al,0x88
  4164dd:	out    0x77,eax
  4164df:	adc    dl,BYTE PTR [eax+0xd0b2f1b]
  4164e5:	ret    0x42d4
  4164e8:	out    0xcb,eax
  4164ea:	mov    ds:0xc7c22ce8,al
  4164ef:	sub    ecx,esi
  4164f1:	outs   dx,DWORD PTR ds:[esi]
  4164f2:	dec    esi
  4164f3:	sahf   
  4164f4:	inc    ebp
  4164f5:	jb     0x4164a0
  4164f7:	aam    0xe6
  4164f9:	jns    0x4164fe
  4164fb:	mov    esi,DWORD PTR [edi]
  4164fd:	ficom  WORD PTR [ebp-0x7182f116]
  416503:	ret    0x8726
  416506:	and    eax,0x8b550260
  41650b:	(bad)  
  41650c:	push   ds
  41650d:	stc    
  41650e:	push   0xffffffa2
  416510:	cwde   
  416511:	jns    0x4164ae
  416513:	aad    0xe5
  416515:	mov    cl,0xb4
  416517:	and    esi,esi
  416519:	(bad)  
  41651b:	xchg   BYTE PTR [eax+0x5c6e3c8b],bl
  416521:	xchg   ecx,eax
  416522:	cmp    eax,DWORD PTR [ebx]
  416524:	jmp    0x416578
  416526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416527:	js     0x41650b
  416529:	cdq    
  41652a:	pop    edx
  41652b:	push   0xffffffdf
  41652d:	inc    esi
  41652e:	pop    edx
  41652f:	imul   esi,esp,0xffffffc3
  416532:	adc    DWORD PTR [esi-0x8],ebp
  416535:	and    DWORD PTR [edi],edi
  416537:	mov    ebp,0x7966e9f
  41653c:	adc    BYTE PTR [esi+0x6f468836],bh
  416542:	in     eax,dx
  416543:	in     eax,0x52
  416545:	sub    eax,0xc9a17794
  41654a:	icebp  
  41654b:	push   0x4a
  41654d:	mov    ah,0x7a
  41654f:	mov    ecx,0x6b544bad
  416554:	bound  edi,QWORD PTR [esi+0x7]
  416557:	scas   al,BYTE PTR es:[edi]
  416558:	add    ch,BYTE PTR [ecx-0x6943742f]
  41655e:	mov    ah,0x7c
  416560:	or     eax,0xab8eec7b
  416565:	mov    ds:0xb4ab3a73,eax
  41656a:	add    eax,0x44a02ef5
  41656f:	das    
  416570:	fdiv   QWORD PTR [edi+edi*4-0x380bed24]
  416577:	aaa    
  416578:	rsqrtps xmm3,XMMWORD PTR [esi]
  41657b:	pop    ss
  41657c:	lods   al,BYTE PTR ds:[esi]
  41657d:	dec    esp
  41657e:	in     eax,dx
  41657f:	push   esp
  416580:	int3   
  416581:	xlat   BYTE PTR ds:[ebx]
  416582:	mov    WORD PTR [eax-0x8ef3dc0],ss
  416588:	jns    0x416573
  41658a:	jmp    0x416546
  41658c:	xor    esi,ebp
  41658e:	sti    
  41658f:	lds    ebp,FWORD PTR [ecx-0x69ee1a9]
  416595:	fmul   QWORD PTR [edx]
  416597:	sub    eax,0x24fc13cd
  41659c:	adc    eax,0x87948a8b
  4165a1:	adc    dh,BYTE PTR [ebx]
  4165a3:	data16 mov dh,0x9b
  4165a6:	dec    edx
  4165a7:	jmp    0xdff6:0xd087c4e7
  4165ae:	sbb    DWORD PTR [edi+0xd],ebx
  4165b1:	and    eax,0x5f765806
  4165b6:	jne    0x416622
  4165b8:	jg     0x416609
  4165ba:	or     bl,BYTE PTR [ebx+edi*4]
  4165bd:	fist   DWORD PTR [ebp+0x5336abbb]
  4165c3:	xchg   esi,eax
  4165c4:	stc    
  4165c5:	xchg   edx,eax
  4165c6:	xor    bh,BYTE PTR [edi+0x5a]
  4165c9:	mov    dl,0x79
  4165cb:	jb     0x4165e6
  4165cd:	jmp    0x2acbea67
  4165d2:	xchg   esi,eax
  4165d3:	push   0x93651077
  4165d8:	dec    ebx
  4165d9:	inc    edx
  4165da:	adc    al,0x95
  4165dc:	retf   
  4165dd:	xchg   ecx,eax
  4165de:	addr16 add eax,0xe476a97c
  4165e4:	cmp    DWORD PTR [eax],ebx
  4165e6:	jg     0x416585
  4165e8:	lods   al,BYTE PTR ds:[esi]
  4165e9:	dec    edx
  4165ea:	loop   0x4165b0
  4165ec:	test   eax,0x23c5d8b9
  4165f1:	or     BYTE PTR [ecx],cl
  4165f3:	iret   
  4165f4:	in     eax,0xcd
  4165f6:	and    BYTE PTR [edi+0x5f],ah
  4165f9:	pop    edi
  4165fa:	cmp    al,0xbc
  4165fc:	aad    0xb4
  4165fe:	imul   ebx,esi,0x770542a4
  416604:	out    dx,al
  416605:	xor    DWORD PTR [esi-0x17c0520],esi
  41660b:	imul   edi,DWORD PTR [edi+0x76c91801],0xfada56f9
  416615:	sti    
  416616:	psllw  mm6,QWORD PTR [ecx+0x6b]
  41661a:	cwde   
  41661b:	or     BYTE PTR [ecx-0x5c],ch
  41661e:	or     al,BYTE PTR [edx+0x3e18695c]
  416624:	mov    bh,0xaf
  416626:	enter  0xabee,0xf3
  41662a:	xor    cl,BYTE PTR [eax-0x16]
  41662d:	std    
  41662e:	cmp    BYTE PTR [ebp+0x4],bl
  416631:	arpl   bx,ax
  416633:	xor    esp,DWORD PTR [esi]
  416635:	ja     0x41664e
  416637:	mov    ebp,0x992c5750
  41663c:	cmp    al,0x44
  41663e:	and    eax,0xb36718d4
  416643:	dec    ecx
  416644:	fldenv [ebp+eax*4+0x6]
  416648:	jb     0x4165e5
  41664a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41664b:	xlat   BYTE PTR ds:[ebx]
  41664c:	test   al,0x82
  41664e:	cmp    al,0x73
  416650:	jg     0x41661f
  416652:	cmp    eax,0x8445391e
  416657:	fcmovbe st,st(2)
  416659:	fs push esi
  41665b:	adc    eax,0x72fc08df
  416660:	into   
  416661:	push   ecx
  416662:	call   0x2034:0x7f7eb600
  416669:	or     al,0xe3
  41666b:	mov    WORD PTR [edi-0x2d],fs
  41666e:	out    0x93,al
  416670:	pop    edx
  416671:	aas    
  416672:	jae    0x416651
  416674:	jae    0x4166d0
  416676:	mov    cl,0xd1
  416678:	aam    0x5f
  41667a:	shr    DWORD PTR [ebp-0x15e21491],1
  416680:	popa   
  416681:	shl    BYTE PTR [eax-0x237221d4],cl
  416687:	sub    ebp,edi
  416689:	test   eax,0x61cc52fb
  41668e:	imul   ecx,ebp,0xf4672f1f
  416694:	popf   
  416695:	jo     0x416693
  416697:	push   ecx
  416698:	fild   QWORD PTR [eax-0x54c8c5c]
  41669e:	add    al,0x22
  4166a0:	jns    0x4166b2
  4166a2:	pop    es
  4166a3:	jl     0x416673
  4166a5:	nop
  4166a6:	push   ds
  4166a7:	push   eax
  4166a8:	push   es
  4166a9:	fs xchg ecx,eax
  4166ab:	mov    edx,0x83be8e5d
  4166b0:	retf   
  4166b1:	pop    edi
  4166b2:	out    dx,eax
  4166b3:	imul   eax,DWORD PTR [eax+ebx*2],0x18
  4166b7:	adc    ah,dl
  4166b9:	gs jecxz 0x41668a
  4166bc:	clc    
  4166bd:	cld    
  4166be:	jle    0x4166ef
  4166c0:	add    BYTE PTR [eax],al
  4166c2:	and    ebx,esp
  4166c4:	lahf   
  4166c5:	outs   dx,BYTE PTR ds:[esi]
  4166c6:	ficom  DWORD PTR [edi]
  4166c8:	or     al,bh
  4166ca:	sub    al,0xbd
  4166cc:	xor    DWORD PTR [eax],esi
  4166ce:	sub    al,0xd5
  4166d0:	imul   ebp,DWORD PTR [ecx-0x359b0169],0xc62ea96c
  4166da:	test   BYTE PTR cs:[edx+0x66],0x79
  4166df:	enterw 0x7da6,0xf9
  4166e4:	push   edi
  4166e5:	adc    BYTE PTR [edi+ebx*8-0x597a6c0e],0x49
  4166ed:	jmp    0x4166f4
  4166ef:	ja     0x416765
  4166f1:	pop    ds
  4166f2:	cmp    dl,BYTE PTR [edx+esi*2+0x5cf3a542]
  4166f9:	jno    0x41675e
  4166fb:	ins    BYTE PTR es:[edi],dx
  4166fc:	jle    0x4166b5
  4166fe:	ret    
  4166ff:	js     0x416699
  416701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416702:	inc    eax
  416703:	cdq    
  416704:	cmp    bh,BYTE PTR [ebx-0x58602485]
  41670a:	push   ebp
  41670b:	sub    DWORD PTR [esi+0x63],0xfffffff4
  41670f:	and    ecx,DWORD PTR [edi]
  416711:	add    eax,0xb33387d5
  416716:	push   cs
  416717:	cmp    ebp,esi
  416719:	stc    
  41671a:	push   cs
  41671b:	retf   0x2dc2
  41671e:	add    DWORD PTR [esi+0x1e],esi
  416721:	lods   eax,DWORD PTR ds:[esi]
  416722:	inc    ebp
  416723:	arpl   WORD PTR [ebp+0x48],sp
  416726:	rcl    ebx,cl
  416728:	stos   DWORD PTR es:[edi],eax
  416729:	lea    esp,[ecx-0x23]
  41672c:	in     eax,0xa2
  41672e:	sub    eax,0x9150e0e8
  416733:	xor    dh,BYTE PTR [ebp+0x3a]
  416736:	jb     0x41670f
  416738:	xor    edi,ecx
  41673a:	mov    dl,0xd
  41673c:	(bad)  
  41673d:	jns    0x41675b
  41673f:	cld    
  416740:	cs pop eax
  416742:	mov    bl,0x2c
  416744:	xor    ecx,esp
  416746:	(bad)  
  416747:	xchg   esi,eax
  416748:	add    BYTE PTR [edi-0x15],cl
  41674b:	call   0xfe0:0x59bf852
  416752:	xchg   ecx,eax
  416753:	mov    ch,0x8
  416755:	jae    0x41678c
  416757:	sbb    ecx,0x52
  41675a:	add    BYTE PTR [eax],dh
  41675c:	data16 daa 
  41675e:	add    dh,BYTE PTR [eax-0x3a]
  416761:	pop    edi
  416762:	mov    ss,WORD PTR [edi]
  416764:	adc    ah,BYTE PTR [edi-0x76]
  416767:	retf   
  416768:	sub    ah,dl
  41676a:	add    ch,al
  41676c:	or     DWORD PTR [edx+0x1d],edx
  41676f:	pop    esi
  416770:	into   
  416771:	jg     0x416796
  416773:	or     DWORD PTR [edx-0x43],0x9eb31d96
  41677a:	jmp    0x4167bc
  41677c:	iret   
  41677d:	je     0x41679e
  41677f:	xor    BYTE PTR [edx-0x2f812ec6],dh
  416785:	ficomp WORD PTR [edi-0x6ac7193f]
  41678b:	add    eax,0x786c7dd
  416790:	sbb    al,0xcb
  416792:	or     BYTE PTR [eax-0x4f],dh
  416795:	push   esi
  416796:	jb     0x41676b
  416798:	bound  esp,QWORD PTR [ebp+edx*2+0x29f5a1f]
  41679f:	ins    BYTE PTR es:[edi],dx
  4167a0:	shl    dh,cl
  4167a2:	push   cs
  4167a3:	pushf  
  4167a4:	pop    ss
  4167a5:	cmp    eax,0x47ab1867
  4167aa:	imul   ebx,DWORD PTR [esi-0x62c993ec],0xffffffd2
  4167b1:	in     al,dx
  4167b2:	push   ebp
  4167b3:	dec    edi
  4167b4:	mov    DWORD PTR [esi],ecx
  4167b6:	jae    0x416801
  4167b8:	sbb    DWORD PTR [eax-0x6e54b241],ebx
  4167be:	mov    cs,eax
  4167c0:	dec    edx
  4167c1:	or     DWORD PTR [esi-0x244d1fc2],0x6e
  4167c8:	stc    
  4167c9:	jmp    0x41680f
  4167cb:	shl    ebx,0x37
  4167ce:	push   ss
  4167cf:	retf   
  4167d0:	adc    bl,BYTE PTR [ecx+0x5e]
  4167d3:	xchg   DWORD PTR [ecx+0x1b],esi
  4167d6:	adc    al,0xfb
  4167d8:	das    
  4167d9:	mov    ch,BYTE PTR [edi-0x41c32331]
  4167df:	das    
  4167e0:	adc    al,0x5c
  4167e2:	dec    edx
  4167e3:	test   eax,0xbf5dfec1
  4167e8:	or     eax,0xd2bddce5
  4167ed:	stos   BYTE PTR es:[edi],al
  4167ee:	lahf   
  4167ef:	gs or  eax,0x63b4e15d
  4167f5:	push   0x45
  4167f7:	mov    bl,0xe7
  4167f9:	jg     0x4167d2
  4167fb:	sbb    DWORD PTR [esi-0x736d2404],0xffffffd0
  416802:	mov    al,ds:0x603407c0
  416807:	fisub  WORD PTR [ebp+eax*2+0x5cf517ad]
  41680e:	adc    al,0xc6
  416810:	(bad)  
  416811:	lods   al,BYTE PTR ds:[esi]
  416812:	hlt    
  416813:	sbb    edi,DWORD PTR [ebx]
  416815:	jno    0x4167c7
  416817:	arpl   WORD PTR [edi+0x65],sp
  41681a:	ds js  0x4167f4
  41681d:	add    BYTE PTR [ebx+ebx*4+0x6f60bb6],al
  416824:	sub    al,0xd3
  416826:	pop    ss
  416827:	jg     0x4167be
  416829:	leave  
  41682a:	jmp    0x5154:0xfb6fbcbf
  416831:	fstp   DWORD PTR [eax]
  416833:	or     al,0xc6
  416835:	aad    0x4d
  416837:	mov    dl,BYTE PTR [ebp-0x6b]
  41683a:	(bad)  
  41683b:	lds    ebx,FWORD PTR [esi]
  41683d:	retf   0x6823
  416840:	adc    dh,BYTE PTR [eax+ebx*8]
  416843:	pop    ss
  416844:	lea    edi,[esi-0x7e]
  416847:	ret    
  416848:	fimul  DWORD PTR [esi+0x7ae771]
  41684e:	push   ebx
  41684f:	cmp    al,bh
  416851:	xor    ch,BYTE PTR [edi]
  416853:	lods   al,BYTE PTR ds:[esi]
  416854:	pop    esp
  416855:	aaa    
  416856:	dec    esi
  416857:	push   eax
  416858:	xor    eax,DWORD PTR [esi+0x13]
  41685b:	push   edi
  41685c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41685d:	mov    bh,0xf6
  41685f:	jo     0x416821
  416861:	data16 jno 0x4168dd
  416864:	xchg   esi,eax
  416865:	fidivr WORD PTR [esi+0x31]
  416868:	mov    al,ds:0xac99a6cc
  41686d:	ds jne 0x416800
  416870:	jmp    0x514c:0xe6a54ead
  416877:	mov    ah,0xe3
  416879:	jecxz  0x41680b
  41687b:	aas    
  41687c:	jb     0x416804
  41687e:	push   ecx
  41687f:	mov    ch,0x96
  416881:	push   ss
  416882:	scas   eax,DWORD PTR es:[edi]
  416883:	mov    dh,ch
  416885:	mov    esi,0xbfbeb83e
  41688a:	gs mov eax,0xf030e9f0
  416890:	ret    
  416891:	mov    al,ds:0xce18f492
  416896:	xor    al,0x54
  416898:	popa   
  416899:	(bad)  
  41689a:	xor    DWORD PTR [ebx+0x6],ecx
  41689d:	mov    ds:0xc12f7e13,eax
  4168a2:	cmp    al,0xc0
  4168a4:	sbb    al,0x11
  4168a6:	loope  0x41688c
  4168a8:	repnz test eax,0xc745d1b9
  4168ae:	xor    DWORD PTR [ebx+0xf33814b],0xffffffd8
  4168b5:	test   al,0x6c
  4168b7:	mov    ebp,0x1c03ea2d
  4168bc:	jno    0x4168d7
  4168be:	xchg   DWORD PTR [ecx],edi
  4168c0:	ja     0x4168bc
  4168c2:	xlat   BYTE PTR ds:[ebx]
  4168c3:	pop    ss
  4168c4:	in     eax,0xd9
  4168c6:	into   
  4168c7:	iret   
  4168c8:	xor    BYTE PTR [ebx+0x48],dh
  4168cb:	lods   al,BYTE PTR ds:[esi]
  4168cc:	push   ecx
  4168cd:	and    al,0x1a
  4168cf:	pop    ebp
  4168d0:	dec    DWORD PTR [bx]
  4168d3:	scas   al,BYTE PTR es:[edi]
  4168d4:	push   es
  4168d5:	daa    
  4168d6:	mov    ebp,0x5f74b625
  4168db:	loopne 0x4168f9
  4168dd:	dec    esi
  4168de:	add    al,0xde
  4168e0:	and    al,0x8f
  4168e2:	mov    al,ds:0xe5a8265
  4168e7:	std    
  4168e8:	nop
  4168e9:	sub    cl,ch
  4168eb:	cmp    DWORD PTR [ebx+0x41312e6],esi
  4168f1:	fstp   TBYTE PTR [ecx]
  4168f3:	cmp    al,0x6c
  4168f5:	push   edx
  4168f6:	stos   BYTE PTR es:[edi],al
  4168f7:	push   esp
  4168f8:	into   
  4168f9:	mov    al,ds:0xfbebf3e3
  4168fe:	mov    edx,ebx
  416900:	inc    esp
  416901:	cmc    
  416902:	fs mov bh,0xae
  416905:	ret    
  416906:	dec    edi
  416907:	fisttp WORD PTR [esi]
  416909:	test   eax,0x4e3a5d59
  41690e:	mov    esi,0x3b7fd123
  416913:	inc    edi
  416914:	out    dx,al
  416915:	cmp    ebp,DWORD PTR [esi]
  416917:	mov    ah,0x7a
  416919:	add    al,0xb1
  41691b:	arpl   ax,bx
  41691d:	mov    edi,0xe7a5bd26
  416922:	adc    BYTE PTR [eax+0x5ccdaf8c],bh
  416928:	or     edi,edx
  41692a:	(bad)  [eax-0x4d]
  41692d:	inc    ebx
  41692e:	imul   edx,DWORD PTR [eax+ecx*1-0x5d],0x9a4d10b8
  416936:	jo     0x4168cb
  416938:	iret   
  416939:	pop    ecx
  41693a:	loop   0x41699f
  41693c:	loopne 0x4168cf
  41693e:	in     al,0xbf
  416940:	cmp    DWORD PTR [ecx-0x3c],ebp
  416943:	xor    dl,BYTE PTR [eax]
  416945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416946:	mov    dl,0x94
  416948:	test   eax,0x682bb676
  41694d:	push   esp
  41694e:	pop    ebx
  41694f:	cmc    
  416950:	mov    al,ds:0x94378707
  416955:	lods   al,BYTE PTR ds:[esi]
  416956:	in     al,0x5e
  416958:	xor    DWORD PTR [esi],ebx
  41695a:	pop    eax
  41695b:	test   al,0x4f
  41695d:	into   
  41695e:	jmp    0x624a3f1d
  416963:	push   esp
  416964:	ins    BYTE PTR es:[edi],dx
  416965:	ja     0x4168f1
  416967:	popa   
  416968:	ficom  DWORD PTR [ebx+edi*4]
  41696b:	pushf  
  41696c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41696d:	add    eax,0xfe3d1e57
  416972:	xchg   esp,eax
  416973:	retf   0xed8d
  416976:	aam    0x5f
  416978:	ins    BYTE PTR es:[edi],dx
  416979:	push   0x3f
  41697b:	retf   
  41697c:	pop    eax
  41697d:	xor    BYTE PTR [esi+eax*2-0xa],bl
  416981:	shl    ch,cl
  416983:	xchg   ecx,eax
  416984:	cwde   
  416985:	das    
  416986:	mov    ah,dh
  416988:	dec    esi
  416989:	pop    eax
  41698a:	loopne 0x4169f6
  41698c:	adc    al,0x43
  41698e:	sbb    dl,bh
  416990:	pop    esi
  416991:	mov    bh,0x9c
  416993:	int    0x7a
  416995:	arpl   si,ax
  416997:	fld    TBYTE PTR ds:0x8f395cd5
  41699d:	add    al,0x51
  41699f:	aam    0xf9
  4169a1:	fisubr WORD PTR [ecx-0x69]
  4169a4:	push   eax
  4169a5:	repz pop es
  4169a7:	(bad)  
  4169a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169a9:	jae    0x416965
  4169ab:	sbb    dh,BYTE PTR [eax+0x7]
  4169ae:	or     al,0x21
  4169b0:	(bad)  
  4169b1:	ins    DWORD PTR es:[edi],dx
  4169b2:	dec    esp
  4169b3:	not    eax
  4169b5:	inc    edi
  4169b6:	ins    BYTE PTR es:[edi],dx
  4169b7:	shl    DWORD PTR [ecx-0x49726d1b],cl
  4169bd:	and    dh,BYTE PTR [edi+0x469ad274]
  4169c3:	mov    edi,0x2007c894
  4169c8:	mov    dh,0x2a
  4169ca:	shr    BYTE PTR [edi+0x5498dd2d],cl
  4169d0:	call   0x8898:0x890afc4b
  4169d7:	add    al,0x11
  4169d9:	rcr    BYTE PTR [esi],cl
  4169db:	jno    0x4169e1
  4169dd:	jg     0x416a33
  4169df:	mov    dl,0x42
  4169e1:	jg     0x416965
  4169e3:	test   DWORD PTR [ebx],ebx
  4169e5:	cmp    ecx,ebp
  4169e7:	xchg   BYTE PTR [ebx+0x270ec474],ch
  4169ed:	sub    esp,DWORD PTR [ebx-0x62754103]
  4169f3:	or     al,0x38
  4169f5:	mov    esp,0xfe221ce3
  4169fa:	loop   0x416a22
  4169fc:	pop    eax
  4169fd:	and    eax,0x7af0ae51
  416a02:	mov    cl,0x8e
  416a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a05:	dec    esi
  416a06:	repz pusha 
  416a08:	mov    ch,BYTE PTR [eax-0x12]
  416a0b:	xchg   BYTE PTR [ecx],bh
  416a0d:	lods   eax,DWORD PTR ds:[esi]
  416a0e:	(bad)  
  416a0f:	dec    ebp
  416a10:	daa    
  416a11:	add    DWORD PTR [ecx],esp
  416a13:	mov    WORD PTR [esi],es
  416a15:	pop    ebx
  416a16:	shr    dh,cl
  416a18:	jge    0x4169f9
  416a1a:	and    DWORD PTR [edi+0x8],eax
  416a1d:	fstp   DWORD PTR [ebx+0x2]
  416a20:	inc    ebx
  416a21:	pop    bp
  416a23:	bound  ecx,QWORD PTR [esi]
  416a25:	sbb    eax,0x3ac9a397
  416a2a:	pop    ebp
  416a2b:	inc    ebp
  416a2c:	mov    ecx,0x4cdc7c1a
  416a31:	push   0x226c4405
  416a36:	push   es
  416a37:	test   eax,0x1f050927
  416a3c:	cmp    DWORD PTR [ebp+eax*2+0x58],ebx
  416a40:	cmp    DWORD PTR [ebx+0x60],ecx
  416a43:	and    al,0xab
  416a45:	fs scas al,BYTE PTR es:[edi]
  416a47:	cli    
  416a48:	fimul  DWORD PTR [ecx+edi*1]
  416a4b:	jg     0x416a66
  416a4d:	or     BYTE PTR [di],0x83
  416a51:	pop    edx
  416a52:	sahf   
  416a53:	inc    edi
  416a54:	mov    ch,0xd7
  416a56:	lds    ebp,FWORD PTR ds:[eax+0x24736fa0]
  416a5d:	adc    eax,0x3beaa96e
  416a62:	(bad)  
  416a63:	mov    cl,0x8c
  416a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a66:	add    edx,DWORD PTR [ebp-0x63]
  416a69:	scas   al,BYTE PTR es:[edi]
  416a6a:	bound  ebx,QWORD PTR [edx-0x18]
  416a6d:	aaa    
  416a6e:	xchg   edx,eax
  416a6f:	shr    DWORD PTR [edx+0xf],1
  416a72:	lods   al,BYTE PTR ds:[esi]
  416a73:	mov    eax,0xa2a54b13
  416a78:	dec    ecx
  416a79:	dec    ebx
  416a7a:	push   eax
  416a7b:	nop
  416a7c:	mov    eax,0x1f8de9c6
  416a81:	data16 repnz daa 
  416a84:	(bad)  
  416a85:	fist   WORD PTR [esi]
  416a87:	push   es
  416a88:	push   ebx
  416a89:	lods   eax,DWORD PTR ds:[esi]
  416a8a:	add    BYTE PTR [ecx-0x2296176a],dh
  416a90:	mov    dh,0xda
  416a92:	add    BYTE PTR gs:[eax+eiz*4-0x33],cl
  416a97:	lock pop ss
  416a99:	and    al,0x3c
  416a9b:	ds fld st(3)
  416a9e:	lods   al,BYTE PTR ds:[esi]
  416a9f:	in     al,0x28
  416aa1:	dec    esp
  416aa2:	sub    eax,0x1ddf82c9
  416aa7:	inc    eax
  416aa8:	add    BYTE PTR [esi+0x7b],dl
  416aab:	leave  
  416aac:	fwait
  416aad:	scas   eax,DWORD PTR es:[edi]
  416aae:	call   0x40e6:0xa247433a
  416ab5:	push   edx
  416ab6:	jmp    0x416adc
  416ab8:	jbe    0x416b11
  416aba:	(bad)  
  416abb:	xlat   BYTE PTR ds:[ebx]
  416abc:	fptan  
  416abe:	shr    DWORD PTR [edi+0x2b],1
  416ac1:	jbe    0x416b13
  416ac3:	dec    eax
  416ac4:	shr    esi,cl
  416ac6:	pop    esi
  416ac7:	add    DWORD PTR [ebp+0x43846218],0xa20d70f3
  416ad1:	push   cs
  416ad2:	mov    ebx,0xbfdd4d58
  416ad7:	mov    cl,0x48
  416ad9:	cmp    BYTE PTR [edx+ebp*8-0x66115b45],bl
  416ae0:	mov    eax,0x48b9651f
  416ae5:	sub    DWORD PTR [ebp+0x22],edx
  416ae8:	not    DWORD PTR [edx+0x609c92a0]
  416aee:	jle    0x416b4c
  416af0:	xchg   esi,eax
  416af2:	jmp    0x416ab4
  416af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416af5:	in     al,0x20
  416af7:	int    0xf1
  416af9:	es repnz dec dx
  416afd:	test   DWORD PTR [esi+0x3a],ebp
  416b00:	mov    esp,0x9113f978
  416b05:	xchg   ebp,eax
  416b06:	loop   0x416a9e
  416b08:	mov    dh,0x64
  416b0a:	jnp    0x416b47
  416b0c:	mov    esp,0xabedfa6b
  416b11:	cmp    BYTE PTR [edx-0x4b],bh
  416b14:	call   0x4bb417ec
  416b19:	xchg   ecx,eax
  416b1a:	mov    fs,WORD PTR [ebx-0x4fe92e3]
  416b20:	push   esp
  416b21:	ins    BYTE PTR es:[edi],dx
  416b22:	xchg   ebp,eax
  416b23:	test   DWORD PTR [esi-0x74],0xa27fe97b
  416b2a:	jbe    0x416b96
  416b2c:	fcom   DWORD PTR [ecx]
  416b2e:	pop    edi
  416b2f:	mov    ah,0xcc
  416b31:	test   DWORD PTR [eax-0xede134c],0xc19c4c82
  416b3b:	dec    ecx
  416b3c:	enter  0x3760,0xfd
  416b40:	iret   
  416b41:	xchg   ebp,eax
  416b42:	jne    0x416b68
  416b44:	aam    0x53
  416b46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b47:	push   ds
  416b48:	xlat   BYTE PTR ds:[ebx]
  416b49:	push   esp
  416b4a:	pop    edx
  416b4b:	sbb    DWORD PTR ds:[ebx-0x4394ee4f],ecx
  416b52:	ficom  WORD PTR [eax-0x4a]
  416b55:	jb     0x416b44
  416b57:	pop    eax
  416b58:	xor    BYTE PTR [edi],al
  416b5a:	scas   eax,DWORD PTR es:[edi]
  416b5b:	stc    
  416b5c:	(bad)  
  416b5e:	sbb    dl,BYTE PTR [ebp-0x3474381d]
  416b64:	gs js  0x416b86
  416b67:	add    eax,0x6007b37b
  416b6c:	add    al,0xfb
  416b6e:	cmp    DWORD PTR [esi+0x5f],0xfffffff4
  416b72:	inc    ebx
  416b73:	int    0xf0
  416b75:	test   DWORD PTR [ecx+0x5d],0xa42a8e73
  416b7c:	cdq    
  416b7d:	arpl   si,ax
  416b7f:	jns    0x416b2b
  416b81:	popf   
  416b82:	mov    ebx,0xa51d7457
  416b87:	mov    DWORD PTR [edx+ecx*8+0x7207b5c0],ebx
  416b8e:	(bad)  
  416b8f:	addr16 psllw mm4,mm1
  416b93:	jae    0x416b3b
  416b95:	arpl   WORD PTR [ebp+ebp*8+0x1f3a91ff],si
  416b9c:	sar    BYTE PTR [ebx-0x6f32b88e],1
  416ba2:	lods   al,BYTE PTR ds:[esi]
  416ba3:	fimul  DWORD PTR [edx]
  416ba5:	jge    0x416b95
  416ba7:	or     BYTE PTR [ebx-0x2870bf0c],ah
  416bad:	mov    ds:0x6097f12d,eax
  416bb2:	pop    es
  416bb3:	in     al,0x9c
  416bb5:	fbld   TBYTE PTR [ecx+0x14]
  416bb8:	mov    ah,0x4a
  416bba:	stos   BYTE PTR es:[edi],al
  416bbb:	aad    0x47
  416bbd:	das    
  416bbe:	(bad)  [ebp+0xc3a09a2]
  416bc4:	test   DWORD PTR [esi],ebp
  416bc6:	aam    0xff
  416bc8:	leave  
  416bc9:	in     al,0xa
  416bcb:	in     al,dx
  416bcc:	stos   DWORD PTR es:[edi],eax
  416bcd:	xchg   DWORD PTR [edi+0x2e],edx
  416bd0:	js     0x416b8a
  416bd2:	sbb    eax,0xb5e79215
  416bd7:	mov    esp,0x937a2126
  416bdc:	cmc    
  416bdd:	das    
  416bde:	sub    ebp,DWORD PTR [ebx-0x35]
  416be1:	lods   al,BYTE PTR ds:[esi]
  416be2:	out    0x76,al
  416be4:	jp     0x416bf2
  416be6:	ss and ch,bh
  416be9:	jnp    0x416b8e
  416beb:	loopne 0x416c38
  416bed:	mov    WORD PTR [edi-0x6f13fee4],ss
  416bf3:	gs dec edx
  416bf5:	sbb    al,0x9
  416bf7:	push   ecx
  416bf8:	daa    
  416bf9:	lahf   
  416bfa:	and    dh,BYTE PTR [eax+0x6b]
  416bfd:	(bad)  
  416bfe:	into   
  416bff:	push   0x58
  416c01:	adc    dh,BYTE PTR [eax]
  416c03:	mov    esp,edx
  416c05:	cwde   
  416c06:	jne    0x416bc0
  416c08:	scas   al,BYTE PTR es:[edi]
  416c09:	sar    ebx,1
  416c0b:	(bad)  
  416c0c:	stc    
  416c0d:	or     eax,0xd88acf50
  416c12:	inc    edi
  416c13:	in     eax,dx
  416c14:	cmp    bl,BYTE PTR [edx-0x7e6be44b]
  416c1a:	test   DWORD PTR ds:0x4807728e,0xb8c1506c
  416c24:	and    eax,0xefa93f8d
  416c29:	push   cs
  416c2a:	shl    DWORD PTR [ecx+0x101e9f],1
  416c30:	sub    eax,0x59aab47b
  416c35:	sahf   
  416c36:	imul   ebx,DWORD PTR [esi-0x5e],0xfffffffb
  416c3a:	rcl    DWORD PTR ds:[edx-0x63a7b4ef],cl
  416c41:	mov    edi,DWORD PTR [edx]
  416c43:	mov    dl,0x40
  416c45:	xor    esp,DWORD PTR [ecx-0x4827262d]
  416c4b:	(bad)  [ebp+0x3be8232]
  416c51:	and    BYTE PTR [edi],ch
  416c53:	dec    ebp
  416c54:	push   esi
  416c55:	dec    ecx
  416c56:	pusha  
  416c57:	repnz stos BYTE PTR es:[edi],al
  416c59:	ss mov dh,dh
  416c5c:	xchg   esi,eax
  416c5d:	loopne 0x416c43
  416c5f:	or     DWORD PTR [edi],esi
  416c61:	pop    esp
  416c62:	imul   esi,ebx,0x5c
  416c65:	out    0xda,al
  416c67:	stos   BYTE PTR es:[edi],al
  416c68:	mov    ah,0x26
  416c6a:	cld    
  416c6b:	dec    eax
  416c6c:	ret    0x9d86
  416c6f:	in     al,0x14
  416c71:	push   edx
  416c72:	dec    eax
  416c73:	push   ss
  416c74:	pop    ebp
  416c75:	sar    DWORD PTR [edi-0x20],0xe
  416c79:	push   edi
  416c7a:	jbe    0x416cd1
  416c7c:	or     bl,ch
  416c7e:	xchg   DWORD PTR [edx],esi
  416c80:	pop    es
  416c81:	repz adc cl,BYTE PTR [edi]
  416c84:	mov    ebp,0x21e696f4
  416c89:	pop    ecx
  416c8a:	dec    ecx
  416c8b:	lahf   
  416c8c:	shr    BYTE PTR [ebx+ecx*1-0xc],1
  416c90:	js     0x416cfe
  416c92:	sbb    bh,BYTE PTR [ecx+0x279ca32]
  416c98:	pop    esi
  416c99:	rcl    esp,0x91
  416c9c:	jle    0x416c78
  416c9e:	xchg   ebp,eax
  416c9f:	shl    bl,cl
  416ca1:	in     eax,0xd5
  416ca3:	hlt    
  416ca4:	out    0x76,al
  416ca6:	push   0x10d2040c
  416cab:	mov    DWORD PTR [ebx+0x20],esp
  416cae:	(bad)  
  416caf:	(bad)  [edx-0x23343a2]
  416cb5:	pop    ebp
  416cb6:	jle    0x416ce3
  416cb8:	aas    
  416cb9:	mov    esi,0x50a7c94e
  416cbe:	jmp    0x416c72
  416cc0:	cld    
  416cc1:	cmovg  edx,edi
  416cc4:	and    al,0x9
  416cc6:	mov    BYTE PTR [esi],al
  416cc8:	ret    
  416cc9:	jne    0x416d37
  416ccb:	jnp    0x416c78
  416ccd:	retf   
  416cce:	add    al,0xeb
  416cd0:	or     ch,ch
  416cd2:	jg     0x416d07
  416cd4:	inc    edi
  416cd5:	inc    edi
  416cd6:	and    al,0x23
  416cd8:	or     DWORD PTR ds:0x75110810,ebx
  416cde:	pop    edi
  416cdf:	and    DWORD PTR [eax+ebp*4+0x66],edx
  416ce3:	jbe    0x416c71
  416ce5:	mov    dl,0xff
  416ce7:	jne    0x416d5b
  416ce9:	retf   0x5c45
  416cec:	ins    DWORD PTR es:[edi],dx
  416ced:	mov    esi,0xd6bc6e80
  416cf2:	int    0xe
  416cf4:	int    0x77
  416cf6:	stos   DWORD PTR es:[edi],eax
  416cf7:	icebp  
  416cf8:	nop
  416cf9:	es jns 0x416d19
  416cfc:	es mov edi,0xb677c362
  416d02:	mov    esi,0x969ee24f
  416d07:	adc    al,al
  416d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d0a:	jge    0x416d3a
  416d0c:	jo     0x416cc1
  416d0e:	loope  0x416d26
  416d10:	push   ss
  416d11:	dec    esp
  416d12:	(bad)  [ebx-0x38]
  416d15:	(bad)  
  416d16:	leave  
  416d17:	fwait
  416d18:	popf   
  416d19:	mov    dh,0x59
  416d1b:	lds    edx,FWORD PTR [ebx]
  416d1d:	dec    sp
  416d1f:	push   ss
  416d20:	inc    ebp
  416d21:	mov    esp,0xe8dacff0
  416d26:	sbb    al,0x80
  416d28:	xor    eax,0x80ff17f9
  416d2d:	outs   dx,DWORD PTR ds:[esi]
  416d2e:	jmp    0x416d0c
  416d30:	xor    DWORD PTR [edx+0x41],ecx
  416d33:	out    0xf7,al
  416d35:	out    0xdb,al
  416d37:	inc    eax
  416d38:	jle    0x416d79
  416d3a:	or     dl,BYTE PTR [esi+ebp*1+0x77]
  416d3e:	idiv   BYTE PTR [edi]
  416d40:	or     dl,BYTE PTR [ebx]
  416d42:	or     BYTE PTR [esi],dh
  416d44:	or     dl,0x28
  416d47:	dec    eax
  416d48:	xchg   ecx,ebx
  416d4a:	fstp   TBYTE PTR ds:0x7b76bff2
  416d50:	mov    edi,0x2a3e83cb
  416d55:	(bad)  
  416d56:	popf   
  416d57:	repz mov cl,0x40
  416d5a:	loop   0x416d15
  416d5c:	jge    0x416d04
  416d5e:	and    eax,edx
  416d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d61:	sbb    eax,0x84f2f00e
  416d66:	pop    ss
  416d67:	and    DWORD PTR [ebx+0x4b],ebx
  416d6a:	popf   
  416d6b:	(bad)  
  416d6c:	xchg   ebp,eax
  416d6d:	xchg   esp,eax
  416d6e:	xlat   BYTE PTR ds:[ebx]
  416d6f:	jge    0x416d3d
  416d71:	test   eax,0x423151f6
  416d76:	xchg   DWORD PTR [edi-0x5d],ebx
  416d79:	inc    edx
  416d7a:	mov    ecx,0xaf509138
  416d7f:	push   0x2c
  416d81:	ficomp DWORD PTR [eax+esi*2-0x1376b6b2]
  416d88:	inc    ecx
  416d89:	mov    BYTE PTR [esi-0x6b],dh
  416d8c:	mov    ah,0xc1
  416d8e:	data16 daa 
  416d90:	sahf   
  416d91:	lea    edi,[ebp+0x20]
  416d94:	das    
  416d95:	rcl    eax,1
  416d97:	jp     0x416d9b
  416d99:	xor    edx,ebx
  416d9b:	inc    edx
  416d9c:	ja     0x416d40
  416d9e:	or     BYTE PTR [edx],bh
  416da0:	fcom   DWORD PTR [edx+0x21]
  416da3:	mov    ds:0xc7dc79a6,al
  416da8:	es and al,0x9
  416dab:	das    
  416dac:	dec    eax
  416dad:	jo     0x416d74
  416daf:	(bad)  [esi+0x4e19ffea]
  416db5:	sub    BYTE PTR [esi],ah
  416db7:	cs xchg edi,eax
  416db9:	sbb    al,BYTE PTR [edi+0x4ea8d19c]
  416dbf:	(bad)  
  416dc0:	lock (bad) 
  416dc2:	cld    
  416dc3:	stos   BYTE PTR es:[edi],al
  416dc4:	dec    esp
  416dc5:	jge    0x416e2c
  416dc7:	cdq    
  416dc8:	in     eax,dx
  416dc9:	xchg   BYTE PTR [ecx+0x26],ch
  416dcc:	mov    edx,0x4e4562fb
  416dd1:	hlt    
  416dd2:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  416dd4:	je     0x416d77
  416dd6:	stos   BYTE PTR es:[edi],al
  416dd7:	cmc    
  416dd8:	add    ecx,ecx
  416dda:	sub    ebp,DWORD PTR [eax]
  416ddc:	xor    BYTE PTR [ebx],bl
  416dde:	mov    eax,0x62a0b8cb
  416de3:	inc    ebp
  416de4:	shr    eax,1
  416de6:	aaa    
  416de7:	rcl    DWORD PTR [ebx+0x40a660b],0x38
  416dee:	pop    ss
  416def:	dec    ecx
  416df0:	jl     0x416e49
  416df2:	shl    BYTE PTR [edx+0x2781c175],1
  416df8:	mov    BYTE PTR [ebp+0x7b],bh
  416dfb:	cmp    eax,0xbd32df30
  416e00:	sbb    bh,BYTE PTR [edx]
  416e02:	jo     0x416df7
  416e04:	dec    edx
  416e05:	jne    0x416e28
  416e07:	fwait
  416e08:	ja     0x416dfd
  416e0a:	lock xchg BYTE PTR [ecx+0x29],al
  416e0e:	not    DWORD PTR [ebx]
  416e10:	mov    esp,0xf00a3f7c
  416e15:	sub    ch,al
  416e17:	pop    ds
  416e18:	(bad)  
  416e19:	fs pushf 
  416e1b:	into   
  416e1c:	sar    DWORD PTR [ebp+0x2a],1
  416e1f:	dec    esp
  416e20:	pusha  
  416e21:	push   ds
  416e22:	pop    ebp
  416e23:	inc    ebp
  416e24:	(bad)  [eax-0x7c4e63c5]
  416e2a:	and    DWORD PTR [edi+0x72c0c42c],eax
  416e30:	test   al,0x49
  416e32:	lea    eax,[esi]
  416e34:	fisttp WORD PTR [eax-0x11]
  416e37:	xchg   ebp,eax
  416e38:	jle    0x416e0f
  416e3a:	mov    bh,0xe9
  416e3c:	or     eax,0xc649f890
  416e41:	sbb    BYTE PTR [ebx+0x3c],al
  416e44:	in     eax,dx
  416e45:	popa   
  416e46:	pushf  
  416e47:	(bad)  
  416e48:	and    BYTE PTR [esi-0x25],dl
  416e4b:	retf   
  416e4c:	inc    edi
  416e4d:	pop    ecx
  416e4e:	loope  0x416e9c
  416e50:	jno    0x416e52
  416e52:	aaa    
  416e53:	jg     0x416ecc
  416e55:	jno    0x416e91
  416e57:	call   0x8aa5ca6b
  416e5c:	loopne 0x416e98
  416e5e:	sbb    DWORD PTR [ecx-0x2c9f9706],edx
  416e64:	jae    0x416edc
  416e66:	sub    bh,0xd7
  416e69:	icebp  
  416e6a:	push   ebp
  416e6b:	sbb    DWORD PTR [ebx+eax*4-0x1],ecx
  416e6f:	fstp   QWORD PTR [edx]
  416e71:	jb     0x416dfa
  416e73:	ins    BYTE PTR es:[edi],dx
  416e74:	cmp    dh,BYTE PTR [ebp+0x24b3405e]
  416e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e7b:	pop    ebx
  416e7c:	dec    ecx
  416e7d:	inc    edx
  416e7e:	xchg   ch,dl
  416e80:	adc    al,0xc8
  416e82:	sbb    dh,al
  416e84:	div    edi
  416e86:	iret   
  416e87:	fwait
  416e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e89:	rol    DWORD PTR [ebx-0x11],1
  416e8c:	jg     0x416eb5
  416e8e:	xor    esp,DWORD PTR [esi+0x4e]
  416e91:	mov    edx,0xc8659599
  416e96:	cdq    
  416e97:	out    dx,al
  416e98:	jle    0x416eb9
  416e9a:	or     al,0x44
  416e9c:	push   esp
  416e9d:	push   ebx
  416e9e:	out    dx,eax
  416e9f:	pop    es
  416ea0:	icebp  
  416ea1:	xchg   ecx,eax
  416ea2:	xor    dh,BYTE PTR [ebx-0x522f74ba]
  416ea8:	cmp    bh,BYTE PTR [ebx]
  416eaa:	imul   ebx,eax,0x22bbb97d
  416eb0:	jmp    0xac3fa3c9
  416eb5:	je     0x416e73
  416eb7:	icebp  
  416eb8:	fsubrp st(5),st
  416eba:	sub    al,0x43
  416ebc:	loop   0x416e80
  416ebe:	mov    eax,0x42787c92
  416ec3:	pop    eax
  416ec4:	frstor [ecx]
  416ec6:	pop    edx
  416ec7:	dec    esi
  416ec8:	loop   0x416eea
  416eca:	sahf   
  416ecb:	fninit 
  416ecd:	inc    ebx
  416ece:	add    ebx,eax
  416ed0:	test   DWORD PTR [ebp+0x2b],ebp
  416ed3:	mov    cl,0x77
  416ed5:	jne    0x416e8a
  416ed7:	leave  
  416ed8:	and    ebp,edi
  416eda:	pusha  
  416edb:	outs   dx,BYTE PTR ds:[esi]
  416edc:	pop    ds
  416edd:	xchg   BYTE PTR [esi-0x1],bl
  416ee0:	mov    ebp,0x72020e58
  416ee5:	data16 or BYTE PTR [esi-0x75],ah
  416ee9:	xlat   BYTE PTR ds:[ebx]
  416eea:	aaa    
  416eeb:	xor    al,0x32
  416eed:	mov    ds,WORD PTR [ebx]
  416eef:	sar    BYTE PTR [eax],1
  416ef1:	test   dh,bl
  416ef3:	mov    al,0xb3
  416ef5:	mov    esp,DWORD PTR [edi+0x5170c93d]
  416efb:	dec    edx
  416efc:	pop    ebp
  416efd:	add    al,BYTE PTR [edi+0x2623cbeb]
  416f03:	test   al,0x64
  416f05:	cmp    al,0x12
  416f07:	arpl   WORD PTR [esi-0x6038485],cx
  416f0d:	into   
  416f0e:	sub    DWORD PTR [esi],0x8a56a445
  416f14:	mov    ?,ecx
  416f16:	jp     0x416f63
  416f18:	loop   0x416eaf
  416f1a:	hlt    
  416f1b:	pop    edi
  416f1c:	test   eax,0x5a65743
  416f21:	xchg   eax,ebp
  416f23:	ror    esi,cl
  416f25:	js     0x416ed6
  416f27:	(bad)  
  416f28:	les    esi,FWORD PTR fs:[ebx]
  416f2b:	fs pop ecx
  416f2d:	adc    ch,BYTE PTR [edi]
  416f2f:	rcr    DWORD PTR [edi+0x6237e1f7],1
  416f35:	or     DWORD PTR [esi-0x46],0x5d868486
  416f3c:	shr    BYTE PTR [ecx*2-0x74a5cd41],0xdf
  416f44:	or     BYTE PTR [esi],0xb
  416f47:	mov    bh,0x1b
  416f49:	sub    BYTE PTR [esi+eax*1-0x219e9b33],dl
  416f50:	pop    ds
  416f51:	pop    ss
  416f52:	bound  ebp,QWORD PTR [eax+0x3e]
  416f55:	gs into 
  416f57:	rol    ebx,cl
  416f59:	pop    edx
  416f5a:	lods   eax,DWORD PTR ds:[esi]
  416f5b:	rcr    BYTE PTR [edx],0xca
  416f5e:	mov    eax,ds:0x921483ef
  416f63:	sub    esi,edi
  416f65:	mov    ds:0x4e3f18d3,al
  416f6a:	jae    0x416eff
  416f6c:	inc    esi
  416f6d:	xchg   ecx,eax
  416f6e:	push   0xffffff80
  416f70:	mov    dh,0xd7
  416f72:	test   eax,0x4d8d1b7f
  416f77:	int    0x1a
  416f79:	ret    
  416f7a:	outs   dx,DWORD PTR ds:[esi]
  416f7b:	inc    esp
  416f7c:	jnp    0x416f5d
  416f7e:	ja     0x416fcd
  416f80:	popa   
  416f81:	inc    edi
  416f82:	mov    esi,0x9816c92
  416f87:	sbb    cl,BYTE PTR [edi]
  416f89:	dec    eax
  416f8a:	jl     0x416f9f
  416f8c:	enter  0xf592,0xb0
  416f90:	in     al,0x13
  416f92:	ror    BYTE PTR [esi+0x4499a09f],1
  416f98:	mov    al,ds:0x8718903c
  416f9d:	cmp    al,0x15
  416f9f:	push   esp
  416fa0:	xor    ch,ah
  416fa2:	xchg   edx,eax
  416fa3:	out    dx,eax
  416fa4:	adc    eax,DWORD PTR [eax-0x75ae2549]
  416faa:	or     DWORD PTR [edi],esi
  416fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fad:	mov    eax,ebp
  416faf:	push   ds
  416fb0:	stos   BYTE PTR es:[edi],al
  416fb1:	mov    edi,DWORD PTR [edi+0x1d]
  416fb4:	dec    ebp
  416fb5:	dec    edx
  416fb6:	out    dx,al
  416fb7:	ret    
  416fb8:	xchg   ebx,eax
  416fb9:	add    eax,0x9f61899e
  416fbe:	sub    al,0x4e
  416fc0:	out    0x9e,al
  416fc2:	adc    BYTE PTR [ebp-0x5dd3384d],bl
  416fc8:	jecxz  0x416fb8
  416fca:	xchg   edx,eax
  416fcb:	xor    eax,0x3a7149a
  416fd0:	inc    esp
  416fd1:	push   cs
  416fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fd3:	sub    eax,DWORD PTR [edi+0x65]
  416fd6:	cmc    
  416fd7:	pop    eax
  416fd8:	dec    ecx
  416fd9:	dec    ebx
  416fda:	sbb    BYTE PTR [ebx],ah
  416fdc:	mov    cl,0xd7
  416fde:	sar    BYTE PTR [ebx+0x3cd452c8],1
  416fe4:	xchg   esp,eax
  416fe5:	xchg   esp,eax
  416fe6:	xchg   esi,eax
  416fe7:	mov    ah,ch
  416fe9:	scas   al,BYTE PTR es:[edi]
  416fea:	jge    0x417060
  416fec:	sub    DWORD PTR [esp+ebp*1+0x2ba4d7bd],esp
  416ff3:	add    BYTE PTR [eax],0x56
  416ff6:	cmp    eax,0xbb2799d9
  416ffb:	xor    cl,BYTE PTR [edx]
  416ffd:	cmp    DWORD PTR [edi],ecx
  416fff:	cmp    al,0x51
  417001:	jge    0x416f97
  417003:	and    edx,DWORD PTR [ebp-0x62]
  417006:	cmc    
  417007:	ror    ecx,1
  417009:	arpl   WORD PTR [ebp+0x62],sp
  41700c:	xor    ebx,DWORD PTR [ecx]
  41700e:	repz cmp DWORD PTR ds:0x330d83f3,edi
  417015:	test   DWORD PTR [ebp-0x5b],0xf598a0c1
  41701c:	sti    
  41701d:	add    eax,0xf9331962
  417022:	pop    ds
  417023:	push   edi
  417024:	mov    eax,0x3a8f8b5d
  417029:	or     al,0xba
  41702b:	sbb    BYTE PTR [esp+edi*1+0x54],ah
  41702f:	repnz dec edi
  417031:	mov    cs,WORD PTR [edi]
  417033:	xor    DWORD PTR [edx+0x70],edx
  417036:	pop    edx
  417037:	push   edi
  417038:	pop    ss
  417039:	lods   al,BYTE PTR ds:[esi]
  41703a:	sar    BYTE PTR [edx-0x5b],0x1c
  41703e:	scas   al,BYTE PTR es:[edi]
  41703f:	inc    ecx
  417040:	cmp    edx,DWORD PTR [edi+0x5b]
  417043:	inc    ecx
  417044:	std    
  417045:	push   ebx
  417046:	adc    bh,BYTE PTR [edi-0x275c1cab]
  41704c:	and    al,0x63
  41704e:	and    bh,BYTE PTR [edx]
  417050:	pop    edi
  417051:	fnstsw WORD PTR [edx]
  417053:	stos   DWORD PTR es:[edi],eax
  417054:	sub    al,0xf2
  417056:	lds    ebx,FWORD PTR [edx-0x42e01dd1]
  41705c:	ret    0xab23
  41705f:	rol    DWORD PTR ds:0x85440391,0x68
  417066:	mov    ds:0xb138c486,eax
  41706b:	jl     0x4170a1
  41706d:	push   edi
  41706e:	lods   al,BYTE PTR ds:[esi]
  41706f:	repz lock mov eax,0x349e5b8e
  417076:	ror    BYTE PTR [edi+edx*1-0x68e704eb],1
  41707d:	jno    0x417003
  41707f:	push   ds
  417080:	or     al,0x85
  417082:	daa    
  417083:	or     al,0xe8
  417085:	not    DWORD PTR [eax+0x13]
  417088:	cmp    eax,0xa424f881
  41708d:	xor    al,0x89
  41708f:	lds    ecx,FWORD PTR [ecx]
  417091:	call   0xd6ad:0xc7e407e7
  417098:	add    BYTE PTR [edi+0x7b32b8f8],0x38
  41709f:	(bad)  
  4170a0:	pop    edx
  4170a1:	push   ebx
  4170a2:	clc    
  4170a3:	or     al,0x48
  4170a5:	cmp    ebx,ebx
  4170a7:	lods   al,BYTE PTR ds:[esi]
  4170a8:	daa    
  4170a9:	outs   dx,BYTE PTR ds:[esi]
  4170aa:	mov    ah,0x65
  4170ac:	lods   al,BYTE PTR ds:[esi]
  4170ad:	bound  esp,QWORD PTR [ebp+0x3c]
  4170b0:	sub    dl,ch
  4170b2:	pop    esi
  4170b3:	dec    edx
  4170b4:	fisubr DWORD PTR [edx+0x79b4fefa]
  4170ba:	fsub   QWORD PTR [edi+esi*8-0x3e4c4aa7]
  4170c1:	mov    edx,0x126e86e
  4170c6:	or     al,0xda
  4170c8:	retf   
  4170c9:	pop    ebp
  4170ca:	mov    bl,0xcc
  4170cc:	ret    
  4170cd:	mov    al,ds:0x2896c44f
  4170d2:	stc    
  4170d3:	push   esp
  4170d4:	(bad)  
  4170d5:	aas    
  4170d6:	xchg   ebp,eax
  4170d7:	fnstcw WORD PTR [ebp-0x5e]
  4170da:	jge    0x417123
  4170dc:	addr16 into 
  4170de:	iret   
  4170df:	jmp    0x7745e4ad
  4170e4:	stc    
  4170e5:	pusha  
  4170e6:	and    ah,bh
  4170e8:	pop    ebp
  4170e9:	inc    ebx
  4170ea:	leave  
  4170eb:	and    eax,0x7c727d9f
  4170f0:	sub    al,0x94
  4170f2:	bound  ebp,QWORD PTR [ebp-0x34]
  4170f5:	test   al,0x90
  4170f7:	shl    eax,1
  4170f9:	dec    eax
  4170fa:	push   0xf42830c5
  4170ff:	push   ss
  417100:	clc    
  417101:	shr    BYTE PTR [esi],1
  417103:	clc    
  417104:	sahf   
  417105:	cdq    
  417106:	xlat   BYTE PTR ds:[ebx]
  417107:	jo     0x417144
  417109:	add    DWORD PTR [ebp-0x16],ebp
  41710c:	imul   ebp,DWORD PTR [esi+0x6f],0x297447a
  417113:	cmp    edx,DWORD PTR [eax+0x2f]
  417116:	rol    DWORD PTR [eax-0x2b60e76f],cl
  41711c:	out    dx,al
  41711d:	ret    0x8eb5
  417120:	inc    esp
  417121:	iret   
  417122:	sub    eax,0xd662cb18
  417127:	js     0x417154
  417129:	addr16 mov ebp,0xeb0b7f90
  41712f:	cmp    al,0x64
  417131:	aaa    
  417132:	inc    esp
  417133:	adc    al,0x46
  417135:	daa    
  417136:	iret   
  417137:	inc    esi
  417138:	sbb    DWORD PTR [edx-0xb151f00],esp
  41713e:	ss push ecx
  417140:	sahf   
  417141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417142:	ins    DWORD PTR es:[edi],dx
  417143:	xor    ecx,esp
  417145:	mov    ebp,0x981d59c9
  41714a:	and    BYTE PTR [ecx],ah
  41714c:	xchg   ebp,eax
  41714d:	mov    ah,0xde
  41714f:	push   ds
  417150:	(bad)  
  417151:	adc    ch,BYTE PTR [esp+eax*4+0x16b7bafb]
  417158:	mov    ds:0xe738861,eax
  41715d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41715e:	mov    edx,0xcf404a86
  417163:	pop    esp
  417164:	test   DWORD PTR [edi],esi
  417166:	jmp    0xc50e839c
  41716b:	inc    ebp
  41716c:	xchg   esi,eax
  41716d:	sbb    al,0xb
  41716f:	push   edx
  417170:	mov    ebx,0x23e34f78
  417175:	daa    
  417176:	bound  esp,QWORD PTR [ecx-0x3e]
  417179:	adc    al,0xc8
  41717b:	lock push ebx
  41717d:	adc    eax,0x4059ba81
  417182:	add    eax,0xb68f36c9
  417187:	fwait
  417188:	(bad)  
  417189:	ins    BYTE PTR es:[edi],dx
  41718a:	aas    
  41718b:	ret    
  41718c:	sub    eax,esp
  41718e:	jg     0x417168
  417190:	paddq  mm7,mm3
  417193:	push   ebx
  417194:	outs   dx,BYTE PTR ds:[esi]
  417195:	stos   DWORD PTR es:[edi],eax
  417196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417197:	xor    eax,0x309e9e73
  41719c:	adc    dh,BYTE PTR [eax-0x5c]
  41719f:	jbe    0x41720b
  4171a1:	mov    al,0x48
  4171a3:	push   eax
  4171a4:	out    dx,al
  4171a5:	or     al,0xc8
  4171a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171a8:	xor    ch,cl
  4171aa:	clc    
  4171ab:	les    edx,FWORD PTR [esi-0x77a4fc6c]
  4171b1:	shl    BYTE PTR cs:[esi+0x60f1c63d],cl
  4171b8:	(bad)  
  4171bc:	inc    edi
  4171bd:	adc    BYTE PTR [ebx],al
  4171bf:	(bad)  
  4171c1:	jecxz  0x41722d
  4171c3:	test   ebp,ebx
  4171c5:	(bad)  
  4171c6:	in     eax,dx
  4171c7:	inc    ebx
  4171c8:	rcl    BYTE PTR [ecx-0x3d],cl
  4171cb:	retf   
  4171cc:	jae    0x417161
  4171ce:	pop    ebp
  4171cf:	and    DWORD PTR [ecx+0x1a8edb7d],0x53f50e00
  4171d9:	mov    eax,ds:0x856cf092
  4171de:	jbe    0x4171b4
  4171e0:	scas   al,BYTE PTR es:[edi]
  4171e1:	es nop
  4171e3:	sbb    al,0xd5
  4171e5:	inc    edi
  4171e6:	or     edi,ecx
  4171e8:	das    
  4171e9:	mov    al,ds:0x1f5d6b93
  4171ee:	jb     0x41724a
  4171f0:	shl    DWORD PTR [edi],cl
  4171f2:	or     DWORD PTR [ecx+eiz*4],esi
  4171f5:	xor    edi,DWORD PTR [ebp-0x64]
  4171f8:	push   0x7
  4171fa:	sti    
  4171fb:	pop    ecx
  4171fc:	and    al,0x1f
  4171fe:	lea    esi,[edi+0x3f349e0d]
  417204:	add    DWORD PTR [esi-0x50c416f5],ecx
  41720a:	or     esi,DWORD PTR [ecx+0x57]
  41720d:	dec    esp
  41720e:	pop    ebx
  41720f:	dec    DWORD PTR [eax-0x2fb816d0]
  417215:	xor    BYTE PTR [ecx+0x401a4617],bl
  41721b:	mov    ah,0xed
  41721d:	int3   
  41721e:	(bad)  
  41721f:	fnstsw WORD PTR [esi]
  417221:	xor    BYTE PTR [ecx+0x1e],bh
  417224:	je     0x4171d8
  417226:	cmp    al,0x6a
  417228:	inc    ebx
  417229:	or     ah,bl
  41722b:	fisttp QWORD PTR [ecx+0x155b6955]
  417231:	(bad)  
  417232:	fcom   QWORD PTR [eax]
  417234:	mov    ah,0x1d
  417236:	aas    
  417237:	nop
  417238:	push   ebx
  417239:	cmp    edi,edi
  41723b:	xor    DWORD PTR [edx],esi
  41723d:	mov    ds:0x4723f20a,eax
  417242:	add    DWORD PTR [eax-0x63110f02],ebp
  417248:	xchg   BYTE PTR [ecx-0x62],al
  41724b:	das    
  41724c:	cdq    
  41724d:	call   0x81d6b46a
  417252:	test   eax,0x23d77669
  417257:	xor    dh,BYTE PTR [ebp-0x39ed3eee]
  41725d:	or     al,0xf
  41725f:	sbb    al,0xcd
  417261:	(bad)  
  417262:	pop    ss
  417263:	ja     0x4172ce
  417265:	mov    dh,BYTE PTR [edx+0x54]
  417268:	cld    
  417269:	push   edi
  41726a:	shr    DWORD PTR [edx+0x3dff30d5],1
  417270:	push   ebp
  417271:	mov    al,ds:0xd9e1bb67
  417276:	mov    esp,0xd642f3e2
  41727b:	and    DWORD PTR [ebp-0x2f843ed4],esi
  417281:	out    0x59,al
  417283:	pop    ebx
  417284:	cmp    eax,esp
  417286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417287:	mov    ds:0x91e3eccb,al
  41728c:	cli    
  41728d:	xchg   ebp,eax
  41728e:	pop    ds
  41728f:	div    DWORD PTR [eax-0x48]
  417292:	mov    ah,0x43
  417294:	sbb    dh,BYTE PTR [eax]
  417296:	(bad)  
  417297:	push   esp
  417298:	mov    eax,0x4d6b02a9
  41729d:	mov    ss,WORD PTR [eax+eiz*2-0x745941eb]
  4172a4:	xchg   edx,eax
  4172a5:	es sbb eax,ecx
  4172a8:	dec    edi
  4172a9:	pop    eax
  4172aa:	sub    eax,ebp
  4172ac:	jno    0x417316
  4172ae:	push   ebx
  4172af:	imul   edx,ecx,0xd002d610
  4172b5:	(bad)  
  4172b6:	jb     0x41725f
  4172b8:	stos   DWORD PTR es:[edi],eax
  4172b9:	iret   
  4172ba:	inc    esi
  4172bb:	cmc    
  4172bc:	(bad)  
  4172be:	push   esi
  4172bf:	fld    DWORD PTR ds:0x77af8fd3
  4172c5:	fldz   
  4172c7:	sub    BYTE PTR [ebx-0x27],0xdc
  4172cb:	rcr    BYTE PTR [ebp-0x2f],0xd0
  4172cf:	ja     0x41727d
  4172d1:	outs   dx,DWORD PTR ds:[esi]
  4172d2:	sahf   
  4172d3:	fst    QWORD PTR [esi-0x163c5939]
  4172d9:	push   ebx
  4172da:	shl    DWORD PTR ds:0xda83d9c4,cl
  4172e0:	mov    eax,ds:0x75446e85
  4172e5:	call   0x17938a7c
  4172ea:	inc    edx
  4172eb:	mov    ah,0xf8
  4172ed:	repz xchg edx,eax
  4172ef:	fistp  WORD PTR [esi]
  4172f1:	jmp    0xb42c6f8e
  4172f6:	jo     0x41736c
  4172f8:	jl     0x4172ff
  4172fa:	adc    eax,0x9a76e03c
  4172ff:	or     BYTE PTR [ebx+0x56dae33a],bl
  417305:	mov    dl,0x80
  417307:	xlat   BYTE PTR ds:[ebx]
  417308:	jmp    0x417367
  41730a:	adc    DWORD PTR [ebx],edi
  41730c:	push   ecx
  41730d:	sbb    al,0xd0
  41730f:	sbb    al,0x58
  417311:	aaa    
  417312:	ret    
  417313:	(bad)  
  417314:	pop    ss
  417315:	xlat   BYTE PTR ds:[ebx]
  417316:	jmp    0x4b0c22d2
  41731b:	ins    DWORD PTR es:[edi],dx
  41731c:	mov    al,gs:0x1b98edd6
  417322:	retf   0xced1
  417325:	xor    al,BYTE PTR [esi]
  417327:	dec    ebp
  417328:	cmp    esi,ebp
  41732a:	pop    ebp
  41732b:	adc    eax,0xd0a308f1
  417330:	stc    
  417331:	xchg   esp,eax
  417332:	xchg   ecx,eax
  417333:	pop    ds
  417334:	jle    0x417356
  417336:	cmp    edx,DWORD PTR [ebx+0x37]
  417339:	je     0x41732a
  41733b:	(bad)  
  41733c:	mov    ebp,0x616470e8
  417341:	repz sub eax,DWORD PTR [edx-0x43]
  417345:	hlt    
  417346:	sti    
  417347:	xchg   BYTE PTR [ecx],al
  417349:	fs jns 0x4172e8
  41734c:	xchg   edx,eax
  41734d:	call   0x774b12ea
  417352:	(bad)  
  417353:	mov    cs,WORD PTR [esi+ebp*4+0x29c59a90]
  41735a:	ss add eax,0x7811d603
  417360:	not    DWORD PTR [esi+0x1d]
  417363:	jmp    0xee61:0x5ab06d64
  41736a:	push   cs
  41736b:	jnp    0x417330
  41736d:	outs   dx,DWORD PTR ds:[esi]
  41736e:	cli    
  41736f:	xor    ebp,edi
  417371:	mov    al,0x7b
  417373:	and    ecx,DWORD PTR [eax]
  417375:	add    ch,ah
  417377:	sub    al,0x8f
  417379:	stos   DWORD PTR es:[edi],eax
  41737a:	dec    ebp
  41737b:	ins    DWORD PTR es:[edi],dx
  41737c:	jle    0x417356
  41737e:	inc    esp
  41737f:	outs   dx,DWORD PTR ds:[esi]
  417380:	stos   BYTE PTR es:[edi],al
  417381:	adc    esi,DWORD PTR [eax-0x47357ddf]
  417387:	push   edi
  417388:	adc    eax,0xc8bc17b6
  41738d:	cmp    al,0xb0
  41738f:	sub    al,0xb7
  417391:	sbb    eax,0x15f3a0de
  417396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417397:	pop    ebp
  417398:	test   DWORD PTR [edx-0x2f],0x6239cd5d
  41739f:	inc    edx
  4173a0:	add    edi,DWORD PTR [edi+esi*4]
  4173a3:	ins    DWORD PTR es:[edi],dx
  4173a4:	xchg   esp,eax
  4173a5:	into   
  4173a6:	xlat   BYTE PTR ds:[ebx]
  4173a7:	push   0x63
  4173a9:	leave  
  4173aa:	dec    BYTE PTR [ebx-0x40]
  4173ad:	fcom   st(7)
  4173af:	mov    ebp,0xcfd44074
  4173b4:	cmc    
  4173b5:	push   0x81fe0a28
  4173ba:	stos   BYTE PTR es:[edi],al
  4173bb:	sahf   
  4173bc:	sub    al,0xfd
  4173be:	inc    edi
  4173bf:	sbb    BYTE PTR [esi+0x57802a92],dh
  4173c5:	dec    ebp
  4173c6:	nop
  4173c7:	out    0xa5,al
  4173c9:	(bad)  
  4173ca:	cli    
  4173cb:	in     eax,0xa3
  4173cd:	in     al,dx
  4173ce:	mov    ds:0x67b9d9ff,al
  4173d3:	aam    0xba
  4173d5:	nop
  4173d6:	push   ecx
  4173d7:	jnp    0x417450
  4173d9:	push   eax
  4173da:	sub    edx,esp
  4173dc:	inc    ebx
  4173dd:	arpl   WORD PTR [esi+0x3c],si
  4173e0:	add    BYTE PTR [eax],0xec
  4173e3:	cmp    BYTE PTR [esi-0x43],bl
  4173e6:	mov    ebx,0x10bbda83
  4173eb:	inc    edi
  4173ec:	scas   eax,DWORD PTR es:[edi]
  4173ed:	adc    BYTE PTR [ecx+eiz*2],dh
  4173f0:	push   ecx
  4173f1:	pop    es
  4173f2:	sar    DWORD PTR [ecx],1
  4173f4:	dec    ecx
  4173f5:	mov    edi,0x9a2af70a
  4173fa:	and    bl,0x63
  4173fd:	out    dx,eax
  4173fe:	icebp  
  4173ff:	mov    esi,ds
  417401:	mov    ds:0x7e451761,eax
  417406:	xchg   edx,eax
  417407:	and    eax,0xa54fce38
  41740c:	pop    ecx
  41740d:	fnstsw WORD PTR [ebp+0x4fc2fce6]
  417413:	dec    edi
  417414:	jg     0x417445
  417416:	nop
  417417:	out    dx,eax
  417418:	cmc    
  417419:	add    DWORD PTR [ebx],esp
  41741b:	add    eax,0xbf4b631
  417420:	pop    edx
  417421:	pop    ebp
  417422:	into   
  417423:	pop    ebp
  417424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417425:	mov    DWORD PTR [edx-0x365236a4],edx
  41742b:	(bad)  
  41742c:	(bad)  
  41742d:	jle    0x4173cb
  41742f:	jle    0x4173b7
  417431:	outs   dx,BYTE PTR ds:[esi]
  417432:	push   es
  417433:	test   BYTE PTR [ebp-0x4de85420],ch
  417439:	stos   BYTE PTR es:[edi],al
  41743a:	mov    eax,0x7eb09212
  41743f:	inc    ecx
  417440:	sbb    al,0x98
  417442:	xor    dh,BYTE PTR [ecx-0x7e]
  417445:	and    BYTE PTR [edi-0x186e3e81],bl
  41744b:	dec    eax
  41744c:	sbb    DWORD PTR [edi-0x6d83361e],esi
  417452:	pop    ebx
  417453:	jp     0x4174c8
  417455:	or     eax,0x18233c6f
  41745a:	ds mov edx,0xc6b64aed
  417460:	inc    ebx
  417461:	pop    ebp
  417462:	pop    ds
  417463:	mov    ds:0x55cbb88d,al
  417468:	mov    eax,0xc6177fd2
  41746d:	mov    BYTE PTR [edi-0x5d],ah
  417470:	enter  0x4370,0xb4
  417474:	mul    BYTE PTR [eax]
  417476:	sub    DWORD PTR [esi+0x707c3fe7],ecx
  41747c:	or     al,dh
  41747e:	jmp    0x3993:0x97a60e51
  417485:	jge    0x417459
  417487:	loope  0x417489
  417489:	scas   al,BYTE PTR es:[edi]
  41748a:	clc    
  41748b:	dec    ebp
  41748c:	mov    eax,0x2bbb4442
  417491:	push   ss
  417492:	fsubr  DWORD PTR [ecx-0x329401a9]
  417498:	jecxz  0x417454
  41749a:	call   0xd913:0xdd14a7bf
  4174a1:	imul   BYTE PTR [ebp+0x3ef04835]
  4174a7:	aad    0xfb
  4174a9:	jb     0x41746a
  4174ab:	mov    dl,0x2
  4174ad:	jmp    0xa592:0xcb71e2f6
  4174b4:	xor    BYTE PTR [edx-0x3e76c54f],bh
  4174ba:	xor    DWORD PTR [edi-0x65],0xffffff8a
  4174be:	data16 ins BYTE PTR es:[edi],dx
  4174c0:	or     al,0x7f
  4174c2:	outs   dx,BYTE PTR ds:[esi]
  4174c3:	into   
  4174c4:	cmp    ah,BYTE PTR [edi+0x1aefda9]
  4174ca:	jb     0x4174af
  4174cc:	lods   al,BYTE PTR ds:[esi]
  4174cd:	mov    edi,esp
  4174cf:	mov    esp,0xaf9d9228
  4174d4:	push   0x41
  4174d6:	jno    0x417508
  4174d8:	imul   ebx,DWORD PTR [ebx-0x431f2c7f],0x5bac0459
  4174e2:	test   BYTE PTR [eax-0x69],cl
  4174e5:	adc    ah,BYTE PTR [esi]
  4174e7:	call   0x8537:0xb8a7d98e
  4174ee:	xor    bl,bh
  4174f0:	jne    0x417491
  4174f2:	outs   dx,DWORD PTR ds:[esi]
  4174f3:	call   0xdc5e:0x20bca19
  4174fa:	inc    esi
  4174fb:	fs cdq 
  4174fd:	jmp    0x24f0:0xd4a509f7
  417504:	scas   eax,DWORD PTR es:[edi]
  417505:	and    ebp,DWORD PTR [edi]
  417507:	jle    0x4174fb
  417509:	ins    DWORD PTR es:[edi],dx
  41750a:	popf   
  41750b:	jns    0x4174eb
  41750d:	xor    DWORD PTR [esi-0xf],esp
  417510:	popf   
  417511:	aam    0x14
  417513:	rcl    eax,cl
  417515:	xor    DWORD PTR [esi-0x6f09b65a],edi
  41751b:	iret   
  41751c:	mov    al,ds:0xe3f46100
  417521:	in     al,dx
  417522:	(bad)  
  417523:	add    DWORD PTR [ebx-0x42bc4879],esi
  417529:	push   ss
  41752a:	push   ebx
  41752b:	mov    ah,0xc
  41752d:	leave  
  41752e:	jmp    0x4a2adfce
  417533:	aas    
  417534:	aas    
  417535:	add    DWORD PTR [edi-0x5a],eax
  417538:	sub    eax,0x295ee31d
  41753d:	cmp    al,0xc8
  41753f:	sbb    al,0x75
  417541:	push   ebx
  417542:	fwait
  417543:	repnz inc ecx
  417545:	outs   dx,BYTE PTR ds:[esi]
  417546:	int3   
  417547:	cmp    DWORD PTR [esi-0x20],esi
  41754a:	rcl    ebx,cl
  41754c:	neg    DWORD PTR [eax]
  41754e:	clc    
  41754f:	loopne 0x417505
  417551:	popf   
  417552:	call   0x8401:0x9a4027e1
  417559:	pop    ss
  41755a:	xlat   BYTE PTR ds:[ebx]
  41755b:	cmp    esi,DWORD PTR [eax]
  41755d:	cwde   
  41755e:	sbb    al,0x7e
  417560:	jp     0x4174e6
  417562:	push   ebp
  417563:	ficomp WORD PTR [edi]
  417565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417566:	adc    eax,0x23aff035
  41756b:	int3   
  41756c:	mov    dl,0x57
  41756e:	sbb    DWORD PTR [eax-0xb4fc70f],eax
  417574:	jp     0x417546
  417576:	pop    es
  417577:	and    DWORD PTR [ecx],edi
  417579:	mov    ch,0x14
  41757b:	retf   0xb97c
  41757e:	fcom   DWORD PTR [ecx+0x42]
  417581:	cmp    al,0xec
  417583:	lods   eax,DWORD PTR ds:[esi]
  417584:	mov    ah,BYTE PTR [edx+0x74]
  417587:	push   esp
  417588:	ret    0x4e79
  41758b:	ins    BYTE PTR es:[edi],dx
  41758c:	jmp    0x417554
  41758e:	aaa    
  41758f:	inc    edi
  417590:	hlt    
  417591:	push   ebx
  417592:	push   ecx
  417593:	jae    0x41753c
  417595:	lods   eax,DWORD PTR ds:[esi]
  417596:	aas    
  417597:	jno    0x417531
  417599:	xchg   BYTE PTR [ecx-0x11],ah
  41759c:	sub    al,0xaa
  41759e:	(bad)  [esp+ecx*8]
  4175a1:	cmp    ebx,DWORD PTR [eax+0x4293633]
  4175a7:	dec    ebx
  4175a8:	jb     0x4175ac
  4175aa:	aad    0x0
  4175ac:	mov    al,ds:0xc4e7fe37
  4175b1:	bound  esi,QWORD PTR [ebx+0x2c]
  4175b4:	js     0x41753c
  4175b6:	mov    eax,ds:0xe4a90b95
  4175bb:	dec    edx
  4175bc:	xchg   ecx,eax
  4175bd:	(bad)  
  4175be:	and    esi,DWORD PTR [ebp-0x5f]
  4175c1:	mov    cl,0x83
  4175c3:	mov    WORD PTR [eax+0x6d],cs
  4175c6:	inc    eax
  4175c7:	sar    edx,0x1e
  4175ca:	inc    esi
  4175cb:	imul   edi,ebx,0xffffffb4
  4175ce:	in     al,dx
  4175cf:	cmp    al,BYTE PTR [ebx-0x2b0ba89a]
  4175d5:	(bad)  
  4175d6:	jp     0x41764a
  4175d8:	inc    ebx
  4175d9:	pop    esp
  4175da:	pop    ds
  4175db:	cmp    al,0x35
  4175dd:	fistp  WORD PTR [edx+ebp*8-0x3c3491da]
  4175e4:	(bad)
  4175e8:	hlt    
  4175e9:	sub    eax,0xe8c2412d
  4175ee:	mov    ds:0x60d9d16b,al
  4175f3:	push   esi
  4175f4:	ret    0x7f60
  4175f7:	sub    DWORD PTR [eax-0x1cf138e3],esi
  4175fd:	fld    TBYTE PTR [edi-0x77c30dc7]
  417603:	cmp    DWORD PTR [edi],0xfffffff8
  417606:	mov    ds:0xce69c98f,eax
  41760b:	fadd   DWORD PTR [edx+0x5e]
  41760e:	in     eax,0xc1
  417610:	out    0x54,al
  417612:	outs   dx,BYTE PTR ds:[esi]
  417613:	pop    edx
  417614:	lock sub ebx,DWORD PTR [esi-0x362dbf90]
  41761b:	pop    edx
  41761c:	inc    esi
  41761d:	test   DWORD PTR [edx+0x1b683e95],ebp
  417623:	dec    edx
  417624:	pop    edi
  417625:	mov    dh,BYTE PTR [esi]
  417627:	jg     0x41764b
  417629:	into   
  41762a:	rol    DWORD PTR [ecx],0x14
  41762d:	sbb    ebp,ecx
  41762f:	fisttp QWORD PTR [edx+esi*8-0x233f0811]
  417636:	cmp    BYTE PTR ss:[eax+0x3f],dl
  41763a:	sahf   
  41763b:	cmc    
  41763c:	(bad)  
  41763d:	jmp    FWORD PTR [esi+esi*8]
  417640:	fyl2xp1 
  417642:	fnsave [ebx+0x67df3c9a]
  417648:	(bad)  
  41764a:	dec    edx
  41764b:	das    
  41764c:	repnz ss cmp eax,0x601bb109
  417653:	xchg   edx,eax
  417654:	sti    
  417655:	out    dx,al
  417656:	or     eax,0x8cbaa689
  41765b:	mov    ds:0x7fcb363c,al
  417660:	dec    ebx
  417661:	sbb    bl,dh
  417663:	push   es
  417664:	fsub   QWORD PTR [edi]
  417666:	and    esp,DWORD PTR [esi]
  417668:	test   eax,0xbca07d97
  41766d:	retf   
  41766e:	add    al,0x10
  417671:	call   ecx
  417673:	(bad)  
  417674:	push   ss
  417675:	(bad)  
  417676:	jle    0x417617
  417678:	daa    
  417679:	outs   dx,DWORD PTR ds:[esi]
  41767a:	(bad)  
  41767b:	repz push edi
  41767d:	push   es
  41767e:	add    BYTE PTR [ebp+edx*4-0x7f6c4eae],dl
  417685:	cmp    BYTE PTR [esi-0x5e],0xad
  417689:	pusha  
  41768a:	jbe    0x4176bd
  41768c:	shl    DWORD PTR [edx-0x76adeec],cl
  417692:	loop   0x41762f
  417694:	jae    0x417696
  417696:	aam    0xe2
  417698:	cmp    al,0x71
  41769a:	icebp  
  41769b:	and    DWORD PTR [edx-0x74bf3249],ecx
  4176a1:	in     eax,dx
  4176a2:	imul   ebp,DWORD PTR ds:0x56250dd0,0xffffffb1
  4176a9:	sub    al,0x20
  4176ab:	cmp    BYTE PTR [esi],0xf7
  4176ae:	sti    
  4176af:	adc    dl,BYTE PTR [ecx]
  4176b1:	pop    edx
  4176b2:	sahf   
  4176b3:	sbb    BYTE PTR [eax],cl
  4176b5:	rol    DWORD PTR [ebp+0x54],cl
  4176b8:	fistp  QWORD PTR [eax]
  4176ba:	(bad)  
  4176bb:	je     0x417642
  4176bd:	add    al,BYTE PTR [edi-0x3a78779b]
  4176c3:	repnz push 0xfffffff2
  4176c6:	test   al,0xd
  4176c8:	fstp   DWORD PTR [edx+0x7a11d4eb]
  4176ce:	adc    ebx,0xffffffda
  4176d1:	pop    ecx
  4176d2:	inc    ecx
  4176d3:	and    eax,0x9fb06711
  4176d8:	jl     0x4176a5
  4176da:	sbb    ah,BYTE PTR [ecx-0x23]
  4176dd:	jge    0x417711
  4176df:	int    0x9b
  4176e1:	inc    esp
  4176e2:	xor    bl,dh
  4176e4:	das    
  4176e5:	inc    edx
  4176e6:	adc    cl,BYTE PTR [eax]
  4176e8:	or     al,0xd8
  4176ea:	pop    eax
  4176eb:	jg     0x4176e9
  4176ed:	xchg   edi,eax
  4176ee:	inc    edx
  4176ef:	ret    0x4785
  4176f2:	out    dx,al
  4176f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176f4:	out    dx,eax
  4176f5:	call   0x8bf7:0x29ea371f
  4176fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176fd:	jmp    0x4e2b7539
  417702:	push   ecx
  417703:	dec    ebx
  417704:	lods   eax,DWORD PTR ds:[esi]
  417705:	sub    al,0x94
  417707:	lods   eax,DWORD PTR ds:[esi]
  417708:	add    DWORD PTR [esi-0x56ad4898],esi
  41770e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41770f:	in     al,0x3
  417711:	in     al,dx
  417712:	enter  0xbdf4,0xac
  417716:	adc    BYTE PTR [edi],ah
  417718:	sbb    BYTE PTR [eax+0x2],0xc3
  41771c:	cmp    DWORD PTR [ebx+eiz*1+0x76],0x3ed9e322
  417724:	sub    bl,BYTE PTR [esi-0x7a23178]
  41772a:	sbb    DWORD PTR [eax-0x11],eax
  41772d:	pop    eax
  41772e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41772f:	imul   esi,DWORD PTR [esi],0xfffffffd
  417732:	xor    edi,DWORD PTR [ecx+0x7a]
  417735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417736:	xor    eax,0xf55f5a19
  41773b:	lock xchg ebp,eax
  41773d:	pop    edi
  41773e:	add    ch,BYTE PTR [edi+0x1b]
  417741:	xlat   BYTE PTR ds:[ebx]
  417742:	mov    al,0x99
  417744:	and    eax,0x81c13f81
  417749:	or     ah,cl
  41774b:	cmp    al,0x42
  41774d:	cs jle 0x41777a
  417750:	sahf   
  417751:	cmc    
  417752:	(bad)  
  417753:	mov    ebp,0xc466c83f
  417758:	ja     0x4177b9
  41775a:	jmp    0x8055:0x28913668
  417761:	inc    esi
  417762:	outs   dx,DWORD PTR ds:[esi]
  417763:	es cdq 
  417765:	push   0xf271132b
  41776a:	lods   al,BYTE PTR ds:[esi]
  41776b:	mov    esi,DWORD PTR [eax-0x4127809a]
  417771:	clc    
  417772:	dec    eax
  417773:	cmp    al,0xb3
  417775:	cld    
  417776:	in     eax,0x16
  417778:	fcomp  st(3)
  41777a:	xlat   BYTE PTR ds:[ebx]
  41777b:	(bad)  
  41777c:	daa    
  41777d:	dec    eax
  41777e:	mov    gs,WORD PTR [eax]
  417780:	xlat   BYTE PTR ds:[ebx]
  417781:	add    BYTE PTR [ebp+0x6],ah
  417784:	call   DWORD PTR [ecx+0x1c]
  417787:	inc    edi
  417788:	out    0xed,al
  41778a:	test   BYTE PTR [edi],cl
  41778c:	fcom   DWORD PTR [ebx+0x70bda8ac]
  417792:	fs xchg edx,eax
  417794:	div    BYTE PTR [esi+ebp*4+0x44eb42e9]
  41779b:	pop    ecx
  41779c:	jmp    0xb7f98926
  4177a1:	scas   eax,DWORD PTR es:[edi]
  4177a2:	xor    al,0x5c
  4177a4:	push   edx
  4177a5:	mov    ecx,0x3393af58
  4177aa:	pop    ecx
  4177ab:	mov    esp,0xe1ae03e8
  4177b0:	lods   eax,DWORD PTR ds:[esi]
  4177b1:	adc    esi,ebx
  4177b3:	inc    esi
  4177b4:	(bad)  
  4177b5:	fnstsw WORD PTR [edx-0xb5e388d]
  4177bb:	sub    ch,al
  4177bd:	les    ebx,FWORD PTR [edi]
  4177bf:	fstp   DWORD PTR [ebx-0x5b665b5]
  4177c5:	lahf   
  4177c6:	inc    edx
  4177c7:	daa    
  4177c8:	into   
  4177c9:	jp     0x4177c8
  4177cb:	mov    edi,DWORD PTR [ecx+0x3]
  4177ce:	pop    eax
  4177cf:	xor    BYTE PTR [edi+0x20],al
  4177d2:	mov    ebp,0xc46c4fff
  4177d7:	sti    
  4177d8:	pop    ss
  4177d9:	pop    eax
  4177da:	arpl   WORD PTR [ecx],bx
  4177dc:	loopne 0x41779c
  4177de:	xchg   ecx,eax
  4177df:	adc    eax,0xa7f01807
  4177e4:	(bad)  
  4177e5:	test   eax,0x517ebaff
  4177ea:	mov    eax,ds:0x95142bb8
  4177ef:	fmul   DWORD PTR [ebx-0x19]
  4177f2:	sahf   
  4177f3:	cdq    
  4177f4:	es int3 
  4177f6:	daa    
  4177f7:	std    
  4177f8:	test   eax,0xdbe38f5a
  4177fd:	dec    edx
  4177fe:	mov    dl,0xc5
  417800:	inc    esp
  417801:	adc    esp,esp
  417803:	cmp    ah,BYTE PTR [ecx]
  417805:	dec    esi
  417806:	dec    edx
  417807:	cmp    bh,BYTE PTR [ebp+ecx*1-0x5edd6b63]
  41780e:	(bad)  
  41780f:	jl     0x417864
  417811:	jmp    edi
  417813:	daa    
  417814:	push   0xffffff8a
  417816:	ins    BYTE PTR es:[edi],dx
  417817:	out    0x4b,al
  417819:	push   edi
  41781a:	dec    esi
  41781b:	mov    esp,0x3a05d648
  417820:	shr    edx,cl
  417822:	dec    edi
  417823:	jb     0x4177db
  417825:	inc    ecx
  417826:	(bad)  
  417827:	(bad)  
  417828:	inc    edx
  417829:	or     eax,0x4d2e8eda
  41782e:	ret    
  41782f:	cmp    dl,ah
  417831:	sbb    BYTE PTR [edx+eiz*1],al
  417834:	jo     0x4177f3
  417836:	nop
  417837:	mov    cl,0x7
  417839:	aad    0x93
  41783b:	add    eax,0x8b34c674
  417840:	xchg   esp,eax
  417841:	out    dx,al
  417842:	pop    ebx
  417843:	(bad)  
  417845:	dec    ecx
  417846:	xchg   BYTE PTR [edi+0x63],bl
  417849:	sbb    edi,DWORD PTR [edi+eax*1+0x535c4512]
  417850:	mov    eax,ds:0x1fc11033
  417855:	pop    ecx
  417856:	push   ds
  417857:	imul   BYTE PTR [ebp+0x6df22f7]
  41785d:	out    dx,al
  41785e:	xor    eax,0x6b82742f
  417863:	sbb    DWORD PTR gs:[ebx],esp
  417866:	scas   al,BYTE PTR es:[di]
  417868:	retf   0x4064
  41786b:	in     eax,0x79
  41786d:	push   esp
  41786e:	shr    DWORD PTR [ecx],1
  417870:	sti    
  417871:	ins    BYTE PTR es:[edi],dx
  417872:	test   ah,bh
  417874:	sub    DWORD PTR [edx-0x50563752],edx
  41787a:	cdq    
  41787b:	fst    QWORD PTR ss:[ebx+0x4f]
  41787f:	scas   eax,DWORD PTR es:[edi]
  417880:	pushf  
  417881:	arpl   WORD PTR [edi+0x10],cx
  417884:	jg     0x4178e8
  417886:	ins    DWORD PTR es:[edi],dx
  417887:	loop   0x4178d5
  417889:	shr    DWORD PTR [esi-0x56549ad8],cl
  41788f:	out    0xaa,al
  417891:	pop    es
  417892:	dec    edi
  417893:	mov    ebx,0x9e62f8c8
  417898:	mov    esp,DWORD PTR [edi]
  41789a:	(bad)  
  41789b:	test   al,0x9c
  41789d:	cmp    DWORD PTR [edi],edi
  41789f:	add    DWORD PTR [eax+0x23],eax
  4178a2:	mov    dh,0xa7
  4178a4:	test   eax,0x68ea1afb
  4178a9:	ins    BYTE PTR es:[edi],dx
  4178aa:	cmp    dh,dl
  4178ac:	sub    ah,BYTE PTR [edx+0x7b]
  4178af:	adc    bh,BYTE PTR [ecx]
  4178b1:	xlat   BYTE PTR ds:[ebx]
  4178b2:	ror    BYTE PTR [eax-0x4b],0x48
  4178b6:	cmp    DWORD PTR [esi],0xffffffeb
  4178b9:	rol    esp,cl
  4178bb:	out    dx,al
  4178bc:	xchg   ebp,eax
  4178bd:	shl    DWORD PTR [esi],0x4
  4178c0:	push   edi
  4178c1:	retf   0x5b2f
  4178c4:	out    dx,al
  4178c5:	xor    cl,BYTE PTR [edx+0xc]
  4178c8:	jecxz  0x41790a
  4178ca:	xlat   BYTE PTR ds:[ebx]
  4178cb:	inc    ax
  4178cd:	adc    ebp,DWORD PTR [ecx+0x4e]
  4178d0:	jns    0x41786e
  4178d2:	push   ecx
  4178d3:	or     dl,bh
  4178d5:	in     al,dx
  4178d6:	xchg   esi,eax
  4178d7:	xchg   ebx,eax
  4178d8:	popa   
  4178d9:	in     al,0xa
  4178db:	inc    edx
  4178dc:	(bad)  
  4178dd:	fnsave [esi-0x38]
  4178e0:	sub    al,0x28
  4178e2:	xchg   esi,eax
  4178e3:	pop    ds
  4178e4:	sbb    ebx,DWORD PTR [ebp-0x2b]
  4178e7:	xor    ch,bl
  4178e9:	sbb    DWORD PTR [ebp+eiz*8-0x9],0xc32ed28e
  4178f1:	xchg   DWORD PTR [edx-0x79d1e5e7],ebp
  4178f7:	push   0xffffffce
  4178f9:	fs icebp 
  4178fb:	fsubr  DWORD PTR [esi+eax*1]
  4178fe:	mov    bh,ch
  417900:	cmp    ebx,ebx
  417902:	dec    ebx
  417903:	sub    esp,DWORD PTR [ecx]
  417905:	inc    edi
  417906:	mov    bh,0xd6
  417908:	jle    0x4178b9
  41790a:	lds    ebp,FWORD PTR [ebx+0x185ddc6d]
  417910:	xor    DWORD PTR [ebx],ecx
  417912:	jo     0x417900
  417914:	cdq    
  417915:	mov    dl,0x75
  417917:	inc    edi
  417918:	fwait
  417919:	hlt    
  41791a:	std    
  41791b:	jg     0x417948
  41791d:	xor    cl,ch
  41791f:	gs pushw 0x5f
  417923:	imul   esi,DWORD PTR [eax-0x24c7c717],0x9b820d92
  41792d:	xor    edi,DWORD PTR [ecx-0x6680c5f3]
  417933:	sbb    edi,DWORD PTR [ebp-0x2d2d8b14]
  417939:	mov    DWORD PTR [ebx],0xd3899dd4
  41793f:	repz xchg edx,eax
  417941:	xlat   BYTE PTR cs:[ebx]
  417943:	ret    
  417944:	jne    0x4178d2
  417946:	cmp    DWORD PTR [eax+0x3f],0x64376d24
  41794d:	sahf   
  41794e:	(bad)  
  41794f:	adc    eax,esp
  417951:	dec    edi
  417952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417953:	les    esi,FWORD PTR [ebp+0x23554dcb]
  417959:	fwait
  41795a:	dec    ecx
  41795b:	xor    DWORD PTR [edx-0x1a9ad9a4],ecx
  417961:	popa   
  417962:	fisttp DWORD PTR ds:0x6c106c70
  417968:	inc    esp
  417969:	add    eax,ebx
  41796b:	repnz stos BYTE PTR es:[edi],al
  41796d:	int    0xe3
  41796f:	sbb    BYTE PTR [edx-0x3f],dh
  417972:	sub    DWORD PTR [edx+0x22d6861e],eax
  417978:	shl    bl,1
  41797a:	fs dec eax
  41797c:	jo     0x41795f
  41797e:	outs   dx,BYTE PTR ds:[esi]
  41797f:	fwait
  417980:	pop    ds
  417981:	mov    ds:0x2f3085b4,eax
  417986:	es scas al,BYTE PTR es:[edi]
  417988:	cmp    ah,dh
  41798a:	test   DWORD PTR [eax],esi
  41798c:	push   edx
  41798d:	scas   eax,DWORD PTR es:[edi]
  41798e:	fld    QWORD PTR [esi-0x78]
  417991:	(bad)
  417994:	pushf  
  417995:	cmp    bh,BYTE PTR [esi]
  417997:	dec    edi
  417998:	mov    edi,DWORD PTR [esi-0x17]
  41799b:	ss cwde 
  41799d:	lahf   
  41799e:	xor    DWORD PTR [ebx-0x6e],esp
  4179a1:	jp     0x417a19
  4179a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179a4:	fcmove st,st(1)
  4179a6:	ins    BYTE PTR es:[edi],dx
  4179a7:	lods   al,BYTE PTR ds:[esi]
  4179a8:	jmp    0x14545389
  4179ad:	jge    0x4179e5
  4179af:	retf   
  4179b0:	cli    
  4179b1:	mov    ds:0x6c5e8be1,al
  4179b6:	ret    
  4179b7:	pop    edx
  4179b8:	xor    edx,DWORD PTR [edx+0x1869d5ad]
  4179be:	pop    esi
  4179bf:	push   DWORD PTR [esi-0x717910af]
  4179c5:	dec    eax
  4179c6:	rol    BYTE PTR [edx+0x53],0x82
  4179ca:	gs xor eax,0xc2be9f1f
  4179d0:	popf   
  4179d1:	js     0x417982
  4179d3:	out    dx,eax
  4179d4:	and    DWORD PTR [esi-0x1ff666be],eax
  4179da:	xor    al,BYTE PTR [edi]
  4179dc:	sub    DWORD PTR [ecx],esp
  4179de:	(bad)  
  4179df:	pop    ecx
  4179e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179e1:	stc    
  4179e2:	(bad)  
  4179e3:	mov    ds:0xc75010ee,al
  4179e8:	retf   
  4179e9:	lods   al,BYTE PTR ds:[esi]
  4179ea:	xlat   BYTE PTR ds:[ebx]
  4179eb:	jbe    0x417a06
  4179ed:	outs   dx,DWORD PTR ds:[esi]
  4179ee:	nop
  4179ef:	int    0x12
  4179f1:	pop    ecx
  4179f2:	test   eax,0xad252d39
  4179f7:	loop   0x417a66
  4179f9:	cmp    BYTE PTR [ebx+0x15],dh
  4179fc:	in     al,dx
  4179fd:	mov    ds:0x9b91dcf0,al
  417a02:	adc    DWORD PTR [ebx-0x649deeb6],ecx
  417a08:	adc    esp,DWORD PTR [bp+di-0x4d19]
  417a0d:	pop    ecx
  417a0e:	in     eax,0x89
  417a10:	cli    
  417a11:	pminsw mm3,QWORD PTR [esp+ebp*8]
  417a15:	pop    edi
  417a16:	mov    al,0x37
  417a18:	mov    eax,ds:0xaccd6228
  417a1d:	mov    al,ds:0xb82ffd71
  417a22:	das    
  417a23:	or     al,BYTE PTR [edi]
  417a25:	jmp    0xe1b7ff9d
  417a2a:	inc    edi
  417a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a2c:	jle    0x417a5f
  417a2e:	mov    ebp,0xccb62bcf
  417a33:	push   edx
  417a34:	mov    bh,0xaf
  417a36:	and    esp,DWORD PTR [eax+0x50]
  417a39:	push   ebx
  417a3a:	push   esp
  417a3b:	pop    ds
  417a3c:	pop    edx
  417a3d:	add    eax,0xb9cfdfc
  417a42:	sahf   
  417a43:	adc    BYTE PTR [edi-0x28724c9a],dl
  417a49:	sub    esi,edx
  417a4b:	les    eax,FWORD PTR [esi-0x4e]
  417a4e:	sti    
  417a4f:	clc    
  417a50:	test   BYTE PTR [edi],al
  417a52:	fscale 
  417a54:	test   BYTE PTR [edi-0x7bf3475b],cl
  417a5a:	jnp    0x4179ea
  417a5c:	inc    edx
  417a5d:	push   eax
  417a5e:	hlt    
  417a5f:	sbb    eax,0x70933aa4
  417a64:	in     al,0x94
  417a66:	and    esp,DWORD PTR [ecx-0x4]
  417a69:	push   ss
  417a6a:	mov    dl,0xfc
  417a6c:	leave  
  417a6d:	ror    BYTE PTR [eax+0xd],1
  417a70:	cmp    eax,0x7fee54ac
  417a75:	add    DWORD PTR [esp+esi*8-0x6e],edi
  417a79:	push   ss
  417a7a:	sbb    dh,al
  417a7c:	inc    ebx
  417a7d:	ret    0xbb6e
  417a80:	sbb    DWORD PTR cs:[esi],eax
  417a83:	dec    ebx
  417a84:	mov    eax,0x2981dfb1
  417a89:	test   ah,ch
  417a8b:	ret    
  417a8c:	sahf   
  417a8d:	cmp    esi,DWORD PTR [si-0x7ee5]
  417a92:	or     ebp,DWORD PTR [eax]
  417a94:	cmp    eax,0xf90b153e
  417a99:	sbb    eax,0xe55040f
  417a9e:	xchg   ebx,eax
  417a9f:	pop    edi
  417aa0:	xchg   esi,eax
  417aa1:	cmp    eax,0x17522ec6
  417aa6:	cwde   
  417aa7:	outs   dx,DWORD PTR ds:[esi]
  417aa8:	retf   
  417aa9:	cmp    al,0x83
  417aab:	imul   esp,DWORD PTR [esi-0x45e0c09b],0xd9b5188d
  417ab5:	call   0x5ad4a8dc
  417aba:	ss push ecx
  417abc:	retf   0x314
  417abf:	(bad)  
  417ac0:	and    ebx,edx
  417ac2:	add    ecx,DWORD PTR [esi+0x6d]
  417ac5:	xchg   ebx,eax
  417ac6:	jb     0x417abe
  417ac8:	mov    esp,0x8fda11c8
  417acd:	jo     0x417a99
  417acf:	jnp    0x417a90
  417ad1:	int    0x71
  417ad3:	cmc    
  417ad4:	(bad)  
  417ad5:	or     al,0xcb
  417ad7:	pop    ebx
  417ad8:	and    bl,BYTE PTR [esi+ebx*4]
  417adb:	push   esi
  417adc:	(bad)  
  417add:	jb     0x417a9d
  417adf:	sbb    al,0x40
  417ae1:	cdq    
  417ae2:	push   ds
  417ae3:	and    al,0x94
  417ae5:	sbb    ebp,DWORD PTR [edi+ecx*1+0x2e]
  417ae9:	sti    
  417aea:	fcomp  QWORD PTR ds:0xbdf52157
  417af0:	sbb    ah,ah
  417af2:	or     edi,DWORD PTR [edx+0x56]
  417af5:	add    cl,BYTE PTR [edi+0x7b]
  417af8:	sub    eax,0x5ba02d88
  417afd:	jmp    0x417a83
  417aff:	xchg   cx,ax
  417b01:	in     al,0xda
  417b03:	into   
  417b04:	xor    DWORD PTR [edi+0x2c7ce515],0x9598b6e1
  417b0e:	das    
  417b0f:	fisttp DWORD PTR [esi+0x24]
  417b12:	rcl    eax,cl
  417b14:	leave  
  417b15:	mov    ah,0x99
  417b17:	pop    ds
  417b18:	xchg   edi,eax
  417b19:	mov    edi,0x84dce0c4
  417b1e:	xchg   edi,eax
  417b1f:	sar    BYTE PTR [edx-0x25ae282a],1
  417b25:	jne    0x417b3c
  417b27:	lods   al,BYTE PTR ds:[esi]
  417b28:	in     al,0x64
  417b2a:	dec    edx
  417b2b:	loop   0x417b78
  417b2d:	mov    ds:0x14bd4979,eax
  417b32:	mov    WORD PTR [ecx-0x28e1fd1f],ds
  417b38:	or     eax,0x5fc428d5
  417b3d:	push   ebx
  417b3e:	mov    eax,0x3d0fb0bb
  417b43:	mov    edx,0x2dbb33d3
  417b48:	jae    0x417b3e
  417b4a:	ss scas eax,DWORD PTR es:[edi]
  417b4c:	dec    esp
  417b4d:	jmp    0x7c923719
  417b52:	clc    
  417b53:	xor    DWORD PTR [edx+0x163da929],edx
  417b59:	mov    bh,0x7
  417b5b:	retf   0x8a25
  417b5e:	add    DWORD PTR [ebp-0x7b81f42a],eax
  417b64:	pusha  
  417b65:	mov    ds:0x8d8bb2ff,al
  417b6a:	inc    eax
  417b6b:	inc    DWORD PTR [eax*8+0x1662c714]
  417b72:	call   0x4278:0x2c882ff9
  417b79:	jae    0x417b77
  417b7b:	pop    eax
  417b7c:	test   eax,0x922659d
  417b81:	ds in  al,0x4
  417b84:	jae    0x417b1b
  417b86:	js     0x417bc7
  417b88:	or     DWORD PTR [ecx],edx
  417b8a:	or     al,0xa9
  417b8c:	lahf   
  417b8d:	imul   ecx,DWORD PTR [eax],0x9e4ddad2
  417b93:	mov    edx,0x7ae76588
  417b98:	dec    ecx
  417b99:	xchg   esp,eax
  417b9a:	pop    edx
  417b9b:	push   0xa46cccd6
  417ba0:	add    ah,BYTE PTR [eax+0x1d]
  417ba3:	xor    ebp,DWORD PTR [eax-0x7c9af33d]
  417ba9:	jbe    0x417b31
  417bab:	inc    esi
  417bac:	pop    esi
  417bad:	sbb    al,0x33
  417baf:	sub    al,0x7b
  417bb1:	pop    edi
  417bb2:	lahf   
  417bb3:	test   DWORD PTR [edi-0x6],edi
  417bb6:	mov    WORD PTR [edx+esi*4-0x72],cs
  417bba:	rol    DWORD PTR [edi],0x5b
  417bbd:	mov    ecx,0xc730f1e8
  417bc2:	and    BYTE PTR [edi+0x7a],cl
  417bc5:	lds    ebp,FWORD PTR ds:0xb65a0ca9
  417bcb:	sub    esp,DWORD PTR [eax+0x41]
  417bce:	add    al,0x4f
  417bd0:	sbb    eax,0x654a891c
  417bd5:	imul   ecx,DWORD PTR [eax],0x54
  417bd8:	sti    
  417bd9:	retf   0x9d9b
  417bdc:	loop   0x417ba5
  417bde:	add    eax,ecx
  417be0:	or     eax,0xe365daca
  417be5:	outs   dx,DWORD PTR ds:[esi]
  417be6:	fimul  WORD PTR [eax+0x78bda878]
  417bec:	push   ebx
  417bed:	cmp    BYTE PTR [esi-0x5c7db5f4],al
  417bf3:	inc    ebx
  417bf4:	xchg   ebp,eax
  417bf5:	in     al,0x9f
  417bf7:	add    eax,0x45567bcf
  417bfc:	jecxz  0x417c2f
  417bfe:	jo     0x417c45
  417c00:	pop    ebx
  417c01:	pop    edx
  417c02:	outs   dx,BYTE PTR ds:[esi]
  417c03:	mov    ds:0xecfb12c0,al
  417c08:	fldcw  WORD PTR [edi]
  417c0a:	clc    
  417c0b:	xchg   ebx,eax
  417c0c:	fcomp  QWORD PTR [ebx+0x33129f21]
  417c12:	gs jns 0x417c84
  417c15:	ret    0x403b
  417c18:	jae    0x417c67
  417c1a:	ja     0x417c1d
  417c1c:	xchg   esi,eax
  417c1d:	cmp    dl,BYTE PTR [edx+0x2c79dcca]
  417c23:	mov    ebx,0xcc3759b4
  417c28:	cdq    
  417c29:	mov    al,ds:0x4c4b7c7d
  417c2e:	test   WORD PTR [eax],di
  417c31:	sub    BYTE PTR ds:0x185ff920,bl
  417c37:	stc    
  417c38:	mov    eax,0x16776dfb
  417c3d:	mov    ebx,0xded8f190
  417c42:	inc    esi
  417c43:	gs out dx,al
  417c45:	in     eax,0x0
  417c47:	push   ss
  417c48:	pop    ss
  417c49:	out    dx,al
  417c4a:	add    ah,dl
  417c4c:	ds mov edi,0xc45528b1
  417c52:	dec    eax
  417c53:	and    ecx,ecx
  417c55:	mov    ecx,0xcc9a7731
  417c5a:	jmp    0x417c27
  417c5c:	ret    0x38a0
  417c5f:	hlt    
  417c60:	jmp    0x6fba:0xce32c0fc
  417c67:	xlat   BYTE PTR ds:[ebx]
  417c68:	fdivr  DWORD PTR [esi+ecx*4]
  417c6b:	fwait
  417c6c:	add    al,0xab
  417c6e:	sbb    ebp,edx
  417c70:	add    al,0x3e
  417c72:	adc    al,0x55
  417c74:	xchg   ebx,eax
  417c75:	addr16 cwde 
  417c77:	mov    ebx,0xaebfee81
  417c7c:	sbb    eax,0xbfcc0eb4
  417c81:	lock imul edi,DWORD PTR [ecx+ecx*1-0x2d],0xa4541ad5
  417c8a:	loop   0x417c69
  417c8c:	add    BYTE PTR [edi],dl
  417c8e:	push   ebp
  417c8f:	lock jns 0x417cb9
  417c92:	outs   dx,DWORD PTR ds:[esi]
  417c93:	aas    
  417c94:	xor    al,0x6a
  417c96:	rcl    ah,1
  417c98:	adc    BYTE PTR ss:[edx-0x9887da8],dl
  417c9f:	push   edx
  417ca0:	pop    ebx
  417ca1:	xor    DWORD PTR [ebx+0x51],ebp
  417ca4:	cmp    dl,dh
  417ca6:	xor    DWORD PTR ds:0x5b91808f,ebp
  417cac:	pop    edi
  417cad:	xchg   DWORD PTR es:[edx-0x491a743],ebp
  417cb4:	sub    al,0x28
  417cb6:	inc    ebp
  417cb7:	push   edx
  417cb8:	(bad)  
  417cb9:	pop    ss
  417cba:	imul   eax,edi,0x6f
  417cbd:	imul   edx,esi,0xa54cdf4b
  417cc3:	mov    ecx,0x31ddf7
  417cc8:	jae    0x417d17
  417cca:	test   dl,ah
  417ccc:	inc    esp
  417ccd:	call   0x7c104bc5
  417cd2:	jmp    DWORD PTR [edi+0x1a]
  417cd5:	and    BYTE PTR [esi],0x78
  417cd8:	loope  0x417d4b
  417cda:	(bad)  
  417cdb:	rcr    DWORD PTR [ebp-0x7591c2b1],0x8c
  417ce2:	inc    eax
  417ce3:	xor    DWORD PTR [ecx+eiz*8-0x4],esp
  417ce7:	mov    ch,BYTE PTR [edx+eiz*8-0x7556870e]
  417cee:	cmp    DWORD PTR [edx],edi
  417cf0:	mov    ch,BYTE PTR [edx-0x3d5c9979]
  417cf6:	repnz dec eax
  417cf8:	popf   
  417cf9:	ds mov ch,0xab
  417cfc:	xor    al,BYTE PTR [eax]
  417cfe:	sub    eax,0xdc13566c
  417d03:	retf   
  417d04:	cs int 0xfd
  417d07:	(bad)  
  417d08:	and    DWORD PTR [eax-0x73eec84e],esi
  417d0e:	les    ebx,FWORD PTR [edx+0x4]
  417d11:	sbb    al,0x74
  417d13:	dec    esp
  417d14:	jle    0x417d95
  417d16:	jb     0x417d20
  417d18:	jmp    0x503e:0x6015feb4
  417d1f:	dec    esi
  417d20:	sub    al,0xa9
  417d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d23:	push   esp
  417d24:	adc    DWORD PTR ds:0x6998444b,edi
  417d2a:	ror    BYTE PTR [ebp-0x5a],1
  417d2d:	mov    ah,0xba
  417d2f:	enter  0x5e2f,0x8a
  417d33:	loope  0x417d66
  417d35:	cmp    DWORD PTR [edi+0x69bd0425],eax
  417d3b:	add    esp,0x15
  417d3e:	outs   dx,DWORD PTR ds:[esi]
  417d3f:	sub    BYTE PTR [esi-0x29c5be2],dh
  417d45:	push   es
  417d46:	push   DWORD PTR [ecx+0x35cf55dc]
  417d4c:	and    BYTE PTR [ecx],0xf0
  417d4f:	ins    DWORD PTR es:[edi],dx
  417d50:	aad    0x5a
  417d52:	shr    DWORD PTR [esi+eiz*4-0x62],cl
  417d56:	dec    eax
  417d57:	test   BYTE PTR [esi+ebp*4+0x8],0x18
  417d5c:	or     bl,BYTE PTR [eax]
  417d5e:	loope  0x417d12
  417d60:	sub    al,0xd
  417d62:	jbe    0x417dc3
  417d64:	mov    al,0x7e
  417d66:	ret    
  417d67:	xor    DWORD PTR [ebp-0x1c9faef8],esp
  417d6d:	cld    
  417d6e:	call   0x3226d5b0
  417d73:	pop    ebp
  417d74:	dec    edx
  417d75:	adc    dl,BYTE PTR [ebx+0x55d3a10b]
  417d7b:	add    al,0x61
  417d7d:	cli    
  417d7e:	jge    0x417daa
  417d80:	mov    eax,0xfa628cee
  417d85:	xchg   esp,eax
  417d86:	or     eax,0x27b1fe59
  417d8b:	pop    ebx
  417d8c:	cmc    
  417d8d:	fdivr  QWORD PTR [ebx-0x44]
  417d90:	jbe    0x417d59
  417d92:	pop    ss
  417d93:	push   esi
  417d94:	jbe    0x417d3c
  417d96:	sub    al,0x9a
  417d98:	and    dh,BYTE PTR [ecx+0x25]
  417d9b:	(bad)  
  417d9d:	and    BYTE PTR [edx-0x55d3f98b],cl
  417da3:	mov    ch,0x41
  417da5:	ds mov cs,esi
  417da8:	and    BYTE PTR [esi],cl
  417daa:	ret    0x8277
  417dad:	fcom   QWORD PTR [edx+0x10]
  417db0:	dec    eax
  417db1:	jmp    0xa06c:0xeda70f48
  417db8:	add    al,0x35
  417dba:	sbb    bl,dl
  417dbc:	pop    ebp
  417dbd:	dec    edi
  417dbe:	mov    ah,0xe7
  417dc0:	pop    ds
  417dc1:	mov    esp,DWORD PTR [ebx+eiz*2+0x25]
  417dc5:	dec    edx
  417dc6:	(bad)  [esi+eiz*2+0x79]
  417dca:	das    
  417dcb:	ror    cl,0x8b
  417dce:	idiv   BYTE PTR [ecx-0x34]
  417dd1:	repnz mov ds:0x30ba9af3,eax
  417dd7:	mov    ebp,0x3117ec56
  417ddc:	jle    0x417db9
  417dde:	cld    
  417ddf:	xor    eax,0x350a99b7
  417de4:	mov    ecx,0xbd0464c
  417de9:	sbb    BYTE PTR [eax-0x7],ah
  417dec:	mov    bl,0x5a
  417dee:	out    dx,eax
  417def:	(bad)  
  417df0:	shl    DWORD PTR [eax-0x1ced8302],cl
  417df6:	jae    0x417da4
  417df8:	jle    0x417d7e
  417dfa:	inc    esi
  417dfb:	mov    cl,0x5c
  417dfd:	add    eax,0x1931060f
  417e02:	outs   dx,BYTE PTR ds:[esi]
  417e03:	mov    bh,BYTE PTR [eax+0x6717fa51]
  417e09:	jmp    0x3678:0xec48ac3c
  417e10:	dec    BYTE PTR [edx]
  417e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e13:	push   ecx
  417e14:	mov    bh,0x4c
  417e16:	xchg   BYTE PTR [ecx-0x46ad304b],dl
  417e1c:	jns    0x417e21
  417e1e:	xor    DWORD PTR [esi+0x0],esp
  417e21:	add    dh,ch
  417e23:	pop    edi
  417e24:	jmp    0x417daa
  417e26:	and    ecx,DWORD PTR [edi+eiz*8-0x396b71a1]
  417e2d:	fadd   QWORD PTR [esi+0x3e9c0aee]
  417e33:	mov    eax,0x9394b45b
  417e38:	jb     0x417e3a
  417e3a:	out    0xc1,eax
  417e3c:	lods   eax,DWORD PTR ds:[esi]
  417e3d:	(bad)  
  417e3e:	mov    dl,0xc3
  417e40:	nop
  417e41:	in     eax,dx
  417e42:	sub    eax,0xf3fa8c85
  417e47:	xor    esp,edi
  417e49:	inc    eax
  417e4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e4b:	in     al,dx
  417e4c:	out    dx,al
  417e4d:	mov    cl,0xf7
  417e4f:	push   es
  417e50:	fs popa 
  417e52:	inc    ebx
  417e53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e54:	out    dx,eax
  417e55:	sar    DWORD PTR [ecx+ebp*4],1
  417e58:	(bad)  
  417e59:	dec    esi
  417e5a:	les    ebp,FWORD PTR [ebp-0x3d14d440]
  417e60:	xchg   ebx,eax
  417e61:	fld    QWORD PTR [esp+ebp*1]
  417e64:	loope  0x417ebe
  417e66:	in     eax,0x22
  417e68:	bnd je 0x417e0c
  417e6b:	xchg   esi,eax
  417e6c:	(bad)  
  417e6d:	xor    DWORD PTR [eax-0x511f7cd6],ebx
  417e73:	xlat   BYTE PTR ds:[ebx]
  417e74:	sahf   
  417e75:	sti    
  417e76:	push   edi
  417e77:	add    al,BYTE PTR [esi+esi*8]
  417e7a:	xchg   ebp,eax
  417e7b:	mov    al,ds:0x40aec5af
  417e80:	cmp    eax,0x83f0f7d0
  417e85:	mov    bh,BYTE PTR [ebx-0x79]
  417e88:	adc    BYTE PTR [ebp-0x42e12245],ch
  417e8e:	ret    
  417e8f:	jns    0x417ec9
  417e91:	out    dx,eax
  417e92:	aam    0x63
  417e94:	mov    ds:0x3a6018d9,eax
  417e99:	xlat   BYTE PTR ds:[ebx]
  417e9a:	call   0x1ed6354e
  417e9f:	es jne 0x417e86
  417ea2:	les    ecx,FWORD PTR [edi*2+0x770713f7]
  417ea9:	ins    DWORD PTR es:[edi],dx
  417eaa:	fbstp  TBYTE PTR [ebx]
  417eac:	out    0x68,al
  417eae:	nop
  417eaf:	adc    esi,DWORD PTR [ebx+0xc94d7c9]
  417eb5:	adc    al,0xd6
  417eb7:	mov    dl,0x38
  417eb9:	push   ecx
  417eba:	pop    ecx
  417ebb:	adc    BYTE PTR [eax],bh
  417ebd:	push   esi
  417ebf:	pop    ds
  417ec0:	lods   al,BYTE PTR ds:[esi]
  417ec1:	mov    ebx,0x9b545ac0
  417ec6:	ds push 0xffffff84
  417ec9:	xchg   edi,eax
  417eca:	add    eax,0xe12eb3aa
  417ecf:	pop    eax
  417ed0:	les    eax,FWORD PTR [ebx+0xd81c675]
  417ed6:	test   al,0xce
  417ed8:	mov    ah,0xcd
  417eda:	mov    bh,BYTE PTR [ebx-0x627a20cb]
  417ee0:	dec    esi
  417ee1:	cmp    ah,BYTE PTR [edx+0x68]
  417ee4:	adc    edx,DWORD PTR [esi-0x63]
  417ee7:	arpl   WORD PTR [esi-0x22cc4626],ax
  417eed:	sbb    esp,DWORD PTR [edx-0x6db65947]
  417ef3:	(bad)  
  417ef5:	mov    eax,ds:0xeb917a73
  417efa:	cmp    al,0x3a
  417efc:	das    
  417efd:	dec    esi
  417efe:	sub    esi,edi
  417f00:	fcmovnb st,st(4)
  417f02:	aad    0x74
  417f04:	int    0x53
  417f06:	std    
  417f07:	js     0x417f3a
  417f09:	inc    eax
  417f0a:	add    DWORD PTR [edi-0x15595609],0xe2291b9b
  417f14:	adc    eax,0x5ab68c29
  417f19:	xor    DWORD PTR [ebx+eax*2-0x537b6a19],eax
  417f20:	clc    
  417f21:	push   esp
  417f22:	cmp    eax,0xcfb6f1a4
  417f27:	mov    edi,0x34f564d5
  417f2c:	(bad)  
  417f2d:	xchg   edi,eax
  417f2e:	lods   al,BYTE PTR ds:[esi]
  417f2f:	call   FWORD PTR [bp+si-0x4c]
  417f33:	jl     0x417fb2
  417f35:	sub    eax,0x6852f3af
  417f3a:	(bad)  
  417f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f3c:	outs   dx,DWORD PTR gs:[esi]
  417f3e:	xor    al,0x42
  417f40:	pop    ds
  417f41:	push   ss
  417f42:	aaa    
  417f43:	push   ebx
  417f44:	loope  0x417f7f
  417f46:	inc    edi
  417f47:	in     al,dx
  417f48:	dec    esp
  417f49:	or     DWORD PTR [eax+ebp*4],ebx
  417f4c:	sar    BYTE PTR [esi],0x91
  417f4f:	ja     0x417f4e
  417f51:	les    ecx,FWORD PTR [eax-0x110ea43a]
  417f57:	bound  eax,QWORD PTR cs:[ebp+0x5d]
  417f5b:	xchg   ah,ah
  417f5d:	push   ebp
  417f5e:	std    
  417f5f:	mov    cl,0xd7
  417f61:	aad    0x48
  417f63:	repz call esi
  417f66:	or     al,0xf8
  417f68:	mov    esp,0xbcaf9aee
  417f6d:	cmc    
  417f6e:	out    dx,al
  417f6f:	ror    BYTE PTR [edi-0x2a802446],1
  417f75:	(bad)  
  417f76:	xchg   edi,eax
  417f77:	mov    bh,BYTE PTR ds:0x350a48aa
  417f7d:	out    0xa9,eax
  417f7f:	popa   
  417f80:	leave  
  417f81:	push   es
  417f82:	fnstcw WORD PTR [edi+0x3f]
  417f85:	aas    
  417f86:	sub    ah,BYTE PTR [esp+edi*8+0x1f]
  417f8a:	out    dx,eax
  417f8b:	sti    
  417f8c:	gs int3 
  417f8e:	jmp    0xe8e6:0x462bf37c
  417f95:	cld    
  417f96:	(bad)  
  417f97:	mov    edx,0x4acd04f2
  417f9c:	xor    eax,DWORD PTR [esi+edi*8+0x67]
  417fa0:	push   edi
  417fa1:	xor    ah,bh
  417fa3:	(bad)  
  417fa5:	jmp    0x8a2e:0x6259159f
  417fac:	add    BYTE PTR [esi],al
  417fae:	aas    
  417faf:	dec    eax
  417fb0:	fs into 
  417fb2:	aad    0x1c
  417fb4:	xor    DWORD PTR [ebx+ebx*8+0x55],0x5c
  417fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fba:	leave  
  417fbb:	sub    esi,DWORD PTR [ebx+0x778f0df]
  417fc1:	jns    0x417f82
  417fc3:	mov    BYTE PTR [eax+edi*2-0x44],0x9f
  417fc8:	cmp    eax,0x82c62415
  417fcd:	and    BYTE PTR [esi-0x33],dh
  417fd0:	sbb    dh,dl
  417fd2:	fsubr  QWORD PTR es:[edx-0x3fc2e907]
  417fd9:	(bad)  
  417fda:	mov    ebp,0x4baf355
  417fdf:	out    dx,al
  417fe0:	iret   
  417fe1:	mov    bl,0x56
  417fe3:	mov    edx,0xc925afbe
  417fe8:	mov    WORD PTR ds:0x8a2d34c9,es
  417fee:	iret   
  417fef:	adc    DWORD PTR [ecx],edx
  417ff1:	call   0x130586cd
  417ff6:	(bad)  
  417ff8:	xchg   ecx,eax
  417ff9:	rcr    cl,cl
  417ffb:	add    dl,al
  417ffd:	mov    ds:0x69f64168,eax
  418002:	cmp    dl,BYTE PTR [edx]
  418004:	mov    edi,0xd600fcbd
  418009:	adc    BYTE PTR ss:[edi-0x45],0x91
  41800e:	aaa    
  41800f:	mov    edx,0xec740646
  418014:	ja     0x417ff1
  418016:	cmc    
  418017:	dec    eax
  418018:	inc    eax
  418019:	aaa    
  41801a:	fidiv  DWORD PTR [ecx+eiz*1-0x54b2740]
  418021:	(bad)  
  418022:	ss enter 0x843,0xf8
  418027:	cwde   
  418028:	sub    cl,dl
  41802a:	(bad)  
  41802b:	push   edi
  41802c:	ror    BYTE PTR [edi-0x7bee1fe8],0xf6
  418033:	out    0x5c,eax
  418035:	or     al,0x5f
  418037:	sub    esp,ebp
  418039:	out    0x94,al
  41803b:	repz jae 0x417fc7
  41803e:	call   0x67f23690
  418043:	cmp    ah,BYTE PTR [esi-0x2d81afd]
  418049:	cli    
  41804a:	cmp    al,0x76
  41804c:	push   cs
  41804d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41804e:	test   BYTE PTR [esi],ah
  418050:	xor    BYTE PTR es:[eax+0x17],bh
  418054:	dec    ebx
  418055:	loope  0x4180a2
  418057:	mov    ds:0x794c40ab,eax
  41805c:	add    DWORD PTR [ebx-0x63],eax
  41805f:	push   0xed16670b
  418064:	repz neg BYTE PTR [edx]
  418067:	mov    al,ds:0xd826796f
  41806c:	loop   0x418079
  41806e:	ret    0x9f1
  418071:	jbe    0x418060
  418073:	mov    bh,0xcf
  418075:	ds call 0x6025d6c3
  41807b:	(bad)  
  41807c:	into   
  41807d:	cmp    BYTE PTR [ebx],bh
  41807f:	mov    eax,ds:0x61452b71
  418084:	dec    bl
  418086:	pop    ebx
  418087:	test   ebx,esi
  418089:	xchg   ebp,eax
  41808a:	or     BYTE PTR [esi],0x1c
  41808d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41808e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41808f:	xor    DWORD PTR [ebx+0x478e8fe],ebx
  418095:	fisub  WORD PTR [eax+ebp*2+0x29]
  418099:	ss pop ecx
  41809b:	sub    cl,0xeb
  41809e:	inc    esi
  41809f:	data16 sar BYTE PTR ds:0xab667662,cl
  4180a6:	ja     0x418032
  4180a8:	jmp    ebx
  4180aa:	xchg   edi,eax
  4180ab:	sub    ebp,DWORD PTR [ecx+ecx*8+0x2065a7b0]
  4180b2:	aad    0xa4
  4180b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180b5:	retf   0x8ba2
  4180b8:	mov    al,0x9a
  4180ba:	shr    BYTE PTR [ecx],0xb6
  4180bd:	xchg   edi,eax
  4180be:	mov    edi,0xb94a0162
  4180c3:	push   edx
  4180c4:	fadd   DWORD PTR [eax]
  4180c6:	loope  0x41807d
  4180c8:	push   ds
  4180c9:	sar    BYTE PTR [ebx+esi*8],0x5a
  4180cd:	into   
  4180ce:	out    0x6f,eax
  4180d0:	mov    ecx,DWORD PTR [ebx+0x7e]
  4180d3:	xchg   esi,eax
  4180d4:	jp     0x418147
  4180d6:	outs   dx,DWORD PTR ds:[esi]
  4180d7:	push   esi
  4180d8:	dec    esp
  4180d9:	data16 arpl WORD PTR [ebx-0x36],ax
  4180dd:	cmp    ecx,edx
  4180df:	push   0x5daab249
  4180e4:	fcmovbe st,st(6)
  4180e6:	cmp    al,0xe2
  4180e8:	call   0x42972348
  4180ed:	mov    esi,DWORD PTR [ecx+0x6d]
  4180f0:	dec    ebp
  4180f1:	jnp    0x4180b8
  4180f3:	in     al,0xf4
  4180f5:	sub    eax,0xd3d6fe8b
  4180fa:	adc    al,0x1a
  4180fc:	call   0xf4c0:0x82ca3f57
  418103:	mov    ds:0xd4d46d37,al
  418108:	fadd   st(2),st
  41810a:	into   
  41810b:	sbb    BYTE PTR [eax-0x75b57f24],0xae
  418112:	retf   
  418113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418114:	jbe    0x41818d
  418116:	jge    0x4180a5
  418118:	jae    0x4180d2
  41811a:	sub    esi,DWORD PTR [edi]
  41811c:	aaa    
  41811d:	div    BYTE PTR [edi]
  41811f:	retf   0xd2e9
  418122:	mov    ds:0x5d5e98c9,eax
  418127:	rcl    DWORD PTR [ecx+0x62906b4],1
  41812d:	pop    esp
  41812e:	(bad)
  418132:	into   
  418133:	pushf  
  418134:	cs adc al,0x9f
  418137:	mov    bh,0xd2
  418139:	fbld   TBYTE PTR [eax-0x7030d8cf]
  41813f:	lea    esp,[ecx+eiz*8]
  418142:	leave  
  418143:	mov    al,0x4d
  418145:	not    BYTE PTR [edx+0x3b]
  418148:	popa   
  418149:	jg     0x418108
  41814b:	call   0xb6fa:0xb6c79bf1
  418152:	mov    eax,0x6c50d9e2
  418157:	cs xchg ebp,eax
  418159:	mov    ecx,0xec01802e
  41815e:	mov    dl,0x10
  418160:	jg     0xa97a651e
  418166:	cld    
  418167:	ins    BYTE PTR es:[edi],dx
  418168:	call   0x8e30:0x919b9b0a
  41816f:	pop    esi
  418170:	ret    
  418171:	and    eax,0xfd6ea71d
  418176:	pop    eax
  418177:	push   ebp
  418178:	push   ebp
  418179:	push   ds
  41817a:	mov    ah,al
  41817c:	pop    edi
  41817d:	push   ds
  41817e:	lock pop edi
  418180:	or     eax,0xe3e0a93f
  418185:	jecxz  0x41818d
  418187:	outs   dx,DWORD PTR ds:[esi]
  418188:	inc    BYTE PTR [eax-0x53]
  41818b:	sub    DWORD PTR [esi+0x16],ebp
  41818e:	mov    bl,0x29
  418190:	scas   eax,DWORD PTR es:[edi]
  418191:	in     eax,0xd8
  418193:	xchg   ebx,eax
  418194:	sbb    eax,0x35638ac7
  418199:	imul   edx,ebp,0xffffffb3
  41819c:	shr    DWORD PTR [eax-0x40402a5d],1
  4181a2:	cwde   
  4181a3:	mov    dl,0x4b
  4181a5:	shl    DWORD PTR [edi-0x58432089],1
  4181ab:	pop    edx
  4181ac:	test   al,0x9b
  4181ae:	add    al,BYTE PTR [esi+edi*8+0x12629b5b]
  4181b5:	push   ds
  4181b6:	fisub  WORD PTR [ecx+0x72]
  4181b9:	mov    DWORD PTR [ebx-0x3ac6c0db],esp
  4181bf:	push   edx
  4181c0:	mov    al,0xd2
  4181c2:	push   edx
  4181c3:	mov    esi,0xd70360f0
  4181c8:	enter  0xb1b6,0x47
  4181cc:	jnp    0x41821d
  4181ce:	inc    edx
  4181cf:	aaa    
  4181d0:	stc    
  4181d1:	mov    edx,eax
  4181d3:	in     eax,dx
  4181d4:	pusha  
  4181d5:	push   ecx
  4181d6:	pushf  
  4181d7:	jo     0x4181eb
  4181d9:	pop    es
  4181da:	pop    ecx
  4181db:	(bad)  
  4181dc:	fmul   QWORD PTR [ecx+0x435727d]
  4181e2:	dec    esp
  4181e3:	ins    BYTE PTR es:[edi],dx
  4181e4:	out    dx,eax
  4181e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181e6:	ror    BYTE PTR [eax+0x579a82ac],cl
  4181ec:	lahf   
  4181ed:	fs call 0xf410:0xd7ac79d1
  4181f5:	in     eax,dx
  4181f6:	aas    
  4181f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181f8:	or     DWORD PTR [eax],0xa58f41df
  4181fe:	sbb    eax,0xb8a83040
  418203:	das    
  418204:	xor    esi,ebx
  418206:	mov    ebp,0x7724699d
  41820b:	pop    edx
  41820c:	sbb    eax,DWORD PTR [eax]
  41820e:	add    eax,0xc587a95d
  418213:	push   esi
  418214:	xor    eax,DWORD PTR [ecx-0xe6b4af]
  41821a:	cmp    edi,DWORD PTR [ecx+0xb40f487]
  418220:	jge    0x4181b0
  418222:	sub    BYTE PTR [esi+0x20],dl
  418225:	sti    
  418226:	in     eax,0xd4
  418228:	pop    esp
  418229:	or     al,0xa0
  41822b:	shl    BYTE PTR [ebx-0x1d554a71],cl
  418231:	xor    eax,0x554568c8
  418236:	inc    edi
  418237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418238:	jo     0x41828c
  41823a:	jae    0x418215
  41823c:	rol    BYTE PTR [edx+0x46f63d0e],cl
  418242:	addr16 or ch,dh
  418245:	xchg   esi,eax
  418246:	pop    esp
  418247:	jae    0x418214
  418249:	cmp    al,0x65
  41824b:	loope  0x418209
  41824d:	pushf  
  41824e:	in     al,dx
  41824f:	mov    edx,0x95591188
  418254:	inc    edi
  418255:	pop    esi
  418256:	and    BYTE PTR [esi-0x50e68ecc],0x36
  41825d:	out    0x8b,al
  41825f:	or     ah,BYTE PTR [esi+edi*2]
  418262:	mov    ch,0x97
  418264:	inc    ecx
  418265:	stos   DWORD PTR es:[edi],eax
  418266:	ret    0x8234
  418269:	sti    
  41826a:	dec    ebx
  41826b:	lods   eax,DWORD PTR ds:[esi]
  41826c:	iret   
  41826d:	arpl   WORD PTR [edx+0x64e375f4],di
  418273:	aas    
  418274:	pushf  
  418275:	(bad)  
  418276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418277:	adc    ebx,esi
  418279:	int    0xd4
  41827b:	lahf   
  41827c:	js     0x4182e1
  41827e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41827f:	pop    edi
  418280:	jle    0x41824e
  418282:	int    0x5a
  418284:	and    eax,0x4157a527
  418289:	mov    ecx,0xf979b296
  41828e:	pop    esi
  41828f:	int3   
  418290:	inc    ebp
  418291:	stos   DWORD PTR es:[edi],eax
  418292:	(bad)  
  418293:	iret   
  418294:	lock hlt 
  418296:	cmp    al,0xff
  418298:	push   cs
  418299:	loopne 0x418288
  41829b:	pshufw mm7,mm1,0x6c
  41829f:	push   eax
  4182a0:	mov    ecx,0x7f3f15e2
  4182a5:	loop   0x41830b
  4182a7:	aam    0x28
  4182a9:	aam    0xd9
  4182ab:	mov    ss,esp
  4182ad:	jne    0x41823b
  4182af:	jne    0x41829e
  4182b1:	lods   al,BYTE PTR ds:[esi]
  4182b2:	arpl   si,si
  4182b4:	or     DWORD PTR [eax],0x304a1fd2
  4182ba:	mov    eax,ds:0xa660709
  4182bf:	jecxz  0x418273
  4182c1:	int3   
  4182c2:	jecxz  0x41830e
  4182c4:	loope  0x41827e
  4182c6:	jns    0x418275
  4182c8:	jge    0x41828d
  4182ca:	jo     0x4182df
  4182cc:	cli    
  4182cd:	or     BYTE PTR [esi-0x71e89317],0x1d
  4182d4:	test   eax,0x782888e2
  4182d9:	imul   BYTE PTR [ebp+0x5709881]
  4182df:	int3   
  4182e0:	and    eax,0xd63d39c3
  4182e5:	or     al,0xed
  4182e7:	jp     0x4182a4
  4182e9:	mov    bh,ch
  4182eb:	jne    0x418338
  4182ed:	outs   dx,DWORD PTR ds:[esi]
  4182ee:	pop    edi
  4182ef:	shr    DWORD PTR [ecx+ecx*1],0xfb
  4182f3:	bound  esi,QWORD PTR [edx-0x49a5eed5]
  4182f9:	sub    esp,DWORD PTR [edx-0x6c26aa2c]
  4182ff:	hlt    
  418300:	mov    WORD PTR [esi],?
  418302:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  418304:	sahf   
  418305:	push   esp
  418306:	mov    eax,0xf30519ba
  41830b:	mov    al,ds:0x18ff4f74
  418310:	add    al,0x70
  418312:	pop    esi
  418313:	mov    ds:0x6ea5f754,al
  418318:	ds aaa 
  41831a:	push   ss
  41831b:	mov    ch,0x4a
  41831d:	jecxz  0x41833c
  41831f:	fidivr DWORD PTR [edx+0x571c2957]
  418325:	xchg   ebx,eax
  418326:	sub    BYTE PTR [ebp-0x7b189e98],cl
  41832c:	ja     0x41836f
  41832e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41832f:	pop    ebp
  418330:	mov    ebp,0x273b2b4
  418335:	out    dx,al
  418336:	dec    ebx
  418337:	pop    edx
  418338:	fsubr  QWORD PTR [ecx+edi*2]
  41833b:	dec    eax
  41833c:	into   
  41833d:	test   al,0x12
  41833f:	inc    esi
  418340:	lea    ebx,[ebx+0x6a01a1e]
  418346:	ins    DWORD PTR es:[edi],dx
  418347:	mov    WORD PTR [edx+0x61],?
  41834a:	mov    edx,esp
  41834c:	div    DWORD PTR ds:[ebp-0x3390df84]
  418353:	push   es
  418354:	fstp   st(5)
  418356:	sub    BYTE PTR [edi+0xa],dh
  418359:	mov    bh,BYTE PTR [edi+0x7a]
  41835c:	fsubr  QWORD PTR [ebx+eax*4]
  41835f:	add    al,0x27
  418361:	rcr    DWORD PTR ds:0xb33b154,1
  418367:	and    edi,DWORD PTR [esi+esi*1+0x4a]
  41836b:	xchg   esi,ebx
  41836d:	xor    BYTE PTR [ecx-0x3b908ad3],0xfa
  418374:	iret   
  418375:	jb     0x418382
  418377:	mov    bh,0xd5
  418379:	lds    eax,FWORD PTR [edi+0x724d9cb]
  41837f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418380:	lock jbe 0x418377
  418383:	retf   0x6e81
  418386:	stos   BYTE PTR es:[edi],al
  418387:	push   edx
  418388:	addr16 retf 0x332a
  41838c:	mov    dh,0x8b
  41838e:	mov    edi,0x49a786b
  418393:	dec    esp
  418394:	xchg   BYTE PTR [ebp+ebp*8-0x3cd0440],ch
  41839b:	scas   al,BYTE PTR es:[edi]
  41839c:	mov    WORD PTR [ebx],es
  41839e:	push   ss
  41839f:	in     al,dx
  4183a0:	xchg   ebp,eax
  4183a1:	cmp    bl,BYTE PTR [ebx-0x7dcb1225]
  4183a7:	or     DWORD PTR [edx-0x25],eax
  4183aa:	add    ecx,ebp
  4183ac:	cmp    DWORD PTR [edx],eax
  4183ae:	lock mov edx,0xa5a51beb
  4183b4:	mov    ds:0x3f26f2f2,al
  4183b9:	lahf   
  4183ba:	outs   dx,DWORD PTR ds:[esi]
  4183bb:	(bad)  
  4183bc:	dec    ebx
  4183bd:	retf   
  4183be:	add    bl,dl
  4183c0:	mov    ds:0x2c43d457,eax
  4183c5:	push   cs
  4183c6:	ins    BYTE PTR es:[edi],dx
  4183c7:	arpl   WORD PTR ds:0x9a2837d7,dx
  4183cd:	loope  0x4183c1
  4183cf:	loope  0x41843d
  4183d1:	or     ebx,ebp
  4183d3:	mov    DWORD PTR [edi-0x213f2ea4],ecx
  4183d9:	ins    BYTE PTR es:[edi],dx
  4183da:	xor    DWORD PTR [eax],ecx
  4183dc:	gs repnz adc ebp,edi
  4183e0:	stc    
  4183e1:	and    ebx,0x9
  4183e4:	lods   eax,DWORD PTR ds:[esi]
  4183e5:	out    0x62,al
  4183e7:	inc    edx
  4183e8:	and    al,0xbb
  4183ea:	xchg   edx,eax
  4183eb:	mov    DWORD PTR [ebx+edi*8-0x51e08ad1],edx
  4183f2:	mov    ebp,0x6fafcc11
  4183f7:	lds    ebp,FWORD PTR [edx]
  4183f9:	ins    BYTE PTR es:[edi],dx
  4183fa:	and    al,0x42
  4183fc:	(bad)  [edi-0x61]
  4183ff:	rol    BYTE PTR [ecx],cl
  418401:	or     BYTE PTR [esp+esi*2+0x46],dh
  418405:	arpl   WORD PTR [ecx-0x45e4af7],si
  41840b:	pop    ecx
  41840c:	cli    
  41840d:	cmc    
  41840e:	cmp    ebx,DWORD PTR [esi-0x42]
  418411:	aam    0xed
  418413:	(bad)  
  418415:	mov    ah,0x51
  418417:	sub    BYTE PTR [edi+0x5c],al
  41841a:	fucomp st(0)
  41841c:	xchg   esp,eax
  41841d:	xor    al,0xc4
  41841f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418420:	mov    edx,0xb7d3b6d
  418425:	(bad)  
  418426:	in     al,0x40
  418428:	mov    bl,0xc8
  41842a:	not    BYTE PTR [ebp+0xf]
  41842d:	sbb    DWORD PTR [ebp-0x7f],eax
  418430:	fwait
  418431:	inc    esp
  418432:	inc    edx
  418433:	add    ebp,0x54
  418436:	and    eax,0x1d5d9669
  41843b:	loop   0x418473
  41843d:	mov    al,0x4e
  41843f:	int    0x35
  418441:	retf   
  418442:	int    0x85
  418444:	mov    bh,0xa9
  418446:	xor    esi,0x64c1c6b0
  41844c:	fld    TBYTE PTR [esi+0x8c36560]
  418452:	lock mov edi,0x387cdfbe
  418458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418459:	dec    esp
  41845a:	cmp    BYTE PTR [edi],0x34
  41845d:	adc    cl,dh
  41845f:	ret    
  418460:	sti    
  418461:	adc    esp,DWORD PTR [edx+0x76]
  418464:	cmp    DWORD PTR ds:0x6138ac03,eax
  41846a:	sbb    DWORD PTR [edi+0x63146f40],ebp
  418470:	fstp   TBYTE PTR [eax-0x2f]
  418473:	add    ah,0x4e
  418476:	inc    eax
  418477:	aam    0x5a
  418479:	pop    ebx
  41847a:	sbb    bh,BYTE PTR [ebx+0x2e2acc03]
  418480:	cs (bad) 
  418482:	in     eax,dx
  418483:	and    al,0x79
  418485:	sub    al,0x9f
  418487:	int3   
  418488:	imul   edx,DWORD PTR [eax+eiz*2],0xfffffff9
  41848c:	mov    BYTE PTR [ebp+0x7e],bh
  41848f:	jns    0x4184ea
  418491:	test   eax,0x94b7e68c
  418496:	mov    bl,0x4e
  418498:	ret    0x3a42
  41849b:	add    ecx,eax
  41849d:	sahf   
  41849e:	dec    ebx
  41849f:	les    eax,FWORD PTR [edx-0x11c6e98d]
  4184a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184a6:	jg     0x41843d
  4184a8:	fs jmp 0xf3fa:0x327b11bf
  4184b0:	mov    al,0x6
  4184b2:	retf   
  4184b3:	(bad)
  4184b6:	cmp    DWORD PTR [edi+0x7363ee68],eax
  4184bc:	out    0xaf,al
  4184be:	rol    DWORD PTR [ecx],0xaf
  4184c1:	ds aas 
  4184c3:	das    
  4184c4:	pop    ds
  4184c5:	in     al,dx
  4184c6:	jp     0x4184b8
  4184c8:	jne    0x418450
  4184ca:	std    
  4184cb:	fistp  DWORD PTR [edi-0x1f]
  4184ce:	jnp    0x41854b
  4184d0:	xchg   esi,eax
  4184d1:	or     al,0xbd
  4184d3:	leave  
  4184d4:	repz push cs
  4184d6:	and    DWORD PTR [eax+0x28],esi
  4184d9:	or     bl,dl
  4184db:	mov    al,ds:0x8b73a4c8
  4184e0:	xchg   ebx,eax
  4184e1:	pop    esp
  4184e2:	pop    eax
  4184e3:	daa    
  4184e4:	fimul  WORD PTR [edx]
  4184e6:	dec    esp
  4184e7:	add    BYTE PTR [edx-0x45416664],bl
  4184ed:	sub    BYTE PTR [esi+0x7e496e53],dh
  4184f3:	mov    edi,0x809c928a
  4184f8:	jl     0x418578
  4184fa:	cmp    eax,0xef590106
  4184ff:	lea    esi,[ecx-0x23]
  418502:	push   ebp
  418503:	fcomip st,st(2)
  418505:	sub    DWORD PTR [edx],ebx
  418507:	mov    edx,0xf8f35996
  41850c:	lahf   
  41850d:	fsub   DWORD PTR ds:0xe4d4019c
  418513:	jne    0x4184d5
  418515:	and    bl,BYTE PTR [ebp+eiz*1+0x6a]
  418519:	mov    ch,0x65
  41851b:	jmp    0x7c2651a6
  418520:	pop    ss
  418521:	gs push edx
  418523:	and    BYTE PTR [edx-0x76],cl
  418526:	ins    DWORD PTR es:[edi],dx
  418527:	sbb    BYTE PTR [ebp+0x3d34aefe],ch
  41852d:	in     eax,dx
  41852e:	ficomp WORD PTR [esp+eax*4-0x6d54bad8]
  418535:	lods   eax,DWORD PTR ds:[esi]
  418536:	test   al,0xd2
  418538:	hlt    
  418539:	mov    ds:0x868aa743,al
  41853e:	jns    0x418587
  418540:	dec    edx
  418541:	jo     0x4185a3
  418543:	fldenv [edi-0x666c1071]
  418549:	and    BYTE PTR [eax+ebx*2],ch
  41854c:	xor    dl,BYTE PTR [eax]
  41854e:	adc    BYTE PTR [ecx+0x7fb01fc9],0x9d
  418555:	jo     0x418545
  418557:	add    BYTE PTR ds:0xe37f7ce7,ch
  41855d:	cmp    DWORD PTR [ebx+0x58d8bc02],ebp
  418563:	out    dx,eax
  418564:	fisubr WORD PTR [esp]
  418567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418568:	add    eax,0x9835654f
  41856d:	pushf  
  41856e:	ror    BYTE PTR ds:0xb9ae8a87,1
  418574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418575:	(bad)  
  418576:	rcl    BYTE PTR [ecx+0x19664fec],0x18
  41857d:	sbb    DWORD PTR [edx+0x70fe8785],eax
  418583:	push   0x1b22e5f
  418588:	inc    ebx
  418589:	lds    ebx,FWORD PTR [edi+eiz*8]
  41858c:	js     0x418595
  41858e:	push   ebp
  41858f:	jb     0x4185ed
  418591:	push   ecx
  418592:	pop    esi
  418593:	jl     0x41855e
  418595:	popf   
  418596:	jnp    0x418570
  418598:	scas   al,BYTE PTR es:[edi]
  418599:	mov    ebp,DWORD PTR [ecx]
  41859b:	pop    eax
  41859c:	retf   
  41859d:	inc    esp
  41859e:	dec    ebx
  41859f:	mov    ecx,0x26d068c2
  4185a4:	xchg   edx,eax
  4185a5:	add    al,0xc8
  4185a7:	jl     0x418600
  4185a9:	iret   
  4185aa:	imul   dh
  4185ac:	daa    
  4185ad:	xchg   edx,eax
  4185ae:	add    al,0x45
  4185b0:	sbb    ebx,esp
  4185b2:	test   eax,0x65bb39af
  4185b7:	imul   eax,ebx,0x9d0916b7
  4185bd:	inc    ebx
  4185be:	ror    DWORD PTR [edx+0x764c0da4],cl
  4185c4:	add    esi,DWORD PTR ds:0x77ee2ae6
  4185ca:	(bad)
  4185cd:	dec    ebp
  4185ce:	xchg   esp,eax
  4185cf:	xor    esp,ebp
  4185d1:	popf   
  4185d2:	adc    al,0x51
  4185d4:	(bad)  
  4185d5:	pop    ds
  4185d6:	cmp    eax,0x14072139
  4185db:	push   es
  4185dc:	mov    cl,0xe0
  4185de:	sub    BYTE PTR [edx*2-0xd71b31b],al
  4185e5:	loope  0x418602
  4185e7:	mov    ah,0x9b
  4185e9:	push   0xf12cf2d4
  4185ee:	pushf  
  4185ef:	dec    esi
  4185f0:	in     al,dx
  4185f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185f2:	repz push ss
  4185f4:	cmp    eax,0x7d671a78
  4185f9:	pop    ds
  4185fa:	mov    edx,0x5668d530
  4185ff:	fsub   QWORD PTR [ebx+0x6b4a74da]
  418605:	mov    DWORD PTR [edi+0xd],edi
  418608:	aad    0x2b
  41860a:	lea    ebp,ds:0x13fad24
  418610:	pop    esi
  418611:	jnp    0x41860c
  418613:	ds ja  0x418650
  418616:	pop    eax
  418617:	and    BYTE PTR [edx+0x101ee707],cl
  41861d:	add    eax,0xefe2ca53
  418623:	dec    ecx
  418624:	ret    
  418625:	pop    ecx
  418626:	ja     0x4185f3
  418628:	and    bl,al
  41862a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41862b:	iret   
  41862c:	popf   
  41862d:	mov    edi,0x8c98ef08
  418632:	push   ds
  418633:	sub    eax,0x5abfceb1
  418638:	adc    DWORD PTR [ebx+0x3f],ecx
  41863b:	popf   
  41863c:	xchg   DWORD PTR [ebp+0x738f872c],ebp
  418642:	test   al,0xdd
  418644:	push   ebx
  418645:	inc    ecx
  418646:	pusha  
  418647:	sub    ecx,0xbe7ab795
  41864d:	sar    BYTE PTR [edi+0x6b],1
  418650:	jno    0x418637
  418652:	xor    al,0xf1
  418654:	addr16 adc eax,0xe214a420
  41865a:	call   0x7862c1ed
  41865f:	(bad)  
  418660:	lds    edi,FWORD PTR [edx]
  418662:	mov    ?,WORD PTR [edi-0x4f]
  418665:	add    eax,0xf76b01fe
  41866a:	pop    eax
  41866b:	test   al,0xd1
  41866d:	mov    cl,0xe0
  41866f:	xchg   esi,eax
  418670:	inc    ebp
  418671:	repz add al,BYTE PTR [ebx+0x79]
  418675:	push   es
  418676:	or     edi,DWORD PTR [eax-0x51]
  418679:	mov    bh,0xcc
  41867b:	mov    al,BYTE PTR [ecx-0xb]
  41867e:	imul   BYTE PTR [ecx+0x5d]
  418681:	stos   BYTE PTR es:[edi],al
  418682:	sahf   
  418683:	push   ss
  418684:	pop    edx
  418685:	inc    dx
  418687:	arpl   WORD PTR [ebx+esi*4],sp
  41868a:	jmp    0xd83a4dbc
  41868f:	lods   eax,DWORD PTR ds:[esi]
  418690:	cmp    edi,esi
  418692:	pop    eax
  418693:	popf   
  418694:	inc    eax
  418695:	jne    0x41868e
  418697:	mov    al,ds:0x7c268901
  41869c:	mov    dh,0x6b
  41869e:	cmp    DWORD PTR ds:0x6de48ddb,ebx
  4186a4:	mov    ss,WORD PTR [edi]
  4186a6:	push   esi
  4186a7:	xor    dh,BYTE PTR [esi-0x3ad9785]
  4186ad:	(bad)  
  4186ae:	repnz (bad) 
  4186b1:	repz jge 0x418727
  4186b4:	rcr    BYTE PTR [ecx],0x8e
  4186b7:	or     BYTE PTR [esi+0x6d93fd40],bl
  4186bd:	and    ecx,DWORD PTR [edx-0x63ba6aee]
  4186c3:	mov    ss,WORD PTR [edi+0x24]
  4186c6:	add    ecx,DWORD PTR [edi]
  4186c8:	stos   BYTE PTR es:[edi],al
  4186c9:	fisub  WORD PTR [edx]
  4186cb:	dec    edi
  4186cc:	addr16 enter 0xf3ad,0x17
  4186d1:	cmp    ecx,DWORD PTR [esi+eax*8+0x5f]
  4186d5:	bound  ecx,QWORD PTR es:[esi]
  4186d8:	pop    esp
  4186d9:	fimul  WORD PTR [edi-0x7a]
  4186dc:	inc    ecx
  4186dd:	out    dx,eax
  4186de:	pop    ebp
  4186df:	mov    esp,0xf1b8cb96
  4186e4:	dec    ebp
  4186e5:	push   0xffffff8d
  4186e7:	test   eax,0x5f155e01
  4186ec:	pop    ds
  4186ed:	(bad)  [esi+0x591a9fd1]
  4186f3:	rcl    BYTE PTR [esp+ebx*2+0x5c09dac4],cl
  4186fa:	push   eax
  4186fb:	in     eax,dx
  4186fc:	add    ebx,ebp
  4186fe:	adc    eax,0xbeba18
  418703:	cwde   
  418704:	stos   BYTE PTR es:[edi],al
  418705:	mov    BYTE PTR [esi-0x7d379052],dl
  41870b:	sub    bh,BYTE PTR [ebp-0x69c68026]
  418711:	sub    edx,DWORD PTR [eax-0x2abc5b5e]
  418717:	jne    0x41872f
  418719:	mov    bh,0x12
  41871b:	lds    ecx,FWORD PTR [ecx-0x6171c5ba]
  418721:	or     edx,DWORD PTR [eax]
  418723:	and    bl,cl
  418725:	sbb    ch,BYTE PTR [edi]
  418727:	sbb    al,0xdc
  418729:	adc    edi,esi
  41872b:	jmp    0xd22e4253
  418730:	shr    DWORD PTR [esi],1
  418732:	mov    eax,0xa114fb6b
  418737:	scas   al,BYTE PTR es:[edi]
  418738:	jl     0x418784
  41873a:	aad    0x59
  41873c:	push   0x307d32a5
  418741:	pop    ebx
  418742:	sub    al,0xdc
  418744:	ror    ebp,1
  418746:	add    ah,BYTE PTR [ebx+0x4f]
  418749:	iret   
  41874a:	pop    ecx
  41874b:	push   0x36
  41874d:	repnz mov eax,0xaae33db4
  418753:	sbb    DWORD PTR [edx],edi
  418755:	arpl   WORD PTR [edx-0x4465ab32],bx
  41875b:	jecxz  0x418770
  41875d:	jl     0x4187ae
  41875f:	add    BYTE PTR [edi+0x70e632ca],0x1b
  418766:	sbb    eax,0xe62f711a
  41876b:	in     eax,dx
  41876c:	inc    esp
  41876d:	daa    
  41876e:	lds    esi,FWORD PTR [esp+eax*8+0x10]
  418772:	stos   BYTE PTR es:[edi],al
  418773:	enter  0x8263,0x81
  418777:	pop    ebp
  418778:	push   eax
  418779:	test   al,0x4a
  41877b:	mov    ebx,0x681dee58
  418780:	leave  
  418781:	test   al,0x41
  418783:	xor    al,BYTE PTR [edi+0x2c041cdd]
  418789:	dec    BYTE PTR [ecx-0x5706875f]
  41878f:	xor    DWORD PTR [ecx+0x48343962],edx
  418795:	ror    BYTE PTR [edi-0x1a],cl
  418798:	push   esi
  418799:	(bad)  
  41879a:	(bad)  [edi-0x39]
  41879d:	ret    
  41879e:	loopne 0x4187ef
  4187a0:	xor    cl,0x75
  4187a3:	pop    ecx
  4187a4:	cld    
  4187a5:	rol    DWORD PTR [ebx],0xb2
  4187a8:	lods   al,BYTE PTR ds:[esi]
  4187a9:	mov    eax,ds:0xb2c2c5fc
  4187ae:	popf   
  4187af:	and    al,0xca
  4187b1:	clc    
  4187b2:	xchg   ecx,eax
  4187b3:	mov    edx,0x216ae9cd
  4187b8:	cwde   
  4187b9:	(bad)  
  4187ba:	stos   DWORD PTR es:[edi],eax
  4187bb:	cmp    al,ah
  4187bd:	aas    
  4187be:	add    eax,0xfca55375
  4187c3:	sub    BYTE PTR [esi],dl
  4187c5:	adc    ebx,DWORD PTR gs:[eax+eiz*1-0x1]
  4187ca:	fild   DWORD PTR [ecx-0x64]
  4187cd:	into   
  4187ce:	push   eax
  4187cf:	scas   eax,DWORD PTR es:[edi]
  4187d0:	into   
  4187d1:	aam    0x33
  4187d3:	fsub   QWORD PTR [eax]
  4187d5:	xchg   DWORD PTR [esi+0x9],edi
  4187d8:	jnp    0x418816
  4187da:	mov    dh,0xb9
  4187dc:	sbb    BYTE PTR [ebx],0xa3
  4187df:	les    ebp,FWORD PTR [eax]
  4187e1:	dec    esi
  4187e2:	loopne 0x418790
  4187e4:	mov    BYTE PTR [edx-0x2c],bl
  4187e7:	or     DWORD PTR [esi-0x2a],eax
  4187ea:	xchg   edx,eax
  4187eb:	jo     0x4187f1
  4187ed:	cli    
  4187ee:	mov    edx,0xb89bf961
  4187f3:	mov    ds:0x857f32c7,eax
  4187f8:	sbb    ebp,DWORD PTR [eax]
  4187fa:	xchg   ecx,eax
  4187fb:	sbb    bl,BYTE PTR [ecx]
  4187fd:	jle    0x418809
  4187ff:	mov    ah,0xf5
  418801:	pop    esp
  418802:	js     0x4187a7
  418804:	pop    ebp
  418805:	mov    al,0xad
  418807:	sbb    BYTE PTR [eax-0x3a],ah
  41880a:	les    ebx,FWORD PTR [eax]
  41880c:	icebp  
  41880d:	xchg   BYTE PTR [ebp-0x14],cl
  418810:	cmc    
  418811:	and    dh,BYTE PTR [ebp-0x78e710bd]
  418817:	xor    BYTE PTR [esi],dh
  418819:	jno    0x4187a9
  41881b:	jns    0x41881c
  41881d:	push   ds
  41881e:	jne    0x41884e
  418820:	or     eax,0xc3a70777
  418825:	stc    
  418826:	add    eax,0x7155d035
  41882b:	loope  0x41886a
  41882d:	cmp    DWORD PTR [eax-0x3666e69f],ebp
  418833:	stos   DWORD PTR es:[edi],eax
  418834:	sbb    DWORD PTR ds:0xeb26368,edi
  41883a:	inc    esi
  41883b:	fbld   TBYTE PTR [edx+0x23c309e3]
  418841:	or     esp,esp
  418843:	sbb    DWORD PTR [ebx-0x49f037ae],edi
  418849:	jp     0x41889d
  41884b:	scas   al,BYTE PTR es:[edi]
  41884c:	sub    al,0xbb
  41884e:	push   ds
  41884f:	sbb    dl,BYTE PTR [edx-0x37]
  418852:	fimul  DWORD PTR ds:0x18a951a
  418858:	or     eax,0x9b5c171a
  41885d:	fistp  DWORD PTR [edx+0x59]
  418860:	mul    DWORD PTR [ebp+0x2d795d87]
  418866:	mov    DWORD PTR [esi],eax
  418868:	ret    
  418869:	pop    ss
  41886a:	xchg   DWORD PTR [esi+0x2e],edx
  41886d:	pop    es
  41886e:	sti    
  41886f:	inc    edi
  418870:	adc    eax,DWORD PTR [ebx+0x467d112d]
  418876:	push   ds
  418877:	ror    BYTE PTR [ecx+0x51],cl
  41887a:	stc    
  41887b:	add    ebx,DWORD PTR [eax-0x62]
  41887e:	pop    eax
  41887f:	mov    WORD PTR [edx],fs
  418881:	sbb    DWORD PTR [ecx],edi
  418883:	(bad)  
  418884:	mov    ds:0xe3f45195,eax
  418889:	pop    ds
  41888a:	adc    DWORD PTR [ebp+0x4207ed2],0xad4f02da
  418894:	jo     0x418843
  418896:	mov    edi,0x2fb762e9
  41889b:	xor    BYTE PTR [edx],dh
  41889d:	mov    ecx,esi
  41889f:	push   ebp
  4188a0:	sub    BYTE PTR ss:[edx+0xc7b8709],0x1b
  4188a8:	(bad)  
  4188a9:	popa   
  4188aa:	jo     0x418842
  4188ac:	jecxz  0x41892c
  4188ae:	retf   
  4188af:	mov    gs,WORD PTR [ebx+0x51769fc9]
  4188b5:	sub    BYTE PTR [ecx-0x2dd9087d],0x21
  4188bc:	adc    edi,esi
  4188be:	push   es
  4188bf:	mov    bl,al
  4188c1:	cmp    bh,al
  4188c3:	dec    esp
  4188c4:	mov    dh,0x5a
  4188c6:	jl     0x418904
  4188c8:	retf   0xcc5f
  4188cb:	xchg   dh,dl
  4188cd:	mov    ds:0xe828d90c,al
  4188d2:	out    0x78,eax
  4188d4:	ret    0xba5b
  4188d7:	mov    bh,0x2c
  4188d9:	xchg   ebx,eax
  4188db:	jns    0x418877
  4188dd:	loope  0x4188a6
  4188df:	pop    ecx
  4188e0:	cmc    
  4188e1:	rol    BYTE PTR [esi-0x10ed6a73],0xd8
  4188e8:	jg     0x4188da
  4188ea:	mov    dl,ch
  4188ec:	and    DWORD PTR [esi-0x27],ecx
  4188ef:	imul   ebx,DWORD PTR ds:0x48b1d80,0xffffff84
  4188f6:	fisubr DWORD PTR [eax+0x403fe032]
  4188fc:	retf   
  4188fd:	xchg   ecx,eax
  4188fe:	aas    
  4188ff:	dec    esp
  418900:	outs   dx,DWORD PTR ds:[esi]
  418901:	and    eax,0x2aacbe69
  418906:	(bad)  
  418908:	call   0x48e3:0x90d241e2
  41890f:	ins    BYTE PTR es:[edi],dx
  418910:	hlt    
  418911:	push   edi
  418912:	jmp    0xd5688af4
  418917:	push   edx
  418918:	mov    ds:0xc61850b4,al
  41891d:	fiadd  DWORD PTR ss:[edi+edx*1+0x3aafe4d2]
  418925:	les    ebx,FWORD PTR [edx+0x1f]
  418928:	add    eax,0xf028a462
  41892d:	repz cmove eax,DWORD PTR [esi]
  418931:	cmc    
  418932:	sbb    BYTE PTR [ebx-0x69c3b46a],cl
  418938:	push   ebx
  418939:	pop    es
  41893a:	jne    0x4188ff
  41893c:	fcomp  QWORD PTR [ebp-0x67faa2b8]
  418942:	(bad)  
  418943:	das    
  418944:	cmc    
  418945:	push   edi
  418946:	mov    ebp,0xf32accfb
  41894b:	aam    0x1f
  41894d:	out    0xee,eax
  41894f:	pop    ecx
  418950:	das    
  418951:	add    eax,0xbe37f859
  418956:	mov    ebp,0x520ffd3e
  41895b:	pop    edi
  41895c:	jge    0x4188ea
  41895e:	xchg   ecx,ebp
  418960:	xor    ecx,DWORD PTR es:[edi]
  418963:	push   ecx
  418964:	(bad)  
  418965:	mov    dh,0xbb
  418967:	jle    0x4189e7
  418969:	cmp    eax,0xa5a63c38
  41896e:	push   cs
  41896f:	imul   eax,DWORD PTR [ebx+0xa],0x5adf81cf
  418976:	pop    es
  418977:	aaa    
  418978:	inc    ecx
  418979:	pop    edi
  41897a:	pop    edi
  41897b:	and    edi,DWORD PTR [ebx+0x749078fb]
  418981:	pop    ebp
  418982:	fwait
  418983:	jmp    0x7cb32073
  418988:	mov    dl,0x33
  41898a:	icebp  
  41898b:	and    al,0xcc
  41898d:	add    al,0x97
  41898f:	inc    bx
  418991:	pusha  
  418992:	xlat   BYTE PTR ds:[ebx]
  418993:	sahf   
  418994:	jp     0x4189b2
  418996:	scas   eax,DWORD PTR es:[edi]
  418997:	stos   BYTE PTR es:[edi],al
  418998:	fidivr DWORD PTR [eax+0x44]
  41899b:	imul   esp,ecx,0xffffffc2
  41899e:	sbb    al,0xc2
  4189a0:	push   ds
  4189a1:	sub    eax,DWORD PTR [esi-0x7b]
  4189a4:	add    DWORD PTR [ecx],ebp
  4189a6:	retf   
  4189a7:	jnp    0x418967
  4189a9:	stos   DWORD PTR es:[edi],eax
  4189aa:	add    dl,dh
  4189ac:	inc    edi
  4189ad:	lock pop esp
  4189af:	outs   dx,DWORD PTR ds:[esi]
  4189b0:	jnp    0x4189a1
  4189b2:	cmp    al,0xa9
  4189b4:	outs   dx,DWORD PTR ds:[esi]
  4189b5:	in     eax,dx
  4189b6:	scas   al,BYTE PTR es:[edi]
  4189b7:	xlat   BYTE PTR ds:[ebx]
  4189b8:	push   es
  4189b9:	stos   DWORD PTR es:[edi],eax
  4189ba:	inc    esp
  4189bb:	adc    BYTE PTR [ecx-0x59],dh
  4189be:	fcmovbe st,st(6)
  4189c0:	mov    ds:0xb291f3a,eax
  4189c5:	xor    eax,0xffa7953a
  4189ca:	inc    ebp
  4189cb:	pop    ecx
  4189cc:	sub    DWORD PTR [ecx+0x28],edi
  4189cf:	stc    
  4189d0:	cmp    DWORD PTR [edi+0x32943b26],ecx
  4189d6:	xor    DWORD PTR [edx],ebx
  4189d8:	lock lea esi,[ecx]
  4189db:	and    al,0x89
  4189dd:	not    DWORD PTR [ebx+0x5016df1f]
  4189e3:	and    eax,0xa1e32e0
  4189e8:	je     0x41897e
  4189ea:	or     BYTE PTR [edi-0x61d8ee18],dh
  4189f0:	sbb    eax,0x5c6765f2
  4189f5:	mov    ah,0xa3
  4189f7:	sbb    DWORD PTR [eax],ecx
  4189f9:	ret    
  4189fa:	lahf   
  4189fb:	sub    cl,ah
  4189fd:	dec    edx
  4189fe:	and    BYTE PTR ds:0x4b1915f6,ch
  418a04:	sar    BYTE PTR [edi],cl
  418a06:	mov    eax,0x5618ed3a
  418a0b:	mov    cl,0xf8
  418a0d:	jge    0x418a75
  418a0f:	addr16 jmp 0x4d1f:0x967c5707
  418a17:	push   ebp
  418a18:	xchg   edi,eax
  418a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a1a:	pop    eax
  418a1b:	sbb    DWORD PTR [edx-0x54237f96],edx
  418a21:	or     ch,al
  418a23:	outs   dx,BYTE PTR ds:[esi]
  418a24:	xor    al,0x70
  418a26:	mov    cl,0xf1
  418a28:	xor    eax,0x3108a798
  418a2d:	adc    DWORD PTR [edi+ebp*1],ebx
  418a30:	mov    ebp,0x91dab78e
  418a35:	mov    ah,0xd
  418a37:	mov    ds:0x582f8a90,al
  418a3c:	xor    DWORD PTR [eax],edx
  418a3e:	sbb    eax,0x89e3a544
  418a43:	or     edi,eax
  418a45:	int    0xe6
  418a47:	gs or  al,0xcf
  418a4a:	cmp    DWORD PTR [edx-0x27f158ee],edx
  418a50:	pop    edi
  418a51:	xchg   ebx,eax
  418a52:	adc    DWORD PTR [esi+0x2d],esi
  418a55:	dec    ecx
  418a56:	mov    DWORD PTR [ebx+edi*4],eax
  418a59:	pop    es
  418a5a:	mov    edx,0xcdf0d280
  418a5f:	scas   al,BYTE PTR es:[edi]
  418a60:	jo     0x418a62
  418a62:	xchg   DWORD PTR [ecx-0x2],ecx
  418a65:	ds out 0x91,eax
  418a68:	pop    ss
  418a69:	mov    eax,0xeb3a9bd3
  418a6e:	xor    edi,DWORD PTR [esi+0x46]
  418a71:	cmp    BYTE PTR [ebp+0x4c],dh
  418a74:	push   esi
  418a75:	mov    eax,ds:0x188b141a
  418a7a:	and    ecx,esp
  418a7c:	scas   eax,DWORD PTR es:[edi]
  418a7d:	daa    
  418a7e:	mov    bl,0xaf
  418a80:	dec    ebx
  418a81:	sbb    DWORD PTR [ebp+ebp*1+0x25a126fb],0xffffffa7
  418a89:	mov    esp,0x48636dcb
  418a8e:	out    0x23,eax
  418a90:	shl    BYTE PTR [edi],0x8b
  418a93:	popa   
  418a94:	mov    DWORD PTR [esi+0x2aed0a1],eax
  418a9a:	xor    BYTE PTR [ebx+eax*8+0x63],al
  418a9e:	fisubr WORD PTR [edx]
  418aa0:	xchg   edi,eax
  418aa1:	inc    BYTE PTR [edi-0x13]
  418aa4:	cwde   
  418aa5:	shl    DWORD PTR [eax],0xb5
  418aa8:	nop
  418aa9:	fwait
  418aaa:	pop    edi
  418aab:	adc    al,0xa
  418aad:	jb     0x418a44
  418aaf:	pusha  
  418ab0:	add    edi,DWORD PTR [edx-0x2f]
  418ab3:	(bad)  
  418ab4:	mov    esp,ecx
  418ab6:	aaa    
  418ab7:	sbb    ch,BYTE PTR [edx+0x3f]
  418aba:	sub    al,0x6
  418abc:	mov    bh,BYTE PTR [ebx+esi*1+0x1a]
  418ac0:	jbe    0x418af4
  418ac2:	xchg   DWORD PTR [ebp+0x2f],edx
  418ac5:	and    dh,0x9d
  418ac8:	push   esi
  418ac9:	xor    al,0x9c
  418acb:	ins    BYTE PTR es:[edi],dx
  418acc:	dec    esp
  418acd:	maskmovq mm5,(bad)
  418ace:	imul   DWORD PTR [ecx-0x12]
  418ad1:	mov    ecx,0xdff04091
  418ad6:	pop    es
  418ad7:	repz daa 
  418ad9:	xor    al,0xce
  418adb:	stos   BYTE PTR es:[edi],al
  418adc:	je     0x418b42
  418ade:	mov    cl,0xb5
  418ae0:	xor    esi,DWORD PTR [ebp-0x6b217a7b]
  418ae6:	retf   0x737e
  418ae9:	adc    edi,ecx
  418aeb:	leave  
  418aec:	mov    ecx,0xed87a476
  418af1:	push   es
  418af2:	lods   eax,DWORD PTR ds:[esi]
  418af3:	popf   
  418af4:	cmp    ah,ch
  418af6:	jb     0x418b5f
  418af8:	mov    edx,0xf346459a
  418afd:	xchg   esp,eax
  418afe:	out    0xf8,eax
  418b00:	retf   
  418b01:	arpl   WORD PTR [ecx-0x7e],sp
  418b04:	retf   
  418b05:	aad    0xe0
  418b07:	leave  
  418b08:	push   ss
  418b09:	mov    ebp,esi
  418b0b:	les    ecx,FWORD PTR [edi-0xb27aa78]
  418b11:	mov    DWORD PTR [di],0x279fb648
  418b18:	xchg   ebx,eax
  418b19:	sbb    DWORD PTR [ebp+eax*4+0x251ea0ea],0x5e
  418b21:	not    DWORD PTR [ebx+eiz*4+0x51]
  418b25:	or     DWORD PTR [ebx+0x522ab5f1],0x74
  418b2c:	ffreep st(5)
  418b2e:	add    al,0x86
  418b30:	js     0x418adc
  418b32:	cmp    DWORD PTR [eax],esp
  418b34:	dec    ecx
  418b35:	aad    0x6
  418b37:	inc    eax
  418b38:	test   DWORD PTR [edi-0x5d],edx
  418b3b:	sbb    DWORD PTR [eax],edx
  418b3d:	push   ebx
  418b3e:	adc    BYTE PTR ds:0x636511e7,dh
  418b44:	jae    0x418bb5
  418b46:	or     bh,ah
  418b48:	stc    
  418b49:	inc    ecx
  418b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b4b:	xor    ch,BYTE PTR [ecx+0x1673ac25]
  418b51:	clc    
  418b52:	dec    esi
  418b53:	xchg   BYTE PTR [eax+ebx*2-0x3d],ah
  418b57:	popa   
  418b58:	stc    
  418b59:	add    BYTE PTR [ebp+0x53ddff71],bl
  418b5f:	jmp    0x46e1922
  418b64:	add    esp,DWORD PTR [edx-0xcb0d0f0]
  418b6a:	scas   eax,DWORD PTR es:[edi]
  418b6b:	and    al,0x1f
  418b6d:	push   edi
  418b6e:	fst    QWORD PTR [edx-0x66e4afb6]
  418b74:	fld    DWORD PTR ds:0xd326cc08
  418b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b7b:	and    al,0x0
  418b7d:	(bad)  
  418b7f:	xor    esp,DWORD PTR [esi-0x3f]
  418b82:	sbb    bh,al
  418b84:	fcmovu st,st(0)
  418b86:	cdq    
  418b87:	xchg   edi,eax
  418b88:	fisub  DWORD PTR [esp+edx*8+0x59]
  418b8c:	xchg   ebp,eax
  418b8d:	stos   BYTE PTR es:[edi],al
  418b8e:	not    al
  418b90:	sahf   
  418b91:	xor    ebx,edx
  418b93:	and    eax,0x3ffd9bae
  418b98:	sbb    eax,0xd149867c
  418b9d:	out    dx,al
  418b9e:	jmp    0x418c11
  418ba0:	sahf   
  418ba1:	mov    ah,0xb7
  418ba3:	dec    eax
  418ba4:	lock fsub QWORD PTR [ecx+0x2549a6dc]
  418bab:	pop    esp
  418bac:	adc    al,0x70
  418bae:	mov    eax,ds:0xc30b152b
  418bb3:	int3   
  418bb4:	sahf   
  418bb5:	dec    ecx
  418bb6:	fsub   DWORD PTR [ebx]
  418bb8:	js     0x418b9b
  418bba:	retf   
  418bbb:	cmp    al,0xce
  418bbd:	sar    BYTE PTR [esi+0x41],1
  418bc0:	mov    ds:0xb1375f02,eax
  418bc5:	into   
  418bc6:	sub    ebx,DWORD PTR [edi]
  418bc8:	pop    es
  418bc9:	mov    ch,0x17
  418bcb:	pop    ds
  418bcc:	test   al,0xff
  418bce:	sbb    DWORD PTR [ebx+0x1781d8dd],edi
  418bd4:	jl     0x418b7f
  418bd6:	jne    0x418baa
  418bd8:	push   edx
  418bd9:	ins    DWORD PTR es:[edi],dx
  418bda:	jmp    0xa021e497
  418bdf:	add    bh,cl
  418be1:	and    esi,0x87d3184a
  418be7:	sub    WORD PTR [ecx+0x5201bff1],dx
  418bee:	jb     0x418be3
  418bf0:	or     ebp,ecx
  418bf2:	adc    BYTE PTR [edx-0x5e],0x3a
  418bf6:	mov    ?,WORD PTR [eax+edi*2]
  418bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bfa:	lods   al,BYTE PTR ds:[esi]
  418bfb:	lds    esi,FWORD PTR [edx+eax*8]
  418bfe:	nop
  418bff:	dec    edi
  418c00:	sbb    bl,bh
  418c02:	test   DWORD PTR [esi+esi*2],0x6fc87cd7
  418c09:	dec    esp
  418c0a:	inc    ecx
  418c0b:	mov    bl,0xe
  418c0d:	pop    edx
  418c0e:	test   DWORD PTR [edx],esp
  418c10:	pop    eax
  418c11:	fbld   TBYTE PTR [eax]
  418c13:	ins    DWORD PTR es:[edi],dx
  418c14:	jmp    0x418bc9
  418c16:	bound  ecx,QWORD PTR [ebx-0x14]
  418c19:	test   al,0x30
  418c1b:	jnp    0x418be3
  418c1d:	mov    esp,esp
  418c1f:	push   ebp
  418c20:	fnstcw WORD PTR ss:[edi]
  418c23:	out    dx,al
  418c24:	mov    eax,ds:0xaa76ea71
  418c29:	or     eax,0xe3ad40d4
  418c2e:	stos   DWORD PTR es:[edi],eax
  418c2f:	cld    
  418c30:	in     al,dx
  418c31:	or     al,BYTE PTR [ebx]
  418c33:	pop    esp
  418c34:	cmp    dh,0x42
  418c37:	fnstcw WORD PTR [eax]
  418c39:	dec    ecx
  418c3a:	lods   eax,DWORD PTR ds:[esi]
  418c3b:	cdq    
  418c3c:	push   edi
  418c3d:	mov    dl,0xb3
  418c3f:	cld    
  418c40:	push   eax
  418c41:	ror    DWORD PTR [esi-0x46022d3e],1
  418c47:	jbe    0x418bde
  418c49:	lods   al,BYTE PTR ds:[esi]
  418c4a:	sbb    ecx,DWORD PTR [esi-0x6885cc4c]
  418c50:	sbb    eax,0xd42babb7
  418c55:	xor    ebx,eax
  418c57:	das    
  418c58:	icebp  
  418c59:	je     0x418be9
  418c5b:	adc    al,0x72
  418c5d:	test   ch,dl
  418c5f:	sbb    ah,BYTE PTR [ebx]
  418c61:	mov    edi,edx
  418c63:	jne    0x418c16
  418c65:	sbb    eax,0x654e4420
  418c6a:	fmul   QWORD PTR [esi+0x7e]
  418c6d:	pop    ecx
  418c6e:	jle    0x418c3f
  418c70:	push   cs
  418c71:	test   BYTE PTR ds:0x3564f7ef,ah
  418c77:	mov    ch,0x4a
  418c79:	xor    dl,ah
  418c7b:	mov    dl,0xa
  418c7d:	push   0x9cddd416
  418c82:	bound  eax,QWORD PTR [edi-0x3fdfd1c1]
  418c88:	pop    ebx
  418c89:	mov    BYTE PTR [ecx-0x2f],bl
  418c8c:	or     BYTE PTR [edx],dl
  418c8e:	mov    ds:0xae2b48bd,eax
  418c93:	adc    BYTE PTR [esi+0xdb43ef],bh
  418c99:	rcl    DWORD PTR [ebp-0x5f],cl
  418c9c:	clc    
  418c9d:	lahf   
  418c9e:	dec    edx
  418c9f:	std    
  418ca0:	jecxz  0x418cd1
  418ca2:	lods   eax,DWORD PTR ds:[esi]
  418ca3:	and    DWORD PTR [ebp-0x7d],0x61
  418ca7:	mov    cl,0x4b
  418ca9:	popf   
  418caa:	jne    0x418ce4
  418cac:	xchg   ebp,eax
  418cad:	pop    esp
  418cae:	adc    ch,BYTE PTR [ecx-0x4e3003d4]
  418cb4:	daa    
  418cb5:	ds push esi
  418cb7:	push   cs
  418cb8:	pop    ss
  418cb9:	imul   ebx,DWORD PTR [ecx-0x3a],0xce63a2f9
  418cc0:	push   ecx
  418cc1:	ret    0xb3cd
  418cc4:	xor    BYTE PTR fs:[ecx],bl
  418cc7:	xchg   ebx,eax
  418cc8:	push   esp
  418cc9:	mov    ah,0x3b
  418ccb:	loope  0x418c77
  418ccd:	sbb    esp,DWORD PTR [edi]
  418ccf:	adc    DWORD PTR [ebp+0x66],esi
  418cd2:	adc    BYTE PTR [edi-0x18924e9d],al
  418cd8:	outs   dx,DWORD PTR ds:[esi]
  418cd9:	call   0x42fece0
  418cde:	sbb    DWORD PTR [ecx-0x76],0xffffff80
  418ce2:	xor    al,0xb7
  418ce4:	inc    esp
  418ce5:	cmp    esp,DWORD PTR [esi+0xc]
  418ce8:	in     al,0xe6
  418cea:	and    ebx,DWORD PTR [esi+0x36]
  418ced:	jns    0x418d1b
  418cef:	fst    DWORD PTR [edi]
  418cf1:	jecxz  0x418cd5
  418cf3:	mov    al,0x2b
  418cf5:	adc    eax,0x97a9d07e
  418cfa:	sub    DWORD PTR [ebp+0x290fd267],esi
  418d00:	popa   
  418d01:	outs   dx,BYTE PTR ds:[esi]
  418d02:	ror    edi,0xe4
  418d05:	rcl    DWORD PTR [edi+0x5f619d63],0xe5
  418d0c:	and    cl,BYTE PTR [edx-0x6d]
  418d0f:	and    al,0x58
  418d11:	and    DWORD PTR [ebx-0x4],ecx
  418d14:	mov    al,BYTE PTR [eax]
  418d16:	mov    ah,0x5d
  418d18:	xchg   BYTE PTR [eax-0x33],al
  418d1b:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  418d1d:	pop    ss
  418d1e:	sbb    eax,0x4392661d
  418d23:	aaa    
  418d24:	xchg   edx,eax
  418d25:	in     al,0x23
  418d27:	fdiv   DWORD PTR ds:0x1ef552f4
  418d2d:	xor    al,0x83
  418d2f:	(bad)  
  418d30:	ins    DWORD PTR es:[edi],dx
  418d31:	mov    ecx,0xf2fd8722
  418d36:	or     DWORD PTR ds:0x9cdf5037,ecx
  418d3c:	sbb    al,0x77
  418d3e:	lock scas al,BYTE PTR es:[edi]
  418d40:	imul   edx,DWORD PTR [edx+0x5b],0x63
  418d44:	and    bl,ah
  418d46:	inc    ecx
  418d47:	(bad)  
  418d48:	jmp    0x2ba4:0x8c2f0b53
  418d4f:	jecxz  0x418cf4
  418d51:	rcl    DWORD PTR [edi],1
  418d53:	pop    ebx
  418d54:	sbb    al,0x39
  418d56:	sub    al,0xb7
  418d58:	pop    eax
  418d59:	sbb    bl,ah
  418d5b:	stc    
  418d5c:	icebp  
  418d5d:	xchg   ecx,eax
  418d5e:	mov    fs,WORD PTR [ebx-0x10]
  418d61:	push   edi
  418d62:	sar    eax,cl
  418d64:	pop    ebp
  418d65:	(bad)  
  418d66:	lock pusha 
  418d68:	lods   al,BYTE PTR ds:[esi]
  418d69:	mov    eax,ds:0x542b8663
  418d6e:	add    bh,dl
  418d70:	ret    0x6909
  418d73:	jnp    0x418d52
  418d75:	xor    eax,0xf0a8ede6
  418d7a:	jmp    0xec0ade7a
  418d7f:	popa   
  418d80:	addr16 and eax,0x2b32d439
  418d86:	pushf  
  418d87:	mov    al,ds:0xa668288f
  418d8c:	gs push 0x7d
  418d8f:	jae    0x418d7f
  418d91:	sub    al,0xf7
  418d93:	out    dx,eax
  418d94:	mov    al,0x2d
  418d96:	cmp    BYTE PTR [esi-0x2c],al
  418d99:	(bad)  
  418d9a:	shr    BYTE PTR [ebp-0x2fa3c09c],cl
  418da0:	sub    eax,0x1960b752
  418da5:	inc    edi
  418da6:	imul   ecx,ebx,0x35
  418da9:	movd   DWORD PTR [edx],mm2
  418dac:	sbb    eax,0x6f4b072
  418db1:	(bad)  
  418db2:	mov    ch,0x65
  418db4:	adc    DWORD PTR [ebp+0x613416ae],0x5b
  418dbb:	shl    BYTE PTR [ebp+0xd5c8d60],0xa3
  418dc2:	lods   eax,DWORD PTR ds:[esi]
  418dc3:	fst    QWORD PTR [edi+0x59]
  418dc6:	sbb    al,0xa
  418dc8:	push   es
  418dc9:	fistp  QWORD PTR [eax-0x46]
  418dcc:	aam    0x5b
  418dce:	loopne 0x418e4c
  418dd0:	push   esp
  418dd1:	jbe    0x418d82
  418dd3:	retf   
  418dd4:	or     eax,0x4c2508ee
  418dd9:	nop
  418dda:	jb     0x418dc5
  418ddc:	call   0x48fd:0x9226ef17
  418de3:	call   DWORD PTR [ebx+edx*2+0x5d]
  418de7:	push   0xffffffb9
  418de9:	gs jmp 0xff179a94
  418def:	push   esi
  418df0:	xchg   BYTE PTR [edi-0x69141c5],bh
  418df6:	mov    eax,ds:0x6d82d2ae
  418dfb:	fiadd  DWORD PTR [edx+edi*2+0x69ecfadf]
  418e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e03:	ins    BYTE PTR es:[edi],dx
  418e04:	mov    ch,0x2a
  418e06:	neg    BYTE PTR [esi]
  418e08:	add    eax,0x93a500ab
  418e0d:	mov    bl,0x7c
  418e0f:	lahf   
  418e10:	aaa    
  418e11:	sti    
  418e12:	enter  0x6224,0x5e
  418e16:	and    eax,0x69406554
  418e1b:	sbb    DWORD PTR [ebx+0x3c],ebp
  418e1e:	out    dx,eax
  418e1f:	jle    0x418ddc
  418e21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e22:	fwait
  418e23:	sub    cl,ch
  418e25:	shr    BYTE PTR [ecx],1
  418e27:	cmp    BYTE PTR [eax],dl
  418e29:	stc    
  418e2a:	push   0x7f46e47e
  418e2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e30:	push   ss
  418e31:	mul    esi
  418e33:	ins    DWORD PTR es:[edi],dx
  418e34:	pop    esi
  418e35:	mov    al,ds:0xf0cf9353
  418e3a:	iret   
  418e3b:	and    DWORD PTR [eax],esi
  418e3d:	xchg   ebx,eax
  418e3e:	leave  
  418e3f:	test   BYTE PTR [edx-0x18],bh
  418e42:	mov    ecx,0xd215df5a
  418e47:	jg     0x418dda
  418e49:	mov    edx,0xe96cd766
  418e4e:	xchg   ecx,eax
  418e4f:	test   DWORD PTR [edx-0x30],edi
  418e52:	mov    eax,0x15f7c0a8
  418e57:	aad    0x6c
  418e59:	xor    al,0x10
  418e5b:	ds dec ebx
  418e5d:	xor    al,0x3c
  418e5f:	adc    DWORD PTR [ecx*2+0x61a71980],ebp
  418e66:	shr    DWORD PTR [eax],0xc5
  418e69:	imul   esi,DWORD PTR [eax],0xd6a42388
  418e6f:	imul   esi,DWORD PTR [ebp+0x4b],0xffffffaa
  418e73:	add    dh,BYTE PTR [edx]
  418e75:	and    al,0xf4
  418e77:	arpl   WORD PTR [esi-0x4aed81bb],di
  418e7d:	fnsave [ecx]
  418e7f:	in     eax,dx
  418e80:	repnz push esi
  418e82:	mov    al,0x89
  418e84:	push   es
  418e85:	fistp  WORD PTR [ebx-0x3333c5f5]
  418e8b:	popf   
  418e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e8d:	dec    DWORD PTR [edi+ebx*4+0x27]
  418e91:	xchg   edx,eax
  418e92:	jmp    0x70934793
  418e97:	loope  0x418e72
  418e99:	pop    ecx
  418e9a:	inc    ebx
  418e9b:	or     BYTE PTR [edx-0x27320282],0x16
  418ea2:	pop    es
  418ea3:	retf   
  418ea4:	sbb    ebp,DWORD PTR ds:0x7490ab4f
  418eaa:	js     0x418f1a
  418eac:	sbb    dh,BYTE PTR [ecx]
  418eae:	push   gs
  418eb0:	adc    DWORD PTR [eax+0x62],edi
  418eb3:	mov    edi,0xb488f0a0
  418eb8:	dec    ecx
  418eb9:	adc    eax,0x88ce6eac
  418ebe:	retf   0x808
  418ec1:	lods   eax,DWORD PTR ds:[esi]
  418ec2:	jae    0x418f3b
  418ec4:	pop    ebx
  418ec5:	sub    eax,0x525a28f9
  418eca:	adc    BYTE PTR [ecx-0x4f],bh
  418ecd:	push   ebp
  418ece:	(bad)  
  418ecf:	out    0x7d,al
  418ed1:	mov    fs,WORD PTR [ebp+0x2300c23b]
  418ed7:	test   eax,0x3161a78d
  418edc:	(bad)  
  418edd:	cwde   
  418ede:	mov    ds:0x8f9214ee,al
  418ee3:	and    ebx,DWORD PTR [eax+0x20d4e0a0]
  418ee9:	xchg   edi,eax
  418eea:	cli    
  418eeb:	hlt    
  418eec:	iret   
  418eed:	inc    ebp
  418eee:	pop    esi
  418eef:	in     al,0x20
  418ef1:	addr16 popf 
  418ef3:	adc    BYTE PTR [ecx],0xbc
  418ef6:	adc    esi,esp
  418ef8:	sbb    eax,DWORD PTR [ecx]
  418efa:	cmp    al,0xa8
  418efc:	cmc    
  418efd:	inc    esi
  418efe:	xor    BYTE PTR [eax],dh
  418f00:	push   edi
  418f01:	aam    0x36
  418f03:	pop    ds
  418f04:	ss movups xmm6,xmm4
  418f08:	out    dx,eax
  418f09:	sub    ecx,esi
  418f0b:	mov    al,0x45
  418f0d:	xchg   ecx,eax
  418f0e:	sbb    bh,ah
  418f10:	int    0xc8
  418f12:	outs   dx,BYTE PTR ds:[esi]
  418f13:	fldcw  WORD PTR [ebp+0x4be4cf22]
  418f19:	mov    al,BYTE PTR [edi]
  418f1b:	int    0x71
  418f1d:	iret   
  418f1e:	sub    eax,0xd87b28fa
  418f23:	mov    esi,0x514bf45b
  418f28:	in     eax,0x27
  418f2a:	repnz push esi
  418f2c:	jae    0x418f34
  418f2e:	fs jl  0x418ef1
  418f31:	add    al,BYTE PTR ds:0x28c3f02a
  418f37:	retf   
  418f38:	jne    0x418f58
  418f3a:	mov    cl,0xcc
  418f3c:	pop    es
  418f3d:	out    0xad,eax
  418f3f:	pop    esp
  418f40:	push   esp
  418f41:	cld    
  418f42:	jnp    0x418f20
  418f44:	pushf  
  418f45:	(bad)  
  418f46:	in     eax,0x3
  418f48:	xor    BYTE PTR [ebx+0x2d],bl
  418f4b:	je     0x418f73
  418f4d:	sub    eax,0xdf33d986
  418f52:	iret   
  418f53:	xchg   ebx,eax
  418f54:	dec    eax
  418f55:	push   esi
  418f56:	add    ch,ch
  418f58:	mov    ah,0x3c
  418f5a:	or     cl,dh
  418f5c:	stos   DWORD PTR es:[edi],eax
  418f5d:	test   eax,0xbcbda57e
  418f62:	push   ebp
  418f63:	lods   al,BYTE PTR ds:[esi]
  418f64:	mov    bl,0xaa
  418f66:	jo     0x418f84
  418f68:	pop    edi
  418f69:	into   
  418f6a:	enter  0x951f,0x4a
  418f6e:	jmp    0x418fc2
  418f70:	pushf  
  418f71:	hlt    
  418f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f73:	fnstenv [esi-0x27]
  418f76:	and    al,0x6
  418f78:	stos   BYTE PTR es:[edi],al
  418f79:	(bad)  
  418f7a:	jmp    FWORD PTR [edx-0x53]
  418f7d:	xor    BYTE PTR [ebx],al
  418f7f:	mov    ebx,0x2de420db
  418f84:	je     0x418fb9
  418f86:	loopne 0x418f0e
  418f88:	test   BYTE PTR [ebx-0x23a08a3a],cl
  418f8e:	imul   esi,DWORD PTR [eax-0x7e08a97d],0x57097ff5
  418f98:	jp     0x418f6c
  418f9a:	pop    es
  418f9b:	mov    DWORD PTR [ebx-0x7b3252f3],ecx
  418fa1:	das    
  418fa2:	cmp    ebx,ecx
  418fa4:	and    bl,BYTE PTR [esi-0x32592685]
  418faa:	js     0x418ffa
  418fac:	mov    edx,0xaebefb78
  418fb1:	dec    ebx
  418fb2:	and    eax,0xdf8a5f52
  418fb7:	dec    edx
  418fb8:	push   ds
  418fb9:	lahf   
  418fba:	xor    eax,0x920796c3
  418fbf:	dec    edx
  418fc0:	push   edx
  418fc1:	(bad)
  418fc6:	clc    
  418fc7:	mov    dl,BYTE PTR [bp+si]
  418fca:	icebp  
  418fcb:	ja     0x418fe9
  418fcd:	xchg   ebp,eax
  418fce:	xchg   edi,eax
  418fcf:	and    BYTE PTR cs:[eax+0x3244ac46],bh
  418fd6:	dec    edx
  418fd7:	cmc    
  418fd8:	popa   
  418fd9:	pop    eax
  418fda:	mov    esi,0x4cfeba1e
  418fdf:	mov    ecx,esp
  418fe1:	retf   0x22b7
  418fe4:	pop    ebx
  418fe5:	sub    al,0xa2
  418fe7:	addr16 dec eax
  418fe9:	mov    edi,0x8efc060b
  418fee:	push   0xcbcdcd76
  418ff3:	or     BYTE PTR [eax-0x2a],ch
  418ff6:	shr    DWORD PTR [ebx-0x28],0x96
  418ffa:	push   ds
  418ffb:	xchg   DWORD PTR [edx+0x6f],esi
  418ffe:	push   ecx
  418fff:	aad    0x5
  419001:	ret    0x7b36
  419004:	mov    BYTE PTR [ecx],al
  419006:	ds sub ah,ch
  419009:	in     eax,0xae
  41900b:	(bad)  [ebp-0x2f5c57b0]
  419011:	(bad)  
  419012:	fs dec ebp
  419014:	cmp    ch,BYTE PTR [edx]
  419016:	fwait
  419017:	in     al,dx
  419018:	imul   BYTE PTR [eax]
  41901a:	jne    0x418fcf
  41901c:	int3   
  41901d:	idiv   cl
  41901f:	clc    
  419020:	mov    DWORD PTR [esi],ebx
  419022:	fisttp DWORD PTR [esi+0x2510f002]
  419028:	shr    DWORD PTR [eax],1
  41902a:	pop    ss
  41902b:	pop    eax
  41902c:	inc    esp
  41902d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41902e:	(bad)  
  41902f:	repnz out dx,eax
  419031:	lods   eax,DWORD PTR ds:[esi]
  419032:	mov    edx,0x2ee38de
  419037:	pop    ebp
  419039:	cld    
  41903a:	xchg   edx,eax
  41903b:	das    
  41903c:	sbb    dl,BYTE PTR [eax+0x32cbbd73]
  419042:	inc    ebp
  419043:	add    eax,0x3d2f32f1
  419048:	je     0x4190b3
  41904a:	test   BYTE PTR [bp+si],dh
  41904d:	adc    eax,0x3e0487fc
  419052:	imul   edx,DWORD PTR [edx-0x672a4365],0xfffffff2
  419059:	fcmovne st,st(2)
  41905b:	rcl    bl,0x4b
  41905e:	jnp    0x4190b8
  419060:	sub    al,al
  419062:	mov    ch,0x86
  419064:	in     eax,0xa3
  419066:	mov    al,ds:0x51269428
  41906b:	leave  
  41906c:	xor    al,0x41
  41906e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41906f:	push   cs
  419070:	dec    esp
  419071:	inc    edx
  419072:	sub    bh,BYTE PTR [eax-0x12d92741]
  419078:	out    dx,al
  419079:	xor    al,0xe6
  41907b:	or     DWORD PTR [ecx+ecx*2+0x48353921],esp
  419082:	outs   dx,BYTE PTR ds:[esi]
  419083:	xchg   esi,eax
  419084:	loope  0x4190a7
  419086:	push   0x78
  419088:	(bad)  
  419089:	std    
  41908a:	add    al,0xf7
  41908c:	xor    edx,esp
  41908e:	jl     0x41910f
  419090:	mov    ah,0xee
  419092:	push   esi
  419093:	push   cs
  419094:	push   ebx
  419095:	cld    
  419096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419097:	jb     0x4190f2
  419099:	ss retf 
  41909b:	stos   BYTE PTR es:[edi],al
  41909c:	inc    bx
  41909e:	dec    ebx
  41909f:	loop   0x4190dd
  4190a1:	ins    DWORD PTR es:[edi],dx
  4190a2:	in     eax,0x7
  4190a4:	adc    DWORD PTR [eax-0x56],edx
  4190a7:	in     al,dx
  4190a8:	(bad)  
  4190a9:	xor    eax,0x80001a17
  4190ae:	gs std 
  4190b0:	ins    DWORD PTR es:[edi],dx
  4190b1:	sbb    cl,al
  4190b3:	in     eax,dx
  4190b4:	sub    eax,0xa41633d8
  4190b9:	push   esp
  4190ba:	jbe    0x4190bc
  4190bc:	mov    edi,0xec937d55
  4190c1:	mov    ebx,0x2e59db54
  4190c6:	call   0x88b05387
  4190cb:	xchg   esi,eax
  4190cc:	inc    esi
  4190cd:	imul   edx,DWORD PTR [edi-0x567da670],0xf923b2a3
  4190d7:	ror    esi,0x86
  4190da:	hlt    
  4190db:	lock fcom st(5)
  4190de:	xchg   edi,eax
  4190df:	or     ebx,ebx
  4190e1:	and    eax,0xf3107fc6
  4190e6:	mov    dh,0x4
  4190e8:	fist   DWORD PTR [eax-0x1130429a]
  4190ee:	stos   BYTE PTR es:[edi],al
  4190ef:	mov    eax,0x75a35fb1
  4190f4:	gs cli 
  4190f6:	or     DWORD PTR [eax-0x4089aa2e],0x2f075b1e
  419100:	mov    dl,0x80
  419102:	sti    
  419103:	push   0xae1a0aec
  419108:	int    0x7
  41910a:	dec    ebp
  41910b:	mov    ecx,0xf5c1c858
  419110:	cld    
  419111:	icebp  
  419112:	sbb    BYTE PTR [edx],dh
  419114:	loopne 0x4190f7
  419116:	jbe    0x419109
  419118:	loopne 0x419155
  41911a:	push   0x91e6fb59
  41911f:	cmc    
  419120:	push   ebx
  419121:	dec    ebx
  419122:	nop
  419123:	push   edx
  419124:	xor    dh,BYTE PTR [edi-0xf7b6c4a]
  41912a:	lods   eax,DWORD PTR ds:[esi]
  41912b:	mov    ch,0x1
  41912d:	jo     0x4190e8
  41912f:	pusha  
  419130:	xchg   edx,eax
  419131:	outs   dx,DWORD PTR ds:[esi]
  419132:	xor    al,0x51
  419134:	mov    ebx,0xf6286055
  419139:	test   al,0x80
  41913b:	shl    DWORD PTR [ebx-0x78],0x8
  41913f:	sub    al,dh
  419141:	dec    ecx
  419142:	dec    edi
  419143:	and    edi,edi
  419145:	pop    ss
  419146:	fdivrp st(7),st
  419148:	xor    eax,0x798c976b
  41914d:	int3   
  41914e:	inc    edi
  41914f:	bound  ebp,QWORD PTR [ebp+ecx*2+0x5f]
  419153:	imul   eax,DWORD PTR [esi+0x3],0x73
  419157:	mov    dl,0xbe
  419159:	outs   dx,DWORD PTR ds:[esi]
  41915a:	cmp    eax,0xe64295e1
  41915f:	les    ecx,FWORD PTR [eax]
  419161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419162:	dec    ebp
  419163:	loope  0x4190e8
  419165:	sti    
  419166:	push   ecx
  419167:	sbb    cl,bh
  419169:	(bad)  
  41916a:	jnp    0x419186
  41916c:	fldenv [eax]
  41916e:	push   ebp
  41916f:	cmc    
  419170:	lods   eax,DWORD PTR ds:[esi]
  419171:	and    dl,dl
  419173:	mov    cl,0xe1
  419175:	fcomp  QWORD PTR fs:[eax-0x59]
  419179:	jmp    0xa781fde8
  41917e:	ss inc ecx
  419180:	or     eax,0xd75ae82a
  419185:	mov    ah,0xe5
  419187:	sti    
  419188:	xlat   BYTE PTR ds:[ebx]
  419189:	jb     0x419187
  41918b:	push   eax
  41918c:	js     0x419176
  41918e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41918f:	loopne 0x4191b3
  419191:	adc    al,0xe3
  419193:	sub    dl,ah
  419195:	mov    edi,0x47cbde7a
  41919a:	mov    bh,0xc8
  41919c:	ss in  eax,dx
  41919e:	es ins DWORD PTR es:[edi],dx
  4191a0:	inc    DWORD PTR [edi]
  4191a2:	mov    WORD PTR [ecx+0x8],ss
  4191a5:	in     al,0x5c
  4191a7:	cmp    BYTE PTR [edx+0x5d],bh
  4191aa:	dec    eax
  4191ab:	pmaxsw mm4,QWORD PTR [esi]
  4191ae:	cmp    al,0xbf
  4191b0:	mov    eax,ds:0x5aa5d807
  4191b5:	jecxz  0x419166
  4191b7:	arpl   dx,ax
  4191b9:	lods   eax,DWORD PTR ds:[esi]
  4191ba:	pusha  
  4191bb:	fldcw  WORD PTR [ebp+0x6c]
  4191be:	push   ebx
  4191bf:	xchg   esp,eax
  4191c0:	mov    ch,0x45
  4191c2:	push   edi
  4191c3:	sbb    eax,0xcf930de3
  4191c8:	fdiv   QWORD PTR [ebp-0x403f77c]
  4191ce:	cld    
  4191cf:	call   0xd458:0xea3372ef
  4191d6:	cmp    BYTE PTR [edi-0x73c49d77],0x77
  4191dd:	add    dh,BYTE PTR [ecx+0x6a0db3b2]
  4191e3:	pop    edx
  4191e4:	or     cl,BYTE PTR [esi+0x25]
  4191e7:	lahf   
  4191e8:	loope  0x419230
  4191ea:	mov    eax,ds:0x155af5df
  4191ef:	retf   
  4191f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191f1:	push   ss
  4191f2:	mov    ah,0x74
  4191f4:	adc    al,0xfc
  4191f6:	mov    dl,0x32
  4191f8:	mov    eax,ds:0x5d424213
  4191fd:	inc    ecx
  4191fe:	mov    esi,0x6834822c
  419203:	loopne 0x4191ad
  419205:	xlat   BYTE PTR ds:[ebx]
  419206:	(bad)  
  419207:	pop    ebp
  419208:	in     al,dx
  419209:	jp     0x4191a4
  41920b:	fsub   st,st(5)
  41920d:	nop
  41920e:	mov    bh,0xd9
  419210:	cmp    BYTE PTR ds:0xb09a9d02,0x3c
  419217:	mov    al,ds:0x11bd180f
  41921c:	xor    cl,ah
  41921e:	dec    edx
  41921f:	add    eax,0xd111d364
  419224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419225:	fld    TBYTE PTR [ebp+0x61f66838]
  41922b:	jnp    0x41924f
  41922d:	(bad)  
  41922e:	(bad)  
  41922f:	aam    0x8a
  419231:	sub    al,0xe4
  419233:	ret    
  419234:	push   esp
  419235:	int3   
  419236:	cmp    BYTE PTR [esi],bh
  419238:	mov    ds:0x106e99a7,eax
  41923d:	mov    edi,0x2c990881
  419242:	cdq    
  419243:	cmp    al,dl
  419245:	or     BYTE PTR [edi],ah
  419247:	adc    BYTE PTR [esi],al
  419249:	and    DWORD PTR [edx+edi*1+0x7c478939],ebp
  419250:	pop    ecx
  419251:	fiadd  DWORD PTR [esi]
  419253:	pop    edi
  419254:	push   0xee7b4148
  419259:	sub    dl,BYTE PTR [ebp+0x7c5ab9af]
  41925f:	(bad)  
  419260:	push   es
  419261:	popa   
  419262:	xor    ch,bl
  419264:	out    0x41,al
  419266:	mov    edx,0x622b2532
  41926b:	scas   al,BYTE PTR es:[edi]
  41926c:	xor    eax,0xb3f3e567
  419272:	dec    esi
  419273:	js     0x419267
  419275:	push   cs
  419276:	retf   
  419277:	sub    al,0x72
  419279:	push   eax
  41927a:	xor    BYTE PTR ds:[ebp+0x7bcb263b],dh
  419281:	xchg   edx,eax
  419282:	dec    esp
  419283:	and    dh,bh
  419285:	jg     0x419248
  419287:	pop    ecx
  419288:	pop    ecx
  419289:	jne    0x4192b1
  41928b:	mov    ebx,0xed0d4bcf
  419290:	inc    ebp
  419291:	enter  0xc3a6,0xc3
  419295:	mov    ds:0xb543b1a4,al
  41929a:	pop    eax
  41929b:	aad    0xa9
  41929d:	stos   BYTE PTR es:[edi],al
  41929e:	dec    edi
  41929f:	adc    BYTE PTR [ebp-0x1b],dh
  4192a2:	adc    DWORD PTR [ebp-0x1b31ee46],edx
  4192a8:	in     al,0x4b
  4192aa:	fcomip st,st(0)
  4192ac:	add    DWORD PTR [ebp-0x3059fe40],edi
  4192b2:	outs   dx,BYTE PTR ss:[esi]
  4192b4:	and    al,0xde
  4192b7:	hlt    
  4192b8:	mov    al,0x4a
  4192ba:	jle    0x419303
  4192bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192bd:	jl     0x41931d
  4192bf:	in     eax,0x5
  4192c1:	add    BYTE PTR [ebp-0x71],0x31
  4192c5:	add    ah,BYTE PTR [ebx]
  4192c7:	and    BYTE PTR ss:[ebx+edx*8],cl
  4192cb:	jns    0x41924d
  4192cd:	ret    
  4192ce:	arpl   WORD PTR [eax-0x7a6dc50a],ax
  4192d4:	pop    ss
  4192d5:	add    BYTE PTR [edx+0x787e92dc],cl
  4192db:	inc    esp
  4192dc:	lock sub DWORD PTR [ebx+0x35472437],ebp
  4192e3:	xor    eax,0x99d3e5cc
  4192e8:	retf   0x7f67
  4192eb:	and    eax,0x1b120f3b
  4192f0:	daa    
  4192f1:	imul   BYTE PTR [esi+0x20ad1135]
  4192f7:	dec    eax
  4192f8:	dec    di
  4192fa:	inc    ebp
  4192fb:	xor    edx,DWORD PTR [ebx]
  4192fd:	pop    edx
  4192fe:	call   0x7ee9:0x928b746b
  419305:	ins    DWORD PTR es:[edi],dx
  419306:	dec    ebp
  419307:	jae    0x4192e1
  419309:	es sbb al,0x9e
  41930c:	mov    eax,ebp
  41930e:	and    DWORD PTR [ebx-0x16ea4719],0xa0f22a02
  419318:	ja     0x4192bc
  41931a:	mov    ecx,0x123b3ce2
  41931f:	and    cl,BYTE PTR [edx-0x6779fd6f]
  419325:	add    esp,DWORD PTR [eax]
  419327:	xor    dl,al
  419329:	ret    0x28cd
  41932c:	push   ecx
  41932d:	ja     0x41933e
  41932f:	mov    ebp,0x2d0172a1
  419334:	push   ecx
  419335:	cmp    BYTE PTR [ebx],0x63
  419338:	fdivr  QWORD PTR [esi]
  41933a:	fwait
  41933b:	lahf   
  41933c:	div    DWORD PTR [edx-0x4f]
  41933f:	pandn  mm2,QWORD PTR [ebx]
  419342:	out    dx,al
  419343:	(bad)  
  419345:	mov    esi,0x8be0bf28
  41934a:	xchg   esi,eax
  41934b:	icebp  
  41934c:	pop    edi
  41934d:	mov    WORD PTR [edx-0x24d2a859],cs
  419353:	sbb    ch,cl
  419355:	mov    ch,BYTE PTR ds:0x36b7693c
  41935b:	dec    ebp
  41935c:	xor    ch,BYTE PTR [edi+0x5cfbac3a]
  419362:	jp     0x4192ed
  419364:	sub    al,0x88
  419366:	cli    
  419367:	shr    DWORD PTR [esi-0x1c96b3cd],0x29
  41936e:	lods   al,BYTE PTR ds:[esi]
  41936f:	(bad)  
  419370:	cmc    
  419371:	mov    bh,0x95
  419373:	xchg   BYTE PTR [esi],cl
  419375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419376:	jmp    0xd32fd890
  41937b:	jmp    0x4e707dd2
  419380:	mov    esp,0xe61f318c
  419385:	dec    esi
  419386:	aam    0xb8
  419388:	adc    edi,DWORD PTR [ecx]
  41938a:	sar    BYTE PTR [eax-0x53],0x13
  41938e:	pop    ds
  41938f:	hlt    
  419390:	xor    DWORD PTR [edi-0x3c96f32b],edi
  419396:	repz jb 0x41935b
  419399:	aam    0x94
  41939b:	pop    es
  41939c:	cmp    BYTE PTR [ecx+0x10],0xb3
  4193a0:	push   ecx
  4193a1:	adc    DWORD PTR [ebp-0x7e111085],0x26
  4193a8:	imul   al
  4193aa:	mov    esi,0x40b63c25
  4193af:	ret    
  4193b0:	pop    ds
  4193b1:	ret    
  4193b2:	hlt    
  4193b3:	inc    edi
  4193b4:	mov    ecx,0xeb0968d9
  4193b9:	lods   al,BYTE PTR ds:[esi]
  4193ba:	inc    ebp
  4193bb:	mov    esp,0x1c5fd7a8
  4193c0:	mov    bh,0x8d
  4193c2:	out    0x9b,al
  4193c4:	arpl   dx,bx
  4193c6:	loope  0x4193f0
  4193c8:	sub    eax,0x38b31cc1
  4193cd:	or     al,0x48
  4193cf:	jns    0x419398
  4193d1:	sar    DWORD PTR [eax-0x59e10962],0xa6
  4193d8:	push   ebp
  4193d9:	rcr    BYTE PTR [edx],1
  4193db:	xlat   BYTE PTR ds:[ebx]
  4193dc:	adc    eax,0xd1f637af
  4193e1:	sub    edx,DWORD PTR [edx]
  4193e3:	ret    
  4193e4:	push   edx
  4193e5:	pushf  
  4193e6:	pop    edx
  4193e7:	push   0xffffffb2
  4193e9:	sbb    DWORD PTR [ebx-0x16],edx
  4193ec:	sbb    ecx,DWORD PTR [edi-0x11]
  4193ef:	sahf   
  4193f0:	out    0x93,al
  4193f2:	arpl   WORD PTR [edx+0x3a],sp
  4193f5:	push   cs
  4193f6:	in     eax,0x4b
  4193f8:	int    0x55
  4193fa:	jns    0x419475
  4193fc:	pop    ecx
  4193fd:	sub    eax,0x48d196ef
  419402:	ins    BYTE PTR es:[edi],dx
  419403:	imul   ecx,DWORD PTR [eax+0x31baf4e6],0x4ca26354
  41940d:	je     0x41941f
  41940f:	inc    edx
  419410:	cdq    
  419411:	pushf  
  419412:	lock sbb ecx,edx
  419415:	je     0x41943f
  419417:	push   0xffffffbc
  419419:	xor    eax,0x6004a10e
  41941e:	sub    BYTE PTR [edx],dl
  419420:	jb     0x4193a2
  419422:	push   0x948b5739
  419427:	sub    eax,0xae208bb4
  41942c:	pop    ebp
  41942d:	scas   eax,DWORD PTR es:[edi]
  41942e:	push   0xffffffb7
  419430:	add    DWORD PTR [ebx+eiz*1],eax
  419433:	sbb    BYTE PTR [edx+0x474fbc0a],dh
  419439:	push   esp
  41943a:	mov    ebp,0xd9919072
  41943f:	bound  ebx,QWORD PTR [ebx+0x21]
  419442:	lea    ebx,[esi-0x51]
  419445:	pop    ecx
  419446:	lods   eax,DWORD PTR ds:[esi]
  419447:	xor    al,0x2b
  419449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41944a:	aad    0xc4
  41944c:	iret   
  41944d:	xor    DWORD PTR [ebp-0x4c],ebp
  419450:	data16 or ch,0x1e
  419454:	iret   
  419455:	push   edx
  419456:	pop    ds
  419457:	rcr    BYTE PTR [edx+0x3a],0x67
  41945b:	xlat   BYTE PTR ds:[ebx]
  41945c:	pop    eax
  41945d:	ret    0x59bb
  419460:	(bad)  
  419461:	mov    DWORD PTR [edx],esp
  419463:	dec    esi
  419464:	and    al,dh
  419466:	push   edi
  419467:	dec    esi
  419468:	iret   
  419469:	jmp    FWORD PTR [edx+0x77]
  41946c:	inc    esp
  41946d:	sbb    eax,0x91f45497
  419472:	fisub  DWORD PTR [edx+0x7]
  419475:	mov    es:0xfbd37220,eax
  41947b:	pop    ds
  41947c:	lea    esp,[esi+0xa265bd1]
  419482:	mov    cl,BYTE PTR [ebx]
  419484:	mov    ch,0x19
  419486:	out    dx,al
  419487:	mov    esi,DWORD PTR [edx-0x499ccf1]
  41948d:	mov    DWORD PTR [ebp+0x3610d1f8],esp
  419493:	or     DWORD PTR [edi+0x247b5435],edi
  419499:	or     dh,ch
  41949b:	addr16 cmc 
  41949d:	lods   eax,DWORD PTR ds:[esi]
  41949e:	cld    
  41949f:	(bad)  
  4194a1:	mov    bl,0xd1
  4194a3:	jbe    0x4194fd
  4194a5:	aam    0x8
  4194a7:	lods   eax,DWORD PTR ds:[esi]
  4194a8:	sub    DWORD PTR [ebp+edi*1-0x62],esi
  4194ac:	mul    DWORD PTR [edi]
  4194ae:	sbb    DWORD PTR [eax-0x31be7965],esp
  4194b4:	add    edx,DWORD PTR [edx]
  4194b6:	push   esp
  4194b7:	add    edi,edx
  4194b9:	xor    dh,BYTE PTR [esi]
  4194bb:	xchg   edx,eax
  4194bc:	outs   dx,DWORD PTR ds:[esi]
  4194bd:	fild   QWORD PTR [ebx-0x11bf121d]
  4194c3:	sbb    ecx,ebp
  4194c5:	sbb    eax,0x3819f9b5
  4194ca:	push   0x9
  4194cc:	mov    ch,0xb7
  4194ce:	inc    ebp
  4194cf:	xor    eax,0xb0cacf06
  4194d4:	xchg   ebp,eax
  4194d5:	and    ch,BYTE PTR [eax+0x48]
  4194d8:	pop    ss
  4194d9:	sub    ebx,DWORD PTR [esi]
  4194db:	addr16 jl 0x419518
  4194de:	fst    st(3)
  4194e0:	outs   dx,DWORD PTR ds:[esi]
  4194e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194e2:	sub    ebp,DWORD PTR [ebp-0x12d47e68]
  4194e8:	mov    bh,0xb3
  4194ea:	jne    0x419562
  4194ec:	popf   
  4194ed:	sbb    DWORD PTR [esp+ebp*1+0x2cfed455],edi
  4194f4:	cwde   
  4194f5:	pushf  
  4194f6:	mov    bl,0xfe
  4194f8:	les    ebp,FWORD PTR [ebp+0x566f9f1f]
  4194fe:	jge    0x4194ab
  419500:	xor    al,0x50
  419502:	data16 aas 
  419504:	xor    al,0x67
  419506:	add    edi,DWORD PTR [ecx]
  419508:	sub    ebx,ebx
  41950a:	mov    DWORD PTR [ebx],ecx
  41950c:	call   0xc9c1f2dd
  419511:	aas    
  419512:	mov    eax,DWORD PTR [edi]
  419514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419515:	mov    edi,0x503830fe
  41951a:	mov    bh,0x8e
  41951c:	sub    al,0x41
  41951e:	sti    
  41951f:	aaa    
  419520:	sub    al,0x6f
  419522:	push   cs
  419523:	push   ss
  419524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419525:	retf   0x27dc
  419528:	jmp    0xcd3df0ce
  41952d:	addr16 add al,0x5b
  419530:	push   es
  419531:	outs   dx,DWORD PTR ds:[esi]
  419532:	out    0xcb,al
  419534:	js     0x4194f0
  419536:	xchg   edi,eax
  419537:	pop    ds
  419538:	cmp    eax,0x6dfc5ad7
  41953d:	push   edx
  41953e:	int    0xe8
  419540:	inc    ecx
  419541:	popf   
  419542:	pushf  
  419543:	mov    dl,0xc6
  419545:	int    0x1f
  419547:	pusha  
  419548:	leave  
  419549:	jbe    0x41957f
  41954b:	xlat   BYTE PTR ds:[ebx]
  41954c:	pop    edx
  41954d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41954e:	shl    eax,cl
  419550:	pop    eax
  419551:	ret    
  419552:	je     0x419541
  419554:	in     eax,0xa7
  419556:	dec    eax
  419557:	data16 or ch,ch
  41955a:	or     eax,0xaed18ab0
  41955f:	mov    DWORD PTR [ebx],ecx
  419561:	fimul  DWORD PTR [edx-0x7aedd845]
  419567:	jb     0x4195dd
  419569:	int3   
  41956a:	dec    edx
  41956b:	push   esp
  41956c:	repz jmp 0x8eb0:0x8b542f56
  419574:	(bad)  
  419575:	or     al,0x86
  419577:	mov    eax,DWORD PTR [edx+edi*2]
  41957a:	push   edx
  41957b:	(bad)  
  41957c:	push   ss
  41957d:	pop    es
  41957e:	neg    eax
  419580:	les    ecx,FWORD PTR [edi-0x33]
  419583:	scas   eax,DWORD PTR es:[edi]
  419584:	adc    DWORD PTR [ebx],esp
  419586:	mov    ds:0xa423300f,al
  41958b:	push   es
  41958c:	add    BYTE PTR [ecx+0x3f],dh
  41958f:	int    0x12
  419591:	sbb    esp,DWORD PTR [ecx+0x9e2221f]
  419597:	or     DWORD PTR [ecx+ecx*8-0x59],ebx
  41959b:	es sbb eax,0x2a4f0dd9
  4195a1:	(bad)  [edx]
  4195a3:	and    ch,BYTE PTR [esi-0x316ed9ad]
  4195a9:	pushf  
  4195aa:	ins    BYTE PTR es:[edi],dx
  4195ab:	pop    ebx
  4195ac:	mov    bh,0xac
  4195ae:	loop   0x41959b
  4195b0:	shl    BYTE PTR [ebx-0x2ea25474],1
  4195b6:	jl     0x41954b
  4195b8:	push   ss
  4195b9:	and    al,0xb1
  4195bb:	jmp    0x419586
  4195bd:	jmp    0x7e4d:0xdd33852a
  4195c4:	sub    ebx,DWORD PTR [bp+si+0x54ce]
  4195c9:	shl    BYTE PTR [ebx+0x8],1
  4195cc:	daa    
  4195cd:	cmc    
  4195ce:	loopne 0x419588
  4195d0:	jno    0x419564
  4195d2:	fistp  DWORD PTR [ebx+edx*8+0x7f]
  4195d6:	and    bl,dh
  4195d8:	add    DWORD PTR [ebx+0xb0d09bc],esp
  4195de:	push   ds
  4195df:	jno    0x4195a8
  4195e1:	lods   al,BYTE PTR ds:[esi]
  4195e2:	xor    al,0xbd
  4195e4:	mov    edx,0xddfba5c4
  4195e9:	test   BYTE PTR [ebp+0x730347a2],0x60
  4195f0:	imul   DWORD PTR [esi]
  4195f2:	mov    edi,0xe134ed8f
  4195f7:	ret    0x270b
  4195fa:	mov    WORD PTR ds:[ebp+0x6c],ds
  4195fe:	rol    DWORD PTR [edx],0x5a
  419601:	push   ebp
  419602:	and    eax,0x5690030f
  419607:	mov    esi,0xe16e5399
  41960c:	mov    eax,0x193ad301
  419611:	fld    st(4)
  419613:	setg   BYTE PTR [edi+ebp*4]
  419617:	jp     0x41963d
  419619:	test   al,0x17
  41961b:	mov    ecx,0x8d9abefd
  419620:	or     dl,bh
  419622:	lea    esi,[ebp-0x7a]
  419625:	cli    
  419626:	clc    
  419627:	dec    edi
  419628:	mov    al,ds:0x74ff839e
  41962d:	xor    eax,0xef2b9f7
  419632:	int    0xb3
  419634:	or     al,BYTE PTR [ebx]
  419636:	icebp  
  419637:	dec    DWORD PTR [edi]
  419639:	in     al,dx
  41963a:	xchg   esi,eax
  41963b:	mov    ecx,0xb56e4f40
  419640:	std    
  419641:	add    DWORD PTR es:[edx],0xab7ba
  419648:	add    ch,dh
  41964a:	outs   dx,DWORD PTR ds:[esi]
  41964b:	cmp    DWORD PTR [ebp+0x70ac8a3f],eax
  419651:	dec    esp
  419652:	mov    esi,0xd766e322
  419657:	jno    0x4195fc
  419659:	adc    dh,bl
  41965b:	and    al,0x9e
  41965d:	test   BYTE PTR [edx+0x11916f14],dh
  419663:	sub    BYTE PTR [edx-0x7343e5c8],dh
  419669:	fdiv   DWORD PTR [eax+0x57f48b3]
  41966f:	jne    0x4196c5
  419671:	nop
  419672:	push   ebx
  419673:	test   BYTE PTR [ecx-0x32],bl
  419676:	inc    edx
  419677:	pop    ebx
  419678:	fsub   QWORD PTR [edi]
  41967a:	out    0x9d,eax
  41967c:	fwait
  41967d:	inc    eax
  41967e:	inc    eax
  41967f:	mov    ch,0x7f
  419681:	mov    ds:0x18f4a1f0,al
  419686:	jecxz  0x4196cb
  419688:	dec    eax
  419689:	mov    WORD PTR [edx+0x31],fs
  41968c:	and    edx,eax
  41968e:	lea    ecx,[edx]
  419690:	jp     0x41964d
  419692:	cwde   
  419693:	jae    0x4196fc
  419695:	and    eax,0x2d8b922a
  41969a:	es cdq 
  41969c:	int3   
  41969d:	cli    
  41969e:	aaa    
  41969f:	mov    ecx,DWORD PTR [ecx-0x7a3d0a82]
  4196a5:	xor    BYTE PTR [edi-0x5dd09375],0x2d
  4196ac:	dec    esp
  4196ad:	pop    ss
  4196ae:	outs   dx,BYTE PTR ds:[esi]
  4196af:	and    DWORD PTR [esi+0x3c],edx
  4196b2:	iret   
  4196b3:	shl    BYTE PTR [ecx],cl
  4196b5:	test   eax,0x1f1cb73d
  4196ba:	mov    ebp,0xca064b3e
  4196bf:	sets   BYTE PTR [eax+0x79dc2cde]
  4196c6:	cmp    al,0x83
  4196c8:	sar    DWORD PTR [ecx-0x47],1
  4196cb:	loope  0x41972d
  4196cd:	ficomp DWORD PTR [eax+0x4]
  4196d0:	loop   0x4196e3
  4196d2:	js     0x4196aa
  4196d4:	push   edx
  4196d5:	mov    BYTE PTR [edx+0x3880423e],bl
  4196db:	pop    esi
  4196dc:	std    
  4196dd:	imul   ecx,DWORD PTR [esi],0x74
  4196e0:	stos   DWORD PTR es:[edi],eax
  4196e1:	add    DWORD PTR [edx-0x37ae1a7b],ebx
  4196e7:	jae    0x419711
  4196e9:	mov    ds:0x7d83723e,eax
  4196ee:	inc    ecx
  4196ef:	or     dl,BYTE PTR [eax-0x2d]
  4196f2:	je     0x41976e
  4196f4:	push   ebp
  4196f5:	jg     0x419724
  4196f7:	push   cs
  4196f8:	dec    esp
  4196f9:	js     0x419702
  4196fb:	test   al,0xa9
  4196fd:	int3   
  4196fe:	jnp    0x4196ee
  419700:	ret    0x3d10
  419703:	jecxz  0x419769
  419705:	add    edi,DWORD PTR fs:[ecx]
  419708:	and    al,0xb9
  41970a:	out    0x6e,al
  41970c:	xchg   ebp,eax
  41970d:	ss aas 
  41970f:	and    dh,BYTE PTR [edx]
  419711:	retf   0xa783
  419714:	mov    edi,0x8a664220
  419719:	sub    ch,BYTE PTR [esi]
  41971b:	fild   DWORD PTR [ecx]
  41971d:	push   es
  41971e:	mov    cl,0x1f
  419720:	adc    DWORD PTR [ebx-0x76],esi
  419723:	scas   al,BYTE PTR es:[edi]
  419724:	lock outs dx,DWORD PTR ds:[esi]
  419726:	or     BYTE PTR [esi],bh
  419728:	and    al,0x8a
  41972a:	out    dx,al
  41972b:	jbe    0x41975f
  41972d:	xchg   esi,eax
  41972e:	cmp    cl,al
  419730:	xchg   esi,eax
  419731:	hlt    
  419732:	sti    
  419733:	push   ecx
  419734:	and    edx,ebx
  419736:	fst    DWORD PTR [esi+ebp*2+0x39]
  41973a:	adc    esp,DWORD PTR [edi-0x275ba414]
  419740:	adc    ch,bl
  419742:	push   0x64
  419744:	mov    ch,0x84
  419746:	pop    ecx
  419747:	int    0x8a
  419749:	push   eax
  41974a:	repz idiv BYTE PTR [esi+esi*8-0x6f]
  41974f:	mov    ecx,DWORD PTR [ebx+0x3d]
  419752:	mov    dh,0x30
  419754:	inc    edx
  419755:	add    DWORD PTR [esi-0x5],esp
  419758:	mov    ah,BYTE PTR ds:0xa9c67016
  41975e:	loopne 0x41971b
  419760:	ficomp DWORD PTR [ebp-0x3d]
  419763:	xchg   edi,eax
  419764:	out    dx,al
  419765:	jb     0x41979d
  419767:	pop    edi
  419768:	lods   al,BYTE PTR ds:[esi]
  419769:	jne    0x41973d
  41976b:	pop    ds
  41976c:	ret    
  41976d:	sar    al,cl
  41976f:	aas    
  419770:	bound  ebx,QWORD PTR [esi-0x5e4a9a2b]
  419776:	push   edi
  419777:	mov    ecx,0x14d8ccda
  41977c:	or     ecx,DWORD PTR [eax-0x26]
  41977f:	(bad)  [edi+0x61]
  419782:	jae    0x419732
  419784:	pushf  
  419785:	frstor [edi]
  419787:	outs   dx,DWORD PTR ds:[esi]
  419788:	out    dx,eax
  419789:	xor    cl,dh
  41978b:	stos   DWORD PTR es:[edi],eax
  41978c:	xchg   edi,eax
  41978d:	stos   DWORD PTR es:[edi],eax
  41978e:	mov    ebx,0x94711969
  419793:	jno    0x41972d
  419795:	or     ch,ch
  419797:	clc    
  419798:	int    0x2f
  41979a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41979b:	call   0x1463:0x88fd338c
  4197a2:	loopne 0x419810
  4197a4:	pinsrw mm0,eax,0x29
  4197a8:	out    0x96,eax
  4197aa:	ds jecxz 0x41973c
  4197ad:	out    dx,al
  4197ae:	cmp    bh,bh
  4197b0:	call   0xdba7a3ac
  4197b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197b6:	shl    DWORD PTR [edi+0x1be3cf77],1
  4197bc:	mov    bh,0xbd
  4197be:	and    ebx,DWORD PTR [ebx+0x27]
  4197c1:	(bad)  
  4197c2:	mov    ds:0xfc832b29,al
  4197c7:	(bad)  [ebx-0x6d]
  4197ca:	lea    esp,[edx-0xcc75039]
  4197d0:	cmp    al,0x87
  4197d2:	shr    ebx,0x1d
  4197d5:	ss xor al,0xde
  4197d8:	ja     0x41975b
  4197da:	pusha  
  4197db:	in     eax,0x50
  4197dd:	cdq    
  4197de:	add    eax,0xc41b835e
  4197e3:	mov    bh,0xa7
  4197e5:	mov    eax,ds:0xbeb79b9d
  4197ea:	jg     0x419866
  4197ec:	arpl   di,sp
  4197ee:	int3   
  4197ef:	dec    ecx
  4197f0:	sbb    ecx,ecx
  4197f2:	retf   
  4197f3:	jbe    0x4197b9
  4197f5:	or     eax,0xb9803e20
  4197fa:	adc    BYTE PTR [edx+0x51e71f81],0x3f
  419801:	adc    esp,DWORD PTR [edx+0x39dd37b8]
  419807:	cwde   
  419808:	mov    esi,0x27f303cb
  41980d:	jle    0x419800
  41980f:	ror    DWORD PTR [eax+0x66],1
  419812:	aam    0x7a
  419814:	repnz cmp BYTE PTR [edi-0x15],bl
  419818:	jmp    0xf89bd627
  41981d:	into   
  41981e:	push   ebp
  41981f:	xor    eax,0x33a29205
  419824:	test   al,0x16
  419826:	frndint 
  419828:	data16 aam 0x94
  41982b:	cmp    al,0xde
  41982d:	fnsave [edx+ebx*1]
  419830:	or     cl,BYTE PTR [eax+edi*2]
  419833:	cs sub al,0x55
  419837:	scas   eax,DWORD PTR es:[edi]
  419838:	stos   DWORD PTR es:[edi],eax
  419839:	icebp  
  41983a:	imul   BYTE PTR [eax-0x11960f17]
  419840:	xchg   ebx,eax
  419841:	test   eax,0xd29e0efc
  419846:	push   edi
  419847:	cmp    BYTE PTR ds:0xe84d8ae1,dh
  41984d:	xchg   ecx,eax
  41984e:	or     eax,0x465f2e1d
  419853:	sbb    edi,DWORD PTR [esi+eax*8-0xf]
  419857:	aad    0x7a
  419859:	nop
  41985a:	enter  0x3504,0xf1
  41985e:	fild   WORD PTR [ecx+0x38]
  419861:	stc    
  419862:	cli    
  419863:	sbb    bl,BYTE PTR [ecx-0x66]
  419866:	test   BYTE PTR [eax+0x54b2d9ee],al
  41986c:	xchg   BYTE PTR [eax+0x2bbc353e],dh
  419872:	jge    0x419862
  419874:	push   edx
  419875:	out    0xa4,al
  419877:	jl     0x419825
  419879:	inc    ecx
  41987a:	sbb    edi,DWORD PTR [edx+0x7fc68985]
  419880:	mov    bl,0xc4
  419882:	or     eax,0x58852c6f
  419887:	add    eax,0xa14c213
  41988c:	loop   0x419851
  41988e:	ss fst st(4)
  419891:	mov    ds:0xcca3cdba,al
  419896:	push   ds
  419897:	in     eax,dx
  419898:	fisub  WORD PTR [edx+0x5a]
  41989b:	mov    ebx,0xe7c123ea
  4198a0:	pop    esp
  4198a1:	inc    edx
  4198a2:	jae    0x4198da
  4198a4:	jl     0x419898
  4198a6:	fucomi st,st(0)
  4198a8:	inc    esi
  4198a9:	sbb    BYTE PTR [edx],bh
  4198ab:	scas   eax,DWORD PTR es:[edi]
  4198ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198ad:	dec    ebp
  4198ae:	mov    ah,BYTE PTR [eax+0x16]
  4198b1:	loopne 0x4198a8
  4198b3:	outs   dx,BYTE PTR ds:[esi]
  4198b4:	scas   al,BYTE PTR es:[edi]
  4198b5:	xchg   edx,eax
  4198b6:	(bad)  
  4198b7:	daa    
  4198b8:	or     DWORD PTR [esi+0x6a572b0d],eax
  4198be:	or     DWORD PTR [eax+0x6],ebx
  4198c1:	pop    ebx
  4198c2:	push   edi
  4198c3:	adc    eax,0xddc44f49
  4198c8:	call   0x75347078
  4198cd:	dec    edx
  4198ce:	mov    ebp,0x91efa4b4
  4198d3:	push   es
  4198d4:	or     eax,0x15e8e1ba
  4198d9:	xlat   BYTE PTR ds:[ebx]
  4198da:	push   edi
  4198db:	pop    esi
  4198dc:	(bad)  
  4198dd:	imul   eax,ebx,0x2214b2ae
  4198e3:	dec    eax
  4198e4:	mov    edx,0x7b6b78b1
  4198e9:	pusha  
  4198ea:	popf   
  4198eb:	imul   BYTE PTR [edx+0x3a]
  4198ee:	int3   
  4198ef:	push   ecx
  4198f0:	inc    ebp
  4198f1:	in     eax,dx
  4198f2:	js     0x419899
  4198f4:	dec    ebx
  4198f5:	or     dl,ah
  4198f7:	mov    al,0xef
  4198f9:	or     DWORD PTR [esi+0x53],ebx
  4198fc:	and    BYTE PTR [ecx-0x6a112dea],al
  419902:	fild   WORD PTR [ebx]
  419904:	add    BYTE PTR [esi-0x4dce849a],al
  41990a:	pop    edi
  41990b:	sub    al,0xac
  41990d:	and    BYTE PTR [eax-0x393f070d],dl
  419913:	fwait
  419914:	pop    eax
  419915:	fadd   QWORD PTR [ecx-0x6e]
  419918:	dec    edx
  419919:	leave  
  41991a:	je     0x4198f4
  41991c:	push   edi
  41991d:	inc    ebx
  41991e:	xchg   ecx,eax
  41991f:	xchg   ecx,eax
  419920:	lods   al,BYTE PTR ds:[esi]
  419921:	fst    DWORD PTR [eax-0x7cea7359]
  419927:	je     0x41994d
  419929:	adc    dl,BYTE PTR [ebx+0x2e468d11]
  41992f:	je     0x4198f9
  419931:	add    eax,0xe94b4837
  419936:	aas    
  419937:	add    DWORD PTR [ebx+0x33da2ef5],edi
  41993d:	pop    edx
  41993e:	mov    BYTE PTR [esi+0x53],dh
  419941:	push   0xffffff8b
  419943:	add    ah,BYTE PTR [edx]
  419945:	dec    eax
  419946:	add    esp,DWORD PTR [edx]
  419948:	dec    ebx
  419949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41994a:	test   DWORD PTR [ecx],0x7bf595d4
  419950:	mov    edi,0x65f74a63
  419955:	mov    esi,0x2cb6f8ff
  41995a:	inc    edx
  41995b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41995c:	(bad)  
  41995d:	fs jns 0x4199a4
  419960:	push   0x7fc282be
  419965:	cmp    cl,BYTE PTR [edx+ebp*4]
  419968:	aas    
  419969:	jg     0x4199c6
  41996b:	dec    edx
  41996c:	and    al,0x90
  41996e:	jns    0x41994b
  419970:	push   0xffffffe2
  419972:	pop    edi
  419973:	and    edx,DWORD PTR [esi+0x5f]
  419976:	int    0xb9
  419978:	xchg   ebx,eax
  419979:	push   cs
  41997a:	(bad)  
  41997b:	cld    
  41997c:	mov    dh,0xc2
  41997e:	aas    
  41997f:	push   0x10
  419981:	jecxz  0x4199d8
  419983:	dec    esp
  419984:	enter  0xb90d,0x99
  419988:	inc    eax
  419989:	adc    eax,DWORD PTR [ebx]
  41998b:	mov    dl,0x9c
  41998d:	loopne 0x41995c
  41998f:	cmp    BYTE PTR ds:0xb62295cf,dl
  419995:	in     al,0x9a
  419997:	sbb    bh,BYTE PTR [ebx-0x4689869]
  41999d:	mov    esp,0x8d4200cc
  4199a2:	xor    ecx,DWORD PTR [ecx+eiz*8]
  4199a5:	fld    DWORD PTR [edi-0x55]
  4199a8:	mov    dl,0xf6
  4199aa:	ins    BYTE PTR es:[edi],dx
  4199ab:	cmp    bl,BYTE PTR [edx+ebx*1]
  4199ae:	(bad)  
  4199af:	retf   
  4199b0:	mov    al,0x37
  4199b2:	outs   dx,DWORD PTR ds:[esi]
  4199b3:	sbb    cl,ch
  4199b5:	pushf  
  4199b6:	xchg   esp,eax
  4199b7:	cwde   
  4199b8:	repnz es push esp
  4199bb:	xchg   ecx,eax
  4199bc:	and    eax,0xbe07989e
  4199c1:	inc    esp
  4199c2:	and    edi,ebp
  4199c4:	iret   
  4199c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199c6:	jge    0x419a04
  4199c8:	xchg   ebp,eax
  4199c9:	rol    dl,0x9e
  4199cc:	fild   DWORD PTR [ebx]
  4199ce:	adc    al,0x68
  4199d0:	lahf   
  4199d1:	rcr    al,0x4f
  4199d4:	add    BYTE PTR [edi+0x7b0cc85],cl
  4199da:	cld    
  4199db:	push   edx
  4199dc:	in     eax,0xa7
  4199de:	sub    eax,0x994fe09e
  4199e3:	dec    ecx
  4199e4:	inc    esp
  4199e5:	out    dx,al
  4199e6:	adc    al,0x7
  4199e8:	pop    eax
  4199e9:	stc    
  4199ea:	xor    eax,DWORD PTR [ebx+esi*4+0x20]
  4199ee:	or     BYTE PTR [esi-0x5286785f],bl
  4199f4:	or     eax,0xb1cb736e
  4199f9:	iret   
  4199fa:	push   edx
  4199fb:	test   BYTE PTR [ecx+0x2b],ch
  4199fe:	cmp    al,0xc4
  419a00:	stos   BYTE PTR es:[edi],al
  419a01:	sub    bl,BYTE PTR [esi-0x14c30a3c]
  419a07:	leave  
  419a08:	xor    ebp,DWORD PTR [edx+esi*1+0x33c80239]
  419a0f:	loopne 0x4199aa
  419a11:	push   0x438db7a6
  419a16:	loopne 0x4199dc
  419a18:	js     0x41999f
  419a1a:	or     edi,DWORD PTR [eax+0x1f]
  419a1d:	xchg   esp,eax
  419a1e:	xchg   esp,eax
  419a1f:	mov    ds,WORD PTR [edi+0xe72f592]
  419a25:	cmp    al,0xb2
  419a27:	push   ecx
  419a28:	and    ah,BYTE PTR [ebp-0x7c336390]
  419a2e:	xrelease xchg BYTE PTR [ecx],ch
  419a31:	push   ss
  419a32:	loope  0x419a0a
  419a34:	sub    al,0x9e
  419a36:	xor    edi,DWORD PTR [ebp-0x21]
  419a39:	scas   al,BYTE PTR es:[edi]
  419a3a:	mov    edi,0xf495694
  419a3f:	sbb    al,0xed
  419a41:	and    al,0xeb
  419a43:	nop
  419a44:	xchg   al,dh
  419a46:	dec    edi
  419a47:	fistp  DWORD PTR [esp+ecx*8]
  419a4a:	push   0xffffffd6
  419a4c:	pop    esi
  419a4d:	es mov ch,0xbd
  419a50:	retf   
  419a51:	not    bl
  419a53:	pusha  
  419a54:	pop    ecx
  419a55:	bound  ecx,QWORD PTR [edi-0x7dfad706]
  419a5b:	scas   al,BYTE PTR es:[edi]
  419a5c:	call   0x4a83:0xc74321eb
  419a63:	shl    eax,cl
  419a65:	test   BYTE PTR [eax+0x71],ch
  419a68:	inc    esi
  419a69:	pop    eax
  419a6a:	cmc    
  419a6b:	adc    al,0x50
  419a6d:	pop    ebx
  419a6e:	(bad)  
  419a6f:	dec    edi
  419a70:	cdq    
  419a71:	mov    al,0xa3
  419a73:	mov    ecx,DWORD PTR gs:[eax-0x6e]
  419a77:	or     BYTE PTR [edi-0x24],0xf
  419a7b:	adc    DWORD PTR [ebx-0x1c],ebx
  419a7e:	pop    esi
  419a7f:	scas   eax,DWORD PTR es:[edi]
  419a80:	stos   BYTE PTR es:[edi],al
  419a81:	mov    BYTE PTR [esi+0x51a8b11c],bl
  419a87:	xchg   ecx,eax
  419a88:	fimul  WORD PTR [eax]
  419a8a:	clc    
  419a8b:	or     eax,0x7bfabe64
  419a90:	or     ebx,DWORD PTR [eax]
  419a92:	enter  0x1456,0x9c
  419a96:	xchg   ebx,eax
  419a97:	and    eax,0x9cb5b884
  419a9c:	pushw  cs
  419a9e:	cmp    ah,BYTE PTR [eax+0x11368b2f]
  419aa4:	cmp    cl,BYTE PTR [edx]
  419aa6:	sbb    edi,ebp
  419aa8:	add    al,0xd8
  419aaa:	retf   0xe675
  419aad:	push   esp
  419aae:	gs mov ch,0xb3
  419ab1:	js     0x419aa4
  419ab3:	mov    ebp,0x819d4c77
  419ab8:	js     0x419b2e
  419aba:	mov    eax,0x3d0c4d6b
  419abf:	dec    esp
  419ac0:	ja     0x419ab6
  419ac2:	mov    edx,0xbf1bb3a1
  419ac7:	pop    esi
  419ac8:	mov    ch,0x8f
  419aca:	and    ebx,edx
  419acc:	fucom  st(2)
  419ace:	aam    0x39
  419ad0:	inc    ebp
  419ad1:	retf   0x1eef
  419ad4:	jae    0x419ab8
  419ad6:	cmp    eax,0xe3540c4e
  419adb:	cli    
  419adc:	adc    bh,BYTE PTR [ebx-0x1bb427ac]
  419ae2:	mov    ecx,0xfe6ac168
  419ae7:	jae    0x419b5d
  419ae9:	clc    
  419aea:	out    0xe3,al
  419aec:	inc    ecx
  419aed:	fdivr  st(7),st
  419aef:	pop    esp
  419af0:	ret    0x1961
  419af3:	mov    ss,WORD PTR [esi]
  419af5:	mov    dl,0xb8
  419af7:	jecxz  0x419ad8
  419af9:	scas   al,BYTE PTR es:[edi]
  419afa:	ja     0x419a80
  419afc:	mov    eax,ds:0x514adfd
  419b01:	je     0x419b63
  419b03:	xchg   esp,eax
  419b04:	retf   0x7278
  419b07:	and    DWORD PTR [esi],0xffffffea
  419b0a:	dec    ecx
  419b0b:	xchg   ebx,eax
  419b0c:	mov    al,0xb3
  419b0e:	dec    edi
  419b0f:	arpl   WORD PTR [ecx+0x77],di
  419b12:	sub    al,0xf2
  419b14:	loope  0x419b4b
  419b16:	pop    ecx
  419b17:	or     ch,BYTE PTR [edx-0xa797168]
  419b1d:	xor    al,0xbd
  419b1f:	fild   QWORD PTR [edi]
  419b21:	stos   DWORD PTR es:[edi],eax
  419b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b23:	repnz int 0x98
  419b26:	cmp    eax,0xc1e0fd34
  419b2b:	loopne 0x419b77
  419b2d:	push   0x32
  419b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b30:	or     al,0x5c
  419b32:	push   esi
  419b33:	or     dh,BYTE PTR [ecx-0x15]
  419b36:	cmp    ecx,DWORD PTR [ecx]
  419b38:	aaa    
  419b39:	jns    0x419b50
  419b3b:	and    BYTE PTR [ebp+0x77214717],dh
  419b41:	push   0x70
  419b43:	jmp    0x419b6e
  419b45:	fist   WORD PTR [eax]
  419b47:	jnp    0x419b65
  419b49:	outs   dx,BYTE PTR ds:[esi]
  419b4a:	(bad)  
  419b4b:	popa   
  419b4c:	ds cs jae 0x419b37
  419b50:	mov    ?,WORD PTR [ebp+0x60]
  419b53:	add    BYTE PTR [ebx],cl
  419b55:	jns    0x419adc
  419b57:	mov    DWORD PTR [eax+0x746e29e0],edi
  419b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b5e:	mov    WORD PTR [edx-0x7],?
  419b61:	mov    edx,0x93928ab6
  419b66:	leave  
  419b67:	push   ss
  419b68:	mov    ds:0x2ead2dfd,eax
  419b6d:	mov    edi,0x5cb44df1
  419b72:	call   0xeb92:0x9cccbb10
  419b79:	mov    ds:0x678e1994,al
  419b7e:	cmp    DWORD PTR [esi+0x1f],0x3c80333
  419b85:	inc    edi
  419b86:	jnp    0x419bb5
  419b88:	ja     0x419bca
  419b8a:	cmp    DWORD PTR [esi],0xa7c745ec
  419b90:	pop    ds
  419b91:	mov    al,ds:0x19c4ca44
  419b96:	sbb    eax,0x87630beb
  419b9b:	(bad)  
  419b9c:	aam    0xe6
  419b9e:	inc    esp
  419b9f:	es stos BYTE PTR es:[edi],al
  419ba1:	mov    ch,0x97
  419ba3:	mov    esp,0x912ca52e
  419ba8:	or     cl,BYTE PTR [ebp+0xa]
  419bab:	pop    ds
  419bac:	aaa    
  419bad:	js     0x419bb8
  419baf:	imul   esp,DWORD PTR [esi+eiz*2+0x75],0x77
  419bb4:	fidivr DWORD PTR [eax]
  419bb6:	adc    al,BYTE PTR [ecx-0x1a1ff978]
  419bbc:	add    bh,cl
  419bbe:	jo     0x419c0a
  419bc0:	mov    fs:0x831c402f,eax
  419bc6:	ss jbe 0x419c06
  419bc9:	push   esp
  419bca:	sub    edi,DWORD PTR [edx-0x7069a6f]
  419bd0:	and    eax,DWORD PTR [esi+0x5f]
  419bd3:	mov    al,bh
  419bd5:	lods   eax,DWORD PTR ss:[esi]
  419bd7:	popa   
  419bd8:	sbb    eax,0xd3baab0a
  419bdd:	lahf   
  419bde:	pop    ebp
  419bdf:	push   es
  419be0:	mov    DWORD PTR ds:0xe0494fd9,ebp
  419be6:	out    0x74,al
  419be8:	aas    
  419be9:	jo     0x419bfb
  419beb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bec:	mov    cl,0x69
  419bee:	out    0x2b,eax
  419bf0:	imul   esp,DWORD PTR [ecx-0x26],0x3d
  419bf4:	mov    ebx,0x28455cc7
  419bf9:	adc    al,0xdb
  419bfb:	and    ebp,DWORD PTR [ecx]
  419bfd:	sub    bl,BYTE PTR [esi]
  419bff:	aas    
  419c00:	iret   
  419c01:	mov    bl,0xb9
  419c03:	mov    ebp,0x8834f888
  419c08:	inc    esp
  419c09:	xlat   BYTE PTR ds:[ebx]
  419c0a:	(bad)  [eax+0x6deea41f]
  419c10:	mov    ch,0xa8
  419c12:	out    0x83,al
  419c14:	in     al,dx
  419c15:	or     DWORD PTR [ecx+0x55],ebp
  419c18:	sbb    ebp,DWORD PTR [esi]
  419c1a:	jmp    0x44a0:0x88b647fa
  419c21:	ins    DWORD PTR es:[edi],dx
  419c22:	(bad)  
  419c23:	data16 jmp 0x419c69
  419c26:	stos   DWORD PTR es:[edi],eax
  419c27:	xchg   DWORD PTR [ebx-0x6a],edi
  419c2a:	sahf   
  419c2b:	sub    ebx,DWORD PTR [edx]
  419c2d:	push   ds
  419c2e:	aaa    
  419c2f:	sbb    esi,eax
  419c31:	and    DWORD PTR [eax+0x25],esi
  419c34:	mov    dh,0x9b
  419c36:	cmp    BYTE PTR [edi-0x1b],ah
  419c39:	sbb    DWORD PTR [ebx],ecx
  419c3b:	lds    ebp,FWORD PTR [ebx-0x43]
  419c3e:	fxch   st(2)
  419c40:	imul   edi,DWORD PTR [edx-0x2eff0603],0x79
  419c47:	popf   
  419c48:	xchg   BYTE PTR [ecx-0x3f418710],bh
  419c4e:	out    0xce,eax
  419c50:	test   eax,0xd428acfd
  419c55:	pop    ecx
  419c56:	and    BYTE PTR [edx+0x5f81b36a],ch
  419c5c:	hlt    
  419c5d:	xchg   edx,eax
  419c5e:	mov    ds:0xea089e5,eax
  419c63:	daa    
  419c64:	sar    DWORD PTR [ebx],0xbe
  419c67:	cmp    ch,BYTE PTR [esi]
  419c69:	fadd   st,st(3)
  419c6b:	inc    ebx
  419c6c:	sbb    DWORD PTR ds:0x7fc4d455,ebp
  419c72:	ins    DWORD PTR es:[edi],dx
  419c73:	and    DWORD PTR [eax+0x219747b3],edi
  419c79:	jns    0x419c18
  419c7b:	(bad)  
  419c7c:	ins    DWORD PTR es:[edi],dx
  419c7d:	push   esp
  419c7e:	add    BYTE PTR [esi],bh
  419c80:	sbb    BYTE PTR [edi],bl
  419c82:	(bad)  
  419c83:	dec    esp
  419c84:	sar    DWORD PTR [ebp-0x1],0xc4
  419c88:	lods   al,BYTE PTR ds:[esi]
  419c89:	nop
  419c8a:	sar    BYTE PTR fs:[edx+ebp*1-0x7d],1
  419c8f:	mov    edi,0xc7021703
  419c94:	add    esp,ebx
  419c96:	xchg   ebx,eax
  419c97:	(bad)  
  419c98:	adc    esi,DWORD PTR [ecx]
  419c9a:	mov    ch,0xb
  419c9c:	fisttp DWORD PTR [eax+0x8]
  419c9f:	xchg   ecx,eax
  419ca0:	cmp    BYTE PTR [edi+0x1d],dh
  419ca3:	mov    ds:0x623f6b9e,eax
  419ca8:	dec    esp
  419ca9:	int3   
  419caa:	mov    edx,0x84d0bd62
  419caf:	stos   DWORD PTR es:[edi],eax
  419cb0:	inc    ecx
  419cb1:	cld    
  419cb2:	cld    
  419cb3:	inc    edx
  419cb4:	cli    
  419cb5:	popa   
  419cb6:	loope  0x419d06
  419cb8:	sbb    al,0x1f
  419cba:	fidiv  DWORD PTR [edx-0x62359194]
  419cc0:	jnp    0x419ca5
  419cc2:	out    dx,eax
  419cc3:	stc    
  419cc4:	xor    esp,DWORD PTR ds:0x5cd3864f
  419cca:	ret    0xb0e9
  419ccd:	les    eax,FWORD PTR [ecx-0x391d84d4]
  419cd3:	jo     0x419cab
  419cd5:	cmp    al,0xd6
  419cd7:	mov    ah,0x3c
  419cd9:	xchg   edi,eax
  419cda:	jle    0x419c8c
  419cdc:	aam    0xd5
  419cde:	dec    ecx
  419cdf:	imul   eax,DWORD PTR [edi],0xffffffa4
  419ce2:	fstp   QWORD PTR ds:0xc749ad46
  419ce8:	call   0xcd2a:0xdcc940a1
  419cef:	push   cs
  419cf0:	jno    0x419d68
  419cf2:	jb     0x419cde
  419cf4:	pop    ds
  419cf5:	add    edx,esp
  419cf7:	mov    cl,0x85
  419cf9:	loopne 0x419d5f
  419cfb:	push   es
  419cfc:	aad    0x9e
  419cfe:	sbb    eax,0x8a889714
  419d03:	jnp    0x419d26
  419d05:	cmc    
  419d06:	pusha  
  419d07:	js     0x419cb7
  419d09:	shl    DWORD PTR [ebx+0x2aa6b3ce],1
  419d0f:	scas   al,BYTE PTR es:[edi]
  419d10:	repz cli 
  419d12:	cmp    DWORD PTR [edi-0x4b20c32f],0xf9e3d03
  419d1c:	sbb    al,0xd3
  419d1e:	or     BYTE PTR [eax-0x37],0xeb
  419d22:	adc    esp,edx
  419d24:	jbe    0x419d95
  419d26:	cmp    al,0xf
  419d28:	pop    esi
  419d29:	popa   
  419d2a:	mov    eax,0x54e74150
  419d2f:	test   al,0x90
  419d31:	jae    0x419d72
  419d33:	icebp  
  419d34:	push   cs
  419d35:	xor    eax,0xf743707
  419d3a:	jb     0x419d2a
  419d3c:	jle    0x419d02
  419d3e:	in     al,dx
  419d3f:	pop    ds
  419d40:	inc    ebp
  419d41:	push   ecx
  419d42:	pushf  
  419d43:	add    dl,bl
  419d45:	bound  edx,QWORD PTR [ebx+ebx*4+0x1d]
  419d49:	popa   
  419d4a:	and    BYTE PTR [eax],ch
  419d4c:	adc    eax,0xc91606af
  419d51:	lods   eax,DWORD PTR ds:[esi]
  419d52:	call   0xd3eeacb5
  419d57:	pop    es
  419d58:	sti    
  419d59:	xchg   ecx,eax
  419d5a:	jmp    0xbe07:0x67760b66
  419d61:	mov    ah,0x95
  419d63:	rcr    BYTE PTR [esi+0xa],0xc1
  419d67:	mov    edi,DWORD PTR [eax-0x7f]
  419d6a:	(bad)  
  419d6b:	neg    DWORD PTR [edx-0x51]
  419d6e:	hlt    
  419d6f:	xchg   ecx,eax
  419d70:	mov    ebx,0x27244e98
  419d75:	xchg   ecx,eax
  419d76:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  419d78:	cmp    esi,DWORD PTR [ebp+0x5e]
  419d7b:	stc    
  419d7c:	cwde   
  419d7d:	imul   esp,DWORD PTR ds:0xfbe7522a,0x32c38e4e
  419d87:	repnz inc ebp
  419d89:	mov    BYTE PTR [edx-0x32ddf1fe],bh
  419d8f:	popf   
  419d90:	outs   dx,BYTE PTR ds:[esi]
  419d91:	ficom  DWORD PTR [esi+0x13]
  419d94:	mov    dl,0x9f
  419d96:	pop    ebx
  419d97:	lods   al,BYTE PTR ds:[esi]
  419d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d99:	mov    WORD PTR [eax],ss
  419d9b:	jae    0x419dfc
  419d9d:	adc    ecx,DWORD PTR [ebx-0xa]
  419da0:	lods   eax,DWORD PTR ds:[esi]
  419da1:	sub    eax,0x8d1cd910
  419da6:	sbb    DWORD PTR [esi-0x71b9e166],0xffffffd2
  419dad:	mov    ebp,0x7bc2f0b4
  419db2:	cli    
  419db3:	or     eax,DWORD PTR [edx+0x429ee883]
  419db9:	and    eax,0x990613ca
  419dbe:	jo     0x419e32
  419dc0:	fisttp WORD PTR [eax+0x51738b16]
  419dc6:	pop    ecx
  419dc7:	push   ecx
  419dc8:	pop    ebx
  419dc9:	dec    edi
  419dca:	pushf  
  419dcb:	fmul   st(1),st
  419dcd:	dec    eax
  419dce:	int    0xdc
  419dd0:	xchg   BYTE PTR [edi],ah
  419dd2:	das    
  419dd3:	ret    0x3b85
  419dd6:	add    BYTE PTR [ebp+0x43c50090],bl
  419ddc:	sub    al,0x5a
  419dde:	inc    BYTE PTR [edi-0x10]
  419de1:	int3   
  419de2:	jne    0x419da1
  419de4:	push   esi
  419de5:	mov    ecx,0x589efe7a
  419dea:	retf   
  419deb:	pop    edx
  419dec:	retf   
  419ded:	sahf   
  419dee:	xchg   ebp,eax
  419def:	adc    eax,0x62608216
  419df4:	push   ecx
  419df5:	fucompp 
  419df7:	stos   DWORD PTR es:[edi],eax
  419df8:	mov    bh,0xad
  419dfa:	dec    edi
  419dfb:	xchg   esp,eax
  419dfc:	std    
  419dfd:	add    eax,0x2bffe4ab
  419e02:	cmp    dh,BYTE PTR [ebx]
  419e04:	cmp    al,0xa1
  419e06:	call   0xbc97c31
  419e0b:	adc    eax,0xb2dcdee1
  419e10:	and    eax,0x19f27651
  419e15:	icebp  
  419e16:	mov    gs,ebx
  419e18:	test   BYTE PTR [edi-0x33],bh
  419e1b:	or     ch,BYTE PTR [edi+0x715581b4]
  419e21:	test   DWORD PTR [edi-0x75],0x5bd36070
  419e28:	inc    eax
  419e29:	and    BYTE PTR [edx+eax*1+0x7e],0xc6
  419e2e:	xor    BYTE PTR [ebx-0x2dc4c221],bl
  419e34:	sbb    al,BYTE PTR [edx]
  419e36:	jge    0x419e95
  419e38:	aam    0xed
  419e3a:	and    DWORD PTR [ebp+eiz*4-0x472ed4e5],0xffffffed
  419e42:	inc    ebp
  419e43:	cld    
  419e44:	nop
  419e45:	lock cmp BYTE PTR ds:0xf8c212ff,bl
  419e4d:	sub    BYTE PTR [ebx],cl
  419e4f:	outs   dx,BYTE PTR ds:[esi]
  419e50:	pop    edi
  419e51:	cwde   
  419e52:	out    0x1a,al
  419e54:	int3   
  419e55:	outs   dx,BYTE PTR ds:[esi]
  419e56:	add    BYTE PTR [esi+0x21],bl
  419e59:	outs   dx,BYTE PTR ds:[esi]
  419e5a:	shl    ebp,0x90
  419e5d:	fild   WORD PTR [esi]
  419e5f:	mov    ebp,0xfb6db0ab
  419e64:	retf   0x84ec
  419e67:	ret    0x728a
  419e6a:	lds    edx,FWORD PTR [ebp+0x13089d79]
  419e70:	fld    TBYTE PTR [edi-0x34]
  419e73:	fnsave [ebp+0xd27ca83]
  419e79:	paddw  mm1,QWORD PTR [edx+0x4d3f0188]
  419e80:	xor    al,0x0
  419e82:	fisub  WORD PTR [ecx]
  419e84:	mov    dh,BYTE PTR [edx-0x18e10577]
  419e8a:	pop    esi
  419e8b:	inc    ecx
  419e8c:	in     al,0x14
  419e8e:	cmp    edx,ecx
  419e90:	push   eax
  419e91:	mov    cl,0x73
  419e93:	(bad)  
  419e94:	test   al,0xfd
  419e96:	and    eax,0xcfb137ea
  419e9b:	xor    al,0xd
  419e9d:	imul   ebx,DWORD PTR [ecx+0x63726c55],0x1bf500f5
  419ea7:	mov    ebx,0xc5be4c3a
  419eac:	mov    eax,0xf8978077
  419eb1:	push   ecx
  419eb2:	push   eax
  419eb3:	push   ebp
  419eb4:	jne    0x419e4e
  419eb6:	loopne 0x419eff
  419eb8:	(bad)
  419ebc:	dec    edx
  419ebd:	mov    BYTE PTR ds:0x8ac72f9d,al
  419ec3:	sar    ebx,cl
  419ec5:	pusha  
  419ec6:	mov    eax,ds:0xa4f49733
  419ecb:	push   edi
  419ecc:	and    dl,BYTE PTR [ebp+eiz*4+0x36]
  419ed0:	xor    BYTE PTR [edi+eax*8-0x6c],bl
  419ed4:	jo     0x419e92
  419ed6:	rol    esi,cl
  419ed8:	dec    edi
  419ed9:	vpsubb ymm0,ymm5,YMMWORD PTR [edi]
  419edd:	mov    edx,0x770c165f
  419ee2:	sbb    BYTE PTR [ecx],dl
  419ee4:	daa    
  419ee5:	mov    esp,0x4df6ed67
  419eea:	ds (bad) 
  419eec:	mov    al,ds:0xdf380b15
  419ef1:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  419ef3:	mov    bl,bh
  419ef5:	xor    al,0xa8
  419ef7:	add    edx,DWORD PTR [ecx+0x3a9093ca]
  419efd:	out    dx,al
  419efe:	mov    ecx,0xda4caa54
  419f03:	mov    esp,0xad4a5491
  419f08:	pop    ebp
  419f09:	xchg   esi,eax
  419f0a:	repz (bad) 
  419f0c:	mov    esp,0xfa8a3283
  419f11:	cmp    edx,DWORD PTR [esi]
  419f13:	or     eax,0xed9b12e9
  419f19:	sbb    DWORD PTR [eax],ebx
  419f1b:	adc    ebx,DWORD PTR [edx-0x4ae0760d]
  419f21:	and    eax,0xda25547e
  419f26:	xor    bh,BYTE PTR [edi-0x6e]
  419f29:	adc    DWORD PTR [ecx+0x1d],0xf0478a03
  419f30:	(bad)  
  419f31:	out    dx,al
  419f32:	lods   al,BYTE PTR ds:[esi]
  419f33:	mov    dh,0x99
  419f35:	jne    0x419f5c
  419f37:	pop    es
  419f38:	add    DWORD PTR ds:0x6909c56b,ebp
  419f3e:	jb     0x419ecc
  419f40:	aas    
  419f41:	in     al,0xed
  419f43:	(bad)  
  419f45:	mov    edx,0xdb8f6cf8
  419f4a:	pop    edi
  419f4b:	cmp    ch,bh
  419f4d:	dec    edx
  419f4e:	aad    0xf5
  419f50:	push   ebp
  419f51:	mov    WORD PTR [esi],?
  419f53:	popf   
  419f54:	int3   
  419f55:	retf   0xca5b
  419f58:	std    
  419f59:	sub    eax,0xaaf8f91f
  419f5e:	inc    edx
  419f5f:	out    dx,eax
  419f60:	jle    0x419f26
  419f62:	or     BYTE PTR [edi],al
  419f64:	or     DWORD PTR [edi+0x20d40257],0xffffffc6
  419f6b:	pop    edi
  419f6c:	mov    ds:0x3b075ad9,al
  419f71:	out    0x6f,eax
  419f73:	lock dec edi
  419f75:	dec    edx
  419f76:	es adc al,ah
  419f79:	xchg   BYTE PTR [edx],cl
  419f7b:	cmp    dl,dh
  419f7d:	push   0x7c6117ac
  419f82:	sbb    dh,BYTE PTR [edi+edx*4]
  419f85:	adc    ah,BYTE PTR [edi]
  419f87:	sub    ebx,DWORD PTR [esi+0x7c]
  419f8a:	mov    bl,0x21
  419f8c:	fld    DWORD PTR [ebx+0x2b6c195a]
  419f92:	sbb    eax,DWORD PTR [ebx-0x65]
  419f95:	push   DWORD PTR [ebx+ecx*2]
  419f98:	push   0xffffff85
  419f9a:	fidivr WORD PTR [ebx+0x68]
  419f9d:	test   al,0xcb
  419f9f:	pop    esp
  419fa0:	add    ecx,esi
  419fa2:	mov    cl,0x51
  419fa4:	or     eax,0x3f2678a1
  419fa9:	aam    0x14
  419fab:	or     eax,0x737a6ab5
  419fb0:	jl     0x419f4e
  419fb2:	daa    
  419fb3:	jp     0x41a029
  419fb5:	in     al,dx
  419fb6:	mov    DWORD PTR [eax+ecx*8-0x1f9b31e5],esp
  419fbd:	push   ebp
  419fbe:	mov    ah,0xd6
  419fc0:	or     eax,0x6ebef66c
  419fc5:	in     eax,dx
  419fc6:	pop    ebp
  419fc7:	mov    bl,0xff
  419fc9:	in     eax,dx
  419fca:	sub    al,0xf9
  419fcc:	call   0x6e6d:0xc28af050
  419fd3:	jg     0x419f5d
  419fd5:	sbb    edx,ebx
  419fd7:	je     0x419fb9
  419fd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fda:	pop    ds
  419fdb:	dec    edx
  419fdc:	sar    BYTE PTR [ecx],1
  419fde:	test   DWORD PTR [ecx-0x5e6148bc],ebp
  419fe4:	xchg   ebx,eax
  419fe5:	sar    BYTE PTR [eax-0x2c],0x2c
  419fe9:	jae    0x41a040
  419feb:	mov    ebp,0x66c47280
  419ff0:	cs push ebx
  419ff2:	aad    0x31
  419ff4:	sub    DWORD PTR [edx+ecx*2],eax
  419ff7:	mov    ecx,0x5dbb2faf
  419ffc:	sahf   
  419ffd:	(bad)  
  419ffe:	sbb    dh,BYTE PTR [esi-0x55]
  41a001:	push   edx
  41a002:	cmc    
  41a003:	jmp    0x17ae29c7
  41a008:	popf   
  41a009:	(bad)  
  41a00a:	jne    0x41a055
  41a00c:	es add al,0xaa
  41a00f:	pop    esi
  41a010:	push   ss
  41a011:	xchg   esi,eax
  41a012:	dec    esp
  41a013:	adc    BYTE PTR [eiz*2+0x745cab60],0xcc
  41a01b:	data16 or al,0x56
  41a01e:	xchg   edx,eax
  41a01f:	and    eax,0x69ff33
  41a024:	inc    eax
  41a025:	mov    ch,0x7b
  41a027:	cmp    BYTE PTR [ecx],cl
  41a029:	mov    dl,0x92
  41a02b:	jg     0x419fd3
  41a02d:	repz push 0xd2f7d3e6
  41a033:	fwait
  41a034:	xchg   ebx,eax
  41a035:	shl    DWORD PTR [ecx+esi*1+0x6d],1
  41a039:	out    dx,al
  41a03a:	(bad)  
  41a03b:	loopne 0x41a000
  41a03d:	xlat   BYTE PTR ds:[ebx]
  41a03f:	out    dx,al
  41a040:	inc    esi
  41a041:	xor    al,0x42
  41a043:	cdq    
  41a044:	add    BYTE PTR [ebx],0x81
  41a047:	fdiv   QWORD PTR [ebx-0x63]
  41a04a:	ss dec ebx
  41a04c:	pop    edx
  41a04d:	fnstcw WORD PTR [eax*2-0x6f4b8a4]
  41a054:	add    al,0x80
  41a056:	pop    ds
  41a057:	xchg   edi,eax
  41a058:	ss mov bh,0x1e
  41a05b:	call   0x2e0fbe9d
  41a060:	(bad)  
  41a061:	rcl    BYTE PTR [esi],cl
  41a063:	(bad)  
  41a064:	frstor [edi+0x6fe7bc8b]
  41a06a:	xor    DWORD PTR [edx+0x1de654b0],eax
  41a070:	xchg   esp,eax
  41a071:	stos   BYTE PTR es:[edi],al
  41a072:	cwde   
  41a073:	ins    BYTE PTR es:[edi],dx
  41a074:	xor    esp,DWORD PTR [eax]
  41a076:	call   0xf6f9a787
  41a07b:	out    dx,eax
  41a07c:	je     0x41a070
  41a07e:	lods   al,BYTE PTR ds:[esi]
  41a07f:	pusha  
  41a080:	inc    edi
  41a081:	fs add eax,0xac91fc07
  41a087:	sbb    DWORD PTR [ebp+eax*2+0x30f63d5d],esi
  41a08e:	in     al,dx
  41a08f:	popa   
  41a090:	jnp    0x41a088
  41a092:	hlt    
  41a093:	push   ebx
  41a094:	imul   esp,DWORD PTR [edi+0xda5faa9],0xb6282ec2
  41a09e:	call   0xef08:0xbffd46d
  41a0a5:	or     eax,0xa9c9a91b
  41a0aa:	jo     0x41a0bf
  41a0ac:	mov    al,ds:0xa92c5624
  41a0b1:	fwait
  41a0b2:	adc    DWORD PTR [edi+0x17b2c5dc],0xf21ce9e
  41a0bc:	xchg   ebx,eax
  41a0bd:	xor    DWORD PTR [eax-0xc],eax
  41a0c0:	icebp  
  41a0c1:	mov    DWORD PTR [esi-0x582b4086],ebx
  41a0c7:	dec    ebp
  41a0c8:	test   eax,0xc47af9a
  41a0cd:	repz or edx,0x965e4bb9
  41a0d4:	in     eax,0xcc
  41a0d6:	out    0x44,al
  41a0d8:	mov    ebp,0x2dc50a17
  41a0dd:	fdivr  QWORD PTR [ecx+0x39cd0ae1]
  41a0e3:	icebp  
  41a0e4:	and    DWORD PTR [ebx+0x5b],esp
  41a0e7:	das    
  41a0e8:	shl    DWORD PTR [edi+0x4d5d1058],1
  41a0ee:	data16 loopne 0x41a16c
  41a0f1:	dec    ecx
  41a0f2:	dec    eax
  41a0f3:	inc    esp
  41a0f4:	out    0xb5,al
  41a0f6:	jb     0x41a086
  41a0f8:	call   0xf4b6b45b
  41a0fd:	sbb    eax,ebx
  41a0ff:	aas    
  41a100:	stos   BYTE PTR es:[edi],al
  41a101:	mov    bl,0x3a
  41a103:	inc    ecx
  41a104:	add    al,0x90
  41a106:	sbb    al,0x0
  41a108:	leave  
  41a109:	fadd   st,st(6)
  41a10b:	and    edx,0xffffff84
  41a10e:	sub    edi,DWORD PTR [ecx+edx*4]
  41a111:	sbb    DWORD PTR [ebp-0x12],0xffffffd5
  41a115:	fucomp st(4)
  41a117:	cli    
  41a118:	ret    0x8a25
  41a11b:	out    dx,eax
  41a11c:	repz imul ecx,DWORD PTR [ebx+0x7f],0x56
  41a121:	mov    ah,0x6a
  41a123:	and    al,0x7d
  41a125:	jo     0x41a0c7
  41a127:	mov    eax,ds:0xac6f7c76
  41a12c:	inc    ebx
  41a12d:	xchg   esp,eax
  41a12e:	aaa    
  41a12f:	cs test bl,dh
  41a132:	jno    0x41a194
  41a134:	ja     0x41a146
  41a136:	push   es
  41a137:	clc    
  41a138:	into   
  41a139:	(bad)  
  41a13a:	repnz or dh,BYTE PTR [edi]
  41a13d:	test   al,0xaf
  41a13f:	loope  0x41a163
  41a141:	popf   
  41a142:	mov    WORD PTR [ebx],?
  41a144:	sbb    BYTE PTR [edi],dh
  41a146:	jo     0x41a112
  41a148:	inc    esp
  41a149:	xor    DWORD PTR [ebx],ecx
  41a14b:	adc    dh,ah
  41a14d:	jb     0x41a1c9
  41a14f:	sub    cl,al
  41a151:	adc    eax,0x8899d79
  41a156:	xor    al,0x75
  41a158:	retf   0x7438
  41a15b:	cdq    
  41a15c:	sbb    ebp,ebp
  41a15e:	add    ebx,ecx
  41a160:	mov    dh,0x94
  41a162:	(bad)  
  41a163:	mov    ds:0x5ac70a8b,eax
  41a168:	adc    cl,dl
  41a16a:	sti    
  41a16b:	aas    
  41a16c:	pop    ss
  41a16d:	mov    esp,DWORD PTR [edx-0x19]
  41a170:	nop
  41a171:	pop    ebx
  41a172:	imul   edx,DWORD PTR [edi-0x58],0x38
  41a176:	pusha  
  41a177:	cmp    bh,BYTE PTR fs:[esi-0x322ac119]
  41a17e:	fistp  WORD PTR [ebx]
  41a180:	push   edx
  41a181:	push   edi
  41a182:	scas   eax,DWORD PTR es:[edi]
  41a183:	stos   BYTE PTR es:[edi],al
  41a184:	fwait
  41a185:	stos   DWORD PTR es:[edi],eax
  41a186:	cmp    bh,BYTE PTR [esi-0x6f4379eb]
  41a18c:	(bad)  
  41a18d:	icebp  
  41a18e:	cwde   
  41a18f:	jg     0x41a180
  41a191:	hlt    
  41a192:	jo     0x41a1c0
  41a194:	out    dx,al
  41a195:	fsub   DWORD PTR ds:0x65fc2250
  41a19b:	retf   
  41a19c:	push   eax
  41a19d:	mov    WORD PTR [edx+eiz*2],?
  41a1a0:	mov    DWORD PTR [ebx],ebx
  41a1a2:	lock sbb bl,bh
  41a1a5:	cdq    
  41a1a6:	out    0xb7,eax
  41a1a8:	test   al,0xd1
  41a1aa:	push   eax
  41a1ab:	xchg   esi,eax
  41a1ac:	iret   
  41a1ad:	imul   esi,DWORD PTR [ebx-0xf],0x9163de65
  41a1b4:	cdq    
  41a1b5:	std    
  41a1b6:	es inc edx
  41a1b8:	int3   
  41a1b9:	fs pop eax
  41a1bb:	mov    dh,0xa3
  41a1bd:	out    0x5f,al
  41a1bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1c0:	rcr    bh,0x70
  41a1c3:	dec    ecx
  41a1c4:	adc    eax,0xf22e80a6
  41a1c9:	(bad)  
  41a1ca:	xchg   ebp,eax
  41a1cb:	shr    DWORD PTR [esi],1
  41a1cd:	adc    BYTE PTR [edi],bl
  41a1cf:	mov    ds:0x438d754a,eax
  41a1d4:	cmp    DWORD PTR [esi-0x32],0x63
  41a1d8:	mov    ebx,0xfbf28de5
  41a1dd:	add    DWORD PTR ds:0xcb0ad5c6,ecx
  41a1e3:	xchg   DWORD PTR [edx+0x37599fe1],eax
  41a1e9:	or     BYTE PTR [ebx+0x39],0x71
  41a1ed:	cli    
  41a1ee:	sbb    dh,bl
  41a1f0:	xchg   esi,eax
  41a1f1:	js     0x41a1d2
  41a1f3:	push   ebx
  41a1f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1f5:	xchg   esp,eax
  41a1f6:	pop    edi
  41a1f7:	(bad)  
  41a1f8:	sub    bl,bh
  41a1fa:	and    ch,BYTE PTR [eax]
  41a1fc:	push   ecx
  41a1fd:	icebp  
  41a1fe:	pop    eax
  41a1ff:	add    eax,0xa311b315
  41a204:	cli    
  41a205:	mov    bl,0xb0
  41a207:	and    ch,BYTE PTR [eax]
  41a209:	xchg   BYTE PTR [edx-0x202fd3f3],bh
  41a20f:	(bad)  
  41a210:	std    
  41a211:	(bad)  
  41a213:	(bad)  
  41a214:	cmp    edi,edi
  41a216:	cdq    
  41a217:	stos   BYTE PTR es:[edi],al
  41a218:	div    BYTE PTR [esi]
  41a21a:	je     0x41a257
  41a21c:	in     al,0x6a
  41a21e:	push   esi
  41a21f:	sub    DWORD PTR [ecx-0x57],esi
  41a222:	pop    ecx
  41a223:	int    0x8f
  41a225:	stc    
  41a226:	pop    ss
  41a227:	std    
  41a228:	dec    eax
  41a229:	hlt    
  41a22a:	stos   DWORD PTR es:[edi],eax
  41a22b:	sub    BYTE PTR [ebx],dl
  41a22d:	xchg   ecx,eax
  41a22e:	sub    al,0x65
  41a230:	pop    ebp
  41a231:	add    al,0xba
  41a233:	push   es
  41a234:	mov    eax,0xa36d6df1
  41a239:	in     al,0x13
  41a23b:	dec    ebx
  41a23c:	mov    ah,0xa3
  41a23e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a23f:	jle    0x41a29e
  41a241:	mov    cl,cl
  41a243:	inc    ecx
  41a244:	jb     0x41a25f
  41a246:	push   edx
  41a247:	cmp    eax,0x3032ab78
  41a24c:	nop
  41a24d:	sbb    eax,0x2f611423
  41a252:	xchg   ebp,eax
  41a253:	out    0x69,al
  41a255:	sar    BYTE PTR [edi-0x958afeb],cl
  41a25b:	xchg   esi,eax
  41a25c:	inc    ebp
  41a25d:	mov    esi,0x22af1d08
  41a262:	test   al,0x3
  41a264:	dec    ecx
  41a265:	mov    eax,DWORD PTR [ecx-0x820ad95]
  41a26b:	push   ecx
  41a26c:	push   edi
  41a26d:	sbb    BYTE PTR [ebp-0x4a],bh
  41a270:	hlt    
  41a271:	lahf   
  41a272:	ret    
  41a273:	pusha  
  41a274:	call   0x510c:0x35d21604
  41a27b:	pop    ebp
  41a27c:	jp     0x41a2c8
  41a27e:	pop    ecx
  41a27f:	pop    eax
  41a280:	repnz jecxz 0x41a2a8
  41a283:	pusha  
  41a284:	in     al,0x52
  41a286:	xor    eax,0x2c4afbd4
  41a28b:	sahf   
  41a28c:	mov    ah,0x20
  41a28e:	inc    edi
  41a28f:	retf   0xa636
  41a292:	dec    ecx
  41a293:	fst    st(3)
  41a295:	mov    ecx,0x1c92acbf
  41a29a:	or     esi,DWORD PTR [esi+0x7]
  41a29d:	push   ds
  41a29e:	(bad)  
  41a29f:	fisub  WORD PTR [ecx-0xe]
  41a2a2:	jo     0x41a28a
  41a2a4:	xor    DWORD PTR [ebx-0x4c],edi
  41a2a7:	mov    ah,BYTE PTR [ebx]
  41a2a9:	pop    ecx
  41a2aa:	fisttp QWORD PTR [eax-0x365d7f2e]
  41a2b0:	mov    bh,0xf4
  41a2b2:	out    dx,eax
  41a2b3:	add    al,0x24
  41a2b5:	add    edx,DWORD PTR [ecx-0x4121908d]
  41a2bb:	call   0x6d86f1e2
  41a2c0:	inc    ebp
  41a2c1:	mov    ds:0x11e0bd15,eax
  41a2c6:	test   al,0xdd
  41a2c8:	jg     0x41a305
  41a2ca:	adc    al,BYTE PTR [ecx+0x6b]
  41a2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2ce:	cmc    
  41a2cf:	lods   eax,DWORD PTR ds:[esi]
  41a2d0:	test   al,0xeb
  41a2d2:	sub    ah,ch
  41a2d4:	inc    edi
  41a2d5:	stos   DWORD PTR es:[edi],eax
  41a2d6:	cli    
  41a2d7:	mov    eax,ds:0x820cfbd0
  41a2dc:	test   eax,0x44b64234
  41a2e1:	jno    0x41a2e7
  41a2e3:	std    
  41a2e4:	dec    esi
  41a2e5:	inc    BYTE PTR [ebx+0x69]
  41a2e8:	ins    DWORD PTR es:[edi],dx
  41a2e9:	and    cl,ah
  41a2eb:	mov    ecx,0x4619093f
  41a2f0:	mov    WORD PTR ss:[edx+0x6b],cs
  41a2f4:	inc    ebx
  41a2f5:	imul   ebx,DWORD PTR ds:0xee567d97,0xca6d3377
  41a2ff:	bound  ebx,QWORD PTR [edx]
  41a301:	test   al,0xb
  41a303:	cwde   
  41a304:	icebp  
  41a305:	mov    WORD PTR gs:[bx+di+0x21],ss
  41a30a:	add    dl,dh
  41a30c:	dec    ecx
  41a30d:	pop    esp
  41a30e:	jns    0x41a2c6
  41a310:	cmc    
  41a311:	pop    ds
  41a312:	or     eax,0xf1de83e7
  41a317:	dec    edx
  41a318:	mov    edx,0x773775b3
  41a31d:	adc    esp,DWORD PTR [ebx+eiz*2]
  41a320:	sub    DWORD PTR [edx],ebp
  41a322:	push   ebx
  41a323:	repnz sub edi,edx
  41a326:	sub    BYTE PTR [ebx-0x76956914],cl
  41a32c:	stc    
  41a32d:	(bad)  
  41a32e:	cld    
  41a32f:	fdiv   st(4),st
  41a331:	fsubr  QWORD PTR [eax*8+0x42bcbd30]
  41a338:	jmp    0x1735:0x93dc8bd1
  41a33f:	lahf   
  41a340:	dec    ebx
  41a341:	ror    ebp,1
  41a343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a344:	xchg   esp,eax
  41a345:	sub    BYTE PTR [esi-0xe],ch
  41a348:	mov    eax,0xaaccffed
  41a34d:	and    al,0x3b
  41a34f:	mov    eax,0xad665eaa
  41a354:	scas   al,BYTE PTR es:[edi]
  41a355:	jnp    0x41a327
  41a357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a358:	xor    al,0xda
  41a35a:	aas    
  41a35b:	cmc    
  41a35c:	test   DWORD PTR [ebx-0x5d],ebx
  41a35f:	cmp    cl,ch
  41a361:	jmp    0xe4e5:0x5a3b4f54
  41a368:	cdq    
  41a369:	jne    0x41a3aa
  41a36b:	je     0x41a36b
  41a36d:	push   esi
  41a36e:	push   ss
  41a36f:	inc    edi
  41a370:	cs pop ebx
  41a372:	iret   
  41a373:	sbb    eax,0x33a25f30
  41a378:	shr    BYTE PTR [edi],cl
  41a37a:	mov    edi,0xa0a08ea7
  41a37f:	mov    eax,ebx
  41a381:	jl     0x41a351
  41a383:	bound  esp,QWORD PTR [ebx]
  41a385:	in     eax,dx
  41a386:	sbb    BYTE PTR [ebx],bh
  41a388:	sub    BYTE PTR [edx],bl
  41a38a:	sub    esi,DWORD PTR [edi+0x60]
  41a38d:	cmp    DWORD PTR [ebp+0x4a00bc2c],esp
  41a393:	or     al,0x7f
  41a395:	ins    BYTE PTR es:[edi],dx
  41a396:	sar    DWORD PTR [ebx+0x4],0xbd
  41a39a:	or     al,0xfb
  41a39c:	and    ch,bh
  41a39e:	add    BYTE PTR [ebp-0x2fca0ddf],dl
  41a3a4:	mov    edi,0x6993ec0e
  41a3a9:	imul   eax,DWORD PTR [ecx+0x37b94186],0x5d
  41a3b0:	mov    edi,DWORD PTR [edi]
  41a3b2:	inc    BYTE PTR [ebp+0x72]
  41a3b5:	adc    edi,DWORD PTR [eax]
  41a3b7:	(bad)  
  41a3b8:	fidiv  DWORD PTR [esi+0xd711a48]
  41a3be:	xlat   BYTE PTR ds:[ebx]
  41a3bf:	popa   
  41a3c0:	mov    edx,0xfc0d3141
  41a3c5:	pusha  
  41a3c6:	push   ss
  41a3c7:	cmp    al,0xde
  41a3c9:	lds    esp,FWORD PTR [ebp-0x75]
  41a3cc:	push   ebp
  41a3cd:	pop    ebp
  41a3ce:	(bad)  
  41a3cf:	mov    ebx,0x2f386f6f
  41a3d4:	mov    ds:0xa9fae17e,al
  41a3d9:	xchg   ebp,eax
  41a3da:	pop    ecx
  41a3db:	sbb    DWORD PTR [esi],ebp
  41a3dd:	mov    edi,0x3cef24db
  41a3e2:	mov    ebp,0x90d9f60a
  41a3e7:	gs pop ss
  41a3e9:	imul   edx,DWORD PTR [eax+ecx*8+0x51],0xffffffca
  41a3ee:	sub    eax,0xdbcddc57
  41a3f3:	es jb  0x41a3c8
  41a3f6:	sub    DWORD PTR [ebp+0x4b2f2910],ecx
  41a3fc:	jmp    0x41a39f
  41a3fe:	mov    bl,0x22
  41a400:	and    eax,0x6a7a9cc
  41a405:	je     0x41a3f8
  41a407:	repz fld st(7)
  41a40a:	adc    DWORD PTR [ebp+0x6d9c13de],ecx
  41a410:	int    0xfd
  41a412:	push   ds
  41a413:	in     eax,0xd5
  41a415:	sub    ebp,ebp
  41a417:	xor    ecx,esi
  41a419:	imul   edi,edx,0xffffffae
  41a41c:	lods   al,BYTE PTR ds:[esi]
  41a41d:	das    
  41a41e:	or     ch,BYTE PTR [ecx+0x34]
  41a421:	push   esi
  41a422:	pushf  
  41a423:	inc    eax
  41a424:	test   al,0x1b
  41a426:	or     ch,BYTE PTR [ebx-0x1a70b489]
  41a42c:	leave  
  41a42d:	popf   
  41a42e:	jae    0x41a3e8
  41a430:	mov    ecx,0x5ced1ac1
  41a435:	fs das 
  41a437:	stos   DWORD PTR es:[edi],eax
  41a438:	sub    al,0x4f
  41a43a:	daa    
  41a43b:	xchg   esi,eax
  41a43c:	push   ebx
  41a43e:	test   DWORD PTR ds:0x28458916,0xe551cd5f
  41a448:	fmul   DWORD PTR [ebx]
  41a44a:	das    
  41a44b:	mov    ebp,ss
  41a44d:	lahf   
  41a44e:	stos   BYTE PTR es:[edi],al
  41a44f:	cwde   
  41a450:	inc    eax
  41a451:	xchg   ebx,edi
  41a453:	or     BYTE PTR [eax-0x14],ch
  41a456:	and    bh,BYTE PTR [ecx]
  41a458:	mov    edi,0x7b58da23
  41a45d:	stos   DWORD PTR es:[edi],eax
  41a45e:	dec    ebx
  41a45f:	loop   0x41a47b
  41a461:	pop    edx
  41a462:	retf   0x4e6e
  41a465:	jmp    0xee2a:0x8b3c143b
  41a46c:	or     ecx,DWORD PTR [ecx]
  41a46e:	in     al,0x9
  41a470:	pushf  
  41a471:	fimul  WORD PTR [ebp+0x48]
  41a474:	fidivr DWORD PTR [eax+ebp*8]
  41a477:	mov    edx,0x869a7ec5
  41a47c:	mov    ebx,DWORD PTR [edi-0x1a]
  41a47f:	out    dx,al
  41a480:	mov    cl,0x2
  41a482:	sbb    ebx,esp
  41a484:	mov    DWORD PTR [ebx-0x62],eax
  41a487:	cmp    ch,BYTE PTR [ecx+edi*4+0x2e5f0a76]
  41a48e:	imul   esi,edi,0x697ab968
  41a494:	nop
  41a495:	scas   eax,DWORD PTR es:[edi]
  41a496:	retf   0xd5d0
  41a499:	cmc    
  41a49a:	sahf   
  41a49b:	dec    ecx
  41a49c:	add    eax,0x7d47bad5
  41a4a1:	sub    DWORD PTR [ecx+eax*2-0x4d],ebx
  41a4a5:	push   ebx
  41a4a6:	pop    edx
  41a4a7:	out    0xfe,al
  41a4a9:	cmp    eax,DWORD PTR [edx-0x1cdbaead]
  41a4af:	addr16 (bad) 
  41a4b1:	inc    edx
  41a4b2:	xchg   ecx,eax
  41a4b3:	pop    esp
  41a4b4:	ins    DWORD PTR es:[edi],dx
  41a4b5:	es push cs
  41a4b7:	pop    ebp
  41a4b8:	push   ecx
  41a4b9:	mov    DWORD PTR ds:0xe94c42e3,0x822ef1f5
  41a4c3:	sbb    al,0xa5
  41a4c5:	out    0xc8,eax
  41a4c7:	ins    DWORD PTR es:[edi],dx
  41a4c8:	ins    BYTE PTR es:[edi],dx
  41a4c9:	out    dx,eax
  41a4ca:	dec    edx
  41a4cb:	scas   al,BYTE PTR es:[edi]
  41a4cc:	aam    0x43
  41a4ce:	inc    esi
  41a4cf:	nop
  41a4d0:	xor    edi,DWORD PTR ds:0x24db9551
  41a4d6:	sbb    al,0x1c
  41a4d8:	scas   al,BYTE PTR es:[edi]
  41a4d9:	ret    
  41a4da:	dec    eax
  41a4db:	sahf   
  41a4dc:	sub    DWORD PTR [eax+0x39f3ffc8],esp
  41a4e2:	add    BYTE PTR [ebx],0xa
  41a4e5:	(bad)  
  41a4e6:	xlat   BYTE PTR ds:[ebx]
  41a4e7:	cmp    ebp,DWORD PTR [ebp-0x69d51605]
  41a4ed:	cmp    dl,BYTE PTR [esi-0x6cacc54f]
  41a4f3:	lds    ebx,FWORD PTR [ebp-0x10308e42]
  41a4f9:	jo     0x41a4e6
  41a4fb:	xchg   esp,edi
  41a4fd:	and    edi,DWORD PTR [ecx+0x339ff532]
  41a503:	dec    ecx
  41a504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a505:	pushf  
  41a506:	in     al,dx
  41a507:	je     0x41a4cc
  41a509:	add    BYTE PTR [ecx+0x4dfa0a37],bl
  41a50f:	ins    DWORD PTR es:[edi],dx
  41a510:	jge    0x41a53c
  41a512:	scas   al,BYTE PTR es:[edi]
  41a513:	je     0x41a4d2
  41a515:	stos   BYTE PTR es:[edi],al
  41a516:	in     al,0xc1
  41a518:	or     al,0x0
  41a51a:	jmp    0xa2ca3a24
  41a51f:	push   ds
  41a520:	imul   edx,DWORD PTR [edi],0xffffffb7
  41a523:	jnp    0x41a544
  41a525:	(bad)  
  41a526:	mov    ecx,0x9b42495f
  41a52b:	aas    
  41a52c:	fisttp WORD PTR [bx]
  41a52f:	sub    esp,DWORD PTR [ebp+0x50]
  41a532:	xchg   esi,eax
  41a533:	pushf  
  41a534:	mov    edx,0x664bfc71
  41a539:	add    DWORD PTR [eax],esi
  41a53b:	mov    esi,0x3e588f6e
  41a540:	mov    WORD PTR [ecx+0x21b9864a],fs
  41a546:	cdq    
  41a547:	arpl   WORD PTR ds:0xbff6f717,ax
  41a54d:	out    dx,al
  41a54e:	xchg   esp,eax
  41a54f:	into   
  41a550:	or     eax,0xaa0b6244
  41a555:	jns    0x41a4d9
  41a557:	mov    al,0xf2
  41a559:	sbb    cl,cl
  41a55b:	sub    al,0x3c
  41a55d:	add    eax,DWORD PTR [esi+ebp*1-0x2669321]
  41a564:	add    DWORD PTR [ecx+0x2],0x8b1e7efe
  41a56b:	stc    
  41a56c:	push   0xffffffce
  41a56e:	fisttp WORD PTR [ebp-0x6]
  41a571:	retf   0xb1c2
  41a574:	add    edx,DWORD PTR [eax-0x69]
  41a577:	push   esp
  41a578:	mov    al,0x43
  41a57a:	retf   0xe460
  41a57d:	icebp  
  41a57e:	and    eax,0xabc0b08f
  41a583:	cld    
  41a584:	pop    eax
  41a585:	call   0xeaecc6ad
  41a58a:	inc    esi
  41a58b:	std    
  41a58c:	adc    al,0xf4
  41a58e:	or     ecx,DWORD PTR [edx+0x5e]
  41a591:	or     esi,DWORD PTR [ebx]
  41a593:	push   0x2f410e92
  41a598:	mov    ebp,0xdcf07968
  41a59d:	xor    eax,0xeaeaac4e
  41a5a2:	mov    BYTE PTR [edi+0x74],0xaa
  41a5a6:	bound  ebx,QWORD PTR [eax]
  41a5a8:	mov    eax,0x2f2f1042
  41a5ad:	push   ebp
  41a5ae:	test   al,0xf3
  41a5b0:	push   0x3a
  41a5b2:	fld    DWORD PTR [esi-0x17]
  41a5b5:	inc    ecx
  41a5b6:	stos   DWORD PTR es:[edi],eax
  41a5b7:	hlt    
  41a5b8:	arpl   WORD PTR [ebp+0x4bb2f0f0],cx
  41a5be:	mov    cl,0x15
  41a5c0:	adc    al,0x9e
  41a5c2:	dec    ecx
  41a5c3:	sbb    BYTE PTR [edx+ecx*1+0x47],0x83
  41a5c8:	lahf   
  41a5c9:	add    edx,esi
  41a5cb:	fidiv  DWORD PTR [edx]
  41a5cd:	addr16 xor ebx,edx
  41a5d0:	jg     0x41a59d
  41a5d2:	jb     0x41a57f
  41a5d4:	push   0x483d5c06
  41a5d9:	and    eax,0xa739522a
  41a5de:	ja     0x41a5e3
  41a5e0:	sti    
  41a5e1:	mov    dh,0x99
  41a5e3:	fmul   QWORD PTR [edx-0x7ec2253e]
  41a5e9:	xchg   edi,eax
  41a5ea:	loope  0x41a635
  41a5ec:	pop    esi
  41a5ed:	xor    DWORD PTR [ebx+0x34],0xd18d27d6
  41a5f4:	mov    dh,0x2b
  41a5f6:	pop    ebx
  41a5f7:	push   0x4d
  41a5f9:	cs retf 0x1466
  41a5fd:	mov    dl,0x8
  41a5ff:	jg     0x41a636
  41a601:	xor    cl,0x5b
  41a604:	sbb    al,0x62
  41a606:	push   ss
  41a607:	in     eax,dx
  41a608:	addr16 gs xor al,0xcf
  41a60c:	(bad)  
  41a60d:	mov    ebp,0xb8bc1e02
  41a612:	dec    ebx
  41a613:	outs   dx,BYTE PTR ds:[esi]
  41a614:	repz push 0x3401ccf4
  41a61a:	frstor [esi]
  41a61c:	sub    DWORD PTR [edx-0x38],esi
  41a61f:	pmaxsw mm5,QWORD PTR [edi-0x67bd9988]
  41a626:	mov    eax,0x1ae47339
  41a62b:	shl    BYTE PTR [esi-0x4bcd364],cl
  41a631:	adc    BYTE PTR [esi],cl
  41a633:	mov    cl,0x93
  41a635:	cli    
  41a636:	mov    edi,0x96f03c7b
  41a63b:	rol    ebx,0xbb
  41a63e:	mov    WORD PTR [esi],ss
  41a640:	inc    eax
  41a641:	mov    edi,DWORD PTR [edx+0x22]
  41a644:	lea    di,ds:0xc20e1490
  41a64b:	inc    edx
  41a64c:	rol    ecx,cl
  41a64e:	lock or ebx,DWORD PTR ds:0x8260f75e
  41a655:	ja     0x41a677
  41a657:	sub    ebx,DWORD PTR [ecx+0x5b]
  41a65a:	xor    bl,al
  41a65c:	dec    edi
  41a65d:	stos   DWORD PTR es:[edi],eax
  41a65e:	xchg   esp,eax
  41a65f:	ret    
  41a660:	enter  0x4d8a,0x36
  41a664:	aas    
  41a665:	loopne 0x41a60f
  41a667:	js     0x41a6d2
  41a669:	cmp    DWORD PTR [ebx],esi
  41a66b:	lea    edi,[ebp+0x456a096c]
  41a671:	push   es
  41a672:	retf   0x95a8
  41a675:	xchg   esp,eax
  41a676:	gs pop ss
  41a678:	or     ch,BYTE PTR [esi+edi*8-0x7eabda31]
  41a67f:	ss sub eax,0x5435d3c5
  41a685:	cmp    ah,BYTE PTR [ebp+0x3b62e933]
  41a68b:	daa    
  41a68c:	jae    0x41a642
  41a68e:	test   al,0x58
  41a690:	es inc ebx
  41a692:	add    DWORD PTR [esi],esi
  41a694:	inc    eax
  41a695:	sbb    dl,BYTE PTR [ebx+eax*8-0x6a]
  41a699:	out    dx,eax
  41a69a:	and    ecx,edx
  41a69c:	sub    eax,0x260a470c
  41a6a1:	mov    bl,0x1c
  41a6a3:	rcr    esp,1
  41a6a5:	hlt    
  41a6a6:	jb     0x41a6ca
  41a6a8:	adc    BYTE PTR [ecx+0x1a3620fa],al
  41a6ae:	inc    ebx
  41a6af:	sbb    DWORD PTR [ecx+0x62c6be0f],edx
  41a6b5:	ja     0x41a6cb
  41a6b7:	dec    ecx
  41a6b8:	in     al,dx
  41a6b9:	cwde   
  41a6ba:	push   cs
  41a6bb:	add    dl,bl
  41a6bd:	push   edx
  41a6be:	and    cl,0x80
  41a6c1:	and    eax,0xfcf746f6
  41a6c6:	and    al,0x29
  41a6c8:	push   cs
  41a6c9:	pop    esp
  41a6ca:	out    dx,al
  41a6cb:	loopne 0x41a6fc
  41a6cd:	jbe    0x41a65e
  41a6cf:	adc    BYTE PTR [ebx+ebp*8-0x13],cl
  41a6d3:	dec    esp
  41a6d4:	das    
  41a6d5:	push   ecx
  41a6d6:	and    al,bl
  41a6d8:	leave  
  41a6d9:	or     BYTE PTR [eax-0x32393f4f],dh
  41a6df:	pop    eax
  41a6e0:	xor    ebp,DWORD PTR [edi+0x6a2a6a18]
  41a6e6:	fidiv  WORD PTR [ecx+edx*2-0x1e7a0cbf]
  41a6ed:	in     al,0x1c
  41a6ef:	es mov cl,0x19
  41a6f2:	ret    
  41a6f3:	pusha  
  41a6f4:	add    BYTE PTR [esi-0x1a],dl
  41a6f7:	fsub   QWORD PTR [eax+0x1c]
  41a6fa:	or     eax,0x733dbadd
  41a6ff:	push   ebp
  41a700:	cdq    
  41a701:	pop    esi
  41a702:	addr16 je 0x41a6a1
  41a705:	jne    0x41a6d5
  41a707:	iret   
  41a708:	xchg   ebx,eax
  41a709:	or     al,0x4d
  41a70b:	adc    DWORD PTR [ecx+eax*8],0x83fc2722
  41a712:	lock in al,dx
  41a714:	jns    0x41a6c3
  41a716:	sub    eax,0x15d8cfc2
  41a71b:	xor    eax,0x401f33c1
  41a720:	pop    edx
  41a721:	out    0xea,al
  41a723:	in     eax,0x4f
  41a725:	dec    edx
  41a726:	sub    al,0x48
  41a728:	pushf  
  41a729:	gs push edi
  41a72b:	ret    
  41a72c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a72d:	inc    esp
  41a72e:	jg     0x41a73b
  41a730:	rdpmc  
  41a732:	leave  
  41a733:	fwait
  41a734:	or     DWORD PTR [ecx],eax
  41a736:	mov    esp,0xdac4c8
  41a73b:	jg     0x41a752
  41a73d:	retf   0x6811
  41a740:	dec    edx
  41a741:	inc    eax
  41a742:	mov    bl,0xb3
  41a744:	inc    esp
  41a745:	cdq    
  41a746:	ret    
  41a747:	pop    esp
  41a748:	rcr    DWORD PTR ds:0x23fd7d3b,1
  41a74e:	mov    di,ax
  41a751:	fnstsw WORD PTR [esi-0x4cff2d36]
  41a757:	test   eax,0xa2e43013
  41a75c:	xchg   edx,eax
  41a75d:	pop    ss
  41a75e:	bswap  eax
  41a760:	push   edx
  41a761:	imul   esp,DWORD PTR [esi-0x5df16bdf],0x4
  41a768:	adc    al,0x12
  41a76a:	inc    ecx
  41a76b:	pop    ds
  41a76c:	mov    ebx,0xa5216725
  41a771:	rcl    BYTE PTR [edi+0x5],1
  41a774:	in     al,0x12
  41a776:	lods   al,BYTE PTR ds:[esi]
  41a777:	jge    0x41a7be
  41a779:	bound  ecx,QWORD PTR [ebx-0x7466523c]
  41a77f:	arpl   WORD PTR [edi],sp
  41a781:	cli    
  41a782:	xchg   BYTE PTR [eax-0x2],bh
  41a785:	cmp    eax,0x413ccf87
  41a78a:	fsubr  QWORD PTR [esi+0x5f]
  41a78d:	in     al,dx
  41a78e:	and    BYTE PTR [edx],cl
  41a790:	dec    ecx
  41a791:	mov    bl,0x7
  41a793:	mov    eax,ds:0x9bbd289b
  41a798:	mov    esp,0x19287af4
  41a79d:	pop    ebp
  41a79e:	jl     0x41a7ef
  41a7a0:	retf   
  41a7a1:	add    ebp,DWORD PTR [edx+edi*2+0x9]
  41a7a5:	rcr    ebp,1
  41a7a7:	clc    
  41a7a8:	and    dl,dh
  41a7aa:	das    
  41a7ab:	adc    edi,DWORD PTR [edx-0x45]
  41a7ae:	xlat   BYTE PTR ds:[ebx]
  41a7af:	shl    ah,cl
  41a7b1:	add    DWORD PTR [edi+ebx*1],ecx
  41a7b4:	ins    DWORD PTR es:[edi],dx
  41a7b5:	jno    0x41a816
  41a7b7:	out    dx,eax
  41a7b8:	retf   
  41a7b9:	mov    DWORD PTR [edi+0x6e],0x5e9731b6
  41a7c0:	or     eax,0xa8e76e33
  41a7c5:	shr    BYTE PTR [ecx+0xf2a34ed],1
  41a7cb:	pop    esi
  41a7cc:	push   esi
  41a7cd:	gs and eax,0x37ee0b1f
  41a7d3:	jl     0x41a7ff
  41a7d5:	dec    edx
  41a7d6:	fnstenv [ebx+ebx*4+0x49]
  41a7da:	mov    eax,0x924d54db
  41a7df:	mov    dl,0x3a
  41a7e1:	sahf   
  41a7e2:	mov    al,0x8b
  41a7e4:	adc    dh,BYTE PTR [ecx+ebp*1+0x2d]
  41a7e8:	or     al,0x9c
  41a7ea:	ret    
  41a7eb:	inc    esi
  41a7ec:	fdivr  QWORD PTR [edx-0x45]
  41a7ef:	xchg   ebp,esp
  41a7f1:	addr16 jae 0x41a83c
  41a7f4:	icebp  
  41a7f5:	jecxz  0x41a7cf
  41a7f7:	sub    BYTE PTR [edi+eiz*2-0xe],bh
  41a7fb:	mov    cl,0xd8
  41a7fd:	adc    dh,BYTE PTR ds:0xd8f8088e
  41a803:	push   edx
  41a804:	adc    al,0x58
  41a806:	jae    0x41a7e2
  41a808:	iret   
  41a809:	dec    ebp
  41a80a:	add    cl,BYTE PTR [esi+0x63]
  41a80d:	jb     0x41a7f7
  41a80f:	jno    0x41a7ce
  41a811:	add    al,0xce
  41a813:	sub    al,BYTE PTR [esi]
  41a815:	lahf   
  41a816:	lds    eax,FWORD PTR [eax]
  41a818:	adc    BYTE PTR [ebx+0x251fb38d],ah
  41a81e:	jp     0x41a858
  41a820:	cmp    BYTE PTR [esi+eax*8-0x1c09117],ch
  41a827:	dec    ecx
  41a828:	sar    BYTE PTR [ebp+eax*1+0x20e2ca8a],1
  41a82f:	call   0x1bf9dc50
  41a834:	lds    ebp,FWORD PTR [edx+0x31]
  41a837:	enter  0x45d1,0xc4
  41a83b:	ficomp WORD PTR [edi]
  41a83d:	lods   al,BYTE PTR ds:[esi]
  41a83e:	js     0x41a8ab
  41a840:	daa    
  41a841:	cmp    BYTE PTR [ebp+0x3a13fc51],dh
  41a847:	and    DWORD PTR [eax],eax
  41a849:	dec    esp
  41a84a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a84b:	mov    ds:0xed86e65f,eax
  41a850:	or     dh,ch
  41a852:	shl    BYTE PTR [edx+0x65b71eea],0xdc
  41a859:	loopne 0x41a8ba
  41a85b:	add    DWORD PTR [ecx],0x7d
  41a85e:	xchg   esp,eax
  41a85f:	mov    dh,0x91
  41a861:	xchg   esi,eax
  41a862:	outs   dx,BYTE PTR ds:[esi]
  41a863:	mov    eax,0xbbad8954
  41a868:	daa    
  41a869:	dec    edi
  41a86a:	or     ah,BYTE PTR [edx-0x7e511592]
  41a870:	fcomp  QWORD PTR [esi-0x51]
  41a873:	jg     0x41a7fe
  41a875:	popa   
  41a876:	outs   dx,DWORD PTR ds:[esi]
  41a877:	enter  0x97ff,0xae
  41a87b:	aad    0x84
  41a87d:	call   0xacfa:0xa7dda8cd
  41a884:	push   ds
  41a885:	and    DWORD PTR [edx+0x1b],0x522d4b4a
  41a88c:	xchg   ebp,eax
  41a88d:	dec    ebx
  41a88e:	or     dl,bh
  41a890:	add    DWORD PTR [edi+0x65],edx
  41a893:	push   ss
  41a894:	sub    ch,BYTE PTR [eax+0x310e9f49]
  41a89a:	imul   edi,DWORD PTR [ebp+eiz*8-0x587a4b34],0xa8612023
  41a8a5:	mov    BYTE PTR [eax+ecx*2-0x31],al
  41a8a9:	mov    esi,edx
  41a8ab:	pop    ecx
  41a8ac:	or     eax,0xa84d8e8c
  41a8b1:	jge    0x41a921
  41a8b3:	sbb    ebp,0x17
  41a8b6:	mov    ebp,0x4a0c72f6
  41a8bb:	cmp    eax,ecx
  41a8bd:	mov    ebp,0xedc13206
  41a8c2:	xor    al,0x57
  41a8c4:	xchg   ecx,ebp
  41a8c6:	repz fbstp TBYTE PTR [ebx]
  41a8c9:	adc    eax,0xff53f8e6
  41a8ce:	lods   al,BYTE PTR ds:[esi]
  41a8cf:	mov    ds:0xcf8259a2,eax
  41a8d4:	popf   
  41a8d5:	(bad)  
  41a8d6:	xchg   esi,eax
  41a8d7:	shl    esi,cl
  41a8d9:	mov    eax,0xfce9b35a
  41a8de:	(bad)  
  41a8df:	(bad)  
  41a8e0:	dec    ebx
  41a8e1:	arpl   WORD PTR [esi+0x41],dx
  41a8e4:	test   BYTE PTR [edx],dh
  41a8e6:	ins    BYTE PTR es:[edi],dx
  41a8e7:	xor    bl,BYTE PTR [edi-0x5de58c29]
  41a8ed:	int    0x8d
  41a8ef:	pop    esi
  41a8f0:	js     0x41a958
  41a8f2:	cmc    
  41a8f3:	dec    esi
  41a8f4:	mov    ebp,DWORD PTR [ebx-0x48c894be]
  41a8fa:	add    ecx,DWORD PTR [eax]
  41a8fc:	jae    0x41a8e2
  41a8fe:	jmp    0x41a8fe
  41a900:	or     ebp,DWORD PTR es:[esi+esi*8-0x3]
  41a905:	dec    eax
  41a906:	lahf   
  41a907:	arpl   di,cx
  41a909:	inc    esi
  41a90a:	xlat   BYTE PTR ds:[ebx]
  41a90b:	mov    ecx,0x19864d7a
  41a910:	xchg   esi,eax
  41a911:	xchg   edi,eax
  41a912:	sbb    al,ah
  41a914:	jecxz  0x41a8ea
  41a916:	test   al,0x88
  41a918:	icebp  
  41a919:	inc    eax
  41a91a:	pop    esi
  41a91b:	loop   0x41a998
  41a91d:	xor    eax,0xbd89e309
  41a922:	mov    eax,0x74705237
  41a927:	retf   0x93cc
  41a92a:	clc    
  41a92b:	inc    ebx
  41a92c:	dec    esi
  41a92d:	mov    dl,0x56
  41a92f:	(bad)  
  41a930:	call   0x9dc53e68
  41a935:	iret   
  41a936:	pop    eax
  41a937:	pop    edx
  41a938:	aam    0x72
  41a93a:	pop    ds
  41a93b:	aam    0x5
  41a93d:	sbb    bx,dx
  41a940:	mov    ecx,0xa83dc936
  41a945:	scas   eax,DWORD PTR es:[edi]
  41a946:	xchg   esi,eax
  41a947:	ins    DWORD PTR es:[edi],dx
  41a948:	(bad)  
  41a949:	out    0xa0,eax
  41a94b:	in     al,0xc
  41a94d:	call   0x6226:0xba0ae290
  41a954:	adc    esi,DWORD PTR [ebx-0x170f2407]
  41a95a:	ss shl ah,cl
  41a95d:	ds ss dec ebp
  41a960:	data16 jo 0x41a97a
  41a963:	popf   
  41a964:	mov    cl,0xd8
  41a966:	mov    DWORD PTR [eax],edx
  41a968:	inc    ebx
  41a969:	rol    BYTE PTR [edx+0x40bc4d51],1
  41a96f:	fdiv   QWORD PTR [ecx]
  41a971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a972:	jg     0x41a96d
  41a974:	out    0x62,al
  41a976:	jge    0x41a906
  41a978:	inc    esi
  41a979:	jno    0x41a94e
  41a97b:	shl    BYTE PTR [ecx+0x31],0x61
  41a97f:	sub    edx,DWORD PTR [ebx+0x82ecd63]
  41a985:	cmp    dl,BYTE PTR [eax-0x35]
  41a988:	arpl   bx,cx
  41a98a:	aam    0xfc
  41a98c:	shr    BYTE PTR [esp+edi*8],0x11
  41a990:	pop    es
  41a991:	dec    esp
  41a992:	inc    ebx
  41a993:	out    dx,al
  41a994:	lea    ecx,[ebp-0x56]
  41a997:	jl     0x41aa10
  41a999:	outs   dx,DWORD PTR ds:[esi]
  41a99a:	xchg   bl,cl
  41a99c:	mov    esp,0x368b7ec5
  41a9a1:	ins    DWORD PTR es:[edi],dx
  41a9a2:	imul   esi,DWORD PTR [eax],0x8075078e
  41a9a8:	inc    esp
  41a9a9:	fmul   DWORD PTR [ebx+0x1b]
  41a9ac:	sub    al,0x68
  41a9ae:	dec    esp
  41a9af:	jle    0x41aa0f
  41a9b1:	div    DWORD PTR [ebp+edx*2+0xd31e133]
  41a9b8:	adc    BYTE PTR [edi*2+0x2320175e],dl
  41a9bf:	xchg   esi,eax
  41a9c0:	mov    ch,0xcc
  41a9c2:	enter  0xe505,0xb4
  41a9c6:	jmp    0x41a94c
  41a9c8:	xor    DWORD PTR [ebp+ebx*1-0x40],edi
  41a9cc:	xor    eax,DWORD PTR [edi]
  41a9ce:	in     al,dx
  41a9cf:	mov    bh,0xae
  41a9d1:	sub    DWORD PTR [edx-0x7ff5bd90],ecx
  41a9d7:	mov    ah,dl
  41a9d9:	std    
  41a9da:	lahf   
  41a9db:	xor    eax,DWORD PTR [edi-0x1a]
  41a9de:	lock icebp 
  41a9e0:	sbb    DWORD PTR [ebx+eiz*1],ecx
  41a9e3:	iret   
  41a9e4:	cmp    dl,BYTE PTR [ecx]
  41a9e6:	bound  ebp,QWORD PTR [ecx]
  41a9e8:	sub    al,0x5a
  41a9ea:	outs   dx,DWORD PTR ds:[esi]
  41a9eb:	js     0x41aa32
  41a9ed:	adc    DWORD PTR [ecx+0x69883cb2],ebx
  41a9f3:	and    edi,DWORD PTR [ebx+0xf]
  41a9f6:	call   0x2f44:0x7963374c
  41a9fd:	sub    edi,DWORD PTR [eax]
  41a9ff:	jno    0x41aa34
  41aa01:	fbstp  TBYTE PTR [esi]
  41aa03:	rol    DWORD PTR cs:[ebx+0x68],0xbb
  41aa08:	mov    al,0x3f
  41aa0a:	aam    0xc5
  41aa0c:	adc    esp,DWORD PTR [ebp-0x1b]
  41aa0f:	push   ebx
  41aa10:	pop    es
  41aa11:	mov    ds:0xe36a5b79,al
  41aa16:	in     al,dx
  41aa17:	call   DWORD PTR [ebp+0x71]
  41aa1a:	in     al,dx
  41aa1b:	into   
  41aa1c:	xor    eax,0x18bb20ab
  41aa21:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa23:	adc    bl,BYTE PTR [esi]
  41aa25:	jl     0x41a9bb
  41aa27:	dec    ebx
  41aa28:	(bad)  
  41aa29:	in     al,dx
  41aa2a:	push   edx
  41aa2b:	jg     0x41aa51
  41aa2d:	add    DWORD PTR ds:0xfd47dfa4,ecx
  41aa33:	mov    dh,0x5
  41aa35:	ins    BYTE PTR es:[edi],dx
  41aa36:	adc    al,0x95
  41aa38:	mov    cl,0xdf
  41aa3a:	sti    
  41aa3b:	test   BYTE PTR [ebp+0x3184010a],dl
  41aa41:	xchg   esp,eax
  41aa42:	out    dx,al
  41aa43:	xchg   ebp,eax
  41aa44:	ret    0xc732
  41aa47:	ficom  DWORD PTR [ebp-0x4b]
  41aa4a:	dec    ebp
  41aa4b:	jecxz  0x41aa58
  41aa4d:	in     eax,dx
  41aa4e:	icebp  
  41aa4f:	or     eax,0x2752e09d
  41aa54:	sub    BYTE PTR [esi],al
  41aa56:	jmp    0x5cb43e09
  41aa5b:	add    esp,ebx
  41aa5d:	dec    ecx
  41aa5e:	scas   eax,DWORD PTR es:[edi]
  41aa5f:	push   eax
  41aa60:	xor    ecx,ebp
  41aa62:	cmc    
  41aa63:	adc    edi,0xffffff8d
  41aa66:	imul   DWORD PTR [ecx-0x34]
  41aa69:	adc    DWORD PTR [ebx-0x99e2a1f],ecx
  41aa6f:	dec    esi
  41aa70:	cld    
  41aa71:	or     al,0xb9
  41aa73:	aam    0x69
  41aa75:	sub    BYTE PTR ds:0x4df033d1,al
  41aa7b:	inc    edi
  41aa7c:	in     eax,dx
  41aa7d:	mov    DWORD PTR [edi+ebp*4],0x3c66855f
  41aa84:	ins    DWORD PTR es:[edi],dx
  41aa85:	add    ecx,DWORD PTR [edx]
  41aa87:	hlt    
  41aa88:	jmp    0x41aa21
  41aa8a:	dec    edi
  41aa8b:	rol    eax,1
  41aa8d:	adc    DWORD PTR [eax-0x57787e60],eax
  41aa93:	or     BYTE PTR [eax+edi*8-0x3818c18d],ah
  41aa9a:	pop    ds
  41aa9b:	sub    BYTE PTR [edi+eax*4],bh
  41aa9e:	sti    
  41aa9f:	xlat   BYTE PTR ds:[ebx]
  41aaa0:	fadd   QWORD PTR [edx+eax*1-0x5ee68f5]
  41aaa7:	mov    ecx,0x5ab48f4e
  41aaac:	cmc    
  41aaad:	push   eax
  41aaae:	loope  0x41ab2c
  41aab0:	sbb    bh,BYTE PTR [edx+0x2c27430]
  41aab6:	mov    ch,0xba
  41aab8:	mov    BYTE PTR ds:[ecx-0x2cdca456],bh
  41aabf:	pop    esi
  41aac0:	fs xchg esi,eax
  41aac2:	pop    ss
  41aac3:	fisttp QWORD PTR cs:[ebx+edi*2]
  41aac7:	iret   
  41aac8:	shl    BYTE PTR [ebx+0x2d5d6dae],cl
  41aace:	jecxz  0x41aa5a
  41aad0:	xor    ebx,DWORD PTR [eax+ecx*4]
  41aad3:	add    ah,BYTE PTR [edx+0x91ea7b1]
  41aad9:	sub    al,0x7f
  41aadb:	lock retf 0x8d6
  41aadf:	mov    bl,0x88
  41aae1:	(bad)  
  41aae2:	sbb    eax,0xf57c7bf5
  41aae7:	das    
  41aae8:	js     0x41ab2b
  41aaea:	mov    edx,0x1f953404
  41aaef:	mov    ebx,0xeff1e88c
  41aaf4:	mov    edi,0x4b892edf
  41aaf9:	lock or eax,0xc0abc121
  41aaff:	lahf   
  41ab00:	push   edi
  41ab01:	sbb    al,0x85
  41ab03:	mov    ebp,0xa453ac5c
  41ab08:	cs icebp 
  41ab0a:	lock cwde 
  41ab0c:	div    BYTE PTR [esi+edx*4-0x5dc791ae]
  41ab13:	inc    ecx
  41ab14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab15:	push   ecx
  41ab16:	fbstp  TBYTE PTR [esi+0x6d]
  41ab19:	mov    al,ds:0x5f0cffa2
  41ab1e:	gs push 0xffffffe2
  41ab21:	stc    
  41ab22:	mov    WORD PTR fs:[edx+0x75],?
  41ab26:	out    dx,eax
  41ab27:	fucom  st(4)
  41ab29:	les    ebx,FWORD PTR [edx+eiz*4]
  41ab2c:	icebp  
  41ab2d:	sbb    DWORD PTR [esi+0x30],ebx
  41ab30:	push   cs
  41ab31:	ret    
  41ab32:	mov    BYTE PTR [ebp-0x2ed8178c],al
  41ab38:	arpl   WORD PTR [ebp+0x36f7cd27],dx
  41ab3e:	xchg   edx,eax
  41ab3f:	(bad)  [esi-0x118050bd]
  41ab45:	adc    eax,0x66531ebc
  41ab4a:	lods   eax,DWORD PTR ds:[esi]
  41ab4b:	xchg   esi,eax
  41ab4c:	mov    esi,0x3b4b81ad
  41ab51:	lds    edx,FWORD PTR [ebx+0x7e]
  41ab54:	push   0xa79f6d3d
  41ab59:	ret    0xd691
  41ab5c:	ja     0x41ab6e
  41ab5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab5f:	popa   
  41ab60:	jl     0x41aae8
  41ab62:	mov    BYTE PTR [eax+0x68],cl
  41ab65:	sub    eax,0x249e5c14
  41ab6a:	xor    BYTE PTR [eax-0x6f2d0ff1],cl
  41ab70:	or     cl,BYTE PTR [edi+edx*2-0x1559d2da]
  41ab77:	xor    eax,DWORD PTR [ecx]
  41ab79:	xchg   ebp,eax
  41ab7a:	ds xchg ebp,eax
  41ab7c:	xchg   edi,eax
  41ab7d:	sub    esp,DWORD PTR [esi+0x2e0f2698]
  41ab83:	popf   
  41ab84:	cmp    DWORD PTR [ebp+0xe7a404d],eax
  41ab8a:	(bad)  [ebp+0x48]
  41ab8d:	pop    es
  41ab8e:	add    dh,BYTE PTR [ecx+0x6fbf831b]
  41ab94:	je     0x41ab24
  41ab96:	(bad)
  41ab99:	dec    ebx
  41ab9a:	iret   
  41ab9b:	xor    al,0xda
  41ab9d:	or     eax,0xef954902
  41aba2:	or     ah,ah
  41aba4:	xor    al,0x6
  41aba6:	int3   
  41aba7:	retf   0x4869
  41abaa:	mov    ah,0x9d
  41abac:	add    al,al
  41abae:	or     ebx,DWORD PTR [edi]
  41abb0:	xchg   DWORD PTR es:[eax+0x5b],esp
  41abb4:	test   eax,0x35d5c6d
  41abb9:	pop    ss
  41abba:	push   ebx
  41abbb:	(bad)
  41abc0:	xchg   esi,eax
  41abc1:	loop   0x41ab8a
  41abc3:	mov    edi,0xc8a5416
  41abc8:	icebp  
  41abc9:	push   esp
  41abca:	jnp    0x41abe9
  41abcc:	test   eax,0xb9b1742a
  41abd1:	lea    ecx,[ebx]
  41abd3:	and    eax,DWORD PTR [eax]
  41abd5:	fidivr WORD PTR [ecx+0x5b8381e1]
  41abdb:	shr    DWORD PTR [ebp+0x281d4f2a],cl
  41abe1:	or     BYTE PTR [esi],al
  41abe3:	popf   
  41abe4:	pushf  
  41abe5:	aam    0x40
  41abe7:	in     eax,0x18
  41abe9:	add    DWORD PTR [edx-0x101f997f],ebx
  41abef:	sub    ebx,DWORD PTR [ebp-0x3a19b55b]
  41abf5:	cmp    edi,esi
  41abf7:	dec    esi
  41abf8:	push   ds
  41abf9:	xor    DWORD PTR [esi-0x57],ebp
  41abfc:	cmp    al,0x45
  41abfe:	lods   al,BYTE PTR ds:[esi]
  41abff:	sbb    DWORD PTR [edi+0x48057a78],ebp
  41ac05:	xchg   ah,bl
  41ac07:	out    0xa2,al
  41ac09:	push   esi
  41ac0a:	in     al,0x9
  41ac0c:	sub    DWORD PTR [ebx-0x43],0xffffff93
  41ac10:	xor    eax,0xe0e8c040
  41ac15:	sbb    edx,eax
  41ac17:	add    DWORD PTR [ebp+0x78e12dce],ecx
  41ac1d:	xchg   esp,eax
  41ac1e:	sbb    bh,bh
  41ac20:	push   cs
  41ac21:	mov    esi,0x3575deb9
  41ac26:	jns    0x41ac61
  41ac28:	mov    DWORD PTR [edi+0x66c031b6],esp
  41ac2e:	outs   dx,DWORD PTR ds:[esi]
  41ac2f:	cmp    ecx,DWORD PTR [eax]
  41ac31:	in     al,dx
  41ac32:	push   edx
  41ac33:	fadd   QWORD PTR [edi+0x7a52a338]
  41ac39:	fs ja  0x41ac9a
  41ac3c:	or     eax,0x91176063
  41ac41:	fld    st(6)
  41ac43:	ja     0x41abfb
  41ac45:	add    esi,DWORD PTR gs:[bx+si+0x6b57]
  41ac4b:	outs   dx,BYTE PTR ds:[esi]
  41ac4c:	data16 aad 0x87
  41ac4f:	push   ds
  41ac50:	cmp    ebp,DWORD PTR [edx+esi*4+0x28633091]
  41ac57:	loop   0x41ac5f
  41ac59:	aaa    
  41ac5a:	fdivp  st(4),st
  41ac5c:	pushf  
  41ac5d:	add    BYTE PTR [edx+0x37],ch
  41ac60:	pop    ebp
  41ac61:	xchg   DWORD PTR [ecx-0x701dd6ea],edx
  41ac67:	fs inc edi
  41ac69:	fsubr  QWORD PTR [ebx]
  41ac6b:	les    ecx,FWORD PTR [edi+0x0]
  41ac6e:	(bad)  
  41ac6f:	cs pop ss
  41ac71:	rcr    bh,cl
  41ac73:	outs   dx,BYTE PTR ds:[esi]
  41ac75:	push   es
  41ac76:	and    al,BYTE PTR [ebp+0x6]
  41ac79:	loop   0x41ac23
  41ac7b:	fsubr  st(3),st
  41ac7d:	sti    
  41ac7e:	lock or ah,BYTE PTR [edx+0x54]
  41ac82:	lods   eax,DWORD PTR ds:[esi]
  41ac83:	add    al,0x78
  41ac85:	jb     0x41acb1
  41ac87:	stos   DWORD PTR es:[edi],eax
  41ac88:	and    al,0x2d
  41ac8a:	push   edi
  41ac8b:	pop    edi
  41ac8c:	sbb    al,0x28
  41ac8e:	pop    eax
  41ac8f:	repz lock push ecx
  41ac92:	mov    al,ds:0x2fb4287a
  41ac97:	and    ebx,DWORD PTR [ebp-0x3b]
  41ac9a:	das    
  41ac9b:	adc    ecx,ebp
  41ac9d:	xor    edx,DWORD PTR [ecx+eiz*2-0x4c]
  41aca1:	(bad)  
  41aca2:	ficomp WORD PTR [eax]
  41aca4:	dec    ebx
  41aca5:	sbb    BYTE PTR [edx+0x72bde8c6],dl
  41acab:	out    dx,eax
  41acac:	gs dec ecx
  41acae:	or     dh,BYTE PTR [esi-0x5579ddb4]
  41acb4:	sti    
  41acb5:	lods   al,BYTE PTR ds:[esi]
  41acb6:	dec    ebx
  41acb7:	sbb    DWORD PTR [eax+ecx*8],ebp
  41acba:	(bad)  
  41acbb:	mov    al,0xf7
  41acbd:	push   edi
  41acbe:	xor    BYTE PTR [ecx-0x65a83b71],cl
  41acc4:	dec    ebp
  41acc5:	fs in  eax,0x72
  41acc8:	cmp    DWORD PTR [ecx-0x2c158d02],ebx
  41acce:	inc    eax
  41accf:	dec    esi
  41acd0:	xchg   ebx,eax
  41acd1:	and    BYTE PTR [eax+0x3b1590e7],ah
  41acd7:	mov    ds:0x4c6a4ae,eax
  41acdc:	dec    esi
  41acdd:	ss fwait
  41acdf:	push   0x40
  41ace1:	gs push ss
  41ace3:	retf   
  41ace4:	sbb    ebx,eax
  41ace6:	pop    edi
  41ace7:	gs scas al,BYTE PTR es:[edi]
  41ace9:	(bad)  
  41acea:	mov    ebp,0x99f7cd58
  41acf0:	dec    ebx
  41acf1:	ficomp DWORD PTR [ecx]
  41acf3:	sar    DWORD PTR ds:0xf4d45646,1
  41acf9:	outs   dx,BYTE PTR ds:[esi]
  41acfa:	sub    eax,0xc7f75b01
  41acff:	lods   eax,DWORD PTR ds:[esi]
  41ad00:	bound  edx,QWORD PTR [ebx-0x72]
  41ad03:	sub    al,0x22
  41ad05:	mov    BYTE PTR [eax-0x3a7f00f8],dl
  41ad0b:	fild   WORD PTR [edi]
  41ad0d:	and    bh,bh
  41ad0f:	inc    edi
  41ad10:	arpl   WORD PTR [ebx-0x77318b2],ax
  41ad16:	ret    0x8926
  41ad19:	fisub  DWORD PTR [edx+ecx*2-0x269966b2]
  41ad20:	jnp    0x41aca8
  41ad22:	jno    0x41ad3d
  41ad24:	lea    eax,[esi+eiz*2+0x5e9ef70d]
  41ad2b:	sub    esp,ecx
  41ad2d:	test   eax,0xe45635cf
  41ad32:	inc    ebx
  41ad33:	test   edi,eax
  41ad35:	retf   0x44c8
  41ad38:	xor    DWORD PTR [ebx+0x7c2bce02],0xfffffff6
  41ad3f:	pop    ebp
  41ad40:	aas    
  41ad41:	retf   0x187d
  41ad44:	stos   BYTE PTR es:[edi],al
  41ad45:	push   0x210b1fde
  41ad4a:	cld    
  41ad4b:	cdq    
  41ad4c:	mov    dh,0x26
  41ad4e:	mov    DWORD PTR [edi+ebx*4+0x2d],esi
  41ad52:	push   ebx
  41ad53:	aad    0x3e
  41ad55:	mov    DWORD PTR [esi+0x24],0x3197d9e9
  41ad5c:	jae    0x41adc4
  41ad5e:	out    0xa8,al
  41ad60:	jns    0x41ad2a
  41ad62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad63:	jno    0x41ad98
  41ad65:	loop   0x41ad53
  41ad67:	and    DWORD PTR [ebx],0xf
  41ad6a:	push   ebx
  41ad6b:	outs   dx,DWORD PTR ds:[esi]
  41ad6c:	jp     0x41ad88
  41ad6e:	sahf   
  41ad6f:	adc    eax,0x4cc21fc5
  41ad74:	and    BYTE PTR [eax+0x41],ch
  41ad77:	add    DWORD PTR [ecx],edi
  41ad79:	jbe    0x41ad7f
  41ad7b:	loope  0x41ad4f
  41ad7d:	xor    bl,BYTE PTR [edx+edx*8-0x30]
  41ad81:	sahf   
  41ad82:	loopne 0x41ad22
  41ad84:	ss xor al,0xd1
  41ad87:	call   0x518c:0x2f0aa7a4
  41ad8e:	fdiv   QWORD PTR [ecx+0x27]
  41ad91:	xchg   ebp,eax
  41ad92:	mov    eax,0xf4a6879e
  41ad97:	add    eax,0xb0a2afa9
  41ad9c:	mov    eax,0xaaca153d
  41ada1:	cmc    
  41ada2:	cli    
  41ada3:	cmp    eax,0x15a9ccbd
  41ada8:	inc    ecx
  41ada9:	dec    edi
  41adaa:	aaa    
  41adab:	pop    esi
  41adac:	adc    eax,0xbe9e2433
  41adb1:	fsub   QWORD PTR [eax-0x4]
  41adb4:	pop    ebx
  41adb5:	out    dx,al
  41adb6:	mov    bh,0x97
  41adb8:	push   ecx
  41adb9:	rol    DWORD PTR [esp+esi*4-0x13ac5f21],cl
  41adc0:	adc    DWORD PTR [ecx],0x5d3ab79
  41adc6:	lods   eax,DWORD PTR ds:[esi]
  41adc7:	bound  edx,QWORD PTR [ecx-0xe]
  41adca:	adc    BYTE PTR [edi+ebx*1],al
  41adcd:	aaa    
  41adce:	das    
  41adcf:	push   eax
  41add0:	lds    edx,FWORD PTR [esi-0x2d44805f]
  41add6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41add7:	sub    BYTE PTR [edi+eax*8],dh
  41adda:	loopne 0x41ae3c
  41addc:	mov    dl,0xef
  41adde:	xor    eax,0xb74803ca
  41ade3:	nop
  41ade4:	les    ebp,FWORD PTR [edx+ebp*2+0x5c838901]
  41adeb:	das    
  41adec:	aaa    
  41aded:	jge    0x41adfe
  41adef:	in     al,0x37
  41adf1:	std    
  41adf2:	push   esi
  41adf3:	jmp    0x4a352f8b
  41adf8:	les    ecx,FWORD PTR [edi-0x14]
  41adfb:	popf   
  41adfc:	stos   DWORD PTR es:[edi],eax
  41adfd:	mov    ebx,0x317d0f22
  41ae02:	and    al,BYTE PTR ds:0x963b1b7f
  41ae08:	cmp    DWORD PTR [edx+0x6d56565f],esp
  41ae0e:	jle    0x41ae07
  41ae10:	add    DWORD PTR [edx],eax
  41ae12:	(bad)  
  41ae13:	add    ch,BYTE PTR [esp+ebp*1+0x23]
  41ae17:	sbb    BYTE PTR [esi-0x3590d6c5],ah
  41ae1d:	xchg   DWORD PTR [ecx+0x15],esi
  41ae20:	scas   al,BYTE PTR es:[edi]
  41ae21:	lods   al,BYTE PTR ds:[esi]
  41ae22:	jge    0x41ae74
  41ae24:	jecxz  0x41add8
  41ae26:	stos   BYTE PTR es:[edi],al
  41ae27:	jno    0x41ae04
  41ae29:	clc    
  41ae2a:	out    0xcd,eax
  41ae2c:	jbe    0x41ae11
  41ae2e:	out    dx,al
  41ae2f:	dec    edx
  41ae30:	xchg   BYTE PTR [ecx+0x3a301bd],dl
  41ae36:	lods   eax,DWORD PTR ds:[esi]
  41ae37:	mov    ebx,0x5c1a319f
  41ae3c:	pusha  
  41ae3d:	out    0xe8,al
  41ae3f:	repz xor al,0xd5
  41ae42:	sub    esp,DWORD PTR [ecx-0x39]
  41ae45:	pop    ds
  41ae46:	ret    0xd376
  41ae49:	push   ecx
  41ae4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae4b:	inc    edx
  41ae4c:	jnp    0x41aea3
  41ae4e:	rcl    bh,1
  41ae50:	mov    esi,0x2a964a0b
  41ae55:	shl    BYTE PTR [edi-0x52b9142e],cl
  41ae5b:	ss dec eax
  41ae5d:	into   
  41ae5e:	loop   0x41ade4
  41ae60:	sub    ecx,DWORD PTR [edi+0x77]
  41ae63:	pop    ds
  41ae64:	mov    eax,0xad446852
  41ae69:	loope  0x41ae2d
  41ae6b:	pop    edx
  41ae6c:	stos   BYTE PTR es:[edi],al
  41ae6d:	lds    edi,FWORD PTR [edx-0x53]
  41ae70:	nop
  41ae71:	out    dx,eax
  41ae72:	xchg   edx,eax
  41ae73:	stos   DWORD PTR es:[edi],eax
  41ae74:	dec    ebx
  41ae75:	das    
  41ae76:	push   ds
  41ae77:	or     eax,0xa84c1109
  41ae7c:	add    bh,dl
  41ae7e:	and    al,BYTE PTR [edi+0x6d]
  41ae81:	adc    eax,0xf9b3fefc
  41ae86:	pop    es
  41ae87:	faddp  st(6),st
  41ae89:	jl     0x41ae45
  41ae8b:	sahf   
  41ae8c:	mov    dh,BYTE PTR [ebx+edx*2-0x5b]
  41ae90:	retf   0x188a
  41ae93:	jb     0x41ae39
  41ae95:	lods   al,BYTE PTR ds:[esi]
  41ae96:	xor    DWORD PTR [ecx-0x7dc4711c],ebx
  41ae9c:	outs   dx,BYTE PTR ds:[esi]
  41ae9d:	xchg   esp,eax
  41ae9e:	cmp    ebx,edi
  41aea0:	xchg   esi,eax
  41aea1:	scas   al,BYTE PTR es:[edi]
  41aea2:	int3   
  41aea3:	repz sbb ah,dh
  41aea6:	jns    0x41ae8b
  41aea8:	sub    DWORD PTR [ecx],edx
  41aeaa:	call   0x5efc:0xe0977dc8
  41aeb1:	jg     0xa9969032
  41aeb7:	lods   eax,DWORD PTR ds:[esi]
  41aeb8:	in     al,0xcf
  41aeba:	out    0x3a,al
  41aebc:	(bad)  
  41aebd:	dec    edx
  41aebe:	das    
  41aebf:	jle    0x41af33
  41aec1:	pop    ebx
  41aec2:	call   esi
  41aec4:	or     BYTE PTR [ebx+ebp*1],0x6b
  41aec8:	stos   DWORD PTR es:[edi],eax
  41aec9:	lock xchg edi,eax
  41aecb:	mov    eax,ds:0xf96f8a20
  41aed0:	retf   
  41aed1:	inc    ebx
  41aed2:	jecxz  0x41aeab
  41aed4:	push   ebp
  41aed5:	dec    ecx
  41aed6:	add    ebp,DWORD PTR [eax+0x47e2a788]
  41aedc:	cmc    
  41aedd:	lds    esi,FWORD PTR [edi+0x4c]
  41aee0:	mov    ebp,0x45054d15
  41aee5:	mov    dl,0xde
  41aee7:	pop    edi
  41aee8:	jmp    0x643bcd90
  41aeed:	arpl   ax,si
  41aeef:	lods   eax,DWORD PTR ds:[esi]
  41aef0:	mov    ebp,0x7d0119ff
  41aef5:	ja     0x41ae8f
  41aef7:	push   ebp
  41aef8:	push   0xffffffaf
  41aefa:	inc    esi
  41aefb:	xchg   DWORD PTR [esp+edi*1+0x2590d9c6],ebp
  41af02:	add    ebp,edx
  41af04:	shr    BYTE PTR [ecx],cl
  41af06:	hlt    
  41af07:	xor    ch,BYTE PTR [edx-0x45daf67e]
  41af0d:	push   edx
  41af0e:	(bad)  
  41af0f:	int3   
  41af10:	mov    edi,0x7b74e73b
  41af15:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41af17:	dec    ebp
  41af18:	add    BYTE PTR [ebp+0x50fb808a],0x32
  41af1f:	int3   
  41af20:	popa   
  41af21:	cs nop
  41af23:	(bad)  
  41af24:	push   0x4f25c712
  41af29:	jle    0x41af96
  41af2b:	ror    DWORD PTR [ebp-0x560a7dde],0x5b
  41af32:	sub    eax,0xd2a4f1e5
  41af37:	mov    edx,0x2b0dd16a
  41af3c:	int    0x2
  41af3e:	inc    edx
  41af3f:	pusha  
  41af40:	mov    WORD PTR [ecx],?
  41af42:	dec    edi
  41af43:	lods   al,BYTE PTR ds:[esi]
  41af44:	dec    ecx
  41af45:	sti    
  41af46:	icebp  
  41af47:	xchg   esi,eax
  41af48:	(bad)  [edx]
  41af4a:	imul   esi,DWORD PTR [ecx+0x6a],0x41410b7d
  41af51:	push   edi
  41af52:	movzx  esp,WORD PTR [ecx]
  41af55:	mov    dh,0xfd
  41af57:	or     eax,0xccd24339
  41af5c:	aam    0x2e
  41af5e:	out    0xe0,eax
  41af60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af61:	sbb    ch,cl
  41af63:	push   ds
  41af64:	jmp    0x725fe66e
  41af69:	test   eax,0xd5e50a36
  41af6e:	int3   
  41af6f:	pop    ecx
  41af70:	cs pushf 
  41af72:	push   ebp
  41af73:	jnp    0x41af5e
  41af75:	xor    edi,ebp
  41af77:	cli    
  41af78:	loope  0x41af08
  41af7a:	ret    0x7040
  41af7d:	xor    dh,bl
  41af7f:	scas   eax,DWORD PTR es:[edi]
  41af80:	xchg   ecx,eax
  41af81:	push   eax
  41af82:	xor    al,0xae
  41af84:	pushf  
  41af85:	xor    edx,ecx
  41af87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af88:	and    al,0xbd
  41af8a:	sti    
  41af8b:	and    eax,0x9177097
  41af90:	rcl    BYTE PTR [ecx+0x1e],0x54
  41af94:	dec    esp
  41af95:	ret    
  41af96:	mov    eax,0xff2de118
  41af9b:	pop    edx
  41af9c:	mov    dl,0x9b
  41af9e:	pop    eax
  41af9f:	or     cl,cl
  41afa1:	clc    
  41afa2:	pushf  
  41afa3:	addr16 ja 0x41af61
  41afa6:	out    dx,al
  41afa7:	sub    al,bh
  41afa9:	or     cl,BYTE PTR [esi+0x53976de0]
  41afaf:	dec    esp
  41afb0:	mov    esi,0x8d111e65
  41afb5:	push   ds
  41afb6:	xor    eax,0x7094cca4
  41afbb:	aas    
  41afbc:	daa    
  41afbd:	cs sbb eax,0x53e1c628
  41afc3:	xchg   BYTE PTR [eax+0x417a7dcc],dh
  41afc9:	push   ecx
  41afca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afcb:	fisubr WORD PTR [edi+esi*8]
  41afce:	mov    eax,0xf920b51f
  41afd3:	fs rol ecx,0xb8
  41afd7:	adc    al,0x94
  41afd9:	inc    ecx
  41afda:	pop    esi
  41afdb:	js     0x41b05b
  41afdd:	pop    ds
  41afde:	es sahf 
  41afe0:	jg     0x41b022
  41afe2:	add    al,0x4a
  41afe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afe5:	push   eax
  41afe6:	mov    ebp,0x2b0c110
  41afeb:	xchg   DWORD PTR [edx],ecx
  41afed:	xchg   edi,eax
  41afee:	das    
  41afef:	or     eax,0x88cb045
  41aff4:	jl     0x41af82
  41aff6:	mov    al,0x52
  41aff8:	jecxz  0x41afc0
  41affa:	bound  esp,QWORD PTR [esi-0x540aeafb]
  41b000:	out    dx,al
  41b001:	xor    al,0xfc
  41b003:	shl    DWORD PTR [ecx],1
  41b005:	xchg   edi,eax
  41b006:	(bad)  
  41b007:	mov    ds:0xee8821cb,al
  41b00c:	pop    eax
  41b00d:	mov    dh,0xf5
  41b00f:	and    DWORD PTR [edx-0x531ba848],ecx
  41b015:	test   ebp,ecx
  41b017:	pop    edx
  41b018:	hlt    
  41b019:	(bad)  
  41b01a:	aad    0x52
  41b01c:	pop    esp
  41b01d:	or     dh,BYTE PTR [edi]
  41b01f:	xchg   edx,eax
  41b020:	jns    0x41b040
  41b022:	push   ss
  41b023:	xchg   dh,al
  41b025:	enter  0x757f,0x53
  41b029:	das    
  41b02a:	xor    eax,0xe831233e
  41b02f:	stc    
  41b030:	js     0x41b026
  41b032:	adc    al,0xca
  41b034:	mov    eax,0xc2477556
  41b039:	pop    eax
  41b03a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b03b:	cmp    DWORD PTR [ecx*1-0x597c627e],edi
  41b042:	(bad)  
  41b043:	push   ss
  41b044:	dec    edi
  41b045:	jb     0x41b00f
  41b047:	lahf   
  41b048:	fucomi st,st(4)
  41b04a:	leave  
  41b04b:	lods   eax,DWORD PTR ds:[esi]
  41b04c:	test   eax,0x88fe5314
  41b051:	iret   
  41b052:	or     DWORD PTR [edi-0x4b],ebp
  41b055:	sub    BYTE PTR [edx+0x648c5c24],ah
  41b05b:	fmul   QWORD PTR [edi]
  41b05d:	out    dx,eax
  41b05e:	jecxz  0x41b01b
  41b060:	xchg   ecx,eax
  41b061:	xchg   ecx,eax
  41b062:	in     eax,0xb5
  41b064:	sbb    DWORD PTR [edi],ecx
  41b066:	pop    edx
  41b067:	ss cmp eax,0x472ec2f7
  41b06d:	jecxz  0x41b094
  41b06f:	das    
  41b070:	cmp    ecx,ebp
  41b072:	sub    BYTE PTR [edx-0x7b9bace],bh
  41b078:	mov    ch,0xf1
  41b07a:	lock pop edi
  41b07c:	xchg   esp,eax
  41b07d:	into   
  41b07e:	jb     0x41b05f
  41b080:	lock or eax,0x828d2280
  41b086:	lds    edx,FWORD PTR [edi]
  41b088:	cld    
  41b089:	addr16 jl 0x41b04b
  41b08c:	and    al,0x10
  41b08e:	sub    ch,dh
  41b090:	xchg   DWORD PTR [ecx+0x52],ecx
  41b093:	sahf   
  41b094:	mov    ebp,0xed9c7f9f
  41b099:	mov    ds:0xfadfc887,al
  41b09e:	(bad)  
  41b09f:	xor    eax,0x592f1c16
  41b0a4:	mov    esp,0x4ef5c46
  41b0a9:	mov    ds:0xc3c1ec5a,eax
  41b0ae:	and    al,ah
  41b0b0:	ret    0xf4c9
  41b0b3:	push   cs
  41b0b4:	outs   dx,DWORD PTR ds:[esi]
  41b0b5:	xor    ah,BYTE PTR [esi+edi*8+0x184d20a8]
  41b0bc:	adc    ah,BYTE PTR [ebx]
  41b0be:	push   es
  41b0bf:	mov    bl,0x34
  41b0c1:	jp     0x41b102
  41b0c3:	(bad)  
  41b0c4:	jno    0x41b055
  41b0c6:	mov    bl,ah
  41b0c8:	jbe    0x41b06d
  41b0ca:	inc    edx
  41b0cb:	mov    WORD PTR [edx],es
  41b0cd:	dec    esp
  41b0ce:	test   bh,0xe4
  41b0d1:	dec    ebp
  41b0d2:	or     edx,edx
  41b0d4:	leave  
  41b0d5:	fmul   st(6),st
  41b0d7:	test   BYTE PTR [edi],0x68
  41b0da:	pop    ebp
  41b0db:	dec    eax
  41b0dc:	pop    eax
  41b0dd:	xchg   edi,eax
  41b0de:	mov    ch,0xfa
  41b0e0:	pushf  
  41b0e1:	shl    al,cl
  41b0e3:	or     al,0xfc
  41b0e5:	xor    eax,0x2757d134
  41b0ea:	mov    WORD PTR [edi],es
  41b0ec:	fisubr DWORD PTR [edi+0x74]
  41b0ef:	lods   al,BYTE PTR ds:[esi]
  41b0f0:	sbb    al,cl
  41b0f2:	xchg   ecx,eax
  41b0f3:	cwde   
  41b0f4:	sub    al,0x7e
  41b0f6:	add    al,0x1d
  41b0f8:	push   esp
  41b0f9:	xchg   ebx,eax
  41b0fa:	sbb    dh,ah
  41b0fc:	jg     0x41b156
  41b0fe:	push   ebp
  41b0ff:	js     0x41b13d
  41b101:	arpl   WORD PTR [ebx+0x248f839a],sp
  41b107:	inc    edi
  41b108:	and    cl,BYTE PTR [ecx]
  41b10a:	loopne 0x41b133
  41b10c:	gs xor eax,0xfded0076
  41b112:	pop    edx
  41b113:	or     eax,0xd47dfdbf
  41b118:	jmp    FWORD PTR [ebx*8+0x67b1d330]
  41b11f:	ds mov eax,0xc3a665a9
  41b125:	(bad)  
  41b126:	fmul   st,st(0)
  41b128:	hlt    
  41b129:	dec    ecx
  41b12a:	push   0x57
  41b12c:	xchg   ebp,eax
  41b12d:	lahf   
  41b12e:	paddsb mm6,QWORD PTR [edx-0x15]
  41b132:	cli    
  41b133:	and    esi,DWORD PTR [esi-0x54]
  41b136:	fld    TBYTE PTR [esi]
  41b138:	pop    edi
  41b139:	push   edx
  41b13a:	pop    esp
  41b13b:	pop    edx
  41b13c:	hlt    
  41b13d:	nop
  41b13e:	push   0x6a457151
  41b143:	scas   al,BYTE PTR es:[edi]
  41b144:	sbb    BYTE PTR [ebp+0x4ab619d2],dl
  41b14a:	fisub  DWORD PTR [edi]
  41b14c:	lock push ebp
  41b14e:	out    0xf8,eax
  41b150:	cmp    ch,BYTE PTR [edi]
  41b152:	enter  0x9375,0x6a
  41b156:	or     ch,ah
  41b158:	idiv   DWORD PTR [ebx]
  41b15a:	int    0xc7
  41b15c:	cmp    bh,BYTE PTR [ebx+0x7aef9d78]
  41b162:	mov    edi,0xd874c6b5
  41b167:	imul   edx,DWORD PTR [esi-0x6d],0xfb49ec5c
  41b16e:	dec    ecx
  41b16f:	ror    BYTE PTR [ecx+edi*2+0x66eb7594],1
  41b176:	(bad)  
  41b178:	xor    al,0x81
  41b17a:	lods   eax,DWORD PTR ds:[esi]
  41b17b:	pop    edi
  41b17c:	dec    esp
  41b17d:	mov    al,ds:0xe9292f5b
  41b182:	jecxz  0x41b1d0
  41b184:	test   eax,0xf722c973
  41b189:	gs pop ebp
  41b18b:	and    cl,BYTE PTR [eax-0xc2ada50]
  41b191:	stos   DWORD PTR es:[edi],eax
  41b192:	stc    
  41b193:	out    dx,eax
  41b194:	ins    DWORD PTR es:[edi],dx
  41b195:	mov    sp,WORD PTR [ebx+0x638c8dc5]
  41b19c:	dec    esi
  41b19e:	(bad)  
  41b19f:	sbb    al,0x7f
  41b1a1:	and    dl,BYTE PTR [ebp+edx*2+0x7e]
  41b1a5:	lods   al,BYTE PTR ds:[esi]
  41b1a6:	inc    ecx
  41b1a7:	scas   al,BYTE PTR es:[edi]
  41b1a8:	inc    ebx
  41b1a9:	bound  eax,QWORD PTR [ebx-0x6e2e616]
  41b1af:	sti    
  41b1b0:	inc    ecx
  41b1b1:	cli    
  41b1b2:	or     DWORD PTR [esi],ebx
  41b1b4:	push   ebp
  41b1b5:	shl    DWORD PTR [esi-0x1955daf6],cl
  41b1bb:	sbb    ch,BYTE PTR [edx-0x35645fc4]
  41b1c1:	or     ebp,DWORD PTR [edx+0x2b]
  41b1c4:	sub    al,0x79
  41b1c6:	add    al,0x7c
  41b1c8:	loopne 0x41b1e3
  41b1ca:	sahf   
  41b1cb:	neg    DWORD PTR [eax+eax*2+0x524f80fe]
  41b1d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1d3:	jb     0x41b1cd
  41b1d5:	mov    esp,0xc09f0f36
  41b1da:	mov    dl,0xc9
  41b1dc:	cdq    
  41b1dd:	xor    DWORD PTR [edi+edi*4+0xf8e985],eax
  41b1e4:	rol    BYTE PTR [eax*8+0x12b97467],1
  41b1eb:	xchg   BYTE PTR [eax],ch
  41b1ed:	pop    ss
  41b1ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1ef:	in     al,dx
  41b1f0:	ins    BYTE PTR es:[edi],dx
  41b1f1:	pop    ebx
  41b1f2:	or     eax,0x56c0b2b3
  41b1f7:	test   DWORD PTR [edi-0x56a8ec8f],eax
  41b1fd:	sti    
  41b1fe:	push   esi
  41b1ff:	aad    0x18
  41b201:	pop    ss
  41b202:	and    DWORD PTR [eax+edi*8],edx
  41b205:	mov    al,ds:0xc5d3bb84
  41b20a:	out    dx,al
  41b20b:	adc    bh,0xba
  41b20e:	sub    eax,0xe91722e7
  41b213:	(bad)  
  41b214:	in     eax,0x84
  41b216:	mov    eax,ds:0x8ca96519
  41b21b:	jb     0x41b27c
  41b21d:	push   ebx
  41b21e:	jnp    0x41b1cf
  41b220:	daa    
  41b221:	and    al,0x13
  41b223:	int3   
  41b224:	mov    bh,0x7b
  41b226:	clc    
  41b227:	mov    edi,0xc03cc8a2
  41b22c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b22d:	mov    eax,0x60d44b9f
  41b232:	add    esp,edi
  41b234:	xchg   esi,eax
  41b235:	push   ecx
  41b236:	fs mov esp,0xadd46f28
  41b23c:	(bad)  
  41b23d:	(bad)  
  41b23e:	rol    BYTE PTR [eax-0x5b85b68b],cl
  41b244:	adc    DWORD PTR [edx+0x5e],ebp
  41b247:	mov    ecx,0xe2aa2610
  41b24c:	fwait
  41b24d:	mov    ebp,DWORD PTR [esi]
  41b24f:	add    BYTE PTR [eax-0x11],al
  41b252:	xchg   ah,dl
  41b254:	push   eax
  41b255:	dec    ebx
  41b256:	hlt    
  41b257:	mov    ds,WORD PTR fs:[esi]
  41b25a:	cld    
  41b25b:	clc    
  41b25c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b25d:	dec    edx
  41b25e:	or     bl,ch
  41b260:	(bad)  
  41b261:	jne    0x41b2da
  41b263:	(bad)  
  41b264:	xor    cl,BYTE PTR [ecx+0x4e]
  41b267:	pop    es
  41b268:	imul   esi,DWORD PTR [ebp+0xc71d123],0xffffff8b
  41b26f:	xor    eax,DWORD PTR [edx-0x4e]
  41b272:	fdivr  QWORD PTR [ecx-0x11]
  41b275:	adc    al,0x7a
  41b277:	scas   eax,DWORD PTR es:[edi]
  41b278:	call   0xfdfe:0x245cc002
  41b27f:	dec    ebx
  41b280:	mov    BYTE PTR [ecx-0x23],dl
  41b283:	retf   
  41b284:	les    ebx,FWORD PTR [edx]
  41b286:	xchg   DWORD PTR [ebx-0x25607684],edi
  41b28c:	mov    ecx,0xb0cba179
  41b291:	fiadd  DWORD PTR [ebx+edx*1]
  41b294:	inc    ebp
  41b295:	pop    ebp
  41b296:	add    ebp,eax
  41b298:	mov    ds:0xe268ff35,al
  41b29d:	dec    esi
  41b29e:	xchg   edi,ebp
  41b2a0:	and    al,0x56
  41b2a2:	out    dx,eax
  41b2a3:	in     eax,0x18
  41b2a5:	test   al,0xfe
  41b2a7:	push   eax
  41b2a8:	pop    ss
  41b2a9:	ret    0xbcb7
  41b2ac:	iret   
  41b2ad:	cld    
  41b2ae:	mov    eax,0x6a3952e2
  41b2b3:	pop    ds
  41b2b4:	adc    eax,0x8b2cdd2b
  41b2b9:	out    0x94,eax
  41b2bb:	jb     0x41b245
  41b2bd:	sub    edi,ebx
  41b2bf:	imul   eax,edi,0x1b
  41b2c2:	out    dx,eax
  41b2c3:	xchg   ebx,eax
  41b2c4:	xchg   ebx,eax
  41b2c5:	sbb    bh,BYTE PTR [ecx+0x37]
  41b2c8:	sub    eax,edi
  41b2ca:	data16 (bad) 
  41b2cc:	repz add ch,bl
  41b2cf:	add    al,BYTE PTR [ebp+0x31]
  41b2d2:	push   esp
  41b2d3:	inc    ebx
  41b2d4:	mov    edx,0x1474bd34
  41b2d9:	push   ebp
  41b2da:	into   
  41b2db:	mov    eax,ds:0xb307768
  41b2e0:	das    
  41b2e1:	sub    esp,DWORD PTR [ebx-0x39]
  41b2e4:	clc    
  41b2e5:	hlt    
  41b2e6:	fadd   QWORD PTR [edx-0x7d]
  41b2e9:	and    BYTE PTR [esi+edi*8-0x4afe106],dh
  41b2f0:	xlat   BYTE PTR ds:[ebx]
  41b2f1:	xor    DWORD PTR [ecx+0x4e2be368],ebx
  41b2f7:	(bad)  
  41b2f8:	xchg   ecx,eax
  41b2f9:	adc    DWORD PTR [esi+0x4b],esi
  41b2fc:	jmp    0x43fb:0x47219282
  41b303:	icebp  
  41b304:	adc    eax,0xd515cfa4
  41b309:	clc    
  41b30a:	outs   dx,DWORD PTR cs:[esi]
  41b30c:	inc    ecx
  41b30d:	mov    esp,0x85b7ac50
  41b312:	push   0xffffffd6
  41b314:	mov    dl,0xea
  41b316:	jbe    0x41b339
  41b318:	retf   
  41b319:	push   eax
  41b31a:	in     al,0x34
  41b31c:	dec    ebp
  41b31d:	stc    
  41b31e:	pop    esi
  41b31f:	outs   dx,DWORD PTR ds:[esi]
  41b320:	adc    BYTE PTR [ebp-0x47],al
  41b323:	jno    0x41b37a
  41b325:	xor    edi,DWORD PTR [edi+0x4627ab63]
  41b32b:	shr    DWORD PTR [ecx],1
  41b32d:	mov    ch,BYTE PTR [ebx-0x52]
  41b330:	add    BYTE PTR [eax-0x6432eea8],ah
  41b336:	setge  BYTE PTR [edx-0x418965fa]
  41b33d:	shr    BYTE PTR [ebx],cl
  41b33f:	xchg   BYTE PTR [edx-0x7a0c1307],bl
  41b345:	bound  ebp,QWORD PTR [edi]
  41b347:	and    DWORD PTR [ebx+0x686625c2],edx
  41b34d:	retf   
  41b34e:	call   0xb51a4e34
  41b353:	push   eax
  41b354:	int3   
  41b355:	xor    eax,0x9ace560e
  41b35a:	dec    esi
  41b35b:	mov    ebp,0x9838fab7
  41b360:	or     eax,0xdca1834d
  41b365:	xchg   edx,eax
  41b366:	pushf  
  41b367:	(bad)  
  41b368:	sbb    BYTE PTR [edi+0x3c],cl
  41b36b:	es sti 
  41b36d:	pop    ebx
  41b36e:	test   BYTE PTR ds:0xe10487c0,0xac
  41b375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b376:	add    eax,0x75dec998
  41b37b:	xchg   BYTE PTR [eax-0x1905510c],bl
  41b381:	(bad)  [edi+0x44ccde9b]
  41b387:	mov    eax,ds:0xf8bb1df4
  41b38c:	mov    ecx,0x60b3c799
  41b391:	sub    ebx,esp
  41b393:	rcr    ch,1
  41b395:	arpl   WORD PTR ds:0x6dae2c5d,ax
  41b39b:	aam    0x9d
  41b39d:	retf   0xca68
  41b3a0:	les    eax,FWORD PTR [edi+0x55403dca]
  41b3a6:	mov    esi,DWORD PTR [ebp-0x35]
  41b3a9:	or     DWORD PTR [edi+0x77a3adde],0xdc3781d2
  41b3b3:	or     al,0x5e
  41b3b5:	int3   
  41b3b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3b7:	jl     0x41b35e
  41b3b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3ba:	xchg   esp,eax
  41b3bb:	std    
  41b3bc:	sbb    DWORD PTR [eax+eax*8+0x6a37aa28],0x39
  41b3c4:	push   0xfa10d994
  41b3c9:	mov    ah,0x69
  41b3cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3cc:	mov    WORD PTR [edi],fs
  41b3ce:	je     0x41b445
  41b3d0:	enter  0x867e,0xf
  41b3d4:	(bad)  
  41b3d5:	sbb    BYTE PTR [ebx+0x73],cl
  41b3d8:	cmp    BYTE PTR [ecx+0x59],0xb3
  41b3dc:	sub    cl,BYTE PTR [ebx]
  41b3de:	dec    edx
  41b3df:	fnstcw WORD PTR [ebx+0x22]
  41b3e2:	rcl    BYTE PTR [eax+eiz*1],0x6f
  41b3e6:	test   DWORD PTR [edx+0x4e],edi
  41b3e9:	adc    BYTE PTR [eax-0x18a9f01e],al
  41b3ef:	xchg   ecx,eax
  41b3f0:	jno    0x41b420
  41b3f2:	jnp    0x41b3b7
  41b3f4:	ss ret 0xae6f
  41b3f8:	cmc    
  41b3f9:	icebp  
  41b3fa:	push   esp
  41b3fb:	sub    BYTE PTR ds:0x55372631,cl
  41b401:	test   BYTE PTR [edi+0x6e],cl
  41b404:	xchg   edi,eax
  41b405:	aas    
  41b406:	xchg   esp,eax
  41b407:	in     eax,dx
  41b408:	mov    bl,0x17
  41b40a:	and    cl,ch
  41b40c:	test   BYTE PTR [ebp+0x6edd2ec8],ch
  41b412:	and    al,0x61
  41b414:	shl    DWORD PTR [ecx],1
  41b416:	popa   
  41b417:	ret    0xaf68
  41b41a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b41b:	cmp    al,0x13
  41b41d:	cmp    eax,0x3f7ee435
  41b422:	pop    ecx
  41b423:	hlt    
  41b424:	repz dec ecx
  41b426:	ss pop ecx
  41b428:	mov    dl,0xff
  41b42a:	lods   eax,DWORD PTR ds:[esi]
  41b42b:	popf   
  41b42c:	fs sti 
  41b42e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b42f:	fucom  st(2)
  41b431:	jae    0x41b469
  41b433:	in     eax,dx
  41b434:	jge    0x41b3fc
  41b436:	fldenv [edx]
  41b438:	push   eax
  41b439:	adc    esi,esi
  41b43b:	(bad)  
  41b43c:	faddp  st(6),st
  41b43e:	cmp    al,0x13
  41b440:	inc    esp
  41b441:	xor    eax,DWORD PTR [edx-0x296d8d10]
  41b447:	jmp    0x41b46a
  41b449:	mov    al,ds:0xa98ce896
  41b44e:	xor    esp,ebp
  41b450:	adc    dl,bl
  41b452:	jge    0x41b478
  41b454:	stos   BYTE PTR es:[edi],al
  41b455:	jb     0x41b44c
  41b457:	dec    edx
  41b458:	test   DWORD PTR [eax+0x229a706],eax
  41b45e:	out    0x7d,al
  41b460:	and    BYTE PTR [ecx-0x1e],bh
  41b463:	jno    0x41b48d
  41b465:	stos   BYTE PTR es:[edi],al
  41b466:	sub    BYTE PTR [ebp+ebp*1-0x5cf62a],dl
  41b46d:	pop    ebp
  41b46e:	out    dx,eax
  41b46f:	ret    
  41b470:	pop    esp
  41b471:	ret    
  41b472:	mov    al,0xb
  41b474:	in     eax,0x69
  41b476:	cmc    
  41b477:	push   ebp
  41b478:	mov    ah,0x79
  41b47a:	and    edi,DWORD PTR [edx-0x19]
  41b47d:	push   edx
  41b47e:	jns    0x8497054f
  41b484:	jmp    0x5258:0xd0a7a184
  41b48b:	mov    esp,0xdf45bd65
  41b490:	fisttp DWORD PTR [ecx-0x4ab57c18]
  41b496:	xchg   ebp,eax
  41b497:	fwait
  41b498:	mov    dh,0x85
  41b49a:	test   BYTE PTR [edx-0x30],al
  41b49d:	pop    eax
  41b49e:	adc    BYTE PTR [ebx+ebx*1+0x2c4d5f99],al
  41b4a5:	and    al,0xa7
  41b4a7:	inc    ecx
  41b4a8:	jbe    0x41b458
  41b4aa:	div    BYTE PTR [edi+0x4e]
  41b4ad:	sbb    al,0x49
  41b4af:	and    al,BYTE PTR [ebx]
  41b4b1:	xchg   esp,eax
  41b4b2:	test   DWORD PTR [edx+eax*4-0xb4df54f],ebp
  41b4b9:	push   cs
  41b4ba:	js     0x41b46f
  41b4bc:	(bad)
  41b4bf:	scas   al,BYTE PTR es:[edi]
  41b4c0:	mov    ah,0x30
  41b4c2:	push   edi
  41b4c3:	fs (bad) 
  41b4c5:	imul   edi,DWORD PTR [ebx+edi*2-0x35],0xfffffffa
  41b4ca:	dec    ebx
  41b4cb:	push   ebx
  41b4cc:	sub    al,0x4b
  41b4ce:	jmp    0x41b4ed
  41b4d0:	fstp   DWORD PTR [ebx+eax*2]
  41b4d3:	jge    0x41b4fa
  41b4d5:	ins    BYTE PTR es:[edi],dx
  41b4d6:	mov    esp,0x57ca2ae2
  41b4db:	iret   
  41b4dc:	jle    0x41b547
  41b4de:	or     esp,esp
  41b4e0:	pop    esi
  41b4e1:	sbb    eax,0xf121421d
  41b4e6:	mul    BYTE PTR [esi+0x71]
  41b4e9:	scas   eax,DWORD PTR es:[edi]
  41b4ea:	and    al,0x45
  41b4ec:	hlt    
  41b4ed:	retf   0x71e0
  41b4f0:	mov    bl,0xce
  41b4f2:	add    BYTE PTR [edx-0x3f664dee],ah
  41b4f8:	mov    eax,ds:0xb0f67495
  41b4fd:	xor    eax,0x722efc6d
  41b502:	mov    ah,0x77
  41b504:	sahf   
  41b505:	lock pop ecx
  41b507:	xchg   ebx,eax
  41b508:	sub    esp,ecx
  41b50a:	jecxz  0x41b50e
  41b50c:	push   cs
  41b50d:	mov    ds:0x3cccd9b4,al
  41b512:	mov    dl,0x11
  41b514:	xchg   edx,eax
  41b515:	jl     0x41b531
  41b517:	lahf   
  41b518:	dec    eax
  41b519:	adc    ebp,esp
  41b51b:	xchg   DWORD PTR [esi],esi
  41b51d:	adc    DWORD PTR [eax-0x5e],edi
  41b520:	jns    0x41b59c
  41b522:	sub    dh,bh
  41b524:	push   esp
  41b525:	xor    cl,BYTE PTR cs:[edi]
  41b528:	lods   al,BYTE PTR ds:[esi]
  41b529:	mov    esp,0x85441ff8
  41b52e:	iret   
  41b52f:	or     ebp,esi
  41b531:	jno    0x41b582
  41b533:	dec    ebx
  41b534:	imul   ebx,DWORD PTR [esi+0x69f8725b],0x12
  41b53b:	sub    cl,bh
  41b53d:	test   esi,ecx
  41b53f:	mov    DWORD PTR [edi-0x4d80d420],0xa61b17e
  41b549:	push   es
  41b54a:	test   al,0x29
  41b54c:	add    BYTE PTR [eax+eiz*8+0x2ae9dd55],0xda
  41b554:	and    al,0x63
  41b556:	xor    BYTE PTR [ebx],ch
  41b558:	test   BYTE PTR [esi],ah
  41b55a:	or     DWORD PTR [esi-0x7f91b982],edi
  41b560:	out    dx,eax
  41b561:	inc    esi
  41b562:	jns    0x41b504
  41b564:	jp     0x41b5dc
  41b566:	pop    es
  41b567:	or     al,0x19
  41b569:	mov    bl,0x85
  41b56b:	aad    0x87
  41b56d:	xchg   edi,eax
  41b56e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b56f:	adc    bh,cl
  41b571:	add    ebp,DWORD PTR [ecx+0x31]
  41b574:	(bad)  
  41b575:	mov    ds:0x9cd1d068,al
  41b57a:	mov    eax,0x3eda69de
  41b57f:	int    0xc3
  41b581:	sbb    al,0x5c
  41b583:	scas   al,BYTE PTR es:[edi]
  41b584:	inc    ecx
  41b585:	fdiv   QWORD PTR [esi]
  41b587:	xor    al,0x82
  41b589:	mov    ebp,ds
  41b58b:	mov    al,0xb3
  41b58d:	cmp    BYTE PTR cs:[ebx-0x5f],ch
  41b591:	xor    DWORD PTR [ebx-0x29508406],ebp
  41b597:	test   al,0x82
  41b599:	call   0x11e910fe
  41b59e:	jecxz  0x41b579
  41b5a0:	pop    ebx
  41b5a1:	sub    edx,ebx
  41b5a3:	aas    
  41b5a4:	ret    
  41b5a5:	push   ss
  41b5a6:	cmp    eax,0xff28b661
  41b5ab:	or     BYTE PTR [edi+0x13],dl
  41b5ae:	mov    ebx,0x61f9c1d9
  41b5b3:	cmp    al,0xed
  41b5b6:	ret    
  41b5b7:	pop    eax
  41b5b8:	sahf   
  41b5b9:	fstp   TBYTE PTR [ebx+0x6a]
  41b5bc:	xchg   ch,ch
  41b5be:	data16 jecxz 0x41b582
  41b5c1:	std    
  41b5c2:	cmp    eax,DWORD PTR [edx]
  41b5c4:	mov    dh,0x21
  41b5c6:	clc    
  41b5c7:	sbb    al,0x91
  41b5c9:	(bad)  
  41b5ca:	sub    eax,0x1eb0f5c2
  41b5cf:	pop    ebx
  41b5d0:	ret    
  41b5d1:	aam    0xe7
  41b5d3:	inc    edx
  41b5d4:	into   
  41b5d5:	lock mov esi,DWORD PTR [edx]
  41b5d8:	jmp    0xe1ef:0x8db516cc
  41b5df:	or     BYTE PTR [ecx+0x24],bh
  41b5e2:	shl    DWORD PTR [edi+0xb6c5947],1
  41b5e8:	js     0x41b579
  41b5ea:	jecxz  0x41b5f2
  41b5ec:	bnd jne 0x41b578
  41b5ef:	mov    cl,0x9f
  41b5f1:	ja     0x41b61d
  41b5f3:	xor    BYTE PTR [ebx],0xf3
  41b5f6:	ins    DWORD PTR es:[edi],dx
  41b5f7:	xchg   BYTE PTR [edi],bh
  41b5f9:	adc    eax,0xb629b9ca
  41b5fe:	push   esi
  41b5ff:	inc    eax
  41b600:	retf   
  41b601:	jbe    0x41b58b
  41b603:	in     eax,dx
  41b604:	inc    edx
  41b605:	test   ebp,0xab35f45c
  41b60b:	inc    bp
  41b60d:	ss stc 
  41b60f:	xchg   esp,eax
  41b610:	int    0xcf
  41b612:	mov    al,0xdd
  41b614:	xchg   ebx,eax
  41b615:	mov    ecx,0xfbe7f7c9
  41b61a:	addr16 jno 0x41b61a
  41b61d:	loop   0x41b68c
  41b61f:	jmp    0x18a9e15e
  41b624:	or     BYTE PTR [edi],bl
  41b626:	adc    eax,DWORD PTR [esi+0x1a267f]
  41b62c:	out    dx,al
  41b62d:	cmp    al,0xa2
  41b62f:	lds    ebx,FWORD PTR [esi-0x9]
  41b632:	inc    edx
  41b633:	fld    TBYTE PTR [ecx-0x49]
  41b636:	dec    eax
  41b637:	mov    ebp,0x760d1b59
  41b63c:	aam    0xa
  41b63e:	sti    
  41b63f:	xchg   esi,eax
  41b640:	and    DWORD PTR ds:0x39171c2,ebp
  41b646:	stos   DWORD PTR es:[edi],eax
  41b647:	fisub  WORD PTR [eax-0xa6faf0f]
  41b64d:	dec    ebx
  41b64e:	xchg   dh,bh
  41b650:	mov    bl,0xa6
  41b652:	scas   al,BYTE PTR es:[edi]
  41b653:	in     eax,dx
  41b654:	inc    ebx
  41b655:	adc    ebp,DWORD PTR [edx-0x7c8d04c9]
  41b65b:	cld    
  41b65c:	jbe    0x41b680
  41b65e:	test   BYTE PTR ss:0x47526460,ch
  41b665:	sar    DWORD PTR [ebx],0x37
  41b668:	fdiv   QWORD PTR [ecx+0x22]
  41b66b:	push   ecx
  41b66c:	sub    BYTE PTR [esp+edx*1+0x698bea1a],bh
  41b673:	in     al,0xdd
  41b675:	in     eax,0x8e
  41b677:	add    eax,0x1c9afb04
  41b67c:	(bad)  
  41b67d:	outs   dx,BYTE PTR ds:[esi]
  41b67e:	dec    esi
  41b67f:	push   eax
  41b680:	out    dx,al
  41b681:	mov    ch,0xa5
  41b683:	sub    DWORD PTR [esi],ebx
  41b685:	call   0xd6b8258f
  41b68a:	cli    
  41b68b:	adc    DWORD PTR [edx],esi
  41b68d:	mov    cs,WORD PTR [edx-0x20]
  41b690:	add    eax,0x9d82fa8c
  41b695:	repnz mov al,ds:0xc7f39bf
  41b69b:	jnp    0x41b6de
  41b69d:	ins    DWORD PTR es:[edi],dx
  41b69e:	pop    ebx
  41b69f:	mov    al,0xcd
  41b6a1:	out    dx,al
  41b6a2:	sub    eax,DWORD PTR [ecx+0x54]
  41b6a5:	mov    ecx,0x2d8a9f9f
  41b6aa:	jbe    0x41b697
  41b6ac:	or     cl,bl
  41b6ae:	dec    ecx
  41b6af:	jno    0x41b6b2
  41b6b1:	shr    DWORD PTR [edi+0x77],cl
  41b6b4:	test   DWORD PTR [ebp+0x2af64cee],0xf4d47253
  41b6be:	jmp    0x400fb22c
  41b6c3:	jl     0x41b725
  41b6c5:	scas   eax,DWORD PTR es:[edi]
  41b6c6:	sub    edx,DWORD PTR [edi]
  41b6c8:	or     al,0xbd
  41b6ca:	(bad)  
  41b6cb:	push   ecx
  41b6cc:	mov    dl,0x81
  41b6ce:	in     eax,dx
  41b6cf:	mov    ch,0xa2
  41b6d1:	pop    esi
  41b6d2:	xchg   edx,eax
  41b6d3:	pop    edx
  41b6d4:	mov    esi,0xddd9a453
  41b6d9:	dec    ebp
  41b6da:	stc    
  41b6db:	xor    BYTE PTR [ebx-0x1e],cl
  41b6de:	stc    
  41b6df:	cli    
  41b6e0:	hlt    
  41b6e1:	dec    ebp
  41b6e2:	mov    dl,0xed
  41b6e4:	add    al,0xf5
  41b6e6:	xchg   ebp,eax
  41b6e7:	add    ebx,DWORD PTR [esi+0x6]
  41b6ea:	dec    edi
  41b6eb:	sub    DWORD PTR [ecx+0x5d],ebx
  41b6ee:	push   edi
  41b6ef:	push   es
  41b6f0:	xor    bl,ah
  41b6f2:	adc    dh,ah
  41b6f4:	popf   
  41b6f5:	mov    DWORD PTR ds:0x11ad,edx
  41b6fa:	repnz fstp DWORD PTR es:[ebp+eax*1-0x28]
  41b700:	push   eax
  41b701:	fld    DWORD PTR [esi-0x795d6f6d]
  41b707:	lods   al,BYTE PTR ds:[esi]
  41b708:	mov    ebx,0xb55d7621
  41b70d:	adc    al,0x9f
  41b70f:	push   0xa45da85c
  41b714:	jne    0x41b706
  41b716:	ror    DWORD PTR [ebx+0x68],1
  41b719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b71a:	cmp    edx,ebx
  41b71c:	xchg   edx,eax
  41b71d:	jbe    0x41b6f8
  41b71f:	repz pop es
  41b721:	add    BYTE PTR [edi-0x2b],ah
  41b724:	imul   ecx,ebp,0x58147805
  41b72a:	dec    DWORD PTR ds:0x5c1c0896
  41b730:	es mov esi,0xe2723087
  41b736:	clc    
  41b737:	jne    0x41b777
  41b739:	test   DWORD PTR [ebx-0x67],0xbe458b3d
  41b740:	jp     0x41b780
  41b742:	sahf   
  41b743:	push   ecx
  41b744:	mov    eax,ds:0x18d22739
  41b749:	je     0x41b740
  41b74b:	hlt    
  41b74c:	mov    al,ds:0xa619a606
  41b751:	cmc    
  41b752:	shr    DWORD PTR [ebx],0x7c
  41b755:	push   ds
  41b756:	fadd   DWORD PTR [eax-0x76]
  41b759:	or     ah,BYTE PTR [eax-0x2c]
  41b75c:	mov    ebp,0x28a486a
  41b761:	pcmpgtw mm2,QWORD PTR ds:0xf18bb2fc
  41b768:	lds    esp,FWORD PTR [eax-0x2b]
  41b76b:	pusha  
  41b76c:	jno    0x41b7db
  41b76e:	xor    cl,dh
  41b770:	loop   0x41b782
  41b772:	jo     0x41b7ca
  41b774:	das    
  41b775:	je     0x41b7ee
  41b777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b778:	xor    esi,DWORD PTR [ebp-0x5c]
  41b77b:	xor    al,0x4e
  41b77e:	ror    BYTE PTR [ebx],1
  41b780:	fwait
  41b781:	sub    BYTE PTR [ebx-0x1381daa8],dl
  41b787:	or     dl,bl
  41b789:	cld    
  41b78a:	scas   al,BYTE PTR es:[edi]
  41b78b:	dec    esi
  41b78c:	jmp    0x6180ae97
  41b791:	or     ebp,ebp
  41b793:	iret   
  41b794:	lock xchg ebp,eax
  41b796:	rol    BYTE PTR [esi-0x2438a160],cl
  41b79c:	lahf   
  41b79d:	add    ah,BYTE PTR [edi*2-0x5348cb62]
  41b7a4:	push   ebp
  41b7a5:	lods   eax,DWORD PTR ds:[esi]
  41b7a6:	pop    eax
  41b7a7:	mov    ecx,DWORD PTR [eax+0x5c]
  41b7aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7ab:	into   
  41b7ac:	xor    edx,DWORD PTR [edx-0x75160ec1]
  41b7b2:	mov    ds:0xbf100eb5,al
  41b7b7:	ficom  DWORD PTR [ebp+0x2181ae75]
  41b7bd:	(bad)  
  41b7be:	rcl    DWORD PTR [edi],cl
  41b7c0:	jmp    0x41b824
  41b7c2:	inc    ecx
  41b7c3:	inc    edi
  41b7c4:	cwde   
  41b7c5:	push   es
  41b7c6:	cmp    ah,dh
  41b7c8:	cwde   
  41b7c9:	sbb    cl,BYTE PTR [ebx+0x1e]
  41b7cc:	dec    ebx
  41b7cd:	mov    DWORD PTR [edi+0x69ed059d],ebx
  41b7d3:	out    0xee,eax
  41b7d5:	xor    al,BYTE PTR [eax-0x43]
  41b7d8:	inc    esp
  41b7d9:	adc    al,BYTE PTR [esp+eiz*8+0x1c8008cf]
  41b7e0:	shr    BYTE PTR [edx],0x78
  41b7e3:	js     0x41b837
  41b7e5:	sbb    BYTE PTR [eax-0x5701c217],0x60
  41b7ec:	or     dh,ch
  41b7ee:	lahf   
  41b7ef:	sub    eax,0x3f5f400c
  41b7f4:	leave  
  41b7f5:	xchg   esi,eax
  41b7f6:	mov    dh,0x93
  41b7f8:	push   0x59
  41b7fa:	mov    al,0xa9
  41b7fc:	or     bh,BYTE PTR [ecx]
  41b7fe:	loope  0x41b7e5
  41b800:	mov    esp,0x200f6091
  41b805:	pop    edi
  41b806:	jecxz  0x41b862
  41b808:	add    cl,al
  41b80a:	int    0x8d
  41b80c:	mov    ds:0x81e9e57b,al
  41b811:	daa    
  41b812:	in     al,dx
  41b813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b814:	and    BYTE PTR ds:0xf2536c87,ah
  41b81a:	xchg   DWORD PTR [esi+ecx*8-0x44],esi
  41b81e:	icebp  
  41b81f:	adc    BYTE PTR [eax+0x2cde34d3],0x2d
  41b826:	lods   al,BYTE PTR ds:[esi]
  41b827:	bnd je 0x41b7ee
  41b82a:	ucomiss xmm2,xmm6
  41b82d:	sahf   
  41b82e:	in     al,0x68
  41b830:	(bad)  
  41b831:	mov    bl,0x9a
  41b833:	js     0x41b875
  41b835:	hlt    
  41b836:	push   ds
  41b837:	mov    dh,0x8f
  41b839:	test   BYTE PTR [ecx-0x312286ca],ch
  41b83f:	icebp  
  41b840:	jbe    0x41b8a1
  41b842:	daa    
  41b843:	jne    0x41b8a6
  41b845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b846:	or     al,0xae
  41b848:	mov    es,WORD PTR [ebp+0x55]
  41b84b:	stc    
  41b84c:	mov    ah,0xea
  41b84e:	jle    0x41b805
  41b850:	aaa    
  41b851:	mov    esp,0xfc3c26f6
  41b856:	cmp    eax,eax
  41b858:	fiadd  DWORD PTR [edx-0x1d]
  41b85b:	nop
  41b85c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b85d:	jne    0x41b84f
  41b85f:	xor    DWORD PTR [ecx+0x38],0xb81869fa
  41b866:	xchg   esp,eax
  41b867:	xchg   BYTE PTR [edi],al
  41b869:	pop    edi
  41b86a:	in     al,dx
  41b86b:	imul   ebx,DWORD PTR [ecx+0x35652020],0xffffffe4
  41b872:	in     eax,dx
  41b873:	mov    ebp,DWORD PTR [ecx]
  41b875:	mov    ebp,0xad4e7df2
  41b87a:	push   ebx
  41b87b:	pop    ebp
  41b87c:	dec    esi
  41b87d:	popf   
  41b87e:	mov    ds:0xf8812166,eax
  41b883:	push   esp
  41b884:	push   edx
  41b885:	push   esp
  41b886:	mov    ch,BYTE PTR [ecx-0x65969b58]
  41b88c:	dec    eax
  41b88d:	add    al,0x18
  41b88f:	lods   eax,DWORD PTR ds:[esi]
  41b890:	into   
  41b891:	aam    0x65
  41b893:	addr16 stc 
  41b895:	xlat   BYTE PTR ds:[ebx]
  41b896:	in     eax,0x27
  41b898:	jp     0x41b839
  41b89a:	mov    ebp,edi
  41b89c:	cmc    
  41b89d:	mov    al,BYTE PTR [ecx+0x3d5c6f2c]
  41b8a3:	push   ss
  41b8a4:	fist   DWORD PTR [ecx-0x438c79d5]
  41b8aa:	outs   dx,BYTE PTR ds:[esi]
  41b8ab:	mov    bl,0xd0
  41b8ad:	in     eax,0x8c
  41b8af:	pop    esi
  41b8b0:	push   ebx
  41b8b1:	test   DWORD PTR [edi+ecx*8+0x48],ebp
  41b8b5:	fnop   
  41b8b7:	cmc    
  41b8b8:	pop    ecx
  41b8b9:	in     eax,dx
  41b8ba:	cld    
  41b8bb:	data16 mov ds:0x26f93f09,al
  41b8c1:	pushf  
  41b8c2:	mov    ds:0x8d572c10,al
  41b8c7:	shr    DWORD PTR [edx+0x1095427e],cl
  41b8cd:	dec    ax
  41b8cf:	outs   dx,BYTE PTR ds:[esi]
  41b8d0:	jecxz  0x41b8b8
  41b8d2:	out    dx,al
  41b8d3:	inc    BYTE PTR [ebx-0x6de38d09]
  41b8d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8da:	sub    BYTE PTR [eax],bl
  41b8dc:	dec    ecx
  41b8dd:	daa    
  41b8de:	push   edx
  41b8df:	mov    dl,BYTE PTR [edx+0x6c]
  41b8e2:	push   0xb1a1f253
  41b8e7:	jb     0x41b8c7
  41b8e9:	rcl    BYTE PTR [ecx],0x4a
  41b8ec:	fcom   DWORD PTR [esi+0x233f30cd]
  41b8f2:	retf   
  41b8f3:	mov    al,0x1f
  41b8f5:	enter  0x922e,0x11
  41b8f9:	aaa    
  41b8fa:	cld    
  41b8fb:	adc    eax,0x53190e1
  41b900:	imul   ebx,DWORD PTR [esi+0x74],0x303a4c8c
  41b907:	das    
  41b908:	cmp    BYTE PTR [edx+0x37f9ab3b],bh
  41b90e:	lea    esp,[edx+0x75de30ec]
  41b914:	pop    es
  41b915:	mov    edx,DWORD PTR [ebx-0x4d]
  41b918:	sub    DWORD PTR gs:[edi+0x68],edx
  41b91c:	add    esp,DWORD PTR [esi+0x4a]
  41b91f:	retf   
  41b920:	shr    al,cl
  41b922:	(bad)  
  41b923:	aam    0xcc
  41b925:	xlat   BYTE PTR ds:[ebx]
  41b926:	lea    ebp,[ebx]
  41b928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b929:	dec    edx
  41b92a:	mov    ebp,0x835379c8
  41b92f:	sub    bl,BYTE PTR [esi]
  41b931:	je     0x41e1eea9
  41b937:	arpl   cx,bx
  41b939:	aam    0x5b
  41b93b:	pop    eax
  41b93c:	or     DWORD PTR [esp+eiz*2-0x858e6bd],0x59
  41b944:	mov    al,ds:0x1d036355
  41b949:	shl    DWORD PTR [ebx],1
  41b94b:	and    al,dl
  41b94d:	pop    ss
  41b94e:	push   0xffffffe6
  41b950:	xor    edx,0x5e
  41b953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b954:	and    DWORD PTR [edi],0xbd43a09e
  41b95a:	fmul   QWORD PTR [edx-0x46]
  41b95d:	out    0x61,eax
  41b95f:	dec    ebx
  41b960:	cmp    eax,0x5089d9ef
  41b965:	mov    eax,ds:0x535fabe2
  41b96a:	push   ebx
  41b96b:	xchg   esp,eax
  41b96c:	mov    edx,edi
  41b96e:	and    BYTE PTR [eax],bh
  41b970:	push   cs
  41b971:	lea    ebp,[edi-0x51]
  41b974:	adc    dl,ah
  41b976:	xchg   ecx,eax
  41b977:	mov    DWORD PTR [ecx+ecx*2-0x8],0x5e7b7f3b
  41b97f:	cmp    BYTE PTR [edi+0x1ceeb43e],ch
  41b985:	adc    DWORD PTR [edi],edi
  41b987:	enter  0xfb4f,0xf
  41b98b:	push   0x7c
  41b98d:	sbb    al,0x61
  41b98f:	mov    ecx,0xdfe4a7ae
  41b994:	aas    
  41b995:	pusha  
  41b996:	js     0x41b992
  41b998:	mov    ah,dh
  41b99a:	les    edx,FWORD PTR [eax+0x52]
  41b99d:	cmp    bh,BYTE PTR [esi+0x34]
  41b9a0:	les    edx,FWORD PTR [esi]
  41b9a2:	mov    DWORD PTR [esi-0xce4acaf],eax
  41b9a8:	jl     0x41b9fc
  41b9aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9ab:	ins    DWORD PTR es:[edi],dx
  41b9ac:	push   edx
  41b9ad:	ja     0x41b9aa
  41b9af:	mov    ds:0xe1b31662,al
  41b9b4:	sub    esp,esi
  41b9b6:	push   ebx
  41b9b7:	or     DWORD PTR [ecx+ecx*1],0xffffff89
  41b9bb:	mov    cl,0xed
  41b9bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9be:	out    dx,al
  41b9bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9c0:	int    0x18
  41b9c2:	inc    ebx
  41b9c3:	shr    BYTE PTR [esi],1
  41b9c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9c6:	(bad)  
  41b9c8:	cmp    eax,DWORD PTR [edx-0x1ab70a33]
  41b9ce:	inc    eax
  41b9cf:	push   esp
  41b9d0:	xchg   DWORD PTR [edi+0x232e2120],esi
  41b9d6:	adc    ebx,DWORD PTR [ebx]
  41b9d8:	imul   esi,edx,0xf8c86ce6
  41b9de:	push   ebx
  41b9df:	imul   edi,DWORD PTR [edx+0x4c],0xf6040d0a
  41b9e6:	jg     0x41b977
  41b9e8:	cld    
  41b9e9:	or     BYTE PTR [ecx+edx*1+0x7f280cc5],ch
  41b9f0:	inc    DWORD PTR [ebx+0x48]
  41b9f3:	push   ecx
  41b9f4:	retf   0x4fd1
  41b9f7:	popa   
  41b9f8:	stos   BYTE PTR es:[edi],al
  41b9f9:	jne    0x41ba2a
  41b9fb:	mov    es,eax
  41b9fd:	clc    
  41b9fe:	pop    esi
  41b9ff:	mov    edi,fs
  41ba01:	dec    ebp
  41ba02:	sbb    al,0x4a
  41ba04:	ja     0x41b9e7
  41ba06:	sub    al,0xf8
  41ba08:	mov    dh,0x71
  41ba0a:	jo     0x41ba71
  41ba0c:	sub    eax,0x1547e858
  41ba11:	int3   
  41ba12:	or     eax,0x8534713
  41ba17:	daa    
  41ba18:	mov    ecx,0x563a014
  41ba1d:	imul   ebx,DWORD PTR [ecx+0x5a21591],0x5
  41ba24:	out    dx,al
  41ba25:	xchg   edi,eax
  41ba26:	mov    bl,0x2
  41ba28:	jge    0x41b9cd
  41ba2a:	scas   eax,DWORD PTR es:[edi]
  41ba2b:	add    BYTE PTR [ebx],ch
  41ba2d:	mov    cl,0xfa
  41ba2f:	leave  
  41ba30:	jmp    0x41b9e7
  41ba32:	repnz sti 
  41ba34:	xor    ebp,DWORD PTR [edx-0x5287dd6a]
  41ba3a:	out    dx,al
  41ba3b:	fadd   QWORD PTR [ecx+esi*1+0x49f74b55]
  41ba42:	push   0x9
  41ba44:	in     eax,dx
  41ba45:	sub    BYTE PTR [eax+0x292eb9d8],cl
  41ba4b:	(bad)  
  41ba4c:	in     al,dx
  41ba4d:	cmp    eax,0xba7da59d
  41ba52:	dec    ebp
  41ba53:	jb     0x41ba7b
  41ba55:	test   al,0x94
  41ba57:	rcr    ecx,1
  41ba59:	cs jo  0x41ba11
  41ba5c:	pop    ecx
  41ba5d:	aam    0xab
  41ba5f:	dec    ebx
  41ba60:	mov    edi,0xa7975682
  41ba65:	mov    dh,0xf9
  41ba67:	inc    esp
  41ba68:	iret   
  41ba69:	ror    DWORD PTR [edx],1
  41ba6b:	or     al,0x3d
  41ba6d:	jmp    0xee3f9424
  41ba72:	out    dx,eax
  41ba73:	stc    
  41ba74:	pop    ebx
  41ba75:	pusha  
  41ba76:	popf   
  41ba77:	push   ss
  41ba78:	test   BYTE PTR [esi+0x1c],al
  41ba7b:	les    eax,FWORD PTR [edx-0x4c]
  41ba7e:	jne    0x41bae5
  41ba80:	(bad)  
  41ba81:	cld    
  41ba82:	test   BYTE PTR [ebx-0xc],bl
  41ba85:	imul   eax,DWORD PTR [ebp+0x398cfad],0xffffffb4
  41ba8c:	dec    esi
  41ba8d:	ror    DWORD PTR [edx+ebp*1-0x4e58c9e2],0x24
  41ba95:	js     0x41baf9
  41ba97:	bswap  ebx
  41ba99:	xor    BYTE PTR [edx-0x6a95868d],ah
  41ba9f:	mov    ch,0xf9
  41baa1:	mov    ah,0x5a
  41baa3:	push   esp
  41baa4:	arpl   cx,bp
  41baa6:	iret   
  41baa7:	retf   0x3caa
  41baaa:	rcl    BYTE PTR [eax-0x1ce4e829],cl
  41bab0:	xor    eax,0xd125140e
  41bab5:	(bad)  
  41bab6:	mov    ecx,0xafd94469
  41babb:	xchg   ebx,eax
  41babc:	pusha  
  41babd:	jp     0x41babf
  41babf:	jecxz  0x41bab2
  41bac1:	fistp  DWORD PTR [eax]
  41bac3:	aam    0x3f
  41bac5:	adc    bl,BYTE PTR [ebp+0x20c08f1b]
  41bacb:	(bad)  
  41bacc:	(bad)  
  41bacd:	lahf   
  41bace:	dec    esp
  41bacf:	sub    eax,DWORD PTR [eax]
  41bad1:	(bad)  
  41bad2:	or     DWORD PTR [ecx],esi
  41bad4:	pop    edi
  41bad5:	pop    esp
  41bad6:	outs   dx,BYTE PTR ds:[esi]
  41bad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bad8:	ins    DWORD PTR es:[edi],dx
  41bad9:	cli    
  41bada:	lods   eax,DWORD PTR ds:[esi]
  41badb:	dec    esi
  41badc:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41bade:	pop    ss
  41badf:	cmp    DWORD PTR [edi-0x5b],eax
  41bae2:	(bad)  
  41bae3:	and    eax,DWORD PTR [ebx-0x37026976]
  41bae9:	lea    esi,[esp+ebx*4-0x17d8f28c]
  41baf0:	outs   dx,DWORD PTR ds:[esi]
  41baf1:	inc    esi
  41baf2:	cld    
  41baf3:	mov    esi,0x253e6036
  41baf8:	xor    BYTE PTR [ebp+0x3728fb07],dh
  41bafe:	int3   
  41baff:	push   edi
  41bb00:	test   al,0x98
  41bb02:	sahf   
  41bb03:	sub    BYTE PTR [eax],0xba
  41bb06:	mov    ebp,0x781d0793
  41bb0b:	cmp    DWORD PTR [edx-0x46381904],esi
  41bb11:	sub    DWORD PTR [edi-0x7e],ebx
  41bb14:	cmp    ch,ah
  41bb16:	xchg   ecx,eax
  41bb17:	sti    
  41bb18:	out    0x10,eax
  41bb1a:	dec    ebp
  41bb1b:	gs addr16 push 0x4
  41bb1f:	sub    DWORD PTR [ebp+0xb],ebx
  41bb22:	xchg   DWORD PTR [eax-0x6],edi
  41bb25:	pushf  
  41bb26:	mov    BYTE PTR [eax-0x6d377041],dh
  41bb2c:	hlt    
  41bb2d:	pop    ebp
  41bb2e:	mov    esp,DWORD PTR ds:0x450e1650
  41bb34:	jge    0x41bb80
  41bb36:	jne    0x41bb4b
  41bb38:	xor    eax,0x51befedd
  41bb3d:	or     eax,0x417dc5e8
  41bb42:	and    esi,DWORD PTR [eax]
  41bb44:	sbb    eax,0x2eb662ce
  41bb49:	or     ebx,ecx
  41bb4b:	popa   
  41bb4c:	icebp  
  41bb4d:	jl     0x41bba0
  41bb4f:	call   0x6fd6ea24
  41bb54:	mov    WORD PTR [eax],ss
  41bb56:	(bad)  
  41bb57:	arpl   WORD PTR [edi-0x62],bx
  41bb5a:	jns    0x41bb2f
  41bb5c:	sahf   
  41bb5d:	scas   al,BYTE PTR es:[edi]
  41bb5e:	adc    BYTE PTR [ebx],ch
  41bb60:	mov    ah,0x13
  41bb62:	mov    ah,0xf3
  41bb65:	xor    edi,esi
  41bb67:	sub    BYTE PTR [edi-0x75],ah
  41bb6a:	sti    
  41bb6b:	ret    
  41bb6c:	mov    dh,0x1a
  41bb6e:	pushf  
  41bb6f:	outs   dx,BYTE PTR ds:[esi]
  41bb70:	fcmovne st,st(6)
  41bb72:	(bad)  [edi+ebx*8-0x29]
  41bb76:	adc    bl,BYTE PTR [ebx+0x42]
  41bb79:	cwde   
  41bb7a:	push   0xc
  41bb7c:	xchg   ecx,eax
  41bb7d:	repz in al,0xc3
  41bb80:	frstor [esi+0x54d42830]
  41bb86:	sbb    bh,BYTE PTR [eax]
  41bb88:	fs mov dh,0x8a
  41bb8b:	repnz mov edx,DWORD PTR [ebp-0x5d]
  41bb8f:	(bad)  
  41bb90:	loopne 0x41bb50
  41bb92:	sub    esp,ecx
  41bb94:	addr16 ret 0x8520
  41bb98:	xchg   esp,eax
  41bb99:	mov    cl,0x60
  41bb9b:	out    dx,al
  41bb9c:	jle    0x41bbdf
  41bb9e:	out    0xa0,eax
  41bba0:	xchg   esi,eax
  41bba1:	mov    dh,0xaf
  41bba3:	(bad)  
  41bba5:	out    dx,al
  41bba6:	dec    ecx
  41bba7:	lods   al,BYTE PTR ds:[esi]
  41bba8:	iret   
  41bba9:	pop    ss
  41bbaa:	mov    BYTE PTR [edi],ch
  41bbac:	test   DWORD PTR [esi+eax*4+0x18],edi
  41bbb0:	dec    edi
  41bbb1:	pop    esp
  41bbb2:	or     al,0x4d
  41bbb4:	dec    esi
  41bbb5:	je     0x41bba7
  41bbb7:	fidivr DWORD PTR [edx]
  41bbb9:	inc    esp
  41bbba:	outs   dx,BYTE PTR ds:[esi]
  41bbbb:	es pop esi
  41bbbd:	add    ch,BYTE PTR [ebp+eax*8+0x24]
  41bbc1:	push   ebx
  41bbc2:	sbb    al,0xef
  41bbc4:	ja     0x41bbd3
  41bbc6:	std    
  41bbc7:	pushf  
  41bbc8:	mov    WORD PTR [ebp+0x6e901455],gs
  41bbce:	loopne 0x41bc20
  41bbd0:	add    al,0x8c
  41bbd2:	adc    cl,BYTE PTR [ebx]
  41bbd4:	je     0x41bc12
  41bbd6:	sub    edi,DWORD PTR ds:0x6efe067f
  41bbdc:	push   0x51
  41bbde:	mov    ds:0xebefb001,eax
  41bbe3:	sub    BYTE PTR [ebx+ebp*1+0x27],0x44
  41bbe8:	or     eax,0xe24ba688
  41bbed:	inc    ebp
  41bbef:	stos   DWORD PTR es:[edi],eax
  41bbf0:	aaa    
  41bbf1:	cmp    ebx,DWORD PTR [edi+ecx*4]
  41bbf4:	enter  0xa44b,0x85
  41bbf8:	mov    ds,WORD PTR [esi+ecx*1]
  41bbfb:	ins    DWORD PTR es:[edi],dx
  41bbfc:	rcr    BYTE PTR gs:[ebp+0x2e],1
  41bc00:	push   ecx
  41bc01:	das    
  41bc02:	out    0x9b,al
  41bc04:	push   bp
  41bc06:	out    0xa0,al
  41bc08:	daa    
  41bc09:	aam    0x6f
  41bc0b:	jno    0x41bc87
  41bc0d:	sbb    BYTE PTR [eax+edi*2],al
  41bc10:	push   edx
  41bc11:	ins    BYTE PTR es:[edi],dx
  41bc12:	scas   al,BYTE PTR es:[edi]
  41bc13:	pop    edi
  41bc14:	out    dx,eax
  41bc15:	jae    0x41bbaa
  41bc17:	mov    ds:0xe8e7f788,eax
  41bc1c:	data16 mov ch,0x90
  41bc1f:	arpl   WORD PTR [eax],si
  41bc21:	adc    bl,BYTE PTR [edx]
  41bc23:	dec    ebx
  41bc24:	outs   dx,DWORD PTR ds:[esi]
  41bc25:	(bad)
  41bc28:	add    cl,BYTE PTR [eax+0x60]
  41bc2b:	(bad)  
  41bc2c:	cmp    ah,BYTE PTR [esi+0x77]
  41bc2f:	imul   esi,DWORD PTR [ecx-0xf587b7a],0xffffffff
  41bc36:	das    
  41bc37:	jmp    0x5df17c4f
  41bc3c:	mov    ah,0x5f
  41bc3e:	dec    esi
  41bc3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc40:	in     al,0x50
  41bc42:	mov    bh,0xb7
  41bc44:	sbb    al,0x15
  41bc46:	adc    eax,0x4433b40a
  41bc4b:	popf   
  41bc4c:	enter  0x4696,0x17
  41bc50:	loopne 0x41bc58
  41bc52:	mov    cl,0x5b
  41bc54:	lds    ebx,FWORD PTR [ecx+0x1de1daf]
  41bc5a:	and    ebx,DWORD PTR [ebp+0x6b41d73a]
  41bc60:	clc    
  41bc61:	retf   
  41bc62:	cmp    BYTE PTR [eax+0xa],ch
  41bc65:	and    al,0x4d
  41bc67:	mov    al,0x31
  41bc69:	in     eax,dx
  41bc6a:	mov    ds:0x1661e1e7,al
  41bc6f:	cli    
  41bc70:	lods   eax,DWORD PTR ds:[esi]
  41bc71:	sbb    al,0xe5
  41bc73:	jae    0x41bc39
  41bc75:	(bad)  
  41bc76:	fisttp WORD PTR [ecx-0x3e]
  41bc79:	ins    DWORD PTR es:[edi],dx
  41bc7a:	rcl    BYTE PTR [ebx-0x11deafc0],0xb2
  41bc81:	fistp  QWORD PTR [esi+0x77]
  41bc84:	lahf   
  41bc85:	daa    
  41bc86:	cld    
  41bc87:	jmp    0x22bb:0x13229f8f
  41bc8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc8f:	pushf  
  41bc90:	mov    esp,0x2e99be5b
  41bc95:	dec    eax
  41bc96:	es pop edx
  41bc98:	or     edx,DWORD PTR ds:[edx-0x1dfd6d96]
  41bc9f:	mov    cs,ebx
  41bca1:	or     esp,edx
  41bca3:	dec    edi
  41bca4:	add    DWORD PTR [edx+0x1],ecx
  41bca7:	pop    edi
  41bca8:	arpl   WORD PTR [esi-0xea2e24d],si
  41bcae:	shr    BYTE PTR [ebp-0x71],cl
  41bcb1:	sbb    dh,BYTE PTR [edi+ecx*2-0x33]
  41bcb5:	push   edx
  41bcb6:	enter  0xa0a8,0xe3
  41bcba:	cmp    DWORD PTR [ebp-0x15],0xbb259da
  41bcc1:	hlt    
  41bcc2:	imul   BYTE PTR [ebp-0x77]
  41bcc5:	aas    
  41bcc6:	cmp    ebx,DWORD PTR [edi-0x7d]
  41bcc9:	sbb    eax,0x2cd39176
  41bcce:	add    BYTE PTR [eax-0x5267366b],dl
  41bcd4:	jl     0x41bd37
  41bcd6:	into   
  41bcd7:	fcmovne st,st(3)
  41bcd9:	hlt    
  41bcda:	mov    esi,0x576e9d6a
  41bcdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bce1:	xor    al,0xdc
  41bce3:	push   edx
  41bce4:	ja     0x41bcc7
  41bce6:	push   es
  41bce7:	pop    esi
  41bce8:	dec    eax
  41bce9:	sahf   
  41bcea:	adc    al,0xbd
  41bcec:	jnp    0x41bd11
  41bcee:	jl     0x41bc9b
  41bcf0:	pusha  
  41bcf1:	pop    ecx
  41bcf2:	adc    DWORD PTR [eax],ebx
  41bcf4:	in     eax,0x31
  41bcf6:	pop    ecx
  41bcf7:	mov    dl,0x6b
  41bcf9:	mov    al,0x4b
  41bcfb:	cmp    esp,DWORD PTR [esi-0x5b]
  41bcfe:	jp     0x41bc97
  41bd00:	leave  
  41bd01:	push   ds
  41bd02:	dec    ebx
  41bd03:	dec    ecx
  41bd04:	cwde   
  41bd05:	and    eax,0x10dc4400
  41bd0a:	mov    dh,0xd0
  41bd0c:	call   0x926:0x1ec52bf1
  41bd13:	add    eax,0xffffffc0
  41bd16:	cmp    DWORD PTR [esi+0x37],ebx
  41bd19:	sub    al,0x84
  41bd1b:	push   ebp
  41bd1c:	add    al,0xff
  41bd1e:	xor    bh,BYTE PTR [ebp-0x20bb4ce6]
  41bd24:	mov    ah,0x66
  41bd26:	call   0x4b74:0xb07916d
  41bd2d:	sbb    al,0xae
  41bd2f:	mov    dh,0x92
  41bd31:	or     al,0xea
  41bd33:	xor    eax,0x79e83e09
  41bd38:	es pop eax
  41bd3a:	mov    bl,0xc9
  41bd3c:	fist   DWORD PTR [ecx-0x6d]
  41bd3f:	mov    esp,0x31a60b42
  41bd44:	or     ebp,0xd80e59c0
  41bd4a:	lahf   
  41bd4b:	fadd   st,st(7)
  41bd4d:	out    dx,al
  41bd4e:	out    dx,al
  41bd4f:	xor    al,0x95
  41bd51:	rcl    BYTE PTR [ebx+0x4ed93307],1
  41bd57:	and    DWORD PTR [ebx-0x32],eax
  41bd5a:	ins    DWORD PTR es:[edi],dx
  41bd5b:	xor    dh,bl
  41bd5d:	je     0x41bd8a
  41bd5f:	adc    DWORD PTR [edi],ebx
  41bd61:	(bad)  [eax-0x17b00695]
  41bd67:	imul   ecx,DWORD PTR [esi-0x34],0x33d270bf
  41bd6e:	jne    0x41bd16
  41bd70:	js     0x41bddc
  41bd72:	mov    ds:0xb7935ade,al
  41bd77:	not    dl
  41bd79:	out    0xa2,eax
  41bd7b:	scas   eax,DWORD PTR es:[edi]
  41bd7c:	mov    fs,esp
  41bd7e:	mov    ds:0x9c78afda,al
  41bd83:	inc    ecx
  41bd84:	jnp    0x41bd85
  41bd86:	add    BYTE PTR [esi-0x36],al
  41bd89:	rcl    ecx,1
  41bd8b:	ja     0x41bded
  41bd8d:	(bad)  
  41bd8e:	or     al,0xba
  41bd90:	sbb    eax,0xa2c63ecc
  41bd95:	xchg   DWORD PTR [ebx+eax*4+0x65],eax
  41bd99:	cli    
  41bd9a:	js     0x41bdf1
  41bd9c:	call   0x6939:0x1bec3f88
  41bda3:	push   ebx
  41bda4:	addr16 ds inc edi
  41bda7:	lock (bad) 
  41bdaa:	loopne 0x41be06
  41bdac:	out    dx,al
  41bdad:	inc    esi
  41bdae:	jmp    0xa32d:0x91734008
  41bdb5:	pop    edx
  41bdb6:	aam    0x98
  41bdb8:	mov    bh,ch
  41bdba:	mov    ebx,0xf4e12d9a
  41bdbf:	mov    cl,0xdd
  41bdc1:	cmp    DWORD PTR ds:[eax+0x4b62d663],ebp
  41bdc8:	sbb    eax,0x7a0b6b06
  41bdcd:	imul   edx,DWORD PTR [ebx],0x4eb87a4d
  41bdd3:	add    BYTE PTR [esi-0x5af69fef],cl
  41bdd9:	clc    
  41bdda:	gs in  al,0x3
  41bddd:	rol    BYTE PTR ss:[eax],1
  41bde0:	mov    ah,0x9a
  41bde2:	push   0xffffffa8
  41bde4:	out    dx,al
  41bde5:	out    0xf5,al
  41bde7:	sub    edi,DWORD PTR [ebp+edx*1+0x4ffe8b2a]
  41bdee:	fcmovnbe st,st(3)
  41bdf0:	pop    ebx
  41bdf1:	and    eax,0x31d48f2
  41bdf6:	loope  0x41bdc9
  41bdf8:	xchg   BYTE PTR [ecx-0x7a],dh
  41bdfb:	hlt    
  41bdfc:	sbb    dh,0x8f
  41bdff:	xchg   edx,eax
  41be00:	xchg   ebx,eax
  41be01:	mov    cl,0x8e
  41be03:	pusha  
  41be04:	je     0x41bda2
  41be06:	push   esp
  41be07:	jmp    0x41bda3
  41be09:	rcr    BYTE PTR [eax],1
  41be0b:	cmc    
  41be0c:	inc    BYTE PTR ds:0x802ed4f5
  41be12:	mov    edx,0xe350d6bb
  41be17:	sub    BYTE PTR fs:[eax],cl
  41be1a:	enter  0xb6d9,0x2e
  41be1e:	cmp    ah,BYTE PTR [esp+ecx*8+0x7edb3a3a]
  41be25:	pop    ebp
  41be26:	ret    
  41be27:	ins    DWORD PTR es:[edi],dx
  41be28:	push   ebx
  41be29:	pop    ebp
  41be2a:	push   0xffffffb4
  41be2c:	lock test eax,0xfdb0624d
  41be32:	sbb    DWORD PTR [esi],edi
  41be34:	cld    
  41be35:	retf   
  41be36:	sbb    BYTE PTR [edx],cl
  41be38:	xor    al,0x37
  41be3a:	ss mov dl,0x6f
  41be3d:	popf   
  41be3e:	lock mov eax,ds:0xeeef7664
  41be44:	mov    ch,0x2b
  41be46:	mov    ?,edi
  41be48:	into   
  41be49:	pop    eax
  41be4a:	xchg   esp,eax
  41be4b:	bound  ebx,QWORD PTR [ecx]
  41be4d:	mov    bx,0x1bba
  41be51:	iret   
  41be52:	jne    0x41be69
  41be54:	ss mov bh,0x53
  41be57:	sbb    al,0x76
  41be59:	dec    ecx
  41be5a:	mov    BYTE PTR [esi],al
  41be5c:	push   edx
  41be5d:	push   ecx
  41be5e:	and    cl,BYTE PTR ds:0x199b3386
  41be64:	repz repnz das 
  41be67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be68:	sub    BYTE PTR [edi-0x69],bh
  41be6b:	inc    ebx
  41be6c:	ret    
  41be6d:	fldlg2 
  41be6f:	jle    0x41be9c
  41be71:	mov    dl,0xef
  41be73:	push   ebx
  41be74:	push   0xf92bb449
  41be79:	pop    ecx
  41be7a:	jecxz  0x41be2b
  41be7c:	cmp    cl,BYTE PTR [esi+edx*1]
  41be7f:	and    BYTE PTR [ebp-0x2dde7bb],cl
  41be85:	cli    
  41be86:	sub    al,0xd7
  41be88:	aam    0x29
  41be8a:	dec    esi
  41be8b:	xchg   ebx,eax
  41be8c:	outs   dx,BYTE PTR fs:[esi]
  41be8e:	cmp    eax,DWORD PTR [edx+ecx*1+0x58]
  41be92:	push   ebp
  41be93:	lods   eax,DWORD PTR ds:[esi]
  41be94:	stos   BYTE PTR es:[edi],al
  41be95:	push   ss
  41be96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be97:	mov    DWORD PTR [edx+0x3d798026],edx
  41be9d:	cld    
  41be9e:	push   edx
  41be9f:	mov    ds:0xa07f43a0,eax
  41bea4:	adc    eax,0xe31f755d
  41bea9:	jg     0x41bf02
  41beab:	mov    edi,0x1a7c166e
  41beb0:	xor    eax,0x2c5432cf
  41beb5:	add    esi,ecx
  41beb7:	dec    eax
  41beb8:	(bad)  
  41beb9:	mov    esi,0x6a681eb0
  41bebe:	or     ah,BYTE PTR [ebx+0x4623b4ee]
  41bec4:	idiv   edx
  41bec6:	push   ecx
  41bec7:	out    0x7d,al
  41bec9:	dec    esi
  41beca:	dec    eax
  41becb:	out    0x36,eax
  41becd:	in     eax,0x9f
  41becf:	lahf   
  41bed0:	push   edx
  41bed1:	or     edi,DWORD PTR [edx+0x54]
  41bed4:	into   
  41bed5:	outs   dx,DWORD PTR ds:[esi]
  41bed6:	cli    
  41bed7:	sub    eax,0x497db0ea
  41bedc:	mov    ds:0x31e6cf6b,eax
  41bee1:	dec    esi
  41bee2:	or     al,0x20
  41bee4:	xchg   ebp,eax
  41bee5:	or     ebx,eax
  41bee7:	push   0xfffffff1
  41bee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beea:	dec    edi
  41beeb:	into   
  41beec:	or     al,0xf0
  41beee:	jl     0x41bf49
  41bef0:	cmp    ch,dl
  41bef2:	jl     0x41bebe
  41bef4:	ins    BYTE PTR es:[edi],dx
  41bef5:	mov    ah,0xe3
  41bef7:	xchg   edi,eax
  41bef8:	xor    bl,BYTE PTR [esi-0x796d760]
  41befe:	ss dec esp
  41bf00:	sti    
  41bf01:	and    eax,0xd175d572
  41bf06:	push   esp
  41bf07:	inc    esi
  41bf08:	dec    ebx
  41bf09:	mov    edi,0xc72d706e
  41bf0e:	mov    ds:0x696ac194,eax
  41bf13:	xor    BYTE PTR [ecx+0x6a],dh
  41bf16:	in     al,0x62
  41bf18:	adc    ebx,ebp
  41bf1a:	leave  
  41bf1b:	outs   dx,DWORD PTR ds:[esi]
  41bf1c:	xchg   edx,eax
  41bf1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf1e:	test   BYTE PTR [esi],dh
  41bf20:	or     al,0xa2
  41bf22:	jb     0x41bf97
  41bf24:	and    ah,BYTE PTR [eax+0x62]
  41bf27:	fdiv   st,st(6)
  41bf29:	arpl   di,sp
  41bf2b:	mov    ah,0xb2
  41bf2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf2e:	in     eax,0xce
  41bf30:	int    0x8b
  41bf32:	(bad)  
  41bf33:	lods   al,BYTE PTR ds:[esi]
  41bf34:	popf   
  41bf35:	inc    edx
  41bf36:	cmp    DWORD PTR [esi],ecx
  41bf38:	adc    eax,0x7ff779c5
  41bf3d:	fsub   DWORD PTR [eax-0x7697f304]
  41bf43:	mov    ecx,0x55dcb1e
  41bf48:	in     eax,dx
  41bf49:	mov    cl,0xbf
  41bf4b:	mov    ebx,0xe311feb0
  41bf50:	lea    ecx,[ecx+0x3bb8c6fb]
  41bf56:	pop    edx
  41bf57:	adc    ch,BYTE PTR ds:0x3d815dcd
  41bf5d:	sbb    dh,ch
  41bf5f:	rcl    BYTE PTR [ebp-0x1af1672e],cl
  41bf65:	fdiv   DWORD PTR [ecx+esi*1]
  41bf68:	and    al,0x95
  41bf6a:	out    dx,al
  41bf6b:	fdiv   DWORD PTR [esi+esi*4+0x67395e73]
  41bf72:	(bad)  
  41bf73:	loope  0x41bfc3
  41bf75:	mov    ds:0x604a5cf6,eax
  41bf7a:	loopne 0x41bf74
  41bf7c:	lahf   
  41bf7d:	lods   eax,DWORD PTR ds:[esi]
  41bf7e:	inc    esi
  41bf7f:	aad    0x94
  41bf81:	aam    0xd8
  41bf83:	jge    0x41bf15
  41bf85:	popf   
  41bf86:	push   0xffffffc7
  41bf88:	dec    ebx
  41bf89:	push   edi
  41bf8a:	imul   esi,DWORD PTR [edx-0x6be65071],0xe4494d9b
  41bf94:	cmp    eax,0x953f36e7
  41bf99:	nop
  41bf9a:	jae    0x41bf83
  41bf9c:	outs   dx,DWORD PTR ds:[esi]
  41bf9d:	das    
  41bf9e:	or     bl,0x80
  41bfa1:	popf   
  41bfa2:	push   edx
  41bfa3:	pop    ds
  41bfa4:	or     al,0xdd
  41bfa6:	jns    0x41bf6c
  41bfa8:	cld    
  41bfa9:	sub    cl,BYTE PTR [edi]
  41bfab:	(bad)  
  41bfac:	out    0xb,al
  41bfae:	cmp    bl,BYTE PTR [ebp-0x6675c397]
  41bfb4:	mov    ss,WORD PTR [esi+ebx*1]
  41bfb7:	pushf  
  41bfb8:	lea    edi,[ebx+0x6d1f004]
  41bfbe:	mov    ebx,0x2247c635
  41bfc3:	add    BYTE PTR [ebp-0xa],al
  41bfc6:	push   ss
  41bfc7:	xor    BYTE PTR ds:[eax*8-0x619c5da7],0xf8
  41bfd0:	xchg   edx,eax
  41bfd1:	mov    al,ds:0x9f478314
  41bfd6:	int    0xfe
  41bfd8:	fidivr DWORD PTR ds:0x1430a134
  41bfde:	nop
  41bfdf:	cmp    dl,BYTE PTR [ebx+0x7e498c31]
  41bfe5:	xor    eax,0xf0448c69
  41bfea:	mov    ds:0x8c0795f4,al
  41bfef:	sbb    al,0x60
  41bff1:	jmp    0x41bfd4
  41bff3:	mov    al,ds:0xdca34298
  41bff8:	add    bl,al
  41bffa:	gs test eax,0xf3b94490
  41c000:	(bad)  
  41c001:	aam    0x39
  41c003:	mov    bh,BYTE PTR [eax-0x4e]
  41c006:	pop    es
  41c007:	popf   
  41c008:	mov    ch,0x6a
  41c00a:	jnp    0x41bfa8
  41c00c:	jno    0x41bfcc
  41c00e:	push   0xe35df67d
  41c013:	xor    eax,0xf9b1856
  41c018:	scas   al,BYTE PTR es:[edi]
  41c019:	dec    ebp
  41c01a:	lods   eax,DWORD PTR ds:[esi]
  41c01b:	arpl   WORD PTR [edx+eax*1],cx
  41c01e:	js     0x41c011
  41c020:	push   0xba54425f
  41c025:	popf   
  41c026:	mov    ah,0xd3
  41c028:	mov    ebp,0x7010969b
  41c02d:	inc    esp
  41c02e:	sub    ecx,ecx
  41c030:	mov    cl,0xc8
  41c032:	jmp    0x41c007
  41c034:	push   eax
  41c035:	daa    
  41c036:	or     ebx,DWORD PTR [edx+edx*2+0x621b4631]
  41c03d:	test   BYTE PTR [ebx+0x72e188db],dh
  41c043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c044:	rdmsr  
  41c046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c047:	es ret 0x1df1
  41c04b:	(bad)  
  41c04c:	fucomip st,st(1)
  41c04e:	loopne 0x41c0bd
  41c050:	(bad)
  41c054:	loopne 0x41c050
  41c056:	arpl   bx,cx
  41c058:	push   edi
  41c059:	inc    edi
  41c05a:	pop    eax
  41c05b:	outs   dx,BYTE PTR ds:[esi]
  41c05c:	mov    esi,0xd9dae13c
  41c061:	in     eax,0x24
  41c063:	cmp    BYTE PTR [edi-0x2ddb52f3],ch
  41c069:	sahf   
  41c06a:	aam    0x95
  41c06c:	or     eax,0x75a1dfb2
  41c071:	sbb    al,0x2e
  41c073:	jne    0x41c03e
  41c075:	lock push esi
  41c077:	mov    eax,0xdfdf3541
  41c07c:	(bad)  
  41c07d:	popf   
  41c07e:	and    esi,DWORD PTR ss:[edi+0x50e55091]
  41c085:	adc    al,0xc1
  41c087:	aad    0x6e
  41c089:	aad    0xa4
  41c08b:	mov    edi,0x53818ec1
  41c090:	ficom  WORD PTR [esi+0x755ed660]
  41c096:	xchg   esp,eax
  41c097:	xchg   esp,eax
  41c098:	fwait
  41c099:	dec    eax
  41c09a:	out    0xe,eax
  41c09c:	jg     0x41c0d0
  41c09e:	call   0xb3e9:0xdb5212f5
  41c0a5:	(bad)  
  41c0a6:	cmp    al,0x5e
  41c0a8:	inc    ebx
  41c0a9:	popf   
  41c0aa:	mov    cl,0xc5
  41c0ac:	jnp    0x41c037
  41c0ae:	sbb    BYTE PTR [edi+0x6c17caa5],0x49
  41c0b5:	into   
  41c0b6:	and    eax,0x6dc6f12
  41c0bb:	in     al,dx
  41c0bc:	inc    ebp
  41c0bd:	cli    
  41c0be:	push   ds
  41c0bf:	dec    eax
  41c0c0:	pop    ss
  41c0c1:	adc    esp,ebp
  41c0c3:	repz xchg cl,bh
  41c0c6:	jl     0x41c0bf
  41c0c8:	sti    
  41c0c9:	jne    0x41c0d2
  41c0cb:	nop
  41c0cc:	pop    edi
  41c0cd:	jmp    esp
  41c0cf:	push   0xb334d3a0
  41c0d4:	int    0xe
  41c0d6:	xchg   esi,eax
  41c0d7:	in     eax,dx
  41c0d8:	call   0xe2f08fb3
  41c0dd:	or     ch,BYTE PTR [ebp-0x6601d117]
  41c0e3:	int    0x46
  41c0e5:	jp     0x41c153
  41c0e7:	cmp    al,0x7
  41c0ea:	xchg   ebp,eax
  41c0eb:	and    cl,BYTE PTR [edi]
  41c0ed:	and    eax,0x6ca9d0fe
  41c0f2:	cmp    ebp,DWORD PTR gs:[ecx+0x316604df]
  41c0f9:	in     al,dx
  41c0fa:	push   eax
  41c0fb:	push   0xf7b45c3e
  41c100:	mov    bh,0x58
  41c102:	jne    0x41c0ec
  41c104:	in     eax,0xf
  41c106:	cmp    BYTE PTR [ebx],dh
  41c108:	add    BYTE PTR [ebx+0x5],0x1a
  41c10c:	inc    ebp
  41c10d:	out    dx,al
  41c10e:	ja     0x41c0cf
  41c110:	les    esp,FWORD PTR [ebx-0x120bd735]
  41c116:	pop    ebx
  41c117:	push   ecx
  41c118:	xchg   ecx,eax
  41c119:	into   
  41c11a:	popa   
  41c11b:	xlat   BYTE PTR ds:[ebx]
  41c11c:	push   edx
  41c11d:	jbe    0x41c170
  41c11f:	sbb    BYTE PTR [esi+0x392adf2c],cl
  41c125:	es je  0x41c119
  41c128:	jo     0x41c0f2
  41c12a:	sbb    ecx,DWORD PTR [ebx-0x6b]
  41c12d:	pusha  
  41c12e:	lods   eax,DWORD PTR ds:[esi]
  41c12f:	lahf   
  41c130:	adc    BYTE PTR [esp+eax*2+0x19421d28],bl
  41c137:	jae    0x41c119
  41c139:	lods   al,BYTE PTR ds:[esi]
  41c13a:	mov    ebx,0x2bb9248
  41c13f:	or     eax,DWORD PTR [ecx+0x26]
  41c142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c143:	arpl   WORD PTR [ebx+0x1e080fb8],di
  41c149:	stos   BYTE PTR es:[edi],al
  41c14a:	cs lock jne 0x41c0d2
  41c14e:	mov    ch,0xe8
  41c150:	fnsave [ecx-0x54b0bb6f]
  41c156:	jae    0x41c14a
  41c158:	jecxz  0x41c16f
  41c15a:	repz icebp 
  41c15c:	dec    ecx
  41c15d:	push   ecx
  41c15e:	mov    eax,0x680bba4e
  41c163:	add    cl,bl
  41c165:	call   0x7a59:0x36b22625
  41c16c:	add    ecx,0x6b41a24c
  41c172:	stos   DWORD PTR es:[edi],eax
  41c173:	or     al,0xf5
  41c175:	fs (bad) 
  41c177:	mov    ecx,0x7000471c
  41c17c:	pop    esi
  41c17d:	mov    dh,0x80
  41c17f:	cs jno 0x41c1a8
  41c182:	inc    ebx
  41c183:	or     BYTE PTR [eax-0x22f79fa0],dl
  41c189:	add    edx,ecx
  41c18b:	sbb    bl,BYTE PTR [eax+0x7f]
  41c18e:	mov    eax,ds:0x91852462
  41c193:	push   ecx
  41c194:	ins    BYTE PTR es:[edi],dx
  41c195:	int    0xb6
  41c197:	cli    
  41c198:	int3   
  41c199:	in     eax,0x3d
  41c19b:	xor    ah,BYTE PTR [ebx+0x526bf5d9]
  41c1a1:	and    edi,DWORD PTR [eax]
  41c1a3:	loope  0x41c20a
  41c1a5:	or     ebp,esi
  41c1a7:	dec    esi
  41c1a8:	outs   dx,DWORD PTR ds:[esi]
  41c1a9:	mov    ch,0xc
  41c1ab:	or     esi,DWORD PTR [ecx]
  41c1ad:	(bad)  
  41c1ae:	fimul  WORD PTR [esi-0x912917]
  41c1b4:	loope  0x41c166
  41c1b6:	jle    0x41c200
  41c1b8:	int3   
  41c1b9:	fild   WORD PTR [edx+0x38f0f53]
  41c1bf:	mov    esp,0x316c713e
  41c1c4:	xchg   ebp,eax
  41c1c5:	(bad)  
  41c1c6:	ss std 
  41c1c8:	ds jl  0x41c168
  41c1cb:	lods   eax,DWORD PTR ds:[esi]
  41c1cc:	mov    WORD PTR [ebp+0x2159ac49],ds
  41c1d2:	stos   BYTE PTR es:[edi],al
  41c1d3:	push   0xffffffb9
  41c1d5:	(bad)  
  41c1d6:	pop    ss
  41c1d7:	pop    es
  41c1d8:	neg    dl
  41c1da:	mov    ecx,0x2124de79
  41c1df:	adc    eax,0xfa033f67
  41c1e4:	sub    esp,DWORD PTR [ecx]
  41c1e6:	pop    eax
  41c1e8:	shl    BYTE PTR [eax+eiz*4],0x54
  41c1ec:	pusha  
  41c1ed:	cwde   
  41c1ee:	fild   QWORD PTR [ecx+eiz*8-0x6b]
  41c1f2:	jno    0x41c1dc
  41c1f4:	stos   DWORD PTR es:[edi],eax
  41c1f5:	es inc ecx
  41c1f7:	dec    esp
  41c1f8:	dec    ecx
  41c1f9:	mov    cs,WORD PTR [eax+0x63]
  41c1fc:	inc    edx
  41c1fd:	mov    es:0x1e87e085,al
  41c203:	or     dh,ch
  41c205:	fistp  WORD PTR [ebx]
  41c207:	cs cli 
  41c209:	test   al,0xa7
  41c20b:	xor    DWORD PTR [edi+ebp*1],esi
  41c20e:	iret   
  41c20f:	and    BYTE PTR ss:0x14ac6aef,al
  41c216:	sbb    BYTE PTR [ebp-0x1c],al
  41c219:	test   eax,0xf07dc9d4
  41c21e:	xor    eax,0x546dc3b9
  41c223:	out    0xc5,eax
  41c225:	xchg   BYTE PTR [edx+0x69304bd5],ah
  41c22b:	ins    BYTE PTR es:[edi],dx
  41c22c:	mov    al,0x51
  41c22e:	sub    bl,dl
  41c230:	pop    esi
  41c231:	push   edx
  41c232:	xor    DWORD PTR [edi+0x6f],0xee9e42c0
  41c239:	cmp    al,0x9d
  41c23b:	repnz arpl WORD PTR [edi],sp
  41c23e:	sbb    al,0x72
  41c240:	leave  
  41c241:	ja     0x41c208
  41c243:	sub    al,0xc2
  41c245:	into   
  41c246:	popa   
  41c247:	jp     0x41c207
  41c249:	push   ebx
  41c24a:	dec    ecx
  41c24b:	mov    eax,0xf9dc5e39
  41c250:	pusha  
  41c251:	and    ebx,esp
  41c253:	xor    al,0x70
  41c255:	push   0xffffffce
  41c257:	aaa    
  41c258:	adc    ecx,DWORD PTR [ecx-0x26]
  41c25b:	lods   eax,DWORD PTR ds:[esi]
  41c25c:	push   es
  41c25d:	push   eax
  41c25e:	fadd   st,st(6)
  41c260:	sub    eax,0xa46cf84d
  41c265:	dec    edx
  41c266:	out    dx,al
  41c267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c268:	hlt    
  41c269:	mov    ds:0xe112a011,al
  41c26e:	in     eax,0x5d
  41c270:	sbb    eax,0x75f4d8b3
  41c275:	lahf   
  41c276:	jne    0x41c27f
  41c278:	pop    esp
  41c279:	rcr    DWORD PTR [esi+0x778e2bba],1
  41c27f:	jno    0x41c2cc
  41c281:	push   ds
  41c282:	jbe    0x41c233
  41c284:	xchg   bl,ah
  41c286:	ins    BYTE PTR es:[edi],dx
  41c287:	mov    edx,DWORD PTR [esi]
  41c289:	jmp    0xf15af065
  41c28e:	pop    es
  41c28f:	xor    eax,0x4c39a794
  41c294:	mov    al,ds:0xd406be50
  41c299:	mov    ebp,edx
  41c29b:	and    eax,DWORD PTR [edx+0x1b]
  41c29e:	mov    ebx,0x7a7f33e7
  41c2a3:	pop    ss
  41c2a4:	adc    edx,ebp
  41c2a6:	cmp    eax,0x5f84e752
  41c2ab:	in     al,0xdc
  41c2ad:	out    0x89,eax
  41c2af:	adc    BYTE PTR [eax+ecx*4-0x58],0xc4
  41c2b4:	sbb    DWORD PTR [ecx],edi
  41c2b6:	dec    ebx
  41c2b7:	cs or  edx,edx
  41c2ba:	xchg   eax,esi
  41c2bc:	dec    edx
  41c2bd:	fdivr  DWORD PTR [edx+ebp*1]
  41c2c0:	cmp    ecx,ecx
  41c2c2:	out    0xef,al
  41c2c4:	inc    esi
  41c2c5:	addr16 fadd st,st(3)
  41c2c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2c9:	lahf   
  41c2ca:	jnp    0x41c31a
  41c2cc:	sbb    eax,0x3534715c
  41c2d1:	arpl   si,si
  41c2d3:	mov    edi,0x4d5dcb1
  41c2d8:	js     0x41c31c
  41c2da:	retf   0x3d4
  41c2dd:	retf   
  41c2de:	cwde   
  41c2df:	ds pop ss
  41c2e1:	fist   DWORD PTR [edi+ecx*1]
  41c2e4:	es push 0x28
  41c2e7:	and    ecx,DWORD PTR [edi]
  41c2e9:	cs mov bh,0xef
  41c2ec:	or     al,0x9f
  41c2ee:	cmp    DWORD PTR [bx+si+0x35],esp
  41c2f2:	loop   0x41c2c5
  41c2f4:	xor    al,0x81
  41c2f6:	(bad)  
  41c2f7:	clc    
  41c2f8:	pop    ebp
  41c2f9:	inc    esp
  41c2fa:	into   
  41c2fb:	test   DWORD PTR [ebx+0x5c1d49b4],0xeb27ee23
  41c305:	add    al,0xf
  41c307:	call   0xffa1:0x6b7c0e5e
  41c30e:	mov    WORD PTR [ecx],ds
  41c310:	xchg   ebp,eax
  41c311:	out    dx,eax
  41c312:	shr    ebx,cl
  41c314:	stos   DWORD PTR es:[edi],eax
  41c315:	adc    al,0xbc
  41c317:	ds retf 
  41c319:	call   FWORD PTR [ecx+0x27979228]
  41c31f:	and    eax,DWORD PTR [edi-0x4e]
  41c322:	aad    0x46
  41c324:	cmp    BYTE PTR [edi+0x6085fed5],0xd8
  41c32b:	ss gs mov ebx,0x63317fcc
  41c332:	mov    edx,0x60983a1e
  41c337:	jae    0x41c2d1
  41c339:	cvtdq2ps xmm0,XMMWORD PTR [edx+0x364c0cd2]
  41c340:	ins    BYTE PTR es:[edi],dx
  41c341:	ins    BYTE PTR es:[edi],dx
  41c342:	shl    BYTE PTR [esp],cl
  41c345:	xchg   ebp,eax
  41c346:	shr    DWORD PTR [edx-0x75],0x5e
  41c34a:	xor    esi,DWORD PTR [edi-0x22ee52a9]
  41c350:	in     al,0xc6
  41c352:	enter  0x352d,0x5
  41c356:	rcr    ah,1
  41c358:	rcl    BYTE PTR [esi],0xff
  41c35b:	jno    0x41c2f6
  41c35d:	cli    
  41c35e:	jp     0x41c3d5
  41c360:	nop
  41c361:	mov    ds:0xa3d5fd16,al
  41c366:	push   ebp
  41c367:	sbb    DWORD PTR [edi+eiz*2],eax
  41c36a:	jns    0x41c31d
  41c36c:	push   esp
  41c36d:	jl     0x41c2f3
  41c36f:	mov    ah,0x98
  41c371:	inc    esp
  41c372:	adc    eax,DWORD PTR [esi-0x722c6418]
  41c378:	cmp    BYTE PTR [edx-0x50],dl
  41c37b:	cmp    BYTE PTR [edi+0x25df40ad],cl
  41c381:	ret    
  41c382:	fmul   st(5),st
  41c384:	repnz lock rcr BYTE PTR [esi-0x1aa28240],0x3e
  41c38d:	femms  
  41c38f:	jno    0x41c394
  41c391:	jmp    0x2dda1d10
  41c396:	fmul   st,st(5)
  41c398:	sbb    esp,DWORD PTR [edx-0x3cd364b3]
  41c39e:	(bad)  
  41c39f:	pop    edi
  41c3a0:	mov    ds,WORD PTR [edx+0x5f4e6c6b]
  41c3a6:	aas    
  41c3a7:	hlt    
  41c3a8:	gs fwait
  41c3aa:	repz push edx
  41c3ac:	xchg   ebx,eax
  41c3ad:	xchg   esi,eax
  41c3ae:	xchg   esp,eax
  41c3af:	push   ebx
  41c3b0:	sbb    al,0xb8
  41c3b2:	pop    esi
  41c3b3:	test   DWORD PTR [ebx+0x4d0aed8c],edi
  41c3b9:	push   ss
  41c3ba:	aad    0xbe
  41c3bc:	sbb    eax,0xfec2df17
  41c3c1:	jle    0x41c401
  41c3c3:	xor    al,0x47
  41c3c5:	xchg   edi,eax
  41c3c6:	jl     0x41c350
  41c3c8:	add    al,0xb6
  41c3ca:	jg     0x41c3aa
  41c3cc:	xor    BYTE PTR [eax+ecx*2-0x1e246e96],0x51
  41c3d4:	int3   
  41c3d5:	outs   dx,BYTE PTR ds:[esi]
  41c3d6:	or     DWORD PTR [edi+ecx*8-0x743fed80],ebx
  41c3dd:	xor    edi,DWORD PTR [ebx+0x50fb1e47]
  41c3e3:	aas    
  41c3e4:	stc    
  41c3e5:	stc    
  41c3e6:	cmp    BYTE PTR [ebx-0x16],0x12
  41c3ea:	retf   
  41c3eb:	cmp    al,0xb2
  41c3ed:	sti    
  41c3ee:	(bad)  
  41c3ef:	cwde   
  41c3f0:	les    edi,FWORD PTR [ebx+ebp*4-0x4b]
  41c3f4:	in     al,dx
  41c3f5:	rcr    DWORD PTR [ebx+0x7c926a08],0x52
  41c3fc:	and    al,0x83
  41c3fe:	mov    ch,0xcc
  41c400:	push   eax
  41c401:	out    dx,eax
  41c402:	fld    st(6)
  41c404:	mov    dl,0xd1
  41c406:	ds data16 fwait
  41c409:	popa   
  41c40a:	lds    edx,FWORD PTR [ebx+0x11a11e39]
  41c410:	dec    esp
  41c411:	bound  esp,QWORD PTR [ecx]
  41c413:	in     eax,0xfb
  41c415:	mov    BYTE PTR [ecx+0x73],dl
  41c418:	xlat   BYTE PTR ds:[ebx]
  41c419:	ins    BYTE PTR es:[edi],dx
  41c41a:	jbe    0x41c414
  41c41c:	fldcw  WORD PTR [esi-0x68]
  41c41f:	push   ebx
  41c420:	xchg   esi,eax
  41c421:	dec    ebx
  41c422:	out    dx,al
  41c423:	clc    
  41c424:	lahf   
  41c425:	pop    ds
  41c426:	sti    
  41c427:	mov    al,0xfe
  41c429:	push   DWORD PTR [edi+0x6bc4b8e8]
  41c42f:	add    al,0x9a
  41c431:	mov    eax,ds:0x66dd3c70
  41c436:	mov    ch,0xb1
  41c438:	adc    DWORD PTR [edx-0x4f],esi
  41c43b:	mov    ebp,0xd68ca7d7
  41c440:	and    DWORD PTR [esi+0x3f],edi
  41c443:	and    cl,BYTE PTR [edx-0x7b1bba57]
  41c449:	into   
  41c44a:	xchg   edx,eax
  41c44b:	xchg   BYTE PTR [esi],bl
  41c44d:	bound  ebp,QWORD PTR [edi+0x9]
  41c450:	push   0x3a
  41c452:	fisubr WORD PTR [ecx]
  41c454:	out    dx,al
  41c455:	xchg   edi,eax
  41c456:	inc    edi
  41c457:	adc    eax,0x443ae0f8
  41c45c:	inc    edx
  41c45d:	mov    edx,0x3499b353
  41c462:	xor    al,0x77
  41c464:	or     ch,BYTE PTR fs:[ecx+0x2278a6e4]
  41c46b:	dec    ebx
  41c46c:	mov    dh,0x42
  41c46e:	jbe    0x41c435
  41c470:	mov    ds:0xe00bc3ab,al
  41c475:	jb     0x41c4d8
  41c477:	test   al,0x33
  41c479:	sar    DWORD PTR [edx+ecx*2-0x41746eb1],1
  41c480:	stos   DWORD PTR es:[edi],eax
  41c481:	cld    
  41c482:	sbb    edx,ebp
  41c484:	dec    esi
  41c485:	or     edx,DWORD PTR [ebp+0x10]
  41c488:	pop    ebx
  41c489:	mov    BYTE PTR [ecx],bl
  41c48b:	into   
  41c48c:	out    0x22,eax
  41c48e:	dec    esi
  41c48f:	jecxz  0x41c50e
  41c491:	and    eax,0xea6dfc99
  41c496:	call   0x4d6c:0x497e10e6
  41c49d:	dec    ecx
  41c49e:	cli    
  41c49f:	in     al,0x9d
  41c4a1:	(bad)  
  41c4a2:	push   edi
  41c4a3:	cmp    al,0xdd
  41c4a5:	xor    DWORD PTR [esi],edi
  41c4a7:	cmp    ebp,DWORD PTR [ecx]
  41c4a9:	jmp    0x41c46d
  41c4ab:	dec    edi
  41c4ac:	lods   eax,DWORD PTR ds:[esi]
  41c4ad:	xor    DWORD PTR [esi],0xeab264ce
  41c4b3:	fdivr  st,st(1)
  41c4b5:	and    bl,bh
  41c4b7:	ins    DWORD PTR es:[edi],dx
  41c4b8:	jle    0x41c47e
  41c4ba:	std    
  41c4bb:	stc    
  41c4bc:	and    eax,0xacd57933
  41c4c1:	mov    ebp,0x7f0762bd
  41c4c6:	test   eax,0x67567c0e
  41c4cb:	cmp    eax,0xca490969
  41c4d0:	inc    eax
  41c4d1:	clc    
  41c4d2:	fstp   TBYTE PTR ds:0xb5613d14
  41c4d8:	sub    BYTE PTR [edi+eiz*4-0x5b],dl
  41c4dc:	aaa    
  41c4dd:	repz mov esi,0x135fa3a6
  41c4e3:	mov    bl,BYTE PTR [edx-0x4c]
  41c4e6:	outs   dx,DWORD PTR ds:[esi]
  41c4e7:	aam    0x42
  41c4e9:	scas   al,BYTE PTR es:[edi]
  41c4ea:	lea    edi,ds:0xbec5e18
  41c4f0:	pusha  
  41c4f1:	(bad)  
  41c4f2:	in     al,dx
  41c4f3:	mov    DWORD PTR [ebx+0x29],edx
  41c4f6:	and    bl,bl
  41c4f8:	xchg   edi,eax
  41c4f9:	rcr    BYTE PTR [edi+0xd],1
  41c4fc:	sbb    eax,0xf4e4063
  41c501:	fscale 
  41c503:	sar    BYTE PTR [esi+eiz*1],cl
  41c506:	cmp    al,0xac
  41c508:	inc    eax
  41c509:	mov    eax,ds:0xce1d837e
  41c50e:	or     ebp,edi
  41c510:	push   ebx
  41c511:	repnz shl ebp,cl
  41c514:	aam    0xf4
  41c516:	inc    edx
  41c517:	add    ebx,DWORD PTR [edi]
  41c519:	xchg   ebx,eax
  41c51a:	adc    eax,0xa7e428ff
  41c51f:	int3   
  41c520:	gs ins BYTE PTR es:[edi],dx
  41c522:	test   cl,bl
  41c524:	sbb    al,0xb6
  41c526:	push   ecx
  41c527:	mov    eax,0x66a81f70
  41c52c:	jbe    0x41c5a5
  41c52e:	ror    ah,cl
  41c530:	retf   0xc8c9
  41c533:	cmp    al,0x57
  41c535:	mov    edx,0x906804df
  41c53a:	ins    DWORD PTR es:[edi],dx
  41c53b:	repnz dec ebp
  41c53d:	clc    
  41c53e:	push   0x6f32a89b
  41c543:	mov    ds:0x93deea4,al
  41c548:	pushf  
  41c549:	mov    ebx,0xb658bae0
  41c54e:	neg    esi
  41c550:	ret    0xbc94
  41c553:	add    BYTE PTR [edi],dh
  41c555:	dec    BYTE PTR [ecx-0x72f0729e]
  41c55b:	stos   BYTE PTR es:[edi],al
  41c55c:	stos   DWORD PTR es:[edi],eax
  41c55d:	int    0x2c
  41c55f:	jne    0x41c5d7
  41c561:	pop    ss
  41c562:	imul   esi,DWORD PTR [eax],0xffffffbb
  41c565:	push   ebx
  41c566:	sub    DWORD PTR ds:0xc5a08bd9,esp
  41c56c:	mov    WORD PTR [edx-0x49],ss
  41c56f:	retf   0x1fc8
  41c572:	cld    
  41c573:	dec    ebx
  41c574:	loope  0x41c515
  41c576:	or     esp,ecx
  41c578:	xchg   DWORD PTR gs:[ebx],eax
  41c57b:	test   al,0x95
  41c57d:	xor    al,0x23
  41c57f:	int3   
  41c580:	add    al,BYTE PTR [esi+0x14]
  41c583:	jae    0x41c592
  41c585:	cmp    dl,BYTE PTR [ecx+0x16ea0dc5]
  41c58b:	or     ch,BYTE PTR [eax]
  41c58d:	std    
  41c58e:	dec    edx
  41c58f:	out    0xfd,al
  41c591:	mov    eax,ds:0xe61aca07
  41c596:	cmp    eax,0x9fb3f1e3
  41c59b:	mov    esi,esi
  41c59d:	sbb    DWORD PTR ds:0x7bb6b4b0,esp
  41c5a3:	fdivr  QWORD PTR [ebx-0x5]
  41c5a6:	sbb    ecx,edx
  41c5a8:	sub    BYTE PTR [eax-0x36d033f1],al
  41c5ae:	popf   
  41c5af:	sti    
  41c5b0:	mov    ah,0xeb
  41c5b2:	xor    dh,BYTE PTR [edx+0x68]
  41c5b5:	cmp    DWORD PTR [ebp+0x4b],0xffffff89
  41c5b9:	mov    ah,0xce
  41c5bb:	loopne 0x41c5d8
  41c5bd:	mov    edi,esi
  41c5bf:	xor    BYTE PTR [ebp-0x6eb62795],ch
  41c5c5:	or     BYTE PTR [ecx],bl
  41c5c7:	push   edx
  41c5c8:	out    dx,al
  41c5c9:	sbb    eax,0x85f2c1d2
  41c5ce:	adc    dh,ah
  41c5d0:	cmc    
  41c5d1:	sub    eax,DWORD PTR ds:0xb781507c
  41c5d7:	iret   
  41c5d8:	repnz xor esp,DWORD PTR [edx-0x42c3c25]
  41c5df:	repnz and eax,0x2d246cea
  41c5e5:	and    ch,BYTE PTR [edi+0x55]
  41c5e8:	shl    ecx,1
  41c5ea:	sbb    edi,DWORD PTR [eax+ebp*4]
  41c5ed:	nop
  41c5ee:	mov    bh,0x36
  41c5f0:	inc    eax
  41c5f1:	mov    cs,WORD PTR ss:[edx+0x58]
  41c5f5:	sub    DWORD PTR [ebx],esp
  41c5f7:	and    esp,ecx
  41c5f9:	imul   eax,DWORD PTR [ebp-0x5d],0x38
  41c5fd:	sbb    BYTE PTR [ecx+0x63a213a8],al
  41c603:	mov    ch,0xfd
  41c605:	loop   0x41c64e
  41c607:	cs push ds
  41c609:	push   cs
  41c60a:	or     WORD PTR [edi],bp
  41c60d:	push   ebx
  41c60e:	out    0x42,al
  41c610:	jmp    0x7c215ef8
  41c615:	pushf  
  41c616:	xor    BYTE PTR [esi+0x72],ch
  41c619:	mov    cl,0x7a
  41c61b:	(bad)  
  41c61c:	es xchg esi,eax
  41c61e:	fnstsw WORD PTR [esi]
  41c620:	js     0x41c67f
  41c622:	fiadd  WORD PTR [esi+0x0]
  41c625:	in     eax,dx
  41c626:	dec    esi
  41c627:	jle    0x41c5e3
  41c629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c62a:	out    dx,eax
  41c62b:	pop    esp
  41c62c:	lods   eax,DWORD PTR ds:[esi]
  41c62d:	and    edx,DWORD PTR [ecx]
  41c62f:	xchg   esp,eax
  41c630:	shl    edi,1
  41c632:	adc    DWORD PTR [edi],ebx
  41c634:	out    dx,al
  41c635:	mov    dl,ch
  41c637:	das    
  41c638:	pmaxub mm5,QWORD PTR [edi-0x19963270]
  41c63f:	outs   dx,DWORD PTR ds:[esi]
  41c640:	pop    esi
  41c641:	inc    edx
  41c642:	cmp    al,0x3f
  41c645:	jle    0x41c64f
  41c647:	stc    
  41c648:	pop    esi
  41c649:	(bad)  
  41c64a:	mov    esp,0x2f172824
  41c64f:	repnz cmp al,0xb3
  41c652:	ja     0x41c5f4
  41c654:	xchg   edx,ebx
  41c656:	mov    esp,0x1f85654a
  41c65b:	mov    ah,BYTE PTR [ebx-0x13]
  41c65e:	and    ch,dh
  41c660:	push   es
  41c661:	mov    esi,0xfa086e57
  41c666:	lahf   
  41c667:	jge    0x41c696
  41c669:	dec    esi
  41c66a:	shl    DWORD PTR [edx],cl
  41c66c:	add    eax,edx
  41c66e:	jb     0x41c607
  41c670:	sbb    al,0x66
  41c672:	ret    
  41c673:	popa   
  41c674:	sbb    al,0xbd
  41c676:	hlt    
  41c677:	cwde   
  41c678:	imul   ebx,DWORD PTR [ebp+0x75],0x59
  41c67c:	test   al,0xdb
  41c67e:	mov    al,0xe7
  41c680:	ret    0x422c
  41c683:	jno    0x41c605
  41c685:	sub    eax,0x6915bc0e
  41c68a:	push   edi
  41c68b:	and    al,0x71
  41c68d:	sbb    DWORD PTR [esi-0x69e36bec],esi
  41c693:	out    dx,eax
  41c694:	icebp  
  41c695:	add    al,0x50
  41c697:	loop   0x41c631
  41c699:	xchg   ecx,eax
  41c69a:	xor    cl,bh
  41c69c:	loope  0x41c650
  41c69e:	dec    esi
  41c69f:	jbe    0x41c6f6
  41c6a1:	add    cl,BYTE PTR [edi*2-0x6a77183b]
  41c6a8:	stos   DWORD PTR es:[edi],eax
  41c6a9:	pop    ecx
  41c6aa:	jecxz  0x41c65c
  41c6ac:	hlt    
  41c6ad:	cmc    
  41c6ae:	out    dx,al
  41c6af:	loope  0x41c641
  41c6b1:	dec    ebx
  41c6b2:	inc    esp
  41c6b3:	cld    
  41c6b4:	enter  0x3833,0x40
  41c6b8:	inc    eax
  41c6b9:	cmp    DWORD PTR [edx],esi
  41c6bb:	(bad)
  41c6bf:	xchg   esi,eax
  41c6c0:	add    eax,0x843bf178
  41c6c5:	xchg   edx,eax
  41c6c6:	inc    ebp
  41c6c7:	pushf  
  41c6c8:	or     ebp,DWORD PTR [ebx]
  41c6ca:	fisttp DWORD PTR [eax-0x80]
  41c6cd:	jae    0x41c706
  41c6cf:	push   ebp
  41c6d0:	mov    cl,0xf0
  41c6d2:	fadd   DWORD PTR [eax]
  41c6d4:	pop    ebp
  41c6d5:	clc    
  41c6d6:	test   BYTE PTR [edx],ch
  41c6d8:	inc    ecx
  41c6d9:	sti    
  41c6da:	jnp    0x41c740
  41c6dc:	adc    eax,0x3e4cdf80
  41c6e1:	jecxz  0x41c759
  41c6e3:	xchg   edx,eax
  41c6e4:	sbb    eax,0x7e3abde9
  41c6e9:	cmp    esp,DWORD PTR [edi-0x283d1952]
  41c6ef:	addr16 jmp 0x41c6aa
  41c6f2:	cmp    ah,0x42
  41c6f5:	pusha  
  41c6f6:	sbb    al,0x32
  41c6f8:	idiv   DWORD PTR es:[ebp-0x3f]
  41c6fc:	xchg   esp,eax
  41c6fd:	hlt    
  41c6fe:	jnp    0x41c71f
  41c700:	nop
  41c701:	push   0xfdc1627d
  41c706:	idiv   DWORD PTR [ecx+0x6ce73f9b]
  41c70c:	push   0xa21a195c
  41c711:	xor    ebp,DWORD PTR [esi-0x34]
  41c714:	add    DWORD PTR [esi-0x12],edi
  41c717:	or     al,cl
  41c719:	mov    ecx,0x7c7282d1
  41c71e:	fmul   QWORD PTR [edi]
  41c720:	and    DWORD PTR [edx],0xffffffd1
  41c723:	repnz mov ebx,0x99f2ae27
  41c729:	mov    esp,esp
  41c72b:	loopne 0x41c721
  41c72d:	push   0xe19328cb
  41c732:	mov    cl,0x75
  41c734:	sub    ebx,ebx
  41c736:	and    eax,ebx
  41c738:	adc    al,0x9c
  41c73a:	mov    esi,0xd1c25306
  41c73f:	pop    es
  41c740:	mov    ebp,DWORD PTR [esi+0x13]
  41c743:	lahf   
  41c744:	loop   0x41c789
  41c746:	pop    ss
  41c747:	mov    edx,0xd8970e12
  41c74c:	adc    bh,BYTE PTR [esp+ebp*1+0x7edeb15]
  41c753:	and    bh,BYTE PTR [esi-0x53]
  41c756:	jle    0x41c730
  41c758:	lods   al,BYTE PTR ss:[esi]
  41c75a:	mov    esi,0x5133baa
  41c75f:	std    
  41c760:	jl     0x41c6f5
  41c762:	dec    BYTE PTR [ebx]
  41c764:	sub    eax,0xf3d42914
  41c769:	rcr    DWORD PTR [edi+0x1201a92d],0x1b
  41c770:	(bad)
  41c773:	loop   0x41c74f
  41c775:	pop    ebx
  41c776:	sbb    al,0xae
  41c778:	rcl    bh,cl
  41c77a:	jle    0x41c729
  41c77c:	loop   0x41c746
  41c77e:	lods   eax,DWORD PTR ds:[esi]
  41c77f:	pop    edx
  41c780:	lods   eax,DWORD PTR ds:[esi]
  41c781:	dec    esi
  41c782:	xor    BYTE PTR [edx+ebx*2+0x558f37ec],bl
  41c789:	xchg   esi,eax
  41c78a:	jg     0x41c7a0
  41c78c:	outs   dx,BYTE PTR ds:[esi]
  41c78d:	test   eax,0x93962b85
  41c792:	jg     0x41c75c
  41c794:	push   ebx
  41c795:	das    
  41c796:	lahf   
  41c797:	mov    eax,0xa3d332ad
  41c79c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c79d:	test   eax,0x7980da98
  41c7a2:	mov    DWORD PTR [edx+eiz*2+0x47],esp
  41c7a6:	jo     0x41c76e
  41c7a8:	shl    BYTE PTR [esi-0x47],1
  41c7ab:	cs imul edx,esp,0x3b3bafb2
  41c7b2:	xor    BYTE PTR [ebx+ebp*8+0x6b0ada89],cl
  41c7b9:	je     0x41c7b8
  41c7bb:	stos   BYTE PTR es:[edi],al
  41c7bc:	mov    ss,edi
  41c7be:	dec    edx
  41c7bf:	adc    al,0xb5
  41c7c1:	mov    ecx,0x20d43826
  41c7c6:	mov    WORD PTR [eax],?
  41c7c8:	loope  0x41c807
  41c7ca:	adc    ch,BYTE PTR [eax-0x4e004fc1]
  41c7d0:	sbb    eax,0x3c5055e9
  41c7d5:	xchg   edi,eax
  41c7d6:	mov    edx,DWORD PTR [ebx+0x38461974]
  41c7dc:	cmp    al,0x3d
  41c7de:	mov    bl,0xbd
  41c7e0:	adc    al,0xf3
  41c7e2:	jmp    0x41c7f2
  41c7e4:	and    BYTE PTR [ebx-0x3c],0xa1
  41c7e8:	dec    eax
  41c7ea:	cmp    eax,0x313fcee
  41c7ef:	pop    ds
  41c7f0:	out    dx,al
  41c7f1:	pop    ds
  41c7f2:	mov    esi,0x8d6a5cc8
  41c7f7:	xlat   BYTE PTR ds:[ebx]
  41c7f8:	mov    ah,0x9f
  41c7fa:	xor    eax,0x7bb24f7
  41c7ff:	clc    
  41c800:	cmp    dh,BYTE PTR [ebp-0x16]
  41c803:	or     al,0x58
  41c805:	pushf  
  41c806:	jne    0x41c810
  41c808:	out    dx,al
  41c809:	popf   
  41c80a:	sbb    ch,al
  41c80c:	mov    ebx,0x830739fc
  41c811:	int3   
  41c812:	sbb    ebp,DWORD PTR [edx+0x3a]
  41c815:	dec    esp
  41c816:	mov    ebp,0x45d0af14
  41c81b:	jge    0x41c7e4
  41c81d:	stc    
  41c81e:	cwde   
  41c81f:	jbe    0x41c845
  41c821:	outs   dx,DWORD PTR ds:[esi]
  41c822:	out    0xf3,al
  41c824:	sar    ah,0x4c
  41c827:	sbb    al,0x8
  41c829:	mov    bh,BYTE PTR [edi-0x236f9adb]
  41c82f:	cwde   
  41c830:	loope  0x41c85f
  41c832:	les    ebx,FWORD PTR ds:0xd49986c5
  41c838:	(bad)  
  41c839:	repz or eax,0xf93982b5
  41c83f:	sub    esp,0xffffff91
  41c842:	pop    ss
  41c843:	shr    ebx,1
  41c845:	scas   eax,DWORD PTR es:[edi]
  41c846:	mov    eax,ds:0x93383e2b
  41c84b:	retf   
  41c84c:	push   0xa3858727
  41c851:	aam    0xe0
  41c853:	mov    esp,0x5bdca108
  41c858:	adc    ebx,ebp
  41c85a:	icebp  
  41c85b:	sub    bl,BYTE PTR [edi]
  41c85d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c85e:	dec    eax
  41c85f:	cmc    
  41c860:	mov    ah,0x15
  41c862:	test   DWORD PTR gs:[esi-0x72],esi
  41c866:	into   
  41c867:	out    0x7d,eax
  41c869:	imul   esp,esi,0x2b48d0fa
  41c86f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c870:	push   ebp
  41c871:	and    eax,0x927dd263
  41c876:	jo     0x41c84c
  41c878:	inc    ebp
  41c879:	stos   DWORD PTR es:[edi],eax
  41c87a:	sub    DWORD PTR [ecx-0x5f],ebp
  41c87d:	jno    0x41c894
  41c87f:	cli    
  41c880:	xchg   esp,eax
  41c881:	dec    BYTE PTR [ecx]
  41c883:	jae    0x41c852
  41c885:	iret   
  41c886:	fcom   QWORD PTR [eax+0x4b177547]
  41c88c:	call   0x16975a5a
  41c891:	mov    bl,0x1a
  41c893:	lods   al,BYTE PTR ds:[esi]
  41c894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c895:	adc    BYTE PTR [ebx-0x75],bh
  41c898:	stos   BYTE PTR es:[edi],al
  41c899:	adc    ah,BYTE PTR [ebx+0x5afa159b]
  41c89f:	xor    al,0x1e
  41c8a1:	inc    eax
  41c8a2:	mov    dl,0x55
  41c8a4:	popf   
  41c8a5:	popa   
  41c8a6:	scas   eax,DWORD PTR es:[edi]
  41c8a7:	push   esp
  41c8a8:	pop    ecx
  41c8a9:	aad    0xbf
  41c8ab:	xor    DWORD PTR [edi+0x5e],0xc897c501
  41c8b2:	into   
  41c8b3:	stos   BYTE PTR es:[edi],al
  41c8b4:	data16 mov bl,0x27
  41c8b7:	cli    
  41c8b8:	sbb    BYTE PTR [ebx+0x41],0xc8
  41c8bc:	dec    ecx
  41c8bd:	or     bh,BYTE PTR [ecx]
  41c8bf:	test   dh,ch
  41c8c1:	jg     0x41c8c8
  41c8c3:	add    edi,DWORD PTR [ecx-0x50]
  41c8c6:	cmp    eax,0xf0493ad9
  41c8cb:	pop    esp
  41c8cc:	fs (bad) 
  41c8cf:	or     BYTE PTR [edx+0x6a309fac],cl
  41c8d5:	cdq    
  41c8d6:	jmp    0x41c889
  41c8d8:	mov    fs,WORD PTR [ebx-0xe884c16]
  41c8de:	aaa    
  41c8df:	int    0xfe
  41c8e1:	dec    edi
  41c8e2:	jbe    0x41c92f
  41c8e4:	xor    cl,ch
  41c8e6:	out    0x1,eax
  41c8e8:	mov    eax,0x7130104b
  41c8ed:	mov    ebx,fs
  41c8ef:	sbb    DWORD PTR [edi-0x2473d18],esi
  41c8f5:	cmp    esp,ebx
  41c8f7:	push   ebp
  41c8f8:	test   dl,cl
  41c8fa:	jmp    0x5b9c77e3
  41c8ff:	loope  0x41c96d
  41c901:	cli    
  41c902:	mov    ds:0xe052400d,eax
  41c907:	shr    DWORD PTR [edi+0x204c18f4],cl
  41c90d:	std    
  41c90e:	in     al,0x1a
  41c910:	(bad)  
  41c911:	scas   eax,DWORD PTR es:[edi]
  41c912:	jmp    0x41c977
  41c914:	ret    0xba96
  41c917:	push   ebx
  41c918:	frstor [ebp-0x538d639]
  41c91e:	adc    cl,BYTE PTR ds:0x422bb42b
  41c924:	(bad)  
  41c925:	stc    
  41c926:	lods   al,BYTE PTR ds:[esi]
  41c927:	inc    eax
  41c928:	inc    ecx
  41c929:	inc    ebp
  41c92a:	jne    0x41c91e
  41c92c:	retf   
  41c92d:	jecxz  0x41c8d2
  41c92f:	add    edx,eax
  41c931:	mov    al,0x96
  41c933:	dec    ecx
  41c934:	iret   
  41c935:	or     edx,esi
  41c937:	pop    esp
  41c938:	mov    bl,0xdd
  41c93a:	pop    ebp
  41c93b:	push   ss
  41c93c:	pop    DWORD PTR [ecx+edi*8-0x1e]
  41c940:	and    dh,BYTE PTR [ecx]
  41c942:	mov    bh,BYTE PTR [esi]
  41c944:	jg     0x41c9ab
  41c946:	add    BYTE PTR [ebp-0x25ecfc66],0xfb
  41c94d:	fisub  DWORD PTR [ebp+0x3b308b61]
  41c953:	xchg   DWORD PTR ds:0xf95384b6,esi
  41c959:	xchg   esi,eax
  41c95a:	fsub   QWORD PTR [ebx+0x6356ce93]
  41c960:	or     DWORD PTR [edx+0x5d],0x9cef10
  41c967:	addr16 loope 0x41c943
  41c96a:	push   ebp
  41c96b:	lods   eax,DWORD PTR ds:[esi]
  41c96c:	jb     0x41c9a1
  41c96e:	test   DWORD PTR [edx-0x33d00f96],0x5e359c81
  41c978:	or     eax,0x5ea78a98
  41c97d:	rcr    BYTE PTR [edi-0x3bb90e90],0xab
  41c984:	jbe    0x41c992
  41c986:	dec    ecx
  41c987:	pop    edi
  41c988:	(bad)  
  41c989:	fisubr WORD PTR [ebp+0x65]
  41c98c:	(bad)  
  41c98d:	or     BYTE PTR [edx-0x27],dh
  41c990:	lods   al,BYTE PTR ds:[esi]
  41c991:	arpl   WORD PTR [ecx+0x69],bp
  41c994:	jne    0x41c97b
  41c996:	jnp    0x41c9bb
  41c998:	push   edi
  41c999:	mov    ch,0xc0
  41c99b:	cmp    al,0xb
  41c99d:	hlt    
  41c99e:	bnd jp 0x41c9e3
  41c9a1:	pop    es
  41c9a2:	fs mov ecx,0x97197271
  41c9a8:	(bad)  
  41c9a9:	pusha  
  41c9aa:	cdq    
  41c9ab:	push   ebx
  41c9ac:	or     al,0x85
  41c9ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9af:	sub    bl,dh
  41c9b1:	jae    0x41c93e
  41c9b3:	xchg   esp,eax
  41c9b4:	mov    ds:0x3fa0542,eax
  41c9ba:	mov    ch,0x42
  41c9bc:	pop    esp
  41c9bd:	or     ebx,0xafcd77b0
  41c9c3:	cmp    al,0x5b
  41c9c5:	or     eax,0x755a2379
  41c9ca:	ins    DWORD PTR es:[edi],dx
  41c9cb:	je     0x41c9e6
  41c9cd:	aad    0x8c
  41c9cf:	or     esp,DWORD PTR [edi-0x2941d2a5]
  41c9d5:	(bad)  
  41c9d6:	sub    DWORD PTR [esi+edx*8+0x7e48e9bb],edx
  41c9dd:	cmp    eax,0x1cc09444
  41c9e2:	call   0x58f5:0xea3c77f9
  41c9e9:	cmp    DWORD PTR [ecx],0x28879e06
  41c9ef:	pop    ds
  41c9f0:	das    
  41c9f1:	pop    ss
  41c9f2:	test   DWORD PTR [eax+0x5364bb46],ecx
  41c9f8:	sbb    edi,DWORD PTR [eax+eax*8+0x19]
  41c9fc:	push   0x23
  41c9fe:	mov    ebx,ebp
  41ca00:	(bad)  
  41ca01:	pop    edi
  41ca02:	dec    BYTE PTR [ebp+0x72f27789]
  41ca08:	les    edi,FWORD PTR [esi+edi*2]
  41ca0b:	or     ch,BYTE PTR [esi+0x8]
  41ca0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca0f:	es and ebx,edx
  41ca12:	and    BYTE PTR [edi-0x67],ch
  41ca15:	mov    ds:0x65620a2c,eax
  41ca1a:	aas    
  41ca1b:	mov    BYTE PTR [ebp+0x17d18354],bl
  41ca21:	imul   edi,DWORD PTR [ebp+0x1f],0x1d
  41ca25:	add    bl,BYTE PTR [ebx]
  41ca27:	cmp    DWORD PTR [ecx],esp
  41ca29:	cmp    dl,BYTE PTR [ecx+ecx*2+0x56]
  41ca2d:	mov    eax,0x7c9d9a5d
  41ca32:	xchg   ebx,eax
  41ca33:	xchg   edx,eax
  41ca34:	(bad)  
  41ca35:	test   BYTE PTR [edx],0x7a
  41ca38:	mov    eax,ss
  41ca3a:	cmp    dh,dl
  41ca3c:	sbb    eax,0xfb872184
  41ca41:	xchg   esi,eax
  41ca42:	jne    0x41ca8a
  41ca44:	adc    ecx,DWORD PTR [ebp-0xdb8b709]
  41ca4a:	imul   edi,DWORD PTR [edx+0x2305123d],0xffffffd2
  41ca51:	cmp    eax,0x1944f4b0
  41ca56:	jge    0x41c9f8
  41ca58:	sub    eax,0xce8ecc60
  41ca5d:	push   ecx
  41ca5e:	add    al,BYTE PTR [ecx+0x62a8c72d]
  41ca64:	sbb    eax,0x851284c4
  41ca69:	loop   0x41ca4d
  41ca6b:	retf   0xbaed
  41ca6e:	add    eax,0xe107179a
  41ca73:	outs   dx,BYTE PTR ds:[esi]
  41ca74:	cdq    
  41ca75:	jb     0x41ca95
  41ca77:	fcomp  QWORD PTR [ebx+eax*1-0x48]
  41ca7b:	stc    
  41ca7c:	ror    DWORD PTR [ebx-0x1b],cl
  41ca7f:	mov    esi,0xaea5c230
  41ca84:	sub    ebx,esi
  41ca86:	jnp    0x41ca73
  41ca88:	pop    ecx
  41ca89:	mov    eax,0xe66d4fe4
  41ca8e:	pop    esi
  41ca8f:	and    BYTE PTR [edi+0x76899388],bh
  41ca95:	xor    eax,0x16078ae0
  41ca9a:	aas    
  41ca9b:	push   eax
  41ca9c:	es sbb cl,ah
  41ca9f:	inc    edx
  41caa0:	test   al,0xad
  41caa2:	push   ebp
  41caa3:	inc    edx
  41caa4:	add    eax,0x86c464a2
  41caa9:	pop    es
  41caaa:	jo     0x41ca7e
  41caac:	test   DWORD PTR [esp+ecx*8+0x51],0x77bf8c70
  41cab4:	mov    edi,0x91593e5e
  41cab9:	mov    esi,0x2bbe266
  41cabe:	stc    
  41cabf:	test   al,0xad
  41cac1:	push   esi
  41cac2:	add    al,0x1f
  41cac4:	test   al,0xeb
  41cac6:	push   cs
  41cac7:	fstp   TBYTE PTR [edx]
  41cac9:	mov    esp,0xa725404b
  41cace:	retf   0x5a2b
  41cad1:	jb     0x41cb2f
  41cad3:	clc    
  41cad4:	or     bl,BYTE PTR [eax+0x3668f424]
  41cada:	or     cl,BYTE PTR ds:0x26368871
  41cae0:	lea    edx,[eax]
  41cae2:	mov    esp,0x9195deb6
  41cae7:	adc    eax,0xa9faad70
  41caec:	data16 es jecxz 0x41cb29
  41caf0:	aam    0x4c
  41caf2:	cld    
  41caf3:	pop    edi
  41caf4:	mov    edx,0x23c13597
  41caf9:	loope  0x41cad2
  41cafb:	dec    edi
  41cafc:	dec    edi
  41cafd:	mov    cl,0x91
  41caff:	dec    ecx
  41cb00:	call   0xc0ce6d67
  41cb05:	jle    0x41cab6
  41cb07:	test   eax,0x6b86488a
  41cb0c:	dec    eax
  41cb0d:	push   ss
  41cb0e:	test   edx,esp
  41cb10:	fimul  WORD PTR ds:0x7bdd54e
  41cb16:	inc    ebx
  41cb17:	ins    BYTE PTR es:[edi],dx
  41cb18:	and    BYTE PTR [ebx],bh
  41cb1a:	xchg   esp,eax
  41cb1b:	mov    ebx,DWORD PTR [edx]
  41cb1d:	dec    esp
  41cb1e:	adc    al,0x32
  41cb20:	lock mov al,0x42
  41cb23:	add    cl,BYTE PTR ds:0xc5727236
  41cb29:	adc    eax,0xe5cdf33b
  41cb2e:	jge    0x41cb34
  41cb30:	nop
  41cb31:	jmp    0x8ec66fa
  41cb36:	jmp    0x41cb9d
  41cb38:	adc    eax,0x63c95c57
  41cb3d:	mov    ds:0xeea8b48f,eax
  41cb42:	jbe    0x41cb61
  41cb44:	mov    eax,ds:0xc2d22835
  41cb49:	jmp    0x41cb80
  41cb4b:	mov    dl,0x26
  41cb4d:	daa    
  41cb4e:	inc    ebp
  41cb4f:	or     BYTE PTR [edx-0x13aa4f0f],bl
  41cb55:	lods   al,BYTE PTR ds:[esi]
  41cb56:	push   ebp
  41cb57:	call   0x17ce8f7e
  41cb5c:	in     al,0xb0
  41cb5e:	pop    ds
  41cb5f:	call   0x80d2ffef
  41cb64:	fwait
  41cb65:	add    DWORD PTR [ebp-0x4a],ebp
  41cb68:	test   al,0x1b
  41cb6a:	enter  0xa892,0xba
  41cb6e:	ret    
  41cb6f:	mov    ah,0xba
  41cb71:	mov    dh,0x9f
  41cb73:	retf   
  41cb74:	pop    ebp
  41cb75:	push   esp
  41cb76:	rol    BYTE PTR [edx-0x35f7c726],1
  41cb7c:	jge    0x41cb3b
  41cb7e:	push   cs
  41cb7f:	xchg   eax,edi
  41cb81:	les    ebx,FWORD PTR [eax-0x7583ef21]
  41cb87:	(bad)  
  41cb88:	int    0x9b
  41cb8a:	sub    DWORD PTR [eax-0x32],ecx
  41cb8d:	and    eax,0xfc146600
  41cb92:	call   0xaa4edb2f
  41cb97:	sub    edx,edi
  41cb99:	pop    ebx
  41cb9a:	mov    ds:0x98650a42,al
  41cb9f:	ins    BYTE PTR es:[edi],dx
  41cba0:	push   esi
  41cba1:	fs push es
  41cba3:	jecxz  0x41cb52
  41cba5:	adc    esp,ebx
  41cba7:	int3   
  41cba8:	or     eax,0x3f1c859e
  41cbad:	inc    edx
  41cbae:	shl    DWORD PTR [esi+ecx*2-0x4172ff15],cl
  41cbb5:	je     0x41cbdb
  41cbb7:	fwait
  41cbb8:	pop    ebp
  41cbb9:	sbb    DWORD PTR [ebp-0x1],esi
  41cbbc:	jmp    0x23be:0xd5f16048
  41cbc3:	retf   0x135a
  41cbc6:	in     al,dx
  41cbc7:	out    dx,al
  41cbc8:	xchg   edi,eax
  41cbc9:	les    ecx,FWORD PTR [edi+0x500cb301]
  41cbcf:	push   edx
  41cbd0:	ret    0xa056
  41cbd3:	clc    
  41cbd4:	xor    edi,DWORD PTR [ecx+0x43]
  41cbd7:	xor    DWORD PTR [edx-0x70],0x36
  41cbdb:	leave  
  41cbdc:	dec    ebp
  41cbdd:	call   0x1269:0x1757d56e
  41cbe4:	pop    ecx
  41cbe5:	call   0x60d0434e
  41cbea:	push   ecx
  41cbeb:	and    eax,0x67d393c1
  41cbf0:	test   eax,0x132fa492
  41cbf5:	ss cmp al,0x2
  41cbf8:	and    dh,cl
  41cbfa:	outs   dx,BYTE PTR ds:[esi]
  41cbfb:	aam    0xe1
  41cbfd:	add    eax,DWORD PTR [ebx-0x5c004279]
  41cc03:	or     al,0xb7
  41cc05:	nop
  41cc06:	ss ss pop edx
  41cc09:	cld    
  41cc0a:	out    dx,eax
  41cc0b:	jge    0x41cc26
  41cc0d:	pop    esp
  41cc0e:	dec    ebx
  41cc0f:	aas    
  41cc10:	adc    DWORD PTR [edx-0x2a],esi
  41cc13:	mov    ch,bh
  41cc15:	mov    eax,ds:0xe99c4277
  41cc1a:	ds push 0x0
  41cc1d:	push   es
  41cc1e:	arpl   cx,cx
  41cc20:	cdq    
  41cc21:	sbb    al,0x8c
  41cc23:	pop    ecx
  41cc24:	lahf   
  41cc25:	dec    edi
  41cc26:	and    al,0x21
  41cc28:	sub    bl,bh
  41cc2a:	mov    WORD PTR [esi+0x3a],fs
  41cc2d:	xor    dl,BYTE PTR [ebx]
  41cc2f:	pop    edi
  41cc30:	xor    BYTE PTR [eax],bl
  41cc32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc33:	dec    eax
  41cc34:	xlat   BYTE PTR ds:[ebx]
  41cc35:	xchg   esi,eax
  41cc36:	mov    edi,0x107bc573
  41cc3b:	pop    edx
  41cc3c:	jmp    0x41cc93
  41cc3e:	(bad)  
  41cc3f:	stos   DWORD PTR es:[edi],eax
  41cc40:	popf   
  41cc41:	xor    al,0xb
  41cc43:	mov    ds:0x6380963e,eax
  41cc48:	stos   DWORD PTR es:[edi],eax
  41cc49:	or     ebp,DWORD PTR [edx]
  41cc4b:	jge    0x41ccb5
  41cc4d:	out    0x6e,al
  41cc4f:	cmp    esi,DWORD PTR [eax+edx*8-0x3c]
  41cc53:	jmp    0xf554ccaa
  41cc58:	test   BYTE PTR [esi-0x2b],ch
  41cc5b:	repz or eax,0x28d23662
  41cc61:	sbb    al,0x2
  41cc63:	sub    dl,bl
  41cc65:	cmp    al,0x57
  41cc67:	ds mov edi,0xf4b539df
  41cc6d:	mov    al,0x89
  41cc6f:	loopne 0x41cccb
  41cc71:	or     dl,BYTE PTR [esi+0x740a9067]
  41cc77:	add    eax,0xefc20976
  41cc7c:	push   edi
  41cc7d:	mov    ds:0x9ecd21d0,eax
  41cc82:	data16 mov cl,0xe3
  41cc85:	aas    
  41cc86:	xchg   esp,eax
  41cc87:	cmc    
  41cc88:	call   0x2656:0x54f5c87b
  41cc8f:	xor    BYTE PTR [edi-0x4fc4e8d8],0xf6
  41cc96:	fnstenv [ebx*1-0x5918fc6a]
  41cc9d:	loope  0x41ccb4
  41cc9f:	fsubr  QWORD PTR [edi-0x21]
  41cca2:	dec    esp
  41cca3:	sub    DWORD PTR ds:0xe752da4a,edi
  41cca9:	or     BYTE PTR [edx],cl
  41ccab:	inc    ebp
  41ccac:	int3   
  41ccad:	jnp    0x41cc8e
  41ccaf:	scas   al,BYTE PTR es:[edi]
  41ccb0:	mov    al,0x7a
  41ccb2:	clc    
  41ccb3:	mov    bl,0x6d
  41ccb5:	jno    0x41cca4
  41ccb7:	adc    al,0xc4
  41ccb9:	add    al,0x7d
  41ccbb:	cmp    al,0x1d
  41ccbd:	pop    ds
  41ccbe:	call   0x3d67:0x30d0bf77
  41ccc5:	nop
  41ccc6:	xchg   ebx,eax
  41ccc7:	push   esp
  41ccc8:	jl     0x41cd2d
  41ccca:	push   edi
  41cccb:	dec    esi
  41cccc:	mov    eax,ds:0xffdd34e8
  41ccd1:	ja     0x41ccea
  41ccd3:	(bad)  
  41ccd4:	mov    edx,0x3fd7e191
  41ccd9:	push   edi
  41ccda:	out    dx,al
  41ccdb:	push   cs
  41ccdc:	rcl    DWORD PTR [eax],cl
  41ccde:	add    BYTE PTR [edi+0x23],bl
  41cce1:	popf   
  41cce2:	add    eax,eax
  41cce4:	test   edx,0xa0f9bca3
  41ccea:	fs cwde 
  41ccec:	rcr    esp,0x25
  41ccef:	test   DWORD PTR [ecx+eiz*1],ebp
  41ccf2:	mov    edi,DWORD PTR [eax+0x45ec9f7d]
  41ccf8:	ins    DWORD PTR es:[edi],dx
  41ccf9:	enter  0xec14,0x40
  41ccfd:	jo     0x41cd41
  41ccff:	(bad)  
  41cd00:	lods   eax,DWORD PTR ds:[esi]
  41cd01:	pop    esi
  41cd02:	jo     0x41cd0e
  41cd04:	or     dh,BYTE PTR [edx-0x43d7b983]
  41cd0a:	push   edi
  41cd0b:	gs xchg edi,eax
  41cd0d:	xchg   ebx,eax
  41cd0e:	std    
  41cd0f:	and    DWORD PTR [eax-0x33],eax
  41cd12:	(bad)  
  41cd13:	jb     0x41cd37
  41cd15:	or     bh,dh
  41cd17:	dec    ebp
  41cd18:	rcl    DWORD PTR [ebp+ebp*1+0x1cd396f9],cl
  41cd1f:	in     al,dx
  41cd20:	fadd   DWORD PTR [ecx]
  41cd22:	stos   BYTE PTR es:[edi],al
  41cd23:	shr    DWORD PTR [ecx],0x6f
  41cd26:	jnp    0x41cccb
  41cd28:	out    0x69,al
  41cd2a:	jb     0x41ccd1
  41cd2c:	xchg   edi,eax
  41cd2d:	jmp    0x4734:0x1b2c3eb3
  41cd34:	outs   dx,DWORD PTR ds:[esi]
  41cd35:	add    eax,0xb78d32e7
  41cd3a:	repz sar BYTE PTR [eax+0x64fe251d],1
  41cd41:	cli    
  41cd42:	aas    
  41cd43:	fldpi  
  41cd45:	xchg   edx,eax
  41cd46:	scas   eax,DWORD PTR es:[edi]
  41cd47:	or     al,0x29
  41cd49:	das    
  41cd4a:	int    0xb8
  41cd4c:	or     ecx,DWORD PTR [ebx-0x7572e592]
  41cd52:	(bad)  
  41cd53:	xchg   esi,eax
  41cd54:	cmp    eax,0x69c78802
  41cd59:	sbb    eax,0x549fd68a
  41cd5e:	add    DWORD PTR [edi+0x354506c7],edi
  41cd64:	dec    ebx
  41cd65:	mov    eax,ds:0x22f9254a
  41cd6a:	data16 outs dx,BYTE PTR ds:[esi]
  41cd6c:	dec    ecx
  41cd6d:	fld    QWORD PTR [edx]
  41cd6f:	xchg   ebp,eax
  41cd70:	out    0xc9,eax
  41cd72:	test   BYTE PTR [esi],0x8a
  41cd75:	icebp  
  41cd76:	popf   
  41cd77:	add    al,0x3f
  41cd79:	adc    al,0x3
  41cd7b:	repz inc ebp
  41cd7d:	js     0x41cd0b
  41cd7f:	and    BYTE PTR [edi-0x74065f0],dh
  41cd85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd86:	test   al,0xf1
  41cd88:	xlat   BYTE PTR ds:[ebx]
  41cd89:	mov    bl,0x5c
  41cd8b:	jnp    0x41cdee
  41cd8d:	adc    al,0x70
  41cd8f:	push   ss
  41cd90:	ficom  WORD PTR [edi]
  41cd92:	hlt    
  41cd93:	mov    DWORD PTR [edi],edx
  41cd95:	fdiv   st,st(2)
  41cd97:	mov    bl,BYTE PTR [edi-0x72]
  41cd9a:	scas   al,BYTE PTR es:[edi]
  41cd9b:	mov    al,0xf
  41cd9d:	push   ebp
  41cd9e:	inc    edx
  41cd9f:	icebp  
  41cda0:	and    eax,0x5ab4a24e
  41cda5:	sub    DWORD PTR [ebx],0xfffffffd
  41cda8:	es xor ecx,DWORD PTR gs:[edx-0x4]
  41cdad:	push   0x7b0cfcb6
  41cdb2:	jecxz  0x41ce2b
  41cdb4:	ret    0x98c7
  41cdb7:	cmp    ecx,DWORD PTR [edx+0x74670ec]
  41cdbd:	inc    ecx
  41cdbe:	push   ebp
  41cdbf:	sbb    ebx,DWORD PTR [edx+0x4cf97c41]
  41cdc5:	pop    edi
  41cdc6:	pop    esi
  41cdc7:	jmp    0x6baf:0x344674b5
  41cdce:	jo     0x41cd6e
  41cdd0:	mov    edx,0xcc8e9f6c
  41cdd5:	jae    0x41cd83
  41cdd7:	cmc    
  41cdd8:	bound  edi,QWORD PTR [ebp+0x69]
  41cddb:	fiadd  WORD PTR [ebx+0x7bc837ea]
  41cde1:	cmp    esp,0x5454a47b
  41cde7:	xchg   ecx,eax
  41cde8:	pop    es
  41cde9:	jno    0x41ce11
  41cdeb:	sub    dl,BYTE PTR [ecx+ebx*4]
  41cdee:	dec    esp
  41cdef:	dec    edx
  41cdf0:	neg    BYTE PTR [edx]
  41cdf2:	jb     0x41cdbf
  41cdf4:	xchg   ebp,eax
  41cdf5:	shr    BYTE PTR [ebp+0x7b479428],cl
  41cdfb:	ja     0x41ce71
  41cdfd:	shr    esp,1
  41cdff:	adc    DWORD PTR [edx-0x26d8dcbe],esi
  41ce05:	pop    esp
  41ce06:	push   0x1d87e940
  41ce0b:	push   ss
  41ce0c:	mov    ds:0x794f43e6,al
  41ce11:	in     eax,0x2d
  41ce13:	icebp  
  41ce14:	push   esp
  41ce15:	test   DWORD PTR [ebx-0x4cee503c],0x68ca0c75
  41ce1f:	in     al,dx
  41ce20:	pushf  
  41ce21:	ds js  0x41cdae
  41ce24:	cli    
  41ce25:	pop    esp
  41ce26:	pusha  
  41ce27:	push   ebx
  41ce28:	inc    esi
  41ce29:	outs   dx,BYTE PTR ds:[esi]
  41ce2a:	leave  
  41ce2b:	dec    esp
  41ce2c:	pop    ebp
  41ce2d:	or     bl,BYTE PTR [ebx-0x5c069053]
  41ce33:	and    eax,0x49945e39
  41ce38:	nop
  41ce39:	or     dh,bh
  41ce3b:	enter  0xd3c2,0x3e
  41ce3f:	cmc    
  41ce40:	mov    ds:0xb727608f,al
  41ce45:	std    
  41ce46:	imul   esp,DWORD PTR [eax-0x3e],0x83c7b9d0
  41ce4d:	dec    edx
  41ce4e:	sub    esi,edi
  41ce50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce51:	mov    cl,0xc6
  41ce53:	fdiv   DWORD PTR [ebp-0xa17e799]
  41ce59:	xor    BYTE PTR [esi+esi*8-0x24845893],bl
  41ce60:	in     al,0x19
  41ce62:	sbb    DWORD PTR [edi],esi
  41ce64:	lods   eax,DWORD PTR ds:[esi]
  41ce65:	loopne 0x41ce72
  41ce67:	sbb    BYTE PTR [eax],dh
  41ce69:	scas   al,BYTE PTR es:[edi]
  41ce6a:	and    DWORD PTR [edx],ebp
  41ce6c:	loope  0x41cdf2
  41ce6e:	test   DWORD PTR [ebp+0x6c6aadf4],esp
  41ce74:	pop    esp
  41ce75:	push   0xffffffe6
  41ce77:	not    BYTE PTR [eax-0x74bca18d]
  41ce7d:	jg     0x41ce11
  41ce7f:	add    ebp,DWORD PTR [ebp+0x50]
  41ce82:	mov    ch,0xd0
  41ce84:	stos   BYTE PTR es:[edi],al
  41ce85:	hlt    
  41ce86:	iret   
  41ce87:	push   esi
  41ce88:	sub    eax,0x4b6c9493
  41ce8d:	xor    ebx,DWORD PTR [esi+0x58]
  41ce90:	icebp  
  41ce91:	push   ds
  41ce92:	pop    es
  41ce93:	mov    BYTE PTR [bp+si],bl
  41ce96:	jo     0x41ceef
  41ce98:	jno    0x41ce6e
  41ce9a:	mov    ch,0x87
  41ce9c:	(bad)  
  41ce9d:	add    BYTE PTR [eax-0x200828bd],bl
  41cea3:	xor    dl,al
  41cea5:	jne    0x41cefb
  41cea7:	outs   dx,BYTE PTR ds:[esi]
  41cea8:	add    bh,BYTE PTR [esp+esi*2]
  41ceab:	mov    al,ds:0x8b0e1dcc
  41ceb0:	fiadd  WORD PTR [ebx+0x3e4232ed]
  41ceb6:	lock test al,0x41
  41ceb9:	fcomp  DWORD PTR [ebp+0x88fce13]
  41cebf:	iret   
  41cec0:	fisub  DWORD PTR [eax+0x15]
  41cec3:	xchg   ecx,eax
  41cec4:	sbb    BYTE PTR [ebx-0x7c3eb6f5],0xff
  41cecb:	jle    0x41ceb6
  41cecd:	clc    
  41cece:	push   ecx
  41cecf:	sbb    cl,ah
  41ced1:	and    al,0x0
  41ced3:	les    eax,FWORD PTR [ecx]
  41ced5:	gs jle 0x41ceaf
  41ced8:	icebp  
  41ced9:	pop    esp
  41ceda:	sub    cl,BYTE PTR [edi+0x7c]
  41cedd:	cwde   
  41cede:	mov    ebp,0xc089cef
  41cee3:	call   0xc423:0x321529bc
  41ceea:	(bad)  
  41ceeb:	lods   al,BYTE PTR ds:[esi]
  41ceec:	popa   
  41ceed:	add    DWORD PTR [ebp-0x57429c12],edx
  41cef3:	fwait
  41cef4:	mov    al,ds:0xa20c68eb
  41cef9:	add    eax,0xd5a395cc
  41cefe:	mov    al,0x3
  41cf00:	cs fmul st,st(4)
  41cf03:	hlt    
  41cf04:	sti    
  41cf05:	neg    DWORD PTR [ecx+eax*1]
  41cf08:	inc    eax
  41cf09:	stos   DWORD PTR es:[edi],eax
  41cf0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf0b:	lock mov ecx,0xe956537d
  41cf11:	clc    
  41cf12:	(bad)  [eax+0x12cb0477]
  41cf18:	push   ss
  41cf19:	pop    ebp
  41cf1a:	add    BYTE PTR [esi],bl
  41cf1c:	xor    DWORD PTR [ebp+0x56],ebp
  41cf1f:	sbb    DWORD PTR [eax-0x1f97dbb4],0x70
  41cf26:	push   ecx
  41cf27:	in     al,0x2e
  41cf29:	jae    0x41cee8
  41cf2b:	out    0xa1,al
  41cf2d:	das    
  41cf2e:	and    esp,DWORD PTR [ebp-0x13]
  41cf31:	rcl    DWORD PTR [ebx+0x58cfc6dc],cl
  41cf37:	iret   
  41cf38:	pop    ss
  41cf39:	pop    esi
  41cf3a:	push   0x122cef49
  41cf3f:	out    dx,eax
  41cf40:	mov    esi,?
  41cf42:	out    0xd4,al
  41cf44:	add    ah,ah
  41cf46:	hlt    
  41cf47:	repz mov eax,0x6c2f5a2f
  41cf4d:	and    ebp,ebp
  41cf4f:	jno    0x41cfb4
  41cf51:	adc    eax,0x527f84e9
  41cf56:	loope  0x41cfb8
  41cf58:	push   ebp
  41cf59:	rol    BYTE PTR [eax+0x1d],1
  41cf5c:	or     edx,eax
  41cf5e:	inc    esp
  41cf5f:	fbld   TBYTE PTR [eax+0x60977996]
  41cf65:	or     al,0xcd
  41cf67:	sti    
  41cf68:	ror    al,0x35
  41cf6b:	mov    edi,0xb2c0043d
  41cf70:	or     BYTE PTR [edx],dh
  41cf72:	pop    edi
  41cf73:	imul   ebx,DWORD PTR [esi-0x71],0xef60ac06
  41cf7a:	xchg   ebp,eax
  41cf7b:	sbb    ebp,edi
  41cf7d:	sar    DWORD PTR [edx],cl
  41cf7f:	push   0x8c457ab5
  41cf84:	lods   al,BYTE PTR ds:[esi]
  41cf85:	fst    st(6)
  41cf87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf88:	sbb    BYTE PTR ds:0xc039bfac,bl
  41cf8e:	xor    BYTE PTR [eax+0x53],dl
  41cf91:	repz test eax,0xcc586b31
  41cf97:	repnz sub al,0xe9
  41cf9a:	fmul   st,st(1)
  41cf9c:	shl    DWORD PTR [edx],1
  41cf9e:	repnz push 0x2cb5f2
  41cfa4:	push   eax
  41cfa5:	dec    ecx
  41cfa6:	lods   al,BYTE PTR ds:[esi]
  41cfa7:	push   ecx
  41cfa8:	fwait
  41cfa9:	dec    ebx
  41cfaa:	test   BYTE PTR [eax+0x4a],ah
  41cfad:	mov    esi,0xddfc6d3a
  41cfb2:	data16 mov bh,0xf5
  41cfb5:	shl    DWORD PTR [edi-0xc],0xea
  41cfb9:	mov    ds:0x6b0f2517,al
  41cfbe:	mov    al,0xaa
  41cfc0:	enter  0x13e6,0x88
  41cfc4:	cdq    
  41cfc5:	rcl    BYTE PTR [eax],0x10
  41cfc8:	xor    al,0x46
  41cfca:	retf   
  41cfcb:	pop    esp
  41cfcc:	and    al,BYTE PTR [ebx+0x32348b03]
  41cfd2:	das    
  41cfd3:	sbb    BYTE PTR [esi-0x4448d1bc],al
  41cfd9:	call   0xd0203213
  41cfde:	loop   0x41cfbf
  41cfe0:	arpl   WORD PTR [ebx+eax*4-0x79],si
  41cfe4:	xor    BYTE PTR [ebx+0x5709addf],bl
  41cfea:	sub    DWORD PTR cs:0x119be8a,ecx
  41cff1:	(bad)  
  41cff2:	mul    BYTE PTR ds:0xc5372409
  41cff8:	pop    ss
  41cff9:	ins    DWORD PTR es:[edi],dx
  41cffa:	pop    ebx
  41cffb:	adc    DWORD PTR [ecx-0x1a],ebp
  41cffe:	int3   
  41cfff:	clc    
  41d000:	clc    
  41d001:	hlt    
  41d002:	ds test eax,0x4518bfe8
  41d008:	jno    0x41d04a
  41d00a:	dec    ecx
  41d00b:	push   esp
  41d00c:	lods   al,BYTE PTR ds:[esi]
  41d00d:	xor    DWORD PTR [esi],esi
  41d00f:	retf   
  41d010:	out    dx,al
  41d011:	aaa    
  41d012:	mov    BYTE PTR [eax-0x11],dh
  41d015:	test   BYTE PTR [eax-0x2c],dl
  41d018:	outs   dx,BYTE PTR ds:[esi]
  41d019:	mov    al,ds:0x8c3d2a5a
  41d01e:	adc    DWORD PTR [ecx+0x74a559f],edi
  41d024:	popa   
  41d025:	jmp    esp
  41d027:	cmp    DWORD PTR [eax],eax
  41d029:	mov    esi,0xac94bee4
  41d02e:	jl     0x41d075
  41d030:	fwait
  41d031:	lods   eax,DWORD PTR ds:[esi]
  41d032:	xchg   ebx,eax
  41d033:	es xchg ecx,eax
  41d035:	xchg   ecx,eax
  41d036:	adc    al,0x65
  41d038:	push   0x53
  41d03a:	jg     0x41cff3
  41d03c:	test   eax,0x835f0bf4
  41d041:	pushf  
  41d042:	mov    ebp,0x6241d2f1
  41d047:	add    al,0xf
  41d049:	pop    edx
  41d04a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d04b:	push   ds
  41d04c:	jb     0x41d000
  41d04e:	jns    0x41d015
  41d050:	mov    BYTE PTR [esi+0x34],cl
  41d053:	jbe    0x41d038
  41d055:	push   ecx
  41d056:	ret    0x28e6
  41d059:	int3   
  41d05a:	or     al,0xa3
  41d05c:	pop    ebx
  41d05d:	stos   BYTE PTR es:[edi],al
  41d05e:	push   0xfd5e8520
  41d063:	add    ch,bl
  41d065:	retf   
  41d066:	dec    DWORD PTR [ebx]
  41d068:	pop    es
  41d069:	into   
  41d06a:	inc    edx
  41d06b:	or     DWORD PTR [ebx+0x3676a835],ecx
  41d071:	add    cl,0x3b
  41d074:	mov    esp,0x7aefb2d2
  41d079:	jg     0x41d0ee
  41d07b:	outs   dx,BYTE PTR ds:[esi]
  41d07c:	push   esi
  41d07d:	mov    dh,0x3a
  41d07f:	lock jbe 0x41d019
  41d082:	dec    ebp
  41d083:	mov    cl,0xcb
  41d085:	in     eax,0xd0
  41d087:	ja     0x41d0e9
  41d089:	scas   al,BYTE PTR es:[edi]
  41d08a:	sub    ch,bh
  41d08c:	stos   BYTE PTR es:[edi],al
  41d08d:	test   BYTE PTR [edi-0xa7cead3],bh
  41d093:	ficom  DWORD PTR [esi-0x75]
  41d096:	sbb    DWORD PTR [edi+0x74],edi
  41d099:	add    BYTE PTR [edi],bh
  41d09b:	sahf   
  41d09c:	xor    eax,0x366a332b
  41d0a1:	inc    ebx
  41d0a2:	xchg   esp,eax
  41d0a3:	jl     0x41d046
  41d0a5:	pop    eax
  41d0a6:	gs inc edi
  41d0a8:	xor    al,0x51
  41d0aa:	fmul   QWORD PTR [edx+eiz*1-0x2]
  41d0ae:	dec    bl
  41d0b0:	jmp    0xd532:0xd7dbd94
  41d0b7:	fs jge 0x41d0e0
  41d0ba:	loop   0x41d0b2
  41d0bc:	inc    eax
  41d0bd:	gs invd 
  41d0c0:	scas   eax,DWORD PTR es:[edi]
  41d0c1:	mov    ecx,DWORD PTR [eax]
  41d0c3:	cli    
  41d0c4:	pop    esi
  41d0c5:	cld    
  41d0c6:	addr16 cwde 
  41d0c8:	pop    ds
  41d0c9:	and    esi,DWORD PTR [ebp-0x67]
  41d0cc:	sti    
  41d0cd:	push   eax
  41d0ce:	ds mov ah,0xe5
  41d0d1:	dec    ch
  41d0d3:	add    eax,DWORD PTR [eax+0x60]
  41d0d6:	push   ds
  41d0d7:	fcomip st,st(6)
  41d0d9:	mov    sp,WORD PTR [edx+0x21d372fc]
  41d0e0:	and    BYTE PTR [ecx-0x5c],al
  41d0e3:	cdq    
  41d0e4:	cmp    DWORD PTR [ebx],esp
  41d0e6:	mov    ds:0x631ac505,eax
  41d0eb:	dec    ebp
  41d0ec:	adc    esi,edx
  41d0ee:	adc    DWORD PTR [ecx-0x66149791],ebp
  41d0f4:	leave  
  41d0f5:	aas    
  41d0f6:	mov    edx,DWORD PTR [ebp-0x1f]
  41d0f9:	xchg   edi,eax
  41d0fa:	adc    al,0x69
  41d0fc:	fisub  WORD PTR [edi+0xf]
  41d0ff:	outs   dx,BYTE PTR ds:[esi]
  41d100:	repnz or al,0xa3
  41d103:	inc    ebp
  41d104:	pop    es
  41d105:	aas    
  41d106:	jb     0x41d0b7
  41d108:	mov    es,WORD PTR [edx+0x408c1a02]
  41d10e:	mov    ds,WORD PTR [ecx+0x7effba01]
  41d114:	stc    
  41d115:	stc    
  41d116:	sub    BYTE PTR [ebp+0x7c4b5816],0x42
  41d11d:	xchg   DWORD PTR [ecx-0x584c9eaf],ebx
  41d123:	cli    
  41d124:	push   0x85c1d779
  41d129:	mov    esp,0xae2b9f6
  41d12e:	shl    DWORD PTR [ebp+0x7f5dbaa8],1
  41d134:	outs   dx,DWORD PTR ds:[esi]
  41d135:	adc    BYTE PTR [eax+0x23],0x91
  41d139:	and    ecx,DWORD PTR [edi+ebx*1+0x7e9f57ce]
  41d140:	ja     0x41d118
  41d142:	lock xchg ebx,eax
  41d144:	adc    BYTE PTR [ebp-0x30],dl
  41d147:	clc    
  41d148:	xor    al,0x77
  41d14a:	xchg   ecx,eax
  41d14b:	mov    dl,0xb1
  41d14d:	mov    dh,0x11
  41d14f:	iret   
  41d150:	mov    esp,ds
  41d152:	inc    esp
  41d153:	mov    edi,0xfceb43ae
  41d158:	scas   al,BYTE PTR es:[edi]
  41d159:	cld    
  41d15a:	mov    ecx,DWORD PTR [edx-0x50]
  41d15d:	sbb    eax,0x251b9313
  41d162:	mov    bl,0x75
  41d164:	jns    0x41d17f
  41d166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d167:	(bad)  
  41d168:	mov    dh,0xa1
  41d16a:	push   cs
  41d16b:	clc    
  41d16c:	mov    ebx,0x202cc573
  41d171:	out    0x0,eax
  41d173:	fcmovnbe st,st(3)
  41d175:	pop    ecx
  41d176:	xchg   BYTE PTR [eax-0x6dc896bc],dl
  41d17c:	mov    bh,0x5e
  41d17e:	xor    ecx,DWORD PTR [edx-0x2d640ec6]
  41d184:	or     eax,0xc53fb07a
  41d189:	jg     0x41d187
  41d18b:	out    dx,eax
  41d18c:	in     eax,dx
  41d18d:	leave  
  41d18e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d18f:	push   ds
  41d190:	repnz mov ecx,DWORD PTR [edx+0x3f8d1a91]
  41d197:	dec    edi
  41d198:	or     al,0x91
  41d19a:	aas    
  41d19b:	mov    ebx,0x20a3412d
  41d1a0:	xor    al,0xd1
  41d1a2:	jnp    0x41d139
  41d1a4:	push   ds
  41d1a5:	(bad)  [ecx-0x3b14b827]
  41d1ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1ac:	jg     0x41d138
  41d1ae:	(bad)  
  41d1af:	cmp    al,0xfd
  41d1b1:	not    BYTE PTR [edi+0x77590633]
  41d1b7:	lahf   
  41d1b8:	jecxz  0x41d143
  41d1ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1bb:	fistp  DWORD PTR [ecx]
  41d1bd:	jmp    0xcccf:0xf69048cd
  41d1c4:	lds    esi,FWORD PTR [ebp+0x1a]
  41d1c7:	cmp    DWORD PTR [ecx-0x31f9d0a6],edi
  41d1cd:	out    dx,eax
  41d1ce:	dec    edx
  41d1cf:	xor    DWORD PTR [edx],edi
  41d1d1:	ins    BYTE PTR es:[edi],dx
  41d1d2:	scas   eax,DWORD PTR es:[edi]
  41d1d3:	clc    
  41d1d4:	into   
  41d1d5:	call   0xd144:0xe205a0be
  41d1dc:	icebp  
  41d1dd:	mov    esi,0x3a380c8a
  41d1e2:	jge    0x41d19d
  41d1e4:	ret    0x6bf2
  41d1e7:	mov    ecx,0x18a6f192
  41d1ec:	aaa    
  41d1ed:	push   esp
  41d1ee:	push   esp
  41d1ef:	clc    
  41d1f0:	clc    
  41d1f1:	pop    esp
  41d1f2:	outs   dx,BYTE PTR ds:[esi]
  41d1f3:	mov    ds:0x10b1aa7,eax
  41d1f8:	jne    0x41d1b1
  41d1fa:	clc    
  41d1fb:	scas   al,BYTE PTR es:[edi]
  41d1fc:	repz addr16 loop 0x41d232
  41d200:	in     al,0x75
  41d202:	or     edx,ecx
  41d204:	loop   0x41d18d
  41d206:	ror    DWORD PTR [ecx+edi*2-0x4f],0xd4
  41d20b:	dec    esp
  41d20c:	xchg   ch,dh
  41d20e:	inc    eax
  41d20f:	ins    BYTE PTR es:[edi],dx
  41d210:	pop    edx
  41d211:	cmp    al,0xed
  41d213:	xchg   ebp,eax
  41d214:	js     0x41d1a5
  41d216:	jno    0x41d266
  41d218:	mov    ch,0x8f
  41d21a:	push   ecx
  41d21b:	pop    ebx
  41d21c:	xlat   BYTE PTR ds:[ebx]
  41d21d:	cs and ebp,ecx
  41d220:	dec    edi
  41d221:	lods   al,BYTE PTR ds:[esi]
  41d222:	lea    ecx,[ebx]
  41d224:	mov    eax,0xaa610cfc
  41d229:	mov    ecx,DWORD PTR [esi+eax*1+0x540b2409]
  41d230:	sahf   
  41d231:	stos   DWORD PTR es:[edi],eax
  41d232:	xchg   ecx,eax
  41d233:	lock jge 0x41d2a1
  41d236:	es aad 0x29
  41d239:	or     al,BYTE PTR [ebx]
  41d23b:	les    esi,FWORD PTR [edi-0x55]
  41d23e:	outs   dx,BYTE PTR ds:[esi]
  41d240:	cmc    
  41d241:	jp     0x41d246
  41d243:	inc    ebp
  41d244:	xor    DWORD PTR [edx+esi*1+0x13],0x7b
  41d249:	pop    ds
  41d24a:	aaa    
  41d24b:	in     eax,0xf
  41d24d:	lea    eax,[edi+0x1f1b54dc]
  41d253:	shl    DWORD PTR [edx-0x24],0xc3
  41d257:	inc    edx
  41d258:	mov    ecx,0x674c49ea
  41d25d:	cld    
  41d25e:	pop    edi
  41d25f:	out    dx,eax
  41d260:	fstp   QWORD PTR [esp+ebx*4]
  41d263:	mov    ch,0x10
  41d265:	pusha  
  41d266:	inc    ebx
  41d267:	dec    ebx
  41d268:	sti    
  41d269:	fwait
  41d26a:	or     BYTE PTR [ecx+0x3bb19ce],ch
  41d270:	std    
  41d271:	ret    0x3a1c
  41d274:	lods   eax,DWORD PTR ds:[esi]
  41d275:	dec    esi
  41d276:	(bad)  
  41d277:	and    BYTE PTR [edx-0x6b],ah
  41d27a:	hlt    
  41d27b:	xchg   edx,eax
  41d27c:	mov    ecx,DWORD PTR ds:[esi-0x50ae89f]
  41d283:	and    bl,BYTE PTR [edi]
  41d285:	sub    bl,cl
  41d287:	fstp   QWORD PTR [ebx+0x521ad2e2]
  41d28d:	jae    0x41d227
  41d28f:	dec    esp
  41d290:	sub    DWORD PTR [eax+0x50139e1b],0xffffffaf
  41d297:	cmp    eax,0x5b4501ff
  41d29c:	mov    al,BYTE PTR [ebp+0x40]
  41d29f:	dec    ecx
  41d2a0:	push   esi
  41d2a1:	dec    eax
  41d2a2:	cmp    BYTE PTR [ebx-0x65],ch
  41d2a5:	add    DWORD PTR [ecx],ebp
  41d2a7:	adc    al,0x7
  41d2a9:	test   al,0xb5
  41d2ab:	xchg   ebx,eax
  41d2ac:	out    dx,al
  41d2ad:	or     eax,0x8926c5b5
  41d2b2:	leave  
  41d2b3:	mov    al,0xa
  41d2b5:	out    dx,eax
  41d2b6:	xchg   ecx,eax
  41d2b7:	cmp    ebp,ebp
  41d2b9:	adc    al,0x1d
  41d2bb:	scas   eax,DWORD PTR es:[edi]
  41d2bc:	mov    eax,ds:0x550b700b
  41d2c1:	std    
  41d2c2:	stos   BYTE PTR es:[edi],al
  41d2c3:	cmp    edx,ecx
  41d2c5:	adc    BYTE PTR [ebx+ebp*2],cl
  41d2c8:	push   edi
  41d2c9:	push   cs
  41d2ca:	mov    esi,0x35984818
  41d2cf:	mov    bl,0x23
  41d2d1:	fsub   QWORD PTR [ecx]
  41d2d3:	xchg   esp,eax
  41d2d4:	jnp    0x41d306
  41d2d6:	enter  0xe7b,0x24
  41d2da:	aam    0xfd
  41d2dc:	jno    0x41d2e1
  41d2de:	push   ebx
  41d2df:	pop    esi
  41d2e0:	dec    ebx
  41d2e1:	jge    0x41d343
  41d2e3:	ret    0x7378
  41d2e6:	or     al,BYTE PTR [ebp+0x4682786a]
  41d2ec:	imul   edi,DWORD PTR [eax-0x49],0x676e59fd
  41d2f3:	xchg   edi,eax
  41d2f4:	enter  0x2a3c,0xce
  41d2f8:	aas    
  41d2f9:	mov    eax,0x7992a321
  41d2fe:	enter  0xd208,0x73
  41d302:	sbb    DWORD PTR ds:0xb5ec55b4,ecx
  41d308:	adc    DWORD PTR [ecx-0x54],eax
  41d30b:	stos   DWORD PTR es:[edi],eax
  41d30c:	into   
  41d30d:	into   
  41d30e:	out    0xb3,eax
  41d310:	enter  0xf16c,0x71
  41d314:	mov    DWORD PTR [ebp-0x745a1794],esi
  41d31a:	jbe    0x41d305
  41d31c:	hlt    
  41d31d:	cli    
  41d31e:	sbb    BYTE PTR [ebx+0x5c],dh
  41d321:	and    dl,BYTE PTR [ebp-0x442b5237]
  41d327:	jbe    0x41d2d6
  41d329:	xchg   ecx,esp
  41d32b:	add    BYTE PTR [edi+0x195f8746],ch
  41d331:	inc    esi
  41d332:	cdq    
  41d333:	mov    bh,0x5c
  41d335:	lea    edi,[edi+0x69]
  41d338:	scas   al,BYTE PTR es:[edi]
  41d339:	fsubr  QWORD PTR [edi+0x16]
  41d33c:	cdq    
  41d33d:	mov    ds:0xe2415f0a,eax
  41d342:	dec    edx
  41d343:	jne    0x41d2c7
  41d345:	jae    0x41d34e
  41d347:	enter  0x5b4d,0x6b
  41d34b:	test   BYTE PTR [esi-0x75],dh
  41d34e:	mov    ecx,0x2b0f655b
  41d353:	les    esi,FWORD PTR [ecx]
  41d355:	outs   dx,DWORD PTR ds:[esi]
  41d356:	jmp    0x41d33b
  41d358:	cmp    al,0x1d
  41d35a:	stos   BYTE PTR es:[edi],al
  41d35b:	pop    edi
  41d35c:	test   al,0xad
  41d35e:	pop    esp
  41d35f:	scas   eax,DWORD PTR es:[edi]
  41d360:	add    al,0x70
  41d362:	dec    esp
  41d363:	jbe    0x41d394
  41d365:	gs push ss
  41d367:	inc    edx
  41d368:	stos   BYTE PTR es:[edi],al
  41d369:	mov    eax,ds:0xee00d2a2
  41d36e:	mov    cl,BYTE PTR [edx]
  41d370:	cli    
  41d371:	test   al,0x5d
  41d373:	test   BYTE PTR [ebp+0x34],bh
  41d376:	pop    ecx
  41d377:	xchg   esi,eax
  41d378:	sets   BYTE PTR fs:[ebp+0x1e]
  41d37d:	repnz xchg ecx,eax
  41d37f:	loope  0x41d301
  41d381:	call   0x929b3133
  41d386:	push   ebx
  41d387:	xchg   esi,eax
  41d388:	jmp    DWORD PTR [ecx]
  41d38a:	push   eax
  41d38b:	push   edi
  41d38c:	(bad)  
  41d38d:	jbe    0x41d370
  41d38f:	repnz mov edx,0x2d3a74eb
  41d395:	ret    
  41d396:	or     DWORD PTR [esi],edx
  41d398:	xchg   ebp,eax
  41d399:	add    eax,0xe050b0cb
  41d39e:	cli    
  41d39f:	xor    edx,DWORD PTR [edx-0x5d048220]
  41d3a5:	outs   dx,DWORD PTR ds:[esi]
  41d3a6:	lods   al,BYTE PTR ds:[esi]
  41d3a7:	adc    edx,DWORD PTR [eax+ebp*1]
  41d3aa:	add    BYTE PTR [esi],ch
  41d3ac:	push   0xffffffa1
  41d3ae:	xor    edx,DWORD PTR [ebp+0x4a0efc00]
  41d3b4:	adc    al,dh
  41d3b6:	fst    st(4)
  41d3b8:	jp     0x41d375
  41d3ba:	or     eax,DWORD PTR [ebp-0x141ab3f9]
  41d3c0:	cmp    BYTE PTR [edx+0x12],ch
  41d3c3:	stos   DWORD PTR es:[edi],eax
  41d3c4:	jae    0x41d371
  41d3c6:	jns    0x41d3cf
  41d3c8:	shl    DWORD PTR [ebx],0x15
  41d3cb:	sub    eax,DWORD PTR [ecx-0x10]
  41d3ce:	pop    esi
  41d3cf:	cmp    BYTE PTR [eax],cl
  41d3d1:	inc    esp
  41d3d2:	ins    BYTE PTR es:[edi],dx
  41d3d3:	call   0x49d3d858
  41d3d8:	test   DWORD PTR [ebx+eax*4],ecx
  41d3db:	pop    ebp
  41d3dc:	enter  0x2fe2,0x74
  41d3e0:	and    al,0x5b
  41d3e2:	mov    eax,0xa3d37eae
  41d3e7:	(bad)  
  41d3e9:	pop    edx
  41d3ea:	cmp    dl,BYTE PTR [esp+eiz*8+0x4c3f867d]
  41d3f1:	add    ah,BYTE PTR [ebp+0x8d75b18]
  41d3f7:	les    eax,FWORD PTR [ecx+0x9]
  41d3fa:	inc    ebp
  41d3fb:	push   esi
  41d3fc:	ins    DWORD PTR es:[edi],dx
  41d3fd:	imul   esi,DWORD PTR [ebx-0x9],0xa175dd49
  41d404:	mov    eax,0x8d960742
  41d409:	and    eax,0x24720bea
  41d40e:	out    0x5d,eax
  41d410:	popa   
  41d411:	jb     0x41d39e
  41d413:	add    esi,DWORD PTR [edx+ecx*2-0x1c]
  41d417:	loopne 0x41d473
  41d419:	xchg   esi,eax
  41d41a:	nop
  41d41b:	mov    ebx,0xdf49dcfa
  41d420:	mov    ds:0x8b3a8a4e,al
  41d425:	mov    WORD PTR es:[bp+si-0x57],fs
  41d42a:	xor    DWORD PTR ds:0x84b560ca,0xfbc8a738
  41d434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d435:	test   edx,eax
  41d437:	mov    ds:0xa0489d13,eax
  41d43c:	xchg   DWORD PTR [esp+edi*4+0x6d],ebp
  41d440:	ja     0x41d449
  41d442:	call   FWORD PTR [edx-0x5]
  41d445:	cmp    BYTE PTR [eax+0x6a],cl
  41d448:	dec    esp
  41d449:	lds    ebp,FWORD PTR [esi+ebx*8]
  41d44c:	test   al,0x6a
  41d44e:	imul   edx,DWORD PTR [ebx*4-0x782748a5],0x82cb4519
  41d459:	jle    0x41d4c4
  41d45b:	cmc    
  41d45c:	mov    dh,0xb7
  41d45e:	adc    DWORD PTR [esi-0x72],0xffffffb7
  41d462:	call   0x1d94b03a
  41d467:	outs   dx,BYTE PTR ds:[esi]
  41d468:	sub    eax,0x9bae2694
  41d46d:	nop    ebp
  41d470:	mov    al,ds:0x5beab8bc
  41d475:	mov    WORD PTR [edi],?
  41d477:	icebp  
  41d478:	xchg   DWORD PTR [esi+edi*8],edx
  41d47b:	and    DWORD PTR [ecx+edi*2+0x2d08c323],esi
  41d482:	(bad)  
  41d485:	div    DWORD PTR [edx-0x6b64f6b4]
  41d48b:	add    ah,BYTE PTR ds:0x4e20acbf
  41d491:	loope  0x41d485
  41d493:	push   ds
  41d494:	xor    ecx,DWORD PTR [ecx]
  41d496:	mov    ds:0xede37a97,al
  41d49b:	inc    edx
  41d49c:	mov    dl,0x76
  41d49e:	es jle 0x41d4b1
  41d4a1:	fst    DWORD PTR [ecx+0x739fc1e0]
  41d4a7:	fs pop edi
  41d4a9:	add    ebx,eax
  41d4ab:	rcl    DWORD PTR [esi],0x97
  41d4ae:	cmp    BYTE PTR [esi],cl
  41d4b0:	and    esp,DWORD PTR [eax]
  41d4b2:	idiv   BYTE PTR [eax+0x1aaab925]
  41d4b8:	pop    ds
  41d4b9:	mov    bl,0xa4
  41d4bb:	out    0x2a,eax
  41d4bd:	sub    BYTE PTR [edi-0x54],dh
  41d4c0:	push   ss
  41d4c1:	mov    ds:0x35ca260f,al
  41d4c6:	rol    DWORD PTR [ecx],0xe3
  41d4c9:	mov    edi,0xd01c27da
  41d4ce:	jns    0x41d52c
  41d4d0:	and    eax,0x27f99321
  41d4d5:	jno    0x41d4b7
  41d4d7:	push   eax
  41d4d8:	fcos   
  41d4da:	in     al,0x5a
  41d4dc:	sbb    DWORD PTR [ecx],edx
  41d4de:	xchg   esi,eax
  41d4df:	dec    edx
  41d4e0:	sar    DWORD PTR [eax+0x6a],0xaa
  41d4e4:	das    
  41d4e5:	or     eax,ebp
  41d4e7:	xchg   ebx,eax
  41d4e8:	xchg   edi,eax
  41d4e9:	jo     0x41d527
  41d4eb:	and    al,0xdb
  41d4ed:	fsub   QWORD PTR cs:[ebp-0x6886fa0c]
  41d4f4:	ret    
  41d4f5:	cmp    ebp,DWORD PTR [ebp+0x5b]
  41d4f8:	push   0x2a
  41d4fa:	es mov al,0xd0
  41d4fd:	test   eax,0x5ba9860c
  41d502:	jle    0x41d51f
  41d504:	inc    ebp
  41d505:	mov    esp,0xdb1c4d6
  41d50a:	(bad)  
  41d50b:	outs   dx,BYTE PTR ds:[esi]
  41d50c:	jmp    0xcaa550fb
  41d511:	and    edx,ebx
  41d513:	xor    eax,DWORD PTR [ecx]
  41d515:	ja     0x41d53d
  41d517:	lock (bad) 
  41d519:	xor    al,0x89
  41d51b:	fs stos BYTE PTR es:[edi],al
  41d51d:	dec    ebp
  41d51e:	ins    BYTE PTR es:[edi],dx
  41d51f:	adc    eax,0xedc0262c
  41d524:	out    dx,eax
  41d525:	xchg   ebx,eax
  41d526:	or     BYTE PTR [eax-0x1554cf09],ch
  41d52c:	dec    edi
  41d52d:	sti    
  41d52e:	test   DWORD PTR [eax],esi
  41d530:	mov    ds:0x3bc796c2,eax
  41d535:	adc    al,0x5b
  41d537:	mov    bh,0x3e
  41d539:	dec    ecx
  41d53a:	mov    al,0x41
  41d53c:	(bad)  
  41d53d:	iret   
  41d53e:	inc    eax
  41d53f:	mov    dl,0x4f
  41d541:	sahf   
  41d542:	add    dh,BYTE PTR [edx+0x3c]
  41d545:	es push edi
  41d547:	push   ebx
  41d548:	xchg   ebx,eax
  41d549:	icebp  
  41d54a:	ret    0xdb57
  41d54d:	lds    esi,FWORD PTR [eax-0x1c]
  41d550:	jle    0x41d5cb
  41d552:	jns    0x41d536
  41d554:	mov    bl,0x93
  41d556:	and    BYTE PTR [edi+0x278c448a],bh
  41d55c:	dec    esi
  41d55d:	jmp    0x41d513
  41d55f:	xor    al,0x2e
  41d561:	push   edx
  41d562:	sub    bl,0x80
  41d565:	adc    eax,0x4ef67cd2
  41d56a:	stos   BYTE PTR es:[edi],al
  41d56b:	js     0x41d576
  41d56d:	jg     0x41d544
  41d56f:	lds    esi,FWORD PTR [eax+0x65]
  41d572:	adc    al,0xdf
  41d574:	cmp    BYTE PTR [edi+edi*2],bh
  41d577:	xor    eax,0xdd936fd8
  41d57c:	mov    ecx,0xebc18244
  41d581:	fmul   st,st(5)
  41d583:	scas   eax,DWORD PTR es:[edi]
  41d584:	inc    si
  41d586:	adc    ecx,DWORD PTR [eax]
  41d588:	sbb    DWORD PTR [ebx],edx
  41d58a:	fdiv   DWORD PTR [eax-0x38]
  41d58d:	dec    ebx
  41d58e:	pop    esp
  41d58f:	sub    BYTE PTR [esi+esi*2+0x5841d3ba],0xaf
  41d597:	jecxz  0x41d543
  41d599:	push   es
  41d59a:	push   esi
  41d59b:	pop    edi
  41d59c:	mov    esp,0x47cc8645
  41d5a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5a2:	sbb    ch,bh
  41d5a4:	inc    ecx
  41d5a5:	(bad)  
  41d5a6:	fdiv   st(0),st
  41d5a8:	mov    DWORD PTR [edi],ebx
  41d5aa:	add    BYTE PTR [edi-0x16ec9b7a],dh
  41d5b0:	cli    
  41d5b1:	ds push ds
  41d5b3:	gs test al,0x79
  41d5b6:	pop    DWORD PTR [ebp-0x897d85b]
  41d5bc:	sub    BYTE PTR [esp+eiz*2],ch
  41d5bf:	cdq    
  41d5c0:	pusha  
  41d5c1:	push   esp
  41d5c2:	rcl    BYTE PTR [ecx+0x44],cl
  41d5c5:	scas   al,BYTE PTR es:[edi]
  41d5c6:	jne    0x5893ce46
  41d5cc:	lods   eax,DWORD PTR ds:[esi]
  41d5cd:	loope  0x41d590
  41d5cf:	xchg   edi,eax
  41d5d0:	nop
  41d5d1:	aad    0xce
  41d5d3:	sub    eax,DWORD PTR [edx]
  41d5d5:	enter  0x77cf,0x84
  41d5d9:	inc    edx
  41d5da:	test   DWORD PTR [eax+0x56],esi
  41d5dd:	jle    0x41d5ff
  41d5df:	jbe    0x41d5d2
  41d5e1:	inc    edx
  41d5e2:	sbb    BYTE PTR [edi-0x2e54be23],dl
  41d5e8:	jge    0x41d5a6
  41d5ea:	mov    bh,0xe9
  41d5ec:	or     DWORD PTR [edx+0x54],ebx
  41d5ef:	mov    al,ds:0xf01bb9bd
  41d5f4:	in     al,0x2c
  41d5f6:	dec    ecx
  41d5f7:	test   ebp,ebp
  41d5f9:	sub    al,0x55
  41d5fb:	sbb    eax,0x8c079647
  41d600:	mov    esp,0x482247f4
  41d605:	jmp    0x88e20853
  41d60a:	cmp    bl,dh
  41d60c:	hlt    
  41d60d:	stos   DWORD PTR es:[edi],eax
  41d60e:	ret    
  41d60f:	pop    ecx
  41d610:	loope  0x41d64c
  41d612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d613:	adc    al,0xf5
  41d615:	outs   dx,BYTE PTR ds:[esi]
  41d616:	out    0xce,eax
  41d618:	(bad)  
  41d619:	out    0x51,al
  41d61b:	dec    eax
  41d61c:	fst    QWORD PTR [ebp-0x27]
  41d61f:	mov    ds:0xf8fb6312,eax
  41d624:	imul   DWORD PTR [esi-0x722e983]
  41d62a:	in     eax,0x75
  41d62c:	repz xor edi,DWORD PTR [edx]
  41d62f:	pop    es
  41d630:	xor    BYTE PTR [edi+0x10],dh
  41d633:	out    0x45,eax
  41d635:	int    0x81
  41d637:	pop    esp
  41d638:	lods   al,BYTE PTR ds:[esi]
  41d639:	xor    al,0x4a
  41d63b:	imul   esi,DWORD PTR [edi],0x13
  41d63e:	pushf  
  41d63f:	or     al,0x84
  41d641:	ja     0x41d657
  41d643:	repnz aam 0xb4
  41d646:	xchg   ecx,eax
  41d647:	jnp    0x41d65f
  41d649:	int    0x6
  41d64b:	dec    eax
  41d64c:	inc    ecx
  41d64d:	cs adc al,0xda
  41d650:	push   edx
  41d651:	das    
  41d652:	xlat   BYTE PTR ds:[ebx]
  41d653:	pop    ds
  41d654:	adc    ah,BYTE PTR [ecx+edi*4+0x3d]
  41d658:	into   
  41d659:	sub    ecx,ebp
  41d65b:	xlat   BYTE PTR ds:[ebx]
  41d65c:	dec    esp
  41d65d:	daa    
  41d65e:	xor    BYTE PTR [edx+0xc],ch
  41d661:	icebp  
  41d662:	mov    fs,WORD PTR [esi-0x5a73e83a]
  41d668:	xchg   edi,eax
  41d669:	lods   eax,DWORD PTR ds:[esi]
  41d66a:	pop    ds
  41d66b:	(bad)  
  41d66d:	or     al,0x3b
  41d66f:	into   
  41d670:	idiv   BYTE PTR [esi-0x12ba9ecd]
  41d676:	loopne 0x41d622
  41d678:	adc    eax,0x7655d2b5
  41d67d:	cmp    BYTE PTR [ecx-0x28],0x4a
  41d681:	(bad)  
  41d682:	sub    al,bl
  41d684:	mov    ch,0xe1
  41d686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d687:	mov    edi,0xbceb39ce
  41d68c:	retf   0x8cbf
  41d68f:	inc    esi
  41d690:	mov    ch,BYTE PTR [edi+0x40]
  41d693:	inc    eax
  41d694:	add    esi,esi
  41d696:	mov    cs:0x2436a9ac,eax
  41d69c:	fisttp WORD PTR [ecx+edx*8]
  41d69f:	leave  
  41d6a0:	push   0x20
  41d6a2:	xor    al,0x26
  41d6a4:	jmp    0x64a0:0xd7732e55
  41d6ab:	ja     0x41d63a
  41d6ad:	add    al,0xae
  41d6af:	sbb    BYTE PTR [edx+ebx*2],0x18
  41d6b3:	ror    DWORD PTR [ebp+ebp*1+0x4b],0x30
  41d6b8:	leave  
  41d6b9:	aaa    
  41d6ba:	std    
  41d6bb:	ficomp DWORD PTR [ebx+0x4b]
  41d6be:	cmp    bh,BYTE PTR [esi+0x5497f05e]
  41d6c4:	loopne 0x41d64d
  41d6c6:	iret   
  41d6c7:	adc    DWORD PTR [edi+0x18],0x3c6641b1
  41d6ce:	popf   
  41d6cf:	in     al,dx
  41d6d0:	mov    BYTE PTR [ebx],0xc0
  41d6d3:	(bad)  
  41d6d4:	and    eax,0x62c52787
  41d6d9:	xchg   esp,eax
  41d6da:	sub    BYTE PTR [edi+0x7d],0x41
  41d6de:	jp     0x41d6da
  41d6e0:	mov    edi,0xc73ca4eb
  41d6e5:	mov    dh,0x5b
  41d6e7:	xchg   DWORD PTR [esi+0x7d5a1bbf],edi
  41d6ed:	pop    ebp
  41d6ee:	dec    ebp
  41d6ef:	xchg   edx,eax
  41d6f0:	or     ebx,esi
  41d6f2:	add    eax,0xc1a440b
  41d6f7:	loopne 0x41d70e
  41d6f9:	mov    DWORD PTR [esi],0xd03fb4ab
  41d6ff:	inc    ecx
  41d700:	sbb    ecx,ecx
  41d702:	icebp  
  41d703:	xchg   esi,eax
  41d704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d705:	das    
  41d706:	jb     0x41d709
  41d708:	sub    BYTE PTR [ebx],bl
  41d70a:	pusha  
  41d70b:	pop    edx
  41d70c:	ror    BYTE PTR [esi+0x44135c59],1
  41d712:	sti    
  41d713:	(bad)  
  41d714:	add    dh,dh
  41d716:	(bad)  
  41d717:	mov    al,ds:0xf3c8bc09
  41d71c:	(bad)  
  41d71d:	xchg   esp,edi
  41d71f:	pop    ebp
  41d720:	and    eax,DWORD PTR [esi-0x6d7f903f]
  41d726:	test   DWORD PTR [ebx+eiz*8-0x2],0xcc1a30f7
  41d72e:	mov    edi,0x4780296e
  41d733:	icebp  
  41d734:	jbe    0x41d72d
  41d736:	pop    ds
  41d737:	aas    
  41d738:	fisub  WORD PTR ds:0xe02a4a96
  41d73e:	dec    ecx
  41d73f:	lahf   
  41d740:	and    DWORD PTR [edi+0x389343d1],esp
  41d746:	mov    bh,0x40
  41d748:	sub    edx,DWORD PTR [eax]
  41d74a:	add    ah,BYTE PTR [edi+0x6078122c]
  41d750:	call   0x5c4d177b
  41d755:	xchg   ebp,eax
  41d756:	lods   eax,DWORD PTR ds:[esi]
  41d757:	rcl    edi,0xa1
  41d75a:	xchg   edi,eax
  41d75b:	out    0xd,al
  41d75d:	loope  0x41d710
  41d75f:	int3   
  41d760:	data16 stos BYTE PTR es:[edi],al
  41d762:	sub    ecx,DWORD PTR [esi]
  41d764:	daa    
  41d765:	inc    edx
  41d766:	jge    0x41d736
  41d768:	mov    ecx,0x692d8381
  41d76d:	add    al,0xeb
  41d76f:	jo     0x41d7ed
  41d771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d772:	nop
  41d773:	arpl   bp,bp
  41d775:	sbb    eax,0xbec28cce
  41d77a:	add    BYTE PTR [eax],al
  41d77c:	adc    al,0x6
  41d77e:	add    DWORD PTR [eax+0x3c58f61a],esi
  41d784:	in     eax,dx
  41d785:	cwde   
  41d786:	lods   eax,DWORD PTR ds:[esi]
  41d787:	lods   eax,DWORD PTR ds:[esi]
  41d788:	and    al,0x1f
  41d78a:	or     edi,DWORD PTR [ecx+0x64]
  41d78d:	outs   dx,BYTE PTR ds:[esi]
  41d78e:	loop   0x41d73f
  41d790:	dec    ebp
  41d791:	fs cs stos DWORD PTR es:[edi],eax
  41d794:	outs   dx,DWORD PTR ds:[esi]
  41d795:	mov    esi,0x205940a6
  41d79a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41d79c:	in     al,dx
  41d79d:	inc    ebp
  41d79e:	mov    dh,0x46
  41d7a0:	xor    eax,DWORD PTR [edx+ebx*1+0x13f95d8a]
  41d7a7:	cs fcmovb st,st(3)
  41d7aa:	mov    bh,0xf5
  41d7ac:	div    DWORD PTR [edx]
  41d7ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7af:	and    edx,DWORD PTR [esp+eax*1-0x500780d]
  41d7b6:	loope  0x41d745
  41d7b8:	mov    dh,0xb1
  41d7ba:	arpl   WORD PTR [ebx],bp
  41d7bc:	jmp    0xbd3a09ea
  41d7c1:	pop    esp
  41d7c2:	loop   0x41d81c
  41d7c4:	xchg   ecx,eax
  41d7c5:	mov    ebx,DWORD PTR [ebp+esi*2-0x39bb2966]
  41d7cc:	adc    DWORD PTR ds:0x6a154248,ebx
  41d7d2:	sub    DWORD PTR [ebp+0x433674d2],edi
  41d7d8:	push   ss
  41d7d9:	arpl   bp,di
  41d7db:	pop    ebp
  41d7dc:	into   
  41d7dd:	into   
  41d7de:	jg     0x41d80a
  41d7e0:	jp     0x41d7a9
  41d7e2:	sub    al,0x40
  41d7e4:	xor    esp,edi
  41d7e6:	mov    ds:0x9132be6,eax
  41d7eb:	adc    eax,0xe0808e93
  41d7f0:	dec    edx
  41d7f1:	xor    edi,esp
  41d7f3:	fs loope 0x41d7d9
  41d7f6:	in     al,0x67
  41d7f8:	stos   DWORD PTR es:[edi],eax
  41d7f9:	iret   
  41d7fa:	jae    0x41d845
  41d7fc:	dec    esi
  41d7fd:	or     al,0xe8
  41d7ff:	fadd   DWORD PTR [ecx+0x8]
  41d802:	inc    edx
  41d803:	pop    edx
  41d804:	mov    al,0x76
  41d806:	popa   
  41d807:	mov    edx,0xab4d1b0f
  41d80c:	fisub  WORD PTR [edx+0x4b]
  41d80f:	pop    esp
  41d810:	mov    dl,0x4f
  41d812:	pop    es
  41d813:	out    0xf8,eax
  41d815:	mov    DWORD PTR [edx],ecx
  41d817:	lods   eax,DWORD PTR ds:[esi]
  41d818:	xor    al,0xbf
  41d81a:	cmp    ah,BYTE PTR [ecx+esi*4+0x9]
  41d81e:	add    bh,0x77
  41d821:	sub    al,0xec
  41d823:	stos   BYTE PTR es:[edi],al
  41d824:	jbe    0x41d883
  41d826:	jle    0x41d7af
  41d828:	jge    0x41d89e
  41d82a:	adc    esi,ebp
  41d82c:	mov    ecx,0x6fc4cd8a
  41d831:	add    al,0x2b
  41d833:	jno    0x41d834
  41d835:	adc    eax,0x500e2d3d
  41d83a:	push   esi
  41d83b:	cwde   
  41d83c:	iret   
  41d83d:	cmp    eax,0xa6e0c1c0
  41d842:	stc    
  41d843:	cli    
  41d844:	sbb    dl,BYTE PTR [esi+0x4]
  41d847:	loopne 0x41d7d8
  41d849:	fwait
  41d84a:	adc    BYTE PTR [ecx+0x218d8935],al
  41d850:	test   BYTE PTR [esi+ebp*8+0x72],0xa
  41d855:	imul   esi,esp,0xffffffc9
  41d858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d859:	dec    esi
  41d85a:	push   edi
  41d85b:	mov    ds:0x4dd3f286,al
  41d860:	mov    al,0x40
  41d862:	data16 jne 0x41d7fe
  41d865:	into   
  41d866:	push   ds
  41d867:	enter  0x2614,0xbe
  41d86b:	mov    bh,0x1c
  41d86d:	imul   ebp,edi,0x61
  41d870:	xor    DWORD PTR [esi],ebp
  41d872:	mov    al,ds:0xf2628040
  41d877:	rcr    DWORD PTR ds:[bp+di+0x7c],0xc8
  41d87d:	jmp    0x41d8be
  41d87f:	mov    ch,0x44
  41d881:	mov    dl,0x8
  41d883:	push   edx
  41d884:	jmp    0x41d8ed
  41d886:	sbb    ebp,ecx
  41d888:	or     al,0x22
  41d88a:	nop
  41d88b:	in     eax,0x8e
  41d88d:	bound  ecx,QWORD PTR [ebx+0x321d1feb]
  41d893:	cmp    esi,ebp
  41d895:	out    0x2a,al
  41d897:	xor    al,bh
  41d899:	push   esi
  41d89a:	(bad)  
  41d89b:	cmc    
  41d89c:	(bad)  
  41d89d:	js     0x41d8f7
  41d89f:	mov    al,0xa3
  41d8a1:	xchg   esi,eax
  41d8a2:	inc    esi
  41d8a3:	loopne 0x41d843
  41d8a5:	arpl   WORD PTR [ecx-0x13dda1f],si
  41d8ab:	dec    edx
  41d8ac:	sahf   
  41d8ad:	adc    ecx,DWORD PTR [edx+eiz*1-0xd5816ba]
  41d8b4:	in     al,0xd2
  41d8b6:	addr16 mov ecx,0xec14efd5
  41d8bc:	mov    fs,WORD PTR ds:0x435792e5
  41d8c2:	inc    edx
  41d8c3:	ja     0x41d930
  41d8c5:	jmp    0xea6f:0x1841baeb
  41d8cc:	fdivr  QWORD PTR [ecx]
  41d8ce:	xor    bh,al
  41d8d0:	cmp    ah,ch
  41d8d2:	mov    al,ds:0x7b64a664
  41d8d7:	push   edi
  41d8d8:	cmc    
  41d8d9:	mov    dl,0x2d
  41d8db:	push   edx
  41d8dc:	retf   
  41d8dd:	inc    ecx
  41d8de:	dec    edi
  41d8df:	pop    esp
  41d8e0:	xor    eax,0x59ab6fc4
  41d8e5:	or     DWORD PTR [ebx+0xc],esi
  41d8e8:	add    BYTE PTR [ecx],dh
  41d8ea:	imul   ebx,DWORD PTR [ebx+0x34],0x4
  41d8ee:	or     DWORD PTR ds:0x56db0485,ebp
  41d8f4:	mov    DWORD PTR [ebx],eax
  41d8f6:	push   ebp
  41d8f7:	mov    edx,0x478d3a93
  41d8fc:	imul   BYTE PTR [ebx+0x6e]
  41d8ff:	mov    eax,0xa93670fb
  41d905:	aad    0x46
  41d907:	cmp    edx,0xffffffed
  41d90a:	xchg   DWORD PTR [eax],esi
  41d90c:	stc    
  41d90d:	adc    esi,DWORD PTR [edi]
  41d90f:	inc    esp
  41d910:	add    esp,DWORD PTR [ebx-0x26]
  41d913:	adc    bl,BYTE PTR [esi+0x8537111]
  41d919:	xor    al,0xcc
  41d91b:	fadd   st(6),st
  41d91d:	test   al,0xd9
  41d91f:	leave  
  41d920:	xchg   edi,eax
  41d921:	popf   
  41d922:	shl    BYTE PTR [edi-0x6ef6e768],1
  41d928:	ins    DWORD PTR es:[edi],dx
  41d929:	(bad)  
  41d92a:	imul   BYTE PTR [ecx+0x3d]
  41d92d:	mov    eax,ds:0x11487e2a
  41d932:	ins    DWORD PTR es:[edi],dx
  41d933:	adc    edi,ecx
  41d935:	xor    eax,0xe591198d
  41d93a:	out    0x41,al
  41d93c:	pusha  
  41d93d:	int3   
  41d93e:	inc    ebx
  41d93f:	mov    ?,WORD PTR [ecx]
  41d941:	pop    ss
  41d942:	push   ds
  41d943:	cld    
  41d944:	fcmovnu st,st(0)
  41d946:	inc    ebp
  41d947:	cld    
  41d948:	cld    
  41d949:	mov    ds:0xd848a32c,eax
  41d94e:	ss cli 
  41d950:	cld    
  41d951:	mov    eax,ds:0x6ac26e31
  41d956:	cmp    eax,0xac9aa0
  41d95b:	fisttp DWORD PTR [eax]
  41d95d:	mov    ch,0x6
  41d95f:	push   eax
  41d960:	xor    DWORD PTR [ecx+0x4a31f73f],ecx
  41d966:	mov    ebp,DWORD PTR [eax+0x3885b600]
  41d96c:	mov    al,0xfc
  41d96e:	push   ds
  41d96f:	int3   
  41d970:	xchg   BYTE PTR [esi-0x55d9c8ea],dh
  41d976:	add    al,0xa2
  41d978:	out    dx,al
  41d979:	mov    eax,ds:0xa67ebd3b
  41d97e:	lods   eax,DWORD PTR ds:[esi]
  41d97f:	mov    al,0xbf
  41d981:	inc    ecx
  41d982:	leave  
  41d983:	addr16 repz call 0x776f:0xea164118
  41d98c:	jmp    0x41d996
  41d98e:	mov    al,0xd
  41d990:	jmp    0x63eeae9d
  41d995:	imul   edx,eax,0xeec80eab
  41d99b:	ins    BYTE PTR es:[edi],dx
  41d99c:	shl    BYTE PTR ds:0x58607969,cl
  41d9a2:	pop    esi
  41d9a3:	jl     0x41da0b
  41d9a5:	xchg   ebp,eax
  41d9a6:	inc    edi
  41d9a7:	(bad)
  41d9aa:	jmp    0xccc6f557
  41d9af:	push   0xd28ccc08
  41d9b4:	mov    BYTE PTR [eax],0x38
  41d9b7:	mov    cl,0xea
  41d9b9:	stos   BYTE PTR es:[edi],al
  41d9ba:	je     0x41da37
  41d9bc:	and    BYTE PTR [edi+0x5527c01b],cl
  41d9c2:	or     BYTE PTR ds:0x5279fef4,ch
  41d9c8:	or     DWORD PTR [eax+0x3a],edx
  41d9cb:	iret   
  41d9cc:	mov    edx,0x8bc7b8bd
  41d9d1:	sar    BYTE PTR [esp+esi*2+0x63232824],0x98
  41d9d9:	sub    ah,BYTE PTR [edi-0x7ffc3d98]
  41d9df:	dec    ecx
  41d9e0:	rcl    BYTE PTR [ecx],1
  41d9e2:	(bad)  
  41d9e3:	lock adc al,0x44
  41d9e6:	jbe    0x41d9d6
  41d9e8:	or     BYTE PTR [ebp-0x60],ah
  41d9eb:	dec    ebp
  41d9ec:	ins    DWORD PTR es:[edi],dx
  41d9ed:	mov    dl,0x7c
  41d9ef:	xor    eax,DWORD PTR [esi]
  41d9f1:	push   0xfa638407
  41d9f6:	scas   al,BYTE PTR es:[edi]
  41d9f7:	aad    0x38
  41d9f9:	or     DWORD PTR [esi-0x37],eax
  41d9fc:	in     al,0x4c
  41d9fe:	in     al,0x91
  41da00:	or     esp,DWORD PTR [esp+ebx*8-0x8]
  41da04:	int3   
  41da05:	jno    0x41d9b1
  41da07:	jmp    0x41d9c9
  41da09:	adc    ebp,DWORD PTR [ebx]
  41da0b:	mov    bl,0x55
  41da0d:	pop    ds
  41da0e:	call   0xc819:0xf95cc605
  41da15:	stc    
  41da16:	pop    ebp
  41da17:	ror    DWORD PTR [edx+0x1e],0x89
  41da1b:	sbb    esp,ecx
  41da1d:	mov    ah,0x71
  41da1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da20:	mov    eax,0x5bc59f30
  41da25:	cmp    al,0x8f
  41da27:	adc    ebx,DWORD PTR [eax]
  41da29:	pop    eax
  41da2a:	cld    
  41da2b:	popa   
  41da2c:	test   eax,0xf8bc37af
  41da31:	jns    0x41d9bc
  41da33:	js     0x41daa1
  41da35:	sbb    al,0xd2
  41da37:	shr    DWORD PTR [edi-0xd],0x57
  41da3b:	xlat   BYTE PTR ds:[ebx]
  41da3c:	pop    esp
  41da3d:	or     DWORD PTR [edx+0x3cfd4e8e],ecx
  41da43:	pop    ss
  41da44:	(bad)  
  41da45:	push   ss
  41da46:	stos   DWORD PTR es:[edi],eax
  41da47:	add    eax,0x8c619a58
  41da4c:	xor    eax,ebx
  41da4e:	shl    DWORD PTR [eax],cl
  41da50:	cld    
  41da51:	js     0x41da86
  41da53:	shr    BYTE PTR [ebx],cl
  41da55:	in     al,0xdc
  41da57:	sub    al,0xa2
  41da59:	cs inc edx
  41da5b:	add    eax,0xad028ad9
  41da60:	push   cs
  41da61:	dec    eax
  41da62:	fwait
  41da63:	mov    bl,0xd4
  41da65:	pop    es
  41da66:	jne    0x41da0b
  41da68:	add    ecx,DWORD PTR [eax]
  41da6a:	sbb    ah,0x95
  41da6d:	mov    cl,0x52
  41da6f:	jg     0x41dab4
  41da71:	mov    esp,0x4627a5da
  41da76:	push   ds
  41da77:	push   ds
  41da78:	mov    edx,0x22c53df3
  41da7d:	mov    ds:0x5f2be1a8,eax
  41da82:	ds pop ebp
  41da84:	cmp    eax,0x105d8909
  41da89:	jne    0x41dab9
  41da8b:	and    BYTE PTR ds:[edx+ecx*8-0x2d510d4f],ah
  41da93:	sub    ecx,DWORD PTR [eax-0x1c]
  41da96:	out    dx,al
  41da97:	adc    edx,DWORD PTR [ebx+0x7e]
  41da9a:	inc    eax
  41da9b:	cli    
  41da9c:	and    bh,0x91
  41da9f:	hlt    
  41daa0:	or     ecx,edx
  41daa2:	je     0x41db01
  41daa4:	repnz xor eax,0x7a8005ae
  41daaa:	mov    ds:0xa82c33bb,al
  41daaf:	les    ecx,FWORD PTR [edx]
  41dab1:	rol    al,1
  41dab3:	rcr    DWORD PTR [ecx-0x49236a82],1
  41dab9:	pop    ecx
  41daba:	mov    edx,0xd7dfd1dd
  41dabf:	int    0xfb
  41dac1:	xchg   ebx,eax
  41dac2:	pop    eax
  41dac3:	mov    ah,0x35
  41dac5:	iret   
  41dac6:	ins    BYTE PTR es:[edi],dx
  41dac7:	sub    BYTE PTR [edi+ecx*8],cl
  41daca:	inc    edi
  41dacb:	call   0x59f3:0x299bd76b
  41dad2:	sub    cl,0xc1
  41dad5:	xor    DWORD PTR [edi-0x34],edi
  41dad8:	pop    ebp
  41dad9:	cmc    
  41dada:	jb     0x41da8d
  41dadc:	jno    0x41daf5
  41dade:	mov    gs,WORD PTR [ebp-0x430e7086]
  41dae4:	pop    esi
  41dae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dae6:	pop    esi
  41dae7:	cld    
  41dae8:	mov    DWORD PTR [ebx-0x5d],edi
  41daeb:	fiadd  WORD PTR [edx]
  41daed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daee:	jmp    0x44a6:0x5411de6a
  41daf5:	jno    0x41da86
  41daf7:	mov    ecx,DWORD PTR [ebp-0x6647f4ee]
  41dafd:	push   cs
  41dafe:	fs repz test ah,cl
  41db02:	into   
  41db03:	es inc edi
  41db05:	not    BYTE PTR [ebx]
  41db07:	ja     0x41dab8
  41db09:	sub    DWORD PTR [ecx-0x35ebd4f6],ebp
  41db0f:	adc    BYTE PTR [ecx],cl
  41db11:	fidivr DWORD PTR [ecx]
  41db13:	or     DWORD PTR [ebp-0x2c],esp
  41db16:	push   edi
  41db17:	test   DWORD PTR [eax+0x43afc831],edi
  41db1d:	into   
  41db1e:	enter  0x8ec1,0x36
  41db22:	je     0x41db06
  41db24:	cmp    al,0xbc
  41db26:	outs   dx,BYTE PTR ds:[esi]
  41db27:	lods   al,BYTE PTR ds:[esi]
  41db28:	jp     0x41dadc
  41db2a:	fcmovne st,st(0)
  41db2c:	fld    TBYTE PTR [edi+0x2d]
  41db2f:	push   ecx
  41db30:	add    edx,DWORD PTR ds:0x6b82270
  41db36:	lods   al,BYTE PTR ds:[esi]
  41db37:	mov    ds:0xcbd7a386,eax
  41db3c:	add    BYTE PTR [esi+0x54],al
  41db3f:	inc    edx
  41db40:	push   ebx
  41db41:	outs   dx,DWORD PTR ds:[esi]
  41db42:	xchg   edx,eax
  41db43:	xlat   BYTE PTR ds:[ebx]
  41db44:	push   es
  41db45:	into   
  41db46:	imul   esp,DWORD PTR es:[ecx-0x656b9dd4],0x45a3068e
  41db51:	add    edx,edi
  41db53:	mov    edi,0x81da6542
  41db58:	out    dx,al
  41db59:	fcomp  QWORD PTR [edi+0x13]
  41db5c:	aad    0x38
  41db5e:	sbb    esi,DWORD PTR [ecx+0x634aa8d9]
  41db64:	mov    bh,BYTE PTR [ecx]
  41db66:	xchg   esi,eax
  41db67:	call   0xa220:0x7744b7b8
  41db6e:	popf   
  41db6f:	pop    esi
  41db70:	adc    eax,0x161357ca
  41db75:	push   ecx
  41db76:	lahf   
  41db77:	bound  edi,QWORD PTR [ebx+ebp*2]
  41db7a:	mov    cl,0xb9
  41db7c:	in     eax,0x63
  41db7e:	(bad)  
  41db7f:	pop    ebp
  41db80:	ds jl  0x41dbc7
  41db83:	dec    ebx
  41db84:	fldenv [eax]
  41db86:	xchg   ebx,esp
  41db88:	in     al,dx
  41db89:	cdq    
  41db8a:	iret   
  41db8b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41db8d:	push   esi
  41db8e:	sub    bh,BYTE PTR [edi+eax*8-0x2220eaa7]
  41db95:	push   esp
  41db96:	fisttp WORD PTR [eax]
  41db98:	push   edi
  41db99:	ds and dh,bl
  41db9c:	mov    al,0xc8
  41db9e:	jmp    0x41dbbe
  41dba0:	fs push edi
  41dba2:	add    ebx,esi
  41dba4:	in     al,dx
  41dba5:	cmc    
  41dba6:	jmp    0x494e:0x62c462a2
  41dbad:	xchg   BYTE PTR [esp+ebp*8+0x5],dl
  41dbb1:	cmc    
  41dbb2:	mov    cl,0x4e
  41dbb4:	sub    dl,BYTE PTR [ecx-0x68]
  41dbb7:	adc    cl,BYTE PTR [ebx+0x59]
  41dbba:	mov    eax,0xdc17402c
  41dbbf:	lock ss ret 
  41dbc2:	ds cmp al,0xdb
  41dbc5:	mov    WORD PTR [ebx+edx*2-0x71],ss
  41dbc9:	fwait
  41dbca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbcb:	mov    al,ds:0xae60ec9e
  41dbd0:	inc    esp
  41dbd1:	jge    0x41db65
  41dbd3:	push   ebx
  41dbd4:	jbe    0x41db69
  41dbd6:	lods   eax,DWORD PTR ds:[esi]
  41dbd7:	fisttp WORD PTR [esi]
  41dbd9:	sahf   
  41dbda:	ret    
  41dbdb:	call   0x95b6:0xa267b489
  41dbe2:	pop    esi
  41dbe3:	xchg   edx,eax
  41dbe4:	call   0xd159:0x2fc7f6dd
  41dbeb:	mov    ds:0xd9e13cba,al
  41dbf0:	dec    ecx
  41dbf1:	pop    es
  41dbf2:	jmp    0x6118ad7
  41dbf7:	fwait
  41dbf8:	push   ebx
  41dbf9:	push   cs
  41dbfa:	(bad)  
  41dbfb:	movnti DWORD PTR [edx+0x320fd38b],esi
  41dc02:	pushf  
  41dc03:	leave  
  41dc04:	pop    esp
  41dc05:	mov    dh,BYTE PTR [esi-0x4]
  41dc08:	push   esi
  41dc09:	es iret 
  41dc0b:	jns    0x41dc4a
  41dc0d:	or     DWORD PTR [edi],edi
  41dc0f:	mov    gs,WORD PTR [esi-0x22]
  41dc12:	sbb    al,0x4a
  41dc14:	dec    ebp
  41dc15:	(bad)  
  41dc16:	(bad)  
  41dc17:	out    dx,al
  41dc18:	xchg   edx,eax
  41dc19:	pop    ss
  41dc1a:	in     eax,dx
  41dc1b:	xchg   DWORD PTR [edi-0x1a],ebx
  41dc1e:	jnp    0x41dbaa
  41dc20:	test   DWORD PTR [ecx-0x718bf13],ebx
  41dc26:	xor    al,cl
  41dc28:	test   eax,0x746df3f3
  41dc2d:	retf   0xe7cc
  41dc30:	pop    ds
  41dc31:	mov    ?,WORD PTR [ecx+0x7a]
  41dc34:	pop    ss
  41dc35:	add    al,0xf1
  41dc37:	add    esi,edi
  41dc39:	pop    ss
  41dc3a:	pop    esp
  41dc3b:	in     eax,0xd8
  41dc3d:	mov    cl,0xb2
  41dc3f:	dec    ebp
  41dc40:	ja     0x41dbf6
  41dc42:	pop    ss
  41dc43:	cs push edx
  41dc45:	or     bh,BYTE PTR [ebx+0x13158ffe]
  41dc4b:	popa   
  41dc4c:	or     al,0x23
  41dc4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc4f:	test   DWORD PTR [ecx-0x35],esp
  41dc52:	loop   0x41dbed
  41dc54:	xchg   esi,eax
  41dc55:	rcl    BYTE PTR [ecx+0x58],cl
  41dc58:	inc    ebp
  41dc59:	cmp    bh,BYTE PTR [ebp-0x4f]
  41dc5c:	cmovs  esi,DWORD PTR [eax]
  41dc5f:	sar    DWORD PTR [ebp+0x74],cl
  41dc62:	xchg   ebx,eax
  41dc63:	test   DWORD PTR [ecx-0x48],esp
  41dc66:	push   ds
  41dc67:	aaa    
  41dc68:	mov    ecx,DWORD PTR [eax+0x49a793f6]
  41dc6e:	and    al,0x16
  41dc70:	or     eax,0x5771beac
  41dc75:	dec    eax
  41dc76:	enter  0x9105,0xb1
  41dc7a:	outs   dx,DWORD PTR ds:[esi]
  41dc7b:	ins    BYTE PTR es:[edi],dx
  41dc7c:	scas   eax,DWORD PTR es:[edi]
  41dc7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc7e:	mov    ch,0x95
  41dc80:	xchg   edx,eax
  41dc81:	rcr    BYTE PTR [eax-0x18],1
  41dc84:	cmp    eax,0x99d06965
  41dc89:	dec    edx
  41dc8a:	out    0x4a,al
  41dc8c:	lea    esp,[ebx-0x5e]
  41dc8f:	icebp  
  41dc90:	test   al,0xf9
  41dc92:	(bad)  
  41dc93:	sahf   
  41dc94:	hlt    
  41dc95:	mov    dh,0x15
  41dc97:	test   al,0x7b
  41dc99:	push   ecx
  41dc9a:	adc    esp,eax
  41dc9c:	cmp    al,0xcc
  41dc9e:	push   es
  41dc9f:	fld    QWORD PTR [esi+0x470e4b7d]
  41dca5:	lock push ss
  41dca7:	and    al,bh
  41dca9:	jne    0x41dd16
  41dcab:	mov    ebp,0xa2c1ff01
  41dcb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcb1:	pusha  
  41dcb2:	mov    edx,DWORD PTR [ecx-0x283a2de5]
  41dcb8:	aas    
  41dcb9:	mov    dh,0x4d
  41dcbb:	xor    cl,al
  41dcbd:	repz cwde 
  41dcbf:	shl    BYTE PTR [ecx+eiz*1+0x4160e7bd],cl
  41dcc6:	pop    esi
  41dcc7:	fadd   QWORD PTR [edi]
  41dcc9:	pop    ss
  41dcca:	inc    DWORD PTR [eax-0x49]
  41dccd:	push   ebx
  41dcce:	enter  0xad98,0x7e
  41dcd2:	fisttp QWORD PTR [ebx+0x48]
  41dcd5:	cwde   
  41dcd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcd7:	fld    QWORD PTR [edx+0x23d1096c]
  41dcdd:	lahf   
  41dcde:	and    al,0x10
  41dce0:	inc    ebx
  41dce1:	enter  0x42ed,0x23
  41dce5:	pop    edx
  41dce6:	adc    ch,BYTE PTR [ecx]
  41dce8:	add    eax,0x4527c902
  41dced:	addr16 addr16 pushf 
  41dcf0:	adc    DWORD PTR [ebp*8-0x2592d4e],esp
  41dcf7:	mov    esi,DWORD PTR [ecx-0x1]
  41dcfa:	add    ebx,esp
  41dcfc:	popf   
  41dcfd:	xchg   edi,eax
  41dcfe:	shl    DWORD PTR [ecx+0x61],cl
  41dd01:	test   al,0xdf
  41dd03:	lock xor BYTE PTR [edx+0x4e],al
  41dd07:	mov    WORD PTR [ecx-0x33],ds
  41dd0a:	repz out dx,eax
  41dd0c:	cmc    
  41dd0d:	jb     0x41dd01
  41dd0f:	jno    0x41dce3
  41dd11:	or     cl,BYTE PTR [ecx-0xc32242c]
  41dd17:	scas   eax,DWORD PTR es:[edi]
  41dd18:	dec    esi
  41dd19:	dec    edi
  41dd1a:	scas   eax,DWORD PTR es:[edi]
  41dd1b:	(bad)  
  41dd1c:	je     0x41dd22
  41dd1e:	shl    DWORD PTR [ecx],cl
  41dd20:	sub    eax,0x91d26c1a
  41dd25:	je     0x41dd70
  41dd27:	out    dx,al
  41dd28:	lahf   
  41dd29:	or     al,0x18
  41dd2b:	sbb    BYTE PTR ds:0xca1ea35,bl
  41dd31:	xor    DWORD PTR [eax-0x58],esi
  41dd34:	repz mov al,ds:0xd7f668c0
  41dd3a:	out    dx,al
  41dd3b:	ret    0x9bba
  41dd3e:	mov    bl,0x19
  41dd40:	pop    edx
  41dd41:	(bad)  
  41dd42:	sub    DWORD PTR [edx+eax*2+0x2a518cb7],eax
  41dd49:	es cmp bh,dh
  41dd4c:	in     eax,0x5b
  41dd4e:	or     BYTE PTR [edi-0x4c],0x0
  41dd52:	in     eax,dx
  41dd53:	pusha  
  41dd54:	popf   
  41dd55:	jle    0x41dd28
  41dd57:	xor    ebp,DWORD PTR [eax+0x5f]
  41dd5a:	inc    edx
  41dd5b:	mov    eax,ebp
  41dd5d:	add    ecx,DWORD PTR [ebx+0x57]
  41dd60:	(bad)  
  41dd61:	adc    edx,esi
  41dd63:	mov    BYTE PTR [ebx-0x66979d63],cl
  41dd69:	scas   eax,DWORD PTR es:[edi]
  41dd6a:	xchg   edi,eax
  41dd6b:	loopne 0x41dd7a
  41dd6d:	fiadd  WORD PTR [ecx]
  41dd6f:	mov    eax,0xcb990ce2
  41dd74:	enter  0xd09a,0xf9
  41dd78:	push   0x8788e5db
  41dd7d:	je     0x41dd7c
  41dd7f:	sub    DWORD PTR [edx+0x14],esp
  41dd82:	mov    dl,ah
  41dd84:	dec    eax
  41dd85:	dec    esp
  41dd86:	sub    al,0xb3
  41dd88:	push   ss
  41dd89:	fs mov ah,0xa7
  41dd8c:	push   ebx
  41dd8d:	rol    BYTE PTR ds:0xcc6e0971,cl
  41dd93:	cmp    bh,BYTE PTR [edi+eiz*4-0x617d5ae8]
  41dd9a:	fldenv [edx+0x65fb169d]
  41dda0:	push   ecx
  41dda1:	jno    0x41ddb7
  41dda3:	mov    ebx,0x127738ac
  41dda8:	std    
  41dda9:	cmc    
  41ddaa:	rcr    BYTE PTR es:[eax+ebx*4],0xc6
  41ddaf:	loopne 0x41ddde
  41ddb1:	ss jo  0x41dd61
  41ddb4:	dec    ebx
  41ddb5:	lahf   
  41ddb6:	inc    edx
  41ddb7:	pop    ebx
  41ddb8:	add    al,0xdf
  41ddba:	mov    ebx,0xb217066e
  41ddbf:	and    DWORD PTR [ebp+0x4259e5d6],ebx
  41ddc5:	pop    edx
  41ddc6:	sub    BYTE PTR [ebx],0x55
  41ddc9:	imul   ebp,DWORD PTR [ebx-0x3b963f0e],0xeae0baea
  41ddd3:	mov    ebx,0x7621bb92
  41ddd8:	fs mov cl,0xde
  41dddb:	(bad)  
  41dddc:	loop   0x41de4a
  41ddde:	daa    
  41dddf:	test   DWORD PTR [edx+ebp*8-0x75df8d30],0xf3add993
  41ddea:	jns    0x41de38
  41ddec:	popf   
  41dded:	aam    0x11
  41ddef:	pop    ecx
  41ddf0:	leave  
  41ddf1:	add    eax,0x359b193b
  41ddf6:	cmc    
  41ddf7:	ret    
  41ddf8:	fiadd  WORD PTR [ebx+ebp*2+0x391bd9e9]
  41ddff:	jge    0x41de7d
  41de01:	sub    esi,ebp
  41de03:	into   
  41de04:	lea    esp,[ebx]
  41de06:	push   esi
  41de07:	inc    edx
  41de08:	pushf  
  41de09:	enter  0x3436,0x22
  41de0d:	push   edi
  41de0e:	jle    0x41ddbb
  41de10:	cmp    edi,DWORD PTR [esp+ecx*4+0x66]
  41de14:	and    ebp,DWORD PTR [edx+0x19]
  41de17:	pushf  
  41de18:	sbb    ah,BYTE PTR [edx]
  41de1a:	pop    edx
  41de1b:	popa   
  41de1c:	mov    esp,0x528d0070
  41de21:	mov    al,ds:0xcb94d129
  41de26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de27:	pop    gs
  41de29:	mov    BYTE PTR [edx+0xa08ac9f],bh
  41de2f:	imul   ebp,DWORD PTR [ecx+0x14],0x34
  41de33:	sti    
  41de34:	sub    eax,0xa312c25e
  41de39:	(bad)  
  41de3a:	clc    
  41de3b:	lds    esp,FWORD PTR [esp+eiz*8-0x5b]
  41de3f:	ror    ebp,cl
  41de41:	ss popa 
  41de43:	jb     0x41deba
  41de45:	xchg   esi,eax
  41de46:	in     al,0x29
  41de48:	not    edx
  41de4a:	mov    dh,bh
  41de4c:	cmc    
  41de4d:	retf   0x5c96
  41de50:	ds out 0x73,al
  41de53:	aas    
  41de54:	fs inc edi
  41de56:	stos   DWORD PTR es:[edi],eax
  41de57:	add    al,0xd9
  41de59:	imul   esp,DWORD PTR [ebp-0x39],0x1bc0e33
  41de60:	cdq    
  41de61:	stos   DWORD PTR es:[edi],eax
  41de62:	sub    ch,BYTE PTR [ecx+edx*4+0x46be6d0e]
  41de69:	cmp    ch,BYTE PTR [ebp+0x358029f7]
  41de6f:	stos   BYTE PTR es:[edi],al
  41de70:	clc    
  41de71:	out    0x17,al
  41de73:	imul   esi,edi,0xffffffb7
  41de76:	and    edi,DWORD PTR [ebx-0x23]
  41de79:	push   esi
  41de7a:	(bad)  
  41de7b:	sub    DWORD PTR [ebx+0x50793317],edx
  41de81:	mov    dh,BYTE PTR [ebx]
  41de83:	mov    ecx,0xd049d722
  41de88:	sub    esi,DWORD PTR [ebx+0x2d27c49f]
  41de8e:	inc    esi
  41de8f:	inc    ebp
  41de90:	inc    edi
  41de91:	arpl   WORD PTR [esi+esi*2],cx
  41de94:	mov    ds:0xcd470fd,eax
  41de99:	int3   
  41de9a:	jge    0x41de32
  41de9c:	nop
  41de9d:	mov    ds:0x215dfb72,al
  41dea2:	lds    edx,FWORD PTR [ebx*4+0x35af6bd2]
  41dea9:	or     ah,0x32
  41deac:	aaa    
  41dead:	aad    0x2
  41deaf:	loopne 0x41df01
  41deb1:	or     eax,0x9c5bd586
  41deb6:	fistp  WORD PTR [ebx-0x6c]
  41deb9:	in     eax,dx
  41deba:	ftst   
  41debc:	in     eax,dx
  41debd:	(bad)  
  41debe:	mov    al,0x55
  41dec0:	dec    edi
  41dec1:	mul    edi
  41dec3:	stos   DWORD PTR es:[edi],eax
  41dec4:	dec    ebp
  41dec5:	out    dx,eax
  41dec6:	mov    bl,0xfc
  41dec8:	shr    esp,1
  41deca:	mov    esp,0xe141d515
  41decf:	sbb    DWORD PTR [ebp+edi*8-0x3e0e49f8],eax
  41ded6:	sahf   
  41ded7:	xchg   esp,eax
  41ded8:	nop
  41ded9:	jnp    0x41ded7
  41dedb:	arpl   dx,bp
  41dedd:	fisub  DWORD PTR [eax-0x68460f27]
  41dee3:	jb     0x41deb5
  41dee5:	popa   
  41dee6:	sbb    BYTE PTR [edi],dl
  41dee8:	sub    eax,0xc3bb45fe
  41deed:	cmp    DWORD PTR [eax+0x70],eax
  41def0:	mov    ds:0x743d9fce,eax
  41def5:	mov    al,0x2e
  41def7:	retf   
  41def8:	fmul   DWORD PTR [eax+0x67ba78af]
  41defe:	sub    dh,BYTE PTR [edx+edi*2+0x21a63311]
  41df05:	pop    ds
  41df06:	dec    DWORD PTR [edx-0x476c6305]
  41df0c:	loopne 0x41df1e
  41df0e:	mov    eax,ds:0x60bceb7d
  41df13:	or     al,0x63
  41df15:	cli    
  41df16:	shl    BYTE PTR [edx],1
  41df18:	sbb    bp,cx
  41df1b:	mov    DWORD PTR [ebx-0x35c6e09a],eax
  41df21:	leave  
  41df22:	or     DWORD PTR [ecx-0x1c],0x5f
  41df26:	sti    
  41df27:	xchg   edx,eax
  41df28:	pusha  
  41df29:	mov    ch,0x19
  41df2b:	popa   
  41df2c:	sbb    edi,DWORD PTR [ebp-0x7335e455]
  41df32:	scas   eax,DWORD PTR es:[edi]
  41df33:	ficomp DWORD PTR [esi]
  41df35:	xlat   BYTE PTR ds:[ebx]
  41df36:	jns    0x41df48
  41df38:	mov    BYTE PTR ds:0x7cae0390,0xa9
  41df3f:	out    0x50,al
  41df41:	inc    eax
  41df42:	adc    ebx,DWORD PTR [eax]
  41df44:	ror    DWORD PTR [esi-0x56],cl
  41df47:	xchg   DWORD PTR [edi],ebx
  41df49:	add    edx,eax
  41df4b:	loopne 0x41dee3
  41df4d:	loop   0x41df9b
  41df4f:	fst    DWORD PTR [edi+0x7]
  41df52:	test   eax,0xb9526159
  41df57:	mov    edx,0x53ecfef1
  41df5c:	xor    al,0xd5
  41df5e:	je     0x41df57
  41df60:	sti    
  41df61:	cld    
  41df62:	stc    
  41df63:	xchg   ecx,eax
  41df64:	push   edx
  41df65:	shl    DWORD PTR es:[ebp-0x7cc3fc79],0x9c
  41df6d:	dec    ebx
  41df6e:	cmp    ecx,ebx
  41df70:	(bad)  
  41df71:	(bad)  
  41df72:	jbe    0x41dfc8
  41df74:	in     al,dx
  41df75:	leave  
  41df76:	push   ss
  41df77:	nop
  41df78:	or     bl,BYTE PTR ss:0xcf5d616c
  41df7f:	fdiv   st(4),st
  41df81:	fisubr WORD PTR [eax+0x28]
  41df84:	sbb    al,0x4f
  41df86:	xchg   esp,eax
  41df87:	mov    WORD PTR [esi+0x54c262fc],es
  41df8d:	stos   DWORD PTR es:[edi],eax
  41df8e:	fcom   DWORD PTR [eax+0x262194e4]
  41df94:	cmp    DWORD PTR [eax],edx
  41df96:	mov    BYTE PTR [esi-0xa718677],dh
  41df9c:	sbb    al,0x13
  41df9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df9f:	call   0xe2ff:0x71dd646b
  41dfa6:	in     al,dx
  41dfa7:	add    DWORD PTR [edi+0x2acfa93f],ecx
  41dfad:	icebp  
  41dfae:	sbb    edx,esi
  41dfb0:	jmp    0x41dfc0
  41dfb2:	mov    esi,0xc182e2ca
  41dfb7:	pop    ss
  41dfb8:	add    eax,0xc2bedee
  41dfbd:	jl     0x41dff7
  41dfbf:	jae    0x41e032
  41dfc1:	mov    esp,0xab0e085d
  41dfc6:	and    cl,BYTE PTR [ecx+ecx*4]
  41dfc9:	lods   eax,DWORD PTR ds:[esi]
  41dfca:	mov    ecx,0xeb3c562d
  41dfcf:	fninit 
  41dfd1:	inc    edx
  41dfd2:	add    ebp,DWORD PTR [ebp+0x500b7a94]
  41dfd8:	in     eax,dx
  41dfd9:	ret    0xffb6
  41dfdc:	jmp    0xc9645906
  41dfe1:	cmp    ebp,DWORD PTR [edi+edi*4-0x7]
  41dfe5:	push   ds
  41dfe6:	enter  0xff38,0x74
  41dfea:	out    0x99,al
  41dfec:	mov    al,ds:0x9f3be1b6
  41dff1:	xor    esi,ecx
  41dff3:	push   esp
  41dff4:	lock aad 0x92
  41dff7:	jle    0x41dfce
  41dff9:	mov    ?,WORD PTR [ebp-0x2615b7ac]
  41dfff:	popf   
  41e000:	inc    ecx
  41e001:	add    bl,BYTE PTR [esi+0x38e4147e]
  41e007:	xchg   edx,eax
  41e008:	push   ebx
  41e009:	adc    al,BYTE PTR [ecx-0x1fbf6b0a]
  41e00f:	sub    DWORD PTR [edi-0x6f],esi
  41e012:	scas   al,BYTE PTR es:[edi]
  41e013:	retf   
  41e014:	dec    edx
  41e015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e016:	and    eax,DWORD PTR [edi+ecx*1+0x4e]
  41e01a:	and    eax,0x8726a247
  41e01f:	shl    al,cl
  41e021:	fmulp  st(3),st
  41e023:	xchg   edx,eax
  41e024:	mov    WORD PTR [edi+0xd],?
  41e027:	(bad)  
  41e028:	xor    bh,BYTE PTR [ebp+ebp*2+0x20c41641]
  41e02f:	mov    bl,0x65
  41e031:	cmp    esp,edx
  41e033:	outs   dx,BYTE PTR ds:[esi]
  41e034:	cmp    eax,0x476eebac
  41e039:	aaa    
  41e03a:	test   eax,0x1629059
  41e03f:	sub    eax,0xe4e4ae2f
  41e044:	push   edi
  41e045:	pusha  
  41e046:	adc    BYTE PTR [ebx+ecx*8+0x18],0xd6
  41e04b:	mov    edi,edi
  41e04d:	mov    eax,ds:0xa5c3d3d9
  41e052:	repnz pop edi
  41e054:	int    0xc2
  41e056:	xchg   ecx,eax
  41e057:	daa    
  41e058:	inc    eax
  41e059:	pop    edx
  41e05a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e05b:	mov    esp,0x1c5ef207
  41e060:	aam    0x9c
  41e062:	ins    DWORD PTR es:[edi],dx
  41e063:	pop    ss
  41e064:	sbb    eax,0xc137d2ea
  41e069:	jne    0x41e038
  41e06b:	dec    ebp
  41e06c:	cli    
  41e06d:	xlat   BYTE PTR ds:[ebx]
  41e06e:	js     0x41e05b
  41e070:	or     BYTE PTR [edi-0x41],ch
  41e073:	xchg   esi,eax
  41e074:	int3   
  41e075:	repnz xor al,BYTE PTR [ecx+edi*2-0x43d0df59]
  41e07d:	sbb    ebx,esp
  41e07f:	mov    ecx,DWORD PTR [eax]
  41e081:	pop    esp
  41e082:	inc    edi
  41e083:	xchg   ebx,eax
  41e084:	ret    0x2cae
  41e087:	je     0x41e081
  41e089:	lea    edi,[ebx+edi*2-0x7f6f28a6]
  41e090:	cmp    esp,DWORD PTR [esi]
  41e092:	xor    BYTE PTR [esi+0x35],0x2f
  41e096:	or     esi,DWORD PTR [ebx]
  41e098:	lea    ebx,[eax+0x3b69bc3d]
  41e09e:	(bad)  
  41e09f:	aam    0xdd
  41e0a1:	test   eax,0x154cba59
  41e0a6:	push   edx
  41e0a7:	lods   eax,DWORD PTR ds:[esi]
  41e0a8:	push   edi
  41e0a9:	push   0xaeaf3344
  41e0ae:	dec    edx
  41e0af:	jns    0x41e0c2
  41e0b1:	adc    DWORD PTR ds:0x793d8f3c,edx
  41e0b7:	fwait
  41e0b8:	mov    WORD PTR [eax+0x42],es
  41e0bb:	jmp    0x41e12f
  41e0bd:	push   edx
  41e0be:	mov    bh,0x53
  41e0c0:	mov    eax,0xb596e186
  41e0c5:	lahf   
  41e0c6:	repnz test edx,esp
  41e0c9:	data16 cmp al,0x28
  41e0cc:	mov    ds:0x179dcf5b,al
  41e0d1:	push   esi
  41e0d2:	push   ecx
  41e0d3:	(bad)  
  41e0d5:	neg    DWORD PTR [edx-0x80]
  41e0d8:	jmp    0x8510:0x8dfb7829
  41e0df:	rol    esp,0x3f
  41e0e2:	add    DWORD PTR [eax-0x24],edi
  41e0e5:	or     ecx,DWORD PTR ds:0x4bf88458
  41e0eb:	mov    edi,0xbaef0bf
  41e0f0:	imul   esp,DWORD PTR [edi-0x31],0x1278b8e9
  41e0f7:	and    ah,ah
  41e0f9:	jno    0x41e127
  41e0fb:	clc    
  41e0fc:	enter  0xcd03,0x87
  41e100:	test   BYTE PTR [ebp-0x51537d33],al
  41e106:	add    eax,0x4a200d28
  41e10b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e10c:	pop    ebp
  41e10d:	jle    0x41e15e
  41e10f:	test   esp,esp
  41e111:	push   ebp
  41e112:	jp     0x41e0b2
  41e114:	add    eax,0x31ebc0dd
  41e119:	rcr    ecx,cl
  41e11b:	jp     0x41e0b3
  41e11d:	scas   eax,DWORD PTR es:[edi]
  41e11e:	add    al,0x65
  41e120:	jl     0x41e10e
  41e122:	fimul  WORD PTR [ecx-0x1a4ebca8]
  41e128:	jl     0x41e144
  41e12a:	sbb    al,0xdf
  41e12c:	stc    
  41e12d:	mov    dh,0x81
  41e12f:	mov    bl,0xf7
  41e131:	push   esi
  41e132:	and    DWORD PTR [esi],esp
  41e134:	(bad)  
  41e135:	mov    WORD PTR [edi],gs
  41e137:	(bad)  
  41e138:	cli    
  41e139:	retf   0xf9b4
  41e13c:	mov    dl,0x9e
  41e13e:	xchg   ebx,eax
  41e13f:	lock push ebx
  41e141:	(bad)
  41e145:	cvtdq2ps xmm3,XMMWORD PTR [ecx-0x405bf244]
  41e14c:	mov    edi,0x4efffd71
  41e151:	mov    edi,0xe6fb7bd8
  41e156:	mov    eax,esi
  41e158:	add    esi,ecx
  41e15a:	or     BYTE PTR [eax],bh
  41e15c:	test   al,0xce
  41e15e:	or     ch,BYTE PTR [ecx+0x7ce076]
  41e164:	std    
  41e165:	(bad)  
  41e166:	js     0x41e153
  41e168:	mov    edx,0x3782419
  41e16d:	clc    
  41e16e:	add    eax,DWORD PTR [edx+0x7ffd4aa5]
  41e174:	pop    esi
  41e175:	daa    
  41e176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e177:	cmp    DWORD PTR [ecx+0x29],edi
  41e17a:	mov    esp,0x4c9e2043
  41e17f:	rcl    DWORD PTR [ecx],1
  41e181:	fld    QWORD PTR [eax+edx*8-0x5aec4466]
  41e188:	jbe    0x41e13b
  41e18a:	shl    ebp,1
  41e18c:	xchg   edi,eax
  41e18d:	push   0xa
  41e18f:	sbb    DWORD PTR [ebx+0x647a1fff],eax
  41e195:	and    ecx,DWORD PTR [esp]
  41e198:	arpl   WORD PTR [edi-0x1cf3554a],sp
  41e19e:	jle    0x41e201
  41e1a0:	out    0xf3,al
  41e1a2:	(bad)  
  41e1a3:	mov    edi,0xa7ab85ff
  41e1a8:	xchg   ecx,eax
  41e1a9:	pop    es
  41e1aa:	push   0xffffff9e
  41e1ac:	inc    eax
  41e1ad:	ins    BYTE PTR es:[edi],dx
  41e1ae:	adc    al,BYTE PTR [ecx-0x41c184a4]
  41e1b4:	fmul   QWORD PTR [esp+edx*4+0x745c324e]
  41e1bb:	imul   ecx,DWORD PTR [esi-0x2d],0xe8dd21d8
  41e1c2:	add    edi,eax
  41e1c4:	push   cs
  41e1c5:	je     0x41e22f
  41e1c7:	sbb    al,0x53
  41e1c9:	or     BYTE PTR [eax],ah
  41e1cb:	or     eax,0x468b866
  41e1d0:	pushf  
  41e1d1:	and    ah,BYTE PTR [ecx-0x414da32a]
  41e1d7:	jne    0x41e1e6
  41e1d9:	sbb    BYTE PTR [esi],cl
  41e1db:	or     ch,BYTE PTR [edx+ebx*1-0xd]
  41e1df:	sub    ah,bh
  41e1e1:	stos   BYTE PTR es:[edi],al
  41e1e2:	sar    DWORD PTR [edi+0x759f86bb],cl
  41e1e8:	lods   al,BYTE PTR ds:[esi]
  41e1e9:	pop    esi
  41e1ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1eb:	in     eax,0xc9
  41e1ed:	sbb    BYTE PTR ds:[ebx],ch
  41e1f0:	scas   al,BYTE PTR es:[edi]
  41e1f1:	dec    ecx
  41e1f2:	in     al,0x5b
  41e1f4:	shl    DWORD PTR [edx+0x47ed7002],1
  41e1fa:	fmul   DWORD PTR [edi]
  41e1fc:	xchg   ebp,eax
  41e1fd:	inc    ecx
  41e1fe:	mov    ebx,0x50ef65a6
  41e203:	adc    BYTE PTR [ecx+eax*1],al
  41e206:	mov    cs,ecx
  41e208:	cli    
  41e209:	cs jg  0x41e284
  41e20c:	and    edi,DWORD PTR [ebp+ebp*1-0xe]
  41e210:	pop    esi
  41e211:	mov    dl,0x31
  41e213:	fist   DWORD PTR [esi-0x64]
  41e216:	aas    
  41e217:	sbb    DWORD PTR ds:0x6b93008e,ecx
  41e21d:	into   
  41e21e:	aam    0xe7
  41e220:	dec    esp
  41e221:	enter  0xf963,0xd0
  41e225:	push   edx
  41e226:	das    
  41e227:	stc    
  41e228:	out    dx,al
  41e229:	add    eax,0xd1423e34
  41e22e:	into   
  41e22f:	arpl   WORD PTR [ebp+0xb],dx
  41e232:	lods   eax,DWORD PTR ds:[esi]
  41e233:	and    BYTE PTR [esp+edi*8],dl
  41e236:	call   0x1bdea503
  41e23b:	xlat   BYTE PTR ds:[ebx]
  41e23c:	retf   0x166f
  41e23f:	mov    ebx,0x6e847b7d
  41e244:	inc    ecx
  41e245:	add    esi,DWORD PTR [ebp-0x70]
  41e248:	dec    ecx
  41e249:	popf   
  41e24a:	push   esi
  41e24b:	sub    al,0xcd
  41e24d:	push   cs
  41e24e:	leave  
  41e24f:	aad    0x8f
  41e251:	mov    cl,0x5b
  41e253:	xchg   ebp,eax
  41e254:	mov    WORD PTR [eax],es
  41e256:	out    0xc0,eax
  41e258:	outs   dx,DWORD PTR ds:[esi]
  41e259:	(bad)  
  41e25a:	out    0xc4,eax
  41e25c:	loopne 0x41e20e
  41e25e:	arpl   dx,dx
  41e260:	mov    ch,0x78
  41e262:	sar    BYTE PTR [edi+0x40938305],0x34
  41e269:	mov    esp,0xfe54219
  41e26e:	imul   edx,DWORD PTR [edx+0x62],0x2c
  41e272:	gs js  0x41e24f
  41e275:	and    DWORD PTR [ecx+0x22105fe4],0x1c
  41e27c:	cmp    eax,0x3c2709e0
  41e281:	adc    eax,esp
  41e283:	stos   DWORD PTR es:[edi],eax
  41e284:	fst    DWORD PTR [esi+0x73a84252]
  41e28a:	mov    esi,0xc2f4fb4f
  41e28f:	jmp    0xb66c:0xaa5e2f97
  41e296:	mov    al,cs:0x3c17322
  41e29c:	jb     0x41e2d6
  41e29e:	xor    al,0xc4
  41e2a0:	std    
  41e2a1:	jmp    0x6669:0xf032b183
  41e2a8:	mov    al,ds:0xfe8c419d
  41e2ad:	gs mov eax,0x483db8c7
  41e2b3:	ret    
  41e2b4:	mov    esi,0xc0822b3a
  41e2b9:	test   BYTE PTR [edx],ah
  41e2bb:	adc    eax,0xb72d8cd4
  41e2c0:	test   eax,0x2bdc55c6
  41e2c5:	sahf   
  41e2c6:	xchg   edi,eax
  41e2c7:	in     eax,0xbd
  41e2c9:	xchg   ebx,eax
  41e2ca:	(bad)  [edx-0x49]
  41e2cd:	arpl   WORD PTR [esi],dx
  41e2cf:	sbb    edi,ebx
  41e2d1:	jecxz  0x41e34b
  41e2d3:	cs pop eax
  41e2d5:	jl     0x41e2cf
  41e2d7:	mov    dh,0xbb
  41e2d9:	jne    0x41e34a
  41e2db:	push   ds
  41e2dc:	jne    0x41e324
  41e2de:	rol    BYTE PTR [ecx],1
  41e2e0:	jg     0x41e2f6
  41e2e2:	or     eax,0xb9983cda
  41e2e7:	mov    ds:0xbf56fa7,al
  41e2ec:	dec    edi
  41e2ed:	mov    DWORD PTR [esi-0x4489b9b9],esp
  41e2f3:	jae    0x41e2c6
  41e2f5:	xchg   esp,eax
  41e2f6:	es and eax,0xb6a2a09b
  41e2fc:	dec    esi
  41e2fd:	(bad)  [edi]
  41e2ff:	(bad)  
  41e300:	mov    ch,0x9b
  41e302:	sbb    BYTE PTR [ebp+edi*1+0x2],dh
  41e306:	(bad)
  41e30a:	icebp  
  41e30b:	lods   al,BYTE PTR ds:[esi]
  41e30c:	popf   
  41e30d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e30e:	pop    eax
  41e30f:	add    eax,0xc2627142
  41e314:	ins    DWORD PTR es:[edi],dx
  41e315:	aas    
  41e316:	in     eax,dx
  41e317:	fdivr  QWORD PTR [ecx-0x3000c99d]
  41e31d:	dec    eax
  41e31e:	xor    BYTE PTR [edi-0x52],bl
  41e321:	retf   
  41e322:	add    dh,ch
  41e324:	cmp    al,0x83
  41e326:	rcr    BYTE PTR [ebp-0xd5a5cf8],cl
  41e32c:	dec    ebx
  41e32d:	mov    ss:0x41ea1945,al
  41e333:	fst    QWORD PTR [ebp+ebp*2+0x2cf08059]
  41e33a:	push   es
  41e33b:	mov    esp,0x4f171600
  41e340:	lahf   
  41e341:	and    ax,0x6769
  41e345:	sar    cl,cl
  41e347:	xor    BYTE PTR [edx],ah
  41e349:	lods   eax,DWORD PTR ds:[esi]
  41e34a:	inc    edi
  41e34b:	push   ecx
  41e34c:	loope  0x41e310
  41e34e:	in     eax,0x74
  41e350:	or     BYTE PTR [ebx],dl
  41e352:	(bad)  
  41e354:	cmp    al,0xfa
  41e356:	xor    DWORD PTR [eax+0x45],ebx
  41e359:	fbstp  TBYTE PTR [esi-0x48]
  41e35c:	loope  0x41e38c
  41e35e:	repz out 0x31,al
  41e361:	push   edx
  41e362:	pcmpgtw mm1,mm2
  41e365:	xor    ebx,DWORD PTR [esp+edi*2-0x587446f]
  41e36c:	add    edx,0xffffffee
  41e36f:	sbb    edx,DWORD PTR [eax]
  41e371:	dec    ebx
  41e372:	mov    edx,0xf8cac0e6
  41e377:	repz std 
  41e379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e37a:	pop    ebp
  41e37b:	scas   eax,DWORD PTR es:[edi]
  41e37c:	mov    esp,0x353dfada
  41e381:	sub    al,BYTE PTR [ebx+eax*2+0x2caac254]
  41e388:	push   edx
  41e389:	lahf   
  41e38a:	mov    bh,0xe2
  41e38c:	sar    BYTE PTR [ecx-0x23429e25],cl
  41e392:	es cwde 
  41e394:	and    bl,BYTE PTR [esi-0xc06fe62]
  41e39a:	inc    ebx
  41e39b:	push   0xfffffff1
  41e39d:	call   0x36587350
  41e3a2:	push   0x7fb6a3ba
  41e3a7:	pusha  
  41e3a8:	outs   dx,BYTE PTR ds:[esi]
  41e3a9:	or     BYTE PTR es:[ebx-0x65],cl
  41e3ad:	(bad)  
  41e3ae:	or     DWORD PTR [edi-0x1d6ec8fb],esp
  41e3b4:	ja     0x41e42c
  41e3b6:	jno    0x41e3a3
  41e3b8:	ret    
  41e3b9:	out    dx,al
  41e3ba:	mov    bh,0xaf
  41e3bc:	mov    bh,0x96
  41e3be:	hlt    
  41e3bf:	mov    ecx,0xe3da2bf2
  41e3c4:	pop    ebx
  41e3c5:	push   esi
  41e3c6:	mov    esi,0x52f963a8
  41e3cb:	fdivr  QWORD PTR [esp+ecx*8-0x2b]
  41e3cf:	inc    esi
  41e3d0:	bound  edx,QWORD PTR [ecx-0x45275fd4]
  41e3d6:	fsubrp st(6),st
  41e3d8:	rol    BYTE PTR [ecx+0x59843285],cl
  41e3de:	mov    eax,gs:0x5599fcc5
  41e3e4:	shl    BYTE PTR [eax+0x2fbcee96],1
  41e3ea:	mov    dh,0x24
  41e3ec:	xlat   BYTE PTR ds:[ebx]
  41e3ed:	adc    DWORD PTR [ebx-0x60331c55],0x1f8bc5c9
  41e3f7:	call   0x4e3d44bb
  41e3fc:	pop    ebp
  41e3fd:	sahf   
  41e3fe:	lahf   
  41e3ff:	adc    ebp,ebp
  41e401:	mov    bl,0xbd
  41e403:	sti    
  41e404:	cli    
  41e405:	ret    
  41e406:	scas   eax,DWORD PTR es:[edi]
  41e407:	aas    
  41e408:	push   0x4a
  41e40a:	test   al,0xae
  41e40c:	lea    edx,[edx+0x26]
  41e40f:	jecxz  0x41e3ed
  41e411:	icebp  
  41e412:	xchg   edi,eax
  41e413:	test   eax,0xcfb9b165
  41e418:	inc    esp
  41e419:	and    bl,0x17
  41e41c:	rol    DWORD PTR [edx-0x27c084cd],cl
  41e422:	idiv   BYTE PTR [eax+0x24dfde00]
  41e428:	push   ebx
  41e429:	mov    bl,BYTE PTR [ebx]
  41e42b:	or     dh,al
  41e42d:	scas   al,BYTE PTR es:[edi]
  41e42e:	(bad)  
  41e42f:	sub    cl,BYTE PTR [ebx]
  41e431:	and    DWORD PTR [edx-0x13bdca90],0x28fa2cc8
  41e43b:	popa   
  41e43c:	test   ah,0xbf
  41e43f:	rcr    BYTE PTR [ecx+0x3b],cl
  41e442:	mov    ebp,0xda341004
  41e447:	retf   0x954
  41e44a:	sub    BYTE PTR [edx-0x2f245f63],0x7b
  41e451:	jg     0x41e434
  41e453:	inc    edx
  41e454:	es addr16 push ss
  41e457:	retf   
  41e458:	dec    ebp
  41e459:	dec    ecx
  41e45a:	(bad)  
  41e45b:	repz in al,0x54
  41e45e:	xor    al,0xa9
  41e460:	jno    0x41e4a4
  41e462:	jne    0x41e4e2
  41e464:	inc    esp
  41e465:	mov    ?,ecx
  41e467:	loopne 0x41e443
  41e469:	jmp    0x1a49:0x5ec1a9bb
  41e470:	(bad)  [ebx-0x1d]
  41e473:	sub    eax,0x56c29d91
  41e478:	fnstenv [ebx+0x22]
  41e47b:	add    al,0x3f
  41e47d:	inc    eax
  41e47e:	xlat   BYTE PTR ds:[ebx]
  41e47f:	jmp    0x41e4da
  41e481:	mov    dh,BYTE PTR [eax-0x648a7a1b]
  41e487:	inc    edx
  41e488:	stos   BYTE PTR es:[edi],al
  41e489:	daa    
  41e48a:	int    0xdc
  41e48c:	cwde   
  41e48d:	fwait
  41e48e:	gs daa 
  41e490:	loopne 0x41e4fc
  41e492:	test   al,0xb
  41e494:	xor    eax,0x48a5b45f
  41e499:	les    ecx,FWORD PTR [eax]
  41e49b:	fwait
  41e49c:	inc    esi
  41e49d:	jmp    0x5e037b9c
  41e4a2:	scas   eax,DWORD PTR es:[edi]
  41e4a3:	mov    ebx,0x4c7efb29
  41e4a8:	pushf  
  41e4a9:	sbb    al,0x53
  41e4ab:	div    BYTE PTR [edx-0x64c6fd7d]
  41e4b1:	outs   dx,DWORD PTR ds:[esi]
  41e4b2:	ret    0x208c
  41e4b5:	das    
  41e4b6:	inc    edx
  41e4b7:	out    dx,al
  41e4b8:	mov    cl,0xf5
  41e4ba:	or     dh,0xe7
  41e4bd:	sub    eax,0xddc664d8
  41e4c2:	push   es
  41e4c3:	dec    ebp
  41e4c4:	xchg   ebx,eax
  41e4c5:	sub    ah,BYTE PTR ss:[ebx-0xc6de285]
  41e4cc:	add    dh,BYTE PTR [esp+ebx*1+0x2ee3d0f8]
  41e4d3:	push   0x31
  41e4d5:	(bad)  
  41e4d6:	mov    ecx,0x39301475
  41e4db:	jno    0x41e499
  41e4dd:	rol    DWORD PTR [esp+eax*2],1
  41e4e0:	test   bh,0xa6
  41e4e3:	jnp    0x41e4aa
  41e4e5:	adc    eax,0x89603a74
  41e4ea:	inc    edx
  41e4eb:	adc    BYTE PTR [ecx-0x613c3960],al
  41e4f1:	or     bh,BYTE PTR [eax+edi*1]
  41e4f4:	and    DWORD PTR [ecx+0x622cdc1b],edx
  41e4fa:	jp     0x41e4a5
  41e4fc:	or     bl,BYTE PTR [ebx-0x4bbcef3c]
  41e502:	mov    eax,0xfae30cef
  41e507:	dec    ebp
  41e508:	repz mov al,0x2e
  41e50b:	jle    0x41e49a
  41e50d:	(bad)  
  41e50e:	leave  
  41e50f:	outs   dx,BYTE PTR ds:[esi]
  41e510:	sub    cl,BYTE PTR [edx]
  41e512:	xor    eax,0x68f173ce
  41e517:	scas   al,BYTE PTR es:[edi]
  41e518:	push   ebx
  41e519:	xchg   ecx,eax
  41e51a:	push   ss
  41e51b:	cmp    DWORD PTR [ebp+0x6d],ebp
  41e51e:	repz loopne 0x41e4a1
  41e521:	daa    
  41e522:	inc    esi
  41e523:	mov    dl,0x3b
  41e525:	add    dh,BYTE PTR [esi-0x77]
  41e528:	lods   al,BYTE PTR ds:[esi]
  41e529:	fld    DWORD PTR [ebx+0x7abc4678]
  41e52f:	jnp    0x41e4fe
  41e531:	add    DWORD PTR [eax-0x48cb7281],ebx
  41e537:	inc    ebp
  41e538:	loop   0x41e5b5
  41e53a:	dec    edx
  41e53b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e53c:	xchg   ebp,eax
  41e53d:	or     al,0x28
  41e53f:	and    BYTE PTR [esi-0x30],cl
  41e542:	dec    ecx
  41e543:	sbb    eax,0x1da9dc96
  41e548:	or     BYTE PTR [ebx*8-0x77b4cbbf],dl
  41e54f:	clc    
  41e550:	dec    DWORD PTR [edx+0x4d189d96]
  41e556:	std    
  41e557:	cmp    BYTE PTR [edx-0x29],0x46
  41e55b:	sub    eax,0xbd21d2e5
  41e560:	xchg   edi,eax
  41e561:	mov    edx,DWORD PTR [edx-0x48a1ff2d]
  41e567:	mov    ecx,ebp
  41e569:	adc    al,0x8f
  41e56b:	out    dx,al
  41e56c:	aam    0x98
  41e56e:	mov    ch,dl
  41e570:	dec    edx
  41e571:	and    eax,0x681f1fd2
  41e576:	pop    eax
  41e577:	mov    al,0x63
  41e579:	ss mov edi,0xbfd948eb
  41e57f:	mov    DWORD PTR [ecx+ebx*2-0x25],esp
  41e583:	adc    dh,BYTE PTR cs:[edi+0x2a336754]
  41e58a:	imul   esp,DWORD PTR [ebp+0x707c7095],0x288fe852
  41e594:	into   
  41e595:	adc    cl,BYTE PTR [ebp-0x37916967]
  41e59b:	xchg   ebx,eax
  41e59c:	push   es
  41e59d:	jecxz  0x41e546
  41e59f:	test   cl,al
  41e5a1:	xchg   ebp,eax
  41e5a2:	xor    al,0x91
  41e5a4:	imul   ebp,DWORD PTR [edx],0xab2549d2
  41e5aa:	pop    ebp
  41e5ab:	(bad)  
  41e5ac:	cld    
  41e5ad:	call   0x1627ca73
  41e5b2:	retf   0xc8ca
  41e5b5:	mov    ecx,0xa41bd656
  41e5ba:	mov    bh,0x87
  41e5bc:	or     BYTE PTR ds:0xde673e40,0x69
  41e5c3:	xor    DWORD PTR [eax+ecx*1-0x76587ffd],0xd7ef2ae7
  41e5ce:	lock pop ds
  41e5d0:	xor    BYTE PTR [edx+0x77],ah
  41e5d3:	sub    al,0xd3
  41e5d5:	xor    DWORD PTR [edi-0x2c],0xc440d00
  41e5dc:	loopne 0x41e56c
  41e5de:	sahf   
  41e5df:	inc    edi
  41e5e0:	and    bl,BYTE PTR [edx-0x413bc2a1]
  41e5e6:	xor    ch,BYTE PTR [ebp+0x4096e8e]
  41e5ec:	sub    al,0xf4
  41e5ee:	cmp    bh,BYTE PTR [edx]
  41e5f0:	mov    esp,cs
  41e5f2:	add    edx,esp
  41e5f4:	fxch   st(6)
  41e5f6:	jecxz  0x41e65b
  41e5f8:	arpl   WORD PTR [edx],bx
  41e5fa:	test   al,0xa9
  41e5fc:	ins    BYTE PTR es:[edi],dx
  41e5fd:	popf   
  41e5fe:	je     0x41e60b
  41e600:	cs and al,0x14
  41e603:	lea    eax,[eax]
  41e605:	mov    esp,0x75e0efe0
  41e60a:	(bad)  
  41e60b:	xchg   ebx,eax
  41e60c:	xchg   edi,eax
  41e60d:	mov    ecx,0x16f4e089
  41e612:	(bad)  
  41e613:	rcl    al,1
  41e615:	ins    DWORD PTR es:[edi],dx
  41e616:	inc    edx
  41e617:	loop   0x41e5bd
  41e619:	(bad)  
  41e61a:	dec    esi
  41e61b:	sbb    BYTE PTR [edx],al
  41e61d:	adc    eax,0xe2662993
  41e622:	(bad)  
  41e624:	out    dx,eax
  41e625:	fwait
  41e626:	mov    BYTE PTR [ecx-0x3e],bl
  41e629:	(bad)  
  41e62a:	aam    0x7d
  41e62c:	test   BYTE PTR [esi-0x59d39825],bl
  41e632:	test   BYTE PTR [edi-0x61249061],al
  41e638:	repz aas 
  41e63a:	or     cl,BYTE PTR [ebx]
  41e63c:	mov    ch,0x8b
  41e63e:	cmp    DWORD PTR [eax+0xc],ebx
  41e641:	fnstenv [esi+0x71e9c916]
  41e647:	(bad)  
  41e648:	or     bl,BYTE PTR [ebx-0x34279332]
  41e64e:	lods   eax,DWORD PTR ds:[esi]
  41e64f:	mov    dl,0x7f
  41e651:	xor    ebp,esi
  41e653:	mov    ds:0xc7ac0432,al
  41e658:	ret    0x9381
  41e65b:	push   ebx
  41e65c:	les    esp,FWORD PTR [esi+0x19]
  41e65f:	or     BYTE PTR [ecx+0x55],dl
  41e662:	popf   
  41e663:	test   BYTE PTR [esi+0x7b],dl
  41e666:	sahf   
  41e667:	dec    ebp
  41e668:	lods   al,BYTE PTR ds:[esi]
  41e669:	add    DWORD PTR [esi-0x3fa74f42],edx
  41e66f:	jae    0x41e68e
  41e671:	and    edi,ebx
  41e673:	xchg   ebx,eax
  41e674:	sub    eax,0xfecde0bf
  41e679:	mov    cl,0x72
  41e67b:	jbe    0x41e683
  41e67d:	add    DWORD PTR [ebp-0x61c0611],0xa3e8b485
  41e687:	inc    ebx
  41e688:	loop   0x41e659
  41e68a:	push   eax
  41e68b:	inc    ebp
  41e68c:	push   edi
  41e68d:	in     eax,dx
  41e68e:	mov    eax,0x1d192ea3
  41e693:	test   eax,0xb416ca78
  41e698:	ret    
  41e699:	pop    ecx
  41e69a:	out    dx,al
  41e69b:	int    0x66
  41e69d:	xor    dl,BYTE PTR [ebx-0x6c]
  41e6a0:	dec    edi
  41e6a1:	and    al,0xe1
  41e6a3:	push   edi
  41e6a4:	icebp  
  41e6a5:	(bad)  
  41e6a6:	sar    BYTE PTR [edx-0x55],0xbf
  41e6aa:	xchg   DWORD PTR [edi],ecx
  41e6ac:	mov    ebx,0xaabbde88
  41e6b1:	xchg   edx,eax
  41e6b2:	sub    DWORD PTR ds:0x97c5e95a,edi
  41e6b8:	ja     0x41e6f9
  41e6ba:	mov    DWORD PTR [edi],ebp
  41e6bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6bd:	jo     0x41e6b0
  41e6bf:	add    DWORD PTR [ecx+0x6b11ba52],esi
  41e6c5:	dec    esi
  41e6c6:	(bad)  
  41e6c7:	mov    dl,0xaf
  41e6c9:	add    ebx,edi
  41e6cb:	pop    es
  41e6cc:	mov    ds:0x5b86d77d,eax
  41e6d1:	int3   
  41e6d2:	sub    DWORD PTR [eax],ebx
  41e6d4:	push   esi
  41e6d5:	mov    ebx,0x390192b7
  41e6da:	daa    
  41e6db:	pop    ecx
  41e6dc:	mov    ds,WORD PTR [ecx+0x2e9c643c]
  41e6e2:	stc    
  41e6e3:	loop   0x41e726
  41e6e5:	addr16 inc ebx
  41e6e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6e8:	push   cs
  41e6e9:	mov    ch,0xe3
  41e6eb:	mov    ch,0x3
  41e6ed:	mov    ds:0x7f559993,al
  41e6f2:	and    BYTE PTR [eax+ecx*4+0x70],0x30
  41e6f7:	push   es
  41e6f8:	outs   dx,DWORD PTR ds:[esi]
  41e6f9:	push   edi
  41e6fa:	cs fwait
  41e6fc:	out    dx,eax
  41e6fd:	push   0xffffffc8
  41e6ff:	mov    DWORD PTR cs:[ecx],eax
  41e702:	jecxz  0x41e73a
  41e704:	jae    0x41e744
  41e706:	ins    DWORD PTR es:[edi],dx
  41e707:	add    DWORD PTR [ecx+ebp*2-0x50],esp
  41e70b:	(bad)  [ebx]
  41e70d:	inc    ebp
  41e70e:	pop    eax
  41e70f:	jg     0x41e6fa
  41e711:	icebp  
  41e712:	popf   
  41e713:	sub    dh,BYTE PTR [esi-0x5e8d62dc]
  41e719:	(bad)  
  41e71a:	push   ds
  41e71b:	retf   
  41e71c:	push   ecx
  41e71d:	pop    ds
  41e71e:	stc    
  41e71f:	scas   al,BYTE PTR es:[edi]
  41e720:	adc    al,0xab
  41e722:	popf   
  41e723:	pop    es
  41e724:	dec    esp
  41e725:	jnp    0x41e721
  41e727:	in     al,0x5f
  41e729:	cld    
  41e72a:	arpl   WORD PTR [edi+0x22b8a66c],di
  41e730:	movhps QWORD PTR [eax+esi*4+0x5a08f64f],xmm1
  41e738:	icebp  
  41e739:	nop
  41e73a:	mov    edx,DWORD PTR [esi-0x6e8db8e5]
  41e740:	dec    esp
  41e741:	mov    bh,0xad
  41e743:	xor    BYTE PTR [ecx],ah
  41e745:	test   al,0x81
  41e747:	pop    ds
  41e748:	imul   BYTE PTR [ebx]
  41e74a:	adc    eax,0x2745f73
  41e74f:	in     al,0xe1
  41e751:	xchg   esi,eax
  41e752:	retf   0x993
  41e755:	repz ss cmp eax,0xd509c825
  41e75c:	outs   dx,DWORD PTR ds:[esi]
  41e75d:	retf   0x85cb
  41e760:	icebp  
  41e761:	dec    eax
  41e762:	add    DWORD PTR [ebx-0x47],eax
  41e765:	jmp    0x41e722
  41e767:	or     bh,al
  41e769:	cmp    eax,0xf1fbfaa7
  41e76e:	sbb    BYTE PTR [edi-0x6e],cl
  41e771:	xchg   BYTE PTR gs:[eax],al
  41e774:	cmp    ecx,0xffffff82
  41e777:	xchg   esp,eax
  41e778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e779:	push   esp
  41e77a:	cs (bad) 
  41e77c:	rcl    DWORD PTR [eax],1
  41e77e:	ins    BYTE PTR es:[edi],dx
  41e77f:	scas   al,BYTE PTR es:[edi]
  41e780:	test   DWORD PTR [esi],ebp
  41e782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e783:	or     DWORD PTR [ebx],ecx
  41e785:	pop    ds
  41e786:	and    ebx,DWORD PTR [ecx-0xd]
  41e789:	loope  0x41e7db
  41e78b:	sbb    dh,BYTE PTR [edi+0x11]
  41e78e:	aas    
  41e78f:	hlt    
  41e790:	add    bh,BYTE PTR [eax-0x69d40580]
  41e796:	sbb    dh,ch
  41e798:	test   eax,0x22bdc24b
  41e79d:	out    0xe,eax
  41e79f:	xlat   BYTE PTR ds:[ebx]
  41e7a0:	call   0x1acf:0xe15a361d
  41e7a7:	sbb    BYTE PTR [esi+0x51bfdbbe],dl
  41e7ad:	inc    esi
  41e7ae:	popa   
  41e7af:	and    edx,DWORD PTR [eax-0x65884c6e]
  41e7b5:	and    BYTE PTR [edi-0x18],dl
  41e7b8:	inc    esp
  41e7b9:	scas   al,BYTE PTR es:[edi]
  41e7ba:	or     BYTE PTR ds:0xaaeab3,ah
  41e7c0:	pop    ds
  41e7c1:	push   0xc088ffe5
  41e7c6:	or     al,cl
  41e7c8:	pop    ss
  41e7c9:	mov    BYTE PTR [ecx+eax*8+0x50],0xfc
  41e7ce:	add    bh,dl
  41e7d0:	enter  0x5d49,0x5a
  41e7d4:	(bad)  
  41e7d5:	and    ebp,DWORD PTR [edx-0x23845075]
  41e7db:	fisttp QWORD PTR [ebp+0x14]
  41e7de:	int    0xc5
  41e7e0:	out    dx,eax
  41e7e1:	add    dh,BYTE PTR [ecx+0x44]
  41e7e4:	xor    eax,0xa400b6f3
  41e7e9:	loopne 0x41e82b
  41e7eb:	ins    BYTE PTR es:[edi],dx
  41e7ec:	cmp    DWORD PTR [edx+ebp*1-0x4c387353],esi
  41e7f3:	add    DWORD PTR [eax+0x3283ecb7],ebx
  41e7f9:	leave  
  41e7fa:	and    eax,0x786cf73f
  41e7ff:	test   BYTE PTR [eax],0xe0
  41e802:	pop    ds
  41e803:	loope  0x41e7bd
  41e805:	push   0x88a7c1de
  41e80a:	and    bl,BYTE PTR [edx-0x20b4ff88]
  41e810:	rcr    DWORD PTR [edi-0x39a1c36e],cl
  41e816:	jge    0x41e7c6
  41e818:	push   ebp
  41e819:	fisubr DWORD PTR [esi+ecx*4-0x47]
  41e81d:	retf   
  41e81e:	jae    0x41e80f
  41e820:	dec    edx
  41e821:	ret    
  41e822:	sbb    esi,DWORD PTR [esp+eiz*2-0x4497565c]
  41e829:	test   BYTE PTR [esi],dl
  41e82b:	je     0x41e888
  41e82d:	in     al,dx
  41e82e:	inc    edi
  41e82f:	xlat   BYTE PTR ds:[ebx]
  41e830:	add    eax,0xd19024a2
  41e835:	into   
  41e836:	test   al,0x9d
  41e838:	inc    edi
  41e839:	pop    esp
  41e83a:	sbb    al,0xa6
  41e83c:	adc    al,bh
  41e83e:	iret   
  41e83f:	xor    al,0xfe
  41e841:	call   DWORD PTR [esp+ebx*4-0x228d2dd3]
  41e848:	enter  0xedd5,0x25
  41e84c:	sbb    DWORD PTR [ecx],ecx
  41e84e:	jecxz  0x41e8bd
  41e850:	dec    edx
  41e851:	jl     0x41e8b4
  41e853:	jmp    0x41e853
  41e855:	fistp  QWORD PTR [ebp+0xd]
  41e858:	imul   esp,DWORD PTR ds:[ebx-0x638c8bc9],0x68
  41e860:	fist   WORD PTR [ecx]
  41e862:	mov    al,ds:0x5c1731e5
  41e867:	sbb    DWORD PTR [ebx-0x71],esp
  41e86a:	add    BYTE PTR [esi+0x2998813e],ch
  41e870:	fst    DWORD PTR [ebp-0x76abb92]
  41e876:	les    esp,FWORD PTR [eax-0x61495860]
  41e87c:	cmp    eax,0xf986a3b7
  41e881:	sbb    BYTE PTR [edx-0x5c],bh
  41e884:	xchg   edx,eax
  41e885:	dec    edx
  41e886:	cmp    DWORD PTR [ecx],esi
  41e888:	adc    eax,0xe9cfd909
  41e88d:	cmp    DWORD PTR [ecx],esp
  41e88f:	add    eax,0xa6dea5ff
  41e894:	out    dx,al
  41e895:	mov    ds:0xcc388f12,eax
  41e89a:	or     al,0x13
  41e89c:	dec    esp
  41e89d:	pop    eax
  41e89e:	stc    
  41e89f:	push   ss
  41e8a0:	fistp  DWORD PTR [edi+ebx*8+0x5f]
  41e8a4:	push   ss
  41e8a5:	dec    esi
  41e8a6:	dec    ecx
  41e8a7:	out    dx,al
  41e8a8:	mov    ah,0x33
  41e8aa:	push   dx
  41e8ac:	add    ebx,DWORD PTR [ebx+eiz*2-0x20]
  41e8b0:	xor    ah,ch
  41e8b2:	(bad)  
  41e8b3:	in     eax,dx
  41e8b4:	fwait
  41e8b5:	ret    
  41e8b6:	mov    eax,0xd8cc0efb
  41e8bb:	pop    DWORD PTR [eax+eiz*1]
  41e8be:	push   es
  41e8bf:	inc    edi
  41e8c0:	(bad)  
  41e8c2:	jl     0x41e84e
  41e8c4:	out    dx,eax
  41e8c5:	xchg   bl,bl
  41e8c7:	outs   dx,DWORD PTR ds:[esi]
  41e8c8:	mov    bl,0x39
  41e8ca:	fs dec ebp
  41e8cc:	pop    esp
  41e8cd:	cs push 0xae5841a
  41e8d3:	retf   0x31d3
  41e8d6:	jecxz  0x41e94c
  41e8d8:	fistp  QWORD PTR [edi]
  41e8da:	push   esp
  41e8db:	ja     0x41e85d
  41e8dd:	xlat   BYTE PTR ds:[ebx]
  41e8de:	add    DWORD PTR [edx-0x1b],ebp
  41e8e1:	xor    bl,BYTE PTR [ebp+0x68e86a51]
  41e8e7:	add    eax,0x8cbdac7d
  41e8ec:	call   0xc2359d8a
  41e8f1:	into   
  41e8f2:	outs   dx,BYTE PTR ds:[esi]
  41e8f3:	push   esi
  41e8f4:	mov    esp,0x3050d3a
  41e8f9:	rcr    DWORD PTR [eax-0x66b447ef],1
  41e8ff:	clc    
  41e900:	dec    ebp
  41e901:	jl     0x41e938
  41e903:	mov    ds:0x8475ab95,eax
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	rcr    DWORD PTR [ebp-0x68bcfbd4],1
  41e90f:	retf   0xed4
  41e912:	repnz (bad) 
  41e914:	mov    esi,0xb655134a
  41e919:	mov    edx,0x1873f2c2
  41e91e:	jmp    0x41e991
  41e920:	cmp    edi,DWORD PTR ds:0x8bdd0f7e
  41e926:	es inc esp
  41e928:	fisttp WORD PTR [edi-0x5c]
  41e92b:	pop    ss
  41e92c:	push   edx
  41e92d:	dec    ecx
  41e92e:	icebp  
  41e92f:	and    DWORD PTR [eax],ebx
  41e931:	ret    
  41e932:	mov    ch,0xe7
  41e934:	mov    ebp,0x7fc3086b
  41e939:	(bad)  
  41e93a:	jo     0x41e942
  41e93c:	in     eax,dx
  41e93d:	inc    ebp
  41e93e:	cmp    DWORD PTR [ebx],ebp
  41e940:	add    ecx,DWORD PTR [edi]
  41e942:	add    DWORD PTR [esi],edi
  41e944:	xchg   esi,eax
  41e945:	adc    dh,cl
  41e947:	jecxz  0x41e9ba
  41e949:	daa    
  41e94a:	jne    0x41e91d
  41e94c:	xchg   edi,eax
  41e94d:	lods   al,BYTE PTR ds:[esi]
  41e94e:	mov    WORD PTR [eax-0x5c],cs
  41e951:	gs repnz iret 
  41e954:	icebp  
  41e955:	dec    esp
  41e956:	scas   al,BYTE PTR es:[edi]
  41e957:	xor    sp,WORD PTR [ecx+0x29]
  41e95b:	or     ah,ch
  41e95d:	and    al,0xbc
  41e95f:	pop    esp
  41e960:	or     DWORD PTR [esi-0x4b68acd3],ebx
  41e966:	push   ebp
  41e967:	scas   eax,DWORD PTR es:[edi]
  41e968:	xchg   edi,eax
  41e969:	fwait
  41e96a:	test   al,0x4f
  41e96c:	test   edi,0xb63e5aa5
  41e972:	mov    al,0xea
  41e974:	enter  0x4d9c,0xde
  41e978:	jbe    0x41e941
  41e97a:	push   edx
  41e97b:	sbb    BYTE PTR [ebp+0x1],dl
  41e97e:	xchg   ebx,eax
  41e97f:	push   ecx
  41e980:	or     ecx,edi
  41e982:	(bad)  
  41e983:	inc    ecx
  41e984:	push   ebx
  41e985:	arpl   ax,di
  41e987:	pop    ebx
  41e988:	call   0x5cf659c7
  41e98d:	adc    eax,0x22313f63
  41e992:	bound  esi,QWORD PTR [esi+ebx*4]
  41e995:	popa   
  41e996:	aas    
  41e997:	xor    DWORD PTR [edi],edx
  41e999:	mov    dl,0xa9
  41e99b:	mov    dl,0x29
  41e99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e99e:	es and al,0x8d
  41e9a1:	out    0x73,eax
  41e9a3:	xchg   edi,eax
  41e9a4:	push   ebp
  41e9a5:	jo     0x41e992
  41e9a7:	xor    dh,dh
  41e9a9:	jb     0x41e9a2
  41e9ab:	push   ecx
  41e9ac:	call   0x4c381c18
  41e9b1:	aas    
  41e9b2:	iret   
  41e9b3:	xor    DWORD PTR [edx+edx*4],edx
  41e9b6:	(bad)  
  41e9b7:	jnp    0x41ea05
  41e9b9:	mov    bl,0x84
  41e9bb:	sbb    eax,0x8ab94b50
  41e9c0:	(bad)  
  41e9c1:	dec    edi
  41e9c2:	dec    edx
  41e9c3:	and    DWORD PTR [ebx],edi
  41e9c5:	xor    eax,0x9a20c58
  41e9ca:	iret   
  41e9cb:	cmc    
  41e9cc:	lea    edi,[ecx+0x7f]
  41e9cf:	add    DWORD PTR [ecx],eax
  41e9d1:	and    eax,0xa655cbdf
  41e9d6:	fnstsw WORD PTR [edi-0x24]
  41e9d9:	scas   eax,DWORD PTR es:[edi]
  41e9da:	mov    dh,0xe5
  41e9dc:	cmp    BYTE PTR [esi+eiz*1-0x6a],ah
  41e9e0:	cmp    al,BYTE PTR [edx]
  41e9e2:	push   ebp
  41e9e3:	dec    edi
  41e9e4:	xchg   ebx,eax
  41e9e5:	pop    esi
  41e9e6:	stos   BYTE PTR es:[edi],al
  41e9e7:	int3   
  41e9e8:	dec    esi
  41e9e9:	pushf  
  41e9ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9eb:	into   
  41e9ec:	test   al,0x3
  41e9ee:	fld    TBYTE PTR [edx-0x1742c14b]
  41e9f4:	call   0x2de239fa
  41e9f9:	cs fcomp st(1)
  41e9fc:	repz and al,0xc2
  41e9ff:	adc    ah,BYTE PTR [ecx]
  41ea01:	xchg   ebp,eax
  41ea02:	(bad)  
  41ea03:	dec    edx
  41ea04:	out    0xd1,al
  41ea06:	mov    DWORD PTR [eax+eiz*8-0x2c],ecx
  41ea0a:	ret    
  41ea0b:	stos   DWORD PTR es:[edi],eax
  41ea0c:	jno    0x41e992
  41ea0e:	jno    0x41ea04
  41ea10:	sbb    dh,BYTE PTR [ecx+0x56]
  41ea13:	or     ebx,edi
  41ea15:	in     eax,dx
  41ea16:	pop    edi
  41ea17:	cdq    
  41ea18:	add    al,BYTE PTR [eax]
  41ea1a:	sbb    DWORD PTR [edx],0xfe39c4b6
  41ea20:	bnd js 0x41ea34
  41ea23:	push   edi
  41ea24:	jo     0x41e9d5
  41ea26:	aaa    
  41ea27:	mov    eax,0x301a210d
  41ea2c:	push   0x0
  41ea2e:	fucomi st,st(4)
  41ea30:	cld    
  41ea31:	pop    ds
  41ea32:	sub    al,0xb9
  41ea34:	imul   ebp,DWORD PTR [esi+ecx*1-0x12],0xb7dbd1a5
  41ea3c:	sub    eax,0x3e2904ab
  41ea41:	jmp    0x4dfc333b
  41ea46:	or     eax,0xd9125661
  41ea4b:	mov    DWORD PTR [ebx-0x73],0x15e0f112
  41ea52:	aad    0x10
  41ea54:	rcr    eax,cl
  41ea56:	nop
  41ea57:	cmp    al,0x7d
  41ea59:	movhps QWORD PTR [ebx],xmm0
  41ea5c:	adc    eax,DWORD PTR [edx-0x677ccc70]
  41ea62:	mov    ecx,0xfd4d1f01
  41ea67:	inc    esp
  41ea68:	shl    esp,0xba
  41ea6b:	push   eax
  41ea6c:	adc    ebp,ebp
  41ea6e:	mov    ds:0x16ffdd7e,eax
  41ea73:	pop    edi
  41ea74:	mov    gs,WORD PTR [esi-0x771853c4]
  41ea7a:	adc    al,0x7d
  41ea7c:	push   es
  41ea7d:	jno    0x41eafc
  41ea7f:	inc    eax
  41ea80:	fistp  QWORD PTR [ecx-0x57]
  41ea83:	jl     0x41ea97
  41ea85:	les    ebp,FWORD PTR [ebp+0x31]
  41ea88:	push   0x1a
  41ea8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea8b:	shl    DWORD PTR [edi+0x55],1
  41ea8e:	repnz in eax,dx
  41ea90:	ret    0x15d1
  41ea93:	hlt    
  41ea94:	adc    esp,DWORD PTR [ebp-0x5a5d23ac]
  41ea9a:	push   ecx
  41ea9b:	popa   
  41ea9c:	stos   BYTE PTR es:[edi],al
  41ea9d:	push   ds
  41ea9e:	int    0xe6
  41eaa0:	lock or DWORD PTR [eax+0x5c4b7372],edi
  41eaa7:	js     0x41eb0b
  41eaa9:	fsubr  QWORD PTR [ebx+ebx*8]
  41eaac:	(bad)  [eax-0x2b]
  41eaaf:	mov    dl,BYTE PTR [ecx]
  41eab1:	jno    0x41eb00
  41eab3:	sub    BYTE PTR [ebp+0x13],bl
  41eab6:	or     edx,eax
  41eab8:	bswap  ebx
  41eaba:	test   eax,0x51c6865e
  41eabf:	add    BYTE PTR [edi+0x478283d9],bl
  41eac5:	scas   al,BYTE PTR es:[edi]
  41eac6:	call   0xfe21e40b
  41eacb:	in     eax,0xb0
  41eacd:	std    
  41eace:	(bad)  [ebx+0x76]
  41ead1:	(bad)  
  41ead2:	aas    
  41ead3:	pop    ebx
  41ead4:	push   esi
  41ead5:	xchg   edx,eax
  41ead6:	scas   eax,DWORD PTR es:[edi]
  41ead7:	mov    bh,ch
  41ead9:	cdq    
  41eada:	test   BYTE PTR [ecx-0x25],0x34
  41eade:	outs   dx,BYTE PTR ds:[esi]
  41eadf:	pop    ebx
  41eae0:	pusha  
  41eae1:	inc    edx
  41eae2:	leave  
  41eae3:	mov    dl,BYTE PTR [eax+0x1e]
  41eae6:	jge    0x41ea8e
  41eae8:	retf   0xbd89
  41eaeb:	ret    
  41eaec:	hlt    
  41eaed:	fidivr DWORD PTR [ebp-0x7666eecf]
  41eaf3:	test   BYTE PTR [ebx+0x7d65b0b4],0x15
  41eafa:	xchg   DWORD PTR cs:[eax],edx
  41eafd:	outs   dx,BYTE PTR ds:[esi]
  41eafe:	aas    
  41eaff:	xlat   BYTE PTR ds:[ebx]
  41eb00:	jb     0x41eae4
  41eb02:	push   esp
  41eb03:	jo     0x41eb66
  41eb05:	push   ebx
  41eb06:	test   al,0x47
  41eb08:	xor    eax,0xf42ba5aa
  41eb0d:	xchg   DWORD PTR [ebx-0x3281ac8f],esp
  41eb13:	nop
  41eb14:	ds dec eax
  41eb16:	sar    BYTE PTR [ecx],0x42
  41eb19:	(bad)  
  41eb1a:	mov    al,ds:0x277467f6
  41eb1f:	dec    esi
  41eb20:	inc    ebp
  41eb21:	mov    esi,0xc402a14d
  41eb26:	xor    DWORD PTR [ebx-0x7a714070],ebp
  41eb2c:	pop    DWORD PTR [ebp+ebx*1+0x115ccdb0]
  41eb33:	retf   0x7477
  41eb36:	mov    ecx,0x3f6a40e3
  41eb3b:	stos   BYTE PTR es:[edi],al
  41eb3c:	xchg   ecx,eax
  41eb3d:	xor    al,0x2d
  41eb3f:	and    eax,0x46af6e13
  41eb44:	into   
  41eb45:	mov    esi,0x4ab123b9
  41eb4a:	dec    edx
  41eb4b:	jo     0x41eb61
  41eb4d:	call   0xa85:0x6d992be6
  41eb54:	loope  0x41eb58
  41eb56:	sub    BYTE PTR [edi],ch
  41eb58:	mov    ds:0xdc140967,eax
  41eb5d:	lods   eax,DWORD PTR ds:[esi]
  41eb5e:	xor    eax,0x56daa451
  41eb63:	lds    ecx,FWORD PTR [ecx]
  41eb65:	iret   
  41eb66:	pop    eax
  41eb67:	retf   0x67dc
  41eb6a:	and    ebx,esp
  41eb6c:	adc    BYTE PTR ds:0x6c94fd5a,al
  41eb72:	mov    al,ds:0xa2213a54
  41eb77:	sbb    bh,al
  41eb79:	jmp    0xc178:0xada855c5
  41eb80:	inc    edi
  41eb81:	jle    0x41ebda
  41eb83:	and    BYTE PTR [esi+ecx*1-0xcd46c39],dh
  41eb8a:	test   al,0x4e
  41eb8c:	lods   eax,DWORD PTR ds:[esi]
  41eb8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb8e:	lds    eax,FWORD PTR [ebp-0x30]
  41eb91:	push   es
  41eb92:	xor    edx,DWORD PTR [ebx-0x1a]
  41eb95:	jmp    0xea86:0xe41c1940
  41eb9c:	fwait
  41eb9d:	scas   eax,DWORD PTR es:[edi]
  41eb9e:	mov    es,ecx
  41eba0:	int    0xcd
  41eba2:	adc    esp,DWORD PTR [ecx-0x6d]
  41eba5:	ret    
  41eba6:	mov    ds:0xc430c55a,al
  41ebab:	and    al,0x87
  41ebad:	sar    dl,1
  41ebaf:	adc    ecx,edi
  41ebb1:	jns    0x41ebe8
  41ebb3:	loopne 0x41ebd8
  41ebb5:	daa    
  41ebb6:	in     eax,0xf0
  41ebb8:	add    edi,DWORD PTR [edx-0xf]
  41ebbb:	imul   eax,DWORD PTR [esi-0x5b0bf001],0xdf8ed5fa
  41ebc5:	out    dx,eax
  41ebc6:	fadd   DWORD PTR [edx+0xfef3c]
  41ebcc:	mov    bl,0x57
  41ebce:	inc    ebx
  41ebcf:	dec    edx
  41ebd0:	pop    eax
  41ebd1:	es push 0x71
  41ebd4:	mov    ds:0x8a812fb1,al
  41ebd9:	or     eax,0x940f9ea0
  41ebde:	pop    ebx
  41ebdf:	mov    ch,0xc1
  41ebe1:	mov    edi,0xd99fce3d
  41ebe6:	mov    edx,0xfbaa50ff
  41ebeb:	test   bl,al
  41ebed:	dec    ebx
  41ebee:	ja     0x41ec6f
  41ebf0:	mov    ds:0x543f3b5c,eax
  41ebf5:	mov    ss,WORD PTR [edi+0x17]
  41ebf8:	jbe    0x41ec1e
  41ebfa:	hlt    
  41ebfb:	gs pop esp
  41ebfd:	adc    BYTE PTR [esi-0x6deef61b],dl
  41ec03:	lahf   
  41ec04:	retf   0x2e61
  41ec07:	or     eax,0x4e7653a6
  41ec0c:	unpcklps xmm4,XMMWORD PTR [ecx-0x55e80ced]
  41ec13:	sub    ecx,edx
  41ec15:	push   cs
  41ec16:	add    esp,edi
  41ec18:	mov    WORD PTR [eax],fs
  41ec1a:	cs dec di
  41ec1d:	cmp    eax,0xe34bd7c0
  41ec22:	pop    ebx
  41ec23:	xor    al,0x79
  41ec25:	gs jmp 0xd71ce2a3
  41ec2b:	xchg   ebx,eax
  41ec2c:	sbb    al,0x32
  41ec2e:	xor    al,0xa3
  41ec30:	pop    esi
  41ec31:	scas   al,BYTE PTR es:[edi]
  41ec32:	xor    al,0xea
  41ec34:	lock add al,0x5a
  41ec37:	fstp   QWORD PTR [edx]
  41ec39:	(bad)  
  41ec3a:	sti    
  41ec3b:	and    eax,0x298de8a6
  41ec40:	in     al,dx
  41ec41:	jno    0x41ec98
  41ec43:	sbb    BYTE PTR [edi+0x59],0x25
  41ec47:	fadd   st,st(1)
  41ec49:	mov    WORD PTR [edi+0x39270d6e],?
  41ec4f:	xchg   ebp,eax
  41ec50:	sysenter 
  41ec52:	aas    
  41ec53:	or     al,0x1d
  41ec55:	stc    
  41ec56:	jne    0x41ec80
  41ec58:	mov    cl,BYTE PTR [eax]
  41ec5a:	cmp    esi,DWORD PTR [eax+0x11]
  41ec5d:	sti    
  41ec5e:	aam    0x54
  41ec60:	sti    
  41ec61:	ret    
  41ec62:	fsubr  QWORD PTR [ebp+eax*8-0xe8da06e]
  41ec69:	inc    DWORD PTR [eax+esi*4+0x4d7a49e6]
  41ec70:	xchg   ebx,eax
  41ec71:	fisub  WORD PTR [ecx]
  41ec73:	daa    
  41ec74:	daa    
  41ec75:	nop
  41ec76:	and    BYTE PTR [ebp+0x10544ea4],0xf
  41ec7d:	sub    eax,0x4b6faafd
  41ec82:	sti    
  41ec83:	rcl    DWORD PTR [di],0xa5
  41ec87:	push   ebp
  41ec88:	add    BYTE PTR [esi],0xbd
  41ec8b:	adc    eax,0x545e0cd
  41ec90:	sbb    DWORD PTR [eax],ebx
  41ec92:	rcr    esi,0xe2
  41ec95:	lods   al,BYTE PTR ds:[esi]
  41ec96:	dec    edi
  41ec97:	les    ebx,FWORD PTR [esi+ebx*1-0x55]
  41ec9b:	and    DWORD PTR [edi-0x17111a91],ebp
  41eca1:	push   es
  41eca2:	xor    ecx,DWORD PTR [edi+edx*1-0x2ee229bc]
  41eca9:	cmp    ebp,DWORD PTR [eax+0x30c75e75]
  41ecaf:	mov    eax,ds:0x1bbc4e3b
  41ecb4:	cmp    eax,0xa0e8472e
  41ecb9:	inc    ecx
  41ecba:	inc    DWORD PTR [edi+0x66]
  41ecbd:	hlt    
  41ecbe:	pop    ecx
  41ecbf:	call   0xdb82:0xace84bf8
  41ecc6:	pop    es
  41ecc7:	les    eax,FWORD PTR [edi-0x60]
  41ecca:	retf   
  41eccb:	xchg   esp,eax
  41eccc:	sbb    eax,0x622df07c
  41ecd1:	add    eax,0xfadd8523
  41ecd6:	and    eax,0x61edd732
  41ecdb:	or     DWORD PTR [ebx-0x65],0x384090b9
  41ece2:	gs push cs
  41ece4:	dec    ebx
  41ece5:	sub    al,0x2b
  41ece7:	hlt    
  41ece8:	sub    DWORD PTR [edx-0x80],esi
  41eceb:	jp     0x41ecb9
  41eced:	adc    BYTE PTR [eax+0x3e077c45],ah
  41ecf3:	ds (bad) 
  41ecf5:	cs push edx
  41ecf7:	add    al,0xe2
  41ecf9:	jns    0x41ed0f
  41ecfb:	shl    BYTE PTR [eax+0x53c49c81],1
  41ed01:	lahf   
  41ed02:	mov    edx,0xf54f20a0
  41ed07:	retf   
  41ed08:	jle    0x41ec8e
  41ed0a:	ss jmp 0x41ecd8
  41ed0d:	sbb    al,dh
  41ed0f:	cwde   
  41ed10:	into   
  41ed11:	sub    bl,BYTE PTR [eax+0xbd3b8c]
  41ed17:	mov    eax,0xdee8e2d5
  41ed1c:	xor    esp,ebx
  41ed1e:	into   
  41ed1f:	adc    DWORD PTR ds:0x9beff7fb,edx
  41ed25:	or     BYTE PTR [edx+eax*2-0x3c3cb62],bh
  41ed2c:	adc    ecx,DWORD PTR [ecx+0x67f377fb]
  41ed32:	repnz push ds
  41ed34:	push   ebx
  41ed35:	aaa    
  41ed36:	mov    ds:0x1ddc5054,al
  41ed3b:	adc    eax,DWORD PTR [edx]
  41ed3d:	retf   0x9d25
  41ed40:	sbb    al,0x13
  41ed42:	or     ah,0x61
  41ed45:	cmp    al,0x60
  41ed47:	sbb    bh,ah
  41ed49:	int3   
  41ed4a:	aam    0x43
  41ed4c:	xchg   ebp,eax
  41ed4d:	mov    cl,0xc6
  41ed4f:	adc    esi,DWORD PTR [esi+0x2]
  41ed52:	iret   
  41ed53:	sub    eax,0x19543261
  41ed58:	dec    esp
  41ed59:	jle    0x41ecde
  41ed5b:	dec    edi
  41ed5c:	pop    eax
  41ed5d:	cmp    BYTE PTR [ecx-0x4b],cl
  41ed60:	pop    ecx
  41ed61:	sahf   
  41ed62:	stos   DWORD PTR es:[edi],eax
  41ed63:	or     ah,dh
  41ed65:	fmul   st(0),st
  41ed67:	sbb    DWORD PTR [edi],eax
  41ed69:	dec    DWORD PTR [ebx]
  41ed6b:	mov    ds:0x8b0cb88e,eax
  41ed70:	bnd jne 0x41ecf8
  41ed73:	outs   dx,DWORD PTR ds:[esi]
  41ed74:	sub    ecx,eax
  41ed76:	jge    0x41ed8b
  41ed78:	pop    es
  41ed79:	dec    edi
  41ed7a:	push   esp
  41ed7b:	mov    eax,ds:0xe794b3a0
  41ed80:	dec    ebp
  41ed81:	mov    edx,0xcb5e367a
  41ed86:	ret    
  41ed87:	dec    ebx
  41ed88:	push   ss
  41ed89:	inc    eax
  41ed8a:	aaa    
  41ed8b:	aad    0x45
  41ed8d:	push   0x2c529747
  41ed92:	rcr    BYTE PTR [edx],cl
  41ed94:	jl     0x41edba
  41ed96:	ins    DWORD PTR es:[di],dx
  41ed98:	adc    ch,bh
  41ed9a:	mov    edi,0x1611de6c
  41ed9f:	sub    al,dl
  41eda1:	xor    ah,BYTE PTR [edx+0x65]
  41eda4:	mov    fs,WORD PTR [edi]
  41eda6:	(bad)  
  41eda7:	fs jbe 0x41edf2
  41edaa:	and    ebx,DWORD PTR [esi+ebp*1-0x2f]
  41edae:	mov    esp,0x6e65afee
  41edb3:	dec    ebp
  41edb4:	jnp    0x41ed63
  41edb6:	hlt    
  41edb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edb8:	cdq    
  41edb9:	pop    eax
  41edba:	jg     0x41edbb
  41edbc:	imul   ebx,eax,0x6e5c6cd9
  41edc2:	dec    edi
  41edc3:	sbb    DWORD PTR [edi-0x27],edx
  41edc6:	push   eax
  41edc7:	aaa    
  41edc8:	(bad)  
  41edc9:	jbe    0x41ee26
  41edcb:	jmp    0xac7870d2
  41edd0:	pop    ebp
  41edd1:	sub    eax,ecx
  41edd3:	sti    
  41edd4:	in     al,dx
  41edd5:	call   0xfbcd:0x5b9d1394
  41eddc:	xchg   esp,eax
  41eddd:	or     eax,DWORD PTR [ebx+edi*8-0x6355843]
  41ede4:	jl     0x41edf6
  41ede6:	aas    
  41ede7:	sub    DWORD PTR [edi],esi
  41ede9:	add    DWORD PTR [edi],eax
  41edeb:	pop    ebp
  41edec:	test   al,0x95
  41edee:	xor    eax,0x7654aef2
  41edf3:	fimul  WORD PTR [esi*8+0x3b616c3]
  41edfa:	xchg   ebp,eax
  41edfb:	sbb    bl,BYTE PTR [edi-0x14]
  41edfe:	inc    ecx
  41edff:	aas    
  41ee00:	lahf   
  41ee01:	add    BYTE PTR [edi-0x2a],bl
  41ee04:	pop    ebp
  41ee05:	and    DWORD PTR [esi+0x7f],ebx
  41ee08:	mov    ah,0x91
  41ee0a:	pop    eax
  41ee0b:	and    al,0x24
  41ee0d:	inc    ebp
  41ee0e:	xlat   BYTE PTR ds:[ebx]
  41ee0f:	les    esi,FWORD PTR [eax]
  41ee11:	cli    
  41ee12:	imul   edi,DWORD PTR [eax+0xb],0x97071e5f
  41ee19:	or     eax,0x59db3958
  41ee1e:	pop    es
  41ee1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee20:	or     BYTE PTR [esi+0x30],ah
  41ee23:	mov    dh,0xb7
  41ee25:	stc    
  41ee26:	push   ebp
  41ee27:	ja     0x41ee85
  41ee29:	call   0x1a54:0x372eecc8
  41ee30:	leave  
  41ee31:	mov    ah,0x4a
  41ee33:	add    BYTE PTR [eax],bl
  41ee35:	rcl    DWORD PTR [eax],1
  41ee37:	xchg   ecx,eax
  41ee38:	pushw  ds
  41ee3a:	addr16 test eax,0xd00c4f5
  41ee40:	add    DWORD PTR [ebp-0x4e],ebx
  41ee43:	mov    ds:0xef021265,al
  41ee48:	retf   
  41ee49:	mov    ah,0x5f
  41ee4b:	pop    esi
  41ee4c:	imul   ebp,DWORD PTR [eax+0x628c85d3],0x50
  41ee53:	fcomi  st,st(6)
  41ee55:	push   ebp
  41ee56:	jl     0x41edea
  41ee58:	imul   edi,DWORD PTR [edx-0x506a6d73],0x7b
  41ee5f:	lods   eax,DWORD PTR ds:[esi]
  41ee60:	add    BYTE PTR [eax-0x45e14829],al
  41ee66:	loop   0x41ee65
  41ee68:	sub    al,0xef
  41ee6a:	cdq    
  41ee6b:	pop    esi
  41ee6c:	mov    bh,0xae
  41ee6e:	outs   dx,DWORD PTR ds:[esi]
  41ee6f:	push   esi
  41ee70:	cwde   
  41ee71:	jae    0x41ee07
  41ee73:	fs push cs
  41ee75:	pop    edx
  41ee76:	and    DWORD PTR gs:[eax+0x25],esi
  41ee7a:	into   
  41ee7b:	es push eax
  41ee7d:	adc    edi,DWORD PTR [ebx-0x3]
  41ee80:	dec    eax
  41ee81:	repnz push es
  41ee83:	add    eax,0x407bd39c
  41ee88:	lock scas eax,DWORD PTR es:[edi]
  41ee8a:	push   cs
  41ee8b:	pop    edx
  41ee8c:	xchg   edi,eax
  41ee8d:	adc    ch,ah
  41ee8f:	(bad)  
  41ee90:	dec    esp
  41ee91:	pusha  
  41ee92:	sub    DWORD PTR ds:0xc518d6d4,esi
  41ee98:	push   cs
  41ee99:	test   edi,eax
  41ee9b:	(bad)  
  41ee9c:	clc    
  41ee9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee9e:	pop    esi
  41ee9f:	mov    BYTE PTR [esi+0xdcfd5be],bl
  41eea5:	popf   
  41eea6:	mov    al,0xae
  41eea8:	pop    ebp
  41eea9:	dec    edx
  41eeaa:	dec    ebx
  41eeab:	adc    al,BYTE PTR [ecx-0x71]
  41eeae:	dec    ecx
  41eeaf:	sbb    BYTE PTR [edx-0x390cdb2],ch
  41eeb5:	popf   
  41eeb6:	inc    ecx
  41eeb7:	adc    eax,0x67983e22
  41eebc:	pop    ecx
  41eebd:	jp     0x41eedf
  41eebf:	xor    dl,dh
  41eec1:	addr16 sahf 
  41eec3:	cmp    DWORD PTR [esp+esi*8-0x48],edx
  41eec7:	ss xchg al,bl
  41eeca:	xchg   BYTE PTR [edx+0xd],ah
  41eecd:	mov    eax,0xcc5118f0
  41eed2:	cwde   
  41eed3:	sub    eax,0xd5902120
  41eed8:	jns    0x41ee78
  41eeda:	cmp    DWORD PTR [edx-0x229e59f7],esp
  41eee0:	add    BYTE PTR ds:0x97e5782f,cl
  41eee6:	sub    BYTE PTR [eax],0xeb
  41eee9:	mov    BYTE PTR [ecx],bl
  41eeeb:	xor    eax,0xa125f179
  41eef0:	mov    ebp,0x1ae442b3
  41eef5:	je     0x41ef02
  41eef7:	div    DWORD PTR [ebp-0x1f]
  41eefa:	sti    
  41eefb:	push   esp
  41eefc:	mov    esi,0x396aebe4
  41ef01:	(bad)
  41ef04:	lahf   
  41ef05:	mov    ebp,0xbce2b7d2
  41ef0a:	std    
  41ef0b:	cmp    ax,0x2509
  41ef0f:	in     eax,dx
  41ef10:	jp     0x41ef90
  41ef12:	mov    ds:0x302b5762,eax
  41ef17:	not    BYTE PTR [ecx]
  41ef19:	cmp    eax,esi
  41ef1b:	popa   
  41ef1c:	pop    ebx
  41ef1d:	in     al,0xf8
  41ef1f:	cmc    
  41ef20:	retf   0x3c7b
  41ef23:	stos   BYTE PTR es:[edi],al
  41ef24:	sar    DWORD PTR [esi],cl
  41ef26:	ins    DWORD PTR es:[edi],dx
  41ef27:	inc    esi
  41ef28:	xchg   esp,eax
  41ef29:	in     al,dx
  41ef2a:	dec    edx
  41ef2b:	adc    eax,0xcdffc3a6
  41ef30:	stc    
  41ef31:	jmp    0xa5d3:0x469f3cae
  41ef38:	cmp    bl,ch
  41ef3a:	call   0xe5d8b092
  41ef3f:	mov    ecx,esi
  41ef41:	aaa    
  41ef42:	cmp    eax,0x2d5a2c09
  41ef47:	mov    bl,bl
  41ef49:	icebp  
  41ef4a:	aam    0x85
  41ef4c:	data16 mov bl,0x77
  41ef4f:	daa    
  41ef50:	pop    es
  41ef51:	in     eax,0x4b
  41ef53:	and    ebp,ebx
  41ef55:	fxch   st(6)
  41ef57:	arpl   WORD PTR ds:[edi+0x30779e99],ax
  41ef5e:	fstp   TBYTE PTR [edi]
  41ef60:	test   al,0x11
  41ef62:	cmp    cl,BYTE PTR [ebx+0x4618d233]
  41ef68:	int    0xf2
  41ef6a:	sub    BYTE PTR [eax],bl
  41ef6c:	pinsrw mm5,WORD PTR ds:0xd841676c,0x5a
  41ef74:	dec    esp
  41ef75:	cmp    al,0x49
  41ef77:	add    DWORD PTR [eax-0x185a5b03],esp
  41ef7d:	jmp    0xab03:0xec3892f6
  41ef84:	int    0x65
  41ef86:	bound  ecx,QWORD PTR cs:[esi+0x284600a5]
  41ef8d:	or     DWORD PTR ds:0x48151aab,0xb0039d7b
  41ef97:	addr16 leave 
  41ef99:	and    ecx,DWORD PTR [esi+0xe]
  41ef9c:	mov    eax,0x7851a3c1
  41efa1:	cmp    al,0xec
  41efa3:	int3   
  41efa4:	jne    0x41eff6
  41efa6:	and    al,0x3c
  41efa8:	xchg   ebp,eax
  41efa9:	xor    ebx,DWORD PTR [esi+edi*1-0x79]
  41efad:	sub    DWORD PTR ds:0x7cd7867c,ebp
  41efb3:	push   esi
  41efb4:	out    dx,eax
  41efb5:	xor    eax,0x9493d33b
  41efba:	adc    DWORD PTR [edx],0xffffff80
  41efbd:	mov    eax,ds:0x826c4fcb
  41efc2:	pop    ecx
  41efc3:	push   ss
  41efc4:	sbb    ebp,DWORD PTR [edx-0x7b]
  41efc7:	mov    ebp,0xe44f7b99
  41efcc:	aad    0x5
  41efce:	sub    DWORD PTR [esi-0x5186d15d],esp
  41efd4:	and    al,0x44
  41efd6:	jbe    0x41efd7
  41efd8:	es das 
  41efda:	lods   eax,DWORD PTR ds:[esi]
  41efdb:	sbb    BYTE PTR [edx+0x60],0xff
  41efdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efe0:	popf   
  41efe1:	inc    edi
  41efe2:	in     eax,0xa2
  41efe4:	pop    es
  41efe5:	lea    ecx,[esi+ebx*4-0x63]
  41efe9:	leave  
  41efea:	jbe    0x41eff7
  41efec:	fdiv   st(6),st
  41efee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efef:	retf   
  41eff0:	sahf   
  41eff1:	add    ah,dl
  41eff3:	and    BYTE PTR [edx-0x22f340f3],ch
  41eff9:	xchg   esp,eax
  41effa:	inc    ecx
  41effb:	xor    al,0xb6
  41effd:	push   ds
  41effe:	ja     0x41f07c
  41f000:	pop    edx
  41f001:	inc    edi
  41f002:	std    
  41f003:	jo     0x41f02c
  41f005:	(bad)  
  41f006:	mov    edx,0xa20db391
  41f00b:	cwde   
  41f00c:	sbb    dl,BYTE PTR [esi-0x36]
  41f00f:	mov    al,0x57
  41f011:	add    eax,0xb1a2e51b
  41f016:	push   eax
  41f017:	xchg   DWORD PTR [edx-0x8806999],edx
  41f01d:	call   0x600c:0x3f371ff4
  41f024:	push   eax
  41f025:	mov    bh,0xbb
  41f027:	jl     0x41f02f
  41f029:	mov    edi,0xa5ba19c5
  41f02e:	pop    es
  41f02f:	and    al,0x1e
  41f031:	icebp  
  41f032:	popw   ss
  41f034:	sbb    eax,0xfc0effa2
  41f039:	jbe    0x41f04b
  41f03b:	jge    0x41efd6
  41f03d:	push   DWORD PTR [esi+0x43]
  41f040:	aaa    
  41f041:	inc    edx
  41f042:	adc    al,BYTE PTR [ebx+0x7c7ffc9c]
  41f048:	mov    ah,0x2e
  41f04a:	pop    ds
  41f04b:	(bad)  
  41f04c:	arpl   WORD PTR [ebx],di
  41f04e:	popf   
  41f04f:	int3   
  41f050:	aad    0x9a
  41f052:	xor    BYTE PTR [ecx],0x0
  41f055:	fsub   st(2),st
  41f057:	xlat   BYTE PTR ds:[ebx]
  41f058:	cld    
  41f059:	cmc    
  41f05a:	mov    DWORD PTR [ebx+eax*8+0x17c0f207],esi
  41f061:	ror    BYTE PTR [ebx+0x6b],1
  41f064:	bnd jo 0x41f010
  41f067:	pop    edx
  41f068:	mov    esi,0xbbe3019
  41f06d:	test   al,0xd0
  41f06f:	cmp    ebx,0x205b131a
  41f075:	das    
  41f076:	cld    
  41f077:	pop    ss
  41f078:	daa    
  41f079:	xchg   edi,eax
  41f07a:	into   
  41f07b:	je     0x41f078
  41f07d:	out    dx,al
  41f07e:	je     0x41f090
  41f080:	xchg   edx,eax
  41f081:	out    dx,eax
  41f082:	sub    DWORD PTR [edi+0x28],ecx
  41f085:	imul   esp,DWORD PTR [eax-0x7d1451a9],0x5e080b39
  41f08f:	jns    0x41f097
  41f091:	inc    bl
  41f093:	pop    eax
  41f094:	ds aaa 
  41f096:	pop    ds
  41f097:	in     eax,0x1
  41f099:	lods   al,BYTE PTR ds:[esi]
  41f09a:	mov    ch,0x58
  41f09c:	hlt    
  41f09d:	and    ch,cl
  41f09f:	les    ecx,FWORD PTR [edi+0x32]
  41f0a2:	inc    DWORD PTR [edx+0x27c38b37]
  41f0a8:	iret   
  41f0a9:	adc    eax,edi
  41f0ab:	cmp    eax,0xa79fd3ff
  41f0b0:	jge    0x41f0f6
  41f0b2:	add    ah,BYTE PTR [edi-0x72]
  41f0b5:	cmp    esi,DWORD PTR [esi-0x4c802621]
  41f0bb:	jp     0x41f0a6
  41f0bd:	outs   dx,BYTE PTR ds:[esi]
  41f0be:	push   ss
  41f0bf:	dec    ecx
  41f0c0:	mov    bl,0x5e
  41f0c2:	mov    dl,0x65
  41f0c4:	mov    bh,0xa0
  41f0c6:	or     DWORD PTR [edx+0x7c],ebp
  41f0c9:	mov    esi,0xa31a672d
  41f0ce:	add    esp,DWORD PTR [eax-0x2aa2ff39]
  41f0d4:	call   0xdc78:0xfea6ec5
  41f0db:	sbb    esi,edi
  41f0dd:	ret    
  41f0de:	cmp    cl,bl
  41f0e0:	in     al,0xa
  41f0e2:	das    
  41f0e3:	out    0x30,al
  41f0e5:	and    bl,BYTE PTR [ecx-0x20]
  41f0e8:	and    ah,BYTE PTR [edx]
  41f0ea:	aaa    
  41f0eb:	dec    eax
  41f0ec:	mov    ah,0x98
  41f0ee:	call   0x9c9ec50a
  41f0f3:	dec    ebp
  41f0f4:	push   es
  41f0f5:	lea    ecx,[ecx+ecx*4-0x31]
  41f0f9:	in     eax,0xe3
  41f0fb:	fiadd  WORD PTR [esi]
  41f0fd:	fst    QWORD PTR [ebp+eax*4-0x45b227d2]
  41f104:	or     dl,BYTE PTR [ebx]
  41f106:	pop    eax
  41f107:	sub    al,BYTE PTR [eax+ecx*8+0x7a]
  41f10b:	or     DWORD PTR [eax],0x5
  41f10e:	hlt    
  41f10f:	pop    esp
  41f110:	lods   eax,DWORD PTR ds:[esi]
  41f111:	ins    BYTE PTR es:[edi],dx
  41f112:	mov    ecx,0xc355bc17
  41f117:	out    0xdc,eax
  41f119:	repz xor eax,0xedb27d34
  41f11f:	dec    eax
  41f120:	inc    ebp
  41f121:	int3   
  41f122:	pop    edx
  41f123:	xchg   BYTE PTR [ecx+0x52],al
  41f126:	bound  edi,QWORD PTR [esi+0x40]
  41f129:	push   esi
  41f12a:	cld    
  41f12b:	into   
  41f12c:	popf   
  41f12d:	dec    edi
  41f12e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f12f:	cmp    dh,bl
  41f131:	pop    ds
  41f132:	cmc    
  41f133:	ror    dl,0x8f
  41f136:	ret    0x1c57
  41f139:	das    
  41f13a:	mov    bh,0xf9
  41f13c:	ror    esp,cl
  41f13e:	mov    eax,ds:0xbc8f210d
  41f143:	sbb    eax,DWORD PTR [ebp-0x59]
  41f146:	inc    ecx
  41f147:	dec    esi
  41f148:	xor    ch,BYTE PTR [edi-0x48]
  41f14b:	into   
  41f14c:	dec    eax
  41f14d:	jp     0x41f0d5
  41f14f:	sub    esi,DWORD PTR [ebx+0x6b]
  41f152:	stc    
  41f153:	add    DWORD PTR [ebx+0x71],esp
  41f156:	push   eax
  41f157:	clc    
  41f158:	add    BYTE PTR [ebx+0x49],dh
  41f15b:	mov    bl,0xd0
  41f15d:	jp     0x41f154
  41f15f:	sahf   
  41f160:	sub    BYTE PTR [esi],cl
  41f162:	jns    0x41f1b5
  41f164:	cmp    bh,BYTE PTR [eax+ebp*8+0x6e]
  41f168:	jl     0x41f18a
  41f16a:	nop
  41f16b:	retf   0x8501
  41f16e:	inc    edi
  41f16f:	das    
  41f170:	xchg   edx,eax
  41f171:	ds in  eax,0xa3
  41f174:	sub    ebx,esp
  41f176:	test   edx,edi
  41f178:	ins    DWORD PTR es:[edi],dx
  41f179:	sahf   
  41f17a:	dec    ebp
  41f17b:	aas    
  41f17c:	push   0x76df092e
  41f181:	jle    0x41f10a
  41f183:	jae    0x41f18b
  41f185:	lahf   
  41f186:	mov    ds:0xaf47c2a6,al
  41f18b:	cli    
  41f18c:	sbb    BYTE PTR ds:[ebx+0x2506d79f],ah
  41f193:	sub    eax,0xd09f068d
  41f198:	rol    BYTE PTR [esi-0x6c3ea43],1
  41f19e:	test   eax,0xb4a34ed7
  41f1a3:	jnp    0x41f18a
  41f1a5:	shr    DWORD PTR [esi-0x1131e33b],cl
  41f1ab:	imul   DWORD PTR [ecx+0x49ead3bf]
  41f1b1:	in     al,dx
  41f1b2:	ficom  WORD PTR [esi+0x10]
  41f1b5:	push   ecx
  41f1b6:	mov    ds:0x2936f0d6,eax
  41f1bb:	dec    eax
  41f1bc:	mov    al,ds:0x7ab14af2
  41f1c1:	sub    eax,0x2284301f
  41f1c6:	pop    eax
  41f1c7:	aam    0xc3
  41f1c9:	cmp    DWORD PTR [esi+0x22],0xd6b6b99e
  41f1d0:	xchg   edi,eax
  41f1d1:	fs ins DWORD PTR es:[edi],dx
  41f1d3:	sbb    eax,0xadd22256
  41f1d8:	or     cl,BYTE PTR [edi+0x7f]
  41f1db:	add    DWORD PTR [edx],eax
  41f1dd:	movnti DWORD PTR [edx+0x26623a7f],esi
  41f1e4:	nop
  41f1e5:	jecxz  0x41f25b
  41f1e7:	mov    ss,WORD PTR [ebx+0x5dc5a026]
  41f1ed:	cmp    DWORD PTR [edi-0x3c],esi
  41f1f0:	in     eax,dx
  41f1f1:	nop
  41f1f2:	mov    bh,0x8f
  41f1f4:	rol    BYTE PTR [edx-0x62],0x5a
  41f1f8:	and    eax,0x605812a5
  41f1fd:	fcomp  DWORD PTR [edi+0x7ea30dc5]
  41f203:	pop    eax
  41f204:	add    eax,esp
  41f206:	dec    ecx
  41f207:	push   es
  41f208:	lock or eax,0xfe7c7f15
  41f20e:	mov    eax,0xe47c7023
  41f213:	jo     0x41f1bf
  41f215:	ja     0x41f241
  41f217:	loopne 0x41f228
  41f219:	cmp    DWORD PTR [ebx],eax
  41f21b:	ss pop ebx
  41f21d:	lds    edx,FWORD PTR [ebp+0x6b]
  41f220:	push   edi
  41f221:	jg     0x41f1da
  41f223:	int    0xf
  41f225:	push   esp
  41f226:	not    BYTE PTR [edx-0x47cf1e35]
  41f22c:	out    0x23,al
  41f22e:	mov    edx,ebp
  41f230:	test   DWORD PTR [ebx-0x1aa9218f],esp
  41f236:	ja     0x41f26a
  41f238:	xchg   esp,eax
  41f239:	cmc    
  41f23a:	sub    BYTE PTR [edx+0x1a10d286],bh
  41f240:	sub    ecx,DWORD PTR [ebx-0x7a]
  41f243:	inc    edx
  41f244:	test   BYTE PTR [esi+ebp*2],0x4b
  41f248:	adc    al,0x4e
  41f24a:	test   BYTE PTR [edx],bl
  41f24c:	call   0x5d6d5675
  41f251:	nop
  41f252:	out    dx,eax
  41f253:	les    edi,FWORD PTR [ebp-0x5c6949a9]
  41f259:	out    dx,al
  41f25a:	cwde   
  41f25b:	pop    edx
  41f25c:	cmp    dl,cl
  41f25e:	jns    0x41f28c
  41f260:	cmp    ecx,DWORD PTR [esi+0x42]
  41f263:	aam    0x24
  41f265:	ror    bh,0x44
  41f268:	out    dx,al
  41f269:	jmp    0x5db4:0x1f4ae041
  41f270:	dec    esp
  41f271:	enter  0x353a,0x8e
  41f275:	xor    DWORD PTR [esi-0x2e091bf4],esp
  41f27b:	ror    edi,0x12
  41f27e:	imul   BYTE PTR [edi+0x33c77ee4]
  41f284:	out    0xe7,eax
  41f286:	aad    0x25
  41f288:	push   eax
  41f289:	pop    esp
  41f28a:	pop    esi
  41f28b:	es jae 0x41f2cb
  41f28e:	xor    DWORD PTR [esi+0x74],ebx
  41f291:	es in  eax,dx
  41f293:	mov    ds:0xcccfd5b9,al
  41f298:	cmp    bh,BYTE PTR [esi+0x237b0161]
  41f29e:	sahf   
  41f29f:	cmp    bl,BYTE PTR [edi-0x47]
  41f2a2:	jle    0x41f24e
  41f2a4:	imul   BYTE PTR [eax]
  41f2a6:	xchg   ecx,eax
  41f2a7:	xchg   edi,eax
  41f2a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2a9:	cdq    
  41f2aa:	sbb    DWORD PTR ds:0xbc6120a0,ebp
  41f2b0:	loope  0x41f300
  41f2b2:	jmp    0x5804:0xc98bff43
  41f2b9:	js     0x41f2e2
  41f2bb:	add    ecx,DWORD PTR [esi*2+0x1fbd4ae0]
  41f2c2:	xor    eax,0x1a3dffe3
  41f2c7:	retf   
  41f2c8:	pushf  
  41f2c9:	jmp    0x8c9b:0xe67a4f21
  41f2d0:	repz and eax,0x76363667
  41f2d6:	dec    esp
  41f2d7:	das    
  41f2d8:	pop    ecx
  41f2d9:	add    eax,0xdccd4573
  41f2de:	jne    0x41f319
  41f2e0:	ficomp WORD PTR [ebp+0x70]
  41f2e3:	in     al,0xc8
  41f2e5:	or     DWORD PTR [edx+0x736b7d36],ebx
  41f2eb:	repnz sti 
  41f2ed:	loope  0x41f326
  41f2ef:	sbb    dh,BYTE PTR [edx+0x61516b9a]
  41f2f5:	mov    WORD PTR [esi+eiz*8-0x1e],cs
  41f2f9:	push   ss
  41f2fa:	jl     0x41f2da
  41f2fc:	aam    0x50
  41f2fe:	(bad)  
  41f2ff:	sti    
  41f300:	xor    DWORD PTR [ecx-0x1d619b9],esi
  41f306:	push   edx
  41f307:	mov    ebp,0x90181196
  41f30c:	cli    
  41f30d:	ret    0xe382
  41f310:	xor    DWORD PTR [edx+0x37447f34],ebp
  41f316:	jecxz  0x41f386
  41f318:	fld    st(5)
  41f31a:	imul   esi,DWORD PTR [eax-0x24],0x79
  41f31e:	mov    dh,0x46
  41f320:	mov    ds:0x490a9e9,al
  41f325:	dec    eax
  41f326:	dec    eax
  41f327:	pop    es
  41f328:	push   ebp
  41f329:	push   ds
  41f32a:	fcmovb st,st(1)
  41f32c:	arpl   WORD PTR [ebp-0x3c],cx
  41f32f:	scas   eax,DWORD PTR es:[edi]
  41f330:	cdq    
  41f331:	pop    esp
  41f332:	fnstsw WORD PTR [eax+0x18]
  41f335:	xchg   ecx,eax
  41f336:	nop
  41f337:	sub    bl,bh
  41f339:	push   0x77f23351
  41f33e:	retf   
  41f33f:	and    eax,0xc610df14
  41f344:	mov    esp,0xd2540f54
  41f349:	mov    dl,0x5a
  41f34b:	jecxz  0x41f2d4
  41f34d:	(bad)  
  41f350:	mov    dl,0x9e
  41f352:	test   eax,0xcf99cc30
  41f357:	dec    eax
  41f358:	inc    ebp
  41f359:	fcomp  st(4)
  41f35b:	sub    edi,esi
  41f35d:	ds push cs
  41f35f:	and    eax,eax
  41f361:	pop    ebx
  41f362:	inc    ebx
  41f363:	inc    eax
  41f364:	xor    DWORD PTR ds:0x2e5b3b68,0x32
  41f36b:	xchg   edx,eax
  41f36c:	ret    0xbe72
  41f36f:	xchg   ecx,eax
  41f370:	out    dx,eax
  41f371:	xchg   ebp,eax
  41f372:	sub    esp,ecx
  41f374:	xor    eax,0x8be8cb6d
  41f379:	loop   0x41f3f4
  41f37b:	ins    BYTE PTR es:[edi],dx
  41f37c:	jge    0x41f3e8
  41f37e:	lods   al,BYTE PTR ds:[esi]
  41f37f:	(bad)  
  41f380:	mov    edi,0x8cdc0e2
  41f385:	(bad)  
  41f386:	repz cdq 
  41f388:	push   es
  41f389:	or     ah,bh
  41f38b:	daa    
  41f38c:	ret    
  41f38d:	sub    DWORD PTR [edi],esp
  41f38f:	mov    ebx,0xb870daff
  41f394:	sahf   
  41f395:	xchg   ecx,eax
  41f396:	or     al,0xa0
  41f398:	push   edi
  41f399:	rcl    DWORD PTR [edx+0x4a5df773],0xce
  41f3a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3a1:	push   ds
  41f3a2:	pusha  
  41f3a3:	fist   WORD PTR gs:[edi-0x5e]
  41f3a7:	es pop edi
  41f3a9:	jno    0x41f3f7
  41f3ab:	push   edi
  41f3ac:	and    BYTE PTR [ecx+0x549382d],0x21
  41f3b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3b4:	int3   
  41f3b5:	xlat   BYTE PTR ds:[ebx]
  41f3b6:	pusha  
  41f3b7:	mov    ch,0x8b
  41f3b9:	setg   BYTE PTR [eax-0x30]
  41f3bd:	or     eax,0x83f025a4
  41f3c2:	xchg   ebp,eax
  41f3c3:	loopne 0x41f423
  41f3c5:	gs scas eax,DWORD PTR es:[edi]
  41f3c7:	addr16 inc ebp
  41f3c9:	cdq    
  41f3ca:	xor    DWORD PTR [ebx+0x675f79e6],ebp
  41f3d0:	loopne 0x41f3b5
  41f3d2:	push   0x93cdc42
  41f3d7:	sub    edx,esi
  41f3d9:	(bad)  
  41f3da:	pop    ss
  41f3db:	jmp    0x2159:0x304d1240
  41f3e2:	jno    0x41f36e
  41f3e4:	(bad)  
  41f3e5:	aaa    
  41f3e6:	add    al,0xbc
  41f3e8:	cmovbe ebp,DWORD PTR [edx]
  41f3eb:	push   cs
  41f3ec:	lea    ebp,[ecx-0x5f91e6ca]
  41f3f2:	stc    
  41f3f3:	aam    0x98
  41f3f5:	sub    eax,0x64c6f37e
  41f3fa:	xchg   ebx,eax
  41f3fb:	fwait
  41f3fc:	inc    ebp
  41f3fd:	cmc    
  41f3fe:	(bad)  
  41f400:	or     al,0xa3
  41f402:	push   edi
  41f403:	test   DWORD PTR [ecx-0x65],0xe8aa8951
  41f40a:	xchg   edx,eax
  41f40b:	js     0x41f449
  41f40d:	or     al,0xa0
  41f40f:	cdq    
  41f410:	jne    0x41f465
  41f412:	sub    esi,DWORD PTR [ecx]
  41f414:	push   ss
  41f415:	mov    dl,0xda
  41f417:	sbb    edx,DWORD PTR [esi]
  41f419:	and    ebp,DWORD PTR [edi]
  41f41b:	cli    
  41f41c:	pop    esp
  41f41d:	dec    ecx
  41f41e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f41f:	jmp    0x9a86d7ae
  41f424:	jno    0x41f3b6
  41f426:	inc    edi
  41f427:	xor    al,0x9a
  41f429:	sub    BYTE PTR ds:0xdf6b9a70,dh
  41f42f:	scas   eax,DWORD PTR es:[edi]
  41f430:	mov    edi,0x36625598
  41f435:	pop    esp
  41f436:	imul   eax,esi,0x1a9cc799
  41f43c:	aad    0x91
  41f43e:	jl     0x41f402
  41f440:	je     0x41f4ba
  41f442:	outs   dx,BYTE PTR ds:[esi]
  41f443:	xchg   esi,eax
  41f444:	pop    esp
  41f445:	(bad)  
  41f446:	call   0xba57c472
  41f44b:	addr16 and eax,0xd2ad3c7
  41f451:	fbld   TBYTE PTR [esi-0x4b]
  41f454:	arpl   WORD PTR [ecx+ecx*8+0x71],di
  41f458:	mov    eax,0x282cc76f
  41f45d:	shl    DWORD PTR [ecx],cl
  41f45f:	add    eax,0xc110dfbd
  41f464:	adc    eax,0x690ecfa6
  41f469:	sub    DWORD PTR [esi],ebp
  41f46b:	out    0x61,al
  41f46d:	and    eax,0x168ac68
  41f472:	mov    edi,0x419be38b
  41f477:	scas   al,BYTE PTR es:[edi]
  41f478:	imul   esp,DWORD PTR [ebp-0x2d],0x3e974873
  41f47f:	jmp    0x7be6096a
  41f484:	pop    ecx
  41f485:	int    0x9b
  41f487:	popa   
  41f488:	outs   dx,DWORD PTR ds:[esi]
  41f489:	cs leave 
  41f48b:	js     0x41f4d8
  41f48d:	cld    
  41f48e:	int3   
  41f48f:	adc    BYTE PTR [esi+0x606d3494],ch
  41f495:	pushf  
  41f496:	pusha  
  41f497:	sar    DWORD PTR [ebx+0x6f],cl
  41f49a:	rcr    BYTE PTR [edx+ecx*4-0x3e],cl
  41f49e:	dec    eax
  41f49f:	fcmovnb st,st(2)
  41f4a1:	or     eax,0x8e421123
  41f4a6:	mov    eax,0xcaee650e
  41f4ab:	mov    bh,0x6e
  41f4ad:	cmovo  ebx,DWORD PTR [esi-0x44]
  41f4b1:	push   cs
  41f4b2:	pop    eax
  41f4b3:	xchg   edx,eax
  41f4b4:	out    0xd0,al
  41f4b6:	push   ebp
  41f4b7:	gs pusha 
  41f4b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4ba:	xchg   esi,eax
  41f4bb:	sub    dh,ah
  41f4bd:	pop    ecx
  41f4be:	push   0xffffff80
  41f4c0:	int3   
  41f4c1:	imul   esp,DWORD PTR [edx+0x317d053b],0x39a7680a
  41f4cb:	test   eax,0x8524c18e
  41f4d0:	in     al,0xc0
  41f4d2:	cld    
  41f4d3:	shl    DWORD PTR [esi],0x42
  41f4d6:	popa   
  41f4d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4d8:	and    ebx,DWORD PTR [eax+0x0]
  41f4db:	int3   
  41f4dc:	test   al,0xc3
  41f4de:	test   eax,0xd5e32720
  41f4e3:	stos   BYTE PTR es:[edi],al
  41f4e4:	pop    ds
  41f4e5:	enter  0x8e5d,0x5
  41f4e9:	call   0xa5d8:0xef81fc7f
  41f4f0:	ror    esp,cl
  41f4f2:	outs   dx,BYTE PTR ds:[esi]
  41f4f3:	dec    edx
  41f4f4:	sub    ebp,DWORD PTR [ebx+0x215f8d26]
  41f4fa:	sub    eax,0x95cc1fa9
  41f4ff:	cmp    eax,0xcc55d5ab
  41f504:	fs push edi
  41f506:	inc    ebp
  41f507:	inc    ebp
  41f508:	mov    bl,0x1d
  41f50a:	mov    eax,ds:0x6105fcc6
  41f50f:	or     esp,DWORD PTR [ebx+0x7b]
  41f512:	call   0xfe6f7612
  41f517:	mov    WORD PTR [eax-0x5a63650f],gs
  41f51d:	push   ds
  41f51e:	mov    esi,0x8007ef12
  41f523:	or     al,0x68
  41f525:	xchg   ecx,eax
  41f526:	mov    eax,0xa2bd3ea2
  41f52b:	popa   
  41f52c:	out    dx,eax
  41f52d:	les    edi,FWORD PTR [edi]
  41f52f:	lahf   
  41f530:	test   eax,0xf36a986a
  41f535:	or     esi,DWORD PTR [ebx+0x11]
  41f538:	packuswb mm7,mm5
  41f53b:	in     al,0xf2
  41f53d:	dec    ecx
  41f53e:	sub    BYTE PTR [esi],0xf3
  41f541:	cld    
  41f542:	daa    
  41f543:	cmp    dh,al
  41f545:	fadd   DWORD PTR [edx]
  41f547:	cdq    
  41f548:	out    0xf1,eax
  41f54a:	xchg   ebx,eax
  41f54b:	cbw    
  41f54d:	jmp    0xb7d7237d
  41f552:	test   DWORD PTR ds:0x106f4db4,0xef4b1379
  41f55c:	mov    WORD PTR [edx+0x6daaaaf3],?
  41f562:	aad    0x3b
  41f564:	jb     0x41f54d
  41f566:	dec    esi
  41f567:	mov    al,0x4
  41f569:	adc    BYTE PTR [edi-0x31],bh
  41f56c:	mov    dh,0xee
  41f56e:	sub    DWORD PTR [edi+0x20],ecx
  41f571:	and    BYTE PTR [ebx-0x1db139bc],bh
  41f577:	pop    ss
  41f578:	pop    edi
  41f579:	inc    esi
  41f57a:	sub    esp,DWORD PTR [ebx-0x5a476389]
  41f580:	shl    BYTE PTR [eax+eiz*1-0x4e],cl
  41f584:	ins    DWORD PTR es:[edi],dx
  41f585:	and    eax,0xbfa172a4
  41f58a:	(bad)  
  41f58b:	push   0x58b73061
  41f590:	sahf   
  41f591:	adc    al,0xde
  41f593:	xchg   ch,bl
  41f595:	jbe    0x41f615
  41f597:	jnp    0x41f5a2
  41f599:	add    dh,0xb9
  41f59c:	and    BYTE PTR [edi-0x1ae4340a],bl
  41f5a2:	cld    
  41f5a3:	mov    dl,0xcc
  41f5a5:	jbe    0x41f58b
  41f5a7:	mov    bh,0x52
  41f5a9:	(bad)  
  41f5aa:	in     al,dx
  41f5ab:	push   edi
  41f5ac:	cmp    esi,ecx
  41f5ae:	loop   0x41f5b7
  41f5b0:	inc    esi
  41f5b1:	les    eax,FWORD PTR [eax+ebp*2]
  41f5b4:	or     eax,0xb45a51ab
  41f5b9:	lods   al,BYTE PTR ds:[esi]
  41f5ba:	arpl   cx,cx
  41f5bc:	jb     0x41f5f2
  41f5be:	outs   dx,BYTE PTR ds:[esi]
  41f5bf:	rol    esp,cl
  41f5c1:	ins    DWORD PTR es:[edi],dx
  41f5c2:	int3   
  41f5c3:	dec    ebp
  41f5c4:	dec    ebp
  41f5c5:	wrmsr  
  41f5c7:	ss pop ds
  41f5c9:	sbb    ch,BYTE PTR [ebp-0x46]
  41f5cc:	mov    dl,0x73
  41f5ce:	aas    
  41f5cf:	xchg   esi,eax
  41f5d0:	cmp    dl,cl
  41f5d2:	xor    al,0x1e
  41f5d4:	neg    bl
  41f5d6:	mov    cl,0x1a
  41f5d8:	mov    ds:0xed3b8df4,eax
  41f5dd:	sar    ecx,0x44
  41f5e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5e1:	adc    BYTE PTR [eax-0x6c2c892c],al
  41f5e7:	jmp    0x501d2584
  41f5ec:	xchg   DWORD PTR [eax+0x2174a741],esp
  41f5f2:	retf   0x8d27
  41f5f5:	scas   eax,DWORD PTR es:[edi]
  41f5f6:	xor    dl,bh
  41f5f8:	mov    ah,0x92
  41f5fa:	pop    eax
  41f5fb:	pop    ebx
  41f5fc:	sub    eax,0x3157f519
  41f601:	leave  
  41f602:	retf   0x6fe
  41f605:	loopne 0x41f67a
  41f607:	sub    eax,0xf8222585
  41f60c:	cmp    DWORD PTR [edi+0x49aa1ef3],esi
  41f612:	rcl    esi,cl
  41f614:	mov    esp,0x1b9c21ed
  41f619:	ror    DWORD PTR [esi],1
  41f61b:	imul   ebp,DWORD PTR [esi-0x37],0x5df93127
  41f622:	sub    BYTE PTR [ecx-0x5f8871f2],cl
  41f628:	div    dl
  41f62a:	fdivr  DWORD PTR [esi+0x45]
  41f62d:	aaa    
  41f62e:	ds lock loop 0x41f5c6
  41f632:	jne    0x41f5e6
  41f634:	loopne 0x41f61b
  41f636:	sub    BYTE PTR [ebx],dh
  41f638:	ds pusha 
  41f63a:	dec    esi
  41f63b:	es sbb dh,cl
  41f63e:	and    BYTE PTR [edi-0x3668fe35],bl
  41f644:	cdq    
  41f645:	test   eax,0x71e42bc7
  41f64a:	cmp    BYTE PTR ss:[ebx],cl
  41f64d:	mov    ebx,gs
  41f64f:	dec    esi
  41f650:	fwait
  41f651:	cdq    
  41f652:	loopne 0x41f62e
  41f654:	xlat   BYTE PTR ds:[ebx]
  41f655:	outs   dx,BYTE PTR ds:[esi]
  41f656:	xchg   ebp,edi
  41f658:	int    0x2d
  41f65a:	std    
  41f65b:	punpckhwd mm7,mm2
  41f65e:	(bad)  
  41f65f:	ror    bh,1
  41f661:	(bad)  
  41f662:	jbe    0x41f6c6
  41f664:	adc    eax,0x89f61a1b
  41f669:	pop    ds
  41f66a:	adc    eax,0xdaff9c80
  41f66f:	jp     0x41f6de
  41f671:	push   ds
  41f672:	adc    dh,dl
  41f674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f675:	adc    edx,DWORD PTR [ebp+0x2236ca19]
  41f67b:	into   
  41f67c:	rol    dh,0xfc
  41f67f:	(bad)  
  41f680:	mov    al,0x31
  41f682:	cld    
  41f683:	cmp    al,0x4b
  41f685:	jp     0x41f6de
  41f687:	and    dh,BYTE PTR [ebp+0x36]
  41f68a:	push   esi
  41f68b:	jle    0x41f662
  41f68d:	cs stc 
  41f68f:	std    
  41f690:	sbb    DWORD PTR [ebp-0x46],ebp
  41f693:	(bad)  
  41f694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f695:	cmp    al,BYTE PTR [eax]
  41f697:	ss mov al,0xc4
  41f69a:	fldcw  WORD PTR [ecx]
  41f69c:	push   cs
  41f69d:	and    ecx,ecx
  41f69f:	(bad)  
  41f6a0:	out    0xeb,eax
  41f6a2:	out    dx,eax
  41f6a3:	pop    esp
  41f6a4:	jne    0x41f6ca
  41f6a6:	lock dec edx
  41f6a8:	jmp    0x47d4a8d2
  41f6ad:	or     DWORD PTR [edi],ebx
  41f6af:	adc    al,BYTE PTR ds:0x80b934dc
  41f6b5:	(bad)  
  41f6b8:	stos   BYTE PTR es:[edi],al
  41f6b9:	dec    ebp
  41f6ba:	call   0x2a1c:0x5b20f85
  41f6c1:	pop    ss
  41f6c2:	cmp    al,0x1b
  41f6c4:	mov    dh,0x70
  41f6c6:	jb     0x41f711
  41f6c8:	aad    0xa
  41f6ca:	into   
  41f6cb:	xchg   ebp,eax
  41f6cc:	ins    DWORD PTR es:[edi],dx
  41f6cd:	fidivr DWORD PTR [eax-0x61]
  41f6d0:	pop    es
  41f6d1:	jae    0x41f6db
  41f6d3:	scas   al,BYTE PTR es:[edi]
  41f6d4:	setl   BYTE PTR ds:0xb0810baa
  41f6db:	shr    BYTE PTR [ebp+0x39c4da4b],0x33
  41f6e2:	jmp    0xc47cdd5e
  41f6e7:	or     BYTE PTR [esi+esi*2-0x45febb00],0xe3
  41f6ef:	fnstcw WORD PTR [ecx-0x80]
  41f6f2:	xchg   ebp,eax
  41f6f3:	fcmovne st,st(1)
  41f6f5:	les    edx,FWORD PTR [ecx-0x53]
  41f6f8:	xchg   esp,eax
  41f6f9:	daa    
  41f6fa:	ja     0x41f6fe
  41f6fc:	ret    
  41f6fd:	and    BYTE PTR ds:0xa73f1b20,ah
  41f703:	imul   edi,DWORD PTR [eax],0x5c
  41f706:	into   
  41f707:	mov    ecx,0x97e3bcfb
  41f70c:	popf   
  41f70d:	jo     0x41f760
  41f70f:	cli    
  41f710:	je     0x41f6b7
  41f712:	jmp    0x64a350ab
  41f717:	and    ebp,DWORD PTR [edi-0x5f]
  41f71a:	mov    WORD PTR [eax-0x4c2ae30],fs
  41f720:	call   0x6728b7e1
  41f725:	inc    eax
  41f726:	adc    ebx,edi
  41f728:	xor    al,0xf4
  41f72a:	mov    BYTE PTR [ebp-0xf],0x9f
  41f72e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f72f:	call   0x6c26:0x960638b4
  41f736:	mov    bh,ch
  41f738:	clc    
  41f739:	jo     0x41f755
  41f73b:	add    al,0x67
  41f73d:	dec    esi
  41f73e:	inc    esi
  41f73f:	pop    ebp
  41f740:	repz fsubp st(1),st
  41f743:	cmp    al,bl
  41f745:	or     al,0xfa
  41f747:	into   
  41f748:	in     eax,0xa0
  41f74a:	ror    al,1
  41f74c:	int    0x1e
  41f74e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f74f:	mov    esi,0x45b7b75d
  41f754:	ss pop ds
  41f756:	jns    0x41f78a
  41f758:	or     ebx,DWORD PTR [edx+0x6a]
  41f75b:	mov    esp,0x22d6507
  41f760:	cmc    
  41f761:	cs (bad) 
  41f764:	rcl    BYTE PTR [edi],1
  41f766:	retf   0x45f2
  41f769:	(bad)  
  41f76a:	cs pop ebp
  41f76c:	std    
  41f76d:	pop    edx
  41f76e:	icebp  
  41f76f:	fsubr  QWORD PTR [edx]
  41f771:	inc    edx
  41f772:	int3   
  41f773:	xchg   BYTE PTR [esi],bh
  41f775:	adc    bh,BYTE PTR [esi+edx*4]
  41f778:	call   0x734c:0xbbe4e411
  41f77f:	xor    al,BYTE PTR [edi+0x6f]
  41f782:	mov    ebx,0x2610fa79
  41f787:	call   0xb26274af
  41f78c:	js     0x41f72e
  41f78e:	pop    edi
  41f78f:	sbb    eax,0x670d2d63
  41f794:	adc    eax,0x9ffe1e0e
  41f799:	lods   eax,DWORD PTR ds:[esi]
  41f79a:	or     al,0x32
  41f79c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f79d:	mov    WORD PTR [ecx-0x7e608858],?
  41f7a3:	ret    
  41f7a4:	xchg   edx,eax
  41f7a5:	jmp    0x73d18095
  41f7aa:	cdq    
  41f7ab:	xor    cl,BYTE PTR [edi+eax*1]
  41f7ae:	popa   
  41f7af:	adc    eax,DWORD PTR [ebp+eiz*1+0x73]
  41f7b3:	cmc    
  41f7b4:	sub    DWORD PTR [ebx+0x206340f0],ebp
  41f7ba:	inc    edi
  41f7bb:	dec    ebp
  41f7bc:	fnstenv [esi+0x8]
  41f7bf:	mov    bl,0x76
  41f7c1:	adc    dh,dh
  41f7c3:	sbb    ebx,esi
  41f7c5:	xchg   DWORD PTR [edi-0x2a],esp
  41f7c8:	lock fcom QWORD PTR [ecx-0x4a]
  41f7cc:	fcmovnbe st,st(5)
  41f7ce:	xchg   dl,al
  41f7d0:	dec    ecx
  41f7d1:	pop    esi
  41f7d2:	outs   dx,DWORD PTR ds:[esi]
  41f7d3:	popa   
  41f7d4:	inc    ecx
  41f7d5:	adc    esi,DWORD PTR [eax-0x3c]
  41f7d8:	out    0xbc,eax
  41f7da:	jg     0x41f795
  41f7dc:	pop    ebp
  41f7dd:	mov    ebx,0xdbda6926
  41f7e2:	push   ebp
  41f7e3:	mov    ah,BYTE PTR [esi-0x8a673fb]
  41f7e9:	mov    esi,0x9e261834
  41f7ee:	rcr    dh,0x94
  41f7f1:	mov    eax,0x547c9c1d
  41f7f6:	dec    ebx
  41f7f7:	xor    edx,eax
  41f7f9:	pop    ds
  41f7fa:	adc    ebx,ecx
  41f7fc:	test   DWORD PTR ds:0xdbbf78d1,edx
  41f802:	stos   DWORD PTR es:[edi],eax
  41f803:	jl     0x41f7de
  41f805:	js     0x41f87b
  41f807:	fldenv [edx+edi*2-0x14836733]
  41f80e:	mov    DWORD PTR [esi+0x7564c682],edi
  41f814:	(bad)  
  41f815:	pushf  
  41f816:	jmp    0x41f851
  41f818:	lods   al,BYTE PTR ds:[esi]
  41f819:	xor    al,0x89
  41f81b:	fs add al,0xfc
  41f81e:	jne    0x41f7ba
  41f820:	into   
  41f821:	ds dec esi
  41f823:	add    eax,DWORD PTR [ecx+0x1ba0cd7d]
  41f829:	dec    esi
  41f82a:	dec    eax
  41f82b:	mov    al,0x71
  41f82d:	cwde   
  41f82e:	xchg   BYTE PTR [ecx-0xd],bl
  41f831:	popf   
  41f832:	jbe    0x41f86e
  41f834:	mov    edi,0x30f8af65
  41f839:	lods   al,BYTE PTR ds:[esi]
  41f83a:	and    BYTE PTR [edx+eiz*2-0x65f920db],0x77
  41f842:	dec    esp
  41f843:	inc    ebx
  41f844:	push   cs
  41f845:	or     bh,bl
  41f847:	aaa    
  41f848:	(bad)  
  41f84a:	loopne 0x41f89b
  41f84c:	mov    esi,0x90450f75
  41f851:	lea    edi,[edx]
  41f853:	add    esi,DWORD PTR [ecx+0x6efd21de]
  41f859:	xchg   BYTE PTR [eax-0x12],ah
  41f85c:	sub    al,0x25
  41f85e:	call   0xec02:0x9dddd6ff
  41f865:	or     esi,DWORD PTR [edx]
  41f867:	and    ah,0x82
  41f86a:	jp     0x41f7f3
  41f86c:	(bad)  
  41f86d:	rcr    DWORD PTR [ebx],cl
  41f86f:	pop    edx
  41f870:	and    eax,0xe74de210
  41f875:	leave  
  41f876:	mov    edi,0x27b1f74
  41f87b:	data16 mov ah,0x8f
  41f87e:	mov    edx,0x4b72a2d
  41f883:	and    al,0xd
  41f885:	(bad)  
  41f886:	fsubr  QWORD PTR [edx-0x7d]
  41f889:	bt     DWORD PTR [ebp+0x7bb437f2],edx
  41f890:	fwait
  41f891:	ins    DWORD PTR es:[edi],dx
  41f892:	int    0xe4
  41f894:	dec    esi
  41f895:	pop    ds
  41f896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f897:	test   al,0xc8
  41f899:	inc    edx
  41f89a:	and    al,0x55
  41f89c:	jmp    0x41f8d3
  41f89e:	sar    DWORD PTR [ecx+0xfbef5cb],1
  41f8a4:	dec    eax
  41f8a5:	xchg   esp,eax
  41f8a6:	push   esp
  41f8a7:	jecxz  0x41f873
  41f8a9:	jmp    0x41f882
  41f8ab:	cmp    al,0x73
  41f8ad:	arpl   WORD PTR ds:0x8d90e76f,bx
  41f8b3:	pop    ecx
  41f8b4:	xchg   ebx,eax
  41f8b5:	fnstsw WORD PTR [edi-0x20]
  41f8b8:	pop    esp
  41f8b9:	sub    BYTE PTR [ebx],ch
  41f8bb:	mov    eax,ds:0x705ab1df
  41f8c0:	xchg   ecx,eax
  41f8c1:	dec    esi
  41f8c2:	pop    ebp
  41f8c3:	in     eax,0x76
  41f8c5:	push   es
  41f8c6:	cmp    DWORD PTR [edx],esi
  41f8c8:	or     ebp,DWORD PTR [edx+ebp*2-0x3ea6bd26]
  41f8cf:	hlt    
  41f8d0:	(bad)  
  41f8d1:	enter  0xbe96,0x86
  41f8d5:	fcom   QWORD PTR [esi]
  41f8d7:	xor    BYTE PTR [ebx+0x7af2563c],dh
  41f8dd:	mov    edx,edx
  41f8df:	or     DWORD PTR [ebx-0x828b899],esi
  41f8e5:	sub    esp,eax
  41f8e7:	jo     0x41f886
  41f8e9:	xchg   esi,eax
  41f8ea:	or     al,0x85
  41f8ec:	mov    cl,ah
  41f8ee:	adc    DWORD PTR [edx+0x60],ebp
  41f8f1:	and    DWORD PTR [esi+edx*2],esp
  41f8f4:	loopne 0x41f93f
  41f8f6:	loopne 0x41f934
  41f8f8:	or     ebx,ebx
  41f8fa:	xchg   esi,eax
  41f8fb:	mov    esp,0xd2d31754
  41f900:	lds    ebx,FWORD PTR [ebp-0x68f6fb3c]
  41f906:	push   es
  41f907:	mov    al,BYTE PTR [esi+ebx*2]
  41f90a:	cwde   
  41f90b:	and    DWORD PTR [ecx+0x79],esp
  41f90e:	loop   0x41f91d
  41f910:	mov    dl,0xfd
  41f912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f913:	out    0x35,al
  41f915:	cwde   
  41f916:	mov    bh,0xb0
  41f918:	into   
  41f919:	test   DWORD PTR [ecx],ebx
  41f91b:	pop    ss
  41f91c:	jo     0x41f933
  41f91e:	sti    
  41f91f:	call   0x1c224f9a
  41f924:	popf   
  41f925:	outs   dx,DWORD PTR ds:[esi]
  41f926:	and    DWORD PTR [edx+0x18d95dad],ebx
  41f92c:	in     eax,0x82
  41f92e:	sub    esi,DWORD PTR ds:0x55251d44
  41f934:	lea    edi,[ecx-0x35]
  41f937:	or     eax,0x2b182231
  41f93c:	xchg   ebp,eax
  41f93d:	int3   
  41f93e:	fmulp  st(0),st
  41f940:	cdq    
  41f941:	imul   esp,DWORD PTR [esi+0x31af3f95],0x7f
  41f948:	stos   BYTE PTR es:[edi],al
  41f949:	pop    DWORD PTR [edx+edx*8+0xd]
  41f94d:	cmp    al,0x5d
  41f94f:	jne    0x41f9a9
  41f951:	rcr    edi,0x95
  41f954:	shl    ah,1
  41f956:	dec    ecx
  41f957:	push   0xffffffbf
  41f959:	pushf  
  41f95a:	mov    bh,0x2e
  41f95c:	xchg   esp,eax
  41f95d:	mov    ds:0xdc171089,eax
  41f962:	aam    0x7f
  41f964:	out    dx,eax
  41f965:	popf   
  41f966:	arpl   WORD PTR [edi],dx
  41f968:	idiv   BYTE PTR [ebp-0x7c361d50]
  41f96e:	sub    bl,dl
  41f970:	push   ss
  41f971:	push   ecx
  41f972:	add    eax,0xb7e5f5be
  41f977:	inc    eax
  41f978:	sub    cl,BYTE PTR [ecx-0x37c6daa]
  41f97e:	sub    eax,0x861198eb
  41f983:	and    BYTE PTR [esi+eiz*8-0x1d1cf21a],cl
  41f98a:	or     ebx,edx
  41f98c:	rcl    BYTE PTR [ecx+ecx*8-0x5c],0xe
  41f991:	push   esi
  41f992:	mov    cl,0x44
  41f994:	mov    ebx,0xad49e6ea
  41f999:	int3   
  41f99a:	adc    al,BYTE PTR [edx+0x15]
  41f99d:	dec    ebp
  41f99e:	mov    bh,0x8d
  41f9a0:	push   es
  41f9a1:	and    eax,0xb339c195
  41f9a6:	xchg   edi,eax
  41f9a7:	(bad)  
  41f9a8:	xlat   BYTE PTR ds:[ebx]
  41f9a9:	call   0x8f19:0x1daed0e2
  41f9b0:	test   BYTE PTR [ebx],bl
  41f9b2:	cmp    al,0xd1
  41f9b4:	mov    ch,0xb9
  41f9b6:	pop    edi
  41f9b7:	cld    
  41f9b8:	addr16 jl 0x41f9b6
  41f9bb:	jne    0x41f95a
  41f9bd:	pop    ds
  41f9be:	pop    ss
  41f9bf:	pop    ds
  41f9c0:	pusha  
  41f9c1:	into   
  41f9c2:	out    0xf3,al
  41f9c4:	push   esi
  41f9c5:	dec    esi
  41f9c6:	lods   eax,DWORD PTR ds:[esi]
  41f9c7:	push   eax
  41f9c8:	out    dx,al
  41f9c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9ca:	loopne 0x41f9f0
  41f9cc:	out    dx,eax
  41f9cd:	jl     0x41f987
  41f9cf:	cld    
  41f9d0:	loope  0x41f9b0
  41f9d2:	jae    0x41f9ef
  41f9d4:	popf   
  41f9d5:	jne    0x41f9c4
  41f9d7:	pop    ebx
  41f9d8:	test   al,0xaa
  41f9da:	iret   
  41f9db:	dec    esp
  41f9dc:	and    eax,0xa1e8f94e
  41f9e1:	bound  esp,QWORD PTR [edx+ebx*4-0x459f52ed]
  41f9e8:	sub    eax,0x3292b0d3
  41f9ed:	mov    ebp,edx
  41f9ef:	or     esp,DWORD PTR [ebx+0x52c042dc]
  41f9f5:	repnz dec si
  41f9f8:	push   cs
  41f9f9:	push   esi
  41f9fa:	inc    edx
  41f9fb:	pop    es
  41f9fc:	les    ecx,FWORD PTR [edx]
  41f9fe:	adc    eax,0xeebde51b
  41fa03:	mov    ebp,DWORD PTR ds:0xf1057a03
  41fa09:	aas    
  41fa0a:	stos   DWORD PTR es:[edi],eax
  41fa0b:	dec    ebx
  41fa0c:	(bad)  
  41fa0e:	mov    esi,eax
  41fa10:	sbb    eax,0x94700ab8
  41fa15:	or     eax,0x113451e1
  41fa1a:	mov    bl,0x94
  41fa1c:	dec    ebp
  41fa1d:	adc    al,0xa7
  41fa1f:	mov    ebp,fs
  41fa21:	call   FWORD PTR [ebx-0x3a3c30e2]
  41fa27:	cmp    al,0x4a
  41fa29:	cwde   
  41fa2a:	pop    ebx
  41fa2b:	mov    esi,DWORD PTR [ebx+0x1fea508b]
  41fa31:	ret    0x504b
  41fa34:	ins    DWORD PTR es:[edi],dx
  41fa35:	es aad 0x85
  41fa38:	and    eax,0xdf5510d0
  41fa3d:	shr    DWORD PTR [edi-0x63f5682b],cl
  41fa43:	xchg   esi,eax
  41fa44:	fidivr WORD PTR [esi-0x19]
  41fa47:	or     dh,dl
  41fa49:	lock mov BYTE PTR [bx-0x3de2],dh
  41fa4f:	push   edx
  41fa50:	jno    0x41fac5
  41fa52:	jl     0x41fa20
  41fa54:	call   ebx
  41fa56:	pop    edi
  41fa57:	sbb    ebx,DWORD PTR [esi-0x3]
  41fa5a:	xor    DWORD PTR [ebx-0x5b],esi
  41fa5d:	popa   
  41fa5e:	inc    esi
  41fa5f:	das    
  41fa60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa61:	sahf   
  41fa62:	outs   dx,DWORD PTR ds:[esi]
  41fa63:	xchg   edi,eax
  41fa64:	mov    esp,0x1b417d98
  41fa69:	mov    esp,0xf3c3433d
  41fa6e:	xor    bh,BYTE PTR [ebx+0x5b]
  41fa71:	out    dx,eax
  41fa72:	ja     0x41f9f6
  41fa74:	adc    al,0xfc
  41fa76:	adc    ebx,DWORD PTR [edi+0x21669771]
  41fa7c:	adc    BYTE PTR [edx],bh
  41fa7e:	cmc    
  41fa7f:	clc    
  41fa80:	jbe    0x41fa31
  41fa82:	inc    ecx
  41fa83:	or     DWORD PTR [ebx+esi*1],edx
  41fa86:	xlat   BYTE PTR ds:[ebx]
  41fa87:	arpl   WORD PTR [edi],bp
  41fa89:	pop    esp
  41fa8a:	in     al,0x7e
  41fa8c:	pushf  
  41fa8d:	mov    edi,0x3e3e11fb
  41fa92:	aam    0x86
  41fa94:	xchg   BYTE PTR [edx+0x4bdb5876],ah
  41fa9a:	lock adc al,0x54
  41fa9d:	jae    0x41fa2f
  41fa9f:	repz jl 0x41fa82
  41faa2:	sti    
  41faa3:	pop    eax
  41faa4:	sahf   
  41faa5:	mov    ds:0xc3b5ef4a,eax
  41faaa:	jmp    0x41fa9b
  41faac:	mov    ch,BYTE PTR ds:0xa5fc5f1c
  41fab2:	mov    esp,0x5e2cad25
  41fab7:	or     al,0xda
  41fab9:	cmp    edi,DWORD PTR [ecx-0x20]
  41fabc:	(bad)  
  41fabd:	sbb    al,0x38
  41fabf:	imul   ecx,DWORD PTR [ecx+esi*8-0x7],0xdc1452f9
  41fac7:	push   ds
  41fac8:	adc    eax,0xb9c6aaf5
  41facd:	scas   eax,DWORD PTR es:[edi]
  41face:	jae    0x41fb04
  41fad0:	pslld  mm2,QWORD PTR [ebp+0x16]
  41fad4:	fucomp st(7)
  41fad6:	fnstcw WORD PTR [edx-0x24]
  41fad9:	inc    esi
  41fada:	xlat   BYTE PTR ds:[ebx]
  41fadb:	ror    DWORD PTR [ebp-0x6c3118f7],1
  41fae1:	test   al,0xbb
  41fae3:	leave  
  41fae4:	aaa    
  41fae5:	aad    0x7b
  41fae7:	rcr    BYTE PTR [edi+0x4780ac6b],0x7c
  41faee:	jns    0x41fb50
  41faf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faf1:	(bad)  
  41faf2:	ss enter 0x80af,0x7c
  41faf7:	mov    ebx,esp
  41faf9:	mov    ds:0x1d303abc,eax
  41fafe:	jg     0x41fb43
  41fb00:	push   es
  41fb01:	jmp    0x41fb7e
  41fb03:	dec    edx
  41fb04:	xchg   edx,eax
  41fb05:	les    eax,FWORD PTR [edi+0x75c543e3]
  41fb0b:	push   edx
  41fb0c:	jmp    0x41fa94
  41fb0e:	fnsave [edx+0x51235d2e]
  41fb14:	lods   al,BYTE PTR ds:[esi]
  41fb15:	scas   eax,DWORD PTR es:[edi]
  41fb16:	xlat   BYTE PTR ds:[ebx]
  41fb17:	arpl   WORD PTR [edx],bp
  41fb19:	dec    edx
  41fb1a:	pushf  
  41fb1b:	push   eax
  41fb1c:	scas   eax,DWORD PTR es:[edi]
  41fb1d:	pushf  
  41fb1e:	(bad)  
  41fb22:	inc    esi
  41fb23:	test   BYTE PTR [ebx],bh
  41fb25:	stos   BYTE PTR es:[edi],al
  41fb26:	sub    al,0x4d
  41fb28:	and    BYTE PTR cs:[edi],ch
  41fb2b:	scas   eax,DWORD PTR es:[edi]
  41fb2c:	stos   DWORD PTR es:[edi],eax
  41fb2d:	mov    ecx,0xe883693d
  41fb32:	xchg   edx,eax
  41fb33:	cwde   
  41fb34:	fwait
  41fb35:	or     DWORD PTR [edx+ecx*2-0xf],esp
  41fb39:	shr    BYTE PTR [edx-0x257b2dc6],1
  41fb3f:	mov    edx,0xf588d207
  41fb44:	jne    0x41fb2f
  41fb46:	(bad)  
  41fb47:	mov    edi,0x12bfb2c7
  41fb4c:	xchg   dl,dl
  41fb4e:	loope  0x41fb24
  41fb50:	pop    eax
  41fb51:	push   ecx
  41fb52:	aaa    
  41fb53:	pushf  
  41fb54:	cmp    DWORD PTR [esi+edx*1-0x60],ebp
  41fb58:	shl    esi,1
  41fb5a:	loope  0x41fb15
  41fb5c:	cmc    
  41fb5d:	cdq    
  41fb5e:	ja     0x41fbd2
  41fb60:	and    al,0xb1
  41fb62:	xor    eax,DWORD PTR [ebp+0x2c99aebb]
  41fb68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb69:	push   edx
  41fb6a:	push   esi
  41fb6b:	sub    ch,BYTE PTR [ecx+0x60f329e7]
  41fb71:	ret    
  41fb72:	pushf  
  41fb73:	and    eax,DWORD PTR [edi+0x2c]
  41fb76:	(bad)  
  41fb77:	aas    
  41fb78:	arpl   bp,si
  41fb7a:	sti    
  41fb7b:	mov    cl,0xf0
  41fb7d:	dec    ecx
  41fb7e:	inc    ebx
  41fb7f:	mov    ch,0xbf
  41fb81:	icebp  
  41fb82:	inc    esp
  41fb83:	loop   0x41fbec
  41fb85:	test   DWORD PTR [ebx-0x44],ebp
  41fb88:	add    al,0xd7
  41fb8a:	icebp  
  41fb8b:	rcr    BYTE PTR [edx+0x2],0x11
  41fb8f:	cmp    eax,0x23be4ab2
  41fb94:	shr    DWORD PTR [ebp+0x3f],cl
  41fb97:	out    0x57,eax
  41fb99:	sub    edx,esp
  41fb9b:	popf   
  41fb9c:	test   BYTE PTR [ecx+eiz*4],0x5b
  41fba0:	scas   eax,DWORD PTR es:[edi]
  41fba1:	mov    al,ds:0x17b20aa8
  41fba6:	gs pop eax
  41fba8:	mov    ebp,0xe56658
  41fbad:	fcmovu st,st(4)
  41fbaf:	(bad)  
  41fbb0:	jp     0x41fb99
  41fbb2:	pop    edx
  41fbb3:	cmc    
  41fbb4:	cld    
  41fbb5:	bound  ebx,QWORD PTR [ebx+0x3e]
  41fbb8:	(bad)  
  41fbba:	(bad)  
  41fbbb:	vmwrite ebp,DWORD PTR [edx]
  41fbbe:	dec    edi
  41fbbf:	push   ecx
  41fbc0:	cs xor dh,bh
  41fbc3:	clc    
  41fbc4:	pop    edi
  41fbc5:	test   BYTE PTR [eax],al
  41fbc7:	shl    ecx,1
  41fbc9:	loope  0x41fb7b
  41fbcb:	cmc    
  41fbcc:	jmp    0xa7fe:0xee854033
  41fbd3:	mov    dh,0xc8
  41fbd5:	or     cl,dh
  41fbd7:	pop    edi
  41fbd8:	das    
  41fbd9:	adc    DWORD PTR ds:0xcd23917c,0xfffffffd
  41fbe0:	(bad)  
  41fbe2:	cs out dx,eax
  41fbe4:	ds in  eax,0xb
  41fbe7:	inc    eax
  41fbe8:	mov    esi,0xb509c7e4
  41fbed:	ja     0x41fbaa
  41fbef:	push   cs
  41fbf0:	les    eax,FWORD PTR [edi+eax*2-0x6b470397]
  41fbf7:	cs pop esi
  41fbf9:	sbb    BYTE PTR [esi+eax*1+0x540e6d90],dh
  41fc00:	dec    ebp
  41fc01:	inc    eax
  41fc02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc03:	das    
  41fc04:	adc    ecx,DWORD PTR [eax+0x66]
  41fc07:	mov    edx,0xab8aa935
  41fc0c:	addr16 mov cl,0x9c
  41fc0f:	xchg   DWORD PTR [eax-0x38],esi
  41fc12:	jae    0x41fc72
  41fc14:	fldcw  WORD PTR ds:0x6ceaf249
  41fc1a:	loopne 0x41fba6
  41fc1c:	mov    ss,WORD PTR [esi+0x16bad3d2]
  41fc22:	out    dx,al
  41fc23:	cmp    eax,DWORD PTR [esi]
  41fc25:	(bad)  [edi-0x35029ea8]
  41fc2b:	retf   
  41fc2c:	sbb    al,0xf1
  41fc2e:	fbstp  TBYTE PTR [ebx+0x16]
  41fc31:	xchg   esi,eax
  41fc32:	mov    esp,0xf321b25e
  41fc37:	stc    
  41fc38:	add    al,0x17
  41fc3a:	sbb    eax,edx
  41fc3c:	scas   al,BYTE PTR es:[edi]
  41fc3d:	cmp    ch,ch
  41fc3f:	mov    bh,BYTE PTR [esi]
  41fc41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc42:	iret   
  41fc43:	rol    eax,0xe2
  41fc46:	bound  ebp,QWORD PTR gs:[ebp-0x61aae147]
  41fc4d:	sub    cl,BYTE PTR [eax-0x16c8f7e5]
  41fc53:	jno    0x41fc4e
  41fc55:	in     eax,0x88
  41fc57:	cmp    esi,0x1b527e9e
  41fc5d:	add    BYTE PTR [edx-0x37],ch
  41fc60:	dec    ecx
  41fc61:	(bad)  
  41fc62:	jmp    0x6f4b9f8
  41fc67:	ret    0x41e1
  41fc6a:	arpl   WORD PTR [ebp-0x2c],si
  41fc6d:	cmp    al,0xb4
  41fc6f:	int    0xe7
  41fc71:	xchg   esp,eax
  41fc72:	xchg   ecx,eax
  41fc73:	clc    
  41fc74:	cli    
  41fc75:	xor    eax,0x3d8b90fb
  41fc7a:	push   ss
  41fc7b:	(bad)  
  41fc7c:	in     eax,0xae
  41fc7e:	std    
  41fc7f:	or     al,0x74
  41fc81:	or     eax,0xf143c6df
  41fc86:	pop    edx
  41fc87:	push   0x64
  41fc89:	nop
  41fc8a:	jne    0x41fc90
  41fc8c:	and    DWORD PTR [edx+ebx*1+0x5b],0x3b8fb556
  41fc94:	inc    edi
  41fc95:	arpl   WORD PTR [esp+ecx*1+0x3e],dx
  41fc99:	into   
  41fc9a:	or     cl,BYTE PTR [ebp-0x274fe2bf]
  41fca0:	push   ebx
  41fca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fca2:	sub    al,0xe2
  41fca4:	mov    bl,0x79
  41fca6:	xchg   ebx,eax
  41fca7:	adc    DWORD PTR [edx],0xffffffd3
  41fcaa:	sbb    BYTE PTR [eax+edi*4+0x1c],bl
  41fcae:	jle    0x41fc9b
  41fcb0:	sbb    ch,bl
  41fcb2:	clc    
  41fcb3:	fcomp  st(3)
  41fcb5:	cmp    DWORD PTR [edi],eax
  41fcb7:	pop    esi
  41fcb8:	or     eax,0x1ffac27
  41fcbd:	sbb    DWORD PTR [esi+0x3a],edi
  41fcc0:	mov    WORD PTR [ebx+ebx*1],cs
  41fcc3:	push   edi
  41fcc4:	push   ebx
  41fcc5:	stc    
  41fcc6:	mov    edx,0xaca2140c
  41fccb:	test   BYTE PTR [ecx],dl
  41fccd:	gs ret 
  41fccf:	ficom  DWORD PTR [ebp-0x624763d]
  41fcd5:	mov    ds:0x2e7ee678,eax
  41fcda:	jg     0x41fcc5
  41fcdc:	mov    cs,WORD PTR [edx+0x56]
  41fcdf:	xor    al,0x97
  41fce1:	out    dx,al
  41fce2:	mov    dh,0x4a
  41fce4:	std    
  41fce5:	ret    0xcd82
  41fce8:	pop    ebx
  41fce9:	jl     0x41fd47
  41fceb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcec:	xchg   edi,eax
  41fced:	scas   eax,DWORD PTR es:[edi]
  41fcee:	push   ebx
  41fcef:	push   ebx
  41fcf0:	cmp    ah,BYTE PTR [eax+0x5c]
  41fcf3:	ss inc edx
  41fcf5:	mov    edi,0xec2fc4eb
  41fcfa:	loope  0x41fd6b
  41fcfc:	add    edx,DWORD PTR [ebx+0xf]
  41fcff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd00:	test   al,0x82
  41fd02:	push   edi
  41fd03:	ret    0xc8d
  41fd06:	sbb    bh,BYTE PTR [ebp+0x48]
  41fd09:	frstor [ebp-0x6f78594d]
  41fd0f:	and    bl,bl
  41fd11:	pop    ecx
  41fd12:	rcl    BYTE PTR [esi-0x4a],0x6d
  41fd16:	test   eax,0x8379d45c
  41fd1b:	div    BYTE PTR [ebx]
  41fd1d:	adc    eax,0xb5f6704f
  41fd22:	or     ah,BYTE PTR [eax+0x1e63cd7f]
  41fd28:	mov    esp,esp
  41fd2a:	pop    eax
  41fd2b:	fbstp  TBYTE PTR [ebx-0x16]
  41fd2e:	sub    eax,0x570b1e5e
  41fd33:	jecxz  0x41fd97
  41fd35:	adc    BYTE PTR [ebp+esi*1+0x7f5225cf],al
  41fd3c:	adc    ebp,DWORD PTR [edx+edi*8-0x3d]
  41fd40:	jmp    0xd60e695b
  41fd45:	push   esp
  41fd46:	out    dx,eax
  41fd47:	out    0x23,eax
  41fd49:	stos   DWORD PTR es:[edi],eax
  41fd4a:	jnp    0x41fda0
  41fd4c:	inc    ecx
  41fd4d:	jae    0x41fd0a
  41fd4f:	mov    ?,WORD PTR [esi]
  41fd51:	jle    0x41fd71
  41fd53:	xor    DWORD PTR [edi-0x80],esi
  41fd56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd57:	dec    esp
  41fd58:	shl    ch,cl
  41fd5a:	int3   
  41fd5b:	pop    es
  41fd5c:	(bad)  
  41fd5d:	and    eax,0x997144f7
  41fd62:	shr    edi,cl
  41fd64:	ja     0x41fd15
  41fd66:	mov    al,dl
  41fd68:	iret   
  41fd69:	dec    esp
  41fd6a:	out    dx,eax
  41fd6b:	mov    ah,0x2d
  41fd6d:	and    eax,0x6ec8a8d1
  41fd72:	rcr    DWORD PTR [eax-0x170b0432],1
  41fd78:	push   ecx
  41fd79:	std    
  41fd7a:	or     eax,0x5f0ccc87
  41fd7f:	sbb    DWORD PTR [edx-0x7750b4d2],0x716455a4
  41fd89:	inc    edi
  41fd8a:	add    DWORD PTR [esi-0x1e517b6],0x2a469ef4
  41fd94:	fcomp  QWORD PTR [ebx-0x3f]
  41fd97:	mov    eax,ds:0x20d9f3f0
  41fd9c:	mov    ds,WORD PTR [ebp-0x6f704a6]
  41fda2:	mov    ah,0xe5
  41fda4:	mov    WORD PTR [eax-0x40],fs
  41fda7:	or     BYTE PTR [ebx+0x0],ah
  41fdaa:	cld    
  41fdab:	sub    ebp,DWORD PTR [ecx+0x45382a11]
  41fdb1:	stos   BYTE PTR es:[edi],al
  41fdb2:	aam    0x40
  41fdb4:	repz mov al,0x61
  41fdb7:	push   ebp
  41fdb8:	push   ebp
  41fdb9:	xor    bl,BYTE PTR [ecx-0x40]
  41fdbc:	jecxz  0x41fd75
  41fdbe:	and    bl,BYTE PTR [ebp+0x6b]
  41fdc1:	mov    DWORD PTR [eax],eax
  41fdc3:	je     0x41fdd0
  41fdc5:	mov    esp,0xf8ecc146
  41fdca:	ds js  0x41fdf9
  41fdcd:	stos   DWORD PTR es:[edi],eax
  41fdce:	inc    ebx
  41fdcf:	cmp    eax,0x58fc0cba
  41fdd4:	push   edx
  41fdd5:	xchg   DWORD PTR [esi+0x25197a0c],edx
  41fddb:	fndisi(8087 only) 
  41fddd:	add    al,0xc
  41fddf:	jle    0x41fdba
  41fde1:	out    0x5d,al
  41fde3:	add    DWORD PTR [edi+0x3b],0x56
  41fde7:	and    BYTE PTR [ecx+0x3317546a],ah
  41fded:	add    al,0x2e
  41fdef:	das    
  41fdf0:	ins    BYTE PTR es:[edi],dx
  41fdf1:	cmp    al,0x37
  41fdf3:	dec    esi
  41fdf4:	or     eax,0x9f8b1652
  41fdf9:	lea    edx,[esi]
  41fdfb:	jb     0x41fe07
  41fdfd:	jg     0x41fde9
  41fdff:	bound  esi,QWORD PTR [ebx]
  41fe01:	jecxz  0x41fe58
  41fe03:	mov    eax,0x83bedd2c
  41fe08:	sub    DWORD PTR [esi-0x4a],ebp
  41fe0b:	push   dx
  41fe0d:	and    al,0x24
  41fe0f:	je     0x41fdd7
  41fe11:	jmp    0x41fdbe
  41fe13:	xor    al,0xb7
  41fe15:	or     ecx,DWORD PTR [edi+0x3f811494]
  41fe1b:	inc    esp
  41fe1c:	dec    ax
  41fe1e:	sub    DWORD PTR [eax+0x2],edi
  41fe21:	pop    eax
  41fe22:	mov    dh,0x76
  41fe24:	cmp    eax,0x5a27e4bc
  41fe29:	push   edx
  41fe2a:	fs repnz xchg esi,eax
  41fe2d:	dec    esi
  41fe2e:	pushf  
  41fe2f:	push   eax
  41fe30:	sbb    edx,DWORD PTR [ebx]
  41fe32:	imul   ebx,DWORD PTR [edi+edx*2-0x32642d1b],0x3f74b7c3
  41fe3d:	mov    eax,0xb1974893
  41fe42:	cli    
  41fe43:	mov    ah,0x7c
  41fe45:	inc    edi
  41fe46:	das    
  41fe47:	in     al,0xc5
  41fe49:	sbb    eax,0xa092e385
  41fe4e:	sahf   
  41fe4f:	call   0x990c:0xc950903c
  41fe56:	sahf   
  41fe57:	dec    ebp
  41fe58:	cmp    ebp,DWORD PTR [edx]
  41fe5a:	mov    dh,ah
  41fe5c:	aad    0xf2
  41fe5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe5f:	mov    BYTE PTR [ecx-0x7e],dl
  41fe62:	push   0x3b
  41fe64:	test   al,0x67
  41fe66:	outs   dx,BYTE PTR ds:[si]
  41fe68:	mov    BYTE PTR [edx+0x10],0x66
  41fe6c:	jmp    0x41fe3e
  41fe6e:	(bad)  
  41fe6f:	jge    0x41fee4
  41fe71:	fmul   st(6),st
  41fe73:	or     al,0x8
  41fe75:	stos   DWORD PTR es:[edi],eax
  41fe76:	jb     0x41fe99
  41fe78:	retf   0x7263
  41fe7b:	or     ch,BYTE PTR [eax+0x2]
  41fe7e:	leave  
  41fe7f:	push   cs
  41fe80:	lods   al,BYTE PTR ds:[esi]
  41fe81:	mov    esi,0x69b88b2f
  41fe86:	cmp    esi,DWORD PTR [eax]
  41fe88:	push   ss
  41fe89:	inc    edx
  41fe8a:	in     eax,dx
  41fe8b:	iret   
  41fe8c:	retf   0x4fef
  41fe8f:	pop    ebx
  41fe90:	dec    ebp
  41fe91:	xchg   esi,eax
  41fe92:	mov    esi,DWORD PTR [eax+0x3d0a13eb]
  41fe98:	stos   DWORD PTR es:[edi],eax
  41fe99:	push   ebx
  41fe9a:	mov    edi,0xd0f8bb43
  41fe9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fea0:	leave  
  41fea1:	add    dl,BYTE PTR [eax]
  41fea3:	xor    esi,edi
  41fea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fea6:	ret    
  41fea7:	aam    0x27
  41fea9:	xchg   ebp,eax
  41feaa:	mov    DWORD PTR [ecx],ebx
  41feac:	push   eax
  41fead:	inc    ebx
  41feae:	iret   
  41feaf:	jmp    0xd38c:0xd2dae432
  41feb6:	cmc    
  41feb7:	add    esp,DWORD PTR [ebx]
  41feb9:	jge    0x41fe86
  41febb:	inc    ecx
  41febc:	lods   al,BYTE PTR ds:[esi]
  41febd:	in     eax,0x65
  41febf:	xlat   BYTE PTR ds:[ebx]
  41fec0:	inc    eax
  41fec1:	lods   eax,DWORD PTR es:[esi]
  41fec3:	and    ah,dh
  41fec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fec6:	mov    eax,0xc1ed77c4
  41fecb:	mov    eax,0x5e3276c8
  41fed0:	ltr    WORD PTR [ebp+0x49]
  41fed4:	test   bl,cl
  41fed6:	retf   
  41fed7:	into   
  41fed8:	push   ds
  41fed9:	push   ebx
  41feda:	out    0xa9,eax
  41fedc:	sub    al,0x2f
  41fede:	mov    DWORD PTR [eax+edi*1-0x5ed47f14],esp
  41fee5:	retf   
  41fee6:	inc    esi
  41fee7:	gs aad 0x68
  41feea:	test   BYTE PTR [ebp+0x632be4d8],ah
  41fef0:	ret    0x3661
  41fef3:	daa    
  41fef4:	and    al,0x5a
  41fef6:	sbb    dh,ah
  41fef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fef9:	or     al,0xe2
  41fefb:	sub    ch,cl
  41fefd:	xchg   edi,eax
  41fefe:	call   0x595:0x25f70433
  41ff05:	(bad)  
  41ff06:	(bad)  
  41ff07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff08:	adc    dh,BYTE PTR [edx-0x5b]
  41ff0b:	inc    ebp
  41ff0c:	ds mov dl,0x2a
  41ff0f:	fistp  WORD PTR [ebp-0x789a2f20]
  41ff15:	dec    DWORD PTR ds:0x3a7c8636
  41ff1b:	dec    DWORD PTR [eax-0x614a8b37]
  41ff21:	repnz pushf 
  41ff23:	aaa    
  41ff24:	or     al,ah
  41ff26:	xor    BYTE PTR [esi],0xfd
  41ff29:	pop    edi
  41ff2a:	xor    BYTE PTR [edi+0x14],ah
  41ff2d:	stc    
  41ff2e:	mov    dh,0x83
  41ff30:	push   ebp
  41ff31:	in     eax,dx
  41ff32:	in     eax,dx
  41ff33:	cmp    DWORD PTR [ebp-0x11],edi
  41ff36:	leave  
  41ff37:	jns    0x41ff2d
  41ff39:	retf   0x12af
  41ff3c:	pop    edx
  41ff3d:	aad    0xc9
  41ff3f:	mov    dl,bl
  41ff41:	mov    ds:0xfeb8d0d0,eax
  41ff46:	sub    DWORD PTR [esi+0x6b1a2b3e],esp
  41ff4c:	in     al,dx
  41ff4d:	jae    0x41ff5b
  41ff4f:	add    al,0x6
  41ff51:	mov    WORD PTR [eax+0x7612d515],gs
  41ff57:	cmp    ebx,eax
  41ff59:	jge    0x41fee2
  41ff5b:	jno    0x41ff2f
  41ff5d:	enter  0x5f96,0x60
  41ff61:	call   0xd166:0xa1ca8a34
  41ff68:	inc    ecx
  41ff69:	in     al,0x3d
  41ff6b:	cmp    al,BYTE PTR [ecx+0x6c]
  41ff6e:	std    
  41ff6f:	adc    ebx,esp
  41ff71:	sti    
  41ff72:	push   ebx
  41ff73:	fnsave [ebx+0x43]
  41ff76:	push   es
  41ff77:	cmp    DWORD PTR [edx],ebx
  41ff79:	aam    0x95
  41ff7b:	pop    edi
  41ff7c:	pop    edi
  41ff7d:	and    BYTE PTR [esi+0x423de937],ch
  41ff83:	add    BYTE PTR [esp+eiz*2+0x7c],al
  41ff87:	add    BYTE PTR [edx-0x735fe146],bl
  41ff8d:	je     0x41fff9
  41ff8f:	je     0x41ffa1
  41ff91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff92:	into   
  41ff93:	in     al,0x98
  41ff95:	std    
  41ff96:	xchg   edx,eax
  41ff97:	out    dx,al
  41ff98:	nop    DWORD PTR [ebp-0x59]
  41ff9c:	ss stc 
  41ff9e:	sub    BYTE PTR [edx-0xb252899],0x4c
  41ffa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffa6:	mov    ecx,0x944375f9
  41ffab:	or     ebx,0xffffff82
  41ffae:	into   
  41ffaf:	jo     0x420020
  41ffb1:	fstp   DWORD PTR [ebp+0x5f]
  41ffb4:	sti    
  41ffb5:	jnp    0x420028
  41ffb7:	ins    BYTE PTR es:[edi],dx
  41ffb8:	xor    ebx,DWORD PTR cs:[esi-0x6e]
  41ffbc:	push   eax
  41ffbd:	xchg   edi,eax
  41ffbe:	mov    esi,0x60203b90
  41ffc3:	sub    BYTE PTR [ebx-0x7d],bh
  41ffc6:	adc    eax,0x44bd5eaa
  41ffcb:	sbb    al,0x6
  41ffcd:	(bad)  
  41ffce:	aad    0xa1
  41ffd0:	adc    eax,0x997e310c
  41ffd5:	sbb    edi,DWORD PTR [edx+0x54]
  41ffd8:	out    dx,eax
  41ffd9:	rcr    BYTE PTR [esi+0x337ffe1d],0xb1
  41ffe0:	jo     0x41ffb8
  41ffe2:	pushf  
  41ffe3:	inc    edi
  41ffe4:	les    ebp,FWORD PTR [eax+0x35cee9ad]
  41ffea:	fsubr  QWORD PTR [edx-0x58c97ab4]
  41fff0:	inc    esp
  41fff1:	sub    BYTE PTR [edi-0x1c1fb7d],cl
  41fff7:	inc    esi
  41fff8:	xchg   edi,eax
  41fff9:	retf   
  41fffa:	push   0xa4008ba7
  41ffff:	dec    edi
  420000:	xchg   ecx,eax
  420001:	pop    esp
  420002:	je     0x41ffac
  420004:	adc    dh,0x83
  420007:	mov    gs:0x7a2c08a4,eax
  42000d:	jbe    0x420075
  42000f:	out    dx,al
  420010:	cwde   
  420011:	mov    dh,0x64
  420013:	ins    DWORD PTR es:[edi],dx
  420014:	(bad)  
  420016:	add    eax,0xdfb2a056
  42001b:	div    BYTE PTR [eax-0x2c]
  42001e:	xor    bl,bl
  420020:	xchg   edx,eax
  420021:	sub    eax,0x17edd756
  420026:	cmc    
  420027:	dec    ebx
  420028:	push   eax
  420029:	jno    0x41ffc6
  42002b:	ret    
  42002c:	pop    ecx
  42002d:	cmp    cl,dl
  42002f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420030:	lea    ebx,[ebx+edi*4+0x4dff3fff]
  420037:	shr    BYTE PTR [eax+0x3dee1413],cl
  42003d:	std    
  42003e:	push   eax
  42003f:	push   ebx
  420040:	xlat   BYTE PTR ds:[ebx]
  420041:	fcmovbe st,st(2)
  420043:	dec    ecx
  420044:	stc    
  420045:	adc    al,0x10
  420047:	sahf   
  420048:	stos   DWORD PTR es:[edi],eax
  420049:	popa   
  42004a:	fwait
  42004b:	arpl   WORD PTR [ebx+0x6b1a5e34],si
  420051:	push   edi
  420052:	mov    ecx,0x58cc5df9
  420057:	and    DWORD PTR [eax],ebp
  420059:	mov    cl,0x67
  42005b:	xor    BYTE PTR [edx+0x4811528d],0x98
  420062:	adc    bh,al
  420064:	pop    ds
  420065:	lods   al,BYTE PTR ds:[esi]
  420066:	int3   
  420067:	adc    ecx,0xffffffd1
  42006a:	shl    DWORD PTR [ecx+esi*4],cl
  42006d:	fsubrp st(7),st
  42006f:	adc    edi,esi
  420071:	xor    al,0x32
  420073:	(bad)  
  420074:	jmp    0x91e1d091
  420079:	and    eax,0x46ec1b93
  42007e:	jg     0x4200ce
  420080:	je     0x420095
  420082:	ja     0x420012
  420084:	aad    0x2b
  420086:	adc    esp,DWORD PTR [ebx]
  420088:	cmc    
  420089:	out    0xbe,al
  42008b:	sub    eax,0x54368370
  420090:	push   ebp
  420091:	inc    DWORD PTR [esi+0xf7ba176]
  420097:	cwde   
  420098:	adc    al,BYTE PTR ds:0x910306e0
  42009e:	xchg   ebp,eax
  42009f:	ror    ch,0x5f
  4200a2:	push   ecx
  4200a3:	fiadd  WORD PTR [edx]
  4200a5:	repz pop esi
  4200a7:	xor    eax,0xf487b358
  4200ac:	loope  0x4200c9
  4200ae:	inc    ebx
  4200af:	lods   al,BYTE PTR ds:[esi]
  4200b0:	test   al,0xe0
  4200b2:	mov    ebx,0xbbe1ea7a
  4200b7:	push   ebp
  4200b8:	mov    BYTE PTR [esi],dh
  4200ba:	stc    
  4200bb:	test   DWORD PTR [eax+0x7d903fe2],edi
  4200c1:	jno    0x420061
  4200c3:	adc    al,0xf6
  4200c5:	mov    al,ds:0x7467e920
  4200ca:	mov    ch,0x42
  4200cc:	les    esp,FWORD PTR [ecx]
  4200ce:	adc    BYTE PTR [ebp-0x3ea1cb1b],bl
  4200d4:	fsubr  QWORD PTR [ebp-0x21]
  4200d7:	hlt    
  4200d8:	or     esi,DWORD PTR [edx]
  4200da:	int3   
  4200db:	and    ebp,DWORD PTR [ebp-0x58962ae3]
  4200e1:	dec    ebp
  4200e2:	es scas al,BYTE PTR es:[edi]
  4200e4:	mov    edx,0xb1a11db7
  4200e9:	clc    
  4200ea:	mov    edi,0x8393d269
  4200ef:	bound  edi,QWORD PTR [eax+edx*1-0x2f96034b]
  4200f6:	mov    dh,0x12
  4200f8:	xchg   esp,eax
  4200f9:	push   cs
  4200fa:	outs   dx,BYTE PTR ds:[esi]
  4200fb:	test   BYTE PTR [esi],0x17
  4200fe:	and    DWORD PTR [edi+edi*2],edi
  420101:	cdq    
  420102:	pop    ecx
  420103:	push   edi
  420104:	ficomp DWORD PTR [edx+0x39]
  420107:	(bad)  
  420108:	fidiv  DWORD PTR [edi+0x44]
  42010b:	loopne 0x42009c
  42010d:	add    DWORD PTR [esi],esp
  42010f:	popa   
  420110:	cmp    al,BYTE PTR [edx+0x1b]
  420113:	aas    
  420114:	out    dx,eax
  420115:	or     cl,dh
  420117:	adc    DWORD PTR [ebx],ebp
  420119:	pop    ebp
  42011a:	fs je  0x420109
  42011d:	mov    dh,0xf0
  42011f:	mov    eax,ds:0xab841fad
  420124:	mov    ah,0x1b
  420126:	jae    0x420134
  420128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420129:	jle    0x42015e
  42012b:	jns    0x42016a
  42012d:	adc    BYTE PTR [edi+0x1a],al
  420130:	mov    al,0x55
  420132:	cmp    bh,BYTE PTR [ecx+edi*2+0x36]
  420136:	inc    esi
  420137:	pushf  
  420138:	xchg   edi,eax
  420139:	dec    eax
  42013a:	mov    ds:0xaa13660c,al
  42013f:	cld    
  420140:	sbb    ch,BYTE PTR [esi-0x36]
  420143:	mov    ebp,0x28447c1
  420148:	outs   dx,BYTE PTR ds:[esi]
  420149:	shr    esi,cl
  42014b:	inc    esi
  42014c:	xchg   DWORD PTR [eax-0x7d856e00],ebx
  420152:	add    BYTE PTR [eax+ebx*1],al
  420155:	mov    bl,BYTE PTR [ebx]
  420157:	or     eax,0xcec3fa99
  42015c:	fnsave [edi-0x2a]
  42015f:	fidivr WORD PTR [edi-0x52]
  420162:	stos   DWORD PTR es:[edi],eax
  420163:	and    al,0x60
  420165:	push   esi
  420166:	sbb    eax,0x5c27e55b
  42016b:	fidivr WORD PTR [eax+edx*2]
  42016e:	inc    esp
  42016f:	mov    DWORD PTR ds:0xdb815922,ebp
  420175:	fnstcw WORD PTR [ebp+0x36]
  420178:	into   
  420179:	xchg   edx,eax
  42017a:	jne    0x420166
  42017c:	mov    WORD PTR [ecx+0x60],0xcb08
  420182:	mov    ss,WORD PTR ss:[ebx]
  420185:	(bad)  
  420186:	push   0x60b638ef
  42018b:	(bad)  
  42018c:	(bad)  
  42018d:	push   0xffffffd1
  42018f:	pop    ds
  420190:	mov    WORD PTR [eax+0x5b],?
  420193:	pusha  
  420194:	out    0x1d,al
  420196:	imul   eax,DWORD PTR [edx-0xe],0x31
  42019a:	dec    ebp
  42019b:	call   0x67d1:0xf3633aa7
  4201a2:	mov    eax,ds:0xbade19b4
  4201a7:	cmp    ah,BYTE PTR [ebp-0x74ce6276]
  4201ad:	push   eax
  4201ae:	jmp    0x26b8:0xad691ca5
  4201b5:	mov    ebx,0x8efa25f5
  4201ba:	xchg   esi,eax
  4201bb:	and    eax,0xab130bde
  4201c0:	inc    DWORD PTR ds:0x554e35fe
  4201c6:	add    BYTE PTR [ecx+0x70272eec],ch
  4201cc:	repz push edi
  4201ce:	and    ebx,ebx
  4201d0:	xchg   edi,eax
  4201d1:	cs push 0xe
  4201d4:	push   edi
  4201d5:	push   es
  4201d6:	dec    esi
  4201d7:	cmp    edi,DWORD PTR [esi+0x59f67fad]
  4201dd:	xor    bh,al
  4201df:	adc    eax,0xd221041e
  4201e4:	bswap  edx
  4201e6:	dec    edi
  4201e7:	mov    esi,0x1d2c789b
  4201ec:	sti    
  4201ed:	sbb    cl,BYTE PTR [ebx+edi*1]
  4201f0:	pop    es
  4201f1:	push   0x19cf9d6a
  4201f6:	fadd   DWORD PTR [ebx-0x7f]
  4201f9:	inc    edx
  4201fa:	inc    ecx
  4201fb:	test   DWORD PTR ds:0x64d297c,0x603c1007
  420205:	in     eax,0xa9
  420207:	mov    ah,0xff
  420209:	dec    eax
  42020a:	ficomp WORD PTR [ebp+0x7e]
  42020d:	cli    
  42020e:	std    
  42020f:	xchg   DWORD PTR gs:[ecx],esi
  420212:	scas   al,BYTE PTR es:[edi]
  420213:	pop    ebp
  420214:	push   edi
  420215:	xor    esi,edx
  420217:	fadd   QWORD PTR [esi+0x4f]
  42021a:	add    BYTE PTR [ebx+0x4b],0x40
  42021e:	out    0x75,al
  420220:	sub    BYTE PTR ds:0x3ee7eaad,0x7c
  420227:	lds    esp,FWORD PTR [esp+esi*8+0x5e]
  42022b:	and    DWORD PTR [edi-0x75],edx
  42022e:	dec    edx
  42022f:	fld    TBYTE PTR [edx+0x69]
  420232:	and    eax,0xb9d428a0
  420237:	fcomp  QWORD PTR [edx+0x680c3611]
  42023d:	xor    bh,ah
  42023f:	pop    eax
  420240:	push   es
  420241:	stc    
  420242:	mov    bh,0x22
  420244:	jmp    0x7273cfb6
  420249:	jg     0x420278
  42024b:	jg     0x42029f
  42024d:	dec    eax
  42024e:	or     eax,0x8e835f99
  420253:	pop    ebx
  420254:	or     al,0x60
  420256:	scas   eax,DWORD PTR es:[edi]
  420257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420258:	sub    eax,0xaee4b74b
  42025d:	xor    BYTE PTR [esi+edx*8+0x12eb4c78],dh
  420264:	es mov ebx,0xb3c71402
  42026a:	fwait
  42026b:	and    eax,0x7456d8a5
  420270:	jl     0x420264
  420272:	dec    esi
  420273:	loopne 0x4201f7
  420275:	xchg   edx,eax
  420276:	and    al,0xec
  420278:	call   0xaa41a81f
  42027d:	sub    al,0x5b
  42027f:	mov    bh,0xf2
  420281:	lods   eax,DWORD PTR ds:[esi]
  420282:	les    edi,FWORD PTR [ecx-0x2f]
  420285:	mov    cl,0xb6
  420287:	mov    ebx,0xe7c60324
  42028c:	mov    DWORD PTR [esi+0x12],ebx
  42028f:	mov    ecx,edx
  420291:	iret   
  420292:	pop    ds
  420293:	sub    BYTE PTR es:[ebx+0x61f605e9],0x1a
  42029b:	adc    eax,0xb5efb644
  4202a0:	(bad)  
  4202a2:	shr    BYTE PTR [ecx-0x4b],1
  4202a5:	sub    BYTE PTR [ebx-0x67],0x23
  4202a9:	inc    ebp
  4202aa:	mov    al,0x90
  4202ac:	ja     0x4202df
  4202ae:	shl    BYTE PTR [ecx],0x35
  4202b1:	cmp    DWORD PTR [edi],esp
  4202b3:	pop    ds
  4202b4:	pop    ebp
  4202b5:	adc    DWORD PTR [ebx],0x2756c0ee
  4202bb:	inc    eax
  4202bc:	xchg   ebx,eax
  4202bd:	dec    edi
  4202be:	adc    ch,BYTE PTR [ebp+edx*2+0x4]
  4202c2:	fwait
  4202c3:	sar    DWORD PTR ds:0xddae096c,1
  4202c9:	mov    eax,ds:0x1b71ea5f
  4202ce:	imul   ecx,DWORD PTR [esp+ebx*8+0x1],0xa004db5c
  4202d6:	arpl   WORD PTR [ebx],cx
  4202d8:	(bad)  [edx]
  4202da:	mov    ds:0x409fd4ea,eax
  4202df:	adc    ecx,ecx
  4202e1:	outs   dx,DWORD PTR ds:[esi]
  4202e2:	cli    
  4202e3:	popa   
  4202e4:	test   al,0x4b
  4202e6:	mul    DWORD PTR [ecx]
  4202e8:	adc    eax,0xc5802d62
  4202ed:	jg     0x420342
  4202ef:	sti    
  4202f0:	sub    cl,BYTE PTR [esi]
  4202f2:	and    al,0xe8
  4202f4:	lea    ecx,ds:0xdc216c0
  4202fa:	lods   eax,DWORD PTR ds:[esi]
  4202fb:	xor    al,0x50
  4202fd:	imul   ebx,DWORD PTR [esi],0xca9b548c
  420303:	lds    ecx,FWORD PTR [edi+0x59]
  420306:	test   al,0x24
  420308:	bound  edi,QWORD PTR [ebx]
  42030a:	pop    ebp
  42030b:	push   ebp
  42030c:	scas   eax,DWORD PTR es:[edi]
  42030d:	adc    esi,edx
  42030f:	stos   BYTE PTR es:[edi],al
  420310:	jp     0x420328
  420312:	xchg   esi,eax
  420313:	mov    es,WORD PTR [esi+0x359bf592]
  420319:	sbb    ebx,DWORD PTR [edx+ecx*2+0x47]
  42031d:	mov    fs,WORD PTR [esi]
  42031f:	addr16 ret 0x77ab
  420323:	sti    
  420324:	retf   
  420325:	sub    cl,BYTE PTR [edi+0x7585a4e0]
  42032b:	adc    BYTE PTR [eax-0x53],0xda
  42032f:	xlat   BYTE PTR ds:[ebx]
  420330:	jnp    0x420384
  420332:	cwde   
  420333:	dec    ecx
  420334:	sub    DWORD PTR [edx+0x40],edx
  420337:	out    dx,al
  420338:	jp     0x420335
  42033a:	shl    BYTE PTR [esi],cl
  42033c:	test   bl,dh
  42033e:	ins    DWORD PTR es:[edi],dx
  42033f:	mov    ch,0x4d
  420341:	adc    DWORD PTR [ebx+0x66],0xffffffb2
  420345:	cmp    ebx,ebx
  420347:	fnstsw WORD PTR [ecx]
  420349:	les    ebp,FWORD PTR [eax+0x57]
  42034c:	sub    eax,0xdbbdba5e
  420351:	mov    ds:0x31058ae4,eax
  420356:	retf   
  420357:	into   
  420358:	cli    
  420359:	cdq    
  42035a:	jp     0x42030c
  42035c:	call   0x7a91a46d
  420361:	fwait
  420362:	loope  0x4202fa
  420364:	or     eax,edi
  420366:	add    BYTE PTR [edi+0x787ca366],dl
  42036c:	popf   
  42036d:	retf   
  42036e:	(bad)  
  42036f:	fld    TBYTE PTR [edi+0x17]
  420372:	mov    BYTE PTR [ebx+ebx*4+0xe],dl
  420376:	bnd jge 0x420363
  420379:	pop    es
  42037a:	lock in eax,0xd0
  42037d:	mov    bl,0x3e
  42037f:	cmp    al,0xdc
  420381:	xor    DWORD PTR [ecx-0x7f],0xdbb6a09a
  420388:	in     al,0x2
  42038a:	jns    0x42033c
  42038c:	ror    edi,1
  42038e:	es mov bh,0x8e
  420391:	xor    ebp,ebp
  420393:	in     al,dx
  420394:	stc    
  420395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420396:	dec    edx
  420397:	jno    0x42033e
  420399:	jle    0x4203bb
  42039b:	ret    0x659b
  42039e:	sbb    eax,0x7eea118a
  4203a3:	(bad)  
  4203a4:	push   ebx
  4203a5:	push   0x3f578fd4
  4203aa:	push   cs
  4203ab:	(bad)  
  4203ac:	fnstcw WORD PTR [ecx]
  4203ae:	jge    0x420352
  4203b0:	sbb    eax,DWORD PTR [ebx]
  4203b2:	xor    al,ch
  4203b4:	inc    ecx
  4203b5:	in     al,dx
  4203b6:	xor    DWORD PTR [ebp+0x4f0c7ec1],edx
  4203bc:	ds sub edi,edx
  4203bf:	or     DWORD PTR [eax-0x69],edi
  4203c2:	popf   
  4203c3:	aaa    
  4203c4:	mov    ebp,0x37ef3dcd
  4203c9:	fsubr  st,st(6)
  4203cb:	mov    es,WORD PTR [esp+edx*4]
  4203ce:	bound  edi,QWORD PTR [ebp+0xf]
  4203d1:	in     al,dx
  4203d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203d3:	shl    DWORD PTR [edx],1
  4203d5:	(bad)  
  4203d6:	dec    eax
  4203d7:	(bad)  
  4203d8:	test   DWORD PTR [edx+0x5f],eax
  4203db:	xor    al,0x94
  4203dd:	jmp    0xd7ab:0xbb124655
  4203e4:	fidivr WORD PTR [esi]
  4203e6:	sar    BYTE PTR [edx+0x445c6b35],1
  4203ec:	retf   0x6e66
  4203ef:	and    DWORD PTR [eax],ebp
  4203f1:	mul    ch
  4203f3:	fnsave [esp+edx*8+0x41]
  4203f7:	out    dx,eax
  4203f8:	jmp    FWORD PTR [esi]
  4203fa:	pushf  
  4203fb:	xchg   BYTE PTR [esi],dh
  4203fd:	add    al,0x2d
  4203ff:	mov    ecx,0x90293069
  420404:	sbb    ebp,DWORD PTR [ebp-0x29d390c1]
  42040a:	enter  0x5cc6,0xa7
  42040e:	and    BYTE PTR [eax-0xab350f4],0x54
  420415:	test   edi,edx
  420417:	push   edx
  420418:	pop    eax
  420419:	push   cs
  42041a:	or     BYTE PTR [edx+0x15fc70a0],dl
  420420:	call   DWORD PTR [eax]
  420422:	mov    ecx,0xab404cd
  420427:	jmp    0x25cb4fe
  42042c:	mov    al,0xf3
  42042e:	pushf  
  42042f:	test   DWORD PTR ds:0x37217c57,0xe00a05bb
  420439:	scas   al,BYTE PTR es:[edi]
  42043a:	jg     0x420456
  42043c:	sbb    al,0x2f
  42043e:	xchg   esi,eax
  42043f:	out    0x23,eax
  420441:	dec    ebx
  420442:	neg    BYTE PTR [edx+ecx*2]
  420445:	inc    ebp
  420446:	in     eax,dx
  420447:	add    edi,ebp
  420449:	jge    0x420439
  42044b:	hlt    
  42044c:	int3   
  42044d:	fld    QWORD PTR [esi-0x30888ae2]
  420453:	add    esp,DWORD PTR [ecx]
  420455:	xor    esi,0xffffffa9
  420458:	movq   mm1,mm3
  42045b:	fdiv   st,st(4)
  42045d:	inc    ebx
  42045e:	repnz adc bl,BYTE PTR [ebx+0x71]
  420462:	dec    ecx
  420463:	sbb    eax,edx
  420465:	pop    edi
  420466:	dec    edi
  420467:	sub    al,0x65
  420469:	pop    ecx
  42046a:	je     0x420472
  42046c:	mov    bh,0xcd
  42046e:	add    ah,BYTE PTR [ebx+edi*2]
  420471:	das    
  420472:	mov    bh,0x86
  420474:	arpl   WORD PTR [eax],cx
  420476:	push   0x4b091ae9
  42047b:	inc    edx
  42047c:	mov    cl,0xc7
  42047e:	jle    0x4204b8
  420480:	dec    ecx
  420481:	bound  ecx,QWORD PTR [ebp-0x4927228a]
  420487:	ja     0x420464
  420489:	jae    0x4204ae
  42048b:	xchg   edi,eax
  42048c:	push   ds
  42048d:	sbb    eax,0xffffffdc
  420490:	imul   edx,DWORD PTR [esi],0xd43417
  420496:	jmp    0x42049c
  420498:	jecxz  0x420516
  42049a:	pop    esi
  42049b:	in     eax,0xd3
  42049d:	dec    edi
  42049e:	mov    ds:0x97ce0c49,eax
  4204a3:	or     BYTE PTR [esi-0x25dfa87f],0x1c
  4204aa:	cmp    al,0x30
  4204ac:	in     eax,0x50
  4204ae:	pop    es
  4204af:	pop    ss
  4204b0:	aaa    
  4204b1:	fld    DWORD PTR [ecx+0x3f]
  4204b4:	stos   BYTE PTR es:[edi],al
  4204b5:	call   0x5ba1:0x2eb52252
  4204bc:	fsubr  st(4),st
  4204be:	mov    ebx,0xa80254d9
  4204c3:	outs   dx,DWORD PTR ds:[esi]
  4204c4:	mov    DWORD PTR [ebp+0x1cec403e],ecx
  4204ca:	bound  esp,QWORD PTR fs:[ecx]
  4204cd:	jmp    0xaae1467e
  4204d2:	test   al,0xe8
  4204d4:	out    dx,al
  4204d5:	retf   
  4204d6:	stos   BYTE PTR es:[edi],al
  4204d7:	add    ch,BYTE PTR [esi-0x1533034]
  4204dd:	test   DWORD PTR [edx+esi*2-0x1a1ac3cd],esp
  4204e4:	mov    ah,0x12
  4204e6:	and    ebp,edx
  4204e8:	in     eax,0xc8
  4204ea:	or     BYTE PTR [edx+0x76],al
  4204ed:	sbb    BYTE PTR [esi+edx*8+0x6f],al
  4204f1:	repz and BYTE PTR [ecx-0x1804ccff],dh
  4204f8:	add    DWORD PTR [ebx-0x41],0x78
  4204fc:	mov    fs,WORD PTR [edi]
  4204fe:	xchg   esp,eax
  4204ff:	mov    esi,0x690a1353
  420504:	lods   al,BYTE PTR ds:[esi]
  420505:	ficomp DWORD PTR [esi-0x36]
  420508:	(bad)  
  420509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42050a:	inc    edx
  42050b:	jb     0x420562
  42050d:	stos   DWORD PTR es:[edi],eax
  42050e:	aaa    
  42050f:	sbb    ah,BYTE PTR [eax-0x59]
  420512:	pop    eax
  420513:	(bad)  
  420514:	cmp    eax,0x8dc32090
  420519:	scas   al,BYTE PTR es:[edi]
  42051a:	add    BYTE PTR [eax+0x65],dh
  42051d:	jbe    0x42059d
  42051f:	das    
  420520:	jb     0x42059b
  420522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420523:	xacquire xchg BYTE PTR [ecx-0x19],ah
  420527:	cmc    
  420528:	lahf   
  420529:	add    DWORD PTR [eax-0x6320e131],ebp
  42052f:	loopne 0x42055d
  420531:	xchg   esp,eax
  420532:	push   ebx
  420533:	adc    cl,BYTE PTR [edi+0x24]
  420536:	mov    edi,0xda55535
  42053b:	lods   al,BYTE PTR ds:[esi]
  42053c:	enter  0x3f39,0x8
  420540:	int3   
  420541:	push   esp
  420542:	call   0xdf5c:0xc63d107a
  420549:	mov    eax,ds:0xe5e895d0
  42054e:	stos   BYTE PTR es:[edi],al
  42054f:	sub    ecx,DWORD PTR [eax-0x5c]
  420552:	mov    edi,0x8c597adc
  420557:	adc    eax,0xe003f661
  42055c:	xor    al,0x4b
  42055e:	xrelease mov DWORD PTR [ecx],0x4d8f12c2
  420565:	lahf   
  420566:	inc    ecx
  420567:	call   0x2710:0xf7d6466f
  42056e:	repz xor al,0xed
  420571:	pop    esi
  420572:	sbb    ax,0xf7fd
  420576:	sub    ah,BYTE PTR [ebx]
  420578:	jmp    edx
  42057a:	cdq    
  42057b:	das    
  42057c:	adc    ebx,DWORD PTR [ebp-0x2e]
  42057f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420580:	push   ebx
  420581:	or     ebx,edi
  420583:	sub    BYTE PTR [esi+0x4f],bh
  420586:	jmp    0x2360:0x7897ae3f
  42058d:	call   0x76e1456d
  420592:	hlt    
  420593:	aaa    
  420594:	arpl   di,bp
  420596:	pop    es
  420597:	and    BYTE PTR [esi-0x3e],cl
  42059a:	cwde   
  42059b:	sbb    dl,BYTE PTR [esp+esi*4+0x72]
  42059f:	in     al,0x41
  4205a1:	cmc    
  4205a2:	mov    esi,esp
  4205a4:	cli    
  4205a5:	jne    0x420593
  4205a7:	dec    ebp
  4205a8:	pop    esi
  4205a9:	mov    DWORD PTR [ecx+0x42],eax
  4205ac:	sub    eax,DWORD PTR [ecx+0x68df9f70]
  4205b2:	jmp    0x511b:0x8b8c9802
  4205b9:	inc    ebx
  4205ba:	adc    eax,0x10a62859
  4205bf:	fcom   st(4)
  4205c1:	addr16 pop esi
  4205c3:	adc    DWORD PTR [ebp+0x5a702295],0xf
  4205ca:	jp     0x4205fe
  4205cc:	fwait
  4205cd:	mov    bl,0x27
  4205cf:	test   DWORD PTR [ecx],0x23f7d358
  4205d5:	icebp  
  4205d6:	loope  0x420625
  4205d8:	mov    eax,0xdc64594f
  4205dd:	mov    eax,DWORD PTR [ecx]
  4205df:	sub    edx,DWORD PTR [ebp+0x1906264f]
  4205e5:	inc    esp
  4205e6:	pop    ecx
  4205e7:	xchg   BYTE PTR [esi-0x43197300],ch
  4205ed:	std    
  4205ee:	or     DWORD PTR [esi],esp
  4205f0:	call   0x508df0b7
  4205f5:	cmp    edx,DWORD PTR [ecx-0x3d03af37]
  4205fb:	or     DWORD PTR [eax+0x7096e319],0xffffffab
  420602:	call   0x57e5df78
  420607:	pop    ebp
  420608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420609:	aam    0x61
  42060b:	jbe    0x420641
  42060d:	sub    al,0xce
  42060f:	rcl    BYTE PTR [esi],0x6d
  420612:	ret    
  420613:	cdq    
  420614:	xchg   ecx,ebp
  420616:	add    eax,edi
  420618:	jp     0x42059f
  42061a:	cmp    ebp,DWORD PTR [edi-0x1e]
  42061d:	aaa    
  42061e:	mov    ah,0x9b
  420620:	aaa    
  420621:	jmp    0x2cb6e86
  420626:	xor    al,BYTE PTR [ebx]
  420628:	mov    bl,0x76
  42062a:	pop    edx
  42062b:	test   al,0x2
  42062d:	repz div BYTE PTR [ebx+edi*2+0x61]
  420632:	add    BYTE PTR [ebp-0x63],dl
  420635:	arpl   WORD PTR [esi],si
  420637:	cmc    
  420638:	xor    edi,DWORD PTR [esi]
  42063a:	pop    ebp
  42063b:	loope  0x4205fb
  42063d:	sub    al,0x20
  42063f:	sti    
  420640:	pop    esp
  420641:	mov    al,ds:0x760b40bd
  420646:	iret   
  420647:	adc    al,0x2f
  420649:	xchg   ebx,eax
  42064a:	(bad)  
  42064b:	iret   
  42064c:	outs   dx,DWORD PTR ds:[esi]
  42064d:	stos   DWORD PTR es:[edi],eax
  42064e:	jb     0x4205f1
  420650:	outs   dx,BYTE PTR ds:[esi]
  420651:	push   esi
  420652:	cmc    
  420653:	and    BYTE PTR [esi],ch
  420655:	pmaxsw mm3,mm7
  420658:	std    
  420659:	mov    WORD PTR [ecx],ss
  42065b:	dec    edi
  42065c:	push   es
  42065d:	cmp    eax,DWORD PTR [edx-0x60d974f7]
  420663:	(bad)  
  420664:	jo     0x420676
  420666:	and    ah,BYTE PTR [ecx]
  420668:	popa   
  420669:	neg    BYTE PTR [edx+0x1adb920e]
  42066f:	pop    esi
  420670:	nop
  420671:	inc    ebp
  420672:	push   ebx
  420673:	call   0x1ab:0xed16a86e
  42067a:	dec    ebp
  42067b:	ret    
  42067c:	pop    edi
  42067d:	and    eax,0x3fe68911
  420682:	clc    
  420683:	mov    gs,WORD PTR [eax-0x5f]
  420686:	test   bl,al
  420688:	cmp    eax,0x5a5ba3bb
  42068d:	fsubr  QWORD PTR [eax+0x1b]
  420690:	lock hlt 
  420692:	js     0x42063d
  420694:	dec    edx
  420695:	pop    edi
  420696:	mov    ds:0x4949c9f1,eax
  42069b:	add    esp,DWORD PTR [edi-0x26]
  42069e:	out    0xc7,eax
  4206a0:	lea    ecx,[bp+di+0x6b7e]
  4206a5:	test   eax,0x194ba58e
  4206aa:	paddsw mm5,QWORD PTR [ebx-0x3232a5fe]
  4206b1:	enter  0xa35c,0xcd
  4206b5:	or     eax,0x481dbfaf
  4206ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206bb:	fidivr DWORD PTR [esi+0x31]
  4206be:	xor    eax,0x24e262de
  4206c3:	out    0xdf,eax
  4206c5:	(bad)  
  4206c6:	mov    cl,0xef
  4206c8:	fimul  DWORD PTR [ebx]
  4206ca:	sub    dh,BYTE PTR [ebx+edi*2]
  4206cd:	clc    
  4206ce:	xchg   edx,eax
  4206cf:	mov    ds:0x2e91cdfc,eax
  4206d4:	add    eax,0xaf320ff2
  4206d9:	pusha  
  4206da:	lahf   
  4206db:	sub    DWORD PTR [ecx-0x5bc9df07],eax
  4206e1:	push   eax
  4206e2:	stos   DWORD PTR es:[edi],eax
  4206e3:	shl    DWORD PTR [edx-0x2de20587],cl
  4206e9:	adc    ch,BYTE PTR [ebx]
  4206eb:	mov    esi,0xefee79f7
  4206f0:	leave  
  4206f1:	jmp    0xe427030d
  4206f6:	xor    al,0xd3
  4206f8:	xor    ebp,DWORD PTR [esi-0x2d170ef9]
  4206fe:	daa    
  4206ff:	dec    ebx
  420700:	jmp    0x4206bb
  420702:	in     al,0x4d
  420704:	pop    es
  420705:	mov    ss,WORD PTR [edx]
  420707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420708:	cmp    esp,DWORD PTR [edx+edx*4+0x3b]
  42070c:	lods   al,BYTE PTR ds:[esi]
  42070d:	aam    0x13
  42070f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420710:	out    0xe4,al
  420712:	repnz cld 
  420714:	popf   
  420715:	xchg   esi,eax
  420716:	cmp    ecx,DWORD PTR [ecx]
  420718:	jg     0x420781
  42071a:	loop   0x42070f
  42071c:	push   esi
  42071d:	adc    eax,DWORD PTR [ebp-0x56]
  420720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420721:	in     al,0xda
  420723:	popa   
  420724:	aas    
  420725:	lock inc ecx
  420727:	mov    ch,0x51
  420729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42072a:	scas   eax,DWORD PTR es:[edi]
  42072b:	push   ebp
  42072c:	ret    
  42072d:	mov    eax,ds:0xab06fbf
  420732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420733:	push   ss
  420734:	cmp    DWORD PTR ds:0x85098ca,eax
  42073a:	xchg   BYTE PTR [ecx],dh
  42073c:	pusha  
  42073d:	lea    edx,[edx]
  42073f:	sub    al,0xd0
  420741:	jle    0x4206d3
  420743:	(bad)  
  420744:	out    dx,al
  420745:	(bad)  
  420746:	cs shl bh,1
  420749:	jl     0x4207c5
  42074b:	js     0x42074b
  42074d:	xor    dh,al
  42074f:	mov    edi,0x74693295
  420754:	(bad)  
  420755:	stos   DWORD PTR es:[edi],eax
  420756:	outs   dx,DWORD PTR ds:[esi]
  420757:	adc    al,0x4
  420759:	and    ebp,ebp
  42075b:	ret    
  42075c:	xor    dl,BYTE PTR [eax+0x4027f20b]
  420762:	adc    eax,0xe5e2a336
  420767:	outs   dx,BYTE PTR ds:[esi]
  420768:	adc    eax,0x2d36c5d8
  42076d:	in     eax,dx
  42076e:	or     edi,DWORD PTR ds:0x4c893142
  420774:	daa    
  420775:	in     eax,dx
  420776:	in     eax,0x63
  420778:	scas   eax,DWORD PTR es:[edi]
  420779:	jl     0x4207f2
  42077b:	push   ebp
  42077c:	iret   
  42077d:	aad    0x1e
  42077f:	cld    
  420780:	xlat   BYTE PTR ds:[ebx]
  420781:	js     0x420736
  420783:	aaa    
  420784:	shl    DWORD PTR [eax-0xf],cl
  420787:	cmc    
  420788:	sbb    edx,DWORD PTR [ecx-0x63]
  42078b:	and    al,BYTE PTR [ebp+ecx*2-0x22903ba2]
  420792:	and    BYTE PTR [ecx-0x4b],cl
  420795:	daa    
  420796:	outs   dx,DWORD PTR ds:[esi]
  420797:	retf   0x59ee
  42079a:	aaa    
  42079b:	cmp    ch,BYTE PTR fs:[eax+0x41b3d1ef]
  4207a2:	sub    eax,eax
  4207a4:	mov    al,ds:0xd97063ae
  4207a9:	xchg   esp,eax
  4207aa:	mov    esp,0xa936bcce
  4207af:	pop    esi
  4207b0:	pop    esp
  4207b1:	dec    ecx
  4207b2:	fild   WORD PTR ds:0x8ffa9eeb
  4207b8:	(bad)
  4207bc:	dec    eax
  4207bd:	ret    
  4207be:	inc    esp
  4207bf:	ins    DWORD PTR es:[edi],dx
  4207c0:	int3   
  4207c1:	sti    
  4207c2:	add    dh,BYTE PTR [ebx+0x70]
  4207c5:	repz daa 
  4207c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207c8:	push   ecx
  4207c9:	push   0x42
  4207cb:	mov    ebp,0x378c7b85
  4207d0:	dec    edi
  4207d1:	xor    dl,ah
  4207d3:	aam    0xd8
  4207d5:	dec    ebx
  4207d6:	sub    BYTE PTR [esi],ah
  4207d8:	jecxz  0x4207f8
  4207da:	and    cl,BYTE PTR [esi]
  4207dc:	mov    ecx,0xfd76e062
  4207e1:	add    al,0xca
  4207e3:	mov    dl,0x0
  4207e5:	gs test ah,al
  4207e8:	cs jg  0x42082c
  4207eb:	push   ebp
  4207ec:	pop    es
  4207ed:	mov    bh,BYTE PTR [ecx+ebp*4]
  4207f0:	inc    edi
  4207f1:	dec    cx
  4207f3:	fucomi st,st(3)
  4207f5:	bound  edi,QWORD PTR [ebx+0xb0f5b76]
  4207fb:	das    
  4207fc:	inc    edx
  4207fd:	mov    ch,0x8d
  4207ff:	push   ss
  420800:	jmp    0x420822
  420802:	ret    
  420803:	sbb    ebp,esi
  420805:	(bad)  
  420807:	cmp    ebp,eax
  420809:	mov    ds:0xec4c8ed8,eax
  42080e:	cmp    BYTE PTR [edi+0x37],al
  420811:	sbb    BYTE PTR [edi-0x7342dfec],bl
  420817:	dec    esp
  420818:	mov    cl,0x15
  42081a:	aad    0x93
  42081c:	scas   eax,DWORD PTR es:[edi]
  42081d:	les    ebx,FWORD PTR [ebp-0x38546e08]
  420823:	fild   QWORD PTR [ebx-0x2328bdc0]
  420829:	pop    edi
  42082a:	push   ds
  42082b:	xor    BYTE PTR [ebx-0x70],0xb6
  42082f:	imul   ebx,DWORD PTR [edi+0x71c6840a],0x54
  420836:	clc    
  420837:	lahf   
  420838:	enter  0x3473,0x99
  42083c:	pop    esi
  42083d:	es mov ah,0x4d
  420840:	pop    edx
  420841:	jae    0x420860
  420843:	aad    0x12
  420845:	in     eax,0x35
  420847:	stos   BYTE PTR es:[edi],al
  420848:	adc    ebx,ecx
  42084a:	jbe    0x42086e
  42084c:	int3   
  42084d:	jns    0x4208c0
  42084f:	jmp    0x420880
  420851:	arpl   cx,cx
  420853:	xchg   edi,eax
  420854:	adc    esi,DWORD PTR [ebx]
  420856:	fwait
  420857:	and    esp,DWORD PTR [esi]
  420859:	xor    eax,0x7c5f214e
  42085e:	into   
  42085f:	es ins DWORD PTR es:[edi],dx
  420861:	ins    BYTE PTR es:[edi],dx
  420862:	inc    ebx
  420863:	inc    ebp
  420864:	xchg   DWORD PTR [esi-0x45],ebx
  420867:	pop    edx
  420868:	xchg   edi,eax
  420869:	jmp    0x42081d
  42086b:	jnp    0x420829
  42086d:	lods   eax,DWORD PTR ds:[esi]
  42086e:	iret   
  42086f:	push   edx
  420870:	add    dh,BYTE PTR [ebp-0x736b00de]
  420876:	fldenv [ebp+0x216e332a]
  42087c:	ret    
  42087d:	inc    ebp
  42087e:	fmulp  st(7),st
  420880:	cld    
  420881:	push   eax
  420882:	adc    cl,BYTE PTR [ebx-0x65]
  420885:	je     0x420837
  420887:	dec    ebx
  420888:	fwait
  420889:	pop    ds
  42088a:	mov    cl,0x6a
  42088c:	das    
  42088d:	mov    gs,WORD PTR [eax+0x343403db]
  420893:	arpl   WORD PTR [ecx],dx
  420895:	imul   bl
  420897:	push   cs
  420898:	or     eax,0x7bd43afe
  42089d:	push   DWORD PTR [edx-0x47]
  4208a0:	inc    esi
  4208a1:	iret   
  4208a2:	cdq    
  4208a3:	shufps xmm6,XMMWORD PTR [ebx+0x1104ae49],0x26
  4208ab:	aad    0x4d
  4208ad:	stos   DWORD PTR es:[edi],eax
  4208ae:	out    0xa7,eax
  4208b0:	hlt    
  4208b1:	call   edi
  4208b3:	adc    eax,DWORD PTR [ecx]
  4208b5:	mov    bl,0x8c
  4208b7:	sub    dl,cl
  4208b9:	sbb    bl,ah
  4208bb:	loop   0x42090e
  4208bd:	fisubr WORD PTR [ebp-0x33bf8c89]
  4208c3:	lods   al,BYTE PTR ds:[esi]
  4208c4:	sbb    al,BYTE PTR [esi+edi*2+0x58]
  4208c8:	stos   DWORD PTR es:[di],eax
  4208ca:	push   0xffffff9e
  4208cc:	mov    ds:0x96e854b0,al
  4208d1:	int3   
  4208d2:	adc    eax,DWORD PTR [ecx+0x20]
  4208d5:	jmp    0x420864
  4208d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208d8:	mov    bh,0x50
  4208da:	push   es
  4208db:	xor    ah,cl
  4208dd:	push   ss
  4208de:	xor    BYTE PTR [ebp-0x1],ch
  4208e1:	push   ss
  4208e2:	xchg   ebp,eax
  4208e3:	jl     0x42088d
  4208e5:	fidivr DWORD PTR [edx-0x7a]
  4208e8:	into   
  4208e9:	inc    esp
  4208ea:	adc    DWORD PTR [eax+0x6674b04f],ebx
  4208f0:	push   ebx
  4208f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208f2:	and    eax,0xd814dbdc
  4208f7:	mov    al,ds:0x8a72c213
  4208fc:	or     al,0xb8
  4208fe:	aam    0xd7
  420900:	jae    0x420920
  420902:	add    eax,0x54893fee
  420907:	fstp   DWORD PTR [ebp+0x3fc7c15e]
  42090d:	aad    0xdd
  42090f:	add    al,0xa0
  420911:	or     DWORD PTR [edx+edx*1-0xa],0xebb4f50c
  420919:	sbb    BYTE PTR [ebp+0x14],ah
  42091c:	in     eax,dx
  42091d:	imul   esp,edi,0xffffffd2
  420920:	fxch   st(2)
  420922:	in     eax,0x83
  420924:	mov    eax,0xccbb34f4
  420929:	(bad)  
  42092a:	sub    eax,0xdff0edad
  42092f:	jbe    0x42090c
  420931:	ins    DWORD PTR es:[edi],dx
  420932:	pop    ds
  420933:	and    DWORD PTR [esi+0x43],ebp
  420936:	dec    edi
  420937:	out    0x22,eax
  420939:	or     cl,ch
  42093b:	lods   al,BYTE PTR ds:[esi]
  42093c:	pop    eax
  42093d:	jmp    0x4208c3
  42093f:	int3   
  420940:	inc    ebp
  420941:	push   eax
  420942:	push   eax
  420943:	pop    esp
  420944:	add    ebx,DWORD PTR [ebp-0x44]
  420947:	shl    DWORD PTR es:[ebx],cl
  42094a:	data16 sti 
  42094c:	mov    esi,0x7be0d431
  420951:	xchg   ebx,eax
  420952:	mov    bl,0x3d
  420954:	or     edx,eax
  420956:	pop    esp
  420957:	cld    
  420958:	ficomp DWORD PTR [ecx-0x3df41cbf]
  42095e:	inc    BYTE PTR [ebx+ebp*8+0x2e]
  420962:	out    0x1f,eax
  420964:	mov    dh,0x22
  420966:	scas   al,BYTE PTR es:[edi]
  420967:	nop
  420968:	lock add ebx,DWORD PTR cs:[edi+0x0]
  42096d:	mov    esi,DWORD PTR [ebx]
  42096f:	add    al,0xcc
  420971:	push   0xffffffac
  420973:	ror    DWORD PTR [esi-0x6cb2a25a],1
  420979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42097a:	data16 fsub st,st(0)
  42097d:	jae    0x420948
  42097f:	in     al,dx
  420980:	push   edx
  420981:	add    bh,cl
  420983:	fstp   DWORD PTR [ecx-0x153b3609]
  420989:	and    al,0xe0
  42098b:	mov    eax,fs:0x29fac050
  420991:	sbb    ebp,DWORD PTR [esi-0x39c3efa3]
  420997:	jmp    0x27dd:0xdbcbdd22
  42099e:	dec    esp
  42099f:	retf   
  4209a0:	icebp  
  4209a1:	pop    edi
  4209a2:	ins    BYTE PTR es:[edi],dx
  4209a3:	pop    esp
  4209a4:	shr    edx,1
  4209a6:	and    BYTE PTR [edi-0x2d],ch
  4209a9:	fiadd  WORD PTR [esi]
  4209ab:	lds    edi,FWORD PTR [edi+0x19]
  4209ae:	rol    DWORD PTR [edx+0x49],0x4b
  4209b2:	fcmove st,st(2)
  4209b4:	lea    ebx,[esi]
  4209b6:	lds    esi,FWORD PTR [ecx+0x9586a4d]
  4209bc:	mov    ebx,0x3a63ea0d
  4209c1:	or     BYTE PTR [esi+eiz*2-0x362f4a94],ch
  4209c8:	add    dl,dl
  4209ca:	shl    BYTE PTR [edx+0x1a],cl
  4209cd:	push   edx
  4209ce:	rcl    BYTE PTR [esi],cl
  4209d0:	sbb    dh,BYTE PTR [edi+0x18]
  4209d3:	scas   al,BYTE PTR es:[edi]
  4209d4:	jge    0x420a47
  4209d6:	fsub   st(2),st
  4209d8:	(bad)  
  4209d9:	mov    ds:0xfe41ca7e,al
  4209de:	fild   QWORD PTR [edi]
  4209e0:	imul   edx,DWORD PTR [edx-0xc90b71a],0x962eed03
  4209ea:	push   esi
  4209eb:	js     0x420981
  4209ed:	xchg   ebx,eax
  4209ee:	call   0xff04c7be
  4209f3:	jg     0x4209a1
  4209f5:	ins    DWORD PTR es:[edi],dx
  4209f6:	cmp    ebx,ebx
  4209f8:	adc    ecx,DWORD PTR [edx-0x6912a501]
  4209fe:	je     0x420a78
  420a00:	std    
  420a01:	into   
  420a02:	retf   0xac2c
  420a05:	mov    ch,0xb6
  420a07:	and    eax,0xa6c9d4b9
  420a0c:	pop    es
  420a0d:	or     ch,BYTE PTR [ebp+0x29fd2696]
  420a13:	jmp    0x420a4a
  420a15:	sbb    ah,cl
  420a17:	fsub   st,st(7)
  420a19:	fimul  WORD PTR [ebx-0x59]
  420a1c:	aaa    
  420a1d:	xor    esi,DWORD PTR [ebp+0x1354aa13]
  420a23:	lock cwde 
  420a25:	pop    ds
  420a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a27:	loopne 0x4209b5
  420a29:	xor    eax,0x28ed1373
  420a2e:	aaa    
  420a2f:	jmp    0x4209db
  420a31:	sbb    ebx,DWORD PTR [esi-0x6d1061e2]
  420a37:	or     eax,0x35cc412e
  420a3c:	int    0x86
  420a3e:	xchg   esp,eax
  420a3f:	int    0x82
  420a41:	inc    edx
  420a42:	pop    edi
  420a43:	icebp  
  420a44:	push   edi
  420a45:	fcomp  QWORD PTR [esi]
  420a47:	jnp    0x420a17
  420a49:	dec    esp
  420a4a:	aad    0x2d
  420a4c:	int    0x77
  420a4e:	adc    al,0x57
  420a50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a51:	add    esi,edx
  420a53:	fisub  WORD PTR [ebx-0x1dafda20]
  420a59:	or     al,0xe1
  420a5b:	sbb    eax,0x949a6a9
  420a60:	mov    cl,0xf7
  420a62:	js     0x420a91
  420a64:	mov    ds:0x29572782,eax
  420a69:	mov    ah,0x6b
  420a6b:	aaa    
  420a6c:	retf   
  420a6d:	sub    eax,0x627f69c2
  420a72:	sbb    ecx,DWORD PTR [edi]
  420a74:	idiv   DWORD PTR [ebx+0x5c6157d]
  420a7a:	pushf  
  420a7b:	fwait
  420a7c:	in     al,0xda
  420a7e:	es scas eax,DWORD PTR es:[edi]
  420a80:	and    al,0xc9
  420a82:	adc    eax,0xec006cf7
  420a87:	mov    edx,ecx
  420a89:	or     BYTE PTR [ecx],bh
  420a8b:	push   eax
  420a8c:	nop
  420a8d:	scas   al,BYTE PTR es:[edi]
  420a8e:	call   0xb0ca0af9
  420a93:	nop
  420a94:	or     DWORD PTR [eax-0x6d0ec9ea],esi
  420a9a:	icebp  
  420a9b:	mov    DWORD PTR [ebx-0x16107061],0x4ad68552
  420aa5:	pop    esp
  420aa6:	rcr    BYTE PTR [ecx+edx*1+0x444706f],1
  420aad:	push   esp
  420aae:	aas    
  420aaf:	mov    bl,0xd
  420ab1:	loopne 0x420b01
  420ab3:	mov    bl,0xd9
  420ab5:	cmp    eax,edx
  420ab7:	and    eax,0x5549b034
  420abc:	(bad)  
  420abd:	(bad)  [edx]
  420abf:	mov    fs,esi
  420ac1:	or     esp,edi
  420ac3:	or     DWORD PTR [esi],ebp
  420ac5:	mov    ebx,0x2c702dfa
  420aca:	mov    al,ds:0xe9cac953
  420acf:	pop    ebx
  420ad0:	xchg   ecx,edx
  420ad2:	and    eax,ebp
  420ad4:	imul   edi,DWORD PTR [esi+eiz*1],0x1c87d138
  420adb:	in     eax,0xfc
  420add:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420adf:	xchg   ebx,eax
  420ae0:	repz shl BYTE PTR [ecx-0x3c8dc0d1],0x2a
  420ae8:	push   ebx
  420ae9:	or     edi,eax
  420aeb:	stos   BYTE PTR es:[edi],al
  420aec:	and    al,0xa5
  420aee:	xor    bl,BYTE PTR [edi]
  420af0:	sub    al,0x57
  420af2:	push   ds
  420af3:	aad    0xd3
  420af5:	pop    ebx
  420af6:	cmp    ch,BYTE PTR [eax-0xf]
  420af9:	lods   eax,DWORD PTR ds:[esi]
  420afa:	mov    al,0x90
  420afc:	push   ecx
  420afd:	jmp    0x420b2b
  420aff:	stos   DWORD PTR es:[edi],eax
  420b00:	inc    edx
  420b01:	dec    edi
  420b02:	mov    eax,ds:0x9f7cad00
  420b07:	sti    
  420b08:	add    DWORD PTR [ebx+0x5a],ebx
  420b0b:	(bad)  
  420b0c:	mov    al,0x9c
  420b0e:	jp     0x420b01
  420b10:	hlt    
  420b11:	(bad)  
  420b12:	jmp    0x721a:0xbfd9460
  420b19:	add    al,0x14
  420b1b:	pop    ss
  420b1c:	arpl   WORD PTR [ecx+0x31],bp
  420b1f:	pusha  
  420b20:	xchg   ebp,eax
  420b21:	sbb    ch,al
  420b23:	push   eax
  420b24:	push   eax
  420b25:	xchg   esp,eax
  420b26:	cmp    ch,BYTE PTR [eax+edx*1-0x67122596]
  420b2d:	inc    esi
  420b2e:	push   ebp
  420b2f:	push   ebp
  420b30:	out    0xa2,al
  420b32:	iret   
  420b33:	das    
  420b34:	inc    ebx
  420b35:	and    al,0xd9
  420b37:	push   0xa4dbc449
  420b3c:	fistp  QWORD PTR [ebx-0x1d]
  420b3f:	push   es
  420b40:	(bad)  
  420b41:	es fs in eax,0xe9
  420b45:	data16 sti 
  420b47:	rol    BYTE PTR [eax+eax*2-0x40],1
  420b4b:	mov    ds:0xf79b66ec,al
  420b50:	jle    0x420b2c
  420b52:	dec    dl
  420b54:	leave  
  420b55:	in     eax,0xd3
  420b57:	ins    BYTE PTR es:[edi],dx
  420b58:	dec    ebp
  420b59:	push   esp
  420b5a:	icebp  
  420b5b:	xchg   esi,eax
  420b5c:	stc    
  420b5d:	cmp    bh,BYTE PTR [eax-0xad5bb5d]
  420b63:	adc    dl,BYTE PTR [edx-0x21d6bbfe]
  420b69:	mov    ecx,0xae8de484
  420b6e:	inc    edx
  420b6f:	adc    DWORD PTR [eax+0x77],ecx
  420b72:	pusha  
  420b73:	pop    es
  420b74:	dec    esi
  420b75:	ret    0x26cd
  420b78:	xor    BYTE PTR [edi+0x55],0x2a
  420b7c:	jnp    0x420b5c
  420b7e:	add    bh,dh
  420b80:	(bad)  
  420b81:	jb     0x420ba5
  420b83:	leave  
  420b84:	dec    esi
  420b85:	repz mov cl,0xb2
  420b88:	or     ebp,DWORD PTR [eax-0x26]
  420b8b:	push   edi
  420b8c:	fist   WORD PTR [ebx-0x57]
  420b8f:	add    eax,0xf8fe1928
  420b94:	out    dx,eax
  420b95:	xchg   DWORD PTR [eax],eax
  420b97:	rol    dl,1
  420b99:	jb     0x420bd9
  420b9b:	(bad)  
  420b9c:	popa   
  420b9d:	or     DWORD PTR [eax],ebx
  420b9f:	arpl   WORD PTR [edi-0x548cc4dd],bp
  420ba5:	mov    dh,0x18
  420ba7:	sub    al,0x8a
  420ba9:	test   eax,0x44713f65
  420bae:	push   ecx
  420baf:	iret   
  420bb0:	je     0x420b40
  420bb2:	jl     0x420c08
  420bb4:	fstp   TBYTE PTR [esi+0x49190f2a]
  420bba:	xchg   ebp,eax
  420bbb:	in     al,dx
  420bbc:	imul   esp,DWORD PTR [ecx+0x3aa28ac6],0x56
  420bc3:	jecxz  0x420beb
  420bc5:	push   es
  420bc6:	inc    ebx
  420bc7:	test   al,0xaa
  420bc9:	jl     0x420c3a
  420bcb:	out    0xe,eax
  420bcd:	fwait
  420bce:	dec    ebp
  420bcf:	test   eax,0xce7deab
  420bd4:	out    0xb2,al
  420bd6:	mov    cl,0x14
  420bd8:	retf   
  420bd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bda:	mul    BYTE PTR [eax]
  420bdc:	xchg   ebp,eax
  420bdd:	(bad)  
  420bde:	gs push 0x8763a528
  420be4:	(bad)  
  420be5:	jmp    0x8f75:0x3b2b702e
  420bec:	mov    bh,0x1f
  420bee:	jmp    0xc4c4:0xd3fd28c9
  420bf5:	pop    esi
  420bf6:	sahf   
  420bf7:	mov    bl,0xde
  420bf9:	push   ds
  420bfa:	movsx  edx,BYTE PTR [esi-0x6ab4e2d8]
  420c01:	in     eax,dx
  420c02:	je     0x420be2
  420c04:	ror    BYTE PTR [edi+0x579a74e0],1
  420c0a:	ins    DWORD PTR es:[edi],dx
  420c0b:	push   ss
  420c0c:	dec    ebx
  420c0d:	cmp    al,0xc5
  420c0f:	cld    
  420c10:	in     eax,0xac
  420c12:	and    esi,DWORD PTR [ebp+0x37]
  420c15:	sub    DWORD PTR [edx],ecx
  420c17:	stc    
  420c18:	into   
  420c19:	or     al,0x57
  420c1b:	jg     0x420c0a
  420c1d:	clc    
  420c1e:	xchg   esp,eax
  420c1f:	dec    eax
  420c20:	sar    BYTE PTR [edx+0x1280cf0],1
  420c26:	push   esp
  420c27:	sbb    al,0xae
  420c29:	out    0x5e,al
  420c2b:	lock lea edx,[edx-0x6e]
  420c2f:	mov    ds:0xd0bd2301,eax
  420c34:	add    al,0xb7
  420c36:	fdivr  DWORD PTR [ebx+eax*4]
  420c39:	jbe    0x420bea
  420c3b:	call   0x8a0359ba
  420c40:	cmp    al,0x1b
  420c42:	sub    ah,ah
  420c44:	adc    al,0xa6
  420c46:	dec    ebx
  420c47:	fimul  WORD PTR [eax]
  420c49:	dec    ebp
  420c4a:	fstp   QWORD PTR [edi]
  420c4c:	dec    ebx
  420c4d:	mov    bh,0x35
  420c4f:	out    dx,eax
  420c50:	pop    es
  420c51:	sti    
  420c52:	push   edi
  420c53:	js     0x420c5e
  420c55:	pop    es
  420c56:	and    DWORD PTR [eax+ecx*2+0x78598e71],ecx
  420c5d:	stos   BYTE PTR es:[edi],al
  420c5e:	mov    DWORD PTR [esi],ecx
  420c60:	push   esp
  420c61:	ret    0x79b4
  420c64:	push   edi
  420c65:	test   BYTE PTR [edx-0x68023498],cl
  420c6b:	mov    bh,0xb3
  420c6d:	out    0xc9,eax
  420c6f:	aaa    
  420c70:	in     al,0xea
  420c72:	(bad)  
  420c73:	cdq    
  420c74:	in     al,dx
  420c75:	sub    ch,BYTE PTR [edi+ebp*2+0x1ff245da]
  420c7c:	add    eax,0x7d6ad5f
  420c81:	iret   
  420c82:	lods   eax,DWORD PTR ds:[esi]
  420c83:	in     ax,dx
  420c85:	xor    ah,BYTE PTR [ebx+0x5]
  420c88:	je     0x420c7e
  420c8a:	into   
  420c8b:	mov    esp,0x4a6f0314
  420c90:	pop    ecx
  420c91:	adc    bl,BYTE PTR [edx-0x5b869f4e]
  420c97:	push   esi
  420c98:	leave  
  420c99:	sar    DWORD PTR [ecx+0x6b],cl
  420c9c:	cdq    
  420c9d:	jne    0x420d01
  420c9f:	mov    cs,WORD PTR [ecx-0x3b82eef4]
  420ca5:	test   cl,al
  420ca7:	cmp    cl,0xdc
  420caa:	dec    ah
  420cac:	push   ds
  420cad:	jmp    0x2b3d:0x3ab6546e
  420cb4:	adc    ebx,DWORD PTR [esi]
  420cb6:	scas   eax,DWORD PTR es:[edi]
  420cb7:	cli    
  420cb8:	cmp    dl,bl
  420cba:	out    0x9d,eax
  420cbc:	ror    BYTE PTR [ebp-0x5e],cl
  420cbf:	jo     0x420cc8
  420cc1:	dec    ebp
  420cc2:	es int3 
  420cc4:	hlt    
  420cc5:	test   eax,0x132758c8
  420cca:	pop    ebp
  420ccb:	daa    
  420ccc:	pop    ss
  420ccd:	push   ss
  420cce:	call   0xb8f0:0xcbe26e83
  420cd5:	mov    al,0xc6
  420cd7:	cmp    DWORD PTR [edx],ebx
  420cd9:	mov    DWORD PTR [ebx+ebx*8+0x14],eax
  420cdd:	sbb    ebx,DWORD PTR [ecx+esi*1+0x3a]
  420ce1:	into   
  420ce2:	int3   
  420ce3:	and    eax,ebx
  420ce5:	jmp    0xd3e1:0xe539540b
  420cec:	loopne 0x420ce9
  420cee:	jb     0x420caa
  420cf0:	retf   0x355b
  420cf3:	cmc    
  420cf4:	jmp    0xdcc83993
  420cf9:	inc    edx
  420cfa:	outs   dx,DWORD PTR ds:[esi]
  420cfb:	mov    edi,0x523eeaa2
  420d00:	jle    0x420d7d
  420d02:	hlt    
  420d03:	lds    ecx,FWORD PTR [ecx+0x720c99d0]
  420d09:	retf   
  420d0a:	out    dx,al
  420d0b:	adc    eax,0x5d58b911
  420d10:	sub    DWORD PTR [edi-0x7ba6fc0],eax
  420d16:	outs   dx,DWORD PTR ds:[esi]
  420d17:	(bad)  
  420d18:	mov    ch,0x1b
  420d1a:	out    0x78,al
  420d1c:	mov    esp,eax
  420d1e:	inc    esi
  420d1f:	and    ebp,esp
  420d21:	pop    ds
  420d22:	inc    ecx
  420d23:	inc    eax
  420d24:	lock sub DWORD PTR [ebx],0xffffffcb
  420d28:	call   0x429a:0xb6b16def
  420d2f:	mov    al,ds:0x850ce62f
  420d34:	sub    eax,esp
  420d36:	jecxz  0x420d9b
  420d38:	and    eax,0x182856f1
  420d3d:	leave  
  420d3e:	lods   eax,DWORD PTR ds:[esi]
  420d3f:	sahf   
  420d40:	pop    eax
  420d41:	je     0x420db3
  420d43:	fisub  DWORD PTR [edi+edx*8+0x6d]
  420d47:	bound  edx,QWORD PTR [esi]
  420d49:	pop    es
  420d4a:	aad    0x6e
  420d4c:	cmp    eax,0x6dd13a05
  420d51:	out    dx,al
  420d52:	lds    ebp,FWORD PTR ds:0x50e739ae
  420d58:	scas   al,BYTE PTR es:[edi]
  420d59:	cmc    
  420d5a:	lea    edx,[edx-0x18e542de]
  420d60:	push   esi
  420d61:	stc    
  420d62:	aad    0xc
  420d64:	aaa    
  420d65:	ret    0xf2d6
  420d68:	bound  eax,QWORD PTR [ebx+0x14ad340e]
  420d6e:	inc    ecx
  420d6f:	aam    0xe9
  420d71:	bound  edi,QWORD PTR [eax+0x573d8dfe]
  420d77:	mov    ds:0x73b66295,eax
  420d7c:	or     al,0x4e
  420d7e:	in     al,0x9f
  420d80:	xor    ecx,esi
  420d82:	icebp  
  420d83:	enter  0xdff7,0xa1
  420d87:	push   ds
  420d88:	imul   ebp,DWORD PTR [edi-0xe],0x1632ddb6
  420d8f:	dec    esp
  420d90:	dec    edi
  420d91:	cmp    al,BYTE PTR [esi+0x4f]
  420d94:	fst    QWORD PTR [edx+0x7d65e0fa]
  420d9a:	pop    eax
  420d9c:	(bad)  
  420d9d:	push   ebp
  420d9e:	in     al,0x57
  420da0:	mov    eax,0x94101f1f
  420da5:	add    ecx,DWORD PTR [esi+ecx*4-0x6c]
  420da9:	xchg   DWORD PTR [eax],esi
  420dab:	hlt    
  420dac:	int    0xe8
  420dae:	sub    ebp,DWORD PTR [eax]
  420db0:	ltr    WORD PTR [ecx]
  420db3:	int    0x78
  420db5:	sub    bl,bl
  420db7:	jb     0x420df4
  420db9:	std    
  420dba:	mov    eax,ds:0x8525bba3
  420dbf:	repnz outs dx,BYTE PTR ds:[esi]
  420dc1:	je     0x420d84
  420dc3:	pusha  
  420dc4:	fnstcw WORD PTR [ecx+0x7bde35ef]
  420dca:	sub    al,0x3e
  420dcc:	std    
  420dcd:	test   eax,0xdc97310c
  420dd2:	dec    bp
  420dd4:	push   ebp
  420dd5:	cdq    
  420dd6:	and    DWORD PTR [eax+0x38cd68b5],ecx
  420ddc:	shl    DWORD PTR [esi-0x77671bce],1
  420de2:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420de4:	(bad)  
  420de6:	in     eax,dx
  420de7:	jp     0x420da5
  420de9:	(bad)
  420def:	(bad)  
  420df0:	test   DWORD PTR [edi+0x5],eax
  420df3:	repz dec ebx
  420df5:	mov    al,ds:0x7baca627
  420dfa:	add    bl,ah
  420dfc:	dec    esi
  420dfd:	inc    edi
  420dfe:	leave  
  420dff:	dec    esi
  420e00:	ret    
  420e01:	ja     0x420d98
  420e03:	mov    esp,0x74e2c911
  420e08:	dec    eax
  420e09:	xor    eax,0xcc9ff715
  420e0e:	dec    esi
  420e0f:	ret    0x3bf7
  420e12:	add    DWORD PTR [edx+edi*1-0x57],esi
  420e16:	enter  0x7fba,0xae
  420e1a:	shr    DWORD PTR [edi-0x4b1ab492],cl
  420e20:	aad    0xcc
  420e22:	mov    esi,0xd6f92a88
  420e27:	jp     0x420e77
  420e29:	jmp    0x420de4
  420e2b:	cmp    DWORD PTR [eax+0x42],ecx
  420e2e:	les    esp,FWORD PTR [edx]
  420e30:	gs int3 
  420e32:	add    bh,BYTE PTR [esi+esi*8-0x42a5d1c3]
  420e39:	mov    edx,edx
  420e3b:	jp     0x420e65
  420e3d:	xor    BYTE PTR ds:0xf3042035,dl
  420e43:	jecxz  0x420e4f
  420e45:	rcr    DWORD PTR [esi],cl
  420e47:	(bad)  
  420e48:	jg     0x420dd1
  420e4a:	ror    BYTE PTR [ebx],1
  420e4c:	mov    DWORD PTR [edx-0x6120ddd0],ebp
  420e52:	retf   
  420e53:	repz or eax,DWORD PTR [eax+eiz*1]
  420e57:	(bad)  
  420e58:	mov    al,ds:0xbfcd0387
  420e5d:	and    ecx,ebx
  420e5f:	xlat   BYTE PTR ds:[ebx]
  420e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e61:	push   esi
  420e62:	or     al,0x5e
  420e64:	ja     0x420e16
  420e66:	in     al,dx
  420e67:	jns    0x420e5b
  420e69:	mov    ecx,0x744af10a
  420e6e:	jle    0x420ebd
  420e70:	jg     0x420ee2
  420e72:	jle    0x420e7d
  420e74:	push   ebp
  420e75:	sbb    BYTE PTR [ebx],bh
  420e77:	popa   
  420e78:	sbb    eax,0x81643b9c
  420e7d:	mov    ds:0x7c0bbc7c,al
  420e82:	sub    edi,eax
  420e84:	push   ebp
  420e85:	mov    eax,ds:0xa82e46f8
  420e8a:	aad    0x5d
  420e8c:	sub    DWORD PTR [ecx+0x1d519cbd],ebx
  420e92:	jne    0x420ef3
  420e94:	pop    es
  420e95:	pusha  
  420e96:	pop    eax
  420e97:	fimul  DWORD PTR [ebx-0x246ff579]
  420e9d:	xchg   edi,eax
  420e9e:	test   ebx,0x6c896004
  420ea4:	rcr    DWORD PTR [esi+0x489c535],cl
  420eaa:	push   edx
  420eab:	pop    ebp
  420eac:	out    dx,al
  420ead:	push   cs
  420eae:	in     al,0x14
  420eb0:	xchg   edi,eax
  420eb1:	and    ebx,eax
  420eb3:	ret    
  420eb4:	leave  
  420eb5:	rol    DWORD PTR [esi],0xc3
  420eb8:	dec    ebp
  420eb9:	daa    
  420eba:	aam    0xb3
  420ebc:	add    DWORD PTR [edi-0x4f],ebp
  420ebf:	xchg   edx,eax
  420ec0:	mov    al,BYTE PTR [ecx]
  420ec2:	pop    eax
  420ec3:	les    ecx,FWORD PTR [ecx+eax*1-0x5f1e8257]
  420eca:	sar    BYTE PTR [ebp-0x29f7f1ad],1
  420ed0:	inc    esi
  420ed1:	sub    eax,0x5790575a
  420ed6:	stos   BYTE PTR es:[edi],al
  420ed7:	mov    eax,0x1a9abf9f
  420edc:	pop    edx
  420edd:	inc    eax
  420ede:	mov    ds:0xa93ea39a,al
  420ee3:	loopne 0x420ec3
  420ee5:	arpl   WORD PTR [eax-0x45],si
  420ee8:	cmp    al,0x7f
  420eea:	jecxz  0x420f68
  420eec:	xchg   ebp,eax
  420eed:	ins    BYTE PTR es:[edi],dx
  420eee:	dec    eax
  420eef:	mov    BYTE PTR ds:0x99c02ba3,bl
  420ef5:	push   ecx
  420ef6:	pop    edx
  420ef7:	gs ret 
  420ef9:	das    
  420efa:	jge    0x420f2d
  420efc:	stos   BYTE PTR es:[edi],al
  420efd:	pop    ecx
  420efe:	mov    dh,0x4b
  420f00:	loopne 0x420ebd
  420f02:	add    al,0x5d
  420f04:	mov    ecx,0xf1dca54e
  420f09:	adc    BYTE PTR [edx-0x11],dl
  420f0c:	pop    esp
  420f0d:	jae    0x420ecd
  420f0f:	aad    0xa2
  420f11:	sub    BYTE PTR [esi+ebx*8],al
  420f14:	stc    
  420f15:	pop    ss
  420f16:	les    ebx,FWORD PTR [esi-0x6c70d3fa]
  420f1c:	inc    ebp
  420f1d:	stos   DWORD PTR es:[edi],eax
  420f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f1f:	aad    0x9c
  420f21:	sar    ebx,1
  420f23:	dec    eax
  420f24:	pop    eax
  420f25:	(bad)  
  420f27:	cdq    
  420f28:	mov    ds:0x7494ebbc,al
  420f2d:	mov    ebp,ebx
  420f2f:	xchg   esp,eax
  420f30:	cli    
  420f31:	or     DWORD PTR ds:0x8c1500f9,eax
  420f37:	mov    eax,ds:0xab92bd08
  420f3c:	adc    ah,BYTE PTR [ecx-0x380c0187]
  420f42:	(bad)  
  420f43:	std    
  420f44:	int    0xbc
  420f46:	xor    al,0x6e
  420f48:	inc    eax
  420f49:	push   ds
  420f4a:	pop    ss
  420f4b:	retf   
  420f4c:	dec    edx
  420f4d:	sbb    eax,0x139c7aec
  420f52:	dec    eax
  420f53:	jmp    DWORD PTR [esi]
  420f55:	push   edx
  420f56:	mov    ah,0x6e
  420f58:	add    dh,BYTE PTR [ecx]
  420f5a:	pop    esp
  420f5b:	enter  0xb6f2,0x79
  420f5f:	out    0x4e,eax
  420f61:	cmp    bh,ah
  420f63:	fbld   TBYTE PTR [esi-0x473655d4]
  420f69:	push   ss
  420f6a:	xor    eax,0xdb3a8841
  420f6f:	mov    bl,0x54
  420f71:	push   0xebf3b7db
  420f76:	je     0x420f95
  420f78:	xchg   edx,eax
  420f79:	mov    bh,0x4d
  420f7b:	inc    ebp
  420f7c:	stc    
  420f7d:	sbb    ecx,ebx
  420f7f:	add    eax,0xcac66830
  420f84:	and    DWORD PTR [ecx],0x1cdc0dc
  420f8a:	adc    edi,esi
  420f8c:	push   esp
  420f8d:	jg     0x420fde
  420f8f:	or     ch,al
  420f91:	xchg   eax,ebp
  420f93:	repnz lods eax,DWORD PTR ds:[esi]
  420f95:	and    edi,edx
  420f97:	dec    eax
  420f98:	out    0xe5,al
  420f9a:	loopne 0x420f87
  420f9c:	mov    eax,ds:0x5e7a898
  420fa1:	fld    DWORD PTR [edi]
  420fa3:	push   ss
  420fa4:	mov    ebx,0xc4c50f15
  420faa:	push   esi
  420fab:	call   0x9d81:0x54e63712
  420fb2:	lods   eax,DWORD PTR ds:[esi]
  420fb3:	add    BYTE PTR ds:[edx],dl
  420fb6:	sbb    al,0x81
  420fb8:	mov    bh,0xb4
  420fba:	mov    eax,ds:0x77363abd
  420fbf:	daa    
  420fc0:	not    ebp
  420fc2:	daa    
  420fc3:	push   ss
  420fc4:	stos   BYTE PTR es:[edi],al
  420fc5:	(bad)  
  420fc6:	mov    al,0xa7
  420fc8:	in     al,0xe0
  420fca:	leave  
  420fcb:	or     DWORD PTR [eax+0x3b],esp
  420fce:	add    bh,BYTE PTR [edi-0x4d05313f]
  420fd4:	iret   
  420fd5:	xchg   ecx,eax
  420fd6:	dec    esp
  420fd7:	clc    
  420fd8:	not    edi
  420fda:	sbb    edi,esp
  420fdc:	cli    
  420fdd:	mov    bh,0xa6
  420fe0:	adc    DWORD PTR [eax],0x67
  420fe3:	cmp    ebp,eax
  420fe5:	sahf   
  420fe6:	inc    esi
  420fe7:	or     eax,0x26c68695
  420fec:	(bad)  
  420fed:	shl    ch,0xe1
  420ff0:	sub    eax,DWORD PTR [ecx-0x71]
  420ff3:	out    0x87,al
  420ff5:	(bad)  
  420ff6:	lods   al,BYTE PTR ds:[esi]
  420ff7:	mov    ?,WORD PTR [edi+0x49d6f2c0]
  420ffd:	into   
  420ffe:	in     al,0xe8
  421000:	ror    DWORD PTR ds:0xabd8a5ca,1
  421006:	call   0x21d01286
  42100b:	adc    eax,0x84799451
  421010:	mov    ah,0x42
  421012:	xchg   ebp,eax
  421013:	pop    esp
  421014:	and    eax,0x2eb32b0c
  421019:	ss ds xchg esp,eax
  42101c:	mov    dl,0xa3
  42101e:	test   dh,cl
  421020:	cmp    BYTE PTR es:[esi-0x46],ch
  421024:	xchg   edx,eax
  421025:	pop    esp
  421026:	dec    ebx
  421027:	cmp    BYTE PTR [ebp+0x347046c3],0x60
  42102e:	sbb    al,bh
  421030:	mov    eax,0xa89747a5
  421035:	pop    ss
  421036:	mov    dl,0x6c
  421038:	scas   eax,DWORD PTR es:[edi]
  421039:	cmc    
  42103a:	lds    ebp,FWORD PTR [ebx]
  42103c:	aas    
  42103d:	add    ebp,DWORD PTR ds:0x65c7751d
  421043:	add    DWORD PTR [eax-0x59],ecx
  421046:	es push ds
  421048:	test   dh,al
  42104a:	jmp    0x555f:0xd6ff7a1c
  421051:	push   ds
  421052:	xchg   ebx,eax
  421053:	mov    cl,0x7c
  421055:	sbb    BYTE PTR [edx+0xb],dl
  421058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421059:	aad    0x86
  42105b:	xor    esp,DWORD PTR [edx]
  42105d:	sar    BYTE PTR [ecx-0x80],0xa7
  421061:	shr    bh,cl
  421063:	xor    BYTE PTR [eax-0x1c813c47],ah
  421069:	mov    ebx,0x80cab70f
  42106e:	mov    ds:0x5ffa7dd8,eax
  421073:	inc    ebp
  421074:	lea    esp,[eax]
  421076:	fwait
  421077:	aam    0x9a
  421079:	lea    esi,[esi+0x4d4d9b11]
  42107f:	mov    esi,0xa3c4622d
  421084:	test   al,0xb0
  421086:	into   
  421087:	xchg   esi,eax
  421088:	or     eax,0x6993a81b
  42108d:	loop   0x4210fb
  42108f:	mov    bl,0xf4
  421091:	xchg   ebx,eax
  421092:	add    al,0xf6
  421094:	jle    0x4210be
  421096:	mov    al,0x64
  421098:	jno    0x4210f6
  42109a:	jp     0x4210e6
  42109c:	cmp    DWORD PTR [ebx-0x6a],0x4bfe1e6f
  4210a3:	xchg   ecx,eax
  4210a4:	lahf   
  4210a5:	les    ebp,FWORD PTR [ebx+0x400d5fe4]
  4210ab:	out    dx,al
  4210ac:	ror    BYTE PTR [edx],cl
  4210ae:	lds    ebp,FWORD PTR [eax]
  4210b0:	pop    ss
  4210b1:	mov    dl,0x7a
  4210b3:	pop    esi
  4210b4:	fcomp  QWORD PTR [ebp+0x1e146d1e]
  4210ba:	mov    esi,0xec9d0851
  4210bf:	and    DWORD PTR [ebp-0x77],0xffffffff
  4210c3:	ins    DWORD PTR es:[edi],dx
  4210c4:	cmp    BYTE PTR [ebx+0x7d15c5ba],dh
  4210ca:	xchg   esp,eax
  4210cb:	pop    ss
  4210cc:	push   edx
  4210cd:	aad    0x37
  4210cf:	jmp    0xd430:0x47bfe3df
  4210d6:	mov    BYTE PTR [edi-0x43],0x4a
  4210da:	ret    
  4210db:	jo     0x4210f7
  4210dd:	xor    ah,BYTE PTR [esi]
  4210df:	sbb    ah,BYTE PTR [ebp-0x47f16dfd]
  4210e5:	je     0x4210d8
  4210e7:	cmp    eax,0x85a4dbd0
  4210ec:	jl     0x421085
  4210ee:	fstp   QWORD PTR [edi+ecx*4-0x61537894]
  4210f5:	dec    edx
  4210f6:	xlat   BYTE PTR ds:[ebx]
  4210f7:	jo     0x421155
  4210f9:	dec    ecx
  4210fa:	(bad)  
  4210fb:	mov    ecx,ebx
  4210fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fe:	pusha  
  4210ff:	fisttp DWORD PTR [eax*2-0x7fa51fbb]
  421106:	add    BYTE PTR [edx-0x1b],cl
  421109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42110a:	jns    0x421173
  42110c:	scas   al,BYTE PTR es:[edi]
  42110d:	icebp  
  42110e:	test   al,0xe0
  421110:	clc    
  421111:	inc    edi
  421112:	pop    ds
  421113:	mov    eax,ds:0xfc794a34
  421118:	into   
  421119:	mov    edi,DWORD PTR [esi+0x6f]
  42111c:	dec    eax
  42111d:	or     dl,BYTE PTR [esi]
  42111f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421120:	sti    
  421121:	pop    ss
  421122:	dec    edi
  421123:	arpl   cx,dx
  421125:	cli    
  421126:	push   esp
  421127:	add    eax,0x573f90f6
  42112c:	and    DWORD PTR [ebp+0x683fd3fa],0x4
  421133:	sar    DWORD PTR [edx-0x32],0xed
  421137:	mov    ebp,0xaeafb985
  42113c:	jmp    0x421194
  42113e:	push   ss
  42113f:	push   edx
  421140:	jmp    0x84143f0b
  421145:	push   ss
  421146:	fcomp  DWORD PTR [eax+esi*1-0x54750d24]
  42114d:	fmul   st,st(0)
  42114f:	shl    dl,0x9c
  421152:	jge    0x421189
  421154:	add    BYTE PTR [ebp-0x58],0x72
  421158:	inc    ebx
  421159:	add    eax,DWORD PTR [edi+0x15]
  42115c:	je     0x4210ed
  42115e:	inc    ebx
  42115f:	icebp  
  421160:	das    
  421161:	pop    esi
  421162:	mov    eax,0xcfa593f9
  421167:	aaa    
  421168:	hlt    
  421169:	hlt    
  42116a:	mov    cl,dl
  42116c:	inc    esi
  42116d:	test   BYTE PTR [ebx-0x48],cl
  421170:	mov    esp,0x544303ce
  421175:	(bad)  
  421176:	in     eax,0x82
  421178:	sahf   
  421179:	cld    
  42117a:	or     eax,0x74b7c6fe
  42117f:	push   es
  421180:	daa    
  421181:	popa   
  421182:	imul   edx,DWORD PTR [esi-0x6b5c5d77],0xffffff9f
  421189:	add    edi,DWORD PTR [ebp+0x41d3c3ce]
  42118f:	loopne 0x421136
  421191:	cwde   
  421192:	push   edx
  421193:	mov    esi,0x948bd020
  421198:	(bad)  
  42119a:	adc    ebx,edx
  42119c:	mov    ecx,0x50ba9596
  4211a1:	(bad)  
  4211a2:	hlt    
  4211a3:	test   eax,0x376e2009
  4211a8:	xor    dl,BYTE PTR [eax-0x61cee22c]
  4211ae:	xchg   BYTE PTR [eax+ebx*2-0x2c482cfb],dh
  4211b5:	fcmovnu st,st(2)
  4211b7:	shl    DWORD PTR [esi+0x71],cl
  4211ba:	fsubp  st(0),st
  4211bc:	fld    QWORD PTR [esi+0x12]
  4211bf:	mov    esp,0x3647889c
  4211c4:	retf   0xfbe1
  4211c7:	pop    es
  4211c8:	retf   
  4211c9:	je     0x4211a7
  4211cb:	add    al,0x26
  4211cd:	pop    edi
  4211ce:	xchg   DWORD PTR [ebp+0x71132f0c],eax
  4211d4:	sbb    al,0x9
  4211d6:	push   esp
  4211d7:	adc    eax,DWORD PTR [ebp+0x49bd0739]
  4211dd:	cmp    eax,0xe97457c0
  4211e2:	iret   
  4211e3:	retf   0xd649
  4211e6:	sub    edx,ecx
  4211e8:	pop    esp
  4211e9:	loop   0x421175
  4211eb:	out    dx,eax
  4211ec:	cmp    DWORD PTR [esi],edx
  4211ee:	or     eax,eax
  4211f0:	outs   dx,DWORD PTR ds:[esi]
  4211f1:	pusha  
  4211f2:	nop    DWORD PTR [ebp+0x19aec9a8]
  4211f9:	jl     0x4211aa
  4211fb:	cmp    DWORD PTR [esi-0xbaab4e],edi
  421201:	nop
  421202:	xchg   esi,eax
  421203:	cmp    eax,0x1d98ec9a
  421208:	mov    esi,0x101f32a2
  42120d:	sub    al,BYTE PTR [ebp-0x19]
  421210:	sbb    dh,ch
  421212:	int    0xfa
  421214:	(bad)  
  421215:	sbb    DWORD PTR [esi],eax
  421217:	mov    edi,0xbc974134
  42121c:	fld    DWORD PTR [edx+0x238198e4]
  421222:	adc    BYTE PTR [esi],ch
  421224:	retf   
  421225:	mov    ebp,0x59aa412c
  42122a:	lods   eax,DWORD PTR ds:[esi]
  42122b:	(bad)  
  42122c:	hlt    
  42122d:	sti    
  42122e:	(bad)  
  42122f:	mov    esp,0x464588b9
  421234:	aam    0x6
  421236:	jp     0x421286
  421238:	popf   
  421239:	in     eax,dx
  42123a:	ins    DWORD PTR es:[edi],dx
  42123b:	inc    edx
  42123c:	push   ss
  42123d:	(bad)  
  42123e:	in     al,dx
  42123f:	cmp    BYTE PTR [esp+eax*8],dl
  421242:	clc    
  421243:	push   cs
  421244:	jno    0x421224
  421246:	jae    0x421257
  421248:	(bad)  
  421249:	outs   dx,BYTE PTR ds:[esi]
  42124a:	lea    edi,[ebx-0x185699e5]
  421250:	inc    ebx
  421251:	xchg   ebx,eax
  421252:	dec    ebx
  421253:	aad    0x87
  421255:	add    DWORD PTR [ecx+0x72],edx
  421258:	out    dx,al
  421259:	jge    0x4212cf
  42125b:	adc    ebp,DWORD PTR [edx+0x32]
  42125e:	shl    BYTE PTR [ecx+0x2a],1
  421261:	popa   
  421262:	xchg   ebp,eax
  421263:	sbb    al,BYTE PTR [eax-0x467cc24c]
  421269:	jmp    0x4212aa
  42126b:	adc    cl,0xc7
  42126e:	call   0xb43b5255
  421273:	add    edi,DWORD PTR [ecx+edi*2+0x64]
  421277:	pop    esp
  421278:	hlt    
  421279:	fbstp  TBYTE PTR [ebx+0x6e]
  42127c:	lahf   
  42127d:	cmp    edi,DWORD PTR [esi+0x53]
  421280:	fcmovbe st,st(0)
  421282:	out    0xd4,eax
  421284:	cwde   
  421285:	dec    edx
  421286:	rol    bh,0xc3
  421289:	push   ecx
  42128a:	jnp    0x42128c
  42128c:	push   es
  42128d:	fisub  DWORD PTR [ecx-0x66]
  421290:	(bad)
  421293:	mov    bl,0x97
  421295:	cld    
  421296:	mov    ecx,0xcdabea7
  42129b:	mov    dl,0x75
  42129d:	fsub   QWORD PTR [ebp-0x616e78d6]
  4212a3:	loop   0x42126f
  4212a5:	sub    BYTE PTR [esi-0x4f257147],bh
  4212ab:	fsubr  DWORD PTR [edi]
  4212ad:	aas    
  4212ae:	retf   
  4212af:	retf   
  4212b0:	repz push 0xd4d17f02
  4212b6:	test   DWORD PTR [eax+0x25606127],esp
  4212bc:	add    cl,BYTE PTR [ecx+0xa]
  4212bf:	mov    bh,0x48
  4212c1:	lahf   
  4212c2:	not    dh
  4212c4:	outs   dx,DWORD PTR ds:[esi]
  4212c5:	loop   0x421274
  4212c7:	outs   dx,BYTE PTR ds:[esi]
  4212c8:	retf   
  4212c9:	xchg   esp,eax
  4212ca:	sub    al,0x7a
  4212cc:	test   bh,bl
  4212ce:	xor    al,0xf8
  4212d0:	xchg   ebx,eax
  4212d1:	jge    0x42127a
  4212d3:	pop    ds
  4212d4:	mov    cl,0x9b
  4212d6:	int3   
  4212d7:	frstor [esp+ebp*2-0x61]
  4212db:	rcr    DWORD PTR [ebx],cl
  4212dd:	out    0xce,eax
  4212df:	sub    DWORD PTR ds:0xc1eb56b6,ebx
  4212e5:	cmc    
  4212e6:	test   BYTE PTR [edx+0x34],ah
  4212e9:	std    
  4212ea:	cli    
  4212eb:	jae    0x4212dc
  4212ed:	cmp    al,BYTE PTR [esi]
  4212ef:	xchg   BYTE PTR [ebp+0xbe23035],cl
  4212f5:	inc    esi
  4212f6:	fucomi st,st(1)
  4212f8:	jge    0x4212b1
  4212fa:	ret    0xc012
  4212fd:	push   0xcecefa42
  421302:	into   
  421303:	ret    
  421304:	mov    al,0xc6
  421306:	test   eax,0xb8ebb62d
  42130b:	mov    ch,bl
  42130d:	sbb    al,0xf9
  42130f:	sbb    BYTE PTR [edi+edi*4+0x13],cl
  421313:	and    esp,DWORD PTR [eax-0x6b]
  421316:	mov    ecx,0xadc37bcf
  42131b:	fidivr DWORD PTR [eax+edx*8]
  42131e:	repnz sbb eax,0xd596583b
  421324:	lods   eax,DWORD PTR ds:[esi]
  421325:	inc    ecx
  421326:	cwde   
  421327:	push   ds
  421328:	test   DWORD PTR [ecx],ebx
  42132a:	xchg   ebx,eax
  42132b:	cmp    eax,0x4d2aaf07
  421330:	ins    DWORD PTR es:[edi],dx
  421331:	sbb    eax,0x95764ece
  421336:	and    BYTE PTR [edi],ah
  421338:	xor    al,BYTE PTR [eax+0x43]
  42133b:	div    ah
  42133d:	mov    edi,0x7e544884
  421342:	retf   0x7ca4
  421345:	add    al,0x35
  421347:	inc    edx
  421348:	pop    esp
  421349:	cmp    ch,BYTE PTR [esp+ebp*8]
  42134c:	shl    BYTE PTR [ebp-0x5e134262],1
  421352:	rcl    BYTE PTR [esp+esi*1],0x76
  421356:	imul   ecx,DWORD PTR [ecx+0x31],0x5787509e
  42135d:	mov    bh,0x4
  42135f:	js     0x4213d7
  421361:	outs   dx,DWORD PTR ds:[esi]
  421362:	mov    ss,WORD PTR [eax-0xbf83204]
  421368:	push   esp
  421369:	nop
  42136a:	jno    0x421398
  42136c:	test   ebp,edx
  42136e:	cwde   
  42136f:	mov    ds:0x63cd1dca,al
  421374:	fmul   QWORD PTR [esi+edi*1+0x63b3d30b]
  42137b:	add    esi,eax
  42137d:	pop    ds
  42137e:	cmp    al,0x6e
  421380:	je     0x421388
  421382:	mov    esp,0xd31b3a96
  421387:	nop
  421388:	xor    al,0x8e
  42138a:	mov    al,gs:0x9ac57330
  421390:	loop   0x4213da
  421392:	jmp    0xba909a91
  421397:	pop    ss
  421398:	sub    esi,DWORD PTR [ebx-0x17]
  42139b:	sub    DWORD PTR [ecx-0x46],esi
  42139e:	sbb    ebx,DWORD PTR [edx+esi*2-0x7b]
  4213a2:	mov    ebx,0xd3df2c2d
  4213a7:	mov    ebp,0x2409b322
  4213ac:	mov    al,0x1
  4213ae:	cmp    ch,bh
  4213b0:	push   edi
  4213b1:	aam    0x6a
  4213b3:	iret   
  4213b4:	and    ebx,0xbf3b318f
  4213ba:	sbb    DWORD PTR [edi+0x4b6e93b6],esp
  4213c0:	icebp  
  4213c1:	inc    ecx
  4213c2:	lea    eax,[ebp-0x702aa924]
  4213c8:	enter  0x62f5,0x1c
  4213cc:	ror    esi,0x85
  4213cf:	cmp    BYTE PTR [esi-0x8],0x10
  4213d3:	inc    esp
  4213d4:	cmp    DWORD PTR [edx],esp
  4213d6:	add    ecx,ebp
  4213d8:	inc    esp
  4213d9:	xor    ebx,esi
  4213db:	mov    eax,ds:0x4b6760ba
  4213e0:	stos   DWORD PTR es:[edi],eax
  4213e1:	daa    
  4213e2:	jmp    0x916ade76
  4213e7:	daa    
  4213e8:	xchg   ebp,eax
  4213e9:	push   eax
  4213ea:	rcr    BYTE PTR [bx+di],0xd0
  4213ee:	gs jo  0x421465
  4213f1:	adc    BYTE PTR [eax-0x1aeff462],0xc2
  4213f8:	in     al,0xa5
  4213fa:	cmc    
  4213fb:	(bad)  
  4213fc:	loop   0x4213a3
  4213fe:	(bad)  
  4213ff:	mov    ch,0x86
  421401:	or     eax,0xe8e76d55
  421406:	push   ds
  421407:	icebp  
  421408:	iret   
  421409:	inc    esi
  42140a:	add    DWORD PTR [ebp-0x5c],ecx
  42140d:	hlt    
  42140e:	xchg   ebx,esi
  421410:	xor    BYTE PTR [eax],bl
  421412:	pop    esi
  421413:	xor    esi,DWORD PTR [ebx-0x5f448866]
  421419:	cld    
  42141a:	ret    
  42141b:	fs pop es
  42141d:	cmp    BYTE PTR [eax+0x31],dl
  421420:	xor    eax,0x450bdb32
  421425:	nop
  421426:	sub    BYTE PTR [esi-0x63],dh
  421429:	imul   edx,ebx,0x660f389a
  42142f:	inc    ebx
  421430:	cmc    
  421431:	out    dx,eax
  421432:	in     al,0x64
  421434:	push   esi
  421435:	push   eax
  421436:	mov    al,ds:0xbe5a0b
  42143b:	out    0x9c,eax
  42143d:	fdiv   QWORD PTR [edi+0x1d]
  421440:	xchg   edi,eax
  421441:	jb     0x42140c
  421443:	fwait
  421444:	les    esp,FWORD PTR [ecx+0x355d1aa]
  42144a:	or     eax,0xf29cf45
  42144f:	and    eax,0xcf72ae18
  421454:	rcr    bh,1
  421456:	and    dl,BYTE PTR [edx+ebp*4]
  421459:	int    0x1b
  42145b:	gs neg ah
  42145e:	inc    edi
  42145f:	stos   DWORD PTR es:[edi],eax
  421460:	sbb    cl,ch
  421462:	push   edx
  421463:	sub    BYTE PTR [ecx+0x37],0xbf
  421467:	cmp    BYTE PTR [esi-0x12],0x9e
  42146b:	jge    0x421403
  42146d:	sub    edi,edx
  42146f:	cmp    ah,BYTE PTR [ecx-0xa]
  421472:	loop   0x4213fc
  421474:	or     dl,BYTE PTR [edx]
  421476:	or     eax,0x1ccbc8df
  42147b:	sti    
  42147c:	cmp    ecx,esi
  42147e:	mov    BYTE PTR [ebp-0x49f206a6],dh
  421484:	pop    ecx
  421485:	stos   DWORD PTR es:[edi],eax
  421486:	es pop ecx
  421488:	pop    esp
  421489:	imul   esp,DWORD PTR [ecx+0x2a66c721],0x41cbc68
  421493:	pop    edx
  421494:	mov    ds:0x3e9c56a3,al
  421499:	int3   
  42149a:	iret   
  42149b:	push   esp
  42149c:	push   ebp
  42149d:	cmp    ecx,esi
  42149f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214a0:	cmc    
  4214a1:	jmp    0x421511
  4214a3:	into   
  4214a4:	add    bh,BYTE PTR ds:0x9b9651f0
  4214aa:	not    BYTE PTR [eax+edi*8-0x54627060]
  4214b1:	int3   
  4214b2:	fistp  DWORD PTR [ebp-0x7be329d6]
  4214b8:	fld    QWORD PTR [edi+0x13c929b3]
  4214be:	add    eax,0xc27522eb
  4214c3:	adc    DWORD PTR [esi],ecx
  4214c5:	scas   al,BYTE PTR es:[edi]
  4214c6:	xchg   ecx,eax
  4214c7:	push   0xffffffaa
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x99328101
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0x1d17c092
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	call   DWORD PTR [esi+edx*8]
  4217eb:	and    BYTE PTR [edx-0x20],dl
  4217ee:	cmc    
  4217ef:	mov    ds:0xb045092f,al
  4217f4:	call   0xb0cebe77
  4217f9:	jmp    0x450d:0x2fa2f5e3
  421800:	mov    al,0xa8
  421802:	sbb    DWORD PTR [ecx-0x74],0xf5e352b0
  421809:	mov    ds:0xb0450d2f,al
  42180e:	call   0xb0ce7194
  421813:	push   edx
  421814:	jecxz  0x42180b
  421816:	mov    ds:0xb0450d2f,al
  42181b:	call   0xb0ce71a1
  421820:	push   edx
  421821:	jecxz  0x421818
  421823:	mov    ds:0xb045f52f,al
  421828:	call   0xbe785ebc
  42182d:	push   edx
  42182e:	push   edi
  42182f:	cld    
  421830:	outs   dx,DWORD PTR ds:[esi]
  421831:	push   cs
  421832:	mov    ch,0x44
  421834:	cld    
  421835:	and    eax,0xd9e40da0
  42183a:	and    ebx,eax
  42183c:	test   eax,edx
  42183e:	inc    eax
  42183f:	push   0x37
  421841:	rol    DWORD PTR [ebp-0x2112c55f],1
  421847:	cmp    al,0x8c
  421849:	add    DWORD PTR [edx-0x3d9a97b3],0xe579ef9d
  421853:	fidiv  WORD PTR [edx-0x59]
  421856:	mov    edx,0x2a600ff1
  42185b:	aam    0x8d
  42185d:	scas   eax,DWORD PTR es:[edi]
  42185e:	push   esp
  42185f:	cmp    DWORD PTR [edx-0x5d0a1c8a],0xb0450d2f
  421869:	out    dx,eax
  42186a:	sbb    BYTE PTR [ebp+0x71aaf3d5],ah
  421870:	jmp    ecx
  421872:	xlat   BYTE PTR ds:[ebx]
  421873:	lahf   
  421874:	dec    edi
  421875:	repz adc BYTE PTR [ebx],dl
  421878:	push   ebx
  421879:	aam    0xd5
  42187b:	pop    esi
  42187c:	jmp    0x7ff732b
  421881:	sbb    eax,0x9b8bd0d5
  421886:	je     0x4218aa
  421888:	pop    eax
  421889:	mov    ebx,0x65259b90
  42188e:	mov    ebp,0xd7ade222
  421893:	mov    ch,0xba
  421895:	adc    al,0x1b
  421897:	addr16 test al,0x65
  42189a:	lea    edx,[edx+edi*4-0x5e]
  42189e:	jns    0x42186b
  4218a0:	xchg   dl,bh
  4218a2:	shl    dl,cl
  4218a4:	(bad)  
  4218a5:	cli    
  4218a6:	xlat   BYTE PTR ds:[ebx]
  4218a7:	lahf   
  4218a8:	dec    edi
  4218a9:	repz adc BYTE PTR [edx],dl
  4218ac:	push   ebx
  4218ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218ae:	dec    ecx
  4218af:	shr    cl,0x4a
  4218b2:	jp     0x421863
  4218b4:	pop    es
  4218b5:	or     BYTE PTR [eax+0x7a],cl
  4218b8:	mov    eax,DWORD PTR [ecx]
  4218ba:	jmp    0xe2d714c
  4218bf:	xor    BYTE PTR ds:0xe2b82055,ah
  4218c5:	ret    
  4218c6:	mov    eax,ds:0x860aba1e
  4218cb:	cli    
  4218cc:	test   al,0x6d
  4218ce:	cmc    
  4218cf:	xlat   BYTE PTR ds:[ebx]
  4218d0:	mov    edx,0xe43ae8ba
  4218d5:	rep stos BYTE PTR es:[edi],al
  4218d7:	jno    0x4218d8
  4218d9:	mov    ds:0xb0450d2f,al
  4218de:	call   0xf61e7264
  4218e3:	push   edx
  4218e4:	jecxz  0x42189f
  4218e6:	mov    ds:0x60e50d2d,eax
  4218eb:	or     esi,0x59
  4218ee:	mov    WORD PTR [eax-0x5d0a1cae],?
  4218f4:	das    
  4218f5:	in     eax,dx
  4218f6:	inc    ebp
  4218f7:	mov    bl,0xe9
  4218f9:	mov    bl,BYTE PTR [eax-0x7a]
  4218fc:	mov    al,0x52
  4218fe:	or     eax,0xb12fa2f1
  421903:	inc    ebx
  421904:	mov    al,0xe8
  421906:	sbb    DWORD PTR [ecx-0x74],0xf5e3efa1
  42190d:	mov    ds:0xb0450d3f,al
  421912:	call   0xb0ce729b
  421917:	adc    esp,ebx
  421919:	cmc    
  42191a:	mov    dl,0x2f
  42191c:	or     eax,0x81e8b245
  421921:	pop    esp
  421922:	mov    WORD PTR [ecx-0x5d0a1cae],?
  421928:	das    
  421929:	or     BYTE PTR [ebp-0x4f],al
  42192c:	call   0xb0ce72b2
  421931:	push   edx
  421932:	mov    bl,0xf9
  421934:	mov    ds:0xb045092f,al
  421939:	jmp    0xb2ce75a3
  42193e:	push   edx
  42193f:	jecxz  0x4219b6
  421941:	mov    ds:0xb0451d2f,al
  421946:	clc    
  421947:	sbb    DWORD PTR [ecx-0x74],0xf5e342b0
  42194e:	mov    dl,0x2f
  421950:	or     eax,0x81e8b045
  421955:	dec    ecx
  421956:	mov    WORD PTR [eax-0x5d0a1cae],?
  42195c:	das    
  42195d:	or     eax,0x75e8b045
  421962:	pusha  
  421963:	xor    BYTE PTR [eax-0x5d0a1fc5],0x2f
  42196a:	std    
  42196b:	dec    esi
  42196c:	mov    al,0xa7
  42196e:	enter  0x8c59,0xb0
  421972:	push   edx
  421973:	jecxz  0x42196a
  421975:	mov    ds:0xb0450d2f,al
  42197a:	call   0xb0ce7300
  42197f:	push   edx
  421980:	jecxz  0x421977
  421982:	mov    ds:0xb0450d2f,al
  421987:	call   0xb0ce730d
  42198c:	push   edx
  42198d:	jecxz  0x421984
  42198f:	mov    ds:0xb0450d2f,al
  421994:	call   0xb0ce731a
  421999:	push   edx
  42199a:	jecxz  0x421991
  42199c:	mov    ds:0xb0450d2f,al
  4219a1:	call   0xb0ce7327
  4219a6:	push   edx
  4219a7:	jecxz  0x42199e
  4219a9:	mov    ds:0xb0450d2f,al
  4219ae:	call   0xb0ce7334
  4219b3:	push   edx
  4219b4:	jecxz  0x4219ab
  4219b6:	mov    ds:0xb0450d2f,al
  4219bb:	call   0xb0ce7341
  4219c0:	push   edx
  4219c1:	jecxz  0x4219b8
  4219c3:	mov    ds:0xb0450d2f,al
  4219c8:	call   0xb0ce734e
  4219cd:	push   edx
  4219ce:	jecxz  0x4219c5
  4219d0:	mov    ds:0xb0450d2f,al
  4219d5:	call   0x9ece735b
  4219da:	xchg   BYTE PTR es:[ebp+0x450d2fd6],cl
  4219e1:	mov    al,0x8
  4219e3:	mov    bl,BYTE PTR [ecx-0x74]
  4219e6:	mov    al,ds:0x76f5e352
  4219eb:	sub    ecx,DWORD PTR ds:0x81e8b445
  4219f1:	or     ecx,ecx
  4219f3:	repz pusha 
  4219f5:	mov    bh,0xba
  4219f7:	mov    ds:0xb0450d2f,al
  4219fc:	call   0x50ce73a2
  421a01:	jl     0x421994
  421a03:	xchg   al,dl
  421a05:	dec    esp
  421a06:	or     eax,0xe1e8b045
  421a0b:	pop    ecx
  421a0c:	mov    WORD PTR [eax-0x5d0a175e],?
  421a12:	jne    0x421a21
  421a14:	inc    ebp
  421a15:	mov    al,0x30
  421a17:	test   DWORD PTR [ecx-0x74],ebx
  421a1a:	mov    al,0x52
  421a1c:	jecxz  0x421a13
  421a1e:	mov    ds:0xb0450d2f,al
  421a23:	call   0xb0ce93a9
  421a28:	mov    dl,0xe3
  421a2a:	cmc    
  421a2b:	mov    ds:0xb0450d2f,al
  421a30:	call   0xb0ce73b6
  421a35:	push   edx
  421a36:	jecxz  0x421a2d
  421a38:	mov    ds:0xb0450d2f,al
  421a3d:	call   0xb0ce73c3
  421a42:	push   edx
  421a43:	jecxz  0x421a3a
  421a45:	mov    ds:0xb0450d2f,al
  421a4a:	call   0xb0ce73d0
  421a4f:	push   edx
  421a50:	jecxz  0x421a47
  421a52:	mov    ds:0xb0450d2f,al
  421a57:	call   0xb0ce73dd
  421a5c:	push   edx
  421a5d:	jecxz  0x421a54
  421a5f:	mov    ds:0xb0450d2f,al
  421a64:	call   0xb0ce73ea
  421a69:	push   edx
  421a6a:	jecxz  0x421a61
  421a6c:	mov    ds:0xb0450d2f,al
  421a71:	call   0xb0ce73f7
  421a76:	push   edx
  421a77:	jecxz  0x421a6e
  421a79:	mov    ds:0xb0450d2f,al
  421a7e:	call   0xb0ce7404
  421a83:	push   edx
  421a84:	jecxz  0x421a7b
  421a86:	mov    ds:0xb0450d2f,al
  421a8b:	call   0xb0ce7411
  421a90:	push   edx
  421a91:	jecxz  0x421a88
  421a93:	mov    ds:0xb0450d2f,al
  421a98:	call   0xb0ce741e
  421a9d:	push   edx
  421a9e:	jecxz  0x421a95
  421aa0:	mov    ds:0xb0450d2f,al
  421aa5:	call   0xb0ce742b
  421aaa:	push   edx
  421aab:	jecxz  0x421aa2
  421aad:	mov    ds:0xb0450d2f,al
  421ab2:	call   0xb0ce7438
  421ab7:	push   edx
  421ab8:	jecxz  0x421aaf
  421aba:	mov    ds:0xb0450d2f,al
  421abf:	call   0xb0ce7445
  421ac4:	push   edx
  421ac5:	jecxz  0x421abc
  421ac7:	mov    ds:0xb0450d2f,al
  421acc:	call   0xb0ce7452
  421ad1:	push   edx
  421ad2:	jecxz  0x421ac9
  421ad4:	mov    ds:0xb0450d2f,al
  421ad9:	call   0xb0ce745f
  421ade:	push   edx
  421adf:	jecxz  0x421ad6
  421ae1:	mov    ds:0xb0450d2f,al
  421ae6:	call   0xb0ce746c
  421aeb:	push   edx
  421aec:	jecxz  0x421ae3
  421aee:	mov    ds:0xb0450d2f,al
  421af3:	call   0xb0ce7479
  421af8:	push   edx
  421af9:	jecxz  0x421af0
  421afb:	mov    ds:0xb0450d2f,al
  421b00:	call   0xb0ce7486
  421b05:	push   edx
  421b06:	jecxz  0x421afd
  421b08:	mov    ds:0xb0450d2f,al
  421b0d:	call   0xb0ce7493
  421b12:	push   edx
  421b13:	jecxz  0x421b0a
  421b15:	mov    ds:0xb0450d2f,al
  421b1a:	call   0xb0ce74a0
  421b1f:	push   edx
  421b20:	jecxz  0x421b17
  421b22:	mov    ds:0xb0450d2f,al
  421b27:	call   0xb0ce74ad
  421b2c:	push   edx
  421b2d:	jecxz  0x421b24
  421b2f:	mov    ds:0xb0450d2f,al
  421b34:	call   0xb0ce74ba
  421b39:	push   edx
  421b3a:	jecxz  0x421b31
  421b3c:	mov    ds:0xb0450d2f,al
  421b41:	call   0xb0ce74c7
  421b46:	push   edx
  421b47:	jecxz  0x421b3e
  421b49:	mov    ds:0xb0450d2f,al
  421b4e:	call   0xb0ce74d4
  421b53:	push   edx
  421b54:	jecxz  0x421b4b
  421b56:	mov    ds:0xb0450d2f,al
  421b5b:	call   0xb0ce74e1
  421b60:	push   edx
  421b61:	jecxz  0x421b58
  421b63:	mov    ds:0xb0450d2f,al
  421b68:	call   0xb0ce74ee
  421b6d:	push   edx
  421b6e:	jecxz  0x421b65
  421b70:	mov    ds:0xb0450d2f,al
  421b75:	call   0xb0ce74fb
  421b7a:	push   edx
  421b7b:	jecxz  0x421b72
  421b7d:	mov    ds:0xb0450d2f,al
  421b82:	call   0xb0ce7508
  421b87:	push   edx
  421b88:	jecxz  0x421b7f
  421b8a:	mov    ds:0xb0450d2f,al
  421b8f:	call   0xb0ce7515
  421b94:	push   edx
  421b95:	jecxz  0x421b8c
  421b97:	mov    ds:0xb0450d2f,al
  421b9c:	call   0xb0ce7522
  421ba1:	push   edx
  421ba2:	jecxz  0x421b99
  421ba4:	mov    ds:0xb0450d2f,al
  421ba9:	call   0xb0ce752f
  421bae:	push   edx
  421baf:	jecxz  0x421ba6
  421bb1:	mov    ds:0xb0450d2f,al
  421bb6:	call   0xb0ce753c
  421bbb:	push   edx
  421bbc:	jecxz  0x421bb3
  421bbe:	mov    ds:0xb0450d2f,al
  421bc3:	call   0xb0ce7549
  421bc8:	push   edx
  421bc9:	jecxz  0x421bc0
  421bcb:	mov    ds:0xb0450d2f,al
  421bd0:	call   0xb0ce7556
  421bd5:	push   edx
  421bd6:	jecxz  0x421bcd
  421bd8:	mov    ds:0xb0450d2f,al
  421bdd:	call   0xb0ce7563
  421be2:	push   edx
  421be3:	jecxz  0x421bda
  421be5:	mov    ds:0xdf450d2f,al
  421bea:	inc    eax
  421beb:	mov    bl,BYTE PTR [ecx-0x5d]
  421bee:	mov    al,0x52
  421bf0:	repz cmc 
  421bf2:	mov    ds:0xc19faf05,al
  421bf7:	mov    ?,WORD PTR [esi+0x74]
  421bfa:	adc    dh,BYTE PTR [edi]
  421bfc:	add    cl,BYTE PTR [esi]
  421bfe:	ret    
  421bff:	dec    edx
  421c00:	cmp    al,0xb9
  421c02:	rcl    dh,1
  421c04:	cdq    
  421c05:	add    eax,0xe5019f03
  421c0a:	cmc    
  421c0b:	cwde   
  421c0c:	inc    esi
  421c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c0e:	mov    WORD PTR [ebx+0x66118a9e],es
  421c14:	mov    ch,0x83
  421c16:	sbb    eax,0x2f80e252
  421c1b:	sub    ah,dl
  421c1d:	cmp    BYTE PTR [ebp-0x7ddacb30],bh
  421c23:	outs   dx,DWORD PTR ds:[esi]
  421c24:	ds loope 0x421c3a
  421c27:	dec    edi
  421c28:	add    bl,BYTE PTR [ebx-0x7532ac6c]
  421c2e:	dec    ecx
  421c2f:	lahf   
  421c30:	stos   BYTE PTR es:[edi],al
  421c31:	jge    0x421c32
  421c33:	dec    ebp
  421c34:	dec    ebx
  421c35:	sub    eax,0x2b19bfe6
  421c3a:	je     0x421c05
  421c3c:	enter  0xb214,0xb6
  421c40:	ins    BYTE PTR es:[edi],dx
  421c41:	sahf   
  421c42:	dec    ebx
  421c43:	ins    BYTE PTR es:[edi],dx
  421c44:	int    0x75
  421c46:	add    BYTE PTR [ebx],al
  421c48:	outs   dx,BYTE PTR ds:[esi]
  421c49:	mov    bh,0xe6
  421c4b:	popa   
  421c4c:	(bad)  
  421c4d:	leave  
  421c4e:	retf   
  421c4f:	sub    al,0xb5
  421c51:	shl    DWORD PTR [ebx-0x1f],1
  421c54:	call   FWORD PTR [eax-0x22b74a64]
  421c5a:	jmp    0xac274f27
  421c5f:	mov    bh,0x33
  421c61:	jecxz  0x421c2d
  421c63:	or     al,0x29
  421c65:	retf   0x8cb7
  421c68:	sar    BYTE PTR [esp+esi*2],1
  421c6b:	jl     0x421ccc
  421c6d:	mov    ?,WORD PTR [edi]
  421c6f:	cs out dx,al
  421c71:	out    dx,eax
  421c72:	into   
  421c73:	jmp    edi
  421c75:	jmp    0x421c0f
  421c77:	or     al,0x3f
  421c79:	frstpm(287 only) 
  421c7b:	dec    edx
  421c7c:	clc    
  421c7d:	aaa    
  421c7e:	jp     0x421c21
  421c80:	test   eax,0xb7209224
  421c85:	mov    edx,0x3f41d064
  421c8a:	mov    dh,0xfd
  421c8c:	test   eax,0x4da6b805
  421c91:	or     ch,BYTE PTR [eax+0x34b337c4]
  421c97:	retf   0x757e
  421c9a:	add    al,0x2d
  421c9c:	inc    ebp
  421c9d:	cmp    eax,0xf4ef9a50
  421ca2:	xor    bh,BYTE PTR [esi+0x0]
  421ca5:	ins    BYTE PTR es:[edi],dx
  421ca6:	jno    0x421cde
  421ca8:	imul   edx,ebx,0x2a325b04
  421cae:	pop    esp
  421caf:	in     eax,dx
  421cb0:	scas   eax,DWORD PTR es:[edi]
  421cb1:	pop    edi
  421cb2:	std    
  421cb3:	cmp    al,0x24
  421cb5:	sub    eax,0x6c8b5b07
  421cba:	jl     0x421c52
  421cbc:	and    esi,DWORD PTR [ecx+0x1a45c46]
  421cc2:	add    bh,BYTE PTR [esi+eax*4]
  421cc5:	call   0x5a4b9bd7
  421cca:	rcr    DWORD PTR [eax-0x5b],1
  421ccd:	fwait
  421cce:	out    0xee,eax
  421cd0:	cmp    eax,0xb85fbbeb
  421cd5:	jno    0x421ca8
  421cd7:	std    
  421cd8:	pop    ebx
  421cd9:	inc    ebx
  421cda:	pop    ss
  421cdb:	sub    DWORD PTR [ebx+0xf],eax
  421cde:	outs   dx,DWORD PTR ds:[esi]
  421cdf:	cdq    
  421ce0:	test   eax,0x6513fccc
  421ce5:	mov    ecx,ss
  421ce7:	cmp    ecx,esi
  421ce9:	xchg   ecx,eax
  421cea:	jl     0x421c77
  421cec:	sub    DWORD PTR [edi+0x1f],esp
  421cef:	and    eax,0x4c1a0aed
  421cf4:	test   al,0x3c
  421cf6:	cmp    al,0x6e
  421cf8:	int    0x63
  421cfa:	jle    0x421d4b
  421cfc:	xor    dl,bh
  421cfe:	repnz adc al,0x8
  421d01:	jae    0x421d0c
  421d03:	lods   eax,DWORD PTR ds:[esi]
  421d04:	xor    edi,DWORD PTR [esi-0x28e73ba]
  421d0a:	adc    al,0xb9
  421d0c:	sub    DWORD PTR [edx+0x37],edx
  421d0f:	hlt    
  421d10:	retf   
  421d11:	je     0x421ced
  421d13:	mov    ah,0x27
  421d15:	out    0x4,eax
  421d17:	and    ecx,DWORD PTR [eax+0x71]
  421d1a:	arpl   WORD PTR [eax],bx
  421d1c:	jg     0x421d82
  421d1e:	stos   BYTE PTR es:[edi],al
  421d1f:	dec    esp
  421d20:	xor    al,0x57
  421d22:	(bad)  
  421d23:	pop    ebx
  421d24:	push   ds
  421d25:	jge    0x421d28
  421d27:	stos   DWORD PTR es:[edi],eax
  421d28:	inc    edx
  421d29:	in     al,0x6c
  421d2b:	sub    dh,BYTE PTR [edi+0x4da6c5b1]
  421d31:	ins    DWORD PTR es:[edi],dx
  421d32:	pop    ecx
  421d33:	out    0x82,eax
  421d35:	popf   
  421d36:	add    esi,ebp
  421d38:	test   DWORD PTR [ecx+ecx*8],edi
  421d3b:	fstp   DWORD PTR [edx]
  421d3d:	mov    ecx,0xc917f176
  421d42:	in     eax,dx
  421d43:	fist   DWORD PTR [edx-0x50679979]
  421d49:	cld    
  421d4a:	inc    ebp
  421d4b:	adc    eax,0x8b8955a8
  421d50:	cli    
  421d51:	std    
  421d52:	mov    ebp,0xbd485c4a
  421d57:	xchg   ebp,edx
  421d59:	dec    edi
  421d5a:	cdq    
  421d5b:	xchg   esp,eax
  421d5c:	mov    es,WORD PTR [edx-0x264db3ed]
  421d62:	sbb    ch,BYTE PTR [esi+0x45]
  421d65:	adc    al,0xc7
  421d67:	mov    fs,WORD PTR [edx+eax*2]
  421d6a:	xor    esp,ebx
  421d6c:	jp     0x421d97
  421d6e:	adc    ah,ah
  421d70:	lds    ecx,FWORD PTR [edi+0xe2d2cd0]
  421d76:	dec    ecx
  421d77:	and    al,0xab
  421d79:	sub    DWORD PTR [ebx],esp
  421d7b:	ss movlhps xmm6,xmm1
  421d7f:	adc    ebx,esi
  421d81:	push   es
  421d82:	ret    
  421d83:	lods   eax,DWORD PTR ds:[esi]
  421d84:	mov    eax,ds:0x377d2715
  421d89:	ja     0x421d39
  421d8b:	test   DWORD PTR [ebx-0xb],edi
  421d8e:	sbb    esi,DWORD PTR [eax-0x80]
  421d91:	in     al,dx
  421d92:	mov    BYTE PTR [edx],dl
  421d94:	loop   0x421d39
  421d96:	into   
  421d97:	push   ecx
  421d98:	call   0x3537a578
  421d9d:	xchg   edx,eax
  421d9e:	jae    0x421dd0
  421da0:	shl    BYTE PTR [esp+eiz*8-0x36],1
  421da4:	add    al,0x57
  421da6:	jnp    0x421d6f
  421da8:	int    0xc0
  421daa:	sub    dl,0xe7
  421dad:	and    ecx,esi
  421daf:	dec    eax
  421db0:	sbb    BYTE PTR [esi+0xb],dh
  421db3:	pop    ebx
  421db4:	leave  
  421db5:	and    BYTE PTR [edx],ch
  421db7:	jecxz  0x421d59
  421db9:	retf   
  421dba:	test   al,0xc9
  421dbc:	xchg   ebx,eax
  421dbd:	xchg   ecx,eax
  421dbe:	jbe    0x421e1a
  421dc0:	aam    0x8b
  421dc2:	mov    BYTE PTR es:[ebx+eiz*8-0xe],dl
  421dc7:	mov    ah,0xb2
  421dc9:	xchg   ebx,eax
  421dca:	sub    eax,0x3631efec
  421dcf:	fidivr DWORD PTR [edx+0x757a89b9]
  421dd5:	dec    eax
  421dd6:	mov    al,0x31
  421dd8:	ja     0x421dac
  421dda:	push   0x75
  421ddc:	add    ecx,edi
  421dde:	scas   eax,DWORD PTR es:[edi]
  421ddf:	jns    0x421e58
  421de1:	loopne 0x421e61
  421de3:	xchg   ecx,ecx
  421de5:	shl    BYTE PTR [ebx+0x54],0x61
  421de9:	sub    eax,0xd9242dde
  421dee:	pop    ebp
  421def:	test   DWORD PTR ds:0x607a2438,edi
  421df5:	inc    ebp
  421df6:	xor    BYTE PTR [edi+0x63569fe0],dh
  421dfc:	rcr    BYTE PTR [edx-0x7d],0x2e
  421e00:	mov    eax,0x91ac2640
  421e05:	gs aas 
  421e07:	sub    eax,0xa2690693
  421e0c:	stc    
  421e0d:	cs pop ss
  421e0f:	leave  
  421e10:	sub    BYTE PTR [edi+esi*4+0x28],bh
  421e14:	out    dx,eax
  421e15:	sbb    edi,DWORD PTR [esi+0x5b]
  421e18:	push   ecx
  421e19:	stos   DWORD PTR es:[edi],eax
  421e1a:	lea    eax,[edx]
  421e1c:	ins    BYTE PTR es:[edi],dx
  421e1d:	lods   al,BYTE PTR ds:[esi]
  421e1e:	in     al,0xc1
  421e20:	rcr    BYTE PTR [edx+0xe048231],cl
  421e26:	mov    esi,ebp
  421e28:	inc    esp
  421e29:	add    eax,0x2a748484
  421e2e:	std    
  421e2f:	cmp    al,0x1f
  421e31:	add    esp,DWORD PTR [esi-0xb]
  421e34:	push   eax
  421e35:	popf   
  421e36:	fstp   QWORD PTR [ecx-0xd]
  421e39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e3a:	int    0xa4
  421e3c:	and    BYTE PTR [esi-0x12],dh
  421e3f:	lock into 
  421e41:	cmc    
  421e42:	adc    ah,0x13
  421e45:	dec    ecx
  421e46:	mov    eax,ds:0x1f3f4f4
  421e4b:	sbb    ah,BYTE PTR [ecx]
  421e4d:	fsubr  DWORD PTR [ebx]
  421e4f:	cmp    al,0x91
  421e51:	lea    edx,[ecx]
  421e53:	sbb    ecx,DWORD PTR [ebx]
  421e55:	test   eax,0x8f261619
  421e5a:	vmread edx,edi
  421e5d:	js     0x421e2e
  421e5f:	inc    edi
  421e60:	call   0xf88a:0x9528f20b
  421e67:	inc    edi
  421e68:	pop    edx
  421e69:	mov    bl,0xe0
  421e6b:	int3   
  421e6c:	scas   al,BYTE PTR es:[edi]
  421e6d:	pop    edi
  421e6e:	mov    ch,0x33
  421e70:	sti    
  421e71:	aaa    
  421e72:	dec    esi
  421e73:	or     bh,ah
  421e75:	and    esp,DWORD PTR [edx]
  421e77:	inc    eax
  421e78:	(bad)  
  421e79:	out    0x97,al
  421e7b:	pop    ds
  421e7c:	xor    dl,BYTE PTR [eax+0x46]
  421e7f:	xchg   ebp,eax
  421e80:	cli    
  421e81:	nop
  421e82:	cmp    ebp,ebx
  421e84:	jg     0x421ee2
  421e86:	cmp    ah,bh
  421e88:	jb     0x421e78
  421e8a:	test   eax,0xb9575a42
  421e8f:	sub    al,0x51
  421e91:	sbb    dh,BYTE PTR [eax-0x2aa08511]
  421e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e98:	pop    ss
  421e99:	int    0xb2
  421e9b:	loope  0x421e5d
  421e9d:	mov    cl,0xa6
  421e9f:	js     0x421e47
  421ea1:	mov    al,ds:0x597c19bc
  421ea6:	jmp    0x29dc622b
  421eab:	imul   esp,DWORD PTR [edi+0x2f3b862b],0x7e081b42
  421eb5:	outs   dx,DWORD PTR ds:[esi]
  421eb6:	push   0xffffff8a
  421eb8:	aam    0xa3
  421eba:	add    eax,0x97b3f787
  421ebf:	jbe    0x421e85
  421ec1:	cmp    ecx,DWORD PTR [ebx+edi*2+0x4e]
  421ec5:	lods   al,BYTE PTR ds:[esi]
  421ec6:	sub    dl,BYTE PTR [edi+0x55262dcb]
  421ecc:	cli    
  421ecd:	push   edx
  421ece:	rol    BYTE PTR [edi-0x7e],1
  421ed1:	retf   0xd5dc
  421ed4:	inc    ecx
  421ed5:	in     al,0x1d
  421ed7:	pop    ebp
  421ed8:	retf   
  421ed9:	xlat   BYTE PTR ds:[ebx]
  421eda:	inc    edx
  421edb:	into   
  421edc:	dec    edx
  421edd:	out    0x4b,eax
  421edf:	stc    
  421ee0:	(bad)  
  421ee1:	in     eax,dx
  421ee2:	mov    ebp,0x95adf511
  421ee7:	scas   eax,DWORD PTR es:[edi]
  421ee8:	imul   ebx,esi,0x20
  421eeb:	mov    cl,0x64
  421eed:	scas   al,BYTE PTR es:[edi]
  421eee:	cmp    ah,BYTE PTR [ebx-0x18]
  421ef1:	mov    ebp,0xb8ad6e58
  421ef6:	iret   
  421ef7:	adc    DWORD PTR [edi-0x6025feae],ebp
  421efd:	jbe    0x421ee0
  421eff:	or     eax,0xe6049e24
  421f04:	mov    bh,0x43
  421f06:	push   es
  421f07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f08:	inc    edi
  421f09:	icebp  
  421f0a:	xor    esp,DWORD PTR [edi]
  421f0c:	pop    es
  421f0d:	into   
  421f0e:	mov    ebp,DWORD PTR [eax]
  421f10:	pop    es
  421f11:	in     eax,0x74
  421f13:	mov    bl,BYTE PTR [edi+esi*1+0x13]
  421f17:	mov    ch,BYTE PTR [edx]
  421f19:	repnz pop esi
  421f1b:	out    dx,al
  421f1c:	xlat   BYTE PTR ds:[ebx]
  421f1d:	ror    BYTE PTR [ebx+0x37],1
  421f20:	mov    eax,ds:0x3ced746c
  421f25:	jle    0x421f8f
  421f27:	nop
  421f28:	ret    0x34f2
  421f2b:	pop    esp
  421f2c:	adc    eax,0x73b2e7ca
  421f31:	aaa    
  421f32:	arpl   ax,bx
  421f34:	mov    al,0x4b
  421f36:	or     BYTE PTR [eax+ebx*4-0x16d3ac55],ch
  421f3d:	sub    al,0xd8
  421f3f:	add    eax,0x98d94d5d
  421f44:	aas    
  421f45:	lods   eax,DWORD PTR ds:[esi]
  421f46:	xlat   BYTE PTR ds:[ebx]
  421f47:	call   0xed5f1e98
  421f4c:	fs (bad) 
  421f4e:	lods   al,BYTE PTR ds:[esi]
  421f4f:	dec    ebp
  421f50:	mov    edi,0xf657735e
  421f55:	mov    eax,0x1f7c5589
  421f5a:	(bad)  
  421f5b:	mov    ebx,0xcbbc0042
  421f60:	add    ebx,esi
  421f62:	pop    edx
  421f63:	and    eax,0x1113dae8
  421f68:	cmp    edx,DWORD PTR [ebx+edi*2+0xe09dde5]
  421f6f:	pop    ebp
  421f70:	lea    ebx,[eax-0x48]
  421f73:	inc    esi
  421f74:	mov    WORD PTR [ecx-0x5e],fs
  421f77:	cmp    edi,DWORD PTR [edi+0xc]
  421f7a:	dec    edi
  421f7b:	jge    0x421fdd
  421f7d:	shl    al,cl
  421f7f:	mov    edi,0x170bf2f8
  421f84:	shl    DWORD PTR [ebp+0x262d0662],1
  421f8a:	mov    esp,0x6219880a
  421f8f:	jnp    0x421f67
  421f91:	cmp    al,BYTE PTR [ebp+0x5be26221]
  421f97:	inc    esp
  421f98:	cmp    BYTE PTR [esi-0x5f8443b2],dl
  421f9e:	push   0xff485239
  421fa3:	inc    esi
  421fa4:	stos   BYTE PTR es:[edi],al
  421fa5:	lock es sub dl,bh
  421fa9:	push   ebp
  421faa:	iret   
  421fab:	call   0x74805b90
  421fb0:	in     al,0xa8
  421fb2:	pop    eax
  421fb3:	dec    edi
  421fb4:	push   ebx
  421fb5:	or     edx,DWORD PTR [ebx-0x34]
  421fb8:	les    edi,FWORD PTR [edi+esi*4+0x59]
  421fbc:	xchg   ecx,eax
  421fbd:	dec    eax
  421fbe:	and    BYTE PTR [eax+eiz*8],dl
  421fc1:	js     0x421fbc
  421fc3:	mov    BYTE PTR [esi+ebx*4],0x48
  421fc7:	outs   dx,DWORD PTR ds:[esi]
  421fc8:	(bad)  
  421fc9:	xchg   edx,eax
  421fca:	inc    esp
  421fcb:	sbb    ebp,ebx
  421fcd:	rcr    BYTE PTR [eax-0x5cd723ba],cl
  421fd3:	pop    ebx
  421fd4:	pop    eax
  421fd5:	loopne 0x421ff5
  421fd7:	pop    ds
  421fd8:	fidiv  DWORD PTR [edx+0x1a]
  421fdb:	pop    eax
  421fdc:	push   esi
  421fdd:	(bad)  [ebx]
  421fdf:	mov    edx,0xa5876299
  421fe4:	das    
  421fe5:	dec    edx
  421fe6:	jl     0x42201a
  421fe8:	in     eax,0x35
  421fea:	sbb    bl,BYTE PTR [edi+edx*4-0x49]
  421fee:	dec    edi
  421fef:	daa    
  421ff0:	mov    esp,0x7bee0b8a
  421ff5:	cli    
  421ff6:	js     0x42200c
  421ff8:	test   dl,bl
  421ffa:	call   0xfac9:0x371b657
  422001:	pop    ds
  422002:	pop    ecx
  422003:	push   0x4ed4635a
  422008:	jne    0x422069
  42200a:	push   ss
  42200b:	outs   dx,BYTE PTR ds:[esi]
  42200c:	xchg   ebx,eax
  42200d:	sbb    al,0xa0
  42200f:	js     0x42204b
  422011:	sub    BYTE PTR [ecx],ah
  422013:	sub    eax,DWORD PTR [esi+0x60654c0c]
  422019:	mov    dh,dh
  42201b:	ret    
  42201c:	push   edi
  42201d:	inc    esi
  42201e:	loopne 0x422046
  422020:	sbb    dh,BYTE PTR [ebx-0x74da0bf4]
  422026:	int    0xd3
  422028:	data16 and BYTE PTR [ecx+0x4],ah
  42202c:	shr    DWORD PTR [esi],cl
  42202e:	fdivr  QWORD PTR [ecx]
  422030:	pop    esi
  422031:	xchg   esi,eax
  422032:	jmp    0x42208a
  422034:	cld    
  422035:	pop    ebp
  422036:	inc    eax
  422037:	jne    0x421ff6
  422039:	adc    bl,dl
  42203b:	cld    
  42203c:	sti    
  42203d:	push   eax
  42203e:	call   0x152d:0xc52fbe3e
  422045:	ficom  DWORD PTR [ecx]
  422047:	stos   BYTE PTR es:[edi],al
  422048:	mov    dl,0xae
  42204a:	jne    0x4220cb
  42204c:	xor    DWORD PTR [edx+ebx*1-0x617b73a4],edx
  422053:	cdq    
  422054:	daa    
  422055:	loop   0x422041
  422057:	mov    fs,esi
  422059:	dec    esi
  42205a:	cmp    cl,BYTE PTR [esi+ebp*8-0x5f]
  42205e:	jnp    0x421fff
  422060:	push   esi
  422061:	in     al,dx
  422062:	test   BYTE PTR [edi+0x1fb41e1],ch
  422068:	div    DWORD PTR [edx+0x57]
  42206b:	ins    BYTE PTR es:[edi],dx
  42206c:	mov    dh,0xab
  42206e:	push   ds
  42206f:	cmp    DWORD PTR [edx],ecx
  422071:	pusha  
  422072:	cld    
  422073:	mov    edi,DWORD PTR [ebx-0x7b2dd502]
  422079:	into   
  42207a:	jo     0x4220e6
  42207c:	dec    edi
  42207d:	lock pop ds
  42207f:	sahf   
  422080:	das    
  422081:	nop
  422082:	xchg   BYTE PTR [esi-0x1e525d52],dl
  422088:	push   esp
  422089:	cmp    al,0x9c
  42208b:	mov    ds:0xb62c10fc,al
  422090:	ins    BYTE PTR es:[edi],dx
  422091:	cmp    BYTE PTR [edx+eax*1+0x67974aa9],0x97
  422099:	imul   eax,ebp,0x7e
  42209c:	push   edx
  42209d:	dec    BYTE PTR [esi+0x59]
  4220a0:	loope  0x42210b
  4220a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220a4:	and    eax,0x33461366
  4220a9:	lahf   
  4220aa:	cld    
  4220ab:	dec    ebp
  4220ac:	xchg   edi,eax
  4220ad:	xor    cl,BYTE PTR [ebx+0x609c8e34]
  4220b3:	pop    eax
  4220b4:	mov    bl,0x4a
  4220b6:	ds gs pushf 
  4220b9:	(bad)  
  4220ba:	push   ds
  4220bb:	in     al,0x84
  4220bd:	imul   DWORD PTR gs:[ebx-0x66]
  4220c1:	adc    ebx,DWORD PTR [ebx-0x4d]
  4220c4:	cwde   
  4220c5:	mov    bh,0xd
  4220c7:	stos   DWORD PTR es:[edi],eax
  4220c8:	jmp    0xa20212ea
  4220cd:	sbb    al,0x33
  4220cf:	test   al,0x37
  4220d1:	or     ecx,eax
  4220d3:	call   0x6d33:0xe03c5e08
  4220da:	test   eax,eax
  4220dc:	daa    
  4220dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220de:	mov    ds:0x640dd655,eax
  4220e3:	cmp    bh,BYTE PTR [ecx-0x18]
  4220e6:	mov    BYTE PTR [ecx+0x44aefe52],ah
  4220ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220ed:	or     eax,0xa575c8e9
  4220f2:	xchg   DWORD PTR [ecx-0x6f],ebp
  4220f5:	stc    
  4220f6:	add    DWORD PTR [edi-0x6f],esp
  4220f9:	mov    bh,0xd9
  4220fb:	xchg   esp,eax
  4220fc:	push   eax
  4220fd:	adc    eax,0x830601dc
  422102:	adc    ebp,edx
  422104:	adc    eax,0xca7048f8
  422109:	push   ecx
  42210a:	jns    0x4220ca
  42210c:	pop    ebx
  42210d:	bound  esp,QWORD PTR [ecx]
  42210f:	and    DWORD PTR [edi],ebx
  422111:	mov    al,ds:0xcc228ff6
  422116:	repnz sbb DWORD PTR [ecx],edx
  422119:	enterw 0xfd80,0x20
  42211e:	scas   al,BYTE PTR es:[edi]
  42211f:	std    
  422120:	stos   DWORD PTR es:[edi],eax
  422121:	lods   eax,DWORD PTR ds:[esi]
  422122:	fdivr  st(0),st
  422124:	ds pop eax
  422126:	sbb    BYTE PTR [edx-0x3a],0xcd
  42212a:	dec    ebp
  42212b:	pushf  
  42212c:	inc    eax
  42212d:	lods   eax,DWORD PTR ds:[esi]
  42212e:	jb     0x42212a
  422130:	mov    eax,0x714d574e
  422135:	dec    ecx
  422136:	sar    BYTE PTR [eax],cl
  422138:	jne    0x422160
  42213a:	not    DWORD PTR [edi+0x581f0099]
  422140:	bnd jmp 0x5ee6a327
  422146:	nop
  422147:	sbb    ebp,esi
  422149:	push   0x6a1987b0
  42214e:	cmp    BYTE PTR [ecx+0x47],dh
  422151:	and    ch,dh
  422153:	inc    esi
  422154:	ficom  DWORD PTR [eax+ebx*4-0x3d053484]
  42215b:	aas    
  42215c:	mov    edi,0xfaf8706d
  422161:	leave  
  422162:	inc    edi
  422163:	jmp    0xecb6f5fd
  422168:	pop    ds
  422169:	mov    BYTE PTR [eax+0x212c057f],bh
  42216f:	mov    ebx,0xa160e51e
  422174:	xchg   esp,eax
  422175:	loope  0x4221ee
  422177:	rcr    BYTE PTR [esi+0xe],1
  42217a:	push   ss
  42217b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42217c:	xor    BYTE PTR [ecx+0x69],0x9e
  422180:	pop    edi
  422181:	pop    edi
  422182:	aad    0x9a
  422184:	jae    0x42210a
  422186:	gs jle 0x4221a8
  422189:	jae    0x42217c
  42218b:	mov    cl,0xa2
  42218d:	shl    BYTE PTR [ecx+0x3e],cl
  422190:	in     eax,dx
  422191:	push   esi
  422192:	inc    ebx
  422193:	dec    DWORD PTR [edi+0x198eaf12]
  422199:	cs xchg ebp,eax
  42219b:	retf   0x8c8b
  42219e:	outs   dx,DWORD PTR ds:[esi]
  42219f:	sub    al,0xd1
  4221a1:	mov    edx,0xe9a5dfdb
  4221a6:	das    
  4221a7:	cld    
  4221a8:	clc    
  4221a9:	mov    ds:0x1097509b,al
  4221ae:	xor    eax,0x63cd7d1
  4221b3:	stc    
  4221b4:	out    dx,al
  4221b5:	and    DWORD PTR [esi],0xffffff87
  4221b8:	xchg   ecx,eax
  4221b9:	mov    WORD PTR [ebp-0x6c8cbbad],es
  4221bf:	cmc    
  4221c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221c1:	(bad)  
  4221c3:	xchg   esi,eax
  4221c4:	mov    ds:0x3676c5ed,eax
  4221c9:	push   es
  4221ca:	aam    0xc8
  4221cc:	push   esi
  4221cd:	pop    edx
  4221ce:	jge    0x42216d
  4221d0:	mov    al,ds:0x8fe22b46
  4221d5:	mov    esp,0xd3615af7
  4221da:	mov    dl,0x3b
  4221dc:	clc    
  4221dd:	test   eax,0x506dc920
  4221e2:	dec    edx
  4221e3:	sbb    ebx,DWORD PTR [ebx-0x3d]
  4221e6:	js     0x4221fd
  4221e8:	sbb    edx,DWORD PTR [eax]
  4221ea:	imul   esi,DWORD PTR [esp+eax*2+0x6f],0x2d
  4221ef:	jge    0x4221a5
  4221f1:	jns    0x4221d3
  4221f3:	sbb    ebx,DWORD PTR ds:0x4728458c
  4221f9:	int3   
  4221fa:	push   ebp
  4221fb:	loope  0x422256
  4221fd:	lea    eax,[esi-0x1b6d351a]
  422203:	daa    
  422204:	sbb    ebx,ebp
  422206:	mov    bh,0xdf
  422208:	push   ebx
  422209:	fstp   QWORD PTR [ecx-0x55]
  42220c:	mov    dh,0xdb
  42220e:	mov    bh,0x12
  422210:	pop    esp
  422211:	stc    
  422212:	mov    dl,0x31
  422214:	(bad)  
  422215:	idiv   BYTE PTR [edx-0x21]
  422218:	(bad)  
  422219:	std    
  42221a:	imul   ecx,DWORD PTR [ebp-0x3c],0x59fc66dc
  422221:	idiv   cl
  422223:	popa   
  422224:	inc    esi
  422225:	jbe    0x422264
  422227:	test   al,0x86
  422229:	sbb    eax,ebx
  42222b:	push   cs
  42222c:	sub    cl,dl
  42222e:	popa   
  42222f:	(bad)  
  422230:	lods   eax,DWORD PTR ds:[esi]
  422231:	jg     0x422290
  422233:	mov    ch,0x84
  422235:	sbb    BYTE PTR [eax-0x3c01ead8],cl
  42223b:	repnz les edx,FWORD PTR [eax+esi*4+0x14dc8964]
  422243:	fstp   QWORD PTR [ecx]
  422245:	adc    eax,DWORD PTR [edi+0x43fc1293]
  42224b:	pop    esi
  42224c:	jnp    0x4221f8
  42224e:	mov    al,0xec
  422250:	sbb    eax,0x5975410f
  422255:	loopne 0x422241
  422257:	jg     0x4222a3
  422259:	sti    
  42225a:	mov    eax,ds:0x192eebb2
  42225f:	ins    BYTE PTR es:[edi],dx
  422260:	in     eax,dx
  422261:	or     BYTE PTR [esi-0x23],0x3d
  422265:	stos   DWORD PTR es:[edi],eax
  422266:	push   ds
  422267:	cs js  0x42224f
  42226a:	add    eax,0x92d829d0
  42226f:	pop    DWORD PTR [eax-0x3d]
  422272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422273:	loope  0x422284
  422275:	mov    eax,ds:0x3e36b3b4
  42227a:	retf   
  42227b:	push   0x5cbdb5f7
  422280:	rcr    DWORD PTR [eax],1
  422282:	mov    ds:0xe7610f3d,al
  422287:	pop    ss
  422288:	pushf  
  422289:	add    edx,eax
  42228b:	jle    0x42230c
  42228d:	mov    ds:0x72443549,eax
  422292:	test   eax,0x317be8af
  422297:	arpl   WORD PTR [esi+0x4bd2756b],bx
  42229d:	mov    eax,ds:0x22a21a27
  4222a2:	or     ah,BYTE PTR [ebx]
  4222a4:	mov    ebp,0xdbc0360f
  4222a9:	shl    DWORD PTR [esi],0xac
  4222ac:	popf   
  4222ad:	jnp    0x6c7efcf3
  4222b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222b4:	and    dh,BYTE PTR [edx]
  4222b6:	jmp    0x4222e7
  4222b8:	push   ds
  4222b9:	xchg   DWORD PTR [ecx],eax
  4222bb:	and    al,0xf5
  4222bd:	jg     0x4222af
  4222bf:	retf   
  4222c0:	sbb    eax,0xce601b2d
  4222c5:	mov    ds:0x8800d85d,eax
  4222ca:	push   esi
  4222cb:	xlat   BYTE PTR ds:[ebx]
  4222cc:	push   0x68
  4222ce:	mov    eax,0xa6ae95b1
  4222d3:	inc    edi
  4222d4:	push   ebx
  4222d5:	or     BYTE PTR [edx+0x31e17178],0x70
  4222dc:	cld    
  4222dd:	push   esp
  4222de:	mov    ebx,DWORD PTR [esi+eax*2]
  4222e1:	aas    
  4222e2:	adc    cl,ch
  4222e4:	add    DWORD PTR [eax+ebx*8+0x2b],esi
  4222e8:	mov    esi,0x592f5ec2
  4222ed:	and    dl,cl
  4222ef:	cwde   
  4222f0:	pop    es
  4222f1:	sti    
  4222f2:	mov    DWORD PTR [esi+0x1f6b48d6],edi
  4222f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222f9:	lock imul ebp,DWORD PTR [ebx-0x51],0xffffffa2
  4222fe:	ret    0x7cc1
  422301:	lahf   
  422302:	(bad)  
  422303:	mov    bh,0xda
  422305:	jnp    0x4222f2
  422307:	imul   esi,DWORD PTR [edi],0xdd67b573
  42230d:	repz call 0x437a:0xd85d5db1
  422315:	xchg   ecx,eax
  422316:	int3   
  422317:	xchg   ebp,eax
  422318:	and    ebx,DWORD PTR [ecx]
  42231a:	xchg   ecx,eax
  42231b:	not    DWORD PTR [esi]
  42231d:	test   DWORD PTR [ecx+0x5d0ce68f],eax
  422323:	xor    ch,cl
  422325:	inc    ecx
  422326:	aaa    
  422327:	xchg   esi,eax
  422328:	push   ebx
  422329:	int    0x61
  42232b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42232c:	jle    0x4222b0
  42232e:	outs   dx,BYTE PTR ds:[esi]
  42232f:	adc    dl,BYTE PTR [eax+0xb]
  422332:	outs   dx,BYTE PTR ds:[esi]
  422333:	popa   
  422334:	test   eax,0x3ba4460f
  422339:	in     eax,dx
  42233a:	push   edx
  42233b:	clc    
  42233c:	mov    WORD PTR [ecx+0x257b9210],cs
  422342:	push   ebx
  422343:	push   ds
  422344:	mov    esi,0xc64e9876
  422349:	test   BYTE PTR [ecx+0x60d831f],bh
  42234f:	sub    ch,BYTE PTR [eax+eiz*4-0x57]
  422353:	mov    al,0x1b
  422355:	out    0xde,eax
  422357:	stos   BYTE PTR es:[edi],al
  422358:	sbb    al,0x9b
  42235a:	mov    ebp,0x20c32851
  42235f:	pop    esp
  422360:	mov    dl,0xfd
  422362:	push   esi
  422363:	inc    edx
  422364:	xor    ebp,DWORD PTR [eax-0x32027d15]
  42236a:	add    BYTE PTR [edx+0x6b],cl
  42236d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42236e:	add    al,0x14
  422370:	xchg   esi,eax
  422371:	xchg   esi,eax
  422372:	mov    ah,0x5c
  422374:	pop    ds
  422375:	add    edi,0xe50e31b1
  42237b:	and    ah,BYTE PTR [eax-0x6cadc3ac]
  422381:	sub    cl,ch
  422383:	pop    ds
  422384:	xor    eax,0xaf94f26
  422389:	mov    ds:0x845658c8,al
  42238e:	test   al,0x21
  422390:	pop    ss
  422391:	test   al,0x5c
  422393:	imul   eax,DWORD PTR gs:[edx+0x7b],0x41
  422398:	sbb    ah,BYTE PTR [edx-0x65]
  42239b:	add    BYTE PTR [edi+0x1f],dh
  42239e:	push   esi
  42239f:	push   edx
  4223a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223a1:	jno    0x422377
  4223a3:	test   ah,0xe
  4223a6:	dec    esp
  4223a7:	dec    edi
  4223a8:	(bad)  
  4223a9:	push   edx
  4223aa:	rcl    BYTE PTR [ecx+0x18fc8d75],cl
  4223b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223b1:	push   esi
  4223b2:	mov    DWORD PTR [edi-0x274edd7],ecx
  4223b8:	dec    esp
  4223b9:	cwde   
  4223ba:	test   BYTE PTR [ebx],dh
  4223bc:	jns    0x4223a8
  4223be:	lahf   
  4223bf:	repz inc edi
  4223c1:	test   al,0x62
  4223c3:	adc    ah,ah
  4223c5:	iret   
  4223c6:	outs   dx,BYTE PTR ds:[esi]
  4223c7:	shl    BYTE PTR [ebp+0x1d93bd08],1
  4223cd:	leave  
  4223ce:	into   
  4223cf:	xor    BYTE PTR [eax+eax*4+0x43],al
  4223d3:	cld    
  4223d4:	mov    ebp,0x2e8b4ee5
  4223d9:	add    DWORD PTR [edi-0x5],eax
  4223dc:	dec    ecx
  4223dd:	aaa    
  4223de:	call   0x2f7e0e8a
  4223e3:	pusha  
  4223e4:	jg     0x422415
  4223e6:	retf   
  4223e7:	std    
  4223e8:	pop    edi
  4223e9:	aam    0x7f
  4223eb:	mov    al,ds:0xbd0537a9
  4223f0:	add    ch,dl
  4223f2:	cmp    al,cl
  4223f4:	sbb    BYTE PTR [ebx+eiz*2-0x20c99270],dh
  4223fb:	jne    0x4223f4
  4223fd:	ja     0x42241d
  4223ff:	push   0xffffffc7
  422401:	cwde   
  422402:	mov    edi,edi
  422404:	jno    0x422440
  422406:	mov    ss,WORD PTR [esi+0x2a]
  422409:	push   edx
  42240a:	adc    DWORD PTR [ebp-0x4c],edi
  42240d:	out    0x2e,eax
  42240f:	outs   dx,BYTE PTR ds:[esi]
  422410:	sbb    al,0x7c
  422412:	sahf   
  422413:	pop    ecx
  422414:	xrelease mov DWORD PTR [ecx-0x1e],esi
  422418:	push   esp
  422419:	push   eax
  42241a:	int3   
  42241b:	cmp    ecx,eax
  42241d:	pop    ebx
  42241e:	mov    bh,0x9d
  422420:	pusha  
  422421:	jo     0x422449
  422423:	das    
  422424:	or     al,0xda
  422426:	xchg   esi,eax
  422427:	mov    eax,ds:0x3ea37ec2
  42242c:	adc    al,0xa0
  42242e:	push   es
  42242f:	adc    edx,DWORD PTR [ebx]
  422431:	pop    ebp
  422432:	(bad)  
  422433:	jl     0x42246e
  422435:	push   0x4928ad12
  42243a:	aad    0x9e
  42243c:	push   ecx
  42243d:	call   0x1db8c9b3
  422442:	inc    edi
  422443:	jmp    0x422459
  422445:	fdivr  QWORD PTR [edx-0x8711674]
  42244b:	sbb    eax,0x27238da3
  422450:	(bad)  
  422451:	mov    cs,WORD PTR [edx]
  422453:	ja     0x422443
  422455:	cmp    eax,0x68fbc35
  42245a:	xor    DWORD PTR [esi+0x75],ecx
  42245d:	cwde   
  42245e:	and    ecx,DWORD PTR [ebp+0x5d130b42]
  422464:	jmp    0xaa95:0xd27074f1
  42246b:	fsub   DWORD PTR [eax]
  42246d:	jle    0x42249f
  42246f:	test   BYTE PTR [ebp+ecx*8-0x6cf9d2a5],bh
  422476:	aad    0x35
  422478:	sahf   
  422479:	adc    DWORD PTR [edi],ecx
  42247b:	loop   0x4224ca
  42247d:	dec    edi
  42247e:	push   ds
  42247f:	dec    esp
  422480:	pusha  
  422481:	dec    ecx
  422482:	pop    ebx
  422483:	push   edx
  422484:	enter  0xed68,0x43
  422488:	or     al,0x7f
  42248a:	in     al,0x58
  42248c:	icebp  
  42248d:	es cmc 
  42248f:	pop    es
  422490:	retf   
  422491:	aas    
  422492:	sub    DWORD PTR [ecx],ebx
  422494:	test   dh,0x76
  422497:	inc    edx
  422498:	xchg   edi,eax
  422499:	mov    ss,WORD PTR [ebp+0x38]
  42249c:	arpl   WORD PTR [edi+0x50687197],cx
  4224a2:	ss inc esp
  4224a4:	bound  ecx,QWORD PTR ds:0x2eb14d3f
  4224aa:	inc    ebx
  4224ab:	cmp    al,BYTE PTR [edx]
  4224ad:	pop    edx
  4224ae:	sar    dh,1
  4224b0:	adc    DWORD PTR [esi],edi
  4224b2:	(bad)  
  4224b3:	stc    
  4224b4:	sbb    DWORD PTR [edx+edi*4+0x76d2d87f],0x31
  4224bc:	cli    
  4224bd:	and    eax,DWORD PTR [eax]
  4224bf:	mov    ds:0xd55a840c,eax
  4224c4:	jg     0x4224ea
  4224c6:	fdiv   QWORD PTR [esi-0x4b6bcf73]
  4224cc:	mov    cl,0x4b
  4224ce:	sub    dh,bl
  4224d0:	dec    esp
  4224d1:	mov    WORD PTR [ebp-0x34f1b96c],?
  4224d7:	lahf   
  4224d8:	mov    ah,0x60
  4224da:	sar    DWORD PTR [ebp+0xd],1
  4224dd:	mov    ds:0x8b57e183,al
  4224e2:	xlat   BYTE PTR ds:[ebx]
  4224e3:	or     bl,dh
  4224e5:	dec    eax
  4224e6:	iret   
  4224e7:	cmp    BYTE PTR [edx+0x67],bh
  4224ea:	inc    eax
  4224eb:	pop    eax
  4224ec:	ret    0x49f
  4224ef:	mov    al,ds:0x34e6a4fc
  4224f4:	test   eax,0x79d6e1c9
  4224f9:	cs popa 
  4224fb:	add    ebx,DWORD PTR [esp+eax*2-0x5111a769]
  422502:	cmp    ebx,DWORD PTR [edx+0x5b]
  422505:	add    ah,0x58
  422508:	xor    DWORD PTR [edx-0x5b],edi
  42250b:	data16 mov dl,0x3
  42250e:	out    dx,eax
  42250f:	loopne 0x42255f
  422511:	xchg   ecx,eax
  422512:	gs dec ebp
  422514:	dec    ebx
  422515:	and    DWORD PTR cs:[edx+0x13650e0f],edi
  42251c:	or     eax,0x1510068f
  422521:	enter  0xdadb,0x55
  422525:	enter  0xcede,0xef
  422529:	loopne 0x4225a3
  42252b:	pusha  
  42252c:	pushf  
  42252d:	imul   esp
  42252f:	inc    edi
  422530:	(bad)  
  422531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422532:	pop    ebp
  422533:	sub    ebx,esp
  422535:	pop    es
  422536:	inc    esi
  422537:	(bad)  
  422538:	call   0xac57dd3e
  42253d:	pop    es
  42253e:	sar    DWORD PTR [ebx+0x4f],cl
  422541:	leave  
  422542:	in     al,dx
  422543:	test   BYTE PTR [edx+eiz*1-0x55a33e01],bh
  42254a:	xchg   esi,eax
  42254b:	js     0x42257d
  42254d:	pop    eax
  42254e:	xor    ch,dl
  422550:	ins    DWORD PTR es:[edi],dx
  422551:	jp     0x4225af
  422553:	mov    DWORD PTR ds:[ebx],0x1249484e
  42255a:	daa    
  42255b:	pop    esp
  42255c:	xchg   DWORD PTR [ebp+0x0],ebx
  42255f:	ror    DWORD PTR [edi+0x26d85d],0x5c
  422566:	adc    eax,0x71ddefad
  42256b:	mov    al,0x8f
  42256d:	push   cs
  42256e:	ja     0x42252d
  422570:	mov    eax,0x5db19a6f
  422575:	ret    0xc198
  422578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422579:	out    0x9f,eax
  42257b:	adc    DWORD PTR [ebp+0x41d45d69],0x29
  422582:	test   al,0x7b
  422584:	xor    edx,DWORD PTR [ecx+0x38fd84ef]
  42258a:	inc    esi
  42258b:	sub    eax,0x47d786cb
  422590:	and    dl,BYTE PTR [ecx-0x288ed211]
  422596:	sub    BYTE PTR [esi],ch
  422598:	cmp    DWORD PTR [ebx-0x265f200a],edi
  42259e:	xor    esi,DWORD PTR [ebx+0x2a08b1f2]
  4225a4:	adc    eax,0x68aca3a2
  4225a9:	ficomp WORD PTR [ebp-0x7f917b41]
  4225af:	mov    eax,ds:0xc9dea72
  4225b4:	fidiv  DWORD PTR ds:0xb8b98c07
  4225ba:	test   DWORD PTR gs:[ebx+eiz*8],eax
  4225be:	addr16 clc 
  4225c0:	mov    ah,BYTE PTR [ebp-0x15]
  4225c3:	inc    ebx
  4225c4:	es dec esi
  4225c6:	push   0xa8975b6d
  4225cb:	ret    
  4225cc:	sub    BYTE PTR [esi-0x40b4ac28],al
  4225d2:	jbe    0x4225c2
  4225d4:	jle    0x4225e3
  4225d6:	cdq    
  4225d7:	push   0x26
  4225d9:	push   ebx
  4225da:	mov    ds:0x4c60f5a9,al
  4225df:	into   
  4225e0:	sbb    BYTE PTR [eax+ebp*2],ah
  4225e3:	out    dx,eax
  4225e4:	push   esp
  4225e5:	fdiv   DWORD PTR [edx-0x41]
  4225e8:	adc    DWORD PTR [ecx-0x52],0x72
  4225ec:	or     eax,0xfe864291
  4225f1:	and    al,0x1
  4225f3:	sbb    al,0x17
  4225f5:	pop    esp
  4225f6:	cmp    BYTE PTR [ebp+0x74],ah
  4225f9:	sbb    eax,0x154974c7
  4225fe:	fwait
  4225ff:	shl    DWORD PTR [eax],cl
  422601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422602:	xchg   ebx,eax
  422603:	cld    
  422604:	dec    edx
  422605:	push   ss
  422606:	call   0x39806726
  42260b:	dec    esp
  42260c:	(bad)  
  42260d:	std    
  42260e:	jnp    0x4225df
  422610:	inc    eax
  422611:	push   ds
  422612:	sahf   
  422613:	das    
  422614:	sub    eax,0xa5778aad
  422619:	push   edx
  42261a:	stc    
  42261b:	or     eax,0xbaf07385
  422620:	sahf   
  422621:	jae    0x4225fe
  422623:	mov    edx,0x7dc82a04
  422628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422629:	xor    ah,BYTE PTR [edi-0x4676dff5]
  42262f:	fimul  WORD PTR ds:0x7d493e03
  422635:	repnz sti 
  422637:	jg     0x42265b
  422639:	int    0x72
  42263b:	xchg   BYTE PTR [ebx+0x7cae66ab],cl
  422641:	out    0xd1,al
  422643:	cmp    eax,0xb4beaac5
  422648:	mov    dh,0x19
  42264a:	mov    eax,0x45978bac
  42264f:	loope  0x422607
  422651:	mov    edi,0x51bbbb6a
  422656:	scas   al,BYTE PTR es:[edi]
  422657:	xchg   ecx,eax
  422658:	imul   esp,edx,0xb054ff8c
  42265e:	or     BYTE PTR [edx+0x43274ed0],dl
  422664:	mov    ah,0xf7
  422666:	(bad)  
  422668:	xor    esi,DWORD PTR [edi-0x337c9965]
  42266e:	(bad)  
  42266f:	xchg   edi,eax
  422670:	fdiv   DWORD PTR [edi-0x68]
  422673:	imul   ebx,edx,0xe151026d
  422679:	push   ss
  42267a:	push   eax
  42267b:	and    al,0x59
  42267d:	xchg   ebp,eax
  42267e:	mov    bh,0x60
  422680:	hlt    
  422681:	mov    esi,0xbf6fbff2
  422686:	jno    0x4226f0
  422688:	repz ror DWORD PTR [ecx+0x5a],0xde
  42268d:	mov    dh,0xa6
  42268f:	ret    
  422690:	adc    esi,DWORD PTR ds:0x52b351c
  422696:	adc    ebp,ebx
  422698:	inc    esi
  422699:	mov    ds:0xf1a93c00,eax
  42269e:	int3   
  42269f:	cmp    DWORD PTR [ebx+0x4c],esi
  4226a2:	mov    DWORD PTR [edi-0x1a4694d3],eax
  4226a8:	(bad)  
  4226aa:	repnz test BYTE PTR [eax-0x7649e3f8],0x8
  4226b2:	pop    ebx
  4226b3:	mov    al,ds:0xd3b51696
  4226b8:	pop    edi
  4226b9:	sub    eax,0xf7e52f7f
  4226be:	scas   al,BYTE PTR es:[edi]
  4226bf:	xchg   esi,eax
  4226c0:	jmp    esi
  4226c2:	jae    0x422723
  4226c4:	xor    eax,0x191a2c95
  4226c9:	jne    0x422689
  4226cb:	mov    ah,0xd
  4226cd:	imul   eax,DWORD PTR [ebp+0x3dd32161],0x6c
  4226d4:	stos   BYTE PTR es:[edi],al
  4226d5:	add    al,0xa8
  4226d7:	pop    edx
  4226d8:	outs   dx,DWORD PTR ds:[esi]
  4226d9:	ins    BYTE PTR es:[edi],dx
  4226da:	(bad)  
  4226db:	out    0x2b,eax
  4226dd:	out    dx,al
  4226de:	xor    DWORD PTR ds:0xd3fedbbf,0x7d223fe2
  4226e8:	jmp    0x3a55:0xffce1b9e
  4226ef:	dec    edi
  4226f0:	loope  0x42272b
  4226f2:	repnz xchg edi,eax
  4226f4:	fild   WORD PTR [eax+0x15]
  4226f7:	add    BYTE PTR [ebx+0x718440e5],dl
  4226fd:	(bad)  
  4226fe:	mov    esi,0xd5d8a2d6
  422703:	imul   edi,DWORD PTR [esi+0x4c3a97b6],0xffffffa0
  42270a:	and    al,0xd8
  42270c:	pop    edx
  42270d:	loop   0x4226ba
  42270f:	push   ebx
  422710:	push   ds
  422711:	ret    0x5b44
  422714:	mov    al,ds:0xe2327728
  422719:	daa    
  42271a:	xchg   ecx,eax
  42271b:	mov    ecx,0x4eb0f76d
  422720:	pop    esp
  422721:	pop    esi
  422722:	stos   DWORD PTR es:[edi],eax
  422723:	sti    
  422724:	test   eax,0x5620933c
  422729:	adc    BYTE PTR [edi+ebx*2],ch
  42272c:	stos   DWORD PTR es:[edi],eax
  42272d:	scas   eax,DWORD PTR es:[edi]
  42272e:	push   eax
  42272f:	aas    
  422730:	jmp    FWORD PTR [ebp-0x25c8f88b]
  422736:	leave  
  422737:	shl    DWORD PTR [ebx-0x33],cl
  42273a:	neg    BYTE PTR [eax+0x74291dd6]
  422740:	dec    ecx
  422741:	xchg   ebp,eax
  422742:	jae    0x4226ef
  422744:	imul   BYTE PTR [esp+edx*1-0x52e1814b]
  42274b:	stos   DWORD PTR es:[edi],eax
  42274c:	arpl   WORD PTR [edx+0x3ac73ad2],di
  422752:	or     bh,BYTE PTR [edi+0x40]
  422755:	shl    BYTE PTR [eax],0xb3
  422758:	je     0x422777
  42275a:	daa    
  42275b:	in     al,dx
  42275c:	mov    dl,0x4d
  42275e:	popa   
  42275f:	in     al,0x90
  422761:	mov    ch,0x1
  422763:	int    0xa0
  422765:	dec    ebp
  422766:	mov    dh,0x87
  422768:	sar    BYTE PTR [ebx+0x4c],cl
  42276b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42276c:	mov    bh,0x17
  42276e:	(bad)  
  42276f:	fst    QWORD PTR [ebp+eiz*1+0x5d]
  422773:	ins    DWORD PTR es:[edi],dx
  422774:	(bad)  
  422775:	ins    BYTE PTR es:[edi],dx
  422776:	cmp    edi,ebp
  422778:	fiadd  DWORD PTR [eax]
  42277a:	xchg   esp,eax
  42277b:	push   eax
  42277c:	dec    edi
  42277d:	dec    eax
  42277e:	outs   dx,DWORD PTR ds:[esi]
  42277f:	and    al,0xf8
  422781:	jno    0x4227ef
  422783:	jbe    0x42271c
  422785:	ror    DWORD PTR ds:0x54a2c058,0x6f
  42278c:	dec    edi
  42278d:	ds (bad) 
  42278f:	(bad)  
  422790:	pop    ebp
  422791:	lea    esp,[edi+0x40]
  422794:	adc    bl,BYTE PTR [ecx+0x22846dc8]
  42279a:	retf   0xc39d
  42279d:	fs je  0x4227d3
  4227a0:	retf   0x7cd4
  4227a3:	cli    
  4227a4:	xor    al,0xfa
  4227a6:	cmc    
  4227a7:	test   BYTE PTR [eax],bl
  4227a9:	clc    
  4227aa:	jl     0x422769
  4227ac:	jle    0x422744
  4227ae:	ret    0x8a19
  4227b1:	mov    esi,0x78bd1cad
  4227b6:	repz dec edi
  4227b8:	mov    eax,0x7b4da472
  4227bd:	ja     0x422831
  4227bf:	pop    eax
  4227c0:	fcmovnu st,st(0)
  4227c2:	push   edi
  4227c3:	push   0xf17db1f
  4227c8:	test   al,0x3c
  4227ca:	les    esi,FWORD PTR [esi+ecx*4-0x2959ce6a]
  4227d1:	and    al,0x4
  4227d3:	bound  eax,QWORD PTR [ebp-0x46]
  4227d6:	ja     0x4227a6
  4227d8:	and    eax,0xbeef25a4
  4227dd:	fdivr  st(1),st
  4227df:	push   edi
  4227e0:	sbb    al,0xc
  4227e2:	call   0x1dc97b88
  4227e7:	sub    DWORD PTR [eax+0x36ab248f],ebx
  4227ed:	fidiv  WORD PTR [edi+0x73be42af]
  4227f3:	push   cs
  4227f4:	test   DWORD PTR [esi+edi*8-0x665cab60],edi
  4227fb:	pusha  
  4227fc:	xlat   BYTE PTR ss:[ebx]
  4227fe:	pop    ss
  4227ff:	xor    al,0x24
  422801:	sar    DWORD PTR [ebp+0x482de40a],cl
  422807:	imul   ebx,DWORD PTR [ebp+0x27],0xffffffa3
  42280b:	push   edi
  42280c:	(bad)  
  42280d:	loop   0x42280e
  42280f:	sub    eax,0x98a16c20
  422814:	or     BYTE PTR [edi+0xc064150],0x31
  42281b:	aam    0x26
  42281d:	pcmpgtw mm2,QWORD PTR [eax-0x7bf595f0]
  422824:	test   DWORD PTR ds:0x28dff133,0x5c536225
  42282e:	lods   al,BYTE PTR ds:[esi]
  42282f:	popf   
  422830:	loopne 0x422802
  422832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422833:	dec    ecx
  422834:	call   0xd47a:0x1a1aae74
  42283b:	sub    BYTE PTR [edi+0x1c],0x72
  42283f:	out    0x29,eax
  422841:	adc    eax,0xb9384d84
  422846:	cdq    
  422847:	arpl   WORD PTR [eax-0x32],dx
  42284a:	dec    edi
  42284b:	loopne 0x422854
  42284d:	jne    0x4228c5
  42284f:	ja     0x42284f
  422851:	mov    gs,WORD PTR [ebx+0x3e]
  422854:	out    dx,eax
  422855:	mov    dh,0xff
  422857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422859:	shl    DWORD PTR [esp+ebx*1],1
  42285c:	cwde   
  42285d:	imul   edx,DWORD PTR [ebx],0x810b069b
  422863:	dec    eax
  422864:	ss jae 0x422892
  422867:	sbb    esi,DWORD PTR [edx*1+0x62947f17]
  42286e:	cmp    bl,BYTE PTR [ebx+0x45]
  422871:	mov    dh,0x6b
  422873:	cmp    eax,0x27b8054f
  422878:	xor    BYTE PTR [esi+edx*8-0x49084694],bh
  42287f:	dec    eax
  422880:	cmp    ah,bh
  422882:	int3   
  422883:	push   esi
  422884:	sbb    al,0x2d
  422886:	sbb    eax,0x1d26ed5a
  42288b:	pop    ecx
  42288c:	mov    ah,0xa3
  42288e:	jae    0x422853
  422890:	test   al,0x17
  422892:	inc    eax
  422893:	ret    
  422894:	sahf   
  422895:	push   0xcb3b7ff2
  42289a:	cmp    ebp,esi
  42289c:	jmp    0xa6de:0x33ff0a9
  4228a3:	mov    al,ds:0x7b85c0e9
  4228a9:	aas    
  4228aa:	retf   
  4228ab:	in     eax,dx
  4228ac:	ss in  al,dx
  4228ae:	ja     0x42285e
  4228b0:	mov    dl,0xb1
  4228b2:	test   ebx,edx
  4228b4:	fisub  DWORD PTR [ecx-0x45]
  4228b7:	xchg   BYTE PTR [esi-0x6c],dh
  4228ba:	retf   0x7261
  4228bd:	loope  0x422901
  4228bf:	aam    0xee
  4228c1:	outs   dx,DWORD PTR ds:[esi]
  4228c2:	jmp    0x4228b0
  4228c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228c5:	and    eax,0x860e0e14
  4228ca:	adc    DWORD PTR [ebp+0x78bf710d],edx
  4228d0:	test   eax,0x8b9aa5df
  4228d5:	pop    ds
  4228d6:	lds    ebx,FWORD PTR [ecx-0x53888ea4]
  4228dc:	cmp    ecx,eax
  4228de:	mov    BYTE PTR [edx],dh
  4228e0:	out    0xf5,al
  4228e2:	retf   
  4228e3:	add    eax,0xe77f3778
  4228e8:	mov    esp,0xd7a69ee3
  4228ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228ee:	push   ecx
  4228ef:	nop
  4228f0:	push   ss
  4228f1:	jecxz  0x42292d
  4228f3:	jb     0x4228b9
  4228f5:	popf   
  4228f6:	(bad)  
  4228f7:	mov    bh,bl
  4228f9:	out    dx,eax
  4228fa:	cmp    BYTE PTR [edx-0x77],0xc6
  4228fe:	jnp    0x42293a
  422900:	jmp    0xed962298
  422905:	mov    ebp,0xd8bec94e
  42290a:	(bad)  ds:0x2e2c6df9
  422910:	push   esi
  422911:	lea    esi,[esi]
  422913:	fist   WORD PTR [edx]
  422915:	xor    eax,eax
  422917:	mov    esp,ebp
  422919:	pop    ebp
  42291a:	ret    0x10
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
